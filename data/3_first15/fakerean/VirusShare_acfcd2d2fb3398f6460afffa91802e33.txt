add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
popa
cmp
decl
decl
test
mov
push
inc
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
xlat
popa
inc
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
pop
cmp
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
sub
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
out
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
ret
inc
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
repz
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
xor
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
pop
pop
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
pusha
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
inc
inc
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
pop
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
fs
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
fldt
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
push
inc
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
das
inc
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
adc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
leave
bound
add
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
sti
pop
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
sbb
inc
add
sbb
incl
sarb
mov
int3
and
add
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
xlat
cmp
add
ret
lea
call
mov
cmp
jne
mov
mov
mov
inc
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
clc
push
inc
add
mov
jmp
mov
push
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
scas
xor
cmp
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
push
bound
add
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
pop
call
in
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
push
push
call
mov
lods
add
jmp
repnz
scas
ljmp
add
mov
into
loop
add
mov
add
lds
add
add
std
add
cld
adc
add
cmpsl
test
jge
pusha
add
scas
add
ret
mov
push
mov
add
push
push
push
call
addr16
add
add
add
add
mov
mov
mov
mov
aam
stos
sti
jb
add
add
add
into
mov
loop
popa
out
shl
icebp
add
pop
popl
push
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
mov
add
add
fdivl
add
mov
cltd
add
lock
roll
add
push
test
mov
fadds
pushf
add
stc
fwait
mov
add
add
pop
mov
cmpsl
add
pop
push
push
push
lea
push
lea
push
call
add
aam
loopne
add
add
add
in
add
in
add
xchg
add
add
loope
js
mov
in
leave
fiadds
loope
mov
mov
push
stc
enter
addl
addb
mov
je
add
add
rclb
enter
in
add
add
lcall
add
add
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
xchg
add
add
add
push
scas
add
add
notl
xchg
jle
jle
roll
mov
fsubs
add
shrl
cmc
add
pop
push
push
push
push
push
push
lea
push
call
popa
cwtl
cld
mull
add
jbe
mov
add
mov
int
stos
add
pop
add
xchg
flds
pusha
aad
movsl
xchg
xchg
divb
add
xchg
mov
add
leave
fcom
pop
add
bound
pop
call
call
push
push
call
jecxz
mov
int
mov
lods
jmp
mov
add
leave
mov
add
shlb
out
add
add
add
int
loop
ja
mov
lea
pop
push
call
push
push
call
movl
add
imul
add
add
stos
les
push
add
jns
add
add
add
mov
xchg
add
roll
mov
lea
pop
jmp
push
push
push
push
push
push
push
push
push
call
in
call
hlt
nop
mov
jbe
xchg
add
clc
mov
push
lret
mov
out
into
mov
mov
add
xchg
push
mov
lock
push
test
mov
cli
ja
stos
add
scas
fldl
nop
data16
jae
add
add
bound
add
add
testb
sahf
test
pop
ret
push
lea
push
push
push
push
call
add
into
add
add
add
add
push
add
xchg
xchg
add
mov
out
pop
mov
pop
xchg
int
fmulp
mov
jp
add
jne
add
test
add
xchg
add
je
jae
add
add
mov
pop
fmul
add
add
mov
lea
pop
mov
mov
push
push
call
in
arpl
ret
add
out
mov
add
fs
add
add
add
xchg
add
lods
add
add
scas
aad
mov
int3
movsb
ljmp
fmull
pop
in
push
lea
push
push
call
add
arpl
add
add
add
add
add
lods
mov
scas
stc
mov
add
addl
jbe
jnp
cmpsb
fldenv
jns
jne
cmpsb
pop
add
shr
add
sahf
add
add
scas
add
xorb
rolb
pop
add
add
data16
xchg
add
add
test
add
aam
bound
pop
add
add
push
push
lea
push
push
lea
push
push
push
call
jo
clc
jae
mov
add
add
test
mov
leave
loopne
gs
lcall
movsl
add
xchg
pop
add
mov
add
out
add
add
add
jmp
add
mov
lea
pop
mov
xor
push
push
add
push
xor
add
xor
inc
sub
sub
pop
rol
pop
push
push
lea
push
push
push
push
push
push
call
add
addr16
add
add
push
add
add
scas
add
add
add
scas
imul
add
mov
rolb
add
add
popa
mov
add
cmc
add
lea
pop
pushl
push
push
lea
push
push
call
add
pop
hlt
add
xchg
ljmp
out
mov
stc
mov
loop
add
out
mov
flds
mov
test
insb
popa
pop
lcall
mov
aam
mov
add
pop
call
mov
push
lea
push
push
push
push
lea
push
push
call
add
mov
mov
push
cltd
data16
add
lahf
add
add
push
xchg
aam
mov
add
add
xchg
in
mov
out
add
add
add
pop
movl
push
push
push
push
push
lea
push
push
push
push
call
jns
enter
pusha
add
jp
pop
add
clc
outsl
cmc
stc
add
add
aam
add
add
mov
cmc
jnp
adc
jo
shr
add
filds
flds
add
add
movb
push
cwtl
pop
add
push
add
ljmp
add
push
roll
jge
mov
fwait
mov
rcrl
mov
fidivs
fucomip
jl
add
pop
lea
push
lea
push
push
lea
push
push
push
call
xchg
add
add
insb
add
add
add
mov
add
fs
adcl
scas
flds
imul
adcb
in
add
add
jge
cli
mov
lds
fsub
jb
mov
lea
pop
push
pushl
push
lea
push
push
push
push
push
push
call
add
xlat
add
push
ja
add
add
push
xorb
add
test
jnp
jnp
add
pop
mov
movsl
addb
add
int3
lea
pop
pushl
call
push
push
lea
push
push
push
push
call
fdivrp
add
pop
lret
mov
mov
add
add
mov
pushf
add
pusha
fcomps
add
add
add
lds
add
jae
add
add
cmpsl
add
mov
outsl
pop
add
stos
jne
mov
lods
xchg
add
xchg
fstpt
cltd
out
faddl
bnd
mov
cli
add
add
pop
pushl
pushl
push
push
push
push
push
push
push
push
call
add
loope
mov
stos
add
pop
mov
push
loop
sahf
add
popl
add
add
xchg
mov
icebp
nop
add
aad
mov
add
add
add
add
clc
cld
lret
add
imul
int
add
add
xchg
into
movsl
call
in
add
add
add
mov
lea
pop
call
push
push
ror
push
or
inc
add
sub
inc
sub
ror
ror
add
pop
pop
push
push
push
push
call
lret
add
add
flds
add
add
xorl
int3
add
cltd
lock
cld
add
xchg
test
fsubr
sarb
add
stc
add
int
roll
add
loopne
add
addr16
fwait
jno
add
jns
scas
add
add
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
add
lahf
std
fstpl
push
icebp
mov
roll
add
fildl
add
add
add
push
pop
je
push
add
popl
out
clc
jno
add
add
add
xchg
add
add
mov
incb
jmp
mov
scas
popl
fwait
add
lods
cld
addl
add
stos
mov
mov
lea
pop
call
push
push
push
call
xchg
repnz
cli
add
jecxz
lods
add
add
popa
insb
pop
add
mov
add
mov
rcl
roll
add
out
add
movsl
mov
out
addr16
fnop
sub
add
add
mov
add
fists
add
add
add
or
push
push
push
rol
add
sub
push
or
inc
add
add
sub
dec
shl
add
ror
pop
inc
add
pop
push
lea
push
push
push
lea
push
push
call
mov
add
data16
push
add
test
add
not
add
add
add
jmp
js
leave
jns
add
add
add
add
pop
push
push
push
lea
push
call
cld
add
jbe
mov
add
xchg
add
push
pushf
mov
jo
mov
add
add
push
pop
pushf
mov
add
out
add
add
pop
add
add
stos
push
scas
jae
movsb
add
jl
add
std
addr16
jns
in
mov
add
lret
add
mov
mov
nop
lea
js
push
add
add
popf
mov
lea
pop
push
push
push
push
push
push
push
push
lea
push
call
jns
xchg
jmp
imul
add
iret
add
cmpsl
in
ljmp
add
mov
add
add
jmp
push
insb
add
add
div
add
stos
jecxz
add
hlt
out
addb
xchg
les
rclb
adc
iret
in
fs
popl
mov
push
add
add
push
mov
movsb
pop
jle
cmpl
fildl
add
pop
pop
movsl
ficomps
jl
lds
add
add
call
ja
push
icebp
xchg
out
in
add
add
pop
mov
push
lea
push
lea
push
call
fstpl
movsb
loop
mov
add
jno
mov
loopne
fiadds
jl
add
lods
fldcw
add
add
xchg
add
add
aad
jb
mov
add
add
mov
add
icebp
push
fisubrl
add
push
mov
add
int
test
int
add
mov
pop
scas
scas
lahf
mov
lea
pop
push
push
push
push
push
push
call
js
add
lea
push
jp
shl
sahf
cmc
add
into
lock
fwait
add
loopne
shll
enter
add
add
add
lea
add
add
in
add
rorb
pop
test
lea
ljmp
mov
add
add
add
fwait
mov
lea
pop
push
push
lea
push
push
call
jbe
add
mov
add
add
aad
mov
add
pop
add
mov
lcall
rolb
pop
sti
xchg
test
add
add
flds
shlb
add
push
cltd
test
lds
add
cld
addb
add
add
pop
add
mov
lea
pop
mov
push
lea
push
call
mov
faddl
add
add
xchg
fstl
lods
mov
cltd
add
mov
add
andb
div
stos
rolb
add
data16
add
je
fidivs
addr16
add
rcll
pop
pop
xchg
movl
jbe
clc
add
add
add
jbe
jle
jo
add
ja
testl
jne
mov
add
mov
cld
lea
pop
add
push
push
push
call
add
mov
add
fldcw
pushf
imul
add
add
add
add
test
js
arpl
into
add
arpl
add
add
cmpl
out
cmpsl
shl
add
cmpsl
rcl
jb
test
mov
fildl
xchg
mov
lea
pop
add
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
xchg
pop
add
mov
add
cmc
insb
in
scas
add
ffreep
add
repnz
add
add
scas
add
icebp
pop
addb
push
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
push
call
inc
arpl
out
jnp
testl
lea
out
stos
add
add
add
repnz
enter
in
add
stc
add
add
lods
mov
mov
add
add
lds
add
aam
bound
pop
mov
xor
push
push
call
add
sahf
add
add
call
popl
mov
mov
add
mov
pop
test
pop
les
cbtw
lods
cmpsl
add
in
insb
je
hlt
push
roll
loope
leave
lods
add
jo
test
fcomps
popa
mov
ret
mov
add
add
push
ljmp
pusha
or
jne
push
push
push
lea
push
call
xchg
add
add
add
sti
add
cmpsb
add
pop
roll
add
icebp
add
shll
jnp
sahf
xlat
std
add
fcomp
lret
roll
add
popa
add
pusha
ljmp
push
mov
add
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
push
ja
cmpsl
cmpl
add
loop
add
add
push
notb
pusha
pop
add
fiadds
mov
add
pop
add
pusha
in
mov
fsubs
sarl
les
add
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
mov
gs
push
add
add
add
clc
add
jo
mov
mov
mov
fwait
xchg
fcoms
mov
add
lea
pop
add
push
push
push
push
push
push
push
push
push
call
mov
jge
push
xchg
jo
stos
mov
add
fsub
add
add
in
iret
add
rcr
ja
js
rcl
add
add
add
pop
add
mov
add
js
in
mov
incb
push
mov
add
mov
test
pop
add
push
push
push
push
push
push
call
call
add
add
int
xchg
add
mov
jne
add
add
in
jb
add
hlt
vpmacssdql
add
add
push
mov
mov
add
pop
jno
fxch
add
pop
jmp
mov
xchg
movsl
rcrb
mov
cld
sti
xchg
scas
lods
xchg
add
mov
pushfw
mov
les
mov
push
push
lea
push
push
push
lea
push
push
call
loope
mov
call
add
pushf
add
movsl
shl
mov
add
cmpsl
mov
icebp
add
movsb
mov
add
mov
pop
jae
mov
add
jmp
add
enter
add
add
add
jmp
pop
mov
add
mov
mov
add
out
add
push
repnz
lea
pop
xor
push
push
lea
push
call
cwtl
add
mov
cli
add
add
in
movl
enter
add
addb
in
fldenv
icebp
popa
add
cmc
rcr
aam
add
test
call
add
add
mov
pop
movl
shlb
push
iret
add
add
push
enter
sarl
add
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
add
pop
add
push
clc
add
add
stos
mov
add
add
add
stos
mov
xchg
mov
mov
add
xchg
icebp
add
aad
add
cld
arpl
add
mov
jmp
xchg
enter
add
add
add
mov
lea
pop
push
push
push
lea
push
lea
push
call
int
add
add
mov
add
fildl
mov
add
jns
testl
jle
lods
add
je
add
mov
add
mov
xchg
aam
roll
add
mov
enter
mov
add
add
add
add
cld
lods
xchg
insb
add
add
scas
testl
add
add
test
adc
inc
or
pop
jae
push
push
push
lea
push
push
push
push
push
push
push
call
lods
fsubp
fiaddl
orl
mov
mov
iret
mov
int3
std
sbbl
movb
mov
imul
xchg
add
mov
jmp
xchg
sbb
add
pop
xor
push
push
lea
push
push
push
push
push
lea
push
push
call
add
rcrl
mov
out
in
filds
fsubrl
add
add
lret
add
add
add
cld
mov
add
add
add
negl
addl
mov
add
ljmp
lahf
jbe
add
ret
add
rolb
mov
lea
pop
add
push
push
call
out
mov
push
pop
add
js
out
test
pop
add
push
arpl
add
add
mov
fsubl
add
rcr
mov
mov
rol
idivb
jmp
mov
lea
pop
sub
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
pop
push
jmp
add
js
add
jnp
add
jp
add
mov
movsb
int
add
mov
roll
add
mov
pop
add
test
imul
lea
pop
rep
push
push
push
push
push
push
lea
push
push
push
call
sahf
add
hlt
add
data16
mov
int
fildl
cltd
testb
push
mov
jecxz
add
outsl
add
imul
into
jl
add
mov
test
add
cmpsb
add
ret
jmp
add
add
scas
flds
add
sar
add
addl
cmc
lea
lahf
add
add
and
pop
push
push
push
push
push
push
push
push
call
hlt
xchg
add
in
ret
enter
fcoms
add
pop
xorb
movsl
ljmp
add
rol
add
cld
push
loope
mov
mov
lea
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
int
add
add
mov
add
scas
add
add
lret
rclb
add
lock
in
rolb
movb
mov
lock
lods
stos
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
call
add
outsl
mov
add
mov
lret
add
add
hlt
add
add
jp
fsubp
add
add
pusha
cmpsl
rcrb
aam
mov
in
add
mov
jle
add
add
xchg
test
add
into
out
add
imul
cld
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
lds
add
rolb
mov
add
mov
jecxz
add
add
add
stc
jns
in
pop
push
pop
mov
push
pop
mov
lahf
std
stc
add
stos
add
imul
imul
lret
add
xchg
lods
add
push
cmpsb
in
add
in
fidivs
enter
aam
bound
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
filds
add
cmc
add
mov
mov
je
add
add
mov
int
mov
pop
mov
add
fs
add
stos
jmp
testb
mov
lea
pop
mov
xor
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
insb
pop
xchg
add
xchg
add
mov
jl
fildll
add
add
fldl
out
add
std
add
fisubl
scas
imul
add
jecxz
mov
push
imul
mov
into
out
add
pop
add
mov
xchg
add
add
jecxz
add
stos
fdiv
push
add
mov
lea
pop
mov
xor
push
push
push
push
push
push
lea
push
push
call
test
in
pop
lods
mov
add
lods
stc
add
jno
add
scas
lahf
iret
mov
jge
cwtl
pop
add
add
add
repnz
add
lea
mov
lods
mov
call
add
add
imul
and
dec
sub
pop
jae
push
push
push
push
lea
push
push
push
push
call
mov
sahf
stc
out
add
jne
add
leave
jnp
add
add
lods
je
outsl
add
xchg
add
add
outsl
cwtl
jp
add
leave
fst
jb
mov
rcll
data16
mov
add
xchg
add
add
push
add
in
jne
mov
lea
pop
xor
push
push
call
movb
mov
shr
add
pusha
imul
add
add
add
add
push
add
xchg
cltd
mov
add
jb
addb
movsb
add
add
jle
add
enter
add
add
cmpb
add
pop
push
out
add
mov
jmp
mov
add
add
lahf
add
add
add
addl
fs
lea
pop
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
lods
push
mov
bnd
xlat
icebp
add
add
test
xchg
add
pop
stos
mov
add
add
flds
add
add
xchg
sub
test
push
cli
push
add
enter
jp
add
add
add
add
add
add
std
add
mov
flds
lea
pop
add
add
push
push
lea
push
push
lea
push
call
cltd
add
add
add
add
add
add
aam
ret
imul
add
add
push
mov
add
add
add
stc
add
jmp
add
add
add
add
mov
mov
jns
out
mov
lea
pop
mov
push
push
xor
not
push
or
inc
add
lea
sub
dec
lea
pop
add
pop
push
lea
push
lea
push
call
ljmp
mov
test
imul
mov
imul
pop
lcall
aad
lret
stc
mov
add
pushf
mov
ret
mov
lret
xchg
in
add
mov
pushf
add
mov
lea
pop
pushl
call
push
push
push
call
imul
jne
fwait
cmpsb
add
ja
cmpsb
add
add
add
cli
xchg
add
add
mov
test
pop
lods
pop
lods
add
lods
add
insb
mov
add
add
mov
add
movl
fmull
add
xchg
add
add
dec
push
or
inc
add
xor
sub
ror
xor
pop
ror
dec
pop
push
push
push
push
lea
push
push
push
call
mov
movsb
jecxz
jmp
int
mov
scas
add
add
add
mov
add
lret
add
test
fisubrs
mov
cmpsl
xchg
ljmp
add
aam
mov
add
fadd
int
mov
add
pop
int
insb
add
cmpl
les
push
push
lea
pop
call
mov
push
sub
shr
rol
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
stos
ret
push
add
add
imul
out
mov
add
fsts
in
int3
cld
cmpsb
mov
aam
insb
lahf
add
jmp
mov
add
mov
out
fsubrs
jae
add
shl
add
pop
add
std
fldl
add
leave
lods
filds
roll
rclb
int
out
fsubs
mov
lea
pop
push
push
xor
dec
lea
pop
mov
push
sub
not
shl
pop
add
push
shl
xor
sub
sub
pop
add
push
lea
push
call
add
lds
imul
add
add
mov
test
jbe
fstpt
test
sbbb
loop
outsl
add
rol
add
add
shll
pop
add
add
mov
lea
pop
add
push
push
push
lea
push
push
push
push
call
rolb
into
add
mov
add
mov
push
out
je
push
add
xchg
add
add
add
int3
add
cld
xchg
ret
jmp
add
xchg
add
add
add
jecxz
pop
jge
mov
lea
pop
mov
push
push
lea
push
call
mov
jae
jp
add
stos
arpl
mov
add
mov
add
lea
sti
add
stc
into
rolb
loope
addb
pop
add
add
add
add
addb
test
pop
xor
push
lea
push
push
push
push
push
lea
push
push
call
add
add
rcrl
into
add
pusha
add
arpl
jl
xchg
les
movsb
add
add
pop
add
scas
addb
add
std
add
pop
in
rorb
add
in
add
add
xchg
xchg
lcall
add
add
loope
mov
lea
pop
add
push
push
push
push
lea
push
push
push
lea
push
call
fadds
mov
cltd
add
ljmp
cwtl
jmp
scas
add
scas
repnz
jno
push
mov
add
xchg
mov
shl
add
loopne
mov
in
popa
add
mov
add
insb
add
add
push
out
add
cld
add
int3
add
and
jne
push
push
shl
inc
add
shr
pop
mov
xor
push
not
sub
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
push
call
xchg
add
lahf
add
lahf
test
add
filds
stos
add
push
into
add
add
add
add
faddl
scas
add
push
cmpsb
cmpsb
add
mov
pusha
mov
sahf
shrl
mov
lds
jmp
mov
xchg
mov
test
testl
lahf
idivb
mov
add
add
pop
pop
push
push
lea
push
push
push
push
lea
push
call
mov
add
add
data16
pop
mov
popa
mov
fcom
mov
pop
mov
mov
shlb
lods
add
add
pushf
mov
mov
rolb
roll
fstl
lea
pop
mov
push
push
push
push
push
call
push
add
add
cmpsl
add
addb
int
sub
add
add
add
xchg
test
add
jmp
jle
rcrb
faddl
incb
rcll
add
jne
add
push
rolb
add
nop
xchg
lods
add
jp
jle
pushaw
jbe
add
add
add
incb
add
test
adc
or
push
lea
push
push
push
push
push
lea
push
push
push
call
jae
mov
add
imul
test
stos
sbb
jae
add
add
add
add
jns
mov
std
add
add
lea
pop
add
push
push
call
add
mov
push
pop
je
add
test
int
add
mov
mov
addr16
xchg
push
subb
add
in
lods
cltd
add
add
mov
scas
jecxz
add
int
mov
sti
add
mov
mov
lea
pop
rep
push
push
push
push
call
repnz
js
add
shl
add
int3
add
xchg
out
add
mov
pop
lods
sti
add
in
lret
add
sahf
rcr
rcrl
imul
mov
add
pop
add
add
add
mov
jle
add
insb
pop
out
add
sbbl
add
out
arpl
in
movsl
add
mov
add
add
add
pop
add
pop
mov
push
push
lea
push
call
mov
ljmp
add
mov
add
rolb
cltd
les
jo
add
add
popf
add
mov
add
add
add
add
add
cwtl
iret
std
out
out
shl
add
pop
fisubs
add
add
add
insb
add
mov
add
and
add
lret
add
aam
bound
pop
xor
push
push
push
lea
push
push
call
pop
mov
les
test
cwtl
xchg
lcall
pusha
pop
pop
leave
pop
xchg
cli
stc
add
add
add
stos
iret
add
mov
nop
push
jae
add
add
hlt
add
mov
add
xchg
mov
jbe
mov
pop
jecxz
data16
aad
roll
stos
filds
jle
mov
lea
pop
add
push
rol
shr
pop
or
je
push
add
sub
dec
pop
mov
push
push
push
push
push
push
push
push
push
call
int
add
mov
push
push
add
call
call
mov
add
data16
test
imul
fwait
xchg
add
lock
std
add
add
mov
pop
add
jae
shll
add
sbb
jmp
scas
add
add
shrl
add
add
push
add
arpl
pop
xor
push
push
lea
push
call
mov
cmpb
pop
add
add
add
addl
fcomip
add
add
push
pushf
stc
add
ljmp
in
loopne
mov
lea
pop
add
push
not
pop
mov
xor
push
lea
push
call
add
jle
leave
into
add
fs
addl
outsl
rolb
popf
stos
push
cmc
add
pop
rolb
into
fbld
pop
rorl
pop
pop
add
rclb
add
add
jo
jmp
rolb
mov
lea
add
pop
push
stos
mov
lea
pop
add
push
sub
ror
ror
pop
add
push
push
push
push
lea
push
call
fistl
pop
scas
add
hlt
mov
fstpl
jns
mov
add
add
add
add
xchg
mov
loop
mov
loop
jp
les
push
push
push
call
rolb
jbe
lcall
cmc
jbe
push
jnp
test
add
aad
add
jne
popa
add
add
add
mov
add
xchg
js
add
popa
add
push
mov
addr16
aad
scas
add
xchg
mov
gs
fiaddl
add
sub
mov
lea
pop
mov
push
push
push
push
push
push
push
call
les
lcall
iret
mov
mov
sahf
lea
add
js
push
add
push
mov
jb
mov
out
bound
add
add
add
movsl
mov
add
mov
aam
bound
pop
xor
push
push
lea
push
push
push
push
call
lret
cltd
jmp
push
add
ja
pop
add
push
jne
outsl
addb
add
cmc
add
push
ljmp
add
mov
add
test
filds
int3
add
push
mov
lea
pop
add
push
push
push
push
call
mov
js
xchg
cmc
add
mov
jb
lock
cmpsl
add
int
out
add
xchg
add
jno
add
add
add
mov
rolb
lret
add
sarb
stos
add
lods
lds
add
add
xchg
cmpsl
xchg
push
test
mov
jns
fs
shr
xchg
add
mov
lret
mov
lea
pop
add
pop
push
lea
push
push
call
outsl
test
stos
pusha
add
xchg
in
mov
add
cmc
jp
add
add
lahf
add
add
add
xchg
add
add
gs
adc
jbe
add
add
movsb
add
mov
mov
mov
ljmp
add
roll
mov
int3
lea
pop
rep
push
xor
add
pop
mov
push
push
lea
push
lea
push
lea
push
call
jecxz
int3
fucomi
add
add
stc
cmpb
addr16
push
fwait
add
ror
add
roll
add
add
std
add
add
fiaddl
add
call
mov
lea
pop
xor
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
cmc
mov
mov
lcall
cmpsb
add
add
xchg
cwtl
mov
popa
in
pop
int3
cmpsl
imul
nop
xchg
add
data16
xchg
addr16
mov
push
fiaddl
je
add
add
pop
loop
addl
jne
notl
sahf
mov
lods
xchg
xchg
add
pushf
mov
lea
pop
add
push
push
call
ret
add
iret
add
idivb
add
pop
out
mov
mov
int
fldt
cmpsb
add
jle
add
mov
jp
aad
add
pop
fiaddl
add
imul
enter
mov
add
xchg
add
add
add
cmpsb
add
icebp
pop
flds
mov
lea
pop
or
je
push
dec
xor
pop
mov
push
push
call
add
add
add
add
add
shlb
les
add
test
cltd
fucomp
cltd
add
add
add
aad
pop
push
add
mov
add
test
add
les
mov
add
add
mov
lods
add
add
add
lahf
add
xor
pop
mov
lea
pop
add
push
push
push
push
push
lea
push
call
add
add
mov
fistpll
stos
rol
add
xchg
lds
testl
lret
int
add
add
add
loop
cmc
scas
add
out
xchg
lahf
add
mov
jb
aam
bound
pop
add
rep
push
lea
pop
pop
push
push
not
push
and
add
sub
dec
sub
sub
inc
ror
pop
shl
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
fsubrl
jmp
add
mov
add
push
add
shlb
add
add
arpl
add
add
hlt
insb
fwait
mov
lret
cwtl
mov
out
fs
add
add
add
add
mov
add
mov
fs
int3
add
imul
mov
lea
pop
pop
push
rol
pop
mov
push
push
lea
push
push
push
push
push
push
call
add
mov
jmp
enter
stos
fs
fmulp
movsb
add
roll
ret
mulb
pusha
mov
mov
add
add
add
mov
add
scas
add
mov
incb
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
call
ja
add
pop
add
add
jp
pop
add
mov
mov
into
add
add
addl
cmpsl
loop
fidivs
jne
add
pop
mov
push
push
push
lea
push
push
lea
push
push
call
add
movb
add
jbe
jne
roll
in
add
test
add
insb
out
pop
add
add
in
lret
mov
idivb
mov
push
mov
pop
fmull
pop
jmp
push
push
push
push
push
call
stc
lret
mov
mov
aad
bound
add
add
add
pushaw
add
fwait
popa
jecxz
out
shl
in
add
frstor
jns
int
xchg
roll
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
call
add
cwtl
mov
add
add
jp
add
jecxz
test
stos
xlat
add
add
iret
add
insb
add
clc
add
pop
popa
add
data16
std
add
add
into
pop
cmpsb
adcl
clc
in
add
add
lea
pop
mov
add
push
push
push
push
push
call
scas
bound
int3
testl
add
xchg
lods
add
subb
in
xchg
adcl
add
push
pop
mov
stos
cltd
add
lret
pop
stc
iret
arpl
movsl
add
int3
mov
xchg
jmp
add
lea
pop
push
push
push
add
pop
push
push
push
push
push
call
add
loopne
call
add
mov
jmp
jbe
mov
imul
addb
pop
movsl
je
add
xlat
add
add
add
xchg
arpl
xchg
xchg
imul
faddl
jb
add
add
add
mov
add
jb
fcoml
lock
pop
add
add
mov
lea
pop
push
push
xor
dec
pop
mov
push
push
push
lea
push
push
push
push
call
ror
add
add
f2xm1
pop
rolb
add
cld
add
aad
leave
roll
fucomi
add
xchg
outsl
add
add
movsl
add
mov
add
add
add
add
add
jecxz
lds
cld
mov
lea
pop
pop
pop
push
add
not
sub
rol
pop
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
cltd
add
add
in
add
add
mov
jbe
add
fcmovne
out
add
int
add
cmc
mov
ljmp
lock
fmull
leave
push
push
push
lea
push
lea
push
push
push
push
call
enter
les
add
fiadds
iret
fcmovb
xchg
pop
test
nop
mov
add
add
frstor
rclb
out
xchg
add
scas
add
into
fstps
in
add
xchg
add
stc
add
pushf
jge
add
add
pop
add
add
int
fmull
pop
ret
push
push
push
lea
push
lea
push
push
push
push
call
xchg
mov
add
add
nop
mov
addl
add
jb
jmp
jmp
incb
jp
stc
pop
imul
imul
add
loope
add
add
xchg
fcompl
add
nop
jae
movsw
add
xchg
int
cmpsl
add
add
add
mov
add
push
fwait
hlt
roll
mov
lea
pop
push
push
push
lea
push
call
fsubrl
loope
mov
fs
jl
add
roll
rcl
add
push
in
add
add
add
je
pushf
popa
add
add
cld
enter
lea
pop
mov
add
push
push
lea
push
push
push
call
enter
add
cltd
add
fimuls
jmp
mov
iret
aad
gs
mov
add
rol
roll
testl
movl
add
lock
add
add
lea
pop
push
push
push
not
pop
push
push
push
push
lea
push
push
lea
push
call
lret
add
cmc
add
add
pop
push
aad
push
add
xchg
fdivl
imul
flds
fsubs
add
into
out
push
mov
add
popa
jp
add
lods
testb
add
xchg
add
add
out
add
aad
add
roll
add
lret
add
rorl
bound
movl
push
push
push
call
pop
pop
mov
add
imul
pop
faddl
lcall
cmpsl
add
add
jns
add
sar
add
mov
add
add
add
hlt
mov
fwait
popa
ja
add
xchg
fisttps
add
xchg
aam
add
int
outsl
add
movsl
add
add
mov
add
lea
pop
addl
test
je
push
shl
pop
mov
push
dec
not
rol
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
call
test
fwait
int
fcomi
fiaddl
xlat
add
mov
test
imul
enter
xchg
adc
mov
add
mov
mov
push
push
add
lea
popl
cmpsb
xchg
add
cmpsb
add
rorb
aad
int3
lea
pop
pop
push
xor
pop
pop
push
lea
push
push
lea
push
push
call
jp
insb
add
add
add
stos
mov
add
push
mov
xchg
enter
add
jae
movsb
add
ljmp
push
clc
movsl
add
into
icebp
mov
add
movb
add
push
add
jns
add
add
std
jb
add
in
add
pop
add
scas
add
aam
bound
pop
leave
push
xor
ror
add
pop
ret
push
ror
lea
pop
push
push
add
shl
pop
mov
push
sub
add
pop
add
push
lea
push
call
movsb
lods
pop
adcl
jge
jl
cmpsb
out
add
push
push
xchg
jnp
bound
add
add
add
lea
add
add
add
pop
xchg
leave
mov
test
je
mov
mov
pusha
or
push
dec
pop
push
push
push
lea
push
push
call
mov
add
stos
cmpsb
add
add
stos
lret
add
pop
lock
stos
xchg
add
mov
outsl
add
test
mov
add
addb
add
add
add
add
cli
add
add
jae
add
add
add
add
flds
pop
push
push
lahf
mov
ret
repnz
jmp
data16
lods
test
mov
addr16
lea
pop
push
push
push
lea
push
call
xchg
jecxz
add
add
add
shl
mov
out
add
pop
testb
addb
out
push
add
push
xchg
add
add
mov
fiadds
push
shlb
pop
add
add
rolb
stos
notl
ja
pop
add
add
add
mov
lea
pop
push
testl
push
push
lea
push
push
push
push
push
push
push
push
call
iret
loopne
xchg
gs
add
add
mov
int3
xchg
out
js
popf
add
xlat
lret
cmpb
add
add
popa
pop
mov
add
mov
add
aam
sti
cmc
mov
add
mov
add
lahf
add
add
add
add
jae
add
les
add
mov
test
fsubrs
roll
sub
inc
or
push
push
not
xor
shl
sub
pop
call
mov
push
rol
shr
add
pop
pushl
push
push
push
push
push
push
lea
push
push
call
fldl
add
jle
add
add
push
insb
jecxz
xchg
add
mov
push
cmc
add
push
add
add
jae
pop
add
stos
add
ja
aam
fldcw
add
in
add
mov
lea
pop
push
push
rol
rol
pop
push
call
push
sub
shl
xor
pop
cmpl
jne
push
push
push
push
push
call
add
add
test
lods
add
les
add
cmpsl
and
loope
pushf
popf
xchg
jns
fisubrl
scas
testb
add
push
add
int3
cwtl
fildl
add
mov
iret
add
fdivs
mov
add
mov
add
mov
lea
pop
pop
push
xor
sub
pop
pop
pop
push
push
call
ja
add
out
test
stos
pop
add
fildl
lret
data16
cmpsl
add
add
ja
add
repnz
cli
fwait
mov
into
iret
add
ljmp
jno
mov
iret
add
pop
add
jns
push
add
add
push
push
add
ficomps
insb
push
add
pop
iret
pop
mov
or
push
xor
pop
leave
ret
push
push
push
push
push
push
push
push
push
call
mov
cwtl
lahf
ja
mov
add
add
imulb
faddl
push
ja
push
add
add
cltd
add
int3
pop
add
popa
add
icebp
add
int3
add
push
xlat
add
pushf
mov
test
jbe
add
xchg
jmp
jne
les
push
push
push
push
push
call
xchg
pop
mov
add
repnz
mov
add
xchg
mov
cmpsb
test
add
add
addb
add
test
mov
lods
jle
pop
mov
lods
xchg
cli
pop
add
add
hlt
mov
lahf
mov
mov
lea
pop
mov
add
push
pop
push
push
shl
xor
shr
pop
push
push
sub
shl
shr
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
rcrb
add
add
jb
mov
add
add
add
lods
add
subl
add
add
testb
add
add
mov
in
mov
mov
lea
pop
push
movl
push
push
push
call
pushf
add
add
roll
add
fiadds
js
add
add
xchg
mov
add
xchg
std
add
jle
mov
jmp
into
lret
mov
add
add
add
xlat
add
add
repnz
sahf
add
xchg
hlt
add
add
mov
lea
pop
push
call
push
lea
ror
add
not
pop
push
call
push
push
call
xchg
jl
stos
fistpll
add
jmp
xchg
add
cmc
loope
cmpsb
int3
jo
mov
popa
loope
add
out
scas
cmc
sarl
add
lahf
add
fcmovnbe
add
jnp
mov
hlt
lea
pop
subl
push
push
push
call
data16
add
lea
call
jb
mov
add
mov
add
add
add
add
add
pop
shl
add
add
mov
mov
mov
push
add
add
in
fiadds
add
stos
add
add
add
mov
int3
add
add
push
add
mov
lea
pop
cmpl
jne
push
push
lea
push
push
lea
push
push
push
call
faddl
add
add
mov
add
pusha
mov
add
push
add
clc
call
add
pop
call
fs
int
icebp
add
add
fbstp
nop
mov
add
jbe
add
add
mov
add
popa
add
add
add
mov
addl
mov
lea
pop
pop
push
add
xor
pop
pop
push
sub
dec
dec
pop
pop
pop
push
dec
lea
sub
sub
pop
leave
ret
push
pop
push
push
xor
pop
mov
push
lea
pop
add
push
sub
shl
pop
push
push
push
shl
xor
xor
dec
pop
push
push
push
push
push
call
add
add
out
jo
addl
lret
int3
add
add
lea
push
int3
add
add
add
sarb
push
repnz
add
add
jne
ja
add
pop
push
pop
loopne
imul
add
add
sahf
pop
clc
add
add
push
add
pop
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
imul
add
repnz
in
mov
add
add
pop
mov
xchg
add
aad
mov
add
stc
push
lcall
add
mov
scas
lea
jmp
add
outsl
call
add
sahf
add
jl
lahf
xchg
mov
mov
lea
pop
mov
push
push
push
push
push
call
add
xchg
out
std
fsubs
add
add
pusha
add
add
mov
add
add
add
sbbl
add
xchg
add
mov
jmp
jne
iret
sti
push
lret
mov
add
add
add
push
add
in
add
add
mov
add
int3
cmc
add
int3
add
lea
pop
lea
push
lea
push
push
push
call
fwait
cmc
push
add
stos
xchg
insb
mov
ror
js
cwtl
inc
mov
ret
push
shll
cli
mov
mov
add
add
xchg
add
add
add
add
ljmp
add
loopne
add
add
add
pop
push
icebp
stos
mov
jne
mov
lea
pop
sub
push
pop
mov
shr
push
push
push
push
push
call
into
arpl
movsl
lret
mov
add
fcmovu
testb
xchg
add
xchg
test
iret
scas
hlt
add
jae
mov
jmp
aam
jecxz
add
pushf
add
xchg
add
add
add
push
mov
mov
jno
fucomi
add
cld
mov
data16
jp
les
inc
or
ror
ror
not
pop
mov
mov
push
lea
push
push
push
push
push
push
lea
push
push
call
call
add
pop
add
in
add
mov
jle
arpl
add
xchg
add
add
movsb
flds
arpl
add
add
add
jecxz
les
pop
into
add
jo
mov
add
xchg
fst
mov
add
add
add
add
test
in
add
roll
add
jp
add
and
add
add
push
add
lea
pop
mov
mov
push
push
push
push
push
call
add
xchg
add
gs
data16
add
add
add
add
in
jo
pop
lods
pop
js
lcall
aad
fdivp
mov
add
pusha
lds
fcmovne
mov
add
rclb
add
fsubl
out
add
cmpsl
add
add
add
mov
pushf
arpl
les
pop
outsl
jne
push
push
push
lea
push
call
add
fildl
add
mov
jle
rolb
rolb
jae
out
jecxz
mov
leave
stos
mov
test
add
mov
cmc
add
roll
movsb
jmp
mov
aam
rcr
int
imul
add
out
add
add
add
movsl
add
add
mov
scas
add
pop
cmp
jne
push
push
push
push
push
push
push
lea
push
lea
push
push
call
jnp
mov
add
stc
mov
sti
jb
add
xchg
add
aam
add
add
mov
mov
add
ficompl
add
fwait
xchg
add
rcr
pop
add
popf
lret
leave
xchg
add
in
std
add
mov
mov
mov
xchg
add
add
jne
add
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
in
flds
add
add
mov
lods
push
stos
outsl
addr16
clc
cmpsb
mov
fadd
add
add
add
loop
filds
add
into
test
add
pop
add
test
add
jns
add
jecxz
cld
in
add
icebp
xchg
add
pop
movl
jmp
push
sub
pop
mov
push
lea
push
call
into
js
xchg
jecxz
jnp
pop
mov
jmp
add
add
cld
mov
in
test
fsubrs
js
pop
mov
push
test
add
add
add
fiadds
add
mov
mov
mov
jns
popf
add
gs
jae
mov
add
jge
add
addr16
roll
add
pop
mov
push
shr
sub
not
pop
sub
jne
push
push
push
push
push
push
call
out
mov
out
mov
add
add
add
rcl
add
repnz
push
add
mov
test
pop
add
rol
jne
add
int3
jl
movsb
xlat
mov
in
fisttpl
pop
stos
clc
add
les
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
add
jl
ja
add
leave
into
mov
out
push
rolb
frstor
add
add
jl
stc
add
imul
add
xchg
jb
in
xlat
add
add
lock
mov
out
insb
add
add
mov
bound
stc
in
into
mov
lea
pop
movl
push
sub
pop
jmp
push
sub
pop
mov
push
add
pop
mov
push
shl
shr
add
dec
pop
cmp
jne
push
push
push
push
push
push
push
push
push
push
call
cli
add
jb
data16
add
filds
add
jne
jbe
pop
lods
nop
outsl
mov
mov
xchg
mov
add
popf
push
addw
mov
mov
sti
mov
std
add
jns
imul
mov
js
clc
icebp
mov
lea
pop
mov
movl
push
dec
pop
jmp
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
add
xchg
pusha
stos
add
add
add
pop
js
jbe
xorb
add
hlt
add
add
add
add
add
push
call
popa
and
inc
cld
push
add
shr
sub
add
pop
cmpw
jne
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
sarl
pop
add
add
jbe
xchg
je
fmull
add
mov
add
pop
add
faddl
push
xchg
jge
stos
xlat
add
add
in
add
push
jae
mov
add
pop
mov
fadds
lods
imul
sub
inc
adc
add
push
push
lea
push
push
push
push
push
push
lea
push
call
iret
data16
jge
jae
mov
cmc
xchg
pop
movl
xchg
push
in
push
cli
loop
add
add
leave
add
jb
sar
jle
pop
xchg
arpl
add
add
incb
cmpsl
je
les
push
push
add
push
sub
pop
pushl
push
push
call
addb
insb
lret
add
add
stos
mov
xchg
js
add
add
add
movsl
add
add
idivl
add
insb
add
fisubl
push
lahf
push
popa
add
leave
sahf
mov
xchg
mov
add
add
mov
ret
push
mov
enter
jecxz
fwait
mov
mov
bound
pop
pop
mov
push
sub
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
add
jno
add
lds
mov
add
jnp
push
add
loope
aam
add
add
fldl
lcall
mov
add
ret
leave
cwtl
ja
add
xchg
xchg
shrl
xlat
add
pop
mov
push
push
lea
push
or
not
add
sub
ror
dec
sub
shr
rol
add
add
pop
ror
ror
pop
push
push
lea
push
call
popf
jecxz
mov
add
add
mov
mov
add
sahf
add
cmpsl
add
mov
add
js
jmp
add
movsl
hlt
add
add
add
cmpsb
mov
add
in
mul
push
push
add
mull
fsubr
leave
xchg
add
les
push
push
lea
push
push
call
mov
add
imul
mov
fadds
pop
rolb
fcom
add
pop
xchg
xchg
add
mov
test
pop
mov
add
rolb
jle
mov
pop
add
jnp
mov
lea
pop
call
push
shl
pop
cmpl
je
push
push
add
push
sub
add
sub
sub
inc
sub
not
shl
pop
inc
not
pop
push
shl
pop
push
push
push
push
push
push
push
push
push
push
call
fadds
lea
hlt
jo
mov
add
leave
add
lock
stos
icebp
add
mov
add
add
add
jle
xchg
cmc
movsl
add
cltd
mov
jmp
stos
jp
cld
add
ja
sarb
add
lea
pop
call
push
lea
push
push
lea
push
call
iret
push
add
add
fnsave
add
push
add
lret
loopne
add
add
call
iret
mov
cwtl
popa
mov
add
rcrl
add
roll
leave
out
jnp
stos
add
roll
jle
jbe
add
movsb
push
mov
movl
add
int3
testb
mov
mov
lea
pop
cmpl
je
push
push
sub
dec
add
push
xor
add
sub
lea
not
pop
rol
inc
add
add
pop
push
lea
pop
push
push
pop
call
push
push
push
push
push
push
push
push
push
call
push
add
call
int
add
mov
outsl
imul
add
add
xacquire
add
pushf
pop
add
jp
xchg
nop
add
loopne
imul
add
mov
xchg
xlat
jb
add
mov
add
lds
mov
add
add
ja
add
ja
xchg
mov
lea
pop
cmpl
je
push
push
rol
push
or
not
add
add
add
sub
lea
pop
pop
push
push
call
je
push
add
add
insb
mov
pop
add
add
push
push
addl
fildl
add
xchg
add
add
jmp
cwtl
pusha
add
add
add
jbe
mov
into
jmp
cli
lahf
mov
add
fiaddl
pop
imul
add
pop
push
push
xor
add
shr
pop
call
cmpl
je
push
push
dec
add
push
and
add
shl
shl
dec
sub
inc
inc
pop
xor
pop
push
push
push
push
push
push
push
push
push
lea
push
call
out
in
shll
jecxz
test
add
repnz
add
add
jmp
sti
add
add
xchg
xchg
pop
add
mov
add
rcr
shll
xchg
add
add
add
add
ret
lds
push
gs
pop
add
clc
mov
add
add
pop
push
call
push
lea
push
push
push
push
push
lea
push
lea
push
call
jo
add
aad
repnz
push
add
mov
jnp
ljmp
add
call
cmc
add
stos
mov
cmpsb
div
and
and
cmp
rol
je
push
push
add
add
push
xor
add
sub
sub
dec
add
xor
ror
pop
shr
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
add
scas
aad
mov
test
lods
add
imul
aad
sti
pop
add
imul
add
call
add
roll
nop
out
add
add
shr
jbe
hlt
add
stos
add
jp
mov
sahf
les
lock
mov
push
mov
cld
add
mov
lea
pop
push
push
sub
pop
call
cmpl
je
push
push
sub
add
push
sub
add
sub
add
lea
sub
ror
add
sub
pop
inc
rol
shl
dec
pop
push
ror
dec
pop
push
push
push
push
push
lea
push
push
push
push
call
andb
into
jecxz
mov
add
mov
je
shl
add
mov
add
jo
lahf
add
add
add
fs
mov
add
scas
xchg
mov
lea
pop
call
cmpl
je
push
push
ror
push
push
pop
add
lea
sub
ror
lea
sub
dec
pop
dec
pop
push
not
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
pusha
jne
push
mov
ja
test
push
jns
add
add
add
add
loopne
mov
mov
add
iret
fwait
jmp
mov
test
jp
mov
xchg
mov
fmuls
jno
into
cmc
add
add
add
add
add
mov
and
cmpl
je
push
push
sub
inc
inc
push
xor
add
ror
sub
sub
not
pop
ror
add
lea
pop
push
xor
pop
push
call
push
sub
not
pop
cmpl
je
push
push
lea
add
push
or
not
add
sub
sub
not
add
pop
dec
inc
xor
pop
push
ror
sub
add
pop
push
push
push
push
push
push
push
push
call
roll
mov
add
add
loop
mov
push
add
xchg
jnp
jl
cmc
push
mov
add
add
aad
add
mov
add
jbe
mov
mov
lea
pop
call
push
push
lea
push
push
push
push
push
call
add
mov
xchg
pop
fadds
pop
add
lret
hlt
add
stos
scas
enter
add
add
add
data16
outsl
out
mov
add
add
add
cmpsl
lcall
test
push
rorb
pop
cmpl
je
push
push
sub
inc
push
sub
add
not
sub
inc
pop
xor
shr
pop
push
push
push
push
push
push
push
push
push
call
add
hlt
jmp
add
loopne
lret
mov
mov
int
add
scas
add
add
out
out
add
mov
mov
jge
jns
insb
pushf
add
addb
xchg
jns
xchg
add
mov
mov
rolb
pop
add
mov
mov
add
add
add
add
add
lret
xchg
add
rorb
push
push
push
push
call
add
pop
fcomps
add
add
xlat
add
add
add
add
mov
rolb
add
rcrb
fsubp
aad
add
add
loop
add
les
cmp
add
push
call
jne
cwtl
jne
add
add
push
out
add
jecxz
fcomp
ret
les
lret
mov
pop
testl
push
mov
cmpsb
mov
ljmp
orb
add
aam
add
add
fiadds
mov
add
add
add
idiv
add
scas
int
add
mov
add
add
add
mov
lea
pop
cmpl
je
push
push
shl
push
xor
add
dec
sub
sub
sub
not
lea
pop
add
add
pop
push
ror
sub
shl
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
lret
add
add
add
leave
jle
jb
ljmp
leave
add
jl
roll
add
pop
add
aam
add
xchg
add
push
add
add
push
pop
mov
mov
add
add
out
cld
leave
outsl
mov
jmp
add
add
je
mov
mov
lea
pop
call
cmpl
je
push
push
not
add
inc
push
or
inc
add
dec
sub
inc
add
lea
pop
not
add
rol
pop
push
push
lea
push
push
lea
push
call
lret
push
mov
mov
js
pop
xchg
in
add
mov
add
fidivl
imul
mov
roll
mov
add
nop
add
std
add
add
add
add
mov
fcmovnbe
add
sti
lea
int
add
les
add
add
mov
lea
pop
push
call
push
dec
inc
pop
cmpl
jne
push
push
lea
push
lea
push
push
push
lea
push
push
call
ret
add
push
xchg
pushf
clc
add
add
add
orb
add
into
pop
loop
lods
test
les
mov
popf
pop
add
add
push
int
add
add
out
cmpsb
add
in
out
add
mov
mov
mov
out
mov
lea
pop
mov
movl
push
push
lea
push
push
call
add
add
mov
add
stc
pop
out
add
out
add
add
add
add
ret
add
fnstenv
enter
jp
imull
testb
add
mov
jae
ret
add
stos
add
subb
add
testl
mov
jge
nop
add
aad
cld
lea
pop
jmp
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
scas
loope
add
shll
add
add
add
into
mov
testb
push
lods
popa
add
addl
icebp
jbe
fwait
mov
add
add
in
imul
mov
add
add
lds
add
pop
mov
lea
pop
xor
push
push
push
call
add
push
jo
add
add
mov
icebp
add
jecxz
mov
jae
mov
sti
mov
fwait
add
add
add
add
jne
add
shl
add
pop
pop
push
add
pop
pop
push
push
push
push
push
lea
push
push
call
add
mov
push
mov
add
imul
test
out
movsb
mov
cmpl
xchg
xchg
cld
rcrl
add
jecxz
xchg
add
jnp
add
pop
lock
add
pushf
add
fidivrl
pop
mov
imul
fidivs
flds
fisttpll
pop
push
xor
rol
ror
pop
leave
push
add
add
pop
ret
push
pop
push
mov
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
cli
jno
imul
add
xchg
add
add
push
add
aad
add
add
cld
aam
mov
aad
cltd
cld
add
into
add
add
add
push
mov
popf
sarb
orl
mov
mov
lea
pop
add
push
push
call
ljmp
jecxz
movsl
add
xchg
pusha
out
push
add
xchg
fdiv
clc
iret
aam
xchg
icebp
addr16
stos
add
mov
aam
mov
adcl
gs
add
add
add
add
jb
add
arpl
pop
mov
lea
pop
cmpl
jne
push
push
rol
xor
push
xor
add
ror
shl
add
sub
lea
pop
not
xor
dec
pop
push
push
push
push
push
push
lea
push
call
addb
repnz
lret
add
add
mov
add
mov
gs
mov
add
std
add
data16
aad
cltd
fiaddl
fdivl
repnz
add
push
mov
add
add
add
pop
add
mov
add
push
add
ja
add
add
add
lea
pop
pushl
push
sub
ror
dec
inc
pop
call
push
add
pop
push
push
push
push
lea
push
push
call
int3
add
roll
add
jge
add
ret
icebp
add
add
icebp
lret
add
add
add
out
test
mov
push
test
pop
add
out
xchg
add
stos
add
pop
call
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
add
int
std
add
mov
add
mov
rcll
mov
add
add
mov
add
xchg
cld
add
add
add
add
xchg
add
fstpt
aam
bound
jmp
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
test
popf
out
add
jae
add
jle
add
mov
loopne
pop
add
xchg
divb
gs
mov
pop
add
repnz
je
cld
lea
pop
cmpl
je
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
pop
add
add
mov
xlat
in
add
jbe
int
add
add
pop
out
mov
out
jae
nop
movl
imul
add
movsl
xchg
jae
add
ffreep
mov
xlat
add
add
add
test
mov
add
test
lock
add
arpl
rorb
lea
pop
cmpl
jne
leave
push
pop
add
push
push
push
push
push
lea
push
push
lea
push
call
add
pop
add
mov
add
arpl
add
add
add
add
in
jae
mov
add
cld
out
insb
add
std
add
fwait
jecxz
add
add
push
add
leave
pop
arpl
fidivl
test
cld
add
add
add
mov
cmpsl
add
jae
mov
push
test
int3
lea
pop
pop
push
shl
rol
rol
pop
pop
push
not
sub
pop
pop
pop
push
push
call
call
rolb
pushf
lds
stos
addb
add
loope
add
int
add
jns
mov
jl
fwait
lods
mov
data16
mov
addb
mov
add
hlt
jp
hlt
lea
pop
leave
push
dec
pop
add
push
lea
push
push
lea
push
push
push
call
add
clc
std
pop
mov
add
cld
rcr
add
push
add
add
add
je
ja
mov
scas
data16
lret
pop
lcall
add
mov
ficoms
out
addr16
add
add
mov
push
test
mov
add
ljmp
out
pop
add
pop
ret
push
push
call
add
xlat
add
movl
add
xchg
lock
add
leave
mov
pop
scas
stos
imul
imul
add
mov
add
add
pop
pushf
mov
add
lods
ret
add
repnz
add
add
add
add
mov
push
loop
push
aad
hlt
lea
pop
jmp
push
push
lea
push
push
push
push
lea
push
push
call
cmc
outsl
cmpsl
mov
add
stos
add
add
add
repnz
add
jne
add
mov
add
test
push
add
add
add
repnz
mov
add
add
pop
cmpl
jne
push
push
xor
sub
push
sub
add
sub
sub
add
not
pop
shl
pop
push
dec
add
pop
pushl
call
push
dec
sub
add
pop
push
call
push
pop
jmp
push
shl
sub
sub
xor
pop
cmpl
jne
push
push
push
push
call
add
fstl
fildl
xchg
lret
shl
mov
pushf
add
xchg
mov
lahf
les
mov
jb
in
add
into
rcrb
mov
add
push
add
test
push
add
cmpsb
add
add
int3
lea
pop
mov
push
lea
push
push
lea
push
call
jle
add
add
in
add
add
lock
jo
ret
fildl
push
xlat
icebp
add
add
sti
insb
jno
xchg
add
add
in
rcrl
popf
add
movsb
pusha
mov
rolw
jns
lds
lea
pop
mov
push
push
push
sub
push
or
inc
add
sub
shl
sub
pop
dec
add
pop
push
push
push
push
push
push
call
scas
mov
add
add
add
add
out
sahf
add
xchg
out
hlt
add
add
add
cld
add
mov
aam
add
mov
add
into
xchg
add
leave
add
add
sahf
call
add
pop
pushl
push
shr
xor
sub
sub
pop
call
push
push
shl
rol
push
and
add
shl
sub
add
ror
pop
inc
sub
pop
push
xor
add
rol
pop
pushl
call
push
lea
push
push
push
lea
push
push
push
push
push
call
push
lds
fstpl
add
add
roll
add
jns
add
push
add
addb
pop
add
insb
sarb
fiaddl
xchg
add
mov
jge
hlt
lea
pop
call
push
push
dec
push
xor
add
shl
not
sub
lea
pop
shl
pop
push
push
push
lea
push
lea
push
push
lea
push
call
push
add
add
add
in
lds
lock
push
mov
pop
add
js
stc
add
fcoms
push
add
popf
push
add
pop
add
fmull
jne
push
lea
push
push
push
push
call
add
xchg
mov
negl
add
add
jecxz
add
mov
les
imull
add
add
jno
call
xchg
mov
lea
pop
call
call
push
push
push
push
pop
add
xor
add
sub
sub
dec
rol
dec
pop
pop
push
push
push
push
push
call
xchg
jne
add
imul
mov
jne
ljmp
jae
pop
add
nop
ljmp
fcoml
add
add
out
jl
popf
add
fwait
add
lret
fnstenv
push
add
add
ljmp
outsl
loopne
jne
add
add
add
sti
mov
lea
pop
pushl
push
push
push
push
push
push
call
xlat
xchg
ret
test
jne
fisubs
repnz
aam
add
int
add
xlat
shl
cmpsb
add
mov
out
add
jno
add
add
push
add
cwtl
add
pop
insb
add
hlt
cli
in
add
loopne
add
fs
test
jno
add
rclb
mov
lea
pop
call
call
push
push
push
or
inc
add
shl
lea
ror
sub
sub
add
pop
shr
add
not
pop
push
push
push
push
push
lea
push
call
add
add
mov
fld
mov
add
pop
add
add
add
gs
jb
rolb
imul
add
mov
add
push
add
roll
add
cwtl
mov
xchg
add
mov
jecxz
add
add
push
test
into
cld
push
mov
mov
hlt
lea
pop
pushl
call
push
push
call
add
add
in
fldl
add
add
cmpsb
addl
test
mov
nop
mov
mov
mov
jle
shlb
xchg
pushf
aam
add
outsl
lods
mov
add
jne
add
lea
add
cltd
arpl
rcrl
lcall
add
addb
add
je
mov
pop
call
push
push
add
shl
lea
not
push
or
not
add
not
sub
shl
dec
inc
lea
pop
sub
not
pop
push
inc
sub
add
pop
pushl
push
add
sub
inc
ror
pop
call
push
push
lea
push
push
push
push
push
lea
push
call
mov
mov
add
xchg
cli
xchg
in
rol
stc
neg
push
add
clc
add
insb
add
add
cmpsl
pop
push
sarb
add
cwtl
jno
add
pushf
xchg
add
mov
add
add
cmc
lods
mov
lea
pop
call
call
push
push
push
sub
add
ror
sub
inc
sub
inc
rol
xor
lea
pop
add
inc
rol
pop
push
push
lea
push
push
call
addl
add
stos
jge
pop
fcoms
movb
push
add
hlt
jne
repnz
mov
faddl
xchg
pop
in
add
add
filds
add
xchg
xlat
js
out
jb
pushf
out
xchg
mov
lea
pop
pushl
call
push
push
push
call
xchg
push
insb
push
mov
pop
roll
mov
jge
std
out
push
addr16
jnp
std
add
lea
add
xchg
fmull
pop
loop
add
add
pop
out
aam
xorl
insb
add
je
add
push
out
jl
mov
pop
divb
push
mov
pusha
or
lea
push
dec
pop
push
push
push
call
mov
add
add
add
fistps
loope
leave
bound
add
add
mov
pop
movb
mov
fdivr
icebp
push
add
add
cwtl
mov
add
add
jle
add
add
sarb
jnp
sahf
in
divb
jns
add
ljmp
testb
jecxz
call
or
shrb
addr16
push
xor
xor
push
or
not
add
add
sub
add
inc
sub
add
sub
ror
pop
shr
pop
push
shr
shl
pop
pushl
push
shl
pop
call
call
push
push
add
push
xor
add
add
inc
sub
rol
sub
sub
pop
dec
ror
pop
push
lea
push
push
push
lea
push
push
push
push
call
push
cltd
add
mov
loope
mov
add
subl
add
pop
pop
in
xchg
sti
aad
mov
mov
mov
add
jp
sahf
jmp
add
fs
aam
bound
pop
pushl
push
sub
inc
shr
pop
call
call
push
push
sub
shl
push
or
inc
add
not
shr
sub
not
add
rol
lea
pop
add
add
add
pop
push
push
push
push
push
lea
push
push
push
push
call
aad
fiaddl
imul
add
add
call
mov
flds
mov
into
add
add
in
pushf
mov
add
add
pop
add
mov
mov
leave
add
stos
ficomps
add
loopne
mov
jle
lods
add
add
mov
mov
lea
pop
pushl
call
push
ror
pop
call
push
push
push
push
lea
push
push
push
call
test
jo
les
std
jnp
int
addb
lds
testb
std
mov
add
pop
cli
add
mov
xchg
add
add
loope
add
add
add
add
add
imul
mov
add
sti
fistps
add
roll
add
test
add
ret
rol
loop
add
xchg
popa
lock
jmp
nop
mov
lea
pop
lea
push
push
add
dec
inc
push
or
inc
add
inc
lea
dec
sub
xor
sub
dec
pop
sub
pop
push
dec
sub
pop
pushl
push
add
sub
rol
pop
call
push
push
add
shr
add
pop
call
push
push
sub
sub
add
push
push
pop
add
sub
add
sub
sub
lea
not
pop
shr
pop
push
shr
not
pop
pushl
push
sub
rol
add
pop
call
call
push
push
push
lea
push
push
lea
push
push
call
rcll
xchg
scas
scas
rolb
add
add
add
xchg
stc
add
pop
rolb
add
jmp
add
or
add
test
jbe
stc
add
add
out
add
add
add
pop
jmp
hlt
add
addb
add
loope
lds
pop
mov
push
push
xor
lea
shr
push
xor
add
sub
dec
sub
lea
shr
inc
lea
pop
add
shl
shl
pop
push
inc
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
call
scas
cli
add
ret
add
movsb
add
add
add
mov
loop
addr16
add
xchg
add
add
stos
rcl
outsl
add
insb
add
add
out
add
leave
add
add
pop
movsl
jmp
mov
bound
cld
jp
fmull
pop
and
add
push
add
dec
dec
pop
pushl
push
lea
push
push
push
call
js
rolb
test
add
add
add
test
add
jae
mov
roll
pushf
xchg
neg
add
scas
jns
add
lock
mov
lea
pop
call
push
push
add
inc
push
or
inc
add
add
sub
sub
add
pop
add
pop
push
sub
shl
add
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
mov
add
add
out
add
mov
pop
arpl
pop
shlb
add
loope
testl
add
ror
idiv
add
add
add
push
push
into
lahf
add
add
lea
pop
add
les
dec
and
add
in
add
shlb
add
ror
push
and
add
sub
lea
ror
ror
ror
pop
add
pop
push
push
sub
xor
push
or
inc
add
shl
sub
shl
rol
shr
pop
shl
lea
pop
push
inc
pop
call
push
push
add
push
or
not
add
sub
lea
sub
add
dec
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
popa
add
in
jl
mov
add
fdivl
add
add
scas
add
jp
add
push
lods
pop
xchg
addl
add
addl
add
pop
mov
jle
shlb
repnz
and
pushl
push
add
shr
add
pop
call
push
lea
lea
lea
pop
mov
lea
push
push
push
push
push
push
push
push
lea
push
call
add
add
nop
mov
ret
add
add
sahf
movsl
lock
xchg
call
lret
add
popa
iret
in
add
ja
add
pop
arpl
mov
add
add
push
pushf
push
popf
add
lea
pop
lea
push
push
push
call
push
fimull
mov
lods
data16
mov
add
add
test
fisttpll
add
mov
xchg
add
fildl
mov
xchg
add
add
xchg
xchg
std
add
xlat
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
push
push
call
push
add
scas
data16
out
scas
int
add
fdiv
rcrb
add
out
int
fucomip
in
pop
hlt
enter
add
add
jae
in
shlb
add
add
mov
out
add
add
lds
or
in
add
data16
pop
push
push
push
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
pop
outsl
int
add
pop
lahf
jle
icebp
filds
addr16
testb
push
add
add
add
popf
add
repnz
add
xlat
call
add
add
xorl
ja
add
add
repnz
mov
clc
add
mov
pop
push
push
add
sub
shl
pop
push
pushl
push
not
add
pop
push
push
sub
lea
ror
not
pop
call
push
push
sub
add
push
xor
add
rol
ror
sub
lea
pop
shl
pop
push
dec
pop
pushl
push
push
call
add
add
add
jne
mov
add
hlt
scas
add
int
gs
repnz
add
pop
je
push
popf
rcrl
xlat
add
lods
in
cli
stc
mov
test
fcmovnb
add
push
add
or
nop
pop
add
push
push
call
not
xchg
add
add
jb
ja
add
in
xchg
sar
aam
mov
pop
les
add
add
mov
mulb
call
add
loopne
mov
xchg
out
add
stc
jbe
add
nop
add
in
jle
add
addb
frstor
les
rorb
mov
scas
stc
repnz
xor
xor
call
inc
add
add
mov
add
icebp
pop
loope
add
jle
int3
add
jmp
add
add
clc
push
stos
loope
leave
add
add
add
ret
in
mov
lea
pop
pop
push
dec
inc
pop
dec
jne
jmp
push
sub
shr
pop
call
push
push
push
push
pop
add
shr
sub
xor
dec
pop
ror
xor
shr
pop
push
ror
pop
pushl
call
push
push
lea
push
push
call
add
push
add
js
add
add
add
in
jo
mov
jmp
cmc
loop
repnz
cwtl
stos
mov
leave
add
xchg
add
add
add
icebp
add
testl
popf
in
mov
lea
pop
push
push
shr
pop
call
mov
push
push
push
push
push
lea
push
call
pop
out
jnp
int
add
testb
sarb
add
insb
loope
add
jge
nop
add
lcall
add
push
mov
arpl
add
mov
add
mov
add
jl
add
pop
lea
push
push
shl
xor
push
xor
add
lea
not
sub
rol
xor
pop
not
shr
pop
push
rol
rol
pop
pushl
call
push
add
shl
add
pop
push
call
push
push
ror
add
push
and
add
add
sub
sub
pop
add
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
arpl
into
mov
in
jge
add
call
rolb
add
rolb
cli
imull
mov
out
outsl
add
push
gs
add
in
lods
push
mov
add
add
pop
jp
aam
bound
pop
pushl
push
push
push
push
push
call
lcall
fistps
jmp
add
imul
add
add
jmp
call
add
pop
outsl
jnp
add
add
jp
add
mov
cmpsb
test
mov
add
xchg
shll
add
lret
add
mov
mov
popa
adc
call
call
push
push
push
push
push
push
push
lea
push
call
les
add
mov
add
xchg
pop
add
add
push
insb
loopne
cwtl
add
test
xlat
add
jo
into
lds
add
add
mov
jb
roll
add
add
xchg
lea
imul
loop
lcall
and
inc
cld
push
shr
not
rol
pop
lea
push
push
ror
lea
lea
lea
push
and
add
sub
sub
sub
lea
pop
add
pop
push
sub
not
pop
pushl
call
push
push
lea
push
push
call
add
add
out
xchg
fildl
xchg
add
lds
add
add
jecxz
mov
mov
mov
bound
add
push
add
shl
loop
add
add
mov
lock
mov
xchg
out
sti
add
add
mov
add
int3
in
mov
imul
jne
add
sarl
xchg
jb
pop
add
add
add
pop
lea
push
xor
shl
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
jp
add
add
add
xchg
pop
add
sar
nop
testl
add
add
mov
mov
push
xchg
loop
cmpsb
add
mov
lea
pop
push
push
push
xor
inc
pop
pushl
push
push
rol
inc
push
or
inc
add
add
sub
sub
add
pop
shl
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
lcall
in
add
mov
je
test
add
add
mov
add
data16
add
in
pop
add
add
add
rcrl
pop
mov
add
mov
lea
pop
push
push
push
call
jmp
jmp
testl
movsb
mov
mov
add
add
add
push
add
add
add
mov
add
jp
shlb
out
lret
add
add
addb
add
scas
mov
add
ljmp
add
cli
hlt
cld
sarl
add
pop
call
push
push
add
ror
lea
shr
push
or
not
add
rol
not
sub
add
dec
xor
pop
not
xor
pop
push
push
lea
push
push
push
lea
push
lea
push
call
sti
test
add
mov
add
lock
mov
mov
mov
add
add
les
movsl
loope
mov
add
push
add
add
pop
pushl
push
ror
shl
pop
call
push
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
push
mov
mov
hlt
push
addb
add
add
call
test
add
lahf
ljmp
mov
add
mov
add
add
add
lret
add
xchg
loopne
add
add
mov
add
add
add
mov
frstor
rolb
test
pop
call
push
push
ror
shr
dec
push
push
pop
add
shr
sub
sub
pop
pop
push
push
push
push
push
push
push
call
add
add
jbe
add
add
pop
mov
fiaddl
mov
push
cmc
xchg
add
mov
push
add
imul
sti
pop
add
scas
add
add
std
mov
jmp
add
add
pop
add
hlt
lea
pop
pushl
call
push
xor
add
sub
pop
call
push
push
push
push
lea
push
push
call
add
neg
add
xchg
jo
xlat
pusha
imul
mov
out
fstps
jp
jge
add
rolb
jne
add
add
add
fildll
call
out
add
add
pop
jmp
push
push
call
ja
add
data16
add
add
add
mov
data16
add
add
lahf
add
lds
jge
out
mov
push
add
aad
add
arpl
mov
jbe
mov
lea
pop
pushl
mov
push
rol
add
xor
pop
jmp
push
push
shl
sub
add
push
or
inc
add
sub
shr
shl
sub
not
add
pop
xor
not
add
add
pop
push
add
inc
pop
pushl
push
xor
pop
call
push
push
lea
push
push
call
loopne
add
movsl
push
fildl
jle
pop
fnsave
push
scas
shr
jp
add
pop
je
lret
loopne
mov
call
hlt
add
fnstenv
loope
stos
int3
push
cmc
mov
lea
pop
call
push
push
rol
add
push
sub
add
ror
shl
sub
xor
pop
add
not
sub
pop
push
lea
push
push
push
push
push
call
ret
mov
add
add
into
pop
add
leave
pop
add
add
rcll
xchg
add
mov
stc
add
pushf
mov
xor
out
clc
sarl
jmp
jmp
loopne
loop
add
mov
add
popa
data16
cli
out
fmull
jne
call
push
push
push
push
push
push
lea
push
lea
push
call
add
lret
lds
add
ljmp
in
jae
fnstcw
testb
shr
jb
add
out
ret
fsubl
int
clc
add
stc
xchg
add
mov
mov
add
fimuls
adcb
mov
xlat
xchg
push
orl
shl
xor
inc
ror
pop
call
push
sub
shl
pop
leave
push
lea
pop
add
pop
push
not
lea
dec
add
pop
pop
push
rol
shr
add
rol
pop
pop
push
push
push
push
call
repnz
xchg
movsl
add
pop
add
insb
out
outsl
mov
mov
xchg
add
je
mov
jne
mov
mov
clc
ljmp
add
mov
add
add
stos
fistps
add
add
pop
mov
lea
pop
pop
leave
push
push
lea
push
call
xchg
faddl
mov
add
cmc
add
push
jne
int
pop
lahf
add
mov
ret
xchg
stc
lret
pusha
push
xchg
add
lret
add
lds
mov
mov
add
add
push
sahf
add
add
add
add
add
xchg
add
addb
xchg
aam
mov
push
add
into
lahf
mov
or
add
ret
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
addr16
ror
add
add
push
lret
add
push
xchg
ret
fnstsw
mov
je
add
stos
add
add
stc
lods
rorb
pop
leave
ret
push
push
push
lea
push
call
out
pop
lahf
shrl
add
sahf
stc
insb
ficomps
out
addr16
add
leave
add
mov
add
rorl
out
cltd
add
in
incb
jne
pop
cltd
add
lods
add
je
ljmp
pop
push
push
not
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
mov
add
mov
mov
add
imul
pop
add
hlt
pop
add
add
data16
mov
pop
lret
pop
add
xchg
add
add
add
fiaddl
mov
int
clc
jmp
jle
test
mov
lcall
data16
cmpl
jne
push
add
rol
inc
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
push
xchg
scas
sahf
mov
int3
fucomp
push
pop
add
mov
add
mov
imul
mov
in
add
mov
out
jp
add
add
add
pop
add
add
add
add
fiadds
add
lahf
jns
add
push
mov
add
add
popa
and
jmp
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
in
add
add
ret
add
mov
mov
stc
add
faddl
into
repnz
lret
stc
add
out
pop
push
add
pop
fsubs
add
add
mov
lea
pop
mov
push
push
push
lea
push
lea
push
push
call
mov
js
in
mov
call
mov
test
in
sahf
add
pushf
add
add
mov
les
add
add
add
add
orl
out
mov
lret
jne
lahf
add
add
add
scas
add
mov
out
add
add
mov
mov
xchg
add
add
add
pop
and
push
sub
pop
xor
push
xor
pop
xor
push
lea
push
push
lea
push
push
push
push
push
call
mov
shl
cmpsb
add
add
mov
popf
add
push
testb
addr16
ja
stos
add
bound
add
add
js
fcompl
std
xchg
add
mov
movsl
push
hlt
add
faddl
add
jecxz
add
mov
add
add
add
mov
and
rolb
ror
shr
pop
xor
push
push
lea
push
push
call
mov
roll
mov
lret
insb
addb
roll
jno
iret
push
mov
jo
jl
cmpsl
add
add
in
fbstp
pop
xchg
add
out
add
je
add
add
popf
mov
lea
pop
dec
sub
push
push
push
push
push
push
push
lea
push
call
xchg
xorl
enter
leave
test
push
pop
out
mov
faddl
push
lods
add
pop
scas
xchg
insb
cli
jmp
push
mov
stc
ja
add
in
cld
add
add
add
int
pop
add
add
add
mov
lea
pop
jmp
push
push
push
push
call
rcll
add
test
jo
test
push
int
loope
mov
add
add
push
xchg
popa
data16
add
push
subl
mov
add
add
imul
add
int3
lea
pop
sub
push
add
add
shl
pop
pushl
pop
push
push
push
push
push
push
push
push
lea
push
call
fiaddl
add
hlt
add
pop
out
add
rol
add
jp
add
add
add
mov
mov
add
mul
add
pop
addl
sti
jnp
imul
add
add
cld
add
add
lret
not
into
testl
lea
pop
sub
cmp
jne
push
ror
shl
pop
mov
push
xor
not
sub
pop
lea
push
push
push
push
push
push
push
push
push
call
les
add
cmc
add
add
add
jne
mov
std
fs
mov
push
push
lods
mov
pop
loope
add
push
loop
ja
outsl
add
into
ror
in
in
add
add
jmp
mov
add
add
pop
add
roll
cmpsl
push
pop
add
fadds
mov
jb
aam
bound
sub
push
shl
lea
pop
mov
push
lea
push
push
lea
push
push
call
add
add
add
add
mov
loop
negb
add
add
mov
push
add
call
stos
fadds
fwait
jle
add
mov
add
add
xchg
add
cltd
add
xchg
jmp
mov
add
add
hlt
add
push
add
add
pop
add
add
pop
jae
fisubs
adc
shr
push
dec
pop
add
push
add
rol
pop
sub
pushl
push
push
push
push
push
push
call
add
test
jp
xchg
test
pop
add
add
xchg
aad
add
jns
add
jle
out
mov
test
add
add
rolb
cltd
leave
fcoms
mov
add
cmpsb
mov
lcall
jp
aam
add
add
leave
add
mov
data16
push
jle
jno
int3
lea
pop
pop
shr
push
shr
ror
shl
pop
and
push
pop
sub
push
xor
lea
pop
cmp
jne
leave
push
pop
ret
push
push
xor
xor
add
pop
mov
add
push
lea
push
lea
push
lea
push
lea
push
push
push
call
stc
jmp
mov
add
add
out
fs
add
addr16
add
add
xchg
mov
add
push
add
cmpsb
add
test
popf
hlt
add
add
jne
popf
add
add
stc
pushf
rolb
add
cwtl
in
add
mov
add
pop
push
push
lea
push
call
mov
ja
addb
add
cmpsb
add
out
xchg
push
ret
out
cld
add
cld
add
add
add
test
ficompl
pop
jge
lods
pop
push
stc
stos
sahf
addl
js
sar
add
add
cwtl
add
jb
add
pop
testl
add
xchg
add
add
add
mov
mov
add
pop
push
push
push
call
cmc
ret
bound
out
add
push
addr16
jecxz
push
add
mov
in
add
popf
add
stc
push
fidivl
out
clc
add
ljmp
add
pop
jns
fnstenv
push
icebp
out
xchg
add
add
add
or
push
push
push
push
lea
push
call
mov
add
pop
jle
mov
add
out
add
cli
fsubrp
mov
add
add
xchg
pop
fs
hlt
add
add
add
add
add
stos
rcll
jb
jno
loopne
lods
add
pop
aam
lcall
add
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
testb
add
fwait
cltd
add
cltd
je
mov
add
jge
in
incb
mov
lret
mov
lcall
stos
xchg
add
add
int
into
add
pop
repnz
pop
add
fisubs
add
popa
cltd
add
add
add
mov
lea
pop
mov
push
sub
add
pop
lea
sub
push
ror
pop
mov
shr
push
xor
pop
add
push
lea
push
lea
push
lea
push
call
jle
add
jns
add
shl
cmpsb
mov
pop
mov
pop
add
mov
fwait
mov
in
jmp
add
lds
add
cmpb
add
add
adcb
cld
in
add
push
add
mov
add
jp
add
add
add
add
jle
les
fwait
addb
add
sti
inc
xor
pop
add
mov
push
xor
sub
pop
add
push
push
call
add
ljmp
xchg
mov
sti
add
pop
add
jp
insb
add
push
add
jo
add
gs
add
scas
jecxz
add
pushf
jecxz
pop
mov
lea
pop
xor
push
push
push
lea
push
lea
push
push
call
add
pop
loop
fldl
mov
add
fwait
pop
xchg
add
shll
push
jge
imul
add
add
hlt
jbe
push
cld
xchg
xchg
lret
push
orl
mov
add
jp
lret
lods
lret
lret
mov
lea
pop
mov
push
pop
and
rol
push
lea
push
lea
push
call
mov
add
mov
faddl
loop
add
sti
xchg
mov
out
addb
jecxz
mov
add
push
popf
add
add
add
popa
add
arpl
pop
jecxz
add
add
add
clc
test
pop
add
stc
cmp
les
add
add
rcl
fiaddl
mov
lea
pop
rol
push
dec
lea
not
pop
xor
inc
push
push
push
lea
push
push
lea
push
push
call
adcl
xchg
add
jmp
imul
icebp
pop
jo
pop
fdivp
pushw
popa
add
je
push
ljmp
mov
xchg
add
cwtl
add
add
movsb
push
add
add
in
hlt
std
add
add
add
in
mov
popa
add
test
add
mov
cli
stos
loope
mov
into
add
pop
cmpb
jne
add
push
push
push
push
lea
push
push
push
lea
push
call
ret
cli
fcom
addl
add
rclb
roll
add
push
pop
add
add
scas
xchg
add
add
add
mov
add
fwait
jmp
jl
pop
sahf
add
xchg
loopne
rolb
add
lahf
add
add
in
arpl
jne
add
repnz
mov
lea
pop
cmp
je
push
ror
shl
add
pop
add
push
push
push
lea
push
call
push
add
add
test
outsl
test
into
push
pop
add
add
enter
movsb
jo
push
cwtl
stos
cmpsb
add
jecxz
jmp
loop
add
js
lahf
flds
mov
jbe
add
add
fucomip
add
aad
scas
pop
add
test
add
sti
add
pop
cmpl
jne
xor
push
inc
rol
pop
pop
push
lea
push
push
call
call
add
add
test
add
lahf
scas
add
lret
add
push
add
mov
repnz
fdivrl
shlb
aad
out
je
add
add
mov
jno
mov
lea
pop
pop
pop
push
shl
dec
rol
pop
pop
push
push
call
add
push
rolb
xchg
add
lea
insb
in
out
add
add
add
add
add
enter
repnz
add
sarl
add
testl
add
fldl
cmc
jnp
data16
cwtl
xchg
out
scas
andb
xorb
mov
lea
pop
pop
push
push
push
push
push
push
push
call
add
pop
add
and
pop
cltd
add
cld
in
xlat
movb
xchg
add
imul
push
push
fs
bound
cmpb
add
add
cwtl
jo
fmull
add
add
add
jae
add
add
flds
add
add
pusha
hlt
popa
test
add
add
pop
leave
ret
push
push
push
lea
push
call
add
subl
cli
push
xlat
ljmp
xchg
jmp
into
add
add
test
xorb
roll
int3
mov
add
push
mov
movsb
add
movsl
xchg
rcll
add
add
cmpsl
popa
add
add
lea
pop
mov
push
dec
pop
add
push
push
lea
push
call
push
int
jp
rclb
add
lret
add
test
add
arpl
jnp
mov
add
cmc
xlat
push
add
jnp
add
xchg
lret
add
pop
jp
jecxz
add
cwtl
add
add
cmpsb
lods
mov
fmull
push
rol
add
pop
push
push
sub
xor
add
pop
add
push
push
push
push
call
shl
add
add
push
jge
into
mov
add
add
add
push
xchg
add
push
add
add
roll
add
xlat
mov
add
jne
add
mov
add
mov
lods
push
std
sti
add
add
mov
add
loope
add
std
mov
testb
xchg
mov
add
push
movsb
xchg
add
mov
mov
lea
pop
mov
cmpw
push
not
pop
pop
push
push
lea
push
lea
push
push
push
push
call
add
mov
add
call
shrb
add
addb
mov
filds
fdiv
add
add
mov
rolb
cli
in
mov
push
add
pusha
imul
call
mov
xchg
jbe
int3
push
jecxz
loopne
loop
pushw
mov
lea
pop
pop
push
lea
push
push
push
push
push
call
add
lret
add
jo
add
add
mov
add
lcall
add
xchg
add
add
loopne
push
jmp
fs
into
add
stos
cmpsl
jmp
add
sti
add
mov
add
popa
add
cmpsl
mov
add
add
aam
bound
pop
mov
push
add
xor
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
mov
in
ficomps
scas
movsw
mov
mov
lods
mov
stos
pop
push
stc
add
mov
jecxz
add
add
mov
add
fsubs
mov
mov
mov
add
add
cld
lea
pop
call
push
push
push
push
push
lea
push
call
imul
xchg
ret
add
add
cltd
jbe
jae
add
pop
pop
stos
mov
gs
movb
fiadds
add
fmuls
add
add
xchg
add
push
add
enter
lock
pop
mov
int3
mov
add
mov
add
xchg
fisttpl
pop
xor
pop
push
push
push
push
push
push
push
push
push
lea
push
call
fsub
mov
push
mov
push
lds
add
loope
test
add
loop
jecxz
mov
rolb
add
jbe
add
mov
mov
add
add
mov
add
loop
mov
fmull
pop
push
inc
pop
pop
pop
push
lea
push
call
out
add
add
add
loopne
add
add
add
push
add
push
mov
mov
add
test
mov
cmpl
xchg
enter
add
sarl
aam
mov
xchg
out
add
lret
lret
fisttpll
lea
pop
leave
push
push
lea
push
push
push
call
add
xchg
jp
add
add
rcr
xlat
jnp
hlt
arpl
clc
add
mov
add
flds
call
in
add
cmc
addb
fldl
out
add
lcall
pop
sarb
lea
pop
ret
push
dec
pop
push
push
shr
add
shl
pop
mov
push
push
call
pop
jmp
add
out
movsb
add
add
mov
xchg
add
pop
cmc
jp
in
pop
add
lahf
clc
add
add
push
add
add
add
mov
add
add
add
add
jns
addr16
cli
scas
ret
mov
in
lock
incb
jae
ja
in
mov
push
pop
add
add
jo
add
int3
lea
pop
add
push
push
shl
sub
pop
push
push
rol
pop
push
push
push
push
push
push
push
push
push
push
call
movb
xchg
jbe
add
lds
rcrb
add
fwait
enter
add
add
pushf
loope
lret
bound
imul
add
add
shlb
add
out
call
cmpsb
jge
mov
add
add
mov
lea
pop
mov
push
not
lea
pop
push
push
lea
push
push
push
push
call
add
test
xchg
lea
add
mov
gs
int
fcoms
iret
mov
sar
mov
add
loope
add
jmp
shl
add
in
add
add
mov
shll
add
mov
mov
lock
add
add
push
jb
push
fst
in
pushf
add
add
lea
pop
pop
push
lea
pop
lea
push
xor
sub
pop
sub
push
push
push
push
push
push
lea
push
push
call
jecxz
add
popa
add
mov
xchg
cwtl
add
jle
mov
mov
in
add
push
mov
add
into
xchg
add
add
out
jno
push
add
xchg
pop
mov
out
popl
jmp
shll
sahf
jno
out
int3
stos
fiaddl
add
add
je
pop
add
pop
mov
push
push
push
call
jnp
sti
std
pop
std
mov
stc
add
icebp
xchg
xchg
nop
stos
in
add
add
mov
rolb
add
in
mov
add
add
out
arpl
xchg
arpl
add
in
nop
repnz
lcall
xlat
add
jne
cwtl
jge
mov
arpl
shr
push
not
lea
pop
add
push
push
push
lea
push
push
push
push
lea
push
call
cli
stos
push
add
add
push
xchg
cli
mov
int3
jbe
mov
into
ljmp
add
mov
cmpl
repnz
push
add
push
add
test
rol
add
add
add
add
push
add
mulb
jns
lret
add
ja
mov
add
scas
mov
lea
pop
mov
push
lea
inc
pop
add
pushl
push
push
push
push
lea
push
push
push
push
push
push
call
data16
add
insb
mov
mov
push
popf
add
in
out
nop
push
add
shrl
data16
std
testl
incb
aam
mov
jae
add
push
jo
jl
rcrl
xchg
roll
add
xlat
addb
add
add
add
test
leave
loope
jmp
xchg
add
push
ret
add
jne
mov
lea
pop
popl
push
lea
push
push
push
push
push
lea
push
push
call
jecxz
pop
gs
add
mov
fldcw
out
into
mov
leave
shll
jb
add
pop
add
add
add
jge
jne
mov
outsl
mov
jle
mov
jecxz
add
fsubs
fmuls
pop
mov
push
sub
lea
pop
add
push
not
dec
sub
add
pop
xor
push
sub
pop
lea
push
ror
pop
mov
add
push
push
push
call
test
add
xchg
add
cld
add
fwait
pop
loop
jle
out
add
add
add
add
add
add
imul
gs
mov
mov
icebp
add
add
jl
pop
mov
lock
mov
add
add
gs
jle
lds
scas
add
jle
add
pop
xor
push
inc
dec
not
pop
rol
nop
push
shl
shr
pop
nop
xor
push
push
push
call
add
push
mov
add
mov
add
shll
cld
bound
popf
cmpsl
add
mov
fildl
jnp
cli
jno
add
int3
movsb
mov
fcompl
lock
add
lods
jmp
subb
add
fisubl
add
icebp
add
mov
lea
pop
nop
push
shl
pop
nop
push
push
push
push
push
call
insb
addr16
lods
cwtl
add
jne
in
scas
fldt
add
movsb
xorb
mov
add
add
stos
mov
add
add
xchg
mov
pushf
add
mov
popf
add
cmpsb
add
add
mov
push
aad
add
add
jnp
scas
nop
mov
loop
add
sahf
in
xchg
call
add
insb
add
pop
inc
nop
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
push
add
add
arpl
add
add
push
add
loopne
add
add
push
add
mov
add
test
loop
js
add
in
push
sbb
add
mov
jo
add
cld
leave
lcall
in
orl
loopne
add
pop
nop
push
push
push
push
push
push
push
call
cwtl
add
lea
xchg
jb
push
gs
jbe
add
fadds
add
iret
out
add
pusha
add
xchg
xchg
add
imul
add
add
push
add
add
add
incb
add
out
test
out
add
pop
add
in
add
lds
lcall
leave
movsl
xchg
add
shr
mov
add
fsub
add
cmc
mov
lea
pop
cmpb
jne
push
shr
pop
add
push
lea
push
lea
push
push
push
call
xchg
add
add
js
add
add
lcall
add
add
add
mov
add
lods
jb
lahf
add
push
sar
xchg
add
xchg
add
add
push
xchg
pop
add
icebp
jno
pop
mov
data16
nop
push
push
push
push
lea
push
push
push
call
xchg
test
icebp
pop
sti
out
pop
fisubl
jns
repnz
fbld
add
lds
stos
add
add
ret
add
add
add
add
out
sti
add
arpl
mov
sub
mov
mov
xchg
add
faddl
repnz
add
out
fcoml
mov
lea
pop
nop
push
shl
pop
cmp
je
nop
push
push
push
push
push
push
push
call
int
test
add
mov
add
cmpsb
jne
add
add
andb
scas
stos
add
popa
idivl
add
gs
add
out
add
pop
nop
push
shr
not
shr
pop
inc
push
ror
rol
lea
shr
pop
nop
nop
push
inc
pop
cmp
jb
push
lea
push
push
call
bound
add
mov
jae
pop
add
jle
add
mov
add
jbe
add
add
hlt
jns
push
add
pop
add
add
add
vpminsw
hlt
jnp
mov
mov
flds
mov
push
lods
add
mov
lea
pop
xor
push
lea
push
push
push
push
lea
push
call
in
pop
je
add
push
add
sahf
add
jecxz
add
mov
add
mov
add
stos
add
test
cmc
icebp
add
cmpsl
add
loopne
add
add
cltd
mov
add
add
clc
add
add
jmp
data16
mov
inc
rol
lea
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
out
add
add
add
lock
in
mov
jo
rcr
add
add
fildl
mov
pop
mov
add
add
add
add
lods
add
add
add
push
roll
mov
out
add
jecxz
nop
hlt
jecxz
out
add
popa
jns
add
add
mov
push
add
add
mov
mov
mov
lea
pop
add
push
push
push
push
call
add
add
xchg
add
fldl
rcr
add
jo
mov
gs
outsl
mov
test
lret
add
scas
jge
mov
subl
pop
fldenv
add
add
pushf
add
add
push
mov
lea
pop
movzwl
push
shr
pop
mov
push
push
push
lea
push
call
imul
popa
lahf
out
add
fiadds
add
fists
mov
rcr
loopne
add
ja
insb
loopne
pusha
add
mov
add
add
flds
mov
add
in
mov
repnz
mov
ljmp
out
pop
pop
add
stos
ret
add
pop
add
push
dec
shr
pop
mov
push
shr
sub
add
pop
xor
push
shl
lea
ror
sub
pop
xor
shl
push
add
pop
xor
shl
push
add
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
cwtl
hlt
stc
mov
rolb
push
add
add
arpl
mov
add
add
add
stos
hlt
add
mov
xchg
add
add
aad
jp
jbe
movsl
pop
xchg
add
add
pop
shl
xor
push
inc
pop
mov
push
push
push
push
push
push
call
add
add
add
push
add
pop
mov
add
cmpsl
push
stos
outsl
adcb
enter
push
add
add
stos
mov
add
add
mov
jp
xchg
add
add
sti
sahf
pop
adcl
add
sahf
je
cli
add
addb
add
add
sbb
inc
hlt
pop
push
sub
inc
rol
pop
pop
pop
push
push
push
push
call
add
int3
test
add
jns
rclb
push
adcb
in
add
push
push
pop
jmp
out
add
ja
fwait
mov
add
mov
fidivs
hlt
add
add
jp
add
aad
int
jmp
jmp
pop
add
xchg
lods
add
cli
cwtl
add
add
add
add
jnp
int3
lea
pop
pop
push
ror
dec
pop
leave
push
add
shl
ror
shl
pop
ret
push
shl
shr
add
pop
push
push
add
pop
mov
push
push
push
push
push
push
call
add
jmp
add
pop
mov
mov
add
loop
add
add
pop
jecxz
sti
xchg
fnstcw
rolb
mov
mov
add
pop
mov
add
test
jmp
stos
add
add
rclb
push
add
jae
push
xchg
xchg
push
mov
testl
add
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
add
add
push
mov
pusha
add
add
add
rorb
add
fldcw
push
out
fdivrl
push
add
add
loope
jb
push
shrl
aam
pop
fwait
call
testb
add
mov
out
fiaddl
pop
mov
lret
add
add
mov
lea
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
jno
andl
testb
add
jmp
add
movsl
lods
arpl
gs
loopne
int3
jmp
imul
add
push
scas
add
mov
mov
lea
pop
push
push
xor
ror
pop
push
push
push
push
push
push
push
push
push
push
push
call
pop
add
push
mov
test
clc
test
popa
test
xlat
jl
movsl
add
hlt
add
add
cli
add
add
jmp
push
add
out
add
out
add
add
add
add
mov
lea
pop
mov
mov
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
xchg
out
mov
insb
cmc
pop
push
arpl
fs
arpl
jge
add
lret
aam
in
xchg
lret
stc
xchg
fidivrs
mov
sahf
pop
add
jnp
add
add
push
add
add
add
mov
jle
lods
movsl
mov
outsl
add
out
mov
stc
xchg
fwait
add
add
std
add
ror
jle
pop
add
add
jae
ja
xchg
pusha
and
mov
push
push
push
push
call
add
scas
add
add
add
sti
fs
addb
add
add
add
add
add
add
add
add
xchg
add
aam
add
stos
xchg
mov
mov
mov
lea
pop
test
je
push
sub
add
pop
mov
test
je
push
sub
pop
mov
mov
push
push
push
push
push
push
call
lret
add
push
js
leave
leave
add
add
jle
fildll
pop
add
push
test
add
jle
jle
loopne
in
add
jne
sahf
add
xchg
aam
rcrb
ret
jne
mov
xchg
xchg
lret
iret
out
add
mov
lret
add
xlat
add
fadds
jnp
mov
add
testb
aad
add
leave
mov
lea
pop
mov
inc
push
ror
shr
rol
pop
cmp
je
test
je
push
add
sub
sub
lea
pop
mov
inc
push
add
inc
sub
pop
cmp
je
push
push
push
push
push
push
call
add
add
stc
aad
fiaddl
lods
xchg
jp
sahf
data16
rolb
push
in
int
add
push
mov
insb
add
loopne
add
rorl
mov
js
add
pop
jbe
add
mov
insb
subb
fiadds
ret
mov
lea
pop
test
jne
push
not
pop
xor
push
push
push
lea
push
lea
push
push
push
call
push
in
xchg
insb
mov
add
gs
add
in
add
push
mov
lret
mov
add
add
imul
cmpsl
add
je
pushf
add
test
mov
pop
add
add
xchg
add
add
pop
test
pushf
add
pusha
add
pop
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
add
jecxz
add
add
std
in
out
add
add
in
mov
add
out
push
add
mov
add
les
mov
iret
add
xchg
jnp
add
fstl
xchg
jnp
add
cwtl
imul
pop
pop
push
shl
shr
pop
leave
push
add
pop
ret
push
lea
push
push
push
push
call
add
lock
mov
les
add
add
shl
scas
lcall
add
add
aad
add
fldt
add
add
adc
jge
mov
add
int3
lea
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
in
add
in
pop
sbb
imul
clc
jle
jbe
les
stos
testl
add
add
xchg
add
fiadds
lea
add
add
add
add
push
mov
lea
pop
inc
push
inc
pop
cmp
jne
push
push
lea
push
push
push
call
push
in
cltd
mov
loop
test
add
add
mov
xchg
neg
add
sahf
imul
mov
mov
add
add
mov
add
ret
add
mov
mov
add
add
lds
pop
lea
push
push
push
push
push
push
push
lea
push
call
mov
popf
mov
repnz
add
add
je
push
xchg
ret
add
lock
mov
sbbb
lods
faddl
aad
add
mov
mov
add
lcall
fldl
jecxz
xorb
jmp
add
add
addl
jmp
push
aam
bound
pop
mov
push
push
push
push
push
push
push
push
push
call
gs
in
add
jns
shr
mov
enter
xchg
out
popl
add
mov
add
repnz
out
jnp
jnp
mov
add
pop
lds
loope
add
sarl
pop
test
je
mov
push
push
push
push
push
push
call
add
mov
in
mov
ffreep
mov
push
push
add
add
pop
push
testl
stos
add
add
fnstenv
add
add
pop
add
pushw
std
mov
in
ljmp
popf
imul
test
add
add
mov
lea
pop
add
push
lea
inc
lea
dec
pop
cmp
jne
push
push
push
push
push
push
push
push
call
add
add
add
mov
addl
movsl
jle
add
add
pop
decb
xchg
add
jae
fdivl
stos
mov
xchg
mov
add
movl
and
inc
add
sub
add
pop
test
je
push
rol
lea
sub
pop
mov
add
push
lea
push
push
call
popa
add
mov
mov
fbld
pop
mov
jo
add
sar
fdivr
add
add
jecxz
out
sahf
jbe
stos
mov
mov
mov
mov
mov
fmull
loopne
test
jmp
push
push
push
push
push
push
call
xlat
add
loopne
add
rolb
mov
add
xchg
imul
out
add
fcoml
push
pop
add
jmp
movsl
int3
add
fwait
add
add
add
xchg
pop
rcrb
test
scas
xchg
mov
arpl
jle
leave
mov
add
clc
out
xchg
pop
add
jno
add
lret
in
hlt
lea
pop
xor
push
lea
push
lea
push
lea
push
push
call
sahf
push
data16
data16
ret
add
movsb
fbstp
outsl
icebp
add
lds
cld
add
sti
mov
add
data16
mov
je
add
adcl
add
test
pop
mov
add
rcr
pop
jl
add
mov
lea
pop
pop
push
dec
sub
pop
pop
push
inc
pop
pop
pop
push
push
lea
push
push
push
push
push
call
sahf
mov
ljmp
lods
add
push
int3
cld
imul
add
add
add
mov
mov
in
rol
mov
add
lock
add
ror
outsl
add
stos
add
jae
add
mov
ljmp
leave
push
xor
pop
ret
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
pop
add
fisubs
add
add
jl
add
adcl
mov
stos
out
aad
add
nop
add
movl
add
cmpsb
add
add
mov
pop
outsl
int
fwait
add
add
mov
mov
lea
pop
pop
push
pop
pop
pop
push
push
push
push
lea
push
push
push
push
call
jbe
add
add
fsubs
mov
add
jnp
add
pusha
mov
add
add
imul
leave
popa
jbe
add
add
add
jle
jl
xchg
flds
xlat
mov
mov
movsl
into
push
add
add
aam
bound
pop
pop
push
lea
push
lea
push
lea
push
push
lea
push
push
call
xlat
frstor
in
jle
add
leave
lcall
add
add
rorl
mov
aam
jp
addr16
mov
push
loope
add
out
mov
lea
pop
leave
ret
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
mov
add
fwait
add
jnp
call
pop
out
xchg
call
int
add
add
ror
push
lock
add
add
jbe
mov
fimull
movsl
add
hlt
mov
pusha
and
mov
push
inc
pop
pop
pop
push
lea
push
push
push
push
push
push
call
add
sti
xchg
add
cltd
add
pop
rorb
pop
add
add
ror
jne
arpl
hlt
add
push
out
add
add
mov
lea
pop
pop
push
push
push
push
push
push
call
add
cli
add
je
imul
jb
add
push
mov
add
add
addb
add
mov
vpaddsw
cmpsb
add
add
add
add
rcll
add
rclb
stos
leave
add
popl
mov
lahf
call
add
scas
mov
lea
pop
pop
push
add
pop
leave
push
push
push
push
push
lea
push
call
mov
mov
add
roll
cltd
movsb
add
cld
pop
push
add
fs
rcrl
mov
les
leave
flds
lods
out
mov
out
mov
jp
into
pop
jge
add
popl
add
add
add
jle
add
add
lods
push
pop
stc
in
scas
faddl
pop
add
push
cli
jl
add
hlt
lea
pop
ret
test
push
test
jae
test
jb
xchg
gs
out
jae
xor
jae
test
jae
movsb
mov
add
cwtl
add
jecxz
and
fnstcw
pusha
or
jae
jmp
aaa
dec
lds
xchg
fstpl
popf
cltd
jmp
pop
xlat
push
fwait
mov
mov
mov
stos
mov
inc
cmp
sub
movsl
or
mov
adc
pop
aam
mov
fs
xor
ds
fisubs
enter
pop
ja
sbb
push
xor
cmp
jae
das
into
mov
push
aas
dec
insl
iret
pop
daa
arpl
mov
cmpsl
fldl
dec
addb
icebp
jno
push
cmp
bound
int3
vcmppd
adc
or
jecxz
movsb
push
fmuls
push
hlt
fcoml
jae
add
clc
aaa
outsl
test
and
mov
in
mov
fs
shlb
pop
push
push
xchg
outsb
push
jmp
jbe
outsb
inc
mov
idivb
movsl
lea
push
mov
out
daa
out
push
mov
inc
jns
sub
loopne
in
mov
sbb
scas
dec
adcb
aam
pop
cli
dec
mov
xor
std
dec
jno
xor
mov
mov
xchg
dec
sub
mov
pop
push
jle
loope
jbe
xor
adc
in
xchg
jecxz
cld
nop
cmc
sti
mov
imul
test
out
cmp
and
adcb
mov
jp
pop
movsb
cs
iret
cmp
add
ljmp
lcall
sbb
mov
or
rolb
mov
xor
dec
cmc
sbb
popa
xor
adc
in
mov
in
dec
add
loope
int
in
lcall
xor
inc
pop
and
fisttpl
or
repnz
pop
jno
sub
in
enter
jb
jle
ljmp
addr16
mov
or
xor
test
push
int
lds
scas
gs
mov
call
jecxz
imul
pop
sub
call
jbe
and
shr
adc
xor
adc
pusha
mov
pusha
rorb
in
jnp
dec
fidivl
pop
aas
scas
lods
sub
sbb
xchg
inc
fdivs
adc
aas
clc
sbb
mov
iret
leave
mov
xor
xor
sub
call
adc
movsl
jo
lock
cltd
jb
in
inc
es
jae
addl
mov
popf
pushf
outsb
xchg
sub
ds
cltd
leave
sub
inc
je
jmp
mov
shll
dec
adc
sub
push
out
mov
test
jge
shr
aas
mov
pop
pop
jp
hlt
outsb
jmp
sub
mov
mov
test
xchg
or
rorb
mov
lret
sbb
fcoml
stos
jo
out
pop
imul
inc
loope
ljmp
xor
rol
data16
int3
arpl
or
jns
int3
inc
fwait
inc
stc
mov
std
inc
lret
sub
mov
push
mov
pop
push
leave
shll
add
xorb
mov
mov
stc
mov
popa
xor
je
xchg
push
xchg
push
jge
sbb
nop
mov
mov
xor
fcomps
shrb
in
inc
push
fimuls
ret
es
out
mov
sbb
sbb
sti
out
stc
fildl
lock
and
sub
jge
mov
rcrl
shl
adc
sub
xchg
popf
push
lret
in
shlb
out
dec
xchg
sahf
loope
jb
pop
push
clc
mov
sub
es
or
mov
mov
adc
add
cmp
xchg
cld
push
adc
lret
shl
inc
mov
add
jbe
mov
cld
cltd
add
xor
insb
sub
and
stos
je
clc
cmp
jb
push
enter
cltd
mov
fs
rolb
push
sub
push
sbb
int3
cmc
ja
and
call
test
insl
jbe
testl
mov
gs
int3
or
inc
call
leave
cmp
jnp
xchg
movsb
inc
push
mov
aam
stc
jp
ret
sub
xor
outsl
add
fisttpl
in
mov
sbb
push
xchg
iret
aam
ret
push
out
adc
mov
push
cmp
dec
pop
cmp
loope
sub
test
mov
push
cld
test
or
mov
movsl
mov
or
pop
int3
insl
ss
repnz
popf
and
sbb
notb
or
pop
mov
outsl
stos
or
mov
pop
jecxz
mov
outsb
imulb
jecxz
jl
adc
lock
jge
ss
cli
shlb
fwait
mov
and
push
mov
and
dec
test
xchg
iret
lods
jp
loope
or
sahf
inc
fdivrl
mov
test
neg
mov
push
mov
and
dec
jae
rcl
fst
dec
cmpsb
push
dec
xchg
push
xchg
nop
or
sbb
add
dec
push
sar
pop
xchg
imul
sbb
sbb
shl
sbb
sti
push
outsb
mov
addb
test
addr16
lds
sub
sub
sub
and
je
pop
jbe
or
sub
add
pusha
out
jl
into
xchg
pop
mov
mov
pushf
cmp
hlt
aam
fs
xchg
adc
in
fs
push
mov
mov
adc
pop
scas
icebp
mov
movsb
pop
dec
test
inc
mov
imul
sbb
dec
push
and
add
mov
mov
push
mov
movsb
mov
mov
cmp
mov
xchg
dec
sahf
cmp
bswap
bound
cmpsb
sub
sbb
jge
add
rcrb
mov
dec
mov
jne
gs
cmp
lods
cmpsl
iret
push
or
jge
js
xor
repnz
stos
cmpsb
push
mov
scas
cs
and
in
pop
sbb
scas
lds
stos
xchg
inc
and
mov
sub
jl
lea
inc
outsl
jmp
into
and
inc
popf
int
test
pop
xchg
inc
int
adc
mov
movsb
mov
xchg
inc
je
mull
insb
xchg
jg
inc
mov
rcr
or
xor
xchg
sbb
xchg
gs
cmp
lock
iret
test
lahf
popf
adc
mov
jle
dec
xlat
adc
mov
jecxz
sub
mov
ret
lea
stos
mov
adc
cmp
aaa
push
jnp
test
mov
push
xchg
jb
arpl
iret
insl
popa
loop
xor
andl
out
mov
or
mov
push
mov
rorl
ret
out
mov
xchg
dec
inc
scas
testb
fildl
imulb
fisubs
push
mov
imul
xchg
mov
sub
jecxz
test
leave
das
sahf
inc
out
cwtl
inc
out
sbb
mov
mov
lcall
in
or
push
sbb
fs
pop
cs
stos
adc
cmpsb
and
div
enter
jp
test
loopne
str
shll
mov
push
xor
jnp
dec
daa
push
mov
mov
idivb
push
out
cmp
dec
sbb
mov
and
xchg
out
mov
dec
or
push
fcmovu
inc
popf
out
adc
mov
ljmp
and
sbb
jnp
adc
dec
dec
insb
pop
lds
orb
and
push
dec
dec
adc
sbb
xchg
repnz
xor
inc
clc
daa
pop
pop
fisubrl
xchg
lods
data16
mov
mov
adc
jb
outsl
shll
in
lds
stc
xchg
sub
ss
cmpsl
lcall
cmpsb
inc
xor
addr16
out
mov
clc
mov
cmp
leave
arpl
push
loop
cmp
ret
pop
mov
mov
shlb
lret
mov
lods
fisubrl
pop
insl
push
push
insl
mov
insb
jo
shll
dec
movsb
cmp
mov
rcl
push
pop
ret
xchg
jl
daa
out
sub
imul
into
test
mov
scas
fwait
mov
je
es
mov
jl
enter
repnz
or
vpsubb
add
inc
jp
out
xchg
fisttpll
loop
push
pop
push
adc
mov
out
shr
mov
add
or
test
mov
out
push
cmp
cld
push
test
rcrb
dec
pop
cli
fidivl
cld
imul
outsl
pop
pusha
adc
bound
js
inc
pop
bound
xor
pop
mov
les
pop
push
loope
ds
fldenv
xor
and
sbb
scas
repz
mov
adc
mov
subb
adc
and
mov
sbb
push
lahf
xor
bound
popa
ss
aad
iret
pop
push
dec
sti
leave
mov
jg
aam
mov
jne
adc
mov
test
sbb
scas
and
ljmp
jbe
mov
push
test
icebp
aam
dec
arpl
mov
jle
adc
shl
hlt
cmp
mov
mov
fidivrs
sub
loope
jmp
dec
or
add
mov
addl
cmp
pushf
jmp
pop
mov
mov
ss
cmp
imul
popa
push
clc
or
xchg
outsb
jmp
lods
test
out
xchg
sbb
ret
mov
adc
xchg
pop
mov
push
icebp
test
sbb
add
insb
pop
das
push
mov
pop
add
or
test
mov
fnsave
or
mov
inc
cld
shl
xlat
dec
xlat
mov
int3
das
sbb
mov
jmp
mov
test
jnp
gs
sub
xor
fdivr
sbb
clc
xchg
mov
cmpsl
es
mov
test
adc
ret
addr16
not
push
iret
ss
push
addr16
mov
cmpsb
data16
and
push
mov
mov
mov
pop
les
fnsave
sbbl
ficomps
mov
xchg
clc
sbb
inc
jne
out
push
les
mov
fwait
add
xor
sbb
aad
sbb
mov
or
jne
adc
fisubrl
stos
cmc
ljmp
xchg
orb
mov
or
jns
mov
xchg
jne
jo
mov
leave
push
sub
dec
xor
add
test
cwtl
jnp
daa
loope
jo
out
lret
xor
pop
adc
push
stos
pusha
mov
mov
insl
sbb
jno
push
dec
pop
jp
sub
les
les
popf
popf
scas
in
test
rorl
in
test
xor
enter
flds
inc
movsb
adc
ja
add
ss
cmp
push
xor
or
adc
pusha
or
das
xchg
dec
lahf
jl
lea
sahf
out
push
mov
push
jg
xchg
cld
syscall
sub
jmp
sbb
testb
mov
sub
and
lret
cmpsb
lods
aaa
cmp
and
mov
cs
add
cmp
into
cmp
adc
mov
aas
mov
and
sub
mov
sti
adc
sbb
divl
xchg
mov
sub
gs
cmp
cltd
les
out
iret
cmpsb
mov
clc
cltd
sub
ljmp
pushf
push
pop
adc
inc
add
and
jno
aaa
sbb
cltd
test
dec
jae
dec
rolb
mov
dec
mov
or
pop
into
adc
ds
or
aas
mov
mov
and
mov
in
popf
nop
sbb
int3
imull
mov
jp
imul
std
push
arpl
cwtl
pop
ljmp
fcompl
add
or
out
jns
enter
sub
mov
dec
jmp
jo
shr
subl
pop
or
jp
movsb
cmp
adc
into
gs
arpl
les
adc
stos
rclb
loopne
adc
into
sbb
jns
leave
incb
pop
push
sbb
cmp
out
rclb
cmpsb
adc
dec
pop
xchg
mov
jle
imul
test
push
sub
je
mov
jg
sbb
xlat
out
lcall
scas
sahf
imul
or
cmp
jecxz
jl
mov
mov
and
xor
dec
and
nop
mov
mov
notl
xchg
test
dec
or
sub
aam
lea
sbb
and
loope
add
xchg
fiaddl
lock
xchg
out
xchg
add
push
pop
insl
int3
inc
push
and
mov
imul
cmpsl
fdivp
mov
pop
outsb
cmc
test
xor
lret
xor
cmpsb
repnz
xlat
icebp
sti
jp
sub
fdivrs
cltd
int
orb
lds
outsl
test
in
or
rcll
incb
xchg
insb
cmc
fs
mov
cmp
incl
lret
in
int
arpl
lret
or
adc
mov
dec
stos
dec
bound
jno
xor
lea
xor
out
inc
movsb
lods
sub
das
test
jg
xchg
jae
push
or
sub
mov
addr16
int
cmp
adc
inc
xor
sbb
xchg
cmpsb
push
cmp
xor
stos
sub
out
lret
sbb
push
xor
lods
loop
cmc
js
mov
jno
inc
cwtl
int3
jg
insb
pop
addl
add
aam
add
ret
std
jnp
mov
and
jl
xchg
or
xor
mov
mov
pop
shlb
pop
sbb
movb
xchg
fwait
or
lcall
arpl
and
inc
dec
mov
mov
push
sti
mov
sar
jecxz
pop
sub
sahf
in
lahf
fs
mov
mov
dec
mov
fadds
sbb
ss
scas
push
test
xor
xor
mov
or
fwait
lds
cwtl
and
xchg
out
push
jnp
stc
mov
or
orl
lret
cld
popl
cmpl
loop
ret
push
loope
inc
sub
stc
ljmp
test
incb
in
daa
mov
mov
js
out
gs
std
mov
cmp
xorl
nop
int
scas
inc
jle
subb
dec
inc
or
inc
ss
jae
cs
call
jo
xor
add
jecxz
shl
dec
lret
stos
notb
push
ja
xchg
data16
cmc
stc
fstpl
sub
jl
pop
data16
pop
test
xor
push
movsl
loop,pt
aad
outsl
rorl
sbb
mov
push
cmp
nop
out
dec
xchg
scas
sbb
ss
jg
leave
push
std
inc
je
test
sarl
jge
loopne
jns
scas
out
lea
push
roll
push
push
enter
aaa
adc
cli
push
pop
out
jmp
mov
pop
jp
sub
jmp
in
sub
push
and
sti
adc
jg
mov
or
loopne
shl
clc
sub
frstor
pop
fmull
stc
jbe
aaa
cmpsl
sub
nop
pop
iret
sbb
sub
push
jmp
fs
int3
pop
push
sub
pop
sbb
dec
lods
imul
into
mov
out
mov
lret
add
xchg
hlt
pop
shrb
mov
insl
rcrb
sahf
jo
and
test
call
push
dec
lock
loop
push
mov
xor
loop
fdivrl
cmpsb
pop
gs
mov
pop
gs
jge
or
lret
sub
cmp
aaa
jnp
loopne
aas
and
pop
xchg
push
adc
push
fsqrt
lods
int
push
push
in
aas
stos
xchg
pop
mov
jg
cwtl
fldl2e
out
push
cmp
cld
fsubrs
jle
aad
lea
lret
in
imul
test
inc
pop
fs
mov
cvttps2pi
lock
shrb
test
gs
ret
aam
lods
aaa
in
lock
popf
jnp
push
and
cmp
jns
nop
inc
shrl
ret
jmp
shrl
mov
das
nop
cltd
lock
imul
and
gs
or
sub
xor
add
repnz
dec
arpl
dec
fidivrs
mov
xor
jno
mov
shrl
cmp
adc
stos
imul
mov
mov
lea
cmp
data16
add
incl
clc
inc
inc
movsl
cld
stc
and
xchg
icebp
jecxz
adc
push
out
leave
and
adc
jge
bound
cmp
out
loop
rcll
xor
cli
sub
xchg
out
std
sub
inc
loope
cmc
push
in
mov
stos
icebp
js
cmp
out
mov
rcll
fbstp
aas
insb
xor
out
pushf
xor
cmp
aas
sub
cmpsb
enter
cmp
ljmp
aad
add
xchg
les
sub
dec
mov
out
and
push
or
sub
fs
xor
and
dec
add
lds
sbb
pusha
push
mov
and
jecxz
arpl
mov
iret
leave
push
mov
cmpb
sahf
enter
dec
shrl
movsl
lahf
adc
push
jg
push
lret
add
adc
clc
call
outsl
push
cmp
divb
out
jo
jmp
das
mov
xchg
mov
push
pusha
sbb
andl
mov
outsb
int3
cmp
adc
pop
cmpsl
ret
cmpsl
sbb
mov
in
fimull
fisubl
fsubs
push
cmp
mov
add
leave
dec
push
push
ret
in
mov
mulb
cwtl
jnp
cld
in
imul
stos
jo
sub
cmp
sub
bound
fnsave
jo
fiadds
xor
popf
stos
jnp
stos
adc
repz
sub
popa
stc
mov
and
xor
scas
jle
fildl
adc
and
jne
fnstsw
clc
cmpsb
pusha
pushf
push
popf
xchg
adc
mov
or
in
mov
pushf
mov
hlt
sbb
lahf
lds
mov
sbb
insl
fadds
mov
std
scas
adc
jg
mov
inc
scas
xor
sbb
jl
out
cli
ss
xor
mov
xor
ret
pushf
xor
and
test
add
inc
icebp
mov
divps
mov
je
dec
insl
inc
shrb
ljmp
mov
and
sub
ret
das
out
or
lahf
xor
sbb
iret
adc
out
pop
add
in
sbbb
sbb
push
xchg
jo
mov
xlat
sbb
clc
xchg
fcoms
fmull
out
sub
lea
addr16
mov
adc
sub
push
fnsave
lock
cmp
dec
inc
outsb
and
repz
push
bound
xchg
sbb
sbb
adc
pop
sub
lea
cmp
push
ljmp
push
mov
mov
outsb
divl
xor
orb
shr
sarl
cmp
bound
jmp
int3
pop
or
out
stc
cs
movl
dec
rclb
and
sbbb
les
jae
cmp
std
fdivp
scas
cli
loope
cmp
cmc
test
xchg
adc
xor
pop
jge
add
xchg
cmp
inc
sbb
sbb
or
pop
inc
fstpl
adc
xchg
dec
mov
adc
shr
sub
nop
adc
cwtl
dec
fdivr
pusha
jno
adc
cmp
popf
outsb
je
inc
cmp
movsl
fnstsw
aam
movsl
negl
popl
xor
sbb
daa
adc
dec
adc
mov
push
rol
test
cld
sahf
lret
repnz
inc
dec
subl
insb
adc
pop
out
mov
and
sub
cmc
and
ljmp
mov
fmuls
inc
mov
xlat
mov
xor
jp
lret
jge
pop
ja
mov
cmp
cmp
in
cmp
sbb
jecxz
sbb
lret
fstpt
push
push
repz
or
insb
or
jl
dec
mov
mov
and
dec
test
pusha
cmpsl
dec
sub
aad
cwtl
cmpsb
packuswb
out
xchg
mov
dec
cmpsl
mov
js
stc
mov
or
lods
cld
mov
push
in
mov
lret
dec
aad
push
imul
fld
test
xchg
push
test
fdiv
mov
loope
fildll
inc
stos
ret
je
mov
lods
add
adc
loop
sub
sbb
shrl
cwtl
ret
movsb
insl
adc
je
imul
movsl
adc
mov
fisttpl
gs
les
dec
push
pushf
or
je
xlat
xchg
mov
cmc
push
cmp
push
das
mov
pop
pop
xor
push
push
or
pop
lods
inc
sub
push
orb
test
jns
decb
jno
xor
sub
sub
mov
and
sbb
pop
cmpsl
jecxz
andl
pop
xchg
js
mov
pushf
test
in
ss
test
sbb
add
add
mov
push
test
xor
inc
adc
ds
out
cmp
adc
xor
push
ss
or
addr16
lock
js
sbb
stos
scas
and
fimuls
lcall
sub
push
fsubrl
add
mov
popl
sahf
sbb
iret
pop
imul
mov
jb
lods
push
dec
mov
int3
xchg
sbb
mov
fbld
inc
stos
fdivr
jb
dec
aad
fdivrs
sbb
ret
rdpmc
push
xchg
mov
dec
dec
add
or
pusha
mov
mov
inc
mov
jne
fisubl
popa
push
sbb
inc
pop
dec
repz
fildll
je
daa
mov
inc
les
repnz
push
lock
add
insb
int3
xor
arpl
loopne
push
pop
dec
mov
jns
adcb
scas
xchg
push
into
mov
ret
dec
mov
movsb
push
or
mov
ret
or
insl
or
ds
sub
int
mov
mov
xor
and
xlat
inc
jnp
mov
dec
mov
mov
mov
sbb
data16
ret
and
lcall
ret
or
push
les
sub
cltd
sbb
pop
rcll
sarb
fs
scas
xor
push
out
notl
adc
pop
frstor
jb
stos
pop
cld
pop
jno
scas
int3
sarl
xchg
gs
mov
das
ret
jge
sbb
loop
cld
sbb
inc
inc
mov
xchg
cli
jge
add
sarb
popf
mov
push
pop
xchg
xchg
pop
inc
pop
xor
cli
pop
or
pcmpeqw
or
xchg
mov
in
sub
jl
jp
jns
jnp
out
cmc
cmp
imul
and
mov
nop
or
adc
inc
icebp
test
and
les
in
dec
push
aam
ror
ljmp
and
cmp
inc
cmpl
pop
add
inc
pop
jbe
adc
sbb
testl
xchg
hlt
mov
adc
or
in
jge
outsl
iret
icebp
bound
mov
iret
push
dec
adc
jne
sbb
lock
mov
pop
cld
mov
mov
test
gs
xchg
push
sub
daa
xchg
mov
sahf
inc
inc
in
pop
adc
ljmp
test
pop
ret
mov
or
push
xchg
roll
jl
mov
js
jae
shrb
leave
out
arpl
mov
xchg
sbb
add
out
xchg
test
mov
xorl
jno
addb
dec
inc
push
rclb
jl
icebp
jne
mov
clc
dec
into
add
popf
sub
ret
je
xchg
xchg
dec
rclb
cmp
sbb
fistps
into
je
or
xchg
mov
lea
jecxz
pop
inc
bound
je
xchg
mov
jge
lcall
pop
dec
lahf
scas
mov
push
adc
into
dec
out
lea
test
push
out
negl
xor
into
jge
mov
push
nop
cmc
out
in
dec
std
cs
imul
testl
and
jg
int3
jne
fdivrl
mov
or
call
jae
sbb
xor
sbb
mov
mov
mov
mov
fwait
mov
shrb
rcrb
push
scas
dec
ss
rol
cmpsb
pop
push
cs
inc
lret
pop
xor
int
inc
mov
gs
sbb
push
lret
das
add
jo
xor
clc
inc
das
cltd
jge
xor
pop
shrl
shll
mov
movsl
mov
xchg
inc
icebp
push
fmull
mov
je
sahf
push
pop
out
sarl
mov
fldt
and
add
dec
pop
xor
rcrb
pop
addr16
dec
jle
scas
packuswb
movsl
aam
aad
leave
mov
andl
loope
xor
in
sti
cltd
daa
push
cmpsb
test
dec
jno
mov
mov
dec
scas
jns
mov
mov
popf
push
int3
into
xchg
scas
insl
lcall
inc
jecxz
lods
test
add
lret
fstl
mov
mov
leave
inc
sub
inc
gs
in
inc
lock
test
jnp
scas
mov
inc
mov
mov
into
fisubrl
pop
addr16
and
pop
adc
mov
mov
add
xchg
jecxz
push
ja
jb
inc
aaa
cli
sti
xor
xlat
mov
mov
or
stos
out
cmp
mov
ret
cmc
scas
sti
inc
and
movsb
mov
inc
and
push
dec
ret
cmovle
lods
mov
dec
loope
lock
xchg
sbb
daa
adc
test
jp
js
pop
shlb
lea
cmp
rorb
jns
ret
adc
push
xlat
imull
mov
int
or
or
adc
mov
pop
dec
std
mov
add
dec
xlat
mov
stc
xor
lds
pop
pusha
mov
jle
int3
xchg
or
fldcw
jno
xorb
rcl
xor
mov
mov
andb
sub
xlat
mov
lods
repz
sti
or
jmp
lret
or
cmpsl
inc
xchg
sbb
and
nop
ljmp
pop
jl
inc
in
mov
wbinvd
repnz
lock
roll
cmpsl
dec
ljmp
mov
fstp
dec
dec
gs
and
int
jne
or
sub
shll
jns
sar
fwait
adc
pop
and
pop
push
pop
in
mov
cmp
push
dec
xchg
pop
cmp
pop
inc
nop
je
dec
xor
push
inc
add
pop
enter
in
xor
push
xor
cmp
stos
xor
stc
inc
int3
fsubrs
mov
mov
jae
cmp
jge
fiadds
mov
dec
mov
jae
cmpsb
cmp
mov
mov
or
sub
jo
movsb
lock
test
dec
and
or
xchg
inc
jnp
sbb
ret
inc
or
add
cmpsl
sbbb
sub
rorb
out
out
jg,pn
scas
inc
push
out
mov
sbb
inc
orb
xchg
and
or
mov
sub
clc
sub
jo
iret
movsl
leave
je
mov
jb
mov
icebp
fstpt
sarb
andb
fdivl
in
push
push
cmpsl
shll
xlat
mov
movsl
nop
adc
aad
fsubrs
push
or
sbb
in
adcl
sbb
inc
xorb
pop
or
dec
push
int3
mov
mov
pushf
popw
xchg
mov
out
imul
repnz
inc
pop
inc
mov
add
jnp
test
insl
inc
xor
or
cld
mov
mov
and
ja
pusha
test
sbb
or
mov
shl
fildll
xor
xchg
add
jle
lret
jne
xchg
and
push
scas
pop
sbb
xchg
int3
push
pop
pop
idivb
mov
stos
pop
add
cmp
lret
mov
insl
or
loopne
or
cltd
cmp
jmp
push
shll
sarb
int3
pop
in
pop
cld
mov
mov
std
lret
cli
int
xor
push
adc
gs
mov
test
addl
jne
sbb
jnp
push
cmpsb
std
out
fisttps
ret
cwtl
outsb
or
mov
mov
pop
gs
jecxz
and
or
jp
jmp
lods
lods
and
cmpsl
xchg
mov
in
sarb
pusha
rolb
cmp
jne
movsb
mov
daa
jl
std
sub
leave
and
push
ret
cwtl
shl
xchg
dec
dec
out
inc
pop
jmp
inc
fs
rorb
call
inc
sbb
neg
lret
cld
add
gs
mov
cmpsb
sub
xor
lock
mov
adc
mov
stc
scas
mov
cmp
je
cmp
in
push
test
jns
dec
jbe
jns
push
outsl
xchg
fs
popf
scas
std
xor
sub
pop
inc
lret
xchg
and
pop
or
push
mov
sbb
and
add
dec
pop
nop
jp
xor
mov
inc
cmp
add
jmp
leave
pmulhuw
inc
and
push
add
rcl
sbb
mov
mov
movsl
js
lods
xor
sbb
sub
stos
and
xchg
stos
adc
mov
lret
jl
pusha
iret
sub
rclb
push
arpl
push
xchg
inc
mov
xchg
xchg
xchg
mov
mov
jl
leave
mov
je
test
add
push
jbe
push
sub
pop
cmp
adc
in
movsb
dec
push
enter
pop
call
xchg
movsl
mov
shll
lock
fs
fnsave
push
outsb
lcall
ss
xchg
test
mov
pop
out
aam
loopne
or
sub
fidivrl
clc
xchg
ljmp
xor
stos
ret
ret
cmpl
cld
or
mov
out
popf
cltd
push
and
popf
push
mov
mov
stos
scas
add
les
fnsave
stos
dec
xchg
rcrb
outsl
xlat
adcb
int3
and
aad
mov
loop
or
xchg
mov
xchg
les
adc
and
sahf
or
out
cmp
int
call
adc
push
jnp
sub
loopne
scas
fcoml
cltd
jp
testl
add
mov
push
inc
test
push
push
pop
inc
push
mov
pusha
mov
and
and
lret
and
fnsave
fs
sub
jl
outsl
push
sub
or
in
stos
aaa
lret
js
and
fcomip
test
or
inc
xor
lcall
andl
bound
addl
xor
mov
or
in
adcl
call
pop
int3
mov
cltd
stos
stos
sub
adcb
sbb
sub
cmp
jmp
data16
push
adc
cs
sub
ja
les
ds
fwait
xor
fadds
and
jmp
sbb
pop
or
push
push
sarb
mov
xchg
push
fnop
push
mov
mov
or
cmp
stos
cmpsb
ljmp
jecxz
test
and
pop
push
sbb
mov
add
sarl
jb
sarl
push
and
es
loope
loope
pop
cli
pushf
rclb
ret
out
mov
cwtl
jle
cltd
sbb
adc
sti
push
ret
and
push
push
frstor
xor
cmc
cmp
cld
mov
call
in
shr
sub
mov
add
add
inc
xchg
pop
push
lret
dec
mov
loope
test
nop
int
lret
xchg
push
jg
out
mov
push
pop
aaa
movsl
imul
mov
xchg
pop
jns
shll
jg
jl
push
xlat
gs
rcrb
mov
cld
sarb
shlb
notb
call
cmp
adc
and
adc
jg
xlat
pop
test
xlat
mov
in
in
outsl
xchg
xor
pop
xchg
out
arpl
xor
xchg
mov
scas
push
pop
cld
jmp
ficoms
imul
aaa
sbb
xor
sbb
adc
sub
cmp
xchg
xchg
inc
pop
hlt
xor
fadds
adc
ss
imul
ljmp
fidivl
out
pusha
lahf
loop
jge
cmc
xorw
mov
add
xorb
and
rcrl
addl
inc
jl
int3
shll
push
movq
mov
jmp
dec
cld
cmpsb
mov
sbb
ret
pop
or
sti
cmc
fyl2x
fldl
and
xchg
mov
mov
xchg
stos
lret
xor
sbb
mov
sub
add
sub
add
mov
inc
or
mov
inc
test
pop
test
sbb
orl
lcall
and
and
subb
inc
fidivs
das
jl
sub
pop
stc
decl
stos
and
sahf
mov
js
xlat
test
inc
xor
lods
ret
lods
xchg
inc
adc
popf
pop
std
pop
pop
dec
mov
mov
xor
bound
bound
je
xchg
shlb
std
call
mov
mov
repz
sub
cwtl
mov
stc
cmp
aaa
xchg
mov
in
mov
loope
push
cld
outsb
pop
out
push
shlb
sarl
mov
fnstenv
orl
cmc
sub
dec
xchg
add
inc
pop
fsubl
hlt
je
push
adc
add
cs
inc
ds
inc
pop
inc
inc
inc
hlt
shrb
ss
push
xchg
or
cmp
add
xor
test
mov
jo
sub
xchg
in
shlb
pop
mov
movsb
or
jl
inc
jnp
mov
sub
adc
jp
mov
mov
lret
dec
jge
dec
lock
pop
in
xor
popa
dec
push
out
xchg
lahf
lret
outsl
fwait
mov
ljmp
insb
adc
lock
pop
int
add
enter
movsb
dec
sub
xchg
xchg
xchg
dec
push
test
das
inc
pop
mov
aas
jmp
pop
fsubs
dec
add
fstps
test
push
das
pop
mov
bound
scas
jp
push
push
repnz
dec
push
push
pop
and
lods
xchg
xor
mov
fbld
sub
into
push
fldt
sbb
test
stos
xchg
int3
xchg
add
out
jle
jno
add
xchg
sbb
rcll
lea
sub
jl
mov
adc
cli
sbb
cmp
and
and
lret
dec
into
mov
sbb
pop
js
in
push
xchg
xor
subb
mov
clc
xor
inc
push
out
push
fistpll
loopne
fcomip
stc
outsb
cmp
loop
mov
jecxz
out
push
in
push
ljmp
inc
imul
ljmp
insl
inc
int3
cmpb
loopne
push
mov
test
mov
cwtl
xchg
cmc
sbb
dec
jecxz
loop
mov
inc
xlat
lea
movl
leave
and
mov
icebp
clc
jle
and
jne
or
nop
add
mov
out
xor
push
cmp
mov
xor
add
jp
jo
mov
lods
sbb
cmp
inc
mov
sahf
or
jb
sbb
pop
push
xor
stc
dec
pop
sub
or
pop
loop
jbe
mov
push
or
jle
out
fstps
out
and
popa
scas
xchg
push
mov
mov
push
add
mov
and
xor
sub
sbbb
xchg
cmp
arpl
xor
or
sbbl
addr16
popf
lock
sbb
jb
xchg
cmp
xchg
xor
jmp
in
cmp
hlt
sbb
dec
mov
pop
jns
test
add
dec
mov
popf
adc
lret
push
outsb
fiadds
out
pop
bound
in
jb
sub
and
movlhps
scas
sbb
xchg
jmp
lods
dec
out
fsubl
inc
idivb
cmp
in
shl
sbb
dec
pop
push
sti
jae
mov
js
inc
dec
cmc
jnp
pushf
mov
popa
jo
mov
cmp
popf
in
shll
hlt
int3
ficoml
xchg
je
cld
mov
fstpl
or
push
in
fadds
sub
lods
je
pushf
xchg
fidivrs
nop
or
shrl
enter
das
std
mov
pop
ficoms
scas
in
sti
addr16
jg
adc
pop
sub
mov
jbe
xchg
mov
adc
pusha
mov
inc
mov
sbb
mov
xchg
fisttpl
pop
and
shrd
sarb
dec
in
adc
xlat
jmp
lods
data16
cwtl
outsl
sub
stc
sarb
movsb
jecxz
jmp
rcrl
xor
clc
pop
or
or
dec
movsb
xchg
cmpsl
je
push
outsb
loope
push
adc
stos
add
mov
sub
cmp
mov
pop
fnstenv
add
lea
dec
or
mov
dec
rcrl
or
sub
cmpsb
icebp
sub
mov
mov
mov
jbe
shrl
adc
ret
xchg
push
iret
jns
fs
sub
ret
add
xchg
cli
sbb
subb
xchg
mov
push
mov
pushf
insl
loopne
rorl
aaa
cmc
out
cmp
pop
xchg
loope
shlb
sub
dec
in
std
sbb
aad
mov
scas
pop
ljmp
dec
mov
gs
dec
or
gs
and
mov
stc
popa
or
rorl
aaa
gs
imul
pop
movsl
pop
fisttpll
sub
pop
test
lock
mov
jp
repz
cmovno
xchg
add
or
dec
fistps
mov
clc
stos
into
xlat
imul
adc
int
hlt
insl
enter
inc
movsb
fcmovnu
imul
jbe
pop
roll
and
cmp
push
inc
mov
mov
jle
into
test
js
das
jp
sbb
out
add
fcmovu
ss
inc
aas
adc
gs
fsubl
jecxz
leave
das
or
rcrb
cwtl
sub
pop
fstl
bound
jle
clc
fisttps
dec
adc
mov
outsb
add
mov
jns
add
xchg
jmp
sub
or
fisubrs
enter
xchg
bnd
pushf
les
out
xor
inc
sbb
cmp
inc
xchg
mov
cwtl
mulb
cmpsl
xchg
enter
xchg
sbb
les
flds
push
dec
subl
and
mov
pusha
sbb
xor
pop
xchg
fisubs
lods
push
pop
outsl
stos
mov
jbe
enter
sarb
cmp
pop
xor
push
jmp
xor
or
addr16
pusha
and
daa
test
add
jo
data16
push
cmc
repz
or
out
jecxz
jno
cmovl
lods
xor
sub
mov
add
jl
iret
xchg
ret
jno
sub
dec
lods
xchg
add
call
hlt
lods
movsl
or
jl
or
pushf
pop
lahf
xor
mov
clc
mov
inc
imull
insl
lods
stos
xchg
mov
mov
pop
xor
inc
iret
test
js
dec
pop
cmp
jle
leave
shr
mov
inc
mov
jmp
je
daa
sbb
or
jmp
dec
xchg
or
dec
movsb
ljmp
mov
pop
jbe
and
shll
imul
out
sahf
dec
mov
and
jb
stos
std
mov
inc
outsl
adc
faddl
repz
clc
cmp
mov
sub
jae
push
nop
mov
lds
inc
jl
cmc
imul
jo
add
dec
mov
cmpsl
fiaddl
jmp
mov
xchg
icebp
ss
jmp
daa
sub
xor
push
hlt
jae
imul
int3
pop
xchg
js
or
or
cmpsl
dec
add
fs
es
xchg
outsl
jp
cmpsl
adc
push
mov
add
xchg
fdivp
xchg
subl
add
cmpsb
adc
pop
shl
in
test
and
mov
adc
iret
pop
xor
insl
jb
sbb
in
xor
cmc
lret
or
out
xchg
fsubrl
mov
jmp
pop
sbb
or
cmpsl
fs
jge
leave
repnz
pop
xor
in
inc
cmp
jnp
hlt
lock
aam
outsl
fdivrs
inc
dec
sahf
jae
rcr
les
in
pushf
cmc
xchg
xchg
jo
loop
push
rcrb
mov
shrl
inc
icebp
jge
lods
scas
ds
mov
xor
push
jecxz
lcall
push
inc
ljmp
mov
pop
sahf
or
aaa
sbb
bound
cmpl
xor
mov
insb
mov
in
dec
jle
mov
subb
mov
push
stos
mov
pop
imul
mov
pop
aam
mov
bsf
pop
addr16
popf
repz
cmp
lcall
sti
xor
xchg
lock
je
and
or
das
or
dec
jmp
cmp
mov
in
jb
and
mov
in
outsl
inc
dec
or
lock
push
je
lea
stos
addl
aas
es
leave
push
in
dec
xlat
sbb
and
inc
sub
out
jb
and
leave
mov
jb
icebp
jnp
pop
adcl
fisttpll
popa
xchg
inc
lock
cmp
ret
popf
data16
call
test
or
push
dec
jle
test
insb
cltd
cwtl
ret
mov
mov
inc
pop
xchg
mov
mov
daa
fdivl
and
cwtl
mov
repnz
sub
xchg
movsl
jl
mov
divb
or
shrb
mov
loopne
inc
std
les
push
mov
clc
in
cmp
adc
pop
mov
int3
and
cmp
rcrl
out
cwtl
inc
mov
test
scas
sub
sub
mov
test
sbb
in
mov
insb
cltd
xlat
adc
iret
call
and
pop
rcl
pusha
xchg
shl
data16
xor
pop
pop
inc
lds
sub
sbb
into
dec
in
incl
int
arpl
push
mov
out
repnz
add
mov
cmp
outsb
addr16
mov
xor
aam
cmp
xchg
mov
cld
dec
sti
int3
add
mov
std
iret
loop
or
jp
sbb
push
fsubp
sub
loopne
adc
test
fidivl
adc
push
rclb
js
xchg
out
cmpsb
dec
or
repz
push
inc
mov
in
xchg
cmp
popf
sub
insb
rcll
loope
push
lds
sub
imul
xor
add
jns
mov
mov
mov
in
ds
scas
movsl
pop
push
popa
jp
or
lods
mov
sbb
movb
sub
mov
shrb
push
jl
shl
cmp
add
imul
adc
fnsave
sahf
cltd
test
cli
das
es
incb
xchg
movb
push
movl
push
dec
icebp
rorl
out
cmpl
add
jne
sbb
push
dec
pushf
sub
jo
loope
or
mov
mov
popf
cmp
icebp
jno
in
or
mov
jnp
sub
push
mov
mov
jnp
loope
mov
and
fs
popa
hlt
xchg
in
mov
daa
repz
pop
es
dec
cwtl
add
pop
bound
test
sbb
mov
mov
fs
fadds
jno
arpl
je
mov
inc
sbb
fldcw
dec
jecxz
mov
jecxz
xor
bswap
mov
sub
imul
push
out
pop
mov
or
notl
add
jb
loop
pop
mov
aam
jp
and
jl
ds
push
lahf
nop
adc
pop
pop
xchg
fldl
jl
rclb
xchg
jbe
out
mov
cmc
insl
ss
mov
mov
adc
mov
xor
mov
test
fstpt
rorb
dec
mov
xor
sbb
cmpsl
cmp
push
jae
jl
xor
mov
cmp
lods
mov
and
push
outsb
mov
cltd
dec
add
lret
in
fwait
or
jmp
pop
jns
jno
add
gs
xor
mull
cmp
ret
lahf
out
inc
out
jg
add
fisubrs
and
jmp
out
mov
mov
jg
cmp
sbb
ret
pop
push
inc
sbb
pop
xor
xor
sbb
sub
sbb
movsb
mov
mov
sub
addl
outsb
fdivp
dec
pop
jge
mov
test
mov
mov
insl
je
lods
dec
les
orl
sahf
hlt
adc
mov
jmp
nop
sbb
sub
cwtl
adc
test
loopne
jge
push
cltd
inc
popa
mov
jno
fsubrs
imul
icebp
pusha
filds
fidivrl
lahf
test
int
fdivl
lods
fsubrl
fwait
mov
sbb
xlat
popa
clc
push
pop
mov
outsb
stc
mov
lret
mov
mov
jecxz
xchg
adc
xor
xorb
adc
jnp
mov
int
movsb
outsb
mov
mov
loope
scas
sub
mov
in
aaa
mov
daa
add
add
jne
or
int
fs
movb
inc
lcall
clc
pop
xchg
and
fldt
icebp
sub
add
mov
mov
xchg
out
fmull
cwtl
mov
movsl
imul
jle
jns
sub
fcmovnb
sub
mov
dec
decl
xor
push
or
pop
pop
jns
jge
sbb
popf
sub
push
jne
cmpsl
out
repz
lret
adc
xor
inc
adc
int
cwtl
add
dec
pop
xorb
clc
cmp
mov
pop
mov
out
and
mov
mov
popa
gs
ljmp
lret
rcll
lds
pop
arpl
lret
jno
sub
sbb
cld
inc
lock
out
out
jmp
push
push
and
add
dec
sarb
xor
mov
stos
sub
jbe
and
test
out
cli
mov
xor
inc
das
mov
fwait
push
test
push
pop
xor
sbbl
push
dec
stc
cltd
inc
int3
pop
jmp
jecxz
xchg
push
or
sub
fisubrs
cltd
dec
push
jmp
call
sbb
push
lret
mov
sar
push
or
repnz
insb
jo
fwait
xor
xlat
outsl
push
inc
decb
dec
ds
ret
adc
negb
mov
sbb
jne
inc
test
push
mov
push
mov
and
pop
inc
ret
jno
in
push
xchg
dec
mov
mov
add
jns
das
les
jmp
test
hlt
imul
jns
push
and
subb
jno
pop
cmpsl
adc
lret
loop
js
testl
call
clc
pop
xchg
fldcw
icebp
enter
sbb
add
mov
scas
sbb
pushf
into
cltd
lret
or
iret
jp
fs
int
ror
mov
pushf
aad
sbb
icebp
cmpsb
push
sbb
mov
mov
fnstsw
loopne
roll
bound
mov
add
ja
mov
mov
mov
adc
jns
leave
inc
add
mov
mov
cmp
shl
cmpl
sahf
sarl
pushf
push
adc
imul
cltd
pop
mov
inc
jecxz
push
lret
adc
aaa
aad
mov
xchg
xor
and
sbb
mov
pop
push
fmulp
lds
mov
dec
and
movsb
jp
xchg
jae
addr16
dec
fimull
shll
adcl
xchg
clc
cmp
movsb
inc
and
adcl
mov
sub
loop
and
in
mov
cmp
mov
add
xchg
add
lret
adc
or
pop
adc
dec
mulb
aas
inc
sbb
jmp
arpl
ds
or
addr16
aas
mov
inc
inc
mov
addl
pop
push
dec
jl
pop
xchg
pop
mov
dec
fcompl
insl
push
lock
adc
dec
push
lret
out
jns
lahf
jae
loop
dec
cmp
push
pop
jb
jg
add
pop
adc
xchg
jno
cmp
lods
push
sub
test
cmc
xlat
pop
cli
pop
cmpsb
fistpl
gs
or
add
mov
sahf
not
out
jecxz
inc
pop
jne
jns
or
scas
sarl
mov
cmp
ficompl
aam
inc
lea
pop
scas
into
dec
lret
je
fimull
pop
lds
push
gs
xchg
mov
out
or
jge
enter
push
jmp
mov
sub
xchg
add
cmpb
jns
add
dec
jle
sbb
xor
rclb
mov
add
fwait
adc
iret
or
add
push
jbe
mov
sbb
push
push
stos
push
je
popf
lahf
leave
hlt
xor
mov
imul
jle
das
sub
repz
mov
mov
rcl
cmp
dec
mov
in
out
stc
cld
xor
mov
test
int
sbb
pop
cltd
pop
pop
xchg
dec
mov
push
test
mov
les
testl
icebp
mov
inc
adc
lods
sti
xor
or
aam
pop
incb
test
jmp
adc
mov
pop
mov
daa
mov
fisubrs
das
ja
sarb
mov
stos
cmp
jp
add
scas
add
and
mov
outsl
adc
adc
inc
int
push
fwait
int3
push
sbb
dec
enter
lods
cmpsl
rclb
jecxz
pusha
add
rep
inc
filds
in
xchg
pop
sahf
sarb
add
sti
dec
popa
cli
push
sbb
sbb
in
cli
imul
jecxz
ret
mov
pop
push
and
cmp
xor
push
jmp
sub
cmc
fcmovu
push
mov
sub
jns
outsb
push
and
pop
lods
rorb
bound
adc
mov
out
arpl
lods
mov
out
add
inc
jne
sub
rcll
sbb
push
xchg
in
pop
test
bound
nop
bound
cmp
jle
xor
ret
js
push
pop
mov
sbb
das
add
cli
jp
fistpll
fdivrs
jmp
mov
mov
ljmp
or
lock
nop
or
push
mov
xchg
pop
inc
fcomps
push
dec
aam
notb
mov
pushf
jle
push
add
orl
pop
xor
dec
sbb
jg
sarb
mov
push
sbb
dec
into
sbb
add
inc
aad
cmp
push
adc
jne
push
fcmovnu
scas
push
out
pop
inc
mov
inc
in
xchg
cwtl
andb
push
xchg
push
sub
pop
xchg
sub
dec
aaa
aad
mov
or
mov
sbb
mov
xchg
xchg
cmp
dec
fwait
pop
mov
loope
inc
inc
adc
mov
push
andl
pop
in
sub
lods
and
stos
cmc
ret
cltd
out
jp
movsl
mov
stos
adc
in
in
loop
fwait
les
scas
add
or
mov
sar
xchg
sub
test
shlb
or
stos
test
data16
pop
clc
or
in
addr16
lcall
arpl
add
xchg
popf
out
scas
jnp
adc
and
add
jle
jl
add
jno
shrl
lods
mov
mov
xor
xor
sbb
sub
fstpl
leave
jmp
xor
jns
gs
fcmove
jle
mov
rcll
ja
mov
adc
cmp
xchg
and
cmp
pop
and
mov
mov
int3
xchg
ficoml
mov
stos
jno
stc
sbb
xor
mov
inc
call
test
sub
cmp
movsl
inc
pop
lock
bound
pop
mov
cltd
xchg
inc
pushf
sbb
scas
mov
lock
pop
lds
iret
xchg
sub
mov
fwait
push
stos
mov
mov
jno
repnz
idiv
repz
lods
pop
test
push
fwait
add
mov
cmp
pop
pusha
cmc
mov
sbb
sub
dec
dec
daa
je
push
sahf
adcl
xchg
pusha
mov
push
lods
repz
mov
ret
add
clc
jns
mov
dec
xchg
cmp
hlt
xchg
mov
shl
xor
jbe
pop
cmp
mov
xlat
sahf
sub
fcmovnb
add
hlt
and
rcrb
movsb
pop
and
sub
mov
loope
call
dec
ds
xchg
xor
aad
add
cmpl
pop
lock
xchg
push
and
push
cmp
outsl
dec
inc
aas
and
insb
dec
add
cmp
jmp
fmuls
lock
cld
jecxz
sarb
cmp
sub
sti
shlb
xor
ja
jo
ss
in
mov
xchg
push
pusha
enter
dec
mov
pusha
out
test
jno
mov
movb
imul
int
cmp
rcrb
cmp
inc
ret
dec
xor
int3
shrl
add
test
je
aam
dec
mov
rcll
aad
dec
inc
in
cmp
stc
mov
jb
pushf
test
fwait
rcl
or
data16
leave
dec
arpl
clc
sarb
push
lods
xor
inc
cmpsl
sti
hlt
es
lahf
cltd
sti
mov
lds
iret
or
mov
xor
dec
fstl
aaa
lret
pop
fldenv
mov
out
js
add
mov
ss
mov
sub
mov
dec
sti
dec
push
jge
inc
cmpsl
mov
imul
push
shlb
mov
sti
xorl
and
adc
shrb
xor
fs
mov
in
adcb
mov
or
push
sti
or
add
test
dec
xchg
add
sahf
test
and
add
ficoml
mov
fldcw
mov
pop
ljmp
sti
add
push
adc
data16
push
sbb
enter
cmp
rol
xor
lea
jp
aaa
test
mov
mov
fisttps
pop
jge
ljmp
dec
push
fnstsw
inc
popf
jp
mov
ret
xor
push
inc
push
or
and
icebp
sbb
ljmp
lods
push
aad
fneni(8087
add
jb
ret
das
pushf
les
psubd
dec
cmp
push
sub
adc
popa
xchg
or
xchg
mov
mov
nop
xchg
fcomp
push
sbb
add
xchg
xorb
adc
arpl
test
cmp
inc
aaa
fbld
jecxz
mov
cmp
pop
pop
outsl
lock
pop
clc
repz
or
ja
pop
ja
cmp
jl
cmp
xchg
mov
and
test
and
clc
adc
idivl
pop
jl
in
addr16
je
jle
into
sbb
push
aaa
pop
addr16
lret
mov
push
push
ja
and
fmuls
loope
inc
mov
cltd
adc
sbbl
adc
sahf
int
aas
sbb
mov
outsb
fdivrl
push
dec
cmp
mov
xor
js
movsl
rcll
mov
or
cmp
xor
inc
jne
sti
daa
sbb
fistps
call
pushf
and
mov
bnd
jp
lcall
mov
add
outsl
test
add
lret
loope
fcoml
inc
sbb
and
pop
shll
test
or
arpl
add
pop
push
push
and
xchg
sbb
inc
dec
das
repz
cmp
ficoms
push
popa
lods
pop
inc
jae
push
ljmp
arpl
shlb
jmp
mov
test
xchg
fwait
inc
sahf
jg
mov
loope
jne
mov
push
jbe
add
int
jae
and
xor
lods
je
jbe
mov
lock
gs
mov
push
cmpl
xchg
push
into
add
fsubl
cmp
pusha
jae
cmp
aam
sbb
cmp
or
test
loopne
scas
xor
xor
dec
stc
jecxz
ret
mov
xor
jle
in
dec
xchg
adc
xchg
aad
loop
outsl
ret
lds
sub
xchg
mov
hlt
cwtl
sahf
inc
pop
sub
xchg
lds
add
loop
fdivrl
pop
lea
mov
ret
push
xor
inc
xchg
lcall
test
fstpl
mov
in
jl
jle
jle
pop
test
jge
xchg
jbe
mov
mov
movsb
sub
push
jbe
dec
cmpsb
pop
sub
jl
daa
xor
sub
adc
jle
sbb
jne
pop
push
mov
test
xchg
xchg
cmp
sbb
mov
test
enter
sbb
inc
lds
sbb
sub
adc
jecxz
cmc
mov
sub
xchg
mov
xchg
out
mov
sub
add
fstps
aas
mov
cmpsb
mov
rcll
fs
inc
jg
mov
js
add
and
mov
pop
ror
sub
pop
arpl
std
xchg
jge
jle
xor
loop
mov
cmp
push
adc
mov
clc
das
arpl
repnz
shlb
jae
cmp
sbb
out
and
stc
mov
test
mov
orl
cltd
sbb
enter
jo
adc
stos
and
sub
sbbl
jg
sarb
xor
cmp
or
add
pop
stos
je
mov
leave
xchg
cmp
jmp
pop
fnsave
lods
xor
loopne
lret
mov
lds
pop
lret
fwait
rsqrtps
jmp
jno
cmp
inc
lock
dec
cmovp
sub
loop
loope
rcrl
adc
test
cmpsb
wbinvd
pusha
or
mov
or
js
push
mov
dec
mov
lea
dec
adc
sbb
push
xor
loopne
dec
imul
pusha
aas
lea
cmp
mov
in
push
push
ja
sbb
in
scas
in
test
or
mov
fldcw
mov
add
lahf
aam
cmp
push
mov
iret
aas
push
ret
sub
stos
popa
insb
push
push
out
add
jbe
iret
insl
mul
stc
jge
cmpsb
inc
push
addl
xchg
arpl
divl
xchg
loop
jno
lret
mov
mov
loope
daa
cmpl
scas
cmc
sbb
icebp
pop
xor
fldl
pop
push
xchg
rclb
inc
sub
out
lock
std
lahf
fs
aaa
dec
sub
in
add
or
clc
cltd
jle
popf
sub
pop
pushf
xor
bound
js
dec
add
sbb
negb
or
call
ljmp
mov
lea
add
mov
and
negl
pop
lcall
mov
add
hlt
sub
mov
test
insb
sti
push
jp
js
movb
and
push
lret
jp
fwait
inc
repnz
scas
jg
nop
mov
or
cmp
mov
ja
and
sbb
cmp
xchg
sbb
test
pop
mov
std
icebp
lret
fldpi
and
in
push
in
sbb
xchg
mov
loop
xchg
popf
mov
push
lea
sbb
jl
mov
mov
cli
in
adc
pop
mov
ljmp
sbb
cmp
nop
xchg
jno
int
inc
imul
aaa
xchg
fdivrl
stos
pop
mov
push
add
pop
cmc
rolb
cmp
fwait
adc
test
leave
mov
push
ds
sub
adc
sub
aas
sub
mov
and
cmp
mov
mov
mov
add
leave
lods
jnp
shld
add
adc
outsb
mov
repnz
xchg
fwait
add
imul
inc
sub
mov
sub
jae
ss
movsl
fs
push
leave
loop
xchg
add
sbb
icebp
ss
push
jmp
repz
pop
sbbb
decb
cmp
loope
imul
xor
xor
rcr
or
fisubs
push
shl
dec
mov
ficoms
rclb
in
addr16
cmp
xchg
cs
xor
outsl
mov
and
das
notb
sbb
daa
lret
insl
sarl
fs
pushl
lods
imul
mov
lret
fstpl
pushf
fbstp
jo
mov
cli
mov
fcomp
cmc
sub
jp
loop
outsl
xchg
mov
xchg
jmp
lret
inc
stos
mov
mov
mov
inc
bound
in
mov
dec
adc
dec
adc
movsl
subl
and
sbb
dec
idiv
jl
xchg
scas
mov
cld
imul
jo
mov
mov
xchg
mov
scas
cmc
ss
pop
push
or
mov
scas
icebp
rcrl
cmpsb
popf
stos
pop
mov
xchg
aaa
xor
clc
push
or
rcl
mov
push
mov
adc
sbb
daa
mov
ss
out
push
push
and
pop
inc
push
lds
loop
mov
mov
ljmp
repz
out
mov
sbb
popf
inc
xor
or
mov
insb
leave
shlb
jp
gs
or
das
dec
cmp
in
pop
jne
ljmp
xchg
push
push
mov
in
add
adc
mov
cmp
sub
jp
std
dec
aas
arpl
imul
stc
sbb
mov
jecxz
shll
xor
mov
fdiv
mov
mov
sub
push
xor
xor
rorb
inc
jecxz
andl
sub
loop
cmp
stc
insl
sbb
imul
ja
cmc
fnstenv
push
pop
les
in
arpl
cmp
sub
mov
jb
jno
nop
xor
mov
testb
push
popa
mov
and
or
mov
faddl
rorb
loopne
int
cmp
movsb
cmpsb
movsl
pusha
mov
push
adc
mov
in
mov
daa
out
jae
jmp
aaa
adc
xchg
cli
sahf
mov
out
sub
outsb
adc
cmp
adc
movsl
ljmp
dec
cmpsb
dec
mov
or
psubb
xchg
shl
test
movsb
mov
lret
push
cli
pushf
daa
stos
out
xor
pop
jo
inc
sub
mov
orl
mov
mov
lock
or
cs
fidivrs
inc
lahf
push
jmp
arpl
adc
jge
dec
mov
test
mov
and
cli
or
std
dec
fbstp
inc
push
xchg
test
or
decb
das
enter
movsl
mov
jge
stos
lods
shlb
shrb
dec
jge
rclb
out
push
mov
pop
dec
sbb
fsubrl
jnp
test
pop
push
cmp
jno
js
in
shrb
adc
aas
or
push
xor
xor
fisubrl
sbb
pop
xorl
jno
or
and
iret
in
mov
jns
mov
fwait
les
and
jne
sahf
mov
leave
in
xor
rcr
test
dec
add
pop
sbb
mov
jp
shlb
loop
loop
inc
push
mov
dec
mov
xchg
ror
out
rclb
hlt
lret
push
and
out
movsl
rcll
aad
or
adc
xchg
repz
and
shr
xchg
mov
stos
add
push
and
movsl
pop
mov
test
fmuls
aam
add
xchg
lods
fxch
xor
popf
pushf
mov
or
orl
push
shlb
jae
imul
in
stc
fadds
push
iret
pop
out
lahf
ja
cmpsl
pop
outsb
xor
xor
xchg
pop
ficoms
adc
inc
and
push
xor
push
xchg
dec
xbegin
mov
adc
mov
dec
push
jno
daa
sbb
jge
lahf
or
cmp
clc
repz
fcmove
push
xchg
das
rclb
stc
cli
lock
imul
lcall
cs
sti
out
add
cltd
pop
xchg
dec
repnz
mov
ffree
in
fisttpll
ss
cld
ret
mov
addr16
in
inc
mov
adc
inc
test
pop
sbb
bound
scas
popf
mov
mov
sub
xor
sub
jo
or
sub
inc
mov
cmp
inc
bnd
lock
mov
cli
jb
hlt
ret
shrb
nop
sbb
call
and
cwtl
cmp
mov
and
inc
or
ds
insb
xchg
cmp
mov
mov
fstpt
nop
cli
mov
mov
adc
xchg
or
fstp
jae
lock
out
hlt
ja
cli
and
adc
hlt
add
mov
jmp
test
lds
das
jbe
shll
dec
nop
pop
sahf
xchg
lahf
stos
cmpsl
lahf
outsb
mov
cmpsb
push
mov
mov
test
std
notl
loopne
mov
xchg
push
sub
adc
mov
or
mov
push
insb
pop
mov
inc
cltd
cmp
sub
adc
sub
fst
cmp
fucompp
lock
mov
mov
cltd
loope
pop
outsl
repnz
xchg
andb
jl
pop
inc
xchg
insb
mov
es
sar
xchg
addl
les
cmp
hlt
aas
sbb
aaa
clc
pop
dec
or
or
sbb
fwait
push
and
cmp
rcr
fcomps
pop
and
and
fs
test
dec
xor
ss
fdiv
lds
dec
adc
push
cli
jb
imul
push
fwait
pushf
insl
xchg
xor
jge
add
sub
xchg
addr16
xchg
fcoms
popa
lods
mov
sub
pop
nop
inc
xchg
shll
stos
mov
cltd
mov
xlat
ret
xchg
inc
sub
pop
mov
and
and
mov
enter
push
push
dec
xlat
pop
leave
pushf
pop
add
xchg
jb,pt
outsb
and
xor
mov
jmp
lcall
inc
and
fmull
cli
repnz
sbb
mov
xor
mov
jecxz
xor
shrl
icebp
fisubrs
mov
jmp
and
ljmp
adc
pop
mov
fistpll
sub
or
dec
ficoms
lods
cwtl
sbb
inc
push
cli
call
dec
mov
pop
and
jne
dec
ss
lret
jnp
or
mov
test
adc
in
stc
adc
xor
hlt
fbstp
jecxz
in
adc
movsb
push
mov
insl
dec
mov
and
lahf
sbb
jecxz
out
sub
mov
aad
lods
roll
aam
jmp
pop
lds
ret
inc
loopne
sahf
pop
sbb
shlb
xchg
add
popa
sahf
cmp
pop
sub
jl
sub
sbb
in
jns
add
mov
mov
icebp
sub
and
sbb
jno
xor
out
ret
push
cmpsl
mov
pop
ds
addl
js
sub
adc
and
xor
stc
pop
ret
dec
outsl
cmp
fcmovnb
fwait
jno
adc
adc
movsb
pop
xlat
fcomip
push
dec
jae
dec
lock
icebp
add
dec
shll
xchg
sbb
and
or
int
lods
bound
and
pop
xchg
mov
in
jg
insb
mov
cmpsl
iret
cmp
xchg
pusha
xor
sbb
mov
push
lds
push
andb
dec
cld
cmpsl
popw
imul
ss
xchg
or
popa
mov
mov
xchg
or
push
lcall
sbb
in
mov
lods
jle
jo
inc
aam
test
xor
sub
pop
cmp
jae
fildl
push
sbb
xchg
shl
or
mov
je
loope
jl
ret
shlb
jmp
aad
nop
icebp
sub
xchg
fcoms
cmp
sub
xchg
pop
call
or
jne
or
repz
mov
test
inc
or
mov
mov
fadd
popf
jo
stc
or
mov
and
xchg
adc
xchg
jmp
push
or
adc
inc
ret
mov
lods
jmp
dec
scas
xchg
and
xchg
repz
rcll
imul
cmp
jg
cmp
mov
stos
pop
inc
jno
jp
in
dec
xchg
xor
movsl
test
mov
lock
jl
cmp
aad
outsb
adc
xchg
shrb
jbe
imul
cmc
stos
jl
scas
pop
outsb
inc
mov
ds
popf
inc
jmp
into
sub
pop
xchg
aam
data16
push
gs
std
dec
bound
cmpsl
mov
mov
push
jg
ljmp
adc
pop
pop
inc
dec
sbb
dec
inc
stc
push
shlb
or
jle
inc
push
lds
sbb
mov
cmp
xchg
test
mov
adc
xor
jp
mov
out
cs
cmc
popf
mov
aad
xorb
adc
int
dec
jns,pt
test
xchg
and
loop
xor
out
sbb
sub
lods
enter
insl
or
cs
sbb
data16
push
daa
add
stos
shrl
scas
xchg
add
mov
push
inc
adc
cmp
lret
call
lods
sub
bswap
ljmp
cltd
dec
mov
notb
jns
arpl
push
out
adc
lods
rcl
push
stos
pop
out
cwtl
pop
inc
add
push
ss
adc
nop
xchg
inc
je
insb
jl
mov
push
loop
or
jl
inc
dec
pushf
and
scas
pop
cmp
jns
mov
add
inc
mov
adcb
into
scas
adc
push
in
dec
mov
jb
xchg
test
adc
in
mov
int
popf
pop
mov
push
and
call
mov
daa
push
outsl
add
addr16
push
jg
dec
test
jmp
jg
pop
inc
aas
cmpl
sbb
push
jns
testl
mov
jae
jg
dec
outsl
sbb
adc
xchg
dec
lret
xor
inc
fcoml
in
pushf
iret
cmp
mov
notb
or
mov
xchg
mov
iret
mov
int3
push
adc
sbb
pop
shll
iret
fidivs
push
mov
push
in
scas
mov
mov
inc
shll
lea
dec
and
rol
cmp
fmuls
fadd
cld
loopne
repz
mov
out
push
dec
shrb
out
sbb
mov
mov
scas
test
and
fsts
inc
xor
jae
das
mov
int
iret
or
aas
roll
std
gs
cltd
or
pop
aam
mov
push
pop
mov
lcall
and
je
sbb
fnstenv
nop
push
test
outsl
test
jb
dec
dec
into
loope
jp
test
sbb
cmp
cmp
jecxz
or
mov
mov
bound
arpl
pop
push
pop
rorb
and
es
dec
outsb
test
shrl
addr16
cltd
mov
icebp
lock
jb
outsb
fldcw
shlb
inc
jp
lahf
jge
gs
inc
mov
int
sub
scas
aaa
add
mov
jo
ss
pop
sti
add
out
ror
pop
scas
jno
or
mov
sub
xchg
lods
shl
lret
xor
enter
xlat
cs
ljmp
jno
ret
repz
mov
ret
and
jnp
xor
jb
shl
outsl
call
xchg
lcall
adc
fistpll
out
dec
rorl
push
xchg
les
mov
cmp
test
or
mov
int3
push
add
push
or
rcl
in
fcoml
dec
cltd
xchg
mov
cmpsb
test
sbb
mov
popa
pop
mov
dec
negl
fdiv
into
faddl
cmc
pusha
stc
jmp
pop
xchg
pop
and
cmp
repnz
cmp
popf
jno
adc
and
sbb
jno
out
lahf
jne
mov
push
sub
inc
pop
dec
add
adc
ds
fbstp
xchg
ja
xlat
push
ja
add
mov
bound
in
shlb
inc
in
test
sbb
repz
mov
mov
fwait
es
movsl
gs
push
cmpsl
mov
jg
add
xchg
jne
pop
mov
insl
pop
xor
mov
leave
jns
mov
fdiv
cmp
cli
into
sub
sub
dec
and
sub
cmp
xor
fildl
and
adc
mov
sub
adcl
mov
xlat
and
scas
pusha
std
dec
ja
arpl
loopne
push
xor
subl
sbb
pop
sbb
mov
sbb
dec
pop
movsl
and
in
fs
inc
adc
xchg
cli
or
mov
lds
lcall
xchg
scas
cmpl
cs
mov
sbb
adc
push
or
and
add
in
mov
sar
in
pop
movsb
or
les
dec
jbe
dec
test
cmp
inc
addr16
scas
jge
xchg
jae
sub
push
and
stos
pop
add
inc
sahf
into
les
lods
test
jl
aad
mov
cmp
fcoms
pop
push
and
fisttpl
ret
jecxz,pt
out
pop
mov
popf
int3
loop
andl
adc
inc
push
cltd
sbb
icebp
and
mov
jb
and
arpl
std
xchg
shll
fcmovnbe
addb
inc
pop
aas
ljmp
mov
clc
out
movsb
adc
inc
pop
xchg
roll
dec
ds
mov
sbb
sahf
adc
add
sahf
aam
push
jbe
dec
mov
lcall
aaa
xchg
test
hlt
inc
sub
icebp
jne
std
stos
fdivrl
and
std
mov
sbb
repnz
icebp
mov
scas
mov
lock
in
push
mov
add
jmp
jmp
out
gs
rcr
sbb
dec
ret
pop
pminsw
in
neg
sbb
inc
mul
mull
jae
jle
hlt
movsl
lea
adc
mov
sti
cmc
in
dec
mov
mov
int
pop
lret
jnp
aas
xchg
xchg
sbb
mov
sub
jo
fmuls
aam
cltd
mov
push
enter
aas
lcall
imul
push
sbb
dec
jge
xchg
inc
jnp
aaa
mov
sub
gs
or
lret
mov
xor
inc
lahf
pop
in
xor
mov
pop
jbe
xchg
xchg
adc
sub
ret
mov
ds
sbbb
cwtl
push
aas
mov
sbb
iret
cwtl
xchg
clc
sub
pop
cmp
pop
mov
jne
jno
mov
es
mov
fdivs
out
clc
xor
lea
mov
push
inc
xchg
or
cmpsl
and
jb,pt
pop
lea
mov
pop
div
add
mov
and
into
xchg
jg
stc
fildll
xchg
fimuls
testb
leave
sbb
rcrb
sub
fcomp
push
movnti
pop
mov
mov
jne
mov
sti
sbb
xchg
or
push
hlt
cltd
jg
cmp
inc
repz
fs
into
cmpsb
dec
nop
inc
cltd
rcll
mov
pop
sub
into
stos
int
sti
mov
enter
pushf
gs
inc
jg
and
fs
adc
inc
in
or
dec
pop
adc
sbb
and
xchg
xchg
call
xlat
xor
sarl
aaa
dec
cmp
sbb
lahf
loope
xor
int
xor
outsb
mov
out
push
das
mov
popa
stc
nop
scas
mov
fsub
xor
imul
mov
xchg
mov
mov
mov
pop
decb
pop
sub
lods
lcall
sahf
sar
jno
xchg
in
jo
mov
and
jns
jle
lock
jae
movsb
fmuls
pop
cli
push
or
push
pop
lcall
mov
xor
imul
insl
ljmp
jns
iret
or
lds
xor
xchg
cmpl
xor
loopne
sbb
add
test
add
xchg
nopl
xchg
xor
mov
xchg
inc
xchg
push
divl
or
xchg
ret
les
pop
ja
movsb
cmpsb
and
in
dec
sahf
add
mov
cli
hlt
sub
inc
mov
cmp
call
cld
pop
repz
sbb
mov
cltd
push
pop
jo
movsl
jo
add
rcl
int
cmpsl
lock
mov
icebp
mov
stos
aaa
push
jl
in
testl
sbb
mov
adc
aad
inc
jmp
or
mov
cmp
stos
in
addr16
dec
mov
sub
ja
mov
push
pusha
sti
or
arpl
sbb
lds
pop
add
imul
in
fidivrl
jge
add
popa
jge
fsubrs
lods
punpckhbw
jg
dec
stos
pop
push
pop
push
ja
or
outsl
insl
cmc
add
or
shr
outsb
ja
lea
sbb
cld
mov
inc
push
js
adc
sub
in
pop
test
mov
arpl
cmp
pop
sarl
xchg
jno
xchg
hlt
ret
push
dec
cld
mov
test
imull
or
xlat
mov
or
test
and
mov
stos
add
sub
ja
icebp
mov
out
push
imul
xchg
jp
mov
scas
push
jle
fwait
mov
sub
aas
fwait
bound
aas
jge
pop
stc
in
andl
xor
inc
mov
imul
push
fcoml
cmpsb
push
sub
jb
clc
push
sub
push
mov
fincstp
bound
sbb
dec
cmc
fadds
dec
xchg
inc
pushf
shll
fdivrl
xchg
or
pusha
mov
pushf
add
cmc
mov
lcall
mov
loop
ffree
daa
push
movsb
mov
scas
cli
cmp
lods
add
fs
jge
aaa
popa
add
enter
jae
cli
aam
enter
aaa
push
imul
ret
sbb
dec
nop
cmp
lods
repz
sub
int3
sti
inc
jle
aad
fldenv
lea
or
pop
punpcklbw
jge
popa
dec
rol
sbb
inc
adc
adc
adc
test
lahf
inc
jg
push
popf
xor
lods
fstps
inc
repz
ljmp
mov
int
jg
jns
dec
outsl
arpl
fadds
addr16
fcom
mov
xchg
dec
call
xor
inc
fidivl
fwait
jmp
or
es
das
pushf
add
mov
add
dec
and
mov
pushf
xor
and
mov
add
movsl
ds
ljmp
sub
xchg
sbb
xchg
sbb
cmpsb
pushf
mov
mov
ljmp
and
popf
push
inc
scas
push
and
enter
ror
pop
movsl
and
pop
mov
dec
add
jo
mov
inc
mov
or
mov
push
add
ja
stos
repz
sbb
mov
jne
jo
aad
fidivrs
dec
aad
adc
xchg
dec
sbb
cld
enter
push
inc
fisubrl
jo
mov
fimull
dec
lea
lcall
ficomps
fisubrl
mov
and
mov
dec
add
dec
sbb
repz
mov
dec
xchg
neg
lcall
mov
sbb
in
xchg
pop
call
cmc
xchg
inc
xlat
lret
push
push
sbb
mov
clc
xchg
stos
add
lcall
jl
xchg
aad
scas
ja
and
jns
xor
movsb
jb
in
dec
daa
and
jl
repz
pop
loopne
mov
xchg
xchg
mov
dec
xor
cli
dec
mov
mov
mov
jno
jg
xor
test
sbb
jmp
cltd
push
jae
dec
outsb
push
cwtl
jnp
push
testb
jg
dec
imul
rorl
pop
lock
imul
inc
popf
aad
mov
mov
add
cmp
mov
add
lods
ljmp
imul
icebp
jno
orl
cmp
js
pop
jmp
xor
imul
loope
and
les
adc
orb
fs
lock
jnp
loopne
inc
int3
push
sbb
jo
push
push
ja
or
std
mov
push
popa
lcall
mov
hlt
cmp
jae
sahf
sub
int3
cmp
ret
ret
mov
cmpb
mov
push
scas
test
icebp
add
hlt
cmp
xor
outsb
cltd
inc
lahf
xchg
ret
jle
mov
add
lea
stc
cmpsb
cmp
xchg
inc
sti
movsb
pop
fisubl
ja
pop
inc
inc
push
imul
and
flds
xor
jmp
add
mov
push
js
cli
inc
shrb
sbb
adc
pop
xor
lock
iret
mov
fsts
int3
pop
sbb
mov
shl
mov
or
ret
and
fisttps
shll
xor
enter
sbb
out
adc
jmp
mov
mov
addr16
test
and
push
inc
dec
mov
imul
and
pop
sbb
outsl
jg
jecxz
inc
fs
popa
dec
test
cmp
lahf
rolb
push
pop
es
xchg
es
sub
imul
jecxz
jbe
sbb
xchg
dec
mov
mov
outsl
lds
stc
lcall
pop
divl
sbb
mov
je
or
push
scas
xlat
jns
cwtl
xlat
cs
or
out
or
mov
mov
pushf
sub
outsb
mov
jns
and
jg
add
mov
lret
rcll
pop
scas
outsb
ja
movsb
aas
mov
and
adc
or
dec
mov
xchg
leave
insl
mov
mov
out
and
dec
dec
adc
pushf
inc
in
add
bound
mov
movb
movsb
lret
inc
push
jmp
jo
push
sar
inc
mov
jmp
lahf
mov
lret
pop
sbb
addr16
and
jle
shrb
movsb
sub
dec
ret
shll
and
xor
push
jg
or
das
mov
dec
aam
fcompl
dec
add
push
xchg
adc
jge
lea
push
xchg
add
imul
inc
xlat
scas
dec
xchg
or
mov
mov
das
pop
iret
push
adc
loopne
pop
ljmp
cli
js
xchg
mov
xchg
fwait
ja
repz
inc
loop
mov
xchg
adc
pop
mov
mov
mov
xchg
stos
cld
int3
adc
rol
mov
int
cmp
cld
mov
sahf
sar
dec
add
aad
movsb
aad
mov
adcl
add
add
xchg
mov
and
jp
add
mov
mov
clc
pop
fildl
dec
and
fiaddl
add
pop
pusha
inc
adc
iret
das
add
xchg
pop
adcb
and
rorl
or
push
out
adc
dec
int
sub
xor
sbb
pop
loope
xor
rcll
mov
xor
push
insl
adc
addr16
hlt
jle
jecxz
jnp
cmp
lods
lret
and
dec
daa
jo
aad
inc
scas
pop
std
add
mov
mov
lock
mov
enter
adc
repz
out
or
add
roll
movsb
js
jle
lock
ja
popf
jae
pop
test
out
loop
clc
rorl
arpl
rcrb
lret
rcr
push
or
gs
push
jbe
dec
je
and
xchg
ficoml
fsts
test
push
inc
loop
fdivrl
adc
lret
jge
xor
popa
push
or
in
repz
cmp
ja
add
movsl
jecxz
into
mov
add
mov
int
sub
mov
popa
hlt
mov
fisttpll
dec
adc
mov
hlt
pop
push
shrb
rcl
xor
fucomp
iret
dec
pop
scas
ror
pop
add
iret
adc
adc
inc
subl
fnstcw
out
mov
cmp
dec
pop
clc
ja
mov
repz
das
imulb
lods
std
repnz
fsub
mov
mov
xchg
and
sahf
test
add
xor
popa
push
dec
gs
add
jbe
std
sahf
lcall
xchg
imul
xchg
jecxz
fists
clc
xor
xor
addr16
ja
jb
movsb
xchg
fcoms
je
sbb
sub
setno
and
flds
push
hlt
lods
scas
movsb
push
loope
pop
ret
pop
mov
or
jb
xchg
test
push
add
insb
cmp
sub
fs
xchg
shr
push
sub
xchg
inc
lods
xlat
pop
mov
mov
xchg
stc
bnd
push
and
xlat
ficompl
inc
mov
push
mov
loopne
je
and
mov
or
mov
mov
data16
cmp
xchg
jno
xor
lahf
xor
xchg
ljmp
pop
repnz
in
ds
scas
fistpll
mov
fsubrl
or
in
mov
xlat
test
push
sbb
sub
pop
ficoms
in
stos
rol
fsubrl
jge
stos
call
xchg
mov
mov
mov
cmp
cmp
aad
inc
sbb
in
test
scas
scas
dec
das
ds
out
dec
cmp
shrd
adc
jo
pop
xchg
stos
in
icebp
jo
lret
insb
xor
jbe
xchg
cmp
out
out
sbb
xor
nop
pop
adc
pop
mov
es
getsec
mov
inc
jge
jb
outsb
divb
loop
iret
cli
int3
dec
mov
mov
jnp
pop
push
mov
and
dec
sbb
pop
pop
movsl
sti
rolb
push
cli
mov
lret
mov
cmpsb
int3
out
stc
xlat
mov
in
inc
js
daa
push
pop
jl
cmc
xorb
fwait
mov
lahf
aad
ss
push
cmp
decb
mov
fldcw
orb
cmp
fdivrs
mov
jne
fsubp
jge
loopne
int3
or
xchg
inc
pop
lods
mov
cmp
cs
add
xchg
repnz
pop
pop
lds
out
mov
and
in
scas
and
shlb
xchg
popf
push
add
fcoms
data16
cltd
sub
adc
dec
pusha
xor
lret
cmp
add
in
repnz
int3
int
push
add
in
pop
addr16
dec
icebp
lahf
mov
xchg
in
dec
pop
sbb
mov
leave
jno
adc
push
jns
jae
cmpsb
dec
mov
cltd
sarb
int3
stos
in
les
or
cmc
add
lret
mov
fldenv
or
shr
pop
out
repz
scas
and
jmp
lock
aam
jae
push
mov
jo
stc
stos
push
sbbl
inc
xor
lods
mov
xchg
jbe
scas
cltd
nop
cwtl
popa
sbb
dec
mov
sarb
push
push
popf
cwtl
mov
xor
insb
inc
outsl
xchg
cmp
and
push
scas
dec
stc
xchg
cmp
fsubr
and
and
inc
icebp
sbb
add
pop
add
cmpsl
and
leave
mov
pop
rclb
in
repnz
and
fucomp
cs
cmp
fistl
cmp
xchg
test
lods
negl
xor
jl
sahf
call
sub
inc
lods
pushf
mov
bnd
push
pop
sub
mov
ret
pusha
int
jl
fiadds
loope
int
pop
xchg
jne
xlat
lcall
cli
pop
mov
sub
push
xor
orl
pop
jae
dec
xor
pop
lods
jne
pushf
outsl
sbb
aaa
and
fxch
pop
xor
xor
mov
icebp
jg
xchg
rcrb
jl
dec
mov
addr16
add
dec
push
or
push
lahf
and
adc
or
lret
mov
adc
ficomps
inc
addl
movsl
push
aaa
xor
cs
scas
mov
aam
adc
in
ljmp
jecxz
and
pushl
fnstcw
das
sahf
mov
add
xor
stos
mov
fnsave
shlb
inc
pop
adc
xchg
cltd
mov
out
push
mov
inc
test
pop
inc
aaa
mov
fisubrs
cmp
or
or
loop
les
push
js
lret
movsl
jp
mov
sub
push
cmpsl
sub
push
pusha
push
pop
jge
shll
jb
or
mov
jns
cltd
inc
push
sbb
pop
dec
pop
daa
sbb
scas
decb
sbb
pop
ficoml
out
out
jge
imul
xor
mov
dec
flds
xchg
or
pop
push
decl
pop
in
imul
arpl
jo
or
pop
inc
outsb
sub
mov
cwtl
fmuls
fwait
sub
push
jnp
mov
adc
outsb
scas
int3
leave
loop
arpl
sbb
cmp
aaa
cli
in
dec
mov
fs
add
pop
icebp
mov
pop
dec
mov
inc
lret
push
fildl
into
or
std
mov
adc
mov
pusha
mov
jecxz
adc
jmp
divw
data16
lahf
cmc
pusha
loop
rcll
mov
popf
cmc
lods
dec
insl
gs
imul
add
sub
inc
mov
mov
stc
sahf
sub
adc
pop
mov
cmp
int
pushf
pop
cmp
xchg
fisubl
mov
jns
ror
gs
push
pop
js
mov
and
call
push
decl
pop
add
imul
adc
movsb
iret
stos
out
mov
add
lods
movsl
scas
mov
jb
inc
cld
mov
cmp
adc
adc
jl
test
movsb
sub
mov
sahf
jo
rcrb
and
fcom
loopne
sbb
out
rorb
dec
cltd
mov
jb
test
scas
inc
hlt
les
leave
xchg
sub
push
movsl
pop
fimull
lods
dec
mov
add
pop
int3
stc
push
fwait
sbb
or
popa
adc
add
sti
inc
shll
cmc
in
mov
iret
inc
xor
pop
test
cmp
adc
out
scas
ljmp
les
imul
enter
loope
bound
btc
rclb
into
iret
loopne
dec
pop
movsl
sti
dec
xor
inc
mov
fnstenv
loope
push
and
mov
fdivrp
xchg
lcall
jl
xor
sub
loopne
loope
sub
rcrb
adc
les
fnstenv
dec
adc
push
pop
jl
sbb
and
shll
ret
and
fldenv
sti
jnp
enter
xchg
js
dec
jle
jge,pt
inc
mov
je
repz
pop
dec
movsb
mov
sub
push
xlat
sub
rolb
push
out
cmp
or
mov
sbb
sbb
subl
jno
jl
pop
add
xchg
pop
add
lcall
inc
mov
push
subb
mov
mov
and
jnp
enter
xchg
xchg
aaa
cmp
out
xchg
bound
jmp
ret
shl
inc
xor
lods
pop
lret
leave
xchg
xchg
sbb
push
ds
inc
jae
xchg
push
add
cmp
sub
dec
enter
fiaddl
add
push
sti
sub
push
push
cmp
movsb
push
xchg
ret
pop
add
pushf
out
or
xor
sti
das
test
je
add
ret
cmpsl
popa
imul
push
adc
push
adc
pushf
fiadds
ljmp
xor
bts
je
and
pusha
push
mov
pop
add
cltd
addr16
out
js
mov
bound
mov
mov
jnp
lret
mov
out
leave
cmp
inc
cltd
pop
push
xor
scas
hlt
fwait
iret
or
icebp
into
cmp
nop
dec
arpl
sbb
sti
or
jg
fcmovbe
stos
push
shll
lea
or
pusha
adcb
push
in
jl
push
push
je
int
cmp
mov
cmp
jmp
lret
add
in
adcl
push
fldl
and
inc
inc
aad
adc
call
scas
dec
pcmpeqd
es
cmpsl
ret
mov
lods
mov
test
mov
cwtl
out
movb
sub
clc
stc
jg
jge
sub
mov
ss
sbb
lret
lock
lret
mov
insb
out
xchg
pop
adc
mov
ret
mov
add
add
mov
add
push
jno
rcll
pop
xchg
lret
fimull
ffreep
xchg
cmp
pop
push
mov
pushf
sbb
test
or
mov
pop
pop
push
sub
js
cmpsl
negl
dec
sub
xor
cmp
data16
rcr
dec
push
jmp
jns
xchg
fwait
adc
cmp
arpl
ja
ja
fwait
xor
cld
repz
shr
jns
inc
dec
out
mov
adc
inc
xor
mov
mov
mov
jp
xorb
ljmp
xchg
jns
dec
out
mov
inc
clc
cmp
outsb
mov
push
mov
jmp
pop
int3
addr16
es
sbb
lods
gs
cmp
sbb
gs
addb
mov
jo
add
xor
xchg
addr16
jns
pop
lcall
out
add
pusha
in
mov
mov
lds
push
fsub
aas
xchg
xchg
fwait
push
test
or
cmp
sbb
adc
pop
add
pop
cli
jo
dec
lock
lahf
push
and
add
mov
into
mov
push
or
test
jp
push
jne
sub
push
sub
pop
push
loopne
jg
leave
lea
mov
push
shlb
dec
mov
rorb
adc
and
insl
push
loop
cmp
and
and
inc
cmp
push
xor
xor
sbb
mov
jge
adc
dec
mov
push
pop
lods
add
test
insb
mov
xlat
mov
in
fdivrl
lods
inc
pop
xor
daa
dec
imul
scas
jbe
sbb
ljmp
push
mov
xchg
sahf
int
mov
faddl
xchg
cmp
inc
ror
icebp
dec
push
pop
and
xchg
push
cmp
mov
xor
pop
in
mov
inc
jg
cs
sub
mov
rcll
mov
imul
pop
sub
or
sbb
fnstcw
add
mov
sahf
sbb
or
sbb
inc
ret
ds
es
aad
enter
mov
sub
int
data16
push
xchg
sub
mov
and
and
sbb
aas
mov
sub
adc
xlat
xor
imul
dec
icebp
sub
rorl
pop
aas
sbb
or
push
aad
mov
add
cmp
mov
xchg
stc
mov
in
and
icebp
out
push
movsb
xchg
inc
push
mov
mov
push
adc
mov
inc
cwtl
shrl
andl
pop
es
lret
jle
test
jo
inc
in
fidivrs
aas
in
mov
inc
dec
mov
xchg
cmc
pop
mov
add
cmp
imul
mov
adc
inc
out
lea
cld
jge
pushf
nop
xor
in
jp
sub
dec
stc
jmp
sti
jg
insb
ds
cmc
or
mov
out
lret
xor
xchg
sbb
jns
popf
addr16
push
pushf
loopne
sub
inc
adc
add
mov
je
jbe
adc
xchg
addr16
shl
xchg
fs
fdivs
das
jmp
and
add
cmpsl
fimull
hlt
and
dec
fiaddl
scas
mov
or
push
cmp
pop
cmp
mov
mov
mov
pushf
mov
mov
shll
jns
cmp
mov
mov
stos
nop
xchg
out
loopne
pop
jle
xchg
push
stos
push
mov
jae
ds
leave
push
fcoml
push
add
insl
lret
pop
dec
xchg
add
stc
js
lea
hlt
lret
cmp
mov
mov
out
add
out
or
mov
mov
out
aad
leave
pop
loope
or
mov
je
mulps
sub
iret
pusha
push
sbb
jmp
aad
add
xor
stc
sbb
in
jb
popa
mov
ds
icebp
or
adc
jbe
int3
mov
xchg
pop
lock
lock
testb
inc
std
jb
das
or
jno
lcall
push
push
iret
xchg
mov
cmp
mov
cmp
in
and
orl
mov
pop
ljmp
pop
add
in
daa
in
hlt
hlt
or
pop
mov
jbe
aad
xchg
cmp
pusha
out
sub
cli
in
inc
ljmp
jecxz
das
cmp
xchg
popa
clc
scas
and
pop
push
fdivl
xchg
mov
fdivrl
je
pop
xchg
pusha
movsb
lcall
mov
push
out
sahf
je
xchg
push
cmp
cmp
inc
imul
cmpsl
sub
mulb
lock
pop
xchg
pop
push
mov
add
push
int3
xchg
scas
in
xchg
inc
cld
cmp
fldcw
pop
imul
lods
jnp
add
les
inc
jge
repnz
jnp
cmp
ret
push
pop
xchg
xchg
push
in
xchg
mov
clc
xor
push
jmp
and
fucomi
xchg
dec
xlat
sub
fbld
xchg
shl
jmp
or
inc
ljmp
lret
or
inc
mov
nop
jne
std
sub
je
out
nop
mov
outsl
loope
inc
jb
mov
ja
rcrb
and
das
fcoml
mov
and
sarl
loopne
sahf
sbb
not
pop
pop
cmp
push
jae
mov
xor
mov
mov
inc
in
jmp
mov
sbb
and
shlb
sub
mov
pop
xchg
jns
sbb
daa
lods
push
ljmp
sti
in
pop
insb
mov
lcall
mov
or
inc
add
ds
inc
sti
gs
adc
fwait
gs
and
cmovge
push
push
daa
scas
adc
mov
rcl
push
movsl
js
shlb
mov
sti
sub
nopl
roll
stos
inc
shrb
jg
lods
adc
clc
sub
mov
cwtl
mov
inc
fcoms
push
pop
loop
or
pop
cmp
mov
lahf
lahf
fcmovne
xorb
pop
mov
xor
dec
adcb
mov
nop
out
mov
gs
cwtl
addr16
dec
cmp
pop
mov
test
push
into
aas
push
or
mov
leave
das
outsl
lods
shl
iret
sbb
testl
sbb
shrl
jbe
mov
aad
ret
sub
out
movsb
loope
std
jp
adc
mov
xchg
cmpsl
clc
inc
xor
sbb
movsb
cmpsb
in
fsincos
jne
jp
pop
loopne
jne
mov
add
mov
outsl
cmpb
lock
lock
add
aaa
mov
into
movaps
cltd
dec
lods
xor
out
pop
gs
xchg
inc
sbb
pop
mov
add
test
xchg
cld
dec
push
test
mov
lock
sub
xor
or
inc
dec
mov
xchg
call
dec
jno
inc
push
cmp
pop
xchg
sbb
xor
pop
push
xlat
ret
mov
xor
xor
fldt
xor
imul
sub
nop
add
shlb
push
or
cwtl
and
sub
mov
cmpsb
test
je
jl
flds
sub
adc
lahf
ds
lret
sbb
hlt
gs
sbb
std
shlb
jecxz
cmpb
jge
pop
adc
mov
add
push
jecxz
add
out
out
scas
lods
sti
bound
ret
lcall
fistpl
jnp
stos
add
xchg
jp
adc
dec
subl
lret
nop
imul
stc
pop
sub
icebp
sbb
and
xchg
fbstp
adc
sub
pop
pushl
inc
stc
mov
xchg
add
les
aad
stos
mov
arpl
out
inc
jmp
stos
cld
pop
and
jl
pop
daa
roll
out
sbb
aas
mov
or
std
addl
adc
cmp
pop
xchg
cmp
inc
push
fcoml
sub
ds
mov
push
in
jnp
cmp
sbb
cmc
or
cmp
mov
idivb
mov
lods
out
in
lahf
int
jp
sbb
sarl
fwait
pop
mov
dec
ja
pop
sub
subb
out
iret
dec
movsb
cmp
aam
add
mov
outsl
and
push
push
bound
and
push
adc
fldl
mov
add
ja
imul
imul
das
and
mov
push
jb
out
into
aad
push
daa
stos
jle
xor
jge
les
roll
push
mov
ror
in
push
insl
leave
cld
cmc
sub
pop
das
or
mov
loop
sbb
xchg
xor
pop
sub
js
call
icebp
fwait
repnz
lock
add
dec
mov
arpl
ret
lcall
cmp
imull
mov
aaa
xchg
pop
iret
and
aaa
jmp
jns
xchg
and
xor
and
xchg
data16
iret
adc
sbb
jle
adc
xchg
jle
ds
test
dec
mov
inc
adc
gs
jg
mov
xlat
movsb
addl
clc
xor
jne
xchg
mov
adc
sarb
and
inc
test
mov
jmp
cmc
pop
ds
pop
mov
jle
add
fnsave
lds
loopne
fdecstp
lods
pop
aam
pusha
adc
cs
scas
adc
mov
inc
flds
sbb
push
out
int3
scas
cmp
pop
nop
shl
lock
aaa
cmc
loop
out
xchg
popa
les
sarb
dec
cmp
out
adc
scas
or
or
mov
xor
sbb
push
rorl
lods
stos
daa
rcl
push
lcall
sti
movsb
pushf
jmp
fcmovne
cltd
cli
sbb
xchg
add
mov
push
mov
nop
dec
cmp
idivb
loope
mov
push
jl
add
jl
repnz
xorl
sub
out
lret
das
cmp
dec
shll
les
nop
lds
jne
and
mov
dec
add
insl
sbbl
jns
les
xchg
sub
adc
call
add
ja
or
test
xchg
pop
outsl
add
mov
mov
test
cmp
and
cmp
pop
or
pop
stc
mov
push
inc
cltd
icebp
in
mov
mov
ds
iret
mov
xchg
icebp
adc
out
mov
dec
and
inc
adc
sbb
aad
mov
fsub
shll
loopne
mov
enter
xchg
mov
sbb
fnstsw
dec
push
jne
cs
fisubrl
int3
xchg
adc
pop
xchg
loop
sub
sbb
jns
add
subl
mov
xchg
jae
jae
push
dec
aam
cmc
std
pop
jp
cmc
repz
adc
and
xorb
das
dec
aaa
xor
popa
nop
gs
sahf
loopne
in
xchg
push
sti
dec
adc
dec
lret
or
popa
fwait
nop
add
gs
push
cmpsb
xor
testl
and
cld
sub
push
out
and
ja
popf
mov
in
loop
push
pushf
imul
lea
sub
add
dec
pop
mov
jmp
dec
clc
xor
jle
scas
fiadds
xchg
mov
scas
sub
cld
add
rorb
push
les
mov
xor
adc
int3
arpl
scas
or
sbb
and
pushf
mov
movsb
addr16
jg
xchg
mov
loop
push
mov
jo
pop
or
test
fnsetpm(287
sub
pop
mov
dec
xor
cmpb
cmp
sub
pop
jecxz
hlt
rorb
xchg
iret
mov
mov
shl
int3
testl
push
dec
scas
int
mov
cmp
out
fadd
jns
jne
lock
adc
cmc
adc
and
iret
sahf
loop
cmp
jl
mov
outsl
mov
je
stc
mov
rcrb
aas
pusha
lretw
xor
sarb
idivb
cld
adc
jp
popl
and
mov
mov
imul
inc
xchg
xor
adc
test
mov
push
or
mov
fsubrs
je
mov
sub
je
push
aad
into
pand
int
push
int
ss
add
mov
sbb
iret
xor
mov
mov
pop
mov
outsl
addr16
mov
mov
mov
pop
pop
add
xchg
cmpsb
jge
cli
inc
sub
xchg
sub
mull
push
adc
aaa
imulb
cmc
pop
jae
mov
and
leave
add
aaa
out
sub
sub
dec
and
and
mov
orl
xchg
hlt
jp
in
out
out
push
lds
dec
cmp
stc
lods
mov
push
js
xor
push
lahf
fldcw
xchg
push
mov
push
sbb
cmpb
mov
lahf
mov
outsb
xlat
notb
xor
notb
fldl
push
cli
mov
and
pop
lods
movsb
popf
stc
stos
and
push
sbb
push
add
leave
andl
shr
cmp
mov
mov
test
add
popf
xchg
ret
lods
ret
push
cmp
dec
loopne
push
adc
stos
push
inc
adc
xchg
daa
mov
out
aas
jns
aam
or
mov
pop
movsb
xor
xor
cmp
and
pop
stos
addr16
iret
cmp
mov
mov
addr16
dec
mov
leave
inc
hlt
shll
scas
push
movsl
push
jl
loop
mov
es
js
cmp
and
jmp
push
fidivs
cmpsl
cmp
inc
inc
aas
mov
jo
cmp
andb
xchg
jg
fs
xorb
sarb
aad
sbb
out
mov
push
adc
ds
popf
cmpsb
xchg
mov
fistpl
mov
mov
iret
fwait
icebp
jge
xchg
adc
imul
jmp
mov
in
daa
out
xor
sub
dec
lds
stos
mov
idivb
pushl
decl
inc
into
dec
psrld
icebp
rclb
cmp
and
lret
jle
mov
test
hlt
stos
das
adc
in
push
aaa
xchg
pop
jb
jo
icebp
pop
fimull
push
lock
lods
push
mov
cmpb
adc
adc
pop
adc
add
int3
fistpll
jg
jbe
jno
test
repnz
inc
outsb
mov
hlt
lahf
push
mov
sbb
sub
dec
inc
fdivl
pop
popfw
scas
jne
pop
xor
push
cmc
mov
psrlw
mov
xchg
or
push
or
loop
les
outsb
gs
push
les
loopne
push
iret
jae
fcompl
lods
in
test
lock
lahf
loop
mov
sub
out
sub
push
addb
mov
mov
push
decb
inc
dec
jge
inc
js
add
pop
fidivl
in
ja
xchg
mov
mov
movl
in
dec
pop
std
or
mov
rol
aaa
ja
jecxz
xlat
mov
adcb
add
icebp
adc
rorl
mov
cs
push
pop
insb
out
sub
outsb
mov
add
repz
mov
jge
mov
mov
lret
jl
sub
mov
or
sub
cli
cltd
test
push
jae
imul
addr16
shrb
mov
or
cmp
inc
inc
inc
mov
and
arpl
repz
leave
adc
jns
jg
fimuls
jp
xor
loop
lret
adc
pop
sub
sahf
sbb
push
sbb
mov
in
pop
and
iret
scas
insb
mov
repnz
ficoms
notl
xor
pusha
movsb
call
sbb
inc
xchg
push
xor
pop
inc
mov
ljmp
ret
push
push
inc
push
adc
addl
call
adc
lock
cltd
aaa
sub
cmp
lret
bound
xchg
xlat
mov
out
pop
test
loopne
shrb
lret
mov
test
lahf
adc
ja
cmp
inc
lock
add
into
adc
cmpsl
xchg
inc
mov
std
mov
adc
aam
jne
lods
insl
mov
aaa
push
add
ss
hlt
in
dec
jp
cmp
cwtl
mov
lds
inc
and
ret
add
scas
or
divb
jno
xchg
hlt
ja
mov
jecxz
pop
scas
leave
cli
sub
in
in
xlat
mov
dec
xchg
insl
in
lret
sub
hlt
cld
fnstcw
pop
mov
in
mov
cmp
out
daa
adc
fsubl
xchg
add
pop
xchg
test
or
jecxz
inc
dec
and
lahf
xchg
xor
cmp
sti
sahf
fldt
push
push
ja
and
xchg
pop
fists
shll
gs
mov
repz
incb
cmpsl
pop
pop
push
push
out
das
xchg
aad
adc
icebp
aaa
out
mov
loopne
mov
add
stos
lock
jecxz
mov
mov
inc
fmul
call
inc
mov
or
jge
or
jp
scas
aas
call
pop
or
out
scas
pop
mov
sbb
xlat
cmpsb
je
movsb
mov
popf
xor
filds
xchg
sub
mov
cld
jmp
mov
out
and
jb
jno
push
lret
scas
inc
loope
insb
fcoms
hlt
inc
lcall
lods
leave
jns
xchg
cli
ror
mov
cmpsl
aaa
mov
jnp
sub
or
mov
pushf
hlt
mov
or
inc
test
je
fbld
mov
or
lahf
rorb
pusha
in
jp
roll
stos
arpl
inc
ja
or
aaa
dec
push
mov
faddp
pop
stos
sahf
xor
pop
add
std
sub
xor
push
add
loope
mov
mov
outsl
jle
mov
push
clc
pop
rorb
push
pop
icebp
cld
movsl
fs
mov
inc
xchg
lods
inc
cmp
stos
outsl
pcmpeqb
sbb
mov
negb
mov
jne
or
ss
aas
js
mov
jno
loop
outsb
repz
imul
cltd
xor
pop
mov
mov
cld
or
scas
fdivrp
mov
cld
into
sub
and
and
mov
jnp,pt
roll
xor
clc
xchg
jg
aaa
push
jbe
scas
mov
movsb
fstps
shrl
loopne
fs
lahf
push
testl
ds
clc
jbe
in
dec
dec
jmp
xlat
inc
sbb
mov
fs
push
divl
gs
jne
cmp
data16
leave
stos
and
ficoms
jno
in
cmpsb
sbb
in
cmp
jp
sub
cmc
or
xor
adc
add
inc
jb
stos
push
mov
xchg
cwtl
xchg
fmull
loopne
mov
cmp
ss
and
adc
pushf
aad
or
xor
fmulp
int
cmp
and
adc
xor
and
xlat
fsubs
mov
jns
rcrl
push
dec
push
imull
cmc
xor
mov
out
mov
pop
push
out
sub
ret
inc
xchg
xlat
push
jl
mov
push
push
outsl
ret
sti
stos
fdivp
ret
mov
sti
push
cmp
dec
cwtl
ret
sbb
faddl
sub
add
loope
cmpsb
xchg
out
cmp
jnp
xor
mov
cmp
cli
inc
mov
dec
pusha
xchg
lret
mov
or
ret
out
or
cmpsb
movsl
leave
dec
lods
pop
sti
fdivrs
lcall
sarb
xchg
cld
xchg
aas
in
push
je
pop
xchg
aas
lods
add
and
fs
nop
rclb
das
in
pop
xorb
mov
fidivl
es
data16
stos
push
incl
cwtl
out
or
sub
cltd
lret
jmp
push
push
xor
or
fcomip
xchg
lods
xchg
rcrb
or
or
pop
add
cmpsl
adc
jle
adc
pop
fildl
into
jno
mov
pop
cmc
mov
jle
dec
push
inc
jno
fwait
mov
push
add
ror
pop
mov
call
sub
fnsave
inc
out
test
sbb
xchg
int
sbb
clc
mov
popl
imulb
cmp
arpl
fstl
and
mov
insb
lods
push
lods
or
stos
and
mov
push
imul
insb
jg
insl
mov
xchg
int3
int3
leave
fs
dec
inc
mov
pop
jnp
addb
dec
xchg
push
arpl
call
cs
sahf
std
out
enter
cli
andb
nop
xchg
mov
aas
fsubrl
sbbl
fucomp
fsubrs
mov
xchg
dec
mulb
and
push
invd
xor
add
scas
cld
aad
shrb
sub
aam
js
inc
test
sbb
shl
or
dec
daa
mov
mov
movsl
push
loopne
cld
fs
scas
mov
mov
test
cltd
cld
sti
sub
in
test
dec
cli
mov
xlat
ljmp
pop
or
nop
outsl
mov
out
enter
inc
sub
dec
in
outsb
in
test
sub
andb
leave
rclb
daa
push
je
inc
lds
sub
aaa
push
push
stos
lds
jg
adcl
flds
xchg
sbb
pop
or
or
xchg
inc
dec
jg
adc
pop
jle
ljmp
aad
jbe
pop
sub
sbb
sub
lea
test
ja
enter
jae
scas
int3
cwtl
mov
mov
jecxz
xchg
pop
pop
in
pop
mov
and
xchg
outsb
popf
push
sbb
shrl
je
imul
aad
in
mov
iret
inc
gs
inc
mov
scas
push
ficompl
push
inc
in
push
jl
jo
or
adc
adc
jae
test
mov
jns
dec
pop
test
insb
mov
orl
cs
mov
mov
push
add
or
cltd
shrb
xor
or
incl
lret
fdecstp
mov
or
dec
jb
or
andl
test
inc
sbb
xor
mov
shll
pop
shrb
lahf
mov
inc
xor
push
fnstenv
stc
mov
pop
add
cmpsl
sub
jno
pop
aam
cwtl
mov
out
ds
loop
movsl
fdivl
sub
ret
scas
sbb
dec
lret
add
in
insl
xchg
aad
and
jl
xchg
adc
pop
orb
cwtl
jae
scas
pop
ret
xlat
lock
adc
orw
scas
jno
es
sbb
pop
push
jle
dec
inc
in
test
mov
ljmp
cmc
lods
dec
clc
mov
xchg
lods
or
add
pushf
push
decl
fbld
dec
adc
add
xchg
cmp
dec
repz
outsb
mulb
rep
mov
les
or
or
movsb
xor
mov
shll
aam
ficoms
das
not
lods
mov
pop
adc
pushf
mov
push
jmp
loope
es
pop
nop
pop
lret
leave
lods
ja
inc
or
mov
pop
sub
ret
inc
inc
in
and
ret
movsl
stos
addl
jnp
mov
xor
ljmp
mov
or
sub
add
cmp
popa
mov
aad
cli
push
jne
push
fldl
and
mov
in
or
adc
pop
xlat
loop
gs
es
addb
xor
jp
dec
dec
and
sti
int
or
imul
sub
vmovaps
lods
xlat
inc
aam
mov
fsub
lcall
jecxz
ss
xor
push
sbb
ja
rolb
adc
or
rcrb
add
mov
sub
mov
into
xchg
dec
mov
clc
push
enter
les
push
dec
mov
mov
xchg
add
in
inc
or
lods
sub
fldcw
and
xchg
inc
push
jb
xor
and
dec
mov
dec
pop
jmp
stc
repnz
sti
mov
lret
mov
jecxz
das
ret
add
sbb
fsts
shll
insl
xchg
cli
mov
mov
push
call
movb
sbb
inc
loopne
mov
mov
loop
clc
xor
sub
aam
push
stos
push
pop
xchg
dec
andl
sbb
mov
gs
test
and
xchg
inc
mov
or
pop
jecxz
daa
enter
hlt
mov
ret
inc
xchg
pop
sbb
jae
pop
out
js
dec
sbb
jmpw
cmp
ss
insb
icebp
out
lcall
mov
lock
sub
adc
sbb
xor
push
call
or
mov
jp
lods
cld
push
and
cmp
inc
cmpl
mov
xorl
jl
movsl
xor
pop
mov
sbb
mov
pop
adc
mov
sub
fcoml
dec
lret
inc
stc
jge
mov
cmpsb
movups
loop
addr16
pushf
cwtl
add
sub
mov
cmp
stc
adc
daa
sbb
hlt
mov
cli
mov
in
or
push
ljmp
idivl
lcall
outsl
adc
and
cmp
lret
repnz
iret
std
push
in
idivb
push
jnp
mov
add
outsl
fsubr
jb
mov
push
cmp
cld
sub
icebp
pop
insl
mov
mov
sbb
cmp
jbe
inc
or
or
mov
call
icebp
push
imull
ret
mov
ficoms
mov
sub
inc
clc
subl
jno
and
sub
sub
and
xchg
data16
stc
push
pop
cs
mov
stos
out
push
jp
jge
cmp
nop
jnp
outsl
loop
out
aas
shlb
dec
out
xchg
clc
popl
dec
inc
adc
push
aas
ffreep
dec
mov
mov
insl
mov
pop
test
lcall
mov
in
cmp
cli
or
push
xchg
push
in
jbe
mov
loopne
or
in
cmp
out
push
mov
xchg
subb
sub
dec
jnp
cmp
imul
in
sub
sahf
sbb
xor
push
insb
scas
add
insl
mov
test
aas
int3
mov
mov
int
test
test
jmp
ja
pop
or
jmp
adc
mov
fwait
iret
and
mov
sub
xor
dec
lcall
fnsave
or
sub
fisubrl
jmp
inc
popf
cmp
dec
subb
enter
arpl
sub
repnz
cs
pushf
lods
lahf
push
arpl
shll
sub
push
aas
or
jg
xchg
inc
sbbb
xor
xchg
js
and
inc
shll
lahf
out
add
adc
mov
mov
or
mov
sub
rcrl
dec
leave
xchg
sub
dec
jae
add
faddl
lcall
popa
inc
fldenv
cs
cmp
js
cmp
add
out
inc
sbb
adc
test
int
sbb
in
shll
dec
sahf
sub
jg
sahf
out
dec
pushf
daa
mov
pop
jns
mov
test
cmp
and
mov
loope
pop
xchg
test
dec
pop
inc
andl
aaa
and
int3
mov
stc
jp
or
inc
insl
je
int
add
mov
outsb
dec
sti
pop
stc
jmp
daa
push
add
or
xor
mov
repz
jnp
in
fcos
fdivrl
test
out
out
lahf
jne
pop
push
ljmp
and
mov
and
repz
rolb
icebp
dec
mov
or
rcr
stos
stos
pushf
popf
fbld
testb
sub
icebp
cltd
rorl
xchg
ret
leave
sbbb
xchg
lods
rcl
push
fiaddl
das
sub
fs
je
fistps
lcall
out
insb
xor
rcrb
sub
adc
test
jl
push
push
test
sarl
sub
sbb
test
mov
mov
stos
idiv
test
jae
xor
mov
dec
in
in
addb
mov
xor
jge
xchg
data16
and
adc
sbb
in
imul
cmpsb
xchg
xor
sub
sub
xchg
fisubrs
cmpsl
in
idivl
xor
push
xor
lock
inc
rorl
aas
out
shlb
jnp
add
push
mov
lea
cmpl
lcall
or
rcrl
imul
and
sbb
and
cmp
lcall
scas
pop
dec
mov
cmp
mov
int
xor
sub
jmp
mov
jle
push
xor
clc
inc
out
inc
and
sub
mov
loop
mov
xchg
dec
xor
cld
or
cmp
out
mov
insl
in
cmp
sbb
popf
loop
jecxz
push
mov
es
cmc
cld
and
out
stc
sbb
sbb
cs
addr16
mov
jmp
mov
jmp
or
and
dec
stos
scas
add
fprem
shlb
pop
test
push
xor
sbb
repz
mov
sbb
mov
std
fisttpl
inc
add
inc
push
fwait
push
jecxz
std
inc
cmpsb
loop
fisubl
es
mov
dec
xchg
icebp
in
and
cmp
movsb
sub
in
movsl
cmp
add
push
bound
mov
outsb
jp
mov
or
loopne
inc
fsubs
xchg
pop
int
pop
push
ljmp
stos
xor
xchg
or
popa
pop
int
rorl
repnz
jae
push
inc
cmp
push
shr
mov
fimuls
dec
pusha
mov
movsb
in
pop
lret
andb
test
push
stos
adc
lahf
rcll
stc
push
sbb
iret
sbb
jl
xchg
push
repnz
outsb
xchg
in
mov
jmp
push
push
pop
sbb
call
and
mov
mov
dec
pop
outsl
ljmp
adc
jnp
dec
xlat
mov
xchg
cs
mov
popa
push
push
jae
pop
fcmovnbe
ret
jb
xchg
out
pop
in
lahf
cmp
lods
pop
jge
dec
fcomps
mov
int3
out
adc
jmp
mull
loope
pop
aaa
push
data16
cmp
addr16
mov
cmp
push
mov
movsl
jae
push
pop
in
in
push
dec
rorl
popa
jg
in
aad
aas
or
xor
scas
out
mov
test
cmpsb
sbb
inc
dec
aad
sti
pop
cmp
add
es
out
testl
mov
mov
add
test
xchg
cwtl
mov
inc
add
pop
dec
inc
sbb
mov
dec
or
adc
lcall
hlt
pop
sub
fnstenv
insb
push
out
sti
xor
jns
sahf
dec
sbb
mov
pop
out
xlat
sbb
cmpsl
xor
inc
test
aaa
int
push
int3
dec
in
mov
fcomps
jp
out
cltd
and
lds
daa
push
in
popf
int
call
add
scas
xchg
out
mov
ffree
mov
xor
xchg
push
enter
mov
mov
out
std
test
dec
in
les
rcrb
dec
push
xor
xor
aad
inc
mov
and
and
or
xchg
insl
xchg
dec
add
stos
lea
nop
faddl
hlt
cli
mov
addb
fcomps
repz
gs
push
out
aad
mov
outsb
lcall
int
mov
lret
pop
xor
lcall
cmpsl
sbbl
movsl
imul
scas
push
and
sbb
ds
aam
mov
lods
push
inc
mov
lods
sub
inc
fst
pop
fmulp
dec
js
in
mov
or
sbb
cmp
dec
sbb
ret
dec
cmp
fs
jne
or
rcrb
mov
mov
lahf
scas
sbb
insb
mov
cmp
jecxz
xchg
xchg
rcl
xor
or
adc
je
rcrb
inc
movsl
cmp
call
dec
ss
pop
add
fiadds
test
scas
push
mov
lahf
jge
cmc
in
sarl
lea
adc
subb
xchg
and
setnp
rcrl
js,pn
addr16
pop
xchg
fistpll
mov
sbb
sub
cmc
cmp
mov
popf
or
test
adc
aad
jmp
mov
and
pushf
shrb
adc
ret
adc
test
adc
pop
out
push
xor
out
incl
mov
enter
sub
xchg
mov
lea
outsl
outsl
xor
movsb
inc
xlat
dec
aas
mov
xor
aad
xchg
mov
xchg
sbb
adc
xor
inc
adc
leave
enter
inc
mov
sbb
push
add
iret
xchg
popa
imul
sub
in
add
maxps
movsb
xor
ss
cli
fcompl
insb
std
idivb
adc
pop
bound
push
cmp
sub
mov
lret
pop
push
insl
push
fsub
jle
call
xor
cmp
mov
imul
sub
sbb
pop
jbe
xor
movsb
xchg
popa
stos
push
data16
sub
jecxz
jecxz
neg
fld
sbb
cmp
sti
and
repnz
cmp
cmp
sub
shl
out
mov
js
test
rol
jae
inc
sbb
nop
stc
fs
cmp
fisubl
sub
imul
jmp
scas
jmp
mov
insb
sahf
daa
adc
cmp
dec
imul
mov
dec
mov
ss
xor
ret
je
fldl
mov
fwait
and
xor
inc
loopne
xchg
jge
iret
out
push
mov
dec
sbb
push
outsb
loop
stos
inc
dec
jecxz
xor
push
lret
mov
int
loope,pn
jns
lea
cwtl
add
adc
xor
push
stos
adc
int3
cmp
add
sub
dec
mov
sub
mov
popa
and
hlt
enter
cltd
add
sbb
pop
call
xchg
out
mov
adc
inc
mov
xchg
enter
cs
sub
xor
sahf
xor
mov
negl
cltd
jbe
shrl
clc
jg
rol
into
cmp
out
pop
sbb
pop
fstps
push
int3
js
xchg
xor
and
xor
cmp
lahf
dec
repnz
push
xchg
inc
sbb
lcall
mov
subl
mov
addr16
fdivp
loop
leave
cmp
je
enter
add
xor
xor
repnz
jae
into
shl
xchg
mov
mov
pop
mov
pusha
dec
jns
mov
mov
pop
test
add
add
mov
pop
mov
jecxz
cmc
sbb
test
sahf
fsubs
add
sub
xchg
mov
jle
les
sahf
cmpsl
in
imul
mov
jge
adc
cmp
sub
add
sub
mov
push
push
and
pop
cld
or
add
mov
sbb
xchg
jns
cmpsb
cmp
in
or
lret
xor
pop
sbb
popa
addr16
inc
xor
dec
lock
fdivrl
jp
pusha
cmp
dec
movsb
add
sti
mov
inc
jb
mov
mov
adc
mov
cmpsl
adc
stos
aas
lret
fidivrs
and
pop
mov
push
cmpsb
scas
inc
adc
mov
mov
fwait
or
dec
mov
repz
jge
stos
push
or
in
lock
bound
pop
dec
add
cmpsl
cs
jnp
mov
jg
addr16
dec
aas
xchg
xor
stos
loop
mov
dec
lods
add
outsb
push
pop
pop
jle
pop
mov
push
test
subb
jle
test
mov
notl
and
lods
call
or
enter
cwtl
xchg
jmp
loopne
cmp
sbb
iret
aas
je
inc
mov
repnz
dec
mov
fdivrs
cmc
jl
imul
lret
stos
js
push
push
pop
in
cmp
rorb
repnz
pop
loope
popf
outsl
shll
jno
repnz
xchg
dec
fwait
sbb
and
fmull
outsb
adc
xchg
pop
pop
mov
lea
ss
icebp
mov
push
sbb
inc
loopne
pop
sub
mov
testb
push
dec
scas
push
sub
adc
in
push
mov
inc
aaa
and
add
inc
or
je
mov
push
cmp
inc
mov
adc
jmp
inc
loope
lret
lods
cmp
icebp
mov
sub
xor
and
lods
pop
xchg
jge
js
data16
xor
cli
and
inc
and
lock
jbe
add
push
jae
mov
test
je
das
popa
popa
nop
push
add
xchg
add
pusha
cmp
sbb
loope
lods
pop
push
movsl
dec
fmull
sarl
cmc
inc
jnp
lret
cltd
es
lahf
ljmp
xorl
insb
mov
test
push
test
pop
push
pop
push
enter
jecxz
mov
imul
lcall
je
xchg
sbb
mov
addb
cltd
xor
push
xchg
mov
stos
xchg
push
popf
mov
cmp
dec
popa
xchg
fisttpll
test
sbb
or
fcmovbe
pop
adc
xchg
push
add
jbe
out
mov
imul
lds
mov
inc
cwtl
loopne
in
fsubs
push
add
movsl
inc
mov
push
int
orb
orb
std
cmc
push
aaa
adc
pusha
sbb
cmp
push
lods
xor
inc
lds
shlb
xor
add
lock
testb
clc
jge
repz
mov
ljmp
scas
test
inc
mov
mov
pop
cltd
lret
stos
lods
jl
cmp
xor
repz
dec
xor
sbb
out
shrl
scas
push
mov
fadds
repz
add
pop
ret
movsb
jne
std
jnp
mov
enter
mov
lret
pushl
scas
outsl
int
mov
push
mov
repz
out
mov
mull
mov
mov
dec
adc
loopne
mov
jmp
sub
sub
mov
mov
shlb
clc
cmp
pop
inc
xchg
aaa
outsb
sub
fisubs
jns
push
in
ficoml
scas
addl
pop
mov
jno
xchg
push
and
pop
sub
sarb
mov
xor
or
hlt
sbb
lcall
or
loop
rcrb
pusha
cli
sub
lds
lret
xchg
lcall
mov
testb
dec
out
pop
add
mov
sbb
mov
dec
mov
enter
and
mov
cmp
jp
jle
bnd
popa
dec
push
sarb
mov
jge
add
call
push
sub
int3
divl
cmp
add
or
sub
fistps
sub
scas
fcmovu
jae
lret
cwtl
inc
pop
lret
mov
pop
and
sbbl
xchg
jnp
pop
fimull
in
adc
dec
push
mov
mov
and
push
add
lods
xlat
cmp
dec
or
test
pop
inc
fstps
xchg
and
leave
int3
in
xchg
xor
in
cltd
sub
cwtl
inc
push
in
mov
inc
lcall
mov
cmp
inc
out
sbb
or
lahf
stos
cmp
mov
out
in
xlat
dec
jge
lods
sbb
adc
rolb
cmp
iret
cmp
stos
cmp
dec
sbb
scas
aas
out
fstps
fidivl
loope
dec
stc
test
add
pop
hlt
fcoms
sbb
xchg
cmc
ja
sarl
push
jns
xchg
mov
push
dec
add
pop
adc
adc
mov
mov
sub
mov
pop
adc
xor
sarl
add
add
imul
jae
jnp
inc
fnsave
push
js
ret
fmuls
mov
aad
lret
fdivrl
or
mov
jnp
add
xchg
push
inc
xor
out
cmp
shrl
push
and
xchg
xchg
add
les
cmc
cli
dec
pop
mov
int
call
stos
xor
cmpsb
or
imulb
dec
add
add
push
dec
dec
xchg
mov
aaa
pusha
nop
adc
push
or
sub
mov
popf
or
clc
jae
fdivrl
add
xorb
popa
les
test
ds
mov
cwtl
enter
sub
push
cmc
outsl
dec
sti
mov
or
cmp
and
sarl
ret
mov
pop
xchg
mov
cwtl
cmp
xlat
cmc
addr16
sub
movl
push
or
leave
or
sbbl
sub
fdivs
dec
adc
push
sbb
lods
movsb
sti
fadds
jmp
lahf
lds
test
xchg
cmp
mov
xchg
mov
push
aam
mov
add
or
pop
in
loopne
rcrl
hlt
pop
mov
jne
xchg
inc
xchg
negb
xchg
daa
or
cld
sub
pop
cmp
or
or
pop
in
xor
adc
pop
daa
int3
in
xchg
icebp
xor
scas
cmp
push
fwait
mov
pushf
aam
lahf
into
fs
jo
rclb
jge
adc
leave
cltd
subb
xor
cli
dec
aad
jb
cmp
sbb
gs
mul
jl
jbe
daa
iret
imul
lock
or
push
ljmp
out
sbb
sti
jnp
mov
mov
dec
mov
rorl
or
in
push
mov
nop
push
xchg
pushw
push
dec
popf
sub
sbb
pop
jno
mov
or
les
js
neg
out
dec
jl
push
movsb
lds
repnz
imul
pop
pop
cli
mov
sub
xchg
sub
mov
xor
stc
insl
fstpl
ds
shrd
andb
adc
mov
dec
iret
pusha
pop
mov
ljmp
lahf
dec
mov
xor
out
sub
adc
loop
stos
aad
jg
lods
enter
fstpl
popa
jns
clc
sbb
cmc
sbb
jne
ja
dec
out
pop
adc
std
add
iret
cwtl
ja
sarl
mov
xchg
ljmp
pop
pop
pop
int
sub
imul
jmp
and
mov
adc
imul
adc
repnz
push
mov
fcoml
loop
or
xchg
dec
sarb
popf
push
imul
loope
jo
adc
movsb
or
movsb
adcb
sahf
mov
ret
mov
in
aas
test
inc
loope
addr16
push
mov
mov
shll
pop
test
cmp
xor
push
clc
mov
in
xchg
mov
icebp
push
lret
inc
fmul
sahf
cmpl
sub
xchg
jecxz
jae
out
in
sti
outsb
pop
fs
mov
mov
jge
push
enter
call
in
fimuls
mov
cltd
shrb
lret
fwait
arpl
fdivp
sbb
outsb
push
or
push
xchg
adc
test
jp
aam
sub
pop
xchg
dec
jmp
or
aad
inc
in
iret
repz
pop
or
mov
lods
jns
scas
dec
sub
dec
hlt
lea
jnp
adc
jno
rolb
outsl
mov
push
lods
push
int
mov
add
cmp
mov
xor
mov
aad
cmp
pushf
loop
ret
sbb
dec
mov
andl
rorb
xlat
test
fidivrl
cmp
aam
nop
jb
data16
stos
imul
int
or
or
push
js
pop
xlat
mov
int3
xchg
test
pop
pop
jmp
mov
std
mov
push
sub
daa
test
add
hlt
mov
or
xchg
push
movl
mov
nop
xchg
test
pusha
dec
add
icebp
cmpsb
pusha
fnstenv
clc
pcmpeqb
inc
imul
push
push
and
rcl
cmp
nop
dec
and
mov
xrelease
dec
rolb
cwtl
adc
mov
and
imulb
mov
xor
je
negl
nop
mov
es
loop
cs
and
and
adc
jo
sub
lods
mov
sahf
mov
gs
std
xlat
pop
push
in
xor
fcoms
xor
fdivr
mov
cmp
jne
std
cld
add
fcomip
ret
lahf
movsb
sahf
cwtl
lret
push
js
jnp
test
push
lcall
test
js
idivl
xor
inc
mov
push
mov
pushf
push
pop
jno
std
bound
adc
gs
fnstcw
pop
stc
mov
out
cmc
ffreep
in
inc
mov
fs
idiv
inc
insb
pop
push
sub
aaa
fldt
in
push
push
lods
dec
and
leave
imul
push
out
jmp
add
pop
push
in
mov
mov
jmp
loopne
dec
pop
fistps
push
push
into
cmp
idiv
ret
xchg
inc
xchg
fldcw
cmp
or
pop
cwtl
push
sahf
mov
test
xlat
jmp
in
bound
sbbl
in
mov
test
rcll
les
movsl
mov
add
or
test
add
pop
test
aad
xor
mov
pop
shlb
pop
xchg
je
jge
mov
fisubrs
stc
lret
int3
sub
iret
loopne
mov
loope
iret
stos
insb
jno
cmpsb
outsl
imul
imull
imul
int3
lahf
ret
cs
loopne
push
jb
clc
mov
mov
addb
inc
push
lret
dec
jne
jae
dec
mov
inc
das
fwait
mov
mov
lods
in
addl
add
test
addl
repz
sbb
sbb
fbld
ja
xchg
cltd
cmp
lcall
and
xchg
dec
mov
inc
loopne
cmp
and
mov
inc
shlb
sbb
outsl
push
outsl
je
scas
jl
fisubrs
or
xchg
jp
and
pop
pusha
pop
sub
cmp
push
lods
pop
adc
sarl
pop
repz
pop
inc
push
xor
sub
dec
dec
lds
inc
adc
ss
sbb
sahf
data16
sbb
push
and
mov
push
or
dec
jbe
shl
mov
scas
cmpsl
inc
sarb
add
dec
je
nop
int
nop
and
ss
imul
cwtl
mov
push
clc
push
lods
push
add
or
repz
adc
jbe
mov
mov
mov
jl
pop
mov
cmc
fists
inc
aas
es
idivb
or
mov
andl
xor
push
sub
stos
push
scas
xlat
mov
mov
stc
outsb
rcll
fucomp
mov
ja
mov
lret
insb
or
lcall
mov
sbb
dec
imul
and
jnp
sbb
das
jmp
add
les
out
lock
lea
add
mov
jmp
out
sub
and
or
insb
xchg
pop
pop
push
adc
add
cli
xor
and
rol
lock
js
imul
push
addb
pop
add
fisubs
jnp
test
xor
ljmp
into
xchg
mov
das
stc
xchg
int
fsubrl
pop
jno
mov
pushf
repnz
and
sbb
mov
dec
mov
cmp
outsb
dec
mov
imul
scas
sbb
sarl
test
sub
inc
aaa
cltd
push
mov
rorb
rorb
push
xlat
lahf
sbb
pop
daa
fsts
or
or
jo
cmp
push
repnz
cwtl
cmpsb
flds
insl
mov
sbb
andb
push
rcrb
loop
sub
rcll
out
rorl
aam
fsubrl
cmp
mov
rcll
data16
mov
xchg
subl
cmp
imul
mov
and
ljmp
pop
sahf
and
xchg
mov
stos
loope
stos
xorb
fbld
mov
fistpl
or
mov
test
in
aad
or
add
stos
inc
fiaddl
jo
mov
xchg
fsubs
movsb
push
jbe
fbstp
and
cmp
imul
js
cltd
out
icebp
jecxz
sahf
jo
inc
mov
sbb
cmp
addr16
lcall
and
dec
push
adc
mov
mov
jle
pop
outsl
push
mov
outsl
sub
stos
std
sub
xor
mov
xor
mov
adc
popf
jb
loope
sarl
jecxz
fcmovne
push
iret
fucom
loop
xchg
jmp
scas
insb
sbb
cmpb
jae
nop
mov
mov
rol
movsb
outsb
jle
and
gs
push
int
mov
sbb
sbb
pop
push
pop
xchg
fadd
add
mov
ja
shrl
xor
lret
in
mov
mov
lret
mov
inc
and
dec
jp
jmp
ret
pop
flds
fisttpll
hlt
fiaddl
sarl
int
sbb
stc
fldenv
add
dec
das
int
adc
mov
jb
sbb
mov
pop
push
mov
inc
push
imul
enter
mov
push
push
inc
push
movsl
push
mov
xor
or
call
dec
xchg
mov
mov
jne
in
xlat
pop
jnp
cwtl
and
jnp
pop
icebp
mov
inc
into
repnz
lock
bound
cmpsl
lret
fadd
jnp
rcl
sarb
rorl
addb
mov
cld
std
mov
pushf
data16
push
jb
rcrb
aaa
adc
adc
jmp
mov
mov
cltd
cld
sub
dec
daa
inc
xchg
aad
ss
push
shl
in
in
insl
xchg
inc
and
imul
aam
sub
test
adc
sub
outsl
stc
outsb
dec
jno
or
add
into
xchg
push
aas
and
std
ja
mov
jg
lcall
test
pop
push
ljmp
arpl
outsb
and
sbb
xchg
and
fidivs
sbb
sub
push
leave
push
sub
fildl
stc
mov
mov
stc
xor
push
xor
adc
mov
mov
leave
mov
lock
or
divps
xchg
cmp
mov
frstor
dec
out
jge
dec
ds
out
fadd
pop
into
repz
pop
cli
cld
cmpsl
inc
test
das
cmp
jge
cmpsl
aaa
lds
nop
inc
bswap
movsb
shl
leave
out
arpl
mulb
divl
dec
ja
lock
outsl
pop
add
pop
movsl
and
pop
cmp
sbb
add
leave
out
dec
ds
and
mov
xchg
adc
daa
cmp
iret
pop
mov
arpl
icebp
call
roll
mov
outsb
out
stc
shrb
mov
push
jbe
jmp
jae
cltd
jae
xchg
jne
aam
cmc
int3
int3
icebp
cmc
or
adc
sbb
inc
and
push
stos
mov
std
ja
leave
jbe
sbb
lret
mov
push
push
mov
test
adc
les
push
cli
lods
and
mov
mov
lahf
cmpsb
and
hlt
sbb
sti
adc
jb
or
xorb
xchg
add
mov
andb
and
lds
mov
in
pop
mov
mov
mov
mov
in
and
cltd
or
js,pt
out
jae
pop
ja
adc
movsl
scas
jmp
dec
xchg
jmp
pushf
jecxz
mov
scas
mov
jle
bound
and
mov
imull
dec
mov
cli
rcrb
adc
in
ljmp
rclb
dec
xor
mov
call
jg
pop
dec
gs
dec
mov
movsl
fcmovnu
sub
movsl
xor
jno
adc
jl
xor
shlb
ficomps
testl
adc
mov
sbb
cmpsl
adc
push
repz
mov
dec
jl
out
cmp
jg
je
cmpsb
mov
jb
jbe
je
xor
xchg
or
loop
leavew
push
test
stos
lea
repnz
mov
out
mulb
call
arpl
cmp
xor
movsb
ja
mov
pop
push
mov
lret
mov
push
mov
inc
cmp
jns
clc
fprem1
jb
into
imul
sbb
nop
stos
jge
xchg
bound
push
out
outsb
mov
call
xchg
fwait
cld
cltd
cld
add
mov
in
int
fwait
out
scas
xor
pop
stos
adc
sbb
pop
in
sub
sub
popa
es
adc
xor
jnp
inc
lds
push
test
sbb
scas
lret
out
aam
xchg
jle
inc
dec
int
inc
and
add
mov
push
jno
adc
push
bound
xchg
xchg
fists
add
mov
inc
xchg
dec
imul
pop
push
daa
pop
xchg
fs
sbb
inc
add
and
and
sbb
fidivrl
icebp
into
repnz
push
sbb
not
cli
sub
repz
fdivs
adc
sbb
adc
cld
fxch
mov
movsb
push
dec
rorl
jge
inc
ss
pop
les
scas
in
xchg
popa
les
icebp
in
lahf
xchg
mov
movsb
mul
sub
push
sbb
inc
jb
xchg
lods
sar
jae
popfw
mov
dec
push
sbbb
mov
mov
loope
rorb
in
je
mov
cwtl
aas
xor
fiadds
out
or
std
inc
dec
jmp
adc
cmpsb
fs
arpl
jno
stos
aad
xor
movsb
and
and
int3
scas
push
std
xor
xchg
addr16
lret
aas
mov
cmp
test
cmpsl
int3
aas
ss
sub
jbe
out
cmp
dec
shlb
fimull
fstpl
sar
cld
fldenv
add
out
jb
repnz
dec
je
movsl
adc
popa
call
cmp
xchg
das
lahf
sub
mov
jae
pop
or
push
dec
stos
or
dec
mov
iret
enter
mov
call
jo
push
adc
mov
sahf
stos
sarl
sar
pop
cmp
mov
mov
imul
jp
push
fsts
mov
and
popa
xchg
adc
sahf
push
inc
inc
scas
test
scas
add
and
imul
lods
xchg
mov
dec
or
repnz
aam
lods
jo
test
jge
test
push
aas
or
xor
adc
stos
push
icebp
ljmp
out
int3
loopne
out
lea
mulb
rcll
data16
cmc
cltd
repz
lods
xchg
inc
or
mov
loope
call
or
loope
sbb
int3
outsl
mov
and
dec
lds
jno
movsb
pop
dec
inc
pushf
xchg
push
repnz
js
dec
jo
push
inc
sub
lcall
pop
add
aas
lret
jl
xchg
jne
or
mov
mov
in
stc
cmp
aas
lret
adc
add
mov
ljmp
fs
adc
inc
add
jne
xor
and
shlb
pop
shld
shlb
add
xor
sbb
in
jp
mov
je
hlt
repz
leave
enter
xadd
es
and
ja
push
jb
shr
sub
idivl
dec
inc
aaa
jp
mov
rolb
inc
mov
or
xchg
inc
stc
fldl
mov
push
sub
jns
lcall
call
dec
dec
xchg
mov
cmp
call
decl
rcll
test
and
lock
dec
pusha
cmp
jp
fdivrs
pushf
cmp
jg
insb
cs
mov
ret
aam
mov
mov
imul
hlt
pop
sbb
ficompl
stc
lret
add
push
and
lea
xchg
lea
les
fstpl
pop
jge
nop
push
daa
subl
in
jb
lcall
inc
lret
xor
jns
adc
mov
mov
mov
xchg
xor
dec
or
pusha
inc
sbb
idivb
icebp
cmp
pop
cmc
fldl
mov
popl
sahf
cwtl
pop
lahf
and
add
in
clc
andb
pop
sti
sub
fdivrl
jno
xor
mov
xchg
ljmp
js
jnp
call
lods
xchg
mov
inc
ret
pusha
fs
out
in
nop
inc
add
mov
loopne
outsb
and
xchg
fwait
cmp
enter
jne
negb
stos
inc
pop
fimuls
xchg
es
std
lret
lret
ja
insl
ret
mov
add
sub
pop
mov
inc
push
lods
fs
aas
lods
shlb
out
and
in
mov
xchg
fldl
xor
loop
imul
cmpsb
dec
loop
mov
pop
test
dec
lods
jo
mov
jae
stos
rolb
rcll
pop
inc
xchg
jbe
movsl
inc
cltd
jmp
mov
jmp
mov
jnp
xor
mov
leave
cmp
push
pop
bound
adc
sbbl
arpl
push
mov
xor
test
dec
cld
pop
stc
sti
xor
fisttpl
pop
pandn
cmp
xor
jae
aaa
sub
cmc
les
sub
push
push
cld
push
add
cmp
pop
test
into
inc
dec
add
mov
sbb
add
and
jns
inc
or
scas
movsl
stc
leave
sub
cld
mov
jne
xchg
jmp
sbb
leave
lods
or
fnsave
pop
xor
mov
fbstp
imul
pop
pop
mov
dec
push
scas
es
jp
inc
sub
sbb
cmp
cwtl
ljmp
xchg
mov
cld
lock
mov
std
and
je
stos
pop
jl
add
mov
pop
xchg
nop
dec
jae
sub
fucomip
mov
pop
fwait
xchg
and
loope
adc
insb
movsl
pop
or
getsec
fistpll
mov
mov
arpl
fldl
daa
pop
lods
fildll
pop
mov
iret
xchg
cmp
scas
add
add
mov
sbb
cmpsl
mov
pop
mov
dec
fst
pop
sbb
insl
lea
lret
hlt
stos
jnp
adc
dec
jno
faddl
lea
aaa
fsubs
or
clc
and
lret
iret
mov
mov
fwait
jl
lea
iret
cwtl
lock
fidivrs
out
jo
lahf
mov
clc
push
dec
jne
cmpsb
ja
xchg
cmp
inc
fdivrp
push
cmpsb
movsb
daa
pop
xor
add
rol
repz
jne
pusha
push
mov
ja
aas
add
scas
daa
rcrl
push
ljmp
add
sub
scas
pop
mov
hlt
pop
sti
mov
lods
les
mov
fsubp
lret
ljmp
mov
rorl
imul
xchg
adc
sbb
pop
ret
add
or
nop
dec
jl
sbb
fcomi
xchg
std
adc
loope
cli
ss
and
loopne
xor
jns
cmp
and
dec
jo
mov
out
incb
xchg
scas
movsl
xor
xchg
cmp
pusha
adc
iret
dec
clc
dec
push
push
adc
inc
outsl
sbb
xor
pop
or
flds
sbbb
mov
das
sbb
andl
adc
mov
mov
xlat
sub
stc
add
cmp
addr16
xchg
sub
arpl
mov
or
add
xchg
fsubl
cmc
xchg
out
lret
fmuls
divl
test
testl
add
aad
inc
xchg
adc
loopne
aad
aam
pop
mov
inc
cmp
sarb
test
mov
and
cltd
adc
jg
and
imul
jno
add
idivb
dec
js
cmp
jnp
cmpl
data16
mov
inc
push
testb
pop
ret
mov
aaa
or
add
add
fwait
in
jne
inc
rorb
movb
xchg
or
in
or
cmp
cs
push
dec
clc
mov
shll
jo
notl
add
lret
mov
std
mov
aaa
cmp
or
hlt
push
in
subl
fs
xorb
test
hlt
ja
mov
push
adc
aam
mov
add
fbstp
push
test
sbb
xchg
mov
mov
in
subb
shlb
arpl
cmp
idivl
push
pop
mov
icebp
call
into
mov
cmp
daa
mov
and
test
dec
flds
inc
pop
sarb
loopne
push
imul
add
mov
or
addr16
jne
pop
adc
jae
jne
insb
pop
popa
mov
sub
mov
cmp
push
mov
aad
sub
xchg
les
cmpsl
dec
cld
sub
push
fbld
pop
rol
mov
imul
mov
andl
inc
popa
mov
es
inc
add
adc
out
push
insl
pop
hlt
stos
dec
ret
fcoml
mov
ljmp
cmp
pop
pusha
movl
adc
jmp
in
lret
cmp
ljmp
lea
call
jp
or
out
mov
push
inc
sub
cmp
nop
sbb
mov
push
loopne
mov
xchg
outsb
popa
outsb
daa
sub
lret
aas
inc
xchg
push
mov
jo
mov
repz
mov
sub
shll
mov
js
jns
adc
in
movsb
mov
inc
outsl
ficompl
adc
mov
daa
mov
dec
and
es
adc
mov
fcmovne
mov
cmp
dec
mov
std
popf
scas
cld
sti
jae
lods
dec
cmp
xchg
jne
cs
xor
pushf
sub
add
loope
xor
sarb
add
inc
in
cwtl
mov
xchg
and
imul
xor
ret
ss
jl
jne
xor
xchg
lods
or
inc
xor
andl
sti
or
adc
or
inc
add
nop
outsl
inc
push
mov
aam
stos
out
dec
mov
clc
mov
or
nop
shlb
mov
aas
jb
subb
std
pop
push
jg
sti
idivb
sbb
xlat
scas
inc
shll
pop
fisubl
mov
add
cmc
push
dec
dec
mov
adc
mov
std
sub
outsl
sbb
dec
jmp
rcll
sub
in
ja
adcb
test
mov
and
icebp
icebp
imul
stos
ja
inc
mov
push
ret
aas
mov
and
aaa
ret
sub
sbb
add
mov
xchg
outsl
ret
aad
mov
dec
xlat
ret
and
notl
lock
pop
add
movsb
lcall
lret
scas
jecxz
xor
pop
lods
stos
mov
js
push
leave
sahf
jne
out
jg
adc
aas
dec
test
xchg
mov
in
test
xchg
stos
stos
push
or
push
inc
addr16
leave
out
lods
fst
add
iret
out
stc
cld
popf
adc
inc
std
gs
ficomps
je
adc
pop
push
test
jle
sti
add
jae
jb
jne
bound
mov
add
dec
fwait
shrb
mov
push
ss
subb
add
cmp
imul
ds
push
incb
or
jnp,pt
mov
mov
push
or
aaa
scas
inc
dec
fisubl
xchg
nop
pop
jl
push
cmp
rclb
cltd
popf
xchg
add
fldcw
dec
das
and
xchg
pusha
ret
iret
cwtl
daa
scas
inc
out
popa
mov
sbb
sub
aaa
mov
mov
add
or
adcl
rorb
pop
fisubrs
or
and
in
adc
adc
ds
xor
or
adc
inc
mov
lods
mov
cld
lock
jbe
mov
mov
push
les
lret
in
movsl
adc
xor
sbb
cld
in
stos
pusha
mov
out
push
jne
out
sub
rolb
pop
pusha
cld
repz
push
push
pop
ljmp
xchg
lock
dec
fistl
push
cltd
dec
dec
ja
pop
mov
mov
adc
jl
arpl
dec
divl
rol
adc
jae
cs
stos
movsl
mov
and
adc
cld
add
test
lock
pop
rcrl
xchg
mov
adcb
inc
jbe
in
addr16
pop
mov
mov
subb
dec
pop
cmpsl
jg
add
fisttps
pop
pop
loope
push
aam
addr16
add
js
fucom
mov
sti
xchg
push
or
mov
xlat
dec
push
inc
sbb
or
pop
push
ret
cmp
add
ja
ret
dec
push
js
jnp
mov
push
in
push
inc
movsl
insb
mov
in
dec
gs
xorl
test
lods
add
lods
ficoms
lret
lods
aas
pop
jecxz
pop
sbb
lret
sub
adc
daa
aas
sbbb
mov
jne
lock
xchg
sub
imull
gs
sbb
jno
adc
inc
mov
ljmp
dec
and
pop
int3
std
aaa
ljmp
pop
js
fs
call
xor
arpl
mov
rcl
out
imul
fsubrs
fcmovbe
fxch
jnp
sub
mov
push
popf
xcrypt-ecb
cmpsl
dec
xor
jp
jno
jbe
call
pop
jne
mov
inc
cmp
out
push
sub
out
xchg
cvttps2pi
out
or
add
dec
pop
add
sub
hlt
outsb
inc
pop
aaa
imul
sub
mov
aad
hlt
into
lahf
xchg
xchg
jb
xor
test
jg
sub
push
and
xchg
adc
sub
inc
pop
add
jecxz
and
pop
mov
je
loopne
pusha
xor
inc
or
cmp
bound
mov
insl
push
neg
jo
dec
inc
dec
icebp
ror
xchg
and
mov
pop
jae
fildll
mov
cmp
sub
inc
mov
jg
daa
fcmovnbe
fs
fdivr
push
daa
push
pushl
aaa
push
in
fcompl
sar
push
xabort
mov
inc
mov
mov
in
pop
icebp
rolb
mov
cmp
movsl
shrl
pop
fistps
push
mov
mov
xchg
pop
cmp
fcmovb
lea
mov
out
dec
inc
jmp
adc
lods
xchg
stos
pop
cli
lods
adc
aad
ja
mov
mov
xchg
orb
mov
aad
push
iret
or
mov
bound
pop
sub
inc
inc
add
or
mov
notl
mov
and
jg
fcomip
and
pusha
fbld
sub
add
in
je
icebp
adc
cmp
dec
mov
rcr
push
or
in
ret
mov
pop
test
adc
xchg
push
fsubrl
jmp
pop
and
sub
vpmulhw
aam
cld
sub
out
test
jnp
mov
std
fwait
ss
hlt
or
cmp
push
jecxz
add
adc
sub
call
movb
sarb
negb
jno
mov
scas
xor
and
ja
sbb
rcrb
xchg
mov
pop
cmp
xchg
cmp
fucomp
adc
fldt
sbb
icebp
sbb
icebp
cmc
test
push
jmp
push
pop
mov
push
shrb
mov
cld
cmpsl
dec
jbe
loopne
mov
clc
popl
sbb
push
xor
scas
inc
mov
xchg
mov
add
scas
imul
lret
xorl
test
js
sub
fmuls
mov
inc
push
nop
sub
mov
not
mov
repz
dec
out
ss
xor
js
and
ds
iret
inc
mov
ret
cmp
cmp
pop
sub
lcall
lret
or
jl
xchg
pop
aas
ds
add
in
jle
std
jo
sahf
mov
sbb
std
les
mov
sbb
sub
int3
jmp
cmpsb
pusha
aam
dec
mov
movsb
xchg
xor
add
inc
stos
inc
test
aas
ds
jne
inc
adc
mov
cmpl
iret
mov
push
in
fidivs
ljmp
xchg
das
lods
jg
int3
insl
mov
push
arpl
sbb
cmpsb
fwait
sub
push
int3
dec
es
xchg
frndint
inc
mov
xor
stos
xlat
push
adc
jbe
clc
jmp
das
cli
rcrb
and
sub
pop
add
add
mov
shrb
fcoms
sub
cmp
push
ljmp
movl
cwtl
pop
outsb
imul
inc
cmp
mov
les
cmp
lret
test
cmc
pop
je
les
sub
push
cmp
jp
sbb
cmpb
aam
mov
cmp
add
or
test
or
sub
in
xor
mov
dec
popa
mov
mov
sbb
sbb
imul
jge
xchg
popa
mov
mov
je
sbb
sub
mov
push
dec
test
mov
add
jp
inc
loop
into
fisttps
xchg
into
cmp
enter
sub
pop
subl
sub
jb
insb
mov
add
outsl
sbb
scas
adc
loop
pop
cmpsl
insl
ja
push
lret
aaa
imul
js
pop
sti
stc
stos
movsb
in
sbb
ror
mov
mov
out
mov
fnstenv
lahf
jno
dec
imul
nop
imul
punpckhbw
adc
ljmp
xor
loop
jns
jo
in
into
pop
pop
bound
jno
nop
pop
divl
fnstenv
das
jno
cmp
and
jb
sub
cmc
enter
jno
pop
jo
add
and
xchg
test
inc
dec
xchg
and
cli
pop
fwait
xchg
aam
fisttps
pop
imul
cmove
push
mov
push
sar
mov
pop
mov
and
or
pop
dec
cwtl
xor
or
and
lret
cmp
repnz
out
in
push
push
jmp
outsb
sbb
sub
mov
in
fldl
fnstenv
test
cmp
pop
xchg
cwtl
jl
xchg
test
shrb
sti
lods
mov
test
push
push
lds
orl
cltd
xor
mov
add
push
leave
lock
pop
inc
aam
test
loop
sub
nop
sub
inc
in
jmp
into
push
sbb
test
test
lea
sbb
mov
xchg
js
push
daa
xchg
lock
ja
int3
jo
mov
sub
cmpsl
sbb
mov
mov
jb
icebp
add
xor
mov
xchg
push
and
push
aad
repnz
nop
ja
leave
adc
push
lock
push
pushf
pop
pop
and
inc
cmp
pop
pop
es
and
or
jle
push
adc
xchg
enter
stos
mov
sbb
pop
adc
pop
aaa
in
test
imul
inc
pusha
or
mov
into
pop
shl
imul
andb
mov
pusha
fwait
fwait
sahf
pop
add
push
push
inc
jmp
aad
add
xchg
daa
mov
sti
scas
inc
xchg
hlt
push
push
mov
dec
sbb
push
mov
leave
mov
ret
or
out
mov
mov
pop
xor
add
int
test
or
jae
scas
or
popa
clc
mov
loope
icebp
push
jb
fwait
lcall
leave
mov
mov
sti
push
or
cwtl
push
xor
das
jecxz
cmp
mov
add
and
int
mov
fbstp
leave
jecxz
sbb
mov
fwait
cmp
xorl
scas
aad
lods
xchg
push
shl
mov
push
push
fcoml
imul
and
jnp
jno
idivl
stos
and
xchg
daa
mov
int
in
mov
dec
inc
or
inc
push
xor
out
test
cmp
insl
daa
jl
mov
adc
sub
cmpsl
push
pop
ss
xchg
xor
xor
cmp
push
fstpt
cmp
mov
aam
stos
dec
scas
mov
mov
push
fsubrl
das
repnz
stos
adc
aad
ret
icebp
cmc
or
dec
fildl
call
ficomps
test
and
fnsave
scas
push
rcll
insl
popa
in
in
adc
fstpt
inc
sub
std
jg
mov
fnsave
ror
jmp
popa
push
int3
rcrl
add
cmp
inc
sub
sahf
ficompl
inc
fs
hlt
out
pop
faddl
jnp
add
ret
fldcw
pop
rcl
sub
cmpsl
dec
addl
stc
pop
inc
mov
jne
add
xor
adc
movsl
pop
imul
inc
cmp
mov
and
arpl
sbb
mov
push
push
imul
mov
pop
xchg
mov
shrl
icebp
xor
jnp
mov
fimull
stos
fistpl
lods
jne
into
sti
mov
push
xor
in
mov
mov
sbb
sub
repnz
pushf
test
push
pop
mov
je
or
mov
cld
push
ret
push
fwait
cmp
mov
adc
out
pop
xchg
cmp
pop
in
mov
or
pop
dec
mov
mov
ds
add
adc
cs
pop
insb
adcb
pop
lods
push
mov
dec
xchg
inc
into
cmpl
mov
cld
push
rorl
xor
in
or
add
leave
fs
ret
and
add
mov
jmp
in
fs
inc
cmp
scas
in
stc
jb
mov
cmp
imul
imull
movsb
pop
lods
add
mov
pop
inc
pop
xor
bound
lret
add
in
mov
lods
jp
outsb
jecxz
jl
inc
mov
pop
lods
mov
push
ret
test
fdivrs
add
hlt
ja
cmc
test
aam
sbb
pop
push
adc
mov
adc
push
pusha
cltd
sbb
je
mov
dec
push
pop
pop
inc
adc
or
mov
jno
out
jge
rolb
xchg
fists
mov
lahf
or
out
inc
lock
sub
std
add
xor
mov
adc
test
push
push
std
add
adc
aaa
je
xor
fistpl
rol
cmpsl
mov
sub
sar
sub
ss
jp
xlat
mov
shll
aaa
adc
push
data16
mov
push
jle
cmp
mov
in
bound
mov
stos
scas
aaa
ficoms
icebp
and
mov
mov
pop
mov
adc
xor
mov
jbe
das
push
mulb
mov
inc
mov
lret
test
xchg
sbb
out
js
xor
stos
icebp
sbb
push
or
dec
test
add
int3
loop
pop
adc
cmpsl
cmpsl
mov
and
daa
cli
push
aaa
aad
in
mov
flds
mov
scas
mov
cs
inc
stos
pop
xor
jmp
jb
pop
xchg
mov
or
dec
js
cmp
dec
xchg
aas
cmp
subl
jbe
aam
mov
push
ja
lds
and
dec
fisubrl
jo
mov
inc
mov
out
shrb
enter
nop
decl
leave
loopne
fdivs
gs
out
mov
sbb
sub
aam
mov
xchg
push
jbe
lret
orl
movsb
adc
sarl
mov
jnp
int
jb
ret
mov
xchg
or
fdivrs
insl
movsl
mov
cltd
pop
imul
shrl
xchg
and
negb
pop
xor
xchg
sub
icebp
cli
dec
jns
sub
pop
mov
mov
repnz
out
inc
sbb
ds
pusha
push
jae
and
cltd
inc
or
imul
repz
xchg
inc
sub
pop
xor
or
or
jecxz
lods
stos
mov
inc
push
dec
cmp
in
les
insl
fistpll
pusha
pop
inc
aaa
cmp
mov
aam
idiv
push
mov
push
pop
es
lahf
mov
lods
test
jno
test
fmulp
ja
sti
inc
push
ret
leave
adc
ds
inc
mov
sub
insb
fistpll
scas
aaa
fcmovnbe
cld
fidivl
es
sub
adc
out
jb
mov
pop
mov
xor
cld
insl
out
lcall
lds
idivl
add
adc
mov
push
test
rcll
lea
add
dec
or
add
cmp
pop
xchg
mov
insl
mov
pusha
dec
outsb
in
in
jle
cwtl
les
aam
cmpb
cmpsl
xchg
call
in
movsb
out
jb
test
jo
addr16
stc
daa
cmc
mov
rcrl
fisubrl
sti
or
xlat
add
add
int
lcall
ljmp
loopne
popa
mov
popf
clc
out
fsubr
mov
gs
std
rorl
imul
xor
inc
test
sbb
fs
dec
in
mov
inc
inc
mov
mov
fucomip
sbb
pop
xchg
push
adc
or
lods
loope
lods
jo
movsb
add
gs
inc
das
pop
cld
jno
or
ret
movsb
jp
in
test
insb
enter
xor
pop
cmp
pinsrw
aad
mov
test
sbb
gs
and
jp
adc
cwtl
orl
pop
xchg
add
sbb
inc
push
jbe
dec
xchg
inc
sti
add
adc
push
pusha
adc
sbb
dec
xor
rclb
dec
inc
pop
xchg
insl
lods
ud1
dec
out
push
cmp
sub
jbe
in
sbb
in
clc
inc
arpl
mov
imul
and
and
push
or
aad
jle
pop
movsl
and
adc
push
add
xchg
lret
call
dec
fs
aaa
stc
je
push
inc
push
stos
pop
iret
jo
adc
gs
and
notb
stc
in
ss
mov
add
adc
ljmp
pop
out
adc
jns
mov
xchg
mov
popa
inc
mov
sahf
push
push
fadd
adc
inc
jbe
or
and
movsl
in
pusha
negb
mov
adc
xor
xchg
xchg
xchg
mov
add
xor
ficoml
cli
popa
or
sti
movsb
jecxz
jmp
dec
pop
popf
outsl
add
jl
fxch
fsubr
inc
and
in
out
cmpsl
pop
test
fsubp
cmp
mov
xlat
je
adc
shl
cmpsl
int
lret
scas
movsb
mov
xchg
and
test
fbstp
jno
xchg
clc
pop
es
rol
pop
sub
adc
ds
insb
stc
fs
icebp
loop
jle
dec
loopne
adc
adc
or
lods
sbb
ror
xor
cwtl
sbb
mov
jg
inc
or
rol
and
or
hlt
cmpsl
mov
movb
push
push
xchg
cmp
loopne
or
das
clc
xchg
daa
int3
cmc
stos
push
gs
push
in
mov
jmp
bound
mov
push
xor
loopne
roll
repnz
imul
jns
ja
push
lcall
orl
inc
mov
jno
mov
fildl
pop
push
pop
loop
icebp
sti
xor
leave
hlt
dec
xor
dec
mov
dec
mov
and
mov
popf
add
push
mov
xlat
ja
sub
mov
int3
fs
nop
sahf
test
popf
sbb
pop
loop
ja
mov
inc
xchg
push
or
ficompl
mov
ret
jl
inc
pushf
test
jg
jne
dec
mov
repz
fmuls
dec
out
arpl
inc
cmp
cld
pop
sbb
fisttps
mov
imul
adc
mov
pop
cltd
pop
add
xor
xchg
sub
repnz
add
lcall
mov
mov
out
mov
daa
pusha
pushl
pop
fwait
xlat
loopne
movsb
xchg
data16
adc
and
mull
mov
sbb
out
out
daa
mov
push
inc
inc
stos
testl
pop
mov
outsl
and
mov
sbb
cltd
mov
aaa
out
sub
movsb
mov
mov
movsb
and
jo
in
cmp
lods
scas
in
pushf
rcrl
xor
add
pop
or
mov
and
ss
test
or
rol
in
mov
dec
cs
das
inc
or
xor
adc
pinsrw
mov
shrb
arpl
xchg
xchg
arpl
xchg
inc
sbb
add
stc
fwait
or
shrb
mull
jns
popa
rorl
jmp
mov
into
cwtl
jg
add
xor
les
add
mov
andb
cmp
and
jbe
xlat
sub
std
dec
sahf
sub
enter
push
inc
pop
rcrb
xchg
lock
std
int
adc
mov
xchg
jo
sub
push
fists
dec
outsb
and
ret
push
adc
jnp
jmp
fwait
inc
add
shrl
adc
cmp
xchg
add
fwait
lock
mov
pop
xchg
out
and
mov
jp
mov
std
pop
ljmp
pop
push
or
mov
into
jg
out
and
cmp
xor
inc
push
inc
jae
and
xor
shl
jno
lea
dec
scas
push
fistps
test
cmc
aaa
out
xor
mov
inc
or
pop
inc
mov
nop
pop
inc
cli
ret
push
mov
adc
jge
lret
inc
scas
ja
inc
inc
pop
dec
addb
mov
in
xchg
dec
xlat
mov
stos
jle
enter
mov
arpl
js
fs
mov
mov
sub
mov
rcrl
mov
xor
jb
imul
sub
pop
subl
xchg
call
into
push
outsb
xor
dec
cmp
ss
sub
jmp
sub
or
or
je
dec
and
xor
and
inc
or
sbb
imul
sub
push
and
ret
mov
and
push
pop
cwtl
call
adc
push
dec
cld
repnz
jns
wbinvd
aas
xor
sub
stos
push
fmuls
mov
popf
xchg
rorb
loop
xor
in
push
xchg
adc
negl
and
jb
out
sbb
fadd
cwtl
adc
lret
fwait
or
fbld
push
arpl
aaa
lds
xor
sti
jp
sahf
mov
ret
mov
scas
stos
sub
adc
xor
cmp
repnz
dec
cmp
arpl
inc
mov
xor
aam
pop
sub
xchg
fisttps
push
lcall
push
sub
cli
mov
data16
and
fsubrl
adc
push
jge
pop
push
lods
ja
sbb
mov
jb
cmc
adc
orl
sub
shr
mov
add
bound
fsub
pop
std
fistpll
lahf
les
or
loope
inc
insl
sub
inc
mov
xchg
fucom
fwait
fwait
dec
adc
out
mov
scas
out
add
fiadds
loopne
fdivrs
loopne
insb
aaa
jg
inc
dec
jno
fsubr
mov
mov
rcrb
mov
iret
sub
jno
xchg
iret
xor
lcall
add
mov
or
inc
sti
mov
mov
loopne
add
push
shlb
mov
jmp
and
iret
or
loope
inc
pop
arpl
rorl
and
fwait
xchg
adc
js
cwtl
mov
bound
arpl
addr16
xorb
dec
ja
and
je
dec
add
pop
inc
sti
sub
movsb
cmc
xchg
cltd
les
pop
arpl
jp
aaa
lds
pop
mov
insb
add
xchg
add
add
and
cmp
cltd
enter
cmp
icebp
jmp
stos
adc
stos
mov
add
incl
test
mov
xlat
lcall
pop
sbb
push
jl
andl
cmp
adc
xchg
fs
lea
and
pop
jbe
out
cli
sub
mov
pop
push
lods
movsb
pop
loope
pop
stos
xor
jmp
lea
xor
fwait
clc
lea
xchg
mov
mov
not
hlt
in
jb
add
stc
xchg
add
sbb
inc
jns
sbb
add
cmpl
in
rol
mov
jae
dec
mov
lods
mov
leave
mov
aad
push
repz
cld
pop
jo
mov
push
inc
jp
jno
push
mov
movsb
jle
push
cmp
jge
cltd
adc
test
jns
adc
push
cmp
mov
cmpsl
rorl
xchg
cmp
push
sbb
js
mov
or
mov
push
mov
imul
adc
xchg
lea
jo
rcrb
mov
cli
addr16
cmp
stos
push
adcb
pop
int3
movsb
mov
adc
dec
loop
scas
shlb
addr16
and
jmp
mov
icebp
lods
mov
enter
scas
cwtl
lret
xchg
or
xor
cli
mov
mov
lods
scas
lock
mov
aaa
sbb
mov
aad
inc
mov
xchg
icebp
cmpsl
and
add
cs
push
push
push
and
inc
xor
push
lods
xchg
das
pop
int
xchg
call
cmpl
lock
loop
in
mov
cwtl
enter
icebp
mov
push
sbb
mov
pop
clc
jl
jo
sarb
cmp
add
adc
xchg
sbb
inc
pop
pop
add
fsubl
xor
ss
mov
fstps
jo
sti
repnz
inc
xor
out
negb
pop
fsts
stos
cmp
mov
enter
push
mov
arpl
das
jbe
shll
fdivr
push
mov
mov
gs
inc
scas
fdivrl
and
daa
call
mov
or
stos
inc
mov
mov
out
inc
popf
dec
push
ret
mov
push
out
popf
mov
xchg
mov
fcmovbe
jg
in
imul
pop
lds
fsub
mov
shl
rcll
scas
mov
mov
lock
jo
fstps
or
or
cli
cltd
xor
aas
mov
jle,pt
in
inc
xor
and
mov
sbb
shrb
jge
sti
in
mov
mov
rcl
adc
inc
mov
xchg
pop
dec
push
push
fcmove
inc
or
sbb
pusha
pushf
test
inc
popf
add
push
aad
xchg
and
call
dec
aad
mov
pop
loopne
push
mov
scas
dec
int
scas
sub
inc
sti
cmpsb
lret
dec
shlb
lret
sti
popf
sti
cmpsl
aad
sahf
push
cmp
sbb
cmc
rclb
xchg
dec
or
ja
xchg
ret
lret
into
sub
and
sub
inc
push
mov
xchg
mov
cltd
std
in
dec
jae
mov
cmpsl
shlb
ljmp
outsl
test
clc
movsl
out
dec
and
icebp
dec
inc
cmp
and
ja
push
test
push
pop
lods
inc
loopne
cmpsb
ficoml
sub
xor
dec
aaa
inc
xchg
out
and
pushl
imul
jl
bound
jl
pop
mov
xlat
push
cmp
movsl
sbb
mov
arpl
pop
jbe
mov
outsl
inc
in
dec
adc
mov
lods
push
pop
add
ljmp
ficomps
mov
sar
mov
int3
out
pop
pushf
dec
cmp
push
jle
push
pushf
lock
inc
cli
mov
fstpt
pop
rol
cmc
test
pop
push
test
pop
aad
jge
fsubrs
sub
mov
cmc
xchg
mov
cli
sbb
fsts
sub
mov
scas
cmp
int3
repz
aad
pop
dec
rcrb
call
hlt
mov
xchg
fistpl
mov
mov
push
fs
xchg
lea
fcoml
loop
and
div
fcmovbe
xor
mov
mov
adc
pop
shrd
bound
sarb
fbld
xorl
stos
push
push
testl
dec
aas
lods
scas
push
fs
xor
push
xlat
data16
and
jae
push
out
call
pushf
cmp
push
adc
loopne
inc
adc
test
adc
jae
js
sub
scas
aas
adc
sbb
lret
out
xor
fwait
adc
sub
push
arpl
pop
jne
ret
xlat
fisubrs
les
jle
mov
scas
mov
loop
xor
pop
lds
push
scas
mov
push
xchg
jge
loopne
xchg
inc
dec
aas
rcrl
inc
pop
jae
icebp
mov
fwait
xor
sbb
sub
pop
fiadds
das
cwtl
mov
insl
stos
outsb
ja
fstl
dec
in
sub
jg
shlb
or
enter
aad
sbb
stos
jnp
push
add
cwtl
dec
sbb
adc
scas
push
lods
and
mov
adc
repnz
or
xchg
sbb
ss
mov
mov
insl
mulb
inc
in
pop
adc
mov
dec
ds
out
dec
out
enter
xchg
movsl
test
jl
push
andb
mov
rcrl
daa
addr16
lock
xor
push
loop
sub
xchg
or
push
mov
or
push
add
jge
xor
jns
ss
jp
ret
mov
cmp
outsb
mov
in
cmpsb
xor
jp
sub
mov
js
mov
jl
inc
scas
sub
inc
inc
mov
fimull
ds
rol
or
cli
iret
mov
enter
test
xor
xchg
push
sahf
mov
call
xchg
inc
add
mov
sub
lock
push
cltd
std
dec
lods
cmpsb
hlt
jl
inc
movsl
mov
pusha
cmp
out
mov
scas
mov
les
repz
xor
pusha
mov
adc
pop
fadds
dec
ja
test
dec
daa
fcompl
pop
inc
fldenv
nopl
call
sbb
test
xor
out
push
stos
sbb
out
repz
lock
lret
repz
sti
and
and
sti
and
add
push
sub
std
xor
es
fs
xchg
int3
insl
push
cmp
or
mov
out
xor
scas
ret
and
sub
mov
cld
pop
cmp
inc
mov
bound
push
dec
mov
fimuls
leave
jo
xchg
or
inc
cld
sub
aam
dec
lods
add
lcall
jge
adc
sahf
cmp
xor
shll
sti
movsl
hlt
loopne
dec
insb
xlat
mov
mov
mov
pop
dec
leave
pop
mov
sarl
push
aad
mov
pop
sarl
dec
jge
lock
loop
mov
mov
mov
add
std
pop
aas
or
cmp
pop
cmp
add
lahf
inc
xchg
lahf
sbb
out
out
lcall
and
mov
popf
ja
push
call
out
es
outsb
jno
pusha
loope
mov
and
hlt
push
repnz
scas
test
mov
repnz
inc
clc
pop
mov
inc
incb
cmp
fstl
and
add
lea
and
aad
add
inc
jbe
ret
arpl
cmp
jns
sub
sub
pop
je
adc
add
cmp
jg
xchg
jle
repz
xchg
pop
cmp
das
sub
lret
mov
ret
push
test
loope
popf
xor
ss
hlt
pop
aaa
inc
ret
jl
push
fwait
inc
sbb
mov
sub
jge
sbb
mov
dec
cmc
mov
loop
mov
mov
cvtps2pd
mov
fdivs
fucom
aas
or
ret
inc
cltd
enter
ss
cmp
inc
jno
xor
dec
andb
lock
rol
xchg
shrb
jne
lcall
pop
sarb
pop
inc
test
add
add
and
rcrl
pop
fisubs
sbb
cltd
push
mov
in
aad
jle
mov
inc
xlat
sbb
fs
out
inc
insb
sbb
jns
or
sbb
out
or
pop
mov
jge
stos
stos
sbb
jmp
jne
int
inc
mov
adc
mov
sbb
xor
sbb
inc
je
inc
mov
insl
inc
daa
cli
arpl
dec
flds
adc
mov
mov
xlat
xchg
fsubrp
sub
movsl
repnz
adc
enter
inc
add
sarl
add
cmp
dec
fistpl
mov
jg
sub
cmp
outsb
dec
lret
lret
pop
push
push
scas
mov
inc
imul
and
pop
jo
in
mov
cmp
cltd
pop
in
lods
lahf
ja
inc
adc
imul
lret
idivb
and
jl
push
loopne
add
in
lea
mov
cmp
jb
xlat
add
add
imul
adc
and
mov
jno
fcomps
rorb
cmp
push
mov
add
dec
jae
pmaxsw
imul
xchg
call
cmp
dec
dec
insl
sub
test
jo
lds
sub
cmpsl
je
hlt
jle
inc
data16
and
xor
bound
into
insl
sahf
test
scas
ds
inc
mov
mov
lret
dec
insb
outsb
mov
mov
xchg
daa
mov
and
shrl
ja
cmp
xor
leave
aaa
das
adc
scas
das
xchg
pusha
xor
mov
and
xchg
gs
in
test
fcmovnu
mov
push
lret
rcrl
shl
inc
test
imul
jmp
cli
cli
and
dec
loopne
scas
mov
sub
mov
push
out
hlt
dec
js
stc
mov
xor
adc
dec
call
jg
mov
mov
mov
call
js
cld
inc
mov
or
jmp
mov
dec
insb
int3
and
leave
cmp
out
mov
dec
rcrb
das
pusha
mov
mul
jbe
sbb
cmpsb
addl
lock
cmc
jecxz
sub
aaa
adc
imul
je
push
aad
and
push
xlat
iret
push
cmp
jp
sub
xchg
mov
aas
jne
pop
inc
call
mov
cmpsb
pop
or
cmp
sub
and
sahf
outsb
out
cmp
jne
xor
pop
add
jmp
xchg
push
or
push
adcl
movsb
xchg
repnz
or
xchg
aad
xlat
stos
cmpsb
or
addr16
sub
sub
pop
pusha
push
je
imulb
add
or
movsb
push
mov
mov
mov
sbb
mov
push
and
sbb
aam
adc
sbb
dec
cmpsl
aas
das
ss
add
loopne
sbb
xchg
js
mov
jns
fucom
xor
loopne
cmp
mov
push
and
sub
iret
aas
insl
jb
and
push
fildll
ss
mov
fsubrl
xor
in
mov
xor
xorb
sbbl
sbb
inc
mov
ja
or
repz
mov
add
scas
insl
mov
bound
fbld
daa
dec
loope
loope
repz
push
dec
ds
jg
cmp
xchg
imul
repnz
jp
cmp
lcall
mov
xchg
out
into
fnsave
jmp
repz
xchg
push
and
iret
pop
vmovupd
mov
notl
fs
andl
rcrl
pop
push
sub
and
jmp
aam
ficompl
cld
or
jle
mov
cmpsl
and
jae
rorb
or
push
mov
push
cmp
jge
test
test
sub
mulb
data16
ror
lahf
pop
adc
addl
sbb
pop
inc
in
push
dec
icebp
ds
shrl
out
push
movsb
cs
test
mov
xchg
lret
pop
or
and
mov
bound
cmp
aaa
mov
inc
mov
sbb
and
lahf
jecxz
mov
outsl
adc
add
cld
or
cmpsl
pop
gs
arpl
pop
push
ja
repnz
into
popa
iret
lret
jmp
insl
sub
add
cmp
dec
test
xchg
std
lds
filds
xlat
add
pop
aaa
enter
notb
lahf
mov
push
ds
jae
in
xlat
xchg
test
clc
xchg
mov
mov
and
sbb
fs
int
aam
dec
aad
inc
pushf
cmpsb
or
mov
push
orb
push
stc
repz
mov
push
loop
mov
cmpb
mov
xchg
inc
or
xchg
adc
fcmovnbe
gs
cmpsb
mov
popl
out
pop
push
test
mov
popf
in
inc
xlat
xchg
fsubl
cs
repnz
jo
sub
mov
adc
inc
fcomps
fbld
js
idivl
cwtl
sub
aad
add
xlat
xchg
pushf
dec
sbb
mov
xchg
test
nop
test
cmp
shrb
stos
out
and
clc
fldenv
jbe
in
icebp
cli
adc
mov
fidivrl
mov
pop
pop
test
icebp
push
cmp
adc
mov
es
in
ss
dec
jns
xchg
jl
lret
xor
out
icebp
or
push
loop
dec
int3
call
jno
mov
jecxz
lcall
aaa
jo
test
and
pop
fs
pusha
cmc
rorl
xor
mov
xchg
frstor
mov
cld
lahf
mulb
shlb
add
into
inc
fsubl
ja
mov
push
pop
xor
aad
imul
cmp
loop
jae
test
out
xlat
cmpsb
mov
add
dec
lahf
sbb
out
xor
push
call
mov
in
das
add
fdivrs
inc
push
inc
mov
imul
shlb
sarb
out
mov
sub
jmp
jle
fimull
outsb
xchg
add
xor
mov
jp
sti
movsl
in
lret
push
mov
out
cli
fxch
lcall
inc
xchg
dec
les
jle
sbb
fcomp
sbb
scas
in
in
adc
mov
gs
fmull
rcr
cmp
je
nop
leave
addr16
popl
lret
or
mov
fildll
inc
adc
outsl
dec
outsb
fwait
inc
sbb
pop
stc
inc
mov
sub
fisubrs
mov
push
movsl
in
dec
pop
xor
pop
out
pop
or
daa
dec
imul
dec
movhps
cmpsl
pop
shlb
inc
fdivrl
sbb
in
dec
mov
lret
push
fistps
push
filds
jbe
or
push
ret
jg
mov
popa
sbb
fdivp
aad
and
fstpt
test
dec
jnp
add
push
xlat
pop
pop
jl
lods
dec
dec
test
mov
dec
jecxz
test
ficoml
sbb
mov
in
mov
gs
xor
xlat
mov
cld
shlb
or
mov
xchg
aad
adc
mov
mov
sbb
jecxz
fwait
inc
sub
or
bnd
add
adc
orb
mov
push
aad
stc
xor
push
xchg
mov
pop
and
stos
sub
pop
scas
push
xor
aam
jg
les
sbb
inc
fnstcw
ret
xchg
es
fscale
or
gs
aaa
je
enter
cs
xor
aam
sti
fsts
test
mov
mov
mov
cmpsb
push
lods
sarb
scas
dec
test
sbb
mov
dec
push
bnd
or
into
and
loop
inc
idivb
mov
repnz
insl
xor
xchg
pop
aam
cmc
clc
inc
dec
mov
lret
jp
lcall
lods
stos
popf
add
pop
fsubrl
cli
insl
xchg
xor
insb
daa
mov
add
imul
xor
jmp
push
mov
jo
ja
dec
daa
fwait
cmpsl
jmp
test
out
inc
pop
enter
add
mov
subb
pop
sub
addr16
enter
push
das
push
jl
cmpsl
je
and
inc
and
pushf
movsb
ss
cmp
mov
push
jbe
jnp
xchg
pop
sbb
dec
roll
rcll
leave
xor
cld
push
xchg
mov
test
adc
inc
jno
xor
jmp
mov
or
or
xchg
add
adc
out
pop
mov
mov
int
jnp
sar
je
push
dec
enter
hlt
sbb
pop
test
mov
je
cmp
jp
mov
ret
mov
popf
jmp
les
pop
add
negl
bswap
dec
rolb
pop
pop
pop
jbe
addr16
sub
lds
sbb
notl
push
addr16
and
mov
test
cmc
in
jecxz
mov
or
pop
fldenv
out
ja
fiadds
test
mov
popa
or
add
out
jnp
add
cmpsb
cmpsl
and
jge
dec
stos
pop
adc
mov
jle
push
cmpsb
push
add
push
pop
int
sub
int3
mov
out
jno
sbb
dec
jo,pt
sub
nop
mov
stc
and
jb
mov
ljmp
scas
or
cld
clc
aas
lret
addr16
shll
cltd
add
mov
or
lcall
pop
scas
xor
push
test
xor
or
out
and
or
mov
mov
push
jecxz
sub
shrb
push
jnp
pop
xchg
jp
dec
into
scas
inc
fcomp
xor
cli
arpl
dec
adc
cli
push
and
call
xchg
dec
mov
push
inc
movsl
jge
xchg
je
divl
imul
lret
jge
mov
ds
mov
insb
gs
jp
or
push
mov
ljmp
imul
dec
and
gs
mov
push
test
sub
jno
addb
jg,pt
orb
aas
in
xorl
adc
jo
stc
mov
pop
ds
in
shr
dec
inc
das
sub
or
scas
ja
out
mov
cli
sbb
inc
cmpb
add
scas
movsl
jecxz
daa
adc
or
aam
xor
jnp
jo
add
imul
or
xchg
jns
fsubrl
add
push
or
int3
push
push
dec
add
fdivs
cs
insl
ret
test
pop
mov
sti
lods
sbb
jg
testb
aad
add
fbstp
rcl
add
fidivl
lds
lahf
mov
mov
inc
lods
lods
int
addr16
jge
xchg
dec
fwait
bound
fmull
add
jmp
push
add
inc
or
movsb
cmp
add
xor
xchg
push
push
loopne
xlat
sbb
fldl
ja
scas
sarl
and
dec
and
jae
adc
mov
inc
lcall
mov
aaa
fnstcw
dec
xchg
pop
cmp
fistl
es
data16
popa
pusha
jae
push
mov
or
mov
jno
lret
pushf
mov
and
mov
repz
cmc
aaa
ret
and
popa
outsl
sti
cld
add
adc
das
xchg
push
aam
jne
daa
xlat
jne
sbb
push
cmp
fsubr
push
sbb
pop
sbb
xor
jecxz
mov
es
xor
inc
das
xor
add
jp
loope
pop
roll
lahf
test
sub
cld
sbb
xchg
xor
mov
stos
or
push
ja
lahf
lcall
and
pop
sbb
mull
push
fwait
mov
inc
jb
test
add
and
xorl
sbb
das
ficomps
push
test
out
mov
sub
stos
in
mov
scas
dec
ret
jecxz
cwtl
jno
or
jbe
adc
and
mov
add
lret
outsb
add
cmpsb
std
lcall
sub
mov
out
sub
repz
push
jnp
cmpsl
out
inc
adc
and
mov
neg
jmp
jle
icebp
ljmp
push
cwtl
lods
xchg
sbb
or
mov
mov
jl
aad
sub
cmpb
decb
mov
push
fnstsw
mov
push
dec
cmp
stc
sbb
adc
xlat
in
push
test
xchg
lods
test
push
fs
fldt
idivl
pop
aam
andl
push
fldenv
xchg
addr16
add
xor
push
mov
inc
js
nop
add
add
jb
mov
rolb
or
fwait
or
xchg
repz
pop
adc
jl
int
in
adc
js
cmpsl
insl
fs
fdiv
dec
xchg
jmp
outsl
dec
into
xchg
daa
xor
in
xchg
push
push
or
inc
sbb
pop
dec
sahf
repz
mov
imul
adc
movsl
fcoms
movsl
enter
bt
xor
out
and
sti
inc
mov
inc
jb
add
repz
mov
mov
mov
jb
pop
lret
hlt
je
outsb
sbb
mov
lea
xor
push
xlat
test
mov
push
dec
jle
jbe
mov
daa
icebp
test
loop
shlb
inc
mov
xor
lods
lret
xchg
inc
loopne
jmp
mov
jge
ret
in
inc
cld
ds
xchg
add
push
mov
cmp
mov
inc
xor
pop
andl
lret
jb
jb
aam
adc
sub
test
aaa
sbb
repz
nop
aad
add
ficoms
outsl
cli
xchg
mov
jb
fists
push
jo
mov
cmp
movsb
sbb
in
push
pop
fucomip
cli
nop
mov
mov
ja
aam
xchg
mov
push
add
sub
outsl
imul
xchg
jne
sub
adc
cmpsl
sbb
jns
movsb
movsl
icebp
sahf
fwait
rcrb
mov
sbb
mov
iret
push
sub
mov
in
orl
cmc
rol
pop
aad
sub
cmp
loope
add
cmp
call
adc
xchg
lcall
dec
pop
cld
push
xor
aam
and
sbb
sbb
fidivl
jmp
jne
mov
gs
enter
imul
test
pop
popf
sbb
orl
sub
ss
cltd
pop
daa
pop
mov
movsl
mov
jmp
sub
lahf
pop
aaa
or
dec
ret
mov
mov
int
cmp
inc
dec
inc
ud1
ss
cltd
aad
cltd
sub
fwait
scas
and
les
mov
xchg
stos
jecxz
mov
sbb
adc
sub
jbe
sub
add
lahf
aaa
mov
stos
jl
or
xchg
or
repz
mov
ljmp
mull
push
das
jno
sub
imul
jp
pushw
repz
loopne
push
jge
fidivs
cmp
aaa
mov
test
icebp
mov
mov
lock
iret
add
icebp
setnp
je
das
xor
divl
mov
jg
icebp
cltd
push
jb
dec
loopne
jae
or
leave
cmp
cmp
mull
push
ret
sbb
into
or
std
fstps
pop
daa
push
xchg
daa
popf
into
push
jb
hlt
sbb
lock
push
ret
dec
clc
lds
arpl
shrl
in
pop
stos
mov
out
ljmp
pop
jo
adc
cmpl
imul
bound
sarb
inc
mov
xchg
sub
jo
ret
xchg
dec
movsb
xor
inc
mov
or
xchg
ja
xor
das
mov
xchg
adc
ja
fmull
mov
xchg
jp
shll
shlb
fwait
push
xorb
nopl
movl
xchg
pop
idivl
push
add
pop
ds
call
adcl
imul
repz
enter
dec
pushf
cmp
stos
cmp
mov
lods
xlat
sbb
in
jns
test
or
popf
movsb
xchg
out
and
test
mov
xor
insb
jns
lods
xchg
jp
mov
int3
mov
imul
shrl
push
xchg
outsl
cmp
scas
dec
hlt
sbb
imul
pop
aaa
inc
dec
cwtl
mov
mov
adc
mov
popa
out
mov
test
push
pop
add
data16
xor
inc
dec
aas
xorl
cmp
fsubr
loope
lcall
sbb
imul
xchg
sarb
or
or
movsl
mov
ljmp
lods
sub
pushf
adcl
sub
jge
into
bnd
dec
mov
inc
xchg
andb
push
cmpb
inc
leave
sbb
ret
outsb
cli
pop
xor
je
cmp
sbb
sub
pushf
cmp
outsb
stos
lods
lcall
xor
popa
add
repz
rsqrtps
jl
fstpt
push
cmovbe
dec
push
mov
int
insl
sbb
jb
fnsave
je
jns
filds
mov
outsl
sbb
stos
push
cmp
adc
mov
fsubrs
xor
sub
mov
in
ljmp
and
xchg
lcall
iret
notl
enter
adc
xor
loope
fimuls
mov
xor
pop
mov
adc
or
cmc
shll
xchg
lcall
das
inc
pop
xchg
push
push
cmp
frstor
pop
lret
std
lock
pusha
dec
sbb
aaa
shl
mov
inc
je
jb
adc
sub
insl
icebp
inc
imull
ljmp
jp
rolb
lcall
add
inc
cli
cmpsl
inc
jo
test
pop
mov
xor
xchg
jns
jle
aam
cmp
and
mov
xchg
add
sbb
jno
jb
or
xchg
loopne
jbe
insl
xor
mov
sbb
jge
ret
stc
jne
jbe
push
add
and
les
repnz
mov
xchg
stos
into
sub
int3
xorb
cltd
scas
mov
into
dec
push
js
cmp
mov
mov
xor
jbe
pushf
xorb
fbstp
and
fbld
test
xchg
adc
test
or
sarl
mov
xchg
xor
hlt
xor
lahf
mov
and
sub
mov
ret
dec
jns
or
jae
push
loopne
jp
mov
mov
mov
cmpsl
adc
loopne
sbb
push
icebp
flds
repnz
lods
mov
loopne
or
xchg
cmpsl
out
pop
scas
pmullw
in
adc
push
test
inc
cmp
push
jns
sbb
popf
ja
mov
arpl
xor
jp
iret
dec
lods
out
addb
sub
idiv
cld
aas
jns,pn
fistl
lahf
jnp
shl
mov
out
clc
pop
fs
outsl
movsl
push
popaw
jle
xchg
fsubrs
jp
sub
in
mov
inc
push
mov
into
leave
fwait
jbe
or
frstor
out
pop
push
or
push
jbe
jae
leave
mov
push
xchg
sbb
xchg
mov
and
adc
jo
cwtl
popf
push
fwait
mov
pop
dec
fisubs
pop
sub
fisttpll
dec
jecxz
dec
fs
or
push
xor
lahf
lea
mov
nop
xlat
jb
mov
push
pusha
loope
call
xchg
lcall
test
sbb
scas
pop
fstl
xchg
scas
mov
insl
cmp
or
and
sub
cmp
ss
loopne
push
mov
iret
xchg
cltd
test
lea
jns
andl
cmpsl
shlb
xchg
pop
filds
mov
lea
cmp
shll
cmp
xchg
cli
jb
fsub
and
loope
fists
xchg
mov
push
nop
mov
dec
lods
mov
cmp
fsubs
lock
jae
add
push
mov
jo
push
xchg
cwtl
lea
int
pop
gs
mov
sub
dec
add
cmp
leave
mov
dec
ds
inc
cmpsb
inc
pop
ror
cmp
out
imul
lea
arpl
sbb
pop
leave
jge
sbb
sbb
mov
cmp
aam
mov
pop
add
int
mov
adc
sbb
push
xchg
push
sbb
into
mov
jbe
leave
lea
cmpb
add
xor
inc
cmp
xchg
xorl
cli
or
adc
sub
rorl
add
mov
push
jns
dec
aam
inc
clc
pop
mov
add
cli
push
fistpll
push
add
int3
mov
inc
icebp
sub
sbb
arpl
jns
and
lock
mov
pop
and
movsl
clc
dec
xchg
mov
add
sbb
leave
mov
mov
shrb
add
jae
xchg
sub
mov
jle
and
dec
adc
pop
mov
stos
aas
sbb
sbb
mov
mov
lcall
jo
inc
mov
fsubr
jl
mov
mov
sbb
push
mov
imul
cmpsb
add
test
scas
stc
push
xor
test
sub
mov
cli
cmp
adc
sub
fstl
sub
dec
mov
inc
dec
js
leave
int
inc
xchg
fidivl
xchg
and
ljmp
sahf
movsb
vsqrtpd
adc
xchg
lods
sub
dec
mov
inc
dec
cli
and
addr16
push
das
imul
push
xchg
popa
cmp
xchg
jae
sub
daa
mov
lods
inc
pmuludq
iret
sub
and
scas
stos
jmp
out
lods
xor
dec
lret
nop
inc
or
rorl
into
xor
xchg
adc
jo
bound
jae
out
into
mov
bnd
xchg
xor
outsb
mov
adc
xchg
iret
adc
add
mov
or
pop
into
loope
mov
push
sub
pop
push
pusha
mov
sbb
jle
js
pop
mov
push
das
dec
aaa
cmp
mov
push
roll
xchg
loopne
cmp
pop
je
adc
jno
mov
pushf
push
ficoms
adc
mov
lret
sar
out
cmpsb
or
push
pop
xchg
incl
dec
add
lret
lret
clc
push
lds
push
jns
dec
je
pop
or
sub
out
or
push
mov
test
adcl
icebp
inc
mov
xchg
fstl
mov
pop
add
xchg
pop
jo
nop
inc
mov
out
out
aad
stc
push
lods
daa
cltd
mov
ret
cli
jno
xchg
test
dec
icebp
icebp
push
mov
mov
rorb
sbb
sbb
test
stos
inc
dec
nop
mov
sbb
jbe
pop
pop
ljmp
mov
nop
addr16
dec
ljmp
cltd
cmpsb
add
decl
subl
push
inc
insb
mov
sahf
mov
mov
push
mov
divb
mov
mov
fstpl
sub
lret
stos
add
mov
into
or
sbb
sub
cltd
cmpsl
fdivl
fildl
shlb
scas
gs
out
pop
dec
lahf
inc
and
mov
fwait
test
push
movsl
ret
push
mov
fs
xchg
sbb
jnp
jecxz
jno
and
xchg
or
cmp
in
lret
dec
mov
std
inc
dec
jo
xchg
hlt
jle
or
imul
jge
xchg
xor
iret
cli
cltd
ljmp
in
in
test
popa
xor
jge
js
lods
or
xchg
add
mov
bound
pop
push
addr16
xchg
cmpsb
mov
cs
fdivr
sahf
jl
adc
sbb
loope
aaa
and
pop
enter
mov
mov
in
add
inc
mov
add
jge
out
stc
repz
push
fnstsw
sub
inc
mov
je
adc
jnp
movsl
xchg
aas
jmp
insl
or
daa
pushf
inc
out
fdiv
fsubl
aaa
jecxz
stc
sbb
or
adc
mov
movsl
inc
push
mov
das
adc
push
shll
sub
stc
xchg
ficompl
insl
mov
lds
pop
jno
sub
mov
jl
and
sbb
push
sub
pushf
pop
dec
test
ret
lods
push
add
mov
mov
mul
or
in
ror
sbb
inc
scas
cmpsb
inc
or
inc
mov
lret
pop
dec
daa
out
aam
ja
or
sub
or
ss
cmp
jg
mov
sti
bound
cmpl
mov
jb
fsubrs
push
push
push
push
imul
lods
sbb
dec
lret
fwait
mov
push
lret
lock
fwait
xchg
sub
iret
movsb
push
enter
sub
leave
dec
in
add
inc
pop
mov
fdivr
sbb
sbb
int
mov
jge
shll
xchg
push
cmc
stos
push
pop
lock
mov
mov
xlat
lret
mov
loope
and
sub
pop
enter
pop
pop
flds
dec
mov
in
dec
mov
movsl
test
out
clts
shll
inc
jmp
mov
in
dec
sub
mov
clc
fimuls
jne
jns
enter
jae
mov
inc
stos
push
add
add
mov
jl
gs
adc
cwtl
cmp
aam
pop
add
ja
movsl
jnp
fcomip
inc
cltd
pop
in
js
pop
test
jmp
mov
ja
pop
or
cmc
cltd
clc
in
jbe
lsl
repz
xchg
jnp
cmpb
jne
adc
shrb
push
mov
in
bound
rolb
adc
push
sub
or
cmp
in
and
lods
cmpsb
lods
or
push
into
icebp
nop
mov
cli
add
pop
and
lcall
xchg
out
sbb
mov
add
ja
xlat
adc
mov
std
testb
xchg
push
in
rcrl
pop
xchg
push
pop
and
addl
sarb
mov
inc
sbb
mov
je
add
imul
loopne
repnz
enter
ret
jmp
fmul
data16
pop
push
movsl
xlat
and
dec
mov
mov
aad
pop
lds
ds
in
add
xchg
loope
lret
mov
stos
add
outsb
mov
ljmp
cmpsl
or
mov
xorb
lds
push
mov
inc
mov
fisubs
cmpsl
out
ret
lcall
stos
notb
sbb
arpl
inc
add
aaa
xor
jae
mov
jo
enter
cmpsb
push
pop
jmp
pop
sahf
sbb
mov
xor
rclb
in
push
cmp
mov
stc
mov
lret
loopne
xchg
jne
pushf
cmp
xlat
push
lret
repnz
mov
popa
daa
sbb
scas
xchg
cld
rorb
lds
loope
fdivrs
lods
insl
orl
filds
jge
cmp
pop
pop
hlt
call
pop
dec
in
insl
pop
ljmp
pop
aas
dec
mov
mov
int
imul
clc
push
enter
into
cli
mov
inc
aad
enter
stos
push
cmp
in
inc
or
pop
std
stos
test
mov
jge
aas
lds
pop
mov
cmp
add
pop
cwtl
mov
jl
out
in
ret
aas
std
cmpsb
inc
dec
xchg
arpl
dec
mov
popa
pop
inc
cmp
dec
adc
pusha
mov
stc
mov
mulb
in
mov
fsts
ret
shl
rorl
data16
and
shlb
pop
aad
mov
loop
sub
cmpsb
rolb
js
imul
cmp
cmc
mov
mov
mov
imul
inc
lret
insl
push
pusha
mov
adc
shrl
shll
or
jae
icebp
mov
fisubrs
mov
loopne
jbe
ja
imul
aad
stc
test
lds
xchg
or
mov
mov
clc
and
push
daa
daa
lahf
out
cld
adc
sbb
pop
cmp
jl
pop
mov
cmp
push
push
mov
xchg
lahf
pop
inc
jmp
inc
lcall
dec
nop
sbb
xor
cmpl
mov
mov
mov
daa
daa
fwait
shrl
stos
xchg
cmp
ret
adc
push
movsb
das
sub
xor
pushf
adc
mov
nop
sbb
inc
and
inc
dec
rcll
xchg
sti
cwtl
pop
ja
aad
push
pop
mov
fnsave
mov
inc
es
in
outsl
clc
add
or
pop
sub
arpl
loop
popf
dec
dec
pop
aad
imul
addr16
jp
mov
dec
mov
and
nop
repnz
out
outsl
sbb
push
cmp
sub
and
pop
insb
mov
leave
enter
mov
inc
and
xchg
shl
adc
or
and
push
push
xchg
mov
in
daa
push
mov
iret
pop
int
sbb
mov
sub
jg
sub
inc
adc
xchg
xchg
inc
or
scas
mov
lea
jo
jne
pop
xchg
in
add
sub
loop
lods
xor
cld
and
in
loopne
pop
add
push
scas
outsb
push
arpl
popf
pop
out
and
push
mov
je
cmp
cltd
ljmp
xchg
in
loope
js
mov
jno
push
jae
out
ret
test
sub
and
ficompl
loop
dec
popf
test
cmovb
in
pop
mov
xchg
push
movsl
addl
mov
lret
lods
out
mov
jp
les
repz
push
popa
inc
outsb
enter
mov
mov
jge
loope
loope
mov
xchg
lods
pop
stos
mov
icebp
xchg
push
ficoml
neg
xor
adc
lret
mov
dec
sub
test
stos
mov
lret
push
inc
and
sbb
mov
scas
pop
jbe
mov
lock
pop
push
dec
pop
repz
setge
dec
shrb
out
sbb
push
add
addr16
dec
jg
bound
in
inc
fs
andl
out
pop
aad
fcoml
enter
in
jle
out
xor
adc
lret
roll
jns
sbb
mov
jp
addr16
mov
cmc
fistpl
shl
xchg
fldt
push
pop
push
lds
addr16
push
mov
and
test
adc
dec
jno
stc
fcompl
dec
mov
in
dec
lret
dec
jns
outsl
fsubs
nop
sub
test
movsb
push
and
inc
rcl
mov
test
insb
daa
and
push
xor
dec
mov
add
pop
pand
sub
cmp
call
in
jo
adc
dec
loope
mov
das
cmp
mov
dec
pushf
fisttps
adc
push
mov
inc
loopne
xchg
mov
aaa
xchg
add
inc
add
pusha
clc
xchg
mov
ss
arpl
pop
aaa
insb
mov
add
push
test
rcrb
inc
push
cld
mov
mov
xchg
jo
xor
test
daa
mov
inc
or
test
pcmpgtw
mov
or
cmpb
loopne
les
xchg
leave
cmp
mov
jbe
inc
xor
icebp
jae
jmp
lahf
outsl
jmp
pop
insl
fwait
sub
add
outsl
insl
or
push
sbb
shlb
test
mov
lods
lea
popf
push
push
mov
xchg
sbb
lret
fiadds
gs
sbb
es
jmp
mov
std
pop
cmpb
pop
cmc
jnp
jnp
daa
jbe
stos
jne
mov
test
xchg
frstor
add
scas
push
lret
cmp
iret
enter
pusha
jbe
lret
gs
lods
jg
aaa
adc
push
test
fnsave
xchg
fdivs
rcrl
push
inc
sahf
sbb
les
push
xchg
ret
sub
repz
ss
jmp
sbb
cmp
sbb
cld
fidivl
lcall
jb
inc
inc
mov
sub
xorl
pop
mov
push
adc
push
fmul
movsb
and
addr16
pop
ds
mov
jb
andl
mov
loope
in
fistpll
scas
adc
ror
push
push
mov
mov
jecxz
or
negb
and
mov
push
aad
or
cli
xchg
cmp
ror
add
ss
and
outsl
xchg
imull
aaa
pop
sti
int3
in
loope
sub
mov
adc
jle
mov
or
ss
dec
push
ret
out
mov
push
cmp
adc
push
adc
xor
in
push
mov
cmp
mov
add
lods
pop
cltd
dec
jle
aaa
jl
mov
pop
pop
rorl
xchg
orl
mov
je
mov
add
lods
and
mov
jns
movsl
mov
or
call
call
imul
push
jnp
sbb
sub
movsl
jb
lods
test
jl
fld
jb
cwtl
fisttps
xchg
mov
fxch
mov
fucom
out
gs
ljmp
dec
dec
push
sub
adc
insl
mov
pop
out
imul
sbb
jecxz
mov
push
mov
adc
sbb
mov
test
mov
xor
mov
push
out
mov
jecxz
daa
mov
sahf
push
arpl
dec
sti
and
ffree
dec
sbb
subl
imul
ror
orb
cmp
mov
cmpsb
daa
movl
popa
pop
xor
lahf
stos
add
cmpsl
stos
ds
fs
rcrb
jo
add
mov
pop
or
ja
inc
test
iret
push
sub
xor
push
jp
mov
shrb
fistps
test
test
push
out
stc
mov
jle
pop
rcrl
push
jae
adc
in
testl
sti
xor
inc
and
fwait
add
or
or
lret
test
ljmp
mov
and
dec
test
jno
add
add
cltd
xor
push
imul
add
mov
gs
stos
mov
and
cmpsb
lock
les
aad
scas
inc
punpckhwd
push
daa
inc
ljmp
pop
lock
ja
push
stc
fcoms
stc
push
adc
leave
lret
cmp
or
xor
or
cmpsl
push
sbb
bound
mov
divb
or
mov
mov
int
jmp
adc
test
cmp
push
add
lret
xlat
sub
out
fcompl
repz
popf
push
xorb
mov
mov
jge
and
adcl
dec
imul
and
xchg
into
or
pop
jge
mov
inc
add
and
imul
scas
cmpsl
les
xchg
jnp
scas
mov
mov
push
mov
adc
adc
push
xor
rorl
pop
or
inc
mov
out
and
bound
add
and
inc
sbb
xor
adc
add
pusha
push
imul
inc
add
test
jo
inc
fs
cmp
push
xchg
lea
roll
sub
push
pushl
int3
insb
cli
leave
shll
mov
push
jl
mov
lret
pop
ja
imul
and
iret
jne
push
jns
cmpsb
push
mov
fcoms
pop
and
mov
mov
je
pop
sti
jmp
gs
test
faddp
into
sbb
and
pop
aaa
sbb
add
cli
lret
mov
or
push
daa
inc
sub
push
cmp
in
out
inc
fwait
jmp
loop
pop
popf
fnstenv
pop
mov
sub
mov
sarb
bswap
jmp
fnstsw
enter
push
mov
imul
push
lock
das
push
dec
inc
lahf
into
mull
mov
add
arpl
jb
pop
add
lret
fsubrl
cmpsl
or
cmp
mov
adc
push
jmp
dec
nop
mulb
sbb
push
out
nop
sbb
stos
ret
mov
dec
mov
orb
lret
jbe
rcll
repz
out
jbe
mov
addr16
data16
mov
in
xchg
mov
pop
leave
mov
shl
and
sbb
in
dec
rcrb
mov
insl
arpl
aaa
xchg
jg
icebp
repnz
mov
fildll
leave
les
gs
in
mov
sbb
adc
mov
and
jg
mov
push
dec
xchg
push
je
int3
bound
lods
xchg
mov
out
and
test
mov
adc
dec
and
xor
mov
mov
fwait
test
shl
mov
xchg
in
or
push
lods
dec
mov
jecxz
cmp
repz
xchg
mov
mov
fadds
out
inc
mov
mov
adc
sub
insb
and
mov
gs
insb
pop
mov
arpl
sbb
jle
jle
or
subb
out
cmp
insb
call
push
lds
imul
dec
sub
ss
push
rclb
dec
popa
xor
ja
jg
and
rorl
jae
pmaddwd
lahf
mov
inc
xor
into
fs
sbb
jne
or
xchg
in
xor
mov
pop
adc
test
pop
mov
loop
icebp
xchg
jp
xlat
cs
xchg
sub
dec
nop
insl
jecxz
sbb
pushf
xchg
es
cmpsb
test
add
sub
iret
mov
cmp
je
scas
mov
loop
cmp
outsb
clc
mov
mov
cmp
shl
mov
adcb
jno
incl
mov
mov
or
mov
xor
rclb
and
pop
or
jno
push
ljmp
mov
fs
jecxz
popa
cmp
aam
inc
xchg
xchg
movb
mov
stos
xchg
testb
sub
jle
push
mov
popf
xchg
std
pop
push
shll
inc
sub
inc
mov
into
cmpsb
sub
loopne
cmp
fnstenv
inc
fsubrs
pop
ffree
sub
push
xchg
lret
repnz
cli
mov
fisttps
insl
lret
loope
das
fadds
mov
xor
sbb
mov
or
mov
mov
in
imul
arpl
sub
inc
cmpsl
inc
fwait
movsb
mov
pop
mov
adc
js
adc
ss
cmp
jno
or
idivb
nop
add
rcrb
push
pop
mov
imul
xchg
xor
and
aas
idivl
sbb
sahf
add
adc
pusha
sti
faddl
fldt
call
sbb
adc
xchg
push
adc
int
aas
add
fsub
cs
mov
push
gs
inc
lods
dec
rcll
outsb
cmp
ja
fldcw
add
movsb
add
jmp
rorb
push
nop
incb
jne
jge
cmpsl
aaa
add
mov
cli
sub
mov
sbb
enter
insl
std
daa
fnstenv
out
loopne
cmp
loope
sub
xchg
stc
mov
inc
in
shlb
icebp
lret
inc
xchg
daa
outsl
xor
iret
popa
es
daa
add
fnstsw
push
and
sub
jg
cmp
adc
mov
aaa
js
nop
out
pop
rcrb
js
add
fsubrs
test
sbb
jb
mov
and
lcall
cmpsl
pop
mov
daa
cltd
repz
sbb
das
cli
in
pop
enter
mov
sub
jge
not
cmp
in
xor
jl
pop
cltd
adc
incl
or
sub
jmp
outsb
push
dec
cmpsb
inc
add
sub
dec
cwtl
int3
lahf
sub
les
xchg
cmp
push
sub
xor
je
mov
fisubrs
aad
dec
jge
repnz
loope
add
fnsave
cmp
sbb
repnz
lret
adcl
pusha
inc
aad
adc
fnstcw
add
sahf
xor
dec
and
clc
pop
and
cmp
fnstcw
scas
outsl
pushf
xor
pop
arpl
add
xor
mov
or
repz
mov
pop
decb
repz
xchg
sbb
sarb
add
push
stc
mov
in
inc
lahf
test
inc
lea
test
sbb
pop
mov
xor
xchg
call
or
mov
cwtl
pop
in
shrl
mov
js
rolb
adc
addb
lds
sahf
xor
repz
jo
ss
push
and
cs
mov
inc
dec
sub
push
inc
enter
push
mov
xlat
addr16
lods
mov
and
xor
mov
jge
loope
dec
js
punpckhbw
cltd
insl
pop
jo
loope
inc
ret
call
sub
out
xor
loop
ja
orps
fcomp
dec
fnstenv
aas
mov
adc
or
xorl
add
add
and
or
test
dec
aas
sbb
or
movb
pusha
shrl
sti
js
push
sub
imull
ret
pop
daa
push
sub
xchg
rcrb
dec
cmp
cmp
jg
mov
xchg
adc
sti
stos
stos
dec
loop
inc
inc
mov
dec
enter
ficoms
fdivl
divb
fisttps
sbb
sbb
sti
jle
call
add
adc
mov
xchg
jl
lds
jo
nop
pop
adc
scas
mov
in
adc
je
outsb
and
or
into
cwtl
add
stc
pop
dec
nopl
cmp
pop
fcomps
stc
dec
dec
cmpsb
cmp
cmp
fildl
inc
stc
rol
in
outsl
mov
jb
les
repnz
fcmovnb
es
loopne
cli
or
sbb
arpl
out
movsb
cmc
aam
jg
jmp
jmp
mov
pushf
daa
add
mov
sbb
xor
in
inc
push
mov
mov
xchg
cmp
popf
push
cld
lea
and
adc
ja
popf
fdivl
movsb
shll
xor
push
dec
push
rcrl
or
pop
jge
or
call
jbe
mov
or
das
dec
pop
dec
jg
out
inc
xor
push
vpmadcsswd
cmp
or
push
adc
sbb
les
lcall
sub
subl
js
out
xor
mov
daa
or
lock
or
cmp
cltd
lcall
leave
testb
jae
lahf
out
call
test
fucomip
cmpsl
mov
in
pop
aad
xchg
jbe
mov
add
inc
adc
addb
mov
sti
jecxz
or
or
mov
out
inc
pop
xchg
mov
imul
outsl
das
test
out
inc
repnz
lock
xchg
sti
push
pusha
sub
lea
fcomps
pushf
cli
into
adcb
push
ss
addr16
std
pop
addr16
jns
push
pop
pop
push
mov
inc
sahf
and
or
adc
cmp
inc
cmp
lods
lds
les
xor
jmp
ja
addl
cmp
in
and
adc
pop
fs
sub
adc
dec
cmpsl
push
adc
or
ljmp
int
xlat
mov
stc
sbb
cmp
outsl
dec
call
daa
stc
sarb
ror
push
mov
mov
or
pop
sbb
push
idiv
stc
lea
mov
outsl
cmp
lea
push
in
dec
addl
add
push
call
std
scas
mov
inc
mov
mov
cmp
push
sbb
ss
lds
fdivrp
lods
ret
and
cli
inc
cmpsb
mov
imul
dec
or
xor
xchg
mov
pusha
pop
stc
cmp
scas
mov
xchg
sub
lahf
fstpt
jo
enter
bound
mov
sbb
jl
add
jp
int
push
xchg
hlt
into
sub
ret
inc
sbb
ret
adc
and
push
jnp
cmpsl
insl
inc
pop
cmpl
fstp
lds
jb
and
leave
xor
rcrb
bound
jns
dec
aas
subb
inc
popa
cmpsl
rolb
mov
rcrb
xchg
sbb
adc
lea
push
lret
pop
jnp
cmp
sub
clc
sub
pusha
mov
in
pop
inc
sbb
or
fistl
inc
inc
shll
cs
mov
in
sbb
jns
and
sub
xlat
int3
fdivr
push
mov
pop
jle
lds
rcl
dec
arpl
mov
lahf
mov
push
outsb
inc
fcoml
xor
jl
loop
dec
fstpt
cmp
inc
jbe
dec
dec
push
ljmp
dec
xor
pop
cmpsb
xchg
mov
pushf
test
lds
sub
pop
push
loopne
pop
cmp
push
and
lcall
je
mov
jg
pop
addr16
or
and
push
roll
in
pop
and
add
jo
dec
lea
add
push
cmpsl
insb
xor
dec
jae
cltd
and
or
sbb
loopne
dec
or
je
push
mov
mov
lock
inc
mov
jmp
movl
pop
and
or
sbbb
mov
sbb
pop
bound
stos
xor
nop
movsl
rep
lret
sbb
js
add
inc
cmp
jbe
ficomps
cmp
jns
jg
mov
cmp
cmp
cli
test
int3
aam
lock
ljmp
mov
push
aad
inc
shlb
lea
xchg
rolb
jb
ret
mov
jne
pusha
mov
std
inc
jnp
subb
aaa
jge
sbbl
add
inc
lods
inc
lods
xor
insl
jg
sub
adc
jns
mov
outsb
fistps
arpl
and
inc
jns
movsl
add
jmp
jo
and
ret
jge
push
nop
pop
cmp
dec
insb
scas
lods
sub
or
mov
sbb
mov
or
ljmp
inc
movsb
test
mov
mov
cmp
leave
out
scas
icebp
lcall
std
int3
subl
sub
xor
and
mov
adc
adc
call
les
or
jp
xor
add
mov
pop
stc
mov
push
add
jns
jecxz
lods
cld
sub
pop
dec
pop
lods
sahf
xchg
ret
and
cmp
in
pop
mov
add
cld
add
hlt
loope
imul
lods
stos
push
lret
loopne
loop
push
dec
push
insl
iret
ret
pop
test
xchg
cmp
push
loopne
out
movl
cmp
pop
jo
adc
std
sbb
ja
cmp
jge
lock
icebp
inc
aam
jae
xchg
mov
in
xchg
mov
nop
jp
mov
xor
shrl
movsb
or
xor
notl
pushf
and
xchg
stos
or
sub
and
dec
jae
mov
jecxz
ficomps
testl
xchg
add
leave
repnz
negl
dec
xchg
repz
out
xor
mov
cld
jo
jl
jne
and
out
jge
stos
fdivrs
shll
mov
lock
push
adc
shrb
and
mov
mov
pop
jge
and
mov
push
jg
dec
push
aam
lahf
xor
xor
lea
push
jns
daa
fstpl
mov
mov
and
push
xlat
lods
pmaxsw
mov
iret
aad
test
adc
sub
and
insb
es
fmuls
ret
adc
ds
cmp
cli
test
adc
mov
xchg
xor
jo
inc
lods
lods
scas
jle
pop
or
pop
jns
xor
insl
xor
jnp
mov
mov
fmull
sbbb
and
addb
stc
mov
pop
adc
xchg
cmp
leave
lret
cmc
sti
xchg
dec
jle
adc
sbb
fbstp
mov
shrb
sub
inc
fnop
flds
mov
inc
into
fadds
bound
imul
mov
cmp
pop
stc
js
jo
sahf
fdivrl
mov
aam
jl
scas
ret
add
enter
roll
pop
and
shll
push
ret
sbbl
aaa
push
mov
adc
add
cltd
lret
jg
mov
sub
push
jg
mov
mov
push
lcall
xchg
out
dec
hlt
repz
cmpsb
arpl
rclb
push
adc
fists
shlb
inc
pusha
fs
fbstp
push
lret
jbe
movsb
movsb
pop
cltd
push
xchg
jmp
fwait
movb
mov
jl
mov
test
push
sbb
dec
jbe
xchg
and
sahf
into
inc
lods
andb
mov
mov
addl
lds
cmpsl
jb
push
or
clc
andl
sub
lret
ret
les
out
and
ja
xor
lahf
cmp
mov
mov
fdivp
fiaddl
cmp
ret
and
inc
jno
cld
inc
divl
fdivp
sbb
jmp
lds
scas
pop
sbb
idiv
adc
pop
inc
jns
iret
cmp
inc
cmp
inc
stos
ljmp
sbb
insb
lods
mov
repnz
or
and
sbb
push
addr16
pop
cmp
lret
lret
xor
push
sub
mov
add
aas
mov
pushf
or
dec
and
addr16
jecxz
mov
jge
mov
sub
inc
cmpsl
repz
sbb
jmp
jecxz
repz
pushl
les
cwtl
mov
jle
xchg
or
sub
pop
aaa
stos
jae
push
cmp
pop
repnz
or
leave
int3
adc
int3
xchg
mov
adc
rolb
cli
shl
loope
scas
inc
inc
pusha
cmp
std
fnsave
and
jecxz
mov
xorl
pop
out
or
lcall
push
jnp
xlat
jns
mov
push
push
jae,pt
push
stos
lods
or
out
sbb
jae
and
jecxz
loope
pop
rcrl
fistpll
addr16
dec
sbb
push
push
or
cmp
mov
and
loope
xor
lock
push
inc
repz
mov
cmpl
jge
xchg
or
in
push
push
adcb
push
in
pushf
daa
sub
fsubl
inc
imul
mov
cmpsb
adc
popf
mov
scas
repnz
fnstenv
int3
jmp
jb
fs
fwait
xor
pop
pop
lret
lock
xchg
or
dec
test
xchg
fmull
pop
jg
lods
push
sbb
jle
stos
push
rolb
fsubl
jge
call
lock
xlat
adc
mov
sbb
xchg
xchg
jp
stos
mov
jns
dec
jmp
mov
xchg
fxch
sub
enter
xor
shlb
push
leave
sbb
xchg
push
inc
les
sti
jnp
jae
push
test
insl
mov
sarl
xor
pushf
mov
ja
adc
mov
cld
cmp
xor
push
mov
jbe
jmp
pop
enter
jnp
xor
adc
hlt
pop
mov
push
xchg
stos
fmuls
jge
xchg
aas
lret
popf
imul
ljmp
pop
sbb
push
push
loop
mov
cmpsl
jbe
inc
dec
fcoms
orl
icebp
push
call
mov
adc
lds
jmp
fiadds
mov
movb
dec
xor
xchg
loopne
xor
mov
cmpsl
adc
inc
outsb
push
js
in
popf
rcrl
mov
mov
xchg
adc
lcall
xor
mov
repnz
dec
sbb
out
cmp
xchg
les
dec
inc
sub
or
mov
in
adcb
inc
popa
xor
std
ljmp
test
inc
add
popl
pop
icebp
mov
mov
xchg
cmp
dec
cmp
es
das
fsubrl
into
jcxz
push
shrl
jno
mov
cld
pushf
lretw
cmp
push
xlat
seta
lock
in
adc
daa
mov
aaa
mov
mov
movsb
inc
or
sub
jl
jne
movsl
test
das
jmp
lods
dec
fistpll
pop
pop
add
subl
movsl
repz
sub
mov
iret
scas
xor
fisubl
sbb
mov
repz
mov
push
les
xchg
fists
loop
xchg
dec
in
or
sarb
lret
add
outsb
mov
inc
push
cmp
xor
inc
mov
divb
mov
push
jae
or
dec
ficoml
push
and
inc
pop
jo
dec
xor
arpl
pop
popf
xchg
insb
ficoms
sub
xchg
mov
inc
push
aas
int
pusha
popf
pop
mov
aas
rorl
fwait
add
inc
mov
stc
hlt
ret
jns
ss
cmp
xchg
push
xor
mov
and
push
test
adc
cmp
in
xchg
lods
mov
insl
inc
mov
or
cltd
fwait
jne
lcall
mov
mov
ja
mov
push
dec
push
mov
mov
mov
cltd
sbb
loop
imul
stc
cld
adc
push
dec
jecxz
and
xor
cmp
fldenv
mov
mov
ret
addb
ret
andl
fucomip
stc
enter
ret
sbb
pop
fmuls
fimull
ja
and
sarl
insb
pop
pop
sahf
shrl
jbe
inc
add
fmull
sbb
cmp
int3
repnz
inc
and
hlt
add
int
call
xchg
daa
or
fisttpll
inc
mov
pop
xor
xor
push
and
pop
sbb
flds
push
loopne
dec
and
ret
rorb
inc
and
or
inc
cmpsl
loop
rolb
fadd
dec
sub
or
pop
out
imul
popf
push
push
mov
adc
adc
out
lods
cmp
mov
out
mov
mov
sbb
imul
and
inc
es
pop
xchg
fisubrl
rorl
mov
and
and
outsl
mov
pop
imul
in
scas
xor
icebp
cmpsb
test
incb
jne
add
out
pop
dec
mov
sarl
cmp
insb
lahf
sub
iret
xor
imul
mov
test
xchg
pop
jg
fadds
dec
insb
xor
push
mov
mov
and
sub
out
cmc
sarb
and
ss
stos
mov
pushf
test
push
xchg
popf
fcmovne
aam
pusha
jbe
xor
sbb
mov
pop
and
imul
fadd
push
inc
shll
xor
inc
push
mov
jmp
popa
mov
cmp
into
daa
cmp
xor
mov
inc
fwait
or
add
and
clc
popa
adc
and
shll
wrmsr
jnp
outsl
and
ret
test
xor
rorl
sbbl
sub
scas
mov
push
popa
dec
push
sbb
adc
imul
jl
push
and
and
icebp
les
sub
inc
negl
subl
fldl
in
roll
mov
inc
rcll
nop
out
mov
and
jne
out
mov
lret
sbb
lea
sahf
int
or
adc
push
mov
rclb
xchg
push
jmp
aaa
fnstenv
test
les
xchg
inc
popf
sbb
mov
pop
fildll
test
js
repz
sar
adc
xchg
cltd
scas
subl
and
not
xor
adc
out
lods
adc
cs
imul
iret
jns
pushf
popf
fcomps
xor
push
bnd
jle
mov
popf
add
pusha
movsl
xor
bsf
lods
jns
cmp
adc
xchg
sbb
lods
andb
es
jl
cmc
notl
mov
jmp
cmp
xor
and
lcall
je
mov
fisubs
je
aam
push
inc
in
movl
sbb
out
inc
adc
cli
adc
fists
xchg
mov
iret
int
jecxz
ja
repnz
popa
add
rcrl
lock
push
pop
les
adc
imul
lods
out
nop
mov
cmpsl
mov
add
push
rorl
push
cmpl
push
push
or
daa
adc
mov
cld
mov
and
cmpsl
repnz
push
adc
dec
inc
fcomps
xor
mov
mov
jp
sbb
and
rcrl
aad
xchg
ret
movsl
push
push
dec
jle
jbe
inc
pop
jg
adc
aad
cs
mov
jle
addr16
mov
mov
clc
add
dec
and
cli
cmpsl
adc
stos
cmpsl
int3
mov
mov
add
adc
arpl
lds
sahf
sbb
pop
call
sti
outsl
sbb
aam
mov
mulb
testl
xchg
in
xchg
test
call
popl
mov
jbe
add
cld
pushf
rcl
pop
adc
repnz
mulps
dec
pop
ret
adc
cmp
add
push
repz
jbe
in
aas
sbb
pop
in
cmp
out
sub
push
push
cmpsb
and
pop
test
pop
mov
fwait
cmc
add
scas
pusha
fidivl
mov
jae
mov
mov
mov
xchg
nop
push
mov
pop
adc
or
add
dec
subl
push
pop
aam
xchg
ja
pop
push
and
jmp
add
mov
int
inc
stc
pop
outsl
sub
leave
imul
das
mov
and
popa
mov
pop
mov
xchg
sub
mov
test
lcall
pop
aaa
mov
inc
mov
jle
cs
movsl
jnp
inc
lcall
jmp
leave
xchg
cli
das
inc
xor
stc
lods
scas
dec
ret
mov
cmp
ss
xchg
dec
ljmp
pop
adc
push
imul
xchg
lcall
sub
bound
pusha
mov
fiaddl
jg
xchg
dec
sub
sub
xor
ret
mov
xchg
push
testl
fdiv
pushl
lds
call
cli
test
jle
cld
xor
das
mov
xchg
pop
test
lea
out
push
loope
inc
lret
jae
jmp
and
outsb
dec
mov
repnz
jle
dec
mov
pop
repz
ret
jbe
push
mov
fidivrl
ret
mov
pop
stos
ret
fldenv
mov
push
rclb
sub
pop
dec
pushf
lret
gs
lahf
mov
pop
jmp
xchg
push
sbb
add
or
push
xchg
cmpsb
xchg
lock
ret
daa
aas
mov
xor
scas
push
mov
nop
mov
mov
movsl
sub
add
mov
loope
iret
xchg
xchg
inc
lahf
imul
cld
adc
and
cltd
outsl
out
ds
aam
push
jns
popf
in
push
mov
or
and
ret
mov
popa
inc
cmpsl
dec
xor
mov
cmpsl
mov
orb
adc
jns
popa
pop
sbb
aad
loopne
repz
stos
mov
fsubs
enter
pop
repz
xchg
loop
mov
int
jo
call
inc
out
jne
cmp
iret
adc
sub
sbb
jbe
dec
ja
lcall
xchg
xchg
xor
sub
shrl
xchg
pop
subl
and
inc
push
sahf
or
xchg
movsl
xchg
pop
repnz
stos
shl
fs
sahf
or
fisttpll
insb
les
xor
xor
mov
sbb
into
in
pop
jnp
cmp
and
loopne
push
mov
mov
sbb
adcb
iret
cmp
stos
dec
xor
pop
jmp
jae
in
push
dec
subl
adc
add
hlt
dec
stc
sar
loop
aas
adc
jne
adc
hlt
push
mov
sbb
jno
sbb
dec
xor
sub
gs
jb
lahf
aas
xchg
pushf
arpl
arpl
arpl
shrl
sbb
in
bound
inc
sbb
fidivs
icebp
subb
push
mov
imul
js
repnz
jg
mov
sub
imul
jmp
mov
fbld
xchg
jo
sti
mov
leave
adc
das
bndstx
jnp
push
or
adc
ljmp
popa
sub
leave
je
int3
stos
cmp
lea
inc
adc
lahf
xchg
mov
repnz
pop
dec
cltd
test
repnz
call
loop
mov
dec
mov
mov
sbb
mov
div
imul
fnstenv
outsb
dec
mov
pop
push
jmp
inc
jmp
cmpsl
daa
sub
or
push
sub
mov
cmp
xchg
imul
cs
and
mov
add
in
mov
push
insb
sub
fiaddl
or
or
sub
or
xchg
fildll
sarb
mov
popa
into
push
jae
ret
push
jno
pop
jge
add
stos
xchg
mov
mov
jmp
jae
std
and
xchg
or
xchg
sbb
in
ret
mov
mov
pushf
adc
fisubrl
mov
jecxz
add
repz
or
loopne
adc
ljmp
or
cmp
mov
in
repz
or
mov
or
jno
dec
mov
mov
xchg
out
lahf
ret
pop
mov
xor
shll
cmp
dec
movsl
stos
je
mov
cpuid
incb
pop
sub
pop
jg
imul
sbb
sarb
fisubrl
push
test
push
sbb
add
loopne
jnp
and
jp
or
ret
push
insl
cmc
lods
sub
outsl
cmpsb
shrl
jne
push
call
into
and
out
mov
sti
cmp
ret
and
pop
ljmp
pop
subl
ja
fcomps
in
lods
sahf
jns
or
push
test
imul
ret
push
int3
push
movsl
sbbl
cld
dec
add
xor
sub
sub
fs
inc
xlat
sbb
jp
adc
fsubr
lahf
pop
push
in
jne
frstor
xchg
add
movsb
sbbb
jo
mov
int
sub
mov
loopne
adc
lret
sbb
imul
loope
push
mov
pop
sti
outsl
nop
xchg
shlb
mov
sbb
jno
clc
in
repz
fldcw
sbb
lret
cmpsb
cld
push
ljmp
xor
sbb
repnz
out
popa
mov
xchg
sbb
pop
cmp
sub
nop
jbe
add
push
sub
shl
sbb
lods
xor
fsubrs
js
xchg
push
cmp
stc
mov
add
aas
adc
fwait
in
test
pusha
sub
sub
cmc
and
push
or
bound
cs
mov
and
jp
addr16
insb
test
mov
xor
lret
xlat
pop
ror
insb
mull
cmc
mov
jge
mov
jne
or
sahf
jecxz
cld
jb
inc
test
dec
push
ss
jb
dec
push
xor
testb
and
xor
js
cmp
js
sbb
pop
mov
jne
dec
orb
rclb
jmp
popf
pop
xor
xchg
sti
loop
aas
int
int
jecxz
daa
inc
aam
adcb
adc
lods
popf
iret
outsl
movsb
inc
rorl
outsl
mov
aas
leave
mov
push
out
cmpsl
mov
mov
out
fimuls
inc
or
mov
ljmp
lret
es
pop
mov
sub
pop
pusha
mov
push
and
mov
add
push
xchg
stos
cli
das
sub
cmp
int
call
sbb
xchg
cmpsl
lret
dec
stc
pusha
mov
outsb
mov
and
cmp
inc
in
sub
cmp
es
cs
test
testl
adc
add
repnz
xchg
filds
jns
xlat
and
clc
dec
ja
push
loop
xor
rorl
or
jae
addr16
sub
fsubrs
loop
cmp
sbb
test
stc
pop
mov
int
mov
pop
psllw
inc
mov
xlat
out
inc
cmp
or
dec
sub
div
cmp
cmpsb
cmc
scas
adc
lahf
fistpl
scas
jmp
add
mov
mov
sbb
dec
xchg
lcall
fstpl
inc
push
int
sbb
inc
mov
inc
cwtl
push
shlb
mov
outsb
scas
add
shlb
push
push
mov
ret
ret
push
xchg
mov
mov
inc
cmpsl
je
mov
push
cmp
fsqrt
inc
adc
pop
add
and
ret
stos
mov
jmp
push
sbb
fs
mov
repz
mov
popw
shrl
jge
xor
lods
arpl
fistpll
jecxz
cmp
repz
sub
in
int3
add
test
outsb
inc
push
bswap
dec
arpl
sbbw
aam
inc
sbb
mov
int
xchg
xorb
ljmp
loopne
ja
test
int3
movsb
imul
add
jo
cmp
sub
pop
fnstsw
jge
lret
mov
sbb
mov
mov
sbb
cmp
jo
push
in
push
fcomps
and
mov
mov
lock
cld
mov
xor
in
sub
push
mov
mov
lods
pop
mov
aaa
add
daa
mov
movsb
loope
adc
fcomps
pop
je
add
addr16
fwait
cmpsb
call
pusha
xchg
mov
cltd
data16
rclb
les
xchg
scas
dec
pop
aaa
jnp
cmc
lds
mov
in
inc
gs
hlt
aam
sbb
mov
mov
int3
sub
jae
mov
lcall
int3
xchg
popf
cli
xchg
fbstp
jecxz
cmp
dec
arpl
lods
cmpsb
cmpsl
lret
std
in
cmp
sbbl
je
pop
mov
cmp
inc
aas
dec
daa
adc
mov
test
add
add
rcrb
lods
cltd
outsl
loopne
int3
lock
pop
mov
aam
mov
movsl
decl
jmp
cmp
sub
or
push
fldcw
xor
ret
push
icebp
outsb
mov
jge
jo,pt
pop
push
scas
mov
lahf
loope
ret
jmp
clc
sbb
adc
scas
pop
loop,pn
into
fcom
in
cld
xchg
bound
cmp
in
mov
jp
sub
jae
cmpsb
sbb
popf
xchg
mov
xor
cmp
inc
fucomp
ljmp
js
mov
popf
roll
pop
add
inc
adc
inc
fdivrs
inc
inc
dec
in
out
pop
jae
mov
sarb
fildl
pop
jge
out
add
add
fbld
sbb
jo
ret
inc
dec
xchg
outsl
sbb
pop
sub
imul
outsl
fadds
or
xor
sub
mov
pop
mov
cltd
loop
hlt
xchg
mov
rorl
sbbl
inc
shrb
inc
fidivrs
loop
pop
push
xor
enter
sahf
mov
adc
testl
subb
das
adc
shll
or
rorl
repnz
add
xchg
dec
sbb
stos
cwtl
cmpsl
pop
ds
in
fsubl
inc
insb
jp
xor
and
dec
sbb
dec
jno
fisttpll
xor
xchg
lcall
adc
in
or
test
cs
fcmove
xchg
push
lret
push
orb
daa
into
dec
mov
nop
popf
dec
xchg
sub
and
sbb
gs
repnz
mov
fwait
xor
jbe
lock
mov
js
mov
jno
iret
movsl
mov
or
out
fs
lock
jno
test
popa
test
jb
jno
hlt
dec
pop
dec
xor
xor
adc
mov
insb
pop
mov
jg
add
aam
mov
fsubl
xor
rcrb
inc
xor
incb
dec
push
push
mov
cwtl
cmpsb
sub
push
xchg
aas
sub
leave
out
stos
jns
dec
stos
int
lahf
outsl
push
sbb
pop
push
popf
fsubrl
sbb
pop
lret
insb
cmp
adc
adc
inc
jmp
js
add
lret
cld
movsl
imul
mov
ret
adc
pop
jle
and
dec
cmc
pop
lods
inc
imull
cmp
dec
xrelease
mov
cmpsl
push
scas
mov
adcb
sbb
out
mov
cmp
add
mov
insl
stc
pushf
out
xchg
ficomps
dec
mov
xor
ret
mov
xor
xor
inc
push
frstor
and
arpl
sub
xor
dec
lret
pop
jge
pop
push
mov
xor
dec
aaa
xor
or
cmp
mov
je
pop
lods
int3
jle
xchg
push
pushf
test
das
mov
rcr
mov
out
dec
rcrl
mov
inc
bound
push
mov
jl
mov
sub
push
jmp
lea
cli
xor
popf
fsubl
sub
xor
shll
addr16
xchg
xlat
sub
iret
xchg
adcb
push
test
push
subb
rolb
notb
je
jb
jne
cwtl
test
mov
or
cmpsl
cld
xor
js
in
xchg
dec
sti
cmpsb
aam
mov
clc
je
add
das
ss
mov
push
loope
arpl
addb
idivb
push
pop
inc
jg
adc
mov
mov
ret
sub
or
jp
loop
stos
in
shll
push
push
mov
stos
push
xchg
lret
int3
pop
out
xchg
xor
sbb
lods
stos
mov
mov
insl
sbb
jb
xchg
push
cmp
pop
jecxz
movsb
add
das
in
in
dec
insb
test
mov
inc
loop
xchg
fidivl
popl
pop
mov
test
sti
movsl
cmp
test
xor
cmp
shlb
jg
or
sbbl
xchg
aad
sahf
js
xor
or
lret
cmpsb
lock
mov
call
ljmp
jmp
mov
mov
ljmp
ret
data16
js
mov
sbb
sbb
insl
adc
popa
insb
mov
mov
repz
mov
adc
pusha
rcrb
or
fdivs
cwtl
lods
dec
mov
cli
pop
dec
xchg
imul
adc
lods
add
inc
cmpsl
sbb
or
xchg
dec
std
lods
mov
fwait
mov
shlb
repnz
mov
lds
imul
and
mov
cmp
and
out
scas
lods
daa
add
or
test
aas
in
jns
jae
lods
mov
arpl
daa
mov
and
scas
lcall
push
pop
cmc
xor
sbb
push
pushf
xchg
aam
into
xlat
sbb
clc
cmp
xor
jp
out
nop
mov
adc
adc
inc
jns
xor
mov
dec
rep
jge
xlat
aad
fcomi
cmp
lcall
fistl
inc
mov
ja
sti
jnp
je
xor
scas
sbb
jmp
scas
mov
xor
pop
xor
in
xor
xchg
jnp
cld
inc
das
mov
stc
inc
inc
dec
sbb
idivb
push
stc
lcall
lahf
loope
rol
test
cmp
int3
and
orb
lcall
xlat
mov
ss
lock
addr16
pop
xchg
xor
inc
test
adc
mov
clc
xchg
sbb
or
sbb
and
nop
cmp
push
aam
mov
shrb
push
ss
inc
les
jecxz
bound
pop
es
xchg
in
dec
leave
adc
push
xchg
mov
or
xchg
mov
push
inc
xlat
xor
xchg
pop
pushfw
sahf
mov
dec
or
xchg
add
xchg
or
dec
add
jecxz
gs
add
sbb
add
sbb
pop
outsb
arpl
in
inc
out
insb
fwait
mov
xor
popf
mov
mov
add
test
xor
cmpl
js
test
inc
dec
xchg
push
dec
mov
mov
cmp
icebp
int
repz
jo
xchg
out
out
xor
lahf
mov
jg
jbe
ds
inc
and
pop
push
mov
shrb
lcall
mov
insl
arpl
incl
push
push
mov
cli
mov
dec
xor
imul
rcl
xor
scas
add
push
sbb
and
inc
les
shlb
nop
bound
lock
jno
sbbb
call
lahf
adc
lock
mov
lods
rcr
push
roll
hlt
mov
insb
and
aas
xchg
sbb
mov
mov
adc
ret
aaa
jl
cwtl
push
dec
fwait
push
mov
loope
inc
pop
les
or
dec
stc
inc
movsl
dec
dec
jb
dec
testl
push
add
popf
push
repnz
jo
pop
mov
cmp
std
push
jp
rorl
loopne
sub
or
xchg
or
imul
pushf
bound
jg
pop
std
scas
mov
jno
jp
mov
sarb
add
ret
pop
notl
push
loop
popl
mov
inc
not
jne
filds
sbb
cmpsb
sbb
mov
lock
xor
jbe
imul
lea
jge
loopne
lods
or
aaa
mov
fdivs
jae
fcoms
dec
ret
lret
push
xchg
jo
vucomiss
dec
and
push
pop
mov
inc
mov
ret
incb
call
jmp
add
pop
xor
mov
repz
inc
shll
xchg
addr16
add
insl
adc
dec
adc
or
jns
pop
mov
ret
loop
push
into
js
push
and
xchg
leave
dec
jno
and
lds
movb
mov
nop
shrb
jne
mov
xchg
jecxz
les
pop
cmp
es
sub
mov
mov
aaa
mov
fmuls
stos
lahf
aaa
jo
add
je
ret
loopew
mov
and
cmp
sbb
sbb
pop
adc
in
insl
int3
bound
sbb
pop
fsubrs
xor
sub
lret
mov
push
lods
aas
or
dec
push
lret
jb
outsb
les
push
dec
addr16
or
dec
mov
imul
jp
ss
mov
shr
sub
stos
jnp
pop
xchg
sub
fnstenv
mov
mov
ja
jg
repz
test
mov
pop
adcl
xchg
or
mov
je
add
mov
repz
push
pop
jge
pusha
push
sub
xor
xchg
es
jmp
pusha
jae
pop
push
imul
stos
fcompl
xor
loope
sbb
cmp
not
lods
mov
movsb
inc
or
xchg
cmpb
inc
popa
icebp
loop
je
mov
testl
jne
jecxz
and
loope
push
ss
out
inc
mov
sbb
clc
sub
xchg
mov
sarl
push
fidivl
add
cltd
jo
add
and
in
cmp
push
add
add
pcmpeqd
xchg
push
sbb
js
icebp
bound
cmp
fs
fwait
push
push
imul
push
jecxz
mov
aaa
cmp
push
mov
nop
enter
call
push
lock
icebp
rclb
aaa
sbb
std
sub
xchg
lahf
mov
mov
mov
cmpsl
jne
mov
mov
mov
jne
je
pop
ja
mov
sbb
jno
outsl
push
int
adc
popa
xor
dec
mov
push
xor
popa
sbb
sahf
xchg
sahf
rcl
jl
cmp
popf
mov
aas
movsb
pop
pop
lret
sub
dec
lret
xor
adc
or
jg
in
dec
sbb
adc
cmp
push
pop
add
movsl
sbb
outsl
inc
or
repnz
aas
movsb
pcmpgtw
daa
sub
iret
pushw
mov
mov
add
sub
mov
je
cmp
std
aam
or
pop
pop
loope
frstor
dec
mov
dec
inc
popf
in
push
imul
mov
jge
in
test
ja
xchg
cmpsb
xor
stos
push
sbb
push
je
xchg
negb
popa
add
mov
pop
lods
bnd
inc
icebp
call
jecxz
out
mov
dec
lea
mov
roll
cmp
add
add
pop
pusha
mov
adc
fstpl
call
mov
mov
push
xchg
mov
call
jmp
inc
ss
lock
mov
int3
sahf
pop
mov
mov
mov
sbbb
ficoml
push
mov
mov
adc
movsb
fisttps
bound
sbb
sbb
mov
jnp
and
data16
sub
ret
andl
pop
mov
push
jb
push
sub
bound
nop
ja
icebp
xchg
test
sub
mov
inc
outsb
dec
cld
ret
ljmp
mov
dec
sahf
xchg
sub
adc
push
clc
pop
or
movsb
popa
out
mov
mov
js
jns
push
out
lcall
jno
es
lods
shlb
cmp
jg
cmp
stos
test
cld
test
loope
adc
push
rol
stos
aas
loopne
ss
push
dec
outsb
push
js
dec
inc
jnp
or
js
outsl
ret
mov
mov
push
sbb
mov
jmp
jge
test
hlt
call
jae
pop
mov
pop
mov
jp
in
cmpl
or
push
cwtl
loopne
mov
jl
sub
pop
mov
sahf
leave
sbb
aas
cmpsb
xchg
sub
imul
fwait
cmp
pop
cltd
push
ud1
inc
cmp
mov
pop
sbb
sbb
and
xchg
mov
mov
shll
lret
fs
mov
jp
inc
sub
sub
pop
dec
shll
data16
cmc
cli
mov
xor
movsb
stos
das
div
or
push
add
sbb
insl
mov
push
inc
sarl
ljmp
pop
popf
pushf
push
mov
mov
inc
sbb
xchg
out
xchg
pop
pop
scas
insl
jae
fs
mov
std
mov
out
sub
inc
js
push
jmp
arpl
fcomps
sbb
xchg
xchg
imul
add
repnz
xor
dec
mov
xchg
xlat
ljmp
pop
dec
mov
pop
add
dec
pop
insl
mov
push
or
jo
test
xchg
sbb
fisttpll
lock
repnz
orl
test
rorb
fisubl
mov
ja
test
xchg
push
dec
or
shlb
mov
xchg
jae
mull
flds
push
mov
sub
push
cmp
pop
jp
adc
arpl
icebp
push
inc
out
and
pop
cmpsb
fidivl
dec
and
je
dec
pusha
and
push
pushf
pop
aam
pop
jo
sub
cmp
adc
roll
jge
pop
std
fucomi
mov
mov
inc
dec
je
adc
cmp
push
out
xchg
pop
ret
xor
mov
aam
fs
or
repnz
and
xorb
fcmovne
out
mov
insl
mov
or
mov
aaa
pop
in
int3
inc
cmp
adc
rcl
repnz
mov
push
stos
sbb
clc
dec
sahf
add
sub
and
cwtl
mov
jne
rorb
in
cltd
add
outsl
push
cld
outsb
loopne
cmpsb
cmp
lcall
add
or
cmp
add
dec
adc
dec
jmp
mov
pushw
out
aad
jae
jae
sub
xchg
mov
cwtl
and
rcrb
dec
or
sub
dec
adc
mov
jge
mov
inc
aaa
movsb
jbe
call
loope
push
xchg
push
into
pop
scas
sahf
sub
mov
enter
mov
pushf
fwait
cmp
out
fsubl
cli
or
lret
pop
cmp
dec
std
xchg
addl
shld
shrl
cmp
das
bound
incl
popl
add
mov
ss
adc
cmp
add
jg
outsb
out
inc
mov
add
mov
mov
fcoms
jg
inc
xor
lret
adc
lcall
mov
jne
lods
sub
sub
test
lret
dec
dec
dec
cmpsl
or
loopne
push
inc
push
mov
rcl
or
inc
sub
and
adc
adc
sub
and
cmp
rorb
stc
cmp
frstor
dec
cwtl
xchg
mov
and
int3
mov
aad
ret
push
pusha
popa
sbb
add
jns
push
mov
adc
adc
adc
mov
nop
dec
rcrb
add
or
rorb
scas
stos
xor
xchg
data16
push
loopne
test
xchg
lea
aam
push
cli
std
in
xchg
lock
popa
and
mov
insb
movsl
nop
mov
cmp
leave
push
fistpl
sub
inc
push
out
jg
pop
inc
in
int
inc
add
cmp
dec
adc
dec
dec
cwtl
movb
pop
nop
fwait
hlt
lcall
dec
sahf
mov
push
je
and
in
popa
xchg
iret
and
pop
bound
in
or
out
and
repnz
in
inc
daa
pop
mov
jmp
ds
mov
jge
add
adc
int3
push
ss
jl
nop
inc
mov
jp
and
mov
movsb
ret
mov
mov
js
dec
lock
cmp
sahf
hlt
inc
rcrb
cmc
cmpsb
in
icebp
pop
dec
outsb
or
dec
pop
dec
dec
lret
mov
cs
in
aam
fsubl
lods
mov
aaa
mov
mov
pop
pop
xor
insb
and
and
xchg
das
js
fwait
in
sbb
js
pushf
stos
rclb
pop
push
push
pop
and
notl
inc
ljmp
aad
mov
sub
mov
xor
icebp
shrl
adc
jo
insb
and
ss
pop
mov
int
pop
lcall
lods
lock
clc
jge
and
mov
mov
xchg
inc
jle
sbb
call
jo
xchg
es
sub
and
repz
mov
jae
jo
pop
mov
mov
mov
sub
dec
mov
fisubs
xor
dec
out
xor
mov
xor
cmp
je
ss
cwtl
repz
adc
cmpsb
jo
or
imul
xor
icebp
fdivrp
mov
jnp
and
inc
and
sub
xor
add
xchg
loop
sub
call
fs
rcr
xor
adc
mov
call
mov
xor
popa
clc
jg
lods
test
pop
mov
or
jge
hlt
popa
pop
cld
pushf
out
mov
cmp
xchg
out
mov
sahf
js
jmp
mov
inc
mov
test
mov
jecxz
xor
cld
jnp
mov
sub
mov
imul
adc
mov
cld
mov
adc
add
nop
add
xchg
out
push
cmpsb
dec
jnp
push
sbbb
pop
jp
stc
aam
jb
sub
jl
pop
pushf
xor
jp
insb
sbb
mov
jae
push
pop
fs
mov
jmp
mov
adc
jge
and
lret
stos
inc
arpl
sbb
in
xor
subl
scas
xchg
jb
mov
outsb
sub
je
movsb
loop
mov
ficompl
adc
mov
mov
push
in
jnp
inc
lret
les
andb
and
jmp
add
pop
loop
lret
sbb
add
mov
daa
cmpsb
fisttps
fdivs
pusha
sub
mov
movl
adc
dec
out
clc
fs
cmp
in
ss
push
outsl
mov
data16
xor
fs
inc
and
stos
pushf
pop
mov
xor
push
mov
jl
lret
ret
and
mov
dec
in
inc
cmp
out
fisttpll
pop
or
xor
rcrb
mov
cmpsl
test
and
jg
and
loopne
push
inc
test
aam
mov
sub
lcall
jl
mov
leave
fs
not
xor
cwtl
xchg
push
push
mov
mov
das
das
xchg
lods
lretw
fscale
dec
mov
ficompl
sbb
inc
jp
dec
rclb
xchg
movsl
mov
or
xchg
rclb
jecxz
fdivs
jnp
in
mov
jmp
fwait
mov
xchg
dec
scas
inc
xor
icebp
inc
call
adc
pop
xor
insb
mov
loop
jno
mov
pop
int3
movsl
jns
test
mov
std
icebp
cmp
dec
nop
add
cwtl
add
mov
xchg
daa
out
pushf
jbe
aas
mov
pop
fwait
movsl
and
outsl
leave
mov
dec
inc
ja
jae
stos
sbbl
shrl
fisubrl
leave
shlb
pop
mov
stos
jg
dec
pop
mov
and
lcall
pop
inc
cltd
push
xchg
add
dec
aaa
xor
cmp
mov
dec
and
cld
test
mov
inc
fists
daa
loop
mov
pop
cmpsl
rol
fwait
adc
inc
mov
push
push
xchg
xchg
mov
shrb
movsb
rcrl
cmp
call
arpl
shrl
xor
adc
negb
insb
and
push
loope
pop
adc
inc
or
jp
pop
jbe
jge
dec
pop
imul
lea
add
test
jne
dec
arpl
je
arpl
push
jne
dec
xor
push
ja
rorb
xor
mov
add
faddl
push
push
add
loope
hlt
xchg
adc
inc
adc
xor
imul
or
mov
sub
xor
xor
inc
dec
cs
cli
shll
mov
fsub
mov
sub
dec
mov
rcrb
cltd
lret
sub
fimuls
movsl
loopne
test
notb
xchg
fs
jmp
sub
test
and
adc
into
ja
lret
push
std
and
mov
inc
movsb
cmc
imul
xchg
subl
in
aas
out
fwait
cmp
xchg
sbbl
popa
cli
stos
sub
imul
xchg
outsb
xor
add
cli
lea
sbb
movsl
sarb
add
stc
mov
dec
dec
sub
cmp
mov
mov
sbb
or
js
aaa
mov
jecxz
sbb
outsb
into
mov
pop
jge
maskmovq
mull
addl
fneni(8087
cmc
fbstp
dec
cmpsl
jbe
imul
arpl
fadd
dec
or
data16
lret
fwait
and
aam
mov
or
sar
rolb
cwtl
sbb
fstps
rclb
int
jae
inc
sub
lock
imul
bound
loopne
xchg
jne
add
std
clc
testb
mov
outsb
ljmp
popa
in
loopne
pop
mov
insl
out
call
mov
rcrl
or
mov
lcall
outsb
pop
call
pop
push
insb
pop
xchg
mov
test
jb
fstl
fs
mov
je
lea
pusha
mov
cld
or
adc
and
fsubl
notl
cmpsl
lods
inc
pop
jns
inc
and
jno
fwait
cmp
pop
and
push
pop
cs
cltd
or
inc
xor
fiadds
dec
into
mov
mov
sub
mov
inc
lods
dec
push
mov
sub
adc
cli
pusha
and
pop
mulb
stos
mov
mov
hlt
mov
in
daa
popf
fldl
bnd
sbbl
out
fisttpl
paddw
jl
xor
dec
call
inc
and
adc
lds
xchg
mov
fs
adc
cmp
stos
add
pop
lahf
push
dec
pop
push
cmp
adcl
inc
jmp
outsb
into
inc
sub
add
or
inc
bound
and
ret
fistpl
xchg
push
test
stos
pop
clc
push
testl
jne
imul
loop
mov
fwait
cmpsb
sbb
add
popf
lcall
xchg
cmpsl
leave
ds
outsl
out
out
dec
and
ret
xor
push
xchg
mov
data16
hlt
fs
pop
sahf
loopne
and
xchg
push
int3
jl
sbb
cmp
cmpsb
jns
mov
xchg
add
mov
xor
negb
push
dec
mov
clc
in
in
cmp
and
jbe
xchg
stos
ret
xchg
cmp
pop
rolb
jmp
jno
aad
into
lahf
repz
add
jge
xchg
cmpl
cmc
pop
pop
mov
mov
sbb
sbb
fsubrs
jl
add
stc
xchg
sti
repz
gs
cmpsl
dec
stc
jno
jae
fs
out
and
dec
hlt
test
jmp
jbe
mov
xchg
sub
je
mov
jns
jp
cltd
pop
or
cmp
adcl
jno
imul
sub
adc
inc
aad
js
and
call
fpatan
scas
cmpsb
scas
out
mov
pop
pop
hlt
test
mov
cmp
les
in
cli
jne
ds
jmp
cmp
bound
inc
aad
inc
mov
lret
movnti
int3
movsl
xor
sbb
mov
jge
inc
inc
jo
sahf
xor
mov
add
in
lret
lds
cmpsb
push
and
pop
out
orb
inc
or
xor
pushf
ss
fimull
into
test
or
aam
sub
add
enter
dec
inc
int3
inc
xor
cmovae
push
popa
xchg
jo,pn
xchg
dec
sbb
cmp
into
aad
in
mov
cmp
push
pop
test
movntps
cs
mov
fnsave
sbb
mov
push
arpl
iret
cmp
jne
dec
mulb
sahf
fwait
sub
jns
mov
sbbb
xorb
fidivs
sbb
dec
les
stos
testb
mov
add
mov
test
mov
inc
push
rorl
stos
xorb
add
stos
das
add
mov
sbb
imul
dec
arpl
mov
cli
add
jne
adc
inc
and
dec
arpl
outsl
jno
outsb
dec
outsl
mov
push
arpl
hlt
mov
and
andl
or
jnp
cmp
dec
mov
cmp
push
add
sub
inc
or
adc
into
shr
loopne
cmpsl
pop
imul
fwait
popa
lret
mov
dec
jmp
push
std
popf
fldcw
imul
dec
fdivrl
in
iret
imul
sub
cmp
and
aaa
or
add
out
mov
sub
lods
insl
cli
loop
xchg
cmp
xchg
in
hlt
pusha
adc
out
xorb
ja
movsl
loop
xor
cmp
cmp
rolb
aam
mov
push
xor
cld
cmpsl
test
push
addr16
push
daa
sub
shll
mov
mov
xlat
inc
test
out
mov
or
aas
cmp
and
jnp
or
adc
daa
pop
mov
movsb
test
cmp
aaa
push
mov
sbb
ficoml
dec
push
xchg
sub
pop
adcl
mov
cmpsb
xor
jmp
push
aad
imul
out
sbb
dec
imulb
xchg
aaa
adc
mov
hlt
add
pop
xor
divb
int
or
sahf
adc
cld
fdiv
and
hlt
loopne
cli
adc
push
push
ret
mov
and
cli
push
cmp
mov
push
xlat
test
mov
mov
dec
stc
mov
iret
push
ljmp
mov
adc
repnz
cs
sti
pop
push
push
adc
mov
rclb
sbb
hlt
das
cmc
movsb
lret
test
jbe
es
jle
data16
aad
mov
mov
mov
sbb
cmpsl
inc
add
cld
loop
push
push
popf
mov
mov
xor
pushf
out
xchg
cmpsl
mov
sub
mov
rcrb
pop
daa
dec
sysexit
and
sahf
bnd
jnp
cmp
ret
pusha
pop
xchg
testb
sub
sub
sub
pushf
fsts
or
and
adc
push
or
aas
mov
enter
shll
dec
pop
ds
sub
stos
das
inc
sbb
mov
lcall
ljmp
cmc
imul
aaa
pop
divl
xchg
popa
loopne
addb
mov
js
outsb
jb
inc
sti
mov
jmp
insl
lahf
aaa
fistl
mov
sti
mov
fistpl
cwtl
mov
mov
test
cmp
in
addr16
arpl
lds
movsb
mov
mov
in
leave
clc
push
out
dec
and
rcrb
sub
stos
push
sub
pop
popa
out
dec
stos
push
cs
inc
out
push
jg
adc
sti
adc
test
into
inc
adcl
cmpsl
frstor
jo
adc
jns
dec
xchg
out
dec
jo
xor
fsubrs
icebp
es
and
divl
jae
xor
xchg
xlat
je
lret
test
rcr
adc
popa
jmp
dec
jne
mov
cmpsb
aaa
pop
insl
bnd
out
stos
dec
in
in
leave
mov
es
sub
insb
jle
push
mov
cmp
xlat
stos
lret
movsb
movsb
sbb
jnp
repz
sbb
leave
or
push
into
adc
pop
jp
loopne
sbb
dec
mov
sub
mull
push
stos
popa
sbb
repz
dec
notb
js
add
int3
fbld
inc
sub
popf
and
or
insl
into
leave
in
mov
stc
aas
mov
mov
fisubrl
mov
daa
cmp
jge
add
mov
out
lcall
mov
mov
in
cld
aas
push
test
dec
imul
lcall
sbb
pop
rcll
inc
dec
fwait
std
imul
imul
jle
cmp
imul
not
inc
pusha
out
mov
or
pop
add
fcmovu
loop
lds
movsb
dec
out
shrl
or
jo
ds
fildl
clc
jns
push
push
cmpsl
std
xorb
sbb
xchg
cld
xchg
adc
fucomp
jns
enter
cwtl
inc
hlt
fs
cmp
fnstcw
adc
sub
xlat
lock
xchg
ret
inc
mov
adc
icebp
mov
mov
lret
hlt
fs
or
leave
sahf
add
xor
rol
jecxz
repnz
aad
mov
mov
dec
sub
and
jg
pop
mov
jno
dec
push
and
lahf
sbb
mov
jg
pop
shll
and
sbb
sbb
mov
sbbb
add
sti
in
pop
lahf
pop
mov
push
jp
shll
repz
push
out
outsb
cs
lods
xchg
jle
lret
nop
ja
cltd
mov
scas
cld
lds
cmc
cmp
mov
jno
xchg
and
lret
sbb
jb
inc
clc
jmp
mov
hlt
jae
out
jae
loopne
and
mov
icebp
loop
mov
sbb
lret
loop
and
pop
out
bound
stos
push
lret
insl
xor
pop
int3
sbb
lods
fwait
sbb
dec
pop
inc
lret
pusha
mov
je
jle
dec
sub
push
adc
aas
or
push
rcrb
icebp
sbb
xchg
loopne
jno
cltd
loopne
sub
sub
inc
in
inc
lret
shrb
aas
outsb
xlat
sti
adc
push
inc
cs
cmp
sbb
inc
jle
js
out
push
test
cmpsl
xor
mov
sub
pop
mov
arpl
out
sbb
mov
lret
dec
decl
popa
cli
mov
mov
jo
inc
std
pop
xchg
outsb
mov
aad
jl
icebp
fldenv
xor
xor
or
cltd
sti
push
or
in
push
movsb
mov
popf
les
pop
xchg
aaa
jge
dec
mov
je
xor
test
jae
mov
xchg
and
aaa
incl
jbe
jo
lods
sbb
fsubr
fldcw
adc
aad
push
cmp
shrl
pop
cli
jge
adc
out
jo
bswap
aas
sub
cwtl
inc
jo
psubw
mov
jo
push
lods
sub
add
jae
mov
and
sti
sbb
pop
into
sub
mov
enter
mov
sbb
insb
cmp
imul
xchg
dec
int
inc
or
cmp
iret
addr16
out
stos
inc
lret
mov
sub
rclb
jbe
loopne
xchg
mov
cmpsl
adc
in
mov
pop
mov
push
inc
andl
dec
inc
in
xor
sub
orb
pop
pop
push
adc
fcoml
push
fstl
pop
jb
pusha
push
and
cmp
adc
push
fstpl
adc
sub
adc
sbb
jle
xchg
lcall
movsl
push
xchg
test
loope
sti
sarb
xor
xor
rcrb
popf
ss
jbe
gs
and
in
pop
lds
fistl
call
sub
dec
sbb
and
inc
add
ret
lcall
mov
js
shlb
lods
mov
cmc
outsb
mov
mov
pop
cmp
lret
clc
sti
dec
jno
cwtl
lret
pop
cmpb
loop
xor
dec
pop
nop
gs
and
mov
in
pop
mov
cmc
ret
repnz
or
pop
mov
into
lret
movb
mov
xchg
or
int
push
out
imul
sti
jne
pop
inc
push
movsl
test
cmp
les
movsb
mov
ljmp
cmp
rol
jmp
dec
pop
fwait
imul
mov
xchg
andl
push
jae
mov
push
lds
inc
mov
cwtl
jg
inc
xchg
and
inc
enter
lods
xor
lahf
sahf
push
lret
push
fsubs
xchg
inc
mov
out
notb
inc
xlat
scas
or
or
mov
add
cmpsb
stc
jae
repz
mov
mov
or
inc
andb
xchg
or
mov
add
jne
jmp
sub
pusha
dec
sub
jmp
jae
or
lret
push
pop
jmp
aas
jge
sti
rcl
sahf
push
je
imul
negb
push
xor
fistps
clc
addr16
hlt
inc
ljmp
or
cmp
sbb
adc
aaa
jo
push
scas
divl
mov
popa
fildll
mov
mov
push
sbb
push
jnp
push
jge
dec
outsl
enter
cwtl
ffree
xchg
icebp
sahf
cmc
out
repz
ss
popf
decl
insb
dec
outsl
sahf
sub
or
sbb
xchg
lcall
dec
fstl
inc
insl
stos
xor
ja
lods
popa
or
or
ficoms
xlat
popf
or
and
jnp
lcall
push
pop
push
dec
sub
mov
jo
or
jle
sub
mov
jb
sub
mov
lcall
popa
push
jno
dec
bound
popf
dec
fwait
jecxz
aaa
movsl
xchg
add
sahf
idiv
int3
daa
int
add
outsb
add
fistl
arpl
test
jle
jno
and
rolb
inc
push
mov
scas
xchg
out
mov
dec
jns
outsb
mov
jl
les
sbb
lcall
sarl
fcmovbe
insl
jae
insb
les
insb
sbb
add
mov
int
faddp
xor
mov
sbb
jle
push
cmpsb
mov
out
sbb
mov
jne
mov
in
ret
jo
mov
cli
clc
and
pusha
fistl
popa
xchg
sbb
loop
ror
scas
out
or
inc
cmpsb
push
ds
and
out
dec
test
mov
imul
mov
xchg
sub
int3
subl
push
lret
lcall
ret
ljmp
add
or
jp
test
or
cmpsb
and
add
sahf
and
or
in
mov
fsubp
or
pop
jg
mov
jg
cmc
popf
in
push
mov
cmp
aaa
push
xchg
rorl
not
sbb
xchg
arpl
sbb
push
mov
mov
cmpb
sub
dec
enter
fs
jnp
nop
subl
stc
push
fists
hlt
and
int3
xchg
mov
inc
out
and
cwtl
lret
sbb
mov
dec
stc
add
fdivr
sbb
fs
mov
fdivl
push
dec
dec
fildl
into
int3
jns
sub
jnp
out
adc
mov
mov
jno
icebp
push
push
frstor
loop
mov
bndldx
outsb
cmp
inc
loop
and
fcmovu
movntps
sbb
xchg
jmp
mov
push
inc
push
scas
pop
gs
pushf
test
push
fisubrl
xchg
lock
cmp
mov
jbe
pop
push
xor
sbb
test
sub
mov
xchg
pop
lea
jecxz
mov
dec
or
mov
loop
or
popf
dec
cld
mov
test
xchg
pusha
mov
dec
int3
jmp
testl
lods
lret
loopne
jo
call
xor
sahf
movsb
dec
xor
ds
outsb
mov
into
cmp
pop
and
leave
fcmovne
mov
mov
fsubl
adc
sub
inc
adcb
std
and
jo
les
jmp
xchg
mov
gs
sub
sahf
mov
push
arpl
adc
int
nop
add
pop
js
fwait
xchg
jle
xor
rcll
sub
leave
xchg
arpl
out
dec
xchg
inc
in
or
mov
js
mov
std
out
dec
int
push
inc
or
arpl
adc
popa
cs
mov
cmc
mov
xchg
pop
orb
jae
stos
insl
repnz
add
sbb
scas
mov
sahf
push
and
dec
mov
int3
sti
mov
pop
pop
xchg
cmpsb
sbbb
xor
adc
test
xchg
sbb
push
sti
mov
iret
or
orl
mov
pushf
add
jp
push
xchg
bound
xlat
adc
mov
pop
mov
jns
xor
out
jo
icebp
push
and
or
imul
bound
shrb
cmpsb
adc
mov
and
mov
out
pop
out
sbb
cmp
mov
sub
clc
hlt
jmp
mov
fcmovnu
stc
loope
sub
movsl
inc
aad
pushw
jno
cli
or
sub
dec
popa
je
push
push
jg
clc
inc
pop
xlat
push
mov
or
push
ret
cmpl
test
movsb
rcll
fs
fwait
jp
sub
jo
or
mov
and
jnp
xchg
cmc
sbb
pop
lods
out
push
inc
mov
aas
adc
loopne
in
test
sbb
jae
jo
push
cmpsb
test
mov
pushf
rclb
loop
dec
lea
and
push
shl
lock
pop
jns
xchg
jecxz
inc
jno
jno
out
std
or
mov
cmp
iret
mov
lea
hlt
rclb
arpl
inc
lea
dec
outsb
mov
xlat
jmp
ror
and
cmp
imul
xchg
mov
xchg
sub
rcrl
in
jnp
fidivrl
jge
std
dec
leave
inc
lds
mov
mov
cmpsl
popa
xor
push
hlt
popa
stos
shll
imull
pusha
or
mov
push
outsl
lock
sahf
fcompl
mov
mov
inc
adc
xchg
idivb
bound
cmc
mov
cltd
jp
sub
add
lds
inc
lcall
sub
xchg
jnp
fwait
adc
fcmovu
push
int3
lea
movb
sub
mov
hlt
mov
lea
fisubs
imul
pop
fmuls
mov
pop
inc
mov
sbb
xlat
daa
lock
call
stos
cli
shlb
mov
dec
leave
scas
into
in
dec
sarb
test
pop
add
add
dec
shll
jle
iret
jg
push
inc
pop
adc
sahf
mov
mov
xor
fldenv
sub
xchg
jmp
rcll
popf
push
push
ret
sbb
lods
push
fyl2xp1
mov
push
jnp
cmp
xlat
inc
or
in
out
add
pop
data16
ret
jns
scas
jge
jg
adc
xor
cltd
or
in
sub
popa
add
call
orl
xchg
xor
test
es
mov
mov
clc
inc
cs
inc
fdivl
pop
jge
cwtl
pop
outsb
add
orb
jl
push
ret
fidivs
outsl
pop
xchg
loopne
xchg
pop
ljmp
shl
cltd
inc
push
out
mov
inc
pop
imul
fimuls
mov
mov
arpl
bound
adcb
or
sbb
adc
dec
insb
adc
jnp
mov
pop
xchg
stos
cld
sub
mov
lret
jne
fdiv
popf
pusha
xchg
xchg
jecxz
cmp
je
jmp
subl
jnp
push
and
ret
push
das
xor
sbb
in
call
std
sbb
push
inc
int3
shl
xor
les
pusha
dec
in
mov
js
sahf
into
mov
inc
int3
inc
shrb
outsl
lods
ret
cmp
cmp
sti
jnp
fadds
adc
popf
test
pop
sub
adcb
shrb
add
xchg
xchg
stos
push
pop
dec
jnp
adc
lret
cmp
mov
cmp
call
jnp
push
sahf
fdivs
and
ds
add
lods
or
ret
jge
clc
xchg
mov
out
insl
and
jb
leave
jle
mov
out
push
mov
cli
xorb
dec
push
mov
call
jmp
call
add
movsb
sbb
faddl
in
sbb
shll
mov
jmp
mov
sarl
xor
sbb
xor
inc
into
test
jmp
repz
movsl
pop
cmpsl
dec
jns
rcll
mov
cmp
jno
cmp
jae
out
or
mov
pop
dec
arpl
push
mov
push
in
test
xchg
mov
fs
movsb
clc
inc
adc
add
in
addr16
sahf
cmc
pop
adc
mov
and
xor
xlat
imul
popf
loopne
pop
and
lea
mov
pop
sub
fbld
jge
mov
xor
mov
xor
mov
stos
mov
inc
mov
pop
andb
add
fs
aas
leave
add
sub
cmp
nop
mov
mov
es
or
xchg
out
or
pop
jg
pop
ds
lcall
mov
fildll
test
xchg
and
or
pop
mov
xlat
stos
aaa
lret
xchg
jae
jae
aad
or
push
int
lret
leave
sbb
dec
mov
jl
xchg
jecxz
popf
mov
fdiv
sahf
and
in
daa
adc
cld
add
pop
sbb
loop
test
hlt
daa
and
lock
and
dec
nop
sbb
or
out
mov
mov
or
dec
jmp
nop
sahf
xchg
xchg
test
cmpl
jns
cltd
dec
hlt
insb
xor
movsb
push
or
aas
xchg
pop
outsb
lock
or
lds
push
push
xchg
stos
cmp
mov
pop
xor
add
aad
add
sbb
fdivrs
push
jl
movsl
push
sub
lahf
sarb
add
test
jo
mov
mov
into
jae
ret
mov
scas
movl
xchg
jb
sub
pushf
xchg
mov
push
test
ret
lret
add
inc
js
xor
outsl
stc
test
aam
xchg
inc
inc
out
icebp
mov
sbb
xchg
xor
fisttps
das
imul
pop
sbb
test
sbbl
add
inc
jns
sbb
maskmovq
negl
fsubr
mov
insl
push
mov
mov
lret
std
push
mov
mov
mov
jl
mov
into
jle
inc
imul
sbb
jge
push
mov
test
adc
xor
cli
scas
call
into
sbbb
aad
adc
mov
loopne
js
jmp
stc
cmp
dec
test
inc
cs
addr16
pop
sbb
xchg
mov
sbb
test
push
stos
xor
inc
enter
aad
xchg
xchg
and
xchg
mov
pop
xchg
xchg
xchg
add
lcall
xchg
cmp
sbb
or
insb
cmp
sub
jl
xor
mov
call
xor
adc
out
mov
mov
repz
jle
sti
aad
pop
mov
cmpb
subl
out
xlat
mov
jae
add
clc
and
insb
or
into
xchg
sub
scas
lcall
stos
xor
fmul
ds
jne
dec
icebp
stos
jno
mov
sub
cmp
or
mov
dec
loopne
leave
mov
jmp
test
andl
cmp
add
fsubs
sub
outsl
inc
xor
dec
xchg
mov
popa
js
and
pop
into
jmp
push
mov
xchg
xchg
in
cld
add
shrb
ds
pop
add
mov
mov
pop
dec
mov
sbb
dec
inc
imul
pop
nop
lret
cmc
ljmp
sbb
sub
pushf
pop
mov
aas
xchg
pop
sbb
scas
jb
push
push
jo
cli
les
call
cmpsl
inc
aaa
sbb
cmp
pop
ja
sbb
adc
push
xor
and
jecxz
push
mov
aas
out
dec
mov
xchg
fdivl
add
cmpsl
or
pop
stc
jp
or
in
mull
fiadds
les
adc
xchg
xor
pop
in
leave
int3
pop
mov
mov
lds
mov
mov
aad
mov
inc
rol
cmp
sbb
imul
outsl
std
cmp
aam
orb
clc
adc
cld
push
sub
popf
mov
and
jbe
or
in
mov
sbb
outsb
mov
jo
mov
sti
cwtl
imul
push
jnp
daa
cmp
out
jmp
pop
xor
and
out
pop
add
lahf
in
mov
ljmp
psubsb
inc
stos
xor
repnz
sbb
or
pop
push
fcoms
movsb
pushl
cmp
jae
add
mov
in
sbb
je
cmp
sub
lret
das
mov
inc
bound
jbe
enter
xlat
iret
or
sbb
icebp
pop
adc
inc
jo
mov
and
and
adc
inc
test
push
pop
sub
addl
sub
and
xchg
inc
inc
mov
jg
int
bound
xchg
shll
repz
and
and
cmp
mov
imul
sbb
shll
iret
push
adc
jecxz
pop
lea
clc
lret
in
mov
loop
cmp
lahf
adc
orb
ror
in
adc
jecxz
push
outsb
ljmp
mov
jmp
push
cs
loop
mov
dec
addr16
mov
cwtl
jmp
jg
popa
insb
jns
seta
add
sbb
pushf
and
scas
testb
clc
in
fcompl
push
repz
sbb
lds
insl
jae
mov
aaa
mov
repnz
iret
aam
repz
add
js
je
xchg
xchg
leave
stos
pusha
int
outsb
sbb
repz
fmuls
icebp
in
fwait
js
push
push
xchg
cmpsl
or
sti
inc
xor
lret
das
mulb
in
cmp
and
into
or
jne
sub
popa
ficoms
inc
test
xor
cli
inc
xor
cmc
xor
es
cmp
dec
fists
push
mov
fcoms
gs
mov
and
jp
adc
sahf
shl
icebp
cmpsl
inc
arpl
mov
mov
push
cld
adc
inc
aam
cmpsl
mov
adc
and
addb
sbb
xchg
pusha
cmp
or
test
mov
loope
jmp
clc
sbb
andl
push
dec
or
xlat
adc
push
inc
es
leave
nop
test
jnp
mov
cmpsb
jecxz
dec
xor
nop
or
je
ret
movsb
push
in
popa
popl
mov
loop
jge
add
jno
push
mov
xlat
add
rorb
daa
loopne
cmp
jb
jno
add
outsb
cmpsl
out
in
and
xchg
pop
or
or
enter
cmp
popa
xor
push
dec
mov
lahf
lods
dec
push
loopne
mov
sub
stc
mov
jle
xchg
stos
push
pop
lods
divb
and
les
movsb
je
mov
mov
daa
pop
push
xchg
pop
fildl
mov
mov
inc
jo
mov
addb
aas
mull
and
mov
or
mov
sbbb
dec
lret
jg
mov
sbb
dec
popa
mov
sbb
xor
jns
push
outsl
cmp
push
or
mov
aaa
imul
imul
jle
je
add
cmc
sub
push
xchg
pop
gs
insl
push
xor
in
out
subl
and
cmpsb
jl
imul
cmpsl
add
mov
cli
sbb
dec
loop
cmpsb
sub
out
mov
or
mov
pop
push
add
sbb
insl
fidivl
sub
add
cmp
test
or
mov
mov
xchg
xchg
push
sub
mov
fsubl
ret
cmpsb
sarl
cltd
rclb
out
jo
sbb
ljmp
pushf
cmpsb
mov
lret
clc
xor
mov
or
aaa
ret
mov
int
or
jne
add
add
outsl
cwtl
pop
pop
lcall
push
imul
mov
adc
gs
inc
sbb
movsb
sub
mov
jmp
mov
push
sub
aaa
jecxz
push
sbb
sbb
jo
iret
push
pop
pop
mov
inc
inc
mov
leave
cli
adc
push
outsb
adc
jb
into
inc
push
adc
bound
xlat
pop
mov
int3
xchg
xlat
fisttpll
test
cmpsl
js
mov
cmpl
pop
psrlq
sub
xor
lea
rcrl
xchg
mov
adc
push
push
dec
std
icebp
rorb
sbb
push
sarb
fucom
sti
inc
xor
sub
and
pushf
push
add
xor
inc
rcll
or
daa
push
lahf
sub
mov
jbe
movsb
and
jl
hlt
fcom
lods
data16
push
jo
stc
xlat
icebp
test
cwtl
aaa
mov
fbld
loopne
subb
xchg
dec
xchg
xchg
lret
adc
int
aaa
or
pushf
xchg
push
mov
imul
sub
cmpsb
movsl
push
scas
dec
in
inc
shr
mov
jl
fsubr
aad
pop
aaa
or
push
xchg
test
mov
popf
and
shl
xchg
bound
iret
sarl
mov
adc
insb
mov
repz
lahf
mov
data16
mov
jbe
ret
dec
loop
jmp
cld
call
sub
or
mov
and
fldcw
idivl
arpl
cmp
mov
sub
mov
stc
hlt
push
or
jecxz
push
mov
loope
lahf
js
cli
push
fisubrs
and
sbb
sub
pop
pop
sbb
repnz
test
aas
dec
imul
loop
roll
and
inc
rorl
sub
cmp
mov
add
notl
and
dec
arpl
fwait
je
out
loopne
add
fiaddl
sub
push
xchg
push
pop
lock
xchg
fimull
adc
pop
push
insl
inc
mov
outsb
sbbl
and
ljmp
xchg
scas
cmp
pop
adc
movsb
int
mov
xor
enter
imul
pop
sbb
push
in
push
mov
int
jge
cmp
push
jns
popa
pop
mov
cmp
jecxz
xorl
cmp
or
dec
rcrl
notl
lcall
rorb
mov
lret
cmpsl
divl
es
subb
inc
shlb
test
cltd
mov
dec
jmp
and
rorl
mov
adc
pop
sub
dec
sub
repnz
push
mov
jp
inc
sub
lahf
cltd
and
sbb
lods
aam
adc
rorl
int
and
mov
mov
mov
ja
int
inc
mov
dec
scas
mov
jns
int
cltd
loope
cmc
cmc
subl
sbb
add
cmp
cmp
inc
push
mov
mov
inc
and
adc
out
mov
or
fwait
xchg
sub
clc
pop
lods
and
dec
xor
or
sub
test
or
in
fldcw
out
add
cmpsl
dec
push
cmp
ja
dec
mov
stos
lahf
inc
dec
jno
arpl
pop
cmp
and
movsb
push
lret
aad
hlt
bound
idivl
or
out
push
pop
fcomps
pop
sub
rolb
loopne
mov
pusha
cmc
sarb
loopne
jmp
jne
mov
and
sbb
pusha
inc
icebp
iret
jbe
inc
in
pop
inc
imul
aad
add
nop
push
dec
mov
lahf
movsl
xor
mov
cmp
je
sahf
mov
pop
push
or
sub
out
xchg
fistps
loope
xchg
push
mov
jb
leave
addl
pop
cmpsl
sub
out
pop
mov
or
out
jg
fsubrs
stos
mov
jl
xor
je
and
out
jecxz
pop
and
out
push
lea
movsb
push
jae
and
xlat
or
add
fsub
movsl
jno
stc
addl
add
xchg
out
dec
mov
call
sbb
jns
rcl
inc
or
stc
mov
orl
data16
jbe
dec
xchg
sbb
or
adc
jge
or
jne
stos
ficompl
xchg
pop
cmp
mov
adc
push
test
xorb
scas
add
loop
ret
shrl
adc
lret
inc
push
fidivl
ja
cli
punpcklbw
adc
pop
push
and
lcall
fistl
push
dec
cmc
mov
aaa
lahf
push
outsl
ret
pop
mov
and
and
push
enter
or
add
sbb
mov
cmp
add
repnz
xor
xor
adc
push
sub
ret
add
push
test
or
fs
mulb
mov
cltd
insl
inc
jle
movsl
paddsw
test
imul
jb
xchg
adc
mov
daa
pop
push
lea
xor
leave
push
push
add
adcb
ja
xor
push
dec
jnp
ljmp
call
repnz
pop
xor
repnz
dec
loopne
gs
iret
dec
cmpsb
inc
cmpsl
mov
enter
movsb
or
cmp
rcl
mov
fisubrs
add
add
mov
dec
xlat
xor
pusha
or
mov
add
xchg
adc
divl
les
lret
fbstp
cmp
sub
push
jl
jmp
lcall
je
loopne
cmp
mov
ds
push
stc
es
imul
sub
lret
daa
pop
stos
rorb
cli
test
adc
andl
or
sbb
add
dec
mov
mov
mov
movsb
pop
push
jmp
and
mov
sbb
inc
inc
mov
adc
cmc
mov
mov
clc
sbb
cwtl
mov
xor
shr
popf
or
mov
inc
xlat
xchg
in
and
mov
sbb
je
sub
mov
push
dec
lret
vphaddbw
inc
mov
pop
mov
and
or
sti
popf
or
jns
cmp
iret
cli
test
or
sub
in
mov
mov
and
ss
test
pop
xlat
testb
lods
movsb
jb
movsb
xchg
pop
pop
pop
ss
cmp
aaa
loopne,pt
push
sahf
jnp
sub
mov
mov
and
dec
lds
mov
in
test
in
sub
cvttps2pi
fbld
imul
ret
sbb
rorl
or
dec
dec
ret
push
loopne
mov
test
lret
inc
imul
outsb
mov
lret
push
roll
loop
jnp
cmp
dec
cmp
mov
dec
lea
clc
out
inc
mov
in
inc
jae
xor
jo
icebp
and
and
sub
js
dec
inc
sbb
sub
pop
pushf
pop
lret
mov
and
fwait
mov
push
mov
mov
rol
mov
mov
mov
pop
sbb
ucomiss
sbb
sbbb
repnz
fadds
insl
pop
cmp
mov
inc
and
sub
pop
sub
cmpsl
aaa
shll
in
lods
adc
stos
xchg
pop
adc
jecxz
dec
divl
fsubrs
lahf
xchg
movsb
ds
mov
in
push
inc
sahf
dec
or
or
and
adc
fldenv
ret
pop
bound
out
xchg
xor
pop
inc
and
out
stc
idiv
xchg
push
cmp
or
ret
dec
push
test
push
and
cs
rcll
and
out
pop
add
jb
dec
pop
jb
lods
mov
frstor
mov
xchg
leave
int3
adc
mov
push
mov
lret
sub
mov
jno
add
cmp
xchg
xor
jp
add
adc
push
dec
sbb
and
int
enter
mov
xchg
mov
rorb
sbb
jg
test
push
stos
pushf
test
lret
icebp
shll
xchg
add
test
sbb
aam
and
cmp
sbb
js
push
mov
iret
mov
mov
sbbb
adc
cmp
xchg
or
ret
add
pop
movsb
xchg
sti
lods
sti
sub
ljmp
cltd
nop
dec
outsl
js
sub
push
push
cmp
pop
enter
inc
push
lods
jle
push
pop
test
or
or
stc
fwait
jo
dec
jmp
shl
adc
ds
in
movsb
sbb
test
addr16
sbb
mov
jl
jmp
mov
hlt
add
add
jp
mov
sbb
sub
gs
cmpsb
xor
test
cmp
mov
imul
insl
jbe
xor
shll
dec
push
jmp
sub
imul
sub
inc
lahf
movsb
outsb
test
sbb
adc
rol
cmpsb
pop
sbb
movsb
inc
test
test
add
mov
inc
cmp
movl
mov
push
xchg
inc
adc
pop
mov
std
stos
jg
leave
popf
jb
repnz
dec
fldenv
xchg
mov
aad
push
in
jo
jno
and
pop
scas
inc
lcall
pop
jnp
fstpl
out
push
jmp
enter
fwait
mov
out
cmp
outsb
push
push
xor
mov
adc
xor
jl
jle
imul
push
inc
sub
test
xchg
fisttpll
xchg
push
sahf
imul
pop
push
lds
cltd
push
daa
xchg
push
outsl
dec
insl
jb
adc
repz
negb
or
pusha
or
sub
adc
sbb
push
mov
xor
pop
xchg
add
scas
shrb
test
sub
jmp
aaa
sub
jae
rol
out
lds
gs
fcomps
lret
cmp
shrb
out
lret
shll
sti
xchg
cli
dec
addr16
divb
jecxz
roll
aam
and
outsb
lods
outsb
in
cmp
data16
jp
pop
push
lods
jo
and
jmp
outsl
or
sub
adc
push
nop
xor
inc
repz
pop
sbb
and
leave
mov
insl
jp
dec
dec
insl
mov
sarb
pop
cmp
std
mov
aaa
pop
inc
sbb
out
lret
push
dec
mov
stc
inc
inc
xor
test
lods
xchg
jnp
mov
push
cmp
data16
adcl
xchg
jecxz
scas
stc
cmpsl
or
inc
inc
movsb
mov
lret
lahf
dec
pusha
add
inc
mov
pop
ss
xorb
cmpsb
mov
lds
push
sbb
cmpsl
mov
mov
imul
insl
jno
sbb
stos
in
icebp
mov
out
add
leave
add
mov
imul
lret
adc
cmp
or
scas
push
popa
mov
lock
orb
add
loop
test
fmull
call
into
push
push
and
imul
leave
and
lods
cmp
mov
fidivl
scas
xchg
movsl
push
push
mov
cwtl
mov
aaa
push
mov
scas
mov
idivl
cmpsb
in
dec
pop
ljmp
repnz
movl
leave
lds
or
fwait
imul
and
nop
sbb
add
pop
dec
lret
or
dec
cmp
aam
cmp
mov
loope
sbb
enter
stc
sub
repz
xchg
cmpsb
dec
adc
or
add
cmp
push
jns
jne
mov
lock
jecxz
insl
data16
add
pop
jbe
push
fwait
xchg
mov
jo
inc
data16
fwait
mov
imul
add
push
sub
add
loope
addr16
pop
push
je
jbe
jmp
pop
testb
adc
ja
and
out
neg
mov
adc
dec
pusha
mov
or
enter
xchg
icebp
in
and
or
ljmp
stos
jg
sub
jmp
scas
ficoml
mov
loope
cmpsl
insb
xchg
cmpsl
outsb
push
mov
fcomi
mov
push
jb
xor
das
into
push
fiaddl
test
iret
stos
jmp
mov
arpl
xchg
sti
dec
popa
xor
dec
add
cmp
sbb
xor
ffree
xchg
cmpsb
jbe
add
mov
push
jg
mov
ss
mov
icebp
jmp
outsb
mov
cmp
adc
dec
cmp
fs
iret
jg
fisubs
inc
or
pop
mov
out
outsb
stos
push
mov
icebp
cmpsb
insb
lret
mov
lfs
pop
arpl
into
add
mov
mov
sbb
push
xchg
ss
jns
pop
aam
push
cwtl
jnp
js
mov
bswap
xchg
gs
insb
rcrb
sbb
int3
ficompl
leave
into
xor
movsl
in
mov
sbb
lock
sbb
mov
test
xor
in
jae
jmp
mov
or
pop
cmp
lahf
mov
fwait
shrb
call
pop
int3
jecxz
add
push
mov
xchg
mov
pop
pop
rcrb
out
inc
sub
xor
test
mov
ja
lret
loope
scas
and
das
fldenv
iret
cld
xchg
lret
xor
lahf
sbb
mov
pop
adc
loop
xchg
insb
test
sub
lret
insl
xchg
cmp
adc
lret
adc
push
adc
std
xor
pop
add
outsl
jne
cwtl
mov
mov
or
shl
mov
dec
cmp
adc
xchg
push
jmp
cmp
and
out
sbb
scas
lret
and
outsb
jmp
or
ret
push
sub
mov
call
add
or
ja
mov
mov
dec
add
fisubs
mov
pop
in
push
out
jbe
scas
and
lret
cmpsl
adc
inc
jo
stos
add
sbb
rorl
jns
fdivs
or
or
or
mov
inc
cmpsl
scas
sub
out
sub
rorb
icebp
testl
inc
pop
rclb
lods
cmc
adc
xchg
aaa
mov
sub
sub
mov
sub
mov
push
lods
cmpsl
pmaxsw
dec
daa
pop
lcall
les
dec
in
adc
inc
push
or
mov
jbe
dec
cmp
movsb
pop
aaa
sbb
xor
xchg
mov
xor
xchg
or
aad
push
inc
mov
into
dec
ss
adcb
inc
mov
testl
cmp
aam
das
daa
dec
mov
dec
rcll
push
xchg
cwtl
stos
fsub
and
adc
jecxz
mov
aas
jb
ss
sbb
sub
aad
data16
mov
sbb
jae
testb
pop
scas
aam
arpl
dec
add
arpl
xlat
test
jne
pop
test
mov
inc
jp
mov
pop
call
xchg
cli
sbb
aad
mov
aad
ljmp
jge
mov
stc
mov
mov
jmp
sahf
out
sbb
jnp
int
add
mov
mov
cmpsl
adc
and
repnz
or
cmp
enter
inc
sarl
xchg
lock
xor
sub
pushf
add
sti
adc
cmp
test
adc
mov
add
bound
push
push
xor
sub
sub
je
inc
in
cs
icebp
inc
sub
ret
insb
add
nop
stos
pop
jmp
roll
cwtl
pop
call
daa
jmp
lahf
scas
cwtl
cmpsl
xchg
repnz
lcall
pusha
test
shlb
dec
repz
cmp
dec
or
pop
ss
adc
loopew
xor
jae
movsb
movsb
push
fistl
mov
rolb
pop
popa
mov
lahf
dec
divl
push
mov
fldl
cwtl
push
stc
mov
push
inc
loop
cmp
inc
cmp
add
sub
test
sbb
or
and
aas
cltd
flds
pushf
xlat
push
scas
mov
inc
inc
jp
jg
adc
sbb
sub
xchg
fsubrl
cmpl
sbb
xor
mov
addr16
cli
mov
xchg
outsb
mov
xchg
fwait
cmp
sbb
sbb
movsb
fdiv
mov
imul
test
or
imul
lods
ja
imull
xchg
test
pushl
mov
pop
sub
lds
xor
loope
pop
je
mov
scas
popa
mov
std
xlat
xorl
dec
imul
faddp
push
outsl
dec
add
int
aad
mov
or
xlat
dec
mov
or
mov
in
mov
and
cltd
pop
lea
pop
rclb
aaa
incl
inc
sub
fisttpll
sub
testb
lea
fcomps
push
sti
popf
orl
mov
ja
add
pop
push
sbb
fidivrl
mov
xorl
jmp
imul
daa
sarl
mov
adc
sti
aaa
adc
jb
shrl
insl
sbb
mov
notl
out
ds
or
mov
push
adc
mov
mov
test
mov
inc
mov
xchg
mov
test
and
mov
lods
popa
test
std
aas
aam
fwait
negb
inc
mov
and
mov
notl
into
enter
jecxz
mov
cmp
out
testb
pushf
pop
cltd
dec
push
call
cmp
sbb
popa
jnp
popf
ret
iret
int3
mov
repnz
fstpl
test
xchg
mov
sti
and
push
inc
jmp
add
and
mov
pop
fstpl
xchg
xor
fidivrl
dec
rol
push
outsl
add
cmp
les
inc
insl
ds
repnz
ret
and
push
rcr
lret
mov
sub
out
jnp
imul
movsl
idivb
jle
or
jle
push
vaddsd
sbb
roll
adc
sub
shll
lahf
jl
mov
push
mov
push
add
dec
mov
lret
lcall
lods
int3
inc
setbe
fsubp
jge
add
adc
or
cmp
shll
xchg
mov
icebp
cltd
and
push
fmul
cmpsl
cmc
ret
xlat
sbb
mov
push
movsl
sub
mov
pop
add
jmp
int3
je
add
ret
cmp
push
and
jno
push
mov
out
cmp
cmp
jmp
icebp
scas
mov
cmp
inc
xlat
ffreep
xor
in
jbe
xor
lcall
pop
out
mov
popf
sbb
enter
push
inc
add
dec
pop
test
call
xchg
mov
dec
sbb
stc
in
orl
int3
ret
aas
jge
lods
mov
lcall
pop
mov
fs
push
push
nop
addb
fstps
lahf
inc
cmp
dec
in
adc
ret
sub
subb
mov
sbb
das
shr
mov
xor
aas
push
aad
sahf
add
lds
pop
je
xor
sub
fstps
push
pop
arpl
hlt
daa
inc
imul
fwait
push
mov
cli
jbe
clc
out
dec
rcr
outsb
aad
fnstsw
mov
outsl
sarb
push
cmp
lret
xchg
popa
sbb
sbb
sub
adc
ljmp
loope
cmc
repnz
jmp
insl
mov
mov
ds
movsl
jb
dec
sub
ret
scas
int
pop
xor
add
dec
mov
out
xor
jbe
nop
xchg
sub
mov
mov
or
dec
or
and
aam
push
outsl
pop
movsb
jmp
mov
popf
pushf
daa
loopne
push
pop
addr16
xor
inc
and
and
out
inc
in
lods
fbld
adc
mov
ret
mov
and
inc
test
nop
pop
mov
dec
xor
pop
push
ret
inc
popa
xor
dec
aas
ja
mov
xor
inc
mov
pop
mov
dec
cwtl
cmp
push
lahf
sarl
add
push
mov
sbb
inc
pop
bound
add
mov
out
push
imul
cmc
imul
mov
or
xchg
lock
push
sti
fwait
mov
mov
sub
sbb
out
cld
jge
lods
repz
mov
mov
negb
ret
mov
loopne
js
ret
nop
ja
std
sti
in
jne
xor
ret
mov
sarb
neg
out
or
fiadds
lret
mov
mov
cli
sub
popa
mov
adc
pusha
out
cmp
add
fildl
mov
cmp
sub
fdecstp
xchg
imul
push
add
ja
dec
pop
test
pmulhuw
pushf
aas
aam
test
fldcw
out
cltd
lret
mov
xchg
mov
or
mov
in
sub
jecxz
sarl
and
adc
icebp
adcl
jp
mov
xor
ficoms
daa
push
addr16
and
clc
scas
out
pusha
xor
pop
jno
add
int3
or
and
into
jo
imul
dec
xor
int3
and
push
das
in
sub
mov
daa
dec
in
pop
in
sub
cmc
pusha
test
arpl
bound
xor
stc
sbbb
push
or
aam
repnz
divb
dec
add
fidivrl
or
pop
sti
jb
push
fwait
movsb
call
add
test
push
sbb
lock
mov
loop
jmp
addr16
dec
inc
pop
mov
add
and
in
inc
and
out
lea
jns
fcoms
xchg
pop
idivb
ss
mov
add
xchg
mov
dec
xor
jle
dec
xchg
ret
mov
lds
and
fldenv
add
push
ss
mov
jo
sub
lock
cmp
leave
mov
jns
sarb
in
mov
pop
inc
test
cmpsl
sbb
in
sub
push
xchg
popf
push
add
cltd
adc
fdivr
cmp
fwait
pop
sub
cmp
sub
mov
rcr
jb
popa
mov
push
repz
jecxz
sarl
mov
adc
push
jae
mov
rcll
cltd
fcomip
mov
push
dec
push
cmp
mov
adc
arpl
test
sub
jle
or
or
dec
cmp
and
scas
jmp
pcmpgtd
stos
inc
sbb
adc
daa
lahf
in
pop
call
scas
fdiv
push
add
mov
enter
ljmp
cmp
stc
int3
daa
lahf
pop
add
sub
jl
xchg
pushf
lock
outsb
gs
pop
loope
call
mov
sbb
pop
repz
pop
push
ja
jmp
inc
in
mov
sbb
lea
test
mov
sti
sbb
roll
lods
jb
sbb
stos
xchg
jecxz
orl
mov
daa
pop
mov
add
aam
jno
cmp
push
pop
pop
pop
ret
stc
push
mov
addr16
js
cmc
pop
ret
popf
mov
cwtl
fcmovnbe
jno
fldcw
inc
test
gs
decb
in
pop
pop
ret
sti
xchg
add
push
push
or
and
sub
out
filds
lahf
jne
adc
repz
js
xchg
test
cmpsb
mov
push
xchg
je
test
js
clc
and
sbb
icebp
shll
cmc
dec
lret
and
sbb
mov
and
pop
or
jno
push
jmp
sti
rolb
aam
lret
cmpsl
dec
and
pop
sbb
xchg
test
cmp
push
rcll
mov
dec
div
inc
jecxz
fistps
add
outsb
and
test
xorb
clc
adc
in
push
fsubs
pop
inc
ljmp
incl
ja
lret
and
cmpsb
cmp
jnp
inc
cs
dec
call
add
stos
inc
inc
push
xorl
daa
sub
outsb
mov
arpl
xchg
dec
test
cwtl
pop
mov
add
lds
mov
rorb
nop
push
inc
in
outsl
outsb
mov
lods
jnp
jle
ret
inc
cld
mov
imul
lahf
mov
cltd
mov
xor
adc
pop
add
lea
aas
xlat
lods
inc
insb
daa
mov
add
xchg
es
inc
inc
xor
xor
mov
dec
or
lahf
jbe
data16
lock
jmp
loopne
cmpsb
scas
adc
xchg
cmp
mov
sub
jg
pop
lret
icebp
sub
cmp
mov
jo
xor
insl
popa
sub
dec
pop
pop
mov
dec
notl
sbb
push
add
pusha
inc
pushf
out
and
sbb
sub
cmpsb
mov
push
jle
lods
filds
xor
jb
mov
dec
mov
lock
xchg
push
cs
xor
cmp
sbb
loop
jae
stc
jecxz
add
jle
and
dec
fs
cmp
aas
mov
insb
pop
cmp
xor
test
pop
pop
lret
mov
xor
insl
push
sub
pop
dec
push
jmp
push
cmpsl
loop
fadds
add
cmp
in
push
mov
mov
mov
jne
push
jecxz,pn
cmp
out
sbb
xchg
mov
enter
leave
fldcw
inc
cmpsl
push
push
pop
lcall
add
cmp
sub
daa
ss
loope
inc
mov
pop
push
test
push
out
pushf
mov
jl
xlat
adc
mov
xchg
fcompp
ret
scas
aad
ds
insb
lods
adc
and
and
pushf
fidivrs
cmpsb
call
inc
pop
daa
inc
mov
sub
jae
inc
icebp
or
sub
push
mov
mov
into
inc
lea
pop
das
lret
pop
inc
adc
dec
std
or
lret
insw
jp
frstor
xchg
push
scas
push
hlt
xchg
mov
jmp
mov
fldenv
push
mov
xchg
fsubs
lcall
lcall
negb
scas
hlt
les
push
hlt
cmpsb
xchg
scas
cmp
add
cmp
scas
sub
outsl
popl
inc
mov
pop
xchg
or
mov
sbb
out
icebp
dec
push
fdivp
fcoms
aaa
mov
xchg
or
push
sahf
jl
jbe
jne
movsl
adc
lahf
mov
sbb
stos
gs
xchg
lcall
bound
movsl
call
lods
push
lret
das
jae
fcomps
jo
dec
ss
pop
imulb
push
and
icebp
mov
mov
push
and
jb
jo
jl
icebp
sbb
sub
sbb
pop
repz
sub
xor
leave
fisttpll
xchg
test
lret
mov
repnz
cmp
xchg
in
stc
cmp
and
and
enter
adc
xchg
xchg
xchg
dec
out
xchg
xor
adc
pop
loop
lods
out
inc
int3
nop
adc
sub
int3
in
in
inc
jp
pop
or
mov
xchg
jg
dec
xor
add
mov
or
mov
les
hlt
hlt
adc
insl
lods
mov
pop
pop
pop
mov
push
xor
sbb
dec
sub
repz
sbb
packssdw
out
mov
call
inc
clc
pop
mov
add
lea
cmp
push
mov
pop
inc
loopne
jb
hlt
rcrl
ret
jmp
in
scas
movsl
lock
arpl
hlt
pop
shll
pop
jge
cmp
adc
xlat
outsl
cmp
leave
icebp
mov
inc
daa
aas
or
lods
aad
loopne
bnd
xor
fiaddl
sub
leave
scas
jns
cmpsb
mov
roll
jp
test
jno,pt
outsl
xchg
xlat
mov
in
inc
and
repnz
fisubs
adc
sahf
sbb
dec
mov
dec
sub
inc
pop
add
jns
popa
test
rcrb
test
in
pop
sbb
sbb
mov
test
sbb
xchg
push
dec
scas
and
xchg
fsubrl
add
sti
adc
cltd
jns
popa
cmp
insb
jl
push
mov
sub
pop
xlat
push
ja
or
mov
dec
fldenv
mov
outsb
addr16
xchg
lret
mov
and
cmp
xor
addb
xor
clc
push
faddl
sub
rcr
mov
xorl
test
pop
scas
outsl
fdivrs
dec
push
xor
enter
imul
test
or
lcall
adc
jp
push
dec
subl
mov
jg
clc
push
jbe
daa
xchg
or
ja
dec
ds
outsb
repnz
imul
jb
mov
xchg
out
push
adc
mov
out
mov
leave
sbb
gs
hlt
popf
xchg
sub
iret
decl
pop
mov
cltd
cmpsb
jl
and
negl
dec
mov
test
lods
add
mov
bound
outsb
scas
outsl
imul
bnd
pop
pop
sbb
popa
ficomps
sub
scas
out
repz
xchg
add
xchg
aaa
sbb
movsb
xchg
mov
rol
cmpsl
ja
mov
repnz
imull
sbb
mov
or
jg
addb
sti
in
adc
les
push
pop
jne
outsb
ja
add
push
fsubs
or
aam
mov
xlat
mov
cli
pop
add
xor
xchg
sbb
push
add
and
jecxz
pop
and
adc
xchg
shrb
xchg
mov
dec
xor
mov
scas
jae
sbb
subb
out
xchg
push
mov
lock
ljmp
mov
rcr
lahf
sub
inc
ret
pop
inc
cmp
scas
out
dec
loope
mov
xor
stc
push
clc
pop
jnp
add
in
lea
test
scas
jp
iret
dec
bound
push
arpl
mov
lahf
sub
mov
dec
fistpl
sbb
dec
cld
sbb
adc
test
out
mov
nop
push
rorb
dec
jp
push
fldenv
sbb
mov
jge
rcrb
pop
add
xchg
test
inc
data16
test
std
xchg
sub
lret
push
das
xchg
mov
es
mov
push
int3
sub
scas
mov
mov
sub
cmp
jo
push
lds
test
dec
dec
mov
das
mov
outsb
xchg
cmc
ss
mov
or
sub
inc
aas
cmp
imul
push
sbb
mov
jmp
rcrl
out
adc
adcl
xchg
or
mov
push
sbb
sub
pop
sub
pop
roll
lods
push
cmpb
pop
clc
and
rcll
add
popf
sti
fistpll
jbe
dec
push
sbb
xor
aas
pop
ret
cli
or
sbb
int3
mov
movsl
mov
test
push
jg
testl
jnp
push
std
xor
nop
outsl
jmp
inc
mov
outsl
dec
in
in
adc
add
or
jecxz
pop
mov
mov
xchg
push
jle
sbb
add
dec
hlt
mov
jo
dec
xor
mov
cmp
aad
or
test
dec
jle
les
xchg
in
fldenv
inc
jb
aam
jl
int
sbb
out
fidivs
sub
cs
fcoms
mov
daa
pop
lret
in
fwait
push
inc
add
lret
push
gs
cmp
push
ljmp
jne
adc
mov
cmp
incb
call
je
sbb
loop
inc
jmp
ds
arpl
decl
enter
pop
out
mov
clc
jno
subl
and
mov
popa
out
jmp
lock
or
cltd
lret
or
mov
idivl
mov
xchg
pop
adc
and
push
inc
mov
and
aam
xor
iret
jmp
cmp
pusha
add
xchg
pop
mov
cmpsb
addb
aaa
mov
mov
pop
das
icebp
jg
shll
fadd
sbb
push
and
xor
pusha
xor
push
fcoms
cmpsb
les
outsl
into
xor
mov
out
arpl
mov
sub
push
xchg
dec
popf
rorb
sbb
loopne
lret
in
nop
jno
xor
mov
cmc
jno
cltd
fs
lds
adc
das
sbb
repz
std
xorb
repnz
and
in
loopne
leave
xchg
cmp
rcrb
dec
movsb
adc
cmpsl
iret
and
fs
loope
arpl
outsb
push
ja
mov
push
xchg
mov
xchg
in
cmp
cmp
hlt
or
stc
cmp
enter
cli
add
xchg
lahf
mov
mov
je
lds
je
cmpsl
iret
jo
cmpsb
mov
jp
cli
pop
enter
mov
sbb
ret
leave
idivl
loopne
mov
pop
test
loop
jl
int
sbb
dec
outsb
inc
xchg
das
shll
jbe
lods
push
xchg
scas
adc
inc
adcl
xchg
and
adc
mov
adc
or
and
push
and
loop
cmp
ds
sub
rcr
arpl
push
sbb
inc
sahf
imul
lods
outsl
push
insb
cmp
mov
lock
pop
mull
mov
sub
in
pop
xchg
shlb
imul
push
jb
jne
lahf
fsubrl
icebp
ret
or
test
outsl
sub
and
cmp
xor
add
stc
mov
xchg
mov
stos
leave
ret
cmc
add
sbb
cmp
xor
dec
mov
pop
fistps
scas
push
inc
jno
lcall
mov
insl
test
addr16
sub
gs
scas
ds
and
jp
pop
rcl
mov
rclb
inc
or
xchg
iret
ss
shrl
cmc
js
loopne
mov
mov
cltd
adc
jno
gs
data16
bound
mov
push
ja
out
cmc
jo
das
in
aaa
out
jnp
or
pop
xchg
cld
fildll
rcrl
int3
adc
push
sub
inc
xchg
dec
jle
sub
fildl
adc
aam
test
fisubs
xchg
or
pop
cmp
jo
jle
inc
div
loope
pop
daa
or
adc
pop
xor
cs
mov
and
movsb
mov
nop
test
xchg
sarb
daa
jmp
mov
loopne
fs
xchg
dec
push
sbb
jg
cmp
jnp
scas
icebp
adc
bound
call
arpl
fwait
dec
pushf
loop
not
mov
mov
inc
shll
or
jnp
gs
fs
adc
sub
pop
mov
jnp
and
cltd
cmp
mov
sub
insl
pop
xchg
out
stos
sub
mov
ds
xor
fdivr
push
and
decb
stc
test
mov
scas
mov
xor
xor
into
cld
xor
pop
push
aad
pop
lods
iret
mov
xsave
jb
and
int
inc
mov
roll
cmc
sti
in
sbbb
pop
pop
xchg
incl
pop
sahf
jmp
je
shlb
lods
test
jo
out
aaa
cwtl
add
push
out
mov
adc
fadds
cmp
mov
aaa
xchg
xchg
movsb
and
jb
xchg
adc
pop
mov
xchg
xor
in
fbstp
push
fdiv
add
cmp
pushf
push
popf
lods
fistl
push
sub
addr16
jecxz
inc
mov
jae
inc
andb
mov
jnp
push
adc
pop
daa
sub
cs
lods
and
jle
mov
inc
pop
mov
jl
mov
cmp
mov
cld
pop
inc
repz
adc
jp
ds
cwtl
lret
neg
push
sub
push
leave
jp
bound
inc
movsl
hlt
aas
pop
ds
cmp
add
popf
lcall
fcoms
clc
cwtl
sarl
jmp
lea
movsl
and
bound
clc
sahf
mov
mov
mov
out
cmp
outsl
lods
call
pop
pusha
sbb
paddq
cli
scas
cli
mov
std
fldenv
out
push
sbb
push
push
cmp
add
or
and
add
xor
pop
add
insb
out
aam
je
add
cmpsl
int3
loop
inc
outsb
adc
jne
pop
add
jbe
or
mov
cmp
lea
sbb
jo
add
shll
les
xor
lea
add
jo
sub
lret
fidivs
sub
xor
cmovno
push
dec
inc
popa
stos
adc
mov
cmc
jp
mov
dec
mull
push
inc
inc
movsb
lods
sbb
into
jecxz
fisubrs
call
lds
ja
mov
mov
adc
push
inc
add
dec
jecxz,pt
mov
cmp
adc
in
inc
pop
cmovge
je
testl
fsubrp
or
mov
addr16
sub
jne
inc
cld
sub
notb
lcall
fistps
adc
mov
sub
ss
inc
movsl
adc
jp
dec
mov
pop
std
mov
fistl
hlt
ret
test
or
xchg
and
and
outsb
fisttpll
push
pop
inc
fimull
sub
pop
loop
bound
xchg
pop
dec
mov
es
mov
xchg
frstor
psubusw
cwtl
jnp
scas
addr16
xlat
ja
aaa
mov
ret
mov
stos
in
cli
fidivrs
js
pop
lahf
mov
scas
jmp
loope
test
rep
and
fidivs
xor
xchg
orb
jnp
mov
and
xchg
push
xor
pop
and
pop
push
mov
or
sub
out
mov
mov
fadds
mov
cmc
push
stos
out
aas
jle
scas
ja
shrl
mov
add
add
xchg
push
jb
int
call
jg
in
pushf
jns
stos
mov
adc
movsl
xchg
arpl
popf
test
ljmp
xchg
shr
sbb
push
push
inc
jnp
or
xor
out
or
scas
xchg
sbb
fisttpl
mov
mov
out
adc
repz
adc
aam
jl
adc
repz
pop
add
clc
pop
mov
push
or
and
add
cmp
inc
push
pop
out
or
inc
pop
je
pop
popf
jp
xchg
push
popa
into
je
xchg
popa
int3
push
ja
push
cmp
push
loope
and
inc
frstor
dec
add
and
or
std
inc
jne
pop
pop
jae
das
out
pushw
xchg
or
fwait
adc
sub
pop
popf
jmp
push
dec
out
pushf
imul
dec
cmpsl
mov
and
mov
xor
pop
pop
cmp
js
insb
jb
mov
and
mov
adc
jge
and
cmp
cs
adc
sti
lcall
les
ljmp
mov
imul
mov
cwtl
xchg
arpl
mov
cld
sarb
cmp
sub
repz
xor
orb
mov
push
xor
mov
cmp
sbb
and
mov
dec
rcrb
insl
sub
cld
testb
mov
sub
mov
mov
mov
xchg
daa
cli
leave
adc
cmpb
pop
orl
xor
int
sub
fadds
inc
das
clc
mov
mov
pop
xchg
int
jge
cwtl
loope
mov
dec
lods
movsl
sbb
pop
jne
cltd
je
popa
in
rcrb
xchg
adc
push
jge
xchg
insl
lcall
push
dec
stc
sbb
fdivrp
push
pop
ja
sti
arpl
or
mov
stc
sub
dec
pand
add
cmp
inc
lea
fimull
lods
inc
popa
movl
xchg
add
mov
dec
inc
or
aad
adc
gs
or
cli
sbb
sbb
mov
pop
jp
adc
daa
xchg
popf
movsb
push
push
mov
sbb
adc
cli
divb
mov
scas
iret
pushf
pop
xor
scas
mov
sbbl
loop
sbb
mov
ffree
in
fstps
fldt
and
mov
int3
mov
dec
cmpsb
and
xlat
sbb
addr16
and
sahf
jno
and
xchg
sub
pop
cmp
js
int3
imul
push
sub
incb
in
test
lcall
xchg
xor
push
lret
outsb
cmp
lock
aam
sub
ss
jge
sti
push
inc
repnz
push
xchg
cltd
jmp
pop
pushf
xchg
stos
and
scas
es
cmc
pop
subb
loope
xchg
sbb
cmpsl
mov
push
dec
ret
test
xchg
inc
dec
rcrb
cmpsl
pop
push
push
pop
scas
pop
stos
mov
negb
js
inc
push
push
adc
and
xchg
jecxz
ds
add
addr16
xchg
hlt
xchg
cmp
cmp
nop
in
mov
pop
mov
inc
jo
hlt
repz
xchg
f2xm1
mov
xor
mov
dec
adc
push
jbe
rcrl
shll
and
ret
mov
insb
mov
add
in
pop
cmp
jb
orps
sti
dec
dec
lcall
jo
sub
push
pop
jae
sti
jecxz
pushf
cmp
sbb
adc
fcmovbe
dec
and
push
xchg
add
sahf
xor
jb
or
clc
xchg
decb
or
pop
sub
jl
enter
xchg
cmpsl
repnz
fiadds
push
pop
dec
aas
pop
gs
pop
push
cwtl
ljmp
aaa
jae
hlt
adc
icebp
add
fidivrs
jge
adc
jg
pusha
dec
or
cltd
imul
and
sbb
pusha
mov
and
call
pop
mov
pop
jae
pop
fcmovb
mov
mov
jb
je
sbb
pusha
inc
xorl
nop
imul
dec
xchg
loope
dec
xchg
mov
or
adc
test
push
push
mov
sub
icebp
mov
stos
shlb
mov
fisttpll
mov
int
pop
jnp
jae
shlb
pop
add
int3
mov
leave
lds
mov
lds
mov
xor
pop
or
xor
or
sarl
andb
orb
mov
lods
enter
repz
popf
cmp
push
mov
icebp
insb
stc
jmp
arpl
or
mov
mov
mov
fcmovne
pop
test
push
jecxz
fs
fnstenv
scas
dec
scas
inc
jle
mov
adc
lods
sbb
loop
add
sbb
scas
inc
pop
mov
lahf
mov
inc
push
mov
in
add
xor
shl
jl
lcall
es
or
and
nop
jle
sbb
dec
les
mov
sbb
mov
rcrb
xchg
jnp
out
pop
mov
pop
mov
out
fsubrs
jle
add
test
clc
xor
movsl
shll
inc
mov
popa
sbb
pop
aam
jecxz
jnp
pop
fmuls
test
cs
xor
in
aam
push
in
mov
cmp
mov
push
hlt
push
ljmp
rcr
sbb
dec
xchg
or
pop
mov
stos
stc
xchg
lret
ja
enter
dec
cld
dec
add
dec
inc
fimull
mov
and
lcall
ret
js
adc
lret
pop
pop
or
outsl
ljmp
shr
sbb
cmpsb
xor
outsb
loopne
jb
cmp
mov
adc
out
int
xor
shrb
or
or
jo
scas
pop
sti
ret
popf
lea
dec
inc
push
jmp
test
dec
lret
push
add
jmp
push
in
es
bnd
scas
clc
or
push
arpl
jne
test
sbb
dec
ja
lret
add
adc
push
das
xchg
icebp
cli
fstpl
push
jbe
ljmp
in
aam
nop
sub
outsl
insb
fsub
or
testb
imul
js
out
ret
jne
ja
cmp
adc
fs
daa
mov
arpl
xchg
outsb
ret
test
xchg
mov
rcrb
mov
mov
nop
fnstenv
mov
add
mov
push
lods
data16
cli
scas
ficomps
push
add
jns
mov
xchg
movsb
xchg
pop
stos
mov
pop
sbb
out
xchg
movsl
bound
push
pop
in
cmpsb
lods
sbb
add
push
cmp
pop
sbb
lcall
mov
push
lcall
jbe
cmpsl
stos
ror
filds
scas
dec
sarb
sbb
push
loop
fists
out
into
pop
cmp
xor
cmpsb
adc
or
or
sbb
cli
lahf
xchg
jg
mov
inc
push
xor
ds
lods
mov
cmp
js
and
sbb
sbb
and
adc
subb
mov
mov
sbb
dec
loope
jns
push
lock
mov
lock
mov
cmpsb
sub
js
pop
lods
sarb
lret
cmpsb
shl
or
in
ret
xchg
ljmp
mov
push
pop
pop
aam
xorps
outsl
sbb
xor
adc
push
outsl
stos
push
sub
push
mov
xor
push
cltd
jns
jle
add
sbb
add
cmpsb
movsb
xor
loope
xor
arpl
mov
dec
mov
add
loopne
jbe
mov
inc
mov
pop
push
ljmp
lock
push
cmpl
add
xchg
push
mov
shl
pmaxsw
fstpt
in
pop
imul
mov
pop
xchg
xchg
add
adc
and
stos
or
enter
sub
sbbl
arpl
sbb
inc
mov
push
test
ret
aad
mov
in
arpl
repz
push
lock
mov
pushf
cmp
cmp
lods
push
mov
mov
out
aaa
xor
jnp
ljmp
pusha
test
jle
push
fucomip
sbb
xchg
xor
mov
sub
add
mov
pushf
jmp
or
dec
jecxz
mov
mov
int
jecxz,pn
and
mov
jmp
test
add
repnz
jmp
jmp
adc
mov
sbb
sbb
cmp
sti
adc
je
and
stos
or
sbbb
out
shlb
movsl
xor
cmpsl
push
es
mov
gs
inc
loop
aam
and
mov
rcrb
xor
in
jno
mov
or
shll
loope
cmpl
push
sbbb
les
or
or
add
add
icebp
ja
mov
mov
lcall
xor
lods
adc
mov
ror
test
inc
inc
or
mov
push
nop
sbb
mov
inc
in
inc
call
dec
fldt
movsl
add
add
pop
jl
mov
inc
bound
inc
and
mov
fsubrs
sub
cmp
fwait
lea
out
mov
or
jg
xchg
outsb
insb
rcl
aad
pop
push
cmp
xchg
pop
jne
inc
sbb
lahf
shll
outsb
cli
jb
pop
adc
mov
cmc
outsb
pushf
jecxz
and
arpl
loope
pop
push
in
sub
test
repnz
fisubs
sbbb
ljmp
push
cmpsl
testl
popf
pop
or
sahf
dec
hlt
in
push
mov
mov
dec
pushf
aad
dec
outsb
jge
fs
lret
inc
ja
jae
mov
lds
jmp
rclb
mov
rorl
add
dec
push
jae
adcl
loopne
dec
sub
mov
push
fcmove
xchg
outsl
xchg
adc
or
push
xchg
pop
pop
idivl
movsl
ret
mov
pop
fidivl
and
push
pop
shll
cmpb
mov
daa
pop
stos
sub
iret
adc
cmpsl
mov
enter
xor
test
jge
call
mov
jp
mov
mov
ret
cmp
lods
inc
addb
les
cmp
xorb
cli
push
lahf
loopne
add
cs
push
mov
pop
and
call
or
inc
int
cmc
jbe
inc
pop
or
pop
fsubrl
sub
mov
adc
cld
or
xchg
lock
ljmp
push
aad
xchg
loop
int3
lret
test
and
testb
jae
sti
jg
aaa
cmp
pop
adc
xchg
cltd
jnp
movsb
cltd
test
add
jno
push
pusha
adc
pop
bound
fidivrl
dec
lcall
add
arpl
push
shrl
and
pushf
jbe
test
cmp
lahf
cs
in
dec
stc
aam
adc
mov
xlat
fldt
jl
int
popl
jmp
dec
popa
mov
addr16
jns
xlat
xchg
inc
push
cmp
push
or
xchg
into
xchg
leave
nop
xchg
es
sub
sub
gs
nopl
insl
sahf
enter
fdiv
cmc
pop
lret
mov
mov
lahf
dec
pop
push
mov
and
cmpsb
adc
sbb
pop
dec
mov
xlat
add
mov
cwtl
dec
cmc
bound
adc
push
lahf
xchg
ljmp
inc
inc
mov
scas
ja
imul
mov
movsl
fwait
mov
ds
lahf
and
jb
movsb
in
fistps
pop
cmpsb
push
jbe
pop
jae
sub
js
xchg
jge
aaa
cmp
int
std
out
dec
jae
ret
fadd
pusha
mov
mov
iret
rcl
in
or
pushf
jno
outsl
sbb
push
inc
scas
and
inc
test
int
lea
sub
leave
arpl
loopne
jbe
mov
fwait
mov
xor
push
xchg
push
jg
aad
sbb
ficoms
cmp
adc
pop
or
mov
fwait
outsb
dec
cmp
dec
and
jo
xor
fsubrs
stos
nop
divb
inc
lods
sbb
push
xchg
sahf
daa
fs
sub
lods
jge
add
xor
xchg
leave
push
pop
mov
pusha
jle
psubd
clc
dec
fnstenv
add
lret
push
inc
cmp
cmc
mov
sbb
pop
mov
fwait
testl
in
cld
pop
cwtl
ja
push
pop
nop
inc
inc
add
cmpsb
repz
leave
push
pop
movsl
or
test
mov
insb
cmp
sbb
or
roll
adc
mov
or
mov
les
xor
dec
sub
out
lods
xchg
or
loopne
cmp
xlat
andl
call
xor
mov
lea
and
fmul
dec
shl
arpl
xchg
ror
stos
enter
ficomps
jno
xchg
or
mov
dec
pusha
into
loop
addr16
imul
dec
daa
dec
push
xchg
hlt
or
hlt
shrb
test
lret
push
push
and
hlt
ficompl
jl
xchg
inc
adc
add
movsl
jge
daa
push
stos
jae
dec
add
xchg
in
imul
or
cmp
adc
cli
adc
add
dec
sahf
dec
jmp
bound
xchg
pop
mov
ret
inc
dec
mov
and
scas
enter
icebp
shlb
repnz
pop
cs
std
jg
and
imulb
cmp
jne
hlt
div
bound
repz
jp
mov
dec
jne
jg
pop
xor
jo
cltd
or
pop
inc
aad
mov
hlt
lret
jns
dec
movsb
xor
lods
mov
scas
shlb
or
and
adc
pop
push
or
leave
or
scas
xor
cmp
orb
cmp
xchg
out
jne
popa
out
pop
lds
int
mov
push
inc
and
xchg
xchg
mov
mov
cmp
mov
cmp
into
xchg
fisubrs
jle
sub
fcomps
inc
adc
add
sbb
setle
sbb
clc
ret
jp
popa
icebp
pushf
sub
ljmp
adc
jl
popf
xchg
addr16
and
push
pop
adc
popf
out
lock
loopne
lods
xor
cwtl
sti
pop
lret
in
push
jbe
movsl
mov
out
xchg
mov
cld
sub
pop
and
xchg
jns
int
inc
pusha
sbb
push
aas
aaa
rcll
adc
dec
movsb
cmp
clc
pop
add
xor
mov
inc
sbb
daa
arpl
aas
test
cltd
or
lcall
fisttps
out
add
fstl
jmp
jb
aaa
bound
sub
jns
inc
movsb
push
sub
enter
loopne
dec
add
jns
xor
fucomi
jns
enter
ret
sbb
mov
add
mov
fdivs
in
addr16
mov
mov
mov
xrelease
push
push
daa
andb
jge
cmpb
mov
fwait
jg
xor
jmp
fcompl
aas
push
mov
in
cmp
dec
push
ret
adc
pop
mov
lea
movsb
dec
dec
pop
lds
in
insl
pop
fs
pop
faddl
mov
in
mov
mov
lods
gs
jmp
clc
push
or
ret
jmp
cmp
add
sarb
sti
roll
mov
aad
mov
dec
mov
lret
in
aas
jae
jmp
mov
jns
in
xor
cmp
cmp
push
inc
or
popa
mov
cs
clc
jo
xor
xchg
mov
fmulp
dec
or
cli
and
jnp
insl
mov
dec
ja
loop
shr
sub
mov
lcall
xor
cmp
push
loop
scas
mov
in
or
sub
pushf
fimuls
lods
mov
sbb
sbb
addl
in
mov
add
inc
mov
call
dec
add
pop
stc
cmp
scas
insb
xchg
sbb
outsb
xor
repnz
and
into
stc
insl
es
lahf
sub
xor
test
in
inc
stos
mov
mov
push
push
jbe
lds
jp
cmc
mov
test
fsubrl
out
dec
dec
mov
adc
sar
mov
lods
dec
or
repnz
jp
cmpl
cmp
sbb
push
nop
into
or
sahf
pop
insb
stos
or
roll
or
mov
insb
mov
push
inc
lahf
scas
adc
idiv
mov
testl
jg
jns
rcr
mov
or
scas
push
or
lock
dec
imul
nop
inc
jg
fmull
push
call
jge
pushf
pop
mov
or
dec
pop
hlt
into
mov
and
jo
xchg
popf
fs
icebp
test
sarl
and
xor
sub
or
add
sub
mov
mov
daa
movsl
mov
xchg
aam
cmp
pop
lahf
out
dec
test
jns
pop
push
movsb
cmp
sti
stc
xor
mov
mov
ds
push
into
outsb
adc
dec
lret
or
cli
xchg
push
xlat
bound
stos
mov
int
testb
jbe
sbb
imul
cltd
pop
mov
call
lock
bnd
pop
jl
pushf
sub
pusha
iret
mov
and
xor
pop
ja
clc
scas
and
xor
sahf
out
dec
sub
ret
inc
call
jle
sbb
cli
jmp
jb
mov
pusha
mov
and
mov
push
adc
cmp
test
mov
incl
bound
lret
or
repz
in
add
cmp
jns
mov
inc
cmpb
dec
add
or
jo
xchg
adc
imul
cmp
fnstenv
movl
sbb
jge
hlt
xor
imul
mov
sbb
mov
ror
dec
pop
jge
shlb
push
cmp
out
mov
icebp
adc
js
fiadds
or
jae
mov
pop
lods
dec
mov
xchg
outsb
jnp
xchg
cli
pop
pop
addr16
incl
push
xorl
lock
shl
dec
bound
jl
or
pop
cmp
sbb
push
test
lcall
jb
lock
out
push
ficomps
adc
pop
out
push
pop
and
je
push
sbb
xor
or
mov
les
mov
pop
decb
sub
and
mov
bound
loop
mov
mov
fwait
in
fucomi
ret
pushf
jg
xlat
jo
cmp
sub
mov
jle
fwait
inc
scas
cmp
pop
xchg
adc
adc
jge
lods
movsl
subl
outsl
pusha
xlat
setle
dec
xor
lcall
add
lock
repnz
dec
loop,pt
mov
inc
mov
shrl
pop
cltd
scas
loop
ss
pop
cmc
pop
sub
mov
sub
adc
movsl
xor
out
adc
mov
aaa
jo
movl
dec
cmp
out
iret
push
fstpl
xchg
ror
es
aam
or
out
shlb
jb
cmpl
push
pop
push
sarl
out
shlb
sbb
mov
xchg
aad
jl
xchg
jb
mov
bound
cmpsl
cmpsl
test
loopne
rcrb
out
test
push
jne
jge
cmp
sub
adc
xchg
mov
jp
insl
xchg
sub
fwait
mov
dec
or
in
push
ds
dec
popa
sarl
push
cli
mov
call
vzeroall
mov
push
sub
pop
jg
daa
mov
cs
sar
mov
cmpsb
cli
aas
jne
test
cmp
xor
jbe
sub
or
les
push
pop
or
pusha
xor
adc
sbb
pop
add
push
mov
dec
sub
lock
cmp
mov
push
cmp
jle
ds
sub
dec
sbbl
push
push
dec
loopne
nop
filds
stc
arpl
jo
lods
mov
hlt
cld
dec
out
pop
rolb
push
push
repnz
jle
int
sub
nop
movsb
mov
inc
aam
nop
sub
cmp
nop
popa
inc
dec
fstpt
xor
mull
xor
jmp
inc
les
lods
dec
das
pop
bound
mov
fdivrs
fcoml
bound
shrl
and
jne
ficompl
and
mov
dec
jnp
in
stos
in
aam
jo
dec
das
jns
inc
cmp
inc
das
test
push
loop
fdivrl
jne
test
cmp
mov
sbb
inc
test
cmp
imul
ljmp
inc
int3
in
loop
cmp
mov
mov
fiaddl
inc
xchg
or
pop
sub
roll
imul
dec
cmp
mov
mov
inc
loopne
sbb
cmp
xchg
icebp
mov
inc
mov
mov
das
icebp
push
test
sub
jnp
ret
pop
into
and
dec
imulb
dec
cli
mov
or
cmpb
insl
mov
sub
dec
enter
sbb
sti
push
pushf
fstps
std
sbb
shll
loopne
cld
mov
inc
cmp
dec
shr
cmp
xchg
xor
pop
jge
cwtl
ret
in
stc
fiaddl
shll
xchg
imul
aam
jle
mov
push
lahf
mov
xchg
and
stc
inc
stc
sbb
xor
das
stos
push
jne
jecxz
jp
dec
pusha
rcrb
enter
ret
popa
sbb
jmp
ss
fadds
inc
adc
lret
fwait
bound
ss
flds
test
add
jecxz
xchg
pushf
clc
push
pop
lahf
je
pop
xchg
mov
add
sti
push
jo
sub
xlat
adc
cmp
or
imulb
popf
push
loopne
sub
icebp
cmp
xchg
add
nop
outsl
test
ret
sub
xchg
push
xor
push
cld
pop
aad
in
jbe
rol
js
pusha
fwait
adc
dec
xchg
xchg
sbb
fisubs
mov
repnz
xchg
incl
jle
and
daa
repz
fildl
mov
pop
pop
notl
push
lret
xchg
mov
pop
aas
jmp
fstl
loope
pop
and
sbb
xor
mov
mov
loope
lret
in
dec
mov
push
sub
push
mov
int3
das
scas
jl
jae
adc
rcrl
sbb
pop
jae
cmp
mov
sub
dec
add
arpl
mov
imul
mov
xchg
mov
rcrb
test
fnstcw
xchg
mulb
dec
push
ds
ror
out
add
sub
call
add
mov
jae
jle
roll
sbb
mov
cmpsb
and
cs
sarl
pop
adc
push
movsl
add
stos
adc
mov
out
or
fs
fistps
push
sarl
cli
sbb
mov
ds
lret
cmp
sub
rclb
and
or
scas
push
into
les
rcll
ss
sbb
bound
adc
aad
shrb
jl
jp
addl
stos
dec
les
sbb
and
ljmp
cmpsb
push
int
ret
adcb
rcl
dec
sbb
cmpsl
sahf
jae
add
jp
outsl
jae
iret
pop
mov
jns
lret
cltd
aaa
xchg
push
bound
push
std
into
imul
pop
movups
jg
test
push
cmpsb
sub
adc
push
dec
popf
add
sbb
das
out
shrl
inc
imul
bound
push
hlt
mov
scas
into
sub
sbb
inc
pushl
popa
lea
int
add
repz
mov
push
aad
sysret
add
das
pushl
push
pop
dec
mov
daa
jbe
jge
daa
enter
add
xchg
dec
jno
outsl
pop
ds
lret
and
and
fcomip
mov
push
lds
out
addr16
ret
sbb
sarl
xor
fwait
pop
ret
cs
loop
sbb
int3
mov
push
mov
lret
stos
sub
enter
popa
sub
cmpb
push
push
imul
xchg
xchg
jo
in
call
fwait
jg
stos
mov
xor
repnz
sbb
xchg
adc
icebp
xchg
mov
sbb
pop
xor
pop
inc
mov
pop
bound
cmp
rcll
in
cli
sub
aad
int
jno
fmul
bound
push
fisttpl
mov
jge
jg
push
gs
mov
fwait
xchg
lods
mov
dec
leave
push
mov
enter
adc
out
ds
in
stos
or
and
mov
fnstsw
sbb
je
and
stc
lcall
push
ljmp
insb
mov
pushl
mov
jecxz
loope
sub
mov
movsl
mov
cmp
sub
les
cmp
mov
inc
ds
mov
xchg
adc
push
test
inc
arpl
push
sbb
icebp
mov
ja
cmp
mov
xchg
xchg
add
movsb
popl
nop
ficoml
jmp
add
mov
cmp
faddl
cltd
out
rorl
push
cmp
xor
push
sub
fadd
cmp
jl
xor
mov
outsb
cmpsl
jmp
add
cmpsl
repz
or
sub
rorb
lea
ja
out
in
pop
in
fcompl
pop
int
sub
and
add
sbb
mov
jb
or
aam
and
mov
repz
jp
scas
sbb
clc
aam
mov
xchg
scas
or
int
mov
xchg
into
fs
mov
lods
dec
cmp
int
movsb
mov
add
testl
inc
jbe
adc
push
cmovae
loope
cmp
clc
je
push
dec
xchg
mov
push
jle
data16
dec
jecxz
out
clc
or
in
jb
test
add
mov
sti
insl
sbb
sbbb
sub
xor
sbb
loope
push
pop
push
and
push
loop
xchg
hlt
dec
xchg
mov
pop
xchg
or
xchg
aad
repnz
adc
lcall
mov
cmpsl
pop
sub
add
jb
xlat
sub
mov
daa
out
gs
shll
mov
cltd
mov
mov
cltd
movsl
in
imul
push
dec
in
data16
jb
aaa
mov
lods
adc
in
or
in
bound
push
sub
mov
pop
sub
hlt
leave
dec
inc
clc
rcrl
xchg
aaa
ljmp
out
dec
sub
stc
or
push
fdivl
push
movsl
bound
in
subl
push
mov
xchg
in
mov
xchg
push
mov
movsb
mov
notl
cmp
push
ret
sahf
andl
rclb
jmp
push
lods
cmp
sbb
mov
ja
ljmp
iret
jae
shll
shlb
sti
inc
popf
pop
adc
add
ds
mov
mov
dec
inc
andl
dec
dec
dec
daa
cmp
and
lods
into
jo
push
sbb
xchg
push
sub
shld
adc
mov
jmp
xchg
mov
lea
iret
divb
jp
pop
jg
and
add
addr16
mov
mov
aam
xor
adc
pop
jo
or
shll
and
js
push
and
sub
inc
jae
xchg
aam
jnp
adc
jge
and
mov
and
jmp
ret
scas
push
mov
adc
and
sub
pop
outsb
stc
sbb
pushf
push
sbb
mov
push
dec
fwait
jbe
fimuls
nop
adc
jg
mov
test
ljmp
mov
into
iret
mov
dec
aaa
lret
fsubl
lods
sub
jnp
jg
push
pop
arpl
jne
rcrb
jg
sub
inc
pop
lds
in
mov
cs
jl
adc
aaa
inc
sub
lret
jnp
jp
pop
stos
je
pop
push
daa
jbe
sbb
mov
fs
in
call
movsb
addr16
mov
movsl
shlb
imul
ja
ja
sbb
scas
pop
mov
jg
cmpsb
scas
ret
sti
clc
sub
inc
notl
inc
mov
jnp
filds
aam
or
pop
and
arpl
sub
cwtd
sar
pop
add
cmp
fmull
aas
shlb
imul
jge
and
mov
jecxz
pop
pusha
xchg
sub
cli
out
mov
insb
repz
inc
mov
jecxz
movsl
add
mov
sbb
pop
push
xchg
adc
sti
jle
ljmp
dec
or
pushf
in
stos
imul
mov
adc
lret
and
add
dec
add
sbb
in
cmp
adc
mov
sbb
scas
jl
sbb
mov
rorl
lret
push
sub
cltd
addb
fsts
jmp
sub
mov
imul
push
dec
sbb
ja
mov
push
xor
ret
out
inc
clc
dec
xor
fbstp
xchg
imulb
jge
lds
inc
cmpsb
sti
jecxz
mov
cmp
mov
sbbb
sbb
mov
outsl
loope
cmp
stos
fdivrp
jp
jno
xchg
ljmp
jne
bound
sbb
add
loope
mov
lea
movsb
fisubs
cli
imull
and
push
movsl
popf
sbb
or
cmc
sub
lods
outsl
in
inc
les
out
xorl
mov
lods
insl
xorb
mov
pop
pop
popa
jae
mov
dec
push
sahf
inc
pop
pushf
jbe
adc
jne
stos
mov
sub
xchg
stos
and
xor
andb
cwtl
sbb
pop
mov
icebp
lcall
or
cmc
dec
jmp
mulb
or
repnz
xchg
jle
leave
or
push
shll
jle
or
cli
or
cltd
test
test
std
orb
xchg
pop
and
ja
push
popf
mov
and
xor
repz
iret
mov
shrb
mov
push
lods
lock
negl
push
jne,pt
shlb
scas
mov
repnz
mov
or
lds
pop
aad
shl
inc
push
fs
adc
stc
push
and
pop
mov
jno
test
fisubs
test
sbb
loope
ret
inc
xor
and
shrb
sub
out
enter
pop
icebp
jp
addr16
add
xor
sbb
mov
mov
mov
div
inc
pop
jne
mov
xchg
jbe
fs
movsb
popf
pusha
mov
insb
sub
fwait
pushf
mov
cmc
mov
cmp
lahf
adc
loopne
mov
shlb
pop
cltd
mov
mov
cmp
dec
sub
xor
mov
fcompl
push
fidivrl
mov
mov
ljmp
les
fs
scas
outsl
xor
gs
je
push
es
push
jmp
pop
adc
sbb
sub
cmp
mov
cld
iret
push
dec
cmp
jae
imul
mov
pop
test
cwtl
dec
lds
fadds
xor
mov
mov
fmuls
cmp
pop
loope
jb
xlat
cwtl
pop
dec
mov
push
dec
ds
cmp
testl
bound
mov
cmp
ficomps
mov
cmp
adc
repnz
mov
ret
pop
je
js
mov
push
dec
js
mov
mov
ja
sbb
adc
incl
jge
fdivrs
sub
stos
xor
jne
inc
lret
lret
jle
shrb
or
cmp
xchg
mov
pop
push
leave
cwtl
leave
jbe
mov
adc
mov
ret
mov
movsl
stos
cld
icebp
data16
xchg
jae
dec
xchg
dec
sti
inc
push
mov
out
pop
into
lods
js
dec
rcr
mov
and
add
in
fstpl
shlb
or
adc
add
into
cmp
cli
cmp
mov
shlb
jnp
cmpsb
nop
adc
xor
mov
push
jle
aas
stos
inc
dec
icebp
shll
inc
fldt
es
pop
lcall
cltd
mov
jmp
loop
or
mov
cmp
loope
pop
cmp
popa
sub
mov
scas
mov
pop
aaa
inc
or
nop
mov
push
xchg
pop
inc
or
add
leave
test
pop
imul
xchg
xor
call
sbb
jo
dec
test
mov
mov
sub
mov
fstps
cmp
and
iret
push
xchg
push
pop
pop
lods
xchg
xchg
jp
ds
ljmp
movsl
add
xor
add
icebp
fstpl
clc
pop
inc
inc
mov
hlt
lock
mov
loop
jbe
mov
sbb
popf
jns
mov
dec
stos
mov
repz
sub
jp
xchg
es
sub
hlt
mov
scas
jp
cmp
scas
inc
rclb
adc
and
nop
les
mov
int
adc
insl
shrl
sbb
fucomip
pop
or
pop
mov
lret
pop
or
into
mov
dec
sub
sbb
scas
aas
fidivs
mov
push
aaa
sub
push
neg
mov
outsl
xorb
sub
xor
in
sub
outsl
inc
adc
mov
int
mov
in
daa
test
insl
pop
dec
sub
iret
cmp
xchg
je
daa
xor
sti
jmp
fstl
aas
xlat
fbld
pop
jae
inc
jl
imul
mov
insb
or
leave
push
push
push
sahf
das
push
fwait
es
ja
pop
outsb
inc
data16
es
push
in
mov
cmpsb
pop
arpl
inc
jne
jno
out
fwait
mov
push
cli
fidivl
test
aaa
and
mov
cmp
je
stc
inc
xor
push
mov
shlb
sbb
imul
push
lds
andl
fwait
out
inc
mov
cmp
xchg
movsb
setp
sbb
jns
scas
push
mov
int
add
daa
std
adc
lds
mov
and
mov
add
push
in
jecxz
cmp
lret
or
mov
xor
mov
push
sbb
or
xchg
jge
repz
add
mov
xchg
insl
lcall
mov
aas
sbb
icebp
je
push
mov
test
mov
data16
stos
mov
cltd
jp
test
mov
adc
adc
mov
inc
in
dec
cli
jbe
push
mov
rcll
out
call
push
push
stos
es
xchg
movsb
add
inc
nop
push
insb
mov
and
stos
lods
inc
out
loope
xchg
lahf
mov
xor
jo
in
stmxcsr
mov
aas
add
cmp
inc
scas
movsb
add
test
mov
cvttps2pi
std
push
or
repz
pop
lea
call
aad
test
jb
es
cmp
in
mov
adc
les
bound
stos
push
pop
faddl
pop
in
pushf
sbbb
lock
pusha
shll
mov
cmp
mov
popf
jmp
jle
and
and
inc
mov
nop
xor
inc
xor
push
push
pusha
cmpsb
int3
outsl
mul
hlt
test
fadd
mov
or
jmp
test
add
shrl
test
pop
fdivrs
mov
lahf
sbb
adc
pop
sbbb
mov
xchg
mov
inc
repz
jge
rcll
aas
cmpl
pushf
or
ss
js
ljmp
add
mov
push
movsl
mov
lcall
push
bound
imul
adc
jne
aad
fistps
fucom
jmp
mov
mov
fdivrs
jne
lret
cmp
clc
jnp
popf
push
xchg
scas
jne
adc
imul
jno
xchg
lret
std
rorl
cld
clc
push
jle
mov
fsubr
xor
inc
repnz
outsb
arpl
sti
push
xor
mov
mov
pop
mov
or
and
adc
leave
jo
stc
popf
shll
sbbl
mov
stos
push
mov
out
xchg
adc
jns
and
out
sbb
and
sub
outsb
scas
xchg
mov
cmp
jno
xor
jmp
jnp
mov
outsb
or
shrl
movsb
xchg
cmp
arpl
fisubrl
fcmovnb
enter
dec
inc
push
inc
fidivrs
rorb
lahf
cmp
shlb
hlt
fs
jno
inc
dec
cmpsb
jp
jmp
icebp
insb
mov
jbe
cli
and
sub
ret
lahf
pop
jnp
clc
sbbb
push
sbb
push
xchg
int
push
xchg
dec
xchg
sarb
lea
insl
fisubs
lahf
xchg
mov
mov
adc
jbe
push
in
inc
popf
nop
lcall
push
xor
in
ja
lcall
in
idivb
ret
aaa
and
sub
les
mov
rcrb
lret
fstpl
lods
sub
xor
inc
inc
pop
hlt
push
jo
jno
pop
fsubrs
cli
jno
out
leave
andl
int3
pushf
sbb
and
xlat
dec
add
mov
or
test
sbb
or
xchg
out
cld
cmp
and
pop
imulb
add
test
add
xchg
push
xchg
pop
pop
cmpsb
mov
sbb
loopne
shll
jne
mov
andl
adc
cmpsl
ret
repz
test
adc
loope
int
js
add
test
xor
mov
push
mov
insl
mov
pop
mov
push
cld
lods
mov
aaa
into
repnz
or
sbb
pop
mov
dec
lret
ja
cmpsb
jno
add
outsb
lods
mov
sar
push
or
fistl
in
ficompl
imul
je
mov
push
mov
bound
sub
cld
out
xchg
mov
inc
mov
getsec
inc
and
in
andl
stos
sub
xchg
cmp
mov
mov
add
lock
mov
sub
push
fwait
pop
mov
in
cmpsl
xchg
je
push
iret
dec
dec
fnsave
push
inc
dec
mov
or
jb
in
mov
addb
mov
xor
std
or
push
data16
mov
dec
add
xchg
or
es
jmp
push
sub
shll
push
mov
and
pusha
aam
ja
and
subb
dec
sahf
ja
sarl
mov
aam
nop
out
loop
pop
into
mov
pop
xchg
inc
aas
in
dec
lods
mov
push
cmp
xchg
in
bound
repnz
pop
jns
xchg
jo
movsb
sub
add
jb
mov
out
cs
add
sub
cmp
loopne
mov
adc
or
dec
jle
mov
pop
das
nop
pop
xor
out
ret
dec
lahf
in
push
lods
mov
mov
adc
xor
xchg
xor
mov
cld
mov
push
jne
lcall
lods
mov
out
xchg
sbb
mov
ja
fistpl
out
sarb
and
dec
mov
mov
sbb
dec
or
mov
push
inc
pop
or
es
and
xchg
jne
arpl
mov
sub
outsl
fistl
and
hlt
jns
dec
pop
in
outsb
movl
cltd
mov
into
lea
out
inc
push
dec
mov
push
sarb
push
add
repz
std
xchg
or
cmp
push
mov
ffree
push
sub
fcomps
lds
inc
dec
das
push
aad
shll
flds
xchg
mov
cmc
shll
repnz
scas
mov
and
lret
in
int3
daa
jmp
xor
sub
add
xchg
popf
testl
sub
les
cs
dec
fmull
repz
test
outsb
hlt
fldenv
mov
or
or
add
clts
mov
push
orl
and
and
repz
les
scas
mov
into
addr16
fists
sbb
mov
icebp
or
jo
cmpsl
dec
jae
dec
sbb
sbb
mov
mov
stc
repz
scas
mov
cmc
dec
xchg
rclb
sbb
scas
outsl
imul
scas
mov
fs
xlat
dec
dec
dec
jb
scas
in
lock
and
in
arpl
cmpsl
and
or
push
push
fwait
mov
jns
push
mov
or
cmp
jp
loope
mov
mov
mov
sbb
push
cli
daa
dec
mov
cmp
sub
int
add
aaa
dec
ret
or
push
aaa
test
and
mov
push
push
rolb
lock
js
inc
and
out
call
sub
pop
iret
lcall
cmp
aaa
push
push
xor
mov
outsl
enter
add
int3
or
popa
inc
mov
or
xchg
mov
mov
or
inc
cld
mov
dec
lods
cmp
mov
das
insl
mov
mov
push
inc
add
fistps
insl
jns
sbb
xchg
int
mov
dec
push
out
and
sub
addr16
aam
aaa
xor
sub
pop
ss
outsb
imul
jle
xchg
xchg
xchg
fucomi
xchg
popf
movsl
sbbb
scas
mov
push
dec
sti
popa
adc
lds
sub
push
incl
fdivrs
sub
stos
ss
aam
and
shll
adc
sbb
aad
jne
punpckhwd
sti
or
cmp
sub
sub
jp
jp
and
cmp
in
mov
insb
ljmp
mov
adc
shll
lret
pandn
jl
arpl
inc
movsl
jno
pop
pop
dec
int
add
cmp
negb
dec
mov
mov
cmp
gs
fucompp
movsl
cltd
test
sarl
lea
adc
push
jmp
xchg
mov
and
xchg
mov
jbe
lods
pushf
push
jbe
pusha
push
std
push
frstor
adc
aam
jg
push
imul
in
mov
in
sub
in
cmp
push
mov
xor
int
pop
hlt
mov
push
sahf
push
inc
les
xor
addb
cmpsb
lret
xor
inc
cmp
iret
mov
popf
addr16
andl
dec
mov
call
out
inc
jge
rclb
push
scas
fdivrp
int3
xchg
sahf
outsb
out
cmp
rorl
mov
adc
addr16
ret
sbb
push
pop
int3
mov
jae
fwait
lods
frstor
xorl
xor
mull
insl
outsl
dec
mov
cmp
cmp
imul
out
cwtl
inc
into
testb
xchg
lahf
mov
fldt
iret
pop
lret
push
mov
push
lds
aas
jle
test
xor
repnz
hlt
jno
int
or
dec
xchg
test
mov
aaa
mov
shrl
and
std
add
sbb
mov
push
xor
outsb
lret
mov
fwait
inc
mov
insl
loopne
mov
fsubrp
xor
popf
cmc
flds
pop
xchg
daa
aas
nop
mov
adc
andb
cltd
mov
lahf
sbb
dec
call
or
ret
rclb
lret
sarb
sub
call
out
outsl
cmp
cmp
jbe
cltd
adc
lods
sti
fiadds
cld
jno
loope
and
js
xchg
fldenv
bound
mov
sub
outsl
mov
fcoms
aas
sub
inc
pop
sub
fdivl
mov
fwait
in
mov
mov
cmpps
cmp
stos
repz
inc
in
cs
sahf
mov
cmp
fs
push
or
pop
cmpsb
and
cmpsl
cltd
loope
xchg
dec
add
pop
in
xchg
and
jecxz
mov
xchg
and
push
int
sahf
cmp
sub
outsb
sub
add
jg
sbb
xor
xchg
imul
mov
and
mov
fadd
fnstenv
repz
in
sub
loope
outsl
sbb
sbb
ss
mov
aaa
jnp
stos
jmp
inc
test
jno
sub
mov
and
sti
xor
jmp
jne
into
scas
enter
jge
sbb
cmp
icebp
scas
xor
xchg
in
mov
xchg
daa
add
in
call
jl
cli
jecxz
pop
pmuludq
mov
data16
andl
sbb
add
pop
jecxz
aas
icebp
popf
dec
mov
dec
adc
imul
insb
mov
insl
sbb
xchg
or
cmp
jl
stos
movsl
mov
pop
ljmp
inc
and
xchg
inc
xor
arpl
ret
mov
and
ret
adc
jb
or
or
dec
sbb
push
ss
test
add
mov
cmp
xchg
add
sbb
mov
jne
lds
fwait
int
push
jmp
insl
outsb
lods
cs
cmp
jns
mov
lods
mov
add
cmpsl
fsubr
cs
cmc
jmp
imul
data16
bound
pusha
mov
sub
popa
icebp
je
adc
sbbb
fs
ret
mov
int3
sbb
cmp
and
and
dec
dec
pusha
adc
or
movsb
sub
scas
cmc
dec
jp
sub
insb
or
pop
xchg
andb
cltd
jge
inc
lcall
leave
jmp
cld
imul
adc
rclb
mov
repnz
das
jle
addb
mov
test
pop
stos
xchg
xor
jbe
aaa
mov
push
cld
inc
jne
or
pop
adc
push
jb
in
addb
mov
mov
hlt
and
cltd
fildl
mov
push
lods
imul
jb,pn
movsb
cmp
in
aam
jge,pn
out
cld
test
ret
popa
mov
sbb
ss
inc
pop
pop
xorl
cli
sbb
mov
addr16
pop
fildl
repz
int
out
inc
outsl
sub
adc
retw
stos
stc
pop
and
xor
sti
mov
add
ficompl
lret
fidivl
jnp
jbe
das
mov
mov
jns
or
jle
rcl
lcall
cmc
fdiv
xchg
mov
rol
fstps
testb
imul
adc
dec
sbb
call
jle
mov
out
outsl
push
mov
ljmp
pop
sti
xchg
cs
inc
shlb
hlt
xchg
sub
jae
loope
lds
cmp
jecxz
or
mov
hlt
cmp
out
pop
mov
mov
data16
mov
mov
mov
dec
mov
mov
pop
pop
cmp
xor
or
rep
inc
add
shrl
adc
and
repnz
push
outsl
cmp
out
lods
sbb
fs
aaa
and
das
and
iret
cs
idivl
stos
into
das
insb
cmpsl
lods
notl
adc
loopne
push
inc
das
ud2
cmp
les
and
mov
cmc
push
add
orl
cli
rol
add
popa
mov
pop
xor
js
pop
arpl
fldt
jle
rolb
jbe
jns
sbb
mov
push
cwtl
data16
cld
cmp
les
hlt
insl
cmp
iret
fildll
data16
shlb
roll
jnp
out
or
lahf
push
adc
sub
in
jne
popa
adc
arpl
sub
push
popa
int
inc
das
add
jne
cmp
repz
and
push
jmp
repnz
sbb
or
adc
popf
enter
xor
sub
inc
rorb
daa
jae
scas
xchg
cmpsb
ss
addl
es
ljmp
adc
inc
jae
aaa
insl
dec
xchg
push
sti
test
adc
mov
aam
jb
dec
sbbl
fdivr
lea
xor
and
push
fwait
lahf
jg
mov
imul
scas
or
mov
cmp
cmp
push
lcall
in
xor
pop
daa
jnp
push
fdivrs
dec
add
cli
jbe
push
lcall
sub
xlat
js
pop
jae
mov
or
mov
mov
mov
xchg
cltd
fwait
les
test
gs
adc
ret
cmp
daa
sbb
gs
mov
out
mov
pusha
cld
pop
decb
je
xchg
push
xchg
jle
enter
sub
dec
add
leave
jb
pop
and
xchg
ja
lahf
or
and
bound
imul
pop
and
cli
imul
and
std
adc
stos
mov
imul
stc
mov
lock
clc
insb
push
outsl
sbb
pop
jne
cmc
pop
rolb
pop
out
imul
mov
aad
mov
test
and
jmp
xor
push
in
nop
mov
mov
loopne
fcomps
sti
xor
pop
lahf
iret
dec
jg,pt
rcrb
ja
mov
aam
insb
or
mov
sub
adc
cmpsb
or
rolb
iret
ret
in
sbb
into
cli
test
sti
xchg
movaps
mov
and
out
mov
jne
xlat
aaa
inc
test
inc
into
push
stc
xchg
sbb
dec
aam
test
stc
fwait
and
sbb
movsl
mov
sti
jp
stos
adc
stos
sbb
loop
adc
mov
jmp
push
and
or
ljmp
loopne
dec
aaa
push
xor
jmp
add
adc
mov
xchg
cmp
xchg
popf
push
push
pop
push
pop
xor
lahf
mov
lea
sbb
gs
cli
scas
adcl
push
xor
scas
cmpl
lahf
cltd
shrb
sub
cmpb
push
push
mov
sahf
cwtl
movsb
sahf
cmpsb
lahf
fcoms
or
pop
addr16
add
lret
sbb
arpl
outsb
test
rcrb
and
repz
clc
mov
fldt
mov
pop
fldt
and
test
push
or
jmp
inc
push
adc
push
hlt
pop
pusha
lods
and
mov
imul
inc
dec
int
and
les
call
data16
insb
push
and
xor
and
xor
xor
push
push
es
push
outsl
cmp
ds
lcall
xchg
jne
and
cmp
sahf
push
mov
push
mov
repz
mov
hlt
shl
adc
fs
es
dec
movsb
cmp
pushf
push
call
xor
mov
shl
dec
notrack
adc
add
pop
jbe
cmp
cmp
fnstsw
hlt
movsb
fists
xchg
xchg
add
js
fnstenv
or
xlat
pop
lcall
and
ret
stos
cmp
and
jo
dec
and
int
adc
dec
mov
rcll
mov
or
icebp
jg
call
fmul
jnp
dec
es
push
mov
jns
adc
sbb
es
daa
xor
ret
mov
cmp
ficompl
cwtl
enter
cli
xchg
scas
cmp
into
xchg
sub
inc
add
add
into
cmc
arpl
pop
push
rcl
cmp
mov
dec
sbb
sbb
mov
pop
in
pushf
push
sub
mov
xchg
dec
ljmp
gs
ret
je
cmp
imul
push
mov
sub
or
rorb
sbb
jp
lret
mov
popa
and
fs
push
aam
test
and
and
jnp
xchg
setne
aad
sub
xchg
dec
dec
xchg
mov
roll
js
xchg
jne
fcomps
dec
jge
sbb
loope
mov
mov
aaa
les
jnp
ds
and
jecxz
lret
dec
sti
lret
pop
pushf
aam
leave
lret
xchg
jecxz
xchg
dec
aad
push
lods
repz
mov
push
mov
dec
cmp
daa
xchg
cmp
out
cwtl
mov
dec
je
inc
fmulp
adc
adc
mov
jbe
jle
jb
inc
xchg
and
dec
and
sarl
inc
mov
movsb
mov
je
adc
call
pushl
test
mov
cwtl
sub
mov
mov
repz
negl
mov
js
mov
pop
movsl
push
xchg
cmp
ret
scas
xor
mov
outsb
pop
stos
push
dec
pop
jno
mov
sbb
pop
divb
or
jg
pop
imul
testl
dec
pop
mov
adc
xchg
test
loopne
fwait
mov
clc
popf
sar
inc
fnstenv
cmc
imul
shr
mov
mov
int
xor
mov
aas
fldt
sbb
shrb
iret
push
mov
cmp
jne
adc
test
adc
in
fiadds
push
dec
cmp
call
pop
mov
add
push
popa
xlat
fsts
pop
outsl
gs
mov
pop
dec
jae
mov
pusha
pop
inc
and
sbb
push
decb
xor
mov
mov
dec
jle
inc
pusha
sbb
pop
stos
push
test
sub
mov
loope
sbb
fisttpl
push
or
fsub
ret
push
loope
push
pushf
push
sub
sub
mov
jmp
add
adc
push
lods
and
movsl
pop
jo
aas
stos
popf
sub
outsl
cwtl
cmc
lds
mov
and
leave
push
out
stos
jae
mov
mov
mov
mov
jp
xor
incb
jns
out
lods
mov
inc
push
nop
push
inc
test
insb
cmp
outsl
mov
xlat
pop
xchg
je
inc
add
push
cwtl
jns
stos
inc
fcomp
cmc
mov
mov
sbb
test
aas
mov
enter
cmc
repnz
mov
lock
outsl
sub
or
mulb
dec
js
sahf
jmp
loopne
sub
loop
leave
imul
dec
xor
adc
or
cmp
jecxz
pop
sbb
ffreep
cmp
add
ja
cld
and
mov
sbb
dec
pop
out
aaa
push
add
pop
mov
pop
fcoml
jl
aad
scas
ss
icebp
ud1
fbstp
pop
leave
or
sti
sub
ss
repz
bound
jbe
lahf
mov
jge
sarb
icebp
jg
cmpsb
inc
fbstp
data16
mov
jg
leave
adc
mov
mov
fists
cmp
idiv
mov
idivl
pop
jmp
sbb
jo
sub
imul
dec
sbb
ja
add
mov
fbstp
push
xor
push
stc
xchg
sub
xor
mov
mov
clc
test
lods
dec
into
and
sub
rclb
dec
mov
outsl
aad
mov
icebp
push
test
cmp
push
fimuls
into
lds
dec
lods
adc
and
push
sub
jmp
popa
aaa
cmp
insb
scas
dec
movsb
pop
sub
xchg
xchg
pushf
push
mov
push
test
sub
mov
ss
in
jecxz
adc
test
adc
cltd
fistpl
jnp
das
push
sbb
add
mov
xchg
xchg
xchg
push
push
or
sub
outsl
stos
inc
xchg
ss
leave
clc
fadds
mov
out
inc
push
aas
lea
fisubrl
push
out
in
pop
add
js
xor
dec
xchg
jmp
xor
bound
adc
inc
xchg
je
jp
push
pusha
xchg
lret
cmpb
adc
dec
xchg
aas
les
add
fstps
xchg
mov
lds
cmp
loopne
mov
xchg
addb
mov
jecxz
xor
shrb
push
cmp
fists
add
jno
xor
in
sar
add
push
push
pop
xchg
and
ret
pusha
adc
mov
add
xchg
dec
pushf
inc
aam
lret
adc
imul
shl
cs
stos
repz
fs
push
or
cmpsl
sti
jbe
imul
stos
mov
cli
add
adcl
jl
addl
cli
clc
xor
shlb
outsb
leave
stc
add
xor
and
jno
jmp
push
pop
sbb
repz
dec
repz
mov
jl
dec
imul
jns
insb
lock
jecxz
mov
cmp
fcmovbe
jnp
sub
stc
add
push
inc
mov
cltd
fidivs
jecxz
repz
cs
push
jb
xchg
mov
repz
mov
and
testb
adc
xor
xor
push
xchg
mov
pop
or
xchg
adc
sub
jnp
inc
cmp
push
rcrl
subl
lcall
and
mov
loop
lahf
out
stc
clc
scas
inc
jmp
movsl
mov
xor
aas
into
mov
cmpsb
hlt
out
pop
shrb
test
xchg
fistl
sarb
push
insl
add
mov
cltd
movsb
je
and
jle
push
sbb
or
pop
push
adcb
ficomps
js
jae
cwtl
shrb
push
rcrb
or
mov
hlt
pop
out
mov
jae
or
xor
sbb
out
ds
dec
xor
lret
movsb
xorb
cmp
test
test
lahf
loopne
lret
popa
mov
adc
out
orl
std
push
add
push
mov
cwtl
and
out
mov
aad
stos
jnp
adc
pop
inc
outsb
loop
dec
frstor
dec
xor
sahf
mov
jbe
test
aam
jb
push
xchg
xchg
lea
fldenv
mov
ljmp
andnps
movsb
lahf
dec
fidivrs
lods
bound
pop
mov
jg
jmp
add
xor
xor
push
push
and
ret
cmp
aaa
adc
outsl
sub
rcll
mov
call
sub
lods
dec
xchg
int
jae,pt
or
stc
popa
sbb
shrl
push
jnp
in
jo
lock
cmp
push
ja
dec
adc
mov
dec
pmuludq
aas
pop
int
inc
xchg
xchg
les
daa
dec
or
and
mov
mov
cltd
fdivrl
sbb
loope
jge
inc
pushw
inc
xchg
mov
push
push
lds
test
je
and
xor
cmp
and
pop
movsl
sbb
outsl
popa
push
mov
or
xchg
sbb
cwtl
cltd
jmp
rcrl
imul
repnz
lds
add
jb
mov
aas
sbb
lcall
or
jbe
fcoms
inc
inc
cltd
jle
lea
icebp
lds
aaa
ljmp
int3
xchg
sbb
or
rorl
jmp
add
imul
pop
jp
or
jmp
insl
xor
cmp
sahf
mov
jbe
lods
pop
pop
cmp
sbb
pushf
es
fstps
hlt
mov
les
and
movsb
cmpsl
in
sub
stos
frstor
sarl
aam
cmp
adc
push
mov
fs
aas
bound
jnp
mov
lods
cmp
push
cwtl
add
mov
cmpsl
add
sbb
aas
sub
jmp
int3
movsl
loopne
repz
xchg
xor
icebp
fisubrl
mov
pop
shlb
stos
jmp
mov
pusha
mov
ja
jae
test
pop
pop
sbb
sub
xlat
in
adc
jp
lahf
cmp
in
popf
and
push
dec
jecxz
jg
adc
lcall
xchg
cmpsb
int3
clc
pop
or
test
insl
ret
in
call
lea
xor
int
cwtl
mov
dec
stos
scas
sbb
jo
push
fcmovnu
jecxz
inc
jb
or
out
mov
dec
dec
ds
imul
aas
loope
pop
pop
jmp
push
lock
mov
mov
dec
movsb
pop
lahf
dec
repnz
jo
jle
iret
xchg
sbb
adc
fcomip
xor
adc
test
jg
aam
push
push
sbb
add
jbe
lock
jmp
in
fdivl
push
push
inc
js
outsb
popa
roll
push
dec
mov
add
cli
test
mov
cmp
pushf
je
inc
sub
pop
dec
loop
stc
xchg
test
fbld
loopne
pusha
shr
cwtl
xor
and
pusha
int3
mov
add
popf
mov
adc
and
push
movsb
mov
push
mov
and
xor
and
divb
pop
xchg
testb
fiadds
xchg
push
jge
push
xor
xchg
xchg
sti
jbe
setne
popf
pop
jb
jo
xchg
push
sbb
add
xchg
stos
inc
mov
sbb
jmp
or
pop
cs
and
push
jno
addr16
push
push
adc
sub
ret
or
es
arpl
mov
or
add
shrb
lahf
test
lods
xchg
xchg
arpl
lock
cmc
dec
repz
je
add
add
cli
jmp
test
ficoms
sub
ficoms
shl
imul
test
xor
inc
push
sub
les
mov
push
or
in
enter
cmpsb
mov
push
xor
jne
jns
jb
pop
inc
sub
stos
mov
dec
dec
pop
mov
outsb
add
mov
dec
xchg
mov
lahf
lods
sub
jge
stos
lock
add
mov
push
jns
jecxz
inc
dec
jmp
cmp
enter
cli
nop
repz
sbb
mov
jb
mov
je
aad
jge
jge
iret
pushf
pop
pop
int
popl
add
into
xor
aaa
shrb
xor
in
es
lahf
repnz
out
dec
in
mov
xor
popa
das
fs
xor
dec
lahf
jle
sbb
scas
add
lcall
cli
leave
repz
js
test
cld
inc
sarb
dec
cmp
mov
push
xlat
rcr
mov
call
dec
dec
dec
jno
xor
xchg
push
mov
pop
data16
jb
jo
in
mov
sbb
std
pop
adc
push
push
leave
mov
pop
add
leave
std
cmc
insb
rolb
and
ss
ret
mov
mov
lret
sbb
aad
lea
sub
mov
fdivrs
mov
lret
and
es
sub
sub
nop
jmp
push
pop
jmp
jnp
or
fimuls
dec
jecxz
out
sbb
cmpsl
mov
test
and
sub
xchg
mov
les
mov
and
aas
xchg
icebp
jmp
lds
mov
daa
jae
dec
xor
ljmp
mov
fimull
inc
cmpsb
push
or
cli
sub
push
mov
std
fsts
idiv
insl
lds
cmpsl
mov
and
scas
cs
push
adc
insb
es
push
inc
arpl
mov
sarl
imul
fwait
push
je
xchg
fimuls
insb
test
mov
insb
mov
call
dec
jo
and
inc
adc
sbb
pusha
ret
in
enter
shr
sub
pop
aas
push
cmp
mov
dec
push
push
call
or
or
leave
sbb
add
push
ret
in
imul
in
inc
push
xor
xlat
scas
out
movsb
sub
movsl
mov
pop
jl
int3
xchg
ret
pop
mov
out
adc
mov
xor
movsl
jns
out
lea
ret
cwtl
stos
emms
and
pop
mov
je
mov
jne
push
mov
lds
pop
in
jle
and
daa
xchg
jns
mov
ret
or
adc
push
call
pop
jecxz
xchg
xor
or
dec
mov
test
inc
fmuls
lea
lods
cs
jg
xor
pop
ds
enter
mov
pop
fwait
sbb
pop
stos
in
mov
jnp
out
jae
and
js
sub
bound
movsb
lret
push
inc
ss
imul
xchg
xchg
jbe
es
push
dec
ret
cmc
xor
cld
es
sti
xchg
push
cmp
cmp
sub
imul
fisubrs
lahf
mov
incl
xchg
cmp
pop
daa
bound
add
mov
jne
insl
mov
pop
sub
inc
xor
mov
push
mov
adc
stc
push
out
mov
pop
sbb
aad
mov
push
jns
sbb
push
aad
sbb
jl
or
mov
shrb
xor
mov
mov
mov
sub
add
dec
xchg
and
outsb
or
sbb
mov
lret
push
test
fisubl
xor
rcl
rolb
imul
jo
sub
cmp
movsl
mov
repnz
xlat
xchg
dec
mov
les
jge
or
leave
mov
out
sub
repnz
sbb
inc
pop
dec
enter
pop
out
pop
stos
push
arpl
mov
dec
push
in
cmp
sbb
gs
popa
mov
sub
arpl
test
ja
push
popf
inc
fsub
push
dec
mov
addr16
push
mov
push
push
push
in
popa
movsb
xor
adc
nop
adc
mov
pusha
mov
cmp
mov
cmp
gs
sub
movsb
out
into
outsb
xor
cmp
and
push
mov
sar
and
xor
lods
xchg
ss
add
xor
aaa
imul
in
or
mov
dec
frstor
std
int3
adc
xchg
mov
ds
xlat
mov
shl
imulb
xor
aam
push
rcr
jo
dec
push
daa
repz
aad
sub
push
call
inc
sbb
rep
test
push
inc
pop
push
lods
popa
shrb
ljmp
jae
xchg
mov
push
arpl
aam
and
lock
xor
mov
fucomi
jg
sbb
xchg
push
xchg
mov
pop
lods
lock
adc
leave
jg
push
cs
cmp
popa
or
inc
pop
int
adc
repnz
cld
movsl
rorl
into
xchg
pusha
dec
mov
fists
xlat
inc
shlb
inc
lods
mov
pop
push
dec
dec
out
imul
lahf
insl
insl
xor
cmp
dec
bound
xchg
call
pop
and
and
push
stos
sbb
sbb
into
pop
and
inc
pop
dec
mov
gs
or
dec
pop
aam
sbb
hlt
outsl
mov
sub
rolb
mov
fdivl
ret
inc
pop
int
mov
push
daa
mov
cmp
push
lret
push
fmuls
mov
sbb
inc
jp
pop
jne
loop
movsl
imul
sbb
and
xchg
movsl
setl
cmp
cmpsb
add
fisubrl
add
mov
inc
leave
sub
cwtl
push
adc
adc
xchg
cmp
pusha
out
cmp
xlat
jne
xlat
cmp
cmpsl
adc
cmp
rolb
and
pop
adc
lods
xchg
xchg
xchg
into
cld
imul
fidivrl
xchg
jle
shlb
add
and
jl
rcl
push
test
xlat
add
ret
push
outsl
lods
pop
int
inc
adc
mov
xchg
inc
lahf
dec
push
add
mov
fisubrl
adc
mov
sub
pop
mov
jbe
ret
mov
mov
popa
mov
sub
sub
in
jmp
add
cmp
xor
pop
cli
add
adc
jo
push
push
inc
jecxz
sarl
and
sahf
outsl
lds
das
mov
dec
and
pushf
push
mov
jno
movl
sahf
push
push
cmp
fwait
lahf
and
mov
xchg
int
add
mov
cmp
arpl
mov
push
mov
jg
jg
testl
mov
adc
je
or
frstor
mov
jne
sbbb
push
das
sbb
sarl
movsl
iret
fmulp
jo
test
push
mulb
lret
adc
push
xchg
movsb
movsl
rorl
ss
inc
adcl
add
hlt
and
jl
arpl
and
repnz
repz
add
mov
pop
test
mov
stos
rol
out
arpl
fnsave
adc
mov
out
mov
shlb
hlt
enter
xor
cld
fidivrs
out
test
insl
call
and
dec
fbstp
out
lock
test
mov
lds
aad
push
mov
cmp
and
sar
cmp
jnp
test
pop
xor
adc
xchg
mov
adc
subl
cli
sub
ja
repnz
es
in
push
lods
cmp
es
push
sub
inc
cmp
jns
sarb
mov
push
push
jle
push
repz
jbe
loop
imul
inc
negl
sti
cwtl
sahf
and
pushf
cmp
add
sbb
shrb
loope
aam
xor
mov
xchg
lret
data16
movsl
lods
xchg
cmp
push
ss
sbb
push
cmp
add
push
movd
lret
jne
nop
and
ret
dec
fmulp
ss
pop
mov
jo
jns
loopne
insb
push
mov
dec
adc
sub
fs
mov
dec
lcall
jnp
lds
out
mov
xchg
outsl
sarb
mov
and
jne
xor
mov
sub
cmpsb
dec
sbb
std
dec
cmp
xor
cmp
sub
dec
or
std
mov
les
cmp
jcxz
mov
mov
sbb
je
pop
push
sbb
and
jo
inc
cmpl
dec
push
in
orb
in
xchg
lahf
push
mov
xchg
mov
cmpsl
outsb
or
sub
insb
ja
jecxz
dec
xchg
lds
push
mov
clc
cmp
mov
mov
cmpsb
mov
cmc
and
stos
cwtl
jg
lret
add
mov
pop
jg
lods
mov
inc
fisttpl
sub
fldl
push
out
cwtl
je
or
mov
cmp
addr16
mov
pop
cli
or
add
mov
out
mov
sub
pop
push
lods
and
push
cmc
dec
and
dec
cmp
adc
cmp
push
loopne
push
dec
mov
adc
fisubs
fisttpll
in
pusha
out
ljmp
jmp
or
out
repz
test
mov
cmp
or
and
mov
adc
jl
insb
imul
push
sub
ljmp
add
out
sbb
in
cmp
xchg
lret
cmp
push
jecxz
inc
mov
add
loope
orl
xor
js
rclb
or
in
imul
test
rcrb
int3
cmpps
xor
cmp
xchg
sub
xchg
sub
mov
add
and
push
mov
mov
fstpt
or
in
xchg
aam
sbb
push
test
add
iret
mov
hlt
test
or
movsb
xchg
sti
push
cld
insl
rcrl
or
cmc
or
aad
je
aam
es
ret
or
dec
out
fwait
jno
into
push
jo
adc
test
pop
mov
mov
insb
inc
aam
push
jecxz
arpl
mov
loope
cmpsl
cmpsb
xchg
in
or
std
mov
jne
fs
pop
mov
call
or
push
lret
dec
add
mov
or
daa
lret
lcall
popa
in
mov
jb
sbb
mov
int
adc
mov
push
xchg
loopne
pop
mov
pop
inc
push
mul
add
bound
xchg
sbbl
xor
je
int
sub
testb
std
mov
inc
and
icebp
sbb
pop
rol
test
fbld
jl
mov
loop
mov
or
lea
xchg
lret
dec
dec
out
cmpl
mov
jbe
mov
out
lahf
daa
iret
daa
outsl
cmpsl
jp
add
push
add
push
xchg
add
xor
das
lods
test
popa
loopne
ja
sbb
cs
daa
loope
push
cs
enter
push
mov
pop
sbbb
pop
cmp
call
ss
pop
dec
fildl
sub
daa
add
cmpl
pop
pop
insb
inc
popa
pop
int
mov
ret
xchg
jno
push
xchg
ja
movsb
ror
jne
aad
dec
jne
aam
add
push
mov
lods
imul
cli
std
add
add
adc
sbb
lea
int
leave
sub
adc
roll
push
sub
out
push
xor
mov
jecxz
cltd
jno
cltd
dec
xor
mov
or
rorb
int3
and
and
aaa
mov
popa
xchg
pop
xchg
sbbl
aaa
pop
addb
std
adc
cmp
fisubl
lret
lods
enter
jl
adc
mov
mov
pop
mov
test
and
outsl
mov
mov
adc
sbb
push
cwtl
fiadds
repnz
or
out
sbb
inc
divl
adc
shl
mov
sbb
hlt
dec
xor
xchg
inc
rcrb
push
pop
mov
cwtl
jnp
dec
pop
stc
cmc
cltd
test
inc
dec
cmc
mov
loop
add
inc
push
push
and
shlb
xor
sbb
inc
inc
push
jo
lret
mov
lahf
sar
adc
jb
jne
xchg
sub
fstpl
and
xchg
out
xchg
mov
repnz
cmp
cmp
jmp
and
gs
and
imul
pop
shrl
into
jb
loopne
adc
loopne
cwtl
aaa
test
sub
pop
pop
jno
and
cmp
clc
data16
jmp
sub
rcll
lods
lods
daa
aam
sub
cmp
pop
movsl
icebp
sysenter
push
mov
icebp
pop
lds
jg
adc
outsb
insl
rol
int
cli
sub
pop
adc
aam
mov
mov
jbe
dec
adc
rcl
xor
inc
mov
mov
and
sbb
insb
dec
nop
cmp
dec
sub
xlat
jns
push
daa
sbb
cli
movsb
mov
xlat
inc
pop
xchg
cmp
mov
adc
xchg
test
inc
fimuls
mov
mov
xchg
mov
sbb
cltd
mov
mov
into
mov
imul
rolb
iret
sub
icebp
jge
cmp
jp
cmp
mov
js
shl
pop
ja
loope
js
imul
outsb
xor
or
out
xchg
mov
dec
loop
and
test
int3
inc
icebp
test
insl
jb
les
pop
add
push
sbbb
sbb
xchg
inc
push
jmp
loopne
out
push
out
int3
rcrl
sahf
dec
lock
ljmp
mov
pop
sti
dec
cmc
or
je
mov
xor
data16
lret
std
idiv
out
or
jns
or
cs
push
movsb
xorl
sbb
jecxz
sub
dec
jns
loope
push
add
sbb
or
dec
outsl
xchg
stc
popa
fmul
mov
sbb
cmpsl
mov
testb
out
insb
ret
das
arpl
sarl
test
mov
scas
stos
push
pop
mov
shrb
roll
or
loope
mov
inc
aam
jns
fcmovnbe
ljmp
inc
or
das
stos
mov
movsl
and
fldl
addl
je
inc
jg
dec
dec
mov
mov
dec
adc
or
or
sbbl
lret
dec
jl
sti
stos
fadds
push
push
and
jl
lods
call
shr
leave
push
or
ja
add
sbb
push
inc
or
pushf
xchg
out
sti
jge
outsl
je
cmp
add
insl
enter
push
push
lock
hlt
in
mov
mov
xchg
push
out
jp
in
sub
leave
cmp
dec
jno
rorb
movsb
dec
jg
sarl
iret
and
sbb
outsb
cmpsl
cmp
jmp
mov
out
fwait
and
dec
lea
xchg
add
cmp
icebp
iret
fisttpll
mov
cmp
test
dec
pop
sbb
jae
mov
mov
dec
adc
mov
jp
addr16
mov
cld
xchg
in
stos
adc
jecxz
or
cmp
fisttpl
dec
call
cmc
rcrl
xlat
dec
fwait
cli
dec
cmp
je
sub
fdivrp
es
mulb
fmul
push
insb
loop
adc
dec
pop
sbb
push
and
mov
or
sbb
add
sarb
mov
les
std
dec
dec
in
stos
push
dec
jb
mov
dec
xor
mov
loop
out
push
adc
cwtl
aad
xchg
mov
imul
mov
adc
ss
or
add
cmp
sbb
imul
mov
lea
addr16
or
test
mov
xor
popf
pop
frstor
icebp
movsb
in
inc
ret
push
outsb
lock
ljmp
movsl
pop
cmp
dec
jno
lret
scas
lods
jmp
inc
pop
cmp
mov
stc
in
push
