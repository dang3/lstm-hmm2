jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
mov
sub
and
leave
or
and
call
sub
add
or
xor
and
mov
xor
or
xor
xor
mov
or
or
sub
sub
jmp
mov
and
mov
push
xor
or
xor
push
xor
and
push
and
add
call
and
inc
push
call
add
sub
cmp
mov
je
and
or
mov
mov
je
xor
mov
xor
add
sub
cmp
mov
mov
mov
je
or
and
push
add
mov
call
sub
mov
sub
xor
mov
mov
add
add
push
sub
and
push
add
dec
xor
push
dec
dec
sub
push
xor
inc
push
xor
sub
sub
or
call
xor
xor
add
shr
add
add
lods
mov
or
xor
inc
mov
or
dec
mov
jne
pop
or
mov
inc
pop
inc
pop
xor
add
or
sub
jmp
call
loope
incb
or
incl
or
popl
or
add
or
inc
insb
adc
rcr
push
pop
lods
push
pop
jns
xorb
aas
mov
dec
add
pop
add
mov
cld
xor
inc
mov
ror
and
mov
das
mov
jecxz
rclb
or
lahf
fs
add
xlat
je
add
lds
out
pop
lea
mov
incl
or
aas
je
xor
incl
test
push
cmp
movsl
stc
cmp
mov
sbb
imul
into
push
sub
mov
jle
out
fwait
insb
mov
pushl
pop
mov
inc
xor
adc
jo
pop
xor
aam
add
jp
ret
mov
das
inc
push
sub
inc
movsb
aam
push
xchg
imulb
add
dec
fisttps
push
cmc
fmuls
enter
dec
and
adc
inc
sub
sar
push
cmpb
jne
aas
sar
sub
xchg
sarl
icebp
mov
inc
add
push
imulb
cltd
xorl
lahf
adc
adcb
add
xchg
lcall
push
pop
aas
dec
xlat
cld
andl
pop
push
mov
add
mov
xor
loope
add
negb
cld
subb
inc
or
ss
push
lods
pop
stos
or
scas
movswl
dec
xlat
je
sti
jns
xlat
test
dec
xlat
scas
mov
cli
jno
jne
pop
jl
ss
cmp
mov
cmp
insb
pop
aas
dec
xlat
je
mov
jae
xorl
add
or
clc
scas
jmp
je
cmc
aam
mov
dec
rcrl
push
scas
jp
out
or
ret
int
rol
or
iret
fisttpll
in
fsubrs
mov
jecxz
scas
neg
adc
jp
stos
scas
das
or
dec
inc
and
jb
out
inc
dec
fbld
int3
and
dec
pop
jle
sub
fnstsw
mov
pshufw
push
and
pop
lahf
lret
addr16
outsl
sub
jecxz
and
jp
clc
mov
push
icebp
lcall
cs
jno
fisubrs
subl
popf
das
xchg
out
or
scas
mov
popa
pop
das
pop
fs
in
fildll
incb
push
mov
fcmovnb
add
inc
push
out
ret
sub
mov
mov
mov
ret
shrb
idiv
pop
pop
jns
stos
scas
xlat
subb
jns
fildl
jl
add
shrb
jl
jmp
testb
cmp
jne
test
lcall
lods
mov
loop
insb
jle
jmp
xchg
mov
sub
mov
jmp
jbe
xlat
cmpsb
xchg
sub
xchg
out
stos
scas
jp
pop
popf
mov
into
scas
jp
fnstenv
jp
stos
fstpl
test
lret
loope
subl
inc
sub
xchg
into
stos
scas
jp
popa
fldt
call
xchg
push
inc
fidivl
nop
arpl
adc
outsl
lcall
scas
inc
adc
jp
mov
test
jnp
fnstcw
jmp
icebp
inc
sbb
mov
lock
or
and
dec
dec
jmp
xchg
jl
push
imul
fmull
stos
and
pop
lahf
lret
addr16
outsl
sub
jecxz
jmp
cmpsb
stos
pop
test
inc
into
lock
inc
pop
repz
mov
scas
sti
scas
mov
inc
ret
stos
cmc
ret
xor
and
ret
stos
daa
aaa
jnp
out
adc
shrb
imul
jl
jmp
push
sbb
ret
stos
and
addb
and
test
and
cmc
xchg
out
jp
sbb
ret
stos
clc
xchg
push
push
push
test
stos
mov
jp
sbb
ret
stos
les
jmp
fcmovb
cld
inc
or
mov
lods
jp
and
aam
or
xchg
out
jp
das
mov
sub
jl
sub
jne
stos
lods
jp
and
jb
xlat
pop
ret
mov
push
and
pop
ja
and
insb
in
jmp
jns
xchg
les
shr
repnz
push
jnp
mov
push
and
xlat
cmpsb
icebp
negb
mov
in
icebp
lret
fimuls
mull
int
lods
mov
push
popf
mov
sub
xlat
cmpsb
jns
cmpsb
and
inc
lret
test
mov
popf
mov
xchg
and
jbe
fdivrl
pop
mov
and
sub
popa
push
emms
ret
call
push
push
icebp
or
scas
jp
dec
enter
scas
jp
test
mov
jns
mov
sub
imul
test
js
imul
or
add
fildll
adc
xlat
mov
data16
pop
gs
scas
lods
aas
mov
out
sub
clc
movb
push
push
test
add
add
xchg
and
sti
jb
mull
sub
adc
insb
sbb
stc
cmp
scas
jp
stos
fiaddl
fbld
jp
and
xor
sub
push
inc
dec
pop
cs
enter
scas
dec
mull
scas
jnp
xchg
dec
xchg
or
cmpsb
jns
or
fiadds
fsubs
outsb
scas
jp
dec
lock
xor
jp
test
stos
push
lea
outsl
jle
shr
mov
adc
jl
loopne
test
and
push
and
clc
jb
test
jp
stos
and
jp
stos
lods
jnp
pop
fisubrl
mov
jmp
jecxz
scas
adc
jp
xchg
push
stos
scas
icebp
ret
cmpsb
and
bound
jmp
jge
stos
xchg
xor
subb
or
stos
sbb
outsb
mov
jmp
cmp
inc
leave
xchg
inc
fnstcw
xchg
jns
test
jae
push
das
ret
scas
cmp
insl
jb
movsb
cmpsb
je
adc
jnp
mov
loop
mov
adc
mov
data16
loop
mov
in
gs
pop
fdivl
lds
stc
push
pop
test
lret
cmpsl
mov
mov
cmp
xor
push
jne
scas
addr16
pop
iret
leave
xchg
ja
mov
mov
int3
sub
push
push
xor
fldenv
or
push
das
xor
fucomi
jns
sub
ljmp
pop
shr
mov
subb
xchg
dec
outsb
jne
fsubs
popa
test
in
jno
mov
push
scas
lcall
in
mov
jno
sub
mov
jb
movsl
mov
add
ret
xchg
stos
push
pop
sub
lods
iret
pushf
test
xor
jae
fsubr
inc
adc
mov
mov
lods
fmul
sbb
popa
test
mov
scas
movsb
jnp
ljmp
mov
mov
xchg
int
mov
mov
sbb
jbe
or
jnp,pn
movsl
sahf
decb
aaa
xchg
bound
mov
lods
popl
mov
mov
push
xchg
aam
insl
sti
xchg
cmp
ret
dec
roll
dec
jl
jne
mov
fstpl
test
imul
push
lds
dec
test
fildll
xchg
subl
mov
mov
xor
jg
xchg
mov
or
cmp
repz
addl
jns
xchg
scas
add
jg
xlat
adc
gs
test
inc
mov
data16
dec
mov
sti
push
popa
xchg
mov
or
fistpl
in
push
lods
or
sub
and
xchg
cmp
sbb
add
ljmp
fsubs
outsb
inc
adc
mov
dec
pop
call
fisttpl
dec
mov
cmp
ret
xchg
and
cmpsl
mov
pop
addr16
stc
idiv
jns
jbe
loop
dec
mov
outsb
or
jnp
fcompl
add
xchg
jl
add
fisttpl
imull
push
scas
stos
repz
faddl
test
cld
inc
arpl
push
popf
xchg
xchg
xchg
ret
enter
bound
bound
lret
call
push
iret
out
mov
icebp
mov
ror
loop
cmpsb
repz
stos
add
mov
arpl
mov
incl
push
roll
cmp
sahf
mov
push
inc
pop
repz
loope
out
pop
inc
mov
stc
lds
pop
in
jge
test
sub
adc
jae
setbe
sub
push
mov
cld
push
adc
mov
and
and
scas
mov
mov
inc
stos
pop
hlt
lods
lock
adc
mov
adc
ret
cmp
lods
pop
mov
cmpsl
shrl
aad
cld
mov
cmpsb
mov
js
dec
rol
jbe
cltd
scas
jo
roll
roll
int
ret
fiadds
pop
or
stc
inc
ret
cmp
mov
push
mov
cmpsb
ficoml
sub
jecxz
mov
inc
lret
cmpsl
aam
mov
data16
push
add
push
sbb
iret
mov
lcall
inc
add
lcall
push
mov
sub
and
cmpsb
addb
out
inc
cmpsl
int
sbb
sub
pushf
adc
inc
ds
dec
stos
push
les
jg
mov
pop
mov
cs
lcall
mov
hlt
jb
dec
mov
mov
in
jg
mov
pushf
pusha
orb
dec
add
mov
loope
sub
mov
idivl
mov
loope
mov
cmp
mov
popl
xor
push
mov
das
mov
ds
mov
and
cmp
shll
out
fdivl
fsts
in
cs
pop
mov
sbb
jb
das
dec
or
fidivrs
cmp
inc
dec
xchg
mov
inc
or
xchg
dec
pop
fisubl
aaa
jae
mov
or
shl
jg
and
movsl
lds
lret
push
xchg
sub
divl
cmpsl
iret
mov
je
fldt
xorl
roll
andl
adc
or
mov
push
cmp
dec
ja
not
and
icebp
mov
mov
std
jo
and
cmpsb
push
lcall
sbb
hlt
testb
mov
decl
jg
mov
xchg
jbe
inc
dec
mov
mov
lcall
xchg
xor
cmp
jo
xchg
stos
out
cwtl
inc
mov
pop
inc
divl
insb
mov
xor
repz
inc
lcall
jo
fs
movsl
cmp
lds
out
test
pop
xchg
xchg
stos
sahf
sti
scas
icebp
div
mov
mov
dec
mov
add
lcall
jbe
mov
mov
or
test
push
cmp
stc
add
add
cmp
cs
xlat
or
dec
fucom
es
xor
pop
fwait
dec
and
xor
daa
sub
imul
dec
aas
cmpsb
sbb
fsts
out
sub
mov
xlat
mov
push
inc
xchg
pop
jne
jne
pop
sar
cmp
movl
jbe
dec
std
or
jnp
lret
mov
pop
jnp
sub
and
xchg
bound
and
sbb
je
test
stos
push
divl
fsubl
or
cmpsb
lret
into
jle
xchg
push
repz
lret
pop
cmpsb
jae
mov
lahf
insb
and
jb
mov
mov
jns
jmp
inc
mov
lahf
jmp
inc
decb
notl
push
add
into
push
cmpsb
cli
and
xor
movsb
jle
test
popf
jmp
mov
test
sub
push
fimuls
cvtdq2ps
pushf
mov
js
bound
cmp
arpl
dec
push
add
push
cmp
imulb
add
sub
sbb
adc
vpsrlq
inc
es
xchg
or
stos
mov
rcrl
stos
xchg
pop
ja
loop
mul
jge
sbb
icebp
fisubl
or
cmp
push
idiv
outsb
data16
pop
call
sub
test
icebp
test
mov
stc
pusha
inc
jle
xchg
dec
std
cmp
jb
pusha
je
mull
or
inc
hlt
icebp
sahf
lahf
cmp
jnp
and
inc
in
push
mov
data16
jns
mov
cmp
popl
sub
mov
jle
clc
mov
cmp
lock
mov
mov
xchg
stc
les
fisubrl
xchg
in
or
inc
cmpsl
stos
pop
repz
mov
addr16
vcvttss2si
mov
in
test
sbb
mov
pop
cmpsb
and
or
sub
mov
and
xchg
gs
pop
sbb
xchg
loop
aas
fstl
inc
xchg
cmp
out
pushf
dec
push
mov
cmp
daa
ljmp
pop
jno
int3
testl
fwait
jmp
or
and
adc
xor
testl
outsb
fcmovu
inc
mov
inc
xor
test
repz
lret
bound
bound
sbb
cli
test
mov
shlb
mov
out
sbb
jmp
sub
push
xchg
cmpsl
daa
nop
jle
add
mov
dec
insb
lret
cmpsl
jmp
mov
test
xchg
pop
outsl
mov
hlt
sub
outsb
outsb
loopne
and
stos
es
sbb
inc
scas
loopne
mov
cmp
xor
push
jns
xor
das
mov
and
or
inc
insb
cmp
mov
imul
ret
and
mov
xor
xor
xchg
fcomps
or
repnz
cmpsb
xchg
sti
adc
test
cmp
push
lar
cs
sub
es
ja
xor
mov
movsl
aas
fistpl
and
cmp
aaa
out
iret
xchg
sub
cmp
fildl
out
jmp
repnz
aam
cmp
push
pop
fcmovu
lahf
bound
jmp
and
inc
xchg
cmp
inc
leave
dec
inc
jo
test
mov
add
xor
loop
jmp
inc
nop
cmp
lods
jbe
in
xchg
mov
cld
inc
push
nop
cmp
cld
arpl
pxor
popf
movsb
js
cmpsl
sub
sub
imul
dec
push
fidivl
sbb
pop
push
or
push
mov
lret
and
sub
dec
adc
and
and
cmp
ret
nop
lds
movsl
adc
mov
scas
push
cmp
and
adc
pop
stos
fstps
mov
imul
xchg
sahf
mov
inc
inc
data16
push
fstpl
aaa
scas
enter
insb
jns
shrb
sti
sbb
std
push
in
sti
push
xchg
mov
push
push
fcmovu
mov
mov
outsb
pop
fcomi
add
sahf
mov
cltd
bound
mov
push
lock
jge
repz
cmc
orb
mov
xchg
mov
cld
ss
cmp
dec
mov
fistps
push
aam
or
outsl
xchg
mov
push
xchg
nop
bound
jg
and
arpl
out
das
cld
cld
sarb
pusha
ljmp
sub
or
imull
or
lds
repz
xorb
push
dec
bound
int3
mov
subl
jmp
add
or
add
mov
mov
mov
mov
dec
fwait
push
leave
mov
bound
sub
movsl
daa
and
rolb
stos
or
aaa
pop
popa
xor
mov
insb
or
js
fcomps
mov
mov
in
xor
xchg
mov
mov
mov
js
outsl
xchg
push
dec
mov
je
loope
xchg
aam
mov
mov
pop
jmp
add
pop
bound
xor
push
in
mov
mov
repz
mov
iret
inc
fildll
xor
xchg
shrb
test
and
js
hlt
xchg
mov
loop
push
iret
jne
addl
cs
jae
aas
mov
inc
ficomps
inc
or
mov
jno
notl
or
pusha
fwait
mov
jb
idivl
fldcw
dec
movsb
add
ljmp
jo
sbb
jb
xlat
push
fstpt
stos
mov
scas
stc
in
mov
lods
mov
mov
push
pop
adc
inc
ja
mov
xor
or
cli
fs
and
mov
jno
pop
lock
inc
stc
in
adc
dec
mov
and
cmp
filds
jae
pop
push
stos
cmp
repnz
ret
pop
sub
cmp
popa
xor
and
dec
jo
cmpsl
mov
and
push
push
jge
push
xor
gs
insl
mov
pop
push
xor
dec
aaa
mov
jl
lods
cmpsb
jl
rorb
push
mov
cmp
cmp
lea
fs
rorb
add
cmpsb
add
fbstp
cwtl
dec
movsl
ss
add
mov
repnz
mov
rcrl
pushf
loop
xchg
push
mov
xor
icebp
push
cltd
dec
xchg
xor
and
cmp
stos
mov
cld
outsb
mov
mov
sbb
fiaddl
jg
jb
fwait
xchg
aas
test
data16
ret
push
movsl
cmpsl
cmp
or
pusha
arpl
fstpt
xchg
pusha
out
jb
nop
cs
cmpsb
xchg
jecxz
testl
xor
les
imul
punpcklwd
cmp
ret
out
jb
cmp
movsb
mov
mov
sub
test
mov
ljmp
scas
scas
lds
jbe
or
stos
xchg
sub
in
mov
aaa
inc
lret
mov
sbbb
sahf
hlt
rolb
dec
jmp
outsl
loop
dec
xor
shll
addb
lock
std
stc
jb
cmpsl
dec
mov
gs
sahf
fld
outsb
mov
cmp
movsl
fidivs
add
cs
adc
insl
mov
mov
adc
mov
popa
jno
repnz
gs
xor
mov
std
mov
movsb
aam
adc
in
std
xor
subb
pushl
jb
mov
fs
xor
mov
or
les
jmp
js
sbb
push
popf
daa
call
mul
cwtl
xchg
divl
or
cmpsl
je
cld
rclb
and
nop
inc
stos
and
test
mov
inc
bound
lock
mov
ja
mov
xchg
gs
adc
insb
test
inc
jbe
mov
pusha
pusha
cmpsl
hlt
mov
cwtl
or
sbbb
es
or
dec
and
sbb
xlat
scas
daa
ja
out
shlb
movsl
xchg
mov
mov
adc
dec
inc
pop
fcomip
sub
cmp
pop
les
iret
aam
fs
imul
or
stos
jno
sub
push
xchg
pop
out
pop
pop
xor
adc
outsb
testl
in
mov
lods
mov
les
sbb
dec
mov
or
pusha
cli
sahf
jl
mov
adc
call
or
mov
mov
sahf
nop
mov
inc
xor
stc
cli
test
imul
fidivrl
icebp
push
dec
xor
mov
orl
mov
mov
push
pop
aam
mov
push
orb
xchg
add
jecxz
cmp
cs
out
xchg
rclb
push
test
mov
sub
std
adc
and
inc
mov
sbb
out
or
bound
push
xchg
inc
push
sub
inc
outsb
stos
pusha
std
inc
out
pop
arpl
mov
xchg
stos
repz
push
je
inc
cmp
lret
xor
popa
push
mov
leave
xor
push
dec
mov
aad
xchg
stc
inc
mov
aas
mov
xor
lods
loopne
popa
ljmp
push
stos
daa
test
cmpsb
mull
fdivl
imulb
xchg
aas
movsbl
loopne
cmp
lret
popa
cwtl
mov
in
test
das
cli
mov
fidivl
xor
sti
jbe
jmp
ds
jae
mov
jle
in
sub
cwtl
jl
fdivs
jmp
popf
or
adc
stos
and
lds
jae
and
xchg
pop
cld
arpl
imul
or
sbb
mull
rorb
jb
scas
test
mov
je
adc
mov
mov
mov
mov
jle
sub
push
jmp
lcall
outsl
mov
cmpl
or
aad
adc
sbb
or
inc
jo
mov
loop
sub
mov
push
and
daa
sbb
pop
fwait
adc
test
insl
lds
iret
sbb
fisubs
inc
sbb
fcmovbe
mov
scas
test
subb
arpl
and
gs
and
sub
cmpsl
daa
mov
push
gs
mov
xchg
mov
out
mov
mov
das
pop
jb
roll
xchg
jo
test
jno
mov
and
xchg
cmp
push
sub
imulb
mov
adc
push
int3
cli
out
xor
aam
aas
and
jge
std
push
and
dec
outsl
xchg
sbb
aaa
testb
or
pop
mov
aas
sbb
cmp
push
cmpsb
jo
repz
mov
adc
sti
xchg
cld
mov
mov
inc
push
stos
stos
or
sbb
push
adc
xchg
and
jl
xchg
mov
loopne
and
pop
push
rcr
std
push
repnz
fst
loope
xor
sub
fbstp
jp
je
sub
jns
jne
divl
sbb
rcrl
imul
cli
aas
xchg
jno
scas
cmp
push
dec
mov
in
push
mov
repnz
daa
and
shlb
add
xchg
outsl
popf
inc
mov
js
movsb
scas
mov
adc
std
sbb
stc
mov
cltd
lods
inc
push
out
and
mov
fcomp
sub
and
adc
xchg
xchg
punpcklbw
das
xchg
scas
and
loop
arpl
fwait
inc
cltd
les
xor
xchg
sarl
xchg
loopne
mov
ja
data16
dec
shrl
std
jnp
mov
fdivs
mov
pop
shll
pop
cbtw
outsb
subl
popf
es
data16
es
jne
mov
or
mov
cmpsl
das
push
pop
pop
mov
lods
or
adc
inc
cld
mov
mov
adc
push
mov
lcall
xor
push
in
adcl
and
mov
pop
cmpsl
push
call
xchg
sbb
sub
mov
daa
ds
push
xchg
pop
dec
cltd
in
mov
les
test
dec
sub
nop
test
test
or
pop
stos
les
cli
in
or
mov
data16
test
push
lahf
mov
dec
ljmp
xchg
xchg
movsl
scas
and
aad
add
leave
sub
ficoml
imul
xchg
rorl
pop
enter
aas
xchg
aaa
mov
mov
jo
adc
mov
scas
dec
push
jo
mull
cs
dec
xchg
and
cmpsb
xor
mov
adc
insl
iret
push
decb
cmp
mov
imul
adc
lcall
xchg
fsub
cmpsl
addr16
mov
pushf
push
jb
cmpsl
cwtl
movsl
cmc
out
mov
ja
pop
lods
out
cltd
pop
jno
cmp
aas
push
cmp
gs
xchg
fldt
mov
mov
add
fildl
js
mov
pusha
arpl
cs
sbb
add
sub
shr
mov
filds
dec
jle
mov
xchg
mov
movsb
add
push
or
dec
mov
jb
mov
xor
imul
in
fnstenv
mov
sbb
outsb
ret
jno
shrl
scas
daa
dec
fldl
xchg
aas
push
pop
mov
pop
je
aas
push
pop
in
sub
inc
mov
push
cmc
es
jne
mov
jb
scas
push
pop
cmp
popf
cmp
fimuls
popa
dec
mov
roll
hlt
cli
xchg
mov
adc
mov
cs
push
inc
popf
pop
daa
mov
scas
in
jnp
or
lea
jmp
ja
jno
pop
push
outsb
imul
xor
lahf
mov
and
xchg
xchg
rol
cmpsl
es
jne
cmp
rcrl
aam
push
rclb
in
mov
mov
test
sbb
mov
orb
push
imul
and
dec
mov
cld
push
or
cmpsl
loope
cmp
in
mov
mov
xchg
fistps
adcb
add
mov
out
and
das
xchg
and
xchg
jne
sbb
call
mov
xor
xchg
xchg
insb
in
push
mov
sbb
pop
xchg
data16
scas
pop
daa
test
and
clc
pop
cmpsb
out
test
inc
adc
jno
in
in
cmp
shlb
mov
xchg
jno
inc
sbb
mov
inc
aam
pop
sti
lods
mov
je
xchg
addr16
repnz
jg
or
mov
dec
xchg
xchg
xor
test
and
inc
xchg
mov
sub
mov
xor
mov
pushl
subb
mul
pop
out
mov
pop
inc
cmpsl
adc
iret
cmp
in
mov
xchg
pop
ljmp
jne
shl
popf
lret
in
xorb
jno
ljmp
ja
lcall
cmp
daa
leave
add
fld
and
adc
cmp
lcall
dec
ret
mov
adc
mov
fwait
inc
mov
dec
fcomip
rcl
std
xor
call
punpckhdq
push
daa
mov
adc
push
adc
mov
mov
adc
lcall
dec
xor
fisubrl
ds
cld
popf
inc
jne
lock
rclb
cmp
add
sarl
push
out
setae
push
sbb
dec
in
mov
mov
jne
adc
pusha
ja
outsw
fs
cmp
imul
or
add
lods
shrl
cmp
or
mov
in
cmpsb
mov
mov
pop
cmpsl
out
aam
fxch
scas
rcl
inc
repz
inc
rorl
jmp
and
and
pop
mov
lods
lea
pop
jnp
lods
movsl
xchg
mov
inc
sub
sub
xlat
es
mov
jecxz
shl
sbb
enter
cmp
in
adc
leave
cmp
add
clc
stos
xor
loop
jnp
dec
ljmp
sbb
xlat
shl
imul
xchg
lods
adc
aam
les
inc
loope
fcompl
push
xchg
inc
inc
push
stos
hlt
leave
xor
imul
inc
pop
enter
aas
call
std
adc
bound
pop
in
dec
mov
pop
test
int3
xlat
cmpsb
int
mov
push
push
xor
mov
sub
enter
jno
rcr
enter
xor
mov
jecxz
aad
aas
jmp
push
mov
jmp
pop
icebp
js
or
push
sbb
mov
scas
scas
sub
push
and
dec
push
inc
jmp
mov
ja
pop
repnz
mov
adc
insb
mov
popf
clc
mov
outsw
sub
xlat
and
clc
xor
mov
pop
ds
out
inc
pop
test
call
push
addl
xchg
push
cltd
movsb
inc
mov
cltd
ljmp
addr16
mov
fistpll
add
mov
mov
pop
js
cld
xchg
sub
outsb
popf
mov
clc
inc
sub
jg
aaa
in
repnz
and
push
pop
jmp
mov
fistpl
xor
add
cmpl
jbe
cmp
jmp
xchg
mov
out
mov
pushf
repnz
jnp
cmp
jge
push
mov
test
out
loopne
dec
mov
mov
or
sub
adc
jo
movsl
and
cli
lock
mov
mov
addl
or
adc
testl
iret
fldl
movsb
sub
cltd
push
xchg
or
rcl
fisubrl
mov
stos
xchg
pop
xor
dec
and
xor
mov
lret
repnz
addr16
push
adc
sub
sbb
daa
into
push
inc
mov
cli
insb
mov
add
mov
cmp
or
sub
fdivs
xlat
ret
pop
push
scas
dec
sbb
mov
fdivrp
clc
gs
les
aad
adc
lcall
fisttpl
call
adc
lret
xchg
mov
lahf
fsubrp
xor
mov
xor
mov
or
dec
mov
imul
jbe
or
insl
cwtl
xor
das
popa
je
aas
mov
out
mov
jb
pop
mov
jbe
imul
pop
inc
scas
cmpsb
js
mov
adc
popf
push
fildl
scas
bound
xor
mov
mov
sti
jp
push
mov
iret
mov
jo
outsb
jg
mov
faddl
shrb
sbb
aas
lock
movswl
add
roll
shrb
sub
andb
add
lods
movsl
or
daa
adc
in
push
and
inc
ds
faddl
sbb
mov
add
aam
xchg
pop
mov
sti
sbb
sbb
repnz
imul
mov
push
cmpsl
push
and
add
faddp
test
cld
rcr
add
stc
jns
sub
stos
faddl
jns
jecxz
stc
imul
divl
jnp
outsb
pop
mov
inc
in
lods
js
mov
inc
ret
mov
dec
repz
insl
xchg
sub
mov
or
cli
add
jo
mov
nop
push
sub
scas
daa
jg
push
stc
cld
cmp
adc
ljmp
xchg
mov
mov
fwait
les
sbb
xchg
repz
dec
jbe
ret
sub
cmp
sti
test
add
js
lods
mov
sbb
sub
jle
sub
neg
xchg
sti
idivb
lods
ja
mov
dec
add
cli
adc
imul
in
mov
add
popf
daa
sar
sbbl
cmc
dec
jbe
movsb
mov
pop
nop
scas
mov
mov
xchg
xchg
or
sarl
dec
sbb
lea
push
mov
dec
fwait
mov
dec
cmc
sub
repz
sub
fisubrl
lret
imul
data16
negb
rclb
mov
dec
inc
data16
mov
cmp
insl
jecxz
iret
cmp
xchg
mov
clc
jno
rcrb
cmp
cmpsl
add
xchg
pop
cmp
mov
jecxz
test
sbb
cmp
xchg
filds
pop
xchg
cld
or
jbe
dec
xlat
ret
lea
or
popa
ret
out
je
or
mov
je
and
in
add
sub
out
inc
jg
cli
jbe
and
imul
and
shll
cmc
leave
xchg
mov
mov
push
xchg
cltd
mov
xchg
mov
push
icebp
xor
bound
adc
xor
fiaddl
xchg
xchg
mov
push
out
and
jnp
mov
aas
call
xor
int3
adc
cmp
out
mov
cmpsl
fsubl
mov
cltd
cs
out
add
adc
sub
ds
lret
out
sub
das
adc
jg
mov
sub
mov
dec
adc
cmpsb
call
into
mov
in
mov
mov
and
adc
push
loopne
fsub
mov
mov
out
paddd
stos
jl
in
inc
mov
adc
mov
das
mov
pushl
data16
xor
les
push
stos
adcl
sub
mov
mov
mov
lds
decb
decl
mov
mov
adc
mov
in
addr16
mov
rorb
push
and
nop
stc
aaa
test
xchg
lahf
ret
xchg
mov
ds
loope
mov
push
arpl
daa
add
mov
les
mov
pushf
dec
outsw
push
idiv
add
dec
lret
mov
jp
inc
fidivs
jmp
shl
or
inc
int3
sub
sub
cmpsl
jmp
push
fistpll
ja
ret
outsl
ret
cmp
xchg
push
test
mov
movsl
lret
or
inc
in
xchg
dec
mov
cmp
sub
dec
in
mov
imul
cmp
and
jle
add
lods
jne
aam
test
jl
cmpsb
push
stc
lods
iret
inc
dec
lock
mov
push
in
pop
je
sub
add
jmp
push
pop
and
add
pusha
push
les
push
lods
test
movsb
and
and
or
pop
mov
pop
or
dec
add
pop
inc
out
hlt
mov
jno
enter
mov
add
dec
push
cmp
imul
add
scas
sub
push
adc
call
enter
imul
push
sub
pop
loope
pop
dec
jne
mov
out
or
xchg
nopl
insl
in
pop
cmpsl
cmp
sbb
mov
in
mov
xor
arpl
mov
out
adc
loopne
push
test
jnp
adc
sub
jle
sub
int
jle
cmp
mov
ret
mov
sbb
adc
lea
in
cmpsb
outsb
pop
jb
and
data16
mov
mov
pop
sub
lods
int
andl
xchg
enter
push
aad
mov
add
and
xchg
mov
inc
divb
cmp
ret
inc
cmpsl
cmp
add
xchg
repnz
iret
cmp
mov
xchg
pop
inc
mov
jmp
push
and
hlt
pusha
ja,pt
or
add
sub
jno
mov
mov
pusha
push
call
repnz
jg
add
das
stc
mov
pop
pop
out
add
mov
xchg
faddp
loope
shl
lock
out
jo
int3
mov
cmp
ret
test
cmp
mov
mov
cmpsb
popw
incb
xor
cmp
inc
dec
jle
and
inc
push
and
sub
loop
mov
psrld
js
orb
push
les
mov
roll
fildll
jle
cmp
mul
loop
repz
imul
cmp
or
or
pop
adc
out
mov
sbb
jbe
mov
push
jge
mov
pop
outsl
mov
push
sti
inc
scas
mov
sti
jb
int
outsl
lfs
fwait
xor
lret
pop
sub
lods
push
divl
pushf
cld
out
push
sbb
fsubrl
scas
sub
mov
test
xchg
and
sbb
or
dec
mov
fstps
sarl
fnstcw
ret
mov
xchg
push
fimuls
lds
popa
daa
adc
mull
test
loop
fimull
inc
stos
or
cmpsb
lret
fwait
xorb
idivl
cltd
mov
dec
lret
mov
jp
xchg
sub
imul
call
int3
jo
ficoms
or
xchg
lock
loopne
repz
sbb
cmp
ljmp
mov
cli
sbb
mov
stos
stc
es
stos
pusha
or
add
sub
mov
sbb
fdivp
ret
es
mov
popf
aas
add
inc
xor
mov
repnz
and
mov
cmp
jns
icebp
imulb
fdivl
mov
inc
movsl
mov
adc
push
test
and
jnp
lock
stc
xor
stc
xchg
xchg
jl
inc
sub
inc
pop
mov
push
mov
dec
sub
mov
sahf
push
js
push
inc
xchg
jecxz
fdivrp
je
into
movsb
jmp
xchg
popa
jae
out
mov
lret
push
jge
in
push
test
pop
cwtl
repz
xor
add
fistps
pop
xor
mov
mov
jge
ficoms
pusha
mov
pushf
mov
inc
stc
bound
add
and
or
mov
ret
fnstsw
xor
jle
out
cmp
mov
scas
push
sbb
sarb
in
pop
cmp
inc
mov
push
in
adc
jecxz
sub
leave
sub
or
jbe
cmp
mov
push
and
inc
popf
xchg
gs
and
pop
sbb
mov
fildl
mov
mov
adcl
pop
and
repz
loope
enter
xor
sbb
fs
cmc
daa
cli
mov
sub
movsl
pop
std
pusha
rclb
inc
mov
inc
jl
xchg
fwait
icebp
hlt
lds
out
incb
sub
inc
mov
push
mov
in
out
xchg
and
cmp
xchg
adc
xor
out
sub
repz
cmp
shl
pushf
rcr
negb
stos
testb
mov
imulb
in
mov
push
pop
lret
adc
cwtl
dec
push
cmp
repnz
popf
or
dec
aad
hlt
loop
adc
stc
orl
push
repz
ljmp
orb
jecxz
out
and
out
sub
mov
int3
sarb
sub
fsubp
cld
sbb
mov
xor
or
add
sbb
out
mov
xchg
jns
dec
data16
adc
ss
mov
mov
mov
and
cltd
into
mov
test
cmpsb
scas
push
mov
test
scas
add
adc
fistps
sbb
mov
push
jecxz
rolb
cmp
insl
fcomip
jle
decb
out
or
dec
bswap
in
mov
or
in
leave
push
inc
lahf
cmp
clc
mov
jnp
out
shrb
imul
mulb
jb
enter
cmp
test
mulb
lcall
pushf
mov
xchg
adc
out
mov
cmpsl
mov
cmp
cmpsl
stc
jbe
cmp
fs
int
xchg
jno
sbb
lcall
imul
and
xor
and
cmp
cld
std
mov
sbbb
lds
filds
sub
jo
ret
hlt
mov
add
aam
addr16
shrl
inc
addr16
stos
das
pop
sub
sbb
in
dec
and
jb
lcall
stos
negl
jp
sub
pop
xor
jp
in
in
or
xchg
mov
addl
jge
out
mov
inc
shll
cmp
sub
or
xchg
fcoms
nop
inc
and
or
xchg
mov
jmp
lret
mov
pop
imul
pop
shlb
jbe
stos
or
mov
pop
sub
mov
rcll
pop
fstps
getsec
push
or
test
cli
cli
push
pushl
add
neg
arpl
pop
insb
dec
aam
sar
push
xchg
inc
inc
mov
sub
fisubrs
stos
cmp
jns
loopne
push
push
mov
and
les
incl
mov
notb
scas
cli
push
and
bound
paddd
mov
inc
mov
jg
es
xchg
lcall
pop
cmpsl
lahf
les
jl
scas
push
test
and
shll
into
pushf
fcom
pop
ja
daa
cltd
icebp
pop
ja
movsb
test
arpl
add
push
mov
js
cltd
adc
sub
nop
xchg
movsb
mov
popf
xor
fwait
ljmp
push
xchg
lahf
ftst
bound
mov
cmpsl
popa
loopne
sub
imul
jle
rolb
orl
insl
mov
pusha
pop
lods
notb
inc
in
sub
pusha
out
divb
add
cmp
jb
mov
inc
xchg
jp
paddq
clc
daa
daa
in
jmp
xchg
cmp
sub
mov
xor
sub
fistpll
dec
and
inc
in
xchg
rcrl
lock
inc
adcb
mov
add
inc
mov
js
mov
stos
mov
and
xchg
dec
outsb
xchg
call
movsb
pop
jb
pop
test
cmp
outsb
std
or
and
insb
or
sub
adc
mov
mov
outsb
out
inc
xchg
inc
pushf
lock
addr16
push
xlat
sub
cli
sbb
data16
sub
fdivrl
pop
jecxz
es
jmp
test
popa
in
std
fsubr
push
xchg
aad
jo
les
cmp
das
pop
pop
dec
xor
outsl
bound
mov
dec
dec
push
ja
push
repnz
pop
jge
pop
cld
mov
inc
in
dec
movsl
aad
fwait
leave
adc
xorb
cmpsl
aam
cltd
mov
xor
inc
sbb
fimuls
mov
xchg
sub
add
jo
ds
and
lock
xor
mov
data16
xchg
fs
xchg
sub
into
jg
cmp
out
mov
cmc
test
aas
add
mov
cmpsb
push
xchg
out
lock
push
out
ret
jmp
or
mov
and
adc
or
push
mov
push
mov
outsb
sbb
or
and
jge
into
dec
or
out
jbe
mov
xchg
mov
js
popaw
hlt
ss
adc
inc
fisttpl
subl
adc
ret
sub
add
fs
jnp
in
fmulp
jnp
sub
movsl
and
das
stc
xchg
and
imul
jno
add
sbb
xchg
push
dec
mov
lods
jg
scas
inc
inc
cmc
fstpt
inc
icebp
dec
xlat
je
inc
out
lods
or
xor
pop
loope
or
test
inc
insb
and
push
mov
outsb
dec
out
mov
push
cmp
testb
pop
outsl
test
and
subb
sub
into
repz
out
xchg
pusha
cmpl
lea
mov
cmpsb
scas
cmpsl
shl
les
mov
out
xchg
repnz
incb
pop
pop
mov
or
cmpsl
shl
jle
mov
pop
icebp
fisubs
push
add
je
and
fisttpll
xchg
outsb
movsb
test
xor
inc
pop
ret
bound
mov
and
xor
or
jge
mov
lahf
lds
js
xchg
mov
cmp
jne
inc
insb
jno
xchg
inc
dec
sub
lahf
jle
xor
mov
popa
out
sub
lahf
jmp
xchg
clc
popa
adc
push
movsl
leave
sbb
daa
pop
in
sub
leave
dec
xchg
jb
adc
jmp
in
vpshld
dec
jg
imul
mov
cld
test
mov
pop
cmp
lret
into
inc
mov
add
lods
mov
sbb
or
mov
sub
test
jmp
cli
cli
jbe
mov
mov
xchg
sti
aas
scas
adc
jno
sbb
fcomps
std
not
xchg
mov
sub
ja
adc
jbe
fwait
dec
inc
mov
mov
movsl
xchg
mov
out
test
push
cmc
pop
orb
and
fildl
loop
sarb
mov
fucom
lock
std
pop
rorl
addr16
mov
test
jmp
fisubl
push
mov
add
leave
push
dec
mov
push
push
cmp
mov
int
mov
fisttps
adc
xor
scas
outsb
dec
jl
xor
sbb
out
mov
orl
sbb
add
dec
adc
jae
rolb
mov
push
test
xchg
outsl
sbb
in
outsl
movsb
cmp
sbb
pop
scas
dec
cld
int
add
inc
mov
negb
imul
loop
ret
mov
sahf
cmp
pop
mov
inc
pop
or
cltd
fadd
out
inc
and
jle
enter
jo
loopne
daa
nop
js
cmpsl
xchg
test
pop
adcb
mov
cmpsb
fstpt
dec
aas
mov
adc
jl
popf
inc
adc
and
outsb
das
xchg
int
push
fmul
and
jg
dec
ja
mov
pusha
call
loope
inc
xchg
std
daa
mov
data16
cmp
icebp
dec
cmp
mov
in
aam
add
xor
mov
adc
mov
xchg
or
jl
pop
or
sub
hlt
lret
mov
sbb
mov
insb
daa
fwait
ret
xchg
xor
sbb
push
sti
rolb
shll
push
xchg
mov
mov
lock
lahf
sub
stos
fs
loop
jmp
adc
call
xchg
adc
repnz
clc
push
mov
cld
out
outsl
stc
cmp
mov
fwait
lock
aad
lcall
mov
adc
loopne
mov
push
js
ret
inc
shrl
test
cmp
ds
addr16
xchg
mov
xchg
push
sub
out
xchg
cld
inc
mov
xchg
mov
mov
imul
push
lcall
je
sub
scas
push
inc
bnd
aad
push
out
dec
mov
xchg
push
cltd
sti
xchg
loopne
push
push
movsb
xchg
jge
xor
mov
add
xchg
je
mov
dec
in
imul
pop
fnstcw
mov
adc
enter
add
das
testl
and
xor
inc
lcall
aam
or
push
ret
cmc
push
fidivrs
jbe
aad
test
out
outsl
dec
sub
pop
lret
inc
mov
add
enter
mov
adc
jge
push
jl
mov
es
iret
out
sub
out
imul
iret
add
movsl
sbb
test
loop
scas
lods
adc
mov
jl
mov
mov
ss
lea
mov
push
mov
ficomps
aam
in
test
fwait
adc
arpl
add
pop
fwait
mov
movsl
mov
cmc
xchg
fbstp
and
shr
dec
lret
push
add
ja
leave
ja
testb
stos
and
jp
mov
fidivl
jne
movsl
insl
mov
sub
into
popa
sbb
mov
fimull
push
mov
add
dec
pop
pop
cld
mov
dec
cs
ljmp
ss
add
std
adc
or
push
adc
and
and
or
jge
out
cmp
subl
out
insb
push
pop
inc
sti
push
aas
lahf
pop
mov
std
and
push
test
mov
into
into
cli
insb
xchg
fsubrl
jns
andb
test
notl
roll
add
pop
mov
into
mov
mov
repz
sub
or
jne
das
xor
fldcw
jb
mov
test
cmp
sbb
repnz
mov
lods
stc
and
test
lods
test
add
andb
push
push
in
jg
mov
mov
shrl
lds
mov
jno
mov
stos
add
out
jl
sub
mov
and
fidivs
push
pushf
shlb
jmp
inc
ja
mov
jp
scas
out
int3
lcall
mov
pop
jg
jge
mov
mov
mov
dec
lahf
jle
pop
adc
mov
dec
ljmp
mov
loop
mov
cld
sub
lret
out
ljmp
ficompl
loop
mov
lret
popf
and
adc
cs
pop
cwtl
push
pop
cmp
movsb
adc
push
mov
sbb
xor
jecxz
fsubrp
mov
jmp
mov
mov
es
leave
and
out
movsb
dec
or
subb
mov
add
in
enter
insl
lods
lret
mov
out
cmpsb
cmp
mov
push
sbb
mov
sahf
xchg
pop
push
mov
push
lea
jmp
rorl
xorb
arpl
movsl
adc
and
nop
iret
dec
xchg
or
repz
outsl
pop
sub
lahf
cltd
jne
mov
pop
jecxz
xchg
inc
shll
adc
and
loope
xchg
and
movsl
lcall
pop
outsl
out
add
fidivl
iret
push
lock
xor
adc
push
nop
test
addr16
jae
mov
sbb
faddl
and
jo
movsb
movlps
imul
out
pop
mov
and
mov
inc
sub
sub
adc
ja
inc
mov
aad
xchg
inc
rcl
adc
cmc
js
xchg
add
loop
mov
enter
test
rcrb
roll
sbb
cs
push
fmul
shlb
fs
inc
test
fcomps
cmpsl
lods
mov
inc
sub
daa
pop
lds
fisubrl
xor
xor
xchg
lret
adc
jle
outsb
add
dec
jmp
mov
sbb
int3
inc
lods
inc
mov
icebp
test
mov
sbb
mov
push
cmpsl
add
lahf
into
lods
repnz
test
jns
inc
lahf
negl
cmp
fs
mov
jecxz
mov
dec
nop
adcb
outsb
mov
hlt
inc
dec
mov
pop
adc
or
mov
xor
mov
daa
jo
cmp
xchg
sub
jbe
mov
sub
jne
jp
lds
push
pop
es
mov
mov
test
dec
loope
inc
adc
lret
add
xchg
inc
cmp
pop
pop
shrd
xchg
ds
xchg
in
arpl
js
cmpsl
stos
test
daa
mov
lret
lods
inc
inc
andl
je
enter
cmp
xchg
pushf
test
setg
repnz
test
xchg
inc
incb
jg
mov
scas
notl
scas
test
adc
stos
testl
rorb
jl
lock
sahf
sarl
sub
aas
or
lods
inc
repz
cs
fwait
jnp
adc
and
mov
lret
daa
movsb
cmp
mov
pushf
sub
or
ja
add
dec
add
mov
mov
jecxz
mul
les
nop
mov
or
sbb
mov
test
push
push
rcrb
movsb
pop
testb
and
jbe
push
orl
jo
xchg
mov
jmp
mov
mov
repnz
adc
adc
fdivs
mov
mov
repnz
rorb
cmpsl
jae
mov
pop
scas
pop
lods
jle
test
aad
cmc
test
imul
push
outsb
mov
outsl
jae
or
test
mov
mov
xchg
dec
lds
mov
hlt
mov
sub
adc
and
pushf
fwait
hlt
idivb
xchg
add
mov
xchg
loopne
or
pushf
lods
sub
subl
idiv
jmp
cmc
outsb
mov
stos
mov
mov
mov
mov
mov
jl
dec
push
xchg
test
inc
inc
test
out
fisttps
sub
inc
pop
push
adc
insl
and
or
bswap
jne
insl
call
push
sbb
shrl
popa
inc
out
cld
imul
sahf
or
test
pop
inc
or
adc
add
decb
cmp
inc
mov
inc
mov
pop
push
mov
sub
pop
movsb
cwtl
pop
sub
lods
jecxz
lea
test
push
xchg
popf
xchg
xchg
xchg
gs
mov
loope
mov
adc
out
cmpsl
and
imul
sub
mov
jl
and
adc
sub
xor
push
jne
rcll
mov
inc
movsb
jno
pop
cmp
mov
mov
stc
cmp
mov
roll
xchg
je
cwtl
push
adc
push
ret
mov
mov
push
pop
cmpsl
mov
fld1
das
arpl
fists
cmp
mov
jns
lods
sub
ja
mov
jne
fistps
inc
sub
outsl
sub
stos
sbb
mov
mov
fsubrl
bound
xor
aaa
hlt
push
xor
stc
je
mov
fsubrs
scas
or
mov
jmp
jg
mov
or
cmpsb
cld
nop
inc
mov
mov
movsb
xchg
push
ficompl
int
jo
jle
out
outsb
stos
sbbb
bound
and
imul
shl
mov
jl
movsb
xchg
icebp
je
jno
cwtl
or
aam
stos
fidivs
imul
fcomps
add
sahf
cmp
inc
push
movsb
inc
js
jge
scas
lahf
pushf
xorl
clc
shrl
cltd
push
adc
adc
inc
sbb
movsb
jbe
rcrb
jecxz
enter
pop
sti
clc
out
bound
call
ja
mov
cli
xchg
mov
xchg
cwtl
jle
fidivrs
inc
mov
test
add
mov
in
cmpsl
xorb
sub
adc
mov
xchg
sub
add
ret
dec
aas
mov
jnp
jp
std
ficoml
sub
nop
xor
push
cs
inc
dec
mov
repz
shl
adc
push
xchg
inc
lret
push
fisubrl
pop
xchg
pop
pop
lret
rcrl
xor
add
inc
xchg
cltd
cmp
pushl
sbb
pop
test
jge
cmp
mov
enter
mov
stc
xor
or
xchg
cmpsb
lds
shlb
cmp
shrb
mov
push
mov
mov
outsl
push
inc
and
xchg
adc
lods
pop
pushf
stc
and
mov
jae
inc
jg
and
jo
mov
out
push
push
mov
inc
sub
out
movsl
adc
mov
das
cmp
pusha
rclb
dec
push
out
or
mov
aas
js
xor
jns
jg
xchg
add
les
outsl
lret
mov
scas
push
inc
leave
leave
cmp
clc
jo
jns
incl
std
lock
ljmp
out
dec
cmc
adc
jl
cmp
push
inc
push
popf
sub
out
inc
repnz
std
cmp
test
imul
movsl
sti
outsl
jg
mov
push
and
clc
jmp
sbb
dec
in
mov
pop
fdivr
sub
dec
add
sbb
imul
xchg
or
push
or
add
mov
push
pusha
pop
mov
in
xchg
imul
arpl
dec
pop
aam
nop
in
lcall
fidivl
rorb
iret
pop
cmpsl
in
dec
xor
mov
lods
inc
jp
fdivrl
mov
repz
mov
add
mov
lock
xor
movsb
pop
das
into
out
cltd
cmc
mov
in
jb
push
cld
inc
mov
jb
frstor
xlat
les
stos
out
aad
fbstp
insl
scas
outsb
push
mov
cli
pop
outsb
aas
xchg
xchg
lret
into
mov
bound
mov
jp
icebp
cltd
sub
dec
mov
ja
ret
mov
into
repnz
pusha
mov
insl
add
dec
mov
sarl
lret
push
and
or
sub
fadd
lea
mov
lret
data16
jo
daa
adc
xchg
arpl
loop
aaa
lcall
adc
stc
and
xchg
es
fdivrl
insb
mov
xlat
stc
movsb
jbe
insb
pushl
scas
sub
cmp
jbe
dec
pop
fdivrl
sbb
cwtl
mov
mov
fistl
lea
mov
xchg
in
testb
call
pusha
dec
push
je
or
ljmp
mov
jns
int
adc
pop
xchg
je
lea
pop
imul
adc
mov
pop
mov
int
add
dec
mov
sbb
mov
adc
out
movsb
ds
sub
stos
and
lret
mov
fisttpl
fisubrl
pop
cmpsl
push
add
mov
imul
xor
inc
mov
gs
popa
xchg
adc
adc
mov
sub
inc
pop
std
jmp
bound
mov
jge
mov
cmp
cld
mov
push
mov
out
in
imul
mov
mov
push
lea
fildll
push
mov
jmp
dec
xchg
stc
cs
inc
cwtl
add
and
inc
mov
inc
and
dec
lret
sub
add
mov
xor
jo
xor
fs
enter
repz
enter
je
jno
daa
mov
jnp
mov
sbb
ljmp
stc
imul
jl
jmp
xchg
lods
in
fwait
ja
cltd
jae
movsl
mov
add
movsl
xchg
mov
adc
ds
xor
aad
lea
out
incl
rorl
cmpsb
movsl
out
lret
or
inc
bound
std
pop
ret
mov
shl
addr16
jns
shr
fiadds
cmpsl
mov
scas
shrb
xchg
out
data16
ljmp
rclb
add
push
shlb
inc
mov
xchg
mov
fs
call
int3
sub
cmp
fcmove
das
push
aaa
jae
bound
push
or
inc
mov
cltd
or
andb
pushf
pushl
pop
stos
jl
scas
jp
ficoml
or
sbbb
adc
cli
rorl
jecxz
sahf
inc
movsb
std
outsl
inc
pop
sbb
dec
mov
or
jns
insb
lret
jbe
dec
xor
inc
push
sarb
in
data16
jle
rorl
mov
imul
pop
mov
mov
mov
sti
mov
lcall
or
cltd
mov
push
jb
inc
test
cs
mov
hlt
mov
test
test
cmpsb
cmpsl
jae
daa
jno
jnp
stc
std
mov
xchg
in
and
lods
adc
ret
adc
push
or
lcall
movsb
lods
std
aam
cmp
adc
xchg
dec
subb
jle
mov
jns
mov
loop
mov
outsl
lea
pop
lods
mov
jmp
push
adc
xchg
lea
scas
mov
cmp
mov
adc
icebp
mov
mov
idivb
jecxz
fwait
bound
xchg
dec
mov
mov
mov
fnsave
mov
xlat
xchg
mov
push
shl
cmpsl
pusha
imul
add
in
xchg
mov
movsb
pop
lea
sbb
push
jmp
bsr
test
jl
aaa
daa
xor
pop
fbstp
lods
cmp
add
rcll
and
flds
push
sbb
movsl
jl
add
mov
cmpsl
in
in
dec
jne
fisttps
aas
lds
popa
inc
test
lds
sarb
out
ret
mov
jns
out
push
dec
stc
xchg
inc
xchg
push
xor
add
push
loope
flds
cmp
loope
data16
outsl
cltd
sbbl
xchg
xchg
jecxz
dec
in
es
sti
sbb
fistpl
cmp
sub
xor
inc
pop
out
or
jns
push
in
loope
ss
fcomi
jmp
sti
lds
push
add
iret
mov
ljmp
hlt
sub
mov
jle
icebp
push
push
add
cmovno
cmc
movsl
out
cmp
loope
leave
divb
cmpsb
mov
movb
scas
dec
jecxz
fwait
mov
idivl
mov
aam
iret
lock
xor
ss
aam
mov
imul
and
sub
xor
jecxz
dec
mov
enter
outsl
sbbb
xchg
call
cmpb
add
mov
mov
lods
xchg
xchg
jo
push
shrb
mov
mov
mov
cwtl
cmp
icebp
cmp
lods
push
icebp
in
test
fwait
in
or
cmp
int3
sub
lret
mov
sub
push
xchg
and
scas
ss
das
fmuls
adc
cmc
icebp
inc
add
and
push
sub
adc
nop
lcall
mov
daa
push
mov
xchg
mov
shrb
mov
push
sbb
test
fsin
adc
fistpll
jmp
jge
jnp
add
mov
push
mov
shll
scas
xchg
adc
jnp
and
bound
jmp
sub
push
mov
push
inc
icebp
faddp
add
push
out
sarb
outsb
movsl
push
icebp
inc
pop
adcl
xlat
icebp
dec
addr16
inc
das
lahf
inc
shr
sahf
push
sub
test
mov
sbb
jl
dec
aas
lret
xor
jne
scas
cmc
push
jbe
pop
test
insb
push
jb
stc
adc
sbb
jecxz
sub
and
sub
popf
pop
lret
mov
stos
add
xchg
lret
xor
ljmp
cmp
es
lret
jmp
xchg
dec
push
test
shll
into
test
mov
inc
mov
add
aam
mov
bound
jns
subl
push
adc
jle
lods
xchg
imul
cs
mov
cmp
repz
cmc
and
cmc
in
xchg
add
stos
dec
mov
xchg
xchg
cli
arpl
push
aam
add
stos
pop
fwait
mov
jl
cmp
test
shll
push
mov
sbb
out
jecxz
fiaddl
push
jbe
mov
daa
mov
jecxz
inc
cwtl
xchg
movsb
push
roll
pop
sbb
test
inc
xchg
push
out
adcb
sub
or
and
jns
test
mov
iret
dec
jne
cmp
dec
xor
jae
lret
aam
or
jae
dec
cmp
jp
daa
mov
add
popf
adc
ja
das
cld
jp
jecxz
lods
adc
test
stc
loop,pt
neg
out
pop
pop
xchg
sub
ds
add
fildl
push
xorl
push
mov
jle
mov
je
int
sbb
shl
sub
push
jl
dec
das
dec
jns
mov
sub
call
jp
scas
pop
dec
mov
mov
js
negl
jge
pop
enter
pop
ret
mov
mov
ljmp
stos
dec
cmp
std
sub
mov
test
xchg
and
push
add
push
sbb
scas
inc
lea
pusha
sbb
dec
or
xorb
adc
in
repz
mov
mov
mov
lahf
mov
cmpl
xchg
push
aad
ljmp
inc
add
sub
in
rolb
cld
jmp
and
sub
cmpsb
andl
xchg
mov
add
mov
aaa
inc
test
loope
out
sub
mov
push
mov
lea
stc
add
inc
push
pop
jo
aaa
outsb
inc
flds
add
arpl
out
cmpsl
stc
or
fimull
psubw
call
icebp
test
ror
jno
fidivs
testl
fimuls
dec
ljmp
test
adc
scas
stos
pop
xor
imul
dec
aaa
push
lock
lock
mov
push
cmp
or
test
pop
fwait
jbe
shlb
movb
outsb
mov
cmp
or
daa
adc
cmp
decl
insb
sub
ret
or
test
mov
ljmp
cli
and
sarb
inc
jo
mov
xchg
lods
in
push
push
in
inc
sbbb
push
loop
mov
add
sbb
xchg
cmp
pop
dec
lret
xchg
call
mov
sub
sbb
mov
or
scas
lret
mov
cmp
aaa
lea
and
ret
xchg
mov
outsl
push
imul
int
pop
push
mov
cmp
xchg
je
hlt
mov
mov
inc
pop
sub
fldl
push
inc
sub
fs
scas
loopne
je
mov
test
out
add
insb
sbb
subl
mov
jnp
inc
stc
xchg
mov
movsl
cmp
mov
pusha
or
pop
push
jecxz
xchg
push
sbb
or
adc
mov
insl
mov
dec
imul
mov
pop
aad
pop
ljmp
push
daa
int
cwtl
mov
hlt
mov
dec
sub
daa
and
mov
lea
lcall
leave
inc
sub
jp
sahf
xlat
mov
test
and
push
loope
pushf
jmp
mov
jmp
mov
sub
into
push
insb
xor
ret
dec
mov
lods
jae
jmp
repz
js
push
xchg
sub
sbb
test
cmp
mov
mov
sub
rolb
and
cmp
cltd
mov
adc
pop
rcrb
jae
xor
dec
adc
push
or
jb
test
inc
cmp
jmp
pop
nop
es
jnp
stos
jns
mov
and
push
popa
popa
cli
cli
addl
mov
stos
cmp
loop
stos
bound
mov
or
mov
shlb
jle
push
inc
adc
mov
stos
xchg
push
sub
setnp
lods
in
jns
lea
pop
mov
out
inc
jecxz
in
cmp
xchg
das
mov
call
cmpb
filds
aas
into
pop
lret
movsb
xchg
mov
int
push
mov
sub
mov
mov
icebp
jmp
xchg
mov
xchg
dec
movsl
icebp
push
fnstsw
cmp
insb
mov
inc
sub
ret
rolb
xchg
outsb
aas
pop
sub
pop
std
fadds
popf
repz
mov
or
in
lret
inc
into
adc
mov
sbb
lds
gs
sti
lret
cmpsb
repz
mov
add
ja
cmp
andl
xlat
out
push
or
adc
xchg
and
icebp
push
jl
jg
mov
ret
xor
mov
lcall
jl
xchg
push
test
cltd
in
in
lods
cs
pop
pop
adc
cmpsl
push
mov
je
push
imulb
test
aas
sahf
inc
pop
add
push
xchg
imul
add
xchg
jo
lock
inc
push
sahf
pop
mov
and
or
dec
pop
shll
stos
ds
cmp
notl
and
cmovnp
fcomps
pop
lcall
mov
mov
imul
inc
movsl
inc
dec
popa
cli
cmp
pop
loopne
cmp
inc
dec
lods
data16
iret
stos
dec
fiadds
adc
lods
jmp
inc
and
or
in
mov
dec
hlt
push
popl
mov
xchg
jle
ret
pop
nop
aas
lea
ljmp
pop
gs
push
xchg
sub
and
setg
jnp
cmpsb
nop
popa
out
mov
dec
jbe
fcoms
pop
imul
mov
xorb
mov
sub
ret
test
test
push
sub
adc
sub
repz
jecxz
bound
test
test
pop
pop
and
pop
pop
aaa
pcmpeqd
ljmp
lret
jl
and
jle
aad
test
pop
dec
and
mov
jl
and
das
mov
mov
xchg
iret
and
xchg
add
loope
adc
test
xchg
ds
adc
jecxz
push
aaa
sub
psubusw
mov
out
jl
das
xor
ss
fcoms
aam
mov
les
cs
into
fidivl
nop
loopne
ljmp
mov
and
push
into
daa
and
mov
fidivs
aaa
in
std
ja
dec
call
rolb
mov
jae
sahf
push
pop
sbbb
mov
and
push
xor
daa
jb
cwtl
dec
je
mov
pusha
stos
jle
mov
ds
sub
rclb
out
adc
in
insb
dec
out
or
ja
fimuls
imul
pop
popf
ljmp
xchg
dec
mov
repz
aaa
lahf
inc
mov
push
mov
jb
addr16
push
leave
adc
movsl
test
fidivrs
push
scas
fisubrs
rcll
aaa
fdiv
jmp
jmp
dec
mov
out
and
mov
in
jl
mov
push
scas
xchg
cmp
sbb
cmp
sbb
push
bound
arpl
sub
mov
nop
inc
es
jne
rcrl
dec
push
clc
xchg
dec
inc
pop
xchg
imul
pop
push
lahf
pushw
shll
jbe
jns
or
xchg
lock
stos
or
jecxz
jmp
add
lret
adc
mov
aam
jecxz
push
cmp
dec
xchg
pop
jmp
fcomps
fcmovnb
std
xchg
dec
cmc
jg
aaa
inc
pop
jae
clc
fdiv
jmp
xchg
out
incl
lea
leave
cmp
arpl
std
ds
jo
sbb
adc
bound
jg
arpl
mov
outsb
rcr
xor
adc
mov
add
out
lea
mov
js
addr16
xlat
mov
or
clc
popf
mov
inc
push
jne
fisubrs
sub
loopne
push
movsl
hlt
mov
jns
cmc
fldl
jmp
mov
xor
mov
cld
dec
sub
dec
js
mov
je
and
xor
insb
iret
or
rol
das
sarl
mov
mov
out
push
out
lret
insb
rolb
cld
sub
mov
fnstenv
and
push
mov
ficomps
nop
mov
push
sbb
dec
push
add
aas
lret
mov
nop
push
jge
and
pop
and
inc
mov
fs
call
mov
ds
in
fdivrl
or
cmp
std
imulb
lret
push
jno
xchg
xchg
test
jmp
scas
fdiv
jae
jbe
mov
push
cmp
mov
lret
hlt
jo
stc
mov
shrb
daa
lcall
add
inc
loopne
or
ficomps
mov
cs
dec
fwait
xchg
sub
mov
call
std
mov
sub
loopne
mov
out
pop
mov
in
or
mov
add
sbb
inc
aas
push
xchg
add
dec
inc
lcall
pop
sarb
add
mov
mov
mov
mov
outsl
int3
andl
push
gs
or
shll
jmp
arpl
cmp
fcoms
cmp
mull
lea
icebp
in
jns
cs
stos
lds
xchg
fadd
inc
imulb
jecxz
sti
sti
loope
mov
jle
jbe
and
inc
dec
movsb
cli
pop
rcl
js
jb
sbb
aas
fisttpll
xor
arpl
dec
movsl
outsb
dec
sbb
xchg
inc
movsl
sbb
xchg
push
aas
je
mov
aas
ja
push
loop
or
ja
mov
adc
in
adc
fs
ret
push
sub
fscale
sbb
and
adc
mov
sbb
push
mov
sub
or
or
outsb
adc
xchg
ret
pop
jecxz
sahf
mov
js
jbe
pop
cmp
mov
test
mov
iret
cmp
rcll
jle
jno
mov
mov
fidivrl
fs
inc
and
cli
mov
inc
ljmp
bnd
js
scas
stos
movsl
or
daa
pop
sbb
or
ret
lods
adc
dec
fiaddl
cmp
sbb
stos
ljmp
in
lcall
pop
mov
jo
or
fcompl
call
pop
adc
cmpsb
jne
fcoml
mov
shll
sub
sti
enter
push
pusha
dec
xor
mov
sti
inc
jmp
iret
in
push
and
jle
mov
lds
pop
xchg
stos
cli
repnz
movsb
cmp
std
clc
rcrb
mov
inc
mov
mov
inc
push
lods
dec
push
xchg
push
sbb
push
aas
aas
push
push
insb
push
mov
pusha
in
mov
sub
std
pop
js
stc
insb
sub
mov
cmp
cmc
mov
push
jne
mov
mov
pop
enter
bound
rcl
enter
pop
insb
add
into
mov
insl
notl
jne
mov
mov
jg
and
imul
divb
mov
cli
xlat
mov
mulb
into
lds
fnstsw
pop
inc
das
mov
jo
inc
mov
subb
scas
das
jne
ds
std
mov
out
test
dec
push
pop
add
rclb
mov
add
pop
sub
nop
push
mov
arpl
sarl
lods
mov
test
loopne
jmp
js
imul
ljmp
and
sbb
cmp
movsl
xorb
xor
loop
sub
mov
or
clc
in
stos
ficoms
inc
jmp
xchg
stos
daa
ljmp
pop
lods
mov
nop
cmp
adc
mov
shl
sub
push
lea
or
fstpt
cwtl
pop
jle
and
cmpsl
ret
aad
fstps
mov
or
pop
xchg
mov
or
sbb
mov
leave
mov
jg
out
cmp
dec
mov
insl
data16
out
mov
cmp
or
aaa
mov
cltd
mov
outsb
pop
mov
out
lods
mov
pop
in
js
bound
pusha
mov
fstpt
lcall
hlt
jmp
lods
inc
ret
jecxz
stc
int3
fmul
cli
in
fnstenv
or
add
cmp
push
divl
in
xchg
jle
movsl
scas
xchg
lock
test
test
dec
out
mov
add
push
in
std
sbb
pop
scas
cld
das
cltd
enter
rcll
mov
jne
mov
sbb
mov
icebp
and
or
sub
sub
negl
push
pop
dec
mov
xlat
mov
jle
test
inc
dec
fwait
and
or
out
mull
mov
cltd
pop
jbe
xchg
xchg
movsb
std
mul
mov
dec
lcall
test
push
mov
cmpl
mov
lea
arpl
cmp
mov
cwtl
enter
data16
out
jno
sbb
mov
test
aas
xor
lea
test
jmp
mov
std
call
out
repnz
int
jge
pop
in
js
ficomps
clc
and
pushl
ret
xchg
mov
mov
mov
mov
mov
sub
cli
imul
mov
test
pop
lret
mov
rorl
insb
movsl
loopne
jle
sbb
fmul
sub
pop
mov
inc
imul
dec
push
jo
sub
bound
cmpsb
jmp
adc
mov
outsb
scas
and
ds
enter
iret
and
push
add
lock
shr
imul
adc
mov
mov
lods
mov
mov
lret
push
push
int
xchg
ret
movsl
lods
lock
inc
jno
outsl
pop
clc
ljmp
push
push
jmp
test
xchg
cmpb
push
fdiv
pxor
out
xchg
popl
loop,pt
cwtl
mov
mov
mov
mov
mov
dec
xchg
cwtl
repz
ja
lret
mulb
out
or
aaa
aas
sahf
ja
lahf
jnp
adc
dec
dec
push
add
adc
mov
mulb
dec
cmp
adc
xorl
jge
dec
adc
jecxz
cmpl
loope
cmp
fildll
sbb
jb
add
imul
loop
sub
jb
pop
dec
call
or
and
lods
stc
jl
flds
mov
push
push
fildl
pop
jbe
fnsave
je
bnd
fnstsw
pop
mov
push
mov
inc
stc
pop
scas
aam
jbe
in
pop
cmpsl
loopne
push
lcall
push
xchg
outsl
xchg
lcall
xchg
mov
mov
stos
stc
jnp
js
mov
add
cli
inc
fdivp
gs
lods
filds
fsubl
jnp
mov
aam
pushf
or
or
test
pop
cmp
cmovle
xchg
sbb
idivb
aad
mov
cmc
xchg
push
das
inc
aas
std
mov
jle
test
in
pop
lret
ljmp
sub
clc
xor
fidivrs
stc
cmp
in
cwtl
mov
into
cmc
js
adc
xchg
mov
xchg
dec
std
daa
pop
mov
inc
outsb
sub
mov
fcomps
sub
ret
mov
jle
lret
loopne
or
das
xor
dec
outsb
adc
push
cmpsb
sbb
loop
addr16
mov
xchg
daa
lods
fs
mov
fisttpl
xchg
arpl
leave
movb
adcl
and
fsub
outsl
jb
cmpsl
adc
jno
lret
insl
scas
mov
mov
adc
out
in
movsb
inc
sub
adc
push
aam
mov
mov
std
mov
test
std
dec
iret
ret
shrl
xchg
jle
xor
inc
daa
imul
pop
xchg
cmpsb
sbb
stc
js
fcoml
mov
cltd
mov
sbb
das
test
xchg
fwait
es
sub
sbb
stos
push
push
ds
arpl
ljmp
dec
pop
aam
sti
stc
insl
mov
stos
xor
or
push
cli
adc
addr16
adc
and
pop
jbe
sbb
fildl
jnp
out
or
jmp
in
push
push
bound
rclb
jge
xor
mov
adc
cmp
popf
addl
mov
lahf
les
mov
in
cmpsb
jl
aam
cmp
mov
scas
test
jmp
shrb
and
push
jmp
call
pop
jb
xchg
push
cld
jp
push
inc
xlat
clc
lcall
mov
popl
cmc
ds
mov
icebp
div
pusha
or
jg
lds
pop
xor
lcall
popf
dec
sti
or
stos
add
ljmp
add
ja
mov
sahf
jb
sub
lcall
cmp
xchg
inc
test
or
pop
mov
pop
push
out
mov
inc
addr16
stos
inc
lock
fisttpl
rorl
stc
xchg
mov
movsl
push
idiv
dec
sarl
jl
mov
adc
mov
gs
dec
push
dec
lea
adc
sarb
or
subb
jmp
mov
clc
sbb
push
das
adc
cs
mov
icebp
jg
jae
mov
sahf
jns
stc
jmp
mov
fwait
xchg
in
out
sub
lcall
fsubp
mov
dec
fldl
loope
das
push
inc
sahf
lock
inc
testb
mov
mov
enter
push
das
test
bound
mov
cmp
repz
xor
aas
or
mov
add
les
jecxz
cs
lock
mov
mov
and
sbb
out
jle
push
jno
arpl
faddl
xchg
adc
outsl
lock
fbld
jle
xchg
fisubrl
shl
or
xchg
rolb
setno
js
fs
es
mov
add
mov
fcmovne
into
pop
aas
pop
adc
notl
mov
cmp
cld
mov
mov
add
pop
fsts
or
jecxz
sub
xchg
or
adc
mov
inc
mov
mov
xor
cmp
jge
fscale
lret
xchg
or
mov
mov
push
jmp
sar
adc
loopne
pushf
inc
xchg
jae
xor
fiadds
scas
in
aaa
adc
push
fcmovbe
test
lret
jnp
call
mov
push
pop
or
ja
lret
scas
push
movsb
lret
sbb
push
push
sub
push
jge
ret
mov
pop
xchg
mov
xor
cli
mov
das
ret
cs
xor
iret
cmp
push
push
mov
rol
test
ss
outsb
lds
xor
fwait
out
sbb
and
add
lahf
mov
push
mov
add
test
mov
ds
neg
xor
aam
mov
lods
insl
loopne
mov
mov
insb
push
or
mov
jmp
mov
mov
cwtl
pop
sub
mov
inc
cmc
push
inc
inc
ret
cmp
out
popf
daa
idivb
pop
mov
stc
lods
xchg
or
ficompl
and
bswap
dec
dec
mov
imul
icebp
mov
stos
push
mov
xor
cli
adc
stos
lock
mov
subb
xchg
rcl
in
push
fbld
in
js
adc
lock
push
outsb
inc
jae
stos
pop
cmpsl
push
movsl
and
imul
pop
enter
andl
inc
imulb
xchg
jns
hlt
movsb
enter
dec
cmc
jo
dec
in
cltd
mov
outsl
and
mov
inc
aad
add
mov
or
mov
sub
les
cltd
xlat
mov
testl
cmp
test
div
jecxz
and
fwait
push
js
push
js
dec
dec
adc
cmpsb
dec
testl
inc
dec
sbb
and
dec
lret
stos
clc
and
scas
xchg
bound
repnz
das
nop
xchg
test
inc
push
stos
sub
adc
ss
pop
fsubrl
xchg
push
push
sti
fbld
es
and
sub
lahf
test
push
or
adc
mov
jnp
xor
in
in
jo
arpl
xor
xchg
xchg
test
fisubs
insl
jmp
test
pop
mov
daa
loopne
nop
andb
adc
dec
jmp
jbe
sbb
jae
mov
shlb
add
jno
mov
dec
mov
inc
fnsave
xor
mov
mov
xchg
cmp
sub
int
daa
sub
shlb
and
mov
mov
das
sub
std
xchg
popf
daa
testl
and
sbbw
xchg
jle
fildll
ficoml
fidivrl
jecxz
push
fisubrl
xor
int3
push
ja
loope
jae
cld
std
bound
mov
mov
je
and
stos
or
mov
mov
bound
lcall
insl
sub
jb
outsl
xchg
mov
mov
mov
inc
dec
mov
movsl
mov
pop
repnz
out
lahf
or
jnp
or
pop
test
jnp
xor
jno
in
push
pop
dec
sub
mov
mov
cmpsb
leave
jo
and
scas
pop
fwait
mov
xor
jo
repz
rcll
xchg
xchg
xchg
or
mov
rcll
sub
push
sub
jp
dec
lret
ret
push
mov
and
dec
in
arpl
dec
inc
add
sti
push
mov
jnp
mov
xchg
test
push
mov
scas
and
popf
shll
into
push
jp
pop
jae
pop
mov
or
in
das
pop
pop
jnp
lcall
lods
sub
and
adc
movsl
pop
imul
push
scas
loop
stc
shll
push
stos
mov
mov
mov
xchg
mov
ret
xchg
or
sahf
cli
xchg
stos
cmpsb
stos
pop
jno
xchg
repz
mov
test
pop
fistpll
and
das
cmp
ds
test
jno
cwtl
xor
enter
ficoml
push
mov
dec
repz
ret
ljmp
or
mov
mov
lods
insl
mov
lahf
pop
mov
or
jg
stos
sbb
test
fisubrl
sbb
scas
push
jb
add
cli
imul
imul
loop
ret
mov
sbb
or
ljmp
std
pop
push
movsb
push
outsb
mov
sub
jg
les
cmpsb
mov
imul
adc
pop
push
cli
sahf
push
mov
xchg
scas
shrl
adc
enter
cmp
sub
stos
inc
or
enter
cmpsl
xchg
popf
pop
and
aaa
mov
or
out
sbb
sbb
cmpsl
ds
daa
out
xchg
or
ror
aas
mov
mov
dec
outsb
or
out
adc
mov
sub
repz
mov
imul
xchg
mov
out
mov
clc
mov
out
adc
mov
adc
mov
mov
inc
xchg
sbb
adc
ret
mov
sbb
ficoml
clc
aas
mov
and
or
arpl
fwait
mov
inc
sti
or
inc
stos
dec
xor
ret
inc
pop
fucomi
push
jbe
inc
into
repz
mov
cmpsl
ret
pop
js
inc
ds
jno
pop
aaa
push
outsl
mov
ss
fwait
sbb
das
mov
jecxz,pt
mov
out
push
mov
aas
sbb
and
push
cmp
pop
pop
out
dec
orb
pop
sti
inc
xor
mov
subb
jae
mov
stos
jmp
mov
mov
jl
pop
into
pop
popa
dec
int3
mov
out
stos
pushf
mov
imul
ret
mov
xor
cmp
dec
jecxz
sahf
pop
sub
leave
negb
push
mov
mov
mov
movsl
sahf
daa
ds
decb
clc
mov
dec
ret
mov
daa
dec
xchg
mov
mov
cmpsl
mov
lret
push
aas
rol
stos
ds
xlat
loop
jmp
mov
movsl
out
jae
and
repz
pushf
jmp
mov
pop
adc
in
jp
out
call
xor
cli
ljmp
shl
cli
lret
scas
and
lret
int3
sbb
iret
enter
adc
mov
add
or
pmaddwd
sahf
dec
mov
scas
dec
mov
cltd
inc
mov
mov
scas
jg
cmpsl
sub
rcrl
stos
xchg
test
cmp
xor
adc
es
jmp
ljmp
bsf
cmpsl
push
mov
mov
out
daa
ljmp
call
and
jle
frstor
imul
sgdtl
cmp
scas
mov
xchg
mov
cmpxchg
stos
dec
repz
out
lret
out
iret
fdivrl
mov
and
lret
in
fimull
xlat
cli
mov
into
cmp
mov
out
cmp
addr16
ds
ficomps
inc
data16
sub
insb
mov
jle
loop
jmp
mov
jge
sub
xor
push
pop
inc
mov
hlt
into
das
repz
mov
jbe
out
shrb
or
sub
or
fstl
pop
imul
sahf
pop
loope
push
ret
push
aaa
repz
pushf
sti
mov
xchg
pop
adc
out
xchg
xor
jae
mov
outsb
js
mov
std
ret
and
mov
jae
cltd
or
adc
mov
aaa
pop
cmp
xor
inc
mov
xchg
mov
repz
out
out
or
das
push
mov
xor
mov
mov
add
cmp
cmp
cmp
cltd
bound
cltd
cmpsl
jge
mov
sbb
fisttps
cld
fimuls
into
cmpsb
pop
jno
lahf
push
pop
mov
and
mov
mov
xchg
mov
or
inc
sbb
mov
das
or
sub
stos
les
mov
or
aas
cmpsb
shrb
pop
xchg
ret
scas
adc
mov
fs
cld
ljmp
sub
mov
push
test
xchg
sti
adc
pushf
mov
sbb
stc
jg
mov
mov
push
jp
nop
cli
push
adc
xchg
xchg
and
mov
mov
sub
lret
push
sub
mov
pop
adc
or
insb
jns
sbb
and
mov
cld
jno
push
movsb
scas
adc
mov
movd
or
push
dec
mov
xchg
or
cmp
jo
nop
cmp
mov
movsb
ret
mov
pop
lock
jnp
outsb
pop
mov
scas
pop
testl
sahf
jbe
sub
xor
add
and
mov
lahf
into
cmp
sbb
xchg
sahf
mov
aad
mov
pop
fdivrs
shrb
mov
push
pushf
stos
mov
mov
push
jns
mov
nop
adc
mov
mov
adc
sub
arpl
scas
call
mov
das
pop
add
fwait
test
and
push
jae
jbe
es
clc
outsl
and
jp
lret
mov
cli
push
xor
loope
inc
jle
loopne
outsb
ficompl
jb
push
xchg
leave
insl
fwait
xchg
cli
ss
xchg
jle
pusha
out
jns
insb
stos
pop
aaa
push
sti
xor
mov
dec
xor
mov
rorb
cmp
pop
mov
setb
and
rcrl
aaa
test
push
ljmp
sub
jmp
iret
or
fsubrp
test
mov
rorl
loop
adc
dec
sbb
test
xchg
push
cmp
adc
mov
mov
fs
decb
mov
and
cmp
lds
out
push
xor
ret
add
mov
and
decb
ret
or
sub
testl
cwtl
rolb
mov
fmul
fldl
cmp
out
pop
mov
push
out
lods
inc
mov
cwtl
hlt
fnstcw
insl
add
lods
ss
lds
dec
fsts
icebp
dec
mov
mov
fidivl
repz
enter
adc
pushf
xor
sub
or
or
cmc
add
test
in
lret
jp
jns
ds
sub
stc
call
repz
cli
adc
adc
ljmp
fidivl
or
aam
rorb
dec
pop
out
aas
dec
fwait
loop
xchg
and
cmp
xchg
inc
adc
xchg
add
sbb
mov
cs
out
adc
xor
lea
movsb
add
mov
jmp
leave
adc
lock
pop
inc
cmpsb
inc
mov
movsb
leave
push
into
int
xor
test
hlt
pop
inc
nop
popa
mov
jge
fwait
in
inc
arpl
push
jp
out
xchg
pop
jo
fcmovbe
ja
out
fiaddl
jae
arpl
mov
and
jecxz
sub
int3
pop
mov
cmp
push
in
jle
or
jno
xchg
cld
cmp
aas
sti
fcompl
xor
jle
shld
decl
cmpsl
push
lock
dec
ret
mov
cmpps
mov
in
lahf
xchg
ret
ds
cmc
inc
jmp
gs
adcb
shll
js
push
std
cmpsl
sar
aam
jae
lods
xor
fidivs
pop
adc
testl
xor
mov
push
rorl
sbb
pop
add
mov
mov
dec
js
movsb
sti
adc
roll
lea
sub
and
lcall
jecxz
call
dec
mov
and
sbb
inc
les
jmp
shl
or
addr16
fs
xor
mov
loope
sti
sub
xor
les
movsl
adc
dec
pop
lahf
sbb
adc
push
sub
push
cmp
ror
pop
cmc
xlat
adc
inc
mov
leave
daa
lret
add
lcall
movl
and
mov
sub
idivl
in
sub
imul
int3
dec
cmp
fdivrp
sbb
andl
hlt
mov
mov
rcl
and
sbb
and
ficoml
int
cmpb
cmc
mov
es
inc
pop
dec
ljmp
es
xchg
cmpsb
xchg
bound
and
insb
vcmppd
adc
push
pushl
addr16
or
punpckhwd
sub
xchg
shlb
mov
add
out
icebp
loop
pop
mov
fmuls
adc
lock
mov
and
aaa
push
and
push
jmp
mov
cltd
mov
pushf
data16
in
jle
daa
push
out
mov
sub
jecxz
nop
bound
push
out
cmp
mov
call
mov
shrl
notl
jg
push
out
mov
cs
mov
ficomps
cmpsl
out
inc
adc
sub
rcrb
cld
repnz
cmp
xorb
xor
int
sbb
movb
rol
out
cmc
adc
ss
mov
push
mov
movsb
adcl
lret
decb
inc
cltd
divb
ret
xchg
fwait
inc
and
and
lds
add
sbb
stos
aas
and
loop
adc
es
aam
or
or
arpl
cmc
enter
jp
test
jl
ret
mov
test
mov
mov
mov
inc
lea
mov
ss
mov
movsb
push
shl
mov
pop
repz
lret
fwait
out
ljmp
sub
mov
push
sahf
fisttpl
push
push
loopne
xor
sbb
jae
pmaddwd
pop
repz
or
stc
ret
arpl
aas
push
cwtl
mov
jecxz
push
cmp
xor
ljmp
push
loopne
scas
cmp
out
sub
out
call
mov
dec
mov
lret
fcomps
mov
mov
mov
out
cwtl
je
fistl
cltd
dec
mov
mov
int3
out
cmp
decb
adc
mov
push
jge
adc
pop
lcall
xor
or
pop
movsl
inc
test
push
push
jl
ret
pop
xchg
sbb
dec
pop
lds
inc
loopne
std
out
cld
popf
ljmp
adc
lahf
push
cwtl
lret
cld
addb
sbbl
aaa
bound
mov
ss
aaa
fldenv
jns
cmc
in
shl
fwait
insb
je
ffreep
and
iret
stos
shr
iret
fcomi
dec
dec
fstl
data16
adc
xchg
cmp
iret
jl
ficomps
xorl
fists
scas
sub
std
loope
fcoms
xor
mov
and
roll
je
cmp
xor
into
mov
push
mov
icebp
jecxz
sahf
fmuls
and
lcall
jmp
das
or
iret
stos
fcmovnb
mov
insb
mov
push
call
mov
pop
cmp
rcr
dec
jnp
pop
xlat
loop
add
sbbl
pop
sub
das
cmp
movsb
add
mov
adcb
push
aad
mov
pop
mov
push
mov
ficoms
loop
int
pusha
fists
sub
pop
mov
ds
rep
sbb
dec
cmp
pop
les
cs
cmc
enter
imul
and
dec
xchg
out
adc
sub
sub
mov
scas
dec
enter
repnz
fsubp
icebp
ja
jnp
leave
int
shlb
into
test
mov
sbb
in
pop
xlat
out
add
xchg
adc
mov
or
or
pusha
sub
xchg
mov
inc
nop
vrsqrtps
shlb
lcall
sahf
push
adc
xchg
rcll
xor
mov
iret
shlb
fisubrl
fldt
leave
sarb
or
loopne
fnstsw
xor
icebp
mov
cltd
negb
mov
push
jmp
inc
adc
repz
xor
cmp
sbb
sbbb
sbb
dec
jge
faddp
ret
fmull
mov
mov
jae
cmpsb
xchg
or
xchg
push
adc
in
xor
sub
sti
fs
iret
mov
xchg
inc
pop
add
sub
fldt
in
out
sub
rcll
inc
and
sahf
sbb
loopne
jmp
sub
mov
lret
cmpsb
sbb
add
bswap
iret
dec
fidivrs
mov
daa
shlb
xorb
stc
xchg
sub
jb
mov
packsswb
jl
sub
push
pop
jmp
mov
fidivrs
in
aaa
ret
sub
js
test
ljmp
frstor
jge
stos
out
ss
xor
out
sub
jbe
inc
jg
loope
gs
mov
outsl
repz
mov
out
out
adcl
xor
mov
sti
sti
mov
cmp
jns
rcrl
sub
or
outsb
sub
dec
stc
and
cmpsl
and
xchg
and
pop
pop
js
gs
lea
mov
insl
rcrb
and
push
inc
popa
adc
xchg
dec
push
into
stos
jae
jno
sub
pop
mov
inc
bound
or
mov
cmpsl
dec
mov
mov
fwait
.byte
.byte
