sbb
add
mov
dec
pop
fcoms
loopne
inc
xchg
push
mov
cli
add
imul
cmp
popa
aad
inc
add
or
test
aaa
inc
push
sub
inc
push
arpl
pop
pop
clc
mov
pop
push
dec
mov
dec
ja
enter
out
or
pushf
lock
fidivrl
shlb
jle
popl
jmp
es
stos
xor
mov
int3
xchg
pushf
adc
cmp
sbb
lahf
loop
add
es
lea
xor
jecxz
pushf
or
jecxz
sub
fisubl
ret
call
scas
js
lods
aam
les
fidivrl
stos
imul
xchg
loope
dec
cmovb
cmp
cmp
push
out
mov
aaa
lret
popa
int
dec
hlt
mov
insl
pop
rcll
mov
push
push
inc
mov
outsb
add
mov
mov
mov
dec
dec
into
mov
and
cli
mov
xchg
mov
bound
jae
sbb
adc
stc
and
add
push
push
ljmp
add
dec
test
push
pop
std
mov
mov
cmp
mov
or
mov
insb
insl
pop
mov
outsb
fs
hlt
inc
cmp
pop
imul
nop
xor
dec
sbb
imulb
lret
adc
xor
add
jl
cmc
rcll
add
addr16
pusha
orl
mov
pop
aam
sbb
loope
cmp
testl
dec
out
push
dec
or
sbb
cmp
clc
push
push
sbb
popf
cs
pop
push
xchg
pop
pop
shl
andl
mov
mov
lea
jns
out
frstor
pop
or
outsl
xchg
leave
and
pop
inc
clc
sub
cld
test
lret
jo
ss
ja
jae
dec
pop
dec
out
in
inc
xlat
and
push
inc
out
xchg
jp
aad
sub
or
cmp
clc
cmp
or
cs
scas
out
mov
dec
mov
mov
ret
push
in
out
pop
in
aad
cmpsl
js
sbb
scas
cmc
test
jae
pcmpeqb
rcrb
pop
sti
mov
cmpsb
outsb
scas
push
push
xchg
and
inc
loop
and
xor
push
and
ljmp
mov
mov
jge
daa
outsl
nop
dec
fdivp
lret
cs
pop
add
enter
xor
lea
inc
add
push
mov
rclb
dec
ficoms
add
jle
in
mov
cli
mov
popa
clc
sub
mov
xor
cmp
clc
outsb
fs
or
outsb
mov
cmp
push
mov
shl
sub
insb
dec
andl
and
rol
push
jae
pop
push
push
xor
es
sub
cmpb
add
or
mov
pop
and
add
xor
pushf
movsb
jb
int3
lock
inc
inc
dec
push
mov
mov
add
inc
stos
inc
popf
mov
jge
mov
adc
jl
mov
cmpsl
dec
or
mov
jne
mov
sarl
mov
stc
mov
mov
test
jbe
mov
lods
fsts
adcb
xlat
shll
inc
cld
cwtl
add
jne
loope
rcrl
lcall
add
mov
mov
xchg
jmp
jnp
fsubrl
xor
push
sbb
js
gs
and
in
mov
sbbb
xchg
xchg
leave
orl
in
and
inc
pop
inc
cmp
aaa
mov
and
pushf
cld
adc
es
addr16
loop
out
add
mov
mov
xor
pop
pop
dec
jge
fs
fidivl
mov
je
stc
add
out
xor
je
sarl
push
lret
push
dec
shlb
dec
sub
pop
xor
pop
xchg
and
add
xchg
into
testl
add
or
dec
and
jle
inc
faddl
imul
in
ret
push
jo
add
cmp
jp
jae
xchg
stos
or
xchg
mov
pop
push
push
and
ds
sbb
xor
lods
mov
adc
adc
jg
mov
push
test
mov
pop
popf
orl
loope
adc
fmul
jl
dec
inc
stc
xchg
or
fprem
mov
shlb
mov
stc
add
mov
sti
push
adc
mov
daa
cmp
in
cmpsl
adc
inc
mov
lds
adc
cmp
adc
sub
test
jle
adc
pop
das
fwait
imul
icebp
or
mov
mov
fsts
jns
pop
xchg
outsl
mov
aad
pop
imul
in
fiaddl
addr16
int3
xor
pop
jbe
jmp
pop
inc
cmpsl
aad
sbb
jl
fimuls
mov
daa
mov
rcl
imulb
xchg
or
daa
fstpl
les
in
sub
hlt
orb
and
ja
fdiv
and
rclb
inc
pop
or
leave
jae
dec
outsl
idiv
lods
outsb
push
add
mov
out
pop
mov
mov
xchg
cmp
mov
bound
inc
shll
jb
out
sub
xchg
stos
daa
pop
test
int
jns,pn
in
pop
lods
icebp
add
inc
iret
inc
sbb
fbld
lods
lret
dec
bound
mov
cltd
ss
mov
jnp
xor
sbb
mov
jns
hlt
add
jmp
fld
cli
outsb
mov
fs
lods
mov
dec
ja
test
push
mov
inc
sbb
stc
in
cmp
test
jle
dec
add
lea
loopne
xor
std
dec
xchg
jb
out
ja
imull
adc
in
mov
data16
test
mov
xor
push
test
sbb
xchg
cmp
stc
add
test
jg
push
jmp
dec
cmp
rcr
bound
xchg
icebp
dec
mov
push
je
ljmp
adc
int3
hlt
mov
insb
cltd
mov
dec
jmp
lahf
adc
inc
push
repz
dec
cli
movsb
cmp
push
xchg
ja
mov
call
adc
mov
stos
insl
outsl
pop
movsb
test
iret
in
jns
fistl
mov
sbb
scas
dec
mov
inc
pop
mov
outsb
or
repnz
push
xchg
in
out
pop
mov
mov
out
not
inc
gs
cmp
sub
lea
jns
or
push
jne
aam
sbb
mov
adc
push
fbstp
inc
xor
aam
shl
ss
pop
sti
ret
mov
xor
sub
js
ret
shrb
sbb
adc
pop
jg
and
test
ss
mov
jp
and
mov
dec
sti
xor
xor
mov
iret
icebp
mov
mov
adc
out
lcall
jge
jle
out
fildl
push
push
popf
pop
aad
roll
xor
adc
dec
jns
mov
shll
fs
lock
fimull
pop
imul
push
sub
in
int
inc
xchg
xorb
stc
fsubl
cltd
cmc
xchg
lret
pop
xlat
jae
out
popf
stc
jp
cmp
imul
out
sahf
jmp
sahf
mov
or
into
mov
xchg
rorb
test
jge
sub
mov
sub
push
mov
pop
jo
les
leave
hlt
addr16
fsubs
jno
add
pusha
in
imulb
mov
cvtpi2ps
popf
and
mov
mov
repz
out
repnz
xor
jno
addr16
push
fsubrl
arpl
pop
imul
pop
sub
mov
test
out
lret
cmp
mov
test
stos
inc
scas
inc
rorl
inc
mov
cld
pop
or
mov
mov
adc
leave
or
ret
lock
mov
ss
cli
ds
mov
mov
aam
or
test
mov
cwtl
xor
cmp
or
cmp
cld
fwait
addr16
out
movsb
pop
dec
pop
movsb
cltd
mov
ds
dec
xchg
int3
xlat
in
pusha
mov
jmp
dec
cmp
data16
in
xchg
dec
jge
call
iret
subb
repz
lds
jp
data16
or
xchg
shrb
jge
xorl
dec
mov
fincstp
mov
mov
push
sub
cmp
cwtl
inc
push
lock
adc
jle
aam
adc
dec
sub
addl
xor
xor
leave
rcr
bound
mov
lahf
adc
jnp
mov
add
jle
mull
scas
cmp
cmp
mov
aas
imul
mov
icebp
test
push
in
push
mov
mov
xor
and
jae
push
cmpsl
test
rclb
mov
mov
cmpsb
ds
ljmp
test
or
lds
push
mov
cmp
jae
dec
ss
lret
fsub
out
enter
cmp
ljmp
daa
out
or
xchg
sub
loop
xor
aas
ud2
fildl
out
push
mov
jg
inc
xchg
lcall
aam
jnp
clc
daa
adc
jbe
shll
data16
outsb
js
xchg
into
fmull
lods
cmpsl
dec
rorl
push
inc
test
in
jle
sarl
xor
imul
mov
mov
cmc
xor
je
out
test
adc
xchg
xor
repnz
and
cmp
or
faddp
mov
mov
cld
sti
mov
iret
add
clc
js
scas
out
mov
inc
mov
inc
cmpsb
fwait
scas
mov
hlt
xchg
jbe
lcall
cmp
ja
cmc
adc
dec
push
fcos
dec
sbb
add
sti
push
mov
imul
ds
jle
das
adc
push
dec
sub
fldenv
xchg
outsl
mov
jl
into
mov
xchg
shrl
pop
xchg
cmpsb
jp
out
inc
push
xor
ret
pop
outsb
aas
and
leave
inc
push
ljmp
loope
cmp
out
and
imul
lret
scas
mov
push
mov
loop
loope
jae
cld
sub
fists
repnz
test
xchg
out
dec
push
loopne
adc
push
mov
sbb
jmp
and
or
stos
lods
sub
imul
das
pushf
aad
loope
in
std
dec
lret
imul
fstl
xor
jno
adc
decb
stc
out
test
xor
cmp
hlt
cltd
ds
sbb
cmpsb
loopne
repnz
dec
push
push
clc
xlat
push
loop
dec
push
mov
push
add
mov
cmc
dec
mov
flds
sti
add
sarb
cs
aam
dec
dec
push
dec
sbb
aas
bound
pushf
dec
and
push
jl
lret
cli
nop
adc
dec
inc
sbb
adc
or
les
out
in
aam
adc
mov
push
mov
cmpsb
cmp
xchg
adc
push
mov
cld
add
cmpl
mov
mov
dec
and
mov
mov
mov
xchg
or
add
push
sbb
aaa
mov
mov
fwait
sub
lea
cmp
push
sub
bound
add
ret
std
lods
inc
mov
shll
les
cltd
rolb
mov
in
faddl
push
fst
test
push
sub
lahf
xor
into
inc
mov
out
or
neg
popa
mov
orl
addl
jno
imul
pop
fwait
and
push
jge
aad
xchg
and
jne
sub
jmp
dec
repnz
pusha
sahf
stc
out
sbb
fistl
stos
jg
rcll
pop
ret
scas
mov
cmpsl
mov
inc
pop
out
in
push
dec
sahf
jl
test
movsb
jp
xchg
sbb
adc
clc
jae
sbb
divl
lcall
and
arpl
je
filds
push
arpl
bound
cmp
cltd
test
xor
lahf
cltd
fimuls
int3
and
xor
in
push
out
and
out
xchg
mov
mov
add
xchg
jge
push
mov
inc
pop
inc
pop
insl
jo
push
insb
in
incl
pushf
mov
imul
push
sub
lods
je
pop
mov
pop
cltd
fimull
inc
and
mov
sti
out
fcmovbe
inc
daa
lock
loop
fisubl
ret
and
sbb
xor
cli
jge
jle
test
rclb
les
add
xor
out
call
pop
sbb
mov
add
and
les
lret
cmp
jae
loope
pop
arpl
and
mov
add
sahf
sidtl
sar
cmpsb
push
sub
sub
and
imul
lods
out
adc
mov
adcb
inc
lretw
cmp
add
ss
lret
cli
inc
inc
and
adc
pop
leave
ds
testb
inc
and
dec
clc
sbb
add
inc
popa
fidivrs
cs
fpatan
nop
shll
and
out
jecxz
es
shll
sub
test
inc
push
scas
push
cmpl
adc
cmp
lods
sbb
out
xchg
sbbl
sub
jge
push
mov
enter
push
pop
fdivr
cmpsb
jmp
xchg
mov
adc
jmp
inc
cmpsl
mov
outsl
lods
xor
mov
sub
mov
mov
mov
lds
xchg
and
add
adc
sbbb
lds
sub
andb
std
pushf
imul
inc
pop
rolb
test
icebp
cmp
cmpl
imul
loope
jnp
dec
insb
nop
and
cmp
push
leave
jmp
sub
push
fincstp
mov
adc
xorl
in
and
push
lds
jge
push
je
add
lea
test
es
ljmp
dec
mov
dec
pop
pop
push
push
pusha
scas
push
das
loope
mov
mov
std
cmp
arpl
mov
pushf
mov
xchg
dec
fildll
das
mov
fwait
adc
lret
out
pop
dec
jo
movsb
mov
sbb
clc
jge
popf
leave
arpl
and
fidivrs
mov
les
or
adc
loope
and
or
xchg
loopne
mov
cmpsb
or
int3
imul
sbb
loopne
stc
add
int3
insl
sti
jl
adc
mov
lret
iret
out
xor
jns
jge
inc
fsubl
inc
insl
mov
imul
pusha
divl
test
mov
fnclex
stos
mov
pop
cmp
and
call
sti
test
lods
iret
into
dec
add
fwait
xor
jmp
icebp
test
arpl
pop
std
push
push
or
and
cmpsl
mov
lret
pusha
lods
ljmp
aas
subb
subb
push
imul
push
aaa
adc
or
cwtl
test
sub
shl
pushf
xchg
sarb
mov
xor
push
mov
ja
loope
movsb
pop
cmpsl
mov
push
dec
adc
sbb
in
pop
jl
rcrl
cmp
outsb
dec
mov
dec
push
dec
inc
addr16
lahf
add
lds
jbe
add
adc
cmpltps
sub
clc
leave
fadds
popa
mov
sti
jo
iret
cmp
sbb
sarl
pop
xchg
out
or
sbb
sbb
pop
cmpsl
push
push
xchg
cmp
mov
jae
iret
pop
jno
sub
pop
mov
loope
stos
sub
push
js
sub
dec
sub
dec
pop
daa
push
mov
ljmp
stos
mov
and
das
push
jg
xor
jle
mov
ja
adc
push
push
inc
pop
in
stc
shl
mov
test
sarb
pop
inc
movsb
in
ss
ret
stc
mov
or
ja
mov
jecxz
out
dec
mov
ret
dec
pop
popf
insl
loop
or
and
dec
mov
sbb
lods
arpl
das
shll
cmp
sbb
fucomp
in
pop
test
or
cmp
sub
add
popf
les
ds
daa
dec
nop
or
pop
mov
ficoml
inc
xchg
aad
movsl
and
loope
jno
repnz
inc
mov
nop
rcll
sub
out
dec
xchg
call
sbb
aas
adc
adc
cld
aam
out
lods
leave
sbb
sbb
or
mov
or
jg
test
lret
pop
inc
in
sub
cmc
adcl
mov
xor
cs
mov
out
mov
in
xor
jp
dec
xchg
fnstenv
hlt
mov
pop
std
ret
cltd
jle
add
cmp
scas
sub
std
mov
jno
fcoms
dec
fdivr
arpl
push
out
ret
pop
push
pop
sbb
inc
aad
mov
lock
repz
mov
adc
mov
mov
cmp
ds
xchg
int
sbb
push
insb
jle
mulb
mov
add
dec
adc
jb
jmp
add
mov
jne
cld
in
sub
rcll
data16
stos
sub
or
lcall
xchg
aaa
fwait
shrb
pop
sarl
jo
push
xchg
roll
popf
ja
into
stos
cmp
scas
push
push
push
mov
cmpsl
loope
mov
xchg
les
dec
mov
jne
inc
bnd
lock
sbb
call
and
mov
icebp
int
dec
sti
cmp
in
pop
sub
outsb
loop
jp
mov
xor
jge
add
je
sbb
push
jp
hlt
pop
insl
pop
stos
dec
inc
pop
test
dec
repz
sub
js
xor
mov
mov
pop
sub
outsb
cmpsb
icebp
pop
addl
pop
cmp
out
inc
inc
clc
push
mov
ret
test
ljmp
or
in
loop
mov
leave
lret
lret
test
sub
ror
clc
adc
pop
stos
sub
idivl
mov
cwtl
push
int
ret
push
push
and
or
dec
daa
mov
into
xchg
adc
daa
ret
dec
xchg
push
mov
mov
jecxz
addr16
mov
fistpll
jmp
imulb
mov
rorl
push
jmp
mov
and
ljmp
fidivrs
cmp
test
push
cmpb
ljmp
mov
hlt
loope
push
pop
je
xor
jl
mov
jge
jno
inc
add
sar
cmp
daa
or
sbb
test
es
sub
pop
push
mov
or
test
adc
cmpsb
sub
fcomps
xchg
push
loop
scas
dec
mov
jp
mov
dec
stos
insl
jne
imul
cmpb
push
xchg
add
or
mov
mov
cmp
jmp
mov
pop
push
mov
outsl
adc
sbb
xor
dec
lahf
jnp
stos
mov
dec
dec
push
dec
test
rorl
xchg
popf
inc
movswl
pop
rol
scas
cmc
inc
inc
mov
mov
xlat
sub
and
out
popf
shll
in
iret
mov
mov
pop
or
mov
fsubl
mov
popl
cmp
inc
iret
cmp
mov
iret
pop
out
stos
aas
testl
pop
mov
inc
jg
xchg
dec
xlat
cmp
ret
dec
movsl
pop
mov
loop
cld
xorl
dec
jmp
cltd
push
jno
fxam
and
cmp
shl
cli
int3
pop
nop
rolb
lahf
test
shrb
xor
notb
or
arpl
mov
xlat
stc
mov
aam
addr16
and
jb
popa
les
xor
std
pop
imulb
test
outsb
jg
push
std
fs
inc
lock
leave
in
sbb
or
mov
inc
js
jno
mov
push
pop
sub
rol
and
jle
sbb
and
adc
lea
jbe
pusha
ficoml
pop
adc
push
pop
cmpsl
mov
inc
inc
cwtl
jns
test
mov
sbb
mov
mov
aas
ret
push
pushl
dec
push
enter
arpl
adc
popf
push
and
outsb
mov
dec
or
je
subl
jmp
cmc
xchg
push
loopne
add
push
in
xorb
pop
pop
add
jo
and
cmp
test
aas
sbb
dec
sahf
repz
jb
sub
inc
filds
dec
dec
xor
rorl
gs
movsb
sub
aad
adc
scas
jbe
sti
rcll
jmp
in
nop
orb
pop
data16
xchg
in
call
cmp
xchg
int
dec
add
xchg
and
ret
ret
dec
movsl
pop
inc
ja
roll
sub
fcoml
in
mov
adcl
jl
fwait
mov
or
daa
jb
and
or
out
jns
xor
jg
mov
nop
dec
adc
es
push
xor
or
out
xchg
sbb
sti
sub
ret
xchg
pop
mov
mov
mov
adc
popa
pop
jecxz
jae
jmp
mov
stc
pushf
rcrb
sbb
cli
inc
insl
out
sti
xorl
mov
leave
testl
lahf
cwtl
adc
mov
cmp
and
dec
adc
jne
mov
in
shrb
jl
loopne
addl
das
sbb
cmp
adc
les
add
fisttpll
daa
pop
mov
mov
cmp
xlat
imul
lahf
lea
rcl
inc
cmp
aas
mov
add
int
mov
stos
mov
and
jnp
bnd
addr16
mov
rcrb
adc
adc
arpl
sbb
jmp
jge
lret
dec
cltd
cmp
dec
jge
stos
cmpb
int
ret
call
inc
xorl
hlt
mov
bound
pop
pop
pop
pop
fs
cs
movb
fistps
lods
addr16
mov
mov
sub
jns
ja
and
xor
cmp
inc
jbe
cmpsb
pop
cld
pop
out
sub
jecxz
mov
jbe
shrb
fisttps
mov
aas
xchg
inc
imulb
add
cmpb
push
adc
mov
mov
stos
scas
and
mov
inc
pop
dec
mov
xlat
adc
dec
aam
lret
mul
mov
mov
dec
jae
fisubrl
or
sbb
scas
lcall
sbb
sahf
inc
push
gs
sub
cltd
outsb
subl
mov
in
or
and
mov
mov
insb
inc
jle
imul
ret
inc
mov
test
inc
jmp
push
ret
outsb
scas
adc
shrl
mov
jmp
mov
mov
into
adc
nop
push
push
test
jecxz
test
mov
leave
push
or
mov
testb
adc
iret
rorl
pop
repz
leave
xchg
inc
cmp
dec
daa
xchg
add
shll
stos
jge
jo
std
leave
and
dec
xchg
fadds
inc
inc
test
pop
out
scas
ret
lds
fistps
insb
xor
jae
push
and
push
inc
hlt
cmp
mov
push
lods
lcall
enter
aam
repnz
pushw
or
shl
jl
cmpsl
dec
jg
fadds
xchg
movq
pop
idivb
jecxz
orl
sbb
lahf
scas
and
stos
dec
or
fstl
push
cmp
nop
xchg
fidivs
xchg
out
or
fildll
lods
add
jns
jecxz
xor
out
xchg
ljmp
cs
cmp
push
ljmp
imul
js
push
sub
dec
sub
leave
pop
xchg
cmp
ret
fldl
imul
jmp
call
icebp
add
cwtl
cli
mov
mov
movsb
sub
jle
add
pop
jecxz
mov
or
stc
pop
aad
dec
fidivs
sbb
add
adc
int
xor
push
pop
adc
imul
lcall
arpl
lret
dec
add
mov
xchg
sar
scas
enter
mov
sub
in
movsb
rorb
jb,pt
or
scas
pop
mov
lods
or
cmp
jae
rclb
icebp
mov
add
shrb
test
int3
mov
ss
cmpl
repz
cld
pop
xchg
dec
sbb
test
das
les
mov
repnz
dec
aas
hlt
mov
cmp
and
push
or
addl
inc
pop
rcrl
push
mov
cmpsb
xor
add
xor
pop
les
dec
xchg
add
cld
subb
lahf
xor
xchg
or
add
or
mov
data16
mov
aam
lods
mov
stos
adc
jmp
jo
pop
jae
cs
and
and
inc
sti
stos
movsl
rcrl
hlt
jne
imul
push
cli
hlt
adc
ss
lods
cmp
jns
push
js
sahf
movsl
push
fbstp
push
sub
clc
xchg
lock
in
ja
leave
jp
xor
pusha
lret
ss
mov
xchg
arpl
sbb
je
inc
lcall
and
add
iret
lret
pop
push
adc
pop
jl
mov
ret
ret
shlb
pop
movsl
jmp
xchg
mov
dec
pop
add
mov
lahf
mov
or
lcall
daa
and
jmp
fdivrl
hlt
cltd
lods
and
jg
cmpsb
scas
cmpsb
sti
mov
and
fldt
adc
pop
lret
push
gs
ja
xor
mov
xor
adc
filds
xchg
ds
xchg
stos
jle
mov
call
jmp
and
inc
mov
fmuls
mov
push
sub
ficompl
mov
insl
xchg
sbb
lret
and
jno
test
xchg
sbb
jmp
shll
ja
and
lods
mov
mov
rcll
pop
inc
jecxz
mov
sbb
in
cmp
mov
stc
mov
dec
pushf
pop
pop
movsb
nop
sbb
cmpsb
lret
aas
jge
cmc
lcall
jno
addr16
pop
icebp
push
jb
dec
mov
inc
mov
jnp
addr16
out
inc
jnp
scas
or
xchg
daa
cmp
jnp
test
cld
mov
xor
loopne
les
outsl
cmp
xchg
sub
adc
cmc
add
iret
jne
inc
jne
es
roll
cmp
jl
sub
or
rcll
fiaddl
xor
pop
stc
mov
cld
in
or
fildl
inc
std
xor
aaa
push
mov
outsb
push
into
jno
inc
hlt
mov
xchg
sbb
sub
notl
cmpsb
sub
aas
push
inc
test
adc
push
add
xchg
ljmp
pop
movsl
in
cltd
movsl
mov
in
mov
in
xchg
sbbl
xchg
jno
out
mov
negb
adc
daa
sbb
cmp
icebp
mov
call
out
mov
ficomps
add
inc
mov
scas
push
lahf
mov
pop
imull
fld
mov
enter
cmp
add
xchg
leave
mov
mov
dec
push
push
push
inc
in
cld
daa
cwtl
scas
or
fidivrs
iret
pop
jge
sbb
sbb
icebp
push
loop
push
popa
dec
or
fdivrl
inc
sarl
push
bound
ficompl
inc
lret
sub
xorb
call
pushf
dec
aas
mov
jbe
addr16
sahf
inc
pop
fldenv
dec
xchg
dec
das
insl
mov
imul
adc
aaa
aad
das
mov
jle
add
stos
add
cmp
xor
imul
insl
fnstsw
inc
les
ds
sbb
insb
mov
addl
out
mov
cmpsb
and
leave
inc
jno
cs
mov
jecxz
jl
and
aad
popa
add
cmpl
popf
movsb
push
and
push
or
stos
cli
pusha
xor
xchg
fcompl
adc
xchg
push
jl
dec
pop
jmp
xchg
loopne
cli
je
mov
mov
xor
popf
leave
data16
dec
xorb
cwtl
push
inc
gs
js
jnp
xor
ja
lret
out
xchg
add
loop
js
cmp
xchg
sbb
pop
push
pop
call
cli
mov
lret
lret
loop
xchg
js
push
mov
and
mov
pop
jne
gs
jle
loope
cmp
incb
add
jo
xchg
mov
mov
and
jmp
dec
push
cmp
cmp
jb
sbb
pop
push
outsl
adc
call
ret
bound
dec
scas
or
mov
jmp
mov
and
dec
out
loop
lcall
sub
pop
cmpsl
mov
and
xor
mov
mov
add
insb
mov
pop
addr16
insb
jne
xor
add
mov
int
test
sbb
pop
pop
fisttps
clc
jo
xchg
add
leave
imul
inc
and
into
pop
mov
mov
dec
arpl
cli
out
test
pushf
mov
int3
push
add
rcrl
xor
jnp
cmp
sahf
scas
dec
lods
xor
fisubrs
cld
add
in
fdivs
clc
add
xchg
xor
add
popa
rcll
adc
test
xchg
xchg
das
xchg
xchg
push
imul
sbb
adc
icebp
sbb
adc
cmp
cmp
mov
daa
dec
fisttpl
mov
mov
pop
cwtl
sub
jge
dec
sub
jno
xchg
jmp
lcall
je
fstpl
lahf
sub
lcall
stos
jbe
sarl
jno
aam
in
lods
fildl
jno
subb
lds
lds
cmp
psllw
ljmp
icebp
aam
cmp
mov
popl
jo
nop
fstpt
xor
leave
mov
mov
and
mov
inc
aas
jae
push
xchg
hlt
inc
ss
xorl
mov
jl
pop
xchg
jl
and
lcall
or
push
loop
out
mov
test
dec
xor
pop
sti
insb
cmp
aad
movb
lcall
stc
scas
add
in
inc
bound
aaa
xchg
inc
insb
pop
push
insb
imul
or
cwtl
jl
mov
push
out
sbb
xchg
push
shl
arpl
cmpb
cmp
inc
add
push
gs
daa
add
sbb
sbb
pop
jp
test
and
pop
inc
jge
jnp
call
sbb
add
mov
or
xorb
fldcw
in
add
pusha
xor
mov
ds
pop
add
adc
mov
in
lea
movsl
inc
sbb
cli
out
inc
aaa
mov
scas
scas
push
adc
add
cmp
repz
iret
inc
and
dec
aaa
or
sti
xor
cmpsl
mov
icebp
scas
add
xchg
pop
dec
sub
fs
enter
popa
mov
pop
sbb
cmpsl
jmp
cmp
push
sub
ss
pop
jns
inc
cltd
das
fisubrl
test
or
jae
inc
sub
dec
jno
pop
pslld
mov
rol
push
and
clc
outsb
jb
mov
popa
xchg
frstpm(287
jl
cmp
cmpb
pop
mov
cmpsb
lds
hlt
sub
fst
sub
pop
testb
push
cmc
dec
jl
sti
add
jge
sub
add
fwait
mov
sbb
jp
pop
sub
and
pusha
cmp
out
divb
inc
jno
jnp
mov
addr16
into
lahf
mov
xlat
mov
cwtl
cmc
mov
loopne
mov
mov
inc
xlat
inc
data16
cmpl
ss
mov
les
pop
lods
ljmp
fdivr
stos
push
push
js
mov
insb
xchg
inc
pop
pop
outsl
das
lods
mov
movsb
inc
add
ljmp
inc
bound
mov
mov
sub
loope
aam
fisttpll
fsubl
rcrb
xchg
test
ret
jo
pop
inc
out
mov
dec
dec
test
repz
add
xchg
shrl
arpl
mov
les
cmpsb
push
jle
mov
inc
add
outsl
cli
xor
sbb
into
xor
fnstenv
iret
sbb
loop
out
test
and
loopne
imul
sbb
aam
imul
cs
mov
cwtl
and
xor
cmp
mov
inc
cltd
xchg
push
je
push
mov
movsb
xchg
xor
insb
dec
dec
sbbl
xchg
xchg
xlat
jg
add
dec
inc
loopne
jecxz
and
push
movsb
aam
xor
sub
cmp
decb
pop
cltd
or
jo
into
sbbl
outsl
loope
pop
sub
sub
pop
test
dec
aas
xchg
cltd
inc
jbe
fisubs
adc
in
jne
xchg
add
pop
daa
cmp
lock
push
push
out
fwait
or
sbb
dec
and
sub
outsb
lret
hlt
rorl
sbb
dec
sub
jae
mov
adc
lret
push
scas
xor
pop
test
cmp
insb
mov
jl
icebp
cmc
shll
mov
dec
push
mov
int
sbb
sbb
xor
lock
add
push
sbb
xor
sbb
add
xchg
stos
adc
mov
les
sub
push
mov
pop
popl
std
add
repnz
std
jns
jp
mov
aas
aaa
insb
jo
scas
push
insl
push
pushf
imul
push
or
dec
lahf
pop
pusha
mov
imul
add
jp
cmpsb
xchg
loope
push
xor
xchg
or
mov
in
mov
cltd
cmp
and
push
cmpsb
mov
jge
cmp
xor
cmp
mov
inc
xor
cld
or
rclb
into
scas
inc
add
jg
fcompl
xor
xchg
xchg
cmp
nop
or
push
outsb
imul
repz
dec
push
jbe
mov
pop
xor
inc
xchg
adc
aam
cmc
cmp
add
push
mov
adc
test
repz
shl
cmp
ljmp
bound
xor
test
cmp
sbb
lods
mulb
addr16
sbb
dec
ss
rclb
jge
mov
addb
push
sbb
insl
insb
mov
arpl
sbb
or
sbbb
cmc
pushf
mov
dec
sahf
div
lahf
add
roll
pop
shll
cmc
stos
jle
mov
cmpsl
fsubl
sbb
xchg
in
sahf
xchg
adc
addr16
jo
ss
inc
xlat
pop
and
pop
sub
inc
div
rol
dec
test
and
pop
mov
cmpsb
ljmp
fsubrl
xchg
xchg
into
roll
sub
cli
inc
gs
pusha
jmp
popa
clc
xor
and
lea
dec
xchg
pop
das
addr16
outsb
push
test
cmc
in
in
sub
push
mov
and
ds
pop
pushf
cmpsl
orl
inc
sarl
stc
xchg
and
xchg
andb
gs
pop
push
fstpt
stos
sub
xlat
lds
and
loop
and
shrl
jno
or
insl
popa
leave
jns
push
pop
rcrl
cmc
enter
jne
int3
insb
cmp
push
mov
mov
cltd
insb
add
xorb
sub
call
adc
sbb
dec
aaa
push
add
imul
inc
xchg
xor
push
inc
in
out
cmp
sbb
push
sti
into
out
lea
pushf
sub
and
roll
icebp
enter
leave
jbe
test
xlat
mov
enter
imul
movsb
rclb
adc
sahf
stc
fldenv
sarb
ss
lods
or
jp
xor
lods
adc
xlat
nop
pop
sbb
mov
push
lahf
jae
mul
arpl
cmp
sub
inc
and
cmc
aam
out
je
jo
test
sub
xchg
popf
push
cmp
pop
xor
cmp
add
lods
sbb
cmp
outsl
mov
stos
lret
les
jmp
fisubs
ds
mov
push
in
lock
or
in
cli
jb
mov
mov
loopne
sbb
push
push
pop
stos
cltd
outsl
call
xchg
or
sbb
jp
xor
xchg
xor
repz
outsl
push
mov
and
cs
mov
jge
mov
cmp
xlat
or
fdivrl
mov
cmp
cmpsb
xchg
loop
lods
std
movsb
lods
push
outsl
jne
add
sub
jp
push
dec
add
xchg
not
cmp
fstpt
push
repz
push
adc
pop
xor
or
shr
fs
mov
xchg
mov
cltd
out
popl
cmpsb
mov
fdivs
int3
jle
push
adc
sub
mov
testb
cmp
xor
std
mov
jo
arpl
mov
jno
rclb
pop
mov
add
mov
jp
mov
lea
or
stos
sbb
and
push
aad
push
mov
mov
mov
lods
jl
loop
cmp
dec
insl
outsb
js
lahf
pop
mov
insl
shr
sbb
mov
insb
lods
pop
and
sub
test
sbb
mov
int3
jo
jmp
xchg
cld
xlat
or
pop
and
cmovs
loopne
jmp
jbe
dec
fcmovb
clc
stos
idivb
xor
addb
cmc
push
pop
push
or
in
std
cs
mov
ror
jbe,pt
adc
mov
pushf
arpl
or
sti
push
inc
xchg
mov
adc
fisttpl
ja
xchg
frstor
ja
push
fdivl
ret
cmp
dec
scas
and
inc
push
xchg
out
lods
popf
pop
test
push
sbb
pop
lea
in
jmp
and
popa
cmp
jb
mov
sbb
in
outsl
add
fsubp
push
lcall
lods
mov
push
dec
and
shrb
dec
jmp
scas
and
shrl
jae
jecxz
mov
divb
sbb
fs
imul
sbb
adc
in
pop
pop
dec
fldcw
xchg
xlat
rolb
inc
jmp
fistpll
decb
dec
rolb
lods
jae
adc
pop
add
jge
ret
add
sahf
mov
push
mov
pop
push
xor
adcb
xchg
add
rorb
xchg
adc
inc
test
std
das
sbb
add
or
inc
lods
outsb
ds
aas
lods
leave
push
mov
test
sbb
insb
or
lcall
mov
xchg
sahf
orl
pop
ret
in
jp
adc
ficomps
xchg
enter
add
lods
and
push
mov
in
ror
dec
mov
popf
scas
xorb
cli
mov
sub
iret
iret
mov
ror
mov
dec
inc
fwait
inc
jmp
mov
fdivp
ds
jns
cwtl
mov
push
ja
or
mov
popa
adc
clc
cmp
and
js
lods
out
shr
pop
adc
push
mov
xchg
jg
lea
scas
fnclex
daa
clc
aad
out
mov
fldl
sub
inc
cmp
xchg
out
sub
jne
jle
xor
mov
and
sub
js
lock
xchg
xchg
xchg
cmp
lahf
les
mov
nop
insb
loopne
or
xchg
out
or
mov
inc
jmp
jbe
and
cwtl
aam
mov
hlt
push
adc
jecxz
inc
lock
test
pop
out
push
push
das
flds
push
jnp
mulb
pop
mov
dec
aas
jp
and
jg
mov
mov
mov
mov
or
mov
pop
push
clc
cmp
fisubl
sub
dec
push
push
inc
faddl
cmpsl
stos
aam
add
adc
xchg
jp
mov
jns
sub
idivb
cmp
dec
push
push
adc
sahf
mov
adc
mov
out
or
lods
mov
jge
sub
fcomps
mov
mov
int
imul
mov
lret
mov
leave
cld
mov
mov
jns
cmp
xor
scas
shlb
xchg
adcl
or
mov
rcll
pop
dec
fdivl
iret
add
fdivrl
or
xor
pop
outsb
rorl
mov
xchg
mov
push
aad
mov
cmpsl
rolb
hlt
leave
es
notb
outsb
mov
fwait
sub
push
mov
inc
mov
inc
or
popf
jns
dec
cmp
sbb
pushf
ljmp
sbb
pop
push
testb
leave
mov
jle
adc
pop
push
pop
push
fwait
or
divl
mov
and
movsl
scas
roll
sub
jmp
mov
inc
bound
cmc
xor
adcl
addl
sbbl
ret
pop
jnp
jg
mov
xchg
ljmp
shrl
sahf
dec
out
test
xchg
inc
jge
mov
mov
loope
push
jecxz
adc
pushf
fists
test
mov
sub
and
scas
or
ret
nop
and
dec
cmpsb
pop
push
xlat
lret
adc
insb
mov
mov
fdivrl
cmp
push
mov
xor
leavew
mov
jne
movsl
dec
add
idivl
mov
mov
mov
cmp
push
loopne
mov
push
push
stos
mov
cltd
add
sbb
inc
repnz
xchg
sarb
xor
roll
call
pushf
sbb
gs
scas
mov
adc
ljmp
leave
rorl
fsts
sarb
xlat
adc
test
lods
or
sub
mov
fnsave
into
call
mov
inc
fs
in
int
dec
cld
mov
push
mov
fldl
pushf
inc
push
clc
sub
inc
push
pop
add
jno
cmpsb
cmovs
sbb
adc
fstl
sbb
mov
inc
or
fmull
int
sbb
mov
loop
fsubs
icebp
sub
push
xchg
jmp
dec
mov
xchg
inc
mov
push
ret
iret
enter
jo
test
pop
out
mov
dec
bound
adc
lods
jne
int
in
mov
stos
dec
cmovo
cmp
rorb
add
mov
adc
inc
in
xchg
jp
mov
repnz
and
mov
stos
pop
mov
notl
iret
fsubrl
in
xchg
push
arpl
mov
mov
enter
mov
xchg
lret
mov
jbe
hlt
out
mov
sbb
subb
xlat
push
inc
xchg
push
stc
cmp
aas
xor
mov
and
cld
outsb
jp
hlt
mov
lret
fists
bound
push
jns
cmp
and
dec
jnp
jae
push
int3
jae
das
call
sbbl
or
jne
push
add
repnz
adc
mov
jmp
outsl
int3
jnp
dec
lea
fwait
in
test
jb
pop
filds
dec
movsl
xor
mov
cmp
adc
xchg
div
and
sbb
fcompl
adc
push
xchg
dec
movsl
into
lods
movsl
jmp
jmp
sahf
aas
fmuls
dec
cs
xchg
cmpsb
push
cmc
imul
cs
out
mov
pop
jmp
cs
lea
pop
in
push
push
push
sahf
sti
imul
add
out
cltd
div
mov
scas
cs
xchg
adc
loope
in
pop
ret
into
push
fnstenv
scas
stos
ret
lahf
cs
mov
add
xor
js
pushf
fmuls
cmp
xor
cld
jnp
iret
mov
roll
dec
lds
cmpsl
and
sbb
lcall
dec
dec
cmp
push
lds
pop
jbe
shrl
data16
add
aaa
fisubl
cmp
call
pop
jnp
fldenv
jns
xchg
cltd
in
jnp
clc
mov
adc
add
pop
push
popf
gs
stc
pop
lret
hlt
dec
jo
and
movsb
iret
xor
xor
or
lock
fstpt
inc
and
les
dec
int3
xor
pop
dec
jl
push
add
mov
pop
push
mov
add
cmp
push
cmpsl
dec
push
pop
jns
ja
and
jle
mov
test
sbb
gs
jo
je
into
int3
add
sbb
mov
decl
out
add
pop
cmp
dec
push
lret
xor
jl
adc
xlat
push
aaa
xor
mov
mov
lret
shl
hlt
daa
push
inc
js
xor
or
push
cmp
subb
xchg
mov
xor
mov
jb
fcmove
push
rcrl
push
repz
cld
dec
wrmsr
dec
aam
dec
movsl
adc
xorl
or
lea
adc
inc
mov
in
pushf
out
pushf
std
movsl
int3
test
sub
sub
jecxz
lahf
inc
cs
mov
ret
roll
jmp
out
xchg
add
arpl
popf
loop
fs
flds
outsb
dec
rep
lds
sbb
add
and
mov
cmp
push
mov
outsl
push
idivb
shll
pop
and
xchg
mov
cltd
stc
arpl
xchg
push
bound
sahf
xchg
jbe
icebp
sahf
xlat
out
push
and
xchg
fidivs
lcall
out
incl
xchg
popf
jge
outsb
jmp
outsb
sti
je
cmp
pop
aas
subb
mov
in
clc
addr16
js
cmp
push
aam
lret
sbb
mov
ret
stos
mov
inc
shlb
loopne
cld
lock
adc
stos
enter
or
es
mov
add
xchg
iret
rcrb
sub
sbb
call
std
sub
xorb
mov
sbb
jge
sub
pop
jl
add
cmp
push
or
jne
sub
popa
ror
inc
xchg
loopne
inc
cli
xchg
cmpsl
in
data16
dec
pop
es
xchg
push
cltd
out
cmp
xchg
or
cmpsl
jnp
popf
xor
ficomps
xor
cli
mov
jbe
push
clc
adc
pop
aaa
pusha
es
movsl
rcrb
push
repnz
pop
cwtl
pop
in
add
jg
mov
xchg
pop
add
enter
and
std
cmp
push
fsubr
aaa
xchg
outsl
sti
xchg
and
clc
mov
fxch
pop
lahf
pop
dec
hlt
sub
inc
cmp
jbe
mov
push
stc
jns
les
mov
cmp
and
pop
sbb
push
jno
or
add
adc
popf
jb
push
popf
repz
sbb
jns
cmp
add
mov
aad
loopne
loope
mov
cmpsl
adc
repnz
in
lcall
mov
test
in
sbb
test
dec
cmp
and
aam
out
mov
popf
lods
popf
aas
loope,pn
mov
push
pop
mov
rol
stos
mov
xchg
push
push
std
popa
lret
adc
sbb
lret
aam
cmp
add
add
push
std
pop
outsb
dec
mov
push
mov
mov
ret
sub
push
push
fcompl
dec
data16
ret
daa
or
push
mov
fistps
lds
mov
jg
leave
sbb
sub
into
and
xchg
js
cltd
test
call
ds
out
xchg
push
xor
or
int
mov
push
xchg
mov
mov
shr
push
adc
cmp
and
sbb
push
mov
dec
mov
lret
dec
call
mov
xor
or
push
jne
and
ds
cltd
rcrl
sub
aam
fldt
xor
xlat
and
xor
cmp
cmpsb
mov
xor
cmp
shr
sub
sbb
push
mov
fucomp
insb
xchg
sbb
jp
das
les
aas
je
repnz
cmp
jle
jmp
sbb
in
cwtl
jmp
jno
sub
cmp
leave
inc
andb
mov
pop
es
pop
jo
cmp
mov
cmp
jmp
sbb
and
xor
in
out
rcrb
or
cmp
pop
pop
ret
sbb
xchg
leave
fidivs
das
xor
shrb
out
adc
xor
cli
sub
push
mov
mov
lods
or
addb
inc
jmp
jno
and
pop
dec
jle
arpl
pop
add
adc
shr
movsl
fdivrs
lods
outsl
imul
idiv
fbld
sti
mov
mov
sbb
stc
ds
jo
pushf
dec
xchg
lock
mov
in
test
enter
insb
shll
pusha
push
push
inc
dec
xchg
shl
divl
out
je
inc
int
stos
xorb
jmp
gs
dec
push
loope
lds
sbb
in
mov
push
and
scas
or
inc
imul
lea
in
xchg
sbb
pop
cwtl
jno
jae
dec
sub
outsb
int
mov
pop
aas
mov
hlt
enter
jle
rolb
cwtl
cltd
dec
aaa
ror
mov
cmp
pop
popl
test
repz
test
dec
pushf
adc
and
test
hlt
xor
cld
movsl
popa
outsb
add
pop
jle
xchg
int
iret
push
sub
test
sbb
xchg
pop
sbb
cmp
jo
mov
loopne
mov
repnz
andb
xchg
sti
insb
std
pop
fsubrs
push
loope
sahf
mov
push
xchg
scas
hlt
fstps
inc
mov
fildl
add
xchg
sar
push
sub
movsl
adc
sbb
xor
lods
push
xchg
mov
dec
cmp
push
insb
jle
jmp
mov
fucomi
iret
xchg
cmpsb
sbb
and
jmp
xlat
jb
sub
mov
dec
push
jge
sbbl
cmpb
xchg
push
xchg
push
imul
xchg
ficompl
cmpsl
push
addb
xor
jno
dec
push
xchg
inc
pop
sub
add
sbb
call
pop
push
add
cli
and
out
fbld
cs
bound
jno
adc
sti
arpl
test
daa
sar
loope
scas
cmp
jnp
push
insl
shrb
xorl
jl
cmp
inc
mov
fwait
jl
or
push
sub
dec
stc
int3
push
push
add
in
add
pushf
aas
pop
ds
add
cmp
out
lds
cld
push
ljmp
stc
adc
mov
hlt
js
out
ja
mov
mov
nop
stc
lock
sub
or
ja
lret
cli
dec
testb
sub
sti
imul
out
aas
loope
sub
and
je
mov
sbb
push
jo
scas
mull
cld
sbb
add
jg
into
fistpll
adc
pop
add
addr16
nop
xchg
pop
lret
jg
jmp
lock
shrl
lds
and
test
sti
lahf
inc
cmp
imul
cmp
push
mov
gs
mov
sub
dec
movsl
dec
fs
pop
push
mov
sbb
adc
mov
in
filds
pushf
add
adc
add
mov
cmpsb
bound
insb
out
data16
xor
push
pop
add
jmp
test
std
fimuls
cmp
scas
int3
inc
or
push
push
cwtl
stos
sbb
call
inc
sbb
ja
ljmp
xor
insl
mov
lret
pushf
sbb
jge
cmpsb
xor
out
flds
movsb
or
adc
jge
dec
inc
lods
mov
ja
push
xchg
or
arpl
cwtl
gs
lods
ss
sti
mov
rolb
mov
mov
sbb
inc
sbb
in
in
in
add
add
inc
xor
in
aam
pop
mov
shll
pop
lcall
adc
repz
adc
mov
push
xchg
fidivrl
xor
xor
inc
mov
fsubs
cld
push
pop
sub
cmpsb
out
roll
inc
xchg
lea
je
repz
sbb
jecxz
pusha
in
mov
enter
inc
mov
stc
sbb
rorl
push
and
jns
dec
inc
mov
or
push
jb
sbb
or
mov
rcl
test
rolb
js
aad
xchg
adc
dec
iret
ss
andb
cmp
repnz
mov
out
add
jo
call
add
movsb
repnz
inc
out
out
push
cld
enter
pop
mov
add
push
and
cmpsl
jl
sub
pop
push
cmp
pop
push
test
leave
sti
jno
cmp
jb
jnp
mov
mov
sti
hlt
mov
jne
jne
push
dec
idivl
sarb
ret
fwait
push
xor
inc
mov
and
lret
xorl
cmp
fcmovb
mov
and
fildl
push
push
in
or
mov
adc
data16
aas
fwait
data16
fistpl
add
cld
and
mov
sbb
mov
fs
sub
loopne
adc
xlat
int3
call
mov
sub
cmp
push
push
xchg
fistl
adc
cli
xchg
sub
mov
push
pop
mov
ret
iret
rcl
cmpsb
add
jecxz
repnz
mov
pop
aam
jbe
std
push
push
iret
pusha
mov
and
lret
das
xchg
das
or
pop
fists
stos
pusha
xor
pop
mov
mov
test
cmp
std
mov
mov
imul
push
int
inc
inc
stc
mov
push
pop
hlt
pop
adc
add
or
lods
add
cmpsl
jns
cwtl
mov
call
mull
lods
cld
outsl
mov
loopne
or
pop
int3
in
add
and
cmpl
repnz
dec
call
fiadds
roll
repz
notb
adc
sub
mov
mov
sti
jecxz
inc
sar
fldt
cltd
out
xor
cld
xchg
jmp
sti
cmp
dec
mov
adc
js
lahf
mov
dec
pushf
push
aam
xor
sbb
push
sahf
sub
xchg
jmp
push
sbb
sub
lods
push
rol
mov
pop
test
lcall
pop
gs
mov
add
inc
adc
adc
aad
mov
sub
ds
push
lds
out
jle
test
in
mov
pop
addr16
rclb
loop
gs
inc
shl
sbb
popf
leave
repz
sbb
in
insl
insl
push
rorl
mov
je
adc
add
cs
test
lock
pushf
into
ficomps
dec
push
pop
adc
xor
mov
mov
repnz
xchg
and
add
or
mull
push
xor
popf
addb
pop
mov
stos
sub
cld
add
outsb
dec
jb
loop
sub
fsubrl
adc
arpl
cmp
push
mov
pop
or
jno
in
lock
pop
or
stos
jge
inc
ja
out
inc
mov
push
mov
stos
push
insl
xor
lods
les
xchg
inc
rcrl
dec
pop
ds
add
mov
adc
pusha
js
pop
repz
add
push
push
test
push
imul
mov
mov
not
js
mov
out
push
int3
cmp
add
outsl
cmpsl
ss
cmp
adc
fs
jne
pop
cwtl
iret
or
mov
setae
sub
rol
dec
adc
mov
mov
jg
sbb
jnp
cmp
xor
add
or
inc
pop
mov
mov
and
mov
sbb
dec
smsw
divl
cmpsb
cltd
or
leave
nop
cmp
stos
repnz
push
jmp
sarl
cmp
sahf
iret
pusha
lea
mov
xchg
sbb
mov
filds
enter
inc
das
loope
adc
push
roll
bound
mov
fdivrl
and
pop
test
movsb
jae
sbb
jp
sbb
enter
dec
xchg
fstl
cltd
or
dec
cmpb
pop
fstpl
mov
xor
xchg
ret
or
mov
fisubrs
push
roll
xchg
mov
repnz
in
lea
fidivs
dec
iret
add
call
lcall
test
gs
and
sub
cmp
push
mov
repz
mov
pop
leave
xchg
in
or
add
iret
push
es
sub
push
les
mov
enter
callw
xchg
out
cld
out
mov
mov
xor
mov
pop
lcall
inc
test
std
cld
in
lea
jno
stos
inc
push
aas
xchg
or
jg
fmull
fiadds
push
mov
cmp
add
gs
daa
mov
imull
mov
outsb
imul
sub
dec
sub
xchg
jne
xchg
or
push
pushl
cld
push
mov
add
lds
repnz
and
imul
pop
xchg
fdiv
inc
push
stos
lods
jmp
icebp
pop
icebp
inc
dec
jo
stos
jns
cmp
pop
ret
das
test
ror
add
sbb
or
or
sahf
ja
xchg
mov
shrl
and
pop
xor
inc
mov
or
fsubs
mov
imul
sub
clc
mov
out
or
sbb
insl
popa
mov
xor
xor
cmp
fldt
fbld
and
rol
push
aad
mov
xchg
jg
insl
xchg
iret
or
dec
ret
xchg
dec
mov
or
xchg
adc
pushf
adc
dec
out
out
ds
dec
js
fsubl
cs
cltd
mov
or
scas
in
or
and
mov
xchg
enter
lock
push
add
fs
pusha
mov
mov
in
shl
pop
into
dec
int3
cmp
or
mov
mov
std
loopne
adc
jbe
scas
loop
jmp
mov
sbb
xor
sub
mov
sub
xor
jmp
adc
jmp
adc
inc
jmp
mov
adc
mov
and
and
push
push
rcrb
inc
fisttpl
cwtl
dec
shl
push
xchg
ljmp
mov
mov
xchg
sub
lret
cwtl
icebp
lds
imull
aad
ror
fwait
sub
push
pop
adc
popa
mov
shlb
xchg
push
jmp
push
cmp
inc
das
mov
out
adc
stc
jo
outsb
pop
mov
loopne
push
or
mov
icebp
hlt
nop
xor
and
xor
aam
cmp
lahf
stc
je
aam
mov
cmp
shlb
stos
loop
xchg
jae
mov
adc
sbb
mov
les
clc
cs
das
imul
mov
jecxz
out
jl
push
mov
xchg
inc
adcb
cmp
or
push
mov
leave
daa
fnsave
dec
inc
jne
push
sbb
stos
enter
das
push
ja
repnz
or
push
faddl
mov
cld
fimull
sbb
xor
iret
lea
mov
stos
in
jp
add
test
std
sub
jno
push
adc
add
mov
aas
in
bound
lock
mov
adc
push
push
bound
dec
or
add
add
adc
insb
or
sbb
jbe
pop
dec
cmp
aam
dec
jo
inc
cmc
pop
into
ljmp
pop
sub
adc
stc
adc
xchg
cmp
jo
push
shll
movsl
xchg
mov
pop
test
or
in
inc
out
sub
mov
push
imul
and
jl
inc
or
mov
loop
mov
mov
xchg
pusha
or
xchg
xchg
sarl
in
jecxz
pop
lcall
inc
or
mov
in
mov
add
loop
in
lcall
jmp
loopne
xchg
jmp
call
mov
and
out
mov
sub
fnstcw
push
fwait
bound
jl
test
or
xor
cmc
je
ljmp
in
lahf
add
inc
and
cli
jnp
sar
mov
cmp
loopne
xchg
sub
loope
push
in
je
add
mov
push
lcall
or
jmp
jecxz
in
jo
rolb
mov
xchg
daa
sbb
mov
dec
jmp
xor
sbb
xor
push
fcomp
push
sub
pop
movsl
pop
adc
add
shll
addr16
cmpsb
ret
fwait
add
repz
test
call
in
out
popa
cmp
aad
orb
fildll
sbb
int3
add
inc
and
dec
cli
adc
cmc
inc
shlw
add
pop
xchg
mov
and
sub
cmp
fmuls
sbb
out
movsl
push
adc
jge
jp
pop
jae
and
fcmovne
adc
jnp
daa
in
aas
jnp
mov
xchg
or
imul
mov
push
jo
cmp
adc
ljmp
out
mov
xlat
pushw
inc
jns
pop
loop
leave
scas
jb
call
dec
sub
mov
xchg
mov
sub
andb
xchg
add
out
add
fisttpll
xor
orb
mov
xchg
mov
mov
notl
mov
jnp
dec
pop
mov
in
int
pop
cltd
and
or
and
sub
fs
scas
inc
dec
jae
or
movsl
call
gs
push
lock
lahf
xchg
sbb
dec
cmp
lock
scas
lahf
xor
sbb
jl
xor
xchg
jno
pop
add
mov
fisubrs
add
or
std
lahf
jp
orl
cmpsb
inc
out
inc
arpl
loope
or
mov
dec
adc
cmp
test
sahf
inc
sbb
mov
jnp
and
cmp
gs
paddsb
in
push
cld
or
xchg
or
jns
fwait
sub
cmp
xor
sub
arpl
sbb
lock
xchg
fisubs
xchg
leave
fnstcw
pop
pop
std
mov
shrb
rol
push
and
ljmp
hlt
aam
jp
lahf
das
addr16
add
jae
stc
or
ds
repnz
and
dec
sub
push
mov
stos
fistps
adcb
loope
push
adc
jno
sbb
ja
call
stos
pop
ds
es
sub
dec
int
fnstcw
nop
push
lahf
add
loop
sub
popa
divb
push
vprotb
sti
loopne
xchg
outsb
nop
jne
inc
lcall
int
jp
cld
nop
mov
mov
xchg
sti
out
adc
jb
pop
mov
pop
sbb
sub
sbb
ljmp
mov
addr16
sbb
push
mov
in
xor
sub
lea
fcmovnb
sti
aas
and
jb
inc
gs
imul
cmp
jb
pop
shl
dec
loopne
mov
aam
jl
sub
or
sub
cmc
push
mov
repnz
push
into
cmp
mov
xor
mov
das
push
out
inc
rcr
dec
or
sbb
xorb
scas
mov
pop
cmp
sbb
dec
jecxz
in
pop
sub
lahf
mov
pop
cmp
jne
popa
sarb
out
jmp
mov
dec
aas
cltd
inc
aam
pop
negl
or
or
sub
ret
push
mov
adc
add
mov
add
js
cld
sbb
outsb
jecxz
in
das
ds
or
repnz
repnz
pusha
mov
mov
test
mov
icebp
lret
popf
xor
pop
cmp
lds
and
jns
lret
push
int3
fldenv
and
push
movb
push
les
mov
mov
mov
push
lcall
or
mov
orb
mov
dec
add
sub
push
dec
xchg
adc
jp
sub
inc
ret
push
adc
in
in
lods
sub
pop
mov
mov
dec
cmp
in
adc
jmp
in
pop
cs
mov
inc
cmp
dec
rcrl
cmp
sahf
sub
push
add
fs
adc
insb
mov
fmulp
cwtl
clc
inc
xchg
inc
loopne
jl
repz
inc
insb
icebp
shll
push
aas
je
mov
sbb
sbb
cmpsl
mov
jecxz
xchg
push
aad
shlb
mov
jno
and
mov
mov
test
adc
cmp
pushf
int
dec
pop
fidivs
jge
adc
jns
arpl
inc
sahf
dec
sbb
test
add
iret
in
mov
push
rol
push
sub
ljmp
adc
or
stos
gs
jmp
in
shrb
pop
pop
or
jns
dec
cs
xchg
push
pop
dec
sbb
adc
add
and
add
dec
dec
and
or
insb
test
xorb
fldenv
xchg
out
push
mov
pop
jb
jae
pop
popa
sarl
test
es
les
xchg
adc
leave
sbb
xor
jbe
shl
outsl
push
jnp
mov
push
push
aas
bound
pop
test
gs
adc
bound
pop
add
adc
xor
imulb
jne,pt
mov
bound
fstpt
inc
bound
xor
jns
lds
jge
jno
and
mov
in
and
cs
imul
pop
in
sub
mov
push
sbb
mov
ret
je
in
xor
pop
cmp
ror
fidivl
std
leave
nop
dec
jno
insb
in
cld
das
arpl
shll
inc
pop
aas
sbb
inc
loop
imul
ss
inc
xchg
mov
or
inc
sub
mov
mov
inc
mov
push
call
loop
push
pushf
jno
cmpsl
cli
pop
dec
jb
shrb
sub
dec
shr
ds
das
jae
cwtl
jns
mov
mov
fbld
lmsw
outsb
jp
xor
movb
and
sub
cmpsl
in
ret
sbb
dec
icebp
je
icebp
add
outsl
and
rorb
dec
sbb
out
es
pop
vshufpd
cmp
xor
mov
ds
daa
aas
enter
insl
scas
js
mov
fsubrp
lret
in
aad
leave
imul
pusha
or
push
orb
add
inc
push
insb
out
jp
xchg
inc
lret
fcompl
push
test
xor
or
sti
in
dec
xchg
mov
mov
popa
xchg
add
xor
iret
sub
mov
test
adc
sarl
inc
push
loopne
and
and
das
leave
popa
addr16
lcall
jns
fistl
enter
popa
ficoms
xchg
cmp
push
les
and
out
xchg
jb
and
jnp
or
push
sub
in
jge
xchg
sbb
stos
cld
mov
sub
push
and
stos
daa
or
nop
mov
xchg
mov
divb
aad
les
lods
xlat
orl
fnstcw
loope
jae
jg
xor
cmp
inc
insb
pop
fsubl
push
jl
dec
lea
stos
add
das
cmp
mov
mull
int3
aad
out
dec
mov
leave
dec
rcr
aam
push
stc
lret
add
add
mov
in
mov
push
or
adc
leave
stc
fwait
jmp
incb
cli
xchg
daa
mov
push
pop
std
data16
cwtl
dec
cmp
stc
inc
mov
int3
pop
ds
pop
bound
in
mov
adc
dec
xchg
in
adc
cwtl
fmul
daa
push
mov
sub
les
stos
int
popf
jmp
stos
icebp
adc
inc
lss
or
jae
jecxz
in
pop
add
call
loop
cmp
jge
test
daa
shrb
ss
push
mov
fistpll
inc
push
bnd
and
dec
and
orl
xor
inc
out
stos
adc
xor
dec
dec
cmp
je
loopne
int3
xor
std
fwait
mov
fs
cmp
aam
ja
call
adc
add
xor
pop
sbbb
pop
testl
lods
cmp
mov
inc
test
push
inc
and
in
push
in
mov
jno
out
mov
out
sub
aam
cmp
and
insb
call
repnz
int3
pop
dec
out
cmp
out
popf
or
rorl
mov
push
adc
das
mov
inc
loopne
pop
es
dec
sbb
fsubrs
cmpl
lock
fiaddl
lahf
pop
jp
and
fs
or
sti
add
push
and
lret
lret
mov
jle
pop
cld
idivl
arpl
mov
jnp
daa
fucomi
and
cmp
sbb
stos
dec
jo
sti
scas
pusha
mov
sbb
hlt
insb
imul
rclb
push
call
sub
das
in
icebp
fiadds
jne
sbb
leave
sub
out
mov
je
dec
sub
loopne
rorb
ljmp
test
jae
inc
out
mul
das
hlt
ret
add
sahf
dec
ljmp
sub
push
mov
push
lods
int3
xor
push
sub
imul
loop
aad
dec
pop
inc
nop
cs
popf
test
jge
out
dec
test
mov
dec
int3
adc
xor
sub
or
adc
leave
xor
jg
sbb
sbb
mov
lahf
cmpsb
jnp
lret
rcr
aaa
mov
inc
add
and
xor
fidivl
mov
test
cmp
mov
or
pop
xchg
mov
jg
lcall
push
xchg
stos
mov
cmp
out
rorl
fs
outsl
arpl
repnz
out
xor
dec
push
and
cmc
imul
jnp
cmpsl
jmp
cltd
fsubs
add
loop
mov
sub
enter
and
into
cs
loop
or
pop
push
subb
jle
xchg
push
fwait
stc
dec
test
and
add
aad
adc
imul
pop
add
cli
int
inc
or
cmp
cltd
insl
push
flds
int
emms
mov
shll
lahf
ret
mov
or
fsubs
and
fidivrs
pop
cmc
aas
ja
rcr
inc
std
dec
fcmove
out
in
xchg
out
aad
jne
pushl
cwtl
mov
ja
cld
cmp
cld
add
pop
xchg
xchg
imul
std
add
inc
ljmp
add
in
loopne
ds
sbb
leave
lock
xchg
sub
jle
loopne
jnp
mov
shrb
sahf
mov
xchg
pop
pop
out
sub
jnp,pn
pop
push
adc
jne
push
stos
icebp
xchg
cmpsl
pop
mov
data16
xor
dec
adc
mov
ljmp
fdivr
mov
cmp
hlt
cmp
call
fwait
lock
jecxz
dec
mov
fdivl
and
das
lods
stos
js
add
repnz
mov
lds
push
mov
sti
xchg
jns
dec
inc
lcall
leave
cs
cltd
sbb
ss
dec
test
inc
in
outsl
jno
stos
xor
push
jmp
sub
pusha
or
dec
mov
cld
into
lds
jns
in
repz
or
dec
pop
xchg
push
lret
add
mov
pop
repnz
add
xor
sub
scas
cmp
xchg
bswap
mov
jmp
push
jae
out
jns
popf
and
dec
mov
ds
rclb
scas
mov
adc
sti
clc
mov
jg
cmp
add
inc
ret
imul
loop
mov
inc
repnz
mov
cmpsb
loop
xchg
push
rcrl
stc
xlat
xor
enter
out
or
pusha
xchg
xorb
inc
adc
mov
mov
jmp
cmp
sub
and
push
jns
cmc
xchg
xchg
adc
lret
js
cmpsb
xlat
les
push
fidivrl
xor
pop
and
sub
dec
pop
pop
data16
mov
test
jg
mov
in
lahf
add
add
data16
in
mov
mov
or
jo
push
dec
aad
mov
dec
mov
mov
test
dec
dec
lods
ss
jecxz
ficoml
gs
les
jle
mov
adc
stc
xor
jecxz
ficomps
cmp
mov
cmpsl
roll
xchg
lahf
push
test
push
pop
pop
or
jne
or
aad
or
outsb
and
push
pop
jp
pop
adc
and
ja
andb
mov
xlat
cmpsl
call
inc
les
add
ljmp
popa
jecxz
sbb
sub
into
cmp
addr16
lahf
and
arpl
daa
mov
inc
hlt
in
or
fsubs
xchg
das
jne
inc
pop
push
adc
std
jb
mov
or
fstps
outsb
clc
inc
js
aam
dec
jo
xchg
inc
in
mov
push
mov
xlat
scas
cmp
dec
jmp
cmp
iret
xor
fbstp
test
pop
sbb
dec
jb
push
aas
or
mov
loop
and
xchg
add
xor
inc
popf
and
jecxz
fsubrs
cmp
mov
cmpsb
add
aaa
int
jno
sub
pop
cltd
pushw
xchg
mov
aad
sub
mov
int
ss
and
addb
test
scas
cmp
adc
cltd
out
mov
push
std
aam
push
push
daa
or
xor
ret
and
jp
fidivrl
aas
stos
pop
stc
lea
sub
jno
popa
cmp
jecxz
xor
inc
dec
stc
mov
dec
or
in
out
add
mov
jo
push
cmp
push
pop
and
jp
mov
cmpsl
scas
or
mov
inc
nop
fistl
xor
fstpt
imul
lods
xchg
stos
mov
mov
mov
test
or
bound
jbe
jno
outsb
or
mov
inc
mov
loop
outsl
dec
sbb
lret
add
clc
cmp
test
in
pop
lret
or
cwtl
push
fcoml
jno
cmc
icebp
mov
jp
jmp
jbe
sub
rcrl
inc
int
ljmp
sub
jns
jns
sub
sub
jb
ret
sub
xor
mov
cmpsl
jp
xchg
push
and
mov
push
or
fcom
jno
mov
sub
mov
adc
addb
mov
adc
dec
pop
push
fptan
pushf
stos
rolb
ljmp
mov
cmc
add
adcl
jb
cld
fucomp
lret
not
popf
mov
mov
in
in
sbb
push
cmp
cmpsl
test
xor
mov
ds
in
pop
sete
pop
and
adc
pop
dec
mov
adc
fmul
cmp
arpl
sbb
arpl
and
mov
popa
mov
cmp
cld
fcmovne
xchg
mov
dec
fnstenv
neg
lahf
dec
cltd
jl
jge
add
cmp
in
das
ss
mov
ret
in
mov
cmp
pop
outsl
out
mov
mov
mov
aas
mov
push
mov
lods
dec
xchg
jmp
fimull
in
dec
xorb
and
cli
mov
xlat
insl
in
xor
test
mov
clc
sub
test
pop
sub
les
insl
sub
pushl
and
xchg
fistpl
cwtl
stos
pushl
mov
jb
pop
movsbl
lcall
or
mov
cmpsl
dec
scas
imul
push
push
and
fwait
or
imul
aaa
sub
sub
inc
cmp
and
mov
sbbl
mov
mov
push
shl
push
xor
clc
push
sbb
cmp
mov
or
imul
mov
mov
add
fidivs
inc
in
adc
in
in
push
out
and
lret
xor
aad
lahf
sub
mov
adc
cmp
leave
inc
sbb
outsb
cmc
inc
and
cwtl
mov
jp
jg
dec
jne
dec
or
fs
cmpsl
add
xor
inc
dec
mov
sbb
xlat
jge
iret
dec
out
xlat
jns
loop
jo
sbb
lods
mov
and
and
subb
sti
sbb
mov
xlat
xchg
cli
cmp
out
imul
xorb
int
mulb
test
lods
das
add
rcrl
in
clc
arpl
adc
sti
sahf
repnz
scas
cmp
mov
faddl
add
push
xor
pop
dec
or
sarl
sbbl
adc
sbb
push
inc
andb
cmp
dec
aad
xor
test
pop
jnp
push
add
xchg
sub
xchg
fcmovbe
iret
es
xor
mov
addb
pop
jb
aam
jo
mov
push
adc
adc
sbb
out
xlat
pop
mov
lcall
and
xchg
repnz
push
sbb
sub
cmp
imul
dec
mov
insl
cmp
push
pop
test
lock
cmp
xor
gs
dec
push
sbb
stos
pop
sub
sub
adc
repnz
and
repnz
add
shlb
iret
add
xchg
push
lcall
mov
mov
lret
jbe
push
sub
xchg
inc
lcall
push
mov
mov
xchg
dec
outsb
mov
adc
adcb
mov
leave
and
xchg
mov
mov
pop
inc
iret
jecxz
jg
outsl
inc
psllq
sarl
pushf
outsl
leave
mov
push
test
mov
repz
xchg
add
aam
jae
scas
shll
lock
dec
sub
out
sbb
mov
shrb
out
outsb
sub
outsb
ljmp
movsl
xchg
add
sbb
push
enter
mov
js
mov
dec
cltd
loopne
imul
je
mov
adc
cmc
cmp
je
or
dec
xorl
aad
pusha
or
sub
push
pop
shr
dec
daa
and
mov
push
cmp
jmp
sbbb
ficoml
into
fs
arpl
stc
int3
mov
xchg
mull
imul
jne
outsl
and
push
outsl
fwait
jge
imul
leave
lcall
and
add
pop
xor
sub
inc
jae
cmp
and
and
jb
lahf
lret
fmul
sarl
pusha
wbinvd
insb
xchg
out
mov
push
xor
notl
rcr
int3
and
push
jp
fldl
xchg
push
daa
sub
pop
xor
and
adc
fwait
push
dec
xor
push
cmp
into
mov
arpl
cmp
cmpsl
pop
divb
ffreep
pop
push
xor
pushl
call
movsb
inc
nop
pop
adc
xchg
aad
nop
mov
mov
adc
adc
dec
jbe
jecxz
cmp
cmp
out
fcoms
popf
or
jb
jecxz
pop
pop
gs
pop
cmp
jmp
icebp
xor
dec
mov
mov
js
inc
mov
stos
jo
lods
add
arpl
les
fistl
lods
add
pop
dec
add
mov
and
outsl
or
sub
push
in
clc
scas
cld
push
inc
xchg
je
xor
data16
ret
rcrl
mov
mov
fisttpll
iret
or
mov
sub
gs
fidivrl
mov
xchg
jmp
hlt
mov
sbb
cld
int3
push
push
mov
mov
cltd
std
ja
pushf
es
jns
xor
mov
dec
inc
push
dec
jbe
test
es
shrl
lock
test
lods
or
lahf
gs
add
jg
fsub
mov
pop
sub
lret
ljmp
sbb
stos
mov
std
je
or
jnp
and
add
push
sbb
push
dec
ljmp
push
xor
ja
aam
leave
jne
scas
gs
adc
sub
mov
decb
sarl
or
fidivrs
test
lods
enter
xchg
sub
jle
inc
int3
pop
out
xchg
pop
add
stos
push
cmc
and
cmp
cmp
cmp
js
das
sbb
pop
jbe
fcmovnb
rcrl
jo
sbb
cli
int3
sti
cld
out
lea
xchg
lret
testl
dec
push
test
xor
mov
cmp
dec
clc
sub
sbb
xchg
test
dec
mov
ret
or
push
push
mov
xchg
push
push
sarb
or
mov
or
rolb
or
imul
imul
pushl
inc
in
ds
out
daa
dec
cltd
lds
movsb
filds
popa
adc
pop
lret
test
std
aas
mov
fdivr
mov
aad
lahf
fwait
add
cmp
sub
shl
hlt
sbb
cmp
xor
aas
xchg
iret
vpavgw
mov
mov
sbb
rolb
cmp
inc
pop
xchg
push
sub
and
or
clc
sub
or
pop
daa
cmp
sub
arpl
sub
pop
cmp
out
xor
mov
lock
xchg
imul
or
fadd
adc
jg
xchg
into
push
call
inc
mov
int
cltd
push
pop
mov
mov
out
dec
stc
mov
xchg
xorl
mov
test
int3
hlt
hlt
sub
add
repnz
or
push
cmpsb
call
mov
fcmovnb
mov
push
stc
out
mov
addb
stos
pop
ds
in
sub
and
xor
push
repz
sbb
dec
push
sbb
ret
push
or
repnz
pop
jns
pop
mov
cmp
outsl
lock
rorb
inc
push
pop
pop
in
imul
mov
push
push
inc
xor
adc
jne
mov
dec
fwait
call
push
lcall
mov
xor
pop
pop
xor
loope
xchg
icebp
fmul
push
sar
jb
lcall
loopne
inc
push
fdivs
mov
jl
aas
in
out
int3
sbb
nop
xchg
mov
xlat
std
cmp
adc
in
out
push
add
dec
call
clc
loop
fiaddl
bound
xchg
test
mov
clc
xchg
mov
adc
xchg
xchg
imul
scas
and
fwait
loope
lock
popa
pop
xor
js
mov
xor
or
out
pop
int3
push
inc
mov
repnz
dec
ret
jge
jb
fucom
leave
ret
int3
iret
shrb
xor
xor
add
jae
jg
leave
lods
pop
sbb
out
lds
gs
mov
movsw
xchg
fadd
cs
inc
clc
or
adc
out
loop
xor
shl
outsl
inc
push
mov
sbb
xchg
lods
dec
lret
nop
jo
mov
aad
dec
or
and
pop
loop
pusha
pop
pop
mov
jg
imul
fldt
xchg
push
paddq
push
test
add
js
dec
pusha
inc
add
mov
fwait
add
jo
stc
xor
leave
fiadds
jle
lods
popa
xchg
test
daa
fldl
sub
loop
mov
push
sub
scas
dec
lods
adc
inc
mov
fstl
mov
jmp
mov
insb
xchg
test
movsl
jb
inc
pop
test
pusha
jo
inc
mov
mov
pop
cmp
loopne
ret
sub
sub
lret
pop
adc
push
add
xorb
cmpsl
xor
add
pop
inc
xchg
fs
aaa
add
xchg
sbb
movsl
es
jle
inc
push
adcb
sarl
adc
inc
xchg
imul
dec
inc
aas
insb
vmread
mov
out
cli
sbb
imul
pop
xchg
dec
shl
dec
dec
nop
sub
jb
and
lahf
mov
movsb
loope
mov
cmp
adc
mov
or
outsl
jp
inc
push
jp
loop
inc
pop
out
scas
test
insl
in
call
jb
ja
sub
scas
and
testb
cli
cmp
sbb
xchg
scas
cmp
and
je
xor
or
xchg
xchg
mov
cmpsb
fdivrs
pusha
mov
jg
jbe
mov
leave
or
xchg
sbb
out
xor
xchg
push
iret
enter
mov
inc
xor
decb
xchg
sbb
adc
cmpsl
or
lret
out
xorb
dec
stc
dec
push
inc
add
inc
xor
jp
pop
or
add
jmp
adc
mov
sbb
add
dec
data16
sub
mov
pop
fwait
insl
xchg
sub
xchg
mov
sub
mov
sti
add
adc
sub
and
fisttps
mov
pop
jg
add
inc
pop
adc
jb
sti
jle
inc
daa
mov
arpl
pop
cmp
pusha
mov
lods
imul
shrb
adc
mov
scas
lret
mov
lea
stc
xstore-rng
push
adc
mov
jge
cmpsl
dec
mov
aad
cmp
mov
dec
inc
shl
xchg
pop
sbb
mov
cmp
pop
pop
repz
int
ljmp
mov
sub
inc
or
dec
and
adc
leave
push
es
je
dec
dec
mov
ficomps
orl
xchg
fiaddl
rcrb
dec
mov
xorb
push
sti
fnstenv
enter
sbb
repz
dec
dec
movsb
sbb
or
xchg
jnp
aaa
aas
xchg
lods
mov
movsl
mov
lds
out
xchg
jge
lahf
aaa
sarb
popa
andb
stos
fwait
cmpsb
dec
sbb
or
and
jne
xor
add
mov
adc
fldl
jnp
dec
stc
ret
cli
inc
jae
bound
jns
push
cmp
popf
and
xor
jmp
repnz
fs
push
mov
imul
out
pop
sbb
ret
cld
aad
jmp
sbb
mov
mov
in
icebp
dec
sarl
clc
dec
pop
stos
loop
cmp
mov
psubb
add
jg
cs
in
push
fdivl
mov
cmp
fwait
scas
mov
or
jne
xor
pushf
push
push
std
and
and
dec
jns
xchg
cmp
xchg
inc
mov
xchg
jge
fldcw
cmp
xchg
sti
iret
cmp
push
xchg
sbb
add
sbb
sarb
mov
push
popa
sub
fistpl
push
inc
test
sub
xlat
inc
mov
lock
push
push
push
lods
mov
jnp
scas
xchg
call
inc
or
aas
pop
outsl
add
cld
sub
mov
ds
dec
rorb
add
jge
inc
icebp
xchg
adc
fidivrl
out
xor
sub
dec
push
jns
dec
ja
addr16
push
adc
arpl
xchg
in
or
push
and
mov
subb
shll
jnp
adc
pop
cmp
loope
xchg
cmp
bound
jmp
jbe,pn
lcall
les
push
sub
loopw
outsl
in
pop
std
cmp
ja
pop
stos
arpl
mov
mov
cmp
shl
sti
cmp
mov
mov
sti
pop
inc
fmulp
xchg
jmp
adc
adcb
jo
pop
mov
arpl
fdivrl
mov
enter
pushf
pusha
js
dec
push
jae
mov
jge
xchg
fsubrl
cmp
repnz
mov
push
fmuls
mov
pusha
pop
rcll
dec
imul
or
jno
incb
pop
orb
sub
pop
into
pop
sbb
fnstsw
enter
mov
jb
mov
in
inc
fadd
sub
fldenv
in
and
shrb
ss
iret
insb
icebp
sbb
stos
daa
daa
icebp
dec
or
rorb
inc
or
sbbb
inc
ja
ud1
insb
xor
mov
inc
insl
subl
aaa
sti
enter
in
subl
mov
xchg
imul
pop
push
lretw
mov
aas
xor
fdivs
add
dec
and
mov
outsl
push
xor
dec
addb
scas
adc
inc
xchg
pop
xor
sbb
sbb
fisttpl
push
sbb
pop
mov
sbb
fstl
jne
xlat
and
dec
pop
mov
pop
mov
xor
pop
or
lock
inc
jle
cwtl
and
fldl
sbb
lahf
scas
in
sahf
std
adc
data16
xor
sub
dec
and
pop
mov
in
or
push
mov
outsl
lret
adc
jg
sub
xlat
ja
push
loope
pop
or
mov
arpl
sub
out
mov
movsb
leave
jb
dec
pop
mov
cmp
xchg
push
mov
addr16
mov
repz
jno
jg
fldl
xchg
dec
dec
sub
mov
pop
xchg
add
inc
mov
test
in
addr16
fcmove
cmp
lock
cmc
shl
popl
scas
and
mov
cmp
sub
ja
test
lcall
xchg
sbb
out
cmp
imul
test
cmp
int3
dec
mov
adc
sub
popa
stc
jno
out
ret
out
flds
push
add
sahf
cmp
popa
xor
sub
call
sub
jns
jg
add
inc
in
mov
es
push
sar
sahf
call
pop
into
adcb
jae
imul
jnp
rorl
push
cwtl
jmp
jnp
call
push
xor
sub
xchg
imul
sub
jmp
ljmp
push
mov
adc
and
cltd
mov
adc
mov
mov
and
psrlw
popa
dec
orb
out
mulb
xchg
lret
mov
mov
fistpll
mov
or
incl
sub
push
push
sbb
push
mov
stos
adc
cld
jbe
mov
lods
into
adc
movsl
cltd
lahf
jns
push
jecxz
insl
inc
sbb
ss
mov
lret
push
or
lret
fs
mov
mov
movsb
lods
sub
sub
cmp
mov
outsl
push
xor
lods
cmp
es
ret
jl
pop
mov
inc
les
mov
cli
xor
pop
sub
out
sub
repnz
rcrl
sub
test
ss
mov
iret
mov
scas
pop
push
or
loope
inc
pop
pusha
add
addl
add
sbb
data16
jge
jp
loopne
add
mov
add
cmpl
jbe
nop
xor
cmpsb
adc
push
aas
int
in
stos
fadds
ss
push
xchg
in
add
sahf
iret
add
shrl
das
push
call
cmp
add
fsubrs
cmc
fbstp
xchg
push
lock
push
cs
pushf
inc
cmp
scas
sub
arpl
cmc
mov
fstps
jo
push
mov
mov
mov
mov
cmpsl
xlat
pop
pop
or
das
call
mov
pop
aad
jnp
dec
nop
sbb
cmp
add
lods
jg
call
dec
or
push
nop
enter
lock
mov
gs
cmp
sti
mov
mov
adc
out
jp
test
fnsave
adc
je
out
xor
and
push
scas
subl
movsl
jp
or
mov
pushf
xchg
mov
outsl
and
sarl
inc
mov
imul
adc
pop
enter
outsl
rcl
and
pop
xor
ss
orl
fldenv
lahf
das
jp
xor
add
push
in
neg
mov
and
mov
pop
orl
mov
mov
clc
sub
jnp
movsl
pop
mov
and
mov
pop
lret
sub
jb
das
push
jecxz
shlb
inc
aaa
xchg
aam
xchg
js
push
pop
addl
xchg
loopne
xchg
int
clc
mov
pop
lock
inc
out
popf
sbb
xor
cmp
or
lret
out
pop
into
adc
dec
fstpl
cmc
and
adc
ss
push
adc
shlb
cmc
xchg
test
es
out
fdivl
mov
lods
mov
xchg
or
sbb
fsubrl
stos
dec
xchg
xchg
cmp
push
xchg
jl
clc
das
adc
cmpsl
fcoml
in
adc
sub
in
add
adc
out
into
lea
jnp
jmp
inc
mov
in
mov
dec
fucomp
xchg
in
cmpb
ss
jno
or
dec
and
rorb
and
mov
jl
out
mov
hlt
sub
ret
mov
pop
push
stos
aad
xchg
mov
aam
cmc
xchg
mov
shrb
sti
mov
test
aaa
imul
add
lahf
shrb
test
loopne
stc
mov
lcall
in
pop
mov
jecxz
ljmp
mov
mov
mov
xchg
jbe
loop
and
mov
cltd
adc
mov
lcall
add
sti
hlt
sbb
and
and
xchg
cmp
mov
mov
lret
lods
mov
mov
subb
or
sahf
xor
mov
sbb
pushf
cmp
xchg
dec
out
ds
jp
lods
mov
rolb
inc
jp
mov
pop
xchg
lods
mov
ds
mov
shlb
jne
jecxz
push
das
lods
push
pop
sahf
or
mov
test
test
out
inc
dec
lods
sub
aad
mov
push
loop
pop
pop
fisubs
pop
jmp
cmp
push
ss
pop
sbb
mov
mov
ret
mov
pop
movsl
and
out
repnz
fdivs
or
and
mov
xchg
dec
pop
jge
loop
xchg
cmp
dec
ss
stos
call
sbb
inc
jns
cmp
shlb
pop
movsb
ret
and
inc
jle
xor
shll
cltd
pop
xor
ss
fwait
outsb
adc
cmp
inc
in
aad
jne
add
ja
addr16
divb
ret
pop
pop
xor
adc
pusha
scas
repnz
xchg
inc
iret
jmp
cltd
dec
shlb
mov
fiadds
adc
jns
cmpsb
shlb
in
mov
dec
cmc
inc
enter
test
neg
or
pop
jb
cmp
pusha
sbb
stos
clc
orb
fildll
fisttpl
xchg
mov
jbe
mov
pop
pushf
lret
fidivrl
mov
mov
scas
adc
add
jmp
push
movsl
xchg
add
loop
push
xchg
lret
dec
fwait
loopne
cmp
jle
cmp
pop
aad
add
mov
imulb
mov
lock
mov
xchg
je
movsb
stos
sub
lock
sub
ret
add
cli
pop
cltd
shrl
or
int
xlat
repz
mov
lods
mov
mov
js
fdivl
cmp
lods
std
mov
or
add
pop
push
lods
xchg
pop
push
lock
xchg
stc
cld
xchg
lods
movsl
pop
rcrl
rcll
out
jmp
rorl
loope
inc
das
mov
dec
xchg
scas
rcrl
inc
fiadds
daa
dec
mov
popf
inc
jge
xchg
xchg
pop
sbb
pop
fisubs
dec
daa
xchg
xchg
cli
mov
mov
jns
enter
testl
js
dec
jbe
jge
dec
shrb
loope
push
pop
in
lret
and
or
add
test
stc
jp
fstl
xchg
out
xor
mov
mov
pop
xchg
inc
gs
push
pusha
movsl
cli
jmp
mov
enter
xor
or
mov
fwait
daa
xorl
daa
adc
xor
jmp
push
out
push
inc
loopne
mov
and
cmpsb
int
fldt
int3
cltd
les
test
imul
cltd
and
les
pop
sbb
icebp
sub
push
movsb
xor
mov
push
shrl
out
pop
jl
xchg
insb
sbb
adc
xchg
hlt
lret
imul
pop
aad
dec
stc
mov
je
xchg
mov
fisttpll
arpl
add
push
clc
ret
mov
mov
iret
push
xor
xchg
scas
pop
cltd
inc
in
sub
sbb
cmp
outsb
cltd
cmpsb
sbb
xor
inc
mov
adc
fstps
mov
cmpsb
jecxz
mov
shrl
push
aaa
sub
loop
lret
mov
lcall
inc
sub
aam
fs
cmp
add
inc
in
testb
cli
pop
adc
aad
lea
pop
jo
jmp
dec
push
mov
cwtl
cmp
and
push
inc
data16
push
gs
mov
xor
fwait
inc
lea
outsl
push
popa
jle
sub
fstl
imul
push
or
leave
in
xor
jecxz
idiv
test
sub
sub
mov
outsl
mov
sti
jp
push
cltd
rcrl
lret
adc
mov
insl
pop
cwtl
or
nop
and
mov
inc
mov
in
sub
jb
jne
int
outsl
testl
cs
in
fadd
popa
jmp
ja
stc
cmp
clc
sbb
stos
in
ss
mov
mov
aaa
je
out
inc
icebp
sub
fbld
add
stos
in
sub
loope
daa
adc
xchg
test
xchg
mov
sub
ficoml
cmpl
add
dec
cmp
out
mov
pop
mov
mov
imul
imull
cmp
mov
push
mov
pop
inc
push
cld
pop
dec
lret
jne
pop
notl
popa
mov
dec
out
inc
mov
repz
pop
xchg
daa
pusha
pop
push
pop
jg
and
adc
dec
popa
jecxz
lret
rol
adc
pop
dec
les
test
repz
sbb
push
push
and
repz
cltd
mov
push
jnp
rolb
aaa
sub
inc
scas
outsl
test
sti
push
out
push
repnz
lcall
aad
mov
lds
hlt
imul
dec
xchg
xchg
inc
push
pop
mov
insb
cmpsl
or
call
push
imul
push
jle
adc
push
in
into
xchg
jnp
inc
xchg
cltd
int3
shll
add
jae
and
rorb
xchg
pop
add
push
mov
adc
inc
addl
mov
shrl
int3
mov
icebp
out
mov
or
mov
shlb
xor
push
push
cltd
lea
into
adc
arpl
dec
cmp
jnp
pop
das
jbe
dec
jae
jle
fwait
add
test
adc
lock
dec
jns,pt
xchg
mov
push
mov
jno
in
xchg
inc
cwtl
sub
repz
sbb
stos
scas
inc
inc
rolb
inc
xor
shrl
stc
aad
pop
mov
sbb
popf
fisttps
push
mov
jae
loop
xor
pop
pop
and
jbe
add
mov
adc
jl
addr16
sub
fwait
movsl
pop
jmp
in
in
mov
in
inc
testb
in
aaa
push
mov
mov
mov
imul
out
ret
int
adc
dec
push
add
sbb
es
mov
mov
adc
push
sbb
outsb
jno
xchg
leave
inc
xchg
push
es
jno
into
mov
xchg
add
mov
mov
mov
out
mov
jg
call
outsl
pop
jmp
scas
inc
ss
adc
mov
jecxz
dec
push
pop
xchg
test
and
ljmp
scas
lahf
push
lea
sub
and
dec
cltd
lods
out
lret
jno
and
cmp
stc
inc
cmp
lret
insl
sbb
sahf
xchg
es
mov
jp
cmpsl
fwait
andl
dec
fnstenv
call
jbe
and
loopne
cmpsb
ret
push
into
mov
aad
add
sub
out
filds
cmpsl
push
std
nop
into
mov
iret
imul
sub
push
jg
mov
cmp
clc
out
pop
lds
movsb
mov
data16
sub
aad
xorl
aam
inc
loop
shr
out
in
push
popf
addr16
cmpsl
inc
xor
or
or
repnz
xchg
cli
lods
ret
rcrl
push
mov
and
jle
scas
je
dec
fwait
aad
jge
xchg
pop
insb
ret
stc
mov
and
mov
xor
and
push
mov
xchg
cmp
divl
hlt
sbb
xchg
ret
pop
sbb
ret
lcall
mov
nop
mov
pop
arpl
mov
popf
sbb
xchg
loop
mov
dec
lods
icebp
fwait
pop
sub
mov
pop
enter
stos
pushf
inc
xchg
cmp
jge
sub
rclb
or
xchg
pop
or
les
cli
and
data16
cmp
lods
fcom
js
mov
xlat
push
lock
or
aaa
cs
jns
inc
or
pusha
enter
mov
push
or
leave
jecxz
lret
mov
or
arpl
inc
rcrb
call
cli
jl
dec
aad
pop
out
int3
ss
cmp
cmpl
out
pop
dec
rcll
cs
addl
inc
out
popf
lcall
cmp
stos
adc
ss
scas
push
testl
fdivr
out
jmp
loope
scas
outsl
not
cwtl
sahf
lea
xor
mov
int3
jne
out
data16
cmpsb
xchg
xchg
bound
dec
pusha
enter
dec
lret
pop
xchg
xchg
push
push
push
sti
mov
dec
pop
test
adc
push
je
pop
rclb
mov
out
pushf
sbb
cs
int3
inc
stc
jmp
mov
add
xchg
xor
fdivr
sub
aad
adc
leave
test
adcb
in
icebp
add
aas
fnstcw
add
or
xchg
lods
push
mov
test
cmp
inc
lock
pop
mov
mov
pop
push
addb
push
or
insl
push
sub
jl
les
out
fisttpll
xchg
das
add
or
fs
hlt
imul
aaa
cltd
repnz
add
jno
jbe
jb
mov
and
das
mov
mov
fbld
icebp
shrb
nop
or
cmp
addl
ds
dec
jle
inc
rcr
test
push
out
cmp
dec
push
xchg
lock
fisubs
dec
inc
push
lcall
lret
xor
icebp
aas
int3
and
out
xabort
pop
mov
scas
mov
mov
cmp
das
mov
call
push
mov
ja
pop
or
jle
jno
push
xchg
insb
pop
dec
bound
push
or
lcall
int3
nop
inc
fs
sbb
inc
shlb
into
or
sahf
fwait
mov
jnp
mov
xchg
ljmp
fldt
sbb
mov
lods
mov
mov
daa
mov
dec
add
icebp
xor
pop
leave
imul
fcmovu
dec
sarb
or
loopne
out
repz
push
or
xchg
outsb
dec
lret
ret
mov
sub
xor
add
jp
mov
loopne
andl
sub
mov
lock
lahf
add
nop
sub
into
mov
and
inc
jae
icebp
popf
xlat
popa
and
shrl
add
cmc
sahf
sbb
cld
out
mov
inc
lcall
push
aas
lods
fidivl
outsl
xchg
sahf
outsl
cmp
ljmp
mov
cwtl
xchg
loopne
loopne
inc
hlt
loop
xor
fldt
and
cmp
leave
mov
xor
add
sub
repz
adc
jno
or
mov
ret
adc
xchg
xchg
nop
mov
loop
cmp
aad
sti
in
ret
test
sub
mov
cltd
rolb
dec
mov
add
ss
jno
test
scas
es
pop
pop
push
sub
fisttpll
adc
outsl
in
or
stc
dec
pop
pop
cltd
or
sti
mov
jmp
les
pushf
punpckhwd
mov
inc
mov
ret
mov
mov
addr16
push
sub
or
ja
mov
lret
mov
cmp
in
jecxz
movsl
mov
xor
mov
push
lret
mov
bound
mov
mov
stos
rorl
andb
sbb
or
sub
push
mov
or
fisttpl
sbb
mov
sbb
inc
add
add
cmc
adc
adc
aam
leave
cmc
popf
mov
in
sbb
push
test
add
clc
stc
dec
shrb
inc
hlt
in
xorl
adcl
cmp
adc
fisubs
sub
or
sub
sbb
movsl
add
or
jp
int
lret
lds
or
xor
jns
imul
mov
push
push
pop
cs
jno
inc
popa
lods
icebp
inc
pop
sub
dec
xor
inc
inc
push
fucomp
out
test
mov
clc
jle
orb
xchg
mov
insb
int
fs
mov
cmp
or
mov
mul
std
dec
test
jno
jge
pop
sub
loop
ljmp
pop
out
push
push
dec
sbbb
lods
jge
lahf
xlat
hlt
jmp
fcmovu
xchg
cwtl
mov
ficoms
adc
and
pop
pop
lcall
leave
scas
scas
cmp
in
jge
xchg
rcrb
aad
sbb
out
adc
mov
sbb
push
cmpsb
xchg
mov
mov
stos
insb
adc
gs
insl
into
jae
adc
adc
fsubr
es
mov
ss
mov
ljmp
lret
test
out
cmpsb
cwtl
rcrb
lret
jge
inc
mov
push
jb
mov
js
xor
loop
push
pop
jns
idivl
es
sbb
je
add
popf
xor
test
repnz
mov
fsubrs
hlt
ja
mov
aaa
std
flds
lods
les
cmp
add
les
hlt
sti
dec
addr16
lods
xor
hlt
enter
or
inc
inc
loop
and
out
dec
mov
dec
shrl
fcoms
sbb
ret
fistl
nop
mov
lret
lahf
scas
sbb
sbb
loop
push
sbb
aas
movsb
push
jae
sti
scas
dec
add
xchg
pop
add
push
or
xor
push
outsl
les
jmp
pop
mov
pusha
cmc
leave
cli
push
test
add
jmp
dec
sti
loop
xchg
xor
add
addr16
insb
pop
inc
iret
cmp
or
lds
data16
jecxz
xchg
stos
loop
je
test
test
jbe
jbe
out
cwtl
pop
les
mov
pop
div
pop
sti
mov
mov
and
mov
add
or
sbb
xchg
jecxz
lds
xchg
incl
jno
addb
lods
push
cmp
mov
ja
push
loope
sbb
sub
add
test
hlt
je
ret
insl
out
push
and
mov
mov
sub
std
test
mov
and
xor
cwtl
xor
mov
insb
fadd
sahf
test
inc
out
dec
pop
pop
xchg
fdivrl
pop
adc
idiv
pop
test
jecxz
mov
hlt
insl
xchg
sahf
fidivrs
mov
rorl
bound
xchg
imul
adc
xor
xor
xchg
bound
je
sbb
sub
pop
or
inc
add
mov
pusha
jbe
fnsave
add
fstl
ja
dec
insb
push
aaa
lcall
jae
mov
sbbl
arpl
mov
lret
sub
jnp
daa
cltd
loop
leave
les
or
xor
insb
loopne
mov
out
add
dec
sarl
icebp
push
test
imul
inc
stos
add
into
sbb
lods
mov
movb
shrl
inc
stos
fadds
dec
fdivrp
or
push
and
nop
push
or
jecxz
loop
dec
jmp
mov
push
jbe
and
dec
dec
data16
es
mov
xor
push
mov
ret
gs
inc
leave
ficoms
rolb
out
jl
ret
ljmp
jmp
test
push
repnz
addr16
repz
pushw
ret
out
sbb
test
sahf
psraw
sbb
pushf
jecxz
inc
ror
out
popf
adcl
fcomps
pusha
js
or
or
rclb
add
jno
mov
rolb
sbb
shrb
add
pusha
jns
leave
jge
lcall
ja
add
xchg
push
clc
adc
sbb
push
rclb
dec
inc
jmp
scas
and
arpl
inc
insb
and
dec
js
push
xchg
test
pop
or
and
adc
xor
dec
push
dec
lret
loopne
popl
inc
call
dec
cmpsb
sahf
and
jo
and
xor
test
mov
cmpsb
fwait
push
subb
xchg
pop
jne
push
mov
adc
pop
loope
setp
lock
jo
cltd
ret
mov
jno
jmp
mov
jp
and
sub
mov
xchg
and
hlt
mov
insb
enter
fidivrs
loope
xchg
sbb
sbb
out
sub
pop
sbb
fsubrp
jnp
cmp
out
imul
xchg
or
jp
xchg
aas
lret
xchg
push
push
shlb
mov
jnp
pushf
and
fucomp
push
in
add
mov
inc
inc
push
sbb
cmp
cmp
dec
repnz
hlt
add
cs
out
push
rcrl
mov
into
lahf
xor
les
sbb
test
repz
rcrb
push
hlt
std
jo
add
data16
mov
xor
leave
jge
mov
lahf
push
test
xchg
mov
int
jecxz
push
inc
xchg
xchg
mov
cmp
shr
ljmp
out
push
cmp
lock
clc
sub
dec
push
xchg
jmp
xor
mov
sbb
inc
pop
es
stc
pop
and
and
inc
cmc
orb
jns
dec
int
inc
and
lea
and
push
ss
fwait
gs
adc
hlt
mov
out
push
push
push
sbb
sarl
mov
sti
push
inc
insl
add
insb
rcrb
sub
pop
insb
les
pop
sbb
sbb
scas
push
sarl
ret
into
sub
jecxz
outsl
scas
ljmp
dec
push
mov
add
sbb
and
cmpsl
xor
xor
mov
and
inc
or
push
dec
adc
mov
sarb
das
subb
inc
lods
cltd
iret
inc
mov
and
out
insb
fnstcw
cmp
aad
push
fistps
xchg
xor
pop
into
mov
subl
jp
fistpl
enter
shrb
jb
sub
mov
inc
cmc
pop
lcall
cmpsb
out
arpl
or
lds
fisubs
push
jo
push
fwait
jne
repz
dec
mov
xor
mov
cmp
int3
in
push
add
xor
jbe
sbb
add
enter
xchg
popa
xchg
orl
push
lret
and
stos
test
int3
cmpsl
mov
data16
pop
push
sbb
sub
xlat
decl
jns
in
cltd
add
xchg
xchg
xchg
dec
pop
outsl
ret
add
sub
and
imul
jns
stos
daa
add
orl
pop
iret
loope
out
jb
hlt
dec
add
sbbb
push
jb
popf
and
sub
cs
mov
orl
scas
imul
mov
cmpsl
rorl
lock
or
mov
sub
shlb
and
and
mov
push
loopne
mov
dec
mov
pop
icebp
inc
or
ljmp
xchg
stc
hlt
lcall
es
jle
add
subl
dec
cmp
jns
imul
movsb
popf
std
lods
mov
mov
pop
mov
in
sbb
lds
jne
movsb
ret
into
xabort
mov
sub
ret
jbe
sarl
mov
inc
mov
and
and
pop
push
push
sub
and
fildl
push
rolb
insb
int
loop
or
cmp
daa
std
pop
push
or
xor
and
mov
notb
push
lods
call
dec
mov
jne
shll
sbb
and
fisttpll
sti
ret
aad
sti
jl
inc
or
stc
mov
std
or
loop
xchg
loope
cmp
cli
orb
or
divl
push
jg
out
and
popa
stc
xor
jb
mov
lret
inc
sti
mov
roll
mov
push
or
repz
ss
push
enter
adc
popf
insb
cli
outsb
xchg
in
stos
hlt
adc
and
cwtl
adc
xchg
leave
fildll
insl
xchg
jmp
in
jae
sti
pushf
push
lock
mov
sahf
lods
repnz
dec
push
cmp
fidivrs
sub
jle
mov
insl
mov
xchg
jecxz
cs
and
frstor
mov
mov
and
jb
test
pop
outsl
sbb
arpl
repnz
and
mov
sub
fbstp
dec
and
or
mov
pop
cmp
cmp
outsl
pop
sbb
push
cmc
arpl
and
inc
lret
mov
pop
inc
and
call
adc
sti
cmp
and
and
cmp
dec
add
push
test
add
jge
inc
pop
imul
jg
add
sbb
ret
mov
cmpsl
fadds
in
insl
jb
lods
cmp
mov
xchg
sahf
jno
test
incb
dec
mov
cltd
sub
xchg
in
push
dec
and
fildll
sarl
mov
pusha
aaa
sub
mov
and
or
xor
stos
int
and
mov
loop
inc
adc
out
aad
je,pn
in
les
data16
sti
xorl
mov
push
aad
add
pop
push
mov
adc
sbbb
scas
mov
sub
ss
aas
mov
popf
inc
add
xorl
inc
xchg
xor
out
add
lds
movsb
pop
ss
movsl
sub
pop
xchg
jno,pn
jno
test
or
push
inc
dec
jbe
and
xchg
push
int3
adc
lea
int3
ficoms
xchg
lret
aas
push
ss
fistpl
jl
mov
popf
ds
test
or
aad
fidivrl
out
insl
jno
mov
pop
hlt
push
int
test
and
dec
dec
pusha
fstpl
and
jmp
stos
int3
lea
fwait
jb
and
dec
xchg
sub
std
mov
outsb
xorl
or
xchg
mov
sbb
pop
in
cmp
sub
test
cmpsb
mov
insl
xor
in
orb
inc
inc
or
cmpsb
insl
lods
jle
inc
lods
aaa
add
add
mov
je
test
xor
je
repz
std
xor
sub
sbb
test
mov
xchg
mov
into
outsb
push
jns
mov
faddp
stos
adc
mov
push
sub
test
shlb
xor
mov
push
in
sbb
jge
fs
push
mov
cmpsb
test
aad
addr16
dec
jmp
add
inc
pop
fildll
or
cmpsb
push
fdivrs
fcomi
aaa
push
repnz
sub
push
imul
dec
push
cmp
aas
mov
fwait
aaa
lcall
loopne
xchg
rcr
add
pop
lahf
sbb
pushf
rorl
lods
sbb
pop
arpl
add
repnz
dec
xchg
lcall
and
mov
cmp
jbe
adc
cmp
aas
xor
fisubs
pop
and
lret
sti
or
sub
xchg
add
xchg
inc
fdivp
mov
out
mov
int3
ret
sarb
icebp
ja
cwtl
cmpl
pop
dec
and
adc
jbe
jo
pop
dec
nop
add
xlat
jmp
cmp
enter
mov
lock
fldt
cltd
daa
mov
cs
xor
sbb
add
fnsave
and
out
sub
jno
and
dec
jl
xorl
test
inc
mov
jmp
push
mov
popa
xor
out
cmp
dec
xor
popf
sbb
es
cmpsb
xor
sbb
and
test
mov
imul
bound
aaa
add
dec
cmpsb
lods
cmpsl
mov
imul
lcall
mov
movsl
movsb
movsb
cmp
adc
mov
fsubl
fisttpll
or
sbb
jno
adcl
xchg
fbstp
sarl
loopne
mov
cs
test
arpl
xchg
adc
sbb
add
stc
aas
push
mulps
xor
fcomps
int
sub
push
cmp
cmpsb
sub
pop
out
shlb
lret
sbb
cmp
add
inc
pop
ss
lods
mov
outsl
inc
fsubr
hlt
cli
sbb
sub
xchg
add
das
repnz
divb
stc
call
cmp
movsl
jl
cmp
sbb
or
ss
jne
push
ja
imul
test
xor
stos
out
into
push
fs
insl
push
or
pop
mov
jl
or
fstps
mov
xor
sub
lods
lret
cmp
fimuls
mov
mov
std
aad
int
sub
sbb
int
loop
jno
sub
adc
rorl
icebp
inc
loopne
jbe
aas
jb
add
push
xor
ret
repnz
mov
in
cmp
jo
icebp
inc
cs
mov
fucomp
pushf
dec
pop
or
or
out
fisttpll
add
mov
insl
outsb
xchg
repnz
leave
test
mov
lcall
mov
mov
push
pushl
jne
fistpll
inc
push
push
jp
dec
cmp
xlat
xor
std
clc
adc
ret
add
xor
mov
push
mov
mov
in
mov
pop
fstps
insl
or
notl
and
aam
lods
mov
pop
mov
jnp
leave
out
and
rorb
loope
mov
ds
adc
stos
sti
call
push
std
out
loop
inc
into
cmpsb
inc
pop
jle
lahf
inc
jb
outsl
jnp
ja
movl
dec
push
pop
in
ss
sbb
test
mov
pusha
xor
dec
or
nop
into
fst
ljmp
fimuls
push
dec
add
mov
mov
cli
xor
push
cmpsb
xchg
in
fnstsw
imul
or
aaa
xchg
sahf
cmpsl
fnstcw
mov
pop
jl
mov
out
lods
ret
and
shl
pusha
test
sub
mov
test
xor
fcmovnb
or
inc
scas
sub
push
scas
hlt
mov
loopne
push
loope
lock
mov
push
inc
jne
mov
jecxz
cmc
jp
cmc
mov
mov
movsb
and
inc
mov
call
cmp
lret
mov
je
pushf
loope
test
add
mov
cmp
lods
stos
xchg
outsb
fldl
lock
das
fisttpl
movsb
adc
fcomps
lret
sub
or
push
sub
sub
shr
jl
adc
push
fimull
fcoms
adc
iret
stos
inc
aam
scas
xorb
scas
adc
pop
daa
fcmovnu
in
pusha
test
xchg
stc
outsl
mov
sub
xchg
add
push
js
adc
stos
inc
lods
mov
mov
imull
std
sti
mov
ss
xor
mov
mov
inc
jbe
mov
js
mov
cwtl
dec
mov
xor
sbb
pop
scas
shlb
adc
inc
call
out
jge
push
mov
les
in
pop
xchg
jp
shrb
mov
xchg
rolb
outsl
dec
xchg
cmp
xlat
adc
inc
push
mov
mov
sub
test
ficomps
sub
out
dec
call
aam
addl
clc
or
push
inc
adc
lea
addb
jnp
mov
cs
into
ficompl
cs
sar
lods
push
and
cmp
dec
jae
mov
push
mov
cmp
mov
loope
inc
xor
cmp
in
adc
test
int
test
xchg
movsl
mov
mov
leave
and
int3
das
pop
rcll
pop
adc
inc
pop
ret
sub
jge
lret
mov
jns
inc
cmp
inc
ds
push
out
mov
outsb
loope
movsb
jnp
add
xchg
adc
lahf
xor
int3
pop
les
add
and
pop
and
jmp
sahf
sti
in
sbb
jns
jno
nop
mov
mov
enter
jmp
mov
jno
pop
sbb
cwtl
inc
sbb
into
cld
stos
dec
cmpsl
cmp
fs
popf
and
dec
aam
lret
inc
rcll
aad
repnz
ja
mov
es
dec
fldenv
lret
loope
and
stos
movsl
or
es
adc
inc
fadds
and
pop
in
add
jno
adc
inc
adc
imul
sbb
or
sbb
mov
push
add
repnz
xchg
cmp
push
cltd
pushf
sbb
cltd
or
push
jle
std
ret
mov
jle
rorb
adc
adc
xchg
add
int3
push
and
jg
arpl
dec
jg
into
xor
in
jg
repz
push
xlat
jecxz
push
out
out
push
pop
cmp
out
mov
cmp
adc
lds
je
dec
cmpsb
rcll
daa
cmp
xchg
ret
inc
aam
roll
sub
and
or
pop
sub
and
adc
jg
mov
and
repnz
jbe
aaa
ss
pop
cmpsb
test
xor
inc
jl
jno
xchg
adc
sbb
pop
xchg
sub
adc
popa
movsb
incb
or
iret
cmc
xchg
aas
pop
dec
push
mov
fs
mov
mov
jb
cmp
fsub
pop
xchg
repnz
nop
insl
mov
aad
dec
divb
lret
mov
and
cld
dec
outsl
jbe
add
out
incb
inc
lods
negb
in
mov
dec
lret
dec
xorb
push
xchg
or
js
wrmsr
adcl
xchg
lock
push
xchg
scas
jl
enter
and
scas
fdivrs
daa
insb
insb
mov
or
leave
xor
inc
mov
daa
sbb
das
adc
and
ret
mov
orb
iret
xlat
sti
das
mov
xchg
mov
mov
and
cld
sarb
sbb
xchg
cmp
sub
pop
les
data16
arpl
mov
xor
xchg
jbe
ss
push
repnz
add
nop
cmpsb
out
dec
lock
lea
cmp
pop
mov
add
pop
or
into
or
sti
inc
jae
lret
cld
fists
push
jo
mov
lret
or
xchg
mov
ljmp
aad
sahf
adc
adc
fildll
popf
lds
popa
dec
mov
arpl
ljmp
loope
ret
loope
push
sub
or
xor
and
imul
adc
mov
xchg
push
cmp
ljmp
sub
clc
les
dec
dec
push
and
lock
jl
xor
pushf
inc
stc
nop
push
jno
inc
roll
add
mov
sbb
push
sub
inc
int
lret
adc
xchg
cmpsl
sahf
and
mov
mov
xchg
lea
dec
ljmp
pop
cmp
enter
aad
arpl
adc
data16
or
or
call
aam
fsub
add
pushf
mov
addr16
xor
mov
std
int3
cli
pop
gs
mov
jge
inc
test
jbe
cmp
icebp
jbe
inc
cmp
outsb
sti
mov
sti
in
lea
jg
sbb
neg
mov
add
sbb
xchg
push
adc
inc
lds
xchg
and
out
mov
xchg
popf
rcrl
jg
push
cmpsb
cli
aaa
xchg
push
jbe
mov
push
pop
mov
mov
add
icebp
mov
mov
sbb
push
loopne
int
jnp
sub
inc
fimull
ljmp
es
and
js
push
push
clc
cmp
jg
outsl
and
sub
jno
push
ljmp
ret
mov
imul
pop
push
jo
jge
mov
mov
lret
sbb
add
sbb
pop
xchg
inc
scas
into
sub
cwtl
and
adc
sarb
fwait
add
sahf
jge
mov
sub
and
cmp
add
out
mov
sbb
push
jns
ljmp
or
xchg
inc
pop
lcall
pop
sar
call
push
push
repnz
mov
shrb
pop
loope
lcall
mov
jne
into
aam
gs
fidivl
cs
pop
push
cmp
in
sbbl
adc
repnz
cltd
cmpsb
push
movsb
jecxz
arpl
rol
and
cmp
in
icebp
dec
loope
pop
push
ret
repz
mov
jle
inc
and
add
insl
out
mov
cld
or
pop
jmp
sahf
jb
dec
xchg
les
popa
push
pop
jne
xchg
dec
enter
and
jnp
inc
dec
jle
and
repz
stos
mov
mov
pop
sub
push
orl
clc
mov
or
cmp
lret
test
push
mov
cmp
add
and
sub
push
mov
dec
adc
stos
out
pop
cmpsb
push
orb
jbe
insb
jmp
dec
cwtl
rcll
cwtl
mov
sub
daa
jae
dec
loop
repz
cmpsb
lret
xchg
mov
loop
lret
pushf
mov
mov
call
lods
pusha
adc
xor
mov
xchg
cmpsb
xchg
add
sbbb
or
xchg
jo
bsr
mov
cmpsb
ret
data16
mov
fdivl
and
inc
nop
jnp
mov
mov
lahf
addr16
or
xor
or
jo
sbb
xchg
iret
jbe
mov
inc
xor
sbb
test
jle
or
fisttps
leave
pop
sub
or
xchg
test
mov
mov
sub
mov
dec
aad
mov
fisttpll
xchg
scas
out
mov
xchg
inc
sbb
jae
mov
pop
xchg
int
movsl
pop
cmpsb
loope
mov
loope
xor
and
aad
shll
adc
enter
adcb
shl
dec
mov
jle
test
pop
or
jo
sar
shlb
mov
lcall
mov
adc
xor
rol
push
loop
rorl
mov
xchg
push
inc
push
mov
jb
pop
push
lret
jmp
popf
fdivs
int
inc
dec
sti
arpl
and
and
sbb
dec
xchg
pop
mov
push
or
jne
imul
out
arpl
out
rorb
aas
data16
cmp
sbb
cld
pop
in
cld
rorb
jb
mov
pushf
add
lcall
jnp
pop
sti
sbb
movsl
or
test
aas
cmp
stc
and
sbb
push
xor
sub
dec
and
int
ret
pop
sbb
aas
int
sbb
pop
movb
adc
sahf
data16
push
mov
xlat
fcmovbe
mov
es
push
pop
xor
jp
jne
adc
addb
mov
and
nop
push
mov
dec
dec
sarl
lea
stc
fisttps
jns
inc
stc
fwait
pop
mov
mov
out
int
int3
push
push
in
and
sahf
mov
jge
mov
push
enter
jae
add
aaa
adc
mov
push
lret
mov
jle
xchg
loope
and
imul
and
in
adc
stos
leave
lret
les
out
jmp
pushf
or
popf
stc
cmp
loop,pn
int
mov
inc
aad
into
insl
mov
out
call
loop
int
push
sub
shll
aaa
push
push
sub
lcall
push
mov
jae
mov
xchg
pop
lock
insb
inc
sbb
or
sbb
je
or
mov
jno
repnz
sti
lahf
ror
dec
and
mov
in
pop
xor
dec
mov
push
roll
inc
rol
pcmpgtd
inc
js
cmpb
push
lret
jae
mov
pop
mov
bound
jecxz
rorb
bswap
outsl
and
lods
jo
dec
std
adc
into
das
loopne
bound
or
sti
cwtl
xchg
adcb
pop
cmp
jnp
fcom
and
and
lahf
stos
adc
out
popf
mov
sub
jl
js
and
nop
stos
scas
dec
insb
jae
mov
lret
out
mov
ret
jmp
insb
xlat
pop
into
out
lea
push
xchg
add
push
dec
repnz
sbb
sti
test
xchg
xor
pushf
dec
push
into
mov
push
dec
pop
arpl
leave
push
xchg
pop
out
mov
cld
mov
stos
adc
push
jge
cltd
cli
mov
mov
addb
mov
and
hlt
insl
ljmp
iret
push
and
jg
jp
mov
add
and
add
lods
test
mov
loopne
movsb
mov
insl
bound
pop
ljmp
jl
es
fmull
nop
add
sbb
sbb
mov
push
add
fistpl
mov
inc
pop
rorb
sub
loopne
sbb
addl
cmp
xor
push
and
mov
insl
test
mov
xor
mov
mov
xchg
sub
fiadds
inc
mov
repnz
outsb
lds
popf
mov
xor
jne
insb
mov
sahf
fistl
jb
sbb
adc
push
mov
iret
adc
hlt
jge
mov
jae
enter
lods
sub
sahf
inc
fimuls
jnp
loopne
test
mov
mov
jnp
movl
leave
mov
pop
fneni(8087
aad
or
dec
adc
mov
aam
or
push
mov
fidivl
push
mov
scas
cwtl
mov
xchg
decb
adc
je
or
adc
xor
gs
fisubrl
xchg
rcrb
adc
es
ljmp
adc
ljmp
ljmp
push
jns
xor
dec
in
dec
int3
mov
test
paddsb
outsl
mov
mov
imul
adc
sbb
jg
xchg
icebp
xor
add
mov
adc
cli
pop
mov
xchg
hlt
in
mov
push
inc
dec
add
out
test
pop
cs
push
push
js
gs
lcall
inc
sbb
mov
enter
imulb
push
xchg
test
xchg
loop
and
dec
mov
lcall
mov
call
mov
jo
daa
jecxz
dec
pop
cmp
jecxz
cmp
insl
js
cmp
icebp
cmp
in
lock
test
mov
dec
dec
jecxz
lods
aam
inc
push
xlat
adc
out
das
push
andb
fadds
dec
dec
out
adc
test
ror
sub
jne
lods
sti
jmp
repnz
jns
fmull
inc
dec
movsl
addr16
sbb
scas
mov
cmp
jl
mov
mov
mov
and
ljmp
add
mov
sub
xor
fucom
mov
imul
rcl
neg
sub
or
adc
pop
jp
pop
fsubl
loop
cmc
inc
push
imul
movsb
test
mov
mov
das
ljmp
jecxz
push
pop
jg
mov
popa
loope
add
mov
adc
bound
sub
or
shlb
imul
test
and
sbb
stc
sbb
lret
sarl
xchg
xchg
cli
repnz
jmp
imul
pop
loop
leave
mov
fucomip
dec
add
and
adc
adc
addb
ficoml
popf
jl
in
icebp
sbb
leave
mov
add
xchg
dec
fldenv
or
notb
cmc
movsl
mov
dec
inc
push
fisttpll
cmpb
jl
sbbl
and
xchg
xchg
std
bound
add
outsb
cmp
push
sbb
jl
push
jl
lcall
push
jmp
inc
sbbl
mov
fwait
xor
imul
pop
mov
stos
mov
jecxz
sbb
stc
jge
xchg
mov
add
enter
inc
shlb
aaa
adc
or
lret
add
insb
mov
dec
adc
sub
mov
rol
sbb
cmpxchg
popa
rolb
mov
sbbl
or
inc
std
xor
outsl
loopne
or
fidivrl
push
in
test
or
adc
lret
or
and
lods
cmp
call
dec
popa
adc
fdivl
shll
jae
js,pt
adc
stc
xchg
fldcw
outsb
test
adc
mov
fadds
cld
lret
stos
lcall
mov
push
aam
mov
xor
dec
je
inc
dec
lods
popf
arpl
ficoms
push
psllq
in
xchg
or
or
sbb
fwait
sbb
mov
jnp
jecxz
bound
cwtl
cwtl
mov
xor
xchg
lods
in
jns
lcall
and
ror
or
push
dec
pop
in
cmp
jl
cmc
jno
and
and
mov
mov
cmp
test
cmpsb
cmpsb
jp
loope
xchg
out
mov
xchg
xor
inc
cmp
ja
sbb
nop
xchg
push
repnz
cmp
mov
fs
mov
push
int
jg
xchg
push
das
pop
lahf
pop
imul
outsl
arpl
popa
pushw
xchg
stc
push
xor
jo
scas
pop
jl
jnp
loopne
jp
in
stos
or
push
lods
stos
pop
in
loope
lret
int3
push
cs
stc
pxor
imul
cmp
sub
jne
xchg
movsl
fwait
adc
mov
outsb
push
inc
ret
mov
dec
daa
lds
cmpsb
xchg
xchg
xchg
test
mov
aas
adc
inc
test
mul
sub
popf
xchg
mov
out
mov
testb
lret
int3
stc
adc
mov
pop
pop
jne
mov
add
cmpsl
xchg
lods
stos
mov
xchg
cmp
std
xchg
or
pop
pop
pop
sub
mov
fsubrl
addr16
pop
hlt
or
ret
mov
outsb
jge
aas
or
or
sahf
push
mov
cmpsb
mov
loopne
xor
push
inc
iret
icebp
ret
mov
dec
lret
mov
les
sarl
cwtl
mov
sahf
mov
mov
test
lret
cmp
aam
lcall
aas
in
jne
pop
xor
sub
adc
xor
sbb
mov
rclb
ja
mov
inc
sarb
shrb
cmp
add
pop
stc
outsl
dec
aaa
insl
int
pop
in
decb
mov
sbb
or
mov
jbe
shl
daa
fdivrp
lods
dec
test
cmpsl
lret
in
sbb
adc
aas
pop
or
mov
dec
or
imul
pop
shl
jp
and
test
pop
jae
lods
push
push
or
xchg
dec
dec
dec
imul
mov
adc
dec
sahf
cmp
lds
sub
adc
cs
cmpsb
xchg
stos
movsl
into
jbe
or
inc
inc
in
pusha
testw
ds
jge
and
cmpsb
push
pop
das
xchg
lock
and
inc
loopne
mov
shrb
adc
sbb
adc
mov
loop
and
mov
or
add
add
mov
xchg
xor
insb
mov
int
and
push
pop
insb
xchg
cmp
insl
test
push
or
cmp
test
sti
jle
fdivs
shrb
push
repz
xor
inc
scas
adc
int3
test
fucom
mov
stc
stc
jecxz
push
push
inc
adc
out
and
enter
pop
push
loop
push
cmp
int
push
jae
fistps
inc
adcl
pop
sub
push
imul
xlat
jmp
mov
lods
pop
and
mov
mov
fucom
adc
loop
xor
fs
dec
pop
jg
inc
bound
push
decl
cmp
cli
dec
clc
negb
jle
js
movsl
add
sbb
insl
xchg
ffree
mov
mov
mov
cs
push
cs
xor
dec
cmp
mov
jecxz
nop
rcll
or
mov
out
add
in
lret
and
es
int3
arpl
ljmp
lcall
stc
cmp
add
out
sarb
jno
int3
clc
jle
outsb
cli
scas
test
test
xlat
decl
pop
lcall
das
subb
dec
fldl
fwait
jl
or
xor
and
xor
ror
add
enter
idivb
or
mov
push
cs
mov
fadd
lock
push
add
rcr
movsb
xorb
mov
sub
fldenv
scas
add
ss
mov
sar
mov
in
and
xlat
inc
lea
les
cmp
and
das
inc
nop
mov
mov
or
std
aas
das
shll
pushf
or
jns
insb
pop
push
jl
jmp
jne
fld
movsb
sub
lret
aam
test
and
cltd
rcrl
sbb
cmp
mov
in
pop
pop
ud1
imul
adc
leave
jae
push
cmp
les
outsl
mov
add
jns
push
out
cld
or
and
invd
pop
adc
mov
pushf
clc
inc
stc
xchg
out
lahf
pop
dec
sarl
iret
imul
and
mov
es
shlb
ljmp
stc
aam
sbb
dec
jb
aam
or
jne
cmc
jge
fldenv
pushf
repz
bound
or
stc
jg
fdivs
add
mov
add
scas
mov
pop
add
jae
pop
out
pop
jbe
in
sbb
or
movsl
orb
ja
sub
mov
cmpsb
jmp
lcall
repz
out
fldt
mov
ret
cmp
adc
dec
mov
and
adc
daa
stos
sbb
pushf
outsl
les
fdivs
cmp
shll
call
cmpsb
add
adcl
jne
outsb
mov
sbb
shrl
xlat
fwait
scas
or
adc
pop
pop
xor
or
and
adc
lcall
push
outsl
lds
aaa
xchg
inc
mov
sbb
mov
test
push
mov
jl
mov
jle
gs
sbb
subl
cmp
pop
mov
pop
mov
mov
pop
sbb
xor
pop
sti
mov
xor
mov
outsl
jmp
pop
scas
test
mov
aad
mov
inc
imul
jb
rolb
mov
pop
int
push
cmp
sub
repz
mov
loope
inc
pop
filds
pop
push
test
mov
pop
fwait
xlat
push
outsb
and
mov
sahf
unpckhps
sbb
fucom
ret
or
das
or
sar
fistps
sbb
mov
imul
ret
push
inc
or
icebp
xor
lcall
pop
mov
cs
mov
mov
sbb
imul
cltd
inc
mov
cmc
cmp
mov
mov
pandn
imul
ret
mov
orl
mov
pop
cmpsl
mov
iret
lods
push
push
or
addl
mov
xchg
stos
xchg
xchg
push
shrl
arpl
test
int3
call
mov
stc
xor
dec
pop
pop
lcall
nop
mov
mov
insb
clc
loopne
mov
xor
fcomip
mov
bndldx
ja,pt
add
stos
push
push
pusha
testb
les
or
clc
pop
movsb
test
aas
bound
call
repnz
movsl
ss
nop
loope
pop
cmp
cmp
or
or
enter
ja
adc
fadd
cltd
hlt
mov
fldcw
xchg
sarl
inc
stos
mov
andl
mov
into
cmp
pop
popa
enter
gs
mov
inc
dec
or
mov
push
mov
pop
scas
jge
rclb
adc
pop
inc
fadds
subb
imul
or
jnp
add
stos
loopne
adc
sbb
jg
rol
or
repnz
gs
div
push
in
aad
jne
dec
sbb
fwait
orb
ret
mov
cs
jns
pop
movsb
sub
dec
pop
sti
xor
std
inc
mov
pop
negb
and
gs
in
mov
add
xor
fldl
push
mov
stc
lahf
xchg
add
fs
mov
mov
and
repnz
xchg
repnz
dec
dec
sbb
lods
jb
fsqrt
xor
fldenv
jl
pop
arpl
push
ss
sub
sbb
outsb
cmp
imulb
jae
dec
jp
add
pop
sbb
movsb
movsl
test
xchg
mov
pop
cmp
pop
es
fistl
lock
sahf
outsl
add
sub
dec
lods
sbb
shll
ds
fists
lcall
rep
mov
pop
divb
cwtl
mov
mov
xchg
ss
popa
pusha
sbb
mov
xchg
fwait
or
in
push
test
pop
jmp
daa
push
js
ds
in
repz
inc
ss
mov
xlat
and
xchg
lods
push
std
push
mov
adc
xor
cmp
das
movsb
bound
mov
fnstcw
lods
jecxz
leave
jecxz
jl
cmpsl
mov
push
rcr
dec
cmpsl
mov
sbb
pop
mov
inc
add
fldenv
daa
insl
jecxz
int3
loop
xor
xchg
andl
clc
pop
iret
lret
imul
in
pop
jl
in
xlat
mov
lods
mov
xor
mov
jg
jns
lret
jmp
lret
sarb
fs
adc
inc
addr16
notb
cmp
xor
add
rol
int3
stos
outsl
outsl
jbe
sbb
xorl
jmp
xlat
inc
xchg
pop
imul
jns
test
jae
cmp
sub
pop
pop
andl
clc
in
sbb
sbb
mov
push
loopne
cmp
adc
jnp
popf
cmpsb
scas
orl
iret
cvtpi2ps
lods
cmp
enter
mov
std
fstpt
and
shrb
arpl
sub
jl
imul
jg
pop
into
pushl
repnz
je
dec
inc
sarl
dec
fdivrs
sub
add
outsb
inc
movsl
pop
je
push
or
add
dec
fsubrl
aad
cld
mov
loopne
jbe
pop
in
out
inc
push
inc
in
inc
pop
push
fisttpll
xor
xchg
iret
aam
pop
inc
into
pop
pop
push
test
xchg
inc
lods
push
jae
jmp
insb
xchg
out
les
arpl
fsincos
pop
int
pop
adc
stos
inc
cmp
aam
enter
or
insb
xor
lahf
lock
test
add
nop
xchg
imul
mov
cmp
bound
mov
stos
cmp
insb
and
stc
data16
dec
pop
fucom
addb
push
push
jno
arpl
out
cld
jle
lret
cs
test
jmp
addr16
push
inc
mov
hlt
into
mov
popf
add
stos
mov
mov
std
jb
cli
stos
pop
enter
and
xchg
scas
std
mov
lods
jno
dec
pop
cmp
sub
movsb
fucomi
clc
ret
ror
test
mov
jno
push
mov
xchg
test
sub
mov
or
xor
daa
lahf
jo
int3
cmp
cmp
loop
adc
sbb
and
pop
cmp
mov
xchg
dec
sbb
cli
mov
mov
sub
iret
push
lods
test
hlt
jg
lret
pop
and
jg
lods
or
rcrw
or
mov
dec
fwait
sbb
jbe
jmp
cmc
or
mov
in
outsl
mov
cmp
movsb
xchg
adc
dec
mov
das
loopne
test
sarb
push
sarl
fs
cmp
imul
mov
cmp
sbb
cltd
and
lds
pushl
dec
es
mov
ds
cmpsl
lret
aad
pop
iret
lret
stos
push
imul
clc
mov
adc
lahf
lods
push
sbb
ja
clc
movsl
mov
fsubs
xor
fdivp
xor
stc
jnp
jecxz
rol
call
push
insb
mov
shlb
add
xchg
fdivrs
hlt
ss
adc
dec
imul
sarb
ret
es
mov
movsb
add
pop
xchg
shl
repz
cmpsb
sub
aaa
mov
pop
movb
ljmp
xchg
and
stos
or
ret
dec
daa
test
dec
dec
outsl
pop
sub
push
or
and
adc
aam
cmp
dec
mov
or
adc
inc
lret
push
icebp
out
ret
mov
sub
cmp
or
aaa
ret
aam
xchg
mov
xchg
mov
adc
xchg
andl
sub
xor
jge
imul
push
push
cmpb
sub
sub
xor
xchg
pushf
jecxz
out
inc
cmp
clc
mov
stos
int3
jmp
imul
and
ret
jmp
jge
pop
mov
ret
pop
movsl
mov
sbb
fbstp
mov
or
sti
push
test
lret
push
cmpsb
or
sub
data16
fisubl
ja
adc
or
cli
clc
ljmp
mov
xor
mov
fwait
mov
sbb
and
inc
outsl
jns
sbb
loop
std
or
xor
movsl
hlt
and
pushf
daa
or
data16
lret
fwait
mov
mov
mov
mov
inc
dec
adc
pop
jp
fiadds
cmp
adc
cld
jo
cmp
jbe
js
push
push
sbb
mov
sub
add
sbb
xchg
mov
xchg
push
mov
mov
cmp
add
rcrb
adcl
in
sbb
or
mov
in
nop
xchg
and
and
cs
jmp
ss
out
fildl
xchg
fs
xlat
sbb
inc
lods
in
pop
jno
cs
inc
mov
fnop
mov
outsb
mov
xor
arpl
or
mov
cmp
fildl
stc
lods
stc
push
push
outsl
jg
lock
arpl
jl
mov
hlt
adc
loop
and
ljmp
fadds
mov
pop
loopne
mov
js
ret
inc
in
mov
notl
stos
fisttpll
xor
dec
jne
stos
mov
loopne
subl
les
or
and
pop
push
inc
out
adc
push
dec
or
add
cld
lods
mov
shld
cli
in
add
cmp
std
outsb
xlat
mov
popa
cli
or
push
xchg
cwtl
sbb
rorl
movsb
test
mov
mov
mov
inc
fisttps
mov
insl
inc
jge
cld
sti
inc
scas
ret
fcomps
movl
ja
loop
lods
push
dec
inc
addl
stos
jmp
cli
pushw
pusha
ss
xor
jl
scas
inc
xchg
sub
je
jge
sbbb
jecxz
test
aas
test
inc
sub
and
out
mov
imul
sbb
js
push
pop
pusha
js
cmp
inc
pop
sbb
push
test
das
or
fwait
xor
pusha
jbe
enter
mov
inc
mov
pop
mov
sub
je
or
test
or
mov
dec
sarb
hlt
cli
into
fdivp
and
int3
mov
leave
or
inc
sbbb
dec
inc
mov
shlb
xor
into
jo
push
fwait
and
xlat
loope
lret
sub
push
popa
addb
mov
out
fldt
sbb
dec
pop
repnz
in
stc
dec
adc
ljmp
insb
xchg
repnz
fld
cwtl
cmp
mov
leave
adc
push
sub
pop
lods
add
in
pop
rorl
loope
jge
loopne
dec
jae
add
or
and
stc
mov
daa
push
or
dec
cltd
lret
jl
xchg
mov
stos
xchg
pop
dec
add
test
or
in
pop
mov
in
addr16
push
imul
scas
adc
shll
or
aad
insl
xchg
cwtl
testb
and
mov
cmp
mov
clc
cmp
mov
ret
inc
or
or
cmp
mov
pop
pop
jge
push
and
std
inc
and
dec
icebp
testl
push
movsb
inc
sarb
and
and
add
sbb
out
cs
into
fs
add
sub
fs
orl
jne
or
cmp
push
xchg
push
lahf
mov
out
out
fstps
dec
imul
js
fucom
cmpsb
sbb
out
sub
js
jl
mov
jecxz
pop
dec
cs
push
mov
pop
lcall
mov
or
cwtl
rcrl
loop
movsl
cmp
es
add
aaa
sub
dec
mov
and
sti
into
fs
xlat
popf
inc
es
dec
adc
shrl
mov
jmp
loope
aas
incl
push
repnz
stc
sbb
mov
daa
jmp
in
ss
xor
scas
cwtl
lret
pop
lcall
and
fisttps
mov
lods
mov
mov
jnp
dec
iret
cmp
sub
into
gs
xor
jg
cmp
jle
cmp
js
dec
fwait
xchg
stos
mov
pop
int3
cmp
jge
mov
and
lock
rorl
setnp
push
mov
repnz
cli
jp
lea
das
sbb
sbb
xchg
jge
loop
gs
inc
mov
insl
mov
or
cld
xor
jns
xor
pushf
xchg
dec
mov
mov
pop
iret
cmpl
xor
pop
cmp
sub
push
fidivrl
push
dec
clc
cmpsl
mov
std
dec
cmp
mov
xchg
sbb
fstpl
call
and
mov
dec
das
rorl
ljmp
push
lds
xchg
mov
push
lret
in
notl
xchg
dec
out
dec
in
cltd
inc
and
adc
data16
cmpsl
loope
push
or
and
nop
shrl
add
push
sbb
pushf
outsl
xchg
stos
sub
push
jo
cltd
jle
pop
xor
lret
mov
stc
pextrw
cltd
push
lret
into
mov
int3
adc
pop
inc
jecxz
movsl
gs
xor
push
leave
push
sbb
movsl
push
dec
enter
mov
aam
and
data16
sbb
pushf
loop
add
into
xchg
inc
bswap
rcr
pop
and
daa
cmp
fildl
mov
inc
rol
inc
add
sub
push
loopne
or
dec
movaps
sbbl
push
repz
dec
jmp
cmpsb
sbb
adc
cld
cmp
lahf
fstpl
push
xor
inc
mov
ss
loope
loop
xor
xor
jb
sbb
sti
in
xchg
xchg
mov
and
inc
cmpsl
fildl
adc
mov
sti
mov
push
jb
cli
int
jns
popa
sub
pusha
in
fnstcw
add
mov
pop
mov
outsl
pop
pop
jge
lret
mov
lret
mov
xchg
dec
jecxz
push
rcrl
pop
sbbl
int
fldcw
sar
or
cmp
loopne
out
in
aaa
roll
cmp
sar
or
daa
das
fs
ds
dec
dec
stc
data16
test
jmp
dec
fldcw
in
mov
arpl
std
stos
inc
ret
xor
fdivrl
xor
daa
scas
cld
sbb
jl
xchg
and
mov
mov
rol
xor
aas
adc
adc
or
popa
pushf
jg
dec
mov
jl
xchg
loope
out
xchg
icebp
scas
adc
shrb
pop
inc
nop
inc
stos
cli
jo
mov
inc
adc
mov
push
enter
pop
or
add
sub
mov
cli
mov
inc
popa
insb
and
xchg
xorl
and
dec
mov
mov
sbb
sbb
sbb
test
ret
cmpsl
dec
lret
test
or
cltd
ds
ret
iret
sub
push
jne
icebp
and
or
dec
xchg
mov
mov
out
jbe
xor
and
orl
add
or
push
add
fdivs
shl
adc
popl
and
sti
jne
arpl
movsb
fdiv
mov
ss
and
ja
icebp
sbb
push
insl
rorl
sub
shrb
shl
mov
sbb
jne,pn
outsl
or
dec
dec
xor
mov
int
adc
in
mov
ret
lds
lds
not
lret
sub
loop
subl
xor
arpl
addr16
cmp
je
and
mov
aas
and
xorl
and
inc
sub
mov
xchg
mov
adc
add
add
dec
adc
mov
pop
pop
add
rolb
add
test
cmpsl
or
aaa
outsb
int3
pushf
cli
sub
xlat
inc
ret
mov
scas
pop
add
jmp
add
xor
icebp
xor
sub
cmp
xchg
xor
pop
add
in
repnz
push
add
xchg
cmp
inc
mov
xor
or
repz
incb
in
sub
dec
pop
stc
std
and
push
push
lds
and
mov
ljmp
ret
sub
push
push
fidivrl
push
imul
add
enter
jmp
sbb
into
shlb
stos
movb
ror
adc
scas
inc
push
ljmp
or
movsl
mov
xor
lods
pop
adc
and
mov
sub
push
pop
dec
push
inc
bound
daa
mov
push
sub
or
dec
hlt
data16
mov
sub
sub
inc
dec
sub
lods
cltd
cmp
and
xor
cltd
cli
es
shl
test
fmul
lods
push
or
outsl
xchg
arpl
mov
pusha
mov
fcmovb
test
xor
mov
jo
push
jnp
mov
jno
add
add
push
or
sbb
aas
loopne
add
pop
int
push
dec
fwait
mov
dec
into
arpl
mov
push
loopne
jmp
mov
lods
dec
stos
ds
pop
xchg
cmpsl
inc
mov
add
sub
call
xchg
sub
mov
ror
lahf
fadds
xor
jg
push
ret
mulb
push
adc
data16
sbb
pop
lahf
ds
rcl
xor
imul
push
shrb
sub
inc
or
mov
xchg
or
addr16
jnp
jbe
cld
insl
sti
pushl
sub
stos
xchg
cmp
in
scas
jae
loope
sbb
adc
test
andb
lret
lods
mov
in
inc
sbb
js
jl
movsb
jno
push
mov
cs
jle,pt
inc
loope
mov
or
cmp
jecxz
out
sahf
sbb
inc
out
mov
shrl
insb
popf
gs
and
rep
inc
push
mov
test
imulb
xchg
pop
jno
filds
jge
movsb
aad
gs
fistpl
lret
jge
cli
dec
cli
inc
xchg
adc
push
adc
fisttps
xor
push
rclb
lcall
lret
in
ss
cmpb
out
lock
cmp
and
ret
fidivl
cltd
test
aaa
pop
mov
repz
push
cmp
repnz
jne
xor
dec
es
lock
cmc
gs
dec
rcll
les
rolb
xchg
jmp
scas
sub
loopne
lret
daa
push
enter
rcr
lock
test
fcmovne
mov
in
sbb
mov
and
rcll
cmp
rorl
pop
and
pop
lods
jo
sahf
xchg
or
push
movsb
add
insb
add
mov
in
fsubrl
shr
rclb
scas
out
stos
cmp
outsl
stos
push
sbb
lcall
les
add
test
push
xchg
stos
mov
mov
pop
inc
jle
les
ljmp
aas
or
adc
pushl
mov
fcompl
dec
es
cs
test
cmpsl
not
cwtl
mov
jecxz
scas
loopne
popf
xor
out
mov
shlb
pushf
add
push
push
mov
ret
push
inc
mov
shrb
cmp
ret
xor
jmp
adc
int3
inc
cmp
les
das
gs
shlb
inc
mov
mov
cltd
leave
mov
nop
mov
out
scas
add
pop
into
stos
jmp
loop
bound
sbb
gs
andl
adc
pop
mov
jnp
ljmp
pop
rcr
jae
loope
pop
and
push
fiaddl
pop
pop
cmp
outsb
gs
push
aam
xchg
subb
lds
std
sbb
orb
aam
xchg
add
lods
es
dec
xor
imul
dec
jo
sub
mov
pop
cs
stos
add
out
and
shll
mov
add
adc
fnsave
shl
mov
loope
pop
ret
jg
mov
sti
js
in
pusha
xor
fstps
inc
adc
jecxz
popf
int3
xchg
and
ljmp
inc
adc
sub
xor
dec
popf
clc
or
or
bound
cmp
inc
xchg
ret
cs
or
clc
adc
xor
insb
dec
les
imul
iret
sarl
cmc
test
adc
sbb
mov
sub
jne
addr16
inc
mov
jg
xor
rcl
sbb
mov
call
lret
pushf
jbe
in
filds
into
mov
jg
and
iret
out
lcall
cmp
idiv
xlat
lods
jae
push
and
pop
jae
or
xchg
lea
inc
jns
mov
test
inc
mov
mov
jmp
ret
bnd
mov
das
xor
fimull
mov
dec
and
in
fcomp
jnp
ljmp
push
int3
or
lds
sub
sub
out
push
push
aas
sbb
inc
test
loope
clc
jg
test
lahf
jl
arpl
cmpsl
xchg
or
cld
rcrb
fisubs
push
mov
mov
mov
xchg
rorl
notl
pusha
mov
loope
cli
jbe
repnz
sahf
ds
pop
nop
pop
shlb
cmp
test
pusha
jne
inc
mov
jbe
xor
xchg
filds
mov
sbb
push
push
outsl
sahf
mov
fisubs
dec
and
mov
out
ret
add
push
aaa
jb
sbb
adc
out
fmul
int
and
repnz
aaa
in
push
lock
test
mov
lret
aaa
mov
cld
cld
sub
ja
mov
cmp
push
js
pop
xchg
outsb
jle
fs
mov
mov
dec
adc
dec
mov
jge,pt
fdivr
clc
push
add
btc
push
lods
scas
dec
adc
jb
clc
mov
mov
xor
je
rcrl
mov
sub
pop
test
popf
xorb
jmp
testl
and
add
ljmp
mov
mov
jecxz
lods
mov
pop
push
aam
pop
ss
xor
leave
sub
and
stos
and
decb
adc
cs
mov
cmp
push
movsb
pop
mov
inc
adc
sbb
gs
imul
inc
lahf
call
push
dec
clc
jnp
cmp
popf
mov
push
sub
mov
jmp
outsl
jne
mov
xor
and
cs
imul
mov
cmp
mov
dec
repnz
outsb
adc
lods
int3
fcmovb
cmp
jecxz
ret
repz
mov
sub
xchg
mov
cli
and
out
inc
push
adc
xor
adc
dec
fcoml
int
push
pop
adc
inc
shlb
inc
lea
imul
std
sub
cld
sbb
cmp
outsl
leave
pop
push
and
insb
js
sarb
in
ret
inc
inc
dec
ja
fcom
js
and
test
fisttps
xor
xlat
pop
push
adc
add
popf
xchg
add
lea
mov
test
jle
xlat
push
lcall
inc
cltd
gs
mov
addb
or
and
inc
jge
mov
push
popf
in
mov
xchg
fsubrs
icebp
pop
and
int
dec
and
sub
push
mov
lcall
sbb
mov
sbb
mov
arpl
decb
sbb
repz
add
cmp
mov
repz
xchg
lret
shr
xchg
add
dec
pushf
jb
dec
jnp
clc
je
inc
test
or
movb
cs
iret
in
cmp
cmpsb
js
push
movsl
fisubs
and
mov
ficompl
mov
cmp
idivb
xchg
cli
xor
adc
cmpb
inc
sbb
push
push
cltd
loop
adc
adc
cmp
xchg
js
int3
shrb
xchg
mov
jp
icebp
sbb
jg
sbb
lret
push
fimuls
jp
pop
shl
jno,pn
mov
stos
lods
cmp
cwtl
lret
inc
sbb
pop
daa
fwait
arpl
std
aam
inc
mov
xorb
push
adcb
dec
ja
push
fidivrs
mov
outsb
add
jge
push
stc
fildl
insb
test
hlt
xorl
mov
out
cmp
xlat
mov
adc
dec
mov
fistps
and
out
sarb
scas
outsb
sbb
mov
test
sbb
mov
ret
rcr
test
xchg
out
and
cmp
lods
adc
push
arpl
push
icebp
mov
pop
and
inc
stos
scas
addr16
sub
fwait
loop
inc
pop
xlat
sub
add
jg
imul
adc
lret
sbb
mov
jmp
pop
js
mov
stos
cmp
mov
daa
push
es
jle
outsl
leave
lock
push
test
in
and
mov
xchg
pop
adc
repnz
mov
dec
mov
ss
roll
mov
stos
inc
xor
iret
add
cmpl
push
bound
mov
inc
aad
movsb
jl
sbb
adc
mov
inc
sbb
mov
jo
xor
nop
xchg
scas
add
xor
mov
arpl
inc
sub
mov
lcall
sti
lea
or
fwait
nop
icebp
js
or
pop
mov
adc
jp,pt
shrl
icebp
mov
das
mov
pop
sub
sahf
mov
jb
sbb
lods
add
ss
loopne
dec
cmp
cmpsl
and
cmpl
inc
fidivs
fdivrs
sbb
clc
out
xchg
inc
jmp
addr16
dec
cmc
popf
inc
pop
or
int
push
inc
cltd
test
sti
and
pusha
je
je
pop
cmc
jo
fstl
fwait
inc
mov
shl
addb
icebp
push
lock
jno
icebp
cli
xor
xchg
push
push
and
or
push
lock
int3
mov
push
incb
adc
decl
or
sbb
jbe
cltd
or
mov
lret
mov
dec
dec
and
fistpll
xor
mov
iret
mov
in
mov
fimuls
out
pop
ud2
pusha
cmpsl
std
mov
pop
or
loope
mov
sub
outsb
pop
movsl
or
imul
arpl
or
cli
lret
jne
pop
push
lahf
sbb
test
scas
sbb
repnz
mov
fdivrl
mov
adc
stc
repz
mov
jle
in
cs
call
mov
mov
adc
insb
pop
adc
xchg
test
movsl
or
cmp
push
inc
jae
xchg
sti
pop
xchg
repz
or
out
xlat
in
push
pop
mov
repz
sti
jmp
push
cmp
xchg
leave
in
jno
pop
ficoml
adc
jp
ret
leave
lock
dec
xchg
ror
cli
cmp
mov
adc
in
in
test
in
gs
sbb
pop
scas
cmpsb
andl
call
mov
out
sub
test
jg
test
adc
hlt
pop
and
dec
lahf
jmp
sbb
out
xor
xor
and
dec
push
out
bound
ds
adc
scas
dec
cmp
fwait
aas
notl
push
cmc
mov
dec
xchg
mov
add
dec
imul
add
in
lcall
or
pop
add
adc
mov
xor
lret
aam
pop
mov
jecxz
ret
les
jae
mov
push
hlt
leave
out
sti
jp
jmp
out
movsl
add
cmp
sub
popa
pop
push
leave
mov
mov
leave
mov
and
ror
sbb
in
not
cs
lods
shll
push
movsb
js
ds
lea
push
mov
mov
leave
lock
jl
je
or
jne
xor
lods
jl
or
out
loope
dec
push
sarb
fst
add
jae
je
js
daa
dec
stos
adc
add
scas
xor
dec
rcl
sbb
sahf
inc
add
insb
out
sub
fisubs
aaa
inc
adc
cwtl
scas
sbb
mov
jecxz
nop
xchg
push
sbb
out
xchg
loopne
ret
inc
mov
stc
and
mov
in
add
xchg
jbe
stc
stos
push
pop
rcll
push
repz
mov
mov
sti
adc
daa
int
das
inc
push
push
sbb
mov
repnz
cmp
leave
data16
adc
add
ljmp
cmp
adc
adc
push
das
sub
das
mov
jo
test
xchg
hlt
ficoml
ret
xor
adc
mov
cwtl
adc
pop
aaa
repz
loopne
mov
iret
dec
divl
push
aad
aam
pop
pushf
scas
lretw
in
scas
es
jg
adc
pop
cmc
loop
cmp
dec
pop
sub
and
jae
stos
pop
push
push
push
nop
push
jg
popf
sbb
out
cmp
push
xor
popf
mov
aas
scas
loope
push
dec
mov
dec
andb
inc
mov
inc
scas
cmp
inc
or
incb
mov
icebp
dec
ficoml
stc
dec
add
push
cltd
addb
out
movsb
in
shr
in
mov
sbb
mov
push
test
jbe
ds
xor
mov
imul
cmp
dec
inc
scas
mov
jo
mov
and
xlat
pushf
push
jb
fldln2
sbb
dec
loopne
mov
lock
sarb
les
in
in
stc
hlt
mov
and
push
inc
vphaddubq
movsb
xchg
sbb
js
js
pop
lcall
push
in
or
mov
pop
scas
fimuls
icebp
aas
enter
les
cmp
cmp
sub
xor
test
test
lock
stc
mov
mov
pop
imul
enter
lahf
icebp
cmpsl
cmp
jnp
jl
cmp
popa
int
aas
fidivs
jo
in
stos
icebp
das
jmp
divb
mov
xchg
cmpsl
or
test
adc
push
out
rcrl
lods
aam
pop
iret
repnz
xchg
mov
push
inc
and
mov
out
and
pop
xor
stc
push
out
mov
dec
shrb
stos
fwait
add
lahf
pop
mov
popf
sub
xor
sbb
fstl
inc
or
pop
test
dec
mov
and
pop
jecxz
xor
mov
mov
sbb
or
test
inc
jecxz
jp
fucomp
in
clc
enter
mov
mov
mov
push
pushf
aaa
sbb
stc
mov
cmp
push
test
into
adc
push
stc
push
lret
test
push
dec
adc
loopne
ds
movsl
stc
and
xchg
inc
pop
sbb
lret
sbbb
sub
das
jns
and
mov
and
or
xchg
inc
addl
int3
in
jge
ss
jp
sahf
in
xor
cmpsb
arpl
mov
je
xor
addr16
sbb
pop
cmp
add
add
paddb
fidivrs
mov
mov
pop
or
out
inc
ror
mov
jns
enter
adc
mov
or
add
cmc
bound
imul
rcrb
jns
xor
jb,pt
pop
cwtl
cli
adc
push
sarb
mov
iret
pop
test
cmp
int
mov
adc
mov
mov
adc
push
in
mov
push
sub
imul
xchg
push
xor
mov
inc
in
lcall
cmp
cld
rolb
sbb
call
fldenv
dec
out
repz
out
inc
popa
hlt
clc
adcl
jg
push
jecxz
sub
push
push
and
xor
or
dec
sti
or
in
mov
and
pop
inc
nop
addr16
cltd
bound
imul
mov
aam
pop
outsb
adc
or
and
rol
ja
mov
push
push
cltd
mov
bound
jb
cmpsb
mov
mov
push
sbb
iret
lods
aam
hlt
cmp
add
and
test
or
jo
leave
or
jb
pop
fucomip
adc
loopne
jmp
dec
lock
ss
int
arpl
cwtl
orl
ret
mov
sub
add
cwtl
sub
cmpsl
or
push
mov
cli
pop
gs
mov
and
push
mov
aaa
jne
jmp
cwtl
gs
jns
sub
cmpsl
pop
pushf
or
mov
pusha
sub
xchg
sub
mov
dec
mov
cwtl
not
mov
and
sahf
ret
mov
push
fdivrs
mov
mov
rorb
push
jge
sub
push
jnp
rcll
test
fst
or
push
jg
clc
ljmp
sbbl
or
lahf
mov
fidivl
xchg
cmpsl
pushf
or
xchg
adc
jno
inc
sub
mov
aaa
push
das
sar
sub
inc
shlb
jle
jne
push
outsl
push
lods
dec
or
jge
lret
insb
push
mov
cwtl
sub
xchg
pop
fadds
sbb
ret
cmp
jnp
sbb
dec
jle
mov
out
rcrl
test
xor
imul
inc
clc
push
jmp
dec
rcrb
push
int3
ror
jmp
push
xchg
repnz
sbb
enter
popa
loope
dec
rcl
bound
dec
push
inc
int
push
fnstenv
in
icebp
xor
dec
pop
fbld
or
mov
mov
aam
insb
sub
je
mov
push
push
jl
xor
sbb
sub
xlat
cmp
out
mov
mov
xchg
jecxz
push
pop
sub
mov
mov
cmc
push
sub
lods
mov
mov
and
pop
mov
mov
sbb
in
sub
jb
rolb
pop
sub
xor
or
inc
xor
imul
in
mov
mov
fcmovnu
mov
fsubrl
pop
xchg
iret
cmp
jl
mov
addl
xor
mov
push
xlat
testl
or
xorb
or
test
adc
mov
das
pop
add
fcompl
mov
and
negb
sbb
jmp
add
push
test
xchg
int3
fwait
pop
xor
push
add
and
ffreep
push
cmpl
and
sub
test
push
inc
pop
adc
cmpsb
out
mull
popl
mov
pop
imul
dec
rcrb
inc
imul
lret
and
in
mov
jbe
jns
call
cmpsl
or
dec
ljmp
mov
mov
in
repz
or
scas
sbb
imul
rcl
sub
dec
shll
push
leave
xlat
push
pushf
xchg
sete
sahf
xchg
adc
rol
xchg
or
and
daa
mov
negl
insb
stos
sbb
mov
jge
dec
pop
outsl
nop
mov
adc
mov
jl
xor
arpl
mov
cmp
rclb
dec
cmpsl
dec
jae
inc
test
xor
and
das
or
rcrb
stc
inc
faddl
xchg
lea
cmp
and
xor
push
sahf
mov
fdivrl
fcoms
dec
xor
in
leave
outsb
cli
mov
fsubr
adcb
daa
mov
loop
loopne
sub
fwait
add
xchg
xor
adc
jmp
jl
leave
jg
jo
and
scas
dec
xchg
vpsraw
loope
xor
xchg
add
cli
xchg
pop
dec
ds
or
cld
add
fldt
lods
out
add
ljmp
in
jae
gs
lret
fdivr
or
dec
cld
inc
add
xor
in
mov
cmpsl
cmpsl
adc
jno
mov
out
out
inc
push
arpl
aad
scas
jno
mov
pusha
in
and
mov
pop
adc
fwait
hlt
jb
inc
sbb
cltd
jo
mov
cli
and
iret
int
jo
into
aam
sub
out
jle
dec
push
es
cmp
mov
mov
and
scas
inc
mov
sbbb
add
jge
aaa
pop
jmp
ret
sub
loopne
cli
jns
sti
cmp
push
sarb
pop
mov
cmp
mov
cld
ljmp
cmp
xchg
fldenv
testl
mov
jg
and
push
ss
push
mov
sub
flds
and
lcall
pop
js
bound
loop
xchg
ljmp
xchg
ror
or
pop
jno
icebp
sbb
int
mov
push
inc
mov
xor
jmp
or
mov
arpl
mov
jge
add
scas
loopne
dec
add
loop
out
xor
adc
dec
sub
jo
cmp
icebp
jmp
jno
jmp
mov
jmp
or
sub
cltd
aam
out
in
inc
mov
and
mov
xchg
cmp
cmp
and
pop
jl
jmp
test
dec
in
pop
lret
xchg
inc
or
mov
lock
xor
jae
popf
xor
test
mov
xor
loop
dec
arpl
lahf
add
cs
add
dec
lret
ret
neg
jp
jp
movb
push
cmpsb
sbb
arpl
xchg
pop
repnz
mov
adc
pop
addl
mov
mov
xchg
push
loope
jge
jmp
adc
adc
fnsave
shll
leave
in
xchg
jmp
mov
into
idivl
lock
pop
mov
les
jne
fistpl
sub
nop
test
dec
jg
cmpsl
cmp
jle
sub
out
inc
pop
mov
lea
push
insb
push
popf
mov
and
inc
add
adc
and
xor
arpl
push
xor
push
aaa
xlat
roll
mov
loope
loope
es
xlat
mov
dec
inc
xchg
adc
mov
xchg
sub
push
xorl
jmp
daa
fdivs
push
test
jns
or
clc
mov
mov
insb
inc
sub
adc
insl
lds
pushf
xchg
push
ret
push
cmp
pop
iret
and
jbe
and
push
add
mov
mov
jle
lock
lahf
popa
push
jae
call
lods
sub
cmp
inc
std
mov
mov
mov
pop
adc
jb
imul
xchg
cltd
mov
or
mov
subb
xchg
out
mov
inc
test
insl
sbb
outsb
pop
cmp
push
movsb
cmp
dec
lea
or
cltd
xchg
aad
addr16
and
sub
insl
xor
fistpl
and
jecxz
daa
inc
jmp
sbb
lret
inc
aas
jae
repnz
into
xor
mov
icebp
imul
jge
add
ss
outsl
dec
sbb
divl
daa
pop
leave
cmp
repz
aam
lods
movsl
mov
mov
popa
pop
jecxz
fildl
jo
mov
insl
hlt
repnz
xor
out
fiaddl
mov
mov
imul
loope
imul
mov
in
sub
sbb
fimull
sbb
pop
pop
pop
add
in
mov
hlt
add
lds
sbb
dec
and
enter
push
mov
mov
sub
imul
add
adc
and
daa
fstl
fs
mov
pop
in
mov
shlb
adc
arpl
stc
dec
xchg
fwait
xchg
leave
sahf
call
ret
xchg
jecxz
cmp
mov
nop
fxch
pop
dec
andb
xchg
lret
js
addr16
mov
fisubs
arpl
movsb
mov
sbb
rcrl
icebp
in
push
addb
clc
adc
xchg
jne
or
fstpt
nop
popa
xchg
push
mov
sbb
pop
mov
outsl
push
xor
lret
loopne
and
in
mov
clc
jecxz
lods
insl
lcall
ret
or
roll
lock
fisttpl
mul
ljmp
pop
mov
or
lock
add
test
test
ficompl
ret
dec
repz
inc
inc
add
inc
and
pop
jle
jno
mov
loopne
sti
repnz
outsb
mov
xchg
insl
test
dec
hlt
lret
mov
push
test
fldcw
rcr
rorb
ret
pop
adc
or
pop
pop
lea
add
push
push
sbb
adcl
incl
inc
add
push
add
and
hlt
cmpsb
push
jmp
stos
sbb
jmp
lcall
lahf
sarl
or
lahf
negb
pop
sbbl
mov
cld
jae,pt
outsb
rcrb
negl
fisubrs
mov
jnp
jecxz
xchg
enter
inc
cmpsl
flds
sbb
pusha
pusha
dec
sbb
dec
popa
pop
mov
pop
aad
or
inc
add
leave
popf
aas
add
fisubrs
pop
mov
mov
aam
cli
pushf
add
sub
jbe
iret
data16
sub
adc
paddusw
dec
pop
test
xchg
or
and
shlb
xchg
enter
mov
inc
sarb
xchg
sub
xor
or
xchg
adc
pop
mov
call
movsb
mov
mov
mov
fldpi
pop
into
cmc
ret
inc
fstpl
push
mov
xchg
cmp
xlat
aad
das
push
jp
or
and
dec
gs
xchg
sbb
jecxz
mov
inc
sub
scas
mov
xchg
and
call
push
and
dec
cmp
test
push
mov
jne
clc
jl
jle
xor
pop
push
bound
cmp
cmp
sbb
scas
jl
mov
ds
addr16
repnz
pop
fwait
sbbb
insl
jl
pop
cld
decb
das
sbb
clc
mov
movsl
aam
pop
cmpxchg
xor
rorb
aas
sub
cmp
les
iret
test
or
cltd
enter
xchg
adc
dec
addr16
aam
xchg
orl
mov
adc
push
mov
mov
mov
jl
jge
aam
mov
movsb
jnp
add
sahf
repnz
imul
mov
enter
shlb
jge
jl
fdivrs
push
pushf
aas
xchg
lcall
jne
mov
sbb
cmc
add
fsubl
dec
fs
push
mov
in
fnstsw
loop
in
outsl
sub
sbb
push
aam
stos
pop
popa
hlt
lods
mov
push
and
mov
out
pop
mov
xchg
mov
subb
sub
pop
int
test
aaa
push
dec
inc
dec
mov
out
fadd
push
bound
cld
stos
mov
cmp
stc
scas
insb
add
fs
adc
sbb
pop
addl
mov
and
rolb
or
push
outsl
dec
xor
mov
lret
js
aam
cmpsb
pushf
test
xchg
and
scas
in
ud2
inc
jbe
daa
fidivrl
test
fs
adc
mov
int
in
dec
push
addr16
push
insb
cltd
fistpll
dec
aas
mov
sti
fldcw
loope
fisubl
scas
fcmovnu
lret
push
jmp
aad
cmp
mov
jg
fistps
dec
bound
int
jae
inc
pop
pop
inc
mull
dec
inc
pop
push
popa
icebp
mov
rol
add
adc
es
mov
mov
mov
movsl
sbb
sub
fdivrs
mov
leave
notb
fists
mov
addb
jmp
mov
xchg
call
gs
scas
push
lret
lret
lahf
mov
push
and
cltd
in
scas
ret
int
push
ja
sub
cwtl
fwait
cmp
stos
scas
and
inc
std
adc
xor
ja
insl
add
push
aaa
add
push
lods
lea
scas
pop
dec
insb
out
sbb
dec
cmp
xchg
pusha
mov
jge
add
inc
aaa
push
mov
jno
sub
movups
dec
loop
inc
imul
loopne
mov
cmp
ja
push
fs
lods
cmp
js
addr16
push
das
dec
adc
les
cmc
andb
mov
or
cmp
jle,pn
cmp
loop
mov
and
pop
scas
mov
and
int
or
jmp
sub
dec
xchg
ret
sbb
cmovns
push
call
leave
shl
cltd
pop
aaa
mov
adc
mov
mov
fwait
or
push
push
or
insl
cmpsb
xchg
mov
jae
pop
mov
cs
mov
and
call
inc
into
or
sahf
les
ret
repnz
dec
push
push
sbb
shl
js
fbstp
mov
sub
sbb
xor
xchg
outsb
cli
test
das
jns
jae
and
stos
lods
dec
jno
lcall
fbstp
mov
pop
frstor
nop
pop
mov
ret
test
je
ffreep
sbb
in
push
sti
fmuls
fbld
fisttpl
jns
addl
mov
pop
movq
pusha
cmp
and
aad
stc
sbb
std
ret
adc
lret
xchg
mov
ret
cltd
movsl
fsubl
sbb
sub
popa
inc
mov
lcall
adc
popa
xor
iret
sub
mov
inc
cmc
jecxz
mov
scas
jno
jge
arpl
xchg
mov
loope
dec
sub
inc
mov
in
jns
mov
aad
xor
mov
sbb
cmp
pop
enter
push
sub
jge
icebp
inc
xor
or
test
xchg
jo
dec
push
iret
jbe
push
push
call
rol
pop
into
adc
inc
inc
pop
sarb
push
sahf
popf
lcall
cmpsb
cmp
jno
dec
or
inc
arpl
hlt
jecxz
jne
int3
jp
mov
cwtl
mov
bound
cli
invd
and
push
sbbl
fsub
out
mov
lds
adc
subl
inc
fisubl
popa
pop
mov
mov
xchg
inc
sub
jne
test
sbb
jns
jne
dec
jmp
test
xchg
ss
mov
fnstenv
mov
lret
or
fisubrs
daa
adc
push
add
stos
pop
mov
inc
jo
mov
adc
nop
stos
cmc
cmpsb
dec
pop
push
clc
jle
jae
data16
or
test
push
shl
add
sub
rorb
pop
fistl
std
ret
pop
adc
lret
add
and
sub
pusha
or
jecxz
inc
mov
push
jns
sbb
sbb
shll
mov
jno
fs
lods
push
fisubl
test
dec
inc
popf
inc
push
xchg
jmp
cmpsb
mov
lods
fnstcw
xchg
xlat
sbb
cmp
lahf
popf
call
lea
pusha
daa
aam
roll
imul
aad
dec
in
xor
cmpsb
rclb
xor
cmp
clc
daa
arpl
frstor
mov
je
dec
xor
lea
dec
dec
push
loopne
out
lcall
push
dec
mov
xor
es
or
sbbl
sbb
fistps
mov
stc
dec
out
lcall
hlt
jl
adc
lock
repz
ret
mov
mov
rcl
adc
push
lock
inc
sub
jecxz
and
out
lret
fistps
hlt
cmc
xchg
push
std
cmp
mov
jnp
inc
pushl
sbb
repnz
mov
jecxz
in
adc
jne
mov
push
mov
imul
hlt
jge
test
sbb
scas
push
dec
jb
push
jecxz
in
pusha
shrl
xor
negl
push
push
jo
in
clc
sbb
movsl
in
mov
or
cmc
add
test
pop
inc
push
stos
pop
mov
loope
jg
loope
xchg
fprem
cmp
aaa
clc
xchg
ss
scas
inc
jno
sarb
mov
fsubs
cwtl
movsb
jge
xor
int3
in
jbe
pop
aam
adc
sarl
jo
inc
pop
push
cmp
sub
lods
xor
push
mov
sub
and
arpl
lds
mov
mov
mov
or
push
jo
dec
shrl
push
aas
mov
adc
pop
std
out
sti
xchg
incl
ret
jo
jno
xchg
sbb
pushl
push
dec
dec
cltd
cmp
pop
xchg
pop
jno
xor
mov
int
xchg
sub
cmp
add
mov
mov
clc
sbbl
mov
xchg
lods
jno
int3
mov
cwtl
aam
inc
or
pop
lea
stos
cmp
sbb
fs
push
lea
inc
out
or
inc
jmp
dec
movsl
push
cwtl
in
push
push
lods
pop
lret
lea
bound
and
or
jo
mov
out
mov
mov
inc
cmp
insb
imul
out
sbb
sbb
push
mov
out
lods
xor
and
pop
mov
inc
mov
stc
div
sbb
daa
push
dec
cld
outsl
sub
sahf
mov
adc
pop
andl
cs
cmp
mov
popf
cmp
fucom
mov
add
js
enter
push
add
popa
jl
and
hlt
or
stos
cmp
pop
dec
dec
push
and
pushf
xchg
xchg
mov
or
hlt
stc
stos
jnp
jae
mov
outsb
popf
movsb
mov
push
xor
pop
and
mov
push
jmp
add
in
jle
jge
push
fidivl
notl
loopne
dec
stc
jg
dec
xchg
pop
inc
jns
mov
call
in
sbb
or
jle
push
cmp
and
clc
add
sub
fwait
mov
inc
mov
jg
or
mov
sbbb
mov
leave
sbb
jae
outsl
push
adc
pusha
xchg
xlat
xchg
push
pop
mov
pop
hlt
cltd
and
jg
enter
adc
jp
mov
into
mov
adc
insl
inc
enter
stos
std
jl
adcl
lret
in
out
popf
add
dec
cmp
push
jp
repnz
shll
mov
pusha
sub
movsb
rcl
mov
and
inc
or
jo
lret
add
sub
scas
fwait
jmp
mov
dec
push
pop
movsl
xchg
or
lret
push
inc
cmp
pop
pop
xor
mov
arpl
mov
lds
cmp
out
scas
push
outsb
aaa
dec
xor
js
inc
xor
stos
push
ficoml
push
lcall
sbbl
xchg
xorb
stos
aas
mov
pop
pop
test
ds
popa
jbe
xor
mov
fcoms
test
sub
daa
fisubrl
inc
mov
mov
jnp
push
cmp
enter
loope
push
jae
fistps
add
inc
divl
cmp
pushf
ficomps
mov
ret
insl
pop
js
test
mov
je
sbb
ss
jo
xor
mov
mov
mov
mov
out
mov
xchg
and
add
pop
pop
add
mov
mov
xchg
jecxz
dec
inc
mov
repnz
jge
or
mov
popl
pusha
mov
dec
xchg
cli
xchg
mov
scas
xchg
sahf
adc
push
daa
pop
stos
fwait
add
mov
jl
cmp
push
pop
inc
xchg
pop
jo
call
mov
add
insb
jg
rcr
jns
push
sub
loope
orl
adc
fs
dec
jno
xor
cmp
pop
mov
xchg
sub
xor
imul
mov
scas
mov
js
leave
clc
gs
adc
xchg
enter
add
push
in
push
and
xor
inc
in
add
jmp
push
out
cld
bound
hlt
cld
insb
out
ds
push
jb
xor
or
xor
mov
xchg
dec
mov
es
mov
mov
stos
ret
negb
test
mov
cltd
cmp
jp
pop
in
cmp
mov
sbb
push
push
lock
cmpsl
inc
es
fsubr
cmpsb
daa
je
mov
jmp
inc
lods
push
push
subb
jmp
enter
pop
push
loop
mov
dec
ja
clc
test
pop
pop
sub
lods
push
les
and
cwtl
lods
insb
popa
mov
xchg
mov
test
in
int3
call
roll
out
mov
in
mov
out
pop
push
data16
mov
fimull
dec
test
mov
iret
shl
std
jmp
hlt
xor
das
mov
jno
lret
jo
mov
xchg
mov
and
fcompl
and
inc
or
mov
adc
or
aaa
lods
pop
push
push
xchg
lea
cmp
push
fcmovb
or
push
imul
ds
xor
mov
or
pop
xchg
sub
push
pop
int
add
ljmp
popa
and
cwtl
out
out
jae
jb
push
or
rcl
loope
pop
mov
lds
loop
outsl
mov
add
clc
push
hlt
add
xchg
jmp
dec
cmp
mov
aad
sti
lods
clc
es
xor
pop
fiadds
cwtl
in
rep
or
sub
jp
movsl
mov
nop
data16
rol
and
cmp
mov
scas
fldl
and
cli
sbb
out
insb
sbb
popf
add
insb
in
lods
int
rcrb
and
dec
xor
inc
test
sub
pop
push
cs
push
inc
out
adc
sub
dec
or
dec
pop
fwait
mov
pop
push
pop
pop
scas
and
lret
out
or
and
sub
shll
cli
je
fwait
in
inc
mov
cmp
xchg
jbe
cmp
mov
adc
adc
mov
or
gs
sub
ret
xor
sbbb
push
repnz
movsb
or
addb
xchg
sub
lret
mov
xchg
dec
jbe
sub
xlat
out
xor
cli
sbb
outsb
sbb
add
or
jb
idivl
sbb
push
inc
ret
hlt
mov
push
clc
add
popf
es
sbb
clc
and
cs
setno
dec
cs
repnz
pop
dec
inc
outsb
sbb
mov
or
mov
notb
xor
scas
xchg
or
mov
inc
add
es
mov
jno
add
and
clc
cltd
shlb
add
cmp
jp
jno
filds
cmp
imull
leave
jno
testb
lahf
adc
andb
repz
sti
mov
cs
push
repnz
scas
mov
gs
sbb
push
jle
adc
stos
fbld
sbb
incb
out
test
xchg
out
pop
pop
xchg
xchg
inc
jns
icebp
jmp
enter
sahf
pushf
ficompl
dec
inc
lods
out
dec
jmp
je
xchg
roll
pop
idivl
and
gs
sub
sbb
out
les
sahf
in
lcall
fnstcw
stc
dec
sbb
aam
flds
adc
cmp
sub
insl
mov
xchg
scas
sbb
test
mov
xor
sub
push
inc
inc
imulb
das
in
jg
daa
in
xorb
je
out
sub
xorb
divl
xor
pop
sub
jne
fcoml
in
fsub
xchg
dec
test
dec
inc
lahf
add
and
pop
pop
xchg
loop
add
pop
sbb
sti
sub
leave
out
out
inc
sar
push
imul
data16
fstl
cld
sbb
sbb
jl
sub
hlt
sbb
jl
in
ret
or
aad
sub
mov
stos
lret
pop
mov
add
push
repnz
hlt
dec
stc
dec
push
inc
jl
inc
xchg
or
adc
in
ljmp
pusha
inc
mov
cmp
sbb
add
mov
mov
mov
sbb
push
divb
dec
xchg
mov
push
xchg
cld
ja
xchg
fnstenv
mov
in
call
cltd
outsb
repnz
push
cli
pop
fldl
js
sarb
enter
adc
xor
xor
mov
sub
add
add
and
push
jnp
ljmp
xorb
dec
inc
jns
push
adc
adc
or
cmp
scas
add
mov
jbe
notl
lea
add
fisubrs
cwtl
xor
lret
pop
bound
mov
pop
sbb
cmp
inc
mov
mov
push
out
mov
dec
sbb
jo
lea
mov
sbb
or
lds
hlt
pushf
pop
fstpl
push
mov
aas
inc
and
xor
sub
loop
sub
jb
fdivrp
dec
lods
insl
mov
enter
sub
adc
lock
rcrl
je
pop
scas
add
jnp
arpl
sbb
push
dec
dec
mov
sub
das
jae
rolb
outsb
popf
fs
ja
pushl
shl
push
mov
or
adc
lods
stc
and
cmp
icebp
jecxz
scas
xchg
jo
push
push
das
mov
in
scas
push
dec
nop
push
ljmp
xor
jg
push
xchg
mov
inc
mov
adcb
or
lea
xor
incb
dec
int
xor
adc
mov
mov
push
push
inc
test
out
mov
mov
sbb
mov
fistl
jnp
aas
nop
jb
xchg
jbe
and
in
lds
aas
test
dec
stos
push
or
imul
jecxz
push
mov
es
repnz
cmp
nop
mov
xorb
jmp
popa
loope
lret
jle
inc
or
sbb
pushf
xor
leave
adc
sbb
inc
mov
mov
cmc
xor
test
cli
mov
cwtl
xor
sahf
mov
inc
mov
insl
bound
fldcw
inc
xchg
lret
repnz
and
add
adc
jb
sbb
std
push
pop
lods
and
int
fcmovnb
xchg
sbb
stos
dec
outsl
mov
call
add
and
mov
and
mov
popa
push
ror
fists
imull
imul
jp
das
inc
mov
mov
les
lcall
pop
mov
roll
push
repnz
int3
xchg
div
int3
jmp
repz
pop
cmp
sub
sbb
in
jnp
iret
test
xlat
pop
int3
jle
mov
add
dec
xor
sbb
outsb
dec
mov
lds
mov
jecxz
movsl
jb
sub
push
ja
jb
pusha
sub
add
sbb
psubb
inc
jle
movsb
or
sub
sub
out
sti
pop
adc
std
sbb
ret
mov
xor
lds
bound
or
das
push
jno
sub
fists
stc
popa
xchg
sbb
pop
push
enter
xchg
loopne
movsb
int
inc
mov
les
cwtl
and
and
popf
sub
ret
and
pop
cmp
fwait
and
aas
push
xor
fnstcw
inc
push
testb
outsb
push
push
movsl
and
jmp
cwtl
xchg
loop
orl
mov
fcmovbe
jle
inc
pop
inc
mov
and
xchg
mov
cmp
xor
and
pop
sub
xchg
inc
pop
cmp
lods
jae
bnd
inc
sti
push
inc
pop
lods
sbb
stc
std
mov
std
andl
add
jmp
push
sbb
pop
lods
fcoms
jmp
sti
fildll
int
xor
sti
rolb
mov
cmp
gs
push
out
fimuls
cmpsb
movsb
jl
cltd
xchg
adc
xchg
mov
adc
jbe
bound
pop
jns
sbb
roll
and
stos
iret
test
mov
mov
in
clc
inc
inc
hlt
test
mov
loopne
inc
jne
in
orl
fs
jns
sbb
jne
ret
and
and
jp
adcb
int
mov
dec
mov
loopne
pop
cmp
movsl
xchg
jb
push
insb
roll
into
adc
sbb
addr16
ret
xchg
push
jg
jae
icebp
lds
and
out
lret
out
mov
mov
test
scas
in
sub
mov
or
loope
or
xchg
jge
ja
xchg
test
popa
mov
lret
mov
je
mov
pop
mov
dec
and
movsl
lods
insb
add
shl
inc
and
or
test
fisttpl
mov
repz
enter
je
ljmp
inc
cmp
or
imul
pop
sub
lods
movsb
cmp
jg
leave
push
ret
lret
cltd
arpl
jmp
mov
mov
mov
add
sub
js
xchg
lret
loopne
test
pop
fstpl
pop
xor
test
add
syscall
dec
aas
loope
inc
pop
mov
out
repnz
call
xor
mov
bound
insb
pusha
lea
out
mov
rolb
jo
jne
frstor
mov
shr
xor
into
jbe
test
jno
cmp
ficoml
or
and
movsb
fcoms
stos
sub
add
pop
testb
pop
repnz
jns
pop
mov
add
jecxz
scas
into
aad
mov
ljmp
fnsave
cwtl
ret
sbb
jo
cs
ret
lods
lds
test
push
dec
nop
pop
sub
sbb
adc
cmp
push
shlb
scas
bound
jo
jecxz
mov
adc
pop
movsb
or
and
ret
arpl
loope,pt
fiadds
loope
and
aas
pop
and
popl
lea
or
lcall
imul
mov
push
mov
out
pop
inc
data16
lahf
cs
mov
test
add
jle
or
cwtl
add
mov
or
or
sbb
out
push
pop
mov
and
fisubl
cmp
mov
in
sti
xlat
add
add
in
imulb
jb
jl
inc
push
and
mov
adc
push
test
sbb
mov
inc
stos
mov
adc
iret
int
or
mov
add
add
add
loopne
pop
lret
std
adc
xlat
pushf
faddl
enter
outsb
arpl
mov
push
jmp
dec
fnstenv
jl
adc
cmpsl
scas
adcb
push
push
mov
sbb
mov
dec
mov
dec
outsb
cmpsb
push
xor
cltd
imul
scas
dec
and
add
into
jmp
lret
jns
cltd
test
mov
sbb
jle
pop
xchg
push
jns
daa
adc
dec
jns
jno
in
pop
or
jle
neg
inc
pop
mov
mov
dec
xchg
inc
popf
js
repz
clc
push
push
xor
xchg
and
out
mov
pop
cld
movsl
outsl
lods
mov
xchg
push
arpl
leave
sub
movsb
icebp
ds
mov
leave
clc
outsl
sbb
cmp
cld
ja
pusha
imul
outsb
xchg
mov
or
out
jp
cwtl
and
push
les
xchg
icebp
mov
movsl
ljmp
sub
cmp
mov
repnz
test
xchg
push
cmc
and
enter
cwtl
mov
xchg
fimuls
mov
sbb
mov
pop
subl
js
test
in
mov
aas
in
jno
jb
iret
cmp
sbb
sarl
xchg
je
cltd
bnd
inc
fimull
movsl
push
call
pop
fisubl
sub
pop
xchg
lahf
sub
sbb
lcall
or
testl
adc
sbb
repnz
movsl
out
and
shrl
jecxz
cltd
cltd
cmp
xor
ss
std
mov
cmp
push
lret
outsl
nop
repz
mov
outsl
add
pop
cmpsb
or
cmp
shl
xor
leave
adc
mov
jns
sbb
fsubrs
push
or
xchg
jbe
inc
loopne
push
and
add
and
fists
pop
push
lcall
daa
lret
sub
inc
sbb
adc
stc
dec
add
lds
call
xor
xor
lock
lret
sub
mov
inc
xchg
push
xchg
pop
or
iret
lock
jb
push
pop
push
mov
cmpsb
sbb
roll
dec
xchg
mov
in
addr16
jne
sub
inc
fmull
pop
xchg
sbb
das
les
mov
xchg
jbe
push
inc
push
inc
cmp
or
mov
jge
or
stc
sub
jl
das
mov
mov
fidivrl
pop
into
adc
mov
daa
or
push
call
repnz
bound
cmp
jb
jg
int
push
notl
leave
or
ljmp
pop
add
sub
push
add
inc
add
scas
leave
mov
push
inc
ljmp
mov
inc
idivl
mov
mov
push
jmp
xchg
sbb
in
push
xlat
xor
sub
xchg
mov
insl
pushf
xor
jne
addl
and
or
jae
call
je
sbb
pop
in
incb
pop
imul
pop
jbe
xor
aaa
dec
mov
popa
sti
mov
outsl
and
notb
shlb
mov
xor
push
mov
add
in
test
hlt
pop
in
icebp
xchg
dec
sub
pop
mov
push
aaa
insl
psrlq
jle
sub
in
inc
sub
stos
outsb
pop
ret
scas
pop
push
ss
sbb
test
clc
cmp
and
mov
jg
cwtl
adc
adcb
inc
jmp
inc
xor
push
lods
jns
push
aam
dec
xchg
dec
fdivp
add
push
out
jp
mov
pop
sti
pop
aad
aad
pop
cwtl
inc
jns
fldl
add
mov
mov
mov
add
imul
ret
fwait
cmpsb
lods
xchg
cmp
outsl
mov
xor
and
xchg
cmpsb
lods
enter
in
xchg
clc
mov
adc
mov
mov
lahf
add
push
xchg
jae
ja
sarb
sbb
test
dec
shrl
mov
pop
cli
test
xor
out
or
jecxz
icebp
ficompl
mull
and
sbb
filds
and
add
and
sub
mov
leave
into
pop
scas
pop
ss
jp
lfs
xor
aad
adc
loopne
call
outsb
dec
shr
stos
sub
pop
or
mov
outsb
add
mov
add
jnp
lods
pushf
or
cwtl
mov
daa
mov
int3
sub
mov
outsb
or
sub
jnp
jb
jmp
mov
or
daa
orb
rorl
call
pop
out
push
mov
sub
insb
cld
out
fsubl
cwtl
xchg
cmp
cwtl
movsb
call
inc
andl
inc
je
pusha
leave
add
aas
sub
lds
je
push
shl
lret
pmaxub
dec
repnz
add
xchg
pop
andb
arpl
mov
push
decl
mov
inc
clc
fdivl
gs
pop
popf
add
mov
or
ret
outsl
int3
push
fnstcw
jbe
xchg
lret
sti
sub
dec
xchg
inc
push
mov
xchg
pop
mov
mov
lret
mov
icebp
sbb
imul
lret
dec
rorb
and
dec
nop
je
adc
repz
sub
xor
sbb
mov
mov
push
cmp
jl
add
xor
mov
loop
mov
pop
or
inc
pushf
dec
push
add
sbb
dec
push
in
mov
mov
nop
mov
jle
xchg
mov
lock
out
adc
stos
mov
adc
jp
enter
test
push
push
cmp
test
bound
add
ds
cmp
fstpl
inc
push
inc
dec
in
mov
jp
sbb
sarb
cmp
ret
repnz
mov
jg
int3
pop
incb
xor
dec
mov
mov
outsl
and
imul
into
mov
aas
fs
lock
xlat
aam
and
push
sti
ss
lods
jo
jns
or
or
sti
fsts
xchg
or
rorb
dec
jge
add
in
xor
mov
mov
xlat
sahf
jae
fcomps
cmp
rolb
jns
loopne
or
xor
sub
dec
ja
push
sbb
dec
lcall
arpl
in
iret
and
push
lods
icebp
adc
jge
js
movsb
dec
lret
mov
je
or
dec
jno
push
dec
test
jb
insb
inc
cmp
int
add
jge
mov
jg
or
cmp
pusha
movsb
inc
sub
cmp
jae
dec
sub
es
int3
fiaddl
movsb
mov
sub
xchg
sahf
or
icebp
add
ret
sti
in
inc
dec
pop
lods
xor
out
movsl
lods
pop
icebp
test
inc
fwait
add
mov
mov
mov
dec
mov
mov
inc
int
popa
inc
and
scas
rcrb
adc
test
insl
loop
je
or
push
outsl
or
and
lds
test
out
leave
push
mov
pop
push
popf
xchg
addl
sbb
dec
fwait
xchg
push
jmp
mov
pop
je
push
mov
aam
inc
xor
sahf
in
sbb
sbb
repnz
and
and
xchg
inc
dec
dec
arpl
jmp
imul
cmc
aaa
movsl
cmp
xchg
in
cmp
pop
sub
fistl
mov
iret
sbb
jne
test
popa
fsubl
loopne
jbe
add
xchg
adc
test
add
mov
sub
repz
and
xchg
lahf
jecxz
mov
fdivrs
xchg
mov
mov
into
ss
xorb
stos
push
push
mov
inc
xlat
xlat
ljmp
sub
jmp
inc
mov
test
or
or
out
popa
in
sti
addr16
cmpl
stc
jmp
mov
mov
sbb
xchg
push
inc
jp
inc
sub
pop
in
ds
add
pop
inc
cmp
ja
ret
data16
int
mov
push
mov
clc
inc
test
subl
add
adc
dec
scas
and
adc
cmc
cli
xchg
mov
fwait
xor
add
stc
mov
outsl
cmpsb
lahf
sbb
add
ss
dec
mov
mov
ljmp
int
sub
cltd
sbb
sbb
popf
cmp
rcr
pop
xchg
leave
mov
fmuls
pushf
hlt
inc
mov
xchg
lret
push
pop
xor
test
and
or
lahf
mov
mov
cli
test
push
sar
out
xchg
cmpsb
cmp
insb
mov
lods
inc
sbb
add
jp
add
iret
hlt
jl
loope
xchg
jae
hlt
jb
sahf
mov
inc
out
lods
jge
fisttps
mov
mov
cmc
mov
add
inc
daa
push
icebp
xchg
lahf
roll
imul
jmp
jge
scas
push
call
sbb
or
pop
xchg
test
cld
jae,pt
xchg
inc
icebp
xchg
test
inc
cmpsl
rorb
ljmp
inc
xchg
negb
jne
sahf
push
cmp
or
adc
or
adc
imul
and
mov
aam
mov
xchg
mov
jg
shll
stc
mov
xchg
jmp
xchg
mov
dec
es
stc
sbb
leave
dec
xor
insl
das
ret
adc
bound
idiv
daa
xchg
lret
insl
sarl
xchg
rcll
leave
enter
int3
push
dec
out
aam
cs
sub
inc
popa
arpl
pop
mov
shrl
mov
test
fadds
xchg
jne
pop
lret
and
xorb
sub
insl
js
xchg
or
sbb
data16
and
jae
scas
arpl
stos
cmovle
jge
jg
pop
jno
inc
inc
aaa
sub
or
mov
push
pop
push
shll
push
es
int
xchg
xor
fcomps
std
xchg
pusha
push
xchg
pop
mov
into
inc
lret
dec
cmc
into
inc
add
roll
xor
fs
add
mov
cmp
mov
or
mov
enter
popa
or
mov
xchg
or
jns
and
jo
inc
idiv
dec
shll
cmpsl
and
hlt
jae
xor
pop
mov
sti
jnp
sbb
fimuls
daa
or
mov
rcr
ja
imul
outsl
and
into
mov
ja
pop
inc
movlps
lds
dec
sbb
repnz
inc
movsl
das
stc
iret
dec
out
dec
shlb
jge
bound
lret
jns
jle
sahf
cs
fcoml
cvtdq2ps
test
bound
cmp
cmp
fstpt
jnp
add
mov
xor
clc
dec
mov
imul
test
dec
cmc
jne
and
mov
addr16
mov
inc
mov
xor
jne
movsl
addb
movsl
adc
xchg
xchg
pop
jp
in
xor
ss
push
addr16
fistps
out
push
cmp
mov
dec
test
inc
inc
ljmp
hlt
mov
pusha
add
pusha
or
lods
xorl
push
mov
fsubs
roll
adcb
cmp
ds
jb
rorb
dec
add
pusha
mov
jb
in
sub
jbe
and
sub
addl
repz
push
xchg
adc
fsts
sahf
jnp
cmpsl
inc
nop
mov
adc
or
adc
mov
add
or
in
push
mov
xchg
inc
ret
iret
add
mov
mov
cltd
adcl
push
rorl
push
or
cmpsl
push
add
sub
pop
mov
lret
jo
fsubs
in
mov
aam
enter
sub
mov
std
mov
lods
cld
jns
in
scas
jle
sbb
or
int3
fists
mov
mov
add
dec
jb
in
push
dec
cmpsb
mov
les
sub
dec
mov
outsl
mov
pusha
data16
push
xchg
dec
mov
inc
sti
ljmp
shr
ret
jecxz
dec
sub
sbb
stc
mov
pop
rorb
cltd
lcall
mov
push
les
jae
cmp
cmp
xor
sar
pop
jne
scas
xor
popf
outsb
mov
in
insb
out
sahf
int3
orb
call
push
arpl
cmp
std
inc
sub
jmp
shlb
stc
roll
ljmp
mov
test
addr16
rcll
outsl
iret
movsb
enter
lcall
pop
sbb
mov
imulb
inc
pop
xor
fsub
mov
jns
insb
insl
test
lret
dec
xor
inc
fwait
jp
call
mov
lret
imul
arpl
clc
add
lods
mov
sbb
add
hlt
lret
dec
and
and
imul
sbb
cmc
adc
hlt
xor
les
pop
dec
dec
mov
cmc
aas
leave
jns
mov
pushf
xor
mov
xlat
xor
aad
mov
insb
add
cmp
hlt
sbb
ds
pop
outsl
jl
push
mov
push
pop
or
arpl
pop
aad
ret
cmpsl
clc
jg
pop
sbb
movsl
lret
add
push
pushf
aaa
mov
jl
mov
ret
mov
rcl
mov
insl
aas
push
mov
push
push
pusha
xchg
insl
movsl
fcmovnbe
adc
adc
imul
push
cltd
std
or
push
idivb
pop
or
mov
pop
mov
add
pushf
in
repz
mov
mov
cmpsl
adc
scas
lods
ss
dec
adc
mov
aaa
call
lods
outsl
out
mov
in
in
adc
xor
mov
das
pop
rcll
push
push
push
mov
adc
iret
push
xchg
cmp
pushf
or
or
adc
fdivrl
sbb
mov
adc
push
dec
nop
pop
mov
cmp
xlat
xor
or
mov
loope
pop
jno
sbb
dec
and
movsb
scas
cs
in
fucomp
jns
xchg
orl
nop
stos
mov
xchg
int
mov
inc
sbb
xchg
inc
mov
mov
dec
into
xchg
sbb
xchg
les
adc
jmp
insl
inc
sbb
pop
scas
test
mov
push
ja
insb
sbb
ds
pop
push
out
and
sbb
les
add
push
sub
fwait
mov
data16
out
lahf
lsl
add
push
cltd
test
push
pop
or
cmp
cmpsb
movsb
ja
movsb
push
notb
sar
xchg
pop
lea
mov
cmp
dec
negl
pop
inc
dec
adc
cmc
xchg
popf
into
adc
nop
mov
pop
jb
push
adc
cltd
fstpt
mov
shlb
int3
jp
repz
pushf
ret
addr16
popa
pop
xor
decb
scas
fistpl
pop
sahf
rcrb
test
lcall
inc
mov
xor
jg
mov
and
xchg
int
stos
mov
cmp
sbb
dec
aad
mov
push
test
jb
xor
xor
dec
movsb
popf
mov
pop
das
es
inc
adc
loope
xchg
xchg
lods
es
xchg
pop
add
aaa
mov
jl
in
into
inc
lahf
xchg
xor
in
fcom
cmp
xchg
popf
lods
xchg
das
in
lahf
dec
stos
in
fdivp
mov
or
add
mov
subl
std
mov
jle
and
mov
out
add
push
je
fidivrl
pop
jne
dec
lcall
adc
decb
pop
imulb
push
dec
js
rclb
repz
mov
mov
cmpsl
add
inc
xchg
adc
mov
insb
xchg
ret
outsb
loopne
cmp
or
sti
ja
fiaddl
jno
mov
lods
repnz
push
adc
adc
iret
sbb
dec
push
cli
movsb
jae
lds
push
pop
lret
pop
mov
aam
pusha
sub
sub
addr16
mov
imul
mov
scas
mov
in
jae
jae
loope
scas
sahf
out
dec
or
in
int
sbb
ret
fs
stc
fildl
fstl
mov
push
cmpsl
insl
push
nop
push
dec
lds
mov
ss
aad
std
mov
fists
push
adc
jo
cmp
cwtl
outsb
pop
fstl
dec
adc
xor
lahf
add
addl
cmp
sub
popf
sti
iret
daa
add
xor
pop
mov
test
pop
push
ficoml
or
mov
lret
xchg
in
mov
pop
mov
xchg
push
ljmp
adc
rcrl
rol
std
dec
push
inc
push
push
mov
addb
lahf
out
or
dec
push
ja
cmp
fcmovnu
stos
mov
rclb
add
or
arpl
jbe
scas
ljmp
or
pop
inc
ret
ds
aad
cmpsb
xchg
incl
adc
mov
lds
fcoms
or
cmp
xlat
ljmp
mov
fwait
jle
dec
push
add
or
dec
xor
loopne
aad
ljmp
add
dec
fwait
cltd
std
adc
dec
xor
rolb
cmp
outsl
and
addr16
sub
adc
push
add
add
rol
cmp
dec
icebp
fldcw
in
popf
jg
stos
adc
dec
or
inc
dec
and
pusha
inc
hlt
inc
cmpsl
jae
jp
aaa
jl
adc
cmp
cmpb
loop
ljmp
add
cmp
aaa
pusha
pop
push
mov
xchg
push
and
lret
fsubr
pushw
push
and
imul
loop
sbb
rcr
and
push
inc
jbe
jmp
outsb
scas
mov
adc
ljmp
repnz
fdivs
pop
inc
add
sbb
jecxz
ljmpw
jbe
mov
xchg
adcl
dec
rcr
hlt
cmpsl
or
jmp
xor
daa
fs
xchg
out
js
and
mov
out
lods
xlat
mov
dec
pop
cltd
mov
lds
clc
mov
add
nop
mov
mov
mov
loope
punpcklwd
push
xor
int
andl
lret
mov
lret
adc
adc
subb
push
mov
fwait
test
fcomps
push
clc
push
or
xchg
ds
sbb
adc
xchg
out
pop
cmc
cmp
mov
add
and
faddl
jp
mov
sbb
mov
adc
gs
lea
mov
lods
sub
add
rclb
stc
xor
mov
pop
addl
pop
aaa
ja
pushf
inc
insl
fildll
push
jecxz
aam
testl
aam
ja
push
mov
cmp
sahf
hlt
std
xchg
mov
pmaxsw
pushf
bndldx
xchg
pop
enter
test
mov
dec
or
jmp
out
pop
es
nop
pop
loopne
shlb
pushf
add
push
sar
inc
adc
inc
or
xor
in
enter
xchg
lret
push
aad
cmpb
mov
repnz
sub
inc
add
mov
inc
cmc
pop
inc
add
sbb
xchg
mov
rolb
mov
lods
enter
cmp
aad
jns
aaa
repnz
ds
dec
es
addb
icebp
das
pop
sub
repz
or
imul
xor
popa
dec
mov
and
mov
std
push
mov
sbb
jg
mov
bound
and
int3
in
es
sub
in
adc
fbstp
enter
cmp
test
faddl
subl
stos
and
jne
lret
mov
sbb
imull
test
sahf
jge
aaa
mov
or
inc
shll
sub
jecxz
pushf
pop
push
jl
lods
xchg
mov
add
fidivs
fcompl
imul
mov
outsl
dec
cmp
stos
lret
push
rorl
mov
callw
mov
mov
lcall
lods
push
jb
clc
push
inc
jg
daa
or
hlt
xchg
dec
lahf
mov
xchg
testb
push
ret
iret
push
push
cmp
xchg
cmp
shrb
inc
xor
jl
or
aam
xchg
lret
sub
orl
call
daa
jb
or
sbb
inc
out
sub
negl
xchg
inc
out
je
adc
ss
repnz
jnp
mov
jno
ror
cmc
push
jbe
test
dec
cmp
mov
fdivs
xchg
filds
jb
cwtl
jmp
mov
dec
ret
jae
data16
jge
jbe
cld
enter
jae
ljmp
and
ljmp
cmp
aas
fiaddl
out
push
xor
std
push
cmp
jp
mov
movsl
out
push
adc
pop
add
out
add
mov
popf
mov
mov
adc
push
in
xchg
add
test
and
mov
es
repz
dec
pop
mov
loop
adc
je
pop
enter
adcl
dec
lahf
push
add
cmpb
lret
es
or
mov
ficoms
pushf
mov
jo
popa
sbb
hlt
lods
cmp
bnd
dec
fsubs
fs
ljmp
jne
clc
and
xor
arpl
and
in
xor
pop
out
or
adc
lods
xor
popf
lea
aaa
fs
and
mov
das
jmp
lcall
rorl
add
lret
adc
push
mov
mov
paddb
rorl
add
shll
dec
adc
and
mov
pop
clc
out
jp
std
xchg
push
out
cmp
popf
mov
pop
leave
and
out
movl
fnsave
pop
data16
das
mov
rorl
xor
xor
cmc
jp
mov
int3
insb
add
push
lock
bound
push
sub
mov
pop
fisttpll
call
ret
adc
mov
cmp
ret
and
mov
lahf
filds
int3
and
test
mov
xor
sub
iret
rol
push
push
rorl
shll
jmp
sbb
mov
sahf
repnz
adc
aad
sbb
bound
cli
jno
sbb
stos
sbb
test
aad
cli
mov
jae
mov
jne
ret
cmp
inc
cli
xchg
sahf
pop
js
test
das
rcll
cmp
jae
pop
or
subl
pop
jmp
mov
and
jecxz
add
mov
lahf
mov
sub
mov
lcall
iret
jle
pushf
cmp
add
roll
fisubrs
jp
out
inc
in
mov
fdivrl
sbb
adcl
xor
pop
nop
jno
cmc
push
int3
push
cpuid
repnz
in
imulb
leave
cwtl
mov
xchg
imul
jp
mov
lahf
mov
rcrb
mov
sub
push
add
insb
movsb
out
jmp
cmp
jecxz
pop
add
sub
and
sbb
mov
jecxz
loopne
std
mov
outsl
or
sub
jmp
jb
adc
rorl
rcr
lret
lcall
mov
scas
xor
lret
aas
popf
stc
inc
sbb
ret
sbb
ss
ficomps
lock
xor
mov
cli
mov
push
or
adc
push
pop
fistl
repnz
cs
inc
mov
pop
pushl
cs
xor
std
fdivrl
movsb
and
xchg
outsb
xor
pusha
add
sub
mov
mov
cmp
dec
outsl
in
mov
cmc
fcompl
push
mov
mov
pop
loopne
push
dec
test
push
stc
or
dec
out
ret
xor
test
out
ja
addl
or
int3
shrl
ljmp
jbe
adcb
jae
mov
aaa
inc
sti
xchg
test
sub
cmp
xor
jmp
add
inc
cmpb
jo
stos
pop
xchg
pop
pushf
dec
shlb
xchg
imul
cmp
fcmove
shll
cmp
aam
mov
mov
mov
mov
xor
inc
js
pop
inc
dec
adc
xchg
adc
sub
and
dec
mov
pop
mov
insb
ja
inc
movb
adc
mov
movsl
mov
inc
xor
xor
dec
inc
in
push
dec
push
add
aas
and
inc
xor
add
xor
jns
aaa
pop
cmpsl
jmp
pop
popf
add
xchg
pop
insl
jne
cmp
lods
popa
mov
in
sub
jnp
pop
stc
sub
out
test
in
xchg
pusha
xchg
je
nop
mov
lret
insb
out
std
fwait
sub
push
mov
dec
xchg
dec
and
sub
adc
pop
dec
int
and
loope
and
dec
dec
sub
pop
pop
push
lret
xchg
mov
arpl
out
cmp
stos
scas
xchg
mov
pop
mov
dec
mov
enter
iret
xor
repnz
pop
xor
sbb
mov
mov
mov
idivb
repz
sbb
push
cmp
out
rorl
inc
push
mov
scas
and
rcrl
hlt
pop
xchg
add
mov
imul
mov
cwtl
stos
out
cltd
out
mov
int
ds
cld
sub
fcompl
hlt
fstps
es
popa
sub
int
js
mov
push
ret
dec
mov
lock
jl
and
inc
sub
mov
mov
and
inc
loopne
out
clc
pop
out
mov
loope
mov
cmp
mov
cwtl
ret
inc
in
popa
pop
pop
outsl
mov
mov
fnstsw
lods
and
cwtl
mov
xchg
or
lcall
mov
pop
shrl
insl
cltd
pushf
sub
pop
aas
jns
scas
pop
xchg
aaa
pop
loop
xor
bound
xchg
fistpll
sti
shrb
pop
and
sub
jge
jb
inc
add
or
cmpsl
mov
inc
js
xchg
adc
pop
mov
mov
inc
mov
mov
push
cltd
jmp
mov
orb
xchg
xchg
xchg
dec
mov
stos
in
mov
jp
ret
lea
adc
pushf
fidivs
sti
loopne
ret
cmp
aad
daa
icebp
push
sub
movsb
jmp
je
xchg
inc
inc
les
out
mov
mov
sub
add
jns
xchg
arpl
dec
sub
out
cld
cmp
arpl
adc
sub
and
pop
je
sarb
in
mov
inc
xchg
outsb
xchg
push
fmull
sti
and
ficoms
add
pop
sub
or
shll
aad
pushf
int3
fists
int3
xchg
or
pop
cmpsl
push
sub
xor
loop
mov
xchg
xlat
iret
fildl
js
and
outsl
dec
sahf
popw
xchg
into
notl
int3
lds
sbb
ljmp
cmp
mov
jl
jge
aad
test
mov
xchg
jbe
mov
mov
ret
gs
shl
lcall
clc
lret
repnz
popf
lods
lret
pop
dec
test
xchg
lds
das
mov
push
mov
test
inc
cmp
insb
cmp
cmp
xor
xor
dec
popf
inc
sub
ja
ret
aad
mov
aad
or
pop
jae
into
inc
in
test
sahf
xor
lock
fistpl
data16
push
add
xorl
adc
gs
in
push
data16
mov
sti
sub
lods
arpl
andl
push
inc
add
dec
or
lahf
es
shr
add
cmpsb
out
push
xchg
jle
or
in
cmp
push
pop
in
dec
fcomps
insb
stos
cmp
adc
jns
shl
sbb
aaa
dec
mov
notl
sub
mov
sub
addr16
jnp
ret
outsl
dec
cwtl
add
sub
je
and
dec
scas
xchg
lahf
sub
push
cmp
mov
or
mov
fcoms
pop
mov
fidivl
mov
pop
sbb
sbb
sti
adc
lret
mov
in
fnstcw
add
into
int3
imul
push
nop
out
xor
cmp
lods
je
jns
lret
dec
jmp
mov
jb
test
adc
dec
mov
xchg
loope
dec
fisttps
and
ret
in
aam
lahf
mov
xchg
mov
or
inc
test
add
cld
imulb
or
test
jae
mov
mov
add
dec
mov
push
mov
mov
sbb
orl
sub
das
add
incl
mov
fwait
xor
and
push
pop
sub
repz
xor
aad
cmpsl
push
mov
movsl
lds
dec
adc
lds
int3
notl
les
stos
movsl
je
fwait
push
add
or
or
out
clc
mov
jmp
mov
out
imul
outsl
inc
ficoml
aas
pop
cmpb
fnstenv
je
pop
dec
in
jle
mov
lret
adc
add
mov
sti
sub
imul
imul
adc
std
push
loop
into
daa
scas
xchg
not
adc
out
xor
sbb
or
xchg
fcompl
push
sub
out
loope
xchg
dec
scas
push
sahf
lods
dec
fcomps
cmp
jecxz
das
pop
fbstp
xor
call
int3
inc
push
jo
iret
sbb
out
enter
outsl
sub
sub
mov
ret
mov
rcll
aas
dec
neg
sahf
test
fs
adc
cld
inc
enter
daa
add
je
xchg
sti
add
push
sub
iret
jae
xor
call
adc
adc
ja
imul
ret
scas
sub
sarl
rep
sub
notl
or
lods
jbe
xchg
add
dec
jne
scas
jno
and
jne
cmp
popa
mov
clc
cmpsb
adc
or
inc
sbb
movsb
cmp
xchg
push
cs
and
fwait
push
scas
xlat
mov
out
push
enter
mov
mov
mov
inc
vpaddusw
fucomip
or
in
inc
dec
sub
sub
pushf
jb
ror
out
push
dec
and
push
cmp
mov
inc
loope
fs
aaa
in
push
add
mov
add
stc
out
cmpsb
mov
adc
fs
lds
mov
fldl
aaa
sub
pop
sahf
int
lock
aaa
xlat
arpl
repnz
cli
xor
jmp
ss
or
push
cmp
inc
push
iret
jnp
sub
cmc
push
inc
push
fwait
lcall
daa
je
stc
add
xor
inc
test
push
fnstsw
mov
xchg
popf
rcl
jmp
mov
into
mov
in
hlt
sti
loopne
mov
adc
in
and
test
test
clc
push
pop
mov
push
pop
adc
das
and
jg
fcompl
jb,pn
jg
lcall
pop
mov
mov
or
lock
popf
mov
gs
push
loope
xchg
adc
xor
cli
lods
loop
fs
mov
dec
shl
push
mov
xchg
and
loop
sbb
test
stos
inc
pop
lea
lahf
push
std
or
mov
call
aaa
fsubl
xchg
fildll
sbb
xchg
sarb
cmp
scas
adc
repz
lahf
or
arpl
mulb
and
rorl
adc
lcallw
dec
dec
fcoml
iret
adc
pop
cmc
xlat
ret
jecxz
push
test
xchg
loope
lahf
inc
mov
aad
mov
jle
jnp
jo
addr16
cmp
mov
dec
pop
xor
inc
and
mov
or
jns
imul
adc
loop
mov
lock
and
mov
lock
push
addr16
out
mov
in
aad
gs
cmp
enter
push
mov
jae
push
push
in
pop
fsts
mov
pop
addb
sub
test
rorl
psubq
cmp
mov
pop
jo
call
mov
popa
and
dec
add
shlb
mov
sbb
rol
dec
popf
loopne
in
add
jle
scas
addl
sub
mov
ficoml
fs
add
fisubs
lahf
jg
inc
jecxz
pop
xchg
dec
mov
jp
sahf
sahf
and
ror
sti
jne
cld
push
jnp
jno
fistpl
cmp
add
pop
clc
mov
movsb
push
or
rcl
lahf
push
ds
sub
jo
stos
ja
ss
sbb
das
jmp
popl
inc
sub
xchg
repz
dec
fadds
lcall
or
rolb
sbb
js
scas
xchg
stos
insb
aad
mov
or
sar
into
dec
sahf
xchg
jmp
jp
and
les
sti
stos
leave
in
aad
lods
loope
and
adc
int
insb
pop
inc
hlt
outsl
sub
adc
sbb
cmc
test
mov
jl
int3
test
adcl
stc
rcll
jmp
repnz
int3
int3
and
mov
out
std
sub
push
pop
push
jno
adc
out
mov
dec
add
cmp
loopne
mov
sbb
sarl
mov
shll
jg
xchg
or
mov
push
push
cli
out
andb
xlat
sbb
or
jo,pt
andl
push
pop
mov
loope
sahf
push
mov
xchg
lcall
adc
test
popa
scas
dec
jmp
sbb
fwait
push
mov
int3
xchg
sub
xchg
rcll
push
out
push
icebp
das
aas
push
sub
cs
in
push
sahf
mov
fs
dec
inc
mov
les
popf
sub
call
lahf
mov
push
cmp
push
push
mov
aam
lods
push
ljmp
adc
mov
enter
mov
and
shlb
jb
ficompl
mov
imul
push
sub
cwtl
mov
sub
mov
jge
pushf
cs
fsubl
adc
fwait
push
or
mov
pop
lahf
jns
loopne
pop
xor
mov
cs
clc
pop
clc
mov
aaa
test
fcom
icebp
out
adc
add
subl
push
mov
adc
push
inc
or
jle
sbb
mov
jecxz
clc
dec
adc
xchg
imul
push
ja
push
dec
jge
pop
fsubr
mov
pop
or
xor
lods
pop
xchg
xchg
jbe
mov
mov
xchg
cmp
fs
or
add
jne
flds
cmp
int
iret
adc
rcrl
sti
pop
ret
mov
and
jo
adc
fincstp
xchg
or
filds
std
sub
pop
int3
pop
lods
add
loopne
nop
xchg
xchg
jns
and
and
cmpb
xor
add
nop
test
xor
cmp
das
shlb
pop
mov
in
mov
mov
and
test
xor
cmp
ds
add
arpl
push
or
pop
adc
sti
adc
orb
daa
xchg
mov
mov
jmp
sub
sbb
ja
mov
jg
outsb
call
or
inc
test
roll
or
cwtl
sarb
ja
stos
fldt
push
push
xchg
imul
out
cmc
sbb
lock
sub
into
repnz
dec
mov
lods
sbb
hlt
enter
bsr
dec
mov
mov
mov
cli
sbb
or
mov
xorb
shrb
adc
adc
xchg
xor
cmpb
jbe
fwait
sahf
lret
in
sub
xchg
sti
ret
shrl
mov
xchg
sbb
scas
jbe
push
incb
push
scas
inc
addr16
imul
mov
out
gs
push
jg
fiaddl
jne
into
ljmp
repz
jl
out
imul
cmp
aas
mov
shlb
sub
enter
fsubs
repz
jne
adcb
lcall
cmp
pop
xchg
mov
adc
addl
outsl
lock
cmp
pop
inc
cmp
testb
mov
cwtl
sub
daa
and
mov
sub
sbb
js
imul
test
jae
sbb
aad
add
dec
add
test
pop
pop
je
and
cmp
adc
sub
divl
rcl
inc
sar
fbstp
mov
pop
xchg
push
sbb
test
xchg
cld
lcall
inc
testl
popa
adc
mov
jmp
xor
iret
int3
add
or
dec
popa
out
into
aas
mov
push
hlt
jae
inc
aas
and
sub
sbb
sub
mov
movsl
mov
aas
inc
subb
sub
and
mov
mov
scas
rorl
cmp
scas
insl
mov
xor
pop
js
mov
pop
outsb
ret
ljmp
dec
mov
hlt
mov
add
mov
mov
jno
in
sub
icebp
sbb
inc
adc
pushf
jnp
je
mov
cs
aas
inc
lahf
outsl
test
xchg
insl
sub
aad
inc
mov
jecxz
insl
stos
in
mov
cmpsl
iret
jp
clc
cmp
cwtl
lcall
mov
cltd
mov
cmpsb
imul
jl
scas
lret
inc
pop
pop
push
movsl
addl
js
pop
outsb
mov
dec
adc
iret
popf
inc
stos
sub
pop
mov
inc
xor
lds
adc
pop
into
scas
mov
xor
adc
add
out
in
or
add
mov
add
clc
fwait
stc
pop
mov
cltd
ss
movsb
pop
in
cld
aaa
sub
mov
popl
inc
js
inc
jge
xchg
jl
dec
push
mov
bound
add
dec
dec
inc
fisubrs
adc
insb
loop
dec
test
icebp
add
xlat
icebp
lcall
add
lahf
lahf
shll
xchg
mov
mov
out
xor
lret
add
adc
xor
jge
mov
ret
arpl
dec
push
test
mov
or
add
mov
push
sub
xor
clc
decb
mov
jae
push
lds
jge
jmp
mov
inc
imul
mov
testl
jl
orl
jne
xchg
call
mov
hlt
movsb
popf
push
out
add
pop
pop
pop
repnz
mov
pop
inc
or
movsb
xchg
jno
subb
dec
add
adc
outsl
cmc
pop
dec
jmp
and
popf
sarl
xor
pop
pop
mov
ja
push
clc
mov
in
pop
aam
adc
sbb
cmp
rclb
loop
lret
lock
imul
mov
in
jb
xchg
sbb
push
xchg
test
div
sub
add
inc
mov
hlt
pop
sbb
iret
or
jo
cmp
hlt
xor
pop
or
in
xchg
testb
call
ud2
adc
jp
jg
leave
and
or
scas
mov
scas
insb
in
in
fisubrs
test
sahf
dec
lahf
pop
pop
ljmp
rol
cltd
shl
movsl
inc
xchg
pusha
xor
mov
xor
lock
jmp
daa
stos
sbb
sbb
test
sti
call
sub
xchg
test
scas
or
out
fdivrs
popf
out
mov
and
ret
lods
push
cmpsb
loopne
and
adcb
inc
in
jns
movsb
adcl
jbe
cwtl
js
jl
addr16
scas
ret
jae
fs
ss
or
adc
mov
cltd
out
mov
jp
scas
cwtl
iret
xchg
shrb
mov
fisubs
dec
mov
aaa
push
mov
in
mov
sbb
sti
popa
ljmp
mov
cmpl
shll
mov
add
xchg
sti
pop
dec
loopne
pop
xlat
lcall
jno
mov
dec
mov
sahf
and
inc
xor
dec
ficomps
out
shl
scas
cmp
mov
je
jno
ret
push
loop
inc
mov
mov
testb
jg
idivb
xchg
dec
ds
stos
dec
movsl
ret
sub
add
insb
faddp
cmc
cli
rcrb
movsb
lahf
pop
cli
sahf
leave
xchg
movsl
subb
ds
inc
fldl
imul
mov
push
outsl
mov
cs
ss
jo
and
out
push
push
cmpsl
jne
xor
mov
xchg
imul
push
es
cmp
dec
pop
sahf
test
jne
push
loope
adc
xor
sub
push
jecxz
fsub
pop
add
sbb
gs
jb
imul
inc
sub
jp
subb
imul
sub
dec
jb
fadds
leave
in
ja
sub
scas
int
pop
push
mov
sub
cmc
aaa
xchg
pop
sub
mov
stc
leave
jae
or
nop
push
insb
icebp
mov
mov
pop
sbb
pushf
hlt
mov
mov
movsl
dec
pop
inc
adc
push
mov
bound
jl
push
sbb
cmp
nop
cmp
dec
push
adc
sub
jns
adc
push
std
sub
sbb
aad
jmp
sahf
sbb
shll
lods
xchg
sub
push
mov
pushf
jbe
xchg
out
icebp
push
cmp
mov
stos
hlt
iret
sti
lret
cmp
xlat
cs
lds
in
into
push
sub
cmp
ja
mov
pop
cli
lea
js
pop
out
add
out
ljmp
stos
inc
leave
addb
lahf
push
mov
out
jno
or
insl
nop
cmc
loop
loop
clc
arpl
pcmpgtb
iret
dec
push
ljmp
or
es
rclb
mov
mov
addb
jge
mov
aaa
mov
mov
enter
dec
lods
cld
pop
and
fs
loopne
inc
in
mov
jnp
pop
cld
pop
or
sbb
dec
push
loop
scas
jle
scas
dec
cmpl
jae
push
imul
rcll
loope
sub
sub
xchg
inc
movsb
cmp
sub
mov
pop
inc
push
adcb
data16
sar
jl
je
xor
test
push
inc
movsl
xchg
sbb
mov
aam
lret
push
loope
cmp
or
xor
or
pop
repz
stos
enterw
aas
negb
jl
iret
scas
inc
loope
add
jnp
dec
les
xchg
fmuls
imul
sbb
jmp
mov
or
sbb
mov
in
loopne
and
push
sarl
clc
test
lret
pop
or
enter
push
adc
aad
repz
ret
xor
jmp
adc
dec
jg
ja
fsubs
mov
pop
psubsb
dec
xchg
insb
stos
dec
push
jne
ficompl
fisttpll
es
in
xchg
cwtl
aam
push
imul
add
fnstcw
mov
pop
negb
lret
inc
repz
push
sub
push
stc
jecxz
testb
mov
xchg
es
lahf
lret
lds
mov
ret
jmp
and
andb
sbb
loopne
push
shrl
inc
push
imulb
cmp
enter
inc
lock
cmpb
clc
ljmp
lds
adc
fdivl
and
dec
push
scas
sbb
push
inc
imul
add
loop
mov
or
pop
mov
xor
cltd
lock
sbb
xchg
dec
or
jmp
out
sub
lods
lods
push
push
mov
imul
mov
iret
cld
inc
jne
in
stos
push
dec
mov
xchg
push
jb
pop
das
or
idivb
or
dec
lods
insb
gs
fnstcw
push
fstl
sbb
mov
or
leave
mov
jne
fmull
cmovbe
sub
fstl
les
cwtl
addl
mov
ljmp
inc
adc
leave
push
popf
out
mov
sub
iret
pop
push
mov
popf
test
lahf
nop
sbb
scas
mov
and
lods
jge
mov
inc
or
div
inc
jp
js
fiadds
inc
jmp
call
sbb
into
call
iret
jns
adc
js
xor
mov
es
das
mov
adc
adc
push
push
mov
lds
pop
inc
add
daa
or
cmp
xchg
je
mov
sets
lcall
cmpsl
fcomps
inc
fs
pushf
adc
adc
clc
cmpl
push
imull
hlt
je
inc
clc
scas
test
fnstenv
xchg
cltd
fsubrs
mov
inc
roll
mov
xchg
fwait
inc
loop
outsl
xor
cmp
gs
mov
xorl
xor
or
in
add
sub
fcoms
jmp
sub
jmp
push
fldcw
mov
in
jnp
aaa
jl
dec
xchg
arpl
jmp
mov
jmp
jp
dec
lds
hlt
and
jecxz
fistpll
loope
adc
xorb
shrl
fs
sub
pushf
mov
outsl
pop
rcr
push
fidivl
cli
arpl
mov
sub
add
jo
jae
xor
sub
je
or
jmp
mov
inc
std
imul
push
lret
mov
inc
xor
cmp
cmp
jmp
cmp
ljmp
ds
lret
cwtl
xchg
inc
push
dec
mov
sub
xlat
rol
das
push
push
pop
sub
mov
xor
test
or
cs
rcrl
or
pop
pop
mov
xchg
adc
cld
push
cmp
stos
out
or
add
scas
pop
fidivrl
scas
fisubl
mov
push
fdivl
xchg
push
cli
inc
ds
add
pop
push
setnp
aam
cmpsl
data16
fs
adc
and
pusha
cmpsb
add
xchg
fdivrp
jg
cmp
out
mov
mov
fidivrs
mov
cmc
push
stos
pop
or
adc
mov
stos
int3
jge
mov
jg
lret
jl
push
les
leave
sub
push
jg
push
inc
mov
xchg
cmpsb
xchg
icebp
repz
pushf
arpl
inc
add
sbb
xchg
das
mov
stos
addb
clc
add
add
cmc
in
push
in
cmc
xor
push
jecxz
dec
dec
stc
sti
jbe
cmp
dec
lcall
cwtl
sub
push
mov
ret
mov
rorb
xchg
movsb
pop
into
hlt
stos
fnstsw
shlb
mov
sahf
xchg
call
fdiv
mov
xchg
test
lret
mov
ljmp
arpl
or
pop
pop
cmc
dec
insl
mov
dec
add
test
pop
aam
andb
mov
mov
jb
shrb
add
loope
fldenv
sub
xor
mov
xchg
cs
pop
clc
mov
pushf
lea
out
mov
pop
push
xor
leave
arpl
insl
push
xor
cmp
sbb
outsl
ja
out
mov
jg
cmp
sbb
aaa
mov
jb
inc
scas
push
add
jae
mov
jns
dec
mov
push
addr16
int3
or
out
fcom
xchg
cmpsb
bound
sbb
xchg
xchg
mov
in
pop
adc
out
inc
add
in
in
movsl
iret
in
mov
xor
stos
cmc
adc
or
repnz
mov
cli
ljmp
xchg
adc
in
add
mov
add
xor
xchg
cmp
and
in
fwait
and
xchg
mov
mov
movsb
xchg
data16
xlat
lock
cmp
mov
mov
mov
push
out
into
jne
mov
adc
out
xchg
xchg
jbe
jg
leave
push
in
movsb
dec
or
inc
into
lds
sbb
lahf
fidivrl
push
je
cmp
add
push
sbb
fistpll
dec
mov
jns
std
test
gs
add
jmp
mov
in
jle
daa
dec
push
mulb
ljmp
sub
push
std
xchg
data16
sbb
fwait
fwait
movsb
sbb
lods
push
push
dec
pop
xchg
loopne
in
mov
add
pop
inc
fs
inc
movsb
add
mov
ret
fdivrp
frstor
jbe
mov
or
sar
rolb
xor
cmc
xchg
cmp
clc
push
outsl
push
xchg
sub
pop
pusha
pop
pop
lds
sub
jge
test
xor
lds
pop
and
inc
mov
mov
negb
rolb
mulb
jl,pt
pop
out
jle
pop
cld
jg
stos
mov
rolb
cli
mov
mov
rolb
mov
popf
hlt
xchg
add
sbb
add
inc
xacquire
divl
test
sub
dec
aaa
orl
inc
mov
inc
jecxz
ret
mov
mov
sub
mov
mov
scas
mov
add
pop
pop
gs
ja
fisttpl
jp
cmp
jns
sar
ds
mov
mov
inc
aad
pusha
cmc
int
icebp
decb
mov
xlat
inc
push
dec
in
xor
push
mov
xor
loope
ss
movups
push
ljmp
cmc
lods
or
xor
sbb
cltd
addl
aad
repz
push
push
or
in
cmp
fucomp
push
add
xchg
popf
mov
out
shll
out
jns
push
adc
xor
pop
stos
jne
mov
cmp
aas
out
pop
push
ja
gs
or
push
mov
jo
repnz
int3
dec
and
movsb
cs
cwtl
aad
notl
fimull
and
and
je
adc
mov
fldt
xchg
adc
mov
test
jg
add
inc
mov
push
push
fmuls
fidivl
mov
sti
movsl
jo
jp
in
mov
jnp
addr16
push
insl
push
cmpsl
das
in
push
mov
nop
jns
mov
fisubrs
add
rorb
ljmp
jo
daa
dec
sbb
jecxz
mov
mov
adc
sub
pop
dec
add
out
ja
xchg
push
push
mov
maskmovq
idivl
add
testl
repnz
xor
mov
xchg
pop
fmull
pop
daa
push
mov
inc
xchg
outsl
sub
dec
pushf
aas
lods
mov
xor
xor
rcrb
mov
xchg
cmpsl
and
aas
inc
fidivrl
mov
pop
jge
or
int3
rcrb
xchg
loopne
leave
cld
test
ret
fistl
enter
or
add
push
repnz
pop
movsl
push
sti
test
mov
in
or
inc
inc
rorb
into
xlat
shr
sub
in
sub
imul
or
cmp
jae
arpl
into
sahf
out
ret
or
dec
xchg
stos
dec
rolb
sub
sub
push
bound
aam
pop
pop
sbb
or
push
aaa
jmp
hlt
pop
aaa
push
xor
mov
push
cltd
mov
adc
pop
ds
ret
popa
or
push
push
popf
mov
out
lret
add
in
ficoms
insb
pop
je
pop
sub
es
lea
xor
das
pop
fs
fisubrl
cmp
fwait
rcr
popl
mov
aam
popa
cmp
sbb
outsb
test
test
mov
in
adc
lret
lahf
enter
es
push
insb
inc
add
scas
js
xor
mov
jecxz
or
fwait
shl
mov
shrb
jnp
and
fistpll
addr16
mov
mov
xchg
dec
adc
test
je
add
mov
into
xchg
jo
inc
out
mov
jns
push
repnz
hlt
add
outsl
add
xor
cmpsl
add
mov
jae
repz
dec
inc
xchg
mov
fistl
sub
negl
cli
xor
push
clc
and
rorb
std
sbb
xchg
or
and
and
jne
lahf
or
inc
mov
xchg
out
pop
loopne
mov
insb
fists
mov
lods
inc
imull
cmc
dec
bound
rclb
and
xchg
dec
iret
jg
movsb
cltd
js
mov
or
sub
xor
fimull
push
jp
xchg
xor
push
es
add
jo
dec
ja
dec
and
int3
popa
inc
xor
or
lcall
mov
fildll
js
pushf
std
lds
js
cmp
mov
xor
mov
popf
cmp
inc
test
mov
int3
shrb
and
test
mov
xor
ja
imul
xor
cmc
popf
notl
inc
jl
inc
and
aam
in
push
das
cmp
jge
outsl
outsl
and
jno
pusha
shrl
mov
in
scas
or
xchg
dec
fldt
in
notb
repz
xlat
pop
call
dec
inc
xchg
std
mov
scas
mov
adc
ret
adc
movsl
jge
in
punpckhbw
cld
jns
sub
mov
adc
inc
out
ret
outsl
push
and
mov
push
sarl
das
cs
mov
scas
fisubrl
leave
ret
clc
das
imul
cld
add
dec
cmpsl
inc
and
push
movsl
clc
mov
add
hlt
push
mov
dec
loop
mov
mov
cmc
dec
sub
insb
ds
ffree
xor
ljmp
or
addr16
push
sbb
and
push
or
fistl
rcrl
or
mov
clc
jecxz
scas
loop
outsb
ja
jmp
dec
adc
adc
repz
lahf
cmpsl
fmulp
push
hlt
out
sub
xchg
imul
cmpsl
adc
or
jbe
push
clc
cmp
pop
inc
fs
adc
push
std
jns
mov
and
scas
in
rcll
mov
sub
loop
mov
jecxz
sub
insb
and
rol
in
jno
out
ss
ds
push
rorb
mov
push
xchg
mov
mov
dec
bound
mov
nop
loopne
mov
aas
shrb
decb
fmull
fs
mov
or
pop
fstpt
xlat
int3
int
out
cmp
sbb
imul
lahf
mov
mov
scas
aaa
cs
dec
loop
test
jmp
push
inc
xchg
ljmp
nop
and
rorl
xor
push
stc
out
fisubl
push
pop
les
mov
or
push
lcall
arpl
jecxz
cmc
inc
ret
adc
xchg
push
lea
sbb
sub
sbb
addl
mov
xchg
arpl
pop
lret
jns
addr16
mov
imul
jb
pop
cmp
std
pushf
call
mov
jl
shll
mov
lea
adc
dec
adc
test
aad
cmp
mov
fsubl
insb
iret
test
or
ret
or
inc
out
cltd
xchg
mov
loope
daa
aaa
scas
lds
and
stos
add
mov
push
fcoml
jns
mov
push
and
sub
mov
pusha
stc
sub
sub
mov
outsb
rorb
mulb
movsb
mov
out
shll
jmp
xor
push
test
jge
mov
int3
sub
add
ljmp
mov
jl
jg
xchg
outsb
cmp
fsub
mov
repnz
jo
adc
dec
inc
inc
push
push
jns
nop
sub
jp
ss
inc
lds
xchg
fcmovnb
mov
es
adc
sub
jecxz
ret
outsl
subl
ljmp
fldcw
mov
movsb
lods
out
daa
pop
std
lods
mov
aaa
aam
pop
dec
jmp
out
sub
and
jo
aam
adc
dec
sahf
scas
and
movsb
xor
jb
xchg
les
mov
rcrb
mov
out
dec
add
inc
outsb
add
xchg
fs
stos
daa
cwtl
pop
xchg
jb
ret
adc
dec
or
jl
mov
dec
popf
xchg
cmp
push
and
jge
dec
clc
pop
lods
push
adc
pop
sbb
repnz
int
mov
inc
pushf
rol
pop
ds
lds
push
mov
insb
out
movsb
subl
test
cli
sbb
mov
push
fmull
and
jae
ret
in
jb
dec
or
push
xchg
xor
sub
btsl
gs
adc
jmp
sbb
arpl
pop
imul
push
fmull
cmpsb
xor
jl
mov
sub
aad
lret
in
leave
xor
mov
pusha
cmc
sbb
int
xor
shll
sub
lret
shlb
aam
xor
cmp
dec
and
test
int3
or
cmpsb
subb
dec
xchg
add
adc
stos
ficompl
enter
push
pop
jle
mov
and
push
inc
inc
in
xchg
pop
sub
or
inc
xor
rep
into
jns
jno
adc
push
fsubr
cwtl
push
stos
clc
loopne
negl
jbe
clc
scas
pop
pop
push
jae
lds
xchg
xchg
push
pop
push
jge,pt
lods
dec
xchg
testl
push
adc
hlt
lcall
loopne
push
fldcw
ja
sub
inc
jl
jle
pop
jle
fisubrs
outsl
fidivrs
add
sub
rep
fdivs
sbb
aam
or
xlat
add
xor
mov
dec
mov
enter
std
or
mov
xlat
jne
popf
pop
hlt
imul
sarl
xchg
jge
testb
xor
push
sub
mov
in
lcall
push
and
mov
int
ljmp
jmp
shl
sbb
dec
pop
cltd
addl
outsb
jno
mov
sti
xchg
or
inc
xchg
cmpsb
cmp
dec
or
popf
cmp
xor
arpl
adc
jl
fwait
pop
aad
jbe
fs
inc
push
data16
jl
es
sub
aaa
lock
xor
out
jle
sub
movsl
out
sarb
mov
in
in
sub
and
addr16
lock
ja
push
pop
lds
int3
xor
dec
dec
cld
mov
xchg
mov
jno
aaa
mov
dec
push
lret
pop
mov
pop
dec
out
push
outsb
jno
mov
ffree
adc
or
pop
daa
or
xchg
arpl
out
push
inc
stc
add
dec
pop
test
test
sub
sbb
push
add
stos
lock
jl
fiaddl
sbb
cmp
mov
aad
add
movsl
js
mov
pop
cltd
mov
dec
dec
or
insl
sub
mov
xor
fbstp
stos
popf
bound
mov
jo
repnz
outsl
sub
aam
arpl
stos
mov
sbb
scas
or
fistps
adc
cmpsb
mov
pushf
mov
movl
mov
mov
jl
and
mov
arpl
or
leave
in
js
js
scas
cmp
dec
popaw
add
mov
addr16
xchg
mov
push
lahf
out
add
test
aas
lods
cmp
or
xchg
inc
xlat
hlt
and
movd
sbb
sbb
adc
mov
xor
pop
dec
add
stc
jl
push
cld
scas
andl
mov
stos
inc
push
scas
js
js
psrlq
mov
enter
add
lahf
gs
fnstsw
dec
push
inc
mov
sbb
add
adc
xchg
ja
xlat
xchg
stos
and
xor
jecxz
and
sub
add
ja
mov
jo
jmp
xchg
jae
lods
jbe
mov
aaa
outsl
cltd
ficoms
xchg
jne
mov
cwtl
cmp
rcll
mov
fildl
push
mov
mov
xor
sbb
pop
add
pop
out
push
sub
mov
aaa
arpl
mov
dec
imul
dec
fnstsw
and
negb
pushaw
xchg
or
adc
cmpsl
mov
bound
shl
push
sub
lret
dec
outsb
and
roll
dec
std
dec
dec
xor
mov
out
sbb
xorl
lods
xchg
jl
adc
adc
dec
std
into
mov
adc
int3
xor
pop
mov
xlat
popa
sahf
sbb
shll
rcr
mov
add
jmp
iret
out
in
mov
std
mov
push
pop
fcmovu
insl
pop
cmp
and
xor
addr16
fwait
stos
mov
cltd
pop
xlat
mov
or
addr16
mov
outsl
xchg
jge
mov
sbb
xchg
jl
sbb
lock
movsl
xor
jge
jbe
xchg
pop
scas
cltd
add
movsb
mov
sti
inc
and
ja
das
in
xor
inc
xchg
adc
lret
sbb
insl
lods
push
xchg
imul
xchg
cmpsl
sub
or
arpl
add
cmpsl
mov
adc
push
and
lcall
cmpsb
dec
js
stos
or
mov
test
or
ror
test
mov
adc
daa
xchg
cmp
int
dec
cmpsb
aas
xchg
add
adc
jbe
jno
inc
or
scas
dec
inc
repnz
test
loopne
push
adc
sbb
ret
pop
cmc
and
mov
outsb
and
xchg
jbe
mov
dec
outsb
push
xchg
push
clc
enter
pop
adc
in
and
pop
pop
aas
stos
add
jmp
add
inc
pop
hlt
dec
mov
das
pop
out
dec
xchg
mov
sub
pop
xchg
cmp
pushf
mov
mov
adc
shlb
xchg
push
jno
lcall
fidivrs
adc
lret
xchg
jle
mov
lock
adc
negl
mov
push
in
mov
jae,pt
in
lds
xchg
in
fistpll
out
call
lods
mov
xorb
pop
jle
mov
pop
xlat
push
sahf
sub
movsl
outsb
ja
daa
hlt
xor
mov
push
jecxz
mov
dec
adc
aad
ficoml
je
add
getsec
add
xchg
daa
jnp
test
clc
mov
dec
cmp
in
fwait
lods
push
cmp
lock
test
xchg
xchg
ficomps
rcr
test
sub
lds
push
jmp
mov
daa
fstps
dec
mov
iret
loop
mov
repnz
out
aam
loope
scas
mov
xor
lret
pcmpgtb
jge
imul
lods
das
cmp
or
sbb
cmpsl
xor
scas
ret
iret
and
push
mov
xor
push
mov
sbbb
xorl
ret
or
mov
popf
ret
jge
push
inc
pop
mulb
insb
mov
pop
cmp
lret
adc
je
pop
push
add
push
repz
cltd
leave
jge
mov
cmp
jnp
mov
jle
in
out
push
cmp
es
iret
int3
mov
cmp
pop
nop
movsb
lea
aad
jp
aaa
push
mov
adc
inc
insb
enter
out
mov
outsl
or
popf
fildl
add
mov
cli
cmpb
jp
jo
inc
dec
fsubrp
arpl
movsb
sbb
insb
pop
scas
fldt
push
lock
pushl
shrb
aad
adc
loopne
cwtl
xchg
arpl
mov
xor
ss
mov
daa
ds
sahf
out
jmp
cli
and
popa
sbb
nop
aaa
int3
jg
loop
pop
inc
mov
and
addl
xor
aam
pop
xlat
lret
jnp
fstpl
jecxz
outsl
mov
rcrb
aaa
aam
dec
pop
push
lahf
cmp
dec
pop
es
popf
pop
aad
mov
out
push
xchg
pushf
repz
repz
aam
stc
cs
pop
push
inc
xchg
adc
mov
popa
imul
xor
push
sub
in
mov
adc
movsl
jae
sub
jnp
data16
push
outsl
or
xchg
jno
add
out
hlt
sbb
lret
addl
mov
inc
or
popa
push
data16
xor
mov
and
dec
jb
adc
adc
mov
out
jno
testl
dec
sbb
xlat
xchg
mov
sub
adc
add
adc
pop
cmp
sarb
xchg
fisubl
popf
lock
mov
xchg
mul
jl
sub
xchg
stc
pushf
jnp
xor
aad
loope
dec
mov
xchg
fnsave
in
and
shrl
inc
cmp
add
cmpb
cli
in
inc
inc
mov
adc
or
mov
das
mov
adc
in
dec
stos
int
cmpsl
gs
push
dec
jecxz
iret
adcb
pop
ja
outsb
clc
or
std
iret
js
jne
sub
aam
push
cltd
rol
xchg
shlb
ret
jmp
aam
xchg
mov
inc
aam
pop
mov
fmulp
pop
mov
js
test
sbb
and
xchg
fidivs
sbb
idivb
iret
jle
add
mov
lods
push
out
mov
mov
jae
fcmovnu
jbe
xor
ljmp
adc
je
int3
or
or
jnp
inc
cmp
push
pop
scas
ljmp
test
and
pop
faddl
lock
xor
and
cmp
fs
pop
sbb
dec
pop
popa
pop
mov
enter
mov
add
mov
push
shlb
jne
int3
xor
in
cld
shl
sub
xchg
jp
mov
test
push
fbld
jne
roll
fsubrp
mov
add
mov
and
popf
jl
sahf
cmpsl
and
movaps
fbld
xchg
jp
loop
inc
jl
jnp
sbb
sub
dec
xor
cltd
adc
ss
mov
fwait
inc
pop
jne
mov
push
je
pop
jae
push
insb
and
hlt
adcb
loope
and
or
fiaddl
rclb
and
enter
loope
add
out
and
aaa
xchg
lret
lea
in
cli
xchg
sub
xor
jecxz
push
mov
xchg
rcll
scas
stos
adc
mov
aaa
dec
cmp
aaa
xor
lods
repz
add
inc
call
jne
lods
and
mov
xchg
cmp
jge
fucomip
orl
jl,pn
pop
pop
mov
and
pop
sbb
xchg
and
roll
dec
icebp
ret
mov
imul
stos
imul
stc
or
es
es
dec
pop
testb
add
loop
setne
mov
or
add
shll
xchg
aam
and
fisttpl
aam
aad
xchg
rcrl
adc
jb
inc
pop
pop
mov
and
fildll
jmp
mov
sub
inc
fildl
out
mov
dec
mov
lods
into
enter
fisubrs
mov
and
jae
dec
jl
adc
pop
and
cmp
xor
push
gs
jno
lcall
sub
es
nop
xor
inc
xor
jge
lcall
stos
cwtl
out
outsb
popa
push
pop
cmpsb
pusha
movsl
std
mov
cs
mov
mov
in
cli
fs
sub
jo
or
inc
dec
adc
add
aaa
fdivrp
xor
push
into
fsubrl
fs
add
hlt
faddl
mov
jp
jnp
dec
test
test
sbb
pop
and
pop
loop
push
lods
jo
adc
mov
sbb
into
cmp
rcrl
call
dec
dec
ja
je
and
xchg
lret
mov
push
or
jne
cmp
mov
gs
jmp
xchg
jno
iret
mov
cld
jp
dec
add
rol
stos
bnd
bound
imul
mov
aaa
fdivrp
and
xor
inc
add
int3
xchg
xor
adc
cld
push
fcomip
arpl
ja
aad
popf
popf
fcmovnu
popf
aas
mov
pop
mov
cltd
or
loopne
inc
mov
sub
je
and
mov
sbb
push
repnz
enter
mov
add
icebp
push
testl
cmp
push
sbb
sbb
push
push
sub
jns
aad
dec
mov
cli
mov
mov
rcl
xchg
cli
ret
lods
movsl
adc
ret
pushf
mov
lds
int3
cmpsb
jne
sub
xchg
lret
fistl
and
dec
cwtl
loop
fcomp
test
or
js
es
pop
pop
outsl
fcmove
out
adcb
jno
gs
lods
lcall
sub
pop
fucomp
mov
adc
lods
and
pop
test
lds
cmp
jp
ljmp
mov
jno
aaa
pushf
cmp
daa
push
imul
outsl
push
xor
push
sahf
lret
jbe
aaa
ja
push
inc
sbb
sbb
add
lods
add
iret
aas
mov
or
incl
rcl
je
js
sub
adc
pop
fwait
cmp
repz
icebp
imul
shlb
int3
fdivl
hlt
mov
in
pop
stos
das
mov
xor
cmpsb
sti
jo
mov
jecxz
mov
xchg
stos
bnd
sub
fdivrl
mov
sti
mov
xchg
sbb
test
mov
mov
ficoml
sbb
dec
sbb
and
loopne
push
pop
out
clc
test
sub
aaa
jg
pop
pusha
xchg
in
aaa
xchg
ja
xor
mov
cmp
cmp
jns
mov
shrb
sub
dec
adc
and
leave
andb
mov
mov
cmpl
fcmovbe
push
or
je
flds
dec
outsl
fdiv
dec
inc
addr16
inc
and
out
jp
aad
jp
push
add
lods
mov
mov
xchg
lods
iret
add
bound
pushl
dec
repz
shr
sbb
cmpsl
dec
mov
cmp
fistps
jae
icebp
or
mov
fildl
and
pop
inc
add
decb
pop
sbb
xchg
inc
add
loope
repz
mov
rep
bnd
xlat
sbb
xchg
mov
add
add
popa
push
or
jne
adc
add
dec
xor
jle
test
repz
out
adc
push
mov
and
inc
mov
mov
out
push
inc
mov
and
pushf
lahf
mov
fadd
gs
xchg
sbb
sbb
sbb
xlat
loopne
test
cmpsb
loopne
mov
loop
mov
xor
xor
scas
adc
cmc
nop
rcrl
pop
jp
cmp
sbb
push
mov
es
xlat
in
lret
ja
jle
clc
pop
add
pushf
and
outsl
loope
sub
xchg
in
std
jecxz
and
push
add
mov
cmc
push
loopne
add
filds
in
test
mov
mov
je
cmp
adc
es
mov
int3
adc
aam
cmp
aam
sbb
pop
mov
xlat
mov
push
orl
lret
jb
call
imul
sti
dec
testb
mov
push
jmp
mov
shl
push
pusha
and
jns
pavgw
daa
cmp
xor
push
pop
dec
xlat
mov
jge
jnp
mov
or
pop
xor
xor
sarl
pop
mov
cmc
mov
aaa
mov
negl
xchg
cmp
cmp
mov
sub
pop
sti
loop,pn
xlat
sub
add
std
inc
cmp
sbb
sub
and
jle
aas
mov
out
icebp
mov
iret
out
sbb
push
ror
add
lret
lahf
adc
inc
ret
xlat
mov
mov
add
leave
cmpsl
int3
xchg
aaa
jmp
cmp
out
arpl
bound
push
xchg
jbe
jle
cmpsb
mov
jbe
fsubl
lahf
push
popf
jg
lods
push
pop
mov
mov
rorb
inc
idiv
dec
lock
icebp
js
push
adc
sti
or
movsb
sub
dec
xorl
outsb
or
xor
inc
pop
mov
mov
pop
mov
insb
and
repnz
dec
mov
out
out
add
js
daa
gs
outsb
xchg
and
jle
stc
mov
xchg
inc
shll
pop
cld
or
pop
out
add
imul
add
and
cmc
ds
cmpsl
cmc
push
lods
repz
pop
jp
in
xlat
fnstsw
cmp
lret
xchg
pop
adc
jno
jae
push
dec
push
push
sub
cltd
add
das
std
arpl
sarb
or
sahf
xor
pusha
flds
adc
ret
xor
sbb
int
add
xchg
imul
in
out
adc
lret
cmp
and
xor
adc
pop
test
push
test
mov
jno
adcb
int3
xor
xlat
adc
lds
inc
or
icebp
inc
cs
out
imul
mov
frstor
nop
inc
xchg
jp
push
enter
fldenv
mov
rcll
adc
bound
mov
icebp
jecxz
daa
push
or
cmp
int3
aaa
shll
jo
mov
xchg
rcll
xchg
jbe
jne
sub
loop
xchg
ret
jnp
pusha
push
int3
add
adc
cmpb
add
pop
inc
adc
roll
adc
mov
dec
jbe
stc
xor
xor
push
xor
pop
cs
std
cmpl
xchg
xlat
fcoml
adc
popf
test
pusha
mov
lods
shufps
fidivrs
add
leave
sbb
cmp
dec
adcb
fsubl
xchg
ficoms
call
mulb
pop
push
xlat
jecxz
ret
add
mov
jecxz
pop
cmp
mov
inc
movsl
hlt
test
icebp
js
out
or
je
dec
push
ret
adc
fs
add
test
dec
std
mov
insl
jb
or
scas
mov
cs
mov
mov
inc
dec
jmp
or
xor
jp
jno
daa
sub
cmpsb
dec
and
mov
push
add
jp
mov
xor
divl
lcall
fcoms
ficoms
fstps
cmp
cmc
jle
pop
enter
add
sti
jae
lahf
les
mov
cmp
sub
pop
ret
idivl
das
out
push
jmp
cmp
dec
jg
push
inc
imul
jecxz
ret
jmp
fwait
enter
jmp
lahf
dec
cmp
xor
int3
es
popa
mov
int
bound
cmp
pop
fucomi
jb
sbb
add
in
xchg
sub
les
add
cmpsb
jns
add
xor
lock
dec
je
add
lret
mov
sbb
fistpll
jno
dec
push
movsb
mov
lods
sti
jne
dec
xchg
jns
xchg
enter
repnz
test
test
fistpl
xchg
mov
or
pusha
sahf
dec
lcall
sub
int3
outsl
xchg
mov
push
mov
jge
and
inc
pop
shl
xchg
add
cmp
fstpt
add
push
shll
pop
stc
push
fstpl
mov
dec
sbb
jno
xchg
int
push
or
fstpl
test
sub
dec
push
cltd
fwait
scas
jg
sub
dec
xor
add
ljmp
scas
jno
add
pushf
call
aam
in
jmp
sbb
loop
es
lret
xchg
mov
jle
mov
cmpsl
sub
jl
aad
or
add
xor
jbe
mov
das
enter
or
jae
xlat
das
jle
leave
js
add
fwait
cwtl
movsb
repnz
sbb
gs
push
xor
les
ss
daa
dec
pop
cmp
popf
dec
xor
call
js
mov
aas
and
or
and
cld
ret
out
and
mov
or
xor
pop
lods
sbb
mov
cld
jo
ret
mov
arpl
int3
into
hlt
jnp
dec
sub
clc
aad
call
xor
imulb
pop
repz
std
icebp
incb
sub
cmovne
ds
mov
mov
dec
jo
lods
mov
dec
test
jecxz
shll
jmp
mov
std
jb
sub
add
mov
aaa
icebp
push
ret
stos
sub
jae,pt
adc
mov
mov
xchg
mov
mov
jne
push
jge
js
or
sub
mov
inc
xchg
sti
lds
gs
xchg
jle
and
out
ss
xor
fistl
xorl
scas
imul
pop
adc
clc
mov
jnp
lahf
call
movsl
xor
addr16
mov
pop
sahf
mov
aaa
aaa
mov
xor
xorl
push
push
in
cmp
sbb
addr16
push
sub
pusha
mov
cwtl
loope
or
mov
add
push
ljmp
imul
adc
fnsave
insl
lahf
sbb
fdivrp
jb
mov
xchg
call
test
insb
jae
aad
rcrb
pop
add
and
and
mov
pop
pop
mov
fdivrl
jne
mov
lret
in
add
popf
and
cmp
out
or
imul
pop
sbb
inc
int3
mov
or
mov
cmp
shll
xor
dec
push
cwtl
and
push
mov
mov
ror
mov
cs
mov
inc
imul
sbb
jb
push
cli
test
mov
sti
in
push
rorb
arpl
sbb
insb
daa
rcl
jnp
popa
jns
test
addr16
mov
stc
jnp
sub
mov
repz
into
xorb
cmp
cmp
mov
cli
int
jo
adc
jmp
inc
cmc
rcll
int
dec
std
sbb
add
mov
testl
shl
int3
jne
push
sub
stc
cmp
or
xor
inc
mov
fwait
arpl
xchg
ret
or
loope
imul
pushf
xlat
jbe
sbb
xchg
xor
pushf
cmp
jb
rcll
ds
lret
mov
dec
aad
add
popa
mov
dec
jb
adc
das
jle
in
and
dec
ret
inc
sti
incl
lret
hlt
in
ror
aam
pop
push
cwtl
loopne
cmpsb
insl
outsl
dec
add
fmuls
sub
out
aaa
jp
popf
xchg
sarl
movsl
or
dec
jns
scas
fisubrs
test
mov
jecxz
cmp
sbb
adc
jne
or
cmp
cmc
jmp
sbb
add
outsb
inc
jne
fstps
adc
lahf
out
jbe
out
sub
ds
clc
and
xor
xorl
mov
mov
or
or
scas
and
pop
adc
and
mov
xor
mov
lret
sbb
pop
add
jne
scas
or
mov
bswap
xor
das
jae,pt
pop
mov
loop
xchg
mov
or
push
in
push
out
aam
jae
push
xchg
and
out
stos
or
sub
push
sub
jbe
mov
cmp
iret
cmp
rorb
dec
inc
sub
andb
sbb
mov
adc
mov
ds
push
adc
fcmovnbe
gs
lcall
and
fnstcw
testb
sub
mov
jbe
inc
adc
sti
push
icebp
into
arpl
mov
ds
sbb
sbb
stc
aaa
mov
mov
jecxz
cmpsb
push
fwait
outsb
and
add
mov
mov
pop
in
pop
fwait
loopne
cs
ret
sarb
cmp
mov
jns
lcall
adc
popa
and
pcmpgtd
fnsave
dec
mov
cmc
test
mov
outsb
xchg
xor
push
popf
dec
mov
popl
push
iret
add
pop
jg
cmpb
scas
mov
popa
or
push
sahf
push
mov
cmp
sub
pop
pushf
dec
jno
xor
test
inc
push
cwtl
push
sarl
cmp
add
jg
push
xchg
or
mov
pop
push
mov
jmp
out
movb
jl
push
push
outsb
sub
pop
ljmp
das
int3
aam
imul
pop
adc
lcall
dec
dec
jmp
cmp
sub
xlat
pop
mov
iret
inc
loop
call
push
repz
or
fistpl
js
sub
dec
xor
xchg
or
dec
cli
repnz
cmp
mul
into
fldl
mov
out
addr16
andl
and
enter
pop
jg
adc
jo
sub
push
push
mov
call
pop
xchg
insb
stc
in
inc
mov
sti
push
out
adc
in
add
jno
sbb
dec
adc
push
push
aaa
cli
cmpsl
push
inc
leave
in
add
roll
je
add
and
stos
aad
jp
imul
push
out
in
or
xchg
sarb
mov
mov
test
pop
jle
inc
out
leave
pushf
mov
shl
and
jmp
jbe
jecxz
adc
movsb
add
sub
mov
les
add
hlt
sarl
mov
dec
js
daa
push
repnz
mov
fnstcw
test
sahf
inc
lea
push
jle
xor
adc
jmp
and
out
test
cli
cld
xchg
out
cmp
mov
cmpsl
push
xchg
xor
or
jge
jg
fwait
push
out
repz
sarl
adcb
sbb
push
or
sbb
sub
or
pop
icebp
dec
data16
pop
sbb
shl
shl
stos
mov
fbstp
out
icebp
das
or
fcom
sbb
aaa
pop
cltd
das
inc
ss
out
lock
xchg
sub
inc
aaa
scas
test
imul
dec
arpl
leave
cs
test
jmp
mov
push
mov
jno
pop
sub
sub
and
jmp
mov
mov
jno
mull
mov
xchg
adc
mov
or
cmp
dec
inc
loop
ret
adc
icebp
jmp
xor
cltd
dec
inc
aaa
fldt
mov
stc
push
inc
jns
fs
adc
jmp
mov
add
inc
pop
das
imul
xor
call
enter
clc
icebp
addr16
stos
mull
xchg
and
push
inc
dec
test
jmp
ret
xchg
add
push
mov
sbb
insb
xlat
cmp
shrb
inc
jge
lods
push
lods
inc
xorl
sbb
xor
jl
and
pop
or
dec
movsb
fs
cmp
cmc
ljmp
xchg
xchg
leave
mov
adc
idivb
test
xchg
mov
clc
mov
insl
push
stos
cli
lahf
sub
dec
jae
or
mov
dec
adc
sub
mov
push
dec
rcr
divb
sub
dec
mov
in
pop
stc
and
mov
pusha
data16
and
pop
pop
push
jnp
sahf
ds
sub
xor
fnstenv
push
out
negb
mov
pop
push
xchg
add
in
add
stos
movsl
cltd
pop
jmp
gs
adc
mov
loopne
adc
stos
mov
jae
dec
popf
dec
ret
cmp
dec
sub
or
push
mov
pop
ficomps
inc
dec
pop
adc
xchg
jmp
mov
sub
push
insl
lcall
xchg
sbb
popa
mov
inc
movsb
int3
jae
mov
mov
sub
and
push
xchg
and
scas
dec
imul
scas
xor
jnp
push
sub
aam
push
pusha
mov
cmpsl
movsl
sbb
adc
sub
in
and
xchg
sbb
sbb
adc
mov
xor
cltd
negl
fadds
in
test
mov
aam
js
sbb
lahf
jo,pt
lret
test
orb
icebp
stos
xchg
ret
loopne
fdiv
nop
add
sub
in
test
mov
cmp
lods
icebp
pop
ret
jb
insb
inc
sahf
roll
add
lods
daa
mov
jb
mov
xor
or
inc
cwtl
imul
ja
jl
enter
xchg
fs
cmp
xchg
inc
sbb
das
xor
fsts
and
adc
xchg
mov
repnz
mov
xchg
aaa
dec
cmc
push
loopne
push
inc
lock
fs
pop
pop
sub
sub
add
xchg
movl
out
into
cmpsb
ficompl
pop
mov
and
lcall
cwtl
aam
cmp
and
insb
insl
mov
in
bound
data16
call
frstor
push
pop
std
xlat
ja
aam
jo
ret
push
cmc
cmp
fstps
mov
out
divb
mov
std
adc
jne
add
sub
push
jnp
pop
adc
dec
pop
xor
jmp
je
rclb
dec
fdivr
in
pop
and
ret
cwtl
or
fnstcw
imul
les
pop
popa
cmpsl
stos
inc
cli
inc
mov
test
inc
fistps
imul
clc
mov
sti
leave
lcall
or
imul
flds
mov
cmp
jle
mov
lahf
cmpl
and
xchg
sub
xchg
out
test
jne
xchg
outsl
aas
or
and
sub
push
aaa
and
lods
sub
adc
push
lods
je
out
adc
add
movl
outsl
adc
xor
lds
cmp
jle
in
stos
insl
subb
xchg
cs
push
ljmp
add
push
xor
pushf
std
lock
xchg
sub
cmp
ret
mov
mov
dec
dec
mov
mov
fwait
adc
and
push
mov
fstps
pop
inc
lret
mov
pop
cld
push
mov
jb
in
insl
sbb
test
fsub
addr16
mov
push
jp
lods
frstor
mov
bound
cwtl
xor
xor
sbb
push
inc
nop
data16
pop
je
or
jne
rcrb
cltd
pop
cmp
jns
xchg
jmp
leave
mov
or
lods
add
and
mov
mov
mov
aam
push
inc
jecxz
fadd
inc
movsb
lods
ror
pop
out
popf
loope
mov
cwtl
shl
popa
js
sbb
daa
int
out
dec
cmp
dec
mov
cmp
or
int3
and
ja
add
push
aad
and
outsl
fcoms
add
mov
cmpsw
mov
divl
cwtl
or
les
and
jno
lret
sbb
xor
pop
insl
adc
jmp
and
cmp
out
jnp
add
fwait
repz
xor
mov
cld
jno
clc
repnz
movhps
pop
pop
inc
xchg
mov
ret
xchg
repnz
mov
dec
or
lret
fs
imul
mov
xchg
dec
out
push
xor
push
cmpsb
mov
ds
xor
daa
ss
lea
mov
pop
popf
cltd
and
mov
push
js
gs
mov
cmpb
xor
pop
inc
cli
lods
sbb
sbb
or
xchg
clc
stos
mov
pop
add
into
dec
test
aad
ret
outsl
enter
js
pop
lahf
xor
es
mov
cmpsb
cmc
mov
fdivrs
sub
push
je
incl
das
mov
xchg
mov
out
pop
repz
cmpsb
mov
xor
cwtl
nop
lret
push
hlt
sbb
xor
dec
xchg
inc
pop
mov
and
stos
stos
mov
stos
xor
stc
shrl
je
int
insb
arpl
xchg
or
rcl
icebp
xor
jl
lcall
out
pop
mov
lahf
mov
insl
arpl
fs
das
pop
outsb
and
out
pop
into
cwtl
or
enter
dec
les
adcl
out
and
div
push
mov
call
aaa
dec
or
inc
mov
pop
test
lret
sub
ja
mov
cmovp
into
test
ret
mov
outsb
pop
sbb
adc
jg
sub
aas
mov
add
lcall
mov
jae
mov
and
xchg
lds
imul
dec
cmp
andb
outsb
out
push
inc
inc
mov
hlt
xchg
xchg
xor
cmp
adc
inc
and
dec
push
jl
xchg
mov
outsl
sbb
xor
mov
pop
stos
enter
inc
mov
je
xor
in
mov
push
jae
stos
fucomi
sub
out
notl
insb
gs
xor
jnp
outsl
lret
jo
ss
sti
sarb
iret
adcb
push
inc
popa
push
int3
sti
js
and
mov
mov
sub
or
adc
push
lcall
dec
outsb
push
fmull
ror
dec
mov
sub
lret
mov
or
mov
jge
xchg
mov
xchg
das
fidivs
sbbb
fisubs
add
rcr
nop
sub
pop
inc
cld
sbb
push
repz
fldl
insb
hlt
pop
into
test
dec
lret
mov
adc
pop
cmp
test
inc
cmp
in
push
xor
add
jno
sub
fisttps
in
mov
mov
lods
push
add
xor
adc
int
aam
fsubrl
sub
shrb
loope
or
cs
push
xchg
in
sbb
insb
rcll
stos
fildll
js
repnz
icebp
stc
testl
dec
ret
loopne
mov
jne
jg
test
dec
xchg
mov
or
or
or
out
pushf
sub
or
sbb
lahf
adc
leave
adc
stc
push
push
shll
cmc
and
inc
mov
pop
fimull
mov
sahf
int
xor
sbb
rclb
lret
out
lods
dec
loop
lea
arpl
mov
add
pop
adc
insb
cmp
xchg
cli
int3
inc
iret
jecxz
pop
pop
shr
decl
and
sub
testl
cmp
sbb
daa
xlat
xchg
lahf
push
iret
ljmp
add
and
mov
and
fidivl
push
or
out
sarb
pop
pop
negl
stos
xor
dec
push
lcall
push
jg
cmp
imul
ss
add
jecxz
xor
lea
sbb
aas
add
bound
mov
shrb
dec
aaa
pop
ret
adc
lcall
inc
sar
pop
sub
iret
dec
es
jle
sbb
out
loop
jae
lea
mov
mov
and
test
or
push
cmpsb
jge,pn
xchg
popa
ds
je
jbe
inc
aam
out
imull
push
cmp
cs
int3
push
cmpsb
shrl
cs
std
dec
dec
pop
rcrb
addr16
xchg
sub
mov
aas
pop
dec
ljmp
pushf
sbb
in
jnp
lods
jg
insb
jno
and
adc
mov
orl
jmp
notb
pushf
sub
or
loopw
aam
xchg
test
sti
xchg
popf
cmp
neg
jp
sub
ds
sbb
test
out
and
dec
testl
mov
pop
sti
fidivrs
mov
mov
stos
test
mov
out
sub
ljmp
mov
inc
js
xor
and
jne
mov
sbb
mov
lcall
pop
fs
movsl
jns
out
loopne
fcmovnb
popf
es
int3
dec
scas
dec
insl
sbb
cmp
lahf
push
lods
stos
popf
out
out
push
into
aad
fisubrs
inc
jp
aam
into
lahf
xchg
jge
mov
xlat
pushf
or
ret
loopne
push
and
test
adc
mov
lock
add
pop
pushf
pop
movsl
and
mov
mov
mov
out
push
push
mov
lods
adc
xor
fldl
scas
outsl
int3
aam
outsb
lcall
mov
out
pop
clc
or
test
pop
jmp
cmp
xor
pop
push
xor
sbb
cwtl
out
cmp
sbb
xchg
pop
je
dec
stos
adc
lock
push
leave
pop
or
frstor
out
xchg
movsl
ds
pop
les
test
bound
pusha
and
jo
data16
adc
inc
popa
aas
cmpsb
add
or
out
sbb
in
xchg
out
cs
or
add
mov
movsb
pop
jmp
sbb
mov
lods
mov
enter
add
add
cmpsb
movsl
fcoms
adc
movb
nopl
cmp
out
idivl
cmpsl
into
mov
xlat
loop
jo
leave
mov
shlb
popa
sub
scas
faddl
and
jmp
or
inc
aam
test
jns
dec
dec
or
sub
push
lods
repz
gs
mov
shlb
or
pop
sbb
mov
jecxz
imul
mov
xlat
das
inc
loope
out
jo
inc
push
push
ds
dec
loop
and
pop
mov
pop
repnz
mov
pushl
lods
and
lock
test
rcr
sub
or
jnp
lret
push
imul
mov
aas
push
push
mov
add
xor
push
shrl
inc
and
out
out
adc
bound
pop
fdivp
clc
pop
insb
dec
ficoms
mov
bound
test
fstl
vcvtss2si
faddl
mov
test
add
xor
sub
hlt
pop
inc
push
jb
or
je
adc
pop
add
rorb
test
lea
or
jge
xchg
mov
nop
pop
stos
push
adc
xchg
cmp
xlat
inc
cmpsl
ss
xchg
mov
call
lods
movaps
fwait
sbb
sbb
sbb
cmp
rolb
loopne
cmp
xor
popa
inc
test
cwtl
je
push
shrl
adc
dec
sub
sti
imul
dec
test
insl
or
rol
test
cli
inc
cmp
jg
lods
int
cld
fs
sub
jp
lds
push
fwait
pop
mov
hlt
pop
adc
xchg
stos
jmp
out
cmp
mov
adc
adc
cltd
inc
addl
inc
out
fsts
push
dec
jbe
aam
pop
adc
loopne
or
push
mov
int
mov
repnz
xor
pop
push
xchg
mov
dec
pop
out
inc
in
repnz
std
xchg
inc
adc
xchg
lahf
sub
adc
push
cmp
jmp
xor
imul
fwait
movsb
subl
fsubl
lds
sub
mov
syscall
or
xor
in
xchg
ljmp
sahf
inc
sbb
lret
jmp
mov
sub
and
jb
int
cld
clc
rcrl
xor
xchg
mov
add
xor
push
loopne
or
pop
jmp
push
or
clc
xchg
iret
mull
insb
pop
xchg
pusha
jecxz
leave
arpl
les
fidivrs
ds
gs
imul
cwtl
fcoml
add
divb
iret
xchg
scas
lret
stc
fisubrl
sub
jne
scas
lahf
mov
jmp
push
es
repz
mov
fsub
subb
sub
into
in
mov
sub
xchg
and
lds
push
mov
dec
push
test
sub
pop
mov
push
fistps
ds
mov
dec
sub
pop
push
push
shl
daa
dec
inc
data16
push
in
xchg
fldt
sbb
fisttps
mov
push
mov
orl
jmp
cmp
mov
adc
push
xchg
es
push
add
mov
mov
test
xor
out
inc
dec
sub
fcomps
ss
push
jecxz
movsb
mov
adc
xchg
push
xor
fmulp
xchg
inc
xchg
lock
pop
pop
mov
jl
add
or
frstor
test
adc
mov
jo
push
adc
jno
dec
pusha
push
or
stc
fldl
adc
and
daa
mov
addr16
sti
add
loope
pop
aad
pop
add
xorb
sbb
imul
arpl
and
bnd
in
lcall
outsb
lret
sbb
sbb
mov
std
pusha
sti
mov
out
je
mov
inc
sub
ljmp
out
cmc
dec
imul
call
inc
mov
inc
mov
ds
sbb
mov
sub
push
cmpsl
inc
in
inc
data16
or
mov
push
push
xchg
insb
push
sbb
jbe
dec
xchg
mov
mov
cld
xor
aaa
jle
sbb
mov
rep
outsl
es
xlat
sub
test
les
ret
addr16
in
subl
dec
loop
xchg
jb
lds
mov
mov
lods
gs
mov
sahf
dec
adc
jp
pop
dec
cwtl
adc
mov
inc
iret
xchg
push
test
push
loopne
fadds
inc
mov
fs
mov
dec
mov
xchg
sub
pop
stos
loope
fs
push
mov
scas
das
mov
jle
cmp
push
mov
push
std
pop
mov
cli
xor
mov
mov
hlt
jle
jae
imul
pop
aaa
pop
mov
jp
pop
adcl
xchg
dec
and
dec
insl
imul
push
xchg
inc
aad
movsl
fisubs
cmc
daa
aad
ljmp
inc
jl
outsb
in
mov
sbb
xchg
cmpl
cs
cs
add
jp
push
adc
add
aad
mov
adc
insl
rclb
mov
xchg
and
jb
les
lahf
cmpsb
dec
mov
mov
and
mov
jp
daa
popa
int
sub
pop
or
push
sub
xcrypt-ctr
cmp
pop
lahf
clc
dec
push
jg
or
out
xchg
mov
arpl
cmp
push
loop
mov
push
fiaddl
ret
mov
lcall
jnp,pt
nop
lahf
addr16
and
sub
shl
test
dec
dec
mov
jl
out
aaa
test
test
dec
ljmp
cmp
out
cli
pop
adc
jb
fcmovb
mov
xor
push
imul
lret
push
jno
loop
repz
mov
add
pusha
cmc
in
stos
jg
frstor
jl
xchg
pop
test
xor
test
pop
adc
sar
addb
xchg
mov
push
outsb
repz
int
or
pop
xor
and
sahf
das
pushf
in
push
movsb
xchg
push
js
push
out
sub
push
xorl
repz
cmp
jge
or
xorl
lea
jnp
mov
cs
sbb
push
xor
js
ss
cmp
scas
loopne
inc
imul
inc
outsl
lahf
lds
fwait
or
js
and
pop
mov
add
xchg
inc
scas
push
push
mov
cli
adc
jmp
setae
out
lcall
cli
test
mov
or
xor
aas
add
dec
jae
fs
int3
jbe
fs
push
inc
xor
repz
rcrb
ja
add
fiaddl
or
dec
pop
and
pusha
sbb
pop
mov
xor
aaa
popa
xor
call
outsl
loope
lods
lods
decl
imul
xlat
imul
jbe
addr16
in
jmp
mov
cs
add
rorl
jle
xor
fdivrs
xor
pop
andl
adcb
mov
or
mov
add
nop
cmpsb
cwtl
test
mov
xchg
cmpsb
int3
push
sti
mov
mov
adc
sbb
subb
and
scas
sub
mov
loopne
imul
mov
stos
lods
xchg
jecxz
push
mov
cmpsb
add
scas
push
push
push
inc
inc
push
push
sub
aaa
js
or
jb
ljmp
nop
fnsave
imul
add
cmp
je
sub
aaa
sbb
inc
sub
insl
repnz
mov
stos
lds
mov
push
es
das
mov
jp
mov
subl
jmp
imull
mov
dec
fistps
cmp
mov
pop
dec
les
jecxz
icebp
cmpsl
pop
inc
gs
hlt
cmovp
mov
adc
mov
ljmp
or
xchg
push
pop
and
push
and
roll
jmp
testl
xchg
jp
decl
cmp
xchg
movsl
pop
imul
xlat
inc
push
or
mov
xchg
cs
push
xor
cmc
pop
push
clc
adc
ss
stos
movsb
popa
or
xchg
rcrb
pop
inc
or
out
pop
out
outsb
mov
cmc
shl
and
mov
pop
popf
ficompl
pop
mov
roll
mov
out
popa
les
lea
outsl
mov
pop
cld
mov
add
or
inc
add
push
das
lds
dec
ficomps
mov
js
push
dec
jo
add
sbb
scas
je
push
jp
xor
loopne
xor
hlt
lcall
inc
test
push
cmp
addr16
cmp
mov
lods
xlat
fadd
cmp
mov
out
cmpsl
jns
sar
sbb
out
mov
cmp
jno
pop
ud2
xlat
je
xor
dec
inc
js
not
nop
call
js
mov
and
sub
mov
jmp
cmc
push
data16
jbe
cmpsl
xchg
and
sub
adcb
xchg
fs
addb
jmp
xchg
push
repz
cmp
mov
mov
pop
mov
scas
mov
mov
dec
aad
mov
sbb
pop
or
ds
xor
addr16
addl
stos
xchg
filds
popl
flds
push
jne
push
xor
sbb
in
push
icebp
in
xchg
and
or
pop
cmpsl
push
pop
xchg
add
lods
mov
pop
stos
push
stc
leave
stos
and
dec
mov
jge
jno
inc
xlat
mov
mov
aad
pushf
or
push
push
fs
bound
sbb
call
and
imul
subb
dec
stos
lods
outsl
leave
test
fcomps
cmp
mov
pop
enter
sub
adc
repz
cwtl
sub
and
mov
mov
stc
and
xor
aaa
clc
or
imul
xchg
mov
ret
cltd
sbb
stos
and
dec
clc
sub
add
xor
jo
stc
and
add
cmp
fbld
lods
lret
jns
jecxz
lods
xor
adc
hlt
pop
stc
cmp
jge
divb
imul
icebp
xchg
dec
enter
mov
jae
or
flds
or
aad
sub
ja
les
cmc
push
jbe
inc
loop
into
test
lret
cmp
lods
mov
int3
jecxz
lock
mov
cmpsb
bound
jb
mov
cmpsb
lds
repz
out
sbb
shrl
mov
nop
ret
rol
xor
push
ret
mov
adc
das
adcl
shrl
pop
fldt
fs
int3
fidivrl
in
dec
cmc
ds
pop
repz
andb
sbb
sub
sbbl
mov
fsubrp
je
out
mov
cld
jge
and
mov
inc
fs
in
sub
out
loop
or
sbb
and
data16
in
pop
push
testl
sarb
call
inc
pushf
mov
arpl
in
ficoml
testb
adc
add
lock
lds
lea
bound
cld
outsl
inc
and
xchg
js
push
jl
nop
push
push
or
popa
xchg
mov
sub
das
in
cmpsl
cmp
test
dec
add
or
cmp
aas
rcll
lds
mov
dec
sbb
adc
sbb
mov
les
sbb
scas
mov
push
inc
xchg
in
adc
adc
aad
xchg
movsb
test
cmpsb
push
cli
adc
jl
das
sub
aad
adc
pushf
js
cmc
adc
cmp
xchg
shr
push
xchg
mov
dec
jmp
push
mov
pop
je
mov
adc
cmc
cmpb
mov
mov
mov
pop
addr16
or
jmp
negb
pop
xchg
sbb
pusha
xor
and
dec
dec
and
or
pop
in
mov
xor
jl
dec
jmp
lret
xchg
jo
std
das
loop
hlt
jl
daa
mov
std
xlat
push
pop
mov
jno
mov
aad
jg
loopne
xor
inc
lods
sti
xor
clc
loop
notb
xchg
cmp
lret
push
push
push
push
xchg
sub
pop
push
mov
xor
mov
insl
into
xchg
mov
jl
push
jne
out
bound
and
outsb
in
pop
dec
or
test
mov
addr16
stc
push
lods
ja
out
push
sarl
mov
call
adc
out
aas
mov
jo
aam
rcrb
mov
pop
out
push
inc
in
mov
push
jo
push
out
pop
sub
std
mov
outsl
pop
test
push
mov
pop
push
scas
aas
clc
imul
dec
hlt
daa
cld
mov
fistl
pop
xchg
imul
and
mov
or
out
sub
push
and
xor
stos
pop
out
cmpsb
enter
inc
pop
add
cwtl
fcmove
cwtl
ds
push
xor
stc
test
fsubrs
mov
or
or
dec
mov
xchg
or
push
arpl
mov
xlat
sub
out
mov
inc
jp
pop
mov
mov
aaa
sbb
arpl
sahf
add
jne
mov
sbbl
out
mov
inc
sub
neg
push
mov
inc
scas
stos
cmp
jmp
or
out
or
inc
stc
repz
fcmovnb
sar
stos
jp
jnp
mov
pop
test
xor
insb
cmpsl
lock
call
rol
shrl
cmpsb
pop
or
js
cld
adc
mov
xor
push
dec
dec
shll
scas
add
push
fisubrs
pusha
cmpsl
in
outsl
lock
sub
call
aam
xchg
lock
mov
loope
adc
push
add
jb
adc
imul
bound
data16
sub
push
hlt
pop
das
ljmp
cmp
pop
inc
in
rorb
sti
in
movsl
pop
mov
rorb
jg
sbb
or
push
adc
jnp
push
lcall
sub
mov
sarb
push
gs
jl
je
test
cmp
outsb
pop
imul
inc
mov
incb
jbe
pop
mov
adc
inc
popa
dec
fadd
sub
jns
leave
mov
mov
xchg
sub
scas
cmp
movsb
mov
stc
das
cmp
cmp
push
or
je
out
adc
shrl
fwait
stos
frstor
movsb
push
mov
and
ret
scas
shl
sbb
push
or
xchg
jmp
mov
pushf
xchg
fisubrl
jg
sbb
add
add
pop
fs
mov
ret
arpl
inc
jmp
xor
xor
cmc
cmp
or
aaa
jl
sub
sub
xchg
xchg
xor
mov
test
add
jl
iret
push
scas
insb
pop
mov
pusha
sub
mov
jmp
jmp
icebp
stc
lret
sbb
jno
inc
inc
mov
xchg
sar
pop
outsl
mov
jb,pn
cmp
test
insb
lods
mov
rcrb
sbb
sub
fidivrs
xchg
cmp
jbe
loop
test
lds
jae
jnp
mov
mov
fwait
ljmp
xor
mov
mov
or
popa
lret
and
sub
or
dec
pop
ja
pushf
aaa
cld
inc
mov
fcompl
movsl
fld
add
mov
push
jo
icebp
sahf
pusha
subl
jmp
push
into
es
ficomps
loopne
pop
outsl
ficomps
das
setae
fidivs
out
sbb
adc
mov
and
ret
mov
mov
adc
push
xchg
cwtl
ja
lret
xchg
sbb
popa
sub
inc
fistps
sahf
adc
push
sub
and
add
inc
outsl
mov
fwait
xchg
sbb
out
scas
xchg
sbb
jecxz
sbb
lock
pop
cs
movb
xor
in
mov
sbb
mov
mov
push
sbb
lret
inc
hlt
les
fldl
incb
daa
movl
mov
and
or
mov
mov
pop
hlt
xor
add
jmp
outsb
ljmp
or
and
loop
in
fs
ds
dec
pop
repnz
add
sbb
sub
bound
pop
push
clc
negb
mov
push
mov
sbb
pop
je
inc
adc
jmp
mov
clc
jne
test
push
inc
cmp
scas
stos
jae
xchg
aad
mov
lcall
lret
inc
ljmp
ficoms
mov
xchg
fwait
test
dec
lcall
insb
and
in
out
je
xor
pop
cmp
xor
sub
lods
push
push
aam
dec
push
pop
and
dec
pop
dec
xor
sbb
xchg
nop
movsl
notb
hlt
jge
into
popa
je
mov
outsb
and
jae
das
jne
sub
sub
and
fists
roll
mov
or
adc
scas
mov
mov
orb
nop
orb
mov
adc
push
fs
cmp
test
xlat
outsb
inc
jecxz
sti
gs
dec
jg,pn
xor
mov
aaa
fiadds
push
mov
push
lods
movsl
sub
lods
jmp
les
sarl
in
test
sub
mov
test
and
xlat
jmp
clc
add
push
je
or
add
sub
push
dec
jge
push
scas
adc
push
inc
xlat
sub
push
call
push
inc
nop
shrl
dec
push
push
jo
or
ja
and
cmp
in
insb
jmp
dec
in
addr16
dec
jae
xchg
mov
adc
cli
jl
lret
cmp
cli
in
fxch
sub
lea
ret
and
subb
xchg
movb
bound
xchg
push
pop
mulb
loope
and
lock
push
dec
mov
pop
mov
xor
dec
pop
jecxz
inc
je
jns
xor
push
ficomps
cmp
inc
fstl
fwait
sub
sub
push
int
xlat
pop
xchg
and
pop
icebp
mov
jb
movsb
rclb
popa
rolb
mov
jnp
cmp
clc
adc
fstpl
cltd
xchg
out
xchg
or
xchg
sbb
cmc
push
repnz
out
imul
cmp
mov
push
mov
cmp
bound
jg
rcrb
outsl
push
adc
xchg
sbb
xchg
dec
xor
loop
popf
xchg
xchg
dec
leave
lret
push
les
scas
mov
icebp
cmpsb
das
mov
js
pop
lds
repnz
mov
or
adc
enter
xor
fldt
ret
mov
popa
sbb
jnp
stos
lret
mov
test
ja
mov
inc
mov
dec
or
popf
pop
test
mov
arpl
test
cmc
sar
jno
xor
pop
mov
cmpsl
sub
mov
cltd
test
loope
or
push
stc
lock
mov
and
mov
pop
mov
jg
xchg
xor
or
movsl
out
xchg
lods
mov
and
popf
jb
aaa
xchg
push
push
pusha
mov
cmc
shl
insl
in
and
jl
cli
xchg
sti
js
sub
test
adc
mov
xor
inc
stc
mov
dec
cmp
aad
gs
adc
icebp
repnz
xchg
xor
cld
inc
rol
sub
insb
jo
into
in
roll
xor
or
ffree
jno
cmc
sar
jb
push
cmpsl
mov
sti
cmpps
rclb
push
test
or
xlat
dec
ret
or
mov
push
jne
mov
sbbb
xchg
mov
pop
dec
push
mov
out
xchg
hlt
movsl
cmp
movsl
jnp
daa
ret
mov
jns
mov
arpl
loop
scas
sti
push
in
sarl
jl
push
movsl
mov
add
mov
mov
dec
in
sbb
adc
fiadds
icebp
cmpsb
adc
and
decb
lret
mov
and
xor
push
mov
enter
mov
fistpll
loop
mov
inc
xor
clc
jp
mov
ret
jb
dec
out
mov
rcll
push
loop
rolb
andb
icebp
pop
or
dec
push
mov
jo
adc
xchg
insl
int
jo
scas
jnp
out
and
ja
movsl
jge
xor
daa
or
or
outsl
dec
jno
xchg
hlt
xlat
inc
imul
std
mov
mov
jb
xor
xor
xlat
test
movsl
jl
mov
repnz
call
adc
mov
mov
and
in
aam
lods
je
adc
cld
nop
sub
jb
xor
lret
xor
int3
dec
or
lea
sbb
inc
inc
xchg
cwtl
push
xchg
out
int
std
aas
sub
sbbl
mov
xchg
iret
pop
sti
cmovg
testl
stc
pop
push
sub
cmp
and
cmpsl
aas
xchg
xchg
xor
lods
and
jno
scas
jns
idivb
sub
loope
mov
repnz
lods
int3
cwtl
sti
sub
pushl
pusha
fs
inc
push
std
sub
inc
or
lock
add
loopne
jl
pop
int
outsl
stos
jg
or
jge
sub
int
adc
bound
sub
lret
or
outsb
scas
lods
cld
inc
dec
insb
gs
mov
bound
xor
mov
dec
sbb
jle
shll
jns
mov
sub
test
ret
xchg
dec
push
dec
fsubrs
dec
stos
add
into
out
pop
mov
sub
xchg
xchg
fdivr
outsl
pop
cmp
aaa
mov
iret
add
jo
sbb
push
mov
pop
sahf
mov
insb
jmp
cmp
fbld
cmc
mov
jno
push
sub
add
mov
or
sub
outsb
sub
into
cld
test
ss
inc
jle
lock
test
das
jae
mov
pushf
dec
pop
loopne
outsl
sub
pop
jnp
repz
rcll
adc
fcoms
mov
adc
jge
jne
loopne
loopne
call
sbb
ds
jge
xor
insb
inc
subl
loopne
cli
out
and
push
push
shrd
xchg
int3
mov
enter
add
aam
out
adc
arpl
inc
jl
in
jno
ja
inc
xor
mov
out
imul
sbb
jo
sub
cmp
jae
push
mov
and
add
pushf
leave
xchg
push
mov
dec
inc
dec
push
js
mov
je
mov
xchg
mov
xor
aam
lds
ja
cmpsl
sub
mov
shlb
add
xchg
mov
push
les
into
mov
in
aas
ljmp
push
lock
fldl
cwtl
call
sbb
popa
lea
test
fstpl
add
add
call
imul
stc
mov
out
jmp
js
mov
je
mov
stos
dec
sub
in
jo
dec
add
add
or
push
popf
lods
inc
scas
outsl
and
lods
or
and
es
adc
cmp
mov
adc
fmuls
cs
loope
xor
xchg
arpl
popa
aam
inc
add
xchg
dec
jo
in
mov
out
sbb
fmul
mov
jno
dec
adc
icebp
loope
push
pop
or
dec
insl
repnz
adc
mov
dec
adc
inc
das
push
lds
pop
jbe
or
add
adc
ret
fiadds
lcall
js
mov
push
clc
cmp
inc
xchg
loope
fwait
fwait
in
loop
push
push
repnz
push
cwtl
dec
xchg
enter
xchg
adcl
sarl
les
cmc
insb
jmp
push
xchg
das
lahf
push
les
clc
mov
sbbb
pop
shrl
xor
call
mov
jo
fsubrs
es
push
xchg
insl
shrb
inc
dec
cltd
sub
les
xchg
mov
xchg
mov
stc
dec
xchg
jno
ja
or
adcb
ss
and
mov
loope
or
add
mov
test
lods
dec
aas
dec
or
xor
push
xchg
mov
ret
mov
and
loop
jae
fucomp
xlat
or
dec
cmp
add
xchg
les
movb
and
xchg
stos
fldt
jo
pop
xchg
sbbl
push
lret
lock
daa
int3
pop
pop
clc
lahf
cmpsb
inc
arpl
jmp
stos
sbb
push
popf
push
rorl
jp
fidivrl
popa
cmp
mov
ds
dec
pusha
orl
sbb
xchg
dec
aaa
lahf
mov
call
jecxz
dec
out
xor
adc
push
push
out
jns
cs
stos
jns
fistl
push
in
jecxz
les
jmp
decl
xchg
mov
out
push
test
test
ret
adc
add
aaa
pop
mov
insl
xor
sahf
in
inc
gs
or
mov
dec
das
fldcw
xor
xor
mov
cs
push
out
pushf
and
jnp
es
sbbb
ljmp
adc
push
adc
jl
push
push
jge
and
push
lds
stc
adc
cmovno
dec
inc
push
inc
jns
sahf
pminub
sub
addr16
cmp
push
mov
inc
cltd
out
pop
jb
lret
jmp
dec
mov
and
mov
push
das
adc
leave
decl
ds
stos
jns
aas
and
loope
cs
lds
out
leave
imul
jg
push
xchg
push
xor
sub
aam
push
and
out
rorl
aas
adc
and
test
loop
lock
jne,pn
xchg
bswap
mov
inc
inc
dec
adc
not
popf
xor
xorl
add
rcrb
cmpsb
arpl
xchg
or
mov
adc
les
test
sbb
sbb
adc
mov
loopne
add
int3
std
in
fstl
or
dec
sub
xor
es
stos
lods
ljmp
fldl
push
mov
cmp
cmp
cmp
and
imul
out
dec
pushf
ficoms
test
aam
into
xor
stos
sahf
inc
add
ja
fmul
loopne
addr16
hlt
sbb
cwtl
scas
push
mov
add
ja
mov
orl
movsb
dec
es
lretw
insb
push
push
jbe
inc
pop
sahf
out
xchg
dec
inc
and
sti
pop
adc
enter
dec
or
lcall
out
scas
push
jge
mov
jp
ficomps
aas
dec
inc
jbe
xchg
loopne
mov
jne
rcrl
outsb
repz
inc
inc
push
sbb
push
loop
out
inc
pusha
xor
cmc
jecxz
mov
inc
adc
repz
jo
mov
sub
pop
and
sub
pop
nop
pusha
push
sbbb
shrl
pop
cmp
adc
sarb
adc
fldenv
stos
mov
inc
movsb
out
fidivl
and
das
dec
gs
push
sbb
roll
scas
les
mov
mov
mov
pop
jp
dec
out
sbb
lock
fsubr
sahf
push
adc
stos
push
inc
fisttps
lods
push
dec
lcall
stc
mov
jp
lds
mov
adc
push
dec
ret
int
cmpsb
sbb
je
sub
sbb
pusha
pop
add
movsl
xor
mov
in
or
fmuls
push
rorb
aam
jo
clc
xor
loope
push
inc
xlat
inc
test
push
push
icebp
dec
mov
mov
sti
add
clc
cli
cmp
add
fs
bound
mov
jns
out
cmp
insl
aam
xor
test
or
xchg
gs
jno
fstpt
push
cmpsl
xchg
loope
jg
loop
mov
popa
test
cmpsb
dec
ds
pavgb
stc
repz
stc
cmp
rcr
ljmp
insl
dec
adc
xchg
sub
in
or
clc
mov
add
mov
pushf
leave
add
fstpl
push
sub
stos
in
pusha
pop
xlat
loop
xchg
lea
push
fyl2xp1
cmp
or
mov
dec
sub
test
rolb
es
mov
lods
mov
lea
mov
imul
inc
notl
ljmp
scas
or
mov
insl
popf
jnp
inc
pop
int3
pop
push
sub
push
adc
push
sbb
xchg
ja
fcmovbe
clc
adc
push
lock
inc
cli
mov
mov
fistpll
cmp
mov
in
test
xorb
scas
push
mov
xor
pop
and
xchg
loop
test
loop
pop
popf
push
addr16
pop
rcrl
insb
dec
lds
xor
push
pop
test
stos
pop
bound
lcall
mov
push
cmpsl
out
and
xchg
mov
add
mov
xor
sbb
xor
daa
or
fnstcw
fldt
push
dec
lds
xchg
mov
ror
stos
xchg
or
push
bound
and
xlat
cld
add
mov
daa
repz
mov
addr16
xor
imul
and
mov
inc
insl
jg
mov
stos
jne
fld
jbe
pushf
dec
mov
inc
clc
lahf
xchg
mov
in
loope
test
push
cmpsb
test
or
gs
adc
jb
test
mov
je
dec
je
outsb
sub
addr16
xchg
push
or
mov
lahf
out
test
xchg
or
cmp
sti
push
cs
sub
cmp
fucomi
fisubrl
aad
lret
int3
scas
add
pushf
xorl
popf
jnp
loopne
into
hlt
push
cmp
ljmp
flds
xor
std
jb
fstpl
ljmp
or
scas
mov
inc
bound
imul
xchg
ret
rolb
leave
jnp
aaa
into
dec
push
ret
repz
bswap
shlb
inc
gs
jbe
or
mov
int3
mov
insb
incl
fs
inc
ret
fisttpll
fnsave
fdivs
cmp
xchg
inc
xor
add
test
lcall
xchg
jnp
push
adc
test
pop
mov
push
push
bound
pop
in
push
lahf
pop
test
out
in
mov
cltd
push
aaa
pop
hlt
jmp
loope
sar
jge
cmp
sub
add
cmp
in
mov
dec
jno
lock
or
sbb
mov
push
cmc
cmp
repz
dec
fs
fiadds
jecxz
mov
push
arpl
push
cmc
daa
adc
ret
loope
xchg
ljmp
push
test
cltd
dec
xchg
cltd
mov
ret
pop
dec
xchg
out
mov
movsb
mov
sbb
mov
data16
jecxz
loope
std
loope
mov
sarb
mov
sub
mov
jno
js
int
sbb
cmc
cmp
ss
and
xor
inc
push
pop
lods
iret
push
hlt
pop
inc
out
outsl
adc
lods
icebp
iret
adc
mov
popa
mov
cli
add
or
call
xchg
cmp
rsqrtps
nop
iret
shr
push
cwtl
movsl
jp
imul
mov
pop
outsl
cmp
cwtl
add
sbb
push
data16
dec
mov
inc
adc
out
lret
fcmovb
pop
int3
scas
stos
and
lods
inc
imul
fwait
imul
push
add
or
flds
fidivl
stos
popa
add
or
cmpsl
xchg
pop
lock
sbb
sbb
mov
mov
mov
shr
jp
add
mov
add
hlt
pop
je
in
int3
popf
js
dec
out
cltd
jl
test
filds
rorb
pop
xor
scas
jb
lcall
mov
mov
mov
jbe
iret
ret
dec
fs
xchg
es
lods
mov
nop
cwtl
mov
inc
lret
mov
gs
sbb
repz
push
mov
rcrl
adc
inc
xchg
xchg
or
pusha
hlt
mulps
mov
jb,pn
dec
lret
mov
repnz
js
xchg
fisttps
xchg
push
add
lds
cmp
inc
sbbb
dec
sub
cmp
loop
cmc
jge
push
adc
test
divb
fstl
pop
ljmp
inc
cltd
push
mov
rolb
fnstsw
and
lods
ficomps
scas
int3
xlat
inc
xchg
jg
aas
mov
xor
mov
cld
call
stos
aas
call
bswap
xchg
add
jg
les
inc
movsb
mov
sti
add
or
cmp
pop
cld
sti
scas
imul
xor
ffree
int
stos
or
stos
rcrl
neg
pop
sahf
sub
decl
inc
jl
fcomps
ror
push
cmp
sbb
or
lret
sbb
cmp
and
dec
jp
xorb
adc
pop
pop
pop
sbb
push
push
cwtl
sbb
cmp
sub
mov
cmp
mov
sub
jle
jecxz
adc
jo
das
je
lea
popf
cmp
and
test
pop
cmp
out
js
lcall
cmpsb
sahf
icebp
push
dec
rorb
mov
repz
dec
jecxz
mov
outsl
jae
mov
stos
adc
jge
daa
pushf
test
cmp
xor
add
mov
cmp
dec
adc
jp
xchg
cmpsb
cld
shlb
mov
xchg
jg
orl
jle
sub
aam
adc
movsb
and
push
iret
das
jmp
ljmp
dec
push
or
pop
jno
dec
jnp
xchg
sub
ret
outsl
and
pop
test
push
inc
jp
dec
in
call
dec
aaa
pop
push
mov
dec
and
in
clc
mov
dec
daa
imul
repz
scas
push
fs
cld
push
pop
xchg
xchg
add
add
and
lods
lods
jo
repz
loop
jl
inc
fsubl
nop
mov
adc
js
int3
xchg
aad
jo
popa
push
mov
ljmp
and
mov
cmpsl
cmpsb
jg
and
in
cli
add
mov
jbe
scas
pop
cmp
or
decb
and
cmpsb
fdivs
pop
or
daa
andb
sbb
inc
push
or
xchg
rcl
fsubrl
sub
jns
xor
hlt
clc
cmpsb
jmp
pushf
loopne
xchg
stos
mov
sbb
sub
out
cmp
test
cmpsl
adc
inc
xor
pusha
mov
test
outsb
inc
ror
mov
mov
subb
out
arpl
repnz
icebp
sahf
mov
popl
push
lods
cs
inc
jne
loope
xchg
mov
jge
arpl
and
mov
mov
add
mov
loopne
cmp
xchg
pop
inc
cld
pop
xchg
push
adc
mov
jae
sbb
mov
jge
fucomp
adcb
xchg
xchg
sbb
stc
insl
jb
push
test
cmp
ja
push
jns
lahf
fidivrl
cmp
push
add
daa
cltd
lahf
add
xchg
popa
xor
xor
inc
or
lret
rcr
in
and
xor
dec
cmp
fwait
jg
jle
mov
andl
lahf
push
rclb
cmc
idiv
cmp
iret
std
mov
or
imulb
ret
mov
push
cmp
bound
int
cld
push
insl
clc
inc
inc
shr
xchg
dec
loopne
mov
aad
mov
mov
sub
pop
or
adc
and
and
push
jl
orl
cmc
mov
xlat
mov
cmpsl
push
sub
xor
sub
adc
jle
xor
arpl
loopne
jmp
xchg
sar
jns
call
hlt
int
fstps
xchg
out
vcomiss
pop
adc
sbb
add
mov
rorb
mov
add
xor
and
xor
or
fwait
pop
inc
nopl
mov
push
sub
fisttpl
jge
lock
xchg
adc
enter
mov
mov
cmp
adc
jp
cmp
xchg
cmc
inc
adc
cmp
lds
fidivl
ficomps
aad
ja
lcall
add
lea
add
pop
shlb
and
call
int3
adc
adc
pop
aad
xchg
dec
sub
stc
sub
sbb
lea
pop
mov
xchg
lret
out
rclb
pushf
mov
or
cmpsl
mov
pop
dec
pop
sti
hlt
push
inc
jno
or
ret
push
cltd
mov
fucomp
ss
pop
xchg
in
xchg
inc
popa
ficomps
out
jb
rcl
cld
cwtl
inc
push
out
add
addl
int3
clc
sub
in
hlt
jbe
aam
leave
movsl
jmp
loope
cmpsb
aaa
inc
mov
repnz
stc
test
into
dec
mov
pop
inc
xchg
insb
int3
int
mov
popa
xchg
pop
xchg
jno
pop
clc
inc
pusha
sub
mov
pop
out
jno
rcrb
repnz
xchg
cmovne
fwait
movsl
subb
pop
out
out
cs
pop
movsl
pop
mov
cmp
repnz
mov
shl
aaa
cmp
mov
cmpsb
stos
sti
pushf
jmp
adcb
inc
cmp
pushf
pop
mov
lods
pop
push
sub
push
pop
or
mov
jl
and
cmp
loop
in
and
testl
stc
dec
xchg
sub
cmp
xor
stos
inc
or
in
mov
daa
stos
mov
iret
push
cmp
into
push
fwait
in
xchg
jmp
pop
inc
clc
push
mov
stc
inc
sahf
movsl
aam
or
and
pop
lcall
xchg
leave
or
add
ljmp
lock
push
xchg
sar
xor
adc
sub
adc
lock
or
and
test
sbb
lcall
mov
mov
xchg
jmp
xchg
xor
dec
popa
aam
arpl
in
fsubs
shl
sbb
cmpsb
leave
loop
lods
out
insl
pop
sbb
mov
jmp
scas
jecxz
daa
fsubrs
and
ljmp
mov
push
je
pusha
mov
cmp
and
clc
mov
and
mov
sbb
and
das
leave
imul
or
popf
mov
push
cmp
adc
mov
or
call
pusha
clc
mov
lds
bound
push
add
aaa
stos
push
int3
popa
hlt
leave
adcl
fisttpll
mov
fwait
push
movsl
lds
xchg
mov
sbb
inc
sub
test
xor
xchg
cltd
mov
mov
dec
mov
and
test
dec
ds
xchg
cmpsb
pop
das
sbb
dec
jmp
cmp
mov
fcoms
mov
push
fucomp
mov
das
mov
inc
fidivs
or
pop
or
lods
ds
mov
clc
stos
mov
mov
pusha
in
test
mov
mov
jle
dec
loop
repnz
cwtl
scas
jbe
mov
adcb
lcall
in
mov
and
roll
insb
fisubl
lock
out
adc
addb
mov
mov
xchg
fisubs
sub
push
push
cltd
out
repz
stos
dec
push
xchg
in
mov
jle
push
ds
xchg
sbb
dec
enter
sbb
inc
xor
mov
pop
es
jae
xchg
push
add
mov
mov
test
adc
ja
into
sub
testb
adc
jne
lret
or
xor
ret
lret
sahf
cmc
repnz
repnz
enter
int3
xor
cmpsl
add
test
adc
xchg
fwait
pop
push
mov
inc
push
fwait
pop
dec
sti
and
sbb
rcll
out
sbb
push
mov
dec
call
cmp
pop
xchg
mov
jnp
sti
aad
add
loope
inc
enter
and
jle
out
jo
jg
mov
repz
cli
imul
out
imul
cmp
inc
call
pop
push
pop
mov
xchg
pusha
add
mov
aam
pop
aas
or
xchg
xchg
sti
and
stos
jle
sbb
mov
aaa
mov
sbb
mov
push
pop
aaa
or
jge
pop
mov
cmpsb
or
das
lret
stos
movq
push
mov
mov
push
jne
cmpsb
pusha
mov
hlt
cwtl
lret
in
fsub
shll
inc
aaa
pop
push
push
dec
mov
and
xor
clc
gs
xchg
lods
repnz
gs
xlat
cmp
gs
mov
std
xor
aaa
pushf
aaa
les
out
rolb
push
idivb
push
lock
cmp
push
pushf
push
mov
aas
loopne
cwtl
push
fistpl
jle
cmp
and
ss
xor
xchg
ljmp
scas
dec
lret
aas
pop
fcompl
jp
mov
sub
jg
push
inc
inc
xchg
push
ficoms
fnstcw
fwait
add
pop
loopne
jno
outsb
shrl
notb
add
sbbb
and
mov
fst
repz
push
lahf
adc
jb
popf
add
cmp
test
insl
inc
mov
adc
adc
std
cwtl
ror
xchg
nop
push
xchg
pop
iret
push
inc
fs
and
fidivs
mov
lcall
dec
lcall
es
and
sbb
jl
cmpsb
fiaddl
aam
or
jle
sbb
cs
test
aas
in
stos
ret
cmp
mov
add
fldl
lock
mov
push
test
repz
fsubs
jne
stc
dec
lcall
cmpsb
das
lods
out
sahf
xor
rorb
pop
mov
pop
add
add
push
sbb
imul
sarl
mov
mov
jp
outsl
cmp
ftst
add
test
push
adc
scas
jno
jb
orb
iret
dec
or
and
loope
loopne
jge
xchg
fadds
out
mov
mov
and
or
dec
stos
mov
push
cli
or
jae
popa
lret
push
in
shll
in
cwtl
into
jge
andl
sub
dec
and
cmp
dec
mov
out
test
into
aas
adc
add
popf
stc
cmpsb
xor
mov
lods
out
inc
add
push
fstl
enter
cs
cmp
mov
cmp
arpl
mov
mov
outsb
jae
pop
mov
out
or
push
dec
mov
push
rorb
cmp
addr16
stos
shlb
xchg
dec
jo
fnstsw
push
mov
in
mov
jae
sub
jl
sub
lds
mov
lods
lods
add
out
pop
and
sbb
cwtl
bnd
jge
or
clc
dec
or
mov
mov
ret
nop
dec
mov
pushf
ret
fwait
dec
xchg
sahf
mov
push
popf
push
insl
lahf
cmp
add
push
lret
and
cli
je
push
pop
fwait
rclb
mov
jno
mov
test
adc
ja
cltd
or
jge
outsb
pop
negb
push
jns
xor
cmpsl
shll
or
jg
xchg
les
push
push
fistpll
aam
sub
inc
sub
sbb
pop
daa
ret
or
pop
pop
daa
xchg
jle
in
cmp
int
ret
pop
xchg
dec
movl
jb
bound
les
clc
xchg
push
arpl
and
sub
push
andl
fistpll
pop
and
out
in
bound
push
lret
cs
scas
or
dec
adc
mov
aad
incl
sub
xor
scas
jbe
or
call
mov
and
call
mov
jno
pushf
mov
or
or
sbb
nop
pop
loope
orb
add
inc
popf
test
aaa
ss
testl
pop
xorb
mov
into
cmp
xor
lds
sbb
lahf
pop
push
test
xchg
test
xchg
sub
popf
jp
call
push
insl
adc
in
dec
mov
adc
fisttps
dec
or
mov
or
imul
test
out
push
fidivs
push
dec
imul
inc
adc
bound
push
dec
dec
fwait
push
je
mov
xlat
in
ret
cmc
jns
pop
jb
jmp
or
cmp
or
mov
mov
push
xchg
inc
lret
lods
adc
xchg
or
mov
popa
scas
ja
sbb
std
push
mov
nop
sub
and
imul
inc
sbb
sub
in
add
loopne
bound
popf
lds
idiv
push
jp
sahf
rorb
cli
fisubl
pop
loop
int
fsubl
cs
fcmovnu
ss
repnz
or
loope
fsubp
sub
mov
out
das
adc
movsl
xchg
fs
popf
mov
das
push
loopne
mov
cmp
push
subl
pop
xchg
sub
mov
sbb
ja
and
jne
popa
adcb
out
pop
cmp
es
xor
test
push
loop
enter
cmp
in
lcall
addl
repz
fwait
iret
shlb
cmpb
jae
dec
jmp
inc
sbb
adc
mov
or
fistl
addr16
lret
lods
jnp
add
movsb
out
jns
or
lahf
iret
stc
inc
ja
mov
fwait
or
push
scas
scas
inc
jle
jp
mov
jp
int
push
jb
cmpsb
outsb
lahf
jmp
xchg
cmp
test
mov
or
add
jle
push
pop
mov
sub
and
xor
xchg
pop
sahf
std
adc
imul
pop
iret
jnp
mov
jp
ljmp
jnp
out
jbe
xchg
fsubr
xchg
repnz
ja
stos
ret
movsb
pop
cmp
add
sub
popf
fcoml
test
vmulpd
push
jno
or
xor
ret
and
fwait
int3
daa
push
fisttpl
lahf
mov
in
pop
stos
push
andb
lods
pop
push
mov
jg
adc
mov
fidivrs
push
std
cmp
add
imul
shlb
shr
mov
jnp
dec
mov
call
lods
dec
jb
sbb
add
mov
and
iret
pop
out
sbb
popl
xchg
sbb
stos
movsl
pop
xor
dec
pop
inc
shr
sub
insl
sub
xor
push
repnz
jg
test
and
or
mov
jbe
dec
pop
test
cli
lea
mov
fisubl
mov
xor
pop
jle
in
aas
in
sti
into
js
in
insb
xchg
cwtl
jl
mov
mov
cwtl
inc
std
iret
je
addr16
fdivs
push
and
adc
push
les
rcrb
push
movsb
cltd
dec
in
xchg
push
imulb
jl
das
scas
pop
jne
pop
pop
lods
sbb
mov
and
das
or
sbb
cmp
pop
push
and
mov
lret
mov
es
pop
mov
packsswb
push
repz
or
fs
sbb
and
mov
pop
or
aas
or
mov
test
dec
dec
lret
or
sbb
mov
test
mov
push
lret
pop
push
push
scas
leave
mov
or
pushf
pop
rcll
jne
out
cs
add
out
push
ja
dec
mov
ret
not
lods
repnz
mov
cld
or
and
mov
sub
mov
jle
je
sub
popa
aaa
stos
movsl
jno
xor
fbstp
sub
pop
or
mov
adc
sub
incl
jg
or
sahf
cwtd
jle
ret
sarl
lods
ret
adc
addb
inc
inc
scas
inc
xor
jne
sbb
cltd
mov
pusha
push
pop
cmp
cmp
adc
pusha
nop
push
fdivrl
pop
mov
jne
outsl
push
pop
push
ds
out
andb
je
hlt
es
jbe
imul
ljmp
lahf
cmpsl
mov
insl
mov
fwait
inc
mov
cmp
sub
subl
bound
push
and
mov
popf
inc
xor
gs
mov
bound
jbe
push
jg
clc
dec
pop
out
icebp
daa
cmp
outsl
jle
ret
addl
pop
sbb
mov
inc
jb
sub
cmpsl
xorb
cmpsl
out
mov
mov
movsl
ljmp
idivb
aaa
aam
jbe
arpl
jg
ss
lods
or
rclb
adc
dec
lea
cmpsl
and
aad
sbb
shrb
push
popa
fs
rclb
xchg
rolb
or
das
rolb
xchg
addl
jp
push
jle
mov
adc
in
xchg
pushf
xor
sub
lahf
jmp
jmp
and
ret
fsubl
negb
fiaddl
mov
js
fdivrl
add
iret
stos
jmp
in
sbbb
arpl
repz
loope
push
mov
cmp
notb
and
mov
or
rcrl
pop
mov
jecxz
xor
shll
test
stc
pop
xorl
xchg
xor
bound
mov
mov
movsl
dec
fs
jb
dec
fs
and
and
pusha
mov
gs
pop
test
adc
fisttps
pop
mov
mov
fwait
cli
xor
push
mov
pop
inc
jmp
mov
mov
lahf
or
sbb
mov
shr
or
ficompl
jae
xor
cmp
inc
xchg
popf
xchg
sahf
int3
dec
jge
enter
and
pop
mov
int
ficoms
sbb
xchg
cmpsl
clc
or
adc
mov
ljmp
xchg
dec
aam
sub
scas
mov
pop
imul
mov
mov
xchg
aam
sub
jne
sbb
or
popf
jo
adc
rol
xchg
mov
pop
mov
pushl
add
stos
add
xchg
lods
insl
mov
jo
xchg
push
iret
hlt
fdivrs
enter
loop
imul
jne
mov
in
loopne
test
cltd
call
aam
sahf
sti
in
jnp
xchg
xor
imul
icebp
or
stos
sbb
hlt
pop
xorb
mov
mov
js
sti
add
pop
push
sbb
push
sub
std
adc
adc
lods
add
lods
rcr
adc
sar
mov
adc
sbb
sbb
mov
movsl
hlt
int3
inc
mov
dec
pop
xor
jg
ret
or
adc
adc
cwtl
shrb
mov
test
loopne
lret
cltd
sub
loope
into
test
or
imul
push
push
popa
pop
fisttps
clc
loopne
add
lret
mov
sub
mov
sub
jmp
imul
jo
aas
enter
jae
loop
or
in
sub
xchg
xchg
addr16
divb
popa
push
subb
nop
cmp
mov
out
jae
insb
jno
or
fildll
push
mov
or
xor
xchg
loop
pop
dec
cmp
pusha
loopne
jmp
in
inc
sti
sbb
sbb
sbb
mov
or
icebp
pop
sbb
xor
ja
lret
xchg
xor
adc
or
inc
dec
sbbb
cmp
inc
stos
xchg
add
xchg
aas
aas
pop
dec
dec
aas
xor
out
test
xchg
cmp
cmp
gs
gs
pop
aad
mov
ficomps
jp
mov
loopne
push
sub
mov
ficomps
mov
js
out
test
xchg
loop
mov
xchg
cmp
mov
lock
int
addb
push
in
repz
sti
inc
ljmp
sbb
int
or
cwtl
adc
xchg
sbb
inc
and
or
mov
add
aad
mov
sbb
xchg
hlt
jae
mov
out
loopne
xchg
fisubrl
push
movsl
cmpsl
lahf
mov
loopne
lea
add
aam
mov
mov
push
sti
pop
mov
xlat
outsb
repnz
fsubrs
lret
cmp
in
push
clc
mov
mov
or
pop
mov
add
out
mov
sub
sub
cmp
gs
jl
in
ret
mov
pop
orl
out
outsb
xor
test
enter
sub
mov
pop
hlt
xor
loope
xchg
std
push
inc
or
leave
nop
rorb
push
sub
addb
and
mov
out
movsb
mov
dec
add
mov
xchg
add
arpl
or
mov
dec
enter
jo
ud2
adc
pop
pushf
nop
inc
pop
jno
cmp
cwtl
ret
pop
imul
jno
rcrl
or
out
test
push
daa
xchg
out
and
xor
xor
jae
sbb
scas
jmp
imul
scas
jne
subb
xchg
mov
cmpsb
decb
adc
or
lods
iret
mov
jg
mov
jmp
xchg
iret
je
lret
jne
or
and
xchg
je
jno
mov
scas
sbb
push
adc
add
mov
mov
mov
ja
sbb
pusha
and
inc
dec
cmp
cmp
dec
mov
xchg
push
gs
jge
shl
fistps
inc
cmp
enter
mov
xchg
lret
mov
sub
inc
or
int3
jns
inc
pop
adc
or
pop
fisttpl
popf
dec
cltd
xchg
popa
js
add
ss
cmp
leave
pushf
divl
inc
test
sbbb
and
or
jmp
adc
xor
add
xchg
xchg
gs
push
inc
bound
je
mov
sbb
divl
push
lds
adc
adc
popa
popa
sub
adc
dec
mov
movb
pop
arpl
fmul
out
movsb
sahf
add
add
into
cmp
lahf
push
inc
aad
xor
xchg
add
addr16
inc
test
mov
cmp
fwait
movsb
lcall
jecxz
and
fsubl
pop
ret
sub
ljmp
cmpsl
je
imulb
or
lea
xlat
iret
insb
and
inc
mov
adc
mov
mov
mov
sbb
int3
lret
adc
jnp
test
insb
ffreep
leave
stos
add
xchg
mull
and
movsb
push
xchg
idiv
push
ja
sbb
push
xchg
call
push
inc
or
cmpsl
hlt
mov
sti
sahf
cmp
nop
lahf
push
popf
dec
push
mov
imul
jle
sub
mov
shl
popa
test
push
dec
outsl
sub
add
sbb
cmpsl
mov
cmp
sbb
dec
shrb
aad
add
and
cmp
lock
sbb
fcoms
outsb
out
in
and
popa
ljmp
pop
loopne
out
int
dec
or
add
add
subb
aas
fs
imul
mov
cmpl
add
pusha
mov
xchg
mov
outsl
pop
add
in
or
and
jmp
xor
cs
jno
mov
decb
lods
add
pop
idivl
stc
ss
sub
les
push
aad
xchg
lds
and
stos
mov
or
call
xor
out
outsb
ret
add
xchg
stos
imul
pop
push
cli
incl
in
jne
push
pop
pop
xchg
scas
mov
sbb
jns
std
jb
inc
outsb
arpl
es
push
dec
cmc
dec
pop
imul
js
xchg
movntq
add
xchg
cwtl
jnp
add
sub
adc
aaa
roll
addr16
adc
push
imul
pop
or
xor
inc
cmpsl
mov
add
jecxz
orl
lods
add
shrb
mov
pushl
xlat
cmp
jns
push
pop
mov
dec
jg
xor
inc
cld
ret
fcompl
pusha
add
rorl
cmp
into
mov
mov
cmp
out
leave
pop
pop
mov
mov
cmp
dec
sub
aad
int
out
add
sub
aam
sti
jp
leave
xor
mov
ret
enterw
add
mov
mov
or
jmp
test
bound
inc
push
lea
cmpsb
push
jmp
dec
push
mov
mov
mov
xor
fs
add
insb
stos
pop
fstpt
in
lods
fcompl
cmp
jne
out
popf
loope
fistl
sub
mov
int3
mov
dec
and
in
pop
xor
mov
rcrb
xor
scas
cmpsb
test
clc
and
fsts
mov
sub
lods
cltd
pop
or
fcompl
dec
mov
ret
mov
sub
dec
sbb
rcrl
adc
sbb
cmp
mov
mov
cmp
mov
insb
lods
xchg
sbb
rorl
sbb
stc
mov
cmp
jmp
paddsw
jmp
pop
ffree
mov
lds
insl
mov
in
punpcklbw
jae
cmpsl
mov
pop
inc
loope
sub
pop
insl
xchg
lret
inc
data16
testl
shll
test
sbb
add
shlb
cmc
jle
lds
rcrb
test
popf
fs
ljmp
sbb
pop
dec
jmp
cmp
pop
insl
mov
loope
les
stc
or
ret
add
insl
pop
sub
inc
les
push
loop
jae
xchg
das
in
xorb
incb
push
add
cmp
cmpsl
jecxz
test
outsb
orb
inc
pop
jmp
fbstp
mov
push
movsb
insb
add
sub
push
and
in
cmc
sub
iret
lahf
jmp
nop
je
cmp
pushf
dec
stos
jl
push
ds
dec
pushw
daa
lock
mov
out
mov
scas
or
push
lods
loope
jmp
cmp
cmp
insl
xchg
dec
es
negb
sbb
fdivs
sbb
cmpsl
mov
lret
pop
fists
xor
dec
clc
leave
xorb
and
movsl
cwtl
ja
lea
jle
ss
mov
call
cmp
pushf
xchg
jl
jmp
addr16
nop
outsb
shl
jl
and
cltd
pop
xlat
inc
inc
shlb
adc
mov
push
ret
push
sub
lods
std
divl
cld
mov
addr16
jmp
mov
push
in
dec
push
nop
sub
out
rcrb
xchg
xchg
in
std
mov
ds
outsl
ljmp
mov
mov
adcl
cmp
imul
dec
mov
pop
xchg
xlat
rol
adc
pop
pop
mov
or
add
jne
dec
fsincos
out
ret
cld
jl
mov
pop
hlt
xor
lahf
test
jno
xor
and
decl
mov
dec
dec
stc
inc
cltd
popf
pushf
into
mov
addb
test
xor
ds
into
jmp
or
mov
jb
sbbb
sbb
sub
ffree
and
out
adc
cmpsb
iret
and
xorl
aas
popa
int3
rclb
notb
arpl
aad
lret
xchg
lea
sahf
or
fisttps
add
ret
jl
sub
xlat
das
mov
cmp
mov
xchg
lock
orl
push
jnp
pop
stos
cmp
mov
or
dec
je
fsub
xchg
lea
sub
jae
clc
cld
lods
das
cli
and
mov
xor
nop
stos
inc
inc
cmc
add
xchg
js
sbb
dec
and
xchg
jns
sbbl
mov
push
lods
sbb
mov
cmpsl
jl
gs
xor
icebp
adcl
push
dec
or
or
gs
sub
js
loopne
sub
es
lcall
clc
es
shlb
call
das
adc
add
fbld
movsl
ljmp
jle
pop
cmpsb
pop
xor
jmp
popf
mov
mov
mov
in
jp
cmp
inc
adc
icebp
xchg
fs
popa
mov
lock
add
xchg
cmpsl
or
cmpsl
lahf
in
dec
lcall
xorl
push
adc
out
cmp
adc
cs
inc
xor
dec
test
sbb
or
scas
insl
xchg
jo
xlat
mov
mov
lock
mov
jae
bound
push
cli
pushf
in
jmp
int3
in
adc
lcall
ret
cmp
mov
paddw
jne
fildll
cmp
add
xorl
cmpsb
lds
mov
and
dec
stos
pushf
inc
and
pop
fldl
cmp
sahf
mov
adc
jecxz
gs
lds
pusha
cmpsl
pop
lds
repz
gs
aas
mov
insb
push
sbb
jo
test
out
fimuls
add
bound
xlat
pop
sub
inc
mov
xchg
fisubrs
or
ret
enter
lret
movb
mov
push
lods
lds
mov
sti
xorb
push
jecxz
fldenv
pop
faddp
rcrl
stc
xchg
xor
adc
jl
and
scas
mul
daa
test
mov
in
pop
xlat
sub
sbb
sub
jo
jno
dec
daa
imul
pushf
rol
scas
jl
rorl
jae
sub
fstps
jno
jmp
mov
js
iret
out
fwait
fwait
scas
int3
push
cmp
out
repnz
xor
lahf
imul
adc
sub
dec
or
test
stos
push
pop
mov
shlb
mov
mov
mov
aas
or
push
and
push
inc
scas
addr16
daa
leave
xor
pop
cmpb
or
add
dec
adc
inc
jns
int3
imul
and
ljmp
push
inc
pop
xchg
sub
xorb
addl
add
sbb
pop
mov
inc
and
pop
cs
fdivl
mov
push
cmp
adc
dec
mov
mov
outsb
add
in
mov
mov
leave
sti
lds
lret
xlat
xor
xor
cmp
movsb
dec
xchg
adc
inc
xchg
mov
pop
sbb
ja
inc
fs
arpl
push
jbe
push
repnz
push
sub
fistpl
jmp
lock
or
lret
enter
xchg
in
in
and
psadbw
decl
sbb
xor
mov
mov
cs
jg
pop
pop
cmp
inc
xchg
sbb
push
rclb
es
xchg
movb
pop
addr16
and
fnstenv
sbb
xchg
mov
sub
pop
and
out
xchg
jl
pushl
clc
nop
ret
pop
and
push
and
mov
or
test
and
xor
outsb
xor
or
sbb
xchg
test
adc
shlb
sub
lret
sbb
inc
sbbl
push
sbb
mov
sub
and
ljmp
jbe
xor
pop
mov
jno
inc
mov
add
aas
int3
call
adc
cltd
addr16
js
ja
xchg
mov
test
jg
pop
add
or
pop
mov
aam
ljmp
push
mov
fdivl
sbb
inc
add
and
test
jmp
ret
lcall
shr
add
xor
int3
mov
jae
inc
les
jns
cwtl
adc
pop
out
fsts
sahf
hlt
jg
ja
dec
stos
jge
ficoml
mov
and
stc
pop
cli
and
sar
insb
pop
outsb
addr16
mov
xor
push
mov
cmp
xchg
xor
jecxz
int3
call
and
enter
xchg
in
out
push
xchg
shl
pop
lock
imul
mov
push
xchg
xchg
pop
scas
or
notl
mov
mov
repnz
ljmp
push
stos
add
cltd
fsubrs
dec
jl
xchg
rclb
jo
mov
subb
sbb
jp
aad
dec
xor
js
fmull
cmp
mov
mov
dec
xchg
imul
dec
pop
cmovp
repz
lret
aam
dec
push
sub
aas
inc
or
sarb
rcrl
pop
mov
cld
fldenv
add
push
scas
dec
pop
jmp
jnp
cwtl
adc
fistpll
aaa
adc
push
ret
stos
fwait
in
push
loop
shr
aas
xchg
pop
out
daa
adc
cli
push
repnz
scas
les
mov
push
jbe
xor
out
mov
repz
pushf
fnstsw
lds
incb
jmp
lods
xchg
or
cmpsl
cmp
lods
pop
mov
rol
scas
adcb
cmp
sub
enter
repnz
js
les
add
jmp
gs
mov
dec
jnp
mov
data16
test
lret
xchg
das
xor
mov
xchg
sub
call
fisubrs
loopne
sbb
dec
arpl
dec
pop
mov
inc
mov
fwait
sbb
gs
or
push
push
testl
cmp
xor
loope
add
inc
rolb
testl
mov
jns
xchg
outsl
test
dec
push
cmc
lock
push
stos
lods
dec
mov
mov
jb
not
jae
cmp
int
jno
pop
push
jge
lds
pushf
iret
outsl
xchg
mov
sti
pop
mov
mov
fwait
sti
mov
dec
fidivs
and
cli
sub
rclb
sbb
adc
dec
jo
rcl
arpl
mov
aad
sahf
insb
orb
mov
mov
rolb
adc
insb
in
xchg
jmp
fs
sti
pop
xchg
test
adc
mov
jns
lret
cmpsb
mov
pop
jne
mov
adc
mov
and
rclb
xchg
leave
stos
add
imul
inc
fdiv
jne
in
mov
mov
cmp
mov
rcrl
and
shll
data16
and
fs
jno
and
hlt
cmpsl
sbb
xor
mov
mov
push
ss
stos
test
or
lahf
loop
call
dec
lock
cmpsl
or
clc
xchg
inc
rol
xor
mov
je
nop
je
cmp
push
cmp
movntps
loope
imul
jp
adc
outsl
jp
std
or
xor
jae,pn
sbb
cli
leave
jnp
push
ss
jle
insb
stc
cmp
inc
shll
or
popf
xor
xchg
mov
or
and
mov
jbe
or
stos
mov
dec
test
add
cmp
bound
xchg
add
jg
enter
cmpsb
push
gs
push
mov
bound
mov
xor
je
popa
test
mov
fstps
inc
insl
cli
sbb
das
adc
loope
arpl
jp
stos
aad
fimull
lcall
stc
dec
mov
xchg
sub
dec
mov
push
sub
mov
adc
mov
cmp
dec
xchg
stc
inc
jo
ja
notb
xorb
pop
fwait
push
shrb
sbb
lock
jmp
lahf
lock
lods
rclb
pop
ret
cmc
lea
ret
dec
inc
jo
jb
push
or
add
or
xchg
in
pop
pop
sub
sub
mov
js
jl
dec
sbb
push
mov
pusha
jg
loop
out
les
mov
lea
or
scas
sub
mov
insb
hlt
filds
mov
subl
imul
xchg
jecxz
in
enter
sbb
mov
cmp
add
pop
sti
into
loop
pop
push
mov
je
fnsave
lods
mov
in
sbb
sbb
outsb
movsl
mov
mull
or
ret
xchg
xchg
sbb
cmc
pop
shlb
scas
adc
cmc
push
inc
jns
jmp
pushf
rorb
imul
inc
and
add
das
js
sbb
jb
jg
fisttpll
add
stc
mov
fists
aaa
sub
pop
sub
cmp
movsl
int
cwtl
bound
inc
mov
mov
int
sar
sbb
aad
fdivrs
cli
divb
mov
mov
sbb
test
shll
pop
sbb
sbb
mov
xlat
jp
lods
vphsubwd
pop
pop
dec
sub
lods
mov
mov
dec
cmp
enter
push
pop
push
or
mov
xchg
stc
imul
or
jo
out
outsl
test
dec
rorb
insb
xor
in
and
scas
xchg
movsb
addb
insb
shl
stos
cmp
lea
out
outsb
popa
pop
sahf
sub
imull
push
in
push
fwait
scas
push
xor
xchg
int
push
mov
jbe
sub
mov
fdivr
mov
daa
int
jo
sub
pop
push
jne
sbb
adc
bnd
mov
in
add
xor
into
divl
lock
aas
enter
out
push
pop
cmp
call
cmp
inc
jge
scas
fwait
mov
cmpsb
movsl
mov
sub
iret
push
push
mov
or
cs
das
and
sbb
icebp
iret
leave
dec
sbb
js
arpl
loop
lock
rolb
imul
nop
sti
xchg
xchg
or
mov
lds
out
std
loop
pop
shrb
sti
cmc
rolb
inc
ljmp
outsb
pop
mov
sub
or
push
sbbb
xchg
lods
dec
gs
fs
daa
mov
daa
mov
push
arpl
addr16
sbb
pop
in
xorb
adc
mov
dec
call
std
dec
cmp
ds
cs
into
mov
and
mov
push
inc
xchg
mov
js
repnz
aam
adc
ja
mov
dec
repnz
or
mov
in
orl
pop
mov
inc
jno
or
push
fs
mov
mov
mov
lock
cmp
ja
pop
xor
xor
and
push
push
xchg
jne
sbb
sbb
mov
in
imul
repnz
in
mov
mov
test
cmp
mov
aam
sub
pop
mov
sub
sub
fldcw
push
orb
mov
aam
cmp
scas
fst
rcrb
cmp
xor
xchg
mov
push
push
mov
popf
fs
pop
mov
xchg
adc
inc
aas
ja
ss
or
fs
lret
movsl
out
cli
jns
call
sahf
xor
in
cmpsl
push
out
sbb
inc
inc
jle
mov
push
int3
jg
cmovbe
stos
mov
rcll
popf
mov
stos
fwait
in
mov
data16
mov
mov
lahf
sbb
popf
mov
push
repz
dec
fsubl
sbb
or
aad
xor
sbb
aam
dec
lahf
testl
xchg
inc
sbb
sbb
mov
mov
inc
jmp
rolb
pop
xchg
jb
in
adc
jle
stos
fldenv
lahf
arpl
jge
gs
in
in
les
sahf
xchg
shlb
xchg
adc
aaa
es
cmp
jmp
outsb
sub
xchg
je
sahf
mov
xchg
mov
push
movsb
jg
pop
hlt
je
iret
sbb
shrb
and
sbb
or
movsl
ret
sti
cltd
adc
add
pop
cmp
stos
loope
adc
clc
cmp
rorb
lret
outsl
inc
mov
cmp
pop
mulb
push
push
mov
adc
push
ljmp
mov
or
fwait
fwait
sub
xchg
jb
pop
sbb
jbe
xchg
mov
arpl
jmp
mov
aas
adc
test
shrl
mov
jbe
push
pop
mov
test
stos
inc
adc
data16
or
adc
out
mov
jmp
push
add
addl
bound
test
push
push
xchg
rorb
dec
xchg
ret
es
js
std
mov
or
in
pop
pop
dec
leave
int
ss
pop
dec
ret
push
xchg
cwtl
pop
jbe
sbb
sub
rcll
xchg
pop
daa
cmpsb
shll
and
in
and
mov
pushf
pop
pop
mov
stos
adc
push
or
jnp
cwtl
mov
mov
inc
iret
sub
lock
movsl
xchg
mov
mov
test
cmp
mov
icebp
mov
xor
and
insl
lea
fstps
jb
inc
popa
mov
fbld
add
sbb
mov
fisttpll
sub
mov
xorl
xchg
test
stos
adcb
lahf
mov
in
mov
xor
xchg
jbe
inc
dec
es
filds
cwtl
add
jb
jle
dec
lea
sti
xor
cmp
out
sbb
mov
add
pop
stc
push
mov
pop
scas
fsts
loop
jmp
cld
jae
dec
loop
call
inc
dec
and
setb
es
mov
adc
mov
push
sub
jnp
andl
in
push
pop
mov
and
in
pop
xchg
cmc
adc
fisubrs
sbb
bound
cld
aas
dec
fadd
fwait
xor
push
movsb
aas
ds
xor
jmp
icebp
pop
cmc
shrb
jl
daa
push
push
hlt
fistpl
xchg
adc
mull
add
inc
cmpsl
cmp
inc
scas
scas
cmp
loope
jno
inc
fldenv
rcl
push
fucom
and
jg
sbb
lret
adc
test
jbe
popf
push
rcrl
rcl
cmp
dec
jle
test
and
push
cmpsl
ret
adc
fstpl
fistpll
stos
sbb
push
pop
adc
loop
or
lods
lret
push
push
pop
mov
pop
in
dec
mov
in
fwait
jbe
pop
addr16
clc
and
lods
data16
sbb
mov
je
or
iret
cmc
xor
push
fnstcw
sbb
xchg
mov
sbb
xor
jmp
les
inc
xlat
pop
js
arpl
fstpl
cmp
sbb
insb
aam
jne
loop
lods
adc
and
cmp
sub
in
pop
fidivrl
adc
inc
sub
repnz
imul
dec
cmp
sub
stos
sbb
mov
xor
and
mov
jo
aas
aaa
push
cmp
adc
push
sbb
andl
fidivs
xchg
shll
jge
push
dec
dec
addr16
cltd
icebp
mov
xchg
ja
pop
aam
lahf
pop
and
sub
push
jbe
or
xor
and
in
outsl
icebp
push
std
mov
sbb
or
clc
cld
xchg
ret
scas
adc
mov
cmc
pop
pusha
dec
jae
repnz
mov
shll
xchg
push
or
jne
lea
dec
out
pop
sub
jnp
aad
pop
imulb
or
adc
mov
dec
pop
mov
fimull
int
xchg
ljmp
int3
out
push
or
in
pop
pop
dec
mov
bsr
daa
jl
repnz
cmpsb
mov
clc
pusha
dec
cmpsb
outsb
fwait
ret
lea
and
mov
mov
mov
xor
mov
jo
and
inc
addr16
leave
insb
das
pop
aas
enter
es
push
repnz
insl
xor
clc
lock
test
out
cmp
inc
sbb
xor
loope
pop
ss
cld
jnp
out
ljmp
pop
rcrl
test
lea
shl
ljmp
xlat
sarb
fildl
popf
rorb
mov
jmp
jle
sbb
push
or
mov
xchg
out
hlt
mov
lret
xchg
data16
or
inc
sub
cmpsl
and
ss
pop
clc
push
leave
sbb
cmc
mov
adc
pop
mov
mov
adc
cmpl
jle
mov
clc
rorb
pop
add
xchg
hlt
nop
aam
pop
adc
jo
mulb
iret
out
pushf
and
push
mov
xor
adc
mov
ds
adc
inc
mov
mov
les
and
ret
daa
cmp
push
inc
cli
lock
push
iret
dec
cmp
mov
jno
out
jo
je
repz
inc
adc
movl
mov
pop
das
xchg
pop
rcll
xor
outsb
inc
loop
push
jp
push
aam
mov
push
lock
inc
jne
gs
push
sbb
inc
jo
and
int
pop
fsubl
push
sub
adc
sbb
loope
jl
adc
fimull
repnz
cltd
jbe
push
data16
test
int3
pop
inc
aaa
fidivrs
fists
mov
call
xchg
adc
cli
out
cld
xor
push
movq
push
pop
xchg
xor
mov
cmp
pushf
sub
or
fimull
lods
pop
jbe
mov
gs
sub
or
int3
mov
jns
out
ja
fistpl
dec
mov
shr
pop
or
pop
mov
pop
movsb
xchg
gs
jb
icebp
pop
inc
fsubrp
or
add
cli
cmpsl
pop
adc
dec
push
jne
notl
push
inc
aad
jg
jg
pop
mov
ret
stc
adc
jno
aad
insl
fstl
scas
add
mov
xor
push
fcompl
js
scas
jecxz
sbb
mov
pop
pusha
mov
add
mov
mov
insl
outsb
jmp
sub
pop
and
imul
addr16
mov
imul
inc
shll
jb
and
cmp
sti
aaa
and
clc
lods
pop
mov
mov
testl
call
icebp
pop
inc
sub
fldl
sbb
jge
and
loopne
lods
outsl
bound
push
mov
sbb
or
jl
mov
sub
jl
add
pop
dec
jbe
filds
aam
cmp
jo
xor
addr16
jo
mov
sbb
mov
sbb
shlb
out
inc
aam
jg
mov
push
mov
or
fs
jmp
mov
sub
xorb
fadds
dec
xchg
mov
add
pop
add
outsl
cmp
cld
repnz
aad
or
mov
cmpsl
dec
fbstp
add
xchg
sbb
add
and
test
insl
mov
mov
pushf
dec
je
jmp
mov
push
shrb
cmpsb
or
mov
pop
xchg
mov
cli
call
in
loope
ret
jecxz
dec
cmpsb
cmpsb
hlt
sub
push
sahf
dec
push
cmp
sub
xor
daa
cmp
push
push
sbb
and
jnp
adc
enter
std
rcl
int3
repnz
cmp
cmp
inc
leave
fwait
out
inc
push
inc
pop
and
pop
mov
scas
hlt
xchg
xor
stc
pop
xchg
outsb
inc
sarb
iret
or
test
fwait
mov
lea
cmpsl
lds
addr16
stc
mov
jg
inc
mov
pushf
push
mov
loop
cli
leave
les
js
inc
and
add
scas
xchg
push
test
xor
test
sbbb
in
fidivl
movsb
or
xchg
xchg
mov
xchg
sub
loop
cmp
imul
mov
hlt
ja
inc
rol
pop
or
mov
movsb
or
out
test
inc
je
mov
addr16
jnp
jg
stos
add
xor
xchg
jg
adcb
lcall
sarb
xlat
sub
mov
or
pop
fwait
cmp
cmp
mov
out
pushl
in
or
imul
bound
adc
xchg
mov
test
out
je
cmp
ror
sbb
lcall
movsb
mov
cmp
inc
mov
pop
inc
sub
push
inc
dec
and
cmpsb
clc
push
scas
mov
mov
jb
jle
fists
cli
jbe
lds
mov
mov
data16
popa
in
inc
adc
mov
xchg
push
mov
aad
iret
sti
adcb
cmp
add
mov
inc
push
push
cmp
add
fsts
daa
add
stc
jb
or
mov
mov
xchg
cmp
mov
lcall
gs
xchg
mov
dec
jns
and
mov
jecxz
and
lret
dec
xchg
cmp
push
xchg
xchg
mov
xor
and
shr
icebp
mov
push
mov
pop
add
nop
or
je
repnz
push
and
lcall
mov
pop
xor
mov
ds
cmp
mov
push
pop
fstps
decl
or
sbb
outsl
or
scas
lods
mov
fbstp
and
in
in
push
push
call
mov
loop
adc
jge
int
mov
call
and
loop
mov
jnp
mov
xlat
mov
movsl
inc
add
aad
sbb
jge
sub
scas
shll
jb
sahf
xor
into
outsb
xchg
push
ret
out
push
addr16
pop
cmp
sub
out
das
shlb
ss
mov
push
or
jae
out
adc
and
xlat
testl
xchg
out
and
lahf
aad
sub
pavgb
cmp
mov
sar
and
sbb
out
or
push
push
adc
outsl
fs
les
dec
out
xchg
push
add
lods
add
sub
inc
jecxz
scas
sbb
stos
lea
in
pop
pop
pop
xor
loopne
out
xchg
pop
jb
mov
dec
sar
jnp
gs
test
and
pop
xchg
sub
ss
je
push
jle
dec
fs
add
adc
ret
mov
mov
cmp
cmp
inc
adc
push
rorl
jmp
push
jae
ret
lahf
arpl
or
nop
inc
pop
add
sub
push
jmp
stc
dec
and
ud2
mov
jp
and
inc
out
ret
mov
nop
mov
lods
addl
fucomip
dec
push
jno
test
enter
xlat
int3
lods
call
mov
inc
mov
cmp
add
sub
mov
js
repz
pop
push
cmc
lret
inc
pop
adc
xlat
repnz
pop
insl
out
cmp
repz
aaa
cmp
xchg
std
js
mov
cld
cli
pop
and
or
add
int
and
inc
inc
enter
mov
xorl
pop
scas
cmp
jecxz
xchg
ret
movsb
les
shll
adc
mov
mov
xchg
inc
adc
and
aam
push
ja
movsl
sahf
push
lea
cmp
fsubrl
mov
addb
cs
ret
repnz
loop
add
xchg
cmp
and
jmp
and
mov
popa
inc
ret
mov
sbb
or
mov
outsb
in
mov
testb
or
repnz
mov
jns
ljmp
popa
loopne
repnz
pop
lret
pop
adc
jno
jmp
test
mov
aas
mov
gs
dec
jge
loope
jg
jl
push
mov
in
cwtl
rclb
fidivl
sbb
sbb
shrb
sbb
adc
jno
sub
xor
int3
aas
mov
int
inc
ljmp
out
add
das
fiadds
fstps
js
jg
sub
add
into
pop
mov
test
add
outsb
adc
mov
cmpsb
or
mov
iret
or
xchg
adc
loope
dec
mov
test
sti
loop
into
fdiv
sub
dec
xor
cmpb
mov
fldt
or
mov
inc
mov
adc
and
sub
adc
jl
xor
add
jnp
push
fildll
cmp
dec
imul
stos
inc
cmpsb
adc
mov
loop
mov
je
xchg
sub
and
sbb
add
jmp
in
lret
add
pop
mov
mov
lret
pop
jmp
inc
lds
jp
dec
in
repnz
enter
test
xor
mov
arpl
ret
add
sub
lret
push
repnz
mov
sahf
push
into
shll
xchg
lods
jmp
xchg
popa
outsl
cmp
addr16
jae
mov
and
adc
adc
scas
inc
xor
sbb
out
jne
push
cmp
pop
in
or
mov
mov
cs
pusha
or
je
mov
or
insl
cmc
pop
jnp
pop
daa
push
rorl
push
jp
adc
imul
ja
mov
lret
lcall
fsubrs
mul
sub
jns
data16
push
xchg
dec
jae
dec
fdivrs
mov
aaa
pusha
dec
xchg
sahf
es
xchg
sub
lret
adc
or
clc
repz
cmp
mov
sbb
sbb
scas
pop
fs
xchg
or
adc
fstp
stc
movsl
sbb
cltd
xchg
adcl
rol
xchg
inc
sub
xor
pop
in
mov
cmp
lret
push
loop
ret
pop
fcompl
add
scas
sbb
xchg
mov
mov
lds
push
sti
cmp
lock
out
xor
adc
pop
mov
sbb
mov
in
cltd
push
stc
pop
imul
ret
cmpsb
push
aas
out
jp
cltd
lret
pop
xchg
pop
jle
cwtl
sar
xchg
mov
out
pop
xlat
cld
dec
imul
pushf
jne
out
aas
pusha
cmp
xor
and
dec
enter
mov
or
lret
cmp
test
ljmp
sbb
and
jae
push
sub
mov
lret
ss
in
xchg
lcall
fst
lods
inc
adc
int3
insl
js
jg
orb
dec
and
pusha
xor
dec
sub
jge
outsl
adc
mov
sbb
adc
cmpb
test
jecxz
dec
xchg
enter
outsb
mov
jge
inc
js
mov
xchg
inc
and
lock
inc
andb
stos
nop
sbb
mov
inc
jecxz
inc
pushf
jge
dec
ffree
inc
or
test
mov
pop
addr16
mov
cltd
dec
cmpb
mov
imul
xor
sti
test
mov
xchg
fdivl
insl
sub
push
repz
int
repz
xor
icebp
in
inc
in
jg
sti
cmp
fstpl
mov
test
cmpsl
inc
into
ss
pushf
adc
popa
mov
push
nop
stos
pop
xor
rorl
ficoml
enter
mov
scas
push
inc
jb
dec
mov
imulb
push
inc
push
sahf
sbb
enter
add
sub
mov
push
inc
daa
add
inc
push
shr
rcll
jle
les
leave
and
je
mov
pop
mov
call
inc
mov
les
xor
test
movsb
add
out
cltd
cmpsb
cmp
in
lock
popa
inc
and
push
sti
mov
ficoml
push
fbld
pop
cmpb
push
jnp
dec
fwait
cld
push
cld
aad
fs
icebp
test
sub
sbbb
mulps
pop
jae
rorb
incl
dec
pop
shl
jle
in
shlb
pop
lahf
cmp
cwtl
test
sub
add
jbe
or
mov
jl
sbb
cwtl
ja
in
mov
pop
shrb
adc
xchg
repnz
cwtl
jecxz
push
adc
cli
mov
arpl
movsl
xchg
and
xor
icebp
xchg
mov
movsb
and
mov
or
ja
jg
jge
jecxz
data16
int3
mov
pop
jbe
mov
dec
add
aad
push
sub
add
xor
push
add
in
insb
sub
or
push
ret
iret
mov
add
idivl
xchg
pop
dec
les
test
test
ficoms
pop
je
movsb
mov
jbe
stos
popa
aas
fcmovnu
fwait
sbb
mov
sub
sub
fnstcw
and
iret
and
adc
cmp
data16
cld
pop
fisttpll
mov
in
mov
inc
inc
xlat
jne
mov
mov
cmp
movsb
and
jb
cmp
add
sbb
sbb
xlat
mov
or
rep
repnz
sub
addr16
mov
ret
mov
push
dec
pop
aad
dec
arpl
and
outsb
mov
pop
push
sub
and
inc
stos
call
mov
jmp
mov
cmp
bound
lods
jge
jae
aaa
mov
arpl
cmpsl
aaa
mov
in
repnz
insl
mov
jge
or
xor
fs
loope
test
test
shr
or
cltd
xchg
xchg
mov
sbb
clc
repz
xchg
ja
sbb
ret
xchg
mov
pop
jl
js
das
jbe
push
rolb
popa
hlt
dec
cmp
inc
shll
ja
test
fcomi
sbb
adc
or
addr16
enter
push
dec
ret
shlb
or
inc
lcall
jp
adc
in
inc
aad
lret
pop
shlb
cli
addr16
fidivs
je
cs
arpl
jg
fists
add
lcall
and
and
xor
xchg
gs
mov
xchg
stos
loopne
mov
ss
xchg
clc
fs
adc
push
lret
ret
pop
push
xlat
gs
pand
imul
stos
adc
movsb
sti
pop
icebp
mov
lahf
or
mov
push
or
sbb
cmpsb
daa
xor
dec
mov
into
add
ss
popa
mov
or
int3
and
lahf
sub
call
pop
mov
inc
mov
mov
cmpsb
jmp
add
pop
or
sub
and
xchg
int3
mov
fists
jae
hlt
cmpsl
add
inc
je
mov
bound
out
icebp
cmc
imul
pcmpgtb
roll
jg
ret
inc
das
fwait
std
out
pop
inc
mov
push
sbb
cmp
push
sub
shlb
xchg
cmp
testb
push
test
fstps
xchg
pop
push
xchg
lods
andl
mov
or
mov
ja
dec
lods
fwait
hlt
fcomps
fs
xchg
sbb
cmpsl
ja
inc
dec
or
mov
ja
nop
repz
sub
lock
ljmp
lret
sbb
mov
or
dec
mov
jp
push
popa
xchg
xchg
mov
movsb
push
inc
leave
or
jle
in
outsl
repz
out
jmp
cltd
int
sbb
jb
int
and
out
xchg
push
cmp
cwtl
xchg
push
adc
out
xchg
or
les
xchg
addr16
das
andl
dec
pop
fnstcw
xor
push
pop
lds
jnp
push
aas
mov
add
inc
cmp
cmp
sbb
jecxz
dec
das
xchg
mov
xchg
rcll
ljmp
push
shlb
lret
pop
fisubs
addr16
or
data16
mov
push
inc
fisubs
loope
xor
cltd
roll
jno
stos
xor
xor
jnp
adc
pop
sbb
das
std
outsl
insb
sbb
mov
sbb
cmpsb
lahf
nop
jbe
mov
fs
inc
daa
add
mov
sti
cltd
popa
sti
pop
pop
push
int3
decl
mov
int
cld
popa
mov
sbb
push
int3
out
sbb
pcmpgtb
jp
in
and
sub
sbb
aam
sub
jb
xchg
aaa
or
inc
sahf
sbb
push
jo
mov
int
xor
sub
sbb
clc
fimuls
aas
dec
in
fisttpll
movsl
and
pop
jo
in
adcb
cmp
inc
rcrl
mov
fisttpl
pop
cmp
addr16
xor
clc
jnp
push
ljmp
fsubrl
lret
bound
in
mov
xchg
movsl
scas
cmp
clc
lock
aad
pop
test
mov
cltd
roll
cli
push
xchg
lret
push
pop
les
int
push
add
cmp
pop
pusha
xchg
popa
movsl
repz
movsl
test
or
mov
xchg
add
or
xchg
xor
push
ret
sub
scas
in
stos
jl
in
lcall
pushf
pop
inc
xchg
and
fisubrl
cmova
or
jb
or
add
sbb
mov
cmp
push
cmp
pop
and
enter
movsl
mov
jle
in
imull
std
adc
call
pop
pop
std
outsl
xor
stos
sbb
and
adc
das
mov
fists
int3
leave
xchg
movsl
mov
loopne
push
and
mov
mov
pop
cmp
loopne
cmp
leave
ret
outsb
popa
mov
bnd
lods
fidivs
adc
mov
lock
sub
leave
fisubrl
addr16
sbb
iret
xor
adc
mov
cs
ja
sub
dec
cwtl
adc
cmp
adc
sbb
push
sbb
push
pop
shrl
mov
push
xchg
push
cs
imulb
icebp
pop
sub
jg
jnp
pop
sub
push
mov
push
testb
sub
sti
mov
repz
shr
add
cmpsb
push
or
push
mov
xchg
dec
aas
jo
add
mov
fisttps
fldcw
and
adc
cmp
xor
test
mov
and
sub
or
push
jo
icebp
adc
jg
mov
in
mov
ss
iret
xchg
sub
jp
adc
or
dec
cmp
jmp
xor
push
gs
in
les
mov
push
in
ds
mov
test
xchg
fildl
xor
shll
mov
adc
ret
pop
clc
jl
and
ficompl
dec
and
daa
jns
call
cmpsl
int3
popf
push
adc
leave
or
sub
test
pop
test
pop
push
aad
cs
enter
cmp
xlat
sbb
test
mov
xchg
cmp
nop
in
rorl
loop
pop
xchg
dec
add
insl
sti
lds
pop
dec
cli
scas
loope
mov
jo
int
lds
iret
dec
mov
pop
sbbl
xchg
and
enter
dec
push
and
es
fisttps
pop
sbb
inc
jo
out
sub
in
pop
lods
mov
jp
pop
mov
jo
push
dec
out
adc
adc
mov
out
cs
lods
out
inc
insl
push
jle
adc
fsubrl
aad
mov
dec
mov
mov
mov
xchg
mov
cs
das
pop
and
pop
cltd
and
popa
stos
stos
hlt
xor
scas
sub
pusha
mov
movsb
mov
gs
jl
insl
out
into
stos
pop
and
lret
mov
mov
shl
jp
in
jns
inc
aam
fcoms
jmp
test
sbb
or
mov
xor
mov
je
push
dec
test
leave
imul
inc
loop
pop
mov
pushf
add
pop
in
push
loop
mov
inc
test
gs
cmpsb
leave
dec
lahf
pop
xchg
fdivrs
aam
push
xchg
mov
rclb
and
push
outsl
sbb
call
xor
dec
jns
test
sbb
sub
sbb
lea
xlat
jns
sbb
lods
roll
pop
and
clc
adc
sub
loope
xchg
fimuls
inc
mulb
lods
xchg
cli
sbb
movsb
jecxz
aaa
or
adcl
roll
insl
cld
and
in
jo
movsl
lods
cmp
xlat
cmc
pop
lret
lods
dec
stc
std
mov
push
add
xchg
test
and
andb
lock
clc
mov
inc
mov
divl
arpl
jb
inc
or
fwait
dec
inc
out
pop
lds
pop
and
idivb
adc
pushf
imul
lock
jmp
loope
cmpsl
add
xchg
es
loope
shlb
dec
in
cwtl
aad
mov
sbb
push
dec
data16
jmp
mov
cmpsl
xlat
fst
out
jle
mov
jl
pop
sub
cmp
inc
push
dec
fistps
jmp
iret
outsb
push
jecxz
pop
je
cli
insl
addl
jns
pop
insl
call
sub
fsubp
inc
push
in
shll
sahf
fcompl
sahf
fnstcw
push
rclb
orl
clc
into
data16
rcrb
xchg
jns
or
adc
adc
into
dec
stos
ja
or
xor
xchg
rol
add
aaa
scas
sti
or
pushf
push
inc
inc
shrb
and
mov
jbe
lods
sub
lret
test
leave
cwtl
or
js
fwait
push
loop
dec
mov
inc
shll
jns
loopne
stos
jl
dec
inc
pop
ret
jnp
outsb
push
out
add
out
and
les
not
mov
xchg
jmp
imul
cmp
ret
mov
pusha
fwait
add
lret
mov
xor
mov
adc
xlat
inc
adc
cltd
cmp
pop
imul
inc
or
lea
push
jne
test
dec
call
mov
movsb
orl
loopne
roll
aam
xchg
xchg
jo
or
push
xchg
jl
test
movsl
roll
dec
data16
mov
dec
fsubr
jbe
sub
mov
test
arpl
inc
push
xchg
jnp
or
movl
dec
jne
fwait
imul
or
xor
stos
pop
je
aad
in
mov
mov
loop
mov
pop
jno
xor
pop
jge
js
adc
lret
pop
adc
repnz
sbb
scas
xchg
push
push
popf
ret
fstl
cmp
inc
lcall
lds
into
fs
loope
and
enter
pop
push
jge
lahf
jbe
sub
scas
add
loop
stos
sbbl
mov
mov
repnz
das
cld
xchg
aam
repnz
adc
pop
xchg
cld
mov
insb
add
mulb
in
std
cwtl
cld
push
xchg
mov
ja
dec
cmpsb
shll
fs
in
mov
and
xchg
or
fs
les
in
outsb
push
add
xor
insb
dec
push
test
out
dec
shlb
jns
in
repz
jno
ljmp
or
push
es
xor
popf
jno
inc
xchg
dec
mov
adc
in
scas
popl
cmp
mov
inc
cli
xchg
lret
cmp
mov
and
outsl
sub
mov
add
sbb
out
pop
dec
lcall
pop
loopne
pop
adc
pop
je
in
fistpl
jmp
addr16
repnz
dec
cli
mov
pop
stos
imul
in
dec
cwtl
sbb
pushf
scas
xchg
add
imul
mov
cs
cmp
adc
mov
hlt
pop
mov
xor
out
repz
test
push
and
adc
dec
xor
daa
sub
ljmp
test
lret
xor
or
push
orb
mov
in
mov
in
xor
mov
out
inc
adc
sbb
test
ja
and
icebp
cld
mov
jmp
ret
rorb
into
jo
aaa
inc
adc
outsb
into
xchg
sub
jne
inc
push
add
xor
xchg
fs
push
pop
test
cs
cmp
pop
jg
js
std
xchg
sbb
xchg
ret
jle
xlat
sbb
pop
popf
cltd
clc
rcpps
jo
cmpsb
es
pop
je
mov
movsb
jno
loope
sbb
mov
cmp
mov
test
cmp
inc
and
pop
jns
push
addr16
adc
xchg
and
aam
dec
shlb
dec
mov
push
add
es
cmpsl
jne
dec
mov
sub
fstpt
lods
nop
iret
je
iret
jle
bnd
cmpl
fidivrs
cmp
cmpsl
sub
xchg
xchg
sti
jne
push
fnstcw
subl
out
mov
rorb
and
xchg
mov
movsb
pop
cld
jb
mov
pushf
into
dec
jmp
leave
test
sub
jmp
roll
pop
adc
out
fimull
push
inc
cmpsl
daa
ss
push
ret
inc
ljmp
movb
in
add
sub
aad
dec
sarl
iret
shrb
aam
adc
push
mov
enter
dec
call
push
mov
outsl
or
ljmp
inc
sbb
rcl
xchg
out
jge
xchg
cmc
pop
add
jb
lods
lret
adc
arpl
in
stos
fwait
lock
push
sbb
xor
jb
push
dec
mov
aas
ficoms
repnz
mov
stc
int
andb
and
call
icebp
push
in
mov
push
shll
lret
inc
in
cmp
imul
mov
hlt
sti
outsb
cmp
or
mov
iret
xchg
pusha
ret
sbb
test
scas
int3
mov
pop
insl
fildl
jns
add
mov
jnp,pt
inc
sbb
mov
push
jb
daa
add
popf
xchg
pop
pusha
ss
xor
xchg
cmp
xchg
hlt
shrl
mov
es
lods
mov
sbb
sbb
xchg
aas
pop
pop
xchg
mov
outsb
mov
inc
insl
shlb
movl
imull
add
push
fisubs
in
aam
sub
push
imul
push
ret
into
lods
push
lods
popa
add
shrl
pushf
lock
mov
sub
aam
out
dec
mov
sub
das
pusha
dec
mov
or
sbb
xor
xor
frstor
mov
aam
jbe
dec
push
push
push
xchg
addb
xchg
xlat
jmp
pop
jnp
pop
adc
nop
cmp
loope
movb
xchg
xchg
in
jne
cli
and
jb
sbb
test
push
lahf
push
std
mov
test
ss
sahf
insb
js
pop
mov
pop
test
fldt
dec
jno
xor
sahf
push
pop
insl
loopne
dec
js
stos
dec
jp
rolb
popf
xor
dec
daa
mov
movsl
push
popf
lret
fucomi
jg
movaps
dec
jno
incb
outsb
in
mov
mov
fs
repnz
in
sub
cmpl
in
mov
pop
sbb
mov
into
int
cltd
add
fidivrs
xor
stos
stos
je
sub
int3
pop
inc
test
dec
pop
ret
insl
dec
pop
mov
add
orb
imul
cltd
cwtl
fs
mov
ja
inc
pop
fdivrl
and
pop
out
mov
add
std
and
add
jle
dec
push
pushf
scas
xchg
sbb
movsl
fs
imul
xchg
scas
popf
inc
lods
xchg
mov
jle
ret
cmp
lea
jg
mov
jo
jnp
sbb
dec
fcompl
test
cmp
dec
jo
jecxz
pushf
rclb
in
scas
cld
in
test
into
xor
ljmp
cld
pop
mov
icebp
movsl
xor
cli
xlat
sarl
pop
push
sarl
in
lret
fs
xchg
cmp
aas
ljmp
pop
in
loop
push
sarl
adc
cli
cmp
mov
lods
frstor
mov
sbb
xchg
loop
sbb
lds
adc
xchg
or
call
frstor
rorb
lock
ljmp
cmp
icebp
sub
xor
xor
movsl
pusha
lds
addr16
inc
lret
cmp
testb
es
loope
lods
push
xchg
mov
inc
dec
push
sbb
repz
adc
jns
insl
cs
jb
jg
insl
sub
outsb
pop
cltd
cmpsb
arpl
push
fisubrl
lret
add
push
stos
mov
mov
movsb
pop
loope
mov
insb
sub
mov
and
cli
push
mov
mov
shr
sarl
iret
arpl
cli
and
jecxz
lcall
inc
jecxz
dec
mov
cli
push
mov
test
aam
push
iret
mov
mov
cmp
ret
je
sahf
xchg
out
adc
lods
add
arpl
lods
xchg
xchg
int
xor
cli
cmp
push
inc
push
push
in
inc
lods
mov
mov
and
mov
test
jmp
in
aam
mov
lods
arpl
stc
and
flds
arpl
les
inc
daa
mov
jge
inc
or
nop
pop
push
inc
mov
cmp
lock
jp
out
call
inc
dec
lahf
mov
ljmp
mov
js
jp
leave
mov
push
ja
dec
mov
inc
aad
inc
xor
insb
adc
je
dec
sub
jae
sub
loopne
out
sub
je
iret
and
es
push
sbb
add
ds
ret
mov
rorl
mov
mov
xor
je
mov
xchg
lahf
dec
cmp
pop
scas
incl
push
jbe
mov
loop
cmp
jne
fnstenv
ret
xor
sarl
fisttpl
pop
mov
out
cmc
out
ljmp
in
mov
fstpt
fmull
add
pop
sub
ss
test
xchg
inc
das
incb
std
pop
aad
leave
xlat
loopne
cmp
xchg
daa
mov
pop
or
pop
mov
xchg
inc
sub
fs
pop
dec
push
xchg
mov
or
pop
dec
push
and
pop
dec
xor
mov
test
and
or
cmp
push
sbb
fisubs
push
imul
xchg
xor
or
push
std
pop
cmpsb
sub
push
sub
inc
popa
das
sbb
andl
lea
or
dec
push
fs
out
sub
jns
cmpsb
push
and
mov
cli
repz
movsl
xor
and
mov
test
rcll
jbe
lods
fstps
icebp
mov
sub
pop
mulb
sub
and
xchg
rorl
paddw
imul
test
mov
aaa
ja
push
or
sahf
out
popf
jo
out
sahf
mov
xchg
and
iret
lods
xchg
movsb
jl
rcrb
pusha
mov
jb
inc
sub
addr16
push
outsl
mov
test
lock
mov
sahf
inc
int
lahf
jmp
pop
out
out
neg
and
add
call
pop
cltd
pop
out
ret
adc
stos
out
xchg
fnstsw
shlb
lret
xchg
sbb
adc
insb
test
fsubp
insb
push
enter
pop
cmp
out
movsl
adc
sub
add
pop
mov
adc
mov
adc
lret
addr16
add
jle
xor
lret
int
cmp
or
aam
cld
pop
push
dec
imul
gs
shrb
das
ffreep
aam
incb
rclb
mov
in
jbe
imul
es
aad
adc
arpl
jmp
int3
testl
dec
inc
imul
mov
ret
push
cmpsb
aad
mov
push
sahf
xchg
repnz
pop
mov
in
jmp
and
sbb
fldenv
xchg
out
lret
jg
rorb
cltd
stos
push
sahf
in
clc
adc
dec
cmp
loope
notl
lods
test
push
adc
xchg
call
pop
mov
sbb
fadds
mov
repz
or
in
inc
mov
push
mov
popf
sbb
test
sbb
mov
cltd
out
jbe
outsl
push
and
push
sub
fxch
gs
fstl
sbb
in
imul
jns
fs
xchg
push
cmpb
call
dec
adc
fadds
pop
mov
dec
inc
cmp
loop
sti
loopne
jmp
add
cld
pop
ja
insb
xlat
cmp
js
hlt
les
popa
mov
sbbb
sbb
scas
ljmp
cmpsl
hlt
int3
fiaddl
push
mov
add
out
cli
cwtl
movsb
adc
xchg
jl
shrb
xor
aam
jl
mov
sahf
pop
xchg
mov
adc
push
aaa
xlat
push
xchg
lahf
xchg
int3
pop
mov
out
cmp
or
inc
push
cmp
mov
xchg
xchg
add
ficoml
push
das
shrb
leave
mov
and
shr
mov
stos
ret
outsl
cmp
xor
mov
sarb
sub
bswap
out
inc
enter
mov
mov
add
dec
rorb
mov
gs
xchg
mov
imul
lret
aaa
into
ja
inc
aas
les
out
jns
lret
mov
shll
scas
sbb
neg
bound
js
gs
xor
out
ret
sahf
imul
loop
inc
and
cmp
cmpsl
in
jbe
ja
jnp
jns
je
pop
lret
ljmp
lahf
and
mov
addr16
movsl
int
and
push
and
or
fs
push
adc
pop
dec
fidivs
arpl
mov
pop
mov
stc
mov
sbb
loopne
stos
inc
sub
ret
aad
or
stos
mov
jecxz
cwtl
or
pop
mov
mov
nop
dec
mov
add
std
jle
mov
and
int3
or
cmc
add
mov
aam
mov
add
pop
sub
push
inc
and
js
push
lock
cltd
mov
movsl
dec
inc
mul
adc
pop
flds
inc
orb
ds
inc
cmpsb
je
arpl
pop
sbb
popa
sahf
lock
outsl
adc
sub
push
pop
lock
ljmp
outsb
mov
mov
jbe
mov
or
dec
adc
loop
mov
gs
ja
call
mov
push
cmp
and
xchg
sub
outsb
loop
or
loop
pop
lods
adc
sbb
test
lock
mov
cmp
lret
and
jbe
and
int3
psllq
mov
inc
mov
sbb
inc
dec
mov
cmp
mov
insb
or
inc
ret
xor
fs
test
jp
xor
andb
xchg
sahf
push
arpl
dec
add
test
mov
sub
jnp
xchg
cmc
xor
data16
push
cmpsb
sahf
pop
sbbl
mov
dec
fwait
enter
push
sub
lods
sub
cmp
mov
cmc
push
mul
stos
je
adc
inc
adc
mov
push
jns
outsl
jp
out
lret
pop
inc
mov
cwtl
sahf
loop
inc
inc
lahf
sar
in
sub
fiaddl
xor
enter
out
mov
pop
les
out
movsb
mov
xor
mov
add
mov
imul
adc
sbb
rorb
add
data16
push
aam
cwtl
jg
cli
lods
sub
cmp
subb
adc
add
lret
jl
ffree
sbb
pop
das
lock
icebp
cmp
in
je
fistpl
jecxz
mov
fistpl
pop
mov
lods
fidivl
js
rclb
jns
cmc
test
fdivs
pushf
dec
and
and
xor
xchg
jbe
repz
dec
xchg
xchg
cmp
inc
jae
dec
fcmovnb
jne
dec
mov
jno
cmp
push
pushl
mov
mov
pop
xor
jg
bound
inc
xlat
adc
pushf
stc
outsb
adc
repnz
push
fs
pop
inc
push
sub
je
xchg
shl
mov
push
fdivrl
mov
jl
add
xor
xor
sbb
movsb
popf
imul
cmc
into
lods
cltd
dec
inc
add
mov
ficomps
nop
fwait
pop
popa
adc
test
lret
int
sub
add
daa
in
push
pop
sbb
and
xchg
jg
inc
movsl
mov
movsl
lods
fildll
fisttpll
ret
push
sbb
sub
dec
pop
or
rcrl
lcall
shl
cmp
dec
popf
hlt
stos
dec
adc
mov
and
test
cmpsb
mov
sub
xchg
inc
stc
mov
fcmovnb
push
in
mov
push
jo
or
gs
movsb
sbbb
pcmpeqw
cmp
shll
out
inc
fistps
fwait
ljmp
scas
loop
cmp
sbb
jle
mov
in
xchg
test
test
add
aad
push
or
lahf
out
aaa
or
or
sbb
or
filds
sbb
mov
leave
xor
or
push
mov
mov
or
fidivs
push
imul
jnp
pop
test
jg
in
shlb
fadd
movsb
xor
rcll
roll
icebp
or
std
pushf
and
movsb
mov
xor
mov
ficomps
add
and
sarl
stos
adc
pop
sti
xlat
push
or
popf
divb
adc
xchg
into
das
lds
mov
and
cmp
out
outsb
xor
orl
add
mov
nop
jp
stos
test
das
adc
std
aam
cmp
or
xchg
lock
pop
int
clc
mov
or
and
popf
inc
fs
repz
add
pop
xchg
idivb
lret
jp
dec
push
jl
sbb
lds
and
dec
je
mov
cmp
lods
sbb
push
icebp
xchg
inc
out
arpl
mov
push
movsb
cmp
mov
sbb
aad
sbb
pusha
push
dec
lock
ficoml
cmp
sub
rolb
mov
lret
adc
cld
pop
sti
jge
pop
out
mov
push
lea
cmp
stc
jecxz
push
ffree
mov
sub
icebp
and
pop
push
and
push
test
sbb
out
push
orl
cmp
fnstcw
outsb
push
xchg
test
cmc
or
shll
sbb
out
fidivs
ljmp
sbb
pop
cmp
and
mov
scas
pop
cmp
fistpll
xchg
mov
add
add
lret
or
gs
adc
jl
addl
add
and
adc
ss
pop
mov
das
cmp
jno
cwtl
popf
and
inc
add
sbb
sub
outsl
icebp
in
sub
lock
mov
or
iret
pop
aaa
sub
test
add
loopne
imul
inc
jbe
test
daa
xchg
loop
push
repnz
pusha
inc
cmpsl
ret
dec
in
lret
xor
and
sub
pop
cs
mov
mov
les
add
clc
push
jecxz
mov
cmpl
aam
fcoms
add
push
ljmp
pusha
jno
mov
cmpsl
cmp
negb
fnsaves
jl
push
test
lea
sub
imul
jge
cwtl
sub
fdivl
ror
addl
sti
mov
push
push
jo
pop
or
dec
cli
pop
repnz
dec
imul
data16
sbb
sbb
jns
adc
outsb
gs
push
stc
jmp
iret
sub
jp
mov
dec
pop
cmpsl
push
outsb
cmp
pop
cmp
movsb
loopne
inc
adc
call
lcall
cli
mov
ret
pop
aaa
stc
std
mov
shll
or
dec
test
cld
cmpsb
push
mov
filds
dec
sbb
mov
inc
divb
outsl
and
fdivrs
outsl
sbb
jl
fsubr
mov
sub
xor
add
adc
shll
jb
daa
imul
jbe
or
inc
ss
adc
outsl
cs
xor
sub
fsubs
jae
arpl
lret
xchg
and
nop
and
jno
push
mov
in
sub
and
inc
fcoml
mov
cmp
mov
cmc
or
insb
fdivr
cs
xchg
adc
mulb
sbb
add
mov
std
mov
jg
aam
nop
xchg
cmp
jl
daa
mov
daa
lcall
dec
cmp
jle
lret
mov
sub
mov
mov
lea
rolb
mov
mov
cmp
call
out
popa
add
cli
xorl
xchg
pop
inc
arpl
mov
inc
jp
pop
test
push
enter
pushf
mov
push
sti
cmc
pop
fisttps
add
adc
jle
inc
pop
popa
repz
flds
dec
mov
cmp
sar
jo
sub
ds
adc
out
and
shll
bnd
jb
lock
iret
test
ljmp
shrl
fidivs
and
inc
popa
inc
out
dec
scas
inc
cltd
push
add
pusha
mov
or
and
add
or
lret
popf
inc
cld
inc
mov
mov
push
mov
mov
cmp
decl
mov
push
cmp
popl
pop
pushf
mov
insb
or
aad
pop
lahf
push
and
push
sbb
stos
and
js
mov
dec
pop
stos
jns
mov
or
push
pusha
fcmovne
loope
xor
lret
push
daa
xor
mov
push
mov
into
dec
ret
add
dec
clc
push
pop
sti
inc
cwtl
mov
inc
push
and
divb
clc
or
sbb
fnstenv
add
popf
sub
orl
fidivl
xchg
movsb
repz
adc
mov
inc
pop
or
mov
cmp
cmp
sub
out
fistps
insl
sbb
sub
orl
fisttpl
out
or
jbe
stos
in
jmp
jbe
or
xchg
mov
adc
cld
add
jg
xchg
aas
sbb
loop
mov
jl
dec
aad
xchg
jg
lods
int
hlt
or
lret
imul
lods
loopne
inc
cmc
push
add
jp
or
push
lock
daa
xchg
inc
adc
pop
inc
or
mov
outsl
pop
js
add
lret
jmp
mov
lods
hlt
clc
jb
daa
mov
push
shrl
and
aas
lret
outsb
aad
int
out
in
sbb
push
mov
cmp
sub
dec
in
add
cld
jns
dec
ret
lret
out
and
jmp
push
mov
std
inc
inc
xchg
xor
js
pop
jne
stc
icebp
int
sbb
push
jle
push
je
pop
pop
and
imulb
jmp
jbe
ss
pusha
and
data16
push
stos
dec
repnz
stos
sub
xchg
movsl
sub
mull
scas
jnp
out
cmp
scas
mov
lods
lcall
cmp
iret
inc
jmp
mov
sub
sub
cmpsl
aad
mov
cmp
cmc
add
in
or
push
cmp
push
pop
lret
in
add
sbb
inc
hlt
gs
pop
subb
sahf
xchg
scas
pop
aas
inc
xchg
lea
sub
mov
cmp
add
stos
imul
bound
xorb
xchg
or
push
xor
xchg
jne
mov
push
sub
inc
add
xor
xor
dec
pop
xchg
push
dec
stos
push
test
pop
jecxz
inc
cmpsb
ja
xchg
adc
stos
pop
xor
or
jle
mov
dec
roll
out
dec
cltd
enter
cmp
and
mov
fstpt
sub
sub
push
add
push
movsb
iret
xchg
int3
addr16
mov
es
push
pop
ret
es
xchg
pop
fdivrs
push
jecxz
cmp
int
outsb
inc
inc
lahf
fistpll
and
push
cmp
or
cli
stos
or
int
lret
mov
int3
scas
pushf
inc
add
je
addl
clc
xor
addr16
sbb
sbb
or
repz
cmpsl
xor
in
cli
mov
jnp
mov
sahf
push
nop
dec
iret
dec
jmp
or
mov
divl
mov
in
and
ds
push
enter
insb
mov
inc
xor
mov
mov
mov
push
mov
jno
in
bound
dec
jae
test
repnz
ret
jecxz
pop
dec
int
ficoms
xor
loope
cs
repz
aad
mov
mov
or
data16
inc
inc
sub
cmp
stc
cmp
negb
scas
pop
rclb
mov
lret
pop
mov
mov
in
stc
add
mov
jle
push
xchg
xorb
cmp
stos
fistpll
mov
push
and
les
adc
push
xor
orl
pusha
cmp
adc
xchg
cmp
arpl
insb
fs
xlat
cmp
xchg
insl
test
test
dec
andb
add
aaa
lret
jne
pop
ljmp
out
push
call
lods
pop
fbld
shlb
inc
jmp
inc
xchg
add
in
jl
sbb
mov
xchg
adc
jo
lret
or
dec
outsb
adc
sti
mov
shll
lea
sbb
or
test
idivb
xor
cs
in
sti
push
repnz
addr16
xor
cmp
sub
aad
shll
lahf
xor
out
ss
mov
int3
mov
mov
sahf
lahf
aam
inc
mov
push
jl
mov
clc
out
insb
cmp
xlat
add
pop
push
aam
repnz
mov
imul
cs
push
call
call
mov
adc
jns
lds
or
jg
mov
in
movsb
ja
mov
xchg
push
das
dec
std
mov
xchg
cmpsb
and
jl
mov
pop
gs
enter
push
xchg
in
adc
push
wrmsr
insl
sub
mov
xor
adc
lcall
mov
sub
dec
mov
pop
ja
add
les
es
jmp
xor
test
insl
std
aad
dec
mov
mov
push
test
movsl
or
add
fildll
xchg
cmc
frstor
dec
pcmpgtd
mov
dec
mov
sbb
cmp
and
out
insl
xchg
test
sub
stc
ror
lods
add
ljmp
sbbl
jae
js
xchg
and
cltd
shl
fmull
xchg
mov
pop
xchg
push
sbb
xchg
cmc
stos
adc
loopne
dec
dec
jg
ja
cs
inc
subb
flds
sub
mov
andb
in
add
cmp
icebp
shlb
ret
cmp
addb
pop
ficomps
xchg
test
mov
add
mov
and
cmp
test
inc
lcall
mov
sbb
push
outsl
and
inc
inc
jl
gs
cs
xlat
jg
pop
dec
cmpsb
push
pushf
punpcklwd
sbb
jno
repz
leave
je
pop
xor
xchg
cmc
push
movsb
lahf
pop
jns
insb
xchg
sarb
out
in
add
xchg
jae
shlb
mov
pushf
mov
mov
mov
cmpsl
sub
push
lds
arpl
sub
sub
pop
mov
xor
arpl
in
xor
pushf
in
mov
add
mov
mov
scas
clc
or
cwtl
addr16
sbb
outsb
fs
shl
int
pop
ret
mov
xlat
into
stos
adc
shlb
and
xchg
loopne
mov
xor
dec
jmp
add
xor
sbb
sahf
push
mov
mov
pusha
xor
lea
sub
jno
dec
dec
jmp
lea
push
adc
dec
pop
jne
push
mov
cmp
mov
push
pop
cmp
sbb
and
stc
mov
dec
outsl
push
stc
jne
jle
and
sub
cmp
jne
pusha
mov
loope
pushf
scas
jg
mov
add
cmp
mov
into
pop
adc
ret
test
rol
dec
add
rol
push
cmpsl
jnp
mul
xor
mov
insb
adc
mov
push
and
sub
xor
push
inc
xchg
imul
push
jp
and
jo
lcall
dec
cmp
add
daa
hlt
sub
popf
outsl
push
mov
popa
mov
stc
xchg
in
mov
insl
cwtl
sbb
pop
push
push
cmp
pop
cltd
jbe
pop
ror
sub
loopne
in
mov
aad
pop
es
loope
cmpsl
push
push
fwait
repnz
bound
jl
sbb
ja
dec
popf
xor
push
xchg
inc
popf
ss
ret
xchg
and
mov
outsl
test
aaa
mov
push
pop
ret
fs
xorl
insb
pop
andl
cltd
cltd
mov
sbb
cmp
push
cs
add
add
and
negl
stos
mov
addr16
pop
cmp
pop
mov
ret
or
jmp
xchg
bound
rorl
fsubrl
xchg
fnsave
push
je
pop
xor
cltd
pop
cmp
xor
int
mov
jp
shll
xchg
jecxz
pop
xor
insl
nop
insb
daa
add
inc
dec
sub
pop
aad
and
aam
inc
test
pop
inc
cli
and
repnz
push
push
adc
sub
ljmp
xchg
push
test
push
add
xchg
fsub
jnp
mov
add
mov
fimuls
repnz
jecxz
mov
call
sbb
mov
test
push
pop
sub
add
data16
add
clc
cmp
out
xor
or
outsb
ja
mov
lods
imul
sbb
xchg
pop
adc
jmp
cld
outsb
bound
popa
jp
mov
mov
mov
mov
inc
cmp
aad
jb
push
rcrb
cmp
ret
ss
jl
cwtl
cs
leave
push
pop
xlat
icebp
pop
sub
lahf
inc
and
ljmp
pop
jnp
sub
pop
mov
mov
shll
mov
ljmp
lods
add
xlat
push
lods
xlat
push
stos
push
sbb
repz
fbld
daa
lds
ret
push
notb
rclb
or
fcom
je
ret
aas
notb
add
cmp
mov
adc
repz
mov
jnp
mov
sub
mov
pop
adc
les
inc
and
xchg
ret
ja
cmp
sbb
shlb
add
fstl
stos
sub
pop
out
fwait
or
std
mov
iret
js
ret
add
sub
sbb
bound
mov
aad
aas
rorl
inc
xchg
movsb
push
xchg
push
mov
dec
repz
and
cmp
in
ret
loope
mov
and
push
mov
jno
push
xor
mov
xchg
pop
loopne
push
aad
stos
imul
jmp
inc
int
pop
les
push
adc
cmp
xchg
cmp
lds
or
xor
xadd
loopne
rorl
xchg
jge
leave
out
or
adc
pop
loop
sbb
xchg
dec
lods
test
pop
into
adc
sbb
rcl
stos
jnp
lret
adc
sbb
lods
dec
arpl
leave
mov
fadds
aas
sbb
ficoms
mov
push
rolb
cltd
or
in
jo
sbb
icebp
leave
es
pop
test
pop
insl
mov
mov
adc
js
xor
cmp
xchg
sbb
daa
scas
in
aam
out
lods
out
lret
mov
stos
ficoml
mov
or
and
sarb
mov
sahf
adc
outsl
test
xlat
jmp
pop
pusha
xchg
rorb
dec
jb
aas
aaa
lock
mov
das
fsts
sbbb
cmp
xchg
loopne
mov
call
jl
sub
jnp
pop
fcomip
ficomps
or
outsl
daa
mov
push
lea
xor
leave
push
lds
test
lods
push
push
cltd
cmc
mov
xchg
jmp
dec
dec
mov
mov
adcb
push
and
fs
mov
push
xchg
xlat
mov
lea
pop
inc
cmp
lcall
fdivrs
stos
or
aam
or
push
jmp
aam
dec
cmpps
adc
xchg
add
ja
out
lret
push
lret
cs
lahf
cmp
sub
jecxz
mov
sti
out
fmul
lock
adc
xor
test
js
mov
mov
out
add
out
jg
aam
xor
jl
add
les
cmp
stos
enter
lock
sbb
jg
adc
fcom
inc
icebp
pop
push
mov
dec
shll
jb
pushf
cmpsb
repz
mov
jle
xor
ficompl
cli
insb
mov
xor
orb
xchg
inc
in
shlb
cmp
out
and
insb
fidivl
push
mov
add
pushf
leave
mov
jle
pop
repz
add
push
jecxz
cmp
push
push
dec
xor
mov
fldenv
xchg
mov
mov
push
add
nop
push
pop
shl
mov
in
xchg
mov
pop
pop
xor
mov
mov
mov
push
lods
call
jge
xlat
outsl
ret
push
lret
fists
nop
pop
mov
jmp
pushf
sbb
js
sbb
in
dec
jmp
imul
push
and
in
mov
clc
outsl
movsl
xchg
ja
push
pop
enter
pop
cmpsb
inc
cmp
sti
push
xchg
adc
sbb
jno
call
in
or
daa
add
mov
cmp
pop
rol
add
pop
sub
ret
lods
pop
mov
xchg
pshufw
ficoml
aas
push
ljmp
rorb
jno
cmp
xchg
push
add
sbb
aaa
dec
cmp
or
xchg
into
cmp
xlat
and
jmp
xchg
mov
xchg
cltd
mov
stc
movsl
int3
add
sub
jl
mov
and
jno
mov
pop
dec
sti
mov
adc
fisttpll
dec
push
or
sub
mov
sub
ret
mov
cmp
divb
sbb
shll
push
sub
push
and
or
iret
adc
stos
fisttpl
mov
mov
fsubl
test
push
xor
enter
xchg
das
push
scas
iret
mov
push
adcl
jge
push
and
mov
push
inc
adcl
stos
out
scas
and
add
in
lock
sub
das
fstpl
adc
out
fisubrs
repz
push
mov
mov
sbb
push
movsl
add
lods
int
outsl
out
push
js
aas
push
out
add
cli
popa
xor
repnz
les
jns
push
or
xor
mov
ret
dec
or
dec
sbbb
lret
insb
andb
push
rcr
cmc
cmp
and
mov
enter
ret
ret
in
sub
xor
movsl
cmpb
push
leave
push
scas
add
mov
rcll
loop
sub
inc
xchg
rcl
sub
mov
cs
fbld
push
xor
mov
fwait
fs
jg
jecxz
mov
sbb
xchg
lea
aas
test
jecxz
add
outsl
loop
and
sub
cmpsl
mov
jnp
out
pop
jns
into
jne
lock
mov
add
cmp
add
adc
cli
jno
sub
mov
push
stos
lret
cli
mov
rorb
lcall
negl
cmpsb
lret
inc
sbb
pop
cmc
inc
leave
ss
gs
mov
arpl
xchg
xchg
movsb
lock
rcrb
inc
inc
push
popl
and
dec
jnp
xchg
mov
adc
jle
sub
leave
rcl
addr16
testb
icebp
lss
stos
sub
push
add
cmc
repnz
popf
dec
in
int3
and
filds
cmp
fwait
xchg
mov
fstps
pop
insb
int3
xchg
lea
xchg
lret
cwtl
and
in
sub
imul
dec
pop
dec
sbb
iret
cmp
xchg
lcall
dec
add
xchg
adcb
test
addr16
in
dec
xchg
cli
pop
inc
xor
pop
push
push
testb
mov
jle
inc
test
pushf
mov
dec
mov
xchg
pop
jmp
sahf
adc
ret
mov
rcll
sarb
xorl
or
or
push
dec
adc
mov
inc
add
add
pop
fsubr
clc
add
test
in
mov
push
bound
sbb
push
xchg
imul
mov
sahf
mov
push
dec
cmc
lock
mov
jecxz
jnp
int3
adc
jnp
mov
push
push
push
mov
test
in
cmp
xchg
sub
pop
cs
iret
or
and
arpl
int
rolb
or
out
ret
jno
loop
pop
cs
xor
xchg
dec
jecxz
mov
lods
mov
int
out
stos
scas
cmp
mov
xor
adc
cld
or
mov
loope
fs
pop
mov
add
lret
leave
out
into
pop
push
cmp
dec
add
mov
movsl
inc
xor
ja
fwait
inc
fmul
imul
in
inc
xchg
ljmp
mov
out
stos
mov
shr
lock
out
clc
xchg
cmp
adc
mov
adcl
into
pop
or
cmp
hlt
mov
call
test
ficompl
sub
arpl
inc
dec
pop
adc
and
movsb
jmp
insb
add
inc
rcrb
mov
mov
leave
sub
ret
mov
mov
dec
fidivrl
or
xchg
jo
mov
enter
ret
mov
jae
pushf
repz
mov
xchg
mov
ret
sub
enter
movhps
das
fisttpl
mov
leave
fwait
sbb
shll
cltd
idivl
push
push
cmc
lret
pop
mov
movsl
jne
jne
enter
mov
lret
stos
jns
fwait
pop
call
inc
and
or
fsin
xchg
or
fs
insb
dec
xchg
mov
jmp
add
out
sbb
sub
lret
mov
out
or
scas
arpl
jbe
jge
inc
lods
fwait
jbe
pop
and
mov
gs
loopne
xchg
jns
ret
movl
mov
sti
push
addr16
pop
decb
mov
in
into
test
sbb
jae
hlt
adcb
scas
jne
lahf
xlat
inc
jecxz
cmp
lods
outsl
lods
mov
cmpsb
arpl
push
cmc
ljmp
lods
dec
nop
adc
loope
addr16
push
leave
test
jecxz
ss
cmpsl
mov
imul
mov
push
add
shr
sub
test
xchg
push
adc
fldt
in
outsb
push
add
js
stos
cltd
aam
leave
movsl
aas
imul
jg
test
and
pop
loop
popa
mov
cwtl
inc
shll
scas
repz
call
xchg
jle
inc
xchg
mov
mov
mov
mov
sti
aam
dec
subb
mov
pop
cltd
pop
xor
push
xlat
xchg
jo
clc
jle
mov
aaa
adc
shrb
inc
dec
sbb
pop
mov
sahf
into
outsb
lock
sbb
test
and
test
data16
add
xchg
jns
or
mov
xor
jge
or
ja
xchg
lods
xchg
push
and
ss
shlb
pusha
test
rorb
sbb
adc
and
mov
pop
enter
xor
in
leave
sbb
mov
ja
xorl
mov
xor
and
push
xchg
jmp
cmpsl
push
xchg
xchg
and
jle
es
out
arpl
mov
xchg
mov
test
adc
repz
repz
xchg
cs
pusha
clc
jno
pop
incl
mov
inc
in
dec
ds
in
lds
inc
cwtl
ret
push
xchg
mov
mov
mov
xor
xor
loop
scas
popa
push
sub
lock
push
push
shll
push
mov
mov
xlat
ljmp
pushl
or
or
xor
fwait
outsb
pop
in
mov
stc
jo
stc
and
ret
xchg
shr
cltd
and
jg
jbe
dec
xor
mov
dec
dec
xor
sti
cwtl
pop
sub
mov
dec
jp
dec
arpl
aas
inc
movsl
pop
push
cld
test
adc
jl
pop
test
dec
adc
addb
cmpsl
dec
test
mov
mov
lcall
imul
decb
pop
mov
xchg
insb
std
fmuls
mov
mov
xchg
cmp
lods
lret
out
xor
scas
call
inc
lcall
sbb
push
dec
les
test
fwait
stc
cltd
test
or
loopne
sub
dec
cmpb
jmp
test
mov
mov
lock
int
sbb
gs
mov
sbbb
mov
dec
mov
jp
mov
pop
xchg
or
cmp
jno
jge
adc
out
roll
xchg
inc
push
loop
inc
xchg
adc
lods
sbb
pop
xchg
call
xor
and
imul
out
adc
mov
jge
cmp
rorl
inc
cmpsl
jl
inc
js
sub
mov
sub
xchg
stc
or
lea
cmc
xor
add
outsb
test
js
inc
inc
xchg
mov
subb
icebp
push
pushf
repnz
ss
cmp
popa
xchg
ja
mov
test
or
xor
icebp
add
xlat
push
pushf
mov
pop
sub
cmp
mov
sbb
inc
in
out
in
jo
fldt
repz
stos
out
push
xor
adc
xor
arpl
sbb
add
inc
fnstcw
loope
out
int
dec
jbe
cwtl
insl
jo
or
aam
arpl
jmp
add
dec
sub
out
out
movsb
lret
outsb
sub
adc
dec
cwtl
mov
and
and
arpl
mov
lret
aaa
ss
cli
cmp
faddl
push
sbb
pop
dec
sti
mov
shl
rcr
jnp
inc
test
sub
mov
fstp
arpl
push
ljmp
pop
ret
add
loop
cmpsb
and
sarl
imul
push
push
and
sbb
fistpl
and
mov
mov
push
in
stc
and
ljmp
aad
dec
xchg
mov
sbb
adc
test
lods
fstpt
mov
jns
cli
lds
push
xchg
lock
ljmp
xchg
jae
ljmp
insl
mov
sub
into
out
adcb
insb
mov
or
sar
scas
outsl
xor
add
mov
mov
adc
mov
mov
xor
dec
and
dec
xor
lret
mov
popa
rolb
inc
hlt
sub
inc
pop
push
ret
in
stos
scas
fcmovnb
popf
pop
sbb
or
xor
mov
cld
cli
push
pop
fmull
sbb
mov
jg
int
sti
outsb
scas
popf
stc
ja
dec
and
es
xor
test
popf
jl
jns
mov
and
dec
scas
inc
xchg
mov
je
cmpsb
lret
je
sub
lods
outsl
adcb
cwtd
push
sbb
xor
mov
add
inc
leave
push
aam
adc
imul
jmp
cs
lods
push
inc
loop
ja
xor
or
dec
pop
cmp
shlb
mov
xlat
xchg
sub
mov
or
mov
adc
sub
sahf
cld
jecxz
inc
scas
daa
cmp
das
mov
les
in
push
insb
xor
aam
cmpsb
lods
ss
sbb
or
or
sub
mov
mov
fisubrl
fwait
cmp
lock
icebp
xchg
jmp
in
push
hlt
lds
push
jbe
fildll
nop
mov
jge
mov
mov
jmp
and
xchg
pushf
adc
test
adc
cli
xchg
jo
mov
jno
stos
int
jo
imul
out
push
lret
cmpsl
lgs
popf
jnp
or
fdivl
dec
loop
sub
nop
gs
out
sub
jge
iret
ja
mov
jle
dec
inc
in
xor
push
cmp
sbb
fistps
sti
cltd
xlat
cmpl
jo
xor
out
fistl
fildll
push
push
push
pop
sub
ffree
fsts
mov
outsl
jp
lods
jnp
or
dec
jge
sub
fwait
inc
xchg
lcall
sti
test
cmpsb
shll
clc
leave
aaa
pop
and
dec
add
cmp
cwtl
js
scas
or
adc
push
dec
stos
jno
mov
out
pop
ja
cmpsb
stc
test
inc
js
mulb
adc
test
pushf
mov
out
push
int
xchg
cmpsb
sbb
lret
jne
mov
call
pop
sahf
or
gs
into
lcall
std
loop
mov
test
jmp
shr
push
add
cltd
mov
cmc
cmc
and
outsb
aaa
sub
cmc
sbb
mov
sub
pop
push
mov
hlt
fldcw
jne
dec
sahf
popa
dec
xchg
cmp
xchg
ljmp
inc
pop
jmp
cmp
iret
rcr
dec
test
inc
rclb
adc
idivl
insb
xchg
xor
lea
js
xor
out
sbb
ret
cmp
and
cltd
and
cmp
push
mov
cmpsl
add
xor
lret
adc
push
out
pop
pop
pushl
rcrb
fnsave
xor
movq
inc
pop
xchg
cmp
or
mov
sub
mov
add
lods
push
jnp
sub
xor
jbe
divb
push
mov
das
jge
jge
outsl
add
inc
test
mov
inc
movsb
xchg
and
into
ret
push
scas
rclb
xor
repz
push
jg
sahf
jnp
into
mov
dec
jl
sti
sub
cmp
inc
aas
mov
pop
data16
mov
pusha
cmp
out
imul
jae
int3
jl
jge
jg
sub
mov
push
add
pop
jbe,pt
xchg
jae
and
daa
je
dec
inc
dec
jne
inc
inc
std
sbb
cmc
cmp
sub
xchg
dec
daa
arpl
xor
popa
and
xchg
mov
ret
outsl
mov
mov
loopne
dec
cwtl
jmp
and
lcall
fldenv
shrl
arpl
jmp
mov
inc
sahf
ja
dec
xchg
add
pop
les
jg
stos
adc
rcrb
add
fnstenv
cmp
pop
in
dec
jb
xchg
mov
jbe
shlb
in
mov
adc
jne
bound
jmp
adc
inc
popa
xchg
adc
and
outsb
cmpsl
lock
and
out
and
inc
cmp
cli
lahf
call
dec
xor
loop
pop
or
adc
or
pop
cwtl
adcl
cld
cltd
stc
or
mov
xor
sbb
push
push
push
push
sarb
popa
mov
push
push
ss
sahf
or
das
addr16
dec
cmc
cmp
mov
sub
insl
jl
inc
lahf
mov
cmp
daa
aad
daa
lahf
mull
mov
sub
test
mov
cmp
and
fldenv
das
cmc
js
pop
imul
add
imul
loope
xlat
cmp
loopne
sub
jecxz
cmp
push
rcrb
push
push
xchg
jno
inc
shlb
adc
push
lds
sti
and
inc
test
stc
mov
out
mov
or
leave
mov
frstor
jge
or
mov
test
test
sub
xrelease
pop
sub
push
sub
cmp
pop
push
xchg
fstps
mov
nop
mov
and
mov
lahf
xor
rcll
xchg
push
jne
repnz
clc
imulb
icebp
icebp
popa
pop
divl
bound
add
adc
xor
icebp
pop
push
test
fadds
pop
dec
pop
or
dec
pop
popl
jmp
xor
les
jne
pop
ret
mov
sbb
push
cmp
push
fldcw
push
jmp
stos
mov
push
jo
jge
sub
add
add
daa
movsb
testb
ja
roll
pop
jmp
es
sti
sub
cld
lds
or
cmp
adc
xchg
jl
jb
movsl
cmp
adc
lcall
pop
repz
jo
sbb
lods
push
gs
push
sbb
in
pop
inc
sub
rep
out
cmp
mov
push
push
jnp
comiss
mov
or
repz
sbb
rorl
sbb
out
push
xchg
sub
jg
insb
int3
xchg
cltd
dec
arpl
mov
mov
rorb
or
xor
and
push
popa
aas
adc
jp
or
jp
inc
lock
dec
ds
insb
adc
cmp
sarb
pop
mull
dec
into
addr16
imul
jno
mov
arpl
dec
movsl
ja
adc
hlt
outsb
xchg
fisttpl
imulb
lock
push
imul
jmp
xor
and
pop
fmuls
mov
addr16
sub
sahf
dec
test
jnp
imul
shll
push
mov
lods
aad
movsl
cli
nop
jno
pop
pop
jo
mov
mov
xor
outsl
adc
mov
cmp
jp
dec
sti
mov
or
aam
mov
movsb
ret
lret
push
cmp
lcall
xor
add
shll
cwtl
stc
push
dec
jbe
iret
nop
sbbl
cwtl
sub
inc
scas
sti
add
or
in
push
push
popa
bound
or
outsl
push
mov
jge
pop
adc
roll
cli
test
scas
lods
lahf
movsb
movsl
pop
mov
mov
das
dec
jg
stc
loopne
mov
jnp
cmp
leave
mov
sbb
push
outsl
sbb
scas
loope
scas
dec
aas
flds
mulb
xchg
dec
les
enter
mov
aad
test
pop
jae
xchg
leave
imul
fs
dec
inc
dec
lods
add
cs
sbb
iret
push
jnp
push
lcall
fistpl
jp
jg
inc
cmp
adc
sub
stos
cmc
cmpsb
inc
push
add
lods
inc
sbb
jl
and
frstor
jo
je
cltd
repnz
mov
inc
cwtl
jne
dec
aaa
sbb
mov
xlat
jne
jmp
dec
push
mov
clc
sbbl
mov
mov
movsb
cmp
pop
adc
gs
cltd
das
xchg
mov
ljmp
cmpsb
xlat
or
adc
mov
gs
dec
xchg
cwtl
stos
test
fidivl
out
cwtl
scas
push
cmp
gs
movsl
repnz
cmp
mov
pop
testl
aam
sbb
lret
sbb
mov
inc
int
jmp
xchg
insl
sbb
shr
in
mov
ljmp
inc
push
jp
arpl
aas
out
in
mov
inc
mov
cmp
fadds
inc
jae
imul
mov
xlat
mov
popa
jnp
out
pop
shll
test
add
cltd
jp
lea
nop
and
ljmp
movsl
out
loop
push
inc
pusha
arpl
pop
mov
test
test
std
jle
xlat
call
xchg
dec
cmc
repz
mov
cmp
das
jno
rcl
pushf
ret
dec
imulb
mov
jmp
leave
sub
inc
adc
lods
push
mov
out
clc
xor
sbb
lcall
clc
loopne
lods
dec
mov
notb
test
iret
test
test
sbb
lea
push
cmpsl
test
xchg
stos
or
div
inc
and
arpl
inc
jbe
cli
arpl
or
mov
popf
lret
pushf
movsl
jge
daa
or
push
xlat
int
sarl
jle
mov
lock
call
je
push
or
add
jge
sub
cmpsl
push
jmp
mov
sub
add
test
cmp
mov
jo
iret
push
jo
mov
inc
ja
lods
sub
xor
mov
adc
add
dec
in
pop
cs
das
divl
rcrb
adc
cli
add
arpl
jecxz
aad
xchg
jl
hlt
pop
xchg
xchg
jecxz
sub
mov
hlt
jns
adc
dec
xchg
stc
jg
aam
mov
pop
frstor
dec
rdpmc
mov
mov
jae
sub
sub
xor
push
xlat
daa
in
lea
jnp
cmp
fnstenv
add
cli
xchg
push
push
sbb
adc
imul
add
cmp
xchg
mov
jno
jecxz
push
xchg
pushf
outsl
xchg
stos
mov
mov
pop
call
add
hlt
ret
sahf
ljmp
push
cmp
out
aaa
xchg
push
sub
dec
enter
fimull
push
ds
mov
ds
and
cmp
mov
xor
pop
out
std
jne
push
arpl
fisttps
pushf
sub
pop
es
sub
add
xchg
push
lahf
push
test
scas
mov
mov
sbb
adc
mov
jecxz
mov
insb
mov
jle
dec
lods
cmp
jno
mov
es
call
enter
xor
pusha
jb
mov
pop
xor
fdivs
aaa
cli
cmp
ret
scas
pop
std
dec
mov
outsl
adc
pop
shr
jne
fcomi
jae
subb
mov
pop
test
subl
mov
xchg
and
mov
pop
or
or
push
test
add
pop
inc
and
pop
xchg
dec
sbb
inc
mov
icebp
xchg
or
push
sahf
inc
cmp
subl
mov
fdivl
loopne
sub
aad
xorb
sub
out
cmp
xor
and
add
into
add
pop
sti
ss
jns
scas
jno
repnz
push
stos
adc
imul
lods
xchg
or
out
dec
jle
adc
or
sbb
outsb
aaa
in
sub
lock
in
cmp
jbe
call
add
in
mov
leave
dec
lret
jecxz
dec
push
clc
mov
fcmovu
cs
adc
out
repnz
cmp
sub
mov
cmp
sub
or
push
sbb
aad
adc
mov
jecxz
lcall
loope
movb
pop
inc
les
push
bound
inc
nop
mov
xchg
test
cmpsl
aas
fdivs
mov
mov
pop
cld
pop
out
jl
sti
sahf
inc
mov
adcb
add
pop
mov
test
mov
or
push
imul
insb
mov
ret
mov
aad
mov
out
mov
xor
cli
insl
into
mov
inc
fadds
dec
and
adc
arpl
cmc
cmp
cmc
fmull
push
shl
mov
pushf
loope
push
sarb
mov
inc
out
out
lret
and
lods
clc
push
cmp
movb
add
fsubr
bnd
iret
negb
xchg
daa
inc
pusha
push
pop
imul
or
xor
xor
ret
mov
pop
clc
aas
dec
call
lock
xchg
inc
mov
lcall
fcomp
inc
orb
pop
rorb
or
sub
lds
mov
movb
stos
mov
adc
and
loope
mov
mov
lahf
test
call
pop
mov
push
lds
test
push
arpl
mov
adc
ds
push
das
loope
incb
std
xor
fstl
lods
mov
in
sahf
pop
popa
sub
stos
cli
xchg
mov
sbb
int3
insl
das
jne
test
jge
test
mov
pop
jbe
pushf
push
jno
leave
into
out
mov
das
mov
sbb
mov
lret
stos
iret
aad
lea
rcr
cwtl
push
stc
lahf
rorl
ficomps
out
or
dec
dec
push
sub
xchg
inc
cmpsb
orl
gs
jg
xor
push
mov
xchg
ds
call
push
xor
test
inc
xchg
lahf
mov
rcr
je
popa
inc
bound
dec
js
lcall
add
iret
outsb
mov
lret
fdivs
mov
add
aaa
push
xorl
jnp
sbb
cs
std
mov
xchg
pop
inc
test
je
pusha
mov
xchg
out
addr16
and
jecxz
dec
add
mov
stos
inc
cmp
cltd
in
adc
xor
dec
add
add
ds
inc
aad
jmp
pop
inc
sub
xor
jne
pop
and
jns
dec
inc
movsb
jno
jns
lea
pop
dec
scas
push
mov
aam
mov
sti
and
rcrb
sarb
adc
stos
orl
mov
mov
xor
mov
sti
xchg
cmp
xchg
push
push
mov
mov
sahf
dec
insl
push
pop
repz
cmp
imul
inc
adc
dec
das
xor
out
lds
and
imul
lcall
fsubrp
ret
cmp
mov
pushf
scas
mov
mov
popf
sub
ja
mov
aam
lea
mov
mov
mov
adc
mov
mov
aam
fchs
and
mov
cwtl
xorl
sbb
lret
int
push
push
dec
stos
adcl
inc
inc
nop
inc
js
repnz
ret
cs
movsl
insl
mov
in
std
cmpsb
stc
mov
mov
mov
mov
ljmp
enter
ljmp
pusha
fwait
add
inc
mov
aad
push
mov
nop
rcrl
jbe
mov
loop
xor
jno
adc
adc
xor
js
loopne
adc
jmp
adc
sti
test
mov
cmp
cmp
in
sbb
ljmp
jmp
cmp
xchg
pop
pop
push
mov
dec
sub
push
or
push
vmulss
mov
aas
lret
fbstp
pushf
fldlg2
inc
pop
stos
pushf
lcall
sbb
cmp
icebp
in
rcr
xchg
cmp
adc
leave
push
lahf
imul
add
xchg
inc
inc
sbb
ret
jb
add
dec
fldenv
popa
adc
insl
fcmovnb
jmp
xor
pop
xor
stos
push
inc
mov
cli
cld
xor
mov
out
adc
lret
pop
icebp
testl
lret
mov
pop
loopne
cmp
int
aaa
or
repnz
test
sbb
lcall
inc
int
aas
jns
inc
fs
xchg
fwait
movsl
adc
pop
mov
mov
mov
pop
add
or
inc
in
fstl
and
cli
push
dec
mov
xchg
flds
push
das
push
fisttpl
sbb
dec
xchg
sbb
test
cmp
mov
inc
mov
xchg
aad
pushf
mov
mov
inc
dec
mov
xchg
fnstenv
lret
jns
xor
ret
out
mov
and
inc
sub
add
or
les
push
or
lcall
fcmovnbe
iret
cmp
outsl
xor
iret
movsb
test
ljmp
pop
add
xor
cmc
nop
pop
popa
pop
aaa
lds
lcall
fwait
mov
adc
sti
and
popa
cmpsl
cmp
fcmovnu
aaa
ss
enter
les
bnd
mov
or
mov
ss
shll
cmp
int
and
scas
ret
sti
std
mov
add
inc
out
lahf
xlat
sub
sub
adc
xrelease
mov
iret
push
push
out
xor
cltd
pop
push
bnd
xchg
popf
hlt
pop
push
jl
cmp
pop
sahf
inc
fiadds
push
clc
clc
fcmovne
xchg
addb
stos
sahf
sti
cmp
lods
push
jecxz
cwtl
cmc
subl
data16
push
cli
adc
pop
fwait
mov
inc
cmpsl
jnp
jmp
sbb
bound
sti
orl
loopne
jg
mov
jb
aad
les
or
sub
xchg
jmp
jno
sar
out
loope
dec
mov
push
or
out
stos
dec
cmp
mov
popf
and
pop
hlt
pop
imul
sbb
shl
int
xor
pushf
cmp
flds
mov
cmpb
rcr
xor
pop
cmp
mov
loopne
mov
inc
pop
cltd
and
popf
and
mov
sar
fs
and
arpl
jo
shlb
ret
mov
cmp
insl
in
divl
imul
jno
push
and
xor
push
mov
pop
cmp
xchg
adc
jmp
jae
call
ret
mov
inc
xlat
and
mov
mov
xor
pand
jno,pn
pop
aaa
aas
dec
notb
ret
sbb
test
test
pop
push
test
inc
rolb
sub
inc
int3
aad
or
loope
dec
jl
xchg
xor
mov
nop
shrb
mov
in
out
cmp
xor
xorb
mov
inc
sbb
mov
sbb
xchg
push
adc
inc
fcmovne
mov
arpl
loop
lods
ds
repnz
in
dec
dec
dec
outsb
mov
fnstsw
popf
add
cmc
stos
imull
xchg
mov
cmpsb
cmc
nop
dec
adc
call
test
cld
cmpsb
xchg
inc
out
loope
adc
out
loopne
push
mov
mov
jp
mov
call
mov
push
sub
bound
pop
les
cmp
sub
xchg
and
and
cmc
add
cmp
test
mov
stos
dec
mov
sbb
scas
mov
dec
or
movsb
daa
mulb
hlt
mov
pop
cmpl
hlt
sti
loope
fnstsw
jbe
orb
clc
aam
fmuls
aas
mov
push
jle
das
jno
jecxz
mov
mov
loope
mov
mov
jecxz
sahf
jns
das
jle
add
sub
jge
lcall
dec
fstpl
dec
adc
dec
gs
mov
inc
jae
cmpsl
push
jb
lret
push
cmp
sub
xchg
jnp
fdivr
sub
dec
stos
cmpl
dec
sbb
mul
mov
xchg
pop
scas
add
sub
push
insl
jae
ljmp
or
cmc
sarl
ret
xor
jbe
test
or
mov
jns
dec
jno
jns
xor
inc
mov
adc
je
mov
adc
xchg
dec
lahf
or
pushf
push
and
inc
inc
pushf
pop
into
js
sbb
push
je
xchg
stos
jne
cmpsb
subb
shl
jbe
scas
loopne
mov
dec
jg
and
mov
mov
enter
in
cmp
mov
cs
js
add
jb
lcall
dec
out
jbe
cmpsb
push
and
ret
inc
lret
shr
rolb
xlat
stos
jmp
call
pop
sbb
sahf
mov
add
mov
flds
xor
and
or
xchg
cmp
movsl
mov
jbe
lret
cmpsb
scas
pop
imul
cld
fildll
pushf
sbb
test
stos
dec
rep
lock
fadd
in
jmp
ds
sbb
scas
subl
and
sbb
lahf
push
mov
das
mov
dec
loop
nop
in
rcl
mov
outsl
adc
repnz
inc
fistpl
push
in
push
outsl
sub
inc
out
cmp
inc
dec
and
addb
push
or
sti
adc
push
jnp
dec
jmp
xchg
popf
xchg
mov
mov
mov
add
int
int
jae
jmp
add
fiadds
sub
ds
dec
dec
fstl
mov
mov
in
inc
inc
fildl
data16
mov
mov
adc
cwtl
test
xor
jb
out
cmp
jae
or
je
fisttpl
nop
lock
and
cltd
out
inc
jge
cli
loope
add
cmp
add
test
sub
cmp
gs
jle
dec
jp
xor
dec
inc
jp
js
cmpsl
mov
or
lods
aas
push
push
stc
cltd
pop
mov
cmp
lcall
pop
out
cli
lea
call
test
inc
adc
lcall
dec
imul
imul
cli
or
mov
push
gs
std
add
xchg
and
outsb
repnz
sub
ljmp
pop
sbb
and
adc
mov
mov
inc
decb
cmpsl
jmp
sbb
cmp
push
sbb
pushf
push
push
shlb
fwait
pop
pop
pop
js
push
ret
push
movsl
jle
rolb
sub
or
aam
push
xor
mov
or
int3
xchg
lret
sti
es
lcall
bound
cmp
scas
dec
inc
loopne
sahf
mov
mov
ja
sub
add
jp
and
stos
push
fs
sahf
or
sti
pop
test
pop
or
xorl
out
mov
aam
inc
cmpsl
shlb
imul
fs
sub
mov
mov
sbb
jb
movsl
fucomip
nop
or
js
jecxz
jmp
cmpsb
shl
jb
shrb
das
mov
lods
jmp
push
daa
xchg
fwait
push
aam
fldenv
rorb
push
mov
cmp
inc
pushl
clc
pop
shrl
push
add
iret
adc
jge
pop
mov
pop
ficoml
push
cmpsb
push
xchg
push
adc
subl
cmp
iret
mov
sbbl
mov
pop
addr16
mov
sub
sub
loop
mov
or
pop
imul
in
pushf
inc
mov
imul
aam
add
jae
jl
cmc
add
loope
popf
hlt
call
adc
inc
mov
xchg
lea
mov
push
arpl
mov
mov
in
in
aad
or
rclb
es
pop
repz
dec
in
movsb
adc
aam
cld
ficoml
push
rcll
cmp
mov
loope
leave
enter
test
rcrb
inc
cmp
adc
push
lods
pushf
mov
notb
pop
cmp
lahf
push
shll
xchg
jae
push
cmp
jmp
test
mov
jno
scas
mov
sbb
pop
xchg
fbld
sahf
and
cli
dec
sar
sub
cmp
jge
jl
loopne
xor
cmp
insb
sti
jge
stos
js
push
push
cli
into
pushf
jmp
gs
dec
sti
and
scas
popf
lret
roll
stos
jnp
lcall
pop
mov
push
mov
sub
mov
loope
test
xchg
sbb
xchg
loopne
mov
or
fmulp
sbb
loop
cwtl
pop
mov
cmp
xchg
inc
sbb
mov
push
jne
cwtl
mov
cli
ds
mov
sub
sub
setge
out
lock
adc
inc
scas
mov
xchg
pop
mov
pop
fistpl
ret
pop
and
mov
and
pop
jmp
sub
xor
push
mov
adc
or
dec
push
mov
sti
pop
gs
dec
out
push
insl
jae
mov
push
jle
sbb
xchg
cli
arpl
into
inc
jae
mov
mov
adc
push
push
cmp
sub
mov
pop
pop
cmc
jmp
push
into
xchg
xorb
cmpsl
adc
and
fildl
rclb
std
je
stos
in
mov
xlat
jg
in
dec
jle
xchg
sub
dec
push
rorl
pop
insb
inc
test
xor
rcrb
push
leave
cmp
dec
mov
add
aam
insb
and
insb
xchg
stos
repz
and
idivb
lahf
dec
push
or
mov
xchg
xor
jns
push
lods
es
cmp
pop
insl
pop
lock
mov
jae
ret
cmpsb
cmpsl
jmp
jecxz
scas
push
lahf
lea
jecxz
loope
ljmp
push
inc
cmp
lcall
dec
jb
das
addl
test
dec
or
subb
icebp
sub
stos
lea
push
add
lcall
aam
imul
lret
push
sub
jns
nop
fucomp
xchg
sub
out
push
hlt
and
jg
fstps
cmp
stc
and
enter
jno
dec
addb
faddl
adc
xor
shll
or
lods
stc
in
push
addr16
sub
add
dec
cli
jp
not
sbb
testb
filds
and
ret
push
int
lea
sub
test
pop
je
lahf
push
sbb
or
cs
fcompl
lret
mov
mov
add
into
or
loope
push
hlt
popf
cmp
lods
imul
popa
jo
popf
sub
mov
hlt
ds
xor
int
repz
cmp
jl
ljmp
scas
pop
aam
xor
xchg
pop
insb
lock
cmpsb
pop
popa
bnd
xor
shlb
inc
mov
add
adc
decb
sub
dec
daa
iret
pop
dec
test
sbb
addr16
cmp
and
es
push
fsincos
aaa
mov
xor
xor
into
outsl
sahf
repnz
xor
je
inc
push
xor
cmc
mov
fcoms
pop
dec
js
pop
in
in
and
and
add
mov
aam
mov
sub
pop
imul
loope
and
mov
inc
lea
repz
sbb
dec
sub
xchg
subl
or
push
sbb
sub
pop
loopne
ds
push
sub
mov
daa
les
mov
test
sub
ja
leave
faddl
push
test
es
adc
adcl
cmpsl
xor
mov
mov
mov
aad
ret
pcmpeqw
push
pop
mov
xlat
xor
mov
fdivr
xchg
test
mov
sbb
sub
pop
xlat
mov
push
mov
mov
lahf
dec
and
jmp
add
push
xchg
mov
movsl
fbstp
push
push
inc
lods
std
jno
xchg
dec
mov
imul
jg
shr
mov
in
clc
jb
fsubl
inc
mov
jnp
jmp
lock
out
mov
pushl
jl
aam
lcall
xor
jns
out
jp
push
cltd
mov
loop
cmp
enter
mov
add
fistps
insl
mov
push
xchg
push
test
cmp
movsb
mov
or
test
ror
sub
movsb
es
mov
add
dec
fistpll
and
iret
out
mov
fsubrl
inc
pop
jnp
xchg
adc
ja
push
sub
adc
psraw
mov
hlt
in
ljmp
fwait
shlb
xchg
cwtl
call
and
mov
lret
push
jg
cmp
push
test
icebp
mov
stos
rorb
sti
repz
out
jg
pop
sbb
xchg
jnp
pop
or
mov
fisttpll
rcrl
mov
xchg
lock
mov
push
shl
add
add
dec
sbb
jo
lods
out
and
jmp
dec
cmp
xchg
jb
xchg
jmp
ljmp
fistpll
lock
mov
std
pop
imul
bswap
mov
add
enter
xor
rclb
add
ret
or
loope
pushf
cmc
ret
sarb
or
adc
int
frstor
jns
mov
es
push
mov
daa
cmp
adc
lea
dec
jne
notl
and
imul
add
add
mov
mov
jne
push
sti
imul
out
jns
pop
jnp
loop
jl
rolb
lahf
out
sub
jbe
jge
add
aas
testb
mov
jbe
aad
shll
inc
divl
in
push
in
inc
lahf
push
aas
shrb
subl
dec
or
inc
aas
mov
mov
push
inc
repnz
mov
cs
jns
mov
mov
out
and
sub
adc
fsubr
and
or
mov
cmpsb
add
rorb
and
jl
jae
int
movsd
cmpsb
stc
xchg
insl
dec
add
aam
jg
lods
pop
loop
inc
sahf
sbb
into
mov
pop
fs
and
add
in
or
jb
jae
xchg
repnz
test
xchg
mov
mov
xchg
es
bound
loopne
icebp
aas
and
mov
stc
push
dec
cmp
xchg
loop
mov
add
xor
jmp
cmpsl
mov
aad
jb
xchg
mov
mov
push
call
repnz
in
stos
push
fcmove
inc
xchg
cltd
cmp
call
mov
ret
arpl
fcmovnu
xchg
inc
add
outsb
inc
push
adc
xchg
inc
icebp
fdivrs
ss
xchg
push
lods
ds
loope
sbb
pop
ret
loopne
cltd
nop
add
ret
xchg
dec
fimuls
pop
jl
mov
cmpsl
jo
mull
lock
or
cwtl
jecxz
dec
xor
cmc
xchg
inc
push
dec
add
mov
xor
clc
pop
js
sbb
cmpsb
dec
fiadds
cs
ret
xlat
dec
test
lock
mov
mov
push
stos
ds
jecxz
pop
roll
shll
scas
pusha
add
xchg
xorb
lcall
sbb
icebp
pushf
mov
push
leave
insl
notb
and
mov
lea
xchg
repnz
xor
push
cwtl
std
into
cwtl
daa
and
xor
fwait
sub
in
mov
dec
lods
fucomip
test
arpl
in
cmc
sti
lret
push
daa
inc
cmp
addr16
or
icebp
sub
mov
lods
lods
and
arpl
loope
cmp
addb
dec
cli
cld
mov
fidivrs
pusha
xchg
scas
xlat
pop
inc
xor
nop
das
in
negb
jno
test
push
xchg
out
clc
pop
cltd
mov
fidivs
sbbb
pop
dec
mov
fadd
cmc
mov
in
mov
push
dec
or
inc
mov
push
and
andl
mov
pushf
cmp
dec
lds
outsl
and
jl
sbb
in
cmp
mov
mov
mov
cmpsb
cmp
loop
jns
sub
fsubp
mov
cmp
mov
pop
jbe
enter
lahf
aas
aas
dec
sub
daa
xchg
addr16
jns
test
dec
subl
add
mov
hlt
mov
or
jge
dec
dec
lock
xchg
scas
das
aas
and
dec
inc
push
stos
lods
rorb
jle
add
subb
mov
je
cli
ljmp
sarb
xchg
sub
push
pop
mov
inc
sbb
inc
add
mov
nop
sub
cmp
lret
mov
add
mov
lret
push
sbb
inc
sub
mov
xchg
lods
dec
inc
pop
jae
adc
idiv
hlt
cwtl
test
ljmp
sbb
jge
and
add
sti
aaa
lock
ja
adc
movsl
aas
xchg
rorb
xor
fstpt
jb
mov
loopne
loopew
out
sbb
xor
movsb
push
inc
hlt
dec
fcomps
jmp
mov
dec
or
ds
adc
jmp
dec
sbb
fcmovnu
dec
sarb
jmp
mov
rorb
stc
add
push
inc
xor
aaa
out
xchg
jp
popf
clc
inc
mov
xor
dec
push
or
call
mov
sbb
mov
dec
repnz
leave
fldt
dec
movsb
pop
out
jmp
popl
mov
mov
mov
xchg
fwait
push
iret
dec
stc
mov
push
sub
int
mov
xchg
sub
sub
ja
jb
ficoml
loope
sbb
js
fldt
dec
pop
mov
aaa
cmpsb
xchg
dec
pop
mov
pop
cmova
sub
in
popf
out
icebp
jg
or
mov
pop
mov
xor
aad
xchg
nop
aad
enter
mov
pushf
es
inc
dec
jl
mov
dec
cmp
jle
movl
ret
mov
pusha
xor
mov
pusha
sub
scas
lret
mov
pop
push
and
div
push
ret
xor
call
pop
mov
test
add
mov
repz
push
mov
xor
out
jp
insl
xchg
gs
pop
inc
fimuls
negl
call
add
popa
push
sub
test
sbb
xchg
push
rcrl
pop
out
sahf
incl
lahf
push
and
push
pop
aad
mov
push
stos
je
aas
mov
sarl
ds
in
inc
jno
nop
sahf
mov
mov
cs
rclb
and
mov
cmpsb
ss
call
stos
jl
idivb
repz
cld
xchg
sub
and
cmp
push
mov
daa
movsl
add
fimuls
ljmp
sub
push
sub
xchg
repz
loop
xchg
xor
mov
add
repnz
fs
dec
sub
fdivl
mov
je
imul
fisttpl
sarl
lcall
dec
decl
testl
push
in
jecxz
pop
or
mov
push
loope
sahf
cltd
outsl
jmp
ds
adc
and
pusha
add
fistpll
fs
stc
out
mov
dec
js
fwait
xchg
jmp
push
xor
cld
lods
lds
push
jnp
and
out
mov
ds
nop
dec
lcall
xlat
xchg
jne
and
lahf
cmp
add
dec
push
rolb
fs
mov
and
sbb
dec
cli
test
cs
js
pushf
inc
out
xor
sub
outsl
and
push
xor
mov
fcomps
and
or
jns
sbb
mov
stos
push
pop
push
lods
movsb
add
icebp
insl
jp
mov
pop
inc
ret
dec
inc
scas
mov
pushf
cmpsb
inc
and
xchg
xchg
sbb
imul
mov
cmp
aad
in
push
jb
push
adcl
icebp
mov
pushf
adcl
xor
fwait
mov
mov
pushf
adc
add
aad
aam
push
imul
test
and
and
jg
jae
xchg
arpl
leave
pop
pop
xor
js,pn
mov
sub
ret
or
xor
test
rcl
test
lea
lds
sub
jmp
inc
scas
shrb
dec
push
js
arpl
in
inc
ljmp
je
clc
repz
push
adc
xchg
aad
loopne
insb
popa
dec
cmpsb
je
push
xor
inc
xchg
pop
or
mov
cmpb
pop
pop
mov
stos
pop
mov
imul
mov
push
lahf
mov
xor
out
push
fs
jmp
cwtl
add
int3
imul
dec
cmpsl
arpl
idivl
pop
push
fldenv
arpl
pop
aam
jo
scas
cltd
mov
inc
out
rorl
lret
fstpl
shll
lahf
sbb
subb
sahf
pushf
popa
push
pushf
adc
pop
xor
int3
sub
push
cmpsl
and
jno
mov
inc
xchg
dec
movl
lahf
jp
or
xlat
adc
and
push
in
push
lds
aad
jp
push
pop
popa
jo
gs
sbb
jae
outsl
imul
mov
mov
gs
fisubl
adc
aad
or
mov
mov
pop
insb
jns
fs
inc
dec
push
mov
or
add
push
stc
insl
add
repz
inc
call
iret
rcl
or
xor
sbb
out
stc
inc
inc
mov
adc
jmp
insl
mov
mov
fwait
ret
cli
js
movsl
loopne
add
jge
jae
sbb
rorb
adc
gs
add
pop
pop
jecxz
mov
out
xchg
adc
into
sub
fsubr
test
rorb
pop
lahf
sub
cmp
adc
movsl
mov
jne
mov
jge
loope
cmpsb
cmp
lock
addl
pop
mov
nop
dec
gs
mov
push
push
repz
dec
mov
std
xchg
sbb
add
aas
jg
enter
and
andl
shll
fiaddl
xchg
ret
fwait
jbe
dec
cwtl
inc
ja
out
push
inc
popa
outsl
mov
fiadds
adc
dec
pop
xchg
scas
dec
jae
call
pop
sar
sti
repz
ds
mov
jo
push
xchg
mov
mov
add
adc
sub
in
decb
popf
xchg
adc
dec
fsubrs
ret
sbb
xor
jbe
dec
dec
adc
jg
aas
push
mov
inc
and
pop
adc
inc
enter
add
imul
sub
pop
push
add
cmpsb
xor
in
int3
sti
push
dec
or
push
add
mov
mov
lods
sub
std
out
scas
ljmp
sub
pop
mov
imull
cltd
leave
nop
aad
imul
xchg
int
in
aam
cmpsl
push
inc
outsl
cld
je
sbb
add
ljmp
cli
loope
outsb
sbb
cmp
scas
cmpsb
mov
jp
jne
jg
jg
mov
bound
ss
cli
and
cmp
cmpsl
adc
or
xchg
pop
fisttps
or
dec
pop
pushf
mov
jge
call
dec
and
es
xchg
cmc
cmc
leave
and
pop
mov
imul
xchg
jmp
clc
lahf
mov
frstor
push
add
inc
test
dec
fsub
lcall
pop
loopne
xor
sbb
adc
inc
insb
jg
mov
sbbl
out
sahf
das
dec
adc
inc
xor
inc
mov
and
or
loopne
cmp
in
push
or
mov
outsl
mov
sbb
dec
mov
dec
ja
aaa
or
jp
pop
js
pop
testb
xchg
scas
fistps
popf
shrl
nop
popf
cs
pop
or
movsb
in
adc
push
lds
faddl
int
in
lahf
adc
in
xchg
lds
loopne
push
out
and
lret
daa
fdivl
sbb
das
js
pop
dec
push
out
mov
sti
or
add
out
adc
push
push
dec
enter
mov
outsb
dec
jmp
mov
pusha
leave
sahf
cwtl
adcl
sbb
dec
int3
sub
nop
or
and
pusha
out
or
or
mov
xadd
popf
pop
scas
sub
ret
iret
loope
adc
mov
inc
int
pushf
adc
jl
sub
sub
xchg
push
lret
sbb
imul
fadd
adc
outsb
jo
pop
daa
pop
push
repnz
in
stos
lcall
and
ret
fs
jge
pop
mov
mov
les
jbe
inc
in
shlb
xor
sub
mov
enter
dec
adc
arpl
push
in
imul
xlat
out
jg
cmovg
insl
mov
sahf
adcb
imul
mov
sbb
push
adc
sbb
cltd
pop
push
pusha
leave
es
mov
sub
mov
and
shlb
jns
and
daa
shll
mov
loope
push
pop
push
subb
and
pop
sub
inc
mov
repnz
call
mov
lods
dec
sbb
ret
mov
sbb
dec
loope
mov
out
mov
dec
jmp
das
xchg
popf
push
push
lea
xchg
test
aam
adcb
rolb
gs
fldl
inc
cmpsl
sub
push
imul
daa
outsb
sub
cmp
dec
mov
jge
adc
mov
orl
movsl
mov
push
xchg
ret
add
mov
mov
imul
sub
inc
mov
rcll
fcoml
test
mov
inc
xchg
repnz
mov
mov
jae
adc
in
les
loope,pt
decl
jne
push
mov
testl
mov
rclb
fxch
and
xchg
outsl
iret
inc
push
inc
push
aad
pop
in
mov
jecxz
cmp
rcrl
and
stos
fidivrs
xor
adc
pop
inc
mov
adc
rcr
test
jbe
pop
scas
sbb
pop
out
add
adc
hlt
or
cmp
sarb
das
iret
jae
dec
dec
cmp
jno
in
loope
fiadds
sub
sub
out
daa
test
addr16
loopne
cli
cmp
dec
inc
test
dec
xor
ja
rolb
or
lahf
test
xor
insb
push
popa
testl
lret
pop
jle
push
mov
sub
push
das
ret
test
outsl
mov
push
roll
adc
xlat
aaa
push
mov
sbbb
test
stos
push
push
mov
push
lcall
push
or
push
sahf
xchg
stos
jp
push
mov
xchg
jmp
add
in
fnop
ret
mov
push
mov
insl
xchg
pop
notl
fwait
sbb
int
cli
call
mov
mull
shlb
and
pop
or
in
inc
mov
xor
lahf
insl
xchg
adc
int3
sub
inc
xchg
push
adc
aaa
push
xchg
push
jg
out
ficoms
daa
in
imul
cmpsb
dec
addr16
sbb
dec
ljmp
sbb
cmp
adc
dec
jbe
cmpsl
inc
shlb
andb
mov
mov
push
dec
or
sarl
daa
sub
divb
dec
pusha
cmpsl
adcl
mov
mull
mov
adc
adc
sbb
sbb
push
in
and
mov
fadds
test
push
add
lret
ret
and
add
pushf
rcr
inc
add
mov
idivb
sahf
and
mov
push
in
bound
dec
rcrl
stos
sti
fistl
xor
xor
scas
mov
inc
xchg
inc
fstp
jl
out
jmp
add
leave
xchg
push
push
dec
lret
mov
mov
loop
mov
aaa
cmp
adcl
pushf
sar
iret
aaa
pusha
push
loopne
adc
and
leave
mov
stos
lcall
xor
hlt
in
jne
rorl
cmpsl
sbb
mov
out
xor
stos
jmp
xor
pop
dec
pushf
inc
push
xor
xchg
fcmovnb
add
sub
lods
add
inc
pop
leave
or
in
imul
xlat
popa
stc
mov
adc
imul
popf
shl
in
xlat
mov
cwtl
push
dec
popf
xchg
xor
cmp
push
insb
sbb
push
rclb
jg
xchg
add
lea
push
mov
mov
loop
cmpsb
cld
jl
mov
in
xchg
in
add
cmc
or
sub
mov
inc
jle
push
push
cmp
in
inc
mulb
ljmp
add
cmc
divl
jp
xchg
adc
xchg
mov
cmp
loopne
addr16
insb
mov
adc
fcoms
lea
call
pop
jb
subl
pop
hlt
popa
xchg
or
pushf
sub
cmc
aam
shl
inc
adcb
push
rorb
inc
cs
adc
sub
mov
iret
popa
fists
mov
fsubl
fnstsw
adc
adc
int
es
jle
sbb
or
pop
iret
rol
xchg
xchg
in
ret
pop
adc
jge
popa
sbb
mov
enter
cmc
fsubs
push
in
inc
xor
cli
outsb
shll
and
test
mov
pop
mov
insb
out
cmp
xor
fs
fs
mov
ljmp
dec
movsb
jp
ret
push
push
leave
push
mov
push
mov
daa
scas
lock
subl
cwtl
popa
arpl
mov
push
mov
xchg
mov
dec
mov
sbb
popf
push
in
mov
mov
adc
mov
repz
scas
xchg
xor
xchg
dec
les
jg
mov
daa
add
mov
loope
push
xor
das
xchg
negb
scas
adc
call
lods
add
pop
cli
jbe
xchg
arpl
jmp
push
aaa
sub
popa
add
xchg
rol
int
je
mov
add
sub
gs
dec
ret
es
outsb
cld
cmp
or
fists
jne
mov
sbb
jmp
mov
mov
jl
pop
loopne
testb
push
test
jecxz
push
test
pop
pop
icebp
xchg
ret
adc
or
adc
xchg
jle
fbld
mov
faddl
lcall
xchg
scas
rcrl
aas
mov
lahf
add
sub
fisubs
es
jae
in
mov
movsb
insl
sub
mov
fwait
xchg
arpl
scas
fcoms
jnp
xchg
cmpsl
rcrl
fstpt
ljmp
fsubp
adc
pop
push
stc
lods
mov
xor
xor
xchg
jmp
jns
jb
lret
ja
popa
or
scas
sub
ficoms
mov
jns
out
xchg
int3
jp
lds
xchg
or
movsb
std
xchg
add
sti
sub
push
int
xchg
mov
mov
inc
cmp
xchg
sbb
dec
add
inc
data16
and
inc
das
push
pop
inc
scas
nop
dec
or
clc
aad
ret
fnstcw
mov
push
pop
imul
jno
call
adc
repnz
mov
inc
jb
cld
andl
stc
mov
aad
adc
pop
pmulhw
dec
loope
jecxz
adc
fsubrs
rol
cmp
pop
sbb
sub
out
fwait
mov
enter
dec
and
orl
leave
fadds
jo
xor
imul
and
push
mov
sbb
and
ret
pop
or
shll
mov
jp
out
ljmp
in
cwtl
sub
sub
cmp
xchg
mov
bound
aas
add
xchg
nop
xor
adc
inc
jge
jbe
leave
lds
push
and
mov
or
ss
mov
jnp
cs
sub
or
jg
pusha
inc
clc
sti
mov
and
adcb
adc
hlt
sub
jmp
sub
rolb
sbb
lahf
fcoml
sbbl
mov
adc
addl
aam
mov
pop
mov
mov
repnz
out
mov
dec
add
cmp
data16
lahf
rcll
ljmp
cmp
mov
push
dec
ret
outsl
test
sub
aas
mov
test
mov
subl
in
or
imul
sbb
fsub
xor
cmpsl
je
in
dec
fs
dec
add
adc
lcall
insb
rep
xchg
lahf
arpl
pushf
pusha
sahf
rorb
add
rorb
mov
in
cmpsb
imul
dec
mov
cmp
cwtl
iret
outsb
or
testl
jmp
jae
fdivrp
dec
push
mov
xlat
scas
ret
int3
pushf
cli
fistps
sbb
fildl
repz
add
ret
out
dec
repz
pop
mov
bound
jns
inc
std
outsl
mov
sbb
loop
jo
xor
subl
add
add
cmc
and
push
jg
xchg
sbb
ds
movsb
aam
inc
push
das
or
clc
pop
int
adc
fwait
mov
push
fdiv
movsb
bound
mov
push
or
aaa
imul
push
das
cmp
pushf
icebp
imul
bnd
fidivl
ljmp
or
mov
xor
and
jmp
sbb
mov
or
push
jg
mov
sbb
fidivrl
cmp
ds
pop
add
adcb
pop
mov
adc
std
push
xlat
loope
adc
dec
int
repz
mov
repnz
lock
movsl
in
jmp
rol
shl
test
roll
aaa
outsb
jecxz
into
sbb
push
fwait
sub
jecxz
aas
pop
push
mov
or
scas
jo
and
xacquire
adc
or
jg
in
aaa
push
imul
and
icebp
ret
popa
fildll
sahf
inc
pop
cmp
ss
jo
xor
dec
loope
scas
cmp
lcall
orb
leave
addb
xlat
pop
xchg
lds
adc
mov
lods
fdivrs
xor
pop
lret
jmp
jle
daa
mov
mov
ljmp
mov
pop
push
shll
dec
movsl
xor
push
mov
lret
push
mov
xchg
aaa
pop
jmp
sub
sbb
frstor
test
push
push
fwait
adc
inc
testb
push
out
add
call
loop
adc
push
dec
adc
sub
adcb
imul
outsb
cmp
sub
push
into
icebp
add
cld
addb
cs
cs
icebp
mov
mov
push
sub
repnz
stos
inc
arpl
jnp
inc
or
nop
js
es
adc
int3
stc
cmp
fs
out
sahf
fs
clc
push
xchg
jbe
and
pop
test
xor
enter
imul
bound
loopne
shld
pop
mov
fstpt
fstl
fidivs
jno
dec
imul
mov
or
inc
pushf
les
cwtl
or
icebp
das
rcrb
js
dec
lcall
mov
add
dec
scas
not
inc
sub
popa
mov
push
and
mov
sarl
xor
mov
fcoms
xor
mov
cld
into
adc
movsl
mov
stc
add
add
sbbb
mov
in
mov
sub
xchg
or
pop
jge
mov
inc
cmpsb
cmpsb
cmc
jb
aam
dec
jnp
gs
sahf
cmp
pop
dec
cmc
icebp
xchg
sar
jo
jp
test
shrl
push
notb
rcll
rcl
ja
push
lcall
into
sarl
imul
inc
in
ret
jge
nop
sub
idiv
mov
xor
and
push
int3
mov
stc
xor
ficompl
stc
push
ds
clc
cmc
xchg
inc
inc
pop
sbb
xor
sub
lret
and
mov
jne
inc
xchg
xchg
push
push
and
fld
push
insl
into
arpl
adc
inc
add
push
dec
add
bound
mov
daa
mov
mov
and
stc
inc
rcll
jl
jmp
adc
int
in
mov
std
hlt
sbb
aam
out
cs
in
lds
xor
cmpsl
jns
add
cs
clc
mov
rcrb
fprem
push
sub
xchg
pop
mov
icebp
sbb
pusha
dec
dec
les
push
lods
dec
testb
movsb
adc
mov
cmc
dec
jne
pop
daa
sub
jecxz
sub
mov
loopne
mov
into
js
ja
jns
insl
mov
xchg
into
inc
xchg
xchg
lods
mov
lods
std
mov
pop
loope
ret
dec
jno
cmp
adc
ret
inc
scas
aad
out
mov
shll
cwtl
push
jp
cmp
mov
sahf
inc
jns
add
cmp
aam
push
je
test
daa
aaa
cmp
stc
pop
in
setbe
scas
jbe
out
push
dec
adc
fxch
test
clc
or
push
jbe
out
and
inc
cwtl
sahf
mov
arpl
cli
push
fidivl
push
xor
jnp
inc
lret
inc
int
pusha
fldcw
fdivrs
jg
jle
jne
push
popl
cmpsb
push
push
movsl
nop
stos
cmp
or
cmp
addl
mov
lods
shlb
sbb
xchg
cmp
lea
stc
pop
mov
inc
or
andb
adc
or
decl
mov
outsl
push
insl
stos
test
in
jp
add
cmp
inc
fstl
cmp
mov
fs
shll
xor
cmpsb
shll
add
push
sub
mov
leave
push
cwtl
imul
adc
pop
insl
jl
fwait
mov
and
mov
shrl
out
fcomip
pop
roll
ja
mov
add
pop
jne
loope
sub
xchg
leave
fs
movsl
cmp
dec
xchg
xor
and
push
and
mov
and
inc
jle
fisttpll
cmp
out
stos
or
sar
mov
jns
call
sub
je
push
clc
mov
adc
mov
push
lds
addr16
je
push
cmp
xchg
cli
inc
out
push
std
leave
push
dec
movsl
jg
mov
outsl
sarl
rcrl
cmp
mov
cmpsl
pop
dec
int3
call
rol
inc
lcall
out
mov
xchg
xchg
adc
sub
mov
sub
or
push
cmp
inc
lea
mov
out
push
pop
or
sub
loope
popa
jmp
or
shlb
clc
stc
out
ja
sbb
mov
es
fs
out
sbb
mov
add
mov
sbb
es
mov
aam
sti
lcall
movsl
std
mov
leave
in
mov
sahf
or
js
shlb
inc
xchg
inc
aad
lds
and
mov
push
add
xchg
ja
jmp
mov
gs
push
cmpsl
std
js
mov
cltd
xor
aam
fisubrl
aaa
aas
push
push
xchg
js
and
or
adc
outsb
lods
rclb
aaa
dec
imul
dec
out
mov
jb
inc
dec
das
mov
arpl
pop
mov
mov
lds
dec
shrl
mov
int3
cmpl
xor
test
or
adc
push
and
call
mov
xor
js
leave
push
movsb
push
sahf
fildl
mov
lds
and
lea
jmp
aam
pop
pop
or
ret
hlt
icebp
mov
mov
jp
add
scas
lcall
out
mov
test
mov
cmp
xchg
mov
aam
xchg
stos
and
xor
lds
push
aam
jecxz
das
jmp
imul
and
dec
clc
mov
mov
sub
std
xor
lods
cmp
mov
dec
clc
insb
inc
sarl
sarl
lret
rcr
cld
idiv
dec
push
jp
dec
or
lds
pushf
std
push
xchg
pushf
sti
je
movsl
or
stos
mov
lods
xor
icebp
adc
push
mov
test
mov
imul
push
pop
neg
test
out
arpl
and
mov
push
jb
mov
std
shlb
mov
pop
call
scas
and
jcxz
cmp
imul
mov
int3
xchg
add
mov
in
adc
sbb
in
cld
xor
test
mov
enter
push
repnz
inc
jl
fldcw
xchg
adc
xchg
sub
test
mov
hlt
push
fcmovnbe
shl
repnz
jge
xor
in
bound
xchg
jg
bound
push
dec
lcall
pop
outsb
lahf
ljmp
ss
add
pop
push
iret
jecxz
jno
insb
mov
mov
mov
dec
icebp
push
mov
cmp
jae
jb
xor
test
xor
out
sti
div
or
sbb
add
mov
push
push
inc
mov
stc
push
add
pusha
add
jne
xchg
shll
mov
and
popf
jo
shr
xor
std
fucomp
and
pop
inc
xchg
lods
jno
pop
xor
ss
mov
dec
jl
bound
mov
fwait
adc
aaa
hlt
add
dec
mov
xchg
out
jmp
scas
push
pop
push
lret
jmp
xor
push
push
xor
jne
frndint
mov
and
ljmp
pop
imul
dec
jl
dec
add
jge
outsb
cli
mov
nop
xor
aam
idivb
sarl
bound
movsl
cs
push
xor
cmp
int3
jbe
fs
pusha
inc
test
nop
pushf
xor
daa
sbb
xorl
dec
sbb
adc
xor
imul
pop
addr16
and
insb
test
xor
or
test
push
test
ret
sbb
gs
sar
add
and
push
inc
lds
into
jnp
inc
gs
xor
out
or
adc
push
push
aad
and
stos
mov
movsb
or
jbe
xor
push
push
xor
inc
aad
aaa
lea
xor
dec
leave
sbb
sar
in
insb
jmp
mov
xchg
std
scas
xor
lock
xor
mov
or
pop
sahf
xor
lea
mov
adc
ret
rcrl
xchg
fisubs
das
sub
insb
les
mov
adc
nop
xor
hlt
int3
sbbl
adc
out
lea
imul
popa
fimull
mov
dec
mov
mov
ljmp
cmp
xor
adc
and
jbe
pop
jp
outsl
fidivs
mov
sub
sbb
adc
lahf
lods
dec
aas
testl
int
or
mov
cmc
push
jg
add
nop
xlat
adc
and
in
mov
xor
test
enter
sbb
mov
pusha
shrl
or
iret
arpl
lds
es
jb
aam
inc
or
and
rolb
mov
imulb
lahf
fnsave
popf
test
push
mov
shl
push
adc
imul
inc
mov
test
cmp
cli
les
in
pushf
dec
sub
repz
nop
mov
sub
cmc
addr16
dec
dec
push
xor
lods
ja
xchg
xor
aam
lods
sbb
mov
and
mov
cmp
sbb
adc
sbb
sub
lods
adc
test
sub
pop
mov
cwtl
mov
gs
sahf
jae
mov
xchg
stos
dec
imulb
cmp
mov
dec
popa
fldcw
test
xchg
push
ficoms
fsub
xchg
fdivrl
push
sub
lds
jmp
push
pop
rol
aaa
cmp
les
xchg
test
das
shrl
jl
addr16
je
add
and
out
mov
imul
lock
mov
repnz
int3
mov
jnp
cmp
push
push
incl
int3
push
pop
mov
out
push
mov
and
pop
mov
push
inc
lods
nop
mov
jle
push
jae
jnp
jmp
stos
adc
dec
push
mov
jnp
les
mov
fdivs
adc
outsb
adc
fidivs
js
int
sub
cld
shlb
mov
pop
mov
testl
das
ds
stos
jp
pop
xchg
mov
mov
dec
or
seto
stc
fdivl
mov
and
icebp
or
filds
jbe
mov
stc
not
fs
xor
add
mov
and
push
fldt
push
stc
cmpsb
into
sub
and
shlb
and
jb
orb
jmp
cltd
cmpsb
mov
icebp
sbb
mov
mov
mov
push
mov
dec
mov
out
fistl
cmp
push
mov
pop
fwait
add
dec
push
nop
sbb
cld
mov
jl
jb
adc
xorb
mov
push
jnp
jb
call
add
stos
pop
xchg
stos
inc
cmp
call
insl
nop
xor
add
or
or
clc
popf
dec
cmpsb
sub
enter
cmp
adc
jae,pt
das
je
pop
aam
pop
in
insl
popa
xor
xlat
sbb
add
xchg
pop
test
inc
add
mov
dec
jnp
push
dec
outsl
test
lret
lahf
mov
jo
inc
jnp
xchg
scas
loope
std
in
inc
popf
sbb
mov
clc
inc
or
and
imul
push
and
cmp
push
fsubs
mov
add
fiadds
jbe
add
jbe
fdiv
sub
lret
dec
adc
fnsave
mov
inc
sbb
sti
jno
cmp
loope
repnz
pop
das
aas
sub
shl
lcall
and
xchg
pop
sub
or
dec
cmp
loope
mov
jns
lock
xor
dec
sub
fstpl
loopne
lret
std
push
push
and
dec
mov
jg
lods
push
fbstp
test
add
or
jne
jo
fnstenv
inc
in
push
xchg
fldenv
mov
sub
sbb
addb
sti
inc
imul
pop
and
xor
sub
cmpb
loopne
jno
cltd
aam
ss
icebp
cmp
aad
fisubs
and
movsb
pushf
loopne
psubq
sub
mov
add
push
sti
xor
movsl
pop
sbb
xchg
repz
outsl
push
or
jb
mov
jnp
je
push
dec
adc
or
fisubl
mov
and
lds
cmpsb
movsb
push
lds
or
cltd
xchg
lea
pop
das
rolb
jle
shufps
pop
out
mul
rcrb
sub
add
js
and
xchg
cmp
mov
je
mov
xchg
scas
test
pop
inc
andb
push
sahf
and
pop
stos
adc
push
cmpb
jbe
jno
in
cmp
aaa
js
aaa
and
dec
and
jno
rcrl
and
mov
jp
mov
jo
in
mov
mov
in
in
pop
flds
cmpxchg
mov
neg
cmp
xchg
and
mov
cwtl
aam
sbb
enter
inc
shl
nop
xor
jnp
fcompl
xor
sbb
mov
and
sub
pop
icebp
and
cmp
loope
insl
sub
or
fs
or
inc
push
insl
movsb
add
aas
ret
pop
mov
jg
cmp
sbb
mov
into
xchg
in
lret
ficoms
or
in
shrb
in
adc
mov
addr16
jge
ss
inc
call
dec
shlb
int
ja
jbe
ror
and
lods
cmpsl
add
pop
push
fidivl
add
ljmp
sub
in
ret
dec
xor
pop
xchg
and
aaa
and
mov
jbe
filds
outsl
sbb
lods
stc
sarb
sub
mov
negb
arpl
imul
push
aad
pop
push
in
and
sbb
mov
xor
jns
loop
pop
lock
stos
test
dec
mov
add
add
inc
xchg
mov
mov
sahf
ds
adc
movsl
std
jg
or
test
out
inc
push
cs
incl
adc
sbb
cwtl
and
and
adc
cmp
sub
xchg
inc
xchg
call
cs
fisttps
add
mov
adc
sahf
shr
mov
inc
lret
js
stos
icebp
or
push
ss
mov
push
mov
mov
movsb
xor
daa
pop
xor
je
icebp
inc
sub
push
xchg
lea
adc
and
testl
ret
shl
jle
test
sub
and
loope
mov
addl
sub
jo
or
adc
and
push
cld
mov
cmpb
clc
or
sub
jbe
pop
in
int3
push
aaa
nop
dec
int3
in
and
sarb
aad
jmp
add
test
lcall
fisttps
into
jns
mov
cmpsb
imul
pop
pop
rcl
add
adc
call
mov
and
cs
push
sub
add
movsb
outsb
iret
mov
sbb
xchg
out
pushf
push
fcmovbe
mov
push
outsb
pop
call
loopne
mov
movsb
push
mov
test
addl
fsub
outsl
jnp
stos
pusha
push
push
or
adc
das
inc
jno
fstl
jge
pop
add
inc
mov
shl
cmpsl
lds
xor
mov
pop
insb
mov
inc
jmp
inc
insb
and
test
clc
mov
int
xchg
and
mov
ret
jns
fistl
mov
inc
sub
jnp
jb
push
rcr
fistpll
clc
add
dec
nop
aam
in
imul
ljmp
xorl
sahf
add
imul
jl
ret
loop
pop
dec
cmp
mov
jl
or
push
or
sub
or
xlat
rcrl
add
roll
pop
std
pop
repnz
rorb
cmp
jne
mov
fnstsw
sbb
mov
lcall
cld
mov
arpl
into
mov
bound
insb
dec
pop
jb
add
decl
adc
add
movswl
sub
jns
cltd
inc
jp
lea
cmp
push
mov
cmp
add
xchg
rolb
pop
aam
xchg
icebp
aam
lods
add
adc
push
call
loope
inc
in
idivb
pop
loop
cwtl
adc
sub
cltd
shl
jnp
jecxz
jp
pop
dec
adc
xchg
inc
maskmovq
testl
mov
dec
ret
mov
sbb
jae
xchg
cmp
test
xor
mov
test
add
addr16
nopl
shl
jo
mov
cmp
in
pop
mov
pop
insl
repz
and
and
or
shlb
adcl
out
pop
and
xorl
dec
mov
test
and
sub
in
or
lcall
or
ja
jp
sbb
std
adc
loopne
mov
push
jge
push
sti
sbb
mov
push
into
pop
fsubrl
mov
lret
and
mov
mov
cmp
dec
mov
xor
dec
jbe
bound
xor
jbe
outsb
popf
xor
popa
mov
and
dec
jecxz
bound
aaa
mov
call
xor
ljmp
cmc
xchg
movsl
push
mov
sub
adc
stos
orl
in
mov
mov
cmp
insb
lea
icebp
pop
in
mov
cli
pop
outsb
and
adc
inc
pop
or
push
mov
sub
movsb
mov
jmp
sti
xor
push
lea
push
inc
aaa
lods
dec
nop
and
cli
outsl
jmp
pop
dec
push
test
movsb
xlat
lret
les
jno
faddl
data16
fiadds
push
xchg
push
es
or
or
mov
imul
pusha
data16
push
flds
add
ljmp
mov
in
rolb
mov
add
mov
or
mov
xchg
cld
inc
das
repnz
xchg
aas
and
dec
cwtl
cld
lods
jmp
mov
adcl
xor
jle
enter
adc
jns
mov
dec
lea
mov
sbb
pushf
add
push
cwtl
push
dec
scas
mov
ljmp
push
jo
shrb
xor
xlat
icebp
cli
les
rorb
mov
mov
in
pusha
mov
pusha
popf
push
loope
inc
call
mov
sbb
stos
fbld
mov
jno
mov
add
push
inc
stc
pop
jge
push
push
and
or
mov
movsb
sub
mov
jle
or
pop
jae
cli
and
cmp
pop
add
mov
pop
mov
insl
add
push
test
js
test
mov
flds
adc
push
xor
test
lea
xor
ja
sbb
mov
mov
adc
push
out
test
add
push
call
add
pop
mov
inc
pop
and
mov
push
and
adc
jnp
lcall
and
mov
jbe
mov
mov
adc
jbe
test
pop
add
xor
jle
push
xor
sbb
pop
mov
adc
bound
in
mov
pop
cwtl
insb
cwtl
jge
scas
out
push
xor
jge
inc
out
push
and
mov
xchg
adc
lods
aas
imul
push
cmp
pop
shlb
in
adc
jns
or
lds
xor
push
cltd
jg
xchg
popa
into
jbe
and
call
adc
stos
leave
call
add
in
fcmovb
mov
mov
jbe
call
adc
sarb
gs
pop
int3
inc
pop
insb
stos
add
test
movsl
push
pop
xchg
xchg
lods
das
sbb
cwtl
inc
mov
cmp
jo
test
jnp
jo
add
mov
aam
xor
or
mov
or
popf
or
ds
xchg
push
sti
repnz
jmp
inc
decl
push
sbb
and
das
push
xor
cmc
mov
js
sbb
add
adc
fldl
push
lds
cli
cmp
out
sbb
insl
push
sbb
cmp
jns
add
bound
not
in
outsb
or
mov
mov
das
adc
sub
test
fstl
adc
iret
pandn
aad
xchg
adc
mov
sub
sbb
leave
test
fsubp
sahf
mov
popa
mov
pusha
int3
fidivs
adc
repnz
pop
lock
jb
popf
lea
pop
and
pop
mov
mov
in
cmp
hlt
xor
mov
nop
movsl
fs
mov
push
scas
out
das
repz
push
lds
daa
popa
cmp
mov
rorb
xlat
filds
popa
dec
out
insl
dec
inc
push
das
aas
dec
loopne
cli
inc
adc
mov
mov
adc
movsl
outsb
sarl
jno
pop
out
pop
sbb
dec
jno
shrb
fwait
stos
cmc
sub
cmc
adc
jmp
and
repnz
rcl
push
in
adc
push
add
aaa
icebp
les
int
push
test
outsl
pop
fistpll
cmc
test
jecxz
repnz
testl
mov
dec
mov
fsubrl
pop
repz
add
jp
and
pop
arpl
mov
xchg
movsl
sahf
mov
mov
xchg
rcll
dec
jae
mov
pop
movsb
int
in
lret
mov
xor
outsb
push
cwtl
in
sub
cwtl
xor
cmp
subl
incl
cld
je
sbb
pop
movsb
loope
add
cmpsb
je
popf
hlt
dec
in
sub
add
jg
mov
xlat
mov
call
cmpsl
inc
jle
pop
mov
fwait
imul
or
and
ret
cmpb
insl
xor
sahf
popa
jnp
and
cmp
push
inc
arpl
mov
daa
or
sub
pop
inc
movsb
inc
mov
dec
push
push
test
fs
push
inc
adc
hlt
xchg
fwait
push
les
movsb
mov
jbe
fidivrs
sub
lds
in
xchg
out
popa
cmp
je
sub
lahf
stos
push
dec
sbb
jle
or
fmull
js
pop
xor
in
cli
inc
push
roll
add
lar
add
push
aas
sub
jnp
jecxz
xor
xchg
bound
jle
arpl
aad
jg
xlat
adc
adc
or
xor
fadd
in
xchg
cmp
sub
cmpsb
lods
fsubrs
mov
popa
inc
icebp
fwait
leave
insb
fadd
xchg
xchg
lret
stos
lds
insl
pop
push
fnsave
push
jecxz
push
bswap
into
mov
cmpsb
into
ret
fiaddl
sahf
add
xor
or
test
in
lods
sub
mov
leave
jl
enter
xchg
add
loop
xchg
mov
lock
pop
test
scas
rcrl
repz
aaa
and
movsl
xchg
or
sub
ficoml
mov
sub
xchg
xor
fsubl
imul
xchg
ret
cld
cmp
aam
add
add
shrb
mov
pop
ret
sbb
stos
pop
sub
out
ljmp
leave
loopne
xchg
shrb
insl
mov
addb
cmp
enter
sub
or
dec
pop
lahf
cmp
jo
adc
lahf
xor
cmp
ret
ror
xor
xchg
or
push
test
ljmp
push
jl
ja
mov
outsl
movsl
hlt
pop
outsl
jne
sbb
push
sahf
inc
nop
pop
mov
mull
mov
sub
lods
pop
filds
xlat
sbb
mov
sti
xor
aad
add
push
mov
pop
or
pop
mov
mov
xor
mov
scas
pop
fcoml
enter
mov
imul
and
sbb
push
xor
lret
mov
clc
push
jo
insl
cmp
xlat
std
pop
loop
and
test
or
mov
ja
add
sbb
push
nop
test
loop
rcrl
cwtl
jecxz
cmpsb
add
mov
xor
fwait
jecxz
cmpsb
fwait
sbb
pop
out
fbld
cmc
fs
ret
das
pop
and
insl
lea
jl
cmpl
push
addb
loopne
notl
add
and
jbe
sbb
stc
sub
sti
mov
sahf
jmp
fs
push
out
sbb
gs
sub
clc
je
and
mov
cltd
mov
sbb
pop
sbb
rol
repnz
notl
sbb
sbb
push
pop
scas
mov
mov
cs
pop
xor
lods
popa
shll
lret
mov
push
mov
and
fdivp
pop
popf
pop
push
sub
ret
in
mov
inc
dec
jae
bound
aam
xor
adc
cmpsl
insl
popl
sbbb
jmp
outsl
test
push
dec
mov
pop
pop
mov
imul
insl
inc
out
lods
pop
pop
shr
mov
aad
cmpsl
std
push
sbb
mov
addl
jecxz
sbb
mov
or
xlat
xchg
cld
mov
jmp
orb
outsb
and
in
sub
test
mov
loop
cmp
cmp
inc
push
movsb
iret
fnstsw
stos
cmpsb
or
ja
push
sbb
pop
stos
fmull
jb
loope
test
fdivs
jae
out
cmp
nop
pop
leave
adc
push
xlat
adc
mov
pop
xor
stc
pusha
imul
in
push
ficoms
cmp
adc
inc
aas
pop
ljmp
imul
dec
inc
str
test
sub
xor
es
pop
xchg
mov
push
sbb
and
pushl
xor
jl
push
pop
xchg
clc
jmp
pop
cwtl
xor
pusha
dec
iret
rcrb
in
or
cmp
pop
les
add
or
je
push
xchg
imul
mov
xchg
or
xor
pop
adc
push
movsb
adc
dec
inc
push
loop
add
adc
in
push
jo
cs
into
mov
xor
scas
ss
in
add
add
cli
ljmp
lret
pushf
push
pop
jnp
lock
inc
lcall
mov
xor
pusha
das
xor
je
rep
sbb
ret
paddw
and
mov
aas
mov
sub
adc
orb
push
shll
jns
rcr
cmp
roll
sub
push
jl
push
je
jae
hlt
outsl
inc
addr16
push
ljmp
lcall
repz
test
xchg
test
rclb
adc
pop
out
outsl
push
je
sbb
mov
jo
push
loopne
and
mov
fnstenv
enter
mov
sbb
cmp
fimull
adc
das
rcll
cmc
testb
ljmp
pop
xchg
pop
js
fcoml
inc
cmc
sbb
mov
insl
nop
rclb
popf
movsl
cmpsl
fs
cmp
rcr
dec
loopne
cld
cld
pop
das
xchg
or
lret
popa
shrl
xor
ja
shrb
inc
inc
orl
pop
mov
mov
test
add
push
cs
pop
xchg
ja
sub
insl
pop
stos
cmp
mov
dec
lret
jno
les
popa
lret
dec
add
sub
stos
jg
iret
mov
roll
inc
push
outsl
movsl
push
mov
test
popf
dec
fidivs
arpl
in
xor
cmpsl
push
or
sbbl
into
int
push
lea
xor
mov
ja
cmp
rcll
adc
daa
mov
outsb
add
jp,pn
lret
leave
jecxz
stos
mov
sbb
or
iret
push
adc
push
imul
shll
bound
dec
lahf
mov
jb
xchg
push
addr16
cs
fcoms
inc
lock
out
faddp
xchg
cmp
push
dec
pop
lret
jnp
stos
ljmp
sbb
out
sub
out
xlat
push
hlt
mov
stc
pop
adc
pop
cmp
xchg
pop
rorb
sbb
mov
popa
imul
xor
inc
cli
push
test
push
outsl
inc
call
int3
push
pop
fwait
cmp
mov
rcrb
aam
insl
jecxz
and
addr16
cmp
std
imul
mov
shll
mov
gs
insb
cli
pop
and
jns
stc
mov
stc
lahf
mov
or
sbb
rcrb
xchg
xchg
pop
adc
mov
enter
inc
or
subl
roll
ja
pop
mov
adc
dec
sti
xor
stos
or
jmp
ret
push
vpshufhw
movsl
mov
sahf
mulb
ja
adc
das
fiaddl
jnp
cmp
cs
test
fcmovnu
cmc
jg
into
mov
pop
pop
dec
or
rorb
mov
jmp
icebp
gs
mov
mov
cld
lods
sub
in
ss
and
xor
inc
shlb
pop
xchg
leave
cmp
cli
dec
ds
sbb
int
or
lret
fidivrs
test
or
es
mov
mov
push
cmpsb
rorl
punpcklwd
pushf
test
scas
xchg
dec
sub
add
dec
fcomps
loopne
sub
inc
jecxz
iret
jb
rcr
insl
fiaddl
mov
xchg
add
jl
pop
xor
push
push
notb
sarb
inc
into
pop
je
aas
lds
dec
mov
mov
jecxz
scas
add
fildl
inc
stc
scas
fwait
sti
lds
addr16
dec
add
or
sub
xchg
stc
stos
pop
cmp
inc
push
fsubp
or
pop
dec
movsb
shll
lret
pop
push
call
add
outsl
test
test
pop
mov
adc
push
sub
push
jg
imul
pop
bound
xchg
mov
push
inc
insb
sahf
insb
and
jle
sbb
jp
xor
mov
dec
sbb
in
aas
iret
stos
pop
cmp
lret
xchg
jp
push
mov
rorl
xchg
out
mov
test
dec
dec
lea
pop
mov
jae
sbb
mov
clc
rcrl
sub
cmpsl
test
adc
add
fidivs
lret
dec
data16
adc
mov
or
lcall
les
aad
sbb
popa
nop
and
mov
test
es
testl
sti
stos
mov
sbb
xor
or
fwait
daa
xchg
scas
adcb
adcb
nop
mov
lcall
xchg
mov
in
cltd
mov
push
xor
in
int
push
mov
iret
xor
mov
pop
scas
xlat
orb
and
test
push
xor
jns
inc
ja
rcrb
or
nop
repnz
mov
or
push
clc
rolb
or
test
or
mov
cld
mov
lock
pop
pop
pop
add
sub
popa
xchg
sbb
mov
cmpsb
scas
and
clc
pop
jmp
movsl
sub
fwait
and
xor
sub
jb
ss
test
cmp
clc
xchg
stc
push
call
lret
mov
xchg
cli
dec
in
sbb
cltd
js
int3
mov
sub
sbb
stos
inc
pop
xor
push
jp
mov
dec
call
fwait
mov
sub
pop
daa
scas
and
cld
fwait
xor
push
pop
out
sbb
sahf
imul
ds
scas
filds
out
push
xchg
mov
rorb
cmp
adc
fs
xor
outsl
cli
xor
xchg
fwait
jg
inc
pop
sub
sub
rcrl
lea
ja
inc
out
pop
dec
jo
rolb
and
xchg
lret
add
pushf
stc
cli
call
jmp
shlb
int
lret
insb
arpl
out
cmp
test
add
add
mov
daa
popa
std
repz
sti
bound
test
jo
push
in
fsubrl
in
adc
nop
popf
addr16
mov
sbb
lret
in
cs
add
mov
hlt
out
jns
imul
stos
mov
les
fimull
mov
int
loope
jbe
add
mov
fistps
fdivs
mov
jno
jg
sar
pusha
mov
jp
adc
dec
lcall
cltd
cmp
xor
push
xor
std
or
or
mov
or
and
inc
rcrl
mov
out
xor
lahf
mov
dec
shlb
lods
sub
std
test
inc
cmp
imull
jecxz
mov
rcll
es
orb
xchg
mov
cmp
pop
inc
mov
push
insb
mov
mov
scas
fnstcw
xor
lock
xchg
dec
ret
pop
js
jb
jbe
sub
sbb
icebp
and
pop
movsl
insb
sbb
sahf
mov
cwtl
cmc
sar
push
in
add
dec
test
imul
jo
add
xor
nop
sub
dec
add
push
mov
loope
cld
mov
sbb
add
jp
icebp
or
sti
push
int
xor
mov
jae
sub
push
stos
imul
jmp
loop
jmp
stos
rcl
cmp
dec
or
aam
stos
cli
mov
cli
add
jge
cmp
arpl
cmp
int
decb
andl
arpl
and
andb
js
sub
sub
ss
adc
mov
sbb
mov
xor
xsaves
inc
and
jl
div
dec
adc
xor
push
jns
mov
out
xchg
push
xor
dec
outsl
mov
fisubl
sub
fldl
clc
dec
movsl
cltd
ficoms
inc
push
sbb
jne
movb
xchg
mov
movsb
xchg
movsl
xor
aam
cli
into
int
and
xchg
movsl
jnp
frstor
xor
mov
mov
sub
mov
fnsave
gs
loopne
arpl
enter
push
sub
cmpsb
cmp
dec
aad
insl
mov
xchg
pop
mov
dec
mov
aas
cmp
pop
push
mov
push
xchg
xor
jg
push
pop
mov
cmp
vphaddwd
mov
mov
mov
insb
pop
mov
in
dec
or
int
mov
insb
dec
sub
aam
add
push
jl
inc
cwtl
mov
dec
adc
mov
rcll
dec
pop
mov
pop
bswap
div
clc
into
and
jno
inc
data16
test
loop
mov
leave
and
mov
jl
jle
les
xchg
loopne
shll
pop
xchg
jb
mov
clc
adc
push
mov
popf
jae
popf
xchg
mov
repz
mov
addr16
lds
fdivs
mov
xor
push
inc
pop
mov
lds
in
sub
add
aam
xor
push
xchg
xor
adc
dec
imul
imulb
or
das
aad
cmp
xchg
outsl
pop
hlt
stos
jae
mov
fmuls
les
jl
cmp
dec
xchg
lea
addr16
fidivrs
shrl
push
sub
pop
pusha
int
loopne
dec
jnp
repz
inc
add
mov
sub
loope
push
cmc
mov
sbb
movsl
data16
addb
sub
jo
sub
mov
jnp
sub
mov
or
icebp
call
mov
pop
mov
test
mov
sbb
mov
dec
jp
or
dec
ja
insb
and
sbb
jg
mov
sub
pop
adc
push
stos
jno
pop
fsubs
mov
cld
sub
mov
addr16
mov
loope
test
int3
aam
pop
es
int3
aaa
jecxz
out
ror
in
test
pusha
test
cmp
xchg
clc
pop
xlat
lea
bound
pop
mov
sub
inc
lret
test
or
xchg
jg
or
decb
sti
nop
push
cmc
push
clc
cltd
gs
pop
pop
fldl
movsl
or
xchg
test
stos
cmpb
outsb
xchg
js
pop
std
imul
out
sub
stos
leave
lahf
dec
sbb
xor
xchg
jg
cmpl
lock
in
mov
lods
cmp
xchg
jp
mov
dec
out
aam
cwtl
pop
jno
in
sub
sbb
mov
dec
fcoms
mov
dec
aaa
lock
shrb
lret
and
xor
jmp
mov
jg
inc
add
cltd
mov
push
sub
sub
or
add
xor
jbe
mov
fcoms
xchg
pop
es
xchg
ja
test
xor
popf
test
ret
xchg
jnp
repnz
call
inc
lea
fst
dec
adc
les
das
aas
aas
or
sbb
andb
jno
les
mov
jo
int
out
test
movsl
or
loope
gs
dec
or
cmp
dec
movsb
add
inc
mov
cmp
std
jb
mull
add
arpl
rolb
call
es
in
rol
orl
int
jp
out
mov
sbbl
cmp
int
dec
subl
push
clc
inc
mov
xchg
or
add
js
inc
xor
ljmp
sbb
movsb
mov
mov
adc
loope
cmp
mov
mov
out
cmp
mov
mov
push
fwait
clc
jl
mov
test
and
push
or
shrb
nop
ret
popa
jg
push
imulb
mov
repnz
mov
out
fcoml
int3
insl
sub
addr16
mov
adc
fstpt
sub
adc
cmpb
jmp
inc
mov
cmp
push
cwtl
cwtl
rolb
int3
fnstsw
mov
xor
lds
xchg
test
jae
orl
and
lods
adc
hlt
jnp
pop
push
pop
pop
dec
cmp
pop
mov
add
pop
mov
xchg
popa
adc
mov
xor
mov
sbb
xor
xor
in
loope
adc
jo
mov
popl
xchg
dec
add
aas
cmp
out
es
int
xchg
enter
or
push
je
sub
mov
xor
jp
adc
push
ret
cmp
dec
rorb
add
test
adc
cmpsl
mov
imul
or
mov
popf
loope
cmpsl
or
xor
xor
movsl
dec
add
outsl
das
inc
cli
or
shrl
addr16
loopne
fcoms
mov
or
push
pop
cmp
xor
cmp
loope
lret
fadd
inc
push
jno
xchg
inc
les
push
hlt
cltd
push
sub
inc
mov
or
in
stos
mov
les
lds
mov
fs
push
or
and
and
cmpsl
cltd
pop
mov
ss
xchg
iret
dec
jno
dec
and
lcall
jge
fdiv
addr16
push
push
aam
xchg
decb
rcll
enter
adc
push
lea
je
jno
adc
int
cli
iret
stc
push
fwait
jl
lds
andb
dec
fstps
cld
pushf
push
inc
mov
dec
and
mov
test
dec
in
lret
cli
mov
mov
rcrl
xchg
xor
mov
sub
aad
out
jae
xchg
mov
mov
push
cmpsb
add
daa
mov
out
sub
mov
add
and
mov
xlat
out
jno
insl
cmp
adc
xchg
mov
loopne
aam
lahf
orb
rep
sbb
cmp
sarb
mov
push
into
cmp
loope
push
rol
mov
ficomps
sub
add
add
mov
int
in
sub
pop
das
sarl
jae
and
ret
jp
sbb
jns
jp
jge
pop
popf
add
outsb
daa
jne
insl
ffreep
and
sub
sbb
adc
sub
mov
sahf
add
push
adc
dec
test
mov
cwtl
xchg
pop
orl
or
push
in
dec
add
clc
jge
enter
loope
enter
rcll
inc
popf
fwait
cmp
adc
inc
rcrb
or
jo
jo
movsl
and
mov
dec
jnp
pop
jl
add
pop
cmp
mov
ss
lcall
pop
das
mov
mov
hlt
jo
or
test
mov
notb
xchg
imul
iret
decl
jb
leave
jge
and
aaa
mov
xor
repz
iret
jmp
outsb
pop
loopne
popa
adc
cli
adc
test
xchg
scas
jge
gs
push
sub
fwait
test
or
lret
in
pop
repnz
lock
sub
mov
js
out
sbbb
inc
add
dec
scas
stc
dec
into
in
pushf
lock
cmc
lods
fnsave
repnz
jnp
sub
pop
push
insw
gs
iret
dec
sub
dec
imul
xchg
aaa
push
jnp
xchg
cmpsl
and
cmpsb
into
adc
and
xlat
rcll
push
cwtl
mov
into
sub
dec
push
mov
loopne
mov
test
mov
lods
imul
mov
inc
das
jb
repnz
icebp
mov
nop
jle
sub
and
or
add
mov
lea
xor
cmp
sbb
sub
iret
pop
sbbl
test
inc
test
aad
mov
dec
lret
jnp
cmp
iret
push
cmpsl
icebp
push
iret
icebp
xchg
adcl
push
dec
shll
mov
sbb
jge
cmp
inc
in
stos
add
sbb
or
mov
aaa
mov
push
and
sahf
movsb
imulb
jnp
cmc
repnz
popa
mov
xchg
sbb
push
gs
adc
mov
adc
shll
int3
lcall
dec
pop
int
movsl
loopne
outsb
test
and
push
xchg
repz
dec
cmp
insb
arpl
outsb
xorl
or
lahf
mov
xor
jle
xchg
pusha
mov
mov
jle
lret
xlat
les
cmpsl
pop
icebp
pop
push
fsub
mov
test
or
incl
clc
push
aad
add
xchg
fcmove
pusha
mov
pop
xor
xchg
xchg
insb
sub
ljmp
mov
push
mov
mov
aas
into
mov
push
jns
mov
jecxz
sbb
ss
sub
in
sub
lds
stc
cmc
cmc
jecxz
add
cmpsb
dec
push
mov
and
sub
dec
les
inc
mov
lret
and
jmp
mov
fisubrl
mov
xchg
je
xor
aaa
adc
in
out
shrb
fldenv
fucom
sbb
fsubr
je
pop
test
loopne
sub
pop
inc
push
jl
jmp
adc
mov
movsb
and
shll
ja
arpl
pusha
movsb
jne
es
push
ss
jl
cmpb
add
add
add
inc
add
inc
cmp
cmpsl
jl
in
rol
daa
imul
mov
call
daa
dec
std
pushf
bound
fwait
jle
je
push
or
mov
enter
les
pop
jle
mov
je
sti
inc
push
pop
cmp
pushf
pop
xchg
jge
test
add
inc
rcl
int3
aad
mov
pushf
xchg
xchg
jns
cmp
mov
int3
ljmp
xchg
jmp
or
je
mov
pop
andb
push
gs
js
enter
push
sahf
popf
test
mov
rorb
lea
stos
loope
dec
loope
jp
arpl
mov
mov
mov
pop
out
push
shl
jbe
repnz
pop
daa
loope
arpl
and
jecxz
mov
xor
xchg
cmp
jle
loop
out
xor
mov
addb
or
xor
and
push
dec
sub
int3
jge
add
or
lock
loopne
lds
aam
lea
pop
or
jl
dec
cmp
pop
jmp
mov
xchg
cltd
cmp
dec
daa
xor
sbbb
repz
xchg
mov
dec
cmpsl
inc
dec
enter
imul
ret
xor
add
xlat
fildl
push
mov
push
outsb
fnstsw
popf
inc
add
in
xchg
add
dec
roll
mov
or
adc
into
fnstsw
pop
movsl
jl
pop
jo
nop
shrb
das
mov
mov
sti
sub
sarl
into
jmp
lahf
leave
push
outsl
or
push
sahf
jle
pop
fstps
repz
hlt
xor
in
pop
sub
addr16
test
movl
push
mov
lcall
sti
or
push
fwait
arpl
arpl
rorb
loop
jae
fidivs
push
mov
mov
test
test
inc
cmp
pop
cmp
cmp
xchg
xchg
enter
jmp
mov
lock
mov
in
in
push
insl
imul
xchg
aam
dec
xor
mov
push
lods
mov
sbb
sbb
cmp
in
dec
mov
fwait
xchg
jae
xchg
mov
mov
in
or
dec
sti
roll
sbb
cwtl
nop
fwait
adc
jo
repz
aas
cwtl
in
cmp
loope
rcrl
pop
sub
jne
sbb
adc
std
xchg
les
xchg
cmp
stc
or
adc
push
inc
out
and
pop
popa
jge
ss
jae
cld
lret
adc
sbb
jb
fwait
cwtl
mov
mov
mov
arpl
adc
rcrb
dec
lds
and
test
addr16
sarl
mov
cs
in
adc
or
or
pop
adc
push
mov
inc
int3
add
mov
shll
push
pop
js
push
push
aas
push
sti
rcll
add
int
adcl
stos
pop
xor
xchg
cmp
dec
adc
pop
lods
loope
jmp
mov
xchg
movsl
ss
inc
test
testl
in
mov
cwtl
out
jno
movsb
jne
pop
stos
rcrl
sbb
dec
and
cmp
jns
scas
jecxz
mov
sub
pop
dec
and
repnz
pop
sub
popa
mov
sbb
sub
push
in
daa
js
mov
test
call
jge
rcl
aad
mov
mov
xorl
push
jnp
cmp
add
or
dec
icebp
mov
mov
inc
insb
mov
mov
xor
jmp
pushf
mov
shll
pop
mov
mov
xchg
aad
les
jns
stos
cmpb
loop
mull
xor
dec
ljmp
xchg
lahf
insb
test
les
stos
jo
ljmp
enter
or
xor
hlt
sete
std
fldz
adcb
arpl
push
ret
mov
call
mov
mov
addr16
mov
movsb
daa
cwtl
push
sbb
inc
jle
jle
jbe
xor
mov
jns
lock
movsb
inc
jb
mov
push
inc
shlb
push
sub
aam
mov
xchg
lods
pop
cs
inc
lds
pop
mov
popa
cmp
xchg
jne
ljmp
jmp
std
dec
imul
movsb
lods
mov
std
mov
xorl
mov
ror
int3
jl
sbb
jge
ret
inc
jbe
sarl
sbb
jo
and
sub
test
outsb
arpl
out
call
rcr
sbb
das
jmp
ljmp
mov
pop
jno
jecxz
stc
fistpl
sub
adc
sahf
mov
loope
or
outsl
mov
pop
sub
div
mov
jecxz
cltd
loop
insb
pop
add
icebp
pop
mov
test
and
push
sub
add
dec
out
pop
mov
add
mov
and
and
mov
xor
inc
dec
nop
das
xor
push
inc
das
xor
mov
mov
into
xchg
not
lcall
mov
push
loope
sub
pop
ljmp
rolb
cmc
or
sub
sub
rorb
cs
outsl
outsl
xchg
mov
cmc
and
and
cld
rcll
rclb
mov
dec
sub
and
xchg
imul
xlat
imul
hlt
notl
int3
aaa
and
pop
inc
add
out
cmp
dec
int3
jle
adc
filds
cmpsb
or
cli
inc
jne
sbb
sbb
adc
jge
rorb
jns
outsb
sbb
dec
cltd
sbb
imul
popa
push
xor
roll
xchg
outsl
mov
push
addr16
das
add
loop
or
std
fucomi
xchg
mov
mov
push
mov
or
fwait
bound
dec
and
jae
xor
ja
sub
cmp
test
frstor
movsl
aam
bound
push
arpl
push
inc
inc
xchg
sub
mov
inc
mov
and
adc
flds
pop
pushf
test
sbb
out
or
push
jle
mov
pop
mov
adc
out
mov
mov
inc
lea
data16
jge
test
add
push
test
ret
push
adc
adc
in
mov
sti
stc
cmp
jns
aad
xlat
rcl
loopne
dec
jae
mov
cmp
jecxz
test
sahf
jo
xchg
sub
cltd
jne
or
mov
sbb
mov
clc
inc
jo
mov
fildl
fdiv
push
pop
insb
adc
and
std
pop
jae
hlt
int
faddl
mov
insl
fwait
xor
xor
add
jbe
shl
stos
inc
mov
inc
jg
scas
nop
into
push
jg
ret
ds
pusha
sti
enter
cmc
gs
jb
sahf
cmpsb
pusha
jg
shr
pop
shrl
sub
pop
jb
or
js
pop
push
loop
aam
cli
or
out
cmpb
adc
push
push
mov
pop
mov
ljmp
sub
aaa
repnz
mov
cmp
sub
sub
gs
loop
adc
pop
jg
fcomip
pop
dec
lcall
jg
push
xlat
bnd
pop
into
pop
notl
lods
xor
popf
gs
pop
mov
ljmp
mov
ja
fst
movsl
lods
inc
mov
fs
xor
pop
sarl
iret
mov
dec
mov
inc
xor
fiaddl
stos
sbbl
pushf
mov
push
add
and
adc
push
mov
movb
mov
aad
pop
xchg
push
stc
xchg
or
nop
mov
jmp
push
inc
push
negl
xchg
mov
inc
fsubrl
inc
sbb
adc
fs
nop
arpl
and
lock
cmpsb
fildll
inc
push
cmovbe
test
add
adc
mov
xchg
or
pop
or
dec
cmp
divl
je
shrl
fimuls
push
and
stc
push
cmp
outsb
adc
orl
aas
stos
std
mov
jmp
pushf
leave
mov
pop
xorl
dec
stc
nop
mov
sbb
inc
lcall
in
pop
xchg
mov
push
movsl
mov
adc
loope
int3
adc
enter
or
sti
inc
aad
cwtl
loop
pushf
repz
sub
pop
shll
cwtl
push
jmp
in
movsb
push
arpl
mov
cld
jecxz
inc
movb
iret
pop
and
xor
rcr
aaa
push
add
test
testl
sbb
arpl
bound
bswap
xchg
mov
sub
ss
sub
and
scas
mov
ds
out
fisubs
mov
cmp
mov
xchg
inc
pop
mov
in
mov
cs
xchg
add
testb
in
repz
dec
inc
test
pop
cmp
xlat
rorl
mov
add
add
hlt
neg
outsl
inc
rol
mov
in
aad
sbb
ljmp
push
jae
xchg
stos
push
flds
push
scas
push
pop
fisttps
in
cmpl
repnz
inc
out
cmpsb
dec
add
adc
in
lock
gs
push
ss
addr16
push
mov
sub
dec
into
not
inc
push
cli
pop
mov
xor
xor
insb
enter
fcomps
test
xchg
lret
in
fsubp
stos
and
inc
mov
out
xchg
lcall
inc
addl
xchg
idiv
inc
imul
xchg
dec
mov
aad
pop
stos
das
push
cmp
cmp
inc
pushf
test
ficomps
sub
fbstp
or
aam
mov
xchg
lods
xchg
pop
cmp
cld
test
shll
fisubrs
out
jns
and
das
shrb
lock
and
insl
std
or
in
jnp
adc
pop
aaa
inc
sbb
mov
xor
dec
insl
fisubs
cmp
in
scas
js
outsl
push
dec
mov
mov
aaa
mov
int3
in
ret
push
fldenv
mov
aad
xchg
jecxz
jne
pop
mov
xor
sbb
cs
or
fstps
adc
pop
mov
lcall
pop
cltd
mov
movsb
jbe
push
adc
pop
jp
gs
sbb
clc
xor
adc
leave
dec
decb
test
inc
adc
cmp
ret
int
inc
int3
sub
arpl
outsl
and
ss
iret
je
enter
rolb
sub
xor
cmpsl
idivb
rol
sbb
or
rcr
in
mov
and
jl
pop
inc
inc
dec
and
xchg
lcall
in
inc
or
test
dec
fwait
and
jbe
addb
and
add
sbb
cwtl
pop
xchg
movsb
xor
fistps
enter
shrb
jmp
ret
je
les
in
sbb
push
sti
fisubs
mov
dec
jae
std
int3
nop
lods
hlt
xor
fcompl
or
pop
test
rcr
lods
add
push
pop
enter
loope
imul
daa
xchg
sub
leave
movsl
mov
jb
inc
adc
xor
inc
jns
std
insb
ret
mov
cmpsl
mov
jne
in
dec
push
int
xchg
in
mov
push
adc
push
mov
popf
xchg
das
dec
adc
inc
inc
aam
cmpsl
test
clc
or
cmpsl
sbb
jg
jo
rolb
jge
sub
pop
xchg
movsb
mov
xchg
loop
add
lret
addr16
jl
mov
in
xor
xlat
test
popl
pop
icebp
inc
jb
std
fsubs
mov
scas
js
test
dec
or
cmp
and
mov
sub
test
xchg
fmuls
jg
iret
xchg
nop
push
inc
xor
popf
in
mov
add
or
mov
sub
stos
jb
sub
sbb
mov
mov
mov
and
mov
mov
adc
fcoms
add
adc
add
sbb
ja
std
or
int3
xor
add
sti
aas
bound
mov
std
div
mov
pop
mov
jo
and
into
rclb
adcl
dec
cmp
icebp
ds
xchg
stc
pusha
xor
dec
dec
subl
movl
int
lods
inc
notl
push
out
mov
aam
or
es
xlat
mov
ficomps
adc
popf
cmp
ja
xor
jne
ljmp
xchg
lock
aaa
out
cmpsb
ja
aam
iret
js
cmp
dec
mov
cmp
hlt
pop
sub
dec
cmp
inc
ret
in
pop
mov
xchg
leave
aaa
pushf
movsb
lock
std
mull
push
adc
inc
aaa
es
mov
shlb
outsb
imul
mov
inc
icebp
jbe
pop
mov
rol
mov
mov
popa
icebp
pop
xchg
loopne
push
jge
and
xor
add
ret
inc
cmp
dec
inc
lahf
lods
sbb
mov
jns
aaa
cmp
add
xchg
fcmovnb
imul
mov
inc
shlb
movb
fwait
loop
mov
daa
imul
xor
cmp
mov
pop
popa
rorl
scas
fistpl
call
fs
jmp
xor
mov
lea
push
pop
out
xchg
je
dec
jnp
push
loopne
lock
in
les
lods
mov
mov
push
das
mov
hlt
and
mov
xchg
fs
fdivl
ret
adc
mov
mov
sub
clc
test
int3
ret
lcall
mov
mov
mov
arpl
adc
ret
aas
mov
xor
xchg
cs
cmp
arpl
push
into
inc
jns
xchg
sbb
cmc
and
push
jae
mov
andl
mov
dec
das
rcrb
pop
in
jns
repnz
stos
jnp
int
and
push
stc
js
add
xlat
mov
xor
bound
ret
sub
inc
add
mov
sti
outsb
test
xchg
push
jl
arpl
mov
imul
inc
mov
daa
inc
test
not
insl
mov
pop
mov
sub
mov
in
out
fwait
lret
pusha
fists
bound
sahf
mov
int
push
pop
push
addr16
sbb
add
cwtl
adc
adc
rcll
sub
adc
ss
inc
or
dec
in
add
imul
divl
out
mov
popl
std
mov
jecxz
stc
push
mov
push
add
push
fcoml
sub
mov
adc
xor
mov
test
adc
xchg
sarb
xor
addr16
push
cmpsb
jo
xor
pop
adc
pop
push
ret
mov
str
ds
fs
cmp
mov
inc
pop
daa
xchg
test
rorl
xchg
stos
dec
or
cmc
lods
mov
std
loop
loope
xor
in
cs
or
push
adc
xor
add
sbb
dec
push
pop
pop
frstor
mov
and
or
sti
nop
scas
shrb
dec
dec
mov
mov
dec
clc
nop
int
andb
dec
sub
aaa
push
ret
jne
cmpsb
adc
gs
and
lods
xchg
and
cmp
xor
and
sti
ficoml
or
pop
jae
rorl
or
dec
push
mov
dec
daa
pop
out
xlat
mov
mov
mov
add
pop
lods
scas
adc
sarl
mov
les
push
dec
pop
adc
je
mov
lds
xchg
movsb
popf
insl
sbb
shll
cltd
insl
mov
push
mov
or
pushl
xor
or
test
push
push
mov
pusha
mov
adc
xor
pop
adc
int
mov
adc
in
dec
out
lahf
dec
cmpsb
pop
lahf
mov
lock
out
call
test
mov
cmp
jne
je
bound
push
mov
jp
xchg
flds
mov
pop
bound
lea
in
cmp
jl
daa
pop
mov
jmp
aaa
imul
loop
push
push
xchg
imul
dec
cltd
in
inc
mov
mov
pop
mov
xor
out
dec
xor
xchg
lret
xor
sbb
and
and
or
imulb
mov
add
xor
aas
ja
loop
jmp
add
cs
test
adc
jae
mov
repz
jge
cmc
adc
pop
sub
addl
fst
push
mov
sbbl
push
sbb
xor
outsb
xchg
push
xor
pusha
loop
stc
insl
jle
xchg
ljmp
push
pop
jo
nop
jmp
lds
out
cwtl
and
movsl
jp
and
cli
loop
and
data16
insb
dec
fnsave
das
data16
pushf
les
sub
add
mov
fstpl
in
jp
mov
mov
es
and
lahf
je
aas
cmp
and
push
xchg
aad
pop
pushf
testb
and
pop
aas
xchg
addl
into
mov
repz
int
and
movsl
aas
cmp
pop
sub
sahf
add
in
mov
xchg
inc
loopne
scas
pop
adc
lcall
inc
dec
out
cli
les
daa
push
out
lea
stos
xchg
lock
xor
sub
pop
pop
insl
in
aaa
repz
jnp
call
shll
xchg
pop
lret
xor
shll
lds
pushf
mov
popa
ret
sti
cld
and
xchg
sub
inc
push
gs
inc
cmp
lea
fwait
inc
jge
stos
jl
jno
xlat
jne
push
data16
sub
jle
loope
out
sub
test
add
out
xchg
pop
test
stos
data16
out
adc
dec
daa
or
cmp
ret
jecxz
mov
imul
cmp
jb
add
mov
lret
cmp
mov
cmp
pop
push
scas
outsl
rorb
dec
sti
pushl
adc
xchg
lret
inc
push
pusha
cmp
pop
xchg
mov
sub
mov
jbe
pop
mov
loopne
sub
outsl
adc
scas
dec
push
in
jne
lods
add
mov
jg
push
pop
mov
lock
mov
sbbb
rcr
pop
cltd
mov
mov
fsubrs
cmp
jae
arpl
lret
cmpsl
mov
pop
lret
push
jecxz
daa
cmc
sub
shll
mov
fists
add
add
loope
inc
out
jns
fwait
add
rcrb
aaa
lcall
pop
stc
sbb
pop
mov
jo
pop
mov
ret
testb
add
dec
sbbl
push
adc
repz
inc
inc
cltd
cmp
ret
mov
mov
mov
in
add
popf
in
aam
sbb
sub
aaa
test
sbb
dec
lret
add
sbb
scas
pop
movsl
je
outsb
adc
popl
add
cmp
test
int
sbb
push
out
or
lea
int
pop
xor
push
mov
and
pusha
test
mov
inc
push
imul
test
andb
sub
dec
bswap
pop
imul
inc
mov
cwtl
sbb
and
or
ret
pop
xchg
loopne
jo
outsb
shll
dec
mov
repnz
xor
push
or
lret
dec
cmp
das
lahf
push
mov
mov
cwtl
filds
xchg
add
rolb
out
dec
adc
mov
out
mov
mov
fadd
lret
imul
sahf
aad
cmp
xchg
mov
popf
lods
sub
xor
adc
arpl
push
das
nop
xor
ljmp
fstpl
cmp
pop
jo
ret
jno
pop
rol
out
sub
fstps
fwait
xor
xor
popf
mov
xor
pop
pushf
pop
mov
sub
fildll
rorl
aas
loope
lods
xorl
mov
jo
pop
fdivr
cmp
jle
cli
mov
loope
icebp
sbbl
xchg
clc
mov
orb
cltd
cmpsl
and
mov
mov
and
dec
jnp
adc
scas
nop
cmpsl
jae
arpl
imul
inc
cmpsl
stc
pop
sbb
jae
adc
iret
popa
and
popa
daa
push
cmpsb
sub
dec
shll
mov
dec
push
mov
hlt
cli
popf
xor
xchg
jnp
adc
imul
insb
xchg
incb
lcall
jge
das
add
mov
sbb
lds
mov
nop
aam
sub
adc
adc
sbb
push
jno
mov
and
stos
xchg
mov
inc
xor
sti
loope
mov
lahf
push
adc
lahf
cmc
stos
les
jecxz
daa
xor
scas
or
jl
jno
pop
aaa
cld
mov
adc
sbbb
ds
cmp
mov
dec
imul
mov
clc
dec
cmpsl
jo
bound
ret
cmpsb
repz
sbb
lock
std
fcmovnbe
stos
outsb
dec
repnz
popa
insl
dec
jne
xchg
xchg
mov
mov
inc
fsubp
xchg
xor
add
daa
fdivrs
lds
aam
rclb
jno
stos
insb
pop
adc
mov
mov
xchg
arpl
aas
jae
or
scas
sub
and
push
addr16
out
adc
pusha
push
repz
in
fidivl
daa
pop
pushf
xchg
das
sbbl
adc
push
xchg
push
push
jle
aam
pop
or
ja
dec
ss
cld
xchg
in
mov
jmp
repnz
push
ret
lods
out
pop
push
popa
add
lods
xorl
push
mov
cltd
adc
popf
mov
cltd
adc
adcb
shrl
out
or
push
mov
add
insb
lock
mov
icebp
fildl
push
mov
inc
pop
or
icebp
insb
mov
dec
stc
xchg
fcoml
fdivp
jmp
iret
xor
pop
pop
dec
inc
cmp
sub
mov
or
cmp
mov
repz
mov
xchg
popf
in
and
dec
jmp
fadds
stos
add
fbld
int3
mov
adc
das
cmp
push
lea
test
mov
lcall
cmp
and
out
outsl
outsl
aam
mov
adc
xchg
ljmp
out
lcall
divb
sti
xchg
test
push
jo
fwait
outsb
mov
inc
or
gs
repnz
xchg
adc
scas
int3
cmp
add
int3
aas
inc
call
clts
xor
gs
test
adc
sbb
aam
loopne
sbb
in
pop
cmpsb
hlt
lahf
loopne
xor
movsl
test
ficoms
jecxz
test
cmpsb
inc
js
scas
out
or
je
movsb
add
mov
jl
nop
in
pushl
pusha
xchg
cmpsb
inc
mov
sti
sbb
mov
adc
mov
mov
cmpsl
pop
mov
loopne
loopne
rorl
imull
imul
gs
das
mov
sub
adc
ja
test
mov
test
jae
cmp
add
add
cltd
out
or
or
imul
adc
push
repz
dec
dec
test
lea
push
pop
xor
sub
mov
ret
pop
cmpl
gs
inc
xchg
mov
loope
or
fildl
loopew
jp
mov
hlt
test
scas
xor
mov
inc
mov
cmpsb
in
mov
lods
repnz
dec
scas
rep
sub
repz
cmp
aaa
pop
inc
mov
out
outsl
hlt
inc
or
ljmp
repz
in
push
pushf
movsb
adc
popf
push
xchg
inc
cmpsb
add
lahf
lock
js
jbe
lret
and
pop
iret
push
icebp
or
and
push
pushf
movsb
daa
movsb
cmp
xor
pop
mov
in
insb
pop
dec
cmpl
and
popf
insb
mov
aam
sbb
dec
inc
leave
and
sbb
sub
rorb
and
push
mov
jo
es
imul
pusha
pop
dec
pop
push
pusha
fcmovb
xchg
xchg
xor
sub
or
lcall
cmpsb
lock
scas
mov
shrl
dec
xchg
es
and
cwtl
ss
fisubrl
std
xor
inc
in
sahf
testl
sar
push
fstp
mov
lret
push
arpl
rep
arpl
gs
dec
push
sub
pop
filds
inc
test
fwait
sbb
rcl
sub
shrb
mov
out
inc
adc
sbb
out
notl
push
push
mov
fisubs
movsl
add
lods
lret
aaa
movsl
push
mov
push
into
insb
push
repz
sub
push
out
jno
sbb
fcom
xchg
test
dec
cmp
jo
mov
jmp
outsl
add
and
mov
xor
dec
fs
mov
mov
lock
enter
mov
ljmp
adc
add
daa
sub
pop
or
and
pop
adc
xor
gs
sub
shlb
dec
mov
fildl
pop
andps
xchg
test
sub
jl
xchg
jp
lcall
lret
or
xchg
or
dec
adcb
mov
sub
xchg
cmp
insl
lahf
xchg
jecxz
cmpsl
sbb
stos
xor
out
cmp
addr16
pusha
in
test
pop
mov
or
negl
cmpsb
je
mov
ret
inc
test
pusha
jecxz
std
inc
ja
outsl
xchg
leave
dec
sbb
mov
sub
ss
or
into
jle
sub
mov
xchg
test
in
fwait
maxps
daa
push
xchg
or
add
mov
and
aam
scas
daa
arpl
pushf
movb
movsb
enter
data16
popf
mov
push
stos
mov
mov
pop
in
or
ja
mov
int3
ficomps
sub
movsb
fistl
mov
xchg
pushl
sub
inc
jb
out
mov
inc
pop
fcmovnu
inc
hlt
imul
pop
js
dec
pushf
push
cmp
jns,pn
ficoms
mov
out
dec
in
xchg
and
jmp
push
xor
cmc
xchg
sub
mov
les
cmp
jl
sbb
sbb
or
imul
cmp
jle
data16
jg
mov
sbb
mov
out
pop
mov
outsb
sub
sbb
jb
call
adc
dec
inc
sbb
mov
sbb
out
or
xor
dec
jle
out
ret
mov
jmp
out
add
or
enter
add
sti
mov
and
push
int
xchg
aam
insb
xlat
xor
repnz
rcrl
jbe
stc
sbb
sub
jb
lods
mov
xchg
hlt
push
push
xchg
cmpsl
stc
xor
mov
int
js
lahf
sbb
cli
lock
dec
pop
or
mov
jae
leave
notl
push
jbe
inc
push
and
fnstcw
add
hlt
pop
jge
je
jecxz
sbb
movsl
adc
and
xchg
sti
or
stos
je
sbb
repnz
fdivl
out
shr
cmp
pop
pushf
loopne
fsubrl
movsb
clc
inc
and
jo
xchg
or
or
jecxz
mov
in
xlat
lret
popa
out
subl
push
jmp
dec
stos
jl
rcll
jp
mov
je
xchg
add
xchg
dec
cmp
jno
push
in
out
xor
movsl
cmpsl
cmp
ds
int
psubb
ret
push
scas
mov
icebp
std
cltd
sub
rcr
in
cmp
dec
jge
mov
stc
fcoms
adc
and
shr
add
sbb
push
roll
outsb
es
adc
dec
cs
pushf
fs
adc
movsl
sbb
mov
imul
les
test
jb
je
ret
repz
pop
into
adc
mov
mov
movsl
adc
repnz
inc
push
or
daa
sub
fmul
mov
and
cmp
lods
call
and
ds
into
repnz
inc
loope
dec
stc
and
xchg
inc
pusha
lods
lret
xchg
mov
rorb
into
jns
xor
pop
xchg
decb
sbb
mov
test
pop
adc
sbb
or
outsl
dec
mov
out
cmp
dec
gs
jg
ror
lret
repnz
dec
test
sbb
notb
cltd
push
in
fadds
mov
push
sahf
call
sti
ret
push
or
inc
mov
xor
push
adc
int
cmp
leave
mov
cmp
sub
mov
cli
dec
fldcw
std
stc
sub
je
sbb
xchg
add
subb
cmp
pop
into
lahf
stc
lcall
in
fiaddl
mov
mov
mov
das
pop
jmp
pop
in
aam
repz
lods
and
xchg
dec
sub
dec
mov
add
adc
push
mov
xchg
bound
mov
jnp
mov
and
out
sbb
add
dec
dec
jmp
fwait
mov
pop
xchg
mov
lahf
pop
inc
pop
lods
push
loope
xchg
sub
ret
jmp
sub
ret
cmp
cli
dec
cmp
pop
out
shl
cmp
or
or
xlat
out
loop
mov
lds
fidivrs
xchg
movsb
mov
jp
rolb
push
push
mov
and
sbb
xor
add
fiaddl
add
lcall
pop
sbb
mov
add
pop
mov
jl
inc
sbb
mov
in
pop
and
xor
sub
frstor
ret
jne
and
call
imul
or
sahf
cwtl
ds
sbb
dec
jb
cmpsl
cmp
push
add
push
xchg
aaa
push
aas
data16
push
xchg
cmp
jmp
inc
insb
mov
out
sbb
push
loope
jmp
fwait
push
mov
adc
jmp
pop
mov
in
or
sti
vcvttps2dq
inc
mov
jbe
sub
inc
aad
lock
roll
les
pop
movsl
lods
or
inc
addl
mov
xchg
test
fimuls
aas
arpl
idivb
insl
popa
sub
pop
fwait
cld
aas
sub
jnp
xchg
arpl
xchg
or
pop
mov
enter
out
lret
jne
lea
imul
dec
jbe
pop
int3
cli
inc
flds
sahf
push
mov
sub
into
pop
sti
pop
inc
adc
popa
or
sub
cs
mov
mov
xor
inc
sbb
ret
sbb
movsl
push
stc
mov
xor
addb
pop
and
push
int3
fs
or
dec
add
inc
mov
shlb
push
push
pop
sub
and
int3
cmp
jecxz
push
push
xchg
cmp
test
mov
push
mov
and
inc
or
mov
mov
pusha
aaa
lret
cmpsb
in
sbb
bound
fucomip
gs
inc
sub
pop
xchg
jl
dec
add
jge
loopne
sbb
in
fcmove
les
jae
arpl
punpckhdq
mov
mov
fldt
pusha
mov
sti
sbb
je
add
mov
cmp
mov
lahf
jb
sbb
lea
jmp
jg
jo
out
out
insb
mov
ljmp
aas
into
psubq
sub
sbb
adc
and
mov
test
lret
push
lret
sarl
dec
and
lock
hlt
sbb
fs
jo
fnstcw
dec
xchg
repnz
xor
xlat
imulb
mov
jns
jl
test
cmp
daa
in
cli
or
push
std
dec
test
fwait
jp
jnp
fldcw
iret
xor
outsl
xlat
cmp
lret
inc
jnp
or
mov
dec
aaa
or
pop
fsubrs
adc
fnstsw
mov
and
inc
push
mov
sbb
in
testb
movsb
pop
inc
lea
pop
cmc
std
rorb
in
mov
incl
insl
stos
sub
and
loope
cmpsb
lock
and
xchg
imull
fisubl
ljmp
test
out
push
add
fwait
pop
xor
mov
movsl
icebp
adc
mov
rcll
xchg
sub
xor
pop
jb
and
sub
cld
pusha
pop
mov
inc
rcrb
imul
mov
scas
or
sahf
icebp
int
jg
mov
aas
pop
fbstp
jge
cmp
dec
stc
or
out
add
fucomi
jl
push
xchg
xor
dec
loop
cltd
pop
or
dec
xchg
popf
shll
out
xor
les
shll
loop
clc
je
daa
lods
adc
pop
add
xchg
das
mov
push
stos
cmpsl
push
pop
lock
stos
shl
xlat
mov
xor
mov
mov
sub
push
adc
scas
dec
cmp
adc
jl
pop
testb
inc
leave
js
cmpsl
and
je
cltd
outsl
pop
into
shrb
jg
mov
fwait
push
adc
enter
and
adc
out
test
lods
push
push
push
xor
jmp
push
loop
scas
push
mov
jne
mov
pushl
imul
and
or
jo
ds
lods
and
std
jg
insb
push
ffree
push
sbb
popf
mov
or
mov
or
mov
rcll
loope
jl
aas
shll
or
loop
inc
ret
xor
add
les
pushf
jns
fwait
push
push
push
inc
adc
popf
scas
cwtl
cli
insl
adc
cmp
add
adcl
lea
mov
mov
push
mov
add
xor
and
je
rorb
mov
dec
cmp
add
xchg
out
mov
loopne
sahf
cs
jecxz
mov
imul
gs
xchg
lock
stos
or
mov
mov
int3
mov
enter
xchg
dec
mov
mov
pop
xchg
or
sbbb
sti
dec
cmpsb
daa
vmaxpd
xchg
pop
aaa
xchg
lahf
xorb
mov
sti
in
push
add
jmp
scas
cltd
inc
cmc
push
pop
sub
dec
shl
and
mov
and
lret
sbb
and
out
movsl
aam
inc
adc
fs
pop
push
in
cmc
xchg
cmpsl
repz
imul
in
arpl
mov
mov
inc
pop
movsl
push
hlt
xor
outsl
jge
mov
push
lods
pop
outsb
mov
in
mov
mov
pop
add
and
mov
lea
mov
cmp
cwtl
ss
bound
pmovmskb
dec
fdivl
ss
sti
jno
sahf
sbb
aas
or
repnz
mov
fmull
in
neg
ror
xor
jb
imul
push
and
int3
daa
pop
mov
lahf
lret
shlb
fsubrs
cmp
popf
mov
dec
and
xor
mov
icebp
sbb
imul
lahf
or
int
jo
mov
sbb
out
mov
loope
add
ds
or
pop
adcl
xchg
iret
std
cli
inc
dec
dec
loope
lahf
mov
in
lret
sbb
je
and
push
push
adc
repnz
adc
je
rorb
neg
inc
sub
push
rcrb
xchg
cmp
outsb
fxch
in
or
fcoms
mov
pop
mov
sbb
jae
sar
jmp
jle
jnp
cmp
xor
adcb
fwait
pop
popa
testb
ret
push
cmp
and
imul
sub
mov
or
decb
lds
jp
lea
ljmp
je
mov
ljmp
add
xchg
roll
or
xchg
stc
daa
ljmp
push
mov
mov
or
mov
mov
jno
out
in
sub
add
repnz
subb
fbld
dec
jbe
mov
push
nop
dec
mov
popf
mov
imul
mov
mov
push
jle
dec
outsb
sahf
in
push
loope
rcr
jmp
xchg
mov
adc
arpl
test
orl
inc
add
dec
push
sub
dec
mov
lret
movsl
lea
push
mov
aad
sub
push
std
adc
mov
test
xor
jbe
cmp
lret
outsl
mov
daa
shlb
dec
xchg
dec
dec
mov
push
icebp
or
out
xor
mov
leave
mov
hlt
das
lds
push
imul
rorb
imul
push
jne
cmc
into
mov
add
outsl
rcrl
loopne
in
fwait
cli
arpl
lea
lods
fcoms
xchg
lcall
and
pop
fs
mov
xchg
pop
lret
aas
pop
test
testl
icebp
aaa
cmp
jo
lds
imul
pop
aaa
fisubrs
call
cmp
add
mov
mov
or
in
mov
lea
xor
dec
je
pop
popf
jge
xchg
stos
jne
dec
mov
jo
test
dec
lock
mov
jno
bound
xchg
jle
cmpsl
or
dec
leave
bound
nop
pop
lret
inc
rcrb
mov
fistpl
sub
std
jnp
mov
mov
xlat
scas
popf
out
add
inc
addb
outsb
cmp
imul
aam
aas
and
dec
sbb
pusha
fwait
test
idiv
hlt
scas
js
jl
arpl
mov
mov
stos
xchg
aam
jle
jne
jp
fcomip
push
sub
sahf
cmp
iret
mov
inc
out
push
mov
mov
push
push
sub
fsubl
inc
shll
mov
fimuls
lea
push
sbb
imul
mov
sub
js
out
mov
mov
cwtl
ljmp
and
icebp
mov
in
jge
xchg
fidivrl
int
lret
cmp
or
repz
push
jle
rcrl
push
lods
mov
test
or
adc
gs
imul
inc
mov
ljmp
jl
jne
push
addr16
mov
out
aaa
fsubp
sbb
or
cmp
push
sbb
mov
push
fxch
sbb
push
cs
pop
pushf
mov
repnz
lahf
mov
or
push
pop
add
fs
xor
and
lods
add
pop
lret
sbb
das
xchg
xor
rcll
mov
or
push
ficompl
int
gs
cmpsb
mov
data16
addr16
sbb
data16
mov
enter
aaa
cmp
ret
jecxz
push
mov
xchg
or
jo
mov
imul
jp
push
incl
pop
mov
inc
fstpl
lahf
imulb
or
stc
aad
jae
addr16
or
mov
cmpl
aam
arpl
mov
or
dec
jb
push
cwtl
fwait
pop
push
mov
call
mov
pop
leave
cmpsl
lea
or
call
push
cmp
fwait
mov
scas
and
in
xchg
xor
std
fsubrs
jne
jmp
stc
test
pop
in
cmpsl
pop
in
and
fsubrl
push
loop
mov
adc
xor
xor
lret
lcall
movsb
outsb
or
je
dec
fcompl
push
inc
mov
out
movups
sub
or
dec
jae
lds
cmpsl
cmpsb
mov
or
inc
test
int
sarb
popf
clc
mov
outsl
adc
inc
or
sbb
lcall
sbb
jg
lcall
aas
pop
mov
setge
add
xchg
pop
in
loop
push
incb
ja
aad
cmp
out
xor
cmpsb
adc
mov
cs
add
jp
mov
mov
jg
ss
bound
adc
subl
in
push
mov
dec
inc
pop
sbb
xor
dec
push
loop
xor
test
repz
mov
adc
push
or
es
and
xchg
adc
outsl
mov
sub
pop
hlt
out
jecxz
ds
ret
in
push
pop
divb
stc
daa
pop
or
mov
push
shll
loopne
int
mov
mov
push
sub
and
fists
adc
lea
lock
cltd
cld
dec
cmpl
mov
pop
mov
jbe
dec
inc
cwtl
xor
xchg
inc
dec
mov
jge
sub
inc
cmp
pop
out
in
adc
sub
ja
sbb
loop
sub
test
imul
out
loopne
jp
rorl
ret
imul
xor
and
xchg
adc
xor
outsb
aad
xlat
adc
shrb
jae
cmp
repnz
and
or
inc
test
dec
aad
lcall
test
ljmp
add
fistps
lds
out
cwtl
jno
xlat
add
lods
xor
mov
sahf
xor
pusha
pusha
jmp
xchg
xchg
pop
mov
sbb
cltd
dec
jnp
pop
xor
xor
xor
dec
sbb
lret
dec
fstl
imul
and
enter
inc
incl
pop
es
mov
jle
push
cmp
pop
jbe
cmp
pop
sbb
pop
sub
mov
mov
dec
xlat
jg
sub
or
jae
nop
inc
pop
out
cmpsl
mov
cmp
jne
lret
mov
push
not
imul
cmp
pop
stc
inc
jno
dec
and
fists
mov
std
insl
add
repz
cmp
loopne
push
and
push
aam
mov
or
mov
pop
add
add
leave
dec
mov
mov
mov
mov
mov
sti
mov
inc
leave
jg
bound
adc
ss
lds
in
cmp
inc
js
mov
mov
cli
or
les
pop
sub
clc
ret
adc
fwait
jns
sarl
jl
pop
test
test
rorb
sub
mov
add
mov
lock
sbb
mov
mov
lret
int3
mov
in
lcall
adc
aam
loopne
mov
inc
adc
shlb
mov
or
mov
inc
mov
cwtl
lea
add
pop
or
jnp
lea
xlat
pop
xchg
out
hlt
inc
mov
in
orl
and
sbb
mov
out
push
pop
iret
icebp
cmpsb
fwait
loopne
pop
xchg
stos
js
pop
mov
adc
out
push
xchg
sub
loopne
push
cmp
sbb
jns
scas
push
push
insb
xlat
test
jmp
jp
mov
rcrb
jne
nop
mov
push
stc
es
mov
jecxz
ss
push
hlt
js
mov
stc
lret
shll
aaa
in
pop
data16
inc
outsl
lea
mov
out
ja
cmp
fildl
das
dec
jae
jl
mov
call
jmp
out
cld
sub
repnz
pop
mov
mov
push
test
bound
scas
movb
jge
fwait
add
push
aad
ror
lods
mov
dec
les
xor
call
rorb
loopne
mov
push
jo
jno
std
sar
dec
scas
jb
jmp
pop
push
stos
jmp
cmpsb
icebp
or
xchg
jno
inc
ficomps
cmp
push
insl
dec
cmp
cmp
and
scas
inc
aas
fistpl
push
test
push
pop
cs
and
sub
loope
frstor
mov
cmc
fidivl
loop
leave
push
insb
mov
inc
into
push
int3
lcall
mov
lret
xchg
pushf
pushf
ja
jmp
jno
neg
out
jl
push
adc
sub
mov
and
out
lods
shr
incb
andb
fisttpl
frstor
xor
mov
repnz
and
sub
mov
mov
notl
push
scas
fidivrl
jecxz
sbb
bound
adcl
xor
lock
xor
xchg
cmpl
dec
push
adc
cmpsl
jmp
xor
cmp
data16
lahf
rcrl
scas
xchg
sub
or
jmp
inc
roll
push
outsl
enter
call
adc
inc
jnp
jmp
sbb
jae
xor
into
jge
add
mov
sub
xchg
pop
in
cltd
jge
fldt
cmp
inc
xchg
repz
lods
adc
lods
mov
push
shl
andb
mov
jl
push
das
mov
popa
mov
sub
fcmovnb
insb
inc
mov
rclb
pop
jae
arpl
dec
mov
push
in
mov
dec
icebp
andl
outsb
insl
testl
dec
xor
cmpsl
push
xor
xchg
push
push
in
test
xchg
in
mov
cmpsb
lcall
mov
loope
jnp
ret
mov
mov
xor
jno
sub
jl
sub
add
mov
ljmp
xchg
lods
push
inc
push
or
ret
mov
mov
sbb
lcall
sbb
test
out
jne
inc
jb
ja
cmp
out
xor
test
fldenv
out
or
xchg
sbb
mov
movsl
gs
jno,pn
xchg
cmp
xchg
push
pop
popf
les
jge
mov
dec
fnstcw
mov
out
iret
jbe
sbbl
sub
fcoml
inc
lds
pop
ret
adc
inc
jbe
test
bound
fwait
cwtl
stos
loope
stos
cmp
xor
mov
push
aaa
or
inc
dec
into
inc
sbb
mov
imul
push
enter
ljmp
xchg
add
aam
cmp
mov
dec
xor
inc
loopne
ja
scas
or
jg
add
fsts
mov
sbb
imulb
lret
je
pop
lods
adc
lret
xlat
mov
subl
cltd
shrl
push
pop
inc
mov
popf
mov
sub
arpl
int3
pop
test
or
je
ds
sbbl
stos
mov
filds
loope
xchg
cltd
push
sbb
mov
inc
lahf
lret
pop
loop
mov
repz
pop
and
push
jge
lret
ja
pop
lret
fsubp
adcl
std
pop
arpl
ret
lea
cmp
daa
mov
xchg
push
inc
insb
or
movsb
inc
mov
jecxz
inc
jl
pop
and
lods
call
pop
in
adc
das
divl
ret
add
jg
jo
cmp
mov
lods
inc
push
xor
mov
pop
and
cmp
adc
loop
push
push
and
fdiv
insb
cld
dec
aad
jo
mov
ret
mov
cmpsl
std
xor
jl
mov
repnz
mov
xor
lods
sub
cld
lock
dec
xchg
jb
daa
ljmp
int
mov
xor
mov
sbb
pop
dec
mov
cmpsl
xchg
pop
into
out
cmp
dec
lea
mov
cmp
int3
jno
inc
add
add
aad
adc
outsl
lock
data16
test
pusha
aaa
aad
ds
fxch
insl
and
push
dec
inc
sub
cmp
inc
dec
jnp
call
jno
mov
stos
ss
ret
and
insl
sbb
insb
jno
pop
push
cmpsb
sbb
jb
movsb
scas
jmp
lock
aas
je
addl
test
dec
imulb
inc
cmp
push
jg
daa
and
pop
xchg
xchg
push
mov
xchg
nop
es
mov
pop
inc
mov
insb
arpl
shll
xor
cmp
leave
daa
pushf
and
mov
push
sub
mov
out
jmp
out
outsl
xchg
and
xchg
jp
fimull
sub
xor
mov
jecxz
pop
subl
jbe
and
jnp,pn
cmp
insb
cmp
in
in
and
xor
add
sar
xorb
aad
mov
pop
jmp
sbb
rcr
cmp
pop
xor
in
lahf
xlat
lret
mov
aas
fmul
xchg
in
je
add
jo
pop
out
and
in
cwtl
cmpsb
in
ret
rcrl
outsb
rcrb
cmp
sbb
shll
ja
mov
aad
inc
pop
dec
mov
inc
cmp
imul
or
stc
push
fmull
inc
mulb
add
push
lds
adc
call
test
or
int
mov
pop
adc
int3
mov
popf
call
scas
xor
mov
cli
popf
xor
stc
mov
pop
and
adc
fidivl
pop
sub
push
aam
sbb
inc
pop
imul
inc
lcall
sub
inc
or
lahf
stos
outsl
shl
mov
ljmp
shl
xor
loopne
in
es
in
rcr
mov
pop
pop
frstor
adcb
out
adc
jb
mov
push
xor
mov
shl
test
pop
mov
in
sbb
jne
into
loope
pop
test
into
push
ficomps
test
loop
push
loopne
int
jp
loopne
xchg
cwtl
mov
rcll
in
add
fdiv
subb
imul
test
call
fxch
sub
iret
mov
dec
xor
pop
outsb
dec
pop
mov
scas
leave
test
push
pop
mov
xor
repz
outsb
shll
jne
lret
pusha
pop
fcompl
dec
adc
mov
push
call
mov
xchg
lods
pushf
mov
mov
in
pop
and
ret
xchg
mov
cwtl
xchg
jne
dec
ljmp
popa
out
out
jae
clc
orl
adc
fldenv
leave
lcall
push
xor
std
inc
daa
test
jnp
mov
or
xor
daa
xchg
lcall
dec
sbb
push
and
arpl
pop
in
aaa
stos
scas
iret
int3
sbb
inc
cwtl
jl
pop
mov
mov
push
fbld
sub
jae
shll
test
incl
xor
in
fisttps
and
add
add
and
hlt
sbb
cmpsl
push
xchg
sub
addr16
xor
push
mov
lock
les
pushl
dec
jno
mov
jp
mov
sarb
lcall
cltd
cmp
add
cwtl
mov
mov
sbb
enter
xchg
or
mov
jecxz
mov
es
lds
jb
lods
jne
xchg
loope
xor
mov
xchg
inc
adc
add
repz
pop
cld
imulb
sbb
mov
sbb
daa
arpl
cmp
mov
sbbb
dec
addr16
mov
xchg
lret
and
pop
in
mov
cmp
mulb
hlt
inc
xchg
lods
or
or
mov
data16
mov
sub
shrl
inc
or
out
mov
add
stos
movsl
mov
jge
div
dec
std
sub
jl
sbb
push
mov
in
je
mov
mov
aam
jmp
incb
mov
mov
jle
or
or
mov
test
and
inc
inc
dec
adc
aaa
adc
jg
mov
sti
sbb
icebp
inc
push
sub
cmp
dec
mov
stc
sbb
lods
lcall
nop
das
fisttpl
jo
or
mov
pop
pushf
cltd
inc
push
dec
jo
mov
or
pop
add
or
fdivrl
or
stos
pop
cmp
addr16
pop
or
add
lret
bound
xchg
dec
push
cltd
push
or
pop
sbb
lock
insw
addr16
cli
sbb
cmpsb
fsts
out
popf
adc
sub
adc
das
cmc
call
loope
in
fdivl
xchg
daa
scas
rcll
cmpsb
lret
xchg
mov
scas
push
mov
int3
insl
pop
mov
mov
sbb
into
mov
or
test
and
or
or
fsts
popa
pop
js
pusha
fnstenv
sub
loop
jge
pop
fidivl
pop
xor
dec
or
sbb
movsl
and
cmp
enter
and
jmp
mov
or
pop
insb
in
pop
int3
rorl
testl
aad
push
lock
cld
xchg
lock
lahf
in
enterw
in
sub
out
dec
addr16
int3
popa
push
push
mov
in
jecxz
aas
push
arpl
jbe
push
fdivrl
or
push
dec
prefetch
fidivs
push
ja
or
addl
jp
sbb
imul
fdivrl
jne
xchg
xchg
adcb
iret
sbb
hlt
dec
jnp
clc
sub
arpl
cld
cwtl
cmpb
push
xorb
sahf
sub
cmp
xchg
and
out
push
outsb
or
xchg
push
adc
gs
hlt
mov
cli
test
xchg
mov
jo
dec
push
mov
clc
lods
jl
cs
ds
adc
shrl
jb
xchg
xor
dec
mov
movsb
adc
push
das
add
mov
xor
outsl
adc
roll
xor
or
ljmp
or
xor
fmuls
lock
mov
xchg
cmp
jge
mov
das
mov
je
mov
roll
cld
mov
repnz
and
loope
decl
imul
stc
add
push
inc
pop
and
pop
in
stos
cmpsb
cmpsl
stc
arpl
push
xlat
push
lret
sub
and
fs
jne
cmc
popa
inc
xlat
and
adc
inc
sub
nop
leave
loop
sub
loop
inc
rcrl
lds
xchg
adc
and
lret
push
and
xchg
movsb
inc
scas
gs
mov
repz
mov
push
add
dec
lret
xchg
lea
lcall
mov
in
dec
mov
sub
dec
lods
lahf
lcall
pop
fcom
testl
test
cld
outsb
xor
fdiv
pop
das
pop
lcall
cmpsl
imul
sub
pop
pushf
pop
aas
movsl
mov
loope
sub
cmc
pop
les
sti
int3
inc
mov
dec
sbb
mov
add
pusha
stos
scas
pop
aad
inc
sbb
mov
jbe
pop
aaa
and
xchg
xchg
mov
or
fiadds
xor
popa
lahf
inc
push
dec
mov
insb
lcall
aas
in
xchg
jbe
cmp
sub
add
jecxz
and
rclb
rcl
repz
gs
imul
stos
adc
movsb
and
je
add
xchg
dec
mov
sar
das
xor
ja
mov
ret
iret
sbb
or
mov
mov
jne
inc
mov
das
fldcw
jne
loop
stc
dec
mov
jns
xchg
shrb
cwtl
pop
shlb
or
sub
xor
sub
add
js
roll
jo
add
and
outsb
push
mov
rcll
iret
inc
add
es
sti
cli
pop
lods
pop
cmpsb
or
or
jmp
fsubrs
test
enter
inc
cmc
sahf
dec
pop
dec
mov
nop
fwait
cmp
or
int
jl
lock
gs
sub
test
jg
xor
icebp
inc
mov
rcrb
shlb
sub
out
loope
push
pop
in
inc
dec
data16
int
push
addb
dec
scas
push
rcll
sbb
mov
dec
jg
mov
mov
test
or
fldcw
into
cld
hlt
jo
cmp
pop
ret
sahf
adc
push
ljmp
lahf
pop
mov
cmpsb
gs
ss
sub
aaa
push
cmp
mov
les
andl
mov
sub
mov
repz
push
push
sarl
dec
cmp
and
mov
mov
dec
loop
and
pop
in
sbb
mov
jbe
push
adcl
in
rcr
push
mov
mov
ljmp
test
fwait
cs
outsb
mov
ficomps
cmp
xor
lahf
adc
push
cmpsb
sbb
add
int3
jecxz
push
add
push
pop
dec
pop
nop
pushf
or
dec
cmpl
sub
pop
xchg
popa
orb
scas
sbb
inc
cmp
jne
inc
sub
mov
movl
push
add
cmc
insl
data16
jmp
mov
push
push
shrl
jb
xor
mov
jg
test
inc
cld
js
and
jmp
movsl
rcll
xchg
pop
dec
sub
adc
push
repz
jae
mov
push
out
imul
mov
inc
stos
adc
xchg
xor
pusha
add
mov
mov
lds
cmpsl
nop
mov
pop
ret
mov
in
mov
out
jg
leave
inc
stos
sub
lret
lret
sub
sub
imul
and
lret
mov
push
out
daa
sub
xchg
dec
lds
lret
scas
or
andl
out
mov
jnp
jecxz
mov
lcall
outsb
mov
mov
adc
pop
xorb
cmp
push
ficoms
jle
or
mov
xlat
in
sub
out
je
fsubr
xchg
and
fisubs
adc
mov
jnp
xor
pop
inc
sub
mov
testb
stos
xchg
cs
mov
lret
stos
push
es
cmp
or
cli
out
pushl
mulb
es
xchg
ficoml
and
leave
out
lcall
imul
setl
dec
sti
add
movsb
in
les
inc
in
mov
cmp
ret
sbb
aad
js
loopne
jg
dec
daa
out
xor
shll
lods
pop
mov
adc
or
or
jnp
sub
push
lods
push
mov
into
mov
push
xchg
mov
cmc
repnz
jb
mov
ret
outsl
loop
ficoml
les
out
jns
sti
dec
out
cmp
sub
mov
mov
mov
jb
outsb
push
jmp
outsl
dec
in
sbbl
jmp
cmp
in
lahf
nop
push
test
pop
dec
sbb
jno,pn
mov
movsl
xor
repnz
xchg
aam
les
sbb
mov
pop
pop
jge
xchg
jae
mov
adc
rolb
lahf
add
cwtl
pop
xchg
mov
call
mov
jns
rcll
inc
push
inc
push
inc
test
lahf
cli
add
cli
fistpll
or
je
pop
xchg
sbb
in
into
fisubrl
dec
stos
imul
lcall
mov
mov
or
addr16
jo
mov
pop
fsts
pop
add
xchg
xchg
pusha
xchg
or
pop
cmp
mov
mov
int
les
sub
inc
int3
push
sbb
negl
sti
and
jmp
popa
mov
imul
inc
idivl
repnz
sbb
es
cmp
loopne
scas
push
addl
mov
xor
mov
cmp
or
jmp
inc
pop
ud1
aas
fwait
jae
call
mov
jge
or
mov
push
jns
loop
ljmp
mov
cld
fisttpll
sldt
mov
inc
push
int
out
mov
les
gs
mov
sbb
inc
jle
or
sub
xor
outsb
mov
movsb
inc
enter
mull
dec
imul
add
inc
mov
bswap
xor
aas
add
nop
push
std
sahf
inc
add
push
cmp
or
cmp
mov
adc
adc
fstpt
lods
jb
sbb
adc
pop
mov
roll
mov
pop
pop
pop
imul
lahf
jmp
adc
lds
mov
mov
inc
enter
out
ss
cmpl
in
test
fadds
stos
lock
mov
insb
movsb
fs
shll
add
or
jle
add
sarb
cmp
pop
ds
fwait
loopne
hlt
xchg
xor
mov
call
movsb
inc
mov
lods
xchg
inc
movsl
dec
testb
xchg
add
dec
movsb
pop
mov
mov
in
jmp
push
notl
mov
int3
xor
xchg
or
sbbl
jg
out
loope
mov
cld
ss
adc
dec
fs
mov
scas
std
adc
aaa
adc
xlat
lcall
jmp
fimuls
iret
outsb
scas
or
fnstsw
jl
imul
aas
pop
mov
faddl
dec
inc
cmpsl
cmpsb
pop
inc
xchg
js
dec
cld
add
adc
mov
xlat
or
dec
rolb
or
iret
icebp
and
dec
aad
cmp
sbb
jecxz
jmp
sbb
imul
hlt
xchg
mov
push
hlt
push
rclb
out
mov
aaa
jg
test
aad
in
es
push
jp
lret
bound
in
js
push
sbb
push
dec
pop
mov
enter
dec
mov
nop
test
cmp
or
andb
pop
into
push
dec
bnd
dec
mov
mov
outsb
cmp
repnz
lea
ljmp
lret
inc
gs
push
rorl
hlt
and
in
aam
xor
sub
ficompl
jecxz
xor
mov
jp
clc
and
pop
lods
push
adc
push
loopne
add
sub
test
mov
insl
xor
jbe
aad
xchg
out
and
pop
pop
xchg
test
addb
or
les
xor
sarl
lods
inc
mov
jg
in
in
xchg
xor
loop
jb
popa
or
jnp
sub
fwait
push
leave
inc
pop
sbb
dec
mov
aas
aad
fwait
cmp
inc
xchg
lret
adc
icebp
mov
loopne
iret
xor
sub
fwait
ret
lret
rcrl
push
and
adc
cmp
loop
imul
or
inc
sub
pop
push
lds
sbb
stos
loop
xchg
mov
les
sbb
nop
push
cld
movsl
std
div
lret
stc
in
dec
jno
adc
jg
inc
notb
jl
sbb
fs
push
and
push
xchg
loopne
ret
pop
mov
jl
mov
fsubs
push
adc
cmc
xchg
fcoml
pop
mov
sbb
out
lods
inc
lods
or
jmp
aas
mov
mov
mov
test
adc
gs
jne
jno
out
dec
hlt
cs
rcr
mov
mov
xchg
jle
add
jae
cmpsb
bound
stos
cwtl
ret
sahf
add
xchg
sub
outsb
mov
insl
pop
les
or
in
jae
loop
jle
mov
inc
lret
mov
out
test
loope
loopne
xor
mov
aad
roll
outsl
enter
or
lods
jl
into
fs
dec
out
cltd
fisubl
fwait
in
cmp
fs
and
adc
outsl
dec
jno
lahf
mov
inc
and
pop
xor
dec
mov
inc
repz
mov
jbe
jmp
pop
in
js
call
sbb
xchg
std
aas
or
pop
pushl
das
mov
popa
int3
movsb
xor
push
jbe
insb
int3
fisttpl
lret
jnp
xor
and
cmp
ljmp
lds
fs
lock
cmp
push
cwtl
jge
mov
cltd
cmp
roll
fcom
cmc
test
jb
pop
icebp
or
ret
mov
sti
int3
or
xor
scas
cmp
push
shll
fdiv
imul
xchg
xchg
test
pop
xor
mov
xor
cmpsb
mov
dec
sahf
xor
push
imul
shrl
jge
and
and
push
pop
jnp
push
pop
mov
ret
outsl
and
sub
je
pusha
pop
js
idivl
xchg
jns
outsb
fimuls
shrb
repnz
xchg
mov
and
pop
mov
push
push
and
movsb
cmp
dec
inc
jb
incb
add
stos
mov
and
or
pop
mov
loopne
sub
cltd
add
test
xchg
or
mov
pushf
add
xchg
xchg
sbb
ret
lds
rorl
fwait
in
pop
cmp
jmp
jle
xchg
cmpl
mov
xchg
cmp
enter
jmp
repz
cmp
lods
cmp
mov
gs
out
and
outsb
sahf
stc
jge
mov
lahf
das
mov
daa
scas
sub
movsl
cmp
filds
dec
cld
jp
sbb
sbb
ja
add
incb
out
mov
xchg
scas
fldcw
repz
repnz
jecxz
pop
mov
in
mov
mov
mov
cmp
add
pop
test
xlat
lods
sub
test
and
mov
xchg
mov
xor
xor
rorb
xorb
movsb
test
push
add
jle
sub
pop
fwait
icebp
mov
dec
mov
and
sets
stc
adc
jns
xor
fidivl
jne
xchg
sub
lret
movsl
shl
jp
push
inc
cmp
cmpsl
push
dec
jl
cs
enter
mov
xor
inc
lret
sub
sub
ret
mov
mov
clc
sarb
pop
das
pop
movsl
cmpsl
fistps
cmp
xchg
movsl
add
fs
lock
xchg
push
sub
or
es
or
xor
jmp
stos
idivb
pushf
in
push
imul
mov
or
push
add
in
sub
or
or
dec
in
push
shrb
add
or
push
xor
les
inc
test
adc
icebp
fnstsw
icebp
mov
in
push
xchg
dec
push
dec
xchg
lret
das
sbb
inc
fucomi
add
test
mov
insb
mov
stc
cmpsl
scas
mov
fdivs
xor
inc
mov
mov
mov
iret
loop
cmp
pop
loope
sub
xlat
dec
mov
insl
inc
mov
or
divb
ret
outsl
or
push
cli
pop
sarb
pmulhw
ss
xor
mov
ret
sub
data16
jbe
int
add
mov
insb
jecxz
pop
shll
push
xchg
test
add
or
loope
mov
decb
cwtl
addb
outsb
and
test
roll
es
rorl
xor
xchg
or
and
fisttpll
xorb
stos
outsb
jmp
test
mov
lock
mov
and
jno
gs
ds
ljmp
arpl
and
orl
xor
test
and
jp
sbb
mov
mov
push
stc
das
inc
stos
mov
inc
pop
outsb
cmpsb
inc
pop
call
xor
pop
add
sahf
push
lods
sar
test
daa
negl
jg
or
movsl
ret
ljmp
pop
mov
mov
jae
mov
sbb
data16
pop
sti
loopne
push
cltd
subl
dec
arpl
mov
adc
daa
jae
push
mov
or
pop
inc
inc
cs
push
out
pop
sub
xor
int3
sub
ret
adc
aaa
push
out
sbb
xor
mov
mov
push
inc
out
jmp
mov
fsubp
arpl
cmc
push
out
pop
icebp
mov
negb
fcomps
es
inc
xchg
js
push
cmpl
sub
std
pop
pop
arpl
inc
xor
sbb
divl
or
ret
push
test
imul
cmpl
imul
xchg
adc
test
lock
ljmp
adcb
in
mov
pop
jbe
loope
ja
xor
mov
imul
or
mov
or
sub
pop
lret
dec
or
jle
scas
sub
mov
movsb
push
call
mov
movsl
stos
cmp
bound
adc
xchg
adc
sbb
popa
push
lods
rcrl
sub
sbb
aam
aam
dec
xchg
sbb
outsb
sahf
out
jg,pn
ret
adc
push
dec
adc
jp
sub
es
xchg
arpl
fisttpl
js
pop
lcall
arpl
sbb
mov
add
jno
inc
test
jnp
xchg
into
sbb
mov
int
jle
adc
mull
inc
pandn
mov
js
mov
push
data16
sub
mov
and
test
mov
xor
jae
sti
in
lds
and
pop
cltd
outsl
dec
movsl
sbb
fs
or
dec
das
jno
xor
add
inc
mov
out
xor
dec
mov
in
xor
mov
loope
mov
adc
mov
shl
outsb
insb
mov
loope
mov
mov
dec
or
dec
mov
mov
popf
inc
idivl
push
jb
mov
add
psubb
sub
cltd
adc
rorb
dec
daa
sti
pop
pop
pop
lahf
mov
sub
jmp
jmp
outsb
iret
lret
or
inc
sbb
push
push
int
mov
pop
sbb
jmp
xchg
pop
scas
jl
and
jnp
mov
mov
dec
test
cmp
and
scas
xor
push
in
nop
push
xchg
pop
sbb
enter
jae
lret
push
jle
icebp
xor
pop
scas
or
stos
inc
lcall
inc
ljmp
jge
mov
push
mov
sbb
test
cmp
mov
rep
push
mov
adc
mov
sub
push
add
mov
xlat
adc
jo
inc
push
push
add
lret
lds
lahf
sub
fwait
mov
cmp
std
cwtl
in
int3
cmpsl
lret
imul
mov
sub
addl
out
mov
adc
pop
adc
movsl
mov
or
inc
sub
jmp
mov
enter
cmpsl
cmp
fincstp
aas
adc
lock
and
jne
lea
push
dec
push
inc
insb
mov
in
push
stos
adc
out
lahf
mov
mov
and
mov
inc
test
negl
push
popa
dec
mov
dec
mov
sbb
loope
and
adc
xor
jnp
inc
dec
add
hlt
xchg
or
add
ja
add
jne
jo
subb
sbb
test
pop
pop
pop
add
inc
insb
xor
pop
std
aas
cmp
sbb
inc
jg
mov
pop
stc
icebp
orl
sbb
or
pop
daa
xor
xchg
ret
xor
fdivrl
pop
jno
ja
inc
sahf
sub
cmc
ret
fwait
daa
je
jge
fdivrs
test
into
jmp
mov
jns
in
adc
cmc
in
dec
stos
sbb
lods
jg
add
out
test
mov
stc
into
sbb
jmp
cmc
xor
inc
stc
into
aas
ja
jne
gs
jmp
xchg
and
daa
jge
xchg
loope
movsb
addl
mov
sbb
mov
inc
cmp
into
fildl
pop
lret
mov
in
or
mov
cli
sub
nop
cmpsl
inc
mov
fldt
add
dec
sub
and
push
popa
pop
or
insb
insl
popf
cmp
bound
sbb
loop
jbe
scas
ret
loop
xchg
cmp
sub
add
stos
cli
push
fsubr
adc
pop
xchg
adc
adc
ret
and
or
mov
sbb
dec
xchg
je
pop
js
inc
sub
pop
cld
into
pop
inc
leave
dec
ftst
inc
adc
jb
outsl
xchg
cmp
cmp
jge
hlt
stos
icebp
jnp
sbb
lods
sub
cmpsb
jne
in
cmp
push
mov
jo
push
pushf
outsb
pop
ja
shrl
dec
int
pop
outsl
sbb
jnp
pop
cmc
cld
cmp
jle
stos
or
sbb
sub
pop
popa
rclb
mov
subb
nop
shlb
xchg
js
in
stc
loop
clc
push
dec
imul
push
cmp
adc
pop
or
push
orb
xchg
fwait
cmpsb
popa
dec
mov
and
fisttpl
fdivrl
pop
into
sbbb
mov
mov
lahf
fsubr
adc
xor
cmpl
testl
and
icebp
lret
sbb
js
sbb
addr16
das
jno
add
rcl
inc
fs
xor
push
addr16
and
inc
xor
pop
xorl
dec
xrelease
push
jno
js
sti
lret
pop
jbe
lcall
mov
fwait
xchg
xlat
shrb
lock
mov
shrb
mov
ljmp
outsb
jge
cmpsl
jno
ljmp
and
jl
iret
xchg
gs
push
mov
test
jmp
stos
fs
inc
fmuls
mov
fmull
sarl
jb
or
or
loop,pn
iret
dec
xor
mov
pop
popl
xor
movsl
test
pmaxub
lds
mov
hlt
in
out
pop
jecxz
pop
inc
add
or
insl
scas
add
push
xor
imul
dec
xor
cltd
mov
sub
outsb
push
add
adc
leave
jg
repz
mov
xchg
loopne
mov
mov
cmpsl
cmp
xor
pushf
into
dec
or
adc
xchg
add
jae
xchg
adc
int3
mov
imulb
xor
mov
int
sbb
jp
xchg
std
and
pop
pop
ffree
std
jge
lods
out
sbb
dec
sub
xor
inc
adc
adc
add
mov
push
inc
cwtl
in
outsb
adc
push
arpl
fildl
mov
add
add
lods
mov
cmpb
fistps
jne
aaa
mov
jl
cltd
adc
push
add
cmpsb
or
out
pop
push
pop
dec
je
mov
jne
das
inc
ss
lret
les
cwtl
inc
adc
rorl
test
push
stc
push
xchg
rol
cmpsb
sbbl
scas
xlat
cld
imul
sub
pushf
push
loopne
cmp
mov
cld
inc
pop
rorb
fdivrs
xchg
stc
mov
xchg
ss
push
js
lcall
and
and
jb
movsl
xchg
lcall
jnp
into
fnstsw
cli
js
arpl
xor
dec
outsb
fcomps
sub
insl
and
sub
leave
xchg
adcl
fs
xchg
or
add
push
cmpsl
fucomp
int
mov
or
sahf
leave
popf
pop
sub
lods
cmp
mov
xor
pop
dec
or
fdivr
mov
idiv
push
rcrb
pop
mov
shlb
jb
jo
loopne
fs
js
push
rclb
cli
jb,pt
dec
add
jecxz
sub
ret
jmp
inc
fdivl
xchg
and
pop
cmc
jge
add
inc
fimuls
int3
pop
out
and
gs
xchg
adc
dec
shrb
xor
and
ljmp
sub
or
jmp
aad
mov
add
mov
jl
xor
sbb
dec
add
pop
das
xchg
push
idivb
popf
add
fnsave
cmp
jecxz
or
adc
les
loope
ja
ret
sbb
cwtl
cmp
out
int3
cmp
mov
pop
out
call
daa
aaa
mulb
jmp
lret
mov
xor
stc
jp
fninit
push
pop
shlb
add
ror
movsb
xor
pop
fdivr
and
pop
inc
ficoms
cmp
movsl
sub
jge
test
jnp
popf
cli
lret
jne
add
jnp
or
mov
mov
adc
sub
scas
rcl
dec
cmp
mov
cltd
jp
inc
xchg
jecxz
gs
adc
fiadds
mov
filds
pop
cmpsb
lea
mov
cmp
sub
dec
or
out
mulb
adc
cli
jne
push
xchg
icebp
xor
stos
outsb
data16
aad
es
dec
push
aaa
jmp
mov
push
cmpsb
subb
cs
aaa
push
clc
cmpl
mov
sbb
je
cwtl
fwait
cmove
insl
movsb
jecxz
arpl
ret
cmp
dec
dec
inc
xor
repz
jmp
std
test
call
testb
fwait
loopne
adc
pop
pop
xchg
addps
popf
fsubl
and
call
xchg
jo
jg
imul
aas
stos
jge
mov
jne
aas
jae
lret
xor
mov
subl
fiadds
sbb
ds
xchg
rorb
cmp
sub
lods
lret
test
enter
cmp
fstps
shrl
sti
out
inc
fsubrp
inc
or
adc
je
daa
sub
es
inc
xor
jecxz
les
ss
stc
into
stos
dec
aad
inc
jb
and
dec
lods
arpl
push
mov
push
xor
lret
cmp
sub
shl
mov
in
in
lret
loope
mov
and
mov
movsl
movb
jg
mov
xor
or
sub
mov
les
lret
in
xchg
pop
pop
push
jge
jne
xor
add
sbb
adc
inc
ss
cwtl
clc
rclb
addb
dec
int
add
add
xchg
lcall
and
xor
mov
mov
movsl
inc
ret
mov
pop
xor
stos
aad
adc
out
jo
out
das
mov
push
push
lahf
push
cltd
stos
mov
add
dec
mov
push
cltd
mov
aas
fmull
push
mov
inc
in
imul
aam
mov
lahf
jb
ljmp
mov
push
add
sbb
dec
daa
xor
movsl
inc
out
adc
out
pop
xchg
sbb
xor
das
xchg
ds
je
or
insl
sahf
add
or
sbb
mov
int
xor
fmull
lret
es
mov
mov
push
adc
jb
mov
loop
xchg
jmp
mov
cmp
aam
mov
inc
and
mov
sbb
mov
cmpsb
mov
fildl
sbb
shlb
cmp
sub
mov
jo
mov
push
dec
in
fdivrl
lret
adc
jno
int3
cli
xchg
ds
cmp
xchg
hlt
and
sbb
and
aas
cld
lcall
gs
pop
sbb
rep
add
push
inc
outsl
xor
js
push
sub
mov
mov
lcall
fwait
hlt
dec
mov
sbb
and
or
arpl
sbb
xor
adc
lahf
and
dec
adc
pop
pop
mov
xchg
movsl
out
stos
sahf
cs
sub
rclb
fwait
xchg
or
xchg
das
push
mov
and
jp
lods
adc
xchg
pop
xor
cmp
out
pop
xchg
add
pop
outsb
xor
xchg
inc
xchg
mov
inc
scas
mov
mov
dec
dec
lret
dec
ret
sub
xchg
movsl
and
je
mov
ss
jmp
ja
adc
ss
mov
mov
stc
inc
pop
cmpsl
test
lcall
std
popf
jg
pop
inc
xor
add
pop
push
dec
xchg
loope
pop
pushf
push
mov
repnz
imul
das
adc
cs
fstpl
test
and
ds
out
mov
stos
out
rolw
in
jp
outsl
hlt
sub
dec
and
shll
inc
inc
ljmp
icebp
mov
mov
aas
mov
push
lcall
jo
dec
inc
mov
loop
jl
adc
test
test
into
ss
push
jno
push
adc
sub
js
sbb
popa
fiaddl
sub
std
sbb
mov
sub
repnz
jne
clc
sahf
bound
sub
cld
loope
add
mov
adcb
dec
push
mov
xchg
shll
ja
mov
sbb
cmp
mov
clc
es
lret
push
sbb
mov
das
xchg
add
fadds
inc
in
daa
ret
popa
adcl
loope
pop
imulb
sbb
loope
mov
popf
sahf
in
mov
or
pushf
mov
sub
ret
mov
out
fsubs
cmp
ljmp
in
inc
gs
fildl
fstp
fdivl
cmpsb
or
lret
insb
pop
cmpsb
scas
cwtl
push
loope
lock
je
cwtl
ja
mov
sti
dec
sub
test
fildl
xor
sub
cmpsl
mov
sbb
cmp
sub
cmc
mov
xor
cmp
cltd
mov
mov
mov
mov
ss
das
jmp
je
mov
push
xchg
jecxz
mov
xor
push
sar
cmp
push
es
call
daa
dec
sarb
xor
cmpb
sarb
sub
cmp
lret
mov
ret
andb
jp
cmpsb
sub
subb
fcmovnb
out
lea
fs
ja
and
popf
pushf
in
cmp
fbstp
push
jp
notl
mov
and
andb
and
ss
pop
rcll
test
jno
imul
data16
inc
sub
xor
push
jnp
lahf
xor
mov
adc
cmpsl
cli
xchg
jo
xchg
mov
dec
pop
andl
mov
adc
cmpsl
call
mov
adc
and
pusha
das
fnstsw
jb
lock
add
pop
es
and
ljmp
add
push
outsb
cmp
cmp
xor
inc
xor
xchg
scas
mov
push
movsb
xchg
into
mov
mov
daa
rol
jno
pop
jl
cmp
mov
cmp
out
cmp
cmpsb
cwtl
inc
fs
sub
iret
and
in
int3
dec
pop
rcr
inc
mov
das
push
negb
out
leave
xchg
inc
cmp
rorl
sbb
and
data16
movsb
movsl
nop
or
jmp
das
stc
fstpt
movsl
leave
cmp
loope
inc
cmp
fisttpl
inc
pop
andl
push
mov
scas
roll
and
imul
fadds
sahf
cmc
sbb
dec
xchg
cs
aad
adc
mov
mov
test
jp
ja
mov
pop
imul
lds
jne
sub
cmp
jmp
jmp
sub
lea
push
popf
jmp
adc
inc
gs
mov
push
mov
cmpsb
jmp
inc
mov
jae
iret
push
inc
mov
mov
inc
fisttpl
in
scas
lea
jecxz
clc
xchg
and
jnp
bound
lock
mov
js
addr16
inc
push
ret
shl
loop
dec
aam
mov
ret
xor
jne
xor
gs
ss
mov
push
das
dec
adc
adc
js
pusha
jbe
mov
sbb
jnp
pop
out
cmp
scas
push
add
test
jno
or
int3
xor
imul
inc
sar
rcll
loop
cmp
sarb
mov
inc
pop
add
sub
add
mov
xor
js
dec
dec
push
adc
mov
arpl
movl
and
pop
je
sbb
loop
adc
dec
push
push
sbb
mov
insl
sbb
xchg
out
ds
imul
cmp
int
xor
insl
loopne
xchg
dec
jbe
sbb
pop
test
jae
in
rclb
and
add
ljmp
imul
fcompl
idivl
outsl
out
mov
test
xor
aas
jbe
shl
adc
inc
mov
loope
sbb
cmp
ret
inc
push
adc
add
cmpsl
xor
fs
pop
arpl
pop
jmp
hlt
cmc
mov
outsb
xchg
or
sbb
adc
mov
int3
inc
push
fnstenv
xchg
aam
enter
popf
insb
mov
mov
dec
scas
dec
lret
insl
xlat
mov
xor
int3
add
push
je
int
xor
add
adc
call
cmp
mov
stos
inc
mov
movsl
mov
rcr
scas
mov
shll
xor
mov
lcall
jae
add
add
jnp
sbb
mov
add
add
and
repz
xchg
fisubs
sbb
clc
pop
and
inc
test
sbbb
push
filds
shll
les
jmp
inc
mov
fxch
cmpsl
int
mov
and
popf
cltd
push
lds
mov
sbb
xchg
popa
faddl
add
leave
or
or
pop
cmpsl
dec
push
test
xchg
and
dec
mov
push
sarl
and
mov
stc
mov
jge
xchg
testl
add
adc
in
syscall
mov
jmp
xor
stos
push
mov
sti
xchg
pop
mov
popf
xchg
dec
or
add
fisubrl
inc
verw
addr16
cmp
dec
ss
std
inc
cmp
jno
and
mov
out
in
inc
xor
shlb
out
push
jbe
cld
xchg
adc
add
into
xor
adc
into
sbb
sbb
mov
leave
rcl
mov
test
std
jp
test
lock
xchg
xchg
xor
repnz
mov
or
or
stos
hlt
imul
orl
add
or
pop
aaa
test
and
outsb
xchg
jle
push
imul
pop
push
dec
push
adc
push
popf
jb
adc
fildl
ret
inc
xor
or
pop
lcall
pop
xor
jno
or
scas
stos
insl
mov
test
mov
push
jmp
in
add
jbe
sahf
and
jecxz
mov
fcomip
push
add
test
jle
ja
jo
cmp
lret
int
xor
inc
mov
mov
sub
les
push
mov
cli
xor
enter
xorl
es
inc
sbb
into
pop
adc
adc
pop
or
mov
cmpsl
ss
jns
dec
sub
decb
pop
mov
xor
dec
and
movsb
imulb
inc
les
cwtl
fsubl
lret
mov
jo
adcl
jno
ficoms
pushf
sarb
sbb
stc
test
cmp
push
xchg
cli
int3
jbe
pop
inc
cmp
sbb
xor
inc
out
mov
sub
mov
in
aaa
iret
test
daa
or
pop
aad
jp
mov
aad
pop
fists
cmpsb
inc
xlat
ja
adc
xchg
inc
sbb
stos
inc
into
les
mov
daa
pop
enter
jnp
xchg
jge
dec
test
mov
or
or
xor
mov
imulb
sahf
shll
pop
dec
mov
out
icebp
add
lods
insl
push
insb
shl
dec
xor
or
sbb
or
cmpsl
out
aaa
test
sahf
das
das
sbb
cmpl
or
cmp
std
daa
dec
divl
push
sub
xor
aad
aad
sub
xor
jb
mov
icebp
data16
cmpsb
gs
inc
sbb
and
inc
sub
or
outsl
push
test
sarl
mov
pop
sub
inc
jno
pop
mov
xlat
insl
or
jp
pop
mov
mov
fmulp
fs
popa
push
jecxz
pop
xchg
fistps
or
sub
lcall
add
js
test
mov
fisubrl
xchg
lea
imul
inc
dec
jne
jp
and
inc
or
xor
mov
fxch
mov
dec
loop
xlat
fsts
in
mov
lods
lds
int3
lock
and
aad
push
mov
sbb
hlt
jb
je
xor
lcall
in
cmp
jle
ss
imul
xor
push
jmp
insl
hlt
sbb
clc
push
pop
xor
xchg
jbe
out
or
jns
sbb
hlt
lahf
mov
push
add
mov
jge
cmpsl
xchg
out
push
roll
mov
stc
dec
push
jae
mov
or
cmc
roll
cld
repnz
sub
push
mov
push
lods
jmp
lea
gs
jecxz
mov
popa
mov
popa
orb
mov
cmp
mov
test
pop
ljmp
fistps
test
mov
and
push
enter
mov
sbb
xchg
mov
mov
push
test
inc
gs
mov
aad
dec
stc
cmp
std
inc
xlat
lret
push
mov
dec
roll
jno
mov
mov
pop
incl
xchg
out
mov
rclb
mov
in
jg
and
and
outsb
mov
jge,pn
inc
adc
cmpsb
stos
ret
sbb
es
repnz
je
mov
dec
inc
loopne
std
mov
es
ret
ret
push
ja
cld
shrl
enter
mov
jl
push
test
movsb
jns
lcall
out
push
or
rolb
testl
scas
pusha
das
jns
jbe
jmp
dec
pusha
sub
push
sbb
lods
mov
lods
jb
mov
loopne
into
cmp
jns
leave
and
inc
push
add
clc
stos
mov
out
ljmp
daa
push
lods
sub
insb
push
push
mov
push
rorb
adc
out
xchg
mov
mov
and
jge
cmp
out
inc
xlat
ret
int
sbb
mov
lods
mov
add
int3
lret
rcll
loope
or
fcmovbe
xor
aas
push
testb
ret
loope
aam
sarl
inc
les
push
and
add
lods
outsl
pop
imul
outsb
repnz
xor
ss
in
shll
xlat
mov
insl
xor
lods
inc
loop
aaa
sbb
inc
in
inc
fwait
out
cwtl
repnz
je
inc
mov
test
mov
pop
cmp
cmp
push
insb
push
inc
dec
inc
xor
popa
xor
push
lds
idivl
dec
pop
ja
subl
int3
jmp
mov
inc
cwtl
stos
jb
addb
in
testl
cmpsb
movl
mov
jnp
mov
outsl
xlat
push
xor
mov
rorb
mov
sbb
cmc
sti
sbb
cltd
pop
scas
cltd
shl
cmp
mov
and
cltd
xor
adc
xor
mov
gs
push
enter
jb
stc
add
dec
or
xlat
sbb
adc
fbld
push
aad
jmp
push
mov
pop
test
shl
push
mov
xchg
sbb
mov
sub
mov
fcom
insl
les
pop
stc
and
divb
in
xchg
sbb
fidivl
inc
out
cmp
ret
lret
xchg
std
cltd
mov
or
shll
icebp
pushf
aam
or
mov
fcoml
jp
xor
or
add
cmpsl
in
sbb
lret
lcall
dec
sub
nop
or
cmpsb
inc
and
xor
adc
push
xchg
in
arpl
lock
and
cmp
ds
daa
js
stos
mov
or
dec
add
clc
sbb
stos
lods
push
mov
mov
popa
cs
rolb
dec
push
aaa
push
pop
xorl
lods
js
stos
mov
out
cmpsl
add
adc
gs
mov
out
cltd
movsl
out
shrl
jno
lcall
sbb
jnp
push
rcl
pop
flds
adc
mov
push
jle
jg
dec
xor
stos
aam
int3
or
mov
mov
inc
in
push
sti
stc
lea
ljmp
fbld
xor
jp
pop
imul
push
in
mov
sahf
cltd
dec
jmp
shll
addr16
xchg
inc
in
push
mov
rolb
ds
fbld
jg
sbb
pop
mov
mov
add
mov
jp
addr16
out
outsl
cmp
imul
and
inc
cmp
insl
add
dec
btrl
inc
add
lret
inc
pop
movsb
push
add
out
jg
mov
iret
inc
push
jno
mov
lea
add
jnp
mov
cwtl
rorl
filds
int
outsl
sbb
in
cmp
in
ret
call
jle
mov
sti
sbb
add
sub
mov
dec
fwait
jecxz
addr16
std
fcompl
fbld
mov
sbb
inc
insb
dec
xchg
sahf
mov
je
repz
arpl
lret
fisubs
shrd
pop
jb
cmpsb
call
movsl
test
jp
adc
mov
mov
mov
in
mov
dec
mov
xlat
jecxz
pop
test
in
push
dec
jns
push
push
xchg
rol
and
inc
and
sub
setl
rcr
jecxz
rol
dec
test
jg
outsb
and
inc
cli
repnz
xchg
xchg
call
pop
addr16
xor
mov
xor
loop
dec
xor
adcb
push
ljmp
int3
or
adc
and
fisubrs
je
ja
pop
or
test
mov
or
popf
sahf
mov
xchg
mov
xor
sub
pop
lock
mov
xor
sarl
aaa
cli
dec
pop
pxor
iret
fsubs
shrl
xadd
pushf
mov
and
shl
cmp
cmc
movsb
or
add
fisttpl
add
mov
and
cmp
out
pop
jb
mov
hlt
mov
lahf
in
in
and
and
mov
loop
cmpsl
push
pop
mov
bound
test
cmc
or
in
inc
fadd
out
mov
mov
push
pop
movsb
sahf
push
dec
call
mov
sbb
repnz
cmpsl
dec
imul
xlat
in
xchg
xlat
mov
repnz
in
jmp
jbe
inc
int3
fbstp
mov
adc
js
rcrb
and
and
mov
mov
shl
scas
push
scas
dec
out
js
bound
imulb
inc
cmp
pop
xchg
inc
jmp
or
or
cmp
ror
out
jns
mov
es
inc
mov
stos
xor
jno
mov
sub
fwait
ja
sbb
aas
cmc
inc
jle
es
leave
leave
adc
and
and
aad
inc
push
out
int
fwait
enter
jo
pop
mov
and
cmp
shll
sti
and
or
xchg
mov
push
sbb
cmpb
xchg
mov
sbb
xchg
aam
and
lret
xchg
jge
ljmp
mov
pop
cmp
nop
cmp
stc
cmpb
stc
lret
adc
or
das
dec
movsb
inc
scas
movsb
cwtl
int
jne
pop
and
test
test
repz
and
xchg
jp
fisubrl
aad
mov
dec
jbe
pusha
dec
out
inc
push
cmp
pop
ret
int3
adc
mov
xor
ficoms
push
lahf
pop
and
xor
sbb
jnp
mov
lods
dec
and
out
aaa
stos
mov
inc
mov
push
cli
movsb
xchg
shrl
stos
dec
loop
inc
ret
ss
jp
jg
fistps
cli
out
xor
mov
cwtl
lods
mov
mov
loopne
loop
pop
cmpl
shr
pop
jne
sbb
mov
xchg
and
jnp
inc
jg
inc
or
clc
int
push
js
popf
rorl
arpl
and
fdivs
mov
imul
mov
dec
pop
jge
shr
daa
fwait
and
lods
xchg
mov
mov
mov
xor
cmc
loop,pn
jecxz
pushf
fmull
xchg
adc
or
fnsave
and
stc
lock
jecxz
jecxz
cmc
insl
cmp
add
push
je
or
pop
lahf
aaa
daa
stos
xorb
cmpsb
jne
add
mov
es
xor
pop
sub
jecxz
ljmp
aaa
xor
sbb
mov
add
mov
pop
dec
cld
gs
fisttpl
dec
inc
sbb
cltd
ret
push
jbe
lcall
push
imul
mov
cs
sbb
inc
add
xchg
jbe
ds
pusha
cmp
jg
dec
andb
xor
and
test
in
jbe
push
push
mov
dec
xchg
iret
adc
add
mov
xchg
adc
jbe
in
jb
and
loopne
fucomi
ljmp
rcl
or
sub
les
loop
mov
push
imul
and
inc
jnp
in
xchg
ret
push
jp
aaa
push
stc
and
mov
mov
hlt
mov
pop
dec
ret
adc
cmc
inc
xor
mov
pushf
sti
and
push
in
int
scas
mov
push
xchg
bound
mov
or
adc
dec
movsb
jp
sub
scas
lods
cmp
lret
clc
and
inc
rolb
xchg
jno
fsubrs
add
inc
jmp
std
in
jns
loop
mov
jecxz
adc
xor
in
sbb
and
sub
fstps
scas
sub
pop
out
jnp
in
les
aad
les
cmp
pop
arpl
aas
loop
daa
mov
test
into
cmp
pop
xchg
dec
mov
xchg
fwait
inc
dec
xor
mov
adc
imul
sbb
dec
loope
les
push
pop
loope
cli
insb
dec
lret
test
mov
lds
push
stc
mov
loope
sub
sbb
jns
mov
push
mov
scas
sub
ja
cmpb
xor
cli
pop
outsl
pop
push
dec
xor
les
mov
or
add
cmpsb
xchg
insl
pop
cmpsl
xor
add
cltd
sub
mov
rorl
or
push
and
xor
xchg
inc
sub
cmpsb
mov
rcrl
cmp
sub
jecxz
mov
or
push
cmpsl
insl
add
shr
mov
bound
fldenv
hlt
mov
cmp
and
punpckhdq
shlb
cmp
cli
and
sti
movaps
and
push
testb
outsb
xor
cmp
ja
push
pusha
lcall
ljmp
and
mov
sarb
mov
scas
add
mov
sti
sbb
push
sbb
cwtl
cmpsl
in
jne
in
mov
pop
rorb
xchg
push
xchg
scas
mov
adc
mov
adc
adc
int3
mov
or
push
push
fimuls
fstl
cli
loopne
dec
push
out
fcomps
aam
sti
pop
mov
in
outsl
inc
mov
mov
insl
fcomp
std
sbb
adc
pop
aam
mov
movsl
jno
sub
sub
jb
pushf
adc
fidivrs
popa
nop
mov
fistl
jmp
mov
cli
push
out
in
popa
xor
scas
adc
movsl
imul
stos
mov
popf
add
std
arpl
hlt
in
mov
cltd
xlat
dec
jg
testl
pop
sbb
push
cmp
sahf
lret
mov
sti
sbb
or
nop
dec
lret
cltd
int3
cld
mov
in
es
popf
out
or
inc
jno
movsb
mov
repz
pop
xor
lcall
sub
test
or
fimuls
inc
push
jp
lods
les
fucomip
gs
shll
cmc
mov
nop
out
dec
add
mov
test
cmp
addb
inc
arpl
test
mov
movsb
push
xchg
fiaddl
mov
test
in
in
test
xlat
fmuls
push
mov
aad
sub
ds
inc
cmp
lods
daa
scas
fcmovbe
xchg
rcll
enter
mov
sub
roll
dec
cmp
in
add
push
cmpb
jmp
test
testl
cmp
jns
out
aaa
mov
adc
fucomi
adc
jle
pop
xor
cmp
fstp
jae
mov
sub
dec
adc
push
push
cmp
fdiv
and
mov
adc
nop
adc
add
mov
out
lea
insb
jmp
aam
stos
pop
mov
imul
stc
lcall
cmpsl
and
arpl
mov
jne
sub
cmp
jmp
ds
sbb
movsb
cmp
cmp
inc
sub
mov
test
pop
sbbb
cld
pop
sub
pop
xchg
arpl
std
xlat
cmp
rclb
pusha
out
xor
dec
in
pop
sub
inc
pop
xor
add
sub
packsswb
mov
xchg
cmp
aaa
out
pop
push
scas
jnp
xchg
mov
mov
bound
push
loope
jle
cld
fadds
jmp
and
insl
dec
popa
shl
mov
mov
jae
dec
xor
or
incb
inc
mov
dec
push
cmp
jb
test
inc
dec
adc
mov
sahf
jb
dec
clc
or
push
lret
add
aas
out
add
and
lods
mov
punpckldq
iret
inc
pusha
mov
dec
push
jbe
push
add
pop
jno
ret
cltd
cmpsb
sbb
icebp
xchg
cmp
sbb
sbb
test
shlb
sahf
js
add
out
aad
setbe
jge
loope
bound
shl
pop
cmp
sub
jge
jecxz
pop
pop
fisubrs
arpl
addr16
push
fnstsw
cmp
sbb
incl
adc
sub
push
icebp
jmp
loopne
pcmpgtw
rol
sbb
stos
js
aam
pop
sub
and
or
icebp
nop
dec
fwait
or
popf
jbe
mov
je
inc
adc
xchg
ljmp
pop
inc
push
mov
lahf
cmp
in
mov
stos
mov
and
arpl
mov
cs
dec
pushf
out
shrl
inc
insb
das
pop
ret
roll
jecxz
ljmp
fdivrl
xor
dec
mov
dec
adc
lahf
xchg
lock
mov
mov
fwait
test
daa
and
jg
int3
cmovs
jmp
xchg
push
sub
cmp
sub
pop
jbe
xorl
xor
loopne,pt
imul
fstpl
dec
shlb
dec
fs
loope
pop
push
mov
mov
sbbb
adc
jae
and
or
jb
xchg
push
testb
inc
mov
fldenv
adc
out
mov
scas
push
lds
jecxz
push
mov
lret
adc
dec
ljmp
and
jecxz
inc
call
jb
push
fnstcw
mov
out
cmp
pop
fmulp
inc
cmp
jbe
mov
cmp
xor
and
pop
ret
lcall
aas
add
cmp
pusha
call
jle
or
inc
inc
xlat
cmpsb
or
jae
jecxz
roll
in
cli
scas
inc
pushf
add
xor
mov
pop
mov
repz
ljmp
sbb
sahf
sub
scas
adc
push
sti
out
cld
enter
sbb
mov
subl
imul
dec
js
movsb
out
add
xchg
fmull
pop
or
test
sbb
mov
xchg
inc
adc
rorl
xor
xchg
fmuls
pop
adc
cmp
push
xchg
push
aam
push
xlat
xchg
pop
arpl
sbb
cmp
adc
xchg
push
xchg
fistl
popa
sub
sbb
mov
sbb
push
lock
inc
aas
inc
aaa
out
mov
cli
add
mov
leave
cmpsb
call
das
shr
repnz
pop
mov
push
inc
ret
mov
mov
movsb
mov
jb
mov
mov
xchg
dec
push
and
aad
imulb
aas
arpl
mov
jbe
push
int
jae
pop
jle
xchg
mov
test
cmpsl
mov
test
lcall
jnp
fmull
lds
sub
adc
jg
clc
pushf
fsubrl
in
out
lods
leave
xchg
cs
rcll
pop
enter
or
sahf
lea
in
dec
int3
dec
push
inc
leave
test
lahf
xchg
mov
or
lret
dec
out
sbb
daa
enter
sbb
cmpsl
and
sub
lahf
movsb
or
fidivl
jns
jmp
ja
push
xchg
push
jae
mov
and
in
mov
rclb
pop
pop
inc
jle
cmp
cmpb
mov
test
adc
mov
jnp
ss
pusha
mov
push
mov
inc
sbb
ja
mov
lock
sub
jae
subl
inc
insl
cwtl
out
in
and
test
sub
pop
ss
sub
sarl
arpl
aaa
cmpl
call
imul
and
cmpl
mov
cltd
pop
flds
jns
pushf
loop
mov
aad
xchg
int
cmp
mul
push
cwtl
sahf
outsl
push
mov
and
insb
jbe
notb
adc
std
in
xor
push
jg
out
jnp
sbb
imul
popa
in
lret
mov
inc
jg
stos
aad
jns
adc
shr
sub
push
out
xor
scas
lods
cmp
fs
push
xchg
out
popa
cmpb
mov
sbb
outsb
dec
pop
or
adcl
imul
aam
lret
ds
fnsave
inc
aaa
leave
lods
sbb
xor
pusha
cmp
out
lea
add
int
mov
pop
rcrb
lcall
lret
les
jmp
xchg
sbb
pusha
dec
jge
inc
sar
mov
push
jp
ja
sahf
lar
loopne
hlt
xor
mov
pop
mov
sbb
mov
dec
cmp
inc
int3
int
rol
jno
jbe
pusha
imul
jb
aad
lret
sbb
push
dec
pop
stos
outsb
adc
aam
sarb
fwait
or
mov
add
xor
scas
jp
inc
or
ret
push
fucom
scas
and
js,pt
scas
shll
es
aad
and
lods
pop
sub
lea
inc
pop
push
add
xchg
jg
out
pop
scas
lahf
stos
xchg
bnd
cld
sbb
shl
loope
imul
shlb
push
imul
jge
cmp
outsl
pop
push
testl
out
or
pop
mov
leave
mov
xchg
js
jge
push
lods
addr16
and
mov
cmp
dec
pushl
add
and
cltd
lahf
xor
jmp
mov
xor
mov
enter
mov
mov
sbb
sub
lods
fmul
push
lods
xor
adc
jp
fnstsw
dec
leave
in
std
cmpsl
insl
pop
std
push
push
inc
data16
iret
mov
xor
inc
pushf
and
sbb
xchg
fcmovnbe
inc
ja
lea
imul
mov
inc
fstpt
adc
gs
jne
lahf
daa
inc
stos
mov
mov
dec
sbb
jno
sub
push
cmp
pop
pop
enter
pop
sarb
push
hlt
xchg
rol
mov
xchg
out
movsb
imul
sahf
or
loope
cmp
push
mov
lret
jecxz
push
xlat
lock
lret
cmp
in
mov
bound
mov
inc
ja
mov
fimull
mov
adc
insl
loopne
sub
rcll
cmp
sub
aas
add
sub
pop
xor
out
push
loope
popf
add
movsb
pop
inc
fs
jp
push
jl
sbb
ja
rcrl
jmp
cmp
add
das
ljmp
inc
sub
sarb
inc
add
xchg
jp
push
ja
xchg
mov
lret
sub
movsl
add
pop
jg
addr16
movsb
mov
fdivrl
push
or
jl
adc
inc
movsb
or
jbe
clc
pop
pop
nop
ljmp
lretw
sbb
lcall
inc
mov
xor
sarb
repnz
int
lods
cmp
xlat
adc
shll
xor
jae
iret
pop
push
jle
ja
dec
shl
jns
dec
pop
int
cmpsl
mov
pop
or
repnz
out
dec
ljmp
or
into
test
jecxz
mov
test
or
insb
cmp
stos
xor
rol
lcall
adc
mov
mov
mov
mov
jp
insl
mov
fs
arpl
and
pop
jg
sbb
jg
pop
andl
out
mov
sub
insl
out
mov
xchg
cs
mov
sbb
insb
mov
sbb
popf
pusha
or
ficomps
push
das
pop
dec
mov
xchg
push
and
add
mov
pop
cltd
cmp
xor
jbe
inc
mov
mov
cmp
jbe
jno
fisubl
xor
jbe
jge
or
jle
call
out
fistl
clc
mulb
xorl
lods
mov
or
mov
movsb
inc
iret
sbb
pop
pop
test
int
inc
xchg
inc
jae
lea
sbb
push
jge
jno
xlat
or
jno
pop
add
mov
sub
mov
fs
adc
insl
outsb
lea
fidivrs
rorl
adc
lock
add
fistpll
lock
xchg
mov
test
add
adc
cwtl
pop
lcall
movsl
inc
and
jns
pop
mov
push
cmp
sbb
push
cli
xchg
adc
add
mov
mov
dec
dec
sub
push
ss
adc
loopne
gs
mov
dec
mov
xorl
xchg
loope
mov
cmp
out
cmp
pop
sbb
or
pop
loopne
cmp
addl
pushf
vmwrite
mov
push
push
aad
fldcw
pushf
inc
adc
jb
or
mov
rorb
fs
or
stos
outsl
dec
repz
movsl
xor
pop
lea
mov
ss
aas
push
into
pop
addl
dec
dec
cli
jae
jg
add
repnz
mov
cmp
popa
pop
sbb
mov
stos
stc
dec
out
jge
popa
iret
sub
rcrl
fldcw
dec
cmpsb
mov
dec
lods
adc
mov
xchg
sbb
rcr
add
rol
cmpsb
xchg
lock
nop
and
jmp
mov
mov
xchg
or
insl
xchg
xchg
clc
clc
fs
or
and
push
mov
pop
ret
push
dec
jbe
adc
inc
cmc
insl
testl
xchg
lods
add
xchg
xor
aam
icebp
subb
fisubs
xor
mov
xchg
sti
mov
lock
subb
sahf
repnz
and
push
cwtl
mov
xchg
sbb
repnz
adc
sbb
fmull
out
cmp
pop
test
rorb
out
stc
mov
mov
bound
ss
add
cld
xchg
fstpl
mov
mov
ffree
sub
dec
insb
mov
jne
cmp
andb
xorl
leave
ds
rolb
mov
mov
xchg
cmp
push
sti
push
mov
cmp
push
sub
cmpsb
inc
mov
xchg
sub
lea
in
pushf
mov
idiv
sub
sbbl
or
mov
scas
icebp
sbb
loope
roll
inc
xchg
xor
mov
xchg
pushf
pop
lret
inc
es
repnz
cmpsl
testb
fidivrs
cwtl
xor
iret
sbb
xorl
sbb
iret
mov
lcall
cmpsl
mov
inc
inc
sahf
xchg
xorl
or
fcom
sub
add
mov
aaa
rcll
pop
fnsave
xchg
pop
dec
nop
sti
daa
stc
cmc
push
sti
hlt
test
sub
jns
mov
jo
fstpl
lret
test
lods
lret
punpckhwd
fstpt
adc
mov
push
push
jne
dec
data16
mov
in
call
out
movsl
jle
cltd
and
cmp
int
xor
cmp
xchg
imul
cmp
in
sub
pop
sar
ss
push
xchg
daa
xchg
data16
inc
addb
pop
cld
repz
mov
jmp
test
sbb
sbb
push
sbbl
mov
shrl
movsb
call
dec
or
push
cld
pop
add
push
jb
mov
subb
dec
rorl
sahf
out
das
push
mov
sub
xor
jo
mov
js
int
mov
lods
pop
lret
mov
fistpl
pop
popa
sbb
push
js
aas
xchg
and
and
arpl
negl
mov
lds
push
xor
shl
xchg
sub
xchg
cmpsb
mov
insl
loope
outsl
push
adc
daa
lds
sub
ss
cmp
sub
xchg
test
xor
shl
gs
or
or
mov
pop
mov
add
sahf
inc
mov
jmp
rcrl
dec
jp
js
sub
jle
int
adc
outsl
jmp
mov
in
mov
or
jnp
pop
adc
jmp
jp
int
xchg
xchg
xlat
dec
adc
mov
ljmp
inc
aaa
jg
cmpl
stc
cmp
lds
out
jae
pop
aam
scas
mov
test
iret
jno
cmp
ds
lock
fs
push
jnp
jbe
pop
int
ret
add
xor
fninit
cld
aam
jp
xchg
dec
movsl
adc
xor
loopne
mov
outsl
inc
popf
in
fs
mov
sbb
jle
mov
sbb
mov
jae
jmp
pop
or
cmp
jb
dec
iret
lea
add
mov
jb
inc
push
jns
imul
adcl
les
pop
and
mov
mov
cmp
inc
iret
push
shl
mov
sbb
dec
aad
sub
out
xchg
ss
or
jne
arpl
push
xor
xchg
jle
sarb
inc
and
pushf
push
mov
insb
xchg
fistps
jns
add
cmpsl
xor
aas
lods
fwait
lret
cmpsb
and
fnstcw
jno
ljmp
sub
lods
xlat
lock
ds
lcall
in
lock
js
mov
sub
push
roll
nop
stc
out
and
sub
mov
xchg
mov
loope
fnclex
lahf
inc
movsl
in
dec
enter
or
shl
sbb
push
arpl
movb
and
mov
test
nop
lret
subb
stos
imul
test
jae
pop
into
mov
jb
repnz
shl
jle
dec
adc
lret
sub
cmc
mov
lds
jp
push
lcall
xchg
loope
xor
mov
je
jnp
adc
mov
sub
cmp
xor
cmpsl
add
jl
pop
cltd
cmc
cltd
dec
fidivl
aas
sub
cmp
mov
fnstcw
dec
cmc
ljmp
ljmp
xchg
push
cmc
test
xchg
xchg
shrl
outsb
hlt
enter
push
push
hlt
jecxz
lcall
add
inc
and
push
adc
lahf
mov
aad
dec
dec
mov
mov
xchg
mov
stos
ret
iret
cmp
dec
mov
add
jbe
adc
xchg
xchg
aad
mov
pop
insb
std
xchg
sbb
jo
jmp
cmpl
and
insb
rorl
sub
ret
out
cltd
hlt
push
repnz
addr16
xor
adc
mov
out
out
sbb
inc
in
jbe
xchg
out
dec
jnp
cli
int3
cmpsb
mov
push
or
dec
sub
adc
mov
sarl
or
jecxz
cmpsb
cmc
shlb
sbb
adc
jle
add
inc
sub
dec
push
jg
push
shl
or
jno
pop
mov
fsts
sbb
mov
aam
adc
add
call
sub
adc
ret
push
int
adc
jo
push
out
ja
outsl
xor
aad
sub
lods
fildll
mov
movsb
and
ljmp
push
sub
cmpsb
mov
movsl
pop
fistps
mov
jp
add
jge
sub
pop
out
in
ret
xor
add
xor
inc
aam
daa
mov
js
mov
cltd
add
mov
test
arpl
dec
inc
out
adc
cmp
cld
stos
cmp
xor
pop
or
std
imul
inc
test
sbb
mov
pop
cltd
xchg
jae
arpl
or
jle
adc
dec
loop
sub
fistpll
xchg
aad
inc
cs
sbb
jo
lret
popf
inc
fwait
mov
mov
and
pop
mov
jbe
sub
in
dec
nop
mov
push
pusha
jae
jge
fimuls
aaa
jb
out
test
jecxz
roll
jno
in
cwtl
lods
rorl
stc
push
ds
inc
fs
imul
fwait
and
or
inc
inc
jl
ret
mov
sarl
adc
out
mulb
xor
mov
cmpsb
xchg
xor
dec
test
add
fnstenv
scas
addb
jmp
xor
aaa
jns
mov
or
dec
fcoml
repz
rcll
pop
outsl
lret
xchg
push
add
nop
call
popa
dec
es
movb
lret
lock
mov
cmc
mov
cmp
add
mov
ljmp
mov
jmp
mov
push
scas
pop
pop
insl
jmp
call
ss
add
dec
imul
std
pusha
cmp
sub
xor
inc
mov
lods
mov
sub
pop
ficompl
ret
push
cmp
imul
mov
icebp
outsl
cmp
insl
mov
adc
inc
mov
mov
mov
push
jno
mov
mov
les
ret
adc
lds
ret
addb
jns
std
push
mov
jno
scas
push
mov
xchg
enter
test
push
jns
scas
std
clc
aad
xlat
or
int3
out
jbe
loop
ja
xchg
stc
mov
aaa
cwtl
mov
iret
xor
movsl
rorl
mov
movsl
push
pop
sbb
xor
push
add
push
icebp
lret
daa
cmp
or
int3
out
jg
into
sub
mov
mov
stos
pushf
pop
xchg
sub
mov
stos
nop
fwait
inc
std
xor
jge
fsubl
mov
mov
cmp
imull
lods
inc
fnstenv
mov
jl
loopne
insl
xchg
and
icebp
push
add
add
xchg
lea
cmpsb
fisttps
mov
mov
or
xchg
fldl
xor
sti
adc
es
fs
mov
xor
add
into
push
cmp
in
mov
cmpsb
adc
jbe
mov
aad
fs
mov
adc
inc
jecxz
filds
loopne
imul
lahf
insb
push
stos
fdivrs
rolb
push
in
add
mov
cwtl
lods
push
movsb
cmpsl
into
call
mov
lret
mov
es
ja
and
xchg
jg
outsl
out
jge
jg
jbe
scas
add
sbb
push
outsb
pop
adc
xchg
jle
inc
out
push
mov
scas
mov
mov
mov
faddl
sbb
mov
js
push
cmp
mov
mov
insb
push
iret
mov
cmp
out
jnp
jno
ret
cmc
popf
repz
loopne
jl
or
ficomps
add
je
cmp
xchg
mov
cwtl
or
inc
xchg
lret
fs
xlat
inc
aas
in
sbb
xchg
mov
test
mov
idivl
dec
or
add
ds
repz
xchg
inc
ret
js
pop
in
cmp
ret
or
lods
jbe
mov
imul
fs
jge
or
sub
test
hlt
lret
out
addr16
mov
aas
xor
aam
test
adc
cmp
xchg
mov
dec
dec
pusha
in
jbe
mov
push
xlat
cmp
addr16
cmp
mov
rorl
xchg
ja
stos
mov
xchg
sub
adc
fnstcw
mov
push
aas
jnp
scas
sub
jmp
lea
inc
fwait
cmp
push
adc
cmp
das
sub
pop
push
dec
sub
jbe
popf
outsb
jle
xchg
or
xchg
ja
jg
mov
leave
sbb
mov
adc
mov
dec
pop
lcall
and
enter
mov
dec
mov
cmp
xchg
fcomip
adc
xlat
dec
adc
cmp
ja
xor
inc
movsb
into
movsb
clc
adc
rcll
ljmpw
dec
cmp
push
popf
add
xchg
add
push
mov
out
outsl
ljmp
push
test
lods
addr16
test
add
pushf
cmp
xchg
scas
dec
cmpb
fs
inc
scas
pop
repnz
cld
mov
ret
and
dec
shrb
mov
sub
cmpl
or
cmp
mov
mov
divl
mov
xor
fs
sub
pushf
mov
adc
test
lret
lds
rorb
push
in
mov
sbb
loope
mov
sbb
imul
pop
fbld
or
jo
lahf
sbb
fnsave
ret
testl
pop
inc
mov
popa
iret
jmp
cmp
push
sbb
dec
push
jnp
jae
adc
adc
test
jbe
and
inc
mov
out
dec
add
stos
sbb
and
push
mov
fdivl
xor
call
push
data16
sbb
jmp
loopne
adc
push
out
push
stc
xor
jne
rorl
or
subl
jg
or
xor
lcall
out
shlb
lahf
jae
repz
or
aad
xor
lock
js
daa
es
jg
imul
fdivrl
push
sub
rcll
lret
sub
and
out
leave
movsb
fs
lock
jo
xor
jmp
xchg
in
mov
xor
out
imul
int3
dec
sarl
cli
jne
jp
nop
and
mov
mov
cmp
sti
mov
fwait
cltd
pop
mov
mov
sahf
call
ds
mov
das
or
aaa
cmp
ret
jb
add
push
loopne
leave
mov
adc
push
pop
jmp
jns
enter
repz
jmp
fstps
sarb
pop
dec
les
cmpsl
push
or
ja
insl
and
adc
push
pusha
ret
cmp
popa
dec
fwait
mov
inc
out
cwtl
js
lahf
dec
dec
mov
les
push
jbe
inc
movsl
in
cmp
cmp
add
dec
stc
test
pop
cmpsl
es
out
sub
cwtl
repnz
jl
in
inc
pop
aas
sti
xor
dec
mov
sti
xchg
push
push
mov
inc
scas
mov
lds
pop
inc
push
test
adc
mov
and
cltd
mov
push
fmuls
sub
in
cwtl
aas
cmp
mov
push
xlat
std
adc
cs
scas
data16
xor
into
ret
lock
inc
sub
ljmp
das
dec
rolb
ss
or
inc
sub
push
out
fisubs
sub
ljmp
test
xchg
outsb
ljmp
cmpb
lock
lret
xor
push
stos
jp
or
add
lahf
daa
mov
sub
fcomi
fnstenv
inc
pop
push
xor
je
pop
mov
das
test
shlb
sbb
ljmp
or
pop
jns
cmp
mov
or
leave
in
int
aam
xor
inc
outsb
cmp
pop
scas
nop
jl
hlt
clc
xor
inc
xor
pushf
inc
rclb
cltd
sbb
cli
inc
arpl
add
and
jns
lea
jne
xchg
inc
lret
jo
idiv
jno
nop
incl
mov
dec
jmp
cs
movsl
adc
popf
sbb
lea
mov
icebp
add
fadds
lret
mov
mov
imulb
pushl
sub
test
ja
repz
xlat
mov
pop
popf
filds
inc
js
imul
lret
sub
jns
nop
push
insl
insl
mov
dec
xor
mov
dec
sub
jg
pusha
sbb
es
sbb
ds
sbb
sbb
scas
or
inc
or
dec
mov
push
rcll
push
movsb
and
mov
inc
popa
hlt
or
in
xchg
jnp
push
lock
pop
adcl
fs
adc
scas
loop
mov
jge
sbb
jmp
dec
lea
scas
cld
int
pop
cmp
xchg
pop
push
inc
mov
and
out
cmpsb
or
leave
out
punpckhbw
aam
fstpt
pushf
pop
xor
dec
cmp
stos
jg
ficompl
or
dec
shl
cmpb
sbb
bound
jle
fisttps
das
pop
stos
mov
pop
mov
icebp
and
nop
mov
adc
mov
in
inc
jmp
cmpsl
pop
push
setp
aas
and
add
inc
jnp
adc
hlt
xchg
inc
psubb
mov
ret
clc
cltd
jne
paddq
push
jo
push
add
in
dec
sti
dec
es
cltd
add
push
sub
jp
std
stos
inc
sub
js
sub
cwtl
in
add
into
dec
in
cmc
lods
or
pop
imul
cmp
test
cmpl
in
mov
dec
fisttpll
ljmp
xlat
gs
int
lcall
loopne
pop
sbb
jle
gs
pop
shl
mov
sub
test
and
or
and
inc
inc
mov
icebp
cmpl
lods
mov
pusha
aas
pop
daa
mov
sti
ret
and
sbb
loope
xchg
rsm
ss
push
arpl
popa
int
sti
je
into
stos
shll
or
and
in
jnp
fdivrl
iret
sub
mov
sbb
jg
cmp
xchg
and
inc
xchg
sbb
sbb
xchg
pop
sbb
mov
enter
cmp
cmpsl
lcall
rorl
and
lret
pop
and
cs
mov
jo
nop
push
adc
ret
fdivs
push
test
lods
test
insl
dec
cmp
por
dec
lret
push
lret
or
lock
push
and
int
or
xor
push
jbe
repnz
mov
adc
pop
addb
in
or
or
xchg
jo
pop
inc
push
cs
jns
xor
jne
aad
sbb
hlt
mov
ja
inc
xor
jl
jo
push
jnp
sbb
loope
push
pop
push
mov
ss
roll
sbb
inc
les
hlt
je
int
mov
fnstcw
int3
data16
xchg
or
dec
aas
ds
jne
add
test
shrl
fxtract
xchg
add
cli
fisubrl
fmull
cmp
es
mov
insb
outsb
inc
enter
dec
stos
rcrl
sbb
jl
iret
pop
into
aad
xor
or
sub
lret
and
lds
cmpsb
jo
adc
cmp
jae
repz
mov
int
test
add
aas
mov
mov
add
and
cmp
mov
push
stc
inc
popa
sti
mov
inc
inc
mov
mov
fwait
add
leave
into
pop
in
cmp
jp
push
sbb
jecxz
nop
je
lea
les
cwtl
orb
inc
mov
insb
pop
xchg
jp
and
push
cwtl
sub
xor
insl
cmc
mov
loopne
aam
stos
jle
rorl
mov
cltd
inc
xor
fwait
jl
pop
pop
rorb
pop
hlt
daa
imul
movsb
cmp
stos
cmc
sbb
or
stos
es
je
inc
sbb
ffree
bound
addb
jnp
pop
adc
gs
idiv
movsb
pop
aam
dec
or
mov
dec
cmp
xchg
adc
rclb
push
push
push
jae
mov
dec
jb
jle
pop
aam
insl
hlt
and
clc
and
jno
inc
loop
jp
cld
add
cmp
sbb
loope
mov
mov
jb
jne
loopne
xorl
imul
cmp
push
lods
inc
pop
and
rclb
add
pop
jae
shrl
loop
mov
fildll
push
aam
rolb
jne
cld
push
mov
cli
or
push
jge
jnp
lea
aad
inc
int3
cmp
pop
adc
dec
inc
jp
adc
and
test
and
inc
and
inc
rcll
fstpt
mov
pop
je
add
setg
mov
mov
inc
push
mov
mov
xor
add
das
ss
sbb
xor
mov
sub
mov
dec
mov
cmp
cwtl
repz
daa
mov
out
add
addl
stc
into
push
popa
jp
inc
cwtl
lods
push
loope
lahf
xchg
addr16
icebp
dec
mov
adc
std
popf
sub
inc
test
outsb
sbb
pop
push
les
cmp
les
xor
div
rcrl
pop
aaa
sub
push
inc
into
leave
inc
cmpsl
xchg
iret
or
push
and
jg
and
lods
jae
movsl
push
adc
and
sti
mov
and
clc
cli
inc
pop
movb
inc
aas
sbb
fcoml
mov
adcb
jecxz
push
add
in
lahf
push
cld
fisubrl
ror
mov
add
mov
ds
sarl
push
pop
sbb
movsb
xor
stos
das
xchg
or
mov
or
mov
pop
test
mov
js
test
xchg
ljmp
sub
shl
das
xor
dec
fsubrs
iret
repnz
pushl
lock
jbe
fstps
insb
sarl
xchg
les
mov
data16
enter
js
add
ficomps
test
mov
xchg
xchg
xchg
cmpsl
push
clc
mov
sarl
and
popf
mov
push
add
cmpsb
jb
xchg
jmp
sbb
repz
ljmp
pop
adc
lea
dec
ds
aam
nop
outsl
pop
out
push
addr16
test
and
clc
mov
and
adcl
add
or
testb
imul
stos
mov
inc
pop
rcr
out
and
jo
xor
pop
mov
aad
mov
push
lahf
test
mov
push
ds
inc
cmp
xorb
jbe
mov
repz
inc
mov
mov
ljmp
xchg
fdivrl
aaa
in
lea
mov
dec
out
add
inc
andb
add
mov
jmp
lds
xchg
dec
lock
xlat
mov
stc
jge
and
lret
pop
outsl
stos
fisttpl
lods
and
in
dec
push
inc
ss
push
and
cmp
lods
pushf
lret
jl
xor
pop
lea
mov
ss
mov
std
xor
xchg
movsb
ljmp
and
push
sub
shlb
mov
cltd
mov
dec
push
inc
mov
idiv
mov
push
xchg
out
mov
nop
fnstenv
aad
pushf
addr16
scas
sbbl
jmp
pop
cmpb
in
ret
mov
popf
mov
xchg
mov
add
jmp
cmp
ljmp
and
push
addl
lea
imul
es
inc
in
jmp
xor
sub
add
loope
stc
mov
call
dec
inc
ljmp
in
mov
and
mov
rol
push
outsb
xor
aad
jp
std
nop
das
dec
add
fdivrs
xchg
mov
mov
js
nop
mov
adc
pop
mov
test
and
sbbb
out
icebp
fidivrs
es
repnz
repnz
adc
push
pop
adc
mov
push
mov
pop
icebp
pop
and
cmp
xor
lea
jge
xchg
rcr
sub
xchg
out
mov
jmp
arpl
in
sub
arpl
jge
dec
jle
and
pop
js
loop
daa
push
or
ret
xlat
scas
pusha
adc
iret
cmpsb
into
adcl
cmp
das
mov
mov
gs
in
pop
lret
fisubl
add
push
into
mov
sbb
fldl
sub
dec
test
insl
xchg
xchg
bound
cwtl
jnp
jne
inc
jle
mov
jb
inc
adc
pop
add
nop
ja
in
sub
outsb
sti
lods
inc
fidivl
jo
rcl
ds
lock
fcomi
and
push
xor
jl
dec
lcall
mov
xchg
les
je
cld
sbbb
and
pop
cmpsl
push
fdivs
and
lea
push
insl
sub
fs
lock
lds
mov
sub
cltd
mov
sub
dec
jge
adc
lahf
cmpb
jmp
lods
sti
stos
repnz
sub
mov
xchg
xor
cmp
pop
jmp
icebp
mov
jnp
sub
cmp
mov
bnd
or
push
pop
jns
mov
inc
cmpsb
dec
and
test
add
inc
repz
add
adc
scas
and
xchg
fstl
mov
out
ds
mov
inc
je
in
push
cli
jbe
lea
dec
push
ficoms
add
pop
xchg
mov
das
inc
mov
test
nop
push
jo
cmpl
cmpsl
test
shll
in
push
sbb
adc
je
addl
mov
inc
xchg
lods
sbb
mov
dec
divl
mov
loopne
enter
and
push
popa
bound
sbb
push
in
int3
xchg
jae
dec
ret
fisttps
sub
and
jnp
pop
xchg
insl
mov
subl
jnp
stc
push
dec
icebp
fldenv
add
jnp
mov
mov
mov
outsl
jae
fsubs
add
pop
jbe
jge
and
leave
cmpsb
pusha
insb
pop
out
mov
idivb
rorl
inc
jl
add
bound
jge
insb
sub
sub
mov
ret
dec
rolb
push
xchg
adc
pop
cmpsl
repnz
fwait
mov
inc
stos
dec
jp
test
cmp
in
aas
loopne
mov
xlat
mov
inc
jg
stos
sbb
mov
pop
inc
in
xor
shll
mov
js
dec
xchg
fwait
addr16
xlat
and
add
push
imul
push
loope
adc
pop
scas
xchg
sub
mov
popf
hlt
jge
mov
cmpsl
subb
cmp
testb
xor
xchg
xlat
addr16
inc
fs
aam
push
or
push
push
xchg
add
push
jnp
loopne
iret
iret
sbb
fbstp
inc
push
pop
test
rolb
lods
cmp
dec
fwait
cmp
mov
push
and
gs
or
dec
leave
sub
rclb
pop
out
inc
int
scas
pop
jg
push
cwtl
jmp
dec
out
iret
pop
cli
jnp
mov
pushl
pop
xchg
enter
jmp
outsl
hlt
jmp
insb
fsubl
and
in
mov
fisttpl
cltd
mov
inc
sub
icebp
push
and
mov
xchg
or
orb
fsubrl
rcr
adc
outsl
push
es
cmp
sbb
or
push
mov
jg
mov
out
pop
mov
shrl
rol
aas
mov
pop
or
xchg
and
lret
adc
inc
clc
jns
push
adc
jb
jle
aam
out
jmp
js
cmp
leave
lea
pop
jecxz
fmull
lock
cmpps
into
pop
cmp
sub
push
stc
jmp
inc
xchg
inc
clc
lods
inc
pop
gs
cwtl
out
cld
sarl
cltd
xchg
fisttpl
imul
or
dec
dec
sbb
out
dec
aas
jne
xor
push
outsl
das
sbb
sbb
and
dec
pop
fstpt
or
mov
andb
push
lahf
loop
insb
imul
jb
sahf
jno
aad
pop
xlat
inc
test
hlt
push
hlt
in
cmpsl
mov
inc
xchg
scas
pop
or
push
sub
std
jge
xlat
add
mov
xchg
adc
xor
mov
jno
xchg
push
sbb
jp
xor
out
into
pop
and
clc
ss
mov
or
mov
jbe
insb
dec
in
cmp
inc
popa
push
pop
jne
insb
or
cmp
xor
jno
loop
mov
out
idivb
rcll
sahf
adc
lcall
adc
dec
xor
icebp
andl
cmc
test
cmp
and
mov
sub
dec
or
sbb
movsl
es
loop
xor
iret
data16
sbb
pop
insl
sahf
xchg
out
mov
scas
push
jle
and
push
mov
adc
cld
sbb
push
cmpsb
push
movsb
mov
sbb
rorb
jg
add
out
cmp
inc
ljmp
bound
push
xor
dec
cli
fstps
lret
in
decb
cmp
cmpsl
in
jg
lret
imul
ljmp
leave
or
addr16
sub
jp
push
popa
repz
in
pop
aad
insb
inc
xchg
mov
shr
mov
pop
incb
aad
fnstcw
xor
aaa
dec
hlt
loop
mov
dec
btsl
dec
repz
loopne
jbe
icebp
int
lcall
fnstsw
addr16
xchg
mov
xchg
mov
xorb
xlat
pop
dec
pop
sub
in
push
test
addl
and
pop
xor
adc
mov
gs
cmp
and
inc
aam
or
jno
test
add
adcb
jg
adc
imul
cmp
adc
rcll
xor
test
movsb
cmp
pop
xchg
aad
cmc
mov
fs
mov
loop
in
aam
pop
sub
mov
push
arpl
stos
lret
lods
adc
rorl
add
jecxz
cmpsl
sub
fcmovnb
adcl
push
mov
imul
jne
sbb
mov
lret
jnp
and
mov
adc
sbb
add
les
push
loop
movsb
and
outsl
mov
pop
into
lock
int
mov
daa
mov
mov
fwait
je
sub
aaa
sbb
movsb
mov
in
xor
in
ret
outsl
cmp
call
xlat
adc
cmp
or
mov
leave
push
andb
cmpsl
mov
push
dec
dec
pop
daa
sub
xor
xor
cwtl
lret
aas
mov
mov
push
mov
dec
pop
les
dec
out
and
test
xor
rclb
add
pop
ss
sub
clc
or
aas
add
adc
mov
mov
dec
pop
add
and
test
mov
fwait
cli
xor
ret
je
ja
cmpsb
adc
cmpsl
mov
ss
pop
adc
fists
outsb
jmp
insl
mov
fldenv
cmp
sbb
add
ds
xchg
cli
int3
adc
and
or
dec
sub
repnz
add
mov
lock
jl
rcrb
xchg
call
push
lods
adc
push
push
mov
xchg
mov
loope
imul
jne
in
pop
test
xchg
cli
inc
mov
sub
mov
jbe
cltd
sbb
pusha
xor
test
in
stos
pop
jp
dec
sahf
mov
in
adc
lods
mov
scas
xor
mov
popa
insb
and
or
fisttpl
outsl
pop
and
xchg
dec
mov
repz
pop
cmp
push
mov
pushf
call
fidivs
lret
les
adc
ss
inc
mov
mov
cmp
lods
out
mov
mov
pop
adc
loopne
add
lcall
add
test
jnp
nop
lret
fadds
jg
adc
dec
xchg
adc
push
xor
mov
xchg
pop
pop
addr16
pop
popf
sahf
xor
jmp
push
xor
lret
pusha
std
pushf
cmp
fs
scas
push
xchg
and
jecxz
inc
adc
xor
or
jnp
push
xchg
je
add
inc
or
jns
aam
inc
inc
mov
xor
and
sbb
adc
sub
in
sub
js
ljmp
aam
mov
fildl
notb
aaa
stos
xchg
push
scas
mov
cmp
lret
or
cmc
xor
fldenv
adc
loope
pop
testl
push
rorl
sub
xchg
cli
scas
xor
scas
sbb
and
cwtl
fstpl
or
add
cld
call
sub
ds
jnp
jbe
int3
push
inc
lret
ret
xor
jge
sahf
ja
push
jmp
jecxz
out
in
push
out
imul
into
inc
hlt
push
adc
mov
aam
imul
or
aaa
lock
add
jnp
into
les
es
dec
ret
push
and
push
cltd
mov
jae
and
xchg
popa
test
push
and
or
adc
ja
ret
xor
out
loope
mov
daa
subl
jns
sub
test
aam
and
rcrb
xor
sub
xor
push
or
jo
imul
inc
cmpsl
insl
cs
cwtl
pop
popf
sbbl
mov
js
cmp
jg
mov
repz
or
dec
repz
push
in
sub
push
inc
pop
pop
pop
inc
mov
mov
mov
movsl
adc
addb
push
hlt
fwait
sbb
push
lret
or
hlt
ljmp
daa
lods
adc
inc
xchg
mov
cmpsb
push
pop
addb
and
dec
xchg
inc
int
daa
xlat
std
in
jle
mov
stc
lods
imul
out
decl
pop
jle
lcall
ret
cwtl
iret
cwtl
fs
xchg
mov
shlb
mov
sub
stos
xchg
or
mov
insl
les
xor
lods
inc
xor
mov
fcomip
movd
xchg
jae
aas
loope
scas
mov
adc
jb
std
xchg
mov
and
nop
pop
out
inc
sub
xor
cmp
xor
mov
aaa
add
scas
jbe
test
pop
push
leave
ds
mov
cmp
cmpl
xchg
repnz
fildll
ljmp
lahf
xchg
mov
lret
and
fdivrs
scas
imul
and
inc
xchg
add
mov
ja
adc
lods
xor
add
xchg
ret
imul
xor
sbb
dec
lret
or
out
test
adc
and
push
fisttps
addb
xor
push
inc
mov
push
and
push
push
es
pop
cmp
fsubs
jbe
lret
mov
sub
cld
shl
sti
push
mov
jnp
lahf
stc
stos
dec
sarl
xchg
xor
sbb
jnp
das
repz
outsb
in
mov
sbb
dec
mov
inc
cli
stc
push
enter
arpl
mov
xor
inc
lds
loopne
test
divb
fwait
mov
xchg
lds
jmp
or
push
cwtl
dec
jle
mov
loope
addr16
push
push
int
cmp
aad
out
outsl
jg
mov
mov
push
movsl
inc
sub
mov
pop
mov
out
lahf
mov
sahf
and
mov
sub
or
fmuls
jg
inc
lahf
or
inc
push
mov
and
fisubrl
mov
cmp
mov
out
xlat
addr16
xchg
inc
pop
rorb
mov
pop
mov
push
dec
push
adc
scas
ljmp
add
push
pop
dec
mov
push
stos
inc
add
ret
pusha
add
mov
pusha
test
xchg
xchg
outsb
add
pop
hlt
insl
lds
dec
mov
jmp
fs
sub
rcrb
sti
scas
daa
pop
mov
mov
jg
or
fcmove
add
hlt
adc
scas
or
or
std
cmc
gs
out
adc
sbb
jo
and
mov
inc
sbb
data16
repz
jecxz
and
or
into
jmp
cmp
adc
call
cmp
or
mov
xchg
sub
ss
loope
inc
cltd
sbb
mov
fisubs
leave
in
push
xor
mov
decb
pop
inc
or
jo
dec
sub
stc
or
push
xor
imul
pop
subb
sub
ficoml
sahf
scas
sub
jne
xchg
xor
fisttpl
cli
call
pop
mov
pop
in
loopne
inc
xchg
inc
dec
sub
or
sbb
jae
test
shrb
mov
loope
pop
hlt
jg
pushf
mov
push
std
inc
hlt
arpl
test
sbb
xor
cli
out
xlat
push
mov
jae
pop
push
stc
adc
les
daa
sub
xchg
fisubrs
pop
sbb
add
fxtract
notb
stc
or
push
pop
pop
ds
mov
sbb
fidivrl
jle
inc
idivb
dec
mov
imul
aad
lods
adc
ret
test
jo
inc
sbb
add
mov
lea
nop
loop
mov
rclb
pop
xchg
and
jmp
inc
icebp
xlat
and
xor
and
loope
or
les
inc
sub
add
outsb
inc
push
mov
test
jae
loope
stc
loope
cmp
pop
xor
outsl
loopne
sarb
jb
mov
cmpsl
mov
push
xor
cmp
mov
jnp
pop
add
push
adc
movb
mov
push
fidivl
or
xchg
cmp
or
push
lret
xor
inc
sub
mov
inc
sbb
adc
push
aas
add
sahf
mov
fxch
adc
adc
enter
shlb
imul
or
sti
aaa
fs
cltd
mov
lcall
sub
cmc
test
movsl
test
bound
cmpsl
push
rolb
test
outsl
and
jae
cmpsl
imul
add
stos
sarb
inc
xor
or
ret
pop
sahf
into
sahf
sbb
fcmovbe
cmp
sbb
cmp
movsb
xchg
dec
cwtl
jp
jb
sbb
lods
or
icebp
jb
add
outsb
jne
mov
or
add
dec
je
ficoms
jmp
xchg
xchg
mov
xchg
mov
push
xchg
mov
cmc
lahf
lods
in
out
mov
push
in
je
insl
xchg
push
pop
cmp
cmp
dec
hlt
add
subb
out
lds
add
jb
and
jbe
inc
fsub
sbb
xchg
push
sbb
mov
push
lcall
sbb
adcb
push
scas
mov
int
add
sbb
mov
sbb
imul
int
mov
sub
enter
sbbl
fucomi
test
add
inc
add
add
cmp
test
int3
cli
mov
jo
ror
bound
into
movsb
jns
in
rcll
stos
in
test
cmp
dec
cmp
enter
and
sub
lahf
jecxz
dec
lods
inc
jne
and
xor
xlat
adc
neg
sahf
pop
shrb
scas
cmp
sbb
dec
fcoml
mov
call
mov
xchg
xor
jns
gs
push
cmp
add
imul
outsb
push
popf
jb
xchg
insb
sub
inc
push
mov
sub
jecxz
jp
pop
inc
sbb
addr16
and
fcom
enter
jne
clc
in
sub
mov
pop
ret
mov
dec
call
lds
xchg
daa
xchg
insb
cmp
jnp
sbb
inc
loop
aas
sti
ds
int
push
xor
repnz
adc
mov
aad
cltd
xchg
push
push
loope
inc
push
adc
xor
mov
cmp
inc
pop
xchg
cltd
adc
and
mul
or
popf
out
xor
dec
xchg
xor
sub
jp
jge
lret
mov
mov
inc
out
mov
xchg
push
mov
xorb
clc
mov
inc
jbe
mov
rcrl
jns
or
jle
out
jnp
outsb
lret
sbb
jnp
adc
adc
shll
pushf
jle
mov
frstor
lds
push
and
je
cmp
mov
outsl
call
fcomp
lret
xchg
out
in
js
jo
test
and
inc
mov
mov
xchg
enter
pop
lcall
mov
call
cmpsl
fcmovbe
push
mov
xor
scas
insl
mov
in
divl
pop
shll
mov
sub
pop
push
inc
or
add
mov
repz
loopne
mov
neg
stc
nop
aaa
xor
push
push
cltd
jecxz
pusha
mov
fs
subl
cld
int
and
inc
mov
jae
gs
leave
je
outsl
lcall
lds
inc
mov
int
jl
cmp
pop
sub
pop
leave
or
into
ret
mov
fs
mov
fisubrl
ret
jnp
ret
test
xchg
mov
lahf
xor
loop
roll
xor
push
std
lock
adcl
pop
mov
loop
aad
jle
pop
fdivrp
xor
int
test
movsb
mov
adc
dec
xchg
loope
ret
mov
bound
or
ljmp
movsl
and
lods
dec
dec
scas
daa
and
and
xchg
imul
scas
sbb
push
mov
adc
scas
mov
cltd
shll
cmc
push
das
lds
inc
lods
xchg
adc
push
rcrl
lods
sbb
in
enter
pop
push
push
xor
jbe
adc
sarb
dec
addr16
aaa
jns
mov
loope
push
in
cmpsl
je
push
jl
mov
das
push
sbb
outsb
cmp
add
fwait
in
in
ss
cmp
stos
pusha
clc
bound
std
pushf
enter
dec
push
in
fwait
adc
xchg
push
test
or
pusha
mov
dec
cmpsb
jnp
ret
jmp
add
mov
push
int3
inc
jo
stos
cltd
xchg
dec
jp
pop
outsb
aad
sub
lods
pop
mov
loop
adc
inc
test
push
jnp
dec
mov
jp
inc
cmpsb
and
add
mov
rorb
daa
shlb
push
jb
xchg
pop
add
stos
jl
pop
cmp
test
xor
outsb
mov
xchg
sub
or
adc
mov
into
fsubp
pusha
mov
pop
sti
ret
repnz
scas
rcll
lock
test
fisubrs
lods
push
test
mov
aaa
sub
pop
js
sbb
add
adc
mov
loope
ret
out
cmp
dec
gs
jmp
push
cltd
pop
pop
dec
and
call
repnz
xchg
popa
xchg
jno
adc
lahf
lcall
pop
movsb
mulb
push
shr
iret
lahf
cmpsb
jbe
stos
adc
loope
rcrb
push
pop
add
dec
push
sub
push
adc
cld
xor
ret
movsb
push
or
inc
lret
sahf
repnz
sbb
enter
jae
mov
sbb
loopne
pop
mov
stos
or
adc
cltd
lods
and
jmp
inc
jge
fildll
jecxz
int
mov
pop
dec
in
test
mov
in
jmp
xor
pop
movsb
push
xchg
pop
add
mov
gs
and
std
test
mov
movsb
rcrl
jg
xchg
das
ret
push
cltd
rclb
in
or
test
mov
bound
mov
fbstp
and
jp
inc
loopne
das
adc
push
inc
and
dec
mov
subl
or
rcll
jns
and
rcr
push
and
mov
mov
repnz
inc
add
push
push
xchg
inc
lea
pop
jecxz
les
inc
push
xchg
sar
hlt
dec
mov
rorl
add
cmp
in
push
mov
lret
call
ljmp
ds
pop
mov
or
test
cwtl
pop
sub
inc
aas
xchg
push
add
jle
or
push
pop
push
test
test
lds
ror
sub
fs
xor
notb
popa
in
sbb
bound
mov
mov
rcl
jmp
fcmovnu
mov
mov
in
bound
inc
mov
ficomps
cld
out
mov
xchg
cli
cld
sub
out
mov
in
std
and
popf
ret
adc
int
fwait
mov
mov
jno
jbe
pop
imul
add
in
and
lods
or
aaa
sar
aas
mov
add
frndint
cli
xor
pop
std
push
ja
flds
ljmp
jle
inc
in
out
inc
and
rol
aaa
shlb
lret
xor
inc
push
cmp
adc
xor
push
or
js
sub
dec
push
repnz
lret
out
addr16
xor
xchg
movsl
mov
adc
faddp
jmp
adc
mov
cmpsl
xor
fidivs
add
sahf
adc
decb
int3
dec
lahf
pop
mov
push
scas
icebp
jnp
mov
xor
sarl
dec
ljmp
cmpl
call
dec
js
mov
push
or
jmp
outsb
dec
pop
lret
xlat
jnp
dec
mov
inc
xchg
repz
jle
dec
mov
sbb
aas
mov
rcll
mov
setno
xchg
cli
pushf
jne
sub
inc
and
pushw
pop
pop
sbb
lret
push
pop
sub
loopne
not
in
pop
jbe
jge
flds
in
mov
adc
adc
lods
cmpsl
mov
or
pop
iret
cmc
divb
inc
mov
push
push
clc
mov
dec
inc
sub
mov
cmpsl
add
arpl
push
icebp
jg
push
aam
and
inc
xor
arpl
test
rorl
aaa
and
or
int
sbb
cmp
fists
lea
in
int
mov
aad
clc
add
icebp
sbbb
fildl
lcall
sub
aam
jno
fdiv
ret
cwtl
pusha
jp
sbb
scas
cs
loop
sub
jl
sbb
ficomps
mov
adc
and
adc
std
loop
jle
mov
repnz
push
gs
fisttpl
lds
xor
jne
insb
inc
jge
push
cmp
orb
jmp
add
cmp
inc
inc
mov
mov
test
jp
in
push
fbld
jne
sub
mov
mov
scas
fstpt
bound
out
daa
sub
push
xor
add
mov
and
enter
ret
adc
lret
sbb
jl
add
loopne
stos
mov
sub
mov
loop
dec
inc
mov
out
test
nop
and
sbbl
sbb
dec
push
dec
add
pop
rcrl
popf
sbb
dec
xchg
pop
pop
cmp
aam
xchg
test
xchg
outsl
push
mov
int
lods
mov
outsl
push
add
imulb
shrl
adc
repnz
xor
cwtl
adc
out
adc
sbb
mov
test
jl
cli
lods
fwait
out
mov
mov
jg
inc
xchg
loope
pop
hlt
fdivrl
call
adc
lock
jg
leave
or
xor
test
out
xchg
pop
daa
jge
add
dec
mov
xlat
shl
fwait
and
adc
inc
lods
xchg
mov
or
jmp
jo
xor
inc
test
clc
insb
pop
and
scas
ja
mov
shlb
rcrb
mov
pop
in
shl
pop
fstl
shl
xchg
sbb
bound
in
and
lret
add
icebp
pusha
cwtl
or
inc
xchg
test
or
jbe
shll
ja
xor
push
inc
into
repz
in
and
adc
mov
repnz
adc
in
sbb
roll
mov
mov
jb
in
subl
mov
outsb
imul
rorl
xchg
loope
aas
dec
sbb
or
push
pop
mov
loope
mov
dec
or
cmp
xchg
loop
js
imul
ret
dec
jnp
jmp
add
cmpsl
add
and
mov
sub
hlt
lea
jb
xor
adc
fdivrl
sub
xchg
lret
decl
sub
pop
jo
pop
adc
ucomiss
int3
fwait
jecxz
add
adc
lea
mov
and
pushf
orb
xchg
outsb
jmp
jmp
sbb
mov
loope
jns
inc
into
fadds
cli
adc
cmp
lods
cld
sub
sub
jl
jg
mov
xor
ret
inc
outsl
push
sbb
cltd
and
iret
out
rcl
fnsave
dec
pop
or
sti
stos
inc
lret
push
cwtl
imul
adc
inc
cmp
cmpb
js
aad
push
sbb
ja
lret
xor
cmp
cmovo
push
xor
scas
xchg
fnstcw
inc
xor
mul
pop
sti
enter
jg
jecxz
int3
adc
loop
sbb
adc
xor
cmp
mov
mov
and
addr16
sub
jle
pusha
leave
push
incl
js
xor
jg
mov
cmpl
leave
movsl
cwtl
add
das
push
pop
jbe
fwait
xchg
dec
aaa
in
mov
mov
jmp
mov
daa
stos
and
call
dec
lods
sbb
daa
jo
mov
mov
out
iret
iret
cltd
cmp
lret
pop
inc
stos
xor
sub
mov
std
into
psubd
lea
mov
cmpsl
push
sub
dec
movsb
dec
mov
rorb
xchg
sti
dec
lds
pop
insb
cmp
sbbb
imul
pusha
jecxz
push
sbbb
clc
pop
push
leave
or
xchg
out
mov
mov
int
mov
call
push
and
ja
pop
mov
mov
and
out
push
mov
sbb
sahf
out
xor
test
mov
add
push
sbb
sbb
mov
xchg
adc
outsb
and
daa
sbb
cmp
fucomi
test
cltd
or
push
pushf
jecxz
roll
pop
lds
pop
lahf
mov
orl
mov
cwtl
mov
and
adc
arpl
repz
enterw
sub
sub
fistpll
mov
mov
insl
jae
lret
insb
or
daa
push
mov
rol
inc
fimull
test
fcoms
xor
adc
sbb
pop
stos
mov
enter
rcrb
xlat
cmc
pop
pusha
lret
fstpl
sub
jbe
insl
sub
loope
cmc
inc
or
decb
mov
lret
add
sbb
add
xchg
sub
push
inc
rorl
ljmp
insl
jmp
push
jmp
repnz
scas
in
or
ret
leave
xor
mov
jne
subl
pop
into
aaa
into
jl
jle
jge
or
pop
jnp
and
inc
sub
int3
sub
fisttpll
mov
loop
ds
rcll
loope
ret
cmp
add
outsl
int
out
addl
dec
adc
push
not
aam
and
jge
inc
scas
jmp
sub
cmp
popf
scas
or
mov
pop
stc
adc
movsb
fcoms
mov
sbb
cltd
das
or
mov
add
push
mov
adc
lock
cmp
jnp
bound
xor
int
pop
repnz
out
jb
inc
sbb
in
icebp
xor
loope
adc
dec
lock
adc
lahf
jle
leave
insb
stos
xor
and
and
arpl
lret
les
mov
aaa
sahf
jmp
lock
aad
inc
loope
push
in
push
dec
daa
mov
sub
cmp
push
test
sub
mov
mov
shl
pop
mov
jp
loopne
push
icebp
test
pop
ljmp
push
mov
jp
mov
pop
xchg
stos
and
mov
jb
pop
test
push
outsl
mov
int
sub
data16
jmp
clc
pop
mov
mov
jo
cmp
pop
sbb
sti
imul
les
xchg
mov
mov
sub
adc
mov
out
mov
cltd
sub
dec
jo
pop
adc
sbb
pop
pop
push
fwait
push
mov
out
int
xlat
gs
loop
cwtl
mov
aaa
stc
pop
push
xorb
js
add
inc
imul
stc
xor
sbb
add
insl
cli
xchg
test
ret
inc
push
std
mov
orl
xor
test
pop
sub
scas
int
in
aaa
cli
in
fxch
loop
pop
out
ja
sbb
xor
lods
cmp
or
jle
jo
inc
push
mov
add
add
cmpsl
shlb
lcall
call
inc
fdivs
xchg
cmc
jmp
xchg
cs
xchg
pusha
cmp
lcall
popf
mov
and
adc
mov
dec
pushf
in
and
push
mov
mov
fcompl
push
lods
fucomip
xchg
adc
shrb
mov
lods
pushf
mov
adc
mov
movsl
ret
ljmp
and
xchg
fisubl
push
sub
ret
ret
mov
add
insl
and
mov
inc
mov
dec
cmpb
add
sub
adc
movsl
lcall
cmp
adc
test
dec
sub
les
or
sbb
das
pop
fnstsw
dec
jns
pushf
fistpll
xchg
add
and
cltd
mov
loope
push
fdivrs
leave
xchg
xchg
jno
jmp
imul
das
stc
xchg
repz
mov
lea
jg
xlat
jmp
sub
imul
out
push
cmp
pop
fidivrs
dec
popf
push
cmpsb
sti
xchg
stc
adc
outsl
mov
jbe
mov
out
cmp
jo
dec
lds
cmc
lods
lahf
repnz
iret
jne
je
add
lods
ss
push
cmp
push
add
int
sub
mov
call
std
xor
add
xor
or
mov
push
int
push
cmp
out
mov
jb
movsb
orl
movsb
lcall
or
adc
out
cmp
test
imull
and
sbb
ss
cmp
es
add
pop
clc
add
dec
int3
sub
in
sub
imul
or
and
mov
mov
xchg
fmul
out
sarl
mov
scas
add
cltd
out
in
mov
out
mov
sbb
jecxz
jb
insb
idivb
sbb
jae
dec
push
push
je
testl
in
flds
std
sub
into
loopne
jae
xchg
test
lods
inc
xchg
pop
enter
lahf
add
lods
adc
mov
jne
cmp
movsb
outsb
sbbb
push
je
sarl
outsb
and
pop
push
into
mov
sahf
dec
outsl
cmp
jg
sub
shll
test
lret
mov
outsl
mov
pop
adc
jb
cwtl
lods
mov
xchg
and
es
dec
sub
xor
mov
xchg
and
sarl
aad
pop
adc
lods
shrl
pusha
shlb
xchg
sti
nop
int3
cwtl
in
lea
out
leave
es
ja
arpl
adc
push
sbb
into
ja
dec
sub
std
in
push
outsl
pop
cs
cmp
in
adc
pop
push
and
push
sbb
bnd
sarb
lods
push
sub
lret
sahf
sub
adc
mov
mov
lds
cmpb
lret
push
or
out
push
fdivrs
inc
xor
mov
out
es
xor
out
lds
mov
mov
push
popl
nop
sub
and
movsl
std
das
push
repz
xlat
mov
xchg
inc
mov
xor
dec
dec
rclb
push
sub
push
sub
dec
aas
pop
fstp
sub
mov
inc
dec
cs
and
xchg
sub
nop
das
dec
cld
inc
or
in
rorb
iret
cmpsb
bound
adc
sub
cmc
sbb
mov
out
dec
out
cmp
out
cli
shl
push
xchg
dec
xor
dec
cmpsl
jno
push
mov
orl
ret
sbb
stc
or
push
dec
out
push
cmp
mov
outsl
fbld
test
or
insl
daa
sbb
imul
loopne
fmull
push
scas
fidivl
sbb
xchg
jp
ja
sub
in
mov
pop
arpl
mov
ret
mov
cmpsb
in
mov
movsl
sbb
adc
testb
fs
cmc
sub
or
stc
jnp
fbstp
add
sbb
xchg
dec
cs
jge
pop
jns
scas
in
int3
fists
xor
shlb
lods
loop
pop
mull
fimull
das
cmp
sub
mov
das
cmp
call
mov
inc
mov
out
ljmp
subl
jnp
stos
mov
mov
out
int3
out
push
cmpb
stos
hlt
in
stc
dec
pop
fmull
or
int3
es
and
mov
pop
lods
repnz
int3
sub
pop
and
sub
cmp
pop
outsl
xchg
jl
dec
xchg
sub
mov
xchg
xor
push
mov
fwait
jbe
fldt
test
adc
test
cs
imul
cmpsl
lods
pop
sbbl
mov
jns
or
xor
mov
enter
cli
imul
xor
pop
fmuls
pop
push
push
pop
dec
sbb
dec
cltd
xor
xchg
pop
in
dec
imul
mov
or
xchg
lahf
xor
adc
mov
dec
icebp
les
push
mov
push
aam
pop
jns
jo
mov
and
stos
jge
mov
jle
orb
testb
pop
in
jae
pop
aaa
in
mov
ds
test
jecxz
and
mov
mov
add
push
mov
bnd
mov
sarb
rorb
shll
inc
repnz
mov
mov
inc
fdivrl
es
out
repz
lret
and
adc
orb
and
dec
test
dec
add
imul
fs
fidivs
xor
int
loop
inc
roll
mov
inc
inc
scas
inc
and
ljmp
cmc
sbb
jecxz
jne
mov
sub
pop
push
mov
jo
insb
mov
loopne
jnp
imul
inc
adc
dec
test
adc
mov
mov
xchg
mov
pop
xchg
dec
and
aas
ljmp
hlt
ds
add
js
imul
enter
jg
jno
cmp
sbb
fbstp
push
add
out
out
into
and
jo
mov
and
enter
mov
les
das
popf
movsl
popf
cmp
xchg
inc
fnstsw
mov
adc
jg
mov
dec
cmp
insb
sahf
inc
fisubs
lds
ja
jg
aaa
push
les
add
sbb
std
test
cmpsb
pop
icebp
xchg
aam
jae
gs
fadd
pushf
fidivrl
inc
popf
jge
add
sti
icebp
sti
sbb
pop
aam
xchg
cmovb
and
cmp
ljmp
call
aam
or
mov
repnz
sub
lods
dec
movsb
insb
orl
or
mov
mov
data16
insb
sbb
loop
mov
mov
pop
pop
enter
lods
aaa
pop
test
stc
push
jae
xchg
clc
mov
addl
inc
insl
jo
push
and
out
imul
inc
pop
adcb
xchg
cmp
aam
stc
lea
jmp
push
pop
cld
sub
adc
pop
xchg
cli
out
fsubs
fstl
adc
jnp
xlat
pop
lret
sbb
xchg
mov
push
xor
dec
jge
or
hlt
jne
ljmp
hlt
and
mov
test
jns
mov
mov
push
jl
popf
ds
fcoms
xor
outsb
xchg
xchg
xor
bound
imul
sub
aaa
push
mov
pop
lds
nop
mov
pop
dec
xor
xor
sbb
jnp
sub
fidivs
mov
es
ljmp
add
ret
mov
shll
lcall
cmp
xchg
add
ljmp
xchg
adc
loopne
mov
and
shrb
fcmovnb
sub
test
xchg
int3
xchg
jmp
sbb
xor
xchg
jle
inc
subl
pop
xor
mov
mov
fstpl
mov
mov
repnz
hlt
das
add
dec
adc
mov
rcrl
mov
jl
cmp
int
mov
jecxz
add
jns
jge
test
out
or
mov
out
fdivrs
cs
fwait
aam
into
out
es
fnstenv
out
dec
pop
add
ficompl
inc
sub
jnp
das
out
ljmp
xchg
and
mov
adc
aaa
sbbb
sahf
sbbb
push
dec
pushf
mov
in
roll
sbb
push
sub
lods
lods
lret
and
gs
imul
mov
arpl
ja
lock
and
sar
mov
mov
cmpsb
test
sahf
cmp
dec
dec
add
cmp
adc
adc
lods
addr16
sbb
insl
sbb
inc
dec
sbb
fldcw
pop
mov
stc
push
call
orl
lret
mov
sbb
sub
lods
ja
insl
mov
int
sub
ja
lahf
sbb
mov
cmp
xchg
xchg
jmp
outsb
cmp
add
in
insb
jno
lods
insl
flds
bound
insl
xor
andl
insb
test
stos
aad
shll
sub
inc
fs
das
ja
outsb
jg
fnstenv
inc
int
iret
sbb
das
mov
movsb
ljmp
push
stc
xor
pop
push
sbb
in
pop
push
mov
jle
aaa
insl
aaa
mov
dec
pop
cmp
sub
bound
cmc
daa
sarb
or
mov
scas
cs
dec
mov
lret
call
dec
ret
xchg
pop
cmpsl
cmp
in
sbb
shll
mov
stc
push
adc
pop
enter
cmc
jl
ret
sbb
lret
or
enter
hlt
sbb
sub
hlt
jae
icebp
add
inc
enter
xor
pop
cmp
jnp
ret
mov
mov
test
mov
xlat
test
fldenv
jae
cmpsb
jo
icebp
push
xchg
clc
and
gs
mov
dec
sbb
aad
sbb
mov
lds
stc
scas
call
sbb
lods
push
jge
add
xor
out
icebp
lahf
xor
imul
ret
cmp
pusha
ds
and
sub
push
popa
cmp
cmp
jp
imul
lahf
mov
jne
ljmp
xchg
insl
push
mov
adc
sub
and
mov
sbb
pop
xor
inc
sbb
dec
jl
and
add
push
mov
jle
lret
jp
and
push
mov
aam
jno
cmpl
push
dec
gs
pop
xchg
cli
imul
cmp
aaa
hlt
cmp
inc
movsl
aad
add
test
mov
add
and
or
mov
or
mov
out
sub
stc
shll
jns
daa
jbe
scas
xor
gs
jbe
pop
pop
lea
int
shll
cli
scas
or
add
inc
movsb
negl
lret
inc
sarl
mov
pop
lds
sub
shlb
insb
or
push
cmpsb
fsts
push
cs
cmp
and
insl
insb
mov
test
fidivrl
lods
pop
mov
lods
or
inc
mov
imul
loope
sarl
rcr
cmp
imul
or
pop
les
xor
inc
test
adc
es
adcb
sbb
or
inc
lock
mov
mov
hlt
sbb
imul
xchg
mov
scas
test
mov
ss
cmp
enter
xchg
arpl
inc
xor
cmpsl
xchg
push
ds
pop
cmpsl
sub
in
jl
pop
ja
test
movsb
pop
and
xchg
jnp,pt
xchg
iret
dec
test
inc
mov
lahf
repz
add
add
xchg
rclb
add
mov
aas
icebp
rol
mov
lret
cmp
ds
ret
out
std
adc
mov
mov
std
jl
mov
xor
mov
cmp
cmp
mov
or
add
imul
pop
fwait
jge
pop
movsb
and
repnz
xor
addr16
or
gs
ljmp
adc
xchg
sbb
test
inc
mov
or
sti
mov
movsl
nop
jb
int
incl
loope
ret
dec
mov
mov
loope
fcmovb
push
dec
xchg
push
sbbb
add
or
xchg
enter
loop
or
out
sub
idivl
iret
sub
pop
jns
xchg
or
fucom
shll
push
in
aad
mov
outsl
cmpsl
pop
cmp
jmp
dec
mov
jl
jbe
mov
repz
in
push
mov
cmp
imul
or
dec
mov
jl
jg
mov
into
rcr
aaa
arpl
cltd
sbbl
imul
adc
mov
jo
mov
xchg
jb
gs
dec
jecxz
mov
jae
test
push
adc
jno
sbb
jno
hlt
mov
jb
adc
dec
add
dec
dec
test
jbe
stc
mov
std
js
cmpl
imul
sub
das
xchg
and
mov
adc
dec
dec
loope
adc
shrl
mov
nop
rorl
adc
fdivrl
mov
inc
lret
mov
js
sbb
int
mov
outsl
adc
push
pop
xchg
fs
test
repnz
cmpsb
outsb
ret
in
fdivrl
lea
sub
sarl
loopne
xor
pop
std
pop
pop
sub
mov
sbbb
cmpb
pop
mov
adc
repz
mov
icebp
sbb
and
test
lcall
mov
mov
add
sbb
cs
jmp
dec
xchg
xor
cmp
call
rolb
inc
pop
mov
jp
cmp
and
call
mov
jno
cmp
pop
fsubr
jns
cmp
insb
loope
inc
rorb
shll
xchg
scas
adc
push
jb
clc
enter
clc
lods
clc
jns
jnp
push
popa
pop
sahf
imul
decl
pusha
mov
or
inc
jle
pusha
pop
mov
lock
scas
es
shr
adc
jecxz
cs
cmc
nop
fxch
mov
jb
mov
sbb
aas
incb
test
sub
divl
mov
enter
pusha
jo
out
adc
lret
or
and
pop
xchg
add
and
popa
push
inc
cmp
xor
sub
lahf
mov
fdivrp
inc
and
or
jne
sub
imul
jge
test
push
insb
mov
es
fnsave
lahf
inc
dec
inc
cmp
mov
mov
xorb
lods
outsb
ret
mov
and
add
mov
sub
push
hlt
movsb
jg
push
loopne
repnz
or
jg
scas
and
inc
dec
cmpsb
xchg
ficoms
fsubrl
pop
test
mov
ss
inc
lods
pop
add
sbb
mov
adc
xchg
fnstsw
out
fidivs
pop
fcomps
push
loope
mul
mov
clc
add
adc
test
sbb
push
out
movsl
adc
mov
mov
mov
or
and
lds
pop
fwait
clc
cmpsl
jmp
rcl
xchg
div
iret
mov
cs
jnp
xor
adc
push
jp
lods
add
add
mov
repnz
fwait
sbb
or
inc
xor
lahf
addr16
push
ds
pushf
fcmovb
cmp
pop
sti
sub
int3
mov
test
loope
arpl
xchg
enter
les
jl
fidivrl
loopne
push
and
dec
repnz
testb
add
fsts
add
fbstp
enter
bound
mov
aam
push
imul
fldenv
jle
pusha
dec
dec
xor
mov
xchg
dec
ja
lods
sub
adc
ret
cmp
sbb
inc
push
xor
inc
js
cmc
xchg
out
shr
adc
mov
sbb
xchg
jg
add
data16
lret
loope
lea
ja
xor
js
cmc
pop
adc
popa
add
imul
xchg
pop
xor
sub
mov
dec
sahf
pop
pop
cwtl
cld
or
lods
imulb
ljmp
sub
inc
scas
cmp
xor
cmp
sahf
sbb
and
pop
xor
outsl
pop
inc
fwait
dec
in
imul
mov
and
xor
jb
dec
arpl
mov
push
xlat
fwait
mov
aam
outsb
jno
cld
xchg
daa
scas
sbb
into
and
xchg
fnstenv
pop
insb
insb
dec
dec
add
xchg
mov
push
pop
sbbb
fidivs
jns
add
push
xchg
mov
and
or
in
mov
icebp
push
and
mov
subb
xchg
inc
stos
cs
fwait
lea
jle
imul
ret
cmp
cmp
and
call
push
or
ss
dec
mov
bound
push
cmpsl
cmp
clc
std
out
add
stc
adc
rcll
fs
or
jbe
ret
sahf
adc
pop
std
sbb
mov
js
push
inc
lahf
jne
jns
clc
adc
xor
out
xchg
push
and
insb
aaa
push
aaa
int3
ds
mov
xchg
into
push
psrlw
popf
xor
iret
bnd
sarl
vsqrtpd
mov
mov
or
les
inc
and
std
aas
fiadds
movsl
in
movsl
push
cld
jmp
int
adc
dec
nop
dec
in
cs
into
xchg
popf
imul
movsl
out
stos
mov
test
loopne
arpl
or
icebp
jp
ja
movsl
shl
sub
dec
jg
mov
jp
bound
out
sbbl
xlat
push
negb
arpl
lea
iret
mov
pop
es
cmp
sub
dec
sbb
std
adc
add
ljmp
cmc
daa
add
fldcw
add
pop
sub
cwtl
xchg
rorb
mov
jo
mov
pop
jcxz
jb
loopnew
lret
pop
adc
push
lods
je
mov
push
pushf
push
dec
addr16
cmp
sti
mov
cmc
aad
jp
loope
leave
pop
mov
push
sub
xlat
cld
int
add
shll
repnz
jne
fcmovbe
push
cli
es
mov
pop
fcompl
inc
test
iret
into
fidivrs
add
sbb
sub
shll
js
lahf
sub
jmp
lcall
test
test
out
das
mov
xor
out
fstpt
cltd
invd
and
mov
or
mov
in
sahf
daa
add
fistps
push
cmc
xchg
data16
inc
lea
popa
repz
mov
outsb
pop
ljmp
outsb
mov
adc
xor
clc
stos
jg
sbb
shlb
mov
pop
dec
lock
xor
test
sti
push
mov
inc
daa
mov
lahf
push
insl
and
cmpl
jb
movsb
sub
xchg
in
nop
mov
dec
loopne
adcb
sbb
loop
adcb
scas
or
sub
mov
pushf
or
scas
jmp
shlb
rclb
xor
lea
bound
lods
cmp
or
inc
lds
mov
fs
cmp
test
sti
js
dec
and
mov
repz
push
scas
fdivl
mov
pop
xchg
ljmp
jl
in
push
ss
adc
xchg
adc
xchg
leave
mov
inc
out
test
push
lret
push
cmpsl
daa
outsl
xchg
push
popa
cmp
pop
test
popa
xor
or
mov
ljmp
mov
or
lret
inc
sbb
das
and
out
jmp
xchg
pop
add
xor
imul
loopne
xor
fstpt
inc
xor
pop
rolb
adc
xchg
or
out
sti
pop
fstl
ljmp
push
xchg
jnp
bnd
jp
xchg
xchg
xor
fwait
rcrl
push
cmc
add
std
addl
lods
push
inc
sti
adc
pushf
jp
xchg
lds
mov
mov
ret
jmp
hlt
in
fs
sub
fnstcw
test
cld
inc
xor
sbb
sti
sub
mov
loope
jl
push
in
or
add
jle
add
int3
adc
inc
xor
push
lret
sti
iret
push
out
int3
cmpb
pop
inc
stc
and
push
jns
ljmp
mov
icebp
cltd
jmp
cmp
out
jae
fdivrl
ja
inc
shlb
out
dec
out
pop
xchg
jo
stos
scas
fwait
or
jp
scas
outsb
and
inc
cs
pop
or
inc
sbb
in
bnd
imul
sub
adc
std
dec
aam
mov
iret
mov
imul
out
test
add
jne
or
nop
dec
into
iret
popa
cmp
push
arpl
movsl
test
xchg
sub
rcl
push
mov
adc
mov
mov
push
push
xor
pop
sar
jb
in
mov
lods
mov
adc
stos
test
out
or
sub
jo
popa
mov
es
mov
out
inc
subl
insb
rclb
negl
adc
test
bound
mov
xor
cmpsb
idivb
out
cmp
cmp
jp
addr16
xor
mov
cmp
loope
or
out
popf
and
jnp
push
mulb
adc
popa
loopne
loop
add
repnz
daa
js
or
dec
sbb
add
aas
adc
and
lret
jecxz
sbb
pop
adc
dec
cmp
stos
pop
xchg
mov
xchg
iret
movsw
icebp
push
idiv
shlb
inc
dec
shrb
imull
fstps
push
xor
xchg
pop
arpl
lret
loope
sub
dec
push
xor
xchg
js
stos
das
outsl
xor
mov
aaa
in
mov
and
adc
out
inc
dec
pop
inc
fnsave
mov
je
aad
cmp
lahf
pop
xor
xchg
sar
or
mulb
mov
lret
inc
jo
jae
in
cld
pop
icebp
scas
in
pop
jge
in
add
inc
bound
push
dec
mov
mov
mov
add
insb
aas
out
cmp
ret
fcomps
or
push
jo
xor
cmpsl
lret
xchg
and
mov
lcall
cmp
icebp
mov
inc
test
cwtl
in
mov
mov
lock
mov
mov
icebp
cwtl
out
mov
cmpsb
mov
adc
repz
hlt
adc
icebp
das
fneni(8087
sub
repnz
bnd
movsb
mov
xchg
and
rorb
fcoml
repnz
repz
xor
mov
sub
pand
jmp
lods
outsb
adc
push
or
cmpxchg
rclb
sbb
rcrb
out
mov
dec
pop
mov
bound
imul
xchg
inc
add
sub
mov
ret
int3
ja
or
int
xchg
add
fiaddl
imulb
sti
dec
fnstenv
cli
xchg
mov
mov
adc
sbb
cld
lock
or
out
sti
cmpb
sub
and
lods
test
arpl
pop
sbb
bound
leave
jno
adc
ljmp
adc
sti
lret
mov
scas
fnstsw
cmp
add
pushf
push
dec
js
push
call
inc
je
xchg
fldt
xlat
test
jbe
ficoms
sub
cli
popf
push
iret
dec
jb
sbb
loopne
inc
fbstp
icebp
clc
dec
mov
mov
sbb
loop
jl
ds
xlat
movsl
or
faddl
sub
fisubrl
fsubs
loop
les
cld
mov
lods
and
daa
dec
inc
daa
mov
fdivl
mov
sbb
jo
pop
cmp
scas
and
mov
pushf
mov
pop
mov
xchg
jno
inc
icebp
fadd
fsubrs
out
sbb
js
mov
scas
pushl
fiaddl
out
insl
jecxz
test
pop
nop
adc
repnz
jge
pop
dec
outsb
subl
loopne
sub
out
push
test
shlw
mov
pop
push
push
fimuls
or
repz
jg
mov
pop
dec
fisubrl
jb
mov
out
mov
test
jo
ficomps
rcrl
pop
es
daa
jns
mov
dec
pop
jo
xchg
shl
sarl
push
call
xchg
stos
and
push
fidivs
or
cwtl
aad
in
loopne
jnp
nop
sarl
fstps
das
mov
fucompp
mov
sub
push
fildll
mov
jge
sub
pop
and
pop
sti
leave
lahf
xchg
les
mov
sahf
out
test
push
xlat
add
push
and
in
jbe
bound
sub
sbbb
ficoml
mov
loop
add
push
mov
xchg
dec
out
mov
lcall
mov
pop
das
xor
mov
and
iret
jg
les
cmc
cmp
imul
in
sti
fsubrl
fwait
xchg
test
in
cli
push
sbb
fstps
nop
xchg
mov
add
loopne
mov
jge
adc
int
daa
adc
cmp
cmpsb
xor
pop
jle
mov
and
insb
iret
popa
pop
repnz
adc
icebp
jns
movsb
mov
sub
cmp
xchg
arpl
fsubrs
in
ljmp
push
das
lds
jp
xsha256
cmpsb
push
mov
mov
repz
mov
in
pop
loopne
xchg
ret
hlt
aad
and
mov
cmpl
or
outsl
add
jno
add
and
or
mov
addb
aaa
out
leave
and
xchg
mov
hlt
jle
sahf
les
imul
popa
ja
lcall
arpl
lret
movsl
aam
jmp
fildll
xchg
mov
loope
fwait
mov
xchg
sarb
mov
lock
movsl
mov
in
insb
orb
aas
or
fdiv
outsb
fs
fwait
push
arpl
in
push
lret
pusha
xor
or
cmp
nop
out
dec
pop
imul
ja
in
aaa
sbb
adc
shl
mov
les
gs
in
lods
pop
test
xor
pop
jns
inc
inc
mov
xchg
mov
ljmp
popa
dec
fbld
mov
daa
add
jle
aas
dec
mov
xor
sub
inc
fildl
test
jecxz
cli
add
fiaddl
adc
cmc
loop
movsl
outsl
rorb
insb
mov
jmp
jge
sbb
mov
xchg
int
subb
jns
test
in
pop
addr16
jg
addr16
cmpsb
dec
mov
lods
mov
sti
shlb
jmp
les
dec
ds
push
and
enter
mov
xchg
jb
jge
je
mov
xchg
dec
fldl
push
inc
nop
cmp
jmp
jle
jne
test
das
sbb
sbb
jb
lock
fnsave
imul
mov
fcmovnu
insl
inc
vmovdqa
mov
lret
insl
hlt
test
and
jg
and
pop
lret
cmp
icebp
jne
or
sbb
into
sub
sbb
cwtl
adc
add
sahf
cmp
fildl
mov
dec
inc
orl
adc
sub
jle
out
cmpb
insl
cmp
and
sahf
cs
bound
lea
and
into
in
clc
dec
push
push
cmpsl
int
movsb
insl
ja
add
iret
xchg
push
jl
inc
ret
add
insb
push
cs
jmp
ljmp
add
outsb
push
sbb
jns
mov
add
pop
es
fs
stos
fwait
sbb
cmp
xchg
pop
in
cmp
mov
push
push
loope
lret
inc
or
stos
xchg
repnz
sub
dec
les
je
fisttpll
jge
mov
dec
and
ret
sbb
repz
js
aas
push
and
es
stc
lock
xchg
and
fs
adc
xchg
mov
imul
cmc
outsb
loopne
mov
ret
loope
lret
icebp
inc
movb
scas
mov
jge
or
lock
xor
and
shrl
jno
jns
cmp
das
cltd
repnz
test
push
mov
jne
jp
pop
pop
insl
rcll
mov
mov
inc
fsubs
sub
pop
fs
test
mov
and
out
cmp
or
or
pop
jo
aad
test
sbb
add
cltd
jecxz
lea
push
repnz
in
andl
fmulp
xchg
daa
pop
ficoms
xorb
aad
cltd
insb
dec
shlb
sbb
daa
xchg
cmp
ret
add
sub
push
pop
std
mov
test
sub
xchg
adc
in
pop
cwtl
test
mov
loop
sahf
mov
push
xchg
scas
dec
xchg
cmp
jp
std
gs
dec
lods
cltd
add
add
lret
jle
mov
sti
int
dec
imul
xor
dec
sbb
lea
jnp
or
inc
lea
jle
sub
test
adc
push
push
lock
mov
add
icebp
dec
push
std
mov
mov
pop
loopne
pop
out
sub
dec
sbb
cmpsb
std
inc
xor
movsl
adc
adc
jle
das
add
into
lcall
shlb
inc
repnz
andb
cmp
in
xchg
jbe
xchg
push
dec
inc
or
or
fsub
aaa
movsb
outsl
dec
leave
mov
mov
cld
xchg
clc
scas
stc
xor
cmp
xchg
fwait
inc
or
fs
int
mov
jl
mov
inc
loopne
into
sbb
cmp
pop
xor
mov
icebp
add
mov
add
test
mov
inc
mov
mov
cmp
mov
xor
sbb
inc
cs
sbbb
jns
int
add
rcrb
scas
dec
and
test
or
dec
fsubrl
adc
xor
cs
sbb
mov
insb
and
mov
scas
hlt
mov
test
adc
dec
sbb
fcmovnu
sub
or
add
out
dec
push
mov
inc
dec
sti
inc
pop
dec
inc
out
inc
and
out
jecxz
fnstenv
fists
repnz
aaa
mul
icebp
in
push
jg
sahf
sub
inc
aam
ss
push
dec
or
mov
inc
les
out
fstl
jmp
jnp
and
in
dec
pop
jge
shll
cmp
ret
fcomps
adc
fisubl
cmc
lock
inc
pop
mov
cmpsb
cmp
call
es
inc
rcr
jno
fiaddl
inc
loopne
dec
xchg
sbb
mov
adc
sub
and
in
js
in
je
movsb
sahf
lods
imul
cltd
jne
push
arpl
push
mov
xor
or
mov
or
jo
data16
test
imul
and
fiadds
pop
push
mov
ljmp
dec
mov
pop
rol
in
jmp
and
nop
and
jmp
add
adc
cwtl
xchg
jle
mov
adc
inc
adc
mov
inc
sti
mov
jbe
pop
xchg
aaa
dec
lcall
inc
flds
mov
mov
pusha
and
in
or
lea
pop
cmc
sbb
mov
lcall
mov
mov
rcll
xor
jae
push
xchg
enter
cmp
dec
or
daa
dec
jecxz
jg
insb
orb
mov
or
sti
inc
sbb
shll
dec
cmpsl
mov
xchg
inc
mov
adc
inc
adc
testl
in
or
push
sti
test
xchg
inc
jg
push
lcall
mov
add
dec
andl
divb
mov
cmp
adc
xor
and
aam
lea
inc
pop
sbb
mov
jnp
in
idivl
sbb
jle
adc
pop
mov
mov
fwait
cmp
jl
cli
cmpsl
imul
xchg
inc
lods
jp
out
fisttpl
add
add
rcrb
push
stos
testl
and
adc
sub
and
sub
xchg
push
filds
sub
push
cmp
out
shlw
jl
xor
jge
sub
cmc
add
icebp
lods
ret
xchg
jbe
cmp
sub
sbb
repnz
mov
dec
and
add
xchg
outsb
cld
pop
pop
rol
lret
dec
sbb
xchg
jns
aaa
cld
or
mov
fstps
sub
cmpps
aad
fildll
sbb
pop
ljmp
xchg
pop
add
incl
ret
aaa
cmp
push
sti
and
scas
pop
es
push
pop
push
dec
in
out
into
in
arpl
dec
and
dec
pop
jecxz
stc
mov
inc
and
lds
push
adc
bound
add
loop
cld
sub
out
leave
add
mov
inc
stc
ja
and
xchg
test
stos
out
and
stos
rcrl
and
cmc
add
sti
push
adc
xchg
cltd
push
fstpt
scas
xchg
push
popf
pop
repnz
out
call
frstor
jns
add
icebp
ja
aad
xor
sub
bound
mov
sbb
mov
inc
cmp
cmpsb
add
xchg
or
push
dec
int
ja
lock
hlt
push
and
aad
mov
mov
bound
sahf
sti
dec
sbbl
in
lods
fdivs
mov
jo
jg
cmp
pop
nop
cmpsb
cwtl
sub
out
mov
push
fidivrl
stc
push
dec
pop
cmpsl
mov
fwait
cmpsb
xor
dec
fs
mov
arpl
sub
bound
xor
nop
lret
jnp
inc
movsb
or
xchg
enter
mov
xor
test
xchg
xchg
mov
arpl
inc
iret
jle
xchg
in
mov
sub
mov
call
das
lret
loopne
mov
jb
mov
popa
adc
sub
xchg
aam
pop
rcll
cltd
lea
and
outsb
ldmxcsr
js
fcoml
inc
xlat
mov
sbb
in
arpl
mov
dec
jle
cmpsl
mov
aas
leave
inc
ljmp
fcoml
and
stos
js
fcomps
lret
sahf
adc
ss
lea
pop
sub
repz
test
mov
jno
data16
imul
inc
fmuls
aam
arpl
adc
mov
jmp
les
cmp
sbb
sub
inc
mov
mov
jl
out
fisubs
ret
cmpsb
es
push
stos
or
jno
sbb
es
inc
dec
lods
mov
cmp
lods
sbb
ds
jno
imul
add
adc
pop
dec
adc
inc
iret
sub
hlt
mov
lahf
lahf
push
adc
push
loop
cmp
pop
xlat
pusha
jae
jg
sub
leave
sbb
jae
icebp
sbb
add
test
push
clc
scas
mov
or
mov
test
push
dec
stc
clc
push
mov
cmp
push
and
lret
add
push
add
cmp
xchg
loopne
es
outsl
jl
js
mov
daa
sub
xor
jns
pushf
cmp
repz
dec
cli
je
mov
test
fcoml
sahf
lock
xchg
ja
jp
add
mov
inc
push
loopne
add
arpl
das
add
jg
adc
xor
sarb
int3
add
es
mov
jl
pop
rol
sbb
push
aam
aaa
aad
dec
incl
sub
gs
and
je
in
mov
ljmp
mov
lea
ret
enter
imulb
clc
xchg
push
add
mov
shll
and
cmp
and
mov
xchg
add
pop
jmp
adc
clc
cmc
push
adc
pop
xchg
jp
push
aam
xlat
fs
add
push
add
dec
xchg
adc
loopne
jmp
push
outsl
inc
sub
pop
negb
sti
ret
add
pusha
or
out
jle
adc
movsb
and
jns
pop
jmp
addb
jo
nop
cmc
repnz
add
push
jle
dec
stc
rorl
add
jle
sahf
mov
xor
dec
ljmp
push
movsl
inc
cmp
inc
inc
insb
mov
lds
mov
jle
jecxz
pop
jne
ret
movl
jb
inc
push
lret
out
ror
lock
cmp
jns
jae
pop
sbb
jnp
out
inc
je
repnz
mov
jnp
movsb
inc
cld
pop
int
pop
mov
xor
pusha
dec
pushf
shll
aam
xchg
out
or
xchg
enter
sub
cmpb
push
lea
xor
cmp
in
cli
sbbl
ss
push
pop
stos
aad
test
loope
popfw
push
jl
loopne
jge
mov
sti
mov
sbb
je
inc
lds
xlat
xor
inc
out
dec
pushf
pop
dec
mov
cmc
iret
mov
and
xchg
fsubr
fmuls
loop
inc
je
push
rcrb
cmp
leave
sub
xchg
pop
in
stos
and
in
pop
cmpsl
jmp
inc
shlb
out
lahf
fimull
movsb
decl
sbb
mov
sbb
insb
into
and
dec
fldt
mov
mov
adc
mov
dec
xchg
add
rorb
out
jo
lahf
test
shrl
push
leave
cmp
xor
stos
in
dec
cmpsb
sbb
rcrb
cmc
lcall
bound
push
imul
pop
add
and
lret
aas
addr16
or
fbstp
inc
adc
cmp
sbb
mov
mov
push
mov
mov
aad
lea
jp
xchg
les
jge
mov
pop
out
mov
stc
mov
popl
int
add
fdivl
sub
xchg
add
cmp
loop
insb
into
cmp
fimull
inc
fdiv
std
push
mov
push
loopw
pop
mov
xlat
xor
dec
inc
xchg
sbb
push
shl
cmpl
dec
and
xchg
cmp
pop
popa
aam
cmpsb
imul
mov
inc
inc
add
sub
lret
push
adc
rcl
add
int
xchg
das
adc
sbb
fs
outsl
dec
sbb
movsb
inc
into
push
arpl
push
mov
inc
mov
sub
pop
clc
out
aas
jnp
cmpsb
cmp
jnp
pop
mov
rclb
mov
mov
xlat
mov
cmpsb
cmp
sar
popa
sar
movsb
xchg
sbb
add
fildl
popa
rclb
adc
popa
push
mov
lds
inc
inc
add
cmpsl
or
rolb
in
push
pop
push
and
adc
mov
ret
shll
rolb
push
std
sbb
mov
or
pop
inc
dec
cwtl
jg
fidivl
inc
pop
mov
es
jns
stos
movsl
dec
repz
sub
sbb
scas
push
imul
jle
mov
pop
loope
mov
pop
addr16
add
xor
dec
or
or
hlt
adc
ret
push
stos
lds
jns
sub
cmp
cmpsb
lret
pushf
idivl
cmc
sahf
popf
pop
push
push
mov
jne
xor
or
xor
leave
xor
sbb
dec
cmc
xchg
pop
adcb
das
fs
pusha
arpl
xchg
lcall
inc
int3
mov
dec
into
xchg
mov
or
mov
jae
xor
mov
xor
mov
rolb
jmp
xor
xor
outsl
fisubrs
ret
fstps
xchg
sbb
pusha
add
pusha
movsb
mov
add
dec
insb
outsl
adc
pop
pop
ds
mov
push
ret
push
xchg
mov
xorl
lock
out
imul
xchg
xor
sbb
inc
sbb
repz
pop
subb
adc
or
outsl
xlat
push
je
pop
xchg
fwait
fwait
jne
mov
add
xlat
or
push
mov
inc
jle
inc
inc
xor
and
outsb
mov
push
lods
leave
es
xlat
mov
sbb
cmp
push
imul
dec
stc
test
sub
pop
mov
stc
xchg
add
jb
pop
movsb
imul
mov
stos
daa
pop
inc
movsl
or
int
rolb
pop
and
add
xor
hlt
aad
mov
ljmp
loope
mov
ljmp
sub
dec
in
shr
rorl
outsl
mov
fbstp
call
sbbb
cmp
test
adc
ljmp
add
clc
rcrb
adc
roll
and
or
std
rorb
sub
movsl
aad
mov
push
out
stos
lods
fmul
arpl
in
pop
shll
pop
jo
fcmove
testb
icebp
rcl
dec
jbe
inc
and
cmp
lret
aam
jl
rcr
mov
push
xorl
fs
in
icebp
ret
mov
sub
inc
lret
sbb
insb
popl
outsl
or
mov
or
in
adc
or
xchg
subl
and
addr16
mov
movsl
clc
jecxz
jp
fsubrs
xor
pop
imul
or
stos
sub
push
jle
mov
aad
pop
std
xchg
fcmovne
les
adc
mov
mov
out
in
mull
shl
and
jle
sub
mov
mov
pop
and
loop
ss
xchg
in
mov
push
cwtl
adc
pusha
xchg
sub
test
dec
cld
mov
fisttpl
fs
xor
jg
imul
aad
idiv
sub
jmp
out
insb
or
out
lret
js
out
pop
jg
dec
in
add
mov
pusha
inc
aas
addr16
rclb
sbb
shll
sar
out
stos
lahf
or
lea
dec
dec
xchg
lds
pop
insb
add
xchg
and
popa
subl
cld
pusha
movsb
es
push
lods
or
jne
mov
jl
inc
rcll
lea
mov
inc
pop
xor
scas
pop
imul
add
jge
xchg
cmpsl
rorl
js
cmp
in
jnp
lods
lds
imul
xchg
mov
dec
addr16
mov
std
jecxz
movl
idivb
and
mov
mov
ljmp
sti
push
lcall
and
sbb
loop
or
shlb
aas
leavew
push
push
mov
jb
mov
sub
int
push
jne
jns
adc
or
mov
xchg
jo
jecxz
dec
push
pop
push
sahf
aaa
jno
stos
pop
adc
xchg
ds
xchg
mov
lahf
mov
shl
shlb
aam
insl
test
cltd
sti
xchg
orb
cs
push
addb
bound
mov
push
inc
or
scas
ret
mov
cmp
stc
dec
pop
shrl
xchg
pop
jl
jb
jg
loopne
movsl
mov
adc
mov
mov
lret
dec
call
sub
dec
into
movsl
in
cmpsl
rol
sub
xcrypt-cbc
cmpsl
xlat
lods
je
out
xchg
lret
dec
shrl
jno
dec
xor
cmpsb
adc
add
xchg
adc
scas
xchg
xor
lcall
enter
ret
xchg
inc
or
pop
aam
les
push
ljmp
cmpsl
je
push
pop
and
cld
jbe
push
mov
adc
adc
dec
test
mov
cmp
add
lahf
cmp
cltd
rorb
std
mov
jb
rorl
or
jl
add
sbb
add
lahf
add
mov
testl
xor
xorb
cltd
mov
or
inc
inc
orl
insb
ret
or
lock
fcmovne
sub
nop
cmp
aas
aas
xor
jbe
ret
ss
xchg
popa
aad
mov
jnp
adc
loope
fs
ret
or
or
not
mov
sbb
std
out
sbb
mov
dec
cmp
mov
dec
or
testl
out
xor
dec
push
cwtl
dec
cmp
adc
fnstsw
ljmp
xchg
push
loopne
mov
jnp
push
aad
and
cld
aad
popa
stos
dec
sbbb
sahf
loopne
and
mov
xchg
xchg
daa
pop
scas
xchg
add
jmp
add
movsb
mov
stc
and
pop
cmp
xchg
push
lods
stc
or
cmpb
sub
aas
std
mov
sub
mov
pop
out
adc
inc
add
jmp
mov
cltd
in
scas
mov
jns
pop
mov
push
push
sub
test
repnz
dec
or
or
cmp
sub
cld
pop
pop
mov
in
andb
and
xchg
out
xchg
push
add
loop
dec
dec
fucomp
dec
or
ja
xchg
jmp
pop
imul
push
nop
xor
scas
dec
ja
mov
push
cld
lret
bnd
mov
fisttpl
fwait
cmpsb
loop
mov
or
aas
add
stos
mov
fstpl
sub
roll
xorb
lea
pop
inc
push
and
push
push
jns
sub
push
jno
fcmovu
cs
lcall
ss
pop
and
stos
jnp
adc
xor
cmc
mov
mov
rcrl
loope
dec
in
mov
imul
adc
test
sub
stc
mov
adc
stos
push
sbb
mov
in
ja
clc
cmp
cmp
and
sbb
pop
pop
add
in
shr
sahf
and
repnz
cld
pop
jecxz
cli
insb
push
adc
and
push
sbb
xchg
out
test
jg
xchg
lret
xchg
push
or
dec
mov
push
cmp
jno
scas
mov
mov
mov
mov
iret
add
push
fnstsw
mov
ret
fsubl
and
pushf
fwait
pop
xchg
mov
xor
dec
fs
call
gs
jb
sub
dec
xchg
jbe
xchg
add
cmp
pop
lds
inc
enter
into
mov
xchg
xor
adc
or
sbb
jns
call
adc
mov
dec
imul
mov
and
jno
dec
sahf
mov
addl
jo
daa
dec
icebp
lods
ror
xchg
hlt
in
sub
cmpsl
addb
loopne
pop
lcall
std
sbb
int
and
stc
scas
ret
es
movsl
outsl
add
movsb
and
xor
add
aas
push
insb
mul
nop
ret
mov
hlt
adc
mov
add
cmpsl
ljmp
jg
ss
cli
mov
or
mov
into
and
shll
jecxz
adc
rep
hlt
and
and
mov
pusha
add
sbb
jo
fisttpll
add
cmpsb
jp
stos
jl
int3
sub
orb
aad
aaa
mov
nop
das
fdivrs
sub
xlat
ret
cmp
frndint
cmp
test
xor
roll
mov
loopne
test
movzwl
jae
push
push
push
cmc
or
lcall
or
jge
mov
pop
jne
mov
inc
push
mov
imul
js
cld
bound
repz
nop
bnd
jbe
xchg
jg
sub
xchg
mov
ds
or
mov
sub
shl
jmp
mov
cmp
or
or
jno
inc
mov
mov
loope
ds
sbb
cmp
inc
xchg
out
popf
add
ds
dec
xlat
lock
pop
idivl
repnz
rorb
jns
loopne
fptan
mov
fsubr
js
push
call
mov
dec
mov
gs
mov
mov
cmpsb
push
insb
fstps
sbb
ss
js
push
int
iret
add
punpcklbw
xor
ja
out
adc
mov
pop
sub
aaa
jle
mov
loope
cmp
mov
push
cmp
mov
lods
sub
mov
xorl
add
fsubl
rcl
inc
cmp
loopne
test
test
repz
mov
fisttpll
add
std
test
insl
inc
icebp
push
mov
ljmp
daa
sti
xchg
andl
stc
pop
cltd
jae
mov
sub
fwait
call
fimull
popa
and
jmp
sbb
fldcw
sarb
aad
and
iret
arpl
mov
mov
stc
repnz
push
xchg
dec
fwait
xor
pop
nop
fdivrs
int3
mov
dec
cld
scas
sbb
push
xchg
sbb
dec
adc
out
dec
dec
jno
lds
rclb
and
adc
mov
dec
push
push
jb
loop
push
repnz
pop
adc
and
out
sub
insl
test
mov
mov
shlb
push
ror
adc
stos
stc
loopne
cwtl
stos
and
xor
xor
jl
dec
fs
jecxz
cwtl
push
cmc
ds
inc
cmp
scas
shrl
in
lahf
mov
and
xchg
cmp
sti
jno
cmp
scas
outsb
adc
daa
lret
stos
int3
jmp
out
xor
xchg
pop
arpl
inc
lea
dec
xor
clc
int
fs
mov
cltd
xchg
mov
clc
leave
xchg
test
lock
jl
xchg
shrl
cmpl
daa
sbb
cmp
jne
stc
sub
cmp
pop
dec
scas
lret
jge
push
ficompl
bound
mov
xchg
or
scas
sub
mov
and
and
js
cmp
sarl
in
ret
mov
adc
mov
shlb
mov
int3
je
outsb
test
clc
cmp
xrelease
inc
scas
ja
xchg
cmp
mov
mov
pop
hlt
subl
pop
jae
cwtl
sub
add
push
std
shrl
and
call
lock
inc
rdmsr
fiaddl
fsubrl
lock
lcall
repnz
dec
mov
and
cld
notb
xor
or
sbb
mov
mov
pop
fbld
jae
ja
jmp
cld
sbb
sbb
add
out
mov
inc
insl
shrl
xor
cli
sub
cmp
push
xlat
or
stos
cld
cmp
mov
fisubrl
inc
std
jge
sbb
inc
xor
aad
sbb
cmpsb
lds
push
mov
pop
push
mull
and
loope
push
push
ljmp
rolb
popf
stc
add
adc
push
movsl
xchg
testb
pop
out
cmpb
dec
mov
xchg
cltd
int3
lahf
mov
adc
or
cmpsb
or
xchg
xchg
cmp
lahf
cltd
in
jbe
or
xor
icebp
mov
outsb
sbb
data16
lds
lds
ja
mov
xor
test
cld
fldcw
pop
in
mov
sbbb
js
inc
dec
shlb
mov
out
adc
out
add
add
or
cmp
pop
xchg
adc
adc
aas
cli
adc
sahf
xchg
ss
adc
cwtl
sbb
hlt
out
inc
pop
sub
or
daa
adc
mov
cli
or
inc
ds
mov
mov
rorl
mov
add
mov
xchg
int3
cs
sub
imul
mov
ja
clc
pop
push
fsubl
cmp
lock
sub
bound
gs
and
out
xchg
sub
inc
rolb
cmp
lret
cmp
loope
jmp
xlat
cmp
cs
ret
fidivrs
fdivp
ja
orb
pop
dec
push
imul
int
stc
mov
xor
mov
mov
andb
punpckhdq
ret
cs
cmc
jg
popa
lahf
lahf
into
lahf
faddl
cmp
cmpsb
jecxz
lcall
jnp
xor
push
jnp
insb
outsb
jae
stos
notrack
cs
arpl
push
aad
orb
add
add
int
jl
pop
lret
subl
push
inc
adc
push
mov
lods
sub
sub
rolb
shlb
sti
mov
sbb
mov
add
adc
stos
mov
sub
push
xor
or
ss
into
lds
dec
xchg
fdivrp
call
lock
mov
sbb
in
mov
arpl
sub
out
mov
call
mov
mov
xchg
sbb
in
cs
push
dec
subb
and
xchg
jbe
cmpsb
push
mov
sub
mov
pop
mov
lret
sbb
xchg
int3
cmp
jp
push
push
cmp
push
add
imul
pop
xor
rol
xlat
and
shll
rorb
popf
fcoml
js
mov
fs
leave
stos
dec
xor
scas
mov
mov
add
roll
jae
shll
sub
test
pop
cwtl
push
pop
xchg
inc
out
add
cmp
ret
int
rclb
sbb
cmp
rcrb
cmp
gs
test
or
ret
ljmp
enter
cwtl
mov
xchg
xchg
in
push
cmpsl
in
js
lret
cmp
cmp
insb
arpl
sbbb
push
dec
jnp
cmp
sbb
insb
adc
sti
cmp
add
mov
mulb
dec
scas
out
pushf
inc
les
ret
jno
push
nop
jmp
cwtl
lcall
sub
pop
jne
lahf
jl
dec
mov
iret
add
repz
mov
push
or
fmuls
shll
or
dec
jmp
std
jns
lahf
jns
pop
dec
jno
push
scas
mov
lcall
jne
daa
das
lcall
xor
out
cwtl
popf
or
cmp
fbld
je
mov
outsb
mov
adc
js
xchg
xchg
scas
ficoms
sahf
xor
js
jp
adc
imul
and
mov
pop
andl
xchg
sbb
imul
scas
and
mov
adc
daa
rorb
out
cmp
mov
out
mov
rorb
jp
ss
sbb
inc
sub
shll
lock
fldcw
inc
js
movsl
sti
dec
mov
pushf
or
enter
aad
mov
cmpsb
jge
mov
bound
lods
cmovb
push
and
fwait
dec
rcl
dec
mov
sbb
mov
loope
and
scas
inc
std
cmp
and
xchg
push
pop
mov
mov
dec
dec
jns
mov
jbe
lcall
popf
pop
pop
loope
sub
sub
repnz
mov
mov
popa
cmp
in
sti
mov
out
xor
sti
adc
mov
mov
sbb
mov
xor
jno
je
rcrl
sbb
pop
push
mov
bts
xor
ss
pop
fisubrs
cmp
xchg
repz
mov
xchg
xchg
loop
push
loopne
test
sbb
scas
mov
stos
mov
and
movsl
pop
ja
dec
outsb
shlb
aam
xchg
in
jae
pop
pop
mov
jp
insb
push
xlat
in
cwtl
push
push
or
pop
or
data16
lcall
dec
rclb
das
repnz
stos
xchg
xchg
js
or
pop
inc
insl
movsb
idivl
cmp
decb
push
fxch
push
cmp
popf
cmc
add
pop
mov
cmp
mov
inc
dec
and
scas
sub
lea
xchg
add
xor
mov
xor
mov
jecxz
adcb
test
xlat
cwtl
push
pushf
pop
cmp
loope
lods
in
sbb
xchg
mov
or
xchg
iret
lock
sbb
bnd
jl
ds
sbb
ret
dec
push
mov
js
cmp
repz
and
jo
fstpl
jl
inc
mov
jnp
mov
xchg
pop
ja
in
rcrl
scas
sbb
and
sar
jge
scas
adc
or
inc
scas
pop
mov
push
rcr
outsb
cmp
aam
xor
je
push
hlt
adc
mov
or
xor
push
imul
imul
pop
xchg
xor
repnz
and
and
pop
sbb
fists
fcmove
js
lock
xchg
add
mov
dec
or
std
cmp
data16
shr
mov
cwtl
push
mov
aam
jp
lea
je
inc
enter
stos
mov
aaa
jo
xor
sub
and
addl
mov
pop
int3
cmp
test
push
cmp
jg
inc
push
adc
pushf
xchg
fdivrl
or
rolb
outsl
sahf
cmp
xlat
mov
ljmp
and
pop
xchg
jge
pop
cmpsl
sbb
and
or
js
inc
push
adc
nop
stos
mov
sbb
mov
xor
test
std
or
cmp
jecxz
mov
roll
or
leave
push
in
or
pop
mov
inc
cmpsl
inc
sti
rcll
or
movsb
test
test
mov
test
out
sbbb
and
js
loope
dec
popa
pop
in
std
sub
addr16
lret
loopne
xchg
mov
or
pop
xor
inc
cmc
or
jns
sti
stos
sbb
xor
cmpsl
fs
pop
mov
dec
clc
push
xor
add
lods
inc
sbb
inc
mov
xchg
add
fs
or
dec
ja
orb
dec
insb
sbb
add
test
cld
jno
cmp
pop
add
mov
adc
in
decl
aaa
loopne
cmp
mov
in
push
in
sbb
stc
rol
lods
jbe
pop
push
notl
mov
ret
sahf
sbb
cmp
imul
sub
mov
adc
or
fcomps
call
mov
cmpsb
mov
fstp
pop
aad
sub
adc
jb
jmp
add
mov
nop
inc
pop
fs
bound
mov
shll
aam
lret
pop
nop
xor
movsl
or
sub
test
addr16
cmp
ffree
dec
lods
push
xlat
or
loop
push
mov
mov
ljmp
inc
mov
in
ret
popf
fdivrl
stos
push
xchg
neg
fdivs
push
ret
xor
aas
and
xlat
add
loopne
adc
push
into
cmovae
in
jp
das
xchg
xor
sbb
inc
lahf
cli
test
pop
test
or
icebp
sub
xor
sahf
outsl
xor
pop
mov
es
out
cmc
ss
outsl
lret
test
loop
outsl
and
cltd
repnz
sub
or
test
and
out
cmp
imul
popa
in
sub
iret
loop
repnz
ret
xchg
pop
mov
and
fidivl
and
js
push
jle
outsb
dec
ljmp
lds
scas
insw
dec
xchg
dec
shrl
hlt
push
jl
push
in
cmp
lret
test
jne
mov
mov
pop
pop
push
mov
mov
and
sub
push
iret
scas
popf
push
test
push
lods
loope
or
xchg
outsb
dec
je
idivb
push
test
in
mov
mov
imul
jbe
movsl
pop
push
lahf
cmpsl
mov
mov
adc
jnp
jnp
sub
mov
rorl
cmpsb
pop
push
mov
sub
lahf
jo
imulb
cwtl
cltd
mov
xchg
mov
sub
roll
cmpsl
dec
mov
in
cltd
sahf
popa
xlat
jnp
mov
sub
jb
jg
sub
jo
js
or
mov
jl
aam
jae
pushf
jmp
gs
ja
inc
xchg
cmp
aas
div
addr16
xchg
xchg
inc
dec
cmp
aad
push
pop
sti
subl
push
imul
pop
inc
jge
rcll
mov
push
scas
rol
or
jo
dec
or
mov
hlt
mov
into
jno
mov
fstl
cmpsl
xor
pop
sbb
mov
inc
adc
jp
jo
loop
jnp
nop
add
and
sub
inc
pop
xor
xchg
dec
ds
sbb
movsb
push
fisubs
cmpsb
int3
dec
mov
outsl
add
xor
imul
mov
adc
outsb
imul
push
aas
orl
popa
mov
cmp
add
and
add
xor
mov
pusha
xor
pop
and
mov
cwtl
xchg
int3
sahf
pop
ret
lods
in
adc
int
fwait
mov
cmp
out
push
pop
sub
fnstsw
jl
fnsave
push
adc
add
fdivs
cmp
in
ljmp
out
int3
pusha
pop
xlat
mov
les
addl
stos
sub
mov
lret
xchg
in
pop
xchg
push
sub
xchg
pop
or
mov
and
adc
inc
and
sbb
clc
daa
jp
xchg
adc
filds
sbb
lock
mov
sbb
scas
pop
fistpl
mov
shlb
adc
mov
ss
dec
pop
icebp
fists
test
aaa
jo
std
or
iret
pop
jmp
js
sahf
test
mulb
aam
push
mov
mov
dec
add
out
adc
test
fisubrl
in
mov
and
sbb
mov
adc
lret
mov
xchg
aad
jbe
dec
mov
jb
cmp
mov
lea
jo
lcall
sti
loope
popf
les
push
push
adc
stc
movl
incl
mov
pusha
inc
pop
sbb
int
xor
and
add
cwtl
scas
mov
roll
lds
sub
aas
adc
jae,pt
int3
dec
das
in
sub
inc
shrl
and
repnz
xchg
push
mov
loope,pt
test
adc
stc
jle
push
vpsllw
mov
bound
adc
shrl
daa
scas
sbb
pop
sub
iret
addb
fstpt
in
inc
mov
sbb
mov
in
jnp
xchg
push
pusha
in
mov
push
push
xor
sbb
call
out
andb
cmc
cmp
cmp
mov
inc
out
hlt
arpl
mov
mov
fucomp
add
jno
add
testb
adc
mov
adc
shl
insl
push
lret
push
adc
inc
push
xchg
movsl
subl
fisubrl
xchg
xchg
inc
ret
mov
in
std
mov
jge
in
or
dec
cmp
mov
lcall
popf
or
or
sahf
data16
mov
es
or
scas
mov
sub
push
rcll
mov
or
lcall
mov
mov
ficomps
in
cmpsb
aas
mov
jp
mov
push
and
test
lret
lret
out
mov
adc
lret
std
cltd
mov
rcrb
push
fcomip
xchg
pop
aam
dec
xor
scas
sub
lock
jnp
and
sahf
lods
push
test
or
addr16
xchg
add
mov
test
pop
sbb
out
push
ss
lods
enter
cmp
xchg
ret
mov
mov
and
aam
and
test
pop
xor
sbb
jb,pn
and
or
cmpsb
enter
cmp
push
jae
dec
fwait
and
stos
xor
ret
fdivl
in
xchg
js
imul
out
jbe
ret
add
add
mov
dec
inc
adc
or
test
mov
iret
stos
mov
enter
dec
add
add
and
jnp
orl
push
fsubl
rolb
cmp
pop
or
dec
insb
push
jle
mov
and
mov
or
pop
jg
cmp
dec
xchg
mov
mov
and
sbb
xor
adc
subb
inc
mov
lods
mov
in
cld
push
mov
cwtl
adc
in
loopne
push
mov
and
enter
das
pushf
out
or
testb
mov
push
mov
out
mov
mov
js
in
lahf
rol
and
popa
in
or
pop
and
lcall
out
push
sub
xchg
in
push
in
shrb
inc
loope
pop
clc
jl
sahf
push
inc
adc
in
sub
xchg
mov
pusha
push
outsl
pop
sbb
sub
xchg
xor
push
stc
test
pop
lret
lret
fcmovnbe
ja
adc
dec
aad
sbb
fisttps
cmp
cltd
mov
adc
cmp
push
lcall
stos
sub
inc
jmp
call
and
lock
test
sbb
xor
sarl
imul
pop
cmp
add
adc
leave
lcall
and
cmp
js
call
sarb
lds
adc
adc
jae
lods
xor
stos
imul
mov
or
rorb
mov
sbb
lret
or
dec
repz
pushf
mov
aas
or
movsl
cmpb
inc
mov
aam
mov
adc
fwait
push
lret
xor
fiadds
jnp
ret
xchg
jge
lds
daa
mov
movsl
out
aas
loopne
hlt
push
lds
jp
mov
rorl
xchg
lcall
andb
push
clc
mov
dec
cmp
mov
imul
je
gs
xor
enter
out
adc
sub
les
mov
and
lret
pusha
push
pop
push
popf
jb
cmp
and
lcall
imul
and
fisubrl
add
out
jo
addr16
mov
ljmp
push
pop
mov
shl
mov
sbbb
jno
aam
cmpsl
dec
adc
ds
cmp
lods
les
fistpll
and
decl
clc
test
fld
fwait
pop
int
jmp
push
flds
movb
and
sbb
test
mov
mov
adc
rolb
jp
lahf
mov
sbb
lods
jns
lret
out
push
ret
je
popf
adc
jge
fstp
push
aad
aad
scas
jmp
testl
push
mov
mov
stc
cmp
dec
rorl
insb
mov
jno
mov
mov
test
mov
xchg
gs
clc
iret
xlat
fs
push
stc
cmp
imul
add
lods
sahf
cmp
jl
fsub
je
push
movsl
loop
xorl
push
std
in
jl
sbb
mov
pushf
mov
js
fucomp
push
rcrb
pop
popf
push
int
rcrb
xchg
ja
jg
mov
cmp
enter
fisubs
pop
mov
mov
mov
dec
out
outsb
lods
mov
js
pusha
push
aas
jl
mov
popa
lea
inc
in
jnp
aaa
xor
fadds
dec
and
xchg
sbb
jns
xchg
adc
es
std
inc
mov
xor
fdivl
pop
lret
sahf
jb
mov
or
adc
jmp
mov
jecxz
jmp
or
iret
mov
mov
xchg
cmpsl
inc
out
cmp
test
inc
add
dec
jg
loope
pop
jbe
pop
xchg
mov
and
push
mov
fistps
cmp
push
ret
pop
int3
mov
sar
mov
or
mov
jecxz
scas
jno
aam
lret
push
lahf
inc
or
shrb
aaa
ja
out
flds
movsl
ja
adc
sub
push
loope
call
xor
and
mov
outsl
pop
into
xchg
add
je
outsl
cmp
movsb
decb
jno
ficompl
mov
mov
add
dec
cld
ljmp
ljmp
dec
mov
mov
mov
arpl
sub
sbb
test
push
call
add
add
pop
pushf
jae
inc
pop
xor
xor
push
pop
inc
stos
icebp
xchg
loope
aad
fistl
test
mov
pop
push
add
std
jb
mov
shl
mov
stos
stc
es
fidivrl
push
movsl
js
cwtl
adc
fbld
xchg
jg
sarl
push
sub
mov
in
jnp
and
xchg
pop
movsl
sbb
jno
sbb
sub
pushf
rol
cmp
mov
dec
mov
pushf
ss
adc
cld
mov
nop
jmp
addr16
cs
cltd
inc
cmpsl
negb
lods
jbe
test
add
bound
std
mov
jmp
dec
loope
sub
mov
rolb
adc
mov
jle
outsl
push
or
xor
cmp
jno
dec
sbb
pop
notl
add
in
fld
adc
ds
stos
aas
negb
cmpsl
cmc
cltd
or
pop
jmp
add
xchg
movsl
xor
jmp
aam
stc
outsl
mov
movups
stc
sti
subb
jae
pop
pop
inc
add
int3
jns
mov
and
mov
test
sub
mov
mov
fwait
arpl
ret
inc
xlat
pop
jnp
jg
sub
mov
aas
add
mov
jmp
lods
iret
movsl
cmp
out
loop
pop
fstpl
mov
inc
inc
sahf
push
xchg
roll
repnz
test
mov
mov
shl
xor
je
imul
out
leave
mov
and
arpl
or
lret
push
enter
inc
fstpt
jecxz
sub
iret
cmp
pop
jne
jo
addr16
mov
jno
ds
test
cmp
mov
push
aaa
jle
push
fwait
stc
pop
das
adc
mov
lahf
leave
testl
sbb
mov
int
pop
and
add
sub
fwait
clc
sbb
lock
sub
clc
cmp
stos
sbb
arpl
rcrl
aad
xchg
jnp
repz
imul
in
cwtl
daa
mov
xor
aam
xor
cmc
cmp
ss
iret
mov
mov
xchg
mov
mov
xchg
shr
sub
cmp
aad
lcall
and
sti
cmp
sarb
sti
in
push
pop
inc
bound
loop
jo
stos
test
sub
lcall
xchg
mov
inc
fstpl
imul
inc
sub
add
in
push
inc
sub
or
push
sbb
mov
out
sbb
sub
adc
daa
dec
mov
sbb
pop
stos
lret
xchg
xchg
jecxz
mov
mov
sti
insb
pushf
jecxz
pop
cmpl
lret
movq
inc
sbb
cmc
jb
or
jb
fstpl
lcall
loopne
fstpt
add
adc
idivl
jb
mov
arpl
push
fcomps
std
cmp
stos
add
mov
sbb
aaa
dec
ss
mov
loope
int3
stc
das
aam
jno
int3
lods
pop
orb
add
dec
sub
cld
fcoml
xor
ja
loop
and
inc
mov
dec
pop
pusha
testl
test
adc
adc
in
and
ljmp
sarb
add
fs
jle
shll
cmp
jmp
pop
aam
add
push
xchg
adc
push
fmuls
adc
xor
push
or
xlat
insb
aas
lret
mov
pusha
loop
cmp
or
push
add
pushf
add
and
push
aas
add
sub
pop
sbb
shr
out
cltd
mov
dec
loopne
cmp
jnp
mov
mov
pop
cmp
push
push
jg
xchg
jnp
pop
mov
lods
in
jmp
xchg
mov
imul
iret
mov
mov
mov
pop
fcomi
addr16
out
jae
inc
sub
outsl
adc
inc
pushf
addr16
scas
movsb
cli
pushf
dec
mov
xchg
rclb
rcr
lea
add
or
cmp
ljmp
mov
push
stc
adc
cmc
stos
ret
fisubl
ja
inc
out
xor
clc
test
jg
inc
out
fisubs
pop
sub
stc
das
jge
es
nop
out
setns
ljmp
jae
into
rcrl
xchg
sub
add
pop
sbbl
lret
jl
fdivl
or
dec
imul
mov
scas
pop
dec
dec
ds
nop
in
repnz
pushf
mov
adc
pop
inc
cmp
push
adc
mov
xchg
lds
clc
insb
mov
in
sub
cmpsl
imul
ret
push
dec
popf
jb
push
and
int3
shll
add
lahf
mov
sti
cmp
adc
fwait
cmp
lret
xor
jge
addr16
shll
mov
jnp
mov
js,pt
scas
xchg
mov
mov
adc
lcall
pop
gs
shl
in
xor
dec
je
sbb
insb
push
cltd
adc
push
fisubrs
leave
and
add
push
inc
sub
pop
fiaddl
iret
orb
mov
cmpsb
lret
vpsrld
adc
insl
adc
dec
test
or
cli
cmc
lahf
daa
mov
dec
and
es
pop
or
cltd
cmp
fs
mov
test
mov
adc
or
rorb
sub
mov
movl
addr16
and
outsl
mov
mov
inc
push
adcb
or
pop
sub
roll
mov
sbb
xlat
dec
cwtl
add
jnp
xchg
and
add
imul
pushl
jmp
dec
bound
popf
mov
cmp
das
rorl
and
jle
aad
dec
or
test
jle
mov
mov
adc
repz
and
cmpb
and
or
rcrl
add
mov
mov
xchg
add
xor
dec
test
cwtl
stc
enter
mov
pop
cli
test
popa
pop
push
dec
enter
xchg
call
mov
subb
jg
xchg
mov
pop
rorb
pop
push
sbb
sti
movsb
add
mov
xchg
lret
aad
xchg
mov
mov
ja
insb
fidivrl
mov
mov
in
sti
add
sub
cltd
or
imul
loop
je
ja
sub
lods
mov
mov
add
iret
subb
addr16
movb
cmp
mov
mov
pushf
aaa
push
test
andl
ljmp
dec
jo
fisttpll
mov
jnp
xchg
outsb
pop
notb
mov
xchg
or
dec
out
inc
pop
mov
jae
adc
fs
jae
jl
cmc
cwtl
aad
jmp
arpl
out
mov
icebp
dec
pop
adc
pop
orl
pop
sbb
pop
xchg
imul
data16
and
mov
test
fwait
imul
xchg
jae,pt
es
dec
xor
cmp
add
sbb
and
fmul
jmp
fisubl
pop
addr16
or
xchg
push
jbe
xchg
cmp
shll
pop
out
jb
push
push
mov
push
push
clc
xor
pop
adc
insb
jg
jo
jl
sub
jl
xchg
cmc
dec
imul
imul
pushf
mov
scas
ds
cmc
cli
inc
lea
cltd
mov
push
jge
mov
lcall
adc
rclb
sti
add
sub
std
push
jb
jg
xor
mov
inc
fwait
push
loope
rorb
test
shll
mov
and
dec
rcll
fadds
into
jmp
or
mov
dec
mov
imul
js
adc
gs
mov
xor
sub
fsts
mov
imul
xchg
add
pushf
repz
adc
movsl
fisttps
rorb
and
mov
out
inc
xchg
icebp
sahf
repnz
adcl
xor
add
add
sbb
sbb
push
sbb
es
mov
jns
pushl
push
das
loope
lret
fdivl
fdiv
push
jge
sub
nop
jnp
or
xor
mov
mov
push
mov
insl
ret
hlt
lea
int
push
lahf
sbb
xchg
or
outsb
and
or
mov
fadds
push
call
movsb
and
popa
cmp
stc
push
ja
or
lds
push
out
xorl
sarb
cwtl
or
lcall
jnp
icebp
notl
imul
xchg
pushf
lea
fadds
repz
xchg
inc
aad
clc
sbb
xchg
inc
aas
or
pop
popa
mov
add
cwtl
pop
xchg
sub
leave
ret
pusha
imul
mull
push
xchg
outsb
xor
mov
mov
push
jg
sub
jb
test
lock
jo
jge
in
int3
sbb
inc
mov
fiaddl
pop
mov
and
pop
in
scas
inc
icebp
or
cld
inc
or
jl
insb
jp
xchg
adc
inc
or
out
sub
mov
ret
inc
adc
divb
mov
fmul
test
mov
outsl
ret
adc
lret
clc
sub
movsl
pushf
adcb
fcmovnb
orb
out
sub
xor
add
and
dec
cltd
push
inc
sahf
pop
dec
aaa
push
or
mov
leave
mov
jb
add
dec
and
and
cmc
and
insb
mov
pop
mov
andb
xchg
test
loopne
xor
push
add
xchg
mov
jge
lods
add
fistpl
aad
add
gs
jbe
jns
repnz
and
out
jle
and
or
iret
mov
icebp
cmp
sbb
mov
adc
nop
int
mov
or
lods
jmp
inc
sbb
sbb
pop
loopne
adc
lret
test
imul
jmp
push
loope
inc
xchg
repnz
stos
leave
ret
lods
cmpsb
rcrl
cmc
gs
cmp
xlat
jbe
jnp
push
xor
scas
mov
fcmovbe
mov
incb
adc
cmp
in
out
xor
fildl
inc
neg
ja
push
scas
movsl
push
test
call
jge
push
cmp
add
jae,pn
add
jae
jge
test
xchg
popf
sarl
cmp
xor
mov
divl
jge
xor
or
mov
mov
ds
cmp
xchg
sbb
in
les
xor
scas
mov
rcrl
pop
pop
stos
jns
insl
mov
out
cmpsl
rcl
xchg
cltd
sarb
xorb
dec
stc
push
jo
subl
jp
loopne
jle
outsb
inc
ja
mov
int
adc
push
insl
cmpsb
dec
xor
arpl
lret
xchg
mov
daa
movsb
sub
add
mul
pop
mov
mov
aad
push
mov
mov
and
inc
leave
or
lock
fisttpl
outsl
xchg
leave
aaa
jae
in
pop
push
mov
cmp
ss
mov
jo
ds
fwait
mov
jns
jnp
stc
icebp
out
lret
jbe
jae
mov
dec
adc
rcrl
mov
in
in
cmpsb
pop
xor
mov
popa
hlt
lods
pop
push
jae
int
cmp
adc
es
xchg
inc
into
fnstenv
int
popa
sbb
pop
data16
ret
or
fucomp
pop
mov
dec
push
pop
pop
mov
pop
imulb
push
xchg
out
jmp
pop
or
mov
dec
jl
cs
inc
ret
test
sub
dec
lcall
ss
and
inc
sub
adc
or
jle
fstpl
fisubrl
jl
pop
xor
scas
xchg
push
mov
inc
gs
pop
mov
or
mov
ljmp
dec
pop
sub
outsl
arpl
movsl
mov
push
push
pop
insb
cmp
je
xor
movsb
mov
addr16
loop
je
sbb
cmp
pop
popf
xchg
insb
pop
shrl
or
push
rcl
imul
pop
sbbb
jge
repnz
imulb
test
pop
cmp
mov
inc
loop
inc
cmp
push
or
cmc
clc
jge
cli
outsl
adc
push
js
arpl
popf
sub
adc
mov
test
into
scas
dec
mov
dec
push
xor
mov
xor
adc
data16
xchg
js
arpl
inc
adc
cwtl
popf
fwait
xchg
lods
aas
jg
xchg
je
mov
jb
cmpsb
add
repnz
mov
jmp
push
or
inc
lods
js
test
mov
cmp
pop
sub
inc
mov
xor
xorb
faddl
xchg
in
rcrl
cmc
jle
fwait
and
sub
pushf
xchg
aam
lock
rorb
aas
popf
or
mov
mov
mov
xchg
enter
insb
sub
xchg
out
fimuls
sub
xor
into
in
test
xchg
dec
cli
sub
cld
pop
dec
mov
or
xchg
mov
xor
pop
xor
mov
and
jns
sub
cmp
mov
ss
adc
outsl
imul
rcr
pop
jge
and
pusha
xchg
arpl
imul
cwtl
mov
ds
xlat
insl
mov
mov
and
mov
stos
mov
xchg
cmp
shl
aas
out
mov
bound
adc
ja
int3
push
jecxz
bound
cmpsb
fs
loop
cmp
lods
pop
mov
mov
repz
jle
movsl
mov
sbb
cmp
xchg
xchg
out
jl
addr16
xchg
sahf
adc
mov
pavgw
fsub
mov
lret
pop
mov
adcl
jge
dec
xchg
sub
lods
bound
ret
jno
or
mov
and
jmp
hlt
adc
cmpsb
sub
daa
mov
cmpsl
pop
push
fcmove
jbe
mov
lods
fisubl
dec
push
push
cmp
ret
pop
rclb
or
mov
dec
jge
pop
pop
jp
faddl
aad
xor
movsl
xor
ss
dec
jmp
xchg
inc
data16
and
lcall
mov
or
scas
and
or
pop
arpl
and
add
mov
and
mov
rcrb
and
push
adc
scas
loop
xor
divb
and
cli
dec
adc
dec
ret
xor
popf
out
nop
xchg
cmpsb
xor
jns
cmc
inc
add
add
adc
cmpsl
cmc
rolb
bnd
dec
push
adc
lock
mov
sub
cltd
dec
jno
ds
sbb
mov
pop
mov
xor
mov
mov
testl
test
loope
mov
mov
push
xlat
fbstp
popa
daa
outsb
sub
sbb
fidivs
in
dec
fcmovnb
testb
add
push
cwtl
loopne
and
dec
mov
in
movsl
xchg
push
and
add
cmp
or
xor
lahf
push
and
fnstcw
subb
jp
mov
int3
movl
or
or
sti
xchg
pop
push
sub
mov
xchg
jo
jo
outsl
ljmp
pop
jp
loop
push
dec
sbb
and
push
sti
adcl
lcall
in
adc
or
dec
cld
inc
subb
bound
and
sub
or
add
pop
dec
and
scas
sbb
inc
sbb
jecxz
dec
aam
negl
lds
lock
ja
jns
add
int3
int
pextrw
aas
lahf
mov
sub
shlb
repz
std
pop
jg
jp
xchg
fst
cmp
mov
movsb
mov
dec
ds
iret
gs
pop
fiaddl
mov
mov
and
sub
arpl
movsb
adc
cmp
inc
mov
sahf
push
cmpsl
clc
dec
push
jno
daa
xor
cwtl
dec
fnstsw
and
jbe
pusha
clc
adc
in
sahf
inc
push
inc
js
add
lret
cmc
mov
push
xchg
sub
adc
rcrl
fwait
call
sub
xchg
aaa
ljmp
sbb
fcompl
fdivs
and
movsb
push
xchg
call
iret
sub
fsubrs
test
inc
add
mov
cmp
or
push
fwait
dec
sbb
notb
xchg
sbb
repz
pop
mov
sbb
push
cmpsb
out
data16
cmp
sbb
xor
sbb
cld
sub
cld
dec
mov
mov
jg
push
mov
dec
je
xchg
adc
sub
jbe
in
rcll
repnz
repnz
lea
shrb
push
mov
pushf
push
ja
subb
or
shl
jns
and
sahf
arpl
or
push
iret
and
nop
jle
incb
xchg
daa
insb
lret
pop
insl
sub
scas
and
aad
in
and
inc
mov
pop
jo
xchg
pop
mov
out
dec
stos
in
daa
in
ja
mov
into
mov
cmpsl
int3
das
mov
rorl
fidivs
leave
les
mov
rcrl
cld
jmp
lock
sbb
add
jns
xor
pop
loopne
inc
ret
push
push
pushw
and
pushf
mov
out
aaa
xchg
xor
ret
es
lret
fistps
cs
in
sub
bound
fucomp
enter
test
das
cmpsl
lcall
sbb
xor
xchg
scas
mov
lcall
test
xchg
mov
scas
in
mov
rorl
aam
aas
jo
sbb
insb
mov
or
push
inc
mov
cltd
mov
add
div
dec
lods
lds
and
push
inc
jo
cmp
hlt
inc
in
in
jg
cmpsl
mov
push
push
dec
jmp
rcl
gs
pop
add
nop
pop
sub
jle
jge
stos
add
fidivs
std
and
dec
cmp
jae
out
mov
cld
sub
xchg
adc
lods
lret
lods
shrb
mov
mov
mov
adc
and
add
push
call
fsts
mov
popl
loopne
sub
jno
sahf
shlb
jecxz
in
mov
insl
xchg
sarb
das
adc
xchg
inc
xchg
mov
mov
mov
mov
arpl
in
aaa
loope
ds
adc
insb
add
test
les
add
push
mov
addr16
mov
cmp
push
or
or
xor
or
insb
mov
mov
and
inc
mov
mov
in
xchg
addr16
int3
sub
mov
in
data16
mov
shr
shl
pop
push
adc
dec
stos
cwtl
aaa
push
in
fwait
xchg
test
ret
or
and
test
int
dec
adc
ja
push
add
imul
test
lods
mov
add
iret
imul
or
cli
pop
pusha
push
icebp
imul
add
push
outsb
test
std
inc
les
or
popf
sbb
cs
push
and
pop
cmpsb
jbe
int3
cmp
rcr
jp
icebp
lret
arpl
pop
mov
lods
xchg
xor
mov
loop
sbb
mull
outsb
sub
sub
sub
jno
sbb
xor
sbbl
mov
and
or
jle
or
mov
loop
in
pop
or
adc
push
and
fcomi
adc
jmp
sbb
idiv
xor
pushf
push
test
adc
outsb
push
insl
cmp
in
sbb
loopne
mov
jmp
xchg
sub
cmpsl
lcall
outsb
mov
pop
xchg
movsl
fnstenv
xchg
orl
dec
in
lods
jmp
dec
cmp
or
push
add
fisubrs
fsts
sbb
or
cld
add
out
sahf
jne
mov
cld
lret
out
and
cmp
sub
divb
or
adc
sub
cmp
xchg
push
adc
cmp
dec
fs
outsb
add
testl
les
insb
in
andb
int
ljmp
mov
outsl
sub
rcrl
xchg
outsl
jmp
dec
inc
sub
or
test
inc
nop
cli
cmp
push
stos
pusha
fneni(8087
mov
lret
sahf
jecxz
mov
pop
paddsb
xchg
lock
sbb
js
negl
and
out
push
pop
inc
leave
mov
and
mov
pop
cld
cmp
stc
test
das
sti
outsl
hlt
mov
stos
aad
je
repz
add
incb
sti
and
pop
cs
mov
fists
sti
scas
pop
into
fdivl
dec
push
outsl
inc
stos
mov
shr
xchg
imul
lods
sbbl
fsubl
cmp
xchg
icebp
mov
jo
das
add
or
js
jmp
xchg
jo
cmp
aam
inc
hlt
icebp
in
push
std
cmp
cmp
jbe
fwait
lcall
cmc
leave
adc
fdiv
adc
daa
enter
dec
dec
and
ds
push
pop
lock
loope
test
dec
or
aaa
push
sbb
push
xchg
pop
and
icebp
xchg
sub
push
xor
int
jecxz
jne
pop
test
sbb
xchg
dec
mov
enter
gs
push
mov
mov
clc
addl
and
sub
or
push
rolb
pop
dec
xchg
push
inc
adc
ja
sub
dec
testl
rcrb
push
fisttps
mov
mulb
add
inc
inc
sub
sarb
push
inc
cmpsl
xor
xchg
xor
xchg
int
cmp
and
sub
mov
loopne
insl
cmp
enter
and
dec
call
loopne
daa
add
xchg
jno
xchg
jg
mov
aas
std
movsl
repnz
imul
loop
ja
xchg
push
pop
xchg
ja
or
mov
inc
inc
hlt
cmc
rorl
ja
mov
add
cmp
loope
rorb
xor
je
lret
cmc
sub
call
xor
add
sub
es
dec
sbb
out
xor
stc
les
call
sub
pusha
jge
gs
add
aam
stos
add
repnz
mov
jmp
sbb
or
lcall
flds
jo
inc
out
fnstsw
jb
pop
cld
jns
test
mov
enter
cld
rcl
cld
cmp
cmp
lock
xchg
inc
shl
gs
fsubp
sbb
and
push
mov
or
cs
test
and
mov
sarb
in
xor
jae
mov
repz
movsb
lahf
sbb
mov
pusha
fld
xchg
into
and
sub
rcll
push
sub
in
popl
add
call
push
xor
stos
in
adc
xchg
mov
int
in
js
cmp
xchg
cmpsb
test
pop
fwait
je
rcr
mov
popl
cli
cmpsb
subb
cmpsl
inc
pop
jo
xlat
adc
out
rolb
pop
loopne
scas
xchg
mov
pop
dec
add
fs
daa
mov
int3
fs
and
lods
jo
inc
pop
xchg
or
ret
cmpsb
xchg
aaa
mov
sub
out
mov
push
pop
loop
mov
inc
jle
and
sahf
ss
add
ret
out
xor
push
mov
fsubrl
test
pusha
mov
enter
jge
adc
loopne
mov
adc
sbb
outsl
in
imul
cmp
and
fistps
mov
mov
inc
mov
cli
push
or
mov
cli
add
lcall
add
repz
and
insb
stc
add
xor
fldenv
adc
and
loopne
adc
jl
xor
icebp
lret
inc
cmp
add
stc
mov
xor
fs
jbe
scas
jge
imul
call
fbstp
cmp
jo
sbb
mov
mov
int
stos
add
je
fnsave
xchg
mov
mov
xor
mov
stc
or
cs
or
idiv
jle
and
aas
adc
pop
cmpsb
ficompl
out
push
and
inc
jo
pop
push
mov
and
les
bt
mov
mov
or
add
cmc
cltd
cmc
sbb
cmp
jge
pop
cmp
lcall
jmp
inc
test
sarl
outsl
imul
loopne
pusha
test
test
inc
call
cmpb
push
adc
pop
mov
movsb
and
out
repz
jp
insl
imul
pop
dec
pop
lcall
adc
xchg
mov
stc
xchg
push
inc
cltd
rorb
pop
in
mov
fdivs
xor
jns
lods
mov
adc
pop
enter
xchg
push
xchg
inc
push
icebp
lods
mov
adc
pop
rclb
mov
ss
and
out
pop
xor
push
clc
jge
sbb
mov
data16
es
fcoml
ljmp
lret
test
ds
add
jbe
rorb
repz
sub
adc
fs
and
and
out
jl
dec
and
push
mov
add
sbb
xchg
cmc
popa
nop
xchg
dec
shll
xor
mov
sbb
fs
pusha
mov
xchg
icebp
sahf
inc
imulb
mov
cmp
in
jo
push
add
sub
and
int3
jb
jae
scas
test
in
pusha
adc
fcoms
mov
popa
ret
dec
mov
jg
mov
dec
loopne
outsb
sahf
sahf
xchg
repz
xlat
pop
cld
mov
adc
movsb
mov
jo
ds
incl
hlt
dec
inc
or
out
fdivl
fcoms
or
imul
add
dec
jae
in
push
notb
mov
in
movsb
mov
mov
pop
in
andb
sub
jge
mov
jns
xchg
outsl
or
sub
mov
mov
pop
imul
push
es
imul
mov
fsubl
int3
gs
cmpsl
stos
stos
dec
add
pop
les
cs
adc
dec
mov
mov
pushfw
pop
out
cmpsl
dec
sub
and
jo
fistpll
mulb
addr16
jg
sub
jno
mov
jnp
cmp
imul
and
or
dec
test
xchg
inc
popa
jae
jne
loopne
inc
push
pop
es
mov
pop
rcr
add
lea
cwtl
test
add
jnp
imul
push
mov
notl
jp
sub
jno
aam
pop
mov
sub
mov
out
mov
push
or
scas
jg
mov
inc
xchg
fmuls
inc
cmp
outsl
rcrb
adc
cli
push
mov
imul
popa
ret
pop
inc
jae
push
icebp
and
mov
lea
mov
addr16
das
lods
push
or
sbb
lods
imul
test
mov
int3
jno
in
or
jae
dec
outsl
or
push
lret
pusha
adc
rcrb
jno
incl
xorb
hlt
jge
stos
mov
inc
and
bound
in
adc
mov
clc
and
add
cmp
out
push
add
into
adc
cwtl
sahf
mov
movl
xlat
fwait
adc
cltd
in
push
sbb
fs
in
scas
and
xchg
fists
lea
mov
xor
movsl
sahf
xor
lds
push
les
mov
sbb
loope
out
cmp
ds
xchg
movsb
adc
mov
add
adc
fs
lret
sbbb
fisttpl
roll
cmp
cltd
loope
adc
inc
imul
fwait
mov
repnz
or
pushf
add
push
mov
push
aad
inc
sbbl
pusha
mov
ja
inc
clc
mov
cmp
addr16
lahf
inc
jle
rclb
cmp
inc
mov
sbb
test
fcomps
loop
sub
lcall
adc
adc
pop
aam
frstor
pusha
xlat
into
add
dec
loop
inc
ss
add
ljmp
push
xchg
pop
or
xchg
sbb
add
and
sbbl
pop
in
xchg
mov
aaa
frstor
roll
inc
in
mov
xchg
sbb
imul
mull
aad
jb
cltd
test
test
insb
xchg
sbb
cmc
cli
pop
mov
inc
and
imul
sub
adc
in
inc
lret
lahf
jns
insb
lock
jae
loop
in
inc
cmp
popa
nop
bound
sub
adc
fdiv
pop
movsl
leave
mov
out
mov
sbb
xor
popf
mov
xlat
lret
lahf
jno
push
jb
mov
sbb
das
cmp
call
fsubrs
mov
inc
insl
dec
dec
and
dec
mov
dec
and
cmpsl
push
mov
jl
mov
dec
push
popf
dec
out
sbb
sti
outsb
xchg
shll
andb
ljmp
iret
in
enter
cld
push
lret
in
adc
test
mov
stos
sbb
shlb
negl
sbb
push
inc
pop
idiv
rcll
xor
or
lock
loopne
and
lcall
int
lock
andl
add
add
cmp
stos
pop
jbe
inc
cmp
mov
push
and
cmp
jg
scas
dec
mov
scas
sbb
ljmp
mov
roll
jg
jne
mov
xchg
push
pop
dec
mov
call
repnz
arpl
mov
or
xchg
push
mov
jmp
rcrb
into
shl
mov
xchg
out
mov
arpl
notb
xchg
scas
out
cmp
int3
insb
mov
cs
sub
mov
cmp
pop
cmp
mov
jmp
pop
mov
jge
inc
call
jo
lret
dec
and
fdivp
jbe
and
test
sub
hlt
leave
daa
mov
loope
mov
jmp
and
jle
add
lods
stos
pushl
pop
lds
sub
inc
rolb
adc
sub
mov
and
mov
mov
jo
adc
jns
mov
add
mov
xor
cmpsl
xor
cltd
pushf
mov
in
out
daa
xor
jge
and
leave
call
pop
test
pop
cli
or
negb
aam
xchg
push
leave
push
jge
mov
add
fsub
sub
popa
mov
cmpsb
mov
notl
jl
lods
cmp
xorb
stos
dec
adc
cmp
je
test
pop
repz
push
aad
out
movsl
pop
or
ljmp
pop
sub
outsl
fidivrs
jb
jbe
push
outsb
push
mov
outsb
pop
cmpsl
and
pop
inc
sbb
lcall
gs
dec
pop
mov
dec
jle
pop
mov
jle
cmc
pop
or
ja
rcl
dec
jmp
sbb
jns
push
imul
idivl
outsb
es
dec
or
lcall
insb
popf
stos
lods
adc
aaa
sarl
cmp
adc
xor
jg
dec
pop
mov
sahf
ret
sub
fcomip
out
push
in
sti
daa
mov
repz
pop
sub
pop
dec
out
mov
mov
inc
xor
daa
and
clc
movsl
push
push
xchg
cmp
sub
cmpsl
pop
jge
int3
sar
call
jb
iret
mov
cmp
or
orb
pop
mov
mov
sbb
popf
xchg
test
out
test
push
mov
inc
cmp
loop
negl
sub
fnstenv
imull
hlt
in
outsb
push
jp
cmp
pushf
mov
rep
loopne
clc
pop
es
sub
in
push
out
and
jle
mov
call
xor
ret
and
idivb
cmp
ja
rorl
aam
cmp
mov
jl
fnsetpm(287
pop
jmp
stos
bound
sub
xor
data16
inc
mov
xor
daa
cmp
pop
popa
or
outsl
out
pop
and
sbbl
mov
push
sahf
fidivrl
and
nop
and
inc
cmp
cwtl
jmp
std
sti
int
push
pop
push
movsl
cmp
inc
mov
or
ss
inc
sahf
mov
in
inc
xor
data16
or
dec
mov
lods
cmpsl
sub
lock
lea
pop
fwait
and
mov
stos
and
iret
mov
jne
mov
jnp
jmp
dec
and
dec
sub
adc
andl
mov
inc
push
mov
and
hlt
test
mov
movsl
loopne
data16
rol
andl
mov
es
push
inc
push
xchg
adc
repnz
int3
jmp
mov
add
mov
pop
in
lods
cld
inc
test
ret
ss
push
xchg
inc
mov
adc
ja
call
sub
in
add
mov
scas
sub
pop
lcall
in
test
adc
out
repnz
sbb
adc
push
pushf
data16
fdivrl
lcall
inc
out
and
ja
mov
push
push
jl
xchg
popa
daa
dec
stos
mov
dec
mov
sbb
out
dec
sbb
ljmp
data16
cmp
mov
js
inc
arpl
xchg
popa
inc
or
mov
inc
ficoml
inc
mov
jecxz
daa
pop
orl
cmc
inc
out
dec
sub
mov
aas
imul
push
push
push
and
rcl
mov
xchg
push
mov
out
and
repz
test
ja
mov
pop
mov
pop
push
cmp
dec
sub
lcall
mov
addr16
iret
pusha
cmp
xchg
and
repz
in
lods
les
sub
fsubr
mov
in
call
sahf
jl
lret
pop
add
cmp
ret
into
jle
cld
dec
ja
add
stc
fildll
dec
mov
fwait
clc
sti
neg
aas
mov
inc
nop
cmpsl
xchg
fwait
and
fwait
mov
cltd
testl
fistpll
mov
cmp
daa
popa
mov
ljmp
dec
test
jp
push
jno
loope
push
push
imul
hlt
scas
jne
and
push
sub
stos
and
stc
shr
loop
aad
push
push
push
mov
gs
inc
lret
rcrb
bswap
xchg
hlt
add
test
cmp
mov
push
test
xor
test
push
cmpsb
push
int
les
in
pop
xchg
mov
dec
ficoms
mov
push
xor
aad
mov
mov
pop
insb
pop
jne
push
arpl
xchg
xchg
leave
push
mov
adc
pop
in
loop
inc
add
mov
aas
out
mov
sbb
dec
or
mov
inc
inc
add
testb
jae
push
xlat
cmp
lcall
sub
or
cmp
mov
out
popf
aas
repz
xchg
dec
nop
mov
inc
sub
cld
and
sub
jo
movsl
fsubs
xor
fwait
push
rcr
xlat
push
or
shrb
xchg
sub
mov
mov
movsb
je
sbb
ds
push
ret
add
hlt
dec
jb
roll
xchg
add
int3
xor
hlt
les
in
or
imul
out
insl
outsb
pop
xchg
mov
idivl
mov
fldcw
enter
ljmp
jp
cmpsb
imul
hlt
ret
pop
xor
flds
push
pushf
or
bound
in
mov
mov
mov
repz
jae
shll
xchg
fbld
mov
or
dec
cmpsb
jg
push
jae
add
add
aad
je
fisubs
rcl
clc
mov
popa
push
xlat
and
mov
push
popa
inc
outsb
sarb
xchg
cmc
fwait
sbb
jns
mov
jo
mov
xchg
mov
in
xor
out
in
xor
cmpb
mov
clc
cmp
mov
dec
in
inc
mov
mov
js
outsl
lods
out
repz
mov
movsl
push
jecxz
out
xor
bound
sub
jae
hlt
xchg
mov
out
or
mov
lock
insb
movsl
mov
cld
dec
xor
imulb
in
sub
and
xor
mov
insl
sub
insl
loopne
dec
push
cmp
push
mov
and
xchg
roll
outsb
das
mov
xor
jecxz
lods
leave
or
loope
shr
shr
sub
lods
pop
or
enter
aaa
movsl
add
fsubr
jno
pop
negl
fdivp
fimull
push
js
inc
leave
xchg
jns
inc
add
into
and
mov
mov
pushf
ret
sub
inc
outsb
adc
inc
jae
dec
sub
or
pop
sbb
mov
xchg
andl
or
rcr
test
enter
rcll
loope
leave
ret
jne
aas
add
nop
jmp
daa
notl
push
fucomp
inc
scas
mov
push
flds
fisttpll
out
stc
xchg
pop
xchg
push
rclb
repnz
xor
jecxz
or
sbb
shll
add
negl
leave
rclb
leave
adc
xchg
test
cmp
test
lret
push
pop
xchg
inc
fwait
xor
clc
lods
sub
pop
call
cmc
mov
cmp
or
fldenv
and
add
inc
dec
in
stc
sbb
push
pushf
jae
rolb
scas
mov
pop
xor
pop
or
iret
enter
cmp
and
nop
push
outsb
out
enter
movsb
loopne
adc
add
lods
or
movsl
out
and
popa
mov
sti
es
enter
stc
push
push
das
addb
stos
add
mov
cmp
adc
clc
cmpsb
push
lret
pop
xor
jne
pop
shlb
jo
cld
add
test
jo
push
xchg
mov
sub
into
mov
cmp
xor
movsb
ficoms
jmp
pop
xor
sub
or
xchg
mov
dec
stc
mov
pop
mov
and
pop
cmp
xchg
cmc
cli
or
inc
adc
std
out
jl
mov
jge
inc
xor
scas
sbb
and
scas
mov
les
xor
jnp
lret
push
out
xor
pop
sbb
out
enter
xor
adc
rcll
repz
or
test
ret
fisubl
call
leave
mov
adc
cld
adcl
sbb
sbb
sub
add
in
and
repz
dec
ljmp
int
je
movsb
push
stos
mov
push
iret
ror
mov
dec
ss
or
mov
mov
orb
cmp
or
sub
add
xchg
loop
mov
or
pop
insl
mov
das
arpl
leave
jo
ret
add
outsb
xor
subb
sbb
gs
jl
dec
cmp
cmc
xchg
pop
ss
inc
das
in
mov
repnz
cmp
outsb
sub
pop
xor
xchg
dec
dec
jge
leave
repnz
inc
sbb
fidivl
dec
jmp
adc
jae
cmpsb
lea
mov
push
lock
dec
xor
int3
movsb
jle
pop
and
stos
mov
sbb
fbstp
test
mov
pop
push
arpl
ret
sbb
test
icebp
push
adc
mov
in
les
insl
mov
jl
into
xchg
loopne
adc
jle
aaa
or
insb
add
addr16
dec
pusha
cmp
outsb
rcr
lea
dec
dec
fmull
lea
or
sti
cltd
sub
dec
leave
fnstcw
add
sbb
pop
insb
pop
daa
out
js
jns
add
out
and
daa
push
loopne
add
shld
data16
inc
sahf
leave
xchg
insb
in
in
jae
dec
mov
fnstcw
fcompl
les
scas
cmc
adc
rcrl
cld
pop
movsl
mov
icebp
mull
test
xchg
jo
inc
cli
idivb
insb
push
pop
lods
jne
nop
call
push
fcompl
jb
int
jmp
jne
mov
lods
pop
jb
cmp
adc
adcl
cli
pop
pusha
adc
lea
mov
dec
ret
int3
sub
out
and
pusha
fwait
xchg
rolb
xchg
lahf
xor
mov
mov
and
loopne
out
sub
inc
mov
mov
jb
test
add
loope
xor
stos
sub
nop
pushf
into
pop
inc
jbe
jle
enter
sub
cmp
ljmp
lret
mov
xlat
fucomi
inc
cmp
and
jb
jmp
mov
jp
lock
into
push
scas
iret
pushf
or
dec
xchg
mov
fs
addr16
push
mov
lahf
nop
inc
aam
ror
push
push
arpl
fdivr
out
dec
mov
push
in
int3
fiaddl
xlat
bound
lods
mov
mov
sbb
add
adc
and
lds
and
xchg
ja
rorb
sub
xchg
cmpsl
lret
jns
rcrl
adc
lods
xchg
pop
pop
lods
cmpsb
sub
fcmove
mov
imul
jge
out
out
fidivs
or
add
mulb
pop
sbb
inc
dec
sub
loopne
lods
and
dec
repnz
outsl
jmp
ljmp
jecxz
pop
jle
mov
outsb
cmpsl
xchg
lret
loop
scas
insl
call
push
xchg
push
lret
or
inc
stos
outsl
les
mov
pmulhuw
idivb
xchg
push
sbb
mov
imul
out
pop
push
sub
cmp
xchg
mov
cmp
ss
fcomip
jns
std
sbb
dec
jo
repnz
fcoml
xchg
dec
push
push
and
cld
outsb
xor
mov
jo
and
add
or
call
or
sub
jp
cmp
pop
cmpsb
loopne
inc
jns
test
pusha
sub
inc
xchg
fnsave
ficoml
ds
sti
pop
push
stc
mov
movsl
push
stc
inc
lods
and
repnz
fs
sti
inc
out
push
push
and
inc
out
fs
rol
test
or
popf
mov
ret
cli
adc
adc
incl
test
lds
lret
hlt
ror
xchg
add
sbb
pop
and
loopne
dec
inc
mull
xchg
lahf
sti
sbb
pop
lcall
lods
pop
push
scas
das
fdivrs
das
push
xor
and
in
incl
sub
mov
jg
mov
xchg
leave
hlt
inc
pop
and
jmp
inc
cwtl
lret
mov
sarl
fcoms
jo
loopne
jns
add
sahf
cmc
cld
push
inc
in
mov
mov
mov
int
clc
mov
xchg
jns
int
push
ljmp
xor
push
sbb
pop
dec
sub
mov
inc
mov
cmpsl
or
mov
inc
xor
mov
cmc
sbb
je
xchg
notb
cli
cltd
shrb
ja
jecxz
sub
push
rcrl
xchg
jnp
fcmovnu
and
fs
leave
xchg
repz
jmp
jp
repz
cld
ja
in
lea
mov
sarl
jns
in
addl
fwait
adc
in
stc
jmp
pop
xchg
nop
mov
gs
sbb
pop
lock
std
je
fwait
hlt
dec
idiv
inc
and
repz
insl
lock
sub
int3
mov
aaa
shr
daa
add
arpl
mov
dec
out
inc
in
inc
xchg
push
jle
lods
aam
push
inc
add
jge
push
sahf
xor
ret
mov
jecxz
cmp
repnz
leave
ds
push
dec
mov
dec
pop
jg
lahf
lods
aam
das
mov
sbbl
jno
dec
andb
pop
arpl
sbb
cmpsl
push
lea
cmc
or
out
cmp
cld
or
xor
dec
test
sub
or
fisttpl
dec
push
or
sbb
sub
stos
mov
pop
and
inc
push
add
mov
xchg
ljmp
xchg
add
popa
ret
mov
xchg
idivl
out
es
aas
je
mov
adc
sti
in
push
hlt
std
push
push
mov
push
rcrl
lods
aam
sub
sbb
incl
add
fsts
and
or
sbb
adc
nop
push
jg
mov
mov
and
push
mov
jp
inc
sub
xchg
jb
jae
fidivl
cmpsl
sub
push
aad
out
inc
add
mov
xor
out
mul
enter
pop
xchg
ljmp
push
jns
loop
les
jg
stos
jg
lret
test
and
rorb
pop
sbbb
mov
fldenv
test
lahf
out
xor
int
mov
inc
call
xrstors
push
push
inc
ror
mov
pop
mov
cwtl
xlat
test
push
outsb
popf
fdivp
shlb
mov
mov
or
in
lahf
idiv
lahf
xor
jmp
add
inc
aad
push
or
rcrb
mov
inc
and
out
sub
js
cmp
inc
int3
inc
negl
sub
lret
ret
xchg
mov
and
mov
mov
push
or
adc
lea
and
push
xchg
mov
xchg
add
sbb
inc
xorb
add
fdivl
mov
aas
mov
jnp
xlat
cmpsl
pop
lea
scas
adc
imul
and
ficompl
mov
adc
pop
cmp
test
dec
sub
adc
mov
or
aam
pop
rcll
imul
dec
pushf
and
out
mov
orl
out
arpl
js
ret
lret
jbe
pop
jno
jp
ljmp
and
pop
ret
cmc
sti
add
cwtl
sub
mov
push
mov
push
mov
icebp
or
pop
into
shr
pushl
in
pop
out
and
xchg
ljmp
inc
pop
mov
jbe
pop
mov
push
stc
test
push
sbbb
test
hlt
mov
ja
mov
mov
or
rcll
std
decl
out
jp
dec
aad
lret
pop
jno
mov
push
cmc
mov
shll
inc
dec
jmp
les
icebp
movsb
cltd
add
rorl
xor
pop
sbb
pop
add
and
dec
dec
nop
inc
cli
mov
and
jb
mov
pop
push
pop
xor
sbb
movsb
cmp
dec
add
mov
movsl
xor
aad
xchg
xchg
test
cwtl
out
out
hlt
popa
pop
daa
rcl
or
xor
jmp
mov
mov
je
enter
dec
ja
adc
mov
xchg
inc
adc
scas
and
mov
cmp
outsb
call
xor
sub
dec
lcall
test
mov
inc
cs
pop
xor
lret
sbb
pop
dec
pop
lea
push
mov
mov
adc
cmp
stos
lahf
das
pushf
bound
in
pminsw
mov
stos
push
push
lahf
cmp
jp
hlt
push
outsb
sbb
mov
ret
jb
mul
enter
jne
mov
fsubl
test
mov
lret
xchg
lcall
addr16
je
jl
aad
mov
repnz
movsb
pop
mov
mov
mov
sub
pop
pop
adc
adc
add
adc
pop
ljmp
aas
ret
xchg
insb
adc
lods
cld
and
sarb
mov
arpl
or
xor
mov
mov
lcall
in
ss
divl
adc
and
mov
addl
push
push
push
jl
ja
xchg
leave
pop
push
flds
orb
rcrl
mov
mov
or
shrl
sub
pop
fiadds
je
push
mov
mov
adc
mov
jb
push
repz
xor
lret
xchg
pop
ficompl
das
add
in
cli
popf
add
sbb
and
inc
add
and
xor
ja
lock
sbb
enter
loop
outsb
inc
and
daa
js
fld
mov
push
push
dec
sbb
scas
and
rcll
cmpsl
popl
cld
push
repnz
cmpl
adc
or
test
and
sbb
aam
jmp
mov
das
mov
pop
cmc
xchg
pop
ljmp
iret
scas
out
push
sbb
push
jb
movsl
popa
or
jb
loop
insb
stos
loopne
in
push
loop
cltd
in
jg
mov
mov
jmp
push
aaa
adc
jp
or
mov
or
lock
mov
mov
sahf
dec
ret
pop
xor
mov
shlb
js
xor
jns
mov
adc
jmp
cmp
push
es
lcall
dec
loop
mov
in
in
nop
fwait
mov
mov
push
cli
or
or
jae
cmp
inc
negb
push
inc
push
jbe
mov
test
jb
stos
push
mov
mov
jnp
insl
gs
cld
mov
bound
fwait
enter
lods
push
mov
xor
jno
leave
das
push
mov
or
into
adcl
sub
inc
ret
xrelease
mov
ret
out
push
push
adc
data16
push
out
push
stc
xchg
aad
outsb
and
jl
mov
ficoms
addb
push
sbb
push
jae
jmp
sub
cld
cmpb
popa
cwtl
shll
adc
cmp
clc
jae
xor
enter
inc
imul
mov
mov
shr
pop
xor
sub
imul
cmc
outsl
dec
shrl
xor
adcl
jecxz
aad
ss
aam
cld
fimull
dec
fimuls
dec
fists
add
loop
pop
lods
mov
out
cmpsl
lret
cli
in
pop
shrl
ljmp
pop
add
push
lods
icebp
jg
mov
loope
sub
in
call
cltd
in
mov
out
pop
cwtl
loopne
lret
jg
cltd
mov
lods
sarb
test
mov
mov
jp
out
pop
or
test
js
insl
or
filds
arpl
push
imul
ja
mov
xchg
push
loopne
mov
roll
sub
cmp
xchg
out
ljmp
dec
sub
pop
rcll
lods
data16
mov
mov
pop
push
mov
and
and
aad
loop
and
pop
jnp
fldcw
add
pcmpgtw
push
sahf
adc
stc
push
fwait
icebp
mov
pop
push
dec
and
ficompl
xor
lods
mov
dec
loop
xlat
loope
leave
subb
cmp
cmpsw
add
add
xchg
pop
sar
sub
adc
mov
iret
fsubrl
ss
inc
push
stos
aam
movsb
dec
dec
dec
dec
dec
jle
sbb
mov
jnp
out
mov
mov
lods
jne
ret
lret
fldl
mov
inc
js
inc
repz
jbe
lret
or
lcall
jp
mov
in
inc
insb
daa
push
sub
adc
push
push
or
add
bound
jnp
or
jae
pop
cld
popa
pusha
pop
mov
dec
mov
outsl
pushf
shrb
scas
hlt
inc
aas
sar
push
inc
ds
xorb
test
xor
out
xchg
outsb
out
call
mov
fsubs
inc
lret
repnz
mov
leave
push
scas
fsubl
push
sarl
push
test
sub
mov
je
mov
jmp
insb
int3
nop
repz
test
cld
xorb
lcall
lret
movsb
stc
add
pusha
mov
dec
cmp
scas
jnp
fbstp
dec
stc
fs
mov
out
test
test
pop
decl
mov
push
hlt
lods
sbb
cmp
push
dec
sub
mov
gs
xor
push
mov
push
add
jbe
fldcw
roll
out
cmpsb
ds
jns
rclb
aaa
pushf
aas
cwtl
out
les
lds
mov
sarb
jo
bound
pop
adc
sub
jle
orb
and
in
add
mov
dec
outsl
sbb
or
sbb
xchg
mov
push
lods
movsl
fiadds
mov
and
xor
rclb
ftst
js
scas
incl
aad
or
outsb
addr16
in
push
jmp
loop
sbbb
in
pusha
loope
out
jae
mov
add
and
ret
cmp
push
aad
cmpsl
shlb
dec
add
lret
and
test
repnz
pop
std
je
fucomi
xchg
jns
pop
jl
and
cld
shl
lahf
xor
movsl
orb
mul
pop
in
dec
out
andb
pop
and
pushf
mov
mov
in
pop
fcoms
push
cmpsl
lahf
inc
sub
push
jecxz
mov
flds
fcomp
xchg
xchg
aad
mov
ret
inc
push
fwait
lahf
bound
dec
rcrb
pop
mov
jg
mov
add
std
push
inc
add
and
and
add
std
das
insb
aam
js
repnz
ror
xor
fdivl
lods
sub
negl
sbb
push
cmp
xor
mov
out
fdivrs
dec
rcll
or
pop
aam
dec
cmp
push
pop
xchg
inc
or
inc
inc
push
orb
fsts
aam
popa
mov
test
pop
stos
jo
mov
pop
or
xor
inc
enter
stos
and
decb
sbb
int3
fwait
jne
cmp
clc
dec
jae
add
pop
add
rorb
in
out
ja
xor
xlat
loop
inc
notb
adc
adc
mov
icebp
push
inc
fnstenv
adc
les
clc
pop
xor
cld
or
hlt
sub
xlat
jecxz
xchg
xchg
mov
lret
jp
jp
int
push
test
test
es
lods
scas
jno
or
clc
pop
mov
scas
push
loop
stos
mov
cmp
jne
push
iret
jnp
push
out
mov
enter
pop
jns
cmp
jbe
stc
or
lea
cs
jne
stos
mov
roll
std
testl
or
mov
mov
jae
int3
ds
mov
push
jbe
test
add
inc
sub
and
out
lods
sbb
inc
cmp
scas
loope
push
and
and
cmpsb
pop
aam
pop
and
loop
out
sbb
rorl
and
scas
mov
sbb
pop
fildl
push
add
pop
aad
mov
fadds
inc
lret
add
push
jp
adc
sarl
mov
shlb
aas
shlb
mov
lcall
push
gs
out
mov
dec
dec
mov
insb
inc
mov
daa
sub
pop
movd
shll
test
mov
js
nop
icebp
or
sub
mov
lods
xchg
aaa
cmp
jnp
out
sub
pop
lock
mov
and
andl
fs
repz
mov
rclb
in
and
xor
xchg
filds
xrelease
cli
dec
out
mov
gs
push
loopne
adc
mov
jns
std
scas
adc
lahf
test
jg
js
popf
subl
nop
lcall
cld
cltd
push
stos
mov
mov
cmp
cld
leave
xor
cltd
and
dec
test
jecxz
repz
and
outsl
mov
inc
iret
dec
insb
fmul
movsl
shrl
sti
mov
inc
fwait
cmpsl
test
adcl
mov
push
mov
xchg
scas
pop
jno
jmp
repnz
stos
sub
pop
or
repnz
jp
mov
test
sbbl
jb
mov
sbb
cmpsb
out
mov
mov
push
in
and
or
sbb
fcmovne
dec
xor
inc
and
js
pop
jne
xor
and
stos
cltd
mov
xor
mov
push
loopne
cmpsb
add
js
in
sub
xchg
pop
addr16
push
cmp
mov
sbb
jle
jl
add
negb
es
adc
mov
int
adc
adc
stos
and
in
jecxz
fists
mov
rcrb
push
fcmovnb
jns
adc
jo
jbe
jb
sbb
mov
jne
aaa
mov
push
cmpb
lods
ljmp
enter
insb
pop
push
and
mov
adc
pop
mov
xchg
mov
std
jecxz
cmp
sbb
imul
jl
dec
fmull
jno
add
shlb
jno
mov
adc
movsl
in
pop
fadds
fimull
xor
sarb
add
cmp
insl
in
fcomp
ja
shll
mov
stc
push
std
cmp
fld
lret
out
mov
jb
sti
lea
mov
mov
aam
cwtl
ret
adc
mov
fxch
push
pusha
add
cmovp
cmc
int3
dec
push
cs
pop
fldl
fldl
adcb
add
out
push
adc
inc
int
insl
and
test
ret
movsl
int
ljmp
aaa
jnp
orb
sbb
xor
fcomps
sbb
aam
ds
sub
mov
lea
arpl
dec
xchg
lret
std
in
jns
xchg
pop
sbb
push
lret
imul
add
mov
and
or
jnp
jmp
iret
fisttpl
jmp
je
aam
pop
stos
das
inc
andl
loope
pop
mov
popa
loope
or
mov
jbe
pop
gs
and
test
mov
add
cmp
popf
into
cwtl
outsl
jo
fwait
imul
mov
into
leave
add
cld
imul
mov
or
push
mov
insl
jnp
mov
inc
push
dec
sti
inc
push
cmp
xchg
aad
sbb
icebp
loop
data16
pop
fimull
or
adc
les
or
arpl
imul
movsl
orl
divb
mov
ret
addr16
xor
std
push
pop
mov
sub
fists
xor
xchg
fs
mov
or
add
add
adc
mov
faddl
xchg
sub
jo
mov
roll
inc
lea
jge
jle
sub
gs
push
aad
bsf
popa
nop
cmpsb
xlat
cwtl
jo
int3
cltd
imull
dec
or
subl
inc
push
push
out
stos
cmp
pop
mov
xchg
stc
or
xor
cs
jecxz
adc
jno
lret
and
lahf
lods
stos
push
roll
nop
pop
sub
mov
inc
adc
fs
add
test
jmp
popa
loop
mov
pop
adc
cmp
rclb
ret
gs
rcrb
pushf
ja
rcr
mov
test
arpl
cwtl
adc
fiadds
pusha
mov
add
shlb
loopne
out
cmpsb
pop
or
xchg
mov
outsb
ljmp
mov
cwtl
loop
mov
mov
mov
mov
ds
iret
sbb
pop
jno
pop
jmp
jb
push
es
jp
or
pop
test
push
mov
int3
rolb
aas
scas
mov
in
cmp
jbe
hlt
dec
loop
aad
mov
lds
scas
xor
stos
and
cli
sbb
leave
add
movsl
jo
xor
scas
sbb
adc
aad
jae
xor
and
pop
lds
xchg
aaa
jnp
sbb
out
rorl
mov
cmp
inc
jne
lock
rcll
insb
out
push
sbb
adcl
and
pushf
xchg
arpl
pop
dec
pmulhw
jmp
jp
push
mov
xor
test
sub
xchg
mov
mov
xchg
adc
jp
and
mov
hlt
pop
in
jnp
lcall
mov
mov
out
pop
adc
sbbl
mov
mov
mov
cmpsl
jnp
repnz
and
call
outsb
xchg
or
ret
push
fildll
adcb
rcl
pusha
cmp
add
mov
inc
sbb
and
add
outsl
sahf
aaa
and
lahf
divb
hlt
loop
jp
or
popf
xchg
in
sbb
test
and
mov
jns
addr16
dec
push
mov
js
adc
or
pop
ljmp
and
push
outsl
push
jp
mov
or
addr16
cld
loope
mov
out
push
mov
mov
xor
sub
mov
out
mov
push
push
push
pop
xchg
xor
xlat
cltd
xor
xor
test
loopne
stc
xor
adc
fs
pop
jp
adc
fildll
pop
and
xor
cmpsl
in
xchg
dec
mov
mov
add
mov
stc
mov
inc
jns
add
aaa
inc
imul
es
out
xlat
fdivrl
adc
roll
jnp
test
pop
mov
and
add
or
push
dec
arpl
std
pmaxub
stc
sub
add
adc
lahf
lds
bound
mov
ficomps
movsb
add
and
sbb
popf
or
xchg
iret
dec
mov
push
sbb
add
push
adc
cmpb
add
test
in
aaa
dec
and
jl
ret
push
inc
xor
loop
jle
outsb
jnp
or
inc
in
lcall
sbb
enter
inc
xchg
pusha
cmp
filds
push
inc
xor
icebp
mov
ja
in
jle
aaa
mov
adc
xor
adc
mov
scas
mov
enter
xor
sti
adc
add
jno
push
sub
xchg
sarb
out
and
pusha
add
leave
cmp
push
dec
xorl
push
mov
pop
inc
ret
loop
push
dec
jne
aam
lock
repnz
sbb
mov
movsb
mov
mov
push
and
outsb
mov
dec
cwtl
in
xchg
loopne
jne
mov
ss
xchg
adc
xchg
decb
adc
ja
pop
sbb
mov
mov
mov
stos
popf
sahf
imul
fstpt
imul
or
mov
or
pushf
sub
jl
xor
mov
push
out
icebp
ror
lahf
jp
sbb
int
in
aas
daa
jg
sub
sbb
test
add
pop
popf
xchg
dec
test
addr16
ds
or
jb
iret
xlat
shr
mov
sahf
add
xor
hlt
adc
add
push
jnp
shlb
jmp
jae
push
popa
ret
and
push
or
or
es
cmp
mov
cmc
xchg
or
xlat
iret
and
ficomps
add
jb
in
pop
jmp
leave
pop
loope
mov
add
mov
mov
mov
jg,pn
pop
and
sti
rcll
cmpsl
push
inc
or
inc
sarb
dec
xchg
sbb
push
dec
div
cmc
stos
dec
lret
lods
sub
test
or
cli
mov
push
jge
adcl
cwtl
mov
pop
in
aam
jae
xor
push
sub
inc
fwait
add
or
andl
pushf
push
jae
xchg
das
mov
cld
je
sub
data16
push
jl
cmpsb
sbb
jno
jp
xchg
jp,pt
mov
inc
and
push
cmp
push
mov
jne
mov
std
aam
mov
and
rcll
imul
mov
mov
in
mov
mov
xorb
fisubl
adc
addr16
mov
sub
cltd
in
hlt
inc
adc
push
and
jmp
inc
pop
lods
sbb
nop
jno
add
addr16
add
sbb
xor
mov
mov
adc
mov
inc
jnp
lods
clc
and
sbb
or
cmp
dec
xlat
mov
mov
xor
fwait
lret
inc
pusha
pusha
pop
dec
pop
fsubrs
mov
inc
iret
test
mov
push
or
mov
divb
dec
fwait
or
mov
add
cmp
les
mov
insl
push
sarl
xor
iret
in
xor
out
or
mov
je
adc
faddl
mov
loopne
aam
inc
mov
fistpll
lcall
or
leave
setg
repz
dec
and
pop
fidivrl
aam
dec
sbb
ret
leave
mov
sub
daa
data16
shr
cmc
mov
shl
sub
out
filds
ret
or
xchg
mov
repz
out
fstpt
jecxz
mulb
movd
int3
stos
lock
push
and
and
and
cmp
or
pop
sbb
mov
push
cli
inc
les
ljmp
icebp
adc
cwtl
or
mov
fisubs
jne
lods
xchg
and
adcb
push
jge
jle
sub
sbb
sbb
mov
loopne
fdivrl
mull
and
rclb
dec
cld
ss
pop
fistpl
in
fcmovnu
imul
iret
mov
adc
cmp
mov
pop
movsl
jnp
mov
inc
or
mov
aad
mov
xchg
pop
push
scas
shlb
movsl
pop
mov
leave
repnz
dec
jno
dec
sbb
sub
mov
mov
cli
inc
cmp
das
inc
dec
mov
jno
hlt
xchg
ja
jp
je
xchg
scas
lcall
jg
mov
test
push
shlb
ret
daa
mov
xor
cld
cmpsl
cli
or
pop
sub
in
lcall
jne
fsubs
push
cmp
lds
mov
inc
mov
mov
das
mov
and
sbb
jg
rcr
pop
adc
lods
fisttpl
out
test
cmp
cmp
bound
icebp
movsl
sbb
mov
mov
lret
out
pop
imul
inc
mov
loope
cmp
add
pop
fistpll
pop
sarb
pop
xchg
sbb
jp
lods
fdivr
mov
jp
adc
mov
in
loopne
iret
jmp
pop
lea
in
mov
cmp
pop
sub
call
mov
or
mov
sub
mov
test
jge
pop
imul
ss
sbb
xchg
rcll
mov
cmp
mov
mov
cmp
jno
jl
mov
push
pushf
lret
fstpl
add
hlt
test
out
fidivs
aaa
aas
mov
xor
std
push
adc
aam
sbb
mov
xor
cmpl
add
and
arpl
and
mov
scas
cmpsl
or
sbb
aas
add
or
push
jge
clc
inc
cmc
repz
and
cmp
outsl
push
enter
lock
scas
cmp
fdivs
pop
pop
lds
jbe
in
ficoms
mov
gs
lahf
sub
roll
xchg
addr16
add
add
dec
fisubrl
cmp
mov
in
insl
jns
dec
je
lret
insb
cmp
pushf
es
sub
mov
test
les
shrb
loop
lock
mov
jb
sbb
cmpl
add
arpl
mov
ret
inc
add
test
adc
sarl
insl
xchg
test
popa
shr
cli
lahf
ds
aad
jp
mov
push
out
sahf
mov
dec
sub
xor
mov
mov
ja
mov
cmpsb
insb
outsl
in
scas
mov
mov
out
shr
jecxz
sbb
inc
jl
sub
roll
ja
xchg
daa
out
imul
pushf
ss
adc
jns
sub
mov
dec
sbb
or
out
fimull
movsb
inc
shrb
orb
addr16
outsb
pop
fdivr
fidivl
lret
leave
inc
cmpsb
jmp
icebp
fnstenv
push
sub
dec
mov
cmp
xchg
pop
andl
hlt
push
popf
in
lcall
push
xchg
test
adc
enter
mov
jbe
cmpl
insb
imul
es
push
sub
xchg
push
pushl
mov
mov
fmull
lods
push
xlat
cmp
mov
ds
xchg
pop
stc
int
sub
mov
sbbb
out
out
jae
cltd
aas
sbb
sub
jne
mov
or
mov
iret
loope
arpl
sbb
inc
inc
xor
inc
test
or
mov
or
add
rolb
movsl
into
inc
sub
xor
iret
or
cmc
mov
and
out
lea
popa
and
mov
rcrb
call
rorb
test
xchg
stos
jb
sarb
mov
and
rorb
inc
std
cmc
push
leave
xchg
mov
sbb
push
adc
mov
sub
iret
xchg
data16
movsb
add
xor
lret
fwait
mov
insb
dec
xchg
lock
and
std
shll
xchg
mov
mov
inc
cmpsl
es
xchg
push
mov
in
inc
dec
jmp
cld
outsl
cmp
pop
cltd
jae
fbld
push
jno
sbb
sbb
jae
pusha
aas
daa
aam
sbb
sbb
xchg
pop
xor
fcomip
mov
std
test
or
jle
imul
mov
leave
shll
push
jnp
push
cltd
or
imul
fnop
bound
iret
into
cmpsl
jmp
jne
ja
rcl
sti
inc
jmp
dec
je
repz
inc
mov
xchg
int
ror
mov
jne
imul
pop
je
xchg
mov
mov
fwait
inc
into
fwait
cmpsl
xchg
sub
pop
out
dec
lcall
in
or
push
xchg
arpl
frstor
lods
frstor
imul
push
xlat
add
int3
xor
int3
jne
mov
loope
das
push
xchg
div
mov
clc
test
jb
fnsave
stc
aad
out
and
and
fsubl
cmp
mov
scas
testl
jg
movsl
xor
shr
jns
iret
loop
shlb
adc
jb
push
mov
xor
aaa
cmp
adc
mov
pop
lret
dec
lods
push
xchg
sbbb
enter
adc
mov
scas
mov
dec
mov
push
cli
add
add
pop
cs
icebp
mov
and
daa
dec
test
and
int3
imul
jbe
test
jg
insl
or
lds
in
lods
je
aas
push
ljmp
fs
fadd
push
add
in
or
lock
stc
pusha
scas
rorb
fmuls
std
push
shr
mov
les
pusha
mov
add
fcmovnb
mov
ret
mov
sbb
cmp
movb
jae
mov
cltd
ficomps
add
jns
cmp
inc
loope
aaa
or
cs
jns
sub
pop
outsb
nop
aad
sub
movsl
push
push
push
scas
stos
xor
mov
mov
inc
cmp
lds
rclb
sub
cmp
dec
cld
sub
pop
dec
loopne
xchg
nop
or
ret
dec
ss
and
mov
cmp
pop
mov
sbb
mov
xor
pop
pushf
jno
pop
int3
mov
mov
leave
inc
fwait
sub
mov
push
addl
jl
push
jecxz
add
mov
cmp
mov
sbb
insl
xor
je
test
jle
iret
arpl
xchg
sub
pushf
imul
jge
push
mov
dec
xchg
nop
pop
jno
xchg
dec
cld
push
nop
aam
and
mov
lahf
or
pusha
clc
add
enter
jge
mov
mov
and
rcll
test
push
ret
xlat
cltd
pusha
movlps
mov
rorb
dec
mulb
xchg
rcl
pop
xchg
mov
lahf
lock
lret
xchg
inc
mov
dec
movsb
adc
lcall
dec
xchg
test
aad
jne
cmpl
dec
iret
dec
nop
insb
sub
addr16
xor
rcll
mov
test
imul
int
test
jge
call
fdivs
xor
mov
xchg
sbb
adc
inc
cmp
pop
add
scas
std
imul
mov
mov
jb
add
cwtl
shl
dec
fs
or
fwait
or
mov
cmp
ret
iret
xchg
xor
mov
adc
xchg
xchg
out
loope
das
lods
inc
lock
push
das
test
sbb
xchg
pop
cwtl
xchg
out
ds
movsb
lds
test
loopne
inc
xor
iret
mov
out
or
mov
notb
or
lock
mov
xchg
hlt
inc
add
mov
add
mov
jo
les
or
lods
adcl
ffreep
cmc
ds
xlat
shrb
pop
add
lock
scas
lret
cmpsl
push
fbstp
jno
lahf
sub
fsubrs
test
call
adc
sub
movsl
loopne
xchg
es
cmp
jne
repz
pop
sarb
enter
lods
cmpl
sbb
iret
in
es
add
sbb
cwtl
enter
cmp
push
xchg
jp
dec
lds
lock
lret
inc
lods
jmp
jnp
dec
sub
xchg
ss
fdivs
mov
cld
xchg
pop
outsb
into
fnstenv
test
rcll
mov
pop
dec
xor
sub
pop
fs
addr16
addr16
push
dec
jne
mov
cmp
sub
dec
mov
mov
jle
enter
mov
push
pop
enter
pop
popf
add
aaa
fdivrp
data16
push
iret
push
inc
lock
cs
jmp
rclb
fcompl
mov
imul
cld
aas
js
and
scas
sbb
js
mov
adc
mov
pop
mov
jl
add
jl
mov
inc
scas
es
mov
repz
push
movsl
xchg
mov
arpl
data16
popa
inc
lock
test
test
cmp
inc
mov
push
or
adc
jno
sbb
mov
leave
popf
add
cmc
mov
or
fwait
inc
add
lock
jecxz
gs
jp
or
in
andl
jns
mov
popf
push
inc
dec
and
xchg
aam
add
add
sub
mov
cmp
jmp
jp
xchg
in
cltd
lret
mov
mov
push
push
push
lock
insb
mov
xchg
push
fmuls
add
dec
mov
lock
lret
mov
sub
std
int
jbe
inc
cmp
jg
push
xlat
out
push
into
insb
xchg
repnz
decl
int
aaa
in
mov
mov
push
movsl
push
fidivrl
mov
mov
xor
std
mov
inc
mov
inc
sub
adc
add
insl
shl
push
sub
ljmp
mov
test
repnz
dec
shrb
fiaddl
fcomps
fdivl
popf
pop
leave
out
fadds
mov
fcmovnb
stos
mov
fbld
aad
sub
and
mov
pop
pop
adc
fldenv
sbb
inc
adc
sub
pushf
stos
shr
ja
dec
mov
pusha
aas
sub
fstpt
scas
mov
aam
les
pop
or
sub
stc
insb
test
dec
dec
mov
mov
and
dec
adc
pop
in
fprem1
pop
insb
xchg
lea
mov
dec
add
lds
jb
mul
aam
dec
xchg
das
pop
movsl
dec
push
add
add
and
adc
bound
orl
test
mov
xchg
jge
xchg
sahf
sbb
pop
pop
inc
adc
pop
mov
clc
insl
mov
dec
sub
lock
jbe
int3
jbe
das
push
les
mov
btcl
xchg
pop
lcall
cmp
js
push
mov
call
fmuls
je
dec
mov
into
cmp
inc
xor
mov
fwait
shll
pusha
xchg
int3
sub
push
das
cmp
mov
cmpsl
and
and
loope
xchg
sub
add
mov
adc
jl
sti
mov
pop
push
test
mov
lahf
aas
shl
in
ret
xchg
jg
jge
sub
cmpsb
cltd
mov
ljmp
xchg
popa
cwtl
pop
popf
rclb
push
jns
xchg
mov
sbb
gs
in
addr16
xchg
jb
pop
adc
jg
fsubrl
rorl
push
and
aaa
das
jle
aam
aaa
add
xchg
push
xor
jne
sub
inc
ja
sub
andb
lcall
fstpl
jg
ljmp
lods
les
and
out
lock
xchg
cltd
xor
jl
add
jg
sub
and
dec
sbb
sbb
jns
jl
dec
or
pop
loop
out
addr16
cmpsl
sbb
xor
jl
cmp
push
ss
outsb
in
jecxz
pop
ja
adc
push
nop
rclb
push
in
pop
lea
cld
rcrb
setno
lds
pop
jno
xchg
mov
add
dec
lea
jns
push
int3
add
loopne
xor
data16
push
jle
and
ret
inc
jae
enter
cld
jo
cmp
lds
aam
and
xchg
popa
repnz
lahf
ss
mov
mov
pop
and
call
jge
jo
jmp
daa
jno
inc
inc
cmp
int3
adc
push
push
cmpsb
mov
aad
repnz
adc
int
jl
cmp
or
outsb
sti
jl
and
sbb
imul
or
loopne
aaa
lods
int
dec
push
dec
xchg
test
inc
leave
jno
negb
scas
jl
xchg
testb
jge
lods
inc
rolb
mov
mov
es
ljmp
cmp
int3
cltd
mov
cmp
mov
sub
ret
fadd
jbe
movsl
sti
mov
in
mov
loop
xchg
fwait
push
adc
mov
mov
lods
push
sub
inc
push
and
sbbb
adc
mov
or
ljmp
cld
jns
fsub
outsb
inc
push
rcll
mov
out
insb
aas
jb
sub
cmpsb
or
xchg
mov
repz
mov
inc
jb
int
add
jge
adc
xchg
test
xor
and
std
aad
pop
push
pop
rcrb
mov
iret
xor
inc
pop
movaps
fsubrl
fcomip
mov
add
and
adc
rcrl
ss
ret
rolb
cmp
lret
jl
aaa
loope
jno
mov
hlt
push
inc
adc
push
cld
inc
and
push
pop
lods
rcll
dec
xchg
rol
das
clc
popf
inc
push
and
and
outsb
push
fidivrs
shlb
cmp
mov
pop
xchg
jne
cmpsb
and
cmc
loope
orl
or
cmp
xor
in
inc
es
inc
add
xchg
mov
push
lock
fistpl
mov
dec
repnz
mov
lods
adc
jle
cmpsb
inc
leave
push
mov
ficompl
cmc
fs
mov
mov
and
mov
cltd
xchg
add
scas
and
sub
out
cmp
lods
stos
or
mov
dec
stos
dec
and
cmp
lret
or
cmp
js
sbb
cld
mov
add
cld
pop
dec
pop
in
push
inc
sti
push
enter
xlat
sarl
mov
or
inc
out
xchg
xor
or
jbe
cltd
push
pop
add
fcomps
mov
pop
sub
mov
fidivl
mov
shlb
ss
test
push
mov
fsubrs
jl
frstor
cs
es
icebp
cmp
pop
dec
clc
push
fcomi
or
lea
sahf
xor
sub
dec
mov
in
cs
xor
inc
jecxz
pop
mov
out
loope
push
lcall
cld
roll
jge
in
pop
movsb
test
in
mov
mov
out
imul
add
aas
dec
mov
movsb
lods
fwait
setns
pop
les
or
inc
cmpsb
pop
icebp
ret
jmp
inc
jno
jle
push
sub
cmc
daa
jg
aam
inc
sbb
pop
pop
xchg
icebp
arpl
fildll
mov
icebp
mov
cmpsl
jle
mov
or
inc
lret
lds
gs
das
push
icebp
cmp
enter
lret
push
adc
cmpsb
inc
xor
fidivl
xor
int
cmp
push
daa
pop
xchg
lods
mov
push
and
dec
fstpl
shrb
push
fimuls
xor
js
mov
rol
xchg
icebp
pop
xchg
adc
into
inc
mov
cmp
fisubrs
nop
adc
lahf
test
sahf
mov
out
mov
in
dec
sub
imul
scas
push
push
cmp
outsb
ficoms
lods
cmc
loopne
adc
adc
cmp
out
data16
sbb
outsl
outsl
inc
mov
js
test
loope
movsl
aas
stos
test
lcall
mov
roll
add
and
icebp
adc
mov
je
push
pushf
sbb
jnp
mov
xchg
sub
cmp
repnz
mov
xchg
roll
repnz
insb
daa
xchg
mov
arpl
addr16
lahf
pop
lock
and
mov
add
lock
lret
ficoms
shl
int
mov
fs
mov
sub
outsl
movsl
jne
js
jnp
test
push
push
outsl
sub
add
jl
cltd
repz
pop
cmp
mov
icebp
in
fcoml
jb
push
les
mov
jle
fisubrs
out
jno
mov
adc
enter
shrl
cld
and
jecxz
xor
inc
pop
mov
out
imul
pop
dec
sub
add
cmpsl
jnp
stos
jns
add
setp
imul
fwait
mov
fmulp
repnz
fstl
sahf
stos
cs
and
ja
sbb
lcall
push
mov
lret
sub
mov
push
scas
bound
cli
xchg
xor
mov
je
rolb
jno
inc
and
in
mov
fdiv
jl
int
hlt
pop
je
mov
bound
sahf
dec
scas
pop
push
es
in
xchg
mov
cmp
and
add
push
aam
movsb
lods
test
pushf
sarl
adc
outsb
stos
dec
lds
cld
icebp
xchg
xchg
pop
nop
lock
iret
repnz
andl
sti
mov
cmp
int
push
dec
inc
clc
icebp
movsl
pop
push
inc
mov
notb
pop
nop
addr16
inc
dec
stos
aaa
sub
jns
loop
cmp
mov
aad
lock
orl
jae
add
or
xchg
lods
out
stc
test
pop
inc
stc
jp
arpl
fwait
adc
stos
add
add
int3
pop
sbb
and
stos
and
jno
adcb
gs
jbe
xchg
data16
out
sub
pop
mov
push
out
outsb
add
or
xor
mov
pop
jo
arpl
xchg
repnz
xor
jp
lahf
fidivl
or
jmp
sbb
dec
jecxz
pop
jo
pop
js
or
sbb
roll
push
xchg
cli
or
adc
hlt
loope
mov
jo
lods
ss
clc
or
cli
pop
mov
mov
jb
xor
mov
enter
pop
aad
push
fists
pop
cmpsb
lret
adc
subl
iret
or
pop
gs
dec
lahf
and
xchg
lds
lahf
adc
hlt
cmp
push
pop
mov
enter
xchg
pop
mov
jge
sahf
in
mov
cmp
xlat
stc
mov
mov
jmp
nop
dec
test
imul
sub
add
roll
sti
push
push
lcall
xchg
mov
out
lret
lret
stos
sbb
aas
add
imul
xchg
inc
jno
movsb
mov
scas
outsb
sub
rolb
sub
mov
inc
xchg
int
mov
leave
addr16
inc
mov
aas
lea
jbe
lret
dec
addl
inc
lea
mov
mov
dec
int
mov
inc
fucomp
cmp
adc
and
fsubl
das
xchg
inc
sub
cmc
insb
movsl
push
sub
mov
je
inc
mov
pop
mov
jmp
in
cwtl
sbb
rcrl
je
ja
add
nop
dec
push
and
inc
ss
test
lods
sub
xorl
movb
xchg
xor
lret
icebp
pop
aad
push
fldcw
or
jbe
loope
shrl
mov
pusha
shlb
mov
inc
push
out
gs
aaa
push
ss
stc
mov
sbb
hlt
pop
add
js
cmp
adc
lock
push
dec
pop
xchg
sbb
subl
arpl
insb
jo
or
stos
inc
xor
lret
xchg
andl
pop
push
dec
pop
das
cwtl
inc
lea
jmp
mov
push
ds
aam
xor
cmp
sbb
movsb
xor
pop
cltd
cwtl
xchg
adc
es
inc
xchg
jle
fwait
adc
je
push
cmp
icebp
pop
and
push
mov
lds
xchg
cli
pop
int3
inc
test
scas
add
ret
dec
ljmp
cmp
dec
dec
push
out
ret
mov
sbb
cmpl
jns
mov
ret
fdivrl
cs
sub
sarb
jne
xor
inc
inc
inc
inc
xchg
dec
mov
movsl
stc
in
ds
aaa
sub
add
cmp
mov
xchg
testl
lods
inc
fisttpll
mov
push
add
sbb
stos
jnp
dec
xchg
xchg
jle
dec
stc
xchg
xor
loop
mov
in
push
insl
push
xor
jnp
mov
out
lret
test
test
negl
or
negb
mov
test
leave
in
repnz
gs
fxch
sti
push
ret
add
adc
mov
jo
jge
push
in
icebp
add
stos
lock
call
adc
xchg
push
sbbl
stos
stos
xchg
outsl
into
mov
push
bound
and
add
or
cmp
push
xor
std
add
jg
jecxz
idivl
mov
mov
push
pop
nop
dec
jmp
push
mov
ret
sbb
cmp
mov
mov
data16
loope
lret
aas
push
pusha
xor
dec
push
mov
push
mov
in
in
push
adc
ljmp
and
and
gs
enter
add
xor
jmp
push
mov
int3
enter
into
sti
mov
pop
jmp
aad
aam
or
ja
sub
ljmp
inc
pop
cmp
push
xchg
sub
mov
or
stc
mov
lret
test
push
xchg
dec
mov
xlat
pop
dec
shll
adc
xor
nop
sbbl
out
inc
lret
into
pop
aam
hlt
inc
rolb
sbb
imulb
sbb
sbb
pop
cmp
lods
sti
xchg
cmp
mov
xchg
je
dec
sbb
dec
push
mov
stc
cmp
push
pop
push
sub
push
jno
mov
nop
mov
test
jb
mov
aas
js
push
inc
sub
js
repz
in
dec
mov
xor
mov
adc
call
frstor
iret
lret
pusha
sub
outsb
mov
ds
mov
dec
nop
into
push
xchg
inc
jg
add
jae
mov
das
in
xor
pushf
push
loope
dec
test
outsl
sub
mov
xchg
test
fsubrs
cwtl
mov
inc
jbe
xchg
insl
push
mov
testl
shlb
sarl
xor
les
imul
in
mov
lods
push
pop
ret
fcomps
dec
std
add
xor
jns
subb
mov
push
xorb
clc
sbb
rcl
or
testb
icebp
push
adc
mov
push
mov
adc
test
xorb
xor
or
call
std
dec
in
push
dec
add
in
aaa
and
sub
xchg
push
inc
stos
jnp
push
shll
push
mov
mov
push
jmp
xchg
loopne
and
xchg
outsl
push
addr16
or
adcb
xor
das
jecxz
cmpsl
jle
dec
in
cs
scas
leave
int
call
cld
cld
mov
sahf
mov
lahf
mov
mov
push
sbb
sahf
popa
jecxz
loope
jle
enter
jno
adc
repnz
cmp
dec
mov
jmp
adc
jle
insl
pop
sbb
clc
out
leave
outsl
lock
inc
dec
push
roll
stc
jmp
or
dec
jo
inc
push
mov
mov
pop
xchg
scas
sbb
nop
xlat
in
xlat
push
ja
fbstp
dec
movsl
inc
lock
roll
ds
lret
pmuludq
push
mov
xor
add
cmpsb
std
lock
push
dec
push
aad
je
loop
rcll
sbb
push
aam
add
fisubs
out
out
mov
hlt
inc
xor
dec
mov
int3
dec
cltd
leave
in
int
add
scas
or
into
xor
sub
clc
mov
insl
lret
ret
pop
dec
test
jg
out
mov
xor
mov
xchg
bnd
push
jge
mov
shrl
inc
lds
inc
es
fbld
cmp
sub
pop
fs
out
pop
arpl
xor
call
xchg
add
xchg
push
roll
xor
int
cmp
dec
into
shlb
adc
or
sbb
pop
daa
mov
push
int
mov
mov
jl
xchg
ret
mov
xor
xor
lahf
lds
mov
or
mov
dec
std
xchg
jbe
rcll
lock
and
jnp
add
mov
sbb
sub
in
sbb
sbb
mov
int
scas
js
mov
ljmp
mov
je
jge
enter
xor
ret
ss
add
mov
insl
aam
lock
scas
xor
and
insb
cmp
inc
add
mov
movsb
inc
in
or
sahf
dec
aaa
inc
mov
pop
int3
and
cmpsb
cmp
mov
movd
arpl
mov
mov
pop
cmovle
cwtl
divps
and
push
orl
xchg
ret
push
stos
jle
int3
adc
rorl
shlb
movsb
sub
xlat
mov
sub
outsl
test
jmp
test
je
xchg
mov
fwait
loopne
mov
sub
pop
lds
push
inc
mov
jl
dec
fidivrs
push
sar
movsb
and
loopne
imul
jle
sub
shl
xchg
mov
push
nop
in
rcll
ss
aas
dec
mov
jge
mov
jge
ss
jns
xchg
js
xchg
frstor
cmp
call
lahf
adc
fbstp
and
adc
popa
pop
jns
roll
add
pop
pop
or
test
out
adc
jns
test
mov
mov
and
sbb
sti
stos
fnsave
mov
popa
outsl
in
out
into
adc
psrld
mov
mov
je
push
mov
dec
test
xor
out
in
loop
sbb
and
jbe
stc
add
fnsave
xorb
popa
mov
pop
test
cmc
test
es
mov
cltd
in
mov
cmp
push
fs
mov
push
push
xor
shrb
loopne
add
bound
and
ljmp
jle
dec
lea
add
in
mov
add
popl
mov
push
daa
mov
rcll
stc
add
shl
xor
dec
sti
dec
test
mov
mov
sub
ss
and
andl
inc
fisubrl
filds
push
ja
fucomp
jl
repz
test
ljmp
ds
and
dec
pop
pusha
jb
sbb
and
inc
mov
xchg
sbb
addr16
xor
mov
aaa
pop
fimuls
mov
mov
mov
sbb
jecxz
cmp
int
dec
pop
xor
call
push
imul
gs
pop
mov
aas
cmp
subl
xor
mov
push
leave
lahf
mov
pop
dec
popf
into
lcall
dec
pop
lret
dec
mov
mov
nop
inc
in
or
and
jne
rcll
inc
jg
outsb
imul
test
or
xor
mov
movsb
cld
das
cmp
dec
mov
sbb
jle
iret
push
inc
mov
das
bound
pop
shlb
icebp
cmpb
ret
push
jmp
xchg
lea
cs
sahf
outsb
testl
jno
jg
push
loopne
mov
call
push
andl
xor
leave
mov
mov
and
rcl
test
jle
mov
out
xor
and
dec
mov
fisttpll
or
into
sub
push
jb
imul
dec
lret
mov
loop
and
mov
xchg
fwait
cmc
add
sahf
jne
xor
push
pop
cmp
or
scas
pop
mov
xor
popa
pop
dec
adc
stc
push
rcrl
out
leave
data16
mov
cmpsb
addl
mov
notb
addr16
push
xchg
bound
cmpsl
les
lahf
jl
test
jne
lods
shll
cmc
shl
mov
jecxz
sti
mov
inc
ficompl
lods
xchg
call
sbb
push
mov
push
and
fcompl
sbb
mov
sub
lods
inc
inc
push
dec
in
insb
jl
movsl
cmp
mov
sbb
es
lahf
jmp
je
and
fs
push
daa
movsb
addr16
mov
bound
adc
in
jmp
fisubl
pop
ret
cs
repnz
out
cmp
movsl
stc
sbb
adc
sbb
xchg
and
add
test
into
jecxz
push
scas
xlat
mov
aam
jecxz
sub
pusha
sub
pop
or
add
cs
xchg
inc
lahf
out
mov
push
cwtl
add
inc
adc
ja
jo
or
mov
jg
xor
jo
push
aaa
and
loope
sbb
mov
lret
mov
cmp
and
addb
mov
sub
lcall
aad
fs
inc
test
push
mov
stos
sarb
mov
jbe
bnd
dec
push
lock
dec
push
lret
dec
or
jbe
loopne
add
test
int
testl
out
in
sbb
movsl
xchg
frstor
pop
jne
pushf
push
jle
mov
pop
lcall
or
xor
fistpl
les
ljmp
xchg
mov
outsl
mov
aas
inc
imulb
loopne
inc
loopne
lods
cmp
mov
dec
rcrb
dec
mov
bound
or
std
fildl
adc
xchg
enter
pop
je
loop
ljmp
inc
cli
or
cmc
push
cltd
ret
enter
repnz
out
dec
jl
sbb
iret
add
jno
mov
orb
jmp
lods
cmpb
aam
sub
inc
lock
fadds
loope
cmp
mov
ljmp
add
iret
xchg
aam
xor
xchg
jae
jb
aad
dec
xchg
or
insb
enter
mov
cmp
xorl
pop
mov
push
fs
repz
mov
pop
idivl
push
xor
fists
clc
mov
cmp
and
push
lahf
repz
das
sub
lods
add
icebp
xorb
jg
push
or
in
cmp
jg
fbld
es
in
cmp
stos
outsb
mov
push
jp
inc
lds
inc
add
std
fldt
push
push
xchg
mov
rorl
fwait
outsb
ljmp
stos
mov
jmp
mov
jmp
subb
addr16
cmp
aad
dec
push
dec
test
cli
inc
mov
mov
lds
mov
mov
sub
cld
int
adc
jl
inc
jb
inc
and
or
cmpsb
aad
in
vmread
pushf
js
lea
sarl
cld
push
or
pop
movsb
or
iret
fwait
jmp
scas
sub
pop
sub
sub
sti
cwtl
sub
imul
jmp
mov
outsb
loopne
int
push
dec
fwait
lea
xchg
mov
jae
movl
inc
xchg
mov
push
mov
pushf
lods
ficompl
sbb
int
or
je
in
inc
pop
enter
int3
pop
orl
stos
stc
jnp
xchg
dec
xor
pop
push
stc
addr16
loopne
mov
call
dec
lods
and
lods
cmp
cmp
fisubrs
icebp
adc
jp
sub
pop
mov
mov
ljmp
jno
pop
int
cmp
ss
dec
mov
xor
mov
and
pushf
xchg
bound
incb
inc
sti
test
sub
push
cmpsl
jecxz
aad
rcll
mov
inc
add
dec
and
pushl
adcb
xchg
sub
jle
addr16
ret
cmc
pop
cmp
mov
cmc
lcall
push
imul
sub
outsl
test
push
cmp
cli
scas
push
pop
in
lods
adc
decb
pop
jo
mov
test
cwtl
scas
mov
cli
push
lcall
pop
jne
lds
rol
push
mov
jl
xor
cltd
mov
je
in
movsb
dec
or
and
push
outsb
pushf
dec
lret
ret
inc
mov
outsl
jne
daa
mov
lcall
je
aas
and
movsl
mov
cmpsl
rcrb
push
fstl
mov
stc
sbb
sub
clc
dec
pop
stc
jl,pt
add
dec
sbb
inc
out
lret
mov
add
rcrl
adc
fnstenv
jbe
pusha
pop
push
testb
sbb
out
sbb
lea
jp
cmp
push
movsl
add
lcall
outsl
xor
sub
scas
jle
imul
pushf
out
jg
inc
jno
stos
pcmpeqd
jbe
inc
rol
jo
push
mov
mov
lcall
pop
xchg
dec
arpl
decl
xor
mov
cli
mov
shrb
fs
push
lds
mov
jge
jecxz
popf
out
subb
mov
shrb
dec
sarl
push
in
jmp
enter
lods
pusha
inc
add
scas
sahf
or
or
fidivl
or
sti
shr
mov
jns
inc
mov
mov
add
xor
add
jae
aas
cmc
in
jne
dec
popf
sub
mov
dec
mov
enter
dec
fldenv
clc
jb
inc
das
loopne
sub
mov
pushf
lret
insl
cmpsb
repnz
in
sub
cwtl
jno
rep
xor
out
push
fisttpl
adc
xchg
into
mov
or
lods
xor
xchg
inc
jo
es
mov
addb
cli
shl
addr16
sub
and
mov
call
fcomps
mov
ljmp
adc
mov
dec
enter
scas
add
sti
fdivr
and
sysret
in
or
mov
mov
sarb
call
sahf
icebp
mov
inc
push
inc
pusha
cmp
jae
xlat
gs
hlt
imul
cli
shll
and
cld
pop
psllq
aam
mov
or
mov
enter
outsl
and
cmp
mov
inc
lret
arpl
lret
add
bound
xor
imul
pop
leave
sub
nop
add
lahf
leave
sbbl
mov
pop
rcrl
sub
push
fdivr
mov
mov
cltd
mov
push
inc
ja
pop
xor
les
notl
aam
in
push
mov
cmp
mov
mov
add
mov
jle
faddl
pop
push
mov
fistl
mov
aaa
addr16
sbbb
inc
add
iret
stc
aad
add
cs
fmuls
dec
add
inc
mov
adc
das
jbe
inc
daa
imull
mov
dec
leave
mov
sub
call
fwait
cmpsl
push
and
test
xchg
cld
add
lret
dec
mov
imul
jg
lock
das
shrl
xchg
add
pop
ljmp
fcmovne
add
mov
jg
fs
add
xor
div
fmuls
shrl
inc
ss
mov
mov
add
arpl
inc
data16
pusha
and
enter
mov
sbb
clc
repnz
inc
out
mov
jo
loopne
sub
mov
stos
inc
xchg
xor
cmpsb
movsb
dec
xlat
xchg
push
dec
cmp
jne
xchg
rolb
jmp
mov
stc
and
fs
inc
inc
lods
lret
dec
outsl
mov
xor
mov
popa
arpl
outsb
sub
leave
add
clc
push
jecxz
in
push
pushf
rorl
decb
sub
insb
jmp
mov
popf
icebp
mov
fidivs
sbb
enter
lock
lods
inc
sarl
push
pop
inc
jae
sub
lcall
ss
movsb
adc
les
shlb
in
fs
pop
pop
je
addr16
push
pop
out
enter
aaa
sbb
sbb
dec
adcl
pusha
dec
xor
aam
cltd
jecxz
mov
ja
popf
pop
sbb
jge
xchg
jbe
mov
gs
fistl
dec
and
fstpl
cmp
insl
fs
leave
leave
sahf
pop
dec
cmp
jg
mov
bound
mov
sbb
or
cmpb
iret
mov
or
loop
and
adc
add
jo
inc
lret
push
out
add
push
scas
mov
jae
pop
arpl
popa
adc
arpl
jns
fstl
out
jp
mov
pop
sbb
or
and
test
mov
sahf
jp
lock
jmp
sub
insl
mov
ret
enter
popf
out
mov
fwait
jnp
jge
or
mov
pop
rcrl
and
adc
adc
ret
je
ljmp
loope
aaa
std
pop
imul
cli
pop
add
das
xor
subl
fcompl
jg
shll
repnz
xchg
popa
out
test
push
xor
loopne
or
xor
ss
cs
lretw
sbb
add
pop
mov
lock
or
xchg
add
sub
inc
aam
xchg
mov
movsb
add
xchg
cmpsl
ret
mov
ret
sbb
scas
std
push
add
scas
sub
fdivrp
inc
xchg
stc
mov
mov
pop
lahf
add
inc
jmp
dec
gs
adc
shlb
call
cwtl
sbb
push
xchg
xchg
sbb
arpl
adc
outsb
pop
rcrl
into
and
jl
sub
push
daa
jbe
jecxz
sbb
test
sub
sbb
jle
jge
mov
xor
fimuls
out
push
mov
mov
cmp
lods
push
aam
sbb
lock
test
xor
and
inc
push
dec
rcrl
inc
addl
enter
jbe
mov
aam
imul
sub
enter
and
push
pop
add
mov
lods
int3
dec
cmp
cld
push
imul
shll
les
or
lds
xor
mov
loop
dec
pop
or
pop
cmpsl
cmp
or
mov
pop
shrb
mov
push
test
mov
add
push
xchg
inc
xchg
cltd
or
sub
xor
movsb
and
or
pop
pop
or
dec
add
and
add
loop
inc
push
fidivrs
inc
inc
subl
dec
pop
js
cmp
mov
stc
mov
movsl
push
mov
pop
xor
sub
test
sbb
inc
cmp
push
repz
lcall
push
push
mov
scas
mov
jns
ret
das
insb
bound
or
js
and
stos
fwait
in
mov
lods
pusha
xchg
cmp
dec
mov
clc
sub
imulb
pop
mov
push
adc
mov
lea
cmp
fcoms
adc
out
data16
lahf
xchg
cmp
repnz
pop
ds
std
inc
fdivrl
data16
mov
in
int
fwait
sbb
ja
iret
pop
leave
inc
mov
xchg
and
lret
dec
xor
jecxz
jns
aaa
mov
xor
jo
stos
cmp
ret
fldcw
sub
lahf
dec
je
aaa
rolb
or
dec
fwait
adc
cld
add
stos
push
iret
sbb
push
or
push
lret
shlb
cmpsl
pop
pop
inc
hlt
push
jle
push
insb
add
inc
jp
daa
ja
fwait
cld
or
inc
ja
xchg
push
test
das
jo
pop
bound
imul
repnz
test
int
push
sbb
mov
cmc
cmc
mov
push
in
pushf
shll
arpl
jecxz
xchg
dec
cltd
aam
sub
push
sar
std
xor
imul
test
scas
mov
orb
adc
sbb
subb
ds
pusha
test
push
imul
or
in
mov
popa
add
aas
jmp
pusha
test
loopne
xor
sbb
lds
cmp
or
call
sbb
lock
fisubrl
stos
in
out
mov
out
inc
xor
mov
dec
and
and
nop
cltd
push
popa
cli
icebp
pushf
adc
or
fstl
pop
aad
cmp
lods
xlat
or
js
add
sbb
hlt
cmp
decb
cmpsl
mov
les
jp
divb
xchg
movsl
fidivl
dec
fildl
add
jle
jmp
mov
lret
mov
lret
push
stos
inc
push
mov
cmpb
aaa
iret
or
adc
sub
cmp
mov
sub
sbb
test
inc
xchg
aaa
or
repnz
jle
inc
and
cmpsb
pop
push
add
mov
and
push
push
mov
repnz
loop
nop
add
mov
mov
mov
or
cmpsl
push
fwait
leave
loop
mov
inc
push
xlat
pop
ret
ret
or
in
push
out
ss
lea
shlb
iret
clc
cmp
jp
jp
pop
neg
outsb
arpl
push
xlat
insl
rcrb
out
cmpsl
push
cmp
ja
push
hlt
dec
jno
pop
or
incb
pop
pop
push
pop
in
ret
dec
dec
xchg
cs
lcall
sar
outsb
push
push
pusha
je
pop
cmpsl
pop
scas
shlb
lret
mov
std
add
inc
add
inc
out
xchg
pop
push
addb
aad
mov
lods
test
cltd
hlt
outsb
mov
pop
mov
vunpckhps
dec
stos
je
push
xor
xchg
dec
es
mov
data16
adc
push
decb
sbbl
push
mov
test
push
out
pop
push
add
fnstcw
xchg
or
or
lock
popa
js
out
push
test
iret
mov
jns
mov
loopne
js
push
push
loop
mov
sti
fnstcw
jb
jno
lds
dec
mov
lahf
arpl
sbb
xor
mov
sub
mov
mov
enter
xchg
jb
fs
popf
fidivrl
call
jg
mull
psubd
rorb
jp
xchg
mov
sti
inc
test
fnstcw
xor
xchg
jb
sub
pop
or
loop
push
mov
fldln2
outsb
dec
push
out
ret
imul
imul
mov
mov
pop
mov
imul
mov
addr16
out
daa
enter
cmpsl
fidivs
xchg
mov
adc
cmpsl
xchg
push
cmp
push
push
sub
add
xchg
add
push
fsts
jecxz
pop
mov
loop
test
ja
push
adc
insl
insb
xchg
leave
push
aam
int3
add
push
daa
adc
aam
jae
jne
add
sub
popf
ror
aam
or
ljmp
rcll
add
push
cs
pop
inc
andb
dec
popa
stos
ret
ss
jge
lret
loope
push
inc
sub
inc
mov
jo
hlt
insl
pop
fdivp
fisttpll
iret
enter
loope
adc
outsl
aad
or
add
jnp
mov
cmp
and
jge
inc
add
movsb
xchg
arpl
push
xchg
jmp
out
cmp
lock
ror
into
addr16
xor
mov
and
icebp
test
pop
inc
icebp
mov
push
jl
ret
xchg
bound
mov
push
out
dec
loope
aad
lods
es
and
dec
or
repnz
inc
addr16
out
pop
push
xchg
mov
mov
outsl
cmp
test
push
mov
adc
xor
aas
dec
add
pop
cwtl
mov
mov
leave
jnp
pop
xchg
mov
addr16
movsl
jbe
mov
sbb
xchg
mov
xor
das
push
ret
ja
adc
xchg
dec
mov
push
dec
scas
cwtl
dec
mov
jle
movsb
aad
int3
push
sbb
mov
pop
xchg
dec
dec
pop
sbb
xor
clc
and
mov
int3
adc
xorl
cwtl
movsl
mov
fstpl
sar
xlat
movsb
jecxz
mov
test
cli
xchg
cli
sti
adc
inc
lret
popa
mov
into
aad
mov
ss
sub
inc
stc
jmp
jg
cmp
hlt
sub
pop
std
cld
out
sbb
lock
data16
inc
dec
sbb
mov
lock
cli
gs
jp
sub
roll
lods
mov
jne
bswap
xchg
fsts
in
cltd
mov
xor
stos
mov
push
push
mov
in
jnp
cmp
pop
jbe
dec
in
cwtl
imul
and
lods
mov
mov
xchg
fsubs
push
mov
xor
mov
std
mov
outsb
push
inc
outsb
notl
jne
cmp
adc
xor
cmp
add
ja
push
sar
popf
pop
dec
loopne
dec
or
inc
adc
cmc
out
cmp
rcrl
and
shll
adc
and
push
mov
out
pop
fisttpl
or
fwait
jg
insl
add
cli
test
scas
mov
data16
rclb
pop
sbbl
je
pop
cmp
xchg
pop
jne
jbe
lods
ss
add
rorb
daa
sub
mov
inc
jl
rolb
sub
cli
adc
shld
dec
jbe
stos
lds
jns
clc
add
jnp
repnz
dec
arpl
lret
cmp
imul
dec
popf
xchg
aad
xchg
popa
add
cmc
decb
fwait
mov
fdivl
roll
divl
nop
pop
adc
fs
mov
ljmp
mov
and
aas
stos
icebp
pop
arpl
cmp
fsubrl
cmp
test
jp
jnp
sahf
mov
ljmp
jge
or
xchg
add
sub
jp
sti
mov
and
add
sub
adc
insb
ret
loop
cld
jnp
aad
je
inc
sti
and
or
cltd
push
dec
dec
xchg
fildl
push
ret
rcrl
das
scas
jo
je
into
adc
out
xchg
adc
scas
subb
and
clc
inc
cltd
inc
dec
push
xchg
and
imul
push
lahf
negl
lea
mov
push
push
js
and
xlat
shll
add
js
std
fldcw
mov
xchg
cmpsl
out
inc
xchg
xchg
adc
popf
mov
pusha
lods
roll
enter
popa
mov
inc
cwtl
pop
rol
jae
dec
arpl
sbb
push
push
jmp
lahf
jns
jne
adc
in
cmp
jne
add
xor
bound
fdivrl
insb
arpl
pop
jmp
mov
pop
dec
gs
ss
jb
data16
iret
and
push
sahf
push
movsb
and
divl
rorb
inc
push
add
add
jecxz
test
push
pop
in
xor
inc
leave
mov
rorb
dec
pop
inc
xchg
repz
and
xor
inc
daa
jae
or
test
mov
xchg
cwtl
imul
mov
mov
jge
pop
cld
and
aad
or
jne
outsb
ss
outsb
imul
aaa
sbb
outsl
jbe
dec
mov
dec
scas
loop
cltd
and
mov
repz
dec
ret
in
cmp
stos
aam
pop
dec
xor
outsb
xchg
mov
mov
dec
repnz
mov
sti
dec
ja
cmp
pop
or
mov
pop
test
xchg
or
leave
jnp
and
add
fwait
icebp
lfs
sub
arpl
int3
arpl
or
xor
in
xchg
loope
lret
jp
cmp
test
movsl
shl
repz
jg
pop
mov
fwait
in
inc
or
cs
sarb
mov
jge
push
insb
jno
popf
add
aam
mov
outsl
add
cs
xchg
pusha
mov
sti
push
int
push
pusha
xor
inc
mov
ret
popf
cltd
xchg
add
pushf
cmpsb
ds
jb
or
add
hlt
jmp
xchg
push
rcl
pop
clc
cltd
ds
push
inc
in
add
mov
insl
push
or
push
sub
aad
movsl
dec
or
xor
mov
fistps
jp
sub
loope
sti
loop
or
fstl
pop
shrl
push
push
mov
jl
fs
and
stos
inc
orl
je
cmp
lods
lods
scas
mov
addr16
xor
lahf
mov
and
rol
mov
push
jbe
dec
push
push
cmp
mov
cmp
loopne
in
sub
aad
pushf
scas
pop
mov
and
cmpsb
insl
in
xchg
cmp
enter
rcl
dec
loopne
inc
push
roll
testb
test
mov
sub
mov
or
dec
imul
int
cwtl
stc
push
movsl
wbinvd
inc
pop
jle
xor
insb
outsb
push
push
and
add
cld
push
push
loop
jge
push
push
xor
dec
fwait
lahf
fildll
lcall
pushf
push
ficoms
pop
pop
sub
rcll
ds
xchg
iret
sti
mov
add
pop
movsl
and
loope
in
adc
dec
aam
push
jb
lcall
aas
lahf
movsl
cmp
insb
stos
in
xchg
sbb
xchg
cmp
xor
xor
sahf
cmp
xchg
jg
mov
cltd
dec
adc
gs
mov
sar
xchg
sbbl
xor
cmpsl
shll
push
pop
in
sub
cmpsl
xorb
rclb
lahf
sub
sbb
pusha
cmp
push
ret
lods
dec
addr16
push
sub
daa
and
xchg
hlt
in
fstpl
sub
sahf
iret
inc
mov
and
mov
and
and
popf
pop
into
or
and
push
jmp
jle
scas
xchg
lcall
adc
mov
clc
out
cmp
sbb
and
jae,pt
adc
cltd
xchg
scas
cli
mov
loopne
sub
jp
mov
leave
cs
ss
dec
sbb
loopne
cld
push
mov
adc
dec
mov
and
stos
cmp
mov
fisttpl
in
int
nop
jae
jp
movsl
adc
xchg
adc
ds
dec
fiaddl
push
mov
jle
lock
fidivl
xchg
pushf
pop
push
mov
sarb
push
mov
mov
mov
movsb
imul
out
aaa
fbld
repz
aas
push
sub
les
cltd
rolb
popa
jno
inc
sbb
ja
dec
je
ljmp
test
je
fwait
xor
fbstp
sahf
movsb
xor
add
stos
pop
lret
push
add
std
js
xor
sbb
or
jnp
cmpsb
aaa
cld
dec
xor
dec
movsb
gs
mov
es
xlat
into
jae
call
jno
xchg
xor
stc
loopne
stc
jo
push
push
imul
cltd
or
pop
call
sbb
mov
fidivl
cltd
into
or
imul
cwtl
push
cmpsl
ds
lods
xchg
sub
mov
mov
lds
mov
mov
cmp
cld
daa
neg
out
loope
sub
mov
movsb
aam
pop
outsb
push
ficompl
or
stc
inc
in
xor
in
rcll
mov
sub
add
add
xor
xor
fsts
fistpll
mov
cmpsl
dec
rcll
jge
adc
dec
adc
push
inc
and
fisttpll
cmc
pushf
xchg
and
pop
add
mov
mov
sbb
imul
cmp
scas
sbb
pop
stos
pop
mov
inc
es
fsubrl
aam
mov
xor
ljmp
or
cmpb
pop
mov
or
add
inc
sub
xchg
imul
popa
push
and
stos
xor
in
adc
in
cmpl
push
jmp
aad
and
mov
jae
pop
jmp
addr16
mov
gs
cltd
jne
add
out
ret
jo
mov
xchg
push
in
and
arpl
ds
dec
popf
adc
xor
inc
loopne
lret
int3
das
cmp
insl
pop
add
xor
xor
xor
sbb
aad
fs
dec
sub
and
jno
xchg
sbb
into
sbb
inc
add
dec
out
mov
dec
xchg
sbb
jnp
sbb
in
lock
movsl
ds
negl
sub
cmp
ret
mov
mov
fdivrp
adc
dec
popa
mov
cmpsl
mov
out
push
sbb
xchg
loop
dec
rorl
mov
mov
cwtl
pusha
aaa
xchg
push
adc
inc
cmp
mov
adc
aad
daa
xor
test
popf
or
sub
mov
xchg
cli
cltd
xchg
fidivrs
fdivrp
lea
jmp
fmuls
sub
jae
gs
outsb
fs
xchg
xchg
and
shl
cwtl
nop
icebp
cli
push
dec
sbb
sarl
imulb
adc
mov
iret
test
test
mov
loope
stos
arpl
jg
scas
cmp
fnstenv
pop
nop
xchg
xor
mull
jnp,pt
push
xchg
xchg
dec
ficompl
mov
mov
out
mov
std
and
faddl
loope,pn
push
dec
mull
mov
loop
in
xor
mov
dec
xchg
inc
mov
sbb
cmpb
mov
push
test
cmp
mov
repz
cmp
sub
xor
popf
xchg
lret
mov
adc
xor
sub
loope
and
mov
sbb
in
int
push
mov
je
aas
insb
push
xor
insl
xor
ret
cmp
push
insl
jbe
mov
push
pop
pop
gs
sub
push
inc
cmp
or
ja
lds
xor
xor
xchg
dec
mov
push
iret
or
xor
repnz
pop
cwtl
je
jmp
xchg
mov
and
xor
mov
jl
mov
sbb
ljmp
mov
and
dec
repz
das
jecxz
sahf
pop
mov
mov
add
decl
cmp
or
pop
sarb
je
cmp
dec
add
dec
cmp
in
dec
add
dec
jle
inc
add
and
ret
push
jmp
jp
mov
es
cwtl
shrb
jnp
mov
inc
mov
aam
repnz
jge
sub
imul
push
ret
jge
cli
out
lods
sub
loopne
mov
sbb
xor
inc
fimuls
sbb
xchg
push
ret
stc
jns
adc
imul
in
int3
jle
mov
dec
dec
pop
imul
sub
cmc
mov
out
and
test
and
jecxz
jns
es
das
mov
jno
mov
add
lds
xor
int3
push
cmpsl
cli
aam
rclb
push
mov
shlb
icebp
jne
adc
fidivl
xor
fdivrp
pop
fsubl
sbb
pusha
cli
dec
push
jno
xor
sub
push
cld
fndisi(8087
lock
insb
xor
insb
iret
cmp
sbb
xchg
xchg
push
and
movsl
xor
mov
xchg
jne
out
xchg
adc
dec
fstpt
aam
outsb
fisttpl
hlt
push
call
xchg
arpl
fwait
mov
int3
or
inc
pushf
mov
outsl
jl
ds
dec
mov
repz
jecxz
cmpsl
jl
daa
leave
ja
mov
sahf
ljmp
daa
and
ds
insb
pushf
pop
push
rclb
ret
int
inc
lock
out
dec
jmp
out
mov
ljmp
add
nop
pop
sbb
test
cmp
add
in
ret
mov
imul
es
pop
lds
sti
in
mov
lods
pop
pop
cwtl
mov
hlt
testb
or
in
sbb
cmpsl
pushf
adc
jg
push
test
or
cwtl
enter
sbb
mov
adc
jns
jns
add
out
loop
test
movsb
gs
rorb
std
fimuls
leave
lods
jl
fmulp
stos
pusha
ds
ljmp
or
and
xchg
clc
mov
sbb
pop
dec
cmpl
cltd
test
sbb
aas
jbe
cmp
push
in
imul
lret
mov
xchg
fcmovbe
push
dec
mov
rolb
mov
stc
sbb
fnstsw
jb
fs
pop
jno
test
pop
addr16
bound
mov
sbbl
test
insb
mov
pop
jl
aam
fisttpll
sti
dec
outsb
test
mov
sbb
jmp
scas
pop
out
mov
xchg
rcll
in
xor
jo
or
mov
scas
test
push
and
push
loop
lcall
xchg
inc
push
loope
addr16
lret
and
xor
scas
xchg
pushf
movsb
pop
sub
dec
rcl
testb
and
or
jbe
mov
cli
jnp
ds
inc
pop
call
xchg
das
xchg
sub
aad
int3
in
scas
daa
sub
enterw
jg
jp
push
dec
xchg
call
pop
jno
lea
jp
jl
jge
shrl
jmp
adc
ljmp
xchg
pop
lea
pop
aad
mov
repnz
pop
adc
add
inc
rorb
mov
in
mov
adc
rcrl
aaa
xchg
cmpb
icebp
jecxz
push
test
ss
daa
pop
ljmp
ror
cmp
jae
leave
add
sahf
inc
inc
adc
in
test
xor
jbe
call
mov
cs
push
in
mov
imul
rclb
ss
cli
mov
pop
fisubrl
sbbb
ljmp
das
addr16
and
popa
jnp
jns
scas
sub
cmpsl
pop
adc
data16
leave
scas
xor
fcomps
mov
jmp
cmp
fucomi
nop
sbb
aam
insb
push
nop
and
arpl
mov
adc
dec
in
xchg
fmull
xor
repz
mov
cmp
mov
push
mov
sbb
pop
inc
and
sub
jmp
mov
es
cmpsl
ret
inc
shl
cmpsb
xchg
je
adc
dec
xchg
pop
jle
sahf
and
or
aad
jle
addb
adc
pop
mov
push
dec
lea
aaa
dec
sbb
push
enter
shl
xchg
aad
sbb
orl
into
dec
jno
ljmp
xor
xor
xchg
dec
pop
xchg
push
sub
add
mov
icebp
int
mov
dec
jecxz
mov
pop
out
sbb
cmp
jne
and
test
adc
pop
adcb
int
jb
scas
sub
movsb
aad
sub
loopne
jbe
aaa
dec
dec
sub
enter
outsl
xor
dec
lahf
push
popf
sub
add
mov
mov
push
out
mov
cmp
mov
and
push
fnstenv
daa
aam
shlb
hlt
push
push
dec
pushf
sti
add
inc
push
pop
repz
shl
dec
push
insb
mov
pop
mov
addr16
xchg
sar
fsubs
leave
dec
add
cli
jne
inc
nop
mov
adcb
mov
dec
lock
fsubs
pop
rep
aam
rorb
hlt
mov
stos
fstps
push
mov
out
and
cmpsl
or
cmpsl
mov
mov
jnp
ds
stos
pop
mov
fimuls
shrl
xchg
sbb
stos
pop
ja
mov
jg
mov
cwtl
fiaddl
or
repz
or
out
push
mov
ljmp
addl
sub
add
testl
decb
cmpsb
inc
fnstcw
adc
lods
cmp
xchg
add
nop
repz
pop
cmp
test
es
sbb
xchg
jae
push
cld
add
lret
mov
fsubrl
cmp
cmp
push
jmp
mov
and
arpl
cmp
orl
gs
fisubl
add
pop
xor
mov
inc
inc
xchg
pop
pop
jb
outsb
jp
sub
ficompl
jno
adc
icebp
testb
cli
test
sti
dec
jmp
les
adc
inc
sbb
mov
xor
mov
or
idivb
subl
mov
out
or
fcmovb
movups
mov
rcll
imul
fisubrl
mov
aaa
in
call
xor
fscale
gs
aas
movlps
je
mov
dec
in
xor
xchg
mov
shrl
int
pop
clc
mov
and
aad
push
insl
int
jbe
mov
pusha
inc
lock
sub
lock
xor
lea
mov
and
loopne
push
icebp
popf
mov
imul
push
jecxz
movb
lds
fwait
push
loope
jmp
xchg
cmp
mov
inc
dec
lock
clc
cs
push
and
daa
dec
clc
clc
xchg
push
mov
lods
inc
pop
ja
cmpsb
mov
ret
stos
add
sbb
sbb
out
fiaddl
pop
aaa
xor
sbbl
shlb
jbe
inc
mov
mov
pop
insl
icebp
loop
test
ja
gs
dec
xchg
lcall
std
scas
lea
fwait
add
cmp
push
cmpsb
imul
pop
mov
cmp
stos
mov
xor
jmp
notb
mov
cwtl
rcll
mov
jae
sti
jbe
and
adc
sbb
or
dec
sti
decb
inc
sahf
fwait
add
imul
fwait
test
mov
js
adc
mov
fistps
outsl
pop
mov
lods
mov
mov
fsubrl
ret
repnz
pop
add
dec
mov
in
arpl
and
rcr
movsb
and
in
lahf
mov
jg
aam
in
loope
dec
mov
pushf
test
andb
imul
and
jo
lahf
dec
cmp
ret
into
jno
xchg
or
pop
cmp
sahf
hlt
fsubr
sbb
add
shll
push
pop
cli
lds
ds
insb
or
xchg
std
test
insl
int
xchg
ds
into
pop
inc
push
stos
cltd
out
push
out
jl
fwait
or
cmp
ja
lret
inc
jns
pop
out
jb
lret
fwait
incb
and
pop
add
lds
pop
and
jecxz
lods
cmpsl
cmp
andb
push
push
and
ret
adc
ljmp
mov
mov
pop
pop
enter
sub
mov
jb,pn
insl
adc
mov
push
lcall
mov
or
setbe
lds
mov
popf
cmp
add
loope
dec
mov
movl
push
mov
mov
mov
sub
pushf
xchg
jge
jecxz
and
test
dec
adc
repnz
inc
jns
mov
jne
inc
in
lea
les
xor
ljmp
inc
mov
nop
sub
jg
dec
sub
inc
xchg
pop
mov
out
cmp
test
shr
and
cld
fwait
ljmp
jl
stc
mov
popa
jmp
in
jns
fists
aas
jns
jno
mov
ret
out
pop
mov
mov
iret
sub
add
pop
gs
dec
and
cmpsl
into
je
loop
scas
filds
lcall
and
or
lret
push
pop
bound
faddl
push
push
push
roll
mov
xchg
sti
push
pop
cwtl
stos
jb
popf
dec
jns
imul
sub
mov
adc
and
and
mov
jnp
int3
xchg
inc
pop
sub
push
and
sarl
jbe
in
and
push
pop
lea
stos
mov
int
xorb
inc
adc
aaa
out
fwait
jmp
or
mov
jecxz
push
aaa
inc
movsb
adc
sbb
push
mov
ret
sahf
ss
mov
xor
iret
dec
dec
push
mov
pop
mov
mov
pop
inc
cwtl
cltd
jae
adc
dec
rcl
add
test
mov
push
jno
bound
mov
pop
mov
xor
or
insl
push
push
or
push
call
jecxz
jno
cli
mov
inc
mov
scas
inc
mov
dec
ja
cmp
psraw
scas
unpcklps
clc
outsl
mov
aaa
or
cwtl
cmp
pop
ljmp
xchg
fdivrl
mov
pusha
rol
lea
xchg
add
pushf
aad
mov
jne
ds
adc
movsl
dec
sbb
sbb
mov
stc
or
mov
sahf
outsb
gs
or
cwtl
jmp
and
sbb
test
pop
les
outsl
pop
inc
rclb
loope
lock
add
loopne
cltd
sbb
sti
jmp
mov
shrb
testb
xor
xor
outsl
popa
pushf
mov
out
inc
inc
push
out
mov
fisttps
fsub
jmp
xchg
adc
add
xlat
aad
sbb
gs
rcll
daa
inc
mov
notl
pop
stos
pushf
mov
lock
xchg
imul
dec
add
aas
nop
insl
inc
mov
repz
in
adc
sub
push
rclb
int
adc
inc
mov
jno
push
jb
outsl
push
mov
movsl
lea
fwait
adc
mov
cmp
push
push
pop
jmp
popf
pop
clc
xchg
cmp
out
stos
int
mov
andb
mov
rcl
dec
pop
ret
sahf
movsb
movsb
sub
movsb
call
inc
movntss
and
shufps
adc
and
sbb
mov
jp
sbbl
enter
popl
cmp
out
popf
push
jl
or
inc
xlat
mov
dec
hlt
add
dec
js
jo
add
xchg
rcl
mov
fcmovnbe
int
loopne
add
jno
or
insl
dec
nop
outsb
test
popa
push
push
pushf
mov
jecxz
mov
cmp
jl
xor
xor
out
cltd
mov
adc
rcrb
xor
push
stos
sub
mov
jmp
lods
cmpsl
or
addr16
cwtl
pandn
sahf
jae
mov
add
jbe
push
daa
mov
pop
xor
jb
pop
icebp
ds
xchg
push
push
mov
addb
sub
fwait
xchg
or
mov
xchg
imul
pop
sahf
mov
push
xchg
sub
outsl
adc
jg
divb
or
inc
xor
iret
lock
ret
aad
mov
inc
pusha
push
fidivrl
and
push
js
sub
aad
dec
push
cmp
mov
mov
insl
sbb
mov
adc
in
dec
jp
repnz
cpuid
mov
fwait
stos
pop
in
les
fsts
shrb
push
jge
addb
cwtl
fsubs
mov
sub
add
xorl
std
cld
aam
mov
aaa
pop
mov
mov
sahf
sahf
and
scas
and
adc
cmp
jae
lea
imul
mov
mov
scas
pop
mov
cmp
add
data16
adc
mov
push
loope
add
adc
imul
pop
cmpsb
jp
loopne
scas
js
adc
enter
std
ss
or
push
scas
daa
cli
mov
and
push
push
in
lds
xchg
jbe
ret
mov
pop
lcall
outsb
push
pop
int3
imulb
mov
testb
xchg
mov
pop
iret
and
sbb
sbb
push
sub
aas
mov
cmp
rcl
xchg
pushf
out
pop
fildl
out
adc
or
andl
jae
test
push
jp
out
sbb
xor
mov
cmp
stc
test
jae
movsb
cwtl
movsl
movsb
push
loop
xchg
mov
in
xchg
test
jmp
aaa
stc
inc
je
sbb
or
jbe
iret
xor
lock
aad
mov
jl
sub
ja
sbb
movsb
mov
lock
mov
jne
not
xorl
adc
sub
sub
fs
cmp
jge
jae
sub
rcrb
xchg
jae
les
mov
lret
mul
fiaddl
lods
or
jbe
mov
rol
dec
data16
lds
sub
jbe
xchg
xchg
add
in
mov
addb
jnp
xor
imul
push
nop
mov
mov
subb
or
adc
lock
pop
jp
and
pop
pop
mov
repz
push
lcall
inc
out
ret
incb
mov
push
and
inc
fisubrs
dec
mov
pop
stos
jle
lds
mov
pop
dec
cs
push
int
lds
hlt
push
push
pop
xchg
xchg
mov
add
inc
mov
incl
lahf
fistl
xchg
lea
div
fsubrl
add
stos
mov
outsb
pushf
dec
jmp
mov
cltd
mov
cmp
add
inc
sbb
inc
jo
dec
loope
pushf
out
inc
pop
nop
iret
pop
iret
add
cmp
xchg
dec
push
movsl
ss
movsb
clc
xchg
imul
popa
scas
mov
aaa
adc
add
cmp
dec
push
cs
or
rcrl
sub
xchg
pop
lcall
and
insl
xchg
pop
rclb
dec
sbb
cwtl
dec
scas
fcmovbe
test
sarl
icebp
fadd
mov
icebp
push
dec
cmp
mov
jb
js
loop
std
clc
sub
cltd
lods
fmul
cmp
stc
stos
lods
mov
pop
cmp
or
jae
icebp
jmp
shr
or
cmp
imul
loope
les
repz
insb
hlt
mov
lret
pop
fbld
adc
inc
divl
push
popa
pop
mov
xor
cwtl
xchg
arpl
shlb
cmpsb
xor
enter
sub
fdivl
in
dec
adc
sub
mov
push
pop
push
mov
mov
mov
ret
in
pop
das
pinsrw
add
es
push
insb
or
and
cwtl
dec
sub
mov
lcall
mov
ds
ljmp
sub
cs
xchg
mov
jno
and
test
arpl
js
jns
mov
add
or
cltd
and
inc
mov
inc
lret
jne
dec
xor
in
loop
xor
movl
push
pusha
pop
je
cmp
sbb
or
jp
ja
or
dec
ret
fs
loopne
and
push
sbb
or
in
fwait
jo
xor
pop
std
inc
xor
repz
rorb
out
jns
popa
inc
xor
mov
push
leave
mov
mov
cmpsl
femms
popf
pop
push
mov
test
push
mov
mov
in
jne
lea
stos
push
xchg
pop
jge
stos
fld
addr16
jne
mov
and
sarl
cmpsb
adc
nop
adc
sub
xor
mov
mov
cli
bound
shll
fld
sbb
push
outsb
sub
cmpsb
push
cld
sub
sarl
mov
jmp
mov
stc
xor
imul
mov
popa
and
add
insl
jno
jmp
mov
mov
push
jno
xchg
and
or
adc
aad
pop
sahf
scas
es
dec
xchg
out
aam
jg
addr16
adc
xchg
jmp
stos
jns
in
aad
lcall
adc
scas
nop
lods
subl
push
jo
push
sub
dec
jmp
xor
xchg
inc
adcb
jbe
sub
ret
fwait
mov
rcrb
aaa
bound
xor
sbb
gs
in
xlat
pop
popf
stos
mov
std
mov
dec
cmpsb
xchg
imul
mov
add
cmc
jo
stos
pop
test
cmpsb
jmp
push
daa
int3
push
insb
aas
mov
in
jb
and
iret
mov
es
xchg
movsb
ds
pop
addr16
adc
jb
or
out
ret
inc
shrl
test
stos
add
pop
dec
repnz
lret
out
xchg
fdivl
or
divl
vucomiss
pop
pop
xor
lcall
mov
mov
iret
fisubrs
rcl
or
clc
imul
or
data16
jbe
bound
out
loope
es
stos
aaa
mov
mov
inc
or
sub
cmp
inc
adc
mov
xchg
and
inc
ds
aam
jo
cmp
les
shrb
xor
dec
add
test
jp
fstps
push
stc
push
push
pop
imul
mov
jecxz
adc
leave
int
scas
cli
mov
mov
cmpsl
in
dec
movsl
inc
outsb
and
sar
cwtl
mov
test
or
cmp
mov
cs
or
hlt
sti
adc
loopne
daa
arpl
sub
jo
outsb
adcl
mov
scas
push
jo
inc
sbb
int
sbb
and
push
inc
mov
dec
add
fs
dec
jle
ret
push
into
dec
imull
sti
dec
aaa
cmp
mov
call
insl
jne
filds
aaa
dec
push
int
jo
push
rcll
mov
xchg
adc
icebp
insl
jmp
inc
icebp
dec
dec
pop
ja
mov
inc
ret
push
iret
sbb
xchg
es
mov
adcl
fldl
cmp
lea
in
mov
das
pushf
xchg
in
lds
cmp
shl
push
aas
mov
test
inc
bound
popf
stos
push
inc
iret
inc
int
sbb
test
push
add
lods
sahf
ss
rol
pop
jle
in
mov
mov
test
pop
adc
pop
out
or
push
mov
jecxz
dec
loope
test
out
into
and
nop
add
adc
mov
stos
cmp
dec
cmpsl
xchg
mov
ss
add
mov
sahf
scas
mov
mov
out
bound
stos
dec
inc
mov
notl
xchg
pop
mov
or
push
dec
inc
sub
mov
ljmp
sbb
or
and
xor
pop
ds
shrb
or
lret
cmp
xchg
inc
out
jmp
and
loop
mov
fcompl
xor
inc
out
mov
pushf
cli
hlt
jg
and
popf
outsb
dec
imul
repz
in
addr16
mov
es
out
dec
orl
inc
dec
dec
cmp
jb
stos
mov
inc
mull
ljmp
or
jp
movsl
pop
mov
sub
or
repnz
outsb
inc
pop
mov
push
xchg
sbb
negb
testl
xchg
inc
xor
cmpsb
fdivrs
daa
mov
or
push
pop
divl
push
cld
jg
lods
or
ss
outsl
repnz
jb
push
aaa
mov
fstpt
insl
xchg
xchg
fwait
out
movsl
push
dec
es
ret
jmp
lret
mov
icebp
pop
xchg
es
insb
or
sbb
xor
mov
xchg
pop
test
mov
pop
loop
jne
aas
push
jle
xor
mov
mov
mov
faddl
mov
lock
push
push
out
fcoml
mov
inc
std
je
rorl
mov
sub
movsb
lret
aas
pushf
popa
decb
push
mov
ret
pop
ret
pop
scas
notb
xor
imul
ja
push
arpl
push
mov
in
dec
inc
movsb
mov
sbbb
and
xor
push
movsb
mov
pop
cld
and
pop
jnp
inc
inc
mov
add
lcall
ja
ss
ret
sub
das
imul
stc
inc
lods
xor
sbb
cmc
mov
jnp
jne
icebp
and
test
leave
out
pop
inc
dec
test
xor
push
lods
fwait
mov
push
inc
imul
adc
or
call
adc
pop
das
testb
addr16
adc
pop
mov
mov
pop
insb
sbb
icebp
inc
lahf
lahf
xor
fwait
es
jae
push
xchg
jg
dec
scas
xor
xchg
sbbl
sbb
or
dec
loope
mov
jnp
call
ss
fsubl
repnz
lea
jno
cmp
dec
loopne
sub
clc
push
pop
sub
dec
test
push
add
popf
sbb
mov
outsb
jae
les
adc
cmpsl
jno
in
repnz
movsl
jno
loope
pop
fists
dec
sti
adc
test
aam
jno
jmp
dec
add
push
stos
pop
shl
call
clc
loop
lds
xchg
outsl
adc
cmp
xor
pop
test
inc
add
xchg
imul
pop
and
inc
xlat
cltd
fidivl
outsb
fs
xchg
dec
jae
jl
mov
cmp
ret
cmpb
and
jns
or
scas
jmp
notb
popf
fcmovnbe
xchg
mov
mov
inc
and
testl
out
movsb
xlat
xchg
jl
out
cltd
jbe
inc
mov
sub
pop
fimuls
inc
push
push
mov
dec
inc
pushf
lock
leave
je
int3
sbb
mov
es
sbb
add
loope
jo
dec
imul
je
popa
daa
xor
push
dec
dec
cmpl
cmp
ficoml
js
and
fcmovnb
insl
mov
cwtl
cli
test
das
rolb
dec
hlt
and
call
shrb
xchg
testl
cltd
mov
jge
mov
inc
adc
or
mov
xor
xchg
inc
adc
out
xchg
mov
and
pop
addl
sbb
fisubrl
add
push
pushf
adc
shlb
jg
testb
aam
stc
and
pop
adc
mov
dec
arpl
jb
sub
cwtl
loopne
pop
xchg
xor
ljmp
call
push
stos
xor
aam
scas
aaa
mov
xor
dec
mov
jge
insb
or
dec
jle
add
stos
cmp
and
and
sbb
out
clc
push
test
xor
leave
inc
cltd
test
push
aam
shrb
lea
sub
jl
pop
leave
dec
lcall
cmp
add
adc
mov
gs
pop
push
sbb
pop
mov
and
pop
pop
std
daa
add
imul
inc
stc
mov
arpl
adc
add
dec
repz
insb
aam
inc
dec
mov
cmpsl
inc
lret
testb
loope
and
sub
sbb
hlt
imulb
fidivrl
pop
inc
inc
lcall
sarb
sbb
loopne
inc
pop
lcall
pop
xchg
test
adc
jne
cwtl
inc
dec
or
lock
mov
es
mov
std
cmp
cmp
and
inc
out
and
out
cld
rcrl
and
jbe
push
pop
mov
in
cmc
cs
inc
sbb
hlt
dec
and
sbb
pop
ret
sbb
push
mov
xchg
jg
and
sub
ss
inc
test
pop
cli
push
scas
mov
test
in
cs
mov
xchg
mov
inc
sub
jns
arpl
fbld
jmp
mull
dec
dec
pusha
pop
push
mov
xchg
inc
ljmp
jno
or
inc
mov
push
dec
fcmovnbe
ja
scas
adc
mov
fwait
cmc
stos
dec
lahf
call
pop
loopne
xor
lahf
mov
bound
push
cmp
fisubrl
jmp
jmp
inc
lods
ret
inc
icebp
xchg
fsubr
inc
mov
jl
das
icebp
cltd
mov
mov
cwtl
sbb
sti
test
dec
and
lret
pop
jb
into
sbb
jge
mov
stc
dec
push
gs
inc
fwait
adc
pushf
ret
jnp
jecxz
cld
iret
jmp
cmp
je
push
adc
sbbb
sbb
outsl
in
jne
and
cmpsl
xchg
data16
sbb
push
arpl
jg
add
lds
cmp
cmpl
fnstsw
repnz
jg
icebp
or
in
ret
xchg
mov
add
jmp
jne
mov
inc
mov
push
arpl
cmp
adc
jge
lret
xor
xchg
pop
mov
in
sub
mov
push
jle
out
pop
xchg
loopne
jns
fwait
lock
movsb
inc
adc
add
inc
dec
popa
clc
fcmove
test
lods
xchg
imul
xchg
aaa
ljmp
xchg
xchg
xor
arpl
push
mov
ss
fcompl
add
lea
sbb
incl
xchg
dec
aam
or
je
lahf
jae
pusha
jl
dec
and
xchg
adc
daa
inc
popf
hlt
cmp
dec
sub
pop
pop
imul
dec
cmp
push
sbb
in
sub
scas
test
sub
outsl
fwait
scas
aaa
enter
in
iret
push
enter
jle
jbe
js
xorl
xchg
xchg
xchg
mov
je
and
hlt
cwtl
adc
imul
es
leave
cmp
rclb
mov
push
std
into
js
lods
mov
add
jl
cli
sub
jge
xchg
push
mov
rol
push
js
addb
jne
rcrl
mov
or
les
sub
outsb
sarb
dec
dec
movsb
insl
dec
add
scas
mov
stc
dec
push
pop
shrl
sub
subl
mov
fcomip
xor
xchg
pop
adc
jmp
lahf
pusha
mov
mov
int3
lock
insl
sub
mov
mov
shrl
dec
rolb
push
stos
xlat
pop
fsubp
push
add
inc
fsubl
js
lret
fisubl
and
mov
mov
rol
pop
xchg
mov
sub
das
push
push
xchg
insl
pop
je
inc
sarb
repnz
scas
sbb
mov
insb
fs
jo
cltd
mov
scas
adc
push
test
repz
fcmovne
cmp
xchg
cmp
inc
ljmp
xchg
jno,pn
mov
popa
out
and
es
int
mov
aaa
scas
xchg
shll
xchg
and
or
add
xor
int3
setns
jecxz
cmpsb
ss
and
adc
fdivrs
call
mov
jb
sti
inc
hlt
enter
mov
dec
and
jae
mov
xor
inc
pusha
pop
fdivl
ljmp
sbb
fs
xchg
mov
adc
mov
addr16
add
gs
sbb
out
in
mov
rorl
add
mov
cmovne
out
int3
fdivl
xlat
fimuls
push
add
scas
and
test
mov
jg
sbb
xchg
xchg
repnz
mov
adc
shlb
sub
ds
push
sti
push
lods
jns
mov
bound
lcall
add
cmpsl
jecxz
xor
cmp
roll
out
sub
dec
add
push
push
popa
inc
xor
mov
xor
popl
xchg
dec
mov
sbb
iret
insl
jae
jae
pop
jb
adc
ret
pop
arpl
ret
fbstp
inc
pop
fdivs
repnz
sahf
arpl
lret
sbb
scas
subb
xorb
sbb
fwait
rclb
jge
test
xor
jnp
scas
das
jecxz
xchg
scas
xchg
sbb
or
sub
cltd
jnp
xchg
sub
call
pop
xchg
xchg
pop
sbb
xchg
inc
repz
pop
ds
xchg
loop
push
cmp
fsubrl
push
lcall
mov
sbb
into
lock
cmp
push
mov
adc
fs
adc
jno
hlt
sbb
jl
jb
sub
pop
xchg
fs
pop
jmp
push
cmc
sub
lock
in
jnp
sti
je
inc
push
out
mov
into
xor
dec
cmpsb
add
lret
mov
sub
lcall
jp
and
cmp
lods
push
lcall
sub
aaa
cld
mov
push
outsb
sbb
xor
in
cmp
mov
add
les
mov
push
jb
ret
xor
cmp
push
nop
mov
mov
mov
jge
and
shlb
push
jecxz
ja
mov
add
lock
gs
scas
es
inc
loopne
ror
inc
stc
dec
imul
sub
adc
dec
lods
xchg
cs
adc
mov
mov
mov
aad
mov
pushf
push
pop
aas
insb
int
sub
mov
repz
pop
sarb
jp
test
pusha
adc
lahf
jp
lods
inc
aaa
lahf
xlat
test
xchg
mov
jae
lea
mov
scas
xor
out
xchg
add
sbb
jmp
and
cmp
mov
cmp
and
nop
shrl
mov
adc
jno
daa
push
out
shlb
aas
pop
fldl2e
fadd
jmp
cmp
gs
fnstcw
push
insl
xchg
dec
nop
mov
inc
mov
push
rcrb
movsl
ss
inc
and
test
dec
movsb
or
pop
and
mov
sbbl
xchg
add
arpl
ret
popf
sbb
lret
cmpsb
mov
add
mov
int
xchg
pop
lock
mov
adc
movsl
jl
xor
out
jge
sbb
mov
popl
out
mov
jne
sub
cwtl
jecxz
xchg
js
sbb
add
jmp
icebp
cmpsb
fwait
jns
stos
push
fldcw
repz
xchg
sbb
ror
idiv
mov
test
iret
std
lret
mov
ficompl
mov
cld
dec
sbb
cmpsb
jge
andb
jmp
xchg
enter
xchg
dec
push
insl
sub
mov
jne
or
adc
mov
mov
or
adc
mov
shlb
aaa
cs
jmp
scas
icebp
push
adc
es
mov
fwait
push
lock
lock
inc
push
fisttps
sub
push
subl
push
mov
lock
popf
add
lea
push
push
jmp
inc
mov
jno
lods
push
dec
push
pop
or
std
xor
mov
test
ret
sub
pop
xchg
cli
xchg
ljmp
fldt
push
add
pop
loope
jb
push
data16
add
ret
jno
pop
pop
mov
sbb
jg
sbb
icebp
idivl
addr16
rcl
dec
xchg
sub
xchg
jae
mov
cwtl
andl
iret
adc
jl
mov
int
iret
sub
fmull
leave
mov
sub
sub
dec
rol
xor
adc
mov
inc
sub
push
and
xor
movsb
ss
aam
mov
push
aam
roll
push
aam
in
cmp
mov
fs
test
call
cli
xor
or
stc
dec
dec
mov
aad
and
adc
cmp
push
mov
xor
jb
cwtl
pop
pusha
add
push
addr16
xchg
sub
stc
xor
lods
push
cmp
fstpl
in
jns
push
mov
or
cmp
iret
jle
mov
jle
push
push
dec
push
xchg
rcl
mov
fbld
bound
cmpsl
mov
out
add
pop
popf
jbe
cld
sbb
int3
popa
push
cmp
adcl
jo
cmp
outsl
ljmp
test
sbb
leave
mov
push
jb
add
cld
cmp
pop
and
sub
shrl
sub
pusha
rorl
inc
imull
mov
vmread
mov
popf
inc
call
movsl
mov
cmpsb
imul
cwtl
testl
mov
and
ja
js
repnz
std
imul
call
fistl
cltd
mov
xchg
inc
das
sbb
mov
test
fnstenv
int3
fidivs
fsubrs
aad
sbb
lret
rclb
fistps
test
in
or
ja
jns
mov
inc
out
out
mov
mov
mov
mov
dec
xchg
out
sub
stos
test
xchg
adc
push
in
dec
and
pop
stc
cmc
push
xchg
xchg
push
lds
cmp
mov
cmp
call
mov
pop
or
mov
cwtl
xchg
pop
pop
lds
ret
lods
dec
idivl
cli
fcmove
and
nop
mov
lret
and
aad
inc
jle
sbb
cmp
add
fsubl
mov
push
dec
push
insb
xlat
sub
pop
orl
in
mov
pop
bound
lods
outsb
xchg
jmp
sub
mov
fsts
mov
imul
out
lret
pop
stc
jne
sbb
or
mov
inc
dec
sub
mov
rcr
popa
mov
mov
lds
les
fisttpl
test
mov
mov
sbb
pusha
push
jecxz
daa
cmp
xor
inc
enter
mov
je
int3
lea
adc
pop
mov
jnp
jae
sbb
lods
inc
sbb
mov
jne
aam
in
mov
das
mov
movsl
fcompl
mov
jnp
xor
lcall
mov
push
dec
sub
out
inc
sub
push
repz
dec
inc
push
sub
push
sbb
mov
pop
and
cmp
jo,pt
and
pop
rclb
cltd
xchg
repz
jns
jg
xor
pushf
sbb
movsl
subb
pop
or
out
adc
cmp
and
out
xchg
scas
mov
outsb
add
mov
pop
notb
sti
adc
mov
cmp
dec
sbb
push
jl
cmp
cmpsl
push
call
pop
popf
and
inc
dec
mov
stos
data16
dec
and
fistpl
iret
jno
iret
mov
cltd
mov
jns
orl
popf
sub
scas
jb
mov
ret
test
pop
stos
test
sarb
orl
mov
pop
or
aas
ja
push
or
jbe
pop
or
mov
mov
mov
push
mov
popf
jmp
scas
inc
sub
xchg
mov
push
sahf
pop
mov
pop
add
cwtl
into
fistps
es
jecxz
mov
in
out
mov
pop
std
call
xor
fidivrs
push
jno
scas
js
loope
cmp
mov
test
lea
leave
sub
push
test
mov
sbb
xor
xchg
pop
jp
push
into
test
jo
or
movsb
xchg
mov
ljmp
lds
iret
std
fwait
outsl
stos
and
ss
mov
ret
cmp
ret
je
xor
dec
and
sbb
lods
mov
jae
pop
jmp
pop
jge
push
movsl
adc
pop
or
xchg
out
pop
mov
aas
adc
cwtl
cmpb
sbb
sbb
inc
pop
fwait
mov
fnstsw
jg
sbb
add
outsb
fisttpll
xor
insl
jb
test
lds
aam
addr16
mov
addr16
in
je
les
std
pushf
cmp
mov
and
movsl
mov
jle
imul
mov
push
test
push
hlt
mov
lods
dec
sti
pushf
in
test
sub
and
fucom
in
cltd
dec
cmpsb
leave
dec
ja
and
mov
mov
test
pusha
jae
mov
lret
mov
and
and
cmp
xchg
ret
or
pop
jae
jmp
pop
rol
xchg
aaa
jecxz
pop
jecxz
jns
cld
jo
pop
or
cmp
mov
sub
aaa
mov
and
xlat
dec
add
repz
mov
orb
out
inc
mov
insl
jl
gs
in
dec
pop
xchg
scas
push
push
jae
lds
sub
mov
fstl
pop
pop
jno
movsl
in
mov
cmp
fwait
sbb
push
lcall
add
adc
dec
in
aas
mov
repz
sbb
test
sbb
mov
sahf
xchg
repnz
cmp
sbb
loopne
sbb
pop
mov
jne
mov
xor
push
shll
xlat
insl
cmp
cmp
sub
mov
jae
sti
xchg
aaa
icebp
testl
pop
push
xlat
mov
mov
push
jmp
mov
jae,pn
pop
popf
cld
jg
ja
jno
or
add
stos
clc
dec
push
or
or
or
test
mov
xchg
sahf
mov
sub
adc
or
imul
sub
ss
pusha
inc
sub
fstp
mov
xchg
lock
addr16
shll
mov
int
nop
fdivr
mov
sub
jmp
sbb
out
scas
cmp
cmp
pop
xchg
call
sar
popa
pop
movsl
add
adc
xchg
notb
movsl
xchg
dec
pop
mov
ljmp
sbb
xchg
pop
test
shrl
shlb
addr16
sahf
out
cli
imul
pop
mov
in
aas
mov
enter
mov
hlt
cmc
jns
sub
mov
cmp
xchg
add
shrl
push
fnstsw
xor
stc
lcall
ljmp
rorl
jge
mov
jg
cmpsl
out
cmp
lods
ror
mov
loop
fsubp
ret
scas
hlt
sub
test
mov
xchg
dec
jmp
fisubrl
mov
jl
enter
lods
pop
xchg
xchg
testb
cmp
cmc
push
cmpsb
pop
mov
jle
cmpsb
ret
es
mov
cmc
out
ret
pop
js
lret
lret
fistl
pop
in
cs
aam
mov
and
into
push
aam
xchg
xchg
and
cmp
mov
mov
dec
int
mov
sub
out
lods
adc
data16
lods
dec
popl
xor
dec
incl
fbstp
fimuls
and
sub
sahf
loop
stos
fisttps
lds
mov
sbb
leave
fldcw
adc
pop
xor
pop
mov
ja
js
pop
and
addr16
pop
and
or
mov
adc
push
dec
out
frstor
jg
add
popl
test
ljmp
sub
cmp
into
jecxz
push
xor
lods
add
push
mov
mov
aas
push
subl
mov
jl
cmp
repz
and
sbb
sub
cmpsl
test
sub
aad
lods
in
fsts
lods
out
mov
mov
push
icebp
mov
jl
and
lahf
cltd
divb
stc
int3
mov
xchg
aad
push
and
add
mov
push
cmp
sbb
xlat
cs
cmp
fsubrl
xlat
call
jge
dec
pop
repnz
ret
adc
pop
inc
inc
cs
xchg
pop
ds
jb
or
lds
call
cltd
dec
bound
inc
stos
and
mov
icebp
js
filds
cwtl
cli
arpl
lods
push
pop
cli
and
mov
mov
aaa
adc
dec
sbb
push
ret
adc
int
lcall
sub
push
je
ja
ficomps
mov
loopne
ffreep
mov
enter
imul
mov
add
mov
xchg
push
sbb
dec
les
mov
mov
rcrl
pop
and
mov
xchg
das
mov
and
xchg
icebp
jnp
je
in
sub
nop
mov
addr16
je
out
push
pop
ffreep
or
mov
xor
arpl
mov
rcr
popa
test
mov
jns
mov
mov
ret
mov
lcall
mov
pop
xor
lock
pop
sahf
dec
jns,pt
dec
inc
push
lret
cmp
aaa
mov
in
xor
jl
push
ret
mov
sub
int
dec
outsl
and
enter
and
mov
dec
cmp
les
cmpsl
out
or
adc
into
add
lock
or
lods
adc
shrl
movsb
mov
enter
jecxz
xchg
inc
scas
xchg
and
push
pop
flds
in
adc
popf
fstps
pop
shll
mov
test
or
dec
aaa
rol
cs
add
adc
sub
cli
jno
fiadds
xor
and
aas
or
inc
xchg
and
leave
mov
inc
jno,pt
int
ret
dec
mov
notb
mov
mov
insb
repz
push
loopne
ret
mov
dec
xor
test
dec
mov
imul
stos
fcomip
in
fisttpll
pushf
fcompl
sbb
cmp
in
push
insl
aaa
fwait
sub
and
xorb
jecxz
xchg
and
push
dec
mov
stos
push
mov
ret
jns
ds
adc
cmc
xchg
xor
mov
out
call
xor
mov
and
jbe
dec
mov
movaps
jg
and
movsb
in
or
ds
fadds
dec
test
sbb
inc
cmp
into
add
in
arpl
xor
mov
arpl
test
push
adc
adc
dec
repnz
push
pop
mov
loop
mov
cmc
outsl
mov
xor
push
movsl
jnp
dec
mov
lock
sbb
cld
pop
or
movsb
pop
cli
add
push
jmp
ret
data16
call
leave
mov
pop
out
aad
in
mov
rcll
push
idivl
loop
sbb
fnstsw
sbb
test
xor
dec
add
or
pop
iret
pop
out
scas
sbb
and
test
mov
scas
push
mov
das
outsl
std
mov
lret
rol
push
adc
cmp
ficomps
imul
idivl
das
movsl
int3
mov
popa
call
jbe
loope
flds
sbb
cmpsb
mov
pop
pushf
mov
push
in
fistps
mov
fimull
adc
xchg
out
test
cltd
cmp
mov
jge
and
sti
mov
das
sbb
out
popf
mov
fsubrl
fnsave
jae
mov
out
xchg
inc
push
sbb
mov
xchg
fnsave
imul
insl
loop
icebp
out
sti
aam
arpl
test
add
imul
push
notb
scas
xor
jl
cmp
call
add
xor
dec
je
xchg
push
inc
dec
outsb
inc
push
xchg
repnz
test
jg
pop
push
int
push
mov
rcrb
xchg
jge
aas
maxps
outsl
testl
jle
lret
xchg
push
lods
aas
jmp
sbb
shll
in
sub
mov
lods
or
and
cmc
pop
mov
js
arpl
scas
call
cltd
std
sub
cmp
dec
dec
ret
push
ret
xchg
cwtl
lret
pop
xchg
insl
movsl
jp
js
fstpl
inc
ljmp
pushf
pop
shrb
xchg
sub
inc
push
add
pop
leave
push
jo
iret
arpl
fisubrl
pop
outsl
fisttps
shll
mov
out
fisttpll
icebp
es
mov
xchg
test
jp
mov
xchg
faddl
nop
inc
xchg
clc
jne
jmp
xchg
mov
enter
or
push
add
mov
add
sub
mov
push
insb
pushl
sub
hlt
imul
jge
jl
imul
lret
mov
push
mov
push
xor
xchg
cwtl
jg
call
push
fistpll
xchg
add
into
sbb
pushf
mov
in
fnstcw
fstpt
inc
cmp
outsl
cs
jg
dec
iret
ret
adc
inc
ret
cmp
outsb
imul
sbb
in
cwtl
push
mov
adc
clc
jecxz
into
inc
pusha
in
pop
sub
lock
lea
lds
mov
adc
scas
call
cld
jb
adc
xchg
das
push
out
push
dec
pop
lret
inc
add
loop
dec
xor
mov
in
jae
mov
arpl
jg
mov
adc
pop
pop
jl
adc
sub
xorl
adc
jne
icebp
mov
outsb
test
lea
adc
int3
mov
mov
arpl
pop
scas
cmpl
cmp
fsubrl
sbb
icebp
xchg
and
jge
test
popa
dec
test
jecxz
sbb
sti
xchg
mov
popf
mov
fisubrs
imul
or
xchg
xorb
in
sub
inc
ficompl
daa
mov
test
test
subl
fs
ds
cmpsl
mov
dec
add
cmpsb
and
pop
push
les
test
ss
push
aaa
rdtsc
pop
mov
cmpsb
movsl
and
dec
xchg
add
sub
jecxz
mov
out
movsb
pop
leave
adcl
mov
sti
cs
push
je
push
pushf
add
jle
adc
mov
orb
repz
pusha
pop
dec
lock
ds
mov
cld
movsb
fs
pushl
sti
lods
add
ds
and
push
out
popf
popf
jne
inc
stos
mov
mov
sbb
call
stos
cmp
inc
jg
sub
insb
jne
cmp
fsubl
mov
ss
mov
mov
pop
push
sub
lret
or
std
or
std
lock
or
sbb
xchg
cltd
pop
sub
fsubrs
shlb
je
inc
mov
cmp
inc
xchg
inc
jl
pop
sbb
cli
xor
mov
mov
aam
mov
and
popa
aas
lds
mov
mov
mov
int3
call
pop
mov
or
sub
push
roll
loope
and
rcrb
jl
incl
js
adc
rcrb
mov
and
into
pop
mov
lret
mov
lea
xchg
daa
mov
ret
aaa
decl
movb
fdivr
enter
dec
mov
addr16
sub
aam
or
sbb
rep
pop
or
dec
fwait
addr16
xchg
dec
jg
adc
fcmovnbe
jle
sub
popa
out
lret
mov
addr16
jno
xchg
cmpsl
rcrl
push
dec
mov
xchg
push
push
cmp
xor
notl
ja
fmull
mov
jnp
cmp
loope
and
push
sbb
push
test
xchg
pop
xor
mov
insb
jg
arpl
les
in
pop
jno
add
pop
repnz
arpl
sub
jo
cld
rcrb
es
inc
dec
repz
push
lcall
sub
jo
pop
mov
mov
imul
into
fisttpl
sti
sub
rcl
mov
loope
insb
add
pusha
in
outsl
arpl
aad
mov
imul
and
inc
add
mov
loope
dec
popf
and
lods
pushf
aam
push
xchg
fcomp
gs
fcmovnbe
add
fisttpl
test
mov
stos
loop
jb
in
mov
fs
out
jg
jns
rclb
sbb
cs
jno
pushf
les
neg
lahf
xchg
sbb
dec
or
rclb
scas
lahf
fcoml
mov
cmp
outsb
jo
rorb
ret
and
xor
dec
fsubrp
insb
lret
xchg
cmp
xor
sub
mov
cmp
mov
xor
pushf
push
sar
js
je
sbb
pop
stos
movsl
xor
fmuls
sarb
nop
daa
pop
adc
xchg
rorl
fistpl
sub
insl
xchg
push
push
sub
repz
out
pushl
test
jae
mov
dec
adc
movsb
repz
lods
popa
xchg
aam
sbb
jns
pop
add
mov
pop
addb
call
out
es
mov
push
inc
jecxz
mov
out
cld
pop
and
hlt
sbb
xchg
fimull
test
mov
aaa
mov
scas
cmp
dec
push
arpl
adc
jne
mov
sub
imul
inc
js
push
repz
hlt
inc
push
mov
jns
cmp
in
xor
ja
sarb
dec
adc
and
lods
sub
push
nop
out
mov
mov
push
notb
xor
cmp
mov
out
ss
cmp
push
pushf
push
jno
lahf
push
and
enter
mov
push
sbb
std
mov
mov
lea
imul
mov
bound
jecxz
pop
add
lret
and
dec
pop
sub
fmul
lret
inc
sub
popf
cmp
jns
pushf
or
les
sbb
jae
out
loop
decb
je
fbstp
adc
jecxz
and
sub
sbb
pop
icebp
xor
imul
sub
add
push
jle
sti
sbb
aad
int3
faddl
outsb
adc
mov
aam
jmp
xchg
jp
inc
inc
leave
jg
ss
jg
push
lret
aam
cwtl
lods
mov
fldl
push
fsubrl
stos
xchg
xchg
neg
ljmp
xor
sbb
mov
movsl
lds
mov
dec
adc
cmp
test
cmp
jae
push
push
mov
jae
and
xor
xchg
test
aam
imul
ret
jno
ficoms
and
lods
dec
or
out
aaa
mov
xlat
loop
mov
cli
xchg
sub
pop
stos
jge
loopne
ljmp
mov
xorl
fildll
push
push
push
inc
cwtl
fisttpll
lods
add
stc
jnp
rcll
sti
cmpsl
mov
out
xchg
inc
add
addr16
loopne
xor
scas
xorb
cmc
decl
idivl
mov
imul
fs
shlb
aam
jmp
stos
enter
mov
adc
movsb
aaa
imul
gs
mov
or
pop
cwtl
rclb
fwait
xor
push
sahf
xor
pop
fidivs
xchg
cs
mov
push
imul
inc
dec
add
fwait
pop
repnz
lahf
lahf
stc
sub
testb
add
push
xor
jg
dec
jne
int
jae
mov
lret
mov
inc
mov
aas
fcomp
cmc
neg
shl
mov
pop
sub
or
clc
or
in
adc
pop
icebp
enter
mov
mov
xchg
in
fsubl
sti
fidivl
add
pop
repz
sbb
mov
out
pushf
jb
aas
stc
mov
xchg
dec
mov
sub
imul
jbe
cltd
jecxz
mov
je
lea
xor
arpl
inc
adc
cli
mov
xchg
fcomps
ljmp
stos
ds
call
pop
xchg
das
add
cwtl
insb
jp
fidivrs
adc
pop
popa
stc
sbb
aaa
aad
movsl
hlt
fistpl
and
in
inc
hlt
pushf
cli
addr16
sahf
inc
xchg
xchg
ss
cs
and
dec
jo
icebp
adc
stc
mov
js
cmp
imul
fstpt
cmp
das
mov
cwtl
and
or
mov
or
xor
fs
pop
mull
add
cltd
xchg
sbb
loope
ficomps
lods
add
pop
cmpb
sbb
xorb
dec
out
pop
jmp
pop
and
ror
mov
add
xchg
aaa
pusha
and
sbb
stos
push
or
in
adc
push
mov
pop
dec
sub
add
ret
cmc
fsubr
pop
adc
xchg
incl
inc
jle
popf
fwait
test
add
cltd
push
jmp
stc
incb
jbe
mov
fs
sub
push
lods
mov
pushf
xor
fisttpl
out
les
and
les
xchg
rolb
sub
push
xchg
jp
ret
sub
imul
dec
mov
cmp
xchg
add
fucomip
push
clc
pop
lock
lods
or
test
inc
int3
xor
push
push
cmp
shlb
or
inc
roll
popf
loope
add
cmpsl
dec
cmp
xor
pop
sub
movsl
jns
inc
pop
fsubrl
ret
test
ja
dec
dec
pushf
cmp
push
inc
inc
adc
inc
jnp
inc
and
inc
mov
xchg
pop
imul
popf
lods
lcall
popf
repnz
inc
js
adc
xchg
inc
jne
push
jno
scas
sbb
xor
negb
in
or
cmp
insl
ss
and
push
xor
fcmove
sub
stc
mull
or
adc
gs
test
dec
sub
push
add
test
bound
cmp
xchg
inc
enter
sub
aam
pop
sub
fsubp
mov
iret
loope
and
jge
push
push
pop
push
hlt
lret
xor
mov
in
inc
int
xor
iret
dec
jmp
movsl
aad
push
inc
mov
dec
dec
mov
fsub
inc
push
mov
jecxz
js
sub
mov
int
cmp
xor
and
das
rorb
imul
outsb
movsb
aam
mov
cld
jmp
test
sbb
loopne
sub
andl
inc
push
popa
sub
shll
dec
dec
push
xor
adc
cmpsb
pop
lods
popa
jne
pop
jae
fsubl
sbb
mov
push
dec
dec
jne
rorb
inc
inc
jbe
jecxz
pop
test
pop
outsl
addr16
pop
xchg
fwait
sub
jno
jecxz
flds
out
rol
push
pop
repnz
push
jle
sbb
add
pop
bound
or
xchg
sbb
mov
or
adc
jl
popa
pop
or
add
mov
and
add
mov
nop
imul
pop
mov
pop
pop
nop
enter
jg
lea
inc
adc
jmp
lcall
inc
imul
imul
loop
les
sti
sbb
pop
jp
and
sub
cltd
pop
mov
cmp
cmpsl
int3
shll
fdiv
rolb
inc
mov
imul
sahf
scas
fmull
pop
xor
scas
push
rep
daa
lea
shlb
and
das
xchg
loop
cld
jbe
mov
popa
jbe
jge
cli
sbb
hlt
scas
xor
cmp
imul
xor
nop
sbb
sub
jp
popa
gs
xor
push
jge
fcoml
int
scas
in
pop
mov
sahf
in
cld
mov
and
push
lea
pusha
subl
lahf
test
fsubs
mov
dec
mov
add
divl
divb
sub
loopne
and
scas
lds
push
ja
rolb
xchg
insb
arpl
xor
jbe
subl
sub
test
das
stos
lcall
gs
cmp
mov
xchg
and
sub
outsb
enter
jo
xchg
mov
sbb
data16
rorb
mov
or
addr16
lea
push
pop
scas
fisubrs
cld
inc
xchg
shlb
inc
les
push
popf
pop
dec
inc
push
out
mov
popa
sbb
sub
arpl
push
or
pushf
jge
jge
add
cmp
test
jmp
cltd
out
lds
xchg
xor
push
adc
shlb
sub
clc
pop
mov
mov
repz
sub
je
jb
aad
dec
ljmp
push
cmc
into
jle
pop
fmuls
lcall
mov
push
popa
lods
pop
into
lods
adc
fwait
out
fstpl
insb
das
and
xlat
lea
loop
push
jno
xchg
les
push
push
data16
ret
cwtl
dec
adc
mov
mov
add
int
pop
and
add
out
in
imul
in
ja
lods
mov
push
sub
mov
sub
out
jo
lcall
sahf
xchg
adc
dec
lea
and
loop
push
mov
repnz
add
cs
aaa
movsb
jno,pt
push
lods
inc
or
sbb
xchg
popf
push
mov
cmp
bound
or
mov
popf
sbb
popf
jle
inc
insl
shll
mov
jmp
int3
sbb
lret
xchg
mov
or
pop
jg
dec
push
add
dec
xchg
sub
cmpsl
push
pop
sub
mov
pop
jecxz
cmp
jge
xchg
gs
pop
xor
pop
cmpsb
jbe
jbe
ljmp
fildl
jle
ret
data16
xchg
xchg
ljmp
data16
ss
int3
rcr
sbbb
cmp
loope
jno
cs
je
mov
pop
shrb
test
shll
into
int3
sub
popf
sub
pop
cmp
cmpsl
int3
cltd
adc
pushw
ss
jns
idiv
jne
push
or
sub
mov
pop
fistps
mov
out
out
xchg
pop
sbb
cmp
loope
sbb
fwait
cmp
lock
pop
cli
push
cmpsb
lods
clc
movsl
push
aam
popa
mov
mov
setnp
imul
pushf
push
cmpsb
jmp
xor
cmp
mov
or
mov
and
jle
aas
mov
jge
sbb
sub
cwtl
lea
xor
or
xchg
mov
int
mov
clc
clc
push
xchg
pop
cmp
icebp
mov
or
jns
enter
cmp
shlb
out
lods
scas
cmp
push
pop
testl
push
fimuls
cmpsl
imul
or
test
inc
fcoms
pop
sti
xchg
daa
or
loop
iret
ds
lds
and
shrb
sbb
mov
sbb
fwait
outsb
dec
int3
pop
xor
pop
lret
add
jo
test
int
mul
mov
cltd
adc
aas
ret
mov
ss
mov
fdivrl
call
inc
xor
inc
fistl
sbb
pop
ss
mov
cmpsl
jbe
jg
push
xor
loop
popa
cmpsl
sub
push
mov
pop
push
mov
mov
jbe
cwtl
test
cmc
inc
sub
xchg
shll
or
packsswb
lods
js
mov
mov
xchg
in
test
xor
fwait
lret
adc
hlt
test
mov
push
in
add
jnp
idivb
roll
stos
jecxz
add
mov
push
jle
not
std
fisttpll
nop
je
out
mov
movsb
stos
aam
xchg
xchg
xchg
push
xchg
call
in
gs
xor
or
and
jp
jno
or
xchg
in
shlb
mov
pop
mov
movsb
ljmp
in
out
xchg
cmp
push
andb
pop
or
mov
cmp
lahf
outsl
push
fisttps
cli
jo
sub
shll
push
sbb
fucomi
cmp
lods
inc
inc
fdivl
inc
clc
out
cmp
adc
pop
cld
loopne
inc
sub
mov
jne
dec
pop
cmpsb
fistl
je
mov
xchg
fcomps
out
popf
jp
mov
enter
cltd
leave
add
push
sub
in
mov
nop
xor
pop
shll
pop
pop
ret
repz
ja
adc
dec
xchg
shll
cmpsl
or
push
pop
incl
fcoml
sbb
pop
mov
ljmp
test
aad
lahf
jne
fldenv
enter
xor
inc
mov
adc
and
sbb
cld
inc
call
les
in
in
push
add
inc
jmp
imul
out
lods
add
popf
js
push
mov
ret
and
das
sbb
xor
or
sarb
mov
rorl
daa
dec
lret
lds
adc
xor
cmp
inc
and
xchg
mov
xchg
movsb
or
movsb
add
repnz
ret
pop
xchg
test
iret
cltd
insl
inc
out
mov
mov
in
add
out
cmpsb
test
jg
dec
repz
sub
or
or
xor
sbb
xor
jo
out
sahf
jns
insb
xor
sub
sbb
inc
sub
inc
call
inc
fidivrl
or
lock
sbb
dec
shrb
xor
mov
inc
ljmp
loopne
or
jmp
pop
lock
push
sbb
out
ljmp
fcomi
adc
push
mov
enter
iret
fwait
nop
stos
or
mov
mov
inc
jae
add
sbb
cmp
sub
dec
mov
dec
or
daa
mov
out
or
int3
cmp
insb
mov
and
or
and
mov
int
xor
pop
mov
push
pop
bound
movsl
xadd
or
imul
out
inc
scas
int3
and
push
xor
inc
stos
fists
pop
sub
or
test
push
push
adc
or
pop
incb
adc
sti
ds
mov
sbb
mov
rorl
or
bndldx
ja
arpl
or
xor
mov
add
pop
pop
jmp
int
mov
std
push
add
aas
addr16
mov
sarl
mov
ljmp
xor
stos
out
std
out
cmp
fisttps
jle
cli
push
stos
arpl
jmp
clc
sub
push
push
mov
and
cmp
cmc
dec
int
lods
out
jne
cwtl
cmp
dec
cmp
add
aaa
frstor
loop
leave
or
xchg
repz
into
rorb
mov
push
orb
mov
lcall
mov
clc
push
ret
shl
xor
sub
mov
mov
cmp
repz
push
sub
cmc
clc
jb
fldl
mov
subb
push
xor
fisubrs
push
pop
bound
adc
mov
pushf
fldl
shrl
call
jb
leave
mov
inc
push
jg
pusha
add
mov
loop
xor
clc
roll
mov
ficomps
push
nop
popa
jb
sbb
int
and
std
mov
pop
pop
cmp
fmul
cmp
mov
and
xchg
push
jne
mov
repnz
pop
pop
sbb
xor
popa
leave
and
outsb
lret
or
mull
fs
out
dec
cmp
and
xor
mov
push
lods
cltd
movsl
idivl
sbb
insb
mov
lret
mov
lea
frstor
mov
sub
adc
push
call
jae
inc
push
pop
sahf
ja
stos
inc
ret
std
xchg
sub
ret
inc
or
call
jp
in
test
xchg
jl
inc
and
fstpl
push
fcmovne
hlt
or
pop
insb
xor
imul
sub
add
or
mov
sbb
xor
fidivrl
xchg
fimuls
stos
repz
dec
xchg
std
mov
cld
dec
push
jecxz
enter
outsb
test
pop
dec
dec
cs
inc
dec
das
lods
fwait
loope
jne
aam
testb
mov
jge
xor
daa
mov
orb
jg
rol
and
clc
xchg
mov
push
imul
mov
push
add
ja
cmc
stc
dec
adc
and
inc
test
jp
dec
and
cmp
lods
mov
push
incb
hlt
and
dec
mov
mov
jp
pop
loop
mov
xor
mov
sti
arpl
sarl
cmp
insl
shlb
and
and
lds
movsl
cli
and
sub
daa
imul
idivb
jbe
xchg
insl
sbbl
push
mov
in
adc
mov
iret
ret
outsb
sub
imul
mov
testb
jle
xchg
les
stos
sub
mov
cltd
out
lahf
mov
in
rcl
out
jl
dec
outsb
and
sahf
and
push
leave
into
psrlq
sbb
dec
lds
xor
cmp
int3
push
ljmp
cmp
jle
inc
fcom
cli
cli
out
les
mov
cld
sarl
ficomps
jp
adc
fs
aam
lret
sarb
es
push
pop
mov
out
daa
dec
push
push
xchg
adc
cld
push
repnz
aam
mov
or
rolb
push
mov
test
call
movsl
shl
xor
imul
cmpsb
sub
mov
cmp
jae
aaa
addb
call
arpl
adc
je
stos
icebp
push
sbb
xlat
je
aas
push
sar
shrl
out
lcall
cli
repnz
fdiv
rorb
stos
cmc
add
mov
push
xchg
mov
mov
shlb
ficoms
xchg
pushf
cmp
in
xor
mov
push
pop
adc
or
or
imul
pop
dec
push
and
mov
daa
int3
xorl
aaa
jb
pop
jecxz
das
cltd
lret
fwait
push
or
adc
into
jb
pop
pop
push
dec
leave
push
bound
mov
xchg
outsb
mov
rcl
dec
mov
mov
push
std
and
lahf
add
mov
cld
push
in
jge
sarb
shrb
xor
mov
xchg
dec
in
stos
push
add
mov
fmul
xor
pop
xchg
sbb
adcb
xchg
xor
ss
sti
test
xchg
fstpt
daa
adc
iret
dec
mov
push
mov
jae
mov
mov
leave
into
sbb
addr16
ss
and
icebp
dec
jae
dec
lcall
out
jb
inc
inc
cmc
mov
leave
aad
fucomp
repnz
repnz
gs
mov
sub
jns
cmp
dec
arpl
cli
dec
movsl
fwait
jecxz
lods
adc
outsl
dec
imull
xlat
ss
loop
mov
cmc
or
imul
cmc
sbb
cmp
test
add
xor
insl
and
test
cmp
xor
inc
sub
icebp
in
mov
daa
in
in
faddl
into
roll
xchg
icebp
mov
cli
xchg
mov
loopne
iret
adc
and
sbb
xchg
dec
loope
sbb
mov
test
frstor
push
adc
and
popa
mov
mov
popa
or
pop
sbb
push
out
fstps
aad
in
call
loop
ja
push
push
ret
mov
negl
stos
dec
stc
in
mov
test
cmp
mov
fsts
cmpsb
das
movsb
or
ret
add
mov
insb
mov
out
loopne
cs
jg
sbb
sbbb
cmp
xchg
push
pop
and
adc
sbb
repz
aam
mov
lret
insb
roll
mov
movsl
sbb
in
iret
mov
cmpsl
add
leave
clc
lcall
xlat
incl
je
fwait
outsb
fisubl
or
pop
adc
lret
cmc
pop
xor
or
fstl
arpl
jnp
stc
icebp
sub
sbb
pop
rolb
out
arpl
mov
push
or
je
add
jle
pop
mov
fstp
inc
push
dec
cs
mul
das
icebp
rorb
add
mov
adc
and
dec
lret
cltd
stc
incb
test
push
push
call
mov
add
sbb
in
add
xor
mov
lahf
and
shrb
push
pop
or
jne,pt
test
mov
xor
hlt
das
stos
mov
loopne
aas
xor
xchg
in
and
ror
scas
rolb
loope
pop
jbe
notl
mov
decb
loopne
loopne
lahf
repz
pop
adc
lcall
mov
mull
sub
and
xchg
or
push
mov
gs
pop
idiv
push
jl
std
jp
es
cmp
test
mov
dec
sbb
add
imul
jmp
in
cld
push
jl
insl
xchg
push
cmp
jle
lods
loopne
pop
adc
dec
iret
sub
adc
rcll
sub
xchg
cmp
adc
into
jp
sbbb
push
adc
push
push
xchg
inc
lret
insl
push
das
jmp
rorb
push
hlt
std
jecxz
sbb
add
in
lods
js
pop
sub
and
ret
std
jo
inc
adc
mov
add
mov
push
dec
cmp
ss
int
or
push
es
iret
call
pop
adc
mov
ret
pusha
nop
aas
sbb
adc
xor
jne
cmp
pop
bound
repz
mov
test
dec
ret
sbb
jp
sbb
or
push
push
xor
mov
mov
out
sub
xlat
addr16
inc
je
hlt
inc
push
cwtl
mov
xchg
cltd
cmpl
dec
add
imul
mov
dec
xchg
mov
ljmp
bound
pop
cmp
dec
jb
jns
aad
loope
xchg
outsl
xor
jno
or
imul
mov
repz
dec
dec
fmull
popa
arpl
and
icebp
lods
cltd
dec
ja
and
jmp
mov
mov
sbb
push
adc
ret
in
xchg
cmpsb
sbb
cli
dec
into
push
push
push
les
aad
pop
psubusb
stos
and
loopne
sbb
xchg
inc
insl
mov
enter
mov
es
aad
testl
or
pop
jg
mov
imul
cwtl
sbb
add
out
leave
test
cltd
cmp
xor
add
jge
int3
in
int
fwait
sbb
dec
scas
movsl
mov
sub
pop
sub
mov
push
call
pop
push
xchg
sahf
push
inc
addr16
sahf
add
jg
insb
gs
pop
cli
and
push
jmp
jp
dec
insl
fst
ret
or
test
and
push
xchg
mov
cmp
loope
dec
cwtl
or
mov
inc
clc
push
lea
cmp
fwait
aas
xchg
movaps
inc
mov
sub
imul
pop
adc
in
fdivr
or
sub
add
dec
adc
jne
pop
mov
movsb
hlt
notb
in
inc
pop
int
and
or
xlat
pop
rcr
std
popf
cmp
pop
outsl
inc
mov
imul
cmovp
es
jp
add
mov
dec
adc
rolb
mov
insl
dec
sub
in
push
pop
in
test
inc
xchg
sbb
ss
sti
jl
jno
sbb
jl
call
cltd
aas
ljmp
dec
mov
jp
psrlw
aaa
stos
shrb
xor
jl
adc
xchg
sub
dec
pusha
xchg
adc
dec
in
stos
call
incl
test
or
or
add
dec
xorb
ss
ds
mov
test
scas
and
xchg
cwtl
fwait
sarl
std
dec
imul
lahf
push
sub
inc
cmpsl
clc
adc
sbb
push
jae
jmp
xor
std
bound
push
jg
cmp
scas
fwait
sbb
test
xchg
sahf
pop
fst
test
mov
test
inc
jbe
out
int
jmp
xchg
fistpll
lds
inc
sbb
adc
cmp
mov
loope
lret
jne
mov
sbb
mov
mov
mov
aas
stos
fstpl
out
out
inc
jb
add
mov
xchg
dec
cli
mov
stc
or
es
shll
adc
sub
gs
dec
inc
xor
and
push
mov
inc
int
cmp
insb
in
pop
mov
xchg
cmpsb
dec
push
movsb
ret
sub
lahf
mov
mov
mov
pop
into
jnp
lret
cmc
adc
rcrb
dec
clc
cmpsl
test
xorl
xor
popa
push
mov
sbb
test
and
fstp
mov
repz
or
sbb
les
rorb
ljmp
cli
mov
in
cld
dec
mov
pop
and
or
mov
push
cmpsl
sti
sub
xchg
jg
and
fistpl
mov
cmpsl
popa
mov
sbb
pop
ret
mov
mov
xrelease
xchg
push
push
jno
adc
or
insb
call
loop
hlt
xchg
push
cmp
dec
cmp
iret
fadd
imul
pop
fs
shll
pop
rcrb
xchg
mov
pop
dec
pusha
pop
mov
scas
xor
repz
xchg
test
cmp
add
cmp
pop
add
repnz
data16
push
xchg
mov
sbb
and
push
xor
xor
xor
jbe
das
push
rcl
and
movsb
data16
jmp
ss
and
cltd
cs
divl
bound
sti
add
outsl
cmp
mov
mov
inc
jno
xchg
daa
lret
push
roll
mov
adc
test
jnp
sub
add
mov
jle
pop
inc
push
in
insb
pop
sub
fcoml
xchg
jmp
mov
push
aaa
aas
out
xchg
out
push
mov
xchg
outsl
shrb
cmp
out
mov
scas
dec
ror
mov
jecxz
mov
sti
inc
sub
push
mov
xchg
pusha
xchg
jge
dec
negb
push
mov
es
outsb
lea
into
punpckldq
push
push
pop
cwtl
dec
fucomi
movsb
mov
add
pop
add
pop
cltd
mov
xor
jl
iret
aas
pop
mov
daa
adcb
xor
xor
or
xchg
clc
xor
pop
sarl
sbb
adc
lahf
movsl
jae
mov
add
pop
mov
push
mov
mov
cs
rcrl
and
jmp
lock
out
mov
test
je
adc
mov
cltd
inc
lret
cmp
add
adc
cmp
inc
in
ds
pusha
cs
cwtl
leave
mov
out
xor
addr16
adc
cmpsl
icebp
inc
ror
mov
lods
int
sub
dec
adc
pop
inc
dec
aad
adc
cmp
mov
jge
pop
movl
lret
mov
scas
sbb
sahf
popa
inc
mov
dec
xchg
test
jmp
add
jge
xchg
mov
lock
repz
rol
push
cld
mov
adc
ficoms
xchg
jne
xchg
outsl
pop
mov
xchg
cltd
es
sub
push
incl
out
out
popf
dec
or
mov
loope
adc
out
lcall
mov
movsb
insb
andb
xchg
or
ret
imul
mov
mov
sahf
mov
jae
test
lds
sahf
aad
cmpsl
xor
ds
mov
lea
pop
inc
lock
push
sbb
lahf
push
ret
arpl
sbb
xor
aad
xor
rolb
nop
inc
int
scas
icebp
inc
add
mov
jecxz
xor
cltd
subl
cmp
popf
push
adc
fisubs
adc
stos
aam
cmpl
lret
popa
fnstenv
ds
cltd
pop
bound
or
test
lcall
xor
pusha
decb
loopne
or
pop
xchg
push
mov
pop
jns
cltd
hlt
pop
lahf
stc
xchg
xor
push
add
push
or
dec
idivl
add
stc
xor
pop
add
and
mov
jge
por
xchg
dec
insl
mov
xchg
sarl
subl
push
push
addr16
pop
test
pop
inc
mov
pop
fnstsw
xchg
cwtl
test
inc
fiadds
and
dec
out
adc
cmpsl
movsb
mov
sbb
nopl
dec
loope
and
js
jmp
aas
lret
or
aad
jp
jle
test
cmp
sti
in
fwait
xor
gs
pop
or
sbbl
roll
stc
jecxz
xchg
rcr
xor
or
xchg
out
stos
test
mov
inc
fdivl
pop
jmp
push
lret
xchg
jb
fs
test
cmpsb
push
cmpsl
pop
xchg
rol
fcoml
xor
jecxz
and
and
and
neg
xor
pop
es
xchg
jle
sbbl
push
adc
pop
mov
lods
and
rcr
sahf
outsl
loop
stos
loopne
push
rorl
xor
stos
cmp
dec
sub
mov
lods
pop
int3
or
fisubrs
mov
jne
adc
test
mov
cli
sub
lret
pop
mov
and
xor
sbb
xchg
jge
out
cmpsl
adc
mulb
loope
iret
or
jno
dec
mov
mov
stc
mov
shr
ficoms
aam
xor
inc
into
sbb
mov
cmp
gs
or
into
sti
aam
repnz
rcrl
es
arpl
rcll
jno
cltd
cwtl
mov
dec
push
mov
ja
fucomip
xor
inc
dec
add
orb
fmuls
es
inc
xorl
test
and
clc
shl
frstor
mov
xchg
loope
sbbl
inc
push
sbbl
and
fbstp
mov
popa
mov
mov
xchg
cmp
jbe
pminsw
into
test
ss
lcall
testl
repnz
or
fdivrs
push
fldcw
ljmp
lds
sbb
cli
arpl
and
mov
cmpsb
cmc
and
mov
jae
testl
imul
add
add
adc
fldenv
lea
adc
test
push
int
popa
bound
push
sbb
out
mov
movl
addr16
daa
out
sub
cmp
push
lret
sub
pop
nop
jb
pop
insl
movsl
ss
sub
fildll
jle
loop
jle
mov
cwtl
mov
add
xor
in
aam
ljmp
jnp
mov
addr16
outsb
cmp
sbb
cltd
mov
lcall
push
xor
cmp
xor
dec
lock
out
shld
loope
int3
fwait
mov
popf
adc
cmp
and
jbe
cltd
loopne
dec
mov
sbb
xorl
enter
jecxz
stos
and
cmp
lods
mov
add
push
pop
iret
cmc
rcrl
in
daa
push
cwtl
push
movsb
rcll
and
scas
mov
imul
xchg
das
xor
mov
xor
daa
mov
gs
ljmp
les
xchg
inc
push
xor
out
inc
mov
pop
arpl
aad
aad
push
jo
jbe
cmpsl
cmp
jmp
test
push
fsub
lods
dec
fidivs
rcrl
dec
add
push
push
je
cmp
adc
mov
mov
mov
loop
loopne
xor
in
xchg
leave
sahf
fwait
sub
cltd
movsb
pop
outsb
pop
lds
ja
iret
xchg
call
ret
mov
cmc
and
gs
xor
mov
fisubrl
xor
cld
cs
jbe
fs
push
or
mov
or
mov
and
push
clc
xor
dec
bound
add
dec
jg
mov
clc
adc
mulb
xor
mov
push
jns
jp
insb
adc
lock
ret
push
adc
xchg
orl
mov
es
in
ret
test
jbe
jecxz
movsl
insb
and
push
adc
jae
leave
cmc
cwtl
ds
or
xlat
rcr
adc
jp
into
push
js
cmp
sub
sbb
cld
loope
pop
out
add
aad
aaa
lods
add
test
stc
stos
cmp
mov
andb
xor
outsl
xchg
push
and
aam
bound
mov
ret
or
mov
inc
cmp
push
mov
test
pop
pop
xor
das
and
jle
adc
adc
sub
xchg
jl
jb
dec
push
xor
jle
adc
adc
jecxz
divl
cli
jecxz
push
jp
repnz
pop
jl
or
les
enter
jno
mulb
les
pop
jae,pt
cmp
or
scas
mov
pushl
or
cmpsl
test
adc
sub
push
lahf
jl
mov
fs
push
fwait
test
scas
out
and
orl
movsb
mull
repz
insl
rcll
test
sub
lods
lds
jle
pop
into
jbe
or
popf
cld
lcall
xlat
aaa
pusha
inc
pushf
enter
cmpsl
mov
cs
mov
testl
movsl
adc
pop
mov
jge
nop
or
sbb
adc
inc
rcr
mov
repnz
je
loopne
cmc
pop
popa
outsb
xor
shr
jge
lea
pop
xchg
jae
jnp
cmp
out
jns
shrb
jecxz
jl
fistpll
pop
xchg
adc
mov
xchg
mov
xchg
jp
nop
sub
dec
dec
cld
cmp
inc
js
aas
notl
lcall
adc
pop
dec
gs
dec
subl
lock
push
iret
xor
mov
inc
enter
mov
repz
out
push
and
enter
mov
and
xor
push
or
ss
fdivrs
or
sbb
stc
and
movsl
or
cmp
jmp
scas
fiaddl
pop
add
cmp
loope
mov
lock
add
push
scas
mov
dec
in
pushw
xor
mov
push
adc
mov
and
or
ret
pop
dec
xchg
jecxz
inc
fdivs
iret
inc
lock
cmc
imul
imul
xchg
push
mov
adc
sbb
xchg
fwait
mov
xor
xor
pop
test
mov
mov
sub
and
popa
xor
mov
pop
std
into
loopne
sbb
out
sbb
clc
setbe
mov
incl
lea
xor
ljmp
mov
sbb
cmp
jge
nop
out
test
jecxz
or
cmp
mov
and
xchg
call
cmc
lock
jle
dec
xchg
mov
push
cmpsl
push
xchg
mov
pop
push
dec
lcall
pop
jle
mov
jns
cmpsb
ljmp
daa
andl
mov
int
repz
xor
fwait
adc
push
out
jnp
movsb
loope
lret
inc
fildl
vucomiss
outsl
mov
mov
xor
pop
rcrb
mov
mov
cltd
aam
bound
daa
mov
repz
cmp
and
dec
lods
iret
cmc
loope
sub
fmull
insb
push
dec
dec
shrd
mov
xor
lods
inc
lahf
lock
clc
mov
fwait
xorb
dec
mov
mov
adc
mov
push
mov
or
lea
loopne
imul
mov
jle
jns
jnp
fnstenv
pop
xor
mov
outsl
leave
mov
cld
push
cmp
pushf
or
inc
jle
cmp
jmp
pop
xchg
mov
xorb
insb
jae
add
push
lods
pop
repz
aad
pop
popf
stc
les
cmc
mov
clc
cmp
xchg
inc
adc
fnsave
push
push
jnp
lcall
dec
jns
inc
mov
mov
jae
pushf
icebp
out
mov
mov
xchg
punpcklwd
mov
shll
xchg
test
outsb
test
push
mov
adc
sbb
inc
loopne
call
addb
fwait
xchg
bound
rorl
xchg
nop
int
cmc
daa
xchg
loope
or
add
xor
pop
sbb
ficompl
movsl
repz
arpl
jge
mov
cmp
jp
rolb
rolb
pushf
mov
push
aam
or
sub
rol
mov
xor
addr16
dec
mov
and
scas
cld
pop
sbbb
in
sbb
jge
fxtract
add
mov
mov
mov
std
les
mov
or
push
mov
cwtl
inc
mov
jge
sbb
rol
dec
ljmp
pop
pop
sbb
push
xor
mov
ds
outsb
ss
test
xlat
aam
lret
sahf
pop
jge
push
aaa
call
lods
mov
insl
add
testl
cmpsl
mov
cltd
add
aad
addr16
sub
je
push
into
pop
xchg
jb
fsqrt
sub
inc
mov
mov
mov
xlat
cmpl
pushf
mov
les
pop
adc
push
mov
test
add
gs
dec
rcrb
cmp
repnz
mov
insb
jl
mov
xor
lock
shll
in
cmp
aad
out
adc
add
or
inc
cmp
push
fldt
cmp
jge
repz
out
push
loop
loop
sbbb
cs
loop
loope
lods
cs
cmp
ret
bound
insb
pusha
leave
add
inc
repnz
pop
xchg
fdivs
lock
rol
idivl
push
rcpps
arpl
and
stos
lahf
clc
sub
rclb
ja
dec
aam
jne
pop
pop
push
sbb
cmp
clc
ret
push
sub
int
xor
mov
repz
in
mov
cmp
int
in
pop
sahf
in
out
movsl
lods
ljmp
dec
stos
sub
out
and
iret
push
cli
and
pop
sti
dec
sbb
push
scas
xor
mov
addr16
shrl
pop
pusha
dec
xchg
mov
or
jg
inc
pop
movsl
sahf
push
lods
adc
aam
shlb
jns
jmp
inc
pop
push
test
je
outsl
push
gs
movsl
outsl
mov
mov
hlt
movsl
sub
out
or
mov
pushf
clc
push
dec
insl
dec
mov
jle
or
push
cltd
cmc
add
orl
lret
adc
xchg
add
cmpsb
arpl
dec
dec
xor
inc
ljmp
int
xor
sub
inc
fimull
xor
movsl
sti
in
sub
push
cld
lds
or
jo
arpl
into
repz
stos
adc
inc
pop
jnp
dec
int
mov
gs
jo
loop
inc
ss
sbb
lret
pushf
mov
rolb
mov
xchg
loope
mov
test
ja
pushf
in
mov
daa
stos
sti
fcompl
test
lds
push
and
jbe
xor
std
mov
mov
add
mov
xchg
and
fldt
ss
xchg
aam
test
mov
xchg
or
call
xchg
mov
pop
pop
adc
jns
in
sbb
lcall
xchg
out
mov
pop
adc
pop
in
pop
jbe
jbe
push
jo
lret
sti
sti
mov
rol
loope
imull
repz
aas
xor
aaa
push
mov
int3
outsl
xor
cmp
repnz
jne
sub
sahf
dec
pop
in
xchg
andl
movsl
cmp
jb
or
push
push
loop
jge
cwtl
pop
jae
sub
xor
sbb
gs
inc
decl
sub
into
insl
cli
lds
out
adc
addr16
int3
js
xorl
sub
sub
and
jmp
xlat
pop
mov
pop
cmp
jb
cmc
sbb
fisubs
stos
jecxz
out
cmpsl
push
mov
and
inc
enter
insl
sub
loop
frstor
and
mov
pop
push
fcompl
aam
lods
repz
iret
addr16
daa
cwtl
outsl
and
movsl
mov
xor
rorl
add
into
divl
jno
mov
inc
ds
fwait
inc
fbld
inc
jae
cmp
lods
out
insl
jle
aaa
mov
push
add
and
stos
sbb
testb
test
xchg
scas
mul
mov
fidivrs
inc
stos
test
xchg
dec
leave
std
cmpsl
outsb
fsubs
add
pop
or
repz
fdivr
subb
mov
push
nop
or
jbe
in
aad
push
xor
pusha
divl
dec
test
sub
push
arpl
add
adc
sub
pop
cli
xor
push
or
xor
add
adc
sbb
std
cmp
insl
and
frstor
adc
test
bound
pop
call
cmpsb
insb
jne
sti
xchg
and
lods
hlt
sub
push
cli
out
cmp
or
and
pop
fidivrs
orl
mov
popf
and
js
addl
ds
sub
cwtl
aaa
mov
gs
xor
andl
mov
inc
int
sbb
or
sbb
inc
fcomps
test
ss
sahf
sahf
fisubl
int
scas
add
mov
mov
repz
push
pop
nop
sbb
push
mov
mov
aad
mov
pop
rcll
movsb
imul
repnz
pop
or
add
jmp
xchg
out
mov
lds
dec
ret
call
jl
pop
int3
xor
stos
xor
dec
pusha
dec
scas
lods
es
push
out
mov
ficoms
ljmp
mov
daa
std
iret
adc
lea
out
movsb
mov
fs
aas
dec
bound
movsl
repz
dec
pop
xchg
fcmovnb
fsubrs
push
iret
and
ljmp
loop
lcall
or
insb
xchg
sub
out
hlt
jl
les
adc
lahf
add
mov
fisubrl
insl
mul
cmpb
sbb
lods
inc
rcr
pop
insb
icebp
dec
sbb
pop
or
lret
cltd
mov
mov
dec
xchg
mov
adc
adc
insl
cmp
xor
xchg
dec
sub
xor
fistps
xchg
mov
push
lock
insb
js
adc
lret
xchg
mov
shrb
in
xchg
loope
jbe
stc
cmc
jmp
aas
or
aaa
and
dec
mov
leave
pusha
inc
imul
mov
test
sbb
aaa
pop
clc
lds
daa
std
ss
mov
repz
lahf
insb
jne
adc
sub
mov
inc
and
push
cwtl
cmp
and
xchg
cmp
loope
mov
mov
sbb
rclb
cmpsl
adc
sbb
jp,pn
mov
or
xchg
cmp
in
rolb
in
sbb
or
xchg
aam
imull
stos
dec
scas
fwait
icebp
dec
popa
in
lods
push
dec
das
rcl
adc
in
ret
stc
cmp
and
xchg
sbb
jecxz
mov
daa
adc
push
jle
jbe
out
lods
movsb
add
sub
pop
in
loopne
adc
arpl
jns
xor
jl
push
scas
shll
pop
pop
pop
xchg
out
fs
mov
jl
inc
ret
dec
adc
add
and
xchg
xchg
outsl
cmpsl
xchg
mov
cmp
clc
sbb
icebp
mov
dec
jecxz
and
or
out
mov
jle
aas
arpl
xchg
lret
lahf
rolb
pusha
lods
and
adc
add
hlt
daa
cmp
int
and
iret
mov
cmpsl
and
pop
ds
ror
sbb
jns
pop
jle
add
cmp
mov
dec
add
jp
mov
ret
imul
movsb
add
sub
jp
lds
lods
popa
cmpsb
sbb
jle
adc
push
sub
xchg
sbb
outsb
aas
mov
or
jbe
or
pop
movsb
sub
movsl
and
mov
dec
sub
sub
das
mov
movsl
mov
stos
insl
lods
jns
mov
icebp
popf
cmp
icebp
mov
lods
push
jecxz
sub
mov
adcb
out
inc
les
fisubs
mov
cmc
pop
call
cmpsl
push
xchg
cwtl
loop
ror
aaa
sti
fisubl
jle
sti
out
sub
fcompp
pop
data16
sub
mov
cmp
insb
stos
test
cmp
cmp
ja
dec
insb
mov
cmpsl
and
cmp
iret
or
fs
jge
push
in
adc
lret
push
adc
jns
xchg
add
test
sbb
xor
xlat
sub
sub
cli
mov
in
lret
mov
xchg
push
sbb
int3
cli
adc
push
dec
call
adc
push
loopne
test
in
ss
pop
iret
xchg
js
cmpl
xchg
aad
sarl
idivb
nop
mov
jecxz
popf
pushf
ljmp
add
xor
pop
sbb
and
dec
test
cltd
cmp
mov
cmpsb
negb
fnstcw
ds
fdivrl
test
in
aad
stc
gs
fdivrs
out
into
mov
or
ret
cmpsl
xchg
mov
push
ljmp
push
pop
push
imul
or
loopne
and
bound
mov
incl
lock
movsb
fdivs
or
jge
xchg
out
fwait
andl
lds
mov
mov
pop
push
and
rclb
adc
jo
fdivp
loope
dec
xchg
push
mov
push
sahf
pusha
rclb
lret
mull
dec
adc
or
insl
pop
mov
loope
add
cmpsl
adcb
popa
int
mov
or
add
fcompl
pop
fmul
cmp
jbe
pop
cmc
stos
imul
dec
sar
stos
cwtl
pusha
daa
ds
sub
cli
jecxz
lods
pop
xor
jne
orl
sub
dec
ds
inc
fidivrs
add
jns
mov
iret
addr16
fwait
out
mov
xlat
pushf
stos
jmp
out
inc
test
lds
xchg
sbb
nop
xlat
lods
or
or
adcb
lcall
incb
dec
rcll
xor
sti
push
dec
pop
push
pop
jnp
xchg
push
js
inc
das
jmp
gs
movsb
cmp
inc
xchg
jl
enter
adc
jmp
lret
or
mov
and
aaa
push
rol
test
mov
sti
insl
mov
sti
jns
cli
xor
jns
shll
dec
mov
outsb
and
or
jge
xlat
mov
addl
add
leave
jb
out
cs
cmc
arpl
pop
dec
mov
cmp
push
fcomps
push
or
jecxz
rcr
aad
hlt
stos
pop
inc
leave
imul
mov
pushf
shll
and
test
das
xchg
inc
fwait
inc
xchg
sub
mov
aad
arpl
repnz
rorb
xor
fldenv
mov
jg
out
stc
and
or
movsb
es
adc
jnp
pop
in
inc
push
sbb
ret
inc
dec
imul
das
dec
sbb
or
pusha
or
fstpt
addl
push
ljmp
mov
imul
dec
dec
enter
je
mov
xchg
out
das
ss
lret
scas
xlat
arpl
jl
adc
adc
enter
test
cwtl
jle
xor
imul
ftst
push
add
enter
orl
fidivrl
sub
dec
inc
pop
pop
ss
adc
jge
or
mov
push
cmp
popa
mov
imul
fcomip
add
test
push
mov
sub
dec
hlt
aaa
sbb
pop
mov
jae
jb
mov
cmpsl
loopne
and
cmpl
ss
push
jg
mov
cmp
jbe
in
adc
jae
enter
orb
xor
mov
lcall
arpl
cwtl
mov
pop
pop
pop
lods
dec
fdivl
dec
cmp
test
scas
mov
in
lds
lahf
mov
add
mov
mov
dec
push
and
ret
add
outsb
int
jb
dec
pop
jmp
lock
sub
dec
mov
pop
hlt
shrb
xchg
jmp
int
sub
ds
xorb
add
pop
jg
jle
cs
addr16
in
or
mov
push
lahf
push
or
fimuls
clc
cwtl
sub
sub
fisubrl
jp
in
bound
in
idivb
fidivrs
mov
push
mov
cld
xor
and
or
dec
jmp
bound
xor
and
mov
jg
add
loop
jae
scas
lods
scas
fs
pop
cli
jns
and
xor
enter
popf
filds
xorl
adc
pop
jcxz
push
movsb
jge
cmp
call
insl
stc
mov
pop
and
std
pop
jns
dec
dec
and
int
sbb
cmc
cmp
xor
mov
pop
pop
xchg
in
add
sub
ss
in
call
or
pushf
sahf
xchg
mov
call
or
imul
xchg
xor
adc
inc
shlb
adc
cmp
mov
fmulp
push
int
mov
das
add
dec
lret
sub
jp
jp
cmp
mov
mov
scas
movsl
jno
dec
hlt
mov
or
fimuls
fidivs
mov
and
out
fnstenv
sub
jb
jecxz
push
ss
ds
rcrb
adc
flds
xchg
xlat
jnp
out
or
xchg
stos
addr16
inc
jno
jge
fmull
imul
aad
sub
mov
cmc
or
mov
sti
out
sub
jne
pop
aad
in
xchg
or
sbb
jecxz
xor
xchg
push
pusha
movsb
jbe
dec
pop
sti
adcl
mov
cmc
in
cmc
adc
dec
stos
mov
jnp
push
enter
fadds
push
dec
mov
push
add
push
dec
loopne
movsl
dec
into
sbb
inc
cs
push
jmp
mov
sub
repz
sub
stc
inc
dec
cmpsl
jnp
imul
orl
out
inc
clc
adc
sbb
std
movswl
mov
and
and
and
shrl
jnp
mov
inc
jne
loop
scas
cmp
lods
daa
dec
mov
cli
push
cmpsb
mov
xor
or
test
iret
and
test
and
idivl
push
and
repnz
inc
clc
sahf
sahf
and
loop
cmp
push
testl
in
aas
inc
jle
or
lret
scas
jmp
adc
rolb
cmpsl
push
mov
ljmp
cwtl
je
xchg
fists
jnp
mov
cld
mov
lods
cmp
mov
cmp
pop
clc
xchg
fdivrs
jb
lret
jno
mov
mov
jp
fwait
cwtl
xchg
in
xor
cltd
xchg
xor
sbb
clc
xchg
push
std
out
les
mov
mov
xchg
rorb
xchg
fmull
xor
repz
add
or
sub
icebp
jbe
andb
xorb
push
outsb
and
dec
push
dec
dec
enter
fcmovbe
xor
imul
or
arpl
test
ljmp
mov
lahf
mov
xlat
jae
push
push
js
jmp
jp
inc
scas
in
dec
int3
push
cmpsb
lds
mov
cld
pop
and
mov
cmp
pop
out
sub
aam
pop
xor
int
test
jns
out
pop
sub
jne
xlat
fistps
push
jae
in
and
jg
xor
addr16
add
pusha
mov
cld
push
ljmp
jecxz
arpl
xor
adc
stc
adc
test
mov
mov
imul
or
call
aaa
pop
sbb
call
xchg
test
push
subl
fucomp
adc
arpl
mov
and
icebp
sbb
ret
scas
mov
fs
mov
mov
cli
pop
mov
jbe
into
loop
jns
mov
dec
adc
inc
pop
mov
movsb
mov
mov
sarl
mov
cmp
add
inc
push
mov
dec
xchg
cs
into
lret
mov
jmp
adcl
iret
lods
in
dec
jnp
add
pop
xchg
repnz
and
aad
fdivrl
test
add
inc
std
adc
imul
leave
and
mov
clc
push
repnz
ret
or
cmp
sbb
xchg
lock
repz
mov
sub
popa
mov
ss
cs
bound
mov
adc
pop
data16
inc
vpmovsxbd
divb
xchg
sahf
push
aad
aas
xchg
cmpsb
scas
sbb
in
fs
nop
mov
mov
insb
cmp
or
mov
movl
jbe
add
jmp
leave
into
jg
ret
xchg
jecxz
dec
pop
movsl
xchg
and
hlt
push
add
xchg
jmp
in
cmpl
int3
or
cmc
mov
loopne
es
xchg
stos
inc
mov
out
sub
cltd
push
sbb
bound
pusha
cmp
jnp
pop
daa
out
addl
lcall
pop
mov
cli
cltd
push
daa
pop
adc
jnp
xchg
mov
inc
test
fsubl
dec
mov
pop
pusha
movsl
mov
xchg
roll
out
sbb
push
or
out
in
popf
ja
scas
push
inc
jnp
in
jnp
pop
bound
aad
xchg
mov
inc
sub
popw
out
enter
inc
enter
mov
and
sub
sub
movsl
xchg
jne
lcall
cmpb
adc
or
inc
xchg
std
jle
pop
aas
insb
jo
adc
lods
xor
adc
jmp
insb
or
xchg
js
xchg
or
mov
int
jae
imul
pop
jge
and
inc
enter
sub
gs
mov
xor
xor
cltd
push
add
mul
push
pop
sbb
mov
mov
pop
call
in
lods
cmp
add
push
xchg
and
les
xchg
xchg
popa
pop
and
xor
out
icebp
pop
jp
int3
add
jle
mov
rolb
cmpsl
cmp
adc
xchg
xor
adc
test
dec
jmp
sti
bswap
cmp
divb
imul
je
cld
daa
and
jae
sbb
sub
imull
cmp
add
scas
into
jmp
stos
das
mov
sar
leave
dec
mov
mov
dec
imull
into
push
add
fsubrs
ret
daa
aad
out
subl
movzbl
fisttpll
cld
mov
jo
das
shrb
cwtl
bound
push
ja
das
mov
pop
sti
xor
push
jns
scas
pop
pop
lcall
cs
jb
jecxz
fiadds
mov
insl
aaa
sub
fsubs
cltd
jo
pop
mov
or
and
lea
mull
add
test
mov
cltd
xor
fs
fldt
adc
mov
mov
lea
fidivs
mov
mov
test
lods
cld
gs
sub
cmp
mov
clc
pop
sub
aam
cmpsl
icebp
fcmove
jg
ret
aad
dec
scas
inc
stos
cmp
mov
je
repz
lret
arpl
jae
popa
aaa
dec
or
jo
mov
mov
sbb
xor
push
and
cld
addr16
popf
insb
std
out
or
add
fcmovu
lret
bound
mov
or
jno
xchg
cmp
stos
sub
adcb
pop
lret
cltd
push
and
stc
jge
push
in
aad
ljmp
sbb
sub
leave
cmc
or
mov
sarb
ja
jns
add
incl
mov
rcl
mov
loop
data16
mov
mov
fcomi
and
adc
cld
idivl
ret
or
and
xor
out
enter
nop
cld
or
dec
enter
fs
fdivp
and
pusha
ret
or
cmp
call
sbb
lods
push
pop
gs
mull
imul
mov
jp
je
push
mov
pop
dec
sbb
mov
xchg
inc
pop
enter
sar
pop
jge
into
inc
xchg
notb
fucom
dec
and
in
add
je
mov
xor
icebp
lahf
addl
in
div
test
std
daa
mov
jmp
aas
jns
loope
fwait
pop
pop
stos
adc
mov
cld
sti
cwtl
mov
cmpsl
in
lret
mov
popa
ds
push
push
mov
xor
sbb
stos
cs
mov
xchg
outsb
mov
push
and
in
jo
pop
push
cltd
push
jge
pop
add
out
dec
xor
push
sub
mov
dec
fnstsw
fidivrl
or
xchg
iret
mov
cmp
rol
pushf
scas
iret
pop
push
xchg
cmp
aam
fs
xor
cmp
push
mov
fsubs
xor
loopne
leave
andl
xchg
add
out
adc
jne
mov
mov
insb
mov
hlt
add
in
rcr
cmp
mov
ret
ja
push
jp
add
push
imul
inc
mov
aad
lret
iret
lock
and
jle
std
test
dec
out
jecxz
lcall
and
dec
lock
mov
adc
cmc
push
adc
call
push
clc
in
ret
xor
pop
jl
mov
add
lret
cmp
loope
ljmp
imul
int
add
pop
flds
pop
mov
sbb
add
push
iret
adc
test
sbb
cmp
push
mov
adc
or
mov
movsl
rorb
fmuls
mov
jo
push
inc
mov
pop
pop
and
icebp
xor
in
dec
adc
inc
fwait
rclb
cmp
push
push
ss
xor
adc
outsb
jb
and
cmp
sbb
cld
push
pushf
and
ret
push
sti
loop
sbb
sub
arpl
les
jmp
or
xchg
leave
push
jmp
and
idivl
adc
jbe
push
sti
je
iret
sbb
pop
lahf
lret
imul
or
sub
lods
cmp
into
pop
mov
inc
movsl
cltd
jp
dec
mov
ret
cmpsl
xchg
cmp
push
xchg
or
lods
test
outsb
sub
scas
out
rolb
inc
pop
and
pop
add
cmpsb
aaa
popa
test
ret
inc
pusha
in
push
xchg
xor
fimull
fldt
pop
adc
lahf
adc
inc
pop
imul
and
outsb
mov
push
repz
iret
and
movsl
mov
add
jle
icebp
mov
daa
mov
mov
popa
push
pop
mov
pushf
sti
sbb
jl
add
and
push
ds
or
jg
sub
dec
cli
int
lods
push
sbb
lret
leave
xchg
in
jne
dec
jo
xchg
push
mov
in
out
jecxz
or
sub
mov
and
cmp
pop
mov
and
dec
int3
mov
popf
xchg
sbb
jecxz
cmpsb
mov
dec
test
das
and
mov
es
push
std
sub
lea
lods
pop
mov
aam
int
mov
repnz
test
cmp
shll
fidivrs
mov
sbb
adc
in
lret
divb
push
bound
mov
and
sbbl
stos
fists
jecxz
or
popf
push
loopne
mov
sbb
insb
dec
jge
clc
jnp
xchg
jmp
xchg
add
bound
mov
xor
dec
sbb
popa
mov
adc
icebp
repz
adc
mov
fcomp
mov
pop
xchg
aaa
fisubrs
ljmp
ds
mov
push
inc
xor
scas
cwtl
mov
andb
in
fwait
cmp
pop
filds
dec
imul
add
sti
fwait
mov
or
or
test
imul
das
outsb
mov
sbb
das
test
xchg
in
inc
xchg
and
test
loopne
mov
jb
fdivrs
outsb
or
shll
sbb
les
shlb
jae
cmpsb
mov
lret
lcall
mov
mov
fsubs
lock
cmp
inc
push
ja
dec
xchg
out
cmp
orb
jb
add
enter
mov
mov
rol
pop
cmp
daa
push
sbb
mov
shll
ret
mov
out
popa
cmp
lods
jg
popf
pop
mov
mov
rolb
xor
leavew
fildll
add
xor
cmpsl
rorl
movsb
or
ret
sbb
aas
pop
and
rolb
fyl2xp1
or
popf
push
dec
adc
loopne
add
jnp
mov
out
sbb
push
test
and
mov
cmp
loop
in
cmp
jmp
and
jmp
cwtl
mov
adc
mov
push
cmpsb
fwait
jg
sub
sub
addr16
pop
xchg
inc
mov
dec
cmp
jp
sete
cwtl
lea
movsl
push
add
movsl
add
mov
sbb
outsb
pushf
stos
adc
mov
xchg
mov
mov
cltd
stos
iret
mov
add
xchg
xchg
pop
jbe
inc
mov
xchg
mov
mov
fcoms
mov
adc
add
lahf
icebp
inc
mov
fadds
add
je
addb
fldl
adc
stc
xor
lcall
jno
stc
jmp
int
imul
inc
adc
sahf
jp
cmp
rorb
dec
test
cmp
xchg
dec
dec
dec
movsb
pop
loopne
loope
inc
gs
filds
xor
shlb
jne
cltd
ror
mov
das
aad
in
pop
xchg
in
lods
aas
sbbb
lods
jge
lcall
mov
sbb
bnd
imul
fcomip
aas
adc
scas
inc
cld
dec
adc
arpl
lret
data16
push
sub
pusha
push
xor
out
dec
fs
xchg
xlat
daa
nop
push
push
mov
cltd
rcrb
pop
mov
mov
xor
aad
es
xor
mov
test
mov
pop
pop
lahf
inc
jae
pop
mov
and
nop
and
into
pusha
pushf
scas
in
jo
jg
sbb
inc
xor
ret
pop
lds
fidivl
insb
scas
mov
sbb
insb
mov
pushf
jp
jecxz
jno
gs
iret
add
add
repz
and
or
mov
mov
fsubrs
add
xor
xchg
les
out
xchg
mov
inc
and
fs
mov
in
cmc
dec
sahf
jo
jge
pop
dec
in
pop
sub
lret
cmp
adc
rcl
sub
jp
inc
popf
jecxz
sub
lods
pusha
movsb
lret
push
jne
mov
xor
int
sub
lods
mov
jecxz
or
rol
cmp
xchg
rolb
repnz
sbb
add
mov
pop
dec
je
pop
out
inc
test
or
jp
shlb
xchg
insb
stos
sbb
add
imul
sbb
insb
insb
mov
dec
ficompl
nop
mov
enter
mov
push
out
add
int
sbb
popa
mov
push
mov
movsl
vdivpd
inc
inc
divb
mov
push
dec
and
mov
dec
xchg
jle
dec
add
outsl
inc
push
outsl
mov
add
loope
jmp
scas
sub
aaa
movsb
and
cmpsl
sbb
ds
and
fsubl
adc
push
jmp
pop
cmc
ds
jae
push
push
aad
fimull
clc
call
data16
clc
clc
inc
xlat
pop
dec
cmp
lods
jo
bound
iret
call
subl
arpl
out
push
jge
out
dec
jbe
and
and
and
cmp
mov
test
jbe
mov
dec
ja
rolb
mov
lds
and
or
test
and
imul
pop
cwtl
xchg
cwtl
test
jbe
pop
aas
push
icebp
push
pop
or
mov
inc
or
daa
xor
iret
xchg
mov
jae
andb
fisubrs
inc
and
add
dec
adc
sahf
stos
loopne
int
call
jl
pop
in
stc
mov
iret
rolb
in
mov
xchg
jno
movsb
mov
mov
pop
shlb
lret
mov
xchg
cwtl
push
stos
jbe
fldt
es
pop
push
mov
mov
lods
ljmp
pop
test
jns
push
xor
jb
pop
jnp
mov
std
rcr
les
mov
sbb
dec
testl
or
mov
cmp
push
cmp
or
mov
and
hlt
cmp
sti
dec
cltd
mov
sub
and
xlat
jg
xlat
mov
xchg
fs
fisubrs
fldcw
xor
in
cli
jle
and
nop
dec
pop
cwtl
rcll
jecxz
das
cwtl
inc
cltd
sti
inc
xchg
jnp
data16
mov
sub
inc
dec
rcrl
cmpsl
jl
andb
hlt
mov
mov
and
out
pop
add
jbe
hlt
inc
dec
loop
adcb
xor
fsubp
sbb
fnstcw
jnp
imul
outsb
adc
inc
movsl
xlat
cmp
or
insl
call
mov
sbb
shufps
adc
lahf
add
add
sub
mov
fnstenv
lods
in
jl
popa
jmp
lods
sahf
sub
int
push
addr16
insb
out
push
jb
jmp
daa
ret
ret
lret
push
jge
stos
jo
xor
adc
out
call
mov
fiaddl
stos
xchg
mov
lods
lods
dec
insl
rorb
dec
movsl
fs
mov
lahf
and
test
pop
lret
dec
fidivrs
aas
jae
jbe
jecxz
loope
mov
lret
add
out
fidivrl
test
mov
mov
mov
dec
jmp
arpl
jo
mov
rorl
loop
and
push
push
stos
outsb
adc
fistps
add
pop
push
jbe
pop
icebp
xchg
mov
aas
out
jmp
cli
sub
imul
xor
dec
movsb
jno
inc
jnp
fimuls
dec
mov
sub
or
lret
popa
imul
pushf
dec
out
lea
ficomps
ds
aad
out
mov
pop
inc
dec
lcall
and
arpl
int3
aas
or
clc
faddl
cmp
fsubs
push
rcl
dec
cmp
push
leave
sub
sub
push
mov
dec
scas
inc
mov
add
ljmp
stos
sub
push
mov
sub
iret
push
add
jecxz
sbb
cs
gs
dec
fistpll
mov
pop
push
push
or
sbb
mov
xor
pusha
je
testl
jo
push
dec
jnp
xchg
jo
jge
pop
out
aas
jge
xor
adc
inc
sbb
cwtl
fnsave
jl
cmp
xchg
mov
scas
addr16
in
bound
mov
or
or
ret
rorb
into
add
mov
sbb
dec
pop
jl
sahf
fldenv
add
push
xor
fdivr
xchg
xor
push
test
mov
in
or
lods
and
adc
jle
pop
pop
fwait
pop
inc
fsubs
push
inc
std
and
pop
mov
dec
nop
testb
iret
and
loope
jbe
jecxz
call
insl
dec
cs
ds
pop
cmp
rcll
fcomps
int
ljmp
mov
mov
arpl
ja
jbe
dec
cltd
cmp
push
fnstcw
sbb
or
xchg
push
xchg
lods
nop
jno
dec
dec
mov
dec
pusha
xchg
ret
clc
adc
mov
jo
mov
in
mov
mov
loop
jae
in
les
stos
xchg
popa
stc
sti
and
adc
imulb
js
pop
push
cmp
out
push
mov
adc
jl
xchg
adcb
loopne
mov
sbb
and
xchg
ror
mov
mov
xor
lea
mov
mov
mov
scas
xlat
fistpll
shrb
pushf
pop
dec
movsl
mov
mov
jg
aam
xchg
ffree
scas
in
mov
cli
inc
loope
stos
jb
sbb
jle
out
inc
mov
add
pusha
test
sti
pop
dec
pop
std
fisttps
mov
les
and
mov
dec
scas
into
cld
daa
mov
cmpl
sub
in
rolb
sub
mov
mov
scas
je
sub
stos
fcoms
sub
ljmp
pop
cs
xor
clc
test
or
mov
lcall
sub
add
cmp
in
pop
sahf
xchg
adcl
in
out
and
add
xor
stos
test
adc
lcall
cld
mov
aas
mov
mov
add
sbb
jle
push
push
xor
je
pop
push
mov
mov
popa
and
loope
mov
inc
adc
pushf
fdivrl
xchg
lods
fists
scas
or
jge
pop
push
add
xchg
test
jns
mov
dec
mov
mov
jb
cmp
out
inc
or
clc
mov
xchg
das
xor
fmul
es
xor
scas
xchg
jne
mov
divb
mov
mov
negb
inc
fnstcw
insl
cwtl
inc
fdivrs
aaa
je
pusha
and
lock
shrl
lock
mov
imul
xor
or
dec
lds
je
cltd
gs
shll
adc
mov
jbe
pop
mov
in
ljmp
mov
mov
movsl
je
and
test
das
add
xchg
push
daa
or
xorb
mov
movsl
pushf
in
xlat
xchg
xchg
pop
fldcw
sbb
or
in
mov
inc
mov
xlat
dec
lcall
popa
jno
divb
jge,pt
nop
rorb
rcr
cmp
push
cmpsb
jae
push
lds
sbb
cmp
in
mov
ffreep
dec
mov
ds
jne
sbb
inc
xchg
jp
call
out
mov
xor
cwtl
loop
dec
out
call
fwait
jae
inc
fcompl
stc
adc
pusha
jmp
adc
xchg
dec
out
dec
pushf
cmc
cmp
in
fcmovnbe
adc
mov
cmp
testb
add
sbb
fsubrp
mov
and
bound
mov
mov
movsl
repz
lcall
enter
fldenv
loope
lret
cld
repnz
jl
addb
hlt
pop
pop
pop
sti
pop
lock
fdiv
xchg
repz
lahf
nop
aam
and
mov
adc
cwtl
aas
mov
push
mov
call
cmp
add
sti
popa
lret
sub
outsl
sub
fisubrl
cmp
mov
pop
cmp
subb
movsl
shlb
loopne
cmp
sbb
lock
xorl
in
add
out
xor
jg
jge
cmpsl
sbb
lods
adc
push
decb
loopne
xchg
test
outsl
add
clc
xchg
cmpsl
daa
js
insl
jno
ret
jmp
xchg
mov
lock
push
mov
push
mov
cmp
lods
cltd
push
lods
pop
sbb
outsb
cmc
dec
daa
jne
mov
xchg
and
add
sbb
sub
mov
add
rcrl
add
insl
imul
inc
ds
jle
leave
push
or
bsf
jne
xchg
inc
lods
jle
adc
xor
test
aaa
jno
add
xor
popf
cmp
out
loopne
testl
outsb
mov
inc
cmpsb
mov
lahf
ficoms
jl
pop
sbb
jg
mov
inc
loopne
sar
enter
fdivl
test
xor
or
js
jns
jge
cli
jge
mov
and
xchg
adc
fadd
sub
movsb
subl
lock
pop
sbb
mov
lods
inc
jo
fldenv
mull
test
adc
mov
lret
mov
push
fldcw
dec
movups
sti
jecxz
int
jmp
aam
lods
in
jl
inc
nop
xchg
pop
jbe
push
cltd
cmp
test
fwait
sbb
add
clc
cmp
scas
into
shll
adc
mov
mov
push
dec
ret
shlb
pop
fisubrs
sub
fs
dec
xchg
dec
push
jl
lock
sbb
aaa
jnp
xchg
ret
aaa
cmp
mov
mov
insl
int
lds
sub
notl
mov
ficompl
xchg
aad
lret
jg
mov
mov
add
jmp
jnp
xor
lods
mov
jecxz
mov
test
insl
mov
add
adc
sbb
nop
shr
popa
adc
or
aaa
dec
mov
iret
adcl
add
sub
call
cltd
mov
ss
pusha
popf
fdivrs
cmp
push
push
test
push
add
push
push
cmc
mov
mov
test
sbb
sub
outsl
jnp
xor
push
mov
ds
mov
mov
int
sub
nop
add
or
jae
aam
jge
inc
jl
shll
sbb
ret
push
push
push
mov
push
adc
loope
in
pop
inc
gs
pop
and
pop
out
adc
lock
jp
cmc
fidivrs
das
pusha
in
dec
adc
push
stos
or
lods
aas
push
iret
add
jb
in
mov
fdiv
dec
push
repz
imul
gs
mov
rcl
lea
mov
lahf
fcmovu
mov
daa
sbb
cmpb
cmp
dec
push
mov
mov
push
nop
insb
sub
leave
pusha
pusha
scas
dec
cmp
sbb
or
push
dec
sti
fstpl
mov
sub
sbb
lods
cmp
popf
inc
loop
icebp
bound
ficoms
fs
mov
decb
xchg
ret
fwait
mov
int
daa
cltd
cmp
test
sti
lods
bound
test
decb
out
xchg
es
sbb
cmp
cmc
or
pop
fnstsw
pop
cmp
out
iret
in
adc
cmp
pushf
xchg
out
aad
movb
jg
cltd
pop
out
cmp
shll
xor
subl
jmp
jecxz
ret
mov
in
xchg
ljmp
sbb
xchg
push
cmp
pop
fildl
adc
in
xchg
leave
stc
xor
sub
pop
ds
or
ds
jns
or
and
ss
int
pop
adc
in
mov
in
or
inc
mov
sbb
add
xor
in
push
shll
ljmp
repnz
or
add
icebp
fiadds
stos
fwait
out
mov
push
aas
dec
or
out
xchg
sub
cmpsl
test
sbb
jno
nop
cs
cli
push
push
mov
push
pop
stos
push
aas
imul
ret
in
out
in
lds
insl
jno
int
repnz
dec
mov
cmpsb
in
imul
data16
xchg
xor
jmp
mov
jbe
lahf
mov
xchg
pop
pop
orl
xor
cli
gs
ret
xchg
push
mov
fsts
xor
mov
sbb
mov
mov
pop
aas
jge
cld
into
je
add
dec
and
dec
pop
jo
sub
lahf
cmc
dec
or
shll
or
ljmp
lock
jl
cmp
or
push
fisubrs
and
or
lock
adc
and
fdivrs
test
cmp
sbb
push
add
int3
aam
sti
scas
enter
mov
jecxz
les
sti
call
add
popf
and
mov
leave
scas
jecxz
inc
mov
jae
sarb
hlt
cmpsb
xchg
adc
dec
sub
loop
pop
pop
mov
jl
mov
cmp
sbb
imul
jnp
pop
arpl
push
lahf
roll
or
bound
cmp
xor
pop
xchg
flds
mov
test
scas
cmp
test
sahf
cmp
lock
jp
je
push
or
cmp
xchg
adc
push
mov
adcb
gs
out
and
repnz
pop
mov
mov
jge
push
inc
hlt
push
push
add
add
add
mov
aas
loop
xchg
ja
sub
mov
xchg
sub
pop
aam
push
call
int3
scas
subl
xor
or
dec
xor
jge
lea
push
leave
lock
cld
scas
gs
xlat
pop
test
rcrl
push
aam
jno
ja
mov
fdivs
test
push
xchg
movsl
sbb
cmp
mov
pusha
mov
subb
and
jns
cltd
and
xor
mov
clc
mov
jne
sbb
jo
push
pusha
mov
not
pop
int
fdivl
xor
cmp
cmp
imul
push
lahf
jmp
in
hlt
jl
dec
mov
call
and
in
push
ds
mov
adc
push
lret
add
dec
dec
xchg
ret
int
push
mov
je
test
imul
sti
xchg
cmpsl
shlb
test
jmp
lret
pop
push
adc
lods
xchg
cmc
or
push
xchg
mov
sub
inc
xchg
add
mov
xor
xchg
jne
testl
rol
mov
xchg
lahf
mov
cmc
lret
adc
rcrl
sahf
xchg
daa
adc
adc
mov
adcl
inc
pop
test
int3
mov
rep
insb
outsb
int
icebp
inc
cmpsl
mov
aad
xor
xchg
xlat
das
or
xchg
pop
repnz
les
int3
out
xchg
mov
mov
bound
daa
xchg
inc
aad
jmp
cltd
mov
test
sbbl
jnp
sahf
and
lods
testl
xchg
outsl
xchg
sbb
lahf
out
pop
sub
sahf
push
je
jp
pop
cmp
idivl
aam
sub
cwtl
push
cmpb
inc
adc
scas
jbe
jns
cmp
rcl
mov
cmp
jbe
jne
push
jmp
cld
push
push
mov
and
mul
add
push
sbb
jno
imul
imul
mov
mov
xchg
icebp
andb
jb
je
xchg
sub
add
in
mov
adc
nop
jne
movsl
cmp
add
pop
mov
aam
fdivrs
es
fisubrs
push
scas
mov
jae
hlt
mov
sub
push
cmp
mov
and
cmc
cmpsb
lahf
stos
pop
fbstp
pushf
lods
outsl
push
mov
mov
push
std
popf
jge
or
jge
test
xchg
jge
cld
rcl
jns
mov
mov
xchg
sub
vpunpckhbw
or
cmp
mov
dec
push
adc
jle
jecxz
mov
dec
jne
sbb
aaa
xor
xorb
iret
push
stc
xor
into
out
hlt
int
adc
sbb
in
mov
leave
jne
and
sbb
xchg
dec
lods
lock
fists
jae
xor
inc
add
ret
out
mov
icebp
cmp
jle
mov
mov
std
iret
subl
xchg
mov
fwait
xor
mov
mov
jo
jnp
push
jb
and
xlat
jecxz
test
imul
xor
inc
aaa
add
bound
shrb
pop
outsb
ja
mov
inc
je
lock
mov
mov
addb
ret
cmp
mov
popa
pop
stc
sub
cmp
ds
push
push
and
fucom
cmc
dec
push
imul
sarl
push
stos
lds
gs
push
mov
inc
pusha
pop
mov
je
adc
pop
shll
and
mov
gs
test
push
ljmp
push
push
sti
mov
mov
mov
push
cmp
in
mov
jg
inc
adc
gs
adc
leave
in
jge
call
in
scas
aad
sarb
mov
sub
lahf
and
or
mov
pop
inc
push
hlt
stos
push
int
clc
dec
shll
test
outsb
js
scas
insb
sbb
dec
mov
les
ss
cs
mov
adc
pop
imul
push
subl
lret
or
enter
shlb
pop
dec
cmp
test
loop
gs
and
sbb
mov
mov
es
lods
xor
sub
xor
lret
mov
push
stos
dec
out
dec
push
and
xlat
dec
sbb
movsl
int
ret
mov
jmp
push
adc
lock
mov
rorb
push
sbb
sti
filds
fs
jbe
and
pop
mov
sbb
adc
pop
jle
pop
jl
sarb
xchg
push
dec
enter
xlat
cli
pop
out
push
or
mov
fiadds
mov
pop
inc
popf
or
cltd
js
inc
mov
push
jmp
in
scas
test
adc
leave
out
lret
and
inc
jmp
mov
fucomip
xor
in
popf
or
mov
inc
out
adcl
shll
adc
and
cld
ds
cmp
adc
push
std
ds
pop
add
sub
and
aam
out
scas
jns
jb
and
call
test
sbb
aaa
dec
loope
inc
shrb
push
mov
mov
mov
cltd
add
push
loope
mov
push
decb
int3
and
or
fistpll
dec
inc
fs
push
mov
test
or
stos
xchg
test
push
or
push
xchg
inc
jb
icebp
arpl
je
or
loope
aam
out
adcb
sahf
push
adc
sub
pop
not
cmp
aaa
or
out
bound
cltd
cwtl
out
jmp
jnp
adc
and
insl
add
xchg
pusha
shl
leave
loope
dec
lods
jp
xor
lock
je
and
cmpsl
dec
call
jmp
popf
enter
and
ret
test
add
shll
dec
mov
jecxz
sub
inc
rolb
cli
dec
aad
out
push
popa
cwtl
repnz
xchg
leave
jnp
sbb
adc
cltd
je
push
daa
pushf
jne
jmp
ljmp
jmp
mov
stc
adcl
jns
repz
fdivrs
and
xchg
leave
sub
xchg
test
cmp
xchg
mov
leave
addr16
pop
cmp
movl
aas
jbe
xchg
mov
push
in
sub
adc
adc
jo
dec
and
push
cmp
ss
pushf
pop
pop
iret
popf
mov
cmp
lret
jl
in
sub
or
arpl
push
test
lock
lods
mov
adc
adc
xor
push
into
divb
out
inc
sbb
jnp
addr16
cli
repnz
shl
imul
outsb
sub
mov
aad
mov
dec
push
or
mov
imul
cmp
cmp
mov
pop
push
sbb
or
in
rcrl
lea
mov
insb
jp
popa
cmc
pop
les
mov
or
pop
pushf
sub
mov
mov
sbb
mov
cmpsl
adc
rorb
sub
scas
mov
jl
imul
dec
mov
popa
clc
mov
pop
sbb
cs
adc
mov
das
lods
dec
xchg
hlt
out
xlat
aas
dec
sub
in
mov
clc
dec
arpl
push
and
enter
sbb
data16
sub
mov
shlb
adc
sub
dec
in
mov
push
pop
jno
cmp
pop
add
incl
les
scas
sbb
jb
or
dec
scas
repz
mov
loope
mov
int
sti
xchg
sbb
enter
lock
jge
sbb
lds
iret
mov
sub
ja
mov
xor
jo
xlat
jnp
fsub
into
sbb
dec
js
dec
mov
push
popf
pop
mov
or
js
mov
ficoml
shl
cmc
jle
pop
jp
lcall
imul
aad
daa
push
pop
addr16
sub
inc
push
mov
jg,pt
aam
adc
cmc
and
in
stos
or
enter
aad
movsb
pop
dec
out
jns
dec
cmp
sbb
ror
add
scas
adc
and
inc
cmpsl
jns
mov
or
adc
mov
fcom
movb
icebp
shrb
pusha
push
jo
mov
or
les
jp
div
cmp
pusha
push
cmp
imul
add
and
mov
jecxz
adc
jmp
js
movsb
pusha
in
js
mov
out
add
jmp
mov
lock
sub
fildl
cmpsw
scas
loope
test
pop
int
mov
xchg
mov
shlb
xchg
push
push
out
push
or
imul
jmp
mov
cli
mov
test
fmull
or
jno
dec
movups
dec
fucom
mov
mov
inc
inc
hlt
cmc
and
std
sub
sbb
aas
bound
push
inc
cmp
inc
fcmovu
adc
jp
push
inc
pop
push
xchg
sahf
push
adc
pop
cli
insb
popa
xor
jle
js
adc
mov
lods
sub
and
pushf
add
mov
sub
in
fisttpl
mov
fdivrs
scas
jbe
xor
shrb
xor
sbb
jbe
xchg
push
fsubl
mov
or
mov
or
mov
leave
add
cmp
jno
sub
nop
xor
or
add
pushl
ja
sbb
aam
mov
fwait
popa
sub
cmp
mov
stc
incb
int3
loope
dec
jne
inc
insb
xchg
fistps
pop
mov
inc
ficoml
jae
jecxz
aad
bound
in
and
mov
xlat
in
push
sti
adc
push
lcall
aad
fs
popa
xor
js
movsl
lcall
stc
add
icebp
xor
mov
mov
es
js
leave
and
std
add
in
ds
test
rol
addr16
sbb
mov
getsec
pop
pop
add
jo
flds
es
sbb
rcll
push
imul
pop
mov
incb
call
xchg
leave
ljmp
repnz
je
mov
jnp
arpl
add
sub
push
pop
fstl
push
xlat
test
arpl
cwtl
mov
inc
dec
push
push
jnp
dec
shll
jle
scas
pop
sbb
mov
push
jne
or
dec
les
lret
jb,pn
jge
lcall
sbb
popf
in
repnz
in
fsts
mov
test
mov
repz
xor
sbbl
push
rcll
popf
and
mov
scas
adc
int
mov
xchg
adc
cli
shrb
fidivs
jae
sbb
xor
movsb
inc
inc
mov
lea
xchg
jl
test
and
subl
push
cmp
lret
icebp
sbb
xchg
scas
mov
js
leave
call
jg
cmp
xchg
ljmp
cld
xchg
ret
cmc
mov
jo
or
jae
adcl
shl
test
fs
lret
cmp
sbb
test
mov
das
aaa
push
jbe
icebp
orl
mov
pop
pop
or
sub
mov
insb
adc
leave
mov
cld
invd
dec
mov
sbb
rcrl
push
inc
mov
leave
mov
cmp
and
and
aas
test
and
std
push
push
sbb
out
sbb
jae
aaa
lea
stos
test
jge
fnsave
adc
popa
adc
jo
cld
dec
rorl
push
lea
subb
cltd
mov
xchg
inc
cmp
shlb
xor
cmp
jae
mov
sbb
call
out
int
nop
jp
test
clc
test
roll
xchg
loop
cmp
and
test
lods
pop
dec
and
fiadds
and
mov
aad
sub
shl
xor
mov
mov
or
sbb
adc
lret
cmp
jne
gs
jbe
dec
inc
in
add
add
mov
lcall
cmp
into
cmp
xchg
movsl
nop
fwait
and
shlb
insb
out
dec
hlt
dec
xchg
pop
xlat
add
shl
xchg
cs
add
dec
out
pop
mov
negb
hlt
fidivs
add
iret
insl
fcompl
ljmp
int
int3
testb
or
mov
sbb
and
mov
pop
int3
test
jae
into
mov
cmp
pop
fists
adc
jb
mov
movsb
mov
xor
dec
mov
xor
cmpsb
arpl
in
fistpl
xchg
sahf
out
or
int
cmp
push
nop
repnz
and
shll
jbe
rcl
dec
in
aad
fstps
inc
dec
loope
fisubrs
out
mov
sub
add
fs
pop
jecxz
sub
scas
jg
cmpsl
dec
cltd
bndldx
add
cmc
imul
mov
dec
cmpsb
push
push
outsl
inc
cmpl
jg
dec
inc
and
xchg
mov
mov
mov
push
xorb
dec
sub
js
jmp
xchg
add
aam
push
pop
ja
pop
xchg
call
pop
sbb
testl
negl
stc
int
xchg
fcmovbe
imul
aaa
jge,pn
pop
inc
xor
fs
into
mov
data16
inc
inc
outsl
iret
shrb
shlb
or
std
push
imul
lea
inc
outsl
test
jae
lods
inc
mov
add
rorb
dec
or
or
push
cs
inc
mov
sub
add
fstl
jg
xor
cmp
cmp
push
out
out
dec
adc
push
dec
jmp
dec
arpl
sub
sub
les
enter
movsl
movb
xor
pop
out
adc
icebp
out
mov
lds
in
cltd
sub
jns
cmp
dec
lods
push
pop
jecxz
push
adc
adc
jmp
lret
adc
adc
add
fldenv
std
dec
sbb
sahf
inc
out
or
cmp
ficomps
cltd
jb
xor
mov
dec
popa
out
jno
out
test
jmp
in
xor
jns
cmpsl
xor
mov
call
nop
inc
addr16
aam
pop
jl
lock
aam
sbb
lret
call
and
leave
pop
adc
push
movsb
cmpxchg8b
push
mov
loop
imul
sub
cwtl
add
mov
mov
out
cli
rcll
movsl
xor
test
stos
jno
imul
cmpsl
out
mov
inc
popa
xlat
ret
add
or
inc
les
imul
cltd
int
movsl
fistps
cld
ret
aas
int3
mov
adc
sahf
mov
in
into
lods
and
lock
outsl
test
push
xor
lods
movsb
mov
xor
hlt
outsb
out
aam
or
xor
test
leave
in
inc
aaa
in
push
pushf
inc
popl
dec
sub
mov
sbb
ss
push
and
shl
imul
or
fwait
aad
dec
cmp
test
cwtl
sub
movsl
xchg
lret
sti
jno
jecxz
mov
dec
stos
push
jnp
lock
pop
push
stc
add
cld
in
pop
cwtl
lods
pop
jg
imul
xchg
mov
or
andl
xchg
daa
shlb
iret
mov
lods
jp
mov
push
dec
nop
jno
add
pop
subb
mov
insb
sbb
dec
mov
in
daa
outsl
sub
pusha
or
sub
data16
pop
mov
aad
push
xor
ja
mov
xchg
test
mov
sub
sarb
and
cs
out
sub
pop
pop
inc
clc
leave
xchg
sti
and
packssdw
outsb
les
imul
addb
hlt
or
je
ret
stos
jne
sahf
sahf
cmp
pop
xor
xor
sub
pop
lock
push
data16
lcall
pushf
jb
addl
ljmp
mov
pop
add
mov
xchg
nop
inc
inc
mov
adc
xchg
pop
cmpsl
jno
cmpsb
or
sub
subb
gs
ret
insl
cmc
sub
test
xchg
xchg
pop
cmpsb
dec
aam
fimull
sub
out
lret
xchg
adc
inc
cmovae
ret
lcall
mov
sbb
mov
add
fnsave
xor
mov
pop
sahf
leave
leave
lcall
jo
mov
leave
stos
jno
push
loopne
jb
aas
xor
dec
test
sub
sahf
mov
sti
sub
clc
cmp
cmp
or
xchg
movsb
adc
dec
jmp
shrd
lea
sub
mov
or
or
push
lock
ret
xchg
mov
push
dec
mov
pop
xor
scas
lahf
mov
test
xor
popa
stos
es
imulb
into
adc
fsubs
mov
xchg
movsl
mov
cwtl
cmp
das
mov
sarl
rclb
outsb
bound
inc
aam
stos
loop
mov
mov
xlat
xchg
sbb
or
and
gs
aas
and
mov
dec
or
mov
aam
cmp
cld
xchg
inc
rolb
cs
xor
mov
xor
xorl
jo
jmp
xor
or
pushf
jl
xlat
pop
jae
fdivrl
cmp
jp
mov
stc
decb
pop
test
cmp
cli
lods
aas
xor
pop
lods
jle
int3
mov
cs
insb
call
sbb
data16
adc
loop
repz
mov
or
mov
fildl
lret
xor
jbe
adc
or
cmp
fcmovnbe
and
dec
popf
je
mov
xchg
cld
jmp
dec
adc
into
mov
jns
xchg
pop
cmpsl
pop
sub
inc
push
js
stos
loop
cld
or
jns
scas
cmpps
cmpb
sub
inc
xchg
in
clc
pusha
pusha
insl
cmpsb
fwait
jp
mov
imul
fs
xor
inc
jecxz
mov
loopne
out
aaa
shll
sbb
cltd
shrb
jge
movsb
jbe
mov
push
cmp
xchg
adc
push
mov
xchg
xchg
sahf
sbb
jo
pushf
dec
shll
lock
jl
pusha
pusha
jl
out
movsb
in
mov
mov
aas
lcall
dec
jne
adc
dec
mov
sti
fsubr
push
jnp
or
sub
ja
pop
push
add
mov
pop
test
cmp
xchg
sbb
lahf
pop
fwait
sub
push
out
xchg
push
jge
xchg
cmp
mov
sbb
mov
test
mov
rorb
cli
sbb
out
sarl
ret
in
loopne
mov
sub
jmp
nop
pop
jle
pop
lahf
shrl
repz
dec
pop
cmc
int3
mov
fs
jle
mov
pop
push
dec
mov
xor
dec
lahf
add
mov
mov
repnz
pop
jmp
divb
xchg
movsb
cli
lds
sub
push
cmp
jp
out
mov
jbe
pop
sub
aaa
adc
push
mov
and
lret
and
mov
push
popf
in
mov
scas
mov
aas
orb
stc
fstl
dec
mov
jno
mov
loop
mov
outsb
shlb
xchg
lret
add
outsb
or
fmul
xacquire
push
mov
sbb
fbstp
testl
mov
mov
sar
mov
fistpll
and
or
aad
addr16
mov
movsl
ljmp
mov
mov
subb
or
sti
sub
adc
enter
sbb
jnp
mov
jnp
stos
xlat
lods
jnp
xlat
cmp
lea
fwait
pop
xchg
mov
lea
pop
movsb
mov
sahf
adc
lcall
cli
pop
jns
fxch
mov
push
xchg
ja
in
stos
lock
and
dec
dec
outsb
lret
loopne
lods
jne
jo
pop
inc
popf
pushf
mov
mov
repnz
cmpsl
and
lret
mov
sbb
data16
sbb
xchg
xchg
popf
jg
push
push
pop
xor
or
sahf
testb
pusha
jo
xor
mov
into
push
pushf
dec
enter
add
and
mov
push
in
pop
gs
sbb
jecxz
push
inc
jnp
and
or
inc
mov
ret
in
test
pusha
push
add
push
fcomp
imul
jb
push
enter
ss
fldenv
push
sbb
sti
jge
xor
mov
arpl
sarl
int
adc
push
fwait
jbe
adc
jg
jae
inc
fdivrs
inc
repnz
rclb
pop
add
cmp
pop
pop
push
jl
cmc
xchg
faddl
mov
pop
or
push
jmp
push
or
xchg
lock
xorl
sahf
fisubs
mov
jae
sub
push
push
fidivs
lcall
mov
out
mov
xlat
xchg
lret
dec
bound
lea
fisubl
inc
cmpsb
movsl
test
xor
movb
push
sarl
rol
jmp
rolb
aad
add
aad
and
and
rorb
repnz
imul
pop
xchg
mov
out
xor
fcompl
mov
fisubrs
stos
hlt
xchg
adc
push
popf
mov
imul
jp
ret
iret
pop
outsb
push
or
mov
jge
repz
insl
insb
xchg
inc
lret
adc
cmp
pushf
xchg
xor
mov
cmpsl
jns
dec
push
pushf
leave
pop
xor
mov
push
sbb
adc
mov
imul
flds
add
loopne
movsl
jns
fidivs
cmpsl
lret
cwtl
outsb
inc
cmp
imul
jl
push
pop
sub
add
pop
shlb
inc
cmp
int
sub
push
inc
test
fisubs
movsl
stos
jne
jp
xchg
mov
push
loopne
hlt
mov
jp
repnz
pop
xchg
std
cmpsl
lret
lret
lcall
xchg
inc
clc
push
and
ljmp
mov
jne
imul
lret
jle
les
cmp
push
pop
ja
test
adc
testl
pop
outsl
das
sbb
mov
cmp
mov
push
cwtl
jle
and
mov
push
sbb
jne
test
ljmp
pop
push
loopne
lcall
pop
insl
sub
and
incl
or
imulb
pop
cmp
test
and
test
aam
pushf
sti
in
xchg
sub
icebp
shl
jmp
fcmovu
jmp
sti
ja
cmp
lods
xchg
mov
push
gs
aas
mov
lods
cltd
shl
xchg
lahf
lods
jecxz,pt
mov
pop
rcll
fcoms
and
js
sub
cmp
lock
out
test
rcr
stc
cs
neg
jb
ror
jmp
jb
loopne
xchg
test
add
mov
das
fistl
aad
add
sub
push
jle
arpl
mov
cwtl
sbb
jg
xor
or
out
cmpsb
cmpsl
push
dec
mov
loopne
cli
lock
dec
cli
pop
dec
mov
pop
je
dec
test
lcall
shrl
enter
add
outsb
ret
cli
insb
addr16
test
mov
lods
fcoml
xchg
push
push
jp
sahf
pop
test
mov
insb
sub
lds
insl
pop
loope
sbb
lods
scas
les
xchg
pop
add
xchg
and
repz
inc
push
or
push
xor
jp
xchg
in
sbb
pop
pushf
pop
loopne
imul
mov
movsl
fbstp
lahf
lcall
mov
mov
cld
pushf
iret
dec
fsubl
aaa
sbb
sbb
scas
push
mov
pusha
cmpsb
and
mov
or
and
imul
scas
or
push
sarl
mov
sbb
add
jae
jb
fcmovnu
std
clc
repz
xchg
and
cmp
jecxz
cmp
rorb
out
jg
add
jl
repz
fsts
xor
addl
imul
aad
out
in
adc
or
addr16
mov
add
xchg
add
fisubrs
je
sub
mov
mov
mov
dec
cmpsl
pushf
push
ret
add
mov
jno
xor
xchg
fadd
push
sub
in
sbb
pop
cltd
xchg
cld
dec
mov
syscall
pop
mov
xchg
push
cmpl
push
imul
out
jmp
cmp
sahf
pop
cmpsb
push
jns
scas
mov
cltd
ss
pop
fcoml
fbld
mov
in
mov
leave
repnz
rorb
repz
fildl
rorb
sub
addr16
xchg
dec
jmp
insl
add
aaa
aam
mov
movsb
inc
pop
out
dec
add
out
int
lds
int3
repnz
xor
fmuls
dec
mov
xlat
jbe
pop
jp
rolb
inc
int
js
das
pop
icebp
das
push
add
in
xchg
and
mov
mov
pushf
aas
push
mov
push
or
adc
stos
jl
sbb
sbb
dec
mov
pop
stos
and
cmp
xchg
fmul
push
pop
pop
in
out
dec
cmp
lds
je
dec
std
subb
enter
or
or
push
push
sahf
add
mov
mov
cmp
cmp
loope
sbb
mov
fs
xchg
inc
inc
dec
loop
test
in
xor
and
hlt
ss
xchg
shrb
push
je
sub
sub
push
in
add
dec
sbb
lret
jb
mov
lret
mov
aas
adc
xorb
mov
rclb
mov
bound
xchg
lods
adc
adcl
xor
loop
imul
xbegin
aad
mov
loope
hlt
jb
and
push
outsb
pop
ficoml
cmp
call
mov
mov
push
stos
xchg
stos
enter
pop
out
enter
mov
mov
sub
aas
outsl
movsl
mov
aam
pop
pop
sbb
in
xchg
dec
cs
sub
nop
movsl
pop
loopne
dec
or
neg
xchg
addr16
mov
push
test
xor
pop
and
mov
stc
push
push
jb
addr16
test
xchg
cli
xor
lret
js
shl
mov
xchg
cmpsl
dec
push
mov
adc
dec
cmp
gs
mov
fs
enter
out
push
stos
sbb
ljmp
leave
cltd
outsl
add
adc
push
push
cmpsl
jo
aam
mov
dec
lock
jp
mov
dec
mov
cmc
movsl
out
in
xchg
pop
jge
jo
punpcklwd
xchg
jae
es
ret
add
mov
int
pusha
pop
push
mov
mov
sarl
mov
mov
icebp
inc
or
jbe
cltd
sbb
or
popf
or
insb
or
mov
pop
decb
xor
mov
dec
or
lods
dec
xchg
cmp
xor
ds
mov
ljmp
movsl
pop
fucom
popa
push
loop
int3
jmp
out
mulb
xchg
mov
pop
pop
xor
inc
and
das
imul
fs
fwait
cmp
push
push
rolb
popa
mov
outsb
or
mov
mull
sbb
fisttps
out
test
inc
loop
shll
mov
or
dec
sub
sbb
lret
cwtl
fsts
popf
negl
or
mov
sbbb
jg
jle
xorl
lods
scas
aas
mov
ds
dec
fistpll
jmp
xchg
cmp
out
in
add
add
mov
mov
pop
mov
inc
xchg
div
int
sub
dec
dec
push
sbbl
adc
pop
in
movsl
jmp
add
ret
xchg
jbe
or
pop
dec
jns
scas
lock
ds
lcall
cltd
jo
and
add
adc
mov
inc
jle
int
or
sub
rorl
imul
loope
xor
data16
mov
shl
mov
xor
sub
inc
icebp
inc
pushf
jge
out
mov
aas
rolb
and
in
mulb
cwtl
lret
insl
cmpsl
inc
sbb
daa
fwait
xlat
xor
add
xor
xchg
stos
sbb
movsl
inc
dec
cmpsl
loop
sbb
or
mov
daa
movsl
mov
enter
outsb
daa
jbe
das
jl
loopne
iret
cwtl
out
cs
jmp
test
jnp
xchg
xor
adc
loop
jo
mov
ljmp
pop
inc
cs
mov
ljmp
mov
movsl
mov
fidivl
daa
clc
pushf
mov
das
dec
call
rorb
dec
xor
mov
sbb
test
pop
jns
dec
rcl
and
outsl
cmpsl
cs
out
or
add
add
and
imul
aas
dec
cmpsb
push
into
sub
fiadds
fimuls
dec
push
push
sbb
dec
ds
jp
jge
adc
mov
or
adc
push
sub
movsb
fcompl
ss
leave
mov
out
stos
stos
push
lds
xchg
sbb
fbld
shrb
xchg
inc
and
xor
clc
inc
pop
dec
movsb
and
mov
mov
sub
rcr
movsl
dec
dec
or
jmp
lock
and
inc
int3
mov
shl
ljmp
int
inc
rcll
sbb
mov
xchg
mov
or
mov
aaa
out
or
mov
out
adc
inc
out
dec
cmp
push
jmp
sbb
lock
xor
xor
daa
fs
aam
jno
bound
or
mov
xchg
xchg
pop
movsb
loope
mov
std
ret
fisttpll
test
les
dec
inc
pop
pop
xor
xor
scas
in
imull
jecxz
insb
sub
mov
inc
xlat
mov
out
mov
jnp
cltd
add
cmp
pop
mov
mov
clc
adc
jle
ss
fisubrl
jb
sub
fcompl
fstpt
jmp
pop
push
push
scas
adc
daa
rorl
stos
rorb
ret
inc
fisttpll
in
mov
inc
mov
imulb
movsb
mov
lods
jo
roll
push
sub
or
push
pop
lcall
sahf
add
aam
lock
pop
cli
jb
aam
lock
push
or
jae
xchg
xor
icebp
ds
dec
and
or
ss
inc
xor
aas
das
pop
cltd
adc
add
push
loop
sub
cmpsb
inc
pop
sbb
adcl
mov
lret
push
lea
mov
cmp
nop
lods
jo
subb
add
push
test
or
movsl
xor
mov
push
push
sbb
adc
or
cmp
test
adc
mov
push
sbb
push
mov
push
xchg
mov
sub
out
addr16
sub
sbb
jmp
scas
jno
mov
mov
xor
pop
pop
fdiv
arpl
cli
fsubr
adc
jbe
push
pop
cmp
pop
adc
xor
sub
xchg
dec
adc
inc
jae
fcmovnu
lahf
jbe
pop
cmp
pop
mov
stos
xchg
adcb
xor
push
scas
leave
adcb
push
cmp
inc
xchg
aas
adc
cmp
test
xchg
subb
add
xchg
popf
rcrl
aas
inc
loopne
mov
push
pop
pop
sub
jae
push
mov
idivl
inc
and
cmc
sbb
fdivl
icebp
sbbl
sahf
out
mov
or
shll
shlb
add
mov
sbb
out
dec
mov
lahf
ret
imul
cli
repnz
sub
push
testl
and
push
test
cwtl
hlt
js
lds
loop
mov
in
outsl
dec
lahf
outsl
mov
mov
clc
xchg
xchg
mov
iret
dec
lods
es
cltd
pop
xchg
bnd
loopne
add
stos
cmp
into
xor
cmp
fnstcw
push
push
in
stos
sarb
dec
push
add
mov
std
mov
lret
dec
jle
lods
pop
adc
repnz
cmp
repnz
inc
sbb
aam
mov
js
into
int3
xchg
push
pop
mov
jnp
ljmp
cmp
in
lock
cs
pop
out
les
movl
lock
push
movsl
rcrb
daa
pop
mov
sbb
xchg
mov
add
sub
aad
fwait
mov
pop
in
and
pop
out
cli
daa
aaa
addr16
int
adc
popa
arpl
aas
inc
mov
pop
pusha
sub
add
dec
out
cli
push
mov
lock
cs
push
and
aad
jmp
shl
cmc
xchg
mov
dec
js
and
dec
test
stos
push
cmp
pop
dec
push
cmpl
inc
sti
test
inc
jbe
push
sub
adc
or
sbb
jnp
aaa
pop
mov
outsb
mov
stc
hlt
sub
enter
in
cmp
mov
jae
cmp
sahf
sub
enter
js
hlt
pop
arpl
int
mov
jns
jns
add
clc
loopne
scas
xchg
sarb
dec
orb
les
xchg
repz
pop
xor
clc
push
cmpb
lea
ret
xchg
mov
cmpsl
lret
inc
bound
fldl
int3
push
aam
outsl
in
pop
push
in
inc
addl
lea
jmp
loope
scas
dec
or
jl
fcomps
orl
pop
cmp
cld
enter
jae
sbb
popa
push
adc
push
out
mov
stos
add
sub
mov
and
add
lds
addl
sbb
push
int
mov
lcall
loope
loope
mov
lea
pushf
fdivs
in
pop
push
pushf
dec
cs
and
daa
jle
cmp
mov
mov
xchg
dec
xchg
in
aam
les
js
cmpsl
lods
pushf
gs
xor
sbb
jno
scas
arpl
jbe
and
mov
xchg
adc
test
sbb
push
out
sbb
pop
jbe
jp
je
xor
loopne
push
mov
repnz
movsb
mov
cmp
cmp
mov
inc
sub
mov
jecxz
testl
imul
cli
xchg
jbe
sbb
int3
or
pop
enter
inc
cmp
test
push
loop
pop
out
movsb
jbe
out
xchg
sahf
dec
in
sub
xchg
cmp
dec
mov
movsl
aas
scas
sub
fmuls
mov
popf
mov
and
pop
loope
add
cmp
lret
faddl
jns
jnp
inc
fmuls
outsb
insl
mov
push
leave
rorb
arpl
aad
jns
jle
sar
scas
mov
mov
stos
clc
xchg
pop
stos
inc
sub
clc
cltd
sub
sub
in
push
ret
cmp
push
jle
mov
mov
push
dec
jno
inc
xchg
test
push
push
test
test
fsubrs
loope
insb
add
inc
sbb
jo
pop
fildl
movaps
daa
test
jge
shr
popa
fstpl
inc
das
sbb
xor
and
sub
and
inc
and
cwtl
rorb
mov
test
sub
pusha
into
les
mov
rorb
aad
pop
jmp
ljmp
leave
sarl
pop
shrl
pop
push
jns
mov
out
gs
lahf
and
cmp
cmpsl
push
inc
rolb
adc
mov
mov
add
sahf
int
and
pop
push
enter
frstor
and
xor
ret
cmp
dec
and
mov
sbb
out
repnz
add
push
jmp
pop
int3
cwtl
imul
inc
sub
push
lea
pop
sbb
push
insl
sbb
jp
je
add
fcompl
dec
cld
sub
or
sbb
mov
sarb
test
lea
jne
jp
pop
mov
shrl
out
call
cld
insb
jae
scas
aas
push
fbld
fadds
fldt
daa
pop
rorb
fisttpl
unpcklps
loopw
or
adc
repnz
in
push
int
sub
fs
or
mov
outsb
push
add
cmp
mov
outsb
sub
pop
adc
dec
pop
fsubr
inc
pop
hlt
push
push
adc
fucom
xlat
les
pop
add
imul
cs
mov
inc
mov
mov
jnp
mov
scas
ret
xchg
ja
fsubl
insl
insb
push
ljmp
lcall
or
stos
aaa
in
mov
sub
pushf
mov
push
call
lds
xchg
pop
mov
add
das
andl
fdivrs
sbb
or
fldcw
imul
in
out
xchg
pushf
je
push
cmp
adc
sbb
inc
xchg
sub
mov
es
movsl
sbb
mov
gs
mov
pop
scas
ss
hlt
les
add
cmp
and
inc
in
or
jno
cmp
int
sbb
jmp
or
nop
push
add
sahf
in
xchg
arpl
shll
fsubs
push
daa
lock
jmp
lock
imul
mov
push
arpl
jns
dec
jp
and
addr16
test
clc
in
pop
popf
jecxz
fwait
sbb
jge
mov
frstor
movsb
int3
movsl
cld
add
sbb
sub
adcl
push
fnstsw
and
sub
mov
andb
or
push
adc
add
or
data16
pop
cmpsb
cmovs
test
movsl
lret
jecxz
pop
insb
leave
inc
jle
aam
pop
pop
aaa
movl
add
outsb
sub
cmp
arpl
sub
xor
cmp
lock
in
stos
sbb
inc
or
loop
pusha
xor
jo
inc
ss
fidivs
mov
je
inc
push
push
mov
pop
ds
pop
mov
das
lcall
outsb
adc
mov
or
stc
imulb
in
jmp
notb
jne
inc
cld
jnp
cltd
in
test
lods
lret
popf
xlat
pop
pop
outsb
xchg
test
ret
fiadds
insl
mov
add
insl
inc
fst
and
dec
lods
mov
inc
movb
sub
repnz
test
sub
sub
lret
shrl
stos
jg
cmp
push
cmp
popa
xchg
fists
les
lahf
lret
ret
fwait
mov
fsts
fcmovnb
add
pop
inc
dec
in
inc
shlb
aas
lods
fldenv
inc
in
sbb
dec
aad
data16
mov
scas
daa
inc
outsb
loop
push
pop
icebp
jl
fwait
mov
fwait
rcrl
je
inc
cmp
dec
sub
cld
dec
cmp
add
adc
lahf
sub
mov
sbb
push
cmp
adc
and
fmuls
xchg
and
jl
mov
out
mov
mov
add
insl
sbb
xor
stos
jo
test
call
das
xchg
jne
aas
lahf
xlat
push
loope
aas
aas
push
aas
je
xchg
outsb
mov
mov
pop
xchg
cld
sbb
sub
jae
adc
cmpsb
pop
push
or
out
mov
and
stos
loopne
inc
imul
arpl
arpl
add
push
aaa
in
cli
popa
adcb
sbb
fisttpl
add
movsb
xor
adc
adcb
mov
test
jmp
fmuls
mov
orl
pop
rcl
mov
gs
mov
add
xor
enter
sbb
sarb
pop
dec
loop
cvtdq2ps
dec
cmp
inc
loopne
ja
mov
pop
loope
mov
sbb
aas
xor
add
xor
pop
mov
loop
movsb
ror
rolb
mov
data16
pop
mov
repnz
rolb
cmp
cwtl
mov
mov
nop
js
xchg
sbb
and
sti
add
push
lea
xchg
xorl
sub
cmp
popa
push
mov
pop
mov
out
or
push
jmp
xor
mov
sub
mov
mov
dec
add
xor
or
sbb
pop
xchg
daa
hlt
test
das
adc
xchg
iret
nop
es
xchg
add
sbbb
or
inc
loope
push
popf
or
out
aaa
aad
sub
or
cmpsb
mov
cmpsb
lock
test
hlt
jns
sahf
dec
push
xchg
push
mov
mov
dec
popf
hlt
dec
and
xchg
popa
nop
and
shrb
leave
fnstcw
dec
cmpsl
add
push
fistpl
imul
sub
jno
mov
or
cmp
mov
outsl
xor
jno
push
mov
sub
fldl
outsb
cli
fadd
dec
jbe
mov
pop
lahf
jo
sbb
scas
dec
out
push
stos
insb
ficomps
mov
lret
or
fwait
leave
in
stos
ficomps
pop
jmp
hlt
cmpsl
mov
push
test
push
loop
nopl
in
mov
lock
sub
inc
out
add
xchg
fldcw
inc
fwait
mov
sub
xor
mov
push
pop
xchg
inc
xor
test
push
xchg
shlb
mov
hlt
call
ret
movsl
cmpsb
inc
sbb
push
inc
pop
push
push
dec
mov
es
adc
mov
repz
insl
lea
dec
repz
je
mov
fcmovnbe
and
mov
xor
mov
mov
shll
cld
aad
dec
adc
shll
jne
shll
inc
dec
mov
rcll
push
fbstp
mov
or
jns
arpl
cmpsl
add
mov
push
cltd
mov
xor
pop
ret
out
mov
insb
movsb
add
inc
mov
pop
inc
pop
divl
sbb
repz
arpl
sahf
xchg
das
aad
or
adc
jle
test
lock
inc
iret
add
or
ja
push
cmovb
pushl
sarl
pop
push
inc
imul
or
int3
inc
inc
inc
xchg
std
fxtract
in
ror
je
ret
xchg
mov
mov
add
shl
addr16
fdivs
pop
aaa
cmpsl
les
stos
sbb
mov
aas
or
hlt
dec
stos
int
jp
punpckldq
bnd
xchg
sarl
push
das
sti
out
addr16
xchg
ds
flds
outsb
mov
pop
iret
ljmp
add
jle
add
push
adc
popf
enter
roll
jp
sbb
sbb
adc
andl
rcl
movsb
pop
std
test
sarb
push
repz
sti
or
adc
push
dec
aad
test
lods
cmpsb
push
mov
or
mov
aad
pop
jmp
rcrb
data16
arpl
mov
ljmp
lods
adc
orl
jbe
ljmp
adc
pop
or
sub
das
mov
mov
mov
mov
xchg
mov
xchg
pop
add
sub
test
loopne
cmp
jbe
movsl
imul
hlt
cmp
imul
cmp
jp
dec
in
ret
mov
or
push
movsl
sbb
push
cmpsb
fbstp
add
std
aad
loope
mov
mov
xchg
jo
cmp
jg
addr16
sti
sub
das
add
sbb
dec
ljmp
inc
pop
out
stos
adc
stos
lret
push
nop
sbb
and
popa
ffree
lret
push
pop
inc
dec
mov
sub
loope
sti
add
push
lods
inc
and
shl
in
lret
sub
xchg
bound
int3
daa
lret
pop
push
dec
stos
or
pop
stos
dec
push
xor
or
add
enter
xor
movl
popf
gs
arpl
mov
je
addr16
push
pop
and
outsl
fdivrs
out
int3
mov
sub
inc
mov
test
adc
jb
dec
inc
mov
jnp
mov
pop
dec
je
mov
add
ljmp
cmp
in
icebp
ja
mov
out
scas
mov
aaa
movsb
or
pop
daa
testb
pop
xlat
popf
fildll
push
divl
les
dec
pop
mov
pop
jecxz
cmp
pop
loop
pop
pop
inc
inc
fmulp
pop
aas
xor
bound
or
sub
dec
mov
lods
fistpll
sub
pop
sub
sbb
lods
subb
sarl
fstpt
cs
je
cmp
jge
rcll
mov
and
jno
movsl
mov
adc
popf
popa
ss
push
xor
pop
cmc
xchg
add
add
pop
or
fwait
mov
add
data16
pop
cwtl
dec
xor
jl
inc
inc
push
push
aad
outsl
stc
inc
cwtl
fisubl
mov
add
leave
jb
hlt
xchg
xchg
jnp
inc
sub
js
push
gs
pop
mov
stos
sahf
je
aam
inc
sbb
add
js
movsl
mov
xor
std
jmp
insb
ja
adc
leave
and
dec
aad
xor
xor
jg
movsbl
inc
lods
jg
push
and
js
adc
cmc
je
test
vmovupd
pop
cwtl
cmp
mov
mov
mov
mov
jmp
ret
mov
adc
outsb
push
rcll
aam
mov
int
mov
or
sarb
mov
cmpsl
icebp
mov
enter
pop
xor
test
sbb
pop
ja
int
jmp
cwtl
lea
push
daa
rcl
cmp
in
or
fsubrp
sub
jg
aad
loope
adc
xor
into
mov
or
stos
test
mov
test
movsb
in
inc
lea
out
jge
std
out
xlat
rolb
inc
mov
int
sub
vpmulhw
in
stos
adc
lret
inc
and
into
push
mov
nop
xchg
lods
add
xchg
mov
inc
mov
xlat
repz
push
push
xor
testl
or
xchg
push
push
int3
mov
cltd
icebp
inc
inc
outsb
call
ror
inc
xchg
leave
add
js
notb
mov
xor
popf
inc
sahf
jb
mov
data16
adc
cld
jb
pop
rcpps
imul
xor
push
sbb
js
push
xor
or
mov
loopne
mov
stos
das
pop
ret
aas
movsb
jg
xor
test
pusha
jmp
aaa
cmpsb
faddl
dec
lret
sbb
xor
ja
adc
push
fsubl
mov
lock
movsl
fimuls
pop
inc
testl
insl
leave
pop
push
mov
sbbb
fidivs
mov
lock
outsb
cmpsl
sbbl
push
andl
and
aam
sbb
jle
xchg
repnz
loope
mov
mov
sub
mov
pop
push
mov
sub
lock
out
xchg
fisubs
inc
imul
push
pop
dec
xchg
leave
xchg
cmpsl
shlb
inc
pop
or
fnsave
jecxz
sbb
in
ds
popa
jg
push
or
push
loopne
push
stos
popf
jo
and
sbb
pushf
mov
pop
adc
cwtl
nop
sbb
or
pop
jnp
pop
ljmp
inc
je
cmpsb
lret
aas
dec
shrb
roll
and
leave
mov
shrl
stos
call
mov
sbb
jae
in
sub
jb
lcall
aad
repz
push
shlb
mov
pop
lds
mov
dec
mov
sub
ret
dec
es
xchg
mov
and
mov
loopne
sbb
jns
pop
aam
jle
xchg
adc
mov
arpl
mov
mov
dec
popf
sbb
inc
sbb
or
pop
mov
scas
lret
push
dec
lret
mov
xor
mov
cmp
mov
sub
fwait
mov
hlt
jl
add
mov
sbb
lea
popf
cmp
or
leave
bound
and
push
flds
out
adc
adc
cmp
and
pusha
dec
mov
fs
testb
shlb
jb
adc
inc
xchg
lahf
ss
enter
pop
insb
mov
mov
cld
mov
iret
dec
addb
mov
sub
lods
dec
fs
jns
gs
in
cmp
pop
dec
lcall
sbb
xchg
inc
sub
jo
movsb
mov
inc
jbe
mov
cmpsb
rcll
jmp
pop
and
hlt
mov
cmp
pop
out
scas
push
mov
inc
and
stos
add
scas
test
xchg
arpl
lret
dec
fldcw
xchg
sbb
pop
inc
mov
outsl
pop
mov
adc
sbb
imul
rolb
pop
scas
pop
xor
in
std
jbe
push
mov
cwtl
push
ljmp
icebp
mov
aam
scas
andl
nop
inc
add
nop
iret
sahf
pop
jbe
fldt
push
in
out
mov
xor
pop
cli
imul
jl
aas
jns
loop
ja
popa
std
push
pop
or
repz
pop
imul
pop
stos
dec
add
repnz
out
or
or
lds
loopne
enter
pushf
jno
mov
imul
lods
mov
mov
fldenv
into
mov
test
ja
mov
and
cmp
sbb
xor
jge
add
jo
test
mov
fcomps
and
stos
jg
adc
inc
sti
push
add
mov
cltd
in
movsl
dec
dec
ss
mov
lcall
or
xchg
int3
xor
adc
adc
mov
adc
out
shll
in
fbld
mov
fcoml
out
gs
in
sbb
xor
mov
jb
clc
xor
in
mov
iret
and
adc
and
mov
out
sbb
push
sbb
pop
stos
adc
mov
outsb
inc
adc
inc
xchg
jo
call
jp
mov
inc
outsl
pop
pop
mov
mov
fnsave
or
mov
int3
mov
pop
push
arpl
mov
mov
adc
mov
imul
jmp
pop
adcb
fidivs
loopne
xor
sub
mov
imul
dec
cmp
in
adc
lea
dec
leave
insb
outsb
or
and
mov
jmp
das
mov
data16
cld
pop
push
mov
mov
inc
mov
rorl
push
xchg
outsl
jae
xor
pop
sarl
ja
xchg
jg
in
sub
shlb
fstps
outsb
inc
inc
cli
mov
insl
sbb
imul
or
pop
mov
loopne
cmp
ja
repz
test
les
in
and
push
inc
sbb
fwait
and
out
add
pop
testl
int3
cmpsl
imul
ljmp
lret
lods
mov
div
test
popa
mov
mov
jb
repnz
jmp
scas
cld
cmp
push
dec
and
mov
ret
xchg
jne
fdivs
repz
sub
xchg
mov
cmc
leave
sbb
insl
adc
push
inc
adc
in
outsl
cltd
dec
cmp
test
fsts
dec
and
daa
jl
lea
scas
dec
mov
ficoms
xchg
inc
and
xchg
and
call
sub
rcll
test
mov
test
stc
mov
xchg
jecxz
incb
jecxz
sub
inc
fmulp
test
fcmovnu
inc
sbb
adc
scas
sub
mov
bound
and
fmull
outsb
inc
cmpsb
loope
cmpsl
in
fs
xchg
int
sbb
cltd
es
mov
push
mov
jp
jmp
mov
cmp
lods
ss
movsl
mov
lds
sbb
cmp
mov
repz
jne
call
pop
jne
cld
out
mov
pusha
xchg
int
jno
sub
push
into
shrb
iret
mov
ret
jae
jmp
ret
pop
lahf
scas
aam
cmp
enter
cltd
test
sar
xchg
lods
jae
cwtl
pop
divb
mov
shll
in
xchg
mov
push
jle
adc
mov
loope
pop
sahf
adcl
leave
enter
adc
orl
pop
fstl
mov
mov
fiaddl
jl
and
aas
or
mov
add
cltd
adc
ds
push
mov
add
fs
nop
sub
or
stc
cs
mov
lcall
cli
stos
and
inc
incl
scas
mov
sbb
cmp
push
stc
aam
adc
adc
xlat
aas
outsl
int
add
outsb
aaa
inc
imul
jg
dec
lcall
xchg
je
jmp
mov
in
jge
mov
xor
or
push
pop
pop
lods
aaa
cmc
cld
sar
sbb
je
cmp
sub
clc
pop
jb
bound
cmp
push
fmul
std
pop
jl
mov
fucomi
in
mov
int3
mov
stos
and
or
mov
es
jp
aam
jno
mov
xchg
out
sub
push
xor
jmp
int
dec
pushl
mov
and
mov
add
pop
adc
fdivl
lahf
lahf
je
lcall
mov
loopne
out
push
xchg
cli
mov
or
call
sbbl
jo
insb
and
sbb
cmpsl
jns
ja
add
movsb
in
mov
cmp
mov
clc
inc
call
xor
out
push
in
stc
sbb
dec
nop
cs
lret
gs
mov
cmp
inc
adc
pop
inc
push
dec
or
imul
bound
fadd
jae
andl
cmp
xchg
adc
inc
or
dec
xchg
or
push
addr16
test
enter
les
xchg
or
lods
or
mov
push
ja
aad
pop
mov
dec
and
addb
ja
outsb
icebp
adc
push
inc
add
shr
mov
dec
sub
and
es
push
aad
mov
test
mov
mov
xchg
sub
or
jo
cmp
jb
mov
dec
adc
jge
mov
and
xor
fildll
imull
aam
jl
add
ret
pop
jmp
arpl
dec
and
mov
cmp
movsb
push
mov
adc
icebp
mov
push
cmp
mov
aam
adc
and
mov
cwtl
mov
pop
out
sbb
jle
rorb
popf
mov
jnp
aam
fiaddl
mov
adc
push
add
mov
gs
rolb
lret
mov
arpl
cmp
sti
jl
das
mov
inc
mov
test
outsl
clc
ss
shll
lods
dec
cs
or
jl
cltd
jne
fdivs
push
mov
xor
imul
nop
cltd
mov
pop
cmpsb
push
pop
mov
mull
leave
sti
mov
sub
push
mov
mov
xor
sbb
pop
cwtl
test
dec
push
in
int3
sub
arpl
lea
in
lcall
mov
gs
inc
jecxz
adc
mov
adc
bound
stc
cwtl
xchg
rcrl
ficomps
pop
sub
fdivrl
push
cs
daa
ret
pop
ds
and
dec
repz
mov
test
inc
scas
adc
sti
xor
adc
xchg
and
adc
mov
repz
mov
cwtl
sbb
aaa
or
xor
lds
aaa
pushf
cld
sar
jmp
movsl
js
mov
sbb
pop
add
dec
lcall
xor
sub
jno
cmp
inc
cli
fnstcw
dec
je
cmp
and
gs
inc
xchg
jnp
idivl
js
mov
call
notb
add
loopne
cmpsl
test
fisubs
das
mov
in
outsl
ljmp
imul
jmp
mov
lahf
add
jmp
and
fidivs
jmp
sbb
xchg
out
neg
cmpsb
inc
dec
scas
add
push
aaa
pop
mov
test
xchg
add
cmp
ret
pop
in
xchg
loopne
ffree
cmpps
xor
pop
stc
loope
rolb
int
and
or
ja
xor
shrl
stos
or
cmp
into
stc
jmp
out
ficoms
daa
xlat
gs
and
pushf
pop
repnz
xor
mov
into
mov
ja
lret
movsl
sub
lret
pop
fs
das
mov
or
pusha
ss
and
int3
adc
paddusb
nop
test
divl
mov
dec
sub
xorb
xor
fisubrl
movsb
inc
push
js
cmp
sub
add
jo
xchg
fisubrs
jnp
clc
sar
bound
mov
addr16
or
push
or
movsb
out
mov
jne
popf
cmp
repnz
lretw
adcb
xchg
push
jne
test
mov
jecxz
cltd
jb
add
das
mov
out
pop
les
aaa
mov
in
cmovge
inc
xor
mov
icebp
pop
into
sbb
inc
pop
insl
mov
stos
and
ds
lock
and
pop
fs
xchg
adc
mov
fisubrs
cmp
jp
jb
dec
scas
cmp
pop
pop
loope
iret
xchg
or
rcl
cld
movsl
rcrb
mov
out
repz
cmpl
jmp
ror
sub
sub
xchg
clc
jo
rclb
ret
pop
inc
xchg
mov
icebp
jb
push
iret
cmp
outsb
movsb
mov
xor
mov
push
loope
mov
jno
int
cmp
sub
mov
jne
jle
push
push
aad
int3
fmuls
add
lret
mov
test
cmp
cmp
testb
adc
xchg
bound
js
fs
mov
ret
scas
mov
push
stc
and
jb
outsl
add
rclb
jl
ljmp
sub
add
movsl
push
add
rclb
or
ss
psrad
in
mov
push
xchg
mov
and
call
jo
gs
pop
call
and
add
cmp
dec
mov
cmpsl
xor
cmp
out
jne
imul
clc
inc
add
in
mov
pop
adc
xchg
push
loopne
pop
psrld
pop
inc
push
iret
sarl
imul
xchg
iret
out
cwtl
lahf
adc
dec
pop
mov
jecxz
dec
mov
dec
cmc
clc
ja
out
movsl
push
cmpl
and
push
mov
cmp
jno
push
lret
ret
and
std
mov
and
subl
mov
je
stos
movsb
loopne
jl
pop
repz
into
xor
push
xchg
mov
neg
cmp
stc
das
pop
cmp
repnz
incl
and
repnz
fcoms
rolb
and
loopne
mov
int3
sbb
mov
or
dec
scas
ret
cli
mov
xor
cmp
adc
mov
sbb
test
loopne
out
stos
test
push
cli
mov
xor
mov
stc
lahf
je
sub
pop
mov
mov
aad
lock
xor
shrb
out
add
mov
out
sbb
or
dec
jne
adc
loope
push
aaa
pop
sub
stos
data16
pop
push
mov
dec
jge
ja
into
mov
inc
icebp
push
mov
add
jo
das
je
dec
pop
sbb
sub
mov
push
add
dec
ret
scas
cwtl
enter
or
mov
cmc
jbe
dec
popa
into
shr
mov
ds
adc
das
in
mov
mov
cs
insl
imull
adc
adc
sbb
mov
in
aam
lret
sub
jecxz
repnz
jno
rolb
ret
xor
pop
lods
in
jnp
mov
cltd
push
gs
add
test
sub
ret
xor
push
aas
jg
arpl
and
inc
jb
push
jbe
mov
pop
test
mov
imulb
jp
movsb
cmp
add
test
mov
mov
imul
cli
mov
leave
insl
jg
sbb
out
jbe
out
xchg
pop
xor
mov
adc
lret
fimuls
jno
cltd
das
loope
adc
xor
in
pop
jmp
das
loope
mov
inc
mov
mov
pop
jle
fs
outsl
subb
push
sub
test
mov
push
stos
sub
inc
xor
lods
inc
jnp
inc
sbb
cmp
test
add
jp
push
mov
dec
test
cmp
xor
jle
sbb
inc
or
gs
insb
leave
mov
push
pop
xor
cmpsb
adc
movsl
push
add
mov
mov
jnp
ds
push
sub
les
sbb
repnz
icebp
mov
add
lahf
lea
test
inc
mov
mov
mov
sbb
push
pop
into
sbb
rcrb
jbe
aam
cmp
cs
hlt
test
lret
testl
lea
pop
ja
mov
add
mov
sbb
and
loopne
or
in
cs
shll
mov
fsubl
jno
out
push
inc
outsb
cltd
loopne
adc
inc
push
add
push
or
push
sub
xlat
daa
xlat
add
mov
sbb
mov
dec
xor
repnz
cld
inc
pop
push
stos
insb
idiv
es
out
loop
or
data16
cmp
sub
js
shll
cltd
int
shrl
push
push
insl
adc
sbb
inc
inc
and
lret
repnz
lds
and
imul
dec
fwait
bnd
lahf
leave
movsl
pcmpgtd
add
aas
shr
popa
pop
jp
movsb
test
out
sub
inc
ret
adc
aaa
rcrb
clc
sarl
imul
mov
iret
outsl
xadd
je
or
inc
cltd
dec
or
loop
std
js
dec
xor
rorl
in
jb
arpl
push
cmpsl
in
inc
mov
sbb
xchg
or
mov
outsb
es
mov
inc
outsb
xchg
lock
or
and
dec
lret
fmul
mov
sub
and
inc
dec
in
es
push
dec
push
out
ja
and
outsb
outsl
pop
sbb
repz
push
movsl
daa
aaa
popf
test
jle
cmpsl
sub
pusha
lcall
mov
fld
jecxz
mov
cmp
call
jne
arpl
fdivrs
inc
jmp
pusha
sub
enter
or
sbb
leave
add
std
leave
idivl
jge
jg
imul
jne
in
stos
xor
jg
movsl
mov
lods
mov
ja
sub
xchg
jg
mov
hlt
outsl
jecxz
out
mov
ja
lret
push
ret
rcl
aam
adc
fstpl
aad
sahf
adc
adc
pusha
cmp
rcrl
push
cmp
jmp
xlat
mov
mov
data16
pop
ds
mov
push
js
clc
jb
pop
mov
aam
sbb
aad
xlat
mov
xor
cltd
xor
jecxz
in
jg
sahf
push
mov
or
cmp
push
enter
jb
jne
or
ret
sbb
fs
ss
stos
mov
shlb
jmp
cli
inc
out
repnz
and
shl
mov
jle
scas
addl
push
mov
lcall
aad
xor
mov
mov
sub
add
or
mov
dec
rcrl
cmp
push
imul
rcll
inc
xor
stos
or
mov
inc
inc
adc
inc
dec
out
iret
jle
and
data16
mov
mov
cmp
or
pop
idivb
movb
jne
adcb
movsl
pop
clc
or
out
stos
mov
addb
lods
ds
ja
popf
mov
and
jl
jle
cmpsl
cmp
dec
xchg
mov
pushf
mov
jecxz
mov
push
pop
out
cmp
stc
nop
addr16
fimuls
shl
xchg
add
dec
push
push
inc
xchg
xor
jl
jle
mov
xchg
pop
add
add
inc
xchg
push
adc
insb
hlt
je
inc
repnz
mov
add
mov
sub
cmpsb
jnp
enter
fsub
pop
mov
dec
or
pop
xlat
out
and
xor
pop
inc
in
rol
in
movsb
mov
movsl
mov
jp
cltd
adc
or
or
jae
inc
adc
cmp
mov
cmp
and
test
inc
cvtps2pd
repnz
fisttpll
jp
ret
xorb
mov
cmp
pop
inc
pushf
popa
sbb
mov
add
jecxz
sbb
and
adc
xor
sarl
vpmaxsw
fistl
xchg
imul
and
ret
jno
pop
bound
scas
dec
nop
aam
mov
cmp
lret
sub
lock
inc
pusha
outsb
sbb
mov
cli
gs
mov
or
rorb
stos
scas
xchg
jb
imul
xor
shll
push
pop
test
dec
mov
pop
pop
imul
clc
das
pop
stos
data16
and
xchg
lahf
push
int
push
jl
mov
xchg
push
jo
std
roll
fsubrs
cmp
ret
cmp
xor
cs
subb
adc
cli
dec
pop
ss
jmp
mov
leave
inc
cmpsl
jl
das
subl
sub
jl
repz
in
and
cwtl
pop
inc
pop
xchg
mov
cltd
in
sarb
dec
movsb
shll
mov
int3
aam
add
test
pushf
adc
dec
cld
xorb
dec
out
push
mov
fidivl
sbb
filds
xchg
pop
cli
cs
ss
sub
mov
mov
test
push
jns
add
dec
dec
lods
jl
dec
incb
xor
insb
out
call
hlt
flds
sarb
adc
xchg
clc
dec
jns
and
add
les
add
cmpsl
popf
jmp
adc
xor
gs
fwait
cli
rorb
mov
imul
int3
cmpl
mov
push
out
popf
sar
dec
sub
and
es
imul
jns
in
and
inc
hlt
cmp
daa
lea
out
inc
xchg
sbb
rcr
leave
xor
clc
or
sbb
cmc
sbb
or
fsubs
mov
add
inc
jmp
push
mov
movsl
fcmovb
pushf
les
cmp
sub
sbb
xchg
lea
push
std
push
call
push
jno
sbb
lock
adc
xor
lock
mov
pop
xchg
push
aas
call
and
ret
sub
loope
mov
adc
inc
imul
push
int3
loope
cmp
dec
adcw
aas
testl
pop
je
movsb
mov
rorl
xchg
mov
xor
nop
mov
push
cmp
out
into
xor
push
and
aad
mov
call
fistpl
inc
insb
leave
daa
xchg
and
inc
je
nop
sub
mov
insl
inc
std
xchg
int3
and
push
pop
pop
jmp
jge
test
loope
xchg
popa
fnstcw
xchg
mov
mov
mov
daa
je
aam
enter
xchg
cmc
das
inc
js
sbb
pop
sbbb
jp
dec
aad
cmp
push
and
push
pushf
jge
nop
push
test
imul
scas
mov
push
js
xchg
and
fsubr
mov
mov
adcb
jno
push
mull
rol
sbb
push
outsl
cmpsb
dec
bound
es
mov
ret
push
std
fistpll
enter
xchg
add
jo
push
cmp
dec
jecxz
sahf
fistpll
out
test
adc
lds
push
clc
popa
insl
or
daa
xor
inc
cmpsl
fdivrs
dec
mov
test
or
movsl
mov
in
pop
push
xchg
mov
mov
inc
pop
mov
shlb
mov
cmp
adc
xor
push
out
popa
ljmp
xor
in
cmp
sahf
sahf
jle
adc
loop
jge
or
mov
cmc
jg
xchg
push
decl
das
push
ret
aas
mov
iret
cltd
add
cmp
pcmpeqb
movsl
push
mov
adc
sahf
mov
fisubl
pop
insl
cmp
std
jb
push
dec
jno
push
pop
repnz
cmp
sbb
in
cmpsl
out
cmp
inc
enter
add
leave
xor
push
test
repnz
push
mull
push
pushf
jns
push
lds
fisttpll
jo
stos
cs
test
mov
cmpb
inc
cmp
fs
add
loope
xchg
push
outsl
in
repnz
hlt
mov
sbbl
cmp
mov
clc
inc
aad
sbb
insl
scas
sarb
cmp
sbb
lret
pusha
pop
fsubrs
or
repnz
fistps
ret
loop
mov
jp
out
mov
sbb
cmc
inc
dec
push
add
mov
shrb
leave
add
cmp
test
or
shlb
xor
sbb
cli
arpl
in
arpl
test
cmp
inc
scas
loopne
lahf
fwait
push
adc
das
test
mov
jb
mov
sbb
mov
xlat
sti
inc
sbb
out
gs
push
sahf
bound
jecxz
jl
dec
xchg
ss
jns
je
cmpsl
daa
pop
inc
in
fnstsw
roll
out
mov
xor
jge
jmp
insb
xor
in
or
sub
call
sarb
cmp
in
push
xor
cld
mov
js
mov
cmp
mov
push
sbb
jae
enter
ret
repz
popa
in
dec
hlt
enter
jl
mov
push
dec
add
outsl
rcr
cli
outsl
or
or
aas
sub
int
aam
shr
cmp
bound
or
cmp
xchg
stos
cmpb
loopne
mov
or
call
inc
and
dec
and
loopne
cmp
jl
stc
repz
lds
sbb
pusha
mov
push
dec
out
pop
aam
xchg
mov
jmp
popa
mov
addps
sbb
fistpll
insl
andnps
or
ja
sub
add
shrl
int3
mov
add
sbb
pop
xchg
fldl
sti
jns
ja
insb
jns
inc
mov
and
xchg
aaa
je
sbb
xchg
adc
negl
or
mov
mov
push
ljmp
or
stos
outsb
div
fldl
rcrb
outsb
push
pushf
push
adc
and
repnz
out
dec
lea
xchg
jb
out
push
ja
fisttpll
movsl
inc
mov
les
das
jo
pop
jo
movsb
adc
test
aad
ss
sbb
jns
into
adc
leave
pop
adc
mov
and
sub
cltd
mov
enter
test
jbe
sbb
mov
sub
popa
test
outsl
in
pop
pop
movsl
adc
arpl
and
iret
xchg
repnz
add
xchg
mov
dec
call
cmp
pop
mov
and
data16
cmp
data16
lret
fwait
inc
xlat
decl
inc
cwtl
jae
loopne
sti
push
dec
pop
outsb
lea
notl
data16
pusha
push
pop
test
ss
stc
imul
cmp
dec
mov
sub
fucomip
stos
push
mov
les
scas
cmpsl
stos
ret
shr
jb
imul
inc
repz
inc
adc
stos
jg
fnstcw
mov
sub
divl
push
loopne
push
or
shrb
cli
stos
add
shl
popf
sbb
xlat
jne
fwait
sar
xchg
lods
subl
popf
fbld
inc
lret
mov
pop
clc
jg
cld
jmp
jno
add
mov
loope
pushf
cmp
cltd
push
add
fistps
or
rolb
adc
orb
inc
add
lods
mov
sbb
out
inc
xlat
xor
push
int3
xchg
jmp
enter
xchg
mov
loopne
xchg
adc
add
inc
andb
sbb
sbb
imul
data16
ss
jl
mov
mov
jle
jg
jae
mov
push
or
xchg
sub
outsl
aad
mov
or
mov
out
pop
stos
icebp
cld
pop
sbb
jbe
cmp
xor
push
mov
bound
mov
outsl
scas
lcall
lcall
sub
mov
or
lret
stos
inc
mov
int3
add
aad
cmp
sbb
cmpl
dec
pop
mov
dec
cmpsl
enter
pop
insb
lret
xorb
cmp
bound
sub
in
int3
cmp
es
pop
adc
or
xlat
out
sub
bound
and
mov
and
repnz
cmpsl
in
sti
imul
and
adc
daa
in
mov
jne
xchg
lock
rcrl
cmp
jl
fistps
scas
sarl
jns
dec
push
cmp
test
rcrb
aaa
incb
push
push
dec
inc
xlat
cmc
fstps
inc
and
dec
mov
pop
adc
xchg
cmp
movsl
in
into
dec
mov
push
gs
loope
pop
fdiv
adc
cwtl
jnp
fstps
je
test
loop
mov
cmp
fimull
jbe
push
mov
inc
pop
inc
mov
xchg
xchg
push
aad
mov
icebp
adc
mov
adc
cltd
xchg
jl
xor
mov
adc
cmpsb
push
icebp
das
subb
jbe
xor
sbb
stos
and
inc
movsb
std
ror
movsb
out
lahf
sub
mov
std
sub
scas
mov
xchg
push
mov
pop
pop
xchg
adc
sub
jb
push
pop
pop
das
divb
cwtl
mov
dec
cmp
or
push
popf
mov
rclb
mov
test
ret
ds
mov
imul
dec
enter
cmp
inc
add
xlat
lret
insb
push
add
and
cmp
xchg
aas
mov
popa
cmc
push
in
inc
test
sbb
outsb
and
adc
ss
xor
les
aam
add
shlb
pushf
loope
push
outsb
sahf
mov
adc
lcall
lods
dec
mov
adc
sub
flds
inc
xchg
xchg
cmp
ss
repz
loop
inc
jmp
mov
iret
mov
es
imul
enter
aaa
subl
adc
scas
and
push
sti
sub
mov
es
insb
repz
cmpps
push
push
sub
ficomps
mov
mov
into
imul
cmp
xorb
cmp
adc
push
fninit
test
repz
es
pop
fistps
lock
mov
push
or
cmp
jb
or
sarl
and
mov
mov
rcrl
or
push
shrb
dec
push
jno
sbb
xor
fistpll
dec
lret
pop
inc
cmp
adcb
sbb
push
cmp
mov
cmpsl
dec
gs
cs
insb
xor
shr
mov
mov
or
sub
adcb
popf
dec
mov
add
fcmovb
push
mov
adc
mov
aam
pop
push
dec
pop
jbe
mov
std
in
shlb
inc
xor
clc
or
addr16
push
cmp
fidivl
inc
xchg
or
pop
les
push
pop
mov
xlat
sti
repnz
mov
fistps
push
ja
mov
sub
call
push
dec
movsb
pop
mov
pushf
cmp
jno
xor
xchg
cmc
cltd
mov
daa
pop
fistpll
cmp
daa
mov
mov
push
outsb
dec
adc
hlt
and
sub
mov
xchg
sbb
dec
out
jmp
shll
pop
dec
pop
jae
decl
outsb
in
add
sub
inc
sub
mov
int3
xor
xchg
pusha
ss
add
pop
inc
bound
stos
inc
add
push
sti
pop
pop
sbb
push
ja
out
xchg
scas
xchg
psubusw
lods
sbb
loopne
or
aaa
sbb
mov
lods
xor
or
dec
xchg
xchg
insl
inc
ja
adc
stos
xchg
mov
mov
rorb
cmpsl
sbbl
jmp
insb
and
leave
or
push
or
outsl
test
sahf
inc
inc
pusha
cmp
pop
hlt
xchg
das
fldt
sahf
or
lcall
addr16
scas
test
call
and
sbb
or
and
cmp
dec
test
cmpsl
js
dec
icebp
pop
insl
imul
imul
std
mov
mov
adc
inc
jmp
mov
dec
scas
mov
popf
les
mov
addr16
xchg
mov
dec
push
rcr
cmc
fmul
mov
lcall
lret
arpl
lock
test
and
aad
addl
sub
lea
cmp
pop
pop
imul
jmp
sub
andb
js
mov
out
xchg
push
cmp
in
insb
scas
cmp
mov
or
xor
les
sub
nopl
cld
arpl
ret
xor
adc
push
scas
or
std
and
lock
cwtl
addb
popa
xchg
lds
fdivl
mov
sub
ss
lret
mov
bound
mov
pop
sub
in
jns
xor
inc
push
loope
outsb
jg
sub
mov
lahf
push
nop
scas
pop
arpl
movsb
test
fldl
incl
fst
adc
fmul
jns
and
in
test
aam
cmpl
ret
imul
xor
insb
repz
inc
mov
dec
test
mov
cli
or
out
push
cltd
mov
sbb
jmp
cltd
sbb
fwait
cmc
sbb
or
and
dec
pusha
xchg
and
or
mov
sbb
movswl
cmp
push
jo
loopne
cwtl
out
clc
aaa
pop
ss
mov
jle
popa
ret
negb
scas
dec
cli
or
mov
mov
dec
xchg
jmp
idivl
inc
and
push
test
out
jmp
lds
popl
jg
test
push
gs
pop
fldcw
mov
ja
push
push
xchg
push
jb
jne
popa
es
and
inc
jae
jnp
into
in
xor
call
xchg
loope
in
stc
mov
cmp
xchg
xchg
push
jno
mov
in
pop
icebp
cmc
test
mov
mov
idivl
mov
xchg
outsl
dec
fdivl
aas
sti
jo
stos
fadds
in
inc
mov
add
dec
in
movsb
imul
mov
leave
das
add
pop
or
ret
or
mov
lods
scas
or
out
xor
sbb
dec
jnp
mov
in
mov
js
std
mov
mov
loope
push
push
and
mov
mov
popf
mov
push
outsl
nop
lds
sbb
in
mov
sub
jnp
adc
cmp
inc
insb
push
jb
mov
lods
jo
scas
cmp
ljmp
in
adc
xchg
mov
push
int
stc
loope
adc
jbe
test
or
mov
xchg
repz
roll
jecxz
dec
adc
es
cltd
inc
out
ret
ret
cmp
stc
mov
jge
pop
add
das
mov
inc
xor
scas
mov
pop
aam
lret
mov
or
cmc
rorl
pop
loop,pt
call
sbb
call
jp
andl
mov
push
cmc
pop
sti
mov
mov
fwait
xor
out
outsl
shlb
arpl
shl
and
sub
jmp
mov
lahf
cmc
cs
enter
rorl
push
jecxz
push
fidivrl
add
outsl
dec
daa
cmpl
repnz
repnz
fisubrl
outsl
dec
test
xor
das
cmp
push
sbb
mov
test
mov
jge
sarb
push
aaa
data16
mov
cmp
lcall
int
inc
or
xchg
jg
mov
fdivrs
roll
dec
nop
pop
fmull
ja
inc
cli
inc
roll
cmp
pusha
rcrb
jle
push
mov
inc
fxch
stos
loope
mov
imul
dec
xor
dec
aam
out
out
mov
rcll
repnz
sahf
dec
sti
mov
xorb
xlat
ret
mov
dec
jle
sahf
fwait
xor
sbb
outsl
out
lret
and
vmread
sti
jl
scas
inc
outsb
cmp
add
sbb
add
insb
xor
and
fsubrs
push
imul
pop
inc
repz
jmp
out
rcrb
inc
mov
cltd
outsl
ficoml
arpl
sbb
jnp
stos
and
jo
rcrl
xor
es
outsl
mov
push
mov
stos
dec
out
inc
xchg
imul
sarb
mov
push
mov
mov
jae
mov
into
ja
cmp
flds
or
sub
jns
clc
cmp
stos
aad
inc
rol
sbb
jl
lret
jmp
test
dec
adcb
jne
aas
dec
push
add
into
pop
pop
push
and
adc
xchg
pop
js
mov
loop
sub
dec
push
pop
sbb
add
push
dec
arpl
sbb
movsl
sbb
stc
pop
xchg
cwtl
adc
fs
aad
mov
out
xor
dec
cmpb
mov
inc
sbb
ret
xchg
push
sbb
push
pop
pop
inc
push
xchg
fwait
cmp
mov
mov
jb
jbe
leave
in
push
shlb
mov
mov
movsl
add
inc
fcmovbe
add
sti
out
test
mov
and
sbbl
cmpsl
sbb
ror
xor
insb
test
iret
sbb
dec
jmp
lds
popa
sub
cmp
popa
pop
ja
pop
popa
daa
js
in
and
idivl
pusha
in
gs
pop
sub
pop
fdivs
cmp
rcl
leave
push
das
cmp
pop
fwait
mov
sub
fsubs
xlat
stos
js
dec
mov
xchg
fists
mov
xor
arpl
scas
jns
or
loop
cli
pop
fsubrl
mov
add
insl
idivl
es
shll
std
insb
jle
popa
bound
leave
cmp
in
cmp
dec
movsl
pop
add
pop
fmull
bnd
je
sbb
xor
add
scas
mov
sbb
aaa
sub
push
jo
mov
inc
cmp
xlat
push
mov
or
adc
sbb
adc
jecxz
jle
dec
xchg
aam
es
or
jns
cmp
xor
dec
nop
mov
jle
rcl
cltd
hlt
add
repz
insb
sub
jne
mov
in
sar
movsb
push
pop
bswap
mov
mov
mov
mov
out
sbbb
cmp
in
shr
test
mov
popf
jecxz
xchg
in
inc
add
mov
fsubl
cmpsb
out
ss
jb
mov
pop
fwait
sub
inc
or
xor
out
and
sbb
stos
xor
add
rol
mov
arpl
pushl
scas
jge
dec
stc
jmp
xor
push
xchg
lcall
jg
inc
ss
adc
movsl
mov
inc
mov
int3
sbb
or
or
jno
outsb
mov
sub
push
nop
sbb
fidivl
das
xchg
pushf
mov
cwtd
aas
std
adc
clc
inc
push
mov
pushf
xchg
mov
jo
xchg
arpl
jne
popl
imul
sbb
jb
mov
movsl
and
mov
xor
cvtps2pi
dec
std
imul
jo
xor
repnz
inc
mov
loopne
lahf
mov
out
inc
mov
icebp
dec
mov
out
xor
sti
dec
lret
xchg
bound
sbb
sahf
mov
lods
xor
fwait
lods
mull
pop
repz
adc
lcall
pushf
push
lock
pop
mov
cmp
divl
mov
movsl
rorb
dec
fstp
dec
pop
mov
sbb
mov
push
pop
dec
loope
xchg
idivl
in
ja
sub
call
mov
inc
addr16
jge
scas
pop
mov
cmp
inc
xchg
notl
inc
cmp
jno
push
std
lret
or
test
xlat
mov
mov
repz
hlt
ds
lcall
mov
insb
mov
cmpb
ja
call
pop
pop
popl
cs
or
jl
out
pop
inc
enter
in
push
cmp
lret
fimull
in
mov
lea
dec
mov
sahf
or
adc
loope
mov
sbb
leave
cmp
dec
fldt
stc
sbb
movsb
repz
das
jb
cmp
add
sub
and
push
sbb
xor
popf
mov
push
add
jmp
pop
mov
add
xchg
dec
out
xor
push
xor
ret
cmpsl
jge
dec
inc
std
add
ds
cmp
push
adc
add
mov
sbb
in
fsubl
add
dec
dec
sub
outsl
lods
jne
shrl
jbe
mov
xchg
mov
and
insl
lods
outsl
mov
sub
das
shl
stos
or
aas
btr
dec
inc
ja
sub
xchg
push
sahf
inc
cli
test
push
leave
stc
out
testb
mov
dec
push
mov
xchg
mov
mov
cmp
addl
fisubrl
imul
mov
inc
test
mov
das
jecxz
inc
xchg
jbe
jae
loop
dec
cwtl
mov
cwtl
jb
xorb
loopne
int3
pop
orl
xlat
adcl
cmc
mov
sbb
mov
push
das
jb
jae
push
out
pop
adc
or
cmp
xor
pop
jmp
fcoml
jae
cmp
push
mov
js
loopne
adc
jle
pop
cs
arpl
push
push
add
jo
call
xlat
xchg
pop
sub
in
bound
xor
lcall
repnz
pop
jp
loop
mov
inc
outsl
sbb
outsl
in
mov
xor
add
dec
jo
stos
cmpsl
or
enter
test
dec
mov
lock
and
push
into
sbb
pop
aad
inc
and
orl
cmc
ja
mov
inc
dec
pop
and
lock
fldl2e
loop
mov
pop
outsl
push
es
test
ljmp
jge
pop
mov
xor
imul
or
js
icebp
ret
or
idiv
lock
xchg
call
adc
cmc
out
call
mov
push
and
pop
js
dec
inc
out
push
add
fwait
xchg
sahf
loope
insb
fstpt
xchg
xchg
sbbw
push
and
incb
sbb
xchg
and
rolb
or
sub
sbb
sbb
mov
inc
and
jb
inc
outsl
rcr
mov
and
add
mov
xor
stos
fldt
jle
popl
scas
adc
call
or
daa
lret
add
xchg
fbstp
push
inc
mov
in
pop
or
movsb
pop
add
and
sub
pop
jbe
jbe
push
adc
cmc
outsl
cld
mov
xor
stos
out
sbb
dec
jecxz
jo
pop
mov
dec
sbb
lods
repz
xor
mov
test
dec
sub
in
out
jae
sub
lods
pop
dec
sub
push
push
adc
movsb
lock
repz
push
shll
mov
mov
out
push
xor
mov
mov
ret
rorl
push
lock
adc
cmpsl
shlb
mov
mov
outsl
fsubl
cmpsb
lahf
cmc
lods
adc
add
call
push
clc
mov
orl
scas
jnp
push
inc
mov
pop
stos
int
or
aad
lcall
lcall
push
cld
jecxz
jbe
mov
jmp
dec
adc
xchg
or
xchg
test
out
rcrb
cmp
movsb
arpl
insl
shll
pop
adc
insb
xor
repnz
xchg
negb
xor
int
xchg
fadds
and
lds
and
push
shl
ds
fcomps
dec
lcall
iret
or
dec
call
mov
cmp
in
and
ret
je
sbb
out
arpl
and
jp
lret
xchg
add
jns
lock
out
scas
das
stos
sbb
dec
js
das
sarl
sub
xor
arpl
loop
mov
mov
and
jne
xchg
add
popf
aam
fidivs
cmpsl
xlat
push
int
xchg
rorl
imul
scas
mov
jmp
or
xchg
lahf
mov
cmc
and
out
jp
aas
iret
test
movsl
and
outsl
bound
mov
out
loope
mov
ror
mov
jae
cmp
adc
inc
mov
cmp
imul
inc
mov
data16
adc
sbb
aam
mov
add
xchg
sahf
cmp
mov
outsb
jmp
loopne
dec
ljmp
add
push
ja
aad
xor
pop
xchg
call
cmp
jle
lret
dec
mov
xor
pusha
xor
mov
js
shr
enter
dec
cmp
xchg
pushf
nop
iret
mov
or
mov
test
in
lret
mov
lahf
into
shrl
stos
sub
jnp
mov
mov
push
into
int3
inc
arpl
sub
popa
push
aaa
filds
out
jne
jmp
cltd
bswap
inc
and
push
xchg
inc
pop
imulb
fdivp
lods
mov
jo
cs
adc
stc
pop
xor
jno
adc
xchg
lcall
cltd
in
add
ret
pop
ss
icebp
mov
mov
rcrb
daa
into
data16
lea
xchg
mov
pop
test
mov
sub
shl
pop
inc
jo
arpl
mov
push
into
pusha
mov
mov
xchg
inc
push
cmpsb
mov
ss
cmp
mov
nop
adc
push
mov
mov
xor
in
jecxz
mov
cmp
pop
mov
in
aaa
icebp
lcall
or
popf
push
pop
lock
push
dec
bound
sbb
cmp
sbb
fwait
subb
push
mov
xchg
lcall
inc
and
and
lcall
int
push
jle
lea
mov
mov
pop
lret
lahf
mov
ret
shl
lods
push
cmp
inc
in
sti
mov
cltd
scas
adc
fwait
push
xchg
out
sbb
out
cld
adc
lea
aas
int
cli
in
ss
movb
or
pop
ds
je
fadds
test
push
lods
stos
mov
fdivl
mov
mov
push
aad
xor
pop
mov
lcall
in
outsl
loope
bound
mov
cmp
test
ret
aad
jo
pop
cmp
clc
mov
xchg
mov
inc
ret
jg
jl
jl
pop
xchg
aaa
imul
push
adc
repnz
xchg
loope
popa
aaa
xor
adc
inc
add
inc
pushf
lcall
add
loopne
lock
loopne
pushl
into
in
inc
or
jae
imul
cmp
dec
push
xor
mov
test
push
dec
jns
aaa
push
dec
imul
daa
pop
jno
movsb
dec
jle
sub
dec
pop
movb
call
jmp
roll
mov
jmp
shrl
aas
mov
imul
cmpsb
das
std
xor
movsb
push
cmp
in
push
mov
mov
shl
fnstsw
mov
lea
xchg
add
inc
and
lods
adc
xchg
sub
sub
or
lea
insl
push
stos
xor
test
pop
jb
and
ret
push
add
cmp
add
ficoms
cmp
rcl
cmp
sub
pop
jnp
add
dec
das
dec
xchg
and
fxch
lods
jmp
in
jp
sub
inc
repnz
cmc
in
rcr
enter
clc
adc
movsb
pop
loope
mov
cmc
mov
lcall
add
std
and
leave
ret
add
mov
jns
mov
mov
pop
stc
cmp
negl
leave
push
iret
cwtl
jb
inc
stos
rcrb
mov
test
fcoms
jb
pop
mov
jb
divb
xchg
subl
frstor
lods
addr16
int
xchg
mov
cmp
xor
imul
jecxz
lods
popf
fchs
xor
aam
mov
push
xchg
lahf
shll
inc
inc
and
xchg
mov
adc
fnstenv
jae
pop
dec
cmc
sub
push
jle
mov
or
sbb
hlt
jo
ffreep
testb
dec
push
arpl
into
xorl
popf
std
fcmovu
cmc
mov
mov
test
cmpsl
cmpsb
sbb
xchg
pop
jns
mov
push
adc
mov
push
scas
or
sbb
add
add
dec
dec
adc
rclb
ficoms
pop
inc
bound
pop
add
xchg
fcomi
fmull
daa
push
pop
ss
scas
test
push
mov
inc
lds
cmpsb
push
jne
inc
mov
fcomps
push
icebp
dec
arpl
ljmp
ret
loopne
pop
cli
int3
lcall
inc
inc
xchg
xor
or
dec
push
arpl
or
xor
add
sub
jmp
adc
sahf
in
test
mov
xchg
xor
loopne
xchg
mov
addr16
jbe
test
insl
mov
push
iret
test
and
scas
test
mov
bound
xlat
stos
push
lahf
jb
mov
xor
mov
and
iret
jb
fs
test
sub
pop
pop
mov
addr16
and
movsb
fs
inc
add
aas
cmp
ljmp
lret
jmp
mov
xchg
xchg
inc
int
lcall
xorl
sarl
mov
lret
lods
jbe
fbld
imul
lock
lahf
aas
out
add
lret
inc
in
push
int
subl
dec
xor
mov
repz
xchg
pop
ss
sbbl
cs
cs
stc
shl
xchg
repz
jp
mov
jb
out
cld
adc
mov
fnstsw
sub
jae
xor
test
sarl
pop
sahf
adc
movsb
push
test
push
or
xchg
pop
xor
fsubp
nop
jno
mov
xchg
movsl
jle
jns
mov
outsl
xchg
jl
inc
jno
sub
outsb
push
in
lret
push
jae
test
xchg
mov
into
lret
out
lret
cmpsl
data16
cltd
fidivrl
ds
adc
dec
repnz
aam
xlat
push
repz
adc
adc
jno
and
pop
les
dec
sbb
in
push
push
mov
mov
sbb
stos
mov
aad
inc
lock
cmp
push
cmp
out
pop
stos
pop
sahf
insl
sti
dec
mov
hlt
jb
mov
mov
jno
xchg
cmp
add
adc
jnp
sbb
enter
mov
ljmp
and
rcl
test
push
jnp
pop
pop
sbb
push
jmp
lcall
gs
fwait
mov
xor
aaa
cmp
pop
or
jo
jbe
bound
stos
push
sbb
in
and
or
cld
aam
cwtl
data16
mov
sbb
inc
xchg
sub
add
push
nop
xbegin
pop
leave
insb
xchg
cmp
and
loop
mov
int3
dec
cwtl
scas
fcmovne
jne
or
mov
pop
inc
sub
shlb
lcall
jae
xchg
inc
fcomps
movsb
lret
andl
push
cmp
cmc
jge
mov
mov
insl
iret
int3
and
movsl
or
inc
sub
testb
sub
out
pop
push
push
test
mov
leave
divl
xchg
adc
in
push
cld
inc
test
mov
out
ret
push
outsl
cwtl
mov
in
fimull
testb
shll
push
fidivl
loopne
rcrl
xor
sahf
mov
ret
dec
jb
xchg
inc
inc
dec
sbb
sbb
es
out
loop
pop
ret
mov
popa
mov
sub
shll
in
push
imul
push
daa
or
push
outsb
mov
into
scas
dec
pop
adc
push
jmp
cmpsl
ds
mov
mov
ds
ficomps
repz
sub
outsl
dec
mov
jmp
aam
aas
and
imul
shrb
push
fisubs
push
and
bound
ret
pop
pop
cmp
gs
mov
sub
mov
xor
cmp
inc
inc
iret
rolb
fdivl
orl
inc
cmc
pop
sbb
testb
sbb
xchg
or
inc
mov
daa
adc
mov
xchg
add
je
add
mov
add
popa
mov
mov
and
int
mov
insb
sahf
jno
dec
mov
out
stos
sbb
or
lods
push
or
jb
insb
mov
mov
push
nop
xor
cmc
xorb
and
adc
cmp
fisttpll
pushf
mov
xchg
in
fcomps
ljmp
inc
inc
es
inc
aam
mov
clc
iret
fstps
sti
mov
in
inc
add
int3
lret
sbb
ds
pushf
xor
test
fldenv
pop
sahf
push
gs
push
shlb
sahf
pop
or
fsubrl
shll
add
push
mov
add
inc
cwtl
sub
imul
ja
xorb
add
icebp
int3
je
into
adc
hlt
roll
cmp
ja
movsl
ds
je
in
push
jle
stos
dec
sub
and
icebp
mov
mov
or
add
cwtl
stos
lret
jne
mov
int3
inc
add
inc
andl
out
cmpl
and
out
cmp
in
test
loopne
dec
out
sbb
mov
ficoms
sbb
lds
lods
mov
movsb
into
mov
mov
cmpsl
aaa
dec
mov
mov
andb
aam
int3
xchg
test
clc
fdivs
xchg
xchg
inc
ja
sub
std
js
sub
popa
jae
std
mov
lahf
pop
insb
insl
enter
imul
test
lds
fsubs
cmc
and
fiaddl
shll
mov
cwtl
push
xchg
mov
lret
jmp
pop
scas
mull
jnp
sbb
push
mov
push
clc
shll
dec
jg
mov
push
vmovss
sbb
xor
insl
mov
je
mov
dec
pop
inc
fnsetpm(287
les
mov
scas
push
jp
fwait
lods
bound
cld
enter
mov
inc
mov
inc
inc
dec
mov
popf
xlat
andl
push
mov
push
jnp
jo
sub
push
fcomps
je
icebp
shr
repz
ds
add
sti
push
mov
popa
jp
arpl
mov
jg
cmp
adc
add
addr16
test
xor
fcomi
mov
xchg
add
add
mov
push
popa
js
cmc
ljmp
push
sub
inc
cmp
add
int3
repnz
mov
xor
cmp
inc
fmul
frstor
in
mov
pop
aad
leave
pushf
popa
xchg
or
mov
outsb
in
cmc
js
pusha
or
out
js
stc
add
xor
push
fisttpll
inc
cmpsb
cmpsb
cmp
push
or
adc
sub
xchg
aam
shl
inc
outsb
int
add
and
pushf
xchg
cmp
mov
sub
cmp
in
push
stos
jns
fs
adc
jmp
adc
lds
mull
in
jge
clc
inc
ficompl
add
or
repz
xchg
adc
cmp
adc
cmpsb
adc
push
ja
shrl
pop
aam
sub
mov
xor
dec
fistl
fwait
jno
dec
clc
dec
lret
pop
sub
cs
jecxz
cmp
lret
xchg
dec
ret
inc
lea
nop
push
cmpb
cmp
pop
sub
push
pop
mov
push
pop
cmp
inc
xchg
cli
push
jb
xor
inc
and
or
popf
and
xchg
aad
xchg
lret
xchg
das
jbe
ss
jl
ret
imul
test
shl
movsl
leave
fs
shlb
inc
lods
fidivrs
shll
and
sub
shlb
mov
push
insl
push
jecxz
pop
popa
insb
andb
mov
sub
stc
jne
and
stos
fiadds
test
mov
lock
xchg
sti
jp
mov
rcrl
mov
bound
pop
loope
out
pop
pop
cmpsb
xor
jle
sti
xchg
movsb
pop
popa
mov
lock
jmp
mov
jnp
sahf
cs
sbb
cmp
fisttpll
cli
aad
inc
mov
and
fstpt
das
mov
hlt
xor
fisubs
mov
pop
rorl
nop
ret
cmpsb
adc
ficomps
je
push
aaa
rcrb
pop
cmc
mov
push
dec
fwait
pop
push
adc
inc
jmp
lods
lahf
enter
mov
dec
sti
or
jne
and
daa
xor
fdivrs
and
mov
jnp
push
insl
lahf
imulb
in
inc
adc
jo
adc
xchg
mov
jno
mov
push
pop
enter
lahf
add
out
popl
jnp
outsb
fwait
into
push
mov
sbb
add
leave
cmp
xchg
dec
adc
cmp
or
jnp
cmp
cmp
xor
clc
cltd
lock
xchg
xchg
popa
scas
imul
test
adc
jl
les
cmp
jns
cmp
stos
pop
mov
or
mov
mov
ficoms
lahf
loope
aam
rorb
shlb
popa
call
imul
test
clc
or
sub
test
push
push
mov
dec
adc
dec
pop
insb
sub
incl
scas
in
push
pusha
add
iret
mov
das
ljmp
pop
aas
in
push
and
je
mov
jae
pop
dec
add
jae
repz
or
dec
popa
pop
pop
roll
mov
cmp
xchg
add
fisubs
lods
adc
push
inc
xchg
das
in
outsl
sbb
je
jl
pop
stos
jnp
js
pushf
jnp
test
jg
xchg
mov
sbb
or
push
add
fwait
shlb
mov
inc
mov
iret
push
mov
mov
pushf
push
mov
push
mov
js
loope
mov
int
mov
xchg
push
push
adc
fcomi
int3
cmpsl
xchg
jnp
sbb
loope
and
push
lahf
mov
enter
mov
adc
sub
push
pop
sbb
lock
insb
dec
mov
pop
sub
sbb
repnz
insb
dec
mov
mov
popa
mov
adc
pop
insl
jnp
xorb
mov
xlat
fdivrl
fiaddl
sbb
cmp
push
mov
sub
sub
inc
and
and
aaa
loopne
xchg
jbe
xchg
shl
and
push
and
jg
addr16
test
mov
cmp
test
mov
test
mov
lret
cmc
xchg
mov
push
and
sbb
mov
dec
sub
add
mov
into
aas
sub
and
jl
mov
lea
xchg
ret
pop
pusha
mov
pop
pop
mov
jnp
test
imul
and
add
jbe
sahf
dec
xchg
mov
xchg
sub
jge
leave
mov
fdivl
jg
mov
bswap
aas
inc
ss
mov
mov
stos
mov
mov
iret
sub
in
adc
stos
ljmp
out
cmp
xchg
inc
xchg
or
mov
iret
mov
mov
cmp
and
mov
jae
movd
sub
leave
add
out
mov
test
jb
mov
add
dec
adc
pop
jmp
inc
es
cli
cwtd
fs
inc
fisubs
out
cld
jp
pop
mov
frstor
lahf
lea
dec
add
fistps
pop
xor
in
negl
and
nop
sub
mov
mov
xchg
mov
leave
lds
cmc
lcall
lods
push
jnp
push
insb
push
daa
iret
lret
add
es
mov
sahf
add
sub
cli
clc
push
loopne
jecxz
addr16
sti
dec
xor
jp
jno
jns
pop
jns
mov
subb
stc
push
data16
mov
jp
dec
cmpsb
ret
pushf
add
int3
imul
adcl
sub
ss
js
lock
das
inc
shl
shrl
pop
adc
fisubs
ja
mov
xchg
mov
je
fdivl
or
mov
mov
fdivs
divl
test
or
or
mov
insb
and
sub
mov
adc
repnz
insl
test
add
jae
imul
inc
lods
sub
stos
add
iret
inc
cmp
adc
cmp
dec
push
cmc
or
jmp
pushf
sub
out
inc
gs
enter
mov
mov
mov
sub
sub
inc
mov
mov
nop
cli
xor
or
ds
loope
bnd
rcrl
sahf
out
in
inc
pop
jns
iret
push
mov
jno
mov
divb
push
cmp
mov
adc
push
popa
inc
push
popa
adc
ljmp
scas
jecxz
xchg
adc
cmp
jno
jne,pn
mov
fldenv
or
cmpsl
fdivrs
xchg
pop
lds
dec
insb
stos
mov
inc
insl
js
sub
pusha
andl
fs
mov
xchg
mov
mov
outsl
shl
push
stos
int
mov
popa
insb
js
cmc
mov
fimuls
nopl
out
adc
popa
mov
subb
pop
sbbb
inc
sub
mov
cmp
insb
pop
xchg
push
je
fcmovne
push
xor
outsb
fsub
dec
jne
jp
mov
jae
xchg
mov
add
mov
push
xchg
add
call
movb
or
cmp
mov
jle
roll
dec
jge
fstps
push
movb
pop
sti
aam
mov
jo,pt
mov
clc
loop
cwtl
xchg
lea
inc
sub
mov
push
shll
push
inc
mov
cmp
xor
dec
and
mov
push
cmp
lds
cmp
jg
out
sub
sbb
dec
pop
dec
sub
and
enter
test
popa
dec
and
xchg
pop
xchg
or
lahf
in
mov
or
push
adc
pop
xchg
push
mov
int
ljmp
mov
dec
sbb
stos
xor
dec
adc
mov
stos
dec
cli
jo
pop
pop
push
fwait
sbb
cltd
cmp
jo
jnp
mov
dec
insl
cld
fld
mov
fwait
std
imul
dec
ljmp
dec
cmp
sub
pop
pop
sub
xchg
or
xchg
cmc
mov
mov
cmp
stos
xor
add
mov
sbb
pop
pusha
inc
loopne
stos
hlt
xor
mov
dec
mov
add
dec
and
in
insb
jbe
sub
test
bound
pusha
outsl
cli
jbe
cmp
cmpsl
cmpsb
in
cmpsl
cwtl
xor
adc
idiv
out
sub
mov
push
sbb
push
push
fucomi
sar
sbb
mov
ljmp
aam
or
sub
push
sbb
out
and
add
sbb
pop
adc
mov
jns
punpcklbw
jne
adc
jl
mov
sub
in
out
flds
popa
scas
pop
cmp
or
and
push
test
mov
out
xchg
pop
insb
faddl
jle
fisttpl
inc
nop
pop
pushf
icebp
lock
lods
sub
xor
xor
stos
cmp
sbb
and
fcomps
dec
out
jne
fninit
lret
mov
jge
imul
imul
outsl
mov
scas
js
loopne
or
in
mov
rorb
mov
lods
addb
mov
xor
sbb
out
push
xorl
popa
lcall
rcrl
sub
or
jno
in
sub
jae
inc
adc
cmp
sub
push
cmp
pop
loop
hlt
push
jno
pop
sbb
loope
xor
mov
iret
cmp
daa
outsl
enter
or
lahf
or
mov
lods
enter
popa
fwait
cli
dec
mov
in
pop
mov
ljmp
aaa
push
jle
shl
push
arpl
push
lods
dec
mov
popf
jns
adc
jns
mov
mov
inc
or
inc
cmp
inc
xchg
mov
dec
mov
ljmp
pop
hlt
notb
cmp
in
das
push
sub
pop
jg
and
mull
out
push
out
in
and
fsubrp
or
xchg
xor
mov
test
rcr
lret
xor
pop
pop
and
jge
shlb
repz
in
add
and
sti
or
pop
add
push
and
push
out
push
push
inc
push
les
imul
cmp
mov
dec
movsl
popf
dec
sbb
add
test
jl
sbbl
lds
xor
fistpll
sarl
lds
mov
xchg
dec
ss
mov
call
pop
in
pop
push
data16
cmc
push
mov
outsb
repnz
call
or
rcll
adc
stos
sti
mov
lret
cmpsb
cmc
inc
or
dec
xchg
fwait
popa
mov
pop
pop
sbb
pop
shrb
pop
push
leave
xchg
or
xchg
jo
pop
clc
jg
lret
mov
push
in
mov
xor
sti
enter
xchg
daa
mov
pushf
add
test
pop
ja
cmp
sarl
in
aas
cltd
ficoml
aaa
dec
in
out
loope
jbe
sbb
cs
daa
fs
stos
dec
repz
or
pop
cmc
add
in
cmp
cmp
arpl
or
adc
push
or
cmpsb
jge
fiaddl
lret
jle
sti
xchg
pusha
inc
inc
add
negl
push
push
sbb
jg
ljmp
in
dec
add
sub
pusha
das
lret
xchg
mov
inc
dec
jle
pop
rorb
movb
shlb
dec
push
xchg
dec
sti
sub
or
cmp
out
out
mov
in
push
int
cli
std
int3
in
sbb
fistps
ret
sbb
loop
adc
addl
loope
stc
mov
mov
and
xchg
movsb
mov
xor
mov
add
jg
fisttpl
lahf
insb
cli
shr
arpl
aad
aas
test
push
loop
popf
mov
movsl
sub
roll
je
sbb
mov
and
mov
into
add
sbb
or
in
or
add
rcll
addb
testb
jp
jo
mov
pop
aaa
or
int3
cli
and
xchg
push
mov
fucomi
sti
loop
je
insl
cwtl
aas
aas
sbb
shrb
fsubrs
and
leave
xor
fisttpll
sub
cmp
pop
push
sub
xchg
push
xchg
inc
add
cmpsl
and
jge
in
push
lods
notl
and
dec
fcmovne
rorl
shrl
xchg
sub
mov
fldl
js
ret
push
pop
mov
sti
fdivs
fildll
mov
bound
sbb
push
bound
out
xchg
fimull
jmp
outsb
or
xchg
inc
xchg
xchg
mov
xchg
adc
faddl
xchg
or
xchg
mov
loopne
call
dec
or
ret
sbb
ret
and
cmp
ss
mov
lea
sbb
xor
jns
outsb
popf
in
je
sub
jle
jb
das
call
cli
insl
push
cmp
jbe
insb
mov
push
cli
out
loop
mov
imul
mov
mov
dec
arpl
scas
dec
dec
dec
lds
mov
sbb
mov
pop
jecxz
hlt
sub
pop
add
adc
icebp
xlat
stc
sbb
inc
mov
fstl
scas
loope
mov
push
xor
rol
dec
fmuls
in
mov
fucomip
out
pop
clc
jl
lods
dec
inc
in
or
pop
or
pushf
fwait
sarb
test
push
cmp
fldcw
adc
sbb
test
or
ss
dec
jbe
int3
pop
xchg
mov
sarb
cmpsl
adc
test
insb
fidivl
mov
imulb
adcl
fstpt
xchg
rcrb
mov
mov
movsb
add
stc
lock
sub
hlt
movsb
xchg
clc
outsb
xor
shr
dec
icebp
xorl
xchg
std
inc
rcl
cmp
push
clc
xor
sbb
xor
push
jne
bnd
mov
push
sbb
out
inc
sub
nop
add
test
xor
push
push
sahf
mov
lret
mov
pop
xor
inc
stc
rol
les
fsubrs
fisubs
mov
push
pop
jl
cmp
pop
cmp
add
push
movsb
adc
stos
outsl
mov
inc
sbb
inc
cmp
xchg
mov
push
and
das
push
in
aaa
pop
pop
inc
add
push
bnd
les
lret
xor
push
es
sbb
popf
add
cld
jo
adc
out
push
push
jae
call
sub
clc
repnz
jno
scas
ret
push
and
nop
lods
pop
out
orl
pop
movsl
gs
push
rorl
push
and
and
add
test
push
add
mov
cwtl
inc
inc
imul
adc
sti
xlat
push
mov
pop
jmp
pop
push
xor
xlat
jmp
rcrl
js
or
and
cmp
or
mov
mov
adc
cmp
mov
mov
push
imul
repz
in
cmp
repz
and
incl
ret
jb
and
iret
outsl
imulb
lcall
jbe
mov
rclb
dec
std
xor
add
in
hlt
shrd
and
test
lea
sub
fidivrl
imul
inc
cmc
cmpsb
pop
insb
pop
imul
sbb
pop
jg
fisttpl
mov
lret
add
dec
outsb
xor
xor
into
aam
pusha
enter
sbb
addr16
shrb
aas
je
pop
push
ret
fimuls
and
sub
sahf
xchg
dec
sahf
fcomps
rolb
push
enter
mov
nop
mov
idiv
pop
cmpsb
push
insl
sub
add
xor
das
repnz
or
lock
ss
mov
mov
lock
daa
cli
cld
pusha
jle
ja
add
jbe
repz
inc
push
mov
mov
jae
pop
fisttpll
push
sub
dec
ret
cmc
lcall
popf
in
lea
test
jl
and
push
sub
pop
mov
icebp
xor
pop
jns
lods
inc
sub
inc
mov
and
in
movsb
xchg
scas
in
cmp
dec
push
out
repz
cld
and
outsb
popf
je
cmpsb
sbb
dec
sarb
call
loop
ja
sahf
sbb
lds
and
dec
sbb
cmpsb
inc
lret
aas
outsb
pushf
mov
sub
dec
cmp
insl
decl
movsb
mov
adc
and
call
mov
jno
dec
push
sub
fdivrl
mov
fdivs
lds
test
repz
adc
aam
inc
aad
in
popa
clc
pop
add
cmp
push
enter
movsl
sahf
fdiv
movsb
dec
mov
pop
ljmp
cmpsb
call
jnp
push
add
inc
in
push
push
jbe
push
push
mov
int3
sti
adc
aas
bound
movsl
mov
int
mov
mov
mov
aas
xchg
out
dec
sub
cmp
iret
mov
data16
dec
cli
incl
ljmp
adc
xchg
adc
loopne
mov
mov
js
fucom
or
dec
fsubrs
lret
outsb
stos
std
xchg
loopne
sbb
in
daa
push
mov
xorb
jge
mov
lock
in
cmp
pusha
pop
movsl
mov
xchg
xor
mov
cmp
in
in
es
fs
xor
dec
xor
adc
test
leave
fwait
bound
xchg
xor
cmp
dec
cmp
stc
repz
push
pop
xor
loope
mov
push
scas
xor
and
jae
add
nop
idivb
xor
repz
in
rol
xchg
popa
loope
or
or
inc
aad
fnsave
mov
inc
sub
push
rcll
lock
aam
movsl
mov
mov
cli
shr
sarl
lahf
ret
int3
stos
add
inc
lock
test
outsl
int
jg
add
les
jge
cmpsl
sbb
iret
adc
lock
test
inc
out
out
sub
mov
outsb
mov
jle
mov
xlat
clc
jb
mov
jle
pop
mov
jbe
sbb
scas
xchg
jecxz
sub
hlt
fwait
pop
cmp
mov
sbb
shlb
lcall
out
add
or
xchg
jnp
movsl
mov
xor
or
testb
xchg
rol
out
xlat
cmp
mov
xor
push
popw
mov
xchg
and
xchg
add
sbb
inc
pushf
sub
add
adc
outsb
xor
xchg
dec
mov
mov
cmp
mov
mov
iret
mov
ffreep
in
sbb
aam
out
lods
sti
mov
cltd
in
inc
les
outsl
adc
cmp
jo
adc
xor
call
mov
pushf
and
popa
cltd
cmc
pop
adc
cld
or
xchg
sbb
lea
inc
inc
xchg
cli
xor
dec
mov
mul
cltd
jge
inc
lcall
fwait
push
adc
inc
ret
add
sbb
fsubp
or
in
pop
je
xchg
repz
mov
int
adc
fidivrl
aam
daa
mov
jmp
ja
sbb
cs
ror
mov
cmpsl
cli
push
push
mov
pop
shll
out
test
rcll
mov
sbb
iret
mov
bound
push
fimull
push
stos
cs
xchg
test
in
pop
in
xchg
jns
icebp
shll
xor
mov
lock
lds
icebp
xchg
mov
fdivrl
mov
and
fsubs
out
sbb
movb
sbb
stc
xorl
jge
sbb
sub
bound
and
in
and
jmp
inc
js
hlt
test
push
mov
sub
xlat
cmpb
jo
fildl
push
or
push
sbb
arpl
or
sub
dec
adc
out
push
adc
pop
cmp
adc
push
insl
pop
xor
into
in
lret
repz
xor
pop
sbb
ficoml
repz
mov
cmc
lcall
je
out
mov
sbb
or
sbb
fsubl
ret
and
push
cmc
add
mov
cmp
ret
mov
pop
pop
xor
leave
pusha
sbbl
xlat
and
andb
and
shrb
mov
ja
mov
arpl
mov
xor
mov
aas
movsl
cmp
xchg
rcrl
aam
mov
icebp
cmp
xor
ljmp
xor
cwtl
or
out
emms
int
pusha
sbb
sti
and
aam
je
jbe
enter
inc
ja
jbe
sub
dec
test
shll
outsl
mov
rdpmc
lea
and
mov
xchg
cmp
repnz
push
and
bsr
in
mov
stos
and
pop
enter
mov
pop
sbb
inc
lahf
idivb
out
int3
cltd
fadds
inc
lods
mov
mov
inc
repnz
push
data16
pop
leave
sub
mov
movsl
stc
xor
jbe
test
ja
xchg
sub
xchg
or
cmp
subl
enter
lahf
in
xchg
xor
repnz
mov
fstpl
push
pop
addr16
pop
xlat
adc
dec
push
loope
jmp
loopne
and
loop
mov
jno
sub
in
pushf
cs
loopne
push
out
sub
loop
rol
push
jb
fpatan
lock
in
pusha
sbb
mov
adc
test
movsl
int
loopne
sahf
inc
and
pop
outsb
in
shrl
push
jecxz
les
lods
rcrb
push
outsl
pop
lahf
out
pop
dec
lahf
and
dec
push
mov
test
loopne
out
xchg
jle
or
jne
push
pop
lds
add
pop
pop
pushf
arpl
scas
insb
cmp
adc
mov
xchg
xchg
adc
xchg
push
sti
sbb
addb
aaa
jg
cld
pop
scas
dec
push
mov
pop
mov
jg
xchg
lock
loope
lods
jbe
xchg
movsb
push
xor
in
insb
adc
faddl
in
stos
mov
out
and
clc
or
shl
imul
fstl
jmp
bound
dec
xor
xor
push
shlb
push
sahf
push
jle
shlb
repnz
cs
je
xor
inc
enter
sbb
in
test
and
and
inc
insb
inc
mov
add
xchg
pop
sub
nop
mov
xor
lahf
mov
pushf
lods
adc
clc
pop
aad
int3
xchg
or
stos
sbb
ds
ja
xchg
in
outsb
push
mov
leave
sarb
stos
add
mov
pop
leave
mov
dec
mov
jns
and
xchg
mov
ffreep
sub
popf
cwtl
jb
sbb
insb
ds
add
mov
sbb
orl
add
stos
aad
ja
sub
fnstenv
cltd
add
iret
mov
test
sti
cmc
lock
xchg
add
insl
ficompl
push
xchg
aas
dec
sbb
in
mov
in
dec
outsl
idivl
jl
push
repz
jo
repnz
ja
pop
adc
xchg
and
add
sarb
movntq
mov
cmp
xor
test
push
cmp
cli
pop
fdivr
adc
cmp
push
mov
adc
lock
pop
test
xchg
mov
popf
adc
sbbl
test
sti
aaa
push
xor
push
mov
fwait
jns
xor
jecxz
mov
jbe
sbb
aaa
mov
cwtl
mov
xlat
sti
adc
jbe
mov
cmp
dec
fs
inc
repnz
icebp
push
imul
sub
lock
inc
push
pusha
pusha
mov
out
mov
push
int
xchg
lahf
bound
and
rcrb
xlat
or
cmp
lds
movsl
dec
mov
std
xor
cmp
adc
xor
pop
mov
jl
pop
outsl
ljmp
mov
adc
pop
test
dec
cmc
adc
cld
add
test
xchg
mov
incb
dec
and
cli
clc
push
mov
fisubs
jae
mov
lret
add
jle
or
lret
adc
ds
mov
or
sub
mov
sub
test
jns
push
xor
lcall
cmpsb
dec
jns
movsl
out
mov
cmp
ret
int
out
fdivrl
pop
sbb
mov
adc
icebp
cmpsb
leave
jns
mov
hlt
inc
loope
cmc
jns
insb
aaa
jl
rcll
test
xlat
adc
sti
sbb
cmpb
testl
bound
popa
inc
and
and
shll
pop
pushf
shll
xorb
popf
clc
dec
xor
add
adc
fwait
mov
decl
xor
jg
push
dec
dec
ficoms
lahf
mov
lahf
cmc
jae
subl
pop
gs
ss
ret
test
stos
mov
xor
jmp
push
lods
mov
inc
hlt
les
push
fldlg2
pushf
in
fsubl
xor
xchg
arpl
mov
stc
sub
cli
outsb
and
loop
ljmp
jno
mov
add
mov
stc
cmpsl
cmp
jl
jge
aas
cmpsl
dec
stos
pop
lcall
cs
inc
inc
fld
mov
in
or
andl
subl
in
lock
clc
and
aas
addl
fxch
mov
test
repz
rclb
dec
xor
and
aas
call
fsub
xor
mov
out
cli
fidivrl
jmp
sub
stos
enter
xchg
mov
or
xor
loope
pop
cli
sahf
movsl
int
jle
iret
pop
sahf
xor
xor
in
rolb
cmp
aaa
pop
and
and
sbb
ret
out
fsubl
and
mul
sub
xlat
jg
add
pushf
xor
loop
popf
push
xchg
imul
xchg
and
mov
scas
loopne
sbb
sub
xchg
daa
cmpsl
lea
dec
mov
gs
insb
fmuls
dec
fidivl
mov
mov
adc
push
pop
sarl
hlt
and
jns
testb
pop
fcoms
push
push
jns
mov
pop
mov
sbb
mov
lea
pop
sar
loope
mov
jl
jne
push
out
sahf
imul
push
push
call
add
out
push
cmp
cwtl
sub
es
pop
or
lods
bound
ja
pop
ljmp
lret
ljmp
mov
xchg
ficoml
sti
mov
xchg
adc
fimull
cmp
push
jge
xchg
adc
lds
loop
imul
mov
xchg
jb
ja
movsb
mov
mulb
and
out
or
pop
sbb
dec
jle
xchg
or
adc
clc
xchg
roll
sbb
jno
sub
ja
adc
mov
iret
dec
lahf
inc
loope
mov
fdivs
outsb
mov
out
bound
xor
dec
mov
pop
repnz
imul
mov
je
gs
mov
sbb
mov
xorl
jnp
sbb
test
pop
mov
popa
repnz
pop
jecxz
je
add
sub
xor
idivb
xor
sbb
or
add
insl
push
pop
aaa
insl
in
jnp
scas
and
pop
fsub
dec
imul
push
in
hlt
mov
pop
xor
pop
sub
call
push
cs
pop
xor
stos
cli
mov
xor
pop
je
fisubs
loop
pop
cmp
inc
xchg
add
or
lods
icebp
out
aam
outsl
cmp
dec
add
mov
pop
mov
adcl
test
dec
pushl
stos
js
js
mov
cmpl
push
pop
arpl
push
push
nop
push
dec
mov
out
jnp
xchg
or
nop
out
das
cmp
lahf
cltd
fnstenv
cltd
insl
sub
daa
js
add
xchg
mov
push
scas
xlat
sub
dec
and
imulb
adc
inc
in
pop
out
fwait
jne
js
aas
adc
pop
push
js
mov
jno
xor
inc
jle
add
int3
ret
inc
out
scas
bound
xorb
xlat
ljmp
mov
pushf
pop
or
jle
xchg
mov
test
pusha
in
inc
data16
test
add
ds
mov
lcall
ret
cli
hlt
sar
clc
pop
adc
or
xchg
call
adc
into
mov
mov
push
repnz
dec
xchg
sbb
dec
inc
andb
add
jmp
in
fidivs
or
in
leave
push
mov
shlb
aad
mov
out
int3
in
lock
mov
push
out
cltd
scas
fnsave
fisubrl
xchg
scas
xchg
mov
arpl
or
std
jb
ja
jmp
idivl
in
in
push
and
xchg
sti
xor
mov
or
mov
std
sub
call
lock
jbe
inc
or
outsb
jbe
dec
pop
fsts
cmp
mov
jp
cmc
es
jbe
add
fistl
bound
int3
and
insb
mov
js
dec
insl
or
rcll
iret
mov
out
cmp
aad
inc
jge
pop
loope
fisubrs
shll
and
out
outsb
pop
jecxz
pop
int
push
mov
xchg
push
push
jnp
pop
xchg
rcll
fstl
pop
mov
mov
pop
notb
pop
inc
jnp
lahf
mov
arpl
fisttpll
xor
ficompl
pop
inc
cmp
dec
std
popf
cmpsb
rcr
xor
mov
lret
stos
sub
cmp
fisubs
jge
push
xorl
aaa
adc
shlb
sahf
push
pop
mov
push
push
nop
sahf
or
fidivrs
mov
out
cmp
or
mov
shlb
xor
repnz
push
push
test
add
mov
mov
push
pop
cli
xor
pop
pop
pop
lds
mov
xor
shll
cmp
sub
dec
ljmp
xchg
mov
mov
sub
inc
mov
xchg
xchg
lock
sub
stc
fdiv
inc
jo
xorl
imul
jmp
clc
ds
rcr
test
add
pop
lods
or
xor
inc
je
bound
test
inc
call
sti
sbb
into
xchg
xor
in
int
jge
cmpsb
push
dec
or
negl
mov
mov
gs
adc
les
or
paddusw
adc
dec
or
addr16
mov
xchg
shll
xorl
sbb
dec
fwait
sbb
xchg
push
mov
mov
test
xorb
add
rclb
or
pop
cmpsb
sti
mov
mov
enter
mov
or
lods
add
fs
mul
fisubrs
add
ret
pop
cmp
test
and
dec
pushf
adc
shll
sbb
xor
scas
punpckhwd
add
popa
push
xchg
cwtl
jp
mov
dec
mov
mov
stc
out
pop
fadds
and
mov
decb
mov
dec
jl
roll
test
mov
and
push
cmpsb
sub
dec
jnp
or
adc
cwtl
pop
cmp
fwait
jbe
cmp
cltd
sbbl
or
pop
lret
push
pop
dec
mov
stos
jle
ss
push
stc
or
std
xchg
repz
outsb
movsb
dec
sub
pop
mov
outsl
mov
cmp
into
or
xchg
stos
mov
xlat
mov
scas
paddq
jmp
dec
das
push
mov
pushf
lds
daa
xchg
dec
push
mov
or
xchg
lock
loope
inc
and
jmp
std
inc
movsb
sbb
cs
xor
lcall
xor
mov
rcrl
out
pop
lock
popl
mov
test
mov
leave
cli
push
in
and
imul
lds
fiadds
cld
into
pop
pop
nop
sti
or
mov
ljmp
jne
jl
idivb
push
mov
je
jne
int3
xchg
mov
outsl
out
sub
and
push
add
jl
sub
inc
xor
mov
ljmp
sbb
inc
inc
sbbl
sbb
cli
jns
dec
sbb
dec
lods
faddl
xchg
mov
dec
xchg
cli
stos
rcrl
ja
fistps
adc
xchg
or
mov
pop
add
repnz
xchg
add
jp
mov
or
in
stos
mov
cwtl
mov
and
pusha
out
mov
nop
adc
mov
icebp
inc
dec
xchg
test
sub
popf
popw
cmp
daa
mov
pop
dec
out
mov
dec
cltd
ficoml
jb
jns
and
add
jb
hlt
test
sbb
in
lret
cmpsl
push
or
mov
into
mov
cld
iret
cmp
hlt
sahf
in
rclb
rol
sub
repz
mov
sbb
popa
outsl
aad
mov
mov
pop
test
leave
sahf
jecxz
cmc
rorl
fdivs
popf
lcall
mov
xor
adc
xor
and
cmp
pop
push
sbb
sub
push
jno
nop
xor
mov
pop
push
mov
xor
xor
addl
aam
mov
loop
test
mov
cmp
pop
in
mov
ds
sahf
fimull
cmp
aaa
push
cmp
cmc
xchg
test
pop
jecxz
loopne
xchg
sub
dec
jbe
mov
ret
cmp
sub
shl
in
or
pop
dec
sub
mov
cli
mov
fnstsw
popa
sbb
loopne
inc
scas
jns
jne
push
xor
jecxz
mov
lds
lea
data16
push
xchg
mov
cmp
ds
push
mov
pop
test
loope
in
ret
xor
in
sub
sbb
mov
scas
lods
adc
adc
push
dec
popa
mov
fs
sbb
stos
dec
mov
push
addr16
sbb
rcr
lods
dec
andnps
xchg
cs
sub
ss
arpl
fidivs
pop
dec
outsb
dec
adcb
mov
xchg
cmpsl
ljmp
mov
sub
hlt
pop
cmp
and
xor
sbb
fmuls
test
xor
lods
adc
ret
dec
dec
out
gs
push
pop
sub
mov
fs
subl
add
add
nop
and
cld
mov
mov
add
pop
and
test
movb
cmp
jae
mov
sbb
xor
into
pop
add
adc
mov
mov
add
arpl
mov
fdivrs
jmp
inc
stos
dec
and
stos
jge
or
add
and
push
or
jl
xchg
loope
cmpxchg
add
lods
cmp
jae
addr16
mov
mov
idivb
xchg
or
or
or
push
cwtl
sahf
dec
push
imul
idivl
or
xchg
xchg
scas
mov
sub
adc
loopne
xchg
jb
fcompl
and
iret
mov
test
cmp
jp
push
and
xor
inc
incl
out
scas
pop
dec
out
pushl
fwait
add
sub
jns
rorl
das
dec
pop
sbb
mov
lcall
lock
mov
insl
or
mov
xchg
cli
stos
clc
pop
inc
stos
sbb
sub
mov
sbb
aam
sti
adc
sub
pop
adc
jno
ljmp
movsl
ljmp
mov
fdivrs
nop
imul
cmpsl
daa
loope
push
adc
push
pushf
out
inc
lds
or
pop
cld
dec
mov
xorl
adc
sub
cmpsb
jmp
inc
addl
aam
xchg
push
orl
xlat
mov
lcall
adc
cmp
jae
lods
or
mov
dec
cmp
insb
bound
lea
pusha
into
fidivs
lcall
lret
ret
leave
xchg
push
test
fucomp
leave
jmp
fnstsw
mov
xchg
mov
or
pop
and
add
mov
jae
shlb
sbb
push
test
rcl
popl
inc
stos
push
sbb
add
mov
xchg
dec
test
sbb
mov
and
sbb
sbb
sbb
jmp
sub
or
fcmovu
mov
in
cmp
rcll
fistpl
push
mov
xchg
aam
jne
add
mov
insl
mov
jmp
pushf
inc
adc
scas
xchg
lods
mov
push
push
push
lret
ud1
cmp
les
aas
cwtl
push
stc
ljmp
or
adc
pop
mov
mov
pop
divl
or
lea
jmp
in
mov
mov
in
cli
loope
xlat
sub
cmp
sarb
mov
pusha
xchg
dec
jne
data16
xlat
fbstp
out
xchg
pop
scas
stc
jae
fcmove
dec
fisttpl
scas
leave
movsb
test
push
push
ds
orl
xor
lcall
xor
cmp
fstl
es
or
and
mov
icebp
xor
pop
push
jno
pop
ds
jecxz
push
adc
ficoms
pop
aaa
jnp
frstor
jne
cmp
mov
loope
mov
push
fnsave
imul
out
jg
rorb
jle
inc
aaa
jp
push
pop
test
adc
into
cmpsb
dec
sub
xchg
ds
cli
xchg
popf
repz
jns
cmp
nop
shrl
cmp
xor
push
adcl
pop
inc
repz
xor
push
aas
push
dec
repnz
mov
mov
fistpl
loope
fnstsw
sbb
in
fldl
pusha
mov
add
xor
mov
sub
lret
jnp
out
cmc
mov
mov
adc
xchg
rorb
addr16
mov
loopne
gs
mov
inc
pop
mov
loop
push
int3
mov
and
or
inc
push
jns
mov
loope
cmpl
cmp
imul
sbb
inc
sub
xchg
mov
adc
lods
xor
jb
pop
mov
lret
faddl
mov
scas
mov
aam
daa
xor
jle
mov
dec
mov
ret
jo
add
pop
pop
imul
xor
mov
xchg
inc
ror
call
and
loopne
insb
scas
sti
or
add
dec
and
inc
adc
sar
fisttpll
or
lods
jae
xorb
and
jne
inc
sbb
mov
add
or
add
inc
sub
and
loopne
xrelease
aaa
add
adc
aas
lcall
fmull
push
aaa
icebp
dec
aam
cmpl
push
jp
pop
repnz
inc
pop
shlb
nop
cwtl
dec
pusha
jno
push
mov
nop
repz
out
cli
jae
push
add
iret
add
sbb
outsb
adc
cli
sbb
add
lea
adc
cmpsl
xchg
fsubl
fs
int3
push
movsb
jle
inc
mov
in
add
inc
inc
mov
push
inc
jae
inc
fcompl
pop
xchg
mov
inc
in
arpl
inc
rclb
sbb
shll
cmp
mov
movsl
pop
xchg
xchg
mov
dec
dec
out
adc
or
xchg
mov
pushf
pop
inc
and
sahf
mov
out
xchg
mov
lods
cmpsl
lret
pop
fisubl
icebp
push
and
xchg
fiadds
jb
push
xchg
mov
pushf
inc
add
jg
sub
mov
pop
dec
imul
lods
out
sbb
mov
or
stos
xor
hlt
and
repnz
add
fbld
mov
or
idivb
pop
adc
test
push
ja
and
mov
xor
add
mov
inc
hlt
pop
sbbb
jecxz
popa
and
pop
mov
jne
fld
gs
divb
sub
push
push
stos
int
cmpsl
sahf
scas
ret
cmp
mov
adc
dec
add
mov
arpl
iret
sbb
fbld
add
sahf
xchg
sarb
xchg
xor
xor
rcll
sub
cmp
fiaddl
lcall
pop
imul
dec
and
cmp
not
rcrb
or
pop
mov
sar
insb
sub
lea
das
dec
rcrl
and
push
lret
sbb
pop
xchg
xchg
addl
sub
cs
cwtl
xchg
mov
lock
mov
shlb
int
in
fsubl
jmp
stos
daa
pop
cmp
fwait
pop
fdiv
divb
scas
std
cmp
out
js
xchg
sbb
pop
mov
xor
imul
xor
shlb
pop
inc
mov
sbb
addr16
stc
inc
adc
mov
mov
mov
jecxz
in
cs
ja
ficomps
mov
and
rcll
inc
cmpl
outsl
notb
les
mov
jle
and
xlat
test
inc
pop
cmpsb
mov
aaa
iretw
aam
in
mov
pushf
push
or
mov
push
xchg
subb
cmp
fdivrl
cmp
lea
push
jbe
ja
sbb
bnd
aad
adc
test
and
mov
cmp
xchg
jae
icebp
adc
lahf
fisttps
out
popa
subb
jl
dec
pop
xorl
mov
and
sub
mov
iret
add
ffree
loopne
inc
std
add
pop
cmp
jg
xchg
insb
and
insb
mov
jg
pusha
in
push
orl
out
int3
add
and
and
loopne
jmp
jp
adc
movsb
xor
test
jecxz
mov
cmp
pushf
test
and
and
adc
mov
popf
imul
inc
shlb
dec
pop
cmp
aam
xor
fistps
pop
repz
leave
mov
pop
je
push
xor
clc
xchg
mov
sti
std
lret
imul
or
rcll
sarl
xchg
mov
jb
sub
sbbb
xchg
shrl
ja
push
hlt
sbb
push
xor
dec
cmp
mov
sbb
ljmp
scas
hlt
pop
aam
mov
cmc
mov
pushf
lret
adc
sub
push
xchg
aaa
add
insl
aam
rolb
aad
mov
sbb
and
nop
inc
mov
test
adc
je
push
in
mov
lods
xor
sub
sub
cmpsl
in
jnp
arpl
shrb
cld
cmpsl
loope
push
xor
mov
in
daa
sbb
or
jnp,pn
fcom
negl
mov
ja
sbb
pop
stos
sbb
adc
test
std
xchg
adc
jle
cmc
lcall
or
jle
xor
push
xor
iret
stos
adc
jbe
sarl
in
movsl
fidivrl
and
imul
fnstenv
lea
dec
pop
fwait
jne
aas
sbb
xorl
push
xchg
add
incl
dec
clc
mov
test
mov
mov
mov
clc
pop
rorl
mov
nop
add
outsl
lds
inc
arpl
divl
and
lahf
inc
xor
idiv
ja
cmp
sahf
inc
or
push
sub
and
out
jnp
jmp
cmp
test
pop
lret
and
stos
loope
lret
xchg
bound
test
orb
xor
xchg
jecxz
mov
push
ret
push
stc
push
dec
outsl
scas
push
testl
ljmp
mov
or
sbb
sbb
add
sahf
js
mov
pop
jo
stos
dec
repz
xor
pushf
and
lret
hlt
insl
leave
lea
pusha
popl
inc
test
xchg
dec
loopne
pop
mov
fs
cmpsl
mov
into
sub
ljmp
and
lea
sbb
pop
mov
push
mov
mov
add
lret
mov
cmp
lods
mov
mov
loop
dec
cmc
and
and
add
inc
mov
dec
dec
cmpsl
xor
mov
push
and
jno
jns
lods
inc
jecxz
mov
fcoms
outsb
xchg
xlat
std
push
jb
loopne
ret
loope
rorl
lea
into
cmp
out
js
sub
jae
pop
repz
cmp
cmc
xor
imul
jns
cld
xchg
or
sub
dec
aad
pop
mov
inc
rcll
jmp
inc
inc
repz
scas
imul
subb
notb
push
out
xor
jmp
mov
or
mov
mov
fstl
mov
loope
jnp
adc
dec
xor
je
lret
lahf
and
das
test
sbb
push
cmc
mov
rcll
and
gs
bndstx
lret
sub
add
les
outsb
sarl
or
scas
adc
mov
sarl
inc
imul
or
imul
test
dec
mov
rol
xlat
pusha
xor
popf
mov
jmp
hlt
mov
inc
out
xor
inc
rclb
test
ss
lods
sarb
dec
lret
movsb
cmpsl
ret
loopne
les
xchg
and
sbb
sub
jg
jg
ss
ljmp
pop
or
leave
shlb
xchg
pop
mov
pop
in
mov
xor
mov
bound
sbb
or
mov
sub
cmp
mov
push
sub
aad
adc
or
mov
ficomps
jbe
outsb
stos
out
stos
dec
test
add
jecxz
lock
stos
lds
pop
ja
sbb
rcl
sub
inc
addr16
popf
orl
mov
pop
shll
fidivrl
and
mov
jmp
mov
out
mov
jb
loop
data16
popa
pop
adc
bound
pop
jl
adc
xchg
jmp
movsb
xchg
xor
icebp
outsl
rcl
xchg
mov
adc
pop
out
insl
test
test
lcall
mov
mov
jp
cmp
fwait
lods
nop
push
adc
push
add
ret
xchg
push
insb
stc
jb
add
out
jp
sbb
pop
mov
in
in
push
cmpsl
popf
cmp
pop
stos
xchg
and
cmp
mov
enter
xor
lret
inc
push
cmp
out
adc
lock
dec
cmp
xchg
jne
mov
pop
rol
cs
data16
pop
inc
notl
les
sti
push
xor
ljmp
xchg
test
lret
push
sub
arpl
push
les
addr16
fs
sbb
ljmp
adc
je
fsubs
shr
xchg
pop
popf
popf
mov
sbb
aad
fildl
jns
in
lcall
inc
sub
sub
xor
add
add
std
add
hlt
lcall
or
and
cmp
inc
test
cli
sub
mov
and
mov
inc
pop
stc
sbb
scas
cmpsl
adc
jge
js
cwtl
mov
je
sahf
in
aad
imul
cmpsb
js
ficompl
fcmovnu
xlat
call
mov
aaa
aas
rol
in
mov
mov
push
int3
lods
add
mov
push
pop
add
mov
bound
mov
test
arpl
in
cmp
push
ja
lret
iret
xor
dec
mov
or
cwtl
jno
inc
inc
hlt
loopne
adc
daa
mov
mov
in
pop
or
mov
pop
mov
imul
insb
or
rcrl
and
mov
arpl
lret
pop
or
jo
arpl
in
aad
xchg
leave
inc
add
pop
xor
sti
inc
andl
add
in
dec
xchg
scas
mov
xor
insb
fnsave
aam
cmpsb
mov
add
lret
and
out
inc
sbb
add
inc
fistps
mov
push
cmp
fisttpl
movsb
stc
jne
aas
jle
cli
iret
pusha
lea
cmp
daa
pop
jmp
mov
dec
adc
xchg
and
mov
dec
sbb
mov
fbld
shl
mov
je
gs
stos
outsl
mov
lea
or
mov
imul
movsb
sub
shr
cs
sub
testb
xchg
pop
lcall
les
xlat
std
xchg
clc
mov
cmp
push
sub
enter
ret
sahf
aam
inc
icebp
mov
into
jge
imul
pusha
push
loop
cmc
dec
ljmp
push
jo
gs
jge
rcl
pushf
shlb
dec
ja
add
aam
sar
pop
les
mov
xor
ss
or
out
aaa
or
sbb
popa
xchg
jecxz
xchg
dec
push
cmp
push
mov
or
fisubrs
sub
cmpsl
add
cmp
test
pop
frstor
and
ficomps
dec
xor
xor
sbb
push
pop
cmpsb
mov
rclb
adc
loop
sub
fbstp
push
adc
adc
hlt
xchg
mov
sti
addr16
and
pop
ficomps
push
dec
lret
in
sbb
cmp
sti
pop
aaa
repnz
stos
movaps
stc
out
insl
das
pop
bound
call
mov
loop
movsl
xlat
mov
lret
dec
ret
pop
dec
pushf
jo
push
bound
out
pop
lahf
pusha
dec
push
fimull
out
mov
cmp
inc
hlt
xor
leave
adc
add
ds
sub
xor
xor
lock
mov
sub
loope
call
add
mov
data16
push
cmp
inc
push
movsl
shr
push
insl
mov
mov
push
adc
mov
cmp
jle
gs
and
xchg
xchg
xor
insl
inc
or
or
leave
and
jge
or
int3
push
jle
mov
xor
das
cmpsb
cli
sub
sub
mov
sub
push
mov
pushf
test
cmp
rcrb
jge
jecxz
jmp
mov
push
dec
mov
fildll
movl
sub
mov
sbb
outsl
das
stos
cltd
aas
mov
mov
adc
insb
arpl
add
repnz
sbb
dec
jp
mov
leave
daa
jbe
xor
jmp
xlat
mov
sub
pusha
into
movsl
sub
xchg
add
xchg
adc
sbb
jno
pop
or
lret
add
icebp
ror
jns
enter
adc
lods
xlat
stos
sub
mov
addr16
sbb
mov
jo
push
sbb
jne
jmp
stc
enter
int3
rcrl
fsubl
and
push
mov
test
jnp
jecxz
xor
adc
aad
aam
mov
es
dec
lret
dec
mov
sbb
jg
and
adc
orb
int
mov
jle
xor
aad
leave
stos
cmpsl
mov
inc
int3
sub
xchg
push
add
adc
mov
mov
fsubl
clc
adc
lret
leave
sahf
aas
adc
sub
inc
mov
fs
int3
adc
xchg
xchg
pusha
push
stos
sti
popf
nop
fdivrs
inc
mov
mov
orl
clc
cli
arpl
jl
outsb
loope
or
mov
xchg
cmpsb
mov
xchg
sbb
add
out
push
jp
jp
filds
pop
addb
adc
mov
sub
xor
cs
adc
fmull
test
cmp
sbb
push
mov
mov
aaa
fs
lods
adc
fst
fstpt
xor
add
pop
mov
sahf
sbb
cmpsb
repz
jb
push
add
jmp
sbb
lea
imul
fnstsw
xchg
loopne
out
shlb
inc
add
lods
and
xor
inc
lock
pop
mov
cmc
imul
scas
push
dec
lods
jmp
push
dec
test
out
and
dec
pop
es
into
inc
fstps
add
sbb
add
dec
sbb
or
lea
ss
cltd
mov
les
jge
sbb
inc
xchg
aam
jbe
jecxz
pushf
adc
dec
mov
dec
pop
add
sbbl
icebp
add
sahf
roll
inc
mov
mov
jecxz
xchg
test
cmpsb
cmc
xor
pop
fs
sbb
adc
mov
xor
add
mov
cmp
insb
addb
sbb
xchg
int3
mov
mov
push
add
loope
pop
pop
lods
push
addr16
test
xchg
push
cmpsl
pop
sbb
mov
mov
loopne
mov
sbb
clc
dec
ret
xor
cmpsb
pop
inc
mov
mov
inc
or
imul
out
insb
cmpsl
push
andl
mov
pop
movsb
push
inc
imul
pop
lods
repnz
and
push
jnp
rcll
inc
dec
ret
stos
lods
jnp
mov
movsl
mov
adc
inc
xor
fs
aam
int
aam
sub
mov
dec
insl
fsubs
add
pop
inc
shlb
test
xorb
xor
xor
in
test
insl
gs
jb
scas
scas
leave
mov
addb
cmp
push
lock
mov
icebp
cmp
and
pusha
xchg
shrb
addr16
imul
rol
mov
inc
pushf
and
pop
cwtl
pop
jns
aas
popa
setle
sbb
sub
pop
mov
jno
ss
imul
test
push
mov
inc
shll
ljmp
and
cwtl
xor
hlt
jne
inc
and
and
idivb
mov
fcomi
jl
mov
sbb
fdivs
test
negb
add
or
add
jmp
lret
loopne
push
adcb
out
mov
add
popa
mov
jnp
frstor
adc
push
jmp
add
cmpsl
cmp
add
mov
movsb
out
push
loopne
jns
leave
in
bnd
in
or
or
or
stc
faddl
xor
inc
fiadds
cmp
add
in
jecxz
mov
movsb
jp
in
fstps
out
int3
incb
adc
ljmp
pop
sub
mov
loope
and
jg
and
mov
jmp
dec
xor
or
mov
rolb
mov
mov
adc
ficomps
sarb
outsl
cltd
movsl
pop
mov
aaa
data16
adc
dec
ret
mov
push
add
nop
add
xor
xchg
sbb
jb
mov
mov
xor
pop
or
xchg
shll
mov
ja
sbb
lret
jnp
mov
in
and
ds
je
gs
mov
jmp
sbb
lcall
mov
outsb
std
ljmp
jns
daa
repnz
out
cld
scas
mov
xchg
lret
popf
push
loop
dec
dec
pop
test
xchg
mov
movsb
jbe
sbb
and
lds
mov
mov
mov
xchg
mov
out
sbb
insl
xor
loop
push
fsubrl
mov
iret
jecxz
mov
rorl
mov
imul
sti
gs
dec
into
ljmp
bound
mov
test
mov
cld
sbb
mov
pusha
into
aas
pop
cmp
xchg
sahf
and
add
cmp
cld
mov
lock
jae
inc
jo
loop
scas
pop
dec
jno
fdivp
lret
sbb
inc
or
jo
or
lods
pop
xchg
sub
mov
repnz
dec
in
fistpl
sub
inc
enter
lods
jb
cmp
xchg
outsb
adc
pushf
mov
dec
fcomps
addr16
cmp
add
push
mov
test
rorb
mov
rorb
aas
sbb
pop
mull
jg
dec
sbb
or
shrb
sub
xor
cmp
fildll
pushf
mov
pop
or
push
add
mov
mov
insb
movsl
addb
cwtl
xor
popa
jmp
aad
jg
insb
repz
push
jo
sbb
leave
out
jge
call
xor
rolb
sub
out
rcll
mov
jge
addr16
xchg
add
mov
xchg
push
xor
dec
sub
cmp
jbe
or
push
mov
jge
fdiv
dec
mov
pop
test
aad
and
jle
cmp
inc
add
sbb
testl
adc
pushl
ret
pushf
sub
dec
inc
cmp
sub
cld
mov
adc
les
pop
mov
sti
stc
push
fsubl
inc
and
and
gs
lods
push
adc
xor
push
mov
sbb
jno
mov
ss
xchg
xor
scas
inc
xchg
mov
test
aaa
ljmp
or
jg
int
nop
fdivr
cltd
js
int3
cmp
and
fadds
out
mov
ret
or
xlat
or
out
and
addl
popf
cmpsb
cmpsl
xchg
stos
lret
xor
and
pop
lahf
inc
jge
inc
adc
xor
jb
jle
ljmp
icebp
mov
movsb
dec
pop
jae
std
ret
xchg
loope
testl
sub
sub
rcr
mov
add
push
xchg
ret
sbb
pop
cmp
lods
jmp
jp
mov
push
xchg
pusha
packsswb
andb
xchg
push
lret
push
popa
mov
pop
imul
rclb
aam
pop
xchg
lock
ja
cld
adc
mov
push
xchg
ret
test
mov
and
push
jmp
lock
test
gs
xorb
repnz
negb
adc
inc
aas
stos
cmc
mov
xchg
fs
xchg
sbb
out
outsb
iret
inc
push
push
jge
mov
not
out
push
dec
push
cwtl
imul
aam
test
cli
dec
mov
cmpsl
pushl
scas
pop
je
cmp
mov
fsubl
les
cld
out
les
cwtl
pop
mov
mov
not
sub
sub
scas
or
sbb
xchg
and
push
insb
jecxz
lret
inc
test
popl
int3
js
sbb
rcrb
sahf
xchg
inc
pop
enter
scas
sbb
scas
nop
dec
cmp
mov
mov
and
jl
mov
mov
call
stos
ds
push
aad
pusha
das
sbb
pushf
mov
ja
inc
lods
cli
sbb
movsb
and
icebp
loope
idivb
xchg
outsb
mov
js
jae
dec
shll
std
lahf
mov
sti
and
pop
dec
inc
aas
xchg
mov
sbbb
or
mov
xor
lcall
hlt
out
mov
nop
push
push
popa
sub
cltd
mov
cs
sti
test
push
fnstenv
xchg
pop
addl
insl
pushf
shll
or
or
fsubrl
push
insl
xchg
push
aas
mov
or
cmc
add
call
sbb
xor
loop
dec
or
notb
xor
fistpll
xchg
sbb
pop
push
xchg
in
cmp
mov
jae
push
shl
inc
mov
lcall
and
shlb
xchg
mov
pop
pop
outsl
lods
mov
pop
mov
js
adc
mov
sbb
scas
outsb
add
into
pop
sub
cwtl
int3
xchg
push
sbb
cmp
lea
ret
cs
fs
das
inc
inc
dec
push
leave
stc
scas
sub
jecxz
outsb
int
insl
mov
cmp
gs
ja
fisubrl
outsb
add
sub
cli
add
loopne
loope
aam
mov
fdivs
in
leave
lea
xorl
sti
pop
dec
sbb
incb
inc
mov
xor
push
mov
out
test
xchg
nop
leave
add
aam
sbb
jae
add
mov
subl
jmp
jae
in
or
inc
filds
in
je
mov
xchg
loopne
fbld
push
xchg
ja
sbb
push
inc
cmp
ret
insb
notb
mov
in
test
int3
mov
cmp
mull
xchg
outsb
idivl
flds
in
push
xlat
push
cli
aas
test
repnz
hlt
add
icebp
fdivr
lret
int3
or
imul
int3
add
iret
icebp
mov
add
rcll
sar
shlb
out
adc
cmpsl
fnsave
out
out
inc
aam
jmp
mov
add
push
subl
and
test
dec
fnstcw
je
lahf
dec
jnp
pop
pop
cmpsb
aas
mov
rcl
mov
scas
xchg
xchg
enter
shrl
out
enter
add
add
js
cltd
pop
mov
xchg
adc
cmp
ret
ret
add
pop
xchg
dec
add
sbb
inc
std
cmovnp
pop
sbb
push
push
cli
fwait
and
and
inc
test
sbb
pop
orb
mov
pop
dec
fcoms
mov
ret
icebp
push
or
xchg
les
mov
sub
sbb
aas
adcl
int
add
or
jecxz
lea
mov
arpl
and
mov
shlb
dec
adc
arpl
push
cmc
mov
js
dec
xchg
stc
leave
jo
imul
pop
dec
xor
lret
pop
cltd
test
pop
lea
lock
sarl
call
scas
mul
ds
sub
pop
sub
aad
addb
adc
mov
cld
add
icebp
xlat
push
xlat
out
dec
jns
out
cmp
pushf
sub
or
pop
decl
fdivl
adc
mov
xchg
add
inc
dec
adc
and
dec
lods
push
test
lcall
sub
xor
pop
jbe
xchg
sti
les
sub
add
xor
gs
popa
insb
mov
repz
daa
int
pushf
insb
shll
aam
in
nop
lret
push
xchg
dec
and
es
xorb
push
mov
out
dec
loop
cmpb
inc
sbb
sbb
sub
cmp
or
inc
jge
jnp
cmp
adc
fimuls
mov
paddb
add
daa
inc
push
jnp
shl
pop
sub
js
in
sbb
and
push
insb
insb
or
xor
inc
cld
fcompl
inc
iret
add
fisubrs
mov
subl
arpl
fnsave
add
pop
dec
cmp
dec
aaa
xor
adc
popf
push
std
xor
add
xor
xchg
lock
sbb
mov
mov
call
stos
jle
mov
jle
sub
imul
push
jbe
mull
rolb
lret
imul
inc
int3
popf
add
mov
cmpsl
imul
add
idivb
test
add
xchg
pop
imul
jo
mov
inc
push
imul
cmp
test
lahf
fdivl
stc
mov
stc
pop
out
sub
push
jo
fiadds
or
imul
mov
push
mov
xor
jb
or
adc
xchg
or
enter
aam
movsb
xchg
nop
icebp
shrb
loop
in
fcompl
lahf
call
in
sbb
hlt
add
adc
xor
js
xchg
xorb
cmp
lods
js
pop
movsl
insl
rol
and
in
or
ljmp
jns
jo
push
testb
jae
fildll
sahf
mov
fincstp
adc
mov
shll
sub
jge
mov
outsb
mov
push
push
xchg
add
sbb
jmp
push
push
aas
mov
insl
or
insl
in
js
test
in
adc
lock
stc
and
and
push
fstpt
mov
mov
sub
xchg
cld
and
sub
movzwl
ds
sub
sti
ret
sub
fcmovnbe
dec
call
push
popa
or
mov
adc
add
pop
testl
adc
xchg
sarl
mov
pusha
push
hlt
pop
movsb
cmpsl
nop
icebp
std
jb
mov
stos
fs
into
ffree
fiaddl
lret
mov
popf
jae
dec
pop
into
daa
xchg
inc
addr16
es
pop
or
lea
popa
push
ljmp
cmpsb
mov
add
push
pop
xchg
mov
sbbl
mov
dec
test
fwait
lock
fdecstp
popf
loope
sbb
xor
inc
fistpll
jmp
push
rcpps
lea
fsubrl
add
cwtl
add
mov
pop
xor
push
add
xor
out
in
or
addr16
push
mov
xor
mov
outsb
mov
cld
and
mov
stos
mov
xchg
push
pusha
ss
and
call
imul
xchg
mov
mov
lret
push
leave
xchg
sti
dec
cmp
xor
jp
xchg
nop
out
hlt
addl
push
cld
mov
or
nop
mov
pop
cld
out
out
sub
pop
jae
mov
mov
les
jb
movsl
cld
imul
lods
ja
or
enter
adc
sbb
mov
push
fcmovnb
pusha
repz
lock
or
ljmp
mov
stos
adc
test
jb
add
push
mov
push
cmp
fs
sub
mov
push
push
fildll
pushf
dec
inc
in
adc
mov
ja
xor
es
nop
aad
jg
in
jo
add
test
adc
dec
insl
mov
stos
fs
lret
xor
pusha
das
sbb
cmp
stos
enter
fisubl
out
hlt
mov
and
cmp
ss
ja
insl
movb
or
mov
jb
lcall
jbe
je
shl
mov
aas
repnz
pop
and
ja
dec
pop
pop
popf
inc
and
sbb
outsl
sbb
xchg
and
sub
cmp
sbb
js,pn
pop
mov
mov
or
or
sub
inc
mov
imul
cs
push
test
stc
lret
push
pushf
mov
stos
movsl
rcl
gs
rol
scas
jg
mov
xlat
and
push
sbb
or
pop
ds
xor
sub
inc
pushf
jle
mov
subl
sub
jnp
fisttpll
push
cmp
cwtl
pop
xchg
and
mov
mov
out
sbbb
lock
in
jae
rclb
loope
mov
repz
fwait
aad
pop
and
mov
out
jl
xchg
cmp
loopne
loop
stos
cmc
and
test
insb
sub
test
insl
mov
and
mov
mov
jnp
adc
or
push
inc
inc
pop
sub
aaa
in
dec
and
neg
jo
lods
push
es
cmp
jp
dec
addr16
lret
shrl
icebp
test
or
add
lahf
ficoml
jo
in
jbe
loop
add
stos
cs
mov
adc
add
jne
std
adc
lcall
mov
repnz
mov
cmpsl
leave
insl
inc
ds
iret
es
int
iret
movsl
das
leave
jge
lods
mov
fidivrl
gs
daa
loopne
icebp
pop
inc
jnp
cmp
inc
ss
adc
fstps
dec
sub
data16
int3
ja
sbb
outsb
movsl
fcomp
loopne
gs
mov
dec
inc
cs
mov
ss
cmp
nop
cmp
fisttpll
and
neg
aaa
mov
fiadds
or
or
scas
mov
je
mov
mov
xor
xadd
dec
je
cmpsl
imul
push
push
xchg
pop
mov
adc
push
push
sahf
inc
push
movsl
jp
add
mov
cmp
addr16
inc
cmpl
inc
jns
rorb
sysenter
mov
sub
enter
repnz
add
push
cmpsl
inc
xchg
inc
add
mov
cmp
push
aaa
jle
dec
jb
sub
mov
popl
je
xchg
add
aam
sbb
test
adc
movsl
fcoml
pop
xchg
pop
sbb
sub
xorb
js
pop
sub
mov
adc
xchg
xor
adc
fistl
ficomps
in
jno
mov
pop
mov
and
sahf
mov
pop
ja
cmp
hlt
in
std
mov
ljmp
jne
shl
lea
xchg
enter
jo
xchg
stos
jbe
loope
push
pop
aas
dec
or
mov
cltd
daa
out
cli
test
push
bound
pushf
in
stos
mov
aaa
mov
cmp
insb
subl
out
lahf
notl
movsl
int3
lcall
ror
jo
mov
add
adc
cmp
iret
lea
xchg
fnstcw
dec
push
ret
and
sub
leave
and
testb
lahf
dec
cmp
mov
mov
adc
xchg
sbb
std
or
adc
dec
sub
mov
fdivr
pusha
testl
das
inc
arpl
fnstcw
mov
sbb
push
shlb
cmp
fcomp
in
mov
pusha
xchg
loop
push
jge
out
imul
mov
sub
mov
outsl
nop
iret
imulb
sbb
dec
imul
or
sbb
xor
gs
mov
cmpsb
repz
add
mov
fwait
call
adc
out
xor
lds
shrl
out
enter
push
xchg
das
push
mov
call
jnp
jmp
mov
add
fdivs
push
sbb
or
std
int3
outsb
dec
and
fistps
ficompl
jb
retw
cmp
or
mov
sbb
insb
hlt
dec
xor
jp
push
dec
add
iret
xchg
xchg
push
ljmp
push
jbe
add
adc
lret
popf
add
cmpsb
mov
sbb
fistpll
lods
lahf
mov
pop
push
int3
cmpl
lea
push
mov
or
jns
in
dec
dec
pop
ds
sub
repz
jp
daa
or
sub
repz
orl
arpl
imul
js
pop
push
jnp
out
inc
mov
pop
add
xchg
pop
hlt
and
loopne
aam
push
int3
lock
mov
popf
jae
shll
inc
pop
jbe
push
repz
inc
xchg
cmpsb
mov
pop
pop
dec
mov
push
adc
fdivs
pushf
xor
cmp
jecxz
mov
inc
push
mov
cmp
ficomps
and
shll
xchg
gs
sbb
cltd
ret
imul
sbb
and
mov
cmp
lret
call
mov
or
pop
add
aam
in
xchg
out
iret
aas
dec
stc
clc
inc
data16
je
or
push
fadds
xor
ficomps
cltd
mov
add
sbbb
mull
inc
jecxz
idiv
dec
mov
mov
sti
pop
inc
loop
outsb
cmc
sbb
xor
jp
pop
dec
or
in
scas
cmp
xchg
jge
jmp
jno
shll
icebp
pop
fistpll
and
fstp
dec
add
sti
mov
fwait
cmp
add
nop
int
clc
inc
push
and
fs
clc
roll
sbb
sti
fldenv
xor
clc
add
sub
pop
pop
fdivs
push
inc
fsubs
and
into
xor
jp
lcall
mov
ror
xchg
and
jg
iret
adc
pop
enter
fstl
loope
loop
inc
and
pop
or
mov
daa
ja
adc
lret
xchg
or
adc
outsb
fiadds
mov
cli
mov
mull
inc
les
ret
bound
xchg
or
in
pop
sub
and
mov
dec
add
push
and
loope
dec
sub
scas
insb
mov
imul
mov
repz
repz
mov
mov
cmc
cmpsb
loope
jnp
and
inc
repnz
addl
or
mov
mov
dec
sahf
mov
cli
sub
mov
push
inc
out
mov
push
mov
push
shlb
push
movsl
imul
dec
pop
lret
fs
out
mov
cld
push
shll
push
cld
jo
jns
fs
std
mov
xor
jp
pop
lea
mov
ljmp
inc
stos
cmp
addr16
lea
pop
mov
or
dec
mov
and
xor
cmp
adc
ss
or
daa
int
xchg
rcrl
imul
test
mov
jbe
sub
xchg
jecxz
daa
out
add
aam
and
or
pop
imull
cmp
push
insb
test
or
push
ljmp
cli
jg
clc
sub
mov
test
jae
sub
jmp
lret
inc
ficompl
mov
aam
or
mov
cmp
jge
aas
xchg
dec
outsb
pop
clc
fdivrs
jmp
lods
adc
pop
pop
jo
mov
das
inc
or
mov
push
cmp
mov
pop
or
pusha
jbe
insb
jecxz
gs
and
sub
add
int
push
ljmp
push
inc
fidivrl
fisubs
faddp
and
aam
not
add
inc
sub
pop
cmpl
insb
mov
data16
push
inc
pop
mov
lcall
and
mov
into
jae
xor
lods
imul
pop
jns
sbb
mov
sbb
push
xchg
in
jge
jae
mov
out
xchg
shll
pop
test
leave
pop
data16
mov
nop
xchg
mov
int3
stc
sbb
popf
gs
lods
pop
pop
mov
cwtl
or
inc
or
jg
fsubs
cmp
add
mov
je
push
in
jae
js
jp
jl
in
sub
mov
add
pop
stos
pop
aad
push
je
pop
insb
iret
cmpsb
adcl
push
cmp
push
jo
lds
cs
lock
mov
insl
and
xchg
xchg
out
or
push
inc
aam
inc
fdivl
push
pop
icebp
jo
or
shr
xchg
out
stos
push
setle
push
add
test
xchg
es
lds
jbe
roll
xchg
xor
or
lods
rol
gs
rcrl
pop
out
sbb
dec
fistpll
loopne
or
aam
mov
mov
add
jge
jo
ret
xchg
lods
shr
in
push
jns
lret
das
adc
arpl
jl
test
nop
xchg
fwait
lea
inc
push
psrld
pop
or
loop
pop
scas
stc
cmp
and
rcrb
push
aad
dec
push
xor
inc
mov
mov
scas
cmovo
push
hlt
call
xor
xchg
stc
stos
mov
xor
or
les
test
out
and
filds
xchg
sub
jbe
xchg
jb
push
test
pushf
cltd
xor
scas
jle
filds
dec
subl
jp
xchg
push
movsl
sbb
push
sbb
bnd
mov
adc
pop
push
or
ss
jb
mov
xchg
das
pop
xor
pop
lret
pop
outsb
mov
test
loopne
mov
lcall
jbe
xchg
test
repnz
loope
jge
pop
mov
pop
add
std
lret
aam
cmc
mov
and
add
stos
sahf
pop
out
fildl
sbb
push
push
pop
mov
scas
mov
mov
cmp
pop
out
mov
sti
cmpsl
lret
mov
xlat
lret
popf
jle
int
cmp
mov
lods
imul
sub
sub
rcll
jl
inc
jmp
adc
mov
pushl
out
adc
arpl
add
dec
lcall
fdivs
mov
imul
cmp
daa
or
hlt
cmpsl
fwait
cmc
into
jl
push
jmp
ss
mov
inc
pop
clc
movsb
fisttps
mov
stc
movsl
out
or
jecxz
in
out
push
cmp
shll
mov
xor
scas
and
pop
or
mov
add
push
imul
ret
xor
push
mov
sbb
data16
push
jp
lods
jno
orl
mov
lret
xchg
push
enter
jl
mov
sub
mov
cmpsl
scas
jle
js
sarl
pop
out
sub
xchg
xchg
hlt
push
pop
js
andb
and
xor
shrb
push
jae
xor
pop
cwtl
xchg
mov
add
sbb
movsb
fsts
mov
test
xchg
lods
lods
call
xor
inc
adc
fmull
pop
mov
mov
sbb
push
call
mov
jns
dec
stos
mov
cmp
cmp
dec
imull
insl
mov
outsl
pop
push
fsub
pop
in
ret
rolb
movsl
jnp
ret
lea
mov
mov
xor
dec
sub
pop
scas
xchg
imul
arpl
jae
inc
push
add
mov
mov
dec
lods
jle
push
mov
adc
cmp
cmpsb
jle
sahf
pop
xchg
cli
sahf
filds
mov
iret
sub
mov
insb
cmpsb
mov
out
jg
rcrl
in
jp
sbb
and
pop
lret
jbe
push
push
jl
jns
jp
sarl
fs
xor
inc
sub
adc
int
cmp
push
je
cmp
sbb
push
jle
cmpl
xchg
loopne
push
sub
leave
push
xor
mov
fadds
in
pop
push
mov
out
cmp
push
in
mov
mov
int3
fsubrs
mov
mov
sarb
jecxz
push
fimull
ret
out
sub
cltd
and
call
fidivs
sbb
or
inc
xor
ror
addb
add
sub
xchg
pop
cwtl
mov
out
test
shrb
hlt
enter
xchg
push
dec
xor
rolb
aaa
shr
fcomps
arpl
pop
sub
add
cmp
in
add
lods
enter
sub
lcall
adc
cmp
add
adc
and
dec
sbbl
sub
mov
push
outsl
pop
adc
xchg
push
test
push
mov
aad
pushf
or
aaa
inc
pop
add
pop
repz
lahf
sbb
pop
or
xchg
imul
lods
pushf
or
or
fsubrs
xchg
add
jae
lea
sub
sub
aad
out
shl
or
arpl
stos
dec
dec
les
cmp
fcmovne
mul
mov
mov
mov
scas
mov
or
clc
stos
add
das
sbb
stos
sub
push
push
rcrl
mov
pop
scas
cmp
inc
and
popa
adc
jg
cli
mov
stc
btl
out
xchg
shr
mov
push
cmp
adc
in
inc
dec
mov
or
mov
xchg
push
stos
dec
xchg
fsubl
jl
test
pop
sbb
xchg
xlat
add
inc
push
movsl
pop
outsl
dec
mov
push
inc
add
je
and
test
inc
fwait
pop
cmp
hlt
pushw
fxch
or
mov
sbb
jno
js
dec
xchg
mov
ja
inc
icebp
lds
pop
or
fwait
sub
inc
xor
daa
mov
pop
mov
arpl
dec
dec
cmc
lret
add
mov
jge
incl
push
pop
lcall
and
dec
aas
loope
cmp
and
jmp
push
xchg
mov
addr16
lahf
cmpsl
popf
xchg
loope
test
push
jge
sub
aam
dec
and
popa
pop
stc
clc
rorb
pop
in
sbb
cmp
les
xchg
lods
xchg
scas
repnz
sbb
sar
ds
add
push
sbbb
jae
ret
ja
cmc
mov
mov
push
and
sub
ds
pushf
xchg
pop
xchg
sahf
xchg
bound
cmp
push
add
aas
jne
sub
loopne
fs
sub
cwtl
ja
testl
push
xor
enter
adc
in
mov
ja
cmp
xor
int
sbb
sbb
out
push
insb
nop
sub
or
push
repz
lret
fstpt
loop
aad
add
mov
mov
mov
adc
inc
inc
ds
xor
inc
cmp
js
and
test
jp
xchg
cmpsl
and
loop
xor
lahf
test
inc
jne
or
lock
mov
scas
movsl
cli
ds
adc
add
fsub
mov
test
sbbl
mov
mov
dec
cmpsl
imul
popa
pop
hlt
push
xchg
in
cwtl
jp
xchg
lea
push
mov
movsl
mov
xor
mov
std
data16
clc
idivl
cmp
mov
ret
mov
jbe
orb
sti
jg
sub
sbb
sarl
popf
sub
arpl
inc
out
outsb
fidivrs
jb
arpl
and
imul
or
lods
jge
into
mov
popf
ds
js
adc
sahf
and
jle
into
out
fdivrl
mov
test
pop
js
negb
jp
mov
sub
stos
adc
hlt
leave
popf
les
dec
push
jbe
test
xor
out
ljmp
cmpsl
add
loop
inc
movsl
inc
pop
xor
loope
lret
shll
push
shlb
movsl
cltd
inc
call
push
sub
imul
mov
mov
mov
insb
cltd
push
mov
out
adc
mov
jp
dec
inc
sbb
sub
orb
mov
fldcw
mov
and
push
stos
jp
outsb
pop
and
dec
in
imull
inc
ja
les
out
fdivrs
sbb
mov
test
jl
lahf
call
pop
dec
xor
mov
adc
mov
int3
dec
ret
dec
nop
nop
rol
cmpsb
je
cmc
push
lret
test
iret
cld
jle
mov
mov
jns
add
push
cmc
pusha
xor
mov
inc
mov
inc
adc
xor
aas
out
add
lahf
dec
push
cmp
push
std
mov
cmp
add
pop
cltd
xor
xchg
mov
data16
mov
fs
es
fst
cmp
test
loopne
add
gs
std
push
mov
sub
or
outsb
js
push
xor
mov
mov
and
adc
adc
sub
fnstcw
and
outsb
mov
aam
or
or
out
or
fildll
cmc
icebp
xor
in
pop
add
sub
lret
jp
lock
in
or
sbb
cwtl
add
test
loope
jo
fwait
mov
inc
cmp
aam
test
push
lahf
xchg
fimull
sarb
add
adc
sub
mov
mov
mov
cmp
xchg
pop
mov
js
mov
sbb
leave
pop
jge
mov
add
repnz
mov
divb
mov
cli
dec
ret
imul
or
cli
lds
sub
out
cli
mov
push
or
outsl
add
or
jae
lods
movsl
jmp
aad
insl
add
mov
or
popf
and
and
inc
in
adc
push
xor
cmp
es
fldt
shlb
test
sbb
or
pop
inc
pop
ljmp
add
es
clc
jle
loope
arpl
mov
cmp
in
inc
pop
fnstcw
stos
lods
cmp
mov
jl
mov
pop
mov
loope
scas
adc
loop
xchg
es
stos
cwtl
jns
mov
lret
inc
jnp
ficomps
insl
test
rcl
arpl
sbb
mov
mov
add
or
jecxz
into
lods
and
pusha
out
or
ret
or
fs
mulb
push
push
or
sti
fistps
fldlg2
pop
pop
arpl
jmp
mov
dec
jmp
xchg
mov
jl
xor
sub
pusha
dec
es
mov
ja
mov
in
push
lds
pop
xchg
xor
cmp
negb
lcall
out
stos
mov
out
jle
pop
fcomps
lock
arpl
xchg
orl
adc
cmpsl
ret
dec
add
int
leave
mov
fists
lret
mov
sub
add
and
lods
scas
push
test
imul
sub
out
sbb
xlat
rol
add
rcrb
js
mov
jbe
jbe
mov
clc
xor
xchg
ja
popf
mov
mov
inc
lahf
push
out
test
sbb
out
jle
sbb
xor
mov
push
and
ljmp
cwtl
dec
pop
mov
and
inc
das
lcall
lret
aam
cwtl
add
xor
pop
push
lcall
xchg
jb
lods
jne
inc
xor
dec
adc
pop
cmpb
dec
out
aaa
push
jecxz
adc
repnz
or
add
loop
mov
adc
jae
sahf
sub
leave
xchg
mov
jl
cli
push
int3
lcall
mov
cmp
add
sub
ljmp
push
or
pop
inc
loopne
fidivs
sub
xchg
or
sbb
shrl
mov
pop
cltd
dec
sbb
push
and
xrelease
fistps
fldcw
push
ficompl
pop
sbb
mov
cld
jle
fildll
shll
push
fisttpl
scas
arpl
invd
fcmovnu
lret
popf
dec
scas
adc
outsl
jns
arpl
adc
xchg
xlat
stc
dec
es
test
and
int3
dec
mov
fsubs
mov
dec
fnstenv
ja
mov
fmull
inc
ja
add
in
jmp
addr16
mov
cmpb
cmc
jb
sahf
adc
loope
int
test
int3
gs
sub
fwait
pop
dec
push
xchg
pop
rcr
sub
fildl
pop
mov
outsl
rcl
daa
mov
lret
addr16
mov
jbe
mov
pushf
inc
loope
mov
insl
in
rorb
sub
or
sahf
push
adc
dec
cmp
jp
clc
int3
cltd
in
mov
in
or
sub
push
push
adc
or
sub
jecxz
repz
mov
xchg
sub
mov
or
or
push
inc
add
std
inc
or
stc
jl
or
pop
xchg
add
mov
dec
or
xchg
les
push
or
outsb
outsb
cli
pusha
dec
xchg
sbb
jae
mov
stos
inc
inc
xor
subb
lahf
or
mov
pop
roll
mov
rclb
or
in
aaa
iret
rorl
sbb
mov
add
sub
mov
jae
movsl
mov
repnz
xchg
stos
test
mov
inc
or
adc
popa
and
cmpsb
inc
mov
aam
lea
and
fstl
add
dec
aas
stc
xor
int
pmaxsw
arpl
mov
stos
mov
sub
in
mov
in
leave
mov
es
insb
dec
ficoms
cmpsb
jecxz
insb
push
in
movsl
cli
xor
lds
pop
adc
cmp
xchg
fdivrs
xchg
fwait
lock
xchg
lret
sbb
pop
jno
sti
push
or
jae
xchg
mov
mov
or
cmpsb
mov
push
add
mov
lds
insb
dec
lahf
insb
cmp
test
adc
dec
xor
or
mov
outsb
push
popa
test
aas
xchg
ljmp
sbb
push
insl
add
mov
or
or
adc
jge
lcall
ret
sub
jg
inc
negl
cmpsl
cltd
in
scas
stos
loope
mov
pop
sub
mov
jo
jp
and
dec
mov
out
imul
push
pop
rol
xor
xorb
mov
mov
mov
push
and
mov
fs
aam
xlat
shrl
aaa
cmpsb
sbbb
sub
mov
mov
sti
push
ds
cmc
lods
test
fs
clc
aaa
rcll
xchg
rclb
popa
sarl
sahf
and
test
xchg
stos
mov
enter
out
scas
pop
xchg
lock
out
xorb
rcrb
out
sub
pop
out
jl
dec
sub
mov
out
cmp
push
gs
lcall
jmp
enter
call
xchg
loop
ja
pop
cmp
xor
mov
movsb
dec
out
inc
add
jo
push
iret
test
fildl
sub
inc
mov
or
in
sbb
pop
lods
fnstsw
adc
push
pop
mov
jge
sar
out
dec
mov
stos
in
ljmp
cld
sub
nop
jns
jno
push
test
fldl
and
pop
push
arpl
xlat
cld
mov
pop
and
jnp
add
int
inc
ret
pop
sbb
mov
and
mov
lret
add
xchg
xor
fidivrl
out
jle
pop
pop
mov
jno
das
frstor
push
sbb
in
stos
dec
rol
sbb
mov
incl
mov
pop
mul
or
in
sub
add
and
cmp
fstpl
popa
call
inc
addr16
pop
movsl
hlt
pop
sarb
sbb
nop
aaa
test
cmp
cmp
roll
mov
das
sbb
sub
outsl
mov
cld
push
fldcw
icebp
pushf
movb
call
mov
sbb
leave
inc
fildl
outsl
pusha
stos
mov
push
pop
pop
add
adc
jmp
xor
aam
push
ror
je
ret
stos
mov
sbb
mov
fs
prefetcht0
clc
mov
sub
and
sub
xchg
and
out
std
vmovhps
sbb
bound
cld
pop
or
push
add
adc
fs
push
sub
jns
or
mov
push
jne
out
xchg
dec
dec
mov
lret
icebp
or
lret
mov
gs
cmpsl
fwait
mov
and
ds
and
adc
test
sub
sub
test
sti
adc
movsb
cmpsb
imul
pop
dec
and
push
test
insl
push
iret
dec
in
push
rcll
add
popa
push
mov
xchg
or
push
add
fbld
sbb
xchg
sub
sbb
fs
jmp
fsubs
jp
mov
lret
xchg
xchg
fwait
sbb
addl
mov
ds
bound
hlt
fsts
cmp
fnstcw
movsl
pop
mov
jmp
cli
insl
out
aad
mov
pop
adc
or
cmpl
jl
or
cmp
insl
fsub
mov
pop
jae
inc
pop
mov
sbb
repz
fidivl
jbe
test
push
jno
call
fwait
mov
adc
and
test
incl
shr
aad
jns
sub
aam
test
pop
sub
jbe
pop
jmp
push
mov
decb
into
mov
cmp
pop
roll
jnp
loope
aaa
sbb
dec
push
fsubl
es
add
push
dec
xlat
out
fdivrl
pop
cmp
bound
inc
xor
add
pusha
mulb
push
or
sbb
fprem
fisttps
lret
loope
mov
or
add
cmpsl
cwtl
sbb
mov
jnp
sub
and
repz
lret
mov
sbb
fistpll
mov
aas
pop
jns
test
divb
mov
sub
test
and
inc
repnz
mov
pop
pop
xchg
jp
xchg
outsb
add
cs
loope
leave
mov
pop
repnz
add
ficoms
dec
dec
jl
cwtl
test
mov
icebp
pop
mov
div
pop
mov
and
lahf
int3
lods
inc
out
push
jno
rcl
in
out
mov
int3
in
sbb
testb
scas
mov
jecxz
mov
dec
xchg
stc
or
jmp
aad
pusha
jne
jecxz
pop
jg
inc
out
cld
lods
pushf
fsubr
or
inc
sub
mov
aad
jl
pop
or
mov
push
movsl
and
cwtl
imul
sub
ds
xchg
and
dec
inc
cmp
mov
frstor
out
add
or
pop
pop
aas
nop
or
xchg
inc
dec
pop
fidivs
hlt
movsb
pop
xor
cmpsb
repz
shlb
cmp
testl
pushf
push
lds
mov
pop
push
pushf
in
push
lret
pop
or
fs
lea
push
ds
cmpsl
notb
cmc
jns
mov
push
into
mov
fld
or
and
pusha
outsl
push
push
aam
sbb
xchg
or
bound
and
jo
iret
imul
int
lods
cmp
sub
insb
popf
shl
add
das
iret
divps
out
mov
mov
arpl
lods
arpl
rcrl
addl
pop
xor
mov
inc
adc
gs
jno
mov
ds
aam
cmc
pop
clc
sbb
cmp
std
movsb
mov
mov
pop
in
add
sbb
cmpsl
and
subb
pop
push
push
shlb
cmp
into
dec
xchg
iret
std
ja
or
inc
adc
sbb
or
sub
imul
mov
xor
xchg
mov
stc
cmp
lret
outsl
rorb
pop
lods
push
add
aad
or
adc
imul
cmpl
cltd
dec
fdivrp
jp
dec
leave
inc
test
and
lods
ja
and
mov
and
cmp
inc
adc
cmp
pop
inc
sub
imul
dec
push
clc
xchg
scas
shrb
fdivrl
incb
push
stos
jne
push
lods
xchg
mov
cwtl
sub
arpl
aam
hlt
xor
jo
or
ss
rcll
into
lret
out
xchg
adc
add
mov
sti
xchg
bound
xor
and
xchg
jb
aas
or
mov
daa
popf
add
clc
jmp
sti
push
outsb
cmpsl
push
bound
dec
repz
sub
xchg
mov
das
adc
clc
lret
and
in
add
xchg
shll
dec
jl
cwtl
fildl
push
mov
insb
sub
mov
mov
outsb
arpl
mov
inc
jne
out
pop
mov
and
in
shlb
mov
sbb
repz
add
dec
ds
xor
and
sbb
pop
sbb
in
testl
mov
mov
xchg
pop
aaa
lret
sbb
mov
adc
xor
cltd
aad
scas
sbb
or
ja
pop
mov
mov
stos
pop
out
test
jae
lods
xchg
sbb
pop
enter
and
out
lret
enter
or
jmp
or
xor
mov
les
inc
movsb
aas
pop
push
scas
bound
cmp
cmp
pop
js
inc
cmpsb
xor
ds
data16
adc
sub
add
dec
dec
adcb
lea
repnz
inc
icebp
dec
lahf
imul
inc
push
ds
repnz
mov
pusha
fsub
movq
jge
cmp
mov
pop
xchg
mov
or
daa
lcall
or
push
push
or
daa
movsb
stos
inc
ret
out
pop
add
repnz
inc
push
push
mov
adc
int
mov
les
add
in
pusha
in
mov
adc
lea
les
jle
adc
pop
lret
fcoml
push
cwtl
push
mov
mov
out
out
cmpsb
lods
or
mov
jle
xor
cmpsb
iret
ds
jp
jecxz
push
lds
nop
push
jns
imul
mov
mov
mov
mov
rcr
push
push
pop
imul
and
int3
fwait
clc
test
xchg
in
mov
sahf
sbb
bound
fcmovnu
inc
call
xor
jp
cwtl
inc
mov
sub
aam
sub
iret
repnz
inc
in
lock
loopne
fwait
cltd
shlb
sbb
popa
dec
scas
outsb
mov
jl
sbb
pop
cmp
jno
jbe
lcall
imul
ss
lcall
loop
jae
mov
scas
pop
mov
jg
cmpsl
xlat
mov
or
jae
and
les
lods
jg
xchg
pop
repz
flds
icebp
sbb
xchg
int3
mov
and
adc
and
xor
outsb
std
popa
dec
add
cmp
clc
stc
imul
clc
fists
push
xor
je
mov
mov
fists
mov
sbbl
cwtl
dec
loope
iret
les
adc
sub
mov
xchg
cbtw
mov
xor
out
mov
frstor
add
ret
out
scas
call
daa
orb
lds
pop
inc
lcall
xchg
lock
jae
popa
xor
pop
daa
push
leave
and
mov
jecxz
cmp
in
xchg
dec
sbb
add
xchg
dec
je
lods
pop
jmp
jmp
inc
mov
add
je
cld
mov
ljmp
xor
inc
mov
pop
lret
out
add
pusha
clc
fidivrl
mov
pop
rcll
add
push
push
inc
lods
iret
lods
xchg
push
pop
inc
movsl
mov
pop
rorl
loope
push
nop
jmp
pop
mov
adc
call
mov
sti
mov
arpl
frstor
ret
xchg
dec
mov
aam
lcall
out
sti
inc
fsubrp
or
jg
aam
inc
pop
mov
outsb
cmp
mov
lea
and
push
pop
mov
sbb
iret
jecxz
sahf
mov
add
and
jmp
sbb
int3
mov
nop
adc
mov
push
shl
pop
sar
push
mov
test
loope
sahf
jge
jns
lds
pop
adc
or
mov
sbb
pushf
mov
setne
mov
sbb
test
popa
ret
sbb
inc
sub
ljmp
push
sbb
add
sub
dec
ja
pushl
xchg
frstor
pop
mov
jmp
fistl
mov
pop
outsb
inc
in
sti
or
mov
or
mov
clc
mov
xor
enter
sti
jb
lds
outsl
test
mov
xchg
xor
and
lcall
stos
pop
ds
fisubl
adc
inc
push
cs
xor
push
dec
jecxz
jns
fmulp
sbb
or
xor
mov
bound
sbbl
lods
xor
pop
or
cltd
jb
jecxz
ja
or
mov
pop
sbb
imul
out
mov
cmpl
xchg
inc
inc
pop
jmp
xor
ds
or
adc
loope
xor
mov
pop
inc
adc
jp
popl
ret
jg
rcl
jge
add
nop
xor
adc
lds
push
out
clc
mov
addr16
ret
cmc
jne
and
jl
xor
mov
mov
aas
jl
cli
sub
rcrl
xchg
push
xor
neg
fstps
fwait
test
dec
ljmp
enter
ud1
enter
aam
out
clc
mov
out
test
cwtl
scas
xchg
sub
ds
nop
test
or
inc
mov
ljmp
sbb
sub
dec
movsb
xchg
sahf
push
xchg
inc
pop
fbstp
mov
lds
test
ret
mov
lcall
cli
inc
iret
push
mov
mov
and
push
out
adc
and
jmp
jge
push
ficomps
jge
ljmp
sbb
insb
pop
stos
jle
sub
imul
jmp
fdivs
push
in
xchg
mov
dec
test
and
lea
dec
sbb
push
movsl
mov
mov
hlt
lods
cmp
push
mov
aad
neg
popa
fs
fdivl
pushf
xor
sbb
loope
aad
push
mov
sbb
cmpsl
cltd
test
sbb
dec
sub
push
dec
sbb
rcll
jecxz
cmpsb
sti
push
jnp
mov
adc
adc
dec
cmp
scas
pop
leave
sbb
into
into
std
rol
sub
mov
in
adc
and
aas
push
cli
add
adc
mov
cld
inc
loopne
addr16
rorb
jns
addb
add
or
imul
fdivl
sahf
cmp
mov
push
and
xchg
cmc
sbb
jl
push
pop
fcoml
jns
xor
inc
mov
into
or
out
cs
das
loopne
mov
stc
pushf
jmp
push
loopne
dec
xor
sub
push
inc
insl
sub
lret
rclb
pushf
out
pop
adc
je
push
mov
xlat
fwait
inc
push
mov
mov
inc
nop
xchg
int
lret
sar
pop
in
sahf
int
adc
mov
jo
test
or
add
or
scas
xchg
pop
daa
mov
fidivrl
rcll
xchg
jo
pop
jns
lret
inc
cli
mov
ret
dec
pop
sub
icebp
mov
hlt
adc
push
wrmsr
in
adc
fcmovbe
dec
mov
jne
mov
call
xor
rorb
pushf
stc
lcall
mov
icebp
popa
cltd
cltd
pop
or
jle
mov
jbe
iret
cs
lcall
push
pop
pop
repz
sbbl
out
outsb
sti
cmp
aas
ds
xchg
scas
loopne
mov
popf
jne
ret
jo
data16
xchg
loope
sbb
lahf
add
test
sub
sub
mov
and
adc
mov
loope
adc
insl
cltd
push
sub
leave
inc
pop
dec
push
mov
int
mov
shlb
test
lods
roll
arpl
sub
repz
iret
imul
mov
cs
xor
and
jne
cmpl
ret
or
or
jge
fadd
xchg
cmpsb
mov
repz
movl
jle
mov
adc
int3
das
sar
push
adc
pop
test
adc
int3
xor
pop
add
push
inc
mov
add
ret
rcr
es
dec
int3
fiadds
and
pop
pop
hlt
dec
push
add
ljmp
dec
cmp
jne
cmpsl
adc
inc
arpl
aaa
lds
cmp
loop
sub
mov
push
loope
xchg
xor
push
movsl
scas
fwait
inc
push
cmp
test
cmp
mov
in
xchg
fs
ficoml
movsb
pop
out
pop
clc
pop
fstpl
sti
mov
insl
cld
imul
add
or
pop
jnp
cld
mov
lcall
repnz
jl
jge
push
cld
cld
cmpb
cmp
mov
mov
pop
fisttps
lods
ljmp
and
leave
js
mov
mov
xchg
pop
shll
push
or
cmpsl
push
repz
scas
xchg
psubsw
lcall
add
lret
inc
xor
xor
sub
scas
sbb
subl
inc
pop
lods
pop
mov
into
data16
cmp
xchg
loopne
je
int
dec
imul
bound
jg
fnstcw
cmpsl
and
repnz
adc
and
aam
cmc
into
iret
mov
xchg
jmp
sub
cmpsb
imul
adc
in
cli
sub
add
xlat
mov
push
sbb
cmp
push
push
push
cmp
jbe
fcompl
out
sbb
movsl
mov
sbb
pop
jmp
sbbb
push
cwtl
inc
fistpll
sbb
cli
testb
jae
sub
mov
or
int3
cld
lods
ret
push
jmp
arpl
outsl
mov
pop
fcom
andnps
dec
and
adc
xchg
sbb
jnp
adc
pop
mov
add
fiadds
and
sbb
sbb
xchg
out
xchg
pop
push
push
movsb
jnp
jmp
xor
clc
imul
jecxz
mov
push
xchg
dec
divl
push
jl
sti
mov
in
imul
jbe
mov
lods
cli
hlt
cmpsl
xchg
scas
push
cltd
mov
ljmp
pop
pop
lock
cwtl
fldt
insl
int
imul
int3
add
cwtl
repnz
cmpsb
frstor
test
stc
mov
lahf
in
testl
rol
xor
xlat
notb
cmp
mov
fwait
das
mov
dec
test
int
dec
cmp
in
xchg
stos
push
sarb
nop
scas
mov
sub
dec
and
mov
stos
jns
sub
rcll
xchg
xor
int
icebp
roll
hlt
test
daa
out
xchg
addr16
push
or
jae
sub
mov
mov
push
jl
divb
dec
in
stc
mov
jne
les
idivl
or
scas
cltd
add
cld
and
adc
ret
xchg
pushf
sbb
or
mov
dec
cmp
iret
out
add
jb
and
rorl
push
sbb
add
push
lahf
push
push
sbb
pushl
js
mov
jo
adc
jmp
and
testb
jne
inc
mov
arpl
sub
js
sahf
xor
das
scas
xor
xchg
lds
fwait
push
mov
pop
push
add
loope
int3
mov
mulb
inc
or
adcb
addr16
add
cmp
lds
mov
inc
mov
add
sub
popf
cltd
mov
jne
jmp
aam
fs
xor
mov
push
push
mov
jno
pusha
jmp
dec
push
push
jnp
js
aam
jge
adc
pushaw
lds
mov
cmc
dec
sub
push
inc
or
pop
adc
pusha
push
test
xor
push
cmc
inc
aaa
adc
and
xlat
fmuls
je
adc
out
jns
mov
xor
lock
div
push
pop
insb
fldt
movsl
push
add
sub
scas
jnp
fsubrp
jmp
outsl
out
mov
push
or
inc
stos
lahf
and
insl
adc
xor
dec
pop
mov
mov
jns
cltd
cmp
ret
mov
jns
push
xchg
mov
hlt
popf
add
ljmp
ljmp
in
mov
sub
or
sbb
out
cmp
ffree
mov
icebp
aas
imul
adc
or
or
fidivs
mov
loopne
mov
gs
mov
jae
push
xor
icebp
inc
xchg
dec
popl
jmp
jo
outsb
cmp
movsl
jmp
ja
or
in
outsl
imull
and
or
push
fistpl
jo
xchg
pop
fadd
stos
inc
lret
xlat
loopne
push
sbb
mov
and
and
jne,pn
scas
xlat
cmp
xor
mov
mov
inc
cmp
lret
jnp
out
mov
stc
push
pop
arpl
iret
jecxz
cmp
cld
push
inc
mov
or
mov
mov
shl
cmp
cmp
push
sub
adc
ficoms
loopne
and
aaa
sub
xor
jle
mov
imul
inc
push
pop
adc
int3
mov
insl
jmp
ficomps
dec
push
jecxz
repnz
popa
fisttps
push
sbb
xchg
jp
out
mov
addr16
inc
into
push
mov
cmp
cmp
jne
fistps
push
pop
cltd
sub
loope
inc
cmp
mov
fs
gs
shll
cli
jle
xor
jne
lcall
sbb
sbb
mov
test
xchg
fs
gs
frstor
mov
rcll
lret
xchg
mov
adc
clc
sbb
mov
ficompl
push
out
pop
cmp
mov
cmpsb
push
add
mov
sub
fs
pop
add
popf
roll
or
into
cmp
fmulp
xchg
mov
sbb
rorl
cmp
or
shlb
adc
popf
enter
xor
push
adc
push
push
xor
mov
dec
xor
jg
int3
push
push
xchg
subps
ja
test
sbb
and
mov
mov
adc
fldcw
push
cmp
mov
sub
sbb
mov
or
sbb
movsb
cmp
add
jnp
mov
cmp
scas
nop
pop
call
mov
jbe
cmp
setg
inc
or
adc
mov
sub
test
rorb
rcrb
cmp
push
adc
xor
cli
in
fldenv
xchg
pusha
stos
sbbl
inc
les
out
icebp
jl
mov
and
stc
bound
adc
stos
out
push
mov
rolb
xchg
mov
dec
adc
imul
add
jne
in
lahf
xchg
stos
mov
mov
rolb
fildll
in
push
aaa
jmp
and
pop
push
dec
sub
ret
sub
push
ffreep
adc
dec
inc
insl
mov
sub
sub
add
lods
xor
xchg
aad
mov
clc
push
es
fmuls
mov
adc
insb
imul
xlat
aaa
and
icebp
aaa
mov
ja
aas
rcrb
sub
in
leave
or
iret
pop
dec
movsl
shrl
inc
fiadds
pop
popa
pop
push
pop
adc
cmp
repz
mov
movsb
xchg
in
enter
or
aad
jo
scas
or
cmp
addr16
lret
pop
push
jp
xor
xor
adc
out
dec
and
inc
push
fsts
inc
addr16
cli
xchg
sub
pop
pop
pop
popa
rclb
daa
cwtl
cmp
xlat
idivb
in
dec
xchg
scas
xor
into
push
rolb
jb
dec
and
jbe
rcl
cli
fiaddl
popa
dec
js
mov
jge
int
cs
jg
adc
das
call
xchg
mov
push
jnp
repz
cmp
mov
jne
mov
inc
stos
sub
sub
ja
out
adc
dec
xor
js
xchg
adc
into
outsb
mov
cltd
repz
jbe
ficompl
rcll
cmp
sbb
push
jns
push
imulb
adc
arpl
cwtl
inc
or
dec
movsl
arpl
inc
sti
popf
mov
jge
mov
je
rorb
mov
test
repnz
sbb
ljmp
push
cmp
or
pop
mov
pushf
iret
sub
mov
shlb
or
imul
xlat
int3
data16
push
in
add
dec
jge
xchg
xor
pusha
icebp
fucomi
pop
mov
and
mov
fucomip
mov
and
adc
or
jo
lahf
cwtl
leave
sub
fimuls
pushf
cmc
mov
ret
push
sub
xor
loop
hlt
out
push
or
push
inc
mov
or
push
push
lds
mov
fwait
das
xchg
test
fsincos
popf
cs
mov
xor
out
jnp
xor
lock
arpl
sub
popf
mov
mov
xchg
mov
mov
shlb
pop
bound
or
das
ljmp
das
or
clc
dec
xchg
dec
inc
mov
pop
insb
pop
cmp
add
push
es
imul
add
ret
lret
insl
mov
jle
pushf
loope
ss
pop
mov
out
mov
sbb
dec
call
cmp
adc
xor
and
lods
pop
insl
ljmp
xor
mov
push
inc
push
test
xor
arpl
arpl
cmc
in
dec
mov
test
dec
push
je
xor
xor
rorb
mov
dec
ret
add
dec
mov
std
fldl2e
mov
ds
fsubrp
mov
jne
push
xor
mov
mov
fwait
push
lods
orb
into
mov
loope
sbbl
shrl
out
xor
or
lidtl
daa
cmp
pop
adc
mov
addb
pop
or
hlt
inc
dec
cwtl
add
adc
testl
adc
xor
call
fcmovbe
jb
scas
xchg
adc
int
pop
lds
and
lcall
mov
test
pop
inc
add
mov
or
sbb
int3
ss
sbb
pop
mov
mov
push
or
nop
shll
out
push
xor
sub
or
fisubrs
and
xor
push
pusha
pop
call
jl
dec
sub
nop
imul
add
adc
sub
sub
cmp
mov
push
les
mov
xor
mov
inc
push
push
hlt
or
pop
mov
dec
out
jb
mov
jb
ds
dec
mov
or
test
std
iret
and
dec
cmovge
roll
out
xor
pop
leave
je
jbe
and
xchg
adc
xchg
insb
ljmp
xor
cmpb
mov
in
lods
sub
fsts
ss
add
add
push
ja
inc
insl
enter
int
push
movsb
js
int
mov
das
add
sub
test
xor
out
push
adc
pop
pusha
outsb
movsl
enter
mov
mov
xchg
call
mov
sub
mov
pop
xchg
lock
or
sub
jg
or
jl
cltd
adc
aam
fsubrs
orb
ret
lahf
adc
repnz
adc
inc
ljmp
popa
pop
pop
mov
stos
fbld
sti
cmpsb
addr16
inc
lods
jecxz
pushf
dec
out
or
xor
popf
mov
aad
out
stos
sbb
add
pop
dec
mov
push
add
leave
and
dec
and
fisttpl
mov
inc
pusha
sub
outsl
cmpsb
out
out
mov
cmp
pop
dec
mov
in
pushaw
shr
cwtl
data16
xchg
pusha
mov
incb
xor
pop
jp
add
ja
lods
js
bound
pop
lret
imul
cmc
inc
push
pop
mov
sbb
push
fwait
push
dec
addl
jmp
or
xchg
bound
fwait
or
lock
inc
and
gs
testb
sahf
inc
movsb
ret
insb
nop
or
test
daa
mov
fsub
xchg
mov
push
hlt
repnz
pushl
jle
xor
int
or
aad
jecxz
fwait
inc
jb
mov
adc
aad
xchg
mov
jb
jmp
in
inc
xor
ret
mov
cmp
push
sbb
lods
cwtl
cmp
xchg
xchg
scas
cmc
inc
and
lcall
cmp
jnp
mov
add
cmp
int3
adc
jge
mov
std
add
cmp
xchg
and
iret
nop
loope
pushl
dec
scas
test
mov
loope
mov
cmp
dec
je
add
arpl
adc
xchg
loop
fdiv
loop
nop
lret
cmpsl
mov
loope
mov
xor
scas
mov
xorb
das
push
addr16
ficoml
lea
insb
pop
sarb
push
cmp
ss
pop
adc
mov
lret
xchg
in
fisubrl
push
xchg
mov
dec
and
lahf
out
stos
shll
jecxz
fwait
cmpsb
inc
insl
jl
out
inc
sbb
rcrb
mov
adc
jnp
scas
lret
add
je
insl
cli
cmp
loop
jns
hlt
hlt
call
mov
or
inc
es
xchg
and
mov
outsb
dec
mov
and
mov
add
xchg
das
xchg
loop
mov
cmp
push
xchg
out
fcom
out
leave
push
push
cmp
mov
iret
popa
ficoms
push
xor
cmc
data16
pop
dec
mov
ljmp
int3
jae
lret
adc
sub
dec
inc
inc
jae
aam
dec
aam
pusha
push
fisubrs
mov
outsb
jbe
pop
hlt
scas
js
mov
movsb
or
mov
stos
xchg
aam
stos
xlat
cltd
sub
sub
aas
xor
leave
ljmp
or
add
pop
mov
in
mov
rorb
mov
in
inc
int
cli
fmuls
cmc
in
cltd
idivb
ja
push
fisubl
adc
sbb
inc
clc
cltd
dec
xor
lea
test
xor
dec
xor
xchg
mov
mov
pop
add
dec
stc
sbb
push
pop
xchg
jnp
or
push
and
punpckhdq
insl
inc
mov
fistps
sahf
lods
test
mov
jge
cmp
xor
insl
xor
loopne
cmc
pop
push
popf
arpl
push
adc
mov
push
xor
mov
insb
sub
fs
lods
cmp
mov
mov
ret
jae
loope
into
nop
cld
icebp
cmp
pushl
jle
int3
xchg
lcall
aaa
mov
jnp
inc
xor
es
outsb
dec
dec
mov
xor
push
mov
lods
daa
pop
xchg
ljmp
adc
rorb
subb
xchg
inc
pop
push
notl
aad
jae
push
xchg
mov
ret
cmp
mov
push
sbb
pop
int3
dec
mov
dec
jge
or
mov
sbb
xchg
cmp
mov
repz
xchg
out
insl
stos
dec
lods
xor
cld
mov
clc
ss
es
inc
xorl
inc
mov
adc
out
es
sbb
jge
and
mov
je
inc
pop
jne
push
dec
xchg
loopne
dec
es
lods
xchg
cli
pop
shll
xchg
sbb
sbb
pop
sub
sbb
fs
mov
jb
testl
fisubs
xchg
je
sbb
and
xorb
push
or
xchg
xchg
mov
or
cltd
or
cli
out
jbe,pn
xor
jne
mov
cmpb
jb
test
sahf
and
mov
adc
hlt
sub
xor
dec
cmp
sub
push
pop
xorb
mov
enter
pop
adc
dec
and
sub
icebp
lahf
ds
add
sub
lret
lret
pop
xor
pushf
adc
pop
mov
mov
shll
test
push
jb
rorl
sbb
mov
sbb
leave
gs
fisttpl
mov
xor
dec
dec
mov
mov
pop
fnstenv
call
je
push
fnsave
cmp
aaa
xchg
mov
mov
int
in
adc
pop
add
cmp
add
dec
mov
test
das
sub
push
clc
push
adc
ljmp
les
jbe
jmp
cwtl
sahf
lcall
and
sti
jb
adc
mov
cld
inc
mov
mov
shll
sbb
sub
mov
and
scas
mov
daa
inc
adc
pushf
lods
outsl
mov
mov
scas
dec
loop
arpl
ret
mov
outsb
sahf
jo
mov
xchg
out
mov
xchg
imul
xorl
jb
push
inc
insl
mov
and
lahf
mov
icebp
jl
loopne
fimuls
jmp
jmp
pop
movsb
scas
inc
xchg
fisttps
mov
push
out
mov
xchg
inc
dec
xchg
outsl
in
test
mov
aad
xor
sub
dec
pop
mov
in
xor
not
mov
xchg
jo
and
xchg
push
decb
lds
push
sbb
xchg
xor
xchg
gs
ret
xor
call
dec
gs
jp
int
lods
adc
push
xchg
mov
in
jns
push
aam
aaa
xchg
push
insl
mov
mov
mov
jno
push
push
and
pop
popa
mov
mov
scas
nop
push
test
mov
add
scas
jmp
jmp
aaa
pop
jne
cmp
xchg
inc
adc
inc
jb
ret
push
jle
js
sbb
nop
mov
fcos
cld
or
mov
mov
aam
and
popf
test
inc
cmp
repnz
mov
imul
xchg
push
aas
loope
sbb
add
mov
sub
mov
jae
jmp
fiadds
mov
or
xchg
loop
mov
sub
aam
scas
mov
loop
rorb
pop
test
jecxz
rcrb
aad
jl
xor
sub
sub
xchg
sbbb
mov
fwait
mov
sbbb
pop
call
lock
adc
sbb
or
loope
test
test
mov
mov
in
imul
pop
ss
loope
bound
shlb
loopne
addl
imul
sub
fs
out
mov
jns
mov
stos
sbb
lahf
and
out
or
shrl
fiadds
lcall
cmpsl
mov
mov
loopne
or
loopne
adc
xor
test
add
int
inc
pop
test
mov
fisubrs
inc
or
mov
cmp
imul
nop
xchg
fstpt
sbb
inc
adc
cmp
rclb
call
push
mov
jmp
aas
stc
scas
movsb
sahf
bound
pop
lock
mov
loopne
adc
pusha
rcrl
nop
sbb
inc
fisttpll
or
mov
arpl
dec
pop
inc
xchg
pop
mov
xor
or
push
addr16
sub
bound
imul
add
mov
mov
out
push
ljmp
jno
or
mov
inc
fistps
and
int
pop
mov
xchg
test
pusha
test
jo
jle
je
sub
loope
mov
iret
jno
mov
push
ja
ret
and
or
loopne
sub
lret
loope
rcrl
popf
enter
scas
cmp
xor
cmp
repz
sub
jg
inc
in
push
push
scas
mov
dec
cwtl
rcrl
je
bound
mov
hlt
push
movsl
adc
jmp
mov
mov
mov
adc
pushl
clc
xor
mov
jno
clc
pop
cli
mov
pop
push
insb
lcall
sub
mov
lods
mov
xchg
sbb
inc
add
out
sub
jp
and
pop
xchg
mov
or
dec
rorb
sub
subb
icebp
cmp
dec
pop
rclb
arpl
pop
sbb
fidivrl
xchg
lret
push
inc
cmc
mov
mov
cs
mov
and
jle
stos
sub
ret
sub
aam
in
adc
mov
xor
pop
mov
push
into
jg
fptan
fcomip
loope
imul
data16
fistl
mov
adc
pop
mov
or
adcb
mov
pop
inc
movb
mov
addr16
popf
push
xchg
push
clc
repnz
cs
mov
xor
or
mov
arpl
add
push
cmp
ret
mov
aam
lcall
es
movsb
pop
mov
enter
and
out
pop
out
cmp
pushf
inc
fnstenv
jp
push
imul
adc
je
scas
xor
mov
stos
fiadds
xor
jmp
aaa
xor
fcoms
or
sub
rcrl
pop
sbb
or
cmp
push
scas
stc
repnz
dec
ds
rorl
fisubs
gs
ret
jno
or
movsl
js
push
jmp
test
outsl
clc
mov
cmp
push
xor
fucom
shll
je
jae
lret
scas
xchg
xchg
sbb
cmpsl
ret
jb
mov
adc
gs
fs
xchg
adcl
repnz
pop
dec
sbb
loope
or
jp
les
inc
call
fs
and
jo
push
dec
pop
sbb
out
out
rcll
or
mov
les
mov
hlt
fimull
fcompl
cmpsb
fwait
cmp
mov
popl
adc
mov
scas
ret
push
dec
add
add
popf
arpl
inc
cmp
cld
push
push
sbb
outsb
hlt
insb
cmpsb
sbb
jb
mov
cmp
call
lea
bound
adc
leave
fisttps
inc
imul
dec
mov
xor
inc
cwtl
leave
mov
fstps
das
mov
shl
arpl
or
mov
mov
lea
mov
nop
imul
fnstcw
lock
sbb
pop
aad
push
jmp
dec
cld
fwait
ljmp
xchg
lds
mov
imull
xchg
pop
jae
pop
jge
or
jp
outsb
adc
shr
lahf
push
cld
xchg
xchg
ss
fmuls
fs
dec
fwait
mov
shll
dec
fs
out
mov
out
repz
test
mov
cmp
jg
pushf
out
pop
insb
es
or
sbb
inc
test
mov
and
push
shrl
sub
stos
int3
pushf
idivb
rcrb
adc
imul
cld
inc
pop
rcl
sub
cmpsb
fs
jp
sub
punpcklbw
mov
notb
stc
pop
repz
dec
inc
or
clc
pop
and
test
sub
loope
pop
and
inc
sub
aaa
fcmovnb
mov
out
inc
cmpsb
clc
inc
xor
cmp
jne
ret
xchg
add
mov
jb
test
lock
dec
push
jge
dec
adc
test
stos
mov
data16
test
pop
scas
mov
js
loopne
pop
jmp
mov
add
mov
sbb
fcompl
fsubl
imul
or
xlat
fxam
push
cmpsb
push
push
divl
and
enter
int3
rclb
or
xor
inc
movsb
faddp
xor
adcl
loop
hlt
mov
call
lret
fwait
push
std
icebp
cmp
fdivl
sub
int
mov
inc
int3
lods
dec
test
in
lret
mov
rol
shl
cmp
stc
ljmp
addl
loopne
scas
inc
shll
xchg
int3
sbb
repnz
pop
and
pusha
xchg
mov
push
mov
mov
jle
iret
adc
and
sbb
fisubl
enter
gs
not
fidivl
in
in
inc
mov
and
outsl
push
xor
or
mov
bound
stc
inc
sbb
jae
and
lock
in
add
adc
rolb
jno
jge
sbb
xor
jp
shlb
inc
loopne
int
or
nop
adcb
or
dec
push
push
mov
inc
leave
ret
mov
lea
jecxz
lods
pop
adc
jb
ss
jp
bound
sbb
stos
mov
pushf
popf
push
inc
pop
js
pop
fwait
pop
test
mov
pop
cmp
out
cmpsb
jecxz
push
test
mov
mov
dec
cltd
sbb
negb
pop
cmp
mov
mov
and
cltd
cmp
fwait
add
out
dec
out
pop
and
ja
ds
push
xor
jae
fildl
rcrl
fcompl
and
mov
shl
stc
and
dec
push
fisubrs
jmp
cmc
cmp
dec
pop
jge
scas
out
negb
loop
mov
sbb
movsl
xchg
rorb
enter
inc
test
test
into
adc
repnz
add
cmpl
rolb
into
xchg
mull
data16
stos
and
sbb
ljmp
out
push
and
call
imul
inc
loope
jmp
adc
shll
xchg
fisttps
jb
das
inc
dec
push
push
mov
je
popf
xchg
daa
mov
popa
xchg
jbe
insl
cmp
cmp
data16
ljmp
stc
jno
mov
cltd
pop
pop
repz
or
xor
or
stos
inc
sbb
outsb
mov
lcall
inc
pusha
test
stc
jns
jge
or
imul
push
push
shrb
adc
jo
cmp
and
pushf
push
adc
inc
xor
sbb
in
scas
cmp
leave
or
fdivl
cmp
dec
mov
cmp
hlt
sub
cld
jo
add
inc
jae
jae
xchg
std
jle
push
or
pop
mov
in
dec
test
mov
cmp
adc
dec
stos
es
mov
cmpb
aad
xor
jp
xchg
ret
inc
cmp
jb
dec
bound
xchg
enter
gs
xor
out
adc
div
mov
mov
sahf
stos
sbbl
sti
mov
jae
sbb
fcmovnb
mov
mov
rcrl
sub
outsb
pop
aaa
add
into
push
add
xor
popa
stos
outsl
repnz
movl
sbb
movsb
and
push
out
cmpsb
add
mov
mov
jmp
cwtl
out
xchg
stos
add
in
cmp
in
dec
adc
adc
push
xchg
mov
inc
adc
mov
push
les
fists
sbb
mov
jg
into
jecxz
out
lret
cld
xor
adc
scas
xor
shrl
mov
pushl
add
in
or
popa
imulb
stos
outsl
add
bound
js
cmp
and
sar
adc
jae
mov
out
aaa
out
dec
jb
or
lret
pop
mov
pop
adc
pusha
ds
push
push
xor
ds
bnd
into
pop
stos
cmpl
sbb
sub
jmp
dec
clc
sbb
mov
ret
lds
js
jns
lret
and
fnsave
mov
dec
popa
hlt
mov
sub
and
inc
ret
lock
lea
std
icebp
or
stos
lea
popf
or
mov
and
xor
xchg
add
cmpsb
pop
dec
push
push
mov
xor
cmp
loope
mov
mov
clc
mov
dec
mov
fcmovnu
stc
adcl
mov
mov
mov
arpl
leave
movb
jae
sub
sar
addr16
jne
adc
insl
xchg
xchg
sbb
mov
jg
mov
movsb
mov
mov
and
jae
test
dec
jnp
shl
outsb
xchg
add
lahf
shl
ja
test
xor
lahf
in
pop
insb
pop
call
arpl
insb
mov
popf
mov
xchg
cwtl
enter
fiaddl
and
movsb
cmpl
lahf
jo
lds
lcall
add
sub
or
jg
aad
cltd
out
push
and
mov
fidivs
mov
xchg
push
mov
test
loop
cwtl
sbb
mov
lock
push
sbb
jl
fimuls
daa
icebp
aad
aad
xchg
dec
hlt
js
loopne
cs
and
pop
xorb
lds
xchg
mov
jno
add
and
fs
ret
adc
or
pop
push
sahf
sbb
dec
and
xchg
cmp
stos
cli
xor
faddl
rcr
inc
add
push
aaa
push
test
mov
int3
adc
push
test
xchg
pop
call
dec
adc
mov
push
lahf
cmpsl
dec
loope
inc
lcall
pop
mov
mov
loopne
subl
push
fbld
lods
xchg
and
bound
mov
xlat
xor
inc
and
sbb
dec
scas
xchg
sub
dec
repz
cmp
fldl
xor
mov
daa
inc
jle
iret
adc
add
inc
mov
rorb
push
mov
push
into
dec
das
mov
dec
in
nop
inc
gs
lahf
inc
jge
roll
cmp
lahf
stos
xor
clc
adc
cltd
lock
fistps
jecxz
jecxz
xor
fsubl
aad
ret
jl
push
sub
cld
dec
pop
insb
pop
popa
jo
dec
imul
sub
lret
inc
mov
push
gs
sbb
mov
jp
fs
cmp
cli
push
jae
out
mov
repz
adc
ret
xchg
mov
sbb
jbe
pmaxub
adc
push
loope
cli
in
aas
xor
loope
pop
xchg
and
push
loope
divl
insb
imul
cld
leave
lods
int
jb
cmpsl
jle
pushf
mov
neg
andl
ds
mov
mov
add
cmp
dec
lret
mov
std
mov
sahf
sub
testb
popf
sti
addr16
insb
or
es
pop
add
out
add
xlat
fmuls
lret
xchg
xor
out
jecxz
rcll
cmp
jne
out
inc
xchg
je
xor
push
xor
mov
gs
mov
mov
mov
mov
dec
push
std
insl
xor
imul
fadd
cmp
enter
ret
lods
jecxz
lahf
lcall
inc
andl
add
adc
jp
sbb
outsb
jnp
pop
jge
sub
test
or
nop
push
sub
push
mov
mov
sub
andl
in
jae
dec
out
cmp
lods
inc
jle
fninit
adc
pop
lods
add
cltd
hlt
inc
shll
inc
movsl
jo
insb
jns
popa
scas
mov
fmuls
push
adc
in
pushf
in
xchg
dec
mov
mov
sbb
mov
in
push
add
push
push
inc
adc
loope
call
mov
mov
pop
rcrl
fwait
cmpsl
xor
shl
adc
sub
and
xlat
push
ljmp
mov
pop
fwait
in
aad
out
pop
jae
out
cmpsl
fldenv
adc
mov
xchg
mov
out
out
pop
jbe
cltd
mov
nop
iret
fs
enter
rorb
inc
in
xor
jg
mov
cli
fwait
mov
xor
rcr
loopne
arpl
insl
mov
pop
and
or
sbb
fcoml
xchg
pop
jne
scas
mov
jne
push
inc
pop
xchg
arpl
mov
add
fildl
leave
sub
inc
outsb
pusha
jns
js
hlt
add
inc
imul
sti
insl
jmp
lds
sarl
sti
cmp
and
jo
aas
bound
pop
jae
test
mov
sbb
add
or
xor
stos
je
or
adc
mov
imul
or
nop
fstps
push
add
jne
out
push
xor
adc
inc
inc
add
cli
enter
push
test
xchg
push
std
sahf
and
fsubrl
aas
adc
mov
mov
or
push
je
adc
push
inc
or
xor
mov
xchg
inc
jae
mov
test
lret
outsl
cmp
push
jbe
gs
and
dec
dec
ret
pop
mov
sbbb
push
in
icebp
test
outsl
jp
dec
jmp
cmp
xchg
push
sbb
and
sbb
xor
int
xchg
inc
jle
bound
aam
sbb
lds
dec
mov
cmpsb
jp
cmpsl
add
daa
adc
push
dec
pusha
jns
push
cmp
shl
add
sbb
nop
pop
jle
pop
inc
fldl
leave
pop
aad
mov
jg
mov
adc
in
shrb
stc
pop
cmp
lret
mov
dec
fs
mov
xchg
adc
inc
or
sbb
or
in
dec
adc
sbb
jp
imul
mov
mov
sbb
int
inc
insb
mov
cmp
xor
nop
mov
into
push
lods
insb
insb
jb,pt
adcl
inc
mov
ret
loopne
out
fldcw
das
or
xlat
and
mov
mov
push
pop
aaa
mov
xor
inc
dec
dec
cmpsl
mov
and
call
xchg
mov
movsl
xchg
fsubrl
pushf
jge
sbb
push
and
cs
addr16
push
jb
outsl
push
or
subl
ret
insl
mov
fdivs
jne
sbb
push
test
push
js
or
push
pop
inc
mov
out
call
adc
inc
xor
or
outsb
pop
cld
or
jae
push
mov
or
fisttpll
pusha
push
sub
in
ficompl
sbb
or
aad
and
lcall
pop
repz
xchg
push
xor
icebp
inc
repnz
test
pop
lea
mov
insb
lahf
aaa
rcrb
and
dec
mov
lock
movsl
push
push
mov
jp
fs
stc
push
pop
mov
loop
clc
cmp
mov
and
jno
adc
rclb
push
push
jne
fstps
jbe
cs
mov
xchg
arpl
es
xor
push
ss
and
iret
push
int
sarl
xchg
sub
incl
js
repz
cmp
aam
and
cmp
or
adc
or
fnstenv
filds
rorb
add
nop
call
dec
andb
arpl
cmp
clc
mov
stos
sbbl
cwtl
cltd
pushf
inc
sbb
mov
fwait
stc
or
dec
lahf
outsb
roll
push
arpl
xor
sti
cmc
cltd
and
mov
cli
dec
jge
ds
jmp
repz
lds
lahf
push
add
lods
pop
push
inc
aaa
mov
mov
sbb
insb
mov
fists
mov
jb
xchg
popl
test
lea
pop
fidivl
add
xor
lods
dec
sub
jle
out
popa
fstpl
test
add
aad
mov
pop
ds
inc
mov
sub
pop
jnp
inc
cld
call
ds
sahf
sti
pushf
fadds
and
leave
mov
jns
mov
fs
lsl
pop
mov
inc
insb
je
hlt
push
fdivs
test
fwait
push
push
imul
add
outsb
add
cmp
nop
pop
xchg
daa
cltd
or
and
out
cli
cmp
out
xchg
lret
loop
jmp
inc
jmp
jmp
mov
cmc
bound
cld
insl
xchg
and
adcl
outsb
jg
fucomi
xor
out
dec
push
mov
dec
xchg
xor
or
es
push
imul
cmp
mov
icebp
inc
aam
xchg
outsl
inc
or
out
mov
stos
jle
enter
jb
jb
and
jl
xchg
stos
jnp
mov
stos
inc
mov
push
pop
jo
lds
aam
fimuls
jmp
and
and
or
das
mov
stos
pop
adcb
call
sahf
adc
mov
jmp
int3
push
nop
jl
sbb
test
sbb
inc
mov
mov
xor
lds
mov
xor
pushf
shrb
mov
pop
cmp
repnz
add
dec
fisubrs
xchg
add
add
and
nop
rcrb
ret
mov
and
pop
outsb
inc
lahf
mov
ds
push
mov
inc
cmpl
mov
in
fcomi
out
push
adc
mov
shrb
inc
cmp
xor
push
mov
fwait
and
inc
es
xor
lcall
xor
stc
cwtl
pop
push
mov
in
xchg
sub
int
daa
sub
out
sti
add
mov
hlt
vmovss
adc
mov
sub
jge
test
out
cs
jbe
iret
repz
inc
add
cld
inc
sbb
adc
bound
lea
xlat
outsl
mov
fs
sbb
aad
xchg
adc
inc
mov
iret
mov
push
xchg
mov
lea
clc
in
lea
cmpsb
shll
xor
ficompl
and
ss
xor
call
flds
and
dec
lcall
leave
xor
push
imul
dec
lock
arpl
jmp
cmp
lret
or
push
or
jge
clc
jbe
int
test
adc
mov
lahf
jecxz
daa
pop
dec
xchg
sbb
call
jnp
aaa
xchg
jecxz
push
lret
mov
xor
mov
fnstsw
dec
sub
rolb
pop
femms
sbb
popf
into
xor
fwait
add
dec
fmuls
or
pop
pop
lahf
sub
out
lods
xor
hlt
push
or
mov
and
cmp
mov
mov
daa
pop
in
mov
push
or
sti
fwait
les
xchg
out
cs
jmp
mov
cmpsb
add
jnp
cld
mov
clc
xor
and
adc
ffree
mov
push
shl
fidivl
mov
cmpsb
xlat
std
aaa
test
sbb
pavgw
inc
mov
out
push
cmpsl
jge
pop
mov
sbb
lock
jbe
and
je
das
out
scas
jae
adc
nop
mov
add
dec
fisubs
cmp
mov
imul
stos
in
sti
bsr
negl
rolb
ret
call
cmp
lea
in
gs
in
sub
sbb
pushl
shlb
and
mov
jle
rorl
fldt
push
mov
pop
xor
jne
stos
ss
fcmovbe
sbb
ja
and
test
mov
fisubrl
loopne
arpl
popl
cmp
sub
mov
mov
sar
aas
jae
or
es
jns
xor
jecxz
xchg
inc
jno
or
sbb
jle
lea
xchg
aaa
jecxz
inc
cli
cwtl
push
mov
xchg
test
sbb
mov
lret
sbb
bound
scas
lods
and
push
inc
lock
push
jmp
fnstsw
adcb
sbb
icebp
pushf
jp
sub
lods
push
add
dec
pop
outsl
mov
mov
insl
push
jb
outsb
xor
or
pop
jbe
pop
jnp
je
ja
dec
mov
dec
pop
les
mov
jno
mov
dec
xchg
inc
shrl
mov
jecxz
mov
int
out
leave
addl
insl
cli
test
add
cmp
jo
cltd
mov
xor
mov
leave
jns
sahf
sub
mov
lds
pop
scas
out
cmpsl
mov
lret
push
into
xchg
mov
div
rol
mov
xchg
cmpsb
dec
cmp
mov
cmp
call
cmp
add
xchg
dec
sti
insb
sbb
stos
pop
rclb
cmp
rclb
xchg
or
lods
sub
push
sti
fld
pop
mov
repnz
aas
xchg
sbb
aas
out
scas
lcall
ret
stos
xchg
sbb
xor
and
xlat
stos
js
pop
lret
inc
xchg
and
xor
pop
add
dec
mov
xor
dec
dec
add
movl
aam
adc
cmpsb
lret
daa
lock
dec
jb
pop
pop
xchg
push
aam
inc
xlat
xor
jmp
int3
or
push
pop
adc
mov
mov
outsl
sbb
movsb
mov
fbld
ficompl
xchg
xchg
or
nop
frstor
jp
imul
sub
push
stc
push
fsubrl
outsl
push
mov
mov
xchg
push
push
jmp
stos
fsubr
jle
int3
mov
cli
xchg
sbbl
aam
out
incl
dec
stos
or
icebp
inc
add
sahf
js
pop
xchg
sar
pop
pushf
xchg
pop
daa
out
xor
push
pusha
shrl
and
sub
xlat
inc
loopne
notb
cmpsl
fildll
mov
fwait
test
dec
loopne
cmp
xchg
rorl
shrb
fs
adc
icebp
pop
xchg
movsb
mov
icebp
mov
int3
loop
faddp
and
inc
inc
mov
xchg
pop
dec
mov
shl
mov
push
leave
cmp
addr16
cs
jo
mov
xchg
dec
pop
adc
sbb
aaa
mov
push
push
mov
sarl
mov
xchg
push
stc
xorb
gs
mov
xchg
inc
push
sahf
leave
jno
lods
jmp
jne
out
pop
dec
xorb
adc
ret
add
insl
adc
jmp
xor
pop
fidivl
mov
test
daa
in
lahf
adc
adc
jae
in
clc
sub
pop
cmpb
mov
cli
mov
dec
dec
hlt
bound
xor
cmc
cmp
add
add
nop
sub
ja
ret
shrl
push
fucom
and
aaa
fsubrl
mov
test
shr
push
xchg
or
ljmp
inc
push
push
popa
lret
pop
and
pshufb
jmp
mov
rcl
mov
data16
jecxz
and
fwait
sbb
lcall
pop
jle
fwait
out
in
fldt
sbb
ret
rcrb
jle
loopne
fadd
cmp
test
scas
repnz
or
inc
jg
loopne
cli
cld
cmp
std
das
jle
lods
mov
mov
aad
push
sub
cwtl
dec
or
std
movsl
jae
jg
jecxz
xchg
cwtl
fdivrl
arpl
jne
subl
xor
adc
movsb
mov
add
dec
sbb
pop
ja
and
bound
outsl
test
and
in
push
ja
add
mov
push
pushf
xor
insl
xor
clc
enter
cmc
sub
shll
subl
sub
std
in
imulb
sbb
iret
mov
jp
mov
mov
push
stos
dec
in
data16
sub
push
aas
out
ds
cmp
push
dec
xlat
dec
cmpsl
loope
fadd
jg
pop
fs
nop
cld
push
push
adc
push
push
stc
out
lods
push
std
jecxz
xchg
divl
pop
pop
sub
jmp
jp
in
fs
dec
lret
fisubrs
leave
pusha
addl
jae
adc
cltd
hlt
push
daa
movsl
jb
or
push
xor
out
fsubl
xchg
popa
cmpb
push
lcall
pop
mov
jne
and
mov
mov
scas
imul
cmp
and
fs
adc
pop
nop
cltd
jae
js
scas
stos
mov
push
scas
lods
pusha
adc
lods
outsb
cmp
mov
jle
adc
ljmp
xorb
push
popa
jne
cmp
sbb
add
adc
mov
scas
and
shrl
mov
adc
data16
cmpl
std
push
outsl
neg
add
cmp
stos
fnsave
sub
data16
rclb
stos
out
mov
es
dec
dec
adc
mov
add
cld
xor
cmpsb
cmpl
in
lds
and
test
test
and
mov
xlat
mov
fldenv
jecxz
outsl
fnsave
lahf
ror
adc
std
adcb
aaa
xchg
jp
push
pushf
stos
fbld
out
jle
fisubl
in
shll
inc
vmwrite
sub
ret
mov
xor
pop
sub
adc
lods
or
mov
sub
mov
mov
sub
fistpl
aas
das
push
int
daa
repnz
push
mov
push
rorb
stos
fs
pop
sti
lret
rcll
sbb
ret
mov
repz
aas
mov
pushf
negl
idivb
arpl
imul
push
xor
adcl
rorb
pusha
les
pop
imul
ds
and
test
adc
inc
and
fildl
aam
mov
jo
sub
fimuls
add
mov
popa
sub
js
jb
rcl
mov
fstpt
sahf
add
xchg
mov
ss
dec
sub
mov
gs
bound
push
ljmp
dec
test
rcll
push
loopne
jmp
outsl
std
movsl
fbld
mov
cwtl
jns
xor
dec
in
push
push
decb
sbb
adc
mov
test
out
sub
fbld
mov
push
repz
fwait
rcrb
xlat
fwait
adc
mov
fisubrs
pop
and
lahf
inc
lret
xor
or
jno
shrl
sbb
xchg
cmp
xor
enter
inc
sub
testb
insb
jno
out
mov
fnstenv
xchg
xchg
fnstsw
xchg
lahf
fstl
out
mov
and
scas
pop
jo
ret
dec
jg
sar
bound
int
xchg
icebp
pusha
rclb
sbb
jmp
ljmp
xor
outsl
js
lahf
xor
push
pop
xchg
or
push
push
lret
xchg
mov
sub
shll
lods
xchg
lea
pop
adc
xchg
pop
neg
dec
sbb
les
jle
inc
push
cmp
mov
cmpsb
sbb
and
mov
or
push
test
mov
out
pop
jmp
fdivrs
mov
mov
std
sub
pop
shrb
idivl
cltd
push
adc
fmul
cmp
add
mov
in
sub
xchg
sahf
dec
cmp
jae
pushf
repz
pop
add
jmp
insb
xchg
xor
aas
movsl
xchg
pop
jl
pop
cmpb
jle
xor
sub
daa
hlt
adc
xchg
push
jo
sbb
insb
in
sbb
jae
or
cmp
inc
jns
out
cwtl
pop
add
jle
inc
mov
cmp
out
jl
xchg
ja
out
inc
mov
lds
dec
add
stc
xor
cmc
mov
cwtl
cmp
add
push
add
cwtl
ja
fisubs
mov
js
jno
mov
je
insl
mov
xchg
je
lret
mov
mov
dec
jmp
mov
xchg
test
pop
adc
sbb
xchg
imul
outsb
outsb
mov
add
xor
leave
out
sub
icebp
cmp
or
loopne
repz
jecxz
fbld
mov
mov
pushf
xorb
mov
and
inc
push
push
clc
jmp
xor
in
cmp
pushf
orl
add
aaa
push
mov
xor
xchg
adc
js
cmc
xchg
mov
push
mov
inc
mov
jne
sbb
pop
in
and
lods
adc
pinsrw
shll
lahf
mov
outsl
lahf
je
sub
pop
pop
and
push
or
test
mov
dec
jg
mov
push
jle
test
xor
loop
pop
in
das
add
lahf
jle
lea
jp
insb
ret
adc
pop
loop
push
push
cs
pop
rolb
adc
mov
and
sbb
jecxz
sub
data16
test
pop
push
lahf
mov
lock
mov
enter
jns
lret
xchg
ficoms
in
pop
lods
push
addb
divb
sbb
cltd
sub
jbe
sbb
mov
dec
xchg
std
jb
and
int3
fiaddl
ss
adc
sub
popa
js
inc
ja
xchg
push
mov
loop
jb
out
gs
dec
jge
sbb
mov
insb
test
imul
dec
fmuls
xor
movsl
xor
das
movsb
aad
cli
inc
add
mov
out
jne
jge
notb
xor
xor
mov
movsb
es
ficoml
loopne
fdivrp
sbb
lcall
push
push
ror
xchg
stc
xchg
movsl
mov
popf
in
add
pop
cmp
lahf
daa
fs
jae
clc
ret
add
lret
cmp
jle
jg
add
cmpsl
and
fstp
sub
xor
push
cwtl
out
popaw
jg
inc
pushf
inc
imul
nop
cmp
popf
or
loopne
sbb
mov
lahf
sub
aas
int
adc
and
jnp
pop
xorb
push
inc
lea
add
insl
insl
imul
push
loopne
add
sti
or
sbb
push
jle
cmp
adc
push
imul
push
mov
test
aas
stos
jb
pop
pop
fsts
add
lcall
sti
int
mov
pop
pop
in
test
xchg
mov
gs
mov
or
xchg
mov
iret
mov
sub
cmpsb
cli
loopne
movsb
out
fdivp
jns
jnp
cli
adc
add
jl
sub
daa
sub
sub
cmp
xor
push
push
jge
push
cli
out
mov
push
pop
insb
fcomps
push
or
xor
cmp
adc
mov
out
in
jns
sti
mov
lock
xor
sbb
add
cmp
cmp
mov
cmc
pop
outsl
outsl
push
and
mov
outsl
int
fneni(8087
push
test
jp
cwtl
rol
jecxz
lret
lcall
xchg
mov
bound
xor
dec
popf
xor
popa
add
cmpsl
dec
cltd
mov
xchg
xchg
int3
dec
fisttpll
mov
sbb
aad
lret
push
and
daa
jge
notl
pop
scas
lods
inc
js
xor
or
lahf
shl
rdpmc
jno
sbb
xor
ds
data16
das
xor
sbb
xchg
gs
js
inc
cwtl
and
xchg
int3
fcomps
scas
lret
in
fmulp
push
hlt
jle
push
or
sbb
sub
dec
cs
jo
movsl
dec
addl
sub
shrd
popa
cmp
xor
push
pop
nop
les
jle
outsl
push
xor
mov
lods
mov
push
mov
shlb
push
push
fstl
test
shrl
enter
and
cmpsb
pushf
stos
jecxz
sub
sub
xor
fcomps
addr16
adc
jbe
mov
or
xchg
lea
jb
lock
fcoms
rorl
int3
sbb
and
es
sub
or
inc
shlb
lods
aas
mov
add
das
cmp
rolb
fidivs
lahf
mov
test
mov
scas
lcall
push
xchg
orb
cltd
dec
adc
addr16
pop
lds
mov
or
cmp
fisttpl
cmpsb
sbb
mov
or
add
hlt
decl
xchg
je
jae
push
cmp
sbb
dec
push
pushf
mov
loopne
push
enter
decb
inc
in
lock
idivb
test
inc
adc
inc
loope
cmp
and
sti
lcall
subl
xchg
push
adc
xorl
push
pop
xor
xor
mov
jp
and
mov
xor
cld
xchg
aaa
inc
mov
dec
add
insb
fs
outsb
push
scas
cli
xor
push
shll
push
sahf
and
mov
shll
sbb
or
dec
daa
ja
pop
add
stos
popf
cmp
imul
out
or
jns
or
fnstsw
push
test
mov
mov
mov
iret
inc
dec
addr16
lds
loop
jo
push
cmp
fstl
int3
adc
inc
ret
outsb
mov
push
xor
mov
inc
or
movsb
cmp
mov
mov
or
or
jno
rorl
cmp
mov
push
add
adc
xchg
ficompl
lds
xchg
paddd
xor
fwait
push
aam
xor
and
lcall
jmp
fnstcw
cmp
ss
mov
mov
mov
inc
sti
inc
aam
jp
out
fwait
xor
adc
mov
test
add
movsl
sti
out
out
daa
mov
aam
mov
pop
popa
lcall
pop
xchg
xlat
push
loope
cmp
dec
loope
dec
andl
pop
stos
dec
adc
sbbl
push
mov
lds
ds
ret
shlb
mov
sbb
xor
inc
cmp
xchg
mov
mov
push
out
inc
ret
or
aas
or
shrl
xor
push
lcall
out
mov
sbb
pusha
and
push
cmp
xorl
add
xor
rcrb
test
push
pop
jecxz
mov
xchg
fsubr
mov
leave
hlt
sub
push
inc
adc
sub
ss
push
dec
outsb
jp
repnz
mov
pop
mov
out
nop
out
jb
testl
mov
sti
adc
out
mov
mov
sbb
es
adc
dec
int
fidivrl
andl
pop
movsb
andb
or
xor
cmp
push
es
out
ret
test
cmp
xlat
push
ljmp
lods
lods
test
cwtl
shll
psubsw
push
into
jecxz
sbb
roll
aas
jp
lahf
push
sbb
mov
sub
or
inc
aad
push
cmpl
xchg
std
addr16
mov
lds
out
out
dec
loopne
in
fldcw
inc
and
push
lret
mov
cltd
outsb
insl
outsl
sub
mov
lahf
push
sbb
xchg
pop
dec
jne
ret
mov
sbb
movsl
and
dec
pop
adc
push
sahf
mov
nop
sub
cmc
aaa
and
nop
cld
inc
sub
pop
pop
in
jae
lcall
jge
add
scas
aas
jnp
mov
jmp
inc
mov
daa
push
jl
pushl
or
mov
ljmp
test
out
xchg
push
into
push
adc
mov
cli
push
push
mov
mov
sbb
adc
add
pop
ljmp
out
je
xchg
sub
push
cs
mov
xor
cltd
add
cli
inc
nop
and
pop
pop
ficomps
cmp
out
jmp
je
add
rorl
pop
in
imul
or
sbb
cmpsb
mov
sbb
icebp
mov
int
lods
mov
ds
call
xchg
and
and
jle
xor
pop
adc
lret
jno
js
lcall
sbb
les
xchg
pop
jp
shl
dec
sbb
popa
adc
fiaddl
mov
or
push
dec
xchg
sbb
lods
dec
sbb
pop
pop
sub
insl
cmp
fwait
mov
mov
xchg
cmp
fistpll
icebp
mov
data16
push
into
hlt
orl
and
dec
stos
sar
xchg
cmp
andl
daa
sbb
cmp
mov
loop
mov
xchg
stos
ja
sbb
mov
ficoml
xchg
stos
sub
inc
fstpl
nop
dec
pop
inc
push
fcoms
punpcklwd
ss
cmp
dec
idiv
sbb
or
mov
outsl
je
out
les
leave
cs
repz
mov
mov
jb
dec
shr
adc
js
sarl
jl
inc
pushf
fstpl
sbb
pop
shr
daa
mov
mov
aaa
and
in
pop
scas
or
mov
fcompl
je
je
push
ret
fsubrl
add
shlb
imul
sub
lds
mov
mov
cltd
pop
and
scas
out
mov
into
push
dec
pop
in
or
not
int3
or
mov
sbbb
rcrb
lods
stos
iret
pop
xchg
jp
ljmp
jge
fcomps
subl
shrl
adc
jge
mov
xchg
push
and
sub
jle
ficoml
push
pushf
pusha
lahf
xchg
push
lret
cltd
jecxz
mov
test
and
mov
sbb
cmpsb
call
out
mov
mov
cmp
lock
push
mov
adc
decl
and
mov
shll
jg
jno
sbb
ljmp
inc
mov
mov
and
adc
adc
mov
stos
push
xor
int
in
pop
xlat
idivb
ljmp
ret
loopne
test
movsl
ja
es
sub
scas
fiaddl
fcmovu
add
cwtl
rclb
in
jbe
out
dec
mov
int
int3
nop
in
stos
bound
dec
cmp
jecxz
cmp
push
outsb
lods
scas
js
lret
jle
aad
scas
xor
popf
xchg
mov
aam
dec
add
mov
xchg
popa
xchg
jecxz
pop
jae
pop
sbb
adc
pushf
lods
cmp
pop
sub
mov
mov
in
sbb
dec
pop
adc
in
divb
movsl
daa
xor
dec
std
push
inc
cmp
or
ljmp
test
ds
fildll
rep
mov
bound
or
cmp
xor
push
cmp
mov
mov
xchg
cli
test
bound
mov
test
mov
jnp
adc
ror
pop
pop
ljmp
or
mov
scas
inc
insb
adcl
adc
sub
xchg
daa
lds
push
push
add
xchg
ds
aam
mov
hlt
in
test
mov
adc
mov
dec
and
sbb
and
inc
insl
push
test
jge
adc
data16
ret
xchg
push
push
sbb
add
test
push
add
adc
pop
int3
inc
pop
fwait
cltd
ficoms
push
fld
clc
mov
out
ficompl
nop
dec
sub
daa
sub
into
ja
and
sbb
add
xor
jnp
jne
loopne
and
push
js
and
xchg
jo
rol
outsb
ss
lods
mov
xlat
xchg
test
test
sub
jle
push
inc
or
mov
fsubrs
mov
sarb
stos
xor
and
sbb
and
imul
arpl
test
mov
jle
xor
sub
aaa
mov
cwtl
mov
hlt
pop
das
test
jae
shlb
mov
insl
jecxz
adc
repz
cmc
leave
dec
loope
nop
pop
jecxz
push
lea
lea
pavgw
les
in
sub
add
xor
test
jge
adc
lods
cltd
sarl
loopne
push
pop
fcom
out
mov
sub
push
jae
fcompl
pop
or
cmpsl
sub
cmp
fsubs
dec
repnz
int
dec
add
loope
in
call
mov
ret
inc
je
mov
insl
xor
mov
jecxz
into
cli
pop
jnp
fucomi
sti
lret
in
stos
pop
sti
movl
push
mov
nop
testl
push
scas
mov
decb
pushf
dec
lods
hlt
inc
or
test
and
mov
xchg
bound
adcb
push
ja
insl
xor
lods
dec
mov
sti
add
cltd
int3
outsl
icebp
mov
add
imulb
test
aaa
rcrb
inc
sbb
mov
test
cmp
xor
rclb
inc
sbb
inc
cmp
fiadds
aas
jp
lcall
popf
daa
pop
gs
sub
cmc
sbb
data16
mov
hlt
out
inc
ljmp
jne
jo
xchg
repnz
lahf
fwait
jae
into
inc
pop
dec
loopne
mov
stos
enter
mov
ret
arpl
xchg
hlt
xchg
aas
jl
pop
imul
mov
shll
adc
adcb
scas
fidivrl
mov
xor
mov
push
daa
fs
lock
fisubrl
push
push
loope
pop
test
fwait
nop
fists
sahf
jl
or
sahf
popa
jle
jo
mov
push
int
loope
ret
outsl
or
test
test
lahf
fs
in
push
fmull
aam
dec
pushf
leave
mov
or
cwtl
mov
ret
gs
push
repz
dec
jl
xchg
nop
pop
push
jne
xchg
sub
dec
mov
pop
xor
xor
adc
addr16
mov
xor
das
push
cmp
cs
ret
icebp
shrb
insb
mov
sub
iret
daa
nop
pop
into
out
mov
and
andl
nop
test
std
dec
jnp
fs
mov
flds
fisttps
stos
cmp
dec
sub
scas
popf
fcomps
cwtl
and
xchg
push
fisubl
xchg
loope
inc
xchg
lahf
jl
push
rcr
and
adcl
push
out
mov
in
movntq
aam
pop
sar
inc
out
stos
leave
fldt
fimuls
adcb
mov
xor
clc
lret
adc
jnp
mov
cmc
ret
or
fbld
aad
sub
lea
rol
xor
insb
pop
sti
jno
shlb
mov
inc
add
repz
test
jle
adc
push
cmp
cmp
iret
or
jnp
xchg
ljmp
icebp
push
daa
jecxz
pop
jns
jge
adc
setns
add
sbb
loop
mov
loop
fildl
pop
lods
jbe
test
xchg
out
popa
and
icebp
data16
in
sbb
or
pop
add
aam
es
jmp
xlat
jo
cmp
js
pop
jg
insb
xchg
popa
ret
pop
mov
push
aad
jnp
lea
sub
add
lcall
popa
out
mov
aam
fsub
cmp
pushf
jnp
add
xlat
jns
or
popa
adc
aaa
and
mov
and
mov
xchg
pop
ret
stos
dec
push
adc
or
mov
jge
test
scas
je
mov
ret
mov
adc
imul
sbb
movsb
xor
out
popa
addb
popf
pop
push
lds
add
in
aad
xchg
test
jp
je
inc
enter
inc
rcrl
rol
cmpsb
imull
mov
fcomi
shlb
xor
or
fcoms
xor
fcomps
mov
pop
fsubr
pushl
and
adc
data16
repnz
mov
push
xchg
xchg
push
xorb
outsb
xchg
insb
sub
adc
pop
cmp
add
mov
dec
dec
repnz
test
pop
xchg
and
xlat
jb
xchg
paddusw
lods
sbb
cwtl
jp
push
xchg
pop
or
xor
xor
or
insb
cmove
and
add
and
or
movsb
dec
cmp
fcom
pop
inc
iret
cs
sub
ret
jae
adcb
xchg
int
cmpsl
jb
jmp
movsl
dec
inc
lods
xlat
sbb
inc
test
jbe
in
sub
es
roll
enter
jg
xchg
test
push
push
ds
lods
jmp
cmp
pop
push
adc
xlat
jl
jnp
fwait
cmp
jp
and
or
fsubrl
adc
cwtl
push
and
out
or
fdivl
fwait
mov
les
jns
jns
stos
test
in
adc
or
lahf
fisubl
aad
movmskps
ficomps
adc
and
fs
mov
mov
cmp
lcall
xchg
in
push
jmp
dec
int3
or
add
sbb
out
cmp
cmp
cmp
sar
add
cmc
jmp
mov
adc
aaa
movsl
cmpsb
dec
and
xchg
leave
in
shlb
inc
xchg
aam
xor
pop
pop
jl
jno
pop
add
jnp
lea
sarl
jno
mov
and
sbb
xchg
or
sarl
mov
xchg
into
or
pop
or
mov
or
lock
jbe
rolb
jo
data16
adc
rclb
fmuls
out
ret
push
cld
in
inc
rcrb
mov
cltd
ss
lods
jnp
or
loope
cld
pusha
and
dec
pop
pusha
leave
jge
js
ss
inc
dec
xchg
jmp
pop
test
lcall
mov
out
jle
scas
clc
cwtl
mov
mov
mov
jp
pop
lods
xor
fst
jnp
mov
enter
pop
adc
push
addr16
or
jg,pt
push
adc
imulb
xchg
fsts
sbb
lods
pop
and
mov
xor
scas
jg
push
imul
sub
xor
pop
data16
pop
je
ret
enter
sub
adc
fwait
push
decl
aam
cltd
mov
push
sahf
or
cmp
or
nop
xchg
adcb
cmpsb
sbb
shlb
std
aas
arpl
aam
in
lahf
pop
in
push
or
ds
or
fxch
sbb
or
jo,pn
roll
mov
xor
in
popf
lcall
mov
and
jg
push
rcl
leave
cmc
push
push
mov
adc
xor
xchg
xor
sub
jl
ljmp
ja
std
jecxz
je
sub
imul
mov
add
jecxz
imul
mov
adc
repnz
xor
dec
pop
mov
inc
sarb
sbb
and
push
mov
mov
es
lods
insb
pop
jo
inc
rolb
das
fisubrl
mov
ret
mov
int3
xlat
imul
jmp
xchg
bound
mov
bound
outsb
jp
xchg
test
popf
mov
sbb
mov
aas
jno
inc
jg
loope
mov
outsb
gs
sahf
push
lds
ja
pushf
mov
out
xchg
daa
daa
js
fsubrl
lret
inc
mov
ja,pt
scas
inc
shlb
sub
mov
arpl
push
xchg
arpl
push
sbb
xchg
int
in
repnz
jge
pusha
mov
dec
sub
imul
add
mov
or
jmp
pusha
or
in
adc
or
adc
mov
das
rclb
xchg
out
pop
adc
dec
or
cmpsb
cmp
lcall
jnp
gs
loop
mov
std
daa
pop
es
xchg
ds
mov
insb
push
and
jb
sbb
sbb
mov
inc
lock
mov
xchg
jecxz
or
push
sbb
cmpsb
in
arpl
xchg
movsb
test
lret
stos
dec
push
jns
push
test
push
ret
addr16
xchg
out
outsb
mov
daa
or
xchg
push
fldt
xchg
mov
pop
lcall
sar
lods
ja
fwait
lock
xor
dec
cld
fucomi
jb
mov
es
in
mov
pusha
cmp
xor
jl
sbb
xor
pop
inc
ror
cmpsb
xchg
les
fisubrl
scas
sub
loope
gs
addl
xchg
mov
pop
dec
inc
mov
and
jp
mov
add
mov
push
fisttpll
int
pop
push
push
inc
xchg
and
xchg
mov
mov
push
ret
aam
mov
outsl
xor
aaa
jge
clc
xor
stc
cmpb
and
movsb
out
push
or
inc
dec
cmc
popl
pop
push
pop
jmp
or
arpl
cmpsb
popf
inc
push
cs
inc
lods
jmp
mov
or
inc
fldt
dec
or
in
xor
daa
loop
in
es
ja
inc
cmp
jg
xor
add
adc
cmpsb
test
aaa
test
dec
jmp
push
push
jo
jo
xor
adc
jae
rorl
or
and
sub
gs
inc
dec
xor
jnp
or
outsb
int
cmpl
lahf
lahf
dec
xor
and
mov
scas
or
cmp
scas
call
pop
xor
push
outsl
mov
pop
mov
sub
dec
lret
cmp
arpl
pop
and
popf
xchg
jbe
xor
xchg
lods
jbe
test
cmpsl
in
lret
sub
push
lret
in
xchg
pop
cli
cmpsl
les
pop
jle
loopne
and
shlb
jb
enter
pop
xor
push
xchg
in
das
pop
rorb
mov
xor
mov
out
fs
pop
push
and
mov
mov
loop
xchg
rclb
jmp
testb
ds
xor
repz
jb
std
in
scas
mov
xchg
outsl
addr16
xchg
jnp
cmc
ficoms
inc
fldenv
push
mov
mov
fwait
push
adc
jns
mov
leave
cmc
adc
scas
in
dec
mov
inc
dec
push
inc
fmuls
adc
fs
cmpsb
lock
iret
xor
xchg
xchg
xor
daa
mov
loopne
jbe
ret
test
add
repnz
sbb
sbb
out
lea
xor
mov
adc
lret
in
mov
mov
into
lahf
es
dec
fstps
cmp
rclb
fs
xchg
aam
inc
outsl
popa
aaa
enter
mov
cltd
cmp
xchg
or
cmp
adc
jge
test
push
es
je
imul
cmp
ljmp
inc
pusha
mov
or
jns
cmp
mov
push
or
xchg
repnz
cmp
mov
mov
sub
mov
jle
and
pusha
dec
idiv
loope
pop
push
lret
push
sti
incl
loope
mov
sbb
gs
inc
add
jb
out
sbb
ljmp
xchg
or
shll
mov
jno
das
add
and
dec
adc
imulb
nop
dec
xchg
lret
xchg
jne
mov
cmp
gs
clc
aad
mov
mov
aaa
notb
adc
xchg
pop
cld
mov
xchg
mov
sbb
aaa
mov
adc
sarl
ret
mov
into
adc
je
cwtl
stos
out
testb
andl
icebp
repz
add
cli
dec
aam
bound
test
inc
add
mov
mov
push
push
sub
in
jne
repz
pop
push
jno
shlb
ljmp
call
loope
xchg
cmc
rcl
pusha
les
mov
jo
xchg
mov
insl
leave
iret
xchg
insl
push
ficoml
sub
repz
jp
arpl
adc
movsl
xchg
lds
test
pop
sub
jne
pop
mov
inc
dec
dec
sbbb
lds
cmp
pop
mov
cmp
and
movsb
loope
sbb
lods
sub
inc
adc
aaa
push
xor
sbb
iret
in
xor
daa
ss
xchg
mov
imul
lock
mov
rclb
adc
das
lahf
dec
shll
mov
push
ss
test
jecxz
jg
ja
or
adc
call
shlb
popa
adc
repnz
pop
fiadds
sbb
ret
mov
jmp
mov
push
add
int
int3
push
std
insl
test
mov
mov
test
push
out
xor
sahf
jge
hlt
push
jg
lret
int
sub
dec
or
push
jno
addr16
jmp
sub
ret
int3
sbb
sbb
and
sub
sbb
into
pop
lcall
popf
shl
mov
push
enter
xchg
ret
cmp
sbb
rol
cmp
mov
iret
inc
cld
lods
pop
pop
adc
cmp
mov
lods
jne
push
pop
outsb
call
mov
xor
es
push
ja
popf
mov
xor
inc
inc
push
lret
ss
mov
lret
sub
movb
cmp
lock
lcall
imul
pop
push
add
test
subl
inc
hlt
push
incl
dec
out
cmp
pop
scas
stos
pop
ljmp
xor
push
mov
test
dec
cmp
in
cmpsl
adcb
or
add
and
xor
loopne
aaa
ret
mov
aad
loop
cwtl
pop
sub
cld
mov
mov
enter
rclb
ljmp
imul
icebp
inc
fisubs
lahf
mov
push
fmull
lods
pop
adc
and
ja
mov
ljmp
js
sub
dec
sub
addb
dec
cwtl
cmp
xlat
jo
dec
cltd
pop
mov
sbb
cwtl
aad
leave
lods
bound
or
rcl
hlt
lea
es
lret
repnz
jl
test
in
or
adcl
or
mov
test
test
sub
dec
mov
mov
test
dec
outsb
mov
out
and
dec
sub
cmp
lahf
repz
jbe
and
into
gs
or
data16
lret
jns
test
mov
call
jecxz
jae,pt
push
cmc
loopne
jmp
mov
int3
scas
in
fcoml
stos
inc
or
arpl
mov
ds
adc
insl
popl
lods
mov
lret
js
pop
stos
lea
out
stos
lret
jp
ret
sub
call
cmp
inc
xchg
addr16
push
mov
cmp
icebp
aaa
mov
imul
xor
test
das
or
mov
aas
test
jns
add
ficomps
lods
enter
xchg
xchg
test
popf
movsl
pop
jns
push
mov
or
adc
pop
lret
cmp
inc
dec
fcomps
ljmp
lret
loopne
out
iret
jmp
sbb
mov
mov
sub
or
js
adc
push
notl
dec
leave
dec
fs
out
cmpsl
cltd
popf
stc
in
jp
das
xorl
mov
push
loope
add
lahf
sarb
jmp
sbb
mov
in
xchg
and
xchg
outsl
cmp
outsl
int
in
inc
popl
lcall
mov
or
jecxz
adc
pop
mov
insb
lock
popa
lret
lret
pushf
shll
push
cmpsl
push
xor
stos
inc
insb
enter
cmc
daa
xchg
xor
das
je
fisttps
inc
push
mov
mov
cmp
movsb
push
xchg
inc
pop
mov
testb
cmp
adc
enter
xchg
inc
insl
das
mov
cmpl
sahf
insl
jae
out
cmpsb
nop
cmp
mov
add
test
sub
fs
mov
movsl
pop
xchg
fistpll
sub
inc
negb
xlat
adc
jno
inc
cmp
fsubrl
loopne
outsl
dec
in
mov
jne
mov
add
push
jbe
cmp
aad
xchg
bound
or
in
mov
add
pop
adc
rclb
push
in
mov
test
mov
ja
mov
inc
pop
test
insb
in
test
ret
and
cmp
loop
leave
lock
cmp
lret
popf
aad
sub
adc
jge
jl
jp
jo
insb
or
mov
les
hlt
and
push
push
sub
sbb
sti
sar
xor
pop
xchg
pop
addr16
and
fcoms
or
bound
rcl
scas
ret
outsl
fs
add
mov
loope
lods
inc
pop
dec
repz
lahf
dec
add
add
leave
add
dec
mov
jg
dec
jecxz
xlat
push
hlt
call
add
decb
hlt
dec
scas
jno
mov
cmp
in
sbb
cld
lods
int
xchg
scas
hlt
add
or
or
aad
cli
xor
out
inc
dec
ss
inc
add
sbb
xor
xchg
sbb
cmpsb
add
rolb
lahf
inc
in
insb
enter
mov
jg
outsl
aas
inc
aam
mov
cmp
mov
jmp
arpl
cmp
mov
inc
bound
cmpsl
fistpl
jecxz
mov
icebp
roll
cmp
dec
jecxz
pushf
lret
xchg
ficoml
adc
pop
xor
loop
pop
mov
lret
test
cs
adc
out
mov
sbb
sbb
or
or
dec
xor
add
scas
sbb
loopne
and
adc
aaa
lcall
insb
insb
jo
jecxz
cmpsb
pop
hlt
lahf
hlt
jmp
enter
sahf
mov
icebp
pop
in
fsts
mov
xchg
mov
mov
xor
mov
add
inc
repz
jle
ficompl
xchg
inc
pop
outsb
mov
mov
insl
xchg
mov
cmp
push
jo
leave
jno
push
sbb
lcall
out
dec
sbb
sarl
mov
mov
sub
scas
push
add
sbb
hlt
sub
or
inc
out
enter
cmpsb
and
mov
fs
pushf
pushf
pop
push
loop
add
xor
insb
jns
out
out
xor
dec
aam
cmp
aas
nop
push
lret
pop
outsb
cmp
clc
and
and
lock
xchg
add
stos
mov
xor
in
addr16
xchg
inc
sub
xchg
jle
lahf
jp
cmp
sbb
ja
cmpsb
and
loop
rcl
inc
lods
icebp
iret
push
out
call
pop
mov
push
push
test
adc
cmpsb
mov
pushf
push
add
ss
out
mov
mov
cli
repnz
push
repnz
lea
cs
fisubrl
xchg
add
jp
in
add
sub
lods
mov
leave
pop
or
fcos
push
sub
dec
pop
je
pop
out
inc
pop
adc
lea
sbb
and
xlat
enter
mov
lea
push
sub
xchg
aam
cmp
cmp
loope
pop
add
sbb
fld
jb
push
in
shlb
into
in
repz
outsb
fxch
sbb
inc
aaa
mov
push
dec
ficompl
orb
loope
or
fisubs
outsl
adc
aaa
adc
mov
inc
jge
stc
dec
xchg
mov
std
test
into
cmp
ror
xor
jo
and
inc
cld
mov
iret
cli
repz
push
or
inc
or
push
insb
adc
and
push
push
pop
jbe
mov
ja
xor
sub
cmp
repz
mov
out
pop
jne
scas
jnp
test
mov
xor
xchg
in
leave
fldcw
popf
inc
and
jnp
js
rclb
inc
test
pushf
inc
xchg
mov
jne
inc
iret
in
test
sbb
mov
mov
fisubrl
sub
jnp
rorb
not
cli
mov
in
leave
ss
mov
fidivrl
into
sub
push
imulb
jge
push
pop
roll
xor
sti
js
cld
mov
mov
outsb
add
mov
test
and
test
xor
add
mov
setl
sub
ljmp
popa
lcall
jns
cmpsl
repnz
fdivrl
cltd
cmp
lods
test
divb
ss
addr16
imul
iret
fnsave
add
mov
rolb
test
mov
pop
or
xor
pop
clc
stc
sbb
cmpb
in
dec
and
scas
movsl
fidivrl
jnp
sub
and
sub
pop
in
mov
and
ja
mov
xchg
int
xor
jp
cmp
cltd
mov
pop
inc
inc
test
push
adc
mov
xchg
xchg
mov
cmp
leave
addr16
xchg
mull
in
jl
sub
fnsave
in
gs
insl
lcall
in
xor
inc
xchg
xorl
clc
out
xchg
lds
or
or
retw
pop
push
and
cmpsb
std
imulb
call
push
or
mov
jo
mov
push
decl
repz
or
cmp
cmp
lods
dec
gs
and
cmp
out
dec
out
xor
push
sbb
ffreep
sti
scas
aam
pusha
mov
cmpsl
int3
lret
mov
push
push
adc
push
ficompl
test
fcomps
test
push
xor
mov
xor
pop
call
and
sbb
arpl
in
dec
arpl
mov
stos
add
cld
jge
mull
pop
jno
xor
and
adc
sti
decb
lret
mulb
xor
pop
inc
aam
icebp
xor
pop
xchg
insl
mov
cmp
jecxz
cmpsl
test
cmp
mov
cmp
je
push
and
pop
xlat
shr
cmpsl
sahf
sbb
push
xor
ljmp
clc
stc
dec
pushf
popf
xchg
scas
les
or
call
cmp
and
xchg
mov
xlat
lods
pop
movsb
stc
xor
jle
push
outsl
mov
dec
and
dec
inc
repnz
mov
jne
shll
push
adc
leave
cs
rcll
and
push
in
jo
sub
ss
sbb
insb
xor
mov
stos
pop
stos
lahf
repz
or
jmp
jle
mov
pop
cmpsb
pop
mov
sarb
mov
sub
pop
inc
xchg
adc
inc
loopne
ficompl
mull
jno
and
imul
push
adc
jb
movzwl
rcr
pop
pop
movsb
cmpsb
cltd
mov
cmp
mov
stos
cmp
jmp
lea
adc
jbe
push
arpl
mov
push
adc
int3
enter
dec
push
push
sub
mov
sbb
mov
pop
mov
std
or
out
push
lods
sbb
pushf
jg
mov
jns
test
adc
repz
rcrb
xchg
in
jmp
jb
mov
push
aas
addr16
stos
adc
add
jnp
stos
mov
sub
int
out
add
and
roll
push
jns
push
inc
jo
cltd
add
out
sbb
jle
dec
aaa
mov
ljmp
loop
pop
out
mov
cs
mov
cmp
mov
insl
inc
xor
ljmp
jmp
stos
xchg
cld
in
hlt
jb
add
aaa
mov
mov
leave
dec
xlat
cmp
rolb
lods
pop
add
mov
add
addr16
sub
mov
add
inc
test
inc
adc
fsubs
iret
dec
int
das
lods
pop
xor
fidivs
push
cltd
mov
mov
adc
pop
add
fbld
call
aas
rol
test
repnz
aas
mov
fdivrl
call
bound
dec
mov
pusha
jo
jge
sub
mov
push
pop
fwait
and
fsubp
push
add
xchg
inc
insl
outsl
mov
shll
or
sbb
lds
loop
adc
mov
mov
dec
dec
pop
xor
lret
xchg
aam
dec
adc
and
mov
mov
or
xor
push
and
stc
movb
sti
jo
sbb
loopne
mov
in
or
hlt
xor
or
enter
jle
cltd
imul
adc
and
adc
addl
mov
cmpsb
mov
mov
dec
xor
mov
std
sub
pop
data16
lds
rorb
fwait
xor
xchg
test
push
and
addl
rcll
push
jae
or
add
movsb
testl
lret
jnp
mov
insb
xor
or
cmp
mov
xor
or
jge
dec
add
inc
data16
pop
jle
insb
inc
sbb
push
cmpsl
push
je
and
mov
dec
or
aas
mov
xor
sub
jp
sub
pop
xor
cmp
ja
pop
cli
inc
adc
cmpsl
negb
push
lods
dec
sbbl
iret
cli
add
fs
in
into
sbb
pop
sbb
jge
inc
xchg
loopne
inc
sbb
cli
cmpsb
stc
rcll
cmp
inc
hlt
mov
movsl
jmp
rcr
ds
in
int3
inc
push
leave
test
xor
mov
ret
add
add
push
imul
ljmp
mov
outsb
cmp
mov
int3
sbb
sub
pushf
push
mov
js
dec
sub
mov
pop
mov
fsubs
lock
mov
fwait
in
and
push
loop
jae
mov
callw
loop
sub
call
aad
lret
lds
pop
popa
cld
or
and
loop
add
mov
inc
rcll
cmp
xchg
shll
addr16
and
push
ss
mov
jae
fistpl
sti
mov
xor
xor
rcrb
aad
cmp
mov
aam
adc
xchg
lods
sbb
xor
lcall
adc
push
xchg
std
xor
call
stc
nop
ljmp
sbbl
sbb
xorl
mov
mov
das
push
in
lret
adc
adc
push
rorl
push
or
dec
loopne
subb
les
rolb
push
mov
mov
addb
jecxz
inc
ret
cltd
inc
push
enter
loopne
fistps
hlt
ret
testl
adc
mov
movsl
push
push
insl
jb
sbb
insl
xchg
cwtl
pushf
test
mov
insl
outsb
loope
mov
xchg
outsb
lcall
inc
jns
inc
dec
pop
mov
in
cs
repz
lea
mov
sbb
cltd
xor
loopne
xorl
pop
pop
push
fwait
jle
hlt
or
push
jns
das
mov
mov
fiadds
mov
out
and
out
adc
xorl
imul
jge
jb
pop
int3
mov
mov
push
mov
xchg
arpl
push
dec
addr16
mov
xchg
or
dec
jle
sbb
jecxz
iret
jns
std
je
pop
cmp
xchg
mov
cmp
xchg
inc
xchg
adc
add
es
dec
movsl
mov
test
sbbl
les
test
xchg
ds
sbb
xlat
mov
jae
xchg
test
push
cmc
je
and
lret
and
ja
jne
inc
mov
divb
lret
dec
xchg
lods
roll
xchg
push
mov
lahf
rcll
out
push
jb
push
test
sarb
xchg
out
inc
repz
xor
add
hlt
out
lcall
sbb
movsl
loop
movsb
add
ja
clc
lods
pop
xchg
mov
addr16
cli
xchg
sbb
xchg
fs
aas
add
push
cmc
aam
lcall
pop
push
and
iret
lock
mov
int
pop
rorb
testb
rorl
and
mov
mov
add
and
insb
lods
sti
repz
push
mov
dec
aaa
cli
pop
push
add
cmp
cwtl
push
dec
jb,pn
scas
mov
mov
enter
addb
push
stos
jo
xchg
hlt
push
imul
dec
jns
fstpt
imul
or
stc
and
xchg
xor
subl
jb
pcmpeqw
aaa
leave
cmc
mov
cmp
jge
scas
fists
rorl
andb
push
add
inc
out
daa
push
add
xchg
sub
ljmp
movsb
pushf
push
pop
rcr
xor
cs
mov
out
call
mov
cmpb
adc
mov
add
xchg
mov
jb
jl
loopne
fwait
int3
adc
xor
aad
adc
add
push
faddl
mov
lret
fiaddl
rorb
out
push
popf
sbb
mov
sub
sbb
inc
pop
add
push
add
pop
cmp
and
aaa
xor
mov
inc
pop
imul
xlat
enter
push
pop
pop
testb
sub
cmp
sub
stc
mov
jnp
adc
xor
in
fsts
insb
pop
dec
shrb
sub
push
mov
cmp
xchg
pop
jbe
xor
ret
pop
fidivl
mov
pop
mov
mov
arpl
negl
filds
cmp
enter
leave
gs
xor
sub
leave
pop
jmp
ja
in
inc
sarl
out
cmp
dec
lahf
nop
inc
je
inc
pop
and
sbb
push
pop
push
fdivs
or
fisubs
xchg
lret
fildll
es
adc
pushf
repz
dec
cmp
xchg
pop
sarb
shr
ficomps
push
nop
loop
inc
pushf
stos
pop
mov
mov
nop
push
jno
sub
imul
xor
add
xor
pop
and
push
daa
cmp
dec
pop
push
push
and
adc
sbb
push
fdivs
stos
cmp
js
sbb
dec
fldlg2
adc
les
jbe
lds
mul
stc
and
rcr
sbb
cmp
push
imul
pop
lods
inc
insb
jne
cmp
inc
hlt
shrb
imul
mov
xchg
mov
ror
out
push
ds
xlat
enter
sub
in
jge
ljmp
mov
lods
pop
xchg
stos
sub
scas
mov
pop
cmp
adc
fmul
leave
lcall
ret
jb
sbb
or
push
mov
jmp
pusha
lahf
or
adc
mov
sub
sbb
push
adc
dec
adc
sub
jmp
mov
jo
push
subl
lahf
sub
lods
lahf
mov
test
or
das
sbb
mov
pop
sub
jge
and
or
adc
or
jae
fsubrl
add
fistps
call
adc
mov
pop
movsl
jbe
add
jecxz
mov
xchg
ljmp
push
fidivrs
add
pushf
inc
scas
out
xor
aas
jp
xorl
xor
insb
jno,pt
sub
mov
fcom
sahf
sub
sub
add
repnz
push
cwtl
xchg
mov
aam
push
jg
or
fcoms
dec
push
mov
mov
jb
mov
add
lods
lods
adc
fldt
div
lock
mov
in
mov
lahf
cli
sub
stos
or
mov
jmp
pop
lods
fsts
mov
fldenv
xchg
call
dec
enter
aam
jmp
push
lods
push
loope
fnsave
dec
or
add
insl
in
scas
nop
ljmp
xchg
out
incl
scas
mov
xor
or
mov
adc
mov
add
add
addl
inc
push
movsl
loopne
sbb
inc
inc
xchg
out
sti
cwtl
insl
mov
and
cmp
arpl
jle
add
mov
cmpsl
push
dec
fstl
mov
bnd
stc
dec
outsl
imul
jp
js
add
in
jns
std
or
add
jg
cmpsl
jne
or
or
inc
mov
push
data16
adc
jns
dec
push
fcmovu
xor
mov
pushf
xor
push
cmp
insb
pop
pop
fwait
dec
pusha
and
pop
add
loopne
lods
jge
push
in
inc
icebp
pop
inc
mov
dec
xor
enter
hlt
subb
inc
push
shll
dec
or
push
ljmp
insb
test
xchg
lcall
pop
jnp
jge
cwtl
jae
sub
and
sar
push
scas
cmp
scas
lcall
pop
jmp
inc
lret
pop
mov
mov
xchg
xor
mov
and
mov
test
fists
rolb
pop
fwait
sbb
and
stos
movsl
clc
sub
mov
test
in
dec
test
mov
push
cmpsl
cmp
jo
sahf
cmp
xchg
jmp
lods
sahf
ret
aam
jmp
adc
lods
insb
fistpl
lcall
rorl
push
mov
sbb
test
add
sub
pop
dec
das
ja
add
cmp
arpl
movl
movsb
in
aad
stos
jle
xor
icebp
orb
cmpsl
fnsave
sub
sahf
out
add
testb
and
int
jg
lods
mov
cmpsb
ret
je
stos
push
adc
lahf
xor
movsb
lcall
mull
stos
imul
push
cli
and
pop
dec
mov
ret
mov
icebp
inc
sbb
mov
test
pop
push
aam
clc
push
mov
mov
rorb
test
loop
mov
jl
inc
out
jbe
movsl
jecxz
mov
addl
clc
lahf
bound
and
repz
movsb
inc
popf
loope
mov
mov
adc
daa
dec
pop
cmp
jo
mov
xor
sub
xchg
ss
push
out
sub
xchg
js
jns
testl
mov
ja
in
cld
loop
call
ret
add
mov
rcll
adc
jp
aam
pop
in
xchg
or
jno
fiadds
cmpsl
push
imul
dec
ret
mov
push
out
xor
and
es
xor
lret
ret
dec
inc
or
push
arpl
sbb
in
lock
mov
and
gs
and
add
in
jnp
subl
jl
in
scas
add
adc
add
fsubr
outsl
push
mov
arpl
rcll
xorl
pop
inc
aaa
or
adc
lret
jnp
inc
add
neg
jecxz
shrb
out
mov
push
inc
mov
clc
fsubs
sub
mov
pop
mov
adc
jle
mov
pop
imull
lret
mov
or
repnz
jnp
cmc
mov
mov
jnp
lea
sti
nop
mov
xchg
or
test
push
insl
jnp
fdivrp
ret
sbb
aas
aas
pop
inc
call
test
pop
mov
sbb
adc
mov
mov
mov
insl
dec
mov
dec
xchg
arpl
loop
out
xlat
les
xlat
daa
pop
mov
mov
lock
mov
loope
adc
jnp
jb
cmp
stos
sub
and
subb
jno
mov
neg
mov
sbb
mov
jg
push
adc
pushf
mov
out
mov
sbbl
mov
lds
scas
jae
mov
test
dec
xor
and
adcl
push
xchg
sti
sar
mov
pop
pop
push
add
inc
fcomi
and
inc
scas
fcoml
mov
or
lea
ja
dec
out
imul
rclb
mov
pop
dec
jnp
mov
mov
jae
std
and
lahf
jns
mov
sub
sub
fnsave
jl
mov
jo
sbb
pop
push
inc
dec
sahf
daa
loop
and
and
out
sub
enter
dec
das
xor
in
mov
add
xchg
pop
addr16
cs
es
test
jo
pushf
aaa
stc
scas
sub
jb
push
fadds
or
jns
imul
aam
jb
dec
cmp
fs
jl
in
pusha
imul
movsl
xchg
imulb
cli
push
out
and
int3
stos
mov
cmpsb
ror
sbb
jmp
repz
jg
pop
push
jo
scas
fucom
cmp
add
push
imulb
mov
push
xchg
add
loope,pt
lods
jb
xor
inc
jo
insb
in
cmpsb
je
fcmovb
add
shlb
lcall
out
push
lods
ret
cmp
out
mov
or
and
fdivrp
pusha
add
mov
fs
adc
mov
int
jmp
stos
aam
xor
jl
or
sti
repnz
sub
lock
gs
movsb
dec
mov
in
push
xor
out
movnti
test
push
push
push
sbb
or
jb
leave
ljmp
jns
jne
cltd
test
into
mov
or
push
mov
xor
xchg
mov
mov
push
or
xchg
mov
gs
jle
or
add
out
mov
movsb
sar
lods
mov
xchg
iret
stos
ds
and
dec
adc
xchg
repnz
pop
andl
mov
and
nop
fcompl
sbb
jge
or
adcb
mov
js
shlb
push
mov
jp
jecxz
jle
cli
push
pop
mov
nop
or
pop
xchg
shll
cwtl
lds
adc
mov
dec
mov
or
push
pop
sti
std
sub
ficompl
cmp
push
sti
sub
mov
cld
stos
xor
addr16
xchg
mov
and
test
lar
roll
jae
sbb
cmp
ret
push
shl
dec
cmc
add
in
push
fwait
aam
sahf
lds
dec
cwtl
xchg
leave
std
jge
jl
sahf
ret
jns
cwtl
xor
les
push
js
xacquire
imul
push
je
push
xor
jo
pop
and
test
inc
mov
out
lods
cmp
xor
aaa
fisttpll
fldl
fists
cli
mov
idiv
dec
mov
test
jo
fcompl
pop
push
std
mov
push
divps
push
out
xchg
lahf
cli
pop
fs
loope
stos
shrl
xchg
xchg
roll
mov
es
mov
addb
mov
fldenv
shrb
adc
ficoml
stos
gs
xchg
inc
arpl
mov
sbb
or
mov
adc
pushf
aaa
inc
cli
xlat
decl
nop
lea
and
jo
sub
sbbl
jnp
dec
inc
movsl
mov
mov
push
cmp
faddl
xor
xchg
sbb
fstl
aam
and
inc
int
jle
in
stos
cmpsl
ficoms
scas
hlt
sbb
ret
mov
es
push
dec
xor
ret
mov
mov
cld
pop
push
sbb
jmp
scas
ja
mov
or
cmp
dec
xlat
jae
call
mov
jge
xchg
loope
loope
setno
xor
push
fwait
xchg
jae
fs
adc
sbb
pop
fs
das
or
and
call
ret
pop
lds
adc
mov
sub
imulb
mov
add
pop
sub
inc
fwait
pusha
mov
push
mov
call
nop
int3
dec
hlt
repnz
int3
mov
xchg
testl
les
mov
int3
cmp
push
mov
mov
lcall
jo
cld
xor
pop
or
add
decl
sbb
es
jp
movsl
cs
imul
in
hlt
sub
lock
in
popa
pop
xchg
leave
xchg
adcl
adc
insb
jb
push
ljmp
mov
or
stc
or
push
jno
nop
outsb
enter
cmp
cs
push
sbb
jns
mov
mov
imul
mov
cmp
adc
xchg
repz
mov
test
lret
out
inc
add
xor
xor
loope
stc
dec
push
add
cmp
add
test
aad
mov
push
add
inc
push
in
ret
and
jne
outsb
testl
lahf
shll
xchg
rcrl
leave
shrl
into
push
mov
and
faddl
mov
enter
inc
xor
sub
mov
daa
or
test
shr
xor
mov
mov
push
lea
or
xor
inc
add
jmp
mov
jo
jmp
ret
fidivrl
repnz
cmp
sti
sbb
jle
xchg
sbb
in
xchg
mov
xchg
cli
add
ss
mov
pop
dec
scas
loopne
popa
es
rcrb
lea
inc
lds
stos
fmull
out
fnstcw
fldcw
sub
inc
dec
add
out
adc
dec
cmp
xor
mov
inc
inc
notl
and
pop
push
jne
jo
test
das
mov
fcoml
outsb
pop
popa
ja
mov
mov
repz
imul
movsw
cld
sub
nop
dec
movsl
pop
xchg
inc
jnp
shrb
mov
je
mov
mov
jge
jecxz
jae
dec
jne
lret
pop
xchg
loope
gs
push
mov
pop
cli
sbbl
insl
scas
test
fdivrs
inc
jl
xor
in
je
ret
ficomps
sub
push
adc
pop
mov
jl
mov
dec
mov
mov
loop
mov
and
dec
in
adcb
jg
pop
in
lock
stos
scas
out
adc
cs
sub
int
jae
jp
dec
jno
in
inc
in
push
rcr
dec
sbb
inc
sbb
pop
xor
clc
or
pop
inc
jb
sbb
int
mov
mov
imul
mov
pop
or
mov
arpl
dec
push
inc
ret
cmpsb
aaa
repz
and
cmp
into
popa
ja
pop
sbb
out
push
mov
cmpsl
insb
and
pop
decb
adc
xchg
test
pop
push
shll
iret
push
shll
fldt
pop
pop
into
loop,pt
push
aas
cmpsl
mov
xchg
inc
mov
and
gs
stos
lock
js
sub
and
mov
stc
mov
aad
cld
adc
ja
pop
push
les
xchg
xor
testl
fstps
flds
idivb
push
dec
xchg
cwtl
loope
jae
rcll
es
ljmp
cmp
fbstp
jle
sbb
bound
jb
sbb
push
pop
fcmovne
shll
xlat
adc
dec
sti
add
in
push
vcvtdq2pd
mov
std
imul
adc
or
cmp
adc
insb
negl
xor
pop
daa
inc
frstors
xor
lods
test
inc
or
fisubs
and
sbb
mov
stos
leave
push
push
xchg
lret
stc
jno
push
popf
pop
push
dec
push
faddp
mov
or
jae
sub
dec
leave
inc
aaa
jp
xor
loop
cwtl
add
or
sti
ret
xchg
adc
dec
push
cmc
test
out
shlb
sub
sub
test
inc
clc
inc
repnz
jmp
data16
movsl
repnz
xor
sbb
test
jne
sbb
cltd
loopne
test
pop
jg
rclb
aaa
inc
mov
pop
mov
push
ja
dec
mov
sub
mov
icebp
out
insl
cmc
cwtl
adc
pop
push
clc
mov
scas
xor
inc
jb
xor
stc
aam
jmp
inc
sub
fmul
mov
prefetch
inc
loop
fldcw
ljmp
mov
pusha
sub
insl
xor
jge
push
test
dec
push
inc
in
std
cmp
dec
adc
and
add
and
mov
mov
pop
lods
sbb
xchg
out
mov
enter
int
jecxz
mov
ret
pop
jle
out
lahf
lret
fmul
lahf
adc
push
push
push
clc
pop
ret
mov
push
mov
mov
inc
je
jmp
sahf
sbb
cmc
push
jp
add
sahf
push
fwait
mov
aam
movsb
mov
xchg
adc
rcrb
dec
cwtl
or
jmp
es
inc
popa
pop
xchg
sahf
inc
fucomp
cltd
js
cs
lcall
pop
jb
aaa
jbe
call
sarb
clc
or
ljmp
jecxz
pop
mov
fwait
ret
mov
mov
cmp
inc
jecxz
ret
adc
adc
faddp
ffreep
xor
inc
cmc
les
test
fnstsw
mov
clc
sti
test
aas
sub
cwtl
xchg
repnz
out
adc
xor
xchg
add
js
pop
jmp
sub
cmp
in
xchg
mov
shlb
cmp
pop
pop
xor
shl
lahf
lret
pop
in
jmp
fsts
xor
ds
jmp
rcr
xchg
adc
push
xlat
mov
adc
mov
sub
cli
dec
jp
push
add
into
dec
mov
sbb
adc
lea
xchg
fildll
or
outsl
mov
mov
lret
cwtl
mov
clc
stos
sbb
and
jg
movsb
insl
add
stos
popf
sbbb
xor
mov
movsw
sub
xlat
mov
mov
pop
insl
rcl
mov
ror
cld
loop
xchg
inc
jg
sbb
or
add
fwait
out
in
sub
leave
loop
jae
in
push
dec
mov
scas
fldcw
test
stos
in
dec
out
sbb
mov
xchg
ss
enter
mov
push
mov
cmp
ja
loopne
sub
lods
cld
pop
in
ret
js
je
add
loop
fcom
cmp
sub
jge
lcall
cmpsb
pop
xor
or
mov
xchg
and
stos
mov
out
mov
scas
js
cmpsl
sub
xchg
int
imul
xchg
orl
xor
std
inc
pusha
xor
xchg
in
adc
fs
daa
or
and
dec
cmp
mov
cli
mov
aad
add
repnz
xlat
push
imul
lds
jae
sbb
imul
or
in
jae
je
decb
bound
cwtl
add
imul
loopne
push
jo
pushf
jg
adc
out
mov
jnp
dec
jecxz
out
loopne
adc
dec
mul
and
cmpsb
hlt
jecxz
rclb
or
mov
aam
mov
pop
inc
cmp
fistl
cmp
sti
push
adc
adc
sbb
outsl
xlat
xorl
xor
xchg
inc
imul
pop
movsb
push
or
sub
cmp
int3
outsb
in
int
ja
in
dec
sub
xchg
adc
mov
loope
lcall
addr16
lods
mov
add
das
jae
fsubp
pop
lods
lock
push
daa
mov
add
popf
movsl
or
xchg
outsl
decb
inc
mov
fsubr
inc
in
fstpl
inc
push
sahf
jl
xor
outsl
ret
pop
aas
enter
test
adc
das
add
pop
push
add
mov
xchg
mov
mov
jbe
mov
insb
mov
mov
ficoms
std
test
test
das
enter
lret
adc
pop
push
jg
bound
js
nop
sub
inc
pop
out
or
stos
rol
xor
sub
mov
sbb
fsubrl
sbb
jno
in
push
push
scas
sbb
cmp
fidivrl
push
adc
mov
pop
mov
mov
cmpsl
mov
mov
push
fisubrl
lea
repz
sub
pushf
xchg
pop
add
cmp
das
push
out
enter
enter
rcl
sub
ljmp
imul
insb
ss
pop
jb
mov
aad
push
xchg
jl
mov
movsb
pop
sbb
and
fildl
and
cwtl
scas
jl
add
scas
add
pushf
fucomp
sub
movsl
xchg
shrb
cmp
rol
shlb
add
enter
imul
sbb
and
and
inc
and
loop
inc
or
cs
xchg
cmp
mov
mov
pop
and
sub
cs
mov
mov
ret
fcmovu
int3
dec
inc
adc
cmp
pop
fstpl
jns
mov
sti
xlat
xsaveopt
fdivrs
jae
mov
lret
pop
jno
imul
push
aas
inc
mov
adc
xchg
lret
cmpl
rorl
ret
in
jge
sub
pop
pop
mov
fs
icebp
cmp
aas
and
fs
adc
pushf
shll
inc
test
ljmp
inc
and
stc
addr16
lods
sbb
mov
repz
mov
testl
fisubrs
orb
xlat
inc
popf
xchg
lods
mov
mov
or
jno
test
popf
mov
aad
outsl
call
cltd
pop
fs
xchg
out
dec
push
das
fstpl
lret
dec
sbb
mov
adc
andb
xor
ret
or
fldenv
movsb
popf
movb
pop
lods
pop
push
inc
sub
or
or
mov
ja
add
mov
mov
cmp
sbb
subb
inc
popf
add
xchg
sti
jae
ja
dec
cwtl
imul
dec
inc
test
lock
mov
xchg
xlat
jnp
sbb
dec
xchg
add
jp
mov
push
stc
lret
lret
sbb
mov
bound
inc
mov
lock
ret
adc
sahf
and
cmp
inc
nop
imul
sbb
add
stos
lcall
xchg
in
ret
cmp
popa
lret
or
std
fadds
push
jmp
sbb
add
ja
inc
lock
adc
addr16
out
lods
adc
arpl
rorl
sti
dec
loopne
icebp
mov
add
ja
lcall
fld
out
sbb
negl
int3
pop
aam
adc
cs
push
popa
xorl
lds
mov
sbb
mov
xorb
js
sub
pop
popf
inc
daa
push
adc
push
out
adc
adc
pop
jp
pop
inc
notl
pop
rolb
outsb
dec
dec
or
inc
inc
out
int3
add
stos
mov
daa
in
xchg
in
fiadds
jne
aas
ret
roll
or
lea
pop
shrl
xchg
push
mov
cmpsl
out
xor
jp
sti
ret
xor
xchg
repnz
cltd
push
dec
xchg
xlat
or
mov
cmpsl
push
jne
xor
dec
pushf
insb
jmp
filds
push
inc
imul
mov
shrl
push
cs
inc
loopne
push
xchg
into
test
dec
or
mov
mov
inc
mov
pop
xchg
leave
stos
add
arpl
xorl
mov
xchg
jle
js
mov
cwtl
mov
jb
cmp
pop
cmpsl
testl
xchg
mov
mov
pop
jno
mov
sbb
sti
xchg
fadds
js
rcll
xlat
jp
cmp
and
mov
fistpl
xlat
loopne
adc
dec
aad
nop
sub
jae
call
enter
jnp
ret
stos
out
fwait
or
in
xor
xor
jge
adc
pushl
dec
frstor
add
je
mov
mov
mov
inc
xor
enter
int
push
cmp
jns
adc
add
cmp
cmp
outsl
outsb
jmp
ror
mov
cltd
xchg
sahf
lea
roll
adc
mov
popa
mov
pop
fistps
push
mov
shl
pop
xlat
insl
fldenv
repnz
gs
shl
insl
cmpsb
lock
es
addb
in
ret
mov
adc
imul
aas
mov
mov
jno
sub
loop
lret
jns
pop
xor
jns
sub
mov
dec
stos
adc
sub
fldl2e
mov
inc
dec
push
inc
gs
call
sub
outsb
push
mov
insl
mov
xchg
jbe
lods
ja
jle
scas
xor
mov
xchg
push
xor
bound
int3
mov
xchg
enter
outsl
int3
xor
xor
xchg
ds
nop
mov
push
movsl
sub
aad
je
fiaddl
dec
push
xchg
pop
push
mov
mov
iret
and
or
add
bound
vcmpsd
dec
lret
mov
in
sbb
addr16
insl
je
mov
aam
dec
enter
sbb
dec
aam
pop
mov
jnp
adc
leave
cltd
pop
push
pop
or
cmp
fimull
cmp
xor
pushf
addr16
rcr
mov
xchg
insb
push
dec
mov
dec
sub
sub
je
les
inc
pop
fimull
jnp
cmpsb
mov
xchg
insb
or
sub
jnp
adc
aam
sbb
push
mov
xchg
pmaxub
pop
or
popa
pop
popf
mov
arpl
mov
cmp
fldcw
dec
add
outsb
not
cld
push
dec
aad
cs
lret
repnz
jno
mov
cmpb
sub
sub
xor
xlat
jmp
push
jecxz
add
stos
xchg
xchg
rolb
xchg
xchg
xchg
insl
dec
mov
pop
xor
add
mov
pop
push
jmp
push
cli
nop
add
ret
nop
imul
std
fcompl
jge
dec
xor
cld
gs
mov
in
arpl
mov
inc
xor
sarb
cltd
inc
mov
fcoml
mov
jns
scas
jl
adc
xchg
inc
cmc
shll
adc
adcb
dec
lock
mov
insb
lcall
pop
mov
call
sub
xchg
sbbb
sub
mov
out
inc
add
out
mov
xor
lret
push
push
pop
pop
mov
or
xor
inc
or
pop
jecxz
dec
cmp
push
adc
push
test
mov
scas
ljmp
je
ds
push
jl
out
dec
pop
test
dec
test
mov
mov
pop
sbb
jg
ja
movsl
bsr
xchg
xlat
cmp
bnd
add
and
lret
jb
pop
xchg
ja
sub
and
addr16
adc
subb
sbb
xor
or
out
mov
addr16
test
adc
loopne
sub
stos
aam
and
push
jo
lret
test
cmpsl
insl
int3
repz
insb
inc
fisubs
xchg
jno
repnz
lahf
cmp
inc
dec
ja
mov
mov
ja
popa
in
xchg
jge
dec
jae
add
jae
fstps
push
adc
mov
and
sysenter
aaa
popf
xchg
enter
jmp
pop
push
mov
pop
imul
jno
or
and
xchg
cmp
xchg
sbb
inc
push
mov
lock
xor
mov
mov
or
sub
test
clc
pop
adc
push
mov
xchg
inc
inc
jnp
lret
sub
aaa
pop
jae
xchg
cld
and
fidivrs
or
into
fcomp
dec
xchg
cld
testl
jbe
push
repnz
stc
push
arpl
aam
sarb
shrl
aas
mov
push
jg
gs
dec
jns
les
inc
in
xchg
xchg
cmp
les
jp
mov
pop
fldcw
les
jno
aaa
xor
adc
fwait
and
sbb
out
popf
jns
jl
or
xor
arpl
test
leave
leave
sbb
pop
lret
jge
fidivrl
push
jne
fabs
mov
cs
or
push
loope
cs
roll
xor
xchg
dec
xchg
mov
jmp
imul
repz
sub
dec
push
or
cmp
aad
test
decl
lahf
mov
mov
rcrb
pop
popf
dec
cmp
or
das
pop
mov
adc
sbbb
lahf
es
push
jmp
pop
loop
pop
inc
std
sub
inc
dec
mov
mov
rorb
jno
lds
scas
mov
sub
daa
sbb
or
push
inc
ret
mov
cltd
pop
push
or
add
ljmp
test
dec
mov
add
movsl
and
inc
push
add
mov
pop
mov
pmaxub
jp
outsl
imul
cwtl
push
jne
sub
aam
add
out
mov
adc
pop
jecxz
add
enter
loop
or
adc
sub
lcall
cmp
sub
sbb
pop
aaa
mov
adc
aas
inc
cmp
fs
aam
imull
cltd
cmp
mov
push
jno
bound
jbe
pop
lcall
add
fcompl
pop
push
pop
mov
arpl
adc
andb
cmpsl
inc
imul
fcomps
cmp
xchg
stc
xor
shlb
pop
ds
mov
pop
and
jl
test
orl
and
orl
xchg
and
subb
jo
xlat
cmp
cmp
in
in
fdivs
sbb
inc
pop
lea
pop
dec
push
mov
or
lahf
int3
dec
jge,pt
insb
movsl
and
cmc
jp
mov
subb
xchg
inc
cmp
mov
inc
int3
pop
sahf
xchg
cwtl
leave
mov
dec
or
mov
push
inc
mov
push
in
pop
jno
pop
mov
out
inc
mov
stos
jnp
mov
pop
lods
mov
lds
inc
mov
call
lea
jae
mov
or
pop
testl
xchg
dec
add
and
cmpsl
inc
mov
inc
sbb
inc
mov
dec
lock
pop
mov
sub
das
xor
in
pop
sbb
movsl
push
lds
mov
shrl
stos
or
fs
iret
mull
out
pop
pop
cld
inc
mov
std
mov
loop
enter
int3
mov
scas
mov
dec
out
inc
and
stc
xchg
popf
fmuls
lods
dec
imul
mov
inc
jno
in
int
aam
mov
pop
or
push
pop
insl
int
xchg
xchg
inc
test
cld
mov
push
sub
mov
ja
adc
push
in
pop
push
mov
sbb
fisubrs
shl
cwtl
mov
mov
mov
js
jle
mov
jb
mov
loopne
stc
mov
and
test
jle
push
mov
push
ljmp
nop
sbb
jne
pop
adc
sbb
mov
jbe
dec
icebp
cli
dec
movsb
mov
cmp
sub
and
pop
sub
cmpsl
add
js
and
insb
xchg
xor
and
dec
push
push
out
jg
popa
jnp
mov
push
ljmp
mov
cltd
int3
jnp
mov
xchg
in
mov
aad
mov
fisubl
fst
dec
add
jp
pushf
jle
movsl
sub
incb
out
pop
adc
pop
xor
int3
xchg
les
lret
push
jg
dec
lds
flds
lods
ds
movsl
push
jg
push
or
cmpsl
cmp
ja
ss
pop
mov
leave
pop
lcall
daa
cmp
push
pop
pushf
mov
xchg
inc
mov
pop
pop
stos
or
enter
hlt
lret
dec
adc
and
clc
jp
gs
mov
push
fiaddl
ss
out
loope
fcom
scas
insl
sbbb
sub
je
call
xor
pushf
popf
dec
xor
clc
mov
jae
mov
loop
add
inc
sahf
in
adc
jo
in
shl
sbb
std
cmpsb
ret
iret
fildll
loop
or
out
ljmp
in
icebp
and
mov
ret
ss
pushf
push
mov
push
or
and
inc
mov
in
dec
mov
daa
pop
adc
push
adc
xlat
xor
mov
sahf
andb
dec
test
xor
aaa
xor
pop
xchg
mov
mov
xor
sub
scas
inc
xchg
lods
cli
mov
dec
cs
rcrb
sub
cmpsb
call
dec
stc
inc
add
pop
jne
xlat
xlat
sahf
cmp
mov
stc
ljmp
ret
push
jbe
inc
cmp
mov
mov
mov
ret
lcall
mov
aas
xor
sub
enter
ret
pop
popa
jg
jbe
pop
push
adc
shl
dec
xchg
mov
pop
cmp
dec
sahf
scas
adc
lods
adc
in
cmc
xor
loopne
inc
sub
sbb
and
gs
add
dec
mov
arpl
fs
pop
pmulhuw
popa
add
and
or
out
rcrb
imul
out
addr16
test
mov
mov
xor
fcmovnu
xchg
adc
mov
push
xor
popa
repnz
jge
cli
push
nop
sub
mov
jl
adc
add
add
outsl
mov
movsb
lret
aas
in
insl
dec
adc
add
movsl
fstl
mov
mov
inc
push
out
mov
gs
inc
andb
icebp
push
mov
push
movsb
addr16
and
cltd
adc
jle
mov
fmul
movsb
stos
adc
std
nop
lods
mov
ret
mov
inc
in
rorl
add
mov
inc
dec
out
xchg
jmp
scas
inc
fwait
adc
fcmovne
cli
mov
sub
inc
dec
fucomi
out
js
lret
loopne
fidivrl
add
pop
loop
cmc
out
or
xor
xor
cltd
sar
mov
mov
shll
ljmp
ja
jnp
xchg
mov
fcomp
ds
pop
sub
repz
xchg
add
sub
sub
pop
imul
and
jno
cld
push
xlat
xchg
add
or
add
jl
arpl
sub
cltd
dec
clc
mov
mov
ljmp
ret
aam
sbb
mov
in
mov
js
cmp
mov
pop
in
and
sti
cwtl
data16
in
mov
push
ljmp
aam
cmp
adc
push
dec
loope
cmp
dec
aaa
inc
test
lcall
mov
test
or
xchg
push
rcll
lods
sbb
rclb
outsb
repnz
lods
jmp
les
sbb
inc
jmp
xchg
push
adc
js
jmp
push
xor
xor
fsubrl
fists
cs
icebp
sbb
pop
push
push
mov
xchg
ss
push
xor
movb
xchg
xchg
mov
cltd
inc
pop
loopne
aas
lahf
arpl
loope
in
shrb
adcl
icebp
mov
sbb
sti
pop
mov
jmp
dec
adc
mov
sub
aam
out
loop
mov
xor
aam
pop
jae
and
out
mov
pop
push
mov
cmp
mov
cltd
add
mov
cmpsl
stos
fists
add
xor
dec
pop
pop
sahf
lret
ljmp
fwait
sbbb
ja
fwait
push
xchg
fdivrl
hlt
or
rol
inc
xchg
lods
loope
mov
or
jns
push
jg
fucomi
in
adc
cltd
mov
rcrb
rcrl
test
push
stos
imul
mov
popa
lods
push
aaa
dec
jge
out
mov
sbb
rep
adc
ret
xlat
pop
jbe
cmp
in
add
add
jmp
loope
insb
mov
and
pop
fs
loop
push
cld
fistps
or
repnz
jo
nop
pop
aas
sbb
sti
fs
xor
or
insb
lret
ljmp
cmp
or
fdivrl
mov
imul
sti
test
fmull
jge
jmp
and
gs
mov
lds
lahf
and
inc
iret
sbb
sub
loope
sub
push
data16
push
test
stos
jbe
cmpsl
xchg
add
fcmovne
scas
and
sub
fisubs
shll
jecxz
fisubrl
dec
movsb
mov
pop
xchg
scas
hlt
movsb
mov
leave
ss
sti
xor
shr
push
mov
sub
and
ficoml
xchg
lret
push
jno
repnz
xchg
mov
int
outsb
mov
cmpsl
add
out
lds
and
test
lock
frstpm(287
mov
movsl
arpl
nop
sub
arpl
cmp
movsb
nop
je
xor
jae
push
cmp
xchg
and
fldenv
int
or
sti
popa
push
sub
push
inc
lock
lcall
jmp
das
js
or
jecxz
or
xchg
lret
and
push
dec
jne
jle
hlt
es
push
xchg
or
icebp
cmovno
cmpsl
and
es
mov
insb
int3
orl
xorl
movsl
cld
testb
pop
out
pop
or
shl
cmp
push
add
mov
int
jae
mov
cmp
dec
clc
mov
dec
in
mov
imul
ljmp
shlb
adc
inc
rcpps
cli
je
test
mov
sub
insl
mov
scas
in
pushf
mov
inc
sbb
in
stos
subb
and
or
aad
jne
repnz
arpl
mov
sub
andl
mov
dec
or
sub
aad
sbb
pusha
je
inc
testb
inc
xor
hlt
xchg
sub
mov
scas
sbb
fstps
jg
jnp
fsubrs
lret
fildl
pop
xchg
vmread
mov
popf
push
fimull
pushf
test
cld
jecxz
xor
mov
stos
sbb
and
outsb
adc
push
push
inc
aad
mov
push
outsl
insb
in
xchg
lahf
mov
sbb
in
inc
fsubrl
jg
jae
sbb
loope
pop
andb
jge
loop
mov
jb
test
hlt
dec
lret
nop
pop
fdivrl
pop
fsubl
popf
enter
cmc
test
das
jb
lret
std
jmp
lret
ss
and
inc
add
cli
rclb
std
adc
mov
cmp
mov
bswap
pop
push
lret
and
orb
mov
inc
aad
mov
mov
dec
and
cmpsl
sub
outsb
sarb
inc
sbb
stos
push
sbb
das
loopne
lods
icebp
cmp
hlt
mov
jp
faddp
push
ret
fcomi
je
add
jo
mov
xor
sub
dec
jns
jl
int
adc
orl
inc
xor
cmp
jns
dec
mov
lock
cmp
cmpsl
adc
arpl
addb
out
das
ret
icebp
movsl
loop
or
jae
dec
inc
adc
sahf
psllw
push
mov
sti
test
std
dec
mov
aad
mov
or
sbb
mov
imul
out
xchg
hlt
and
mov
xchg
pop
sbb
imul
sbb
shll
test
adcl
testl
imul
xor
aas
mov
mov
adc
adc
xorb
iret
xchg
push
jl
push
adc
mov
dec
lea
cmpsl
repz
cmp
dec
bound
pop
sti
push
pushf
iret
inc
mov
xlat
sbbb
cld
mulb
cmp
cltd
pop
inc
scas
lock
cld
push
aam
adcb
int3
mov
and
inc
imul
xchg
cs
mov
xchg
push
mov
xor
sti
or
dec
mov
in
mov
add
ds
sbb
adc
scas
repz
sub
mov
bnd
adc
jns
imul
dec
insb
push
jl
hlt
or
int3
inc
ljmp
aaa
pushf
fimuls
and
std
aad
ret
jns
daa
xor
pop
and
dec
in
mov
popa
cwtl
imul
pushf
out
pop
ja
and
cmpl
icebp
std
fs
mov
rcrb
sbb
adc
es
fs
fldenv
xor
fildll
pushf
ficoms
xor
sub
cmpsl
mov
aad
rcr
mov
in
sub
rcll
mov
fstp
jnp
fucomip
mov
dec
movsb
aam
icebp
out
push
inc
and
mov
jp
repz
push
push
inc
inc
mov
dec
mov
dec
imul
mov
mov
jecxz
arpl
insb
cmp
sbb
scas
loopne
dec
cmpsl
in
jg
adc
xchg
lds
cmp
data16
cld
in
jmp
cld
dec
mov
insb
addb
aas
mov
pop
mov
push
push
xor
dec
int
or
mov
loopne
jmp
lea
mov
stc
mov
lods
pop
cmp
sub
aas
cwtl
adc
adc
jp
dec
lods
lahf
mov
xchg
dec
inc
mov
push
xor
sbb
push
test
int3
cmp
dec
jb
adc
leave
xor
mov
lahf
or
inc
shlb
idiv
and
sbb
shll
in
cmp
sbb
jmp
ss
add
cmp
out
inc
xchg
mov
inc
push
outsl
add
cmp
or
xchg
imul
sub
jle
out
sub
in
shrb
pop
add
dec
and
xor
lret
pop
ffree
jl
pop
xor
push
movb
arpl
notb
push
lahf
dec
out
or
inc
inc
adc
push
scas
mov
stos
mov
imul
sub
stc
xor
add
in
pop
mov
aam
int3
jo
aad
ja
les
sbb
pop
adc
mov
sub
cmpsl
cmp
cmp
xor
push
fistps
mov
dec
pushf
bound
stos
lcall
sbb
xlat
push
and
imul
rcll
and
sbbl
lret
popa
or
imul
fchs
mov
xlat
inc
nop
je
push
mov
pause
insb
cmp
test
shrb
mov
iret
shl
xchg
pop
mov
mov
popf
sbb
jmp
shll
test
fstpt
cmp
or
pop
imull
adc
lods
sar
scas
cli
imul
iret
hlt
lods
adc
xor
mov
rcrb
mov
push
fildll
repnz
jae
dec
gs
outsb
bound
inc
jecxz
jne
xlat
mov
dec
fwait
dec
or
pop
xchg
push
loopne
push
pop
fbld
jmp
das
test
sub
adc
jg
ss
mov
mov
loopne
xor
jp
or
mov
gs
xor
ja
rcrb
mov
lret
imul
pop
jle
mov
popf
inc
hlt
xchg
add
cwtl
lcall
dec
sub
mov
add
add
cli
cwtl
sub
gs
xor
mov
sub
rcr
cmp
mov
and
jmp
scas
and
cmpl
adc
scas
xor
cwtl
dec
stc
xchg
xor
mov
push
pop
sub
jnp
and
xchg
lods
rcll
lods
or
dec
jne
sbb
sbb
dec
inc
add
lods
dec
in
inc
movsl
aad
cli
add
xor
leave
pop
stos
je
cmp
pop
lods
test
movsb
imul
hlt
and
xor
je
inc
out
inc
mov
mov
cwtl
inc
pop
or
xor
jmp
mov
lods
dec
xor
push
fidivrl
cmp
insb
mov
or
stc
cld
jg
cs
enter
movsl
inc
mov
addl
mov
cmp
test
push
rcr
mov
lea
frstor
mov
int
xor
xor
aaa
daa
addr16
fldenv
adc
add
xchg
add
xchg
data16
mov
mov
jp
nop
das
std
sub
adc
leave
nop
cmp
cltd
mov
xchg
mov
int
adc
mov
mov
mov
dec
fs
loopne
adc
push
pop
sub
inc
sbb
push
or
fimuls
ficoms
cmpl
cmpsb
mov
rcrl
or
sub
es
imul
or
sbb
jne
push
pop
push
xor
cmp
les
jbe
aam
and
daa
mov
notb
shll
icebp
inc
push
sbb
popa
insl
xor
cli
sbb
sahf
push
inc
in
jne
mov
int
mov
cmp
xor
jle
data16
scas
in
adc
rcr
and
and
loope
sub
and
adc
pop
push
or
ret
and
addr16
lret
lods
hlt
rorl
push
xor
xor
sub
imul
iret
sbb
mov
sub
in
cld
das
cmpsb
mov
fwait
addb
add
sub
mov
jl
sarb
pop
fisttps
mov
mov
lods
cmc
or
rcrb
das
pop
jle
aam
mov
mov
mov
jne
jnp
cmp
adc
lods
ss
pop
cmpb
or
js
popa
mov
addr16
cmp
lods
std
popf
sub
cmp
sbb
inc
aam
cli
out
xchg
add
lret
in
or
or
xor
pop
xchg
mov
lods
sub
jmp
jmp
arpl
mov
adc
mov
orl
imul
xchg
mov
cmp
rorl
addl
cs
pushl
sbb
cmc
sub
xorl
scas
jl
dec
inc
loop
scas
enter
sub
notb
mov
push
dec
add
xor
insb
insb
inc
inc
jo
data16
mov
mov
pusha
and
inc
jg
lods
and
xchg
pop
mov
mov
pop
inc
xchg
addr16
jle
popf
sub
shll
rclb
dec
lahf
lods
mov
pop
push
pop
lods
inc
leave
scas
cwtl
dec
lahf
and
test
sbb
into
enter
scas
cld
in
jns
lcall
enter
in
cs
icebp
repnz
mov
std
inc
lock
int3
cmp
pop
cwtl
or
testb
add
jbe
xor
test
push
iret
mov
push
push
shlb
jno
xchg
sub
sti
sti
shrl
call
and
repnz
inc
clc
imul
dec
inc
roll
leave
add
pop
cwtl
mov
cmpsl
cmp
sbb
mov
pop
das
lock
fimull
add
and
mov
fprem1
imul
out
push
adc
xor
insl
and
aaa
lods
push
inc
lret
pop
sarl
or
cmc
mov
dec
shrl
shr
add
loop
push
xor
mov
cli
mov
call
adc
xor
addr16
dec
je
mov
fcompl
or
stos
pop
dec
and
test
loop
test
sub
lock
push
inc
jmp
xchg
jp
aam
xor
pop
sbb
out
loopne
mov
pushf
pop
mov
sbb
loop
xor
push
inc
push
push
mov
jbe
cld
xchg
mov
mov
inc
pusha
lock
mov
sbb
cmc
lcall
ret
divl
inc
dec
call
jns
int
jg
and
in
jecxz
jnp
xor
lds
test
jmp
notl
sti
mov
repz
adc
loopne
sbb
sbb
add
inc
mov
mov
dec
mov
adcl
adc
popa
push
divl
faddl
dec
xchg
add
inc
mov
cld
push
jp
mov
jecxz
sbb
fistl
es
daa
dec
sub
pop
call
sahf
int3
cmc
call
cmp
in
es
or
ja
rclb
imulb
aad
pusha
jecxz
ljmp
stos
ljmp
shlb
fisttpl
and
push
jne
pop
shlb
add
add
add
icebp
mov
iret
leave
mov
enter
pushf
cltd
out
or
psubsw
repz
div
or
pop
cmpl
repnz
stc
jp
mov
es
mov
outsb
pop
loop
cmp
notl
jl
or
mov
insl
inc
dec
sti
sub
fildl
hlt
sti
imul
out
inc
scas
arpl
jg
movsb
ret
jbe
mov
and
mov
ja
jmp
and
push
xchg
pminub
leave
cwtl
or
mov
out
add
lds
lock
add
dec
scas
leave
push
mov
jle
inc
imul
xchg
add
xchg
add
add
cmp
into
ret
fnsave
inc
mov
ja
jb
aas
out
addl
adc
fidivl
inc
aam
pop
popa
movsl
inc
xorps
inc
and
lds
pop
cltd
mov
orb
and
mov
gs
icebp
rolb
ja
adc
test
and
adc
mov
xchg
cmp
in
das
popa
and
xchg
mov
xor
cli
ja
push
xor
insl
out
fsubrl
lods
dec
cmp
imul
jns
bound
inc
sbb
push
push
mov
subl
jmp
mov
jmp
inc
mov
add
addl
call
ja
cmp
sahf
mov
push
in
aam
mov
cmpsl
mov
cwtl
pop
sub
movsb
mov
cmp
jmp
insl
ret
add
xor
mov
icebp
mov
aad
xorb
sub
int
sub
ljmp
inc
stos
xchg
imul
adc
out
insl
add
jo
cld
adc
cmp
pop
xor
add
xchg
or
nop
dec
mov
sbb
pop
ficoms
xor
or
or
jge
scas
sub
fisubl
mov
pushl
and
inc
repz
mov
mov
aas
nop
dec
mov
repz
adc
sub
cmpsl
movsl
and
jg
adc
sub
xor
pushf
mov
stc
cmp
mov
arpl
mov
cmp
data16
fdivp
push
ret
lock
jo
push
cmpsl
les
sub
in
cmpl
ljmp
ret
sub
mov
test
jns
sbb
cmc
push
mov
testb
pushf
repnz
insb
push
dec
lret
xchg
push
mov
data16
fcomip
xor
into
out
dec
mov
int3
icebp
fcoml
repnz
xchg
xor
out
js
in
pop
aaa
xchg
pop
insl
andl
mov
push
sbb
imul
pop
stc
mov
lea
push
mov
push
jo
inc
test
add
out
out
sub
bswap
jge
mov
push
addr16
mov
and
cmp
daa
jp
or
mov
lods
pop
fst
test
inc
or
inc
push
pop
pop
aas
lret
aad
jle
lret
add
mov
outsb
jle
aad
mov
push
cltd
add
mov
mov
dec
repnz
jp
push
cmp
sbb
add
or
or
movsl
mov
movsb
mov
and
imul
jecxz
pop
jecxz
push
outsb
cmp
add
jb
insl
into
cs
in
fsub
loopne
sti
sbb
jbe
out
pop
mov
into
cs
jae
lods
loopne
out
lret
clc
push
and
aad
pushf
sti
sbb
dec
xor
nop
addl
or
loope
push
scas
popa
in
loope
sub
sbb
mov
lea
cmp
or
sub
sub
add
dec
sub
mov
testl
inc
andb
std
push
nop
sbb
fsubl
mov
push
push
pop
adc
cltd
or
cmp
xchg
mov
int
sbb
mov
adc
cmc
xor
mov
xlat
push
mov
lret
cmpsl
sub
xchg
jecxz
push
adc
jp
std
jne
test
fwait
sbb
mov
dec
dec
mov
call
je
sub
lcall
and
inc
ret
mov
sub
ret
cmp
lcallw
aaa
fisubrs
cs
or
sti
xor
mov
push
hlt
adc
ds
stos
mov
dec
fisttps
sub
cmp
xchg
or
sbb
aaa
clc
in
insb
test
cmp
mov
out
lock
popa
rcl
adc
sbb
shlb
int3
fwait
jmp
xchg
in
stos
mov
int
xchg
movsb
imul
jbe
push
xor
push
scas
std
xchg
mov
fisubs
pop
arpl
dec
ja
inc
sub
sbb
sti
jbe
clc
xchg
shll
cmp
jmp
add
lcall
dec
sti
mov
in
push
xor
add
out
jnp
in
pop
jae
xor
cwtl
loope
mov
imul
test
xchg
in
push
cld
sub
fidivrl
jle
inc
mov
subb
add
cli
lret
pushf
and
in
mov
out
cmp
lods
pop
add
mov
jmp
test
push
mov
jnp
sbb
imul
mov
jmp
pop
nop
shl
xor
dec
ss
mov
cmp
scas
push
cs
add
jne
xlat
sub
out
mov
adc
lret
sarb
mov
xor
outsb
jno
mov
cmpb
stos
pop
inc
mov
repz
xor
lds
jmp
repz
in
or
das
xchg
test
dec
leave
push
shr
or
popf
or
mov
jmp
or
fbstp
outsb
enter
xor
scas
jne
mov
call
ss
pop
adc
lods
add
pop
dec
and
jne
mov
push
xchg
xor
adc
adc
out
sub
cmpsb
popf
cmp
and
dec
roll
cmpsl
repnz
lcall
and
or
jno
jnp
out
sbb
shr
icebp
je
lock
cld
cmp
scas
jns
sbb
sub
jne
xchg
push
rorl
std
rcll
sbbb
shlb
dec
xor
je
sbb
adc
ret
and
das
cmp
push
je
imul
jl
pop
cmp
popa
jnp
test
test
inc
jl
rorl
lahf
sub
movsl
lods
xor
add
insb
sbb
lea
or
adc
les
sar
repz
sbb
add
js
mov
mov
notb
fs
xchg
repnz
scas
out
shll
and
hlt
pop
dec
bound
add
adc
or
les
das
inc
rorl
inc
mov
int3
push
inc
adcb
jge
stc
out
pop
in
inc
std
jns
stos
ficomps
cmp
sbb
dec
xchg
cmp
inc
push
cmp
cld
lcall
sahf
push
pop
addr16
push
loopne
jne
pop
pop
in
jg
adc
clc
pop
loope
mov
and
jl
sbb
xchg
lds
pop
and
xor
fnsave
bound
cmc
andb
test
xchg
cld
ss
inc
push
cmpsl
sub
stc
jb
lods
aaa
fmull
pop
add
lret
sti
xor
push
fidivs
sub
mov
in
cli
data16
adc
fs
cwtl
cmp
or
dec
pop
stos
jecxz
dec
xlat
cwtl
push
mov
mov
in
mov
push
pop
repnz
es
mov
je
jb
xchg
fmul
mov
repnz
add
adc
jp
push
xor
std
scas
stc
cmp
push
push
jno
lcall
fisttpl
jne
or
mov
sub
outsl
mov
add
lcall
mov
pop
shlb
out
dec
sub
loop
mov
lret
sub
xor
or
inc
out
xor
outsl
sbb
inc
pop
pusha
or
sbb
fucomip
popa
in
clc
mov
jp
cli
mov
push
jns
je
mov
aaa
fs
xor
push
loop
icebp
dec
adc
dec
inc
mov
je
adc
imul
jle
test
test
cmpsb
push
lret
adc
push
aam
lret
mov
sub
scas
and
sub
mov
in
push
jl
mov
mov
stos
xor
movsl
xchg
stos
sbb
in
out
pop
ret
pop
js
or
push
insl
ljmp
jo
mov
jne
push
and
pop
xchg
rep
jnp
scas
jmp
sahf
test
cmc
insl
pop
sbb
sar
lds
add
imul
and
or
pop
adc
mulb
fcmovne
inc
addb
xchg
mov
jbe
or
pop
lret
rcrb
outsb
fldl
movsb
test
test
icebp
jne
in
loop
xchg
lock
adc
out
gs
mov
xchg
lcall
arpl
ss
jb
mov
lea
sbb
cmp
xchg
lahf
adc
out
add
add
sub
and
ds
adcb
aaa
popf
jl
int
cltd
push
mov
mov
mov
test
hlt
xchg
mov
mov
test
lret
fsubrs
pop
or
sarl
pushf
xchg
xchg
mov
xchg
push
xchg
lcall
les
dec
in
lcall
mov
data16
or
mov
call
cltd
cmp
sbb
cwtl
cmpsl
adc
sub
jl
jno
xchg
ret
add
shl
and
fisubl
es
mov
lret
sbb
sbb
push
jl
leave
fstl
iret
loop
mov
scas
or
pop
jns
fidivl
mov
pushf
in
cmp
ret
push
shl
setg
xor
scas
hlt
mov
xor
movsl
xor
pushf
cli
int
fidivl
fdivrl
lock
mov
mov
out
scas
push
into
inc
fmull
roll
lods
fidivs
mov
push
ret
jno
cmp
frstor
jno
sbbl
lock
dec
pop
jo
movsl
and
mov
popf
mov
sti
outsb
mov
jbe
cmpb
scas
cwtl
ret
inc
aas
add
out
popa
frstor
mov
mov
push
xchg
stc
mov
les
push
sbb
adc
addr16
icebp
test
mov
mov
movsb
fwait
mov
lahf
popa
sbb
loope
mov
orb
popa
movsb
imull
push
inc
bound
ja
jns
pop
ljmp
push
das
jnp
xor
test
pop
mov
mov
bound
loope
xchg
cmpsb
insl
popf
mov
jo
lods
xor
pop
imul
cld
dec
fs
rep
orb
dec
pop
mov
roll
into
dec
add
jne
xchg
xorb
xor
loopne
xor
sbb
fistl
out
xorl
mull
cmp
shll
popf
adc
inc
push
mov
sub
test
lret
xor
mov
xchg
stc
icebp
fsubrl
aas
in
cmp
jp
adc
mov
lods
push
sbb
or
push
outsl
add
aad
repnz
push
push
push
sarl
mov
mov
ficoms
sbb
ficoms
inc
daa
sub
imull
xchg
sbb
pop
mov
rcl
cmpsb
add
jg
adc
xchg
cwtl
andnps
mov
xor
mov
add
lfs
int3
sar
nop
shr
jp
and
std
jge
movsb
inc
rcrb
ja
pop
pushf
adcl
js
repnz
xchg
push
cmc
push
dec
in
test
cmp
lods
dec
nop
adc
ja
sbb
push
popf
mov
test
inc
adcb
inc
scas
lret
movsl
insb
xor
lret
enter
test
xor
leave
les
test
or
lret
push
xchg
subb
add
daa
sti
jbe
stos
lea
aas
sbb
pop
sbbb
movsl
dec
and
stos
cs
pushf
push
push
sub
imul
je
mov
loope
das
pushf
pop
mov
pop
test
sti
sub
idivb
popf
dec
push
dec
adc
inc
addl
and
aas
xor
inc
pop
lock
dec
dec
out
pop
cmp
shl
push
lret
fdivrs
loop
lock
mov
inc
nop
xor
push
notb
mov
push
cwtl
sahf
ljmp
mov
push
shr
mov
cltd
repz
and
inc
rclb
ljmp
rcll
shl
and
adc
jnp
or
insl
xor
push
out
test
xchg
call
jl
shrl
push
push
adc
fsubl
aas
xchg
adc
imul
lods
ret
xor
mov
test
jne
and
movsb
icebp
adc
pop
das
and
add
pop
push
imul
pop
mov
in
cmp
in
cmp
sub
jp
and
adc
mov
je
mov
adc
mov
leave
mov
scas
pop
stos
int
mov
dec
daa
enter
gs
inc
dec
decb
or
int
push
xchg
xchg
jno
cwtl
ffree
xchg
scas
or
loop
pop
int3
hlt
add
int
ljmp
mov
rorl
push
bound
rolb
jns
or
cmp
add
cmp
xor
out
sub
idivb
jmp
xchg
loope
stos
insb
push
lahf
sar
loopne
outsb
cs
add
hlt
push
sbbl
stos
ja
adc
xor
dec
sub
lahf
mov
mov
pushf
mov
and
dec
cwtl
ficompl
pop
repnz
lahf
je
mov
out
movsb
push
or
scas
jp
or
adc
xor
jg
push
hlt
out
testl
pop
cld
mov
sbb
fstps
mov
fwait
sbb
fcmovnbe
jns
jge
inc
movsl
shll
inc
ret
addr16
bound
lcall
adc
adc
push
jmp
push
mov
fwait
or
adc
cmp
and
aaa
test
mov
test
jmp
jno
cmpsb
das
je
jbe
lcall
jne
pop
dec
pop
inc
adc
push
loopne
pop
adc
xchg
dec
xchg
int3
inc
aas
mov
mov
cmp
mov
jnp
adc
pop
mov
sbb
sbb
push
xor
je
in
fwait
dec
shll
out
xchg
add
lock
jbe
mov
pop
stos
cmp
icebp
fadds
dec
cmp
aam
dec
add
and
mov
cmpsl
or
rol
mov
inc
sub
popa
arpl
xchg
in
push
sbb
insl
mov
mov
cmp
mov
sbbb
add
or
mov
lods
xchg
sbb
pop
ss
ds
sbb
and
xlat
stc
pop
and
jg
sbbb
int3
loop
or
loopne
mov
mov
jnp
insb
insl
or
test
je
cmp
xor
sahf
adc
addr16
inc
push
test
jb
nop
movsb
sahf
insb
adc
adc
gs
push
idivb
sbb
outsb
lret
xchg
daa
scas
sahf
and
rclb
fcmovne
test
fnstenv
cmpsl
jb
xlat
cmp
clc
test
jne
orb
mov
mov
std
and
mov
ret
adc
xchg
call
int
movb
push
enter
test
std
jp
stc
push
mov
mov
cmp
sbb
adc
mov
fadd
gs
or
lds
sub
jl
loop
mov
add
out
pop
setbe
add
mov
movsb
aas
jae
mov
pop
jns
int
pop
iret
or
xlat
mov
jnp
lcall
add
movsb
in
or
mov
test
jne
adc
jecxz
or
mov
nop
leave
push
pop
jo
insl
dec
push
mov
into
mov
shll
xor
int3
sbb
cld
dec
fdivrl
inc
cwtl
movsl
jno
pop
ljmp
pop
das
mov
nop
push
cmp
sbb
inc
sar
insb
pop
lock
add
mov
inc
mov
aaa
imul
adc
jbe
repnz
xor
rorl
jbe
cmp
gs
push
repnz
leave
ljmp
aas
jge
movsl
or
imul
sahf
pop
jl
sbb
or
test
jle
outsb
add
lods
mov
adc
sbbb
sub
adc
xchg
addr16
push
add
jle
xor
mov
mov
inc
adc
movsl
cld
ret
cmp
pop
scas
shrl
nop
cwtl
loopne
mull
and
jae
xor
sbb
add
inc
call
sar
rorb
ja
pop
inc
or
test
lods
inc
mov
mov
ljmp
outsl
push
aaa
dec
mov
jmp
fdiv
inc
xchg
mov
pop
leave
popl
add
inc
call
adc
aas
les
in
push
cmc
pusha
or
xchg
jns
cmpsl
testb
pop
out
and
imul
xor
adcl
push
xchg
or
cltd
jg
faddl
push
scas
mov
movsl
imul
mov
shlb
jmp
mov
mov
sub
mov
dec
fiaddl
stos
pusha
adc
cmp
pop
nop
push
adcb
sti
mov
mov
pop
ja
inc
pop
in
sbb
stc
cld
sub
enter
fwait
xchg
cmp
xchg
pop
xor
push
pop
repnz
sub
mov
push
inc
pop
add
pop
cwtl
or
rclb
cmpsl
ror
popa
ret
movl
gs
testb
stos
cmp
int
xchg
vpsrld
and
push
pop
faddl
ret
pavgw
scas
mov
jae
mov
sti
jns
out
arpl
ds
cmp
mov
mov
xchg
xchg
cwtl
mul
mov
shrl
movsl
call
jge
add
pop
dec
out
sub
in
lods
fldenv
dec
jecxz
gs
push
mov
test
adc
sub
in
inc
jne
sbb
ja
push
hlt
push
push
mov
add
cmp
adc
dec
das
jp
push
stos
mov
test
fwait
jle
sbb
pop
orb
loope
sub
lret
lock
sbb
pushf
test
leave
mov
cltd
sub
ficoml
jbe
out
jae
cmp
xchg
fldl
pusha
iret
cmp
pop
outsb
push
mov
pop
dec
jns
outsb
fbstp
lret
add
xor
jl
xchg
inc
lret
sub
stos
test
cmp
test
mov
aam
dec
dec
push
lahf
add
mov
aaa
loop
dec
shll
and
push
adc
dec
lock
lahf
push
and
out
sbb
mov
push
idivb
xor
mov
push
test
bswap
push
ds
cmc
nop
push
inc
adc
dec
lds
mov
or
cmp
ret
adc
aaa
mov
adc
sub
outsl
arpl
sub
and
repz
pop
jl
ret
shrb
mov
mov
jmp
sub
push
mov
push
fstps
jno
xchg
test
and
xor
pop
outsb
fisubs
adc
xchg
imul
das
cmp
fwait
ljmp
insb
incl
push
add
jl
movsb
xor
mov
icebp
adc
mov
repz
mov
add
movl
push
cwtl
add
out
push
rcll
xlat
js
push
cmp
push
call
xor
mov
jg
inc
xchg
xchg
jle
and
pop
jmp
mov
pop
outsl
or
and
mov
jmp
or
xlat
mov
mov
xchg
mov
xor
test
xchg
jne
mov
int
jmp
add
mov
sbb
rcrb
loop
xchg
cmpsl
and
mov
imul
sbb
sbb
push
cmp
sahf
sbb
add
jns
mov
add
pusha
js
dec
mov
pop
and
hlt
mov
adc
push
int
lods
xchg
and
fildll
jbe
inc
loope
dec
lcall
dec
xchg
pop
push
jg
lea
shr
fisubrs
ljmp
mov
push
scas
jge
in
nop
popf
call
mov
loope
mov
decb
and
push
jp
repz
pop
cmp
test
mov
divl
cmp
dec
mov
stos
fndisi(8087
icebp
and
cltd
sub
mov
xchg
lea
add
mov
mov
jl
push
adc
je
xchg
cmc
jecxz
push
shll
into
movsb
ror
ss
ret
hlt
jnp
addr16
imul
gs
test
xor
pop
mov
xor
fstpl
ficoml
sbb
pop
xchg
add
push
cs
ja
mov
mov
fwait
add
lock
push
sarl
test
sbb
stos
out
ret
testb
aad
sbb
loope
out
in
cmc
pop
mov
xchg
dec
sub
pop
out
ret
pop
adc
mov
dec
adc
in
fldl
sub
outsl
ret
mov
or
jae
pusha
sub
xchg
mov
testb
xchg
fcomi
das
sub
cmpb
cmp
test
jmp
jae
iret
add
fistpl
in
add
xorl
and
repz
scas
add
mov
std
xor
es
test
cbtw
cmp
rorb
and
xorb
adc
mov
repnz
push
mov
pushf
lret
imul
stos
popa
idivb
push
andb
outsl
ja
sbb
test
cmc
and
outsb
popa
rcrb
sbb
dec
inc
sbb
jl
stos
sbb
pxor
andl
jg
into
mov
inc
cmpsl
xchg
ja
cmpsb
jne
inc
jne
cmp
lea
rorl
daa
test
dec
inc
cmp
dec
xchg
xchg
pop
icebp
mov
imul
lds
mov
and
insb
js
and
out
jo
jle
dec
mov
jl
je
addb
flds
dec
push
call
fcoml
jmp
xchg
mov
dec
mov
mov
push
ret
movnti
into
mov
dec
inc
jl
je
mov
fdiv
inc
mov
lea
shrl
addr16
movsl
aaa
movsl
sub
sbb
int3
sub
data16
adc
xchg
xchg
jg
mov
xchg
jmp
cltd
stos
jge
popf
cmp
mov
aam
pop
out
mov
es
cs
adc
pushf
imul
lods
cmp
sbb
adc
out
pop
loopne
mov
adc
out
lret
and
and
ljmp
dec
ficomps
fcoms
outsl
and
mov
mov
insl
in
aas
pop
nop
gs
sub
dec
daa
mov
cli
es
sbb
pop
inc
daa
dec
test
mov
and
pop
shrb
push
mov
lea
into
out
lea
mov
adc
movsb
lock
xchg
lea
inc
xchg
mov
jle
rorb
cmp
jno
xchg
add
ljmp
xor
push
push
cld
push
or
and
push
fwait
mov
xchg
fstl
adc
dec
push
roll
xchg
idivl
or
mov
test
pop
sbb
callw
imul
fs
popf
xor
int
mov
out
pop
sbb
fidivrs
in
scas
nop
in
fmull
jnp
fidivrs
cwtl
sbb
fdivrl
repnz
jne
mov
test
jne
sbb
pop
enter
xchg
mov
mov
sbb
sbb
lock
clc
ficompl
das
push
test
cld
je
repnz
out
jecxz
mov
in
xlat
repz
pop
popf
mov
jo
adc
cmp
adc
inc
xor
pop
sbb
xlat
in
xor
ret
cwtl
clc
jp
mov
pand
jno
fldln2
dec
xchg
in
int3
jg
fcomp
icebp
sbb
ret
idivb
enter
jbe
iret
mov
lcall
xchg
xor
sub
out
push
xorb
add
xor
imul
ljmp
push
in
dec
xchg
inc
rol
mov
mov
aad
in
dec
push
aas
xchg
dec
jae
mov
int
dec
xchg
xchg
dec
pop
cmp
ss
sub
scas
pushf
sbb
pusha
add
and
data16
mov
fcomip
or
dec
add
sub
imul
adc
push
ss
xor
ret
mov
jb
fldl
neg
add
inc
lahf
cmp
mov
in
inc
ds
push
adc
popf
daa
mov
in
aam
ret
subb
fnstsw
sarl
vminpd
bound
lcall
mov
cmp
push
popa
push
jl
fisubl
inc
icebp
jbe,pn
sbb
imul
lds
jns
mov
add
push
aad
bound
pop
cmp
mov
sbb
sarb
lmsw
mov
mov
cli
xchg
inc
sub
cmpsl
aad
cwtl
mov
xchg
imul
xchg
jp
pop
mov
xor
lcall
jmp
xchg
xchg
push
int
loope
scas
jge
leave
repnz
stos
dec
jne
pop
xchg
out
outsb
cmpsl
pop
movsb
ficompl
fnstenv
je
mov
bound
cld
xor
stos
cmp
pop
and
cmc
enter
xlat
or
xor
dec
cmpsb
gs
cmc
jns,pt
inc
mov
xor
inc
push
push
stos
push
push
clc
push
daa
das
sub
movsl
mov
cmp
inc
out
aam
sbbl
aam
adc
in
dec
enter
xor
push
dec
mov
jmp
lds
cmc
pop
mov
fiaddl
pop
mov
fbld
cmp
ror
stos
push
push
ljmp
xorb
add
sbb
test
and
imul
adc
das
fldenv
leave
js
add
cmp
pop
lds
roll
test
dec
mov
jp
sub
mov
outsb
adc
jmp
rclb
clc
movw
test
xchg
movsb
mov
jae
inc
inc
out
adc
lds
rolb
adc
mov
aam
pop
xor
ja
test
popf
pusha
neg
mov
testl
loopne
add
pusha
cmpsl
or
lock
int
cmp
in
pusha
inc
adc
pop
jo
scas
and
scas
stos
das
mov
jecxz
loope
sub
inc
add
push
pop
pop
fmuls
je
ss
cmpsb
jae
aas
sarb
in
dec
push
pusha
or
outsb
fcomps
pusha
mov
insb
sbb
mov
aam
xchg
and
mov
int3
add
xor
or
or
aas
data16
cld
aaa
dec
mov
stc
pop
xchg
xor
ret
out
jno
sbb
pop
inc
mov
xchg
stc
mov
pop
inc
icebp
mov
mov
adc
stos
scas
in
or
roll
jg
cwtl
cmp
sub
pop
lods
pop
xlat
shr
add
sub
inc
mov
shl
xchg
lock
repz
mov
jno
mov
rol
icebp
in
xor
rcll
lock
sbb
mov
inc
out
inc
and
mov
lods
or
adc
int3
pop
in
outsb
outsb
cmp
and
fadd
ror
into
push
icebp
or
inc
xchg
push
fldl
popf
cld
mov
sti
in
sub
or
cs
test
std
fs
pop
roll
cmpsl
xor
sbb
or
ds
sbb
and
loopne
test
jge
add
mov
xor
lcall
divl
daa
lahf
and
dec
clc
push
jne
mov
adc
jl
xchg
mov
aad
jmp
push
repz
add
xor
fsub
out
aas
clc
inc
test
cld
fsubr
or
addr16
stc
or
jb
fscale
test
mov
push
push
push
hlt
or
mov
pop
pop
test
push
sahf
inc
jne
das
out
push
shl
out
cmp
iret
mov
aas
xor
arpl
rcrl
xchg
sub
mov
ds
xchg
mov
call
mov
cwtl
or
int3
mov
pusha
inc
or
cs
lret
out
filds
mov
dec
jno
xchg
movsl
xor
and
imul
adc
mov
push
in
push
add
jp
cmp
cwtl
scas
fidivrs
and
movsl
mov
and
aas
roll
xchg
orb
add
scas
jno
shrl
mov
xor
push
xchg
mov
push
nop
push
xchg
mov
popf
xor
into
fnstenv
dec
cltd
adc
cmpb
in
addr16
jnp
in
out
add
sbb
sub
cltd
pop
test
jp
xor
pop
es
scas
pusha
es
dec
dec
outsl
ja
icebp
into
negl
sti
jge
sub
or
mov
inc
xchg
sbb
outsb
pop
xlat
daa
and
iret
fnstcw
inc
cmp
cwtl
addr16
sbb
lods
in
or
ret
outsl
jp
out
loopne
sti
frstpm(287
push
pop
adc
mov
es
xor
imul
rcl
shlb
mov
mov
dec
std
pop
push
out
popa
fs
jg
sub
frstor
mov
popl
mov
je
add
or
mov
jle
or
int
inc
jg
mov
mov
sti
push
stos
andb
and
loope
ja
clc
sub
fstl
mov
into
xchg
xor
inc
mov
xor
lods
outsl
popa
rcrl
push
adc
push
cmp
clc
in
pop
scas
xchg
pop
jl
int
sti
dec
mov
pop
rorb
and
ret
in
fbstp
leave
clc
loope
pop
jmp
stos
test
dec
scas
inc
adc
out
pusha
xchg
push
fimuls
jle
cmp
lea
shrl
inc
ds
lret
cli
add
mov
xchg
jo
test
aas
loope
jne
jmp
cli
adc
xchg
push
addb
cmp
mull
adc
cli
inc
adc
dec
adc
repnz
imul
lret
clc
jbe
rolb
xlat
xchg
or
stos
das
xchg
out
cmpsl
cmc
xor
jg
xor
pop
xor
and
inc
test
dec
sub
inc
leave
push
jo
push
pop
enter
xchg
mov
in
jnp
xor
mov
movsb
sbb
xchg
xchg
stos
test
jecxz
inc
and
add
sub
xchg
jbe
lds
mov
mov
and
sub
xchg
dec
pop
xchg
xchg
dec
in
pop
cmp
cmpl
fisttps
xor
lret
in
js
jb
jmp
inc
sub
cmp
out
mov
mov
jnp
pusha
xchg
neg
out
xchg
cmp
int3
inc
xchg
cmp
pop
xlat
mov
jae
int3
or
nop
out
or
int3
xor
adc
mov
cmp
push
cmpsl
mov
fisubrl
sti
mov
xchg
dec
dec
int
xchg
mov
ds
out
fstpl
aad
xor
loope
clc
int
dec
mov
sub
inc
lods
lcall
pop
cmpsl
or
sub
movsb
xchg
lea
cmp
outsb
scas
fdiv
test
subb
aam
fildll
fsubrs
lcall
in
dec
cmp
aad
push
mov
imul
les
mov
cmc
rcrl
neg
push
xchg
mov
pop
mov
add
loope
filds
lret
mov
sbb
xor
test
cmp
lret
mov
sbb
test
cli
cmc
fistpl
pop
or
sub
cmpsb
fiadds
adc
into
std
add
xchg
divb
or
xor
and
jmp
and
pusha
sub
xor
or
rol
or
inc
xor
in
cmp
jecxz
adc
sbb
in
out
pop
lods
int
call
sub
cmp
mov
xchg
cmpsb
pop
js
jge
lahf
xchg
ret
mov
es
pushw
xor
mov
jge
cmpsl
mov
pop
mov
inc
jp
mov
push
repz
xchg
fwait
push
push
insl
mov
mov
rorl
bound
dec
aad
js
sti
das
fs
pop
sbb
and
scas
pop
rorb
cmc
add
adc
subb
nop
mulb
sarb
arpl
pop
push
nop
cmp
scas
jp
sub
sarb
sbb
lcall
in
movsl
push
pop
out
flds
ss
iret
jl
xor
or
daa
inc
and
mov
cmpsl
stc
insl
xor
popa
icebp
lock
lock
cmp
fs
or
ja
pop
pop
lods
and
push
mov
mov
stc
aaa
dec
test
ror
cmp
scas
mov
test
scas
cmp
inc
sbb
add
loopne
shrl
mov
cmc
cmp
add
or
pop
cmp
les
push
cmp
sbbl
dec
rorb
jnp
jmp
xchg
repnz
inc
lcall
ret
mov
jae
gs
mov
arpl
icebp
push
iret
jecxz
clc
push
dec
aaa
loopne
pop
push
leave
push
data16
rclb
in
loope
jno
scas
testl
stos
out
inc
mov
and
cmp
ja
lods
lcall
cmp
push
sbb
ss
push
daa
mov
sbb
inc
arpl
aaa
fld
adc
loop
outsl
mov
loope
test
or
sub
popf
leave
xor
popf
sbb
push
mov
fs
sub
lea
sub
not
lea
cmpsb
fwait
addl
dec
inc
idivl
or
cmpsb
nop
into
sbbb
adc
xchg
fistpl
sbb
ja
orb
push
cmpsb
mov
imul
aam
inc
inc
lret
cmc
or
scas
mull
sub
push
mov
mov
cwtl
push
arpl
out
jo
inc
or
outsb
lock
mov
xor
int
or
push
xor
rclb
fildll
orb
mov
add
daa
imul
mov
xlat
data16
mov
xchg
popa
out
pop
inc
add
dec
out
add
mov
dec
or
jecxz
iret
inc
test
insb
xchg
jle
out
shrb
adc
mov
jecxz
out
add
fnstenv
and
dec
jmp
sbb
lret
mov
in
pop
ds
fisttpll
dec
fcoms
fstl
popf
pop
jecxz
add
jno
and
push
xchg
mov
mov
clc
outsl
inc
mov
into
fstps
mov
lret
addl
pushf
jno
mov
int
mov
fucomi
push
sbb
push
jge
mov
sahf
xor
jne
and
lahf
out
sub
xchg
repnz
pusha
mov
lret
jecxz
insb
jbe
in
dec
mov
dec
scas
in
cmp
mov
mov
je
leave
scas
jl
fcmovnu
add
push
stos
jae
xor
xor
test
mov
jp
push
lea
fldpi
gs
out
cmp
cmpsb
sub
adc
nop
pop
and
dec
xchg
arpl
or
fidivrl
mov
movsb
push
rcr
rolb
or
andb
outsb
jnp
cmpsl
pop
fwait
je
in
mov
das
xorb
push
xor
push
clc
insl
add
xchg
fsubr
cmp
adc
mov
aas
inc
xchg
es
xor
ja
out
cmpsl
in
lret
mov
rolb
adc
gs
lcall
mov
call
push
outsb
loopne
sarl
sbb
movsb
add
mov
lods
leave
in
in
lods
push
out
pop
pop
imul
les
negl
pop
adc
mov
lods
lods
push
and
and
mov
lahf
loopne
or
push
sbb
out
popf
xor
inc
jb
cmpsb
dec
lods
int
xchg
adc
cmp
mul
mov
cmc
scas
inc
push
repz
sbb
cmpsl
pop
or
pop
mov
or
repnz
je
ss
popa
scas
int3
rcrb
add
test
jae
sbb
inc
daa
pop
dec
adc
dec
inc
mov
pop
mov
push
xchg
pop
inc
hlt
data16
jge
inc
mov
xor
add
mov
shlb
icebp
test
lock
les
push
lret
out
inc
pop
jae
or
jle
pop
lcall
add
add
aas
daa
inc
xorl
xchg
push
loop
mov
sbb
push
sbb
movsb
sbb
mov
cld
cmc
jp
xor
add
or
inc
xor
and
inc
lret
fstpt
pusha
aaa
or
add
add
pop
test
mov
xchg
cltd
dec
xchg
imul
cltd
cmpsb
add
out
into
ja
imul
test
xchg
and
adc
xchg
arpl
mov
out
push
outsb
sbb
dec
call
lock
aaa
inc
pop
jno,pn
aad
pop
in
adc
dec
mov
fstpl
js
imul
cmpsb
jno
lods
in
out
sahf
mov
pop
cmp
mov
sbb
xchg
jg
addr16
sub
or
push
test
mov
or
stos
loop
and
fwait
pop
mov
lcall
cld
test
bnd
sbb
hlt
mov
pop
pop
subb
xorl
sub
push
xchg
lods
push
movsb
mov
outsw
push
ja
mov
push
loopne
int3
fs
dec
mov
pushf
sahf
jmp
in
sub
lcall
inc
mov
je
sub
movsl
hlt
pushf
hlt
cmp
jns
or
fucomi
addr16
push
addr16
repnz
mov
loope
mov
mov
outsb
jb
bound
stos
push
inc
pop
rcl
inc
ja
sub
mov
jns
pop
push
jp
and
xlat
daa
pop
notb
cltd
int3
outsb
jp
or
sti
mov
mov
rorl
popa
dec
push
cmc
jle
mov
out
cmp
repz
mov
push
loop
ljmp
xor
lods
test
mov
fisubrs
push
sti
push
test
or
fmull
pop
dec
movsl
aas
cmp
hlt
shl
fidivrl
mov
in
pop
ljmp
out
jno
cmp
and
ja
ss
out
mov
pusha
loopne
lds
rcr
das
aad
pop
mov
call
js
test
std
adc
mov
cli
mov
xchg
push
fs
jp
mov
icebp
xchg
call
mov
scas
jp
fcompl
pop
dec
cmp
dec
daa
mov
pop
out
fwait
adc
scas
mov
push
sti
or
hlt
and
jb
icebp
adc
or
aas
cwtl
in
and
imul
lret
jle
xchg
icebp
loope
out
dec
imul
ffree
push
mov
lcall
adc
mov
test
shll
ja
lret
pop
pop
sub
pushf
repnz
adc
add
fwait
sbb
push
cltd
jae
lahf
add
pop
add
imul
std
jns
cwtl
rclb
clc
cmp
rclb
popf
or
or
jp
adcb
pushf
mov
popf
pop
ret
fwait
bts
lahf
jbe
jo
sub
imul
mov
jno
inc
dec
push
push
sub
into
xchg
mov
mov
jmp
ljmp
push
mov
inc
inc
cmp
clc
dec
xchg
test
shlb
pushf
mov
std
pop
sbb
xchg
mov
shlb
imul
stos
xchg
push
mov
ja
dec
fyl2x
sbb
flds
inc
cltd
outsl
pop
fistps
stos
dec
xor
jno
pop
dec
imul
insl
mov
imul
lods
xchg
out
jp
int
popa
adc
push
xchg
sbb
jo
sbb
mov
cmpsb
inc
mov
jbe
in
inc
popf
cmp
jb
xchg
je
aam
js
adc
mov
jnp
sub
jb
mov
adc
cmpsl
mov
jge
jge
mov
mov
mov
push
add
jl
inc
cmp
test
inc
arpl
mov
dec
xchg
clc
pushf
push
or
call
cmp
ret
or
ljmp
mov
clc
add
sar
mov
test
lret
cmp
jb
nop
push
pusha
repz
adcb
inc
inc
cmp
xchg
mull
lea
gs
lcall
test
out
jmp
mov
lahf
out
int3
repz
aam
sub
fwait
lods
dec
cmpsb
push
push
ret
out
sub
in
sub
lods
fdivrs
push
push
push
xor
repz
cli
push
mov
xor
push
xorb
pop
movsb
outsl
loopne
js
nop
mov
mov
movsl
sbb
or
lret
jns
bound
in
repnz
or
push
in
lea
inc
cmp
enter
movsb
test
lock
add
fldcw
push
xor
outsl
ret
cltd
sub
jp
pushf
mov
in
ret
pop
xchg
imul
mov
cs
stc
pop
mov
inc
rol
sub
imul
adc
push
ds
push
arpl
in
xchg
ljmp
jg
xchg
add
mov
mov
in
scas
mov
out
cli
cmpsb
lock
loop
sub
jne
and
push
add
cmp
and
fisttpll
rcl
jg
movsb
das
fs
dec
inc
fstpt
gs
add
dec
test
push
in
jg
imul
sbb
pop
mov
inc
and
bound
xorl
adc
inc
movsb
ja
repnz
fs
decb
aaa
cmp
pop
or
pop
push
pop
pop
jl
dec
jmp
cs
mov
icebp
push
shrl
jbe
fnstsw
dec
gs
adc
inc
xor
pop
cs
test
sahf
and
push
mov
mov
movsb
mov
cmp
rorb
inc
jle
mov
push
mov
pop
cmp
inc
and
push
enter
lods
into
or
nop
xchg
xor
std
mov
stos
aam
push
mov
scas
fwait
mov
inc
push
xchg
push
insb
mov
lods
sbb
cmp
rol
lahf
jae
hlt
xchg
jl
push
xchg
jp
push
shll
aad
das
jo
cmp
int
cmp
pop
or
cmp
sbb
cs
sbb
out
movsb
pop
push
ret
js
or
push
jae
test
popa
xchg
sub
mov
xor
sub
jp
mov
adc
je
mov
in
and
out
jb
addb
decl
dec
add
movsb
stc
xor
add
adc
test
into
mov
jecxz
int
jg
insb
test
jbe
ret
sbb
cmp
cmpsl
inc
ret
scas
jl
cs
js
andl
inc
popa
ljmp
repz
xor
adc
mov
inc
cmp
enter
dec
cmc
jp
push
push
gs
and
js
mov
inc
outsb
outsb
mov
mov
mov
mov
notl
inc
sti
and
inc
jnp
push
test
and
dec
mov
in
bound
adc
scas
imul
jg
les
and
mov
mov
xchg
pop
xchg
push
jle
and
adcb
cli
mov
sbb
out
xorl
nop
adc
xor
scas
xlat
jbe
push
sbb
shlb
xor
movq
dec
pop
xor
sub
shl
loope
fisubl
pop
sub
cmp
leave
mov
jg
in
dec
pop
jmp
cmp
xchg
jge
push
icebp
sub
fwait
rorb
mov
fsubrs
cmpsl
sub
sub
add
xor
jb
cmp
mov
sub
mov
test
std
addb
divb
in
and
jge
not
cmp
orb
pop
jno
dec
jno
in
mov
mov
xchg
es
movsl
pop
repz
inc
fmul
pop
inc
arpl
dec
daa
das
xor
add
xor
fidivs
fwait
xor
lret
mov
in
xchg
xchg
pop
and
pop
fldenv
cmp
xor
dec
dec
xchg
pop
mov
xchg
jle
pusha
xor
fcomip
aad
dec
shlb
divb
sar
jp
mov
xlat
dec
xchg
lock
bound
aas
fstpt
in
inc
dec
or
icebp
and
jp
cmp
int3
neg
rol
addr16
pop
test
enter
pop
mov
fwait
sbb
sub
dec
or
test
in
xchg
adc
lea
scas
es
movsl
mov
pop
sbb
jns
sub
dec
out
mov
xor
push
and
outsl
xor
subb
cmp
cwtl
pop
gs
jbe
xor
adc
sbb
mov
cmp
jb
outsb
jp
mov
imul
mov
mov
mov
arpl
lahf
shl
and
cmpsb
xchg
andl
sarl
mov
int3
out
clc
mov
sub
icebp
jns
push
call
popa
mov
pop
arpl
insb
cwtl
mov
xchg
xchg
enter
out
movsb
xor
fidivrs
aaa
sbb
xorb
pushf
cli
or
iret
imul
push
in
inc
push
cmp
cwtl
jmp
push
sub
shr
mov
or
mov
xchg
add
lds
mov
sbb
pop
mov
xlat
pop
push
xor
int3
pop
cmp
jecxz
push
add
xor
cmp
cmp
sarl
mov
push
mov
into
dec
jb
add
mov
repz
adc
lahf
mov
cmp
add
cmc
in
pop
cmp
lcall
out
and
jge
pop
mov
add
call
xchg
add
and
ja
jmp
sub
dec
in
mov
ljmp
int3
jbe
daa
lret
addr16
incb
xchg
lret
jbe
mov
and
mov
data16
push
addb
stos
cld
out
ljmp
and
sbb
movsl
lahf
inc
rcll
fdivrs
or
stos
add
adc
push
popa
in
clc
mov
popf
cmp
inc
lret
sahf
mov
iret
out
cmp
mov
pop
mov
pop
pop
mov
push
push
push
shll
icebp
jmp
jne
pop
mov
cmp
loopne
push
iret
mov
jne,pt
sub
jo
lcall
adc
je
add
mov
pop
xchg
push
andb
add
int
push
test
loope
js
fs
add
mov
in
jp
xchg
std
in
out
rol
xchg
and
mov
or
nop
cmp
pop
xor
xchg
pusha
add
aaa
dec
pop
jg
insb
pop
js
sub
ljmp
xor
mov
ret
inc
sub
scas
lcall
xor
fnsave
mov
ds
pusha
int
mulb
idivb
xor
ss
lods
xchg
dec
jmp
dec
fstp
lds
stos
pop
inc
std
add
xchg
jmp
sahf
mov
xchg
mov
sub
mov
sub
lods
or
xchg
mov
das
cmp
loop
jns
dec
sub
pop
out
mov
cmp
bound
repz
dec
daa
andb
orl
mov
push
and
cmp
ja
stc
jns
aad
add
enter
outsl
fdivp
and
int
xchg
repz
call
int3
loop
cmpsl
test
mov
lea
jo
stos
lds
lret
or
ds
mov
shlb
lcall
mov
cmp
sbb
shll
push
jne
scas
cmc
stos
out
cld
mov
mov
test
or
xchg
sub
sbb
inc
xchg
clc
push
gs
cmp
sub
pusha
dec
add
cmp
cli
lret
or
insb
daa
in
fistpll
fldt
bound
xor
push
pop
mov
jb
mov
je
int3
or
sbb
imul
push
cmp
and
pop
dec
flds
mov
push
pushf
mov
mov
hlt
faddl
gs
jno
jge
and
mov
cltd
mov
jmp
mov
push
scas
incb
cli
dec
mov
sarl
or
sub
pop
mov
scas
cmp
shlb
xchg
push
es
push
cmp
lods
inc
pop
hlt
lock
xor
or
pop
add
stos
jl
dec
inc
cmp
cmp
pop
in
fsubrs
pusha
in
aam
jmp
jl
pop
test
outsb
adc
repz
pop
xchg
inc
jns
jmp
xor
inc
and
pop
lods
push
jmp
repnz
fadds
push
int
pop
and
outsb
dec
or
into
inc
xchg
shrl
cmc
sbbb
lret
in
inc
imul
jo
push
mov
sub
mov
add
and
add
mov
mov
dec
test
or
sub
jl
cmp
sbb
jg
pop
aad
sbb
hlt
push
cmp
push
or
iret
mov
add
mov
mov
jae
mov
xchg
push
out
add
sub
imul
test
daa
xor
dec
mov
in
jno
leave
xor
pop
push
jl
mov
out
sti
sub
hlt
jno
movsb
and
rorb
add
in
outsb
ljmp
cltd
fnstsw
rcl
push
and
lret
lds
sbb
in
pop
sub
loope
into
sbb
out
shr
clc
dec
or
imul
mov
imul
repz
rcrl
pop
in
inc
fistpl
sahf
addr16
lods
cmp
xor
push
fsub
addr16
stc
adc
lds
rolb
lds
sbb
jns
jecxz
pop
xchg
cmp
dec
cmp
cmp
mov
test
inc
into
dec
pop
lds
adc
shll
cmpsl
lret
inc
adc
in
mov
inc
inc
lret
subl
sub
int3
into
mov
ror
mul
pop
sub
pop
mov
mov
nop
ret
adc
rorl
cmp
and
cmp
or
mov
lcall
fisubl
xchg
or
cmpsl
stos
sbb
lock
aas
jg
cmp
adc
push
and
fdivrs
jmp
and
inc
sub
bound
lcall
aam
xchg
sub
ja
jp
ficoml
dec
cld
and
data16
sbb
ss
stos
sub
xchg
scas
pusha
sub
in
sbb
fyl2x
inc
das
adcb
add
mov
out
loop
imul
adc
lods
adcl
dec
push
sahf
ror
lods
imull
push
test
mov
je
clc
mov
andl
pop
mov
pop
imul
mov
mov
xor
leave
imul
mov
sub
push
pop
or
sbb
pop
das
lds
clc
pushf
sbb
push
insb
jne
ret
cmp
jne
int3
andb
jno
movsl
sub
pop
ror
nop
xor
dec
mov
push
xor
and
dec
xorb
mov
les
xor
xor
rorb
mov
or
aad
push
ret
rcll
popf
mov
ljmp
lds
push
jle
and
sbb
adc
mov
das
mov
roll
push
mov
fadds
ror
add
stos
dec
insb
jg
cld
adc
push
insl
shlb
shll
mov
ljmp
sarb
cmpsb
inc
jg
or
stos
adc
imul
add
dec
aas
mov
jno
out
cmc
jge
jmp
mov
xchg
in
cmp
push
mov
insl
mov
jae
sbb
psubq
sub
insb
adc
adc
sbb
xor
les
mov
jmp
into
cmp
add
and
mov
sub
sub
fdivr
fsubrl
pop
stc
pop
push
insb
mov
stos
mov
jmp
dec
dec
xchg
jecxz
mov
push
xchg
hlt
adc
or
sbb
dec
popa
inc
mov
sbb
mov
pushf
lods
stos
cld
pushf
jecxz
lods
mov
add
sub
pop
aas
xchg
mov
aad
mov
add
or
inc
sbbb
xor
data16
push
addr16
jg
xchg
dec
bound
mov
testl
mov
xchg
push
jae
pop
jle
cmp
pop
and
rcr
in
and
xchg
lods
mov
lock
jb
add
je
and
mov
add
sbb
pop
cmp
pop
and
inc
fmull
cmpsl
mov
add
repnz
cmp
js
pop
sahf
in
push
jl
pop
ss
xchg
push
xchg
xchg
data16
xchg
xchg
test
popa
outsb
and
jecxz
dec
loope
add
gs
mov
add
insl
insl
mov
dec
pop
pushf
popf
lods
mov
mov
in
test
lret
jl
leave
cmp
aam
cmp
shrl
rcrl
inc
movsb
cmp
push
divb
add
popa
shlb
cmpsl
lods
aam
adc
mov
mov
cmp
jne
in
push
pop
fwait
iret
nop
xor
sbb
dec
aam
mov
rcrb
cmp
imul
jb
dec
testl
in
mov
jmp
imul
mov
scas
push
adc
dec
push
push
cmp
mov
sub
int3
fs
mov
xchg
imul
shrl
clc
sbb
fisttps
mov
inc
vmovss
fsubr
outsb
xor
data16
shlb
je
xlat
dec
subl
jecxz
push
lock
cmp
cmp
in
mov
xchg
mov
loop
inc
subl
ret
movsb
jb
mov
ficomps
cs
leave
out
scas
cltd
cli
sub
lret
mov
daa
add
enter
aam
rorl
jecxz
mov
daa
cmpsb
orl
pushf
and
cmp
int3
adc
inc
fiadds
jl
sub
adc
fs
mov
daa
mov
out
lea
pop
mov
lds
leave
adc
test
xchg
lret
gs
xor
lock
and
aaa
xor
std
and
or
cmp
pop
movsl
push
test
xchg
notl
rcll
inc
jle
xchg
cld
push
cwtl
xor
das
loopne
out
adc
iret
mov
ret
loopne
adc
loopne
sar
stc
ret
movl
jo
popa
lock
fsubrl
inc
loope
call
xchg
push
bound
xlat
lret
out
mov
fstl
fsubl
push
jo
iret
cwtl
mov
sbb
mov
in
lret
addr16
int3
or
js
mov
movsl
xchg
jmp
dec
and
arpl
fisubl
inc
out
dec
xchg
jmp
pop
fnsave
hlt
outsl
dec
cld
scas
inc
inc
shll
push
inc
push
cwtl
fimull
or
and
adc
lods
movsl
sahf
out
or
or
push
aas
popa
hlt
push
inc
xchg
adc
mov
xchg
jmp
and
add
ss
or
mov
sub
push
std
jp
mov
aas
popa
or
fldcw
sbb
das
cmp
jb
lahf
dec
xor
aaa
adcl
outsl
cmpsb
and
movsl
add
neg
shlb
test
or
fmuls
push
push
jmp
imul
mov
inc
mov
sbb
xchg
cmpb
adc
xor
xchg
mov
and
adc
aas
ljmp
xchg
ror
push
pop
in
fnstsw
repnz
and
call
pop
pop
pop
lret
leave
cmp
notl
sbb
push
lock
cmp
lret
loop
in
cmp
lcall
jmp
jo
mov
and
sbb
pop
xchg
add
mov
cmpsb
or
or
in
sti
or
xchg
out
jns
dec
sbb
or
orl
jnp
jns
xor
cmp
adc
cmpsl
sbb
pavgw
fs
ljmp
cltd
dec
or
outsb
inc
fcomps
sti
push
mov
mov
fdiv
lock
pop
out
xchg
add
sub
jae
xor
mov
xor
cmp
sub
sbb
xor
insb
shr
jbe
mov
sbb
or
cmc
mov
jmp
push
gs
sub
pop
out
outsl
cmp
movsl
sbb
lods
bound
insb
jnp
mov
push
loopne
test
inc
fcomp
fbstp
fwait
sub
fmull
inc
fcmovbe
and
imul
jns
repz
arpl
ja
jae
js
sbb
sbb
pop
mov
in
leave
or
mov
into
push
sub
pop
jecxz
mov
lcall
imul
dec
lods
jbe
pop
iret
mov
loope
mov
leave
xchg
int
gs
cltd
dec
mov
mov
lods
fmuls
push
xor
jne
or
test
cmpsl
xchg
mov
cwtl
push
fs
adc
rclb
jns
mov
push
sbb
add
mov
es
movsb
daa
pop
scas
mov
xor
neg
lret
cli
mov
jecxz
push
sbb
xor
gs
imul
jmp
and
push
shll
in
fisttps
xor
mov
scas
xchg
pop
jb
adc
mov
sub
call
fiadds
cmp
or
jnp
adc
arpl
ds
push
and
jbe
ds
mov
lods
inc
adc
push
mov
in
jne
shll
sub
mov
mov
cwtl
push
nop
data16
in
mov
clc
mov
daa
xor
push
push
xor
aam
push
incb
jle
scas
loop
insl
popa
and
xchg
fs
xchg
inc
aas
push
popa
loopne
movsl
cli
inc
or
repnz
cmp
movsb
xor
je
inc
mov
push
sub
stos
aam
dec
pushf
pop
cltd
into
popf
clc
or
and
pop
jp
push
aaa
mov
xchg
into
jne
jnp
jmp
ffreep
mov
outsb
or
imul
sub
ljmp
jg,pn
sbb
inc
in
xchg
adc
mov
imull
je
jl
add
cmp
ffreep
insb
mov
repnz
add
icebp
add
push
jno
mov
push
add
lock
mov
jmp
sahf
adc
inc
and
jbe
sbb
or
aas
sahf
inc
jne
sbb
rcrb
cmc
xchg
lods
stos
pop
adc
testl
lret
sbb
jb
push
lods
push
ja
mov
lcall
insl
adc
xchg
push
iret
jl
inc
in
or
cmp
push
ret
les
in
dec
cmp
popf
add
or
xchg
cmp
shrb
add
xchg
lret
adc
imul
lods
xchg
xchg
movsb
mov
add
loopne
test
and
sbb
mov
mov
xchg
pop
push
jae
dec
cmp
mov
in
add
push
pop
xchg
push
lods
sbb
pop
ja
cs
cmp
popf
push
sbb
dec
or
movsb
out
jns
mov
mov
inc
test
enter
ds
mov
mov
inc
jmp
in
loopne
rcr
rcll
mov
ljmp
pop
mov
pusha
adc
fstps
adc
sbb
shll
xor
mov
push
lcall
and
mov
inc
jne
sbbl
jae
pusha
xchg
scas
into
adc
and
sub
jne
roll
call
shlb
push
sbb
xchg
std
gs
sbb
adc
cwtl
mov
add
rorb
loop
jns
jle
xchg
test
dec
dec
inc
cmp
jmp
test
or
inc
aas
and
repz
loopne
mov
add
fs
popa
pop
cmp
cmp
lea
js
lret
lcall
add
cmp
enter
mov
insb
pusha
dec
or
lcall
sub
mov
pusha
lea
cmp
cmp
jle
mov
jne
inc
lret
sbb
xor
push
lea
sbb
addr16
popa
sbb
push
nop
in
scas
push
sbb
pushf
and
push
imul
fstl
pusha
out
insl
dec
xchg
addr16
jg
adc
inc
lcall
adc
push
sarl
outsl
imul
push
imul
xorb
add
aaa
out
aas
sbb
es
mov
jne
and
loope
cmp
jg
call
ljmp
push
jg
stos
or
sbb
push
adc
mov
cmpb
dec
push
test
sbb
and
bound
test
mov
popf
mov
orl
or
mov
lret
pop
push
cmpsb
jae
std
je
mov
outsl
sub
int
xor
pusha
jnp
and
or
arpl
dec
push
push
jp
dec
insl
jmp
pop
int
mov
mov
aam
pop
call
push
sbb
sub
out
sbb
mov
rorl
add
lahf
fcmovb
movntq
dec
out
cmp
out
lods
lods
addl
outsb
jmp
jmp
jmp
mov
ret
aaa
aam
add
pusha
cmpsb
jmp
lcall
js
or
and
outsl
inc
push
cld
and
xor
pop
push
icebp
rorb
ret
or
dec
dec
loopne
jae
nop
adc
push
add
aaa
data16
and
nop
mov
cmp
mov
mov
gs
push
lret
jp
jne
and
pop
xchg
mov
imul
jle
or
push
loopne
push
inc
jo
jecxz
xchg
test
jae
enter
jne
xor
cmc
fldenv
jecxz
jns
je
dec
aam
mov
push
jae
scas
rcrl
std
pop
mov
aad
jne
leave
test
xchg
mov
out
sub
or
shl
adc
jae
xor
inc
sahf
cmp
repz
sub
jno
mov
mov
loope
pop
cld
sub
lods
cmpl
sub
jne
push
dec
jbe
cmp
outsb
mov
mov
andl
leave
xor
mov
mov
call
out
out
push
arpl
clc
xor
dec
loopne
rol
add
lds
cmp
test
lock
and
jg
push
insl
mov
push
xor
mov
adc
in
sahf
inc
pushf
and
inc
sbb
inc
shrb
or
les
mov
jmp
jnp
in
data16
fnsave
decl
inc
xchg
cmpsb
sbb
movsb
mov
int3
mov
cmp
insb
cmpsl
ss
cmpb
xlat
in
and
xor
cmpsb
mov
pop
sti
ds
repz
mov
popf
es
nop
xchg
aad
ja
rclb
adc
icebp
andl
sub
and
dec
mov
add
push
popl
icebp
xor
int
pop
js
sbb
iret
push
xlat
cwtl
rcrl
sbb
mov
inc
es
cmpb
test
inc
push
dec
fcmovnu
mov
popf
pop
mov
jecxz
mov
adc
or
dec
loope
xor
or
and
sub
and
outsb
enter
pop
test
mov
int3
pop
xchg
imul
sahf
loop
loopne
or
xchg
arpl
nop
dec
insb
xlat
cmp
sahf
cmpsl
pcmpgtw
xor
or
mov
jno
enter
jbe
fwait
out
mov
lcall
fisttps
sbb
jl
push
outsb
lods
popa
ja
std
mov
or
aaa
push
aam
lods
test
cmp
dec
data16
adc
mov
repz
in
inc
pop
sbb
jb
mov
hlt
pop
lds
loop
xchg
aaa
rolb
inc
es
mov
adc
inc
pop
jecxz
lods
push
int
sub
in
xor
insl
out
xor
xchg
jl
repz
xchg
mov
mov
movsl
inc
push
ljmp
mov
mov
call
xchg
jo
leave
out
mov
mov
iret
or
lods
ret
mov
cmp
daa
fcmovnu
dec
push
adc
iret
mov
dec
test
mov
mov
inc
mov
add
sub
mov
mov
in
jecxz
mov
insb
push
je
std
xchg
jg
jbe
subl
fwait
insl
adc
and
xchg
add
dec
or
inc
mov
mov
cmp
inc
in
ror
add
dec
jecxz
and
cmpb
dec
sbb
mov
hlt
dec
imul
ss
lea
mov
in
inc
loope
das
in
insl
inc
mov
outsl
pop
adc
int
cltd
les
dec
in
sub
aaa
movsb
shrl
in
pusha
rolb
cmpsl
imul
xor
test
adc
adc
shll
cmp
mov
and
push
ja
subb
dec
movsl
cmp
push
mov
pop
dec
subb
jle
mov
loop
xchg
shrb
inc
aad
daa
mov
xchg
jne
push
or
mov
pop
pop
adc
out
or
sbb
pop
mov
push
mov
inc
mov
cld
adc
dec
shrl
adc
in
je
mov
ret
imul
int3
jns
je
add
and
das
lods
out
mov
frstor
cmpsb
lahf
js
pop
daa
pushf
push
inc
sub
cmp
mov
int3
dec
cmp
mov
insl
push
sbb
enter
pop
stos
dec
vinsertf64x2
cmpsl
fcoml
daa
cmpsl
orl
popf
fsub
jno
dec
sub
sbb
shl
sub
in
out
mov
dec
and
cmp
inc
or
dec
testb
add
sub
stc
fwait
xchg
aad
pop
imul
add
jecxz
arpl
pop
dec
inc
sub
in
rcrb
push
mov
mov
fdivrs
jns
xchg
lods
jb
fimull
repz
add
push
cmc
pop
sub
ret
sub
test
test
xlat
lds
aad
inc
and
sub
cmp
mov
push
jne
push
roll
jno
div
xchg
movsb
sub
cmpl
xchg
or
cmp
lahf
scas
inc
inc
arpl
fcmovne
ss
jnp
dec
loopne
es
icebp
aas
inc
stos
fmull
jmp
pop
add
adc
subb
call
xchg
dec
pushf
cmc
adcl
or
in
out
js
mov
repz
adcb
out
xchg
fwait
mov
cmp
test
fcomps
sbb
xchg
addr16
ret
xchg
test
jb
push
dec
je
inc
mov
adc
pushf
retw
movsb
fnstcw
lods
shlb
cwtl
pop
xor
jg
loope
pop
mov
lods
sub
xchg
aad
frstor
ret
and
leave
leave
add
or
clc
sbb
gs
adc
ss
push
mov
jle
xchg
or
fimull
jnp
fldt
aad
ret
sbb
fiaddl
sbb
ja
scas
xchg
or
jb
inc
xchg
pop
fnstsw
lock
mov
mov
out
out
fwait
or
mov
sub
jp
mov
gs
rcrb
scas
je
or
cmp
hlt
out
or
pop
loop
aaa
in
sti
xor
mov
test
pop
adc
dec
sbb
adcl
in
mov
cmp
lea
out
shl
pop
lods
lea
or
dec
xchg
stc
xchg
xchg
outsl
adc
adc
adc
dec
fdiv
add
sbb
data16
sbb
xor
jnp
sub
dec
adc
stc
cmp
push
gs
sbb
shl
xor
cmpsl
cld
hlt
mov
rcl
imul
lcall
decl
cmp
int3
incb
sub
push
test
mov
cmp
jns
inc
std
movsl
mov
out
xchg
fdivr
repz
pushl
rorl
and
adc
jmp
ficomps
xchg
add
dec
sbb
jbe
jecxz
mov
test
jg
pop
dec
sub
aas
addr16
js
inc
inc
add
popa
and
outsb
movsb
and
jge
enter
pop
clc
ljmp
fnstcw
jno
cli
dec
inc
sbb
outsl
ja
lock
mulb
jo
jp
and
les
lahf
rclb
mov
pop
or
add
repnz
sbb
push
in
push
sub
dec
ds
jge
mov
mov
xchg
inc
mov
insb
and
xor
aad
sbb
and
js
jo
mov
push
pop
push
cmp
out
stos
push
mov
stos
push
pop
aaa
es
add
stc
aas
dec
popf
lods
cli
xchg
jle,pt
mov
pop
inc
dec
sbb
popf
xor
xchg
pop
mov
orl
fimuls
jo
sti
push
aad
hlt
push
jb
mov
jo
loop
dec
lock
jecxz
sbbl
mov
and
ja
adc
into
jecxz
mov
int3
fadds
clc
jecxz
iret
sub
jne
mov
push
sub
mov
mov
cmpsl
dec
test
pop
insb
popf
mov
jle
test
cmpsb
mov
icebp
cmp
aaa
pop
mov
outsb
bound
push
neg
push
inc
dec
outsl
mov
fidivl
cmp
popa
pop
cmpsb
lds
mov
mov
mov
aam
xchg
lret
sub
mov
in
lock
js
js
sub
hlt
pop
xchg
data16
bnd
add
add
fidivrl
je
int3
outsb
mov
xchg
jns
lret
or
jo
mov
test
mov
shl
inc
mov
popa
mov
imul
or
test
dec
xchg
fistps
rol
stc
xchg
fst
bound
xchg
outsl
jmp
aas
mov
push
dec
pop
decb
xlat
pop
push
loopne
xchg
fwait
dec
fs
iret
jns
aaa
imull
jmp
mov
cs
mov
jae
movaps
stos
mov
mov
fmull
mov
pusha
or
cmpsl
push
scas
ret
outsb
in
loopne
lret
repz
scas
mov
mov
cmp
pop
dec
pop
xor
or
popf
mov
gs
call
iret
call
mov
outsl
orb
cmp
mov
add
mov
sbb
cmp
cltd
das
jecxz
ret
push
push
in
mov
push
xchg
inc
mov
in
mov
sub
push
add
pop
xchg
das
push
aam
mov
ffree
and
sub
add
cmpl
imul
mov
sbb
fs
mov
mov
fiaddl
sti
loope
ja
mov
int
cwtl
mov
pushf
hlt
xchg
movsl
push
into
call
mov
insb
mov
ljmp
into
add
clc
inc
sub
int
sub
movsb
inc
divps
decl
iret
bound
dec
imul
mov
repnz
lahf
outsb
fiadds
push
in
xor
push
push
add
leave
adc
push
inc
outsl
test
jo
push
jno
push
cld
push
inc
sbb
pop
sbb
icebp
test
add
sbb
pusha
sub
out
dec
and
iret
leave
xlat
adc
mov
bound
pusha
add
cs
inc
and
xor
jle
insl
sbb
xchg
and
dec
inc
pop
adc
adcb
inc
mov
pushf
data16
jne
mov
cmp
mov
xlat
jns
subb
dec
mov
mov
sbb
dec
imul
sahf
adc
mov
jl
rclb
test
je
in
test
add
dec
ljmp
mov
xchg
popa
test
xor
lcall
aas
mov
loopne,pt
pop
sbb
xor
dec
add
es
inc
aas
mov
testl
out
data16
cld
push
aam
fdivl
or
repz
scas
add
pop
jecxz
sbb
rol
pop
xorl
aam
mov
mov
pusha
push
into
mov
and
mov
stos
jmp
push
out
sub
shl
mov
jmp
push
leave
sub
loope
xorb
add
aaa
push
push
sub
dec
push
and
xchg
jge
or
js
iret
mov
shll
sbb
sahf
movsb
or
icebp
int3
add
insb
ljmp
xchg
lock
lret
push
dec
xchg
mov
hlt
cmpsl
xchg
lret
scas
jne
in
lahf
jmp
sbb
mov
icebp
pop
pop
dec
in
xor
jnp
imul
jg
aam
jb
ret
jmp
jbe
nop
cltd
xchg
jmp
nop
or
jg
sti
mov
xchg
add
xor
pop
xlat
bswap
xlat
arpl
inc
fldenv
inc
adc
sub
cmp
lret
xchg
fwait
mov
mov
cmp
sbb
cmc
adc
cmp
call
inc
cmpb
dec
je
lock
sbb
jle
xor
mov
ds
lock
pop
ss
testb
clc
ss
mov
nop
and
loop
adc
cmp
cmp
cmp
mov
ret
push
into
dec
pop
sub
aam
jae
add
popa
fnsave
mov
jecxz
dec
push
adc
mov
sti
push
sub
mov
call
mov
rcr
cmp
ror
jge
es
negb
mov
push
mov
cli
cmp
repnz
jecxz
lcall
stos
mov
xchg
dec
fsubrs
push
pop
sbb
filds
ret
test
loopne
adc
mov
fidivs
icebp
jbe
xchg
jge
out
pmaxsw
xor
push
mov
cltd
cmp
stos
inc
mov
or
dec
xchg
call
out
push
ret
into
ffree
mov
push
loopne
or
xchg
mov
inc
mov
push
xchg
dec
push
sarl
push
call
pop
cwtl
ret
inc
and
mov
aad
jmp
pop
mov
push
mov
test
push
imul
and
jge
in
adc
xor
cwtl
mov
out
out
jno
popl
cltd
cmpsl
subb
rorb
out
cwtl
scas
popa
lret
imul
fidivl
push
xlat
nop
ss
adc
jg
lcall
out
adc
mov
insl
sub
loopne
mov
xchg
mov
mov
add
push
cmc
jmp
test
and
or
inc
and
idivl
jb
jecxz
inc
les
mov
test
add
jno
inc
ds
add
mov
mov
lcall
cmp
jns
test
or
sahf
mov
mov
roll
les
push
in
push
adc
xchg
shlb
jecxz
and
cmpxchg
imul
jg
lock
stos
outsl
in
jae
out
mov
ja
and
mov
scas
leave
aad
jg
add
sub
and
nop
into
jbe
mov
xlat
ja
ret
fsqrt
xlat
mov
xchg
jecxz
inc
pushf
sti
pop
pop
int
push
pop
pop
push
cld
jp
jle
jl
sbb
cmp
push
pusha
popf
sti
add
mov
jae
scas
sti
fimuls
fcmovu
sbb
loopne
clc
cmp
sub
nop
lcall
in
mov
cli
lock
mov
aaa
push
mov
jmp
ss
mov
and
sub
gs
sub
mov
xor
push
loop
icebp
or
mov
xor
nop
test
fcoms
aam
add
cs
mov
sbb
outsb
lahf
jmp
cld
mull
int3
push
dec
aad
dec
mov
fsts
sub
xchg
repz
stos
mov
int
adc
push
xchg
xlat
push
lods
shlb
nop
jae
cld
ss
insb
adc
xchg
sub
inc
sub
int3
mov
ja
sbb
xchg
sub
out
and
cmp
insb
daa
ror
aas
popf
stos
jmp
pop
pop
cmp
in
jns
and
popf
xor
push
push
cld
add
xchg
ror
fcompl
xorb
hlt
stos
js
pop
nop
inc
push
cmpsl
das
pop
xor
pop
or
mov
mov
or
ds
icebp
and
mov
rcl
mov
dec
lea
mov
sbb
add
mov
loopne
cmp
addr16
arpl
outsb
jne
inc
push
rcrb
push
lahf
xchg
les
or
pushf
pop
push
imul
mov
lret
inc
movsl
gs
adc
bound
fisttpl
and
sahf
rorl
cmc
mov
stos
mov
aaa
mov
out
xor
sbb
xchg
lods
addr16
imull
sbb
int
stos
scas
orl
pop
aam
hlt
and
cli
push
lock
les
inc
lds
inc
aas
ss
sbb
mov
insl
cmpsb
dec
mov
and
push
lods
inc
enter
inc
dec
mov
imull
cmp
mov
in
mov
fldenv
jl
adc
cmp
repnz
mov
fs
les
inc
push
stc
cmpsb
pop
bound
in
test
jbe
cld
push
das
mov
xchg
and
lret
add
repz
fs
aaa
or
xchg
mov
adc
shll
pop
sub
outsl
pop
or
jle
sub
mov
or
dec
shrw
jp
sar
lcall
ljmp
cmp
es
call
outsb
out
cmp
ja
enter
mov
movsl
jnp
jno
pop
test
mov
pop
add
fstl
test
cmp
ss
sub
sub
add
jg
cwtl
push
adc
push
jle
outsl
ss
xchg
addl
pop
xchg
mov
mov
aas
add
pusha
push
adc
mov
jno
mov
add
popa
add
pop
loope
stc
mov
in
cwtl
sub
out
cs
clc
jl
pop
and
fldcw
pushf
jge
jmp
pop
push
sub
lods
or
into
xor
int3
adc
mov
insl
sarl
and
loope
or
sbb
ss
and
jbe
pushf
addr16
pop
mov
js
pop
xor
sbb
fsubrp
push
call
dec
dec
fnstsw
sub
test
mov
xchg
repz
insl
bnd
lods
addb
or
jmp
push
out
and
dec
out
ljmp
cmp
rorb
insl
outsl
or
in
sub
data16
aad
mov
xchg
add
dec
xor
lea
xor
out
dec
shlb
imul
lahf
cmc
fimuls
or
ss
ja
repz
cmp
mov
sarl
pop
test
loope
jbe
add
or
stos
inc
mov
into
insl
es
scas
pop
ror
idiv
dec
push
mov
pop
call
lds
inc
jg
aas
dec
mov
iret
aad
add
pop
xchg
outsb
cltd
scas
mov
jge
pusha
push
mov
call
add
push
cmp
imul
jb
jo
pop
cltd
jnp
ss
shr
xor
mov
or
jne
inc
or
add
dec
or
mov
bound
push
outsb
bound
add
outsl
pop
lods
outsl
je
pushf
loopne
iret
adc
ret
jns
addr16
div
inc
sub
orl
add
or
mov
sbb
addl
lock
and
push
cmp
int3
mov
insl
sbb
or
xor
add
cmp
std
lret
xor
stc
jb
loopne
dec
jecxz
sbb
xor
shll
inc
bound
popa
jmp
jnp
and
jo
mov
xchg
and
lds
pop
push
inc
out
int
bound
cmc
push
sbb
pusha
jae
xor
fwait
gs
jo
sub
popa
xchg
mov
cmp
lods
arpl
imul
lock
or
aam
bound
jb
or
dec
stc
pop
and
fldcw
or
call
js
sbb
cmp
push
dec
cmp
pop
lcall
repz
jp
dec
cmc
xor
adc
inc
fwait
xchg
sub
inc
push
jnp
lock
fsts
add
mov
jmp
jmp
rcrl
add
sub
mov
cmc
setne
cs
add
pop
shr
shl
lahf
popf
adc
sbb
mov
popa
stc
pop
ret
dec
sbb
dec
fcmove
add
or
and
in
push
dec
cli
inc
lods
inc
fdivl
mov
mov
testl
pusha
data16
adc
out
inc
jnp
add
mov
stc
sbb
out
lea
pop
lcall
mov
aas
and
push
outsb
jge
test
push
adcb
or
dec
mov
cltd
idivl
adcb
mov
sub
es
mov
or
rcll
movsb
hlt
pop
sub
cmp
js
cmc
inc
adc
push
xor
jp
cmpl
ja
mov
fildll
xchg
aad
rcl
ret
addr16
jae
add
xchg
ret
mov
loop
xor
popf
ja
out
ret
adc
pusha
test
sbb
cld
jge
outsl
push
jae
pop
lock
or
stc
jl
adc
sbb
sub
outsl
pop
in
and
mov
in
ja
mov
adc
mov
fcomps
fdivl
hlt
lret
daa
cmp
test
push
aaa
ret
test
and
mov
dec
imul
mov
lret
or
or
iret
inc
negb
push
frstor
jae
ss
arpl
and
cmp
cmp
mov
mov
xor
arpl
pop
sarl
sub
das
imul
popa
stos
mov
mov
sbb
call
clc
push
push
sbb
cli
into
inc
cli
ss
pop
adc
shrb
jae
and
sbb
jbe
daa
add
add
decb
sub
cmp
xchg
movsl
xor
out
or
dec
cmp
inc
imul
push
loope
pop
pop
in
cli
in
roll
push
jp
jl
xchg
push
push
cld
or
hlt
repz
es
ret
out
adc
sbb
insl
and
xor
mov
aam
bound
cmp
lods
adc
std
xor
das
rclb
shl
mov
adc
push
inc
js
outsb
arpl
cli
xchg
xchg
xchg
xorl
lcall
push
fstpl
sub
out
pop
adc
pop
int3
xor
mov
lds
cmp
xchg
pop
js
loopne
fwait
mov
cmp
or
arpl
jnp
lds
pop
xor
or
mov
in
push
inc
adc
ficoms
mov
sbb
push
push
lret
mov
or
mov
out
pushl
bnd
ljmp
adc
mov
mov
je
aaa
arpl
sbb
insl
pop
jp
shlb
xor
and
sub
sbb
out
cmp
int3
add
and
mov
add
mov
mov
jnp
neg
in
out
jno
fwait
in
testb
dec
xor
lahf
add
test
mov
dec
cmpsb
xor
cs
roll
mov
aam
dec
dec
and
and
insb
push
xchg
aas
loop
cmp
add
repnz
lock
fistpl
cmp
je
inc
je
out
push
cmp
shlb
or
sahf
jns
adcl
push
push
jecxz
imul
ret
loope
call
in
fnsetpm(287
adc
dec
popa
pop
popf
push
pop
jg
aam
push
sbb
jo
test
repnz
pop
jno
enter
addb
out
divb
cltd
push
cwtl
lret
jns
adc
jecxz,pn
inc
xlat
iret
cltd
loop
cmp
or
mov
inc
pop
push
icebp
or
inc
dec
hlt
sbb
sub
lock
aam
ficoml
sarb
push
mov
in
mov
jl
mov
das
lret
repnz
ret
xchg
jmp
scas
or
mulb
lock
lahf
mov
adc
push
pop
arpl
cmp
fdivrs
sbb
aam
dec
aam
sbb
xchg
dec
mov
je
aaa
loopne
sbb
inc
scas
sub
jp
push
repz
sti
mov
cmc
sahf
pop
data16
cmp
xchg
dec
cmp
cmpl
leave
pop
adc
shll
push
int
xchg
mov
cltd
add
aas
inc
mov
je
mov
pop
inc
jbe
pop
xor
mov
fsub
push
repnz
push
add
dec
int3
fdivp
jnp
adc
daa
movsb
xchg
pusha
xor
xor
add
sbb
scas
and
mov
cwtl
and
and
add
out
in
dec
decl
sbb
lret
adcb
mov
outsb
push
xchg
iret
in
jbe
lods
mov
push
and
gs
push
int
dec
xchg
rcl
les
movsl
enter
cmp
int
fmul
mov
aam
je
xchg
jnp
xchg
push
jne
or
pop
or
in
xor
xor
movsb
shrl
fstp
in
icebp
rorl
rep
bound
es
xchg
pop
push
call
pop
cmpsl
cmpsb
cmp
xchg
ret
xchg
leave
jb
jnp
lcall
jge
cmpsb
icebp
jmp
cmp
rol
imul
rorl
inc
nop
je
loop
pop
xor
js
push
add
out
or
test
cmc
fadd
push
popf
cwtl
scas
mov
enter
movl
add
add
mov
or
inc
push
xor
sbb
sub
sbb
inc
mov
push
inc
or
stos
push
aaa
les
cld
test
shlb
popf
fdiv
inc
popf
sarb
dec
call
xor
sub
mov
cmp
jnp
jns
outsl
int
je
movsl
adc
and
jae
cld
enter
jmp
sbb
ficoml
stos
sbb
adc
jg
and
mov
cld
xor
icebp
cmp
push
jp
and
cmp
call
insb
jg
les
mov
out
daa
mov
xchg
shlb
int3
clc
andl
movsl
xchg
ret
xor
ror
jbe
xor
and
xor
out
mov
jbe
stos
cmc
shrb
xchg
sub
idivl
inc
aam
repz
lods
call
insb
push
push
je
mov
cld
jge
mov
adc
adc
bndstx
dec
inc
ret
xor
ljmp
inc
lcall
cmp
cmp
outsl
in
fdivrl
fs
test
inc
mov
fbstp
es
jo
pop
cmpsl
mov
aam
pop
fiaddl
jo
inc
ss
leave
inc
xchg
imul
fdivrp
arpl
pop
rorb
cltd
mov
addr16
mov
dec
xchg
arpl
pushf
mov
jb
or
lds
hlt
xor
mov
xlat
lods
lea
adc
add
adc
xchg
add
mov
nop
sbb
jno
hlt
jp
sub
imul
inc
sbbl
orl
xchg
push
stos
xor
fmull
ljmp
sub
xor
push
mov
out
lods
adc
adc
xchg
cld
pusha
lahf
adc
jl
shr
mov
call
inc
das
push
ss
mov
jno
pop
out
mov
mov
jbe
scas
mov
xchg
pop
pop
push
das
push
push
rorl
cmp
nop
pop
jo
xchg
movsl
add
and
xlat
and
jnp
jnp
dec
roll
jbe
ret
scas
dec
sti
push
mov
mov
aad
lahf
inc
inc
aaa
sbb
iret
movsb
xor
loopne
negl
or
push
test
xor
jne
fcomps
inc
sbb
lods
xchg
sbb
lahf
mov
das
push
adc
jne
in
mov
cmp
adc
and
cltd
or
lret
dec
xchg
pop
jg
xor
decb
call
cld
in
imulb
or
pop
dec
nop
imul
out
mov
lods
mov
dec
and
adc
jg
push
test
dec
dec
jecxz
adc
out
js
ss
les
cwtl
and
in
fistps
je
sbb
sbb
push
xchg
adc
mov
cmpsl
in
repz
xchg
push
inc
daa
sub
adc
mov
xchg
and
push
outsb
dec
cmp
leave
push
jae
xor
negb
mov
mov
cmp
imull
jmp
fidivs
pop
rcll
cmp
outsb
adc
pop
pusha
std
ds
mov
dec
xorb
andb
and
push
mov
shrl
xchg
xor
movsl
cmc
scas
and
test
pushl
enter
stos
add
sti
mov
mov
js
das
test
aad
sbb
xchg
lods
xchg
into
test
mov
fdivrp
jle
sbb
insl
xchg
iret
out
in
jg
push
call
repnz
dec
ja
ret
inc
fildl
fcmovnbe
adc
out
dec
cmp
dec
cs
add
or
or
js
inc
das
aad
pop
pop
xorl
sbb
in
aaa
ja
aad
and
cltd
imul
mov
hlt
add
fwait
add
cli
stos
xchg
iret
rclb
pop
jle
jecxz
subl
and
aaa
test
sti
into
sarl
or
jl
arpl
push
stc
sub
sar
mov
dec
dec
ljmp
cmp
mov
push
scas
stos
jp
imul
sub
cmp
cltd
dec
insl
mov
sbbl
pop
fists
dec
pop
mov
mov
jnp
pop
dec
push
mov
add
inc
and
add
pop
loope
test
nop
lock
pop
les
pop
insl
stos
xchg
xchg
mov
lods
dec
cltd
add
jl
pop
jecxz
xchg
cmp
iret
mov
je
fimuls
cs
cli
push
dec
aad
or
lret
mov
jle
in
jg
test
lods
jmp
sbb
inc
rcll
xchg
jecxz
or
xor
and
cmp
pop
iret
divb
into
dec
mov
outsb
sbb
aaa
mov
mov
inc
out
and
cmp
and
or
je
mov
lds
inc
in
push
and
rcrb
into
div
test
pop
ret
nop
shlb
and
shll
mov
pop
scas
out
lret
fdivl
inc
push
cs
in
shlb
stc
pop
sbb
mov
sub
out
dec
push
sahf
int
xchg
cmp
and
std
mov
mov
enter
or
mov
lret
imul
je
mov
fs
in
repz
sub
inc
xchg
mov
clc
mov
and
cltd
pop
jmp
cmc
movsb
loopne
xor
aas
outsb
cmc
jge
adc
mov
sub
rcl
lods
cmc
fsts
jge
fwait
les
inc
icebp
mov
fsubrl
xor
sub
dec
inc
out
adc
cmp
cmpsb
jl
xchg
sub
xchg
pop
pop
xchg
cli
sahf
imul
repz
mov
arpl
mov
push
fistl
inc
js
inc
add
xchg
cltd
xor
add
jl
adc
sar
xor
adc
push
aaa
push
insb
and
and
leave
jns
fwait
pop
mov
xor
lods
pushl
jo
test
adc
mov
add
sti
and
push
cmc
inc
mov
shrb
cmovbe
push
ret
repz
test
push
cmp
cmp
faddl
insb
xchg
int3
sbb
nop
jmp
mov
mov
jae
out
addl
scas
jp
lahf
fsubp
jl
mov
dec
fldenv
xchg
cs
lock
scas
mov
xchg
mov
movsl
pop
sbb
in
test
cmpsb
aaa
pop
push
jnp
repz
cltd
mov
and
sbb
bound
push
or
mov
inc
mov
inc
push
and
ja
cmp
xor
in
ljmp
add
frstor
xor
ret
iret
shrb
lret
inc
mov
data16
loop
xchg
sub
push
and
mov
aaa
test
pop
inc
scas
jmp
mov
adc
pop
pushf
jl
pusha
mov
push
and
pop
fs
cmp
div
outsl
and
stos
pop
dec
aaa
mov
loope
adc
or
cmp
pop
mov
lock
aad
sub
inc
sub
or
or
dec
sbb
or
fmull
sub
enter
insb
test
push
aaa
out
dec
lock
cmp
scas
mov
cmp
and
daa
lret
clc
add
cltd
movsl
jnp
or
fdivp
shl
adc
cmp
lea
pusha
push
mov
jnp
mov
outsl
hlt
cmp
dec
mov
pop
mov
xchg
movl
scas
ljmp
out
inc
cltd
out
sub
adc
mov
add
xor
jbe
scas
cwtl
mov
cmp
xchg
push
fistl
sub
sbb
icebp
inc
je
bound
or
cmpsb
push
movb
icebp
arpl
daa
sub
and
push
gs
lcall
int
xchg
push
push
push
mov
mov
aam
lock
movsl
inc
cld
repnz
shll
lahf
mov
aad
jno
data16
sub
test
outsl
jg
xchg
and
xor
fidivs
popa
cmpsl
test
add
insl
leave
or
aad
test
mov
push
loop
mov
loope
aad
fistl
imul
inc
fucomp
int3
jnp
ss
mov
pop
mov
mov
stc
cmp
fmul
xor
hlt
sub
or
in
mov
cmp
fidivrs
pushf
ja
in
mov
inc
mov
test
mov
cmovg
adc
mov
les
dec
xor
inc
and
ljmp
mov
dec
cwtl
and
fs
lds
out
pop
sub
jp
jle
pop
arpl
cli
orl
int3
aam
push
xor
jnp
push
and
aad
push
cmpsl
and
jmp
out
dec
xchg
mov
imul
scas
mov
aam
sbb
mov
cmp
ret
adc
repnz
popa
mov
adc
shrl
mov
push
jb
adc
je
mov
outsb
stc
loope
sbb
movsl
push
aaa
add
sub
fnstenv
adc
dec
rol
lods
push
mov
adc
jecxz
mov
mov
inc
pop
jge
insl
sbbl
movsl
fnstsw
add
mov
popf
pop
ficompl
rep
pop
mov
push
adc
pusha
das
mov
jecxz,pn
cmpsl
scas
xchg
mov
ja
daa
dec
inc
xor
cs
cwtl
cwtl
bound
jnp
mov
push
jmp
jns
jne
jne
xchg
dec
push
sbb
jno
movsl
dec
faddl
xchg
pop
fidivl
adc
into
jmp
push
inc
repnz
lahf
lods
rcrl
fisubrs
pop
imul
pop
pop
mov
mov
mov
test
imul
or
div
add
fidivrs
jecxz
data16
mov
clc
aas
sti
ret
pop
cmp
enter
mov
shrb
aas
add
pop
das
and
fcmovnb
add
es
lds
mov
insb
lock
mov
inc
jmp
push
das
mov
ljmp
insl
jo
mov
in
xor
sbb
arpl
hlt
mov
mov
icebp
mov
pop
and
nop
sbb
test
loopne
mov
cmpsl
mulb
add
aas
mov
adc
add
out
inc
jns
in
shr
mov
dec
mov
std
cmp
fdivs
adc
rcl
push
stc
jno
outsl
arpl
mov
mov
dec
push
push
jae
push
arpl
mov
orl
lock
inc
lods
pop
push
sub
pop
test
push
mov
repnz
cld
pop
pop
or
pop
inc
push
lret
add
mov
cmp
push
jb
sti
ss
repz
cwtl
into
pop
stos
pop
incb
lods
ret
mov
xchg
push
gs
rclb
jg
nop
jns
dec
and
stos
mov
xor
cmp
push
aad
mov
je
pusha
mov
orb
xchg
fldcw
pop
int
cwtl
jo
xchg
jns
sbb
js
dec
jle
stos
xor
test
xor
jle
cmpl
sub
gs
mov
add
lods
xor
lret
xor
push
sub
aaa
cli
jne
dec
cwtl
popf
loop
sub
fldenv
fsubrs
sbb
lods
pop
rorl
inc
xchg
ds
je
mov
mov
test
mov
shl
jns
and
addr16
and
fidivrs
test
cmpsb
add
cltd
push
add
ret
inc
sbbl
flds
loopne
ret
add
mov
adc
push
pop
mov
cld
jno
fstl
movsb
and
lea
xor
or
dec
fwait
iret
dec
xchg
js
pusha
int3
in
mov
test
adc
hlt
xor
popf
cmp
cs
adc
push
mov
cmp
jl
mov
ja
aam
mov
test
mov
cmp
push
aaa
inc
push
xchg
mov
imul
lds
jmp
test
sbb
inc
and
int
ljmp
or
add
sbb
scas
pop
pushl
inc
cmp
addr16
insl
nopl
sbb
js
loope
mov
push
hlt
inc
xchg
sbbb
repnz
add
dec
cmp
bound
stos
mov
fisubrl
fldcw
push
dec
addr16
call
dec
sbb
pop
pop
cmp
in
int3
sub
pop
hlt
adc
mov
flds
gs
push
add
xor
fdivl
xchg
mov
mov
push
cltd
xchg
dec
cwtl
lret
xchg
xor
xchg
lock
mov
sarb
xlat
sar
imul
divl
xchg
loopne
xchg
jl
mov
fneni(8087
mov
sbbb
mov
push
movsb
mov
stos
mov
adc
or
or
jns
pushl
leave
es
outsl
xor
sahf
sbb
and
and
xchg
or
push
push
push
aad
imul
mov
mov
pop
push
fwait
subl
mov
xchg
rorl
fstl
test
faddp
je
hlt
xchg
cmp
addr16
adc
out
vpminsw
add
iret
or
movl
outsl
sub
fsubrs
xlat
clc
cmp
lods
rol
xchg
cltd
stos
inc
push
jle
nop
out
inc
mov
outsb
xchg
shrl
stc
repz
sbb
lods
jl
lcall
lret
lock
jg
rcrb
sub
xor
mov
push
mov
push
inc
shrb
push
inc
mov
fistpl
mov
sbb
push
movl
cmp
ret
je
push
ja
pushf
call
inc
fs
cmp
dec
into
imulb
js
pop
loop
pop
and
and
std
mov
ljmp
xor
cmpsl
pop
lret
fimull
push
ds
sbbb
inc
loop
sahf
mov
add
into
and
xor
lcall
pop
mov
in
outsl
add
or
insb
jo
lcall
push
mov
cmc
int3
lret
rorb
icebp
lds
in
mov
bound
lcall
mov
sub
je
test
aad
mov
pop
cld
xor
daa
or
aad
loope
and
in
mov
push
scas
ja
loopne
fs
cmp
ret
fwait
push
xchg
fistps
insl
enter
push
movsl
out
inc
mov
jae
mov
jg
pop
inc
loope
adc
push
jb
pusha
sbbb
jmp
xor
xchg
adc
mul
pop
mov
rolb
arpl
dec
jle
pop
lret
pop
and
push
stc
pop
fadds
jo
and
sarl
jge
push
outsl
or
out
dec
adc
movsl
sbb
pop
cmpb
pop
andl
out
fs
sti
jbe
into
cmp
xor
int
push
pop
jle
sbb
xlat
int
imul
sbb
pop
ja
addr16
or
jo
lret
lds
xor
lods
add
xadd
clc
push
test
popa
mov
sbb
sti
inc
sub
cmp
test
xchg
lods
dec
fsubl
and
aam
sti
inc
ret
xor
push
adc
mov
jae
sub
les
mov
add
pop
icebp
aam
mov
data16
andl
cmp
or
and
cmp
rclb
dec
xor
sbb
aad
pop
adc
jbe
scas
fnstsw
or
jge,pn
push
hlt
adc
xlat
xor
int3
ja
out
pop
iret
or
enter
fwait
xchg
clc
pushf
shlb
out
mov
ljmp
push
outsb
arpl
cmpsb
add
fldcw
aas
jne
addr16
jg
lea
mov
fistpl
cmpsl
mov
ja
lcall
test
movsl
xor
jb
decl
mov
add
rcrb
push
inc
or
into
push
leave
xor
mov
aam
cmp
or
and
insb
inc
fimuls
rcl
enter
inc
jmp
pop
dec
out
dec
pop
sub
adc
add
cli
mov
push
mov
pop
clc
inc
mov
cltd
cmp
mov
mov
xchg
and
cmp
adc
insb
cmp
or
or
adc
aaa
aas
or
sub
cli
sbb
lods
sbbl
aad
js
cmp
out
and
test
cmpsb
cmp
lcall
stc
hlt
jno
inc
push
inc
jecxz
or
out
xor
xor
pop
mov
inc
mov
sbb
popa
test
sub
andl
sbb
cmp
cltd
ficoml
sti
jno
cmp
ret
jle
jns
ss
cmp
loop
jmp
sub
cmp
jbe
aad
push
mov
sbb
push
xchg
or
ret
push
ljmp
fcomp
mov
clc
sbb
fcoms
mov
or
mov
pop
in
ds
or
lea
es
push
pop
sub
or
jl
jb
iret
dec
push
ja
aad
rcl
std
loopne
dec
pushf
out
mov
mov
pusha
lock
sub
test
sbb
pop
dec
daa
movsl
data16
fs
aas
cmpsl
sub
or
test
sub
pop
adc
xlat
inc
ds
push
dec
or
test
outsb
mov
sub
out
sbb
cs
and
cwtl
xchg
jge
lcall
fdecstp
out
lds
fnstcw
sub
cmp
fmull
dec
fwait
pushf
cli
popa
fsubrs
scas
cmpsb
int3
dec
add
sub
fwait
das
pop
inc
fbld
mov
push
dec
in
aam
add
pop
sub
add
adc
repnz
xor
in
dec
dec
xorb
cmc
in
xor
lock
pop
mov
inc
loop
sbb
jbe
pop
xchg
hlt
imul
mov
negb
adc
outsb
cmp
sub
mov
pushf
adc
out
mov
and
jne
into
jne
or
mov
in
roll
fldcw
sub
push
nop
xor
aam
dec
and
fisubs
jns
jb
fstpt
push
out
or
cmp
or
pop
int3
xor
lcall
pushf
mov
push
xchg
jbe
add
ret
mov
cs
fdivl
aaa
mov
mov
ljmp
imul
push
adc
cwtl
pop
out
es
out
sti
dec
cmc
pop
es
mov
imull
or
dec
cli
es
adc
outsb
cmp
fidivrs
pop
psubusb
nop
mov
mov
rcr
push
shlb
test
and
dec
ss
jl
rorl
lock
push
xchg
push
xchg
jae
adc
dec
fdivl
insl
imul
sbb
sub
pop
sub
call
stc
lock
xchg
mov
ljmp
outsb
add
mov
and
shll
in
jl
mov
repz
out
xchg
rcll
sarl
xorb
pop
mov
xor
xor
lahf
mov
pop
out
sbb
out
xchg
ret
adc
jp
rcr
rcrl
adc
jl
sbb
call
sub
popa
pusha
cmp
aaa
lcall
popf
test
jecxz
js
xorl
jnp
popa
les
imul
pop
mov
xchg
and
stos
rclb
pop
cwtl
inc
loope
and
test
scas
mov
sbb
in
mov
js
or
push
cmp
leave
movsb
pop
pause
xchg
scas
push
cmp
imul
push
jle
and
mov
sti
mov
loope
sahf
xchg
mov
xchg
loop
xchg
sbb
fsubrs
mov
icebp
mov
ret
pop
cmp
xor
dec
cmp
fistpll
push
fs
repz
dec
jo
aam
test
test
imul
pop
adc
ficompl
mov
jge
lods
xor
push
popa
fidivrl
popa
scas
mov
fwait
xchg
cmp
adc
aad
or
adc
movsl
outsb
mov
sub
mov
cmp
jno
sbb
shlb
xchg
sub
push
popf
or
insl
ljmp
mov
test
jg
dec
adc
add
std
xchg
push
jecxz
dec
incl
jbe
add
cmp
push
dec
xor
mov
call
push
or
lock
mov
push
fdiv
push
test
mov
lods
outsl
int
inc
out
xchg
mov
jle
xor
jg
adc
sub
movsl
cmp
cmp
stos
adc
pushf
mov
clc
or
push
sbb
adc
shll
mov
dec
mov
adc
jns
dec
jo
popf
push
sub
jo
push
cmc
pop
iret
adc
fsubr
dec
push
xor
mov
ja
pusha
cmpsl
and
pop
jo
sbb
fs
jg
jp
out
aaa
sub
test
pop
cmc
lea
sub
mov
fdivrs
sub
sbb
loop
into
push
push
lods
inc
inc
xor
lret
scas
fidivrl
push
rcll
inc
pop
pop
popa
push
ljmp
ret
mov
test
cmp
and
sbb
fs
enter
inc
aas
and
sbb
and
in
int
popa
pop
les
jae
mov
jbe
scas
dec
or
mov
aaa
push
loopne
mov
cmpsb
xor
divl
push
rolb
xlat
lock
faddp
add
stc
sub
inc
mov
and
add
add
pushl
ja
repz
adc
jl
xor
xor
dec
dec
pushf
fcmovu
sub
fcoms
mov
scas
decl
sbb
jge
ss
pop
andl
sbb
inc
pop
sbb
scas
cmpsb
cmpb
inc
imul
bnd
mov
in
jmp
shrl
les
push
inc
into
inc
xchg
std
enter
pop
mov
leave
or
testl
cmp
mov
inc
test
dec
adc
xor
add
fisubrl
rorl
mov
ret
pop
adc
lret
and
mov
push
lods
addr16
fcmovnbe
inc
loop
ss
or
out
enter
xchg
aad
push
dec
mov
inc
inc
add
push
jmp
cld
add
fwait
ss
in
jne
dec
add
and
outsl
dec
in
loopne
fsts
mov
repnz
adc
in
nop
mov
pop
sbb
movsl
and
mov
push
mov
sahf
out
mov
int
mov
cmp
inc
sahf
sbb
mov
add
in
adc
jle
xchg
lcall
in
scas
cmpsb
js
dec
sub
aas
mov
out
sbb
jle
shrb
or
adcb
jmp
cmpsb
jno
inc
fwait
lods
xchg
cmpl
pop
dec
in
mov
lods
xor
fdivs
mov
jns
lret
xor
mov
loopne
mov
xor
xor
add
adc
ret
std
sub
scas
cli
mov
imul
dec
lods
movsl
mov
loopne
and
pop
int3
dec
jecxz
sub
mov
adc
cmc
xor
push
scas
aaa
mov
cld
push
push
in
mov
fmull
push
bound
mov
jo
inc
jmp
pop
scas
cmp
movsl
mov
test
dec
push
leave
adc
pop
ret
lock
jp
jg
mov
repnz
xchg
fmulp
das
pop
dec
sbb
sarb
pop
cmp
stc
add
or
int3
mov
sbb
sub
outsl
mov
mov
cli
repnz
mov
inc
aad
cs
bound
pop
imul
xor
xchg
jo
dec
add
test
push
inc
fbstp
add
jge
lds
or
les
popf
inc
sar
clc
dec
fwait
jae
mov
inc
fwait
sub
jl
inc
gs
call
fsubrl
popl
or
adc
sub
mov
ret
cs
xorl
cmp
gs
lahf
int3
outsl
repnz
out
shll
rclb
jecxz
loopne
rolb
jns
adc
jmp
sub
jae
cmp
in
xor
insb
pop
pop
add
sub
int
xor
mov
lods
pop
jecxz
and
je
addr16
outsb
fmull
inc
pop
xor
ds
fldt
pop
push
das
loop
or
push
xor
push
push
sbbl
leave
roll
pop
pop
movsb
aaa
lea
test
in
sbb
lahf
mov
add
pushf
jle
push
push
sub
subl
ds
mov
sbb
scas
mov
arpl
mov
xchg
adc
jecxz
mov
pop
jno
cltd
repnz
sbb
out
inc
bound
divb
dec
add
cmp
mov
sbb
fs
roll
pop
or
adc
stos
stc
cmp
xchg
mov
addr16
adc
loope
popa
ret
sub
mov
dec
cmp
insb
mov
pusha
mov
xor
popa
lock
fidivs
sbb
mov
lock
mov
and
mov
xlat
inc
test
rcrl
icebp
sub
xchg
pop
bound
pop
sarb
sbb
mov
test
jg
jne
out
rol
or
cmp
pushf
sbb
sbb
into
or
sub
jle
push
pop
mov
push
in
adc
mov
xor
sub
add
sbb
insb
fnstenv
cwtl
mov
mov
outsl
loope
adc
ret
shrl
add
into
stos
xchg
mov
pusha
and
sbb
jns
or
mov
jle
and
je
mov
and
pop
lds
in
outsb
jp
inc
mov
and
xor
das
mov
pop
data16
test
sti
xchg
ljmp
and
xchg
pop
and
sbb
js
add
or
xchg
repnz
imul
cmp
cmpsb
outsl
adc
mov
imul
call
cmpsb
jnp
xor
fcompl
and
push
add
adc
movsl
leave
daa
mov
cmp
dec
into
scas
bound
ficoml
arpl
test
inc
push
scas
mov
mov
ficomps
decl
cmp
sub
cmovnp
testl
jae
shll
shll
jp
jb
out
xchg
faddp
cmp
loopne
inc
out
pop
leave
mov
xor
push
jb
aas
pop
mov
inc
ljmp
lcall
aaa
int3
adc
xor
jge
and
test
clc
imul
fsubl
sub
xlat
and
inc
dec
sub
or
mov
sub
cld
dec
nop
jno
scas
lahf
cmp
inc
mov
add
cmp
mov
xor
or
leave
inc
or
sub
insl
or
or
or
inc
hlt
rclb
mov
int3
jb
xor
call
jge
lods
arpl
cld
jle
addr16
or
sub
test
push
stos
les
mov
jbe
lds
ret
cmove
aam
xchg
pop
lret
jbe
mov
fidivl
sti
xor
and
jl
lods
push
sub
xchg
rcrl
adc
movsl
dec
mov
fidivs
jp
jb
cwtl
mov
hlt
rorl
push
lcall
mov
arpl
repz
push
fcmovu
mov
dec
lahf
adc
mov
jne
xchg
jle
fisttpll
mov
pop
cmpsb
pop
shll
mov
cmp
call
jp
call
dec
pop
ds
push
movsb
dec
daa
inc
test
dec
in
arpl
sub
enter
movsb
dec
mov
mov
lods
ss
cmp
into
ljmp
mov
lock
daa
aam
out
call
sbb
xor
sbb
inc
sub
mov
xor
pop
sub
sahf
xchg
fnstsw
jle
xor
push
and
jno
sub
and
jle
dec
adc
pop
and
sbb
push
dec
or
pop
jno
jg
addr16
xor
xchg
pop
stos
enter
fwait
aaa
es
sbb
shll
dec
or
aam
lahf
lock
popa
inc
dec
xchg
and
arpl
int3
sbb
xor
add
add
xchg
jle,pt
xchg
jb
sub
mov
mov
jno
mov
cmp
mov
add
loope
lods
mov
lds
aaa
sub
mov
and
repnz
ficoml
iret
mov
aaa
push
mov
mov
jo
out
jecxz
sub
pop
fistps
pushl
test
xchg
pop
push
lock
cld
rorl
cwtl
shrl
mov
jae
std
dec
jbe
mov
xor
es
dec
icebp
fs
sbb
adc
or
cwtl
cmp
mov
int
enter
add
push
sti
lods
lea
jmp
test
inc
cmp
pop
jge
and
je
mov
sub
mov
xchg
mov
mov
ret
das
aaa
dec
ret
inc
call
push
sub
ja
push
pop
sbb
mov
icebp
shl
stos
int3
outsb
pop
and
jp
ja
push
sub
out
or
in
xchg
cli
scas
jp
out
clc
add
imul
scas
push
arpl
out
cmp
outsl
or
pop
out
test
sub
and
hlt
insl
int3
mov
push
or
pop
inc
cwtl
mov
mov
pop
inc
stc
int
daa
aaa
inc
jns
out
mov
inc
hlt
shrl
xor
mov
in
pop
scas
mov
push
ja
pushf
mov
mov
std
pop
xor
xor
add
inc
imul
push
test
dec
mov
push
je
pop
and
repnz
je
jns
aam
adc
xchg
ret
cmp
in
scas
arpl
test
mov
pop
lret
test
cmp
adc
sub
in
daa
fnsave
test
push
adc
push
aam
mov
jno
into
inc
xchg
mov
xchg
ret
mov
xor
std
jge
dec
into
dec
cmp
mov
sub
jecxz
mov
leave
push
loopne
faddl
mov
jb
sahf
js
xchg
push
or
sbb
lret
inc
jg
xor
leave
mov
int3
sar
mov
cmpsl
rorl
jb
xor
lret
pop
in
aad
add
js
push
int
call
or
sub
sar
enter
test
repnz
xorb
pop
repnz
lret
xchg
cmp
or
mov
dec
test
int3
sbb
mov
cmc
push
and
lret
pop
and
fsubrs
jo
je
cmpb
xor
data16
pop
shlb
ret
adc
or
aas
adc
xor
push
adc
sbb
and
hlt
mov
xlat
int3
or
inc
mov
outsl
cmc
aas
sub
pop
sub
sbb
icebp
mov
imull
and
mov
clc
push
cmp
xchg
lds
fnstenv
jg
mov
inc
pop
mov
push
scas
fildl
xchg
sti
js
and
data16
ss
lahf
mov
jmp
inc
sahf
stos
sbb
cmc
jecxz
and
rcll
dec
jno
mov
or
or
sbb
scas
xchg
loope
push
mov
mov
call
and
pop
bound
or
push
jecxz
or
outsb
xor
fdivs
ret
add
cmpl
mov
inc
push
movsl
push
iret
stc
xchg
jnp
and
pop
xchg
sub
mov
push
cwtl
xorl
dec
xchg
imul
subl
in
inc
sub
jbe
pop
jbe
dec
sarl
mov
icebp
ret
imul
add
mov
shlb
inc
out
rolb
les
fs
mov
scas
or
mov
add
pop
arpl
push
stos
cmc
jbe
mov
push
data16
jnp
filds
out
push
sub
stos
jge
int
add
xor
jne
dec
pop
inc
sbb
test
add
jno
pop
pop
clc
sbb
mov
pop
nop
cmp
push
cs
scas
xchg
arpl
fcomps
and
and
cmp
fildll
fwait
jecxz
insl
imul
xchg
pop
and
push
mov
mov
adc
pop
loopne
rcrb
push
cmpsl
add
add
out
fnsetpm(287
dec
jp
adcb
addb
cmp
or
and
ficoms
jno
ret
xchg
enterw
sbb
ds
jg
shrl
push
ja
or
test
scas
xchg
mov
lock
push
fdivl
jb
outsb
aam
in
adcl
jno
lock
nop
lret
sbb
lods
jae
xchg
out
xor
jg
push
or
scas
enter
inc
sbb
cmp
adc
ja
jne
int
sbb
sbb
mov
inc
cltd
lahf
lret
sbb
push
and
add
sub
mov
dec
xchg
xchg
jmp
rorl
cmp
dec
sbb
xor
pop
pop
mov
or
or
fs
fldt
sbb
xchg
mov
andl
xor
rcll
test
adc
push
das
daa
xchg
mov
jae
jae
push
fidivl
adc
adc
fimull
shrl
push
adcb
mov
jecxz
shlb
imul
out
mov
sub
jecxz
in
inc
mov
and
icebp
adc
sti
fisubrs
xchg
js
idivb
int
xchg
cld
pop
lock
cltd
lods
mov
idivl
aas
rcrb
rol
aad
add
test
sbb
cld
jo
icebp
out
rcrl
pusha
popa
adc
or
in
popf
outsl
add
js
stos
mov
stc
data16
aaa
sbb
enter
mov
call
js
ja
and
or
gs
int
int3
dec
cmp
jge
pop
dec
pop
mov
sahf
ret
sub
sahf
loop
sti
in
jne
ret
inc
cmp
popf
sub
fisubs
rcrl
adc
sub
or
rcll
jmp
loope
xchg
addl
or
jno
pop
and
cli
into
inc
cld
sub
inc
orl
sbb
rcll
es
icebp
pushf
cmp
in
inc
push
lea
dec
cs
loop
xchg
xor
inc
xor
cmc
push
push
mov
jge
mov
inc
imulb
stos
or
cmp
push
mov
mov
mov
dec
and
int
xor
lock
cmp
pushf
insl
fisubrs
rcrl
mov
mov
xchg
scas
popf
pop
mov
pop
cmc
pop
or
adc
movl
repz
sbb
sub
xchg
push
pusha
lahf
out
ja
cmp
adc
inc
fnstsw
xchg
inc
push
fs
sub
fisubs
fwait
mov
mov
inc
cmpsl
ror
mov
pop
cmp
outsb
addr16
mov
xor
sub
pushf
xor
inc
lcall
sub
into
std
loopne
xchg
insl
lods
xchg
xchg
mov
push
adc
mov
xor
pusha
sbb
test
fsubs
out
js
ds
repnz
daa
sarl
int3
or
lods
adc
inc
push
fs
adc
lock
mov
adc
push
sbb
xor
add
out
add
movsl
pop
dec
pop
fnsave
cli
scas
outsb
ja
push
popa
mov
inc
xchg
adcb
stos
notl
dec
mov
out
cmp
loope
lock
jl
dec
je
dec
clc
pop
cmp
adc
imul
inc
popa
fnstcw
es
idiv
into
xchg
dec
decl
jmp
out
add
pop
sub
mov
fcomps
mov
mov
sbb
sbb
bound
in
popf
cltd
lods
inc
sbb
sub
dec
mov
mov
ret
loopne
rolb
ret
test
hlt
mov
insb
stc
out
stos
mov
adc
jg
adc
stos
mov
mov
push
ret
dec
nop
inc
scas
pop
xor
mov
in
jne
push
imul
add
xchg
xor
dec
pusha
outsl
sti
leave
andb
mov
inc
insb
and
fs
adc
xchg
inc
jo
or
sbb
repnz
inc
pop
push
ljmp
push
xchg
cs
mov
mov
mov
or
loopne
mov
sbb
sbb
jnp
movsl
mov
hlt
scas
dec
aas
inc
nop
enter
pop
adc
dec
dec
fs
jmp
mov
sub
addb
out
pop
mov
shrl
repnz
jb
out
insb
mov
jb
jns
mov
inc
jno
inc
pusha
out
mov
push
add
push
mov
nop
mov
in
mov
fnsave
out
add
in
jbe
inc
dec
inc
mov
movsb
jle
int
mov
cmp
jmp
out
nop
pop
cmp
xchg
xchg
es
aam
add
cmc
xchg
jmp
imul
and
pop
mov
mov
cmpl
pop
rorb
mov
addr16
cmp
ljmp
cmpsb
and
cmp
xor
inc
adc
lahf
dec
xchg
addr16
movl
jmp
jle
cli
scas
test
xor
push
mov
xlat
and
mov
imul
xchg
pop
lea
and
pop
pop
popf
mov
mov
mov
add
push
and
add
mov
mov
shll
lods
sub
push
pop
or
pushf
test
and
jb
stos
in
pop
mov
lret
pop
mov
mul
mov
fisubl
pop
outsb
jns
into
jo
lds
outsb
push
xor
je
jnp
shrl
iret
jle
orb
mov
or
in
jmp
cmp
mov
inc
dec
icebp
sub
or
xor
pop
mov
call
or
test
pop
cmpb
test
call
fimull
cli
push
sub
xchg
cmc
mov
push
sub
lret
addr16
pop
xchg
jecxz
inc
inc
mov
and
cmpl
adc
mov
sbb
mov
idiv
push
and
push
ss
int3
cwtl
jecxz
pop
pavgb
fidivl
inc
out
jns
add
imul
sarb
imul
and
divl
adc
int
xor
hlt
add
outsb
mov
ret
or
inc
loop
ds
cmp
pop
sub
pop
push
test
fistpl
bound
shrl
notb
js
faddl
fwait
pop
mov
mov
fnstenv
daa
cmp
int3
sarb
ds
jle
xor
xchg
jp
push
stc
je
xchg
cmpsb
inc
inc
sbb
daa
push
push
mov
mov
cmp
and
cltd
add
add
xchg
loop
push
sub
xchg
xor
iret
cmp
rorl
loope
addb
lret
popa
dec
je
rcl
mov
xchg
lock
sbb
adc
add
fcom
test
sbb
scas
cmp
cmp
pop
jecxz
fbstp
jno
js
or
sbb
xlat
or
js
stos
mov
ftst
idivl
daa
adc
mov
lret
popa
mov
cmp
inc
das
xchg
sub
lret
incb
mov
add
cs
jno
jmp
xchg
adc
push
in
mov
xchg
push
outsb
sub
jnp
cmp
fiadds
pop
cltd
mov
dec
shr
in
vpaddusw
jae
mov
out
shl
ds
xchg
pop
aad
fucomi
in
inc
push
and
jno
int
inc
xchg
jle
popf
lret
testb
or
ret
mov
test
cs
cld
xchg
repnz
sub
adcl
jae
mov
jae
ret
cwtl
jnp
sbb
std
sbb
mov
out
mov
sub
push
lahf
mov
push
cmpsb
push
cmp
cmp
sahf
sti
cwtl
dec
push
pop
mov
loope
cmpl
inc
lods
dec
mov
dec
sbb
jge
lahf
mov
inc
xchg
jb
mov
xchg
leave
push
inc
in
mov
std
mov
add
sarl
or
cmc
fbstp
out
test
into
pop
and
pop
loopne
into
popf
and
pop
adc
push
rcrl
mov
mov
jg
lcall
lret
cmp
gs
out
jg
xchg
fcmovnb
sub
loop
push
int3
pop
dec
pop
repz
inc
sbb
rcrl
scas
pop
stos
cmp
cwtl
mov
push
fists
jnp
cmc
xlat
pop
je
mov
fistl
jae
fcom
mov
xchg
test
cwtl
push
and
or
fmuls
push
loop
test
sbb
sarb
jmp
movsl
insb
jp
jp
nop
lock
mov
cmpsb
pusha
ljmp
popf
add
inc
test
mov
xor
mov
or
mov
int
dec
mov
pop
sub
in
negb
pop
xor
mov
in
cli
outsb
insb
add
push
mov
inc
push
jle
push
jbe
test
mov
imul
jge,pn
mov
out
scas
xchg
mov
add
stos
or
ds
orb
cmp
lock
dec
out
dec
cmc
sti
nop
das
inc
scas
dec
lret
add
xchg
cmc
xchg
pop
movsb
push
add
jns
int3
mov
shlb
push
xchg
pop
sbb
scas
jg
cld
scas
sub
enter
ljmp
lcall
rcll
ja
or
mov
xor
icebp
xchg
lcall
mov
and
jg
push
rcl
mov
push
mov
rclb
rclb
js
xor
daa
cmp
aad
mov
test
out
push
push
xchg
js
shll
mov
cs
adc
add
inc
dec
std
adc
lea
es
push
sbb
pop
mov
xchg
dec
aas
jb
cwtl
jnp
xchg
inc
mov
mov
adc
mov
stos
mov
inc
mov
addl
gs
pop
ret
inc
aam
fsubrl
in
sbb
push
mov
popa
nop
mov
test
and
push
jb
mov
andb
push
ljmp
xor
jmp
dec
push
fdivs
sahf
sub
mov
jmp
or
into
jnp
repz
push
cmp
adc
test
fsubr
mov
repnz
push
stos
add
add
push
mov
iret
cs
xchg
enter
xchg
pop
cmpl
arpl
cwtl
divb
icebp
gs
es
pushf
cld
leave
jae
add
pop
sbb
inc
adc
mov
movb
icebp
dec
jns
xor
stos
sbb
sbb
enter
loopne
lahf
push
mov
icebp
jne
stos
push
and
push
arpl
jmp
jbe
jle
mov
jl
cwtl
and
mov
call
or
stc
dec
pusha
mov
das
lea
movsl
dec
inc
outsl
mov
test
stos
xor
lea
inc
sub
ljmp
and
rcl
push
adc
loope
xchg
mov
add
jg
iret
sahf
xor
push
out
pop
stos
dec
push
push
pop
divb
insl
inc
ret
sub
mov
pushf
inc
pop
mov
sarb
stos
cmpsb
adc
into
mov
cmp
stc
add
ror
inc
outsb
test
dec
mov
sub
or
lock
test
test
int
mov
xor
mov
mov
scas
inc
pop
pop
jo
jp
fnstenv
mov
cmp
mov
mov
mov
mov
mov
xchg
sbb
jmp
sub
add
xor
test
sbb
mov
shlb
pop
push
and
aaa
cmp
cmp
sub
fisubl
aam
lods
cmp
int
mov
dec
aas
or
inc
xor
aad
dec
jo
or
popa
dec
add
adc
xchg
and
dec
stos
xor
push
adc
or
xor
insb
inc
or
cmp
jl
popa
call
idivb
cmpsl
cmp
popf
cmp
push
out
fisubl
ja
dec
mov
mov
popa
testb
and
data16
adc
adc
sbb
int
push
pop
pushf
pushf
fwait
in
push
or
pop
jb
std
std
push
sub
push
sub
fs
leave
rcrb
mov
mov
pop
clc
sar
inc
call
test
dec
xchg
pop
test
xchg
imul
stos
jnp
xchg
outsl
cltd
or
mov
mov
sub
cld
out
scas
daa
in
pop
test
das
inc
jnp
mov
push
into
or
arpl
pop
out
push
jae
and
call
test
in
push
stos
pop
cmp
pushf
scas
or
lds
outsl
cmp
sahf
ret
fadds
and
mov
test
jne,pn
sbbb
push
js
fcoml
insl
cmpsb
pushf
or
stos
jp
popf
sbb
add
jno
mov
loopne
cmpsl
dec
jl
xchg
adc
outsl
dec
mov
mov
repz
out
xchg
lea
mov
lock
add
jb
std
cltd
push
ss
pop
test
loopne
mov
sar
dec
or
sub
jno
xchg
inc
jp
jnp
xlat
and
sub
test
sub
aad
outsb
jne
or
nop
adc
xchg
mov
jnp
clc
push
loopne
dec
pop
outsb
mov
pushf
pop
cmp
inc
cmp
repz
xlat
fs
inc
shr
dec
test
push
cwtl
sti
outsb
and
sarb
push
imul
mov
and
push
cmp
mov
mov
fwait
push
mov
push
and
push
test
int3
nop
push
inc
add
cmpsl
ja
movsl
xlat
mov
pop
xchg
jp
lret
int
aaa
inc
rcll
dec
mov
insb
dec
add
lds
and
mov
or
mov
sub
jge,pn
mov
mull
inc
addr16
add
mov
add
mov
shll
insl
shrl
jp
jae
adc
into
lahf
loopne
ljmp
mov
mov
push
ret
push
mov
in
sbb
lock
leave
dec
mov
sub
mov
xor
scas
faddl
pop
and
mov
das
inc
inc
xor
outsb
push
les
pop
enter
adc
xchg
jge
sar
scas
cmpsl
add
iret
sub
xchg
lods
int
mov
bnd
push
shl
sub
lods
pop
fstpt
mov
dec
or
sbb
js
lea
cmp
sahf
addr16
push
mov
adc
mov
insb
inc
fmuls
jge
call
and
ja
jg
js
nop
sarl
cmp
in
xor
mov
lock
in
fldl2t
jp
sbb
aad
ret
lret
rcrl
mov
and
iret
dec
jnp
push
ficoml
jns
inc
ficomps
mov
pop
outsb
push
pop
subl
out
test
push
mov
ror
enter
pop
int
dec
or
pop
sub
push
inc
js
jle
and
jge
mov
ret
add
aaa
pop
add
data16
aam
or
xor
xor
sbb
pop
lods
mull
inc
cmc
pop
fsubr
arpl
lea
pop
mov
or
push
jecxz
rcll
sbb
jo
addl
push
jo
pop
test
bound
sub
pushf
nop
sti
aas
inc
jp
stos
sarb
and
cmp
inc
rol
out
or
cld
xlat
int3
out
lds
mov
or
or
inc
fcompl
leave
xor
pop
loope
cmp
stos
popa
mov
and
fcoml
enter
sbb
and
jbe
shr
mov
cltd
sbb
ljmp
std
in
add
insb
aam
out
int
add
in
mov
cmp
neg
adc
push
arpl
sbb
scas
addr16
sahf
adc
mov
and
jbe
mov
push
adc
pop
lods
or
and
test
fnstsw
enter
and
jb
hlt
mov
cmpsl
flds
lock
add
xor
push
clc
jns
enter
sbb
in
icebp
repnz
and
pop
dec
jne
mov
cmpsl
stc
sbb
adc
jge
adc
mov
add
fimuls
loop
repnz
les
push
rolb
sub
insb
jmp
mov
mov
icebp
mov
xchg
mov
jecxz
repnz
push
and
mov
sub
into
mov
pop
ss
inc
sub
sub
push
xchg
sar
sub
cmp
insb
das
mov
dec
mov
or
inc
je
out
pop
cmpsb
iret
aas
outsl
shlb
or
jae
sbb
pop
push
mov
mov
push
mov
mov
jbe
mov
loope
and
cmp
mov
outsb
lds
mov
cmpsb
or
faddl
inc
or
sbb
and
dec
es
shlb
mov
fiaddl
rcll
add
add
comiss
movsl
repnz
lret
mov
ja
ljmp
fstpl
js
movsl
adc
aam
mov
mov
nop
inc
in
aas
fdiv
sbb
pop
pop
arpl
rcrb
cmp
xor
and
test
sub
push
les
xchg
aas
ret
inc
inc
inc
dec
xor
and
mov
in
pop
fwait
add
sub
or
cmp
daa
jle
mov
shrl
cltd
insl
out
jge
jp
pop
inc
lret
fisubrl
sbb
add
push
sub
dec
iret
addr16
aas
gs
repz
in
xorl
add
cs
pusha
ret
popa
stc
sbb
test
scas
jg
xchg
insb
xorl
fcomi
cmp
or
ja
cltd
xor
mov
leave
xchg
das
or
addr16
out
ds
shlb
xchg
xor
xor
jnp
mov
cmpsl
mov
arpl
or
or
out
test
xchg
pushf
daa
xor
std
ja
mov
dec
xchg
mov
lret
sub
inc
loopne
add
push
dec
mov
hlt
shl
aas
mov
insl
mov
lcall
js
outsl
pop
pop
pop
stos
xor
test
fdiv
xchg
jge
addl
sbb
jl
mov
and
pop
sbb
jb
cmpsb
jae
shll
adc
mov
js
out
push
xchg
frstor
call
adc
fninit
ljmp
mov
push
sbb
popl
add
testb
mov
push
fiadds
bound
inc
test
and
imul
mov
ljmp
int
fnstsw
sbb
xor
push
push
outsl
pop
jmp
pop
je
push
push
pushf
sti
pop
lea
popf
jno
inc
xor
fdivs
sub
dec
xchg
scas
js
jne
and
ja
aaa
cli
test
xor
outsb
rcrb
bound
push
add
andl
cmc
insb
lea
xchg
adc
mov
les
stos
jmp
enter
popf
or
push
mov
ficompl
scas
cmp
or
aas
aam
sti
add
xchg
mov
jg
out
mov
jmp
ljmp
and
mov
daa
mov
aad
push
cmp
jp
sbb
sbb
test
jp
inc
lds
stos
imul
sbb
incl
jp
scas
les
dec
jo
push
or
inc
add
jnp
mov
out
fldenv
addr16
fisttpl
add
push
lods
mov
in
mov
icebp
loope
or
jg
lods
stos
xor
sbb
test
test
shll
jp
pop
lcall
push
pop
js
adc
mov
bound
and
pop
rcl
loop
jmp
movb
stos
jle
js
sarb
nop
adc
pop
jle,pn
cmpsb
jne
rcrl
int3
xor
and
mov
cld
jl
mov
mov
mov
mov
sub
mov
test
adcb
mov
pop
imul
fcomps
sub
imul
sub
mov
jno
movsb
cld
fimull
sbb
adc
es
dec
fcoms
repz
lcall
pop
mov
xor
cmp
outsl
cmp
stc
xchg
stos
push
or
push
jo
pop
cmc
adc
sbb
out
test
jns
jno
pop
dec
cltd
jmp
cmp
mov
jnp
test
mov
out
push
xchg
mov
nop
dec
enter
xchg
int
jbe
and
or
sub
je
mov
adc
push
pushf
cwtl
sti
js
idivl
andl
in
mov
leave
shrl
mov
pop
dec
mov
mov
mov
mov
xchg
xor
pop
aad
daa
sbb
dec
inc
nop
loop
or
test
and
cmp
xchg
test
sar
in
dec
push
clc
xor
scas
outsb
mov
xchg
xchg
jge
xchg
mov
xchg
xor
inc
in
or
mov
mov
fisubrl
dec
hlt
out
mov
addr16
incl
adc
fwait
mov
xor
push
loop
sbb
idiv
mov
cmp
loopne
inc
mov
rclb
dec
inc
mov
push
inc
lret
int3
popf
push
push
fwait
inc
dec
enter
or
mov
lods
adc
testb
in
sub
addl
rorl
test
dec
icebp
cmp
movsb
xchg
leave
test
pop
push
xchg
add
lock
into
dec
inc
mov
sbb
mov
clc
lahf
add
mov
cmp
sti
jne
cmc
mov
leave
aas
cltd
xor
into
jae
mov
repnz
in
fs
into
jecxz
add
mov
xchg
push
sahf
push
xchg
icebp
int3
mov
xorb
sbb
cmp
inc
addl
out
repnz
mov
mov
andnps
jle
mov
xchg
out
std
std
inc
popf
or
mov
xchg
sub
sub
mov
xchg
gs
lds
xlat
push
je
cld
shlb
sbb
addr16
sarl
cmp
sbb
push
jne
fdiv
inc
cmp
or
jo
lea
mov
fidivs
xor
fistpll
add
add
inc
pushl
jg
bnd
sbb
movl
jnp
inc
imul
adc
call
inc
mov
jne
das
stos
cmpsb
cli
xchg
or
adcw
mov
xlat
mov
mov
call
mov
cmp
sbb
pop
lods
cli
rcrl
jecxz
rcll
dec
inc
ret
and
xor
lods
or
jp
aas
xlat
mov
sti
in
pusha
fs
iret
out
mov
jo
mov
mov
repnz
loopne
mov
repnz
das
mov
and
sub
push
sbb
out
scas
dec
push
xchg
or
sbb
out
sbb
mov
movsb
jno
inc
pusha
add
pop
test
addb
inc
inc
pop
std
lds
popa
cli
xor
add
fisubl
cli
push
bswap
push
lods
sbb
xchg
mov
fldenv
pop
cwtl
xchg
pop
mov
xor
pushf
xchg
sub
push
jmp
cmpsb
xchg
test
pop
and
xchg
pop
cltd
ret
in
imul
or
subb
je
mov
fmulp
test
mov
clc
mov
movsb
in
fidivl
gs
dec
or
movsb
call
or
xor
gs
sub
aad
sbb
mov
mov
and
jno
jbe
fst
sub
mov
insl
bound
or
xchg
cmp
jno
push
xor
and
shr
popf
lock
mov
push
mov
push
inc
and
and
out
in
ds
and
mov
add
testl
outsl
xchg
push
xchg
cmp
loop
dec
data16
fistps
orl
mov
int3
pusha
push
or
dec
adc
or
mov
mov
lret
xchg
fdivp
or
aam
insl
and
and
lahf
jnp
testl
dec
insl
mov
push
push
rcrl
orb
xchg
cmp
cmpsb
sbb
sub
repnz
insb
pushl
jecxz
jbe
ja
pushf
addr16
je
mov
cmc
gs
test
out
in
push
popf
or
pop
pop
das
cmp
add
xchg
sbb
inc
mov
shrl
mov
sub
shrb
push
mov
in
call
pusha
dec
push
roll
pop
scas
movb
push
add
aad
inc
mov
and
xor
push
pop
mov
dec
test
arpl
mov
and
mov
mov
sbb
sub
jbe
or
scas
mov
cltd
loope
test
loop
jl
inc
sbb
std
jae
ret
decb
leave
sti
adc
inc
mov
icebp
jg
inc
ss
sub
jno
mov
jae
fidivs
mov
cmp
jle
es
add
rclb
cltd
fidivl
mov
jp
or
call
scas
sbb
pop
sub
orl
inc
sbb
jne
popa
sbb
pop
mov
popa
out
sub
aad
int
inc
cmp
cltd
movsb
pop
push
mov
inc
xchg
fstps
mov
sbb
sarb
jl
mov
aad
test
pop
or
enter
arpl
ror
xor
mov
inc
lcall
jle
out
xor
cli
jecxz
rcl
lahf
lods
inc
into
cmp
int3
cld
cmp
roll
popa
cmpsl
and
and
jg
jno
inc
sbb
and
mov
dec
test
bound
or
rorl
pusha
inc
fwait
popf
mov
int
adc
inc
pop
pop
mov
xchg
mov
xchg
movsb
cli
add
inc
mov
or
xchg
in
and
xchg
je
cld
sti
push
inc
fidivl
lahf
inc
or
test
int3
imul
cmpsl
imul
mov
push
pop
sarb
cwtd
or
dec
test
dec
popf
sub
ja
push
je
cli
ret
shll
add
std
cmp
xor
jmp
in
jge
sub
inc
xor
mov
adc
xor
xchg
dec
cmp
mov
mov
rcr
add
fucomp
cmp
iret
iret
leave
cmp
cmpl
add
dec
cld
jno
mov
sub
sbb
pushf
adc
in
jmp
outsb
cltd
add
cmp
sub
mov
ficompl
or
ret
sbb
gs
fiaddl
push
dec
in
negl
hlt
decb
cwtl
lods
dec
call
adc
xor
jnp
and
outsl
sub
jecxz
or
loope
cmc
ret
out
adc
rol
ret
fs
mov
xor
scas
pop
pop
sub
imul
push
xchg
adc
jecxz
iret
and
or
test
mov
ss
fisubrl
inc
popf
cs
jp
lahf
rorb
pop
mov
cmp
bnd
mov
pop
out
adc
or
pop
mov
jg
lods
jns
cltd
jne
ds
shl
scas
adc
scas
stos
pusha
jns
test
sar
lcall
jl
sti
andb
add
mov
xchg
nop
mov
cld
mov
stc
test
ljmp
idivl
jg
and
fisttps
adc
inc
lcall
jle
cmpsl
sahf
insb
outsl
dec
push
dec
xchg
fs
je
mov
lods
sbb
movsl
call
jbe,pt
xlat
push
repz
pop
cld
xor
repz
push
cmpsl
sarb
mov
enter
push
jnp
inc
je
pusha
push
daa
outsl
add
adc
je
or
push
mov
push
negl
mov
push
dec
das
sbb
adc
movsl
stos
ret
add
test
shl
cmp
pop
vmread
sbb
dec
xchg
dec
fwait
rcll
bound
mov
dec
fnstcw
xlat
fiadds
cmp
les
mull
sub
aam
lcall
pop
inc
jecxz
xchg
pushf
out
ret
or
mov
jl
popf
testl
sub
cwtl
add
mov
jmp
sub
push
ror
push
sub
mov
sbb
mov
adc
mov
sub
pushf
xor
mov
pop
cld
sbb
hlt
push
or
sahf
mov
arpl
cmc
mov
jnp
ret
ret
in
data16
leave
negb
inc
push
push
mov
lods
sub
stc
mov
rorl
outsb
mov
imul
lock
adc
and
push
inc
mov
pushf
inc
and
xchg
and
ss
out
adc
cmp
nop
jne
or
cmp
test
xchg
and
xchg
popa
out
xchg
inc
mov
pop
icebp
cli
fwait
adc
mov
leave
xchg
out
dec
lods
test
xchg
enter
mov
wrmsr
loopne
pop
arpl
mov
subl
loope
and
loope
inc
loope
cmp
add
jecxz
xchg
popf
mov
xchg
leave
inc
and
mov
dec
or
mov
mov
xchg
shl
cli
dec
inc
sahf
sbb
xchg
ficoml
stos
das
jno
adc
cltd
pushf
sbb
and
adc
bswap
push
int3
or
xor
push
in
repnz
ror
adc
cmp
jbe
mov
fildl
in
shlb
mov
jmp
pusha
mov
push
xorb
test
call
xchg
and
and
enterw
out
int
mov
stos
js
jle
mov
imul
ret
cmp
xor
shrb
and
daa
dec
bound
mov
push
pop
sbb
fnstsw
inc
dec
test
sbb
jp
pusha
jmp
stc
ret
add
cmp
mov
push
das
pop
jl
clc
cmp
in
fisttpll
sub
xchg
rep
jno
push
and
scas
xor
push
fsubr
dec
jg
insb
push
mov
lea
jns
test
dec
push
jae
gs
and
test
ret
scas
in
ja
rep
lcall
dec
cmp
inc
push
jo
lock
iret
lds
push
jne
mov
mov
lods
lods
xor
push
xchg
cmp
or
fnsetpm(287
clc
mov
leave
mov
pop
lods
push
cmc
push
pushf
push
sbb
push
dec
mov
adcl
cs
cmp
xor
pop
cmp
daa
pop
testb
mov
xlat
mov
test
mov
cmpsl
adc
aaa
lds
aaa
jl
subb
or
pop
stos
inc
xchg
adc
mov
cld
dec
mov
bound
mov
test
out
packuswb
add
outsb
ja
cmpb
test
cmp
shl
dec
jo
mov
xchg
mov
fldcw
fdivr
xor
inc
dec
jnp
adc
adc
les
dec
and
xor
mov
or
data16
imul
pushf
jp
cmp
scas
xchg
mov
push
jmp
iret
push
insb
add
mov
daa
scas
mov
dec
inc
iret
push
in
sub
xor
cmp
arpl
cmpsl
cmp
test
es
mov
popa
scas
test
adc
adc
outsl
mov
inc
sub
ljmp
cmp
push
pushf
stos
adc
push
dec
lock
and
jnp
stos
mov
mov
sti
aaa
das
test
and
shl
arpl
popf
xor
mov
adc
imul
cli
pop
out
imul
pop
or
pusha
jmp
jp
int3
mov
jae
cmpsl
dec
or
sub
lahf
out
pop
fnstcw
or
or
test
inc
jecxz
mov
std
mov
int
ret
mov
sbb
pop
insl
xchg
inc
dec
mov
lods
into
js
cltd
movsb
ss
lsl
jmp
sub
pop
insb
push
lock
insl
push
push
rorb
insl
xchg
push
xlat
cmp
shlb
add
dec
fcompl
push
ficoms
sbb
jl
aaa
fcoml
cmp
int3
movd
push
xchg
xchg
iret
mov
mov
in
inc
mov
or
mov
rcrl
xchg
cmp
add
pushf
push
mov
repz
pop
adc
cltd
sbb
ret
in
mov
push
movsb
dec
pop
in
pop
in
cmpsl
sub
call
push
inc
test
add
rcrl
sub
movups
mov
test
mov
or
jne
jecxz
mov
lds
popf
movsb
dec
repz
inc
ret
mov
and
dec
inc
push
mov
sarb
cmpsb
pop
adc
fistpl
mov
lds
stos
sbb
aam
and
mov
ds
xchg
adc
sub
xor
mov
test
mov
push
sbb
xchg
xchg
fisttpll
fdivs
gs
cmp
mov
adc
sub
or
lahf
mov
in
cli
into
jb
inc
jp
dec
xor
mov
stos
inc
pushf
mov
shr
xor
and
xchg
xchg
dec
cmp
xchg
mov
sti
pop
jl
xor
mov
xchg
outsb
push
iret
inc
mov
or
mov
cmp
mov
xchg
int3
pusha
mov
rcrl
insb
movsb
rep
xchg
or
push
imul
aaa
push
add
fwait
cmp
call
xchg
hlt
cmp
dec
cld
out
sbb
mov
inc
int
mov
sub
sub
pop
add
mov
push
das
movsl
sub
pop
bound
lock
shrl
xchg
push
pop
add
fisubl
cltd
aam
xchg
jno
outsb
leave
loope
fs
push
add
add
cmovb
xor
inc
dec
cli
pop
scas
dec
and
mov
inc
jae
roll
push
lods
mov
cmc
mov
dec
repz
orb
leave
cld
mov
lcall
mov
lods
jns
test
mov
aas
push
ret
gs
mov
xchg
cmp
push
mov
mov
dec
and
push
addb
adcb
xchg
dec
push
sbb
sbb
popa
dec
stos
in
dec
shll
cmp
xor
lcall
ficompl
add
out
stos
out
xor
sub
pushf
lret
movsb
dec
jne
jl
aam
sub
inc
jg
dec
idiv
andb
or
das
mov
pop
cmp
mov
jmp
ss
daa
pop
jns
pop
cmc
ljmp
pop
cmp
xchg
and
xchg
mov
adc
push
imul
pop
cmpb
shl
mov
mov
lea
xor
fsts
je
mov
popl
mov
je,pt
fdivl
mov
addr16
ja
lds
mov
stc
mov
dec
lret
mov
inc
cmc
inc
fimull
or
iret
sahf
popa
adc
enter
cld
leave
cmp
stos
fbstp
mov
cmp
push
flds
sub
sbb
pop
inc
xlat
cli
sub
sahf
mov
or
mov
xlat
jmp
call
jo
mov
add
lahf
cmp
aam
push
mov
hlt
test
test
mov
mov
jae
imul
iret
xchg
out
loopne
jnp
pop
lds
imul
push
fwait
mov
sbb
insb
xlat
mul
std
repnz
push
cltd
stos
lods
cmpsb
xor
pop
push
cmp
fcmovnbe
clc
outsl
sub
cmc
lds
jmp
and
mov
pop
insb
or
jge
sbbl
dec
pop
arpl
push
rolb
or
xchg
lds
mov
lea
daa
fs
cmp
sub
push
int3
mov
setl
sub
push
cld
mov
cmp
mov
jbe
daa
dec
dec
ljmp
cmp
rolb
inc
adcb
orb
test
dec
fsts
cmpsb
dec
fs
insb
mov
mov
cli
dec
aam
shll
xor
jp
jo
setb
ficompl
cmpl
mov
stos
fwait
std
loopne
xor
scas
ja,pn
leave
sbb
mov
and
mov
sbb
and
pop
aaa
inc
inc
xor
cltd
ss
inc
dec
inc
sbb
rclb
cs
addr16
test
imul
div
sub
jae
ret
push
jecxz
int3
lods
and
das
imul
inc
fwait
hlt
test
and
push
or
cmp
mov
clc
hlt
xchg
mov
inc
pop
xor
mov
notl
adc
das
int3
repz
test
add
pop
test
mov
sub
mov
lock
xchg
pop
jne
in
bound
neg
mov
popa
fldcw
test
arpl
incl
fldenv
fwait
movsb
jns
filds
or
sbb
iret
add
pusha
pusha
xchg
push
xchg
dec
je
dec
mov
sbb
fldt
pop
sub
in
add
jmp
xor
sbb
stc
cmp
rcrl
add
jg
cwtl
bound
adc
mov
test
in
xchg
add
lret
fists
lcall
in
jmp
jne
add
bound
add
dec
pushf
dec
adc
sahf
xor
pop
xor
shrl
out
pop
sbb
lcall
xchg
mov
cmp
inc
outsb
shl
sarb
adc
xchg
adc
sub
cld
xchg
mov
mov
lahf
adc
ja
testl
sub
add
mov
cwtl
pop
push
in
add
xor
add
push
mov
fwait
sub
aaa
or
loope
mov
sar
jle
sbb
test
cmp
dec
or
imul
cmp
ror
mov
lods
sti
pop
mov
and
adc
or
cmpsb
mov
push
sahf
inc
mov
xchg
jmp
lock
cmp
ret
loop
sub
or
repz
adc
mov
or
js
std
cmp
sbb
loopne
xchg
push
imul
loopne
aad
mov
pushf
lock
test
cmpsb
mov
in
xchg
out
inc
leave
sahf
and
pop
and
ficoms
pop
and
dec
aas
cmp
lret
jmp
mov
loope
xchg
hlt
test
addb
adc
sub
xlat
imul
sarl
jmp
add
push
xorl
fwait
xchg
shl
orb
and
sbb
cmp
inc
pop
mov
dec
xor
jg
mov
out
cmp
xlat
addr16
mov
mov
ljmp
push
out
sub
nop
dec
jmp
lahf
cli
cmp
rolb
imul
test
fbld
test
inc
xchg
mov
jmp
xchg
or
mov
lahf
mov
int
dec
in
mov
int
sub
fs
jecxz
ficompl
daa
push
lds
xor
int
xor
pop
das
aad
sti
mov
jle
adc
cwtl
loope
fistpll
mov
arpl
hlt
daa
arpl
fsubrl
flds
ljmp
push
pop
adc
mov
cli
sbb
pop
lret
stos
jge
mov
xchg
loope
jle
cmp
inc
adc
xchg
les
ljmp
jle
jno
insb
lcall
cmpb
mov
mov
out
into
push
adc
cltd
dec
fnstsw
repnz
push
clc
cmp
cli
push
pop
ja
jae
mov
sub
dec
push
push
lock
imul
addr16
xchg
or
sub
pop
xlat
les
sbb
jmp
int3
outsb
sub
popf
mov
pop
sub
movsl
or
bt
lds
cmpsl
aas
popf
sub
das
xchg
shll
jns
loop
xchg
mov
call
or
movsl
inc
mov
loopne
lea
out
cmpsl
sbb
push
xchg
inc
dec
lea
mov
push
cmp
xchg
push
lcallw
jmp
jns
adc
xor
repz
test
lret
add
ja
imul
push
dec
sub
fstps
push
mov
sbb
lea
pop
pop
lods
stos
jge
cli
push
in
aas
push
inc
pop
cwtl
xchg
inc
insl
in
and
scas
sbb
lret
sti
test
jbe
pop
jo
lea
push
or
jno
push
or
xchg
ret
test
dec
jns
dec
mov
push
or
rorl
test
in
mov
and
add
push
out
push
pop
int3
adc
or
into
je
adc
adc
into
outsb
loope
pushf
mov
stos
dec
test
dec
into
popf
pusha
call
and
or
inc
lcall
lahf
xchg
sbb
mov
pop
or
cltd
xlat
stos
xchg
ss
or
lods
stc
push
dec
jecxz
jo
pop
into
xor
jl
push
mov
in
jle
psubq
ss
push
pop
stc
mov
dec
ret
mov
push
repnz
cmp
mov
mov
jnp
insl
mov
and
ret
mov
cmpsl
scas
lods
adc
cmp
js
cmpsl
or
shll
adc
lret
stos
popa
stos
pushf
arpl
jg
test
adc
divl
das
sahf
mov
and
out
test
int
cmc
jge
out
int
ret
inc
fldln2
pop
adc
ljmp
icebp
in
es
mov
pop
sahf
add
ss
loop
cmp
adc
cmc
push
xchg
pop
mov
pushf
das
push
inc
pop
shr
mov
outsb
mov
ds
ret
jecxz
mov
arpl
fxch
push
movsb
push
popa
and
add
enter
int
outsl
into
mov
or
aas
and
cmp
push
inc
andl
dec
in
or
pop
push
add
ljmp
sarl
ret
mov
rclb
test
pop
lock
inc
popa
xchg
ret
mov
inc
cmp
aas
inc
dec
push
lock
addl
stc
ret
scas
cmpb
dec
xchg
movsl
insb
repz
lss
jecxz
sar
push
std
pop
rcll
and
loope
in
push
test
icebp
jno
sarl
mov
loope
scas
shlb
xchg
pop
ror
pop
pop
clc
pop
adc
fstpt
mov
fnstcw
fcmovbe
cmp
pop
inc
push
shld
xchg
mov
cmp
add
loop
xchg
jnp
add
ret
mov
pop
imul
jo
daa
inc
jb
push
mov
cwtl
popa
xor
adc
xchg
pop
adc
xchg
inc
and
call
mov
pop
repnz
scas
inc
xchg
mov
pop
or
roll
lret
mov
mulb
xor
lock
sub
push
push
dec
popl
cmp
push
xchg
movsl
inc
pop
dec
sahf
cli
cmp
or
insl
dec
aaa
push
out
cmc
add
xchg
ds
or
into
scas
movsb
imul
sub
js
sub
sub
std
loopne
xor
inc
pop
loopne
pop
xchg
push
rcrb
loopne
ja
add
je
sahf
fldt
or
scas
pop
or
mov
inc
aas
subl
push
add
inc
icebp
test
out
nop
push
xorb
fucompp
mov
mov
push
jno
sahf
jnp
fiadds
mov
and
and
push
loope
sub
mov
cmp
push
ljmp
jp
sub
sub
xor
add
xlat
xor
shrb
mov
outsl
xor
mov
ja
int
fwait
cld
inc
in
jp
or
roll
jmp
mov
adc
andb
adc
mov
or
sbb
adc
int3
cmpsl
cmp
aaa
in
xchg
add
push
jl
xor
decl
dec
lds
and
pusha
sbb
loop
je
xchg
mov
inc
adc
add
call
pop
dec
jne
stos
insb
fmull
mov
daa
sbb
push
push
mov
inc
pushf
pop
mov
jg
push
imul
push
xchg
dec
dec
lods
rclb
push
dec
cmp
popf
pop
cmpb
dec
mov
data16
dec
jg
adc
imul
test
jmp
pop
mov
xor
mov
xlat
mov
add
pop
jge
jnp
subb
hlt
mov
pop
or
cmpsb
hlt
jns
or
int
shll
and
dec
ret
dec
sahf
mov
sub
divl
adc
or
lds
cmp
xchg
enter
mov
ror
je
into
xchg
movsb
dec
xorl
mov
outsb
push
lods
pop
sub
stos
jmp
sbb
call
mov
mov
cs
maxps
in
xor
xorl
and
loopne
xchg
int
cmpsl
popf
inc
loop
repz
xor
sbb
pop
ja
mov
adc
add
and
ret
rcrb
icebp
sahf
sbb
push
ja
scas
ljmp
in
idivl
jb
mov
sarl
lods
ss
repnz
sub
popa
movb
jae
push
sbb
push
out
add
mov
jnp
cmpb
bndstx
pop
leave
ja
fisubrs
cmp
jecxz
insl
xor
mov
lcall
in
adc
pushf
and
xor
nop
adc
cmpsl
and
add
ljmp
clc
push
dec
adc
jge
mov
mov
sub
inc
xor
and
sbb
dec
mov
mov
movsb
das
loopne
ja
and
idiv
adc
xchg
test
in
fwait
stos
xchg
push
loop
xchg
mov
inc
jbe
push
dec
xor
leave
mov
int
or
cmp
mov
out
sub
in
mov
mov
sub
mov
ret
mov
sub
test
mov
int3
cltd
test
je
xchg
pop
in
movsl
mov
out
or
out
dec
cmpsb
inc
movsb
adc
sub
nop
mov
dec
test
pop
push
mov
cmp
add
addr16
mov
dec
imul
sahf
outsb
fsubp
push
imull
in
and
fadd
xchg
adc
in
sub
out
add
xchg
pop
add
nop
inc
xchg
rcr
sub
aas
inc
xlat
jnp
fiaddl
iret
sub
add
jp
lret
push
aas
aaa
popa
and
fcoml
mov
nop
cmc
xor
mov
out
shlb
sub
jp
sub
inc
test
push
inc
mov
xchg
jle
xlat
fdivrl
push
jp
mov
std
addr16
ja
or
sbbb
lods
loopne
xchg
inc
icebp
jmp
xchg
or
repnz
pop
cmp
mov
movb
adc
pop
mov
jle
jb
pop
das
push
bound
dec
jbe
ss
jnp
pop
sahf
and
repz
rcrl
cmp
mov
andb
sbb
imul
lcall
sbb
adc
sar
mov
fists
in
sbb
xchg
out
pusha
cmp
notb
push
push
arpl
push
bswap
sbb
add
cs
mov
jne
jp
fcmovbe
lret
cmpl
cmp
inc
jb
cli
xchg
jle
sub
xchg
mov
jo
push
fprem
in
pop
setno
push
inc
xchg
lds
xlat
mov
push
push
sbb
push
nop
fisubrs
repnz
cli
mov
sub
imul
shlb
loopne
loopne
cli
mov
sbb
test
jg
dec
iret
pop
adc
lods
notb
and
cwtl
pop
orl
jnp
dec
arpl
inc
adc
and
arpl
lret
add
call
lret
jecxz
out
add
sti
cld
test
dec
xchg
mov
lods
jecxz
cmp
fld
mov
pop
inc
mov
lods
ret
icebp
xlat
pop
jnp
add
cmp
into
fwait
mov
ja
fcmovnu
fimull
sti
sbb
inc
xchg
dec
adc
aam
mov
aas
add
mov
fisttpll
jmp
or
loope
enter
das
fldcw
dec
sbb
mov
shll
add
lgs
jo
sahf
fcom
shlb
dec
pop
in
in
cmp
sub
mov
cmpsb
das
xchg
push
mov
lods
ret
lret
js
lcall
or
dec
mov
adc
shr
cs
sub
inc
mov
cs
ret
adc
faddl
fmul
clc
pop
jb
idiv
outsl
or
mov
push
inc
mov
sbb
cli
pop
lods
mov
adc
insb
xor
cli
test
push
inc
cmpb
outsb
stos
pop
js
test
jo
rep
cmp
add
jmp
cmpl
sub
out
test
out
mov
icebp
scas
inc
pusha
js
mov
shl
movsb
pop
or
aaa
loope
pushf
loop
stos
in
and
hlt
dec
pop
repnz
dec
sub
sbb
aaa
mov
xor
adc
lds
push
test
imul
aaa
pushf
or
mov
sti
popf
mov
insb
mov
pusha
xchg
insb
sahf
insb
or
jg
sbb
fcompp
sbb
lcall
test
pop
fwait
mov
and
jne
hlt
movsb
cmp
outsl
mov
or
sbb
jae
jmp
ljmp
jge
fcoml
cmp
mov
mov
inc
mov
jbe
mov
mov
xor
mov
inc
pusha
pop
iret
call
fcompl
inc
in
mov
stc
mov
fistps
fwait
cmpl
cmpsb
lds
dec
mov
data16
popa
roll
les
insb
mov
hlt
aam
xchg
xor
hlt
fistl
xchg
add
or
rorb
ljmp
psadbw
pop
push
outsl
leave
inc
xor
push
sub
shl
and
js
fldcw
popa
mov
push
cltd
and
mov
sub
push
mov
neg
mov
inc
jmp
xor
sub
je
sub
das
cmpsl
and
or
jl
and
cmp
stc
mov
jns
dec
mov
sbbl
sub
cmp
cmp
jb
in
xchg
std
fsubl
inc
sub
push
insb
insl
add
xchg
push
fs
movsb
or
jmp
fbld
mov
mov
subb
scas
aaa
xor
jns
js
fsubrs
add
dec
add
mov
das
sub
test
xchg
push
mov
imul
jns
mov
xchg
jbe
add
mov
loop
jb
pop
and
cwtl
mov
aam
xchg
adc
lea
sbb
cmp
dec
imul
cmp
cmp
outsb
lods
xchg
andb
mov
dec
mov
movsl
repz
push
adc
outsl
fstps
jnp
outsb
jae
leave
cmp
jbe
mov
sub
cmp
aam
ja
jno
test
pushf
les
xlat
js
movsb
mov
jle
loopne
mov
jmp
adc
cmc
mov
jle
fldenv
xchg
xor
dec
and
pop
xor
sahf
push
shl
ret
sub
sahf
fucom
sbb
adc
xchg
mov
xchg
jae
sub
mov
fdiv
sub
loope
lahf
outsb
in
add
jae
call
mov
fimull
mov
adc
push
lea
sbb
mov
sbb
mov
daa
shll
bnd
or
pusha
add
pop
dec
xorps
dec
and
int3
cmp
pop
ret
jle
int3
pop
sbb
aam
shll
icebp
aad
add
cld
out
or
int3
mov
fsubrl
icebp
pop
int
xor
daa
mov
js
int
out
daa
nop
std
jmp
xchg
cld
in
cmp
scas
cli
jae
add
jb
iret
mov
jmp
sbb
aad
inc
repnz
cmpsb
out
xor
cli
test
sti
dec
call
mov
mov
cwtl
dec
push
test
lret
xor
xchg
inc
pushf
xor
add
in
ja
sbb
push
into
pushf
mov
scas
dec
clc
inc
xchg
jecxz
aas
lock
sub
bswap
cli
lcall
into
adc
imul
add
lret
sahf
fnstcw
lock
stc
por
adc
fwait
das
cmp
loopne
daa
rcr
int3
outsb
jmp
fdivl
jg
xchg
adc
jae
push
ss
xchg
push
push
fcmovnu
xor
mov
inc
iret
lds
push
lahf
dec
xor
mov
mov
dec
jbe
cwtl
mov
cmpsb
push
idiv
hlt
jae
and
mov
sbb
mov
add
pop
or
jp
call
xchg
cmpsl
fbld
test
in
inc
loope
push
pop
mov
cli
mov
pop
or
pop
out
or
pop
jmp
mov
push
fidivrs
cltd
or
dec
in
push
loopne
cwtl
dec
aam
pop
fildll
add
mov
jno
lds
mov
cwtl
dec
cmpsb
movb
das
or
push
shrl
pop
mov
mov
pop
out
rorl
test
xchg
dec
sub
jne
dec
xlat
ret
test
sbb
ret
sarl
test
push
push
mov
lcall
mov
in
rcrb
jl
add
scas
jge
sbb
inc
aaa
push
push
adc
lock
mov
xchg
les
out
xor
inc
jg
cmovno
sub
shlb
lods
and
mov
test
sbb
shufps
sbb
pop
cmpsb
jno
mov
cmp
add
sub
test
in
out
mov
mov
add
xchg
in
pop
push
fmuls
dec
pop
in
jno
xchg
add
push
adcl
pop
outsb
mov
and
sbb
or
addr16
pop
lods
lea
mov
jl
cmp
sub
aas
sbb
adc
stc
test
mov
stos
mov
das
call
push
jmp
outsl
push
shl
rclb
sub
mov
jnp
adc
and
add
xchg
sbb
sbb
jp
xor
movsb
jb
inc
cmpsb
cmp
jno
clc
sbb
sub
pop
push
ljmp
pop
std
xchg
std
sbb
jno
mov
test
mov
and
cmp
sbb
stos
dec
adc
movsb
add
pusha
les
push
test
aas
jecxz
and
xchg
mov
mov
fildl
and
cmp
mov
cmp
clc
push
adc
inc
insl
push
mov
mov
test
mov
sbb
or
add
test
in
cmp
movsl
mov
lock
rcrb
cltd
les
stc
hlt
sahf
je
lret
lods
mov
mov
std
jnp
adc
cmc
xchg
std
out
push
cli
push
adc
ret
mov
mov
mov
mov
add
lock
ret
dec
jne
xchg
mov
mov
pop
sub
sbb
cmp
shll
je
pop
inc
add
sub
sbb
aam
adcl
push
dec
pushf
lock
in
cmp
xchg
ljmp
xor
jmp
pushf
fwait
push
xchg
jle
mov
cmp
pop
leave
daa
or
dec
mov
in
add
gs
xchg
xchg
shl
into
mov
pushf
jp
push
testb
or
jae
gs
mov
or
sti
call
mov
push
xor
ret
add
dec
popa
mov
ficompl
jge
add
out
sub
and
xor
scas
pop
push
rorb
sti
rclb
push
out
js
sub
xor
test
xchg
in
enter
cmp
lcall
cmp
mull
or
sbb
xor
das
inc
ja
mov
loop
test
jmp
cmc
push
xlat
test
dec
imul
mov
shrb
jmp
xor
pop
sbb
jns
mov
mov
mov
lret
xor
jecxz
popa
in
mov
or
mov
adc
or
and
insb
mov
cmpxchg
mov
mov
popf
cmp
mov
cltd
dec
xor
movsb
test
repz
repz
inc
fucom
cmp
xorb
mov
push
push
adc
rcrl
pop
and
jg
cmpsl
out
leave
cmpsl
adc
xor
mull
fwait
test
outsl
adc
fimuls
ss
pop
mov
fists
les
push
pop
testb
mov
enter
sbb
inc
int
add
jl
lea
mov
mov
shll
mov
decl
push
cmpsl
xchg
and
dec
push
ss
stc
repnz
imul
and
orb
ret
sub
fistpl
dec
lds
inc
or
and
subb
lcall
xor
cmc
pop
inc
rcrb
rcrl
sbb
mov
orl
movsl
pusha
cs
enter
cmp
mov
fdivr
cmp
ret
dec
sub
jmp
sbb
sbb
or
mov
shl
lcall
mov
inc
sub
arpl
and
xchg
adc
jmp
ror
addr16
jne
xchg
inc
test
js
sub
add
sub
stc
and
or
mov
jne
mov
notb
xor
fcoml
xlat
jp
xor
test
pushl
xchg
add
cmc
dec
arpl
in
xor
int
je,pt
int3
into
std
mov
jg
test
addr16
push
jb
cmpsb
and
scas
dec
sub
iret
icebp
xchg
mov
mov
jbe
push
imul
ficompl
add
mov
xor
ficoms
orl
bound
test
pop
mov
imull
adc
popa
xchg
shll
daa
pop
cmp
inc
and
fcomps
ljmp
stos
sbb
loope
jl
fucomip
push
sbb
in
test
inc
jp
out
push
xor
push
dec
pop
mov
add
push
mov
lahf
repz
stos
test
mov
incl
xchg
push
mov
test
xchg
scas
nop
scas
lahf
dec
xchg
xchg
mov
test
xor
xor
xchg
inc
cld
lret
aaa
adc
xchg
inc
cmpl
adc
xchg
fisubl
fidivl
movsb
add
cmp
aad
ss
movsl
sbb
mov
out
cmp
lcall
jo
inc
or
test
pop
insb
sbb
sahf
daa
fucomip
sub
data16
iret
in
movsl
shrl
nop
int3
mov
mov
adc
push
sbb
std
call
loope
mov
outsl
jo
sub
out
test
add
mov
leave
xor
cli
inc
mov
lods
xchg
in
pop
inc
shl
mov
pop
push
mov
cli
out
xchg
add
pop
pop
add
idivb
push
arpl
jl
jl
movsb
xchg
jmp
sub
lret
jne
ja
shrl
nop
adc
mov
cmp
outsb
sub
push
bound
stos
sti
stc
je
pushf
or
mov
push
push
cmpsl
sbb
lds
mov
add
clc
dec
mov
mov
repnz
sbb
sbb
inc
call
mov
out
aaa
scas
cmp
adc
adc
push
pop
outsl
cmpb
dec
in
js
nop
clc
jb,pt
ja
out
cmp
xor
mov
je
lods
jnp
test
data16
and
cltd
fdivl
inc
lods
xchg
out
add
jmp
ret
dec
cltd
cmc
icebp
ljmp
movsl
cmpb
repz
sub
and
adc
ss
jge
clc
lods
out
sbb
mov
fsubrs
sar
inc
fs
imul
jbe
shlb
movd
inc
xchg
pop
enter
and
loop
stos
inc
shl
into
imul
imul
leave
test
push
adc
mov
jle
std
xor
testb
mov
mov
jb
stos
aam
mov
repz
adc
add
inc
push
fnsave
cs
outsb
jl
dec
mov
cs
lahf
in
aam
test
loop
out
lahf
push
jecxz
pop
pop
cmpsl
cmc
or
push
cmp
adc
pop
aam
call
inc
pop
and
mov
scas
stc
mov
cld
push
ret
push
sti
inc
cmpsb
mov
xchg
xchg
pushf
sbb
sbb
sti
push
mov
pusha
dec
jne
fsts
mov
pop
test
xchg
stc
add
roll
sub
push
stos
mov
cmp
mov
pop
push
xor
mov
imul
inc
ljmp
mov
icebp
iret
aaa
or
pop
sbb
icebp
stos
xchg
lret
arpl
in
xchg
lret
lahf
int3
mov
test
xchg
inc
ja
dec
pop
cwtl
pushf
mov
push
test
inc
mov
orl
push
or
leave
jbe
lahf
inc
push
xchg
fadds
and
push
ficompl
cmc
push
jmp
mov
or
xor
lcall
sub
cmc
scas
dec
fdivrl
cmp
sgdtl
xchg
push
xlat
mov
sub
movb
sub
jno,pn
and
loop
xor
add
inc
cmc
push
decb
cmpsb
push
hlt
gs
imul
cmpsb
cmpsl
xor
inc
mov
jle
mov
aam
and
mov
call
sub
rorb
out
jle
xchg
mov
cltd
cmp
mov
dec
ja
or
cmp
out
pop
ja
scas
fsubs
adc
out
rorl
and
std
pop
lods
dec
stc
aam
test
jno
cld
mov
pushf
sub
cli
test
xor
jp
mov
addl
aam
inc
pop
andl
pop
jnp
arpl
dec
mov
shlb
xchg
mov
scas
repnz
xor
in
jl
out
mov
add
xor
movsb
fdivrl
js
lcall
dec
pop
sbb
pop
sbb
jne
imul
jge
fstpt
outsb
imul
stc
add
jnp
add
add
pop
mov
pop
cmp
pop
fcmovnu
and
cmpsl
jns
scas
push
stos
dec
sub
mov
in
and
lea
xacquire
inc
sbb
dec
or
inc
movsl
add
mov
int
cltd
mov
xchg
add
push
adc
call
ds
xchg
xchg
les
mov
mov
das
loopne
push
sti
xchg
xchg
push
cmc
adc
pop
xchg
fists
mov
outsl
xchg
fnstsw
bound
and
sarb
cld
pop
mov
push
sub
push
mov
inc
xchg
dec
stos
clc
hlt
lock
mov
out
sbb
out
mov
push
fistpll
pop
mov
xor
jge
cli
push
add
sub
outsl
nop
jecxz
sbb
lcall
mov
repnz
outsb
pushf
loope
in
sti
and
data16
int3
lret
in
aas
add
movsl
cld
in
cli
mov
addr16
fsincos
arpl
cld
sbb
scas
xlat
in
xor
dec
repz
insb
jge
add
dec
fdivr
stos
cli
inc
cmp
cmpsl
adc
lret
cmp
adc
jns
xor
pop
jmp
cli
stos
loop
push
and
add
jg
loop
jecxz
inc
mov
aad
iret
out
ja
inc
pop
test
pop
dec
mov
adc
aaa
cmpsb
jle
mov
xchg
dec
mov
sbb
mov
pop
in
dec
test
mul
mov
std
mov
rcll
push
hlt
xchg
inc
mov
mov
test
push
fisubl
push
es
aad
into
mov
mov
pop
repz
test
mov
iret
sar
loop
pop
mov
inc
out
pusha
or
out
test
rcrl
add
iret
das
sti
cmp
jle
orb
mov
cmp
gs
dec
cld
lds
jg
cld
out
and
push
ja
dec
mov
or
jp
cli
push
adc
clc
into
lret
mov
xor
lret
sub
mov
mov
cmc
in
jne
out
mov
add
inc
addr16
jmp
sub
fidivrl
xchg
inc
inc
pop
jmp
shrl
xchg
mov
adc
cmp
mov
inc
fucomp
lods
mov
xchg
push
mov
les
add
xor
inc
test
xchg
je
adc
je
mov
ss
xor
lret
mov
sub
repnz
sbb
cmc
mov
cmp
add
mov
cmp
pop
or
pop
push
leave
pop
iret
fstl
lret
loop
test
xchg
push
nop
mov
lret
ja
scas
mov
sbb
dec
insl
test
push
add
stc
mov
es
jecxz
mov
or
pop
jecxz
pop
jmp
xor
cmc
int3
jns
push
add
ffreep
push
ret
loopne
lods
add
mov
add
or
ds
lahf
lea
imul
pop
mov
aad
fildl
jno
movsb
dec
adc
and
dec
ss
fwait
in
lahf
mov
adc
lcall
fs
xor
jo
int3
or
daa
sbb
mov
rcl
mov
sbb
xchg
daa
cld
sub
imul
xor
je
sbb
loope
add
mov
aad
cmp
jno
lods
pop
fs
outsb
inc
add
icebp
add
jnp
adc
cs
scas
cmpb
enter
or
aam
repnz
es
mov
test
add
stos
jl
popf
hlt
or
pop
lods
add
out
dec
cmp
pop
xor
imul
cld
pop
cmpb
data16
lock
int
dec
pop
xchg
in
mov
pop
xchg
fistl
xorb
icebp
movsb
inc
mov
addb
rorl
nop
lock
notl
int3
mov
push
xor
scas
mov
jmp
sub
cmpsl
fs
shr
jo
fisttpll
and
add
mov
or
call
sub
push
mov
ja
and
ja
pushl
pop
pop
pop
loop
adc
jns
popf
lds
fadds
js
push
jbe
leave
adc
jmp
push
lea
xchg
insb
into
es
dec
push
xchg
adc
enter
cmp
pop
or
hlt
je
sub
icebp
xchg
fimuls
pop
ljmp
jg
or
pop
push
and
js
call
mov
ja
push
aad
sarl
daa
iret
push
bound
push
dec
push
mov
mov
xor
xor
jno
inc
fimuls
push
push
sub
push
pop
jnp
imul
cltd
push
psraw
pop
lods
and
push
inc
add
mov
shll
call
popa
data16
pop
mov
pop
aaa
mov
sbb
mov
icebp
adc
andb
out
dec
add
sbb
incb
imul
xlat
cmpsl
cmc
sub
cmpsb
shll
fs
js
pushf
gs
push
int
iret
fbld
xchg
aam
and
pop
fisubs
push
lret
lds
pop
inc
xchg
push
pusha
adc
cmp
dec
xchg
cmp
insb
inc
call
mov
push
fistl
sar
dec
inc
or
xchg
jne
sbb
sub
inc
incb
inc
ljmp
dec
or
fdivrl
outsl
jecxz
and
cmp
push
add
mov
movsl
fstpt
fistl
mov
pop
addr16
inc
lret
jmp
rcll
insb
and
dec
push
int3
shlb
notb
mov
js
out
nop
xor
movsl
sbb
mov
js
mov
sbb
jne
or
push
into
int
jmp
push
cmp
xchg
jo
pop
jo
jg
and
pop
push
div
pop
lea
mov
sub
bound
or
cwtl
pop
in
lods
mov
mov
mov
mov
cmpsl
or
xor
movsl
adc
cmpsl
add
and
clc
int
sbb
add
testb
in
pop
insb
jge
lcall
dec
fdivl
btrl
rorl
jg
xor
jecxz
xchg
in
or
mov
int3
cli
fadds
mov
xorl
test
push
inc
lahf
hlt
gs
push
adc
and
test
lret
and
or
cmc
adc
or
dec
push
sbb
aam
add
fwait
stos
imul
and
mov
xor
jg
loope
hlt
pop
movsb
adc
sbb
or
mov
popa
sbb
or
lahf
cmpsl
daa
sahf
outsb
ja
call
sbb
cltd
sbb
adc
pop
mov
push
arpl
dec
call
insb
cmc
inc
push
dec
bound
pop
ret
sbb
cltd
sbb
shrb
push
jg
cmp
inc
mov
popl
popf
push
dec
into
ss
popa
mov
lods
fcomps
das
lret
out
cli
dec
imul
jne
ret
push
sbb
push
js
shll
add
nop
jne
sub
icebp
or
je
or
cltd
fmull
add
in
daa
aas
cmp
lcall
xor
xchg
insb
inc
add
and
loope
lcall
fs
out
movsb
sbb
adc
xchg
push
ret
xchg
ret
outsb
xchg
shlb
ffreep
outsb
das
rcpps
in
push
and
pop
sbb
gs
add
sub
mov
mov
and
or
mov
fadds
cltd
add
nop
outsl
in
jns
je
cs
mov
cmp
mov
lcall
adc
cld
pop
or
sbbb
cmp
dec
nop
sahf
push
movsl
test
mov
or
cmpsb
mov
cs
outsl
inc
call
inc
xchg
dec
test
std
into
cld
je
mov
lahf
inc
xlat
adc
push
popf
or
inc
rorb
mov
sbb
jbe
xchg
mov
out
push
movsl
xor
add
sub
mov
dec
mov
call
pop
rolb
push
pop
mov
sahf
cmp
dec
subl
bound
adc
roll
mov
sub
es
push
daa
sti
in
sbb
inc
nop
cwtl
push
dec
push
in
adc
mull
xor
ret
push
dec
gs
push
pop
imul
xchg
nop
mov
lods
inc
enter
mov
push
push
mov
pusha
pusha
stos
out
sbb
inc
jge
mov
mov
inc
jne
sahf
imul
jbe
inc
sbb
sbb
jo
mov
mov
cmp
add
inc
fs
inc
fisttpl
les
xorb
fdivrs
daa
jno
ror
pop
iret
ret
mov
jmp
jle
enter
div
hlt
jp
imull
mov
into
divb
sahf
rolb
dec
mov
xor
das
sahf
jge
cmpb
aam
clts
mov
sbb
jl
mov
mov
jo
je
jge
scas
sub
sbb
fwait
pop
jne
repz
adc
out
lds
sbb
inc
pop
popf
jo
hlt
mov
cmp
or
pushf
out
pop
mov
push
sbbl
test
inc
inc
inc
add
inc
push
andl
cwtl
add
mov
lret
shr
jae
cmp
mov
dec
xchg
xor
loope
ljmp
jb
mov
or
mov
inc
xlat
aam
or
scas
je
or
fsubrl
jp
loopne
shll
push
movb
in
dec
ret
mov
out
mov
push
les
insb
ds
in
pusha
test
addr16
outsb
pop
lods
inc
push
lret
pushf
insb
adc
jp
sbb
cmp
or
bound
dec
cmp
pop
mov
and
fwait
mov
add
popf
out
out
divb
mov
pop
xchg
pop
dec
or
out
mov
scas
sub
ds
sahf
iret
push
jle
sbb
adcb
fadds
mov
jae
xor
jmp
in
pop
cwtl
pop
inc
mov
mov
mov
movsb
std
outsb
imul
stc
les
rol
icebp
or
jno
call
dec
mov
dec
arpl
rclb
cwtl
cmp
out
ds
popa
mov
call
push
jle
jge
inc
xchg
scas
ficoms
adc
xchg
in
and
sub
mov
test
sbb
and
jb
inc
outsl
fisubs
mov
mov
inc
jge
fcoml
lods
pop
int
pushl
mov
sub
push
cmpsb
dec
cmpsl
sbb
cmpsl
fst
cmpsl
jge
gs
stos
sarb
cmp
sub
sub
mov
inc
inc
divl
fbstp
sbb
xchg
mov
cmp
shlb
sub
cs
cmp
add
lods
outsl
pop
jge
mov
test
stos
xchg
fisubs
dec
outsb
je
sub
sub
xor
fbld
xor
in
jge
imul
xlat
repnz
fdivrl
mov
mov
and
ljmp
or
rcl
lds
mov
dec
out
cmp
stos
mov
add
inc
xor
sahf
cmp
out
push
nop
cmp
inc
xchg
push
out
ret
inc
arpl
and
scas
mov
ret
fcom
jl,pt
pop
and
popa
daa
stos
jnp
loopne
ds
lock
out
cltd
sarl
jmp
push
out
cmc
add
stos
adc
inc
iret
mov
clc
pop
push
jle
js
js
mov
sti
cmp
andl
aaa
sar
mov
pop
das
mov
mov
aaa
fisttps
mov
mov
stos
pop
faddl
imul
dec
mov
icebp
mov
aam
jne
add
sub
lahf
stos
roll
rolb
sub
xor
sti
inc
lret
pushf
sub
jns,pt
jp
add
outsb
js
jle
mov
mov
dec
outsb
out
shll
and
jns
push
sbb
shll
adcb
ljmp
mov
mov
adc
adc
mov
sub
xchg
mov
call
xchg
or
sub
sahf
das
repz
jp
push
idivl
sub
imul
data16
rcrb
or
fstpt
scas
shrl
push
jmp
dec
adc
sbb
mov
out
cmpsb
sub
xchg
filds
int3
ds
outsb
pop
push
mov
mov
into
cmp
xor
decb
cmpb
lds
sub
shrb
fwait
push
or
scas
shrl
and
dec
and
xor
pop
inc
sbb
and
dec
lea
xor
pop
rcrl
into
add
cltd
xor
lret
addr16
mov
and
and
adc
sahf
or
mov
bound
xchg
mov
adc
mov
mov
mov
mov
mov
jne
lea
xchg
and
adc
cmp
sarl
sbb
insb
dec
jnp
pushf
ds
pop
jl
cmp
jp
dec
dec
shl
outsb
enter
push
adc
sub
test
insb
fisubs
in
jmp
ja
xchg
sub
js
pusha
into
sbb
cwtl
jecxz
inc
fisubrl
mov
lea
dec
orb
sbbl
movsl
stc
fildl
das
dec
jge
call
stos
imul
inc
or
shrb
jbe
mov
hlt
xchg
and
and
jp
inc
lret
dec
dec
imul
push
je
cmpsb
fdivl
bound
sti
repz
jmp
testb
or
lods
adc
add
hlt
rcr
in
lahf
movsb
popf
push
call
mov
xor
ret
lcall
mov
mov
mov
push
push
or
push
test
fnsave
lods
adc
xchg
lods
pop
inc
lea
loop
add
xchg
cmp
cmpsl
ljmp
outsl
sub
sbb
int
dec
andl
fsubs
push
and
stos
sarb
xchg
adc
push
icebp
add
inc
movsl
or
hlt
loope
push
insl
push
mov
in
add
or
bound
dec
cmpsl
and
add
leave
inc
das
xchg
xchg
cmc
popf
insl
and
sub
adc
inc
push
mov
add
push
and
rorl
sti
aad
sub
cmpsb
div
xchg
jl
cmpsb
imul
mov
dec
cmpb
out
sub
pop
pop
jmp
pop
jecxz
loope
fisubrs
mov
push
stc
mov
repz
cmp
cmpsl
sbb
xor
clc
out
bsf
cmp
or
pop
testl
adc
mov
imul
outsb
out
out
testl
inc
push
inc
lods
xor
stos
in
repz
xchg
sub
adc
in
movsl
fwait
or
roll
pop
adc
lock
xor
shrb
popa
mov
in
std
sub
jo
fldcw
fistpl
inc
fists
scas
ss
sub
sub
inc
loopne
sbb
mov
pop
cmpsb
xchg
jmp
mov
pop
xchg
pmaxsw
cmpsb
movsb
dec
add
sbb
inc
iret
enter
sbb
icebp
or
xchg
and
nop
ror
insl
pop
mov
dec
xchg
psubb
or
nop
mov
cld
xchg
outsb
adc
out
or
out
pop
mov
out
shrl
xchg
idiv
mov
rcl
add
cmp
mov
repz
jp
pop
out
xor
lods
lods
dec
jp
xchg
or
mov
ret
inc
pop
pop
push
movsl
mov
movsl
jecxz
xchg
xchg
and
fimuls
xor
push
arpl
lret
lds
out
mov
mov
jg
mov
fcoml
sbb
lock
cmc
xor
stos
icebp
movb
fcmovb
popa
fbstp
rcl
es
and
xor
ja
xchg
dec
not
mov
jecxz
imul
dec
push
dec
stos
sbb
or
and
das
jmp
push
dec
mov
push
test
fwait
test
xchg
mov
lods
inc
repnz
packsswb
dec
out
or
icebp
push
adcl
fstl
xchg
in
jns
or
popa
push
ds
add
int
mov
loop
xorb
aam
mov
adc
jnp
pop
movsb
jbe
lds
roll
adc
mov
aaa
ss
out
add
pop
jecxz
pop
push
jno
or
sbb
std
dec
push
mov
cvtpi2ps
js
fdivl
aad
push
inc
loopne
out
pop
jg
ds
xor
jecxz
fadd
sbb
mov
sbb
mov
push
mov
les
loopne
xchg
incb
mov
or
subl
cmpsb
aaa
sbb
and
ret
inc
dec
mov
andb
int
lahf
mov
mov
cmp
pop
sbb
movsl
or
or
cmp
xchg
dec
adc
push
fwait
xchg
les
xor
push
xlat
cmp
and
shlb
and
jnp
ss
loopne
rcr
nop
lods
movsl
daa
enter
out
jno
add
xor
cltd
push
repz
movsb
nop
mov
adc
imul
cli
xor
lods
adc
lock
inc
push
inc
sbb
jae
pop
cmp
scas
popa
push
ret
cmp
jo
and
adc
aad
pop
push
sub
xchg
repz
inc
in
dec
or
adc
dec
sbb
mov
xchg
push
sbb
xchg
push
push
ficompl
ret
cs
mov
cmpl
inc
movl
xor
nop
jbe
cmpsb
push
sbb
in
pop
out
sub
stc
mov
mov
bound
stos
nop
sar
fnsave
sub
imulb
popf
test
jl
add
or
inc
xchg
pop
push
jle
out
incb
inc
add
adcl
mov
ficoml
dec
mov
mov
popl
rorl
mov
pop
ret
lods
xchg
aam
dec
inc
jnp
xor
mov
loope
out
dec
xchg
sti
in
lret
push
xchg
stos
sub
or
andl
jmp
movsb
mov
pop
ret
sti
test
and
imul
ret
clc
faddl
pop
cmc
pop
cmpsb
shrl
mov
repz
pavgb
dec
lahf
inc
cmc
and
mov
cmp
ret
mov
movsb
gs
lods
jae
ds
bound
leave
xlat
ljmp
faddl
cmpsb
and
xchg
cmp
cmpsl
jg
pop
and
jne
fisubl
ja
push
inc
rcrl
dec
mov
or
data16
roll
sti
cmp
in
adc
sub
mov
xchg
mov
rcl
sub
outsl
pop
fstpl
repnz
or
dec
mulb
xchg
aad
mov
les
mov
bound
inc
jg
dec
daa
ret
movsl
mov
sub
and
insl
daa
pop
lret
in
scas
add
lret
rcr
sbbl
and
ljmp
inc
je
das
lcall
int3
jno
enter
inc
lds
ret
push
pop
or
xchg
and
aaa
out
lock
insb
fisubl
pop
pop
mov
xchg
shlb
push
pop
dec
adc
xlat
aad
mov
leave
or
sub
ss
not
lcall
fs
adc
mov
sbb
and
inc
repz
ret
inc
dec
shl
mov
jns
divb
scas
aam
scas
pop
or
xchg
or
sub
lahf
adc
fildll
scas
mov
daa
dec
mov
in
je
dec
dec
push
dec
jle
addr16
call
insl
movsb
lods
shll
loopne
cwtl
cmp
sbb
pop
mov
mov
jo
mov
loop
xor
ljmp
enter
fwait
xchg
add
xor
sub
repz
mov
adc
or
mov
ljmp
jae
inc
add
aam
ror
test
adc
xchg
push
xchg
in
loop
pop
lods
and
std
loope
dec
lahf
mov
enter
inc
xor
push
cmp
cmpsb
sbb
or
fcomp
sub
jns
fnstsw
push
xchg
dec
xchg
xor
imul
jno
pop
ja
xchg
shlb
cltd
sti
sub
rcll
fwait
push
test
pop
add
addr16
push
and
mov
lahf
arpl
and
sti
cmc
sarb
xor
inc
jns
cmp
adc
nop
mov
mov
mov
imul
adc
add
les
cs
loope
loop
xchg
inc
or
ret
lret
movsb
mov
subb
jg
inc
jnp
sbb
mov
es
in
jmp
push
adc
add
test
outsb
sbb
imul
push
loop
add
flds
out
push
cmc
xchg
mov
jo
push
fidivrs
lahf
xor
mov
inc
lahf
rorb
lods
rclb
stc
xor
shlb
test
jge
and
cmpsl
into
adc
mov
cmpsl
sub
sbb
jmp
lds
mov
out
scas
nop
xor
dec
test
roll
mov
ret
imul
pushf
outsb
imul
aas
out
cmp
stos
aad
dec
test
cmp
and
mov
and
push
dec
andb
test
std
cmp
pop
xor
gs
add
sub
test
mov
out
pop
dec
and
filds
addr16
dec
in
into
popf
lods
sbb
jb
cmp
cmpsl
mov
mov
fisttpll
shrb
sub
jns
jne
mov
or
stos
push
pop
pop
fcomp
sbb
push
cmovg
mov
cmpsb
mov
in
or
sbb
add
and
adc
mov
mov
loop
rcll
and
or
cmp
or
xlat
int3
scas
lahf
dec
data16
adc
hlt
mov
test
rorl
std
dec
mov
orb
stos
ds
mov
es
xchg
push
mov
lods
scas
mov
add
sub
loop
cmp
ss
daa
jo
or
aaa
fdivrl
insl
or
push
lods
cmp
dec
sbb
or
xorl
jp
enter
fldcw
inc
scas
xor
js
xchg
push
scas
mov
out
imul
sbb
insl
cmpsb
aas
push
mov
mov
push
xchg
andl
popa
imul
sbbb
mov
lret
xchg
mov
loop
leave
xor
mov
mov
fcmovnbe
fsubrl
mov
sub
mov
sbb
test
xchg
paddq
and
mov
pop
xor
inc
fidivl
gs
popa
lods
jbe
scas
shl
outsb
adc
cmpsb
insl
aas
mov
in
int3
ror
out
and
push
in
dec
movsb
lods
test
out
fcompl
leave
inc
pop
sarb
or
divb
or
push
insb
pushf
xchg
loopne
mov
inc
stc
leave
jno
mov
jp
js
push
cmp
mov
lret
pop
xcrypt-cfb
cmpsl
movsb
jnp
mov
out
movsl
popa
fldt
cmp
xor
xchg
imul
add
cmpl
daa
add
in
ds
dec
pop
pushf
lret
jo
push
inc
repnz
and
sarl
lcall
or
xchg
pop
in
sbb
inc
sub
jns
jo
jb
adc
insl
sub
scas
xorps
xor
aas
add
shll
push
cmpsb
mov
lds
mov
pop
add
clc
in
jae
lock
xchg
icebp
leave
pop
das
dec
loop
sub
mov
mov
out
rcr
push
iret
dec
aad
adc
outsl
pop
mov
xchg
aam
or
or
inc
rcrl
and
in
push
fsubs
lds
jge
lds
add
iret
sarl
mov
nop
lods
je
jecxz
mov
sbb
sahf
jge
sbb
in
jbe
jecxz
fwait
gs
xchg
outsb
int
scas
cmpsb
mov
pop
mov
out
add
js
fsubp
fidivl
mov
push
fisttps
loopne
fistpll
out
add
jp
mov
jp
scas
xor
das
mov
jp
add
out
gs
ret
mov
inc
inc
imul
pop
mov
mov
ror
sbb
or
js
subb
inc
push
xchg
pop
jne
cmpsb
xor
fidivrs
ret
xor
mov
jge
in
ljmp
icebp
sbb
mov
lea
mov
xchg
stc
ret
push
cmc
lret
adc
dec
subb
jp
lock
aam
repnz
and
movsl
div
jns
mov
negb
jmp
sub
fiadds
add
cmp
and
arpl
xchg
fstpl
scas
inc
rolb
jb
or
push
dec
ljmp
shl
add
xor
ss
ss
fadd
and
push
push
or
pop
or
rcrb
xchg
mov
jge
pop
sub
sub
in
sub
add
pushf
lahf
movsb
icebp
add
or
scas
mov
and
fbstp
lret
in
lock
dec
lea
cmp
cld
add
test
imul
and
and
xchg
std
gs
jns
sub
pusha
orb
call
sbb
mov
pop
jge
and
out
xchg
add
into
hlt
mov
lods
xlat
leave
mov
jo
push
and
xchg
or
inc
iret
push
push
cmpsl
clc
in
push
cwtl
test
sub
inc
mov
cmp
add
test
hlt
mov
inc
pop
out
xchg
leave
out
mov
inc
push
dec
xchg
sub
and
mov
sbb
aad
sub
cld
dec
in
call
sub
xchg
int
cmpsl
js
pop
arpl
rcrl
inc
mov
lahf
iret
ljmp
jp
pop
fs
dec
and
daa
add
dec
xchg
adc
jae
push
mov
adc
sub
ss
popa
or
add
mov
lock
push
jnp
cli
pop
xor
mov
in
xchg
fstpl
das
cmp
pop
or
loop
icebp
rolb
or
jne
lea
sar
les
push
xchg
out
dec
mov
mov
push
and
sbb
xor
nop
mov
rcrb
pop
cmpsl
mov
cmp
outsl
cmp
in
nop
mov
inc
cld
es
mov
sub
fnsave
outsl
insb
sub
aam
xlat
in
jle
movsl
jle
cmpsl
add
jecxz
mov
movsb
bound
sub
push
nop
xchg
repz
lcall
negl
mov
push
sahf
mov
mov
jle
xchg
push
jb
test
test
mov
add
pop
mov
sbb
pop
push
sub
aas
pop
bound
dec
or
inc
enter
mov
in
daa
mov
jae
push
xchg
push
xor
sbb
sub
sarb
js
into
mov
test
push
call
std
pop
sbb
stc
xor
jb
cmpsb
popf
data16
shrl
mov
shrl
xor
sub
cmp
mov
rolb
xor
ret
test
pop
test
clc
xor
nop
outsb
nop
insl
pushf
push
sub
or
cli
mov
and
loope
cmp
bound
enter
jns
xor
test
scas
mov
cmpsl
iret
cld
ficomps
andl
mov
call
ret
lock
cmp
xchg
dec
enter
inc
ljmp
xor
pop
insb
test
lret
sbb
and
lods
mov
adc
iret
imul
dec
push
lods
ljmp
dec
cltd
mov
sbbl
dec
cmpsl
sahf
fidivl
arpl
jnp
or
xor
jl
js
or
cmpsl
mov
pusha
ss
jmp
loope
jle
aam
imul
aaa
jmp
insl
mov
imul
inc
dec
xlat
jecxz
js
es
hlt
in
xchg
or
popa
xor
cmp
adc
roll
jo
int3
icebp
pusha
lds
mov
lods
push
mov
in
inc
pop
aas
imul
lret
add
sar
jle
cs
nop
inc
fucom
aas
in
inc
mov
xchg
out
loope
out
jb
or
push
mov
inc
xchg
mov
and
fcoms
jb
xorb
dec
add
in
test
dec
rolb
mov
sbb
add
mulb
mov
aaa
inc
inc
data16
divb
xchg
mov
in
cld
and
xlat
cmp
addr16
xor
jge
ss
xchg
sbb
xchg
std
addl
cwtl
icebp
test
push
mov
cmp
clc
lea
dec
xor
pusha
das
out
mov
mov
xchg
insl
inc
js
add
xchg
cwtl
lock
dec
aad
shll
xchg
loope
adc
ds
fisttps
mov
shrb
jno
dec
inc
and
adc
pop
les
loop
into
mov
addl
jno
scas
mov
cmp
jae
fisubrs
insb
js
pop
fwait
icebp
fwait
lods
addb
shlb
call
push
or
push
out
js
push
sbb
in
inc
cltd
jle
aaa
and
sbb
pushf
call
je
lcall
idivb
cmpl
in
inc
jb
or
jb
fwait
in
iret
dec
adc
push
mov
repz
sarl
enter
hlt
inc
mov
dec
movsl
push
jmp
sahf
or
add
addr16
lds
xor
dec
nop
push
sbb
out
ret
les
push
mov
movsb
ret
and
das
out
aad
or
inc
test
jno
or
inc
hlt
test
imull
je
pop
jecxz
adc
dec
lcall
je
cmp
shr
sub
add
notb
adc
pop
or
je
repz
jns
push
inc
add
mov
push
inc
fidivrs
je
std
xor
in
lds
mov
fcmovnbe
insb
mov
push
push
mov
push
xor
js
inc
lods
and
lods
push
xchg
jb
inc
rcll
or
leave
pop
sub
dec
adc
in
jmp
push
scas
cltd
push
mov
or
ds
push
mov
lds
jb
sub
and
je
pop
mov
lret
int
popa
or
std
inc
inc
daa
pop
add
pop
push
aam
adc
xchg
pop
pop
aaa
outsl
ljmp
xor
andb
adc
jb
insb
and
cwtl
mov
repnz
mov
fldl
lds
xlat
mov
mov
fs
mov
sub
sbb
mov
test
mov
dec
pop
pop
frstor
aad
sub
and
inc
jo
sbb
mov
lds
add
lods
pop
aas
inc
pop
push
insb
jle
ss
xchg
mov
jge
aas
mov
push
std
je
inc
sbb
xchg
clc
repnz
mov
pop
jl
or
out
mov
popf
out
int3
test
leave
dec
sub
or
dec
push
lods
fimuls
cli
pop
push
lcall
cmp
sub
cmp
pop
or
pop
sub
mov
mull
sbb
xor
mov
ds
mov
out
cwtl
sub
sbb
or
rcll
push
jge
mov
icebp
cmp
xlat
subl
das
xor
fmuls
or
arpl
mov
js
out
sub
test
xor
xchg
push
xor
scas
out
mov
mov
lds
pop
mov
push
or
push
in
sbbb
shll
ss
addb
pop
testb
sub
push
out
mov
pop
scas
icebp
sarl
fldenv
jnp
les
mov
out
ret
pop
int
repnz
fistpll
je
add
mov
mov
push
enter
xchg
cmp
jbe
sub
in
insw
xor
imul
std
fimuls
pop
je
push
fs
or
add
add
and
mov
xchg
cmpsl
pop
push
test
push
xor
lret
mov
mov
stc
pop
andb
xchg
push
out
jb
jae
jle
iret
fbld
and
push
xchg
mov
xor
mov
sbb
push
xchg
mov
daa
mov
jecxz,pt
xchg
add
mov
jl
out
enter
cld
jns
in
or
and
xchg
adc
push
loope
enter
push
dec
push
hlt
xlat
std
pop
or
popf
mov
mov
lret
mov
and
jnp
cmp
fcompl
in
cmp
frstor
mov
shl
mov
mov
sbb
xchg
adc
xchg
scas
jo
cmpl
outsb
out
mov
jmp
xchg
xchg
or
loop
out
fisubs
gs
ljmp
add
insl
or
test
sbb
cmp
mov
adc
rorb
jb
jmp
js
mov
jg
mov
xorb
ret
testb
sbb
mov
jmp
repnz
les
loopne
jmp
adc
aam
dec
mov
cli
repz
sbb
repnz
mov
cmovno
aas
add
repnz
sub
jb
shr
and
jns
stos
mov
daa
or
pop
or
test
add
jg
jecxz
call
test
call
out
sbb
adc
push
roll
adc
out
rorl
mov
jae
stos
aaa
sbb
jle
mov
add
sbb
lret
lods
xchg
sub
cltd
inc
and
add
fnstsw
aaa
andl
lods
scas
sar
xor
ja
xor
cmp
sub
sub
jo
mov
push
xchg
jg
int3
jmp
add
mov
mov
adc
adc
xchg
addr16
inc
addr16
cmp
inc
push
test
mov
push
loopne
dec
xchg
xchg
pop
push
aad
sbb
stos
shlb
mov
cmp
mov
mov
dec
jecxz
les
jb
jmp
jl
jmp
mov
repnz
out
mov
shr
adc
mov
scas
gs
mov
or
sbb
repnz
sbb
jp
icebp
std
mov
and
jnp
outsl
dec
loopne
lods
lcall
xlat
push
nop
bound
out
pusha
jecxz
and
sahf
enter
and
cwtl
test
pop
jae
lret
mov
mov
inc
mov
or
daa
iret
cltd
test
jmp
sub
shl
cmpsl
loope
xor
push
mov
and
xor
in
stos
cmp
outsl
cltd
cld
out
rolb
leave
pop
jns
test
movsl
in
das
pusha
repz
cli
movsl
aad
fwait
adc
jle
push
lds
push
das
xchg
repz
outsl
fmuls
icebp
mov
pusha
imul
mov
or
pop
push
sbb
rcll
out
and
rcll
cwtl
pusha
mov
mov
imul
das
stos
clc
sub
ffree
mov
ret
xchg
mov
inc
out
rol
xor
lods
jae
into
idivl
int
out
mov
xor
dec
sbb
pusha
lds
jp
je
aam
cmp
cmp
les
gs
dec
mov
mov
lds
dec
jl
push
test
pop
outsb
push
and
loopne
sahf
idivb
inc
movsl
cmp
mov
cmpl
inc
pop
mov
xor
xor
add
push
sahf
dec
fnsave
int
int3
add
inc
jge
xor
popa
mov
fsubrs
orb
jmp
sahf
xor
push
fisttpll
adc
inc
cmp
mov
jecxz
jmp
adc
xchg
insl
mov
lods
cmp
mov
aad
jb
add
aam
mov
adc
and
int3
mov
je
cmp
cmc
push
lods
jae
andb
mov
sub
insb
push
test
in
sub
call
xchg
int3
int3
fld1
cli
iret
push
in
loopne
jns
push
das
and
dec
xor
cwtl
das
lods
mov
dec
call
lret
mov
jmp
mov
fsubp
in
lods
ret
pop
xchg
test
shll
bound
xchg
iret
loopne
test
inc
dec
je
aaa
enter
int
loope
xchg
or
scas
mov
mov
mov
and
sub
and
push
sbb
jbe
push
jl
xor
mov
cltd
faddp
mov
inc
jmp
mov
daa
loope
push
in
xchg
sbb
in
rcll
setl
pop
sbb
je
stos
arpl
cld
sub
sbb
fimuls
pop
push
aas
inc
jecxz
test
xchg
jecxz
mov
das
adc
mov
cmpsb
jns
add
mov
lahf
xchg
arpl
and
inc
cwtl
jno
shl
adc
mov
xor
adc
call
and
aam
sub
jne
stos
popa
push
je
popf
add
call
insl
ficoms
repz
sub
lret
stos
dec
and
push
xor
ficoms
loopne
mov
leave
lods
adc
add
pop
sub
or
sbb
mov
or
or
stc
neg
sahf
out
subl
and
push
push
fistpl
push
mov
aad
fnstcw
fisttps
das
inc
jne
inc
in
mov
push
sub
dec
pop
mov
sbb
jle
mov
cmp
imul
ret
ss
imul
inc
cmpsb
es
rorl
lds
push
in
shll
xor
lret
cmpsb
mov
dec
inc
test
sarb
iret
adc
jo
or
in
sbb
push
add
dec
roll
mov
pushf
jle
negb
addr16
xchg
stos
jl
mov
in
and
xlat
push
or
mov
adc
fcoml
jae
inc
cmp
inc
and
jge
jne
cmp
fcoml
cmp
aam
outsl
hlt
xchg
add
test
clc
das
push
add
cmp
sete
jbe
adc
sub
out
jle
push
mov
and
mov
mov
xor
out
movl
outsl
xchg
rcl
xchg
mov
sub
xchg
mov
push
cmp
xchg
lds
mov
sub
sbb
sbb
outsl
jg
sub
ljmp
stos
std
dec
sub
shl
or
movsl
cmp
jno
lcall
mov
sar
cmpsl
aas
add
scas
leave
lock
pop
push
cmp
shll
jge
int
rcll
jl
or
mov
daa
dec
and
xor
into
dec
and
mov
movsb
mov
xor
push
adc
je
nop
jge
pop
fsincos
bound
adc
negl
add
je
push
add
mov
jno
bound
mov
pushf
fcomps
stc
and
aaa
subl
out
push
push
mov
pop
adc
movsb
out
xorl
mov
sub
or
push
xchg
enter
adc
jecxz
das
lret
das
sub
cmovbe
or
push
inc
push
or
mov
call
sti
repnz
cmpsb
das
mov
ret
and
pop
inc
enter
fwait
mov
cmp
sub
xor
sti
sub
dec
movsl
addr16
xor
add
int3
scas
xor
in
rcrb
sub
aad
adc
xchg
xchg
cltd
and
mov
or
scas
pop
jb
or
mov
hlt
and
mov
imul
push
outsb
daa
test
ret
test
xor
push
mov
idivl
inc
fsubrp
add
loopne
cltd
dec
faddl
cmp
adc
xchg
lret
and
xor
lds
data16
out
sub
pop
clc
pusha
pop
push
sub
fs
mov
test
call
mov
imul
mov
or
imul
xchg
lret
mov
leave
xor
jp
ret
arpl
addl
loopne
push
sub
cmp
xchg
adc
xchg
push
cmp
sbb
outsl
mov
inc
fwait
xchg
push
xchg
lahf
mov
mov
icebp
sbb
xchg
pop
xchg
push
fistpll
in
xchg
cmpb
sub
cli
mov
movsl
mov
lcall
inc
addl
ret
inc
sub
jbe
sahf
movsl
jno
adc
push
adc
test
dec
js
gs
lcall
stc
mov
and
test
jae
lahf
lock
es
inc
mov
cmpsl
xchg
fs
sbb
add
xchg
nop
mov
or
jne
in
pop
cmp
mov
shlb
jmp
hlt
ret
stc
movsl
adc
push
call
mov
mov
add
cmc
dec
fildll
add
es
lds
out
aam
clc
sti
daa
cli
push
jmp
xchg
sub
sbb
dec
push
aas
inc
sti
clc
inc
int3
test
jge
ljmp
sbb
ss
or
xor
in
cmp
loopne
int
jbe
shlb
in
out
out
repz
mov
sbb
cmp
mov
inc
adc
stos
dec
jle
lods
mov
or
xlat
jmp
loopne
jmp
xchg
mov
mov
in
pushf
inc
mov
loopne
jo
pop
mov
mov
ret
xor
lahf
orb
popl
mov
mov
fldcw
aas
inc
jno
push
aam
cmp
int3
xor
lret
lock
in
push
mov
in
sbb
sub
sbb
lds
mov
or
loope
xor
or
addr16
xchg
and
xchg
sub
and
repnz
sbb
push
hlt
push
roll
scas
mov
adc
mov
sub
jle
int
adc
inc
pushf
xlat
jne
xchg
mov
int3
fildl
es
pop
mov
or
jle
sbb
inc
int
mov
sbb
pusha
ja
dec
pusha
dec
bound
mov
mov
xchg
pusha
sbb
in
jnp
mov
sub
cmp
dec
push
test
mov
repz
pop
cli
inc
lock
add
dec
movsb
push
and
lret
mov
in
sbb
push
jno
rcr
add
push
or
xor
fistl
je
push
mov
insl
dec
fimull
dec
or
pop
sbb
jge
pop
or
xor
sahf
icebp
mov
lea
test
pop
mov
pop
sbb
imul
sahf
xorb
popa
xchg
mov
mov
addr16
out
clc
cmp
call
aad
inc
hlt
ret
mov
jne
adc
stc
lea
inc
adc
dec
jns
and
xchg
arpl
cwtl
cmc
dec
inc
xor
mov
repnz
cmp
jo
mov
cmp
mov
jo
lret
xor
outsl
bound
and
or
push
xchg
lods
xchg
xchg
decb
mov
iret
cld
in
sub
adc
xor
cltd
dec
add
cmpsb
lcall
add
mov
push
mov
test
mov
rcr
lds
lds
int
into
or
les
cmp
clc
jl
mov
push
lret
and
sub
mov
cmpsl
loop
jmp
cmp
xchg
fwait
or
icebp
mov
and
mul
push
das
push
xor
fwait
icebp
or
push
fidivrl
push
ficompl
int
jo
repnz
sbb
mov
iret
jecxz
in
repnz
jl
inc
cmp
add
push
and
in
xchg
inc
inc
dec
cmp
jle
dec
dec
xor
xchg
cmpl
rcll
aad
call
pop
adc
xor
push
lahf
push
add
mov
and
adc
ljmp
int
in
sbb
sarl
fmuls
sbb
out
dec
push
arpl
sbb
mov
das
xor
sub
sbb
sub
test
insb
jb
mov
jo
sub
inc
add
sub
push
mov
pop
xchg
idivl
repnz
inc
cmpb
dec
js
mov
fmulp
pop
test
push
pop
xor
sbb
jno
mov
xchg
mov
add
xchg
out
pop
xchg
sbb
pop
adc
cs
in
add
fdivl
dec
out
cli
loope
mov
mov
lret
pop
mov
pushf
rcr
lret
fldt
or
inc
dec
and
ret
mov
lret
inc
sub
loop
xor
mov
cmp
mov
push
cmp
in
xchg
push
pushf
arpl
jecxz
imul
or
mov
jge
mov
inc
jl
fistpll
daa
loop
aas
or
or
int3
add
inc
insb
adc
xor
fwait
clc
lods
mov
out
mov
or
or
mov
mov
dec
sbb
sbb
sbb
sub
clc
dec
mov
fwait
mov
xor
loope
adc
or
sub
sbb
out
mov
cmp
jno
fiaddl
rcll
pop
mov
sbb
sub
ds
mov
sub
or
sub
cli
jg
lahf
jo
pushf
adc
xlat
mov
jg
loopne
or
adc
loop
div
cmpsb
pop
jnp
dec
adcl
mov
nop
inc
or
mov
fs
xchg
jl
cli
fsubp
loope
and
pop
xchg
movsb
rorl
movl
test
ret
enter
sti
jle
and
loop
pop
push
call
movl
stos
push
xor
cmp
mov
or
ja
sbb
mov
notb
movsb
lea
cmpsl
xchg
lods
xchg
adc
mov
sbb
and
cmp
inc
icebp
in
incl
je
jl
jge
mov
rclb
pop
push
or
xchg
xor
cmpb
push
or
mov
adc
sub
movl
xorb
test
push
stc
mov
push
adc
outsb
xchg
pop
pop
test
out
sub
cwtl
jg
sbb
insb
and
dec
or
into
shr
divb
sub
inc
sbb
fsubrs
cmpsl
loop
incl
or
jb
mov
outsb
mov
cmp
mov
ret
fldt
mov
or
and
mov
fisubrs
stc
cmp
ror
std
jae
or
jae
and
aam
sbb
outsb
insb
je
mov
stos
jecxz
call
ja
jge
push
fisubrl
push
or
out
jne
std
sbb
xlat
push
das
push
rorb
or
dec
fisubrl
sbb
pop
or
xlat
cmp
stos
outsl
jbe
jno
dec
pop
jp
sub
xchg
shlb
stc
and
int3
outsb
nop
lahf
dec
mov
mov
adc
cmpsl
cmp
xchg
mov
cmp
inc
xchg
ret
lcall
pop
pop
push
ret
and
loope
shrl
in
xor
and
dec
inc
or
ja
jno
sbb
push
push
popa
outsl
movb
push
fs
jb
out
jne
pop
aad
imul
fistl
rorb
xor
imul
mov
pop
loop
dec
push
fs
cmpsb
out
push
pushf
pop
imul
sbb
cld
jb
into
sbb
inc
sub
sub
icebp
jmp
aas
fcmovb
add
add
pop
lods
ret
mov
mov
xchg
repz
dec
or
mov
xor
fisubl
les
fcomps
lret
pop
repnz
in
mov
sub
xchg
aam
addl
xchg
fisubl
shrl
int
cmp
dec
leave
pop
jb
mov
pop
xchg
and
xchg
hlt
xchg
imul
sub
mov
mov
jnp
imul
fsubs
sti
stc
outsl
fdivl
add
and
xlat
adc
lods
enter
leave
inc
inc
pop
mov
xchg
pop
fistpl
push
sub
test
aam
je
iret
and
mov
jo
int3
pushf
scas
call
pop
inc
and
inc
mov
jnp
fwait
sbb
addr16
ret
shll
aaa
daa
sbb
xor
mov
nop
or
xor
ficompl
adc
mov
test
push
or
ss
sbb
pop
roll
mov
xchg
and
divl
mov
pusha
insb
xor
ficomps
mull
or
pushf
sub
sub
mov
ja
adc
dec
pusha
das
scas
fistpl
repnz
and
add
idivb
dec
cli
movsl
leave
and
add
push
rcrb
xorb
xor
ret
pop
pop
popa
adc
mov
and
push
lcall
pop
dec
fsubrl
lret
jl
je
jle
xchg
push
cmp
mov
out
sbb
mov
or
xchg
adc
orl
icebp
inc
mov
cmc
sbb
cltd
mov
popf
outsl
lret
nop
inc
aad
ss
adc
mov
or
stc
dec
popf
pop
adc
pop
loop
push
jmp
call
inc
push
adc
bound
add
cltd
xchg
ror
popf
clc
cmp
sbb
sar
int3
outsl
stos
jbe
sbb
mov
iret
stos
mov
or
inc
push
push
hlt
out
and
dec
push
fcoml
sbb
stc
stos
inc
fdivrs
jg
push
push
or
mov
add
jns
fwait
pop
js
dec
mov
movsb
mov
insb
jno
sbb
insl
push
sbb
js
cmc
aaa
xchg
push
xchg
loope,pt
mov
xchg
lcall
movsb
stos
leave
imul
inc
fildll
pop
out
jge
int
scas
lock
cld
aaa
enter
popa
push
sub
shrl
lds
xorl
jle
sub
ljmp
xor
aas
stc
add
jae
test
and
sbb
out
outsb
adc
std
nop
idivb
mov
lret
sub
mov
ret
insl
int3
sub
ljmp
out
jb
in
repz
bswap
adc
add
addr16
out
ljmp
cmp
mov
in
loop
jbe
lahf
icebp
fsubl
push
cmp
fimull
das
aaa
sub
dec
cli
scas
add
xor
cli
gs
jne
push
cmp
lret
popf
sarl
arpl
icebp
adc
jl
data16
or
pop
cmpsl
dec
jl
sbb
jl
sbb
add
iret
pop
les
mov
aaa
adc
hlt
push
or
jmp
movsl
popa
decl
inc
ret
lods
jno
sarl
aas
jle
push
xchg
lea
clc
call
lahf
incl
icebp
rol
jb
lock
pop
jns
bound
dec
mov
lret
inc
data16
push
push
test
aam
ja
mov
mov
shll
pushf
push
dec
stc
dec
cwtl
enter
push
jmp
and
lock
stc
jg
jg
adc
cltd
dec
sub
out
testl
inc
call
pushf
subl
leave
push
fs
jge
fs
inc
cmovae
xor
popa
push
icebp
in
pop
inc
sub
add
dec
idivb
push
mov
leave
inc
pop
sahf
adc
push
mul
lcall
push
add
das
test
mov
adc
mov
jle
and
cmp
jge
pop
cmp
insb
lds
enter
sub
scas
sti
mov
test
xchg
push
pushf
mov
hlt
pop
xchg
add
loop
dec
adc
lods
jge
and
jp
jns
mov
icebp
jno
inc
dec
mov
scas
adcl
repnz
popa
nopl
stos
cld
daa
push
pop
jb
pop
int
xchg
push
idiv
cmp
pop
xor
jno
sbb
xchg
mov
xchg
ror
xchg
jns
rcl
inc
frstor
cmp
add
mov
push
mov
fwait
ss
fs
and
andb
outsb
push
jno
popf
and
fisubl
popf
rcr
hlt
pop
out
xchg
mov
adc
aad
dec
adc
jne
cld
loop
xchg
jnp
xchg
andb
jno
jge
sbb
adc
adc
nop
movsl
jo
lret
mov
scas
dec
sub
loopne
mov
outsb
and
test
cmp
call
xor
mov
add
loop
pop
xchg
dec
test
enter
rorl
xchg
scas
cwtl
xchg
sbb
pop
adc
cmp
pop
pop
enter
cmc
inc
pop
test
mov
mov
outsb
xchg
sbb
outsl
cmc
pop
pushf
stos
int
test
jp
xchg
or
jbe
xor
enter
sbb
pusha
stos
popa
cld
adc
in
xorb
xchg
stc
jge
fildll
xchg
out
xsha1
cmpsb
or
cmpsb
ja
dec
mov
imul
cwtl
fnstenv
dec
jne
pop
negl
outsb
xchg
xchg
add
fwait
cli
and
sub
cmp
cmp
mov
cmp
mov
mov
nopl
adc
jg
dec
push
mov
jecxz
cld
xchg
xchg
icebp
js
cmp
xlat
les
aam
cmc
fnstsw
jecxz
add
adc
push
inc
xchg
fsubrl
mov
jo
jb
mov
sbb
mov
in
mov
xchg
cli
mov
jge
xchg
call
mov
jnp
fisttps
or
sub
xor
cmc
leave
adc
imul
push
or
cmpsb
push
push
adcb
out
stos
data16
pop
mov
mov
and
les
sbb
cmp
in
scas
das
rol
mov
cmp
in
mov
scas
jmp
int
sub
out
sub
icebp
aam
mov
push
pop
stos
sahf
in
push
cmp
jb
daa
fnstenv
aaa
cmp
roll
call
dec
addb
roll
or
jns
cmpl
adc
and
jae
or
mov
cs
or
xchg
lods
test
loopne
jle
cli
or
pop
jl
imul
lret
cli
out
sub
sbb
or
std
scas
fsubs
add
fs
std
bound
jns
test
arpl
jns
mov
cmp
movsb
clc
jg
push
sbb
repnz
sahf
push
arpl
pusha
out
fildl
jnp
pop
fwait
aas
add
mov
or
lods
xchg
sbb
push
pop
jne
xor
pop
pushf
adc
xchg
dec
cwtl
inc
or
popa
movsb
adc
push
inc
aam
mov
ss
lcall
sub
flds
test
lock
cwtl
jno
es
in
cli
flds
addl
inc
push
mov
adc
cwtl
mov
je
xor
pop
jmp
xchg
shlb
ja
xor
bound
add
push
cli
ljmp
pop
stos
iret
scas
push
mov
adc
push
shll
xor
ja
lods
out
stc
xchg
in
imul
jmp
data16
jbe
jp
xchg
cmpl
push
xchg
jle
icebp
lret
xchg
cld
adcl
movsl
mov
adc
sub
mov
add
inc
cmp
loop
insb
lahf
movsb
push
jmp
stos
rcr
dec
cwtl
outsb
cmp
idivb
jnp
sbb
pop
xor
adc
repz
or
testl
fcmovnbe
push
iret
cmp
mov
ficoml
cmpsb
sbb
loopne
adc
aas
push
popaw
ljmp
mov
aam
inc
sahf
mov
pop
insl
lcall
leave
inc
xchg
call
dec
push
mov
loop
xchg
inc
sbb
jno
fwait
sub
ficompl
les
add
cld
xor
adc
cmp
mov
mov
in
arpl
mov
push
daa
test
mov
xchg
xor
lret
or
inc
jb
repz
xor
push
or
push
addb
inc
jnp
shr
mov
push
out
imul
inc
mov
xor
pop
fstpl
adc
es
mov
push
cmp
jge
dec
test
mov
int
clc
stc
inc
outsb
scas
sbb
mov
dec
add
insb
lret
mov
ljmp
mov
sub
and
enter
lods
pushf
hlt
mov
mov
cli
dec
int3
in
hlt
xchg
popa
sub
pop
xchg
adc
stos
and
xchg
aaa
test
clc
push
fldcw
inc
enter
fwait
mov
xchg
adc
fcom
icebp
add
scas
jp
nop
fcom
aad
sub
mov
inc
push
cwtl
cli
xchg
push
fs
daa
sbb
jo
xchg
cmp
mov
mov
adc
lret
lods
cmpsb
ret
dec
cmp
dec
inc
pop
int3
xor
sti
pop
es
fstps
push
lds
cmpsb
jnp
mov
pop
mov
mov
stc
push
push
add
lods
cmp
test
or
lods
pop
movsb
dec
enter
xor
push
jl
adc
inc
sub
negl
cmpsl
data16
imul
leave
inc
daa
xchg
ja
xor
das
insl
cmc
sub
je
pusha
mov
jle
mov
lahf
fdivl
dec
ja
es
jbe
sahf
pop
push
ret
push
test
cmp
jle
scas
adcl
jne
sbb
sbb
jo
push
mov
stos
loop
adc
mov
ror
adc
inc
hlt
dec
cmpsb
xchg
mov
jle
and
test
lret
inc
mov
loop
aad
int3
vmread
in
shrb
mov
dec
aaa
ret
mov
push
arpl
daa
sub
pop
iret
jp
fldcw
call
jle
in
pop
mov
dec
movsl
sbb
mov
out
sbb
outsb
test
or
xchg
das
mov
jp
iret
inc
sub
in
ljmpw
adc
stos
inc
push
rolb
loope
dec
cmp
out
push
xlat
cltd
gs
jmp
cmp
loop
mov
or
mov
stos
add
loopne
lahf
or
xor
popf
dec
sbb
out
xchg
sbbl
sub
pop
mov
movsb
jae
mov
lret
push
in
push
mov
rcll
lret
ror
jge
call
jns
mov
adc
mov
sbb
mov
sbb
vmovups
lock
mov
lret
pop
divl
dec
cld
repz
insb
dec
cmp
sub
cmp
cld
icebp
xor
or
mov
sbb
xchg
sub
add
out
jo
pop
sub
cmp
push
sub
loopne
test
bound
daa
inc
icebp
mov
mov
enter
and
loop
jnp
mov
push
ja
mov
hlt
sub
test
fcmovnb
aaa
arpl
cmpsb
sbb
inc
out
jnp
cli
rolb
and
and
mov
pop
adc
dec
les
stos
pusha
jb
shlb
inc
sub
xchg
jmp
dec
or
xchg
lds
dec
cmpsl
loopne
mov
ret
vcmpss
fbld
out
adc
lret
movsb
or
xchg
stc
cli
cmp
sbb
or
insl
add
pop
and
movsb
cli
shl
sub
test
mov
fwait
mov
sti
push
adc
xor
jg
jns
testb
pop
xor
and
push
mov
mov
or
ret
aam
mov
push
xor
push
mov
lcall
pop
aad
into
std
in
mov
sti
sub
std
xor
mov
test
in
into
pop
or
test
push
mov
xor
out
clc
mov
fldcw
lods
sbb
xchg
scas
shl
cld
aas
xchg
sub
mov
popa
and
mov
mov
xchg
int3
inc
and
xchg
jmp
lds
jo
pop
push
test
outsl
adc
adc
aaa
sub
xlat
shlb
mov
cmp
sub
pop
movsl
in
push
sahf
adc
sahf
and
or
jp
das
ret
je
jg
subl
movsb
cmp
jo
shrl
scas
outsl
xchg
adc
popa
scas
mov
dec
cwtl
pop
sbb
mov
je
mov
shlb
or
push
pop
add
mov
and
sub
jbe
inc
mov
jno
insl
push
dec
mov
mov
sub
sbb
jp
cmpsl
mov
cs
in
pusha
nop
push
dec
xchg
arpl
and
leave
sbb
sbb
shlb
xor
into
jnp
fisubrs
negl
mov
imul
sub
mov
jns
aam
popf
shll
jg
xor
pusha
pop
mov
ds
rorl
lahf
adc
push
lcall
cmp
mov
stos
inc
jnp
cmpsb
push
xor
jp
sbb
jb
fs
pop
call
fisubl
sbb
push
add
lds
scas
fdivrs
push
ret
cmp
out
repnz
jb
pop
scas
inc
aad
sub
mov
dec
dec
push
sti
daa
pop
adc
pop
xchg
xchg
imul
jno
mov
dec
rcll
xchg
mov
pop
xor
repz
dec
enter
enter
dec
xchg
dec
pop
pop
lret
gs
cltd
cmp
and
dec
jns
and
mov
lods
dec
orps
adc
fstps
sub
mov
jo
repnz
adc
clc
xchg
roll
movsl
pushl
lret
and
jg
pop
insl
jns
and
mov
fxch
sub
or
test
xchg
jl
out
out
pop
cli
pop
iret
fcom
mov
aaa
pop
rcr
mov
sbb
es
pusha
pop
inc
mov
scas
add
pop
and
fistpll
adc
dec
cli
in
add
push
sbb
out
fucomp
outsb
fstpl
jnp
jl
jle
sub
pop
fisttpl
inc
in
imul
in
je
ja
pushf
adc
cltd
ja
sbb
mov
lahf
mov
xchg
leave
or
mov
pop
xor
std
fwait
push
dec
test
xchg
imul
xor
cwtl
test
push
sub
push
ss
rol
pop
or
mov
nop
leave
scas
push
xchg
scas
idivl
mov
push
stos
pop
adc
lret
mov
movsb
lds
cmp
popa
dec
jg
pop
jns
cmp
xchg
push
jl
scas
mov
loopne
imul
or
push
dec
inc
aas
sub
subb
mov
inc
xorl
push
int
push
orb
sub
mov
jns
cmp
dec
cwtl
dec
clc
pop
ror
clc
pop
call
pop
lods
push
sbb
lock
pop
mov
dec
sbb
mov
cmc
xor
in
aad
jl
dec
rclb
roll
xor
stos
xchg
cmc
adc
addps
jns
lds
fsts
outsl
dec
std
sub
jns
popa
xchg
iret
jl
lods
pop
rol
inc
xchg
sbbb
sbb
cmp
and
mov
jae
jnp
and
stos
jp
inc
push
and
and
mov
test
fwait
mov
adc
jns
mov
cmpsb
mulb
pop
je
jns
cmp
mov
mov
adcl
jmp
mov
xchg
stos
pop
mov
mov
mov
xchg
sub
inc
or
jp
pop
cltd
dec
mov
fidivs
xchg
in
insb
inc
push
jae
jnp
xchg
jmp
xor
je
pop
adc
mov
mov
or
pop
cmp
fimull
mov
shlb
pop
mov
cli
sub
inc
ds
mov
scas
dec
nop
pop
dec
cmpsb
xor
or
popa
ja
into
xor
mov
push
dec
iret
test
inc
fwait
js
cmp
xchg
jnp
sbb
or
adc
push
fld
jl
fwait
push
sub
or
cmpsl
dec
lods
sub
jo
jae
mov
int3
xlat
dec
dec
pushf
negl
jb
dec
and
cwtl
mov
orb
mov
adc
gs
ljmp
clc
push
inc
imul
jo
in
push
push
in
add
lods
push
or
mov
inc
adc
xchg
cmp
jns
test
mov
pinsrw
iret
sti
stos
ret
andl
add
mov
push
fld1
dec
push
xchg
mov
xchg
cmpsb
lock
mov
adc
scas
and
sbb
pop
xor
cwtl
daa
jl
ret
adc
repnz
ss
test
loopne
imul
xchg
cltd
sbb
aas
mov
in
aad
sbb
mov
cmp
push
and
xchg
and
leave
xchg
jbe
stos
imulb
or
sbbb
mov
jbe
or
fbld
mov
sub
fs
imul
lods
outsb
lahf
decb
out
shl
fcomp
adc
mov
sub
cmpsl
stc
xchg
adcb
pop
repnz
out
jb
dec
mov
fstl
test
mov
lahf
inc
pop
cmp
shlb
inc
sub
xchg
inc
lods
rcr
mov
push
cmpsl
stos
int
pop
push
and
xchg
mov
fnstsw
push
inc
pusha
or
add
rcll
pop
xchg
add
pushl
flds
pushf
jnp
lds
mov
cmp
lret
add
sub
xor
pop
jo
and
add
add
iret
push
lret
lahf
aam
arpl
data16
mov
les
adc
push
pop
lret
and
pop
or
xchg
ret
popa
push
mov
jecxz
mov
push
syscall
cwtl
xor
xchg
icebp
int3
mov
iret
push
andb
and
lea
or
add
repz
pop
add
xchg
inc
imul
enter
fidivrl
in
das
xor
pop
add
cmpb
xchg
loope
cmpsb
mov
addr16
pop
daa
push
std
das
int3
loopne
sbb
mov
sbb
sbb
pop
ret
adc
lea
pop
push
test
pop
dec
and
xchg
cmpsb
scas
mov
repnz
pop
mov
xor
inc
sbb
insb
ss
xor
out
fnstcw
adc
cmp
add
jl
lds
pushf
jb
mov
cmp
fcom
xchg
call
inc
int3
sti
clc
popf
cs
inc
arpl
mov
mov
loop
push
and
and
fdivl
inc
daa
adc
mov
xor
sub
dec
dec
rolb
mov
lock
ljmp
jae
shrl
fldl
and
js
sbb
repz
arpl
and
jo
neg
pop
pop
stc
jbe
loop
jmp
mov
jnp
dec
cwtl
dec
cmp
mov
pop
loop
jg
cmpsb
xrelease
mov
shlb
jl
add
adc
mov
mov
lahf
dec
mov
inc
mov
aad
and
inc
push
push
add
loope
adc
sub
sub
sbb
scas
arpl
xchg
fiadds
pop
ret
sbb
lcall
ss
loop
xlat
jle
fs
jmp
loopne
adc
dec
mov
cltd
aad
xor
cmc
or
cli
ljmp
out
nop
addl
push
divl
jne
pop
jmp
fiaddl
push
fidivrl
into
inc
sub
inc
sahf
dec
add
jmp
dec
dec
cmp
sub
addl
or
dec
xor
push
int
arpl
pop
and
enter
fisubs
aam
and
cmp
pusha
lds
xchg
adc
xor
jle
rclb
imul
mov
push
in
xchg
aad
mov
cmp
and
sub
cmpsb
test
pop
add
popf
out
ret
cld
testb
xchg
les
xchg
icebp
mov
add
push
jno
xor
pop
pop
pop
icebp
mov
jl
sub
push
stc
cmp
addb
adc
icebp
mov
js
sub
outsl
xor
dec
and
and
pop
push
scas
int3
push
mov
push
into
add
in
pop
xor
loopnew
lds
inc
and
dec
mov
xchg
addl
push
imul
fists
call
cmp
insl
jb
loop
cmp
lods
push
or
xor
cmpsl
ja
mov
std
adc
imul
add
orb
arpl
int
mov
xchg
lds
int
mov
push
sub
sahf
lret
loope
jle
push
xchg
divb
pop
mov
scas
lds
daa
mov
push
sbbl
call
mov
popa
repnz
jle
out
sub
inc
xchg
jecxz
out
scas
call
jl
stos
shll
sbb
outsb
iret
xor
sub
jb
jb
push
dec
mov
ret
loope
jmp
jbe
pusha
test
sbb
dec
sub
fcoms
push
add
cmp
mov
call
scas
mov
adc
inc
add
mov
sbb
fwait
arpl
inc
lods
out
push
dec
pusha
or
loope
jne
sbb
mov
aaa
lds
sbb
pop
aas
rcr
pop
pop
add
xchg
push
lcall
in
sar
push
fbld
test
stc
gs
add
dec
fnstsw
repnz
and
add
sbb
fs
and
push
or
out
mov
add
shlb
mov
mov
xor
xlat
jg
xchg
xor
fidivs
fisubs
cli
sbb
jg
das
cmpsl
lods
test
add
add
adcb
out
adc
aaa
ret
xchg
mov
outsb
and
and
in
movsl
jbe
mov
sbb
mov
dec
lret
or
ret
jne
sbb
mov
sbb
push
ror
jbe
fidivl
inc
idivb
shl
popf
adc
nop
ds
in
lods
push
mov
shrb
mov
inc
cmpsl
ret
and
lds
mov
aas
push
in
pop
lcall
aas
mov
jg
mov
mov
fisttpl
jb
in
pop
imul
je
xchg
mov
dec
popf
adc
add
sbb
push
pop
bound
jae
jb
pusha
js
pop
out
aam
mov
sub
idivb
adc
pop
stc
imul
pop
out
xchg
test
xor
mov
mulb
out
popl
gs
xor
sbb
ja
cs
inc
jle
movsl
loope
insb
adc
mov
inc
fwait
cltd
lock
int3
addl
hlt
movb
fisttps
jecxz
aad
das
sbb
loop
xor
scas
lret
sbb
stos
ror
mov
outsl
call
andnps
cmc
jmp
movsl
insl
rorl
out
aaa
subb
sub
sub
pop
push
test
mov
push
in
mov
xchg
insb
fcom
lcall
fisttpl
xlat
mov
mov
insb
jle
ds
fisubrl
jg
sub
enter
jo
sub
lcall
movsl
push
push
scas
push
cli
and
loope
xor
pusha
sub
push
out
das
inc
cmpsl
les
mov
cmpsb
add
ss
jnp
insb
add
cltd
sti
loop
ds
push
js
mov
scas
lret
jae
imul
xchg
es
and
loope
pop
lar
iret
movsb
nop
shl
adc
lea
ja
mov
ror
fstl
stos
adc
pop
in
das
mov
mov
dec
arpl
mov
pop
add
mov
sub
les
shlb
mov
test
sub
mov
loop
repz
shrl
adc
rcrb
cmp
ret
dec
hlt
iret
jecxz
es
jb
adc
mov
inc
mulb
dec
mov
jg
push
push
add
pop
lea
std
je
je
out
dec
add
lcall
xlat
pusha
mov
je
jecxz
fidivrs
push
in
je
mov
andl
dec
jbe
rclb
mov
cmp
dec
mov
push
daa
pop
mov
enter
hlt
rol
mov
add
jle
xchg
mov
sar
sbb
fstps
mov
insb
sub
adc
push
dec
adc
xchg
push
js
push
ja
int3
cmc
add
pop
loop
push
and
cmc
inc
jge
call
mov
pop
dec
mov
popf
sarb
inc
mov
cmp
cmp
jb
xor
cld
aad
adc
mov
mov
mov
mov
lock
xchg
int
mov
mulb
jle
repnz
sarl
adc
mov
fwait
mov
test
cmp
xor
stc
cltd
and
lds
and
mov
xrelease
aam
ds
jg
outsl
pcmpgtd
push
xor
mov
add
push
xchg
dec
mov
push
cmp
insb
adc
push
ds
inc
xor
leave
cmpsb
daa
pop
cmp
inc
filds
xrelease
out
shr
jmp
fucomi
pop
push
les
ds
aas
dec
jmp
mov
out
xor
jnp,pt
adc
mov
inc
pop
sub
imul
mov
ljmp
mov
adc
testl
push
mov
scas
push
jle
sub
mov
add
pop
aam
rcrl
mov
sbb
mov
sub
inc
sbb
sub
or
fidivrs
mov
ds
addr16
js
insl
inc
and
cmp
aaa
repz
jmp
sbb
subb
sbb
mov
movsb
add
rclb
cmp
loopne
pop
mov
sti
out
pop
mov
je
rorb
imul
xchg
mov
enter
das
xorl
pop
jge
xchg
mov
xchg
mov
in
in
add
xor
or
mov
xor
sub
test
cmpsb
jp
fwait
and
or
add
push
outsb
repz
ret
sub
jae
lret
xchg
push
xor
or
loope
fwait
lret
jl
lret
lods
insl
in
cmp
in
lret
and
dec
ret
out
movsl
or
filds
in
mov
stos
dec
inc
mov
xchg
hlt
mov
xchg
fsts
xchg
xlat
fucomip
clc
jnp
xor
mov
xor
dec
push
sub
je
mov
into
and
push
push
lahf
repnz
sahf
aas
bsr
sbb
std
and
mov
cmpsb
cmpsb
xchg
pop
mov
xor
sbb
mov
mov
jnp
mov
or
add
into
inc
jne
xchg
fbstp
loopne
mov
xorb
mov
jg
out
arpl
dec
dec
fsubs
add
mov
aad
mov
loope
mov
cmp
add
in
lea
stc
outsl
push
aad
fwait
or
flds
jbe
fmull
pop
cmp
xor
data16
iret
rol
inc
jg
hlt
or
sub
into
push
test
cltd
or
mov
in
sbb
cmp
das
mov
gs
pushf
pusha
mov
and
mov
xor
stos
test
sti
lods
xor
inc
gs
jecxz
jg
mov
cmpsl
add
fadds
inc
sbb
incl
clc
adc
lret
in
inc
or
orb
dec
orl
lret
andb
in
inc
add
in
aam
ljmp
fistps
mov
int
lods
push
dec
and
idivl
leave
inc
cwtl
xchg
inc
pop
fdiv
lcall
inc
xor
das
sbb
pop
push
mov
incb
fdivrl
out
jns
test
movsl
jge
mov
fcompl
push
pop
adc
pop
dec
mov
stc
cmp
xor
cmp
and
dec
sub
fistpl
mov
jmp
in
push
mov
xchg
inc
mov
cltd
sbb
jnp
repnz
gs
and
pop
enter
inc
xchg
adc
adc
xchg
sbb
mov
or
enter
pushf
xchg
andb
fwait
and
cmp
test
scas
ds
inc
push
inc
mov
ds
jno
dec
sub
jmp
jae
in
mov
lock
out
fcmovu
mov
adc
in
cmc
mov
fisttpll
sbb
sub
pop
sub
inc
cmpsl
inc
or
xchg
xchg
in
adc
dec
shrb
lahf
js
cmc
jl
into
icebp
mov
scas
scas
push
lahf
xchg
cmp
sub
mov
and
push
scas
cmp
repz
add
lea
fs
aam
mov
into
enter
test
inc
mov
clc
jecxz
ror
xchg
xchg
ret
push
mov
cmc
ja
mov
pop
test
xchg
frstor
pop
and
in
adc
jecxz
jbe
das
outsb
hlt
and
jmp
pop
mov
xchg
ljmp
inc
or
dec
mov
xchg
je
faddl
int
insl
iret
lcall
jnp
lcall
inc
fnstsw
mov
add
cmp
imul
or
in
add
mov
out
cmpsb
int3
mov
xchg
push
pop
xchg
cli
lahf
inc
pop
aam
insl
mov
jns
lea
gs
shlb
xchg
or
xchg
xor
out
rcrl
cld
jo
adc
xchg
push
mov
adc
ljmp
add
cmpl
bound
mov
inc
xchg
and
ja
insb
and
daa
sbb
sub
mov
cmp
jbe
lds
jne
mov
mov
jb
mov
jb
push
jae
sub
sti
add
cwtl
mov
or
mov
scas
push
stos
pop
shrl
iret
cmpl
fs
aam
lahf
imul
lcall
cmp
sub
movsb
lcall
mov
xchg
lods
sbb
pop
test
or
arpl
jge
xchg
inc
sub
mov
das
sbb
or
add
lods
or
decl
pop
xor
sahf
pusha
jmp
cmpsl
inc
clc
sbb
fistl
aam
fadds
mov
mov
xor
or
xchg
ja
push
push
int3
dec
mov
jnp
dec
into
pop
dec
or
nop
stos
push
mov
mov
pusha
mov
shlb
add
int3
push
pop
iret
imul
inc
popf
jnp
dec
and
out
dec
dec
lods
inc
xor
sub
repnz
xchg
jge
out
push
fbld
int
ja
out
mov
test
repnz
imul
test
jg
and
xchg
insb
sbb
mov
sahf
mov
incl
mov
bound
frstor
inc
lods
mov
xor
inc
add
popa
sti
inc
data16
xchg
cmp
lret
add
xor
mov
lcall
pop
mov
lea
mov
ljmp
iret
cld
dec
add
ret
cwtl
jno
cmp
clc
js
and
push
fisttps
xor
or
jns
mov
pushf
stc
mov
inc
fldcw
ja
jae
lods
dec
add
es
cmp
mov
xchg
push
rcrb
xchg
dec
dec
test
cltd
lret
push
jecxz
outsl
push
adc
aam
fld
inc
icebp
call
inc
pop
mov
push
xchg
ret
jb
mov
sbb
leave
mov
pop
jle
lcall
mov
sbb
mov
jo
mov
xor
nop
repnz
nop
mov
adc
jne
lahf
jle
xor
mov
jmp
into
mov
js
pusha
loop
xchg
jb
stc
orb
in
mov
add
add
pop
dec
pop
mov
ds
cmp
in
int
and
repnz
rclb
sub
fwait
outsb
shrl
mov
in
fwait
arpl
ds
rorl
mov
and
or
outsl
xor
pop
fs
xor
int3
sti
inc
jl
sub
jecxz
mov
xchg
cmp
hlt
sbb
pop
scas
sahf
inc
mov
cmp
cmp
push
out
stos
mov
aam
lahf
xor
pusha
mov
mov
pop
iret
ret
gs
jb
or
cmp
xor
add
jp
mov
adc
or
ss
pop
mov
sub
das
dec
mov
jns
xchg
leave
ljmp
mov
mov
fs
enter
jle
movb
or
fwait
es
stc
cwtl
jp
cli
daa
pusha
test
xchg
push
gs
sbb
or
sahf
stos
mov
mov
mov
xchg
jo
sbb
pop
xchg
mov
jmp
mov
mov
mulb
pop
lahf
repz
jmp
inc
adc
test
out
dec
ficomps
jle
pushl
ret
insb
mov
sbb
or
jle
or
push
push
rorb
xor
popf
adc
cmp
cli
stos
shl
jle
xchg
in
push
mov
xor
xchg
mov
jge
jno
cltd
mov
jnp
mov
and
push
cltd
xchg
and
sbb
push
sti
jmp
mov
and
sub
arpl
js
and
mov
adc
ret
push
or
sbb
push
loop
iret
or
sahf
test
push
mov
inc
ljmp
pop
call
mov
pop
add
test
dec
fnstsw
popw
into
mov
dec
in
jecxz
and
cld
add
mov
cmp
push
cmp
pop
jecxz
push
xchg
mov
pop
int3
inc
xchg
mov
pop
mov
xor
push
xchg
push
mov
roll
pop
sbb
in
dec
xor
scas
std
scas
lret
test
cld
mov
popf
xchg
xchg
inc
inc
sub
enter
das
cmpsl
push
sub
cmpsb
mov
or
dec
in
movsb
in
jmp
ret
or
and
xchg
add
add
sbb
lahf
in
xor
sbb
and
test
xor
inc
xchg
shl
inc
or
pusha
and
jno
jo
xor
xchg
mov
push
push
xchg
ret
pop
mov
jae
add
mov
in
in
xchg
and
xchg
xchg
add
movsb
cmp
mov
sar
sub
ja
int3
mov
aaa
cltd
xor
loope
out
in
mov
dec
bound
xor
xor
pop
cmp
pushf
daa
dec
aam
sub
repz
push
pop
icebp
pop
pop
pop
es
inc
test
cli
lcall
and
daa
jp
fsubrl
cltd
inc
push
aaa
cli
cwtl
popl
add
cs
dec
pop
add
mov
xchg
mov
test
xchg
push
pop
subb
cmp
or
or
pop
cmpsb
mov
xor
movsl
cli
insl
dec
iret
lods
add
hlt
xchg
lret
fwait
adc
outsl
cli
mov
test
popf
mov
or
mov
pop
std
idivb
mov
les
and
std
or
in
inc
xchg
add
js
ljmp
rorb
cmpb
sub
addr16
adc
cwtl
ss
cwtl
add
scas
pop
push
insb
inc
cmp
mov
fucomi
mov
xchg
std
pop
call
jge
repz
and
in
in
dec
outsl
lret
pop
addr16
lcall
fisubrs
or
dec
xchg
dec
ds
ds
adc
idivb
mov
add
scas
add
jge
in
stos
xor
ret
icebp
ljmp
cltd
pusha
adc
popa
lcall
shl
mov
mov
das
mov
jns
movsl
loop
jp
or
push
movsl
mov
addr16
jae
outsb
push
jle
cmp
popf
or
or
jge
add
es
push
fisubs
sbb
test
lea
pop
cltd
js
lretw
lods
test
xchg
sub
xlat
cmp
das
iret
cmc
push
cmp
inc
ljmp
pop
sbb
inc
popf
lea
xchg
adc
out
stc
push
and
mov
je
pop
mov
xor
pop
in
pushf
and
push
lock
mov
popa
inc
arpl
cs
add
mov
test
std
mov
mov
cmp
imul
xchg
xchg
jb
cs
sarb
movsb
push
into
jb
out
shrl
mov
cmp
xchg
add
or
or
pop
jne
sbbb
setge
outsb
cltd
mov
jecxz
sbb
sbb
rorb
mov
xchg
mov
dec
call
xchg
jecxz
sbb
mov
adc
inc
testl
xchg
lahf
dec
mov
mov
test
sbb
add
roll
jae
scas
sbb
sbb
icebp
mov
hlt
xchg
jo
jmp
mov
or
cmp
scas
push
lock
pushf
mov
xchg
push
sub
sub
out
les
jmp
test
inc
pusha
shll
dec
lahf
dec
shll
repz
mov
dec
sbb
adc
pushf
jge
lods
es
pop
inc
leave
jmp
js
add
fdivs
xchg
jmp
fucomip
insb
ja
scas
pop
pop
ds
and
fsubs
lahf
and
jge
add
in
xchg
mov
aam
pop
dec
adc
nop
pushf
js
lods
insb
jns
jno
mov
stc
pop
outsl
mov
mov
cltd
xchg
stc
cmp
sub
sbb
ret
pop
jle
leave
xor
adc
mov
mov
jb
int
xchg
imul
dec
cmp
push
inc
cwtl
xor
jns
cmpsl
sbbb
or
or
mov
sti
xlat
std
push
xchg
mov
nop
adc
or
mov
adc
mov
mov
inc
sti
pop
fsubrs
pop
xchg
sub
andl
jge
add
insl
fisttpll
adc
pop
xchg
mov
mov
call
mov
cmpl
data16
js
into
jmp
add
inc
jg
add
ss
push
xor
aaa
dec
sub
or
pushf
xchg
xchg
jo
nop
scas
das
sub
pop
and
aam
je
cltd
xchg
adc
bound
jp
mov
pop
scas
pop
and
jp
and
pop
test
fs
mov
lock
add
nop
xor
stos
arpl
inc
mov
repz
inc
xchg
dec
out
rol
sbb
sbb
dec
cmpsb
sub
push
call
movsb
and
ds
mov
sbb
lods
aam
nop
loop
xchg
push
mov
cld
setns
fnstenv
fcomp
out
pop
ljmp
sub
shlb
add
jbe
jbe
dec
jmp
fimull
push
and
jecxz
and
fwait
mov
jbe
pop
dec
fdivr
mov
and
mov
add
jge
or
das
es
rcll
and
sub
mov
adc
arpl
cmp
and
jmp
lods
loop
stos
and
iret
cmp
hlt
jo
sbb
aad
rorb
xor
mov
xor
add
repnz
pop
or
and
mov
pop
push
and
xchg
bswap
mov
adc
aam
jge
pop
mov
fs
mov
stos
movsl
rcll
push
sahf
or
sub
popw
pop
out
mov
enter
sbb
roll
arpl
jge
inc
xchg
or
movsb
or
push
out
push
andl
test
jg
push
hlt
push
stos
cmpsl
jmp
dec
div
xor
push
lds
push
jne
int
mov
out
pop
adc
cs
push
xchg
loop
testb
mov
mov
mov
jg
mov
jb
fisubs
aaa
or
xor
pop
imul
sbb
jmp
test
add
inc
rcrb
iret
pop
inc
into
pop
dec
jnp
inc
imul
xor
frstor
and
pop
cwtl
xor
cmpsb
out
and
stc
fidivs
or
cmp
arpl
sub
into
push
xchg
push
inc
es
mov
mov
cmc
push
adc
jne
dec
push
rcll
or
or
add
mov
subb
add
push
clc
shll
xchg
jmp
int
lahf
mov
movsl
mov
sbb
push
icebp
or
pop
dec
xchg
out
lea
loop
mov
ret
push
stos
cmp
negl
ret
push
mov
insl
aam
mov
and
xchg
gs
add
cmpb
xchg
int
pushl
lcall
shll
xchg
xchg
dec
and
inc
jle
rorb
and
clc
out
sti
add
jmp
lret
popf
fcoml
scas
popf
mov
sub
mov
pop
imul
hlt
mov
stos
mov
negl
icebp
jecxz
push
cmp
pop
int3
mov
mov
fsubp
mov
sub
and
push
add
mov
sar
lods
xor
mov
sub
and
mov
addr16
fdivs
lret
mov
dec
mov
dec
push
xor
mov
sub
loope
hlt
int
push
subb
cld
gs
and
inc
sub
fst
lcall
sbb
leave
pop
sub
mov
or
inc
scas
popa
enter
mov
inc
sub
call
jmp
push
lcall
dec
das
jecxz
ja
adc
mov
push
and
jg
movsb
push
push
jae
mov
push
sti
out
cmp
aad
fstpl
sarb
push
cmpl
sbb
push
addr16
ss
btl
inc
cs
xchg
dec
push
loop
pop
sub
jle
jnp
out
push
pushf
mov
pushf
arpl
mov
clc
add
mov
sub
stos
jo
dec
pop
cs
and
cld
loop
xor
xor
rol
insb
aam
movsb
jo
dec
stos
mov
jns
daa
addr16
inc
add
popf
jno
fldcw
je
mov
or
push
jle
hlt
mov
add
movsl
aad
or
push
or
push
inc
stos
cmpsb
ljmp
add
int3
daa
daa
jp
popf
enter
loope
rorl
dec
in
jne
mov
cmp
repz
sahf
in
push
insl
sub
inc
les
outsl
jbe
mov
xchg
add
aas
cmp
outsb
dec
lret
and
cmp
cmp
imul
popa
es
sbbb
cmc
stos
fistpl
dec
int3
sbb
mov
loope
lods
dec
pop
dec
mull
adc
dec
jno
loopne
sbbl
mov
jno
out
mull
bound
les
ja
pop
add
mov
fnstsw
xchg
ficompl
lea
out
jl
add
or
sub
inc
inc
ds
jns
xor
sbbb
aas
push
es
mov
fisttpl
pop
nop
dec
pushf
pop
lods
cmpsb
inc
in
dec
dec
stc
andl
sbb
scas
mov
lds
das
push
lock
nop
dec
std
xor
jbe
sbb
test
cli
fucompp
jp
mov
sbb
lea
loope
icebp
pop
push
cmp
aam
mov
and
in
ja
mov
mov
ja
test
jnp
cmp
addr16
sub
arpl
lds
mov
leave
outsb
je
sarb
or
mov
xchg
and
mov
mov
adc
and
mov
shrb
mov
in
sub
ds
mov
jbe
shll
push
mov
cmp
loope
lods
scas
cmpsb
jp
jge
adc
fwait
inc
pop
test
dec
inc
dec
shlb
pop
sub
stc
jb
cmp
and
sbb
fsts
jae
sbb
push
iret
xor
test
jbe
stos
nop
sbb
xlat
inc
sub
pop
mov
shll
add
imul
lret
push
inc
xchg
cwtl
and
mov
or
inc
mov
enter
hlt
repz
jns
mov
notl
mov
shr
mov
movsb
inc
dec
jne
lock
aaa
dec
pop
rcrl
flds
bound
mov
or
push
cmp
dec
es
loope
add
mov
loop
shl
and
stos
xor
cmp
jp
pop
jno
int
cmp
xchg
movsl
fsts
cmp
fiaddl
aaa
and
jne
outsl
mov
lock
shll
repnz
cmpsl
roll
add
subl
sub
loop
xchg
xchg
addr16
mov
cmp
cld
push
inc
sub
cli
mov
shlb
lds
dec
mov
push
add
adc
sub
mov
or
xor
mov
xor
xchg
and
dec
mov
add
shlb
sbb
or
sbb
pop
mov
out
dec
cmp
xchg
pushf
xlat
pop
fistpll
push
dec
sub
jmp
js
js
xor
cli
xchg
and
push
lods
cwtl
loopne
lods
sbb
rcll
jo
icebp
enter
or
cli
pop
in
popf
mov
cli
stos
int3
jp
shl
sbb
adc
sub
fstp
and
imulb
icebp
sub
sbb
insl
or
cltd
mov
rorb
xor
cmp
and
inc
lock
dec
sbbl
lock
shrb
mov
pop
push
xchg
inc
pop
sbb
add
jmp
pop
sbb
add
inc
clc
mov
aas
mov
or
frstor
jle
push
dec
leave
cld
outsl
xor
test
icebp
pop
push
paddw
mov
adc
pop
data16
pop
jo
cmpsb
push
sub
aas
loop
pop
mulb
arpl
scas
lret
fsubs
les
sahf
pop
xchg
into
fistpl
shll
int3
mov
xor
pop
sbb
xchg
int3
data16
xor
jg
mov
jl
xchg
jnp
jle
push
call
adc
mov
push
xlat
xor
jg
int3
push
add
sub
xchg
nop
push
jge
pusha
cmp
js
and
add
je
repnz
sub
adc
cmpsl
sub
or
sbb
scas
xchg
and
cmp
das
inc
xchg
cs
add
adc
dec
fstps
ret
cmp
arpl
xchg
cmp
pop
pop
and
cmp
add
fidivl
xor
cmpsb
es
loope
loop
dec
scas
fwait
std
xor
vcvtsi2ssl
mwaitx
insb
gs
in
int3
push
push
movsl
jne
ljmp
pop
inc
push
push
and
xchg
push
cs
lea
xchg
ror
vpsubsw
xor
sti
ss
mov
xor
rcrb
pop
ds
aas
sahf
sub
sub
das
pop
int
les
sbb
dec
repz
aas
mov
jmp
xchg
hlt
loop
ss
ds
mov
cmc
cmp
adc
in
scas
lret
mov
mov
sbbb
inc
arpl
ret
mov
pop
jae
pushf
pop
stc
sbb
loop
movsl
or
pop
or
mov
cmp
inc
xchg
xchg
fistpl
outsl
mov
push
dec
fs
arpl
push
add
pop
inc
sub
shr
arpl
sub
push
xchg
loopne
pop
cmp
mov
pushf
add
mov
dec
jne
pushf
loopne
push
imul
jl
mov
push
test
mov
xchg
push
inc
mov
repnz
dec
outsl
sbb
mov
add
ja
jne
ja
and
imul
out
call
lret
jb
int
rol
ljmp
lret
or
arpl
cmp
popa
pop
and
je
pop
hlt
mov
shl
and
xor
lcall
or
test
mov
test
or
ss
pop
pop
jne
pop
push
mov
cmp
dec
fsubrl
es
pop
and
add
decb
jle
es
push
jge
nop
shl
sub
loop
jns
clc
repnz
inc
adc
inc
call
xchg
dec
inc
mov
sub
mov
add
lock
fsubl
out
pop
jo
jp
bound
jnp
xchg
xchg
mov
cmpb
pop
adc
fwait
adc
mov
dec
sysret
and
cwtl
repnz
jne
and
jl
lcall
scas
mov
leave
lods
loope
dec
lea
jecxz
jne
jo
xchg
and
push
lods
sahf
scas
jp
pop
outsb
jae
xor
dec
adc
scas
mov
pop
pop
inc
mov
enter
cmp
fwait
out
ficomps
push
mov
inc
shlb
shrb
andl
cwtl
lret
pop
adc
lcall
mul
jecxz
scas
sbb
push
je
cmpsl
cs
rcrl
jnp
ds
sbb
mov
lea
jae
movsb
mov
xchg
pop
imul
flds
jl
stos
adc
sub
xchg
mov
ljmp
cmpsl
adc
mov
test
sti
push
dec
dec
push
lds
out
cmp
mov
adc
and
adc
test
lsl
xchg
jecxz
filds
mov
outsb
push
in
sub
add
push
pop
jno,pn
into
mov
nop
push
test
repz
add
add
fstpt
dec
pusha
jge
fstp
pop
rclb
pop
insb
mov
xlat
ja
rcr
or
or
inc
mov
and
xchg
daa
notl
push
sub
xchg
dec
or
xlat
test
stos
mov
call
pop
stc
jb
cwtl
icebp
out
adc
dec
sbbb
mov
xchg
aaa
jg
in
xchg
in
repz
and
out
push
cld
popa
test
inc
dec
dec
xchg
stos
mov
sbb
ljmp
ret
push
in
ret
sbb
adc
push
mov
push
mov
sbb
jae
and
add
and
repz
loope
adc
cwtl
jno
das
ret
shrb
imul
pop
ja
aam
divl
push
or
mov
dec
xchg
insl
sub
jb
pop
dec
adc
je
movsl
loop
inc
and
mov
push
dec
mov
pop
mov
aam
into
dec
and
or
sbb
mov
ljmp
repz
lea
sub
add
mov
inc
push
mov
int3
cmpsl
push
pop
push
xor
shrl
jle
sarl
xor
das
mov
mov
pop
out
pushf
daa
cmpsb
fchs
lcall
mov
or
aas
dec
out
into
filds
jp
sbb
divb
pop
mov
and
arpl
pop
inc
and
mov
mov
fdivrl
mov
jecxz
dec
cwtl
push
push
cltd
imul
mov
rcr
sub
and
push
pop
mov
int3
pop
or
lods
movsl
xchg
ret
jae
js
inc
adc
das
xchg
add
lret
ljmp
aas
cmp
scas
xchg
int3
stos
andl
cmp
xchg
aam
jl
inc
xchg
insl
negb
push
pop
add
lods
and
cmp
mov
jns
mov
shr
xchg
out
data16
aad
fildll
inc
xchg
jmp
inc
sbb
xchg
cmpsl
mov
lret
loop
stc
xchg
jmp
jge
loopne
sub
pop
out
test
nop
fsubs
jb
inc
add
or
or
rcr
and
out
loope
lds
lcall
int3
jne
mov
movsb
test
aas
call
and
jge
inc
push
push
dec
aam
loopne
insl
fsubrl
lds
out
dec
int
mov
xchg
rcl
sub
xchg
pop
sub
or
or
std
mov
inc
or
xor
outsl
stos
fs
movsl
jmp
loopne
leave
pop
ds
mov
xlat
cltd
xor
mov
cld
cmpsl
mov
mov
jl
jge
nop
shlb
mov
hlt
mov
rorb
cld
lods
adc
inc
mov
enter
popf
subl
mov
cmc
lahf
pusha
rcr
cmp
or
and
and
xorb
call
das
dec
arpl
jle
scas
div
mov
dec
xchg
not
hlt
cli
sub
mov
mov
gs
and
repnz
add
push
lret
jg
stos
popa
cmpsl
xchg
xor
push
jnp
popf
mov
jb
xchg
pop
jl
stos
xchg
cmpsl
das
pop
cmc
pop
shll
sbb
enter
add
mov
push
fadds
or
lret
lock
jp
sarl
dec
xor
je
cld
movsb
in
cli
fisubrl
shlb
or
das
push
enter
sub
xchg
aas
mov
orb
test
pushf
push
mov
into
jp
imul
roll
js
push
fmulp
sub
mov
jo
mov
pop
jns
rcl
addr16
pop
les
xor
shll
add
andl
jnp
mov
mov
cmp
icebp
xor
mov
mov
shrl
dec
pusha
and
loope
xchg
mov
jmp
je
flds
jge
dec
js
cmp
ja
sarb
lea
les
jb
mov
cmp
lods
mov
xchg
adc
call
lock
xchg
cmc
movsl
push
test
add
sti
cwtl
dec
and
mov
and
jns
movswl
test
loopne
pusha
jbe
mov
lock
leave
test
cltd
mov
inc
pop
mov
mulb
add
movsb
mov
pop
cltd
cmp
inc
add
inc
fs
mov
add
xchg
js
add
mov
pop
xchg
rol
icebp
test
mov
fnstsw
mov
out
pop
dec
inc
leave
mov
jne
pop
gs
jp
mov
cmp
mov
mov
daa
out
jge
aaa
pop
aad
dec
add
jp
aad
clc
pop
std
inc
jne
mov
std
imul
push
mov
sti
jge
push
sahf
pop
pop
lods
cwtl
xor
lods
imul
pop
mov
jb
mov
lods
jb
jge
jecxz
add
xchg
mov
jb
dec
push
clc
ljmp
and
jmp
repnz
pop
dec
sarb
loope
lret
pop
fdivrs
sub
dec
popf
mov
xlat
mov
fwait
sbb
mov
mov
popa
pop
stos
aad
pop
aam
mov
push
jnp
xchg
or
nop
or
push
push
mov
je
dec
in
sbb
xchg
add
movsb
sub
shlb
cmpsl
pop
popf
sbb
sub
cmp
mov
imul
sbb
push
ljmp
dec
jo
push
les
movl
lret
sahf
mov
mov
daa
adc
test
lcall
jb
rolb
and
mov
clc
xchg
push
lds
insb
jbe
cmp
adc
sub
in
sbb
cmpsl
js
ds
mov
xchg
or
dec
cmp
call
xchg
mov
lcall
xchg
scas
lods
adc
xor
test
int
pop
fwait
insl
pop
rep
rcr
jmp
xchg
or
mov
into
stos
stc
xchg
push
les
mov
test
pop
or
mov
imul
js
fmuls
rclb
lds
mov
call
lds
add
bound
jl
jle
xor
and
xchg
or
scas
mov
jl
push
and
arpl
lcall
gs
jnp
xchg
cmp
sarl
xchg
imull
add
xchg
and
out
mov
mov
idivl
xchg
arpl
mov
std
out
fimull
pop
out
mov
and
cmp
das
xlat
out
negl
push
ja
adc
jbe
scas
test
ljmp
mov
std
or
test
push
loop
mov
inc
popa
xchg
lret
push
rorl
add
pop
xor
shll
repnz
sahf
push
lods
xor
sarl
xchg
cmp
inc
mov
jle
push
in
insb
jns
aad
jb
add
mov
push
call
sub
xor
lods
imul
sub
rclb
jp
outsb
add
cmpsl
inc
dec
pusha
xor
sub
dec
mov
xor
fmuls
xor
aam
jno
cmp
push
jp
lds
jno
jle
andb
xchg
inc
call
jmp
xchg
inc
lock
imul
adc
sbb
fstl
cmp
jge
jbe
dec
lock
adc
ret
lock
mov
jne
mov
inc
je
mov
fnstenv
sbbl
popa
shlb
sub
stos
fcmovbe
mov
adc
add
push
andl
add
aas
jp
add
int
dec
xor
sub
mov
jmp
repnz
jo
sbbl
mov
push
xlat
idivb
adcb
outsb
or
or
rcrb
pop
insb
dec
inc
rep
xchg
lcall
ss
mov
daa
jae
xchg
push
jo
dec
dec
jnp
pop
fcomp
fmul
adc
push
icebp
add
dec
not
push
xchg
jecxz
push
mov
add
sub
nop
js
arpl
int3
inc
hlt
in
in
pusha
cwtl
jmp
cmc
data16
ficompl
push
loop
and
loop
mov
mov
stos
mov
inc
mov
clc
out
hlt
in
pusha
bound
sar
mov
cmp
aaa
fdiv
fbld
push
xorl
mov
mov
mov
pop
add
inc
jl
jns
jbe
dec
sbb
movl
adc
rorb
cs
js
mov
xchg
adc
int3
cli
sarl
and
outsb
xchg
add
testl
out
jo
out
jno
sbb
xchg
nop
into
or
adc
push
sub
int
cmp
add
mov
inc
dec
sub
jmp
data16
mov
test
fldl
mov
xchg
ror
insl
cmp
mov
or
xor
lds
sbb
mov
xor
pop
and
lods
fmuls
xchg
lods
inc
cmp
or
aad
dec
vmovsd
jns
sub
in
std
fs
cld
test
outsb
int
jb
rcrb
mov
rorl
pop
or
pop
lcall
sbb
mov
mov
ss
push
push
in
dec
sbb
sub
xor
jno
sar
insl
mov
dec
and
aaa
push
sub
push
sbb
ret
add
fisubl
mov
out
sbb
shl
ret
mov
mov
scas
mov
fxtract
sar
adc
pop
mov
jmp
hlt
shll
adc
jnp,pn
and
loop
inc
jmp
inc
loopne
inc
dec
adc
mov
xor
dec
push
das
add
mov
mov
pop
xlat
repnz
ljmp
mov
cs
push
orl
add
inc
adc
into
mov
mov
inc
popa
out
push
pop
mov
or
xchg
or
rcrb
inc
aad
xchg
aaa
xchg
call
cltd
lret
pop
clc
ja
insl
jmp
xchg
mov
movsb
int3
test
ds
sbb
pop
into
and
jmp
bound
push
and
jae
sahf
pop
mov
jbe
mov
gs
xor
scas
movsb
and
push
nopl
sbbb
sub
mov
inc
xchg
rcrb
rorl
cltd
mov
into
mov
pop
adcb
rcrb
cmp
dec
lock
nop
out
sub
decb
mov
shrl
mov
int3
lcall
push
fisubrl
cs
fwait
xchg
lahf
aas
test
pop
fsts
dec
lret
pand
mov
out
in
repz
shrl
mov
and
cmp
or
xlat
sti
mov
lcall
sbb
add
xchg
in
xchg
orl
sar
xorl
fs
imul
ds
sbb
add
enter
and
jecxz
fsts
aaa
loop
stos
cmp
aad
movsl
outsl
mov
mov
xor
jae
stos
aam
out
enter
sub
ljmp
daa
mov
xor
sarl
jbe
lods
or
pop
or
das
addr16
ficoml
mov
sbb
pop
mov
daa
mov
sub
or
push
out
jb
js
jl
out
popf
ja
shll
sbb
pop
dec
call
aam
std
pushw
jbe
adc
idivl
int3
pop
sahf
popf
mov
mov
sub
or
mov
fucomip
and
lret
pushf
arpl
jns
push
xchg
xchg
popf
int
xchg
fidivrs
cmc
and
movsl
std
dec
pop
add
iret
pop
cwtl
nop
fdivs
test
dec
pop
jns
lea
aaa
jno
mov
add
pop
xchg
fs
scas
pop
pop
jge
aam
je
jge
stc
cmpsb
outsb
clc
scas
pop
jg
es
push
sub
jl
sbb
or
aad
iret
jb
mov
test
cld
mov
pushf
lock
pop
js
mov
xor
lahf
and
popf
pop
les
and
pop
pop
stos
xor
cmp
and
add
cmp
test
das
mov
sbb
data16
push
xor
call
mov
int3
lods
push
stos
incl
mov
cmp
mov
sbb
push
xchg
loopne
push
xchg
sarb
nop
and
scas
pop
or
adc
sbb
daa
ds
rclb
aad
pop
into
fbld
outsb
icebp
push
adc
jg
outsb
mov
int
out
inc
or
fs
xchg
dec
subl
enter
inc
call
mul
cmpsl
sbb
push
inc
xor
fistps
dec
outsl
ret
xchg
cwtl
lea
xorb
gs
bound
mov
icebp
in
or
leave
stc
mov
or
hlt
nop
jmp
mov
xlat
sub
cld
cmp
int3
adc
int3
dec
mov
out
cwtl
mov
xor
pop
std
push
cmp
sbb
cmp
jge
popf
and
mov
jle
pushf
pop
in
jle
push
xchg
pop
insl
inc
inc
jg
les
sbb
adc
sub
jecxz
mov
add
enter
pop
out
popf
pop
mov
or
cmpsb
inc
test
cmp
mov
adc
in
sub
jae
jl
dec
ret
aad
xchg
pop
shll
test
inc
xchg
sbb
out
push
std
scas
push
test
jl
fidivs
test
push
adc
pop
sbb
xchg
test
ljmp
mov
fisubl
repz
jmp
rep
in
pop
or
push
mov
arpl
inc
daa
cmp
jecxz
sbb
adc
push
cmp
cmp
ds
lahf
mov
dec
lds
in
shlb
popf
mov
es
pop
aas
in
incb
in
lahf
inc
dec
mov
daa
cmp
push
inc
pop
adc
push
jge
das
xchg
mov
out
in
rcll
test
adc
push
mov
orb
test
adc
iret
in
and
in
lods
xchg
or
jbe
push
xor
outsb
xor
popf
mov
sub
insl
add
cmc
mov
ss
leave
pop
sarl
push
adc
out
int3
lock
pop
cmc
mov
mov
mov
aad
mov
lret
or
xor
push
std
test
into
pand
ljmp
lock
scas
out
mov
mov
or
add
sub
add
xchg
aas
fcomi
or
stc
popf
test
pop
inc
push
mov
pushf
mov
std
mov
ss
imul
add
xor
sub
pop
xlat
fwait
scas
in
jne
subb
mov
sub
icebp
stc
sub
jle
lds
mov
in
jle
xchg
sub
mov
cmc
push
sub
jb
push
out
out
clc
mov
sbb
cmc
add
push
pop
jns
inc
in
inc
dec
push
sbbl
add
mov
push
lret
repz
pop
cmc
inc
test
mov
mov
mov
mov
rcrl
ret
stc
scas
mov
sbb
mov
jb
jae
mov
mov
lcall
adc
and
ja
pop
je
xchg
lock
cmpsb
pop
pop
lahf
repz
shr
adc
mov
sub
jne
out
leave
cmp
add
lds
cmp
sub
ja
lcall
push
aaa
fcomp
arpl
testb
jo
jg
in
mov
aaa
mov
adc
insl
xlat
fisubrs
mov
dec
ljmp
sbb
imul
lcall
scas
pop
and
xchg
cmp
xor
sti
or
sarl
cmp
inc
mov
aam
jp
test
mov
mov
js
push
je
xchg
push
push
pop
aaa
xor
loopne
fistl
repnz
fmulp
movsl
insl
stc
int
rorb
adc
sarl
sub
mov
orl
mov
fldcw
dec
sbb
mov
xor
pop
xchg
icebp
lret
sub
jge
not
arpl
xor
hlt
mov
dec
pop
pop
ljmp
pop
jmp
test
push
pop
les
pop
dec
pop
inc
jo
outsb
sarb
add
inc
xchg
and
cld
lcall
mov
mov
push
cmp
mov
push
pop
xchg
mov
adc
jbe
mov
lock
cmp
jae
pop
pop
movsb
add
xor
scas
xchg
fisttpll
subl
sbb
jp
mov
std
mov
call
test
ret
adc
outsl
dec
adc
lea
test
aam
aam
lret
push
jae
hlt
stc
in
loope
jg
sub
bound
cmp
jae
jmp
jmp
loop
out
jecxz
pop
aaa
cs
add
mov
ds
dec
repnz
mov
lds
pop
outsl
dec
dec
push
adc
es
mov
push
clc
stos
arpl
jne
sahf
unpckhps
fidivs
test
cmp
fisubl
inc
loopne
add
fisubl
repnz
leave
push
and
imul
repz
scas
jl
sbb
pusha
jb
and
shll
xchg
cld
cmp
pop
xor
cld
pop
inc
mov
inc
jl
mov
or
sub
leave
and
pop
push
add
sbb
fildll
iret
leave
lods
les
out
sahf
mov
inc
push
hlt
scas
lcall
xor
mov
test
jnp
imul
sbbl
sbb
aaa
popa
push
or
mov
imul
out
push
inc
out
adc
jp
loopne
add
or
inc
mov
psraw
sarb
push
addr16
enter
aaa
ss
dec
ljmp
mov
rclb
and
jbe
ret
outsb
ss
sub
aas
bound
sbb
ja
insl
push
or
add
jp
mov
xlat
lcall
sbb
lds
orl
xchg
push
loop
cmp
dec
icebp
ljmp
mov
mov
mov
mov
pop
ret
iret
cmp
xor
andl
xor
mov
adc
adc
lods
pop
std
leave
add
popa
jb
add
xor
test
sub
rcrl
fisubrl
cmc
jg
add
fistl
out
lods
imull
jno
jmp
inc
cmpl
and
into
ljmp
sar
xchg
push
sub
sub
push
and
mov
cmc
ficoms
inc
pop
pop
cli
je
adc
test
mov
in
cwtl
les
test
push
pushf
inc
cwtl
push
repnz
clc
mov
jb
into
push
sbb
fwait
pop
repnz
mov
cmp
out
mov
xchg
jl
call
sub
inc
cmc
sbb
pop
push
or
and
dec
xlat
mov
pop
lock
sbb
xor
mov
push
or
test
ffreep
cmp
pop
inc
ret
mov
sar
jns
repnz
aas
fs
test
pop
sbb
outsl
mov
mov
shl
mov
popl
jle
cld
out
cmp
xchg
lea
pop
dec
xor
cmp
xchg
sbb
adc
ds
lret
insb
scas
sti
and
mov
jecxz
dec
ljmp
dec
sub
mov
lret
imul
dec
xor
je
push
sbbb
lds
sbb
and
pop
pcmpgtd
sbb
mov
cs
fmuls
fsub
adc
insl
push
movsb
mov
jne
jecxz
mov
push
xchg
js
cwtl
into
xor
outsb
int3
adc
push
jp
mov
out
sub
fdiv
fs
cmp
pushf
mov
xchg
pushf
xchg
std
pop
fwait
loop
push
nop
imul
add
scas
inc
test
mov
and
cmp
inc
add
lahf
lcall
lret
pop
jecxz
psubb
xchg
sbb
xchg
pop
sub
ds
jp
xor
or
aad
stc
test
stos
sahf
and
cmpsw
addl
mov
sbb
sub
dec
outsl
jle
inc
mov
outsl
movsl
lret
in
pop
outsb
out
jo
popa
testb
jb
mov
inc
das
or
sub
or
push
clc
or
adc
lock
std
dec
jns
lods
cli
cmpsl
dec
stos
ret
imulb
test
int
xor
lcall
std
out
fildll
mov
cmp
ror
mov
pop
xchg
ret
inc
and
repnz
mov
cmp
xchg
outsl
repnz
test
cmp
movsb
clc
int3
xor
cli
jo
mov
xchg
pop
cmp
sysret
hlt
fwait
nop
cmp
cmpl
lds
fistl
sbb
in
les
cs
mov
js
sbb
loopne
sbb
push
stc
mov
push
pop
mov
cmc
aad
xrelease
lea
xor
ret
and
fstpl
jae
pusha
jmp
lods
es
jns
mov
sti
bound
out
jg
sub
js
xchg
mov
mov
movsl
and
push
lahf
push
lahf
mov
pop
adc
testb
sub
into
out
dec
flds
movsb
iret
mov
sbb
push
cwtl
cltd
adc
arpl
js
sub
dec
leave
add
stos
shll
lds
pop
push
and
mov
inc
mov
pop
movsl
push
mov
xor
les
jp
sti
mov
arpl
fs
in
xchg
mov
push
xor
xor
mov
shl
jns
jno
cmp
jmp
cwtl
xlat
int3
push
popf
in
lods
jg
cli
push
push
sarl
fs
or
pushf
xchg
pop
xchg
cmpsl
mov
add
mov
adc
out
xchg
mov
cmp
arpl
sti
pop
cld
aad
shrb
inc
add
mov
rolb
lahf
loopne,pn
mov
imul
ljmp
data16
jb
shrb
sbb
out
stos
jae
mov
cmp
adcl
stos
cmp
cmp
aaa
mov
test
arpl
subl
into
xchg
cltd
mov
call
adc
pop
sti
jl
adc
scas
jno
and
push
push
adc
mov
push
leave
xchg
int3
sbb
dec
fmul
lds
icebp
stos
sbbb
jae
jl
push
xor
insl
lods
mov
mov
ret
xlat
jnp
loopne
lods
decl
jne
inc
rolb
movsl
or
outsl
fnsave
mov
shl
imul
adc
adc
popa
add
push
push
dec
mov
sbb
mov
scas
push
lret
clc
jb
xor
adc
pop
pop
jns
mov
les
es
push
sub
nop
mov
sub
cmp
inc
mov
mov
cwtl
lcall
int
ss
pop
sub
push
push
and
js
enter
push
cwtl
fsubl
loope
mov
lock
xor
es
mov
xchg
loop
dec
and
shlb
add
pop
xor
dec
jp
xchg
call
inc
and
aaa
or
mov
ret
stc
and
addr16
pop
pop
movsb
jbe
scas
jne
and
enter
mov
adc
dec
popf
or
scas
je
jnp
shlb
mov
jno
faddl
push
dec
lret
push
and
mov
xor
enter
and
xchg
push
inc
add
insb
cwtl
iret
jo
cmc
sub
sbb
scas
enter
jb
imull
xchg
pop
mov
lea
movsl
push
enter
pop
fwait
ret
icebp
enter
or
mov
lods
sbb
adc
jp
adc
shll
cmpl
cmp
lret
movsl
jp
sbbl
mov
mov
iret
js
adc
negb
cmp
inc
iret
das
mov
aas
jns
fdivrl
loopne
sbb
je
mov
insl
cmp
cmp
iret
adc
fucomi
mov
scas
jo
jae
pop
inc
call
lcall
fstl
repnz
je
inc
es
outsl
pop
inc
fcomps
sbb
aad
lret
lods
xchg
iret
arpl
out
rclb
test
add
test
cmp
ffreep
or
ja
or
sub
mov
js
dec
fcompl
lea
push
jmp
inc
stos
cmp
xor
adc
pop
inc
or
cmc
into
add
mov
nop
cwtl
mov
adc
pusha
fdivs
mov
dec
xchg
mov
push
insb
pop
test
enter
jp
mov
lcall
mov
mov
test
push
outsl
mov
shll
jge
mov
popa
xor
cmp
mov
pop
stc
insl
test
pop
jae
fiaddl
mov
mov
aaa
jge
sbb
cmp
mov
pushf
push
rorl
sbb
adc
je
jo
test
enter
out
lret
stc
aad
out
inc
in
pop
pop
rcr
xchg
lret
xor
xchg
pusha
sub
and
dec
pop
push
mov
fldt
rclb
hlt
and
loopne
cmpsb
arpl
jp
cmp
mov
dec
popa
or
cltd
insb
lret
out
jge
push
test
popf
lock
mov
gs
daa
lret
test
push
push
mov
mov
add
inc
xor
push
and
lock
add
push
mov
xlat
rolb
push
stos
pop
popf
mov
std
xchg
dec
popl
jmp
push
popa
inc
pop
int3
xchg
adc
cmp
xchg
cs
mov
sbb
clc
xchg
add
testb
xchg
sbb
addr16
out
xor
jecxz
or
mov
xor
cmp
mov
mov
mov
cmp
adc
xor
or
xlat
rorb
sub
pop
sbb
and
scas
loope
imul
mov
sbb
inc
sub
cmpb
adc
pop
fstps
shlb
cmp
jo
push
popaw
aaa
out
xor
shlb
or
add
sbb
or
lret
mov
std
cwtl
lds
mov
repnz
test
aas
mov
das
add
lods
pop
movsb
fmuls
adc
fcmovu
sbb
imul
jl
mov
das
out
xchg
subb
sbb
inc
loopne
insb
out
sub
mov
das
pop
mov
cli
lock
out
in
stc
mov
inc
inc
push
or
mov
mov
cmp
sub
push
popf
cmpsl
push
or
loopne
mov
mov
mov
int
and
push
sbb
scas
imul
fidivs
lahf
je
add
and
outsb
mov
sub
jge
lret
mov
je
pop
mov
mov
shl
test
in
mov
mov
pop
push
jne
mov
push
push
xchg
fnstsw
je
xchg
cmp
shll
mov
push
sub
lock
or
adc
std
inc
push
push
add
fisubrs
pop
mov
xchg
lds
ret
roll
sub
out
and
push
xchg
mov
mov
sbb
sub
mov
arpl
fstps
pop
stc
stos
mov
and
lods
xchg
push
pusha
test
pop
push
jmp
mov
cld
cmc
test
xchg
inc
int3
jae
adc
dec
jne
mov
lds
fsts
movsb
fidivs
xor
dec
mov
add
xor
or
jl
push
outsl
loope
in
and
cli
dec
dec
add
push
lock
fisttps
xchg
jae
iret
cmp
sub
mov
pop
lahf
scas
mov
xchg
out
mov
js
or
loope
jle
jecxz
aaa
jno
imul
cmp
mov
mov
imul
lcall
mov
scas
aad
ror
aaa
iret
inc
mov
push
sub
outsl
jno
loope
cwtl
and
xchg
iret
shrl
mov
pop
das
in
popf
ja
cmpsb
jnp
insb
cmpsb
mov
push
jmp
push
lahf
psrlw
popf
push
pop
jecxz
sti
sti
je
or
fimuls
btr
jecxz
ffreep
sti
push
fists
stos
vmovaps
rorb
std
jecxz
fdivrl
pop
dec
xor
in
scas
insb
lock
dec
mov
arpl
jecxz
pop
jp
sbb
mov
fbstp
dec
rcll
insl
mov
or
sar
pop
stos
imul
add
jnp
or
push
fstpl
lods
aaa
ror
int
jge
push
gs
mov
sub
xor
dec
jo
inc
arpl
movsb
fbstp
fdivrs
pop
repz
jl
mov
xchg
jge
pop
rol
dec
cmpl
mov
in
xchg
or
out
pop
scas
inc
xchg
sub
inc
hlt
insl
mov
loope
into
adcl
xchg
out
push
adc
das
add
mov
dec
lock
mov
imul
inc
ds
es
imul
lds
mov
inc
mov
pushf
minps
pop
das
sbb
sub
fisttpll
lret
push
sbb
sti
jae
jmp
shll
shrb
xorb
and
rol
sbb
push
jl
dec
mov
jne
dec
cltd
mov
dec
imul
mov
outsl
and
mov
push
movsl
adc
jmp
or
ds
pop
pop
cltd
cltd
mov
push
mov
xchg
hlt
cmp
push
jmp
mov
cmpsl
cmp
jnp
lock
mov
jge
mov
fistpll
mov
xchg
adc
pop
and
sti
idivb
ret
stos
jbe
ds
das
sti
gs
lods
jg
repz
xchg
adc
or
xchg
insb
adc
pop
ds
push
jo
mov
sub
mov
cmp
pop
call
jp
or
cld
ret
xor
xor
push
xor
sbb
nop
repz
dec
lret
inc
jl
xchg
mov
insl
cmp
sub
sub
pop
ds
lret
cmp
jno
mov
dec
mov
mov
nop
pop
mov
lods
int3
xor
and
and
adc
pop
dec
add
out
movq
jmp
loope
test
shll
lret
lods
pop
pop
fildll
test
arpl
lea
jbe
push
imul
adc
inc
test
cmpsb
popf
or
jl
cmpsl
lods
movsb
lock
xor
movsb
and
jb
iret
jmp
and
add
mov
sub
les
not
and
jb
sbb
mov
pop
and
std
loop
sbb
inc
sub
mov
bound
jnp
sub
mov
cmp
mov
inc
inc
mov
fs
test
fs
xchg
daa
movsl
aas
jbe
repz
shlb
lods
or
pop
and
push
in
inc
stc
push
mov
out
mov
add
xor
cmpsb
push
rolb
pop
mov
or
mov
inc
inc
pop
push
or
add
gs
cmp
into
dec
sbb
dec
lds
mov
ljmp
jmp
add
testb
sub
rorl
fwait
out
inc
jge
sbb
ss
or
lds
jb
das
pop
xchg
sub
jo
sbb
les
jae
sub
sbb
hlt
jp
push
insl
mov
shll
xchg
xor
fwait
jp
in
pop
test
fstpt
push
into
sub
jl
stc
stc
into
int
ret
loopne
insl
int3
pop
mov
mov
mov
xchg
or
es
cmp
lret
pop
jnp
dec
inc
adc
mov
adc
cmpl
scas
lods
pop
cmp
mov
movsb
iret
sbb
iret
cmc
dec
pop
mov
jbe
mov
cmp
mov
jo
cmpsb
int
sub
push
push
scas
inc
push
leave
cld
fwait
loopne
mov
out
ss
and
mov
rorb
dec
mov
sbb
and
mov
dec
stos
int
movsl
mov
test
mov
cld
adc
sbb
popf
out
cmp
or
lret
mov
add
xchg
and
add
cmp
mov
xor
jp
popa
ja
clc
mov
ljmp
pop
xor
sub
addr16
push
jg
bound
popf
jl
stc
repz
and
xchg
xchg
sub
loopne
dec
ret
push
daa
mov
imul
cwtl
push
sbb
push
pop
adc
xchg
and
repz
aad
lds
xor
lret
pop
insb
cmp
test
mov
addr16
mov
pop
mov
mov
sbb
sub
test
stc
jno
ror
stc
mov
sbb
push
adc
dec
sarl
cmp
out
int3
outsb
xchg
stos
cltd
jno
lea
lahf
push
popf
add
sbb
xor
jbe
dec
mov
in
into
divb
xchg
js
xchg
push
jnp
jmp
xchg
out
call
sbb
fadd
add
out
cmc
push
push
mov
cmp
mov
jne
inc
push
push
leave
mov
cmpb
jno
pop
hlt
jecxz
mov
and
jmp
test
pop
stc
orl
dec
xchg
std
or
repnz
mov
xchg
or
addr16
std
je
mov
data16
mov
sahf
int
or
or
inc
and
sub
ss
les
sub
addr16
cmpsb
aam
sti
cld
jl
hlt
movsl
inc
jbe
pop
sbb
adc
mov
cltd
and
and
aad
cwtl
mov
add
repz
inc
inc
jns
add
lret
nop
mov
or
lds
sarb
outsl
leave
scas
pushf
lret
jl
jl
int3
dec
adc
cmp
pushf
in
adcb
popf
inc
outsl
jl
pusha
adc
aaa
daa
out
lods
add
lea
jnp
dec
cmpsb
mov
cmpsl
sbbb
cwtl
movsb
fldt
mov
into
iret
fwait
inc
push
push
jge
js
sub
mov
add
inc
leave
xchg
sub
sbb
or
imul
lahf
mov
add
cmpsl
xchg
lods
aas
mov
jmp
mov
jmp
mov
out
sub
push
lock
xor
test
cld
pusha
call
scas
xchg
ds
push
jmp
xor
sarb
mov
dec
sub
lods
orl
inc
adc
enter
sbb
xlat
fwait
mov
jno
aad
mov
sub
jns
sbb
mov
push
lret
scas
jmp
shll
pusha
jg
les
sbb
lret
fcmovnbe
push
jmp
jb
mov
das
pushl
aam
xor
imul
cmp
or
jae
movsl
ja
xchg
out
pop
mov
dec
add
aaa
pusha
xchg
mov
cltd
jo
mov
imul
xchg
lods
jl
in
dec
sub
fadd
fwait
inc
movsl
mov
sar
cmp
cmp
imul
add
add
lods
mov
test
in
idivl
add
and
mov
out
xlat
jge
lds
mov
sub
mov
je
mov
jb
arpl
mov
out
mov
mov
ss
xchg
and
dec
sbb
repz
js
xor
dec
arpl
cmp
lods
pop
xchg
out
pop
sub
out
test
push
mov
inc
add
xorl
jmp
jg
cmc
cmp
call
ret
test
jnp
pusha
int
cmp
movsb
fsubs
stc
lds
adc
jo
inc
ror
dec
insl
adc
aas
lret
adc
xchg
imul
sbb
sub
ret
lret
decl
pop
lret
cwtl
js
lcall
loope
cli
xor
jne
cmp
std
jl
mov
xor
clc
lret
jp
pop
cmp
dec
mov
insb
push
lahf
mov
or
orb
sbb
xchg
push
adc
hlt
xchg
sbb
sub
adc
xchg
out
sti
dec
jo
scas
xor
cmc
lods
std
test
jge
mov
clc
idivb
jge
dec
xor
mov
jge
xor
pop
sti
fdivs
fsub
inc
fdiv
and
xchg
out
push
mov
jmp
fwait
cmp
dec
sarb
cld
xchg
add
pop
jb
inc
fwait
or
movsb
test
or
rol
emms
adc
dec
sbb
mov
aaa
xor
mov
rorl
mov
lds
das
sub
enter
leave
push
push
sub
xor
gs
push
xor
mov
fimull
add
fdivr
outsl
xor
mov
and
fbstp
sbb
sbb
iret
mov
pop
mov
bnd
jmp
add
xor
mov
rorl
dec
pushf
xchg
xor
sub
aad
int3
not
lret
lcall
mov
negl
fwait
sbb
add
adc
pop
jne
iret
push
cmpsb
cli
jecxz
xchg
jmp
jno
fildl
mov
jno
les
mov
pop
dec
adc
mov
in
add
loope
mov
inc
mov
inc
jl
shlb
dec
xor
insl
loopne
xor
out
loope
sub
pop
push
scas
push
push
mov
mov
dec
mov
push
lods
or
xchg
bound
sub
aad
add
leave
lods
rcrb
add
sub
mov
jnp
pop
push
jge
sub
sbb
test
shrb
sbb
mov
dec
es
push
dec
xor
pop
repz
cmc
int3
scas
sti
ljmp
hlt
or
inc
xchg
lea
mov
mov
out
push
xor
dec
jae
mov
outsl
add
pop
pop
mov
divl
iret
js
shrl
sbb
in
loop
xor
sbb
pop
pop
push
pop
mov
insl
mov
rorl
jmp
adc
stos
ss
imul
shll
mov
push
cld
pop
cwtl
dec
adc
cwtl
mov
negb
jnp
push
push
add
lods
mov
loop
dec
mov
leave
push
mov
dec
enter
xor
mov
ja
and
or
dec
cmp
dec
add
test
adc
and
leave
imul
out
ljmp
mov
xor
sbbb
out
jmp
stos
jmp
call
out
dec
xchg
cmp
clc
pop
cmc
mov
iret
mov
into
or
adc
ds
sub
int
xor
popa
icebp
out
nop
xchg
inc
inc
stc
aas
push
insl
xchg
mov
lods
es
xor
cmp
xor
outsl
mov
sti
popf
dec
cmpsl
xchg
mov
ja
jge
pop
aad
add
mov
add
xor
mov
add
int3
outsb
mov
cmpsl
mov
mov
imul
mov
push
push
bound
sbb
or
subl
std
xor
jbe
or
ret
sbb
shl
negl
test
xchg
or
push
add
add
dec
jbe
xchg
pop
shrb
and
stos
popa
pop
stos
push
sub
dec
sub
jns
fmull
mov
sahf
hlt
mov
pop
shlb
mov
push
adc
sbb
and
mov
pop
cmc
aad
dec
fdivl
adc
in
fisttps
mov
repnz
pop
mov
mov
jg
mov
mov
xor
xor
xchg
push
mov
fdivr
mov
or
or
lea
fcom
dec
adc
pop
lahf
jp
rolb
cs
mov
pop
cmp
sub
mov
js
adc
ljmp
mov
and
loope
lods
pop
out
add
cmpsl
fs
and
inc
inc
int
or
inc
js
mov
cld
shll
cmpb
stos
shrl
adc
fiadds
xchg
add
sbb
jmp
jne
aam
xchg
pop
mov
divps
jno
adc
push
cwtl
pushf
testl
sub
divl
in
aam
xchg
mul
sbb
xchg
clc
lcall
or
jno
jae
adc
fadds
jnp
mov
xor
pop
dec
or
dec
sahf
jg
das
fbld
clc
pop
je
fnsave
and
dec
xor
dec
mov
movsb
sbb
jb
scas
xor
add
fimull
repz
add
jno
popl
out
and
lret
mov
sub
inc
push
mov
rolb
fmuls
repnz
dec
outsb
jns
xor
cld
mov
or
das
inc
add
test
sahf
and
popa
lods
adc
xchg
push
cmp
dec
lret
dec
shr
cmp
jb
fistps
test
jl
xor
sub
sub
sub
lds
repz
xchg
mov
pop
loope
loop
aas
fld
mov
and
jb
pop
jb
mov
add
xlat
sbb
out
jns
mov
test
mov
lcall
sahf
mov
adc
mov
sahf
lods
cmp
jg
xchg
cmp
paddusw
dec
pop
cmp
adc
pusha
in
dec
mov
xor
imul
add
out
or
fidivrs
call
pop
imul
pop
xor
popw
out
lods
push
mov
scas
xchg
adc
mov
push
xor
push
pop
rcr
xchg
push
mov
insb
mov
stos
push
and
xchg
lods
or
jae
xchg
andb
xchg
sub
scas
xchg
cltd
fimuls
out
pop
hlt
cmp
out
mov
neg
inc
pop
and
inc
lahf
daa
xlat
aas
or
repnz
pop
sub
repz
aas
jne
mov
outsl
roll
push
mov
sub
int3
push
shll
sub
call
jle
xchg
xor
sbb
mov
jg
inc
inc
xor
adc
push
sbb
push
cs
in
lret
push
imul
xchg
movsl
ret
test
jbe
test
sub
das
mov
ljmp
push
cmp
cli
xchg
ja
nop
fs
cltd
movsl
aad
mov
hlt
push
or
decb
jl
mov
and
or
adc
mov
test
inc
push
xor
ret
repz
xchg
jg
mov
fstpt
outsl
andb
cs
outsb
rcrl
xchg
cld
daa
lea
int3
test
stos
dec
stc
iret
repz
mov
jb
idivb
sbb
inc
popa
mov
je
cmpsl
mov
imul
cmp
mov
or
dec
cmp
jbe
dec
lock
mov
and
sahf
insl
jl
push
hlt
stc
int
mov
lods
dec
jp
out
out
cwtl
sub
pop
pop
aam
and
loop
dec
push
in
cmp
outsb
cmp
lahf
dec
pop
stos
or
push
ljmp
dec
cmpl
shr
mov
pop
add
dec
fnstcw
dec
mov
adc
sbb
nop
and
clc
sub
and
mov
xchg
adc
es
xchg
push
mov
xorl
pop
icebp
sub
jne
add
pop
jb
scas
add
test
cwtl
outsb
xor
jecxz
fnstcw
in
and
jecxz
mov
ret
lds
das
xchg
std
insl
mov
repz
rclb
lret
sub
inc
push
mov
mov
pop
repz
sub
cmc
dec
hlt
cmp
mov
cmp
xchg
comiss
popf
sub
lds
push
in
test
fs
lods
popf
pop
push
aam
fstp
js
nop
mov
jg
ds
fwait
inc
lret
nop
les
stos
lock
mov
repz
or
mov
xor
jmp
push
mov
dec
movsl
mov
sti
ja
in
push
nop
cld
pop
adc
cmp
rolb
sbb
inc
in
pop
cmpl
mov
cmp
outsl
lods
test
sub
mov
pop
leave
iret
jp
mov
out
repz
adc
push
loop
cli
lock
decl
dec
movsb
movsb
fs
mov
mov
out
jbe
out
jmp
aas
fcompl
pop
or
add
mov
sbb
in
rorl
pop
outsb
jnp
mov
pop
xchg
or
test
scas
das
mov
cmp
cs
bound
sarb
cmp
sub
jno
stos
mov
roll
div
pop
lods
loop
or
std
stos
ja
sub
cmpsb
ljmp
jge
xchg
mov
push
mov
mov
faddp
andb
shrl
popf
stos
rcr
jl
add
or
mov
dec
lea
popf
iret
pop
cmp
jae
hlt
inc
arpl
movb
mov
popf
subl
mov
lea
or
inc
mov
sub
test
roll
aam
loope
out
cmp
das
orl
or
inc
pop
mov
jp
icebp
mov
sub
lahf
imul
pushf
adc
cli
mov
sahf
mov
fwait
aad
test
pushf
jecxz
ljmp
adc
adc
les
cmp
inc
mov
out
loopne
imul
push
jnp
cltd
popl
fwait
pop
mov
insb
imul
add
inc
repnz
mov
xchg
xchg
stc
arpl
dec
xchg
loopne
lods
lret
dec
lret
test
imul
aaa
push
or
xor
sbb
add
arpl
mov
mov
mov
aam
je
cmc
add
mov
imul
jb
and
fsubr
push
ret
lcall
mov
xchg
lcall
inc
push
inc
mov
push
insl
insl
mov
or
out
push
int3
repnz
jge
cld
mov
mov
dec
cmpsl
jp
out
out
jl
call
nop
inc
adc
dec
and
arpl
loop
mov
rep
and
mov
mov
add
bound
mov
xchg
sub
push
add
mov
test
mov
mov
in
push
int3
push
xchg
sub
mov
mov
fsubl
sbb
and
push
arpl
call
xchg
push
mov
pop
xchg
cmc
mov
mov
arpl
aam
sub
aas
stc
and
sbb
cmp
popf
lahf
sbb
iret
fwait
std
xor
pop
mov
and
iret
sbb
inc
inc
pop
jbe
mov
xor
jns
aam
pop
loope
inc
movups
mov
inc
or
ljmp
jmp
xor
mov
mov
leave
or
cmp
dec
xchg
inc
and
les
dec
dec
and
xchg
js
insl
add
das
pop
aaa
mov
mov
xor
lods
js
aaa
pop
sti
xchg
adc
shr
rcr
sti
test
mov
jne
pop
xchg
movsl
insb
loop
jno
and
ret
push
cmp
test
xor
scas
shll
mov
push
shrl
jo
push
jmp
divl
movsl
dec
js
xchg
add
sbb
or
push
dec
pop
cmp
xchg
pop
inc
and
mov
shlb
push
xchg
shr
sub
or
loope
aad
aad
test
or
or
mov
int
mov
mov
jmp
xor
jl
mov
cmp
ds
aaa
xor
add
jle
push
stc
movsl
pop
xchg
or
mov
inc
sbbl
fcmovb
ljmp
jno
jb
in
rolb
push
repz
fistpll
loope
jecxz
mov
loop
out
jp
mov
push
and
jg
test
or
fwait
pushf
mov
mov
inc
push
pop
jle
inc
int
mov
int
insl
pop
fnstenv
mov
adc
stos
jns
or
sub
aaa
mov
sub
mov
add
das
sbb
movsl
mov
test
scas
test
aaa
push
popf
cmc
push
stc
ds
scas
das
cmpsb
jl
sbb
adc
shlb
sub
sbb
sahf
or
pop
add
js
andb
xchg
aam
jno
fists
lret
mov
sub
sub
xadd
aam
or
push
aam
jecxz
jno
inc
clc
fiaddl
push
add
add
adc
mov
cli
imul
mov
popa
lahf
aaa
lea
push
in
pop
in
xor
xor
out
cmc
or
aam
outsl
test
mov
push
sbb
xlat
xor
push
rorb
loope
rolb
lcall
mov
mov
jo
fisubrs
mov
ja
test
ss
mov
mov
imull
test
jno
mov
cld
das
clc
fnsave
inc
xor
fistpll
movsb
aaa
arpl
add
out
inc
dec
fisubl
ljmp
out
les
pusha
mov
mov
jbe
jle
xchg
sti
sub
add
fsin
jmp
lret
inc
lcall
pushf
or
cltd
icebp
daa
pop
mov
add
outsl
sub
pop
xor
push
in
mov
xchg
andl
rclb
jle
dec
adc
dec
and
cs
jmp
adc
pop
add
fstpl
iret
sahf
hlt
push
mov
dec
push
jno
adc
dec
lods
lock
mov
rol
cs
sbb
jle
js
sbb
sub
mov
dec
lds
xchg
negl
pop
pushf
inc
imul
xor
dec
adc
mov
xchg
iret
add
frstor
enter
andl
mov
add
loopne
pop
sbb
lcall
in
jae
xor
pop
das
sub
dec
les
fdivrl
xchg
pusha
push
cltd
push
nop
xchg
or
push
out
xor
adc
mov
inc
pusha
mov
add
in
je
int
jg
into
or
mov
aad
jns
dec
dec
inc
imul
push
es
add
or
xlat
xchg
xchg
cwtl
adc
aaa
mov
dec
lcall
xchg
shll
jmp
or
adc
sbb
cmp
mov
dec
cwtl
repz
sbb
or
and
fistpll
push
pop
and
push
sub
pop
mov
clc
into
ret
stc
xor
xor
clc
fadds
imul
dec
js
flds
dec
sbbb
inc
pushf
leave
sbb
lret
cwtl
gs
jg
pop
push
sub
add
xor
inc
jp
aam
dec
xchg
out
xlat
js
add
xchg
dec
scas
and
dec
in
inc
lcall
ret
sbb
ret
ds
and
sahf
pop
jp
jmp
dec
add
negb
popf
xchg
pop
xchg
sub
or
hlt
pop
js
inc
insb
jl
pavgw
dec
add
outsl
addr16
push
xchg
mov
cmp
in
mov
andb
gs
les
push
stc
dec
sti
and
sbb
push
cmp
mov
call
or
in
mov
push
repnz
rclb
popa
inc
clc
clc
mov
int3
mov
daa
aas
ficoms
inc
lds
leave
mov
adc
sbb
ja
dec
mov
mov
mov
js
adc
mov
int3
inc
or
mov
out
in
loopne
mov
sub
out
cmc
mov
cmpb
adc
and
gs
insb
dec
stc
aas
test
test
stc
push
scas
cmpsl
inc
cld
add
pop
xor
test
inc
je
mov
fdivrs
mov
dec
or
mov
jecxz
cs
fldenv
pop
sbb
sub
ret
je
in
std
call
mov
mov
mov
lret
add
inc
bswap
lcall
dec
negb
add
mov
pop
lret
jge
sbbl
push
lret
push
xor
cmp
call
out
dec
mov
jmp
sub
add
pop
xchg
data16
push
push
xchg
daa
sbbb
cld
repz
adc
mov
jo
cltd
gs
sahf
repnz
inc
fcoms
fldcw
xor
cmp
fucomi
dec
cmc
pop
rcrl
mov
movsb
push
xor
push
jp
loopne
lret
jl
ud0
in
aad
movsl
ja
sub
fstps
cmp
and
jmp
or
je
push
pushw
sbb
inc
lret
cmpsb
xchg
gs
outsb
mov
sbb
mov
push
loopne
xlat
call
inc
in
mov
add
ret
pop
pop
mov
push
add
jne
enter
pop
fs
adc
jp
enter
mov
inc
dec
movsl
dec
mov
adc
lods
fists
add
push
arpl
adc
cs
int3
mov
mov
cmp
cmp
fucomi
jp
mulps
insb
cmp
jecxz
ljmp
and
cmp
jae
jp
xor
popa
popa
imul
stos
movsb
pop
stos
mov
and
rcr
aas
mov
push
and
insb
fstl
cmc
sub
je
test
mulb
outsb
je
lods
xchg
loop
cmc
dec
mov
jle
sbb
jmp
and
pmovmskb
pop
bound
arpl
inc
adc
xchg
addr16
sahf
lock
pop
mov
mov
aas
loope,pn
push
imul
sub
test
sbb
and
adc
jbe
mov
pop
lock
mov
push
fadds
es
scas
jmp
inc
popw
inc
mov
pop
sub
push
pop
push
and
jae
movb
fcompl
cmp
insl
out
add
lock
inc
mov
loopne
push
sbb
mov
loopne
push
adc
mov
jno
dec
xlat
mov
push
mov
push
lods
mov
ss
rcrb
imul
lock
js
sti
sbb
out
rolb
sbb
xchg
jns
repz
sbbb
insb
mov
jg
pushf
enter
outsl
das
add
lcall
xchg
jns
or
pop
cs
icebp
movsl
mov
ja
dec
dec
test
mov
out
sbb
cltd
repz
and
sub
hlt
wbinvd
fs
jp
js
aaa
xchg
xchg
arpl
and
xchg
lods
mov
adc
iret
pop
or
mov
div
cmpsl
inc
mov
inc
inc
divl
mov
ljmp
in
push
mov
mov
test
inc
jae
xlat
ficomps
inc
shr
or
sbb
mov
push
in
jecxz
and
in
pushf
pop
adcb
inc
xor
lock
movsl
stos
sahf
lahf
inc
mul
sub
mov
sub
js
fnstcw
imul
cmpsl
adc
in
xchg
xrelease
mov
jmp
push
inc
leave
stos
imul
loopne
push
repnz
fidivs
pop
mov
fchs
push
mov
mov
and
in
imul
dec
nop
decb
jmp
mov
xchg
shrb
call
add
int
scas
jle
in
pop
ss
mov
nop
and
lcall
data16
sub
inc
clc
push
pop
jae
ljmp
push
ss
in
jno
icebp
pop
ss
ds
cmp
aad
push
arpl
mov
orl
cmpsl
and
je
imul
lret
daa
mov
pop
mov
pop
test
cld
add
or
and
and
jmp
xchg
jo
push
sub
sub
xchg
jbe
mov
dec
out
popa
pop
cmpsl
mov
icebp
cli
mov
std
out
mov
dec
xchg
mov
repz
jecxz
jno
or
fsubrl
inc
adcb
mov
or
repnz
inc
pop
out
or
in
pusha
mov
xchg
imul
xchg
inc
mov
rorb
xchg
test
inc
repz
scas
cmp
loop
daa
pop
mov
xchg
divl
mov
push
mov
mov
jmp
mov
cwtl
in
ljmp
arpl
mov
mov
xor
jb
pushf
jns
jae
sti
jge
cmp
lahf
and
loope
cli
inc
sbb
or
loop
std
lahf
jle
je
pop
inc
dec
mov
in
cmp
mov
repz
sbb
icebp
fsubrl
dec
mov
lret
aaa
sub
sbb
xchg
es
je
cmpb
cld
or
mov
and
call
scas
sbbl
cs
subb
repnz
movb
and
mov
je
sbb
cld
mov
cmp
ss
or
outsb
cltd
bound
cli
dec
xchg
clc
ret
inc
and
xchg
adc
mov
cmp
pop
xlat
mov
sarb
jo
pop
sbb
xorb
mov
lcall
jmp
into
nop
cmc
push
loope
cmp
mov
sbb
add
out
inc
mov
xchg
mov
sbb
rolw
lahf
fwait
push
or
mov
imul
push
xlat
insb
cmc
int
aaa
shlb
push
push
push
cmc
out
sbb
ret
push
push
test
xor
dec
mov
pusha
dec
sbb
mov
mov
push
ds
lods
inc
jge
cmp
xor
aad
lods
xchg
jae
punpckhbw
and
mov
jne
push
enter
sub
sub
cmc
enter
in
jne
aas
lods
jb
inc
mov
push
mov
push
je
dec
lret
pop
jp
popa
xor
mov
hlt
into
dec
mov
xor
inc
xor
or
std
mov
fucomip
cs
fldcw
sub
sbb
sub
popa
les
outsl
imul
mov
cli
test
pushf
and
and
mov
fistl
inc
or
mov
jbe
jne
mov
dec
cwtl
cmp
aam
shlb
cmpsl
push
jo
bound
sbb
sarb
ljmp
xchg
pop
clc
fimuls
cmp
int
ret
and
lret
cmp
pusha
pop
sub
lock
fxch
ret
jg
xchg
mov
movsb
fisubl
mov
push
xchg
out
dec
xchg
loopne
sub
mov
icebp
repnz
inc
insb
xchg
enter
stc
cmpsl
jb
mov
seta
sbb
int3
loopne
or
ret
popf
idivl
rcll
sbb
test
sbb
sub
outsb
pop
ficomps
dec
push
jle
fwait
lock
xchg
loop
dec
sbb
jmp
iret
cmpsl
push
addr16
xor
nop
outsl
loopne
leave
cld
lahf
mov
rorl
sti
pop
pop
fs
adc
fsubrl
pop
outsl
sbb
xchg
cmpsb
pop
sar
mov
sub
cmpsb
lret
repnz
jno
sbb
dec
add
test
mov
int
mov
jbe
je
gs
lret
xchg
test
icebp
dec
push
xorl
inc
sti
lret
dec
push
test
mov
adc
arpl
push
flds
icebp
or
sahf
pusha
mov
sub
pop
dec
add
ss
frstor
lret
xlat
je
sbb
fisubl
mov
xchg
fsubrl
in
lcall
pop
cmpsl
clc
popa
mov
loope
sarb
xor
pop
or
mov
addr16
mov
sbb
in
scas
pop
or
and
mov
xchg
aas
icebp
iret
aam
aam
push
in
ss
push
testb
addl
aaa
inc
and
jns
iret
adc
xchg
dec
adc
mov
pop
push
inc
lock
sbb
push
dec
out
dec
cmp
cmp
add
mov
push
push
std
cmpsl
cli
imul
bound
add
and
and
scas
sbb
in
outsl
mov
jno
mov
shl
mov
fildl
jae
inc
aad
das
fs
in
jno
mov
xchg
fildl
imul
test
ljmp
shlb
aam
mov
sub
pop
test
inc
icebp
and
jbe
arpl
mov
mov
aam
cmp
pop
push
iret
inc
push
push
pop
popf
mov
add
aad
inc
cwtl
gs
add
add
jns
cmp
xor
popa
sub
cli
xchg
aaa
pop
xor
inc
lahf
mov
pusha
inc
or
inc
shll
sub
mov
push
js
aad
lret
mov
sub
mov
add
dec
inc
jl
in
scas
adc
sub
push
test
cwtl
movsb
add
cli
imul
cmc
ret
sub
dec
aam
out
or
xor
ljmp
xchg
xchg
add
inc
dec
lds
xchg
ss
mov
dec
add
push
mov
adc
les
push
jmp
xchg
pop
inc
mov
daa
mov
xor
clc
mov
out
mov
sub
lds
jecxz
xchg
ja
inc
add
test
popl
in
aaa
jbe
pop
lock
jecxz
stc
aad
aaa
test
push
shlb
pushf
cmp
enter
pop
mov
ja
cltd
add
addb
imull
jns
shl
fs
pop
mov
adc
out
sbb
in
into
and
cmp
fdivrl
jne
adc
shr
sub
sub
push
mov
mov
in
scas
push
xchg
lahf
jae
mov
inc
dec
sbb
pop
rol
jle
aas
pop
inc
ljmp
jmp
outsl
inc
in
shrl
push
test
push
xchg
push
and
leave
popf
jno
or
xor
popf
cmp
lea
out
add
sub
jo
and
mov
lods
iret
inc
leave
out
inc
jmp
mov
loopne
push
sub
notl
cwtl
mov
sub
push
dec
mov
xchg
int
and
push
adc
adc
mov
cli
adc
pop
push
test
lahf
xor
lcall
je
hlt
mov
js
js
adc
sbbb
mov
mov
inc
xchg
fisttpl
subl
jb
mov
hlt
imul
mov
mov
cmp
shl
fwait
sarl
mov
cmp
xor
jge
adc
add
mov
and
sub
shrb
push
pusha
fwait
lahf
shll
push
cwtl
sbb
icebp
and
sub
mov
dec
aam
cwtl
and
mov
imul
lods
jle
push
xchg
push
jge
lcall
or
sbb
or
xchg
jno
adc
push
imulb
xchg
add
mov
cmp
sti
jle
cmp
jle
adc
push
hlt
add
ret
mov
pop
subb
jbe
les
xor
sbb
mov
sub
imulb
jle
jbe
sub
inc
mov
and
xchg
movsl
arpl
int3
adc
jbe
aam
add
sub
mov
mov
jne
fucomp
mov
enter
decl
or
jp
add
mov
adc
sti
lret
mov
push
mov
cmpsl
mov
xchg
fwait
cwtl
sarl
bsf
scas
insb
dec
stos
inc
pop
js
mov
dec
push
popa
adc
ljmp
pusha
pop
movsl
fsubrl
ror
adc
sub
das
sarl
jne
in
cmpsb
lds
add
or
xchg
adc
xchg
fwait
pop
push
mov
inc
fiaddl
xchg
jnp
add
push
ss
xchg
ja
and
aaa
test
push
mov
push
cmp
lock
push
fimull
ficomps
int3
dec
addr16
and
xchg
nop
xor
or
iret
movsl
or
lcall
decl
xlat
call
and
stc
std
imul
inc
jo
xchg
mov
xor
push
lcall
pop
pusha
push
and
inc
mov
pop
ljmp
sbb
or
les
popa
ret
adc
push
cltd
mov
mov
and
out
imul
cmp
cmp
cmp
andl
in
lahf
lods
xchg
cs
inc
sub
dec
dec
sub
push
mov
xchg
push
mov
call
cmp
add
mov
es
cmc
arpl
pop
add
ret
iret
cltd
int3
sbb
and
jae
cs
std
negb
scas
jnp
ljmp
cmc
shll
test
out
das
repz
pop
in
xchg
in
sahf
pusha
cmp
lret
push
test
adc
fucom
xor
add
lahf
sub
movsl
push
sub
jnp
adc
lock
mov
lret
xchg
test
addr16
mov
push
mov
adc
imul
fldcw
les
sub
fcmovnu
adc
xor
adc
cli
ja
stos
mov
loopne
jne
shll
or
sub
fsubrs
rorb
or
dec
outsb
or
dec
mov
sub
add
ljmp
mov
pop
lahf
pop
sbb
enter
test
mov
loop
lds
scas
and
jge
inc
int
movsl
les
inc
ljmp
cli
outsl
dec
push
clc
loopne
mov
xchg
inc
push
xchg
mov
ja
sbb
pop
or
push
mov
adc
daa
push
jae
cmc
popa
sbb
jp
sub
pop
dec
mov
notb
jle
imul
jg
sbb
jb
es
xchg
sub
dec
mov
pop
es
pop
and
cmpsb
xor
test
call
je
fsubrs
jno
repnz
rep
clc
ret
jl
sbb
add
lods
jae
xchg
cmpsb
adc
sub
fsubr
push
scas
mov
les
mov
sti
scas
clc
int3
cld
pop
movsl
inc
icebp
jge
push
mov
jecxz
fldcw
sbb
push
or
push
addr16
and
hlt
lds
mov
pop
add
adc
inc
inc
mov
mov
cmp
sbb
or
sub
test
mul
mov
push
cmpsb
stc
mov
test
ret
loop
mov
sbb
pop
aam
sbb
popa
popa
in
fcmovnb
xor
lahf
pop
fs
sti
mov
fimuls
lret
pop
inc
or
movsb
pop
sbb
mov
push
pop
daa
sar
dec
js
mov
ljmp
mov
in
fadds
setp
out
loopne
stos
stos
cltd
rorb
sbb
jl
mov
lcall
adc
mov
in
mov
into
and
int
in
cmp
addl
sbb
xor
sti
mov
test
test
dec
mov
sarl
leave
cmpsl
xor
fwait
xchg
mov
rolb
pop
jnp
add
and
mov
dec
std
xlat
xchg
lods
mov
loopne
arpl
popa
inc
mov
cmp
mov
mov
in
in
cmp
stos
or
mov
mov
add
loop
sbb
mov
arpl
arpl
loopne
aad
sbb
fyl2xp1
xchg
xorb
adc
xor
idiv
xor
mov
mov
shrb
pop
arpl
push
add
adc
fs
sub
sub
jg
pop
cmp
lret
inc
mov
cmp
roll
mov
shlb
sarb
mov
push
mov
and
cmp
es
add
xchg
jbe
cld
push
cs
or
sub
mul
jg
add
andb
cmc
mov
dec
aam
mov
imul
loope
dec
or
leave
lea
fnstcw
out
out
dec
out
xor
sahf
pop
pop
ror
adc
push
push
adc
dec
out
cmp
dec
xor
dec
add
push
pop
xchg
hlt
jne
mov
scas
mov
call
cmpsb
fcmovb
popa
mov
inc
mov
jl
sub
xchg
out
ret
xor
dec
adc
jecxz
jmp
or
cmp
sub
push
daa
jp
push
push
out
daa
mov
add
mov
jo
inc
sbb
lcall
movsb
xchg
repz
add
sub
jnp
dec
mov
dec
lock
ret
in
push
xchg
repnz
dec
jnp
mov
adcl
or
mov
cmp
cmpsb
test
shlb
jb
and
mov
fcmovnu
dec
arpl
fnstsw
mov
jecxz
test
inc
test
push
dec
add
testb
test
dec
nop
stos
add
mov
jle
fadds
stos
dec
cltd
or
pop
popa
sub
push
ficomps
pop
scas
xchg
cltd
test
push
cs
test
sub
movsb
xchg
js
cmpsl
jns
mov
int3
mov
int3
jecxz
xor
test
testl
mov
lods
pop
dec
xchg
dec
or
add
adc
sbb
mov
fucomp
fsts
jne
js
cli
and
mull
das
movsb
sahf
aas
sbb
cmc
stos
mov
jo
lret
lret
pop
insb
cmp
test
xchg
cmp
mov
or
or
dec
test
insl
aaa
inc
add
mov
sbb
cmp
shrb
adc
xchg
jmp
ja
and
dec
sbb
andl
push
mov
jns
lcall
in
insb
add
jno
lods
mov
mov
mov
scas
lret
in
mov
data16
adc
cmpsl
popa
stc
mov
cmpsb
sbb
mov
psubusw
jge
std
loop
add
add
in
das
jb
ret
sub
jg
fisttpl
int
pop
rep
or
mov
push
adc
in
sahf
dec
inc
jecxz
in
daa
push
je
cmp
inc
sub
mov
shrl
ret
and
fwait
roll
sub
jbe
pop
and
popa
pop
insb
pop
fwait
in
aaa
rorb
push
into
gs
sub
lods
out
pop
pop
mov
sbb
test
clc
mov
or
push
inc
cmc
mov
int
lds
daa
xchg
xor
lods
inc
test
sub
push
mov
push
cmp
sbb
mov
ja
sub
out
xor
jnp
test
jmp
addb
fwait
pop
dec
xchg
sub
dec
test
inc
adc
xorl
maskmovq
push
jecxz
jno
push
pop
jp
xlat
sbb
bnd
cmp
pop
sarb
mov
or
cld
mov
sbb
in
jnp
xor
rol
xor
cmpsl
push
outsl
hlt
loop
int
push
xchg
hlt
xlat
xlat
jecxz
fsubr
test
and
or
fcompl
dec
cld
loope
cwtl
clc
mov
js
sbb
cmc
lock
mov
inc
movsb
add
mov
lret
push
and
fadds
mov
xor
push
rclb
add
mov
sub
movsb
jle
or
push
mov
fcompl
pop
call
in
movsl
add
sbb
xor
xchg
iret
ds
mov
ljmp
aad
insl
popl
negb
mov
xor
adc
das
test
fimuls
clc
pusha
pushf
flds
mov
ds
xor
lods
adc
mov
jge
push
ss
inc
mov
push
fnstsw
out
dec
inc
jmp
loop
ret
mov
or
scas
iret
divl
cmp
or
test
sbb
cmpsb
pushl
into
test
jle
gs
sub
nop
pop
rcl
sahf
inc
pop
adc
sub
pop
cmc
jb
insb
call
mov
pop
adcl
sbbl
and
scas
adc
mov
push
loopne
push
and
mov
in
aas
test
fisubrs
mov
fsubrl
insl
jae
push
pop
mov
push
add
cmc
scas
sub
out
jecxz
test
cmp
js
cvtps2pi
jbe
aaa
movsb
jae
stc
lahf
push
inc
jmp
pusha
dec
scas
dec
sub
lds
imul
ds
sbbl
mov
or
data16
int3
fwait
in
mov
stos
inc
in
sub
mov
ret
sbb
stos
push
lock
push
xor
cmc
sbb
pop
loopne
int
cmp
xchg
aad
scas
xchg
or
cmp
ljmp
cltd
out
xchg
jb
mov
aad
int3
fnstcw
movsl
aaa
scas
jo
lods
test
push
add
test
inc
sarl
cmp
imul
or
insb
add
ret
adc
bound
mov
imull
lret
mov
lahf
xor
and
xor
jne
mov
xchg
or
push
es
cmpsl
test
test
clc
arpl
outsb
loopne
inc
ret
jne
lret
add
jmp
pop
addr16
in
or
mov
jb
int
aad
cmp
imul
jge
xchg
xchg
add
xor
and
pop
aad
jge
je
test
adc
dec
cmp
fistl
das
outsl
stos
cmpsb
enter
ror
xor
ds
add
ficomps
mov
add
insl
mov
out
mul
mov
aas
jge
xchg
adc
push
xor
inc
push
out
cltd
jle
int3
mov
pop
in
jp
push
fcoms
inc
insl
push
out
jmp
sub
jbe
jg
clc
push
cmp
or
jecxz
push
leave
dec
xor
pushw
in
xor
gs
xlat
pop
mov
ret
les
cld
mov
and
lds
repnz
dec
lods
xchg
sub
jns
cmp
xlat
maskmovq
testl
inc
idivl
jmp
pop
stc
adc
notl
mov
js
dec
adc
dec
orl
xor
imul
outsl
stos
push
addr16
pushf
arpl
loope
stc
cmc
ja
popa
out
mov
cmp
cmpsb
sahf
mov
jbe
insl
outsb
dec
rcrl
mov
daa
data16
pop
insl
adc
adc
sub
sub
rcrb
xlat
mov
js
xchg
sbb
push
jmp
sbbl
mov
in
repz
xchg
dec
js
jecxz
imul
pop
lods
scas
loope
sbb
xor
mov
sbb
out
js
sub
or
add
jg
aam
dec
aaa
pop
jne
out
test
fcomps
push
test
arpl
stc
test
mov
adc
loop
loopne
adc
adc
pop
aas
jg
cwtl
jg
push
movsw
jmp
jns
inc
add
mov
ret
push
sub
popf
jnp
lods
mov
gs
inc
cmpsl
mov
movsb
lret
fsubp
jecxz
push
int
pop
mov
push
imull
stos
stc
popf
cmp
pop
enter
dec
inc
and
lds
push
sahf
and
inc
sub
inc
adc
fisubrs
out
ds
inc
shlb
xchg
cmp
cwtl
mov
push
insl
je
or
pop
scas
ficoml
iret
mov
out
pushf
mov
popl
and
shll
in
int3
add
and
mov
lahf
mov
mov
xlat
ljmp
mov
xchg
mov
aad
leave
xchg
fmulp
cwtl
enter
pop
mov
mov
pusha
push
and
cmp
loopne
jecxz
loope
pop
fwait
imul
add
mov
cmp
cmp
icebp
mov
push
mov
mov
loop
fwait
dec
mov
sub
leave
pop
jnp
psubd
nop
mov
or
or
fisubs
xchg
mov
dec
push
mov
out
sub
sarl
out
and
and
jge
cmpsl
dec
mov
pop
sti
sbb
inc
and
pushl
lret
pop
xchg
lods
xchg
imul
lock
loope
dec
pushf
dec
push
fucomp
stc
cmc
fs
add
xchg
out
mov
scas
mov
jp
and
xor
sahf
outsb
shrb
or
cmp
push
and
cmc
pop
sub
enter
div
mov
inc
push
mov
push
push
inc
call
push
negl
out
pusha
and
dec
inc
or
fisubl
jne
cli
sarb
addr16
dec
mov
pop
idivb
add
rolb
add
mov
outsb
cmp
mov
jmp
daa
cmp
mov
adc
or
aaa
sbb
push
and
push
inc
int
push
xchg
jl
jle
repnz
inc
sub
inc
fs
jmp
lock
rorl
mov
mov
rcrb
stos
cli
push
addr16
aas
cmpsb
mov
sbb
shr
aam
rcrb
mov
and
xor
xor
mov
test
and
imul
cmpsb
popa
lds
cmp
in
int3
outsl
rorl
cmp
flds
mov
sbb
notl
andb
xor
mov
lock
add
stos
insl
out
repz
es
and
adc
cli
mov
mov
cmp
xor
add
push
testl
clc
or
pop
and
xchg
mulb
inc
mov
sub
sub
jg
aam
pop
mov
fsubrs
inc
pop
out
mov
test
xor
mov
jno
outsl
sahf
pop
insb
adc
es
mov
and
cmp
sub
xor
or
mov
mov
dec
mov
das
mov
adc
rclb
fcom
mov
jle
xchg
outsb
sti
bound
cmp
sar
mov
add
or
jmp
fldt
lock
hlt
cld
adc
jg
cmc
bound
fisubl
xor
sbb
or
imul
xor
lcall
mov
cmp
fidivs
clc
mov
xorb
aam
adc
adc
into
jo
jo
jno
jne
push
xor
sarb
inc
push
and
cmp
lret
js
popa
cmpsl
push
stos
shll
xchg
rcrl
add
add
push
ljmp
sti
insb
mov
jb
xchg
mov
sbb
outsl
cld
stos
dec
adc
ret
and
sub
mov
add
les
add
jl
punpckhwd
jno
insl
imul
inc
add
out
out
mov
sub
cmpsb
sarb
xchg
rorl
cmp
push
outsb
popa
dec
fldt
xchg
jl
ret
fisttps
inc
das
pop
dec
repnz
sub
mov
aas
sbb
mov
add
shll
mov
or
jns
jbe
push
push
sub
jae
mov
cmpsb
adc
in
cmp
sbb
pop
mov
push
imul
xlat
scas
mov
cmp
cmp
xchg
rcl
scas
divb
lcall
and
sahf
inc
and
lods
sub
nop
in
push
xlat
call
mov
ror
ficoml
inc
js
xchg
dec
inc
dec
dec
jb
cli
je
aas
xor
shrb
sub
and
in
inc
ja
lret
mov
punpckldq
mov
mov
mov
pop
inc
iret
lcall
pop
pusha
lahf
js
add
cmp
dec
mov
clc
xchg
dec
popa
xor
ffree
in
sbb
test
outsl
mov
mov
fisubrl
ret
subl
sub
mov
jns
cmp
repnz
sbb
dec
sbb
jp
fsubs
jp
scas
sbb
add
xchg
jo
bound
jp
lret
loop
push
push
dec
dec
sbb
xchg
sets
pop
mov
inc
mov
pushf
dec
jb
and
pop
or
mov
vmovntps
or
jg
clc
aad
and
sbb
ja
cli
pop
mov
in
sbb
and
das
rcrl
jne
dec
fsubr
mov
or
cmp
dec
mov
mov
mov
jmp
test
out
mov
ss
xor
pushf
orl
loop
pop
fs
insb
fcomi
lds
pop
test
add
sbb
push
push
sahf
test
jo
ret
clc
push
xor
fwait
icebp
dec
sub
mov
cs
xor
cmpb
insb
fisubrl
and
pop
xchg
ljmp
mov
adc
push
push
insb
or
dec
inc
loop
sarl
movsb
pop
xchg
je
xor
fcmovne
inc
cmpsl
inc
xchg
aad
nop
mov
sbb
lahf
xchg
mov
std
mov
xchg
loopne
mov
lods
jb
bound
xchg
mov
sub
and
xor
push
or
cmovg
leavew
popf
dec
mov
lds
test
xchg
in
fwait
and
ds
sarl
xchg
pop
cmp
push
mov
xchg
movsl
ljmp
xchg
testl
cmp
and
sub
dec
pop
jmp
jecxz
sbb
daa
ds
jne
pop
mov
enter
stos
mov
ja
pop
gs
mov
ret
add
push
or
add
mov
outsl
fildl
xor
arpl
dec
inc
loopne
aaa
ret
fstpt
jp
pusha
or
mov
and
fidivl
ror
jne
cmpsl
inc
loopne
sub
icebp
or
aam
in
or
sbb
xor
and
xor
mov
data16
inc
cs
push
xor
pop
in
repz
xchg
sbb
aam
mov
xchg
ljmp
cmpsb
sbb
std
idivb
stos
or
jl
jl
aas
xorl
add
cmc
ret
stos
adc
or
adc
mov
mov
in
shrb
and
jle
cs
int3
ret
movsl
lods
aas
xor
mov
lods
sub
js
shl
pop
fidivrl
mov
add
push
shlb
loopne
bound
jbe
or
pushf
jle
out
sub
hlt
push
std
icebp
sub
jnp
jge
loope
pop
xchg
cmp
mov
and
xchg
xlat
cli
mov
push
mov
cltd
enter
sub
mov
ds
and
adc
int
cs
scas
icebp
mov
fnstcw
jne
fildll
in
inc
and
xchg
push
inc
dec
mov
xchg
push
icebp
adc
out
mov
xor
pop
lds
cli
dec
adc
dec
scas
mov
jp
jp
sti
push
aaa
adc
add
push
pop
fwait
push
loope
ja
pushf
repnz
popw
inc
dec
jnp
mov
inc
scas
cs
inc
outsb
in
es
clc
jb
xchg
sub
or
pop
cld
inc
lds
js
mov
shll
inc
adc
adc
sub
mov
lods
lcall
gs
rorl
repz
jle
mov
into
movsb
fs
repz
inc
inc
push
stos
mov
popf
push
nop
xor
and
stos
xlat
imul
sub
push
repz
cwtl
popa
lcall
and
pop
mov
loope
xor
sbb
sbb
arpl
mov
out
andl
dec
push
loop
mov
pop
xor
iret
inc
ss
xchg
fidivrs
adcl
or
xchg
mov
mov
xchg
lock
dec
inc
pop
mov
mov
ret
adc
xchg
in
dec
pop
push
push
rcr
adc
jp
jno
repnz
adc
rcrb
add
push
sub
sub
repnz
incl
daa
rcl
sahf
jae
xchg
xor
dec
fs
cmpsl
stos
adc
ja
nop
in
fs
testb
mov
adc
mov
cmc
js
stos
loope
adc
in
mov
or
sub
sbb
fwait
xor
inc
rcpps
inc
in
cmp
leave
mov
cmpsb
mov
xchg
push
popa
or
test
ret
cmpsb
push
call
ret
lahf
or
push
mov
sbb
jp
sbb
cmp
jno
push
popf
dec
xchg
inc
jle
sub
std
sbb
or
and
cmp
cmc
test
cmp
imul
cwtl
mov
xor
xchg
test
mov
xchg
into
mov
sti
es
xchg
and
mov
cld
shrb
ds
out
insb
adc
mov
push
jnp
xchg
push
jns
mov
pop
mov
aaa
hlt
fistpl
xorl
iret
out
popf
dec
xchg
gs
addl
mov
outsb
mov
sub
and
aaa
sbb
sahf
and
lahf
and
ret
inc
and
push
lcall
push
loopne
mov
shll
insl
jecxz
pop
xchg
insl
jns
les
out
pop
push
loop
sub
mov
adc
nop
repz
mov
in
pop
pushf
pusha
sbb
xor
in
jmp
push
fcoms
and
cs
jbe
cmp
repnz
jbe
mov
in
and
adc
cltd
push
xchg
jb
into
in
cltd
inc
xchg
hlt
icebp
xchg
stos
push
cwtl
cwtl
sti
mov
sbbl
mov
movsb
out
arpl
lods
jmp
mov
mov
imul
std
xorl
adc
push
cmpsl
aad
inc
mov
and
xchg
and
mov
or
loop
adc
icebp
xchg
out
adcb
add
std
cs
or
pop
es
repnz
fs
iret
loope
lea
jmp
xor
sbb
adc
sub
xor
shll
cltd
mov
mov
jo
jbe
sarb
push
ficomps
std
out
pop
or
fldcw
xor
push
popa
cli
mov
dec
cmc
into
adc
inc
mov
xor
pushf
mov
xor
ret
loope
add
std
mov
adc
stos
mov
xchg
add
xor
add
nop
and
mov
int3
xchg
xchg
cld
scas
xorb
ret
ja
out
outsb
aas
sahf
push
add
push
adc
outsb
repz
or
dec
cmpsb
in
es
sbb
scas
xor
jle
es
cwtl
lock
inc
fs
das
inc
adc
out
mov
sbb
dec
push
jae
sarl
sbb
cld
jge
std
pop
lock
or
sbb
cmpsl
or
cmp
push
scas
rcr
mov
sbb
xchg
pop
xchg
mov
in
mov
loope
pushf
xor
repnz
inc
dec
cmpl
jecxz
out
insb
jmp
loopne,pn
lods
pop
fwait
lret
push
xchg
or
mov
mov
jle
dec
ja
cli
sbb
rol
or
shll
pop
imull
imul
pop
ljmp
out
jnp
xor
in
sub
in
inc
out
adc
xchg
xchg
std
test
es
lods
xor
repz
adc
stos
pop
cwtl
mov
inc
push
sbb
mov
jl
outsb
test
es
sti
xor
fsubrs
push
mov
dec
mov
clc
jecxz
pop
imul
in
mov
fs
lret
loopne
dec
xlat
sub
mov
mov
adc
cmp
mov
mov
shrb
xchg
repz
sub
mov
int3
ljmp
inc
mov
jecxz
adc
sub
cmc
inc
ret
add
sbb
add
dec
or
hlt
cmp
ret
inc
xor
fbld
cmc
cld
lahf
inc
mov
and
pushf
cltd
inc
xchg
pop
pusha
xchg
dec
int
cli
pushw
loopne
cmp
popa
sbb
cmp
popf
arpl
cmp
test
int3
sbb
or
dec
fwait
dec
pop
scas
int3
push
data16
shlb
stc
and
out
add
aad
ds
ljmp
imul
mov
fists
pushf
inc
cmp
test
fldlg2
xor
inc
stos
clc
loopne
iret
xchg
adc
in
push
or
lea
jmp
cmc
mov
in
enter
mov
sbb
sahf
jb
in
aaa
push
out
inc
xchg
jno
les
xchg
stos
jnp
rcrl
iret
adc
inc
aas
test
jb
fstl
mov
fbld
jmp
push
jns
cmpsl
test
adc
mov
test
and
gs
cmpsb
inc
push
ds
cmp
xchg
inc
repnz
aad
xchg
shrl
xchg
cmpsb
cli
push
dec
push
out
pop
jge
mov
pop
mov
decb
scas
mov
xchg
jns
push
xchg
push
js
lcall
and
vcvtsi2sdl
nop
outsb
dec
stc
in
and
cmp
cmpsl
xorl
sahf
pop
or
fsub
int3
or
jmp
insb
push
or
jbe
jb
jmp
aam
push
or
sti
pusha
xchg
mov
cmp
clc
jb
mov
or
mov
roll
rep
mov
ficomps
inc
sarl
mov
push
xor
push
scas
dec
cmp
aaa
repnz
test
loop
inc
dec
orl
sar
popf
fdiv
push
mov
add
inc
adc
pop
mov
jp
xchg
rol
test
loop
inc
mov
xchg
je
shl
push
push
push
jnp
inc
sbbb
mov
mov
leave
mov
shrl
mov
fnstenv
pop
cli
test
pop
push
bound
aad
lea
cmp
or
xchg
pop
pop
negl
cmp
push
xor
inc
sbb
clc
adc
insb
xchg
ret
jg
je
adc
fnsave
stc
das
add
xchg
aas
mov
lcall
lcall
sbb
idivb
pop
sub
mov
cld
hlt
mov
jb
inc
fisttps
out
pop
test
fcmovnb
outsb
out
fisubrl
xor
or
inc
adc
mov
lods
inc
dec
cmpsl
adc
hlt
or
fistpll
sub
sub
test
cmp
mov
nopl
mov
lcall
xchg
addr16
fisubs
scas
xchg
cwtl
mov
pop
sti
sub
fwait
inc
dec
sub
adc
lods
sbb
mov
add
ficoms
fidivl
sti
xchg
jg
and
mov
cs
or
jg
jae
or
sbb
cli
in
je
and
jp
or
fbstp
dec
test
insb
mov
scas
push
leave
mov
sbb
lds
cmp
movsl
jnp
dec
mov
jne
cmpsb
fldcw
cld
xor
and
and
gs
dec
inc
mov
adc
sbb
inc
and
lea
ds
or
adc
stos
add
xor
and
sbb
or
scas
stos
or
sbb
push
add
jp
cli
filds
or
and
mov
ss
push
cmp
mov
xor
mov
push
mov
movsl
cmpsb
sti
mov
enter
inc
sbb
inc
je
and
andb
hlt
cli
lock
leave
push
dec
add
sarb
adc
cmc
lret
xlat
xor
adc
mov
lods
fdivrs
aaa
xor
in
out
mov
ds
push
andl
xchg
shrb
inc
cli
sbb
mull
mov
shrb
test
test
cs
in
pop
loope
push
iret
xor
hlt
mov
rorl
fs
and
add
xor
or
shrl
xchg
insl
sub
gs
iret
into
push
cltd
and
sub
xor
cmp
jmp
sub
sti
pop
mov
loope
loope
outsb
adc
lahf
sub
add
pop
push
sbb
xchg
push
push
repnz
leave
enter
les
test
into
cwtl
jae
sub
fnstsw
xor
arpl
insl
mov
fildl
clc
stos
inc
ret
fs
pop
push
mov
hlt
fstpl
ds
aas
or
lret
sbbl
lea
stc
mov
mov
push
imul
das
adcb
and
mov
mov
les
dec
test
jns
adc
scas
pop
xchg
push
pusha
mov
mov
das
in
mov
jnp
imul
call
jg
xchg
jno
cli
int
cli
sti
out
arpl
xlat
mov
xchg
filds
orb
addr16
add
test
iret
cmp
leave
scas
mov
hlt
mov
aas
add
filds
mov
rcll
ja
dec
pop
test
jg
pop
lcall
cltd
add
ja
jmp
stc
dec
push
push
dec
jmp
iret
mov
ljmp
jg
pusha
lret
dec
mov
sub
push
add
popa
xor
push
loop
cmp
sar
movsb
ja
cmpsb
imul
neg
out
jnp
lock
gs
jno
es
neg
mov
int3
test
popa
mov
loop
cmp
adc
xor
sbb
xor
and
mov
cmpsl
lds
inc
adc
pop
shlb
mov
xlat
adc
sbb
das
adc
out
push
cmp
lret
add
jp
cltd
int
cli
mov
mov
and
addb
add
stos
jb
inc
or
out
mov
outsl
mov
dec
lods
mov
fcmovbe
pop
rorl
add
incl
sub
jbe
stos
or
mov
mov
mov
mov
cmpsb
std
mov
mov
jne
push
jmp
sbb
imul
cwtl
dec
push
inc
pop
pop
inc
mov
mov
pop
stc
adc
xchg
cmp
xlat
movsl
jge
jbe
push
std
insb
stc
push
stc
inc
jae
xchg
int3
jge
sub
testl
pop
jbe
les
pop
mov
lret
aam
or
cmpsb
push
pop
aaa
psllq
mov
inc
movaps
test
xchg
fwait
rol
adc
mov
sub
int3
and
xchg
lea
adc
loopne
add
cmp
arpl
rcrb
pop
sub
sbb
cs
daa
adc
daa
dec
mov
scas
cmpsb
dec
jns
test
maxps
rcrb
cld
and
push
mov
roll
sub
cld
push
push
cmp
scas
or
popf
jge
sub
lods
add
arpl
and
js
lock
jno
cs
pop
sub
dec
push
movsb
adc
mov
movsl
jg
jmp
std
rcrl
and
in
mov
and
xchg
es
mov
adc
and
mov
cmpl
or
mov
jecxz
push
jnp
into
fs
in
fimuls
cmp
sub
loopne
mov
cmpsl
sub
sbb
sbb
inc
and
daa
push
sbb
mov
lock
das
fnstcw
pop
sub
imul
dec
rcrl
adc
inc
and
loope
stos
cs
or
fs
popf
jg
pop
pop
out
and
ljmp
in
js
inc
mov
adc
dec
out
loope
out
loop
pop
int3
mov
adcl
cmp
jg
js
adc
add
cmp
push
dec
xchg
mov
sbb
cmpsb
stos
movsl
sub
decb
in
mov
xor
fndisi(8087
mov
adc
ror
xor
daa
das
adc
jne
js
dec
andb
cltd
inc
ljmp
jl
adc
push
pusha
jmp
loop
and
inc
or
adc
mov
pop
outsb
ja
xchg
ret
int3
addr16
in
sub
stos
orb
mov
xor
jmp
xchg
repz
or
les
pushf
cmpsb
xor
inc
mov
int3
mov
popf
test
xor
aam
test
mov
dec
popa
movl
lret
call
adc
jno
test
stc
out
and
add
dec
jg
mov
sub
test
sub
jne
push
test
or
fidivrl
enter
lret
ljmp
imul
repz
jg
filds
add
sbb
sub
jno
fsts
rcrb
adc
xlat
xor
aam
insb
into
out
pop
jb
out
push
mov
dec
pop
jb
repz
stc
pushf
adc
adc
or
mov
rcrb
into
or
xchg
mov
scas
orb
gs
movsl
jbe
push
xchg
fwait
jl
lods
pushf
movsb
xchg
xchg
leave
sub
pop
cmp
test
sbb
adc
pushf
lds
push
or
add
fsubrs
es
inc
cld
dec
stos
out
cwtl
fsubl
mov
sbb
mov
push
addl
add
inc
mov
or
mov
mov
sbb
in
xor
pushf
mov
rclb
sub
popf
xchg
and
push
fwait
cmp
mov
loope
sub
push
inc
mov
mov
jle
sub
int
test
or
xchg
mov
les
xor
nop
imul
and
lods
mov
cld
mov
push
push
xchg
mov
add
jmp
les
push
cmp
jo
into
mov
aas
and
fstpl
je
mov
sub
nop
and
test
sbb
std
out
dec
add
subb
xor
jp
cmp
jae
call
lods
mov
int3
call
rcr
mov
out
test
jo
jecxz
mov
fwait
xchg
pop
scas
fnsave
movsb
ret
mov
sbb
inc
xor
dec
inc
mov
lret
xlat
ss
loop
dec
mov
push
test
jmp
jo
sub
ficomps
dec
xor
jle
pop
ret
xor
adc
jge
mov
push
pop
les
stc
inc
jle
jmp
outsl
push
cmp
imul
inc
sub
iret
xor
dec
jb
inc
lock
mov
cmc
and
jno
and
lret
pop
ret
push
stos
and
in
mov
fsubs
mov
subb
pop
sbb
cmc
add
inc
inc
movb
mov
inc
adc
leave
into
mov
and
cmp
add
adc
inc
mov
or
push
and
test
mov
push
inc
nop
add
mov
js
aaa
ja
sti
pop
jg
es
lods
shr
repnz
sub
mov
or
sub
or
cmpsl
cmp
test
xor
shrl
js
lods
shlb
sub
inc
adc
jne
pop
pop
or
inc
mov
xchg
push
fwait
adc
xchg
fdivs
adc
xchg
mov
and
fstpt
and
adc
lock
das
fbstp
inc
jns
push
push
push
je
sub
sbb
pop
adc
stos
daa
test
add
cmpsb
ja
cmp
pushf
xchg
mov
mov
dec
loop
mov
mov
sbb
test
arpl
lock
call
push
push
xchg
stc
sub
xor
sub
mov
xor
aas
xchg
mov
dec
push
dec
pop
cmpsb
ret
mov
cld
adc
gs
popa
sahf
aas
pop
call
dec
flds
mov
ljmp
movsb
mov
mov
push
movsb
nop
mov
jb
pop
lods
jecxz
jne
mov
cwtl
icebp
shrl
jno
xor
mov
jg
jg
pop
push
add
loopne
pop
lock
and
or
stc
div
test
push
pop
out
ljmp
and
mov
xchg
dec
xorb
cmc
mov
sbb
xor
cmpb
push
mov
adc
testl
cli
jge
int
inc
movsl
imul
insl
sbb
push
sbb
adc
roll
and
cmp
cwtl
xchg
sub
in
mov
out
stos
xor
and
cmp
inc
add
mov
xor
pop
subl
jno
xchg
fsubrs
push
in
add
dec
sub
and
or
xor
movsl
lds
shl
jne
jle
push
adc
sbb
mov
fwait
xchg
sahf
movb
lods
push
bound
aam
and
shr
enter
pop
or
lahf
inc
cltd
ljmp
mov
sbb
adc
mov
lds
or
inc
lahf
xchg
mov
stc
and
int3
cmc
movlps
pushf
bnd
fwait
xor
mov
xchg
or
scas
insb
or
jg
mov
stos
popa
inc
jae
dec
jno
cs
mov
inc
jnp
imul
pop
pop
bound
sbb
ss
xchg
das
xchg
or
in
aaa
ds
mov
in
push
mov
imul
xchg
cmp
cli
sub
ja
lea
add
insl
pop
mov
lahf
sub
popa
mov
add
mov
adc
icebp
int3
scas
decb
sub
arpl
dec
dec
add
js
sbb
imul
sub
jae
cltd
dec
jmp
cs
daa
hlt
test
orl
lret
in
and
lret
rorb
js
push
push
mov
cmp
adc
inc
jne
add
out
xor
fistpl
icebp
and
pop
insb
xchg
fcoml
mov
test
mov
mov
push
fidivl
pop
mov
mov
push
shl
dec
mov
rorl
rclb
dec
popf
cmpsl
shll
jo
fldt
push
movsb
scas
xor
insl
cmovns
cmp
repnz
les
jae
ljmp
mov
in
jns
loope
or
lcall
and
cmp
movsl
leave
cltd
in
lods
sbb
pop
not
and
xor
push
lock
aas
cmp
sub
sahf
add
aam
mov
push
rcrl
xchg
or
jb
lods
sub
cmp
jno
lods
jl
adc
pop
lods
filds
jp
mov
add
sub
bound
sbb
xor
out
outsl
sbb
stos
fidivrl
mov
ret
repz
lahf
inc
xchg
sbb
mov
inc
pop
cmp
mov
push
sub
out
test
arpl
lea
iret
pop
jl
jmp
cmc
repz
pop
cli
cmp
xchg
xor
pop
xchg
les
popa
push
xor
pusha
jo
mov
sub
xor
in
mov
cltd
mov
ds
mov
inc
loopne
add
cli
sbb
movntps
push
add
lds
cmc
fs
notl
rcr
adc
inc
popf
push
lahf
addr16
xlat
fidivl
sti
cmp
mov
push
loopne
ds
add
imul
out
aam
shr
fidivs
adc
icebp
lods
sbb
repz
xchg
push
add
std
mov
mov
rclb
xor
xor
sbb
outsb
adc
ror
mulb
mov
insl
icebp
test
push
inc
jb
ffree
call
ja
adc
mov
lock
pushf
xor
in
lods
cs
add
inc
jns
test
push
dec
add
sarb
fmull
fistps
pop
stc
pushw
mov
lods
jl
movsb
mov
mov
and
push
jecxz
notb
sbb
adc
xchg
pushf
xor
inc
push
jne
xchg
movsb
mov
jo
inc
inc
aam
or
push
and
loop
scas
jl
push
stc
push
inc
mov
mov
add
outsl
jbe
stc
sub
int3
or
in
fldt
mov
in
loope
test
lock
jecxz
or
int3
jl
cmp
mov
add
mov
adc
cmc
sbb
add
arpl
and
mov
lahf
aam
dec
xchg
jnp
xor
jbe
lods
inc
rcrl
fsubl
or
imul
test
jl
fidivs
cli
adc
sti
sub
dec
mov
dec
test
add
xor
fistpll
pop
mov
lods
sbb
cmp
push
and
cltd
lcall
cmpsl
mov
cwtl
subb
js
fs
xchg
pushf
push
mov
push
pop
mov
cmc
dec
xchg
or
jb
clc
cmp
movsb
arpl
lods
fnsave
add
mov
mov
pop
int3
mov
rol
sub
in
mov
lea
adc
jg
icebp
aam
sbb
dec
ds
mov
inc
sbb
cwtl
push
pop
out
fbstp
pop
adc
sbb
std
mov
call
xchg
inc
lahf
cltd
fisubl
test
push
mov
mov
cmp
pop
cmp
sbb
push
imul
add
sarb
mov
inc
xor
pmaxsw
pop
adc
inc
cmpsl
sbb
nop
dec
pop
arpl
mov
xchg
je
mov
outsl
ret
xchg
jmp
xchg
xor
inc
sbb
inc
js
mov
rcr
push
push
xorl
pop
inc
mov
push
mov
mov
lret
and
outsl
and
mov
sbb
inc
xor
jnp
jle
lcall
lahf
and
lock
xchg
outsl
mov
in
enter
scas
add
int3
mov
out
stos
movsb
cld
fdivs
push
stos
lea
nop
ljmp
sbb
cltd
dec
sub
mov
js
adc
test
ret
xor
ljmp
mov
sub
sub
dec
pop
inc
arpl
dec
add
les
mov
inc
xor
fcmovnu
out
mov
mov
mov
jo
pop
xchg
fildll
mov
xor
filds
xor
aas
jmp
fdivs
inc
adc
pop
repnz
into
loopne
sbb
jp
sub
cld
mov
mov
imul
mov
push
fldt
mov
cmp
es
out
push
ss
jbe
js
mov
lret
je
sub
or
scas
test
pop
cmp
cs
movsl
inc
sbb
rorl
js
mov
jno
out
sbb
out
incb
mov
xchg
ret
out
test
mov
out
pop
aas
pop
test
dec
popf
xchg
adc
jne
jbe
outsl
scas
inc
pop
into
or
stc
mov
test
shl
fwait
push
or
mull
push
lea
lds
fidivs
shll
mov
ret
adc
jns
add
sbb
fwait
jbe
push
sti
mov
pop
mov
cmpb
sub
ljmp
push
xor
adc
add
push
cli
jecxz
pop
outsl
out
js
inc
loop
out
dec
cld
test
pop
add
sti
stos
es
int
repnz
or
push
pop
popa
mov
ret
dec
mov
mov
jns
cmp
pop
stos
jo
dec
ljmp
enter
sub
mov
add
int3
pop
mov
sbb
and
lret
arpl
imul
iret
jge
sub
add
fisubs
or
add
inc
jle
mov
jbe
add
mov
mov
xchg
pop
js
scas
mov
lret
xor
outsl
push
js
dec
sbb
cmc
push
bound
xor
sub
pop
mov
add
add
push
push
mov
cmp
pop
pop
lods
sbb
mov
in
sub
sub
jmp
pop
mov
pop
rol
mov
mov
das
testb
fs
das
test
or
or
inc
icebp
xchg
je
shlb
pop
or
imull
jmp
fildll
xor
cmp
retw
ret
mov
aaa
movsb
scas
pop
lock
ja
sub
mov
xor
lcall
mov
dec
fsts
pop
shufps
pop
test
repnz
int
mov
push
lods
push
jl
rol
fsubs
or
pop
sbb
incb
lea
dec
push
repz
cmp
and
test
mov
sarb
enter
mov
sbb
std
fcomps
mov
imul
adc
lock
push
mov
fxch
xor
push
movsl
imul
pushw
xchg
test
mov
fdivp
pop
movsb
push
ret
xor
mov
adc
pop
dec
addb
mov
mov
and
jnp
cmp
jb
push
jle
fcmovbe
push
cmp
adc
push
adc
test
and
adc
inc
popf
inc
sub
test
lds
lock
cwtl
mov
jecxz
loop
add
xchg
lea
shll
lea
dec
fnstcw
cs
pop
rorb
pop
cli
xchg
int3
mov
cmc
shlb
fstpt
sub
push
pop
inc
fwait
xchg
xchg
inc
in
jecxz
hlt
orb
xchg
int
xor
mov
cli
inc
sub
xor
cltd
neg
cmpsb
cmc
sbb
lock
mov
adc
mov
jp
jae
inc
mov
pop
inc
or
or
aad
mov
subl
jecxz
xchg
ficoml
outsl
repz
add
sub
or
fstl
repnz
sti
aaa
xor
jmp
sahf
mov
out
inc
movsl
loop
outsl
fistps
mov
add
xchg
sti
insl
insb
xor
push
cmp
mov
jecxz
repnz
push
lcall
addr16
into
clc
mov
cli
or
xchg
pop
std
divb
out
test
enter
stos
lock
sub
sub
add
fists
loopne
lods
std
pushf
clc
shlb
call
pop
dec
lock
xor
sbb
out
fistpll
mov
and
and
add
mov
fsts
aam
icebp
sbb
inc
cmp
sub
cltd
xor
sub
adc
lcall
adc
daa
push
or
mov
push
repnz
inc
movhps
popa
push
repnz
aas
lea
push
arpl
xor
pop
cld
fsubrs
inc
test
mov
jno
or
xor
sub
sub
mov
push
push
mov
cmp
xor
iret
lods
add
cwtl
adcl
mov
sub
cmp
inc
push
and
test
push
shll
cltd
sahf
mov
int3
movsb
xor
mov
daa
ds
roll
add
repz
out
pop
jb
pop
cmp
imul
fmul
lds
ds
jo
shl
clc
std
in
cmp
dec
xchg
push
leave
out
imul
dec
jmp
inc
cmp
mov
dec
sub
jnp
out
dec
jl
pusha
out
sub
xchg
movsb
mov
sub
test
cltd
pop
or
cmpsl
push
cmpsb
jno
scas
ljmp
aas
scas
cmc
add
xchg
stc
inc
cmp
sub
mov
hlt
adc
fcompl
pop
push
jp
loop
cli
fs
jne
addr16
mov
sarb
rclb
fcompl
iret
call
xor
sbb
stos
mov
pop
pop
sub
jle
push
adc
inc
adc
notb
pop
js
push
xor
jp
lret
clc
dec
repz
dec
sti
pop
rcl
arpl
add
flds
stos
xor
maxps
insl
dec
fisubs
jmp
add
out
cmp
pop
lcall
ret
out
outsl
add
jle
push
mov
jb
pop
shrl
push
jmp
lods
scas
cld
test
and
mov
sbb
xchg
mov
dec
jecxz
daa
dec
enter
sub
dec
pushl
xchg
xor
inc
mov
icebp
mov
ret
enter
cmp
fcomps
arpl
xor
test
xchg
faddl
xchg
jmp
rorb
pop
dec
cmpsb
pusha
xchg
push
out
mov
cmp
mov
dec
fistpll
jnp
mov
insl
ljmp
mov
adc
cwtl
push
adcb
imul
and
mov
mov
push
fdiv
stos
sti
pop
clc
mov
pop
push
rolb
sbb
ret
and
out
test
mov
pop
jne
sbb
mov
rorb
std
outsb
mov
es
push
out
into
nop
movsl
pop
out
sbb
call
divb
mov
fisubl
push
or
out
int
mov
mov
xchg
sbb
daa
sahf
in
cs
inc
add
mov
jge
dec
cmp
sahf
add
iret
int3
int3
fnstenv
int3
into
adc
mov
fisubrl
int3
test
push
mov
mov
mov
add
ret
or
insb
sbb
and
mov
test
hlt
xchg
cs
xor
cmc
and
subb
mov
push
mov
scas
and
dec
adc
lret
addr16
mov
rcrl
fcomp
movsl
xchg
add
icebp
idivl
cmc
test
repnz
mov
loop
jo
test
call
xor
loope
or
push
and
das
or
into
movsb
sub
scas
test
mov
jno
inc
push
mov
sbb
fsubrs
and
inc
mov
lods
notb
lds
fwait
push
enter
sub
or
adc
arpl
mov
xchg
mov
rcrb
and
xchg
cmc
xchg
push
or
aaa
or
shrl
mov
or
pop
push
and
jo
push
pop
test
push
dec
mov
mov
jmp
int
int
sbb
pushf
dec
xor
fwait
cs
sbb
aam
inc
lods
sahf
pop
jo
push
pop
jae
mov
daa
sub
pop
mov
jecxz
pop
inc
das
xor
inc
jp
pushf
and
add
shrb
dec
aam
adc
pop
dec
js
into
aam
dec
mov
lcall
push
mov
nop
xchg
mov
inc
mov
pop
jo
jo
psllq
inc
aad
loope
outsb
testl
les
aas
jle
pop
aas
nop
dec
rcrb
and
pop
scas
rclb
sbb
push
popf
lret
test
cmp
test
sarb
lea
das
jg
adc
nop
roll
pop
icebp
jno
mov
inc
cmc
add
inc
test
fs
pop
dec
lahf
pop
call
pop
mov
xchg
sbb
mov
adc
ret
or
gs
gs
pop
out
in
sub
sub
jle
fmuls
fisubs
xlat
repnz
jns
pop
xor
xchg
mov
into
cmp
bound
jb
jb
data16
mov
loop
pop
movsl
xor
les
cmc
out
mov
and
push
outsb
mov
and
sub
outsl
imulb
and
mov
dec
cmp
push
int3
mov
lea
sub
aaa
jge
pushf
cs
adc
out
loop
jne
pop
jno
inc
sahf
inc
inc
std
les
addl
and
mov
inc
xorl
dec
mov
fistpl
and
pop
in
mov
fcompp
out
stos
adc
add
sbb
adc
sub
push
mov
lahf
dec
dec
lods
sbb
aad
repz
testl
inc
push
call
xlat
into
xchg
sub
flds
pushf
jecxz
ret
add
fcmovnb
pop
inc
stos
adc
cmpsl
jns
out
inc
lret
cmp
add
sbb
rolb
aas
lods
lea
jnp
cs
sbb
push
xchg
push
sbb
and
call
xchg
cli
mov
inc
or
fsubrl
outsl
lcall
mov
mov
jp
dec
sbb
sub
push
lret
push
and
jbe
jmp
arpl
sub
and
inc
scas
roll
pop
bound
sub
ret
stos
outsl
pop
or
pop
lea
xchg
push
sahf
ret
repz
push
cmp
cmp
in
movsl
add
xor
popa
je
stos
lods
adc
cmp
mov
aaa
out
xor
or
insb
daa
cmp
mov
xor
push
fs
inc
xor
stc
stos
cmpsl
cmp
daa
incb
repnz
adc
gs
stos
stc
insb
xchg
test
lods
fstps
leave
cmp
das
mov
sbb
jb
and
xchg
xor
adc
mov
add
push
jae
mov
xchg
dec
loopne
cmp
test
cmp
mov
lds
aad
sti
and
clc
leave
push
push
cmc
cmpsl
or
in
fnstcw
data16
xor
mov
andb
add
jl
popf
aas
jb
sub
jge
out
pop
repnz
push
jmp
mov
and
add
movups
inc
mov
aad
mov
mov
pminsw
lds
scas
cmp
stc
fwait
test
sbb
dec
out
ret
lods
pop
cltd
jmp
xchg
and
sbb
mov
push
jb
lcall
shrb
shll
ret
ror
rorb
pop
push
cmpsl
xchg
sub
mov
pop
jg
lcall
pop
test
into
xor
xchg
jo
jmp
dec
dec
cmc
mov
adc
fadds
into
into
push
add
lahf
and
loop
mov
mov
cld
jl
mov
inc
lahf
adc
mov
add
in
cmpsb
or
sbb
and
dec
push
cld
pop
dec
dec
mov
aaa
push
cmpsl
outsb
ds
aaa
cmp
shll
and
inc
sub
cmpl
popf
decl
adc
vpmacssdql
pop
daa
and
iret
cmp
jno
inc
sbb
inc
mov
std
bound
nop
jns
cwtl
in
or
fldln2
call
inc
aam
add
je
pusha
jp
xor
sbb
fs
cmp
sbb
jmp
add
jns
add
lret
xor
cld
add
dec
jb
pop
inc
decb
aad
test
dec
dec
test
je
shl
sub
in
adc
adc
in
inc
sbb
push
leave
inc
mov
pushf
xchg
xchg
cmp
mov
jbe
andb
fidivrs
enter
sbb
push
mov
jp
pop
jge
mov
dec
dec
loope
push
mov
roll
and
xor
inc
popa
jnp
test
and
pop
sub
gs
sub
mov
mov
or
mov
sub
cmpsl
and
push
andb
push
pop
mov
rclb
jbe
test
or
xor
in
or
pusha
and
jae
mov
xor
in
dec
push
jbe
ret
cltd
pop
sahf
and
cmp
push
adc
mov
addl
cmp
icebp
or
mov
lret
fldenv
lods
fcmove
jo
iret
pushf
cmp
data16
dec
sbb
lods
mov
jge
and
scas
mov
inc
pop
push
scas
pop
cmpsl
fcmove
stc
push
nop
outsl
sub
es
movsb
rcrb
mov
sbb
push
sbb
lea
sub
or
inc
pop
ret
add
imul
dec
and
dec
and
shl
mov
cmp
mov
pusha
xchg
xor
dec
or
addl
xor
sbb
out
pop
hlt
aaa
js
leave
fimuls
aaa
push
mov
xchg
sbb
pop
cmpsb
pop
cmp
inc
push
cmpsb
cmp
sbb
pop
test
out
inc
cmp
adc
mov
or
in
lods
and
add
pop
sbb
fdiv
into
mov
je
push
xchg
mov
repnz
add
push
push
icebp
dec
cmpsl
in
push
sbb
jno
fldcw
in
int3
dec
outsb
xor
jg
push
jb
fbstp
cmp
imul
mov
or
sub
or
adc
jp
sbbl
pushf
sbb
cld
cmp
inc
xchg
cld
in
cmp
or
xchg
inc
clc
call
push
push
sbb
xor
inc
mov
mov
adc
jno
xchg
jp
jl
fdiv
or
xor
sbb
cmp
ret
jno
push
sarb
pop
pop
arpl
push
adc
xchg
sbb
push
cli
cmp
inc
and
jle
inc
xchg
test
cli
push
loope
lods
aaa
mov
jns
js
adc
flds
sbb
dec
jge
and
push
xchg
sti
lcall
addr16
fadds
into
inc
aaa
xchg
mov
nop
rcr
out
mov
daa
fiaddl
mov
sub
xor
in
fs
mov
jns
jmp
adc
mov
iret
dec
lods
dec
les
inc
or
mov
push
mov
or
inc
js
test
push
pop
push
jnp
cmp
and
mov
and
or
cmp
or
shlb
push
mov
imull
cltd
leave
inc
dec
sbb
insb
lahf
je
in
daa
dec
jg
mov
mov
enter
or
in
push
insl
std
notl
loopne
lahf
stc
js
mov
adc
mov
std
mov
scas
xlat
les
mov
jns
fistps
and
leave
cld
arpl
dec
mov
test
xchg
adc
cmpsl
xchg
les
dec
or
mov
cmp
mov
jnp
jp
in
aad
adc
std
inc
sub
sbb
jge
insl
sub
dec
mov
xchg
sbb
push
pusha
mov
clc
push
lock
or
iret
out
pushf
inc
push
pop
shl
xor
les
push
push
or
out
dec
fwait
cmc
pop
lods
sbb
mov
lock
aaa
or
lcall
sub
dec
push
fs
jmp
mov
std
lcall
das
jg
ja
jae
pop
cs
mov
leave
mov
add
mov
lods
xchg
negl
fucomip
sub
and
inc
cltd
mov
xchg
shrl
cmp
adc
mov
push
inc
shr
repnz
popf
sbb
movsl
push
cmp
mov
xlat
daa
sti
insl
jg
mov
cmp
or
cwtl
iret
aam
or
dec
daa
mov
and
and
ss
cmp
mov
outsb
cmp
cmp
pmuludq
and
ret
jbe
ficomps
mov
loopne
cmp
jb
imul
fcmovb
rorl
dec
mov
mov
sbb
gs
mov
inc
cmp
aas
in
jns
or
ret
clc
sub
xorb
push
shlb
add
jb
jg
js
mov
cs
into
mov
iret
lods
icebp
bound
mov
rcll
fisubrs
cmp
pop
daa
lds
cmp
int
pop
imul
jnp
push
in
inc
pop
cmp
xchg
enter
sarb
cmovge
fsubrl
mov
ffreep
jae
cmc
leave
xchg
add
xchg
dec
notl
sub
les
dec
push
lods
daa
push
mov
ret
pop
mov
mov
fdivs
cmp
ljmp
mov
xor
mov
sahf
and
std
add
pop
dec
sti
sbb
cmp
punpckhbw
xor
push
xor
push
and
int
adc
jmp
xchg
jp
mov
mov
inc
push
lret
test
stos
push
cmp
es
dec
jg
pop
daa
dec
pop
xor
or
hlt
repnz
movsb
or
sbb
loop
lds
mov
push
jns
push
imul
mov
jge
imull
mov
pop
pop
movsb
rcr
sbb
aad
inc
lods
and
mov
test
fcompl
dec
or
inc
popa
mov
js
jl
push
mov
aaa
call
mov
xor
mov
add
mov
ret
stos
push
mov
repz
das
cltd
call
aas
cmp
mov
jae
popa
addr16
add
std
icebp
fisubrl
pop
test
mov
mov
or
push
in
mov
fcoml
push
pop
push
inc
fmuls
lcall
imul
testl
ret
jecxz
sub
in
jo
lret
dec
call
push
in
push
mov
fstps
imul
mov
popa
xor
sub
push
cmp
jecxz
cwtl
jo
data16
push
les
jge
mov
dec
push
xchg
mov
cld
jl
jp
adc
cmpsb
pushf
mov
cmp
outsl
push
pop
rcrb
neg
inc
sub
test
adc
xchg
push
cli
fisubl
roll
rcrl
lds
sti
sti
jg
add
adc
hlt
push
xchg
stos
sbb
mov
adc
int3
jl
add
inc
xchg
or
lock
xchg
test
and
aas
cltd
popf
enter
ret
xor
dec
call
jp
dec
xor
mov
jb
dec
push
in
sub
xchg
fisttpll
repz
sub
inc
xor
mov
enter
mov
adc
dec
aas
dec
pushf
icebp
inc
dec
jbe
mov
sbbl
aaa
dec
adc
hlt
mov
int3
bound
xchg
cld
insb
addb
pop
les
repnz
mov
and
popf
in
pop
shl
out
push
jle
cmc
inc
push
inc
xorb
mov
outsb
sub
xlat
test
fnsave
test
mov
xchg
or
test
mov
notb
push
imull
jmp
fisttps
fldcw
imul
pop
adc
add
int3
nop
sbb
mov
arpl
cmp
aas
fldenv
fistl
add
and
nop
jle
or
jecxz
mov
sbb
clc
add
cmc
mov
sub
dec
scas
fnstsw
out
popf
jns
bound
cmp
outsb
sbb
jo
subl
les
lds
rorb
mov
loopne
mov
jmp
sub
fstpl
adc
cmpsl
pop
gs
test
cmc
mov
out
push
pop
push
fisubrl
stc
pop
sahf
mov
jmp
cmp
xchg
pop
mov
lret
dec
dec
mov
movsb
cmpsb
inc
aaa
aaa
adc
gs
mov
cmpsl
pop
cwtl
cmc
mov
lret
shlb
int3
sub
movsb
pop
fildll
out
add
testb
out
sahf
gs
out
daa
and
fnstsw
jp
out
fldenv
push
cmp
pop
add
cmp
ret
andl
in
hlt
clc
stos
mov
popa
lret
push
out
fnsave
cld
in
lods
or
mov
test
inc
test
in
fldcw
sub
lret
sub
adc
cs
mov
outsl
mov
arpl
in
push
fists
dec
inc
int3
mov
adcb
scas
out
sub
pop
inc
push
and
cmp
cli
popa
adc
fst
mov
fcompl
aad
movsl
jbe
xchg
xor
or
or
cmp
xlat
js
imull
or
scas
inc
sbb
push
inc
mov
jno
push
pop
enter
or
scas
dec
insb
xchg
aam
lret
fdivs
cltd
mov
push
outsl
enter
pop
fldl
ljmp
mov
bound
pushl
imul
push
inc
pop
gs
xorb
scas
cltd
insl
repz
sbb
shrb
pop
pop
jbe
std
mov
leave
lods
ss
jnp
inc
cmp
test
ljmp
adc
inc
mov
xor
xchg
test
and
aad
dec
jnp
push
ret
push
mov
sbb
movsb
repnz
jg
aad
aad
and
pop
sbb
lahf
js
sub
cmp
ja
cmp
sbb
xchg
or
fs
pop
ss
es
sbb
fistl
sbb
jae
pop
mov
and
sub
xchg
add
test
jae
test
mov
imul
cld
jecxz
ljmp
add
cmc
jns
rcll
rorl
adc
xchg
scas
jbe
push
mov
or
cmp
add
jle
mov
jp
add
pop
rorb
mov
notl
push
es
out
add
add
gs
ds
ret
and
les
mov
jp
test
outsl
rol
sbb
sarl
outsb
dec
enter
mov
xor
pop
iret
sub
fucom
pushl
insl
adc
mov
cwtl
iret
movsb
cltd
push
incb
jns
loope
daa
cmc
push
shll
mov
icebp
test
xor
sub
std
mov
je
xchg
jno
fbstp
aam
imul
movsl
adc
daa
jg
out
fistl
adc
mov
mov
mov
xchg
lods
movsl
out
jne
scas
fcmovnb
repnz
dec
xchg
mov
inc
loopne
insl
add
mov
bnd
cli
jge
pusha
mov
ss
popl
push
lret
xchg
test
mov
cmp
sbb
stos
push
movsb
or
mov
scas
dec
jmp
pop
insb
insl
inc
test
adc
mov
loopne
xchg
push
fstl
add
jge
sbb
sbb
pop
aam
dec
dec
mov
or
inc
pop
and
jne
lahf
fsubrl
test
mov
enter
aas
test
sub
pop
cltd
mov
scas
arpl
sub
jns
lods
jge
int
mov
mov
cld
and
push
bound
scas
inc
ret
and
or
imul
imul
insb
jbe
aam
je
fnstcw
push
mov
pushf
sbb
pushf
dec
outsb
inc
lret
jmp
xchg
sbb
cmp
jae
xor
jne
fstpl
inc
push
or
pushf
aad
inc
sbb
clc
enter
adc
lret
add
push
mov
sbb
sub
inc
pop
mov
rcll
pop
xchg
and
scas
stos
dec
std
jp
push
lock
fsubl
out
lods
test
nop
inc
ljmp
testl
sub
xor
inc
subl
and
pushf
cmp
lods
push
mov
data16
jnp
xor
call
xlat
sub
sub
xor
in
lret
addr16
into
and
mov
fcoml
mov
rorb
lcall
clc
cmc
pop
lods
mov
dec
enter
lds
dec
dec
jbe
jne
outsl
ljmp
popl
cmp
cld
push
shlb
gs
pop
shl
sbb
idiv
stos
lea
push
int
add
pop
fistl
iret
out
movl
xchg
cmc
sbb
daa
push
lds
jge
stc
jl
cmp
and
xor
mov
data16
lock
dec
fstpt
cmp
cli
mov
mov
dec
enter
xlat
add
loopne
iret
clc
cmp
mov
shll
insl
fs
popf
aam
add
cmpsl
xchg
ds
test
test
sbbl
sbb
mov
push
inc
xor
lret
add
xor
les
mov
ds
pop
adc
adc
dec
mov
fmull
and
mov
loop
out
adc
mov
push
pop
jg
xchg
in
sub
movl
dec
add
pop
dec
in
in
xor
test
not
sbb
cmp
out
das
cmpsl
fbld
iret
xchg
sub
mov
lock
xchg
adcl
mov
dec
std
or
inc
stos
dec
mov
icebp
mov
pushl
popf
xchg
mov
dec
pop
push
inc
jno
sub
push
inc
push
lret
push
sbb
call
test
pop
in
and
dec
bnd
loop
lret
push
and
frstor
ror
push
push
sub
dec
fisttpl
nop
or
xor
je,pn
mov
sub
imul
std
arpl
inc
cs
aad
cmc
lcall
add
fisubs
mov
daa
lods
mov
dec
mov
arpl
jecxz
pop
push
add
out
stc
cmpsb
mov
adc
lock
or
rcrb
jl
out
testl
in
mov
das
adc
sbb
push
dec
or
leave
hlt
rcrb
pop
ret
sub
xchg
xchg
sti
mov
xchg
jns
mov
adc
jl
test
dec
movsb
loope
pop
inc
inc
incl
das
push
scas
addb
xchg
fisttps
mov
jp
iret
sbb
jmp
xchg
andb
xorl
aad
xor
add
push
or
jmp
jge
jmp
push
cmp
into
mov
movsl
mov
inc
dec
sbb
lock
pop
fcomi
lret
pop
imul
cwtl
icebp
in
lock
inc
push
pop
jge
out
sub
push
xor
mov
addr16
xchg
fistpll
inc
pop
cld
adc
mov
sub
dec
mov
dec
lods
ds
outsl
lahf
scas
fwait
cmp
mov
loope
sbbb
call
add
xchg
ss
add
sbb
xchg
lahf
mov
cltd
shrb
insb
jl
pop
lret
xor
pop
inc
shl
sbb
xor
pop
roll
in
sbb
dec
jne
push
es
pop
out
imul
cwtl
stos
and
stos
and
les
push
lcall
add
push
cs
xchg
imul
jmp
add
test
mov
mov
orl
idivb
lahf
bound
ror
xchg
add
cmp
inc
adc
das
bound
push
outsl
shrd
aaa
adc
mov
push
hlt
push
hlt
push
es
inc
cmp
jae
test
and
and
adc
imul
add
dec
inc
adc
popa
cld
stc
dec
dec
jbe
inc
rcll
hlt
jle
ficompl
adc
shlb
push
jnp
outsl
movsb
mov
jge
mov
mov
mov
cmpsb
mov
mov
add
sub
mov
imul
or
fwait
movsl
fstpl
leave
icebp
pop
std
adc
mov
xchg
dec
sbb
and
lret
xchg
sbb
rcll
push
sbb
or
sub
mov
cltd
fiaddl
or
mov
les
clc
lahf
jmp
or
into
sbb
in
stos
lret
jmp
jnp
adc
adc
fidivrl
mov
cs
mov
sarl
or
cmpsb
xchg
repz
or
push
pop
imul
dec
movsb
insl
jne
int
call
sub
fmulp
fsubrp
inc
xchg
pop
lds
mov
inc
pushf
movsl
fwait
lret
cltd
rolb
cmp
add
addb
and
pop
int3
push
mov
xor
mov
sbb
mov
cli
jmp
sub
sar
aaa
add
pop
mov
xor
sbb
dec
rcr
jb,pn
fcoms
divb
lret
inc
sti
adc
pop
mov
push
jne
push
test
xchg
xchg
or
xlat
mov
push
xchg
cmpsl
jecxz
adc
ljmp
das
test
test
sub
sbb
lods
mov
add
dec
push
xchg
leave
xor
insl
xchg
jne
push
cmpsb
push
xor
fs
roll
and
subb
xchg
sbb
sub
std
fsubs
xlat
test
call
inc
ja
push
stos
out
sub
sbb
push
xchg
int
sarb
movsb
test
inc
jb
cmpsl
in
lahf
insb
dec
add
push
push
dec
stos
add
out
sbb
insb
pop
pop
test
lods
pop
ja
aas
aaa
xlat
or
cmp
aas
ljmp
add
ljmp
lea
dec
clc
arpl
mov
mov
pop
out
movsl
or
cmp
push
repnz
jbe
inc
pusha
add
push
mov
sbb
scas
mov
adc
pop
pop
and
leave
mov
mov
ret
adc
jno
xchg
push
or
insb
xchg
push
mov
xor
jns
mov
push
cmpsl
test
int3
cltd
sbb
mov
arpl
add
shl
inc
pop
ss
ds
add
cmp
jno
arpl
scas
sub
sar
je
cld
mov
push
jns
pop
ret
adc
into
and
inc
fchs
cmp
sub
sbb
xchg
lret
insl
mov
fimull
les
sbb
xor
ret
dec
sub
vaddpd
cmpsl
jno
pop
mov
push
mov
loop
subb
mov
xor
pop
push
xor
popf
jg
jae
lods
nop
sub
test
in
iret
fnclex
out
loop
imul
cmp
lock
pop
cmp
jne
fcompp
cmpsl
jp
stos
inc
mulb
sbb
arpl
aaa
cmp
adc
sbb
mov
sub
iret
lret
movl
int3
cmpsb
or
sbb
rcrb
insb
addl
inc
xor
and
adc
sahf
pop
pop
cmp
out
push
daa
pop
dec
aam
iret
aad
mov
test
rclb
or
jae
ret
enter
addr16
mov
psubq
out
cmpb
xlat
push
in
or
lret
incl
or
mov
outsl
adc
dec
cmpsb
pop
add
loopne
sub
pusha
outsl
test
adc
pop
lock
in
adcb
ljmp
xchg
lcall
adc
mov
push
rep
xchg
rol
pop
dec
push
xor
lods
dec
aam
in
push
sub
cld
push
push
ret
push
outsl
mov
sub
cmpsb
xchg
andl
xor
fcomps
mov
dec
xor
cmp
jne
movsl
test
xchg
add
ss
lods
pop
pop
addr16
rolb
fsubr
test
lcall
in
or
aas
mov
fwait
push
aas
mov
dec
outsb
jnp
mov
ret
adcl
sub
cmpsb
adcb
lcall
pop
sub
push
int3
js
mov
lret
or
add
lea
js
mov
adc
std
xor
inc
pop
push
lret
ds
icebp
arpl
in
or
xor
fwait
cmpsb
mull
xlat
adc
movl
push
stos
jmp
cmp
inc
cmp
test
pop
popa
daa
lea
sub
cmp
jg
xchg
icebp
push
das
inc
pop
jb
sbb
aam
dec
repz
cmpsb
cltd
decb
adcl
jecxz
sti
mov
dec
inc
shl
xor
ja
fstpl
mov
sbb
pop
dec
lret
and
je
cmp
or
adc
data16
mov
stos
lds
pop
push
mov
xchg
dec
in
scas
orb
shr
popa
push
mov
loopne
stos
lods
sti
test
ljmp
scas
addl
mov
fstl
inc
push
shrl
add
cmp
mov
or
push
mov
cmp
xchg
jmp
jecxz
call
jae
das
xor
ljmp
mov
inc
cmp
xlat
stc
inc
sub
dec
jge
or
sti
shl
adc
rorb
std
in
int
mov
mov
mov
lahf
cld
or
pop
add
mov
push
lcall
outsl
test
sub
das
insb
inc
inc
mov
jae
mov
jl
add
pop
cmp
push
lcall
int
inc
pop
push
loop
int
adc
cld
xchg
inc
mov
cmp
pop
sub
dec
add
dec
jns
rolb
or
and
sti
pop
xchg
adc
or
pop
push
call
sub
scas
nop
xor
or
cs
imul
ficomps
xor
add
cld
pop
push
lret
sub
push
outsl
icebp
cli
stc
jmp
jmp
jg
mov
or
sbbl
cmp
adc
inc
sub
xchg
gs
iret
xchg
push
pop
mov
repz
scas
in
cld
xor
js
imul
stos
add
in
dec
sahf
and
dec
xor
daa
jnp
cmp
xchg
jle
sti
loopne
stos
cmpsb
and
push
rorl
repnz
add
sub
add
ret
push
and
ret
inc
jg
je
jge
mov
and
repz
jl
filds
daa
leave
hlt
sub
stos
addl
fsubs
daa
jno
sbb
addl
lcall
into
jns
daa
sbb
pop
mov
movsb
pop
call
adc
and
aam
ret
adc
jns
mov
mov
mov
xchg
dec
gs
lea
andl
sbb
rcll
mov
jns
outsl
push
repz
mov
sbb
mov
adc
ljmp
in
jmp
cltd
test
mov
push
scas
mov
and
div
cmpsl
cmc
xor
iret
aas
into
sarl
and
sti
jb
aam
xchg
mov
cmp
int3
sub
inc
mov
cmp
mov
adc
loope
xchg
inc
fistpl
sti
jae
pop
mov
push
jns
cmpsl
cmp
jg
sub
mov
orl
adc
icebp
or
out
cwtl
jnp
out
das
fldt
add
push
push
jns
or
bound
jmp
mov
adc
loopne
nop
ljmp
xor
push
mov
test
jecxz,pn
xor
pop
or
les
call
mov
dec
adc
std
xchg
xchg
or
jbe
dec
repz
add
pop
enter
cmp
cmp
push
xor
and
inc
iret
mov
fs
call
mov
pop
push
sbb
shrl
dec
mov
xor
repnz
sbb
adc
mov
pop
clc
test
inc
adc
jecxz
scas
call
mov
xchg
orb
nop
mov
out
add
insb
push
mov
mov
and
cmp
jno
stos
loop,pn
fildll
adc
ret
cld
rcr
lret
pop
push
cmp
push
lcall
push
or
inc
cmp
sub
insb
jge
lds
insl
pop
iret
outsl
fisubrl
push
repnz
mov
and
scas
rcrb
dec
mov
leave
mov
or
push
jmp
lcall
adc
lea
int3
push
mov
push
dec
and
lret
leave
roll
cmovle
pop
in
push
mov
mov
jecxz
add
aad
and
fwait
push
and
jb
cmp
mov
out
int
push
scas
sbb
ds
mov
int3
rolb
cltd
rcl
cli
out
in
jecxz
js
scas
in
leave
sbb
imul
mov
push
andl
pop
popf
andb
add
mov
add
addr16
icebp
and
cmpsb
jns
sti
jmp
hlt
repz
adc
mov
dec
push
mov
lea
fistps
xor
jmp
inc
xor
sub
add
cltd
das
xor
cwtl
and
sbb
test
test
out
xlat
adc
int3
ds
fidivrl
pop
cltd
stos
mov
nop
leave
xchg
jp
xchg
push
pop
hlt
aas
mov
sahf
cli
jne
cmp
dec
bound
pop
xchg
or
int
out
jmp
mov
mov
sub
in
sahf
cli
or
pop
add
scas
cmp
leave
or
lock
sbb
ret
mov
xchg
add
rorl
out
movsl
adc
je
adc
jecxz
lock
fldl
dec
stos
dec
xor
test
jns
cltd
std
ja
rep
xchg
mov
aam
pushf
idivl
test
cmpsb
jle
sbb
std
aas
pop
inc
loope
iret
push
sti
test
punpcklbw
cmc
xor
pop
gs
push
dec
not
inc
sub
jo
mov
inc
inc
dec
xchg
fnstsw
mov
out
mull
daa
inc
push
adc
push
sarl
insb
mov
add
out
mov
inc
mov
imull
stos
xchg
rorb
mov
add
mov
sub
sub
cld
pushf
jbe
mov
xchg
pop
imul
sub
push
mov
clc
subb
xchg
js
rcl
aam
js
dec
outsb
sahf
add
pop
xor
xor
data16
jl
daa
cmpsl
jo
and
pusha
xchg
inc
out
dec
mov
sub
stos
jb
in
cmc
dec
popf
cli
stc
mov
lcall
sbb
mov
imul
notb
jo
jge
xor
lret
addr16
mov
ret
loop
or
repz
es
or
push
shrl
es
stc
out
ljmp
mov
fimuls
add
cmpsb
out
pop
xchg
push
insl
sbb
sub
movb
das
sti
cmp
es
clc
inc
jl
loope
push
icebp
loop
jge
jne
insb
dec
das
repz
adc
cmp
leave
and
dec
xchg
addl
push
jp
or
mov
mov
inc
gs
sbb
out
jmp
adc
scas
mov
js
fadd
cmp
and
es
cmpsb
and
or
pop
xchg
int
iret
cld
push
pop
xchg
inc
sub
mov
aad
dec
sti
pop
outsb
adc
ret
pop
sbb
in
int3
movsl
mov
sbbb
jmp
cld
inc
gs
mov
jl
pop
jno
lret
mov
push
in
jecxz
lret
les
or
xchg
dec
mov
shll
dec
xor
int
loopew
cmp
xchg
in
pop
fldl
test
mov
outsb
lea
mov
pop
xchg
fisttps
lcall
cld
mov
cmc
cwtl
inc
jno
xchg
je
lret
pop
mov
out
push
push
mov
mull
aaa
mov
push
push
rcr
cmp
shr
and
call
pop
mov
in
into
cltd
into
int
and
sbb
pcmpgtb
dec
sub
add
jae
jno
sbb
out
cmp
lods
jo
out
adc
pushl
idivl
mov
xor
int3
cwtl
sub
out
icebp
mov
push
fdivs
cmp
push
fmull
movsl
icebp
cmp
jno
pop
call
dec
shlb
aaa
adc
sub
sbbb
jbe
and
insl
xchg
xchg
lcall
je
outsb
leave
jbe
outsb
mov
jle
pusha
mov
popf
jge
test
xor
out
les
ret
cmp
je
bound
int
push
enter
push
adc
int3
into
mov
js
cmp
lods
jp
scas
jae
push
fisubrs
push
imul
mov
clc
inc
jno
repnz
mov
es
mov
xor
cwtl
mov
inc
mov
ret
sub
leave
pop
pop
nop
mov
lahf
xchg
or
xchg
cmp
cwtl
mov
inc
pop
xor
mov
jne
in
cld
mov
int
lret
mov
mov
add
sbb
orb
icebp
adcl
jp
and
pop
aas
mov
pop
push
leave
movb
jnp
cmp
into
je
out
xchg
fs
adc
and
lret
cwtl
lock
int3
dec
push
inc
mov
push
cmp
jmp
lret
dec
les
subb
mov
mov
pushf
push
fwait
xlat
cltd
shlb
xor
or
mov
or
rcl
add
hlt
out
fidivl
jno
daa
jns
lret
sub
fnsave
jl
mov
and
lods
jp
jae
ds
ss
lcall
insb
pop
inc
pusha
sarb
push
pop
mov
and
scas
movsb
fcmovb
inc
aaa
out
and
push
rorb
icebp
dec
cli
js
fisubrl
mov
test
xlat
inc
jae
xchg
fs
adc
in
int
scas
pop
mov
test
sub
or
lods
pop
stos
dec
aam
rclb
movsb
inc
mov
mov
ljmp
hlt
add
aaa
and
xor
mov
mov
sub
xchg
sub
jns
fucomi
jns
ds
pop
xchg
inc
mov
push
jo
std
and
mov
stos
and
test
pushf
out
dec
pop
jno
pushf
sub
ja
mov
insl
mov
inc
mov
ja
andb
or
cmpsl
inc
cmpsl
aam
andl
push
lahf
adc
or
imul
push
add
mov
xchg
xor
dec
fnstcw
mov
adc
mov
in
mov
fildl
mov
xchg
mov
inc
js
mov
nop
pop
adc
fs
sub
loop
aam
dec
sub
mov
mov
jo
add
testb
mov
jl
jle
push
rorl
lcall
jns
jbe
movsb
push
mov
popf
push
cmp
push
sub
jecxz
repnz
mov
sti
mov
in
push
dec
test
xchg
ljmp
movsb
test
xor
testb
cmp
gs
push
daa
mov
enter
fsubrs
mov
fildll
jb
js
cwtl
xor
pop
punpckhwd
test
aad
inc
loopne
mov
xchg
hlt
cli
dec
fstl
or
outsb
dec
outsl
in
or
xchg
inc
es
loopne
iret
adc
jg
mov
negb
out
push
jl
lcall
sarl
pop
cmp
mov
cmp
int3
imul
jp
xchg
or
cwtl
hlt
jae
mov
iret
cli
pop
in
into
mov
scas
lret
mov
cmp
jne
mov
push
daa
cmp
xchg
icebp
inc
push
movsl
cli
sbb
dec
sti
mov
popf
int3
fistps
insb
dec
cld
sbb
mov
mov
es
jbe
cmp
cmp
and
jnp
xor
push
faddl
inc
pushf
out
jecxz
mov
fdivr
loop
add
push
jo
addl
inc
dec
imul
lea
sbb
cmova
inc
mov
int3
das
repz
lock
cld
aas
and
lds
out
incl
and
nop
fs
test
cwtl
gs
mov
inc
add
mov
lcall
in
sub
rclb
cmp
in
lret
dec
mov
and
inc
inc
bound
sbb
jmp
xchg
xchg
xlat
ror
add
add
or
jp
sbb
and
in
add
xchg
dec
loopne
mov
orl
mov
mov
jno
lds
fadd
js
insl
jo
add
repz
call
add
daa
mov
les
jp
dec
adc
nop
pmullw
mov
out
ret
pop
pushf
inc
cmc
jb
inc
sbb
lea
out
push
aaa
mov
add
and
bound
lahf
ds
add
dec
jne
data16
into
cwtl
mov
test
out
out
mov
push
sub
xchg
nop
and
or
std
fnstsw
cmp
outsl
and
loop
insl
sahf
inc
xor
out
pushf
add
cmp
fwait
adc
pop
mov
xor
test
repnz
orb
aas
ds
or
lcall
pop
mov
mov
pop
aaa
popa
add
push
mov
mov
cwtl
jno
movsl
cs
popf
mov
add
test
inc
xchg
jl
in
dec
sub
notb
push
adc
aas
cmp
rep
dec
int
test
imul
lret
cmp
imul
xchg
lods
fcomip
pop
scas
cs
addl
cmpsb
out
aad
mov
pop
shlb
push
fs
mov
sbb
add
mov
dec
aas
out
jl
xchg
xchg
shlb
push
jnp
daa
mov
cmpsl
cld
pop
dec
call
cs
jbe
bound
push
test
pop
push
stos
add
into
je
shll
aaa
mov
jl
das
xchg
jns
xchg
xchg
fwait
mov
test
daa
xorl
jns
mov
inc
mov
pop
xor
jno
in
mov
jns
cmp
pop
dec
imul
mov
imul
addr16
fildll
pop
and
clc
decb
lds
lcall
mov
jecxz
add
add
push
inc
test
test
jo
test
aas
das
sbb
sub
mov
dec
xchg
jno
test
fsubrl
pop
popa
repz
cmpl
xchg
add
sbb
leave
mov
jno
pop
mov
and
sub
push
or
ja
stos
cli
pop
sub
aad
fdivs
loop
test
enter
mov
popa
cwtl
mov
cmp
mov
negb
pop
add
mov
cld
pop
in
popa
inc
loop
fbstp
pop
inc
fnstcw
mov
pushf
pop
jnp
lret
xor
dec
stos
icebp
sahf
fistps
dec
jecxz
dec
adcl
popa
hlt
xchg
leave
xor
or
push
rorb
adc
test
jns
inc
or
shlb
mov
dec
mov
mov
test
loope
adc
or
in
pop
sbb
sub
outsl
sub
pop
pop
std
inc
popa
sahf
adc
xor
pop
jbe
es
test
ds
cmpsb
arpl
gs
jns
mov
mov
lods
mov
daa
mov
and
jo
dec
stos
icebp
add
or
jbe
cmpsl
jmp
push
scas
mov
jbe
pop
into
stc
jle
data16
fistpll
mov
mov
pop
xchg
popa
add
xchg
ret
mov
xor
and
sub
sti
mov
call
in
ds
fidivrs
dec
pop
aam
fdivs
xor
mov
add
mov
inc
in
setge
je
inc
je
cmpsb
std
adc
cmp
and
mov
inc
xchg
inc
add
sbb
cmp
repnz
stos
clc
mov
jp
push
xor
mov
adc
push
xchg
xlat
push
jae
pop
push
mov
data16
mov
pop
clc
pop
in
jge
mov
dec
dec
or
xchg
sbb
shll
adc
aad
mov
mov
aaa
pop
mov
mov
dec
add
mov
fldt
dec
dec
lcall
sub
gs
icebp
fildl
jmp
enter
push
inc
cwtl
inc
imul
inc
push
shll
mov
aas
cltd
into
xchg
xor
sar
jecxz
mov
or
ds
aas
fsts
jmp
fcmovu
xchg
jmp
ja
aam
pusha
jne
jmp
mov
adc
out
sub
das
fs
xor
and
pusha
icebp
sub
pop
rclb
and
lahf
lea
inc
or
xchg
cmp
push
cmc
inc
aam
push
dec
inc
rolb
int3
cli
dec
repz
das
mov
push
lahf
inc
lds
mov
leave
xchg
lods
add
mov
mov
mov
adc
jle
mov
iret
aam
pop
xlat
testl
shl
gs
push
mov
mov
pop
sub
cmp
out
cmp
loopne
shl
jl
pushf
ljmp
xchg
mov
psubq
subb
aas
mov
jnp
mov
mov
pop
sub
outsb
mov
ret
jmp
fwait
imul
and
push
stos
xchg
rclb
popa
xchg
icebp
mov
iret
or
adcl
sti
or
inc
cmp
inc
ret
jno
jno
or
sbb
sbb
sbb
pop
mov
dec
pusha
jnp
dec
mov
cmp
cs
orb
cmp
adc
es
cmp
jno
shl
mov
adc
add
pop
std
jge
ja
lret
movsb
adc
movl
in
fldl
das
jmp
jo
shr
aam
push
mov
push
outsb
adc
mov
adc
or
data16
mov
xchg
jle
jp
ficoms
cld
add
aad
mov
adcb
fsub
in
inc
imul
lret
lret
xor
enter
fstpt
aam
call
shlb
enter
in
insb
jnp
lock
test
and
js
inc
aam
repz
jo
movq
cmc
inc
pushf
out
popa
inc
mov
insb
xchg
lock
jge
mov
test
push
add
testl
inc
add
jo
movl
popf
enter
xchg
idiv
adc
lods
cmp
scas
in
and
mov
sbb
imul
lods
xlat
sahf
aaa
jmp
push
in
jns
popf
push
stos
stos
shlb
daa
divl
lret
add
push
mov
leave
fldl
jns
and
cltd
jne
shlb
xchg
add
rorl
loop
lret
inc
ficomps
cmpsl
mov
nop
pop
xchg
testl
pusha
stc
mov
sub
scas
imul
ja
insb
test
mov
xchg
movl
loopne
js
mov
dec
arpl
fdivs
push
sub
mov
mov
inc
je
repz
pop
push
dec
or
out
jge
ds
in
jae
dec
shlb
sub
push
mov
push
lea
sti
sbb
cmpl
sub
imul
mov
inc
test
insb
decb
fsubp
lods
xchg
aaa
pop
es
pop
jle
add
leave
mov
rol
test
and
add
outsb
inc
outsl
js
sbb
pop
dec
loop
bound
repz
and
push
inc
add
ficoms
idivl
test
pop
jo
mov
inc
fldt
mov
int3
jns
arpl
xlat
adc
add
push
rolb
or
mov
cli
mov
bound
sub
aaa
data16
or
out
loopne
data16
cmpb
jno
jnp
sub
cs
xor
cmp
std
add
mov
cmp
xchg
mov
pop
imul
mov
out
and
xor
xchg
mov
out
aad
or
jge
cmp
int3
jne
push
repz
inc
sub
sub
enter
sbb
cmpsb
aad
testl
cmpsb
int
mov
pop
pop
inc
sbb
jl
xchg
jp
sbb
or
mov
push
adc
jo
rorl
fcompl
add
mov
dec
mov
dec
mov
mov
mov
arpl
cmp
jmp
sub
fisubrs
push
or
push
pop
xchg
cmc
jmp
jno
pop
jle
sbb
push
data16
cmp
negb
dec
in
pusha
xorb
inc
fldcw
jo
adc
repnz
mov
cmp
fwait
or
bound
idivl
je
int
xchg
gs
cmpl
push
cltd
es
sub
sbb
dec
mov
mov
ja
or
xor
jp
inc
repnz
shll
inc
dec
pop
push
ljmp
negb
call
cmpsl
push
stos
dec
add
mov
adc
cmp
enter
repnz
xchg
nop
stos
outsl
xchg
xchg
addb
push
in
jae
std
mov
push
in
lods
mov
adc
imul
dec
xor
enter
notb
add
pop
aam
xor
aaa
add
xchg
daa
loopne
in
mov
out
call
push
lea
mov
dec
push
test
mull
xchg
xchg
sub
push
inc
xor
js
inc
popa
dec
mov
and
cmpsb
shr
adc
shll
sub
lret
lods
xchg
enter
inc
jae
int3
rorb
sbb
push
fdiv
mov
loope
or
dec
jno
and
ss
les
sti
add
ficoms
mov
clc
je
out
cmpsb
in
lods
jno
dec
out
xchg
cmpsb
jp
std
adc
lods
loop
adc
loopne
lds
and
jno
outsl
push
xor
stos
xor
add
jge
flds
xchg
int
fs
test
int
xchg
xor
nop
mov
lock
fdivrs
add
les
fists
push
cmp
mov
insb
mov
addr16
and
sti
jbe
cmc
push
and
sbb
sub
xor
sbb
stc
stos
ret
mov
sub
stc
pop
shr
test
es
jns
arpl
adc
clc
sbb
cmp
lea
aas
jmp
mov
pusha
mov
dec
in
pop
loop
shll
or
cmp
fistps
xor
clc
or
fwait
in
jae
ret
add
pop
fiaddl
ret
adc
push
pop
adc
aam
sbb
insb
fidivrl
jl
inc
fldt
pop
dec
dec
xor
mov
jmp
pop
jge
jmp
ds
cmpsb
in
aaa
cmp
push
cmp
sti
adc
cmp
adc
in
fidivrs
call
dec
add
ret
test
or
movsb
xchg
xor
popf
fidivs
sub
cltd
rcrl
inc
xor
inc
lret
mov
add
pop
sbb
mov
push
cmp
shlb
addr16
aas
sbb
xor
jns
push
fistl
add
sub
mull
cmp
sbb
fs
sub
mov
xchg
add
pusha
xor
sub
lcall
push
add
jbe
mov
mov
xrelease
jns
mov
rorb
enter
mov
push
aad
mov
jne
shrl
add
mov
cltd
adc
dec
xchg
ja
decb
mov
push
out
mov
js
push
cli
lcall
loope
dec
dec
pushf
inc
xor
dec
adc
mov
out
in
mov
pop
mov
xchg
jbe
mov
xlat
imul
mov
xor
push
clc
or
adc
sub
fildl
push
cmpsb
fnstenv
push
addb
stc
jnp
or
addr16
jg
push
sbb
inc
aas
enter
enter
mov
inc
sti
in
mov
stos
es
test
sub
adcb
mov
or
mov
fistpll
lret
fwait
cmp
adc
cmp
fs
push
shll
cmpsl
cwtl
jecxz
pop
cli
into
add
mov
shr
fistl
pop
movsl
mov
jmp
and
mov
ja
nop
je
test
dec
fldt
dec
lcall
out
jns
imul
jg
mov
and
mov
inc
jnp
xor
loope
aas
xorb
dec
push
pushf
fistpll
push
add
mov
push
roll
or
ret
cmc
rclb
cmp
pop
or
fisubrs
roll
xchg
int3
daa
dec
jbe
push
icebp
and
out
stos
xchg
leave
insb
inc
or
sarb
cwtl
mov
xchg
push
inc
test
es
adc
repz
and
iret
test
insb
popa
repnz
push
jns
jno
leave
es
gs
movsb
push
or
sub
lock
cmp
mov
insb
movsl
imul
push
inc
or
repz
mov
outsb
das
addl
imul
adc
mov
push
test
xchg
loop
rep
xor
ret
cmpl
fnstenv
fimuls
and
mov
ret
out
xor
leave
or
shrb
sbb
lea
sub
dec
loop
int3
jg
sti
cmpsb
pusha
jb
xor
sub
mov
data16
popf
mov
push
dec
lods
push
mov
add
jle
jmp
or
fadds
cltd
push
push
add
cwtl
jnp
xchg
mov
inc
addr16
or
pop
mov
mov
dec
aas
pop
inc
insl
cltd
fmull
movsb
push
fucom
push
lods
pop
jecxz
lods
dec
adc
aam
out
sbb
sbb
jg
and
and
arpl
xor
push
or
dec
scas
sub
mov
add
cmp
add
aad
outsl
sbbb
pop
and
mov
loopne
push
insb
mov
pmaxsw
push
mov
inc
shrb
rcl
rcr
sahf
mov
test
outsb
jbe
or
jo
xchg
xchg
call
inc
and
mov
test
cs
bswap
out
je
and
outsl
stos
cld
fisubs
aam
mov
ds
adc
mov
inc
rorb
bound
jno
icebp
pop
mov
negb
xlat
jp
cwtl
jmp
test
js
adc
test
mov
inc
add
pop
outsb
arpl
repnz
cmc
js
xorl
jl
cld
sbb
inc
and
jecxz
pop
aad
pop
mov
gs
imull
fwait
sbb
jg
arpl
and
sbb
push
sarb
packsswb
sti
je
leave
xchg
cmp
andl
aad
jbe
mov
adc
inc
lods
pop
shr
or
cmp
push
stos
and
les
test
lea
lods
lret
aaa
ss
shrl
iret
pop
cmc
das
jo
out
push
sbb
pusha
inc
dec
pop
cmp
lahf
mov
push
incb
xlat
insb
mov
mov
mov
iret
and
mov
and
add
lds
mov
in
sbb
xor
test
sub
mov
aad
ds
push
fists
outsl
and
mov
mov
mov
sub
lcall
popa
push
mov
out
int3
mov
lock
or
xor
cmpsl
mov
mov
test
add
cltd
lods
in
or
out
int
push
jg
lods
xchg
sbb
in
enter
lret
or
sbb
cmp
fimuls
or
adc
mov
and
cmpsb
sahf
pop
mov
mov
movsb
inc
dec
mov
mov
mov
rol
insb
mov
or
je
andl
test
inc
ds
popa
rclb
add
xor
shl
js
xor
jg
xchg
or
in
or
sub
adc
add
inc
lock
or
daa
movsb
jmp
push
adcb
cmpsb
scas
testb
out
jne
pop
add
dec
sbb
mov
ret
push
lret
clc
xchg
cwtl
pop
sahf
mov
or
adc
les
push
cmc
stos
sbb
sub
adc
outsl
jl
add
aas
mov
lret
sub
mov
data16
push
data16
aas
push
clc
cmpsl
cmp
inc
bound
sbbb
out
sub
cmp
adc
jae
stos
mov
sbb
popa
imull
sub
or
xchg
jl
stos
lods
dec
adc
test
imul
sbb
mov
lods
gs
in
test
aas
dec
mov
pop
leave
xchg
inc
jo
mov
push
adc
inc
clc
cmp
cltd
jmp
or
or
repnz
test
xchg
pop
xchg
mov
out
fldt
cmp
test
lret
jnp
pop
add
adc
icebp
sbb
mov
insb
js
in
dec
xor
adc
sbb
insb
dec
and
mov
stos
lret
in
pop
cli
in
lods
or
aaa
arpl
or
pop
rorb
ficompl
cwtl
mov
hlt
mov
fistpll
cmp
push
mov
rcrb
xchg
arpl
aas
sbb
sarb
xchg
pop
pop
shll
xchg
movsb
les
jno
and
dec
and
loop
cmc
cld
testl
sub
inc
jl
lds
cmp
add
into
adcl
in
inc
mov
aaa
and
pushf
imul
gs
inc
pop
xlat
add
pop
push
movsb
inc
mov
cmp
adc
mov
arpl
and
cmpl
inc
xchg
shlb
aad
in
int
jnp
pop
jmp
mov
pop
push
jp
std
jb
clc
in
lcall
or
nop
xchg
popa
cmp
mov
add
xor
add
mov
dec
push
insl
or
into
ss
xlat
in
ret
jp
push
js
inc
cmp
lods
daa
lea
or
push
xchg
jb
cmc
pusha
mov
imul
loope
xor
mov
jge
push
imul
dec
dec
dec
daa
mov
pop
jbe
stc
icebp
adcl
add
iret
cwtl
adcb
je
cli
nop
and
sbb
and
xlat
ds
cmp
add
gs
mov
inc
jle
xchg
scas
jecxz
daa
pop
fildl
int
lods
jecxz
push
jno
sub
in
mov
outsb
push
xchg
test
std
mov
mov
xor
push
je
aaa
inc
mov
ss
fs
pop
idivl
xor
push
fiaddl
jae
pop
movsl
roll
mov
sub
inc
ja
repz
sahf
mov
jno
cmpsl
shll
out
jecxz
sub
movsb
add
inc
enter
jl
fwait
andl
jbe
dec
insb
cltd
mov
fwait
add
pusha
int3
xlat
sub
daa
stos
mov
push
jmp
or
int
or
mov
mov
insb
push
pusha
mov
imul
pop
fidivs
decb
xchg
stos
or
stos
in
jno
sti
loop
mov
mulb
in
sbb
mov
jbe
pop
xchg
add
sbb
jb
cwtl
mov
dec
cld
cmp
inc
and
mov
jns
sub
cmc
sti
mov
push
movsl
test
mov
lahf
xchg
rolb
or
imul
cmp
inc
mov
je
dec
mov
fdiv
out
mov
and
pop
aam
jmp
aad
xchg
push
inc
int3
cmp
dec
icebp
sub
push
outsl
jmp
cmc
mov
arpl
mov
aaa
cmpsb
sub
in
fdivr
loope
stos
or
mov
inc
and
push
fidivs
mul
cmp
sti
and
outsb
int
dec
and
cli
ja
mov
cmpb
adc
lahf
or
jl
insb
mov
fstps
and
les
cld
inc
divb
xchg
jge
icebp
scas
push
les
mov
out
pop
push
cmp
push
or
xchg
mov
or
mov
movsb
ljmp
data16
mov
iret
pop
inc
xchg
add
ficompl
fstps
xchg
cmp
xor
sbb
neg
mov
pop
lcall
dec
ljmp
mov
inc
pop
pop
in
jmp
mov
pop
jno
xor
push
bound
ljmp
adc
aam
xchg
adc
jl
lea
call
mov
fcomps
and
inc
cwtl
sbb
fldl
mov
dec
rclb
cs
mov
jge
std
pop
dec
stc
mov
sub
lock
xchg
xlat
shrb
jp
rolb
movsl
adc
stos
addr16
int3
push
inc
sbb
xchg
add
enter
or
mov
or
cmp
cltd
mov
js
sbb
jle
or
dec
fwait
xchg
lock
fiaddl
mov
fsubr
gs
test
inc
mov
shl
rep
sub
push
mov
mov
stos
cmp
adc
fiadds
sub
and
sbb
jno
push
mov
dec
inc
sub
xchg
outsb
push
cltd
mov
dec
int3
pop
pop
pop
mov
ss
in
mov
xchg
adc
out
popa
inc
test
mov
adcb
pop
in
mov
cwtl
inc
adc
leave
mov
cmp
add
out
mov
imulb
mov
cmovl
enter
out
add
dec
cltd
call
xor
jb
dec
movsl
loop
loope
mov
rcrl
xchg
repz
pop
adc
jp
frstor
mov
idivl
imul
xchg
pop
lcall
ljmp
sub
mov
mov
imul
sahf
dec
mov
test
push
add
stos
rclb
and
pushf
in
cwtl
shll
adc
jno
mov
xor
lret
sbb
and
ret
jnp
ja
cli
or
adc
ret
pop
aaa
insl
xchg
adc
ret
sbb
jle
cmp
or
or
or
push
bound
push
adc
mov
jg
sarl
stc
sbb
mov
repz
dec
xorl
sbb
daa
aad
pusha
push
mov
jmp
cwtl
loope
sbb
in
push
int
decl
mov
mov
xchg
xchg
xchg
adc
xchg
lods
repnz
rolb
shll
cmpb
mov
xchg
fs
fmulp
mov
stos
neg
jge
mov
xchg
jnp
add
jb
addr16
xor
dec
addr16
mov
mov
rorl
pop
sbb
std
xchg
loopne
xchg
call
mov
xchg
loop
jb
xor
push
les
inc
and
out
cmp
cld
call
leave
sbb
dec
mov
dec
cltd
sub
lods
test
out
cmp
int
idiv
int
ud1
roll
xor
pop
cmpsb
incb
push
mov
mov
roll
mov
mov
lea
cs
scas
sub
sahf
jns
shlb
jp
ds
cmpsl
int3
cmp
pusha
pop
push
jb
xor
ror
rorl
sub
repz
xor
xor
adc
dec
xchg
cltd
or
mov
xchg
rcrb
in
dec
jmp
sub
xchg
push
repnz
mov
inc
js
xchg
adc
xchg
add
adc
push
les
pushf
xor
loopne
test
and
stos
and
addr16
pop
jne
cltd
faddl
inc
or
aas
pop
pop
icebp
dec
mov
mov
push
jge
inc
aad
and
and
adc
mov
and
cmp
repz
addr16
bound
pop
call
out
sbb
repnz
inc
mov
mov
push
pop
insl
cmpsb
out
lahf
cmp
bound
pop
push
push
aad
and
out
pop
mov
andl
sub
fcoml
imulb
lds
inc
xchg
iret
pop
stc
cmc
outsb
mov
mov
repnz
and
rol
adc
insb
lea
nop
add
rcll
ret
adc
mov
loope
insb
addr16
loopne
fsubl
push
dec
mov
aaa
inc
add
adc
adc
and
sbb
sub
mov
and
xor
insb
adc
loop
mov
inc
jecxz
inc
stos
pusha
fdivl
or
mov
adc
jmp
lret
mov
subl
loopne
lods
dec
xchg
aad
dec
fwait
sbbl
cli
in
fisubs
fs
xchg
pop
or
pop
cmp
je
movsb
mov
nop
mov
clc
in
bound
in
mov
mov
sub
cwtl
mul
imul
jnp
lock
jbe
mov
cmpsb
mov
nop
mov
and
dec
cmp
add
insl
inc
mov
repz
push
addr16
fistl
mov
je
xor
repz
fbstp
frstor
js
sub
add
inc
xor
and
test
and
ror
xor
inc
pop
jae
cltd
pushf
repnz
popf
or
mov
les
outsb
fbld
mov
pop
xor
and
jno
aas
gs
add
scas
ret
cmp
push
or
lahf
dec
sbb
aad
dec
push
fisubrs
dec
iret
dec
addr16
adc
dec
mov
scas
pop
jl
pop
incl
ret
cltd
mov
stc
in
jne
cs
repnz
or
add
mov
xchg
cmp
inc
ret
rclb
lea
insl
mov
or
xlat
mov
xorl
je
mov
shl
fistpll
fstps
lods
mov
pop
scas
mov
lcall
add
jmp
and
xor
sarl
loope
mov
push
jl
cli
rolb
rclb
fisubrs
mov
lds
mov
xor
daa
fcoml
mov
adc
cli
les
xor
lret
mov
outsb
inc
popf
fistl
pop
repnz
adc
or
push
fscale
add
inc
adc
cmp
xchg
loope
cmp
sub
dec
mov
in
mov
test
test
sub
cmpsb
test
sbb
mov
sti
sub
jae
scas
js
pop
sbb
pushf
pop
clc
fucomip
pop
cmpsb
jo
fcoml
jno
inc
mov
pop
or
pop
insl
adc
lods
xor
sbb
cmpsb
push
popf
or
sub
or
sahf
sub
push
stos
lds
out
repnz
sub
mov
repz
idivl
xchg
into
lret
shlb
push
adc
or
push
dec
push
add
outsl
rclb
test
lds
xor
sub
inc
cmovl
stc
dec
dec
fs
loope
adc
loop
adc
push
dec
xor
inc
mov
and
jno
jecxz
push
outsb
inc
pusha
pop
idiv
fucomi
mov
les
jmp
imul
lret
mov
fs
mov
pop
repz
out
lahf
insl
xor
andb
cwtl
xor
xchg
push
jmp
popa
xchg
cli
fisttpl
jmp
imul
pusha
mov
mov
and
jge
push
xchg
lcall
adc
or
cltd
outsl
shlb
pushf
addr16
cmpsb
ficoms
xor
std
pop
xor
sbb
dec
adcl
fwait
xchg
lcall
hlt
push
adc
mov
mov
gs
add
cld
andl
lcall
out
fsubl
iret
out
sahf
cmp
push
mov
cmpsl
mov
push
push
dec
in
push
test
and
subb
popa
pop
and
push
lret
xor
push
lret
cli
shll
and
cmc
sub
cld
inc
and
jp
adc
test
push
mov
cmc
cmp
ljmp
daa
pop
jmp
inc
push
mov
jns
add
sub
mov
pushf
push
dec
es
and
mov
jnp
mov
stc
adc
orl
rclb
or
jns
lods
ret
and
xor
pop
or
push
cld
cmp
jnp
cmp
ret
fimuls
dec
jl
cmp
add
leave
imul
sti
ja
std
lcall
pop
xlat
pop
popa
dec
jne
sbb
xchg
xor
cltd
gs
aas
mov
inc
sub
mov
push
or
adc
punpckhwd
dec
mov
push
and
xchg
ds
arpl
test
movsb
sbb
out
repz
cli
pusha
mov
mov
cmc
lahf
xorb
cmp
fisttpl
sub
mov
jae
and
jp
sub
xor
shrb
adc
sbb
cmp
adc
aad
cltd
mov
bound
sub
lds
xor
rcr
pop
roll
dec
mov
movsb
jmp
xchg
rorl
cmp
xor
cmp
clc
test
nop
and
sbb
call
loop
inc
subl
mov
loop
gs
sbb
sbb
pop
sub
out
ja
clc
out
xchg
movb
test
inc
add
das
jno
bswap
jl
jp
pop
insb
mov
adc
std
shrl
sub
ss
jnp
mov
pop
mov
mov
mull
mov
xchg
cmp
add
inc
fsub
and
xchg
and
leave
push
push
mov
push
add
mov
mov
xchg
rclb
xchg
pushf
and
push
push
insl
sub
aad
dec
addl
hlt
cltd
enter
fsubrp
xchg
mov
mov
mov
xchg
cmp
scas
dec
cld
fidivs
cmp
mov
xchg
sub
cwtl
and
in
fsubs
sti
pop
lret
cmp
push
clc
mov
dec
in
jle
adc
rclb
push
loope
xor
aam
push
mov
and
scas
popa
mov
and
loop
and
sbb
add
movsb
je
test
dec
popf
and
jb
loopne
and
data16
in
out
aad
inc
inc
fsubrl
dec
mov
xchg
xor
movzwl
out
std
hlt
pop
gs
dec
xor
xchg
into
lahf
push
data16
add
arpl
nop
nop
mov
vunpcklpd
movsl
adc
push
in
cmp
sbb
jnp
js
push
mov
inc
jmp
popa
mov
jns
jge
scas
xor
inc
dec
add
scas
xchg
xor
test
add
add
sarb
hlt
pop
and
popl
iret
or
jle
mov
xchg
lock
sbb
adc
in
mov
dec
inc
fldenv
sub
and
fiadds
pop
mov
cmp
pop
xchg
stc
sahf
and
push
mov
shll
imul
loopne
jmp
jl
jnp
gs
adc
adc
movb
mov
or
outsl
insb
hlt
in
push
xchg
out
cmpsb
lods
popf
pop
mov
cmc
xchg
in
es
call
sub
in
pushf
popa
fs
adc
jae
xor
jge
lods
imul
pop
rcr
int
data16
ds
pop
inc
sub
hlt
pop
mov
stos
sub
inc
mov
pop
sub
pop
mov
jb
fwait
or
out
dec
cmc
push
push
xor
orl
xchg
aam
ss
and
or
int
or
and
pop
jae
dec
push
mov
or
aaa
xor
insl
xor
insl
push
inc
adc
push
dec
xor
dec
xchg
mov
mov
das
add
or
movsb
mov
mov
adc
and
es
bound
popa
jle
jae
insl
and
mov
pop
mov
cmp
bound
mov
mov
lret
nop
bswap
mov
inc
std
insb
cmp
cli
pop
xlat
push
pop
cmp
int
push
sarl
xchg
imul
push
mov
xchg
push
imulb
inc
test
cmpsb
test
xchg
ss
jecxz
adc
xchg
popa
xor
movsl
inc
or
into
lret
sbb
push
in
cmp
inc
inc
ds
and
xorl
push
add
fldcw
test
mov
orl
cmp
mov
mov
cltd
dec
inc
inc
or
jmp
and
mov
push
ds
mul
imul
and
adc
xchg
aaa
mov
or
shr
fst
or
lret
jae
lock
or
mov
iret
cmpsb
pop
mov
insl
js
ss
mov
xchg
jb
imul
rcl
dec
mov
les
insl
add
or
scas
addr16
add
cmpsb
outsl
pop
pop
sub
push
jg
push
mov
mov
loope
or
mov
fildl
shll
dec
loope
in
ss
fisttpl
or
fwait
push
push
insl
out
bound
das
sbb
mov
lock
adc
or
loopne
dec
loop
movsb
rol
pusha
add
loopne
out
sar
divl
mov
push
mov
mov
sub
pusha
sbb
roll
jmp
mov
sbb
sahf
arpl
jae
dec
sbb
xor
xchg
xor
or
ds
sbb
push
mov
mov
ficoms
lock
ja
je
arpl
fwait
inc
movsb
call
fdivrl
mov
or
xor
inc
pushl
xchg
mov
xor
pop
jl,pt
sbb
cmp
frstor
or
cs
jle
cmpsl
xchg
imul
repnz
inc
ret
pop
dec
mov
test
push
sahf
arpl
rorl
adc
xlat
fnstenv
push
push
shrl
popf
dec
sbb
insb
int
xchg
ret
xor
xor
sub
xlat
negl
inc
mov
cli
or
das
cmp
pop
test
icebp
pusha
xchg
mov
roll
ret
jo
xor
leave
and
mov
enter
and
xor
hlt
lds
lcall
xchg
push
pushl
jl
jmp
cmp
jbe
mov
cmpsb
loope
or
lods
cld
jecxz
jmp
mov
mov
sti
rcrb
int3
mov
mov
loop
xor
lds
add
push
or
in
rcl
addr16
xchg
call
jns
or
add
fcom
inc
insl
mov
adc
adc
adc
push
jge
inc
sahf
int3
adc
out
jp
xor
repz
stos
je
mull
std
mov
xor
movsl
or
xchg
pushf
push
xchg
pop
sbb
pop
scas
in
pop
out
mov
fdiv
movsl
and
js
push
xchg
and
inc
loopne
xchg
jnp
pusha
test
outsl
cwtl
add
test
xor
call
das
inc
cmpsb
xchg
test
imul
shr
pop
insl
dec
ss
inc
shll
sbb
add
mov
xchg
xchg
sbb
mov
xchg
add
adc
or
sub
lret
dec
and
out
call
flds
mov
loop
rol
into
cltd
or
xchg
sub
jns
daa
pushf
cltd
jl
or
inc
mov
add
cmpsb
pop
push
aaa
push
call
mov
mov
leave
mov
jno
add
aaa
ss
mov
shrb
decl
dec
mov
mov
push
xchg
shll
lahf
jnp
cmp
lods
cwtl
push
test
push
xor
push
mov
loopne
inc
xchg
out
sub
dec
cmp
mov
loop
fisubrl
mov
shlb
pop
rol
pop
scas
mov
daa
out
std
lcall
mov
aad
stc
adc
jne
mov
ss
xor
pop
sbb
add
aaa
sub
or
sbb
jecxz
mov
inc
clc
mov
pop
out
adc
out
inc
stc
ljmp
xchg
mov
cli
xor
enter
dec
jo
mov
aas
dec
xchg
inc
lret
sti
lods
insb
xchg
pop
sub
or
lds
sub
std
add
push
mov
rcll
rol
sbb
repz
daa
jne
mov
push
sbb
or
popf
insl
divl
mov
cmc
inc
mov
pusha
rcrb
jnp
mov
cmp
mov
mov
or
sub
and
pop
mov
sbb
cwtl
cmp
jns
pop
mov
ds
imul
and
dec
mov
mov
inc
xlat
bnd
ljmp
push
jg
icebp
fimull
int
dec
mov
jecxz
dec
add
xor
sub
shlb
ret
aad
mov
push
cmp
scas
stos
test
arpl
in
sbb
in
test
mov
sub
movsl
cwtl
sub
daa
inc
test
and
outsl
lods
ja
mov
mov
repnz
adcl
insl
mov
stos
loopne
icebp
lahf
sub
adc
xor
push
pop
shrl
lods
mov
data16
mov
fmull
lea
ljmp
ljmp
mov
inc
mov
in
jbe
pushf
jo
mov
or
hlt
sub
hlt
mov
cltd
or
jge
pop
mov
pop
or
std
cmc
cs
xchg
sub
mov
sahf
cmp
jo
clc
out
cmc
cmc
inc
jnp
mov
push
mov
sub
xchg
or
in
pop
push
pop
cwtl
popa
insb
imul
pop
loopne
and
mov
jp
or
outsl
xchg
xchg
test
lods
nop
push
xchg
push
in
roll
xor
cs
mov
sub
add
pop
adc
mov
int
clc
es
sbb
popf
lea
pop
or
mov
push
jmp
imul
fstps
jb
scas
es
outsb
dec
jp
arpl
ret
mov
inc
sbb
sbb
add
testb
mov
mov
insl
loope
cwtl
cmp
call
outsl
aad
mov
cmp
jo
sub
xlat
adc
cmp
fwait
inc
inc
mov
pop
scas
adc
imul
shlb
in
adc
sub
sbb
add
rcrb
pop
cwtl
outsb
inc
out
lret
les
push
lret
push
jbe
jbe
int3
scas
inc
push
lret
and
dec
rcrb
push
in
inc
xor
sub
inc
xchg
add
mov
mov
dec
cmp
sbb
mov
lods
pusha
incl
xchg
adc
popa
cs
iret
in
testb
repnz
jg
inc
mov
movsl
cmp
xor
shl
dec
fildl
xlat
test
jg
xchg
inc
xchg
pop
popa
cmpsl
insb
loope
pushf
test
sub
mov
insl
cmpl
bound
ret
inc
popa
push
aam
imul
or
sub
aas
pop
push
cmc
xchg
pop
aad
mov
cmpsb
ret
inc
mov
mov
pushf
xchg
adc
xchg
aad
adc
decb
mov
std
sbbb
push
popl
scas
lods
pop
pop
loop
jecxz
xor
lods
cmp
inc
dec
in
add
add
xchg
sahf
enter
mov
mov
sub
xchg
into
jb
mov
push
stc
jae
cmp
in
xchg
ret
jb
and
loope
imul
cs
dec
or
mov
push
sub
ror
add
scas
leave
jno
mov
repnz
sub
push
push
mov
sbb
or
mov
mov
add
lds
push
rcrb
mov
lods
cmp
fsub
inc
and
sub
jb
fildll
xchg
mov
add
mov
or
insl
sub
fwait
mov
ja
dec
in
pop
and
ret
clc
aad
cli
jmp
rcl
cli
mov
clc
mov
inc
stc
fs
sub
and
addr16
dec
stc
push
jg
out
stos
inc
cmpsl
sbb
mov
int3
sub
and
jne
mov
cmp
leave
aas
or
outsl
mull
dec
dec
fisubrs
iret
mov
cmp
lret
cmp
divl
push
loope
pop
pop
sub
pop
js
jbe
jecxz
flds
lods
push
jecxz
std
xchg
aas
mov
mov
ret
sbb
xchg
ds
sahf
shrb
mov
cmpsl
lods
subl
jne
jbe
addb
inc
or
sbb
lret
cwtl
or
shrl
push
fisubrs
sbb
push
jnp
cmp
lea
les
testb
cmp
sbb
in
add
pop
loopne
outsl
bound
scas
lret
sbbl
mov
jmp
ds
add
outsl
scas
and
mov
pop
enter
gs
inc
sub
flds
shrb
jl
inc
aam
mov
or
sub
je
pop
in
ss
sub
sbb
pusha
sub
add
cmp
ficompl
dec
sub
sbb
and
outsl
jp
xchg
xor
push
testb
cmp
fdivrs
cmpsb
add
enter
and
push
sbbb
cmp
sub
xchg
addb
xor
jmp
sbb
pop
jae
out
inc
adc
add
add
push
sbb
jno
shll
cltd
test
adc
outsb
rorl
xchg
or
stos
ljmp
ror
shlb
xor
mov
hlt
fsincos
jnp
les
lret
ret
push
daa
mov
in
add
jge
pop
prefetch
pusha
xchg
das
rcl
pop
lret
lret
iret
ljmp
imul
ret
gs
xor
popf
mov
stos
insl
and
inc
loop
jo
rcll
adc
lea
cmp
lahf
iret
sbb
jmp
dec
or
test
add
imul
add
mov
inc
ds
xorl
int3
icebp
and
sub
nop
lcall
ss
inc
push
in
lods
cmpsb
sbb
out
stos
les
nop
call
dec
pop
jge
xchg
pop
and
sub
cmp
popa
xchg
cwtl
xor
mov
inc
mov
int3
lret
fwait
sbb
mov
dec
mov
ss
jbe
dec
popf
xlat
fisttpl
std
and
aaa
clc
or
mov
in
lock
arpl
cmpsb
sbb
fbstp
out
pushf
clc
cmp
push
push
push
loope
mov
xchg
pop
inc
test
stc
pop
jecxz
push
add
lcall
shlb
dec
push
mov
js
ret
scas
lds
addb
jl
test
aaa
aam
aaa
shll
cmp
xchg
rcl
xchg
xchg
jle
jbe
inc
sub
mov
rorl
in
dec
mov
out
adc
pop
mov
sarl
sub
fnstsw
and
movsl
and
scas
pop
mov
outsb
sarb
inc
arpl
xchg
rolb
pop
ror
adc
or
sbb
pop
mov
inc
xor
nop
in
iret
hlt
fnstsw
orb
cmp
clc
cmp
fs
scas
cmp
sub
gs
jae
mov
or
rolb
add
sar
inc
adc
cmpsb
notl
out
jbe
sahf
lret
mov
mov
ljmp
mov
outsb
shrl
loopnew
rcrb
inc
or
pop
test
gs
inc
shlb
adc
fwait
repnz
mov
popf
push
inc
and
scas
rclb
dec
movsb
sbbb
jnp
xchg
notl
fsts
out
mov
imul
filds
lods
add
repnz
lock
mov
mov
and
fsubrl
and
fistps
scas
aam
or
wrmsr
jg
mov
daa
lahf
cmp
jmp
cs
mov
daa
push
or
push
jg
mov
jl
fcomip
out
je
sarl
mov
xchg
ljmp
cmp
daa
clc
movsb
push
test
pop
insb
es
or
add
sub
mov
out
cwtl
mov
dec
js
jge
mov
movsl
mov
andb
dec
mov
data16
popf
push
mov
xor
sub
cs
ja
mov
adc
add
stos
xchg
iret
xorb
cmpsb
pop
dec
jg
xor
sub
loopne
add
movsl
jp
pop
xor
add
jno
xor
rolb
and
sbb
in
sub
xchg
sbb
add
dec
sub
push
or
pop
rcrl
ss
daa
cmp
xchg
jbe
or
mov
sub
xchg
rorl
cld
dec
xchg
int3
in
call
xchg
dec
mov
inc
sbb
icebp
sti
push
jmp
sub
dec
andb
mov
loop
push
clc
sbb
stc
adc
aaa
pusha
or
pop
or
dec
sub
or
xor
dec
jg
mov
mov
shlb
xchg
pop
mov
aam
popf
scas
arpl
xor
loop
cmp
dec
jmp
xchg
xor
mov
and
xor
sti
pop
outsb
mov
aad
dec
repnz
loopne
insb
inc
daa
bound
fstpt
dec
xchg
ret
mov
sub
and
push
mov
sbb
cli
add
mov
add
repnz
xor
inc
ret
mov
jecxz
xchg
imul
push
pushf
adc
or
and
add
add
or
cmpsb
loope
mov
mov
subb
negl
inc
mov
sub
pop
es
jmp
rcrl
xchg
rorl
mov
pusha
scas
mov
sub
fucom
mov
test
sbb
dec
inc
or
push
fs
loope
adc
das
xchg
add
cmp
adc
dec
pop
mov
ja
mov
sbb
inc
mov
data16
lds
cwtl
jmp
roll
outsb
adc
mov
rolb
xchg
fcmovnb
xchg
push
cltd
jnp
push
fadds
and
inc
jno
xor
jl
mov
mov
jno
and
in
push
adc
jb
das
lds
push
jno
inc
push
lods
sub
sbb
daa
pop
cmc
and
dec
xchg
inc
call
arpl
inc
mov
dec
movsl
add
add
or
nop
dec
xlat
call
je
mov
test
div
imul
int3
or
ja
push
popf
or
mov
xchg
or
fstps
dec
inc
scas
mov
cmc
cmp
arpl
cld
xor
push
push
push
mov
out
dec
inc
out
lods
mov
adc
and
push
ror
fsubs
lock
push
pop
push
xchg
mov
fdivs
loope
lret
jnp
andb
pop
fisubrl
jb
cs
mov
jecxz
imull
pop
push
push
pop
push
mov
dec
dec
in
loope
leave
das
mov
and
mov
mov
orl
inc
mov
push
jge
fnstenv
inc
movsb
cmovb
xchg
pushf
push
sub
mov
sbb
pop
incb
mov
dec
insl
mov
pop
inc
dec
inc
add
or
jno
outsl
daa
push
sarb
mov
call
sub
jl
dec
daa
sbb
and
outsl
neg
test
sbb
enter
lock
cmp
dec
push
add
adc
mov
pop
sub
mov
pop
andl
cmp
loope
push
loop
fimuls
and
pop
movswl
and
repz
or
scas
int3
dec
sahf
pop
insb
xor
mov
xor
cmp
push
inc
pop
inc
test
cltd
xchg
jne
add
je
fwait
lea
xorb
push
outsb
xlat
push
fstpt
inc
lea
and
jno
aas
mov
add
jmp
sar
sub
mov
iret
sbb
repnz
jb
lcall
shll
mov
mov
dec
iret
fisubrs
dec
inc
mov
dec
push
aaa
cmp
imul
add
fistl
jns
jns
pop
push
and
adc
xor
mov
popf
data16
or
dec
repz
adc
fbstp
into
or
sub
imul
mov
lea
int3
sbb
das
or
xchg
mov
or
call
imul
stc
daa
stos
call
xor
xchg
pop
push
adc
movsb
stc
cmp
jle
xchg
add
inc
add
test
adc
cmp
js
adc
pop
mov
cmp
sbb
jmp
shrl
cmp
xchg
sub
mov
loope
jp
mov
mul
jbe
push
xchg
mov
add
les
lea
xchg
out
or
xchg
lods
pop
sub
sub
push
mov
mov
ja
jge
and
cmpsb
je
idiv
jg
lods
cltd
mov
sbb
dec
adc
jle
mov
push
or
out
incl
add
jge
pop
movsl
add
mov
mov
dec
sbb
push
repnz
mov
je
mov
call
sub
cmpsl
loope
mov
mov
xor
add
and
fcoms
pop
sbb
shr
xchg
inc
lea
mov
or
push
int
xchg
bound
or
gs
push
lret
xchg
cmp
sbb
pop
or
adc
js
add
fldt
adc
into
std
lret
mov
xor
fidivrs
aaa
mov
push
push
mov
cwtl
lds
xchg
push
sbb
adc
decl
jp
jg
mov
adc
mov
jb
mov
mov
and
ds
sub
fisubrs
sahf
jl
stc
pop
outsb
test
mov
cmpsl
push
push
cwtl
mov
dec
mov
dec
sarb
test
jns
mov
sbb
divb
sar
call
xor
pop
jns
inc
subl
xchg
insl
inc
inc
and
cli
lea
mov
daa
js
popf
xor
lods
mov
mov
leave
inc
test
daa
adc
jb
cmp
xchg
orl
push
pop
mov
ret
cmc
mov
push
test
out
mov
xchg
jbe
je
ret
stc
bound
iret
cltd
mov
bound
or
fcmovbe
das
mov
sbb
jg
xchg
sub
cmp
cmp
jnp
sti
inc
cmpb
xlat
pop
mov
xchg
sub
ret
stos
sbb
out
aas
and
xlat
out
cmp
mov
fnstcw
xor
fldenv
cmp
sbb
jns
adc
fwait
dec
or
jo
pop
mul
hlt
cmpsb
jg
stos
inc
jge
and
addr16
mov
jno
mov
out
je
jne
push
lret
dec
inc
dec
and
in
loop
pop
adc
push
push
cltd
pop
jmp
lret
scas
sbb
cmp
adc
and
xchg
icebp
cmpl
es
mov
out
loopne
test
xlat
or
inc
or
test
sti
and
mov
cld
sti
fcmovne
mov
in
pop
loope
xor
sub
bound
stos
testb
mov
lods
lods
outsl
pop
and
add
fldt
int
or
push
jmp
inc
sbb
adc
mov
int3
xorb
rolb
and
sbb
cwtl
imul
fcompl
ror
push
cmc
xor
mov
subb
push
pop
sarl
and
stc
push
cld
repz
dec
int3
cmp
pop
mov
inc
jle
and
push
sti
xlat
jg
mov
shlb
lcall
cmc
xchg
mov
mov
push
pop
pop
into
loopne
mov
sbb
fbstp
dec
js
testb
dec
sbb
xchg
mov
divb
cmp
cmp
repz
mov
cwtl
xor
adc
stos
bound
xchg
es
adc
pop
outsb
xor
repnz
cld
pop
push
sub
cs
pop
test
xchg
aas
icebp
mov
jo
and
fstl
pushf
xchg
sbb
frstor
mov
divb
lcall
pcmpeqd
xchg
add
mov
xor
ja
or
outsl
insb
test
inc
push
inc
addr16
mov
dec
nop
test
daa
sahf
mov
fstp
jae
loop
xor
iret
jmp
roll
sbb
icebp
fbld
mov
sub
push
rcrl
pop
cwtl
sub
inc
push
pop
or
push
sub
xlat
add
cmc
shll
test
dec
cmp
mov
push
dec
hlt
fcoms
jg
dec
std
sbb
mov
mov
jmp
nop
addr16
stos
addb
data16
xor
lret
enter
cmp
push
pop
add
mov
add
cli
cmpsl
add
dec
stos
inc
mov
movsl
nop
fs
mov
cli
push
fnsave
out
mov
stos
xchg
pop
mov
inc
adc
fidivs
push
push
lods
dec
mov
fwait
jae
movsb
movsb
shrl
scas
je
stc
xorl
sarb
mov
xchg
imul
ljmp
or
enter
push
js
adc
lahf
es
add
push
loope
loope
std
mov
andb
stos
add
out
add
mov
in
shr
scas
je
orb
jb
xor
jo
cmp
fdivl
mov
sbb
lock
xchg
lock
mov
mov
iret
sar
cli
xchg
mov
pusha
shl
les
pop
pop
jae
cld
add
pushf
shlb
sahf
jecxz
cmpl
cmp
lret
jbe
repnz
leave
lea
add
inc
mov
sub
aaa
ja
xchg
out
rcll
icebp
xor
cmpsb
int3
jmp
mov
int
lods
or
pop
cmp
mov
xchg
shlb
push
dec
xchg
sbb
cmpsl
and
push
loope
in
mov
push
cld
in
sub
insb
jle
sbb
mov
arpl
cltd
or
sbb
movsl
aad
pushf
fcmovnu
in
add
leave
push
mov
inc
sub
add
lea
push
cmp
notb
cmp
inc
movsl
mov
dec
cmp
ljmp
sahf
shll
cmp
scas
idiv
loope
lds
aad
imul
push
push
mov
stos
fdiv
dec
setno
cmc
xor
rclb
and
stc
cwtl
cmp
cmp
out
pop
in
pop
push
je
fbstp
mov
sahf
js
test
rolb
orl
push
jo
cmp
hlt
dec
xchg
push
iret
push
jmp
xor
dec
push
dec
push
lods
mov
stos
aas
popf
cmpsl
lds
sbb
dec
cmc
js
xchg
and
outsl
and
lret
stc
push
adc
dec
xlat
dec
add
lock
rol
cmc
add
sub
xchg
test
mov
lock
mov
jecxz
out
in
lods
sbb
cmp
xchg
pop
js
fwait
call
mov
or
or
ret
mov
testb
push
lods
in
out
jmp
sub
pop
lock
xor
pop
andl
cs
aad
pop
out
mul
enter
and
arpl
popf
mov
imul
cli
pop
mov
mov
xchg
imul
mov
or
leave
enter
out
sub
mov
cmp
ret
cmc
xlat
in
push
cltd
lds
ljmp
push
daa
arpl
xchg
nop
dec
dec
sub
jmp
ljmp
rorl
mov
sub
dec
sub
inc
adc
push
sar
mov
mov
lods
loopne
jb
std
ja
int3
jae
sar
and
fwait
lcall
push
int3
pop
cmp
cmpsb
lock
das
dec
mov
ja
lds
inc
jne
out
xchg
push
iret
xor
outsl
jb
sti
repz
ja
popa
dec
ret
shll
addr16
push
pop
sub
lea
test
sub
rcrl
adc
cwtl
mov
sub
ds
movsl
ljmp
outsl
mov
dec
inc
and
add
jb
cwtl
aaa
incb
cld
mov
sub
dec
test
xchg
xor
mov
popf
je
mov
jo
inc
cmpsl
push
dec
jne
and
int
imull
ret
aam
ja
adc
cli
inc
cmp
inc
out
test
mov
inc
ficomps
mov
mov
clc
fucom
inc
xorl
mull
rorl
add
adc
add
push
lcall
mov
movsb
jbe
sbb
inc
movsb
pushf
xchg
fdivs
ret
or
int
push
and
sbb
push
or
cmp
lahf
lods
gs
out
jnp
cmpsb
mov
sub
adc
or
jecxz
adc
jge
les
fcmovne
jmp
mov
ret
fs
jae
mov
jb
adc
das
aam
divb
push
not
fists
jmp
pop
imul
adc
xchg
test
xchg
jg
or
and
and
mov
mov
test
enter
push
jmp
in
les
xchg
push
xchg
insl
imul
jmp
incl
addr16
lods
pop
cs
shr
addr16
adc
sub
and
cmpsl
mov
fwait
aad
add
out
in
pop
xchg
dec
mov
lods
dec
cmpsb
add
and
loop
mov
mov
adc
mov
fsubr
icebp
mov
or
inc
cmp
jno
push
mov
lds
xchg
ja
push
sti
push
dec
movsb
data16
or
push
fldcw
mov
lcall
adc
and
lahf
pop
cli
imul
pushl
fistpll
xor
mov
sti
mov
inc
fmuls
push
dec
pop
rorb
ljmp
in
mov
idivb
sbb
mov
popf
xor
mov
jbe
jne
lret
push
and
shl
or
in
mov
jbe
pusha
or
adc
mov
dec
and
fimuls
ficoml
mov
out
sub
adcl
cmpl
inc
aam
out
xchg
sub
cs
fdivrl
hlt
mov
xor
pusha
push
mov
arpl
decl
mov
lods
lahf
pop
ss
fists
pop
loopne
sbb
loopne
jbe
pop
stc
loope
jo
sbb
jg
stc
jae
rcll
pop
pushf
aad
pop
shrb
nop
mov
lret
jbe
inc
movsl
and
dec
addb
mov
lahf
and
and
aam
insl
dec
mov
mov
repz
mov
popf
and
or
push
aaa
fcoml
int3
stos
dec
inc
in
dec
sbb
pop
mov
stos
add
push
int
stc
movl
push
push
add
xchg
or
lcall
push
in
and
jge
push
shlb
in
mov
bound
outsb
push
addr16
mov
xor
mov
cld
std
jne
sub
xchg
std
int
pop
pop
cmp
inc
dec
pop
es
jne
test
out
push
int
lods
popa
enter
cld
lret
fsubrp
icebp
adc
jns
andl
sub
imul
or
in
pop
fidivrl
push
fdivl
mov
loope
xor
clc
into
xor
ljmp
stc
insb
aas
mov
cmp
fs
inc
in
aam
mov
pop
adc
cmp
xchg
aas
insb
dec
mull
pop
xor
and
mov
jbe
pop
jmp
sahf
mov
test
jb
lret
push
or
and
cmp
test
bound
push
int3
aam
and
xchg
lahf
sub
test
test
test
pop
xchg
adc
ja
aad
leave
cmp
test
dec
mov
hlt
gs
sbb
cmp
mov
or
fstl
sub
pop
repnz
sbb
test
sub
xor
je
push
adc
mov
push
jo
adc
nop
std
rcl
pop
jo
lcall
pmaddwd
push
repz
xor
cmp
fs
or
xorl
xor
push
cmp
dec
arpl
call
out
sete
xchg
popa
sbb
jo
outsl
aam
stos
shll
xchg
mulb
test
repnz
cmpsb
pop
mov
scas
cmp
jne
fsubl
and
and
stos
pop
hlt
cs
cli
repnz
lods
and
orl
mov
fldl
mull
imul
addr16
mov
fistpll
mov
push
cli
adc
inc
incl
ret
sbb
pusha
aaa
mov
sbb
jbe
imul
sbbb
sbb
jne
call
cmp
lret
es
out
je
imul
lea
sub
mov
ljmp
scas
mov
testb
mov
mov
lods
sbb
shll
adc
jo
dec
lods
hlt
mov
lods
mov
scas
movsl
xchg
push
divb
fsubrs
insl
xor
jno
adc
ret
mov
add
daa
pop
rcrb
push
shl
lock
pusha
insb
pusha
adcl
add
push
lea
outsb
dec
cmc
and
pusha
pop
xor
cmp
cld
jb
fwait
jnp
lret
sub
addr16
mov
lret
or
push
inc
pop
adc
xchg
sarb
fmull
in
out
jle
jmp
sub
mov
sahf
cmp
or
jmp
les
xchg
rolb
mov
mov
sub
int
push
lret
xlat
dec
push
pop
aad
mov
adc
push
adc
pop
lods
lahf
shll
mov
clc
sub
dec
xor
in
jp
jecxz
jecxz
push
mov
jle
icebp
jae
int3
adc
das
adc
icebp
cmpsl
mov
and
xor
jl
add
sbb
push
sbb
push
cmpb
mov
mov
sbb
mov
mov
xchg
mov
std
nop
fld
mov
mov
mov
sub
and
ret
sbb
js
pop
in
test
mov
mov
dec
ss
leave
pop
dec
jns
jge
mov
call
mov
mov
xchg
xor
test
dec
in
subl
mov
or
daa
out
and
mov
and
dec
pushf
js
push
out
sub
mov
fldt
dec
cli
mov
sub
xchg
mov
cmp
xchg
xchg
xchg
aad
std
je
add
subl
cltd
mov
push
xor
mov
frstpm(287
lahf
nop
addr16
outsb
insb
insl
fwait
je
aaa
mov
mov
mov
negb
mov
push
or
pop
jno
inc
add
adc
push
push
mov
shrb
cmc
mov
cld
pop
sahf
mov
pop
jecxz
dec
aam
rclb
xor
pop
mov
out
repnz
aad
sub
leave
testl
mov
jbe
movsl
test
sarb
lds
pop
int
or
adc
mov
inc
lods
ds
and
mov
sub
mov
in
fidivrl
push
test
loope
dec
xor
enter
inc
aad
xchg
xor
and
popa
rcr
jo
or
sub
adc
pop
fs
sarb
mov
orl
xchg
imull
mov
repnz
ret
scas
mov
cmp
ret
xor
cmp
fnop
jne
mov
xchg
mov
arpl
xchg
push
mulb
movsb
add
sub
int3
push
pop
rcll
jp
aaa
sbb
js
sahf
mov
popa
dec
jg
jg
aad
outsb
mov
and
mov
or
cmc
es
mov
fldt
jle
in
dec
pop
test
xor
or
sub
addr16
popa
mov
gs
shl
fcomp
cmp
movb
cmpsl
test
jnp
adc
lea
cmpl
nop
xchg
orb
and
or
xchg
and
dec
sbb
sub
out
iret
cmp
push
fcomps
jo
dec
mov
mov
shlb
mov
jmp
outsl
xchg
lds
jno
or
or
mov
cs
in
dec
fsts
pop
mov
cmp
pop
mov
xchg
sarl
aas
popf
test
test
bound
in
mov
bswap
int3
movsl
js
test
jbe
jno
add
lea
fidivl
aas
cwtl
cmp
icebp
inc
sbb
mov
call
jo
cmp
sub
mov
push
fst
shlb
xor
rclb
imul
mov
xor
fnsave
ficomps
pop
ret
inc
mov
loop
mov
and
ret
pop
cmp
lods
cmp
iret
call
cmc
out
mov
fisubrl
mov
push
pop
push
inc
mov
mov
aad
lret
pop
jp
add
adc
xor
push
mov
pop
jo
dec
scas
sbb
xchg
or
or
jne
sbb
pop
ret
add
jno
inc
testl
dec
pop
sarl
inc
iret
addr16
jae
xchg
pop
inc
fwait
mov
mov
adc
in
ror
insb
and
pop
inc
sbb
cmp
mov
add
cltd
test
ja
adc
adc
dec
sub
push
jle
and
lea
jg
cld
iret
out
lea
testl
mov
scas
test
pop
or
cltd
pushf
adc
pop
push
inc
jl
jno
in
or
inc
rcr
insb
xor
mov
xor
imul
cmpsl
stc
aad
out
cld
push
sbb
rorb
das
mov
das
in
bound
out
cmp
sbb
jne
fists
push
out
int
iret
xor
pop
add
test
sbb
pusha
jnp
aaa
inc
rcl
cmp
aaa
or
xor
loopne
insb
sub
push
loope
mov
adc
push
mov
or
shrl
add
clc
xor
pop
cmc
ja
ficoml
jmp
push
ljmp
mov
out
bound
leave
mov
dec
inc
lock
int3
inc
cmp
cmp
ss
mov
fstl
xor
sub
incb
adc
out
or
mov
push
mov
and
xchg
add
inc
xchg
std
mov
inc
int3
int
pop
jbe
push
iret
mov
xchg
cltd
or
add
pop
leave
jg
movsb
insb
int
lret
dec
or
adc
shrl
sub
mov
in
andl
sub
cmc
fwait
into
cmp
jns
enter
add
nop
shl
push
in
sti
imul
out
aas
daa
xchg
push
mov
inc
loopne
jnp
out
aas
ds
les
xor
ret
mov
adc
adc
mov
aam
jp
test
daa
pop
add
jne
ja
ret
addr16
xchg
pop
dec
add
jle
inc
jns
and
ss
mov
aam
adc
sbb
cltd
mov
divb
adc
lret
pusha
ret
movsb
mov
fwait
iret
adcb
mov
mov
cmc
lods
xor
push
xor
xor
int
lds
push
dec
data16
xor
ljmp
out
xor
jbe
cld
or
push
push
fwait
add
and
pop
or
sub
sahf
pop
jg
mov
mov
or
in
and
xchg
negb
adc
pavgb
lret
mov
mov
addb
test
pushf
cs
cmpsl
sahf
sub
jge
outsb
sub
mov
cld
jge
les
and
in
mov
xor
repnz
daa
cmpb
ss
and
enter
imul
jge
push
mov
mov
mov
mov
xor
mov
jl
or
mov
rolb
mov
add
test
jb
jns
or
sub
loope
loope
push
mov
push
sub
or
out
pop
or
cmp
xor
jle
data16
lahf
or
divb
leave
pusha
dec
push
cltd
cmpsb
xchg
cltd
push
ds
aaa
lds
jge
movsb
pop
sbb
out
mov
dec
xchg
lahf
pop
iret
inc
lret
in
subl
gs
mov
loopne
sbb
push
out
cmc
push
mov
test
iret
out
scas
xor
mov
mov
call
mov
fcom
jb
fisubl
aas
mov
jbe
iret
or
jle
add
or
pop
or
adc
and
jnp
inc
inc
sub
int3
add
out
movsl
test
mov
inc
dec
mov
insl
imulb
aad
aaa
push
jmp
shll
push
cld
rcrl
cs
imul
add
sub
jno
sub
or
ds
js
sub
jno
testl
push
push
arpl
orl
fisubrl
push
sbbb
shr
testb
mov
add
loopne
mov
fcmovu
andb
je
out
icebp
push
jne
pop
shll
je
clc
cmp
push
or
jae
jle
xor
je
xchg
sbb
imul
pop
fadd
sti
sbb
shrl
arpl
pusha
xchg
pop
jg
pusha
or
jg
inc
sub
aaa
cmpsb
in
xorl
mov
push
or
push
and
jg
mov
xchg
js
in
jmp
es
mov
mov
addr16
add
mov
jb
testb
cltd
fwait
sbb
mov
dec
dec
clc
sbb
imul
lret
cmp
addl
ds
pop
repz
cli
sbb
ficompl
shll
movsl
insb
sbb
fdivr
mov
hlt
cmp
arpl
mov
xchg
or
lea
pusha
lret
or
and
jo
mov
lret
pop
lcall
cmp
in
and
cmp
daa
cmp
cmc
cli
xorl
repz
mov
repz
cld
mov
shrb
xchg
jns
loope
and
pop
adc
mov
test
addr16
aam
cmp
mov
ljmp
and
rclb
in
push
fmuls
repnz
sub
inc
fisubrs
ret
icebp
lock
imul
mov
xlat
mov
sbb
add
jo
and
sbb
shlb
popf
jmp
mov
jecxz
inc
xchg
imul
or
add
mov
jae
imul
vmptrld
jle
cli
das
push
jne
lcall
inc
pop
fstp
mov
stos
jb
or
shll
xor
xchg
lret
mov
lock
dec
cmp
ja
popa
aad
xor
fistl
inc
xchg
xchg
int3
int
lods
push
push
loopne
adc
sti
scas
repz
xchg
add
push
xor
push
and
mov
dec
mov
out
xchg
lock
cmpsl
and
fsts
leave
mov
mov
mov
dec
or
sub
and
popf
or
mov
adc
pop
push
xor
jno
mov
cld
insb
adcl
or
sbb
loop
and
icebp
mov
incl
lock
add
stc
dec
add
dec
adc
xacquire
divl
je
push
gs
xlat
dec
push
pop
inc
dec
insl
jb
loop
mov
sbb
jle
out
movsl
mov
das
pop
cmpsb
mov
cmp
out
add
sub
in
data16
add
jle
push
xor
aas
sbb
cmp
std
add
or
gs
mov
dec
mov
pop
sub
repnz
cs
or
repnz
pop
cli
push
xor
test
ja
add
jmp
sti
out
fidivs
mov
and
mov
add
loopne
jp
test
and
pop
inc
out
pop
cltd
jo
mov
mov
pop
stc
add
mov
or
mov
cli
add
gs
scas
pop
hlt
push
pop
leave
xchg
insb
addb
imulb
daa
xchg
jb
gs
mov
xlat
sub
jns
test
iret
cli
push
cmpsb
cs
sbb
cmp
add
je
repnz
pop
jo
pop
nop
in
imul
test
hlt
jg
shlb
push
scas
xchg
popa
pop
inc
mov
mov
or
mov
adc
pop
mov
xor
adc
or
xchg
ret
sbb
xchg
aad
fdivs
orb
ret
ja
push
out
xchg
dec
imul
lods
idivb
sub
add
scas
pop
mov
std
es
call
test
popf
pop
cs
mov
orb
aas
push
xor
cmp
jno
or
in
ds
out
icebp
nop
dec
sub
in
nop
add
push
fucomip
cli
jbe
sbb
mov
mov
pushf
je
out
dec
out
cmp
dec
popl
push
sub
sbb
je
dec
mov
scas
lds
push
call
adc
test
lock
lods
addl
mov
push
cmpsb
xor
inc
sbb
testb
pusha
sub
ficoms
jne
repnz
pop
or
mov
mov
insl
cmc
jecxz
lods
daa
repz
sbb
getsec
and
das
xchg
add
push
and
lds
or
in
das
mov
addl
and
mov
pop
add
outsb
stos
lahf
fcoml
and
mov
or
cmp
neg
add
jb
push
mov
jl
pop
js
rorb
scas
mov
xchg
movsl
xchg
xchg
inc
xor
into
es
or
sub
fbld
popf
outsb
sti
ja
ds
lcall
das
out
cmp
inc
and
mov
lods
mov
lods
and
inc
xchg
loopne
jae
push
shll
sbb
lret
jmp
sub
in
popw
pusha
repz
xor
or
lret
or
in
ficoml
cli
int
divl
ds
mov
jbe
xorl
in
cld
js
cmp
test
mov
mov
popw
inc
loopne
lcall
shl
sbb
sub
scas
inc
in
inc
sti
sub
and
xor
dec
mov
xlat
lea
mov
mov
push
jae
jecxz
imul
mov
sbb
imul
jl
and
hlt
test
dec
and
bound
fcomip
cwtl
jae
and
add
or
cli
mov
push
xor
mov
add
test
mov
mov
nop
mov
dec
sub
data16
push
mov
dec
fs
and
xchg
cmp
lds
xchg
scas
stos
mov
mov
adc
jp
sbbb
xor
jo
aaa
lods
and
test
dec
imul
lods
push
xchg
aam
pop
mov
mov
push
insb
pop
cld
cmp
or
or
push
popf
bound
pusha
cmp
push
stc
out
fistps
jp
dec
popa
mov
inc
orl
sub
popa
push
mov
or
add
aam
mov
cltd
xor
sbb
jmp
fildll
dec
push
jecxz
lods
dec
cmp
jno
mov
adc
ficoms
sahf
shl
mov
loop
cmc
std
aad
cwtl
xchg
pusha
cmp
adc
xchg
cmp
inc
std
xchg
pop
aad
lods
jl
cmp
adc
mov
pop
pop
xchg
test
jge
std
arpl
jmp
cmpsb
jmp
inc
add
xchg
imul
xor
into
ljmp
jecxz
mov
add
sahf
xor
repz
push
js
mov
cmpsl
jle
push
lea
or
add
cmp
imul
in
jns
shlb
jp
cmp
shll
cmpsl
xchg
xchg
or
mov
aam
test
pusha
mov
push
inc
out
or
jle
rcl
push
mov
xor
mov
and
pushf
lcall
inc
hlt
icebp
in
nop
leave
xor
xor
loope
pop
sbb
lcall
or
iret
mov
mov
lret
aam
aam
push
roll
cmpsl
sbbl
aaa
subb
cs
xchg
iret
inc
stos
dec
jg
cmc
movsl
movsl
xor
lcall
mov
jns
mov
xor
sbb
jl
mov
xor
imul
push
imul
mov
mov
imul
sbb
or
mov
jl
out
repnz
lahf
ss
pop
jg
loopne
sbb
ljmp
or
adc
gs
in
int
jns
lods
sbb
pusha
cli
js
dec
adc
pop
inc
cld
ja
pushf
mov
shll
std
add
sub
popf
jmp
popf
inc
clc
hlt
popa
daa
dec
cmp
call
hlt
loope
adc
cmp
mov
fwait
movsl
fiadds
or
xchg
fistps
ss
pop
push
and
dec
lods
push
push
xor
orl
imul
loope
inc
lods
rcl
and
xor
clc
movsb
fiadds
jge
cmpsb
jnp
imul
xlat
rcrb
mov
jg
int
cmpb
rcll
ret
xlat
stos
pop
hlt
or
xchg
xor
inc
daa
out
imull
pop
test
iret
sahf
test
loope
push
dec
sti
and
sbb
or
jns
xchg
sbb
orl
test
cmp
lahf
cmp
cs
adc
jp
rcr
mov
int3
cli
dec
jns
rcr
add
jmp
inc
jnp
cmpsl
pop
sbb
jns
in
or
ds
jo
cmp
repnz
stos
or
jecxz
pop
imul
inc
repz
test
mov
inc
inc
and
add
dec
mov
adc
xlat
test
cltd
stos
sbb
inc
rcrl
mov
mov
jmp
mov
ds
cltd
call
test
xlat
sub
mov
mov
mov
push
jle
sbb
cmp
stos
notl
mov
cli
add
inc
jmp
pop
shr
mov
and
pop
and
fiaddl
jae
pushf
xchg
loopne
fs
inc
inc
test
push
mov
ja
pop
mov
pushf
sbb
cld
push
out
in
popf
adc
or
mov
dec
mov
adc
mov
cmp
push
pop
loope
cs
jg
sub
outsb
repnz
pop
aam
aam
icebp
imul
mov
sti
jmp
testl
hlt
mov
xchg
xlat
mov
dec
jno
sbb
jge
imul
dec
inc
pop
push
cltd
xor
mov
sub
mov
in
ss
xchg
arpl
negl
add
ror
fidivrl
fistps
ficompl
int
mov
ret
orl
das
ljmp
and
mov
pop
das
filds
loop
xchg
mov
enter
int
cmpsb
pop
jbe
dec
insl
push
pop
xchg
test
imul
and
std
pop
shll
jnp
loop
cmpsl
mov
mov
add
ja
cmp
push
das
test
mov
sub
into
pop
sarl
ret
inc
xchg
pop
or
repz
or
mov
imul
pop
jb
movsl
out
mov
incl
fstpl
pop
pop
and
jbe
mov
aad
es
inc
jno
loop
loopne
sub
and
pop
push
test
mov
dec
sub
addl
jns
ret
inc
xchg
scas
mov
fisubs
xor
enter
jecxz
mov
cli
mov
push
into
jp
mov
shl
ds
leave
jmp
sarl
clc
aad
pop
shll
and
sub
mov
jne
aaa
aad
xor
loop
pop
push
jb
push
xor
cmpsb
ret
pop
mov
cli
daa
lcall
daa
push
lds
and
dec
xlat
xchg
adc
or
jge
rclb
or
sbb
divb
push
shr
outsb
cmp
imul
mov
xchg
mov
cli
outsl
xchg
sub
and
iret
dec
push
jns
call
sub
and
jmp
lcall
dec
lock
into
out
or
mov
fisubrs
call
jmp
das
outsb
addr16
xor
jge
sub
mov
cltd
sbb
mov
cmpsl
test
jmp
jp
mov
xchg
popa
sub
cmp
jmp
cmp
outsl
jle
and
pop
mov
add
fnstenv
inc
lcall
push
inc
sbb
sti
lahf
dec
out
cwtl
test
pop
dec
daa
cmpsb
call
add
mov
fidivrs
pop
mov
aad
shr
mov
lcall
mov
and
popa
add
sub
jno
lds
loopne
lcall
test
pop
pop
mov
insl
sub
and
fistpl
cwtl
fwait
imul
sbb
aaa
fisubl
les
std
mov
std
jb
mov
jns
push
xor
and
popf
loop
paddb
mov
jmp
mov
repz
fisttps
sahf
xlat
sbb
dec
rcll
outsl
add
push
jge
mov
call
sti
xchg
icebp
jno
std
or
adc
pusha
shll
pop
mov
pop
divb
inc
or
mov
push
fisttps
push
xor
fstl
jg
and
rcll
xchg
dec
cwtl
sbb
gs
mov
lret
in
in
and
test
mov
dec
imul
xor
aad
sbb
mov
xchg
ret
push
and
dec
xchg
cmp
xor
nop
test
out
je
ljmp
cmp
add
fsubs
push
shll
dec
fisttpll
jbe
mov
pushf
sub
or
in
int3
in
xchg
xchg
xchg
fdivs
xchg
sarl
fnsave
jle
mov
icebp
pop
in
pop
mov
mov
or
arpl
std
movsl
or
loopne
xor
xchg
std
mov
jne
rolb
push
das
sub
add
insl
push
inc
mov
dec
dec
push
out
and
and
movsl
inc
outsl
add
mov
inc
dec
cmp
jge
cmp
mov
cmpb
int3
gs
loopne
cmp
jno
pop
ja
mov
cli
int
pop
xchg
daa
fimuls
cmp
xor
in
iret
scas
mov
and
mov
lea
mov
in
sbb
jle
or
lret
pushf
jge
pop
lods
cli
adc
sub
pushf
daa
mov
movsl
add
xchg
sub
cs
in
js
push
scas
out
in
jno
dec
andl
dec
push
inc
ja
jns
dec
or
hlt
in
outsl
sbb
inc
mov
movsb
and
cltd
fistl
adc
xor
push
ret
pop
pop
fwait
gs
push
and
jmp
ss
jne
adc
pop
mov
scas
std
xor
das
pand
mov
dec
xchg
das
mov
sbb
mov
enter
test
sbb
out
mov
pop
int3
subb
and
ret
test
dec
jne
sbbl
pushf
inc
xchg
in
fs
push
clc
lods
jg
jg
jbe
adc
jb
mov
outsl
les
repnz
jge
or
sbb
outsl
int
pop
xor
mov
iret
mov
enter
fs
faddp
push
outsb
lea
or
pop
hlt
adc
mov
adc
sub
mov
push
sbb
dec
and
rorb
jbe
jno
pop
sahf
divl
inc
ffree
cmpsl
mov
mov
mov
test
jae
shlb
jne
nop
lock
subl
rcl
ljmp
std
lea
decb
push
sub
movsl
xchg
movsl
mov
jno
cmp
pusha
jbe
std
arpl
and
cmp
loopne
inc
or
cltd
ret
add
cmc
jge
test
lahf
cmc
es
push
les
fsts
add
mov
xor
mov
xor
pop
push
sbb
stos
addr16
std
fists
xchg
imul
leave
mov
fldenv
ret
pushf
cli
ja
xchg
push
fwait
mov
mov
xchg
xchg
cmp
in
stos
mov
dec
mov
fcmovu
pop
dec
xchg
not
negl
mov
cmc
clc
xchg
or
dec
push
jp
lret
jmp
inc
rclb
loopne
mov
fdivrs
adc
lods
mov
stc
test
adc
mov
mov
push
jl
xchg
adc
dec
lods
add
or
jp
xlat
push
dec
sub
fstpl
adc
pop
addb
outsb
cmp
cmp
mov
fidivrs
out
fadds
push
mov
or
inc
in
or
nop
jno
cmp
cmc
mov
add
sbb
cwtl
test
cmp
cmpsb
inc
pop
xchg
fnstsw
adc
shlb
or
xchg
push
dec
pop
stos
add
call
mov
and
cmpsl
jg
leave
inc
out
rcrb
adc
mov
xor
lret
pushl
inc
dec
push
fdivrl
pop
push
sbb
subl
inc
add
int
sarl
xchg
push
hlt
gs
jl
pop
jecxz
adc
jge
js
mov
mov
sub
mov
add
dec
mov
mov
pop
rcll
xor
rcl
stc
jecxz
jecxz
xchg
pop
adc
icebp
xchg
push
ss
repz
sub
cmpl
adc
insl
sbb
adc
fwait
lods
ja
inc
mov
xorl
pushf
xchg
or
cli
fildl
pop
or
add
imul
sbb
pop
pop
cli
lds
bound
fwait
ret
cmp
sbbb
lea
clc
test
inc
lcall
movsb
xchg
sub
cmp
add
xor
mov
nop
sbb
mul
add
adc
repz
repz
pop
cwtl
mov
cmp
fstl
adc
cmp
push
fcomp
popf
sbb
cmp
push
stos
shr
sbb
fstl
jecxz
sarb
mov
adc
adc
mov
arpl
aam
pop
inc
sub
sbb
mov
gs
sbb
inc
push
pop
insb
cmp
cs
idivb
add
add
testb
dec
loope
pushf
cmp
jge
push
test
test
inc
mov
inc
inc
icebp
mov
mov
mov
dec
dec
cs
add
cmp
sbb
jmp
fnstsw
push
mov
xor
out
adc
xor
hlt
jp
scas
repnz
outsb
pop
or
adc
in
nop
rcrl
mov
daa
fcompl
mov
or
hlt
shll
leave
out
or
jns
jne
push
mov
cwtl
fnstenv
pop
jge
inc
cmp
adc
adc
and
sahf
xor
mov
mov
loop
dec
bound
jmp
inc
cmp
xchg
mull
dec
lds
aas
inc
sbb
in
push
sbb
mov
lds
imul
imul
fisttps
inc
ficomps
imul
in
out
xor
fistpl
js
add
cwtl
aaa
outsl
jnp
jnp
rorb
cltd
add
push
sbb
into
xor
lcall
idiv
or
or
add
repnz
clc
mov
cmpsb
mov
xorb
xchg
jge
cwtl
cwtl
lahf
dec
mov
pop
fldcw
fwait
push
pop
pop
xorb
loopne
mov
pop
pop
cwtl
or
test
jno
dec
sub
popa
add
push
les
popf
movsb
cli
xchg
pop
insb
and
mov
pop
out
enter
data16
mov
fiadds
mov
or
lcall
int3
mov
xor
into
cmp
scas
out
arpl
cmp
out
outsl
inc
in
cmpsb
inc
mov
lea
mov
rcl
testb
jo
push
jb
or
in
or
xchg
int
mov
dec
sub
cmp
and
mov
mov
out
fucomip
push
jb
mov
out
and
pop
cmpsb
pop
dec
in
pop
arpl
xor
xor
rcrb
dec
in
enter
cltd
pop
loopne
aaa
xchg
movsb
loopne
imull
lods
push
subl
jg
out
insl
outsl
scas
push
shll
sub
cmp
in
mov
jle
mov
sub
scas
jo
mov
jns
imul
push
iret
jl
or
add
cmpsb
aad
rclb
sbb
jne
sarb
inc
mov
les
push
fildll
jae
addr16
pop
out
pop
loopne
pop
sbb
outsl
movsl
adcb
add
mov
icebp
cmp
out
shlb
movsl
pop
xor
aaa
dec
or
cmp
std
out
push
ds
xchg
mov
jns
aam
sbb
add
jg
dec
or
push
push
shl
loop
dec
inc
daa
jp
roll
push
data16
sbb
push
pop
sub
xor
xchg
sub
dec
movsb
add
cmp
pop
cmp
mov
adc
fnsave
pop
out
out
cmp
insb
cmp
xor
int3
ljmp
or
in
das
divl
loop
testl
jbe
and
das
jno
xchg
outsb
add
fsubrs
sub
add
roll
test
mov
fdivs
insb
jbe
ljmp
cmp
cmp
mov
jno
ds
movl
jno
mov
push
inc
mov
inc
sub
negb
loopne
mov
inc
cmp
sbb
enter
and
movsb
out
adc
rol
inc
sub
sbbb
push
cmp
std
insl
and
xor
mull
add
std
jecxz
sub
xchg
testl
les
aaa
ret
jmp
pushf
and
lret
scas
sar
dec
jle,pn
mov
subb
cs
sub
sub
push
pop
dec
xlat
das
in
xchg
xchg
push
out
jne
fildl
ret
aad
cmpb
mov
les
rcll
shlb
xlat
dec
pop
scas
cmp
add
pop
sbb
xchg
andb
test
and
outsl
mov
and
arpl
mov
bound
movsb
nop
inc
inc
mov
aaa
or
inc
std
inc
inc
dec
mov
push
lcall
mov
mov
cmpb
push
in
sub
in
js
sbb
mov
jmp
std
inc
or
and
or
push
sub
sub
or
andl
andb
jle
aaa
sub
push
add
pop
mov
lcall
or
sahf
cmp
mov
jae
dec
in
jae
pop
mov
mov
jo
nop
xor
addr16
rcrl
mov
inc
bound
cmc
sub
mov
xchg
push
pop
in
in
xor
shl
dec
in
pop
test
mov
dec
inc
sub
int
enter
mov
mov
hlt
add
fldt
dec
or
mov
mov
mov
xchg
or
ja
sub
ss
hlt
rcr
cmp
push
inc
xor
rolb
loopne
test
xchg
loopne
lods
and
push
xchg
adc
mov
out
enter
jbe
sub
cwtl
cmp
mov
adc
and
sub
or
xlat
lcall
stc
jl
mov
sbb
xor
mov
ss
push
mov
xor
sbbl
jmp
fidivrl
adc
arpl
mov
xchg
and
je
stos
scas
sub
jecxz
test
pusha
jg
add
cmc
pop
push
jo
test
jb
push
lret
rorl
cmpsl
cwtl
das
cld
push
nop
mov
add
into
mov
adc
leave
sbb
loopne
popa
inc
insb
nop
mov
inc
jbe
inc
sbb
push
outsl
and
pop
adc
push
mov
loopne
leave
mov
lahf
dec
mov
in
fdiv
cs
dec
scas
cmpsb
mov
and
test
or
into
mov
jae
clc
cmp
sbb
xor
mov
ds
cmp
cmp
inc
mov
lods
add
enter
cmp
pop
nop
pop
jnp
dec
cmp
xchg
test
pop
popf
push
dec
adc
mov
icebp
mov
jecxz
and
xchg
mov
and
cmp
sbbb
sbb
or
jo
outsb
in
ljmp
pop
xchg
loope
imul
sub
pop
shr
xchg
pop
aam
mov
gs
rorl
test
inc
ret
ret
push
testb
mov
dec
adc
push
push
add
int3
sbb
or
addr16
xchg
in
sbb
cmc
sub
cmp
or
stc
imul
std
cmp
fisttpl
sbb
outsb
jecxz
push
dec
jns
pop
outsl
adc
xchg
xchg
sbb
cmc
pop
dec
adc
add
inc
enter
nop
leave
mov
lcall
std
lcall
out
sti
mov
mov
push
test
inc
sbb
dec
jne
icebp
mov
adc
in
jo
out
pop
inc
stos
ljmp
sbb
loop
mov
mov
cltd
cltd
sub
imul
jne
ret
ss
in
rcrw
in
xchg
cmp
movsb
inc
ret
push
stos
fdivrl
sbb
sub
call
mov
push
popf
cmp
fstpt
test
imul
mov
mov
mov
mov
cmp
fisttps
push
sub
cmp
push
lea
mov
pop
inc
movd
and
loopne
fcomip
je
push
in
fsts
jp
cmpsb
jnp
sbb
push
jle
pushf
or
mov
lock
test
ds
pop
jb
ret
testl
add
loop
and
adc
cmp
mov
fsubs
in
ret
cmc
incl
dec
push
mov
mov
pusha
xchg
xorb
shll
cmpl
mov
repz
push
mov
mov
sub
pop
out
jle
gs
push
dec
movsl
std
or
jno
das
dec
push
repz
jecxz
or
pop
out
xchg
repz
scas
pop
or
outsl
adc
fs
lea
shrl
rolb
xor
out
mov
mov
dec
xchg
push
cmp
insb
gs
les
xor
fcmovb
jnp
test
pop
mov
xor
cmc
in
jno
fmuls
fucom
jnp
xchg
mov
xor
shl
clc
dec
dec
jg
pop
mov
xor
jmp
xchg
nop
scas
popf
iret
int3
jo
fsts
cwtl
pop
adc
jge
inc
lret
cmpb
clc
sub
add
ds
nop
adc
loop
push
lds
xchg
in
pusha
mov
inc
sbb
dec
scas
stos
dec
bound
adc
cmp
mov
frstor
cmpsb
jno
mov
jo
pop
pushf
jecxz
lods
pop
les
sub
or
jle
jb
inc
sub
sub
subl
lea
jae
push
jp
inc
fidivs
dec
in
outsb
jnp
sub
repz
adc
andl
push
push
xchg
xor
imul
push
xchg
push
inc
loop
repnz
sbb
in
dec
xor
sbb
cmpsb
lcall
in
std
faddp
inc
ljmp
shrb
ja
add
imul
mov
test
inc
stc
not
add
fdivrl
lock
aas
fistl
inc
mov
fisubrl
lahf
pusha
jb
mov
jbe
js
call
fs
filds
and
mov
outsb
cltd
sbb
daa
lods
sbb
pop
and
shrb
mov
push
ror
push
add
push
mov
push
aam
push
xchg
sbb
sbb
pop
fwait
jns
movsb
and
jge
mov
scas
cmpsb
or
jae
cmp
imul
repz
jmp
push
fcomps
stc
dec
neg
pop
or
cwtl
lock
stos
fimull
sub
jns
mov
xlat
sub
nop
mov
and
mov
adc
gs
mov
sbb
pop
out
aam
fiadds
orb
subl
dec
jns
in
das
mov
mov
test
push
jmp
sti
pop
sub
or
fsts
cmc
movsb
and
adc
xchg
cmc
out
jmp
mov
cmpsl
xchg
sub
pop
nop
lcall
sbb
mov
fdivs
mov
out
pop
add
sti
je
jno
mov
pusha
mov
and
mov
pop
xor
fstps
ds
movsl
loope
outsl
push
outsb
aam
imul
add
cmpsb
out
cli
ss
leave
fstl
sub
ds
jp
loopne
test
or
adc
gs
fisttpll
mov
adc
clc
js
fistps
cli
mov
mov
push
pop
test
fisttpl
xor
lahf
xor
ss
daa
stos
stos
enter
sarb
incb
cmp
cmp
or
stc
fnstsw
cltd
pop
sbbl
or
loop
or
imull
in
pop
clc
adc
jmp
scas
xor
cmp
jg
jne
lea
adc
cs
cs
aam
adc
loop
loopne
insb
cwtl
addl
sub
fldl
cmp
gs
adc
mov
dec
les
rcr
test
loopne
sub
lods
iret
aam
movsl
pop
movsl
out
in
jle
lock
frstor
ret
cmpsb
mov
jno
rolb
aaa
sbb
js
scas
pusha
adc
arpl
fidivs
and
in
push
jae
dec
fnstenv
das
test
xor
into
fs
jo
adc
xor
xchg
int3
js
mov
xchg
mov
sti
adc
sbb
jg
inc
ja
mov
push
add
insl
lock
lcall
adc
fdiv
shll
lret
add
scas
cmp
or
cmpsl
pop
adc
adc
xchg
lods
jbe
adc
test
ret
leave
imul
pop
xor
cmpb
add
mov
mov
xlat
ret
jno
add
sub
int
cwtl
xchg
push
shl
fs
pushl
roll
jo
lock
cwtl
cmp
xor
scas
test
dec
std
stos
xchg
inc
aad
ret
mov
call
push
mov
mov
jp
lds
das
mov
jbe
and
ja
mov
inc
les
pop
mov
mov
insb
and
into
mov
jno
and
and
outsb
inc
jb
push
dec
push
push
popl
pop
jmp
movsb
out
imul
inc
and
insl
lods
loop
sub
sbb
arpl
add
into
pop
ret
push
cmp
movsl
pushf
push
mov
mov
fmuls
mov
int3
cli
push
call
xchg
inc
std
add
push
sbb
or
fisttps
andl
and
push
jle
xchg
out
outsl
sbb
out
mov
mov
fs
inc
inc
dec
popf
push
lods
sub
push
push
xor
or
mov
sub
cltd
mov
insl
incl
fwait
pushf
stos
add
pop
inc
xchg
lcall
cwtl
outsb
xlat
mov
push
cs
js
stc
pop
xchg
clc
sbb
sub
xchg
inc
ss
or
dec
iret
cmp
cltd
outsl
shll
add
jmp
mov
jb
and
pop
rcll
mov
adc
movsl
push
xchg
aad
or
aad
inc
ja
add
xchg
sbb
fdivs
in
jl
xor
sub
jnp
xchg
or
cld
mov
cmpsb
xlat
add
leave
sbb
imul
in
dec
and
mov
or
loopne
dec
scas
push
cmpsb
inc
xorl
fimull
dec
jmp
xchg
mov
xor
pusha
cmp
dec
xchg
and
ficomps
incl
outsl
andb
data16
push
insb
rorl
nop
mov
out
or
cmpsb
mov
or
repz
dec
and
out
jae
jae
push
mov
out
jnp
pop
sbb
out
jno
mov
inc
adcb
jg
jecxz
iret
aas
dec
scas
sarb
in
sahf
aas
pop
mov
les
and
mov
push
inc
add
and
shll
scas
imul
aaa
lret
cltd
shlb
push
inc
adc
inc
shll
sbb
jp
arpl
test
sbb
fldt
data16
mov
fadd
scas
lods
xor
xor
or
xchg
adc
inc
jae
mov
xchg
mov
mov
push
xchg
roll
xchg
xlat
int3
stos
in
cmp
pop
adc
stos
mov
inc
hlt
imul
out
push
sub
sbb
aad
fisubs
lods
xor
ret
and
cmp
iret
outsl
mov
xor
aad
sti
xchg
adc
xchg
in
inc
push
xor
ljmp
lahf
push
divb
imul
and
lods
iret
fcompl
mov
and
sahf
jp
cmp
pop
je
and
add
in
out
pop
or
mov
mov
sbb
insb
loopne
pop
sbb
push
mov
out
inc
lcall
in
pop
daa
pop
dec
mov
xor
dec
mov
test
hlt
jle
lahf
ficoms
loope
lods
mov
outsb
push
aad
addb
fsts
jge
filds
and
xor
jae
sub
jle
aad
pop
call
js
in
ljmp
repnz
shrl
movsl
sub
cltd
in
jnp
ret
pushf
and
push
lds
and
test
call
leavew
ss
add
sub
sbb
cmc
popf
and
or
ja
daa
or
mov
xsha1
cmpsb
or
sub
and
int3
jno
push
xchg
popf
shrd
jo
dec
lock
push
jecxz
push
sti
fildl
icebp
je
push
adc
imul
fisttpl
scas
lret
into
inc
jmp
out
sbb
add
and
repz
sbb
in
push
lea
or
lock
xchg
xor
insb
loop
jmp
test
ss
lds
sbb
cmp
mov
lea
sub
inc
inc
adc
hlt
inc
in
int3
int3
mov
jg
outsl
jp
cmp
int
jge
popa
cwtl
dec
jge
daa
shll
jb
into
inc
addr16
dec
stc
cmp
out
xlat
jg
int3
and
xor
addl
sahf
les
and
xorl
fdivl
and
jno
cmpsl
repnz
sbb
lds
stos
aad
stc
stos
lret
mov
ja
dec
push
xchg
xchg
inc
repz
ss
xlat
push
dec
pushf
pop
add
addb
jl
in
inc
movsb
cmp
add
mov
and
pop
jae
out
fisttpl
xchg
ljmp
mov
pop
push
sti
dec
test
inc
ja
sbb
addb
arpl
stos
xor
scas
cmpsl
fisttpll
cmpsl
les
add
lahf
dec
loop
imul
sbb
cmp
pusha
shlb
les
aaa
repnz
push
xchg
xchg
pop
push
es
fsubr
cmp
lock
int
or
xor
sbb
mov
xchg
aad
fstp
fisubl
cmp
cwtl
and
inc
cmp
xor
xchg
call
sahf
inc
mov
cwtl
mov
xorb
jmp
int3
xchg
xchg
inc
sti
pusha
ss
adc
dec
test
cli
mov
dec
addl
push
add
sub
sub
iret
or
lret
es
dec
xor
pusha
mov
jbe
lahf
push
sbb
push
mov
seta
out
cmpsl
imul
scas
loop
push
jo
pop
cmpsl
ss
out
mov
mov
inc
into
call
sbb
popf
stc
mov
bound
in
and
loope
mov
ret
das
push
sub
cs
in
pop
pop
je
jmp
insb
inc
sbbb
mov
add
movsb
insb
mov
ja
dec
cmc
movb
sub
add
int3
jne
nop
rolb
cmp
pop
pop
out
bound
repnz
jbe
nop
sub
push
add
ret
lds
adc
mov
mov
or
fs
inc
pop
xchg
cld
mov
pop
popa
cmp
adc
orb
dec
js
mov
aaa
aas
test
xchg
in
iret
mov
mov
or
enter
jp
mov
hlt
fsts
xchg
icebp
and
mov
jecxz
inc
ret
mov
mov
jae
xchg
dec
in
lcall
int
add
inc
pop
pop
cmp
pop
mov
ja
cmp
inc
cs
icebp
xor
divb
testl
sub
cmc
sahf
fisubs
adc
cli
pop
fisttpl
xchg
pop
or
inc
jno
loop
and
std
ret
cwtl
mov
and
das
push
cmp
mov
lcall
xchg
push
out
loopne
flds
mov
outsl
stos
and
inc
or
mov
mov
xchg
pusha
mov
inc
pop
push
in
xchg
pop
sahf
test
dec
sub
fdivs
push
and
sub
in
sbb
mov
adc
loopne
test
outsl
inc
adc
loopne
mulb
mov
sub
cwtl
xchg
cmp
into
je
bound
lods
push
repz
and
mov
jg
fstp
sbbb
mov
pushf
add
xor
cli
jno
mov
dec
sar
sbb
aam
dec
testl
mov
sahf
rolb
mov
roll
mov
mov
add
rol
jg
xor
or
and
cli
stc
inc
int3
ss
or
loopne
daa
gs
mov
adc
scas
ja
fisubrl
into
sub
adc
pop
mov
pop
inc
cmpsb
cmp
jl
xor
pushf
out
or
aam
movsb
jbe
imul
mov
aas
and
aaa
aas
lods
push
dec
daa
xor
pusha
add
test
daa
scas
repz
dec
cmpsb
add
aaa
inc
scas
push
ja
inc
ret
mov
fs
mov
push
in
inc
enter
and
movsl
sub
sbb
dec
sbb
add
test
fdivs
int
sub
adc
sbb
push
adc
mov
leave
fwait
imull
pop
lods
rcll
stos
dec
mov
data16
popf
xchg
mov
lock
cmpsb
lret
mov
fiadds
dec
mov
xlat
add
xchg
mov
and
xchg
fistpl
and
mov
imul
and
mov
mov
push
mov
push
push
xor
jl
jno
xchg
dec
mov
fnsave
in
aaa
jb
das
dec
in
inc
and
sbb
jmp
imul
add
mov
call
mov
in
jb
scas
dec
mov
inc
fldt
jo
out
sbb
push
rcr
jp
aad
mov
sti
popf
fbstp
scas
sbb
jle
sub
shlb
mov
out
sub
ja
sbb
add
out
push
call
mov
int
loopne
es
mov
lods
mov
push
sarb
add
dec
xchg
loope
faddp
fwait
scas
pop
mov
mov
push
xor
xor
stos
repnz
sub
add
mov
mov
sbb
adc
sub
jg
mov
fs
ret
jg
jbe
xorps
xorb
hlt
pop
enter
pop
xchg
or
mov
cmpsl
jmp
mov
or
push
lret
setb
idivl
push
arpl
xchg
xchg
fcomip
and
repz
jecxz
cmpl
jb
inc
repz
incl
orb
or
inc
lds
inc
xchg
pop
pop
dec
jno
jb
xrelease
pop
and
cmp
xor
mov
repz
js
adc
shll
daa
jp
mov
dec
ljmp
pusha
push
repz
cmpsl
xchg
jecxz
and
xor
in
ret
jns
inc
imul
inc
push
dec
mov
dec
outsb
xor
mov
sbb
mov
lods
or
and
push
cmc
cmpsl
sub
inc
jecxz
mov
jmp
cmpb
ja
jmp
rcll
call
rcrb
or
loop
push
inc
in
cld
and
out
pop
xlat
pop
add
jne
stc
add
je
xchg
jle
inc
and
mov
out
or
fidivrs
and
icebp
test
sbb
fimuls
call
sbbl
ret
jae
pushf
sub
sub
cs
mov
lcall
jg
daa
pop
jmp
jo
sub
subl
movsb
movsb
idivl
cmp
xor
test
inc
cld
leave
mov
arpl
je
jns
aaa
pop
in
mov
dec
movsl
js
push
adc
je
mov
mov
imul
jp
in
cmp
fucomp
mov
sbb
fidivrl
dec
cmpsb
nop
add
in
push
mov
jnp
inc
or
adc
clc
fisubrl
xchg
sahf
cmp
ss
jmp
mov
jl
sti
jo
shrb
aam
ret
mov
rorb
xchg
xor
jo
xor
orl
adc
mov
scas
xchg
ja
inc
xchg
cwtl
pop
lahf
and
sbb
repz
ror
dec
ja
or
pop
xchg
mov
inc
or
pop
stos
andb
scas
leave
jo
jne
insl
and
xor
add
and
call
xchg
fidivs
sub
mov
cs
fwait
je
lds
shl
mov
sbb
xor
into
jmp
out
test
incb
cmp
xchg
mov
or
lods
push
fisubrl
adc
cld
inc
inc
mov
ljmp
insb
cmpsl
inc
stc
xchg
test
mov
nop
push
xor
jns
outsl
cmp
dec
jmp
jle
rcll
add
sbb
cmpsl
pushf
mov
mov
cmp
in
pop
push
sub
iret
inc
sahf
cmp
push
sub
fisttps
mov
repz
iret
mov
lods
dec
mov
shrl
mov
iret
out
add
jecxz
shrb
mov
jns
push
dec
and
or
scas
pop
xchg
adc
fcmovu
xchg
loope
or
pop
mov
and
dec
add
addl
neg
pusha
scas
add
rcrb
cmp
scas
add
pop
in
jns
xchg
pop
cmp
testl
pop
aad
jo
ret
mov
pop
pop
dec
repnz
nop
xlat
popf
lock
sar
sbb
jmp
mov
imul
insl
add
push
test
jno
fs
jo
jp
adc
sbb
and
push
jbe
and
repz
push
insl
jnp
or
adc
sub
inc
pushf
mov
mov
adc
hlt
mov
divl
adc
jge
jo
je
sbb
inc
cmc
or
cmp
push
xor
clc
lock
sbb
sub
push
add
sub
add
adc
mov
or
aad
and
outsb
xchg
sbb
test
jl
mov
mov
imul
leave
sbb
mov
mov
mov
test
jmp
jle
push
stos
outsl
push
pop
fbstp
stos
push
mov
add
fldcw
aad
mov
jmp
mov
sub
fistl
mov
clc
or
daa
dec
icebp
pop
xor
lahf
popa
mov
adc
xorl
mov
mov
pop
cmp
push
mov
aaa
push
sub
mov
jnp
mov
lea
jecxz
rcrb
nop
lahf
je
xchg
jns
xor
push
mov
sahf
jecxz
lds
sbb
sub
mov
jbe
std
push
sbb
cltd
and
or
sbb
jle
mov
push
iret
jmp
jecxz
xor
movsb
cmpsl
lock
and
aad
mov
push
inc
outsb
test
mov
cmpsl
sub
test
outsl
pop
fisubrs
pop
pop
xor
xlat
or
add
xlat
aad
sub
adc
pop
xor
inc
jge
jbe
into
sub
xchg
lds
mov
ljmp
mov
jmp
xchg
push
or
testb
push
xchg
xchg
sahf
adc
mov
mov
sub
mov
lods
popa
out
jle
jecxz
jl
data16
pop
mov
mov
movsb
loop
test
fxch
sbb
pop
add
fildl
pop
leave
push
in
pop
ss
sbb
push
push
sub
fwait
cmpsb
repnz
loopw
add
clc
xchg
sbb
jae
outsb
dec
jle
or
cltd
movsl
imulb
fistps
std
notl
arpl
stc
repnz
ret
push
jns,pt
pushf
sub
or
test
mov
pop
fiadds
nop
fwait
iret
adc
or
xchg
pop
or
cmpsb
insb
xor
repz
mov
das
pushf
cmpsl
add
movsb
jno
fwait
repz
xchg
push
cmp
pop
jne
jb
loop
sahf
lahf
rcrb
adc
or
repnz
out
push
inc
adc
fnstcw
cmc
sahf
lret
outsl
scas
pushf
adc
inc
xor
cmp
sub
xchg
xchg
push
les
inc
ret
jg
movb
xor
add
xchg
dec
out
aad
dec
loope
and
dec
sbb
cmp
scas
popa
imulb
rcll
xlat
dec
add
jge
jge
jns
xchg
or
pusha
xchg
pop
in
mov
fstpt
adc
mov
popf
jge
and
push
jl
pop
inc
pop
dec
push
das
rclb
cltd
sbb
cld
insl
inc
ss
pop
pop
fcom
push
xchg
addr16
or
in
inc
dec
add
subl
jl
aam
ss
jmp
daa
xchg
sbb
inc
mov
gs
xchg
pop
js
fbld
ss
push
and
imul
push
pop
das
xchg
xchg
mov
xlat
mov
or
mov
mov
inc
adc
dec
mov
repnz
and
jecxz
xor
lcall
mov
incl
fdivrl
dec
cmp
clc
es
out
adc
loop
fs
aas
sub
in
mov
xor
insl
lods
cmpsb
shrb
jmp
sbb
sub
pushf
pop
cmpsl
daa
pop
ficoml
xor
adc
lret
andl
icebp
testb
inc
mov
ffree
arpl
shrb
cmc
repnz
xor
xor
pop
mov
sub
sti
out
mov
popf
shl
into
addr16
add
loop
mov
add
jns
push
insb
stos
push
fistpl
dec
movsl
scas
insl
sbb
jg
inc
sti
and
imul
mov
pop
das
or
in
fwait
mov
rorb
repz
cmpsl
push
push
call
mov
jle
push
cltd
iret
fs
int
mov
scas
inc
sub
fistpl
lcall
mov
mov
cmpb
sbb
ds
lock
cmp
fbstp
dec
mov
inc
sub
sub
jmp
aas
inc
out
loopne
mov
and
inc
addr16
or
shl
sub
pop
mov
test
stos
push
jno
mov
lahf
inc
xchg
test
and
sti
mov
cmp
lods
xor
cmp
pusha
out
push
pop
nop
cs
mov
fldl
sub
cmc
cs
outsl
fs
or
inc
popf
cmp
mov
jb
or
pop
lea
ret
lahf
je
icebp
inc
mov
insl
xor
out
cmpsb
add
jb
mov
jmp
mov
sub
mov
mov
sti
jno
xor
pop
fsubrp
aaa
leave
mov
out
enter
shl
shll
js
sbb
lods
aam
sbb
data16
daa
fisubl
pop
lcall
push
and
xor
mov
dec
out
lea
call
andb
fldenv
int
ds
rorb
add
mov
jmp
sbb
shlb
mov
adc
xchg
popf
subb
int3
iret
insl
call
fmuls
adc
adc
imull
push
aaa
scas
or
and
lds
mov
mov
push
cmc
pusha
cmp
push
or
mov
mov
push
dec
out
ret
xchg
add
fnstenv
mov
popf
ds
ja
or
arpl
xchg
ja
es
das
and
stc
mov
add
cmp
dec
xor
pop
or
popf
negb
add
cmp
and
mov
cmp
inc
out
cwtl
mov
sub
fisubl
stos
xor
xchg
xlat
mov
cld
push
inc
and
push
imul
jmp
inc
movsb
xchg
mov
clc
jl
sub
int3
jns
out
out
sub
cmpsl
pop
fcomps
or
cmp
rorb
xchg
js
cs
jge
mov
xchg
nop
push
cmpsb
testb
pop
mov
mov
or
xchg
push
jnp
insb
push
dec
inc
add
push
in
cmpsl
jge
iret
fimuls
js
push
and
test
jno
fisubs
imulb
add
push
call
push
int
test
fcompl
insl
xor
cmp
sbb
cmp
adc
dec
xchg
insl
sub
mov
lods
in
or
lret
dec
call
repnz
mov
std
cli
je
push
out
jp
mov
ljmp
cmp
aad
lahf
lret
and
pop
pop
lock
fwait
push
pop
push
cmp
pop
xchg
sub
fcmovne
addr16
push
stos
out
jb
daa
cs
loop
and
xchg
iret
icebp
ss
ss
jmp
testb
mov
test
xchg
icebp
stc
repnz
xchg
movsb
adc
lret
daa
out
push
mov
mov
pop
fildl
not
dec
iret
inc
repz
nop
popa
mov
rclb
inc
gs
sbb
or
hlt
in
popa
add
repz
sub
push
clc
insl
int
jo
jecxz
pop
cmp
xor
sub
lret
nop
add
test
repz
lock
outsl
push
xchg
call
js
and
in
push
shrl
cs
imul
or
xor
cwtl
in
mov
and
xchg
notl
mov
popa
shll
cltd
mov
insl
in
mov
or
fwait
push
std
push
xchg
stc
pushf
push
dec
push
mov
jl
xchg
mov
pop
adc
movd
cmp
cli
ja
xchg
mov
xchg
pop
push
jno
xchg
add
rcpps
test
dec
fsubrs
xchg
adcb
ja
pop
scas
fwait
mov
sub
adc
dec
jecxz
pop
sub
ficoml
lods
iret
ljmp
sbb
je
inc
jmp
adc
scas
rorl
lods
cltd
ja
pop
addl
xchg
rcrb
pop
ds
in
rcrb
jbe
iret
int3
push
in
insl
aaa
out
cmp
xchg
test
sub
sbb
vpmaddwd
popa
mov
jbe
xor
in
sbb
push
pop
jae
ret
inc
cmp
out
fs
xor
inc
or
pop
andl
xor
test
sub
dec
fmuls
loop
call
dec
unpcklps
mov
jne
insl
xor
jl
add
loopne
sub
dec
mov
and
orl
jge
adc
mulb
ficomps
int3
roll
stc
outsb
rcl
xchg
out
fwait
aad
repnz
sub
sub
outsl
std
scas
push
sbb
mov
mov
out
cmpsb
clc
mov
aad
lods
sbb
and
dec
mov
mov
lahf
in
push
stos
lcall
jle
add
lcall
cwtl
movsb
adc
sub
fbld
inc
movsb
addr16
imul
sbb
mov
rolb
xor
clc
or
enter
outsl
jb
cli
lods
mov
adc
es
data16
sarl
cwtl
stos
dec
lahf
bound
arpl
dec
mov
push
lods
xchg
dec
dec
sub
mov
push
jp
lahf
jo
aas
sbb
and
lret
inc
loope
aam
or
push
lock
aaa
pop
xchg
in
sub
mov
cli
scas
mov
adc
out
in
cmpsl
fs
gs
add
les
std
lea
mov
cmp
mov
ja
cmp
sbb
pop
xchg
jge
iret
pop
jge
pushf
jo
adc
sbb
sbb
push
or
pop
and
sub
mov
movsl
incl
dec
mov
mov
sub
leave
push
jle
ficoms
mov
in
rorb
mov
mov
std
xchg
ljmp
xchg
pop
aam
jbe
mov
test
xor
or
shlb
xor
jbe
jne
or
iret
fdivrl
test
dec
sbb
xchg
incl
cltd
ss
adc
roll
mov
das
dec
dec
pop
push
inc
je
cli
jecxz
cltd
jecxz
inc
inc
xchg
pop
scas
pop
add
dec
dec
pop
daa
testb
adc
imul
and
jl
stc
mov
test
es
js
cmc
dec
notb
arpl
icebp
mov
xorl
lds
ds
mov
add
nop
push
loopne
andb
cwtl
mov
test
int3
and
xlat
fwait
add
mov
out
jle
inc
cmp
add
sbb
fldt
add
subl
pop
pop
aad
jo
repnz
dec
push
and
mov
das
aas
or
cmpsl
test
dec
and
mov
mov
xchg
in
mov
mov
mov
mov
push
cmp
mov
arpl
mov
lret
dec
cmpsl
in
movsl
aaa
sbb
arpl
enter
insb
pop
stc
push
lods
clc
jne
adcl
inc
xlat
pop
mov
pop
test
pop
icebp
dec
xchg
je
addr16
lods
dec
jp
sub
xchg
shll
jge
sub
or
mov
test
mov
loope
icebp
sub
cwtl
out
jnp
lret
mov
and
iret
std
data16
loopne
test
cmp
in
lods
xchg
and
loope
xlat
mov
jmp
je
pop
lods
pushf
es
push
mov
fmulp
in
xchg
push
imul
push
mov
lds
aas
and
add
cmp
push
jmp
cmp
adc
mov
bound
mov
cmpsb
sub
xchg
out
xchg
and
or
cmpsl
dec
push
loop
push
jle
fwait
pusha
mov
push
inc
or
xchg
lock
std
pop
rol
sub
insl
cmpb
xchg
popf
popf
jmp
mov
mov
sbb
aam
out
cmpsb
sub
sub
and
pushf
push
les
dec
sub
mov
dec
pop
int3
hlt
and
mov
add
lds
xor
cmp
dec
repz
fs
push
cmp
addr16
push
mov
and
ss
dec
outsb
lea
fiadds
dec
dec
add
mov
inc
add
push
nop
cltd
sbb
dec
jo
out
ss
aam
outsl
pop
jnp
imul
mov
push
push
imul
dec
out
pshufw
push
icebp
xchg
xchg
cs
cmpsl
repnz
int3
orl
pusha
cmp
xchg
adc
mov
fistps
xor
mov
and
lds
outsb
mov
dec
adc
inc
ds
mov
mov
push
jmp
push
mov
popf
and
cmp
mov
stc
jl
movsl
cmc
sub
cmpl
xchg
mov
imul
push
fistl
jae
pusha
ss
mov
and
xor
pusha
or
jecxz
mov
cmpsl
pop
pusha
and
or
sarb
sub
pushf
pushf
jne
loopne
mov
clc
in
pusha
rcrb
rcr
in
mov
std
daa
sub
fcmovnb
gs
pop
sbb
daa
outsl
outsb
pop
lret
hlt
stc
jns
outsb
sbb
and
push
imull
insl
push
mov
nop
push
into
pop
jns
lcall
imul
ds
sahf
push
pop
mov
test
fstps
pop
jmp
rcrb
adc
and
mov
addl
and
jg
dec
sub
mov
repnz
cmpsb
movsl
int3
pop
in
jns
cmp
out
mov
insl
fildl
test
imulb
rclb
leave
ror
or
loopne
cltd
in
loop
loopne
push
pop
or
sahf
daa
iret
mov
mov
in
repnz
out
negb
xor
sub
pop
outsl
and
inc
xchg
mov
inc
or
jmp
cmp
test
call
into
mov
sbb
lods
sub
lea
ja
icebp
cmp
movl
das
in
dec
repz
daa
pop
aam
into
int3
je
mov
xor
dec
cmp
pushf
bound
add
push
and
gs
push
ss
mov
jle
stos
sbb
push
pop
mov
mov
jb
popf
mov
lahf
adc
sbbl
es
xor
ss
jno
es
or
mov
sbb
or
push
movsb
push
fadds
pop
sti
cli
out
xor
sbb
jmp
add
leave
or
jl
test
xchg
mov
leave
addl
outsl
pop
push
inc
cmp
subl
xchg
mov
pop
cmp
xchg
sbb
insl
sahf
ss
sbb
mov
rol
xchg
mov
mov
dec
xchg
out
pop
push
outsb
or
and
lret
push
stc
popf
mov
jmp
enter
adc
dec
stos
lahf
inc
sub
dec
clc
leave
inc
dec
mov
rolb
pop
sbb
mov
andl
pop
push
add
mov
xor
add
stos
sub
popa
add
mov
rcrb
cmpsl
in
sub
leave
stos
sbb
cmp
les
es
push
ret
lods
mov
mov
mov
mov
push
test
ror
into
cmpsl
sub
sahf
cmp
addr16
loope
dec
lret
jmp
sbb
or
mov
inc
scas
push
stos
loope
lret
cmp
div
jge
inc
les
pop
shrl
arpl
std
push
nop
xlat
call
sti
out
jp
mov
lods
jl
xchg
add
bound
push
dec
shll
dec
iret
fsincos
xchg
sbb
cmp
xchg
mov
mov
mov
jmp
loop
idiv
fistl
pop
mov
fninit
cltd
and
jmp
push
bound
hlt
pop
and
lock
push
sahf
imul
inc
xchg
inc
aad
xchg
shr
cltd
jecxz
mov
or
cmc
dec
aaa
loop
fs
insl
xchg
out
jecxz
mov
int
jb
inc
mov
xor
stos
mov
je
nop
cli
mov
scas
pushf
rcrl
mov
dec
dec
push
lods
push
mov
adc
lods
stos
cs
repnz
insl
ss
mov
jnp
in
jbe
cmc
rclb
or
ljmp
out
in
mov
dec
sti
lret
cmp
cmc
jmp
pop
pusha
pop
sbb
out
jecxz
fidivs
cmp
add
test
pop
mov
inc
repnz
aaa
xchg
rcrb
adc
and
mov
rolb
adc
xor
jp
imull
aad
test
push
mov
stos
cmp
aad
loope
fsubrl
jecxz
adc
loope
cs
scas
and
adc
mov
pop
cs
jo
jmp
ljmp
mov
pop
mov
lcall
dec
pusha
cltd
or
push
push
add
dec
ja
popa
mov
repz
stos
jle
scas
sahf
mov
push
fdivs
mov
fbld
fbld
sub
cmc
inc
outsl
xor
cmpsb
push
clc
inc
std
in
sti
add
cmp
aam
dec
setns
mov
lea
inc
push
and
xchg
in
jl
adc
xor
movsl
sarl
stc
xor
and
pop
or
jg
stos
xchg
mov
push
rcrl
mov
pop
lret
test
dec
sbb
pop
jnp
clc
push
loop
push
iret
lods
and
jge
mov
negl
mov
loope
stos
add
aam
test
test
in
mov
xchg
out
arpl
mov
lahf
add
xor
out
lock
sub
ss
inc
test
loop
jns
push
in
divb
adc
mov
sbb
outsl
out
push
sarb
daa
int3
and
inc
adc
cmp
pop
in
xor
xchg
popa
xor
xchg
cmp
cmp
scas
daa
mov
shr
add
and
cld
add
aam
lods
push
shll
gs
mov
pop
pop
cmc
mov
mov
aad
xor
outsl
sahf
cmp
repz
add
sbb
fwait
outsb
cmc
out
imul
enter
bound
mulb
add
orb
out
roll
xchg
add
cltd
and
mov
sti
dec
cmp
cwtl
inc
add
dec
loopne
inc
mov
mov
xchg
cltd
int
xor
jecxz
aam
popa
hlt
adc
jo
mov
inc
lcall
insl
or
ja
or
mov
xor
sbb
mov
pushf
filds
xchg
int3
hlt
add
or
dec
ficomps
and
pop
lods
and
test
les
negl
cs
fstpt
jle
adc
les
fcomi
xchg
cs
jmp
dec
sub
jae
mov
inc
add
sbb
shl
and
cmpsb
xor
and
jo
pop
faddp
mov
mov
inc
xchg
adc
data16
mov
mov
in
fsub
cwtl
inc
pop
movsl
ficoml
add
aam
lock
les
pop
scas
mov
push
and
imul
jbe
lds
cltd
jne
jmp
and
push
adc
imul
arpl
mov
scas
mov
xchg
xchg
cmp
jnp
push
pop
rorl
push
and
pop
movsb
sbb
push
push
outsb
in
lret
fsubl
adc
xchg
inc
mov
mov
and
out
clc
lods
inc
mov
inc
xchg
and
xchg
xchg
pusha
xchg
push
jmp
push
mov
xchg
mov
add
in
xchg
lea
xor
data16
mov
or
xchg
and
and
sbb
data16
aas
int3
test
push
ret
pop
dec
cmc
mov
add
xlat
xchg
pop
lods
dec
jge
mov
imul
loopne
ds
es
out
sahf
push
dec
test
pop
xchg
fcoms
popl
inc
push
jmp
dec
add
dec
mov
test
add
fst
or
daa
lret
push
dec
and
jno
mov
les
sbb
cld
cmp
imul
sbb
dec
nop
bound
dec
adc
aaa
sub
orl
cmc
mov
pop
mov
stc
xchg
lahf
cld
add
daa
stc
jbe
xchg
add
dec
bound
idivb
sub
das
lea
aad
lret
xchg
movsb
xchg
push
adc
cli
dec
jae
popa
pusha
and
ds
pop
call
jmp
jbe
adc
ja
mov
loop,pn
out
imul
dec
jmp
fs
inc
incb
push
and
jmp
fimuls
or
lock
scas
in
pop
cld
out
into
mov
jmp
daa
push
fs
add
jae
and
adc
fcoms
or
cmp
adc
pop
xor
pushf
fdivl
xchg
xchg
jg
adc
adc
and
fcmovnu
shll
dec
xor
in
stos
lret
xchg
jmp
mov
rorl
fimuls
ret
fwait
or
add
cld
adc
scas
mov
sub
dec
adc
mov
imul
repz
stc
in
loope
xchg
insl
gs
orb
inc
dec
jb
lods
jecxz
mov
sbb
dec
pop
dec
lcall
push
ret
add
xor
lock
aam
mov
popa
mov
xor
pop
int
mov
lret
cmc
pop
insb
jecxz
dec
loop
and
int
push
jge
call
dec
inc
cld
xchg
mov
shlb
dec
outsl
mov
mov
cwtl
or
aad
dec
dec
and
cli
add
enter
test
in
shl
js
cwtl
dec
stc
push
dec
cltd
mov
enter
xchg
sbb
mov
cld
add
pop
fisttpll
sub
rcrb
je
and
xor
outsb
frstor
test
orl
mov
xorb
lret
ret
dec
out
fadds
push
lea
js
xor
jmp
int
in
repz
mov
iret
lret
inc
dec
daa
inc
dec
cmpsl
pop
lods
iret
ret
popf
js
push
push
test
fs
in
lds
jae
sbb
add
xor
and
push
cs
mov
les
jno
enter
shl
icebp
int
mov
push
shl
dec
data16
jb
std
adc
lods
pop
mov
das
ljmp
out
arpl
mov
lret
sbbl
pop
mov
cmc
mov
out
adc
scas
addr16
sbbl
outsb
jle
mov
or
lea
mov
in
loop
jecxz
out
andb
push
dec
mov
pop
test
push
insb
les
inc
pop
ss
js
ljmp
cmc
sbb
push
bound
xlat
xchg
cwtl
testl
cs
mov
push
repnz
mov
cmp
push
push
lret
inc
and
xchg
mov
dec
fdivs
or
push
mov
cmpsb
popf
leave
mov
xchg
xor
or
xor
inc
jnp
xchg
mov
shlb
es
int
sub
xchg
test
and
call
iret
xor
adc
jno
das
jge
push
and
mov
mov
sbb
and
fldl
mov
mov
testb
xchg
adc
inc
xbegin
icebp
cmp
and
pop
divl
arpl
aaa
mov
and
jbe
push
jg
push
in
mov
lock
nop
movsb
add
dec
or
xchg
push
aam
inc
jmp
or
add
fwait
pop
loop
mov
dec
cmpsb
je
xchg
mov
cli
addr16
cld
inc
mov
insb
movsl
inc
aad
push
fisubl
jbe
test
movsb
cmp
cld
std
popf
dec
mov
xchg
outsl
sub
sub
cmp
test
push
pop
mov
repnz
xor
adc
test
jg
loope
stos
dec
mov
mov
in
sbb
mov
push
loope
lock
ja
imul
mov
or
and
leave
aas
dec
push
cmp
or
scas
lds
pop
inc
push
mov
add
lea
inc
andl
in
push
sbb
cld
arpl
lret
sarb
stos
ret
pusha
cmp
xchg
sbb
add
pop
out
sbb
ljmp
pop
or
cmp
inc
into
cmp
out
pop
sbb
xchg
fiaddl
arpl
scas
sub
jb
dec
inc
imul
adc
mov
or
sti
movsl
xor
push
out
in
jl
test
mov
js,pn
jnp
insb
int3
mov
pop
cltd
mov
fdivl
xor
ss
mov
push
les
neg
icebp
hlt
dec
rolb
enter
enter
mov
scas
clc
jecxz
out
sbb
sbb
es
out
push
popf
fidivs
and
and
leave
test
jno
sti
push
call
jmp
sub
lock
cli
dec
dec
scas
icebp
out
lcall
cmp
fwait
xchg
std
xlat
call
das
cmp
add
sbb
jmp
sbb
jno
xchg
aad
enter
movsl
fisttpl
add
jle
outsl
dec
dec
ficomps
and
xor
stc
cmp
outsl
push
gs
loope
std
rorl
mulb
add
jp
push
dec
cmc
aam
sti
cmp
sahf
push
or
not
inc
dec
mov
fiaddl
subl
push
imul
xchg
test
cltd
push
andl
mov
pushf
out
jecxz
out
dec
push
addl
add
repz
and
loope
sub
adc
ljmp
in
sti
mov
aaa
ljmp
scas
iret
and
add
jbe
std
jp
je
icebp
mov
xor
or
adc
adc
stc
and
shr
and
pop
in
shl
aas
push
out
cwtl
lea
subl
data16
and
mov
dec
sbb
push
push
insl
push
pop
sti
and
sbb
in
and
fisttpl
mov
lahf
push
push
lock
jne
subl
sahf
iret
or
out
aam
mov
cwtl
mul
bound
ss
mov
push
xchg
lcall
xchg
std
in
mov
pop
mov
cmp
movsb
cwtl
mov
dec
mov
xchg
xor
outsb
mov
das
cli
fldcw
pop
and
mov
hlt
sub
pop
imulb
int
rcl
sbb
and
aad
rcrl
repnz
out
cli
into
dec
cld
pop
xor
aad
loop
imul
das
adc
dec
test
lds
xor
ja
les
int3
pop
mull
adcb
jne
push
xchg
xchg
mov
mov
xor
loop
dec
mov
pop
cmp
xor
mov
scas
ret
jo
jg
stos
daa
add
lcall
pop
decb
jbe
les
outsb
outsl
push
or
scas
test
cmp
pop
std
outsb
inc
shlb
and
in
outsl
lahf
jecxz
and
cs
cmp
inc
fisttpl
mov
fldt
pop
and
mov
xchg
lods
in
pop
les
js
mov
fwait
ds
mov
mov
les
push
ret
mov
shll
cmp
lods
loopne
adc
inc
adcl
xorb
cli
push
mov
lods
imul
es
push
pop
xchg
jecxz
add
pop
lret
sahf
xor
mov
jo
movl
test
insb
mov
faddp
cmp
lods
ss
cltd
nop
or
dec
out
lods
pop
push
inc
or
nop
std
lock
add
int
popa
insb
stos
sti
test
jge
rcrl
pop
cmp
mov
add
jbe
add
mov
xor
int3
in
mov
mov
mov
out
out
not
fs
arpl
push
ss
cmp
jno
sub
rcrl
xchg
cmc
and
inc
loopne
cmp
int
pushf
pop
dec
in
jns
dec
lea
out
je,pn
mov
stos
lods
repz
add
cmp
pusha
inc
loope
or
bound
frstor
repnz
repz
out
sub
lds
not
push
dec
stos
mov
adc
xor
xor
inc
xchg
fimull
mov
push
popa
pop
fnstsw
inc
pushf
rolb
movsl
mov
pushl
les
push
sub
cwtl
jb
dec
push
lods
stc
cs
add
jge
sub
jo
std
gs
xor
dec
aad
rcl
or
jl
outsb
orl
pop
push
call
mov
push
sub
push
inc
rcrb
mov
int
je
adc
pop
pusha
push
xchg
push
jb
sbb
xor
sbb
add
inc
and
je
and
in
or
push
js
cli
mov
adc
lret
shlb
sbb
leave
out
inc
dec
xchg
rolb
es
mov
mov
push
inc
inc
push
mov
in
loop
jno
jp
imul
cmp
test
shll
in
push
es
mov
stos
addr16
movsl
sub
fwait
stos
jns
loopne
lods
lds
xchg
mov
scas
xchg
iret
lret
pop
sahf
pop
insl
repnz
fisubrl
or
js
iret
lret
pop
pop
cs
mov
mov
inc
mov
das
or
leave
mov
sbb
mov
cmc
fcmovb
mov
mov
mov
mov
loope
int3
loopne
sbb
cmp
mov
mov
outsl
into
xorb
jns
les
or
jmp
les
testl
sahf
in
fsubl
cmp
fldl
push
sub
adc
and
idiv
jns
shrl
push
sub
or
add
cmpsl
insb
pop
fldl
xchg
fidivrs
sub
test
imul
daa
fwait
loope
pusha
shll
jbe
mov
lahf
jns
in
hlt
mov
fidivrl
clc
and
add
xor
insb
fidivs
mov
adc
int3
popa
jg
repz
aaa
pop
pushf
push
cmp
movsb
jg
pop
xchg
stc
mov
cbtw
shr
xlat
jno
pop
mov
mov
mov
out
movsb
ljmp
addb
int
mov
dec
dec
ret
stc
and
ja
cmpsl
lret
mov
mov
mov
sbb
cmp
jae
popa
mov
fsubrp
sub
fcompl
andb
enter
mov
cmp
adc
push
or
hlt
push
scas
inc
pop
jns
dec
sbb
xchg
jle
test
xchg
iret
rorb
roll
mov
inc
in
xchg
fdivrs
dec
into
daa
sbb
dec
and
push
lods
cmp
repz
xchg
mov
jo
cmpsl
stos
xchg
in
insb
mov
pop
cld
mov
mov
or
sbb
pop
adcb
xchg
pop
adc
push
xchg
nop
fs
out
push
test
jns
adc
movsb
mov
sub
loopne
mov
pop
mov
mov
inc
movsb
inc
movsl
sub
push
adc
mov
test
push
arpl
sub
xlat
mov
mov
mov
insl
jecxz
inc
and
icebp
insl
imul
aad
mov
int
inc
mov
jle
push
addr16
aam
jl
mov
and
sbb
je
lcall
cltd
pusha
enter
inc
sahf
movsl
push
iret
pop
sti
mov
cmp
push
scas
popa
xor
lret
je
dec
cltd
xchg
pushf
jmp
shr
in
jp
mov
add
mov
adcb
jg
lods
in
int3
test
dec
sub
add
jb
jecxz
mov
stos
popf
mov
and
fs
imul
lcall
dec
sahf
fisubrl
lods
cwtl
push
cmpb
fs
inc
adc
pop
inc
clc
test
int3
cmpsl
in
push
xchg
insb
inc
imul
adc
add
xlat
jl
mov
je
ds
and
jo
into
cmp
bound
adcl
lds
loopne
push
sbb
lahf
dec
loopne
sub
ret
mov
iret
or
push
mov
jne
adc
outsb
dec
sysenter
add
shrb
lods
sarb
mov
insb
mov
sarb
out
in
mov
stos
sub
cmp
icebp
inc
sbb
insb
mov
sub
cmp
imul
jge
jmp
xchg
adc
sbb
outsl
push
mov
xor
adc
mov
les
arpl
scas
loope
repz
inc
cmp
sub
and
xchg
jb
pop
sub
and
mov
add
sub
loopne
mov
pop
xor
in
jl
dec
sbb
ja
sti
jnp
incl
lock
cmp
xchg
xchg
jl
jge
pop
cmpsl
sbb
vpunpcklwd
cmp
jmp
xor
hlt
fwait
std
nop
or
in
cmp
or
jl
add
cmpsl
mov
jmp
lods
cwtl
cmpsl
fldl2e
sbb
dec
popl
test
int
dec
xor
mov
ja
push
mov
xchg
loope
daa
test
cmp
xchg
stc
xchg
aad
adc
sahf
cmc
ret
xlat
rcrb
mov
cld
mov
pop
mov
data16
push
test
insl
hlt
inc
mov
data16
sub
xchg
push
push
pusha
xchg
mov
or
push
dec
xlat
mov
fdivrs
fstps
sub
or
pop
pop
pop
adc
mov
cmp
cld
in
or
push
jg
sahf
and
out
jg
roll
xor
cld
cli
dec
test
and
fs
loopne
xchg
pop
fdivr
sub
pop
xor
adc
push
subb
aam
pop
dec
mov
test
mov
pop
scas
js
in
pop
fnstcw
andb
jp
dec
sub
test
lods
cmpsl
leave
jns
dec
cmp
push
out
incb
sarb
pushf
out
test
inc
test
mov
test
das
sbb
push
jle
clc
vxorpd
cmpsl
cmp
dec
test
or
stos
mov
add
je
add
cmp
mov
mov
sbb
lcall
insb
cmp
xlat
jns
dec
jmp
xor
mov
mov
aaa
or
cmp
sub
pop
sahf
pusha
xlat
pushl
inc
add
xchg
mov
repnz
sbb
sub
mov
fidivrl
ljmp
push
imul
pop
aam
ljmp
xchg
mov
sbb
mov
out
andl
dec
rclb
hlt
nop
xorl
push
sbb
cmp
ds
scas
fdivl
xchg
iret
pop
stos
data16
and
add
aam
xchg
sbb
and
jp
push
push
jnp
pop
sbb
dec
jl
cmpsb
mov
push
leave
in
in
imul
and
pushf
sahf
pop
jno
xchg
pop
mov
or
test
stos
stos
shll
in
dec
lahf
daa
cld
xchg
sarl
popf
or
lret
test
inc
popa
jne
pop
les
inc
je
jecxz
insl
push
int
mov
jmp
mov
pop
pop
jnp
dec
push
push
cltd
ret
sti
stos
inc
mov
fadd
mov
jmp
icebp
cmc
jno
and
jle
call
nop
in
and
sub
push
mov
movsl
rcll
xor
test
lret
fldl
lea
std
lods
lock
popa
mov
out
mov
sbb
push
dec
push
ret
insl
sub
fisubl
cld
xchg
adc
jge
cs
cmp
clc
xchg
imul
or
mov
notb
incb
lret
xor
stos
arpl
mov
mov
xor
out
in
cld
pop
data16
and
mov
xorl
xchg
sbb
and
movsl
jp
scas
and
aam
addr16
aad
ja
xchg
xchg
and
mov
jns
pop
pop
inc
jmp
in
add
mov
test
xchg
fsubrl
mull
pop
out
add
shlb
mov
dec
sub
xor
push
lcall
push
xor
ds
push
dec
imul
nop
cmp
sbb
sbb
arpl
mov
dec
xchg
xchg
dec
push
or
mov
inc
push
mov
movsb
mov
adc
and
sbb
fwait
into
mov
xor
lcall
xor
in
les
aaa
out
out
fisttpl
ds
mov
cmp
subl
movsb
icebp
xchg
mov
mov
push
lret
xor
out
pop
sub
jmp
sub
xchg
call
jecxz
rcrl
mov
test
stos
stc
add
xchg
fimuls
stos
lret
and
cmp
stc
stos
fcmovnbe
sbb
add
test
dec
inc
leave
orb
and
mov
dec
cmp
push
lods
dec
hlt
jne
mov
ljmp
mov
xlat
jl,pn
rolb
test
push
ret
sahf
movhps
cmp
aad
mov
repnz
ss
and
int3
sub
adc
rcrl
bnd
loope
sub
fnstenv
jae
mov
outsb
mov
pop
or
lds
cmpsl
negl
cmpsb
and
aaa
jae
les
mov
movsl
add
lcall
mov
pop
int
sbb
xor
repnz
jmp
stos
xorb
sbb
jle
inc
repnz
cli
and
idivb
aaa
jmp
mov
es
xchg
in
std
push
cmp
sub
test
fdivrl
iret
lahf
jns
jp
repnz
xchg
test
shll
gs
pop
mov
push
inc
xor
jno
icebp
popf
fists
cmp
negl
shlb
popf
jbe
gs
stc
cli
add
push
pop
nop
jo
and
dec
and
push
sub
adc
adc
pop
cs
mov
pop
out
mov
mov
repnz
mov
orb
test
imul
or
mov
imul
daa
idivb
std
mov
repz
ss
cmp
fucomp
pop
push
sbb
sbb
sub
cmc
dec
scas
and
inc
push
sbb
rep
xchg
dec
rcrl
mov
lcall
fstps
fisubs
fmuls
adc
add
arpl
icebp
popf
jne
mov
or
ljmp
cltd
sub
dec
and
rcll
mov
movsb
push
adc
imul
sbb
rorb
push
adc
xchg
es
bound
push
cmpsl
in
xlat
lret
mov
inc
cltd
fdivl
bound
leave
cltd
ret
in
clc
dec
les
and
imul
imul
add
push
idivb
mov
fs
mov
popf
loope
jl
push
jl
rol
adc
pop
sub
idivb
shr
jnp
xchg
je,pn
out
xor
mov
testb
test
ret
push
outsb
std
jno
inc
mov
mov
mov
test
jae
enter
outsl
jno
arpl
mov
sub
scas
sbbb
ffreep
mov
cmpsb
popf
inc
sti
insl
test
adc
rcrl
add
cld
cmp
mov
leave
push
inc
rolb
jo
add
cmp
shrb
mov
xchg
mov
or
jle
ss
inc
fnstcw
or
and
fsubrl
sbbl
sbb
sub
nop
jg
sbb
in
sub
addl
xor
push
push
cmp
out
inc
sub
xor
lret
jge
pusha
xor
sbb
mov
mov
pop
ficomps
test
mov
mov
enter
daa
or
pop
clc
add
mov
cwtl
lcall
push
bound
cmp
aam
pusha
cld
lds
sar
pop
mov
aas
sub
mov
in
lds
adc
je
jle
add
scas
in
cs
mov
add
ret
adc
lret
repnz
mov
jle
fistps
outsb
fnsave
mov
pushf
pop
jg
xor
jl
xor
lret
mov
nop
mov
imul
pop
fwait
rorl
dec
push
mov
lock
lret
in
xchg
push
clc
pop
mov
test
rol
pop
iret
push
mov
add
cwtl
jo
decb
jno
fbstp
and
dec
sub
cmc
adc
call
nop
adc
bound
mov
add
mov
inc
dec
add
jmp
popw
subb
sbb
mov
popf
jo
dec
xchg
add
jmp
add
cli
mov
pop
adc
pop
addr16
push
mov
add
lock
dec
out
loop
fists
aaa
orb
add
insl
xchg
imul
cmpl
ret
addr16
mov
test
fdivrp
cmpsl
adc
pop
cmc
xchg
sbb
sahf
mov
enter
out
sarl
adc
push
push
loope
in
pop
cmpsl
and
in
inc
inc
mov
add
push
mov
or
enter
jmp
mov
inc
stos
lds
imul
aad
mov
pop
aas
inc
add
mov
pop
inc
add
mov
subl
inc
mov
xlat
jbe
pop
enter
scas
dec
xchg
in
pop
ret
leave
cmc
cmp
sbbl
incl
mov
push
test
pushf
aas
pop
pop
lock
ds
in
and
xor
jb
push
gs
bnd
and
stos
jg
out
ss
inc
push
je
xchg
rorl
imul
pop
jb
cli
aaa
push
ret
int3
jmp
nop
pop
pop
cmp
jns
cmpsb
xor
rorl
jmp
push
jo
jnp
adc
rolb
xchg
mov
dec
inc
add
cmp
mov
mov
lret
add
scas
ret
cs
jle
mov
mov
iret
jl
push
sub
js
add
push
lods
mov
or
xor
xchg
push
les
push
sahf
cld
data16
outsl
mov
loopne
or
jl
mov
ss
sbb
xor
int3
xor
inc
ret
sub
mov
add
or
jp
sti
bound
jbe
xchg
rclb
mov
in
pop
addr16
adc
push
dec
out
js
call
shlb
jno
jbe
adc
mov
inc
cmpsl
scas
test
popa
imul
cmpsb
shr
push
mov
repz
mov
or
add
xor
cmp
sub
mov
int
and
imul
sbbl
adc
call
mov
out
xchg
xchg
mov
enter
dec
imul
roll
push
int
xchg
jbe
addr16
add
sub
outsl
in
pop
int
in
pop
cmp
int
ficoms
add
aaa
or
aas
sbb
jb
aad
sbb
mov
aam
into
and
rcrb
orl
in
cmc
push
fsub
and
lds
jne
lret
js
les
pop
mov
testb
std
xor
adc
pop
fildll
add
shrb
mov
repz
cmpsl
icebp
insb
inc
xor
stc
icebp
dec
movsb
out
jp
push
cmp
xchg
cmpsl
nop
mov
mov
pop
repnz
inc
lcall
stc
add
jno
or
inc
sub
mov
notw
dec
dec
out
mov
sarl
xor
aas
or
popa
push
jmp
sbbb
fcomps
daa
insl
ljmp
inc
xor
stos
cs
out
into
out
outsb
in
pop
adc
ret
aaa
sub
jnp
je
mov
bound
dec
adc
stc
pusha
loop
jbe
rcrb
dec
out
and
jecxz
or
mov
or
pop
movb
dec
cmc
mul
xorl
lods
ljmp
or
in
fmul
shlb
test
fisubrs
icebp
in
cwtl
xchg
adc
jle
sbb
inc
cmpsl
cltd
les
pop
fdivl
icebp
cltd
inc
aas
or
sub
sbb
jl
push
jo
dec
sub
mov
test
and
out
out
inc
or
mov
jmp
mov
js
cmpsb
mov
xchg
mov
sti
lea
push
push
dec
mov
or
push
sbb
fstl
hlt
loopne
adc
push
push
inc
sub
xorl
xchg
cmp
aam
mov
jbe
push
scas
jl
outsb
ror
stos
imul
mov
mov
adc
insb
jle
iret
mov
jle
jnp
dec
mov
mov
repz
jo
fisubrs
mov
cmp
addr16
mov
or
jp
in
push
data16
stc
lahf
pop
mov
int3
pop
pushf
dec
cmpsl
pop
adc
scas
orl
xlat
jns
in
or
out
clc
jnp
adc
mov
inc
add
jno
in
enter
and
push
cmp
xchg
imul
pop
sub
fistpll
filds
test
icebp
mov
sub
ret
in
lea
mov
mov
rcrb
shl
cmp
fisubl
sub
mov
sub
mov
daa
aaa
lcall
pop
out
xor
fstps
adc
jno
aaa
shll
mov
jmp
out
scas
push
mov
pop
sub
sub
sub
adc
je
sub
lret
sbb
cmp
pop
cmc
lock
and
xchg
or
push
clc
in
rolb
push
push
dec
jmp
dec
aam
pop
push
addr16
jae
push
inc
mov
fdivrl
scas
add
popa
iret
scas
xor
jge
sbb
mov
pop
xor
hlt
cs
dec
imul
and
pop
jmp
inc
inc
arpl
fs
and
jl
in
insl
adcl
add
fcom
mov
adc
jae
xchg
xchg
pop
mov
mov
sbb
mov
into
outsl
push
sbb
pop
enter
push
imul
push
test
mov
cmp
rclb
jbe
pop
push
les
in
pop
sub
aam
inc
xorb
xchg
push
xchg
mov
addr16
add
lret
shll
divb
jecxz
mov
fstpt
call
shr
sbb
jno
mov
sub
mov
xor
sub
push
pop
push
dec
xchg
pop
or
inc
leave
mov
mov
sub
js
lcall
pop
test
push
out
std
cmp
and
cld
fwait
inc
iret
or
pop
pop
xor
sbb
ljmp
sub
clc
adc
out
lret
insl
arpl
push
jle
mull
mov
and
fldl
inc
lret
outsb
stc
repz
and
mov
mov
pusha
push
xchg
push
in
imul
aam
jge
and
in
test
push
dec
adc
lods
adc
cmp
inc
fcompl
or
outsb
ss
or
call
sub
imul
mov
popa
cmpsl
and
data16
inc
mov
ret
sbb
cli
test
dec
pushf
jg
add
pushf
test
xchg
call
jo
pop
xchg
clc
out
xchg
in
and
ret
ss
cmc
xchg
mov
cs
repz
scas
test
sarl
add
jg
pop
xchg
ljmp
ljmp
mov
mov
aam
mov
mov
popa
add
scas
sbb
les
inc
loop
fwait
mov
stc
shlb
cmp
push
xlat
xchg
push
sbb
lahf
mov
es
xchg
xchg
pop
lods
pop
in
sbb
mov
push
in
mov
add
popa
out
iret
ret
aas
pushf
ficoml
ds
cwtl
divl
ficompl
pop
aad
inc
jns
pop
adc
xchg
fwait
outsl
dec
mov
jae
out
xchg
aad
ss
pop
lcall
pop
push
adc
arpl
jno
lods
loop
mov
push
lea
xor
in
mov
xchg
sahf
int3
es
pop
scas
test
aas
movsb
jecxz
movsb
mov
or
arpl
and
loope
push
test
mov
dec
test
repnz
add
dec
mov
pop
lock
enter
or
ret
jp
nop
sbb
or
loop
dec
jecxz
cltd
movsb
jmp
mov
cmp
jb
pop
shll
push
popa
movsb
jne
enter
pop
dec
and
or
pop
pop
xor
and
mov
loop
add
imul
test
popf
iret
sar
fwait
aas
fistpll
sub
repz
mov
and
mov
out
inc
cmp
fcmovne
mov
push
pop
push
jno
add
inc
xchg
jns
dec
dec
hlt
adc
jnp
in
shll
inc
aad
scas
add
adc
sub
jg
popf
xchg
pop
fs
cld
aaa
data16
imul
pop
lret
push
and
push
daa
ret
mov
and
gs
fcmovnb
mov
mov
xchg
imul
hlt
aad
mov
inc
push
mov
cmp
cmpsb
rcll
mov
notb
call
ss
add
mov
and
pop
xchg
xor
or
push
sbb
divl
ficoml
jno
das
sub
incl
xor
dec
fnstsw
sbbl
lea
sub
mov
add
aam
aas
mov
adcb
jae
mov
out
jecxz
push
cld
dec
mov
dec
push
inc
jl
add
xchg
sub
cmp
inc
scas
xlat
jbe
sbb
mov
mov
incl
aas
sbbb
pop
sbb
aas
stos
add
jo
xchg
add
sub
and
xchg
lods
cli
fisttps
mov
rclb
ret
push
jp
push
std
test
iret
dec
popf
adc
lret
xchg
out
adc
mov
shrb
fs
mov
iret
xchg
insb
push
cli
and
adc
enter
add
ljmp
popa
mov
dec
or
pusha
rcll
mov
jg
push
xchg
lds
add
lcall
cli
fcoml
xchg
stc
mov
inc
stos
xor
lcall
add
push
subl
rcrl
scas
stos
ret
adc
mov
or
ret
mov
push
cmp
inc
or
mov
push
sbb
popa
inc
scas
pop
jns
xor
xchg
inc
vhsubps
sub
insb
xor
jne
push
and
sbbl
adc
inc
rcrb
sbb
lods
dec
cltd
dec
sbb
daa
mov
and
data16
ss
test
into
xor
xchg
stos
ret
and
or
and
out
and
loop
lahf
enter
push
stos
cmp
in
pop
and
mov
pusha
inc
test
je
xchg
sub
xor
in
hlt
jl
test
jnp
imul
popf
sbb
mov
inc
push
das
icebp
lods
inc
sbb
movsb
int3
xlat
cli
mov
call
idivb
or
mov
pop
and
inc
frstpm(287
filds
in
ja
dec
jg
pop
mov
rorl
mov
add
cmp
sbb
push
xchg
loope
xchg
mov
scas
out
nop
push
lock
js
shrb
jnp
je
mov
dec
bound
xchg
mov
sbbb
and
adc
ss
mov
pop
jno
dec
flds
dec
or
cmp
scas
outsb
jb
push
mov
mov
push
ja
test
mov
mov
stos
xor
xlat
xchg
pusha
and
mov
fistpll
inc
fimuls
cld
fwait
data16
xor
fildl
add
dec
inc
addr16
inc
xchg
mov
scas
jb
popa
jge
push
xor
das
xchg
sbbb
idivl
jmp
sub
pop
scas
lods
add
push
jnp
fbstp
push
imull
sbb
out
add
mov
cmpl
xchg
adc
jg
dec
and
pop
mov
ret
repnz
addb
push
int
push
dec
xor
lea
cltd
icebp
daa
sbb
adc
push
mov
mov
dec
push
sbbb
lcall
inc
adcb
and
icebp
in
aam
adc
dec
popf
push
mov
in
dec
ret
add
lret
inc
and
cwtl
inc
jno
dec
jb
ss
mov
rcll
insb
data16
loop
inc
pop
push
pop
sahf
adc
int3
inc
cli
fsub
js
fcmove
pop
adc
dec
mov
xchg
shlb
inc
cmp
push
out
subl
mov
cmp
inc
and
xorb
xchg
inc
aam
push
cmp
sbb
push
in
mov
cmp
push
jnp
adc
scas
xorl
jbe
in
pusha
xor
ljmp
ja
xchg
cltd
xchg
bound
push
dec
dec
or
test
loope
std
dec
add
adc
movsl
jne
xor
arpl
jbe
rclb
fs
jb
movsb
call
ss
sbb
inc
pop
shrb
fucompp
xchg
dec
dec
test
shlb
sbb
add
aas
sbb
xor
jns
xor
movsl
mov
cld
sub
sub
imul
clc
sub
divb
xlat
enter
xor
loope
out
pushl
jno
aas
add
cmp
push
imul
adc
scas
xchg
push
or
adc
xchg
sbb
dec
pop
dec
jne
adc
inc
test
mov
pusha
cltd
xor
mul
mov
sub
pop
xchg
scas
aaa
xchg
test
lds
in
add
mov
dec
dec
nop
sub
mov
cld
push
sbb
fwait
sub
leave
in
sahf
lock
jg
repz
jle
sbb
adc
test
insl
imul
xor
jge
call
fidivl
push
bound
lock
iret
inc
icebp
inc
std
jnp
mov
dec
aas
andb
jle
mov
pop
mov
call
inc
cwtl
jbe
push
or
mov
dec
notl
sbb
adc
int
xor
insl
or
data16
sti
xor
jbe
insb
fildll
decl
push
mov
stos
jno
lcall
lahf
pop
and
mov
dec
and
sub
and
adc
push
int3
cmp
mov
insl
test
rorl
push
frstor
add
add
inc
push
or
repz
xchg
shlb
jmp
xchg
adc
aaa
rcll
sub
mov
mov
jnp
cli
or
sub
insb
xorb
pop
pop
out
push
call
leave
jnp
dec
jae
sarb
xor
outsb
mov
icebp
in
inc
sub
lds
stc
bound
push
add
movsb
imul
sbb
add
jle
insl
lahf
cmp
stos
pop
mov
push
dec
mov
repz
scas
stos
inc
and
push
jecxz
out
add
dec
and
aad
or
gs
push
imul
fldenv
dec
cmp
lcall
shll
pusha
xor
mov
scas
sahf
ja
aaa
sbb
cmp
adc
stos
int
roll
xor
jno
into
adc
mov
repz
popf
sbb
pop
jbe
jle
int3
shll
lret
add
or
jo
shl
je
pop
sti
or
cmp
inc
pushf
jge
fisubrs
adc
int3
enter
ljmp
mov
dec
adc
imul
aas
ds
nop
loop
cmp
daa
push
pop
enter
sbb
sahf
jno
inc
adcl
std
scas
push
pop
dec
hlt
leave
adc
xchg
aaa
and
mov
in
mov
dec
out
in
cmp
inc
into
iret
ret
or
adc
sahf
push
xchg
and
cmc
dec
out
sti
dec
or
orl
lock
inc
lret
sbb
jnp
popa
jp
dec
test
pop
lret
test
xor
sbb
fildl
std
cld
add
fnstsw
in
mov
dec
xchg
jle
pop
add
cmp
mov
outsl
lods
add
loopne
or
mov
adc
jb
movsb
mov
imul
or
popa
ret
ds
fwait
cltd
xor
das
add
frstor
mov
pop
jns
sbb
push
mov
lods
fwait
nop
std
cli
cs
ja
mov
cmp
sub
cmpsb
mov
divb
paddw
add
adc
dec
out
push
bound
xchg
cs
inc
out
loope
in
out
pop
bnd
rorl
test
cmpsl
cltd
les
mov
jnp
push
pop
push
mov
push
js
pusha
and
sbb
out
pop
int
xchg
mov
dec
cmpsl
call
mov
jl
jb
cmp
jns
sub
out
dec
mov
test
cmc
fwait
jp
sti
sbb
push
add
cmc
movsl
ret
in
push
test
dec
dec
test
jb
ret
push
out
call
adc
mov
inc
jno
sbb
cmp
in
xor
das
sub
and
xchg
push
pop
dec
push
mov
sti
mov
jg
sbb
repz
inc
dec
jp
mov
icebp
out
shr
fwait
cmp
jp
jecxz
rclb
adc
sbb
insb
mov
out
fisubrs
jp
aaa
push
sub
mov
or
je
popa
xchg
cwtl
int3
push
int3
ret
pop
jno
sbb
orl
pop
mov
scas
pop
gs
int3
lret
fwait
stos
dec
pop
cmp
out
sbb
and
dec
mov
cltd
test
notl
sarb
arpl
xor
imul
sti
mov
sbb
mov
mov
pusha
idivl
lock
pop
enter
adc
outsb
push
mov
xchg
mov
mov
fcoms
outsl
xchg
add
imul
icebp
dec
jle
pushf
int
daa
or
lret
mov
or
pushf
stos
pop
adc
mov
mov
cli
inc
adc
xchg
sbb
sahf
repz
pushf
daa
push
nop
fdivs
je
loope
lods
ret
sbb
inc
push
pop
loop
and
push
mov
int3
sbb
sarb
sub
or
cwtl
and
pop
push
adc
push
xor
out
sub
mov
mov
adc
cwtl
pop
and
in
jmp
roll
mov
mov
inc
push
and
adc
mov
and
push
insb
int
sbb
shr
xor
aam
lcall
or
inc
or
enter
aad
or
js
scas
repnz
cmc
ret
jae
rcpps
idivl
imul
sbb
sub
test
add
adcl
data16
jle
push
xchg
inc
int3
jg
jg
jns
xchg
dec
push
stos
in
inc
and
sti
test
cltd
lahf
or
out
jge
cwtl
les
outsb
into
push
cltd
enter
cmp
aad
pop
punpcklbw
lcall
out
popa
pop
cwtl
jp
mov
xor
rclb
adcl
mov
roll
popw
mov
mov
inc
cmpsb
fidivrl
jmp
shrb
sbbb
sti
sahf
mov
and
repnz
in
or
xlat
mov
js
mov
sub
stos
dec
outsb
das
jnp
notb
mov
es
xchg
xchg
cmpl
push
mov
jbe
faddl
mov
lahf
in
mov
xchg
lret
lahf
cwtl
sbb
mov
ds
mov
loopne
inc
lahf
idivb
std
in
sub
clc
sub
sub
xor
xor
hlt
sub
aaa
fnsave
fmuls
stc
jns
sbb
cmp
pusha
mov
into
insl
stc
jle
cld
add
lea
and
aam
loope
movl
insb
jg,pn
imul
jg
rclb
xorb
sti
insb
push
and
push
mov
test
lock
test
jnp
pushf
jle
mov
jb
add
jmp
mov
lock
lret
lock
pushf
dec
sar
fildl
jp
insl
mov
jg
inc
repnz
ficoms
mov
int
sbb
dec
cmp
xor
pop
lds
or
fsubrs
fdivrs
bnd
arpl
daa
inc
mov
sub
cmpsb
mov
subb
stos
cs
mov
imul
das
or
cmp
xor
push
xchg
xlat
or
pop
mov
push
sbb
ret
stos
sbb
enter
dec
jo
insl
dec
mov
jb
fcmovnb
jns
mov
pop
aad
adc
mov
sbb
imul
pop
or
pop
dec
mov
sarl
sarb
std
xor
and
pop
xchg
aam
xchg
mov
push
sti
cwtl
sbb
add
mov
pop
cmp
les
sbb
xchg
lea
aas
or
push
jno
add
mov
scas
sub
cwtl
mov
jnp
das
adc
in
scas
fsubl
lahf
sub
jbe
ret
push
sbb
aam
cmpsl
lret
inc
and
imul
cmp
xor
popf
mov
outsl
testl
lods
pop
inc
adc
fidivl
mov
out
loope
add
xchg
mov
jae
mov
pop
call
sahf
mov
xchg
mov
mov
rcl
xchg
push
fsubrl
les
cmp
cmp
and
movsb
mov
push
sub
push
sub
add
mov
push
subl
add
push
xor
pop
push
out
fsubs
jne
pop
js
in
daa
scas
in
pop
movsl
lahf
aad
fiadds
mov
icebp
ret
dec
adc
jae
jnp
adc
fldcw
adc
test
push
cmp
jae
enter
pusha
imul
inc
xchg
jo
xor
iret
pop
xchg
fsubrs
loopne
shll
pop
pop
pushf
adc
xchg
pop
xor
mov
jge
lret
fistl
addr16
ljmp
push
xchg
ret
pop
push
in
dec
pop
shlb
test
icebp
mov
shlb
pop
cmpsl
ljmp
and
lret
fld
sti
repnz
dec
mov
xchg
rorb
stos
fs
add
cmp
ficoms
rclb
fwait
xor
out
sub
adc
lret
add
stos
pop
and
gs
sbb
and
inc
jno
xchg
inc
dec
xchg
divl
mov
mov
or
inc
sub
mov
ffreep
push
jne
int
sbb
pop
sbb
add
add
js
push
jl
xlat
in
incb
fistps
aas
shlb
ja
adc
loope
loopne
aas
pop
imul
movsb
mov
ds
into
mov
mov
popl
jp
shlb
outsl
in
cmp
jmp
inc
ret
jne
adc
mov
xchg
push
pop
es
mov
ds
enter
cmp
mov
in
xlat
jl
ret
jne
nop
inc
cwtl
xchg
push
mulb
jne
pop
xlat
inc
cmp
sub
pop
andb
loopne
inc
je
xor
aad
mov
rcll
in
cmp
mov
cli
in
push
xor
imul
int3
roll
pusha
inc
fdiv
xchg
jmp
fnstsw
cwtl
daa
mov
pop
mov
frstor
adc
xor
rorl
mov
shll
fnstsw
fcmovbe
xchg
cmpsb
lock
mov
push
adc
jmp
stc
push
lea
in
xchg
rcl
push
mov
pop
pop
xchg
mul
sub
hlt
roll
xlat
out
ljmp
ret
sahf
test
test
bound
rcl
sub
sub
xchg
lods
loop
loopne
fidivl
xor
push
jae
and
outsl
cs
cmc
xchg
icebp
inc
into
aaa
push
ss
enter
mov
test
test
add
popa
jl
cmc
mov
dec
cmp
mov
stc
or
aaa
int
orl
mov
dec
sbb
je
lods
cwtl
pushf
cmp
loopne
cmp
fwait
scas
cltd
push
push
cs
inc
outsb
adc
xor
push
mov
loope
mov
dec
or
sbb
repz
mov
mov
test
ja
mov
mov
adc
jle
cmpsl
popf
ds
inc
sbb
mov
jle
add
pop
lahf
sbb
das
inc
cmc
xor
xchg
inc
call
mov
xlat
jae
push
push
sub
jmp
pop
dec
adc
and
xchg
xor
andb
jno
add
loopne
mov
mov
repnz
adc
mov
pop
push
add
pop
shl
xlat
incl
dec
lods
adc
push
cs
push
out
sarl
sbb
adc
invd
dec
add
or
in
aas
arpl
pop
test
xchg
xchg
sub
sbb
lods
repz
stc
sahf
shrl
sub
inc
outsl
push
push
sub
loopne
in
mov
rorb
push
lret
imul
xor
jmp
pop
roll
sbb
and
mov
or
outsb
lahf
adc
fyl2x
fbld
mov
mov
mov
aad
cmp
jg
lds
mov
jno
xchg
push
lock
data16
mov
aaa
xorb
xchg
int
sbb
clc
int3
mov
ljmp
sahf
outsl
leave
or
rorb
push
cmp
test
pop
int
pushf
je
sbb
lods
mov
or
test
gs
jmp
in
loopne
cmp
push
sbb
cmpsb
movsl
pop
shr
js
sub
inc
pop
call
pop
mov
jno
dec
adc
leave
pop
dec
cmp
sub
xchg
clc
xor
dec
mov
mov
pop
adc
mov
andl
xchg
outsb
imul
push
loop
sbb
add
or
inc
in
out
sub
pushf
dec
fnstcw
subl
gs
ja
fwait
loope
mov
cwtl
xchg
pusha
mov
xlat
cmpxchg
adc
stos
cmp
out
sahf
stos
sub
cmp
stc
out
sahf
sub
iret
stc
cmp
imul
cmp
adc
out
flds
or
xlat
jg
dec
mov
stos
dec
arpl
repz
lcall
scas
popf
mov
cmc
mov
sarl
cmpsb
in
pusha
lea
xor
mov
ds
out
sbb
dec
movsb
int3
inc
scas
mov
cmpsl
es
and
add
mov
inc
mov
dec
and
imul
cmp
mov
pop
or
test
push
cmp
xor
mov
mov
pop
mov
xchg
push
pop
test
sbb
inc
dec
rcll
lds
or
ljmp
and
mov
outsb
imul
xchg
sub
scas
aam
xchg
xchg
outsl
insl
mov
subb
ljmp
mov
js
xor
data16
insb
aaa
or
sahf
out
clc
xor
repnz
pop
shlb
push
push
stos
push
or
dec
and
or
ljmp
in
mov
lds
bound
movsb
sbb
mov
cmp
push
jp
out
int
or
add
jecxz
mov
or
adc
hlt
pusha
loop
add
xor
popf
aam
int3
push
sub
ds
xlat
mov
adc
jo
add
mov
pop
mov
lcall
dec
in
inc
or
mov
xchg
insl
lret
push
lods
push
cli
mov
sbb
fmul
pmullw
hlt
mov
sbb
test
sub
fcomp
pop
xchg
adc
mov
adc
loop
lods
sub
adc
ja
sbb
outsb
cwtl
sub
lahf
push
mov
mov
pop
jo
lret
dec
pusha
mov
cmp
mov
pop
cs
std
xchg
in
ret
add
loope
push
adc
cmc
sbb
mov
add
rol
inc
cmp
or
cs
shl
aam
jne
dec
and
push
push
jl
and
jbe
push
xor
inc
loopne
xchg
enter
inc
sahf
push
jnp
ds
pop
lea
fsin
or
daa
inc
mov
cwtl
loope
mov
cmp
jb
in
into
in
mov
in
jae
or
fldt
pop
mov
jb
add
mov
mov
ds
jle
jne
cmpsb
fwait
outsb
sub
cmp
ficoml
lea
lahf
loop
shlb
je
mov
pop
shl
daa
stos
scas
inc
ret
loopne
jne
adc
push
outsb
fwait
cltd
out
xchg
mov
push
fimuls
leave
cmp
xlat
adc
je
frstor
push
pusha
into
aad
popf
cmpsl
sbb
leave
in
mov
mov
xchg
and
movsb
fisubs
gs
sbb
iret
ljmp
cwtl
shlw
das
pop
xchg
jmp
cmp
push
or
hlt
xlat
sbb
hlt
repnz
andb
pop
stos
inc
pop
popa
lret
cwtl
out
sbb
dec
stos
inc
f2xm1
ljmp
insl
cwtl
xor
push
add
imull
movsl
mov
les
jmp
lods
mov
out
in
outsl
jmp
adc
fiaddl
jae
adc
xor
add
xlat
vpcmpeqw
ds
and
ret
lret
pop
inc
movsl
mov
aam
xor
cmp
pusha
push
lretw
fnstcw
push
cs
xchg
adc
dec
xor
dec
jecxz
inc
xchg
and
push
stc
and
add
aaa
push
jns
xlat
adc
out
sbb
sbb
mov
adc
imul
pop
and
ret
cmp
clc
sub
push
std
add
imul
rorb
xchg
repnz
shlb
outsb
adcl
insl
dec
icebp
dec
cld
ficoml
ja
push
push
adc
adc
mov
test
lds
sbb
mov
mov
jg
and
lods
dec
sar
ds
push
aad
ljmp
push
ret
inc
push
xchg
jno
cmpsb
xchg
mov
mov
adc
outsl
mov
lods
out
outsl
fcomps
sahf
ds
adc
shl
js
es
test
inc
push
adc
mov
add
popa
xchg
test
add
xchg
cltd
insb
pop
inc
loope
push
adc
repz
mov
imul
mov
xchg
test
cmp
mov
lea
in
push
in
andb
adc
mov
push
xchg
daa
mov
and
arpl
movd
inc
mov
mov
mov
inc
and
into
loopne
or
add
pop
mov
test
lock
pop
icebp
ret
fistl
lods
inc
shrb
push
mov
cld
imul
pop
dec
or
mov
lds
xchg
fstpl
push
sbb
cmp
mov
and
lods
mov
push
jb
mov
and
push
lahf
js
daa
push
mov
and
dec
fucomi
cld
pop
divb
ljmp
les
leave
push
jecxz
lds
dec
dec
out
call
mov
leave
and
test
xchg
sbb
or
xchg
call
aam
dec
mov
and
pusha
pop
sub
mov
inc
lea
lret
mov
js
push
xor
pop
cmp
xchg
insl
sub
xor
fwait
jo
into
loop
cmp
inc
popf
aas
rol
mov
fmuls
sbbb
add
mov
icebp
inc
aaa
sbb
outsb
dec
pushf
movsl
push
sub
out
xor
sbb
fisttpl
lds
icebp
repnz
add
shll
mov
fxch
or
popa
push
icebp
sbb
and
xchg
into
jbe
xor
and
insb
sbb
pushf
mov
dec
cmpsb
mov
ds
std
mov
mov
jmp
add
fldl
jl
push
rcrb
fdivs
pop
inc
mov
xor
dec
adc
or
sub
test
testl
jbe
repz
loope
test
xchg
xor
pop
mov
scas
lahf
xchg
rorb
iret
mov
jmp
nop
addl
fcom
sub
mov
jbe
ret
jb
add
mov
and
pop
stc
sbb
mov
mov
std
or
mov
pop
js
xchg
xor
stos
mov
enter
jg
cmpl
int
fistps
je
jecxz
ftst
imul
push
jb
cmp
push
sub
in
das
int3
addr16
aad
sub
leave
nop
loopne
sub
jmp
hlt
xchg
fldz
inc
sti
cltd
popf
ja
cmp
je
mov
dec
pop
xor
jle
test
lock
in
testl
in
inc
push
cmp
or
outsl
inc
mov
jge
push
insl
or
cmp
inc
rcrb
fistpl
dec
and
mov
shl
mov
and
inc
inc
ror
and
call
and
and
loope
les
dec
add
mov
shlb
pop
and
mov
ss
int
inc
add
mov
fimuls
pop
xchg
push
popa
imul
jo
aam
ds
sbb
sbb
push
push
sbb
mov
lods
pop
xchg
insb
sub
int3
adc
mov
xchg
sbb
scas
mov
and
jmp
clc
cmc
adc
cmp
and
scas
push
imul
rol
testb
loop
jb
dec
into
lock
shr
fs
adc
mov
shrl
pop
add
mov
cmpxchg
or
loop
sub
loopne
js
out
pop
rcrl
cmp
lret
jne
ror
xor
fwait
lods
mov
mul
sub
mov
or
jno
ds
cwtl
push
subl
jbe
sub
fcoms
scas
and
bound
pop
push
cwtl
jno
inc
mov
fnstsw
mov
push
imul
imul
repnz
fiaddl
scas
je
mov
push
or
test
out
and
sbb
mov
lret
or
lahf
jbe
clc
fists
mov
or
popf
dec
or
data16
or
jbe
xchg
hlt
or
xor
in
sub
xor
add
and
loop
inc
pop
mov
cltd
out
cmpsl
bound
xor
sub
pop
leave
in
clc
mov
mov
xchg
sub
mov
mov
or
test
pop
lea
inc
mov
out
test
xor
sub
ja
jmp
fdivrl
mov
int3
xor
mov
shl
jl
and
std
mov
jge
test
dec
push
mov
aam
xor
sbb
push
test
xor
push
test
sahf
jmp
int3
aaa
mov
pop
fadds
stc
inc
adc
xchg
mov
das
adc
push
ret
popa
cmp
mov
iret
es
mov
testl
in
stos
leave
xor
out
je
aad
rcl
int
cmp
xchg
arpl
imul
ds
xchg
sti
mul
fsubrl
aaa
jle
add
outsb
sbb
movsl
or
lock
add
fbstp
out
int3
enter
add
movsb
hlt
sbb
xchg
push
sbb
add
push
sub
fnstenv
idivb
pop
jmp
inc
test
ljmp
or
dec
sahf
pushf
movsb
cli
movsl
mov
jp
jmp
cmpsb
xor
jecxz
movsb
sub
push
adc
or
fwait
sbb
in
dec
ljmp
rep
inc
cs
push
push
pushf
popf
jecxz
cs
aad
daa
insb
bound
cs
jnp
jle
leave
icebp
pop
cltd
movsb
mov
dec
and
mov
adc
or
nop
mov
push
movsb
add
shrl
jb
enter
sahf
sub
and
sub
dec
divl
mov
js
inc
or
sbb
xor
cmovl
adc
in
jns
mov
jp
cld
jl
mov
mov
xor
push
inc
test
push
in
push
dec
nop
add
push
into
inc
push
mov
cmp
push
incl
cmpsb
mov
aad
pop
adc
lret
in
addb
rclb
test
nop
inc
cmp
cli
xchg
or
dec
ds
cld
sub
pusha
js
xor
icebp
add
pop
jecxz
outsl
push
sahf
pop
jne
sbb
out
lcall
cmp
add
pop
push
lea
mov
cltd
xchg
idiv
mov
in
push
cmc
adc
add
inc
mov
and
das
aas
jns
push
icebp
pop
test
sub
nop
cmp
movsb
iret
xor
cmc
push
stc
mov
shlb
add
cmp
sbb
adc
push
daa
fadds
push
cmpsl
lret
rcll
inc
and
push
popa
xchg
inc
xlat
sahf
iret
icebp
push
jg
inc
add
xchg
adc
pop
push
add
clc
sbb
aad
jns
xlat
add
outsb
cmp
or
enter
lods
mov
pop
nop
fisttpl
lahf
sbb
test
xchg
xchg
mov
mov
out
adc
push
jno
in
jge
in
mov
packuswb
je
push
cmpsl
push
xor
mov
das
push
jo
jnp
xor
adc
and
push
fsubs
fnstenv
rcrl
cmp
ficoml
pop
dec
in
gs
jo
xchg
xor
scas
mov
std
loopne
inc
hlt
int3
adc
hlt
mov
mov
insl
out
push
cli
sbb
xor
in
cmc
add
out
fsts
shlb
aam
test
push
in
movq
daa
shll
adc
mov
mov
ret
in
jl
cwtl
rcrl
sti
mov
xchg
inc
es
cmpsl
jb
xchg
bound
pop
mov
bound
add
pop
dec
xchg
fdivrl
shr
lret
adc
pop
insb
stos
mov
adc
mov
rcl
pop
sub
adc
fdivrs
mov
mov
sbb
insl
cli
add
mov
pusha
adcb
xchg
sarl
enter
sbb
mov
push
fdivs
je
repz
scas
mov
jne
testb
push
insl
dec
test
xchg
xchg
push
enter
fnsave
push
and
fisubs
jl
xchg
sub
and
or
mov
mov
jno
push
xor
lods
scas
sar
add
lods
adc
mov
cmpsb
adc
inc
sbb
xor
push
loop
in
pop
into
jmp
or
iret
pop
mov
mov
sbb
xor
daa
mov
jno
hlt
dec
cmpsl
sub
lret
jp
js
jnp
sub
mov
fcomi
lock
bound
sub
int3
jno
push
xor
inc
mov
push
into
fwait
sub
in
call
mov
sub
cld
in
mov
inc
mov
enter
je
add
sub
mov
push
clc
xor
xchg
and
and
aad
pop
icebp
jnp
bound
jmp
imul
pop
fisttpl
pop
aas
into
lret
int3
test
cmp
lods
mov
dec
inc
sbbl
or
mov
test
pop
es
mov
stos
xor
outsb
loopne
mov
clc
push
aaa
mov
push
mov
ds
enter
shll
inc
lahf
int3
cwtl
mov
xlat
loopne
adc
out
out
sbb
daa
cmpsl
pop
fiadds
sarl
loopne
iret
and
sbb
cmp
xlat
or
xor
sub
cltd
mov
smsw
loop
call
add
pop
xlat
jge
fs
movsl
loope
push
push
jmp
in
sbb
sub
adc
inc
int3
enter
xor
nop
out
and
shrl
movsb
ret
loope
pop
out
inc
scas
in
loope
ret
lcall
cmp
push
xor
mov
fdivrl
or
in
mov
jbe
mov
ret
cs
in
xor
int
sbb
pop
mov
mov
pop
add
push
sbb
inc
fs
sbb
out
jp
push
mov
jo
jne
fdivr
jmp
popf
mov
test
imul
stos
pop
sti
stos
lods
or
fisubrl
inc
pop
sbbb
out
jg
icebp
or
sub
and
aam
das
call
lods
movnti
mov
popa
xor
push
push
mov
movsb
fwait
movl
dec
inc
jl
xchg
and
rcl
stos
adc
aam
mov
pop
lret
cmp
leave
jge
loope
cmp
loopne
mull
adc
clc
inc
xchg
dec
pushl
shrl
std
jo
xchg
aad
cmp
mov
jae
sbb
push
jno
push
sub
jmp
jp
stc
outsb
cmpl
insb
divl
fwait
loope
int3
sub
dec
mov
cmp
pushf
out
nop
incb
scas
in
clc
sahf
pop
outsl
adcb
mov
jb
aad
imul
loop
ret
xor
aaa
jle
inc
push
data16
inc
scas
out
fnstsw
cmp
call
mov
sbb
mov
cmp
adc
mov
push
fcoms
xor
ret
or
mov
and
cmp
sub
insb
xchg
jbe
test
pop
cmp
fs
xlat
mov
lea
inc
mov
pop
out
imul
test
xor
jnp
mov
xchg
pushf
outsl
adc
jmp
dec
mov
fildl
add
ds
insb
and
push
sub
and
aam
sbb
out
sarb
push
pushf
mov
aam
fs
sti
xor
sarl
sbb
shl
push
fisubl
es
pop
push
push
inc
jmp
sbb
add
add
lods
push
insb
or
into
faddl
test
or
cmp
cmp
sub
inc
daa
bnd
or
pop
in
mov
stc
cmp
and
xor
inc
cmp
dec
jl
out
push
fnstenv
fildll
inc
nop
jecxz
jle
mov
and
outsb
and
into
add
dec
lods
add
push
lods
and
lods
shrl
dec
scas
fldl
mov
shll
adc
and
fsubr
mov
popf
jnp
sbb
xchg
lds
push
dec
xor
xchg
push
mov
shrb
ret
cmp
mov
mov
sub
or
inc
push
sbb
les
frstor
mov
push
and
adc
jge
aas
sub
inc
pop
pop
pusha
outsl
lock
push
mov
and
sbb
or
pop
xchg
fcmovbe
fistpl
mul
pop
aad
outsl
imul
fldcw
fdivr
popa
outsb
mov
scas
sub
fwait
ljmp
ds
outsb
mov
sbbb
orb
ss
xchg
arpl
jg
xchg
lret
leave
lret
jo
inc
ja
xchg
xor
cmp
iret
adc
mov
lods
xor
aas
sbb
shlb
and
dec
push
xchg
mov
pop
cmpsb
mov
lock
mov
cmp
sbb
cmpsb
lret
mov
mov
shll
xlat
fdiv
stos
or
push
mov
push
mov
lret
jno
jmp
mov
mov
dec
clc
pusha
aam
es
nop
lock
add
cmp
pop
or
xor
push
cmp
or
fwait
rcll
ret
cld
xor
push
pop
mull
and
add
push
or
fsubrs
jo
mov
xor
pop
xchg
cmp
add
movsb
and
dec
or
scas
and
lret
cmp
ret
and
and
fisubrl
in
mov
outsb
pusha
lock
arpl
gs
stos
es
shrl
jb
fs
pop
xor
fcoml
sbb
add
mov
leave
cwtl
pop
imul
rcll
xchg
mov
push
dec
icebp
and
add
lea
bound
jg
adc
and
cltd
test
mov
push
cmp
sbb
into
mov
test
aad
ss
pop
sub
fidivrs
push
leave
sti
pop
mov
mov
dec
cmpsl
cmpsb
cmp
cmpsb
stos
data16
mov
movsb
lods
mov
and
fcompl
push
jbe
lret
sbb
ficomps
jmp
mov
or
push
les
push
push
cmp
subl
cmp
mov
dec
call
das
pop
das
jl
xchg
or
pop
test
jbe
mov
sub
xchg
mov
xor
inc
add
cmp
jo
jg
sub
mov
fidivs
or
xor
push
subb
sub
xchg
adc
and
stc
push
dec
xchg
jle
and
sub
mov
stos
or
jecxz
movsl
jle
sbb
jnp
mov
pop
cmp
dec
xor
jge
ds
pand
aaa
xchg
sub
dec
jb
push
jecxz
or
daa
push
sub
mov
adc
add
divb
mov
out
mov
xor
add
push
sub
mov
mov
bound
es
lods
pusha
test
sub
sahf
mov
xchg
dec
inc
notl
ss
xor
out
popf
push
ds
testb
or
fs
repz
je
inc
and
into
gs
jecxz
outsl
test
popf
jns
and
xor
into
mov
clc
cmp
shll
cmp
mov
loope
adc
sbb
ja
cmpsb
add
aas
adc
jg
fdivl
retw
and
aaa
dec
pusha
mov
in
enter
sub
mov
and
mov
lsl
aad
and
sbb
add
sub
cmp
pop
mov
fwait
into
cwtl
aam
mov
aad
popa
popf
sub
out
outsb
out
test
sbb
mov
scas
xchg
jge
push
xor
adc
dec
test
shl
aam
stos
call
jmp
scas
adc
dec
mov
cltd
push
sub
int
in
pop
iret
xchg
fdivl
adc
arpl
outsl
adc
xchg
mov
lea
and
pop
sub
flds
xchg
mov
mov
call
adc
mov
or
mov
sarl
or
inc
aaa
daa
dec
ja
push
les
jno
je
cltd
mov
std
dec
jno
lcall
popa
cli
or
jnp
orl
dec
out
out
ljmp
dec
leave
loope
xchg
or
jmp
loop
inc
lods
inc
add
and
mov
inc
adc
mov
decb
push
repz
gs
mov
loopne
jae
sbb
ret
cmp
push
enter
push
jg
das
clc
roll
stos
inc
and
cmp
pop
popa
mov
fs
aam
add
iret
xor
jecxz
rolb
or
adc
cmp
push
scas
ficoml
cmp
cmp
pop
movsb
lret
dec
ret
shrl
add
mov
inc
dec
loop
or
push
pusha
in
sbb
add
daa
xchg
or
or
mov
pushf
mov
mov
iret
sbb
inc
mov
sub
cwtl
sub
je
leave
je
sbb
arpl
fs
out
loop
stos
in
stos
fistps
mov
out
inc
xchg
or
mov
lods
jg
jle
js
subl
sti
call
jg
cs
lret
xchg
mov
jle
push
or
jnp
dec
dec
stc
xchg
inc
xchg
test
fldt
adc
mov
divl
stos
sub
pop
dec
fdivrs
xchg
outsb
call
add
mov
aaa
out
mov
xor
pushf
ret
outsl
mov
push
sarb
stos
xor
jbe
cltd
ss
mov
cmpsb
stos
jg
push
into
sub
inc
sbb
les
mov
addr16
cmp
js
les
or
bound
lcall
push
dec
sti
cmp
push
jle
sti
shlb
and
jbe
pop
xchg
pop
push
test
jmp
test
dec
xor
cmp
dec
stc
xchg
jecxz
mov
xorb
and
data16
pop
cmpsb
cs
mov
add
adcb
push
pushf
aas
mov
sub
adc
rcrb
int3
inc
dec
jns
mov
jae
or
leave
aad
dec
test
xchg
cwtl
lretw
fwait
push
pop
push
sbb
loopne
fucomi
fisubs
jp
ds
cmpsb
jne
cmpsb
inc
cmpsb
push
out
push
insl
push
cmp
adc
clc
xor
push
dec
inc
add
cld
sahf
mov
push
std
sti
dec
xor
sub
or
mov
or
std
jmp
sub
add
bound
push
rolb
jbe
push
push
pop
repnz
sbb
sub
and
lock
or
push
mov
add
jbe
xor
test
mov
stos
sub
lret
sub
push
scas
icebp
lcall
movsl
icebp
dec
scas
xchg
ffreep
movsl
pop
in
mul
int
sbb
inc
call
and
sub
gs
cmpsl
sarl
adc
jbe
mov
dec
xor
xchg
cld
cmp
pop
xchg
mov
lods
int
sbb
dec
mov
pop
jmp
mov
out
sub
jb
push
add
inc
adc
xor
movsl
pushf
mov
and
pop
xor
mov
loope
idiv
rcrl
xor
das
inc
aad
jl
jae
adc
imul
jae
mov
jg
adcb
sbb
mov
add
add
pushf
sbb
or
xor
mov
data16
sbb
cs
insl
sbb
aad
fistl
xor
adc
xor
cwtl
stos
pop
addr16
mov
movsb
xchg
pop
lcall
cs
ret
or
sub
adc
les
lret
fcmovnb
bound
in
dec
and
leave
cmp
cmp
mov
push
inc
out
mov
das
pop
aas
out
fldcw
push
jns
and
add
popf
pop
mov
inc
inc
jg
or
aaa
and
addr16
cwtl
and
rorl
mov
lret
sahf
inc
rclb
dec
jmp
pop
popa
jg
pusha
mov
mov
lds
pusha
push
push
lods
cld
push
insl
pop
inc
sbb
inc
repz
sub
cmpsl
mov
or
test
test
sbb
mov
mov
inc
mov
rorb
bswap
lcall
lret
xchg
mov
pop
mov
leave
mulb
dec
inc
push
xchg
jmp
push
inc
ja
pop
add
hlt
sub
jns
popf
xchg
pop
mov
or
mov
dec
cmp
mov
adc
ljmp
mov
gs
xchg
cld
cli
xchg
daa
cli
jecxz
lds
movsb
in
add
push
fmulp
clc
arpl
test
cmpsb
sahf
pop
out
es
inc
outsb
popf
leave
xchg
push
cmp
xchg
push
xchg
mov
addl
retw
int
push
dec
adc
sbb
je
into
mov
insl
jnp
inc
in
rorl
cwtl
scas
fadds
dec
jnp
sbb
cs
jne
insl
aad
ja
shll
ds
out
pop
sub
adc
xchg
aad
in
pop
pop
cmp
inc
movsb
cmp
lret
ss
cmp
out
aaa
add
sub
jmp
jmp
pop
sub
iret
cmc
sbb
out
dec
rcll
xchg
mov
lock
movsl
imul
xchg
unpckhps
insb
iret
mov
push
cmpsb
xor
lcall
adc
or
xchg
and
jp
lods
cmp
adc
fimuls
adc
xor
insl
cli
rolb
rorb
xor
daa
ds
cmc
sbb
aaa
inc
cwtl
xor
dec
jmp
iret
xchg
arpl
jg
cmp
je
push
cmp
inc
inc
jbe
sbb
mov
stos
inc
adc
aad
xchg
sbb
pop
pop
dec
mov
mov
fsubl
mov
iret
pushl
cmc
fsubp
pop
rcrl
mov
pop
dec
jo
addr16
mov
rorb
pop
int3
mov
pop
or
jb
ds
fwait
into
stc
xlat
cmpsb
loop
cmp
loope
jae
push
adc
jae
test
lock
setge
outsb
push
add
push
cld
push
and
imul
or
lods
cld
outsl
inc
sub
xchg
xchg
pop
fisttpll
rclb
xchg
fucomip
ss
jecxz
out
and
add
sbb
adc
ds
sahf
inc
iret
outsl
cwtl
xor
cmc
nop
or
sub
jae
mov
outsb
cmp
pushf
pusha
sub
cltd
pop
fidivs
out
cld
out
xor
xchg
adc
lods
jl
mov
lds
or
pushf
mov
mov
cmpl
out
jb
pop
push
xchg
and
mov
cwtl
jne
and
dec
dec
outsb
add
outsl
dec
mov
and
outsb
jb
xorb
jo
mov
sub
rcr
push
mov
lea
rol
and
jne
pushf
sbb
mov
inc
dec
pop
or
repz
push
xchg
test
mov
int3
inc
inc
bound
stos
in
sarl
loopne
cmp
pop
mov
ret
lahf
adc
fcomp
xchg
cmp
out
mov
sbb
sti
xlat
dec
lret
inc
add
mov
inc
jmp
jnp
mov
in
push
dec
repz
icebp
aaa
in
mov
mov
lock
push
jne
and
pop
out
iret
lods
mov
and
inc
outsb
leave
test
mov
pop
data16
adc
rolb
and
lods
cmpsb
loop
das
cmp
jecxz
mov
mov
int
cmpsl
rol
sbb
mov
addr16
pop
add
and
pop
or
pop
mov
popl
inc
xchg
dec
mov
loopne
pop
inc
btc
lret
add
imul
cmpsb
imul
xchg
sub
mov
in
call
jb
jp
mov
jae
dec
mov
inc
sub
lods
lods
sbb
data16
push
pop
cmp
mov
xchg
cmp
xchg
neg
or
add
mov
aam
sbbl
in
mov
xor
push
and
popl
mov
jmp
mov
divl
push
and
ds
add
push
adc
scas
lret
inc
filds
or
pop
xor
mov
or
jecxz
xchg
fnstcw
pop
shrl
add
or
pop
dec
fnstenv
out
aaa
adc
out
mov
xchg
jae
or
das
jg
ret
int3
cmp
es
jle
cmp
das
cld
fiaddl
inc
in
inc
aaa
jbe
pushf
loopne
sbb
dec
into
pop
aam
jecxz
jae
test
sbb
add
fsts
inc
lret
pop
cmc
pop
adc
jge
mov
and
and
sbbl
pusha
and
cmpsl
icebp
ds
cmp
jmp
int
fsubs
repnz
sbb
scas
sbb
sahf
out
mov
dec
fdivs
popf
jbe
lods
xchg
shrl
lret
mulb
in
ja
stos
pop
icebp
jbe
mov
mov
cli
or
mov
pop
aaa
shrb
aam
testb
xchg
jnp
mov
inc
jo
in
les
cmpsl
dec
jg
in
mov
mov
jbe
test
adc
imul
mov
inc
in
insl
inc
insl
fwait
mov
xchg
jle
pop
pop
inc
dec
mov
movsl
inc
adc
lcall
sbb
xor
push
test
push
loopne
xor
pop
jae
sub
adc
dec
incb
icebp
ds
mov
pop
adc
dec
cmp
insl
pop
push
int
or
test
scas
test
xchg
xchg
mov
mov
int
pop
xor
insl
jo
jb
daa
jbe
int3
hlt
adc
dec
ja
fdiv
xor
pop
mov
add
out
insb
mov
imul
addr16
test
into
nop
sbb
divl
pop
mov
sete
pop
jge
fnstenv
sar
mov
mov
cmc
lock
out
movsl
aas
dec
mov
lods
jb
mov
push
and
jl
mov
icebp
stc
dec
outsl
mov
jne
add
add
addl
lods
jbe
add
dec
clc
mov
scas
push
adc
fisubrs
dec
pop
jb
scas
sahf
stos
loope
sub
leave
mov
pop
imul
cmp
jo
ss
jns
xchg
loopne
movsl
mov
dec
adc
in
mov
sahf
jne
iret
daa
iret
mov
mov
mov
data16
jo
stos
imul
mov
icebp
subl
vpcomq
sub
mov
or
push
sbb
lret
icebp
jne
xlat
and
mov
imul
arpl
add
out
push
mov
je
xor
je
cltd
cmp
hlt
mov
jb
faddl
lods
adc
sahf
mov
dec
add
imul
jmp
pop
add
push
gs
bound
mov
stos
in
stos
aas
jnp
cltd
fdivrl
push
hlt
pop
sub
xchg
int
xor
cmp
sbb
iret
test
hlt
add
fdivrs
sbb
lea
mov
inc
rorb
movsb
sub
shlb
in
pop
ljmp
test
mov
sbb
inc
push
inc
subl
ja
pop
cmp
pop
xchg
xor
inc
jae
jl
jge
js
add
popa
test
push
arpl
scas
int
fisubs
das
adc
pop
dec
sub
fstcw
jmp
fidivrl
pop
xchg
mov
and
xor
push
mov
stc
ficompl
rorl
bound
adc
xchg
push
pop
mov
pushf
in
sbb
in
mov
add
imul
mov
das
cs
cwtl
sbb
cltd
dec
sbb
mov
cltd
ljmp
cmpsb
ret
sbb
push
push
ficoms
rdtsc
mov
imul
inc
es
lock
dec
cmp
mov
ficomps
jecxz
pop
popf
sub
in
mull
mov
aad
push
and
push
aam
inc
lcall
pop
js
adc
stos
jmp
rorb
pop
std
mov
aaa
es
les
les
std
inc
jne
add
sub
mov
and
or
lods
movsb
or
jmp
jg
std
sti
sub
pop
push
add
pop
stos
mov
imul
jno
hlt
lods
push
dec
and
clc
push
fwait
sub
jp
popa
movsl
add
loopne
mov
pop
punpcklbw
cmp
push
xchg
mov
lods
popa
pop
je
faddl
scas
jecxz
insb
or
and
pop
je
xor
jnp
pop
inc
and
mov
and
mov
sti
push
gs
aas
pusha
sar
push
inc
cmpsl
mov
notb
imul
lahf
pop
mov
outsb
test
stos
nop
mov
dec
pop
divl
cmp
fimuls
xor
dec
inc
xor
das
sub
enter
jecxz
jb
stos
and
out
lcall
xor
fucomp
jbe
lods
xchg
dec
ljmp
sarb
inc
adc
inc
into
insb
nop
sub
jne
arpl
iret
je
and
mov
push
xchg
dec
inc
lret
mov
out
pop
jne
test
xor
bound
jae
rclb
insl
adc
jle
mov
inc
mov
pushf
iret
or
lds
mov
into
mov
adc
xchg
adc
push
aad
rorl
scas
loopne,pt
rcl
cs
xchg
clc
cmp
xor
xchg
mov
nop
sbbl
jl
fistps
into
in
adc
fwait
push
enter
inc
inc
jns
pop
pushf
xchg
in
ffree
inc
and
push
ret
das
sub
rclb
mov
insl
push
cmp
sub
jne
fucomip
push
mov
and
aam
lods
fildl
mov
jbe
add
loopne
fs
inc
jae
lods
dec
push
push
or
sbb
and
loopne
cmp
shl
dec
and
addb
not
pop
pop
stc
pop
lahf
jge
in
xchg
add
sub
add
dec
jmp
inc
out
sbb
lret
sbb
xor
pop
mov
mov
dec
pop
push
mov
jle
lock
pop
sub
shll
add
psubb
push
loope
dec
xchg
pop
movb
sti
and
frstor
es
in
sbb
pop
jp
xchg
std
sbb
sub
mov
data16
out
cwtl
jnp
jns
cli
scas
lcall
andl
mov
popf
std
sbb
push
pop
xchg
test
lea
bswap
sbb
aaa
pop
cmp
adc
sbb
aad
dec
xchg
push
sbb
jns
in
clc
mov
mov
sarl
adc
cmp
std
sbb
mov
lret
sti
dec
xchg
aaa
xchg
add
int
iret
xchg
or
mov
daa
sub
cmpps
shrl
in
mov
mov
push
pop
push
test
adc
and
icebp
sti
mov
cmp
lcall
sbb
sahf
mov
inc
enter
loop
push
sub
sarl
xchg
and
imul
dec
rclb
push
mov
into
repz
mov
hlt
dec
out
iret
inc
loope
lcall
xchg
jns
and
xchg
pop
ss
mov
pop
mov
or
inc
add
inc
sti
mov
push
fsin
or
aad
xchg
mov
imulb
or
or
mov
add
lcall
mov
imul
or
fs
push
stos
loope
dec
mov
and
inc
jp
pop
xor
inc
sub
mov
mov
shlb
pop
push
mov
push
loopne
das
fisubs
mov
and
inc
stos
push
or
pop
lods
testl
push
and
cmp
bndldx
test
adc
std
enter
es
mov
or
pop
cmpsl
mov
sbb
jb
clc
insl
ret
test
lods
in
dec
pop
fidivrl
jecxz
or
mov
lea
ret
daa
dec
mov
mov
out
outsl
mov
gs
xchg
lahf
add
in
ret
loop
mov
std
fs
xchg
inc
xlat
mov
pushf
fidivrl
imul
shrb
loopne
xchg
fadd
sar
subl
sbbl
xchg
enter
sbb
jae
outsl
mov
aad
sbb
push
push
sar
push
data16
sub
adc
add
jno
andb
pop
movl
inc
imul
call
ja
or
add
jp
lods
xor
dec
jle
inc
add
test
pop
scas
cmp
js
aad
and
lods
lods
pop
xorl
rclb
push
sub
sub
inc
ljmp
jle
sti
dec
aad
pop
adc
mov
repnz
test
inc
or
das
jl
inc
and
insl
jno
sub
sub
mov
sub
jle
insb
pop
pop
sbb
xchg
nop
dec
ja
mov
push
mov
sbb
adc
shrb
inc
xchg
aam
mov
sub
lret
rorl
lahf
and
add
sbb
lret
xchg
mov
enter
movsb
mov
xor
mov
in
cs
stos
lret
leave
out
adcl
mov
hlt
cmp
adc
add
addl
cmp
push
sbb
pusha
lret
sbb
rclb
adc
adc
sbb
jecxz
pop
push
icebp
fidivrl
xor
or
ret
popa
mov
adc
jmp
jg
adc
ljmp
fsubrl
repnz
incb
fadds
rcl
sub
add
cmpsl
pusha
in
call
pop
xor
rorb
nop
clc
mov
insb
pop
ds
insl
into
aad
dec
inc
imull
cmp
popf
inc
xchg
je
mov
push
pop
pop
rol
or
sub
inc
scas
and
int3
mov
mov
outsl
es
js
jmp
cmp
push
call
ja
adc
sub
sbb
sbb
insb
xchg
jns
pop
and
bound
push
shlb
xor
sbb
out
fnstenv
mov
stos
mov
in
jb
pushf
sub
add
mov
mov
push
jo
in
xor
jae
add
out
imul
jg
inc
mov
iret
lcall
and
sub
gs
xchg
add
adcl
inc
mov
add
lods
jmp
lods
mov
jmp
inc
int
sbb
pop
shlb
sbb
jp
mov
sbb
mov
sahf
pop
lea
jne
popf
mov
clc
test
mov
ljmp
iret
out
movsb
push
jecxz
out
and
das
or
jmp
out
inc
sar
mov
jmp
shlb
lcall
jmp
les
enter
xchg
inc
test
mov
jmp
mov
jl
jmp
scas
ljmp
jl
lea
push
mov
ljmp
xchg
lret
iret
jbe
sbb
lods
push
bound
fld
mov
adc
xor
mov
cmp
jae
xorl
add
sti
mov
pushf
mov
popf
and
test
cld
mov
and
psrlw
push
lret
jo
and
sub
decb
jmp
inc
adc
pop
mov
enter
divl
shrb
or
jg
push
cmp
sub
fwait
clc
dec
addr16
push
imul
pop
mov
mov
jae
mov
xchg
mov
xor
leave
mov
jno
push
pop
lcall
and
test
cmc
xor
stos
fildl
xor
push
jo
cmp
jge
rcll
hlt
fimuls
aad
in
add
ds
repz
std
pop
sub
in
add
lret
ss
jae
cld
ljmp
lret
clc
enter
xchg
test
rorb
dec
push
loope
dec
xchg
insb
enter
xchg
sub
or
dec
pop
push
test
and
mov
fs
into
xlat
mov
pushf
mov
in
mov
inc
outsb
lahf
adc
mov
shrb
stc
mov
frstor
fwait
out
inc
sbb
xor
addb
cltd
cmc
insb
lock
inc
cmp
push
dec
adc
cmp
call
dec
pop
cmp
ret
shr
je
popa
xor
dec
add
mov
inc
out
enter
int
xchg
in
test
call
sbb
jecxz
popf
xor
and
push
mov
loopne
jne
shl
stos
adc
sub
es
out
and
mov
push
clc
adc
rorl
jnp
or
xlat
icebp
dec
sti
or
push
adc
pop
pop
push
outsb
dec
xchg
les
sub
ud2
and
mov
lock
xchg
lea
stos
decb
rcrb
sub
es
cmp
mull
orb
popf
rcr
mov
neg
jmp
add
iret
mov
mov
repnz
push
push
fisubrl
mov
xchg
cmc
ret
pop
cmp
jp
adc
sub
jne
jo
out
in
addr16
loope
dec
cmp
rorb
pop
inc
pusha
xor
int
addl
push
subb
xchg
andb
mov
push
push
cmp
cmp
dec
xchg
mov
cmp
jns
inc
dec
xchg
gs
jge
and
inc
movsl
sub
pop
jle
lods
jns
pop
data16
arpl
xchg
test
sub
dec
hlt
xchg
test
fprem1
popl
sbb
dec
dec
leave
cmc
cs
pop
cmp
dec
mov
push
mov
pop
xor
xor
inc
loop
mov
fisubrl
and
inc
dec
push
jle
xor
dec
jo
fidivs
test
pop
pop
icebp
les
pushf
adc
xlat
fdivrs
dec
push
jbe
repz
mov
int
and
test
cmpb
and
adcl
dec
les
jle
sbb
or
scas
sub
test
das
inc
xor
cwtl
push
pop
out
into
push
xchg
sahf
pop
push
jle
add
sub
push
mov
fimuls
into
mov
pushf
xchg
es
fstl
stos
xchg
sub
loopne
pop
jmp
and
xor
fidivrs
daa
push
pop
data16
negb
jno
out
cmpsl
lods
mov
push
mov
cmpsl
pusha
stos
fldcw
jns
in
enter
push
cs
mov
movsb
and
inc
pushf
jbe
fdivrs
test
mov
cld
lods
mov
sub
push
jns
push
and
aam
stos
cmovb
pop
xchg
push
xor
jl
push
outsl
jp
push
add
sbb
xchg
cmp
xor
dec
test
fsubr
outsb
jmp
mov
sub
or
lods
dec
inc
xor
xor
mov
stos
lods
test
jno
test
xor
dec
fwait
mov
xchg
fstl
ret
adc
xor
ficompl
popa
addb
mov
or
loope
decl
sub
sub
xchg
xor
xchg
cmp
mov
mov
cmp
mov
and
fsincos
cmc
push
adc
fiadds
ds
mov
mov
repnz
push
mov
ret
and
mov
leave
cmpsb
push
push
pop
dec
xor
jb
add
fnstenv
test
icebp
test
in
xor
int3
stos
xchg
fdivr
xlat
outsb
fmuls
mov
pop
fs
mov
add
or
sahf
jnp
rorb
shrl
cld
mov
mull
lahf
add
repnz
call
jge
int3
stos
loopne
jmp
jbe
dec
js
jmp
lods
stc
aam
out
push
movsl
jg
xor
mov
pop
xchg
ja
cmp
push
fbstp
insl
bound
add
cmp
icebp
mov
add
shrb
mov
ja
xchg
xor
sub
gs
mov
aaa
xchg
fisubrl
lds
jnp
test
jecxz
test
movsl
dec
flds
jae
sbb
lret
and
inc
inc
xor
adc
jge
hlt
scas
fdivrl
iret
fisubrs
pusha
pop
xor
sti
mov
call
add
inc
cmp
add
pop
test
jl
out
ret
mov
xchg
jl
xor
sbb
scas
inc
dec
lahf
test
std
add
icebp
mov
ljmp
push
int
mov
orl
cwtl
sbb
into
add
xor
mov
jg
dec
sub
loopne
dec
lds
xlat
lcall
pop
mov
xchg
dec
adc
fisubl
xchg
lret
push
push
and
jne
mov
addr16
scas
mov
dec
pop
push
pusha
gs
push
inc
and
outsl
in
movsl
and
lahf
inc
fs
into
ss
aas
add
cmp
add
or
cmp
adc
fwait
in
insb
ljmp
rorl
cmp
clc
imul
jecxz
cmpsb
inc
rolb
aaa
pop
loop
ljmp
mov
push
call
cmp
paddq
pushf
jmp
daa
mov
sbb
sti
dec
sbb
sub
je
jns
adc
sub
in
cmc
inc
push
mov
ret
pushf
fisttps
jb
pop
and
enter
xchg
add
aas
in
sahf
xchg
adc
and
int
sub
repz
or
add
lahf
movsl
fsubl
xchg
insb
imull
jecxz
rclb
lods
push
in
pop
push
scas
xor
pop
xchg
mov
sbb
testl
leave
push
call
sbb
cwtl
xchg
mov
pop
add
xchg
mov
nop
insl
mov
jns
outsl
cs
or
and
mov
jmp
pop
addr16
mov
add
jo
mov
dec
sbb
jo
xchg
adc
ljmp
cltd
sub
or
cmpsb
or
fidivrl
cmp
pop
or
mov
mov
shll
push
ss
adc
mov
push
outsb
in
jo
mov
mov
mov
movsb
adc
and
lods
jae
mov
std
bound
andl
mov
or
push
sub
cmp
cmp
mov
in
ds
in
movsl
movsl
xchg
or
lret
mov
mov
mov
dec
hlt
test
popf
mov
mov
inc
jle
mov
js
dec
or
push
mov
ret
icebp
ljmp
sahf
xchg
and
repnz
int3
pop
or
leave
jb
dec
cmp
cwtl
add
or
xchg
adcb
lods
mov
push
add
mov
cwtl
shl
lock
ret
movsl
inc
loope
sub
pop
dec
call
xchg
mov
test
popa
mov
lods
push
sub
mov
sbb
cmp
aaa
add
sbb
jne
movsl
xchg
xor
fwait
mov
mov
cmp
mov
stos
js
xchg
sub
inc
jnp
cltd
std
out
pop
cmp
les
call
sbb
push
icebp
out
inc
push
dec
pop
mov
xor
jp
push
xor
fs
or
ljmp
pop
sbb
mov
insl
mov
mov
daa
jno
ror
test
inc
rcll
push
xor
adc
mov
sub
sbb
inc
outsl
cld
push
test
jp
dec
dec
test
rcrb
push
pop
push
insb
lahf
std
cmc
cmp
cmc
ljmp
int3
sti
xor
xchg
jb
cmp
pop
js
icebp
dec
push
mov
xchg
cltd
xchg
scas
adc
and
jg
push
repz
sar
cmp
pop
rclb
fsts
nop
sbb
pusha
adc
std
and
in
pop
scas
xchg
mov
loop
mov
lret
subb
inc
xchg
nop
sbb
std
adc
sub
pop
jns
mov
fwait
stc
jge
je
rolb
clc
daa
fidivrs
inc
in
imul
inc
into
mov
push
imulb
aaa
jb
inc
filds
clc
mov
int3
and
dec
in
cmp
xchg
jae,pn
jecxz
lea
dec
sahf
cltd
and
enter
jae
jae
pop
fs
mov
pop
mov
xor
push
das
xor
mov
enter
ret
cli
shr
or
das
fs
punpckhbw
inc
inc
ljmp
pop
out
xchg
lds
test
xor
or
lea
into
sub
int
xchg
mov
jne
lds
mov
movsl
pop
loop
pop
jns
cld
xlat
or
jmp
lods
mov
pop
cld
xchg
pop
add
sbb
mov
or
mov
jno
push
sbb
in
sub
push
jp
fcmovbe
lret
ds
idivl
inc
jecxz
or
test
shrl
jns
subl
enter
jb
aad
popf
ja
xor
fwait
add
sti
out
ds
jae
pop
add
bound
sbb
div
aaa
sti
dec
icebp
stc
mov
repz
or
loope
inc
mov
clc
stos
xchg
jl
nop
inc
ds
sub
sbb
jecxz
jg
cmc
mov
scas
add
rcll
jae
or
mov
pop
jecxz
add
mov
in
lret
adc
int
dec
push
dec
ljmp
sbb
inc
movsl
mov
aas
pop
inc
inc
clc
nopl
pop
lds
add
cmp
cli
out
cmp
mov
test
or
cmp
scas
push
lea
lahf
sub
mov
or
das
mov
mov
movsl
mov
and
mov
mov
mov
andb
test
sub
fbld
and
inc
imul
roll
leave
pushf
test
dec
das
and
push
xor
lret
sar
sbb
iret
popa
sub
push
cmc
not
outsb
mov
loope
insb
mov
test
sbbl
ss
mov
aam
jne
icebp
insl
sarl
sub
push
pop
lret
sarl
fstps
mov
jno
int3
hlt
int
xor
cmpsb
mov
stos
push
xor
insb
cmpsb
jl
cmc
js
xchg
in
push
xchg
movsl
lret
outsb
jmp
data16
mov
cmp
push
dec
cmp
lock
inc
push
cld
fsts
pop
dec
mov
mov
mov
popa
xor
pop
xor
cwtl
in
jnp
ret
pop
out
inc
xor
mov
sub
rorl
mov
and
stos
insb
jle
mov
mov
xor
mov
popf
push
adc
std
sahf
xchg
out
loop
or
stc
cmp
pop
jnp
pop
mov
inc
stos
fnstcw
stos
out
pmulhw
loope
and
xchg
mov
mov
dec
aad
lret
ret
pushf
dec
adc
pop
imul
xorl
call
lcall
loopne
push
xchg
out
dec
or
add
dec
mov
xlat
push
test
inc
leave
ja
inc
mov
push
in
xchg
std
cmp
pop
jle
loop
psubsw
dec
jbe
xor
cli
jno
data16
sbb
lods
and
fdivrl
icebp
movsl
leave
call
cmc
gs
adc
pop
dec
adc
out
add
repnz
daa
or
outsb
test
jae
inc
xchg
mov
jae
addl
inc
lahf
pop
cwtd
mov
xor
jmp
popf
stos
cli
xlat
cs
mov
shll
js
jo
push
cmp
xchg
hlt
daa
adc
adcl
mov
rcr
lods
fiadds
dec
loopne
repz
fidivl
cmp
and
testl
cmc
and
xor
repnz
addr16
xor
xchg
mov
cmc
das
int3
adc
adc
out
or
jmp
call
sarb
icebp
xchg
bound
pop
in
cmp
push
jno
mov
addb
add
mov
mov
loope
leave
xchg
jp
mov
jp
faddl
insb
pop
mov
push
ja
cmp
ja
add
clc
push
jecxz
ljmp
jle
fcomip
mov
inc
mov
sub
dec
lret
mov
push
lods
ret
les
pushf
stos
jmp
adc
pop
stos
in
shll
das
imul
lea
sbb
mov
pop
ret
xchg
mov
ret
cmpsl
sub
sub
cmp
popf
pop
ret
in
push
rorl
adc
cld
cmc
test
ljmp
jno
inc
insb
pop
out
adc
into
sub
mov
test
inc
mov
and
pusha
out
out
jno
shrb
popf
mov
cmp
dec
loope
outsl
push
inc
les
sbb
cli
pushf
jo
repz
sbb
xor
neg
stos
int3
test
mov
das
add
movsl
pusha
inc
cmp
and
ret
push
sbb
dec
shrl
jbe
into
lock
cmp
cmp
pop
ret
mov
xchg
fs
cmpsl
jae
call
pop
stos
addr16
out
jle
incl
and
imul
aas
lock
push
and
jge
or
stc
jnp
leave
pop
out
enter
fistpl
xchg
jp
fstps
mov
stos
dec
data16
xlat
jp
mov
dec
pusha
pop
push
repz
pusha
adcb
xchg
sarl
push
xchg
pop
jg
add
enter
mov
jl
test
je
xchg
push
adc
inc
cmp
xor
test
orb
fwait
jb
sbb
pop
add
jne
inc
scas
pop
or
pop
jae
push
jmp
cmc
pop
adc
mov
xor
bound
pop
push
fs
shlb
jle
movl
sbb
jnp
mov
sub
cmpsl
inc
mov
pop
push
dec
aas
sub
push
in
out
lcall
out
xor
mov
mov
push
pop
in
xlat
and
or
and
gs
sub
icebp
sbb
nop
and
pusha
movsb
sub
mov
sbb
and
cmp
mov
or
xlat
mov
and
icebp
xchg
jbe
bound
adc
into
call
lret
jns
repnz
mov
sbb
lods
push
push
addr16
pop
or
out
enter
arpl
inc
addl
out
out
sbb
repz
divl
mov
nop
push
xchg
bound
mov
std
push
arpl
xlat
dec
bnd
xor
arpl
sbb
mull
mov
jae
sub
scas
push
dec
and
and
das
jne
mov
mov
and
mov
lret
or
cmc
dec
addr16
mov
lret
mov
loope
out
mov
jmp
push
jae
subb
loope
mov
push
mov
loop
cli
xchg
loopne
mov
cmp
sbb
push
inc
and
sarl
add
jecxz
push
and
or
iret
dec
ss
pop
mov
iret
jnp
and
lods
enter
testl
fstp
dec
mov
and
aas
mov
xor
jae
imul
cmp
dec
sbb
ss
jecxz
jmp
jns
jbe
jg
imul
inc
jmp
lods
iret
movsb
mov
fstpt
loop
xor
mov
sbb
sbb
inc
xor
add
push
mov
mov
jno
inc
and
xchg
movsl
fcmovnb
sub
and
add
or
jl
add
cmp
add
xchg
ret
xor
mov
push
mov
xor
inc
das
insb
insb
pop
aad
out
out
icebp
sti
lods
and
pop
into
cld
sub
stos
dec
fists
popf
adc
cmp
icebp
push
xor
pop
popf
dec
scas
pop
testl
push
adc
cmp
lock
push
lods
pop
pop
push
push
pop
sbb
ret
repz
adc
sbb
push
jle
out
mov
inc
and
orl
lock
jle
sbb
inc
test
div
inc
mov
nop
and
popl
inc
push
ss
dec
out
push
xor
jp
push
shll
push
add
loop
in
mov
sbb
xchg
sub
test
push
push
mov
pop
cmpsb
mov
fmull
popf
daa
fs
fstps
repz
add
dec
pusha
es
sub
fwait
mov
jbe
xor
mov
lret
sbb
push
dec
jne
lret
enter
adc
mov
insb
pop
mov
stc
sub
and
repnz
bound
pop
push
fwait
out
inc
push
push
push
sub
scas
loopne
lret
popa
lea
cmpsl
lods
dec
cmp
or
stc
fldt
rolb
les
out
js
add
leave
xchg
sahf
mov
mov
mov
push
sub
sbb
dec
lret
int
mov
mov
or
adc
jl
movsl
lods
movb
mov
push
not
in
test
notb
lds
xor
popa
add
push
xchg
int
idivb
pop
xor
mov
push
and
arpl
dec
push
sarb
cmp
loopne
xorl
jecxz
mov
adc
jno
xorb
dec
sub
sub
shrl
dec
jnp
sbb
filds
lcall
movsb
mov
dec
in
hlt
mov
fildl
mov
ljmp
insb
popl
loopne
and
dec
mov
inc
jnp
ds
jp
fnstcw
dec
outsl
mov
jno
iret
pop
xor
iret
sub
and
es
cltd
xchg
pop
ret
or
subb
mov
xor
inc
sbb
jg
fsts
and
jge
jnp
mov
mov
inc
into
jg
or
mov
icebp
mov
jp
leave
add
xor
into
arpl
dec
mov
int
lock
and
xor
inc
pop
lds
lods
icebp
daa
mov
jne
jb
mov
xchg
leave
mov
cmp
push
inc
insb
pop
xchg
mov
jmp
js
sti
insb
xchg
dec
and
push
popa
jnp
repnz
sarl
div
data16
sets
loopne
test
test
mov
mov
xor
inc
jae
or
mov
dec
sbb
insl
sbb
lahf
dec
fnstcw
mov
dec
cmp
imul
jns
add
out
push
mov
leave
imul
sbb
sbb
add
je
mov
push
dec
pop
jge
push
cmp
rcr
or
cmp
andl
arpl
mov
hlt
cmpsb
rol
mov
dec
aas
xor
adc
and
cmp
mov
and
pop
jne
xor
cmp
and
push
mov
mov
sub
xchg
push
out
add
bnd
imul
cmp
repz
test
mov
in
sub
rclb
jp
dec
xchg
test
xchg
push
fistpl
and
dec
xchg
mov
cmp
in
cvtpi2ps
lods
mov
cmp
and
mov
jo
scas
mov
inc
lret
push
in
fldt
movsl
push
in
sbb
or
cmc
jmp
jp
inc
cmp
dec
lods
lcall
rcr
add
or
addr16
xorl
in
pop
inc
jmp
sahf
rcrl
sti
pop
orb
xor
adc
dec
dec
and
sub
mov
or
push
add
sbb
dec
movsb
lds
mov
pusha
pop
shlb
and
lock
mov
mov
bound
imul
push
out
inc
dec
scas
aam
js
aam
cltd
push
jmp
pop
mov
and
mov
aas
and
mov
fdivrl
push
scas
pop
js
pop
inc
imul
hlt
adc
or
pop
push
in
leave
scas
in
bound
mov
repz
adc
ficomps
fs
mov
fcomps
mov
stos
loop
pop
jg
sbb
pop
inc
into
imul
and
dec
out
jbe
cli
lret
jp
sub
add
dec
adc
mov
mov
xor
mov
sub
mov
xor
and
lock
aam
clc
pop
cmp
push
je
xchg
inc
incb
sbb
or
je
add
and
push
int3
scas
jp
mov
push
rcll
xchg
xchg
cmp
scas
mov
xorl
pop
xchg
dec
imul
jmp
js
sub
pushf
popf
add
or
addr16
push
enter
mov
dec
in
mov
aaa
clc
cs
push
daa
in
xor
inc
jge
dec
jbe
xor
sarb
xchg
sub
negb
hlt
dec
gs
cli
ret
xor
pop
icebp
rolb
adc
out
cmp
lcall
sub
cmp
int
lahf
mov
push
add
and
pop
mov
out
jnp
xrelease
jno
adc
sahf
test
aam
test
add
pop
rcl
aad
mov
icebp
mov
xor
lret
mov
push
push
fldcw
mov
std
xchg
imul
hlt
xor
dec
mov
jnp
push
jae
aad
insb
pop
fcom
pop
test
nop
jge
sbb
pop
pop
cmp
js
mov
mov
or
stos
fs
sbb
pcmpgtb
mov
cs
sub
movsb
cmpsb
jo
pop
popa
out
jl
mov
push
push
shrb
push
lahf
pusha
popf
loope
mov
lret
jae
sbb
and
pusha
iret
loopne
lcall
sub
cli
cltd
shll
enter
mov
dec
jo
loop
add
dec
xchg
lods
xchg
jle
fisubrl
jnp
fbld
std
push
mov
outsb
lods
dec
movsb
mov
mov
sub
xchg
push
frstor
clc
inc
and
sbbb
aaa
imul
add
andb
stos
popf
lahf
mov
mov
xor
arpl
cltd
and
add
or
rcrl
adc
out
inc
rorl
repz
cmp
imull
je
and
mov
fistpl
inc
adc
or
adc
test
daa
call
sub
mov
fsubrl
mov
aaa
mov
and
js
push
mov
mov
push
mov
jmp
cld
mov
mov
lods
dec
push
ja
cmp
xor
push
cmc
hlt
loopne
popf
shlb
xor
mov
jp
xchg
mov
cli
pop
mul
sahf
aas
stos
imul
jnp
jl
xchg
ds
sarb
shlb
es
ss
cmp
cmpsl
sbb
mov
aad
and
roll
cld
mov
in
sbb
xorb
aaa
pop
aam
mov
mov
test
jae
inc
cmpsb
cs
cmpsb
mov
mov
jle
or
and
clc
loop
sahf
push
outsb
mov
dec
roll
cmc
cmp
jl
jge
jbe
cwtl
je
sbb
push
and
fcoml
and
pop
mov
sbb
jl
adcb
push
mov
pop
sbb
sub
aad
cmp
mov
fwait
lods
sahf
jbe
fs
bound
push
push
mov
push
je
scas
clc
int
cwtl
mov
inc
mov
into
push
pop
rclb
rorb
call
xchg
outsl
push
fiaddl
push
pop
mov
js
inc
std
or
or
mov
dec
js
pop
lahf
call
xchg
xchg
mov
subl
and
subb
fwait
jge
lahf
xchg
aaa
test
ja
mov
clc
or
out
out
xorl
mov
mov
out
xchg
or
pop
out
test
test
mov
dec
iret
mov
ja
inc
les
push
rcll
hlt
mov
filds
push
std
xor
sub
test
movq
fwait
std
scas
cwtl
xchg
hlt
cmp
stc
pop
in
adc
sbb
mov
jb
jmp
sub
into
mov
shlb
test
and
cmpsl
hlt
push
ret
mov
sbb
jne
mov
dec
aam
push
test
pop
mov
adc
pop
jnp
daa
rcll
roll
jns
mov
and
sbb
enter
adc
fstpl
repnz
push
pushf
jmp
mov
cs
mov
clc
dec
lock
fwait
rcrl
and
in
repz
into
dec
xchg
ds
inc
cmpsb
xor
daa
or
dec
pop
std
mov
imul
inc
in
or
jb
cmp
mov
cmp
divl
sbb
nop
add
sar
dec
mov
add
mov
or
or
adc
js
stos
xchg
loop
cmp
inc
inc
imul
mov
imul
push
mov
push
mov
mov
sahf
lret
js
pusha
and
inc
sub
jl
jmp
nop
mov
pop
shrl
cltd
fimull
ja
lret
loope
jne
dec
jns
clc
aad
loope
add
cmpsl
js
mov
or
aad
sbb
ljmp
lods
mov
aas
jg
and
scas
pushf
stc
gs
arpl
mov
mov
cmpsl
data16
sub
movsb
out
lea
sub
add
stc
and
mov
xor
test
dec
mov
push
and
push
pop
scas
cs
movsb
ja
xchg
pop
push
sbb
mov
fimuls
xchg
sub
xchg
data16
push
jle
pop
not
repz
jae
in
sbb
jb
add
dec
adc
push
add
sbb
jns
repnz
mov
add
xor
pop
bswap
loope
mov
inc
dec
cmp
push
stos
cmp
mov
jmp
jecxz
movsl
pop
je
andb
outsb
dec
out
mov
in
fcomi
dec
lahf
mov
ljmp
cmp
mov
sub
mov
add
pop
push
xchg
adc
push
xor
iret
sbb
inc
push
sub
sub
int3
cld
sub
fadds
aas
push
test
sbb
mov
hlt
push
in
mov
cmp
and
pop
cmpsl
xchg
cmp
in
fsubrs
mov
jns
dec
adc
mov
and
push
rcrl
testl
xchg
fists
sti
xchg
movsb
jmp
jge
sti
add
pop
push
push
ficoml
cmp
sub
sub
lret
or
sub
pop
jmp
mov
punpcklbw
cmp
cmpb
mov
or
xor
cmp
es
or
loop
cmp
mov
inc
mov
jnp
ja
jno
mov
add
xor
gs
jae
es
sti
cmp
jns
scas
pop
je
mulb
xor
test
loope
int3
or
mov
lods
arpl
popf
stos
js
jl
and
xchg
in
test
jle
add
and
dec
clc
out
aam
cmpl
dec
pop
lods
test
jecxz
out
mov
jle
xchg
xor
sub
les
pop
dec
inc
pop
std
mov
sbb
jge
nop
ffreep
inc
daa
push
inc
dec
dec
and
pop
push
movsb
ret
testb
pop
into
push
pusha
cmp
std
cltd
fs
pusha
dec
outsb
test
sub
cmp
mov
cmc
cmpsb
mov
adc
cmpsl
adc
rorb
iret
xchg
ds
sahf
mov
fcoml
and
mov
cmp
int3
sti
mov
jge
pusha
cmpsl
stos
addr16
mov
rcrb
loop
push
je
das
test
lret
mov
xor
lahf
fistpll
in
pop
mov
shll
fildl
lea
psubsw
ja
push
je
or
fdivr
pop
ret
mov
mov
or
adc
xlat
inc
mov
stos
jb
lret
mov
or
inc
daa
dec
popa
mov
pop
mov
mov
mov
jnp
lods
inc
pop
rclb
xor
push
cmc
push
sahf
in
xchg
ret
nop
cmp
pop
cmp
xchg
jmp
inc
inc
push
fs
mov
push
jge
or
mov
push
dec
inc
out
bound
ss
jbe
and
sbb
adc
inc
sbb
xor
xor
jno
xor
fs
loope
ret
mov
sti
outsb
lock
jae
inc
pop
imul
ja
dec
and
ret
ljmp
pop
add
mov
xchg
loope
scas
add
imul
enter
fdivrs
bound
lea
int
add
dec
gs
leave
imul
mov
adc
cmp
fwait
rep
cmc
outsl
shll
mov
out
nop
in
add
push
xchg
je
lock
hlt
add
sub
and
push
sbb
aas
push
call
jle
or
sub
xor
dec
and
xchg
dec
call
cmp
mov
popa
leave
addl
cmp
mov
or
pushf
jne
insl
push
sbb
adc
push
sub
arpl
xchg
push
aam
outsl
scas
das
xchg
xchg
dec
dec
mov
cmpsl
pop
lods
adc
shr
push
adc
pusha
dec
shlb
ljmp
iret
add
shll
xchg
insb
xchg
fiadds
add
and
sbb
dec
and
jmp
addr16
enter
int3
sub
sub
cmpsl
mov
mov
hlt
push
push
and
xor
addl
pop
cmp
ljmp
xchg
std
inc
inc
shlb
es
mov
mov
mov
sub
or
ror
sahf
ja
cmp
std
dec
mov
ficoms
push
mov
nop
imul
imul
mov
mov
pop
rcl
int
xor
mov
sbb
push
stc
push
test
xchg
cmp
daa
and
or
lahf
and
fstl
or
push
mov
xchg
add
mov
in
jbe
xchg
mov
xorl
movsb
mov
mov
iret
dec
loop
mov
xor
xor
xlat
cmp
repnz
push
mov
mov
mov
in
test
lcall
fidivrs
jp
cmp
mov
fldcw
adc
ds
push
or
push
mov
mov
xor
ret
fistpll
ja
loop
cmpsb
aas
repz
stos
dec
jbe
sub
adcl
cmp
xor
and
dec
sbb
sub
stos
jae
dec
je
fmull
jne
leave
xchg
cltd
jmp
jle
jp
leave
leave
pop
mov
inc
xchg
cmp
lahf
test
xchg
out
mov
inc
dec
ret
lds
adc
cmp
or
sub
ret
push
cmp
and
je
xchg
and
push
add
inc
push
mov
mov
pop
out
insb
mov
loopne
andb
cmc
push
xor
xor
pusha
xchg
je
mov
and
pusha
rolb
je
xchg
movb
aad
inc
xchg
dec
cmp
pop
fld
or
xor
and
rcl
data16
loope
dec
mov
jnp
xor
jne
rolb
pop
fidivl
fiadds
mov
aas
bts
push
mov
lock
and
cmpsb
pop
mov
divl
cltd
pop
mov
ja
out
sub
pop
pop
pop
int3
sbb
mov
sbb
mov
enter
mov
xor
mov
mov
and
jb
out
lea
push
fbstp
out
or
add
lcall
mov
aad
jne
add
out
jbe
cli
xchg
loope
mov
xchg
iret
call
and
ficoms
xor
jmp
sub
or
psllq
inc
stos
xchg
sti
imul
cmp
lret
in
cwtl
mov
pop
push
nop
dec
data16
jl
sti
ds
mov
ss
dec
sub
mov
sub
lock
inc
stos
lock
inc
dec
mov
lock
test
movsl
rolb
push
adc
hlt
fprem1
or
mov
cmp
fs
adc
mov
mov
cmp
mov
pop
xchg
pop
outsl
jnp
hlt
cmc
mov
pusha
aaa
repnz
push
adc
xor
stos
mov
movsb
out
sbb
iret
rcl
xchg
mov
push
and
mov
xor
pop
or
outsb
fbstp
jns
add
fdivl
pop
out
jl
mov
call
aaa
and
push
fisttps
test
add
rcrb
mov
dec
mov
adc
les
iret
scas
addl
add
movsb
in
cltd
xchg
inc
ret
movsl
loop
js
fisubrl
adc
loope
push
xchg
cmpsb
popf
or
push
cmc
sub
xchg
mov
aas
es
or
nop
and
aas
pusha
mov
add
jp
cwtl
cltd
jbe
sbb
loop
push
test
ljmp
repz
push
popa
dec
ret
add
addr16
stos
movsl
push
pusha
adcl
mov
sti
nop
xor
ss
xor
jmp
xor
leave
stos
rclb
repz
dec
mov
inc
ds
adc
fcom
fimuls
iret
add
aam
cld
ljmp
mov
and
fs
sbb
movsb
jle
push
sbb
cmc
jnp
test
adc
loopne
mov
mulb
ret
adc
add
pop
adc
add
and
movsb
add
pop
out
sub
and
dec
scas
js
add
mov
mov
cmp
mov
fnclex
inc
push
adc
add
push
pop
call
lcall
leave
adc
mov
sub
adc
sbb
sbb
lds
lods
dec
and
cmpsb
or
xlat
popf
push
insb
mov
cli
xor
pop
movsb
dec
sub
lcall
add
push
pop
inc
add
bound
ret
cld
inc
loopne
mov
and
in
pop
xchg
add
cmp
dec
xorl
loope
or
insb
in
daa
shrl
cmp
sub
xlat
mov
mov
cwtl
add
inc
jge
push
mov
scas
jecxz
in
sbb
in
scas
mov
lock
out
incb
jbe
or
sub
sub
push
sbb
test
testl
std
sti
cld
cmc
in
cli
jo
aaa
mov
jle
xchg
js
hlt
std
xchg
lahf
cmp
scas
push
into
adc
imul
orl
fwait
pusha
push
sahf
mov
sub
jns
rcrl
cmp
xor
ja
jmp
shlb
inc
nop
fnstsw
pop
in
and
lds
ja
jge
arpl
sbb
push
ds
lret
pusha
repz
push
pop
lds
jns
add
into
hlt
mov
rcr
test
enter
push
push
out
sbb
mov
aas
ja
cld
fwait
xchg
jnp
cmp
mov
cmp
adc
cmp
out
sbb
pushf
cmpsl
pop
ds
leave
mov
cmpsl
cmpl
shlb
pop
and
cwtl
loope
leave
or
or
rcl
sub
cmpsb
pop
inc
ret
cli
je
add
bound
xor
pop
js
ja
push
adc
scas
add
ret
cmc
dec
cs
cmpsl
cli
jge
push
dec
inc
pop
rcll
cmc
ret
and
sarl
cmp
dec
adc
dec
outsl
pop
mov
daa
ret
cwtl
push
je
fisubs
pop
in
mov
pop
not
mov
icebp
imul
repz
sub
aaa
fbstp
or
cmp
push
adc
in
repnz
and
fstps
and
arpl
xor
mov
jno
mov
and
rcl
push
jl
std
mov
popa
add
loope
sub
pop
xchg
lds
pop
push
mov
out
movsl
push
divl
mov
fisttps
sti
cmp
or
int
jns
xor
dec
stos
das
aam
inc
and
es
test
loopne
roll
xchg
sbb
arpl
xor
push
repz
push
rcll
lcall
icebp
add
test
mov
inc
jl
dec
pop
xor
stos
push
ja
dec
add
in
cmp
xlat
jg
and
enter
cltd
outsb
xchg
and
mov
ss
insb
inc
fsubl
cmpsb
loop
sti
push
and
or
les
mov
jno
push
lcall
pop
xor
cmpsb
add
mov
adc
mov
inc
cmpsb
xchg
push
mov
rorb
fiadds
gs
movb
mov
xchg
jbe
push
gs
sub
mov
mov
sbb
push
pushf
mov
mov
mov
cmp
push
mov
xorb
sbb
push
and
fcmovnb
mov
lret
rcrb
dec
int
dec
bound
rcll
je
popa
sbb
dec
push
movsb
jb
ss
jecxz
cwtl
mov
jg
lds
test
jbe
push
adc
pop
dec
pop
xchg
std
cmp
jmp
lock
cs
mov
in
lods
imul
adc
fwait
mov
xorl
dec
adc
mov
mov
mov
out
jecxz
dec
jg
out
sub
andl
inc
jno
mov
arpl
cmp
adcl
ljmp
mov
push
pop
clc
xor
push
pop
cmp
aas
jbe
ret
je
cmc
jno
fs
aaa
popa
testb
bound
pop
adc
push
testl
or
cli
jnp
pop
push
int3
ret
xchg
lcall
dec
aam
jle
in
push
pushl
and
inc
xchg
test
jno
adc
xchg
outsl
and
push
in
add
loop
push
orl
mov
pop
int
cmp
pop
fs
and
stos
imul
pop
push
push
push
pushf
ds
add
inc
mov
loop
push
and
out
sahf
lcall
xchg
pop
clc
ss
iret
jnp
jle
pop
lahf
loop
xchg
daa
aad
aaa
or
add
daa
xor
loope
dec
call
push
ss
lods
fxch
cli
stc
enter
insb
popa
push
movl
ret
nop
shll
lret
outsl
repz
add
mov
or
loope
je
pop
dec
inc
jecxz
inc
adc
dec
mov
mov
out
push
scas
jle
jecxz
lret
outsl
mov
mov
pop
aaa
lcall
subl
mov
cmp
adc
adc
cmp
sbb
and
jmp
std
inc
fs
leave
dec
mov
shrl
insb
addb
add
scas
cmp
shlb
inc
flds
fisubrl
stc
or
popa
inc
stos
mov
inc
imul
fdivrp
lcall
and
test
push
int3
ds
movsb
addb
xchg
in
das
add
test
loopne
cltd
dec
mov
or
js
jg
cmp
cmp
adc
or
pop
jb
adc
das
sub
xor
or
mov
fistl
das
xor
pop
lods
xchg
mov
loope
cltd
clc
stc
push
push
movsb
mov
sub
cmp
ds
inc
or
fdivr
inc
mov
mov
add
sbbl
enter
sbb
sarl
enter
dec
repz
fsubl
inc
movsl
xchg
std
jbe
addr16
fwait
out
pcmpeqb
dec
pop
inc
test
ds
pop
dec
mov
inc
jp
push
or
lret
nop
jmp
out
xchg
movsb
jg
in
mov
dec
lret
adc
out
sub
aaa
push
xlat
and
stc
stc
mov
pop
inc
xchg
sti
pusha
aaa
out
imul
sbb
sbb
test
mov
popa
lds
stos
jne
int3
gs
adc
and
cmpsl
mul
adc
xor
lret
inc
push
out
mov
pop
jmp
xor
or
pop
pop
push
mov
push
fldenv
stos
inc
push
dec
mov
cwtl
and
ja
adc
addr16
imul
movsb
push
je
out
push
ja
jo
mov
call
or
jb
jmp
mov
cli
cmp
mov
outsb
xchg
daa
mov
xchg
inc
negb
add
testl
add
pop
or
popa
or
adc
mov
push
in
mov
adc
xchg
imul
inc
call
mov
clc
out
jmp
int
adc
outsb
pop
xchg
pop
scas
mov
adc
xchg
push
push
jp,pn
dec
xor
cld
addl
adc
popf
pop
and
inc
jne
cmp
or
inc
insl
jnp
mov
sbb
sbb
mov
jnp
adc
leave
pop
or
lods
sbb
mov
lock
popf
jno
fs
faddl
pushf
xchg
lret
xorb
adc
pop
outsb
rorb
xchg
repz
push
cmp
pop
mov
sub
and
outsl
rol
jecxz
das
in
aad
test
jae
cmp
in
cli
add
add
dec
cmpl
pop
add
push
pop
pop
xchg
hlt
dec
in
sbb
out
pop
mov
push
inc
lock
pop
inc
loopne
test
push
or
xchg
mov
sarl
mov
lods
push
leave
popa
mov
or
push
dec
ret
ljmp
jne
out
test
call
xchg
insb
ret
push
lea
push
ljmp
or
cwtl
mov
mov
xchg
aaa
test
sbb
mov
mov
lock
dec
nop
jno
jo
aaa
inc
jae
mov
cltd
nopl
sbb
fisubl
dec
xchg
push
sar
fwait
lahf
xor
ret
or
or
or
jmp
ljmp
in
jle
and
jns
push
inc
cmp
mov
or
cmp
aam
pop
pusha
ret
xlat
cmp
cld
nop
push
shlb
pop
inc
insb
addr16
sahf
jne
adc
gs
fs
clc
loop
cmc
test
sbbb
rcll
sarl
jge
mov
jp
xchg
push
shl
lock
jne
imulb
dec
pop
int3
dec
push
fisubrs
jg
sbb
pop
cli
arpl
xchg
lcall
ficomps
xchg
cmp
cmp
ficompl
jl
and
push
scas
and
movsb
mov
rclb
movsb
or
movl
orl
mov
jbe
push
test
jmp
jge
loopne
xor
aam
push
pop
sub
hlt
insb
or
xorl
lods
pop
jae
cli
rolb
xor
cmp
cmp
scas
or
dec
out
adc
in
add
mov
shl
mov
cmp
hlt
les
imulb
mov
outsb
sbb
int3
or
hlt
movsb
jle
jno
inc
aam
xor
call
or
pop
cli
add
mov
sbb
mov
and
mov
adc
xchg
mov
cmpsb
ja
int
mov
mov
or
loopne
xor
mov
or
jge
and
xor
or
loope
je
lock
into
sub
mov
loop
pusha
sub
jo
lret
lea
or
sbb
nop
jp
out
std
dec
sub
sbb
lahf
sub
out
icebp
lods
dec
pop
inc
mov
push
mov
fildll
das
inc
xor
mov
xchg
xchg
adc
mov
xchg
pop
iret
rcrl
jl
fmulp
inc
es
mov
adc
xchg
sbb
mov
and
movsb
sub
sub
enter
cmpsb
outsl
lret
adc
dec
add
sbb
jp
dec
movsb
mov
dec
outsb
shl
clc
add
repnz
mov
popf
or
jmp
pop
sbb
clc
test
cmp
in
movsl
bnd
adc
leave
outsl
pop
push
stos
aas
pop
daa
mov
and
add
sahf
push
push
push
pop
mov
or
mov
and
into
cmp
leave
iretw
adc
jp
inc
xor
push
es
cli
jns
scas
push
adc
cmc
dec
dec
cwtl
mov
cmpsb
or
jns
imul
jl
mov
jno
ds
lods
jle
mov
aaa
daa
jbe
les
rolb
sub
xchg
sub
cmp
sbb
punpcklbw
bound
or
and
add
mov
rorb
jl
sbb
fdiv
mov
in
mov
inc
sbb
mov
mov
jae
lret
loope
adc
push
mov
pop
test
mov
lods
inc
out
testl
filds
fs
xor
dec
dec
jp
addr16
bound
xchg
mov
and
cld
icebp
rep
dec
mov
divl
mov
sub
das
fcmovbe
mov
test
fsubr
pop
push
fwait
xchg
sub
ja
std
cvtps2pi
xchg
aad
sub
cmc
mov
cli
imul
lahf
fsubs
push
test
stos
data16
das
loope
cwtl
scas
call
cmp
mov
push
mov
int3
sahf
push
sub
sub
inc
enter
push
lcall
in
leave
mov
mov
adc
xor
inc
xchg
inc
mov
sti
cld
out
sbb
addr16
call
mov
lds
pop
hlt
jl
out
jne
loop
cmp
stos
call
test
dec
sbb
push
jae
mov
cltd
div
sub
in
sub
inc
std
rcr
fistps
iret
pop
out
imul
jge
mov
push
cmpb
or
cmp
push
or
or
jmp
add
dec
clc
ljmp
je
and
cmpb
add
mov
pop
dec
push
daa
ret
in
mov
aas
xor
out
cmp
shrl
push
andb
or
push
pushf
pop
pop
mov
fmulp
sub
mov
decb
mov
scas
sbb
or
call
leave
lea
mov
or
cmp
mov
lds
aad
jno
inc
pop
xor
dec
cmp
xchg
std
lahf
add
inc
fcos
push
mov
sub
das
jmp
lds
aad
sti
fstpt
push
pop
mov
ret
les
jbe
xchg
dec
call
inc
dec
push
sbb
addr16
in
inc
sti
fdivrs
pop
mov
xlat
or
and
lret
lea
pop
adc
or
mov
nop
push
jp
aaa
jl
fstpt
jl
mov
xchg
sbb
inc
test
clc
call
pop
stos
sub
push
arpl
or
add
mov
ljmp
and
xchg
stos
sahf
aas
stos
ret
in
xchg
jge
inc
stos
ljmp
inc
jo
jmp
pushf
cmp
xchg
int3
mov
std
mov
out
cmpsb
mov
insb
xor
int
add
fs
push
bound
decb
jns
loope
sub
mov
test
rolb
jecxz
rcrl
jae
rcr
mov
add
cltd
sahf
sarl
lds
push
xchg
and
cltd
test
add
push
xor
into
mov
lea
sbb
les
icebp
lock
mov
adcl
sbb
cmp
pop
inc
push
mov
lcall
adc
lahf
rcl
daa
mov
jno
mov
clc
inc
mov
sub
pusha
adc
sbb
pop
mov
or
jl
add
aam
ret
das
adc
mov
loope
and
push
xor
mov
mov
ljmp
sbb
ljmp
adc
mov
adc
mov
adc
cmpsb
mov
mov
and
jo
cmp
inc
leave
pop
out
insb
test
mov
in
cltd
add
push
fldl
ds
push
loop
jecxz
cltd
mov
mov
mov
addr16
jmp
and
or
cld
addr16
aas
aam
into
jns
test
jo
icebp
mull
xchg
mov
in
mov
nop
mull
scas
loopne
fsubl
movsl
gs
mov
mov
jo
and
out
jb
icebp
mov
sahf
lret
or
push
pop
cmp
js
mov
jge
lahf
loop
inc
mov
lock
and
loopne
mov
scas
imul
adc
adc
or
xor
mov
pop
dec
loop
or
mov
dec
mov
test
add
xchg
je
std
mov
in
xor
cmp
subb
push
int3
orl
nop
jbe
nop
cmp
or
xchg
je
xchg
add
push
mov
in
pop
xor
cltd
sbb
push
fs
fwait
stc
shll
fisttpl
add
iret
ja
out
pusha
shll
daa
ss
inc
xor
out
mov
sbb
jo
rolb
in
nop
mov
jns
xchg
cltd
pop
aad
push
mov
ds
jmp
or
or
sti
adc
outsl
test
pop
and
sub
cs
iret
xor
sub
or
push
mov
out
ficompl
and
jnp
mov
fldl
mov
iret
mov
dec
mov
adc
popf
push
sarb
popf
fadds
mov
dec
mov
sbb
lods
dec
sahf
int
sbb
inc
sub
inc
and
repz
cs
mov
lret
add
pop
imul
jl
aam
clc
fcomip
xchg
imul
push
jl
jmp
cmp
fnstenv
xorl
or
xor
ds
xchg
insl
pop
cmp
cmp
xlat
mov
imul
dec
xor
push
lods
add
dec
cmp
pop
leave
adc
mov
popf
jb
sbb
mov
inc
cmp
sbb
ds
pop
test
fidivrs
mov
pop
ret
mov
fucomi
cmpsl
and
adc
cwtd
lahf
mov
xchg
cmpsl
push
test
aaa
dec
jns
pop
sub
cmp
fstpl
fcoms
data16
jmp
inc
pusha
rorl
leave
int
mov
mov
leave
idivb
rorb
nop
jbe
sbb
shrl
cmp
or
stos
lock
push
dec
jns
ja
scas
adc
mov
lods
aad
setns
pop
and
in
xchg
ret
popa
adc
stos
inc
out
push
sub
mov
cmp
fisttpll
shrb
cmp
mov
popa
stc
and
add
test
sub
inc
mul
cli
fucomi
inc
cmp
jnp
pop
push
sahf
icebp
aam
sbb
cmp
dec
mov
enter
jg
mov
jge
adc
inc
arpl
ror
cmp
jns
jmp
xchg
or
mov
fwait
push
and
mov
cmp
test
lcall
jo
push
sahf
mov
and
gs
xchg
cmpsl
mov
out
jnp
xor
in
orb
dec
add
sbb
cmp
mov
push
sbb
mov
dec
stos
mov
inc
scas
dec
push
stos
repnz
lcall
mov
frstor
dec
add
sbb
scas
mov
int3
adc
jbe
insl
repz
inc
jb
jle
aam
movb
adc
pop
xchg
jo
mov
loope
add
testl
pmaxub
xor
fstl
push
inc
dec
add
iret
ret
and
mov
popa
in
scas
dec
stos
sbb
stc
dec
fnsave
shld
and
lcall
loopne
out
repz
jle
lret
add
ret
lretw
call
inc
jmp
inc
les
adc
int
mov
sahf
in
push
jg
mov
push
lret
inc
adc
mov
xor
cmp
lret
and
jp
into
outsl
mov
fdivrl
mov
and
pop
aam
repz
adc
enter
inc
aaa
sbb
ret
mov
cmp
loopne
dec
stos
or
scas
mov
inc
data16
movsl
shll
sbb
adc
jle
je
adc
in
cltd
movsl
add
mov
fnstenv
scas
jl
cwtl
dec
jbe
lock
lret
test
xchg
fwait
mov
insb
cmpsb
jmp
mov
rep
out
adc
test
mov
mov
dec
mov
xor
shl
or
jecxz
push
aas
leave
cld
int
add
notb
pop
mov
movsl
xor
inc
push
inc
xchg
dec
popf
mov
dec
dec
es
jae
test
xchg
loop
popa
and
jle
js
loop
rorl
adc
call
push
fistl
jle
out
ret
sbb
mov
lock
cmpsb
mov
pusha
jnp
data16
in
inc
cld
jnp
and
int3
add
es
and
pop
lea
or
pop
outsl
mov
rclb
cwtl
sbb
mov
sarb
push
dec
daa
testl
and
lock
in
push
inc
xchg
sub
fwait
in
rcrb
popa
repz
sub
movsl
ljmp
insb
cwtl
lea
mov
cmp
incb
arpl
aad
jmp
scas
outsb
arpl
mov
mov
cwtl
repnz
ret
cld
ja
rcrb
add
add
js
in
das
or
aam
enter
cmp
add
outsl
fbstp
pop
loopne
hlt
leave
pop
sbb
ret
cmp
sbb
dec
aas
and
pop
add
lods
test
fidivrs
ja
je
movaps
mov
test
sub
ds
dec
int
inc
imul
push
push
xor
sub
mov
xor
inc
lret
insb
inc
movsb
mov
sub
pop
cmp
repnz
push
sar
adc
cmpsl
insb
pop
ret
or
dec
pushf
scas
into
add
inc
or
jnp
or
pop
push
jp
in
xor
popa
xchg
jae
sbb
pusha
lahf
test
fdivp
mov
mov
push
mov
loopne
loopne
movsl
dec
dec
pop
add
test
xor
xor
mov
cmc
mov
or
int
insl
jecxz
rolb
cmpsb
inc
push
rcll
xchg
outsl
cmp
daa
movb
push
or
sbb
and
dec
cmp
arpl
nop
pop
out
xchg
and
sbb
es
bound
imul
aam
lock
sbb
cmc
jae
psrld
aas
insl
push
push
adc
and
ficomps
inc
insb
mov
mov
addr16
xor
and
es
push
fidivrs
and
out
out
aas
adc
sti
and
in
sarl
imul
sub
mov
test
cltd
add
pop
fdivr
test
push
pop
fnsave
lock
icebp
pop
cbtw
negl
jge
push
xor
subl
lods
mov
test
lds
pop
fcoml
imul
and
ja
into
or
and
ret
sbb
mov
add
cmp
mov
int
jmp
shrl
jmp
test
jnp
popa
or
call
js
es
imul
mov
ret
mov
or
jle
shlb
pop
jns
cltd
vpunpckhdq
sbb
in
push
cmp
or
shl
xor
pop
shrb
mov
nop
imul
stos
arpl
or
push
loope
push
push
or
leave
mov
call
jge
fidivs
sbb
dec
dec
out
mov
add
add
and
xor
pop
les
push
cmp
push
cmp
lods
pop
mov
mov
adc
and
cmp
sub
xor
jb
adc
rolb
add
mov
push
sahf
jp
pusha
mov
shll
outsb
jnp
adc
mov
cmp
sbb
outsb
jp
push
cltd
push
pusha
push
outsl
mov
stc
int3
sar
xor
cmc
mov
shlb
lret
ljmp
in
inc
data16
sbb
scas
adcb
daa
shl
mov
sti
lret
mov
orb
cli
ja
aas
cmp
decl
sahf
add
ljmp
popa
addb
mov
fmuls
push
lds
mov
or
pop
hlt
out
pushl
xchg
popa
jecxz
cwtl
dec
inc
dec
dec
int3
std
and
mov
sbb
pushf
lcall
sbb
adc
xor
pushf
push
xlat
adc
insb
xor
pop
cmp
xlat
fcompl
mov
sub
lds
inc
jmp
loop
or
and
int
and
imul
xor
enter
faddp
push
dec
popa
bound
fs
setl
faddl
movb
in
sbb
ret
gs
imul
icebp
xchg
out
ljmp
jle
lret
mov
or
ljmp
je
mov
jg
xor
xchg
cmpsb
rclb
int
faddl
xor
dec
stc
cmp
sahf
daa
lods
lock
mov
and
clc
sbbb
jbe
sub
out
or
inc
sbb
pop
mov
push
xor
mov
sbb
cmp
pop
out
stc
mov
je
xor
out
pop
sti
push
jbe
add
xchg
xchg
pop
sahf
test
cmp
add
cmp
insl
push
int3
repnz
dec
aam
sub
fdivr
pop
inc
sub
aas
adc
fcomip
sbb
in
cld
jbe
cmp
lret
jg
in
push
push
out
ds
movsl
ljmp
movsb
push
sub
lds
das
and
jb
bound
cwtl
jne
mov
xchg
mov
call
orb
cmc
lds
fbstp
test
std
pop
arpl
and
adc
sti
mov
or
jnp
mov
mov
rcl
rcrb
sahf
mov
mov
jbe
addr16
stc
inc
jecxz
sub
mov
data16
test
cld
movsb
icebp
gs
stc
fcomps
cmc
popf
mov
xor
outsl
lods
sbb
fsubrs
or
sbb
xor
ret
add
mov
fwait
in
sbb
je
pop
cmpsb
mov
mov
xchg
popa
sahf
ss
mov
leave
inc
mov
jg
mov
push
div
ror
adcb
das
xchg
or
mov
sarl
jp
jp
and
sub
pop
fstps
out
mov
jnp
jb
add
gs
inc
jne
subl
cmc
adc
fwait
pop
cs
ret
lret
cmp
mov
ljmp
xor
vpcmpgtd
or
mov
test
dec
dec
sbb
ret
lret
lds
inc
pop
push
mov
mov
fiaddl
sub
movsb
sahf
outsb
outsb
jle
and
addb
cld
rcrb
mov
lcall
mov
loopne
ds
jnp
aaa
in
lods
cmp
xor
fnstsw
mov
into
fs
sbb
xchg
sbb
push
out
popa
addl
cs
and
add
dec
add
mov
adc
stos
decb
mov
push
dec
mov
lock
fpatan
jmp
xlat
jge
or
adc
adc
and
rorb
dec
int3
adc
mov
sbb
pop
arpl
pushf
ficoml
ja
cmpsb
or
mov
xchg
shlb
jp
addr16
cmp
mov
les
xchg
push
sub
pushf
daa
add
out
push
and
insl
or
xor
cmp
cmp
js
cwtl
outsb
mov
out
sbb
lret
pop
mov
test
push
xchg
jbe
bound
jle
dec
push
insb
addr16
movsb
sub
notrack
mov
adc
mov
push
mov
push
mov
jb
ds
pop
aaa
out
sub
in
xor
or
inc
int3
mov
icebp
sub
and
jge
clc
nopl
inc
and
or
and
aaa
and
sub
push
aas
mov
and
jle
movsb
fsubrl
cld
adc
sbb
pop
lcall
xor
sbb
add
jb
lret
iret
pop
loope,pn
addb
push
mov
repz
test
fcmovnb
xor
ja
jae
mov
jbe
sub
mov
cmovnp
mov
pushf
dec
lret
or
cmp
popa
adc
add
vmovddup
scas
idivb
mov
rcrb
mov
iret
ret
adc
insl
js
jb
mov
jg
cmpb
jmp
jg
or
xor
icebp
mov
jp
jae
xor
cmpsl
mov
into
imull
mov
popa
fs
add
mov
shrb
ret
repz
sarb
mov
stos
fcomi
inc
push
enter
mov
mov
push
push
jle
sbb
or
mov
lds
jecxz
cmp
flds
add
lcall
dec
xchg
push
mov
lods
or
mov
rcll
cmp
or
mov
mov
fsub
pusha
ljmp
shll
push
push
xor
push
movlps
xor
add
and
jp
divb
push
insl
push
mov
pop
dec
leave
ljmp
arpl
mov
and
pop
pop
mov
testl
jg
clc
rorb
jecxz
sbbl
push
add
and
fwait
lea
test
sbb
scas
aas
inc
cld
cmpsl
in
movsl
mov
insb
and
dec
pusha
jae
pop
push
adc
addr16
clc
cmp
imul
popa
inc
or
clc
out
loop
cs
mov
repnz
popf
or
aam
push
adcl
cltd
mov
popa
inc
adc
ret
sbbb
out
lcall
sahf
popf
pop
adc
outsb
dec
and
mov
daa
xchg
add
aaa
popf
cmpb
push
push
pop
hlt
and
mov
std
pop
rorb
mov
and
mov
outsl
xchg
mov
cmpsb
mov
mov
inc
cmp
orb
pop
daa
das
outsl
mov
pushf
xor
push
mov
aam
fsubrl
cmp
xor
sarb
sub
pop
repnz
mov
addr16
mov
xchg
mov
mov
out
addl
jge
aas
call
xor
lods
in
push
pop
lea
lcall
dec
lods
or
and
mov
add
xchg
cmpsb
inc
insl
movsl
pop
mov
movsb
adc
cmovge
sbbb
xchg
insb
mov
cwtl
stos
imul
xorb
mul
jne
sbb
test
fstpl
pop
inc
jl
int
js
movsb
in
insb
sbbl
dec
jg
xchg
ja
cmp
aas
andb
xchg
sbb
sbb
std
addr16
das
aas
sub
shl
xchg
xchg
mov
xor
sub
es
or
dec
add
int3
aas
fwait
xchg
test
test
pop
imul
out
or
aam
lock
shl
sti
xor
push
test
sub
loope
popa
jne
loop
cli
xor
jmp
dec
fdivr
adc
cmp
pop
xchg
inc
pop
cwtl
jecxz
sarl
arpl
hlt
nop
jecxz
in
jo,pn
test
xor
sahf
pop
lret
ljmp
ret
cmc
xor
mov
roll
stos
dec
test
out
add
out
ret
jecxz
mull
inc
pop
filds
pop
rorb
xor
lods
jnp
add
ja
push
fcoms
es
test
pushf
lahf
jb
jns
ds
sarb
xchg
sbb
mov
push
sub
pop
dec
scas
pop
inc
dec
mov
or
movsb
repz
leave
iret
popa
cmpsb
aam
shll
ljmp
mov
fcoms
push
shl
adc
in
dec
lsl
bound
in
cwtl
lock
lods
cmp
ds
cli
daa
pop
outsl
push
sbb
aad
hlt
loope
test
push
cltd
mov
rolb
fstpl
in
andl
jecxz
pop
sub
xchg
push
xlat
scas
roll
push
pop
and
add
lret
std
sbb
ud0
xchg
rorb
pmullw
dec
mov
push
sbb
mov
or
add
mov
es
and
push
dec
adc
jp
mov
mov
mov
outsl
mov
inc
cmp
lea
xorb
fcmovne
loope
ss
stc
sarl
xchg
popl
aaa
pop
push
hlt
aas
fdivs
lcall
push
nop
xchg
dec
loop
jge
dec
icebp
xchg
out
out
cmpb
popa
dec
inc
ja
loope
xor
fistps
std
mov
into
sbb
les
cmc
inc
lds
repz
sbb
loopne
xchg
add
and
adcb
addl
arpl
sbb
imul
test
fs
dec
add
aas
adc
outsb
out
mov
mov
rol
lret
fsubs
fadd
or
ljmp
fmull
add
sbb
sbb
dec
xlat
ss
mov
imul
or
fldenv
push
pop
jp
pop
stc
mov
or
mov
shrb
inc
aas
out
add
movsb
dec
mov
loopne
push
inc
jns
sbb
addb
sub
call
or
aaa
pop
sbb
cmp
add
sbb
add
cli
xlat
pop
adc
sarl
scas
xchg
pop
pop
sub
jae
leave
sub
shlb
or
xor
dec
mov
nop
repz
push
scas
xor
pop
xor
pop
loopne
daa
mov
bound
shl
idivl
int3
sub
inc
dec
enter
dec
xchg
and
sub
or
sbb
adc
mov
mov
fstpl
jp
xchg
stc
loop
in
shll
lahf
pushf
adc
cmp
jl
enter
sbb
cmp
cmpsb
dec
repnz
call
bound
xchg
loope
mov
ljmp
xchg
sub
jge
ret
iret
pop
ret
loop
lret
mov
ret
and
das
jb
popf
jl
or
test
jnp
fucomi
incb
dec
ds
hlt
cmp
cmpl
cltd
mov
aas
nop
aas
mov
jp
cmpsl
addr16
shl
data16
jbe
hlt
lahf
int
ja
adc
add
cmpsl
scas
add
fidivl
lahf
out
popf
xor
mov
push
sub
jnp
call
push
dec
dec
push
dec
and
sub
sbb
fists
jne
iret
rsqrtps
xor
push
inc
mov
popa
test
loopne
mov
arpl
pop
jne
dec
jecxz
mov
and
incb
mov
sbb
daa
lods
pop
inc
dec
nop
xlat
and
mov
pop
cld
divl
out
mov
inc
xchg
sub
addr16
into
mov
movb
or
das
adc
pop
xchg
cmpsb
sbb
xchg
jno
rcrl
sbb
shrl
push
push
pop
in
push
cmp
leave
jge
push
pop
ficompl
or
cwtl
in
xor
adc
xchg
clc
out
cmc
mov
push
testb
sub
lcall
inc
jae
enter
cmp
mov
push
adc
adc
adc
rolb
push
xor
push
fildl
xchg
xchg
imul
enter
shrb
inc
xchg
sbb
and
iret
sub
pop
stos
and
mov
sti
and
xchg
rep
jmp
push
bound
mov
mov
xor
pop
test
add
jae
push
js
inc
jmp
lea
adc
push
insl
dec
xor
jmp
mov
sbb
mov
xchg
rorl
cmp
idivb
nop
dec
push
jl
call
repz
jbe
xor
loopne
loope
test
incb
lahf
jns
shl
or
lods
add
ret
jle
cwtl
and
loop
imul
in
jbe
and
lods
adc
sbb
lret
jne
dec
xchg
mov
dec
push
lret
sbb
movsl
scas
push
sti
cmpl
push
jne
mov
stc
test
enter
insl
mov
cs
mov
jge
add
mov
data16
in
mov
inc
cld
push
or
push
adc
mov
inc
cli
hlt
cli
add
mov
sbb
jno
cmpsl
test
inc
popf
sub
sub
or
lock
or
push
jg
mov
mov
and
mov
xchg
lds
sbb
or
sarl
cli
arpl
mov
loope
mov
cmpb
mov
cli
xor
cmc
lock
mov
fistpll
xchg
cmpl
mov
popa
in
add
stos
push
sub
clc
mov
sbb
push
dec
jnp
test
popa
inc
mov
push
mov
ljmp
aaa
iret
xchg
rol
cld
hlt
add
jne
leave
lea
test
fsubs
push
xchg
mov
push
into
and
mov
movl
xor
testl
pop
out
add
lcall
cltd
push
outsl
ss
mov
lods
sarb
out
xor
jmp
xchg
adc
scas
aas
xchg
mov
jle
mov
into
notb
sbb
lods
push
lock
pop
nop
dec
scas
flds
repz
das
out
rcrb
sub
shrl
loopne
jno
jb
jb
in
mov
inc
inc
sbb
cwtl
or
xchg
sbb
push
push
xor
xor
in
or
sub
jl
mov
cmp
jbe
mov
cmp
ljmp
mov
dec
enter
mov
clc
fnstenv
cmp
cmpsl
add
or
ja
adc
rcr
sti
pop
jecxz
xor
popa
mov
pop
test
lods
mov
sbb
sub
inc
cmp
test
mov
mov
xchg
das
mov
ret
add
inc
aad
mov
loope
stos
ret
xor
das
jp
lcall
popf
movsl
hlt
xor
xor
jle
mov
xchg
jge
sbbb
lcall
dec
gs
imul
mov
imul
or
je
into
scas
lret
cli
fsubrl
lret
mov
mov
xchg
addl
jo
mov
gs
imull
xor
inc
loop
cmp
jne
and
xchg
aaa
shll
inc
sub
xor
ljmp
int
test
emms
lods
dec
mov
adc
add
ficoms
mov
push
cltd
subb
lock
rcll
mov
mov
testl
add
inc
pop
in
mov
clc
inc
xlat
xchg
cmp
mov
push
imul
pop
xchg
nop
sbb
repnz
ficompl
inc
movsl
ss
sub
in
test
pop
cld
ret
sbb
mov
dec
mov
cmpsb
rcrb
mov
stc
and
fstp
int
or
loopne
shl
dec
subl
push
dec
fwait
xorb
int3
cmp
sbb
fsubl
cmpsl
jo
cmpsb
mov
adc
and
mov
scas
imul
sub
mov
cmp
popf
add
jecxz
mov
insb
int3
or
call
mov
xchg
sub
lods
es
mov
mov
mov
adc
mov
inc
mov
pop
bound
hlt
and
stos
stos
xchg
adc
pusha
addl
cltd
cmpsl
push
sahf
mov
addr16
in
cli
push
jle
inc
xchg
fnstcw
inc
push
inc
sarb
outsl
mov
mov
loopne
pushf
outsb
daa
lds
subb
sub
fisttpll
cmp
push
aaa
enter
test
push
sbb
lock
cmp
in
gs
shrl
inc
adc
imul
push
addr16
pop
cwtl
mov
mov
cmp
popf
and
jmp
adc
cs
push
push
fstpl
cmc
jo
or
xchg
sbb
mov
xchg
dec
int3
lock
sub
rcr
push
mov
mov
cmp
dec
or
xor
mov
je,pt
mov
ja
ret
test
lret
repz
ficompl
dec
mov
cmc
jle
dec
add
push
adc
icebp
xor
rolb
adc
fisubs
loopne
jle
pusha
popa
push
xor
sbb
dec
frstpm(287
mov
sub
popa
push
loope
ror
aaa
push
das
into
lods
int
ljmp
xchg
and
ja
imul
lahf
aaa
xchg
enter
lret
rep
mov
cli
rorb
lock
pusha
inc
inc
mov
sub
sar
push
out
movsb
or
mov
jne
mov
dec
mov
inc
inc
or
es
and
push
cwtl
cmpb
pusha
jmp
dec
jp
decb
dec
popf
sahf
and
inc
stos
lret
push
mov
push
xor
cmc
or
rolb
mov
mov
mov
hlt
or
sub
test
dec
jae
sarb
push
or
rcl
adc
movsb
mov
sbb
mov
in
into
xor
in
das
sti
js
loop
mov
or
pop
cltd
sub
repz
xchg
cld
fistpll
xor
lea
movl
enter
faddl
bound
mov
add
mov
rol
dec
loope
imul
push
pop
fcmove
nop
mov
pop
shrb
lock
jbe
xor
cmc
jg
mov
imul
out
mov
test
fldt
sbb
pop
dec
repnz
int
sbb
scas
and
xor
fwait
mov
jnp
arpl
sub
jnp
sub
and
adc
push
adcb
icebp
movsl
sub
xor
pop
lret
mov
rorb
dec
shlb
mov
adc
jns
push
fs
jmp
addr16
add
jnp
push
sub
mov
mov
faddl
scas
cmp
pop
fisubl
jl
out
mov
out
addr16
repnz
fwait
dec
in
insb
sub
lcall
les
and
gs
sub
insl
pop
ja
push
in
subl
icebp
imul
jne
push
inc
imul
jnp
push
jle
arpl
cmpsl
aaa
mov
lods
int
pop
and
push
mov
mov
testl
loopne
dec
fidivrl
mov
imul
sub
mov
in
sbb
mov
pop
adc
or
fidivrl
ret
notl
stos
push
ds
mov
aam
out
ret
push
push
fstps
sbb
cmp
lret
pop
fwait
pop
fsubs
imul
sbb
and
inc
fiadds
enter
or
scas
or
jbe
add
into
xor
int3
in
mov
add
mov
sbb
jno
xlat
inc
cmp
in
xchg
jbe
add
xchg
ds
push
adc
xchg
xlat
push
insb
mov
dec
inc
imul
xchg
sbb
test
setle
repnz
xor
cmpsl
pop
test
xchg
mov
fmul
int3
sub
mov
pop
mov
xor
shl
leave
shlb
gs
sub
jb
dec
lds
mov
adc
testb
and
jle
jb
rclb
lods
add
sbb
leave
pop
xchg
mov
sbb
mov
int3
add
ss
mov
inc
mov
in
ficoms
pop
cmp
aam
dec
push
aam
add
rorl
aaa
out
mov
fcmovnb
adc
or
mov
or
imul
mov
push
les
leave
outsl
xchg
call
push
dec
push
sbb
sahf
clc
stos
pushf
and
bound
test
mov
jne
mov
xor
jg
fld
nop
stc
movsb
ljmp
enter
pop
out
pop
mov
jo
cmp
pop
mov
out
cmp
sub
ret
lahf
outsl
or
in
jmp
mov
nop
scas
roll
mov
jno
or
orl
cmp
shrl
pop
outsl
ss
ds
scas
in
cmp
inc
cmp
subl
imul
jae
cmpl
fucomp
jmp
stc
pop
rcrb
imul
dec
movl
hlt
stos
jge
dec
inc
imul
fs
ss
andnps
lret
outsl
ret
xor
subb
rol
add
lret
rorb
imul
sub
mov
lahf
push
push
loop
test
push
mov
xchg
div
fcmovne
xchg
sahf
lock
xchg
push
movsl
xchg
inc
imul
xchg
sub
cmp
pusha
fwait
mov
andl
test
inc
push
add
push
jnp
push
jb
mov
outsb
fidivs
push
or
call
pop
sub
sbb
push
pop
jae
add
mov
sbb
mov
sub
push
lock
orb
clc
mov
ret
stc
leave
inc
dec
jg
dec
icebp
jo
jae
nop
xchg
test
push
fisubs
cmp
pusha
lret
or
push
sub
scas
test
outsb
mov
in
xor
dec
repnz
dec
nop
enter
push
xor
cmpsb
inc
xchg
arpl
out
sub
ret
lret
jle
inc
mov
or
or
push
sbb
repz
dec
lcall
or
andl
inc
adc
test
sub
call
and
ret
fmuls
mov
stos
addr16
fnsave
and
inc
xchg
mov
fbld
push
hlt
sbb
in
push
nop
jbe
sbb
push
bound
test
idivl
aaa
test
mov
mov
dec
lods
pop
test
out
ljmp
scas
ss
mov
adc
pop
sbb
out
inc
std
push
xchg
fs
inc
mov
or
mov
dec
in
jb
jo
and
jmp
adc
or
mov
loope
subl
bound
fisttps
inc
cmpsl
jmp
sbb
pop
dec
orl
dec
loop
ss
je
les
dec
lret
pop
xor
in
fidivs
adc
fwait
jae
cltd
mov
add
or
push
mov
mov
sbb
pop
popa
mov
mov
mov
push
inc
sub
leave
fs
mov
test
jp
outsl
xchg
subb
decb
or
jle
pop
pop
test
int3
cmp
idivl
xor
insb
sbb
dec
xchg
lods
int3
cmpl
mov
mov
mov
out
dec
ja
push
arpl
lahf
out
cmp
mov
popf
test
push
dec
dec
and
shlb
dec
scas
imul
addr16
lea
and
sub
sbb
xor
iret
push
pop
jle
fisubs
outsb
lods
das
popf
insl
adc
lcall
sub
je
fnstenv
dec
insl
add
in
dec
pop
lods
int3
or
js
lea
icebp
pop
inc
fxch
in
cld
or
je
jg
bound
jmp
mov
xlat
lahf
pop
scas
cwtl
xchg
dec
pop
in
or
iret
mov
arpl
sbb
mov
inc
mov
inc
xor
push
sbb
add
inc
clc
xor
mov
jo
orb
test
or
fldpi
cmpsl
push
cltd
or
into
jae
push
sbb
int3
jmp
pop
bound
dec
sub
inc
mov
mov
rorb
test
mov
mov
in
lahf
push
pop
pushf
popa
fcmovbe
imul
sbbb
out
popf
jmp
decb
ljmp
fsub
push
je
add
add
imul
add
aad
fcoml
nop
sar
dec
jp
dec
out
push
inc
out
sub
pop
stos
inc
or
xchg
pop
jg
out
pop
mov
xlat
in
inc
or
test
cltd
mov
xchg
dec
and
mov
dec
stos
cmc
xchg
jnp
push
adc
les
aad
jge
imul
sahf
rcrl
pop
movsb
es
out
iret
and
pop
and
call
loop
cmp
rcl
pop
pop
outsb
out
sub
imul
jecxz
cmp
inc
add
mov
mov
je
je
sbb
aad
mov
xorb
fnstenv
xchg
inc
std
call
stos
mov
and
and
int3
mov
jmp
mov
frstor
ss
leave
push
sub
cltd
mov
pop
lods
xchg
mov
push
adc
push
sub
mov
cld
inc
cld
fimuls
shll
ds
cltd
xchg
push
dec
mov
add
cmp
repz
or
xchg
add
shrb
movsb
fwait
cmc
push
fs
decb
adc
sbb
mov
lods
mov
adc
ds
fdivp
cs
sbbl
out
xorb
loope
mov
sbb
movsl
xlat
ror
dec
mov
aam
xchg
sub
or
push
lods
push
push
lcall
bound
add
ret
testl
cli
or
hlt
jmp
xchg
adc
fcoms
cmpsb
cmp
push
mov
push
test
xchg
int3
xor
lods
fucomp
and
pop
xor
daa
sbb
in
cmpsb
neg
pop
inc
into
loop
push
shll
mov
test
je
xor
rorl
aaa
inc
movsb
push
stos
js
xchg
lcall
stc
dec
push
inc
fisubrl
xchg
cmp
inc
mov
cmc
cmp
outsl
stos
or
ffree
lret
faddp
sbb
and
jle
inc
cmp
movsl
sbb
hlt
and
mov
imul
stc
cld
xchg
daa
imul
xor
mov
xchg
xor
iret
cmp
and
out
bound
rcrl
dec
cwtl
xchg
xor
shl
cmp
repnz
loopne
test
jmp
aam
cwtl
rorl
mov
jecxz
test
pop
out
mull
cmc
jl
xchg
leave
dec
pop
popf
out
xchg
lock
sub
ljmp
mov
jle
lds
aad
fwait
aaa
mov
add
sbb
jne
adc
testb
add
test
inc
jge
jne
pop
movsb
xchg
mov
or
cmp
push
jo
ds
xchg
dec
and
mov
jg
sbb
sti
inc
daa
leave
jbe
adc
notb
jmp
lret
out
pop
push
add
pop
cmpsl
es
in
or
dec
hlt
cmp
popa
inc
jne
scas
dec
xchg
xchg
jo
adc
mov
ficomps
ja
ljmp
jl
mov
das
mov
mov
xor
push
ss
push
adc
outsb
into
stc
rcll
in
mulb
fimull
imul
das
xchg
push
je
test
mov
in
rcrb
mov
popf
test
dec
test
insl
mov
jp
dec
bound
xchg
jle
and
inc
xchg
scas
lret
lahf
out
jbe
in
jnp
push
orb
loop
sub
xchg
add
xor
xchg
icebp
and
adc
jle
mov
lret
or
stos
xchg
xor
adc
xor
rcl
jne
lcall
jecxz
pushf
shlb
xchg
push
ret
iret
xchg
aaa
push
and
lods
sbb
fxam
in
cmp
cmc
jge
mov
xor
sub
cmp
pop
jmp
lret
ja
sbb
mov
shrl
jo
bound
mov
and
and
xchg
inc
mov
cmp
test
std
cs
xchg
xchg
xchg
sbb
gs
daa
lret
enter
push
inc
and
ret
lods
outsb
and
inc
xchg
mov
xor
mov
idiv
push
jp
outsb
sub
inc
cmp
mov
push
sub
mov
shld
jmp
cmp
sbb
sbb
fstp
jae
mov
sub
ret
jae
outsl
pop
insl
dec
sti
mov
jle
push
ror
jmp
das
dec
in
pop
dec
es
xchg
rcl
pop
or
cmp
out
adc
ja
adc
inc
imul
dec
shlb
jle
in
pop
les
adc
inc
es
mov
clc
scas
add
fdivl
sar
pop
jecxz
outsl
test
sar
sbbb
mov
xor
or
xorb
bound
enter
insb
inc
xchg
pop
adc
es
push
loopne
xor
rclb
mov
pop
scas
iret
xor
call
fdivrl
test
out
pop
sahf
es
cmpsl
sub
js
mov
test
lret
cmp
dec
and
jecxz
sarl
inc
ror
xchg
sub
xor
lea
dec
dec
xor
repnz
leave
sbb
loop
into
cmp
mov
test
sbbl
inc
in
or
sbb
mov
out
fsubr
or
mov
int3
das
mov
inc
pop
mov
jmp
std
mov
ds
or
aam
fwait
shrl
mov
mov
mov
xor
add
enter
popf
adc
mov
push
mov
sahf
push
aas
or
addb
es
push
data16
call
jae
cmp
mov
aam
data16
scas
push
int3
fdivs
dec
jno
push
mulb
mov
pop
subb
jb
xor
jnp
pushf
mov
and
jbe
aas
scas
dec
movsb
decb
lock
adc
add
adc
inc
fdivrs
xor
add
ret
lret
leave
pop
jae
inc
jge
lahf
cmpsl
into
in
sbb
mov
cmp
mov
outsb
cld
push
dec
add
xor
cmp
inc
mov
adc
cld
adc
lcall
nop
sbb
inc
sbb
inc
sub
fbstp
pop
push
es
lods
lods
sbb
jp
shrl
push
lret
push
fsubl
inc
pop
mov
jbe
fstpl
lret
fstpt
shlb
pop
popf
jle
ficompl
sub
inc
dec
sbb
mov
pop
inc
cmp
jp
aas
or
cmp
aas
sbb
loopne
jge
or
inc
ljmp
sti
add
wbinvd
mov
out
int3
add
out
or
bound
test
test
out
insb
cli
rcrl
sarb
lret
and
fsts
jns
insl
or
xchg
iret
dec
aas
jnp
jg
mov
and
jg
push
mov
pop
loopne
cmp
lret
or
push
shlb
outsb
enter
mov
sub
in
ret
dec
push
add
aam
and
ljmp
mov
jne
mov
and
jne
aad
aam
sub
mov
push
out
sbb
test
cmc
pop
xorl
push
sti
ds
lods
icebp
fs
hlt
adc
lock
shlb
xor
xchg
stos
mov
adc
mov
inc
imul
dec
ret
xchg
sub
outsl
xor
mov
rcll
leave
xchg
std
jno
add
pushf
push
xchg
testl
inc
lahf
xchg
sbb
inc
inc
sub
jmp
xchg
jmp
mov
jo
popf
in
testl
adcb
in
or
lds
sub
ret
daa
pop
push
movsb
inc
fcoms
gs
negb
daa
fldenv
xchg
rclb
loope
rcrl
jp
jb
mov
mov
xor
pop
jle
xor
xor
arpl
shll
pop
mov
xchg
maskmovq
testb
or
pusha
stos
mov
adc
pushf
push
sub
psubd
ss
sub
jnp
cmp
jae
and
mov
cld
jmp
inc
test
xchg
xchg
push
mov
xchg
jg
mov
pop
mov
imulb
push
pop
cld
adc
adc
sahf
push
rorb
push
dec
dec
loope
repz
mov
stos
subb
xchg
enter
push
js
dec
inc
xchg
nop
imulb
cli
sbb
fimuls
jo
hlt
fisubrs
add
insb
in
ret
xlat
xchg
test
idivb
xor
out
jmp
divb
mov
adc
sub
sbbb
xor
mov
lret
mov
mov
leave
rcrl
int
ja
cld
or
jbe
jnp
gs
xor
scas
pusha
outsl
aam
and
ljmp
cs
sbb
lret
mov
addl
inc
jmp
push
sarb
js
fnsave
lds
mov
cmpsl
daa
and
pop
or
adc
lret
push
push
loopne
and
mov
xchg
test
adc
push
push
sub
incb
enter
in
sarb
push
sub
sbb
jno
push
push
pop
sar
enter
pop
repnz
stos
mov
stos
lock
xchg
cwtl
pop
and
cmp
xchg
mov
lods
outsb
xor
adc
push
add
inc
iret
insl
mov
mov
out
test
leave
in
mov
adc
and
call
mov
popf
and
sbb
lahf
orb
cld
insb
jp
mov
sbb
pop
and
xor
xchg
in
sbb
std
mov
or
test
adcb
jbe
dec
sub
mov
and
lea
jg
ds
loope
pusha
test
sub
adc
dec
leave
shlb
orl
sub
jo
push
icebp
fiaddl
loope
ret
cmp
pop
adc
mov
pop
inc
std
jl
mov
sar
imull
in
aas
xor
test
call
or
mov
movsb
push
and
sbbb
adc
clc
orl
scas
fsubr
fsubl
inc
lods
push
xor
stc
in
mov
sub
jg
fucomp
les
roll
mov
inc
adc
je
cmc
and
jb
or
leave
cmpsb
lahf
sahf
outsb
sub
fcmovb
xchg
loop
inc
stc
push
test
ja
mov
sbb
pop
adc
push
sub
inc
lcall
lds
hlt
cltd
jp
cmp
mov
nop
lahf
fistpll
les
pushf
pop
cwtl
cld
lds
mov
fstps
in
or
shll
frstor
test
xor
cltd
negb
push
xor
stos
cmp
xor
out
divl
outsl
dec
mov
stos
fs
inc
loop
sbb
into
sbb
mov
das
jae
jns
jae
aas
adc
in
push
outsl
fldl
pop
push
jp
or
xor
jecxz
pop
mov
push
adc
mov
fs
scas
in
push
mov
jbe
sarl
xlat
pop
std
mov
mov
mov
stc
mov
stos
inc
add
dec
lahf
or
into
cmp
adc
test
and
and
sub
or
jnp
call
fdivr
stos
out
inc
push
cwtl
rol
push
imul
sub
mov
lahf
stos
or
sti
sahf
divb
push
out
xchg
xor
stos
outsb
mov
pop
inc
aad
movsb
jb
hlt
dec
loope
inc
jo
into
out
nop
filds
into
mov
fistpll
mov
mov
fiaddl
push
pop
xlat
lea
popf
xchg
adc
push
mov
inc
mov
xchg
scas
push
add
xchg
and
fidivrs
dec
aad
js
mov
pop
cmp
mov
dec
lret
pop
lods
xor
inc
or
jmp
sub
in
inc
add
test
lds
cmp
push
out
add
aam
cmp
or
stc
das
pop
xchg
repz
cmp
inc
mov
lock
or
and
or
push
popa
pop
icebp
lock
jne
ret
mov
movb
insb
sub
cwtl
ljmp
mov
sarb
and
dec
fwait
inc
out
cmp
addb
std
xchg
cs
fs
out
pop
push
aaa
rol
xlat
pop
pop
jmp
and
cli
icebp
and
sbb
pop
imul
sub
aas
gs
sub
loopne
add
cmp
sbb
xchg
out
iret
pushf
adc
outsb
mov
ja
xor
lods
fwait
jo
cld
pop
mov
adc
mov
sub
and
mov
mov
or
in
movzbl
inc
mov
in
stc
ret
pop
lea
lods
jg
xchg
xchg
je
int3
fldt
sub
imul
xor
mov
sbbb
testl
mov
in
out
aaa
in
jmp
stos
push
dec
enter
loopne
cmp
xchg
mov
dec
fdivrs
sbb
clc
sbb
pop
jmp
mov
jnp
aaa
fiadds
cmp
inc
imulb
and
mov
mov
lahf
xchg
mov
fidivs
adc
and
iret
arpl
mov
daa
mov
loop
and
ja
push
cmp
jmp
out
fucomp
cmp
push
inc
xor
xchg
and
xor
adc
push
fbstp
pushf
lods
adc
pop
pop
in
aad
js
rcll
insb
push
sub
mov
adc
sub
popa
insl
sbb
test
cld
mov
cmp
pop
fstpt
and
jae
insl
mov
push
les
dec
xchg
test
pop
stc
adc
mov
ljmp
std
gs
xor
mov
cmpsb
add
pop
mov
iret
push
ficompl
add
cmp
orb
out
arpl
faddl
inc
and
in
shll
sbb
stos
out
lcall
rclb
sbb
movsb
daa
push
push
lods
bswap
popf
inc
outsb
add
fwait
mov
cs
and
sbb
jp
fistl
push
jl
pop
dec
movsb
lahf
mov
clc
add
repz
push
adc
push
and
jnp
aaa
and
insb
xor
dec
xchg
cmc
jns
or
aad
fisttpl
repz
out
dec
pop
xor
jne
pop
mov
ds
popf
repnz
or
xor
jl
fistpll
and
sub
sub
xchg
fwait
push
dec
and
sub
sti
xor
je
mov
jne
lret
sarl
shlb
jbe
pusha
int
jnp
jmp
clc
sub
out
and
jge
jl
ljmp
faddl
lahf
sbb
sub
push
imul
das
push
in
mov
test
jge
adc
mov
mov
stos
ret
stos
dec
pop
inc
dec
pop
xor
lahf
test
in
repz
fsubs
mov
push
gs
adc
mov
cmpsb
je
mov
mov
sbb
xchg
xchg
dec
das
or
inc
mov
enter
pop
jns
ds
mov
sub
loop
and
mov
repz
mov
lcall
cmp
imul
les
push
pop
fcomip
roll
popf
outsb
pop
fdivr
mov
mov
inc
scas
dec
push
or
mov
notl
sub
imul
iret
dec
fisttpl
dec
xlat
sub
out
cmp
sbb
push
add
jne
inc
mov
jae
ss
int3
aad
shr
dec
jecxz
add
mov
and
sbb
out
sub
imul
dec
sub
addr16
lret
lahf
lcall
dec
dec
fwait
ds
mov
inc
jg
loopne
dec
lock
xchg
shll
sub
cs
in
loope
mov
mov
repnz
lret
movsl
xor
int
sub
and
out
mov
pop
push
movsb
dec
jp
or
push
dec
loopne
neg
jl
ja
test
stos
push
or
xor
pop
andb
pop
mov
fnstsw
fidivrl
mov
fisubrs
lret
sbb
outsl
sbb
arpl
arpl
sub
cltd
popf
in
aad
popa
je
pop
fistl
or
scas
std
adc
mov
bound
mov
fdivrl
mov
and
pop
cld
adc
inc
add
shrb
orl
lahf
push
out
out
cmp
xor
sbb
xchg
xchg
test
mov
pop
sahf
into
or
repz
cmp
cmp
daa
sub
sti
fmuls
testb
add
inc
lret
mov
fs
rorl
fwait
xchg
jb
loopne
and
inc
rorl
sbb
sub
or
outsl
add
or
push
ja
lea
arpl
jne
addr16
add
leave
push
and
cmp
mov
gs
mov
faddp
mov
in
and
cmpsl
inc
addr16
push
add
dec
arpl
addr16
mov
rcrb
xor
cmc
inc
or
mov
jge
pusha
xchg
jmp
adc
ret
dec
xchg
adc
inc
lret
nop
sbb
movsb
sub
jge
jmp
arpl
xchg
pushf
mov
mov
lea
pop
jp
and
nop
pop
add
xchg
out
xor
or
push
and
sbb
xor
ret
ret
int3
popf
xor
mov
mov
lret
addr16
cmp
cwtl
stc
leave
sub
cld
fsubs
jo
aad
push
mov
push
cli
mov
xor
and
fwait
inc
arpl
int3
mov
aam
iretw
xchg
pop
stos
arpl
and
sbb
repz
arpl
cmpsl
cld
xchg
push
lods
shll
cltd
clc
sub
push
xor
lods
push
lahf
mov
out
cmp
dec
repz
or
pushf
push
pop
shr
and
pop
in
addr16
add
std
xlat
iret
notb
add
push
inc
pop
push
lods
push
fsubrs
mov
jle
inc
in
insl
outsl
movsb
cwtl
int
stos
ja
gs
or
sub
aaa
push
lret
in
dec
sub
jg
outsb
cmc
add
adcl
pushw
into
push
hlt
adc
and
cli
cwtl
push
sti
mov
mov
aam
cwtl
loop
stos
cmpsl
into
xchg
cmp
ja
mov
pop
or
dec
imul
pop
jnp
nop
and
xor
shll
mov
ret
std
push
mov
xchg
stc
cwtl
cld
shll
xchg
jns
adc
push
jns
sbb
or
in
out
es
push
jno
cld
sbb
jae
rcrl
imul
jb
dec
scas
cmpsb
jl
sarl
cmp
or
enter
inc
stos
cld
js
enter
or
cmp
cmp
xchg
mov
and
pop
int
push
xchg
mov
dec
push
sub
inc
je
cmp
daa
rorl
push
sbb
cltd
jmp
mov
adc
test
lods
cwtl
jns
xchg
mov
stos
sbb
pop
enter
pushf
sub
fcomp
shll
pop
loop
xor
int3
xlat
mov
inc
int3
stc
imul
pop
dec
das
jns
sub
aam
xchg
pop
sbb
adc
lret
pop
sub
push
dec
repz
jae
bnd
dec
stos
int
les
addr16
scas
add
ret
js
inc
js
int3
clc
inc
das
mov
inc
cmpsb
data16
or
jo
add
hlt
mov
test
inc
stos
test
test
imull
mov
adc
adcb
sub
dec
dec
inc
loope
jo
lods
clc
jne
pop
jne
mov
cmp
jle
xor
testb
test
shlb
orb
push
arpl
lea
in
fmulp
in
mov
sub
jle
dec
dec
movsl
pop
inc
jp
inc
xchg
push
or
mov
ljmp
hlt
out
add
cmc
aam
sarl
fwait
fwait
cld
jbe
gs
sarb
sbb
xor
adc
jno
lahf
insl
insb
lret
push
dec
pushf
cmp
fsub
aaa
dec
cmp
and
jge
mov
sahf
nop
jae
stos
adc
jmp
cmp
shl
xchg
push
dec
jae
test
jg
out
pop
push
cmp
or
xchg
add
stos
mov
orl
add
out
pop
lea
ret
ds
or
push
ficoml
mov
cmpsl
cmp
stos
xchg
ss
ljmp
mov
aaa
mov
loope
mov
push
pop
xchg
in
fs
mov
pop
cs
pop
add
jg
ret
andb
in
mov
les
jb
cmp
flds
push
stos
sahf
xor
sbb
adc
fadds
xchg
fsubl
mov
inc
ja
sub
iret
imul
mov
addr16
cmp
shll
in
idivl
dec
aam
cmpsl
or
aaa
js
push
jb
pusha
test
pop
and
mov
cmpb
mov
cs
lods
out
out
dec
mov
lods
into
rep
jecxz
lds
push
lea
xor
repz
inc
jmp
sbb
jg
jmp
cld
enter
inc
loopne
jp
dec
ja
imul
mov
add
sbb
jne
mov
test
inc
cmp
icebp
xchg
xor
out
push
push
jo
push
fmull
jmp
sbb
iret
sub
cli
push
fnsave
jne
arpl
or
adc
divb
add
push
push
lret
in
push
jo
in
and
jmp
cltd
dec
addr16
jg
xor
sti
cld
xor
mov
mov
inc
daa
xchg
rcrb
pop
orb
or
std
adc
out
jo
sbb
mov
push
push
rcl
cmp
mov
jo
pand
xlat
lds
and
mov
adc
filds
shrl
cmp
and
sub
jecxz
xchg
imul
pop
lahf
ret
pop
jle
in
test
jno
enter
clc
xor
add
pop
fs
push
cmpsb
push
jp
sub
or
cli
push
imul
les
icebp
aas
inc
outsb
jmp
cmc
add
pop
imul
mov
repz
push
push
rol
cli
add
insl
sbb
orl
push
pop
int3
int3
mov
pop
fcomps
mov
aaa
cmp
bound
and
mov
sub
sbb
repz
push
sub
pop
mov
pop
push
adc
pushf
xchg
sub
stc
inc
inc
add
rcl
orps
cli
arpl
xchg
aad
push
cmp
and
rcll
push
nop
out
or
out
xchg
jnp
dec
sub
mov
in
in
jae
xorb
push
imul
mov
js
shlb
scas
mov
scas
fistps
loopne
mov
mov
lds
mov
stos
sbb
setg
pop
push
add
outsb
inc
fildll
jnp
rclb
xchg
sbb
and
cmp
je
dec
gs
pusha
adc
rolb
dec
jnp
sub
adc
fcmovbe
sbb
aad
sbb
stos
pop
sbb
xor
jmp
scas
cmc
xchg
mov
aam
cmp
lea
jle
add
movsl
mov
and
lock
sub
pop
add
sub
sbb
cmp
sbb
sub
rcrl
adc
inc
xchg
sahf
fisubrl
mov
ficomps
fcompl
sub
scas
xchg
out
mov
rolb
mov
mov
dec
shlb
mov
in
gs
cmp
jnp
xchg
jnp
cmc
cmp
xchg
jb
jnp
push
adcb
out
jbe
and
add
dec
rcl
push
dec
xchg
pushf
into
or
push
mov
stc
push
pop
add
cmp
icebp
sbbl
int3
testl
loop
push
xor
push
out
cmpsb
enter
xchg
xchg
movsl
loopne
in
push
out
ret
addr16
out
das
sbb
push
div
popl
test
add
jp
or
push
lods
adcb
fnstcw
stos
mov
in
imul
ljmp
lcall
cltd
and
push
jo
pop
push
das
and
lahf
pop
decl
bound
dec
mov
push
push
adc
jg
lahf
cmpsl
mov
push
call
mov
pushf
or
pop
call
sub
ficoml
pusha
cmp
adc
insl
adc
mov
daa
sbb
fmulp
aad
dec
fbstp
movsb
adc
sub
and
xor
push
mov
pop
sarl
mov
mov
out
push
incb
sbbb
notl
into
int3
sbb
jl
loop
fnsave
shlb
or
adc
lock
and
xchg
jle
inc
lret
push
and
lcall
inc
sbb
mov
or
sahf
arpl
sbb
mov
dec
int
sbb
sub
sbb
decl
cmp
jne
mov
cli
xor
jp
mov
out
imul
pop
xchg
ljmp
push
pop
push
pop
js
push
loopne
pop
dec
cmc
mov
repnz
std
out
arpl
pop
adc
cs
adc
jbe
aaa
jno
cwtl
xchg
mov
mov
inc
pop
scas
jns
nop
test
jns
cmp
dec
fdivs
notb
push
jge
int
or
pop
test
lds
xchg
hlt
push
pop
sbb
in
lods
sbb
xor
in
push
and
pusha
stos
ljmp
call
lods
cmp
repz
inc
sti
leave
dec
call
xchg
outsb
jns
mov
push
icebp
jg
imul
push
mov
hlt
mov
cmp
filds
repnz
push
sub
std
push
pop
fstps
repnz
fwait
mov
inc
cmp
mov
or
mov
dec
das
insl
int
lcall
xlat
adc
sarb
or
in
lret
inc
cmc
mov
inc
out
out
test
sbb
inc
push
mov
jmp
test
ja
loope
andb
bswap
cmp
and
cmp
outsl
setne
out
dec
inc
add
and
test
push
mov
fcomps
jecxz
scas
push
mov
mov
mov
cmp
mov
mov
pop
push
cmp
daa
sub
fiaddl
sub
push
jo
pop
mov
add
pop
shl
stos
cld
fsts
enter
aaa
aas
and
cli
lods
mov
cmp
mov
jmp
rorl
add
xor
jg
es
inc
dec
pop
daa
mov
sahf
xor
mov
cmpsl
lock
lret
ljmp
insb
dec
sub
push
cmpb
nop
imul
add
sbb
inc
jmp
adc
or
add
mov
add
outsl
addb
roll
mov
and
jmp
sar
stos
pop
push
xor
add
jb
int3
pminub
js
fisubl
jae
fstp
adc
insl
xchg
fistps
fstpl
mov
loop
mov
or
cli
pop
mov
push
pop
cs
jge
in
test
rorl
fwait
sbb
lea
je
fs
lods
lock
aad
lods
add
sbb
xchg
nop
out
adc
loop
inc
repz
pushf
call
mov
xlat
add
jmp
nop
dec
inc
aad
cmp
or
push
xor
subb
xlat
loopne
icebp
xchg
test
into
int
xchg
inc
repnz
ret
mov
add
rolb
dec
cmp
in
mov
or
or
inc
ss
fnsave
push
push
and
shl
xchg
inc
lods
fimull
inc
xchg
dec
sub
and
adc
testb
push
dec
std
push
fs
shll
rorl
and
pop
or
jge
and
cmp
inc
pop
cmpsl
cmp
xor
sarb
stos
insl
xor
inc
movsl
out
dec
out
je
sti
lods
pop
cmp
mov
es
lea
mov
imul
mov
or
xchg
pushf
iret
jl
xchg
fimull
push
pushf
mov
int3
jg
inc
pop
pop
fbstp
insl
enter
filds
add
push
rcrl
jl,pt
loope
ss
add
cmp
movsb
lds
js
cwtl
push
test
jns
xchg
lret
cli
lret
sti
mov
adc
push
loopne
xor
loopne
xchg
test
jo
fstpl
cmpsb
inc
inc
popa
jmp
jecxz
xorl
mov
sub
sub
shl
sub
jmp
jle
or
adc
xor
fldcw
or
sub
js
sub
push
dec
adc
rorb
dec
ret
xchg
rcrl
sub
fwait
loopne
adc
lahf
out
jmp
sub
testb
int
out
push
dec
fistps
std
leave
pop
xor
pop
pop
out
outsb
lret
inc
sbb
in
mov
mov
test
xchg
jb
inc
mov
hlt
daa
movsl
bound
push
sbb
pop
pushl
mov
stos
call
shlb
fmuls
or
pop
ror
xchg
lahf
test
popf
jo
fisubrl
negl
push
pop
add
test
test
xchg
test
pop
in
jmp
sub
into
mov
mov
out
ret
add
cwtl
push
mov
mov
cwtl
movb
mov
and
lret
inc
fabs
pop
cmp
mov
sub
fcmovnu
stos
dec
stc
xor
mov
cld
data16
lret
push
out
lret
jg
aaa
fldcw
je
jno
mov
test
scas
fists
xor
movsb
push
or
das
adc
inc
pcmpgtw
jmp
jmp
test
xchg
mov
in
jl
sti
sbb
xor
push
lds
mov
cmpsb
mov
in
mov
mov
sub
outsl
test
sub
lcall
push
pop
push
out
les
in
pop
xlat
jnp
pusha
adc
lds
cli
jnp
mov
cmpsb
test
je
rcrb
mov
out
or
fs
insb
aas
or
jmp
adc
push
sbb
js
ja
push
inc
sub
pop
movsb
dec
cli
xor
xchg
loope
inc
inc
inc
xor
mov
cmp
add
or
stos
lods
or
imul
cmp
insb
dec
loopne
scas
push
loope
leave
jae
les
sar
add
sarb
pop
mov
int
mov
stos
mov
clc
dec
fdivrl
inc
inc
divb
aas
sahf
shld
enter
repz
xchg
xor
jmp
add
mov
adc
sti
mov
mov
dec
rcll
sarb
out
in
mov
adc
and
xchg
mov
or
nop
notl
js
test
out
fidivs
push
in
fwait
mov
dec
cmp
cmp
lds
pusha
fs
cmp
jae
jg
and
test
push
push
test
mov
in
mov
mov
cmp
mov
pop
stc
cmp
mov
dec
aam
orb
ret
cmp
lock
cmp
jno
lock
sub
inc
pop
mov
lock
xchg
imul
je
dec
cs
jno
scas
outsl
pop
mov
daa
push
cmp
inc
cmp
mov
cli
dec
mov
jmp
jle,pt
or
or
adc
stos
sbb
xor
and
add
xorl
mov
add
push
arpl
movsl
sbbb
adc
in
mov
int3
xchg
xor
sub
mov
dec
sbb
cmc
mov
adc
adc
mov
dec
test
scas
adc
cli
popf
cmp
adc
out
jbe
jecxz
or
iret
mov
outsb
adc
push
repz
mov
sbb
movsb
fbld
cli
pushf
out
or
ljmp
or
push
xchg
movsb
test
mov
test
jp
xchg
xor
adc
sahf
and
pusha
mov
sub
xchg
in
jmp
adc
addr16
or
push
lock
ret
imul
adc
test
sub
push
push
hlt
cs
pop
jecxz
cmpsb
adc
mov
pop
ljmp
inc
jb
xchg
lea
add
es
and
or
jl
sbb
hlt
es
lret
push
add
dec
mov
lcall
aaa
jno
or
add
dec
xchg
sub
add
or
dec
pop
xchg
clc
icebp
cmp
fdecstp
aas
and
sahf
andl
jbe
lret
pusha
in
loope
outsb
sbb
cmp
ds
iret
cmp
rcll
xchg
fs
adc
add
ror
fs
xor
stc
repnz
rol
imul
and
test
sbb
jl
dec
sbb
fwait
out
movsb
xor
mov
xrelease
xchg
xchg
xor
xor
mov
lock
or
cmp
js
mov
xchg
pop
leave
nop
in
inc
or
outsl
add
adc
mov
out
in
mov
je
pop
enter
hlt
je
and
in
fcmovnbe
jg
cmp
insb
lock
imul
jp
jecxz
lock
jae
out
dec
or
dec
addr16
mov
and
push
push
outsb
lcall
mov
and
cmc
lret
sub
std
mov
test
insb
sbb
mov
pop
in
pop
xchg
jo
pop
out
repnz
sbb
sbb
sbb
or
pusha
or
daa
je
cmp
fucomp
nop
lea
xor
push
fs
xor
push
adc
jo
mov
lret
sti
inc
scas
nop
popa
notb
xlat
out
cs
inc
lea
dec
mulb
cld
std
inc
outsb
mov
add
push
push
fs
cmp
outsl
mov
inc
pop
sub
adcl
stos
mov
and
sub
sub
add
push
mov
mov
out
ja
mov
int
cmpsl
or
lds
push
xor
and
jg
dec
mov
lea
pop
js
jg
xchg
lds
lret
or
fsubs
lcall
sub
push
xor
test
out
push
ror
jge
repz
out
mov
push
das
test
cmpsb
inc
cmpsb
movsb
xorb
sahf
and
xor
or
pop
orl
xchg
push
mov
mov
insb
rcrb
dec
aaa
xor
jecxz
and
shrl
insl
xchg
sub
sahf
out
test
jg
lds
in
andl
sbb
orl
jmp
push
pop
mov
sahf
jecxz
out
jl
test
mov
ljmp
xchg
mov
repz
pop
loope
mov
or
sbb
and
mov
mov
sbb
aas
aam
fistpl
push
add
mov
xor
pop
xchg
dec
fildl
xchg
fs
inc
scas
cltd
out
movsl
int3
fmuls
push
sub
adc
les
outsb
dec
push
test
push
xor
sbb
adcb
or
xchg
add
jne
xchg
xchg
xchg
and
push
cltd
mov
inc
xchg
daa
fidivs
lahf
mov
cmp
mov
mov
sub
movsb
call
jae
stos
sub
jmp
sti
aad
jb
loopne
rcr
fs
dec
inc
sub
bound
out
push
xchg
push
data16
lods
seta
movsb
fistpll
cltd
nop
insl
pop
cmpsb
jne
iretw
shlb
push
call
stos
cmpsb
testl
push
mov
inc
push
jecxz
and
and
aas
xor
add
pushf
lock
mov
push
add
push
lods
adc
outsl
lock
cmc
mov
xchg
mov
cmp
mov
push
mov
imul
jo
xor
cwtl
add
cmpb
sahf
pop
xchg
mov
rcll
out
and
xchg
stc
test
leave
ja
or
cmc
imul
shlb
in
es
aam
or
enter
sub
out
pop
sbb
sub
insl
mov
jns
aam
mov
pop
mov
shlb
fidivs
mov
push
nop
aaa
das
lcall
vmread
mov
mov
outsl
xor
inc
or
sti
mov
dec
push
iretw
pop
jge
outsb
jo
lret
sub
or
in
lea
and
cmp
add
cmp
js
cmp
lcall
outsl
xor
data16
pop
stc
inc
mov
es
lea
dec
popf
add
cs
pop
adc
cmp
popf
icebp
mov
pop
lret
adc
nop
adc
scas
sbb
lods
xchg
sbb
sbbl
push
dec
mov
inc
push
outsb
insb
and
cltd
popf
inc
loop
cmpsb
mov
mov
cld
jno
fwait
sahf
xchg
add
mov
mov
and
fildll
sub
push
aad
fildll
lahf
jo
xor
mov
arpl
rorl
push
xor
adc
xor
or
lcall
dec
test
aad
xchg
inc
dec
daa
xchg
adc
add
outsl
xchg
cmc
scas
insb
sub
out
arpl
xor
icebp
or
cld
adc
fs
xor
xor
cmp
cmp
das
jne
mov
cmp
in
xor
xchg
mov
fs
inc
fmul
jb
cld
inc
fcmovne
cmc
inc
inc
and
inc
push
xchg
arpl
loope
dec
add
mov
mov
adc
lea
push
inc
std
xor
jb
mov
out
pop
and
test
push
shll
and
lcall
or
xor
mov
xchg
mov
aad
xlat
pop
xor
mov
ljmp
push
outsl
pop
lahf
adc
cmp
sub
adc
add
xor
adc
out
or
fs
cmp
gs
fucomi
xor
sub
xchg
insl
dec
mov
cmpb
mov
hlt
por
mov
sbb
adc
fimull
lds
inc
std
mov
mov
or
lea
jmp
imul
test
imul
mov
pop
imul
xchg
lea
pop
xor
sub
inc
int3
repnz
test
mov
jle
and
dec
ficoml
adc
pop
pop
jp
fadds
scas
add
sbb
xchg
mov
dec
pop
pusha
or
popa
push
add
in
jle
mov
js
mov
pop
xlat
daa
leave
lcall
xchg
xor
inc
dec
nop
scas
mov
cmp
aas
pop
dec
xchg
jmp
repz
jnp
aam
pop
pop
stos
jns
add
sarb
cmp
jns
out
inc
ja
dec
push
ljmp
inc
pushf
iret
addr16
jnp
subb
jg
lret
mov
mov
mov
cmp
or
or
push
push
jno
punpckhbw
inc
push
push
sbb
imulb
idivl
add
dec
push
mov
repnz
stc
xchg
shl
call
xchg
inc
xchg
push
clc
cli
cmp
cmp
movsl
ffree
gs
mov
test
movsl
cmc
test
mov
das
mov
sub
inc
je
ljmp
int3
push
repnz
adc
ljmp
cmc
jns
orl
les
fimull
xor
shll
ss
mov
dec
pushf
gs
iret
cmc
fwait
loope
arpl
jb
fldcw
repz
or
xchg
xchg
pop
xchg
mov
insb
cld
and
out
add
sub
xor
jnp
enter
out
adc
fwait
daa
push
ret
call
call
adc
testl
dec
mov
jo
xor
add
xor
xchg
mov
jb
jge
mov
sarl
fisubrl
fdiv
insl
adc
xchg
je
xchg
sbb
lds
ss
push
rcrl
mov
dec
arpl
int
add
lahf
push
add
arpl
pop
inc
inc
mov
mov
fldt
and
stos
ret
ret
aam
repnz
sub
jle
arpl
leave
sbb
icebp
aaa
pop
mov
push
test
mov
int
popf
fisttps
nop
out
cltd
shrb
xchg
sysret
std
stos
inc
fwait
addl
jo
mov
or
cs
dec
jb
mov
movsl
lahf
pop
sbb
test
jnp
out
push
jb
negb
jne
mov
in
jge
dec
mov
xor
adc
in
movsb
shr
lret
dec
in
cmp
lret
sub
aas
sbb
movb
pop
cltd
neg
jb
outsb
mov
push
cmp
and
jo
fsubr
es
vorps
pop
push
dec
aam
test
xchg
stos
cltd
mov
cmp
add
xchg
jo
punpckhdq
int3
lret
out
push
lcall
jecxz
push
cmp
pop
sub
ds
fildl
call
lods
shlb
inc
in
and
mov
dec
aad
std
fsubs
add
popa
and
test
mov
pop
jecxz
imul
insl
sub
fs
push
enter
dec
xchg
hlt
pusha
adc
jns
jnp
lods
xchg
ljmp
in
call
push
imul
mov
xchg
ljmp
bound
mov
je
cmp
sbb
pop
pop
sbb
sub
sub
dec
or
jne
ds
icebp
cmc
cwtl
test
jle
sbb
sbb
adc
xor
inc
hlt
mov
repz
mov
movsl
ret
pop
aad
icebp
dec
add
pop
push
cmp
out
js
cmp
or
cmp
adc
dec
mov
pusha
incb
and
push
xchg
or
popa
push
popa
ret
pop
movsl
int
js
dec
xchg
inc
out
rcll
sbb
xchg
push
andl
fisttpl
or
xor
lcall
xor
dec
in
push
dec
mov
into
arpl
dec
cmp
ret
sub
js
mov
mov
fmulp
mov
xor
push
in
mov
add
mov
pop
xor
xchg
lcall
adc
mov
xlat
add
fwait
lcall
jb
popf
rol
cmpsb
pop
jbe
into
clc
data16
inc
pop
add
cmp
xchg
imull
ljmp
data16
push
inc
or
loopne
ret
push
fists
pop
dec
in
sbb
mov
xor
jae
inc
jg
add
add
jmp
inc
xchg
mov
inc
adc
daa
add
les
sub
xor
inc
sbb
pushf
nop
aaa
adcl
pusha
sbb
addr16
sbb
negb
xchg
in
stc
loope
pop
in
pop
jne
movd
push
xchg
out
add
outsl
cmpb
mov
add
or
mov
dec
out
mov
in
out
in
ljmp
inc
jmp
cli
outsb
cmpsl
cwtl
dec
cmovne
dec
in
and
xchg
jp
faddl
icebp
pop
das
lcall
fisttpll
mov
push
inc
int
daa
mov
imul
mov
sbb
popf
mov
xor
out
mov
jp
lahf
scas
sub
inc
cltd
imul
xchg
mov
daa
rorb
out
pop
aaa
mov
cmpsl
xchg
adc
mov
out
and
xchg
outsl
in
in
pop
outsb
mov
sar
std
icebp
addl
bnd
mov
rol
cmp
lret
push
pop
dec
jb
sahf
ss
mov
inc
addl
mov
add
sub
pusha
lock
cli
mov
fldl
jae
push
lea
js
dec
dec
add
push
push
out
push
jnp
pop
add
mov
popa
orl
mov
ja
mov
and
inc
fwait
xchg
xchg
add
push
mov
jo
or
xor
xchg
xor
aas
push
jmp
fildll
js
movsl
and
xor
jmp
sti
lret
fwait
pop
inc
pop
push
shrb
add
fnsave
mov
push
mov
daa
cvttpd2pi
push
pop
mov
ret
dec
cmp
push
cs
pop
mov
sub
adc
sub
sub
jle
ja
stos
xchg
jl
jecxz
jecxz
and
loopne
pop
daa
sub
pop
outsb
cmp
and
pcmpeqb
jb
mov
in
mov
shrb
aaa
inc
inc
in
pushf
xor
filds
mov
sbb
push
fisttpll
push
fidivrs
mov
in
or
xchg
pop
test
out
ljmp
add
xor
ds
addr16
loope
mov
xor
push
push
cmp
push
repz
lret
ficompl
dec
addl
fcomip
arpl
sahf
mov
inc
shll
sbb
xorb
leave
pop
jae
xor
aam
aad
mov
scas
in
repnz
dec
add
dec
cmp
cmp
sub
inc
popa
js
pop
inc
loope
repz
movsl
out
sub
mov
dec
push
movb
das
xchg
push
test
cmpsl
dec
test
shl
aaa
es
inc
insl
andb
push
icebp
sub
xchg
and
lahf
pop
das
mov
int3
in
or
xchg
sub
mov
sbb
enter
or
cmp
ds
scas
cmp
cs
insl
mov
sub
mov
arpl
or
lahf
inc
out
mov
dec
rorb
cmc
dec
sbb
xor
mov
sbb
cltd
ss
in
add
dec
dec
aaa
adc
jmp
jle
leave
jp
movb
add
fstps
aad
icebp
xchg
rolb
std
cmp
je
push
cltd
pop
sti
in
xor
sbbb
shr
les
loope
pop
push
insl
pop
jo
adc
je
or
hlt
sbb
insl
insb
aas
test
xchg
paddq
or
adc
loope
sbb
or
movsb
rorl
push
iret
add
ja
fisttpll
dec
mov
pushf
xlat
sbb
repnz
rolb
test
fidivs
repnz
xchg
jo
ja
mov
ret
inc
jbe
cs
dec
fists
xchg
mov
dec
fdivl
add
jg
repnz
in
lods
add
int3
and
sub
xchg
dec
decb
movsb
jl
stc
adc
xor
add
scas
xor
lea
fs
mov
ret
pop
dec
xor
mov
pop
or
rol
adc
inc
rcll
fists
sbb
sub
mov
sbb
or
cli
push
lahf
movsb
dec
sbb
add
mov
je
and
add
inc
sbb
pop
loope
jmp
push
and
adc
jnp
mov
lock
xor
out
mov
sub
hlt
cmp
jae
mov
and
push
clc
iret
gs
xchg
into
jb
js
cmpsb
aam
ret
cmpsb
jl
out
dec
loop
stos
dec
addb
stos
cs
lods
ret
pop
dec
sub
cmc
dec
jbe
int
cmp
add
pop
ss
jne
and
and
sub
into
sbb
rol
testl
out
adc
or
dec
mov
test
sahf
stos
jbe
fmul
adc
aas
xlat
lods
dec
out
pop
lock
pop
jmp
jp
pop
stos
push
push
std
dec
cwtl
sbb
cmpsb
cmp
cmp
push
adc
vmread
adc
fimuls
daa
jb
inc
mov
add
add
add
push
sbb
sbb
call
sbb
xchg
xchg
mov
aad
inc
jle
mov
sbb
push
in
lahf
lods
ret
adc
shlb
fs
mov
and
fcompl
mov
mov
ljmp
sub
sar
addr16
pop
xchg
cwtl
pusha
fnstsw
dec
pop
push
sbbl
mov
inc
mov
call
and
inc
cmpsl
gs
xchg
fs
int
mov
jbe
lcall
bound
dec
mulb
je
mov
cmp
pop
mov
ds
jl
dec
and
testl
sub
cmp
fsubl
insb
enter
adc
or
ficomps
les
rcll
cs
pushf
sahf
jl
mov
add
insl
out
push
daa
fwait
test
cmp
gs
mov
sub
icebp
stos
cmp
nop
fdivrs
leave
clc
push
dec
add
shrl
mov
fs
pop
jmp
jno
add
cmp
nop
cltd
cmc
pusha
cs
cwtl
js
sub
lock
sbb
mov
je
addr16
inc
pop
jnp
fistps
sbb
gs
iret
inc
jmp
mov
out
cmc
js
push
test
gs
outsb
js
outsb
popa
push
mov
flds
xchg
into
add
and
and
cmpsb
mov
xchg
mov
fisubs
adc
pusha
mov
push
pop
enter
jne
mov
ret
adc
cmp
sahf
mov
dec
in
pop
xchg
into
mov
mov
es
out
stc
dec
into
jmp
cmp
mov
arpl
subb
insb
ret
test
pop
cld
mov
push
jnp
jecxz
inc
mov
in
lods
jo
pop
fwait
jmp
push
mov
push
das
mov
sbb
cmp
cmc
testb
and
cltd
movsl
sbb
lahf
sbb
faddl
ss
push
lret
xchg
inc
jo
cli
sarb
cmpsb
and
test
cmp
lret
test
pop
mov
push
inc
test
call
iret
xor
push
and
xlat
inc
and
cmp
cmp
add
in
enter
xlat
insb
out
scas
mov
test
jp
popf
test
jg
dec
xor
inc
add
pop
lahf
push
out
js
cltd
push
sub
push
inc
pop
out
cmp
push
add
mov
cmp
movsb
jb
push
dec
andl
jo
call
inc
mov
add
aam
cmp
icebp
cmp
xor
mov
in
cmc
adc
pop
jp
mov
subl
shl
das
mov
rclb
or
clc
xlat
mov
negl
adc
jns
dec
leave
lahf
xchg
pusha
pushf
push
orl
adc
sub
mov
stc
js
add
loope
jo
inc
daa
popa
jae
lret
test
pop
iret
or
lds
xchg
xor
test
bound
popf
jmp
rcr
pop
xchg
rclb
add
pop
les
jg,pt
add
lcall
mov
mov
pop
sub
fisubrs
mov
rclb
outsl
cmp
push
popf
and
repz
xchg
ret
shlb
push
adc
fst
mov
ret
sub
push
repnz
sub
push
inc
lcall
out
pop
pop
or
jne
daa
cmp
xor
bnd
enter
push
js
shl
xchg
jmp
push
pop
pop
iret
adc
mov
mov
ljmp
hlt
or
aam
cmpsl
ret
or
movsb
negb
aad
fistpl
dec
sub
shlb
mov
push
testl
sbb
scas
mov
das
clc
push
xchg
test
leave
loope
xchg
out
rorb
xchg
mov
popf
stos
sub
sub
sbb
bound
jp
hlt
adc
cmp
cld
mov
fmuls
xchg
xor
mov
sub
ja
sahf
dec
pop
mov
not
imul
fnstcw
test
cltd
test
stos
xchg
dec
ret
rcrl
inc
pop
icebp
adcb
adc
and
sti
jb
fsubrl
subb
adc
cs
outsb
ffreep
pusha
repnz
push
mov
loop
jge
int3
jmp
je
loop
sub
ljmp
pop
xor
xor
jl
pop
imul
mov
and
leave
stos
fisttpl
jbe
jecxz
pop
mov
jb
lea
pop
cmp
out
test
leave
loop
inc
mov
clc
jo
pop
imul
mov
pusha
kmovw
jbe
adc
adc
xor
push
loope
pop
mov
pop
in
out
and
loop
cmp
int3
daa
roll
inc
or
xchg
lea
jle
xor
inc
xor
sbb
pop
cmpsb
sbb
and
cmp
hlt
ret
out
jp
fiadds
sbb
add
cld
and
adc
jl
sbb
sbb
jmp
mov
pop
lods
out
js
loope
cmp
sbb
mov
and
pop
sub
push
lods
out
mov
xchg
mov
je
nop
sbb
lret
into
xchg
mov
xor
inc
dec
xchg
jae
jle
cmp
push
ret
mov
mov
arpl
loope
ss
dec
adc
mov
sbb
push
pop
jno
lcall
and
int3
xor
dec
push
cmpsb
pusha
test
fsubl
movl
fistps
pop
xchg
lret
hlt
dec
xchg
dec
xlat
movsl
xchg
fisttpll
ljmp
ret
sarl
pop
lret
dec
aas
cli
pop
sub
ret
mov
ret
hlt
cmpsl
xchg
fs
dec
fnstcw
jno
into
inc
pop
lds
test
fucom
inc
pop
xchg
fcom
mov
add
xor
add
subl
out
sbb
frstor
idivb
ds
add
inc
pusha
mov
lock
inc
jl
rclb
jp
sbb
push
push
adc
mov
cmp
cs
psrlq
jle
push
fldcw
mov
xchg
mov
enter
inc
jle
add
xchg
popa
xor
fdivs
jl
mov
cmp
rcrl
mov
or
mov
in
arpl
cmp
sbb
repnz
cmp
mov
rolb
inc
ret
dec
sbb
mov
cmc
sbb
mov
stc
and
sti
inc
ss
adc
aas
ret
gs
movsl
or
pop
rcr
add
cmc
mov
inc
pop
and
js
lcall
jl
outsl
mov
xor
shll
adc
cwtl
cs
cmpsb
xchg
sbb
lock
sub
jnp
pop
jae
sbb
hlt
daa
inc
mov
out
sub
xchg
sub
xor
fbld
iret
addr16
outsl
sbb
repnz
sub
ljmp
and
sbb
lret
insl
in
sbb
aam
mov
test
scas
adc
jo
fcoml
lret
loop
dec
into
cs
lcall
and
mov
mov
insl
push
jbe
ret
inc
mov
rcr
test
sbb
lret
mov
mul
push
fcmovu
pop
cmc
mov
mov
popa
jl
into
rorb
inc
pop
jecxz
jp
jns
addr16
dec
inc
repz
or
dec
mov
push
add
sub
xchg
xor
jmp
shlb
xchg
and
mov
mov
pop
negl
pop
idivl
gs
push
dec
pop
xor
insb
adc
ljmp
dec
mov
or
test
mov
sarl
jg
mov
or
or
lar
lahf
es
ja
mov
lds
inc
loopne
pushl
push
fwait
xor
fst
nop
or
xchg
push
mov
jle
jle
xor
add
call
jmp
add
je
cmp
pusha
cmp
ret
dec
xchg
shl
popa
adc
jno
mov
inc
jge
inc
cli
jge
adc
gs
je
je
nop
shll
mulb
sub
mov
or
ljmp
push
aaa
xlat
jns
xchg
mov
int
inc
in
cwtl
aas
out
fucom
sahf
fmulp
es
sbb
int
jmp
and
xor
adc
int
je
ljmp
out
rorl
sbb
jp
or
subb
sarb
incl
inc
push
ds
inc
pop
and
ds
mov
scas
std
arpl
sub
test
sar
sti
inc
cmp
sbb
ret
xor
cld
popl
xchg
and
popf
popa
mov
mov
dec
cli
jns
mov
fidivl
push
sarb
jne
adc
adcb
in
cmpsb
cmp
rorb
scas
shlb
in
push
clc
xor
adc
and
sbb
xlat
lret
xor
in
push
sbb
addr16
dec
or
inc
stos
push
inc
xchg
jne
xchg
add
adc
xchg
or
aad
pop
cmc
mov
stos
pushf
test
fs
loop
cltd
in
push
faddl
adcb
inc
push
xor
shrl
fistpll
mov
ja
and
idivb
lds
push
inc
jbe
or
add
xchg
outsb
inc
dec
or
inc
lea
icebp
and
movsb
cli
ljmp
arpl
fdivrl
arpl
mov
iret
dec
xor
cmp
out
push
notb
push
xchg
fs
or
filds
jns
or
pop
adc
fistl
sti
push
aam
jae
loop
xor
push
es
xchg
iret
xor
add
xor
movsb
xor
sbb
push
stos
movsb
js
in
jecxz
inc
push
cwtl
mov
iret
mov
mov
inc
hlt
push
mov
arpl
test
cli
fiaddl
sbb
push
sar
mov
inc
dec
loope
xchg
js
mov
in
xchg
jg
fs
popa
and
jno
dec
pop
into
push
xor
cmc
sub
inc
push
repnz
movsl
xlat
js
xchg
outsb
jp
cwtl
js
hlt
ja
pusha
dec
out
jmp
jb
pop
movsl
mov
xor
push
pop
roll
inc
lods
stos
jge
xor
popf
inc
outsb
movsl
inc
push
movsl
push
sbb
mov
shll
aaa
ljmp
add
cmp
push
mov
leave
outsl
les
fdivp
mov
mov
inc
fsts
mov
cmp
pop
sub
imul
cmpb
iret
inc
faddl
lock
jecxz
cmpsb
fst
shrl
jmp
xchg
lea
dec
aad
shl
push
jno
stos
mov
push
xchg
cmp
adc
mov
or
add
sbb
dec
cmpb
adc
mov
mov
pop
outsb
push
cmpsb
add
sub
mov
mov
fstpt
inc
adc
push
add
dec
jbe
lcall
push
negl
pop
in
xor
jecxz
dec
iret
std
call
mov
mov
out
shrb
or
or
dec
clc
or
adc
mov
mov
cmpb
mov
fstpl
pushf
pop
jle
popf
test
inc
nopl
mov
cmp
jge
stos
stc
in
adc
shlb
out
cmpsl
sbb
iret
xchg
pop
mov
out
popa
imul
dec
mov
sub
lea
push
cwtl
js
imul
add
ja
cmp
andb
cmp
sbb
dec
sub
shll
pop
cli
push
cmc
cmp
lea
adc
insl
or
ret
xchg
divl
pop
addr16
mov
inc
outsl
pop
cwtl
adc
mov
mov
mov
dec
push
add
lret
mov
scas
das
xchg
xchg
or
mov
inc
stos
adc
ljmp
js
jne
add
test
mov
fnop
xchg
int3
shlb
stos
mov
data16
jl
sub
push
loop
jae
gs
adc
test
mov
out
cltd
push
xor
xchg
sub
dec
fsubrl
and
xchg
xor
push
inc
xor
xor
outsb
loope
xchg
sub
pop
push
in
inc
out
in
dec
testl
mov
mov
mov
popa
pop
pop
fucomp
popf
test
cmc
cltd
ljmp
xchg
xor
add
fildl
xor
pop
loope
adc
repnz
std
shll
mov
or
scas
pushf
jecxz
jo
mov
and
movsb
cmpb
icebp
dec
or
push
ljmp
dec
push
mov
xchg
and
test
and
sti
outsl
dec
xor
aaa
jl
add
add
and
jmp
xchg
movsl
cwtl
sub
push
outsl
mov
test
push
rorl
inc
int3
and
pop
mov
mov
adc
fcoml
ss
xchg
sub
testb
arpl
stos
fmull
jmp
push
decb
mov
hlt
std
icebp
fwait
xchg
jp
xchg
hlt
xchg
sub
add
shll
imul
add
and
in
into
je
stc
mov
push
cltd
test
pop
add
in
jns
push
mov
ja
nop
negl
dec
pop
repz
loop
out
jge
sub
dec
popa
cmp
shl
popa
popa
scas
outsb
dec
std
jae
sahf
dec
adc
sbb
mov
dec
jg
or
stc
xor
rcrl
mov
ret
loop
inc
dec
adc
mov
push
fdivr
sti
lret
mov
pop
adc
mov
loop
aam
jno
mov
inc
add
cs
enter
ret
jecxz
arpl
xor
and
icebp
aam
dec
bound
outsl
and
sub
adc
cmc
outsb
sarl
leave
jno
and
pusha
mov
scas
daa
iret
test
into
cmp
dec
out
fmull
sbb
push
clc
fcmovnb
repnz
sub
and
mov
sbb
jg
mov
xchg
push
inc
or
jno
bound
fldenv
xchg
fwait
adc
ja
aad
or
dec
jecxz
fdecstp
rcll
xor
inc
cmpsb
fisubrl
cmpsl
or
xor
test
push
loope
stos
mov
jmp
dec
inc
lods
cmpsb
mov
jne
cli
lds
lret
inc
enter
dec
cltd
ja
lock
addr16
jnp
and
jo
mov
movsl
jl
push
inc
push
inc
mov
or
shlb
cmc
adc
mov
xor
add
in
inc
rclb
dec
push
jge
scas
fwait
sub
jg
in
dec
jo
aaa
sbb
jo
insb
cmpl
sub
ja
mov
and
test
xor
and
push
mov
ss
stos
push
mov
lods
icebp
js
icebp
xchg
loopne
cmp
pop
cmpb
sbb
pop
jle
pop
cmc
decl
adc
decb
loop
adc
stos
dec
cmpsl
dec
cwtl
sarb
test
es
and
xor
inc
cmp
cltd
pop
stos
adc
cmpsl
addb
mov
les
add
cmc
mov
inc
or
repz
cmpsl
inc
mov
rclb
cwtl
sub
mov
lods
sbb
call
sub
jl
ror
daa
jb
add
adc
aad
xchg
stc
sarl
sbb
sub
filds
and
stos
fs
inc
imul
sbb
cmpb
cli
mov
mov
pop
das
movsb
std
inc
and
aam
cmp
popa
cmpsb
mov
inc
xchg
jnp
rcr
add
jno
adc
push
push
xchg
xor
pusha
shll
jbe
packssdw
in
sub
cmp
outsl
dec
ljmp
mov
lret
stos
out
push
sbb
cld
dec
fbld
xchg
aam
push
enter
scas
adc
adc
movntq
movb
cld
jb
loop,pn
push
in
es
js
lds
int3
push
jae,pt
pop
or
push
cs
mov
fdivp
int
les
sub
aam
pop
leave
add
inc
push
es
fs
jne
mov
sbb
imul
adc
out
js
js
lods
add
icebp
ljmp
shll
imul
mov
xchg
imul
scas
cmp
dec
decb
fsubl
call
xchg
int3
les
sub
repnz
pop
subb
out
cmpsb
scas
movsl
cmpb
cmpsb
pop
mov
or
clc
lahf
mov
jo
fildll
cmp
pop
push
add
fisubrl
ret
imul
movsl
jle
and
sbb
flds
scas
in
mov
cmp
cmpsl
ljmp
daa
pushaw
inc
inc
push
and
jae
popa
out
dec
lods
repnz
push
cmp
outsl
fdivs
cld
fsts
addr16
aaa
push
inc
cmp
mov
lock
clc
inc
mov
xchg
popa
clc
adc
sbb
sub
movsb
ficompl
mov
pop
js
pop
lcall
loopne
stos
mov
repnz
sbb
xor
insl
pop
fldcw
adc
jge
fiadds
jl
mov
mov
popa
aaa
push
hlt
mov
sbb
xlat
hlt
sbb
jne
arpl
cwtl
mov
hlt
jmp
mov
in
pop
fiadds
xchg
push
notl
cwtl
inc
clc
in
jl
lds
xor
cmp
pop
sbb
into
dec
je
xchg
int
ret
jge
out
mov
cwtl
jno
sub
mov
pop
adc
repz
mov
mov
cli
icebp
jge
lods
mov
test
xchg
mov
xchg
pushf
in
xchg
xchg
ljmp
jl
adc
xchg
out
sahf
scas
dec
out
les
lds
dec
int
repz
pop
xchg
cld
lock
lea
lods
dec
sbb
sbb
movsb
pop
jmp
xor
in
jmp
gs
out
dec
shr
xchg
call
jmp
cmp
adcb
mov
movsb
add
lock
mov
xlat
sub
push
sub
stos
mov
and
lods
pop
sbb
mov
push
leave
stc
sub
mov
adc
outsb
and
push
lahf
scas
aas
or
mov
stc
aam
sti
aam
mov
loop
sub
xchg
dec
dec
stc
jl
mov
fwait
repnz
out
out
out
insl
add
or
insb
or
ficoml
pop
dec
or
sbb
xor
loop
incl
mov
cmc
ds
leave
cmc
and
fwait
orb
ss
ja
or
not
or
mov
adc
hlt
std
cmp
and
mov
xchg
iret
pop
mov
and
cmp
push
lcall
aam
pop
cltd
mov
daa
les
sub
jns
std
mov
and
xchg
push
jle
inc
inc
and
inc
sub
cwtl
adc
shrl
jbe
repz
adc
insb
sub
xor
rolb
pop
cld
and
cmp
xchg
lret
fistpll
dec
mov
call
pusha
loope
fnstcw
sbb
lods
in
sahf
rcrb
xor
pusha
addr16
imul
pop
or
jp
push
mov
sub
jb
adc
movb
adc
test
cmp
mov
xlat
mov
popf
int
adc
mov
int
out
addr16
sub
cmp
mov
fldl
mov
es
sarl
insl
test
hlt
mov
sub
repz
sub
xorb
mov
sarb
ficompl
sub
dec
cmp
lock
sub
push
aaa
sarl
mov
les
outsb
or
cmp
arpl
add
mov
aad
jnp
push
inc
inc
mov
inc
clc
mov
pusha
imul
sub
and
mov
into
mov
mov
pop
push
ja
and
subl
cli
mull
ret
test
fucomip
movsl
xor
test
ret
mov
jno
mov
xchg
xor
push
ficoml
sbb
mov
sti
jmp
sub
rcrb
xchg
bound
addr16
sbb
mov
pop
outsb
das
mov
sub
xchg
pop
outsl
adc
jo
ljmp
rcrb
fiaddl
leave
popa
es
sbb
sbbb
rcrb
pop
loope
push
pop
push
cmpsl
mov
jmp
inc
cld
data16
cmpsl
sahf
push
sub
mov
inc
mov
cmp
xchg
jl
xchg
jbe
imulb
pop
add
fwait
cld
or
mov
dec
inc
inc
mov
stos
ficomps
mov
sahf
pop
jp
in
decb
inc
mov
std
lahf
mov
nop
repz
mov
out
divb
adc
push
loopne
test
sub
sub
lods
sub
mov
out
bound
test
adc
push
pop
inc
fstl
mov
sub
gs
cli
sbb
arpl
outsb
adc
add
sub
aas
jge
add
repz
insl
rcrb
sti
xchg
test
outsb
jb
in
and
or
jns
jae
pop
aam
in
addr16
js
fs
out
jno
dec
pop
aaa
cwtl
xchg
jp
sbb
fildll
ret
mull
in
into
mov
dec
inc
and
cmp
bound
xchg
cmp
jns
inc
mov
outsb
xchg
stos
jbe
and
jge
and
lcall
push
test
push
mov
orl
shlb
mov
cmp
orl
cli
add
test
out
je
adc
xchg
sahf
jmp
mov
lea
sarl
adc
and
mov
addl
data16
aaa
sarb
mov
adc
es
add
xchg
pushf
cmp
or
jle
and
and
jns
inc
dec
jle
fstps
shl
inc
lcall
jmp
pusha
mov
mov
lds
xor
aas
stos
mov
jge
or
sbb
loope
mov
sbb
clc
push
sub
sbb
push
hlt
mov
fldcw
cs
ljmp
push
lcall
push
jne
jo
inc
add
cmp
jp
jl
jl
imulb
lcall
inc
xor
pop
inc
out
pop
cli
fimuls
leave
stc
push
pop
or
mov
dec
pop
out
sbb
dec
push
or
cwtl
or
cld
int
fisubl
push
sti
mov
jno
adc
aad
adc
dec
inc
sub
add
mov
inc
and
stos
and
pop
cmc
dec
aam
pop
pop
mov
or
sbb
popf
out
daa
jg
sbb
dec
iret
sahf
das
cmpsb
sbbb
xchg
sarl
cmc
add
aaa
inc
push
ljmp
outsb
cmp
mov
lea
inc
lea
cmpsb
imul
aas
rorl
ret
inc
stos
test
lea
lcall
neg
popa
lock
mov
or
mov
add
push
mov
push
mov
ja
std
fcomps
pop
out
mov
push
xor
aaa
test
sub
orl
cmpl
dec
call
cmp
pop
cmpsl
push
in
icebp
aad
or
cmp
pop
repnz
mov
jo
sar
aam
stc
or
mulb
sub
mov
nop
bound
rorb
push
and
sub
cltd
test
aaa
jo
stc
aas
pop
jl
mov
xchg
addb
adc
push
fnstenv
pop
jmp
pop
sar
out
imulb
xchg
in
push
jp
out
mov
pop
jb
adc
fstpt
mov
mov
pop
and
jns
push
inc
xchg
mov
js
xor
pop
lock
sub
mov
inc
cmpsb
add
sub
clc
gs
mov
mov
sbb
mov
add
inc
lret
cli
mov
dec
xor
adc
add
pop
push
add
mov
rclb
jecxz
fs
fsubs
pop
adc
jae
push
jecxz
or
fld
xchg
pop
test
fwait
xchg
add
mov
sti
les
dec
and
adc
add
rcrb
pop
es
loope
or
dec
adc
scas
call
fwait
or
insb
dec
pop
test
mov
repz
xor
in
or
stc
out
pop
imul
lcall
adc
mov
pop
in
cmp
imul
into
adc
addr16
fucom
imul
leave
add
vmwrite
push
nop
hlt
jge
jae
xor
mov
mov
mov
sbb
pushf
int
stos
insb
xchg
rorl
iret
dec
xor
adc
add
push
sahf
xchg
pusha
test
xor
jne
jmp
lods
cmc
pushw
andl
fwait
les
pop
gs
mov
lock
fstps
movsl
xor
je
fnstcw
cli
lds
rcl
outsb
mov
pop
imul
arpl
or
addb
pop
dec
jl
iret
subl
les
push
pcmpgtd
adc
cltd
xlat
adc
imul
pusha
insb
inc
xor
sbb
mov
fsubl
and
mov
fwait
addb
les
push
dec
pop
mov
imul
mov
mov
mov
jge
jg
push
push
sarl
aas
xchg
neg
sbb
aad
mov
lret
sbb
loopne
lahf
aas
jne
adc
xor
cmp
pop
aaa
xor
jbe
lock
xchg
ret
ret
xor
or
pop
jl
xchg
or
mov
js
cmp
sbb
cmpsb
in
pop
icebp
cld
jle
imul
pop
daa
xor
pop
cmp
mov
add
iret
ffreep
push
lock
fimuls
sbb
inc
aaa
fldenv
test
jb
rcrb
push
bswap
movsb
jae
stos
or
insb
ljmp
sub
fsubrs
pop
aam
jmp
bound
pusha
mov
xchg
inc
dec
adc
cmpsb
cmp
sub
adc
loope
lods
xchg
pop
lods
inc
xchg
sub
mov
lods
test
test
xor
dec
rcrl
ffree
adc
sbb
cmp
dec
xchg
jmp
repz
icebp
jmp
into
jns
outsl
int
rorb
rcrb
pop
mov
push
std
das
lock
dec
shlb
lea
rep
mov
movsb
aas
pop
insb
push
mov
rorb
es
addb
out
sarb
ja
sbb
and
mov
adc
jno
out
test
inc
pushf
mov
xchg
loope
dec
leave
push
int3
cwtl
int
fwait
push
lock
xchg
inc
subl
cmpsl
les
jne
sub
cmp
fucomp
sub
pop
or
fldcw
jl
imul
xchg
fidivrl
int
aaa
push
popa
cmpb
push
popa
and
push
pop
mov
clc
leave
sub
pop
movl
rorl
hlt
sub
in
jle
out
inc
test
dec
in
lock
mov
scas
sarl
pop
mov
sbb
cmp
xchg
faddp
sbb
pop
mov
shlb
push
int
bound
pop
mov
pop
lcall
lods
xor
or
sub
pushf
mov
push
lods
clc
imul
push
xchg
inc
out
jno
mov
out
fdivr
lods
pop
shl
or
sub
loopne
add
push
or
mov
mov
mov
push
into
add
mov
dec
dec
pop
mov
loop
xor
add
out
sbb
push
popl
adc
call
add
xchg
adc
mov
sbb
mov
mov
xchg
xchg
adc
xchg
jmp
rcrl
xchg
xor
dec
clc
stos
scas
inc
push
clc
mov
stc
lcall
ret
add
loop
in
clc
sbb
js
xor
ljmp
js,pt
aam
lods
pop
adc
loop
mov
cmp
sub
aam
adc
mov
repnz
cmpsl
cmp
enter
pop
xchg
ljmp
dec
test
andl
in
popa
xor
out
imul
xor
lock
lock
mov
jg
push
or
xor
ss
or
mov
test
push
cmpsl
fistpll
sbb
mov
ja
scas
dec
mov
shrl
xor
sub
jp
push
xor
inc
mov
loopne
sbb
addr16
push
inc
vcvtsi2ss
inc
mov
aam
ja
ret
xchg
in
sarl
sbb
ficompl
and
stos
fcomps
imul
add
jne
mov
imul
sub
aaa
cmp
cmp
fdiv
sub
aaa
pop
push
rorb
cld
imull
add
sub
mov
cmp
adc
cmc
xchg
ja
test
and
fidivl
repnz
les
xchg
dec
scas
in
mov
lret
aaa
mov
jl
lods
js
cmpsl
in
movsb
insl
jnp
mov
sub
pushf
lea
bound
popa
and
xlat
mov
pop
xchg
mov
aas
sahf
sub
scas
cli
push
pop
bnd
push
je
mov
aas
aam
cwtl
cmp
dec
add
mov
or
pop
iret
psubusb
mov
scas
xchg
adc
loope
xor
dec
data16
test
fisubs
mov
cld
ja
push
sub
out
imul
cld
dec
popf
sahf
push
ss
outsb
mov
lret
nop
and
aad
pop
lcall
sahf
xor
jbe
sti
aam
and
lret
cmp
fildl
int
outsb
mov
sbb
xor
sbb
mov
push
adc
jne
or
test
xchg
shlb
movsb
mov
stc
test
fs
je
jmp
xor
mov
imul
push
es
and
mov
jecxz
loopne
mov
std
sub
std
lret
cmp
cltd
push
push
jo
jmp
sahf
pop
pop
test
mov
xor
sbb
and
add
xchg
jle
jg
jl
dec
add
sarb
push
sahf
jno
sub
fisubrl
mov
mov
jns
sub
ja
mov
loopne
les
cmc
pop
daa
push
add
or
sti
mov
cmpsl
sbb
mov
pop
test
mov
cwtl
pop
js
cmp
xchg
adc
fistps
mov
pop
inc
in
sbb
jae
fdiv
push
subl
pop
in
andl
jecxz
mov
xchg
push
push
dec
aad
jp
xchg
fstps
iret
stc
pop
test
push
cwtl
pushf
cld
sti
sbb
add
adc
pop
adc
mov
daa
mov
xchg
push
sbb
arpl
mov
dec
sbb
sub
mov
xchg
push
cs
jno
popa
jg
std
cmp
movb
mov
icebp
add
add
pop
into
xchg
mov
or
fcoms
iret
mov
jg
or
popf
pusha
lret
ljmp
cmpsl
shll
shr
imul
loopne
or
push
std
or
lea
pop
and
and
mov
bound
test
adc
and
sub
into
out
stos
outsl
data16
sarb
cltd
sub
xchg
imul
loopne
mov
je
pop
jp
inc
push
inc
popf
mov
test
in
lcall
insb
push
dec
lret
and
mov
imul
mov
and
adc
lds
xor
mov
stos
push
and
pop
push
mov
adcl
xchg
xchg
push
xchg
cmpl
mov
jae
je
xor
jecxz
jp
sub
test
dec
out
sbb
dec
adc
sub
pop
and
jg
cmpsb
mov
movsl
sub
or
ja
orb
sub
mov
out
pop
jp
nop
loopne
js
jl
vminsd
add
adc
scas
pop
sbb
les
cmp
jb
es
int
add
shrb
ss
sbb
jle
cld
mul
fbstp
dec
sub
inc
xor
fsubl
icebp
popf
cli
stc
dec
ret
or
lods
sub
fwait
icebp
jns
xor
inc
mov
mov
pop
and
mov
add
cwtl
in
out
or
data16
mov
xor
in
sub
sub
div
icebp
mov
xor
ja
sub
push
xor
sarb
enter
test
sti
lret
inc
adc
mov
jae
rolb
cli
sbb
mov
stc
adcl
fstpl
iret
cs
jno
mov
or
pushf
loope
xchg
data16
inc
mov
jl
shll
mull
rclb
lea
xor
cmp
loop
xlat
hlt
mov
mov
ds
mov
jo
jns
insb
dec
ss
mov
int
xlat
push
fbstp
cli
ljmp
sub
clc
test
in
rcrl
xor
orl
sbb
call
jmp
push
imul
test
hlt
xchg
and
repnz
rcrl
push
and
mov
xor
clc
jp
dec
pop
jecxz
lret
inc
in
dec
push
stos
ficoms
push
popa
sbb
cltd
add
roll
sbb
and
call
xor
nop
cmpsl
ret
ror
or
cmp
pop
dec
or
sarb
rolb
lahf
sub
push
ds
mov
cmp
inc
nop
cmp
in
or
or
pop
cld
test
in
jmp
push
xchg
ret
xor
cmp
pop
sub
adcb
sub
push
aad
rolb
or
out
js
cwtl
pop
inc
pop
mov
adc
sub
int3
add
cmp
push
lock
insl
mov
decb
lods
adc
outsl
cvttps2pi
aaa
cmpsl
add
lds
cs
or
inc
sub
sub
mov
aaa
push
ljmp
popa
push
loope
push
pop
cli
and
cmpsl
inc
stos
les
adc
repz
arpl
pushf
rcll
and
inc
mov
addr16
and
xor
inc
cltd
sbb
push
xorl
gs
stos
add
or
fcoms
loop
mov
jle
xchg
jl
xor
scas
mov
xorl
lds
add
div
pop
xor
cmp
bound
and
int
mov
fsubs
xorl
mov
jg
mov
cmc
stos
push
mov
repz
xchg
in
and
cmpsl
fs
push
jl
jbe
jmp
filds
lret
shl
push
ljmp
xor
cs
jecxz
shrl
into
mov
xchg
xor
inc
mov
incl
sbb
mov
cwtl
dec
enter
lcall
inc
inc
mov
cwtl
inc
ds
inc
fdivl
xchg
dec
xchg
cs
push
jl
fxsave
push
dec
inc
push
int3
sub
in
pusha
das
fidivs
mov
jnp
sub
hlt
jle
pusha
scas
mov
negl
push
mov
in
pop
inc
push
or
adc
inc
xchg
dec
and
cs
xchg
and
mov
push
mov
cmp
icebp
aad
lock
xchg
cmpsb
popf
jne
ss
adc
pop
xchg
push
jne
adc
add
push
sbb
popa
dec
mov
stos
cwtl
pusha
jg
pop
sbb
callw
fdiv
enter
imul
popa
sub
mov
lret
pushf
xchg
add
cmp
std
push
das
add
pop
ret
icebp
or
dec
imul
sbb
sub
int
mov
std
shlb
pop
jmp
sub
xor
rcr
mov
pop
cwtl
push
push
out
mov
nop
fs
jne
jp
test
jo
sarb
or
lret
and
aas
inc
int3
inc
push
aad
push
insb
inc
push
mov
repnz
dec
inc
pop
nop
mov
loop
jecxz
add
fsubrs
movsb
or
or
insb
cs
inc
jns
pop
pop
hlt
imul
add
dec
aad
pop
xchg
out
imul
dec
push
adc
add
les
aad
mov
enter
ret
int
int3
shll
ret
cwtl
insl
inc
inc
xor
and
mov
insb
hlt
cmp
out
inc
mov
inc
cmpsl
or
test
incl
add
mov
xor
out
jbe
cmpsl
jno
dec
jne
mov
mov
fcomps
hlt
jge
jp
mov
leave
int
sub
sbb
call
in
out
mov
jg
aas
sbb
test
popa
adc
cld
sub
inc
pop
idivb
adc
push
repz
and
jmp
push
fimuls
nop
xchg
inc
mov
mov
xchg
cmc
inc
repz
pushf
fcomp
pushf
mov
int
shl
or
jno
jmp
push
push
ficoml
aas
mov
fdivl
sahf
mov
in
cmp
mov
mov
mov
mov
mov
outsl
out
sbb
adc
fiadds
sub
push
mov
sub
mov
mov
test
xor
adc
mov
dec
xor
mov
mov
cwtl
addr16
push
js
stos
movsb
jo
ret
rcll
std
sub
cmp
and
ror
ret
sbb
in
mov
push
xor
mov
mov
mov
mov
xchg
mov
repz
aas
xchg
bound
inc
pop
in
mov
push
xor
pop
pop
mov
jne
test
das
int3
sub
mov
lret
cmp
sbb
sbb
stos
cli
imull
xchg
mov
lahf
aas
ret
fstpt
sub
jle
push
mov
mov
jns
push
xchg
pcmpeqw
and
addr16
negb
mov
gs
and
test
xorl
jg
sbb
xor
repz
mov
xchg
or
jle
add
push
adc
int3
adc
jo
jnp
mov
fimull
cltd
pushf
popf
and
push
shrb
and
xor
fisubrs
mov
dec
ret
add
sbb
adc
outsl
scas
sub
sbb
push
xor
jne
mov
mov
xchg
inc
mov
push
inc
jb
das
stc
mov
mov
fsubp
jo
cli
into
ja
hlt
mov
mov
xchg
sbb
scas
sub
inc
pop
int3
add
cmp
test
xlat
dec
adc
adc
stos
daa
jb
test
adcl
mov
inc
or
lcall
mov
sub
roll
or
mov
fwait
cld
mov
xchg
mov
notl
xor
stos
mov
cmp
lcall
jae
inc
rcll
rcrb
jl
cmp
inc
hlt
call
and
lret
xor
dec
inc
mov
outsl
cwtl
mov
push
orb
in
mov
pop
mov
or
jo
int3
mov
mov
in
test
mov
mov
rcrb
and
bound
cmc
xchg
jg
leave
sahf
mov
xchg
cmp
test
data16
pop
or
dec
xor
cmp
adc
mov
adc
xor
int
test
inc
in
sub
xchg
lret
jb
pop
js
jl
das
mov
decb
inc
mov
repz
pop
or
jecxz
cmp
push
dec
rorl
inc
pop
loop
test
pop
sbb
insb
sub
mov
xchg
int3
ljmp
cmp
or
sti
int3
lods
test
notl
iret
adc
sbb
or
inc
mov
push
push
nop
push
and
std
mov
push
mov
mov
xor
pop
dec
xor
sub
or
or
xchg
cmp
and
sub
xchg
inc
icebp
icebp
aam
pop
adc
cmc
or
mov
mov
cwtl
call
pop
jbe
fdivr
or
jecxz
jo
int3
std
int3
push
fidivl
adc
mov
shrl
xchg
outsb
xor
xor
movsl
into
test
ds
push
sub
or
aas
sahf
mov
sbb
push
mov
loop
cmp
xchg
pop
xor
int
movsl
mov
call
repnz
rclb
jne
add
cmp
sub
cmp
pushf
mov
pop
xchg
mov
ret
xchg
fwait
aad
xchg
stos
inc
push
cmp
and
inc
nop
jbe
cmp
sbb
or
iret
fidivs
adc
repnz
and
arpl
mov
pop
hlt
mov
hlt
inc
fisttpll
ficoml
mov
mov
jmp
in
sbb
xchg
gs
inc
cmp
movsl
sbb
jo
push
push
movsb
sbb
je
jmp
adc
or
or
test
out
xor
inc
sub
fs
inc
or
sbb
roll
sub
sub
sti
jnp
push
arpl
jb
out
dec
sbb
arpl
ja
sbbl
xor
dec
fidivrs
insb
xor
ret
cmp
push
aam
sub
fsubrl
lods
push
adc
icebp
xchg
push
call
inc
sbb
cld
rorl
cmpb
stos
or
lock
stc
cli
xchg
pop
mov
ficompl
pop
or
sbb
cmpl
pop
and
xchg
mov
lret
bound
scas
adc
jo
push
mov
inc
cli
mov
mov
sbb
jl
mov
outsl
ljmp
lahf
sub
pop
dec
push
xchg
lods
adc
lret
mov
inc
shlb
inc
insl
in
aad
inc
dec
rorl
dec
psrlw
inc
js
out
lea
dec
fnstenv
stc
xchg
pop
inc
push
sub
mov
add
mov
dec
add
cmpsb
ret
lods
sub
sub
loope
stos
cmp
cmpsl
fildll
stc
popa
in
scas
and
ss
mov
or
sar
lcall
or
fwait
and
cmp
test
cmpsl
aas
pop
add
test
mov
sub
and
in
fs
xlat
pop
scas
lds
ja
jle
rorl
mov
ljmp
aas
aad
popf
dec
enter
adc
imul
movl
jmp
sub
jb
push
loop
and
les
sbb
rcl
or
cmp
xor
cmc
out
loopne
enter
cwtl
sbb
jnp
sub
mov
cmp
xchg
add
mov
or
shll
stc
jecxz
movsl
insb
mov
mov
jge
cmp
and
mov
pop
mov
fwait
mov
sub
push
nop
addr16
enter
imul
push
repz
es
sahf
aad
lock
dec
es
mov
bndstx
imull
sbb
sbb
jnp
lret
inc
imul
cld
jl
enter
dec
insl
fsubl
cli
ror
adc
or
test
add
mov
adc
lret
and
into
mov
call
leave
mov
stos
stc
popf
dec
popa
fiadds
push
adc
hlt
mov
xchg
gs
das
aam
xor
dec
mov
lea
push
dec
mov
rolb
lret
loop
gs
arpl
and
fwait
push
mov
xor
outsl
push
lds
stc
cld
outsl
negb
sub
lods
aaa
ja
andl
cmpsb
imul
test
les
xchg
addr16
shl
stos
bound
or
pop
sbb
and
or
push
sub
in
jbe
push
call
lods
xchg
xor
popf
movsb
inc
xor
inc
nop
lahf
xchg
mov
fsubrs
add
out
fimull
add
repz
add
push
and
push
sbb
mulb
out
jmp
ret
mov
sub
js
and
aas
lods
out
ljmp
rolb
jo
data16
dec
inc
mov
out
adc
pop
in
popa
sub
aaa
and
lea
icebp
push
iret
adc
lods
xchg
out
divl
or
or
xor
loope
insl
sarl
sub
jecxz
lea
jbe
lds
push
adc
push
cmp
push
xor
sbb
add
push
outsb
out
in
mov
pop
rcrb
pusha
mov
popl
sbb
or
mov
inc
jecxz
stos
xor
out
mov
dec
insl
xchg
jmp
cmpsb
int3
lret
cmp
data16
je
ljmp
fbstp
cmp
cmpsl
pop
cld
inc
lea
cmp
or
mov
jl
in
inc
mov
lcall
popa
mov
orl
push
dec
lahf
adc
mov
es
je
das
cmpsl
pop
jmp
xchg
jecxz
fstps
jl
repz
inc
inc
dec
test
scas
xchg
lret
lds
test
lea
scas
ret
out
jg
js
and
inc
je
xor
jp
dec
sub
or
int
imul
push
lea
bound
pop
add
inc
rolb
fs
pop
jbe
add
in
jge
test
or
sub
or
fadds
lret
outsl
out
jge
clc
pop
or
lahf
repz
fisubrl
stos
jmp
push
out
popa
nop
mov
jo
or
fsubrs
or
or
push
inc
inc
imul
pusha
shr
push
dec
addr16
jnp
mov
mov
pop
bnd
jl
jmp
inc
fisubl
cmp
push
and
pop
addr16
popa
ret
mov
leave
and
cmp
and
adc
mov
rolb
lret
or
xchg
pop
push
xor
and
inc
pop
stos
sbb
cmpsl
jno
popa
icebp
fiaddl
sbb
mov
bound
or
icebp
hlt
pop
pop
cmp
adc
fildll
add
push
cwtl
push
pop
in
mov
out
scas
pusha
scas
inc
and
xorb
cmc
scas
stos
push
xor
mov
rolb
sbb
inc
push
pop
pop
and
jecxz
aad
push
push
inc
sub
mov
sarb
push
mov
mov
lods
pusha
xor
pop
inc
pop
mov
cmpsl
out
out
movsb
adc
inc
adc
sti
sahf
jmp
aam
push
aam
sti
mov
test
in
inc
sbb
mov
inc
ffreep
lret
test
push
cmp
or
leave
syscall
cmp
mov
dec
loopne
cmp
and
pop
mov
in
cltd
aas
es
cmp
mov
sub
hlt
dec
cs
fistps
sub
cmpb
das
mov
stos
or
push
cmc
inc
xchg
lret
sti
aam
jecxz
comiss
andb
pop
cmc
jl
shrl
mov
mov
cmp
fimuls
mov
adc
rclb
pop
clc
lret
daa
les
push
dec
lods
mull
push
mov
loop
add
adc
insb
andl
into
adc
xlat
lret
nop
loopne
pop
aam
jmp
sub
call
insb
mov
pop
std
mov
imul
adc
pop
fimull
rcr
imul
lods
pop
push
jg
dec
loop
hlt
out
add
mov
inc
movsl
mov
xor
leave
push
or
scas
fs
ljmp
jp
arpl
pop
jmp
pop
cld
sub
into
mov
idiv
mov
movsl
pop
sbb
xlat
enter
data16
aam
or
jl
xchg
mov
or
aaa
cmp
inc
test
test
rolb
mov
aam
fdivrl
dec
outsl
loop
jno
rcl
cltd
test
sub
movsl
loope
adc
pop
lahf
jmp
mov
lahf
pop
fmull
xchg
jnp
ret
pop
and
dec
pop
jp
pusha
add
cmp
or
dec
out
sub
test
nop
dec
sbb
icebp
sbb
es
jecxz
jns
push
out
movsl
mov
jp
inc
lahf
lock
jg
lea
test
xor
iret
xchg
in
push
insb
dec
and
push
jae
adc
inc
subb
xchg
mov
jb
inc
and
loope
int3
pop
sbb
jecxz
pop
loop
int
mov
fnstenv
mov
push
aam
xor
adc
cmpsb
decb
jmp
xchg
sbb
pop
orl
ret
xchg
fnsave
pusha
dec
mov
sbb
nop
scas
jae
sub
inc
push
notb
negl
adc
xor
test
stos
jns
jne
mov
mov
test
mov
dec
int
cwtl
lods
xor
sub
pop
lahf
test
or
xchg
mov
sub
test
es
sub
jbe
mov
adc
jns
cs
adc
cmpl
xor
jle
inc
and
xor
inc
push
bound
lea
cmpl
ficoms
cmp
aam
inc
dec
int
dec
sub
sbb
jg
repz
in
in
subb
jbe
xchg
pop
insl
adcl
mov
xchg
push
mov
pusha
push
mov
mov
jne
shlb
pop
sahf
popl
dec
mov
push
bts
sti
xchg
inc
test
sbb
cld
lods
mov
aaa
jp
testl
mov
mov
cmp
sti
notl
mov
dec
imul
gs
iret
das
rcll
lods
and
imul
lea
out
jbe
dec
hlt
outsb
sbb
push
aaa
push
fcmovb
into
jmp
jp
mov
jecxz
lahf
adc
push
jmp
add
sub
xchg
dec
fwait
test
or
xlat
dec
mov
out
jp
popf
push
sub
jno
push
jne
xor
jbe
mov
fistps
es
jo
mov
dec
inc
push
in
mov
addr16
jno
in
jne
popa
pop
adc
adc
jle
mov
test
adc
jge
xor
mov
cmc
mov
inc
lea
int
lock
fsubrl
js
ret
pop
test
xor
std
mov
stos
lea
pop
bound
sbb
mov
movsb
aam
fucomi
das
repnz
jbe
dec
pop
rcrl
mov
movsl
out
lods
cmp
pop
add
mov
cltd
jb
cwtl
mov
dec
cmc
hlt
add
and
dec
jnp
pop
or
imul
or
sub
xlat
sub
dec
pop
xor
dec
cmp
pop
aaa
ja
xchg
mov
sub
sbb
fsubrs
ficoml
pop
lret
xchg
xchg
sbb
push
xchg
xor
das
inc
insl
and
insb
ret
lahf
testb
stos
mov
add
sub
cmp
sbbl
int
xchg
outsl
push
dec
cltd
mov
mov
icebp
xor
mov
movsb
jns
dec
rclb
aad
inc
mov
push
data16
xchg
mov
pusha
lret
jns
pop
jno
jnp
jb
cmp
mov
add
outsb
xor
fwait
ljmp
pop
inc
cmp
xchg
mov
inc
shrl
cs
repnz
xor
leave
xor
mov
sbb
repz
jns
imul
jmp
call
pop
xchg
hlt
push
nop
push
or
push
outsl
pop
pop
cld
push
mov
out
imul
pop
add
inc
cs
add
sub
sub
fisttps
jmp
adc
add
cmp
add
int3
es
push
or
fcoms
fistpl
adcl
mov
add
or
jg
cld
add
enter
aam
lods
or
xlat
iret
sub
sub
sbb
xchg
sbb
mov
or
xchg
aad
push
ja
xchg
and
movsb
imul
movsl
imul
pop
fbld
pop
push
mov
jno
cmp
jg
cmp
sub
mov
shlb
inc
repz
icebp
pop
in
pop
mov
stc
or
or
jae
dec
cmp
loopne
hlt
out
andl
popf
je
fisttpll
inc
xchg
push
cmp
jno
cmp
fwait
inc
stc
push
mov
mov
mov
fs
cmpl
sub
push
jbe
jl
pop
in
jmp
cltd
cmp
mov
dec
mov
ds
sub
mov
aad
inc
push
sub
inc
push
cmp
mov
xchg
lahf
les
pop
in
repz
mov
sub
into
push
sub
and
sbb
repz
mov
inc
test
cmp
clc
rcl
daa
test
push
mov
sbb
and
sti
popa
push
movsl
into
andl
pop
aas
inc
jno
insb
jno
sub
adc
clc
subb
inc
xchg
push
stc
push
or
mov
out
je
in
inc
cmpb
ret
fistpll
das
push
xor
inc
or
repnz
sub
jbe
xor
test
cmpsb
xor
xchg
dec
mov
lods
inc
decb
push
sub
repnz
js
mov
test
scas
in
mov
les
popl
fsubrl
cmp
xor
arpl
incb
mov
or
pop
shll
sti
popf
push
xor
repnz
sub
lods
or
mov
inc
out
cli
sbb
mov
loopne
pop
mov
in
shrl
in
add
scas
repnz
roll
xor
jmp
mov
mov
mov
sbb
mov
aam
test
push
fdivs
xchg
inc
jmp
lahf
inc
add
add
pop
adc
inc
das
daa
and
jge
sbb
and
pop
inc
loop,pt
fstl
test
mov
push
mov
mov
lahf
fdiv
test
fldl
push
jmp
inc
push
shl
jb
push
aam
and
mov
mov
int3
dec
xor
and
jo
add
aaa
mov
loop
mov
sti
pop
lret
mov
mov
xor
insb
jp
xor
mov
nop
mov
hlt
cli
cmp
push
pop
push
cmpsl
xchg
xchg
lcall
cmp
pop
sbb
adc
int
insb
nop
std
and
aas
add
and
push
push
dec
adc
movsb
jl
add
fisttps
and
cmp
lock
adc
scas
xchg
mov
scas
mov
cmc
jl
mov
or
movsl
inc
popf
ret
pop
lcall
pop
rcll
add
lahf
and
jo
data16
inc
insb
test
push
xchg
shrb
xchg
out
inc
sbb
sti
lcall
movsl
test
push
pop
shl
or
pop
out
xchg
out
add
in
add
mov
js
cmc
in
pop
enter
sahf
adc
inc
out
pop
push
push
xchg
mov
mov
imul
mov
xlat
jle
ljmp
cmpsl
in
scas
xlat
stos
push
pop
mov
pop
pushf
rcrl
and
add
mov
jl
sar
popa
inc
lcall
pop
xchg
inc
icebp
les
std
fldt
lock
xchg
mov
out
jns
shr
daa
xor
pop
imul
mov
dec
sti
repz
insb
lret
adc
aam
inc
and
dec
push
aad
sub
adc
testl
pop
inc
das
scas
out
pop
inc
sbb
icebp
icebp
push
mov
mov
mov
lock
xchg
and
in
add
out
data16
xchg
lahf
aam
ret
incb
sbb
fisttps
add
push
mov
and
jo
inc
faddl
arpl
adc
aam
inc
mov
sbb
aas
xor
mov
jno
fdivrl
and
lock
pop
aam
xor
mov
leave
and
hlt
mov
sti
icebp
ss
mov
adc
outsb
pop
add
dec
aas
movsb
sub
jl
push
test
pop
outsb
pop
lahf
lcall
cli
arpl
rol
dec
sarb
scas
movsb
push
cld
push
test
dec
cmp
cmp
push
cmp
testl
fucom
xchg
insb
sbb
xor
or
add
add
arpl
adc
gs
orl
lahf
cmpl
lret
jns
pop
sti
pop
pop
jb
rclb
stc
mov
sbb
call
push
push
aam
cmp
push
jo
out
shl
in
dec
int
fsubl
jno
sbb
movsl
push
inc
jno
shlb
mov
add
je
inc
and
out
adc
lret
stc
pop
test
out
inc
js
sbb
push
es
push
lret
xor
mov
fwait
cmc
fimull
repz
jnp
int3
lods
cmp
sbb
xor
repnz
or
inc
mov
mov
mov
frstor
call
inc
mov
cmpsb
xlat
ds
aam
mov
pusha
stos
jnp
push
mov
pusha
sbb
hlt
fadd
cmc
ds
sub
mov
fistpl
adcl
cmp
jno
adc
cmp
jno
jp
and
hlt
pop
out
addr16
xor
hlt
xchg
sahf
push
sbb
push
scas
xor
sub
icebp
in
test
adc
in
pusha
sub
ljmp
mov
loope
andb
cmp
fwait
jp
xchg
lock
cli
xchg
xchg
in
sub
cmp
std
test
sub
dec
adc
cwtl
push
jnp
lea
xor
fldt
pop
xor
adc
nop
mulb
lods
fisubrl
and
shll
xchg
outsl
fwait
xchg
aaa
xchg
or
cmp
inc
adc
cmp
shl
pop
pushf
sbb
shrb
jmp
mov
fisubs
test
adcb
outsb
fimull
xor
mov
mov
push
in
or
in
fmull
and
popf
jl
sub
mov
push
jno
or
iret
push
dec
inc
stos
sbb
xchg
loope
fisttps
fistps
dec
lret
xchg
push
stc
and
mov
fldz
shlb
pop
bound
in
stos
movq
mul
fiadds
es
xchg
call
stc
fnstcw
jae
dec
jl
out
sub
jp
pusha
cld
xchg
out
add
es
movl
popf
lret
pop
sub
push
inc
shrb
aaa
lods
mov
int
loope
inc
jp
testb
loop
lods
arpl
pop
xchg
mov
shl
push
jb
into
mov
lds
leave
sti
lock
dec
or
pop
pop
roll
scas
dec
push
cwtl
xchg
aaa
outsl
xchg
lcall
repz
sub
test
xor
pop
aas
or
loop
fdivrl
mov
in
sar
ficomps
sahf
xchg
das
mov
sbb
sub
das
ja
or
xchg
and
xchg
das
mov
stc
cld
rep
mov
inc
bound
jo
movsb
shll
dec
sbb
or
push
bound
sarl
or
dec
mov
cmp
pop
mov
mov
jecxz
sti
ja
fcmovnbe
mov
lahf
leave
mov
and
and
and
dec
punpckhwd
movsl
imul
rorb
je
mov
push
aam
stc
jbe
mul
xchg
aam
add
mov
adc
or
add
test
cwtl
mov
stos
in
movsl
repnz
out
push
scas
inc
mov
sub
je
fwait
inc
in
pop
jp
bound
sbb
lahf
xor
loop
mov
and
mov
jbe
lcall
pushf
or
cmpsl
sbb
lods
sub
insb
dec
jo
and
xchg
or
cmp
dec
xor
inc
mov
inc
test
or
xor
mov
and
mov
cwtl
xchg
inc
inc
add
sbb
and
mulb
cli
sbb
rcr
loope
dec
adc
add
cmp
lds
push
mov
and
lcall
andb
dec
cmc
mov
and
jg
scas
sbb
rcl
xlat
inc
arpl
mov
lahf
adc
imul
jmp
in
iret
fiadds
and
lret
dec
lods
pop
fldl
in
and
cld
loope
mov
in
fimuls
push
cwtl
add
aad
mov
mov
repz
decl
push
out
orb
xchg
pop
ljmp
sub
adc
jne
test
shlb
int
idiv
outsl
dec
insl
pop
std
sbb
les
or
jg
bound
orb
adc
imul
insb
insl
into
dec
fsubrl
dec
gs
push
push
imul
sub
repnz
xor
mov
sbb
lods
and
cmpsl
jnp
in
sub
adc
xor
cmc
std
ror
stos
mov
xor
add
inc
lret
cmpsl
mov
push
mov
loop
mov
fwait
adc
outsl
or
decb
loope
lods
push
xchg
or
mov
lods
jp
push
cwtl
clc
cli
mov
jecxz
rcrl
pop
aad
pop
jno
test
push
in
std
mov
pop
pusha
int3
lods
outsl
push
mulb
mov
popf
pop
jle
dec
sbb
in
adc
insl
imul
popf
jb
jecxz
fstpt
cs
mov
mov
push
arpl
push
cmp
cmp
lcall
std
cmp
pop
fsubr
jmp
inc
lods
mov
mov
inc
sbb
or
sbb
popf
jns
orb
xchg
in
push
cmp
loope
ss
daa
leave
xor
lret
mov
addb
pop
mov
in
and
lret
xchg
mov
enter
xor
mov
jnp
fimuls
int3
and
cmp
jo
jge
sbb
pop
loop
jmp
rolb
xchg
mov
mov
mov
cmpsl
pop
xchg
dec
jle
pop
in
inc
jb
enter
sbb
push
fs
mov
jle
mov
test
enter
sub
loope
mov
pop
jmp
cmp
in
les
out
scas
loop
les
sub
and
lods
or
add
movsl
fldt
push
pop
lea
hlt
aam
fcompl
mov
pop
subl
fadd
in
jge
jg
adcl
pop
lea
jecxz
xor
lds
outsl
frstor
fs
repz
loop
xchg
lea
inc
jmp
jmp
jle
aad
jb
je
pop
sub
jge
or
daa
jnp
xor
dec
pop
inc
jg
cmpl
xor
adc
jne
aas
xor
or
mov
mov
arpl
pusha
mov
and
dec
push
inc
or
mov
fdivrs
test
push
lret
push
xchg
decl
jp
lods
nop
sbb
shl
push
rcrb
sbb
or
vpmulhuw
inc
aad
adc
hlt
mov
aam
inc
fwait
sub
jl
sbb
adc
les
push
sbb
aam
sub
scas
jne
cltd
sbb
pop
mov
cmp
scas
xchg
mov
in
dec
dec
in
leave
out
mov
push
or
mov
cmpsl
mov
mov
and
and
into
xlat
and
xorb
sbb
cmc
jb
test
cmpsb
in
mov
popf
loope
sub
lahf
addr16
lret
mov
add
aad
jge
je
add
pushf
mov
push
testl
loope
inc
insb
push
pop
pop
xchg
and
pop
inc
imul
lods
and
inc
test
xchg
pop
sbb
xor
stos
pop
xchg
fucomip
dec
imul
fsqrt
xchg
insb
pop
rcrl
mov
in
pop
pop
pop
jg
les
push
les
push
fstps
xchg
mov
mov
scas
push
jns
push
or
or
arpl
notl
jle
xor
sub
jge
hlt
cmp
popf
jge
jnp
je
push
bndstx
insl
cltd
fadds
or
or
dec
inc
jmp
cmpl
stos
sub
cmc
ret
fwait
add
and
cmc
lahf
iret
movsl
fwait
dec
and
sbb
xor
aas
gs
out
mov
xchg
inc
cwtl
cmp
jmp
aaa
xor
aad
push
stos
sbb
imul
test
test
inc
adc
pop
and
mov
or
lret
clc
cli
out
pushf
sub
mov
addr16
rolb
mov
xchg
das
jecxz
in
into
test
sahf
add
push
xchg
pop
dec
mov
gs
cmc
jno
pop
jo
call
sbb
bound
in
mov
mov
push
loope
es
in
stos
xchg
lret
pop
lcall
cwtl
pop
lea
add
mov
jp
cmp
lahf
lcall
mov
xor
xchg
jnp
and
sub
icebp
shrl
pop
fisttpl
and
loope
adc
inc
js
and
adc
sub
pusha
and
sbb
in
cmp
add
and
scas
mov
mov
ljmp
jl
stos
lret
sbb
fstpt
rorb
out
jecxz
fisubs
cmp
int3
sub
dec
jecxz
cmpsb
add
rcl
popf
popa
nop
lods
or
ja
aam
addr16
push
aad
ds
int
push
xchg
rcr
inc
loope
stc
insl
and
lock
push
lods
or
mov
pushf
xchg
repz
cmp
add
bnd
daa
insl
hlt
cmc
mov
call
sub
mov
jg
bound
sub
pop
mov
das
repnz
pop
mov
adc
add
push
mov
xchg
xchg
pop
test
aam
push
mov
fwait
xchg
cmp
test
cmpsl
jne
sarb
out
inc
mov
loope
daa
and
sbb
mov
ja
cmp
mov
inc
inc
sbb
and
aam
ret
mov
pop
es
in
nop
cmpsb
and
sbb
or
sahf
or
mov
cltd
sub
xor
sbb
jae
test
adc
jb
cmpsb
outsb
arpl
pop
divl
pop
sub
shlb
pusha
dec
dec
repz
stos
pusha
xchg
adc
mov
mov
xchg
mov
cwtl
and
jno
stos
sar
xchg
dec
push
lea
inc
lahf
pop
or
out
sub
mov
cmp
pushf
or
mov
in
add
std
mov
sub
jbe
mov
insl
jp
stos
loope
add
cmp
cmp
push
xor
add
mov
xor
xchg
idivb
pop
cld
cmpl
push
ss
addl
jbe
cmpsb
mov
xor
jne
adc
sub
cwtl
out
lods
bound
xor
jae
push
imul
mov
xchg
js
or
dec
lcall
jo
in
fwait
arpl
aas
test
test
sub
cld
roll
loopne
push
cmp
inc
mov
icebp
mov
movl
cwtl
movsb
sti
test
js
negl
pop
leave
and
fldt
and
outsl
and
adc
jns
pop
or
lock
shl
jnp
gs
inc
fwait
mov
push
sbb
jo
mov
sbb
dec
push
loopne
cmp
push
mov
adc
aad
aam
mov
adc
addl
inc
sbb
or
out
pop
pop
out
xor
inc
push
or
push
aam
xor
push
mov
push
cmp
xor
inc
fidivrs
mov
roll
push
lret
enter
aad
sbb
inc
dec
xlat
jbe
push
pop
cld
insb
daa
shl
add
mov
popf
xor
jge
insb
out
daa
add
pusha
push
add
or
fnstcw
mov
adc
mov
mov
movsb
cli
jl
clc
mov
add
sub
fadd
xchg
iret
mov
sub
rol
jb
stc
les
icebp
mov
les
sub
je
xor
dec
inc
lret
aad
lods
xchg
sbb
scas
xorb
lahf
in
mov
in
cmp
fidivs
packssdw
dec
cmpsl
mov
sbb
and
jge
mov
js
xchg
push
push
loopne
pop
aaa
test
add
mov
jnp
inc
shll
mov
push
inc
pop
in
ret
sub
xchg
cli
mov
out
pop
or
inc
fnstsw
ss
cmc
mov
loopne
cmp
lods
outsl
jge
push
rcrb
or
mov
shll
cmp
testb
stc
int3
dec
insl
fldl
cltd
iret
dec
or
ljmp
sbb
lock
mov
mov
addb
sub
cmp
dec
pop
or
fldt
cwtl
xchg
pushf
cwtl
dec
and
jb
push
add
adc
in
ljmp
out
fisubrl
jl
and
in
js
adc
xor
repnz
mov
xor
sub
jecxz
xchg
push
inc
lret
int
jp
sub
nop
les
pop
insb
push
and
in
cld
loopne
rol
jge
jmp
add
int
loopne
inc
inc
scas
pop
add
push
jae
aaa
mov
out
push
xor
shr
faddl
push
imul
mov
lods
push
jge
push
xchg
jae
loop
movsl
pushf
sub
scas
push
inc
cltd
repz
enter
or
sub
pop
movsb
mov
fidivrl
es
fiadds
mov
scas
push
inc
hlt
jg
sbb
and
pushf
inc
ss
jp
jbe
in
into
ss
lahf
jbe
xor
pop
fnstenv
adc
lahf
imul
cmp
popf
mov
mov
push
add
xchg
xor
iret
stos
pop
lret
int3
lods
stos
mov
xlat
lock
sbb
add
out
and
in
rcl
int3
leave
mov
dec
mov
dec
test
mov
aam
iret
cmp
xchg
xchg
aaa
mov
inc
jge
ret
ret
add
xchg
outsl
mov
fwait
insb
daa
out
lea
xchg
ds
add
adc
lods
int3
std
frstor
mov
jno
out
pusha
mov
test
stos
mov
and
xor
and
lea
ljmp
xor
lea
cmp
jbe
cltd
sbb
lcall
jno
jmp
lds
ja
cmp
push
jl
xchg
notb
xchg
les
fwait
xchg
sbb
rclb
ljmp
push
imul
cmp
ret
dec
dec
push
dec
mov
cmp
sub
bound
and
mov
popf
test
sub
inc
fldt
jnp
mov
std
or
xchg
data16
fisubrl
or
into
shrl
push
loope
sbb
sub
xor
ljmp
dec
test
add
bound
fxch
jb
das
shrl
sarl
fdivrl
aam
pop
mov
sub
jecxz
pop
cli
push
fnstsw
push
das
cmp
sub
stc
and
imul
jecxz
mov
jp
push
fildll
lahf
flds
popf
lods
scas
nop
fs
sti
cmc
mov
mov
sbb
fdivl
jbe
dec
push
ret
inc
jae
das
dec
insl
aaa
push
lcall
xor
stc
mov
mov
repz
jge
push
jns
gs
test
stos
jp
out
shlb
aaa
cld
mov
out
mov
in
std
push
mov
jmp
mov
cli
push
out
push
test
popa
es
or
inc
scas
arpl
pusha
aaa
lret
test
mov
adc
filds
add
mov
mov
mov
mov
fistps
js
test
add
add
lea
lret
cli
mov
or
outsb
jb
div
fdiv
inc
imul
and
and
inc
test
and
mul
pushf
xchg
pop
and
inc
xchg
mov
int3
sarb
stos
call
ret
cmpsb
out
inc
jns
lahf
js
push
xor
jge
or
ret
and
stos
call
push
lahf
adc
dec
or
in
or
subl
notl
sub
jmp
imul
mov
jo
adc
cmp
dec
push
mov
out
addr16
pop
in
add
popa
cwtl
cmp
jno
xor
test
mov
sbb
out
cmpsl
or
and
adc
fwait
in
lret
ret
es
mov
fistpll
jnp
xchg
out
xchg
mov
pop
and
clc
lahf
filds
mov
pop
mov
lcall
push
aas
mov
mov
outsl
inc
push
fisubs
mov
jle
aam
pop
fwait
ja
or
test
or
pusha
or
ret
outsb
les
fisubs
mov
mov
or
adc
repz
xchg
mov
shll
std
push
cmp
aam
fistpl
jo
loopne
mov
push
ds
or
loop
cwtl
rcrb
daa
jns
cwtl
add
push
jl
and
mov
pop
ret
mul
cld
out
scas
sbb
popa
lock
xlat
inc
shll
push
mov
jo
mov
es
out
lock
daa
ss
inc
in
sbb
cwtl
and
xchg
lret
xor
push
xor
pop
pop
or
or
adc
lret
stos
fdivs
xchg
jmp
jae
push
outsl
dec
sbb
stos
sti
pop
test
lock
pop
push
xor
cmp
stc
jo
loop
std
punpcklbw
jbe
fwait
aam
push
mov
adc
push
cltd
fldenv
dec
mov
mov
mov
hlt
ja
dec
iret
sbb
in
lods
stos
int
loopne
out
xor
dec
cs
sub
sub
mov
jecxz,pn
or
pop
hlt
mov
repz
int
jle
cli
das
dec
movsl
push
mov
jno
test
ljmp
or
fisubl
sbb
js
push
outsb
jmp
push
lods
pop
ds
bnd
mov
add
xchg
dec
leave
mov
mov
jge
daa
lods
sti
or
xchg
add
pop
inc
call
lods
jae
jno
sbb
aam
pop
jge
push
cli
loop
push
enter
xchg
inc
pop
xchg
test
xchg
cmp
inc
ret
es
sbb
xchg
cmc
out
push
and
inc
lea
mov
aad
pop
jno
mov
movsl
das
push
or
xor
lock
push
in
mov
ret
fcmovnu
test
jl
xchg
sahf
fsubs
addl
outsb
cmp
pop
xor
test
adc
inc
push
xor
repnz
scas
adc
xchg
pop
mov
popa
or
sahf
xor
and
xor
fwait
add
pop
sub
scas
push
repnz
out
enter
ja
loope
cmpsb
fidivl
fsubrs
std
fcoms
sahf
mov
jmp
popf
mov
outsb
jo
fmuls
xchg
inc
ucomiss
aas
xchg
int
mov
repnz
mov
lret
mov
cwtl
sbb
ret
mov
sub
les
sbb
mov
mov
sarb
js
ds
mov
mov
shll
fstps
stos
pop
fwait
fwait
mov
mov
mov
or
push
jge
stc
shrb
jmp
pop
add
cmc
ret
mov
cmpsb
inc
jb
lret
repz
jne
cmp
shlb
jnp
cmp
aam
out
and
loopne
dec
int3
sub
pop
dec
push
cld
inc
sbb
pop
inc
inc
mov
push
xchg
mov
inc
scas
insl
popf
add
rcll
dec
cld
test
push
pop
sti
mov
pop
out
sub
xor
pop
or
fs
scas
mov
inc
or
aaa
mov
aaa
nop
add
shlb
std
mov
rorb
test
mov
outsl
dec
loop
loope
jb
pop
cmc
std
aas
jnp
orb
lea
filds
icebp
mov
xchg
dec
adc
jmp
push
arpl
bound
mov
push
xchg
stos
mov
inc
jns
gs
in
push
pop
mov
mov
std
nop
int3
jo
test
imul
insl
lcall
ret
lods
pop
inc
int3
bound
pop
sub
pop
sbb
add
inc
test
inc
mov
jne
repnz
push
scas
sbbb
pop
inc
test
sub
jge
xor
test
pop
mov
call
fcom
mov
rclb
out
fstpt
cltd
hlt
mov
std
sub
movsb
push
testl
xchg
jl
clc
lahf
sub
mov
jnp
xchg
xor
add
fisttpll
push
cmc
push
mov
adc
imul
rcll
dec
and
repz
std
add
adc
mov
out
mov
mov
push
adc
movsl
mov
loope
dec
or
cld
mov
out
pop
mov
cmp
jmp
sbbb
aas
ljmp
sbb
daa
ret
push
jp
cmc
cli
pushf
dec
in
and
mov
rcrl
lcall
mov
enter
pop
jns
pop
jae
pminsw
fucompp
les
test
notl
fsubrs
or
fstps
insl
jbe
adc
sti
popf
adc
aas
fwait
in
loope
out
sbb
pushf
dec
jo
xor
test
stos
cmp
loope
mov
or
stos
add
adc
mov
adc
cmp
pop
add
shll
je
push
adc
icebp
add
addl
fs
das
lcall
xchg
sub
arpl
insl
stos
lcall
sub
iret
dec
and
mov
sub
sbb
ret
push
movsl
sub
xchg
mov
cltd
push
stc
and
int
cmp
pop
test
mov
add
push
inc
sbb
rcl
in
int3
in
mov
sub
subb
mov
stos
adc
and
icebp
mov
aaa
vmwrite
jae
xor
mov
in
testb
xchg
out
sar
loopne
sub
leave
pop
popa
sub
and
lock
mov
jno
ret
mov
jo,pt
xor
pop
pop
gs
adc
cmc
jnp
fnsave
jl
lock
popa
adc
mov
out
xchg
movsb
data16
inc
push
xchg
dec
xor
fisubs
gs
fidivrs
std
adc
dec
cs
add
sbb
into
cmpsl
mov
push
data16
fs
das
lahf
mov
and
mov
clc
sub
inc
jbe
jae
mov
sub
inc
insl
jge
xchg
xor
js
nop
jmp
sub
out
or
dec
scas
push
aaa
cmp
or
xchg
lods
mov
icebp
in
lahf
fisubs
pop
dec
xor
imul
lret
ret
leave
mov
jp
xchg
pop
test
or
jo
mov
filds
jnp
jmp
in
aas
push
sbbl
add
push
out
mov
pop
les
ret
fcos
sub
into
outsl
repz
bound
adc
mov
vcvtpd2ps
daa
repnz
lock
sbb
xor
pop
add
or
leave
gs
enter
popa
roll
testb
rclb
jne
addr16
lods
inc
lds
fs
dec
sub
jno
mov
rclb
cmpsb
fmulp
xor
inc
loope
cmc
push
mov
jl
sub
ljmp
xor
adc
mov
scas
sbb
pop
in
xor
sub
dec
xlat
iret
ret
stc
icebp
jmp
scas
push
dec
fcoml
jae
shrl
mov
pop
adc
fsubr
mov
cs
xchg
out
nop
out
cli
lods
fwait
adc
aad
jge
out
addr16
and
pushf
rolb
loop
sub
adc
icebp
cmp
aas
rcr
add
repnz
nop
inc
ss
lret
mov
test
arpl
sub
inc
divl
mov
adcl
mov
jno
xor
jae
daa
mov
addr16
test
xchg
push
push
shl
sub
pop
add
mov
inc
mov
psubq
test
xor
shlb
aad
xor
ja
movsl
into
sarl
cmp
cmpsl
xchg
enter
popf
mov
daa
sarb
mov
mov
push
ja
test
out
nop
call
and
xchg
pop
mov
push
cli
xchg
jns
cmp
insb
fists
jg
adc
sub
jg
mov
push
or
mov
mov
push
fstpt
das
and
push
sbb
addl
cmp
stc
lcall
inc
int
xchg
pop
fistps
push
cmp
push
ss
sub
and
cmp
sub
fldcw
push
inc
jp
imul
mov
cli
pushf
into
ret
xchg
loop
test
mov
fmuls
addl
je
cmpb
gs
into
dec
mov
cmpsb
xlat
mov
lret
inc
add
outsb
daa
adc
pop
testb
sbb
daa
int3
or
xor
mov
adc
fwait
mov
imul
call
lea
ret
sub
idivl
popa
gs
inc
pop
mov
push
sub
jecxz
mov
cmc
int
adc
mov
pop
test
pushf
add
nop
xchg
pop
sub
lods
push
outsl
mov
inc
xor
xchg
insl
mov
pop
sbb
shrb
imul
inc
test
out
mov
pop
adc
dec
jno
js
jmp
daa
jno
inc
xlat
add
xlat
mov
pop
shl
movsl
into
jbe
es
cmp
decb
sbb
xor
push
push
sub
shrl
fucomip
mov
rorl
sbb
sub
loopne
mov
sbb
inc
hlt
ficompl
pop
repz
mov
or
cmp
repz
inc
enter
pop
loop
add
xchg
or
push
pop
stc
xor
cmc
adc
or
dec
cwtl
cmp
aas
inc
test
icebp
jb
mov
jmp
pusha
sub
mov
es
movsl
xor
repz
test
mov
cltd
xor
lahf
mov
test
lahf
cltd
sbb
divb
in
movsb
xchg
push
mov
sub
clc
xchg
push
adc
aas
ss
sub
lret
addl
dec
int
ficoms
add
ss
insb
rcrl
adc
cwtl
push
and
cli
movsl
movsb
outsl
rcl
dec
and
inc
xchg
mov
js
jae
cld
les
repnz
rcrb
jae
mov
or
cmp
sub
lock
das
call
jecxz
xor
int3
jns
cmp
jp
lds
mov
ficoml
pop
inc
inc
inc
repz
pop
cli
xchg
sbb
js
mov
dec
dec
clc
lods
xorb
xor
out
pusha
jge
cld
test
pop
add
nop
cltd
pushf
loop
pop
es
sub
or
in
cmp
and
xchg
loop
sub
in
scas
push
in
cs
cwtl
and
inc
test
insl
popa
je
ret
outsb
mov
arpl
dec
cmp
push
in
adc
sbb
in
add
sahf
decb
dec
xor
mov
sub
arpl
out
inc
mov
adc
push
loopne
mov
push
cmp
mov
nop
jb
std
jae
lret
add
stos
adc
pusha
pop
pop
push
xor
dec
and
mov
sub
inc
js
shl
daa
dec
xchg
testl
call
jnp
cli
jno
mov
jge
stc
mov
aas
or
pop
popa
sub
out
or
dec
push
aaa
bound
pop
cmp
mov
loope
jne
pop
scas
xchg
jmp
lods
xor
push
fucomp
test
les
addr16
adc
sub
mov
icebp
xchg
push
push
cmpsb
push
aas
push
pop
xor
pop
adc
imul
ret
loopne
lock
mov
mov
sbbl
out
dec
push
adc
or
cmp
cmp
outsb
add
xor
inc
fwait
pop
ljmp
or
mov
mov
es
rorb
out
movsb
xor
jae
jno
pushf
insb
call
mov
push
cwtl
aas
cwtl
or
cltd
addb
inc
and
dec
adcl
outsl
jmp
jae
mov
repz
out
push
dec
lea
shrb
mov
jmp
dec
dec
repnz
adc
hlt
inc
mov
mov
or
cli
mov
int3
shll
stos
or
sub
pop
sub
jl
mov
mov
aam
inc
dec
cs
xor
push
fldt
loopne
and
je
scas
mov
inc
scas
adc
js
push
adc
cmp
and
lret
imul
inc
ret
fdivl
icebp
adc
cltd
div
mov
sbb
sbb
pushf
lret
inc
xor
mov
sti
loopne
cmp
sbb
popa
fnstcw
dec
shll
and
into
leave
mov
dec
mov
inc
xchg
adc
int3
sub
jb
mov
mov
adc
movsl
sub
vpmulhuw
mov
mov
pop
xchg
and
sub
mov
call
loop
xchg
mov
pushf
movb
lfs
xlat
xor
and
mov
xchg
popf
test
sbb
adc
jmp
movsb
mov
fsubp
ds
lock
aas
xchg
cmp
mov
dec
shl
jl
insl
iret
pop
imul
push
pop
cmp
fldt
mov
jb
add
or
xchg
or
sub
mov
lds
mov
cmp
psubd
pop
mov
lret
movsb
xchg
push
test
shlb
mov
pop
mov
in
sbb
ljmp
jnp
xor
mov
mov
add
fisttps
insl
stos
and
cmp
dec
xchg
jmp
lahf
inc
mov
test
inc
call
dec
inc
inc
mov
push
int3
imul
pop
add
inc
pop
adc
inc
in
jne
daa
sahf
jns
pop
mov
lret
sbb
xor
inc
xor
xchg
aad
shll
stos
lds
xchg
xchg
int
cmpsl
push
decb
fisttpll
mov
lea
adc
das
jg
push
imul
pop
mov
push
jo
mov
cmp
sahf
stc
pop
push
xchg
call
and
mov
sub
fs
cmpsb
es
mov
inc
decb
int3
stos
out
rcll
cmp
outsb
pop
push
sbb
mov
imul
jns
xchg
push
fimuls
push
xchg
jnp
or
movsbl
inc
pop
stos
insl
xor
data16
lods
jecxz
pop
mov
xchg
lods
fiaddl
loop
mov
mov
push
jns
mov
mov
inc
mov
fcmovne
push
das
aas
xchg
add
ja
mov
pop
lret
and
sbb
js
imul
adc
push
mov
push
adc
xlat
jmp
jl
and
sbb
insl
mov
lahf
iret
sbb
mov
mov
inc
adc
pushl
and
out
jle
je
repz
mov
scas
push
cmp
inc
mov
xor
pop
sbb
scas
xchg
xchg
jno
mov
sub
lods
xchg
xchg
pop
adc
adc
push
rcr
mov
pop
mov
test
sbb
andb
pop
jnp
push
bnd
adc
fidivrl
nop
add
adc
dec
push
adc
sub
xchg
jb
inc
or
sbb
sub
cmp
jg
pop
loop
and
cmpsl
sub
or
cld
or
push
pop
xor
fmul
icebp
inc
push
dec
xchg
shl
pop
jmp
adcl
pop
enter
lcall
or
mov
pop
pop
addr16
push
lcall
push
xchg
fs
movsb
scas
mov
and
mov
fadd
jl
push
test
dec
ds
sbb
sub
xlat
jnp
pop
adc
icebp
jl
imul
xchg
sbb
int3
addr16
insb
ret
daa
sbb
mov
call
sbb
jb
daa
int3
and
adc
scas
sub
jle
js
cmpsb
push
sahf
sbb
and
dec
push
les
pop
fcomps
int
add
xchg
cmpb
mov
test
push
js
push
jg
rorl
adc
scas
repz
mov
push
push
gs
pop
fnstcw
aaa
and
jg
mov
dec
inc
jae
sbb
pop
lds
sti
add
xorl
imul
sub
mov
inc
jmp
mov
fs
inc
mov
cmp
and
loope
gs
sub
jg
rolb
xor
sbb
mov
adc
imul
fstps
mov
jae
lock
lea
shlb
pop
imul
inc
cltd
cmp
cmp
scas
jmp
pop
ja
mov
popf
push
scas
sarb
mov
xchg
pop
enter
fcmovb
add
mov
sbb
test
mov
mov
inc
iret
mov
cmp
jp
std
sbbl
or
xchg
cmpsb
movsl
push
push
xchg
mov
shrl
cmp
subb
jae
push
sub
test
sbbb
out
mov
lahf
lods
inc
cltd
mov
pop
movsl
gs
mov
pop
sub
push
fadds
mov
xor
sub
cli
dec
jmp
or
clc
dec
ss
dec
push
loopne
inc
sub
sti
stos
leave
add
enter
pop
jo
cs
push
addb
mov
enter
jns
mov
dec
dec
cmp
stos
mov
xchg
mov
jb
mov
out
inc
pop
sahf
lret
inc
pop
adc
mov
shlb
pusha
push
clc
jge
out
inc
or
mov
lahf
mov
ljmp
push
dec
or
push
sub
fmuls
jge
dec
dec
insb
mov
cld
outsb
push
daa
mov
lahf
popf
daa
mov
xchg
pop
das
out
inc
cmp
lds
inc
fbstp
iret
lods
and
dec
pop
inc
or
ljmp
ja
lods
frstor
ficompl
sub
fwait
in
mov
push
les
dec
pusha
xchg
test
shll
cmpsl
shl
mov
fldcw
xchg
cmp
dec
lea
cmp
fs
dec
in
filds
fimull
mov
add
loope
insb
ss
sub
sub
jno
hlt
and
mov
adc
mov
pop
ror
insb
xchg
pop
mov
jmp
movsl
cmp
lods
call
xor
stos
pop
xchg
addb
inc
jae
sub
mov
push
pop
out
mov
add
inc
push
lods
dec
int3
pop
xchg
jo
shlb
mov
add
xchg
lods
pop
cmp
adc
mov
push
fs
iret
stc
xor
not
les
scas
jo
sub
test
stos
mov
xchg
pop
mov
insb
jns
add
adc
ljmp
xchg
insb
ror
cwtl
out
sub
pop
xchg
sbb
inc
push
jl
jecxz
pusha
inc
fildl
sbbb
mov
scas
lahf
add
mov
mov
in
mov
sahf
loope
or
out
mov
loopne
jb
fidivs
add
notl
push
lahf
loopnew
sub
mov
xor
insb
jge
out
rorl
push
adc
insb
arpl
mov
mov
xchg
pop
les
mov
pop
pushl
sbb
lock
loop
call
inc
in
mov
cmp
mov
aaa
ljmp
stos
pop
aaa
lret
into
xchg
sti
xchg
jbe
sbb
scas
data16
outsb
in
push
jp
lds
hlt
mov
cmp
ficoml
inc
jmp
and
outsb
int3
cmp
jp
mov
fstl
xor
mov
popf
ret
fidivrl
test
imul
cmp
rcrb
inc
mov
repnz
cmpsb
add
in
sub
adc
aaa
aas
or
ds
xchg
ror
ja
mov
fimuls
aad
jb
xlat
pop
test
imull
filds
xchg
lock
cmpsl
nop
inc
ljmp
jno
test
das
mov
jo
test
daa
hlt
int3
in
das
repnz
and
cmc
inc
mov
mov
cmp
repz
and
dec
sbb
insl
je
daa
js
or
test
js
xor
shll
mov
imul
out
pop
sahf
movsb
arpl
jbe
mov
addb
jns
pop
adcb
cmp
ss
adc
mov
leave
pop
xor
sub
cltd
sbb
jno
xchg
bound
js
dec
push
movsl
jno
cltd
ljmp
cli
les
out
pop
in
add
jmp
pusha
cld
mov
ljmp
shrl
lret
inc
out
xor
test
nop
sub
jl
jnp
sbb
into
or
hlt
jb
iret
lock
mov
pop
jg
sub
sti
add
aas
test
jae
lret
jnp
ljmp
pop
aad
xorb
out
outsl
lret
pusha
or
mov
insb
arpl
in
insb
out
cmp
in
addr16
in
je
and
xchg
dec
inc
stc
enter
addb
pop
mov
pop
outsl
or
inc
pop
push
shl
std
mov
xchg
cmp
lret
adc
orl
gs
jmp
int3
push
inc
xchg
std
and
or
aaa
cmp
cwtl
popf
jb
pop
dec
aam
addr16
ds
pop
je
sbb
out
inc
into
mov
bound
lock
add
aad
sbb
stos
les
addr16
test
adcl
add
and
push
scas
adc
outsl
pop
mov
xor
push
xlat
enter
sub
pminub
jl
pop
push
scas
std
lret
sarl
and
dec
pop
adc
insb
or
push
or
loopne
sub
inc
ljmp
cmpsb
push
aam
popf
jno
xor
cld
scas
scas
mov
or
repnz
lods
cwtl
push
dec
das
xor
lock
inc
xchg
xorb
das
loop
leave
movsb
out
mov
in
movb
adc
push
jbe
pop
cs
sbb
pop
fdiv
fstps
pop
pushf
pop
das
out
jae
jo
jmp
loop
pop
xor
outsb
mov
cltd
or
dec
sub
fnstenv
add
pop
mov
cmp
in
cmp
xor
push
mov
sbb
jo
lock
sarb
aas
pop
pop
dec
fwait
cmpsl
pop
and
loope
js
xchg
push
pop
aaa
aad
mov
sub
out
in
push
add
jo
test
int
push
mov
fst
pop
shr
ljmp
adc
jae
imul
in
or
sbb
push
lret
sub
push
mov
hlt
add
popa
mov
or
mov
mov
out
xchg
nop
filds
jecxz
sbb
dec
mov
jp
jbe
xor
xchg
lar
pop
ja
mov
mov
rclb
cmp
call
xchg
push
sbb
or
rcr
leave
and
jmp
dec
inc
nopl
insl
cmp
stos
lahf
sbbb
movsb
pop
je
cmp
sub
ret
movsl
jecxz
sbb
in
cmp
push
negl
aad
pop
xchg
jb
sub
aas
lods
sub
xchg
dec
or
cmpb
and
add
shl
xor
cld
in
dec
jmp
aam
and
pop
insl
in
loop
ljmp
outsb
fs
lds
xlat
jo
jle
xor
and
jp
add
xor
adc
fiaddl
xlat
cld
lock
test
mov
inc
sbb
xor
jb
cmpl
shrb
xchg
xchg
or
shlb
or
jb
mov
test
mov
scas
or
addr16
push
iret
xchg
xchg
adc
mov
or
clc
xlat
cmp
movb
dec
repz
insl
xor
sti
cs
cld
ja
pop
je
cmpsl
pop
xchg
or
cmp
dec
mov
fnstsw
dec
insb
xchg
sbb
sbb
movsl
insl
fwait
dec
or
jmp
cmp
or
int
cmp
dec
pop
aaa
imul
gs
and
out
ja
aas
xchg
mov
outsb
pusha
daa
pusha
adc
mov
add
dec
xchg
ss
push
movl
push
sub
adc
adc
stos
loop
sub
pop
arpl
ss
shl
mov
xchg
dec
inc
ret
and
ss
repnz
int3
test
flds
negb
mov
adc
xchg
movsb
push
pop
jecxz
jl
cmp
cs
cmp
outsb
jae
mov
in
push
xor
xchg
mov
loope
dec
ja
pop
mov
clc
xchg
cmp
cs
xlat
stos
jmp
es
jge
sub
mov
inc
push
sub
pop
or
mov
and
outsl
ss
out
addb
loope
push
push
and
out
in
dec
adc
int3
push
add
jmp
pusha
inc
inc
aaa
xchg
jo
psraw
cmp
jno
jecxz
pop
loopne
pshufw
mov
shl
add
xchg
cmpsl
test
lret
sbb
outsb
int3
sbb
stos
movsb
fdivrs
mov
mov
clc
movsb
cmpsl
adc
insl
pop
sti
pop
mull
sbb
and
jnp
push
cmp
jb
inc
xor
out
mov
mov
push
nop
in
out
xor
idiv
adcl
xor
or
or
gs
sbb
push
mov
lods
cmp
add
rclb
or
imul
xchg
test
ret
aas
mov
mov
arpl
jno
mov
movsb
cmp
adc
outsb
or
icebp
push
push
add
sbb
lods
and
mov
mov
dec
shrl
xchg
stos
ss
inc
xchg
shrl
or
mov
stos
inc
popf
push
rolb
mov
sub
or
rcr
sub
sub
dec
test
outsl
adc
ret
clc
jno
test
fidivrs
das
xor
add
dec
movsl
gs
cmp
mov
mov
flds
mov
pop
cmc
push
xchg
add
xchg
aam
and
mul
lret
aam
sbb
arpl
mov
scas
pusha
adc
in
pop
add
popa
rcrl
inc
adc
or
mov
js
mov
out
mov
and
pop
lea
dec
or
test
jns
sarb
and
fdiv
xlat
sbb
outsb
mov
jle
jbe
xor
cmp
in
adc
adc
leave
outsb
xchg
jns
mov
adc
es
sub
jp
lret
cmp
mov
push
add
outsl
out
inc
jb
das
and
roll
loopne
jb
movsl
mov
icebp
shrb
les
subb
daa
jns
or
out
inc
cmp
inc
mov
sbbl
insb
loopne
push
or
lods
or
xor
adc
imul
xchg
fdivrl
daa
jg
mov
add
fstps
int3
lea
loop
and
xchg
sub
add
popa
add
push
adc
movsb
test
jmp
cli
mov
pop
adc
cmpsl
pop
adc
xor
aaa
pushf
fxch
stos
push
and
lds
repz
ret
inc
cs
jg
out
jmp
sub
testb
dec
cmp
ja
sbb
call
enter
dec
loope
xchg
rorl
fdivl
imul
push
mov
js
adcl
fisubrl
adc
xor
pop
sub
jmp
gs
ss
mov
sbb
movb
repz
push
push
out
jecxz
es
sbb
dec
xchg
jmp
into
lcall
fisttpl
dec
mov
mov
push
fsts
mov
ret
mov
xchg
add
stos
iret
pop
mov
ljmp
push
cmpsl
outsl
sahf
fwait
mov
or
inc
xor
sbb
mov
mov
ss
addr16
cmp
or
call
imul
and
dec
jo
rorl
push
ds
out
aad
sbb
pop
cld
imul
fdivl
mov
dec
mov
xor
xchg
xor
jmp
decb
mov
imul
enter
subl
aas
out
sub
fisubl
mov
lods
ss
inc
sbb
xchg
ljmp
and
icebp
sub
xor
out
movsl
push
cmp
cmp
fisubs
bound
idiv
lds
arpl
add
mov
or
filds
lret
test
std
in
and
imul
inc
mov
adc
daa
rcrb
mov
pop
dec
mov
xor
xchg
sbb
add
mov
cmpsl
fwait
cs
inc
pop
jbe
shrl
pop
mov
jl
cli
xchg
dec
push
push
xchg
mov
lea
push
shr
and
jp
sub
lcall
xchg
imul
sub
adc
and
push
mov
mov
cmp
in
addl
jb
fcmovne
nop
out
dec
xchg
and
and
ret
pop
imul
or
pop
dec
mov
inc
ja
cmp
pop
cli
sti
sub
pop
lods
mov
mov
push
call
sub
jecxz
cmp
or
xchg
divb
ja
mov
add
sbb
jg
mov
pop
inc
or
xor
fmuls
mov
xchg
fwait
fwait
scas
push
mov
cmp
pop
movsb
jb
sub
jge
add
out
std
iret
ja
sub
pop
pop
call
lods
aaa
lahf
jnp
lcall
jae
mov
push
mov
rolb
mov
testb
popf
inc
clc
xchg
testl
sbb
xlat
inc
cmpsb
mov
sub
ret
stos
repnz
mov
in
shlb
adc
pop
movsb
daa
mov
push
scas
imul
adc
rcrb
push
test
mov
xchg
pushf
push
inc
sahf
mov
or
js
test
andb
testb
mov
jg
add
jno
inc
pop
test
in
jne
fdiv
push
push
loopne
decl
sub
cmpsb
mov
stos
mov
xor
sbb
xor
inc
xchg
push
incl
mov
pop
out
mov
pop
xor
push
xchg
fwait
popa
mov
pop
ss
fwait
jbe
clc
sbb
insb
loop
das
cmp
dec
and
arpl
addr16
outsl
mov
adc
xor
mov
adc
mov
sbb
aam
aaa
jnp
lret
mov
dec
fidivrl
pop
arpl
xor
adcb
xchg
sbb
inc
ret
jl
arpl
add
scas
pop
cmp
rclb
add
js
xchg
dec
cmp
fildl
out
mov
cwtl
repnz
shlb
add
and
mov
push
and
inc
pushf
in
sti
dec
push
outsb
sti
dec
mov
int3
fldl
lds
cmpsl
arpl
cld
jg
and
cs
jo
mov
adc
dec
clc
xor
mov
stos
cmpsl
orl
xor
cwtl
pop
mov
fwait
mov
lret
dec
jbe
shll
pop
lds
sub
aas
stos
or
xor
dec
inc
inc
leave
xchg
jp
jno
int
fildll
in
movsl
mov
pop
sbb
es
mov
and
mov
lret
lock
pop
and
lods
cmpsb
adcl
inc
nop
dec
test
inc
xor
scas
pop
sbb
ja
pop
add
fcompl
and
mov
in
fbstp
mov
lret
mov
mov
fisttpll
popf
pop
fstpt
mov
leave
sahf
test
test
push
insl
adc
push
rcl
push
loopne
sbb
mov
or
or
rcrl
fsubl
lahf
pushf
shll
cwtl
mov
cmp
pop
push
sub
idiv
outsl
ret
adc
add
xor
mov
xor
loope
pop
es
popa
mov
add
adc
scas
cld
or
xchg
dec
dec
fcoms
fmull
rorl
out
cmc
sub
inc
mov
adc
cwtl
ds
and
push
push
add
mov
shr
data16
pop
rcl
push
jae
popa
push
popf
sarl
hlt
or
out
jo
mov
fs
mov
jl
pusha
lods
jmp
mov
inc
and
jmp
jo
loop
or
lock
ret
jno
cmp
fdivrs
push
mov
out
or
bnd
les
xchg
or
adc
outsb
cmpsb
pop
repnz
cld
mov
cmp
pop
out
add
sub
lret
cmp
scas
or
movsl
mov
lods
xchg
pop
push
popf
add
fcompl
das
pop
out
dec
aad
aam
lea
xchg
daa
loope
aad
mov
and
adc
pop
push
clc
cwtl
adc
dec
mov
loop
lods
insl
negl
push
xchg
add
and
adc
add
sub
stos
xor
sahf
jno
lock
test
dec
rdpmc
inc
stos
repnz
out
test
xor
je
mov
cmp
andb
pop
push
mov
adc
inc
and
stos
outsl
leave
jl
mov
pusha
ret
mov
push
daa
cmp
jb
scas
pop
movsb
xor
pop
aad
jp
test
ljmp
fisubs
arpl
mov
sar
inc
add
lods
dec
imul
inc
pop
into
sti
push
add
rcrl
mov
cmp
mov
jmp
pop
push
std
xor
dec
add
push
push
mov
pop
cmpl
and
inc
out
lock
test
lea
lds
arpl
or
pop
pop
lahf
outsl
adc
dec
in
push
inc
push
jno
mov
out
lods
lock
push
mov
jns
cltd
xor
xor
scas
stos
push
aas
popf
fdivrs
xlat
mov
loop
scas
lods
push
movsb
jo
mov
inc
pop
and
mov
mov
push
push
in
xlat
and
jns
dec
daa
cltd
outsb
mov
inc
pop
sub
mov
lds
pop
orl
cwtl
jo
dec
mov
mov
xor
and
pop
les
outsl
inc
icebp
push
fisttpll
inc
cli
icebp
xchg
rclb
mov
jle
jge
sub
enter
aas
mov
dec
insb
lea
inc
jb
fnstcw
icebp
nop
sub
jmp
push
je
xor
lock
xchg
jg
cwtl
add
lock
sbb
ret
add
mov
or
add
lock
fildll
das
daa
dec
sbb
das
or
push
cmp
inc
cld
add
outsl
sahf
sub
call
std
lods
push
sub
jne
insb
leave
or
add
inc
in
and
cmp
int3
mov
andl
fs
adc
dec
arpl
sub
jle
loope
scas
jl
pop
xchg
sbb
int3
js
es
sub
push
lret
insl
xor
pop
sahf
repnz
xchg
push
movsl
es
iret
aad
ret
je,pn
enter
xor
xor
adc
cltd
dec
push
add
outsb
lods
fcoms
aad
add
dec
insb
cmp
add
dec
sub
add
pop
shlb
sub
mov
mov
movq
fstl
push
mov
or
push
push
into
enter
stos
cmp
jge
cs
pusha
mov
xor
sub
or
add
mov
sbb
fucom
push
xchg
inc
mov
movsl
data16
push
loope
nop
imul
push
cmp
add
mov
add
mov
pop
pop
xlat
jge
add
shl
adc
lret
jg
jne
cmp
fnstsw
fbstp
adc
xchg
push
xor
sub
pop
sub
stos
jecxz
cltd
insl
jns
jbe
jbe
mov
cmp
test
pop
mov
jnp
std
cmp
fisubl
add
enter
rcr
movsl
jmp
or
dec
add
inc
inc
ret
je
dec
popf
ja
mull
adc
or
nop
cmp
enter
adc
sub
pop
xor
adc
dec
es
jge
adc
dec
clc
outsl
mov
sbb
inc
cli
jp
add
push
lcall
idiv
cmc
rcrl
pop
cmp
adc
mov
sbb
test
lods
test
and
or
push
pop
jg
adc
inc
or
jle
jae
inc
es
aad
xor
jns
cld
dec
add
bound
push
or
das
cmc
outsb
fbld
dec
lret
repnz
inc
inc
sbb
icebp
into
rclb
lret
loope
add
and
int3
and
cwtl
or
je
ret
and
rolb
jb
stos
out
inc
push
daa
in
jno
xchg
push
push
fildll
xlat
call
pushf
imul
daa
and
sub
jnp
movsb
mov
pop
xor
std
mov
rcrl
xchg
cmp
jl
jbe
sub
sbb
xchg
in
stos
xor
dec
mov
add
or
scas
shrb
xchg
jnp
cli
mov
loopne
sbb
mov
xor
fsubrp
sti
outsl
push
cltd
test
fisubl
movsl
inc
and
mov
sub
push
pop
nop
fsubrl
outsb
sub
aad
fcompl
decb
loopne
sbb
xchg
adc
xor
iret
arpl
xchg
pop
pop
push
in
rolb
decl
arpl
stc
push
sarb
xchg
add
jns
notl
or
jne
es
ljmp
xor
xlat
pop
orb
fstps
add
cmp
popf
or
jbe
and
icebp
and
xchg
int3
flds
fildll
push
ret
add
hlt
xor
subl
jle
inc
dec
repnz
in
add
jmp
or
jmp
je
push
pop
xchg
jae
push
sbb
je
xor
flds
inc
sub
mov
fwait
xchg
cmpsl
push
sub
popa
ds
and
mov
je
mov
or
pop
sub
cld
and
sarl
adc
cs
into
dec
mov
dec
js
dec
pop
xor
add
mov
cmp
jg
add
push
loopne
sbb
rolb
loop
mov
cltd
sbb
sub
fdivp
adc
leave
cmpsl
sti
cmp
or
dec
or
mov
xlat
adc
mov
cli
push
fnstenv
or
enter
mov
sbb
dec
dec
sbb
lahf
into
push
testl
xlat
inc
lret
dec
cmp
push
cs
pushf
push
imul
int3
inc
jmp
aaa
xor
stc
and
insb
push
cmpsl
cwtl
and
mov
out
xchg
add
outsb
negl
imul
and
arpl
je
icebp
xchg
mov
ljmp
cmp
lcall
xor
dec
mov
push
ret
mov
mov
rcrb
push
mov
ja
iret
fs
add
fisubrl
lods
sbb
ret
and
out
push
push
pop
lcall
sbb
es
mov
sub
test
pop
mov
mov
pop
cltd
testl
shll
stc
bound
aas
or
mov
push
cmp
jae
stc
jmp
dec
int3
movsb
xchg
jns
and
push
js
push
mov
fsub
mov
ljmp
mov
fs
lcall
mov
cld
inc
or
shlb
imul
aas
fs
mov
js
sub
movsb
push
inc
sub
leave
xlat
jo
dec
daa
outsl
mov
pop
popa
mov
and
dec
popa
inc
scas
push
push
adc
into
mov
mov
lahf
repnz
sarl
loopne
inc
in
mov
or
mov
inc
movsl
fwait
cwtl
pop
sub
jmp
arpl
std
and
sbb
jecxz
mov
daa
lods
insl
ja
leave
sbb
cwtl
or
cltd
mov
add
pop
adc
cmp
arpl
stc
or
pop
xlat
pop
and
xchg
std
pushf
dec
or
push
out
scas
fisubrs
push
orl
pop
push
or
or
bound
jae
jmp
xor
jl
hlt
enter
daa
and
jg
into
addb
iret
sbb
andb
in
mov
mov
adc
out
aaa
pop
ljmp
jmp
enter
and
xchg
lret
std
mov
xchg
xchg
pop
lret
adc
mov
or
push
fs
xchg
sbb
push
push
out
cmp
or
mov
xchg
scas
and
pusha
aam
and
subl
pop
cmp
and
icebp
test
mov
and
lea
das
sbb
sub
lds
or
and
mov
scas
mov
test
out
aam
int
sahf
add
inc
cwtl
lods
sub
shrb
xchg
jl
xlat
xchg
xor
lcall
cmpsl
jno
mov
inc
sbb
jns
ss
push
xrelease
pop
ljmp
jbe
out
mov
cmp
bnd
out
dec
xor
add
mov
sbb
outsl
and
fistpll
inc
shll
sbb
data16
das
adcb
pushf
aas
xchg
or
aam
cmc
clc
or
sbb
pushl
adc
data16
xchg
lret
mov
xchg
pusha
push
movsb
push
xor
pop
xchg
movsl
sbb
lock
dec
sub
pushf
jmp
adc
xchg
mov
add
dec
test
es
mov
jecxz
aaa
lret
iret
data16
jl
push
clc
jl
lock
sahf
add
and
std
js
adcl
fucomip
fistpl
outsl
outsb
xor
mov
sbb
out
push
or
xlat
mov
in
ret
dec
inc
xor
jg
out
mov
fsubl
mov
mov
inc
adc
nop
div
mov
lods
sti
neg
fcompl
xor
orl
xor
inc
sbb
inc
pop
xchg
sbb
test
es
fdivrs
out
mov
nop
lock
js
imul
arpl
add
cmp
lods
jb
insb
aam
aas
data16
xchg
push
icebp
dec
fdivrl
jbe
into
pop
ret
stos
pop
push
xor
pop
xchg
mov
push
cmp
jl
outsb
adc
lock
into
rcrl
mov
sub
mov
mov
mov
cmpsb
loop
repnz
jns
mov
mov
mov
addr16
mov
into
push
xchg
cmc
mov
pop
push
lahf
insb
loop
jbe
int3
cld
push
sbb
add
addb
lea
push
jg
iret
int
ss
dec
mov
into
sub
loop
les
pop
das
sarl
test
adc
sbb
ret
movsl
push
inc
jg
scas
jb,pn
xchg
jae
test
adc
test
test
jle
into
jge
xor
jnp
jecxz
cmpsl
pop
ljmp
shr
mov
jge
mov
sbb
jl
ficomps
frstor
insl
std
lock
repz
divb
andb
shlb
iret
inc
bound
loop
cwtl
fisubs
dec
inc
inc
mov
gs
sbb
pop
pop
std
push
push
mov
mov
mov
xchg
xchg
adc
mov
and
lods
push
add
push
xchg
mov
out
hlt
or
or
jle
xchg
sahf
pop
aas
rcll
rcll
shrl
out
arpl
sbb
inc
inc
push
lret
fnstsw
popf
push
in
mov
je
lcall
mov
mov
cltd
mov
adc
repz
rcll
adc
faddl
sbb
mov
fnstenv
pusha
sbb
lahf
js
insl
fs
iret
pop
daa
leave
inc
mov
jge
iret
sbb
push
imul
repz
push
fadd
xchg
sub
pop
dec
cltd
mov
pop
or
push
mov
add
stos
or
dec
fcomip
adc
lods
mov
xchg
or
fs
push
das
addb
or
pop
imul
dec
adc
mov
sarb
scas
and
repnz
cmp
aaa
insb
cmpsb
add
decb
adc
sbb
dec
xlat
cmc
mov
int3
mov
xchg
enter
cmp
hlt
cmp
dec
cmp
pop
adc
push
movsb
in
mov
mov
addr16
les
pop
les
ret
and
sahf
adc
cld
mov
es
jno
test
push
fidivl
pop
push
fwait
jge
or
jl
pop
movsb
mov
stos
les
sahf
push
scas
xchg
xor
popa
arpl
lret
push
sbb
cmp
imul
ret
jns
mov
enter
hlt
fmull
pop
push
sbb
out
xchg
mov
mov
out
xchg
ror
ret
pop
and
or
scas
cmc
lcall
pushf
dec
mov
xchg
dec
dec
add
mov
scas
fisubrs
push
out
sub
cmp
mov
mov
pop
push
je
shll
movl
push
test
jle
in
and
out
imul
nop
ja
jecxz
mov
push
or
sub
movsb
stos
cmp
xchg
sbb
js
dec
mov
ret
in
add
dec
jg
mov
loopne
inc
or
repnz
fucomp
in
mov
fisubs
cmp
dec
hlt
lcall
pop
scas
add
mov
jbe
cmp
pop
das
fbstp
sub
jnp
cmp
xor
movsb
imull
insb
lret
add
mov
sti
jmp
push
jge
in
data16
cmp
out
das
aam
dec
out
cld
roll
sti
jbe
mov
in
ljmp
cmp
fcompl
test
pop
iret
adc
jns
cld
mov
inc
and
sub
inc
fnstcw
shll
dec
fistpll
fsts
outsw
adc
movsb
xchg
inc
adcl
pop
stos
pop
mov
pop
out
mov
inc
mov
push
leave
xchg
insl
dec
and
add
imul
das
out
mov
aaa
insl
xchg
ss
xchg
dec
clc
mov
jp
mov
adc
mov
sbb
mov
out
in
mull
pop
xlat
inc
fimuls
mov
mov
sahf
fs
adc
dec
sbb
cmc
push
retw
dec
aam
mov
aaa
mov
mov
pusha
test
add
cwtl
data16
inc
jge
jnp
cld
or
test
int3
sahf
jecxz
jg
and
pop
sbb
ret
or
shl
adc
or
imul
rol
and
xor
std
inc
movl
in
gs
jmp
sbb
push
sahf
lods
mov
stc
andb
mov
aas
jle
or
mov
ja
lock
es
mov
in
dec
inc
test
subb
sbb
xor
add
add
inc
jg
nop
xor
and
movsl
dec
pop
mov
mov
fnstsw
loopne
gs
jge
inc
lea
negl
insb
lock
pop
gs
mov
addr16
push
int3
push
mov
seto
jns
mov
mov
mov
dec
adc
sub
and
or
fwait
imulb
sbb
and
movsl
cmpsl
mov
aam
ds
jno
pop
mov
and
je
js
sbb
jno
xchg
sbb
int3
xchg
jne
sbbb
pop
sub
pop
adc
shll
lea
orps
dec
adc
call
mov
lret
or
mov
xlat
bound
aad
mov
mov
js
stc
and
dec
cld
mov
mov
push
mov
cwtl
sti
nop
inc
fdivp
pop
adc
sub
out
inc
add
sbb
jmp
mov
sti
test
mov
ljmp
ret
jg
insl
ljmp
test
xchg
or
fidivs
add
cmc
jno
fmuls
cwtl
mov
cltd
adc
or
mov
in
sbb
cmp
mov
loop
pop
pop
in
and
in
xchg
mov
mov
ljmp
sti
push
cli
sub
test
add
es
rcll
insb
xor
mov
or
or
jle
inc
push
repnz
int
mov
push
mov
sub
out
and
pop
mov
lret
pop
pop
push
lods
cmp
lahf
cli
xor
popa
xchg
inc
arpl
lds
cwtl
sub
shrb
xchg
clc
or
sub
push
sbb
or
mov
lock
lea
add
popf
cmc
movsl
adc
popf
dec
out
rorl
loope
cmp
mov
mov
addr16
sub
outsb
negb
or
scas
aas
ja
ds
adcb
imul
add
mov
in
int3
dec
fs
pop
push
mov
lret
les
mov
inc
lds
imul
xor
fsubl
pushl
shrl
pop
lret
dec
dec
lcall
insb
pop
aam
fcoms
pop
xchg
movb
in
shll
std
push
inc
pop
push
pop
mov
mov
xchg
decb
cs
cld
lea
fcoms
push
xchg
mov
sbb
or
and
mov
xchg
mov
cmp
push
loop
dec
loope
dec
add
fildll
inc
fs
lods
jle
hlt
stos
and
stos
or
or
out
sbb
or
add
iret
aam
pop
sub
jno
ret
adc
adc
xchg
mov
or
rcl
stos
cld
insb
lock
das
sti
mov
pusha
inc
into
mov
xchg
aas
insl
mov
mov
call
sub
fnstcw
sub
xchg
mov
xchg
fildl
inc
out
fwait
inc
dec
push
mov
imul
jge
out
add
stc
jl
mov
and
mov
rcrb
icebp
out
xlat
arpl
sub
stos
loopne
pop
ljmp
inc
movsb
cmp
pop
stos
jecxz
cltd
sbb
ficoml
cmp
and
inc
xchg
mov
jno
pop
aaa
cmp
sub
sbb
gs
push
mov
in
gs
xor
icebp
xchg
xor
and
or
outsb
xor
mov
xor
mov
lret
pop
push
push
and
das
sbb
adc
mov
xor
jno
xor
popa
incb
add
sbb
mov
enter
lret
fisttpl
mov
scas
jae
cmpsl
int3
addr16
jecxz
mov
push
divl
jbe
pop
dec
and
movsb
popl
and
movsb
lock
lods
xor
cmc
movsl
clc
or
sbb
xchg
aam
in
mov
addl
sbb
adc
fwait
push
inc
iret
lret
fs
shr
pop
or
xchg
xlat
xchg
rclb
and
push
xchg
sbb
setns
insb
fnstcw
push
xchg
testb
mov
stc
ret
mov
push
out
adc
mov
or
push
pop
cmpsb
push
or
mov
mov
aad
cmp
push
push
daa
push
adc
xchg
sbb
jecxz
xor
cmp
push
mov
mov
sub
and
iret
adc
loop
hlt
jno
pop
inc
xchg
adc
test
pop
sbb
sbb
sbb
in
out
into
in
fucomip
jnp
iret
inc
fisubrl
in
cmp
pop
fildll
adc
imul
jae
sbb
jmp
adc
jge
dec
repz
add
dec
cmp
repz
jo
or
loopne
movsb
add
sub
int3
sbb
scas
sub
lret
ret
dec
add
cmp
mov
sbbb
rclb
mov
sahf
mov
mov
sarl
aad
popa
ljmp
xchg
lods
sbb
xor
loopne
fimuls
aaa
cli
adc
add
faddl
xor
adc
dec
cwtl
jmp
and
movl
push
aam
loopne
loop
pushf
sbb
ss
lods
popa
mov
repz
add
add
jge
add
mov
icebp
pop
lock
fildll
in
lods
sarl
sbb
fisubrs
movsl
mov
arpl
sub
lahf
xchg
mov
addr16
pop
inc
xchg
mov
sbb
icebp
jb
add
movsb
ret
xor
and
in
pop
mov
mov
lock
push
std
pop
add
shlb
mov
pop
sbb
push
movsl
aad
xchg
push
jl
hlt
dec
loop
test
lret
xchg
mov
xor
xchg
xchg
insb
adc
div
cltd
adc
mov
outsl
or
sbb
hlt
int3
inc
sub
lock
or
sbb
push
push
mov
das
mov
pushf
adc
sbb
insl
es
fwait
mov
cmp
cmp
cmp
adc
inc
insl
insl
call
scas
ja
xchg
cmp
out
mov
jnp
adc
cltd
filds
dec
mov
cmp
imul
mov
inc
rolb
jmp
add
lcall
sbb
std
fcoml
out
test
xchg
lret
lcall
sbb
sbbl
inc
into
xchg
sbb
in
hlt
xchg
pop
jle
daa
xchg
xor
sbb
out
gs
in
ljmp
in
xor
cld
ret
lea
stos
xorb
insl
sbb
add
jge
ljmp
adc
loope
pop
sbb
in
out
repz
mov
cmp
jmp
mov
test
in
ficomps
mov
cmp
sbb
cmp
push
push
push
stc
out
mov
lods
iret
andb
aad
std
ret
xchg
jp
pop
adc
mul
jl
stos
stos
push
mov
mov
fcomps
imul
pop
mov
repnz
hlt
jae
ror
and
pop
dec
or
xchg
adc
imull
xchg
mov
pop
push
jl
fdivr
lods
sub
repz
and
jo
mov
mov
enter
add
ret
mov
rorb
insb
aas
and
mov
movsb
xor
pop
out
sub
movsl
js
in
sbb
loop
mov
inc
pop
push
or
cmp
lret
rcll
jmp
ret
mov
add
or
xchg
mov
or
sbb
insb
push
pop
lods
mov
sbb
sarl
pop
and
notl
popf
inc
cltd
xchg
xlat
sub
and
xchg
data16
inc
test
xor
std
dec
mov
xor
mov
cmp
lcall
push
xor
movsb
lcall
popf
lcall
adc
int
ficompl
xchg
push
sarb
xor
lcall
aaa
xor
cmp
movsb
push
pop
movsl
push
jae
dec
jnp
cmp
sub
add
in
and
cwtl
push
mov
mov
sbb
jo
in
aas
fisubs
nop
sbb
dec
fists
xlat
outsl
jecxz
add
incl
stos
push
pop
cwtl
fisubrl
sti
push
rorb
dec
push
xchg
inc
push
fs
aad
or
xchg
ret
mov
xor
shll
sub
ficoms
or
mov
pop
pushf
insl
lret
mov
adc
xchg
adc
mov
jge
rcl
lahf
loop
sub
scas
pop
cmpsb
ss
repz
cmc
cmpsb
jns
stc
loope
jns
pop
push
movsb
loopne
cli
inc
ljmp
adc
out
push
fstpl
xchg
mov
stos
in
dec
loop
pop
shll
sub
dec
adc
xor
xlat
fdivrp
add
mov
pop
dec
inc
push
js
dec
dec
adc
dec
sbb
test
shrb
pushf
xchg
roll
dec
int3
push
dec
dec
jne
inc
push
ret
fwait
sub
jae
sbb
mov
cmpsb
xchg
repz
into
jbe
into
mov
and
pop
imul
pop
or
fsts
sbb
in
add
or
pop
shll
pop
outsb
int3
mov
movsb
clc
sbb
std
fimull
and
cld
add
xlat
add
mov
cmp
sbb
add
add
mov
lods
xorl
fistpll
jae
cmp
jae
inc
test
je
push
xchg
call
and
repz
loopne
xor
shl
dec
mov
dec
or
sbb
xchg
rcll
test
sbb
mov
sbb
pusha
fidivl
cmp
mov
dec
mul
mov
and
push
cmp
out
addr16
fstpl
xchg
leave
aaa
inc
sbbb
loop
jecxz
push
xchg
ds
mov
aad
sub
aaa
jg
idivl
mov
jnp
test
nop
mov
mov
fistpll
sub
movsb
sub
sub
js
int3
xor
fistpll
pop
dec
push
mov
and
repnz
out
or
and
pop
jmp
out
rcll
aam
int3
cltd
pop
push
push
xchg
outsb
in
mov
test
mov
jecxz
inc
aam
stos
jg
mov
test
mov
xor
mov
mov
clc
dec
out
cmpsl
and
ret
cs
int
mov
pop
push
je
sti
subb
mov
push
pop
out
cmpsb
cmp
repnz
pop
and
xchg
lods
sahf
outsb
std
pop
out
xlat
imul
inc
bnd
push
jnp
adcb
push
push
cs
adc
jnp
sub
and
push
dec
dec
insb
push
xor
pop
mov
aas
adc
nop
rorl
dec
jo
mov
cmp
adc
pop
jg
and
cmp
sbb
hlt
mov
or
ret
inc
pop
sub
or
addr16
aam
loopne
movsl
lds
and
icebp
cmp
inc
int3
rorl
sub
aaa
aas
jecxz
sbbl
enter
push
dec
cmpl
jle
sbb
pop
aas
push
xlat
fiaddl
jo
sub
mov
outsl
and
movsb
outsb
or
or
arpl
cli
iret
xchg
inc
inc
mov
jp
mov
in
push
popa
jae
push
or
les
or
pop
push
xchg
pop
jns
jmp
lds
adc
cmc
gs
fsub
mov
xor
pop
and
lret
rol
add
lods
mov
add
aam
lcall
outsb
xor
outsl
cmp
test
mov
cli
inc
nop
sbb
jns
push
stc
lahf
std
or
test
lcall
push
leave
sub
in
orb
shll
lcall
push
sub
in
aaa
sbb
or
or
mov
int3
pop
daa
sub
fldenv
insl
loop
sbb
cld
das
jle
sahf
pushf
sub
adc
mov
addb
inc
xor
mov
out
testl
test
fisttpl
add
mov
hlt
mov
imul
jle
pop
subb
pusha
test
sbb
leave
das
incl
out
jge
outsb
pop
mov
mov
xor
dec
out
push
mov
es
ja
fldz
scas
dec
pop
jg
lods
jmp
xor
push
int3
mov
inc
cmp
aas
mov
cmp
mov
push
out
dec
inc
fwait
jne
shll
int3
sub
outsb
shl
push
sub
cmp
daa
mov
cmpsl
popa
fldcw
ret
scas
lcall
xchg
enter
test
fcom
mov
sarb
std
imul
inc
movl
xor
adc
adc
repnz
cmp
inc
divb
cmp
fwait
push
pop
repnz
js
push
nop
inc
adc
push
int3
cmp
call
pop
xchg
das
jnp
mov
ss
hlt
xor
mov
das
dec
jnp
inc
push
outsl
and
or
ljmp
jmp
pushf
icebp
stos
dec
jge
mov
or
cmp
je
mov
lock
pop
xchg
and
mov
xchg
std
loop
xor
inc
mov
aas
adc
repz
test
das
adc
adc
or
cwtl
movsb
rcrl
out
addr16
xchg
dec
cmp
mov
pop
pop
out
xor
or
inc
mov
lret
mov
mov
push
adc
fiaddl
and
cltd
mov
movsb
or
jle
in
pop
mov
add
mov
dec
push
mov
ja
ret
leave
push
mov
push
stos
mov
push
pop
lret
jns
pop
cs
clc
xchg
inc
pop
push
jae
int3
out
mov
test
scas
xchg
int3
in
pop
jecxz
daa
test
jmp
andb
lahf
lds
or
test
addb
fyl2xp1
js
aam
loop
xor
sbb
pop
je
dec
xchg
mov
xor
or
and
jb
lds
push
and
xchg
incb
jbe
popf
jno,pn
mov
cwtl
lea
leave
nop
mov
lds
hlt
decl
and
popa
dec
inc
adc
adc
mov
jns
sub
xchg
loopne
icebp
fwait
pop
jp
xor
lret
xchg
icebp
cld
rcrb
mov
insb
mov
lret
and
push
lods
dec
fcompl
jp
fsts
mov
sbb
push
inc
sbb
jg
mov
jle
pop
cmc
push
faddl
and
add
hlt
in
addr16
jge
mov
leave
push
mov
cmpsl
and
lret
out
aad
call
pusha
js
pop
pusha
adc
xchg
js
ja
sbb
jmp
popa
jne
mov
dec
jo
leave
gs
inc
lods
mov
xor
test
and
cld
adc
enter
scas
adc
in
pop
dec
add
push
or
xchg
sub
xor
add
inc
add
pop
je
orb
xchg
push
xor
push
pop
lods
dec
dec
adc
test
cmp
fdivl
jle
imull
sub
mov
add
lock
and
or
mov
lds
int3
mov
repz
aas
sti
push
dec
xor
cld
sub
sub
cmpsl
ja
aaa
and
lcall
mov
mov
enter
fstpt
addr16
sub
push
ljmp
sbb
cmc
lds
add
aad
sahf
sar
pop
mov
aam
dec
push
arpl
jge
jp
push
mov
or
mov
push
cld
outsb
cmp
cmp
cmp
mov
out
out
in
mov
ljmp
mov
daa
pop
test
push
sub
aas
dec
add
mov
out
jge
adc
dec
cld
jo
test
push
imul
jae
jnp
pop
popf
push
cmp
pusha
push
pushf
shl
fwait
repz
push
cmc
imulb
push
popa
xor
int
fiaddl
mov
nop
dec
ret
adcl
fsubs
mulb
shl
sbbb
hlt
nop
xor
cmpl
add
iret
popa
aaa
data16
xlat
arpl
add
fbld
bound
outsl
push
cli
mov
mov
sbb
insb
pop
mov
add
mov
jbe
pop
scas
and
sbb
es
cmp
sub
xor
push
pop
xchg
in
xorl
pop
mov
popf
jo
ficomps
data16
mov
inc
pop
insl
insl
jbe
insb
mov
inc
sbbl
cmp
push
or
push
inc
ret
setns
aas
sub
std
bswap
mov
icebp
sbb
cmp
add
ja
and
loope
xchg
push
push
enter
mov
lret
jp
cmpsl
cmp
add
loop
movsb
lods
popf
pushf
adc
pop
out
mov
movsl
lock
jo
clc
or
xor
adc
cmp
cmp
out
jne
lea
jne
xor
outsb
cmp
aam
and
sbb
push
pop
mov
stos
std
add
cmpsl
aas
out
push
shlb
push
jns
or
rorl
and
or
cmc
bound
adc
pop
out
repz
movl
sub
lret
jnp
scas
dec
inc
bnd
inc
ds
xor
ss
or
out
pop
loope
push
jbe
mov
xchg
out
mov
mov
mov
mov
xlat
push
daa
dec
cmp
xor
pop
fsubrl
std
leave
sahf
pop
mov
mov
daa
insb
jne
shlb
lret
cmpsb
into
loope
stos
inc
mov
lock
stc
jecxz
sbb
lret
dec
cmpsl
adc
jbe
sub
adc
xchg
leave
mov
stos
sbb
mov
stos
sub
repz
popf
ljmp
andnps
mov
xchg
xor
and
repnz
pop
adc
rcll
xchg
les
lea
jge
insl
push
and
xor
jno
daa
jnp
outsb
dec
cwtl
aas
mov
xchg
and
fidivl
jno
cwtl
adc
inc
and
dec
mov
insb
cpuid
dec
cmc
add
jne
inc
cmp
aad
mov
jl
pop
sarb
push
je
ljmp
frstor
mov
out
je
das
or
test
mov
cltd
inc
rorl
mov
xor
jg
pop
sub
sub
xchg
add
jno
lea
sbb
enter
cmpsb
mov
cmp
scas
movsb
pushf
repnz
mov
lret
lds
cltd
aaa
dec
dec
adc
int
sbb
and
mov
imul
nop
inc
aas
and
call
adc
fidivs
leave
cmpsb
and
push
add
out
out
out
pusha
arpl
ret
or
sbbb
inc
sbb
rorb
ja
cmp
xchg
jne
add
call
push
lds
add
fisttpl
push
adc
or
repz
jne
inc
call
adc
mov
fcoml
inc
aaa
dec
scas
call
and
pop
pop
sar
scas
sahf
push
out
popa
fisubs
not
in
add
jb
pop
xchg
push
fisubl
fwait
dec
mov
cmc
sub
icebp
xor
fsts
cmc
sub
sarb
imul
xchg
inc
pop
inc
pop
iret
cmp
cs
sbb
xor
cmc
fs
mov
xchg
add
inc
mov
pushl
jle
mov
jp
xor
push
std
test
loop
lret
mov
inc
jo
mov
xor
pop
xor
vmwrite
das
pop
pushf
jb
cmp
cld
mul
hlt
test
jl
and
cmp
shl
cmp
int3
test
ret
dec
inc
sar
and
and
pusha
in
xor
xchg
pop
pop
into
cmp
jmp
lock
jns
adc
push
inc
sub
in
mov
test
test
jmp
or
cli
mov
fdivl
or
pop
sbb
sbb
in
jle
jecxz
xchg
cmp
cld
mov
mov
or
and
jmp
adc
repnz
lock
test
cltd
pop
mov
jge
xchg
jl
inc
push
pop
subl
jnp
scas
adc
repz
in
adc
ret
mov
movsl
jb
jo
nop
inc
fcoml
js
push
cwtl
push
jb
mov
jge
daa
vmovaps
nop
and
inc
popa
fwait
sub
pop
jne
cmpsb
cwtl
scas
jg
test
jno
sahf
mov
mov
cmp
popa
lret
out
dec
dec
dec
cmp
adc
in
inc
mov
fisubs
mov
mov
push
push
shlb
icebp
jp
pop
cld
or
sub
sbb
cmp
fnstsw
xchg
pop
jecxz
xchg
stos
sub
pop
out
xchg
pop
adc
xchg
mov
push
push
push
ret
push
out
inc
push
stos
jno
dec
cmc
pop
call
clc
mov
cmp
rol
xchg
inc
sbb
pushf
jg
or
mov
xchg
js
push
xchg
lods
adc
ds
xchg
sbb
fwait
xor
mov
jmp
mov
loop
fadd
or
dec
jo
fwait
arpl
incb
add
push
xor
and
mov
cmp
or
mull
sbb
aaa
xchg
and
ret
or
pop
xor
aad
testb
sbbl
xchg
push
loope
insl
stc
mov
das
rcrb
lock
flds
mov
outsb
sub
xor
add
push
mov
xchg
lret
scas
arpl
cwtl
cmpsb
sbb
dec
jbe
pushf
add
inc
mov
ss
test
mov
jns
sahf
inc
pop
in
cmp
data16
xchg
or
shlb
lds
fmull
out
xchg
cld
jo
fst
adc
fs
inc
adcb
jns
into
fisubrl
in
sub
jae
test
insb
xchg
push
je
cmp
push
dec
int
sbb
mov
out
pop
mov
cmp
cs
ljmp
bound
cmc
or
test
loop
jl
push
mov
mov
mov
aam
idiv
adcl
orl
push
fsts
fistl
cmpsb
fwait
jl
add
push
jae
pop
xor
push
inc
cwtl
aaa
enter
push
inc
daa
shl
and
scas
imul
xchg
rolb
fisttpl
loopne
fmull
in
stc
sbbb
and
xchg
les
pop
mov
mov
jge
xor
inc
bnd
xchg
xor
or
inc
and
movsl
cmp
xor
in
push
ja
ror
mov
mov
addr16
push
test
out
popa
push
cmp
adc
mov
inc
fs
sahf
sbbl
mov
loopne
inc
sbb
jnp
lods
xchg
mov
sbbb
cli
insl
inc
aaa
xchg
push
sbb
jp
sbb
jmp
shrb
stc
loopne
mov
stos
lcall
rol
icebp
jns
inc
pop
cmpb
stos
and
testb
and
scas
jbe
push
sahf
mov
jecxz
and
sub
cmpsl
scas
dec
jg
stc
and
mov
sbb
adc
lds
out
pop
movsb
cmp
rorb
cs
inc
ret
test
dec
cmp
scas
mov
mov
xor
cmp
shlb
jmp
mov
mov
sbb
es
fs
mov
lock
sbbl
outsb
lock
jbe
jae
out
pop
lea
cmp
inc
sub
add
ror
pop
jecxz
aas
mov
icebp
pop
testl
loopw
aas
scas
popf
add
adc
jle
push
repz
inc
outsl
push
xor
bound
sbb
inc
lret
xchg
sbb
es
pop
add
cwtl
leave
js
adc
out
les
test
lahf
jg
mov
subl
sbb
adc
ds
andb
fs
cs
dec
pop
add
les
inc
jns
lahf
or
inc
movsb
mov
cmpsl
or
scas
dec
xor
cmpsl
ret
or
xor
out
popf
sbb
push
cmp
xor
xchg
push
jb
cld
cwtl
out
call
rorl
sub
lods
push
xchg
cmp
xchg
aad
loopne
push
push
jns
pop
sbb
insb
fildl
mov
arpl
mov
jge
adc
sti
mov
pop
inc
jl
dec
rcr
mov
insl
cmpsl
and
mov
mov
div
jl
insb
test
ds
cmpsb
lock
sbb
xor
imulb
inc
test
in
gs
pop
cmp
sarl
fld
adc
jecxz
hlt
mov
js
lock
add
test
push
pop
and
mov
fcompl
lea
fldcw
xor
xchg
fdivl
enter
pop
mov
xor
addr16
and
push
scas
imul
shll
in
xchg
cli
jecxz
pop
dec
push
scas
pop
aam
popf
nop
cmp
mov
call
out
pop
movsb
push
test
call
inc
popf
hlt
pop
mov
or
cmp
push
push
cld
jle
push
fisttpll
aam
sbb
lcall
adc
psubd
pushl
jae
inc
inc
pop
dec
addb
inc
fmull
mov
pop
push
mov
movsb
and
and
jp
jle
pop
mov
ljmp
fcmovb
enter
pusha
enter
shrb
jnp
push
call
aam
jae
push
clc
cwtl
outsb
xor
sbb
movsl
test
xchg
dec
xchg
imul
aas
inc
jle
xchg
pusha
pop
into
rol
leave
add
js
mov
sub
dec
sub
loopne
cmp
shlb
adc
and
popf
adc
sub
outsl
insb
data16
nop
dec
stos
mov
push
mov
and
lret
push
jns
repz
les
insb
ljmp
cmp
pusha
clc
inc
sbb
mov
add
dec
stc
or
daa
adc
nop
mov
cmpsb
push
loopne
mov
adc
push
les
es
mov
dec
lods
fs
pop
sub
or
lret
ficoms
icebp
not
in
dec
clc
adc
sbb
or
mov
xor
shll
stos
popa
jne
and
rcll
iret
cmpsl
jecxz
lret
or
mov
add
lods
push
sub
xlat
inc
sub
scas
out
pop
push
mov
and
popf
push
iret
xor
dec
lahf
mov
movsl
jnp
idiv
sbb
sbb
mov
mov
pop
stc
sti
movsl
mov
and
pop
test
add
hlt
out
sub
mov
jecxz
fsubrp
cmp
out
lret
push
loop
lret
test
sub
mov
lret
aad
sbb
adc
or
ror
pop
mov
add
movlps
cs
or
aas
sti
in
fs
xchg
xchg
std
ret
cmpsl
sti
scas
cmp
sbb
push
add
jmp
movsb
ror
fiadds
mov
sub
outsb
out
pop
mov
arpl
mov
popf
inc
pop
stos
sbb
test
out
sub
jl
xchg
mov
sub
push
std
outsb
and
shl
les
cmpb
push
test
lods
gs
pop
rolb
push
mov
std
mov
mov
cmp
in
xor
stos
cmp
push
xor
and
fisttpll
pop
fsubrs
or
push
lret
or
lcall
scas
iret
xor
sbb
inc
jb
decl
fstps
jb
rcll
jno
sub
sbb
pop
jmp
mov
aam
jl
mov
in
cmc
enter
inc
mov
push
pop
push
add
inc
cmpsb
fwait
jl
in
jmp
or
push
push
inc
leave
loope
cmp
cmpsl
sub
imul
pop
adc
and
fucomip
sub
imull
sarb
cmp
mulb
fisttps
add
inc
adc
jbe
movl
mov
push
popf
pusha
inc
cmp
jno
addb
jl
aaa
sub
xor
sub
test
mov
fisubrs
jl
sub
lea
adc
inc
xor
hlt
jo
lock
xor
loopne
xor
insl
frstor
dec
and
ficoml
push
xor
mov
ud0
jns
fisttpl
arpl
dec
stos
insl
cmpsl
xlat
dec
pop
add
sub
movsb
and
sbb
and
or
leave
add
push
add
sub
ret
sahf
dec
inc
xchg
cld
inc
frstor
lea
pop
jle
jle
mov
push
and
ss
test
das
jo
xchg
hlt
mov
test
lods
jbe
ja
daa
adc
stos
push
mov
lock
jg
sub
mov
cli
cmc
repz
fdivr
push
pop
push
xor
fmulp
shlb
data16
jno
xor
xchg
mov
mov
mov
cmp
xchg
test
pushf
add
cmp
and
stc
std
cli
popf
in
std
call
jge
mov
push
sub
addr16
es
ret
add
adc
cmpsb
or
clc
shr
inc
pop
lret
xor
xlat
mov
ret
lahf
mov
leave
xor
or
inc
mov
iret
or
xor
arpl
lea
xor
adc
outsb
pop
add
popa
stos
aas
bound
push
in
arpl
icebp
lahf
mov
addb
add
pop
scas
xchg
inc
fs
iret
mov
xchg
mov
lahf
sbb
rorb
push
jbe
xchg
add
stos
lret
adcb
es
int3
cld
or
inc
int3
es
clc
int
xchg
xchg
xor
cltd
aam
sbb
push
inc
add
adc
hlt
sti
stos
inc
sub
sub
sbb
mov
xchg
out
nop
add
xor
jae
xor
mov
std
jp
inc
and
cwtl
xchg
pop
addb
push
inc
out
pop
pop
dec
fidivrl
jl
jg
ljmp
xchg
and
fistps
inc
dec
adc
stos
dec
xor
bound
daa
mov
idivb
pop
sbb
push
dec
cmp
shll
imul
inc
jb
xor
movsb
lret
jbe
cmp
push
es
pop
in
push
fistps
xchg
mov
mov
shrb
and
xchg
repnz
xor
fisubrs
loope
or
mov
push
pop
and
stos
cltd
shlb
or
mov
add
mov
daa
sub
adc
mov
and
add
icebp
lods
sbb
cmp
xor
in
fcoml
mulb
sub
add
push
popf
jns
out
pop
push
cmp
sbb
mov
sbb
test
call
jge
hlt
push
pop
imul
xchg
jmp
xlat
or
jl
stos
gs
cmp
inc
ret
mov
rclb
sbb
decb
ds
mov
push
ss
add
mov
jbe
rolb
clc
inc
outsb
and
pop
pop
test
fildll
push
cmp
mov
and
cmp
int3
nop
cmc
mov
sub
mov
leave
mov
icebp
dec
add
addr16
clc
pop
insl
or
mov
inc
and
inc
ret
push
iret
push
imul
stc
pop
outsb
movsl
cmpl
sub
iret
repz
inc
pushf
ja
and
cs
xchg
push
sub
aaa
pop
inc
fwait
or
xchg
test
cltd
pop
xor
cmc
pop
xor
nop
call
pop
out
xchg
inc
inc
in
mov
adc
xchg
bound
add
ficomps
mov
sbb
clc
pop
movsl
icebp
in
xor
cmp
inc
pop
pop
fmull
mov
xchg
mov
daa
cwtl
daa
xchg
xchg
mov
fcom
sbb
xchg
aaa
leave
sub
mov
push
dec
xchg
jnp
arpl
dec
test
scas
xchg
outsl
push
dec
cmp
mov
or
cmp
xchg
insl
inc
enter
mov
push
filds
ret
jl
sub
test
inc
inc
cmp
lret
inc
lahf
jge
test
fisubs
int3
lret
pop
popf
mov
xchg
mov
cli
sub
mov
frstor
mov
pop
scas
pop
pop
popa
mov
push
sahf
mov
pop
and
je
leave
js
loop
jno
test
sbb
int3
cmp
add
jns
shlb
pop
ds
nop
adc
mov
add
int
popa
jl
mov
dec
cld
test
ljmp
js
xchg
jns
add
test
sub
mov
pop
sahf
push
cltd
add
lods
dec
aam
mov
dec
xchg
lods
add
insl
jne
aaa
xchg
lcall
rolb
lods
sub
pusha
inc
sar
sub
jbe,pt
push
ljmp
lret
sbbb
orb
inc
mov
push
and
pop
or
in
mov
sarb
mov
stos
xor
adc
cmp
jp
jmp
mov
mov
sub
mov
loop
mov
and
aas
add
js
in
out
or
inc
fs
jnp
das
pop
xor
cmp
jb
mov
mov
jae
addr16
std
pop
enter
mov
fldcw
adc
sbb
mov
repnz
shl
fcomps
fcmovb
push
adc
imul
insb
lods
dec
lea
aam
dec
jo
cmp
imul
mov
push
lock
lds
push
mov
jecxz
mov
mov
arpl
in
ss
les
jg
dec
or
lret
push
rcl
shll
out
xchg
addr16
shl
pop
repz
cwtl
bound
aam
jae
aad
test
inc
mov
xchg
test
mov
fidivrl
ss
and
sti
mov
dec
dec
inc
je
aad
das
fs
in
mov
movq
and
and
lcall
insl
add
in
aas
pop
fwait
rol
jns
cmp
fdivrs
sarb
cmp
es
push
xor
sti
mov
test
mov
adc
mov
push
pshufw
loop
add
fistl
xchg
mov
xchg
daa
sbb
mov
out
inc
xorl
sbb
jg
cmp
sarb
outsl
jns
sbb
or
push
movlhps
scas
xchg
pop
jmp
pop
xor
daa
add
ljmp
in
jle
cmp
or
push
scas
lds
lods
xor
gs
or
xor
das
int3
push
les
repz
out
mov
rclb
int
movsl
mov
hlt
push
jle
add
add
mov
fwait
mov
fbstp
fmulp
xchg
sub
test
push
insl
lret
es
dec
mov
cmp
sbbb
mov
mov
xor
in
or
pop
jecxz
xor
lods
es
xchg
and
push
mov
mov
scas
pusha
xchg
mov
jb
sbb
xor
std
mov
je
cli
lock
push
loope
insb
test
ret
cltd
sbb
jecxz
xchg
fwait
push
aas
sbb
push
add
enter
mov
rclb
adc
cmp
xchg
pushf
test
lea
sahf
pusha
out
lods
xchg
outsl
adcl
push
push
clc
cld
ret
mov
push
lea
sub
lret
ja
cwtl
jbe
pop
je
mov
mov
inc
into
add
insl
fdivl
push
jge
lods
cmp
dec
push
pop
repnz
adc
in
xor
add
lds
mov
add
adc
adc
or
or
scas
xchg
ss
or
xchg
imul
adc
out
jg
int
push
aaa
shr
xor
xchg
pop
pop
pop
xor
adc
pop
dec
and
ljmp
fidivrs
sahf
pusha
jle
iret
dec
sub
cld
push
hlt
or
lcall
insb
pushf
test
or
mov
mov
push
aam
arpl
pushf
pop
sti
in
bound
push
je
icebp
stos
imul
lds
sbb
xchg
jno
out
enter
loope
mov
idivl
popf
xchg
orl
mov
loopne
mov
aas
adc
std
loope
popa
xchg
adc
jp
cmpsl
repz
ljmp
mov
and
push
arpl
out
cmc
test
pop
in
vphadddq
arpl
push
ret
shrl
fdivrp
lcall
stc
adc
inc
push
jb
add
lret
xor
fistpll
mulb
xlat
cld
das
jne
iret
pop
mov
pop
mov
cli
jne
bound
mov
xchg
sbb
push
fstpt
cmp
jmp
clc
pop
pop
stos
dec
mov
inc
pushl
xor
pop
add
nop
cmpsl
jnp
mov
pop
les
xor
mov
out
mov
inc
enter
arpl
andb
inc
push
imul
cmp
addr16
jbe
call
mov
mov
in
mov
aam
xor
cmp
and
pop
pop
je
mov
loop
ds
mov
cmp
xor
jmp
add
mov
xor
fsub
jle
and
dec
fs
test
jae
xchg
mov
xor
aam
sbb
jb
adc
aas
inc
js
notl
push
mov
cmp
mov
mov
pop
loop
mull
test
push
inc
sti
data16
pop
lods
push
or
hlt
xchg
xchg
mov
loope
pop
push
in
and
xchg
xlat
pop
lcall
sub
into
fcom
sub
mov
cmp
jecxz
das
inc
sub
adc
jg
adc
jecxz
ss
mov
sub
sti
jg
jg
push
leave
daa
test
jge
pop
je
call
push
shll
add
cmp
push
mov
mov
ljmp
mov
pop
sbb
jmp
adc
cmp
inc
push
flds
out
dec
out
out
ja
inc
adc
jp
jnp
push
lea
xor
jle
pop
xor
pop
xchg
pop
pushf
lock
mov
push
or
mov
fsubs
add
in
push
enter
lods
pusha
push
pop
inc
ret
jbe
cld
mov
movsl
in
fistl
push
cmc
into
movsl
outsb
leave
cmp
xor
dec
outsl
push
push
xchg
data16
jge
xor
rcll
push
js
andb
aam
mov
cli
je
shlb
movsl
bnd
sarl
adc
lret
and
pop
lods
les
jle
cmpsl
lds
sub
addr16
cmp
pop
and
mov
mov
movsb
cmp
out
jae
inc
ss
mov
xchg
outsb
js
in
cltd
insl
add
push
cmp
jge
jb
cmp
ret
and
cmp
and
es
cmpb
enter
mov
test
pop
mov
leave
in
stos
imul
jl
xchg
xchg
stc
clc
jp
xor
in
hlt
sbb
adc
jnp
in
adc
pop
loop
outsl
xchg
aad
stos
scas
mov
mov
fbstp
mov
add
jbe
mov
aas
test
and
test
mov
jb
dec
pop
or
fsubrs
push
mov
rcrb
scas
xchg
push
mov
jns
not
mov
ret
mov
testl
leave
or
out
std
data16
int3
cwtl
in
adc
pop
mov
jae
sbb
ljmp
push
fwait
arpl
pop
je
mov
cmp
lcall
ret
stc
sbb
mov
adc
in
jnp
leave
movb
aad
jns
push
xor
sub
popa
jecxz
js
push
jl
mov
dec
lret
cli
sbb
fiadds
rorb
inc
jmp
pop
fadd
and
lods
sbb
pusha
xor
leave
cmp
in
lret
int
xchg
das
xor
adcb
outsl
in
mov
push
xor
jle
and
inc
iret
das
pop
sub
inc
mov
mul
outsb
mov
adc
rcll
idiv
rorb
cmp
fwait
enter
aas
je
mov
outsl
pop
add
pop
ss
mov
into
cmp
jecxz
mov
aaa
dec
mov
xchg
pushl
jl
and
stos
fwait
rclb
fdivrp
daa
inc
sarl
pop
addr16
addr16
adc
dec
div
jp
sbb
xchg
test
and
jg
pushf
sbb
push
daa
cld
arpl
out
ds
xadd
mov
mov
jns
mov
xor
in
mov
and
imul
or
pop
cld
pushf
ds
jl
xchg
cmp
mov
adc
imul
repnz
ja,pt
lahf
imul
cmp
ss
clc
mov
xchg
add
sub
mov
out
leave
xchg
mov
addb
mov
mov
mov
xchg
adc
or
cmp
lods
sub
mov
push
pop
or
jne
mov
add
lea
pop
pushf
xchg
mov
push
leave
mov
lret
push
bound
test
loop
cli
jp
loopne
scas
aaa
frstor
inc
dec
push
pop
lret
mov
fisttpll
imulb
sub
divl
neg
clc
pop
push
push
aas
inc
iret
xchg
jno
int3
xor
push
lods
sahf
xorl
out
rorl
aam
lods
push
inc
jl
fs
push
add
sbb
mov
mov
xchg
mov
xor
loop
lea
or
cld
lods
testl
scas
in
push
dec
inc
jg
mov
sub
movsl
mov
popa
lods
mov
push
lock
mov
pop
xchg
and
in
pop
pop
call
in
sub
jns
fiadds
mov
icebp
jecxz
movsl
mov
divb
ds
in
and
in
push
scas
andl
adc
add
out
or
sub
hlt
stos
int
and
xor
dec
mov
lret
sub
jo
scas
and
int3
repnz
lahf
test
test
push
xchg
test
fists
sub
out
or
mov
xchg
movsb
ficomps
dec
mov
sbb
test
aas
pusha
fdivrl
cmp
scas
mov
fimuls
and
popa
es
mov
sbb
and
icebp
insb
shll
dec
aas
inc
push
in
stc
inc
out
dec
cmc
sub
pop
test
int
out
sbb
int
push
cs
mov
test
movsb
aaa
mov
xor
jge
scas
mov
dec
aam
adc
out
nop
dec
xor
dec
ret
imul
xor
sub
repz
mov
sbb
sbb
loope
call
pop
test
pop
mov
rclb
xchg
popa
in
test
jp
jne
sub
std
aad
je
push
sub
mov
testb
pop
mov
inc
push
enter
test
lret
ror
insb
jns
inc
mov
hlt
jb
or
fsts
push
add
jge
sbb
int
push
out
dec
fadd
xchg
test
aam
add
cmp
adc
pushf
jbe
mov
dec
movsl
adc
mov
addl
push
fsub
and
add
xchg
xor
pop
adc
add
mov
mov
shrb
sbb
mov
fsubrs
sbb
sub
std
adc
int
test
std
clc
sarl
adc
jnp
mov
push
fs
lret
mov
inc
push
sub
jne
lea
and
add
mov
inc
jo
movsb
jmp
leave
aam
cmp
aad
inc
sub
cli
inc
loopne
push
std
andb
push
lods
repnz
and
sti
into
andl
in
shl
xchg
mov
aad
jle
mov
dec
fst
pop
sbb
je
lock
adc
or
sbbb
mov
inc
mov
xor
and
pop
push
mov
xorl
ljmp
and
cmp
in
js
stc
fldl
xor
int
cmc
in
jge
xor
scas
sbb
and
shrb
jle
in
mov
data16
popa
cld
out
repnz
pop
push
adc
push
pop
mov
sahf
xor
adc
xchg
lret
pop
xchg
push
lcall
inc
push
mov
sahf
and
add
les
or
mov
ss
int
cmpl
push
out
pop
mov
jae
pushf
je
les
mov
daa
or
mov
push
dec
adc
fstl
ficompl
test
mov
fnstsw
sbb
lret
loopne
pushf
add
and
stos
push
add
lea
jnp
jmp
or
jp
popf
repnz
xchg
sti
mov
divb
nop
cmc
movsl
ds
push
ljmp
fcmove
pop
jne
xchg
xchg
scas
cmp
sub
call
add
mov
push
adc
andl
xchg
cmpb
mov
add
divl
movsb
inc
adcb
sbb
dec
scas
icebp
adc
xor
xor
and
pusha
lock
mov
adc
mov
iret
es
xchg
and
in
mov
movsl
clc
retw
pop
push
pop
cwtl
add
clc
in
subb
in
subl
and
adc
lret
insl
jns
dec
xor
push
in
add
lret
sub
push
dec
ror
fs
lea
clc
lock
int3
repz
or
imull
mov
cld
loopne
loop
xor
lret
hlt
sbb
xor
or
out
pop
push
imulb
lock
sbb
jg
pusha
das
ret
jns
mov
es
jp
push
mov
mov
pop
loop
sbb
mov
mov
xor
test
jne
mov
fnstenv
cwtl
sbb
mov
dec
pop
mov
mov
cmpsl
sbb
dec
sub
mov
stos
jmp
insl
or
add
pop
lea
add
loopne
das
mov
adc
xchg
aaa
pop
push
inc
and
add
pusha
dec
mov
jmp
cmpsb
pop
xchg
sbb
jo
pop
mov
daa
call
and
mov
insl
cmpsb
repz
inc
int3
iret
cli
in
xchg
adc
in
aas
test
pop
faddl
das
mov
repz
pop
sbb
xchg
cmp
mov
sbb
je
scas
jle
popf
shll
jns
lret
jb
inc
out
sbb
or
pop
sub
sarb
pop
dec
iret
es
xchg
cmpsb
mov
add
mov
fnstsw
ss
cmp
jecxz
mov
movlps
fimuls
sbb
stc
les
mov
scas
mov
pop
dec
jnp
dec
shrl
fistpll
hlt
imul
or
pop
popf
mov
push
call
push
lea
lock
push
lock
mov
mov
test
lret
xor
inc
xor
repnz
sub
mov
call
scas
jns
and
lea
fadd
lds
lcall
jl
mov
xchg
or
jl
cmpsb
enter
adc
pop
inc
lock
sub
pusha
shrl
sti
dec
jl
stos
cs
mov
cmc
lahf
mov
jno
dec
repnz
enter
jge
ret
inc
xchg
jl
sub
mov
ds
xchg
loopne
dec
pop
pushf
in
pop
add
scas
inc
add
sbb
sbb
sub
adc
xlat
mov
loope
fnstenv
xor
jp
adc
js
mov
sbb
call
pop
mov
mov
dec
mov
and
shrl
and
outsb
jmp
xor
cmc
pushf
dec
lds
mov
add
push
sub
adc
fdivrl
dec
xor
pop
fs
adcl
lods
mov
adc
out
sub
xchg
add
int
movsb
outsl
adc
pop
mov
and
dec
mov
push
adc
pop
je
int
mov
mov
or
outsl
push
enter
mov
mov
in
rolb
cwtl
dec
jp
mov
xchg
test
sbb
rcll
inc
mov
movsb
jp
inc
xchg
call
or
stos
dec
jge
adc
pop
add
addr16
cmp
add
mov
pop
xor
sub
and
jge
xor
pop
in
sahf
push
lcall
ret
ret
pushf
sbb
aaa
stos
and
out
and
lea
inc
mov
or
popa
mov
mov
pushf
mov
and
cmp
dec
movsl
xor
in
xchg
jmp
adc
jbe
and
xor
lahf
cld
xor
ljmp
inc
ds
pushf
hlt
adc
int
and
sbb
lcall
fsubrl
mov
pop
rcrl
dec
dec
inc
mov
out
and
mov
xchg
inc
dec
sub
sbbb
scas
sub
pop
ret
sbb
xor
pop
add
adc
push
mov
outsb
cmp
jmp
jae
sti
idivb
mov
in
jl
clc
fisubl
fwait
push
xchg
dec
xor
int3
inc
fldenv
lods
mov
fstps
loopne
ljmp
pusha
mov
ficoml
cmp
xor
shl
sub
mov
push
je
mov
insl
xor
sub
lret
ret
nop
icebp
scas
outsb
lcall
insb
inc
cmp
rol
inc
decl
add
in
xor
movl
lret
rcll
aam
or
jp
jno
dec
jmp
dec
in
aam
jne
add
aaa
test
jae
pusha
addl
aas
add
lods
xchg
aas
mov
add
cmpsl
lock
cmc
and
es
mov
lds
or
clc
push
inc
add
sarl
fwait
cmpsw
mov
pop
sub
setp
test
cmp
mov
stos
xchg
xchg
dec
fistl
add
pusha
lods
out
inc
inc
fists
mov
xchg
ret
fcmovb
gs
cmp
cmp
movsl
jg
xor
test
lea
or
adc
lcall
jo
jl
into
cmp
jmp
mov
pop
shlb
mov
sbb
add
subb
push
push
mov
lock
dec
cmp
or
add
xor
push
divps
jge
sbb
sub
repnz
data16
dec
loope
bswap
out
cmc
jno
xor
pop
loopne
inc
subb
sbb
and
outsb
jne
adc
inc
jle
mov
and
scas
loopne
mov
xchg
out
dec
dec
data16
shrb
ret
adc
add
cmp
push
push
loopne
ret
mulb
rcl
push
imul
cmp
lods
lahf
xor
testl
push
or
xor
dec
add
xchg
lcall
xchg
pop
mov
xchg
repnz
pop
inc
mov
xor
inc
cmpsb
cmp
xchg
mov
imul
cmp
cmpb
sbb
add
outsl
shrd
fwait
sub
lods
test
sbb
mov
test
mul
or
cmp
shl
push
add
sub
stos
inc
in
pop
imulb
stc
ret
mov
jae
nop
xchg
fstpl
inc
sub
jne
cmp
xlat
cs
xlat
dec
cmp
lock
shll
pop
pop
mov
fwait
insl
add
and
mov
lret
push
gs
cmp
loop
inc
push
sub
in
adc
pop
mov
add
fcoml
test
mov
jg
arpl
jo
dec
test
jb
sbbl
jg
push
jne
les
jbe
cmpb
addr16
leave
fsubrs
xchg
sti
in
push
adc
ret
mov
mov
xor
stos
push
test
pop
loopne
fldenv
mov
je
orl
pop
popf
and
les
jo,pn
rolb
dec
jecxz
add
xor
pop
addb
and
inc
pop
jbe
out
or
xor
adc
ja
mov
sub
scas
push
sub
add
lcall
ret
sahf
lock
je
fdivs
push
lcall
mov
sahf
imul
pop
in
bound
subl
adc
inc
js
fstl
push
fisttps
cld
fwait
jg
jo
data16
mov
xor
shll
xchg
push
or
mov
xor
icebp
ljmp
adc
mov
xlat
lods
jecxz
push
pusha
insb
lock
out
add
inc
and
sub
cmp
call
sahf
mov
jo
xor
mov
sub
pop
in
mov
int3
pop
je
cwtl
scas
jns
push
loopne
rcll
adc
jmp
negb
sub
sahf
xor
in
lods
in
mov
or
mov
cs
add
or
pop
into
jp
sbb
and
mov
pop
push
arpl
inc
jg
out
popf
loope
dec
xchg
das
pop
cmp
inc
aas
out
xor
push
gs
sti
mov
lret
int
rcll
mov
and
int
popf
xchg
dec
repnz
cmp
inc
idiv
out
rcl
fs
aaa
dec
inc
pop
and
cmp
scas
jg
cmp
dec
inc
lods
cmp
das
push
dec
pusha
dec
es
mov
and
out
cmp
in
pop
cmpsb
lea
adc
pop
adc
icebp
fsubr
sub
js
mov
hlt
adc
test
mov
jp
add
sbb
pop
or
stos
out
mov
cmp
loopne
mov
ret
jae
pop
enter
inc
mov
cld
outsl
xchg
jo
inc
xor
cmp
fwait
or
dec
xchg
pop
mov
mov
add
mov
mov
xchg
pop
xor
in
push
loop
xchg
pop
loop
shrl
idivl
mov
fidivs
or
test
pop
in
mov
pop
cwtl
inc
mov
movsb
jns
enter
lock
into
in
ret
lods
sbb
lea
addr16
sbb
lods
cmpsl
inc
pop
aam
out
pop
mov
jl
mov
inc
fwait
sbb
pop
push
dec
mov
cmp
in
lds
ficomps
shrl
cmp
push
js
mov
push
ss
aaa
push
fsubrs
jp
js
jo
sub
popf
inc
pop
movsl
scas
aaa
inc
or
addr16
push
stos
fucomp
sarb
mov
mov
adc
xor
shll
sub
fcmovnu
adc
sbb
fdivr
rclb
bndstx
mov
das
lret
xchg
fidivrs
mov
jp
ds
test
push
jne
es
lods
cmpsb
jno
test
adc
cmp
pop
cs
sub
aam
hlt
addr16
ljmp
adc
rcrl
in
scas
dec
lcall
adc
lahf
mov
jno
inc
in
mov
bound
cmpsl
xor
dec
out
in
rolb
mov
mov
sahf
push
dec
push
in
cmpsl
or
push
mov
scas
shlb
shlb
ss
mov
enter
lods
mov
fsubrs
jb
mov
and
arpl
fs
push
dec
fisttps
mov
mov
jae
into
dec
and
jae
icebp
push
gs
fs
xor
jns
stc
push
cmp
roll
bound
mov
jb
cmc
popa
sbb
cmp
repnz
mov
sbb
movl
sub
testb
fstl
mov
sub
dec
lret
lahf
mov
enter
shrl
adc
outsl
iret
fisttpll
cltd
jno
sarl
xchg
xlat
mov
xchg
hlt
pop
add
xchg
ljmp
lcall
sub
testl
dec
lahf
icebp
daa
cwtl
aaa
mov
xchg
das
out
mov
adc
not
mov
pop
pop
push
dec
adc
ja
pop
xorl
add
inc
in
add
shr
push
dec
test
xchg
inc
xor
jp
pop
xchg
ja
adc
pushl
js
lods
jb
lret
pop
frstor
push
xchg
imul
sbb
les
das
popf
arpl
dec
jge
rcl
scas
sub
mov
xchg
mov
jnp
lret
add
fdivrl
sbb
or
popf
push
and
adc
mov
in
xchg
mov
loope
and
out
mov
scas
jae
out
fimuls
push
jnp
dec
xchg
rclb
aad
or
andb
pushf
add
cld
repnz
mov
push
sub
push
dec
js
ja
jae
mov
insl
xchg
xchg
adc
push
jne
xchg
pop
pop
gs
push
and
out
leave
dec
daa
cltd
loope
hlt
aaa
sbb
dec
fimull
loope
mov
sahf
cltd
les
addl
pop
sbbb
hlt
jmp
mov
pop
in
imul
fistps
push
es
cwtl
pop
or
pop
pop
das
pop
fldcw
fimull
jb
sbb
daa
int
jmp
inc
arpl
in
or
mov
hlt
adc
add
test
dec
cltd
ljmp
xor
inc
mov
inc
push
mov
shll
aaa
scas
cld
mov
jbe
movl
xchg
into
je
xor
cltd
std
dec
jle
inc
mov
jae
cmpsl
sbb
pop
into
dec
cs
insb
sub
popf
mov
arpl
push
mov
push
outsl
sbb
inc
mov
das
or
push
dec
dec
jno
sub
mov
dec
fcmovb
xlat
jbe
and
add
inc
cltd
js
cs
lds
imul
adc
dec
shll
bound
and
mov
les
xor
shll
bound
push
cwtl
fdivrl
and
popf
inc
jecxz
cli
jno
sub
int3
mov
push
xchg
lock
mov
ret
mov
jbe
cmp
push
outsb
inc
scas
jae
aad
jg
mov
cmpsb
inc
addr16
inc
scas
mov
fmull
ljmp
cmp
fisttpl
dec
push
inc
mov
into
mov
or
fidivl
test
cmp
add
mov
jge
jmp
jmp
cmp
imul
bound
lahf
inc
push
ret
cmp
rclb
push
xlat
adc
imul
or
out
sbb
loopne
add
cld
jmp
xchg
pop
lea
fidivrl
inc
pop
dec
aas
mov
mov
xchg
jl
push
daa
and
ja
sub
add
lahf
mov
out
mov
or
int3
dec
cmp
mov
je
cwtl
inc
movsl
out
into
lahf
fldt
add
sub
sbb
mov
sahf
add
jne
insb
in
push
repz
jbe
adc
sub
sub
sahf
stc
xor
jno
stc
push
in
popf
cmp
movsl
adc
lahf
loopne
and
pop
daa
mov
ja
fnsave
bound
jne
push
xchg
dec
and
pop
fimuls
and
add
mov
and
jmp
mov
and
mov
or
bound
rolb
xchg
icebp
and
lcall
dec
lds
mov
cmp
cmc
daa
adc
pop
insb
sub
mov
mov
ficompl
iret
sub
loopne
push
mov
in
mov
outsl
push
and
adc
adc
jb
data16
scas
popf
jnp
std
inc
cmp
pop
jmp
shlb
mov
mov
push
xchg
xchg
push
stos
xchg
dec
leave
fsubr
enter
mov
sub
aam
mov
lret
push
imul
pop
movsb
ret
dec
mov
and
and
add
pushf
add
lods
fildll
xchg
xchg
mov
pushf
mov
daa
shrb
push
adc
das
imul
cmpsb
in
aas
dec
sub
xchg
cmp
in
fdivrs
inc
and
in
sbb
xlat
test
xor
xchg
inc
adc
jg
pop
and
sub
gs
inc
mov
into
movsb
flds
in
push
pop
push
mov
dec
cli
scas
imul
in
rcll
add
lret
and
mov
xor
push
mov
in
add
mov
leave
into
cmpsl
xchg
jecxz
or
push
pop
and
mov
shrb
rcll
adc
repz
icebp
pushf
mov
or
xchg
fisttps
sub
push
popl
mov
mov
int
jae
dec
xchg
fdivrl
mov
jne
cmp
out
aaa
cltd
add
or
push
fs
xor
arpl
sbb
cmp
test
xchg
adc
insb
fsts
call
xor
fwait
shrl
pop
and
and
add
jp
jg
push
lea
lds
sub
adc
or
pop
sub
mov
dec
jecxz
mov
mov
out
sub
cmpsl
jb
outsb
into
std
loopne
pop
es
cmp
sbb
sbb
mov
push
push
push
lods
addl
loopne
pushf
nop
sub
stos
inc
sbb
fcomp
js
popa
pop
pop
aam
sbb
hlt
mov
mov
mov
add
hlt
xchg
adc
mov
xor
jo
int3
shrl
sub
stc
mulb
cmp
mov
dec
lcall
ss
cmc
jmp
adc
sbb
rclb
mov
icebp
in
cmp
mov
ljmp
arpl
pop
testl
push
cmpsl
pop
mov
lcall
xchg
scas
dec
fildll
cltd
mov
lock
out
aam
or
out
les
inc
or
mov
add
or
mov
mov
das
rol
push
gs
xchg
stos
and
ja
push
test
int
inc
push
jnp
mov
jl
add
dec
or
inc
xchg
dec
push
aaa
in
or
sub
test
daa
xchg
add
int3
xchg
js
jne
nop
fcoml
fstl
pop
xchg
test
scas
push
jne
adc
loope
les
fimull
loopne
pop
jno
adc
ficompl
je
aaa
mov
shr
sub
cmp
aad
cmpb
pop
insb
jns
xor
xchg
mov
cld
stos
sti
iret
or
ds
adc
adcl
sbb
inc
sahf
mov
sbb
insl
xor
out
jp
mov
xchg
or
lret
mov
jp
lcall
mov
scas
xor
movsb
sub
pop
mov
rcrb
jno
out
out
jne
lret
cmp
popl
xchg
mov
sub
fwait
popa
scas
out
lods
lods
dec
outsl
mov
push
mov
aam
and
movlps
inc
mov
shl
jns
loope
mov
lds
mov
push
in
test
mov
outsl
jle
aam
mov
jp
call
cltd
dec
int3
mov
pop
out
push
out
sub
fucomip
inc
jmp
insb
adc
gs
shll
movsl
in
fisubrs
orl
sub
cmp
inc
xchg
test
inc
stos
test
outsb
add
aam
lods
add
cmpsb
pop
adc
cmp
jmp
or
lcall
aaa
in
push
scas
pop
mov
dec
and
or
popf
rclb
repnz
in
xrelease
lods
outsl
cmpsb
test
pop
sub
adc
scas
daa
mov
add
and
ds
test
mov
pop
test
rcr
in
pop
cmp
push
xchg
xor
nop
xchg
sbb
mov
xchg
je
test
stc
cmp
ss
cmp
adc
xchg
popa
scas
pop
lods
mov
int
jp
mov
leave
aaa
lret
lods
push
jb
loop
imul
ljmp
xchg
sbb
pop
scas
fs
push
cmp
inc
fidivs
nop
cmp
xlat
lds
or
bound
ret
sbbb
dec
fsts
adc
fidivrl
xchg
in
or
dec
loope
xchg
ja
cmp
pop
xor
pop
subl
mov
popa
add
cmp
lods
xchg
mov
pushw
cli
lret
mov
std
icebp
lods
push
xchg
push
xchg
aas
mov
imul
sbb
add
nop
ss
hlt
push
sub
lods
adc
push
or
pop
xor
pusha
stc
jae
cmp
fnstsw
dec
dec
inc
cmp
test
xor
or
test
xor
fisttps
mov
sarb
pop
or
xor
dec
and
bound
iret
sbb
push
pusha
mov
push
cmp
pop
icebp
lahf
sbb
inc
imul
movsb
and
add
jle
cmpb
push
mov
sbb
push
and
call
ss
shlb
dec
lods
gs
mov
mov
arpl
sbbl
loop
aaa
xor
add
sub
fwait
popf
aas
lcall
xchg
ss
scas
pushf
xchg
mov
xchg
xor
push
fbld
push
mov
pop
pusha
imul
test
icebp
in
pop
xchg
and
dec
outsb
iret
xchg
fldenv
and
pop
mov
leave
ljmp
xor
jo
fildll
sub
fidivrs
push
xor
in
dec
stc
xor
and
stos
pop
jl
test
adcb
pusha
push
add
aam
inc
popf
xchg
je
loop
inc
mov
jbe
icebp
adc
roll
int3
test
sbb
lock
add
lret
xchg
push
in
rcrl
bound
mov
xchg
mov
pop
mov
cmpsb
stos
hlt
aas
cmp
sub
jge
inc
mov
lods
adc
or
sarl
enter
mov
xchg
iret
and
pop
pusha
mov
push
push
popf
add
enter
addr16
add
stos
int3
fisubrs
lods
cmp
call
pop
and
jo
push
pushf
movsb
add
mov
cmp
adc
bound
dec
sbb
add
push
dec
je
call
shll
sbb
lahf
js
mov
out
sbb
inc
pop
in
rcll
cmp
jnp
inc
mov
pusha
popa
lea
test
nop
and
sbb
popf
ficompl
cmpsl
or
adc
sbb
pop
mov
xor
scas
push
or
imul
movsb
xor
cmpsl
popf
mov
lret
pop
cli
imul
add
shl
sub
cmp
stc
pushf
movsl
shlb
and
sbb
mov
orb
sub
adc
mov
sub
jle
adc
add
mov
dec
xor
push
jne
pushf
popa
jg
ds
divb
rcrl
outsl
jno
push
or
cmp
pop
mov
pop
dec
movsb
aaa
push
les
adc
ss
lea
daa
xor
test
int3
pop
arpl
das
dec
sti
add
andb
repnz
cmpsl
mov
push
lds
aam
pop
aad
ret
inc
mov
mov
sahf
mov
stc
or
and
adc
insb
xor
inc
ljmp
adc
in
xor
push
add
in
xchg
lds
testb
mov
dec
push
push
mov
sbb
fisttps
mov
movsl
add
inc
loope
int3
push
push
loope
xor
loope
jle
and
pop
adc
int3
add
push
int
mov
push
adc
repz
cld
dec
jbe
mov
cmc
imul
shlb
bound
xor
ficoms
sub
das
mov
mov
jg
ja
mov
mov
inc
mov
sahf
or
push
rcr
cmp
dec
lea
out
cmp
cmpsb
fisubl
das
cmpsl
jnp
in
push
ljmp
mov
or
in
push
cmp
repz
outsb
iret
mov
inc
push
movsb
jnp
in
sub
inc
adc
adc
mov
daa
addl
adc
jle
fmuls
pop
dec
pop
js
inc
or
sub
push
shrl
xchg
or
push
add
mov
mov
pop
mov
mov
icebp
dec
shlb
js
or
or
add
orl
fxch
or
xchg
out
push
inc
or
push
mov
lds
mov
ss
roll
mov
pushf
or
mov
imul
push
test
in
leave
jbe
sbb
xchg
push
inc
dec
movsb
icebp
pop
mov
sbb
xchg
inc
sahf
ljmp
jo
test
add
xchg
call
mov
dec
add
hlt
mov
inc
mov
push
scas
jno
push
add
xchg
scas
lcall
loope
repz
add
test
das
xor
pusha
incl
cli
xchg
cld
jg
stos
leave
test
loop
mov
movsl
xchg
movsl
lds
xchg
das
pop
pushf
jo
mov
adc
sub
mov
mov
push
ret
mov
jmp
sbb
stc
cmp
pop
push
ret
lret
mov
popf
out
jmp
sbb
in
dec
push
inc
lock
imul
fs
or
inc
inc
jecxz
or
xor
test
fwait
xchg
into
and
sub
mov
sub
ret
mov
in
mov
and
dec
rclb
lret
stos
cwtl
shl
push
inc
sti
orb
daa
sarb
mov
ds
por
add
jg
xor
pusha
aas
and
lock
cmp
or
pcmpgtw
xchg
jne
and
sbbb
out
outsb
in
fstps
xchg
outsb
push
xor
pop
cli
mov
dec
mov
fwait
mov
and
std
divl
or
inc
imul
lods
mov
cmp
sbb
iret
cmc
js
int
xor
dec
fisttps
and
and
sub
push
mov
mov
lds
and
add
pop
mov
sbb
push
cltd
dec
mov
aas
in
fs
jo
mov
cmpsb
cmp
xchg
inc
dec
pop
jecxz
das
xchg
loope
sub
leave
stc
pop
into
pushf
inc
pop
bound
sar
mov
mov
cli
sarl
sub
pop
es
repz
add
jbe
leave
pop
fildl
das
dec
cli
adc
in
or
cwtl
bnd
fnstsw
pop
mov
movsl
pop
xor
mov
dec
repz
jge
inc
dec
and
mov
cmp
sbb
cmc
adc
jns
mov
cmp
pop
dec
xor
push
cmp
sub
adc
dec
ret
and
aas
mov
mov
into
dec
lods
mov
jg
insb
sti
or
sbb
imul
cmp
pop
gs
bound
mov
xor
inc
and
in
cmp
dec
stc
leave
rcrb
jno
push
push
sub
jae
xchg
pop
sbb
sahf
fnclex
jecxz
hlt
mov
in
mov
adc
sbb
inc
mov
sahf
dec
ret
push
mov
add
sbb
jecxz
arpl
add
jae
mov
sub
xor
pop
xchg
fs
sub
int
loopne,pn
xor
xor
or
push
add
add
push
lret
jp
add
sub
mov
ds
test
sbb
push
cltd
inc
ja,pn
xchg
mov
sbb
enter
xor
test
lods
test
jae
pop
rclb
leave
jecxz
push
xor
mov
pop
mov
shr
arpl
test
inc
sub
mov
and
add
or
in
sub
xchg
stos
cwtl
outsl
shrl
lods
sbb
mov
xchg
push
lret
lods
and
sti
sub
xchg
jmp
mov
mov
lahf
adc
xchg
or
mov
sbb
mov
push
lea
jg
adc
mov
aaa
mov
mov
jg
loop
ret
nop
outsl
ds
inc
pop
mov
daa
insl
mov
cmpsb
mov
add
aas
xchg
adc
out
lea
xchg
lods
push
pop
sbb
mov
or
sahf
mov
dec
loop
nop
cwtl
jb,pt
ret
rcll
dec
pop
cwtl
enter
icebp
inc
scas
jle
xlat
ds
and
call
xor
cmp
xor
aad
xor
in
shlb
inc
adcb
das
push
out
mov
ja
lahf
mov
and
lock
jge
xchg
cs
leave
cmpsl
jp
pop
push
mov
mov
adc
cwtl
xchg
popf
and
xor
sbb
daa
mov
or
out
cld
fadds
jnp
add
mov
cld
ret
dec
adc
aaa
fnstcw
stc
xchg
mov
pop
stos
and
ds
cmp
loop
test
jo
faddl
addl
lahf
mov
sbb
bnd
lods
jo
inc
std
add
fucomp
mov
mov
mov
inc
insl
aas
dec
xor
test
aam
mov
mov
mov
push
xor
lea
sti
fcomps
sub
push
cmp
and
notl
sbb
sbb
movsl
dec
sbb
pop
mov
scas
sub
cli
popl
cmp
rcl
mov
xor
mov
dec
repnz
hlt
je,pt
leave
cwtl
aas
ret
movsb
sub
mov
out
out
push
out
inc
cs
pusha
push
mov
push
insb
aad
addr16
addl
or
pop
pop
mov
jbe
nop
jg
xchg
imul
xor
jbe
sbb
cmp
lds
cmp
loope
cli
sbb
adc
orb
mov
push
xchg
stos
bound
cltd
jg
hlt
xchg
xor
push
xor
mov
and
out
lds
mov
repnz
mov
and
mov
shll
xor
push
jecxz
out
dec
sarb
mov
cltd
and
xchg
les
movsl
es
mov
leave
and
cmp
je
inc
and
dec
popa
mov
jg
fs
mov
cmp
push
dec
cmp
mov
push
gs
stos
cmp
or
leave
decb
push
sub
sahf
arpl
lahf
adc
pop
xchg
dec
add
arpl
lods
mov
rorl
cmpsb
rol
cltd
fadd
sub
scas
popf
lods
jmp
fnstsw
imul
mov
test
out
push
xor
jmp
cli
jmp
incl
aam
mov
jae
movsl
repnz
popf
mov
fbld
fiaddl
or
xchg
sbb
mov
add
je
repnz
aaa
movsb
js
es
lahf
sub
mov
xchg
inc
mov
arpl
sub
into
or
cwtl
and
std
adc
cmp
or
movsl
mov
sahf
popf
sbb
scas
rorl
shr
mov
sub
js
clc
mul
push
call
pop
mov
push
xchg
cmp
adc
mov
mov
dec
bound
into
cmpsl
cli
sub
dec
sub
lods
cs
add
xchg
xchg
inc
dec
pop
cli
das
adc
inc
jns
xor
in
daa
mov
xor
cmp
sub
loope
mov
add
arpl
inc
xchg
xchg
dec
sarl
pusha
jmp
clc
inc
loop
psubb
add
les
ss
add
adc
and
and
shlb
xor
add
inc
mul
shr
hlt
pop
lea
fcmovnu
es
inc
xor
xlat
push
cmp
fists
mov
lret
xchg
dec
rcrb
stos
movsl
add
push
ss
push
sahf
call
push
and
fmul
inc
pop
pop
cmp
pop
mov
pop
xchg
and
lock
stos
xchg
xchg
mov
jp
cmp
pop
xchg
mov
iret
flds
iret
clc
xchg
ja
int
mov
jecxz
dec
jbe
mov
xchg
mov
add
mov
or
int3
mov
push
rol
pop
push
jmp
dec
pop
push
addr16
xlat
hlt
test
in
cmpsl
in
in
inc
test
int
jne
pop
loop
mov
pushf
loop
xlat
mov
das
sti
mov
mov
mov
xor
movsl
push
into
hlt
add
add
inc
fildl
fiadds
jge
negl
xchg
push
ret
add
push
icebp
mov
mov
push
gs
push
movsb
lock
or
dec
je
inc
pusha
push
adc
and
gs
jns
or
xorb
loope
pop
dec
xor
inc
adc
movsl
jns
xlat
mov
or
aas
mov
adc
push
sahf
fs
push
mov
ret
mov
mov
cmp
testb
ds
mov
jb
aad
pusha
xlat
ljmp
pop
pop
xchg
push
mov
dec
add
mov
mov
popf
mov
clc
cmp
mov
in
dec
cli
sbbl
sbb
xor
jge
adc
push
jno
inc
enter
cmp
test
sbb
mov
jb
mov
jle
pushf
sbb
pop
jecxz
inc
in
inc
pop
push
test
xchg
sbb
mov
fcoms
xchg
in
mov
inc
xor
adc
shll
mov
gs
inc
sbb
stc
jbe
adc
ret
repz
jbe
dec
mov
xor
loop
inc
cmp
xchg
cwtl
outsb
mov
stos
sub
dec
sub
fs
add
bound
jo
add
aam
pop
or
add
adc
cmp
dec
adc
add
lcall
rorl
sub
in
adc
imul
jne
add
add
ror
xorl
xchg
call
mov
mov
lods
jmp
inc
test
push
stos
lods
jecxz
push
xchg
cwtl
jae
xchg
pop
xchg
adc
dec
pop
lahf
sub
xor
add
mov
hlt
jmp
nop
inc
outsb
sub
dec
popa
or
repnz
aaa
cmp
sub
mov
jl
cmpsl
jp
ret
negl
test
adc
xor
gs
inc
xchg
cs
loopne
arpl
or
test
dec
dec
add
xchg
add
add
ret
mov
test
testl
daa
popa
or
je
adc
push
xor
int
pop
xchg
lock
lea
out
push
push
nop
mov
xor
mov
push
lds
pop
inc
mov
out
clc
ficompl
into
aad
fsubr
cltd
pop
lods
xchg
sub
cmp
jle
xor
mov
cmc
jl
mov
aaa
imul
mov
dec
mov
nop
sub
ds
rcrb
jnp
push
pop
jbe
jg
push
pushl
mov
cmpsl
repnz
orb
scas
push
cmp
inc
stos
or
lret
sbb
fidivl
sub
shlb
out
addl
add
test
aad
and
and
mov
insl
pushf
lahf
adc
pop
pop
mov
push
in
imul
adc
jns
sbb
aas
hlt
adc
cmpsb
imulb
lret
fcmovnu
adc
sti
ljmp
mov
loopne
sbb
xchg
in
sahf
mov
clc
xor
ret
cld
xor
and
or
jecxz
ja
cltd
dec
mov
cld
mov
icebp
into
lret
and
jecxz
sbb
xchg
sbb
cmpsl
add
pop
bound
fcoml
adc
inc
adc
or
push
or
mov
push
ucomiss
pop
cwtl
push
jns
xchg
mov
push
sahf
push
and
loopne
pushf
out
and
sbb
dec
imul
jb
mov
gs
push
and
leave
subl
ja
out
jne
cmc
dec
or
iret
in
cmc
pop
testb
lock
push
lret
ret
push
in
xchg
sar
mov
dec
cli
aas
dec
mov
ljmp
mov
lahf
xchg
push
mov
mov
jns
adc
imul
dec
je
push
cli
daa
mov
outsb
out
sbb
scas
popf
sub
jmp
and
pop
mov
int3
in
sbb
mov
repz
insb
sub
jmp
pop
mov
cmpsl
xchg
cmpsb
push
dec
mov
sub
sbb
mov
jb
cmp
cmp
jne
xlat
mov
push
mov
test
push
movsb
push
xor
bound
mov
pop
inc
or
lahf
data16
or
jg
arpl
inc
arpl
subb
fcoms
popa
stc
adc
pop
mov
out
repnz
lcall
adc
xlat
loop
fdivr
popf
cli
sar
push
mov
pop
imul
sahf
jns
ret
mov
and
and
loop
pop
pop
bound
sbb
rolb
xlat
ljmp
clc
adc
mov
mov
jge
add
imul
mov
lods
mov
in
sbb
iret
and
jne
test
shrb
fucomip
ret
cmp
xor
mov
add
and
aam
test
lcall
insb
add
out
adc
imul
stc
in
repz
es
pop
int3
cmp
inc
mov
mov
or
jne
mov
fidivl
roll
movsl
scas
dec
inc
dec
cmpl
cmp
mov
loope
hlt
push
lods
js
negl
je
lock
cli
mov
pop
pop
outsl
add
and
adc
popa
inc
call
jmp
pushf
lahf
inc
mov
sti
lds
and
xchg
push
dec
rcr
xlat
mov
pop
mov
mov
lcall
mov
imul
je
fs
enter
jns
lea
insb
sub
rcr
lret
add
jnp
out
lock
sarb
ss
pop
sub
xchg
cmp
popf
lret
movl
sub
jae
dec
add
mov
enter
scas
lods
jae
lods
push
mov
ficomps
mov
or
ds
out
sahf
insl
adc
pop
fidivs
and
xchg
ja
out
jl
xchg
bound
shll
dec
inc
out
push
sub
movsb
out
js
cli
mov
pushf
cmp
cli
push
xchg
rcll
or
jns
mov
std
repz
lea
cmp
popa
or
pop
xor
xchg
sahf
icebp
cld
xor
leave
pop
pop
push
sub
fs
xorb
sbbb
mov
outsb
xlat
jbe
mov
mov
gs
out
sbb
aad
out
and
pop
mov
fnstenv
inc
outsb
dec
rcrb
sub
fwait
sbbb
mov
xchg
xchg
pop
popf
hlt
je
sub
fdiv
cmc
jno
or
add
sub
ja
push
mov
jns
addb
ljmp
inc
jle
mov
or
loop
mov
data16
ret
add
sub
jo
out
lock
sbb
push
mov
mov
dec
fucomip
sbb
fisubrl
mov
xor
jecxz
repnz
das
add
aam
pop
push
push
jb
or
push
xlat
negb
andl
cmc
scas
ret
xchg
xchg
jg
out
mov
call
xor
cmp
cmp
mov
test
mov
push
cmp
inc
cmp
pop
jnp
jle
cmp
in
inc
sub
sub
hlt
xor
outsb
and
or
jae
stos
mov
sub
ret
pop
cmp
or
pop
adc
gs
insb
outsl
jae
in
sbb
movb
outsb
out
sti
mov
clc
adc
rcl
pop
sub
xor
or
sub
mov
out
inc
jge
shlb
jle
insl
mov
test
pop
aas
inc
idivl
cs
cmp
je
sbb
das
mov
push
xchg
popf
fstpt
xlat
ret
or
adc
sbb
sbb
test
cmc
mov
sarl
pop
in
mov
sbb
adc
cwtl
xchg
repnz
pusha
dec
mov
sbb
jle
rorl
popa
ja
xor
push
mov
icebp
mov
adc
cmc
imul
add
adc
das
jo
test
inc
xor
outsb
test
repnz
fstl
mov
push
dec
mov
pushf
mov
pop
mov
loopne
scas
mov
push
leave
lock
jnp
sbb
int
loopne
jge
repz
xor
bound
bound
cmp
adc
and
rcrl
mov
mov
pop
cmp
dec
adc
cli
lds
jle
cltd
inc
imul
movsb
sub
mov
cmp
repz
dec
lea
xor
mov
shrb
int3
das
xchg
push
cli
inc
jne
jb
cwtl
jmp
ret
negl
notb
push
sbb
outsb
mov
xchg
fwait
inc
daa
pushf
add
dec
outsl
or
out
adc
adc
scas
outsb
mov
jp
jo
ret
int
stc
rcll
adcb
xor
sub
movsb
popa
cltd
mov
push
popf
stos
xchg
xor
cld
cltd
jns
bound
fwait
inc
sub
jmp
mov
out
push
rcrb
test
jmp
jl
in
pushf
mov
fsubrs
add
je
sbb
jae
notb
aaa
cmp
jae
sti
data16
scas
xorl
dec
cmp
mov
adc
xchg
sbb
jl
bound
xor
bound
mov
dec
sbb
and
cwtl
add
mov
popa
xchg
movsl
mov
aam
mov
outsb
popa
sbb
or
shrb
xchg
clc
popf
pusha
subl
sbb
fmul
add
dec
add
fsubr
test
lcall
cmp
add
je
push
lea
push
dec
xchg
test
shlb
outsb
mov
push
stos
and
jecxz
mov
pop
mov
sub
cmp
jl
clc
loop
divl
cmp
pop
push
mov
test
stc
jp
icebp
shl
cmp
mov
in
std
insb
dec
fildl
pop
push
out
in
dec
mov
adc
jne
add
shll
cmp
adc
lret
shrl
push
out
sub
loop
xor
lret
and
dec
xor
mov
push
mov
mov
fdivl
cmp
xchg
cmpb
sub
std
mov
out
clc
xor
add
mov
lock
pushf
rcl
addr16
aam
mov
cmp
rolb
pop
pop
add
rorl
inc
push
ljmp
jp
or
mov
bound
arpl
jmp
test
out
xor
aad
mov
adc
fidivl
xor
sahf
jae
lret
in
xchg
js
sub
xor
or
fsubs
movsb
xor
das
pushl
movsl
and
divb
bound
sbb
jle
clc
gs
loop
cmp
mov
lds
dec
or
push
aam
adc
xlat
sbb
jno
dec
sub
pop
pop
mov
or
jnp
adc
ror
jmp
jmp
pop
mov
cld
mov
sbb
movsl
mov
orb
mov
ljmp
subl
in
or
lea
mov
add
insb
scas
inc
test
daa
rcrb
lahf
stos
push
adc
sahf
imul
xlat
bound
outsl
fs
jge
inc
cld
sub
jns
lea
cmp
das
repnz
cmpsb
dec
jmp
test
xchg
sbb
push
aad
fsts
cmp
bound
int3
pusha
push
scas
enter
mov
les
pop
loop
roll
adc
scas
or
jge
icebp
stos
gs
sti
pop
pop
jecxz
dec
or
dec
lock
lods
cmpsb
sub
jge
mov
out
insl
jno
sbb
mov
mov
movsl
sti
xchg
adc
or
fistps
mov
das
iret
mov
lsl
popf
push
mov
xor
rorl
popf
jb
sbb
push
adc
sbbl
sub
dec
jmp
ret
xchg
inc
inc
push
xor
mov
xchg
jp
scas
mov
hlt
cmpsb
ud1
jl
scas
loop
cmpl
jns
mov
dec
mov
inc
dec
push
adc
outsb
cwtl
hlt
es
and
jnp
sti
outsl
inc
and
idivb
cld
sarl
js
push
popf
mov
rcrb
mov
xor
frstor
cltd
dec
pop
mov
inc
test
adc
sti
cmp
push
mov
imul
push
dec
cmp
inc
out
fucomp
or
mov
inc
sbb
ljmp
pop
mov
push
lahf
cmp
jno
insl
cs
into
push
xchg
mov
shlb
icebp
test
fwait
and
sub
sbb
test
xchg
mov
push
lret
bnd
jne
cmp
subb
jae
gs
push
pop
adc
jmp
rorl
aaa
int3
pop
mov
ja
sahf
loopne
leave
push
jmp
bound
push
push
mov
dec
push
adc
in
in
aas
repnz
push
jne
xchg
sub
cltd
mov
and
pushf
test
cmpsb
mov
insl
sbb
xor
push
pop
add
adc
insb
out
mov
test
jmp
xlat
lcall
add
pop
jne
xchg
push
enter
inc
imul
andl
cmp
sub
add
xchg
lret
repnz
sub
adc
jge
jl
scas
jp
test
mov
adc
loope
jecxz
mov
lret
mov
aad
into
aam
shlb
xchg
lret
push
ljmp
mov
popa
test
xor
popa
negl
mov
sub
sbb
mov
push
repz
add
jmp
dec
fucom
and
dec
mov
mov
ljmp
movsb
sub
outsb
cmp
out
and
inc
and
or
inc
mov
jbe
test
std
push
jg
inc
popa
insb
scas
mov
ss
stos
aad
or
adc
adc
mov
data16
inc
and
pop
or
call
xor
add
push
dec
hlt
insb
dec
les
ds
sbb
xchg
mov
pop
pop
inc
clc
fwait
test
ds
pop
push
xor
leave
push
and
jnp
or
movb
xchg
lret
adc
pop
sti
ja
cmovae
mov
cmpsl
fxch
sarl
std
std
jle
lret
jns
ret
lret
sti
lods
repnz
jl,pt
in
push
ja
les
ljmp
lret
test
xlat
adc
push
gs
pop
adc
pop
jns
fwait
dec
insl
xchg
mov
fcmovnb
loopne
pop
mov
pop
or
push
cmc
mov
les
test
leave
xor
sbb
in
jno
cmp
test
and
sub
cld
cwtl
mov
sub
cmp
stos
jl
dec
add
xchg
adc
data16
ds
sub
stos
mov
sub
xchg
mov
fdivrs
mov
addr16
scas
and
sbb
xchg
and
xchg
mov
ror
and
cld
inc
mov
fdivrp
xor
lds
sbb
or
and
fdivl
cli
frstor
cmpb
out
sbb
push
jp
aas
lcall
inc
stc
shl
sbb
xor
mov
divb
jp
mov
shr
xchg
sub
in
lds
mov
push
or
or
adc
insl
add
in
jnp
xor
fisubrl
out
or
sbb
into
pop
push
mov
cmp
pop
nop
pop
mov
xor
addr16
aad
mov
sbb
cmp
icebp
divb
pop
mov
mov
das
ret
mov
sbb
push
es
aam
pop
test
push
cld
ret
xor
call
pop
fcmovnb
xchg
gs
push
fidivrl
or
arpl
repz
call
push
frstpm(287
jbe
insb
in
and
lret
jg
mov
ljmp
call
mov
sbb
imul
mov
movsb
outsl
fwait
cs
mov
repz
fdivrl
nop
xchg
verw
adc
dec
test
cltd
dec
imul
push
cmpsl
pop
ficoms
mov
fisttpll
sub
ja
mov
aaa
sub
pop
sbb
xchg
mov
push
adc
fdivp
adc
cmp
inc
mov
iret
loopne
lea
xchg
into
xchg
pop
xlat
jmp
and
clc
imul
or
add
adc
xlat
and
pmaddwd
mov
outsb
call
xor
push
aaa
jne
les
jge
cmc
aas
data16
in
lret
jno
into
pop
push
pusha
ror
lock
loop
into
imul
cmp
jo
cltd
sbb
movsl
in
mov
movsb
lret
daa
in
jns
jns
pop
ret
add
add
adc
repnz
pop
push
xchg
loopne
pop
push
loop
ljmp
pop
and
call
mov
mov
pop
xor
popa
lds
or
sar
add
or
rolb
mov
xchg
sbb
or
sub
dec
into
or
pop
aaa
jns
insl
popf
movsl
mov
mov
sub
pop
aad
aam
les
mov
call
jmp
jne
in
rcrl
test
pop
jge
push
lret
adc
mov
inc
mov
fs
rcl
inc
sub
cltd
loopne
aas
cmpsb
cs
pop
or
rorb
mov
pushf
jno
jne
rorl
loope
lds
or
inc
cmc
jae
aad
add
and
pushl
xchg
clc
pop
out
xchg
jno
test
dec
pop
push
inc
fdivl
cld
out
jg
fidivrl
fsubrl
enter
dec
movsb
test
jle
mov
imul
jge
test
mov
clc
cmpsl
or
mov
mov
sbb
adc
and
jecxz
les
pop
cmp
jne
jmp
or
push
sub
fcom
jns
push
movsl
test
and
cmpsl
ss
cmp
jmp
mov
pop
add
loopne
rcrl
scas
mov
out
pop
int3
xor
mov
mov
jns
mov
insb
and
repz
xchg
xchg
imul
aad
in
fstpl
xor
mull
sub
stos
pop
mov
clc
scas
subl
cli
fcomp
xchg
sub
mov
imul
outsb
enter
pop
mov
stos
neg
arpl
popa
adc
jno
arpl
dec
shr
lcall
mov
pop
add
sahf
add
inc
mov
jne
sub
cmc
sub
xlat
sub
mov
rcll
lock
or
fldl
cmp
xor
add
push
jmp
insb
lret
stc
sub
pop
xor
jmp
dec
cmp
or
jb
fmuls
int
inc
out
and
cmc
dec
fbld
lock
dec
push
lret
pop
mov
push
jnp
lret
negl
je
mov
ds
or
xor
ret
mov
ror
xor
jno
and
inc
mov
adc
mov
xchg
imul
push
dec
addl
int3
push
daa
fwait
push
push
mov
aas
popf
pop
repz
daa
and
mov
shll
jge
pop
push
test
icebp
dec
adc
cmp
mov
loope
and
mov
inc
push
mov
ds
ret
into
inc
push
sub
sub
and
push
jne
ficoml
int
xchg
or
sar
call
xchg
inc
push
repz
dec
lea
sub
jno
jg
push
dec
jne
bound
scas
pop
xchg
dec
xchg
paddusw
mov
jne
push
push
or
xchg
xor
jne
pop
adc
cmp
test
push
les
pop
add
adc
xor
sub
arpl
adc
mov
lods
xor
jne
mov
push
js
shlb
mov
roll
cltd
jg
dec
cmpsl
int3
sbb
sub
loope
sub
popf
stos
xchg
cs
aam
push
sub
jns
jbe
out
and
pause
jb
cmp
add
sti
or
pop
jge
jle
push
out
out
mov
mov
push
cs
sbb
dec
insb
daa
push
enter
gs
imul
mov
repz
test
aas
into
sbb
pop
pop
push
int3
ret
mov
lock
clc
mov
sbb
mov
pop
add
cmc
xor
sbb
loop
and
int
jae
mov
jle
pop
faddl
popf
sbb
mov
mov
data16
scas
xchg
int
icebp
jl
mov
sbb
lods
divb
dec
push
jo
test
lea
aaa
and
dec
sti
shr
daa
inc
inc
adc
xchg
inc
test
gs
in
sub
aad
call
test
out
mov
mov
inc
loopne
out
adc
lock
push
clc
or
pop
or
test
or
fistps
daa
adc
jbe
stc
adc
out
cmp
outsb
popf
lcall
mov
out
adc
dec
cmp
movsb
xchg
stos
adc
dec
imul
in
arpl
cmpl
mov
scas
sub
cli
adc
stos
push
fabs
ja
inc
ljmp
jge
rcrb
pop
cmp
xor
mov
les
cmpsl
jns
lea
fistl
shlb
push
aaa
xor
mov
xchg
pop
sub
lock
enter
xor
cli
lds
and
std
popf
bound
fisttps
rcr
sbb
xchg
sub
repnz
pop
inc
mov
orl
dec
xor
mov
dec
mov
mov
es
adcl
jmp
mov
xchg
pop
js
pushf
scas
lret
xchg
sbb
loop
pop
rclb
sbb
ror
push
dec
mov
fstpl
pop
mov
addr16
insl
movsb
pop
imull
vmread
aam
add
repz
jb
add
push
fisubrs
sub
loopne
repnz
adc
mov
or
stc
call
jnp
cwtl
arpl
sub
sbb
mov
adc
in
push
scas
pop
lods
xor
arpl
dec
icebp
or
rcll
jmp
push
mov
test
inc
pop
mov
out
inc
lret
or
jb
cwtl
jge
stos
popa
pop
or
rcll
int
dec
addr16
mov
jmp
jb
iret
xor
or
movsbl
in
pusha
pop
push
adc
add
add
push
push
jge
inc
or
mov
jecxz
test
push
inc
pop
add
aas
nop
xchg
push
and
xor
insb
lret
dec
sbb
sbbl
cmp
jecxz
push
push
sbb
sar
xchg
add
cmp
aam
and
adc
adc
hlt
scas
adc
jns
stos
mov
divps
sbb
mov
int3
in
call
and
mov
cld
leave
mov
ds
xchg
mov
sti
cmp
sahf
in
xchg
push
sbb
test
mov
or
ret
adc
push
ljmp
imul
pop
fldt
imul
movsl
ret
cmp
adc
das
lods
ds
jne
dec
lods
out
leave
lcall
pop
cmp
sbb
cmpsl
shlb
mov
pop
dec
sub
nop
inc
in
cld
inc
das
imul
mov
add
shrb
cmp
or
adc
out
cmp
jns
fldenv
mov
sub
xor
fdivl
add
mov
pop
pusha
and
das
das
sbb
mov
push
sarl
jbe
jmp
pop
fistpll
iret
push
lahf
jge
push
scas
cmpsl
xor
sbb
push
and
and
jmp
into
dec
lcall
push
imul
add
jbe
daa
adc
sbb
push
mov
push
pop
test
and
inc
dec
push
pop
push
fidivl
es
or
push
adc
xor
sub
and
faddp
aaa
fildll
cs
enter
cmp
lahf
cmpsl
repnz
pop
sbb
loopne
inc
cmp
bound
xchg
pop
xchg
adc
int
adc
inc
faddl
mov
xchg
mov
lock
mov
addr16
fsubs
push
dec
inc
xor
jo
inc
cltd
out
dec
dec
dec
jne
shrb
bound
seto
mov
repnz
push
cmp
jg
insb
ds
push
cmp
xchg
loopne
inc
jnp
inc
mov
cmp
dec
insb
lahf
shrb
sbb
pusha
cli
cmpsl
repz
sub
inc
movups
cld
cmp
cli
and
mov
inc
jl
pusha
aad
jg
mov
js
cmp
pop
mov
mov
ljmp
inc
mov
test
push
mov
jne
inc
add
mov
inc
mov
xchg
popa
mov
negb
js
call
stos
jb
mov
fadds
lea
pop
in
lods
pop
xchg
in
lahf
adc
jns
push
mov
mov
fiadds
repnz
sbb
pop
int
pop
and
aaa
add
ret
popf
cmp
push
enter
pop
dec
sub
repnz
jnp
sbbl
insl
mov
mov
das
mov
cmp
in
jle
cmp
jbe
mov
sbb
cli
pop
mov
loope
mov
push
mov
cmc
popa
dec
in
aad
sti
jnp
xor
js
rcll
and
mov
movsl
outsl
das
push
jno
movsl
inc
pop
call
out
testl
push
imul
aad
out
stos
push
adc
insb
sbb
fwait
nop
xor
jno
adc
adc
loopne
push
cmp
out
xor
sub
outsb
jbe
mov
pop
cmp
int3
arpl
es
stc
stc
rcrb
push
dec
js
xor
sub
mov
xor
jno
cmp
adc
lds
xchg
jecxz
mov
mov
not
inc
pop
dec
shll
call
mov
jne
lods
push
es
sub
push
imul
add
inc
lods
jb
scas
out
dec
and
sbb
xchg
fcmovnu
std
xlat
xchg
std
xchg
push
or
pop
or
mov
pop
mov
inc
andl
add
fsts
ljmp
mov
mov
sbb
cmp
dec
sbb
loop
push
lret
loopne
xchg
add
bound
lds
push
jle
sub
enter
push
mov
inc
adcl
loope
xchg
in
adc
insb
cmpsb
mov
aaa
sarl
inc
das
jnp
xchg
mov
ss
lock
in
dec
xchg
jmp
sbb
mov
adc
test
out
out
cltd
push
nop
jge
add
fsubp
repz
je
jnp
mov
xchg
outsb
dec
push
mov
xchg
cmp
sub
hlt
rcl
cmpsb
mov
jecxz
test
dec
sbb
outsl
fnstsw
ja
cmp
fwait
mov
cmp
add
addr16
out
xor
icebp
add
es
dec
mov
mov
xchg
sti
int
xor
dec
xchg
imul
cmpsl
xchg
fcompl
in
shr
cmp
mov
gs
cld
sbb
mov
hlt
or
enter
aas
int
adc
ljmp
xchg
xchg
in
inc
mov
or
fnstsw
jb
lret
push
sbb
push
outsb
das
xchg
fsubr
test
stos
xchg
xor
aas
cli
adc
lcall
dec
rcrl
fsub
inc
repz
fwait
and
fnop
push
adc
and
loopne
fs
inc
mov
mov
sbb
xchg
dec
loopne
sbb
mov
jg
rcl
stos
scas
cmp
cmpsl
sbb
adc
js
sbb
add
test
stos
pop
mov
dec
out
xchg
cwtl
mov
mov
in
xor
sub
and
das
pop
push
and
sbb
stos
sbb
in
mov
mov
movsb
or
inc
sbb
add
and
fsubr
movsb
mov
je
mov
test
fs
or
mov
in
aam
int
data16
lock
or
rcll
dec
push
cmpl
int3
jecxz
lods
andl
nop
add
cmp
je
ljmp
scas
pop
loop
bound
push
xchg
xor
insb
inc
or
loop
test
cltd
cmp
stc
call
movsb
jmp
adc
aaa
push
dec
jg
das
sbb
imul
stos
and
pop
or
pop
mov
dec
inc
lcall
xchg
cmp
sbb
inc
pushf
cmc
xchg
stos
sarb
mov
es
cmp
sahf
push
mov
pop
call
mov
mov
repnz
cwtl
or
sbb
pushf
jp
repz
addr16
pop
sub
in
mov
sbbb
int
test
add
stos
push
dec
mov
mov
cs
mov
dec
dec
shll
add
push
mov
sub
dec
lods
scas
cli
movb
or
adc
imull
insb
lods
mov
jno
sub
rorl
sbb
cli
sahf
pop
xlat
pinsrw
lret
xor
add
adc
jnp
cmc
push
out
shll
sub
stos
rol
xchg
sbb
test
loope
push
xchg
xor
cmc
xchg
pop
and
jp
or
inc
movsl
adc
mov
in
ja
and
icebp
pop
call
push
sbb
xchg
adcb
sbb
lds
add
mov
sbb
bound
xor
xchg
sub
pop
mull
mov
decb
icebp
andl
add
or
xor
or
and
icebp
mov
push
lret
mov
cmp
xchg
ret
inc
lcall
mov
inc
or
call
ror
push
push
repnz
fnstsw
test
cwtl
cltd
fwait
daa
test
add
and
fwait
imul
movsb
jb
addl
mov
jns,pt
lahf
mov
and
outsb
icebp
pushf
mov
xchg
push
sub
aas
sub
insl
mov
jns
xchg
or
and
cmp
movsb
pop
jbe
test
sbb
jno
and
into
decl
loop
enter
ret
and
pushf
add
mov
jns
xor
gs
mov
inc
mov
punpcklbw
ss
shlb
pop
push
adc
inc
inc
je
push
adc
sti
lds
xor
mov
mov
pop
imul
inc
push
fisttps
loopne
into
lods
mov
mov
inc
call
nop
mov
out
mov
test
or
aam
fsubs
cmp
xchg
pop
push
dec
shrl
out
push
bound
mov
xchg
jae
daa
mov
mov
mov
repz
jo
cmc
mov
in
mov
push
ret
daa
cld
scas
into
lahf
xchg
pop
ret
and
int
dec
movsb
mov
test
out
push
mov
mov
inc
push
inc
mov
stc
enter
dec
cltd
fsubl
mov
clc
stos
test
ljmp
jecxz
int3
jno
jge
leave
in
mov
pop
jl
and
fnsave
cmpsl
push
lcall
sub
orb
xchg
test
mov
sbb
ljmp
cmp
inc
aaa
mov
lcall
push
movsb
es
xchg
adc
stos
hlt
andb
popa
ds
notb
push
imul
push
ret
popf
pop
push
sub
outsb
hlt
mov
pop
mov
stos
jmp
outsb
inc
add
xchg
icebp
adc
pop
dec
adc
cltd
sbb
mov
cltd
cwtl
sbb
andl
movsb
xor
shll
pop
xor
je
add
xchg
test
into
and
clc
jge
jle
les
nop
mov
mov
ret
in
inc
jne
jle
lret
fucompp
cwtl
push
out
fnstcw
xchg
sbb
or
push
dec
mov
mov
inc
mov
xchg
jmp
cmp
dec
push
mov
push
lahf
lds
xchg
out
int3
cmpsl
pusha
lcall
mov
adc
mov
cld
std
fistps
mov
sbb
mov
mov
imul
sahf
scas
mov
jle
xor
push
add
jno
das
xchg
push
stos
ret
repz
fimuls
lret
mulb
outsl
dec
imul
pop
into
sub
insl
sbb
sahf
in
jno
cld
mov
xor
stos
fwait
gs
addr16
mov
hlt
pop
popf
dec
imul
mov
and
das
divl
orl
in
adc
jae
lahf
aad
mov
sub
and
aaa
inc
stos
mov
fwait
sub
sub
sub
or
pusha
inc
clc
inc
leave
pop
test
cmc
lods
cmp
xor
lds
sub
add
ror
into
and
fsubr
mov
cmpxchg
jle
shll
shrl
and
loope
divb
fistpll
shrl
pop
adc
inc
addl
and
mov
jo
xchg
and
pushw
sbb
mov
lret
push
sti
add
and
clc
pop
sahf
fsubp
add
jle
jnp
in
loope
stos
jge
adcb
adc
sahf
jae
repz
cmp
add
or
leave
mov
jnp
div
fmul
sti
or
lds
in
out
data16
fildl
mov
mov
mov
pavgw
in
add
jb
or
mov
mov
xchg
cmp
jg
sbb
jbe
xchg
sub
jb
aas
inc
push
xchg
in
icebp
popa
xchg
add
and
mov
lcall
notl
inc
popf
adc
imul
mov
xchg
idivb
xchg
dec
pop
dec
push
out
rorb
jmp
cld
dec
mov
push
nop
stos
loope
mov
test
mov
lock
cmc
jo
sub
out
xchg
jae
push
aam
dec
sub
inc
out
shrl
xor
adc
xchg
insl
mov
xchg
mov
lds
repz
mov
xchg
stos
xorb
push
lret
push
fidivs
loopne
popf
inc
loopne
add
movsb
cli
sbb
jg
popf
jmp
inc
push
cld
sahf
fcmovb
pop
test
xchg
sbb
aad
cmc
xchg
pop
mov
iret
sub
mov
hlt
sbb
fucomip
jb
cmp
adc
push
pop
mov
sahf
inc
jge
pop
int
push
ja
es
stc
dec
cmpsb
jne
bnd
dec
adc
mov
jb
push
xlat
push
out
fisubl
cld
cmpsl
pop
enter
dec
leave
movsb
add
sbb
add
xchg
shr
xor
push
rorl
dec
xchg
fildl
push
dec
or
jle
and
outsl
aad
loop
divb
and
jne
popa
mov
mov
arpl
iret
adcb
push
pop
nop
in
scas
or
xor
arpl
testb
stc
push
sub
emms
lods
inc
xchg
in
pushf
jp
and
xchg
inc
ss
leave
cld
test
in
cmpsl
in
fsubr
shlb
test
sub
jae
xlat
xchg
shll
add
inc
insb
test
popf
mov
inc
inc
mov
adc
mov
push
dec
jl
lods
sbb
clc
mov
lea
xor
inc
repz
add
mov
xchg
jge
movsl
mov
insl
loop
sub
cmp
cmpsb
orl
adc
jbe
xor
mov
mov
rcll
xchg
inc
rcrl
fsubrs
in
out
dec
and
and
mov
mov
xchg
cmp
jnp
ja
sub
adc
fldcw
pop
add
rcl
fisubrl
or
test
push
dec
fwait
push
les
fdivs
ret
fwait
mov
push
mov
fucomip
stos
in
pop
mov
lds
mov
int
jle
pop
rcl
aam
fcomps
data16
addr16
sub
mov
ja
ljmp
clc
daa
mov
jg
pop
repnz
cltd
test
arpl
in
lret
shll
adc
in
add
or
daa
mov
repnz
icebp
lahf
js
mov
add
push
loop
lahf
pop
fcomp
sahf
inc
sub
adcl
mov
inc
and
push
arpl
jnp
xchg
stc
mov
out
mov
cmp
sbb
in
jnp
or
icebp
add
xor
xchg
mov
push
cmp
adc
pop
mov
shll
and
dec
xchg
cmp
jb
mov
push
data16
cld
mov
nop
lahf
mov
mov
mov
out
fistpll
push
push
adc
jnp
add
xchg
or
test
adc
cltd
adc
mov
pop
stos
inc
loope
fstpl
ja
push
xchg
pushf
xchg
fstl
and
icebp
pop
in
stos
cmp
sub
jae
in
ja
mov
add
testb
mov
mov
mov
xchg
jl
mov
pop
jns
push
movsb
jge
sbb
rorl
insb
flds
loope
in
push
push
pop
xor
jg
fs
mov
mov
fdivrp
sub
mov
pop
mov
adc
inc
movsl
inc
imul
pop
dec
paddb
fcomps
fs
mov
mov
popf
aad
fs
shl
movsl
dec
jns
jo
mov
adc
dec
push
insb
or
cmpsl
cmpsl
pop
imul
es
out
ret
mov
pop
insb
inc
nop
push
xchg
xor
dec
leave
lahf
or
jecxz
dec
mov
aas
in
scas
xor
ss
sbbl
ljmp
xor
loop
sub
int
xchg
add
and
sahf
add
ficoml
out
data16
push
lcall
xlat
inc
stc
mov
daa
enter
outsl
inc
repz
add
adc
dec
gs
lret
xchg
roll
pop
out
inc
imul
cmp
into
sub
mov
push
call
sbb
lock
loop
test
ficompl
mov
scas
jb
inc
xor
mov
push
jp
cwtl
pop
and
mov
cld
and
nop
jmp
adc
pop
mul
std
lret
out
sub
aas
loope
xor
inc
sub
jecxz
andb
stos
jmp
repnz
fisttpl
mov
mov
xor
test
pop
fwait
add
adc
mov
jge
call
mov
jo
stos
xchg
dec
and
pop
cltd
or
jg
cmpl
std
scas
leave
aam
addl
mov
or
mov
mov
dec
xchg
jb
andb
mov
sbb
loop
shll
outsb
dec
xchg
push
xchg
xor
pop
xchg
cmp
mov
and
push
push
push
rorl
jnp
xor
xlat
scas
js
inc
push
shlb
dec
lret
sub
sbb
cmc
mov
sub
out
popf
addr16
inc
pop
lcall
cmp
imul
jns
jae
jae
jb
call
mov
lahf
shlb
fildl
cmp
mov
insb
dec
lds
lods
xchg
ljmp
add
add
pop
test
js
or
add
add
lahf
scas
add
pop
das
sbb
add
neg
pop
xchg
imull
aad
ret
mov
pop
scas
loope
jmp
es
mov
push
rolb
sub
cmp
xchg
nop
int
xor
ret
enter
test
inc
cmp
cmpsl
mov
mov
ss
and
xlat
ret
xchg
sub
sub
push
insl
lahf
in
aaa
mov
scas
xor
xchg
push
dec
adc
je
sar
lahf
or
adc
lahf
inc
adc
adcb
arpl
mov
movsb
repnz
mov
notl
test
pop
push
mov
xor
dec
inc
pushf
nop
mov
xor
xchg
push
xchg
cmp
cmp
xor
jo
inc
jae
out
subl
dec
pop
scas
int3
fnstenv
mov
lahf
ja
adc
icebp
dec
int3
cmc
enter
or
adcb
arpl
aaa
movsl
into
xchg
mov
and
cli
pop
xor
fdivs
adc
push
fisubs
push
or
sub
neg
dec
repnz
dec
lcall
fwait
pop
jns
repz
xchg
std
loope
add
mov
loop
cmp
test
adc
cmp
adc
ja
in
mov
mov
dec
cmp
jno
lock
and
pop
sbb
sub
or
pop
mov
into
test
gs
cmc
sub
sbb
xor
push
sbb
lods
lds
fwait
mov
loope
sub
sbb
out
xchg
jae
jno
mov
orb
pusha
scas
insl
fldt
push
fsqrt
or
push
iret
pusha
aad
adc
ja
xchg
imul
sbb
out
push
loop
cmpsb
icebp
arpl
das
inc
jle
cmp
xchg
xchg
cmp
inc
out
pop
ss
fcoms
lret
mov
add
pop
push
movsl
lods
lea
push
push
push
jmp
sub
arpl
rcrl
cli
xor
mov
cmp
or
fnstcw
add
loope
movl
ljmp
seto
jbe
mov
pop
movsl
sub
pop
push
loop
adc
lret
cmpsl
cmp
and
fldl
jl
push
mov
and
cs
fmull
lea
pop
sbb
mov
test
or
outsl
lahf
xor
xor
mov
dec
insl
dec
lea
sbb
loopne
push
xchg
aaa
pop
fwait
adc
je
lds
mov
repnz
jmp
or
inc
loop
and
mov
dec
outsl
xlat
push
cmp
icebp
fs
test
sbb
xor
test
push
sub
repnz
jmp
cld
mov
shrl
dec
dec
xchg
aam
int3
outsl
aaa
lods
leave
mov
xchg
sub
outsl
ret
xchg
adc
xchg
rorl
ret
jg
mov
sbb
mov
mov
jp
mov
sbb
mov
ss
push
ds
pusha
push
mov
cmp
push
sub
in
sar
mov
int
inc
pop
test
fsubrl
inc
cmp
dec
add
mov
je
jnp
int
mov
rcrl
popa
inc
imul
in
jmp
xor
xor
lret
hlt
xchg
xchg
out
push
call
push
xchg
test
push
pushf
lea
jno
shlb
mov
cmc
mov
sub
lea
mov
nop
mov
imul
pop
adc
push
xchg
leave
pop
push
add
push
je
cmp
push
inc
inc
pop
mov
test
or
bound
iret
je
aad
enter
outsl
jmp
jne
mov
xchg
pop
and
jae
repz
push
or
adc
dec
bound
stc
cmpl
imul
pop
xor
cmp
es
or
dec
test
in
stc
adc
arpl
rcl
mov
into
inc
add
or
aam
test
fdivs
jns
test
ret
js
mov
and
xchg
cwtl
and
sub
mov
xlat
add
sbb
push
cmc
mov
push
addr16
addb
pop
rclb
ljmp
mov
enter
add
mov
mov
gs
push
insl
shr
pop
cmc
dec
stos
pop
outsb
mov
or
mov
xorb
cltd
outsl
out
outsb
lock
insl
ss
fcomi
gs
adcb
fnstenv
in
push
aam
ret
cmp
mov
jns
inc
mov
icebp
outsb
mov
push
mov
addr16
xchg
push
popf
sub
lea
adc
inc
cmp
push
shrl
sbb
mov
fwait
pop
stos
adc
push
lcall
cmp
sbb
add
sub
mov
push
outsb
lcall
sub
loopne
ljmp
cs
adc
aaa
and
and
arpl
inc
into
cmpsl
test
mov
aam
rorb
jb
repz
mov
repnz
fidivrs
pop
out
fnstsw
stos
sbb
cld
mov
cmp
pusha
mov
mov
jg
inc
lret
clc
jg
pusha
or
dec
pop
xor
inc
dec
xor
sbb
add
insb
imul
push
push
sbb
mov
mov
and
push
pop
sarl
and
je
and
or
movsl
fcoms
pop
pop
insl
sbb
sbb
sti
mov
mov
roll
outsb
dec
xor
rol
adc
fiaddl
pop
leave
in
cltd
fidivl
aam
mov
shll
lods
push
inc
out
test
inc
dec
jae
cmpsb
mov
std
fisubrs
int
mov
jns
mov
mov
test
imul
pop
dec
lods
jp
scas
fwait
cmp
sub
inc
push
push
dec
jp
fdivr
dec
push
pop
bound
sbb
dec
or
push
pop
push
push
pop
call
lds
fcomps
xchg
popf
xor
fs
xchg
or
jge
cmp
iret
jne
and
push
adc
cmp
repz
rclb
mov
inc
repz
adc
call
xchg
mov
jo
imul
cltd
movsb
xorb
cmp
xchg
mov
out
test
adc
mov
mov
out
push
or
adc
fstp
bound
div
lcall
das
dec
and
pop
jmp
imul
xchg
mov
mov
addr16
xchg
xchg
jne
pop
sub
fwait
js
and
das
xor
push
cltd
xor
sahf
jb
mov
out
inc
inc
mov
push
lods
fsubl
mov
das
mov
lods
push
and
cld
push
out
iret
xchg
je
xor
mov
jecxz
rcrb
and
call
pop
lahf
fidivl
sti
adc
pop
or
andl
lea
loope
sbb
test
mov
xchg
mov
mov
push
popf
clc
fcom
xchg
lret
push
sarb
lret
or
mov
pop
bound
xchg
and
add
out
js
pop
sub
pop
mov
movsb
add
sbb
iret
stc
jle
add
cli
cld
dec
mov
dec
ror
cld
sbb
mov
push
cli
sahf
cmp
sub
ret
cwtl
lcall
test
imul
and
add
in
or
rorb
rol
aas
and
jmp
xchg
je
add
ds
inc
xlat
pop
xor
jmp
and
sahf
push
lds
push
adc
inc
nop
out
fsts
jl
xchg
xor
pop
xchg
inc
ja
in
cli
xor
jno
pusha
push
out
lea
lds
movups
push
dec
mov
jmp
xchg
pop
lock
pop
dec
loope
mulb
jnp
scas
outsl
cmp
cli
sarb
push
loop
pop
pusha
xchg
mov
push
sub
pop
ds
and
pop
lea
insl
leave
inc
sub
lods
push
loopne
add
divb
xchg
jb
unpckhps
fbstp
das
push
jmp
cltd
push
mov
mov
ret
mov
hlt
adc
insl
jg
xchg
das
cld
jp
stos
mov
int
jns
rcll
jmp
adc
movsl
hlt
in
adc
and
dec
jae
pop
enter
scas
mov
inc
sahf
push
sbb
out
dec
lret
inc
and
int3
jecxz
out
ret
add
xchg
mov
push
inc
xor
stc
shrl
jne
jo
jmp
fs
sahf
enter
push
or
popf
jmp
out
mov
push
push
lock
sbb
jmp
fld
imul
push
and
jo
es
dec
in
movsb
pop
fildll
sbb
mov
in
xor
lock
arpl
mov
add
push
jo
xor
stos
pop
es
and
xchg
add
mov
iret
inc
mov
loop
push
push
or
sti
cmp
loope
clc
push
scas
jnp
lret
arpl
or
insl
mov
aas
add
dec
stos
insl
pusha
iret
xchg
jmp
mov
lcall
mov
pop
adc
and
cmp
pop
mov
cmp
push
nop
loopne
xchg
repz
notb
ja
and
and
popf
jb
mov
inc
and
pusha
pop
or
sbb
divl
icebp
call
pop
adc
bound
cmp
and
ja
xchg
out
test
inc
lea
xor
out
cmp
mov
mov
pop
inc
lret
inc
jecxz
or
pop
mov
fwait
rcrl
xor
repz
scas
push
fstpt
je
inc
aaa
popf
fisttpll
pop
scas
lock
and
outsb
or
pusha
jo
adc
pop
das
cmp
and
xchg
addl
xchg
mov
mov
mov
pop
jno
sbb
and
loopne
cmpl
pusha
mov
idivb
add
imul
in
dec
pop
add
call
mov
mov
leave
push
push
insb
push
push
cltd
data16
mov
fldl
das
add
lods
int
int
pop
sbb
imul
adc
and
loope
xchg
sub
sub
les
repz
mov
insl
dec
push
outsl
fisubl
xor
or
call
push
testl
insl
icebp
pop
mov
push
xor
das
cli
mov
andl
stos
addl
inc
js
adc
popa
test
iret
mov
test
loope
or
loopne
or
inc
mov
or
jmp
jge
jmp
mov
sbb
cli
adc
push
adc
jle
pop
add
sbb
fbstp
lret
adc
loop
ds
adc
sub
jbe
xchg
dec
test
mov
fcompl
call
xchg
fwait
sub
fcmove
push
loop
dec
in
add
mov
push
cmp
movsb
jbe
add
cmp
lds
or
xchg
subl
mov
xchg
test
pop
jge
out
push
outsl
and
mov
or
repnz
xor
add
sbb
je
cmpsl
mov
and
jge
mov
cmp
gs
pop
ret
dec
adc
iret
icebp
jae
stc
sub
add
push
sbb
insl
inc
fistpll
lret
sbb
add
push
nop
xchg
movsb
cmc
xchg
mov
adc
push
add
lds
mov
add
mov
loop
ss
sub
outsl
or
imul
cmpsl
jp
je
xchg
pop
mov
incb
test
pop
mov
cmp
sub
xlat
std
pop
dec
jno
jg
add
movsl
out
and
mov
icebp
sub
pop
in
jbe
adc
pop
aam
sub
dec
mov
jb
sbb
cmpsl
fisubrs
jae
inc
pop
lahf
stos
mov
stc
jmp
mov
add
or
hlt
sub
xchg
test
xorb
mov
mov
cmp
pop
push
cs
int3
mov
or
push
xor
push
hlt
shrl
addr16
jge
adc
push
push
in
mov
std
dec
repnz
test
shlb
and
mov
sub
in
push
fwait
rcl
push
scas
aas
mov
xor
xlat
push
repnz
fimuls
dec
or
lock
ljmp
jge
cmpsb
and
outsb
roll
mov
icebp
insb
mov
xchg
cmp
fsubl
adc
fwait
ret
aas
ljmp
sbb
int3
mov
mov
inc
cmp
jle
mov
into
movsl
call
and
push
dec
xor
sarl
dec
lock
inc
jg
fidivs
inc
adc
bnd
call
and
sti
xchg
minps
jns
cmp
fsubrp
xor
pusha
xlat
cmp
xor
push
cmp
movsl
sti
xor
mov
push
cmpsl
dec
call
aaa
insl
ljmp
xorl
sti
in
or
jmp
negl
les
mov
mov
lea
push
scas
ss
push
icebp
add
and
test
iret
das
pop
sub
xchg
popf
xor
xchg
in
mov
shrl
repnz
shll
loopne
xchg
sbb
loop
push
ret
cmpb
cmp
mov
lods
and
sub
mov
mov
xchg
mov
cmp
aas
aam
adc
push
scas
leave
js
xor
in
jmp
lods
mov
xchg
xorl
insb
icebp
xor
subb
and
ret
insb
inc
fists
mov
lahf
cmp
in
fcom
ret
xor
out
pop
pop
shll
add
jno
das
or
xchg
mov
mov
cld
cmp
push
sub
call
push
jmp
xchg
jno
mov
ljmp
sbb
movsb
mov
mov
push
inc
repz
loop
or
cld
cmp
int
gs
add
nop
cmp
mov
stos
adc
fstl
in
enter
iret
aaa
in
mov
or
pop
sbb
pop
jmp
mov
push
inc
push
mov
jge
inc
pop
or
xchg
pmuludq
popf
adc
aas
out
rolb
fdivrp
dec
test
sub
xor
addr16
outsl
out
sbb
js
fwait
inc
stos
clc
jae
cmpb
int
pop
daa
xchg
dec
ss
shrl
xor
aam
pop
pop
popa
mov
hlt
jle
cld
xor
sub
test
call
fidivrs
bound
fsubrs
popa
mov
stos
xchg
mov
popf
in
fildl
mov
andb
ljmp
push
jne
or
test
and
loopne
pop
push
xor
mov
pop
cmovb
rolb
pop
push
sub
outsb
lea
xlat
xor
push
adc
and
fsts
pusha
and
sbbl
adc
scas
jle
inc
scas
pop
lds
aas
mov
lret
ljmp
push
or
sub
push
jle
jb
or
dec
lods
fdivrl
jmp
fs
inc
cmp
lods
sbb
out
fnstenv
cmp
pop
cmp
fiadds
xor
adc
mov
push
sub
cmp
les
in
jmp
cmpsl
into
jp
imul
stc
push
sbbb
adc
lea
mov
aam
and
and
xchg
push
insl
mov
outsl
sbb
aaa
dec
mov
imul
popa
jno
aam
ljmp
jp
adc
push
jmp
or
sbb
nop
sbbb
adc
mov
dec
pop
cli
daa
in
ds
jp
adc
mov
xchg
out
aad
push
cmp
cltd
lea
mov
push
and
jb
dec
lret
or
fldcw
stos
jbe
pop
sub
push
push
rclb
aaa
xchg
fwait
cli
or
adc
frstor
iret
aas
add
and
cmp
repnz
in
pop
pop
dec
cltd
outsl
jbe
mov
jo
jne
jae
addr16
jmp
call
es
pop
divb
pop
dec
fisttpll
mov
mov
mov
adc
jecxz
cmpsl
icebp
lea
cwtl
ret
inc
fists
pusha
dec
rolb
and
jo
mov
push
icebp
adc
push
negl
lods
cmp
or
adc
rorl
loop
aad
mov
push
xchg
xor
into
add
stos
fs
lds
mov
mov
sub
loop
js
jae
xor
out
pop
enter
push
cmp
sarl
add
jp
subl
loopne
jp
lret
sahf
lock
pushl
lcall
add
imul
cmp
pop
jne
mull
movsb
or
ljmp
jmp
std
cmc
xchg
in
push
orb
xchg
pop
sbb
xchg
rorl
aaa
scas
xlat
mov
icebp
xchg
pop
imul
pop
push
loope
and
test
pop
test
sbb
cmpsb
enter
mov
fstpt
sub
shr
or
ss
ret
xchg
fmull
inc
addr16
pop
iret
push
cli
shll
mov
dec
push
pop
mov
roll
mov
adc
shlb
mov
pop
movsb
dec
shlb
aam
std
mov
push
sbb
jle
nop
leave
fcoms
into
cmp
jmp
sbbl
ljmp
jno
pop
adcl
shr
scas
lock
sub
add
pushf
push
pop
fsubrl
addb
rcrl
push
lahf
imul
pop
out
xchg
lret
pop
iret
test
pop
and
ficoms
add
clc
stos
fyl2x
mov
sub
push
daa
xor
pop
cwtl
pop
mov
mov
jbe
jo
cmpsb
arpl
addl
aaa
fiadds
dec
mov
mov
shlb
addb
push
mov
out
lea
xor
test
inc
mov
add
add
cs
aad
push
xor
xchg
mov
dec
mov
repnz
lahf
sbb
pop
inc
in
push
in
mov
jae
add
push
adc
test
sahf
ret
mov
mov
mov
or
add
jg
inc
jmp
aam
into
xchg
int3
shlb
in
lds
popa
out
push
cmp
push
jo
inc
or
mov
pop
lret
or
inc
pop
xchg
cmp
int
daa
mov
lret
xor
xchg
in
loope
push
frstor
jno
mov
cmpsb
pop
outsb
adc
xor
mov
stc
iret
dec
cli
pop
mov
cs
pop
inc
sahf
out
and
repz
ss
sub
push
lea
nop
mov
push
and
mov
xchg
cwtl
in
fisubl
mov
lret
jle
pusha
movsb
pop
nop
push
mov
jbe
sub
mov
mov
or
addr16
xchg
dec
sbb
jg
decb
cwtl
je
cltd
loop
sahf
popa
dec
and
or
push
fistpl
scas
leave
and
pusha
dec
jbe
ds
and
inc
lods
fsub
dec
push
mov
adc
push
xchg
bound
arpl
leave
lods
stos
add
mov
push
sbb
jmp
cmp
jae
xchg
mov
mov
popa
mov
sahf
in
orl
sub
sbb
dec
pop
lea
mov
aas
lret
lea
jecxz
mov
loop
dec
mov
cmovns
int3
dec
pop
clc
inc
sub
lods
mov
clc
sar
cmpsl
or
ret
dec
enter
pop
mov
js
push
ret
sub
mov
jno
scas
cs
add
pushf
sbb
push
add
mov
dec
add
daa
out
loope
cwtl
in
lods
loope
jno
filds
add
xor
jnp
stos
mov
jns
outsb
dec
xchg
cld
inc
pop
movl
inc
inc
daa
hlt
pop
popa
cwtl
mov
mov
xor
test
fucomp
insl
movsl
jle
mov
repz
movsl
jno
iret
pop
cmovne
ss
mov
loopne
dec
popf
cmp
test
je
mov
mov
xor
xor
lret
mov
xor
inc
sub
bnd
adc
outsb
jg
jle
insl
cmp
in
cmp
cmp
call
loop
xor
popf
xchg
pop
test
jl
mov
sbb
int3
lods
sub
push
add
fidivl
andb
or
jnp
adc
in
adc
pop
testl
mov
sbb
cmp
cltd
lock
and
add
xor
xor
push
adc
cmp
je
aam
mov
mov
mov
mov
addr16
mov
pop
cmp
mov
pushf
lea
dec
test
lods
cld
adc
andl
sbb
movsb
mov
adc
mov
sti
inc
cmp
add
xlat
sub
sub
rorb
outsb
pop
cmpsl
pop
push
out
cwtl
mov
scas
or
fistl
mov
push
and
ds
scas
push
test
jge
inc
jge
sub
mov
sti
aam
scas
addr16
mov
std
imul
test
dec
sahf
out
rolb
stos
adc
jbe
xorl
dec
mov
fsubl
repnz
loope
push
dec
rclb
cltd
loope
sub
test
push
jae
or
in
rcl
mov
arpl
xor
cld
aaa
adc
mov
daa
xchg
out
hlt
std
aaa
pop
pop
scas
int3
arpl
test
add
lahf
adc
cmp
adc
pop
add
notl
fstl
int3
or
sahf
imul
pusha
or
popa
mov
das
int3
aam
fists
clc
shlb
ja
and
fistps
or
jne
lods
fistpl
mov
insl
ja
sbb
addr16
adc
ret
testb
mov
mov
lcall
lds
addps
push
and
repnz
mov
cmpsl
nop
add
mov
ret
push
in
mov
cli
mov
test
dec
das
sti
inc
bound
push
andb
shrb
jl
cmp
push
es
fs
and
and
repz
popa
aaa
outsb
mov
insl
mov
inc
movb
ret
inc
loop
sub
es
arpl
fisttps
call
pop
pop
ljmp
or
fnsave
mov
xchg
push
inc
inc
popf
or
lods
mov
ror
push
imul
movsl
cmpsl
push
adc
push
sub
iret
mov
enter
xlat
jmp
xorl
pushf
xor
cmp
xchg
aaa
mov
dec
cmp
pushf
sub
out
fxch
loopne
inc
gs
push
mov
mov
hlt
daa
in
jbe
test
int3
rolb
imulb
fwait
pop
ja
lcall
xor
pop
push
imulb
lds
aad
mov
jmp
rcll
mov
cmp
iret
repz
daa
add
cwtl
and
ss
mov
sub
pop
in
leave
es
sub
pusha
rcr
rcrl
insl
jno
test
mov
int3
sarl
pop
mov
cmpb
mov
cmp
insb
es
pop
jmp
mov
das
jl
movsb
in
cmp
adc
nop
mov
jmp
orl
push
cli
sub
dec
pop
pop
mov
rcll
out
jle
lock
pop
xor
xor
xorl
dec
push
sbb
mov
sti
pop
jge
jge
sti
add
pop
js
jg
inc
ljmp
sbb
shld
and
adc
add
inc
pop
add
xor
cmpsl
mov
xchg
stc
jnp
scas
push
push
mov
pop
xor
shrb
and
cmp
dec
pop
movsl
shlb
or
xor
movsb
cmp
push
push
bound
xor
xor
dec
bound
stc
movsl
cmp
gs
sbb
lock
cld
dec
in
loopne
orl
xchg
in
test
movsb
inc
pop
jne
cld
imul
mov
fwait
ss
ljmp
push
dec
push
divl
out
fwait
add
mov
or
and
push
sub
das
iret
es
icebp
je
repnz
fsubrp
jecxz
sbb
or
enter
mulb
data16
add
pmaddwd
insb
test
in
arpl
popf
lahf
bound
lahf
inc
std
sub
xchg
push
add
lcall
or
lret
ja
lea
inc
data16
mov
and
mov
repnz
aam
faddp
dec
test
into
jno
jl
repnz
in
into
push
xor
adc
or
mov
mov
nop
cs
cmpsl
in
nop
lods
mov
in
out
xor
inc
mov
cmp
shlb
sub
dec
sahf
mov
pop
pop
jnp
loopne
dec
pop
or
jecxz
dec
inc
jmp
fsubp
jmp
jae
insl
test
jge
lret
jmp
fcmovne
sarl
pop
push
in
or
mov
cli
lods
mov
das
xchg
xchg
xchg
mov
push
mov
mov
dec
adc
test
add
xor
dec
cmp
je
retw
push
aam
sti
cld
mov
mov
into
xchg
scas
xchg
inc
xchg
or
repz
loopne
cmpsb
mov
iret
or
rclb
xchg
mov
xchg
mov
push
lahf
call
aad
out
adc
pop
pop
hlt
icebp
loopne,pt
pusha
mov
adc
cmpsl
jp
and
mov
mov
shlb
pushf
icebp
testb
mov
pop
stc
testl
jle
pop
mov
enter
pop
cwtl
and
pop
push
fucomi
mov
cmp
test
outsl
rcrl
or
shl
jp
rcrl
inc
nop
inc
push
clc
iret
sti
rcrb
int
popf
das
dec
jecxz
xchg
adc
shrl
jmp
addl
lret
jns
cmp
push
add
and
dec
jnp
lret
in
imul
pop
cmp
aaa
add
push
mov
xchg
rcll
ljmp
xor
cmpb
cld
rol
mov
push
and
loopne
repz
rcrl
pusha
mov
jecxz
shrl
xchg
and
int
and
jbe
cmc
scas
cs
push
mov
in
icebp
mov
xchg
imull
scas
lea
mov
popw
or
insl
lds
int3
fsubrp
aas
mov
repz
cli
push
or
in
ret
test
inc
dec
aas
jo
cmpsb
cld
dec
daa
scas
les
test
fldcw
fcomp
or
mov
xor
pop
sub
sarl
pop
push
adc
repnz
rcrl
sub
outsb
xor
inc
add
push
popw
outsl
mov
das
dec
or
cmp
ja
int3
cmp
into
push
or
mov
dec
push
mov
cmp
aas
add
sub
ds
pop
gs
enter
ja
inc
sbbb
or
incb
sbb
cmpb
xor
sahf
lret
scas
dec
inc
xor
adc
lahf
xor
int3
in
ss
mov
add
loope
cmpl
fwait
mov
nop
jne
je
sti
jge
outsb
dec
push
mov
or
inc
lahf
arpl
inc
sbb
fisubl
in
cmpsb
rcr
shlb
sbb
mov
fcmovnu
movsl
sbb
jp
push
lock
push
pop
sarb
xchg
jbe
dec
mov
sbb
aad
mov
inc
pop
inc
lock
mov
call
xchg
sbb
fldt
out
mov
movsl
int3
fdivrp
mov
and
mov
push
jle
sub
std
imul
dec
cs
xchg
mov
xchg
cmp
add
adc
leave
addb
xchg
stos
ljmp
or
mov
ja
and
jo
scas
lahf
xchg
pop
cmp
push
imul
push
inc
js
jp
push
repnz
aad
outsb
xlat
xlat
pop
adc
in
ja
mov
xor
shlb
clc
lods
mov
in
sbb
jg
pop
inc
pop
mov
cs
mov
movsl
cld
test
rep
cmp
out
sbb
xor
andl
negb
hlt
mov
fiadds
popf
jno
sbb
dec
push
jae
push
rcl
or
mov
mov
cmc
push
in
inc
mov
ret
jmp
cmp
pop
sub
daa
xchg
adc
cmc
std
and
mov
sbb
sbb
jecxz
loope
sub
or
add
add
jne
mov
push
nop
pop
cltd
fs
push
insl
inc
xor
xchg
add
or
mov
test
out
smsw
add
inc
xchg
aaa
gs
addl
mov
nop
xlat
cmp
mov
push
daa
adc
adc
cmp
lods
jge
fwait
pusha
mov
xor
pop
and
in
xor
in
cmp
inc
lea
test
or
xor
lea
sbb
lcall
je
dec
shll
iret
jno
jge
testl
xchg
int
push
and
fnsave
ret
xchg
jmp
aas
cld
or
cmp
and
test
loope
push
pop
cwtl
rclb
push
dec
adc
ljmp
mov
clc
ss
mov
xor
adc
clc
jge
cld
add
andl
shll
es
jb
ret
dec
enter
sbb
out
cmp
out
and
xchg
bound
adc
sti
xchg
sbb
cmp
test
xchg
insb
frstor
addr16
loope
mov
pop
mov
ljmp
xchg
leave
into
mov
insb
or
iret
leave
dec
cs
pop
jb
sbb
xchg
cmp
push
pushf
addr16
jo
sbb
stos
adc
rcrb
cmp
mov
or
sahf
out
xor
mov
aas
repz
ret
jae
loope
and
adc
and
cmc
aad
loopne
out
in
jecxz
adc
test
shll
lcall
sahf
mov
fs
hlt
xor
xor
movsl
xor
sub
pop
sub
out
and
ljmp
sbb
aaa
push
sub
repnz
dec
loopne
ja
popf
lods
push
adc
mov
sbb
inc
mov
jl
add
or
lods
es
mov
gs
idivl
stos
or
pop
in
cmpsl
cwtl
sbb
aam
out
xchg
mov
insb
dec
inc
mov
or
mov
adc
dec
xor
inc
jge
and
pop
imul
mov
fs
lock
mov
ret
sbb
int3
jle
xchg
test
fdiv
sti
xchg
enter
add
pop
adc
inc
call
xchg
movsl
mov
icebp
and
loopne
arpl
subb
pusha
repnz
in
push
scas
mov
adc
rclb
jns
ret
jmp
ret
popf
or
jg
jmp
inc
jnp
mul
add
xlat
dec
out
int
inc
loop
out
cmp
adc
pop
fidivs
and
jp
jmp
xlat
pop
mov
pop
in
xor
inc
or
leave
cwtl
sbb
es
roll
fiaddl
imul
shll
es
inc
scas
sub
pop
std
popf
mov
daa
aas
data16
cmp
or
jmp
cmovbe
inc
mov
pop
and
adc
std
push
and
and
mov
push
dec
or
add
dec
dec
mov
shrb
inc
stos
mov
cs
and
mov
insl
dec
mov
xchg
sarl
inc
inc
sbb
pushf
bound
jle
pop
cwtl
sbb
pop
adc
lods
js
lahf
push
add
call
add
and
mov
fists
mov
pop
cld
cmc
and
cmp
scas
mov
add
and
jb
nop
lret
jp
loop
sub
lret
mov
mov
xchg
adc
js
ficoml
inc
stc
and
jle
xlat
jns
cmp
xchg
fisubrs
xrelease
jo
xor
mov
mov
or
inc
xchg
mov
repnz
aam
iret
add
ja
lret
je
mov
inc
pop
es
in
or
fadd
mov
cmp
dec
clc
inc
ds
xchg
mov
jecxz
jnp
insl
das
push
sub
push
aas
pop
add
mov
lock
sub
or
inc
enter
xchg
std
mov
rcr
xor
es
rcr
call
sub
sub
sbb
cmpsb
pop
aaa
mov
icebp
pop
inc
adc
and
dec
iret
shrl
jecxz
lcall
push
les
cld
adc
aad
outsl
pusha
inc
add
adc
dec
fidivrl
je
sbb
push
enter
shl
lret
inc
hlt
dec
cmpb
sub
lcall
cmp
stos
xchg
cmp
jle
push
fcmovbe
sbb
sbb
in
gs
fisubrs
add
jo
mov
pop
pop
xlat
cli
fists
mov
jno
add
mov
fmul
xor
adc
pop
in
mov
push
insl
enter
popf
daa
ret
mov
roll
cmp
jmp
andl
aas
stos
xor
or
ret
pop
movsb
xchg
dec
adc
pop
push
adc
mov
je
loopne
aam
ss
movsb
mov
mov
push
lods
cmp
cltd
pop
pop
pop
or
cmp
fmull
inc
and
jns
mov
sarl
xchg
mov
mov
aam
dec
xlat
test
stos
in
cs
push
in
mov
jae
xchg
insl
or
and
xchg
test
call
sbb
in
push
cmpsl
cmp
lcall
mov
in
push
push
jne
rcr
test
mov
mov
dec
dec
adc
push
shll
inc
xor
inc
int3
sbb
fstpl
cmp
mov
ficoms
popf
push
lds
xor
or
repnz
add
mov
push
inc
lds
out
ja
inc
scas
mov
push
mov
cli
stc
out
and
and
ret
or
loop
jnp
mov
fwait
cli
jne
test
ret
mov
xlat
cltd
movsl
shrb
inc
pushf
and
cmp
loope
mov
inc
lds
pop
lea
mov
push
enter
ljmp
aaa
std
scas
je
sahf
pop
add
and
repnz
sahf
push
lods
stos
insl
lds
roll
rclb
adc
jl
adc
in
je
rcrl
add
shll
xor
pop
mov
mov
test
or
loopne
pop
lahf
mov
inc
subb
fs
push
fdivrp
push
orl
mov
sub
fwait
daa
shl
jno
je
cmc
pop
pop
loopne
xor
cmpsb
push
cmp
or
xchg
sub
cmp
repnz
mov
jl
or
shlb
fdivrl
ljmp
pop
int
jo
lods
add
js
cmp
pushf
mov
or
push
and
sub
sub
or
aaa
scas
mov
mov
lahf
out
push
imul
imul
sti
test
push
xchg
jns
and
shrl
in
dec
ret
mov
dec
pop
mov
cld
mov
movsl
xor
jae
xlat
push
scas
cmp
mov
add
mov
rcl
push
adc
stos
ja
inc
sub
in
clc
mov
popf
adc
scas
call
sbb
out
addb
ret
repz
lcall
or
sti
xor
sub
pop
clc
xchg
daa
cmp
rorb
xchg
fmuls
lcall
and
sub
mov
mov
push
into
adc
cwtl
dec
shll
pusha
xchg
pop
aad
sbb
inc
adc
mov
test
sbb
push
mov
cmpl
mov
mov
cli
test
out
and
notb
xor
fwait
dec
and
outsb
aam
mov
loope
aad
das
test
dec
and
fisubrs
test
adc
rolb
mov
repz
cs
roll
cmc
mov
icebp
adc
mov
push
pop
xchg
shll
negb
test
lock
fwait
jge
movsb
adc
adc
xchg
lahf
push
add
gs
push
add
clc
cs
aaa
insb
movsb
mov
das
xchg
lahf
scas
jbe
mov
mov
mov
decb
cwtl
and
cwtl
add
or
mov
ljmp
xor
test
jbe
lods
mov
insl
xchg
pop
subb
es
scas
rclb
xor
out
add
imul
fdiv
test
cs
fistl
mov
xchg
movsb
jbe
adc
sbb
sub
sub
stos
pop
add
xchg
dec
and
mov
and
mov
arpl
lcall
mov
jns
cwtl
mov
or
call
sbb
jne
out
cs
insl
sub
js
addr16
mov
sbb
leave
xor
jns
lods
xchg
jo
jo
sbb
jmp
jp
arpl
jle
loope
sub
clc
inc
lock
in
mov
je
iret
xor
pcmpgtb
imul
mov
xor
inc
call
inc
xor
cwtl
gs
ds
subb
in
push
jl
push
pushf
mov
push
lret
sbbl
leave
adc
sbb
push
int3
lods
dec
shll
lret
mov
lahf
hlt
sub
push
mov
or
ja
add
adc
jb
mov
bound
imul
movsb
orl
popf
stos
cmpb
jae
mov
cld
jb
sub
and
sub
xchg
sub
outsb
push
pop
sbb
pop
popf
roll
imul
test
lcall
jecxz
fstl
push
push
ss
push
jmp
scas
adc
mov
jbe
push
pop
xor
fwait
popa
or
popl
aaa
and
sahf
repz
jg
lods
notl
loop
mov
imul
push
or
add
insl
jno
aad
or
push
jnp
cmpsl
scas
mov
fwait
sbb
sbb
mov
shl
jne
sub
repnz
fcoms
push
cwtl
sbb
stc
and
push
mov
fidivrs
cmp
std
pop
stos
insl
jno
aam
cli
js
repnz
inc
shrl
jle
aaa
movsl
inc
push
lahf
push
je,pn
mov
mov
int
loop
ffreep
inc
xor
sarl
mov
ja
bound
sti
into
les
add
loope
xor
std
adc
xchg
xor
imul
sbb
lds
and
frstor
xchg
divl
sbb
cmp
gs
sub
int3
cwtl
arpl
push
and
sub
dec
xor
push
call
pushf
inc
inc
xchg
stos
jle
movb
cmp
fistl
xchg
sahf
sbb
jae
int
out
push
loopne
push
push
lret
out
mov
out
hlt
mov
rcrl
aad
ss
ret
pop
dec
fimull
mov
sbb
xor
or
jnp
stos
sbb
test
xorb
imul
stos
xor
adc
popl
cmp
cli
push
sti
cmp
mov
push
lea
gs
incl
sub
and
dec
pop
xor
and
test
dec
aas
xlat
jp
daa
mov
pop
aaa
ljmp
sub
sahf
lcall
jp
ret
cmp
dec
add
xchg
push
push
ja
add
gs
sbb
fnsave
sahf
pop
and
lea
movsl
cmp
fcmovb
adc
pop
mov
dec
in
cmpsl
mov
push
inc
push
ljmp
mov
nop
in
dec
into
cmp
push
mov
xchg
nop
cmp
jmp
jecxz
mov
push
xlat
aad
scas
iret
in
repz
fmul
push
stos
dec
or
mov
inc
pop
roll
aaa
sbb
mov
movsl
jae
xchg
les
mov
xchg
fdivs
mov
jl
xchg
cmp
push
xor
das
je
rcll
je
sahf
enter
daa
fdivrs
dec
bnd
pop
xchg
sub
cli
jns
loope
jecxz
movsb
ret
xchg
cmp
pop
and
inc
sbb
fisubl
je
stos
xor
or
sub
and
push
fwait
ret
mov
cli
fildl
fisttps
arpl
cli
dec
push
lret
inc
sbb
pop
cmpsb
inc
imul
cli
rcrb
add
sub
push
fstpl
notl
mov
lods
adc
sarb
aaa
push
test
cmp
iret
fs
loopne
push
leave
cmpsb
hlt
jns
outsl
add
lahf
or
repnz
pop
lods
js
jne
lahf
pop
repz
rorl
test
decl
or
pop
fsubr
enter
in
jp
dec
xchg
ja
lods
cmpsl
cmp
inc
aad
sahf
repz
pop
inc
es
call
mov
repz
ljmp
sahf
xchg
test
fisubs
push
add
cmc
scas
inc
lret
outsb
lret
mov
div
mov
push
ljmp
mov
jno
cmc
movsl
sbb
jb
cld
add
ret
and
mov
fimuls
insb
movlhps
lods
mov
shl
mov
fistpl
pop
loopne
mov
adcb
mov
add
mov
mov
mov
cmp
call
clc
xor
mov
pop
jns
out
aas
fadds
sub
mov
jns
add
lods
imul
mov
xor
sbb
mov
mov
jl
jo
mov
fisubrs
pop
cmp
leave
js
and
add
jmp
mov
cli
sbb
and
fs
fcompl
cs
push
aas
pop
mov
loopne
push
movsb
int3
push
push
xchg
in
iret
shl
push
movsl
pop
scas
sti
mov
xchg
loopne
adc
pop
lds
cmpsl
gs
cli
mov
les
push
cpuid
xchg
das
and
es
jp
sbb
and
iret
pop
sub
and
adc
and
lcall
adc
int
popa
or
sbb
lods
xchg
insl
pop
das
jmp
inc
ss
mov
fists
rolb
sub
adc
mov
xlat
push
push
inc
pop
fnsave
fst
push
mov
cmp
xor
ljmp
sbb
push
and
xor
cmpsb
pop
gs
mov
leave
imul
sbb
pushf
cmp
push
sub
ret
out
xor
xchg
cmp
int3
sub
push
jp
sbb
pop
pop
insl
lock
and
sarl
sub
dec
cmp
outsl
push
pop
sbb
push
addr16
into
orl
mov
loop
fs
ret
push
cli
or
push
out
in
xor
aam
testl
dec
mov
lret
les
jne
repnz
ds
lock
rcrl
pusha
lcall
dec
sarl
shrl
pushf
pushf
ss
fucomip
mov
shrb
sbb
pop
repnz
xor
adc
rcrb
push
jg
lret
add
add
mov
in
dec
sub
fdivrl
movsb
jp
push
int3
sbb
xchg
inc
mov
popf
pop
jae
aad
pop
add
jbe
mov
inc
add
inc
push
push
and
mov
fdivrp
in
in
adc
mov
inc
and
es
and
popa
rcll
popa
clc
pushf
out
xorl
and
inc
adc
daa
int3
cmovp
repnz
jbe
pop
loop
ds
fildll
push
ret
dec
repz
addb
jns
push
arpl
cmp
cld
jp
enter
pop
das
xor
jle
mov
mov
das
repz
scas
xor
inc
dec
test
out
fstpl
and
pop
cltd
lods
sbb
mov
mov
shll
in
push
mov
in
movl
loope
inc
push
rorb
iret
out
bound
insb
cld
xor
popa
jmp
sbbb
shll
dec
mov
mov
enter
mov
ret
movsl
sahf
enter
sbb
sub
fsubrl
push
dec
mov
push
pop
aam
scas
add
push
call
lds
jmp
ret
icebp
or
imul
out
cld
in
sub
pop
push
shll
xor
mov
out
add
dec
push
cmp
jecxz
dec
mov
or
test
cmp
jbe
hlt
sbb
fs
es
mov
push
sub
shrl
sbb
mov
push
sbb
mov
lds
jns
outsb
mov
aas
scas
flds
mov
jno
les
lea
push
mov
sbb
mov
icebp
jle
sub
cmp
sbb
fistpll
rcll
cmp
cmpb
add
xor
insl
push
mov
mov
fcmovnb
mov
pop
sti
les
lea
inc
cmpsl
out
and
pop
push
scas
mov
jns
popl
lds
mov
inc
add
dec
mov
push
push
xchg
mov
dec
lret
sbb
add
mov
and
mov
push
hlt
push
lods
mov
mov
mov
lea
js
iret
add
cmp
push
pop
addr16
nop
jns
xor
pop
ss
xchg
stos
mov
fcoms
mov
imul
sahf
push
lock
mov
jbe
pop
push
aas
or
push
out
ljmp
mov
sub
pop
or
and
test
mov
jg
pop
rcr
inc
mov
in
inc
inc
test
clc
mov
mov
popa
test
icebp
das
test
cld
and
mov
cld
pop
xor
xchg
arpl
sub
leave
ss
ret
jg
push
daa
fwait
sbb
popa
dec
cmp
dec
sarb
push
in
repnz
mov
sti
xor
sbb
and
xor
out
adc
mov
fs
cmpsb
push
out
mov
inc
in
div
pusha
dec
adc
jg
sbb
imul
mov
lods
in
dec
jg
pop
shrl
ja
loop
cmpsl
mull
imul
fdivrl
mov
out
rorl
clc
sbbl
and
xchg
cmp
rolb
aad
sub
outsb
into
adc
inc
fistps
gs
cmp
fidivl
and
ja
bound
test
fbstp
jae
and
icebp
jp
xor
fchs
xchg
fwait
adc
sti
int
in
mov
xchg
jmp
add
mov
mov
dec
stos
mov
cmp
xchg
inc
in
cmpsb
adc
mov
mov
mov
bound
push
add
and
stos
jb
push
xor
or
mov
add
sbb
dec
xchg
ljmp
push
cmc
xchg
ret
pop
fsubs
fisubl
mov
cmp
push
jmp
push
into
dec
test
cmp
adc
sub
xchg
lock
and
adc
fwait
negl
test
popa
jnp
adc
ds
ret
jp
sub
and
cmc
fsubrp
ficoml
mov
jp
int3
clc
sbb
jmp
mov
sub
push
mov
mov
outsb
dec
adc
sahf
push
pop
dec
xor
fs
pop
ret
jns
jmp
out
xor
xor
or
and
mov
pop
ss
and
mov
add
xchg
adc
jge
fimuls
pushf
scas
imul
imul
and
or
cs
cmp
cmp
jns
adc
cld
cmpsl
mov
xlat
mov
mov
and
shl
and
xor
mov
mov
sub
sbb
pop
cmp
or
push
pusha
aas
fbld
xchg
fsub
into
push
out
add
shlw
cld
push
fildll
adc
push
mov
inc
pop
mov
push
test
scas
out
jg
bound
pop
inc
gs
mov
lret
scas
push
cmp
push
sub
xlat
out
sbb
cltd
jge
dec
inc
ret
loope
fiadds
mov
jp
js
inc
cmp
repz
repnz
and
or
jae
push
into
lret
jbe
mov
icebp
xor
mov
push
repz
mov
daa
xlat
mov
adc
and
xchg
add
test
pop
in
inc
ret
aad
add
inc
lods
xchg
jecxz
sbb
add
fs
mov
rclb
leave
jl
add
dec
rcr
inc
aas
mov
xchg
cmp
test
mov
or
pop
xor
in
jbe
pop
scas
dec
gs
js
jg
mov
insb
out
push
jnp
repz
fcomi
xchg
adc
mov
out
cmp
mov
jecxz
out
lahf
fcmovb
mov
lret
inc
imul
arpl
scas
pop
sub
aaa
mov
jl
jns
jmp
test
push
lret
loopne
or
mov
add
aaa
shlb
push
cmp
cmp
dec
xchg
lret
dec
cmp
les
addr16
data16
xor
ret
sbb
leave
mov
test
call
add
vpslld
push
xor
jo
inc
adc
dec
add
lods
insb
sub
push
int3
fidivrl
cltd
js
shlb
sbb
ret
inc
rclb
and
pop
xchg
xchg
aad
pop
imul
add
std
lret
cmp
mov
in
notb
fldl2t
ds
movsl
pop
inc
je
xor
sub
mov
adc
cmpsb
pop
jle
mov
shrb
lods
flds
jnp
jae
cld
mov
sarl
enter
sub
jmp
dec
mov
aad
dec
mov
and
inc
and
sahf
insl
sub
jo
and
hlt
cmp
test
clc
and
sbb
jge
and
xor
ret
imul
cwtl
lea
xchg
sbb
mov
call
mov
sub
xor
xchg
dec
stos
xchg
repnz
dec
mov
lret
sbb
jmp
lcall
es
mov
movsl
mov
mov
or
pop
out
arpl
push
mov
jne
jno
int3
bnd
mov
xor
shlb
pop
mov
insb
out
iret
pop
ja
aas
fisubrl
and
cmc
and
aam
xor
repnz
and
addl
sbb
aam
xchg
sub
or
lods
pop
jmp
jg
add
in
inc
xchg
xor
jp,pt
sub
inc
shrl
loop
adc
pusha
xchg
adc
push
cmpsb
push
sysret
fucomi
loop
or
insl
into
mov
adc
mov
pop
das
or
fs
outsl
std
hlt
out
scas
xor
cli
mov
aad
and
jg
mov
stc
imul
aaa
or
sub
mov
rcrb
cli
in
lods
mov
lea
movsl
data16
insl
cmp
sub
loopne
mov
rorb
aam
mov
or
arpl
and
pop
cmp
lcall
push
in
sub
or
outsb
adc
fcomip
add
mov
out
leave
xchg
test
imul
fidivl
push
xchg
xchg
cmc
dec
push
push
sub
aad
stc
pusha
xlat
lds
je
pop
call
adc
or
cmp
dec
sahf
adcl
dec
jecxz
cmp
stos
cmp
and
jle
pop
adc
or
or
movsl
add
ret
dec
xlat
xor
int
popf
add
test
and
fmuls
enter
mov
push
rcrl
xor
hlt
mov
stos
repz
dec
xor
mov
ret
push
insl
aaa
loope
mov
popa
fcomi
cmc
aaa
adc
xchg
and
xor
outsb
fnsave
cs
cmpsb
adc
in
aam
jmp
ret
push
push
push
subl
iret
sbb
jo
mov
pop
push
repnz
shll
sub
push
jmp
hlt
stc
lds
aam
pop
repnz
xchg
push
mov
imulb
push
stos
dec
and
dec
popl
imul
movsb
push
inc
pusha
adcl
pusha
incl
jbe
mov
push
xor
insl
mov
aam
sbb
sbb
insl
fbstp
rcrl
ljmp
mov
pop
rol
aas
cltd
in
je
pop
jle
mov
ss
jb
in
pushf
cmp
cmp
aad
and
sbb
push
iret
pop
jbe
outsb
xchg
pop
popf
mov
subl
adc
push
push
ljmp
sbbb
scas
and
push
clc
and
aam
pop
push
andb
jnp
insb
sbb
or
test
jmp
push
jo
dec
xchg
int
outsb
and
jne
jecxz
ret
cmp
or
iret
mov
push
push
pop
adc
decb
aaa
sbb
sbb
mov
loope
dec
add
xlat
icebp
icebp
ret
sti
mov
add
jae
sub
sub
add
sbb
mov
stc
decl
and
lahf
popf
xchg
cmp
mov
fstpl
lret
push
lods
dec
loope
fwait
mov
stc
jnp
call
dec
cmp
xor
cmp
cmc
loopne
dec
push
pop
es
cmp
and
repnz
add
popa
loop
push
test
cmc
fisubs
and
aas
mov
lock
inc
ljmp
lret
pop
xchg
sbb
dec
dec
mov
sub
loop
nop
xchg
mov
mov
pop
mov
push
sahf
shl
push
lock
add
jnp
cltd
mov
test
xor
movsb
cmp
test
pop
cwtl
xor
sbb
mov
lea
add
pusha
or
sub
lcall
mov
jo
dec
iret
jmp
adc
cmp
out
or
movsl
mov
scas
add
aas
or
push
shlb
cmp
and
xor
leave
lds
adc
js
dec
ljmp
inc
pushf
mov
enter
mov
rol
and
div
inc
mov
push
data16
add
outsb
dec
dec
xchg
inc
js
fwait
xor
mov
ja
adc
test
fwait
lret
pop
sti
cmc
pusha
mov
cmp
and
and
rorl
jno
sub
in
in
jg
int3
or
jo
pop
imul
xchg
ljmp
in
cs
dec
xchg
xchg
sbb
mov
das
leave
push
mov
out
outsl
stos
shlb
xchg
icebp
pop
mov
sub
pusha
fsubrs
ror
cmp
push
push
cld
sbb
xor
xchg
push
sub
out
sbb
cmp
mov
fdivp
std
push
sbb
sub
lcall
and
es
in
daa
inc
int3
and
pop
mov
mov
xor
dec
sbb
xor
or
test
in
cmp
mov
insl
movsl
pop
roll
insl
lock
xchg
pop
sbb
incb
sub
sbb
int
sub
ret
push
push
pop
xor
fs
fdivs
aaa
lock
out
ljmp
and
sbb
jo,pn
ss
jne
nop
ja
lods
clc
test
cmc
dec
mov
mov
orl
lock
jo
int
mov
das
cwtl
divl
bound
sahf
xchg
lods
mov
dec
stc
jg
inc
push
into
mov
call
outsl
ss
pusha
xor
enter
mov
push
mov
and
fisttpl
in
adc
fcoml
mov
mov
add
cli
jecxz
xchg
and
stos
frstor
and
fisubs
icebp
test
sti
inc
xchg
sbb
movsl
and
dec
mov
jg
mov
je
jp
hlt
adc
xor
adc
bound
adc
cmpb
rcl
and
leave
leave
call
mov
or
in
inc
or
imul
in
xor
mov
insl
mov
popa
cmpsl
aas
leave
aas
push
ret
jo
call
push
mov
inc
mov
clc
sar
adc
das
xor
or
scas
mov
aam
sbb
movsb
jae
jmp
inc
ret
repnz
rcl
sub
int3
jecxz
mov
sti
and
cmp
pop
dec
nop
push
jmp
inc
mov
lret
mov
sbb
stos
inc
cmp
pusha
enter
and
inc
jae
sub
aad
jo
sub
mov
into
cmp
call
lods
sub
dec
sbb
cmp
or
js
les
out
adc
push
mov
pop
cmp
cmp
sbb
dec
movsl
clc
mov
aaa
cltd
push
popf
cmpb
cmp
mov
sub
outsl
insb
fimuls
mov
cmc
inc
xchg
mov
dec
jae
loopne
pop
or
xor
imul
pop
push
fs
test
add
test
decb
add
and
data16
cmp
ficoms
xchg
aad
nop
mov
push
movsb
adc
cmc
push
or
push
lret
inc
fwait
push
xor
imull
or
sbb
es
cs
bound
pop
shr
jbe
scas
test
cmpsl
rolb
add
pop
inc
dec
xchg
pop
xchg
out
jno
add
gs
add
and
xor
inc
cwtl
out
jl
jnp
ret
jecxz
adc
or
mov
or
adc
int3
push
sub
pop
ss
imul
xor
sbb
leave
add
inc
push
cmp
jbe
push
cltd
lcall
mov
push
jne
jne
ljmp
mov
into
out
cmp
mov
xor
outsb
into
add
inc
mov
test
lret
aas
pop
lret
sahf
sbb
jbe
inc
inc
inc
push
scas
sbb
inc
cmp
stos
addr16
pop
mov
pop
mov
sbb
aas
xorb
out
leave
xlat
mov
mov
fwait
pop
mov
pop
cli
jge
jmp
in
push
push
icebp
std
lret
pop
mov
mov
out
inc
or
mov
lds
les
repz
popa
out
or
dec
scas
fsts
ss
jmp
loope
ret
jns
mov
push
test
dec
test
aas
jge
or
adc
ja
inc
out
jno
sub
cmc
add
test
mov
out
cld
cmc
inc
push
lods
push
cltd
jns
dec
pop
mov
and
xor
inc
mov
or
xchg
pop
arpl
sub
mov
inc
jns
test
inc
std
stos
adc
testb
mov
xor
xor
mov
fs
cmp
fidivrs
mov
loopne
pushf
aaa
inc
in
pop
adc
lds
jb
mov
inc
xchg
pop
push
pop
cltd
cmp
mov
pop
push
inc
fcomps
jnp
jmp
and
stc
cmc
dec
lea
mov
call
pop
cmpl
lcall
and
shrl
mov
jo
cmp
or
cmp
mov
sub
and
jmp
fildll
jge
xchg
repz
out
sar
push
test
ss
cmp
rorb
mov
push
adc
jmp
inc
xor
jge
cli
leave
movsl
fbld
mov
cmp
sbb
or
sub
mov
mov
test
sub
push
into
pushf
and
repnz
inc
jg
lods
cli
sbb
ljmp
bound
movsl
add
iret
les
mov
jmp
and
sub
inc
shl
and
mov
push
jle
cwtl
mov
jb
push
jno
loop
mov
jge
out
jge
add
and
ja
add
push
shl
jae
dec
sarl
inc
xchg
add
cs
inc
push
jno
push
das
je
repnz
pushf
fs
popf
lock
jne
sahf
inc
mov
adcl
dec
test
ljmp
and
nop
and
stos
xchg
jbe
repz
inc
sbb
mov
xchg
rcl
push
out
mov
js
fcomps
test
iret
xchg
out
sbb
cmp
cmpsl
imul
rolb
and
test
cmp
loop
lcall
test
pop
into
jns
or
push
inc
sub
in
inc
dec
sti
cmpsb
mull
and
in
xor
dec
cmp
mov
mov
ljmp
sbb
jg
inc
test
add
jmp
jae
adc
into
sub
testb
xchg
xor
fldenv
push
jno
imul
pop
mov
dec
subl
xchg
pop
push
call
insb
mov
pop
cmp
addl
adc
xchg
scas
jo
jo
aad
int3
out
xlat
jne
sbb
pop
jae
inc
cmpsl
jge
jp
enter
push
popa
cltd
xchg
outsl
pop
mov
cmp
xor
or
popa
adc
std
inc
pop
mov
jge
mov
xchg
loop
stos
and
mov
movsb
std
cmp
inc
cwtl
loop
sbb
pop
inc
out
in
mov
jmp
orl
add
push
mov
shll
jg
xchg
sbb
xor
in
sbb
pop
es
jne
dec
mov
push
cltd
sti
cmp
es
mov
gs
ror
sahf
mov
loop
mov
ret
xchg
popf
or
rcr
pop
add
adc
mov
ss
fstp
pop
stos
stc
insb
mov
cs
dec
daa
xlat
jmp
adc
outsl
mull
adc
sbb
push
sub
add
bt
mov
pop
fimull
daa
mov
adc
push
pop
fisubl
push
pop
cmpsb
popl
dec
pop
outsb
mov
ja
push
cmp
aas
mov
jmp
popa
ja
jns
clc
fwait
mov
test
ret
pop
adc
dec
shl
sbbl
insl
cmp
push
bound
and
pop
xor
mov
adc
push
jle
clc
cld
add
in
jle
xlat
sub
mov
push
or
mov
jo
lahf
dec
dec
clc
mov
dec
in
or
sub
or
jne
sar
mov
pusha
xchg
jno
cli
or
roll
ja
cwtl
loope
pop
inc
mov
xchg
out
sub
dec
shr
dec
aad
sbb
xor
mov
or
mov
jg
nop
pop
sub
jecxz
out
push
xchg
outsb
in
test
fcompl
cmp
xor
arpl
outsl
lahf
mov
addr16
loope
cmpsb
xchg
outsb
cmc
or
adc
inc
sti
enter
push
repz
mov
push
fildl
arpl
sahf
enter
mov
jnp
mov
inc
mov
cli
bound
adc
sbb
cwtl
movsb
pop
lret
loopne
jbe
adc
clc
lods
adc
mov
shrl
push
int3
pop
push
in
popa
das
iret
xor
rcll
icebp
mov
xchg
pop
in
mov
lahf
mov
mov
jle
ss
iret
fwait
rcr
pop
clc
or
cld
mov
mov
sbb
mov
lods
outsb
jmp
sub
jb
enter
in
mov
mov
lods
fimuls
add
mov
lahf
mov
fsubl
sarb
loope
xor
into
outsl
push
xchg
mov
and
into
icebp
sub
stos
movsb
shl
movsb
fistl
cmp
adc
jne
out
mov
int3
insb
pushf
fbld
dec
and
sub
popa
orb
test
shll
push
inc
out
call
pop
mov
andb
pop
and
popf
stos
or
pop
aas
lods
popf
inc
xor
outsl
lods
add
cmc
sub
mov
cli
adcl
icebp
lret
lcall
loope
cmpsb
shll
cmp
jmp
aad
adc
cmp
iret
or
push
repz
cli
push
nop
xchg
and
dec
inc
mov
push
dec
and
sbb
dec
fs
je
test
inc
cmpsb
xchg
out
stc
outsl
and
cmp
in
cmp
jle
mov
jns
add
mov
push
int3
arpl
aam
sbb
cmpsb
notl
mov
fwait
cmp
dec
and
in
adc
enter
sbb
mov
cltd
mov
pop
sub
push
out
push
pop
icebp
imul
add
arpl
xlat
iret
mov
push
divl
jnp
test
sub
sub
mov
mov
jp
adc
mov
rolb
ret
call
xchg
and
sbb
in
lahf
mov
mov
xchg
data16
pop
jecxz
pop
jp
mov
arpl
mov
jle
test
adc
das
xchg
jge
insl
or
lret
adc
jo
sub
xchg
fcoms
or
flds
jp
mov
imul
push
mov
adc
in
adc
xchg
dec
dec
movsl
adc
jae
ja
test
addr16
jmp
aas
sbb
push
push
mov
mov
outsl
mov
mov
rolb
pop
sub
std
pop
add
int3
pop
imul
pop
pop
arpl
inc
les
fstpt
adc
xchg
push
jecxz
pop
xchg
adc
xlat
scas
in
jle
jp
orl
cmp
push
fwait
mov
sbb
fistl
arpl
mov
icebp
mov
pop
mov
adc
in
add
sbb
pop
fldl
jno
mov
stos
xor
popl
ja
imul
stos
xchg
lock
das
js
dec
push
jl
jg
push
cltd
jne
push
push
jl
xchg
aas
xchg
xor
jb
ljmpw
insl
pop
in
insl
mov
and
mov
sar
inc
lret
sbb
mov
scas
mov
pop
and
ret
mov
push
lret
cmc
sub
in
ret
and
int
or
jne
push
or
push
pop
mov
xchg
addr16
pop
out
mov
sub
add
loop
or
xor
movb
jno
push
ja
mov
pop
shll
cmp
in
cltd
popf
mov
jae
push
ss
fstp
jle
push
xor
fdivrs
lret
daa
gs
in
mov
jmp
add
pop
xor
jb
mov
pop
cmpb
andb
jbe
push
mov
add
aaa
mov
adc
xchg
push
popa
call
aas
push
dec
push
movsb
cmp
std
pcmpgtw
adc
movsl
movsb
pop
jno
icebp
dec
sub
outsl
movsl
andl
dec
test
lgs
scas
ret
fs
cmp
mov
in
fiaddl
add
mov
lds
push
and
inc
mov
pop
pop
adc
or
into
cltd
in
sbb
loope
mov
push
add
pop
icebp
in
les
mov
and
push
mov
outsl
repz
fildl
scas
push
mov
stos
sub
jg
mov
stc
cmovb
rcrb
enter
fwait
jg
out
pcmpeqw
mov
inc
hlt
aam
out
push
ljmp
popa
sub
mov
int
mov
inc
arpl
mov
jno
jae
lahf
inc
fldcw
lock
jg
sub
int
xor
inc
fsubl
insl
xchg
call
and
or
pop
test
adc
movsl
inc
push
push
xchg
jecxz
push
out
mov
xor
cmp
mov
into
pop
cmp
cwtl
test
fidivrl
iret
cmp
cmc
addr16
stos
dec
push
mov
add
adc
pop
imul
in
and
in
out
outsb
push
or
jnp
out
test
sbb
pop
mov
jmp
push
inc
cld
pop
and
mov
sbb
jbe
xchg
test
add
loope
mov
cmp
stc
or
roll
mulb
pop
sub
xchg
leave
les
xchg
inc
add
test
add
orl
loop
fimuls
popf
into
mov
or
xor
jl
lcall
push
push
test
stc
xchg
fucomip
loope
pop
mov
insb
pop
sbbb
xchg
cmpsl
dec
stos
cli
loopne
pop
test
sahf
ret
std
push
test
sub
mov
sbb
test
ljmp
pop
pushf
and
gs
push
adc
ds
add
les
jns
lahf
daa
aad
push
sbb
adc
lea
xchg
push
fidivrl
or
or
xchg
pushf
imulb
cs
flds
sahf
dec
push
pop
dec
add
les
adc
sbb
sbb
fwait
cs
mov
imul
in
push
or
sbb
aaa
ljmp
adc
stos
daa
lret
imulb
cmp
sub
push
icebp
sub
outsb
dec
out
fnstcw
adc
mov
mov
in
loop
cli
pop
mov
popf
mov
rcr
push
cmp
ficoml
cld
mov
add
add
loope
dec
mov
cwtl
cmp
sbb
clc
mov
jle
jmp
outsb
jne
dec
push
add
aam
pop
inc
stc
inc
iret
push
sbb
je
sarl
mov
movsb
imul
xor
inc
pop
mov
int
call
scas
test
mov
pushf
push
inc
pusha
outsb
mov
lret
inc
lret
xor
rorb
insl
in
mov
enter
add
sbb
mov
loope
cmpsl
inc
xor
sbb
mov
xchg
inc
outsb
sub
adcl
dec
data16
dec
pop
es
add
cmp
popa
cmp
mov
cmp
or
stos
ret
mov
mov
mov
daa
pushf
fisttps
cli
cmovs
add
iret
test
push
sbb
scas
stos
mov
xchg
icebp
push
cmp
sahf
mov
dec
add
cmpsl
in
and
pop
repnz
xor
jg
outsl
lods
inc
stc
inc
push
into
or
pop
sub
mov
out
repnz
mov
lods
inc
fdiv
inc
lret
mov
xor
mov
jmp
ficoml
orb
cmp
cmc
popa
fstpt
leave
inc
pop
sti
jbe
int
xchg
les
push
popa
inc
pop
add
shrl
daa
mov
push
cli
xchg
movsb
loop
mov
add
into
andnps
daa
mov
out
cmp
pop
ss
inc
inc
and
pop
movsl
fstpl
inc
popf
jmp
pop
outsl
mov
scas
imul
push
cmpsl
add
lcall
sbb
add
arpl
jmp
clc
test
sarl
push
mov
mov
fs
int3
mov
scas
scas
pop
add
adc
jp
cmp
orl
jge
adc
out
fstpt
adc
pop
jo
sbb
jl
out
mov
push
adcb
inc
and
shlb
sahf
jbe
pop
pushf
js
imulb
loope
add
cmp
inc
fs
stc
jne
dec
and
ret
inc
call
xchg
rolb
testb
stos
cmp
inc
push
insl
xchg
sahf
mov
sub
ja
pop
push
xchg
or
mov
pusha
sbb
out
bound
cmp
push
push
cwtl
movsl
cmc
ficomps
push
iret
xchg
cltd
dec
lds
adc
in
pop
mov
push
mov
lods
push
ds
push
sbb
fldenv
or
push
jl
sbb
xchg
loopne
test
jne
mov
add
push
mov
xchg
sbb
pusha
cli
in
fstpl
sub
shlb
jg
xor
xor
stos
push
jbe
sub
push
dec
popf
mov
aam
out
loopne
test
cmc
aam
pop
xor
mov
mov
loope
and
out
mov
gs
mov
xchg
fucom
xchg
lds
inc
jecxz
cld
frstor
hlt
rolb
push
push
popa
push
outsl
push
inc
popf
stos
inc
fnstcw
addr16
xorl
xor
pop
xchg
adc
sbb
ret
dec
enter
mov
jmp
inc
cmpl
sub
mov
cwtl
jno
adc
rorb
jl
and
aas
cs
test
lcall
xchg
popa
push
and
dec
stos
scas
into
inc
and
mov
adc
fistpl
ja
jnp
xor
mov
mov
sub
mov
imul
adc
out
ret
nop
mov
lret
or
jbe
sbb
mov
dec
out
lea
mov
iret
jl
mov
and
out
push
imul
inc
add
or
push
inc
mov
xor
nop
fidivl
sub
hlt
mov
and
addr16
and
loopne
push
xor
mov
aad
les
stos
mov
ret
dec
sahf
lods
int3
mov
adc
movsb
mov
scas
mov
lret
push
movsl
xchg
cld
xor
rcr
add
cmp
shlb
dec
lcall
jae
cli
jb
leave
sub
or
lea
xchg
lds
fwait
adc
fld
pusha
les
cmp
movsl
ret
jmp
enter
cmpsb
mov
repz
xchg
orb
aad
jl
pop
or
push
adc
xor
cmc
daa
pusha
dec
mov
repz
test
adc
push
ds
cmp
jns
push
sub
xor
mov
xchg
push
jge
and
pop
mov
mov
test
and
sub
adc
mov
mov
dec
aas
mov
inc
dec
loop
mov
testb
cli
push
lcall
popa
sbb
push
ret
cld
rcr
xor
or
enter
sbb
pop
add
cmp
jbe
push
mov
lock
jno
jg
and
aaa
pop
jecxz
jl
fidivrs
lock
jne
push
notb
and
pop
ret
jmp
push
in
jmp
fadd
fnstsw
mov
adc
jno
enter
ret
dec
pusha
es
jp
mov
outsb
and
popf
out
xchg
cld
add
into
sub
xchg
mov
adc
jns
cs
fwait
mov
loopne
jo
std
jnp
mov
rcrl
push
shl
mov
xchg
imull
push
or
test
push
stos
mov
dec
cmp
into
sarb
test
sub
pop
pop
imul
mov
xchg
jbe
sub
or
outsb
push
scas
shrl
mov
shll
flds
test
jge
adc
icebp
mov
sub
in
jne
ret
iret
mov
mulb
or
mov
push
xchg
ss
sub
shrb
mov
sub
rcrl
jp
out
xchg
dec
mov
cmp
lods
lds
jmp
ret
popf
sub
pop
jge
stos
inc
ret
pop
push
aaa
push
fsubp
and
sub
repz
data16
xor
mov
aas
push
and
aas
mov
outsl
add
test
dec
push
mov
rorb
push
push
or
mov
adc
jne
arpl
jo
sbb
cld
cltd
leave
shr
jle
add
xor
xchg
push
popf
fsubr
xor
daa
lcall
sub
mull
xor
imul
in
mov
imul
in
jmp
mov
mov
je
inc
xor
int3
dec
pop
jno
push
sub
imul
fwait
pop
mov
adc
mov
cmpsl
cwtl
mov
mov
psubusb
lea
pop
dec
loope
insl
test
or
lds
push
jne
sub
movsl
ficoms
xchg
cs
in
push
ret
pop
xor
sub
mov
stos
fimull
xchg
cmpl
scas
inc
ljmp
xor
mov
ja
enter
sub
or
mov
push
ds
pop
sub
sbb
xchg
iret
xchg
add
adcl
js
xor
inc
jecxz
mov
sub
push
xchg
pop
dec
push
dec
or
jle
into
pop
adc
lret
je
aaa
mov
mov
mov
push
xchg
movsb
mov
sbb
inc
mov
cli
xchg
imul
test
lock
sbb
jmp
dec
mov
popl
pop
dec
insl
jns
sub
jo
jge
dec
cmp
scas
shll
adc
xchg
out
mov
aaa
pop
xchg
adc
addr16
shl
or
jmp
inc
dec
jmp
in
cltd
pop
int
loop
arpl
mov
fwait
push
out
push
insb
subb
mov
pop
cmp
cmp
push
repnz
sbb
push
dec
fs
adc
push
xchg
push
xchg
xchg
clc
xor
repnz
xor
sbb
sub
or
dec
loope
jle
adc
and
cs
leave
in
jno
mov
adc
adc
data16
out
fcomp
mov
ja
rorb
push
cld
add
in
out
out
movsl
lods
mov
ret
rolb
or
cmp
push
jecxz
xchg
and
cmp
int3
dec
js
lahf
and
mov
or
jmp
xchg
mov
mov
lret
xchg
aam
ds
loop
xlat
adc
cmp
lds
mov
popf
and
mov
jecxz
scas
fdiv
daa
sub
adc
inc
outsb
lods
dec
mov
int3
mov
ficompl
pop
cmpsb
push
jns
ret
test
fcmovnb
jmp
cmp
bound
in
xchg
jbe
insl
cmp
sub
sub
in
mov
out
ficompl
or
jl
bnd
adc
sbbb
call
iret
pop
jg
imul
outsl
enter
andb
or
stos
lods
stc
addl
nop
mov
lock
loop
xlat
adc
lock
scas
xchg
mov
rorl
dec
fisttps
les
das
and
mov
lods
fldenv
sub
cmp
cmpsl
push
pop
adc
pop
pusha
das
jmp
adc
imul
mov
js
bound
cmp
std
push
mov
or
inc
inc
mov
mov
push
mov
cmp
fsubl
stos
push
fisttpl
testb
out
sbb
adc
or
mov
sahf
push
jl
int
ss
mov
clc
cmp
pop
add
push
arpl
test
addl
lods
lret
cmp
lods
dec
mov
insb
cmpsb
dec
mov
out
aas
dec
ds
arpl
mov
lea
cmp
pop
mov
pop
shlb
test
arpl
aam
in
hlt
mov
cmpsb
stos
adc
push
nop
xor
push
jmp
movsb
aas
adc
dec
ljmp
mov
sub
das
inc
in
cmc
lock
jnp
pop
xchg
cwtl
daa
idivb
dec
dec
cmp
cmp
imul
test
test
rcl
or
pushw
xchg
cmp
shlb
lea
gs
pop
and
leave
shlb
xchg
popa
insl
js
push
aaa
sbbl
nop
cmp
sahf
pusha
cs
rcll
lock
xchg
push
ljmp
add
xor
xor
adc
cmp
clc
mov
dec
int3
dec
nop
fstpl
popa
sbb
pop
lret
inc
aaa
mov
outsb
jbe
adc
fs
lret
dec
mov
les
movsl
out
jno
push
sbb
cmp
jne
adc
nop
fidivrs
ja
int
dec
mov
insb
lods
mov
mov
repz
add
fadds
incl
xor
add
int
imul
pop
movsl
dec
cs
jecxz
test
adc
lea
pushf
adc
andb
mov
inc
jne
cs
ja
xchg
outsl
sarl
scas
scas
mov
leave
sub
sbb
rclb
loopne
repnz
or
fwait
sbb
or
xorb
sbb
adc
pushf
imul
dec
push
les
add
dec
ret
or
mov
inc
and
mov
mov
bound
jae
add
gs
das
push
sbb
inc
fcomps
lret
addb
fbstp
clc
add
add
cmp
or
insb
fbstp
mov
or
jbe
pop
mov
lds
mov
xchg
mov
out
mov
mov
or
xor
cmc
je
int3
mov
inc
jl
scas
dec
lcall
sbb
enter
lock
sbb
cmpsb
sub
xchg
xchg
stos
push
push
loopne
jg
test
leave
mov
loope
popf
cli
pop
ss
jno
fidivl
lret
pop
xor
add
adc
popa
clc
fildl
lahf
daa
or
pop
lret
addr16
cmpsl
ret
movl
jge
in
cmp
std
push
xchg
dec
xor
xor
faddp
add
lcall
add
push
div
nop
sbb
sub
mov
mov
mov
fldcw
xchg
imul
jnp
pop
add
fsubs
dec
push
lock
inc
jbe
mov
add
cmp
and
xor
jne
mov
out
mov
aam
imul
js
imul
sti
call
mov
jae
add
xchg
loop
mov
or
repz
pop
mov
cmp
jmp
les
cs
or
out
or
xchg
cmp
mov
test
pusha
iret
xor
and
lods
pop
pop
push
fcompl
jmp
and
test
mov
cmc
inc
xor
test
mov
cltd
sbb
mov
add
and
dec
lds
mov
cmp
inc
bound
inc
call
scas
fnsave
and
cld
aad
es
fdivs
mov
or
out
sub
inc
lahf
sbb
and
jno
icebp
movsl
xchg
ljmp
push
aas
outsb
jmp
push
lcall
scas
scas
stos
mov
lock
fcompl
sbb
fsubp
out
pushf
mov
int3
pop
sub
mov
cmp
add
xchg
xchg
sbb
int3
adc
ret
ficoml
popf
push
sahf
cmp
pop
movsl
ret
dec
jmp
mov
repnz
sub
iret
mov
xor
jae
jp
sbb
sub
popa
pop
lahf
sbb
int
inc
mov
push
pop
daa
jmp
sub
sub
call
cmp
sub
bound
sbb
cmp
push
test
ds
imul
loope
inc
cs
test
fwait
insl
nop
aas
ss
inc
scas
nop
jp
adc
adc
scas
popa
outsb
mov
jp
aad
jnp
jmp
insb
xor
inc
mov
or
inc
je
aas
cmp
nop
sub
and
incb
js
sbb
lods
inc
movsb
out
nop
stos
sub
leave
imul
lock
jle
int3
jnp
push
sbb
pop
xlat
push
jo
addb
out
test
add
out
push
jbe
in
sbb
imul
mov
push
pushf
into
xor
dec
push
mov
lahf
lods
decl
in
ss
fs
jp
nop
pop
enter
rol
cmp
dec
jmp
xchg
cmp
imul
aas
add
jmp
and
inc
jmp
out
dec
aaa
subb
mov
shrb
stos
pop
loope
sub
enter
cwtl
push
repz
add
and
shr
and
pop
leave
jmp
mov
fsts
imul
or
mov
cmp
pop
das
jae
pop
repz
cmp
dec
jnp
pop
mov
inc
fstpt
cmp
jb
gs
test
or
inc
setge
push
mov
clc
dec
mov
mov
call
icebp
xor
xor
mov
mov
ss
ret
sub
je
mov
pop
push
or
adc
jne
scas
aam
shlb
sub
js
mov
inc
mov
scas
xchg
dec
jmp
add
jecxz
outsb
mov
icebp
or
jl
mov
xchg
adc
xor
pop
aaa
loope
and
dec
out
cmpsl
sbb
in
mov
dec
cmp
xchg
in
mov
int
test
or
sub
fwait
cmp
dec
or
clc
xor
inc
nop
clc
js
add
mov
mov
lcall
sbb
aam
int3
nop
sbb
or
call
mov
stos
lds
cmp
repz
sbb
cmp
add
stos
dec
and
aaa
pop
pop
sbb
jmp
jecxz
jle
or
dec
sar
cs
in
mov
fdivrl
aad
xchg
dec
cmp
xchg
adc
jb
pop
cmpsl
loop
sarb
ficoms
and
push
mov
mov
sub
jg
inc
les
je
mov
cmpb
mov
test
or
daa
mov
repz
xchg
fcompl
faddl
jns
call
and
lret
cmp
aaa
lods
aam
mov
imul
les
dec
jge
inc
mov
arpl
and
or
pop
iret
push
les
scas
cmp
cld
push
inc
mov
mov
add
xor
mov
or
xlat
push
push
pop
hlt
and
jno
adc
jmp
das
imul
adc
ffreep
loop
sub
dec
out
stos
pop
xchg
lret
jnp
pop
push
inc
mov
outsl
sbb
cmpsl
xor
pusha
test
cmp
fnstsw
sbb
in
aam
sub
push
ljmp
lcall
mov
in
sbb
xor
fmull
push
lret
inc
mov
xchg
loop
add
cs
jecxz
mov
lock
mov
cmpsb
sub
in
push
lahf
inc
sub
insb
lods
daa
scas
and
sbb
and
push
adc
mov
notl
or
mov
rclb
sub
dec
hlt
sbb
xor
and
icebp
notb
scas
test
push
psubw
test
mov
imul
jmp
mov
bound
cmpsb
push
pop
jae
xor
pop
out
adc
adc
mov
push
sub
xchg
sbb
pushf
mov
sti
fucomp
imul
cmpsl
popa
xchg
pop
lret
es
dec
cwtl
mov
mov
sub
repnz
int
insb
daa
les
lahf
stc
jae
add
sbb
aam
sub
mov
adc
and
or
es
out
outsb
sbb
adc
xor
in
pop
mov
ror
lahf
dec
cmp
or
dec
sub
in
sub
sbb
xor
inc
dec
incl
jmp
add
xchg
pop
repz
pop
test
push
xchg
icebp
jb
pop
xchg
mov
xor
push
cwtl
aad
stos
out
movsl
insb
dec
divb
push
pop
aam
pop
or
push
jmp
outsb
repz
jnp
iret
stos
dec
add
outsl
inc
or
fbld
inc
cld
fnstcw
push
movsb
or
lds
les
ror
daa
repnz
xchg
add
xor
push
rorb
into
mov
sub
and
mov
test
imul
sahf
icebp
or
out
mov
aam
adc
mov
dec
or
xchg
jnp
pop
pop
notl
push
mov
xlat
or
scas
sub
movsl
stc
rcll
mov
xchg
mov
outsl
cmp
adc
xor
movsl
andb
mov
sbb
xchg
fucomip
ficompl
ja
les
add
in
dec
push
imul
jl
loop
sub
stos
xor
aaa
loopne
jne
arpl
and
xchg
xchg
cltd
pop
lds
divl
cmp
sbb
cmpsl
jmp
movsb
repnz
fs
int
arpl
jns
cmp
popf
jmp
and
lea
in
push
push
mov
sbb
cld
fidivl
mov
adc
adc
add
sub
xor
push
aaa
adc
subb
lds
inc
bound
dec
pop
jb
insb
sahf
push
sub
sbb
xchg
dec
nop
and
mov
push
or
xchg
notb
push
mov
insb
inc
dec
daa
aad
dec
enter
jecxz
sarb
inc
mov
xchg
mov
mov
push
fildl
hlt
pushf
cmp
mov
mov
jmp
jmp
or
dec
inc
adc
das
pop
xchg
ret
lods
add
mov
jecxz
jne
int
or
xchg
add
lahf
popf
add
popf
movsl
push
lods
cmp
pop
push
out
and
test
int3
xor
xchg
or
jnp
arpl
jmp
repz
pop
xchg
adc
cmc
cmp
ljmp
fidivrl
ret
and
imulb
outsb
das
fnstcw
push
xchg
sub
jmp
inc
idivl
aas
inc
cmp
push
mov
mov
icebp
lods
lea
ret
aad
sbb
sub
fisubrs
add
mov
in
imull
cmp
xor
push
test
push
test
xchg
dec
sbb
xor
sub
lret
repz
inc
xchg
push
lods
and
fcoml
cmp
addr16
or
arpl
pop
mov
mov
std
adc
pop
mov
fwait
into
subb
in
jge
mov
ds
in
sub
lods
mov
les
add
mov
xor
addb
jns
aam
cmpsb
xor
inc
lret
mov
je
or
push
cmp
call
mov
ficoml
repz
mov
inc
xchg
nop
das
xor
jle
scas
push
jbe
and
rcrl
ret
insb
jp
lret
insb
mov
movsb
and
pop
and
shll
jb
data16
mov
dec
lahf
push
cltd
adc
popf
jle
push
repz
or
adc
std
xchg
bound
cmovl
adc
dec
push
repnz
inc
mov
lahf
lcall
inc
or
sar
fsubr
fnstsw
xor
inc
pop
mov
stos
adc
lods
iret
lds
sub
mov
or
and
sub
fldl
lcall
das
and
jbe
xor
rorb
movsl
nop
mov
std
fcmovu
lret
sahf
pop
cs
bound
nop
add
in
xor
insl
jp
sub
test
pop
adc
cmp
std
dec
loope
les
fistpl
in
mov
inc
mov
xor
mov
test
repnz
adcl
inc
mov
fsts
rcrl
inc
cmp
int
jae
lods
push
jno
sub
imul
lds
shrl
insl
cwtl
xor
mov
xor
jne
mov
mov
cmp
inc
inc
stos
scas
lock
scas
dec
inc
test
sbb
int3
aam
push
jg
pop
xchg
add
dec
inc
jo
add
cmp
mov
loop
xchg
addr16
cmpl
or
mov
cmpsl
in
adc
pop
in
inc
adc
mov
fsubrs
sbb
inc
cmp
pop
lods
sub
jbe
test
inc
out
mov
pop
xorb
adc
ljmp
into
lds
pushf
fldt
sub
fimull
fsubrs
push
dec
mov
mov
dec
ljmp
ljmp
mov
cli
cmpsl
sbb
cmp
lahf
insl
adc
xor
xor
int3
fdivs
subb
lcall
push
shl
sbbb
xor
mov
cmp
adc
pop
add
inc
movsl
mov
pushf
cmpsl
adc
in
xlat
cmc
test
arpl
xorb
push
cmc
cmp
mov
sbb
test
inc
mov
add
add
sub
cwtl
scas
addr16
imul
cmp
mov
adc
popf
jg
or
pop
aam
lds
mov
jg
shlb
and
stos
mov
jns
mov
loopne
pop
mov
int3
jl
dec
lret
ss
clc
in
sub
xchg
cld
mov
test
pop
jbe
cmpsl
xor
xchg
jns
add
dec
test
xchg
into
inc
and
sbb
scas
rcll
sbb
imul
cltd
sbb
sub
jno
js
sbb
xchg
testb
testb
sub
push
mov
add
lcall
imul
push
pop
pop
pop
mov
add
and
cs
mov
adc
inc
push
or
sbbb
into
imul
push
inc
add
sbb
outsl
mov
lcall
pop
inc
in
insb
fsubrl
mov
sbb
and
nop
pop
les
xchg
pop
call
popf
lahf
adc
les
push
shr
xor
mov
call
sbb
popf
pushf
or
les
xor
test
cmp
data16
pop
aaa
fidivrl
sbb
imul
inc
fisttpll
inc
lds
push
mov
cmp
rcl
lret
cmp
xchg
aam
dec
xlat
or
std
jg
mov
sbb
xchg
lret
mov
adc
fdivs
aaa
lds
push
xlat
or
jecxz
loopne
push
mov
daa
addr16
pmullw
data16
adc
cmp
push
jp
and
dec
pop
je
sub
or
int3
cli
mov
ret
cmpsl
enter
cmp
lods
xchg
dec
ss
andl
cli
fs
in
sti
or
inc
pop
lock
xchg
in
adc
mov
add
jnp
mov
std
loopne
adc
outsb
and
xchg
inc
inc
jo
jp
pop
inc
aam
jp
cmpsb
lea
jo
cli
jle
mov
sub
and
xor
xchg
mov
gs
mov
adc
fbld
push
jecxz
adc
dec
stc
mov
jns
mov
cld
loope
xchg
xchg
jecxz
gs
cltd
push
ret
rorl
movsl
scas
lods
jp
dec
fadds
adc
push
jns
sub
or
cmpsl
xchg
insb
pop
mov
cmp
sub
in
aaa
bound
cmpsl
fnstcw
push
xor
testb
xchg
cmp
and
pusha
jl
and
sub
test
fbstp
xchg
rcrl
xor
adc
xor
gs
std
dec
es
sbb
push
insb
dec
pop
xchg
scas
in
es
cwtl
int
xor
call
push
pop
lahf
cld
les
into
sub
icebp
sarb
cmp
loopne
add
aam
cmp
sub
es
loopne
push
mov
data16
xchg
cld
lds
xchg
mov
cmc
push
sbb
mov
scas
pop
push
out
jae
xchg
inc
je
jne
fwait
mov
scas
adc
movsl
add
loopne
xor
mov
lcall
mov
outsl
sub
fs
notl
pushf
or
pop
shl
push
loope
push
pop
push
adc
je
inc
ret
mov
push
daa
xchg
xor
ljmp
add
dec
out
outsl
es
int3
outsl
out
adc
push
sbb
fiadds
arpl
jp
fwait
push
or
out
xor
ss
inc
mov
mov
add
fiaddl
ffree
leave
inc
mov
mov
ficoml
call
loop
negb
mov
xchg
dec
pop
imul
jmp
rcrl
imul
inc
rcr
fildl
mov
push
cmpsb
imul
scas
add
mov
cltd
roll
aad
or
test
dec
fists
call
and
mov
je
jbe
mov
pop
mov
sub
jnp
dec
cmp
adcb
cmpsb
fcmovnb
lret
sbbl
shl
lcall
popa
or
dec
addr16
pop
and
pop
push
test
push
pushl
cmp
lahf
push
fwait
inc
inc
loope
lcall
aaa
orl
adc
sti
mov
xor
pusha
out
bnd
or
jmp
rcrl
pop
jmp
stc
add
jns
mov
sbb
int
sbb
pop
in
mov
dec
inc
sti
stos
xchg
sub
insb
dec
dec
daa
test
inc
cmp
lret
outsl
or
fmull
mov
cmp
sbb
xor
test
jmp
push
sbb
cltd
push
sub
in
inc
dec
add
nop
jns
and
iret
sub
in
aad
sub
push
mov
push
in
nop
jno
jbe
xor
xor
adc
push
ficoms
adc
outsb
icebp
cmp
lock
push
push
das
dec
insl
div
mov
add
pop
pop
fistps
add
xchg
mov
ds
gs
cmpsb
xchg
sub
pop
mov
push
insl
xchg
or
jno
dec
cmpsl
add
lret
and
out
fnstcw
out
jg
sub
aaa
add
push
jge
call
clc
and
ljmp
jmp
orps
in
ret
sub
fdivp
xor
pop
adc
jns
mov
mov
testb
mov
or
sbb
or
mov
jns
sbb
or
inc
ret
xchg
int
xchg
addr16
dec
cmp
outsl
pop
mov
dec
mov
and
inc
sti
and
into
inc
mov
rolb
addr16
sbbl
hlt
mov
inc
sub
sub
cs
ficomps
decb
test
outsl
mov
pop
rcll
xlat
popf
cmp
sti
loop
jge
fnsetpm(287
lret
stos
insb
and
jno
inc
pop
pop
cmp
xchg
fcmovnbe
push
and
cmp
mov
sti
repz
fildll
sub
fistpll
gs
fistpll
std
adc
xchg
sub
lcall
loope
ficoml
dec
dec
je
push
jno
daa
dec
cmp
mov
push
arpl
dec
xor
push
fbld
pop
fldt
mov
loop
sub
inc
add
imul
out
bound
and
xor
sub
call
sub
sti
rcrl
mov
imul
lds
mov
lds
and
inc
sub
adc
or
mov
inc
and
lds
test
jne
mov
jmp
inc
ss
cltd
push
dec
inc
mov
cmp
push
sbb
outsb
testb
mov
out
shl
cli
icebp
push
aad
jae
cld
sub
cs
mov
mov
popf
sub
mov
dec
cmp
pop
xchg
mov
das
sbb
add
sub
sbb
mov
movsb
or
push
iret
fimull
sub
fidivrl
inc
jae
push
dec
jnp
test
adc
pop
js
in
shll
aas
jns
xor
test
push
popa
or
lcall
les
push
sahf
mov
int
je
shlb
shrl
push
out
pop
imul
movsl
sbb
lret
stos
jg
ds
lcall
cmp
inc
or
fs
push
imul
pop
mov
adc
xchg
sub
adc
add
and
mov
idivb
xchg
mov
imul
mov
pop
fstpl
rorb
push
stc
retw
add
loop
shl
or
popa
cmp
sbb
pmulhuw
rcll
xchg
mov
leave
add
int
mov
inc
cmp
je
cmp
decb
es
sbb
and
adcb
push
lods
loopne
xchg
adc
es
jp
scas
iret
inc
jns
mov
addr16
xchg
add
jb
jl
int3
fldenv
enter
data16
popa
ret
shll
jb
sbb
dec
jae
fwait
xchg
xorb
vpsubsw
lods
mov
fiadds
sbb
jne
mov
inc
negb
jno
testb
mov
push
and
mov
adc
test
imul
jns
push
push
imul
insl
sub
loop
loop
push
fstpl
js
mov
rclb
test
in
lret
pop
jno
orb
mov
dec
push
shrb
sbb
rcr
lods
xlat
cmp
mov
idivl
out
mov
js
mov
leave
out
pop
stos
pop
fmul
outsb
adcb
mov
adc
jmp
not
cmp
and
dec
cli
in
stos
inc
sbb
lahf
popf
je
lret
repnz
in
mov
sub
mov
leave
sub
push
add
sbb
push
pop
inc
mov
jbe
fimull
push
mov
push
push
jmp
xor
or
xchg
loopne
mov
unpckhps
push
outsb
iret
cld
cmp
jle
or
mov
sysexit
inc
xor
jno
das
xor
pop
add
es
lcall
add
push
outsl
sub
data16
faddp
movsl
loope
ret
fwait
mov
push
std
push
xor
xor
xchg
and
cmp
repz
pusha
cmp
data16
cltd
les
or
sti
push
mov
js
mov
cmp
dec
hlt
mov
aas
pop
jmp
push
into
loop
js
and
mov
hlt
sbb
lods
lods
hlt
add
imul
adc
mov
loopne
xchg
jns
shll
iret
outsl
lret
mov
out
cld
sar
mov
and
mov
cli
cs
sahf
popa
in
rcr
xor
imul
push
jp
mov
xor
popa
imul
fiadds
out
or
mov
xchg
lods
sub
sbb
mov
scas
mov
push
xor
xor
mov
dec
xor
jl
cli
pop
movsl
xchg
inc
mov
call
outsb
push
adc
sbb
pop
in
xor
sub
dec
sti
jno,pt
xor
or
inc
repz
ljmp
push
adc
inc
daa
cmpsl
sub
cmpsb
fsubr
adc
seto
inc
mov
sbb
sbb
popa
cmp
loop
xchg
sub
cmp
mov
add
jmp
sbb
loopne
int3
cmp
jnp
jns
push
fs
popf
xor
sub
inc
or
scas
jle
push
rclb
pushf
adc
popf
mov
cs
and
mov
xchg
scas
mov
mov
xchg
and
xor
clc
xchg
leave
add
ja
or
adc
loop
aam
loope
add
aad
imul
scas
add
adc
in
insl
ds
call
adc
sbb
adc
fsubs
push
jb
orl
cmp
pop
sub
aad
imul
mov
fwait
mov
lahf
sub
xchg
int3
in
xchg
bound
aaa
aad
shr
shrb
sarb
ja
and
je
out
cs
mov
push
dec
addr16
dec
aam
stos
ja
inc
xchg
aaa
jne
or
out
push
push
sbb
lods
cmp
push
pushl
and
pop
push
sti
aad
sub
sub
mov
fisttpl
fcmovne
out
mov
cmp
das
cwtl
out
adc
test
fcomps
imul
lods
out
xlat
stos
insb
movswl
setbe
fldcw
mov
popa
xchg
in
fadd
jnp
push
mov
and
dec
inc
repnz
push
addr16
ret
xchg
andl
mov
ja
adc
jns
lock
and
aad
ret
es
and
mov
fistl
sbb
shl
sbb
ret
out
jns
insb
dec
sahf
sti
xchg
sub
test
mov
adc
cmp
pop
es
loop
xchg
insl
push
pop
fwait
xchg
in
sbb
adc
sahf
test
push
mov
sahf
dec
cmp
dec
into
or
aad
add
cs
adc
or
aaa
cmp
jge
std
call
xor
repz
test
jns,pn
adc
fistps
pop
leave
mov
push
clc
mov
mov
cmp
sub
and
filds
pop
add
xchg
daa
adc
xchg
jnp
in
push
mov
adc
aam
add
push
sbb
jle
aas
xlat
mov
repnz
lds
cli
and
inc
fdiv
fiaddl
and
jnp
es
mov
lock
jl
mov
push
and
js
rorb
into
sbb
xchg
repz
dec
fsincos
pusha
std
push
repnz
dec
testl
insl
mov
in
xchg
icebp
aaa
sub
push
mov
sbb
fcompl
cwtl
xchg
nop
and
fcmovne
sbb
das
popf
iret
push
sahf
ljmp
jb
clc
mov
xor
out
mov
mov
aaa
out
push
pop
push
and
xlat
xor
insl
sahf
mov
insb
mov
call
stc
mov
pop
mov
sub
xchg
les
fs
mov
pop
stos
push
sbb
xchg
shll
inc
jne
pushf
push
pushf
xorb
add
pop
rcll
push
push
in
xor
fsubr
imul
xor
xchg
repnz
aas
mov
and
push
push
push
mov
mov
jno
jge
dec
cwtl
gs
jl
adcl
aas
sub
push
adc
cmp
pop
mov
xchg
cltd
jno
imul
mov
mov
in
aas
adc
sti
loopne
rcr
xchg
sub
rclb
scas
push
pop
jns
dec
fdivrl
cmp
lds
stos
cmp
pop
neg
xchg
repz
aas
nop
pop
in
cmp
js
dec
xlat
inc
inc
leave
les
mull
shl
push
xor
sbb
xchg
push
xchg
out
mov
adc
fildl
inc
addr16
sbb
xchg
push
int3
incb
fs
or
mov
or
mov
outsl
inc
hlt
inc
xchg
pop
shl
push
jl
ss
jae
xor
mov
nop
add
jecxz
scas
repz
imul
outsl
cld
aad
jno
xor
and
sub
ljmp
lahf
int
push
lahf
scas
js
jb
push
stos
insb
loope
dec
mov
add
xchg
pop
mov
in
hlt
sub
ror
insl
mov
ffreep
in
or
orl
icebp
mov
and
out
arpl
hlt
push
or
dec
or
aas
out
sub
inc
dec
cld
mov
pusha
xor
xor
insb
push
cmc
push
rol
fcoms
sbb
mov
ss
mov
movb
lret
xor
lods
sbbb
test
fwait
push
cltd
push
fwait
mov
mov
fidivl
inc
pop
jne
in
pop
testl
sub
mov
mov
cmc
in
leave
ds
jne
mov
pop
ret
into
jbe
jmp
nop
setnp
cmpl
addb
pop
mov
xlat
testl
cmp
into
jno
mov
into
dec
xchg
or
lods
mov
xchg
fnsave
pop
hlt
stos
xchg
and
mov
cmp
scas
sub
popa
sub
or
stc
xlat
nop
bound
mov
sti
xlat
mov
in
stos
fistpll
cmp
scas
xchg
into
jmp
cmp
inc
negl
mov
lock
push
sti
jne
cmp
not
or
or
pop
cmp
xor
cmp
mov
stos
in
cmp
pop
mov
push
jae
lods
fsts
pushf
stos
mov
loope
les
and
pop
les
lds
pop
add
xchg
cwtl
andl
push
mov
je
aaa
stos
mov
cs
cld
sarb
mov
mov
cltd
fsubl
imulb
fsubr
aam
pop
mov
cmpsl
jl
daa
lea
in
cmp
fnstcw
pop
pusha
daa
xor
sub
mov
dec
push
into
rcr
add
iret
out
sbb
fisubrl
mov
jg
bound
dec
lea
and
and
ljmp
aas
cmp
aas
andl
aad
paddw
pop
xor
cmp
stos
ret
sbbl
lods
cs
push
mov
gs
and
pop
jnp
jne
pop
dec
fwait
orb
sub
cmp
rol
lret
xchg
adc
mov
dec
jecxz
mov
fbstp
jae
cmpsb
xor
in
mov
popf
aaa
mov
mov
je
and
push
sarl
imul
cli
aaa
push
decb
lods
push
outsl
mov
les
cwtl
iret
inc
divl
and
dec
enter
jae
jmp
aas
ss
add
push
pop
mov
ja
jns
popa
fbstp
xor
insb
xchg
add
push
add
or
jge
mov
loop
icebp
cmpsb
mov
lcall
adc
and
test
in
inc
mov
call
fsincos
arpl
loope
lods
push
inc
xor
inc
rorb
in
adc
pop
fistpl
fbld
add
enter
ror
ret
adcl
dec
loopne
mov
mov
popa
lcall
movsl
sub
pop
cmpb
outsb
add
and
adcb
push
repnz
in
sbb
and
mov
xchg
andl
test
aas
jecxz
xchg
push
jns
xor
fs
ljmp
es
pop
dec
jl
sbb
int3
pop
mov
sub
pop
into
pop
std
ss
fwait
push
add
outsb
xchg
or
pop
les
clc
inc
int
int
xor
sahf
add
mov
pushf
jp
arpl
popf
out
cmp
dec
fimull
add
sahf
push
jecxz
dec
jmp
xor
jmp
inc
mov
pop
xor
dec
and
inc
cli
jae
daa
or
rorb
das
leave
xchg
add
lret
xor
nop
lds
aad
push
jo
or
test
pushf
out
sbb
jo
iret
pop
lahf
dec
stos
in
das
add
ss
xchg
xor
push
lods
aaa
pushf
add
incb
imul
or
in
inc
fidivrs
pop
mov
in
aaa
mov
mov
mov
or
dec
enter
imul
data16
cmp
mov
lret
enter
xchg
sub
lret
add
fsubl
fldl
pop
cmp
into
test
stc
jne
push
aad
out
mov
push
dec
cmpsl
or
iret
cld
leave
sahf
inc
js
or
fdivr
cltd
mov
sbb
insb
push
arpl
inc
xor
push
lock
aam
mov
push
mov
loop
push
testl
jbe
dec
jb
pop
xchg
aas
add
xor
push
mov
out
jb
int
daa
negb
fisubrs
fsubl
push
sti
or
shlb
shll
add
jnp
addl
lahf
decb
ror
aas
add
int
adc
cwtl
cltd
repz
push
mov
pusha
jmp
xlat
add
lahf
movsb
mov
in
int
leave
and
jmp
out
andb
sbb
cmp
lahf
repz
hlt
rcrw
adcb
and
xor
jnp
xor
scas
cld
aad
dec
sbb
adc
xchg
mov
sub
cmp
ds
test
adc
push
push
ss
and
jo
aaa
jne
arpl
push
sub
mov
lods
xor
inc
adc
push
mov
xchg
dec
mov
xor
js
dec
mov
sbb
jo
and
cs
xor
xchg
sti
push
pop
jl
pop
push
mov
and
xchg
jae
jle
dec
cmpsl
xchg
and
sbb
sub
mov
push
and
movsl
xlat
push
xor
mov
mov
mov
ret
mov
or
pop
dec
adc
xchg
out
imul
cmp
pop
push
jbe
push
xchg
js
push
push
jo
cmpsb
mov
cmc
mov
iret
movsb
mov
sub
add
mov
imull
aam
cmpsl
aam
mov
std
rcrb
sub
inc
fwait
mov
jae
xor
ljmp
fdivs
push
rsqrtps
lea
mov
cmp
int3
mov
lret
fcmovu
in
jle
mov
adc
mov
lock
cmp
xor
test
mov
add
lea
sti
pop
inc
mov
sbb
mov
pop
aaa
nop
push
fcmovnu
icebp
jns
dec
push
ss
insl
fmulp
into
jle
cltd
add
push
leave
mov
ljmp
sub
pusha
dec
std
mulb
jge
fs
sbb
dec
repnz
mov
xor
inc
cs
popf
sbb
dec
and
cmp
es
or
mov
xor
test
xchg
xchg
pop
out
pop
in
add
sub
xchg
push
shlb
mov
test
mov
or
js
je
push
push
icebp
fsubrl
test
cltd
xorb
lock
push
lret
insb
xchg
test
fwait
mov
fnsave
imul
repz
movsl
sahf
xor
mov
lock
sub
notb
iret
pushf
adc
xchg
sbb
pop
or
add
and
dec
dec
xchg
cs
push
and
cmp
push
xor
xor
push
lcall
mov
test
adc
ds
sub
dec
cmp
xchg
mov
nop/reserved
cmp
inc
ret
add
adc
mov
mov
adc
fistps
mov
sti
pop
nop
inc
mov
mov
adc
add
fadds
cltd
jp
mov
pop
xchg
aam
pop
push
xor
jmp
adc
divl
or
push
sbb
push
and
fisttpl
cmp
mov
roll
and
ret
mov
push
gs
inc
xor
push
scas
rclb
xor
ljmp
ljmp
jns
gs
scas
shrl
in
test
jno
incl
jmp
mov
jg
pop
enter
sarl
mov
daa
daa
mov
sbb
mov
inc
shrl
cmpsb
repnz
mov
jae
das
mov
test
fistpl
or
push
mov
push
outsl
inc
mov
or
sbb
or
cmp
test
add
jle
lahf
das
inc
aad
and
dec
inc
xchg
clc
jae
mov
lret
pusha
and
loop
jae
sub
xchg
dec
cmpsl
push
sbb
aaa
xor
xor
cmp
mov
mov
bound
xchg
and
or
xchg
pop
push
mov
test
push
out
in
mov
xor
push
dec
xor
pop
sub
sub
loop
pop
sub
sahf
rclb
cmp
roll
mov
mov
xor
xor
hlt
xor
pop
or
mov
aas
popf
and
dec
inc
clc
mov
sub
les
add
cmp
jl
loop
jno
xchg
lds
sub
mov
cmpsl
adc
push
and
aaa
xlat
mov
push
jmp
js
push
repnz
add
mov
shl
cmp
pushf
xor
jl
jl
lods
add
mov
fsubrs
lret
jae
test
push
aam
in
or
cmp
cmp
jo
push
mov
add
aas
jge
pushf
and
xchg
div
xchg
push
out
xchg
mov
and
lret
mov
sbb
lret
ds
stos
pop
lods
or
imul
fldl
pushf
lahf
mov
loopne
add
push
mov
lahf
xor
lods
ljmp
xchg
push
mov
and
inc
in
out
xchg
jp
jle
pop
mov
or
or
icebp
aas
out
jge
push
pop
mov
mov
sub
setle
out
ljmp
push
and
mov
inc
cltd
push
movsl
bound
jg
punpcklbw
sbb
paddw
sbb
jnp
hlt
mov
das
icebp
adc
xchg
adcl
dec
xchg
outsb
filds
shlb
adc
cmp
mov
cmc
ds
clc
outsl
loope
and
mov
xor
sub
cld
aam
shl
movl
cltd
cmpsb
pop
xor
push
loop
jmp
mov
add
sub
adc
movsl
cltd
inc
push
sbb
lret
or
sbb
inc
aas
insl
xchg
not
push
in
pop
ss
xor
and
mov
push
lods
cmp
dec
sub
cmp
or
test
xchg
insl
test
imul
inc
les
and
mov
insb
push
xchg
scas
in
push
sbb
cli
cmp
stc
clc
xchg
cltd
test
sbb
jns
xchg
lcall
mov
mov
pushf
xchg
xor
dec
mov
sub
lahf
sti
jb
stos
int
lds
xchg
mov
mov
push
or
call
je
xchg
mov
loope
inc
pop
push
out
outsb
sub
mov
flds
dec
fisubl
xchg
pusha
in
int
aaa
inc
jmp
aaa
inc
mov
add
repnz
scas
pop
pusha
mov
js
in
xor
lods
pushf
push
in
mov
jns
bound
mov
mov
rcrl
sbb
push
fiadds
sbb
sub
shl
xor
mov
aam
mov
dec
push
popf
call
adc
jae
roll
call
mov
out
pop
dec
dec
loope
frstor
rclb
pushf
mov
cltd
dec
das
mov
test
and
push
es
mov
int3
ds
sbb
arpl
addr16
aam
outsb
sub
inc
ror
pop
ret
int3
and
inc
jbe
push
clc
int3
add
mov
dec
stos
lahf
mov
mov
xchg
test
mov
cmovge
xchg
rolb
and
push
mov
pop
and
mov
in
adc
int3
int
xchg
das
mov
mov
inc
sub
add
test
push
xchg
imul
inc
push
imul
clc
int3
out
dec
scas
jmp
xchg
cmpsl
push
fldenv
sbb
icebp
cli
test
inc
dec
mov
mov
mov
push
jne
sbb
inc
scas
jp
xor
outsl
fs
idiv
push
aaa
aaa
mov
sbb
clc
mov
xchg
fildll
lods
call
mov
fs
arpl
xor
mov
xor
imul
popf
orl
jmp
gs
stc
add
lods
repz
inc
insb
in
aaa
push
ret
pushf
sbb
and
jecxz
xchg
mov
push
nop
repz
cmp
mov
lret
ljmp
lret
ret
jmp
je
stc
adc
mov
std
sahf
mov
test
sub
or
cli
push
ret
push
jbe
ficompl
xchg
adc
fcom
adc
push
push
into
sbbl
stos
jnp
mov
jl
and
xor
aam
test
cmc
movsl
jne
mov
xor
test
movsb
pop
popf
mov
adc
dec
repz
cmp
sar
rorb
mov
fsts
or
sahf
fs
icebp
dec
push
adc
ss
xchg
lret
stc
test
mov
push
cmp
jg
movsl
adc
cmpsl
addr16
pushf
mov
pop
popf
sub
imul
mov
jo
cwtl
pop
add
out
sahf
arpl
push
mov
int3
imul
dec
and
add
ror
cs
sti
in
dec
jns
mov
into
and
fwait
mov
push
lfs
push
data16
test
jno
pop
mov
lds
sbb
mov
pusha
pop
mov
mov
sub
pop
push
jns
dec
and
cld
xor
jbe
insb
pop
out
inc
xchg
arpl
pop
lret
mov
push
xchg
or
shl
stos
jno
pop
orl
push
sub
dec
mov
jne
insb
or
loopne
gs
dec
jne
aaa
out
pushf
push
imul
fucomp
mov
lahf
xor
shlb
nop
pop
and
lods
pop
insl
ret
ret
daa
mov
mov
sbb
cli
and
dec
mov
push
ds
js
cmpsb
sub
je
push
mov
neg
push
fstpt
pushf
and
ret
jp
mov
cmp
push
push
or
inc
ss
ss
stos
xchg
fsts
in
push
test
jbe
jg
gs
fmull
lods
xchg
mov
mov
inc
insb
and
mov
mulb
je
mov
into
mov
leave
sbb
ffreep
imul
iret
rcll
test
ja
xor
mov
mov
lret
push
or
xor
popa
icebp
xchg
shll
mov
pusha
test
xor
iret
in
aas
mov
jmp
orl
or
hlt
sbb
jne
mov
mov
push
aas
dec
or
dec
sbb
add
and
xchg
push
lahf
sub
repz
lret
cmc
jne
clc
scas
mov
movsb
inc
fld
jne
mov
cmp
daa
xchg
adc
sub
data16
cmp
sub
mov
aaa
mov
cli
xchg
sub
or
imul
cli
movsb
dec
pop
dec
mov
xchg
addr16
imul
ss
out
xchg
dec
mov
sahf
fstpl
sbb
adc
jae
pop
xor
scas
and
inc
add
ja
aaa
pop
sbb
shrl
cltd
xchg
push
dec
push
stos
imul
sbb
cld
or
sbb
in
xchg
cmp
sub
in
dec
add
mov
imul
jg
stos
mov
pop
mov
push
sti
inc
ret
fptan
loop
dec
push
push
inc
add
cs
xchg
fwait
push
jnp
cmpsl
push
dec
mov
pop
jb
dec
sti
cmpb
dec
push
movsl
jl
jnp
dec
dec
int3
cmpb
movsb
add
pop
adc
adcb
test
xchg
hlt
add
cmp
aam
sbb
push
xchg
nop
xchg
cmp
mov
stos
dec
out
mov
sub
mov
mov
fiadds
and
pusha
pop
jns
cwtl
in
es
pop
jmp
cmp
dec
into
out
mov
shrb
je
mov
fwait
push
pusha
movsb
pop
xor
push
mov
push
subl
cmc
idiv
or
push
cli
or
aas
pop
adc
and
lret
add
js
pop
lea
jo
push
dec
lea
xor
xchg
or
dec
jno
jecxz
ret
cmp
jae
movsl
mov
in
and
mov
sbbl
leave
bound
outsb
loopne
xchg
repz
dec
pop
in
in
ret
repnz
or
push
xor
ret
sub
push
dec
scas
not
aaa
or
ret
ss
xchg
mov
aam
dec
fcompl
mov
jae
mov
es
mov
dec
inc
mov
mov
xor
pop
add
push
push
add
sbbb
mov
inc
in
pusha
jecxz
mov
in
and
mov
sbb
cs
clc
mov
es
cmp
pop
inc
inc
popl
xor
push
jp
out
enter
adc
es
push
add
add
xchg
mov
movsb
fcoms
in
arpl
inc
mov
arpl
cmp
mov
outsl
lret
push
stos
xchg
pop
sti
sbb
adc
aam
sub
repz
jl
pushf
push
shl
aad
push
in
shll
push
xor
mov
clc
out
andl
test
push
or
outsb
add
out
lods
mov
adc
movsb
cli
add
add
add
jne
repnz
in
sub
xor
loop
es
nop
xor
sub
pusha
ds
stos
push
fwait
aas
inc
add
cmc
fcmovb
scas
fsubs
mov
enter
popa
or
mov
pop
add
xlat
dec
jle
loope
and
lret
rcrb
jne
jle
mov
enter
push
jge
lock
jnp
jmp
push
aas
pop
out
dec
cltd
inc
mov
mov
fbld
mov
pop
adc
jecxz
push
push
addr16
out
push
enter
mov
stos
and
in
jb
cld
mov
jb
cld
jb
and
jo
cmp
pushw
adc
sbb
pop
sahf
js
outsl
add
mov
filds
in
pop
jg
add
pop
loope
xchg
mov
inc
subb
arpl
xor
dec
push
add
push
addl
shl
xchg
jno
hlt
stc
dec
rcll
or
test
push
and
fdivr
loop
mov
pop
into
es
jns
insb
mov
and
bound
test
pushf
repnz
sub
ljmp
jp
xchg
inc
jg
mov
sbb
ds
nop
sbbl
pop
pop
mov
xchg
jge
push
hlt
ret
add
jp
xor
pop
jl
lds
add
adc
and
repnz
cs
xchg
mov
or
cmpsl
stc
add
push
sbb
les
subl
and
dec
pop
dec
jb
push
clc
popa
push
dec
dec
loopne
daa
lcall
jge
lret
add
pop
in
adc
out
adc
inc
sbb
fdivs
out
mov
adc
cmpsb
cmc
sub
and
xor
outsl
jnp
outsb
add
pop
lods
incl
sub
ret
enter
lcall
or
ret
mov
leave
dec
shlb
dec
mov
add
jmp
add
xchg
rcrl
repz
loop
xchg
pushf
fisttpl
lds
mov
push
add
xlat
scas
add
fildl
stos
lods
mov
mov
add
mov
cmc
sub
lds
jecxz
or
add
mov
adc
rclb
negb
or
das
pop
cltd
or
sbb
xor
ja
and
xchg
js
pusha
add
sar
pop
je
ret
sbb
rcl
sbb
and
mov
add
xorb
jmp
test
gs
cmp
cld
cmp
xchg
mov
mov
clc
call
hlt
and
pop
jge
ret
cmc
or
dec
and
mov
js
test
dec
mov
gs
vmread
adc
dec
fcoms
push
xor
push
jbe
xchg
mov
dec
outsb
push
data16
xchg
cltd
fnstenv
xlat
mov
push
inc
loop
push
aas
in
dec
mov
xchg
xchg
cmpsl
pop
mov
arpl
in
cltd
mov
fcoms
mov
jle
dec
stos
imulb
subl
mov
xchg
shl
adc
pusha
rcrl
call
stc
pop
add
cmpsl
mov
pusha
ret
cld
add
and
mov
push
dec
cli
repnz
push
pop
shl
mov
arpl
loop
mov
jo
xchg
scas
xor
xchg
pop
and
mov
jle
cli
in
cltd
fstpl
jg
cmc
push
push
and
insl
jns
addr16
mov
shrb
cmp
lcall
ret
fwait
popa
jg
outsl
pop
ja
subb
movsl
hlt
popf
sub
dec
imul
sub
dec
xchg
fld
data16
sti
or
mov
rcrb
jb
ljmp
cmp
xchg
xor
stc
mov
and
mov
lcall
outsl
mov
add
pop
mov
or
enter
ds
or
call
pop
scas
mov
jb
inc
mov
cwtl
das
daa
inc
cmp
jnp
or
cld
fbld
sub
in
fstpt
push
xchg
mov
mov
or
sbb
adc
xchg
cli
mov
repnz
mov
inc
inc
cmp
ds
or
mov
lock
loopne
or
lcall
sub
aaa
sbb
out
fwait
push
sti
pop
or
add
mov
in
inc
jns
jl
mov
divb
lods
ret
jg
adc
add
cmp
cmp
or
adc
icebp
shll
adc
mov
dec
xchg
lods
imul
iret
and
sbb
cwtl
and
jge
cmp
rcll
int
mov
jle
mov
cmp
fwait
sbb
jo
mov
in
cmp
mov
sub
orb
dec
sbb
mov
sub
and
mov
aad
ret
clc
mov
mov
ds
sahf
adc
faddl
dec
int
cld
loopne
jo
jg
test
das
gs
and
insb
dec
cwtl
loope
movsl
inc
or
scas
out
loopne
dec
orl
xchg
jns
cld
push
mov
ret
add
enter
repnz
stc
inc
push
pop
or
call
xor
outsl
dec
push
mov
mov
jb
and
fwait
add
cmp
sbb
lret
mov
adcb
xchg
add
push
jmp
lea
mov
dec
inc
jnp
mov
push
adc
cs
mov
xor
pusha
mov
addb
mov
pop
push
jbe
test
pop
out
and
dec
js
addr16
or
popa
aas
call
stos
sub
jl
lahf
sub
cmpl
mov
ljmp
notl
jp
adc
insl
cwtl
cltd
in
ss
cmp
jp
inc
shlb
loopne
lret
aad
insl
jecxz
shlb
neg
xor
in
movsl
syscall
insb
test
int3
loopne
popa
push
fs
test
sbb
pop
cld
gs
adc
mov
scas
adc
scas
testl
imul
sub
add
scas
pop
or
pop
rorl
cmp
sarb
xchg
loopne
int3
ss
push
mov
jns
lock
bound
js
repnz
fnstcw
es
insb
adc
dec
jbe
xlat
loop
call
sub
fldenv
lret
xchg
pop
pop
dec
pop
mov
and
les
sbb
ret
mov
fcmovbe
sti
leave
cmp
cmp
addr16
and
daa
jecxz
jnp
lret
push
xchg
cmp
push
fcoms
add
dec
mov
scas
lahf
cmpl
adcl
jo
dec
shll
adc
cmp
cli
outsb
jge
das
cltd
jle
std
add
adc
stos
mov
fwait
jecxz
mov
cmp
mov
mov
test
and
add
mov
push
push
xlat
push
sbb
xlat
loopne
leave
xor
cmp
cs
dec
test
cmc
sub
in
outsb
mov
dec
pop
ds
and
mov
shrb
jnp
stc
inc
and
jae
pop
pop
adc
int3
and
jno
pop
push
sub
lock
fsubs
mov
inc
mov
xor
fcoms
sbb
in
loopne
mov
fdivrp
jge
repz
dec
mov
mov
jnp
dec
mov
loope
in
nop
adc
xor
loopne
or
test
mov
ja
push
xor
fdivrs
and
rcl
add
dec
inc
test
stos
jnp
mov
adc
test
aad
xor
or
push
test
pop
adc
je
dec
mov
cwtl
nop
lds
dec
aas
cmpsl
mov
cmp
jne
dec
pop
or
xchg
sbb
xor
jmp
dec
push
push
mov
lods
lods
lock
iret
cli
arpl
dec
fdiv
stc
dec
out
in
lahf
sbb
movsl
ret
push
in
push
iret
scas
bound
test
push
mov
hlt
lret
popa
or
dec
out
pop
nop
pop
push
adc
adc
push
int
pop
push
lea
in
out
mov
and
push
mov
push
xchg
mov
cwtl
inc
mov
jns
das
jmp
ret
xor
lock
imul
out
das
iret
xchg
mov
imul
push
cmp
adc
push
cmp
in
clc
inc
add
jmp
and
dec
xor
fsubrs
adcl
push
enter
test
adcl
imul
mov
sahf
testb
jne
rorl
test
stos
mov
sub
pushf
scas
mov
or
inc
ret
cmp
aad
push
pop
ja
addr16
in
pusha
mov
dec
pop
jl
xchg
out
sub
aad
inc
cltd
cli
sbb
xchg
sbb
pop
inc
mov
inc
lcall
pop
xchg
mov
pop
mov
mov
sub
jecxz
dec
sub
mov
dec
xchg
adc
int
setp
dec
dec
pop
jmp
pop
lret
sub
or
xor
push
xchg
das
xor
inc
rcl
gs
lcall
addb
iret
inc
push
pop
loop
xor
imul
add
or
push
mov
int3
aad
addr16
inc
xchg
xor
loope
test
sub
and
fidivl
push
dec
or
push
loope
lea
mov
ret
mov
out
rol
push
fwait
popa
jle
enter
fs
mov
inc
bound
int3
ret
jnp
push
push
xlat
lcall
push
pop
and
add
test
add
push
mov
imull
rorl
jb
addr16
jb
push
adc
mov
lods
inc
outsb
xchg
pop
sbb
into
call
aaa
imul
jg
daa
das
roll
ret
pop
and
popa
jnp
push
inc
js
lcall
push
scas
movsl
jne
add
adc
jne
push
test
pushf
insb
lret
ljmp
insb
call
xchg
fistpl
pop
push
pop
movsl
dec
test
dec
mov
inc
fildll
scas
rorl
lret
adcl
pop
in
mov
xlat
hlt
stc
mov
idivb
pop
push
outsl
ljmp
xor
test
jb
add
scas
sub
imul
sub
xchg
enter
jne
xchg
sbb
mov
hlt
sbb
clc
pavgw
dec
cwtl
sub
cmpsb
jnp
xadd
push
out
and
cmp
ds
lea
sti
lret
push
dec
xlat
mov
fadds
mov
push
push
mov
push
cwtl
orb
sbb
stos
js
mov
aam
loopne
mov
push
test
shlb
out
or
sbb
sahf
mov
jmp
addr16
outsl
adc
loopne
mov
push
sbb
ja
push
and
std
inc
or
cli
fbld
inc
cmp
fistps
sbb
xchg
icebp
adc
cwtl
cmp
hlt
shr
loopne
lods
loope
dec
jae
mov
jno
shrl
pop
and
pop
lahf
push
sahf
sbb
mov
sbb
das
cmp
movsl
sti
cmp
out
ljmp
shlb
mov
mov
arpl
pushl
push
inc
outsl
cmp
out
lods
pop
jmp
jp
aaa
ss
and
scas
nop
js
shrb
mov
xlat
sbb
jl
mov
sbb
mov
sub
fnsave
repz
push
sbb
ja
xchg
shlb
sti
jns
or
lret
and
and
popf
cmp
ds
ret
sarb
add
mov
or
sbb
insb
jmp
icebp
push
sub
and
mov
cmp
push
xor
and
or
jge
ficoms
mov
lock
insl
mov
lods
bound
out
sbb
test
shlb
mov
sub
inc
jo
movsb
lods
push
cld
lcall
lcall
push
out
add
decb
or
cld
cmpsb
lret
dec
loop
jbe
push
or
adc
dec
dec
into
mov
lcall
xchg
scas
or
ret
lret
loope
scas
imul
aaa
aaa
cmpsl
jmp
dec
adc
pop
mov
cld
xor
pop
sbb
in
int3
ds
aad
mov
mov
mov
sti
setl
mov
movsb
pop
out
jg
gs
add
mov
cwtl
sbb
mov
cld
pusha
xchg
int
or
pop
in
cltd
lds
vphadduwd
push
or
aam
std
sub
scas
lea
cmp
dec
pop
ror
push
cmp
mov
test
jecxz
aad
or
mov
insb
xchg
xor
mov
push
add
add
and
frstor
fwait
or
xor
mov
addb
fsubrs
aam
adc
xor
cmp
or
test
das
out
and
dec
push
test
xchg
shlb
sub
push
sbb
negl
push
adc
jmp
xchg
mov
mov
sbb
sub
lahf
popa
es
xor
add
mov
sub
scas
repnz
cs
or
sub
negb
push
xchg
lods
add
mov
rcrb
xchg
cmpl
pushf
pop
mov
xchg
push
lcall
pop
sbb
scas
outsl
xor
sahf
bound
movsb
dec
inc
ret
or
dec
add
fildll
rcll
lcall
inc
or
cmp
ja
cld
scas
scas
jmp
repz
xor
dec
ja
jae
cwtl
push
pop
or
fidivrs
adc
test
cmp
or
and
inc
andl
loop
mov
jge
mov
pop
movl
out
xorb
cmp
fidivs
daa
das
pop
in
int
and
rep
aam
test
imul
bound
mov
test
jge
jo
xchg
pop
push
adc
rol
xor
cmp
std
or
xchg
bnd
adc
fisubrl
adc
mov
sbb
cmpsl
cmpsb
or
fimuls
add
repz
xchg
mov
inc
pop
daa
add
xchg
sahf
fisttpl
jns
mov
jle
add
sbb
cmp
xor
dec
scas
movsb
cld
mov
fadds
fnsave
daa
push
sub
xor
jle
fwait
inc
mov
mov
adc
inc
out
pop
sbb
fwait
push
fidivl
lods
jb
push
adc
mov
xor
setp
cmpsb
repnz
addr16
pop
mov
cmp
cltd
fisubrl
stos
add
pop
orb
inc
and
cmp
or
sub
sub
arpl
push
inc
mov
mov
inc
mov
adc
mov
fdivs
pusha
loope
pop
repnz
jmp
sub
mul
shll
pop
mov
and
mov
push
movsb
push
mov
pop
clc
mov
jne
cmpsl
lods
mov
pushf
cld
outsb
jbe
and
out
and
dec
fcoms
pusha
push
mov
test
sub
enter
mov
rcrl
cld
jecxz
out
mov
bound
movsb
pop
leave
and
fnstsw
inc
out
fsts
idivl
pusha
xchg
into
mulb
mov
mov
das
push
mov
aad
mov
adc
in
jns
in
adc
std
mov
shll
push
push
and
lahf
jg
jp
hlt
xor
int
cmc
insl
aam
mov
sti
add
mov
idivb
xor
xchg
sub
mov
arpl
jecxz
pop
add
push
fadd
stos
inc
ret
fcmovnu
shrl
xorb
lds
jne
in
gs
inc
mov
fldcw
jmp
xchg
dec
sub
mov
js
sub
inc
daa
inc
adc
mov
sub
mov
sub
jns
mov
and
or
mov
adc
idiv
enter
push
cli
sbb
sbbb
divl
sti
lcall
sbb
pop
call
imul
test
xchg
dec
push
je
xchg
fdivrs
clc
mov
movsl
xor
mov
sub
mov
les
fimull
pop
cwtl
stos
xor
xchg
fildll
scas
lcall
pop
ret
loopne
pop
dec
fsubrs
adcb
std
enter
pusha
les
int3
lret
mov
pop
xor
pop
add
or
push
pop
mov
stos
cwtl
sub
pop
stos
scas
mov
inc
pushf
outsl
ficoml
and
push
das
and
jp
mov
cmp
pusha
mov
lods
pop
sub
dec
fs
ret
es
add
mov
in
cltd
mov
out
pop
push
add
cmpsl
lea
jle
subb
and
dec
and
nop
cmp
mov
gs
pop
addr16
mov
stos
outsb
jne
cmp
repz
dec
mov
orl
movsb
fildl
mov
cwtl
jg
push
in
mov
dec
rorb
dec
arpl
int3
dec
ljmp
mov
pop
jge
out
fdivl
cmp
sti
cmp
lea
inc
cltd
cmp
aas
xchg
or
cmpl
in
dec
in
sub
sub
fadds
out
inc
cmp
cwtl
dec
xchg
insl
test
mov
cs
sbb
mov
jb
sub
scas
sub
push
daa
sub
or
fstl
xchg
inc
dec
sahf
xchg
dec
inc
inc
or
loope
flds
popl
mov
es
das
mov
lcall
sub
inc
or
push
gs
cmpsb
jne
or
inc
fidivrs
adc
sub
jmp
add
xor
fistpl
loop
sbb
pusha
movsl
in
cltd
stos
in
popf
pusha
sarl
test
mov
movsb
fs
fadds
and
pusha
mov
out
xchg
mov
sub
cmp
xchg
outsb
je
popf
aas
test
fists
and
sub
adc
dec
dec
repz
inc
fs
aaa
mov
sbb
xchg
jle
xor
je
fnstsw
addr16
jmp
pusha
enter
adc
mov
xchg
push
loopne
mov
sbb
mov
adc
lret
and
nop
mov
jb
sarb
and
out
dec
jp
decb
dec
arpl
xchg
mov
ljmp
and
stos
mov
xchg
mov
jae
insb
dec
pop
sbb
call
xor
adc
jmp
adc
fcom
mov
sbb
xor
addr16
jno
jp
fwait
in
fscale
sahf
sahf
inc
outsl
loop
loope
ret
les
inc
and
mov
bnd
mov
sbb
jecxz
fucom
dec
es
lahf
in
push
pop
and
mov
mov
or
jle
xchg
fstps
out
add
or
call
sbb
mov
jb
cld
dec
adc
icebp
cld
leave
lock
sub
dec
js
adc
push
mov
int
cmp
mov
jl
sbb
xor
inc
cltd
ret
mov
add
lods
push
xchg
popa
or
rorb
push
stos
mov
cli
in
xchg
fildl
cmp
dec
or
sbb
js
int
cmp
dec
cld
pop
addr16
mov
jo
jmp
push
xchg
mov
push
lret
sarb
int
shlb
sbb
and
cmpsb
std
mov
mov
or
notl
or
inc
pop
fdivrp
inc
xchg
xchg
push
mov
js
loopne
adc
sub
dec
dec
dec
mov
sub
dec
lret
scas
dec
mov
mov
pop
or
mov
dec
idivb
clc
inc
pop
ss
in
jno
loopne
movsl
xchg
lret
mov
fmuls
dec
lds
aaa
mov
leave
push
fisubrl
xchg
mov
push
insl
push
iret
add
mul
push
xchg
pusha
pop
pop
cli
loop
in
pushf
adc
inc
dec
push
les
in
enter
mov
adc
daa
or
lahf
test
cmp
inc
mov
xor
xchg
fstpt
mov
push
or
inc
popf
mov
imul
mov
add
jp
clc
mov
mov
jno
push
pop
and
dec
andb
push
xchg
fsts
dec
outsl
or
adc
arpl
fsincos
aad
bound
shl
xor
pop
sbbb
pop
fimull
movl
mov
enter
xchg
subl
push
xor
pop
xchg
cld
repnz
shll
add
push
ret
mov
mov
ret
jecxz
push
xor
push
sub
xlat
cs
outsb
xchg
add
outsb
das
mov
int3
mov
xor
fisttpll
mov
pop
push
mov
mov
push
in
xchg
enter
test
inc
pusha
mov
add
jns
mov
pop
ja
ds
insb
push
dec
cmpsl
into
cmpsl
ja
pusha
inc
ret
cmp
rorb
xchg
arpl
sub
jne
addr16
adc
mov
popl
mov
scas
adc
loopne
mov
push
sbb
jae
aaa
call
stc
lock
mov
dec
pushf
rolb
dec
jp
push
and
pop
out
mov
sahf
mov
lret
or
flds
out
shl
mov
inc
out
ficompl
loop
aad
and
stos
lret
or
inc
bound
pop
jp
insl
mov
or
movsl
lods
mov
cmpsl
into
ljmp
pop
inc
mov
andl
scas
jle
hlt
shll
and
outsb
mov
jecxz
clc
in
adc
push
push
and
ja
es
jns
jle
add
hlt
mov
icebp
lods
sbb
rol
loop
pop
xchg
sub
pop
enter
jnp
fildl
sbb
inc
or
pop
cmp
jne
push
cmp
data16
jns,pn
es
mov
inc
leave
movsb
mov
out
add
repnz
and
or
dec
cltd
dec
mov
fisubrs
lea
sub
xchg
cltd
and
out
xor
es
xor
js
fidivl
add
inc
bound
sbb
arpl
sahf
push
or
lret
xchg
ret
gs
push
imul
leave
adc
dec
mov
loop
jg
add
jbe
int3
mov
jno
inc
dec
dec
sub
mov
shlb
jmp
fs
push
cltd
pop
lcall
int
sub
es
jle
push
mov
or
mov
sbb
inc
daa
xor
jo
jmp
in
into
sbb
sbb
lock
imul
mov
and
lahf
add
or
jne
test
gs
lock
repz
pushf
stos
mov
mov
enter
dec
adc
push
enter
sub
sbb
es
pop
mov
sub
dec
push
cwtl
gs
mov
rcrl
sti
lea
idivb
inc
fwait
pop
fcomp
and
adc
popf
sti
push
or
call
mov
hlt
test
fcoms
mov
mov
pusha
in
pop
cmp
jb
pusha
fldcw
adc
and
xchg
hlt
mov
mov
imul
je
leave
outsb
nop
movsb
mov
popf
cs
add
cmp
xchg
sub
leave
adc
xor
inc
push
insb
jne
lret
cmp
add
xor
outsb
xor
pop
jno
dec
rolb
add
dec
jp
sahf
icebp
xor
xchg
mov
negb
inc
pop
shr
lods
inc
test
add
xchg
ret
sub
add
jmp
cmpsl
imulb
fnsave
jle
or
icebp
rcr
shll
call
test
cmp
xor
in
sbb
adc
xchg
popl
pop
testb
int
stc
or
jne
dec
mov
test
daa
sub
addr16
aas
cmpsl
rol
push
or
push
cmp
ficompl
stc
in
push
lret
sbb
push
mov
std
out
dec
or
jae
ss
and
enter
sarl
ret
ret
loop
subl
sahf
pop
loop
loop
xchg
sbb
jnp
pushf
ljmp
out
sar
pop
cs
imul
scas
cmp
cs
out
xchg
push
testb
push
enter
mov
xchg
xchg
repnz
jne
xchg
sub
pop
add
push
lret
in
int
push
enter
jp
xlat
test
and
pop
jbe
insl
rorl
roll
movsb
dec
test
lahf
xchg
jecxz
nop
ficomps
jne
sub
and
mov
enter
pop
or
in
das
popa
adc
push
ljmp
adc
xchg
and
jnp
das
cmc
sbb
xchg
cmp
cld
mov
lret
stc
or
flds
iret
pop
cmp
sbb
fcompl
jge
fisubrl
adc
xor
adc
mov
or
jle
stos
push
movsb
rcrb
sbbb
sub
mov
lods
mov
outsb
pop
dec
push
cli
sahf
adc
lea
pop
adc
test
push
push
fxch
add
fidivrl
push
sti
xchg
aam
pop
pop
fxch
cmp
subb
lret
push
loope
mov
adc
stos
out
popa
sahf
ret
push
xchg
mov
stc
push
pop
popa
mov
adc
push
sub
add
dec
sbb
sbb
ja
sarb
lock
and
pop
lret
aaa
pop
sbb
outsb
push
xor
outsl
popl
iret
je
test
in
aad
scas
mov
rcr
xorb
adc
shlb
outsb
fwait
inc
insb
mov
lret
jecxz
xchg
jle
insb
inc
xor
lahf
inc
mov
cmp
int
cmpsb
scas
sbb
cmp
mov
mov
push
aad
mov
test
out
xchg
fimuls
lods
movsb
rclb
push
jg
stc
mov
sub
ret
mov
xchg
mov
mov
fistl
dec
in
dec
cld
jl
xchg
jecxz
fsubrs
ficompl
xchg
fwait
mov
loope
mov
pushw
insl
shll
or
scas
dec
xor
data16
in
jl
add
addr16
xlat
or
dec
jo
add
mulb
mov
push
imul
aad
scas
add
pop
push
mov
or
jge
lret
mov
lahf
mov
fisttpl
stos
cmp
mov
mov
fildl
sarl
orb
and
cmp
mov
jno
and
or
xchg
clc
mov
les
hlt
xlat
lods
sub
test
mov
mov
mov
xor
mov
lds
sbb
loopne
pushf
test
add
int3
aad
jno
lret
nop
nop
mov
dec
add
add
push
mov
dec
adc
insl
imul
push
mov
in
lods
mov
push
fwait
repz
pmulhw
and
cmc
mov
sbb
add
pop
scas
and
out
scas
jnp
loope
es
sbb
xorl
cmp
mov
dec
inc
sahf
jp
jge
lea
sub
cltd
jmp
mov
cmp
and
data16
mov
rcrb
sub
inc
sbbb
or
clc
push
push
lods
lods
mov
pop
lret
insl
shll
sbb
jge
test
xchg
cli
dec
out
fldenv
ss
push
and
ljmp
push
xor
jo
lahf
hlt
pusha
xor
test
mov
subl
or
and
popa
jne
sti
andl
imul
imulb
es
aad
jnp
pop
mov
cmp
sbb
dec
add
sarl
xlat
sbb
mov
mov
inc
pusha
sbb
cmpsb
xchg
aas
es
pop
cmp
fdivs
xor
das
xlat
test
xchg
call
xchg
push
fisttpl
nopl
adc
pop
fnsave
push
in
sub
icebp
pushf
pusha
icebp
or
push
rcr
mov
sub
scas
fistps
pop
lods
sub
fwait
lret
push
inc
outsl
sub
adc
hlt
cld
fildll
pop
pop
mov
cwtl
mov
pop
dec
jne
adc
lods
sbb
mov
pop
popa
pop
fldl
divl
lods
mov
lahf
sbb
jb
mov
or
arpl
push
adc
stc
test
cmp
jb
nop
arpl
jge
push
jno
mov
xlat
outsl
test
fucomp
lods
dec
movsb
mov
dec
push
mov
jg
mov
sbb
cld
cmp
pop
xor
aam
stc
cmpb
pop
mov
fwait
scas
sbb
loope
dec
subb
mov
std
popa
mov
adc
inc
mov
pop
into
insl
dec
pop
xor
cmc
outsb
cmc
addr16
or
add
sub
lods
add
xor
cmc
fnstcw
inc
js
xchg
shl
fadds
mov
dec
test
rolb
sub
mov
and
mov
stos
jnp
test
xchg
es
shlb
xor
xor
cmp
and
shlb
dec
stc
inc
test
stc
inc
xchg
adc
push
cmp
dec
inc
mov
mov
bsf
sbb
lods
jle
test
dec
pcmpgtb
jns
xchg
in
mov
pop
lret
shl
sub
sbb
jmp
popf
movsl
sub
ja
dec
pop
cmpsl
push
das
jecxz
imul
mov
and
shr
clc
mov
xor
daa
add
addb
jae
hlt
jle
or
repnz
imul
sarl
mov
lahf
inc
out
adc
add
fdivrs
cltd
add
and
or
out
aam
cs
ret
mov
push
mov
insb
jmp
out
or
imul
filds
std
xchg
call
mov
ja
shrl
lret
push
enter
xchg
lds
mov
xchg
std
push
add
call
lds
mov
push
mov
and
imul
or
stos
or
imul
mov
sub
sub
mov
sbb
test
sbb
fidivl
jg
xor
call
iret
push
push
je
insl
and
xor
mov
mov
mov
pusha
or
out
pop
xor
test
jns
rcr
mov
test
cmpsl
cli
loop
add
adc
int
or
hlt
jmp
pop
mov
jbe
les
mov
stc
push
stos
int3
xor
xchg
inc
mov
xchg
ss
sti
mov
add
xchg
clc
loop
fwait
lods
sbbl
jp
outsb
cmpsl
adc
xor
outsb
and
ljmp
pop
mov
mov
pop
decl
addb
mov
push
fcomip
das
pusha
outsb
add
sbb
jns
or
sub
sub
sbbb
sbb
fldt
mov
or
jno
dec
icebp
ljmp
icebp
fucomip
loop
pop
lcall
fwait
jg
sbb
fs
addl
insl
sbb
pushf
sub
jp
pop
mov
mov
repz
out
fs
jle
es
pop
in
push
dec
call
pop
mov
clc
sbb
lds
mov
mov
pop
jnp
je
ret
movsb
in
pop
popa
nop
loopne
mov
and
push
jnp
scas
push
pop
jae
mov
mov
xor
and
mov
push
mov
inc
iret
in
xchg
popa
sbb
imul
sub
mov
decb
fnstcw
data16
in
inc
sub
push
jns
ja
enter
mov
xchg
sahf
cltd
sub
push
orl
xchg
push
std
sti
add
add
xor
jnp
jae
cltd
push
stos
inc
xchg
repz
imul
lahf
mov
sbb
xor
jns
shrl
ss
lcall
int
out
jbe
or
out
fwait
fwait
cltd
push
mov
adc
mov
incb
mov
out
insl
into
jge
data16
pop
lret
dec
add
lods
cmp
or
mov
sbbb
mov
mov
pop
scas
loope
std
int3
push
lds
sarb
or
jp
jge
rorb
test
pop
mov
and
mov
sub
add
mov
in
and
shr
pop
mov
jecxz
mov
bound
cld
mov
stos
lret
lock
loopne
jl
fnstcw
mov
dec
lcall
push
lods
insl
aaa
sub
fisubrs
sbb
nop
ss
xlat
das
andb
adc
sbb
out
dec
sti
popf
dec
xchg
stos
inc
jne
mov
test
cmp
lods
inc
subb
push
sti
loopne
stos
fisubs
dec
stos
fwait
imul
inc
sbb
inc
pop
ret
add
js
cmp
fcompl
pop
into
clc
and
addr16
push
inc
loope
scas
subb
cmc
shrb
cs
int3
decl
sub
imul
xor
sbb
jne
bnd
mov
ja
scas
clc
shll
sahf
es
ds
mov
shrl
xchg
imull
pushf
push
pop
xor
push
xchg
jae
aaa
push
pop
inc
sbb
je
hlt
adc
mov
dec
out
ljmp
push
sub
fimull
adc
inc
lds
dec
or
jecxz
enter
mov
add
add
sub
adc
cmp
xor
sub
pop
cmp
sahf
std
dec
mov
icebp
imul
push
jne
sbb
jae
push
mov
call
ss
ret
mov
adc
jne
lret
cmp
mov
add
dec
sub
hlt
or
xchg
leave
lcall
cmp
cmpsb
xor
mov
or
mov
rorb
fidivl
fs
leave
mov
sub
jnp
xor
inc
popf
lods
pop
pop
fmulp
mov
rcrb
sub
movsb
repz
mov
and
popf
and
sub
jecxz
ljmp
fs
push
shlb
and
icebp
adc
ljmp
in
adc
movl
push
cmpsb
push
cmp
push
jns
loop
in
rcrb
sbb
hlt
dec
repnz
jmp
xchg
sub
xchg
mov
call
or
adc
cmp
xlat
lret
push
outsb
sub
std
pop
sbb
cmp
and
add
iret
xor
leave
lods
and
adc
iret
shll
dec
testl
mov
mov
push
mov
add
nop
mov
mov
es
cmc
mov
dec
xchg
pushf
lods
push
xorl
xor
xchg
pop
pop
or
inc
in
popf
push
imul
pushf
adcb
jp
scas
jbe
push
pop
sbb
ss
and
xchg
cmp
add
adc
ret
scas
sub
jmp
mov
jae
inc
pusha
stos
mov
mov
cltd
mov
adc
fs
inc
dec
cmp
jne
push
rcl
lcall
icebp
xchg
pop
dec
stos
stc
mov
pop
push
cmpsl
xor
pop
xchg
mov
mov
movl
mov
imul
mov
fcmovnu
jbe
xchg
mov
add
pop
popf
or
mov
mov
sbb
std
jnp
jmp
push
sti
and
lcall
lret
sbb
mov
dec
dec
mov
sahf
ja
ret
sbb
andl
test
fcmovbe
dec
lcall
push
cmc
loopne
mov
outsl
lock
xor
jae
xorb
into
call
push
imul
iret
add
add
fxch
adc
mov
or
std
popf
rclb
in
jge
push
mov
sbb
mov
dec
dec
xchg
xchg
pop
cwtl
pextrw
cmpsl
mov
mov
in
inc
sbb
mov
in
jl
imul
dec
daa
repnz
cmpsb
pushf
cli
cmpsb
andl
outsl
shl
faddl
jecxz
sbb
into
into
lock
repz
mov
loopne
push
or
xor
leave
popl
mov
iret
ret
loop
add
cmp
mov
cwtl
loope
sbb
xchg
jecxz
aaa
xchg
mov
call
adc
sti
inc
mov
sub
push
cmp
rsqrtps
pushf
mov
inc
bnd
push
push
jnp
mov
js
sub
nop
gs
xacquire
fsts
cli
fdivs
fs
inc
sbb
outsb
lret
xchg
scas
flds
or
daa
or
aam
cmp
pushf
lods
xchg
dec
pop
fdiv
andb
xor
lret
fldt
nop
push
jns
mov
movsl
std
mov
xor
or
xchg
adc
idivb
lods
push
enter
adc
dec
ds
mov
bound
insb
and
xchg
or
push
sbb
repnz
jno
xchg
roll
xchg
inc
test
test
scas
into
dec
stc
sub
dec
jle
mov
sbbb
cmpsl
cmpl
cmc
and
sbb
jl
mov
cmc
xchg
call
addr16
xor
lcall
in
push
adc
fwait
adc
inc
dec
repnz
mov
aam
sbb
fwait
xchg
popa
jae
inc
dec
jecxz
jp
nop
std
push
test
mov
pusha
std
jne
or
pop
adc
je
push
mov
sbb
push
shl
sbb
sbb
ss
or
rcr
mov
jne
stc
pop
pushf
or
outsl
jne
jo
add
fildll
test
inc
dec
push
sbb
loope
mov
bound
cmp
insb
pushf
sub
mov
or
and
mov
pop
jp
pusha
mov
fdiv
lret
out
in
mov
inc
popa
xchg
add
mov
pop
scas
and
and
xor
loopne
repz
lods
dec
clc
push
aam
dec
test
outsl
ljmp
add
jp
xor
lea
jnp
sub
neg
push
pushf
mov
stc
jns
dec
add
ret
cli
pop
mov
and
aas
movsb
stos
nop
pop
out
inc
and
sarl
add
cli
lock
inc
outsl
insb
pop
fs
arpl
cmpsl
add
imul
push
xchg
push
fdivl
xchg
xlat
in
and
add
test
push
lcall
stc
jb
or
jecxz
dec
imul
stos
imul
andb
inc
repz
cmc
jg
sti
cmc
adc
pop
jb
inc
adc
mov
mov
sub
das
outsl
shlb
cmc
mov
rorl
icebp
push
call
mov
leave
jo
mov
adc
pop
cli
mov
in
cmpsb
push
mov
sarb
cmp
mov
lds
jb
fldl
ret
push
mov
mov
lcall
cld
xlat
and
and
mov
popa
jmp
add
add
sbb
push
add
andb
mov
orb
or
js
push
cmp
rorb
pop
cmp
push
fs
aaa
addl
xchg
push
fincstp
inc
or
lret
insb
rcrb
lahf
push
mov
mov
lods
fcomps
jge
movhps
jb
xchg
lds
lods
test
jg
xorb
mov
push
cld
xor
pop
add
and
adc
sahf
cmp
add
pusha
call
xor
ficoml
lods
outsl
mov
mov
and
push
or
xor
jge
int
outsl
jae
adc
cli
mov
cmpsb
fisubrs
ficoms
jge
loop
or
in
out
ret
pop
loop
lahf
int
cmp
push
xor
mov
xchg
shll
stos
dec
or
jnp
push
push
jb
mov
loop
xor
cmp
movsl
out
jecxz
clc
jle
jnp
movsb
push
imul
xchg
mov
add
mov
jge
mov
push
sbb
icebp
push
and
xor
jg
in
js
popa
int3
int3
mov
jnp
popf
sub
not
icebp
mov
insl
leave
lds
inc
repz
and
pop
subl
insl
popf
mov
nop
out
adc
scas
sub
pop
out
inc
jo
pop
push
decl
shlb
inc
addr16
sbb
xlat
pop
sti
cmpsl
mov
sbb
push
mov
mov
add
sarb
dec
aaa
fdivs
and
adc
cld
movsl
cltd
test
aas
push
inc
pop
loop
inc
jno
pop
xchg
push
pop
leave
mov
test
add
lahf
lods
stos
fucomp
add
outsb
in
inc
rcr
sub
cmp
inc
imul
sbb
push
adc
mov
nop
ja
push
sbb
fwait
pop
sahf
inc
sbb
stos
xor
push
fidivs
in
shr
fs
or
jecxz
shr
iret
clc
lds
mov
inc
insl
arpl
ja
or
sbb
mov
add
pop
xchg
popf
popa
cmpsl
pusha
jecxz
shll
lret
push
xlat
cmpsb
xchg
push
int3
xor
pusha
mov
and
pop
adc
push
or
lahf
sub
add
ds
iret
pop
jnp
sbb
mov
adc
in
enter
sub
sbb
fwait
out
fsubl
sbb
dec
push
mov
dec
faddl
and
aaa
mov
lret
dec
jne
aas
add
xchg
int3
incl
inc
adc
xchg
xor
mov
and
and
pop
cmc
xchg
les
xchg
and
xor
std
sub
push
and
xor
and
or
add
fs
leave
mov
hlt
loop
into
pop
push
and
fidivs
inc
sbb
lret
outsl
jno
add
sahf
in
lea
std
loope
jle
adc
mov
mov
rol
add
sub
inc
and
adc
arpl
aad
das
jmp
push
jbe
mov
clc
hlt
cmpsl
jbe
mov
adc
dec
js
arpl
mov
cld
sbb
pop
sbb
cltd
imul
shll
int
aaa
cmp
inc
ja
inc
xchg
shrl
jmp
fwait
mov
push
push
lcall
jae
mov
enter
mov
ja
sbb
jp
push
mov
int3
lods
movsl
fistl
add
and
or
push
inc
xchg
fmul
mov
pop
adc
inc
sub
xor
inc
es
mov
movsb
fnsave
lret
mov
and
xchg
jl
inc
fstpt
loop
mov
ret
icebp
sbb
xchg
clc
gs
xchg
iret
mov
notl
mov
inc
pop
or
add
xchg
shll
jg
adc
add
addb
aad
jae
add
out
mov
add
jno
xchg
add
adc
xchg
mov
in
les
jecxz
cld
jge
pushf
loopne
js
movsb
mov
hlt
fwait
loope
or
inc
insl
push
cs
stos
jl
pop
push
adcl
inc
loope
mov
test
or
dec
pop
push
std
mov
jmp
xchg
mov
repz
test
ja
dec
inc
or
cmpb
mov
dec
cwtl
rolb
push
mov
jecxz,pt
or
dec
stc
xchg
sbbl
in
cltd
dec
aas
adc
sub
dec
adc
mov
xor
cmp
adc
flds
cmp
pushf
in
push
xor
add
jecxz
ja
sub
xor
gs
stc
or
orb
out
push
scas
push
jle
sbb
sbbb
pop
std
int3
cmp
adc
pop
in
mov
shll
jae
mov
push
daa
dec
and
fisubrs
mov
mov
mov
icebp
les
cmp
adc
jecxz
dec
pop
cmpsl
je
cmp
add
cmpsb
out
inc
push
jg
cmp
or
fs
adc
cmpsw
fcoms
loopne
jg
mov
insb
adc
mov
mov
loop
jl
inc
sbb
js
sti
dec
pop
rolb
adc
int3
sarl
js
into
xor
cmp
jae
jne
mov
iret
fidivl
fwait
sub
dec
fcomp
cli
sub
push
into
inc
xor
xor
add
inc
inc
test
into
fmul
sbbl
insb
scas
jae
aam
cmp
cmpsl
kmovd
adc
sub
dec
out
jo
int
pop
int3
xchg
ror
inc
insl
in
mov
negb
cmp
shll
jo
cmpsl
adc
sete
mov
push
fldt
add
xchg
in
jmp
gs
loopne
mov
ret
es
bound
mulb
mov
mov
popf
bound
in
jl,pt
imul
push
cmpsl
push
jne
pop
mov
mov
test
adc
std
jmp
mov
lock
roll
xchg
jb
pop
movsl
dec
push
js
aad
xchg
mov
cmp
mov
pop
dec
sub
cs
xchg
xchg
push
sti
das
sub
inc
jb
sub
jno
and
or
and
movsl
jns
pop
and
jb
pusha
jg
jno
jo
leave
repnz
add
lds
imul
mov
push
test
push
xchg
adc
and
and
lret
sub
repz
test
data16
mov
repnz
add
cli
xchg
jno
js
adc
test
jbe
into
jnp
cmp
mov
push
aas
jge
inc
in
stc
inc
je
ljmp
jmp
les
test
jae
lea
repnz
jl
or
aam
inc
jle
les
pop
push
stc
sub
xor
lods
sub
xor
xor
jne
mov
xor
xchg
daa
adc
pop
adc
push
dec
lcall
inc
pop
dec
popl
mov
jmp
cmp
cmp
sub
ja
popa
lidtl
sub
bound
je
lret
and
push
leave
popf
add
xchg
inc
lret
dec
push
pop
out
adc
lds
mov
adc
sbb
xchg
xor
push
dec
clc
rolb
sbb
sub
mov
in
push
les
ffreep
add
sub
mov
cli
xor
push
sub
ds
push
add
pop
add
in
insb
stos
sbb
push
addb
shrb
movsb
pushf
and
jecxz
mov
inc
lock
jno
idivb
pop
das
xchg
es
or
inc
mov
fdivrl
add
in
pop
adcb
clc
repnz
xchg
push
andl
mov
in
lret
pop
mov
movsb
aaa
ja
icebp
mov
adc
mov
cmpsb
mov
mov
mov
cmp
insl
in
in
jno
aaa
in
sbb
sub
jmp
insb
cmp
cmp
push
xchg
xchg
loopne
and
add
mov
in
push
or
sbb
and
or
dec
imul
cltd
shl
dec
ds
hlt
in
jl
adc
xor
adc
in
pop
scas
lret
mov
ljmp
inc
cwtl
dec
adc
mov
lods
shll
mov
bound
mov
cmp
fdivl
jmp
loop
sub
adc
push
fbld
xor
and
cmp
outsb
outsl
cld
subl
mov
fists
adc
push
test
es
pop
aam
ss
adc
sbb
jmp
decl
aad
outsl
call
mov
mov
pop
and
pop
sub
add
fisubs
mov
ds
cli
pop
pushf
shrl
int
ss
outsl
and
pop
jbe
lret
sub
xor
je
adc
rclb
enter
adc
xchg
cmp
sbb
xor
sub
mov
out
or
mov
insb
and
jns
insl
sti
cmp
gs
inc
xchg
dec
sbb
push
mov
notl
jle
sub
icebp
arpl
adc
dec
xchg
repz
add
lcall
lods
inc
and
cs
orb
dec
pop
in
dec
cvtpi2ps
xor
push
cmp
lods
rcr
loope
sub
shl
adc
and
loope
pop
fs
gs
adc
ja
fdivrs
ja
pop
enter
shll
fidivs
cmc
or
mov
out
sahf
add
mov
push
and
fnstsw
sahf
xor
out
adc
cmp
mov
mov
pop
arpl
mov
pop
aad
mov
jle
add
je
push
push
clc
dec
cld
shl
imul
xchg
push
repz
adc
sub
hlt
adc
add
rcrb
dec
out
xchg
push
mov
cmp
sub
insb
pop
cs
mov
hlt
add
and
mov
dec
sahf
xchg
pop
add
dec
cmp
xor
or
adc
add
push
fmull
xchg
lods
pop
inc
cmp
jbe
push
push
and
pop
hlt
sbb
rcrl
inc
or
and
popf
das
mov
sub
sbb
and
in
push
xchg
insl
dec
rcl
test
xchg
inc
sbb
adc
push
xor
das
sbb
fsubp
pop
pop
out
jmp
jecxz
in
inc
jno,pt
repnz
sub
sub
and
lret
ljmp
clc
in
pop
sahf
xor
lret
nop
add
popf
popf
dec
stc
jmp
jg
out
jmp
cmpsb
inc
mov
dec
in
add
xor
xor
push
inc
jl
fs
sbb
lret
insb
jle
inc
fs
les
xchg
jecxz
jmp
nop
adc
and
data16
dec
and
sbb
mov
gs
and
cmp
and
xchg
nop
jnp
cwtl
test
cmpsl
movsl
xor
lret
pushf
cs
fisttps
repz
aad
std
aas
leave
inc
sbb
mov
xchg
mov
in
rcr
mov
cmp
dec
mov
sbb
es
mov
or
test
out
rcrl
ret
push
or
sbb
dec
push
icebp
and
jge
rorl
or
pop
mov
sub
loop
jp
dec
jnp
sub
sahf
mov
and
jge
xor
adc
push
int3
loopne
mov
lea
dec
adc
subl
arpl
adc
in
and
mov
jl
or
out
out
js
mov
inc
dec
sub
mov
fmull
pop
jle
js
outsl
addb
xor
lret
mov
and
xor
cs
inc
xchg
scas
sar
add
xchg
les
and
incl
xchg
es
and
cmc
mov
mov
clc
dec
xchg
bnd
lock
jge
mov
mov
xchg
test
or
ds
push
cmp
mov
cmp
jp
sub
sbb
in
popa
out
test
fisttps
jle
sub
or
adc
cmp
dec
aas
mov
leave
je
popf
icebp
out
adc
ss
pop
fwait
sbb
stc
push
inc
ret
mov
lock
into
outsb
mov
inc
iret
dec
mov
cmp
fsub
push
push
movups
jne
dec
or
cmpsl
mov
dec
dec
sub
inc
bnd
mov
pop
adc
hlt
sahf
push
sub
sbb
outsb
lret
out
mov
mov
jae
in
pusha
adc
pop
jnp
pop
loop
cmpsb
cmp
dec
add
add
lret
xchg
dec
fdivrs
shlb
mov
pop
push
cmpsl
loop
push
add
adc
jne
cmpsb
test
push
xor
push
das
mov
mov
push
mov
add
xchg
scas
adc
cld
jae
pusha
mov
int3
mov
test
jbe
xchg
xor
adc
cmp
sub
stc
push
lock
mov
sahf
cli
or
and
pushf
mov
ja
adc
out
cvttps2pi
test
dec
fisubrl
out
push
push
cmp
push
push
mov
mov
and
pop
arpl
push
add
lcall
scas
dec
xlat
cmp
adc
xorl
into
or
ret
sub
out
mov
push
adc
pop
push
mov
pop
cmp
out
xchg
mov
mov
cmp
mov
and
sar
dec
xor
xchg
xchg
sbb
aam
adc
pop
int3
mov
add
pusha
jl
mov
push
xchg
jbe
mov
xacquire
inc
jne
lcall
mull
les
jmp
scas
pop
dec
sub
sub
int
fidivs
aas
movsb
sbb
repz
loop
ror
xlat
xchg
and
dec
jne
fisttpl
es
out
dec
mov
mov
fldt
out
mov
lret
jo
push
stos
cwtl
sbb
push
addl
test
test
jns
sub
inc
xchg
xor
push
mov
sahf
adc
iret
xchg
mov
cmc
or
fstl
lret
inc
cmp
mov
mov
out
pop
add
sub
shll
or
xor
data16
or
inc
call
out
call
and
or
inc
cmp
ss
fdivr
xor
cltd
cld
out
out
std
dec
fwait
sbb
cs
popl
out
push
rorl
jp
cmp
outsl
or
out
lret
frstor
aam
pop
push
xchg
std
jns
push
pop
pop
aad
sub
dec
mov
scas
jge
mov
jno
xor
nop
xchg
cmpsl
cli
pushf
pop
sar
rcll
clc
cwtl
mov
sbb
or
stos
in
arpl
nop
aam
sar
pop
enter
jb
pop
push
jne
adc
inc
fimull
pop
mov
xor
imul
aaa
out
aas
push
or
lock
mov
out
adc
sub
pop
aas
jecxz
and
mov
leave
div
mov
push
imul
mov
xor
lea
pop
mov
sbb
mov
mov
mov
test
jp
dec
mov
pop
or
push
mov
push
push
cmpsb
test
mov
sbb
dec
jnp
jp
pop
divb
in
call
push
pop
jge
int
jecxz
cmp
out
daa
jno
movsb
aas
add
xlat
outsl
pop
inc
notb
pushaw
aas
xor
cmp
cmp
repnz
lcall
add
sub
cli
inc
repz
mov
or
leave
jmp
xorb
adc
jp
leave
fdivr
and
test
pop
pusha
inc
inc
jge,pt
inc
inc
jo
jp
dec
fwait
int
cltd
popa
insl
and
loop
dec
fistps
sub
jo
jge
stos
sbbb
jle
fidivl
cmp
pop
pop
js
ljmp
sbb
shlb
sbb
or
mov
rcll
or
stos
pop
or
lret
jmp
xor
add
xorl
inc
and
pop
es
lcall
imul
or
data16
loopne
mov
stos
sahf
in
jo
fidivs
cmp
xchg
flds
sbb
xor
aam
mov
lahf
lock
jnp
mov
dec
leave
mov
inc
add
mov
and
mov
shrb
pop
inc
ret
cmp
cmpsb
pop
lret
mov
roll
xorl
mov
negl
imul
in
pop
pop
mov
test
and
decb
insb
loop
mov
lret
xchg
inc
outsb
outsb
sub
mov
enter
addr16
dec
ss
call
loop
dec
mov
test
add
cld
jae
sub
fcmovu
outsb
into
add
mov
mov
and
mov
fisubrs
xchg
xor
dec
push
cld
addb
mov
dec
call
cmpsb
in
mov
push
cmp
jl
imul
add
jge
mov
jb
jle
loopne
sahf
das
add
xchg
vpaddsw
sub
js
push
pushf
mov
fsubrl
xor
mov
mov
in
ds
sub
ss
xchg
xchg
inc
sarl
dec
xorl
mov
outsl
mov
inc
xchg
mov
cmp
pop
outsl
xchg
push
rcll
add
mov
shll
jecxz
xchg
cmp
outsl
in
or
and
mov
ret
fnstenv
dec
jbe
dec
int3
mov
jge
mov
mov
mov
mov
mov
stc
sub
mov
lret
mov
jle
mov
ret
sbb
add
and
test
jne
add
rolb
cld
push
ficoms
lea
sahf
sub
into
push
jp
mov
mov
ds
incl
mov
xor
add
dec
ret
mov
test
jne
jb
or
jbe
jns
cmc
fildl
push
jecxz
pop
in
dec
and
lods
mov
and
dec
loopne
mov
jnp
push
push
jp
mov
pop
sub
jp
icebp
es
or
mov
sbb
push
ss
inc
sub
add
sar
lret
hlt
lahf
imul
mov
mov
pop
pop
adc
jb
xor
loopne
in
lea
mov
adc
jg
test
cmp
xchg
push
mov
adc
xchg
xchg
sbb
jnp
add
pop
cmp
xchg
imul
jmp
push
flds
jno
adc
mov
loop
loop
shlb
mov
lret
cwtl
xchg
aam
mov
out
in
and
shll
inc
in
cmpsb
ret
mov
sub
push
mov
and
pop
inc
fnstsw
movswl
sbb
jo
jnp
add
and
pusha
push
push
push
inc
push
or
mov
cmp
adc
mov
test
out
subb
xchg
es
in
add
push
mov
jecxz
pop
adc
in
xchg
fnstcw
fwait
rclb
pop
divl
add
add
adcl
js
xchg
jle
sahf
or
inc
cmc
xorl
jno
icebp
mov
out
xor
fmuls
data16
push
mov
xor
mov
xorl
js
inc
sbb
add
pop
imul
lods
jmp
sbb
mov
in
icebp
mov
mov
cmpsl
fsts
mov
push
mov
rcrb
jo
sbbl
icebp
mov
insl
push
aaa
adc
xchg
lods
dec
add
dec
in
scas
mov
js
in
pop
push
aad
shll
mov
les
dec
jo
ret
es
test
lods
mov
aaa
daa
js
xlat
pop
jae
inc
stos
lret
adc
mov
iret
shlb
stos
inc
lahf
inc
adc
push
rcrb
jge
stos
or
jae
addr16
cltd
rcll
inc
cmp
xchg
dec
stos
aam
sub
aad
push
adc
loopne
jmp
stc
icebp
shlb
push
lods
inc
mov
dec
lahf
pusha
push
xor
popl
add
icebp
leave
pop
fbstp
mov
push
ret
iret
cltd
fstpt
js
fdivrp
jae
aaa
lods
aam
adcb
fwait
test
mov
ja
xchg
cld
mov
iret
mov
jmp
subb
decb
and
add
push
pop
divb
jecxz
jg
jnp
pushf
lods
fildl
and
mov
xchg
jecxz
rolb
mov
add
in
pusha
fnstenv
pop
fistps
out
jl
popa
leave
cmpsl
add
fbstp
or
out
lcall
js
sub
add
fstl
cmpsb
and
sbb
mov
inc
mov
cmp
aaa
and
dec
bound
dec
xlat
cmp
fdivl
push
sbb
push
loop
jno
inc
and
dec
addr16
test
push
js
jge
stos
mov
aam
clc
repnz
imul
fs
movsb
aam
adc
rcr
push
inc
jmp
cmp
and
idivb
pop
xchg
pop
pop
xchg
leave
pop
cltd
rclb
popf
cmp
scas
mov
aas
iret
fildl
incl
add
jae
or
inc
or
js
dec
out
int3
jb
and
cmc
xor
mov
jns
push
pop
iret
or
aaa
out
roll
xchg
mov
lahf
dec
cmpl
inc
mov
add
mov
andl
fdivrl
pop
mov
insb
jg
jle
cmpsb
mov
cmp
fcompp
or
xor
les
xchg
stc
out
leave
cmp
bound
das
fisubrl
mov
lds
scas
addl
mov
sbb
dec
xchg
push
stos
sub
adc
mov
jno
fs
daa
jo
loopne
sti
pop
in
iret
mov
leave
push
inc
nop
mov
jb
fs
adc
or
iret
in
adc
das
lcall
ja
push
je
mov
cld
xor
mov
outsl
pop
push
es
es
fldcw
mov
push
or
divl
orl
pop
adc
loopne
clc
addr16
clc
aad
fistpl
dec
add
cmpsb
rcrl
xchg
cltd
xor
lea
push
sbb
shlb
inc
inc
lret
and
shl
pop
cmp
inc
cltd
jb
fcomi
adc
mov
push
xor
rcr
rcrl
scas
dec
into
test
sub
mov
jg
nop
xlat
icebp
and
sbb
rcll
pop
mov
add
shl
xor
inc
inc
fcomps
test
inc
or
jnp
imul
lret
das
sbb
fldenv
sub
xchg
out
add
pop
mov
cmp
sub
cwtl
lds
mov
xchg
mov
fistpl
in
add
fnstenv
rcl
dec
aam
adc
fwait
push
or
or
add
movsb
xchg
jae
mov
pushf
stc
stos
test
adc
mov
sarb
pop
out
loop
dec
popf
xor
ret
bound
jo
fstp
in
or
aas
push
insb
jl
sbb
pop
inc
icebp
pusha
xor
mov
idiv
push
add
lods
cmp
or
ss
xchg
loope
orl
adc
mov
inc
push
jp
lea
jb
mov
and
add
inc
xor
mov
xchg
std
adc
sbb
cmpsl
and
mov
cld
iret
mov
ret
outsb
and
divb
pop
cmp
and
pusha
push
and
jg
add
sub
lock
mov
sbb
popf
xchg
and
repz
in
jle
fnsave
mov
pop
add
add
add
out
enter
mov
mov
and
jmp
push
inc
shll
mov
hlt
jb
lods
in
ss
xchg
lahf
pusha
xchg
mov
mov
mov
xor
push
fnsave
jnp
dec
loope
add
or
and
lret
out
and
scas
out
in
movb
adc
inc
xor
out
xor
hlt
push
push
mov
mov
fcoms
pop
test
dec
dec
jp
insl
dec
rcll
test
nop
cmp
loopne
std
mov
xchg
inc
push
push
mov
inc
mov
mov
sbb
popf
mov
shrb
pusha
mov
mov
push
les
xchg
lock
add
in
jbe
enter
pop
xchg
dec
inc
inc
inc
sbb
insb
or
sub
ds
out
add
add
imul
sub
stos
outsl
in
in
stos
sub
insl
ds
and
mov
sbbb
inc
xchg
sbb
in
pop
xchg
xchg
inc
fisttpll
or
pusha
pusha
push
or
xchg
add
pop
mov
cli
fsts
repz
push
jg
adc
fcmovne
mov
lea
aad
outsl
push
adc
push
dec
jo
sbb
or
adc
sbb
pop
cmp
scas
popa
mov
insb
imul
mov
mov
xchg
mov
mov
push
xchg
fwait
mov
nop
add
mov
imul
mov
addr16
or
adc
mov
jg
rcr
sbb
ss
sub
das
mov
and
push
jmp
les
cmp
jno
in
xor
adcb
sub
sbb
pushf
and
into
scas
xchg
xchg
cmpsb
jo
icebp
data16
aas
lock
xchg
data16
imul
loop
inc
pop
push
pop
inc
fistps
dec
or
push
cmp
movsb
ret
xor
adc
cmpsb
in
jo
inc
daa
into
and
jns
adc
in
fwait
pop
pop
mov
push
loopne
xchg
adcl
cmpsb
outsl
lret
aaa
fmulp
pop
popa
inc
adc
cmc
jp
lds
lods
aam
roll
pop
xor
lea
mov
dec
stc
adc
mov
xchg
jns
iret
inc
push
ret
jge
inc
adc
sub
fs
roll
pushf
push
and
and
jo
and
adc
jns
fwait
jl
xor
loop
outsb
int
and
outsb
dec
or
shlb
in
fisubl
pop
inc
test
cltd
or
out
aaa
jmp
jle
add
sub
mov
aad
jae
icebp
out
xchg
jne
dec
pop
mov
add
push
and
adc
pop
rol
push
in
cmp
aad
xchg
push
pushf
adc
ret
mov
loopne
push
pop
sti
repz
test
les
xchg
xchg
lods
or
int
jns
jp
mov
jo
jge
xchg
adc
push
inc
cwtl
fimull
jecxz
enter
data16
push
cmp
sub
je
out
dec
inc
pop
push
pop
inc
in
aam
outsl
mov
push
jb
dec
jo
xchg
dec
out
gs
lahf
mov
dec
callw
andb
arpl
int
mov
loopne
test
aaa
mov
xor
sbb
out
pop
decl
jecxz
cs
mov
adc
and
mov
jmp
fs
xlat
inc
sbb
bswap
sub
jno
or
and
push
popf
or
cld
out
outsb
pop
inc
orl
outsb
imul
outsl
cld
je
mov
lea
add
mov
mov
mov
xor
add
les
rolb
jmp
movsb
iret
fcomp
rol
sbb
mov
popa
in
fnstcw
dec
pop
sub
pop
cmpsl
add
test
imul
popf
jnp
lea
aad
sbb
inc
cmp
imul
dec
jne
xor
add
ret
inc
mov
les
in
add
lret
adc
or
jb
fs
aas
sbb
int
mov
insl
cs
iret
xchg
adc
jle
loopne
pop
dec
lret
xor
into
xchg
testl
sahf
jo
push
decb
dec
pop
mov
add
loopne
je
fmuls
adc
mov
daa
jg
jl
cmp
cs
mov
cli
adc
cmp
jp
mov
lock
popa
pcmpgtd
xor
push
loope
mov
enter
sbb
add
or
xchg
mov
mov
inc
jl
mov
mov
fwait
loope
sub
popl
push
popa
mov
xchg
movsb
outsl
adc
mov
push
xchg
mov
out
sbb
or
movsb
outsb
xchg
fcoml
dec
sarl
xor
shl
xor
cwtl
pop
adc
dec
add
mov
popf
xorb
mov
pop
jnp
xchg
push
mov
movsb
outsl
cltd
sub
cmp
and
and
subl
add
push
jae
push
pop
xor
cmp
mov
inc
push
mov
add
add
fiadds
push
rcrb
test
xor
clc
faddp
int
push
clc
lcall
mov
fimull
iret
xor
pushf
mov
adc
xor
dec
pop
mov
pop
mov
push
std
rcrl
shlb
push
jmp
sub
inc
iret
repz
mov
adc
movl
sub
clc
clc
mov
bound
pop
rcl
jne
testl
movsb
mov
jge
push
imul
xchg
cli
js
xchg
mov
sarb
imul
in
mov
inc
fnsave
jns
inc
adc
out
push
or
cld
jge
cmp
lretw
xchg
ret
cs
sbb
xchg
mov
jns
es
in
mov
xchg
add
pop
jl
test
int
lcall
sub
cmp
jg
test
stos
call
scas
ficompl
dec
rol
xor
scas
push
scas
sahf
push
adc
mov
and
jb
test
mov
mov
add
add
mov
sub
xchg
stos
std
out
xor
dec
lahf
fwait
loopne
out
sbb
xor
jno
fwait
je
int
jae
sub
sti
fdivs
mov
in
add
cwtl
inc
push
mov
xor
xor
andb
adc
fwait
xchg
ljmp
add
sahf
xchg
pusha
ror
std
scas
cltd
adc
repz
push
icebp
sti
les
mov
into
push
jl
fdivr
scas
insb
xlat
and
jo
fisubrl
sbb
int
push
fildll
add
data16
push
idivb
push
aas
sti
and
mov
cmp
pop
cwtl
nop
pushl
jne
xchg
pop
cs
mov
fcomip
lret
jae
sbb
hlt
xchg
or
sbb
pop
dec
lret
xor
stc
jle
into
cmp
fimuls
bound
cmovns
je
rcrl
mov
movsb
pop
sub
add
je
scas
push
mov
or
pop
pop
pop
cli
in
pop
cltd
mov
ja
iret
pushf
lret
test
ret
stos
xchg
fcom
fcmovbe
and
enter
pop
xchg
adc
dec
dec
xlat
popa
mov
je
sbb
pop
sar
dec
lret
jge
rcrl
jae
in
cwtl
xchg
mov
lcall
in
mov
xor
dec
dec
adc
push
mov
mov
imul
repnz
dec
cmp
push
imul
inc
adcb
pop
or
lods
test
in
xor
adc
bound
shll
pop
stc
gs
inc
clc
loop
jecxz
iret
test
sub
jl
mov
mov
hlt
push
jl
push
xchg
cmpsb
mov
stos
xchg
enter
loopne
imul
jge
xchg
mov
out
fcomps
in
xlat
jmp
ret
cvtps2pi
mov
sbb
cmpsl
add
xor
dec
dec
std
jbe
add
push
push
xor
fsubr
imul
xor
ds
inc
xor
cmp
mov
push
popa
in
adc
jge
cmc
sub
aas
inc
sti
gs
dec
cmp
mov
push
lea
jno
or
ja
cmp
popa
cli
fisubl
out
cwtl
cwtl
push
adc
xor
les
cmp
scas
jae
inc
push
push
mov
testb
stos
ret
out
xchg
imul
xor
insb
repnz
lcall
test
das
aad
push
cmpsl
es
fs
jbe
lods
ljmp
jae
sbb
adc
movsl
inc
fwait
sbb
or
out
dec
mov
xor
jl
inc
cmc
mov
lods
mov
xlat
mov
and
aam
fdivl
mov
lock
sbb
loope
ficomps
sti
push
sbb
ja
pop
push
ret
imul
pop
sub
in
pop
inc
lea
int
mov
pop
insl
pop
nop
sub
bound
dec
mov
aam
jb
pop
stos
orb
bound
sub
lretw
mov
inc
int
ja
xor
ret
mov
adc
lret
mov
out
cmp
sub
push
loop
pop
jle
pop
cmp
mov
sub
sub
ja
nop
sahf
xor
and
mov
loop
mov
sub
shl
mov
push
inc
push
mov
jae
scas
or
clc
sub
mov
lea
dec
lcall
adc
push
add
addb
in
xchg
insl
ret
test
jae
mov
or
lock
xchg
and
sub
aad
mov
dec
int
sub
push
push
jge
push
fisttpl
in
mov
mov
xchg
cmp
subb
movsb
insb
aaa
mov
inc
in
dec
in
aam
dec
sbb
jp
ja
mov
cli
dec
loopne
test
mov
cmpsb
shlb
xor
clc
dec
shll
push
push
in
add
mov
jnp
xor
mov
jmp
shr
fcompp
pop
pop
adc
push
or
mov
js
sbb
mov
add
cwtl
lods
inc
into
outsb
ljmp
sub
inc
xchg
jb
push
push
sbb
dec
mov
pop
add
and
test
pop
imul
xor
jbe
push
out
push
xchg
xchg
daa
outsb
test
sub
icebp
mov
daa
push
repz
leave
sbb
rorl
add
fcmovu
insb
int
icebp
push
inc
dec
dec
repnz
addl
sub
fdivl
sti
xor
fldt
jns
mov
aaa
cmp
mov
addr16
push
lock
adc
xchg
sub
repnz
jno
sub
mov
push
sub
popa
jnp
packsswb
aas
xchg
ds
push
push
and
sub
xor
movsb
lcall
add
push
stos
cmpsb
mov
inc
fcmovnb
inc
jl
add
je
mov
popf
ss
inc
adc
outsl
jmp
outsl
lcall
test
push
shl
push
lods
lock
or
inc
xlat
push
and
imul
push
mov
push
push
rcrl
loop
popf
sahf
and
fstps
xchg
adc
inc
sbb
and
fcoms
in
sub
pop
sub
add
dec
andb
imul
aam
pusha
and
insl
je
jb
sti
adc
dec
inc
or
push
stos
std
and
je
mov
jmp
or
cmc
and
pop
jmp
mov
or
in
push
call
mov
ror
or
stos
push
orl
in
push
rcrl
jl
adc
test
mov
inc
cmp
repnz
test
inc
cmovp
xchg
fs
push
xor
pop
push
push
fmuls
mov
xchg
out
pop
add
scas
es
rcl
add
repz
jp
test
add
push
jle
sub
and
fistl
outsl
xor
mov
adc
push
fisubs
cld
xchg
mov
lea
aaa
mov
enter
inc
mov
sbb
lret
addl
push
shll
jl
sub
and
jmp
inc
sbb
mov
push
dec
cli
imul
js
cld
popa
mov
icebp
dec
xlat
shll
gs
sbb
push
jp
aaa
sbb
fdivrp
fiadds
hlt
or
push
popa
and
xlat
xor
in
scas
dec
aad
adc
fwait
xlat
push
cmp
cmp
rolb
orl
mov
sub
in
inc
push
push
testb
ret
inc
inc
mov
pop
imul
outsl
lea
inc
adc
push
fstl
lret
ds
mov
sub
mov
enter
sbb
fistpll
pop
sar
add
cmpl
lret
cmp
cmpl
call
enter
xchg
aad
push
bnd
xor
cmpsb
test
pop
adc
pusha
scas
mov
sbb
add
popa
mov
lahf
push
add
sarb
cltd
xchg
inc
leave
imul
push
jmp
adc
rorb
mov
loop
lahf
in
push
xchg
push
adc
es
mov
inc
push
int3
dec
js
adc
in
jmp
outsl
subl
dec
mov
sbb
ds
dec
add
cmp
mov
incb
push
sbb
loop
cmp
cmpsb
xor
faddl
adc
jbe
cmpsl
jmp
sub
popf
rcrb
inc
or
adc
xor
push
decb
push
out
leave
sbb
inc
xchg
mov
pushf
mov
inc
notl
mov
test
movsl
lods
dec
push
sub
clc
mov
push
fcmove
dec
lods
iret
xchg
xor
je
loop
and
es
test
int3
jle
push
add
rcll
sbb
rorb
enter
cmc
popa
pop
test
mov
mov
popa
arpl
pusha
ret
jp
xchg
loope
inc
loope
fwait
inc
aam
push
sub
xchg
ss
enter
mov
push
add
add
and
cmp
pushf
xchg
daa
test
sbb
ret
mov
cmp
mov
inc
dec
jb
dec
movsl
imulb
pop
jp
xchg
xor
out
xchg
shl
and
cli
cltd
iret
sbbl
pop
mov
lcall
aad
iret
mov
lcall
mov
sbb
push
lods
inc
repz
sub
in
sbb
xor
jle
mov
loop
and
jno
test
inc
push
adc
cmp
jmp
xor
in
movsb
fsubl
into
ds
aaa
dec
daa
mov
scas
mov
or
enter
or
into
dec
xor
sbb
adc
jbe
xor
sti
movsl
enter
iret
push
xchg
call
cmp
enter
jae
mov
mov
loope
cmp
cltd
lahf
into
insl
je
out
outsl
inc
pop
hlt
jo
ljmp
mov
cmp
or
mov
or
xchg
xor
ss
call
loope
push
rcl
xchg
dec
pop
fs
es
test
push
cmpsl
cmpb
jl
add
js
pop
rcrl
int3
adc
push
lahf
test
pop
and
push
cmp
jecxz
pop
cmp
daa
mov
int
and
sub
adc
aad
push
and
divl
cld
cmp
push
aas
push
les
jmp
aad
jb
mov
cmp
outsl
inc
outsb
movsl
fldl
mov
std
lods
push
push
std
xchg
std
addl
dec
repz
jecxz
jno
sbb
xchg
decl
xchg
or
pusha
scas
mov
aam
cs
jb
add
push
push
xor
leave
cltd
cmp
scas
mov
or
in
repnz
inc
inc
pop
pop
arpl
mov
inc
push
imul
jnp
or
inc
mov
jg
out
mov
inc
out
add
jmp
and
mov
jmp
popf
jecxz
sbb
fdivrs
mov
nop
movsb
das
cs
call
out
lcall
jnp,pn
mov
sti
mov
xchg
or
daa
add
add
mov
pop
sub
lret
xchg
mov
rclb
inc
cltd
or
sub
leave
fsubs
mov
sub
and
or
test
sbb
in
adc
daa
ss
insb
in
sbb
sub
jns
mov
pushf
sbb
pop
mov
rorl
sub
fldl
sbb
add
pop
mov
hlt
jge
inc
inc
and
cltd
add
mov
dec
dec
sub
inc
loopne
popf
ja
insl
pusha
cmp
cli
xor
shll
lahf
sbb
jns
fnstsw
enter
cmp
mov
pop
lret
mov
mov
loop
push
jg
loopne
mov
xor
push
sub
or
clc
push
stc
lret
inc
xchg
stos
lretw
test
lret
stos
mov
sub
add
stos
sbb
scas
ret
and
lret
sbbl
vmwrite
inc
lock
xchg
jno
xchg
push
bound
scas
push
cmc
dec
pop
notl
adc
iret
fstpt
outsl
adc
test
cli
loope
push
xchg
or
xchg
test
pop
cmp
mov
mov
sub
cmp
call
mov
jb
dec
pop
aas
daa
dec
xchg
repz
out
imull
mov
shlb
js
push
pop
or
repz
lahf
iret
add
mov
rclb
mov
xor
pop
adc
pushf
lock
mov
imul
or
xchg
imul
lea
imul
xor
mov
cltd
mov
fiaddl
std
dec
int
rorl
and
push
push
mov
push
add
gs
je
stc
cltd
pop
ret
or
and
dec
es
cmp
jne
and
jnp
loope
les
cltd
pop
pusha
lods
hlt
sbb
mov
inc
ficoms
stos
ja
xchg
insl
jecxz
shll
mov
cwtl
pop
cmp
daa
sahf
sbb
pop
adc
arpl
pop
test
ja
mov
and
imul
mov
lahf
pop
dec
adc
xor
adc
push
les
pop
das
jns
or
jnp
or
fcomps
pop
push
dec
push
inc
mov
das
test
push
lods
mov
lods
add
pop
mov
dec
clc
mov
cmp
xor
pop
loopne
shll
cmp
mov
scas
out
lods
ret
cmc
loopne
sub
cwtl
push
movsl
jp
push
in
mov
dec
jbe
nop
or
cmp
xor
addb
clc
ret
cltd
add
cltd
test
jns
lock
jmp
in
push
insb
cmc
inc
popa
into
les
inc
cmp
in
xchg
jle
xlat
xchg
fs
add
outsl
inc
mov
xchg
hlt
mov
and
push
xchg
mov
mov
in
push
daa
ljmp
jp
mov
cmpsl
sbb
mov
pop
ret
fcompl
addr16
outsb
imul
pop
dec
push
xchg
into
cmp
sarb
jecxz
movsl
ja
in
ja
test
xlat
sar
test
add
and
cli
in
fdivr
dec
xchg
xlat
dec
adc
stos
lahf
out
mov
fsub
xor
lahf
or
jg
xor
loopne
insb
leave
shr
cmp
or
sub
dec
je
mov
mov
stos
push
pop
andl
in
adc
push
pop
scas
roll
mov
or
or
inc
in
outsb
jno
ljmp
push
cli
cmp
xor
or
pop
insl
pop
aam
inc
xor
lods
ret
das
cmp
and
sbb
nop
jl
xchg
dec
mov
pop
test
pop
inc
mov
push
jl
outsl
lret
xchg
bound
or
cmp
lods
mov
shrl
pop
and
or
fisttpl
in
sbb
mov
fwait
sbb
mov
fdivs
mov
lock
mov
jmp
fmull
add
jb
dec
xchg
mov
inc
stos
fimuls
gs
mov
xchg
call
mov
xor
mov
mov
xchg
jnp
adc
mov
inc
lret
mov
mov
cltd
or
or
mov
dec
sbb
addl
ret
cld
pop
dec
bound
mov
adc
in
mov
xchg
pop
in
ret
push
mov
add
out
lret
hlt
lahf
loopne
outsb
orl
pmullw
add
repz
cmp
lret
fs
dec
jge
das
les
icebp
lds
xor
mov
leave
push
jmp
xchg
test
mov
sub
lahf
icebp
mov
or
push
xor
loope
add
movsl
cs
aas
cmpsl
mov
out
mov
into
sbb
jae
popf
out
mov
rcrb
cli
mov
xchg
mov
movsl
enter
push
pop
push
xchg
gs
pop
lahf
inc
fcompp
lods
add
stos
in
xchg
inc
xchg
mov
outsb
lret
jno
in
loope
cmpsl
dec
dec
push
inc
leave
outsl
mov
movsb
xlat
in
jo
lea
outsl
loop
cltd
and
mov
cmc
outsb
fsubl
fstpl
xchg
xchg
stc
cmp
dec
adc
sub
push
ljmp
mov
ror
ret
aaa
inc
sbb
add
mov
mov
rcrb
repz
push
inc
push
jge
roll
sbb
lods
push
mov
vmaskmovdqu
loope
jo
mov
jmp
and
fisubrl
pop
imul
sbb
movsb
popf
fmuls
fistpl
mov
sbb
aam
xor
in
rclb
jnp
add
call
ret
jo
testb
sub
xchg
cmp
sub
cmc
fildll
jl
sub
xchg
daa
push
loopne
pop
or
lods
ljmp
xor
xchg
adc
push
xor
inc
aaa
js
pushf
jne
xorb
sub
or
mov
xor
mov
dec
nop
fists
mov
lods
enter
mov
and
add
push
xchg
mov
aaa
in
sti
jmp
jl
aad
test
cmp
xlat
imul
fidivrl
or
jb
fiaddl
mov
and
cld
inc
in
mov
or
mov
xchg
les
in
lcall
mov
leave
ror
in
lods
mov
in
sub
sub
sti
pushl
fsts
outsb
push
jle
pushf
rcrb
xor
cld
pop
in
addr16
dec
inc
int3
enter
test
dec
stos
cli
leave
mov
mov
popa
aad
xor
dec
push
rclb
xor
or
repnz
mov
push
loope
sub
pop
xchg
subb
mov
pop
int3
rcll
push
hlt
jecxz
fstpl
movsl
movsl
lahf
imul
dec
pop
shlb
imul
fwait
nop
dec
aas
cmp
repz
jb
xchg
dec
std
cmp
cmpsb
outsl
mov
int
xchg
clc
test
mov
pop
ljmp
dec
repnz
add
jmp
stos
out
pusha
dec
adc
call
in
or
test
movsl
movsl
sbb
int
rcrb
stos
mov
mov
xor
jp
lcall
idiv
mov
movsb
rclb
dec
jle
int
sbb
mov
fs
xor
cmp
int
ss
lods
mov
in
push
lret
or
cmp
rcrb
pushf
in
sbb
aad
lcall
adc
dec
or
dec
leave
add
movsb
inc
cmc
sub
movsb
jmp
add
cmp
xchg
sub
int3
ficomps
add
pop
dec
imul
mov
jg
test
leave
loop
ljmp
cli
ficoml
jae
or
sbb
mov
sti
mov
ja
push
mov
mov
push
icebp
sbb
pop
xor
dec
cmpsb
mov
push
dec
loope
ret
dec
dec
into
outsb
xor
jg
pop
leave
stos
repnz
push
aam
sub
aaa
dec
test
sub
xor
sahf
add
pop
fldenv
in
and
movsb
iret
idivb
push
mov
adc
adc
sbb
popa
test
and
and
pop
outsl
arpl
inc
and
shlb
ljmp
dec
cmp
push
cmp
pop
xlat
mov
push
repnz
pusha
jno
mov
pop
fmuls
int3
iret
inc
mov
out
push
inc
pop
xchg
leave
shr
fmuls
cli
je
shll
data16
sub
jmp
jecxz
pop
push
outsb
outsl
mov
jge
nop
je
dec
add
psubsw
mov
sub
scas
xchg
mov
pop
xchg
ror
jecxz
test
int
or
gs
movsb
jl
ss
fnstcw
push
xor
sbb
rorl
loopne
cwtl
pop
test
mov
sbb
in
sbb
inc
popa
inc
lret
lahf
inc
clc
in
rolb
push
addr16
cmp
andl
xchg
add
dec
mov
mov
mov
or
mov
cmpxchg
jb
xchg
out
inc
aad
js
insb
shll
icebp
cwtl
lret
in
lock
clc
out
out
and
or
lods
setae
push
sbb
jl
mov
cmc
pop
out
loop
test
shll
fsubrl
xchg
pushf
pop
adc
mov
pusha
push
inc
cmpl
lds
mov
push
push
cmc
sbb
ret
aad
mov
add
in
in
movsl
push
js
mov
insb
mov
aam
sahf
rol
mov
lds
xor
pop
fsubrs
shrl
rcll
xor
jne
mov
jnp
daa
int3
sbb
add
push
ds
mov
fadds
add
pop
dec
cmp
inc
xchg
out
out
pop
ja
sbb
or
push
outsl
pop
xor
and
adc
insl
mov
push
test
push
out
out
ds
and
jl
mov
fucomp
xchg
jl
jp
clc
mov
dec
mov
jmp
lods
and
ds
push
pop
inc
dec
sbb
scas
jp
jb
cmpsb
insl
inc
lret
clc
pushf
out
rorl
outsb
fs
shll
sti
stc
push
das
cs
jl
pop
sub
adc
mov
jnp
push
mov
pop
sbb
and
dec
pop
cli
mov
jl
mov
int
sub
sbb
push
mov
adc
jmp
cltd
mov
push
lock
mov
pop
jae
mov
mov
push
adc
cmp
or
int
shll
mov
sub
or
adc
fwait
add
loop
push
test
xor
xchg
les
data16
sub
xchg
sbb
scas
mov
xor
lods
cmp
rol
nop
inc
push
cmp
fldcw
sbb
cwtl
nop
mov
lahf
sub
xor
lahf
js
adc
mov
insl
enter
jns
fadds
lock
in
and
jmp
orl
mov
mov
in
stos
movsb
ret
imul
movsl
inc
jne
xchg
xor
ret
outsb
daa
enter
stos
dec
mov
out
inc
mov
call
aaa
xor
xor
js
xor
sahf
mov
mov
push
add
sub
std
push
cmp
push
lock
or
jl
ss
adc
add
aad
cmp
and
rorb
mov
sbb
or
dec
test
in
jl
or
cli
les
mov
call
pop
adc
fcomip
ljmp
dec
ss
jo
inc
xchg
pop
pop
mov
xor
inc
scas
push
or
sbb
jmp
mov
iret
or
test
lods
push
mov
mov
rorl
jmp
jne
roll
call
sbb
push
dec
out
add
or
mov
sarb
notb
xor
test
jno
sbb
xchg
ja
mov
mov
xor
mov
cwtl
rcr
lds
pop
pushf
clc
iret
stos
pop
pop
aaa
dec
scas
and
push
jns
mov
push
scas
xor
mov
jmp
mov
jmp
in
pop
xor
mov
add
push
clc
sbb
int
sbb
push
aas
jns
sbb
fdivl
mov
shl
push
fldenv
or
and
fsubr
adc
inc
mov
cmp
push
lods
dec
inc
push
add
mov
push
xor
lret
in
test
pop
aaa
lock
fprem
pop
xor
and
int
in
mov
pop
insl
mov
daa
and
jl
decl
lods
push
dec
add
inc
sub
je
aam
jnp
int3
out
lea
shll
mov
push
lcall
jmp
sbb
sti
sbb
and
in
in
cmp
gs
push
push
fldcw
fisttps
fs
mov
outsl
pop
out
xchg
pusha
cmp
adc
leave
lret
mov
in
push
faddp
pop
xor
orl
or
or
lock
mov
movsb
aam
dec
push
pop
fs
inc
es
push
xor
xchg
sbb
aam
inc
in
negb
scas
mov
mov
popf
pop
push
shl
xchg
loope
fdivr
test
mov
dec
push
idivl
movsl
aas
out
loope
test
fiaddl
jnp
pop
dec
pushf
xor
dec
sbb
leave
or
shrd
andb
hlt
movl
shrd
test
shr
pop
mov
sub
xor
add
push
es
xor
and
adc
adc
jmp
jmp
mov
add
subl
enter
sahf
loope
cli
xor
jbe
test
out
mov
xor
pop
sub
dec
cmp
jae
sub
xchg
push
or
xchg
lds
mov
pushl
daa
mov
loop
les
jno
mov
pop
sti
xor
xor
insb
lods
mov
jnp
rorl
mov
xchg
inc
push
inc
dec
imul
fbstp
jmp
imul
pop
aas
inc
push
push
cwtl
pop
test
aam
cmp
ret
enter
mov
rorl
sbb
inc
jb
pop
jecxz
loopne
jg
adcb
add
outsb
imul
add
inc
filds
popa
push
in
bnd
jmp
mov
xor
inc
and
test
test
add
sbb
mov
jo
add
mov
out
inc
push
lret
inc
and
sub
je
mov
js
pop
enter
mov
xchg
mov
add
add
cltd
mov
cld
divb
insl
das
test
mov
mov
fcoml
ja
adc
repnz
mov
movsl
int
mov
lret
push
push
repz
lods
loopne
cmp
out
inc
pop
gs
add
pop
stos
stos
push
inc
mov
imul
cltd
fistpll
lcall
filds
inc
mov
jbe
or
loopne
std
popf
jmp
fs
pop
cmpsb
sub
lret
jnp
push
shrb
std
popf
sub
sub
dec
add
in
pop
dec
dec
movsl
jnp
lds
outsb
mov
pop
dec
pushf
pop
lret
cmc
testl
xchg
mov
push
xor
cmc
sub
xor
pop
nop
enter
dec
add
add
cld
add
jnp
cmc
or
out
mov
mov
lcall
jecxz
aaa
sbb
mov
mov
jecxz
adc
mov
and
sub
push
mov
sbb
daa
repz
and
pop
cmp
movsb
fwait
hlt
push
mov
and
add
mov
les
mov
fwait
scas
mov
pop
stc
inc
imul
jg
sti
gs
movsb
orl
dec
gs
inc
pusha
inc
loopne
cs
sbb
popa
jmp
loop
xchg
jo
clc
jae
jne
sbb
fnsave
sbb
mov
subl
and
nop
and
push
ficompl
iret
adc
das
clc
xlat
jno
dec
sbb
test
nop
xor
xchg
movsl
dec
mov
cmc
pop
sub
mov
inc
es
xor
jns
sbbl
mov
sub
pop
push
add
xchg
repnz
aam
mov
mov
lret
inc
rolb
sub
jecxz
push
xor
sarl
test
test
inc
loop
xlat
inc
jne
pop
mov
shl
pop
add
ja
mov
test
clc
adc
repnz
repnz
ret
sarb
fcompl
jno
cmpsl
inc
fldenv
out
jle
dec
adc
jo
scas
dec
dec
roll
mov
iret
xorb
dec
cwtl
adc
mov
add
and
xor
sbb
xchg
jmp
push
mov
sub
fcoms
hlt
push
cwtl
jl
jae
stc
mov
sub
out
push
xor
dec
repnz
cmp
pop
xchg
jle
push
pushf
mov
lds
nop
lret
mov
and
add
mov
pop
out
lods
test
push
addr16
jmp
lods
inc
loope
cltd
push
jb
gs
xchg
mov
pop
fisubrl
movsl
add
test
and
fistps
lea
sbb
lcall
mov
pushf
xchg
jo
movsl
in
jecxz
addr16
inc
cmpl
mov
mov
jae
xor
mov
imul
lret
scas
add
shll
xchg
in
jle
mov
dec
jo
ret
or
mov
jae
or
mov
test
pop
data16
push
dec
dec
mov
mov
jge
inc
clc
subl
pop
or
mov
dec
iret
out
xor
mulb
aad
and
idivb
leave
test
rcll
lods
mov
std
jecxz
cs
adc
mov
adc
push
jns
mov
xchg
testl
daa
in
int
cmpsb
pop
adc
xchg
inc
jg
sar
mov
movsb
call
fnsave
xchg
mov
inc
cmpsl
lds
ret
sub
stos
jmp
mov
mov
jo
mov
lock
xchg
inc
push
cmp
testl
js
sbb
fdiv
mov
rcrb
pop
jbe
cmpsl
adc
push
cmp
sbb
fmuls
cwtl
push
sub
dec
mov
mov
push
loope
leave
mov
bound
out
imul
insl
xor
test
xor
js
inc
fstpt
hlt
inc
leave
lods
pop
pop
out
jp
cmp
add
xchg
adc
loop
sbb
push
add
das
in
pop
fidivl
int3
or
incb
jle
jae
sub
sar
lahf
cmpb
es
mov
shl
pop
sbb
and
ret
nop
fstl
lds
movsb
fildll
mov
pop
inc
mov
push
std
or
push
mov
and
dec
lods
and
mov
xorb
and
aad
pop
cmp
ljmp
outsb
lods
pushf
push
out
xor
jp
mov
addr16
out
es
push
scas
in
jno
sbb
imull
lds
push
inc
sbb
push
xchg
testb
dec
xchg
add
ss
add
lahf
int3
fdivrl
mov
movsl
test
xchg
sahf
mov
mov
and
inc
pop
imul
mov
dec
sub
fsubr
cmp
cs
push
mov
adc
or
xchg
fisttpl
loope
or
xchg
mov
adc
sahf
sub
mov
data16
outsl
dec
sbb
sub
testb
test
jne
dec
cmp
ljmp
add
icebp
std
cmpsl
inc
hlt
mov
xchg
inc
stc
mov
loop
fisubrl
lock
jmp
andb
ja
mov
je
fwait
push
cmp
fstpt
rorb
adc
popl
jne
in
push
pop
ljmp
adc
pop
fdivrs
sub
je
test
ja
push
mov
stos
mov
dec
fwait
and
cltd
mov
mov
std
pop
std
sbb
int3
cmp
daa
push
jae
scas
cmp
mov
test
fnstcw
scas
insb
jne
and
mov
arpl
leave
dec
in
fidivl
adc
jmp
push
cmpsb
pop
shrl
loope
cmp
jl
lods
jl
jmp
push
fbstp
call
mov
out
aam
jmp
std
dec
dec
aam
repnz
shll
push
out
cmp
fmuls
jae
push
jp
and
pushf
subl
xchg
sub
push
jb
ljmp
pop
pop
imul
test
dec
adc
les
jmp
lock
push
leave
push
lret
sbb
fidivs
fdivr
dec
sub
sub
fs
mov
pop
push
or
arpl
sti
cmp
push
icebp
movsb
dec
or
push
xor
scas
das
add
pop
cmp
xor
pop
or
pop
test
roll
adcb
or
aam
xchg
sub
lret
fadd
add
push
add
xchg
xor
adc
pop
ficomps
les
in
out
ja
in
aas
sbb
mov
mov
lods
int3
xor
aas
dec
add
mov
mov
inc
lea
data16
sbb
orl
enter
iret
jle
aaa
mov
aam
shll
sbb
ljmp
lea
cmp
adc
scas
or
pop
sub
xor
pop
imul
icebp
clc
lods
cmpsl
dec
jmp
jge
fmul
aad
dec
icebp
mov
loopne
fabs
xchg
cltd
sub
jp
inc
movsb
int
mov
das
add
push
movsb
std
mov
dec
cmp
sarb
or
stc
loop
enter
mov
xchg
or
stc
inc
imul
roll
dec
mov
lret
and
mov
sbb
jns
adc
ljmp
cwtl
loop
pop
loop
pop
shr
push
movsl
push
xor
dec
arpl
out
jae
dec
add
add
xchg
adc
sti
or
adc
test
mov
in
shll
outsl
adc
in
push
xor
or
add
out
jge
sub
enter
xchg
fcoms
imulb
fildll
push
aad
mov
cs
repnz
pop
test
sbb
ja
int3
xchg
jle
std
cmp
mov
out
sbb
sub
pop
daa
sbb
push
add
inc
test
push
lock
stos
xlat
lods
adc
rorl
or
jne
mov
je
cwtl
pop
adc
xchg
sbb
pop
insl
cmc
cmp
stos
pop
push
insb
push
ret
roll
in
xchg
mov
sbb
test
neg
inc
out
lods
inc
adc
aad
sbb
gs
sbb
ds
jle
insl
filds
cld
out
jmp
jns
jo
int
in
jecxz
jge
mov
mulb
repnz
cwtl
add
ds
addr16
push
pop
push
xchg
arpl
cmp
das
mov
push
and
shlb
jle
add
push
mov
xor
loope
mov
xor
je
rclb
xchg
xor
aas
ret
sbb
xchg
adc
and
push
lock
mov
xor
sbb
in
sbb
sbb
push
ja
das
ljmp
push
and
mov
in
fistl
ss
jg
sbb
out
or
arpl
bound
movntps
and
lahf
mov
aad
out
jbe
push
sbb
mov
add
mov
test
out
jmp
outsb
sbb
push
pushf
std
xorl
adc
cli
pusha
xchg
sbb
arpl
mov
lods
cs
sbb
es
rcrl
js
popa
cmc
and
loopne
fmull
push
movsb
sub
pop
cmc
in
adc
pop
mov
stos
ret
xlat
jo
out
mov
mov
push
lea
mov
repnz
hlt
fsubs
and
mov
hlt
mov
pop
lret
sub
push
adc
mov
dec
jle
xlat
jae
mov
inc
loope
mov
loop
ljmp
test
pop
dec
dec
lods
push
pop
mov
cwtl
ds
es
dec
sahf
pop
repnz
roll
jne
dec
mov
pop
fiaddl
sbb
scas
mov
and
xchg
cmpsl
push
mov
xor
xchg
jno
xor
sbb
aad
aas
pop
fwait
shl
out
out
mov
dec
cld
and
or
sbb
lahf
loope
fnstcw
ja
add
gs
scas
push
int3
xabort
int
lea
movsl
fcoml
movsb
inc
jbe
fidivl
pushf
imul
fdivrp
jmp
insb
mov
mov
fs
fistl
cmpsl
fadds
out
clc
insb
mov
lret
mov
add
xor
sbb
rorb
jp
jecxz
inc
xchg
orb
sub
xchg
adc
sub
xor
jle
and
xor
orb
repz
mov
sub
push
pop
cmp
pop
mov
ficoms
xchg
mov
cmp
dec
movsl
pop
mul
or
shrb
add
mov
sub
popf
sahf
or
mov
cmp
pop
sti
mov
adc
inc
test
sub
scas
xchg
or
adc
orb
push
push
imul
add
lahf
mov
jecxz
in
sarl
xlat
dec
push
jl
cmp
dec
pop
or
pushf
sarl
adc
jnp
xchg
scas
inc
std
rclb
outsl
sbb
loope
sub
ljmp
add
fwait
jae
inc
mov
adc
sti
jnp
movsb
lcall
cmp
dec
lcall
cs
in
xor
push
xchg
in
or
addl
adc
imul
push
inc
out
add
cli
cld
aad
lea
loopne
cmp
push
push
pop
and
sbb
push
stc
dec
mov
cmp
xlat
xchg
fs
xchg
xchg
pop
cmpsb
in
jge
dec
fwait
or
shll
fwait
call
adc
orl
testb
cmp
lcall
xchg
jbe
and
scas
jge
xor
push
mov
xor
jnp
aas
mov
bswap
add
stos
or
sbb
out
jl
and
sub
and
push
dec
jle
xor
in
std
mov
inc
xor
sbb
and
jno
sbb
in
nop
inc
daa
test
jns
aam
or
imul
jmp
dec
push
push
sbb
mov
xor
addr16
and
xchg
pop
addr16
ret
stc
enter
mov
hlt
scas
popa
mov
iret
dec
dec
aaa
into
cmc
lods
in
test
negb
ds
adc
push
jns
mov
fsubrl
pop
dec
sarl
dec
in
pop
rol
repnz
dec
imul
in
sahf
pop
mov
out
out
adc
pop
sbb
mov
or
mov
jne
stos
sub
push
pop
pop
out
popf
cltd
dec
jne
sub
jnp
lds
ds
xor
lods
mov
daa
fcoms
xor
xor
insl
adcl
das
push
lods
hlt
inc
xchg
cmp
mov
cmp
sbb
fimuls
mov
mov
loop
loopne
cmp
adc
inc
cmp
inc
xchg
push
insl
dec
xchg
testb
cmp
cmp
pop
xchg
movsb
movsb
lds
xchg
fisubl
jns
iret
fidivs
fstpl
mov
sbb
lea
imul
scas
pop
sub
movl
or
lret
jg
sarb
fisubs
xor
add
lods
xlat
xchg
adc
loop
dec
bound
cmp
lcall
mov
xor
mov
jno
jle
add
mov
adc
jp
inc
sub
movsb
xchg
cwtl
adc
aaa
dec
adc
push
pushf
xor
or
add
jb
cmp
pushl
nop
int3
inc
xchg
push
lret
mov
test
scas
lock
jnp
push
imul
jns
sub
pop
pusha
xchg
adc
or
dec
test
pop
js
mov
aam
fbstp
or
cld
mov
scas
xchg
outsl
xor
push
jnp
pop
roll
fildll
pop
test
js
mov
rol
dec
bound
loop
lret
sti
leave
rorb
rcrb
iret
dec
imul
fisttpl
mov
outsl
or
lea
inc
and
inc
sarb
orl
notl
andb
or
xor
xor
mov
or
iret
insb
clc
stos
out
cmp
sbb
call
push
pop
ss
daa
sahf
xor
in
les
nop
mov
cmp
push
push
sub
jle
jl
jne
mov
mov
out
inc
in
xor
adc
enter
in
or
adc
sbb
or
cmp
xor
popf
test
int
hlt
jl
or
sub
pop
fisttps
or
jl
out
arpl
push
cmpsb
push
dec
sahf
cmpl
ss
dec
mov
iret
iret
add
mov
adc
int
daa
add
cltd
test
or
sbb
ljmp
clc
and
cmpsb
pop
pushaw
mov
fidivs
xchg
jbe
pop
imul
inc
or
mov
js
adc
popa
pop
pop
mov
jns
rcll
lock
sub
out
shl
jmp
push
sbb
sub
xchg
xchg
cmp
dec
fdivrs
cld
jp
push
mov
js
frstor
and
sbb
and
mov
add
rol
xchg
or
mov
mov
loop
jae
inc
sti
iret
push
mov
sub
dec
push
rcl
paddsw
stos
in
out
inc
adc
cmp
jbe
xor
jle
roll
cmp
dec
dec
adc
fnstsw
les
sahf
pop
mov
xor
mov
mov
rclb
dec
or
out
add
sbb
jns
dec
inc
lret
out
in
gs
les
in
cltd
mov
repz
dec
aaa
xchg
cmp
add
scas
jg
test
cmc
and
xchg
pop
test
outsb
mov
jno
iret
call
sub
scas
cmp
enter
lods
mov
xchg
mull
adc
sbb
iret
out
lods
jbe
shll
and
jp
sbbl
xor
or
mov
add
push
xchg
and
filds
fnstsw
sub
pop
jmp
std
jp
cltd
lods
popf
xchg
int3
into
xchg
add
popf
cltd
int3
adc
pusha
push
mov
cmp
jns
mov
daa
das
dec
xchg
cmp
pop
pop
movsb
mulb
sbb
pop
testb
inc
lcall
shrl
jbe
inc
or
xchg
mov
lods
cmp
add
out
xchg
imul
dec
sub
adc
mov
movsb
in
out
in
add
pop
shl
and
xchg
and
push
and
div
inc
or
mov
dec
lods
loope
dec
lds
mov
mov
cltd
into
es
fstpt
mov
cmp
add
inc
pop
negb
sbb
movsb
cmc
aas
fwait
pop
cmp
fwait
in
cmc
and
mov
cmp
dec
sub
repnz
push
lret
pop
int3
scas
mov
daa
or
dec
xor
push
nop
ljmp
push
mov
scas
cmpsl
shr
adc
dec
sub
mov
mov
dec
push
flds
cmpsb
jne
jnp
jns
stos
pop
movl
das
je
cld
jno
dec
push
imul
dec
push
xor
sub
and
aaa
dec
cmpsb
xlat
mov
out
repnz
or
jb
adc
cmp
gs
pushf
cmp
int3
mov
fsts
popa
pop
lea
cmpsb
ret
sbb
test
fisubrs
ss
cli
xchg
push
and
sbb
mov
inc
mov
jp
call
and
imulb
daa
push
mov
pop
enter
cmpsb
fdivl
push
xchg
or
daa
sub
in
mov
aaa
cmc
test
gs
addl
mov
insl
mov
xchg
adc
sahf
stc
dec
sub
xchg
cmp
fstl
and
mov
mov
imul
pop
push
repnz
xor
inc
loopne
into
cli
xorb
mov
orb
stos
fcoml
xchg
mov
mov
repz
cmp
test
jns
fmuls
push
hlt
pop
pop
jge
rclb
lret
inc
mov
sti
adc
push
nop
cmp
mov
inc
adc
aaa
test
mov
adc
addr16
js
mov
inc
push
pop
jae
cmpsb
add
pop
dec
les
jb
lods
fidivs
mov
lahf
cmp
std
sti
iret
push
adc
int
cmp
mov
nop
mov
out
aas
sub
mov
stos
inc
mov
or
stos
std
fsubl
xor
mov
addr16
in
arpl
xor
push
leave
jno
and
xor
pop
pop
lahf
movsl
sete
fsubrl
daa
imul
into
fs
dec
adc
addr16
leave
leave
int
dec
pop
stos
jmp
leave
jle
add
push
or
jecxz
in
ljmp
mov
mov
and
add
xchg
jnp
lret
jo
cwtl
add
into
movsb
sbb
add
pop
les
and
inc
inc
push
mov
loope
jg
loopne
jbe
sbb
cwtl
pop
xchg
dec
lds
jb
push
add
adc
and
lret
stos
jbe
movsb
lods
adc
pop
pop
and
push
sbb
mov
ljmp
mov
and
mov
mov
fnstenv
lods
mov
cmp
xor
mov
push
imulb
cmp
insl
test
cli
cmp
sbb
int3
cli
ret
adc
jl
and
jb
cmp
sbb
scas
pop
les
inc
xchg
cld
iret
cmp
outsb
outsb
pop
ficompl
jb
out
ja
mov
js
sub
fldenv
push
push
add
pop
xchg
push
pop
or
lcall
mov
or
les
adc
addl
incl
cmpsl
aad
jge
ja
adc
data16
add
sbb
leave
mov
push
mov
adc
cmp
gs
div
pop
rol
jnp
push
es
sbb
bound
test
out
or
andl
cs
jge
lea
scas
xchg
mov
lock
jbe
xor
and
shr
icebp
icebp
out
sahf
inc
fisubl
loop
mov
sub
fwait
out
aad
mov
cmp
xlat
fdivrl
mov
addb
mov
pop
pushf
popa
add
rcrl
push
jmp
or
dec
adc
fcompl
int3
xlat
repz
outsb
pushf
icebp
inc
ljmp
push
dec
test
movsl
test
mov
movsl
xchg
int
lds
dec
fisubl
popa
mov
fistpll
ficompl
xor
out
sti
dec
incb
and
nop
sub
and
jns
mov
sbb
repz
lods
pop
movsb
pop
cmp
ljmp
in
and
scas
push
xor
enter
pop
subl
mov
or
aas
mov
or
sbb
std
jno
popa
stos
mov
xchg
test
jnp
adc
dec
mov
rclb
inc
adc
lea
cs
push
mov
fldenv
push
sbb
mov
filds
push
out
jge
jge
xor
rorl
ljmp
xchg
mov
rolb
incl
mov
xor
pop
jmp
add
adc
adc
bound
jle
mov
daa
inc
lret
xchg
push
dec
sub
cli
pop
outsl
dec
inc
addr16
cld
or
cmp
and
fs
scas
add
push
int3
out
repnz
enter
leave
mov
fists
inc
jmp
push
mov
mov
push
sub
lret
nop
js
sahf
sahf
imul
pop
popf
in
pop
sub
imul
ret
test
adc
sbb
inc
sub
jno
cvtps2pd
or
push
xor
or
imul
mov
adc
sbb
jno
addr16
andb
repz
mov
lcall
and
aad
add
lds
ror
cltd
add
xor
push
mov
push
les
sub
jbe
push
fwait
cmp
ret
push
xchg
xorb
mov
push
add
dec
mov
out
pop
mov
aam
ds
std
inc
lods
or
stos
cs
inc
sub
aad
inc
lcall
mov
jge
adc
in
xchg
jge
cltd
scas
jg
dec
xor
lahf
xchg
test
inc
addl
inc
mov
aad
pop
leave
add
ljmp
adc
mov
mov
into
sub
mov
push
inc
pop
enter
dec
pop
push
dec
xchg
xchg
mov
jns
imul
pxor
xchg
mov
ljmp
push
jecxz
mov
out
adc
mov
mov
out
xor
rcrl
stos
sahf
inc
dec
iret
enter
cs
outsl
push
mov
cmp
stc
nop
dec
pop
aaa
ja
orb
in
div
into
loopne
jbe
add
push
add
dec
cli
or
mov
mov
icebp
inc
mov
int
cmc
dec
inc
inc
lret
mov
out
mov
dec
sbb
daa
cmp
pop
stc
aad
int
mov
dec
rcrl
mov
inc
sbb
sbbb
rcl
or
sub
fiadds
jmp
test
and
or
cmp
movsl
dec
pop
add
orl
pop
mov
mov
lret
bound
pushf
into
cmpb
imul
scas
mov
in
xchg
mov
sub
inc
movl
jge
adc
pop
nop
insl
pop
js
jmp
jns
popa
std
xor
xorl
xchg
add
xchg
outsb
inc
and
sti
out
rcrl
std
push
jecxz
inc
jge
repnz
fimull
aam
xlat
shlb
pop
iret
fwait
adc
pop
repz
xchg
cmp
dec
inc
insl
lea
into
iret
dec
fdiv
push
jb
aad
insl
inc
sbb
int3
mov
push
pop
sub
sahf
ss
lcall
ror
push
sbb
dec
sub
inc
lea
adc
out
leave
test
int
call
push
pusha
cmp
lret
ljmp
jecxz
xchg
sub
es
xchg
pop
es
call
pop
je
cmpsl
leave
xor
lret
js
sbb
stos
sarb
stos
test
mov
movsl
aas
ret
shlb
xor
and
pop
cli
into
bound
mov
pop
or
aaa
std
fstp
mov
lret
pop
dec
pop
enter
jmp
xlat
add
test
adc
xorl
sbb
xorl
shll
pop
mov
push
into
je
out
cmpsl
jg
xor
sub
leave
fsubl
add
cmp
loopne
outsl
push
sbb
sub
xchg
out
xor
outsb
sbb
fldenv
mov
xchg
je
mov
push
aas
aas
pop
loop
or
aad
xchg
push
cmp
push
push
jge
cmp
xchg
pop
add
jno
pusha
mov
mov
repnz
test
aaa
das
aaa
lahf
sub
pop
out
lahf
pushf
xchg
fidivs
scas
sub
mov
dec
or
adc
sbb
push
mov
cmpsl
ss
dec
inc
je
nop
pushf
cmc
decl
jle
adc
lods
mov
xor
movsb
fs
lcall
pop
jle
arpl
scas
sbb
ljmp
sbb
pop
cmpsb
sub
repnz
out
lret
mov
inc
adc
test
xor
cmc
rorl
mov
loop
cli
out
inc
jp
mov
cltd
out
inc
addb
out
inc
lock
dec
test
adc
pop
adc
cltd
dec
sahf
test
inc
in
lahf
jnp
cmc
push
test
jbe
and
sub
jl
add
shl
add
adc
jmp
sbb
add
mov
cmpsb
xor
into
jo
add
mov
int
les
sbb
push
push
decl
mov
and
add
or
xchg
lret
lahf
and
inc
lds
std
jmp
scas
xchg
lea
ds
test
loop
push
fidivl
dec
jae
int
int3
pop
lret
xchg
movsl
pushl
insb
push
mov
push
mov
jno
mov
jb
mov
data16
lret
add
imul
cli
inc
lods
push
cmp
add
into
push
sub
dec
outsb
les
push
mov
sbb
sahf
test
and
and
pop
adc
out
cmp
fsubl
xor
hlt
mov
cmp
ljmp
pop
or
scas
dec
push
pop
std
cmc
cli
dec
int
sub
jae
ss
dec
sbb
or
sar
sbb
inc
scas
add
into
or
mov
jmp
adc
dec
outsb
mov
ret
mov
jb
mov
roll
adc
outsl
or
lods
sub
aaa
and
pusha
popa
lods
lret
out
xor
popf
or
mov
push
dec
push
test
iret
je
mov
sub
xor
addr16
cmpsl
inc
xor
xor
inc
push
jne
cmp
xor
jg
cmp
pusha
int
aas
dec
jne
push
mov
cmp
aas
cmpb
sub
mov
out
int
divb
testb
adc
decl
mov
dec
mov
mov
stos
push
movsb
shll
and
sub
sbb
stos
and
add
or
sbb
fsubs
xor
out
mov
xchg
and
outsl
xchg
lock
into
shll
push
push
or
mov
fdivl
pusha
sub
nop
push
mov
and
lods
test
shl
and
xchg
int3
and
lahf
adc
hlt
xor
mov
xchg
std
push
inc
dec
pop
jns
add
sahf
push
dec
in
mov
je
mov
pushl
mov
or
or
lds
mov
ja
mov
dec
lods
in
jnp
xchg
mov
lret
jb
fsub
sub
imul
andl
int3
jp
mov
dec
inc
inc
or
mov
insb
xor
shll
xchg
dec
roll
pop
or
outsb
and
fsubrs
adc
sub
and
pop
adc
cmp
sbbb
aaa
ljmp
and
cmp
mov
push
or
xchg
cmp
movsl
or
push
imul
mov
sbb
repnz
fcomp
jb
jg
inc
out
jmp
dec
push
in
iret
daa
jns
sub
add
pop
into
in
push
sbb
out
movsl
sub
daa
or
insl
or
aam
dec
mov
out
and
sub
xor
mov
jae
xor
dec
dec
jae
movsb
lcall
std
adc
jae
add
pop
dec
pop
xchg
fadds
cmpb
dec
sub
push
in
inc
stc
in
cmc
lods
inc
adc
lcall
cltd
push
cmpb
cld
jmp
adc
mov
popa
mov
jns
aad
in
mov
xchg
cmpsl
dec
mov
add
repz
push
cs
movsb
mov
push
negb
mov
mov
pop
daa
mov
ds
imul
pushf
or
std
dec
int
mov
lods
or
pop
push
mov
mov
test
pop
lahf
mov
cmp
push
test
mov
or
push
sbb
das
jl
sbb
jp
xor
mov
sbb
sub
pop
sbb
or
cmp
sub
stos
std
in
aam
xchg
out
cmp
mov
cmp
scas
push
mov
mov
mov
and
mov
and
pop
cli
movsl
pop
push
sub
popf
mov
pop
lods
test
push
aas
pusha
andb
jns
inc
adc
call
adc
jmp
data16
adc
xor
imul
filds
push
mov
and
nop
insb
push
dec
mov
cmc
out
fildll
or
or
hlt
mov
inc
xchg
xor
insb
xchg
and
decb
adc
cld
or
sub
or
push
into
xchg
xor
sub
pop
adcb
and
or
inc
lahf
aad
mov
gs
fsubs
lods
sbb
cmpsl
lret
xchg
inc
bnd
fdivs
fisttps
sti
lods
mov
fs
mov
out
les
mov
mov
orb
leave
test
scas
jno
gs
into
cmp
sbb
add
arpl
jnp
lret
dec
les
sarl
das
or
fistpl
pushl
mov
fcos
or
cltd
sarb
sbb
sbb
stos
lds
jb
jb
shlb
mov
xchg
dec
in
push
lods
cmp
sub
mov
repnz
dec
push
pop
daa
mov
outsl
xor
adc
nop
push
and
test
movsl
add
and
fsubrs
les
cmp
mov
pop
dec
cmc
cli
sub
rcrl
shr
mov
fldenv
adcl
fidivl
sub
shll
dec
stos
fyl2x
inc
jecxz
add
pusha
jns
inc
dec
xchg
sub
out
adc
pop
mov
xchg
push
mov
inc
sub
test
xchg
adc
ja
add
xchg
sub
or
push
movsb
cltd
fwait
and
push
add
xchg
mov
outsl
sbb
ret
aam
xor
imul
sub
jle
lcall
bnd
scas
loop
pop
mov
loop
mov
roll
lahf
xchg
push
pop
call
je
out
or
push
jnp
pusha
mov
ljmp
movsb
and
stos
mov
popf
xorl
ret
xor
sbb
inc
repz
repnz
push
sbb
ljmp
jo
test
iret
out
or
mov
ds
mov
mov
add
and
mov
mov
fnstcw
jge,pn
mov
jns
mov
jo
insl
sbb
and
ss
ret
or
and
rol
pusha
dec
mov
cmp
cmp
adc
test
js
and
and
inc
repz
jle
rolb
or
add
cld
inc
arpl
add
vpavgw
jecxz
xchg
mov
jns
lahf
bound
popa
mov
in
imul
mov
xchg
xchg
call
dec
call
push
ret
mov
outsb
andl
mov
dec
mov
push
and
pop
rclb
roll
daa
push
mov
or
loope
mov
mov
jo
add
cltd
mov
and
sbb
ror
lods
fimull
jo
push
cmc
stos
push
inc
pop
ficompl
cmp
add
cmp
mov
jb
aaa
mov
and
xor
dec
aam
mov
cmp
mov
repnz
mov
xor
jg
int
out
insl
add
int3
xchg
pusha
gs
inc
adc
leave
inc
test
jg
jnp
js
les
inc
pop
xchg
add
or
push
dec
sbb
mov
xchg
add
fwait
gs
sbb
cmp
jge
lcall
lcall
push
xchg
dec
loop
in
cmp
dec
add
ret
and
ret
xlat
test
cmp
xchg
inc
push
int3
and
cmpsb
fs
movsl
dec
mov
faddl
pusha
in
jno
inc
cmp
or
in
dec
mov
xchg
popa
mov
out
mov
imul
adc
xchg
in
and
in
adc
ret
mov
roll
outsl
jae
xor
lds
xchg
sub
insb
dec
fcompl
jle
fcmovu
or
mov
and
leave
inc
mov
add
pminsw
test
or
sub
push
adc
push
or
out
inc
stos
xchg
push
cli
cmpsb
dec
lds
dec
adc
push
cmpsb
jp
and
nop
cmp
movsb
call
jp
mov
push
clc
xchg
daa
adc
mov
ret
mov
inc
stc
inc
ds
mov
pop
xor
lahf
or
mov
insl
pop
mov
rorb
outsb
inc
pop
ficoms
ret
and
cmp
cmpsw
int3
imul
add
sbb
sub
mov
jb
xchg
lods
mov
popa
mov
xchg
roll
ret
negb
scas
addr16
in
jp
mov
and
sbb
pop
int
mov
mov
movl
lods
sti
mov
jp
pop
and
pop
inc
inc
push
mov
stos
push
ljmp
adc
mov
addl
mov
xchg
add
mov
jne
daa
ud2
cwtl
divl
sti
gs
inc
fistl
in
loop
pop
mov
repz
push
xchg
lods
pop
inc
lds
add
sbb
add
popa
scas
sbb
mov
push
aad
or
cmp
or
int
insb
or
jns
test
mov
outsl
std
aam
loopne
jp
push
sub
pop
jb
sbb
mov
xchg
push
sbb
xchg
cmp
js
jae
pop
fadd
in
movsl
pop
int
add
imul
je
xchg
or
xor
imul
xlat
mov
loop
fld
cltd
xor
js
ljmp
xor
jbe
add
jo
rcl
xchg
adc
cmp
outsb
and
pop
test
std
repz
jle
movsb
loop
in
popf
push
cs
arpl
and
ss
lods
adc
shld
outsb
sub
sub
dec
int
inc
or
loopne
ret
mov
mov
dec
pop
adc
cmpsl
pop
and
pop
and
outsb
pop
pop
or
pop
mov
std
into
xchg
or
enter
mov
test
popa
insb
pop
sub
jb
es
inc
lahf
mov
into
lcall
sub
in
adc
jg
gs
out
xchg
mov
repz
mov
stos
and
fidivrs
mov
ja
ja
lahf
and
jmp
mov
dec
test
add
mov
jo
rcrb
and
movsl
sbb
dec
adc
dec
test
sbb
mov
xchg
nop
mov
and
lahf
cmp
pop
push
outsl
and
icebp
shl
xchg
pop
lret
dec
add
insl
xor
push
repz
jmp
pop
sbb
push
sub
inc
inc
mov
xor
add
push
daa
sbb
test
lds
scas
adc
mov
pop
mov
test
xchg
enter
dec
dec
pop
rcll
jecxz
mov
sbb
stc
insb
iret
ljmp
movl
jle
jae
push
aaa
test
pop
in
stc
jp
push
mov
lock
out
mov
je
mov
xor
or
sub
stc
mov
jge
mov
gs
sbb
cmpsb
dec
movsl
adc
or
mov
sbb
push
jl
aas
xchg
jns
das
xor
and
mov
in
es
movsb
outsl
xor
sub
popl
and
mov
xchg
in
adcb
aas
movl
jb
clc
sbb
cmp
orb
and
jp
cmp
adc
aad
std
cmpsl
or
xchg
xlat
jnp
or
mov
fwait
rcrl
ja
leave
sti
add
add
jne
hlt
mov
inc
xchg
out
loopne
jg
ret
ret
push
ficompl
ret
mov
rcr
movsb
sub
je
mov
jns
jecxz
ja
loope
ja
push
cli
cmpb
xchg
mov
xchg
enter
inc
cmp
movsl
mov
repz
add
nop
inc
cmc
inc
sub
xchg
leave
and
dec
sbb
out
repz
inc
test
xchg
test
sbb
sbb
adc
mov
sbb
fnstenvs
xlat
mov
ljmp
xor
mov
pop
dec
inc
mov
pop
cmp
aas
xor
mov
into
test
pop
outsl
loope
mov
jns
adc
dec
and
pop
sbb
out
and
roll
jp
push
xchg
cld
dec
in
lcall
jne
fidivrs
aam
insb
xor
pop
clc
mov
inc
dec
lea
inc
repz
imul
icebp
dec
xchg
mov
std
or
sahf
sbb
or
push
add
cmp
jnp
inc
fwait
inc
test
lret
adc
movl
orb
jno
cmp
inc
push
rcrl
fadds
fsub
and
xor
mov
iret
jle
popf
inc
stos
ds
shll
jne
mov
repz
push
xor
cmp
out
movsl
and
or
xchg
mov
mov
adc
jg
out
scas
scas
inc
out
mov
or
or
inc
and
mov
xchg
push
int
lret
jb
fsub
push
push
cmp
sbb
shlb
jne
jo
stc
xor
fcomps
push
les
addr16
pop
aaa
mov
pop
mov
pop
push
mov
jns
enter
push
jnp
inc
cli
jo
and
mov
insb
push
lret
testl
lret
mov
pop
in
test
jle
xchg
push
or
cwtl
jg
dec
rorb
loop
jmp
popa
lcall
popa
push
xchg
sub
xlat
jae
jns
rcrb
aam
loopne
sub
jecxz
dec
outsb
frstpm(287
repnz
and
and
xor
push
jle
push
pop
in
or
in
push
sahf
das
or
push
push
fnstcw
rolb
cmc
mov
mov
jp
or
lds
sub
mov
cmp
and
pop
and
out
sbb
out
outsb
cmp
xchg
xchg
xorb
add
out
push
jge
out
push
int
adc
cli
or
rcrl
repz
or
dec
pop
shrl
mov
mov
add
adc
sbbb
fdivrl
repz
test
mov
jb
hlt
adc
test
iret
divb
hlt
pop
xchg
hlt
mov
rclb
mov
pop
cld
pop
cmp
push
test
scas
mov
mov
mov
lcall
das
or
xor
mov
ret
std
xor
mov
dec
rcl
xchg
dec
fdivrp
dec
mov
loope
hlt
cmp
cmp
xor
aas
add
and
mov
jmp
cltd
addr16
mov
push
gs
push
jno
aam
pop
mov
xchg
pop
mov
fs
repnz
div
pop
xor
adc
pop
cld
or
js
pop
push
sub
sbb
adc
add
and
mov
cld
pop
mov
repz
adc
xor
pop
adc
inc
dec
mov
lods
int
shll
insl
dec
movsl
add
inc
mov
popw
inc
lcall
mov
outsw
std
push
xchg
ja
sbb
out
mov
cltd
outsb
mov
add
mov
xlat
mov
pop
adc
sahf
call
sub
push
inc
cld
rclb
hlt
cmp
inc
shlb
ja
adc
inc
insb
in
repnz
popa
int3
mov
sbb
xor
xchg
mov
mov
cmp
insl
jmp
ror
xchg
cmpsl
jns
push
mov
inc
pushl
mov
loope
and
fwait
xchg
cmc
cmpsl
out
sub
sarl
ds
push
jmp
add
or
insb
pop
mov
jnp
lock
outsb
negl
mov
dec
push
push
sahf
push
popf
jmp
push
mov
cwtl
outsl
jecxz
gs
orl
das
adc
xchg
cmc
sub
sahf
cmpsb
xchg
scas
jns
imul
sub
xor
push
pop
or
push
mov
cwtl
dec
sti
and
in
lock
repz
pop
pusha
sub
lods
pop
movsb
fildl
mov
add
sbb
mov
into
add
cmc
and
shrl
into
cltd
roll
nop
scas
adc
mov
lret
into
xor
or
cmp
cmpsl
xchg
mov
hlt
xor
mov
push
subl
or
insl
popa
insb
pushf
push
lods
sbb
inc
mov
lea
sahf
es
xor
rcrb
xor
int3
sub
lods
push
xchg
jmp
lds
and
iret
icebp
dec
cmp
sbb
or
mov
sub
jo
scas
imul
fsubl
jmp
pop
and
andl
cs
rorl
fucomp
cmpsl
outsb
in
or
cmp
mov
incb
fbstp
divl
loop
adc
mov
cltd
adc
or
subl
xchg
push
sti
fsubl
fidivrl
push
adc
fsubl
cmpl
shlb
push
xor
jg
adcb
add
push
and
addb
push
popa
pop
cmp
jne
add
pusha
xchg
push
adc
cwtl
insl
fcompl
dec
or
mov
lods
push
push
sti
cmp
ret
jbe
in
jl
and
sarb
mov
dec
pop
push
popa
ja
xlat
xlat
pop
sub
xchg
stos
adc
aam
loopne
xchg
daa
add
inc
jne
pop
inc
lcall
das
jmp
clc
sub
arpl
pusha
std
out
addr16
mov
mov
jb
mov
xchg
mov
xchg
mov
repz
adc
push
add
jns
mov
cmp
imul
and
in
imul
lahf
call
push
test
ja
or
cmp
fadd
adc
aaa
dec
xor
jp
out
xor
aaa
pop
mov
xchg
lret
cs
dec
push
repnz
and
enter
inc
xchg
sbb
test
repz
push
jmp
sbb
loop
nop
and
mov
xchg
mov
std
movsb
mov
mov
xchg
push
push
or
mov
adcl
fcomp
push
sahf
imul
iret
mov
mov
outsb
fidivrl
lea
adc
and
test
pusha
jge
mov
mov
dec
into
sbb
inc
into
imul
inc
stos
std
jbe
jg
lds
push
push
mov
cmp
sub
daa
inc
jae
cmp
sbb
push
mov
push
ss
cmp
aaa
into
jg
ss
scas
sbb
jns
in
bound
test
xor
out
adc
cmp
fisubl
xorl
mov
rcl
into
faddl
stos
xchg
inc
xchg
dec
repnz
fsubrs
std
pop
mov
dec
adc
ret
push
sbb
dec
nop
mov
pop
data16
sub
cwtl
or
lahf
xor
ret
mov
nop
fsubs
fs
xchg
aad
call
inc
mov
sbb
orb
adc
out
add
add
fldl
mov
xchg
jg
sbb
fwait
jge
imul
arpl
jge
mov
adc
in
sbb
xchg
mov
aad
stos
mov
popa
and
ja
sbb
inc
dec
test
jnp
fbld
mov
jae
ljmp
push
dec
cmovp
adc
xor
xchg
mov
out
inc
xchg
or
popa
imul
lret
fmull
mov
arpl
mov
sbb
mov
and
push
mov
xchg
mov
movsb
subb
mov
sbb
mov
sub
enter
movsl
cmp
mov
repnz
jo
testl
sbb
test
outsl
xor
imul
nop
stc
add
divl
and
pop
push
mov
push
mov
and
sahf
jp
jo
mov
hlt
cmp
jnp
cltd
add
sbb
adc
loop
and
or
xchg
loopne
loopne
sbb
inc
loopne
or
lret
xor
sub
js
test
sbb
sbb
and
ds
xchg
dec
add
push
bound
sub
out
sbb
clc
call
ret
mov
cmp
xchg
out
mov
add
mov
inc
xor
adc
cmp
js
jb
pop
rclb
mov
addr16
sub
xor
xlat
jecxz
mov
sub
aad
shll
push
jge
fidivrl
std
stc
jnp
cs
and
xbegin
mov
dec
popf
js
and
mov
sub
sbb
clc
push
outsl
shll
dec
adc
fdivrl
aam
in
movsbl
xchg
in
or
or
inc
push
inc
mov
or
test
cmp
lea
xlat
pop
out
add
mov
adc
mov
pop
sahf
cmp
fld1
insl
sub
popf
or
pop
xadd
pop
out
mov
and
dec
shll
mov
lods
xchg
sub
cli
outsl
mov
dec
jmp
lds
cmp
adc
fs
xchg
jp
sub
imul
xchg
lock
int
sub
fidivrl
xor
pop
pop
rorl
lods
punpckldq
in
sub
cwtl
loopne
jle
and
test
xchg
push
push
out
sbb
mov
rol
cwtl
movsl
popf
cmp
sbb
popf
mov
xchg
sub
mov
mov
xchg
cs
andb
enter
adc
mov
rorb
cmp
pop
push
aaa
mov
push
clc
dec
push
je
aam
imul
popf
xchg
ret
cmp
stos
xchg
imul
testb
pop
data16
jl
sbb
mov
push
jp
testl
or
insb
cmp
data16
adc
pop
adc
add
icebp
xor
mov
lcall
fists
in
sbbb
mov
or
xchg
xchg
fadds
add
out
shll
stos
test
test
aam
jbe
out
lods
jecxz
stos
les
aad
fldcw
iret
loopne
mov
and
call
or
mov
ja
sub
addr16
aam
fnstcw
add
cmp
inc
lock
arpl
jae
andb
xchg
xchg
sbb
enter
repz
test
sub
sub
jb
lods
pop
push
test
scas
imul
adc
jl
shlb
mov
sti
sti
jno
jmp
jle
adcb
lock
repnz
dec
adc
push
xor
or
inc
jne
in
xchg
rcr
shrl
sub
lcall
mov
in
pop
scas
push
push
cwtl
fsubrl
add
xlat
les
xchg
xor
xor
je
xor
fstpl
xor
fsub
mov
push
jmp
xchg
fmull
pop
pop
cwtl
add
test
hlt
and
sub
cwtl
sahf
sub
inc
xor
push
mov
test
fmull
and
rorb
sbb
jmp
mov
in
outsb
popf
rcrb
imul
mov
adc
dec
pop
jge
inc
sbbl
pop
mov
dec
addr16
mov
stos
scas
jne
inc
js
aad
movsb
into
fmuls
push
push
xor
inc
fcoml
push
cld
pop
mov
and
ss
mov
fs
loop
xor
scas
jnp
push
xchg
or
cmp
xchg
dec
fldl
pushf
repz
stc
aaa
out
ss
xor
sub
into
mov
push
jmp
adc
lods
outsb
rcr
lcall
lea
inc
aas
and
adc
or
inc
cmp
inc
dec
adc
xor
gs
adc
out
cmp
das
xchg
jne
mov
or
mov
shl
inc
push
xchg
test
mov
js
xor
or
frstor
add
sbb
sbb
xchg
das
cltd
addr16
dec
add
sub
dec
popl
sub
cmpsl
pop
addb
pop
or
pop
pop
enter
adc
jb
out
xorb
inc
push
std
iret
xchg
out
and
mov
xor
add
movsl
jmp
lods
pop
jnp
xchg
enter
push
dec
mov
sbb
push
ljmp
cmpsl
xor
lods
mov
rcll
into
push
inc
leave
repz
cmp
push
lahf
adc
test
ficompl
jb
xor
cmpl
lea
fdivrl
jo
aas
loop
cmp
push
aaa
jl
mov
cltd
arpl
mov
and
push
aas
sarb
into
lret
mov
xchg
cld
scas
add
cmp
jb
addr16
push
insl
mov
jbe
push
or
jge
xor
jle
mov
pushf
dec
mov
js
cmp
lods
nop
add
movsb
std
pop
lods
jo
push
imul
stos
nop
ljmp
lret
and
stos
inc
push
mov
add
dec
lret
call
mov
insb
mov
adc
jnp
pushf
cmp
out
stos
or
arpl
scas
jmp
push
dec
xor
xchg
repnz
les
push
mov
cmp
in
jge
pop
pop
sub
insb
jg
jg
movsl
gs
or
out
jmp
out
outsb
stos
nop
mov
dec
xchg
mov
mov
xchg
decb
movsl
jp
ds
jl
shl
sbb
mov
adc
jmp
pop
pop
ret
mov
sub
pushf
in
cmp
xor
rcll
movsb
or
lods
mov
ds
xchg
rorl
iret
je
jne
cmp
or
aaa
pop
pop
push
cmp
rorl
inc
xchg
jbe
popf
loopne
lret
stos
into
adc
repnz
xlat
cli
lret
pusha
cwtl
jmp
cmp
push
mov
adc
popf
leave
sub
fstps
imul
cltd
repz
aas
leave
repnz
lock
pop
ds
pop
aad
stos
ret
and
and
push
xchg
shll
ds
hlt
aas
jecxz
xchg
sarl
mov
mov
jne
clc
shll
push
sbb
adc
outsl
xor
mov
and
fisttps
imul
sbb
jne
or
inc
xlat
aaa
mov
xchg
mov
mov
xor
push
fnsave
insl
inc
scas
repz
pushf
jns
nop
ss
push
xlat
fiaddl
hlt
cmp
aam
pop
aaa
jecxz
mov
pop
repnz
xor
ds
rcrl
sbb
mov
fstl
cs
pop
jbe
adc
ljmp
xor
int
fstps
cld
sub
nop
inc
cwtl
or
xchg
into
ret
push
pusha
out
add
push
fldcw
xor
sub
jl
push
or
mov
outsl
orl
xchg
scas
and
insl
mov
inc
dec
or
fistl
sub
adc
stos
repnz
and
lods
sub
jge
dec
stc
mov
mov
inc
xor
faddl
iret
cmp
jns
xchg
jle
iret
dec
jmp
in
lret
pop
cmp
jo
ss
push
push
adc
mov
subb
imul
push
or
fimuls
imul
jg
mov
jns
dec
xchg
mov
sub
dec
pop
xchg
fisttpll
int3
scas
push
and
sub
mov
orl
cmp
pop
push
test
movsl
jne
adc
cltd
ret
push
enter
inc
push
pop
pop
jmp
mov
add
lcall
insl
push
inc
jle
mov
jl
mov
mov
loop
mov
xchg
and
mov
mov
out
push
into
mov
movsb
adc
cltd
sub
in
aas
ret
jecxz
lods
je
xor
xor
adc
pop
mov
jmp
loope
fistpl
into
push
jo
push
xchg
jno
mov
push
push
pop
icebp
xchg
inc
adc
es
jns
cmp
jp
jo
addr16
cmc
hlt
cmpsb
ret
fadds
xor
rolb
adc
das
into
xor
adc
xlat
xlat
movsl
clc
jo
sub
xchg
jp
stc
lods
ror
adc
cltd
dec
mov
cmpsl
xor
std
xchg
push
sub
and
push
mov
in
mov
inc
sub
xor
lret
je
or
adc
scas
out
data16
int3
sbb
dec
das
stos
into
jno
addl
xchg
inc
xor
mov
xlat
nop
sbb
int
and
ss
dec
pop
int3
arpl
cmpsb
repz
ds
das
out
sbb
fwait
add
movswl
stos
dec
aad
jnp
imul
out
lahf
sub
mov
roll
lods
jne
aaa
mov
popf
sub
adc
cmp
adc
jl
mov
mov
test
fimull
mov
fwait
and
push
adc
mov
arpl
push
out
inc
or
cmp
iret
xor
sub
inc
cmp
jns
lds
cmp
lea
mov
pop
outsl
jae
mov
xchg
and
jge
lret
push
sbb
jg
pop
mov
and
mov
jle
sbb
pop
and
inc
cmp
pop
push
pop
push
lcall
and
and
pop
dec
popf
es
push
cmp
out
movsb
mov
repnz
daa
test
fldcw
cmc
das
imul
xchg
push
lahf
sub
dec
loopne
inc
cmpb
pop
aam
sub
das
push
in
inc
add
repz
xor
mov
cmp
aam
gs
mov
mov
xor
and
aad
imul
inc
inc
in
loope
dec
negb
or
pop
mov
lcall
fnstenv
mov
or
jp
pop
scas
ds
xor
and
pop
xor
out
pop
pop
test
fcomps
jne
fstps
pop
pushl
mov
inc
jl
and
inc
lds
cmp
shr
add
mov
mov
pop
jno
sti
jg
incl
pusha
mov
pop
imul
mov
adc
clc
push
out
imul
xchg
out
cmpsb
imul
adc
sbb
push
xor
jbe
ja
loope
das
cmp
pop
bound
dec
jl
mov
leave
pop
aas
in
ljmp
jns
outsb
fisubrl
flds
add
popa
cmp
insl
dec
lods
insl
scas
push
stc
xchg
loop
pop
outsl
pop
call
adc
mov
sarl
sbb
or
jmp
mov
test
cli
test
out
sbb
outsl
mov
adc
sbb
pop
adc
and
adc
out
mov
cltd
fisubrs
ftst
push
cmpsb
mov
out
loop
adc
inc
sbbb
adc
mov
in
push
sbb
outsb
out
cmc
mov
and
int3
mov
pushf
push
dec
push
clc
add
push
in
daa
mov
mov
jb
mov
inc
cmp
or
mov
dec
jbe
aad
add
rorb
loopne
pop
adc
dec
mov
sub
push
bswap
icebp
adcb
idivb
sbb
loopne
lods
inc
and
mov
jno
pop
iret
mov
insb
lahf
shrl
xor
icebp
dec
jle
cmp
shll
xor
les
insl
sub
sub
or
xchg
sub
dec
add
jle
in
bound
rcpps
pop
test
outsb
mov
flds
add
mov
cmp
and
lea
outsl
pop
mov
adcb
mov
dec
adc
or
subl
dec
outsb
fistpll
fcompl
jl
mov
mov
sub
pusha
aad
imul
xchg
fstps
adc
jo
mov
push
lods
jge
sbb
pop
or
xor
pop
mov
inc
stos
inc
add
cltd
pop
add
bound
loope
test
clc
hlt
mov
xchg
xlat
mov
jae
enterw
pop
push
xchg
ret
add
jbe
xchg
fistpl
push
add
cmp
and
rcll
jmp
pop
pop
fsubrl
mov
fisubrl
stc
fwait
and
fcompl
adc
inc
ja
inc
cmpsl
mov
xchg
inc
add
jge
pop
stos
lea
lret
mov
fadds
popf
popf
nop
lods
cli
clc
add
loope
add
or
fsubs
in
jp
fwait
loopne
icebp
inc
jnp
popf
inc
push
mov
mov
dec
xor
mov
push
cmc
clc
jl
into
dec
jmp
push
pusha
mov
adc
insl
dec
mov
cmp
push
mov
nopl
xchg
maxps
push
leave
xor
call
mov
mov
or
xchg
loope
cmpsl
lods
ja
jmp
pop
lods
insb
pop
xchg
cmp
pushf
call
and
data16
cmp
in
movsl
orl
in
popa
xchg
jnp
xor
mov
lcall
adc
mov
fwait
add
jno
js
in
or
frstor
add
sti
pop
sbb
ss
mov
mov
mov
fbld
int3
sbb
jns
dec
push
ss
mov
xchg
int3
mov
into
mov
mov
test
sbb
fs
imull
hlt
pop
mov
mov
movsb
addr16
pop
lock
xchg
jne
jo
into
mov
mov
and
inc
mov
pop
popa
jg
push
mov
aaa
outsl
cmpb
dec
pop
test
icebp
jp
xchg
push
inc
mov
xchg
and
or
cmpl
sub
test
sahf
repz
aaa
push
mov
pop
addb
cmp
push
bound
pusha
jecxz
aad
mov
pop
jbe
sbb
and
jmp
data16
adc
std
scas
insb
daa
pop
ja
xor
jno
pushf
inc
test
inc
xchg
xchg
add
and
cmp
jmp
mov
fs
xchg
xlat
pop
jne
xor
ja
out
push
jmp
and
aam
out
adc
fisttps
mov
mov
cltd
mov
dec
lea
hlt
je
cmp
dec
sbb
cmpsb
push
dec
int
cwtl
push
test
inc
or
adc
and
orb
cltd
cltd
cld
test
jo
pop
mov
test
pop
mov
add
fwait
add
repz
and
sahf
mov
stos
xor
arpl
sbb
xor
pop
cs
push
arpl
adc
fdivrs
ljmp
inc
push
sbb
mov
push
ja
and
mov
and
repz
inc
ja
fimull
popa
cld
sub
push
cli
mov
xor
cli
add
mov
fnstcw
aad
mov
mov
push
in
out
aas
dec
inc
pop
pop
add
hlt
shl
out
sahf
dec
in
incb
int
shll
mov
cmp
in
ret
sahf
push
or
mov
inc
adc
int3
xchg
cmp
push
jbe
xor
out
add
sub
ds
dec
bound
mov
xor
jno
pop
ljmp
pushf
adc
push
sbb
jp
adcb
or
pop
std
sbb
push
jle
adc
pop
roll
mov
outsl
nop
cli
jg
lods
mov
mov
push
clc
push
sbb
fdivl
out
in
fs
ss
jbe
call
cmp
and
out
jg
pop
push
cmpsl
jl
add
add
mov
outsl
push
push
pop
outsl
dec
das
je
lret
push
jns
mov
pop
xchg
and
pop
xor
lret
std
int
xchg
test
loope
mov
in
std
leave
fists
xor
pop
les
addr16
cmpsb
jl
in
mov
sub
lcall
dec
add
cmc
insl
aad
xor
sbb
dec
xor
lods
inc
adc
setnp
cmc
cli
fdivp
sub
adc
jl
and
incb
fnstsw
pop
movsb
push
push
frstor
xor
jnp
int
xchg
push
sarl
stc
xor
or
add
cmp
fstl
fistl
push
add
notb
fnstcw
ja
cmp
jnp
dec
frstor
call
jmp
lods
outsb
dec
add
cmp
inc
lods
cmp
sbb
mov
fldl
mov
mov
jns
push
cmp
dec
or
cmp
movsb
add
stos
inc
test
and
mov
scas
pop
fsub
xchg
outsb
rcrb
add
and
pop
mov
mov
cs
and
jecxz
add
dec
mov
xchg
dec
jnp
sub
dec
in
sub
xchg
xchg
inc
push
pop
or
out
mov
mov
in
inc
dec
je
rcll
scas
add
icebp
mov
xchg
cld
jge
jb
jne
cli
pushf
test
mov
jle
xchg
jnp
xchg
test
inc
test
out
mov
sbb
push
mov
dec
and
lcall
jg
mov
sbb
add
xchg
mov
jnp
and
fsubs
mov
add
sub
lret
sbb
stos
sub
lahf
jnp
mov
or
mov
test
push
pop
add
and
dec
fistps
sub
jle
sub
loop
leave
aas
mov
mov
sahf
mov
push
mov
insb
jg
or
jo
jge
mov
and
pop
arpl
adc
ret
xor
adc
xchg
mov
fistl
add
add
mov
ror
les
sub
push
jp
lods
sti
push
into
popa
out
push
rcrb
mov
adc
adc
cmovge
or
xor
shll
mov
gs
mov
out
clc
mov
jge
notb
ljmp
cwtl
xchg
push
test
aam
pop
nop
cltd
mov
and
lret
push
xor
setle
pop
sbb
fsubl
jmp
sub
inc
ret
mov
adc
jecxz
out
xlat
pop
adc
jnp
scas
call
push
enter
cmp
dec
xchg
pop
jnp
lret
jle
fs
add
gs
xor
aas
lods
mov
fildll
hlt
jge
lods
and
mov
add
xchg
aam
call
in
jo
int3
push
jns
xchg
pop
lea
push
outsl
test
mov
or
lahf
shlb
add
mov
nop
popa
jmp
jno
push
repnz
test
jnp
and
adc
sub
clc
mov
sub
push
adc
scas
sub
push
xchg
pushf
adc
push
out
mov
out
icebp
stc
dec
sub
mov
pop
push
pop
std
data16
aaa
js
fcompl
icebp
ja
outsb
cmpsl
shll
inc
inc
xchg
ljmp
je
sbb
xor
add
ret
addr16
cmp
clc
mov
push
pop
clc
xchg
ss
push
arpl
icebp
adc
xchg
movsl
pusha
xor
mov
hlt
mov
aad
sti
mov
pop
lea
movsb
loop
xchg
mov
arpl
ljmp
push
ja
imul
pop
mov
cmc
lock
or
hlt
popa
push
es
and
jns
movsb
sub
pop
jnp
cmp
jae
or
and
push
add
ljmp
xchg
inc
inc
scas
push
mov
out
test
sbb
mov
jnp
mov
cmp
pop
push
inc
cmp
std
cld
push
les
sahf
jmp
pop
sub
mov
std
lret
xchg
mov
sahf
sti
lods
iret
test
push
pop
aam
outsl
cld
cmc
icebp
push
dec
xor
dec
aas
xchg
pop
mov
sbb
lahf
cmc
mov
std
sbb
ljmp
fadds
scas
jb
xlat
fwait
aas
pop
xor
mov
insb
pop
scas
jo
inc
cmpsb
jno
int3
lea
popf
out
cmc
sub
inc
jle
stos
pusha
mov
pop
mov
scas
mov
psllq
ss
leave
std
setle
mov
hlt
mov
insb
jbe
jg
pop
mov
mov
dec
int3
sub
add
jb
js
pop
jnp
pop
popa
cmp
gs
jo
ret
pop
fnstenv
ret
cld
inc
pop
adcb
lahf
ret
arpl
sub
loopne
aaa
inc
test
lock
ja
inc
jo
stos
pop
insl
addr16
sbb
enterw
out
ss
lods
popf
jle
popa
fs
pop
outsb
sub
loope
mov
ja
adc
and
lea
mov
call
xor
and
push
xchg
je
lods
sbb
cmp
push
xchg
pushf
jg
imul
push
lds
hlt
sbbb
ret
dec
test
sbb
je
fdivrs
dec
pusha
and
iret
and
cwtl
scas
sub
repz
mov
cmp
jns
push
mov
adc
lret
in
xchg
pop
div
pop
dec
jbe
dec
cmp
js
xchg
add
ja
lahf
and
fcmovne
fiadds
mov
adc
push
mov
push
fildll
xchg
fldcw
jp
inc
push
aaa
insb
das
repz
jns
sbbb
or
out
sub
flds
negb
mov
cmp
call
jg
lret
je
loop
addr16
inc
jge
lds
pop
bound
push
inc
test
cmp
negb
bnd
push
push
fimull
in
mov
ja
jo
pop
or
adc
push
leave
icebp
cltd
popf
xchg
js
movd
out
mov
push
sbbl
jmp
inc
lahf
imul
int
inc
sub
popa
gs
mov
mov
xor
adc
mov
mov
dec
sbb
add
jg
scas
xor
mulb
push
lods
adc
stos
rorb
daa
and
dec
popa
cld
adc
aam
sub
fdivrl
sub
jmp
lret
jno
fidivrs
std
cmp
cmp
xchg
in
lahf
test
lds
ja
dec
sub
add
hlt
and
roll
and
xchg
lods
sti
loop
dec
adc
sbb
mov
dec
mov
ja
shlb
fcmovnbe
ds
pop
xor
out
mov
sbb
fs
lock
sbb
xchg
into
xor
hlt
xchg
leave
adc
mov
adc
mov
inc
je
test
cmp
add
dec
pop
sbb
mov
mov
gs
std
psrlw
adc
outsl
in
adc
test
jae
fmulp
pop
adcb
or
divb
xor
mov
push
lahf
push
and
test
sbb
xchg
jae
and
push
pop
frstor
mov
iret
sbb
push
movsl
int
bound
cmp
negl
pusha
cmc
inc
in
pop
dec
mov
jg
pop
add
mov
out
cwtl
mov
mov
jns
mov
adc
sub
fildll
out
pop
push
mov
repnz
cmpsl
sub
ja
jle
hlt
out
test
or
test
cli
scas
addl
jl
std
aam
xchg
aas
jl
and
push
loopne
inc
push
mov
cwtl
mov
or
repnz
adc
cwtl
aas
dec
les
sub
push
les
xlat
push
sahf
pusha
iret
or
fdivr
and
sahf
add
dec
inc
jns
and
scas
xchg
xchg
leave
jae
sub
je
xor
mov
pop
clc
sub
jns
leave
cmp
dec
add
loope
sbb
inc
push
shlb
adc
xor
adc
and
test
inc
insb
inc
aas
testl
dec
mov
dec
loopw
jne
push
nop
pop
sbb
push
adc
call
pusha
mov
pop
ret
add
mov
push
fcomp
cwtl
xor
ds
dec
mov
in
push
sti
hlt
jmp
jg
push
adc
xchg
xchg
lock
jg
sub
mov
inc
sub
not
out
ud0
fistps
cmp
mov
testl
jae
jne
adc
xchg
imul
call
call
push
movsb
shll
movsl
fldcw
sub
xor
pop
imul
sub
xor
adc
mov
and
and
cmp
sub
int
add
and
jns
nop
fs
addr16
pop
lret
lcall
xor
test
and
push
jmp
push
retw
adc
test
jge
sbb
lods
mov
sbb
enter
and
and
data16
and
cld
push
in
jecxz
mov
and
mov
cmpsb
jbe
insl
mov
pop
pop
jge
cltd
imul
mov
repnz
stos
inc
in
int
repnz
negb
aas
jp
push
lahf
push
shrl
cmp
xor
inc
scas
out
jne
imulb
jl
rep
xchg
push
jge
movsl
iret
and
ss
pop
mov
mov
subb
addb
sbb
jnp
outsb
jbe
cmp
jecxz
cmc
push
mov
lock
fnsave
mov
dec
cltd
pop
xchg
cmc
cmp
test
sub
mov
xor
pop
sbb
ja
ja
dec
or
add
or
jle
mov
push
inc
pop
pop
rcrb
xchg
pop
add
cld
adc
xor
test
push
xchg
xchg
sub
in
jle
movsb
inc
stos
ss
loop
jne
cmp
adcb
icebp
icebp
mov
xchg
ret
push
mov
fnstcw
pop
popf
cld
pushf
mov
iret
xor
outsl
dec
fisttps
imul
shl
xchg
xchg
icebp
sub
outsb
cwtl
cmp
cmc
add
fcomip
leave
xchg
xchg
dec
mov
aad
jno
and
pop
jl
or
pushf
mov
jmp
sbb
aad
push
loop
fidivs
pop
push
imul
push
pop
sahf
lods
jne
dec
xor
jnp
in
sub
sbbb
cmp
lea
push
das
mov
sbb
push
arpl
shl
stos
leave
cmp
or
mov
fs
loop
push
push
add
xchg
adc
je
loopne
aam
stos
xlat
jp
push
jmp
int3
mov
jbe
repnz
and
sub
ja
jp
sub
test
jp
inc
xchg
lahf
and
scas
add
imul
xlat
loop
push
arpl
shrb
inc
mov
movsb
xor
xchg
sub
mov
loop
lods
fmuls
mov
jb
sbb
mov
addl
sti
sbb
mov
addl
lds
mov
cld
push
xchg
cmp
mov
jb
jp
jg
push
popf
xchg
or
enter
dec
jae
mov
insb
pop
popf
negl
mov
ja
cmc
push
dec
aam
sbb
lods
lods
sti
mov
xor
xchg
cmpsl
pop
add
mov
xchg
out
scas
into
jge
or
or
aaa
mul
sarb
stc
std
lret
popf
lret
push
xchg
ds
pop
xchg
popf
mov
dec
xor
fiaddl
mov
push
addr16
xchg
pop
adc
sahf
or
or
mov
out
pop
cmp
ret
push
rcr
pop
ss
sbb
mov
in
push
enter
sbb
xlat
lea
push
out
out
pusha
dec
jge
jbe
dec
in
mov
mov
mov
mov
lds
adcb
js
test
dec
xchg
icebp
sub
ds
les
dec
inc
repz
test
cmp
xor
in
inc
cmp
fmuls
mov
inc
pushf
and
sub
rorb
and
cmpl
xchg
cltd
daa
mov
push
sub
xor
jne
adc
movsl
jmp
int
add
xchg
xchg
rcr
mov
xor
add
sbb
xchg
adc
xchg
std
out
outsl
cmpsl
mov
ret
mov
icebp
mov
fsubl
xorb
fld
xchg
mov
scas
pop
mov
adc
pop
mov
mov
aad
cmc
jl
in
jae
mov
dec
ja
ja
sub
mov
sahf
sbb
std
xor
fisubs
hlt
xchg
fwait
or
push
bound
insl
in
inc
sub
insl
lret
fwait
fs
xchg
insl
mov
andl
cmc
adc
pop
sbb
dec
push
xchg
jno
lods
cmp
cld
xchg
lret
mov
jns
add
shll
stos
pop
insl
push
add
sbb
xor
ljmp
cld
xchg
daa
sbb
scas
mov
paddusw
in
insb
out
sbb
std
push
popf
es
pop
and
xchg
popa
fcmovu
std
je
scas
xor
int
jle
dec
std
bound
jge
js
ret
mov
cmpsl
movsb
pop
out
jmp
popl
add
fstl
scas
test
mov
ret
insb
pop
cs
in
fs
popl
jnp
sbb
push
ffree
outsb
mov
orl
mov
fldenv
cmpb
mov
fdivrs
mov
aad
pop
ja
inc
out
pop
mov
pop
sbb
xor
sub
dec
push
cmp
movsl
cmp
fcmovnbe
pop
rcrb
and
and
mov
adc
inc
and
nop
cmc
add
push
xor
sub
int
sub
fwait
es
or
or
xchg
xchg
cli
sbb
mov
mov
or
cld
mov
push
jbe
jo
call
pop
cmpsb
mov
or
or
mov
inc
cld
cmpsl
mov
notb
mov
outsb
leave
xor
lret
inc
sbb
aad
scas
push
je
daa
xchg
pop
inc
mov
sub
jp
dec
iret
das
pop
jnp
fcoms
jnp
shlb
push
adcl
push
mov
daa
inc
add
cmpb
mov
inc
push
push
call
cmp
orl
fildl
ret
push
jo
add
inc
adc
loop
insl
mov
outsb
pop
out
add
jle
gs
mov
dec
test
and
jb
popf
mov
subl
pop
sub
mov
adc
push
pushf
jge
add
fwait
pop
add
lret
cmpl
das
fisubrl
dec
xor
sub
push
mov
in
mov
out
ss
dec
lock
shlb
and
xchg
inc
inc
cmp
popa
je
lods
mov
testl
popa
lret
add
fstps
pop
test
dec
xor
test
leave
stos
mov
mov
into
jmp
sub
pop
rclb
int
mov
outsb
sub
cmp
jno
movsl
mov
add
dec
push
jmp
add
sbb
nop
addr16
aaa
call
mov
jns
cmpsl
jg
sbb
sbb
fists
or
fwait
lds
cmpsb
jmp
push
fadd
pop
lods
fst
sub
fcoms
and
shlb
sub
imulb
movsl
out
xchg
addl
adc
rolb
add
faddl
and
in
dec
cltd
xchg
add
pop
mov
lahf
mov
insb
out
jl
pop
mov
sbb
nop
xor
dec
pusha
cmp
jne
cli
pop
xchg
sbb
push
pop
ljmp
jge
imul
mull
pop
jl
xchg
ret
adc
pop
jge
out
ret
pop
mov
test
mov
cmpsl
fs
insb
out
cmpsl
adc
dec
cmp
pusha
inc
and
rcrb
aad
rolb
mov
adcl
orb
sub
xor
pop
ljmp
fwait
in
pushf
dec
les
cli
xor
push
xor
cmp
and
decb
cltd
dec
rolb
xor
or
loope
insl
mov
pop
push
and
movl
sub
xor
push
and
push
dec
pop
gs
data16
push
lahf
sub
lock
inc
mov
dec
or
jo
jle
cmpsl
pushf
loopne
cmp
fists
out
inc
mov
std
mov
adcb
or
les
movsb
fwait
repz
xchg
dec
mov
es
push
aam
ds
idivb
int3
fcmovu
cltd
cltd
adc
sub
sti
das
js
lods
cli
jp
adc
jmp
sti
imul
adc
push
cwtl
pop
adc
and
or
add
addr16
jle
ffree
nop
sbb
push
gs
mov
jg
push
addr16
xor
pop
or
popa
popf
and
or
add
out
fs
out
and
ficomps
lcall
repnz
loop
pop
popf
push
ja
shrl
dec
aaa
test
adc
fmuls
pop
test
sub
notl
sbb
addr16
add
flds
sbb
xorl
jg
xor
les
inc
and
mov
pusha
cwtl
adc
sub
loopne
dec
dec
fcoms
and
movsl
gs
daa
outsl
mov
fs
mov
pop
mov
dec
jae
sbb
testl
mov
mov
jl
pop
dec
dec
mov
stos
push
xchg
push
fstps
xor
mov
and
loope
sahf
and
sbb
push
push
jecxz
test
fnsave
mov
jbe
jns
notb
inc
imul
and
dec
movsl
sbbl
inc
inc
inc
or
shlb
aam
cmp
icebp
pop
into
or
jb
xor
and
and
cmp
leave
les
pushf
push
das
pop
pop
cld
pushf
xchg
aas
loop
cmp
mov
sbb
mov
out
cmp
mov
and
into
leave
xchg
in
movsl
scas
xor
cltd
xchg
or
jg
sbb
pop
sahf
xchg
xchg
mov
movb
bound
push
idivl
add
dec
cmp
out
xor
imul
popf
pop
dec
movsl
jge
pushf
sub
jge
push
imulb
cmp
gs
mov
js
out
ror
jne
lahf
cli
shr
add
stc
movsb
add
fwait
test
mov
cltd
bound
jae
lahf
xlat
adc
sub
xor
pop
in
sti
inc
cmp
fldenv
mov
fimuls
sub
cmpsl
mov
scas
sub
add
sbb
inc
fisttpl
fbld
add
mov
mov
sbb
loope
test
xor
pop
mov
sub
iret
pop
mov
pop
call
test
cmpsb
or
sbb
cmpsb
mov
inc
mov
mov
mov
add
loope
arpl
xor
dec
lods
int
adc
pop
out
sahf
testl
adc
jbe
cmpsb
call
lods
pop
or
jmp
lahf
pop
or
ss
jle
jl
movsb
adc
inc
negl
add
bound
shll
jge
mov
add
or
cmp
cli
in
andl
inc
cmpsb
das
sub
mov
leave
adc
fucomi
call
lret
icebp
adc
mov
mov
inc
sub
fcomps
clc
xchg
mov
cmp
xchg
sti
xchg
iret
push
push
fldcw
xor
sub
push
inc
inc
repz
aaa
add
or
jp
in
cmp
mov
cmp
cmp
mov
mov
and
lock
add
daa
lods
lock
divb
repnz
dec
popa
push
call
lret
sbb
bound
sub
cmp
fisubl
cmpsl
xor
dec
add
jmp
sub
mov
ljmp
or
dec
cli
lock
mov
rcrb
or
mov
sbbl
jp
jg
lcall
xchg
lods
cmp
or
lds
out
pop
jae
and
bound
outsb
pop
loope
xchg
and
lcall
jo
dec
xchg
and
xchg
leave
xchg
lret
mov
add
xchg
add
out
xor
push
mov
jp
push
cmc
movsl
xchg
ja
mov
aas
das
mov
sub
test
int
testb
js,pt
or
aas
sub
mov
jecxz
jns
aad
les
xchg
imul
lret
cltd
sub
ficomps
adc
and
lods
ljmp
cwtl
pop
cli
jbe
sbb
ja
ret
adc
repnz
inc
push
sbb
shll
sbb
in
cmpb
mov
rcl
scas
and
pop
lea
rorl
hlt
aam
jns
daa
leave
mov
push
jne
xchg
cs
adc
pop
cmp
out
out
popa
jnp
fucomip
adc
movsb
dec
lock
cmp
fwait
fwait
inc
loope
nop
stc
aaa
cwtl
aaa
aas
fiadds
lea
or
pop
in
add
inc
andb
push
jmp
and
xor
hlt
cmp
adc
notb
dec
pop
out
and
xchg
lea
mov
jb
mov
cmp
imul
cmpsl
adc
xchg
dec
fisubl
and
cmp
imul
fdivr
insb
inc
xchg
stc
mov
push
xchg
scas
sbb
mov
adc
movsb
sbb
lds
push
filds
sbb
jmp
ret
aam
popa
leave
add
push
rcrb
and
daa
cltd
and
lcall
adc
fisubs
mov
cmpsl
data16
std
ja
xchg
sbb
in
mov
stos
iret
push
and
fists
imull
and
push
jg
fsubp
cmp
scas
xor
std
xorb
cltd
xchg
gs
dec
or
xchg
les
cmp
cli
cwtl
xor
in
jns
jae
mov
aad
rcrb
ds
mov
cmp
mov
lcall
pusha
cmp
mov
lret
mov
or
cld
cs
lcall
insl
lret
inc
fs
cltd
mov
push
movsl
mov
nop
mov
orl
mov
jnp
or
jbe
jp
jmp
out
sbb
mov
ds
jne
in
cmp
fsubl
or
lock
mov
mov
jbe
cmp
or
jns
movsb
mov
adc
mov
or
popf
sbb
negb
ja
push
js
leave
inc
sub
xor
pop
xchg
xchg
jae
and
cmp
inc
dec
movsl
fldz
loop
mov
xchg
mov
fdivs
icebp
out
stc
or
or
sbb
push
pusha
popf
lods
arpl
push
leave
ret
lret
mov
jmp
jb
xor
ljmp
fldt
das
sarl
xor
and
stc
cltd
popa
sahf
jl
inc
inc
loope
inc
ret
lahf
pop
adc
test
jmp
inc
mov
ljmp
jo
push
pop
mov
ror
xchg
and
js
jecxz
xchg
xchg
arpl
pop
add
nop
xchg
sbb
imul
inc
jmp
int3
cmpsb
dec
scas
in
and
mov
insb
mov
and
cli
mov
test
push
jno
push
push
test
int
jl
add
dec
sar
inc
insl
jno
xchg
sti
add
lea
push
sbb
pop
clc
dec
or
pop
int3
or
and
mov
cmp
mov
orl
pop
sti
jp
cltd
mov
fimull
mov
cwtl
mov
and
or
cmp
push
lods
insl
iret
fldcw
inc
shl
pusha
push
sbb
push
out
inc
xchg
mov
out
dec
movsl
push
add
jmp
or
arpl
fdivr
mov
add
js
pop
es
and
sahf
push
int
add
push
adc
jge
jmp
aad
inc
dec
pop
sarl
sbbl
mov
gs
jns
inc
or
aaa
dec
cltd
xor
addr16
jb
sbb
mov
aad
test
sbb
mov
xlat
xor
pop
pop
popf
add
nop
mov
inc
ds
mull
ljmp
es
outsb
dec
rorb
lcall
movsl
mov
shl
ds
in
lret
pop
push
mov
lods
jns
jle
ret
test
ret
clc
movsl
lods
arpl
ret
ds
shlb
stos
pop
out
cmp
cwtl
inc
inc
add
cmpsb
push
scas
arpl
mov
sbb
scas
fsubp
jns
ror
mov
adcb
lea
mov
cltd
sub
in
mov
cmp
dec
test
xchg
jne
or
push
scas
mov
in
inc
lcall
ljmp
es
and
outsl
les
add
insb
or
jp
and
dec
out
xor
jno
enter
fs
jl
cmp
dec
mul
cmp
mov
xor
cmpb
push
jo
and
setg
pop
test
scas
cltd
leave
xor
jmp
xchg
mov
push
xorb
mov
jb
pushf
scas
enter
je
int3
xchg
call
inc
cmp
xchg
pop
lods
imul
or
push
leave
call
add
dec
cli
cmp
ret
loop
loop
jmp
push
sarb
pop
xor
jb
loop
add
sbb
daa
out
imul
es
and
or
nop
mov
shlb
cmp
and
push
adc
adc
lcall
jmp
jmp
lret
xchg
adc
popa
mov
out
pop
dec
dec
test
and
mov
cmpsl
movsb
les
mov
lret
and
pop
push
dec
div
mov
fs
pop
cmp
out
xorl
jp
mov
ror
stc
mov
and
incl
aaa
pop
lock
or
cld
and
rcr
cs
sahf
mov
andl
and
and
dec
adc
inc
mov
mov
xor
std
out
mov
pop
lret
dec
aas
cltd
ret
out
divl
mov
jns
mov
pop
xor
xchg
push
and
dec
aas
out
xorl
movsl
push
cmp
stos
ret
fnstenv
test
jp
gs
inc
mov
enter
cmp
mov
loop
adc
dec
out
xor
fcmovbe
xor
imulb
jg
insl
repnz
ljmp
mov
cmp
dec
pop
repnz
pusha
cmp
popa
mov
lods
add
cmp
sub
rorl
js
outsl
sub
pop
scas
mov
jp
or
imul
lds
xor
lret
loop
das
mov
push
fcmove
sti
jo
xchg
stos
popf
cmp
lock
and
mov
sub
or
sub
repz
fcom
daa
cmp
movsb
adc
push
add
aaa
and
lahf
faddl
sti
addr16
mov
xor
push
fsts
push
push
rcrl
sub
and
inc
mov
sbb
pop
jnp
mov
push
push
fwait
mov
les
in
dec
data16
lahf
mov
sarl
or
js
dec
push
mov
rolb
cmc
fstpl
stc
in
and
and
mov
pop
lret
and
cmp
cmp
adc
notb
push
idivb
jg
popf
jae
sub
jb
push
sbb
arpl
inc
push
xor
popf
addl
sbb
lock
xor
mov
and
loop
loopne
int3
sub
xor
add
xchg
lcall
pop
pop
or
loopne
repnz
in
in
dec
cli
pusha
cli
cmp
ljmp
movsb
xorb
in
mov
sbb
loop
inc
xchg
rolb
lret
subl
mov
mov
dec
xchg
fcmovb
push
divl
jecxz
enter
pop
notl
jecxz
adc
andb
xchg
movsb
loopne
aaa
sub
jle
mov
enter
mov
loop
lea
sub
adc
xchg
jmp
and
aas
popa
outsb
ret
jl
fs
faddl
div
rcl
jge
adc
out
sbb
and
mov
lret
adc
ja
loopne
movq
mov
inc
mov
mov
leave
cmc
imull
inc
pop
shlb
loope
adcl
shl
test
jecxz
mov
imul
aaa
xor
mov
cwtl
hlt
out
and
jmp
into
sahf
inc
lods
test
les
add
fwait
test
xchg
sub
cmp
mov
lret
je
into
cmp
rolb
inc
sgdtl
or
push
lahf
pop
les
or
test
clc
in
push
sbb
sbb
gs
popa
dec
insb
inc
pop
enter
lea
inc
cltd
xchg
shrb
dec
ret
and
xor
jae
sbb
inc
jp
aas
adc
std
mov
mov
mov
cmp
aaa
add
ret
int
xlat
jns
mov
jbe
mov
std
fcoms
arpl
xor
popf
sub
sub
jle
int
push
stc
mov
xchg
dec
loop
sbb
or
pushl
movsb
or
jnp
jns
ljmp
rolb
push
std
ja
add
out
and
push
lahf
jle
in
adc
cld
mov
aam
js
adc
std
popf
pop
push
pop
mov
mov
stos
mov
pushf
sub
mov
cmp
mov
lcall
test
sub
cltd
jo
sbb
push
loope
dec
push
lods
adc
lods
leave
push
and
test
aad
enter
mov
out
pop
add
mov
aas
push
cld
xchg
mov
add
ret
pop
fisttpl
mov
mov
in
imul
pusha
sbb
mov
jl
inc
clc
cltd
or
mov
jns
jecxz
into
data16
or
pop
mov
insb
jle
push
sub
mov
les
jmp
jo
lret
insl
stc
outsl
clc
addr16
imul
xor
movsb
mov
push
and
int
ret
jecxz
incl
push
pop
stos
addr16
nop
imul
nop
popa
adc
std
push
cmp
cmp
or
xchg
lock
adc
pop
cmp
pop
dec
inc
dec
adc
or
mov
adc
add
pusha
push
sbb
and
loop
push
rolb
sbb
jg
or
xchg
mov
addr16
push
cmpsl
inc
repz
inc
cmp
nop
xor
mov
xchg
xorl
scas
in
je
fisubrl
outsl
cmpb
jl
cld
sub
mov
test
fisubrl
sahf
jne
testl
jae
cmp
imul
in
ss
inc
int
or
out
enter
mov
and
adc
test
out
and
bound
loop
sbb
imul
xchg
sub
out
stos
pinsrw
sub
xchg
loopne
inc
mov
repnz
rcll
add
sub
test
mov
ss
in
xor
orl
lahf
aad
out
lods
mov
dec
mov
xchg
sti
cmc
addb
cmpl
sub
cmp
adc
jbe
cmp
xor
xor
add
mov
ret
push
jo
push
shlb
xchg
fcomps
lods
inc
and
dec
xchg
push
dec
gs
addl
jle
xor
jge
data16
cmpsb
mov
mov
fmull
imull
inc
mov
mov
orb
repnz
enter
push
repnz
outsb
fucom
lods
mov
mov
pop
sbb
mov
ss
or
jns
xlat
sbb
sub
inc
repnz
das
mov
cmp
fwait
stos
scas
insb
add
inc
cmp
jnp
sub
pop
cmp
stos
mov
and
sti
loopne
divb
push
jmp
or
sahf
sub
inc
daa
fstl
or
mov
add
scas
in
mov
and
pop
pop
aam
lret
dec
jns
adc
push
inc
adc
cld
iret
mov
jecxz
out
and
xchg
push
dec
add
add
nop
pop
shll
sub
mov
fldenv
test
jae
jecxz
scas
lods
es
push
add
addr16
xor
jmp
test
sbb
into
es
sub
jle
sbb
jmp
mov
lods
nop
jg
addr16
int3
jae
rolb
dec
or
jb
cli
ret
adc
push
cli
inc
sbb
xor
and
push
cmp
pop
negl
and
cmpsl
cli
adc
cli
mov
adc
into
push
in
enter
push
and
fcoml
shlb
inc
mov
lret
jnp
nop
dec
xchg
decb
shl
shll
aam
and
inc
cmpsl
call
mov
scas
xor
jge
movsb
sbb
pmaxsw
jg
int3
pop
mov
loope
and
push
leave
push
add
es
jno
sti
imul
jnp
pop
ret
imulb
mov
mov
cmc
pop
add
ret
fadds
out
pop
push
jae
mov
js
and
out
add
pusha
inc
xlat
stc
xor
and
inc
inc
addl
add
aad
cltd
ret
and
mov
xchg
push
scas
cmp
push
imul
xor
add
adc
clc
pusha
shll
aaa
cld
sbb
jne
adc
pusha
add
fisubrl
bound
mov
sbb
mov
repnz
jo
mov
mov
cmpsl
push
pusha
xor
test
es
add
adc
or
jne
das
loope
pop
rorl
cmp
xchg
mov
hlt
or
xor
adc
das
push
mov
mov
xor
adc
dec
xlat
pushl
xor
cwtl
int
lret
xchg
sub
lock
jne
mov
pop
and
jae
sahf
mov
daa
mov
push
and
addr16
or
push
inc
out
movl
mov
push
movsb
jne
imul
inc
xchg
les
inc
push
cmpsb
dec
push
aas
repz
or
cmp
mov
adc
outsb
fcmovnu
outsb
mov
leave
cmp
and
push
jecxz
movsb
jmp
add
lcall
add
xor
imul
add
mov
pop
mov
inc
mov
lret
and
xor
pusha
imul
sbb
pop
lods
leave
mov
add
movsl
scas
scas
addr16
fiadds
lds
pop
jns
movsl
sbb
inc
or
mov
les
pop
sbb
and
or
and
jne
push
dec
test
sbb
nop
aas
mov
sarb
inc
xor
push
stc
jno
movsl
movsl
dec
mov
inc
addb
adc
pop
orl
adc
and
or
pushf
cmpsb
outsl
aaa
scas
adc
fisubrs
rcrb
inc
and
lret
mov
pop
aad
mov
sbb
lods
imul
push
or
pop
insb
pextrw
cmp
pop
xchg
push
and
pushf
xchg
cmp
or
mov
adc
inc
sub
insl
pop
lcall
xor
das
std
orl
sub
mov
outsb
into
pop
sti
inc
jecxz
cli
push
ficoms
lds
lret
dec
std
jg
pop
jno
jb
adc
or
cli
scas
push
pop
ds
hlt
nop
sub
cli
cmp
mov
or
sarl
mov
xchg
sub
xlat
loopne
imul
ds
loop
nop
push
pop
lahf
mov
or
loope
pop
shlb
xor
cmp
and
mov
mov
mov
add
push
dec
clc
push
sub
and
push
mov
sub
jne
cmp
push
adc
mov
mov
mov
daa
ja
movsb
push
xchg
cmp
fsubrp
aam
test
adc
shlb
data16
pop
mov
cmp
addr16
ja
popa
repz
lahf
enter
aam
popa
pop
int3
adc
xchg
adc
in
jnp
cmc
mov
test
aas
sub
leave
leave
dec
fisttpl
or
jno
jg
sbb
mov
lds
pop
jb
pushf
xlat
pop
out
enter
and
xchg
js
cmp
int
imulb
aam
decl
stc
aaa
out
sub
mov
jnp
xor
jnp
inc
add
bound
mov
push
mov
daa
cmpsl
fucomp
add
mov
mov
movsb
inc
hlt
in
mov
enter
pushl
adc
push
leave
cmc
fnstenv
jge
xor
push
leave
mulb
bound
insb
push
aad
mov
xor
lds
push
mov
hlt
xchg
push
add
mov
fiadds
les
rclb
mov
lcall
fcmovnbe
sarl
xor
bound
popa
imull
adc
sbb
mov
rcr
jb
adc
in
sahf
mov
out
aaa
out
dec
clc
mov
fadds
jp
lea
cld
out
inc
mov
and
pusha
das
adc
mov
nop
lahf
aad
sub
dec
int3
pop
mov
inc
jle
adc
mov
pop
gs
adc
add
mov
daa
imul
leave
mov
repz
jno
bound
into
mov
inc
mov
ss
mov
daa
adc
mov
ljmp
adc
insb
loop
out
inc
jecxz
adc
cli
cmp
mov
mov
imul
hlt
xor
repz
mov
rol
stos
stos
push
or
int3
jno
push
addr16
aaa
cmp
pop
cmp
int3
mov
stc
test
stc
inc
pop
mov
jle
stc
lcall
aas
insl
jo
sahf
jae
sub
movsl
mov
jb
jg
mov
xor
pop
dec
jae
mov
ret
shll
and
cmp
enter
das
jo
call
ret
adc
xchg
sti
enter
loope
idivb
adc
arpl
outsl
push
adc
insb
push
adc
jb
sbb
out
dec
int3
scas
xlat
adc
mov
rolb
enter
and
jl
cmp
pop
fadd
push
stos
xchg
xchg
cltd
and
stos
cwtl
leave
pop
mov
jmp
dec
push
cmpsb
pop
adc
jne
push
hlt
daa
imul
mov
pop
adc
add
xchg
pop
or
mov
popa
fldt
mov
es
out
call
inc
sub
arpl
in
inc
pusha
fwait
mov
jns
dec
or
in
jnp
repnz
idivb
mov
add
mov
jle
or
jl
dec
pusha
aam
outsb
jno
xor
int
lahf
cmp
sbb
cmpsl
fbld
mov
mov
popa
inc
sbb
std
pop
out
int3
pop
sahf
or
lods
and
or
dec
int3
shll
xchg
call
leave
mov
cli
sahf
iret
ds
stos
adc
mov
rcr
jae
pop
insl
daa
xchg
mov
push
mov
push
into
stc
push
dec
dec
cmovg
or
in
shrb
and
pop
fdivrl
psubusb
sbbb
inc
outsb
sbb
mov
sbb
mov
jae
mov
test
mov
inc
gs
dec
aam
dec
sbb
lds
daa
ret
jle
or
stos
adcl
add
mov
fsqrt
pop
fmul
jnp
ljmp
bound
push
push
pop
xchg
insl
aas
andb
xor
fsubs
es
mov
xchg
mov
mov
mov
into
push
push
aaa
movsl
pop
push
repnz
mov
aam
out
jb
data16
daa
push
mov
or
and
inc
and
and
fwait
jp
aam
mov
push
sbb
loopne
push
jmp
sti
mov
lahf
push
cld
cmpsb
mov
mov
stos
xor
and
iret
je
cltd
fists
cmpl
scas
adc
xchg
ljmp
dec
inc
mov
xor
add
sbb
jecxz
add
inc
push
cmp
push
sbb
push
popa
test
lcall
inc
ret
mov
xor
sahf
aas
out
sbb
movsb
mov
mov
xchg
das
imul
mov
cmc
mov
sbb
mov
repnz
orl
test
push
test
pop
sbb
mov
push
xchg
and
xor
int
insw
je
fisubrl
or
outsl
cltd
push
fisubs
inc
das
jns
imul
stos
dec
hlt
imul
lods
enter
sarb
sbb
push
inc
shll
adc
mov
add
pop
push
hlt
cmp
sub
out
movsb
xchg
sbb
jnp
mov
pop
ljmp
push
jge
xchg
or
aas
leave
inc
sub
mov
pmulhw
int
lock
leave
shl
cltd
or
int3
rclb
cmc
mov
mov
inc
and
in
jne
jnp
iret
les
icebp
sahf
xlat
in
pop
pop
push
xchg
cmp
pushf
cmp
int3
rol
jae
xchg
jno
cmp
adc
mov
dec
addr16
daa
jnp
shlb
ds
jmp
test
iret
xchg
jge
addr16
inc
mov
nop
jle
xor
mov
shrl
push
iret
mov
mov
push
shrl
or
or
mov
adc
sub
addl
pusha
inc
decb
test
loopne
out
jmp
lret
dec
inc
popf
ljmp
addr16
das
ss
push
nop
cmp
xor
aaa
dec
mov
adc
bound
out
scas
imul
sub
lods
xchg
std
jp
fs
movsb
icebp
ljmp
pop
xchg
push
lret
stc
mov
call
xchg
hlt
push
je
inc
rclb
ret
scas
imul
dec
rorl
repnz
rorl
mov
sti
lods
sbb
fists
xchg
xor
por
pushf
lock
xor
sub
dec
into
fildll
adc
add
arpl
mov
and
adc
add
push
cmp
lret
sti
and
xor
mov
outsl
bound
bound
dec
push
pop
add
sub
jns
jne
stos
fnstsw
pop
jle
mov
test
repnz
adc
ja
and
inc
pop
das
cmp
sub
adc
rolb
adc
mov
xor
pop
hlt
mov
add
sbb
or
add
nop
sub
aam
fwait
xchg
jns
sbb
btrl
leave
dec
mov
sbb
negb
mov
and
mov
mov
xor
cmp
add
imul
jo
mov
shlb
insl
into
mov
rorl
xchg
mov
les
lock
ficompl
sbb
arpl
adc
fildll
xchg
setbe
or
mov
jmp
fld1
mov
cmc
add
inc
stos
aad
jecxz
lods
pop
hlt
nop
jbe
xor
or
out
mov
mov
adc
sbb
ret
xchg
fyl2xp1
push
xor
xor
mov
push
sbbb
sbbl
xor
mov
add
outsb
stos
xchg
xchg
inc
into
mov
ja
es
mov
in
jecxz
sbb
xchg
jge
orb
lock
mov
aaa
hlt
adc
mov
repnz
scas
add
push
aaa
fsubs
data16
or
add
dec
nop
mov
xchg
or
adc
cmp
scas
incl
clc
cmp
and
mov
ljmp
stc
jp
rorl
or
scas
mov
cmp
push
jecxz
incl
test
jnp
cmpl
stos
mov
js
jnp
cmp
lods
push
xchg
xchg
ret
leave
adcl
and
jne
pop
stos
inc
ficompl
sbb
add
out
loopne
jge
push
cwtl
push
ja
repnz
dec
repz
and
mov
shrl
and
aaa
insb
add
push
jbe
shlb
aas
cld
cmp
adc
push
clc
mov
xor
jmp
jno
mov
in
mov
xchg
mov
loop
sbb
inc
push
inc
push
aad
xchg
shlb
add
outsb
cli
out
je
xchg
dec
out
and
adc
inc
ds
hlt
mov
cmpsl
addr16
sbb
inc
xchg
or
mov
xchg
jle
pmaxsw
pusha
push
mov
inc
add
rclb
jmp
cmp
sbb
adc
push
cmc
ds
test
cltd
shl
pushf
out
sbb
imul
pop
test
sbb
rolb
popf
mov
sbb
loope
addb
lcall
in
shrb
lods
sbb
sti
or
aaa
clc
test
xchg
cwtl
or
push
jge
outsl
aas
lea
mull
test
gs
inc
push
pusha
outsl
xor
dec
push
leave
push
adc
mov
daa
mov
or
fiaddl
mov
jp
adc
subl
pop
mov
xchg
mov
sub
pop
pop
je
scas
inc
inc
sub
push
aad
sub
push
pop
jmp
sub
push
mov
mov
aaa
imul
or
xchg
data16
fcompl
loope
xor
and
mov
es
jmp
or
sbb
int
or
sbb
mov
scas
test
mov
mov
in
inc
mov
or
ret
sbb
fucompp
pushf
sub
push
icebp
sti
movsl
stos
jp
enter
adc
lods
les
out
or
mov
out
movsl
fdivs
fdivp
or
add
push
gs
inc
daa
pop
mov
test
sbb
aam
jb
add
jns
dec
insb
shlb
imul
lret
sbb
stos
addr16
xchg
pusha
out
movsb
cmp
mov
adc
test
xchg
dec
pop
clts
add
lods
out
aad
jge
daa
mov
or
push
pop
pop
es
xorl
dec
pop
sti
sub
adc
gs
dec
loop
iret
outsb
mov
sbb
mov
xchg
mov
mov
lods
orl
das
imul
stc
adc
rclb
fbld
push
fisubl
jecxz
lret
push
subb
lcall
repz
xlat
dec
add
xlat
dec
out
push
inc
mov
mov
ret
jle
xchg
repnz
neg
cli
aaa
out
hlt
adc
sub
popf
test
dec
pop
lret
test
jmp
inc
addr16
cmp
sub
mov
lock
hlt
ret
adc
push
or
mov
or
mov
xor
cmp
in
out
lods
std
cmp
movsl
bound
push
out
add
je
xor
and
lret
stos
stos
in
add
mov
pop
cmp
test
mov
scas
xor
xor
aaa
mov
jg
enter
sti
xlat
fdivrs
inc
dec
push
inc
js
and
test
mov
fidivs
hlt
in
clc
cmp
or
inc
xor
sbb
sahf
xor
push
and
into
jg
outsl
mov
sbb
dec
mov
jo
fwait
mov
gs
mov
jns
lcall
and
jae
jb
nop
ret
mov
sub
out
adc
dec
xor
and
jmp
pusha
cld
inc
gs
out
sbb
pop
adc
sub
stos
mov
xor
push
cmp
or
inc
pusha
dec
or
mov
outsl
mov
sub
fimuls
loopne
scas
or
imul
test
xchg
ret
cmc
in
sbb
sub
shrb
xor
int
push
push
push
iret
dec
bound
mov
and
jge
cli
mov
ja
add
sbb
imul
shlb
sbb
xchg
shrl
cmp
pop
aam
adc
scas
scas
adc
sub
ret
and
out
aam
lods
insb
push
movsb
loopne
ret
aas
lods
nop
and
add
add
and
jno
jns
cmp
out
arpl
inc
adc
or
js
push
xlat
lods
mov
xor
jl
pusha
out
stos
pop
cltd
or
mov
xchg
mov
mov
push
add
mov
sbbl
cmp
outsb
and
test
inc
fistps
jmp
xor
mov
pop
loope
push
stc
or
xchg
test
mov
lods
pop
inc
mov
mov
fs
in
mov
subl
jbe
adc
or
push
inc
incl
mov
xor
mov
ljmp
mov
leave
pusha
in
dec
add
mov
ret
cld
pop
mov
xchg
mov
fimull
xor
pusha
call
sti
cmp
stos
and
xlat
adc
scas
mov
cmp
mov
iret
js
mov
mov
out
out
mov
dec
pop
fisttpll
or
sbb
inc
mov
scas
scas
movsl
jle
inc
sbbb
and
mov
outsb
mov
push
or
call
test
mov
xor
lds
cli
mov
mov
jno
loop
sub
rcrl
insl
xlat
and
dec
or
fiaddl
scas
push
push
fisubl
stc
xchg
or
push
addr16
lahf
scas
xchg
mov
movlps
aas
in
xchg
xor
cmp
push
jecxz
out
insl
push
rorl
adc
dec
pushf
pop
bound
mov
jbe,pt
push
dec
fxam
int
pop
sbbb
stc
add
stc
mov
sub
aam
gs
pushf
arpl
adc
xchg
inc
pop
test
inc
clc
int3
and
xor
mov
jnp
mov
mov
push
sub
xchg
fwait
pop
xchg
push
rclb
jl
jnp
lret
jp
call
nop
mov
push
dec
loop
movsb
ficompl
nop
xor
cld
or
mov
mov
pusha
cmp
les
sbb
js
imul
mov
pushf
out
pop
and
xor
xchg
jg
cmp
pushf
ljmp
mov
mov
jae
aam
hlt
mov
sbb
mov
insl
nop
xchg
shl
shl
xor
sub
sbb
push
jo
popa
dec
add
and
das
sbb
inc
adc
and
jmp
xchg
sub
or
jge
loope
std
mov
cltd
pop
ss
push
cmp
pop
mov
andl
mov
je
jb
pop
cli
cmp
mov
push
and
loopne
mov
into
push
outsl
jnp
push
and
std
inc
clc
cs
jmp
sub
xor
inc
stos
loopne
js
imul
ljmp
test
inc
xor
outsl
add
or
nop
shll
pop
je
mov
rolb
decb
jbe
punpckldq
je
push
movsw
stc
add
and
lcall
cli
mov
add
inc
or
aaa
and
jecxz
xor
inc
movsl
cmp
mov
mov
xchg
int
imul
mov
xchg
dec
rclb
arpl
inc
pop
xlat
mov
hlt
cwtl
sbb
adc
js
repnz
lods
fdivrl
addr16
incb
sub
icebp
loopne
xchg
stc
jne
lret
cmp
sub
mov
jbe
bound
mov
mov
jb
adc
xlat
cmc
inc
fdivp
rol
ss
pop
and
or
add
mov
pop
push
sbb
test
mov
jnp
cmpsl
mov
sub
ss
pusha
jge
xchg
add
xchg
leave
push
mov
adc
jnp
dec
jmp
add
cmp
clc
incl
mov
or
bound
lcall
std
cmp
and
and
pop
or
pop
sub
mov
aam
mov
out
push
fs
mov
jecxz
loop
pushf
stc
test
test
enter
xchg
ficompl
push
in
pop
ret
pop
and
inc
rcrb
dec
adc
lcall
ja
sbb
xchg
out
mov
mov
nop
test
loope
fidivrl
in
inc
lods
outsb
stc
inc
inc
sbb
ret
sbb
cs
sub
push
sub
scas
xchg
jp
adc
pusha
js
mov
mov
mov
aas
arpl
fdivs
inc
pushf
pop
inc
daa
insb
cmp
call
scas
loopne
xchg
jnp
pop
nop
mov
inc
insl
js
xchg
inc
or
into
push
mov
imul
stos
lahf
ljmp
mov
clc
decb
dec
xchg
fwait
testb
sub
sarl
jne
int3
pop
push
loope
jne
ds
xchg
or
mov
jnp
movsb
mov
in
dec
test
insb
jbe
sub
inc
pop
mov
aaa
test
call
adc
jnp
adc
test
enter
movsl
mov
xor
push
xchg
sub
les
out
jbe
frstor
out
dec
negb
xchg
lahf
mov
push
lds
rcll
stos
inc
cmpb
scas
mov
out
push
test
outsb
add
mov
aaa
jb
in
push
pop
xchg
lock
sub
lods
push
rol
clc
push
add
push
stos
add
push
cmpsl
inc
rcrl
mov
ja
outsb
fisubl
pop
mov
sbb
xor
dec
sbb
cli
sahf
repz
daa
push
inc
ja
popf
and
sub
mov
insl
movsl
fprem
inc
pop
subl
lods
pop
add
jl
pop
jge
out
out
push
xchg
inc
pop
stos
mov
lock
or
das
fnsave
push
lds
stos
mov
sub
rorb
sbb
xor
call
or
pop
push
outsb
mov
lret
ds
xchg
loop
xchg
shlb
jnp
imul
call
arpl
jp
mov
jns
inc
jns
jl
out
fwait
jecxz
pop
add
inc
mov
popf
cmc
add
negb
cwtl
fidivrl
js
jns
mov
mov
fidivs
mov
push
jbe
mulb
sbb
cmp
push
and
es
ret
add
adc
add
mov
push
jecxz
jnp
adc
mov
out
xchg
inc
roll
xor
fisubl
and
shlb
adc
inc
daa
sbb
es
outsl
or
aad
pop
dec
push
add
cs
xchg
je
dec
lods
arpl
push
test
les
pushf
pushf
inc
ja
int
and
aas
xor
scas
shrb
imul
dec
and
sbb
outsb
les
rclb
lds
pushf
dec
cmp
in
andl
dec
pop
jecxz
xchg
hlt
lahf
aam
sbb
add
sbb
push
mov
out
cmp
or
les
iret
xor
std
hlt
add
out
dec
fdivs
vmovdqa
enter
xchg
inc
cmp
hlt
xor
pop
inc
inc
and
mov
xchg
insb
jg
jb
pop
aam
ss
pop
cmpsl
imul
lret
sbb
fistps
repnz
int
es
imul
lcall
xor
out
nop
jg
mov
pop
icebp
je
cmpl
test
lahf
orl
rcrl
das
cli
notb
loop
inc
push
movsl
out
push
add
xchg
jns
ror
in
xchg
es
push
sbb
mov
mov
lahf
push
lods
repz
out
jmp
jnp
inc
inc
jbe
dec
pusha
cmp
mov
xor
push
addl
lds
outsb
out
jnp
and
aam
or
stos
fstpl
dec
lret
int
sbbb
sbb
add
push
stos
loopne
mov
in
mov
or
sbb
sbb
out
fnstsw
inc
and
fwait
daa
andb
lock
shrl
mov
or
dec
aad
ret
or
into
pop
adc
rclb
lods
or
arpl
jle
addr16
dec
je
jae
es
jae
adcl
scas
adc
icebp
sub
mov
adc
dec
aam
dec
mov
add
aaa
stos
sub
mov
cmp
mov
and
or
xchg
rorb
jb
pop
xor
inc
cltd
mov
pusha
out
push
cmc
pop
aad
sahf
inc
stos
sbb
xlat
xor
data16
xchg
dec
inc
sbb
jge
mov
jmp
push
pop
sub
add
cmp
sbb
sbb
out
fwait
mov
adcb
adc
mov
stc
inc
mov
lea
pop
dec
into
push
cmp
or
aad
inc
push
fimuls
or
add
xorb
push
mov
jne
cmpsb
scas
jl
test
lock
arpl
imul
aad
es
pop
pop
test
bound
push
jae
inc
test
aam
dec
jne
pushf
pop
iret
scas
aas
imul
push
sti
ljmp
mov
into
adc
sbb
xchg
into
adc
xor
inc
adc
rolb
jb
jbe
xor
mov
insl
repnz
jmp
test
inc
jmp
rcrb
divl
push
dec
and
stos
push
enter
fwait
int3
jno
cmpb
jmp
sbb
jecxz
outsl
cmc
popa
lahf
xor
or
adc
movaps
bound
fxtract
xchg
mov
inc
add
cmpl
mov
or
stc
sbb
out
sbb
mov
sub
push
mov
lahf
out
jae
js
dec
cmp
stc
pop
lret
dec
mov
xchg
inc
fmuls
sub
dec
inc
cli
pusha
fdivr
xor
and
loope
mov
popf
add
adc
mov
mov
pop
jg
lock
jae
stc
mov
and
int3
push
popf
jg
xchg
pop
ss
lods
mov
pop
dec
add
std
and
out
mov
scas
mov
int3
filds
cmpsl
in
xchg
in
adc
xchg
mov
mov
sub
out
add
jno
aaa
mov
mov
andb
xor
cmp
xchg
dec
dec
xchg
bound
test
mov
push
adc
out
fwait
loope
mov
cmp
push
cmpsl
dec
iret
jbe
mov
imul
xchg
iret
add
jmp
inc
fsubrl
jnp
jg
mov
jb
jmp
addr16
xchg
pop
aas
mov
jno
gs
mov
xchg
adc
rcrl
fwait
in
clc
pushf
lds
push
fnstsw
push
cmp
and
scas
clc
and
es
loop
pusha
add
inc
cmpsb
pop
mov
test
call
jmp
out
frstor
pop
cmc
popl
dec
int
jmp
nop
les
andb
adc
sbb
out
daa
adc
dec
pop
lret
inc
movsb
out
jbe
sahf
mov
imul
push
push
xor
mov
dec
roll
sbbl
repnz
adc
xchg
pop
push
cld
or
mov
mov
dec
ljmp
push
inc
mov
sti
sub
dec
push
sub
loope
out
pop
into
mov
pop
mov
pop
ja
sbb
lock
jecxz
fcmovu
lcall
adc
shrb
and
or
vpackuswb
imul
pop
mov
mov
stos
mov
test
shlb
ss
push
mov
mov
sti
inc
push
je
sub
jg
mov
sbbb
jge
pop
fwait
sbb
push
int3
in
stos
dec
sub
repz
fmull
loopne
push
and
je
lea
xchg
in
andl
mov
int
inc
ret
xor
jmp
sarl
test
lods
sbb
pop
fdivrl
and
push
pushf
jnp
xchg
jg
je
sub
cltd
xchg
cmp
out
mov
dec
mov
lods
jae
push
mov
jb
rcrb
movb
and
xchg
imul
adc
fildl
das
divl
or
jb
xor
ds
adc
lahf
add
sbb
hlt
mov
pop
leave
test
adc
dec
int
add
jns
fnstsw
jo
les
daa
pop
aas
js
inc
insl
rclb
mov
xchg
ja
push
xor
jno
push
mov
cmp
inc
jo
sub
cwtl
mov
cmp
fmuls
xchg
add
lret
rorl
pop
push
mov
sbb
or
adc
cmp
stos
push
in
xchg
jnp
dec
xor
shrb
stos
dec
cmc
mov
and
gs
inc
push
jle
icebp
cmpsl
adc
inc
mov
scas
lea
cwtl
jns
xchg
mulb
xlat
xor
pop
mov
inc
pop
xchg
xchg
or
dec
push
adc
popa
push
stos
mov
das
aaa
pop
jae
push
xchg
adc
dec
ljmp
clc
movsb
dec
sarl
cmp
in
xchg
shll
jp
xchg
adc
sbb
mov
je
cld
icebp
sbb
ret
dec
inc
loopne
icebp
add
mov
xchg
mov
mov
mov
adc
dec
mov
cmpsl
clc
mov
inc
incb
mov
mov
mov
loope
aaa
and
scas
push
pop
lret
cmc
movsb
cmpb
push
scas
push
jae
xor
xchg
and
dec
mov
cli
inc
inc
cld
out
jle
mov
sub
cmpl
or
ret
sub
and
cmp
scas
adc
cmp
icebp
or
out
dec
xor
inc
cmp
aam
pop
sub
push
fidivrs
cs
xchg
cmpsl
dec
lods
adc
pop
xor
add
ds
adc
xchg
mov
test
movsl
jg
pop
pop
mov
insb
popa
pop
jl
cmc
push
sbb
rorl
scas
cld
imul
ss
xchg
sub
cwtl
in
adc
pop
pop
adc
push
xchg
in
out
fimull
iret
jmp
xchg
lods
mov
adc
popl
dec
in
add
and
out
dec
inc
mov
mov
ds
stos
dec
dec
stc
test
fsubl
pop
xchg
push
clc
push
and
xchg
cmp
insl
sbb
repnz
xchg
lret
inc
mov
xorb
adc
int
mov
int3
dec
lods
jns
mov
mov
sub
mulb
xor
push
cmpsb
xchg
sub
inc
enter
fwait
ss
jecxz
jb
sbb
mov
add
sbb
mov
push
and
or
shll
mov
xchg
mov
sbb
repz
leave
inc
imul
ljmp
mov
bound
mov
stos
subl
movl
cwtl
rorb
gs
adc
pop
sarl
aaa
pop
sarl
xchg
sbb
outsb
cmp
cmpsl
faddl
or
daa
pop
shrl
pop
enter
mov
loop
jle
ds
shrl
xor
xchg
mov
push
cltd
mov
in
xchg
jae
add
lock
adcb
xor
icebp
adc
jg
lcall
mov
es
stos
shll
jbe
xlat
lock
cmp
mov
mov
mov
aad
das
lahf
cmp
call
imul
stos
sub
repnz
jecxz
cmc
das
cmpsb
fists
fwait
dec
mov
pop
sub
jo,pn
mov
jp
rcrb
add
fcoml
test
scas
inc
das
add
add
movsl
jo
nop
or
xlat
ret
insl
aas
mov
aas
jo
or
into
adc
add
mov
and
ss
leave
xor
or
test
dec
test
sti
cwtl
push
pop
and
add
jp
push
dec
pop
cmpsl
js
lods
push
fincstp
stc
icebp
nop
dec
mov
mov
rolb
mov
cs
dec
cwtl
es
dec
lret
loope
sbb
arpl
rcll
addr16
sub
or
lahf
cmp
fwait
loop
fcomi
mov
sub
pop
sti
pop
mov
rorl
cli
jns
lret
jp
into
mov
ficomps
pushf
sbb
hlt
sbb
inc
sbb
jmp
into
xchg
std
clc
or
loopne
mov
rolb
jno
popf
fisttps
push
or
aad
push
jp
dec
stos
cwtl
mov
subl
push
or
cmp
or
and
popa
pushw
push
cmp
ret
or
mov
sbb
dec
push
movl
fstl
stc
out
push
xor
xor
sub
mov
fstl
and
rorl
cli
xchg
jge
idivl
adc
jge
call
loopne
sbb
xor
mov
adc
adc
inc
cmpsl
sbb
lret
fs
into
push
jne
arpl
and
mov
lcall
xchg
das
fmuls
leave
and
dec
popa
jbe
sbb
test
jo
lret
in
cwtl
jg
push
int3
adc
mov
cmp
cmp
shrl
rorb
out
nop
sub
rclb
sti
sbb
ret
loope
push
mov
or
out
mov
inc
mov
xchg
lock
shll
loope
fidivs
xlat
enter
jg
sub
adc
pop
addb
sbb
inc
mov
push
xchg
mov
mov
mov
xchg
add
nop
ret
adc
xchg
js
push
dec
hlt
not
pop
push
inc
or
xchg
and
stos
sub
adc
xor
popa
jl
loop
add
jo
mov
cmpsb
push
mov
jo
adc
fs
push
inc
inc
lahf
shll
jb
fwait
out
inc
push
sbb
jns
clc
mov
pop
lahf
bts
bound
lret
addl
movsb
js
lret
jp
or
xor
pushf
orb
dec
movsl
mov
and
or
sub
shll
xchg
push
or
xchg
adc
ror
inc
adc
cmpl
outsl
test
movsb
push
pop
cmp
add
inc
jbe
push
fsts
cmpsl
xchg
push
inc
into
enter
data16
jno
push
imul
dec
stc
test
in
and
jns
movsl
fmulp
cmp
xchg
dec
out
add
jbe
bound
leave
pop
or
inc
stos
or
mov
repnz
or
cmpsb
mov
sbb
xchg
ljmp
frstor
aas
push
out
outsb
inc
out
xorb
int
pop
xor
in
lods
pop
mov
daa
fistpll
xchg
out
cmp
fimuls
popf
add
fwait
or
arpl
sub
or
hlt
es
inc
cltd
mov
xchg
pop
hlt
fs
clc
ret
in
loopne
mov
pop
adc
push
sar
add
lea
fdivrl
repnz
movsb
pop
mov
jg
nop
cmpsb
mov
jp
inc
and
sub
mov
cmp
mov
mov
and
insl
outsb
mov
mov
push
mov
add
or
and
add
subl
xchg
mov
push
xor
mov
inc
ja
mov
mov
push
dec
enter
dec
mov
dec
shll
jnp
insl
push
mov
insl
mov
push
es
mov
jnp
test
repnz
into
nop
xor
mov
jge
lcall
jno
sti
cmc
sti
sub
repz
outsl
push
or
subb
and
ljmp
in
push
xchg
mov
lret
jecxz
adc
inc
popa
jle
sub
mov
stos
cmp
xchg
out
sbb
sub
bound
adc
adc
fcmovb
jle
fs
outsb
mov
inc
cmp
test
inc
mov
iret
ds
aas
adc
movsl
jl
xor
aas
shl
jle
jmp
dec
add
lahf
pop
xchg
jae
add
cmp
mov
ficoms
dec
std
push
or
push
mov
scas
rorb
shlb
xchg
pop
jo
ret
add
or
mov
sub
hlt
adc
lock
adc
xchg
jbe
ja
and
mov
inc
mov
and
push
lcall
fdiv
xchg
xor
aam
inc
or
mov
adc
jge
sbb
repz
insl
mov
dec
jmp
mov
aam
daa
lret
push
jmp
sub
dec
out
testb
in
xorb
jns
sbb
push
out
or
dec
push
add
and
add
xor
dec
std
cltd
icebp
sbbl
and
adc
mov
imul
int3
ja
push
jl
fisttpl
pop
ret
shll
scas
mov
out
in
push
cmp
out
rcrb
pop
inc
lret
insl
fidivs
xlat
popf
cmp
clc
jg
rorl
or
aam
je
jnp
dec
cltd
add
cwtl
mov
fbstp
xchg
mov
push
ljmp
jecxz
pop
jb
inc
adc
jecxz
lea
imul
shrb
cmovnp
xorl
loop
inc
mov
lret
dec
jmp
adc
mov
jecxz
jp
jns
stc
jecxz
mov
mov
xchg
in
xchg
les
jo
sbb
pop
cmp
xor
cwtl
add
add
jne
or
stc
lahf
pop
inc
adc
xchg
xchg
fldt
movsb
or
bound
out
scas
lods
cld
cmp
mov
or
and
dec
roll
in
mov
mov
jb
xchg
cmpsl
out
cmp
nop
xchg
or
jns
repz
imul
and
test
sub
std
adc
je
int3
arpl
and
cmpsb
add
out
xor
cltd
scas
inc
in
sbb
jle
and
pop
ret
lcall
ds
sbb
inc
dec
loope
cmp
lret
jo
push
push
fdivrl
aam
jg
pop
and
xchg
push
mov
jmp
ret
push
out
repnz
int3
cmpl
cmpsl
pop
push
pop
add
adc
ljmp
ds
inc
pusha
inc
leave
aaa
inc
mov
inc
sbbl
sbb
adc
jl
inc
sti
inc
lods
loope
mov
enter
adcb
fnstcw
xor
mov
int3
lods
jo
outsb
push
sub
leave
and
int
fsincos
icebp
xor
xchg
sbb
jmp
fstl
dec
js
push
push
std
xchg
sbb
cltd
xor
xchg
xchg
pop
lods
ret
adc
lds
int
push
pop
std
scas
cmpsl
xchg
cmp
aam
fiadds
pop
push
inc
movsb
repnz
add
pop
in
jb
int3
lret
mov
stos
push
sub
jmp
xor
ret
pop
outsl
js
clc
jnp
or
inc
xchg
hlt
fcomp
mov
mov
outsl
hlt
test
in
mov
push
sub
dec
mov
adc
pusha
adc
inc
sahf
jne
shr
sarl
movsb
test
sbb
cmc
mov
and
mov
repnz
sbb
cmp
jp
ljmp
push
push
dec
ss
mov
popl
inc
and
test
lahf
sub
int3
lret
jmp
rcrl
or
add
mov
mov
inc
pop
pop
cmpsl
inc
aaa
mov
pop
mov
jg
daa
adc
mov
inc
mov
and
notl
mov
lock
test
enter
or
mov
adc
outsb
sbb
push
jp
mov
sti
cmpsl
mov
pop
hlt
rcll
leave
idiv
fsts
lar
xor
xchg
sbb
and
push
stc
nop
in
call
int3
stos
int
push
mov
fnstcw
std
sub
movsl
or
jne
push
add
sahf
stos
rol
pop
or
jo
loop
jle
and
gs
xor
inc
fnstsw
sub
shrb
jbe
cmp
popf
lret
cmp
or
xchg
lods
cli
fmul
add
ljmp
ljmp
pop
mov
loope
insb
mov
arpl
push
lahf
loopne
cmc
scas
sub
fnstsw
lret
add
sub
pop
jmp
jns
cmc
and
insb
mov
jle
jmp
hlt
paddd
cld
add
pop
mov
mov
outsl
leave
add
ret
mov
pop
seta
lret
outsl
shrl
sarb
scas
subb
add
repnz
mov
sbb
sub
aas
jmp
bound
js
xchg
xchg
add
ficomps
xlat
mov
push
fidivrl
ljmp
scas
test
imul
push
out
add
xchg
and
pop
lret
and
movsb
popa
shrb
xchg
arpl
mov
pop
stos
xchg
lcall
cltd
jle
ja
cld
mov
jecxz
mulb
mov
hlt
iret
in
push
mov
das
pop
aam
mulb
in
lods
cwtl
cli
adc
add
test
xchg
enter
inc
out
add
pusha
aad
adc
data16
shll
inc
insb
out
nop
and
shl
stos
scas
cmp
loope
les
out
cwtl
dec
inc
or
xchg
push
bound
jne
cmp
stc
jno
sub
add
jae
xor
or
mov
imul
sbb
popa
push
js
neg
jbe
push
into
fwait
pop
lods
mov
stc
sub
std
imul
das
inc
jmp
shll
imul
and
xlat
data16
mov
pop
loopne
adc
sahf
and
fisubs
push
out
imul
fs
jp
jle
and
cmp
mov
xchg
iret
in
inc
jo
rol
push
push
cli
dec
cmpsl
inc
idiv
cmp
push
push
cmp
aaa
outsb
cmpsl
mul
fstpt
add
loop
dec
and
pusha
mov
push
push
sbb
inc
push
jns
jno
adc
outsl
jbe
or
mov
sub
int3
push
into
pop
xchg
sar
jb
fimull
call
pop
sbb
test
dec
subl
mov
cmpsl
cmp
mov
cmp
sbb
lret
jbe
push
lcall
psrld
or
jno
dec
lods
into
movsb
or
lods
dec
jecxz
sbb
and
shll
push
or
es
pop
jbe
mov
icebp
jnp
xchg
push
mov
ds
lret
sti
ret
mov
arpl
mov
dec
mov
jnp
push
imul
test
inc
into
je
and
cwtl
lods
adc
inc
lds
sub
outsl
mov
and
or
rcrl
fstl
icebp
jecxz
cmp
pop
inc
leave
mov
inc
arpl
call
sub
mov
pop
test
dec
shr
sbb
fwait
pop
sub
scas
cmpsb
pop
inc
xor
push
icebp
xor
jmp
ds
rcr
add
add
mov
ljmp
cmpsb
inc
jmp
push
push
adc
insl
ret
lahf
out
xchg
add
pop
cltd
daa
lock
mov
arpl
push
inc
mov
fildll
call
mov
mov
scas
jmp
gs
jne
xchg
aam
movsl
xor
lods
or
jae
sarb
in
loope
sub
vmulpd
pusha
mov
pop
adcb
ja,pn
movl
xor
out
sub
and
cli
lcall
xor
adc
add
fucomip
aaa
sbb
sahf
pop
mov
mov
out
lret
mov
pushf
xchg
repnz
stos
add
and
test
loopne
rcrl
adc
ja
in
mov
clc
inc
imul
mov
call
cltd
jg
add
lret
fs
sarl
cmp
mov
sahf
push
fcoms
xchg
add
xchg
adc
mov
lcall
jbe
ljmp
or
loopne
xorl
jp
xchg
pop
lret
and
pop
mov
mov
shll
addb
leave
jmp
push
and
mov
out
bound
dec
xor
out
test
and
fstpl
sub
enter
cmp
add
pushf
fdivrp
rclb
inc
mov
jl
and
and
sbb
cmp
cmp
lock
es
xchg
xchg
repnz
mov
aas
aaa
jmp
xchg
loope
fsubs
jmp
rol
ffreep
insl
jno
jmp
ss
ja
adc
das
nop
cwtl
scas
out
cli
gs
inc
cmp
adc
cmpsb
cmp
test
mov
xor
sbb
dec
pop
xor
sbb
repz
sub
jno
inc
fisubl
cld
shrb
loope
int
ror
popa
push
mov
inc
insl
ja
xor
repz
lods
add
push
lods
jle
sbb
add
icebp
jne
dec
fldt
dec
jecxz
fstl
xchg
addr16
sub
sub
ds
mov
hlt
dec
lcall
inc
sub
cmp
dec
xchg
arpl
mov
imul
sub
pop
lret
sub
or
jnp
icebp
leave
jo
mov
insb
jns
add
popa
xchg
inc
inc
setb
lea
mov
pop
into
mov
aas
std
pushf
in
sbb
cmp
lret
ret
in
rorb
aam
or
pushf
pop
repnz
ljmp
push
subb
ljmp
pop
jns
inc
lds
mov
pop
lds
push
jle
jecxz
nop
or
lds
outsb
mov
gs
cltd
pop
leave
mov
mov
cmc
fstpl
leave
fisttpl
out
fisttpl
popl
icebp
push
sub
imul
movsl
icebp
pop
xchg
pop
and
pop
lahf
jecxz
aad
iret
out
ds
cmp
pop
scas
mov
xchg
cmp
ljmp
lcall
in
adc
jl
mov
xchg
xchg
hlt
mov
dec
push
inc
inc
ss
mov
fmull
data16
cmp
sub
scas
mov
stos
rcrl
mov
xchg
and
pushl
stos
lahf
aam
jmp
leave
lods
push
aad
jmp
push
and
inc
mov
sub
pop
clc
ja
or
addr16
or
int3
push
pop
inc
dec
mov
adcl
lds
test
xchg
les
in
loop
je
dec
push
pusha
mov
rolb
dec
adcl
jg
jmp
pop
xor
inc
jns
lds
add
lret
pop
ja
repnz
mov
adc
adc
mov
mov
in
xchg
addr16
push
cmp
pop
xlat
nop
in
and
test
push
jbe
stos
lahf
ja
mov
gs
cmp
mov
jns
hlt
shrb
or
jns
jle
stos
mov
es
loop
mov
jg
mov
das
pop
mov
or
inc
mov
shlb
xor
ret
push
dec
sub
cld
mov
jae
jmp
outsl
jle
out
push
int
aaa
and
lods
push
cs
adc
push
out
jno
ja
push
adc
cltd
jo
adcb
arpl
inc
add
lock
inc
or
push
jae
cmp
push
jb,pn
aas
test
mov
adc
cli
mov
vandnps
and
imul
pop
sbbl
push
nop
repnz
mov
stos
and
pop
loope
bound
gs
scas
lock
xor
inc
bound
addr16
cs
dec
dec
shl
negl
push
push
repnz
inc
cmc
pushf
mov
sub
int
sbb
out
inc
mov
in
call
movsb
xor
imul
into
fwait
jb
dec
insl
fmuls
enter
test
stos
cli
popf
mov
dec
clc
loope
mov
data16
cld
lcall
bound
sbb
rolb
sbb
out
mov
das
mov
loope
mov
or
ja
jbe
imul
xor
js
divb
jl
enter
scas
out
popa
inc
jp
jne
stos
adc
jno
inc
clc
test
and
loopne,pt
test
sub
sbb
pop
cmc
les
sbb
mov
mov
push
in
lcall
sub
xchg
lea
push
inc
xor
dec
mov
sub
arpl
pop
jns
xchg
fbstp
or
push
sbb
pop
sub
jmp
pop
mov
xlat
jbe
jle
cmp
jb
stos
sbb
scas
jns
adc
pop
and
cwtl
loopne
lahf
fildll
cs
adc
call
or
insl
gs
xchg
idiv
xchg
xchg
pop
adc
fwait
sbb
invd
push
lret
int3
push
pop
mov
imul
push
xchg
imul
sbb
rcrb
clc
mov
mov
dec
aad
data16
xor
popf
cld
jl
test
xor
xor
mov
fs
inc
cwtl
ja
mov
adcl
sbb
jo
popa
stos
dec
push
sub
xchg
push
dec
shr
loope
enter
pop
mov
adc
or
js
inc
pop
sub
fldt
cli
xor
pop
fists
or
ss
dec
inc
je
mov
sbb
lahf
ret
js
pop
or
out
mov
scas
stc
jo
pop
fdivrl
sub
and
cmp
stos
divl
mov
or
mov
xor
outsb
je
inc
je
jmp
or
xchg
jecxz
push
mov
sbb
pusha
rcr
and
cmp
xor
add
jl
movsb
cmp
loope
jae
stos
into
call
call
lods
add
dec
mov
rcll
mov
mov
stc
dec
les
stos
fsubrl
sub
pop
mov
lods
lea
adc
push
xor
push
insb
dec
push
idivb
sub
cltd
imul
pop
into
fisttpl
aaa
dec
mov
sbb
stos
jns
cltd
popf
adc
mov
stc
push
cmp
cmp
xchg
mov
cmc
dec
mov
rolb
iret
sti
pop
imul
shl
xchg
inc
push
in
mov
xchg
add
int3
inc
jl
xor
mov
adc
pop
and
add
mov
mov
sbb
fisttpll
sub
rcrl
mov
adc
cmp
leave
pop
or
out
pop
cmp
mov
icebp
add
mov
mov
jne
or
std
mov
call
xor
add
je
pop
std
xchg
pop
aad
sbb
adcb
mov
inc
leave
jo
rorl
mov
scas
push
mov
mov
aad
sub
dec
jne
int3
mov
mov
sahf
das
leave
mov
mov
inc
mov
mov
ret
jb
pop
movsb
jb
inc
push
sbb
push
mov
insb
push
push
fistpl
shl
std
xchg
in
stos
xchg
mov
sub
xor
adc
bound
flds
stc
jb
cld
mov
jl
loope
pop
lret
ds
mov
sbb
enter
jg
movsb
aad
pop
js
popa
mov
nop
push
inc
sbb
rorl
in
jo
jae
mov
mov
mov
mov
cmp
xor
outsl
or
shrl
add
jb
mov
dec
andb
outsb
sar
scas
pop
ror
mov
jae
bound
sbb
gs
push
inc
or
popf
sub
les
jo
pop
pop
int
and
push
aad
in
daa
xchg
gs
loop
jb
add
pop
divb
nop
in
adc
push
xor
je
test
jp
rcrb
xor
xor
dec
sub
dec
repnz
mov
lods
aad
bound
mov
sbb
mov
popf
xchg
mov
mov
jb
push
xchg
pop
stos
cmpsl
fdivrl
rorl
push
sub
icebp
leave
jne
push
pop
xor
daa
inc
sub
cli
push
xor
pop
xlat
in
xchg
stos
pushl
inc
dec
dec
xchg
addr16
mov
shl
outsl
mov
xchg
jmp
push
or
mov
or
push
int3
xchg
cmp
lret
cli
roll
jmp
dec
repnz
in
shrl
scas
sub
cmc
stc
cltd
std
push
pop
mov
mov
mov
dec
fistpll
and
mov
sbb
fistpl
sbb
sbb
mov
mov
out
or
jb
inc
ljmp
push
rorl
mov
and
pop
orb
pop
mov
pop
add
mov
daa
insl
outsl
ret
test
mov
movsl
dec
shl
mov
lods
aad
loop
data16
mov
cmp
push
std
ja
push
out
adc
pop
outsb
cltd
roll
lods
dec
in
popf
js
icebp
fdivs
inc
xchg
pop
popf
cwtl
or
jmp
lods
adc
lahf
insl
mov
roll
or
not
pop
push
in
or
sbb
add
repnz
cmp
sahf
cmp
gs
mov
jg
sub
aad
orl
mov
outsb
loopne
es
jb
jbe
push
mov
xchg
lret
lret
and
xchg
loop
call
pop
push
adc
jmp
add
mov
push
imul
int
xor
add
popa
outsl
dec
dec
leave
push
lcall
mov
or
dec
cmc
pop
out
add
jg
fcmovb
aad
mov
movsl
or
mov
jne
mov
cmpsl
jnp
js
bound
insb
or
mov
xor
aam
add
stc
lcall
repnz
inc
jb
outsl
adc
push
rcll
stc
or
sub
mov
pop
out
adc
jno
lods
aas
adc
test
mov
sahf
adc
inc
adc
outsl
cmp
sahf
xchg
pop
mov
cmp
mov
pop
scas
jmp
and
js
jns
popf
sbb
xchg
push
dec
jbe
fidivs
sbb
jmp
jecxz
icebp
loopne
sub
mov
xchg
push
popf
fsubrl
rsqrtps
je
leave
mov
lods
or
cmpsb
lea
jno
add
in
add
enter
scas
push
aaa
sub
hlt
fstl
cmpsl
mov
add
imul
ja
jns
popa
sub
jge
stc
push
stc
out
mov
jb
and
ja
push
and
icebp
inc
or
dec
pop
jecxz
insb
mov
repz
mov
push
inc
jb
mov
pop
dec
out
jecxz
imul
pop
les
inc
xchg
dec
ds
sub
test
dec
movsb
add
push
inc
push
mov
push
popf
inc
call
lret
mov
adc
clc
lret
mov
pop
sub
push
jle
dec
sbb
xchg
or
stc
or
jl
lea
pushf
sbb
outsb
add
adc
push
cwtl
push
mov
enter
imul
push
adc
push
lods
es
divl
jb
pop
std
stc
add
push
sub
dec
clc
adc
repnz
xorb
iret
jns
jecxz
stos
out
inc
movsl
addr16
pushf
mov
mov
adcl
pop
sbb
insb
sbbb
iret
adc
sbb
mov
pop
mov
rcrl
movsb
adc
fsubrs
fldt
sub
lcall
aad
push
sub
push
shr
cli
rorl
into
mov
sub
push
daa
cmp
jb
ja
loop
mov
inc
cmpsb
sti
inc
ficoms
sub
pop
filds
aas
xchg
jo
cmpsl
dec
fldenv
jmp
jae
pop
ret
jae
in
loopne
cwtl
sbb
inc
dec
or
stc
cmp
bound
cmp
aaa
xchg
xchg
inc
mov
mov
sti
push
push
imul
jb
mov
mov
into
or
popa
push
fwait
dec
push
aas
lahf
inc
std
pop
push
lods
test
cmp
fs
cmpsb
jmp
in
sbb
or
in
mov
movsb
ret
int3
loopne
push
cmp
sbb
lods
jmp
push
orl
mov
mov
jbe
ja
jp
fmulp
aaa
int3
mov
sbb
imul
or
cmp
rcr
and
mov
mov
fdiv
in
ja
fidivrs
ds
outsb
jmp
aam
dec
daa
cmp
mov
jmp
sbb
cltd
and
push
icebp
outsl
mov
mov
jp
in
das
sub
aas
adc
sbbb
mov
fucom
jp
pop
lret
or
mov
push
movsb
mov
inc
scas
sti
dec
fcmovb
push
mov
in
fiaddl
cmpb
dec
adc
adc
in
inc
cmc
sbb
add
ret
or
icebp
fwait
hlt
mov
jo
popa
cs
fldenv
jno
jl
insb
int3
adc
cld
ljmp
dec
mov
lahf
mov
jb
aad
mov
cltd
and
inc
shrb
ss
sbb
or
lret
js
stos
js
pop
ss
ljmp
and
in
sub
dec
nop
add
cmp
fimuls
fwait
mov
push
mov
pop
mov
sahf
or
dec
insb
mov
push
adc
leave
fimull
cmpsl
je
shrl
pop
xchg
xchg
push
pop
imul
mov
jle
fmuls
loop
lahf
aam
add
enter
cld
stos
adc
repnz
daa
movsl
mov
add
loopne
adc
pusha
test
push
adc
mov
subb
cmp
xchg
xchg
sbb
cli
fwait
jp
inc
sub
insl
adc
mov
rorl
push
pop
jecxz
stos
dec
mov
push
xchg
pop
rolb
pop
sbb
hlt
pop
mov
movsb
daa
test
mov
dec
stos
inc
add
mov
inc
imul
mov
xor
sti
push
pop
lods
arpl
sahf
adc
jle
mov
and
in
jae
in
push
subl
ja
xor
mov
sarb
lods
rorb
dec
jo
lods
aas
pop
cwtl
add
in
jne
sbb
mov
jg
fldl
scas
jmp
daa
imull
lret
pop
cltd
jmp
popw
daa
cwtl
std
std
loop
daa
shll
lret
and
inc
movl
shrl
jge
stos
aad
lret
push
sbb
cmp
leave
lods
jbe
xor
imul
pushf
in
sbb
addr16
pop
loopne
popa
cmpsb
test
push
in
addr16
iret
mov
das
dec
pop
xor
xor
mov
pop
sub
add
inc
aas
dec
mov
cmp
sbb
cmp
fwait
mov
leave
int3
ror
rcll
and
jp
sub
pop
xchg
arpl
push
push
bound
nop
xor
xor
xor
arpl
and
pop
jmp
les
adc
xor
ds
inc
push
dec
shl
and
jb
xor
pop
sbb
mov
xchg
cmc
jg
sub
in
xchg
je
mov
xor
and
clc
shrb
push
jecxz
loop
cmc
lahf
divb
stos
xchg
push
cmc
aas
sahf
ficompl
test
fbld
not
mov
adc
pop
ss
push
sbb
dec
pop
push
lahf
inc
xchg
cltd
mov
mov
push
cmc
in
xor
movsb
in
pop
mov
stos
add
pop
pop
int3
lods
call
pop
xor
and
jbe
dec
mov
cmp
pop
pop
adc
cmpsl
and
jge
cmpsb
pop
movsl
adc
cmp
aam
pop
test
or
loope
jo
insl
ret
cli
cmp
add
je
push
ret
cmp
cli
inc
xchg
rorl
aas
sbb
rclb
popa
stc
push
inc
ja
ret
pop
mov
je
outsl
push
sbb
mov
ret
adc
push
push
enter
push
pop
mov
and
fcmovnb
cmp
dec
pop
iret
adc
ja
int
aad
add
pop
jecxz
sub
xor
fcompl
cmp
insl
inc
push
xchg
movhps
out
ds
xlat
dec
fsubrs
std
pop
cmp
dec
dec
jp
mov
cmp
dec
xor
gs
sub
pop
mov
or
fcoml
in
cmp
mov
push
iret
cmp
mov
mov
mov
int
cmpsl
scas
into
xor
mov
ljmp
jmp
call
mov
je
mov
lret
outsb
lock
lock
mov
pop
rcll
in
cmp
mov
adc
or
loopne
test
mov
fdivl
popa
mov
cld
mov
fwait
xor
iret
imul
fs
mov
sub
mov
jo
push
xchg
mov
jno
test
sti
mov
loope
xchg
sbb
cmp
sub
push
jbe
std
mov
and
jmp
mov
xchg
add
repz
add
shrl
fdivl
test
mov
push
xchg
andl
push
movsl
ss
xlat
loop
cli
out
je
clc
nop
test
shrb
cmpsl
adc
push
jge
push
lahf
jp
mov
ljmp
adc
out
xor
stos
push
xor
leave
insl
push
dec
adc
mov
mov
sbb
fistpll
pop
out
fwait
int
jl
jb
xor
and
lea
add
stos
and
and
push
loope
push
scas
pop
cld
movsl
out
cli
cld
push
lock
add
ljmp
sbb
fimuls
pop
movsl
and
cmp
rcrb
out
add
lret
sbb
pop
sub
jmp
mov
lea
stc
xchg
repnz
push
cmp
decl
mov
push
sahf
and
mov
and
xor
sarl
icebp
pop
xor
and
mov
jae
das
cltd
ret
neg
dec
mov
aam
gs
mov
stc
std
negl
adc
in
sahf
xchg
pop
push
inc
ljmp
dec
insl
cld
jmp
xchg
sbb
xchg
mov
xor
jle
pusha
cmp
xchg
js
pusha
movsl
jl
fcmovnbe
das
lods
popl
fistpl
add
push
push
lahf
sbb
dec
lds
inc
inc
mov
sub
dec
repz
lcall
outsb
les
pusha
sete
in
shrb
xchg
and
add
sahf
xor
ss
nop
loop
sub
mov
sub
dec
inc
imul
movsb
dec
lods
aas
test
push
sti
js
lcall
test
daa
dec
or
sub
aas
adc
jns
ss
in
popf
push
xor
pop
xor
insl
or
jae
int3
in
fldenv
fs
adc
ja
sar
dec
or
out
xor
fcompl
cmpsl
dec
add
pop
dec
jl
out
mov
push
mov
inc
xchg
out
mov
mov
and
push
repnz
push
gs
test
testl
xlat
hlt
rol
outsb
ret
in
jnp
jbe
jle
cmp
or
icebp
ja
fbld
xchg
mov
push
idiv
cmp
fsts
mov
sar
rcll
dec
mov
stos
xor
push
xor
mov
pop
xchg
push
cmp
pop
repz
insb
jle
test
imul
gs
xor
jmp
xchg
mov
ljmp
jnp
dec
fwait
jnp
cmpsl
ficoml
scas
pop
sahf
mov
mov
mov
xchg
addr16
xchg
cmp
jne
mov
jmp
push
or
mov
lahf
into
in
dec
mov
xor
adc
testl
pop
jae
fucomp
std
xchg
fsubl
xchg
cmpsl
fsubs
ja
dec
mul
pusha
stc
fcmovu
mov
push
pop
or
addr16
sub
arpl
mov
pop
xchg
mov
fists
movsb
jne,pn
cld
jb
mov
fadds
std
sub
int3
mov
ret
test
inc
add
pop
jmp
ljmp
in
push
jo
and
aam
mov
das
jns
jns
pop
mov
inc
mov
sbbl
outsb
mov
and
jae
and
jecxz
sbb
cmp
jo
mov
xor
or
loope
jb
sbb
ss
jmp
daa
cmp
xor
cld
sub
jb
in
das
cmova
adc
enter
insl
imul
and
rcl
call
lret
mov
push
or
imul
push
scas
enter
cmpps
scas
and
add
jmp
mov
js
pop
xlat
test
pop
jle
jecxz
jb
notl
adc
dec
out
cmp
pop
pop
mov
and
repz
repnz
jbe
sub
popf
mov
dec
call
enter
testb
mov
rolb
pop
notl
mov
pop
mov
sbb
jp
scas
or
lret
sub
cmpsb
pusha
xchg
es
adc
xchg
push
std
add
xlat
scas
pop
imul
insb
repz
call
jno
lret
xlat
in
inc
dec
pop
cld
pop
push
icebp
outsb
dec
and
stos
shl
iret
mov
out
mov
ror
cmpsb
and
out
jnp
adc
fdiv
jl
lods
mov
jae
movsl
xchg
and
sbb
and
pop
loopne
inc
test
mov
and
ret
scas
cwtl
insb
shld
push
mov
fs
xor
ljmp
inc
je
daa
notb
pushf
push
aas
ja
sbb
mov
loop
orl
lahf
jg
dec
add
adc
es
lret
mov
adc
jb
cmp
aam
daa
push
mov
dec
stos
inc
push
xchg
mov
andb
mov
push
cvtdq2ps
xchg
data16
jae
loopne
lret
mov
add
xchg
jecxz
lret
cmpsl
lods
push
cmp
ss
daa
stc
insl
rorl
xor
add
pop
pop
test
ljmp
sbb
ret
call
jg
mov
mov
stos
fs
lcall
aas
cmc
repz
xor
xlat
mov
xorl
push
pusha
lods
mov
adc
mov
dec
inc
daa
pop
or
mov
pop
add
test
mov
cwtl
bound
xchg
cwtl
es
sti
mov
mov
sub
filds
sbb
or
cli
loope
lods
ficoms
or
bound
repnz
xchg
movsl
inc
sbb
add
and
mov
insl
pop
js
cltd
pop
inc
inc
hlt
xchg
xchg
andl
inc
push
sarl
add
mov
in
in
adc
or
adcl
ds
mov
in
lods
pop
push
mov
mov
clc
xchg
mov
loop
les
pop
fidivrl
test
jg
sbb
push
pop
scas
es
adc
pop
push
xchg
stos
cmp
cmp
mov
pop
jge
test
push
fs
mov
and
mov
daa
inc
dec
addr16
xchg
test
jns
lret
push
insb
sbb
inc
test
lret
shll
adc
mov
jo
mov
push
mov
int3
in
push
lea
cmc
and
mov
mov
jp
lahf
add
or
sarl
add
or
shrl
pop
std
pusha
int3
jle
lret
pop
out
iret
or
fstps
mov
mov
sub
jnp,pt
in
das
dec
add
jl,pn
fmuls
std
int
and
and
js
lea
xor
orl
and
mov
push
cmp
rcrl
xor
jp
js
in
sbb
pop
lret
mov
mov
loopne
cld
mov
adc
jg
shrl
inc
fadds
jo
aam
and
add
repz
pop
pop
std
daa
jb
mov
mov
cmp
sti
adc
test
scas
sub
je
movb
ja
fcompl
jge
xor
and
add
inc
test
rclb
and
push
dec
pop
out
mov
ljmp
mov
xchg
xchg
sub
inc
std
in
cmc
dec
mov
addr16
lods
lock
jge
jecxz
cmp
adc
jbe
push
cmp
add
and
jp
inc
inc
icebp
dec
adc
mov
mov
sub
xchg
pusha
adc
fwait
mov
push
sbb
and
insb
sbb
adc
inc
les
lret
sbb
arpl
cmp
mov
popa
dec
jmp
pop
mov
in
pop
add
mulb
inc
dec
fstpl
inc
subb
xchg
and
loopne
jno
mov
into
sbb
fwait
aas
enter
pop
pop
sarb
lahf
cwtl
in
out
jne
adc
cli
ret
xor
push
or
mov
test
rorb
xor
cmpsl
adc
ss
push
cmpsb
sbb
stos
push
pop
xor
call
xchg
dec
mov
into
ljmp
pop
cmp
in
and
sub
popf
push
add
addr16
cltd
arpl
add
mov
xor
iret
cwtl
into
test
fwait
pusha
push
sbb
mov
fwait
push
jg
sub
jb
xchg
mov
test
pop
out
xchg
dec
or
movsl
dec
xchg
stos
adc
xor
inc
sbb
sahf
dec
xchg
mov
or
jo
dec
scas
cmc
test
aad
push
lret
repnz
pop
imul
imul
mov
mov
inc
popa
sub
fwait
in
mov
sub
mov
sahf
mov
daa
push
std
je
or
repnz
push
dec
adc
addr16
fstpl
jo
scas
mov
aam
adc
int
addr16
jmp
push
mov
lret
sub
xor
data16
loop
push
inc
inc
inc
and
cs
inc
fisttps
inc
inc
loop
imul
pop
xchg
call
sar
stos
add
stc
adc
sbb
and
out
fs
pop
je
adc
sbb
sahf
mov
cli
daa
pop
mov
lds
cwtl
xor
es
cmp
inc
mov
mov
and
pop
aas
cmp
push
adc
mov
mov
jmp
repz
fs
fs
ficoml
cs
repnz
sub
imul
pop
bound
sbb
xor
pop
cs
mov
xor
pop
inc
lcall
mov
outsl
and
lea
mov
gs
jp
mov
xchg
xor
lcall
leave
adc
out
gs
test
inc
aam
inc
stos
call
jmp
or
xchg
cltd
push
xchg
jg
sbb
sbb
or
lcall
mov
and
inc
xor
mov
mov
add
mov
or
or
and
push
lcall
sbb
cmc
mov
sti
outsb
cmp
push
add
insb
scas
idiv
cs
xchg
outsb
jg
in
sbb
xorl
andl
fnstsw
or
adc
lcall
subb
mov
adc
sbb
out
loope
hlt
jb
pop
mov
sbb
push
and
add
lret
lock
stos
movsl
dec
cmpsl
and
push
sub
mov
and
cmp
test
call
cmpb
push
movsl
addl
jp
shlb
inc
or
iret
add
lret
sahf
sbb
mov
xchg
lcall
mov
push
xor
sub
xor
sti
iret
mov
into
cmc
jmp
ret
in
dec
sbb
jns
fldt
inc
outsb
sbb
out
shll
fld
in
jbe
imul
or
sub
dec
cmp
sbb
pop
leave
cmpsb
xor
mov
adc
pop
cmp
mov
fistpl
fxch
ljmp
imul
cmp
inc
pop
mov
mov
loop
clc
hlt
cwtl
xor
push
and
es
xchg
push
or
cwtl
and
xlat
dec
hlt
xlat
fstpt
push
push
mov
jns
les
into
insb
addr16
pop
into
mov
jb
leave
cmp
pop
dec
sub
out
xor
dec
or
xor
mov
cmp
add
pop
lret
add
sbb
mov
aaa
sbb
rol
out
sarb
rorb
push
jns
pop
inc
fnsave
xchg
adc
xchg
jbe
xor
or
insb
jbe
dec
repz
jle
lret
aaa
xchg
mov
cli
mov
push
jnp
mov
cmc
mov
or
mov
dec
xchg
dec
mov
stc
mov
adc
xor
aaa
jle
dec
sarb
incl
cmp
scas
cld
cmp
mov
sahf
pusha
leave
inc
cmp
je
adc
add
std
and
jmp
test
sbb
push
push
push
dec
enter
pop
test
pop
adc
jp
xor
jge
out
push
pusha
or
les
cmpsb
pop
out
insl
lods
fcomps
add
daa
int3
push
cmpsl
mov
daa
insl
rep
mov
jns
xchg
inc
je
inc
out
or
push
or
dec
or
add
dec
xor
mov
scas
test
pop
cmp
push
mov
pop
or
xor
pusha
inc
jb
jp,pt
mov
lds
jge
add
inc
fs
inc
xchg
xor
mov
sahf
and
cmpl
popf
mov
scas
mov
lahf
fbstp
int
sbb
jno
mov
push
jne
movsb
jmp
nop
sub
push
test
dec
cli
jnp
jne
push
bound
jmp
in
int
stos
xlat
nop
lds
ret
out
fisubrl
sub
fwait
jle
in
mov
mov
inc
dec
or
sub
mov
ss
mov
mov
sub
xchg
cmp
stc
test
or
loop
or
daa
add
push
imul
iret
push
cmc
mov
mov
repz
sbb
jne
mov
popa
xor
lret
dec
xor
push
repnz
shlb
movsb
pop
xchg
and
shll
pop
shlb
ret
test
add
pop
mov
sahf
mov
pushf
js
mov
jge
cmpsb
sar
cmp
sbb
push
jnp
das
fistpll
sub
fistps
aaa
loopne
sti
mov
mov
fdivp
fwait
push
add
sbb
int3
in
sbb
out
xchg
mov
sbb
sub
aad
push
push
popa
es
mov
sub
stos
adc
pop
shlb
xchg
ja
clc
jne
mov
mov
adc
cld
out
cmpsb
pop
ret
subb
imul
outsb
and
xor
pop
clc
and
mov
xchg
sahf
scas
pop
jb
jns
mov
cmp
rorb
fsts
add
fwait
ja
or
jns
push
std
movsb
cli
jne
inc
push
loopne
sbb
sbb
xchg
jp
cmpl
add
inc
add
and
push
loop
jmp
test
cmpl
pop
push
cld
add
mov
cltd
pushf
daa
in
xchg
pop
movsl
jo
fmulp
and
loope
outsl
jg
xchg
xchg
jl
fcmovu
insl
cmpsl
jge
mov
lahf
add
push
jo
push
rorl
frstor
faddl
push
xor
add
inc
xchg
addb
or
cs
and
dec
sbb
int3
mov
pop
daa
sbb
mov
lock
test
loope
test
in
enter
pop
out
sbb
ss
dec
push
lret
push
mov
sbb
adc
in
addl
dec
push
in
outsb
dec
xor
outsb
and
repz
mov
inc
ljmp
in
lret
jnp
mov
push
or
inc
add
or
scas
add
lods
inc
cmp
push
addb
lahf
jecxz
dec
or
mov
fnsave
sub
jecxz
cmpsl
jo
sbb
and
jae
jle
pop
test
push
sahf
jnp
cmp
aas
inc
fs
sub
test
outsl
icebp
xor
lock
mov
movsb
repnz
test
sbb
pop
movups
and
inc
loope
movsl
aad
rclb
and
lods
jb
mov
mov
lret
cmpsb
sub
shrl
and
mov
jb
sub
movsb
adc
jns
pop
sbb
inc
sti
in
xchg
inc
js
dec
xchg
sarb
or
jp
int
into
xchg
push
lret
sub
sarb
fs
xor
pop
icebp
mov
mov
and
mov
mov
sbb
push
add
lds
divl
mov
repnz
pop
fs
fmuls
push
adc
sti
mov
xchg
xchg
stos
in
cmp
outsb
cli
ljmp
adc
outsl
int3
and
cmp
cmp
inc
cmpsb
jecxz
sti
pushf
xchg
xchg
add
pop
mov
xchg
or
adc
lahf
repnz
rclb
inc
cwtl
push
daa
cmp
aam
je
arpl
add
add
push
mov
jae
jg
mov
mov
lcall
jne
jo
or
loopne
out
jne
pusha
shl
fidivrs
jo
cmp
and
dec
pop
jle
dec
jmp
fnstcw
daa
js
test
sbb
aad
push
imul
js
cmp
jg
sub
xorl
xchg
or
popa
mov
adc
adc
mov
shrl
jno
arpl
mov
cwtl
inc
mov
ja
pop
adc
movsb
or
test
int
xchg
mov
js
popa
stos
mov
addr16
jge
push
dec
lahf
addb
xchg
inc
inc
sbb
mov
les
bound
jle
mov
cmpsb
xchg
or
popa
push
popf
sarl
hlt
lret
out
jb
movsb
in
std
xchg
in
xlat
jecxz
add
stc
in
xor
shll
and
pop
outsl
and
leave
lods
mov
jae
mov
fbstp
call
push
les
data16
das
jne
inc
ja
pusha
xor
fstps
jl
std
pop
push
sbb
or
popa
imul
out
adc
and
dec
incl
dec
sarb
loope
int
push
aam
loope
int3
jg
int
lret
popw
jle
dec
sbb
pop
pop
aam
mov
testl
hlt
inc
test
iret
jae
fstp
mov
pop
mov
mov
scas
jnp
test
into
push
ret
test
jl
subl
sbb
push
test
lock
out
loope
xor
and
fisttpl
dec
sub
jne
lods
cmp
mov
cmpsb
insb
cli
sub
push
add
push
mov
enter
dec
inc
pusha
loope
ret
add
popf
ret
xchg
push
push
cmp
jae
cmc
pop
popf
xchg
xchg
cmp
adc
ss
ja
cs
cltd
dec
mov
dec
repz
cmp
fwait
push
mov
xchg
push
add
stos
mov
scas
aam
sub
orl
sahf
fs
insl
lcall
inc
fwait
or
inc
push
test
jbe
scas
and
or
mov
adc
add
cmp
jne
addr16
popa
cmpsl
addr16
and
lcall
jne
jmp
mov
sti
pop
mov
cmp
jo
pop
xor
hlt
xchg
out
adc
sti
mov
out
jge
ljmp
xor
in
mov
cli
les
or
mov
ret
call
pop
sub
loopne
mov
fcomi
xor
sbb
jae
mov
icebp
or
orb
movsl
sti
push
mov
inc
aam
insl
daa
mov
adc
xchg
cs
and
fnstsw
mov
mov
adc
pop
fwait
pop
xchg
in
inc
jp
push
xchg
add
mov
cmp
rorb
jne
test
or
lcall
sarb
dec
aaa
xor
add
jp
call
mov
inc
dec
sti
cmp
adc
add
jae
daa
ficompl
dec
out
sbb
loope
ret
mov
xor
cli
mov
push
push
add
push
inc
push
lcall
lcall
shlb
sbb
xchg
pop
sbb
mov
dec
outsl
pop
gs
adc
or
adc
xchg
mov
shrl
test
lods
jb
push
fidivrs
push
add
inc
sub
pop
mov
aas
imul
mov
pop
in
add
xchg
adc
mov
and
outsl
and
cs
stc
insl
imul
mov
push
popl
imull
leave
lock
out
push
lret
xor
inc
push
push
fadd
lretw
sbbb
pop
loopne
and
and
add
pop
imull
push
or
cmc
hlt
insl
pop
push
das
fbld
outsl
adc
xchg
xchg
xchg
call
mov
lcall
pop
xchg
cmp
fimull
cmc
add
ficomps
aaa
cmp
out
jl
mov
cmpsl
popa
lea
int
hlt
dec
scas
mov
xor
sti
inc
inc
dec
repnz
jle
mov
cmc
leave
jl
fisubl
loop
mov
push
addl
ljmp
inc
das
mov
lock
gs
lods
pop
sub
pop
or
push
arpl
cmp
cmp
cmp
add
fists
push
jge
bound
fmul
std
mov
sub
jl
cmp
stc
xchg
aas
xchg
mov
jne
or
call
push
jecxz
jo
pushf
lock
leave
leave
push
lret
inc
fnstenv
add
sub
mov
pop
outsb
cmp
cmp
mov
xchg
sarl
adc
push
dec
xor
lcall
sub
call
rcl
pop
pop
cwtl
xor
jp
dec
mov
mov
das
dec
pop
sti
sbb
sbb
pop
daa
push
leave
ret
xchg
lcall
push
imul
dec
mov
mov
jbe
cmp
sub
and
pop
notl
iret
mov
shlb
sub
mov
lret
mov
mov
cmp
inc
push
test
das
sbb
xchg
cs
out
inc
les
hlt
ds
push
call
or
push
jmp
shll
mov
test
jg
jo
sbb
adc
insb
mov
lea
and
je
and
out
repz
adcl
les
push
jnp
roll
sub
xchg
fs
pop
xor
and
insb
sar
pop
jecxz
inc
or
adc
mov
fidivl
call
mov
jno
addb
jl
das
cmp
bound
test
or
or
dec
rcrb
sbb
mov
or
or
lret
sahf
cmpb
inc
shl
outsl
push
add
pop
mov
sbb
hlt
push
dec
int3
pushf
push
dec
dec
or
in
in
mov
xor
xchg
aad
stos
inc
xchg
mov
xlat
in
jno
inc
or
add
cmpsl
jle
cltd
sahf
les
jns
gs
sbb
push
pusha
pop
es
add
mov
inc
pop
lea
and
and
mov
mov
cs
lock
inc
sbb
and
stos
jle
mov
xor
imul
and
push
jns
sub
icebp
sbb
aam
inc
je
jle
cmpsb
lods
lods
cmp
sub
in
ret
daa
adc
add
push
popa
push
insb
add
mov
mov
dec
cmc
aas
mov
das
into
stc
addr16
in
sub
lds
or
jg
jp
pop
and
push
xor
in
pop
xchg
inc
push
add
mov
adc
test
cld
daa
in
cmp
cli
adc
gs
into
add
cltd
cmp
inc
sub
xlat
sbb
daa
sbb
mov
stc
inc
mov
out
fldt
jle
push
mov
int
shlb
aas
add
dec
mov
adc
js
mov
jnp
jl
push
mov
pop
or
add
jnp
stc
dec
loope
adc
cli
loopne
mov
or
out
mov
mov
or
push
imul
rcrl
and
xchg
add
add
loope
hlt
jg
rcrb
jle
and
sbb
push
fisttps
and
add
aaa
fs
roll
imul
pop
pop
mov
pop
cmpsb
ret
shlb
mov
ds
mov
xchg
outsl
into
pop
xchg
push
lahf
inc
jg
es
movb
out
xor
pop
out
popf
loope
mov
out
pop
inc
xlat
cli
push
aas
fnop
mov
jmp
jno
cli
lea
in
cmc
push
sti
ret
dec
subb
push
and
aam
jmp
inc
mov
mov
lret
jns
imul
xor
sbb
insl
xor
xchg
add
add
jnp
mov
jmp
add
fbstp
mov
divb
pop
cmp
xor
cmp
les
xchg
jg
push
sub
insl
nop
add
xor
mov
pop
dec
pop
leave
fildll
inc
incb
test
dec
sub
sbb
imul
mov
sub
adc
ljmp
mov
mov
aaa
icebp
push
jle
nop
dec
call
mov
dec
shlb
and
cmp
insl
push
push
add
psubusb
data16
adc
pushw
jle
insb
gs
adc
mov
jnp
je
cmc
cld
push
mov
xchg
es
stos
into
mov
mov
std
cwtl
jmp
jbe
pusha
xor
cmp
mov
lret
loop
ret
es
cmp
or
jge
xchg
outsl
cmp
sub
test
cmp
xlat
scas
push
push
jno
inc
xor
lds
imul
mov
adc
shll
fs
ret
out
inc
fwait
jecxz
xor
loope
std
push
cmp
pusha
or
xor
inc
dec
lret
addr16
lods
or
adc
dec
xor
cmp
jle
xchg
movsb
sbb
jmp
sub
xor
aam
in
mov
imul
push
lds
add
aad
shrl
pushl
out
std
sarl
ret
loop
or
sbb
out
mov
jb
adc
cmp
aas
stos
adc
xlat
sub
mov
repz
imul
xor
sahf
mov
aaa
inc
lock
insb
push
mov
cmp
bound
and
cmp
aas
cmp
jl
fsubs
aas
push
lea
mov
in
jle
lds
pushf
xchg
outsb
pop
sbb
lds
mov
xchg
dec
mov
add
daa
cmc
rcrl
repz
mov
bound
scas
divb
or
movsb
dec
cmp
push
dec
push
je
hlt
jb
cmpsb
and
enter
pop
lret
fsubs
ds
ljmp
sahf
inc
icebp
cmpsb
or
int3
pop
outsb
fucomi
adc
inc
mov
mov
or
dec
adc
xor
pop
jmp
sbb
in
jo
lods
push
aaa
rclb
mov
jmp
xchg
push
adc
out
in
or
push
cli
add
inc
pop
sar
test
rcrb
daa
fists
jbe
xchg
subl
scas
xlat
jmp
adc
insl
inc
or
adc
pop
mov
push
rolb
push
jle
push
sarb
lods
dec
aam
icebp
dec
sbb
mov
pop
ret
pushf
or
bound
fistpl
fcomps
sbb
aam
push
mov
out
sti
into
xchg
pop
mov
jb
das
int
xor
lock
cmp
movzwl
mov
loop
xchg
push
sbb
fwait
pop
or
dec
leave
sub
lcall
xor
outsb
xchg
or
imul
inc
mov
push
adc
lods
ss
inc
cmpsl
xchg
rclb
data16
ficomps
nop
insl
mov
cmp
lods
fsubrl
fcomps
mov
outsl
ret
jl
aas
adc
mov
loop
mov
sub
mov
cmc
cmp
es
jo
out
es
push
fdivrs
push
das
sbb
mov
cs
pop
mov
xor
fcmovu
add
push
xlat
test
nop
mov
loopne
popa
jg
adc
cmpsb
dec
cltd
xchg
sub
xor
mov
push
adc
loope
ljmp
ret
jecxz
sbb
fcomip
and
push
or
lods
test
and
lock
or
inc
add
mov
mov
xchg
test
nopl
int
or
inc
pop
xchg
jl
or
add
cmp
sbb
xchg
mov
lods
jo
or
stos
mov
ret
ret
pop
dec
stos
sbb
out
movsb
pusha
cmpsl
movsl
in
jno
xchg
push
ja
dec
mov
and
fwait
sysexit
inc
lret
test
mov
add
jb
pop
jecxz
in
jl
sub
les
mov
nop
push
mov
or
xchg
in
push
in
sahf
mov
ja
adc
adc
and
rcr
cmc
dec
mov
mov
push
in
push
shlb
fcoml
shll
push
xor
add
adc
adcl
aam
aad
adc
daa
aaa
mov
cmp
mov
jo,pt
jge
mov
cmp
jo
je
xlat
xor
out
jge
push
adc
cli
dec
jne
mov
jecxz
cld
adc
pop
cmc
sub
cmp
sbb
test
sbb
xchg
enter
mov
pop
nop
push
pop
push
jns
adc
aaa
push
cmp
inc
js
cmp
ja
popf
push
cmp
and
movsb
aas
sbb
dec
stc
cmp
push
pop
xchg
fstpt
pop
jb
or
ret
fsts
xor
xor
stos
push
ficoml
jmp
adcb
test
pop
pushl
lods
jmp
push
inc
pop
sti
push
outsl
loop
jle
stos
cmp
aaa
insb
and
jmp
push
dec
mov
xchg
div
sbb
and
clc
jne
loope
loopne
addr16
cmpsb
mov
in
and
cmp
dec
adc
xchg
push
hlt
arpl
lock
cmp
std
jae
lahf
mov
daa
xchg
and
repz
test
mov
mov
pmaxsw
or
popa
push
mov
loope
lret
scas
js
test
pop
push
xor
dec
pop
pushf
sbb
inc
cmp
cwtl
pop
test
arpl
inc
jns
cmpsb
push
or
mov
lcall
mov
mov
push
inc
sbb
and
popf
pop
test
mov
xchg
xchg
in
mov
mov
adc
cmpsl
lahf
sti
cmp
jecxz
add
outsb
ret
cmp
ss
pop
dec
add
outsb
cmp
pop
lods
aam
clc
xor
aaa
push
cmp
out
fstps
das
lret
xchg
in
in
mov
pop
xor
aaa
or
mov
stos
int
push
cmpl
pusha
inc
mov
mov
pop
mov
cmp
cmp
popa
sbb
insb
das
xchg
mov
scas
hlt
lret
pop
mov
cmp
shl
mov
rcl
adc
lcall
pop
push
dec
pop
ja
or
jno
mov
ljmp
cmp
sub
dec
sbb
pop
mov
mov
mov
sbb
inc
adc
faddp
int
inc
cmp
das
imul
pop
lea
xor
push
mov
sbb
cli
fstpt
or
mov
je
mov
nop
mov
vcvtdq2ps
fimuls
mov
repz
out
xchg
cmp
fscale
in
mov
mov
mov
add
sub
outsl
mov
fisttps
mov
pusha
cwtl
pop
cmc
mov
out
xor
pop
ljmp
mov
xor
mov
fcomi
and
xchg
adc
cmp
popa
aaa
push
pop
push
insb
push
dec
dec
mov
mov
das
fidivs
cmp
stos
out
cmp
pusha
adc
push
fldl
iret
jge
lret
ljmp
sbb
jg
lahf
stc
cmc
ret
lods
and
testl
and
popf
cld
mov
pop
or
inc
outsb
jo
insb
pop
or
or
mov
test
cmp
lcall
lock
sub
dec
in
clc
and
outsb
outsl
mov
mov
and
xchg
stos
lods
add
out
push
test
add
push
or
push
ja
mov
nop
into
push
mov
xchg
cwtl
jns
xor
fwait
xor
mov
movsl
hlt
stos
arpl
popf
jle
cmpsb
loop
icebp
nop
repnz
jae
lods
incb
test
inc
bound
mov
jns
lret
in
push
cld
movsl
adc
stc
cmp
sahf
in
nop
mov
push
dec
jle
adc
jecxz
jno
sti
scas
imul
jae
cmpsb
insb
leave
mov
add
xchg
bound
ret
ret
pop
sbb
clc
xlat
jno
sbb
inc
mov
fisubrl
mov
sbb
lret
push
les
ljmp
sub
mov
adcb
xor
sahf
mov
jo
and
lods
pop
inc
call
add
or
push
std
nop
adc
pop
xor
dec
mov
pushf
lods
ss
cmp
adc
pop
dec
jecxz
gs
outsl
inc
dec
push
push
push
pop
mov
jecxz
mov
mov
sti
jbe
test
in
jge
in
add
dec
arpl
inc
and
push
pop
out
rclb
xor
push
cs
xchg
cmp
jae
jge
mov
pusha
and
and
xchg
fabs
adc
mov
push
pop
xor
mov
jle
lods
shrb
and
clc
add
pop
mov
jnp
ret
clc
mov
pop
xor
sbb
jns
dec
repnz
fistpl
adc
mov
call
mov
stc
adc
pusha
mov
push
repnz
push
out
inc
pushl
push
adcl
call
jmp
cmpsl
sub
xor
push
mov
rol
dec
cltd
pop
xor
loope
cs
jns
lret
pop
das
aad
push
inc
lods
jb
pushf
lret
ret
popa
mov
jbe
push
mov
lcall
or
mov
int3
fnstcw
lret
inc
sub
repnz
lods
lock
mov
bound
mov
testb
cmp
mov
cltd
inc
dec
mov
sarl
outsl
inc
jbe
dec
pop
dec
add
xchg
dec
cli
stc
test
pop
and
pop
lcall
xchg
stos
xlat
rcrl
add
sti
in
mov
inc
lea
jnp
ja
pushf
iret
je
push
mov
repz
shlb
pop
sbb
push
divl
dec
cld
push
xchg
dec
jbe
hlt
pop
inc
lret
test
sahf
add
mov
mov
pop
cltd
sarb
leave
int
mov
xchg
pop
fsubs
xchg
push
jns
test
out
add
nop
popf
cmpsb
rcll
xor
adc
stos
push
rolb
leave
fisttps
cwtl
jle
inc
insl
xchg
cwtl
and
xchg
push
rcrb
push
rorb
loop
mov
cmc
push
imul
popa
sub
pop
jbe
aad
mov
mov
or
mov
push
cmpsl
out
adc
test
lods
jg
imul
in
xor
int3
cmpsb
es
add
popf
push
mov
mov
mov
or
fstpt
cmp
push
fs
xor
or
push
movsb
sbb
rorl
or
mov
sub
andb
inc
pop
test
inc
inc
out
movsl
push
enter
jmp
pop
stos
aaa
cmp
xor
cmp
jnp
push
and
das
add
mov
roll
mov
and
dec
mov
and
mov
lock
shlb
xor
sti
jecxz
sbb
in
xchg
scas
push
hlt
lahf
inc
rcrb
cmp
addb
imull
into
pop
sub
jbe
scas
mov
adc
setge
jg
out
mov
ret
inc
and
fisubs
loop
repz
and
sub
jge
rcr
leave
insb
sbb
add
dec
xor
clc
push
lcall
shrb
jns
notl
ds
das
mov
mov
mov
mov
xor
jp
shl
cmpsb
insl
mov
mov
imull
mov
jl
loopne
maxps
mov
fdivrs
sarl
es
popa
sub
or
cmc
pop
jo
pop
icebp
sbb
sub
dec
sub
movsb
out
jo
in
mov
xchg
add
push
xlat
xorl
ficomps
cmpsl
jmp
lods
pop
mov
sahf
pop
mov
pop
ja
mov
dec
pop
fldcw
xchg
outsb
adc
aas
xchg
rclb
nop
movsb
xor
mov
sbb
inc
lret
inc
icebp
testb
mov
mov
lret
jnp
sub
mov
mov
jp
xlat
rorl
inc
jae
xorb
sbb
cmc
cltd
sbb
stos
cmp
and
icebp
cmpl
icebp
pushf
push
add
push
adc
pop
mov
fs
inc
in
cmc
dec
scas
cltd
scas
xchg
push
roll
adc
pushl
mov
cltd
mov
cmp
in
add
stc
lret
in
das
xor
dec
pop
hlt
sbb
mov
or
jno
push
mov
jb
cmpl
mull
mov
repz
mov
dec
test
adc
ja
test
adc
sub
xchg
mov
cltd
sbb
aas
lret
mov
ret
and
divl
flds
mov
int3
mov
sbb
or
mov
and
divb
dec
fldenv
xor
mov
xchg
loopne
dec
push
jmp
jno
insb
xorl
xchg
pop
lret
mov
loopne
push
pushf
mov
out
pop
add
xchg
mov
dec
sub
in
mov
lea
nop
fwait
push
aad
cwtl
cli
adc
push
dec
cmc
ret
or
mov
xchg
push
add
inc
push
sti
rcr
in
add
inc
jb
or
and
aaa
xlat
or
lods
rcll
in
dec
ljmp
stos
shrd
test
adc
shlb
jb
jge
adc
xor
mov
fldl
scas
pop
ret
or
lcall
dec
push
mov
adc
pop
ja
lcall
mov
pop
adc
add
jnp
stos
cmpsl
jno
sub
lret
lock
inc
lods
or
jae
lods
fisubrl
rolb
mov
add
out
int3
xchg
roll
out
push
ljmp
dec
out
pop
movsl
mov
test
popf
pop
jl
loop
adc
scas
sbbl
xor
test
in
and
loopne
inc
fistps
cmp
fcompl
std
mov
adc
adc
fisubs
sarl
cmp
xchg
mov
out
rcr
fdivrl
subb
nop
fiadds
pushf
icebp
lods
fmull
cwtl
cli
in
cli
mov
xchg
mov
loop
mov
lcall
adc
jle
adc
adcb
sbb
adc
mov
nop
loopne
lock
pop
xor
and
sub
or
xchg
and
clc
dec
mov
lds
push
jle
testb
jnp
addr16
push
fbld
imul
mov
rolb
lahf
repnz
in
sub
ret
sbb
lret
daa
push
cmp
jo
into
sub
fimull
fbld
inc
add
push
push
std
fsubr
out
aam
jp
or
adc
aad
dec
insb
pop
mov
movsl
xchg
mov
add
push
or
int
rol
lret
fs
daa
add
and
sbb
push
rcrb
lods
fsts
aaa
sub
mov
shlb
or
sbb
imul
daa
adc
pop
inc
test
leave
cmpsb
jmp
rolb
fs
out
lret
cs
rorb
loopne
mov
sbb
ds
adc
cltd
and
or
inc
inc
js
pop
cmpsb
jge
mov
orb
push
lret
ljmp
jge
addr16
dec
stos
in
mov
mov
loop
or
dec
push
dec
push
adc
cli
push
sbb
mov
and
mov
xor
jge
cmpsb
sub
shlb
mov
in
xor
mov
int
lods
dec
repz
outsb
push
cmp
mov
out
mov
in
icebp
jg
dec
xchg
adc
or
stos
bound
sbb
inc
loop
lcall
or
mov
xchg
repz
sbb
xchg
ds
call
jno
lcall
imul
lahf
mov
sbb
cltd
cmp
jbe
and
roll
test
mov
xchg
xchg
fists
lcall
add
cmc
mov
jmp
push
imull
int3
push
mov
inc
or
lcall
pop
or
or
jge
xchg
or
and
icebp
push
hlt
and
xchg
popf
stos
sub
rcrb
shrb
ret
divl
and
push
xchg
xor
cli
inc
cmp
sub
sbb
lea
movsl
mov
leave
mov
sbb
movsl
mul
int3
add
outsl
xchg
jmp
dec
aad
sbb
sub
dec
scas
js
add
inc
pop
inc
lcall
adc
lea
ljmp
les
hlt
inc
jno
push
push
movsb
cmp
test
aad
cmpsl
loope
ss
mov
fmuls
int3
jne,pt
cli
pop
and
cmpsb
push
aam
mov
cmpl
jecxz
gs
mov
cmp
mov
test
add
xor
lret
add
push
movsb
popl
std
bound
dec
mov
loope
pop
push
push
jmp
mov
sub
or
lgs
xchg
shlb
das
jbe
xor
xor
push
cwtl
mov
movsl
or
adc
fucomip
push
cmp
sub
icebp
push
pusha
int
bnd
clc
arpl
push
popf
imul
lret
cmp
bound
pusha
lods
mov
movsb
cmpsl
mov
sahf
gs
mov
adc
push
push
cwtl
in
push
subb
lods
and
imul
mov
lock
lcall
in
out
gs
cmp
mov
cld
sub
leave
jmp
test
xor
aad
mov
in
jb
das
mov
cmp
movsl
jae
jge
push
inc
xchg
aam
rcr
mov
xor
bound
sahf
xchg
shl
pop
add
loopne
lea
inc
imul
in
mov
inc
inc
xchg
pop
sbb
sub
fadds
pop
push
mov
mov
and
adc
stos
mov
and
xchg
sub
adc
stos
test
pop
arpl
mov
rorl
lds
adc
js
cli
cltd
mov
imul
out
insl
adc
and
scas
cmp
dec
call
shll
fldcw
outsb
cmp
enter
fcompl
and
or
push
test
shl
in
repnz
mov
lret
dec
mov
mov
iret
insl
hlt
scas
mov
inc
cmp
dec
mov
xlat
sarb
paddb
outsb
hlt
push
mov
mov
jae
stos
add
ja
out
or
and
sub
jl,pn
mov
xchg
mov
fsubr
and
outsb
push
cs
inc
ja
xor
hlt
jae
das
fldz
mov
subl
cmpsb
push
aas
pushaw
rcll
ljmp
dec
cmp
xlat
dec
ror
xchg
mov
mov
push
bound
jns
out
aad
inc
add
lods
movsl
frstor
ljmp
lock
test
mov
fldt
cmp
aaa
lea
cmp
push
leave
cli
cs
test
adc
ljmp
mov
shlb
imul
subl
repz
sbbl
testb
inc
seto
xchg
stc
xor
cmp
mov
pop
fwait
imul
stos
dec
pop
add
into
or
fwait
iret
jno
imul
movsl
imul
scas
mov
ja
xor
or
xor
adc
xchg
dec
sub
cmp
ss
loop
inc
sbb
fistpl
in
js
nop
mov
cld
mov
clc
xchg
push
push
cmpsl
xchg
movsb
mov
xor
pop
jecxz
dec
pop
cmp
out
and
dec
mov
dec
sbb
xor
insl
dec
popf
mov
xor
je
lea
sbb
xor
jl
push
repz
jno
dec
xor
divl
mov
lcall
and
nop
and
mov
and
and
jmp
outsb
xchg
cld
lea
mov
mov
lds
outsl
roll
pop
sub
sub
add
mov
aas
lahf
sbb
inc
into
or
inc
jge,pn
jne
nop
stc
pop
jecxz
mov
enter
adc
mov
sub
jecxz
and
mov
mov
dec
ss
aam
int
loop
dec
jmp
gs
inc
idivl
ret
cmp
sahf
ljmp
jmp
mov
mov
or
jbe
mov
cmp
enter
adc
gs
jae
loopne
pop
ret
adc
cmpb
mov
ljmp
outsb
idivb
push
ficomps
and
jle
mov
xor
pop
fucomip
jle
mov
add
mov
loope
add
cmpsl
ljmp
cmpl
sbb
mov
pusha
lea
lcall
mov
xchg
mov
pop
in
mov
gs
mov
dec
and
je
pop
push
insb
ret
je
mov
jp
sbbl
lods
ja
out
mov
mov
inc
cmp
add
xor
call
fdivs
adc
jp
sub
dec
testb
or
rcrl
add
loope
pop
push
push
mov
xchg
xor
inc
out
xor
inc
mov
jno
loopne
add
dec
jbe
out
push
mov
cmpsl
out
lret
into
xor
pop
adc
cmc
stos
push
mov
mov
rcr
add
ds
movsb
into
and
add
ja
out
enter
cmc
movsb
or
notb
test
fidivs
dec
lods
jb
fimull
pop
sub
rcl
inc
jae
ret
icebp
fists
push
jnp
cwtl
rorl
cmpsl
xchg
lock
cmpsb
mov
jno
js
xlat
addr16
mov
push
scas
ds
decl
push
pop
sub
popf
lea
push
sub
dec
or
dec
int
inc
js
cmpsl
sub
xlat
aad
push
clc
icebp
mov
push
add
or
test
mov
pop
daa
fists
call
jns
rorl
outsb
mov
xor
mov
pushf
inc
inc
pop
mov
pop
push
mov
dec
mov
cwtl
cs
sbb
in
pop
xchg
cmc
push
xor
sub
lods
loopne
mov
cltd
not
sbb
je
push
loopne
nop
jmp
and
mov
out
ret
push
mov
and
jl
les
mov
sub
xor
pushf
popf
xchg
dec
nop
xchg
test
test
jle
inc
sub
lds
pop
sbb
pop
pop
xchg
lret
inc
cwtl
in
mov
hlt
lret
push
sbb
xchg
es
cmp
ret
lcall
pusha
scas
nop
pop
xor
pusha
add
stc
ljmp
mov
and
arpl
sub
stos
je
pop
mov
and
pushf
aam
sbb
sbb
and
push
jmp
sub
adc
sub
les
lret
sbb
orl
addr16
xor
cmp
popf
leave
es
xchg
mov
shlb
dec
add
fstps
inc
mov
pusha
mov
dec
inc
cmp
push
jb
lods
cmp
cs
iret
pop
add
test
xlat
adc
mov
fwait
or
cwtl
aas
adc
pop
lods
js
add
adc
xchg
add
add
fidivrs
or
pop
sub
js
mov
das
dec
js
fdivr
outsb
mov
push
xor
fbld
jge
jecxz
dec
stc
rcll
hlt
jp
idivb
mov
sub
rol
bound
dec
fisttpl
sbb
jnp
mov
add
in
xchg
add
mov
popa
jg
mov
test
repz
jb
or
or
dec
movsl
pop
mov
jle
movsl
fs
or
sub
cmp
push
sbb
pop
mov
sbb
jg
incb
inc
into
mov
orl
lds
fsubrs
lock
cld
pop
aam
cwtl
inc
cmp
and
push
adc
push
and
decb
xor
inc
scas
movsl
xchg
jmp
hlt
js
aam
pop
scas
int
iret
pop
sub
or
or
push
js
ret
sti
lds
insl
cmp
jecxz
jp
xchg
push
inc
lret
gs
xchg
mov
jae
sti
outsl
ds
fisubl
in
test
sub
shlb
adc
andb
adc
ds
mov
scas
and
add
mov
and
call
inc
sub
repz
mov
int
in
insb
push
in
out
shrl
cmp
pusha
pop
adc
iret
andb
test
mov
movsb
pop
inc
xchg
data16
inc
aad
jmp
fld
cmovns
fildl
lea
shll
sub
dec
xor
aas
jmp
ds
jns
pushf
aas
in
popa
pop
imul
dec
cmc
and
scas
xchg
or
imul
out
je
xchg
nop
lds
jle
jg
mov
xchg
sti
cmc
xor
cmp
mov
addb
dec
pushf
int3
cmp
xchg
sarb
cmpb
xchg
lahf
add
sub
lahf
dec
dec
pop
pop
lods
dec
mov
xor
in
int3
cwtl
shl
or
ja
jno
mov
pop
push
pop
lea
jp
pop
test
lds
out
daa
lahf
xchg
sbb
sub
cmc
adc
bound
cltd
fmull
mov
adc
inc
out
divl
adc
outsb
mul
sbb
pmuludq
push
outsl
sbb
or
xchg
jmp
sub
in
icebp
mov
pop
data16
jnp
sahf
cmp
push
scas
in
cltd
das
xor
popf
sub
arpl
mov
xchg
xlat
xchg
mov
push
jno
push
lods
mov
out
mov
mov
rorl
imul
insb
rcll
les
sbbb
rol
sub
xchg
adc
adc
mov
mov
pop
xor
mov
xchg
xchg
arpl
xor
aad
out
insb
inc
arpl
sbbb
jno
movsl
pushf
aam
mov
dec
sahf
aam
push
inc
cwtl
mov
dec
mov
jo
mov
ljmp
or
cmp
or
or
push
or
add
xchg
mov
addl
mov
gs
rolb
testb
jge
lea
fcmovnu
adc
daa
into
lods
mov
mov
pop
push
cmp
mov
jae
jbe
cld
adc
stc
mov
cmp
pushf
repnz
gs
mov
out
cmp
scas
pop
push
ss
dec
das
insl
loope
cmpsl
xchg
push
sbb
push
pop
jg
ds
jo
das
test
add
cmc
and
lret
push
push
xchg
enter
stos
int
pop
daa
push
mov
es
adc
clc
sbb
stos
fadds
pop
xchg
mov
and
insb
mov
mov
xchg
sub
ret
ficompl
sbb
je
adc
inc
call
ret
rorl
push
mov
xor
icebp
dec
xchg
jl
add
orb
hlt
jno
mov
bound
cld
sbb
ficoms
xor
mov
xchg
out
jne
adc
push
shlb
jb
test
rorb
or
inc
push
rcrl
lds
or
faddl
rorb
lret
xchg
sbbb
arpl
mov
mov
xchg
arpl
push
ret
dec
mov
movsb
loope
cmpsb
outsl
xchg
fwait
xor
cltd
int
adc
add
xchg
aas
std
hlt
imul
mov
imul
dec
inc
iret
loopne
inc
int3
dec
sub
cmp
shll
adc
mov
dec
mov
jns
dec
mov
dec
adc
or
inc
fistl
pop
mov
imul
mov
inc
inc
add
out
stc
and
inc
mov
out
mov
or
mov
dec
and
rcrb
jnp
push
ret
lods
jmp
lahf
outsb
fiaddl
push
pop
push
jecxz
and
xor
push
repz
insl
sbb
sbb
imul
add
int3
jnp
adc
popa
cmp
mov
test
sbb
movsb
andb
sbb
stos
push
loop
push
fsubrs
or
sub
xorb
mov
mov
outsl
sti
sub
xchg
hlt
adc
push
fadd
add
movsl
inc
xchg
ds
in
cmp
testb
adc
out
and
and
scas
mov
mov
aaa
nop
and
jmp
cmpsb
js
cwtl
jecxz
test
lds
jge
ret
cwtl
cmp
adc
or
mov
neg
pop
mov
xchg
and
cmp
out
adc
call
das
jp
cmp
out
xchg
daa
push
data16
dec
jl
in
dec
jno
iret
jg
cmc
xchg
inc
push
mov
ja
int3
cld
les
cs
nopl
shrl
xor
pop
cld
push
dec
adc
test
xchg
and
fwait
sbb
or
xor
mov
sbb
sbb
leave
xor
adcl
pop
mov
jl
push
jecxz
repz
push
sbb
xchg
mov
loope
mov
leave
mov
jbe
js
outsl
add
xchg
popa
out
icebp
arpl
test
or
pop
into
push
cli
lods
or
mov
mov
inc
pop
xchg
mov
std
inc
sbb
test
dec
jge
movsl
nop
aad
cli
aas
jo
or
aam
data16
mov
inc
push
pop
in
out
inc
pop
lods
push
imul
or
sti
aaa
or
mov
icebp
insb
pop
xor
sub
inc
mov
jno
aaa
call
lret
pmaddwd
cmpsl
mov
push
jmp
ds
idivb
nop
in
add
push
in
add
aad
scas
xchg
add
test
inc
dec
sbb
pop
sub
jbe
dec
fistpll
sbb
add
mov
xor
out
push
cmp
mov
xchg
xor
shlb
mov
ret
sbb
es
stc
dec
bound
pop
int3
mov
out
mov
jmp
or
push
out
cmp
mov
jnp
inc
push
in
imul
jno
mov
adc
iret
add
loop
xchg
test
cmpsb
lock
mov
cmp
pop
ret
icebp
xor
divb
sbb
adc
lods
shlb
jb
mov
and
and
mov
mov
shlb
jp
das
pop
loopne
jle
sti
imul
and
in
mov
adc
xchg
dec
fwait
std
mov
push
pop
stos
mov
pop
popf
mov
mov
aaa
rclb
adc
mov
scas
in
repz
xor
jnp
jp
lea
popf
sbb
pop
scas
out
insl
push
pop
sahf
dec
mov
sub
imul
pop
mov
push
scas
inc
lret
test
sbb
sti
mov
mov
add
cmp
push
out
dec
test
daa
ljmp
das
sub
fwait
data16
jae
inc
cmp
sbb
sub
fidivrs
stc
fstpt
sbb
je
xchg
adc
sub
mov
push
and
sub
xchg
mov
jae
jle
or
pop
sbb
mov
jnp
lock
jnp
push
aad
sahf
outsb
addr16
jge
mov
cmpsb
pop
cmp
push
or
push
jbe
loopne
cmp
inc
mov
inc
push
xor
pop
movsl
and
mov
mov
rolb
inc
xor
push
push
sbb
fildl
in
mov
mov
push
lds
jp
push
push
sbb
fnstenv
sbbl
pop
jmp
add
xchg
mov
push
int
xchg
popa
imul
pop
jae
inc
push
xlat
add
inc
fcoml
rolb
fcoms
outsb
mov
or
inc
xor
rclb
push
pop
sub
bound
pop
ja
aam
outsl
xor
push
in
jl
and
mov
les
push
ret
aas
in
xchg
mov
adc
subl
jns
outsl
add
jp
push
lods
add
lock
ds
mov
cmpsb
outsb
sub
sub
jnp
imul
push
roll
out
pop
ret
cli
sar
jb
inc
push
and
cmp
push
sti
mov
sbb
fstl
cwtl
js
dec
mov
sbb
and
xor
add
hlt
stos
pop
in
jecxz
lock
mov
pop
and
je
mov
cmp
add
or
xor
cwtl
jo
je
sbb
sub
out
or
mov
orb
shrb
sbb
divb
mov
push
aaa
push
inc
das
pop
add
and
clc
xchg
dec
xbegin
lret
push
das
imul
je
dec
mov
pop
test
loope
dec
in
lds
shll
sub
lods
xor
push
lds
cwtl
aaa
js
in
fcmovbe
sub
xchg
sub
dec
lret
push
jo
inc
and
jl
cmpb
jnp
pop
rcll
or
or
dec
pop
mov
cmp
add
inc
cmp
mov
mov
sbb
sub
xchg
test
mov
mov
popf
iret
mov
fisubs
and
push
out
sahf
cmpsl
bound
mov
pop
mov
jnp,pt
inc
in
xor
add
enter
and
enter
out
or
xchg
push
mov
dec
cmp
loop
cwtl
push
dec
daa
dec
cmpsb
mov
xchg
pop
fwait
jbe
pusha
call
lahf
loop
push
or
lret
call
lahf
divl
cmp
xchg
xor
rcr
dec
jns
enter
jb
aad
lret
add
das
mov
mov
or
sbb
das
jl
ja
test
xor
repz
mov
pop
imul
jle
mov
cld
cmpsb
mov
lock
adc
fistps
data16
xchg
int
adc
movsl
or
inc
data16
lods
cmp
xchg
stc
into
outsb
icebp
mov
bswap
movsb
xor
dec
je
imull
and
stos
call
adc
mov
mov
jae
adc
cmc
aaa
push
stos
dec
inc
pop
ds
das
js
iret
into
sbb
cmp
loope
xor
popa
mov
fmuls
jno
rorb
movsl
xchg
jmp
aad
xchg
mov
push
cltd
mov
push
fs
mov
xchg
push
je
jb
cmp
cmp
scas
rol
sbb
movsb
lods
fcoms
adc
scas
pop
pop
cld
shr
and
sbb
cmp
or
lret
mov
data16
mov
xor
imul
loopne
and
and
add
xchg
inc
clc
mov
aam
loop
fidivrs
mov
cmovne
push
shl
dec
dec
pop
jecxz
sti
fildl
adc
dec
add
stos
push
adc
adc
fistpl
sub
jl
in
xor
stos
lret
enter
lods
dec
loope
stos
cmp
cltd
lods
ja
xor
fildl
pop
inc
nop
cmp
mov
push
xchg
lock
inc
pop
repnz
mov
stos
mov
cs
test
dec
and
jae
out
ljmp
add
cmp
jnp
movsl
and
jo
push
mov
sbb
add
lds
clc
sub
jo
leave
pop
mov
mov
push
xlat
daa
inc
xlat
push
cmp
leave
adc
popa
sbbb
xor
mov
insl
mov
outsl
xor
sbb
sbb
dec
jecxz
insb
leave
rorl
addl
not
inc
mov
mov
or
pop
movsl
in
xchg
out
adc
pusha
cwtl
sub
je
add
adc
sbb
and
loope
rolb
pop
jl
js
xchg
test
test
test
cli
js
cltd
ljmp
mov
addb
aas
dec
ficomps
xchg
ds
mov
cmp
std
imul
pusha
mov
fwait
cmp
xor
lds
lock
rorl
add
jb
icebp
repz
shlb
icebp
fidivs
lcall
jp
lahf
mov
mov
push
push
mov
sbb
xchg
vpand
pop
cmp
xor
mov
in
add
mov
mov
add
mov
xlat
sbb
pop
fs
enter
and
pop
mov
mov
shl
adc
out
dec
pop
xor
daa
lcall
std
and
pop
addl
add
inc
pop
jno
popf
mov
test
leave
push
sbb
fwait
repnz
sub
inc
shlb
push
fcom
mov
dec
imul
shll
daa
mov
repnz
inc
cmc
lods
push
fldl2e
inc
bound
xchg
push
cmp
out
pop
movsb
cmp
aaa
cld
mov
mov
push
enter
or
mov
add
sbb
sub
push
inc
sti
stos
pop
sahf
adc
cmc
daa
cmp
add
cli
mov
and
pop
fists
loop
mov
movsb
mov
add
push
add
pop
mov
pop
mov
dec
pop
cmc
cld
mov
xchg
jecxz
pop
sub
xor
dec
in
cmpb
xchg
pop
push
xor
jmp
dec
push
sbb
into
rolb
mov
scas
in
in
push
and
outsl
xchg
int3
sti
repnz
pop
movsb
loope
sbb
aas
ret
in
add
movsl
lods
dec
pop
and
cli
jmp
test
bound
out
mov
xor
jp
inc
xor
aaa
jne
mov
ret
dec
push
in
pop
inc
pop
jle
imul
pop
push
aad
sbb
jbe
adcl
out
mov
jns
gs
mov
lods
daa
repz
shlb
jmp
xchg
push
add
and
xchg
shl
in
mov
lds
adc
push
fwait
push
enter
sub
dec
mov
inc
sarl
inc
push
repz
and
aam
pop
in
sbb
mov
into
xchg
mov
adc
mov
aaa
test
repnz
xor
jecxz
inc
or
stos
lahf
test
ljmp
push
push
mov
cs
mov
fdivl
push
je
adc
aad
xchg
fs
out
inc
push
pushf
ljmp
sub
or
std
test
in
sbb
enter
outsb
pop
add
or
cmpl
or
dec
mov
pop
sbb
and
dec
dec
ret
mov
sub
or
adc
sbb
mov
test
test
xchg
stos
out
outsl
ss
jae
mov
dec
cltd
out
in
in
or
dec
fisubl
mov
ljmp
movsb
fstpl
cltd
pop
lock
or
ljmp
je
xor
lcall
sbb
add
lods
sub
imul
test
cltd
imul
popa
adc
and
xlat
aaa
jmp
or
roll
paddd
mov
mov
cld
in
outsl
inc
jmp
cmp
stos
stos
cmpl
pop
aam
and
test
ficoml
inc
xor
xchg
pop
cmp
scas
aad
push
inc
inc
je
insb
add
insb
mov
push
push
leave
stc
test
sti
add
adc
sbb
fildll
add
jb
push
addr16
sub
xlat
and
fcoml
mov
or
mov
mov
mov
or
xchg
sub
int3
aam
push
cmp
mov
and
clc
scas
inc
or
and
sub
cmp
lahf
fdivl
mov
sbb
mov
mov
ds
in
push
mov
mov
inc
xor
clc
xchg
mov
pop
xchg
inc
cltd
add
mov
push
sahf
stc
cmp
xor
aaa
iret
jns
xor
cld
outsl
cwtl
mov
dec
xchg
out
sub
imul
sbbl
mov
mov
ret
xor
push
stos
pop
dec
jb
push
jecxz
cli
int
jb
pop
test
mov
xchg
pop
sbb
cwtl
cmpsb
xor
pop
adc
in
lea
popa
pop
div
jae
inc
out
xlat
clc
mov
or
cmp
cltd
inc
addr16
or
pusha
in
cli
pusha
fdivl
jmp
cmp
xchg
jbe
imul
add
das
mov
push
mov
out
shlb
lock
ja
movsb
movsl
es
push
mov
inc
lds
mov
sub
cmpsb
scas
pop
mov
mov
sub
mov
int3
movsl
mov
add
push
push
push
call
test
dec
adc
into
mov
mov
sbb
mov
pusha
push
xor
lods
push
mov
cmp
jns
test
xlat
not
jp
push
adc
push
clc
and
shr
lret
sub
and
sbb
dec
jbe
inc
xchg
jmp
cli
push
sar
daa
sub
inc
fistps
int3
cmp
cwtl
jle
clc
xor
lods
ljmp
dec
in
jecxz
and
and
push
es
xchg
cli
inc
loopne
fs
mov
aam
addr16
jmp
inc
push
dec
repnz
out
mov
add
js
or
je
push
inc
cli
addr16
inc
out
pusha
mov
fisubs
xor
mulb
aam
mov
clc
sub
imul
inc
xlat
pop
sti
aaa
in
and
outsb
aad
or
or
ret
sbb
in
and
dec
loope
jg
sbb
fnstsw
fnstenv
lods
hlt
sub
inc
imul
sub
outsl
incl
xchg
jno
cmp
or
repz
sub
aas
pop
fwait
jae
cmpsl
xor
and
pop
clc
add
push
xchg
loope
mov
imul
inc
push
inc
cmp
repnz
lea
pop
arpl
xchg
mov
leave
scas
orb
scas
negb
stos
fs
jae
mov
dec
or
jne
into
cmp
scas
cmp
rorb
sarb
cmc
jbe
dec
jl
jbe
into
fnstcw
inc
push
bound
cmpsl
out
add
fisttpll
jecxz
dec
shl
loopne
push
or
inc
pop
xchg
pop
xchg
adc
cmp
mov
into
int
loope
outsb
call
sub
int
incl
pop
xchg
cs
mov
ficomps
scas
add
nop
sub
fs
mov
mov
mov
je
mov
andl
popf
mov
or
insb
leave
push
rorb
dec
loope
or
faddl
push
jnp
sbb
arpl
cmp
adc
mov
nop
test
clc
push
cmp
sub
pop
mov
push
lcall
pop
mov
iret
push
pusha
or
cmp
ss
imul
sbbl
mov
movsb
rcl
icebp
add
sub
cli
mov
push
cld
mov
dec
mov
outsb
insb
inc
xchg
push
sarb
xor
jg
aaa
pop
xor
test
push
or
div
jns
push
adc
mov
inc
bound
or
dec
stc
and
nop
mov
cs
push
push
insb
std
js
insl
push
and
fistps
sbbb
pushf
call
outsl
bound
mov
mov
push
xchg
mov
popf
cmp
inc
inc
rcl
js
jg
inc
jo
mov
mov
and
jne
push
nop
cltd
cmc
jg
rolb
or
ss
cld
loopne
jno
cld
ja
lods
fisttpl
push
and
mov
imul
dec
jae
fisttps
fs
rclb
out
mulps
je
js
jecxz
and
pop
push
incl
jl
sahf
xor
icebp
jns
add
ret
mov
and
push
lea
cmpsl
add
andl
enter
adc
fwait
mov
lret
cli
xchg
cmp
mov
movsl
ds
int
mov
les
push
push
jmp
xor
testl
lea
dec
stos
mov
dec
test
sbb
mov
gs
cmp
cmp
bndldx
sub
lcall
xor
inc
mov
adc
mov
lods
sbb
nop
add
mov
popa
icebp
or
subl
lods
shll
sbb
xor
or
dec
push
in
fistps
inc
mov
add
inc
sub
jnp
or
sahf
aas
test
loope
pop
mov
dec
dec
stos
enter
cmp
gs
pop
clc
mov
fisubl
adc
fstpt
xchg
sub
es
hlt
js
aad
ljmp
mov
into
je
dec
lahf
xlat
cld
cwtl
mov
dec
shrl
cmp
or
fnstenv
js
scas
aam
cmp
insb
fwait
and
pop
jae
mov
cmpsl
aad
dec
add
fldenv
adc
mov
and
aas
mov
movsb
loope
jae
pop
jbe
sub
jge
sbb
push
inc
dec
stos
and
push
adc
sbbb
and
dec
mov
adcb
nop
inc
add
and
test
mov
ficoms
movsb
out
pop
jge
adc
add
xor
dec
inc
add
push
es
sti
int
mov
add
push
sahf
sti
ffree
xchg
dec
fmul
lock
cmp
rcr
loope
pop
shlb
fdivrl
punpcklbw
mov
sub
test
imul
loope
inc
cli
and
cli
popa
sti
pop
cmp
out
sahf
pop
cwtl
js
ret
adc
aad
adc
pop
insl
pop
jp
push
mov
mov
fcoml
dec
shlb
aam
les
mov
cwtl
jge
aam
adc
fildl
test
dec
inc
pop
inc
mov
dec
loop
divb
lds
repz
mov
cmc
jmp
xchg
mov
stos
outsl
loop
in
lret
jg
into
mov
adcb
xor
int
jbe
mov
insl
aaa
pop
pop
call
inc
adc
leave
or
jbe
pushf
mov
xchg
mov
gs
fstpt
xor
fwait
mov
js
mov
jl
imul
pop
xor
icebp
sub
loope
add
test
mov
adc
add
imul
jno
jle
xor
xlat
sub
dec
std
fistpll
sub
xchg
aad
js
dec
mov
sahf
popaw
in
je
mov
es
cmp
outsl
jl
and
nop
je
add
scas
fwait
leave
lret
or
mov
scas
test
adc
loopne
xor
ret
and
es
and
data16
cmc
push
mov
cmp
cmpsb
cmp
mov
popa
jp
sub
adc
cli
pop
sbb
or
in
mov
psubusb
pop
test
fwait
xchg
roll
std
mov
push
xlat
in
jmp
mov
add
lock
insl
push
jns
pusha
add
lea
loop
lret
leave
jae
enter
or
scas
mov
xchg
mov
add
adcb
cwtl
jp
dec
jmp
loop
std
mov
fwait
xchg
push
bound
aam
call
pop
mov
and
push
xchg
adc
scas
mov
addps
jne
test
add
enter
add
fcmovnu
rcrb
inc
and
xchg
adc
movsl
jle
and
and
mov
data16
sbb
fnstsw
popf
scas
mov
xchg
hlt
adc
xchg
add
rcll
jae
and
mov
mov
adc
test
arpl
aam
xor
inc
or
inc
pop
nop
aad
lock
dec
into
push
lods
and
or
das
test
aas
ret
testb
ret
rcll
cmc
loopne
xlat
loope
mov
in
sbb
out
leave
push
pusha
filds
inc
stc
add
sbb
jmp
dec
lahf
cmp
add
cli
jle
cmp
ficoms
cmp
push
scas
rorb
cmc
popl
in
sbb
sbb
lret
mov
movsl
fnstsw
add
stos
cmpsb
ret
dec
xor
xor
xchg
je
je
arpl
sub
andl
pop
lret
mov
mov
sarl
cmp
mov
xor
or
shlb
aas
sub
fsubs
call
cltd
push
add
out
pop
test
xchg
cltd
xchg
cmpb
insl
rcll
insb
movsb
aas
pushf
mov
repz
adc
leave
aaa
loop
jb
mov
je
mov
xor
jbe
pop
pop
pop
lea
loop
sub
outsl
pop
dec
scas
jl
rorb
pop
xchg
insb
lcall
fmulp
mov
insl
hlt
pop
loopne
jmp
mov
movsl
jbe,pn
and
add
hlt
loop
push
adc
pop
add
clc
add
add
and
pop
imulb
adc
insb
mov
loop
das
or
insb
mov
dec
lds
jg
mov
daa
movsb
sub
adc
loope
mov
and
xchg
inc
or
xchg
pop
lret
outsl
sub
sub
sti
mov
orl
addr16
add
push
test
cmp
cmp
mov
or
mov
popf
mov
jmp
xor
or
mov
hlt
ljmp
jbe
pop
xchg
xchg
test
movsb
sub
push
fnsave
mov
in
std
mov
xor
int3
sbb
sbbb
adc
ljmp
test
pop
adc
clc
mov
cmp
popa
fs
fldenv
daa
sarb
dec
aad
iret
aam
sbb
add
js
cmp
jbe
mov
xor
rorb
sahf
pop
mov
popa
lock
insb
sbb
mov
dec
repnz
in
ja
xor
cmp
and
lea
mov
dec
cltd
stos
push
jge
cld
sub
nop
dec
test
test
sub
leave
push
aaa
cmpsb
sbb
inc
cmpsl
jle
call
std
pop
xchg
cmp
cmp
xchg
and
push
cmpsl
mov
scas
or
xor
je
daa
push
stos
idiv
xchg
jno
cmp
popf
jns
sub
addl
lods
cwtl
dec
push
inc
ja
adc
add
fcmove
mov
mov
out
sub
mov
call
mov
sbb
cmp
add
or
mov
push
mov
mov
adc
or
xchg
icebp
loop
rolb
push
shrl
outsb
jg
xchg
hlt
push
dec
js
repz
mov
mov
bound
push
test
jge
pop
xor
adc
fs
jnp
inc
fstpl
or
jb
data16
xor
add
ss
mov
push
add
sub
sub
lock
pop
jle
jo
mov
xchg
xchg
fidivs
out
lods
sub
add
int
test
imulb
mov
aas
arpl
into
es
lds
mov
xchg
add
je
push
jg
or
int3
stc
mov
inc
scas
out
js
popf
add
jge
movsb
xchg
mov
pop
in
mov
or
xor
sahf
adc
ss
sub
sbb
scas
pop
incl
enter
enter
jbe
mov
cmc
mov
lret
xchg
mov
mov
xchg
insb
push
sub
jb
mov
mov
into
inc
sbb
in
into
imul
mov
testb
into
fcomip
and
sub
xor
or
in
jge
lock
xor
cltd
movb
test
xchg
hlt
adc
sub
pop
stos
sbbb
pop
and
or
push
xchg
mov
mov
and
mov
xor
and
out
add
adc
mov
cmc
jo
loopne
mov
stos
jecxz
cmp
sbb
cmpsb
clc
mov
pop
mov
pop
fmul
ja
sbb
sti
sub
sbb
mov
jecxz
and
ljmp
fisubrl
dec
dec
xor
adc
lahf
call
sub
pop
xchg
cmp
shrb
lods
popa
and
jmp
cltd
xlat
test
dec
ljmp
lea
jecxz
mov
mov
movsb
lret
lock
das
jmp
add
popa
insb
add
test
insb
xchg
push
fwait
xchg
jae
mov
xchg
push
jnp
lcall
fbstp
jmp
pop
or
cmp
xlat
fimull
clts
jo
or
mov
adc
xchg
and
mov
cmp
repnz
lret
rcr
mov
addr16
adc
mov
push
xor
stos
loope
xchg
add
push
mov
mov
divb
out
lods
adc
bound
cmp
iret
ss
xor
mov
mov
add
xchg
mov
ljmp
jl
jns
or
stc
mov
int3
and
lcall
stc
andl
cltd
enter
inc
inc
mov
and
cld
scas
test
mov
push
insb
mov
fcomps
add
xchg
lea
subl
cmc
xchg
add
repz
sbb
inc
lods
add
lods
out
mov
scas
je
imul
arpl
cmp
je
fwait
out
orl
jae
push
repz
jbe
dec
adc
out
fwait
jp
inc
pop
cwtl
movsl
jmp
repz
mov
push
lret
xor
test
inc
mov
cld
movsb
sbb
movsl
mov
loopne
push
xor
fmull
jg
ljmp
sti
pop
dec
aaa
xor
push
add
jp
xor
mov
sbb
push
pop
adc
repnz
adc
sub
imul
clc
cli
inc
rorl
lret
inc
loope
shrb
mov
or
call
sbb
pop
xorb
popf
xor
lcall
stos
cwtl
mov
shrb
add
or
xchg
cmpsl
xorb
adc
out
mov
mov
lret
aas
cltd
repz
pop
lock
dec
je
insb
jo
iret
adc
mov
mov
in
flds
jle
xor
xlat
insb
push
mov
mov
sbb
std
les
xchg
sub
add
rep
lods
je
test
cmp
leave
jne
repnz
icebp
ror
repz
mov
imul
in
inc
xor
add
pusha
mov
neg
and
pop
dec
push
jp
orl
mov
in
rorb
sbb
stos
mov
cmpsl
dec
pusha
pushf
dec
loop
mov
sbb
mov
jns
sub
daa
pop
mov
sbb
ljmp
xor
scas
adc
jno
mov
push
sub
sbb
or
lea
aas
frstor
ljmp
dec
aam
sbb
pop
or
lret
add
xor
mov
dec
mov
cmp
iret
mov
xchg
rcr
aas
dec
sub
sbb
ret
dec
div
cmpsb
sub
mov
in
jg
mov
clc
xchg
rcr
jmp
jecxz
movsb
cmpsb
inc
mov
add
sahf
cmpl
cwtl
push
jo
adc
cmp
cmp
jp
out
ljmp
sub
addr16
mov
cld
add
mov
mov
cmpsb
test
inc
sub
int3
cmp
xchg
xor
cmp
push
mov
shrb
dec
lahf
shlb
sub
adc
int3
roll
push
mov
mov
fnstsw
insl
mov
stos
lods
roll
inc
test
loopne
mov
mov
mov
inc
push
sbb
and
andl
mov
fnstsw
xchg
jae
jl
xchg
dec
or
pop
jnp
fdivs
jae
stc
aad
xchg
cmp
adc
stc
fisubs
jecxz
or
dec
adc
adc
push
into
mov
jb
sub
inc
stos
jo
cli
push
sbb
out
pop
sbb
in
pop
cmp
enter
pop
scas
jp
daa
imul
in
pop
inc
fwait
scas
movsl
pop
mov
or
xchg
or
cltd
repnz
les
fisubl
pop
cmp
andl
scas
jns
iret
jb
sbb
fadds
xchg
popf
push
adc
inc
add
mov
iret
jb
gs
repz
inc
repz
dec
scas
adc
adc
aas
fwait
or
jns
in
add
lds
adc
mov
popf
inc
xor
adc
xchg
mov
and
pushf
jno
mov
mov
ljmp
enter
fisttpl
xchg
jns
and
fdiv
test
test
mov
pop
xchg
cli
or
sbb
or
push
sub
arpl
and
andl
xor
mov
clc
cwtl
push
test
imul
out
imul
sbb
and
mov
std
aaa
push
cltd
mov
or
movsl
cs
mov
xlat
sbb
pop
pop
pop
std
popf
fcompl
dec
test
outsl
inc
jge
outsb
leave
in
hlt
add
mov
mov
adc
mov
movsl
not
ret
cld
sbb
xor
fs
ficompl
lcall
fwait
dec
sbb
stc
add
push
mov
adc
jne
jge
rclb
xchg
jb
sti
xchg
adc
pop
adc
es
mov
dec
fnstsw
jbe
inc
mov
imulb
push
cmc
cs
in
and
jl
sub
jl
sbb
loope
xor
lock
mov
sbb
xor
int3
dec
ja
mov
lahf
out
movsl
dec
iret
cmp
mov
popf
ss
out
fidivrs
xchg
cmp
mov
in
mov
xchg
cli
xchg
out
mov
lret
lods
data16
jmp
les
outsb
aas
shl
icebp
push
fcmovbe
je
dec
adc
movsl
sub
pop
lods
mov
push
in
movsb
mov
or
mov
xor
mov
mov
aam
adc
mov
jb
jge
sarb
xchg
pop
fbld
aas
mov
sub
add
aaa
mov
sub
ret
lock
mov
mov
push
add
jae
das
movsb
loopne
inc
pop
mov
insb
jge
xchg
rcl
xchg
movsl
or
inc
push
js
sbb
out
popa
ds
xor
shll
and
jb
xchg
cld
das
in
fdivrs
fsubl
mov
and
jmp
call
lret
push
xlat
das
mov
xor
outsb
cwtl
xor
cmc
jmp
lock
int3
lcall
xor
lea
dec
and
pop
push
xchg
xchg
lret
add
push
dec
xor
mov
mov
movsl
lods
loop
cmp
and
jbe
outsl
or
cmpsb
xchg
andb
ds
xor
ljmp
dec
and
jno
push
mov
in
ja
cmp
bound
mov
fcomip
aad
pusha
dec
xchg
jnp
addb
push
mull
jp
lret
test
xor
loope
sbb
in
mov
pop
mov
in
cmp
dec
pop
add
scas
in
icebp
inc
adc
adc
pusha
ret
dec
mov
mov
xchg
mov
data16
out
mov
sub
adc
mov
adc
insb
lcall
cmp
movsl
mov
call
adc
icebp
dec
cmp
cmc
pop
test
mov
cmp
cmp
xor
out
jno
mov
lea
or
jns
out
add
adc
loopne
sbb
popa
rolb
data16
or
lock
mov
test
sbb
pop
sbb
hlt
mov
rorb
imul
lds
leave
mov
aad
sahf
movsl
adc
pushf
cmc
dec
es
pop
in
push
jp
aas
push
and
jbe
sub
cmpb
add
out
fistpl
push
mov
sbbb
cs
test
hlt
inc
adc
es
shl
arpl
dec
icebp
sbb
leave
std
jb
mov
and
imul
mov
sbb
xor
test
clc
movb
ret
test
xchg
sti
pop
nop
xchg
cli
mov
jmp
in
inc
in
jb
outsl
mov
aam
hlt
sbb
and
add
test
push
or
add
cltd
sub
jge
daa
add
jae
out
xchg
imul
addr16
xchg
repz
mov
mov
cmp
jp
fdivrs
test
or
inc
mov
or
aaa
aad
sub
pusha
jecxz
in
lret
add
dec
add
adc
cmp
loopne
mov
loopne
shll
hlt
leave
adc
xor
ret
pop
icebp
xor
jo
scas
inc
pop
push
icebp
outsb
push
inc
push
mov
cmpsl
push
cmpsb
mov
das
stos
loope
stos
in
push
push
sub
xchg
rolb
sub
adc
js
adc
dec
pop
mov
sub
and
xor
jg
pop
sbb
xlat
cmp
aam
xor
add
mov
inc
mov
cmp
or
push
icebp
jle
add
mov
pop
cmp
dec
out
lret
or
or
out
test
cwtl
leave
dec
push
psubusb
mov
ljmp
mov
addr16
pop
push
sub
pop
push
rcll
adcb
addr16
ja
push
dec
std
jmp
ss
adc
lea
cmp
lods
sbb
hlt
repnz
add
gs
xchg
mov
sbb
or
cli
xorl
mov
aaa
sbb
jp
cmp
mov
es
scas
sub
sbb
mov
mov
in
sub
je
aas
pushw
and
jg
pushf
int3
cli
push
push
sbb
fmuls
icebp
xchg
xchg
insl
adc
mov
mov
cmp
and
inc
fwait
in
leave
dec
lret
xchg
add
fisubl
sbb
rcrb
repz
xor
pop
minps
cli
inc
mov
shr
mov
mov
out
fldcw
mov
and
les
xor
mov
lods
sbb
jb
push
fldl
scas
lret
testb
loop
out
iret
jg
dec
and
ss
xchg
jmp
mov
aad
jae
shlb
dec
jp
mov
aam
in
mull
and
mov
arpl
push
cmp
lods
mov
inc
sub
or
mov
mov
push
sub
lods
adc
pusha
sub
in
in
scas
add
or
stc
cld
dec
stos
icebp
lcall
or
mov
shll
and
mov
lcall
fdivs
cltd
mov
inc
fsubrp
inc
xchg
sbb
jp,pn
stos
pop
mov
mov
jle
inc
iret
cmp
inc
sbb
or
or
jo
push
add
adc
loopne
cmpsb
call
ficoml
pushf
sbb
aad
std
roll
push
or
in
ja
cltd
jb
and
xchg
sbb
cwtl
sbb
stos
lods
adc
pop
mov
adc
flds
push
addr16
rcrb
adc
in
in
push
pcmpeqb
add
xorl
icebp
jno
xchg
adcb
ja
test
fisubrs
fbstp
loope
and
lret
or
jecxz
sub
pop
jns
cli
fnsave
movsl
mov
ja
test
fsts
test
mov
sbb
xlat
jbe
data16
jns
aad
inc
push
je
lcall
push
dec
sub
clc
sbb
xchg
pop
xorb
out
scas
jne
lret
mov
sub
mov
xor
lds
mov
lcall
insl
pop
addr16
lret
mov
scas
rcll
fcom
rcrl
or
jl
je
ds
xchg
xchg
iret
das
sbb
xchg
scas
call
mov
popf
js
inc
fisubl
or
xorb
pop
hlt
dec
xchg
jmp
out
dec
into
loop
and
and
xor
shlb
mov
dec
stos
mov
movsb
jp
pop
nop
nop
xchg
jbe
insb
arpl
xchg
push
pop
and
cmp
push
shlb
push
mulb
sbb
shll
popf
inc
rolb
test
js
xor
fwait
push
jmp
lahf
or
mov
jge
sub
in
mov
mov
ret
rcrb
fwait
add
xor
jge
rclb
ds
add
adc
push
aad
aad
mov
loop
jmp
pop
ja
push
shlb
lock
pop
push
xor
push
ja
bswap
mov
pop
mov
inc
sbb
ja
xchg
jmp
test
push
xorl
test
inc
pushf
add
cmp
inc
push
sub
mov
outsl
cmp
jo
insl
clc
lock
lds
mov
or
imul
andb
fiadds
mov
clc
in
dec
stos
lock
pop
filds
cmp
mov
lahf
jp
mov
mov
lcall
gs
push
push
jo
das
push
popa
adc
mov
andl
or
or
xchg
js
jle
push
jge
popa
pop
inc
adc
adcb
cmp
pop
push
lock
mov
js
push
pop
dec
call
fdivrl
and
imul
sbb
jae
mov
fwait
or
or
cs
mov
into
lods
xor
dec
ret
mov
sbb
insl
loopne
dec
mov
cmp
dec
rcrb
inc
xor
inc
push
fwait
in
outsb
sbb
cmc
push
fsts
sub
inc
sbb
iret
dec
sbb
and
repz
jb
daa
lods
stos
fcmovne
add
mov
mov
aaa
cmp
inc
pop
pop
int3
or
roll
scas
pop
out
mov
mov
or
std
in
idiv
jmp
adc
add
enter
hlt
jne
add
adc
lods
jbe
das
ljmp
imul
mov
mov
mov
sbb
adc
cwtl
pop
xchg
fldt
or
mov
xchg
pop
mov
mov
std
in
xor
mov
xchg
hlt
das
nop
cmp
inc
clc
cmp
lret
push
cmp
pop
addl
mov
ret
sbb
fmuls
sbb
add
sarl
jbe
out
cmp
pushf
jbe
lods
jae
fsubl
ret
pop
loope
pop
pop
repnz
push
roll
mov
jne
jno
fidivrs
in
test
cli
aaa
idivb
cltd
mov
dec
hlt
or
add
movsl
xor
dec
xchg
dec
jno
add
rcr
sub
xchg
mov
js,pn
loope
dec
dec
scas
mov
cmpsl
shlb
mov
neg
mov
jecxz
add
loop
iret
dec
pop
stos
fxch
jecxz
insl
aas
insb
dec
pop
jns
cld
mov
lea
jp
or
xchg
loope
mov
dec
stos
movsb
or
je
rorb
mov
jmp
addr16
add
fsts
lret
jae
mov
in
hlt
jae
repnz
mov
xchg
fimuls
dec
fstps
scas
mov
repnz
xor
ss
inc
imul
inc
sti
push
aas
mov
xor
test
cmpsb
push
bound
dec
sarl
adc
sbb
fdivs
pop
pop
jne
and
inc
jg
lock
xor
test
cmp
test
outsb
cmp
sbb
and
movsl
and
dec
ja
inc
push
scas
jge
into
mov
jnp
pop
cmc
les
adc
inc
lret
cmpsb
rclb
mov
icebp
cli
sub
arpl
test
inc
mov
daa
aas
sub
push
fcomps
sbb
stos
dec
or
push
call
in
jmp
and
jns
cwtl
mov
insb
or
je
pusha
rcll
dec
inc
or
test
push
jg
mov
add
jns,pn
inc
adc
clc
and
clc
into
in
rcl
les
sub
enter
lcall
lods
call
fwait
jp
aas
dec
bound
imul
mov
mov
int3
test
jbe
out
and
jnp
aaa
jb
sahf
fsubl
popf
mov
test
gs
shrb
mov
mov
outsl
repz
cmp
in
add
fnsave
insl
into
je
jb
call
inc
mov
push
lds
lret
scas
imul
push
jns
jmp
movsl
test
sbb
jmp
cmp
pop
sbb
mov
in
repz
pop
mov
iret
dec
shll
es
jmp
cwtl
lea
jge
dec
jg
call
in
leave
lea
fsubs
es
push
ja
dec
fmul
jae
xchg
fwait
xlat
aas
xchg
cmp
pushf
add
ficompl
mov
xchg
lock
fstps
sub
lods
add
mov
sbb
sbb
jg
icebp
add
cmp
out
mov
pop
pop
xor
and
out
pop
jnp
int3
push
bound
cli
sbb
pop
notb
testl
push
ja
cld
in
cmpsb
cmp
push
jbe
leave
and
pop
xlat
cmpsl
jmp
sbb
mov
pusha
cs
mov
imul
ret
mov
xor
ret
cmp
xchg
pop
mov
sbb
mov
loop
rep
sub
shll
mov
in
add
lret
push
lret
testl
mov
bound
sbb
out
inc
pop
mov
stos
and
scas
push
push
mov
add
lds
test
and
mov
jge
xchg
sbb
sti
jmp
dec
mov
pop
pop
sub
popa
mov
and
imul
stos
scas
repnz
aad
idivb
xor
stos
or
xor
cmp
mov
imul
dec
dec
xor
and
lahf
xchg
add
imul
adc
repnz
scas
mov
xor
aam
dec
jo
sbb
aad
sub
sahf
ljmp
sbb
lret
cmp
inc
xor
mov
inc
pop
mov
in
cwtl
jl
or
sub
jg
add
mov
add
xor
ret
mov
mov
icebp
or
add
lret
andb
inc
xchg
xor
mov
xchg
imul
or
repz
sarb
pusha
push
or
pop
loopew
repnz
test
movsl
icebp
pop
pushf
adc
or
cmpsl
mov
inc
and
xor
sbb
dec
in
mov
and
ds
iret
enter
and
jp
xchg
sar
stos
add
sbb
xor
mov
jl
aas
jp
imul
out
ja
fdivrs
popa
adc
pop
fidivrs
outsl
adc
es
push
cmp
add
jno
movsl
ret
aas
sub
fsub
jp
xchg
aas
ret
push
push
pop
push
sahf
hlt
and
and
lret
lret
out
je
cmp
movsl
sub
arpl
clc
loopew
arpl
bnd
jge
out
or
movsl
stos
cs
sbb
movsb
shll
in
repz
inc
or
testb
cli
inc
bound
mov
iret
stc
inc
jmp
cld
pop
xchg
in
xchg
hlt
sub
xchg
inc
inc
test
int3
inc
push
addr16
ret
add
pop
ds
mov
roll
loop
hlt
adc
mov
pop
xchg
mov
mov
test
push
xchg
add
cli
roll
aaa
in
adc
sub
and
sub
lods
rorb
inc
mov
jecxz
mov
add
mov
loopne
and
xchg
or
cli
xor
dec
inc
mov
sbb
hlt
push
mov
repnz
mov
mov
aaa
add
push
mov
in
adc
inc
je
iret
push
xor
pop
pushf
popa
or
test
add
adc
in
fidivrl
scas
test
repnz
fldcw
in
inc
test
aam
fnstsw
and
test
int3
mov
xchg
ret
shrb
fwait
mov
jnp
loopne
int
in
mov
pop
mov
in
lahf
pop
inc
inc
or
or
cmpsl
cmp
dec
inc
sti
pop
test
test
imul
jp
test
shl
inc
jecxz
cmp
jecxz
jo
nop
dec
mul
lods
ljmp
xor
in
lea
seta
pop
cs
ret
pushf
mov
jae
lea
push
lret
push
aaa
negb
cmpsl
dec
fsubrs
daa
mov
pop
ds
loope
clc
sti
adc
out
push
inc
jno
mov
sbb
mov
frstor
push
mov
aad
sub
or
jle
repz
dec
or
sbb
arpl
aad
cmp
or
or
jno
mov
and
sub
adc
dec
orb
into
push
fbld
fs
adc
test
loopne
pop
fs
cmpsl
and
cli
rclb
cmpb
sbbl
ja
mov
xor
mov
outsl
dec
pop
movsb
dec
ss
sbbb
adcl
movsb
dec
rcr
sub
mov
stos
ret
sbb
mov
into
jge
dec
sub
cmpsl
jbe
into
ret
mov
ja
mov
sahf
iret
mov
ss
push
jns
xchg
and
jle
push
stos
ss
arpl
push
pop
sub
shlb
mov
subl
pop
xor
test
fsubrl
sbb
push
mov
std
sub
outsl
pop
les
mov
stc
push
jae
pusha
push
push
cwtl
mov
and
push
pushf
rclb
stos
cli
imul
imul
sbb
cld
adc
popf
dec
js
incl
jns
inc
aaa
aas
xor
dec
rcrl
cmpsb
jbe
push
decl
fcomip
dec
test
mov
mov
lahf
insl
test
mov
repnz
xor
hlt
dec
out
push
inc
out
xor
mov
lea
jne
mov
push
pop
iret
adc
faddl
andb
not
mov
push
adc
jg
lret
into
jno
shlb
adc
mov
xor
mov
call
adcl
or
cli
and
inc
movsl
test
sub
lahf
cwtl
pop
out
int
dec
int3
fdivs
fdivrs
adc
push
addr16
and
jbe
add
scas
xor
nop
aaa
clc
inc
sarb
arpl
xor
jo
arpl
js
xchg
iret
sbb
bound
mov
pop
inc
mov
xchg
out
pop
push
cmpsb
xchg
mov
mov
test
dec
sbb
leave
scas
out
jl
sbb
push
jns
xor
fimuls
aas
push
imul
imul
in
aas
dec
cwtl
adcb
std
jbe
repnz
adc
in
fdivr
pop
lahf
cmp
stos
or
and
jns
and
mov
xchg
imull
add
movsl
cmp
jecxz
fsub
cmp
push
adc
jo
cmp
icebp
out
rcrl
test
outsl
or
and
cmpsl
ja
jnp
popf
cwtl
sti
push
mov
clc
push
inc
je
mov
hlt
ret
pop
insb
shrb
idivl
push
test
cmp
dec
cmp
sahf
paddq
leave
add
out
cmp
sbb
xor
push
in
and
lahf
mov
push
lds
mov
sbb
enter
add
scas
inc
jp
cmp
int
outsb
mov
flds
lods
add
xchg
out
test
inc
xchg
adc
adc
adc
xor
push
out
mov
jl
rcrb
lods
std
xlat
lea
jno
sbb
lahf
add
jge
fwait
xlat
push
and
push
fs
into
es
lods
adc
cmp
in
sti
addr16
jae
xor
aas
sahf
or
xchg
jp
bound
or
lock
ljmp
ds
es
sub
jle
ret
bound
rcl
xor
inc
ss
stos
push
jae
push
popf
lea
push
fdivrs
xchg
adc
xchg
push
dec
cmp
mov
mov
xchg
xorl
lcall
sub
lret
rorl
fldcw
popa
add
push
xlat
ss
dec
outsb
mov
out
mov
out
cmp
cmp
sbb
xchg
mov
lea
sub
cli
xor
jo
and
jmp
pop
mov
out
pop
rcrl
inc
xor
pushl
and
leave
out
and
sub
cmpsb
sbb
std
in
or
test
mov
xlat
mov
notb
cwtl
pop
xor
jb
pop
movsl
mov
pop
mov
xchg
and
push
xlat
sbb
xchg
pop
sbb
clc
roll
add
popa
rclb
dec
cmpsl
arpl
mov
mov
daa
mov
pop
jge
mov
imul
cmpsl
dec
jmp
and
lods
xor
sahf
inc
push
mov
dec
push
mov
mov
xor
fwait
sbb
sbbl
enter
sub
sbb
adc
sbb
mov
pop
cmc
dec
sahf
sbb
jmp
sub
jmp
and
dec
popa
std
add
loop
btc
jne
iret
dec
mov
mul
std
jecxz
lret
mov
inc
es
xchg
testb
jg
in
out
push
dec
push
fidivl
lods
push
xor
lods
fstl
mov
push
dec
stos
lret
lods
loope
cmpsl
mov
push
mov
jne
rcrb
fbstp
xchg
add
push
aaa
faddl
lods
inc
pushf
jnp
mov
aad
into
sbb
dec
dec
cmp
testl
cld
lea
and
cwtl
addr16
fisttpll
xchg
fst
outsb
push
dec
pusha
insb
mov
push
int
cmp
aam
dec
lea
rol
popf
ja
inc
inc
push
stc
mov
inc
mov
xor
mov
xchg
and
push
clc
jb
adc
dec
jae
pop
jae
iret
insl
add
and
xchg
and
adc
in
outsl
mov
sub
sub
jg
mov
aad
sub
mov
or
js
push
pop
xor
mull
lods
sti
cmp
bnd
pop
jl
in
push
pop
popf
ja
nop
daa
insb
push
iret
xor
mov
pop
push
addr16
mov
sub
sbb
mov
jae
insl
or
insb
lcall
sahf
cmpsl
mov
and
jo
cmpb
mov
sbb
mov
int
cmp
aaa
mov
jp
ljmp
hlt
push
and
je
pusha
jge
es
sub
imul
inc
dec
stos
dec
repnz
pop
sbb
pop
jbe
enter
jo
mov
mov
xor
ret
sbb
inc
mov
out
call
xchg
rcrl
xchg
leave
aaa
mov
pop
stos
dec
hlt
mov
iret
ds
cmp
int
push
jns
stos
or
jg
enter
pop
out
aam
addl
jnp
jno
mov
arpl
pop
ror
dec
dec
sahf
jae
mov
int
divb
addl
inc
mov
cmp
insl
push
sar
das
pop
popa
aas
sbb
sub
dec
adc
loope
je
sbbl
adc
xchg
test
test
jae
shr
inc
adc
jbe
call
cmp
cli
out
sbb
mov
or
adc
or
lods
pop
lock
sbb
mov
insb
sahf
lcall
and
insl
fcmovnbe
jp
jbe
xor
mov
adc
aas
inc
ljmp
fiadds
jnp
cmp
sbb
lods
ds
mov
lahf
push
xchg
push
notl
cmp
mov
xchg
roll
jmp
dec
sub
xchg
sbb
jb
xchg
outsb
adc
shl
dec
call
push
sbb
pop
jecxz
into
shlb
push
into
arpl
mov
std
dec
mov
mov
cmp
into
mov
cmp
dec
lret
mov
es
mov
js
push
repz
pop
imul
dec
mov
cld
add
sub
jae
push
mov
shll
adc
jb
cmpsb
cmpb
xchg
mov
mov
jae
cmp
push
enter
cmp
mov
ds
pusha
inc
sbb
xchg
ficoml
movb
xchg
add
add
mov
fcoml
xor
lea
loop
adc
pop
cmovp
xor
std
rolb
sbbb
idiv
or
stos
aaa
adc
les
lods
cmp
jmp
mov
rcll
mov
sbb
mov
test
adc
or
mov
jge
cltd
fsubl
bound
push
jbe
insl
pop
das
sub
repz
jo
jns
xlat
inc
sub
and
lret
jge
jbe
xchg
mov
repnz
jp
xlat
xchg
fdivs
lock
out
pusha
aad
sub
push
push
outsl
jg
xchg
arpl
or
aad
mov
loop
adc
lcall
mov
inc
mov
jge
add
ja
lcall
shl
mov
mov
pop
xor
in
dec
lea
shll
rcll
push
fwait
jmp
scas
pop
pop
jecxz
pop
ficomps
mov
mov
mov
roll
shlb
fucomp
pop
mov
nop
pop
roll
xor
jmp
fists
dec
push
inc
fldl
xor
aas
mov
sti
push
dec
lea
inc
mov
adc
xor
xchg
stos
cmp
adc
popa
dec
push
sub
scas
dec
pop
jp
adc
push
jae
cmp
fs
aad
inc
mov
mov
frstor
filds
jae
or
xor
mov
xorl
jne
inc
jne
inc
outsb
add
pop
aam
bound
inc
sbb
inc
inc
ds
insl
inc
cmp
mov
inc
push
pop
or
cmp
sub
sbb
bnd
mov
or
shl
dec
push
fs
ficompl
and
repz
jl
cmp
imul
inc
shrb
test
outsb
sbb
jle
sti
aas
jmp
or
mov
sbb
jno
stos
cmc
or
in
div
iret
mov
lret
xchg
sti
xchg
cmp
cmp
out
stos
fisubrl
mov
call
pop
cmp
adc
inc
pop
cmp
pop
dec
out
push
push
test
or
test
cmp
stos
and
xor
mov
push
outsl
mov
jno
out
xor
filds
pop
cs
daa
sbb
jns
imul
inc
xchg
gs
arpl
adc
sbb
call
fs
test
cltd
icebp
and
das
test
jle
mov
out
inc
lock
fildl
je
xchg
mov
cld
mov
and
xor
repz
lret
incb
sbb
sub
cltd
dec
jmp
leave
xor
xor
inc
fcompp
jnp
and
push
xchg
jae
stos
xorl
lcall
fmul
mov
mov
movsb
call
fsts
rorb
sbb
fbld
sub
das
sub
jmp
xor
pusha
mov
xchg
cmp
out
sar
iret
arpl
out
decb
ficomps
push
loope
ss
mov
fdivrl
ficoml
inc
sub
out
cmpsb
sbb
daa
enter
cmp
enter
cwtl
test
xchg
add
repnz
sarl
dec
jno
push
dec
push
cmp
mov
stos
cmpsb
mov
mov
insl
sahf
out
dec
xchg
repnz
cmp
cmc
pushf
sub
mov
cmp
push
adc
or
mov
add
pop
mov
push
lds
sbb
pop
shrl
xchg
lahf
push
lahf
out
mov
adc
idivl
mov
das
mov
ss
xor
sbb
leave
push
push
adc
cwtl
push
add
mov
push
mov
movsl
ret
pop
dec
test
jbe
insb
aas
push
push
xor
mov
test
cmpl
pop
in
xchg
or
loope
cmp
aad
ret
ja
jno
pusha
test
fucomp
cs
jb
push
ss
xlat
jge
jle
int3
int3
popa
jp
jb
xchg
mov
sti
addr16
cli
aaa
dec
mov
or
mov
mov
outsb
adc
int3
mov
jp
ficompl
stos
push
mov
test
imul
imul
andl
sbb
test
cs
xchg
xchg
xchg
dec
mov
mov
aaa
aaa
sbb
jge,pt
js
jp
cmp
scas
clc
push
arpl
pop
stos
xor
or
mov
push
mov
push
pusha
dec
movb
or
jmp
fsts
hlt
xorps
mov
cmp
fsts
repnz
mov
scas
stc
mov
subl
mov
filds
adc
repz
dec
sub
idivl
mov
daa
sub
dec
or
mov
jecxz
and
push
lods
data16
fwait
push
mov
push
mov
pop
mov
mul
xor
outsb
scas
js
push
xor
push
rep
test
ja
push
sti
jnp
add
fwait
cmpsl
cmp
xchg
dec
insb
movsb
outsb
rclb
ret
orl
cs
addb
add
cmp
jge
daa
out
mov
xchg
call
mov
jns
or
stc
movsb
mov
out
dec
loope
aaa
in
call
into
sub
lret
mov
mov
pushf
push
dec
pop
shll
dec
sbb
cmc
es
cmp
add
jns
decl
jge
jns
mov
addr16
mov
fdivr
cmp
insl
cmp
loopne
xchg
cmp
inc
rclb
xchg
inc
pop
jmp
shr
sub
sub
and
pop
push
pop
xor
dec
jno
ljmp
fcmovb
xchg
mov
scas
pop
push
sbb
gs
mov
arpl
mov
ss
push
cmp
mov
push
pop
pop
pushf
inc
push
decl
adc
out
push
xor
or
adc
je
loop
mov
xchg
std
sub
inc
push
pop
cltd
and
pop
and
cmp
iret
hlt
out
mov
xchg
fsubs
dec
dec
clc
call
sub
or
sti
mov
in
dec
lock
adc
or
clc
xchg
jno
fcmovu
fisubrl
outsl
sbb
stos
jmp
inc
sub
loope
rclb
es
mov
xor
scas
ss
xor
je
fildll
mov
mov
test
loope
test
inc
into
sbb
mov
jecxz
shlb
mov
dec
ss
sub
sub
pop
fcomps
and
js
dec
push
jp
or
mov
js
jmp
ffree
movsb
sbb
pop
fimull
jae
mov
cmp
push
test
fadds
test
fadds
sti
jbe
inc
xchg
loope
mov
jge
and
mov
and
mov
fldl
sbb
sbbb
in
mov
shll
out
jl
inc
add
dec
mov
xor
jmp
ret
in
icebp
push
aad
mov
sbb
stos
pop
mov
jmp
pop
sahf
mov
xor
lods
loope
push
xor
rcr
jg
cld
sbbl
pop
push
out
or
adc
rorl
jg
mov
add
popf
push
mov
push
cmp
lods
dec
popl
xchg
add
lds
push
movsb
jns
iret
cwtl
mov
loope
cmpb
push
movsl
mov
scas
scas
pusha
repz
das
testl
lods
jg
inc
cmc
mov
repnz
jp
cltd
sbb
pop
jb
scas
xchg
jns
sti
mov
or
xchg
jnp
jmp
inc
xor
mov
fucomip
push
shlb
ret
lock
add
add
dec
aam
idivl
and
popa
cmpsb
cltd
cmp
jg
sarl
add
inc
xchg
js
cmp
jne
jl
pop
pop
and
and
xor
roll
xchg
call
or
cwtl
mov
add
and
lret
jbe
lcall
xchg
mov
shll
add
pop
adc
dec
sbb
out
scas
dec
pop
lahf
and
cwtl
dec
rcrl
xchg
fwait
add
ja
inc
dec
scas
xor
lret
push
dec
adc
repz
push
xchg
test
mov
bound
ret
adc
push
dec
imulb
movsb
shl
stos
scas
add
insb
cmp
push
mov
cmp
sbb
nop
cmp
int
in
insl
outsb
lcall
out
fmuls
clc
and
jne
sub
dec
mov
and
xor
mov
add
sti
adc
stc
pop
loop
mov
inc
mov
sub
sahf
sahf
leave
pop
es
pop
push
shll
inc
int
test
imul
fidivs
test
cmp
cwtl
mov
xor
adc
sbb
cmc
lods
cs
sbb
lock
push
push
xchg
lcall
adc
cmc
sahf
add
xchg
jne
mov
sbb
lahf
cmp
inc
aaa
mov
cmp
pop
inc
adc
into
and
sti
std
push
add
pop
call
add
sbb
inc
scas
inc
aam
add
sahf
jp
scas
movsb
lock
cmp
mov
lods
imul
mov
mov
inc
jnp
adc
ret
jmp
pop
fistpl
jne
out
inc
in
out
loope
pop
in
add
jp,pn
loope
rorb
xchg
hlt
pop
adc
loopne
inc
inc
scas
int3
xor
ds
mov
mov
loop
pusha
mov
jp
mov
pop
push
iret
popf
inc
or
pop
push
sub
call
cmp
inc
rcl
pop
sbb
inc
sbb
fdivl
sahf
aaa
mov
and
jnp
aad
mov
mov
mov
jns
ficoml
sub
jmpw
repz
push
dec
and
xor
inc
push
pop
mov
push
dec
ja
mov
sub
enter
sub
sub
mov
push
push
es
out
mov
push
xchg
mov
jne
adc
mov
fadd
mov
int3
call
xchg
pushf
jae
jl
push
into
sub
push
sub
pop
xor
mov
mov
faddl
mov
in
jns
mov
test
mov
xchg
shll
mov
test
and
sti
add
into
fadds
xchg
pop
and
in
test
cmpsl
adc
mov
mov
lods
jp
hlt
mov
mov
jo
cmp
aas
push
mov
xor
ret
mov
xor
das
push
pusha
lea
int
loope
cmp
jmp
rcll
push
fwait
pop
mov
fisttpll
sub
add
jo
in
mov
mov
insb
stc
inc
call
xor
lret
pusha
pop
or
push
mov
loopne
mov
inc
sbb
mov
stc
jns
xchg
pop
add
arpl
or
loopne
mov
nop
xor
leave
clc
jbe
push
mov
test
sbb
mov
shlb
lds
fldenv
popl
nop
stos
mov
mov
mov
hlt
and
mov
mov
xchg
cmpsl
in
push
pop
cli
pop
cmp
inc
xchg
scas
loopne
lcall
pop
adc
adc
lret
repz
add
shlb
cmc
jnp,pt
mov
dec
sub
mov
ja
sbb
test
nopl
sub
stos
movsl
iret
out
fwait
xor
out
xchg
jae
cmp
icebp
pop
xchg
out
xchg
stc
xchg
aas
pop
mov
aad
roll
and
cmp
loop
rolb
inc
lret
pushf
mov
aaa
cld
mov
lds
mov
push
jl
lret
sub
mov
jp
int
pop
in
sar
dec
scas
fs
imul
sbb
fnstcw
pop
xchg
or
shrl
add
fcmovnu
push
cltd
add
adc
xor
push
sub
jbe
push
in
add
pop
idiv
popa
lds
push
ror
add
jge
fstl
pushw
mov
out
into
ret
jp
sub
mov
adc
dec
mov
out
pushf
fsubrs
and
inc
fs
and
loop
adc
sbb
push
jle
sbb
inc
dec
dec
aam
cmp
push
inc
mov
inc
test
sbb
rol
sbb
push
lock
lcall
and
jecxz
jecxz
ret
inc
cs
icebp
adc
push
enter
sbb
mov
mov
add
bound
aaa
push
out
fwait
push
inc
dec
xor
sbb
mov
in
mov
or
test
sub
push
xlat
nop
pusha
xchg
cmp
or
adc
pop
sbb
mov
cmp
push
xchg
or
incl
and
cwtl
pop
or
sbb
adc
xor
sbb
mov
pop
push
jnp
xor
ret
cmp
or
jne
mov
adc
xchg
mov
sub
xor
mov
jp
mov
jp
mov
hlt
and
inc
aaa
pop
fisttpl
incl
ror
mov
testb
ror
push
ret
xlat
es
out
das
cld
movsl
sbb
subl
scas
das
out
jge
push
jne
in
adc
cwtl
push
jno
das
push
orb
pop
adcl
fdivrl
loope
es
sub
cmp
adc
sbb
mov
add
testl
ret
adc
into
pop
sub
mov
ret
and
dec
test
int3
ret
jge
cld
cli
mov
fstl
inc
das
add
ja
adc
xor
clc
adc
in
xchg
arpl
jae
push
cmpsl
mov
push
jb
push
aad
aaa
adc
pop
pop
cmp
sub
fwait
jnp
mov
test
mov
and
and
ss
inc
fmull
or
lods
push
insb
mov
xchg
rcrb
out
repnz
insb
xor
loopne
rcrb
dec
dec
scas
xchg
push
loop
push
mov
stos
cmp
shlb
sbb
mov
js
and
sti
sbb
sbb
sub
ljmp
adc
mov
lret
repz
mov
test
ret
jmp
pop
test
push
mov
push
add
sub
cltd
ja
adc
mov
or
arpl
or
sub
xchg
daa
dec
pop
xor
sub
adc
mov
xor
ss
cmpsb
test
mov
mov
cmp
rcrl
dec
push
outsl
roll
cmpsb
adc
sarb
sub
addb
dec
push
or
ds
addl
mov
not
mov
or
insb
mov
lods
gs
xchg
fisubrl
cmpsl
mov
in
daa
mov
dec
ja
or
js
rorl
lret
repz
shl
out
out
and
adc
fldcw
mov
insb
pushf
nop
test
push
and
data16
sub
insl
lock
sti
shlb
and
lods
mov
mov
jp
aam
and
ja
jb
sub
test
mov
jno
push
aaa
cld
xor
xor
jo
dec
es
pusha
movntps
incl
xor
xlat
aad
imul
ja
mov
outsb
sub
sub
pop
push
jns
pop
cmp
data16
cmp
popf
outsl
fbstp
lret
inc
push
fcompl
pop
xorl
push
inc
test
mov
lock
rcl
btrl
stos
enter
ud2
aam
mov
aaa
xchg
mov
test
jle
lods
ss
sarl
movsl
and
imul
xchg
nop
and
scas
adc
or
mov
test
dec
mov
adc
das
in
fists
pop
lock
es
push
dec
add
mov
push
out
cli
or
mov
popf
pop
jne
stc
imul
add
insb
popa
in
adc
push
push
fwait
or
mov
sbb
dec
lock
mov
pop
divl
imul
insb
jle
in
inc
cmp
jp
xchg
fadds
int
sbb
das
add
int
mov
imul
push
jb
xchg
adc
cltd
or
jle
or
pop
push
mov
inc
mov
mov
mov
add
sub
xchg
outsb
imul
push
xor
repz
pop
test
mov
orb
xchg
bound
xchg
shr
or
in
sbb
fcmovnu
dec
lods
hlt
pop
sbb
test
pop
jge
das
sbbl
test
jle
sbb
and
lds
pop
pop
and
shll
xchg
test
cmp
adc
mov
jmp
jae
sahf
inc
stos
ret
mov
xchg
je,pt
fiaddl
outsl
adc
insb
or
push
test
repnz
adc
loop
jo
jge
movsl
and
frstor
pop
mov
les
and
jno
push
inc
or
incb
sub
push
pop
sahf
adc
call
lods
cmp
fisttps
jmp
cltd
xchg
gs
sub
repnz
aas
xchg
mov
and
mov
cmp
xor
popa
and
sbb
push
in
out
xor
cltd
jle,pt
pop
ret
shlb
addr16
add
cmp
cmp
int
mov
add
pop
stos
fwait
mov
lcall
or
mov
sbb
shrl
jnp
jne
fiadds
mov
test
mov
mov
pop
enter
pusha
sbb
lret
sub
mov
mov
popa
loopne
jnp
negb
aaa
movsb
leave
xorl
aaa
mov
das
stos
out
or
lea
sub
cmp
cltd
mov
inc
in
cmp
push
sub
dec
and
daa
ret
js
jbe
add
rolb
mov
pop
and
mov
or
push
out
cltd
mov
scas
dec
jmp
fcomi
lret
mov
aaa
loopne
insb
sub
nop
dec
xlat
ds
xor
or
mov
imul
mov
inc
mov
aam
jp
arpl
mov
stc
icebp
or
in
or
orb
into
scas
xchg
fnstcw
xor
push
out
mov
cmp
lods
jo
imul
jno
pop
pop
and
ret
lea
sarl
fidivl
jg
int3
xchg
dec
or
pop
xchg
aas
aad
stos
mov
mov
repz
pushf
ret
push
int3
or
rclb
pusha
pop
jb
jno
test
xor
je
xor
mov
je
movsb
xchg
pop
movsl
mov
ret
popa
popf
add
inc
mov
xchg
push
add
xlat
call
mov
mov
mov
push
arpl
sub
mov
sub
jecxz
notl
das
out
scas
movsb
pop
cmpb
iret
xchg
bound
add
push
out
mov
and
ljmp
xchg
cmp
mov
addr16
fwait
xchg
cmp
sahf
xchg
adc
std
pushf
js
push
push
sbb
sub
arpl
sbb
mov
in
and
mov
mov
sub
bound
or
movswl
jnp
pop
aas
jg
jnp
cmp
imul
mov
xchg
mov
mov
dec
mov
aam
lret
nop
cmp
repz
mov
lahf
add
pusha
icebp
xor
push
xor
dec
xlat
outsl
sbb
cmp
add
sbb
push
sti
xrelease
mov
push
es
lret
sub
sbb
das
mov
addb
add
jmp
cmpsl
inc
mov
sub
xchg
call
loopne
fwait
cmpsl
in
pop
push
push
pusha
insl
xchg
mov
mov
xchg
push
adc
push
cwtl
adc
test
scas
lret
mov
add
push
loope
cmp
dec
mov
pop
ljmp
das
mov
dec
shr
jb
jnp
rcll
mov
sub
mov
std
sub
sbbb
and
jo
cwtd
aad
mov
pop
jmp
xchg
stc
lret
insb
dec
push
insl
dec
aam
icebp
dec
aaa
xorl
push
lret
mov
pushf
mov
lcall
sub
inc
repz
push
shll
mov
or
add
jecxz
mov
dec
cmp
sti
loop
in
mov
mov
cli
aas
mov
test
in
scas
cmc
or
aas
dec
sub
adc
ss
cmpsl
pop
popa
stos
lods
fsubrs
pushf
dec
les
cmp
out
ja
push
test
aad
cmp
mov
ficomps
mov
cmp
je
add
scas
mov
mov
push
mov
stos
or
adc
leave
mov
pop
xchg
mov
cmp
push
popf
push
leave
insl
or
or
pop
sbb
or
lret
jnp
test
insl
pushf
inc
push
insl
fstpl
cld
std
push
xchg
aam
push
add
mov
cmp
lcall
mov
dec
cs
pop
jmp
sub
adc
xchg
jo
mov
comiss
xchg
outsb
sbb
popf
jg
enter
loope
icebp
fidivl
mov
orb
out
sbb
inc
and
pop
rclb
ja
insl
xchg
cmpsb
addl
mov
test
inc
repz
dec
pop
mov
inc
mov
mov
cmc
pop
cmpsl
rcrl
adc
sbb
es
push
sbb
pop
js
xor
lea
cmp
aam
or
cmpsb
pop
dec
jnp
call
dec
movsb
jno
adc
push
dec
es
cmp
mov
adc
inc
mov
test
rorb
lahf
outsb
ret
sti
fs
repnz
mov
dec
xor
xchg
sub
pusha
dec
sarb
lods
sub
inc
sub
fcomip
add
mov
cmp
aaa
xchg
sar
push
pop
fldt
dec
sbb
lods
iret
pop
pop
inc
pop
ja
or
fadd
out
jno
lahf
sbbb
call
insl
lds
xor
inc
jmp
testb
sbb
jle
lahf
call
pusha
fisttps
or
or
push
data16
xchg
cs
repnz
jo
stos
push
dec
pop
daa
lcall
test
xor
int
jae
xchg
sub
inc
and
enter
nop
fstl
cmp
mov
ret
sbb
cli
in
cmp
cltd
xchg
push
mov
mov
cmp
pushf
roll
sbb
pop
rcrl
popa
fsubp
ret
inc
sbb
xor
mov
xorl
adc
pop
sbb
incb
dec
rep
jns
fsts
fidivs
movsl
les
mov
imul
jg
mov
sbb
addl
push
mov
mov
sub
xchg
outsl
cmp
mov
test
idiv
inc
aas
cmp
push
les
xchg
jmp
cltd
out
adc
jl
mov
lods
loopne
cmp
or
mov
lret
sub
jo
jmp
cvtpi2ps
mov
xor
popa
fimull
mov
ja
xchg
pop
cmp
insb
fildl
clc
icebp
dec
mov
shll
outsl
iret
xor
mov
cmpsb
scas
adc
stos
fistpl
jecxz
mov
sbbl
or
sarb
popa
arpl
fsts
dec
in
mov
decl
jg
mov
in
das
es
push
jl
xchg
and
xor
js
jge
cmpsl
mov
arpl
ror
and
stc
ljmp
and
push
adc
mov
inc
pop
sbbb
test
xchg
test
push
push
insb
mov
lea
or
roll
scas
ret
xor
aam
mov
testl
out
inc
pop
addr16
add
iret
xchg
arpl
mov
or
adc
dec
movsb
lahf
nop
mov
push
fsubrs
jnp
dec
leave
les
push
jecxz
test
add
fnstenv
add
lret
rol
into
fwait
loope
test
xor
outsb
inc
data16
push
mov
imul
in
xchg
jo
ret
dec
add
mov
int
adc
mov
test
cmp
add
filds
imul
cwtl
daa
push
addr16
push
xchg
sbb
and
sbb
dec
pop
mov
adc
std
unpckhps
mov
xchg
mov
mov
push
mov
jmp
jae
cmp
cmp
mov
arpl
dec
lea
dec
cld
rolb
imul
inc
out
les
dec
sbb
sbb
jae
leave
push
out
out
jno
gs
jno
xorb
cld
icebp
mov
sti
pop
jae
dec
xor
and
fdivs
mov
dec
dec
push
hlt
add
cli
sbb
jle
stos
push
dec
xor
imul
lods
pushf
xchg
jmp
je
xor
loopew
jecxz
dec
mov
pop
xor
cmc
push
and
out
xorb
pop
mov
cmp
out
mov
sbb
hlt
jb
jp
push
push
out
xor
call
sbb
fsubrs
imul
xchg
xor
jl
clc
xor
mov
cmp
jp,pt
and
adc
pop
popa
add
adc
call
divb
mov
sub
adc
mov
push
pushf
xor
arpl
cmp
inc
out
adc
lret
jecxz
ds
jl
test
dec
jl
jns
ret
cmp
mov
dec
into
cli
push
shll
pusha
iret
pop
mov
pop
xor
sub
lods
jle
xchg
cwtl
pop
in
sbb
out
mov
sti
sahf
push
lods
xchg
es
sub
jb
jae
cmp
mov
arpl
repz
add
outsb
fstpt
enter
aad
xchg
inc
mov
add
pop
sbb
jp
xchg
mov
sbb
mov
sub
stos
jb
scas
and
idivl
jge
sbb
xor
mov
xor
mov
insb
imul
repnz
dec
mov
sub
out
adc
xchg
cmpsb
lock
stos
add
shl
in
inc
repnz
mov
and
jb
mov
test
aam
adc
repz
jge
inc
data16
popf
adc
and
mov
fiadds
loop
out
pop
and
dec
fwait
mov
add
xchg
cmp
out
jmp
xchg
jbe
jecxz
dec
mov
outsb
enter
fwait
push
in
inc
xchg
test
out
inc
in
pop
sahf
jbe
insb
loopne
pop
dec
hlt
sahf
cmp
push
or
mov
mov
xlat
fcmovnbe
xor
push
cmpb
lods
dec
xchg
adc
sub
mov
std
or
imul
mov
outsl
push
dec
arpl
mov
push
jg
jo
jmp
inc
dec
out
shll
in
dec
dec
lahf
mov
fldcw
mov
sarl
gs
xchg
pop
mov
jns
sbb
jmp
and
adc
sbb
ret
or
ret
in
inc
cmc
movb
in
insl
mov
cwtl
lds
jle
mov
dec
fldenv
push
dec
stc
in
mov
sbb
pop
movsb
fs
pop
xlat
pop
shr
cwtl
add
pushf
aad
mov
adc
lods
push
rol
test
lret
sbb
adc
sbb
cmpsl
add
into
fimuls
js
lcall
cs
cmp
or
repz
das
loop
sbb
push
push
hlt
test
in
int
xlat
fadds
in
sub
jmp
xor
aas
mov
test
fs
pop
xor
xchg
sbb
or
test
or
stos
cmp
push
in
and
lock
js
inc
sbb
dec
loope
dec
mov
cmp
xchg
xorb
insl
scas
out
imul
push
jne
int
icebp
in
scas
fs
rcrb
pop
dec
data16
xor
adc
imul
fcmovnb
shll
mov
sbb
xor
je
cwtl
popf
mov
lods
lock
fcom
xchg
in
cli
dec
dec
adc
xchg
rol
cli
push
and
fadds
cmp
or
xchg
subl
out
push
mov
pop
mov
sub
xor
stc
hlt
cli
mulb
mov
mov
icebp
aad
sbb
cltd
ficoml
inc
aas
cli
imul
and
jno
mov
mov
pop
mul
xchg
stos
xchg
dec
out
popf
scas
cmp
loope
out
sbb
stos
popf
loope
in
sub
lret
stos
cmc
bound
cmp
push
jecxz
nop
inc
adc
cmp
xchg
stos
jo
dec
jo
shll
jge
jno
mov
push
pushf
cwtl
pusha
sub
jge
inc
adc
das
sbb
stos
lret
xor
pop
xchg
int
xchg
sub
dec
sub
xor
push
in
orb
movsl
adc
sub
les
arpl
adc
sti
and
cmp
inc
adc
sbb
push
or
inc
mov
or
dec
movsl
test
xor
es
mov
xchg
mov
sbbl
lcall
cltd
popf
pop
andb
sbb
pop
mov
faddp
or
aas
inc
or
pop
xchg
mov
sbb
cmp
sbb
call
test
in
movsl
ljmp
pusha
xchg
shll
aas
adcl
xchg
popa
inc
in
es
cwtl
repz
ljmp
mull
sbb
ds
or
sbb
cmp
jl
into
ss
pop
je
jp
jmp
test
mov
or
mov
xor
out
pop
sbb
xor
dec
sub
lock
and
add
cmp
lret
inc
call
test
xor
inc
ret
or
sti
test
pop
adc
test
adc
lret
mov
xor
outsl
cwtl
or
add
push
jno
sbb
cltd
mov
push
pushf
jbe
cld
es
lret
ljmp
jmp
sub
rcrl
andb
jo
or
and
add
mov
sbb
rcrb
in
jg
sbb
add
addb
int3
mov
fs
jbe
and
mov
xor
adc
xor
int3
int3
xor
add
pusha
dec
sbb
xchg
enter
mov
inc
mov
cmp
dec
mov
push
fbld
daa
rorl
iret
mov
notb
rcr
rcrb
jbe
fcomp
int
popf
clc
dec
cmp
iret
fld1
push
xor
repnz
sbb
sahf
lea
out
or
loope
or
aam
fcompl
ss
dec
pop
jno
ds
insb
adc
mov
xchg
fisttps
jge
movsb
sub
icebp
xchg
std
rorl
dec
pop
repnz
push
adc
mov
sub
out
ss
and
adc
outsb
inc
xchg
mov
dec
mov
ljmp
scas
ret
cmp
dec
mov
inc
mov
aad
jb
push
sbb
or
popf
mov
cmp
push
mov
mov
mov
or
push
test
subl
into
pushf
jge
xchg
sarl
std
inc
jb
mov
mov
negb
cwtl
shr
jnp
iret
dec
ja
sahf
insl
into
push
outsl
sub
out
cmc
and
cld
lahf
adc
outsl
lahf
push
xor
cs
pop
js
jge
rol
movsl
sub
inc
aas
sub
mov
lea
ret
outsl
adc
mov
xor
test
jecxz
add
sbb
mov
imul
adc
mov
cld
enter
mov
xchg
inc
and
sbb
mov
and
in
in
sahf
call
mov
das
out
out
inc
push
lods
and
in
rolb
jnp
push
lret
adc
shr
sbb
iret
or
jne
movsb
fcmove
sbb
pusha
jmp
jae
in
jb
mov
mov
shl
mov
jae
pop
data16
jb
nop
stc
add
into
cmp
or
jle
shll
gs
push
jb
dec
imulb
pop
mov
cmp
lahf
loopne
fisubrs
add
aad
add
lret
icebp
mov
sub
ss
shld
in
push
xor
dec
fnstcw
adcb
mov
int
lcall
mov
mov
or
nop
xchg
test
fs
pop
pop
push
arpl
mov
push
leave
pop
and
bound
fs
daa
cwtl
add
mov
in
xor
adc
cmp
mov
arpl
sub
inc
push
dec
fmull
scas
sbb
jp
stc
push
stos
cmp
cmpsb
mov
jo
fisttpl
push
shrb
adcb
mov
add
pop
xor
cmovg
fisubl
rcll
pop
hlt
fwait
sbb
sub
fcomi
cmp
inc
aaa
add
mov
xor
jge
imul
or
sbbl
adc
rcrb
out
ret
cli
push
cmp
xor
dec
insl
and
pop
inc
pop
and
loope
cltd
outsl
sbb
xchg
mov
rcr
pop
sub
mov
add
xor
and
test
adc
call
push
sbb
cwtl
pushf
jb
sahf
ss
sub
push
cmpsb
mov
out
lods
sti
nop
push
mov
aaa
or
push
mov
notb
mov
dec
subl
and
sbb
xchg
aad
mov
inc
popa
popw
iret
ss
adc
addl
pop
cmc
push
jbe
xchg
stos
adc
xor
xchg
mov
icebp
mov
sbb
mov
rol
xchg
adc
inc
xchg
or
jb
and
ret
aam
je
push
dec
mov
and
pop
add
push
in
xchg
mov
iret
out
nop
jmp
sbbl
cmp
loope
dec
inc
cmp
mov
pop
lea
mov
xor
adc
adc
mov
rorl
fldenv
and
or
mov
jge
sbb
dec
jp
sub
pop
or
or
sub
and
imul
int3
mov
sub
cltd
xor
ljmp
dec
or
add
jo
mov
push
mov
xchg
mov
jmp
push
cwtl
js
ljmp
inc
in
ret
jecxz
je,pt
inc
mov
jmp
mov
xchg
lcall
push
dec
aaa
mov
ret
pop
sbb
pop
loope
rol
adc
and
cld
inc
cwtl
or
popf
out
xchg
inc
lods
dec
sahf
mov
push
push
mov
sbb
popa
mov
shrb
mov
push
and
adc
popl
xchg
notb
dec
adc
sahf
gs
pop
cmp
aas
test
add
push
stc
push
cld
mov
push
xchg
mov
popa
fdivrl
cmp
daa
loop
push
dec
jmp
ror
push
cmp
mov
mov
jne
or
sbb
dec
push
sbb
push
add
adc
sahf
jo
shrl
mov
or
xchg
out
mov
pop
lods
inc
hlt
mov
js
int
test
adc
jecxz
ja
push
xor
xchg
cmp
ja
mov
and
in
mov
jg
addb
subb
call
pop
pop
xlat
mov
adc
mov
xchg
ss
and
sbb
xor
pushf
orb
mov
mov
sub
add
or
push
push
test
xor
dec
sbb
lret
pop
push
int
add
jae
pop
ret
aam
xchg
jmp
dec
insl
mov
jmp
shlb
ja
and
vmread
pop
cmc
dec
and
icebp
sub
mov
nop
jp
sbb
xchg
push
sub
add
and
ficoms
fs
sbb
sbb
shlb
pop
push
xor
ret
insb
arpl
mov
inc
cld
icebp
dec
mov
mov
xlat
pop
fnstenv
addr16
push
cmpsb
sbb
std
ljmp
mov
es
icebp
or
int3
mov
negl
cwtl
testb
adc
sub
rclb
test
mov
aad
int3
or
sub
adc
sub
pop
xlat
and
aas
mov
pop
jg
ds
pop
push
fstpl
mov
cmpsb
mov
jecxz
mov
adc
popf
dec
xchg
fwait
enter
pop
push
mov
or
dec
dec
push
xchg
pop
xchg
dec
cmp
orl
repz
or
mov
lods
jbe
dec
sbb
daa
hlt
ficomps
popa
lock
inc
cmp
mov
mov
or
test
xlat
jmp
repnz
imul
mov
insl
mov
mov
sbb
loope
fimuls
lret
cmpsb
adc
scas
test
cld
pop
out
pop
dec
ja
push
fcoml
or
xchg
mov
hlt
fimuls
xchg
lret
mov
mov
out
fidivrl
pop
movb
pop
addr16
adc
pusha
mov
outsb
lea
negl
or
sbb
cmp
popa
mov
adc
xor
ret
cli
fildl
shll
push
push
push
xchg
mov
push
stos
mov
mov
mov
enter
insl
out
imulb
les
fcomip
imul
cmp
adcb
dec
xlat
pop
roll
jns
in
sub
mov
mulb
push
and
js
repnz
test
mov
inc
mov
cmp
push
test
lock
dec
cmc
or
hlt
sub
add
mov
imul
lahf
add
les
mov
popa
cmc
mov
cli
xchg
cwtl
mov
lret
stos
add
dec
lcall
stos
stos
xchg
lock
or
imul
aam
lock
push
js
mov
mov
add
mov
adc
mov
aaa
int
dec
dec
arpl
sbb
shlb
xchg
mov
pop
push
cwtl
pop
push
inc
jmp
xorb
shl
push
mov
pusha
adc
cmp
imul
lock
pop
fs
aam
dec
hlt
lea
pusha
add
jno
fs
jge
mov
xor
mov
pushf
mov
jl
lds
repz
xor
or
fwait
js
inc
or
mov
icebp
cmp
or
fmuls
xchg
and
call
js
adcb
aaa
mov
incl
test
fsubrs
pop
sbb
push
lret
xlat
mov
push
mov
or
std
imul
pop
cmp
lahf
and
jo
outsb
imul
sbb
lds
adc
dec
xor
fst
je
insl
bnd
clc
cmpsb
ja
xchg
popa
jecxz
and
xchg
inc
test
sarb
mov
ret
lmsw
pop
lahf
pop
das
or
lods
or
loopne
add
int
les
loope
fcom
jns
xor
daa
mov
imul
movsl
adc
bound
lods
dec
sbb
arpl
lcall
push
jo
pop
pop
int3
mov
xchg
jno
add
andb
shl
cli
iret
inc
cmp
mov
scas
sahf
mov
rolb
outsb
push
enter
dec
push
mov
test
icebp
imul
pop
dec
adc
and
inc
aaa
dec
stos
scas
mov
fists
jp
je
imul
movsb
add
stc
pop
mov
pop
outsb
mov
bound
pop
mov
popa
fildll
sbb
pop
xor
inc
lret
fstpt
mov
jg
movsl
cs
adc
bound
or
add
fisttpl
mov
ss
leave
scas
inc
mov
jp
jae
div
add
inc
and
into
xchg
sbbl
iret
call
fidivrl
scas
or
add
sbb
ret
xor
push
mulps
loopne
or
mov
dec
mov
sbb
movsl
data16
iret
gs
movsb
sub
mov
sub
xchg
pop
push
repnz
and
mov
lock
shll
mov
jb
mov
lcall
pushf
sahf
addr16
imul
enter
stos
fisttpll
push
dec
dec
rorb
fdivl
call
pop
iret
icebp
mov
enter
sub
sahf
std
rep
cmp
push
in
push
push
ja
push
mov
fadds
mov
fwait
xor
mov
add
imul
enter
daa
pushf
notl
cwtl
and
adc
stc
in
sub
imull
sub
sbb
inc
sbb
inc
and
lods
mov
out
in
loope
mov
mov
mov
fimull
aas
cmp
add
jmp
pop
pop
scas
adc
negl
or
add
sahf
push
sti
xorb
jns
mov
cmp
cs
or
out
std
adc
adc
xor
cmc
stos
push
loope
into
jmp
inc
js
fadds
xchg
cmp
mov
roll
mov
mov
fildll
mov
xchg
mov
xor
rorl
jle
lret
pop
lret
movsb
out
leave
sub
jecxz
xor
mov
jge
fimuls
xchg
add
jge
sti
fcoml
daa
lods
push
mov
pop
cltd
lcall
pusha
lock
or
loop
xchg
repnz
imul
cwtl
fnstsw
test
hlt
or
or
lds
push
insb
add
jo
sbb
lods
lods
inc
lea
pop
sbb
lret
insl
cmp
push
jecxz
ja
lea
mov
cmp
ljmp
pop
iret
cmp
cmc
jmp
jne
pop
icebp
cmpsb
xorl
mov
es
arpl
enter
adcl
mov
sub
mov
xchg
adc
jmp
xchg
loope
xor
scas
shrb
push
inc
add
mov
jmp
aad
invd
pop
sub
das
imul
push
das
push
rorl
cmpsl
cmpsb
iret
xor
adc
and
mov
test
inc
jl
pop
aad
mov
mov
xor
cmp
mov
mov
mov
mov
std
mov
cs
ss
out
pop
fnstenv
push
clc
add
dec
sub
jbe
rolb
mov
xor
cmp
int3
mov
jmp
fs
stc
loop
xchg
jnp
fldt
pop
jl
push
adc
jge
jnp
mov
mov
enter
cmp
mov
push
mov
pop
clc
sub
fs
lds
xchg
fcoms
stos
dec
or
fcompl
imul
loope
jns
stos
mov
mull
test
jbe
jae
pushf
cmp
adc
push
addr16
sar
mov
or
xchg
sub
or
and
fsubs
fsts
dec
push
add
cmc
dec
in
jo
jne
add
pop
mov
mov
outsb
into
pop
lahf
fdiv
or
mov
outsl
mov
pop
stos
sub
push
ficomps
cmp
push
mov
inc
into
ret
jo
inc
and
scas
lret
popa
xchg
mov
pushf
cmp
push
bound
xor
ret
insb
imul
aaa
into
sub
test
ljmp
adc
cltd
sub
fbstp
pop
mov
sub
jmp
enter
cmpsl
aaa
fisubl
and
add
iret
movsl
nop
aas
fs
cmp
fst
das
jo
pop
enter
cmp
pusha
lds
insb
nop
inc
adc
lods
mov
sub
adc
xchg
sub
lock
in
inc
cwtl
lock
pop
sub
xor
paddb
jne
movhps
and
cmp
or
jb
jp
add
add
ret
pop
sbb
pop
push
sahf
xor
xchg
sub
mov
out
mov
jns
iret
inc
icebp
cltd
xchg
fidivrs
shlb
sub
in
push
cmp
rcll
xor
fiaddl
xchg
cmp
in
je
adc
sub
testb
sbb
rcrl
adc
lret
add
pop
cmp
ds
cld
cmp
rcll
sahf
push
fstpt
sub
loop
or
mov
mov
jp
sbb
inc
push
ror
inc
jne
jae
mov
ljmp
daa
pop
push
test
sub
add
out
pop
fimull
leave
sub
jne
xor
jge
sbb
mov
jnp
stos
xor
fcoms
xor
cmp
xchg
fs
cmpsl
shll
inc
nop
test
push
mov
sbb
xchg
lea
sbb
adc
dec
and
int
or
dec
es
scas
aaa
cmp
insl
push
jmp
push
lock
cmp
mov
loopne
mov
sub
into
fstpt
jecxz
cmp
xchg
mov
out
in
pusha
jb,pn
mov
xchg
jb
aas
lret
fwait
aad
jae
enter
movsb
and
jge
repz
cmp
lds
lock
pop
jl
mov
subb
adc
and
mov
je
cmp
test
mov
orb
arpl
add
addr16
push
lahf
or
gs
pop
leave
xchg
sub
adc
jne
pushf
in
dec
lods
dec
cmp
and
out
dec
fidivrs
xchg
scas
fwait
leave
lcall
xor
mov
mov
fsub
pop
adc
aam
clc
int
out
sub
sub
and
push
mov
sbb
fidivrs
mov
inc
divb
mov
push
sub
jmp
lcall
sub
pop
push
fsts
repz
outsb
xchg
jl
ja
mov
std
addl
sbb
jno
lods
push
movsl
loop
xchg
and
jmp
movsl
add
add
cwtl
xchg
push
sbb
jmp
mov
enter
dec
mov
lcall
jl
imull
cmc
sub
cmp
pusha
xchg
cmp
cli
and
mov
jp
sub
add
inc
jnp
js
or
mov
fcoml
mov
fdivrs
or
push
inc
lret
xor
mov
inc
cmp
fisttps
pop
movsl
adc
lds
outsw
aas
sahf
mov
pop
xchg
les
int
mov
mov
xchg
add
xor
ret
or
jge
fdivrl
mov
sub
outsb
sbb
pop
std
sbb
sub
inc
pop
notl
add
mov
sti
mov
nop
out
and
xchg
stos
mov
call
xor
or
xor
push
jne
ret
aas
xor
testb
rol
push
jecxz
or
mov
inc
popf
mov
mov
push
loope
pusha
xchg
mov
icebp
sbb
movsb
push
cmpb
jp
or
lcall
dec
mov
push
xchg
icebp
dec
add
cld
sahf
cltd
fcoml
call
dec
insb
mov
pop
cmp
adc
mov
jmp
fwait
xchg
push
mov
out
std
xchg
mov
mov
sub
ja
sub
sub
popf
in
xchg
aad
pop
sub
cmp
fs
cmp
repnz
js
mov
imul
cmp
jno
repnz
in
mov
push
add
mov
maxps
popa
jle
or
lahf
enter
and
loope
sub
repz
xchg
jecxz
in
out
adc
leave
aad
add
sbb
lds
clc
xor
xchg
inc
inc
jp
js
and
aaa
xchg
test
mov
mov
push
mov
sahf
popf
icebp
mov
pop
pop
inc
mov
push
cmp
fmuls
sbb
test
inc
dec
xchg
popa
jae
mov
add
in
dec
xchg
or
xchg
xadd
push
sub
fnstsw
push
pop
orl
ds
nop
data16
push
pop
dec
sub
mov
xor
outsl
xchg
lods
lods
xor
outsl
bound
sub
subl
or
imul
dec
ljmp
setg
sub
ss
cld
mov
adc
sbbl
jmp
cltd
loop
xor
pop
mov
mov
jmp
xchg
shlb
adc
and
call
mov
or
dec
cs
add
dec
dec
cmp
sub
lods
aam
in
lret
xchg
xchg
push
mov
mov
xchg
daa
sbbb
jbe
pop
jmp
or
shll
xchg
xor
mov
adc
push
jmp
lods
or
inc
sub
mov
xchg
loope
fisttpl
sbb
bound
sarl
add
stos
std
xchg
inc
clc
ljmp
dec
push
mov
push
pop
lock
pop
rcrb
pushf
ret
leave
gs
mov
test
and
sub
stos
repz
daa
mov
pop
and
lcall
jl
mov
add
dec
xor
mov
mov
mov
nop
popf
cmpsb
sub
bound
mov
inc
adc
fwait
or
lock
cmpsl
test
arpl
adc
mov
loope
enter
jns
fsubrl
push
mov
inc
mov
out
mov
out
cltd
jbe
dec
sub
push
adc
or
pop
fsubp
inc
xorb
out
outsl
pop
pop
cmp
mov
push
xchg
adc
push
mov
adc
mov
sub
adcl
pop
lcall
mov
jb
enter
lahf
sbb
nop
or
mov
pop
pop
mov
sbb
lahf
and
cmp
out
cmp
in
aad
sub
inc
cmp
xor
rcrl
pop
fst
inc
out
dec
mov
push
mov
sbb
aam
out
pop
and
int
maxps
loope
adc
clc
ds
rcl
sbb
jae
insb
scas
outsb
lock
mov
mov
shrl
pop
sbb
daa
mov
imul
push
repnz
ret
int3
pcmpgtd
push
sbbb
and
lock
imul
mov
enter
mov
fstpl
outsb
out
inc
aam
xor
out
ds
adc
xchg
sar
and
cvtpi2ps
lcall
clc
mov
jbe
dec
fdivr
in
sbb
inc
daa
fidivrl
xchg
pop
xor
imul
test
jae
int
lea
cmc
add
mov
popa
pop
mov
jbe
lock
out
in
es
mov
out
bound
mov
sbb
pusha
pop
in
ja
inc
lret
pop
push
rcrb
add
dec
sub
push
lret
scas
jl
dec
mov
sub
inc
mov
dec
sbb
daa
sbb
inc
push
addr16
dec
aad
clc
adc
sti
xorb
or
xor
dec
aad
dec
loop
std
xor
mov
push
repnz
xchg
jno
push
sub
clc
popa
insb
mov
mov
sbb
sbb
xchg
pushf
lods
cmpsb
lock
subb
add
lods
hlt
jl
push
jecxz
jge
inc
idiv
fs
mov
jmp
xchg
das
in
adc
jns
cs
loopne
jmp
icebp
inc
inc
mov
cmp
and
rcl
aas
sub
push
lret
inc
xchg
icebp
xor
lahf
dec
push
arpl
cmc
push
mov
pop
sarb
xlat
clc
push
dec
leave
pop
sub
dec
mov
pop
pop
sub
loop
pop
jmp
dec
mov
fs
lods
push
nop
adc
jne
xchg
jbe
mov
xchg
xor
inc
adc
xor
insl
jnp,pt
mov
rclb
in
add
and
push
inc
out
aad
pop
mov
cmp
xor
inc
loop
jno
or
push
ds
stc
cmp
lds
and
adc
xchg
inc
pop
notl
lret
push
and
dec
jae
xchg
add
sbb
sub
push
imul
inc
cwtl
xlat
cmp
and
adc
test
arpl
and
sbb
daa
popf
xlat
lret
mov
cmp
sub
mov
sbbl
mov
iret
add
icebp
mov
inc
jp,pn
lock
pop
jae
hlt
lods
int3
jb
adc
les
cs
fs
shlb
dec
scas
enter
clc
inc
das
mov
out
inc
lret
and
inc
jae
movsb
frstor
loopne
cwtl
mov
add
ret
int3
xchg
popa
lods
cmp
lods
cli
aas
in
in
mov
xchg
and
xchg
std
jo
jne
sbb
out
inc
addl
cltd
outsb
pop
pusha
mov
dec
push
mov
fidivrs
pop
test
rclb
ljmp
cli
jb
pusha
lcall
mov
aas
ror
xchg
in
lret
ficomps
arpl
adc
or
pop
sbbb
dec
negl
push
scas
push
sub
sarl
jo
lods
pop
lahf
aam
pop
jne
dec
loopne
shlb
enter
sbb
gs
lds
in
xchg
pop
arpl
mov
fcmovne
jbe
dec
mov
lahf
jnp
fdivrs
ds
cmc
subb
in
and
outsl
mov
add
jne
aad
jae
mov
mov
cs
scas
lds
fistl
sbbl
sub
out
inc
gs
mov
xchg
pop
mov
inc
jae
jae
ds
jo
stos
cmc
cmp
dec
test
dec
cmp
xlat
outsl
and
loopne
cwtl
out
fs
jbe
xchg
sbb
aam
mov
int3
ss
sahf
inc
xor
fsts
cmc
jmp
add
dec
add
pop
cmpsl
push
push
insl
push
imul
mov
les
fs
call
push
jnp
jge
outsl
jg
add
aas
and
mov
test
xor
cmp
mov
fbld
dec
jno
or
lcall
test
xor
int
jle
mov
cmp
xchg
push
sbb
dec
pushf
inc
pusha
mov
mov
jg
cli
hlt
cwtl
jge
push
xchg
stos
cmc
call
jno
inc
addb
test
fiaddl
jno
sbb
sahf
or
dec
push
ret
mov
out
imul
jmp
or
jb
repnz
aas
out
push
inc
xor
lds
xchg
mov
adc
out
bound
pop
lea
ret
mov
mov
lret
xchg
popa
test
and
or
push
lea
lods
in
dec
push
mov
mov
cmc
in
mov
xchg
call
mov
adc
push
push
out
jae
sub
fsubrl
pop
xchg
xchg
mov
aas
sbb
and
pop
daa
repnz
push
shr
lds
in
cli
mov
pushl
lret
repnz
pushf
or
hlt
xor
jp
ficompl
ret
xor
push
and
ret
aad
mov
push
jb
inc
repz
pop
scas
push
jg
cli
fdivrl
nop
push
mov
lods
arpl
mov
pop
cmp
leave
inc
jbe
outsb
sub
sbb
jl
daa
add
into
ds
cmpsl
mov
repz
pop
lds
xor
dec
and
ljmp
or
sahf
lds
push
out
push
lds
inc
jmp
pop
notl
pusha
xchg
mov
aad
push
in
into
add
imul
sbb
sub
lock
push
in
fsubl
mov
shrl
sti
jnp
xor
sbb
outsb
cmp
ljmp
shll
fsts
lcall
xor
or
outsl
mov
stc
scas
and
dec
es
popf
rolb
cmp
in
clc
jp
fwait
shll
popf
in
icebp
stos
pop
sbb
cmp
sub
movsb
inc
mov
loope
mov
or
aam
pop
push
mov
and
pop
out
mov
loope
call
jmp
lea
pop
push
das
lahf
imul
jns
xchg
xchg
faddl
jbe
addb
add
lds
add
movsl
mov
dec
pop
fcom
mov
shlb
les
jns
lahf
jne
xchg
push
mov
mov
sub
adc
test
ret
sub
jb
cltd
outsl
mov
dec
icebp
mov
push
sti
movb
aas
lea
cltd
mov
push
aam
jp
and
or
jmp
xor
sti
cmpsl
ljmp
std
or
mov
jno
jmp
pushf
jbe
lahf
popa
push
jae
dec
mov
cmpsb
fnstcw
push
sub
insl
int
negl
or
pusha
pushl
call
hlt
ds
outsl
sbb
outsb
test
adcl
or
lea
pop
ljmp
jmp
maskmovq
notl
inc
lds
adc
mov
sahf
mov
mov
and
adc
mov
mov
inc
jmp
roll
cmp
jp
lock
ljmp
xor
fidivs
std
test
es
or
xor
cmp
sbb
mov
out
enter
cmp
jle
push
xor
loopne
les
gs
push
clc
aad
popa
jl
addr16
cltd
mov
cmp
aam
mov
jo
mov
ljmp
fimuls
scas
leave
mov
push
imul
inc
xchg
fisttpll
icebp
jmp
mov
xor
outsb
pop
push
mov
sbb
xor
test
clc
jg
call
scas
nop
gs
sti
mov
and
xor
jno
xchg
jno
call
jne
movsl
push
negl
sbb
loop
and
sbb
dec
push
fwait
jmp
mov
into
cmp
in
in
xchg
mov
subl
loopne
es
addr16
jbe
pop
sub
pushf
mov
inc
gs
lea
leave
rorb
xlat
or
xor
fwait
imul
cmp
mov
inc
out
cmp
cld
nop
jg
cwtl
and
pushf
jecxz
xor
aaa
ret
sbbl
add
sub
push
fincstp
dec
mov
lahf
hlt
push
xor
jle
cwtl
cwtl
out
repnz
fwait
xor
push
sbb
cmpsb
inc
jnp
pop
sbb
and
repz
bound
popl
dec
outsl
je
adc
sub
lea
jmp
movsb
adc
push
imul
jle
outsl
mov
pushf
dec
lret
or
out
call
in
xchg
mov
les
adc
movsl
jecxz
std
ficoml
adc
dec
arpl
outsb
mov
into
xchg
or
xchg
mov
negb
popf
dec
mov
lds
call
or
cmpsl
rep
mov
in
jp
mov
xor
test
jmp
mov
sbb
rorb
ret
call
das
nop
add
pop
cmpsl
ret
sarl
test
inc
adc
lock
cs
pop
roll
subb
lret
lods
fbstp
jle
shlb
rcr
jo
les
nop
jno,pn
pop
or
movsl
cmp
ret
addr16
idivl
std
inc
ret
or
dec
ss
test
mov
mov
xor
mov
movsl
out
mov
mov
jae
push
fists
testl
mov
iret
in
cmp
push
dec
mov
sbb
fyl2xp1
lahf
cmp
orl
pop
std
pop
lahf
xorl
pop
arpl
push
cmpsl
imul
cmp
bound
sub
pop
lods
scas
dec
mov
mov
subl
cld
cmp
push
loope
adc
dec
test
add
sti
leave
arpl
shl
inc
jge
sub
out
xor
cltd
dec
sbb
and
stc
xchg
pushl
out
jmp
mov
pop
push
sub
xorb
inc
sub
add
mov
imul
cs
jge
fcompl
popa
and
rol
adc
aam
scas
xchg
aaa
addr16
enter
cwtl
test
sti
xchg
aam
fiadds
add
in
push
loop
and
inc
repz
fildl
insb
jns
scas
xchg
push
sbb
outsb
into
jle
repz
inc
cltd
push
movsb
test
push
in
jmp
enter
jl
lds
push
jmp
popf
push
mov
cld
out
loope
push
mov
inc
ret
pusha
fimuls
mov
movsl
stc
sahf
dec
cmpsl
popa
jae
out
jmp
aad
xor
push
or
jno
movsl
cli
mov
out
ss
push
daa
lret
in
push
adc
lea
notl
dec
shld
add
aaa
jmp
scas
int
je
adc
mov
pop
xchg
inc
dec
lret
popf
cs
cmp
addr16
xchg
or
decb
pop
add
cmp
repnz
add
or
dec
nop
mov
xlat
in
and
icebp
outsl
ret
daa
dec
mov
outsl
leave
aaa
push
inc
lods
call
imul
pop
pop
in
daa
inc
imul
daa
mov
adc
lret
jge
add
push
push
sub
enter
xchg
pop
pop
insb
daa
insb
mov
ret
out
fisubrl
xchg
ljmp
mov
imul
pop
mov
iret
popf
jnp
push
sbb
int3
fwait
jb
xor
loope
cltd
mov
mov
or
shlb
mov
cmp
and
add
mov
xlat
pusha
clc
mov
inc
push
jmp
add
dec
in
in
mov
ds
xlat
popa
push
dec
outsb
in
adc
rcrl
hlt
fisubl
cmp
rorl
lret
stos
mov
and
jp
inc
scas
xchg
and
decl
push
rcl
ror
or
movsb
aas
mov
lock
jnp
push
leave
jns
ja
cmc
cmp
dec
into
xchg
mov
and
add
outsb
ret
repz
mov
stos
add
sbb
dec
pop
jp
mov
popa
rcrl
mov
dec
cmp
cs
or
sub
lock
dec
jne
inc
test
xor
add
pop
dec
cltd
dec
xor
sti
ja
loop
mov
ja
leave
fcoml
inc
inc
call
pushf
xor
xor
loope
xor
jl
dec
jp
in
dec
cmc
jno,pn
jb
sbb
dec
fs
add
sub
xchg
pop
shlb
dec
adc
cmc
in
inc
jg
sbb
aam
and
push
cli
mov
lcall
arpl
jns
cmp
jo
sarb
test
mov
xchg
aas
xchg
mov
mov
jnp
pop
mov
xor
sahf
dec
sub
jb
lock
data16
subb
pusha
sub
or
ja
sub
push
xor
sahf
mov
pop
cli
cmpsl
adc
cld
stc
rcrb
or
mov
sahf
xchg
mov
xor
or
pushf
dec
loop
jge
sbb
push
sub
jg
sbb
popa
add
lret
xor
lods
add
idivb
test
call
jo
je
mov
jle
aam
push
add
mov
cwtl
shlb
pop
xchg
mull
ja
and
and
mull
subl
repnz
imul
subb
mov
and
xor
scas
in
addl
in
shlb
rcll
and
cltd
xor
int
mov
ss
insl
inc
fiadds
inc
out
sbb
in
in
cmpsl
sahf
cmp
test
mulb
mov
and
pusha
hlt
add
stos
je
outsb
xor
lret
lods
and
adc
sbb
lea
lcall
and
loop
das
arpl
int3
mov
cmpsl
daa
pusha
pop
int3
pop
out
stos
xchg
dec
xchg
xlat
in
sbb
ret
pop
cmp
test
lret
push
pop
mov
lods
mov
mull
cmp
inc
gs
and
add
mov
mov
add
mov
mov
loopne
aas
aas
or
pop
jb
sbb
jae
jl
pop
imul
push
out
dec
sub
mov
in
enter
cld
lods
les
aam
test
insl
leave
arpl
cmpsb
push
xchg
enter
aam
add
adcl
bound
dec
orb
mov
lret
and
fiadds
push
xlat
test
cs
cmpsb
inc
cmp
imul
add
aad
loopne
in
cmp
pop
xor
push
mov
aas
ljmp
and
cmp
sub
imul
push
jge
test
mov
push
adc
lock
mov
xchg
pusha
cmc
xor
inc
fsts
sti
add
inc
data16
inc
xchg
lret
dec
fwait
sub
cltd
cmp
fists
mov
aaa
movsl
lahf
and
call
std
cmp
jmp
mov
daa
fsubr
daa
sbb
inc
addr16
pop
daa
lea
adc
sub
xchg
add
scas
xor
xchg
dec
sbbl
shrb
mov
mov
fcomps
fs
les
cmpsl
movsl
into
ds
test
adc
adc
mov
fsubs
mov
sbb
aad
push
test
xor
push
es
xorl
xor
or
mov
sub
push
sbb
push
sarb
bound
mov
fmull
lahf
test
fiadds
lcall
mov
data16
xor
push
mov
movsl
rcrl
inc
aad
push
xchg
outsl
cmp
ret
popa
mov
inc
mov
push
fisubs
mov
fisttpl
push
je
or
and
scas
js
in
add
addr16
aad
test
int3
xchg
clc
dec
cmp
imul
cltd
push
sbb
dec
mov
ds
push
sbb
lcall
cmp
jl
mov
jmp
xorl
iret
fisubrl
xchg
roll
fisubrs
dec
popf
loopne
repnz
imull
cs
inc
mov
cmpsb
sub
dec
enter
cmpsb
je
rcll
sbb
xchg
data16
or
arpl
ret
jg
es
lods
jo
pop
shl
add
push
sarb
jbe
jecxz
cmp
pusha
ja
mov
push
mov
add
sub
hlt
rclb
cld
sbb
mov
xlat
mov
mov
in
mov
pop
in
push
nop
repnz
sub
shld
sbb
jne
cltd
xor
mov
sbb
push
or
cmp
add
mov
sub
sbb
sub
fisubrs
jbe
ret
pushf
mov
ss
aas
sub
xor
add
push
popf
and
mov
or
dec
xlat
aaa
aam
cmpb
inc
es
loope
cs
adc
push
int3
cmp
sub
xchg
roll
adc
scas
ds
icebp
jl
pop
sbb
imulb
add
push
mov
sbb
xor
adc
ret
or
rolb
cmpsb
in
dec
cmp
inc
dec
fsubr
or
pop
out
jbe
sub
xchg
xchg
stc
xchg
xor
clc
jo
mov
fisubrs
loop
push
ss
mov
sar
dec
aad
cwtl
pop
mov
xorl
mov
push
popa
mov
fadd
out
sbb
sub
add
adc
cmp
call
pop
inc
sub
inc
imul
fdivs
repnz
aad
pop
adc
mov
pusha
pop
mov
ss
loopne
and
fwait
adc
fadds
cmp
xchg
cmp
nop
xchg
add
movsb
xlat
cmp
mov
sbb
pop
les
fcmovnb
lds
leave
lret
pop
insb
inc
and
jne
icebp
ficoms
sbb
jl
pop
ss
add
xchg
xor
sbb
shrb
xchg
adcl
cmp
xchg
sbb
shlb
loop
pop
sub
sub
mov
nop
int3
mov
mov
enter
mov
mov
cmp
insl
cmp
cmpsl
jp
rcll
inc
xchg
iret
dec
pop
sbb
mov
xor
testb
and
push
int3
xchg
call
fwait
cli
dec
inc
jo
pushf
movsb
ficoms
jmp
push
lret
add
cmp
mov
fstps
dec
push
stc
push
movsl
lock
mov
insl
daa
inc
xchg
add
stos
add
jne
dec
insl
insb
xchg
ficoms
jl
xor
xor
pusha
cltd
dec
sub
xlat
mov
xor
stos
lods
cmp
and
clc
out
ja
jp
or
sti
mov
pushf
xor
inc
mov
shlb
ja
and
lcall
mov
dec
jae
inc
mov
subl
xchg
cmp
xchg
shlb
xchg
push
jns
adc
int3
dec
adc
popf
mov
in
jmp
out
cmpsl
rorb
sbb
ret
jbe
lcall
mov
dec
mov
in
jg
pop
jl
inc
xorl
cmpb
xchg
fistps
or
dec
and
mov
inc
or
aad
sahf
int
jb
call
pop
rclb
xchg
pop
xchg
data16
jae
mov
adc
and
or
jl
mov
and
push
orl
or
cmp
and
sbb
in
pusha
sti
adc
out
pop
iret
outsl
and
cs
inc
enter
or
cltd
mov
ds
loope
and
sub
sar
pop
and
sub
mov
add
aam
sub
out
mov
loopne
pop
jae
adc
jmp
enter
outsb
push
adc
jb
popa
aam
out
pushf
shll
mov
xlat
add
sub
or
xchg
loop
lret
xor
in
scas
pop
iret
lcall
hlt
and
jo
add
insl
xor
popf
sub
push
ret
mov
dec
inc
aaa
xchg
outsb
inc
mov
xor
repz
repz
arpl
jl
jnp
xchg
outsb
adc
pop
stc
xchg
cli
cmp
mov
testb
in
jae
in
mov
into
mov
push
mov
testb
push
adc
rclb
mov
or
out
inc
mov
cwtl
push
mov
loop
flds
sub
add
in
xor
sbb
mov
cmpsl
mov
les
add
jb
out
bound
gs
ljmp
stos
inc
sbb
adc
clc
mov
imul
or
ret
in
adc
pop
movsl
pop
rorb
add
add
xchg
jns
mov
adc
es
jle
cwtl
ds
test
jle
dec
scas
push
popf
bound
dec
ds
popa
mov
fildll
rcrl
cmpsl
jae
lds
pop
pop
adc
adc
int3
in
inc
mov
adc
leave
xor
rcll
stos
cmpsb
dec
jmp
or
pop
inc
jp
in
jne
div
xchg
xor
cmpsl
push
stos
out
flds
push
leave
jne
sbb
or
mov
stc
inc
dec
inc
push
xchg
loopne
mov
scas
sub
ds
popa
lds
flds
jl
jo
sbb
jmp
test
aad
cmpsb
incl
sbb
aam
orb
aaa
dec
iret
jl
pop
into
adc
sarb
jae
jmp
test
std
xchg
imul
sbb
mov
push
fisubs
iret
fwait
cs
inc
ret
enter
repz
aaa
or
pop
cmpb
or
bound
rcrb
xchg
mov
cmp
in
fmul
pop
lods
ja
negb
faddp
add
and
sbb
inc
mov
fidivrs
das
clc
cwtl
or
cmp
inc
orl
data16
add
xor
or
sbb
and
xchg
les
mov
cmp
sahf
mov
fldenv
outsl
mov
xchg
inc
lcall
push
insb
addb
xor
repz
imul
in
mov
jle
int3
rcrl
lcall
lcall
pusha
push
lea
enter
jl
sub
push
mov
sbb
mov
jnp
adcb
fbld
lods
sub
mov
xor
ja
out
ja
add
movsb
pop
cltd
and
call
fbld
stc
add
jecxz
pop
dec
leave
xor
fdivrs
test
je
roll
lea
dec
bound
mov
shrb
inc
mov
pop
or
push
inc
ret
repnz
push
jns
gs
shll
sahf
aad
pop
dec
lds
jg
or
loop
sbb
or
dec
inc
insl
add
or
cmp
scas
outsb
xchg
pop
mov
aaa
das
outsl
cld
xchg
pop
rcll
dec
push
push
jge
inc
lods
and
repnz
sub
ss
sbb
incl
lcall
loope
push
iret
mov
mov
xor
inc
dec
ss
sub
add
hlt
fcmovne
xor
scas
sbb
clc
mov
push
in
jp
loopne
aam
or
jl
int3
adc
clc
mov
pop
mov
add
cmp
ljmp
cld
dec
in
leave
inc
nop
xor
adc
dec
popf
mov
ja
add
xchg
jp
shl
daa
iret
pop
or
pusha
sub
outsb
cmpsl
inc
sub
sbb
and
lahf
pop
mov
inc
pop
add
lahf
cmp
push
sub
push
lcall
inc
jno
pop
or
ret
push
jmp
scas
lcall
xor
pop
xchg
sti
and
fs
and
lret
popf
mov
loope
pop
popa
test
sbb
xor
hlt
shrl
add
mov
in
add
adc
ja
leave
inc
xchg
and
lea
shld
pop
filds
orb
mov
cwtl
dec
fwait
dec
xor
sub
mov
shrb
xchg
push
sub
add
jp
or
push
push
sub
xor
mov
lock
mov
push
pop
cs
fcmovb
ljmp
lds
fisttps
xor
insl
push
ret
mov
mov
or
sbb
adcb
adc
test
daa
mov
movsl
fisubrl
mov
rclb
push
test
rcll
mov
mov
cmp
inc
das
in
sbb
adc
sub
jg
dec
mov
cli
push
cmpsl
mov
into
mov
lahf
and
xchg
sub
cld
pop
lcall
fdivp
loopne
in
push
mov
scas
mov
sub
cli
nop
push
push
aad
or
test
cmp
push
jb
push
mov
add
push
mov
outsb
push
pop
cli
pop
movsb
call
push
fists
mov
xor
clc
cmc
popf
lods
mov
lret
sub
mov
lahf
daa
and
pop
add
insb
pop
inc
and
bound
add
push
push
test
das
sbb
insb
xchg
ds
das
xchg
mov
sub
xchg
insb
sub
push
cmp
jns
test
jne
test
popa
pop
fimull
sub
out
cmp
test
in
push
out
pop
sub
jo
mov
mov
ljmp
cmp
dec
outsb
loop
mov
and
outsb
add
leave
adc
push
fstpt
mov
push
pop
gs
sub
pop
cmpsl
sbb
fmuls
movsb
xor
ret
fnsave
mov
cwtl
loopne
sarl
and
arpl
pop
ffree
pop
mov
fldenv
inc
cmpsl
jae
call
pushf
mov
mov
icebp
jecxz
mov
inc
es
pop
adc
jne
and
jnp
push
jp
fisubrs
outsl
rcll
cmp
pop
push
mov
out
mov
jno
and
mov
arpl
xor
cmp
sti
xorb
add
test
dec
sbb
or
ror
xor
and
arpl
xlat
arpl
hlt
iret
in
in
nop
ljmp
dec
mov
movsl
jnp
cs
pop
push
in
fnstsw
popf
gs
imul
jge
push
lcall
inc
add
je
mov
or
mov
inc
push
or
repz
cs
in
push
sub
mov
sub
mov
push
or
imul
call
outsl
jecxz
dec
add
or
cmp
in
dec
into
pop
xchg
cwtl
sub
mov
cmc
add
sbb
aas
jg
adc
loopne
lods
sbb
jmp
sbb
lock
xchg
sub
aad
int
cwtl
cmp
cvtps2pi
stos
sbb
xor
sbb
ret
xchg
dec
aas
fcmovbe
decl
pop
pop
jge
outsl
das
imulb
cmp
and
adc
cmp
mov
ss
cmp
roll
jl
sub
out
dec
inc
inc
mov
fcompl
fwait
push
jne
cmpl
push
cmovno
rol
mov
push
ljmp
dec
sti
out
xor
xlat
pusha
pushf
stos
bound
inc
and
rorb
or
js
dec
scas
aam
cmc
push
loop
sti
lahf
fnstenv
add
rolb
xlat
jecxz
dec
push
mov
hlt
mov
cmc
data16
push
jecxz
je
pop
xchg
xor
xchg
xor
lcall
push
es
add
dec
mov
int3
add
inc
adc
movsl
dec
push
lds
xchg
ss
jae
nop
cli
mov
sub
jns
call
push
pusha
sub
and
mul
in
iret
dec
ljmp
movsl
shl
pop
xchg
inc
xchg
cmp
or
adc
pushl
enter
lock
sbb
mov
int3
dec
enter
stos
hlt
adc
inc
ds
jge
xchg
je
in
cmc
mov
mov
jl
icebp
push
adc
xorb
add
stos
cmp
loop
and
test
sub
cmp
xchg
mov
dec
mov
mov
aas
test
lcall
cmp
scas
jae
push
lcall
inc
mov
gs
ret
lret
fisubrs
das
and
lods
jge
jb
addr16
pop
mov
clc
push
jae
cli
out
popa
dec
inc
fisubrl
cmp
dec
ja,pn
jg
stos
push
mov
dec
xchg
xlat
xlat
xor
insl
cmp
test
inc
ror
in
cmp
jns
push
ret
mov
mov
pop
ja
test
mov
mov
mov
mov
or
pop
outsl
popa
cli
cmpsb
mov
sub
or
adc
icebp
out
das
ja
jg
xchg
in
cmp
add
cs
pop
arpl
pop
or
add
adc
sbb
mov
push
dec
out
fisubl
sahf
and
jb
jo
xor
imull
xor
sbb
repz
adc
jle
lahf
lcall
in
mov
mov
xchg
repz
test
mov
push
ss
or
negl
out
jg
inc
and
cmp
or
sbb
lahf
icebp
cmp
xlat
ja
je
inc
inc
fs
sbb
push
repz
inc
bound
insl
insl
adc
test
mov
adc
jbe
ljmp
xchg
cld
inc
fdivl
test
rcr
add
and
cwtl
pushl
push
mov
cwtl
cmpsb
bound
mov
lret
outsl
xchg
or
sbb
in
or
lea
pusha
and
or
ljmp
cld
sbb
imul
scas
clc
arpl
inc
cli
mov
jmp
xor
sti
lea
mov
icebp
sub
out
or
lcall
cli
int3
and
movsb
addr16
sarl
stos
mov
sub
outsb
lahf
dec
jae
sub
xor
or
loop
loopne
mov
mov
leave
int
scas
pop
fisttps
mov
inc
mov
fs
xor
cmp
mov
int
sti
scas
rorl
xor
jno
mov
dec
das
or
iret
jecxz
push
jecxz
negl
imul
push
cmp
mov
cwtl
xchg
adc
aas
cmpsb
jo
pop
cmpsb
mov
sahf
lret
popf
mov
or
push
xchg
dec
in
xor
imul
xor
dec
andb
les
fsubl
pop
arpl
ret
test
ds
and
xor
jo
in
add
into
jle
xorb
mov
shrb
shlb
mov
out
andl
pop
push
jle
xchg
jl
pushf
fimuls
push
jbe
scas
ffreep
ja
ja
mov
inc
push
xor
mov
imul
stos
cli
mov
xor
cltd
outsb
jmp
mov
jae
loop
les
xor
dec
pop
mov
fistl
scas
data16
mov
in
sti
fisttps
aam
or
fsubrs
inc
add
jecxz
cld
sarl
cld
push
pop
cmp
xor
mov
fcomi
sbb
leave
lods
incb
pop
pop
add
xor
inc
xchg
mov
ret
add
pop
enter
pusha
inc
loope
inc
mov
cmp
sahf
mov
xchg
cmp
push
mov
addr16
sbb
jmp
or
rorb
pop
pop
mov
and
mov
lret
aaa
fs
and
or
jbe
push
movsl
push
aam
popa
je
add
sbb
mov
cs
dec
push
mov
aam
sbbl
ret
cmpsb
mov
adc
or
das
sarb
aad
mov
daa
or
cmp
enter
es
adc
inc
cwtl
pop
loopne
gs
cmp
adc
xchg
push
push
aad
pop
iret
adc
out
lods
mov
mov
or
inc
int3
jns
and
jne
aam
mov
sti
mov
sahf
ret
or
or
fiadds
xchg
in
xor
push
dec
bswap
cld
cmpsl
dec
sar
loope
pop
xchg
lds
push
inc
xchg
sgdtl
jmp
fld
mov
in
mov
xor
aas
cmp
push
xorl
popa
pop
add
rcl
outsl
loope
sti
rcl
mov
ljmp
and
sub
jnp
inc
in
cmpsb
test
fwait
ret
mov
xchg
sbbl
push
out
mov
shll
or
jle
test
jns
cltd
add
dec
pop
cmc
int
pusha
cli
add
adc
rcr
sub
mov
pusha
popf
inc
jae
jns
rol
and
sbb
cmp
sti
out
push
push
push
cmp
mov
sub
loopne
mov
xchg
mov
inc
stos
dec
stos
aaa
add
out
mov
add
mov
xor
jne
pop
sbb
mov
mov
push
mov
popa
add
push
push
call
dec
enter
imul
and
andb
ss
mov
mov
xchg
sar
mov
or
fwait
jb
cltd
jbe
or
dec
pop
movsl
data16
scas
call
sub
cltd
shrl
ss
mov
mov
decl
jg
jbe
push
sbb
add
movsb
mov
cmp
inc
mov
push
out
jp
pop
and
jne
andl
dec
and
jne
hlt
pop
add
cmc
cmp
lea
nop
dec
jle
sbb
stc
jl
pop
es
mov
scas
push
pop
sbb
mov
data16
sbb
pop
leave
add
in
std
xor
ss
and
loopne
jge
sub
push
jge
push
cmp
inc
gs
dec
push
out
daa
push
jb
cmp
flds
xchg
insb
mov
popa
orb
add
xor
xchg
hlt
jmp
sbb
iret
xchg
pop
mov
jbe
nop
jl
push
xor
imul
popa
xchg
rcrl
cltd
adc
pusha
daa
push
es
pop
in
fsubp
fstpt
mov
mov
mov
loope
cs
ljmp
or
pop
stc
aaa
mov
and
push
mov
jg
cltd
cli
pop
xchg
dec
movb
mov
push
repnz
stos
xor
push
repnz
int3
push
idiv
cmp
test
imul
pop
es
repnz
or
sub
sbb
fs
inc
xor
pusha
add
and
xchg
lds
loopne
adcl
add
enter
or
inc
lret
jl
sbb
mov
dec
test
lret
add
bound
outsl
mov
xor
push
insl
dec
imul
fbstp
xchg
test
inc
inc
inc
and
arpl
shlb
int3
sub
imul
pop
push
mov
push
push
fcmovu
int3
dec
mov
or
pop
add
lods
mov
xchg
cmp
dec
fs
xchg
out
loop
jno
scas
inc
adc
pushf
arpl
fdivl
adcb
and
pushf
sti
mov
inc
xor
pop
and
lods
outsl
loop
push
xchg
lock
push
cli
loop
adc
enter
jge
add
pop
rorl
and
mov
add
out
aaa
and
incb
xchg
sub
add
iret
std
aad
jnp
movsl
ds
mov
mov
dec
lahf
cltd
xchg
enter
adc
inc
pusha
push
adc
and
test
ss
jo
inc
sub
and
flds
subb
int
stos
or
sbbb
cli
sbb
negl
mov
fdivrp
cwtl
es
mov
aam
mov
dec
outsb
sbb
clc
jmp
xor
xor
insl
nop
aas
xlat
movl
out
aas
jecxz
cmpsl
insl
sub
call
push
stos
or
movsl
push
push
ficomps
and
pop
sbb
stc
adc
dec
gs
test
pop
pop
ja
aam
addl
cmp
movsl
outsl
mov
or
popf
sub
les
mov
hlt
push
dec
cmpsb
mov
fs
incl
fisubrs
mov
data16
inc
or
sti
mov
sbb
or
mov
pop
pop
mov
scas
sbb
out
pop
mov
imul
xchg
push
bound
and
fs
je
hlt
gs
sub
xchg
dec
xor
push
shr
dec
mov
push
cwtl
xor
xchg
scas
push
adc
js
pop
out
dec
and
push
cmp
or
mov
mov
lret
in
pop
fdivrl
xor
test
shl
pop
fsubrs
mov
andl
jno
xchg
in
pusha
mov
imul
mov
push
repz
lds
insb
xchg
and
repnz
roll
push
xchg
jne
arpl
jge
ss
inc
push
fptan
mov
in
or
cmp
dec
xchg
stos
fists
ret
pop
rclb
int3
add
pop
insl
fidivs
xor
sbb
mov
in
mov
mov
jae
rclb
push
or
enter
stos
mov
mov
mov
lds
or
xlat
lcall
xchg
daa
or
pop
gs
out
mov
cmpsl
cmp
mov
push
jb
clc
inc
arpl
xlat
mov
pop
jp
xchg
bound
xchg
mov
call
inc
add
test
ja
mov
mov
jmp
pop
adc
push
js
ds
or
inc
loopne
cltd
int
sbb
push
je
mov
xor
and
mov
lret
dec
shl
cmpl
in
rcr
jae
mov
repnz
inc
mov
jbe
inc
fidivs
popa
loop
sbb
fsubs
push
and
insb
inc
mov
call
orl
jns
pop
sbb
scas
inc
setb
inc
pop
in
sarl
int3
movsl
sar
into
xchg
push
mov
out
push
jmp
push
mov
repnz
mov
iret
xlat
addb
jnp
int3
and
dec
loop
ja
sub
mov
cs
test
and
cmpb
mov
into
jo
aaa
adc
cwtl
es
push
das
xor
jns
push
js
outsb
test
mov
push
scas
mov
enter
jp
popa
jnp
test
lcall
arpl
and
mov
unpcklps
icebp
movb
daa
mov
sti
sub
mov
imul
adc
cmp
das
fucomip
fsubr
sub
in
jg
aaa
mov
sub
xlat
jns
outsb
or
test
sti
inc
repz
xchg
in
push
jae
and
bound
xchg
sub
or
adc
sub
or
rorl
lea
cmp
js
ret
outsl
lret
xor
and
nop
out
or
sub
mov
push
cmpsb
leave
or
dec
add
dec
and
pusha
jbe
jmp
inc
xor
mov
or
sub
and
rcrl
mov
cmp
jne
movsl
mov
push
inc
lods
out
jecxz
cld
pop
mov
out
ret
sbb
push
leave
inc
sbb
xor
mov
mov
pop
xchg
pushf
and
icebp
xchg
out
std
pusha
mov
jge
les
mov
inc
fmulp
aad
and
jg
scas
test
je
push
pop
sbb
daa
fs
and
loop
loop
adc
xchg
cli
data16
xor
addr16
xchg
xor
jmp
leave
test
idivl
mov
bound
mov
sub
cltd
mov
jge
cld
sbb
imul
jb
sbb
cmc
jb
popa
movsl
fidivrl
gs
adc
outsb
fimuls
out
jns
sbb
mov
popa
and
arpl
lea
push
inc
xor
jecxz
sub
and
pop
add
shlb
jmp
adc
adc
clc
les
sbb
subl
jl
adc
pop
pop
nop
test
pop
add
aas
or
pop
out
insl
fcoms
repnz
adc
int3
adc
jnp
mov
xlat
xchg
or
repz
es
fnclex
dec
cmp
das
je
inc
push
push
outsl
push
rcrb
pop
stos
mov
lods
inc
mov
int3
push
fcoms
lahf
pop
fbstp
cld
mov
cld
jecxz
sbb
stos
out
in
sub
adc
and
leave
fnstcw
dec
test
aaa
aam
rolb
jle
adc
repnz
out
int
lock
leave
xor
dec
sahf
sub
xchg
mov
clc
push
roll
inc
inc
jl
test
mov
aad
ss
or
sub
mov
adcb
push
pushf
ja
mov
push
sahf
stos
mov
inc
adc
sub
stos
pop
scas
sub
add
idivb
pop
fs
mov
cmp
test
adc
xor
call
or
or
test
sbb
fists
cmpb
xchg
clc
nop
jae
xor
mov
mov
adc
shlb
lahf
add
sbb
cmp
and
or
dec
rclb
add
jo
int
mov
jmp
mov
mov
leave
mov
xchg
out
and
xlat
jl
jne
cmpsl
pmulhw
jl
cmp
test
add
pop
pop
je
ljmp
pop
fsubp
xlat
mov
inc
xchg
out
das
sbb
inc
sar
jne
mov
outsb
dec
or
sti
stos
lret
inc
ss
inc
clc
adc
mov
mov
lcall
xor
lock
call
test
loope
pop
or
dec
mov
cld
popa
dec
mov
movsl
sbb
insb
sbb
enter
jnp
fisubrs
dec
jl
fstl
sarl
sbb
push
jae
movsl
and
stos
movsb
jmp
push
jne
and
xor
insl
adc
mov
imul
pop
and
pop
popf
dec
xchg
stos
jl
xchg
push
nop
xchg
sbbl
in
or
addb
or
inc
inc
jg
xchg
inc
mulb
pushf
or
rcrb
xor
jns
std
leave
push
push
aam
out
scas
or
inc
aaa
xchg
jp
jae
repz
fs
mov
inc
sbbl
lret
jmp
lret
popf
pop
mov
inc
add
dec
mov
pop
inc
mov
cmovge
aam
push
gs
mov
cmp
repnz
stos
xchg
in
scas
adc
in
lret
mov
sbb
and
les
jge
xor
mov
cmp
dec
add
mov
pop
mov
pop
iret
fiadds
popa
or
roll
aaa
call
sub
jp
push
sbb
fsubrl
les
inc
xchg
sub
cmp
jge
in
pop
xchg
faddl
test
pop
sbb
inc
mov
jge
jbe
cwtl
push
xor
pusha
fwait
push
fdivr
test
pop
pusha
ret
fcomp
jb
ret
je
leave
loope
out
mov
push
xchg
push
ficompl
mov
stos
inc
out
mov
push
test
pop
sarl
ds
les
into
loop
or
push
push
add
sbb
mov
out
push
aaa
pop
lods
and
mov
dec
lock
bound
shl
cli
popl
jo
inc
sahf
add
mov
pop
lret
push
cmp
xchg
arpl
add
je
adc
fldl2e
cwtl
mov
lea
mov
test
loop
mov
push
bound
mov
inc
xchg
leave
inc
nop
sti
ds
push
pop
addr16
scas
adc
fistpll
js
mov
adc
cmp
push
pushf
into
es
pushf
dec
imul
xor
pusha
out
loop
add
mov
fsts
push
lret
cli
notl
aaa
shrl
push
adc
lock
out
push
insl
mov
dec
mov
inc
mov
adc
outsb
clc
mov
add
xorb
int
sbb
popf
lods
xchg
mov
fdiv
enter
in
push
and
mov
pop
mov
cltd
movsb
pop
cmp
jl
jae
cmp
sub
imul
add
dec
gs
or
cld
ss
or
inc
xchg
inc
call
push
ret
xchg
lock
push
or
pop
stos
rclb
jae
aas
push
iret
ret
test
cld
sbb
inc
out
xor
adc
cmp
mov
mov
scas
inc
sahf
clc
sbb
sub
je
dec
jmp
roll
cmp
cmp
dec
pop
mov
out
insb
dec
xor
pop
cli
jp
aad
inc
push
fsub
popf
outsl
hlt
cmpsl
test
divb
jbe
stos
adc
fsubr
in
leave
stos
xor
inc
inc
filds
clc
jbe
xor
in
xchg
xchg
dec
push
mov
pop
pop
cmp
sub
mov
jmp
outsb
pop
fistl
jmp
add
mov
mov
or
das
cmp
fsubl
mov
xchg
push
dec
xor
add
mov
imul
lahf
mov
daa
stos
mov
lret
test
pop
mov
jae
mov
test
inc
jb
pop
loop
cwtl
xchg
jns
cmp
pop
sbbb
xchg
fiadds
fbstp
fs
xchg
add
ja,pn
int
call
mov
pop
loope
test
lahf
lods
ret
call
mov
cld
adc
cmp
adc
std
sahf
cwtl
add
out
dec
fstpt
pop
xor
push
jne
scas
jmp
and
or
popa
xor
ja
xchg
push
sub
push
pop
rorl
xchg
push
daa
cld
xor
mov
inc
in
outsb
fs
sbb
xor
pop
xlat
xchg
fsubrp
les
dec
or
mov
imul
add
push
fsubr
testb
cwtl
std
stos
add
stos
test
jle
les
push
fdivl
or
push
adc
bound
jmp
cmp
out
rclb
push
into
inc
mov
and
lds
stos
jbe
mov
ds
lods
shr
inc
mov
mov
add
out
bound
hlt
ret
sub
push
xor
fsubrs
sbb
cs
mov
push
jno
es
mov
xor
in
push
jge
into
addr16
lea
ja
cltd
mov
adc
inc
push
rcl
pop
addr16
cli
loop
jne
imul
xlat
sahf
ficompl
dec
inc
inc
icebp
mov
fs
dec
mov
sbb
in
cmp
mov
es
add
mov
imul
push
mov
and
add
xor
stc
jb
insl
in
addr16
cmp
sbb
sbbb
mov
mov
or
push
pop
sub
xlat
fmulp
ja
movsl
or
sub
outsb
repnz
jae
or
adc
sbbb
loopne
jae
mov
ret
daa
test
jecxz
mov
in
jle
pop
cmp
xor
jo
sbbl
and
push
cwtl
add
les
push
stc
xlat
mov
out
ljmp
push
inc
mov
mov
xchg
xchg
into
jle
test
fndisi(8087
and
and
hlt
and
cwtl
enter
cmp
add
sahf
push
andb
cmp
and
jns
or
out
dec
and
sbb
or
scas
cwtl
ljmp
xchg
dec
mov
mov
shlb
sub
push
lret
scas
lods
sub
adc
rol
add
push
mov
pop
movsl
jbe
push
jp
adc
inc
mov
sub
cmp
loopne
cmpsl
aam
mov
iret
cmpsb
loopne
call
mov
shrb
push
pop
dec
or
ret
mov
int3
fidivs
je
repz
dec
andl
push
xchg
or
mov
cmp
fsubrl
outsb
testl
vpaddd
in
mov
sub
cmp
push
inc
and
ficompl
push
ret
ret
sub
dec
scas
xchg
mov
std
shll
mov
mov
rolb
xor
ficoms
xor
sahf
add
arpl
repnz
push
push
hlt
popf
data16
mov
mov
and
or
movsl
jp
push
fs
pop
ss
push
xchg
push
push
pop
xor
out
jecxz
add
mov
push
stc
sub
mov
mov
pop
psubusw
add
mov
jg
clc
cmp
sahf
jne
sub
adc
cmp
outsb
sti
jmp
dec
and
cmp
mov
jge
divl
sub
or
push
mov
cltd
hlt
out
pop
mov
fimull
in
jno
and
cmp
pushf
cmpsb
dec
pop
ds
xor
pushf
adc
xchg
ret
jnp
cwtl
jnp
aas
sar
lods
inc
ja
icebp
jb
fidivrs
mov
mov
pop
mov
mov
iret
lods
and
mov
or
arpl
xchg
movsl
jge
lods
add
or
das
rclb
movsb
lods
das
mov
aaa
adc
inc
aad
iret
xchg
test
xchg
xchg
cmp
outsb
lcall
or
push
mov
inc
or
call
mov
sbb
mov
daa
mov
iret
divb
ja
or
fwait
inc
jp
add
xor
xor
lret
push
adc
sbb
pop
aas
inc
sub
jp
cmp
inc
jmp
into
lds
stc
fsubs
or
push
das
sarb
repz
imul
aaa
mov
push
mov
shll
jmp
jne
aas
xor
xchg
dec
rclb
jnp
cltd
jo
call
inc
movsl
cmp
fdivrs
cltd
xchg
mov
xchg
mov
movsl
fimuls
jg
subb
ret
insb
enter
rcll
in
movsb
ds
lea
ja
outsl
xchg
cmp
mov
clc
jle
mov
and
or
add
lods
daa
insb
popa
ret
imul
ret
mov
ss
or
pop
xor
or
out
inc
orl
push
or
mov
xor
mov
or
nop
nop
lods
adc
dec
jmp
subl
mov
mov
cli
call
dec
iret
mov
addr16
inc
sahf
ret
and
popa
dec
bound
dec
adc
repz
inc
lcall
jg
add
mov
sbb
dec
mov
jbe
inc
push
or
mov
dec
push
jg
xor
pop
stc
ret
in
pop
cmp
movb
jns
cmc
jge
dec
pop
iret
or
in
stos
gs
roll
add
mov
sub
shlb
jmp
mov
shlb
mov
addr16
cmp
aad
mov
gs
pop
scas
cli
pop
xor
dec
sbb
push
pusha
mov
mov
sbb
dec
adc
adc
jmp
push
dec
icebp
cmpsb
mov
in
push
push
adc
outsl
adc
fidivs
jae
dec
ror
and
in
aam
jbe
inc
cmp
out
in
mov
shrb
and
xchg
std
test
ret
adc
mov
imul
insb
xlat
jmp
sbb
int3
dec
sti
mov
out
adc
push
stos
jge
dec
in
mov
xchg
mul
sub
inc
add
scas
inc
push
and
insl
ret
or
xchg
popa
xchg
mov
test
dec
aad
cmp
adc
in
decl
or
rcrb
inc
pop
jbe
test
mov
shll
pop
lods
ret
dec
xor
dec
push
imul
cmpsl
pop
js
jle
sub
push
repz
mov
and
out
mov
scas
push
stc
loopne
loop
dec
insb
lcall
pop
cmp
aam
and
lock
pop
and
mov
mov
mov
in
movsl
cmpl
mov
xlat
dec
push
sbb
pop
xor
and
jmp
pushf
jl
out
jg
or
bound
jns
outsl
sti
adc
xor
cld
add
jmp
fiadds
cmpsl
loopne
fistl
mov
lods
push
jo
fmull
mov
sbb
incl
testb
adc
push
jp
or
xor
test
xchg
psubusw
enter
cmp
call
jns
cwtl
mov
adc
cmp
fsubrs
push
stos
into
mov
and
inc
xor
mov
push
mov
movb
jecxz
pop
clc
xchg
adc
repnz
popa
aad
adc
dec
gs
addb
mov
clc
mov
leave
add
mov
dec
dec
and
popf
imul
and
xchg
sti
mov
adc
cmc
jle
jb
cs
js
mov
fwait
xchg
push
sub
mov
sbb
mov
add
inc
gs
sbb
jmp
ds
shll
repnz
rcll
aam
xchg
sub
cmp
cmp
out
xchg
push
mov
push
xchg
fldcw
ljmp
mov
imull
adc
int
repnz
jns
inc
sarl
lcall
xor
jle
outsl
adc
jae
mov
pop
pop
std
and
mov
mov
sub
aad
loope
loope
rorl
cld
movsl
daa
shl
sbb
ss
aad
in
ret
ljmp
lcall
cmpsl
mov
pop
mov
adc
jbe
cmovs
xchg
pusha
dec
fstps
mov
pop
nop
addr16
jo
out
insb
cmc
jae
mov
pop
mov
loop
mov
jmp
sub
sub
sub
sbb
xchg
neg
sub
inc
xor
imul
insb
das
cmp
les
imul
xchg
aaa
icebp
shll
mov
dec
test
push
mov
push
push
cli
shll
fnsave
sbb
add
jp
mov
add
push
push
dec
mov
scas
ds
and
pushl
lods
test
sub
movsl
push
sbb
sbb
stos
rolb
gs
cld
and
sbb
ja
inc
inc
or
jp
movsb
lcall
xor
stc
aad
ljmp
pusha
jle
mov
in
xor
rol
mov
orl
or
push
jne
adc
mov
push
mov
test
rolb
rclb
insl
lds
xor
jnp
lea
outsl
sub
or
inc
dec
into
add
dec
inc
sti
adc
pop
or
inc
aam
mov
cmp
sahf
pop
jl
adc
lds
adc
xchg
ja
sbb
add
jnp
mov
dec
mov
icebp
mov
xor
pop
repnz
ret
push
sbb
lahf
test
es
and
lcall
mov
mov
aaa
loopne
mov
jp
std
nop
sub
mov
cmpsb
mov
ficompl
jmp
jge
addr16
push
or
and
pushf
mov
inc
cld
sub
daa
cwtl
inc
xor
dec
ljmp
out
ss
or
sub
push
sbb
test
cltd
stos
ret
mov
mov
mov
and
xchg
out
mov
mov
std
dec
lds
sub
mov
sbb
mov
fwait
loopne
sbb
outsb
decl
cltd
jbe
adc
mov
ljmp
or
jne
scas
cmp
lret
adc
leave
mov
xchg
push
inc
adc
es
inc
and
lcall
xor
or
pop
sbb
sub
out
mov
arpl
push
mov
and
add
mov
mov
jl
mov
mov
mov
out
pushf
mov
sbb
mov
dec
cld
movsb
js
in
sub
xchg
sub
sub
loope
cli
mov
jg
loope
fs
cmpb
pop
jecxz
xchg
mov
cmpsb
or
xchg
mov
stos
pop
mov
push
pop
push
and
in
inc
lds
fisttpl
insb
jecxz
cmp
push
mov
mov
cmp
xchg
cs
mov
xor
mov
addr16
cmp
add
movsl
jmp
in
inc
iret
adc
jecxz
fidivl
loop
or
dec
call
inc
dec
cli
daa
push
popf
inc
fsubrl
inc
ljmp
push
inc
cmpsb
dec
xor
xor
cmc
icebp
das
fs
push
push
push
leave
or
push
pop
adcb
cmp
jmp
push
xor
xchg
rcrb
lods
push
mov
sarb
sub
nop
call
cmp
int
dec
es
fisubl
push
cmc
add
sub
ss
das
jecxz
mov
add
add
jle
das
mov
cmp
add
sahf
sbb
push
outsl
xchg
mov
in
lret
pop
dec
mov
xchg
in
dec
stc
imul
jp
jne
ret
xchg
test
push
jle
mov
in
mov
mov
mulb
rorl
out
lock
aas
dec
fcmove
or
or
ret
push
push
andl
jp
or
push
or
xchg
sbb
fidivrs
in
mov
pop
add
push
pop
ss
ljmp
rorb
pop
andb
mov
dec
lods
add
adc
jns
pop
jne
shrb
pusha
pop
fimuls
mov
mov
cmp
sbb
fmulp
mov
jge
pop
imul
nop
or
jl
mov
cs
mov
lret
xchg
sbb
inc
sbb
bswap
iret
inc
loopne
and
pop
push
cltd
sbb
fildl
jo
jecxz
mov
js
into
mov
lods
rcr
adc
xchg
pop
mov
loope
fs
dec
push
mov
xor
imul
mov
inc
cli
sti
or
test
pop
mov
dec
hlt
dec
sub
fsubrs
mov
cmpsl
add
mov
loop,pt
inc
push
into
sub
fnstcw
cmp
jl
inc
scas
or
and
xchg
sbb
and
adcl
jmp
lret
scas
cmpsb
fisubs
and
mul
push
idiv
mov
and
sbb
insl
sahf
gs
mov
je
xor
lock
bound
dec
xor
movsl
and
inc
cmp
dec
outsl
lret
push
adc
scas
ss
arpl
les
int
mov
dec
mov
clc
push
test
jbe
rorl
xor
inc
out
nop
adc
sub
jle
in
fwait
pop
leave
jl
rcl
or
dec
lea
xchg
mov
sbb
pop
inc
mull
addr16
dec
pusha
mov
ljmp
inc
jmp
mov
and
jmp
in
out
lock
mov
in
sub
xchg
testl
add
nop
push
push
mov
mov
cwtl
jle
mul
repnz
shll
imul
cld
adc
mov
addb
pop
pusha
sub
dec
xor
lods
push
orb
push
inc
xor
mov
mov
sub
ficoms
dec
loope
arpl
inc
cli
and
inc
add
mov
pop
xor
mov
xchg
into
lock
jae
out
pushf
jp
nop
fwait
aam
aaa
leave
shlb
xchg
mov
push
int3
out
mov
sub
rol
dec
adc
mov
sub
aad
dec
xchg
shlb
leave
int
or
sbb
jnp
add
call
mov
dec
jecxz
fcmovu
push
ja
push
or
subl
gs
xor
ds
add
test
dec
mov
add
or
or
mov
shll
sbb
repnz
xor
push
sbb
ds
lret
pushf
push
dec
mov
inc
stos
dec
pop
jo
ror
dec
add
xor
lahf
inc
mov
jns
fucomp
cmp
lods
xchg
sbb
rcll
les
vpmaxsq
or
test
cmp
or
xlat
push
scas
and
aaa
adc
repz
mov
call
sub
popl
repz
fsubrl
jb
stc
or
stos
jno
test
lods
xor
add
rcr
add
mov
pop
insl
cmc
fwait
imul
mov
sbb
inc
jo
xor
push
es
cmpsl
loopne
pop
and
mov
pop
xchg
loopne
mulb
aam
lcall
gs
pop
inc
mov
out
push
dec
bound
mov
or
adc
jp
jmp
pop
and
adc
jmp
in
inc
fcmovu
adcl
push
in
cmp
dec
mov
cmc
ret
xchg
sbb
daa
out
xchg
orl
jle
nop
sub
push
ret
dec
mov
iret
popf
lods
in
mov
shll
sar
imul
stos
xchg
inc
loope
xchg
loop
addr16
imul
pusha
or
inc
adc
inc
imul
frstor
push
insb
aaa
jne
cmp
mov
ja
mov
icebp
cmc
jnp
xchg
mov
sbb
mov
aad
cli
xchg
xor
xchg
mov
mov
mov
dec
add
xchg
fs
loopne
inc
testb
push
xor
imul
sbbl
push
xor
jl
xchg
and
shrl
enter
lcall
push
pop
test
mov
test
push
andb
enter
push
nop
inc
inc
imul
insb
je
out
lahf
add
mov
int
push
shrl
sub
je
sbb
addr16
dec
sub
jle
sub
pop
addr16
mov
mov
out
pusha
stos
jg
adc
addr16
jp
rcl
push
call
mov
mov
dec
jl
aaa
clc
or
mov
cmp
ja
jae
inc
jp
jb
jbe
xchg
cld
bound
out
icebp
dec
adc
in
dec
cmp
fwait
imul
lahf
out
dec
mov
cmpsb
cs
cmp
push
lahf
inc
ss
inc
mov
fucomi
cmp
push
inc
lcall
das
imul
pop
rcrl
push
push
push
xchg
popf
ficompl
ss
push
repnz
shll
mov
ret
fimull
xor
push
sbb
mov
add
sub
jl
xlat
push
pop
jmp
dec
lods
ljmp
xor
xor
or
lock
imul
adc
pop
mov
mov
mov
popa
push
adcb
cmp
cli
or
int
std
pop
pop
mov
cltd
jnp
pop
pusha
adc
mov
int3
pop
push
movsl
or
push
or
loop
dec
xchg
mov
jl
pop
sti
lods
fdivs
ret
inc
sahf
pop
sub
in
pushf
or
xchg
je
ss
jl
mov
or
sub
fidivrs
push
mov
xor
mov
gs
mov
fmulp
sub
xor
add
sub
test
push
lock
gs
pop
adc
or
fisttpll
dec
cmp
add
xorb
jge
je
jns
cmp
test
inc
std
sub
mov
movsl
test
out
fistl
pop
test
push
jge
cld
jne
addb
fisubl
add
into
inc
dec
insl
fisttpll
cli
xchg
jg
dec
pop
cwtl
add
inc
cmp
add
stos
std
ret
sahf
xchg
loope
mov
jmp
fisttps
cld
test
jbe
shll
push
inc
xchg
jg
cli
jle
leave
pushf
pushf
adc
cmp
lret
sub
jbe
push
test
aam
addb
out
es
sahf
jnp
jecxz
lea
cmp
loopne
push
jl
inc
mov
mov
ret
pop
mov
lahf
sub
aam
bound
sarl
movsb
push
jno
pop
or
mov
push
push
cmovb
add
mov
jge
or
ds
jo
inc
adc
std
dec
dec
fmul
and
addr16
inc
adc
in
cwtl
mov
call
dec
mov
ficoms
pop
data16
pushf
dec
insb
fbstp
jmp
sti
das
and
adc
fnstcw
mov
xor
mov
ljmp
and
gs
or
add
movsl
mov
inc
jno
cmpsb
pop
jge
jmp
lock
add
cltd
ljmp
repnz
mov
mov
ljmp
and
in
or
shll
xor
rdmsr
and
hlt
outsl
xor
stos
in
mov
or
or
xor
mov
cmpsb
sbb
cmp
std
dec
and
lods
xchg
cltd
in
pop
xor
lds
int
das
mov
mov
jno
add
xchg
in
add
or
adc
adcl
push
sbb
cld
mov
push
mov
add
jge
test
lods
adc
arpl
or
inc
sub
cld
xor
dec
lea
fwait
mov
mov
dec
inc
sbb
cmp
or
cmp
add
vmxoff
int3
mov
jns
outsl
pushf
sub
lret
push
mov
fcoml
xchg
pop
in
jmp
repnz
rcr
jb
loope
jmp
push
dec
fwait
or
out
aaa
cmpl
pop
mov
xor
xor
jno
mov
inc
dec
inc
pusha
lcall
mov
int
js
mov
mov
loop
in
pop
sti
das
sahf
sbb
lds
adc
mov
add
sahf
or
sbb
or
jbe
lret
movsb
cwtl
mov
push
sahf
push
cmp
inc
ficoml
loop
pop
xor
cmp
mov
in
xchg
mov
sub
popf
call
int
loope
cmc
dec
cmpb
adc
adc
pushl
mov
push
cmpsb
inc
cltd
xchg
movsb
out
push
mov
adc
repnz
aaa
sub
loope
stc
xorb
push
jl
mov
rorl
mov
inc
aad
sub
add
jns
ffreep
call
add
cmp
fistps
add
nop
mov
out
aas
xchg
xor
inc
ds
jo
push
mov
mov
fimuls
arpl
jge
loopne
fdivs
adc
push
int
dec
loop
cli
je
pop
fbstp
add
pop
cmc
andb
in
xor
dec
push
in
shll
das
adc
xor
aaa
pop
cmp
xor
aaa
xchg
outsl
enter
aad
stos
jo
add
push
inc
aas
inc
adc
ss
pop
ret
stos
imul
cmp
ljmp
das
jecxz
je,pt
cli
jmp
popl
cmovge
adc
inc
setae
inc
mov
rorb
pop
dec
jbe
push
sbb
push
inc
lock
addl
mov
popa
jl
das
repz
popl
and
sub
pop
push
clc
pop
cltd
adc
fdivrl
enter
cmc
and
mov
loope
jge
mov
loope
mov
aad
movsb
subl
pusha
cs
lret
push
adcl
nop
neg
mov
sti
or
mov
cs
dec
jno
loope
jns
mov
push
ljmp
jp
xchg
inc
xor
outsb
lcall
shrl
test
iret
test
or
mov
push
in
ss
mulb
cmp
adc
dec
xor
rcll
movb
ret
arpl
push
mov
add
mov
mov
lock
pop
jl
into
and
in
mov
lds
repz
into
jp
jno
shll
xchg
mov
sarl
daa
out
or
nop
or
subl
jo
jne
adcb
cmpsl
jge
xchg
add
subb
dec
fwait
xor
icebp
cmpsl
cs
and
hlt
fisubrs
jno
push
jns
sub
decb
neg
push
cs
daa
cld
fisttps
movsl
es
out
jne
icebp
xchg
test
int3
push
in
mov
jne
inc
sarl
pusha
aad
cmp
subl
jns
rdpmc
lods
inc
jne
pop
pop
sub
xor
mov
dec
das
or
sub
mov
fidivl
out
test
or
push
mov
add
movsb
cld
ds
mov
add
mov
jmp
lea
arpl
ss
xor
and
sti
sbbb
mov
cmp
arpl
cmp
data16
lcall
popa
daa
aas
shlb
popa
sbb
jb
or
inc
jne
mov
or
and
push
xor
xchg
xchg
idivl
xchg
cmp
jnp
mov
clc
fcom
cmp
pop
xor
loopne
sub
bound
push
fnstcw
adc
cmp
daa
es
test
stos
jmp
pop
xor
data16
or
in
sbb
jns
in
jg
sbb
inc
adc
out
or
pop
xchg
enterw
xor
hlt
adc
aad
push
inc
int
hlt
leave
cmp
xor
push
ja
push
stos
push
sahf
mov
lock
ficoml
ss
lea
jno
sub
lcall
filds
dec
fiadds
mov
push
fidivs
mov
test
aad
fstpt
popa
dec
jl
pusha
test
popa
mov
cmp
xchg
jge
lds
sub
dec
inc
repz
jmp
loope
sub
test
mov
inc
add
js
cld
fidivrs
or
js
dec
pop
inc
cmp
inc
mov
cmp
inc
jmp
xor
xchg
cs
xorb
and
out
cs
pop
dec
nop
push
flds
jo
in
push
cltd
and
dec
addb
and
sbbl
dec
dec
mov
lock
pushf
and
lcall
jmp
data16
arpl
sub
add
cmpsb
mov
shlb
roll
cltd
cltd
jp
ret
lods
popa
mov
cmpsb
jnp
inc
aas
sbb
lcall
lret
lods
test
mov
out
stos
sbb
push
cli
adc
mov
xchg
pop
xchg
cwtl
cmp
mov
add
adc
not
mov
and
jnp
xchg
mov
mov
fsubrs
inc
aad
fsubrl
mov
mov
push
lds
mov
cmovl
in
adc
mov
les
int
xlat
or
fisubs
cmp
push
in
pop
addr16
push
lods
dec
mov
int
mov
movsl
into
pop
sub
sub
push
inc
fbstp
push
mov
or
arpl
outsl
xor
lahf
jns
popf
cmpsl
neg
arpl
sbb
adc
scas
repz
cmp
popa
negb
and
inc
test
xor
mov
mov
dec
or
dec
mov
mov
and
cmp
test
add
es
mov
mov
out
lock
lahf
inc
add
and
cmp
cld
mov
xchg
pop
icebp
loopne
movsb
jnp
rol
movsl
imul
xor
pop
push
xchg
lock
cld
aas
dec
mov
jo
adcl
rclb
cmc
or
xchg
xorl
rcl
sbbb
int3
rclb
mov
das
and
fcmovnbe
mov
mov
ja
xor
sub
sti
out
dec
enter
pop
call
repz
in
jmp
out
or
icebp
arpl
jnp
inc
jb
and
push
stos
int3
jmp
hlt
loopne
cmp
je
mov
loope
test
out
sub
loop
out
mov
aam
shrl
dec
je
repnz
clc
shlb
std
and
movsl
loopne
leave
mov
in
das
ret
cs
cltd
aam
mov
jno
xlat
xor
mov
stc
lahf
or
in
mov
pushf
pushf
mov
dec
mov
sub
cli
mov
mov
dec
lret
jb
jns
cmp
dec
cmp
mov
pop
in
xchg
scas
push
repnz
loope
in
shll
loop
mov
fcompl
adc
xlat
adcl
jbe
leave
mov
cmp
xchg
call
add
inc
rolb
lods
ljmp
divb
lds
ret
jno
fucomip
inc
push
mov
jg
out
pop
addb
xorl
rclb
xchg
lock
jge
adc
mov
jge
test
lret
sbbl
pushf
push
ljmp
mov
lock
push
lahf
cld
mov
sbb
xchg
push
sbb
ror
mov
addl
lods
loop
inc
push
xor
dec
and
cmp
dec
hlt
and
cmpsl
jae
dec
jns
lcall
push
jo
push
sub
bound
add
jno
mov
in
push
rcrl
int3
cmpb
loop
cmp
sub
stc
push
sahf
and
xor
mov
std
jae
sbb
cmp
inc
jl
inc
adc
mov
test
imul
or
jecxz
push
aad
mov
pop
dec
sbb
das
push
pop
orb
pusha
cli
clc
mov
dec
cli
rcl
mov
pop
sub
loop
imul
jo
mov
les
fs
out
in
hlt
data16
jb
popa
sbb
sub
xorb
ljmp
stos
in
xchg
shl
mov
mov
xor
adc
mov
clc
popf
sub
or
lock
xor
or
lahf
js
idivl
push
cltd
clc
fdivs
jno
ret
es
jmp
pop
xor
inc
cmp
lock
gs
inc
jge
mov
push
pusha
adc
sbbb
test
push
repz
and
popa
inc
xchg
jecxz
stc
xchg
xchg
mov
jnp
dec
xchg
mov
mov
lahf
mov
lods
orb
sub
inc
xor
call
ljmp
mov
xchg
pusha
fwait
mov
scas
pop
lock
xor
xor
cld
inc
dec
in
not
xor
and
aas
xor
and
mov
pop
sub
sub
leave
ljmp
dec
loop
dec
xchg
xor
mov
dec
scas
xchg
and
pop
loop
lds
jmp
mov
in
jl
sub
pop
sahf
fwait
add
insb
mov
arpl
div
add
or
and
mov
inc
icebp
fidivrl
xor
pushf
insl
rorb
outsl
xchg
or
mov
inc
adc
mov
in
addr16
adc
std
adc
dec
bound
xor
sbb
adc
test
mov
mov
arpl
js
jnp
dec
call
daa
and
iret
divb
ljmp
dec
sub
xlat
adc
sbb
hlt
out
cwtl
lods
call
test
dec
cmpsb
xchg
stos
jl
rcr
push
and
pop
orb
lret
ljmp
and
mov
sbb
out
arpl
pushf
clc
movsl
js
lcall
push
or
dec
das
stos
lods
loope
pop
sbb
sub
shl
ret
sbb
lock
aam
xchg
push
lahf
rclb
and
dec
add
imul
mov
int3
ret
mov
in
xchg
inc
aam
mov
int
jge
mov
loopne
test
shlb
ja
mov
mov
test
fdivrs
sbb
dec
mov
popf
xchg
imul
xor
lret
push
int3
insl
arpl
popf
push
insb
adc
mov
fucomi
add
xor
add
in
or
pop
add
jl
push
addl
out
xlat
or
add
push
mov
cmp
adc
mov
addr16
les
in
shll
cmp
xchg
dec
mov
js
aaa
fwait
dec
jmp
adc
push
xor
mov
ret
hlt
es
stos
inc
test
xor
ret
cmp
push
xchg
or
sub
neg
or
addr16
outsl
cmp
into
mov
int
loop
jne
push
xor
pop
roll
mov
mov
xor
in
pusha
or
sbb
pop
cmp
ficomps
in
iret
in
icebp
push
rcr
shrl
sbb
call
jle
test
sub
das
rclb
pop
fucomp
add
mov
lcall
sbb
popa
sub
pop
fs
mov
testb
in
test
std
push
dec
lods
mov
in
adc
pop
test
out
xor
jne
sub
pop
cmc
xor
dec
xchg
lret
dec
aas
loopne
dec
hlt
push
arpl
adc
outsl
jbe
dec
call
jp
in
add
sbb
lret
mov
or
and
ficoms
rcl
adc
insl
aaa
scas
loop
push
ljmp
jno
in
scas
scas
sti
outsl
jmp
adc
imul
iret
out
sub
js
sub
and
pushf
insl
sbb
cmp
das
xor
push
stos
sub
pop
push
mov
pop
negl
outsb
or
mov
lods
pop
sbb
adc
inc
and
or
pop
shl
shll
int
jae
jno
nop
jl
sub
xchg
movsl
into
or
repz
icebp
pop
nop
sub
iret
hlt
mov
jno
lods
mov
mov
xorb
rorb
cs
call
xor
fistps
stos
icebp
int
pop
xor
sbb
jae
inc
adc
pop
mov
or
les
add
int
pop
sbb
movsl
dec
lods
ljmp
stos
in
xor
and
mov
shlb
add
repnz
pop
jle
pop
dec
pop
push
scas
call
mov
and
add
cmp
fistps
push
scas
arpl
insl
sbb
imul
insl
mov
ret
ss
jp
adc
pop
sbbl
lret
sub
mov
mov
add
je
es
mov
pop
adc
pushf
inc
adc
popf
int
js
es
sub
es
xchg
test
sbb
fwait
jne
add
mov
ret
or
push
add
hlt
xchg
sahf
push
push
cmpb
gs
inc
pop
or
cmp
test
imul
push
mov
cmp
dec
aaa
mov
sub
sub
insl
ds
push
sub
test
mov
cli
push
fwait
icebp
push
hlt
lret
in
pushf
or
and
push
fcomps
mov
xchg
pusha
loope
jl
mov
and
cltd
rcrl
adc
jns
push
jp
mov
leave
xchg
cli
lds
sub
int
pop
mov
out
leave
out
and
aas
mov
es
int
sub
js
movb
adc
sub
sbb
fmuls
in
mov
inc
xchg
enter
sub
movsb
icebp
dec
or
outsl
lods
adc
cli
mov
repnz
mov
ret
pop
jne
lcall
fdivrl
sahf
xlat
fdivrp
test
repz
repz
push
sahf
or
pushf
scas
xchg
cmpsl
into
das
dec
push
dec
aas
inc
cmp
xor
scas
enter
mov
les
adc
mov
std
mov
nop
subb
mov
in
inc
add
push
daa
jecxz
ljmp
test
sbb
pop
fadds
hlt
lods
push
pop
les
pop
adc
iret
push
enter
movsl
lds
dec
fdivr
adc
jge
verw
xor
xchg
test
ds
addr16
pop
mov
or
push
sbbl
stos
mov
lret
cld
jno
push
push
lret
and
mov
pop
lahf
and
arpl
sub
sbb
inc
int3
in
push
int3
stc
add
gs
das
jo
ja
popf
xchg
int3
xchg
sub
lahf
movsl
insb
gs
imul
jle
xchg
mov
notb
pop
dec
jg
out
push
pop
adc
shl
pop
aas
loopne
jo
dec
sbb
sbb
inc
sub
mov
jae
push
addl
and
iret
and
pop
sub
ficoms
mov
adc
jl
pop
or
mov
sbb
hlt
mov
dec
sub
mov
mov
mov
notl
out
loopne
sub
and
pop
add
mov
add
pop
mov
add
push
cmpsb
out
mov
sbb
fidivs
dec
mov
lea
push
iret
out
dec
push
pop
daa
insb
jnp
pop
cmp
and
ror
test
cli
hlt
js
push
aad
xor
ljmp
in
dec
xlat
nop
mov
dec
pop
leave
rcll
xchg
xor
ljmp
dec
pop
mov
sub
cmp
jnp
adc
int3
dec
arpl
xor
jo
movsb
fidivrl
inc
pushf
pop
jb
nop
push
outsb
out
popf
aas
lcall
idivb
jge
and
insl
adc
sbb
std
sbb
lods
test
clc
xorl
sti
sbb
inc
and
ret
add
and
fldl2t
push
jl
xchg
and
dec
dec
movsl
ja
sbb
popa
int3
adc
mov
stos
xchg
mov
dec
or
xchg
push
jbe
sti
pop
cltd
jmp
cmpl
lods
movsl
mov
mov
inc
and
push
or
cld
mov
fildl
jo
popa
arpl
or
fwait
pusha
and
aam
mov
inc
into
sbb
icebp
pop
ret
jo
shlb
fcomps
insb
jg
pop
lods
jb
adc
inc
call
jle
test
fld
push
add
mov
xor
and
loope
ja
push
ret
leave
sahf
or
mov
push
xor
mov
daa
add
sti
mov
pop
or
mov
repnz
pop
cmp
sti
outsb
mov
jnp
outsl
inc
int3
or
dec
jg
mov
popf
insb
push
cmovno
xchg
mov
dec
out
inc
xor
adcl
addb
mov
ja
inc
outsl
dec
ljmp
lds
rolb
subl
push
insb
into
lods
stos
rclb
std
inc
frstor
mov
sbb
push
jmp
arpl
inc
jb
dec
pop
mov
cli
inc
dec
cmpsl
int3
mov
sub
lods
es
push
or
insl
repnz
fs
stc
jo
mov
add
lret
cmp
xor
add
std
lahf
jp
repnz
adc
mull
jmp
mov
fs
pop
fimull
hlt
bound
dec
stc
enter
jae
imul
cmpsb
loop
jns
adc
inc
push
insl
repz
imul
xor
fidivrs
inc
stos
cmp
push
pop
jb
push
sbb
fidivrs
ret
jo
rcr
and
mov
inc
dec
out
mov
lods
aad
xchg
gs
pop
jns
repnz
adc
scas
xchg
inc
repz
jge
gs
mov
sub
sbb
add
enter
cmp
cmc
mov
pusha
lcall
or
in
jmp
add
xor
gs
dec
rclb
insl
fs
lret
xor
xchg
mov
cli
cltd
mov
clc
push
cmp
stos
subl
out
imul
jle
gs
push
jbe
xchg
jmp
pop
stc
clc
dec
pop
mov
jbe
ja
int
jecxz
cs
push
insl
mov
push
mov
inc
inc
cltd
sub
pop
fwait
cld
inc
mov
aaa
and
cmp
faddl
xchg
stos
and
sbb
xor
adc
lock
ret
test
fwait
pop
rcrb
aam
test
adc
mull
fisubrl
aaa
aad
cmp
sbb
imul
mov
sbb
cmc
xor
pusha
cltd
andl
hlt
fsubrp
dec
adc
test
jne
outsb
mov
test
notb
stos
insb
sahf
gs
mov
push
push
sbb
mov
nop
fs
lods
fxtract
leave
fstpt
jge,pt
addr16
lahf
inc
into
push
mov
jg
rcr
repnz
in
mov
mov
add
lcall
in
mov
ds
cs
in
fwait
mov
repz
decl
out
push
cmp
sub
push
xchg
pop
loopne
rcll
cmpsb
adc
xor
cmc
ficompl
bound
repnz
sub
sti
clc
fldcw
ficoml
xor
mov
cli
mov
xchg
pop
or
ss
aam
add
pushf
cmp
test
push
pop
xchg
int
mov
inc
jo
popa
arpl
mov
jp
xorb
dec
or
out
jb
js
pop
clc
je
mov
push
sub
sti
fcompl
ljmp
fsubrs
mov
fcmovu
mov
push
pop
mov
popa
xchg
call
adc
imul
mov
enter
cltd
add
jg
decb
incl
inc
mov
inc
push
imul
fnstcw
fcompl
icebp
or
es
jp
adc
pop
mov
sub
inc
popa
nop
lea
fldl
xlat
xchg
pop
out
and
mov
lea
ror
xor
sbb
pop
mov
int
mov
insl
cmp
gs
fldcw
or
sub
in
ffreep
xchg
dec
xorb
or
pop
lahf
mov
push
or
push
and
mov
not
aaa
sbb
mov
pop
loope
arpl
aas
sarb
add
dec
int
dec
call
inc
popf
adc
dec
adc
ret
pop
movsl
aad
nop/reserved
cmp
jmp
test
mov
pop
outsb
dec
insb
mov
xor
mov
out
rcl
imul
xor
mov
add
and
adc
and
lret
ds
inc
adc
mov
xorl
jg
nop
inc
add
or
lcall
jno
push
mov
sbb
xchg
sti
push
paddsb
push
mov
fcmovnb
add
fs
std
stc
xchg
popf
mov
lret
xor
or
sub
pusha
or
xor
in
outsl
fldt
in
mov
je
call
out
and
xchg
dec
xorl
xor
fs
outsl
out
lods
xchg
addb
sub
cmpsl
mov
andl
mov
pop
int
leave
xorb
and
add
push
adc
scas
aaa
loope
pop
dec
xchg
ret
and
les
pop
test
scas
and
enter
ds
jmp
inc
ljmp
loopne
fistps
lcall
std
imul
data16
sbb
cmp
mov
mov
inc
cmp
int3
stc
mov
loop
mov
cs
fmull
movlhps
ja
cmp
xor
lock
inc
push
adc
xor
test
mov
pusha
cmpsb
push
cmp
cmp
inc
and
mov
mov
push
pop
les
cmp
adc
xchg
xor
filds
sub
push
push
scas
clc
xchg
lahf
sub
mov
data16
pop
xor
movsl
ret
inc
dec
mov
or
mov
xchg
push
ret
cmp
call
out
movsl
insb
cmp
or
data16
jns
mov
ror
push
mov
or
adc
in
test
adc
dec
sahf
push
dec
or
mov
xlat
dec
push
insl
cmp
inc
pop
lahf
shrl
lcall
fdivrl
or
jnp
jbe
push
pop
outsb
xlat
aaa
pop
sbb
jecxz
or
lods
sbb
lods
sbb
fists
in
jl
loope
or
jae
xchg
outsb
stos
movsl
push
ds
mov
jp
pop
adc
sbb
mov
jg
lret
inc
aam
jmp
mul
cltd
stos
out
cli
xchg
mov
in
aaa
out
cmp
test
loope
dec
gs
push
mov
outsl
in
inc
ja
cmpsl
inc
cli
push
xor
sub
or
push
push
adc
insl
rclb
and
dec
fs
pop
cmp
sbb
adc
xchg
mov
pop
jmp
xor
in
inc
fnstcw
enter
ret
fs
mov
and
lret
dec
adc
addr16
push
inc
cmp
xchg
movsl
xchg
lock
les
mov
sbb
push
inc
loopne
mov
xchg
mov
pusha
sub
aas
mov
sub
mov
or
or
jg
sub
mov
inc
stos
fstp
sub
pop
loope
dec
fcomps
mov
hlt
repz
loop
rcll
jae
push
pop
add
hlt
push
ljmp
mov
add
pop
inc
cmpsl
mov
icebp
sbb
in
sbb
and
sti
sbb
sbb
push
xchg
sbb
ret
repnz
int
cmp
and
push
or
jo
cltd
xor
adc
xlat
jp
data16
aas
mov
mov
repz
adc
popl
mov
loop
in
mov
fstp
dec
adc
aam
and
cmp
les
ljmp
mov
add
jb
lods
jle
je
adc
push
test
scas
push
cmp
fwait
push
cmp
push
push
jmp
inc
test
cmp
mov
addb
addb
rolb
push
in
lret
test
cmp
ret
xchg
out
mov
add
mov
movsl
repz
outsl
movsb
dec
clc
les
in
or
push
xchg
fcomp
pop
inc
mov
dec
mov
out
sub
mov
jle
dec
dec
arpl
ja
xchg
int
jp
stc
int3
inc
jno
stc
mov
xor
jmp
jmp
xchg
inc
insb
repz
cld
fwait
sarl
jmp
sarb
xor
pushf
popf
and
add
jge
lahf
pop
enter
out
ret
push
scas
mov
popa
add
addl
es
mov
out
sti
rolb
pop
sub
inc
dec
cltd
movsl
ret
pushf
jp
push
cmp
ret
std
mov
ja
out
sub
pop
jg
mov
jl
aaa
ljmp
lock
add
push
in
leave
xchg
pop
int
movb
cmp
push
add
hlt
or
out
mov
push
cmpb
jg
popa
aam
fadd
test
lret
repnz
clc
sbb
sbb
mov
bound
inc
adc
mov
insb
mov
push
test
dec
xchg
aaa
imul
jne
das
jp
gs
loop
cmc
sub
cltd
fwait
add
mov
das
push
addr16
shrl
std
sbb
xor
inc
imul
or
cmpsb
jne
sub
mov
cmp
scas
popa
inc
jmp
inc
push
enter
mov
push
sub
jae
mov
test
and
inc
mov
push
idivl
aaa
hlt
popf
clc
mov
insb
and
xchg
lahf
mov
aam
stos
mov
add
lods
inc
jmp
sbb
lea
test
sbb
push
cmp
dec
xchg
jmp
xchg
test
cmp
test
mov
inc
movsb
stos
loop
xchg
jmp
fisubrl
mov
fidivl
loope
repz
sbb
mov
add
arpl
cld
xor
pop
aas
xchg
outsl
bound
xchg
mov
xchg
shr
cmpsl
inc
sub
mov
xchg
xchg
add
in
sub
push
lock
ret
lds
rorl
mov
push
cwtl
xor
and
dec
fildll
cmp
fdivrs
jmp
sub
pop
fldenv
ja
mov
mov
aaa
and
sub
cmp
iret
jp
mov
ljmp
or
in
je
call
inc
dec
and
push
sbb
mov
ret
inc
mov
dec
repnz
mov
das
xor
jg
fisubrs
mov
sbb
loopw
cmp
ds
test
cmp
jae
sbb
mov
fisttpl
mov
out
adc
xchg
rorb
mov
or
es
mov
jb
mov
cmp
sbb
test
leave
adc
pop
pop
mov
adc
and
clc
mov
and
pop
or
scas
jmp
sub
in
movsl
xchg
pusha
xchg
mov
mov
or
mov
sub
xlat
inc
fwait
jb
pop
xchg
movsl
or
cmpsl
in
loope
push
rolb
popa
rcrl
mov
or
dec
std
loop
push
lret
rclb
inc
jl
out
xchg
orb
bound
arpl
mov
jnp
aam
test
testb
or
subb
cmp
xorl
mov
mov
stc
pop
cld
fadd
cld
xor
lret
xchg
bound
pop
ret
fisubs
mov
mov
sarb
xchg
mov
dec
cmovno
mov
loope
scas
inc
ss
xor
lods
aas
xor
les
sub
shr
pop
popf
cmp
dec
xor
cmp
pcmpgtw
xchg
roll
pop
jle
insl
cmp
pop
cwtl
jl
out
sub
dec
inc
call
std
repz
push
arpl
xchg
pusha
orl
in
cmc
loop
mov
fstl
fdivs
cmp
sbbl
mov
pop
out
iret
push
mov
ja
sti
flds
jg
inc
mov
js
das
mov
ret
sbb
in
outsl
gs
stos
pushf
loop
xor
lock
dec
mov
mov
mov
push
dec
sbb
or
mov
movsb
dec
sub
ss
loop
sbb
inc
lds
inc
sbb
cs
push
fnstsw
mov
popa
jg
out
adc
push
arpl
lds
test
push
sbb
call
xchg
mov
sub
xchg
cmp
mov
out
jbe
cmp
inc
bound
pop
test
out
mov
or
sbb
aam
or
sub
pushf
adc
lds
lock
test
xchg
mov
xor
xchg
cli
xor
xor
cltd
cmp
xor
mov
loopne
xlat
daa
sbb
pop
aas
add
pop
es
push
sbb
xchg
aaa
adc
push
inc
dec
push
filds
push
sub
hlt
ret
jo
sbb
out
pushf
inc
inc
push
lea
movsl
mov
out
adc
mov
mov
fisubs
lcall
pop
movsb
stos
sub
cs
cmp
inc
jl
iret
arpl
pop
fcoms
pop
pop
nop
in
and
outsl
popf
mov
sbbl
nop
fisubrs
push
adc
xchg
jmp
sti
sub
and
imul
mov
mov
dec
mov
push
dec
movsl
scas
jg
popa
push
lods
inc
mov
jo
lock
push
jne
mov
pop
mov
dec
adc
xchg
cld
stc
xchg
jmp
sbb
ljmp
jl
jo
fisubrl
cltd
shll
out
aad
jmp
sarb
push
mov
push
xor
jo
push
bound
test
xrelease
pop
bound
cmp
pop
loop
mov
in
iret
sbb
pop
icebp
cmp
incb
push
add
fistpl
fdivs
pop
or
or
mov
loopne
mov
or
push
jne
js
dec
lret
cmp
jge
mov
scas
dec
lods
mov
popf
fcoms
jg
orl
push
cltd
add
ja
dec
cmpb
into
idiv
imul
arpl
fildl
adc
sbb
jns
stc
xchg
ret
fs
add
in
into
fimull
push
scas
divl
xor
cmp
xchg
sub
sarl
daa
pop
lret
xorl
dec
sbb
pop
mull
sub
addl
cmpsl
mov
fistl
ja
xor
mov
aaa
lods
std
test
mov
push
xlat
setae
ja
fcom
mov
push
or
sar
or
icebp
loopne
mov
or
xchg
enter
inc
push
loop
sub
js
emms
adc
in
ja
cmpsb
rcrb
xchg
push
cmpsl
faddl
ljmp
adc
mov
aas
je
inc
sbbb
xchg
cwtl
pushl
mov
mov
hlt
pmulhuw
fidivs
shrl
roll
push
lcall
ljmp
lret
ds
out
das
psubd
into
inc
cmp
dec
mov
mov
lock
jnp
inc
jl
lahf
add
filds
out
xchg
out
push
sahf
testl
jl
xchg
shl
push
inc
outsb
mov
mov
pop
xchg
jns
jnp
sub
mov
outsl
nop
mov
cli
orl
jo
inc
adc
mov
daa
in
xadd
xlat
lea
mov
rclb
cld
push
out
fs
std
or
clc
movsl
mov
fdiv
push
sbb
mov
mov
aaa
sbb
cmp
fldt
sbb
sbbb
add
push
jnp
mov
ss
dec
mov
inc
fisttps
popa
xor
xchg
xchg
or
mov
int3
add
in
in
lret
mov
fwait
and
sub
adc
loopne
adc
push
adc
movsl
mov
stos
into
fildl
xor
loop
or
add
lock
push
inc
stos
cmc
sub
sub
test
jle
push
in
pop
aaa
sub
stos
mov
std
fistpll
dec
cmp
and
cmp
and
scas
shlb
orb
jg
mov
push
idivb
mov
mov
pop
sub
cli
jae
imul
stc
int3
cmp
sub
mov
mov
fadds
pop
mov
bnd
fcmovnu
xor
sahf
jnp
jg
imul
cld
stc
mov
andl
sub
pop
push
jmp
inc
cmpb
cs
das
adc
divl
push
push
shrl
int
xchg
stos
mov
in
sbb
and
mov
fsubrp
shrb
push
jb
popf
or
ret
adc
aaa
push
out
pop
jno
pop
lret
outsb
add
or
outsl
and
daa
cs
push
imul
ficoml
incl
adc
pop
test
cmp
push
incl
bound
adc
lret
shl
movq
push
lods
loopne
dec
inc
push
mov
dec
cltd
jbe
popa
and
dec
sahf
inc
add
fnstenv
xor
dec
xchg
jo
call
pop
jnp
call
loopne
mov
sti
loope
scas
pop
cmp
cmpsb
std
frstor
insl
int
push
ss
decb
int3
pusha
dec
jno
rcrl
adc
push
sub
xorb
xor
in
insl
sub
outsb
lahf
fmull
lods
xor
mov
js
andl
xor
dec
icebp
cli
in
test
nop
dec
ret
fistl
jle
cmp
test
push
loop
pop
adc
arpl
ret
push
add
popf
nop
push
pushl
sub
sub
or
popa
inc
sub
mov
fisubs
cmp
mov
pop
xor
push
sub
test
lods
push
negl
jb
ja
sti
out
outsl
mov
or
aas
lock
js
imul
dec
cmp
xorb
mov
adc
or
xchg
xchg
sub
mov
push
push
push
push
rorb
fldl
jl
in
sub
push
dec
and
mov
fidivrs
sub
fwait
adc
jle
mov
rcr
addl
lods
mov
dec
jbe
mov
or
outsb
shl
sub
jae
gs
jl
loopne
pop
sarb
insl
aad
cltd
jae
jne
pop
mov
ss
jmp
mov
mov
pop
cmp
ss
sub
inc
or
inc
sbb
fwait
or
xchg
imul
inc
out
fsub
or
jl
mov
or
inc
cmp
mov
lret
inc
xor
mov
or
imul
cmpsl
ret
movb
imul
in
mov
xlat
rcl
and
pop
mov
insb
popa
xchg
test
addr16
jmp
sbb
jo
and
mov
cs
popf
and
sbb
cmp
jne
in
adc
and
out
adc
hlt
icebp
and
pop
data16
sub
out
sub
push
arpl
adc
inc
add
mov
hlt
cltd
mov
je
dec
inc
sub
std
push
mov
out
je
aaa
xor
pusha
jne
imul
mov
xchg
or
pop
fwait
jns
cmp
inc
in
mov
movd
sbb
and
scas
stos
dec
stos
jne
push
aaa
ret
push
adc
jmp
xchg
scas
cwtl
dec
xchg
adc
mov
pop
sub
mov
aad
or
in
jns
call
bound
shll
mov
or
orb
push
in
loope
fldl
push
mov
out
daa
or
pop
inc
push
jae
std
testl
nop
test
jns
in
loop
jg
add
xor
es
inc
add
jp
push
gs
lahf
inc
jge
inc
or
mov
add
sbb
cmpsb
lds
or
push
and
dec
fst
cmpsb
cld
mov
xor
inc
xchg
sbb
out
movsb
gs
xor
xchg
mov
loop
testl
add
xchg
scas
leave
test
mov
nop
inc
inc
mov
imul
and
lock
and
xchg
push
pushf
inc
inc
push
in
pop
jnp
add
xchg
outsl
int3
mov
rcrl
sbb
xor
std
inc
inc
pop
pop
into
movsl
lahf
movsl
je
popl
inc
sub
into
push
int3
movsb
ret
dec
add
sbb
or
in
mov
je
adc
mov
sbb
test
xchg
add
jns
xchg
stos
xor
xorl
dec
pushf
jns
adc
mov
push
fsubrs
in
dec
inc
or
jmp
outsb
jae
push
sbb
sub
dec
mov
int
mov
inc
mov
xchg
pop
fwait
sub
adc
mov
repz
cltd
xor
push
jbe
sahf
cli
icebp
scas
sbb
push
arpl
mov
cmpsb
scas
mov
sti
and
mov
jge
and
inc
add
cmp
gs
jns
xchg
push
pop
cmp
push
dec
daa
pushf
add
lcall
xor
xchg
pop
sub
mov
or
xchg
ja
xchg
idivb
xor
es
cltd
jmp
icebp
jp
dec
mov
cmpl
fldt
lods
pop
cmp
mov
lods
dec
ljmp
pop
mov
lock
adc
out
stos
aam
pop
rorb
mov
xchg
pop
add
xor
rolb
add
dec
mov
mov
lods
sbb
mov
pushf
mov
or
aaa
add
jge
jb
lahf
sbb
xchg
cli
pushf
push
xchg
std
hlt
xchg
mov
add
mov
cmp
icebp
xorl
cmp
pop
int
stos
inc
outsb
int
bound
add
xchg
out
call
mov
inc
mov
pop
outsb
jp
push
fidivl
jmp
dec
int3
aaa
andl
les
int
and
push
movsl
mov
pusha
add
mov
aaa
inc
lock
in
loopne
adc
xor
out
mov
or
mov
jae
jmp
pop
jno
sahf
adc
push
pop
adc
or
pop
fmuls
xchg
sub
ret
call
fstpt
fadds
test
pop
out
cmpl
pop
add
xchg
push
out
add
inc
dec
in
hlt
jle
insb
xchg
mov
or
dec
das
cmpl
addr16
in
mov
aaa
call
xchg
in
popf
rolb
daa
sbb
lcall
dec
xor
addl
and
jmp
nop
ljmp
push
ficoms
mov
mov
shrl
sub
mov
mov
mov
int
adcb
cltd
push
fmull
scas
fnstenv
mov
inc
outsb
outsb
mov
and
outsb
push
test
adc
cmp
out
or
jbe
mov
cli
jp
add
push
dec
mov
and
movsb
lcall
pusha
dec
or
das
test
cmpl
add
fadds
mov
pushf
add
outsl
and
mov
push
jle
int3
and
or
push
mov
or
stos
mov
cmc
cmp
out
xchg
cli
inc
jmp
jg
pushf
push
nop
divb
xchg
add
div
lret
aad
inc
test
add
dec
int3
mov
nop
dec
lret
mov
lcall
jbe
mov
aam
xlat
pop
inc
cmp
cwtl
jmp
les
lret
push
pop
jl
in
inc
sahf
and
push
imulb
push
ljmp
push
mov
into
rorb
insl
inc
sub
inc
jae
dec
loopne
daa
les
scas
add
not
mov
or
out
inc
jp
rcl
xlat
and
shll
mov
xchg
jno
stos
and
jl
fadds
ljmp
xchg
add
jbe
jecxz
mov
xor
inc
mov
jo
xchg
popf
jae
lods
movsl
ja,pt
push
add
cli
loop
lcall
loope
mov
int3
add
jnp
sub
dec
jmp
rorl
sub
or
add
frstor
mov
jns
push
out
into
out
mov
and
cwtl
jo
cmpsl
icebp
addr16
imul
mov
stc
and
shrl
add
pop
xchg
and
pop
mov
dec
mov
xchg
adc
add
cwtl
sahf
dec
dec
mov
sbb
pop
or
xchg
sub
push
push
mov
pop
adc
xchg
cwtl
mov
and
jp
and
dec
inc
push
jne
adc
sbb
mov
shrb
xor
mov
add
scas
cmpsl
sub
sbb
mul
xor
jb
adc
insl
mov
lret
mov
pop
test
cmp
xor
pop
inc
or
lret
jmp
inc
mov
cmc
test
xor
shrb
pop
outsl
sub
es
insb
cmp
cld
push
ficomps
aam
mov
add
xlat
mov
test
jmp
push
sbb
jne
pop
xor
adc
aas
decl
repz
je
xlat
xor
xchg
mov
jae
push
cmpsl
fwait
sbb
adc
popa
push
jae
mov
mov
mov
mov
push
inc
rclb
cmp
jo
cmp
mov
movsl
sbb
pushf
sti
pop
adc
fwait
pop
out
inc
adc
push
repz
inc
aaa
push
aaa
dec
ficoml
je
push
cmp
test
loop
mov
xor
push
and
jmp
sbb
and
aam
push
jmp
jecxz
mov
add
scas
add
and
adc
lea
xchg
xor
test
cli
xchg
out
jo
subl
or
mov
jecxz
mov
ljmp
fildll
popa
je
push
mov
xor
stos
scas
push
xlat
addb
and
je
dec
jbe
outsb
lret
jp
out
out
lret
jmp
adc
jnp
mov
xchg
call
sbb
in
xchg
xor
and
sbb
xor
jl
mov
cmp
pop
push
dec
es
cmp
mov
ret
mov
xor
sub
sbb
aaa
aad
enter
mov
fmuls
mov
scas
sbb
lock
ja
cwtl
cwtl
inc
rorb
jo
mov
lods
jns
stos
xor
inc
rolb
or
into
sub
aad
inc
sbb
adc
loop
sub
pop
scas
in
adc
inc
dec
iret
lock
or
sbb
ja
push
repnz
sti
add
or
loope
in
int
andl
pop
in
insl
outsl
repz
or
test
cmp
pop
popa
enter
pop
lods
or
mov
lcall
mov
pop
fisubrs
mov
loop
cltd
push
cmp
adc
jecxz
sbb
lods
inc
sti
shrb
cmp
cmp
nop
in
stos
sbb
sub
cli
dec
and
jae
cmp
in
mov
adc
in
xor
imul
adc
push
out
rcrl
ds
lret
sbb
out
xchg
xor
sti
lods
arpl
or
out
and
push
pushf
xor
cmp
xor
push
cli
push
in
or
fmul
insb
lods
getsec
test
in
dec
or
test
into
pop
pushf
pop
push
rcr
testl
inc
fs
ret
loop
push
popa
mov
and
cwtl
das
jge
lds
inc
call
aaa
dec
testl
shll
mov
jge
test
outsb
mov
mov
fucomi
sub
or
jg
ss
nop
rcrl
pushf
insl
or
jmp
inc
xor
push
imul
lahf
inc
repz
sahf
jbe
cmpsb
inc
inc
inc
adc
push
mov
test
outsb
popf
out
push
mov
out
dec
xor
xor
xor
test
cmc
fdivl
and
fistl
mov
mov
lret
sub
or
ds
cmp
shlb
adc
cmp
pop
jg
mov
scas
lods
inc
shr
or
mov
test
push
inc
push
push
jg
sbbb
popa
repz
sbbb
daa
ja
testl
adc
sahf
and
and
pop
mov
push
lock
push
or
andb
adc
shlb
xlat
lock
nop
pop
cwtl
cwtl
in
dec
lahf
or
and
pop
stos
hlt
dec
pop
cmp
out
xchg
ret
inc
rcrl
repz
test
dec
lds
dec
lds
add
mov
stc
ljmp
and
loop
dec
or
enter
lahf
mov
add
xchg
sub
or
jmp
cmc
out
mov
add
adc
mov
fisubrs
clc
pushf
jecxz
jb
cltd
imul
mov
or
loope
jns
adc
insb
sbb
pop
lret
add
cwtl
sub
mov
mov
lea
fidivl
cld
ljmp
test
cmp
sbb
or
xor
lahf
xchg
daa
push
adc
sub
test
in
and
jno
push
test
mov
push
les
xchg
fimull
cwtl
ss
jp
pop
movl
ljmp
xor
cmp
mov
push
cmp
jg
sarl
cld
ret
sbb
sbb
fdivrp
sbb
jne
adc
rol
lret
into
sarl
xorb
jl
adc
imul
dec
std
in
cld
enter
repz
add
mov
rclb
dec
adc
cmp
or
sub
repz
push
pusha
std
movsl
loope
pop
sbbb
in
call
hlt
out
push
mov
jno
adc
cltd
sub
push
pop
sub
dec
stos
fldl
or
lret
rolb
and
adc
fcomip
int3
std
jno
xchg
into
inc
inc
stc
insl
int
jl
xor
push
scas
repz
xchg
xor
push
jge
mov
xor
es
mov
out
jno
jmp
stos
cs
ja
xor
and
ret
pushf
ficompl
push
mov
inc
jge
xor
jno
rcrb
call
sbb
fidivrs
and
jp
adc
test
mov
cltd
fmul
or
mov
cmp
push
xchg
mov
test
rclb
cmp
pmullw
cmc
test
pop
lods
xchg
mov
lcall
sub
pusha
fldt
je
fistl
movq
stos
pop
stos
jbe
and
negb
push
cli
and
fistpll
cwtl
imul
push
es
loop
lods
xor
mov
rorl
or
fiaddl
mov
dec
shll
push
addr16
inc
add
or
mov
cmpsb
lcall
sar
sbb
in
int
mov
arpl
dec
cwtl
pop
cltd
loope
or
pop
xorl
jmp
je
ret
xchg
adc
lcall
leave
and
sub
daa
in
mov
push
repnz
push
sub
movsl
push
sbb
inc
xor
push
aas
jle
loopne
xor
inc
scas
mov
movsb
mov
xor
pop
imul
cld
icebp
in
push
lret
repz
push
pop
sub
sarl
jle
xor
add
xchg
testb
pop
or
cmpsl
loope
mov
mov
mov
ret
ss
lea
inc
xlat
push
sub
adc
ficomps
push
ss
in
fimuls
sbb
std
rclb
aas
aas
mov
fidivl
std
sub
xchg
jg
clc
ret
add
pop
scas
sub
lds
mov
pop
push
xchg
in
jmp
icebp
mov
ja
or
repnz
mov
jno
subb
jbe
je
enter
mov
sub
ror
xor
sub
lds
lock
sbb
addr16
cli
popa
pusha
pop
lock
lahf
shll
js
imul
sbb
push
aad
pop
std
rcll
and
sbb
xor
test
sub
sbb
addr16
xchg
mov
pop
mov
ss
add
dec
mov
cs
outsl
mov
test
insl
jne
addb
jl
mov
push
lea
in
lods
dec
pop
cli
add
mov
push
sub
push
in
stc
jge
push
cmp
jne
xchg
xchg
jecxz
mov
cs
push
jne
mov
pop
jg
jmp
aaa
jmp
int
bound
sub
gs
xlat
into
cld
push
ret
or
out
mov
and
pop
jae
push
jnp
mov
xchg
sub
outsb
mov
and
decb
pop
and
aaa
daa
push
or
js
jp
xchg
stos
gs
add
lret
xchg
jo
dec
daa
pop
enter
dec
add
pop
sbb
testb
rorl
mov
xchg
pop
stc
sbb
loop
xchg
dec
xor
cmp
jb
xor
call
pusha
popa
pusha
mov
push
mov
mov
rcrb
cli
mov
mov
fcoml
scas
lea
mov
adc
and
test
loope
add
mov
and
mov
bnd
ss
cld
and
mov
xchg
out
inc
sbb
fmuls
push
repz
incb
xor
or
lods
push
les
scas
rcrl
imul
std
jae
leave
push
cmpsb
dec
push
loope
shlb
loope
mov
ret
sub
mov
xchg
sbb
rol
xor
dec
pop
arpl
lods
fcomps
outsl
icebp
fiadds
in
mov
inc
test
push
rorl
pop
mov
adc
inc
cltd
ds
lock
in
in
imul
sbb
lods
outsb
icebp
je
and
out
cli
xor
dec
mov
cmp
inc
insb
cmc
cs
jp
cld
and
pop
push
dec
popa
pop
xor
lret
mov
lret
mov
dec
sbb
xlat
pop
out
add
enter
xor
xchg
jle
bound
mov
mov
outsl
adcb
loop
cs
flds
dec
push
mov
push
mov
cld
mov
push
push
add
aaa
mov
mov
std
mov
adc
dec
push
push
movsb
mov
adc
xchg
pushf
insl
mov
sbb
jnp
lods
mov
adc
dec
push
notb
inc
mov
jmp
xchg
pop
mov
push
mov
push
fldenv
inc
mov
fiaddl
jae
into
lahf
adc
inc
mov
sbbb
push
lods
or
addr16
das
arpl
sbb
lods
test
sub
sbb
xor
gs
pop
mov
outsl
test
mov
and
jns
icebp
jns
out
xor
mov
push
rol
inc
lret
xor
cmp
pop
pop
sbb
into
nop
mov
mov
jl
lret
add
call
ret
jmp
ljmp
mov
sub
insl
fisubs
mov
lahf
push
dec
in
push
xor
xlat
lret
mov
xor
xchg
mov
inc
inc
cs
sub
mov
xchg
xor
out
les
xor
sub
loope
addr16
jae
call
ret
pop
rcrb
in
mov
jl
jg
mov
nop
scas
out
shrl
iret
int3
adc
mov
mov
mov
xlat
cmp
in
repz
call
test
inc
cmpsb
les
cmpsl
pusha
xor
mov
fdivp
adc
dec
and
lods
fwait
test
test
int
lret
push
mov
pop
jg
and
jno
imul
push
xchg
xor
popa
mov
dec
cmpsl
jle
jl
outsb
fnsave
pop
movsl
loop
mov
push
push
adc
inc
pop
mov
jg
jg
xor
gs
inc
mov
jmp
sbb
pop
rcrl
je
shrb
jecxz
test
mov
testl
ljmp
or
scas
mov
bound
push
add
push
int
adc
pop
push
data16
clc
cmp
mov
ficoms
daa
addb
int3
mov
push
xor
push
or
jo
pop
mov
iret
pusha
adcl
pop
sti
mov
addr16
stos
daa
mov
xor
jae
lahf
test
and
lock
ret
xchg
je
cmpsb
fs
leave
jae
shl
mov
mov
in
ret
push
lahf
loope
aad
dec
lods
sbb
xor
movsb
inc
mov
pop
test
imul
scas
mov
cltd
adc
sub
pop
inc
sbb
xchg
gs
addr16
loop
sub
sub
icebp
mov
aad
addr16
push
filds
out
cmp
or
imul
loope
jns
fidivl
fwait
cmpsb
mov
std
dec
push
mov
adc
sub
test
loop
in
das
push
rcr
lret
or
xlat
push
cwtl
or
icebp
push
mov
mov
imul
or
out
cmpsl
xor
mov
out
stos
je
imul
ret
mov
mov
mov
inc
rcrb
mov
scas
push
fcomps
bound
xchg
jno
and
sub
push
inc
and
pusha
ror
dec
dec
js
adc
add
adc
pop
push
jnp
mov
in
insb
cmpl
cmp
pop
cmp
mov
not
inc
jmp
add
adc
pushf
int3
xchg
pop
jnp
aaa
dec
jp
mov
sub
mov
pop
adc
ret
sbb
dec
pusha
test
dec
clc
mov
insl
jg
enter
jne
lcall
xchg
adcb
and
andps
clc
cmpsl
cltd
loop
nop
addr16
sbb
push
gs
aas
sub
stos
cmc
test
mov
sar
add
fstps
in
mov
rolb
inc
or
movsl
sbb
test
movsb
out
xor
mov
push
xorb
jge
movsl
insl
mov
push
cld
dec
cmp
mov
and
dec
cs
xor
mov
push
call
leave
leave
add
into
in
lret
xchg
pop
add
cmp
and
sahf
not
mov
iret
aad
add
sub
cwtl
or
mov
adc
jne
mov
mov
mov
jg
mov
mov
js
or
insl
mov
add
in
shlb
fildll
or
aaa
inc
sub
test
jg
lods
in
mov
sbbb
inc
cmp
inc
cmc
push
pop
mov
sub
or
iret
mov
dec
insl
sarl
movl
adc
mov
pop
adc
in
xchg
loope
sar
loope
ds
add
dec
pop
xchg
imul
mov
sahf
adc
bound
jmp
pop
push
or
jns
js
mov
jb
mov
cwtl
aad
jne
mov
cmp
mov
mov
dec
xchg
inc
adc
hlt
pop
push
mov
call
cmp
xchg
std
sahf
jbe
int
jno
aaa
and
push
out
mov
adc
mov
ds
dec
xor
push
jae
sbb
xchg
or
lods
adc
mov
scas
rcrw
jae
jb
lahf
bsf
xchg
mov
clc
jae
adc
ficoml
sub
cmp
data16
push
imul
adcl
popa
mov
sub
cld
pop
sub
dec
mov
gs
adc
nop
mov
pop
cli
insb
mov
xchg
lea
pop
std
movd
cltd
dec
dec
and
rcr
cld
adc
push
xor
inc
mov
mov
cmp
push
das
aad
int
mov
int
ljmp
mov
mov
outsl
push
mov
in
push
int
incl
push
xorb
mov
loope
or
or
dec
push
mov
mov
shrb
push
inc
fcmovb
xor
mov
rcr
push
cmp
push
out
jo
ss
pop
add
mov
movsl
lods
mov
aaa
inc
cmp
aam
xor
cli
add
sti
imul
jmp
sub
inc
loopne
dec
repnz
dec
sub
or
movsb
rsm
push
loop
outsl
jg
dec
ja
cmp
fdiv
and
int3
xor
iret
push
lret
aas
loopne
imul
and
je
xor
adc
shll
nop
lds
and
push
std
popf
sar
xchg
das
ficomps
jecxz
pop
sbb
sub
mov
xchg
jns
push
cs
fs
cmp
sub
pop
push
cmp
jbe
jne
and
mov
call
and
stos
adc
lock
iret
mov
lret
fisubrl
pop
test
mov
inc
jmp
and
cmpsb
pushl
inc
mov
jne
dec
mov
ficomps
cmp
mov
outsl
lods
jge
mov
rclb
mov
inc
add
push
or
aas
loope
gs
xchg
fidivrs
push
icebp
jmp
dec
and
sbb
sbb
push
int
dec
icebp
dec
aad
pop
pusha
int3
mov
cld
jnp
adc
mov
mov
and
cmp
pop
sbb
mov
popf
or
out
inc
mov
pop
jno
hlt
mov
pop
jle
jp
cli
jo
xchg
repz
repz
call
mov
jae
popf
add
into
es
in
push
into
jnp
cli
dec
push
clc
cmp
ds
leave
xlat
pop
cwtl
sub
inc
stos
inc
inc
imul
hlt
int
out
lds
cmovbe
and
inc
mov
fs
ljmp
or
inc
or
and
stos
dec
in
mov
mov
or
push
ficomps
lret
sub
dec
jae
or
pop
imul
push
sarl
push
jb
adc
adc
loop
dec
xor
lret
fistpl
movsb
fists
bound
pop
xchg
mov
scas
jns
bound
testl
dec
rolb
mov
ror
sub
xor
mov
in
adc
orl
or
inc
daa
mov
rolb
in
mov
mov
lcall
xchg
out
or
lahf
cld
add
dec
jo
minps
mov
and
add
xchg
popf
and
cmc
pushf
push
xor
jmp
lea
cmc
lcall
js
test
cmp
sbbb
jno
cltd
sub
cmp
fstpl
pop
lret
shl
arpl
shr
lahf
jmp
add
cmp
andl
push
adc
cmp
dec
xlat
push
mov
xor
fsubrs
mov
cmp
cld
or
stos
cs
imul
imul
inc
ljmp
stos
mov
push
loop
mov
std
pop
fcomps
lcall
jmp
cmp
jbe
dec
add
mulb
mov
popf
and
addr16
xor
leave
jnp
in
hlt
cs
cltd
cmp
sbbl
out
mov
ds
mov
lret
int3
push
mulb
inc
pop
or
mov
mov
pushf
ret
inc
lret
xchg
loop
lock
inc
inc
ja
push
inc
out
outsb
or
lcall
lret
lahf
and
cmp
adc
ficoms
movsl
push
sub
and
repnz
cmp
mov
dec
addr16
xor
mov
js
sub
int3
inc
push
lock
xchg
ja
mov
out
icebp
push
inc
arpl
addr16
adc
shrb
cli
mov
jbe
idivl
push
mov
into
test
fcoml
xchg
fimull
push
andb
fnop
arpl
jmp
or
loope
shl
pop
int3
mov
test
sbb
bnd
aad
test
mov
pop
scas
mov
xchg
sub
test
cmpsl
lcall
pusha
sbbb
xorb
and
lods
cwtl
cmpsb
xor
xor
mov
mov
aam
add
adc
mul
mov
pop
or
fsubrs
push
push
dec
pop
push
mov
out
ret
mov
jp
into
test
leave
mov
adc
add
movsl
cmpsl
pop
mov
arpl
addb
add
addr16
mov
push
rclb
addr16
mov
or
mov
dec
lcall
fmul
dec
stc
fiadds
and
mov
push
push
sbb
cld
xchg
jns
std
imul
pusha
std
scas
push
mov
lahf
aad
and
xor
stc
addr16
or
push
into
sbb
fs
cmpsb
dec
lods
dec
aam
inc
xor
and
jno
xorl
fcomip
inc
xchg
outsl
adc
mov
or
dec
shll
je
and
cmp
stos
dec
and
insl
mov
into
adc
or
adc
inc
inc
pusha
xor
add
mov
mov
lcall
nop
pop
int3
sub
pusha
xor
mov
stos
lea
fnstsw
dec
adc
ds
cwtl
addr16
arpl
repz
js
jne
cmp
jne
cli
rorl
xchg
lods
iret
mov
fs
mov
lret
rorb
dec
lcall
test
xchg
add
cs
sbb
and
jmp
cld
adc
repnz
pop
lods
add
pop
roll
push
jo
adcl
xchg
lds
mov
or
mov
jl
jnp
and
jb
loopne,pn
fstpl
das
sub
xchg
add
xchg
add
jge
imul
push
xor
dec
jecxz
lret
push
mov
je
or
mov
cmpsl
mov
lcall
push
in
sub
adc
movsl
filds
sti
sbb
dec
fs
cmp
call
insb
lods
aaa
dec
mov
repnz
push
testl
xor
adcb
call
xchg
xchg
jno
ret
push
mov
cmovg
push
addr16
sbb
subl
sbb
out
int3
cld
and
adc
mov
daa
jp
inc
test
leave
mov
or
push
lret
sub
stc
lahf
lock
lahf
shlb
inc
sub
in
xchg
inc
lret
pop
sub
test
stc
jle
sbb
ljmp
aas
pop
xchg
stos
int
cli
ljmp
xor
xlat
or
aaa
xchg
mov
sub
add
and
mov
in
enter
pop
or
pop
fsubrl
aad
inc
xchg
daa
mov
outsl
mov
dec
xor
leave
mov
dec
mov
jns
fidivrl
mov
mov
ret
cmc
pop
push
pop
ljmp
pop
sub
dec
aam
fnstenv
je
lods
push
inc
ss
icebp
insl
push
aas
sub
fidivrs
lds
test
jmp
sbb
add
iret
adc
aaa
mov
xchg
es
add
cmp
push
in
sub
add
push
mov
ds
add
inc
mov
and
adc
xlat
ja
jg
dec
fildll
lret
cmp
or
lock
cmpsl
or
jmp
sub
xorl
imul
aam
mov
sub
add
push
and
adc
pop
dec
xor
cmp
sarb
pop
push
cmp
lret
fs
addr16
add
nop
cmpsb
mov
stos
pop
ret
cmpsb
dec
pop
xor
mov
jb
cmp
icebp
cli
pop
inc
shlb
xor
push
mov
call
imul
mov
rcrb
mov
pusha
outsb
aad
xchg
hlt
and
hlt
inc
jp
stc
cmpsb
cli
bound
cli
scas
dec
mov
jle
stc
scas
sub
sub
leave
sbb
fcomi
xor
push
mov
mov
cli
xorb
enter
add
cmpsb
into
mov
xchg
mov
mov
xlat
push
xor
insb
pop
shlb
icebp
mov
dec
xor
int3
pop
and
adc
sbbl
sub
push
adc
cmp
mov
pop
push
std
outsl
xchg
jle
jne
push
pop
pop
js
in
data16
cmpsl
pop
and
movsb
mov
adc
lret
mov
dec
cmp
and
dec
mov
leave
cmp
aas
jbe
int3
shll
movsl
andb
or
enter
push
loope
lods
fnstenv
std
lcall
cmp
scas
mov
adc
inc
xchg
cmpsb
iret
inc
add
sbb
jle
xor
fcompp
sbb
rol
outsl
and
ljmp
out
xor
jne
xlat
out
ljmp
pop
clc
out
jbe
testb
leave
pop
dec
and
xchg
or
sub
sbb
leave
and
jbe
or
mov
mov
xchg
mov
jbe
imul
inc
and
clc
and
fildll
xorl
jmp
cmpsb
lret
xchg
ljmp
cld
cmp
icebp
ljmp
push
or
hlt
sahf
push
inc
lahf
js
push
push
sub
mov
dec
nop
adc
add
sarb
imul
xor
mov
xchg
mov
mov
lock
cmpsl
add
jp
adc
pop
sub
jp
lods
push
mov
jo
sub
jbe
push
outsb
movsb
repz
inc
dec
xlat
fisubrl
gs
jno
fidivrl
jp
sbb
cli
mov
push
pop
mov
out
outsl
icebp
dec
fisttps
arpl
inc
inc
pop
mov
fimull
movsl
inc
sub
dec
mov
inc
hlt
daa
adc
pop
xchg
push
mov
xchg
jnp
sbb
sbb
flds
std
std
add
lea
mov
add
sub
mov
roll
frstor
sbb
es
loop
addr16
mov
aad
cli
or
rcrl
insb
cli
mov
stc
adc
pop
xchg
pushf
out
cmpb
clc
adc
in
push
ret
negb
sti
jp
sbb
xor
dec
subl
push
daa
mov
movsb
cmc
ret
stc
setle
xorl
push
jne
xchg
mov
je
aam
jnp
js
xor
and
imul
pop
repnz
jno
sub
cmpsb
addr16
push
jmp
sub
sub
out
add
adc
imul
into
push
pop
sub
pushf
adc
pop
sahf
xchg
add
dec
divl
jg
mov
and
adc
jge
in
fucom
xchg
and
insl
test
adc
xor
sub
inc
sbb
fstpl
sub
xchg
xchg
mov
mov
decl
mov
xor
ja
repz
dec
mov
mov
orb
lock
test
add
push
mov
call
fwait
jl
sbb
daa
ds
loop
mov
mov
inc
push
sbb
bound
or
repz
mov
addr16
mov
sbb
nop
mov
xor
aam
pop
lret
repz
std
lret
jle
adc
push
into
dec
aaa
std
loope
out
js
jbe,pn
nopl
jbe
mov
inc
call
push
sub
mov
scas
mov
and
out
xchg
and
or
sti
or
mov
clc
adc
orb
stos
dec
fcomi
mov
dec
mov
and
mov
and
jae
sbb
sub
push
push
xor
outsb
xlat
pop
mulb
or
out
jle
in
imulb
es
out
lock
daa
cmpl
xor
and
lods
fsubs
stos
or
and
sbb
lea
rclb
and
mov
cmp
imul
insb
and
or
adc
daa
repz
add
xchg
outsl
push
aaa
rcrl
or
cli
inc
mov
xchg
add
mov
pop
mov
mov
mov
addr16
fs
cmp
test
ljmp
lea
xor
iret
inc
xor
fnstsw
sub
inc
stos
and
xchg
mov
dec
aam
sub
icebp
push
enter
in
cmc
loopne
push
pop
mov
mov
and
cltd
xchg
jno
pop
push
inc
xchg
pop
or
xor
push
lea
fldl
add
cs
xchg
seta
lahf
lret
ret
sbb
cmp
inc
mov
cmp
out
jno
fidivrs
mov
sahf
mov
iret
std
cmp
sbb
ret
js
mov
insb
inc
aad
pop
inc
push
mov
pop
push
add
loop
xor
gs
lret
cmpl
rcll
and
mov
dec
inc
shlb
psrlw
pop
push
pop
stc
push
lahf
sbb
cmpsb
mov
xchg
dec
cmp
sub
lock
sub
push
xchg
pop
pushf
pop
mov
repz
xchg
xchg
sahf
lds
or
push
jbe
or
push
sub
jp
xchg
hlt
sub
dec
jg
les
dec
jno
sbb
inc
cmp
aas
dec
pop
add
push
pop
loope
or
lret
xchg
cld
add
xchg
push
inc
xor
lcall
outsl
sti
mov
mov
mov
pop
leave
sbb
and
push
cltd
adc
mov
ja
sbb
std
call
ss
cwtl
loope
jp
out
xor
sub
jo
adc
mov
jb
pop
adc
lcall
mov
mov
cmpsb
jg
dec
dec
cmp
pop
push
mov
mov
mov
or
lods
mov
push
and
or
and
inc
pop
js
stos
pop
adc
push
js
xor
push
add
sub
inc
pop
mov
iret
push
and
inc
sbb
lret
test
sub
mov
lcall
cmp
pop
lret
outsl
call
test
insb
adc
mov
mov
xor
push
mov
movsl
test
cmc
outsb
sbb
test
push
imul
das
cmp
nop
and
fmull
jp
jg
adc
jbe
mov
jno
pop
inc
or
jo
sub
inc
addl
mov
int
ret
xor
into
loope
aam
push
pop
std
test
hlt
xchg
jnp
fstpt
push
fwait
mov
jo
pusha
and
divl
jb
sbb
dec
leave
mov
sbb
pop
mov
cmpsl
icebp
mov
iret
jle
in
sbb
cmp
xchg
jns
or
ret
xor
dec
lret
xchg
cmp
jge
jae
lret
push
inc
aas
repz
cvtpi2ps
dec
or
inc
pop
cmp
mov
stos
sbb
imul
ss
and
insb
shrl
into
jno
sub
lret
cmp
ret
test
jl
mov
or
or
lock
or
add
cmp
mov
arpl
adc
mov
dec
xor
and
sub
enter
pushf
mov
adc
lods
adc
data16
jbe
shlb
pop
or
cmp
inc
jecxz
mov
jg
insl
mov
jae
out
or
fstl
cmp
adc
in
mov
test
test
movsl
sub
jg
out
sbb
fnstcw
sbb
add
dec
adc
clc
mov
xchg
mov
ret
out
mov
sbb
movsb
jecxz
xor
xchg
mov
rolb
cmpsl
push
sahf
es
imul
and
fdivs
test
cmpsb
mov
jmp
insb
mov
das
in
mov
iret
mov
mov
aad
xlat
aaa
and
mov
cmp
jle
popf
push
dec
push
xchg
pop
sub
sarl
dec
jmp
and
and
add
xchg
ret
jecxz
mov
addb
subb
test
xchg
xchg
mov
in
xor
mov
xor
daa
sub
jl
divl
nop
mov
pop
jno
imul
mov
loope
insb
aad
lea
lds
adc
add
fcmovu
shrb
call
pushf
inc
rorl
pop
gs
jmp
negb
jne
pop
pusha
sti
or
or
xorb
sub
dec
cmpsl
ret
add
jo
lcall
mov
dec
xor
and
cmc
pop
rclb
or
xor
stc
out
adc
cmp
sti
jecxz
insl
ljmp
mov
dec
lods
pop
sub
push
lds
and
dec
in
mov
dec
popl
xlat
popf
cmp
sub
or
push
xrelease
mov
mov
dec
mov
dec
je
test
push
fcom
rcrl
pop
bound
sbb
dec
lds
es
mov
push
sbb
aam
push
lods
out
into
inc
or
into
ficoms
jo
test
loopne
push
dec
add
push
jae
insl
xchg
mov
cwtl
xchg
divb
arpl
in
aam
or
xor
out
push
jae
mov
std
push
mov
mov
pop
xchg
test
in
pushl
lret
rorl
les
xchg
loop
das
mov
andl
shrl
cld
xor
add
xor
and
pop
and
push
dec
add
cmp
nop
cmc
or
repnz
popa
and
cld
mov
ja
mov
add
iret
push
sbb
orl
call
insb
in
jb
mov
cmp
enter
add
pop
into
pop
or
stos
sbb
cld
sub
xchg
lret
xchg
sub
popa
or
rcrb
dec
inc
popf
clc
stos
hlt
stos
data16
cmp
lods
and
pop
ja
xchg
sub
mov
sbb
ret
pop
ja
js
out
cwtl
jg
mov
mov
and
adcb
aad
int
sbb
cmp
loopne
sbb
call
pusha
jge
mov
and
in
sbb
pop
mov
mov
negl
mov
ds
or
inc
and
stos
or
push
sub
les
inc
pop
mov
adcl
popf
xor
inc
movsb
inc
xor
mov
xchg
fs
push
or
xor
and
pop
or
jg
add
or
in
ja
push
xchg
out
je
lahf
or
adc
xor
xor
fcomi
leave
and
fidivrl
or
jmp
dec
push
mov
iret
xchg
xor
daa
dec
mov
xchg
lods
sbb
cltd
adc
cmp
inc
fcompl
adc
aas
add
std
loope
mov
dec
and
rorb
cwtl
pop
jle
jecxz
cmp
in
mov
daa
pop
or
jo
jbe
mov
add
in
xor
outsl
push
les
bound
movlps
mov
out
mov
outsl
pushf
icebp
pop
in
dec
mov
push
pop
sub
dec
jl
sub
orl
or
mov
dec
add
xchg
clc
dec
xchg
jno
push
cli
cli
or
ret
xor
stos
mov
bound
out
pop
jle
inc
pop
add
pop
mov
int
and
in
mov
mov
xchg
mov
mov
mov
add
mov
aas
add
or
lods
pop
daa
cmpb
fsubrp
lcall
fsub
inc
mov
xor
pop
imul
sbbl
xchg
addr16
popa
and
pop
jmp
insb
roll
or
xchg
frstor
or
mov
xchg
call
dec
shrl
mov
sub
xchg
pop
ret
rcrb
aas
sub
in
int
xchg
js
sub
loop
clc
and
xchg
push
sbb
lret
mov
push
mov
cwtl
mov
daa
xchg
mov
add
cmp
mov
pop
fwait
std
pop
insl
jbe
lock
lds
mov
fwait
popf
cwtl
inc
and
cmp
lret
pop
mov
in
imul
in
lea
jne
push
sbb
mov
jno
jno,pn
sub
jbe
jp
pop
mov
lret
pusha
arpl
sub
mov
movsl
mov
and
pop
rorl
push
dec
add
fildll
incl
stos
pop
loopne
cmp
mov
jge
bound
dec
imul
xchg
cmp
sub
dec
jnp,pt
mov
movsb
sbb
pop
fwait
jmp
adc
jo
mov
fisubrl
sbbb
cmpsl
sbb
aaa
cli
cmp
enter
pop
cs
jg
add
mov
gs
fnclex
pop
adcb
ret
jno
subl
sbb
xor
dec
scas
pop
fxch
mov
jp
ret
pop
loope
dec
mov
push
dec
jp
cmp
sbb
sahf
loop
mov
pop
test
gs
adc
and
mov
mov
cs
pop
and
jns
out
stos
es
add
stos
pop
lcall
push
lret
inc
es
mov
es
or
in
aaa
fiaddl
cmc
sbb
lock
jo
xchg
mov
adc
dec
push
dec
push
out
gs
loop
push
mov
loopne
cmc
inc
leave
xchg
xor
negb
lods
pop
incb
lds
xchg
ret
pop
out
in
lds
mov
insl
xor
aas
test
xchg
pop
enter
mov
cmpsb
gs
pop
sidtl
mov
icebp
xor
mov
sub
add
les
xchg
roll
or
adc
leave
scas
xor
push
rclb
popa
fwait
lea
pop
in
mov
call
mov
inc
cwtl
adc
out
xor
xor
push
dec
sbb
pop
jb
and
cmp
and
fcompl
pop
mov
xchg
xor
add
mov
sub
dec
mov
dec
cmp
mov
adc
jmp
inc
jg
push
inc
add
jp
addr16
popf
test
lcall
push
cwtl
addr16
sub
sbb
mov
mov
faddl
dec
repz
sub
sahf
mov
pushf
pop
lahf
sbb
jno
test
xchg
inc
lcall
sub
xchg
sbb
movsl
mov
or
rcl
and
cmpsb
loopne
daa
mov
jg
popl
sbb
adc
mov
dec
add
mov
mov
setl
pop
and
fdivs
xor
mov
cmp
cmp
sub
imul
in
push
mov
inc
push
stos
sti
iret
inc
xchg
in
push
ds
imul
into
xchg
in
or
xor
xchg
lods
inc
xchg
cli
into
sarl
adc
fstps
imul
mov
adc
mov
mov
loope
mov
inc
fstpt
in
repnz
push
add
inc
xchg
cmp
or
and
mov
std
and
fldcw
push
sahf
out
ror
xchg
add
stos
sub
nop
loope
mov
push
cld
out
out
fisubrs
cs
icebp
mov
adc
outsb
mov
push
xchg
sbb
mov
imul
rcrl
sahf
pop
inc
movsb
mov
imulb
mov
jne
push
cs
nop
push
gs
cmp
and
mov
aas
or
push
dec
sub
or
push
stc
jno
imul
aad
adc
loopne
insl
lcall
mov
ficompl
ja
cmp
scas
jns
arpl
adc
cmp
lds
rcrb
xchg
enter
movsb
xlat
or
bound
cs
mov
cltd
jmp
int3
imul
jl
addr16
or
subb
pop
pop
das
repz
pop
out
dec
fsts
push
shrb
jnp
cmp
or
jns
or
les
or
lods
int
add
in
outsb
xor
jnp
outsl
and
cld
mov
cmp
ss
dec
in
fnsave
into
lods
add
mov
cmpb
sbb
inc
sub
xchg
lods
mov
lods
sub
pop
gs
ret
sbb
jne
push
sbb
out
inc
bswap
adc
lahf
fimull
fwait
icebp
icebp
clc
lods
pop
push
push
cmp
fidivs
stos
cmp
xor
mov
jp
movsl
sbb
mov
pusha
lods
mov
data16
imul
push
cmp
adcb
arpl
jns
scas
test
lea
xor
jg
mov
iret
out
out
push
rcrl
pushl
xchg
outsl
pop
enter
mov
xchg
out
and
arpl
loopne
out
push
sbb
cmp
mov
ljmp
push
or
and
inc
cmp
outsb
ljmp
mov
or
cmpl
push
xchg
or
fimuls
xchg
scas
push
int
mov
adc
lods
push
jg
xchg
frstor
add
xchg
and
sub
imul
mov
mov
push
mov
iret
push
sbb
adc
lock
fidivs
and
mov
cltd
jb
add
cmp
rcrl
ljmp
jne
movl
mov
push
sti
stos
jge
fucomip
int
bound
mov
jae
push
or
repnz
xor
adc
clc
test
push
xor
std
pop
repnz
xchg
or
inc
das
movsl
lds
lds
sub
cli
into
lret
xor
or
jg
dec
mov
pop
movb
mov
roll
adc
lock
mov
ja
int3
adc
add
in
out
shlb
pop
iret
int
jb
pop
adc
cmp
jge
ret
xor
adcb
dec
imulb
and
outsl
xor
iret
jmp
sbb
jo
dec
cmpsb
lret
push
cs
push
sbbb
ret
jne
xor
movsb
sbb
jl
xor
adc
adc
cmp
xchg
cli
sub
xor
and
push
inc
push
xchg
sbb
mov
loop
cmpsl
mov
push
inc
mov
mov
cs
jecxz
clc
mov
ret
xchg
jmp
rol
sarl
mov
popf
add
xlat
sub
es
sbb
popf
jp
mov
mov
popa
mov
inc
or
cmp
adc
lcall
sbb
inc
jle
out
scas
pop
mov
dec
jmp
sub
jo
mov
mov
or
pop
push
jo
jb
inc
push
lahf
in
mov
dec
mov
fadd
and
mov
xor
mov
mov
xchg
ds
mov
cmp
fwait
rorb
and
cwtl
jecxz
adc
fs
xchg
cmpsl
fwait
sahf
divl
out
jmp
adc
pop
lock
aas
lds
ljmp
dec
and
cmpsb
xchg
sbb
jg
lcall
mov
fwait
mov
or
sarl
lcall
cmp
popf
lods
mov
mov
push
sbb
xorl
leave
loopne
xor
mov
lods
jno
xorb
subl
ficomps
stos
pop
daa
outsb
in
cmp
pop
and
cltd
pop
ja
jae
outsb
dec
and
mov
xchg
cli
jae
rcll
jp
mov
and
pop
push
cli
sub
mov
xchg
and
icebp
out
jmp
test
jle
xchg
out
into
leave
pushf
mov
js
test
iret
pop
cmp
es
inc
shrb
in
dec
push
jo
fcmovb
and
jge
or
lret
cs
lret
cmp
xorb
or
cmc
mov
pop
rorb
insb
dec
nop
les
and
ja
or
sub
xor
nop
dec
cmpsb
arpl
add
in
cmp
jge
dec
mov
adc
inc
xchg
jns
adc
xor
shrl
out
push
push
cmpsl
sti
jl
andl
push
stc
mov
jmp
adc
pop
mov
pop
bound
addl
xor
xchg
adc
mov
shrb
sbb
pop
xchg
iret
fadds
ret
push
cld
pop
or
or
and
cltd
ss
mov
mov
mov
rcrl
sub
icebp
in
andl
push
lea
insl
lret
lock
mov
out
jle
mov
subl
lcall
in
mov
or
jo
xchg
mov
jns
mov
cmpsl
jns
inc
negb
mov
fs
leave
sub
repz
xchg
jge
in
rclb
jg
stc
das
and
and
mov
push
mov
andb
adc
es
cmp
inc
mov
repnz
mov
mov
mov
pop
outsl
int3
clc
xchg
mov
nop
fmull
test
push
push
test
or
mov
negb
jbe
fsubl
cmpsl
sti
and
insb
xlat
jle
dec
sbb
add
out
jl
pushl
dec
adc
arpl
jmp
mov
daa
xchg
stos
jbe
in
stos
inc
dec
cmp
xor
in
pusha
jge
jmp
cwtl
inc
cmp
push
movzwl
in
dec
and
jg
xor
add
or
or
dec
or
je
jnp
jnp
cli
cs
out
ret
inc
in
scas
push
push
xchg
data16
lahf
xor
mov
or
adc
mov
and
jp
dec
out
shld
mov
xchg
loopne
lahf
pop
aam
out
jl
ljmp
xchg
int3
outsl
push
sbb
pop
shlb
scas
jne
mov
pop
sarl
shr
xor
cwtl
xor
cwtl
xor
aas
jge
test
sbb
rolb
aaa
test
cltd
mov
addr16
jp
cmp
js
xchg
xchg
jo
jbe
add
sub
stos
ss
jno
jnp
pop
xchg
loop
imul
ret
int3
mov
mov
lcall
outsb
aas
or
fs
dec
dec
mov
cmp
xor
and
lds
dec
andl
push
jnp
and
dec
fs
push
dec
xor
scas
enter
fwait
fwait
and
xchg
lcall
inc
or
shl
inc
mov
or
pop
test
scas
lock
sbbl
lret
or
sarb
dec
or
ret
fists
fistps
mov
testl
or
gs
mov
stos
insb
pop
push
xchg
test
scas
inc
mov
loopne
xchg
jmp
stos
dec
cmp
sti
icebp
sub
inc
shll
dec
insb
adc
imul
sahf
fs
pop
or
ja
mov
pop
push
cli
adc
cmpsb
fsubrs
shrb
jmp
or
or
xor
jp
jge
push
insb
cmp
lahf
add
and
in
pusha
sbb
sub
das
popa
test
ja
mov
add
push
dec
jmp
mov
outsb
dec
inc
push
ja
leave
adc
sub
jnp
cltd
xchg
jl
adc
add
jnp
shll
push
mov
popa
mov
out
mov
leave
jg
fs
mov
cs
add
push
xlat
push
aam
rcrb
push
mov
pushf
roll
push
and
lret
pop
pop
icebp
adc
inc
inc
js
mov
movsb
jae
push
cli
cltd
nop
add
inc
mov
mov
fldl
pop
mov
rolb
pop
mov
call
mov
or
sbb
imul
push
in
int3
mov
mov
sub
dec
mov
dec
cltd
mov
repnz
mov
in
mov
fnstenv
xchg
mov
dec
jb
xchg
adc
dec
pop
sbb
jne
test
mov
insb
lock
ret
xor
std
cmp
inc
outsb
cmpsb
lock
call
sbb
loopne
lcall
mov
in
fcoms
cmpl
lock
inc
mov
or
loop
xchg
push
ficomps
mov
out
into
out
divl
push
fcmovu
icebp
mov
adc
jo
gs
jle
pop
jl
add
sub
hlt
cli
ds
adc
repz
hlt
xor
xor
cltd
aam
xchg
pop
sbb
sub
xchg
adc
test
dec
push
sbb
mov
cli
and
mov
std
xor
or
lret
int
ficoml
mov
bnd
out
mov
cmpsl
inc
bnd
negb
push
test
pop
enter
sti
cmpsl
adc
test
pop
mov
push
outsb
movsl
push
in
out
sub
icebp
jo
sub
and
jno
fdiv
add
jae
sub
inc
std
jle
mov
inc
out
sub
lcall
pop
push
jge
push
sahf
lea
outsb
cmp
movsl
and
dec
sub
dec
outsb
xchg
les
push
ss
mov
das
iret
ds
xchg
add
cwtl
pop
sbb
jge
orb
adc
dec
mov
sbb
iret
cmp
jb
ds
mov
into
cld
into
sbb
bound
popa
xlat
and
jo
xor
push
cs
xchg
icebp
xchg
mov
xchg
xor
cld
dec
pop
pop
push
vxorps
cmp
add
lahf
xchg
xchg
or
add
imul
ficoml
jecxz
pushf
loopne
push
ss
dec
leave
nop
dec
jno
rorb
dec
cltd
dec
inc
xor
dec
pop
pop
lds
add
cmp
and
outsl
xlat
fmul
add
sub
orl
into
dec
gs
data16
inc
in
dec
xlat
iret
ret
sub
push
jmp
jle
pushf
adcl
jns
xchg
dec
cltd
addr16
sub
sub
roll
pop
jnp
mov
inc
xchg
mov
dec
les
mov
pop
sbb
push
push
and
push
sub
cltd
jne
xchg
sbb
mov
fists
decl
add
jnp
lahf
push
pop
stos
cld
hlt
shl
push
dec
cmc
pushf
ficomps
fnstenv
lock
adc
cmp
xchg
sahf
ret
xor
and
out
xchg
add
xlat
es
jl
pop
nop
outsb
pop
xchg
push
addr16
int
jns
leave
add
pop
fdivs
fmul
pop
sub
in
adc
mov
jmp
out
scas
stos
clc
loope
mov
lret
add
mov
fildll
stos
loop
mov
repz
sbb
dec
ljmp
cmp
xor
push
int
or
fs
outsb
jp
out
mov
dec
rclb
pop
test
jb
sbb
imul
loope
out
test
scas
jb
inc
bound
push
cmp
int
or
inc
jbe
fbstp
pop
movsl
mov
push
nop
enter
addb
loope
adc
js
movl
cmpb
popa
pop
ja
add
adc
repnz
loop
xlat
dec
aaa
outsl
pop
add
xor
decl
iret
repnz
fcoms
dec
mov
stos
outsb
cmp
rolb
xchg
mov
je
push
jmp
add
in
aaa
scas
std
mov
aas
and
pop
push
fisubrl
lret
pop
pop
jp
push
or
pushf
push
lds
fwait
insb
and
in
mov
stos
je
and
cmp
push
loopne
push
pop
pop
and
jae
inc
repz
and
arpl
ds
repz
sub
int3
dec
cmpsl
out
insl
and
push
sarb
loop
roll
mov
mov
cmp
test
mov
push
adc
jge
cmp
cmc
sub
adc
push
pop
and
jmp
jns
xchg
xor
test
mov
cmp
xchg
roll
loop
lret
jno
bound
xlat
pop
or
jl
mov
jb
pop
stos
stc
aaa
and
jmp
add
pop
jmp
push
mov
mov
push
xor
add
jne
adc
jb
adc
mov
in
test
and
sub
push
sub
aaa
add
shr
in
xchg
pop
negl
aad
jmp
movsb
and
jae
or
sub
cli
rorb
clc
jp
lods
into
sbb
lahf
push
or
push
xor
decb
jge
and
add
jl
hlt
enter
adcb
cmp
fildll
test
dec
and
dec
xor
jmp
outsb
out
xor
insl
jecxz
jo
add
outsb
rcr
stc
rcrb
insl
fsts
sbb
pop
or
pop
cmp
adc
push
cmp
xor
sbb
xchg
outsb
test
and
pop
lods
jnp
insb
rcll
inc
xor
fldenv
xchg
mov
mov
stos
inc
mov
out
lret
jge
insb
aad
iret
cmp
movsl
aas
add
data16
pop
in
inc
testl
movsl
xchg
mov
stos
mov
adc
inc
add
mov
in
addr16
lods
push
lret
pop
arpl
jmp
push
mov
fwait
xchg
or
test
into
mov
mov
cmp
fnsave
es
repnz
mov
sbb
in
adc
push
mov
mov
hlt
scas
push
fimuls
xor
push
xor
dec
dec
cmp
bound
movsb
push
xchg
les
mov
adc
sarl
or
push
push
sub
pop
faddl
xchg
jecxz
sarb
pop
inc
clc
mov
aam
dec
aas
mov
nop
sbb
in
sub
pop
insl
mov
out
rorl
xchg
ds
xchg
pop
es
mov
or
adc
mov
xchg
ss
mov
sub
lods
cmc
jl
push
and
das
jg
mov
pop
shl
out
sbb
incl
std
mov
in
xor
sub
shlb
mov
fs
sbb
lret
and
inc
sub
or
push
mov
jle
stos
test
bound
inc
sahf
mov
or
mov
and
and
or
je
call
cltd
ret
xor
aam
xor
bound
xor
loop
push
test
movsl
in
and
clc
sbb
add
xchg
addr16
fcmovnbe
mov
mov
cmp
push
imul
xor
sub
dec
leave
ret
sub
fnstcw
in
mov
scas
in
jb
jne
pop
adc
shl
cli
xor
and
jne
cmp
jmp
out
aad
lret
xchg
mov
or
aam
xchg
adc
mov
mov
je
scas
and
xchg
add
mov
pop
mov
sub
mov
lcall
xchg
mov
mov
push
jo
mov
dec
out
mov
xchg
orb
sbb
scas
add
jnp
scas
push
mov
loop
dec
aad
out
into
imul
in
nopl
pop
dec
add
adc
aad
xor
xor
enter
jno
mov
int3
rclb
mov
push
loope
adcb
mov
adc
dec
push
pop
std
lea
enter
arpl
pop
popf
stos
vfmsub213ss
fadds
xor
ja
subb
ljmp
into
ja
cmpsb
jmp
out
xchg
dec
jmp
das
outsb
ret
cli
in
shrb
xlat
push
in
push
andb
or
push
mov
call
pushf
xchg
test
and
inc
mov
dec
sub
pop
sbb
fst
movsb
into
fnstcw
mov
int
add
out
or
lcall
sbb
daa
ds
data16
out
jnp
aas
jbe
mov
bound
out
pop
cmp
movsl
xchg
hlt
mov
sbb
pushf
loop
das
inc
imul
jb
mov
mov
jmp
jge
add
sbb
mov
sbb
push
jbe
mov
mov
xchg
out
imul
xchg
or
arpl
mov
jle
repz
and
sbbb
pop
mulb
add
dec
testl
dec
jmp
aad
mov
test
inc
mov
sub
jp
push
cmpsb
pop
pop
mov
insl
dec
jge
outsb
dec
push
push
jecxz
sub
ljmp
dec
in
adc
xchg
push
push
or
cwtl
cmp
das
ja
dec
or
outsl
jp
add
aam
jb
addb
or
adc
cmp
ds
pushf
test
mov
and
arpl
nop
push
aad
xchg
xorl
mov
loop
sub
popf
dec
pop
push
mov
out
pop
loop
inc
in
inc
jg
jae
pushl
add
add
and
hlt
arpl
pop
test
nop
pop
mov
rcr
lods
outsl
mov
jbe
xor
cmpsb
popa
data16
push
cmp
sbb
cli
cmp
mov
inc
rolb
jle
es
push
xchg
rorb
cltd
std
pop
vpmulhuw
ss
jmp
mov
stos
rdpmc
into
hlt
sub
fsubs
cmp
sub
das
pushf
push
into
add
dec
ja
adc
dec
pop
mov
hlt
clc
lret
jbe
adc
xchg
fwait
add
jae
push
int3
sub
add
jp
pop
dec
icebp
fucom
sbb
lods
cmp
lahf
adc
xchg
testl
mov
pusha
repnz
fiaddl
mov
fwait
mov
mov
aaa
mov
push
lock
or
xor
push
jb
adc
cmpsb
test
mov
jp
push
pop
mov
mov
mov
scas
sbb
push
dec
das
and
fnstsw
lea
push
jnp
inc
imulb
iret
pushf
cmp
test
add
cmp
and
movsl
inc
or
popf
mov
adcl
lods
cmpsb
dec
mov
lds
or
mov
js
sbb
xchg
rclb
stc
push
shrl
pop
mov
in
inc
cmc
imul
roll
xor
nop
push
addr16
jecxz
jle
pushf
pop
ja
lods
adc
fmul
mov
ret
xchg
dec
dec
mov
add
xor
je
or
mov
pop
ds
or
idivb
out
xchg
jae
mov
fs
lods
sub
pop
cmp
and
cmp
js
insb
movsb
repnz
gs
out
cltd
pop
inc
in
dec
cmp
xchg
pop
or
push
nop
xchg
gs
mov
jmp
pop
jp
and
lret
dec
mov
int
mov
dec
sub
cmp
vpunpckldq
sub
push
and
ret
jnp
sbb
jns
mov
in
cmp
sarb
es
ficoml
gs
and
stos
hlt
insl
insl
sbb
into
ljmp
int
cwtl
lahf
xchg
loop
pusha
mov
icebp
adc
pop
popf
imul
sub
push
outsb
dec
data16
sbb
mov
mov
dec
inc
xor
lds
sub
test
lods
push
jb
push
orb
fisttps
dec
test
xchg
iret
stc
and
pop
xor
and
xchg
push
xchg
xchg
push
cld
mov
sub
inc
lret
xor
inc
andl
xor
jl
hlt
imul
xlat
loope
sbb
jo
movsb
mov
stc
jne
xchg
jmp
les
mov
imulb
test
loope
dec
dec
mov
repnz
and
divl
sbb
sbb
in
and
int3
add
jle
std
mov
xlat
adc
and
ds
jb
or
dec
or
mov
enter
int
xchg
test
leave
xchg
sarl
in
pop
push
add
mov
and
lock
ficomps
add
jge
fnstsw
dec
push
adc
and
in
xchg
pop
nop
out
or
out
mov
enter
andl
and
sbb
idivb
nop
inc
mov
lds
mov
mov
jae
xor
jne
cmp
pop
mov
and
push
outsb
test
mov
or
push
icebp
pop
mov
jbe
jge
test
sub
lahf
jmp
add
cmp
add
ljmp
mov
fsts
cmp
jae
adc
into
out
push
mov
into
dec
cwtl
loopne
push
jge
insl
imul
push
push
jl
adc
push
or
jge
scas
lahf
mov
sbb
daa
stc
sti
rorb
mov
repnz
mov
or
ja
pop
addl
sbb
mov
cmp
je
mov
mov
cmpsb
loop
or
shll
add
out
imul
jp
sub
xor
and
jge
cmpsb
jne
jne
or
dec
movsb
scas
xlat
mov
jmp
in
push
ja
pop
arpl
aad
push
or
jb
xchg
xchg
xor
lods
das
daa
inc
jns
and
and
adc
pop
jnp
sub
inc
popf
orb
jnp
lock
sbbb
xor
cltd
cmc
mov
testb
daa
xor
pop
sbb
ret
adc
lea
icebp
hlt
push
clc
inc
jbe
imul
fsubrl
stc
stos
or
lahf
jo
inc
push
jo
mov
inc
sbb
dec
pop
pop
pushf
addb
push
sbb
push
loop
sbb
mov
out
daa
inc
push
test
mov
add
inc
dec
pop
hlt
popa
lods
pushf
nop
push
shrl
ret
and
sub
inc
addr16
mov
mov
mov
jae
xchg
xor
jo
shll
dec
ficompl
loope
stos
xor
pop
inc
fbstp
mov
mov
push
in
dec
es
mov
cli
or
xchg
xchg
push
jnp
lods
xchg
xlat
sti
sbb
aaa
cmpsl
mov
pop
dec
mov
xchg
mov
repnz
inc
loopne
pushf
xor
insb
nop
in
es
addb
pop
mov
pop
sbb
adc
dec
or
ffreep
test
mov
push
cli
lret
pop
mov
dec
pop
lcall
int
adcl
sub
sbb
popa
and
repz
or
cli
jp
xlat
and
mov
mov
cwtl
pop
xlat
cld
mov
inc
cmp
jae
jmp
xchg
sub
test
inc
arpl
imul
mov
insl
dec
push
test
cmp
mov
fbld
push
pushf
stc
rclb
fsubl
mov
mov
sbb
sarb
cld
cmp
cmp
loope
repz
std
rol
and
jb
push
push
inc
lods
sahf
pop
dec
mov
stos
adc
cmp
cmpsl
pushf
push
int3
adc
sub
push
cmp
push
fisttpll
repz
pop
mov
dec
inc
mov
loop
jge
cwtl
bswap
sbb
cmp
xchg
lret
fwait
push
add
hlt
and
aaa
inc
and
out
es
xchg
cmp
das
arpl
js
cs
adc
cltd
lock
ret
sub
xorb
sub
jb
adc
push
push
mov
and
push
inc
adc
repnz
icebp
hlt
xchg
mov
adc
jb
inc
rcr
int3
fistpl
stos
cltd
cmpl
and
cmp
lahf
dec
clc
lret
add
push
test
add
inc
pop
cltd
adc
add
fsubrs
hlt
jg
hlt
adc
call
jnp
arpl
jno
add
inc
out
fsubrp
jle
push
fdivrl
scas
dec
dec
add
int
xchg
dec
fmul
repnz
dec
out
repz
mov
jle
xor
aaa
lods
test
and
xchg
into
cmp
rcl
jo
cld
xchg
or
mov
adc
js
nop
call
aad
int
xchg
imul
loope
sub
lret
inc
jp
imul
imul
add
mov
push
test
int
adc
popf
icebp
xlat
sub
testb
cmp
sub
jns
jo
outsb
jle
js
jl
incb
adc
cmp
cmc
fdivrl
push
gs
test
shll
mov
mov
in
in
xor
into
jp
jb
mov
js
xlat
pop
call
ficoms
adc
xchg
push
cmp
jg
fiadds
mov
mov
push
pop
cltd
repnz
rol
and
test
repnz
adc
pop
data16
fidivs
insl
mov
sbb
insb
pop
pop
mov
add
fldcw
movsb
pop
punpckhbw
repz
ror
mov
ljmp
sbb
xlat
adc
dec
adc
les
je
sbb
dec
fld
xchg
testl
sbb
insl
lods
adc
push
pop
sub
mov
mov
scas
scas
daa
test
loopne
add
std
adc
inc
imul
insb
push
pop
jecxz
fisttpl
cs
xchg
jl
or
xchg
cltd
xchg
mov
jmp
add
mov
cmp
xchg
cmpsl
enter
test
inc
mov
sbb
insb
cmp
loop
clc
jae
repnz
cwtl
ljmp
pop
rsm
ljmp
mov
in
sub
jmp
rolb
adc
inc
add
jl
mov
push
push
sbb
cld
pop
xor
mov
cwtl
fldt
outsb
scas
lock
mov
das
pop
cmc
mov
nop
hlt
loopne
mov
iret
in
mov
and
push
cmp
out
jg
scas
leave
out
sub
sub
cltd
add
adc
movsb
xor
mov
lret
cmp
jmp
mov
and
in
push
mov
or
inc
sahf
out
scas
cmp
fs
xor
in
aaa
dec
add
dec
mov
mov
lea
rolb
pop
sub
aam
mov
mov
adc
ss
bound
stos
jmp
outsl
sub
pop
loope
cwtl
adc
clc
xchg
xor
aam
repnz
cmpsl
mov
notl
pop
outsl
jnp
push
cmp
repz
adc
ret
pop
cld
sbb
bswap
lret
outsb
dec
mov
xor
aaa
cmp
and
sbb
adc
sbb
mov
sbb
sub
addr16
ljmp
xor
cmp
ja
ds
mov
dec
in
pop
mov
insl
sbb
out
aas
adc
push
mov
inc
gs
sub
pop
pop
fnstenv
aaa
ljmp
adc
push
sbb
xlat
pop
and
loopne,pt
leave
and
ret
sbb
cmp
pushf
frstpm(287
addb
dec
shrb
int3
sbb
push
loopne
or
dec
xor
or
inc
xchg
shrl
inc
ja
in
mov
nopl
mov
sub
repz
in
imul
xlat
inc
mov
fstpl
in
push
gs
xlat
outsl
push
jecxz
lahf
mov
insb
mov
pop
dec
mov
xchg
push
mov
push
adc
je
inc
push
jmp
mov
test
icebp
dec
movsl
imul
mov
cmpl
sub
pop
int3
jl
std
push
inc
inc
mov
mov
stc
lcall
je
add
fiaddl
test
sbb
mov
cmp
and
enter
mov
xchg
xchg
out
add
dec
sub
push
mov
jge
lahf
test
lcall
insl
imul
or
cmp
shll
inc
pop
adc
iret
adc
mov
xor
int3
mov
xchg
pop
pusha
jno
pop
jg
mov
pop
lahf
sbb
aad
adc
jge
or
je
ljmp
and
cmp
pop
test
sub
cld
das
popf
mov
repz
ljmp
dec
stos
popf
push
inc
sbb
jbe
sub
xchg
fst
cmp
adc
sbb
and
repz
sbb
cmpsb
push
inc
push
push
ror
xchg
and
sahf
divl
cmpsb
mov
jns
inc
int3
bound
adc
ljmp
add
arpl
push
adc
lahf
jmp
pop
xor
pop
cwtl
fistpll
rcll
mov
xor
dec
push
push
mov
dec
orl
cltd
std
sbb
js
sub
repnz
push
sbb
in
nop
xlat
loopne
fldt
ja
sti
in
xchg
into
movsl
fucomi
dec
cmp
push
or
pop
inc
mov
add
jmp
js
mov
repz
push
push
push
xchg
idivl
add
lock
lcall
and
push
add
and
enter
notb
ret
pop
stos
mov
or
sbbb
adc
jl
repz
daa
ret
xchg
arpl
inc
sub
mov
and
cwtl
cmc
mov
mov
data16
out
imul
fdivl
lret
inc
pop
cmpsb
sti
andl
dec
imul
jbe
lea
mov
shll
lcall
and
mov
test
jmpw
add
sbb
dec
das
adc
adc
lods
sbb
or
adc
and
push
repz
das
pop
mov
jbe
enter
and
cld
hlt
pushf
xor
push
pop
icebp
pop
xchg
pop
mov
cmc
fs
jb
or
sar
jle
fsubrl
addr16
pop
inc
xchg
pop
lea
fs
stos
sbb
pop
not
cli
xor
sbb
sub
lock
mov
mov
xchg
adc
inc
mov
xor
daa
mov
fs
and
scas
jo
mov
fsubr
push
xchg
in
push
mov
mov
jp
mov
ds
sbb
push
push
sub
cmpsb
outsb
pop
cmpsl
dec
cltd
jb
fnsave
popa
pop
xor
jmp
push
jl
cmpsb
rol
dec
test
xchg
hlt
xchg
mov
pop
mov
into
mov
aad
jmp
push
jb
mov
mov
fstpl
mov
adcl
mov
push
outsl
dec
cmpsl
fstl
cld
sbb
mov
out
das
cmc
add
fimuls
bnd
mov
pop
dec
clc
fnstenv
jb
movsb
shlb
into
lds
in
mov
jae
fdivp
sbb
inc
icebp
xchg
sbb
jge
ss
out
adc
mov
pop
into
in
test
xor
dec
insb
jle
xlat
xchg
pop
inc
js
jnp
sub
xchg
xchg
fcmovnb
shll
mov
aam
ret
in
push
int
mov
test
cld
stos
push
leave
mov
push
mov
dec
out
pop
scas
or
loope
test
lock
xor
rcl
xchg
test
xlat
sbb
nop
sar
inc
push
test
arpl
xchg
cmp
mov
xor
je
adc
test
sbb
push
loopw
mov
nop
hlt
rcl
jle
sbb
mov
mov
shlb
nop
or
jnp
xchg
je
insb
loope
mov
xor
cmc
mov
jbe
insl
push
and
sbb
loop
lcall
mov
ljmp
scas
scas
pop
js
addr16
hlt
or
mov
mov
push
in
arpl
inc
roll
jmp
es
lret
test
repnz
aaa
inc
test
xor
cmp
jbe
cli
mov
stc
nop
pop
fucom
sub
aam
nop
stc
cmc
adc
neg
in
fdivp
or
fabs
cmpsb
lock
punpckldq
adc
jbe
mov
xchg
pop
fwait
sar
jo
lods
sahf
mov
xor
push
or
sbb
lea
push
add
push
iret
inc
mov
sbbl
xchg
ret
mov
insl
insl
pop
bound
cmp
inc
dec
add
dec
xchg
insl
inc
inc
dec
sub
jae
test
sbb
jg
icebp
pop
xchg
mov
cwtl
cltd
cmpsb
int
fwait
sub
push
ret
shrl
xor
fnsave
bswap
js
fists
das
or
mulb
fs
int
stos
mov
fcomps
add
dec
sub
inc
rcrl
imul
push
pushf
aam
cmp
inc
adc
pop
cld
ror
enter
xor
mov
add
js
ljmp
sub
rorb
push
std
ja
ss
lret
mov
jmp
data16
out
xchg
hlt
ds
mov
lahf
and
xor
xor
test
or
test
popf
cmp
mov
lock
push
adc
pop
jl
out
dec
sub
lea
popf
repnz
xchg
sbb
pusha
pop
movsb
out
insl
pusha
stos
jp
inc
fisttpll
lea
and
adc
push
mov
dec
or
or
sbb
pop
les
pop
lahf
and
mov
leave
xchg
mov
pop
aam
xlat
and
inc
push
push
ss
cmp
jge
daa
adc
je
mov
sbb
fistpl
mov
adc
fnstenv
fldcw
xchg
movsl
cmp
lret
or
xchg
popa
dec
xor
inc
mov
aad
xchg
loop
hlt
jmp
sahf
jge
fs
subl
jnp
repz
ror
lahf
aad
lahf
inc
xor
inc
rorl
xchg
loop
fistpll
jns
loopne
push
jg
pop
mov
push
rclb
add
idivb
pop
test
or
mov
cmp
test
in
xchg
or
neg
push
add
adc
xor
repnz
clc
insl
orl
inc
les
sub
jae
or
jmp
jo
xchg
popf
add
add
cmp
addr16
outsl
cmp
in
sbbl
ja
mov
inc
sub
dec
and
adc
imul
push
cmp
lahf
aaa
nop
mov
call
iret
decb
es
push
xchg
notl
jbe
mov
jmp
scas
and
jno
add
je
push
jecxz
lds
and
fcomip
dec
loopne
imul
lds
dec
pop
sahf
int3
ja
sarb
mov
and
adc
in
inc
push
xlat
or
addr16
xor
scas
add
cltd
stc
aas
jbe
jno
dec
lret
dec
lret
or
and
testb
outsl
clc
cmp
stos
mov
icebp
clc
dec
sbb
push
cmp
mov
movsb
int
stos
jmp
cmpl
and
mov
pop
sbb
fiadds
add
pop
in
les
push
pop
ret
sahf
mov
push
jle
push
xchg
inc
roll
and
in
ret
js
xchg
jae
cmc
jae
jb
inc
lret
subb
mov
pop
jae
xchg
cmp
gs
push
add
aam
push
iret
pushfw
dec
rep
lret
push
cmpsl
je
sub
ret
mov
jmp
pusha
sbb
dec
cmpsl
cmp
jo
jne
pop
aaa
jmp
xor
cli
mov
sbb
jl
push
mov
shrb
data16
in
iret
scas
addr16
xchg
insb
and
jge
mov
mov
imul
inc
push
sbb
mov
scas
test
ds
insl
or
sub
int
outsb
daa
adc
cmc
testl
fnsave
arpl
add
cltd
mull
mov
mov
icebp
mov
out
lods
je
mov
popf
dec
imul
and
xor
sub
pop
pop
xchg
addr16
push
xchg
repnz
clc
stos
cld
lock
cmp
ljmp
addr16
adc
mov
scas
repz
sbb
mov
stos
or
mov
mov
fidivs
xchg
add
cmpsb
mov
rorl
mov
jnp
aam
xor
pusha
inc
je
mov
loope
dec
push
movsl
inc
roll
mov
adc
push
mov
lcall
xor
jbe
fdivrs
iret
add
mov
sub
cmc
std
loop
cs
push
xor
fcompl
sbb
and
fdivr
mov
jb
add
xchg
and
cmc
cli
or
lret
jne
stos
jns
jecxz
xchg
loope
or
lods
mov
and
les
dec
push
inc
xchg
mov
adc
std
mov
push
mov
cmpsl
adc
cmp
aam
dec
lahf
and
adcb
mov
scas
cltd
xor
cmc
or
cmp
fbld
data16
loopew
lcall
mov
mov
aas
inc
dec
xchg
pop
ret
cld
add
mov
cmc
cmp
push
fidivrl
mov
js
aas
inc
ss
test
xchg
int3
idivl
dec
xor
mulb
dec
cmp
or
ret
leave
cmp
add
adc
ficomps
aad
and
mov
dec
mov
rcrb
daa
imul
sbb
adc
or
not
cli
out
push
ret
testb
cmp
and
jo
xor
jmp
adc
lds
enter
push
arpl
sub
dec
mov
mov
shll
jnp
popa
and
jge
mov
loopne
cmp
ja
add
sub
stc
cmpsb
lods
into
subb
sub
cs
daa
loope
push
jecxz
lahf
mov
rclb
push
sub
cmp
add
leave
xchg
cmp
mov
in
daa
jle
mov
xchg
cmp
aad
push
jg
sbb
stos
ds
cmp
cmc
mov
mov
clc
jmp
loope
sub
mov
xchg
push
aam
pop
daa
loop
imul
lahf
push
addl
sub
or
fcoms
adcb
push
xor
inc
bound
mov
add
loopne
js
pop
jle
sub
enter
mov
dec
iret
jno
add
aad
xchg
bnd
jno
mov
cmp
outsl
add
mov
push
mov
jecxz
push
sub
inc
daa
cli
or
pusha
pop
mov
xor
xchg
gs
sti
lret
jno
out
repnz
sbbl
sti
sbb
js
pushf
dec
dec
jbe
push
push
test
jg
je
out
push
add
cli
xchg
mov
or
mov
cmp
or
mov
aas
paddsb
popf
inc
ret
mov
loop
pop
fildll
jb
mov
mov
cmp
sbb
lea
cwtl
xorl
inc
sahf
faddp
dec
gs
mov
xchg
adc
lcall
lcall
and
cmc
std
adc
sbb
in
rcl
inc
cs
jg
stc
jns
das
ja
in
das
mov
in
int3
cmp
shl
dec
pushl
cmc
xchg
movl
cmpb
loopne
ret
vpcmpeqd
add
push
adc
mov
lahf
inc
das
orl
jg
cld
and
aas
incl
leave
ljmp
add
cwtl
stc
and
lods
arpl
sbb
push
into
mov
push
xor
push
mov
js
mov
fsubrs
push
add
xchg
pop
sahf
fyl2x
and
shrl
cmp
or
jecxz
mov
jne
jge
mov
das
sar
rcrb
mov
rcrl
mov
ljmp
push
fxch
pop
lret
adc
scas
or
xor
push
mov
mov
pop
out
xor
enter
int3
dec
in
xchg
cwtl
in
mov
imul
lea
dec
pop
shlb
mov
jmp
push
pop
sahf
or
dec
mov
sbb
push
aad
and
jbe
dec
pop
sbb
add
jae
leave
lods
sbb
subl
mov
fidivrs
push
add
push
mov
icebp
stos
jl
nop
fwait
int3
pushf
hlt
dec
jecxz
fisubs
imul
jns
cld
cltd
mov
pop
popa
pop
cmp
pop
xchg
push
and
push
push
or
es
inc
hlt
or
cmp
repnz
mov
fsubs
out
jne
movsl
inc
jae
cli
xchg
jl
pop
ror
fisubrl
dec
push
pop
movb
xchg
xchg
sub
or
jns
ja
dec
jno
imul
jmp
lret
nop
dec
imulb
mov
or
test
sub
jge,pt
ret
scas
addr16
fadds
dec
adc
mov
in
or
aaa
and
in
dec
inc
pop
pop
filds
adc
mov
and
push
mov
jne
dec
notb
jnp
add
pop
xor
std
loope
getsec
push
lcall
js
xor
ljmp
fwait
testb
sub
pop
cwtl
fwait
mov
lret
stc
call
stos
mov
sub
jle
cmp
jne
xor
push
sarb
scas
jl
adc
add
sbb
aam
lahf
jmp
dec
jo
sahf
std
mov
mov
test
shr
aad
push
add
or
outsl
cmc
or
pop
and
nop
jnp
js
fbld
push
cli
or
cmp
mov
jecxz
aad
mov
pop
cmp
mov
cmpsl
or
pop
or
adc
push
in
stos
in
leave
testl
loope
xchg
xor
mov
mov
cmp
or
test
std
sbb
adc
mov
lcall
adc
add
ret
mov
cmp
incl
lods
sub
loope
leave
or
std
xchg
fdivs
mov
rol
adcb
inc
dec
fsubs
jb
fidivl
pop
ficoms
xchg
addr16
aaa
mov
sbb
push
push
enter
inc
pop
pop
movq
and
leave
cmp
stc
sbb
jno
inc
mov
push
push
sub
lds
jg
cmp
jb
or
js
pop
inc
je
mov
fbstp
dec
inc
adc
rcl
stc
xor
inc
xchg
push
test
sub
adc
aas
jge
ds
lcall
xchg
add
sarl
xchg
popf
push
subb
pop
push
push
mov
outsl
test
push
dec
fmulp
stos
add
scas
xchg
mov
ret
cli
cwtl
clts
test
mov
out
cltd
sbb
mov
jg
pop
and
jmp
xor
inc
xchg
add
ds
fidivl
push
rcll
mov
insb
sbb
and
sub
push
mov
loopne
rcl
test
sub
rcll
mov
inc
push
push
fnstcw
sti
mov
cwtl
stos
pushf
xor
orl
stos
mov
into
mov
and
jns
xchg
sub
js
push
loopne
out
lea
pushf
jg
ret
sahf
clc
lds
stos
je
cmpsb
pop
push
jae
sbb
pop
sub
aaa
fidivrl
cmp
sub
mov
cmpb
insb
in
in
mov
das
xor
xlat
mov
sub
and
xchg
mov
inc
dec
mov
mov
lea
ljmp
sbb
stos
sbbl
repnz
adc
test
addb
add
mov
push
shrl
mov
pop
leave
mov
cmpsb
push
negl
lret
xlat
cltd
cli
xor
repz
mov
gs
adcl
movsl
outsl
mov
insb
sub
push
repz
mov
popa
lods
test
insl
lods
in
loop
jmp
adc
adcl
int
jl
pusha
mov
and
add
addr16
push
adc
xor
test
fdivs
mov
aas
xor
ret
dec
imul
mov
cmp
sub
inc
cmp
jg,pt
cmp
aam
mov
add
mov
pop
loopne
fdiv
pop
inc
movsb
rorl
xor
and
int3
or
sub
sub
outsl
sarb
aad
push
push
mov
mov
pop
ds
mov
je
rcr
into
push
in
jae
xchg
jmp
inc
lahf
pusha
inc
push
push
pop
dec
inc
ss
shrb
mov
mov
inc
sbbl
in
dec
fdivrl
push
dec
xchg
pop
pop
and
fildll
pop
stc
inc
jl
ret
out
cmp
or
and
and
in
adc
ja
gs
xchg
cmpsl
data16
push
enter
mov
inc
lcall
pop
lret
cmp
mov
cmpsb
dec
outsb
mov
daa
in
cwtl
data16
out
insb
loop
jo
out
aad
inc
addl
loope
fimuls
cmpsl
popa
mov
sbb
jle
insb
jae
cmpsl
mov
out
imul
cmp
and
mov
mov
mov
mov
mov
jae
fsts
xchg
push
mov
push
out
cs
xchg
and
add
repz
xchg
mov
mov
ret
int3
out
cwtl
aas
jl
les
xor
ficompl
in
ret
sbb
mov
rcrl
inc
stos
or
sbb
in
cmc
xor
lods
xchg
add
sarb
loope
inc
push
mov
push
in
jb
add
pushf
sub
pushf
mov
lcall
dec
pop
inc
fwait
inc
hlt
popa
sbb
cmpsl
sahf
push
pop
rol
and
xchg
add
or
notl
shlb
xor
cltd
pop
movsl
mov
mov
nop
nop
mov
hlt
jmp
xlat
mov
push
pop
xor
movsl
xor
pop
enter
jb
mov
sub
lcall
ret
xlat
adc
dec
jp
push
loope
mov
jg
repnz
add
cmp
cmp
push
jo
fisubrs
lods
mov
adc
inc
mov
inc
stos
out
movsb
movsb
and
cs
sbb
pop
call
incl
js
or
stc
cmp
sbb
scas
cld
in
psraw
or
mov
xchg
out
testb
add
repz
scas
repz
into
cmp
bound
scas
notl
icebp
fcmovnu
cld
push
pop
or
out
das
adcb
outsb
cs
cmpsb
push
or
outsl
in
movsl
cld
jl
xor
mov
lods
push
loopne
mov
popf
cwtl
jne
lods
js
push
push
in
jnp
push
frstor
lahf
sbb
cmp
lods
das
and
pusha
adc
push
or
outsl
std
nop
in
nop
and
ss
fwait
mov
sub
sbb
mov
lods
sbb
mov
xor
ja
adc
sbb
inc
adc
lea
mov
inc
lock
icebp
and
pop
into
and
or
rorl
loope
je
push
shll
jns
enter
xor
aas
cmc
leave
mov
stos
cmp
stos
jns
out
std
and
lock
aad
or
inc
rcr
or
mov
pmaddwd
dec
std
mov
sbb
addl
pop
fucomp
inc
xor
pop
xor
mov
fisubl
outsl
mov
icebp
insl
inc
xchg
adc
fisttps
ja
test
cmpsl
out
aad
dec
call
test
aam
es
xor
pop
mov
sbb
push
mov
mov
pop
mov
test
in
xor
mov
mov
xchg
div
pop
xor
std
inc
cmp
cmpsb
inc
std
ret
out
gs
fdivl
cld
cli
inc
or
pusha
jmp
jg
xor
mov
out
es
and
andb
jbe
xchg
sub
adc
das
cmpl
movl
shlb
cmp
aam
call
xlat
or
xor
cmp
add
pop
dec
mov
mov
rcrl
sysexit
adcl
test
add
xor
insb
mov
push
mov
xor
mov
iret
mov
mov
insl
gs
out
cmp
orb
outsb
dec
dec
pop
aaa
int
add
mov
je
sub
imul
cld
jmp
mov
jbe
imul
repnz
ret
xchg
lcall
xchg
adc
insl
rcrb
sub
loope
mov
jns
mov
rcrb
mov
pop
ss
mov
es
push
xor
pop
inc
loopne
aam
movntq
out
addr16
pop
sbb
icebp
lcall
mov
cmp
icebp
adc
stos
mov
inc
nop
test
xchg
fildl
lds
or
popa
pushf
add
pop
sub
insb
adc
hlt
sub
enter
rcl
mov
bound
and
pop
inc
mov
xor
iret
and
inc
cmp
xchg
clc
push
fists
jae
or
add
cmp
cld
pusha
adc
xchg
jo
lcall
sub
fs
mov
pushf
out
sbb
xor
mov
sbb
fldcw
and
mov
shll
dec
mov
stc
push
ret
mov
ror
mov
jle
lods
fsts
mov
push
or
cmpl
out
out
mov
int
and
xchg
lds
cmp
jl
push
test
mov
pop
mov
adc
push
rorb
push
call
stos
imul
sub
mov
xchg
push
insb
push
sbb
neg
mov
cli
inc
push
test
xchg
scas
fs
push
lahf
sub
and
lock
out
mov
insl
cli
mov
js
jnp
jg
sbb
xchg
lods
push
xor
mov
pop
enter
call
adc
inc
mov
jb
mov
outsb
lret
or
faddl
jnp
inc
aas
loope
xchg
adc
pushf
insl
lahf
or
stos
popa
popf
movsl
loop
fsubrs
insb
push
rcll
pop
dec
lods
xchg
cmpsl
push
inc
lahf
xor
pop
iret
jg
aam
xchg
les
inc
lods
ljmp
fdivrl
ljmp
push
std
cmp
sub
fidivrl
pop
rcrl
in
lods
aam
jne
sbb
adcl
fildll
pop
pop
push
add
mov
mov
adc
xlat
mov
js
mov
xor
cwtl
jno
lahf
push
mov
movb
lcall
xor
adcl
xchg
outsb
add
fisttpll
or
mov
shrb
mov
lret
mov
js
icebp
jp
cld
fnstsw
notb
mov
push
iret
test
adc
inc
ds
lret
sti
test
and
outsl
test
jb
sub
cmp
push
dec
cmpsb
out
and
in
icebp
fldl
test
popf
mov
fists
sahf
jl
and
cs
shrl
faddl
iret
sub
fldl
jne
mov
shl
sub
fdivrl
or
and
xor
andb
inc
jo
aad
adc
sub
data16
sbb
dec
add
shrb
insl
nop
pop
cmpsl
or
adc
nop
adc
inc
loopne
pop
sub
gs
mov
pop
inc
or
mov
lcall
add
mov
les
rcl
jl
popf
repz
and
jge
add
xchg
ja
xchg
sbb
jmp
leave
inc
inc
mov
xchg
shlb
andl
int
fs
hlt
dec
test
cmp
ficompl
cmp
lods
icebp
out
repnz
push
cli
icebp
and
push
scas
call
inc
lock
mov
mov
jl
pop
out
ret
inc
sub
daa
adc
jp
sub
pop
shrb
mov
mov
stc
or
fs
std
push
xchg
cld
cs
fisubl
int
cwtl
pusha
sub
and
xchg
out
xor
fnsave
mov
inc
mov
pusha
mov
sahf
and
jo
dec
test
add
or
dec
sub
ss
test
jmp
cmp
lcall
ficoms
sbb
pushf
adc
pop
cli
sub
xchg
cmp
out
adc
lahf
jno
cmc
sahf
sub
jo
mov
dec
sarl
xorl
pop
data16
pop
inc
pop
movsl
mov
faddp
loopne
jmp
mov
popf
add
ficompl
push
insl
fsubrl
pushf
aad
mov
fidivrs
ja
mulb
sub
loopne
imul
pop
shrl
iret
scas
sti
test
imul
xchg
pop
or
movl
call
imull
imul
dec
mov
pop
push
das
aam
jne
cmp
fisttpl
sbb
lea
xchg
add
inc
jae
nop
adc
mov
movsb
mov
sbbl
inc
and
adc
jp
cmpsl
and
or
jb
in
jle
or
xor
iret
push
sub
insb
adc
notl
add
mov
int
xchg
mov
lods
in
jg
adc
es
push
fldenv
push
pop
into
and
scas
mov
sahf
lcall
imul
pop
int
mov
mov
jne
cmpsb
bound
add
adc
jmp
pop
push
test
mov
ljmp
mov
mov
lcall
daa
push
inc
dec
scas
cmp
sbb
in
fwait
negb
orl
mov
rorl
sbb
int3
mov
add
xchg
lahf
jl
mov
lcall
dec
add
pop
push
fistpll
sti
xor
in
scas
xor
ds
lds
data16
mov
hlt
xlat
out
mov
pop
add
into
jl
rcr
popf
and
and
test
jle
cmp
xor
fcmovnb
jo
arpl
idivb
outsb
xchg
cmp
push
pop
decl
out
dec
ljmp
in
movsl
mov
cmp
aam
xchg
push
aad
push
jo
loop
push
rcrl
movsl
adc
ror
add
pushf
cmp
outsl
dec
iret
jnp
cmp
inc
scas
sbb
adc
push
sbb
pop
ret
adc
fistpll
icebp
dec
stos
pushl
cwtl
arpl
mov
out
ja
std
add
nop
fs
aad
dec
fstps
jmp
shrb
mov
push
xorl
sub
rcll
mov
pop
mov
repnz
sbb
inc
or
xor
inc
lods
add
or
popf
lods
out
pop
xor
pop
imul
pop
into
cli
jecxz
out
sbb
leave
ret
mov
sbb
add
in
xor
out
int
mov
cwtl
jno
mov
clc
jns
sbb
jb
clc
fsubrs
sarl
js
mov
inc
data16
insb
mov
rcrl
push
mov
test
outsb
jecxz
clc
mov
gs
lahf
xchg
add
jl
test
mov
pusha
dec
xor
cmp
aad
das
sti
fdivs
test
cli
call
jne
mov
arpl
jbe
xchg
bound
outsl
daa
arpl
ja
cs
sbb
dec
mov
mov
pmuludq
test
xchg
cmp
cs
mov
js
insb
cld
mov
test
adc
lock
adc
jg
cmp
xlat
xor
push
sub
imul
aaa
imul
out
rolb
mov
fcmovbe
outsl
scas
pop
inc
sub
sbb
sahf
pop
lahf
stc
adc
add
push
xchg
test
inc
jecxz
andb
jmp
and
jmp
cmpsl
add
into
fidivl
cli
and
sbb
lret
lahf
jecxz
jge
or
dec
push
divl
icebp
arpl
pop
push
arpl
mov
pop
xchg
je
xlat
sub
mov
push
jb
movsb
push
fdivrs
sahf
mov
sbb
push
or
cmp
icebp
fdivr
adc
ret
mov
bnd
outsl
sahf
xchg
lods
lea
mov
push
scas
or
jecxz
dec
and
adc
push
jecxz
hlt
out
mov
mov
xchg
in
outsb
fdivrl
enter
jmp
sahf
pop
sbb
mov
ds
xor
push
mov
jecxz
mov
aad
into
mov
push
outsb
into
imul
mov
sbb
or
dec
or
shll
roll
rcrb
or
dec
loope
jae
pop
mov
sbbb
test
adc
movsb
ja
or
jne
mul
cwtl
lret
push
mov
xchg
in
adcl
in
les
pop
xorl
pushf
sbb
aas
call
int
jge
idiv
xor
into
arpl
call
xor
ret
sub
sbb
fbld
lods
dec
add
jecxz
loopne
adc
test
inc
pop
push
lods
cmp
cli
mov
dec
frstor
test
scas
and
mov
sbb
popf
daa
mov
and
xchg
or
adc
cmc
or
mov
data16
inc
push
push
and
add
addr16
ja
push
push
mov
xchg
xchg
jne
lea
js
dec
jbe
xchg
mov
popa
mov
daa
add
and
gs
cmp
in
xchg
loop
push
ret
daa
fs
sub
lret
dec
testl
mov
insl
sbbl
imul
cmp
movsl
push
mov
stos
sbb
sub
pop
push
out
and
pop
xchg
pushf
cmp
cwtl
adc
adc
mov
push
jmp
movsb
adc
loope,pt
inc
call
pushf
ret
push
and
mov
out
jmp
push
es
adc
rcl
rolb
div
js
ljmp
call
xchg
inc
rorb
mov
mov
cmp
pop
dec
cld
pop
pop
in
xor
push
cld
or
jne
pop
test
aad
jnp
gs
mov
inc
ret
mov
dec
pop
or
es
jne
test
push
hlt
pop
xchg
ds
imulb
mov
add
xchg
inc
insb
cmp
lret
mov
stc
mov
adc
jnp
sbb
dec
cmp
pop
mov
sub
jno
mov
rcl
push
orb
cmpsl
jmp
mov
xchg
xchg
push
gs
outsl
add
cwtl
ljmp
pop
lock
loop
mov
test
repz
test
cli
icebp
rsqrtps
add
mov
shll
jb
jg
mov
popf
jno
pushf
jle
fs
jmp
dec
fistl
test
fsubrl
cmpsb
jnp
gs
lods
cwtl
push
push
and
sbb
or
mov
bound
mov
xchg
cmpsb
pop
push
xchg
pop
adc
add
pop
sti
repnz
inc
mov
arpl
push
xchg
cmp
cmpsb
js
dec
jg
sbb
adc
out
dec
test
xor
sub
dec
les
fmulp
mov
loop
fisubrl
xchg
pusha
leave
test
cmpb
in
mov
xchg
jp
fwait
and
and
lahf
xchg
fs
xor
lret
sub
xchg
push
lret
add
push
pop
jns
movsb
in
sub
repz
fcmovu
nop
mov
xor
test
hlt
lock
lds
dec
adc
scas
mov
push
pop
sti
iret
adc
inc
in
push
add
push
sub
pop
scas
shrb
push
and
in
ret
movsl
adc
mov
cmc
mov
mov
mov
call
jl
movsb
mov
clc
bound
fsubrs
rcr
out
xchg
std
scas
and
mov
cmp
outsl
mov
aas
pop
test
inc
adc
aam
mov
jno
dec
je
pop
jo
lcall
pop
clc
adc
fcoms
mov
sbb
dec
jno
or
fiadds
js
lcall
push
repnz
test
xchg
ret
sub
je
mov
mov
mov
mov
inc
imul
mov
or
sub
es
ds
inc
cmp
push
push
popa
rcrl
mov
or
pop
xchg
insb
out
mov
mov
cmpsb
sti
push
pop
push
inc
scas
mov
sub
test
iret
in
out
xlat
inc
bound
and
imul
jbe
add
imull
sahf
leave
inc
loope
push
jns
dec
shl
push
push
mov
sbb
in
aad
sub
xchg
mov
push
lods
mov
sbb
mov
das
pop
mov
lods
in
aad
aaa
sbb
aam
dec
in
arpl
or
xor
xor
cltd
pop
bound
std
sti
in
movsl
push
daa
mov
xor
les
adc
adc
ljmp
pop
and
sub
data16
xchg
cmp
dec
push
add
data16
fsubr
jne
movsl
push
pop
inc
inc
inc
movsb
cmp
mov
dec
jns
cld
jns
cmpsb
xchg
adc
cmp
les
mov
jle
xchg
test
cli
jno
xor
mov
sbb
sbb
add
jns
stos
dec
lods
sbb
and
out
jo
or
jns
jo
xchg
inc
push
or
lret
mov
test
rcr
cltd
int3
cmpsl
loope
lret
cltd
xor
push
rcrb
xlat
in
xor
xchg
mov
jmp
mov
sub
sub
xchg
popf
or
jecxz
stos
pop
xchg
mov
outsb
push
inc
jnp
mov
pop
lret
lods
int3
adc
push
jbe
inc
sub
or
mov
aas
sub
lret
in
and
je
jle
pop
ds
jns
jecxz
lods
or
inc
jno
nop
mov
pop
push
test
js
cmp
insb
pusha
stos
dec
repnz
fisubrs
test
outsb
and
xchg
std
xchg
mov
flds
lds
mov
fwait
and
hlt
movsb
scas
fstpl
clc
popa
inc
jmp
mov
add
or
lret
lods
je
or
rcl
xchg
cmp
aam
jb
je
and
es
adc
push
or
sbb
in
call
push
mov
inc
int3
dec
ja
xor
leave
jge
mov
movq
jmp
mov
insb
outsb
pushf
adc
pop
stc
ud1
sub
aad
push
shl
loop
sbb
add
lea
fcoml
cs
sbb
in
idivl
sub
jb
and
aad
push
sub
dec
lahf
mov
insl
clc
pop
leave
mov
lret
popa
jo
adc
dec
test
imul
test
fdivl
adc
sub
cwtl
mov
push
cwtl
scas
and
inc
push
xor
insb
cmp
or
jl
sbb
adc
dec
xor
mov
pop
out
jg
insb
test
pop
mov
inc
push
mov
iret
xor
or
cmp
adc
pop
cltd
call
lods
mov
aad
iret
cs
mov
cmpsb
mov
hlt
cmp
daa
jo
fnstenv
out
and
jnp
imul
jge
cli
rol
mov
and
hlt
inc
fwait
lea
stc
cltd
or
push
bound
mov
and
flds
stc
xchg
sub
or
xchg
pop
jb
gs
jp
lods
nop
loope
subb
test
ds
int3
sbb
loop
fisttpll
or
imul
xor
aad
std
in
jle
inc
repnz
adc
lds
and
into
inc
enter
std
mov
leave
stos
aaa
adc
pop
or
push
xlat
stc
mov
or
add
cwtl
mov
pop
mov
mov
mov
push
jl
dec
sub
inc
jl
mov
pushf
aam
or
fiaddl
enter
push
jae
cmp
mov
aam
ret
cmovge
jmp
sbb
sahf
icebp
sbb
clc
pop
in
repnz
push
test
xchg
fs
or
dec
test
dec
in
pop
push
sbb
movsb
sahf
sbb
ret
jge
icebp
xor
bound
ds
shlb
out
jg
xorb
testb
xor
jg
mov
sahf
jle
loop
scas
pop
pop
popf
ds
sub
jns
sahf
dec
stos
push
rcrl
sub
es
in
lret
jmp
fisubrl
jae
test
cli
nop
andb
jecxz
xchg
lock
lret
jmp
xorb
mov
rol
xor
add
pop
rcll
inc
pop
cmc
xchg
cmpsb
and
push
enter
rolb
jne
xchg
mov
mov
jmp
outsb
jp
lods
fsubl
sub
xor
cmc
push
xchg
push
xchg
mov
stos
cmc
push
out
mov
pop
mov
xchg
repnz
mov
pop
sbb
jae
and
testl
push
or
gs
sbb
loope
cwtl
stc
xchg
fsubs
push
inc
inc
pop
addr16
loope
sahf
sbb
movsb
or
pavgb
imul
mov
push
gs
gs
jnp
add
sbb
int
test
fs
lods
das
push
lods
ret
adc
mov
pop
out
ret
sbb
pop
adc
jl
fs
mov
and
push
jg
es
sbb
aad
pop
cmpsb
mov
dec
add
pop
add
push
or
mov
rcrb
cmc
cmp
or
xchg
out
out
fldenv
icebp
jecxz
out
popa
iret
mov
test
popf
js
nop
mov
push
mov
mov
stos
cmp
adc
rcr
notl
pop
in
cmp
push
addr16
and
jno
mov
and
sub
jno
inc
lret
xor
out
sbb
jmp
cmp
stc
outsb
out
aas
dec
pop
in
add
pop
fists
ret
fstpt
negl
insl
sub
loope
and
ja
cmp
mov
divb
add
pop
inc
daa
in
cmp
lcall
cmpsb
lods
cld
testl
out
mov
imulb
lcall
lahf
xchg
enter
mov
dec
adc
lds
push
pop
push
sub
mov
dec
sti
fdivrl
inc
and
leave
jmp
jecxz
idivl
negl
sbb
jmp
sbb
sub
mov
fildll
sub
enter
and
fsubs
outsb
addr16
ret
aaa
scas
test
or
mov
xor
dec
sbb
rolb
lods
pop
sti
adc
push
lock
push
idivl
push
jecxz
pop
push
pushf
cmp
mov
sbb
pop
fucom
mov
push
sbb
rcll
iret
push
shl
lds
enter
test
movsb
repnz
mov
mov
testl
push
adc
jae
insl
ds
cs
fstps
push
jmp
and
int
lcall
xor
push
je
std
mov
sarl
dec
inc
ret
pushf
out
pop
sub
or
outsl
xchg
mov
int
int3
lods
arpl
movsl
mov
sbb
add
mov
cld
sub
xchg
jl
push
das
scas
xchg
xchg
mov
push
push
rcrl
or
test
jnp
outsl
inc
out
xchg
cli
or
mov
stos
xchg
sbb
xchg
jecxz
pop
cwtl
dec
or
inc
mov
dec
in
das
addr16
inc
add
inc
ljmp
psrad
cmc
idivl
or
xchg
push
mov
js
in
loop
fldt
mov
xor
imul
sub
std
pop
xor
stc
xchg
mov
push
push
xorb
cmp
scas
subb
jmp
outsb
xchg
sub
mov
pop
mov
mov
andb
imul
jmp
ret
xchg
inc
stc
push
and
enter
les
mov
incb
test
push
xchg
pop
cld
pop
enter
adc
movsl
add
movsl
es
xchg
movsl
dec
pop
push
and
int3
mov
push
xchg
xor
cwtl
xchg
dec
mov
in
mov
adc
inc
ja
push
sahf
xchg
fwait
adc
mov
xchg
jbe
dec
mov
and
push
lahf
inc
push
adc
and
aaa
std
stc
in
sti
lret
leave
sub
jl
and
pop
loope
or
mov
pusha
or
jecxz
cmp
sbb
mov
sbb
and
sahf
clc
sbb
orb
push
insb
rcrl
mov
or
fistl
adc
inc
stos
xchg
xchg
outsl
pop
aam
and
cld
inc
in
cltd
gs
psubq
jns
push
mov
xchg
vphadduwd
pop
das
jg
fwait
pop
inc
sbb
cltd
stc
cmp
jo
dec
cwtl
pop
cld
inc
sbb
mov
popf
pusha
cltd
jmp
fwait
in
jle
jnp
add
jne
leave
fisttpl
xchg
inc
lret
dec
mov
xor
and
iret
je
ret
mov
sbb
fldt
xlat
or
cmc
test
sbb
hlt
inc
out
inc
pop
or
and
push
pop
pop
cmpsl
ret
jbe
and
lock
dec
ds
or
xor
mov
mov
clc
les
add
jp
aad
ljmp
mov
sbb
jns
jge
in
stos
fwait
mov
mov
fdivl
loop
rorl
rcr
pop
xor
into
and
call
adc
xor
and
nop
sbb
jnp
inc
stos
popl
or
push
les
jno
and
cmpsb
cmp
cmp
dec
outsl
cmp
imul
pop
pop
outsl
xchg
fs
loope
push
shll
add
test
outsb
jno
mov
cmp
mov
mov
imul
push
pop
aaa
push
jo
mov
fnsave
in
cmp
mov
fisttpll
adc
bound
loopne
push
aas
or
fwait
dec
or
std
jb
aaa
mov
add
cmp
pop
lcall
bound
mov
movsl
int
push
cmpsb
xor
dec
ficoms
adc
dec
pop
mov
test
fs
fldcw
icebp
ja
dec
subl
je
ret
xchg
push
mov
clc
out
fcomps
sbb
cwtl
dec
movl
rcrl
sub
jl
push
fnsave
push
andps
pop
das
idivb
sub
sbb
lods
inc
icebp
and
mov
in
movsb
inc
jbe
mov
test
adc
aad
adc
ds
cmp
xchg
lods
sahf
mov
xor
xchg
mov
scas
cmpsl
push
int
jns
cli
imul
hlt
imul
stc
pop
adc
pop
inc
stc
or
test
ret
and
jnp
cmp
fwait
sub
int3
fcomp
leave
inc
ss
jecxz
push
in
out
inc
jbe
dec
or
xchg
cltd
push
sbb
jns
dec
jmp
mov
test
mov
xor
push
xor
jecxz
dec
mov
xor
nop
xchg
inc
cli
xor
loopne
std
jp
leave
pop
clc
xchg
mov
testl
pop
pop
fcoml
add
popf
jns
jle
inc
fs
adc
out
addl
scas
icebp
ds
cmp
pop
pop
mov
hlt
push
test
insb
add
aam
sub
xlat
xchg
fwait
and
and
test
pusha
jno
icebp
lds
lret
addr16
mov
jle
in
and
fcomip
pop
inc
jl
fimuls
mov
lods
dec
outsb
push
pop
jmp
movsl
mov
pop
repnz
xchg
ret
int3
push
push
popf
xor
xchg
cmp
popf
mov
push
jmp
adc
loopne
sbb
jne
imul
push
lock
clc
scas
dec
dec
out
pusha
mov
mov
addl
add
add
in
sub
dec
test
or
mov
out
push
test
inc
rcr
nop
hlt
add
jo
mov
repnz
sbb
push
jmp
test
push
adc
lret
pop
or
les
jmp
js
repnz
loope
mov
mov
loopne
inc
test
mov
lahf
mov
out
cmp
mov
sahf
in
mov
pop
push
cmpsb
outsl
in
fs
jo
mov
mov
rcl
xchg
ljmp
inc
mov
xchg
int
sbb
in
test
or
hlt
xchg
xor
add
aam
inc
loopne
mov
xchg
in
lcall
push
and
cmp
pop
inc
push
add
sbb
sahf
sarl
xor
aaa
inc
inc
lds
sbb
out
adc
dec
sub
lret
aas
jae
xchg
fdivl
ja
gs
sub
pop
jo
inc
or
in
dec
in
jns
in
xlat
test
push
or
stc
shll
sub
repnz
lock
jb
xor
jbe
xor
sub
lods
and
adc
jecxz
mov
push
inc
xchg
test
nop
movsl
push
cmp
or
inc
jbe
aas
cmp
cmp
mov
mov
rorl
push
lret
mov
fmuls
mov
cli
lock
shlb
xlat
test
les
sub
bound
test
cmp
mov
cmp
mov
cld
push
push
mov
add
pushf
dec
mov
xor
push
jnp,pn
push
push
adc
lods
jle
test
js
or
cmp
subb
popf
cmp
sub
sub
jl
std
and
in
mov
sub
jne
pop
lret
mul
aam
lahf
int
sbb
loop
andl
adc
gs
test
add
jns
fisttpll
mov
pushl
pop
int3
push
inc
dec
icebp
fistl
lea
dec
mov
mov
clc
pop
xor
cmp
pusha
push
ret
mov
sub
adc
mov
call
cmp
popf
mov
aas
arpl
fisttps
and
popf
nop
fcomip
add
jle
pop
popa
cmp
add
mov
sub
pop
cltd
adc
jle
inc
mov
mov
pop
lock
js
push
insl
and
insb
xchg
sub
mov
or
push
add
test
pop
aaa
jl
shlb
jne
cmpl
dec
mov
out
xchg
int3
and
mov
cmp
mov
jl
lds
jo
xchg
mov
ds
dec
push
mov
shlb
addl
ret
push
es
dec
and
int3
popf
out
add
in
lock
rcll
push
mov
fcmovb
sub
cltd
loopne
out
sub
jb
clc
loope
sub
mov
leave
jmp
addr16
adc
mov
ss
xchg
sti
aas
xchg
jecxz
test
or
iret
cmp
xchg
test
js
add
cmp
inc
out
sub
cmp
shlb
ja
mov
outsl
jecxz
cmp
cmp
mov
cmp
imul
push
sahf
bound
mov
fnstcw
push
mov
push
rcll
mov
andl
jb
inc
mov
sbb
jge
test
rclb
loope
rcr
in
popf
dec
mov
in
jb
push
arpl
adc
sbb
pop
xor
push
in
test
or
imul
shrl
push
dec
cltd
xlat
cmp
mov
es
mov
adc
andb
cld
std
insb
xchg
xor
aas
test
xchg
jl
sahf
ftst
mov
mov
lea
pop
jae
out
addl
popa
test
out
cmc
add
jbe
sbb
mov
or
loope
outsb
out
sti
sub
bound
dec
in
movsb
lds
aam
pushf
and
or
notl
je
and
xchg
int3
or
xchg
outsb
sahf
call
flds
pusha
inc
xchg
sarb
shr
arpl
xor
lds
test
cld
lret
js
dec
mov
ja
push
lahf
int3
cmp
mov
mov
lcall
dec
inc
out
pop
or
mov
jg
fnstcw
aam
test
mov
int
pop
mov
scas
fmul
push
out
adc
mov
in
jb
pop
cld
inc
lock
idivb
mov
pop
aam
in
xlat
or
cmp
mov
or
jbe
push
iret
fisttpll
clc
xor
lret
jns
scas
dec
lods
lods
or
test
cwtl
js
in
sub
sub
jne
and
mov
dec
inc
inc
sub
mov
jne
out
xchg
les
out
xchg
add
pop
fsubp
push
aas
add
dec
in
pop
mov
cmpsb
data16
mov
ds
lock
imul
aaa
or
cmp
and
fwait
dec
jne
in
jb
rcrb
pusha
fistps
popf
rclb
push
stos
mov
or
mov
ljmp
xchg
adc
jo
push
xchg
cld
fistpl
sub
pop
and
pop
in
and
sti
test
jl
jb
or
out
or
inc
int3
les
insl
dec
push
movsb
inc
or
stc
popa
xchg
add
out
imul
xor
and
cld
fmull
popa
dec
js
sub
lds
mov
inc
cmpsb
outsl
mov
inc
xchg
mov
mov
dec
inc
inc
movsl
call
push
jb
jg
scas
cmc
mov
jmp
pop
mov
fnsave
or
mov
mov
ja
inc
sbb
add
shl
xchg
jbe
pop
and
insb
iret
test
outsb
jnp
ds
and
sbb
sbb
sub
stos
dec
pop
je
sbb
and
xlat
movaps
mov
and
nop
fs
push
repz
out
lcall
push
xorl
icebp
dec
mov
into
sub
inc
inc
sub
adc
xchg
jb
sbb
lret
rcrl
sub
xchg
pushf
cmp
xchg
push
sbb
cmp
sbb
nop
dec
roll
not
test
pop
lahf
inc
fmull
push
imul
aaa
sbb
xchg
xlat
xchg
enter
outsb
loopne
rorb
std
mov
cli
cltd
push
or
adc
push
out
scas
sub
pop
sbb
push
cmp
mov
andb
shl
repnz
clc
xor
ss
mov
cmp
lea
and
jno
pop
pop
jne
push
inc
movd
pop
insl
mov
in
cmpsb
lcall
dec
mov
or
das
bound
mov
add
xchg
sbb
mov
add
mov
fstl
pop
mov
inc
xor
mov
and
pop
inc
ds
lahf
push
push
xchg
add
movsb
inc
dec
dec
aad
mov
scas
mov
dec
rcrb
fs
xor
push
jo
sarl
fisubrl
rol
movsb
incb
pop
xor
notb
mov
adc
hlt
and
lds
pop
fs
or
mov
dec
shrb
pop
ret
or
inc
nop
xor
int
jg
and
je
mov
mov
cmpl
addb
out
pusha
push
sahf
bound
cwtl
sarl
loopne
sar
test
cltd
test
ja
and
sub
ficoms
dec
shl
arpl
and
add
inc
jp
pop
andl
push
in
iret
aam
pusha
lock
cmc
in
xchg
push
or
push
call
push
popa
xchg
nop
push
adc
jns
fmuls
inc
test
adc
repz
cmpsb
fucompp
mov
inc
xlat
jge
push
popf
fwait
lods
mov
fs
clc
stc
sub
pushf
or
xchg
idivb
xchg
loopne
data16
push
sub
out
scas
xor
mov
and
dec
mov
cmpsb
inc
xlat
test
xchg
fisubrs
lcall
and
dec
pop
call
or
testb
jns
add
scas
mov
lea
mov
mov
outsl
hlt
sahf
xchg
jl
fcoml
pop
hlt
push
mov
push
icebp
and
push
std
push
push
cmp
mov
lods
xorl
out
frstor
inc
pop
je
in
sbb
ss
mov
jno
nopl
or
das
shrb
xor
ljmp
jg
add
aaa
cltd
bound
dec
push
bound
pop
sbb
xchg
shrb
xchg
fs
dec
inc
pop
shlb
xor
push
mov
and
dec
mov
movsl
sub
lcall
cwtl
pushf
mov
popf
aaa
sbb
jbe
xchg
xor
sub
push
push
mov
in
idiv
pop
sub
sbb
ss
jne
and
lcall
sbb
sub
scas
int3
cltd
pop
cmp
dec
loop
aad
cli
insl
in
jecxz
mov
or
jo
push
push
dec
aam
cmp
iret
adc
xor
sahf
addr16
icebp
imul
mov
add
popf
add
cmp
sub
adc
sub
std
es
mov
ret
pusha
push
dec
jmp
cmp
je
sbb
inc
fs
cmpl
lds
jbe
add
loope
ljmp
pop
imul
jmp
xlat
and
mov
mov
cmp
jecxz
insw
testb
rolb
pop
icebp
fnstenv
mov
dec
push
mov
mov
popa
mov
test
rcrl
lret
jl
and
pop
roll
lahf
imul
inc
push
mov
into
cmp
arpl
jp
ljmp
xlat
push
into
jb
test
cltd
in
jmp
insb
mov
and
arpl
jg
jne
push
lds
lret
pop
add
xor
addr16
dec
adc
movsl
cwtl
jmp
adc
mov
push
test
inc
push
dec
repnz
inc
pushf
call
push
aaa
loop
movsl
or
cmc
std
jbe
mov
ret
mov
repz
fistpl
xlat
and
std
dec
sub
and
xor
out
mov
xchg
scas
cmpsl
loop
imul
mov
sub
pop
adc
fsub
push
adc
sbb
test
js
sbb
pop
fistpll
and
rol
shrb
pop
mov
xchg
dec
push
sub
cltd
mov
sub
fmull
mov
mov
mov
out
fldenv
andl
xor
push
mov
add
jo
xchg
push
loop
dec
test
push
jg
out
push
lret
push
icebp
jmp
in
lahf
mov
negl
push
mov
scas
jne
aad
icebp
out
cwtl
sbb
xchg
mov
fldl
dec
fstps
std
mov
mov
push
dec
popf
sti
outsl
lea
sub
ja
insl
dec
and
out
jg
pop
cmp
and
jecxz
popa
jmp
inc
sti
bound
into
mov
je
clc
mov
sub
shr
ret
ds
dec
pop
sub
vrsqrtss
cmp
push
jg
xchg
testl
cli
out
xchg
rcrb
or
sbb
sbb
std
adc
xchg
je
sbb
mov
cmc
and
xor
sbb
xor
jl
lahf
aam
mov
cmp
xor
test
jp
leave
aas
push
or
xor
cltd
dec
out
lods
push
xchg
hlt
jp
push
push
and
lods
mov
jns,pt
jge
mov
lods
xchg
cmp
inc
stc
sbb
mov
jecxz
inc
or
jp
xor
jp
leave
adc
add
cltd
jg
lcall
lea
insl
sbb
gs
gs
mov
arpl
jle
stos
ljmp
cwtl
push
pop
pop
stos
pop
mov
mov
adc
fcmovu
insb
sarb
mov
mov
sarb
jecxz
cli
lret
pop
cmp
ret
lcall
pusha
xor
pop
mov
les
push
sti
es
jo
sub
test
lahf
push
adc
fisttps
and
xchg
cwtl
fdivrl
mov
fnstsw
push
jle
xor
inc
sub
sub
fcmovb
push
xor
mov
loop
add
mov
in
aad
cmpsb
xor
cmpsl
lcall
test
sbb
popf
mov
insb
idiv
jl
dec
push
lret
cwtl
insb
test
cltd
js
iret
xor
inc
ds
mov
lock
rcll
and
bound
or
dec
das
cltd
imul
ljmp
rorb
inc
sub
mov
inc
dec
pop
mov
cmc
jmp
loop
subl
cld
int3
out
scas
std
adc
jecxz
stos
arpl
mov
cltd
js
cs
mov
mov
aad
jbe
jbe
repz
push
mov
ret
mov
push
mov
add
mov
xor
mov
lcall
xchg
dec
dec
cmpl
xlat
dec
shl
jg
cmp
popa
xlat
loope
jnp
loope
jne
aas
jae
pop
or
dec
pop
in
xchg
inc
and
push
out
ss
inc
mov
mov
lods
dec
mov
out
repnz
mov
push
sub
push
inc
sti
sbb
cmc
jno
loop
sub
fwait
cmp
inc
push
pop
mov
hlt
jne
out
cwtl
mov
jmp
push
xor
lds
fwait
xorl
mov
lret
xchg
fs
outsb
pop
fimull
lock
cltd
je
sub
aas
pop
testb
into
cmp
dec
stc
sbb
arpl
xor
dec
cltd
stc
fcompl
seta
test
push
inc
repnz
aas
movsb
das
mov
dec
popf
test
das
out
in
cmp
fisubrs
dec
stc
insb
call
shll
ja
int3
mov
popa
mov
or
push
inc
mov
in
fwait
sbb
mov
out
insb
push
sbb
or
out
and
in
sar
add
cmc
cwtl
adc
je
jns
sub
in
clc
jmp
loope
and
adcl
xchg
adc
sbb
arpl
adc
xchg
mov
adc
cs
in
lds
in
push
jmp
ja
rorl
ret
iret
hlt
pop
jo
inc
out
data16
mov
rorb
mov
test
xor
sub
fisubrl
push
inc
fld
xchg
dec
cmp
push
xlat
scas
jge
in
push
sti
sub
or
jecxz
push
in
test
and
stos
ror
ficomps
je
loopne
add
fwait
hlt
rcr
cmp
ret
sti
cmp
loopne
jecxz
imul
dec
or
cmpsb
hlt
insb
cld
addr16
in
lods
xor
mov
inc
mov
sahf
cmp
sbb
dec
out
xor
test
cmp
add
daa
pop
adc
shr
lret
push
jns
sub
fimuls
mov
xchg
scas
aas
inc
inc
mov
or
xor
stos
xor
push
pop
lods
push
stos
lret
cwtl
ljmp
mov
xlat
cmp
ret
adc
jle
push
addb
inc
lock
inc
hlt
repz
rclb
xor
pop
sub
rolb
pop
cmp
sti
jl
xor
mov
ret
cmpsb
cmpsb
je
sbb
jecxz
or
sub
jae
cmovbe
in
or
lods
sub
add
push
mov
cmpsl
mov
gs
mov
adc
inc
push
xor
fs
fldl
jno
pop
arpl
jbe
fwait
inc
fs
notb
xchg
ljmp
and
jns
mov
mov
popa
fistpll
pop
fiadds
jb
adc
loopne
push
jecxz
push
mov
cmp
bound
into
daa
pop
pop
sub
pop
push
pushf
or
lret
movb
int3
or
dec
jo
jae
xlat
sbb
dec
aaa
iret
and
aaa
mov
jge
and
sarb
fisttpll
mov
inc
nop
pop
mov
xchg
pop
or
jb
add
and
rcrb
push
fucomi
inc
ja
xchg
ffree
jge
in
movsl
inc
mov
add
ja
xor
dec
adcb
adc
push
cli
lock
dec
repnz
stos
pushf
jl
imul
lcall
adc
sti
inc
aas
out
and
test
aad
bound
pushf
cmc
insb
mov
pmulhuw
shrl
mov
data16
jne
pop
cmpsl
xchg
mov
jno
jge
shll
cmp
jp
fwait
xor
clc
sub
mov
dec
enter
and
mov
stos
leave
gs
jne
lea
ja
jp
int
dec
mov
push
add
mov
mov
sub
lcall
push
and
ja
pop
xchg
aaa
jmp
jge
cmp
inc
int3
stos
movl
pop
and
lcall
sub
pop
xchg
loope
xchg
jp
loope
ret
dec
dec
subl
pop
cmc
outsb
dec
jmp
jecxz
nop
dec
add
dec
enter
inc
mov
cmc
enter
js
push
xchg
sbb
or
sahf
rclb
sahf
adc
push
cld
mov
les
adc
add
cmp
xchg
scas
test
stos
lock
in
mov
dec
mov
ja
mov
lret
shl
push
mov
xchg
sahf
pop
xchg
gs
fcomip
and
or
shlb
xchg
and
xchg
lds
rcr
add
stos
mov
int3
js
mulb
ja
rorl
and
int3
mov
insl
mov
scas
xchg
lahf
mov
outsb
add
sub
scas
sbb
lods
ja
jmp
cmpl
and
int
inc
fbstp
outsb
pop
xor
rcll
sbbl
add
xchg
push
push
test
pop
loopne
jmp
sbb
lock
fimull
mov
sub
inc
or
mov
mov
test
insb
iret
mov
ret
or
iret
cmpsl
pop
out
cmp
addr16
mov
pop
sub
in
stos
ja
movsb
outsl
inc
into
inc
mov
out
les
xchg
or
jno
mov
and
dec
cmp
icebp
mov
lea
fsubp
out
in
mov
jecxz
in
jecxz
fwait
xor
dec
hlt
idivb
mov
loop
into
adc
xchg
out
mov
cmp
lret
shll
pop
andl
sbb
mov
add
aad
add
movsb
aam
inc
mov
adc
push
pusha
ds
orb
mov
xor
mov
adc
xchg
aam
and
fxam
xchg
lret
jmp
mov
je
dec
lea
adc
jo
jo
cs
inc
outsl
int
scas
pushf
sub
stos
scas
sub
lods
in
mov
in
mov
cmc
inc
xor
daa
mov
xchg
add
loopne
and
test
je
aas
jo
dec
push
sti
stos
jge
cmp
stos
cmpsb
scas
mov
std
mov
sbb
and
and
std
and
pop
mov
insb
and
insl
fsubrs
scas
mov
pop
repnz
or
sub
popa
icebp
stos
jecxz
dec
push
stc
push
sub
stos
xchg
mov
test
adc
mov
icebp
clc
mov
test
mov
cltd
int
call
lds
into
add
outsb
jo
dec
pop
jecxz
jbe
mov
fucom
sbb
gs
mov
xor
mov
outsl
mov
xchg
xor
cltd
lret
and
lock
mov
add
xchg
std
jg
jne
stos
out
cmp
jge
push
mov
aas
adc
xor
xorl
xor
call
rolb
js
xchg
mov
cli
cmp
xchg
pop
idivl
mov
sti
call
cmp
xchg
jb
call
pop
sub
test
mov
xor
es
std
test
push
pop
outsb
jl
adc
dec
add
lahf
rol
ret
or
gs
ds
sbb
jns
lods
push
testb
loope
inc
push
jmp
add
pop
xchg
jmp
xor
jbe
jge
xchg
pop
add
mov
mov
ljmp
adc
pusha
push
imul
cmp
add
test
push
gs
xchg
mov
rcrb
mov
out
shr
inc
dec
aad
cmp
in
stos
inc
aam
lods
lcall
fdivrs
sbb
mov
movsb
inc
shll
out
enter
pop
out
adc
mov
jp
pop
cs
in
inc
inc
xchg
jns
loope
xchg
test
jo
push
cmp
fsin
add
adc
scas
or
fwait
repnz
ljmp
es
test
push
jb
ja
mov
lret
pop
sbb
repnz
jge
pop
jge
mov
imul
fwait
scas
inc
clc
mov
mov
pop
mov
jno
outsb
ss
out
pop
pop
jmp
stos
imulb
mov
shrb
xchg
stos
pop
pushl
ret
adc
mov
jb
insb
stos
push
push
rol
sbb
mov
push
loop
xchg
push
or
dec
popa
popa
inc
repnz
cmp
insb
rolb
popa
mov
sub
add
repz
shlb
hlt
inc
lret
std
adcl
add
incb
xor
mov
aam
jmp
add
ja
lock
ja
fmull
xchg
sbb
cmpl
cmp
call
adc
pop
adc
xchg
mov
pop
test
lods
movsl
imul
mov
pushf
test
into
sub
fcoml
mov
jo
inc
and
js
subl
or
cmpsb
mov
imul
rorl
mov
jg
jl
xchg
xchg
mov
and
sbb
pushf
jbe
jne
out
mov
push
divb
and
or
fidivrs
std
mov
inc
clc
jb
pop
ds
mov
popa
sub
pop
test
xor
iret
bound
icebp
mov
fistpll
les
sti
sub
push
mov
mov
js
add
xchg
adc
dec
lahf
gs
xchg
cs
shrl
pop
dec
shlb
adc
cmp
ret
inc
pop
pop
push
inc
div
add
sbb
adc
popf
test
sbb
cld
jnp
fwait
push
cmc
xlat
mov
jl
or
push
enter
cmpsb
push
test
pop
enter
iret
cmp
mulb
cmp
pusha
in
ljmp
push
sub
sbb
adc
popf
mov
lods
push
pop
rcl
and
lock
jl
movb
mov
out
dec
out
jp
sbb
mov
insb
jnp
jl
mov
add
cmp
pusha
mov
dec
xchg
sub
imul
mov
push
add
mov
fcomps
mov
jecxz
das
xor
addr16
push
inc
stos
mov
jg
mov
jns
es
nop
dec
xchg
pop
jle
cmpl
leave
imul
data16
xor
pop
or
dec
jns
mov
out
xchg
push
sahf
scas
adc
dec
mov
pusha
push
or
popf
cmp
push
xorl
dec
ror
xchg
js
ljmp
mov
push
mov
add
adc
dec
and
adc
jnp
in
lahf
in
loope
hlt
fldenv
adc
xchg
enter
jl
int
in
dec
mov
xor
and
subl
and
fwait
jle
jp
movl
and
mov
jns
lock
push
cld
dec
es
cmp
insl
out
stos
not
fdivr
cmc
mov
mov
flds
pop
xor
sub
pop
aam
sub
mov
sbb
lahf
addr16
addb
cmpsb
and
pop
xchg
xor
and
sbb
popa
lods
push
jno
mov
arpl
xchg
pop
and
imul
and
xlat
xlat
inc
lcall
dec
cwtl
mov
or
loope
or
aas
shl
mov
sbb
loopne
rclb
outsb
add
xchg
fisubrs
add
fidivrs
jle
out
sub
cwtl
ds
ret
cld
stos
sub
add
lcall
mov
imull
fistps
int
shrb
xor
cmp
push
lock
sti
mov
or
adcb
jle
xchg
stc
cmp
loope
cmpxchg
loope
testl
mov
aad
lods
clc
xchg
imul
or
adc
ss
fcomps
ret
and
in
jl
or
push
xor
mov
cld
test
sarl
dec
push
pop
adc
movsl
push
cmp
fwait
or
int3
add
scas
inc
pop
xchg
int3
and
rcrl
fwait
loop
shl
popf
add
and
rolb
jmp
mov
ss
mov
pop
orb
dec
mov
popa
outsl
jae
loopne
nop
roll
add
adc
inc
lret
iret
add
sub
in
mov
mov
xchg
ja
inc
jp
jmp
in
sahf
std
jmp
inc
pop
mov
adc
inc
mov
ret
mov
inc
mov
loope
sub
mov
mov
movsl
rolb
sahf
cli
lea
ss
cmp
xchg
loope
nop
dec
addl
sbb
dec
dec
test
cmp
and
aad
movsl
aad
stc
int3
cmp
dec
sbb
inc
pop
dec
pop
rcl
mov
imul
xor
std
insb
test
or
xor
ret
adc
imul
fisubs
inc
stos
into
movsb
divb
and
add
sahf
sbb
cmp
dec
add
int3
add
lcall
sub
xchg
fstpt
jp
push
xor
xchg
jecxz
loopne
pop
inc
sbb
cmpl
dec
movsb
sub
test
movsl
ficoml
sahf
jb
gs
stc
push
test
and
jmp
cmpsl
lock
adc
push
sbb
fadds
sub
push
leave
pop
outsl
add
push
cmp
and
js
sub
sub
ret
adc
jp
ficoms
adcb
ljmp
imul
aas
or
fdivr
sub
pop
sbbb
lods
pusha
mov
mov
test
push
xor
fs
inc
xor
in
add
mov
xchg
inc
es
iret
sbb
imul
cmp
clc
push
ss
ss
pop
stc
shlb
sub
int
addps
sahf
sti
test
aad
pop
outsb
sbb
jne
adc
pop
mov
push
xchg
sbb
sbb
es
jp
push
movsl
pop
sub
int
hlt
mov
loope
mov
movb
sub
pop
push
jmp
outsb
cwtl
lea
jae
loope
jle
int3
shrd
adc
or
out
mov
fs
pop
and
dec
nop
xchg
add
es
fs
out
mov
inc
mov
cmp
and
push
jl
dec
cs
icebp
pop
and
jecxz
pop
jbe
int
je
inc
sbb
aad
ficomps
sbb
in
cld
push
shlb
or
dec
daa
xchg
push
and
sub
test
jno
lahf
sti
inc
sti
cli
jg
jl
call
js
mov
or
cmpsl
test
fstl
lods
stos
mov
push
mov
ds
xchg
into
lods
or
ret
movsl
lahf
jmp
jmp
sbb
inc
in
sub
add
xor
sbb
fidivs
mov
xchg
sarb
rcll
loop
loopne
ret
jl
imull
lret
add
or
jbe
shlb
mov
push
fdivl
into
push
stos
fldcw
dec
je
jmp
in
pop
xor
cmp
lret
stos
fdivs
mov
andb
jmp
jbe
xchg
sub
xchg
lahf
push
fs
pop
ret
mov
add
ret
jmp
shrl
push
jns
mov
je
out
or
sbb
fyl2xp1
and
sbb
in
adc
xchg
jbe
add
ljmp
call
adc
cli
mov
fstpt
inc
and
mov
xlat
sbb
cmp
test
or
xor
add
in
lcall
cmp
das
pop
fcoml
jae
cmpsl
cwtl
or
mov
jecxz
inc
scas
mov
in
mov
xor
push
sbb
jns
mov
adc
aas
shl
add
xor
out
daa
data16
cmp
cltd
mov
fwait
or
xor
dec
mov
out
dec
and
cmp
lret
movsb
test
loop
adc
fs
fstl
pop
xor
sub
pop
testb
mov
xchg
push
data16
mov
mov
in
test
pop
int3
xchg
lcall
xchg
push
push
mov
pop
in
mov
cmp
mov
mov
add
popa
sbb
cmpsl
pop
hlt
dec
shll
and
mov
adc
cmpsl
push
roll
xor
xchg
push
push
dec
div
fdivrl
push
jp
ja
xchg
lahf
pushf
mov
lods
jne
add
or
shrl
jo
mov
leave
pop
cmpsl
adc
loop
hlt
in
jns
lods
call
shr
mov
cmp
fistpl
mov
pop
jp
sub
shl
sbb
xor
xor
add
daa
xor
pop
jp
xlat
stos
mov
ficompl
clc
xchg
cmp
js
sahf
mov
mov
xlat
addl
dec
dec
jecxz
lods
inc
int
movsl
mov
cmp
mov
cvttps2pi
or
pop
dec
jns
iret
dec
inc
push
and
test
sbb
jmp
push
xchg
sbb
pop
sub
mov
inc
pop
sti
push
leave
cwtl
sbb
sub
imul
mov
addr16
ret
jge
mov
xchg
add
xchg
test
cmp
outsb
adc
mov
mov
scas
ljmp
push
js
loop
stc
out
fsts
cmp
xchg
xor
jmp
dec
and
cmp
gs
add
sub
incb
pop
dec
shlb
and
xadd
pusha
imul
imul
pop
out
inc
mov
pushf
insl
movsb
xor
sub
sub
scas
cmpsl
rcll
adc
cli
mov
jge
dec
fdiv
add
decb
sbb
add
mov
xlat
pop
cli
idivl
xchg
jecxz
jmp
mov
cmp
fmul
stos
movsl
out
push
clc
push
addr16
adc
cmp
sbb
cmp
push
fcomi
stos
adc
repnz
stos
jmp
orb
xor
cmp
and
push
jnp
mov
ss
stos
fcoms
stc
cmp
orb
jb
stos
fistps
xor
mov
fcoml
mov
cwtl
push
adc
scas
movsl
in
arpl
imul
sub
out
mov
jl
cmp
adc
inc
lods
in
mov
ljmp
shrl
mov
jae
cmp
jo,pn
xor
mov
mov
xchg
cmp
fidivrs
pusha
daa
adc
stos
push
inc
mov
sti
xor
and
adc
dec
sbb
push
mov
push
mov
add
and
scas
or
rcrb
arpl
and
cli
shlb
and
jnp
inc
out
mov
out
es
push
cmpsl
dec
daa
jg
pop
push
add
sub
out
lret
jmp
sbb
test
out
outsl
sbb
xor
insl
pop
dec
pop
imul
dec
lcall
test
cmp
and
aad
jmp
mov
pop
and
mov
dec
lret
pusha
sahf
xchg
clc
in
mov
cmc
jno
es
sbb
ja
aaa
or
pop
jae
jbe
inc
repnz
rcr
cmp
adc
adc
lret
cmp
inc
and
push
sub
push
push
push
ds
sbb
dec
jne
outsl
in
inc
xor
sbb
popa
pop
adc
cli
pop
rolb
mov
push
daa
out
sub
aam
sti
adc
in
in
xchg
movsb
xor
mov
fisubrs
dec
dec
sbb
out
icebp
jmp
loopne
ss
aaa
jnp
pop
pop
pop
xor
cmp
in
and
push
fildll
dec
shl
jb
stos
dec
test
pop
aas
das
ljmp
cmc
dec
cwtl
dec
ss
scas
fiadds
cmpsl
cmpsb
insl
xchg
mov
ret
or
int3
inc
sub
test
shl
pop
shlb
sub
lcall
fs
add
fidivs
lods
cli
leave
das
sub
les
xor
imul
and
xchg
mov
jbe
int3
test
xchg
and
pop
jle
xchg
out
fsubr
rolb
mov
cmp
add
mov
sbb
pshufb
pop
push
inc
int
xor
mov
loop
sub
lods
mov
dec
and
or
pushf
ret
lret
je
sbbb
mov
inc
add
mov
enter
dec
mov
inc
rorb
push
mov
das
dec
pushf
sub
sahf
mov
not
inc
arpl
popa
xchg
xor
dec
fldt
sub
cmp
inc
adc
mov
fld
imul
subb
mov
mov
out
in
dec
push
scas
ss
out
cmp
push
and
std
test
cmp
shll
pop
sbb
cmpsb
scas
out
icebp
mov
or
jmp
into
je
flds
out
fcmovnu
lret
sti
loop
xchg
rclb
daa
cmp
ret
pop
mov
adc
mov
mov
hlt
punpcklbw
mov
cmc
jmp
xor
iret
setle
stos
jbe
jmp
icebp
test
jae
or
push
jno
aad
ja
rcl
stos
dec
pop
adc
std
iret
sbb
testl
xor
or
jo
or
sub
jp
push
jne
iret
push
mov
mov
xchg
sub
jmp
cltd
mov
xor
push
mov
xchg
or
xchg
dec
ljmp
mov
bound
in
addr16
mov
lahf
mov
aad
filds
or
push
fiaddl
or
in
adc
fdivl
nop
sbb
jnp
inc
int3
or
xor
loope,pt
jge
fwait
pop
adc
inc
in
sbb
pop
cli
pushf
push
out
gs
mov
imulb
xchg
std
fistpl
lods
mov
bound
ret
or
rcll
mov
lods
pop
sub
jno
fistpll
stos
pop
jbe
inc
inc
stos
sbb
sub
cmp
stos
pop
hlt
sti
js
jmp
mov
jge
rcrb
mov
pop
jp
mov
hlt
in
data16
daa
bound
out
aad
fxch
in
rorb
fildl
and
mov
jns
pop
mov
jle
pop
cmp
inc
sbb
pop
xchg
and
xchg
mov
mov
jb
insl
mov
aaa
and
xor
inc
and
pusha
je
imul
scas
outsl
es
jle
or
push
add
fs
aam
jmp
cmpsl
mov
stos
mov
or
dec
xor
mov
aas
fneni(8087
into
xchg
sbb
icebp
or
mov
jmp
inc
repz
mov
sbbw
jle
in
jnp
mull
lods
sbb
scas
mov
add
fs
es
out
call
neg
pop
cmp
lods
add
in
ret
int
xor
shlb
loope
dec
insb
mov
popa
mov
cmp
dec
add
rcl
pop
mov
cmc
scas
shlb
mov
push
add
mov
fidivs
push
ds
mov
imull
fildl
jb
jb
xchg
cmpsb
into
and
or
rcll
xor
imul
mov
sahf
imul
jecxz
mov
pop
jecxz
jnp
mov
aas
jne
xlat
rcr
cmp
or
mov
jl
scas
inc
mov
divb
pop
sti
adcb
imul
inc
mov
mov
repz
xor
pop
xchg
lcall
icebp
std
insb
mov
out
adc
sbb
in
or
add
dec
shl
addr16
push
inc
mov
lods
imul
xchg
push
mov
and
inc
bound
sbb
decb
out
sahf
stc
inc
es
cwtl
add
and
std
jo
in
dec
scas
movsl
scas
enter
xchg
jo
jg
mov
popa
or
insl
mov
cmpsl
jle
gs
divb
out
cmp
out
dec
test
fstps
and
ljmp
sbb
int
push
mov
mov
out
leave
mov
dec
mov
sbb
mov
jno
fwait
push
int
inc
imul
jb
pop
fwait
jo
dec
pop
adc
addr16
mov
or
pop
mov
pop
lods
mov
jmp
mov
addb
pop
mov
and
inc
lret
push
sub
loope
jg
into
sub
xor
mov
in
mov
hlt
fldcw
mov
or
jecxz
inc
push
xchg
shlb
in
sub
psubw
jns
mov
daa
pop
push
ret
into
mov
cmpb
mov
push
out
inc
pop
mov
idiv
mov
mov
test
in
mov
inc
xchg
and
bound
mov
in
push
dec
or
and
push
scas
pop
or
sub
mov
adc
jns
cmpsb
xor
sbb
inc
movsb
mov
or
out
ljmp
push
xchg
xor
push
add
aas
jg
jle
mov
and
sahf
bound
cmp
loopne
jmp
pop
dec
dec
int
push
mov
ror
mov
mov
stos
push
clc
hlt
test
pop
dec
mov
push
cmp
lret
sbb
iret
xchg
sub
mov
mov
in
imul
add
xor
adc
fidivl
mov
aad
jns
jecxz
testb
jns
fsubrs
or
jl
sub
outsb
outsb
cwtl
into
jbe
push
insl
icebp
dec
inc
jp
mov
sbb
cmp
or
dec
xchg
xor
js
mov
shlb
pop
sahf
and
in
xchg
sub
pop
clc
mov
add
push
cld
cmp
xchg
movsb
pop
and
icebp
cmp
pop
jp
pop
sub
ss
and
in
and
mov
adc
mov
inc
lods
movsl
clc
push
inc
mull
pop
fdiv
and
out
jle
jbe
cld
dec
sbb
inc
rolb
sarb
add
shlb
stc
xor
dec
rcrl
mov
xor
ror
pop
lret
lods
in
pushf
shlb
or
jne
push
add
sbb
cmpsb
clc
inc
xchg
mov
ret
ss
sbb
scas
ljmp
sbb
aas
lret
cwtl
xor
jp
push
and
jb
push
lods
add
pop
fiaddl
ror
adc
popa
inc
cs
lahf
xlat
pop
movsb
cmc
add
or
xchg
insb
clc
ljmp
adc
std
iret
push
pop
inc
pop
jns
enter
repnz
bound
loope
xchg
adc
addr16
cmpsl
std
add
pop
xor
mov
and
sub
mov
or
adc
pop
loopne
sahf
call
jae
je
bound
jle
mov
ret
scas
or
divl
add
and
jle
shl
out
push
dec
mov
cmp
aas
adc
dec
std
call
loope
daa
jbe
aam
pushf
jecxz
xor
mov
fldl
xchg
pop
push
sbb
mov
mov
add
stos
sbb
xor
push
sti
dec
sbb
dec
jl
mov
add
sahf
mov
inc
imul
adc
adc
mov
aam
in
in
in
cwtl
rorl
jge
lds
nop
shlb
add
pop
iret
rcr
in
jg
cs
mov
fdivs
rorb
and
dec
das
mov
icebp
xchg
int
push
daa
into
fisttpll
in
add
mov
inc
push
adc
out
pop
sbb
dec
mov
or
xor
jecxz
xor
lahf
andl
addr16
pop
or
and
jl
jp
dec
push
and
fstpl
imul
and
sub
outsl
pop
lods
pushl
stos
push
xchg
add
arpl
inc
lret
repnz
mov
loop
cmpsl
lods
das
cmp
loopne
mov
pushf
inc
push
and
divl
and
inc
dec
dec
mov
sub
xchg
xor
das
mov
out
addr16
aam
ljmp
push
fcoms
xor
enter
addr16
leave
loope
repnz
jbe
mov
cmp
mov
into
jle
jns
mov
sub
jg
fdiv
lret
repnz
or
push
sub
sub
test
fwait
jl
cmp
mov
fmul
popf
mov
push
sbb
inc
adc
stos
adc
fisubrl
dec
fadds
dec
xor
fcomip
push
sbb
shll
dec
imul
shlb
fstl
lret
mov
loope
or
jbe
mov
call
jmp
add
jg
cwtl
pop
mov
pop
add
frndint
cltd
lods
xchg
aam
mov
sbb
adc
mov
pop
and
and
lods
arpl
mov
fwait
rorb
push
ret
pop
repz
jg
push
mov
mov
pushf
adc
ss
icebp
push
sbb
pop
aad
push
cmpsb
pop
cltd
mov
mov
dec
and
pop
repnz
xor
or
ret
out
inc
mov
lds
pushf
ljmp
push
sub
inc
jnp
fwait
mov
pop
dec
test
push
outsb
mov
xchg
cmp
push
sbb
xchg
test
aaa
adc
lret
mov
sub
cmp
lcall
les
jmp
push
sbb
mov
or
xor
sub
fdivrs
pop
cltd
jne
and
lods
jl
xor
test
add
lcall
popfw
and
adc
xchg
dec
sbb
pop
xchg
pop
ret
insl
add
xchg
jmp
cmp
into
lcall
ret
loopne
cmp
and
outsl
mov
adc
pop
fwait
jle
enter
in
push
cmc
xor
stos
add
or
xlat
mov
mov
pop
in
mov
or
call
cs
daa
sbbl
pop
pop
mov
in
cmc
and
mov
adc
shr
or
pop
int
cs
inc
insl
mov
mov
lahf
xchg
add
test
dec
or
data16
inc
mov
adc
pop
cmp
cltd
adc
imul
aaa
lds
arpl
xchg
xchg
stc
scas
fwait
loop
push
ret
pusha
lahf
loope
aaa
sahf
test
sub
test
xlat
stos
out
cltd
or
inc
dec
adc
scas
mov
dec
addr16
sub
fs
sbb
cmp
clc
xchg
cmp
jl
int3
sub
pusha
xchg
inc
je
stos
or
inc
mov
sti
xor
mov
flds
adc
mov
pop
fdivr
sahf
cmc
movsl
enter
movsl
mov
mov
imul
pop
mov
pop
xchg
lods
iret
jo
subb
pop
loop
or
pop
add
pop
and
mov
loopne
push
cmp
sub
fwait
pop
icebp
hlt
cld
and
jg
mov
pop
fists
add
imul
adc
arpl
jns
mov
popf
ret
popf
mov
fisubs
fistpl
push
push
insb
push
cmp
das
mov
push
ret
subl
imul
xorb
ja
jae
mov
pop
mov
lods
cmc
xor
lds
push
hlt
push
mov
mov
jno
pop
sbb
testb
iret
xchg
cs
icebp
scas
push
jle
repz
and
fwait
cmc
cld
jno
pop
jno
dec
out
jg
pushf
add
aad
aas
je
lcall
xchg
cmp
mov
add
stc
lahf
punpckhbw
dec
jae
sbb
and
mov
jg
push
fdivs
sbb
es
mov
xchg
cltd
rcl
dec
cmpl
or
mov
pop
les
mov
sbb
in
mov
jne
lahf
sbb
add
iret
adc
push
sbb
dec
mov
scas
cmp
lret
mov
sbb
imul
jbe
in
ljmp
xor
mov
jnp
pop
lods
mov
stos
in
mov
inc
fnstcw
pop
lahf
adc
out
push
test
lcall
push
mov
shlb
jb
sub
aam
dec
adc
jne
imul
int
xor
daa
aam
leave
mov
push
push
test
incl
xor
mov
mov
lret
mov
jge
mov
adc
ja
cmpsl
pop
call
sbb
mov
popa
sahf
lea
jo
adc
fwait
jo
or
lock
xor
or
subl
dec
movsb
aas
and
pop
je
pushf
arpl
sub
push
sub
lahf
loop
mov
xor
stos
pusha
test
jne
jae
lock
call
jae
sub
mov
mov
and
mov
jge
sub
sub
cmp
fisubrs
push
bt
pop
lock
or
std
shl
xchg
rcl
add
loope
shrl
jl
shll
les
mov
std
push
daa
js
in
lret
xlat
sub
jbe
mov
addr16
scas
lret
shl
add
mov
mov
int3
in
xchg
xchg
pop
pop
and
nop
stos
xor
pop
data16
jo
cpuid
repnz
jmp
push
xchg
lret
add
mov
mov
mov
add
jo
sbb
cmp
add
cmovnp
xor
pushf
ud1
push
jno
jae
dec
lods
lods
add
or
fidivrs
scas
xorb
push
cmpsb
jb
adcb
lret
adcb
out
stc
mov
movb
cmpb
adc
xchg
pop
jnp
int3
lea
jl
jne
cltd
cwtl
mov
jno
ja
inc
and
mov
dec
test
inc
rcll
in
in
xor
dec
popa
jp
sti
pop
jecxz
xor
xor
sub
mov
out
jno
or
jns
fidivl
les
in
push
dec
pop
dec
pop
stos
jno
sarb
mov
popf
push
lock
jns
adc
xchg
std
and
push
adcl
cmpsl
push
push
adc
mov
and
popa
insb
insb
xchg
mov
jb
frstor
and
sub
shlb
data16
mov
lret
cli
rep
cmp
mov
lret
inc
push
xchg
sub
sbb
les
sbb
out
and
dec
loope
pop
push
mov
aam
popf
sub
cmp
or
out
aaa
lahf
mov
adc
leave
hlt
dec
ja
push
testl
cmpsl
adc
repnz
sahf
movsl
scas
sub
mov
add
pop
add
or
mov
mov
ret
mov
lret
in
push
sbb
aas
inc
aaa
shll
and
in
nop
dec
push
pop
cmpsl
xchg
fcomip
cld
mov
push
js
mov
in
fldcw
adc
pop
data16
and
pop
shlb
mov
mov
sbb
push
mov
mov
and
mov
aaa
and
pop
rcrb
xchg
jle
cmp
cld
jae
or
out
cs
orb
fists
cmpsb
or
dec
outsl
dec
or
dec
test
inc
dec
pusha
lock
jle
sarl
sub
fwait
lea
rorb
stc
dec
lcall
fsubl
cmp
imul
or
add
cmp
or
mulb
icebp
xlat
dec
jecxz
cmp
pop
adc
cmp
jne
sub
inc
jnp
fdiv
jnp
sub
cmp
sub
and
lea
jg
in
jge
mulb
dec
xlat
mov
lret
cld
or
and
fstpt
push
jge
sub
pop
push
inc
fstps
dec
mov
scas
pop
sub
cwtl
push
xchg
sub
adc
dec
cwtl
imul
arpl
mov
push
cmp
mov
sbb
arpl
arpl
jns
mov
add
push
push
pop
sub
mov
mov
nop
data16
mov
inc
adcl
sub
ja
clts
mov
mov
cmp
shrb
out
add
out
inc
dec
xchg
testb
sub
push
in
lock
add
adcl
sub
push
into
xchg
loope
xor
jg
fwait
xor
mov
mov
clc
cmp
mov
out
imul
add
xchg
ret
add
cmp
xor
jle
cmpl
or
cs
sub
es
or
push
mov
mov
movsl
cmp
popf
lret
iret
pop
mov
adc
cmp
fwait
push
std
mov
pop
mov
addl
ret
test
adc
sbb
jl
leave
jg
or
addl
loope
test
add
pop
lea
adc
push
push
cmp
xor
in
outsl
pop
and
cmp
xor
adc
sbb
test
push
cmp
xchg
test
mov
loopne
aad
and
mov
pop
mov
pop
and
jmp
and
movsl
sbb
cmp
and
xor
xchg
pop
xchg
aaa
mov
add
mov
mov
jne
popf
rcl
pop
xchg
shlb
cld
into
repz
ret
and
icebp
aam
and
sbb
xlat
push
imul
ficoml
ret
pushf
dec
cmp
push
sub
pop
dec
pop
stc
scas
mov
cmpsl
repnz
mov
xchg
push
and
jle
jmp
rorb
mov
rorl
lret
sbbb
loop
sbb
in
pop
outsb
lea
test
and
dec
mov
mov
push
shl
fucom
push
xor
dec
add
jne
scas
and
test
mov
cmp
cmp
mov
hlt
sbb
inc
bound
rcll
addb
push
jge
movsb
std
std
push
out
shrb
add
cmc
cwtl
lret
leave
mov
pop
jmp
xchg
or
mov
adc
push
fucomi
imul
pushf
push
pop
mov
cmp
test
mov
push
les
fs
pop
pop
mov
and
push
dec
insl
loopew
sub
mov
or
das
sub
leave
pop
sub
fs
stos
cli
shrb
shrl
lcall
pop
sub
ret
pushf
mov
jg
pushl
in
bound
in
aad
push
jne
inc
out
xor
push
jg
adc
lods
out
xor
pop
fnsave
test
mov
cmp
xor
lcall
inc
ja
mov
loope
xor
nop
pop
and
mov
pop
push
mov
leave
push
jns
imul
out
mov
sub
pop
mov
or
pop
pushf
imul
inc
scas
pop
push
hlt
sbb
inc
enter
pop
push
fsts
cmpl
psraw
push
mov
or
test
insb
es
cmovg
cltd
shrb
cmpsl
pop
nop
out
mov
and
stos
push
push
mov
mov
in
cltd
adc
int3
in
mov
push
adc
in
jbe
inc
pop
fildll
ficoml
push
int
iret
sbb
fdivl
and
dec
pop
sub
in
pushf
test
xor
mov
sbb
sub
sub
push
jecxz
shll
arpl
outsb
mov
dec
ss
aas
push
lods
aaa
pop
sbb
sub
adc
sbb
jp
jbe
push
call
nop
mov
fxch
mov
inc
mov
xchg
jbe
jp
cmp
insl
adc
mov
aad
scas
and
mov
mov
push
int
or
rorb
push
lret
lret
adc
rcrl
cltd
jge
sarb
mov
pop
movsb
mov
xchg
jl
fadds
dec
jl
clc
bound
mov
push
movsl
int3
inc
addr16
jecxz
mov
jmp
mov
scas
and
mov
cmpsl
div
fwait
pop
xchg
push
dec
adc
std
pop
nop
imul
mov
cmp
push
and
cmp
imul
push
push
xchg
repnz
das
insb
inc
or
or
fwait
lcall
les
push
in
xchg
mov
stos
xlat
fistps
cmp
nop
pop
popa
push
mov
push
sbb
cmp
push
pop
xchg
xchg
ds
data16
adc
ja
push
fwait
dec
dec
or
das
mov
sar
and
mov
fs
mov
fdivrs
std
pop
push
mov
sub
dec
lock
mov
mov
mov
ja
push
dec
cmpsb
push
xchg
int
mov
xchg
lods
xor
pusha
mov
xor
shlw
les
cmp
mov
outsl
cmpsl
aam
dec
mov
and
popl
and
push
mov
loopne
sahf
mov
push
repz
je
mov
scas
outsl
outsl
push
cli
stos
sbb
mov
sarl
lock
gs
aam
ss
mov
and
int3
mov
repz
ficompl
xchg
aaa
fstps
test
call
aaa
jge
imul
push
punpcklwd
stc
adcb
mov
jecxz
push
sbb
dec
lahf
dec
and
fucomp
fwait
enter
mov
das
ds
insl
or
dec
imul
mov
ja
or
dec
cmp
out
insb
pop
stos
test
xchg
lea
jp
jl
out
mov
shlb
xchg
add
cmp
dec
imul
cmp
mov
pop
mov
insl
jl
rorl
in
mov
adc
ret
js
pop
in
sti
insb
dec
inc
xlat
negb
cmp
add
push
mov
cmp
sahf
loop
pop
xchg
mov
imul
leave
imul
sbb
add
rcr
mov
mov
insb
das
inc
xchg
ja
xchg
xor
push
fimuls
and
mov
jp
mov
cli
inc
std
sub
pop
xor
xchg
lcall
mov
inc
mov
sbbl
jnp
nop
push
xchg
push
in
cwtl
cmpsb
mov
and
hlt
iret
out
inc
cmc
push
mov
add
dec
mov
and
out
mov
push
cli
hlt
mov
rcl
ljmp
adc
xchg
cmc
or
mov
xor
shll
std
in
lock
mov
xchg
mov
push
test
jecxz
cmp
mov
lret
jbe
cmp
push
xchg
cli
insl
fs
xchg
sub
push
insl
jb
xchg
and
ficoms
xor
iret
pop
xor
pop
cmp
mov
inc
xor
test
in
or
dec
sti
sub
pop
stc
sub
inc
mov
jle
orps
pop
loopne
jmp
add
add
add
sbbl
jecxz
pop
jl
hlt
or
ret
daa
inc
pushf
cmp
in
dec
inc
mov
adc
xchg
xor
lret
pop
test
pop
jb
adc
lret
enter
inc
jnp
jns
jbe
gs
mov
fstpl
insl
cmpsl
int3
jno
add
cltd
test
les
das
out
sub
stos
pusha
out
aas
pushf
fmuls
push
lods
cli
cs
dec
pop
lcall
push
shll
icebp
cs
mov
sbb
dec
insl
popa
setno
lahf
std
lret
popa
out
sub
and
addr16
repnz
mov
cld
data16
outsl
cltd
push
sub
add
out
add
or
sub
lret
mov
dec
sub
movsb
cmp
cli
aad
loope
in
cmp
jno
add
mov
mov
in
adc
push
sbb
and
int3
mov
sub
jbe
mov
les
enter
test
mov
pop
push
sub
sub
pop
outsl
imul
movsb
cmpsl
loopne
mov
dec
push
in
in
cmpxchg
mov
inc
jns
mov
xor
outsl
lods
adc
outsl
mov
movsb
xor
dec
add
jg
lcall
sbb
add
popa
or
mov
hlt
xor
adc
mov
cmp
fwait
scas
sbb
mov
push
push
sub
or
out
je
ja
dec
mov
lcall
pop
cmp
mov
xchg
sub
xorl
sub
push
cli
pusha
and
negb
iret
ss
stos
repz
pushf
push
pop
pop
jmp
std
fnsave
shlb
jne
jl
cmp
mov
loope
push
cmp
sbb
and
sarb
xor
sahf
inc
inc
bound
mov
mov
test
dec
cli
sbb
test
mov
lahf
orb
aas
xchg
icebp
xchg
sub
cltd
xchg
movl
orl
test
dec
lcall
cmpsl
push
mov
fnsave
lahf
cmp
and
fstps
shll
shll
outsb
mov
inc
add
add
data16
sub
hlt
add
jne
jne
stos
in
insl
push
rorb
fcomps
ret
pop
jp
imul
aaa
movsl
call
pusha
fstpl
stc
movsl
sbb
cld
adc
call
cmp
jo
fmul
push
jecxz
int3
jo
mov
dec
lea
mov
mov
push
pop
mov
or
imul
sub
inc
scas
push
jae
nop
sub
adc
rorb
aas
pop
out
mov
xchg
stos
std
pop
push
imul
fsub
in
movaps
push
imul
mov
push
push
sbb
fnstsw
dec
inc
mov
inc
push
int
inc
cmp
and
es
inc
mov
cmp
xor
cmp
loop
fistl
add
ret
xorb
leave
pop
adc
aad
mov
xchg
or
fwait
add
popf
dec
gs
mov
jne
push
dec
pop
sbb
aaa
ret
test
pusha
fists
repz
popa
mov
and
je
push
push
sub
xchg
aad
mov
jecxz
fidivrs
sub
xor
shll
cli
mov
sarl
xchg
test
rcrb
imul
and
clc
sub
push
sbb
lahf
sti
pop
inc
push
jge
mov
cli
in
cmp
out
pop
mov
mov
inc
cmp
cli
data16
add
xchg
ljmp
sub
sub
ja
xchg
jno
and
dec
pop
push
test
sub
and
dec
xchg
dec
into
into
lret
test
sub
ljmp
test
mov
mov
out
xchg
pop
roll
mov
sahf
fucomp
int
sbb
jmp
loope
stos
js
push
insb
lods
stos
pop
cs
lret
std
cmp
enter
test
add
or
xlat
mov
call
and
into
mov
pop
pop
aaa
sbb
cmp
inc
cmp
ss
fbld
out
push
mov
add
jg
jle
negb
xor
sub
mov
mov
daa
add
jns
in
js
in
in
mov
xor
out
inc
cmpsl
pop
subb
cmp
inc
in
sub
daa
std
add
or
sub
clc
cmp
imul
dec
sub
pop
icebp
sub
icebp
jmp
fisubl
and
mov
dec
aad
aas
mov
inc
sbb
shrb
loopne
mov
mov
jnp
into
push
xor
adc
shrl
push
aam
jge
cli
sarl
sub
mov
or
stos
das
leave
jle
xchg
and
test
shll
sbb
push
addl
add
fs
shll
idivl
insl
sarl
or
fisttps
inc
test
pop
push
repz
mov
cli
out
cmp
leave
rolb
out
jnp
pop
adc
cwtl
mov
xor
inc
insb
pop
dec
mov
out
dec
push
push
mov
aas
ret
cmpsb
sub
movsl
xchg
fmull
enter
mov
fiadds
inc
adc
xor
and
rcpps
mov
lret
testb
ret
xchg
sti
push
push
out
lods
sub
icebp
push
jecxz
and
repnz
pop
push
mov
mov
pusha
xchg
push
loopne
mov
push
fadds
mov
decb
lahf
sub
ret
fmuls
cmpsl
adc
add
and
rol
loope
das
lret
dec
frstors
mov
vpshlb
loop
stos
fidivl
icebp
fmull
jns
aam
fwait
inc
dec
jl
inc
aas
cmc
and
fnsave
dec
getsec
jp
pop
stos
jnp
inc
ss
xor
sbb
jno
js
insl
pop
lock
jae
loope
fsubs
sahf
jg
mov
jnp
js
ret
test
cli
mov
jl
cs
fwait
xor
jg
jns
jnp
jl
dec
scas
sbb
gs
pop
or
mov
daa
lret
pushf
sbb
lods
xchg
push
imul
je
ss
sub
add
mov
mov
jno
xchg
jnp
icebp
addr16
jmp
sub
cmp
xchg
aaa
in
inc
and
cmp
pusha
outsl
cli
jbe
movl
xchg
repnz
les
push
mov
aaa
add
sbb
int
loop
mulb
sbb
out
sbb
in
push
imul
roll
cmp
sub
push
xor
in
add
cltd
stos
ss
mov
sbbb
ret
xchg
fs
mov
xchg
xchg
xchg
and
cmp
ljmp
data16
stos
mov
or
xchg
movsb
and
jnp
mov
or
cmpl
pop
ljmp
jns
xor
ret
aas
mov
loop
cmp
into
mov
aaa
fdivrs
pop
std
sbb
cmp
jle
xchg
and
add
pop
pusha
xor
mov
insl
leave
jne
lahf
lock
mov
out
pop
repz
push
pop
aad
loope
and
cmp
btr
cmpsl
pop
cmp
inc
lahf
cmp
sbb
aaa
inc
les
popf
in
cld
es
push
mov
xorb
push
dec
int3
push
rcl
out
cltd
iret
xor
cwtl
arpl
stos
out
arpl
or
iret
push
in
and
imul
js
xchg
pop
scas
xor
jl
pop
test
popf
xchg
std
inc
ja
inc
addr16
in
xchg
sbb
fidivrl
sbb
or
pusha
mov
mov
xchg
jno
or
and
call
mov
fnstcw
jne
daa
roll
push
dec
jae
sub
insl
pop
pushf
rolb
icebp
pushf
outsl
out
in
fs
xchg
sub
ja
mov
mov
aaa
cmp
dec
push
mov
sub
add
and
iret
cmpl
out
pop
lret
stc
push
cmp
inc
and
mov
and
and
enter
xchg
dec
lock
aas
cmpsl
push
sbb
mov
nop
pop
xlat
push
adcl
insl
mov
add
test
nop
cmp
xchg
pushf
lret
lock
jno
pop
inc
or
in
xchg
mov
mov
std
fidivl
test
fcoml
leave
inc
mov
adc
test
fldlg2
inc
lcall
adc
mov
into
dec
cmc
jnp
adc
mov
xchg
add
lock
insl
mov
rcl
xchg
pop
pop
iret
fs
arpl
sbb
andl
scas
ds
mov
mov
mov
xor
scas
sahf
jmp
pop
rorl
aad
jp
or
or
andb
loope
add
fmul
pop
in
xchg
push
adcb
lods
ljmp
and
inc
jnp
add
loop
jp
pop
cld
cmpsb
mov
push
cld
push
pushf
sub
aad
arpl
jmp
test
mov
adc
daa
sahf
push
push
adc
cmp
in
outsl
rcrl
ljmp
mov
jg
jmp
or
mov
sbb
pusha
sub
push
test
movsb
fildll
jns
outsb
in
jmp
pop
add
xchg
xchg
scas
jno
pop
lods
sbb
ret
addr16
fwait
mov
or
mov
pop
test
sbb
fisubs
fiadds
jp
xor
mov
divl
mov
sahf
out
sti
jo
or
clc
cmp
or
fcoml
lret
pop
flds
sbb
or
pop
out
xlat
or
lea
mov
insb
call
pop
mov
adc
test
push
jns
mov
cltd
push
rcrb
lcall
js
popf
mov
sarb
and
data16
add
cmc
shll
rorb
sarl
dec
aas
mov
leave
sbb
pop
into
test
loop
stc
sub
inc
pop
bound
cli
arpl
cmpsl
iret
push
mov
jno
mov
mov
or
or
lods
mov
lcall
add
xchg
sub
ret
lock
loopne
ficoms
mov
lret
sbb
incb
int3
inc
stos
cmpsl
mov
push
pop
jns
jecxz
sbb
and
loop
gs
test
or
push
jmp
and
xchg
push
inc
mov
sub
or
or
jmp
out
push
xlat
popa
and
stc
push
or
pop
or
data16
cvtpi2ps
shll
sbb
out
add
sub
jno
movsl
cmp
sub
insl
inc
andb
mov
into
jge
imul
clc
hlt
insl
arpl
dec
das
inc
add
jns
movsl
inc
scas
adc
mov
add
or
cltd
sbb
inc
inc
push
push
fiaddl
cmp
out
fbld
popa
test
daa
stos
mov
push
jle
imul
dec
mov
mov
pusha
pop
popa
popl
pop
adcb
cmp
mov
xchg
xchg
test
js
ror
icebp
lcall
push
stos
pop
adc
pop
adc
xchg
fwait
test
mov
imul
cmp
shlb
int
dec
jne
leave
sub
xor
addr16
mov
bnd
push
rcll
flds
repz
push
xchg
out
or
imul
movsl
dec
xchg
fstpt
cmpsb
add
outsb
push
jbe
inc
daa
fwait
imull
jl
movsl
mov
push
inc
imul
mov
insb
cmp
jp
cmpsl
dec
in
rcll
inc
mov
sub
addr16
jne
mov
mov
stos
push
lret
insb
cmp
ljmp
call
sbb
imul
mov
adc
imul
xorb
in
dec
sti
jp
lds
fcoms
in
popa
hlt
mov
xor
pop
arpl
and
cmp
and
sub
stos
std
sub
dec
and
shl
fmul
mov
xchg
fcom
mov
push
arpl
jg
lods
aad
loopne
mov
in
jle
popl
pop
xchg
mov
push
dec
jns
cld
mov
notb
sbb
sbb
imul
mov
stc
call
mov
je
xlat
jge
out
aas
cmc
mov
aad
jae
inc
and
or
cmp
ret
call
xchg
lock
test
sub
push
fcoml
scas
pop
jne
imul
mov
or
stos
jecxz
repz
jbe
scas
mov
dec
movsb
mov
push
xor
outsb
pop
ret
cs
mov
add
mov
add
pop
in
stos
fwait
ret
push
inc
push
hlt
xchg
fcmovne
cmpsb
insb
pop
jno
adc
or
xchg
jae
add
movsl
sti
imul
lcall
je
pop
data16
jecxz
addr16
ss
push
inc
ficoml
fistpl
inc
pop
in
mov
push
mov
xchg
pushf
inc
repz
pop
push
fcmove
push
jmp
xchg
push
mov
and
jecxz
popa
loope
mov
insl
pop
cmp
push
icebp
loopne
inc
fidivl
cltd
iret
add
mov
popf
and
test
dec
pop
add
adc
outsb
in
pusha
sarb
inc
dec
lea
jmp
xchg
mov
push
insl
stos
mov
shrl
cmp
cmc
in
mov
push
push
push
bound
pop
pop
test
or
jbe
jmp
cmp
xor
out
xchg
mov
fwait
scas
fstps
push
sbb
rolb
lahf
leave
rcrl
or
out
adc
mov
enter
aas
pusha
nop
pop
scas
bnd
cmp
add
jb
pop
loopne
pop
outsl
in
test
stc
insb
push
dec
fxch
xchg
mov
xlat
arpl
outsb
fiadds
jo
shl
push
ljmp
ret
cld
in
mov
xor
ja
fadds
inc
fldt
jae
iret
and
insb
push
fiadds
dec
xor
adc
and
cli
cmpsb
mov
push
lahf
mov
sbb
and
imul
xchg
sbb
jle
cmc
aad
loope
mov
xchg
aam
repnz
dec
mov
in
aaa
fwait
push
inc
sbb
adc
cwtl
inc
xor
andl
inc
mov
cld
call
mov
add
cmp
orl
data16
jnp
jno
or
add
fcoms
sub
lahf
clc
dec
jl
inc
inc
mov
adc
dec
or
mov
enter
jg
cmpsl
push
test
mov
rcrl
dec
push
jne
je
mov
and
add
dec
iret
jbe
mov
fcoms
lret
mov
sub
hlt
dec
not
lea
aaa
movsl
dec
subl
addr16
fistpll
mov
lods
in
and
cld
ret
mov
mov
ja
jbe
mov
and
dec
leave
push
shll
int
mov
jecxz
mov
stos
jecxz
movsl
cwtl
iret
cmp
mov
lods
mov
xchg
fsubrp
add
into
faddl
cmc
scas
frstor
adc
repnz
ror
or
arpl
repz
ja
gs
dec
inc
outsl
cmp
jne
add
pusha
inc
and
pop
pop
icebp
pop
cwtl
clc
test
je
mov
scas
aad
and
xchg
testb
stos
push
sub
arpl
data16
bound
dec
jp
cmp
mov
mov
into
mov
cmp
repz
mov
xor
pop
push
mov
insl
cmpsb
mov
inc
test
or
jmp
imul
xlat
mov
cli
mov
into
push
pushf
xor
mov
sti
addr16
add
test
jnp
hlt
mov
sub
adcl
jle
test
fwait
daa
or
jne
jl
jmp
arpl
and
jl
adc
ret
cmp
pop
lds
cmp
jae
cmp
cmp
rcrb
xchg
adc
dec
xchg
insl
dec
push
or
cmp
sub
les
aaa
sub
cs
adc
jno
jge
and
and
fs
outsl
stc
pop
dec
dec
adc
mov
adc
adc
inc
cwtl
mov
mov
jo,pn
pop
adc
sub
dec
pusha
aas
mov
movsb
xchg
push
flds
xor
sbb
mov
pop
pop
xchg
xchg
cmpsb
fmul
add
jmp
sbb
pop
push
dec
or
cmp
scas
jecxz
mov
jns
xchg
xor
std
add
insb
pop
mov
cli
shrb
xchg
add
push
jae
in
mov
adcl
inc
insb
sti
in
push
out
dec
lcall
test
ret
xor
or
fadds
nop
lock
sub
idiv
mov
in
xchg
cmpsb
insb
cmc
ret
mov
imul
jnp
jge
xor
add
mov
xor
dec
ret
shlb
jmp
mov
xchg
clc
imul
pusha
lock
stos
in
fs
js
sub
mov
mov
inc
add
sbb
dec
and
jg
arpl
mov
mov
jl
and
enter
xor
add
out
or
fldl
and
outsb
call
xor
jae
sub
enter
dec
inc
xchg
sbb
or
xchg
mov
push
addr16
aad
xchg
shl
push
outsb
sbb
pop
xor
idivl
cmp
sbb
andb
jmp
in
mov
mov
sub
icebp
cmpsl
cmc
mov
add
or
jle
shll
and
add
push
mov
pop
scas
sub
es
data16
andl
push
cmp
pop
lret
push
sbbb
repz
dec
mov
out
ret
and
sbb
sarl
push
cltd
mov
sbb
aad
cmpsl
adc
addr16
mov
xor
sti
and
add
cltd
xor
sub
mov
popa
add
pop
int
scas
pop
xor
inc
add
int3
jbe
sub
sub
ja
js
pop
test
decb
sbb
nop
subl
sbb
push
int3
iret
dec
jo
jo
rolb
xchg
xor
div
push
adc
lea
movsl
mov
mov
adc
sub
outsb
inc
je
pop
mov
mov
ficoms
xlat
or
inc
movsl
scas
mov
rorl
inc
jle
fists
out
aam
pop
jg
push
aaa
lcall
aaa
out
mov
push
hlt
add
in
or
nop
sub
fidivrs
jae
sub
loope
add
or
jns
imul
or
cwtl
jae
jecxz
loopne
inc
jno
adc
clc
gs
rorb
add
adc
mov
sbb
insl
mov
or
mov
mov
xlat
into
icebp
ds
dec
stos
shlb
cltd
mov
xorb
testl
fsubrs
add
pop
sbb
mov
dec
adc
insl
push
or
lock
aad
adc
lock
xor
sbb
jg
ficoml
jl
test
arpl
pusha
arpl
pop
test
fs
xlat
xchg
push
pop
inc
push
dec
scas
mov
jl
add
cli
ss
mov
pushf
rcrl
fmuls
test
jl
outsl
xor
lcall
adc
subl
adc
aam
or
call
cmp
and
and
dec
loope
mov
inc
push
xor
pop
rcr
sbb
fldcw
push
mov
jge
rorb
xlat
adc
repnz
inc
sahf
sub
std
shrb
and
loopne
lods
adc
sub
add
mov
mov
sti
jne
cli
add
adc
mov
sbb
mov
sbb
cmc
dec
dec
cmpsb
loopne
xor
rcrb
scas
and
lea
ret
xor
lret
aaa
sub
mov
in
cmpsl
lods
into
pop
adc
mov
addr16
in
pusha
sbb
pop
arpl
shll
ret
ja
popf
mov
test
dec
push
sahf
rorb
xchg
pop
jae
pop
inc
nop
cltd
stos
popf
xor
xchg
pop
jne
xchg
aas
jl
mov
orl
je
lret
or
xchg
hlt
imul
mov
jns
loope
pop
pop
jl
inc
hlt
int
mov
ret
xchg
mulb
pusha
push
push
jmp
push
adcb
sub
cmp
leave
fstps
xor
xorb
push
stc
test
out
outsb
cmp
call
cmp
nop
pop
ss
aam
in
jb
out
and
dec
pop
pop
test
icebp
shlb
mov
push
pop
sub
push
fiaddl
mov
cmpsb
jb
dec
xchg
mov
ljmp
stc
push
in
sbb
icebp
mov
out
sbb
inc
add
xor
dec
cmpsb
push
fs
adc
inc
or
loop
repnz
fwait
cltd
push
add
rep
jne
popa
xor
les
ret
jecxz
outsb
stos
pop
xchg
sub
mov
shr
adc
mov
insb
imul
push
sbb
leave
cs
enter
cmp
movsl
jb
push
sbb
jle
add
jno
pop
das
sub
add
inc
cmp
imul
icebp
aas
fs
jbe
xchg
jb
cmp
arpl
sbb
pop
daa
cmc
in
mov
popa
dec
lret
jbe
jnp
dec
mov
mov
pop
test
push
imul
btrl
inc
push
jno
mov
dec
loop
hlt
ss
in
xchg
dec
xchg
mov
mov
sub
add
pop
movsl
jno
lcall
push
ror
pop
mov
insb
mov
push
push
inc
add
push
mov
fldcw
test
pop
xor
jge
lods
add
addl
in
jmp
cld
out
out
movsb
mov
sbb
xchg
les
add
add
push
test
xor
mov
aas
clc
pusha
cmp
cmpsl
cmp
lahf
xchg
cmpsl
sbb
in
mov
mov
popf
jmp
jle
cmp
repnz
dec
sub
out
or
cmp
addr16
sbb
imul
iret
in
into
sbb
mov
pop
pand
gs
push
or
inc
sub
out
xlat
cwtl
push
cmp
shll
stos
and
cs
dec
call
mov
nop
cmpsb
stos
dec
sub
adc
sbb
lahf
jl
int
xchg
in
cltd
mov
mov
test
sbb
fwait
loop
inc
insl
xchg
fists
mov
mov
push
cmp
push
in
mov
leave
jl
jecxz
dec
inc
push
jno
outsb
add
mov
push
push
adc
sub
mov
jae
sbb
movsl
enter
inc
push
and
adc
fcmovnbe
push
aam
subl
adc
das
jp
cmpsb
and
incl
xchg
jae
icebp
arpl
or
out
out
imul
mov
divb
push
xor
sub
out
neg
mov
or
dec
outsl
movsb
cmp
xchg
and
test
xchg
lods
cmpsl
pop
or
pop
scas
pop
test
js
mov
shrl
imul
jno
lods
cmp
inc
xchg
adc
mov
in
inc
js
mov
test
pushl
inc
clc
in
inc
add
push
outsl
pop
cwtl
cmp
lea
int
push
cmpsb
push
jae
cld
push
aaa
int3
adc
cwtl
push
push
add
push
test
mov
daa
cmp
fxch
cmp
or
mov
imul
dec
mov
lock
loop
pushf
inc
xor
inc
repnz
push
mov
or
daa
clc
shll
fisubrl
enter
mov
imul
outsl
mov
lds
pushf
jle
fisttps
cmp
push
push
vorpd
out
outsb
vmwrite
jno
lds
cmp
in
sub
leave
xor
divb
jns
popa
lahf
int3
push
sbb
ret
jl
int
jne
jb
scas
and
and
or
adc
ret
and
lock
lret
nop
out
rcrl
mov
cltd
daa
jl
dec
adc
xchg
into
xlat
outsl
daa
out
pop
jo
int3
dec
ret
mov
inc
addr16
jns
in
mov
ljmp
dec
mov
or
sbb
mov
inc
ljmp
mov
cwtl
mov
mov
push
mov
dec
mov
in
imul
pop
fadds
mov
adc
movsb
inc
negb
stos
inc
adcl
pop
lock
js
aam
cltd
cmp
or
icebp
das
inc
cmp
ret
mov
ss
dec
sbb
lock
add
add
outsl
xabort
sub
mov
jno
fdivr
mov
enter
xor
mov
push
jb
xor
cmc
lcall
movsb
dec
fwait
and
mov
fnsave
xor
jecxz
repz
cltd
sbb
xchg
cli
stc
pop
jmp
xchg
inc
xchg
jo
xchg
sub
fidivl
sbb
je
dec
cmp
adc
add
xchg
xchg
mov
jp
mov
mov
aaa
sbb
rcll
jg
roll
mov
bound
hlt
mov
fsubp
xor
stc
shll
inc
sub
push
sbb
adc
repnz
out
pop
jnp
int3
lahf
aad
das
clc
daa
movsb
rol
int
cmpsl
adc
mov
or
and
addr16
push
scas
push
xchg
in
out
mov
push
push
lcall
and
push
call
ret
cltd
iret
js
sbb
push
adc
jle
jg
and
mov
mov
adc
pop
in
pop
and
ds
lods
mov
jb
sbbl
icebp
ret
or
jmp
js
cmc
rorl
lea
rcl
xchg
mov
mov
daa
cmp
int3
xlat
pop
lret
ret
cmp
inc
leave
loop
jge
xchg
fcmovnbe
fsubrs
inc
inc
add
enter
aad
sub
mov
jecxz
aaa
mov
jb
cwtl
aas
cmp
adc
xlat
adc
andl
jmp
iret
xor
std
repnz
adc
mov
test
out
jbe
sub
mov
add
and
mov
popa
jne
test
cs
xlat
and
xchg
lcall
xorb
fs
shl
xor
inc
mov
out
sti
adc
insb
push
add
call
mov
pop
xor
rcrl
mov
mov
or
inc
add
cmp
sahf
xchg
lds
sub
clc
aaa
or
insl
xchg
xchg
ljmp
sub
aad
sti
xorb
je
mov
adcl
test
mov
jecxz
int
inc
adc
add
jnp
xor
test
cmp
pop
aam
mov
loopne
cmp
cmc
xchg
xorb
test
xor
inc
lcall
bound
sub
les
cmp
data16
insb
sub
push
jl
shlb
in
cmp
inc
test
shlb
fwait
cld
outsb
mov
loope
sub
in
imul
jnp
mov
aas
mov
orl
jb
sbb
hlt
imul
loop
pop
inc
sbb
push
nop
or
pop
cmp
mov
mov
pop
cmpsl
bswap
lret
and
adc
and
add
lret
xchg
mov
add
sti
sbb
call
sbb
je
sahf
pop
dec
jg
clc
in
adc
mov
pop
popa
insl
mov
inc
sti
subl
mov
shrl
sub
adc
hlt
or
sub
lods
fsts
insl
ret
dec
js
call
cltd
or
aas
inc
cmp
dec
sbb
pop
or
out
shrl
push
out
adc
aas
popf
mov
fucomp
outsb
out
adc
jecxz
xor
inc
mov
js
push
mov
sub
loopne
mov
sbb
sahf
mov
adc
pushf
jge
mov
inc
inc
outsl
adc
sub
add
or
adc
fwait
xchg
mov
jl
xchg
or
add
enter
call
add
cltd
add
je
mov
jne
sbb
out
mov
or
jo
shl
jo
lret
push
shl
mov
fstps
nop
push
int3
push
cmp
in
jo
push
lea
lock
clc
xchg
cltd
leave
mov
mov
mov
xchg
lret
jp
bound
mov
jb
popf
pop
gs
pop
jne
ljmp
ret
push
cmp
outsl
loopne
lock
ret
sti
fistl
out
push
aaa
pop
mov
cwtl
das
mov
mov
nop
sar
xchg
push
and
jmp
add
hlt
mov
std
repz
incl
fcoms
cmp
xor
jge
or
lods
imul
jmp
xchg
cmp
dec
and
mov
add
pop
dec
dec
testb
xor
out
or
mov
mov
jg
jb
xor
frstor
add
lock
cmpb
leave
in
inc
addr16
filds
dec
jbe
je
push
jbe
sub
cmpsb
xor
enter
rclb
fwait
jbe
xor
pop
mov
or
out
pushf
pusha
jnp
adc
xchg
adc
lcall
das
adc
push
mov
pop
mov
sub
shrl
cwtl
jbe
jo
data16
js
jp
mov
fidivrs
dec
xchg
fadds
jle
adc
add
sbb
sbb
adc
or
imul
das
js
dec
fldenv
aam
out
pop
xor
shlb
inc
pop
xlat
fsubl
jae
ds
cli
add
loopne
pop
dec
je
lcall
stc
sbb
mov
pop
sbb
adc
bound
sbb
test
jle
pop
jne
mov
adc
fnstcw
scas
cmp
sbb
xchg
xchg
dec
int
dec
mov
movsb
in
jb
xchg
jg
jg
adc
xlat
jne
pop
mov
xchg
test
test
dec
cli
push
jne
lcall
sbb
add
leave
mov
repz
vpslld
push
test
in
test
in
icebp
add
jp
adc
pop
popa
push
mov
divl
sbb
inc
adc
push
mull
lds
pop
negl
cmp
mov
mov
ja
xchg
clc
xchg
xchg
xor
lods
push
jbe
andb
fwait
inc
sub
cs
xor
dec
cli
sbb
sti
or
mov
xchg
inc
pextrw
mov
sub
mov
fcomi
adc
jnp
in
shrb
ds
shrb
xchg
iretw
pop
call
aas
xchg
bound
and
movsl
pushl
cmpsb
push
jno
rcrl
adc
and
cmpsl
sbb
sub
nop
loop
sbb
mov
stc
jl
inc
dec
lods
test
and
pop
dec
and
aad
push
iret
bound
and
xlat
pushf
inc
mov
or
jp
inc
out
pop
jo
pop
push
mov
xchg
sub
jmp
icebp
aam
jge
dec
mov
pop
in
or
push
xchg
xchg
push
xchg
mov
test
push
out
push
xchg
pop
or
add
nop
add
jns
inc
push
xchg
les
into
xor
push
xor
rclb
out
lahf
cltd
ret
or
mov
sub
pop
popf
or
ret
and
insl
or
pop
push
and
pusha
and
fldl2e
imul
fidivs
aaa
jo
mov
pop
lock
cmpsb
movsb
mov
insl
andb
std
idivl
in
xchg
pushf
push
aaa
mov
lock
cmp
aam
int3
mov
stos
push
outsb
xor
cs
and
enter
xor
inc
adc
adc
xlat
outsb
cmp
sub
add
mov
fmul
adc
rcr
mov
mov
inc
push
dec
lods
fs
les
cmc
push
movb
mov
frstor
mov
cmp
mov
push
mov
movsb
pop
inc
rdmsr
pop
test
sub
test
adc
cmpsb
or
ficomps
hlt
mov
push
push
sbb
and
xchg
cmp
pop
lods
lcall
fisubs
movsb
dec
popf
adc
inc
int3
and
xor
fdivrs
mov
sub
cmp
sarl
daa
and
lods
xchg
shr
sti
push
mov
xchg
xor
jp
pushf
or
mov
push
sub
inc
xchg
xor
pop
jo
mov
jbe
test
fcmovu
xchg
nop
and
or
in
lock
stc
popf
sti
mov
stc
mov
pushf
adc
dec
push
lea
sub
rcrb
inc
adc
fwait
mov
xlat
sub
sub
js
vprotd
push
or
out
lock
jae
in
lret
cmp
push
mov
sti
in
inc
scas
mov
sbb
add
pop
repz
push
insb
mov
mov
rorb
in
pop
push
pop
loope
dec
mov
lods
adc
test
inc
xor
fmull
inc
pusha
call
imull
xlat
fisubs
dec
dec
call
mov
sub
or
aaa
sbb
and
sti
fstp
jmp
fcmovnu
imul
mov
dec
outsl
cmpsb
dec
mov
sahf
aaa
sbb
lcall
sbb
and
inc
mov
lds
push
cwtl
push
jo
ljmp
fstl
in
out
jnp
inc
xlat
in
iret
rolb
push
nop
push
jl
ret
lret
fldenv
ret
movsl
dec
inc
mov
int3
ja
push
lock
outsl
jle
mov
mov
fldcw
add
arpl
js
push
out
fists
add
dec
mov
and
frstor
cmp
test
bound
add
mov
icebp
jo
push
add
pop
lds
sbb
addr16
aam
mov
add
test
mov
pushf
adc
or
iret
das
cmp
mov
sti
int
adc
add
jns
or
mov
out
add
mov
push
push
push
jb
in
xlat
insl
mov
cs
mov
mov
jns
mov
pop
leave
fcmovne
push
stos
pop
mov
xlat
jl
in
or
outsl
jns
adc
int3
push
adc
fs
sub
bound
jo
lods
test
and
loopne
sbb
aaa
fisubl
inc
push
mov
mov
dec
in
imul
cs
out
clc
add
xchg
and
stos
enter
movsl
push
cmpsb
andb
out
add
or
push
sub
out
shl
xchg
lret
daa
rorb
lret
sar
dec
xchg
cmp
shr
mov
jp
jmp
clc
incl
cmpl
imul
jae
lret
in
mov
adc
dec
adc
push
mov
add
xchg
imul
push
rcrl
pop
rcrb
inc
push
add
jns
jg
adc
sbb
call
cwtl
pop
lcall
rcrb
xor
inc
and
sub
jne
sar
push
xor
pop
lahf
inc
lock
daa
mov
mov
fisttpl
ljmp
jmp
idivb
cmc
and
jbe
dec
aaa
xor
xor
les
sbb
lock
mov
std
sbb
clc
inc
test
fsubs
jne
lret
xor
dec
xlat
dec
iret
notl
aam
cli
mov
pop
sbb
into
push
fsubp
ret
fildl
stos
mov
add
pop
inc
subb
sti
dec
insl
arpl
xchg
mov
mov
das
mov
adc
lods
movsl
and
movsl
pushf
shrl
daa
or
or
jbe
movsl
clc
mov
pop
xor
sbb
sbb
rol
lret
fcmovnbe
ds
push
mov
pop
cwtl
arpl
test
filds
fimull
ret
push
pop
cmp
ss
ljmp
fisttpl
xchg
mov
push
cmpsb
aaa
cmpsl
jmp
cwtl
and
out
mov
mov
xchg
xor
xchg
mov
inc
mov
je
pushf
push
add
sub
fstpl
les
push
jge
mov
dec
rorl
lret
mov
cmc
cli
fldl
mov
push
test
incl
outsb
jg
or
fldpi
and
push
mov
mov
lods
cmp
pop
add
out
jp
fmull
ljmp
int3
shlb
inc
mov
jp
pop
xchg
pop
mov
mov
dec
cmpsl
push
or
stos
xchg
pop
push
cld
nop
mov
or
outsl
call
clc
xor
frndint
push
push
andb
mov
scas
mov
das
xchg
clc
shr
test
int3
icebp
cmpsb
xchg
fwait
les
push
call
push
mov
dec
sahf
push
pop
inc
pushf
push
inc
push
pop
push
cwtl
lret
pop
mov
ljmp
push
aaa
xchg
pop
or
jp
cld
fcoml
or
pop
ds
fidivrs
jno
cmp
insb
in
std
aad
jmp
mov
pop
xchg
sti
xchg
dec
sub
fsubl
push
aaa
test
inc
std
scas
imul
xchg
sarb
inc
testb
int3
xorl
mov
jne
pop
enter
les
clc
jae
jle
mov
or
jb
mov
mov
mov
stos
call
out
ljmp
scas
lcall
int3
mov
cmpsb
inc
roll
arpl
dec
std
imul
mov
xchg
insl
push
out
xchg
rcr
fdivl
sbb
sbb
call
dec
sub
or
push
dec
and
xchg
add
xchg
js
arpl
aam
in
pop
into
dec
mov
shl
in
jae
sub
in
fidivrs
lret
pop
addps
xchg
test
sub
pusha
lock
subb
in
divl
cmpsb
call
mov
jle
and
add
or
mov
pop
cltd
into
cmp
mov
lea
jge
push
jecxz
adc
mov
jae
mov
fdivrs
cmpsl
dec
fidivrl
cs
push
and
mov
xchg
or
push
xor
cmp
test
ror
sti
or
fsubs
jl
fwait
movsb
inc
xor
rorl
lock
ja
data16
out
lods
inc
pusha
mov
pop
jecxz
mov
dec
and
roll
xor
out
push
in
mov
sbb
dec
jl
inc
xor
xchg
fs
jmp
inc
jmp
wbinvd
push
xchg
mov
mov
xor
xlat
ret
loopne
repnz
mov
add
out
lcall
mov
pusha
jge
jns
cltd
push
inc
push
out
mov
sub
mov
stc
sub
loope
cmp
push
pusha
imul
add
adc
jge
mov
fcoml
xchg
cli
ret
js
mov
xchg
fsubrs
mov
repnz
filds
lds
jns
out
push
mov
mov
add
jp
and
xchg
mov
add
sub
lahf
insb
push
dec
shlb
cmpsb
das
push
mov
or
add
stos
loop
sbb
xlat
add
or
xchg
rcrl
cmpsb
mov
or
es
imul
inc
repz
sbb
lock
pop
fsubrl
bound
push
nop
fs
cmp
nop
sbb
mov
mov
not
mov
xor
icebp
xchg
or
mov
sbb
xchg
cs
sub
aas
aas
fwait
out
mov
mov
test
sbb
push
sbb
out
iret
inc
outsb
dec
push
and
test
in
mov
cmpsb
mov
lds
mov
or
mov
cli
mov
mov
aaa
pop
dec
push
out
cmpsl
add
or
xor
sbb
pusha
pop
fdiv
imul
out
jbe
mov
stos
scas
pop
repnz
add
int
aas
xor
push
adc
rorb
cmp
push
pop
in
xchg
adc
fcompl
cmp
jb
out
xchg
mov
ss
inc
add
mov
adcl
out
lods
stos
jp
pop
mov
test
mov
push
cld
cmpsl
xor
fisubrs
mov
adc
jl
gs
lds
lcall
lea
call
hlt
push
adcb
ljmp
mov
cwtl
leave
mov
xchg
and
pop
imull
xor
lods
aam
xchg
sub
or
sar
jle
mov
fidivrs
imul
sub
push
ja
fld
xchg
repz
popf
xlat
lret
testl
sub
out
mov
cltd
es
dec
jns
ficoms
jmp
shlb
outsl
dec
jb
push
pushf
bound
nop
pop
adc
mov
and
lret
add
repnz
mov
in
dec
sbb
test
gs
loope
push
hlt
jecxz
xchg
add
test
sti
or
sbb
imul
xor
xchg
in
repnz
ret
and
cmpsl
pop
aam
lods
in
xor
out
dec
or
add
inc
push
lret
jne
cmp
rcrb
out
xchg
mov
insl
lock
int
or
push
or
cmp
enter
cmpl
je
outsb
js
stos
sbb
push
stc
out
dec
xchg
nop
mov
test
imul
sub
pop
fcomps
std
mov
test
lock
sub
mov
jo
pop
push
dec
jo
xor
shrb
jecxz
push
dec
cwtl
mov
pushf
dec
cmpsb
mov
roll
xchg
lods
imul
and
jbe
adc
sarb
pop
lahf
jl
lea
aaa
sub
sar
fcoml
scas
push
pusha
ss
dec
or
fcomp
ss
scas
xor
movsb
push
orb
pop
and
ljmp
lods
push
rorl
icebp
pop
insl
fwait
adcb
shl
dec
xor
xchg
je
mov
out
inc
scas
in
cmc
mov
cmp
mov
mov
mov
ds
shrb
jg
pop
in
adc
mov
mov
jno
test
insl
push
test
mov
mov
cmp
fidivl
clc
pushf
aaa
popw
and
or
cwtl
sbbb
xchg
rcrb
mov
xchg
cli
mov
lods
lds
xor
inc
fidivrl
ret
sub
mov
jge
out
inc
xchg
jl
dec
test
sahf
frstor
xchg
mov
popa
jno
mov
mov
addr16
sub
pop
lods
xchg
addb
fldt
jb
cmp
mov
push
inc
aaa
jbe
dec
mov
aam
adc
lods
sub
inc
test
mov
xchg
lret
rcrb
xor
push
mov
ss
into
mov
arpl
aad
int
mov
xor
lahf
fbld
into
lds
outsl
adc
rolb
loopne
out
lock
repnz
scas
mulps
popa
popf
or
cmp
mov
stos
imul
dec
movsb
out
fiaddl
pop
cmp
inc
mov
jecxz
push
in
loopne
sar
gs
mov
insl
jle
test
jl
xchg
jg
cmpl
sub
inc
mov
aad
std
or
inc
movsb
jg
loop
add
xchg
adc
mov
ret
xor
sbb
hlt
jne
cmovbe
int3
jecxz
fstpl
jmp
fldl
aad
cmpsb
ficoms
cltd
add
call
mov
sub
fdivr
xchg
push
lahf
inc
sub
push
cli
adc
sbb
push
jo
clc
fldl
jl
sti
mov
je
jb
lahf
sub
inc
cmpsl
popf
dec
lret
mov
adc
mov
push
and
xchg
loope
aad
inc
inc
jns
mov
push
dec
mov
stos
out
ds
mov
push
fiaddl
movsl
or
aas
clc
sbb
lret
cwtl
insl
fdivl
pop
insb
in
pop
test
imul
push
jg
scas
cmpsl
lock
dec
clc
popa
pop
fwait
jle
pop
cmp
dec
mov
push
call
sahf
dec
dec
mov
stc
push
mov
into
sub
sub
lods
and
push
fistpl
and
inc
arpl
xlat
std
cmpsb
mov
xchg
inc
xchg
ror
jnp
shlb
mov
xchg
movb
xchg
js
enter
inc
rolb
imul
test
cmpsl
jno
pop
es
cmp
repz
inc
scas
adc
push
mov
or
jb
sbb
jnp
rclb
or
add
cs
roll
or
push
aas
push
inc
cmp
pusha
mov
imul
dec
mov
mov
xchg
add
push
cmp
test
mov
test
inc
xchg
pop
mov
shl
pop
daa
nop
and
cmp
ja
mov
jno
scas
cmp
xor
subl
sub
test
int3
xor
pop
lret
mov
add
mov
and
inc
inc
mov
dec
add
cltd
xchg
lahf
mov
xor
mov
fimuls
cmp
pop
mov
or
rclb
pusha
mov
xchg
mov
dec
jo
cltd
sarb
cs
mov
stc
hlt
pop
popf
movsl
cmp
push
inc
rcrb
xor
hlt
mov
dec
nop
mov
in
jecxz
sbb
xchg
mov
enter
mov
xor
aaa
jne
bound
out
push
stos
push
outsb
nop
mov
and
cmp
push
jp
pop
out
fdivrl
and
inc
add
and
cmp
push
clc
rdtsc
mov
stos
or
pop
dec
in
mov
dec
add
aad
imul
jnp
pop
stc
cmp
mov
jmp
pop
add
push
cmp
xchg
out
cmp
int
mov
loop
imul
les
movsb
and
in
push
mov
aas
repz
xor
test
es
mov
cld
dec
orb
fisttpl
negb
mov
jnp
push
mov
in
push
ja
add
jae
cmpsb
pop
inc
cmpsb
dec
popf
scas
or
pop
jecxz
retw
andb
pop
lcall
data16
sahf
add
ret
test
jg
aam
int3
jecxz
fcoml
cmpsb
add
dec
fxtract
aaa
out
out
xchg
adcb
mov
cli
sub
adc
sbb
hlt
fisttpl
les
fldenv
repnz
cltd
jmp
mov
imul
test
mov
or
dec
inc
loop
adc
mov
sub
addl
jmp
jg
ss
pop
or
mov
cli
sbbb
aas
mov
imul
cltd
jg
pop
sbb
popf
xor
jge
imul
movsb
in
jmp
sub
sbb
sbb
mov
push
mov
push
outsl
mov
imul
iret
jge
sub
pop
mov
cmp
mov
pop
or
dec
lcall
or
cmp
in
sbb
iret
adc
mov
ret
mov
idivl
pop
inc
imul
out
incl
fidivs
push
out
imul
mov
push
xchg
call
xchg
call
sub
ret
scas
or
pop
shrl
popf
jmp
mov
pop
and
push
cmp
jmp
xor
shrb
mov
repz
or
inc
daa
mov
hlt
add
sub
add
lds
inc
jo
or
int
pop
jle
xor
cmpsb
lea
mov
jae
cmp
adc
xchg
mov
xchg
out
iret
test
inc
ret
push
sub
jge
ljmp
push
xchg
pop
ja
mov
in
lock
imul
push
xor
xchg
jbe
mov
xchg
mov
push
fwait
xor
xchg
fisttps
cltd
jg
mov
mov
inc
xor
sub
sti
dec
push
test
adcb
or
test
cmp
js
and
sbb
shlb
shlb
adc
pop
popa
daa
jge
mov
dec
push
aas
or
push
out
jle
cwtl
mov
mov
fsubs
test
cmp
and
mov
sbb
pop
popa
pop
aam
movsb
inc
leave
lret
xor
mov
push
bound
cmp
insl
iret
loope
ss
mov
gs
aaa
cmpsb
dec
sub
and
gs
jecxz
fst
scas
pop
icebp
lret
mov
dec
pushf
dec
jp
out
push
add
xor
mov
jnp
mov
pusha
mov
ss
int
cmpsb
fbld
in
or
add
mov
xor
jmp
sbb
jge
or
and
jmp
icebp
adc
pop
aad
std
hlt
mov
mov
xor
xchg
jnp
lahf
dec
lret
sbb
mov
adc
icebp
push
jg
mov
int
xchg
in
fcmovb
inc
mov
pop
int
and
in
push
or
stos
mov
push
lods
cltd
adc
push
cli
sub
add
or
in
sbb
mov
mov
out
or
mov
sub
ret
cltd
mov
push
add
and
jo
xor
sbb
cmpsb
sbb
jmp
xchg
aad
ret
lds
push
sbb
fsubrp
pop
addr16
inc
and
jnp
decb
mov
fildll
inc
enter
cld
ss
add
mov
lcall
mov
jg
loopne
fwait
scas
xor
mov
pop
mov
push
fildll
in
call
arpl
outsb
outsl
int
inc
leave
dec
or
lods
and
pop
mov
xchg
mov
xchg
ds
insb
arpl
sbb
push
out
mov
mov
fcoms
insb
test
dec
sub
call
js
mov
cmp
jmp
cli
sarl
or
adc
adc
sar
mov
lock
xchg
dec
mov
movsl
push
stos
inc
imul
dec
push
in
subl
mov
in
sbb
outsb
pop
push
outsl
add
into
dec
ficoml
cmp
pop
pop
pop
fistps
sub
sbb
jp
nop
push
ret
cld
xchg
sub
cmp
lock
mov
call
or
push
or
stos
ja
mov
sub
cmp
pop
sub
lahf
xor
adc
rcll
lahf
push
test
pop
inc
or
xchg
std
dec
jbe
pop
bound
lock
mov
test
insl
and
imul
pop
inc
xchg
jp
outsl
mov
mov
clc
mov
stc
scas
imul
sbb
or
sbb
loop
jo
jg
lcall
push
bound
jbe
call
inc
fwait
sbbb
mov
ret
push
lods
out
leave
mov
repnz
aad
push
inc
adc
out
ss
xlat
jbe
and
inc
xchg
sbb
mov
jp
add
sti
adc
std
xor
or
lahf
in
xchg
popf
lock
sbb
test
dec
das
pop
ss
ss
jge
mov
addl
sub
add
inc
dec
sub
sub
aaa
dec
mov
popa
pop
fimuls
xor
int3
cmpb
jo
ss
in
or
xlat
fwait
or
mov
xchg
adc
rclb
cli
mov
and
push
inc
sub
mov
mov
inc
mov
leave
cmp
int
sbb
cltd
xor
shr
clc
pop
ja
cld
sbb
push
mov
sub
cli
cmp
pop
mov
cmp
push
mov
dec
mov
rcl
adc
cli
or
jl
lock
inc
cld
fmull
daa
mov
cmc
jmp
mov
or
add
leave
int3
sub
xchg
sbb
imull
addr16
subb
mov
xchg
in
mov
gs
mov
pusha
orb
setp
hlt
shll
fadds
pop
push
ds
fmul
das
pop
sub
pop
lahf
sbb
pop
stos
and
in
mov
push
and
out
cmp
popf
sub
ljmp
push
push
mov
js
jae
dec
aam
in
ficoml
in
fidivs
jae
rorl
or
cmc
mov
sub
dec
outsb
shrb
adc
lahf
adc
jb
insb
mov
fmulp
ficomps
push
scas
add
test
testl
mov
dec
out
cmp
lret
or
lea
out
jae
xchg
xchg
sub
ja
outsb
repz
push
or
inc
inc
aad
pop
inc
fdivrp
or
dec
add
sub
movl
call
fnsave
xchg
icebp
mov
xchg
xor
sbb
xor
scas
mov
adc
xchg
addr16
jge
dec
std
std
fwait
shr
jne
pop
lock
sbb
das
ja
lods
fs
std
jne
jmp
loop
iret
or
add
and
dec
dec
mov
sbb
pop
adc
xlat
push
shl
sahf
push
add
push
push
mov
iret
movsb
mov
popf
pop
into
xor
jb
dec
add
hlt
dec
shrl
aaa
jmp
incl
push
xor
mov
mov
sbb
xorl
dec
cmp
fwait
outsl
add
xlat
repz
mov
icebp
fsubrs
inc
je
fistl
inc
and
mov
jno
lods
xchg
mov
inc
jecxz
xor
stos
fwait
inc
mov
mov
mov
mov
enter
jno
gs
roll
fstl
fwait
jno
add
shrb
popa
cld
mov
cmp
cltd
or
mov
dec
add
and
xchg
aaa
ss
nop
fsubr
sub
push
dec
and
mov
and
imul
xchg
jle
testl
xor
or
les
cmp
mov
cmc
in
loopne
loopne
inc
scas
mov
cmp
ficoml
cmp
and
dec
dec
or
push
push
mov
imul
rcrb
les
shl
pop
popf
ret
adc
push
pop
imul
insl
sbb
movb
lods
jno
lret
fwait
mov
cli
push
xchg
fwait
nop
lret
inc
int
inc
add
loope
jg
push
pop
cmp
mov
xlat
xchg
and
mov
imul
ret
push
popa
cmp
and
or
test
in
jb
pusha
sub
fisubl
inc
hlt
mov
iret
popa
insb
testb
imul
movsl
fwait
or
mov
test
sbb
adc
call
xlat
inc
adc
push
push
lret
or
test
in
cmp
enter
jne
cs
dec
mov
test
iret
dec
outsb
adc
inc
dec
xchg
xor
insl
cli
insl
push
pop
in
xor
add
sub
dec
add
mov
mov
icebp
loopne
mov
lods
mov
cmc
mov
or
adc
add
or
int3
adc
enter
popa
out
inc
popa
xchg
sbb
mov
cmp
inc
fisubs
imul
mov
stc
mov
inc
mov
jo
movsb
mov
mov
dec
out
adc
stc
pop
pop
jb
iret
fisubrl
mov
dec
inc
shrl
inc
adc
movsl
lret
ja
testb
sbb
nop
imull
push
adc
mov
hlt
cmp
inc
rcl
push
jnp
mov
push
push
xchg
pop
push
mov
fmull
insb
mov
aam
jmp
inc
mov
nop
push
repz
jne
or
arpl
or
jl
pop
mov
jne
dec
sbb
and
dec
lea
push
or
mov
out
cmpsl
lret
and
push
push
andl
jge
adcb
fucom
sbb
mov
fistps
sub
push
dec
dec
mov
or
sbb
cmc
movsb
lret
fimull
lods
sbb
xor
mov
xlat
test
xor
adc
cmpsb
ds
ds
sbb
mov
dec
and
mov
sahf
je
icebp
sub
mov
mov
jne
dec
jl
or
push
mov
add
je
or
dec
es
test
out
or
cmp
and
fwait
push
test
jns
and
cwtl
jne
adc
mov
test
sub
xchg
lds
sub
and
sub
inc
mov
in
push
in
pop
test
xor
adc
jle
mov
mov
adc
cmp
jns
mov
into
jle
xchg
enter
mov
push
jne
test
mov
ret
xchg
js
xor
shll
xor
adc
xchg
mov
into
mov
pop
ds
ja
call
loopne
xor
jecxz
mov
or
insl
sbb
pop
das
shlb
mov
scas
inc
cmp
enter
adc
pop
insl
cli
cmp
push
shll
pop
test
sbb
or
dec
inc
sbb
pushf
jb
fdivl
test
aad
insl
push
outsb
push
jmp
lock
scas
push
ss
imul
or
andb
adc
push
gs
outsb
dec
popf
call
ret
push
xor
xor
adc
clc
iret
mov
mov
sbb
mov
in
gs
addb
mov
test
ja
pop
js
dec
scas
mov
jo
push
inc
dec
inc
mov
insb
insl
mov
jb
pop
push
sarb
sbb
leave
ss
or
int3
in
cli
sbb
pop
jbe
xchg
shll
test
lcall
data16
fwait
ror
xor
les
arpl
lret
mov
sbb
mov
adc
fs
sub
popf
cmpsl
out
lods
xchg
sbb
les
sahf
and
xchg
jecxz
fidivrs
xchg
sub
in
and
xchg
push
xchg
sub
cmp
fs
mov
push
popf
mov
out
add
sbb
jmp
ss
adc
inc
push
sub
shr
outsb
fists
mov
out
xor
fldenv
rcrl
xchg
jae
lea
mov
std
insb
in
mov
mov
lret
xor
into
pop
add
adc
addps
mov
xchg
inc
and
rdpmc
clc
jmp
lret
push
or
mov
clc
add
dec
xchg
add
jbe
sub
dec
rol
and
xor
inc
aad
nop
in
fs
xchg
xor
dec
and
mov
or
test
in
xlat
fwait
sub
shll
push
sbb
push
test
fsts
push
scas
mov
mov
and
add
inc
mov
outsb
fdivs
mov
jecxz
dec
aaa
push
jle
dec
insb
jnp
add
into
insb
ja
xchg
inc
cmp
push
mov
cmp
popf
push
inc
mov
cmc
xchg
mov
mov
fcmove
popf
leave
sub
mov
sbb
hlt
adc
add
das
mov
mov
mov
stos
adc
lahf
mov
dec
pushf
es
test
inc
stc
fxch
cmpl
ja
pop
mov
jns
dec
gs
test
test
dec
ja
outsb
imul
mov
mov
aam
insb
push
push
cmp
lods
jg
push
loope
inc
andb
cmp
sbb
cmc
movb
daa
xor
mov
notl
loop
xchg
jb
out
aam
leave
sbb
test
inc
jmp
and
loope
hlt
mov
sbb
mov
sbb
adc
jns
pusha
jp
ja
jmp
pushf
bswap
in
mov
faddl
les
cmc
in
bound
sub
push
jmp
lods
push
std
not
inc
into
and
fs
adc
push
lds
xchg
jp
xlat
add
pop
mov
mov
scas
jne
arpl
ss
inc
test
or
push
aas
adc
loopne
push
lea
push
jmp
std
pop
popf
sub
jnp
dec
adc
aaa
and
in
popf
cmp
fstl
clc
sub
cmp
pop
xor
and
int
gs
cmpsb
cmpsb
fcmovb
jns
fldenv
mov
mov
add
cwtl
mov
jmp
hlt
inc
in
pop
bound
xchg
int3
pop
mov
dec
sahf
arpl
xor
shrb
es
mov
sub
out
lcall
and
pop
mov
sub
ret
jbe
mov
mov
out
jns
pushf
scas
repz
in
xchg
xchg
fmulp
add
aam
stos
addr16
test
cmpsl
lahf
inc
jnp
outsb
push
xor
sub
mov
out
lcall
je
cmp
mov
pop
push
pop
jg
imulb
mov
loopne
push
fwait
mov
ret
mov
lcall
lds
push
xchg
mov
fwait
js
out
and
xchg
into
pop
int3
jo
mov
lret
and
test
jg
cmpb
cs
lea
sub
notb
les
add
out
icebp
push
jae
sub
stos
test
imul
idiv
rcr
enter
mov
mov
stos
out
xor
push
hlt
xchg
cmp
sbb
mov
or
inc
xchg
inc
movups
sahf
cmp
out
add
dec
and
subb
test
hlt
adc
cmpsb
inc
cmp
gs
mov
fcomps
push
shlb
and
addr16
add
xlat
rolb
jle
frstor
cmpsb
insb
aaa
enter
mov
sarb
int
out
xchg
adc
data16
jne
and
je
jne
repnz
inc
xchg
out
cmp
dec
cmp
nop
push
jae
bound
or
pop
push
aaa
movsb
int3
fidivl
sub
mov
inc
pushf
sti
inc
fildll
cli
loope
repz
add
scas
xorb
ret
lahf
jnp
inc
icebp
adc
sub
popa
adc
pop
mov
aaa
cli
shlb
je
push
cltd
sbb
cmp
xorb
test
in
jne
jno
popf
xor
ds
mov
mov
orb
sub
add
inc
adc
pop
arpl
sbb
stos
lret
mov
adc
dec
push
cwtl
inc
sbb
mov
negb
shrl
xor
adc
mov
lcall
push
push
cltd
les
sbb
pop
bound
push
push
xor
pusha
push
imul
xchg
mov
cmp
cs
or
sarb
orl
jp
jae
jo
test
imul
add
fildll
jns
or
cmp
push
pushf
jns
loope
mov
movsl
or
pop
pop
mov
pop
rorb
jae
imul
fisttpl
shlb
pop
pusha
adc
enter
aam
test
fldl
into
test
pop
imul
push
sbb
enter
call
jmp
mov
adc
outsb
mov
cmpsb
ret
scas
subl
cli
std
mov
pop
dec
pop
xor
jbe
aas
pop
xchg
push
mov
push
out
dec
mov
mov
popf
lret
cmp
pop
loopne
jnp
imul
xchg
cmp
dec
out
cmp
or
mov
mov
xor
inc
pop
movb
or
inc
mov
mov
mov
cltd
incl
xlat
in
ss
or
fiaddl
shl
push
pushl
jmp
outsl
cmp
mov
fwait
xorl
movsb
jb
mov
mov
inc
incl
outsb
cld
in
xor
mov
pushf
push
les
push
xlat
je
xor
or
out
rorl
bnd
jo
stos
xor
nop
mov
and
fdivr
nop
imul
xor
test
xlat
movsb
mov
jge
pop
fidivl
int
mov
dec
jecxz
mov
outsl
ljmp
pushf
cmp
out
fdiv
xchg
xor
pushf
flds
jecxz
dec
and
rcr
outsb
jo
sarl
test
or
inc
insl
addr16
dec
sub
xchg
cmpsl
aas
adc
push
movsl
cmp
sub
das
add
adc
dec
cmpsb
out
lret
movsb
jo
push
dec
insl
cmp
repnz
pusha
orb
sub
xchg
fistps
push
insl
add
cltd
sarb
pop
cmpl
mull
cmp
in
xchg
pop
pop
std
rclb
cmpsl
xchg
cwtl
mov
or
lahf
cmc
clc
pop
idivb
outsl
cmp
add
push
loopne
or
dec
lods
icebp
dec
fadds
sbb
out
push
in
repz
ret
loopne
scas
mov
inc
ficoml
adc
fcomip
mov
stc
jno
push
popa
sub
or
scas
sub
mov
mov
fidivs
out
adc
repnz
dec
sti
and
pop
fwait
test
call
lcall
fs
jae
fildl
loopne
arpl
mov
push
aaa
out
xchg
lock
incl
mov
out
dec
std
fwait
adc
ret
jmp
in
and
and
pop
push
lret
insb
fisttps
cltd
jnp
loope
pop
or
sbb
mov
jae
movsb
enter
push
daa
outsb
dec
ret
pop
stc
pop
lods
and
or
divb
xchg
jl
gs
test
hlt
nop
mov
inc
enter
in
xchg
std
sub
dec
jb
or
add
cwtl
addr16
dec
cmp
adcb
push
lock
push
test
xor
or
xor
adc
roll
out
xchg
dec
push
inc
sub
push
ljmp
sbb
das
outsb
pop
cs
jne
pusha
dec
stos
mov
and
imul
imul
pop
and
jle
xchg
cmpl
or
mov
popf
cs
test
rol
pop
aam
mov
subb
stos
or
push
outsb
sbb
cld
clc
add
push
bound
lret
xchg
mov
pop
add
fsubrs
test
test
icebp
mov
jmp
and
pop
sahf
pop
xchg
inc
fwait
lds
adc
pop
pop
mov
loop
inc
insb
pop
scas
cld
jns
cs
push
add
aaa
adcl
shrl
fnstsw
pop
add
out
dec
mov
nopl
fstpt
stos
and
adc
push
decb
add
xchg
and
jae
push
xor
clc
iret
xor
jge
pusha
in
repz
sti
sbb
xchg
or
jae
mov
sub
repz
and
cltd
inc
add
mov
or
mov
mov
scas
lods
cmp
pop
dec
movsl
mov
push
jp
jbe
into
sbb
sub
aaa
xchg
push
in
push
dec
dec
or
mov
pop
les
push
sbbl
sub
aaa
or
mov
dec
mov
sbb
repz
fsubs
int3
call
xor
cmp
cld
mov
mov
das
stos
frstor
aaa
jmp
push
testb
lock
iret
repnz
testb
mov
cwtl
xchg
sbb
mov
mov
sub
push
ds
lea
xor
jg
and
retw
testl
mov
ja
test
add
test
scas
fwait
and
push
lret
lds
clc
stc
mov
ss
cs
or
lds
inc
sub
mov
aam
jg
sbb
daa
nop
cmp
sbbl
pushf
dec
sbb
cld
enter
in
lea
hlt
ds
in
pop
inc
push
jns
or
add
pop
mov
clc
pusha
in
scas
jne
hlt
push
mov
test
inc
push
pop
fadds
outsb
mov
mov
xor
lret
sbb
jmp
fstl
push
xchg
mov
cmp
jge
loope
or
push
ret
jp
movsl
punpckldq
sub
cmp
or
in
leave
sub
inc
daa
and
sbb
jbe
test
testl
add
or
jg
icebp
aaa
rorb
jo
and
adc
aad
sbb
lret
int3
adc
push
cld
leave
aad
cmp
outsb
loope
adc
into
das
jns
mov
push
clc
je
es
inc
shl
mov
or
fsubl
and
jno
je
fsubs
dec
push
dec
mov
ret
filds
outsb
inc
outsb
in
xlat
adcb
aaa
and
mov
push
add
xor
push
and
add
pop
xchg
je
push
mov
adc
pop
sub
jle
hlt
pop
pop
cmp
fwait
and
and
test
fisubrs
xor
pop
repnz
push
jl
xchg
sarl
mov
test
dec
lcall
jae
andl
rorl
xor
or
inc
paddb
dec
test
pop
xchg
adc
lret
in
inc
pop
adc
mov
cmp
mov
mov
jno
daa
int3
negb
test
dec
cmc
movsl
cmp
dec
cmp
or
lods
cmp
rorb
xor
sbb
arpl
xor
push
sub
iret
xchg
ret
mov
arpl
pusha
test
scas
dec
lods
lods
and
and
in
add
je
adcb
push
test
and
mov
inc
jae
xlat
mov
pop
xchg
mov
lock
jo
hlt
testb
push
sub
cmpl
mov
ret
or
shll
fs
leave
xor
pop
scas
jp
pop
lods
daa
jo
les
insb
push
arpl
insb
mov
adc
mov
or
inc
pop
jbe
pop
hlt
test
mov
mov
xchg
scas
enter
aam
jbe
jmp
push
in
sub
jo
es
repnz
sub
mov
out
enter
mov
jmp
mov
incb
xchg
pop
pop
clc
fs
lahf
nop
ret
and
into
dec
mov
pusha
out
sti
add
fs
xchg
jge
cli
sti
incb
aas
jno
jne
aas
rcl
clc
inc
cwtl
ja
lods
lret
jle
ret
xchg
mov
sbb
inc
hlt
pop
pop
mov
les
cmp
mull
pushf
xchg
push
inc
mov
jns
cmp
out
int
sub
jg
lcall
inc
leave
repnz
xchg
pop
xor
ret
jnp
enter
sub
push
pop
push
pushf
add
ds
cmp
adc
mov
mov
subl
pop
cmp
inc
sub
inc
mov
jnp
gs
push
stos
lods
push
scas
addr16
jmp
jp
gs
sahf
aad
pop
lahf
ja
inc
mov
push
xlat
inc
les
adcb
xor
xor
rorb
add
jne
je
sub
rorb
mov
push
aad
sub
xchg
lcall
mov
mov
dec
dec
xchg
in
xlat
add
sahf
and
adc
orl
divb
push
and
je
adc
jo
scas
mov
out
popa
pop
sub
daa
repnz
xor
shlb
out
lret
lret
jb
dec
or
fwait
pusha
outsl
int
je
jb
imul
loopne
loop
aaa
test
popf
cld
sub
nop
scas
cmc
mov
ret
lods
bound
or
sub
sub
scas
push
push
out
push
int
fisttpll
out
repz
xchg
outsb
mov
pop
fcom
push
test
ror
out
jno
mov
push
xor
add
mov
fdiv
into
ror
add
ljmp
mov
mov
cmpsb
enter
fs
and
jle
jmp
jne
mov
and
call
mov
sti
inc
lods
sbb
fisttps
lds
daa
push
nop
or
jl
test
in
es
inc
jecxz
pusha
iret
push
dec
add
xor
mov
jg
xlat
movsb
xchg
push
mov
push
sahf
cmc
call
scas
repz
jge
xchg
out
dec
pop
sub
sub
push
dec
pop
push
cmc
cwtl
ret
adc
aam
sbb
rcl
inc
imul
test
sub
pop
xor
cmc
sbb
or
or
nop
cmp
add
mov
pusha
mov
movsb
mov
or
or
pushf
repnz
hlt
pop
ds
cs
test
sbb
fnstenv
mov
pop
push
jp
pop
out
and
popf
xchg
fldenv
enter
daa
inc
insb
nop
lahf
mov
pop
mov
stos
outsl
pop
xchg
push
fnclex
pop
pop
out
subb
or
mov
lret
arpl
jp
icebp
in
or
fsubr
pusha
sub
test
sbb
arpl
mov
js
aam
ret
leave
mov
call
dec
mov
mov
mov
fwait
xchg
push
lods
sbb
sbb
or
in
gs
sbb
inc
pop
xor
shrb
mov
xor
mov
lret
jno
push
or
xchg
mov
mov
jl
add
push
scas
push
add
xorl
add
dec
dec
movsl
sub
and
cmpsb
popf
mov
add
fisubrl
ret
addr16
out
call
and
pop
aam
sbb
inc
ret
aad
jns
mov
inc
or
cmp
jno
mov
sub
cmp
dec
push
and
pop
xorl
rorb
int
orl
inc
fidivs
add
adc
cmp
add
mov
ljmp
das
dec
mov
pop
adc
js
add
cmp
repz
shr
xor
inc
fdivrp
or
enter
pop
sbb
repnz
pushf
push
out
outsl
arpl
push
pop
das
in
cli
push
mov
and
repz
push
mov
das
leave
mov
xlat
dec
stos
outsb
loopne
lock
test
xchg
push
mov
cmp
or
lea
movsl
sub
sahf
or
pop
xlat
std
fs
out
int
mov
mov
femms
and
cli
call
xor
xchg
inc
dec
xor
mov
push
mov
mov
outsb
cmp
cmpsl
mov
jle
adc
push
adc
loop
ljmp
and
jno
stos
jns
fimuls
loop
and
bound
rcrl
jne
out
in
cltd
movsl
mov
rorb
and
jl
inc
fildll
sti
pop
int
xchg
push
inc
cli
cmp
ja
pusha
xor
fneni(8087
xor
adc
fwait
int3
sbb
cmc
mov
rolb
mov
push
inc
mov
in
cmpsb
adc
lea
insb
and
aad
adc
or
mov
jb
leave
adcl
std
mov
subb
divps
fiadds
pop
test
flds
loopne
cmpsb
xchg
cld
popf
sub
movsl
jle
jg
cmpsb
inc
out
mov
mov
stos
add
clc
cmpsb
xorb
adc
mov
call
push
xchg
cltd
in
mov
fcmovb
ret
movsl
in
dec
shll
sub
stos
jbe
orb
aad
out
mov
outsl
jnp
inc
addr16
dec
mov
cld
lods
inc
scas
mov
adc
push
and
das
xchg
push
cltd
movsb
fcomi
mov
scas
or
cli
iret
jecxz
push
mov
push
xchg
ljmp
jo
test
adc
in
cmpsl
aam
test
xor
jae
mov
mov
sub
or
mov
outsb
push
inc
inc
ret
insb
scas
sbb
ss
xchg
cmp
sub
hlt
data16
hlt
push
jae
or
mulb
jp
sarb
fldenv
pop
xchg
pushf
mov
add
xlat
popw
arpl
mov
addb
push
out
jnp
and
subb
and
lock
xchg
xlat
xor
ret
adc
xchg
pop
int3
rcrb
xor
aaa
mov
nop
mov
sahf
ret
add
mov
mov
loope
adc
cmp
lret
ss
xchg
mov
dec
or
adc
mov
movsb
cmpsb
aad
xchg
rcll
xchg
jle
inc
mov
jge
push
les
sti
insb
cmpsb
pop
add
dec
outsl
fs
xor
rcrl
pop
push
data16
jp
dec
pop
ja
sub
psrlw
push
dec
and
nop
push
out
and
inc
lock
test
add
push
mov
inc
ds
cmpsl
dec
jbe
mov
icebp
inc
xchg
sbb
add
jge
mov
or
sbb
sbb
sbb
or
ds
add
mov
cmpsl
mov
je
packsswb
imul
jns
fiadds
popf
out
jne
xor
loopne
inc
sbb
popf
pushf
sahf
repz
lea
sub
clc
mov
pop
inc
clc
aam
or
jecxz,pt
inc
jp
or
addl
sbbb
es
xchg
mov
mov
cmp
faddl
inc
mov
pop
pushf
dec
mov
pop
jno
or
stos
loope
add
pop
shll
jecxz
sub
sub
jne
dec
call
mov
cs
cmpsb
cmc
adc
rorl
subl
or
xor
decl
mov
mov
sub
xchg
dec
mov
mov
push
dec
cmp
roll
lds
int
inc
fstpt
call
lahf
lret
sahf
jp
fucomi
dec
popf
test
addr16
cmp
pop
push
pop
into
and
dec
fdivrp
sbb
adc
int3
repnz
mov
and
adc
inc
orb
add
stos
mov
jo
dec
lret
test
xchg
cmc
repz
adc
loope
loope
pop
stos
mov
mov
fiadds
test
sahf
fstp
shlb
js
mov
gs
es
loop
insl
push
inc
or
and
mov
fs
jae
fstl
rorb
ret
push
add
scas
mov
jo
cs
nopl
push
hlt
fsubr
and
cmp
fcompl
inc
lods
inc
xchg
mov
rcrb
jbe
jle
pop
cli
lahf
out
or
lea
dec
xchg
sub
mov
out
lahf
mov
decb
frstor
jle
and
push
jb
pop
insl
cmp
in
adc
pushf
mov
add
jbe
mov
adc
pusha
fcomi
pop
mov
jl
out
sbb
mov
sub
mov
dec
or
scas
shll
iret
sti
sahf
inc
mov
out
xor
mov
xchg
adc
mov
movsb
mov
inc
pop
fldl
mov
cmp
push
ret
cmpl
and
and
inc
and
sub
popa
outsl
fistl
movb
lds
or
mov
adc
push
not
dec
mov
pusha
fs
or
mov
jl
add
pop
cmpsl
lahf
mov
pop
jl
iret
movsb
push
xchg
mov
xor
lret
fistpl
mov
repnz
push
movsb
or
push
test
jl
insl
dec
dec
inc
jb
jb
sahf
das
into
jnp
add
in
in
inc
mov
dec
pop
stos
cmc
leave
push
or
mov
fs
pop
scas
add
addr16
pop
ss
push
mov
xor
jns
mov
loope
xchg
cli
cmp
sti
push
or
add
pusha
mov
data16
and
adc
subb
mov
xor
pop
sub
dec
and
les
mov
ret
push
in
sarb
mov
movsl
insb
jecxz
push
daa
sbb
push
push
loop
mov
mov
push
mov
inc
enter
xor
stos
adc
sbb
sbb
xorb
shlb
or
or
mov
inc
jp
push
icebp
mov
ja
cmpsw
push
aad
cmpsb
aam
or
stc
push
fiaddl
pop
or
std
aaa
xchg
jmp
cmp
inc
imul
insl
outsb
shrl
addl
sbb
mov
push
cli
mov
jp
dec
lahf
movsl
lods
roll
fsubr
push
loope
jl
pop
pop
mov
pop
stos
add
xor
dec
lret
aam
sub
or
and
jmp
cmp
or
in
data16
push
and
cmpsl
nop
les
adc
addr16
or
add
mov
xchg
cmp
in
stos
xor
lods
pushf
xor
mov
adc
push
mov
pop
insl
mov
mov
mov
fcompl
xor
lods
jle
ret
mov
xchg
xor
dec
insl
push
xor
mov
jae
adc
jo
xchg
cmp
mov
ret
fisubs
shr
scas
cmpsl
dec
xchg
xchg
xlat
icebp
mov
rcll
mov
dec
xchg
call
mov
jle
push
pop
push
xchg
mov
repz
loopne
adc
fistpl
out
daa
jns
dec
rorl
cmpsl
cmp
icebp
dec
mov
pop
repz
rorb
mov
jnp
roll
bnd
cli
fmuls
cmpsl
add
sarl
xor
test
inc
xchg
fdivs
adc
hlt
cmp
aas
aas
or
jae
ss
pop
push
imul
add
je
lahf
mov
loopne
in
das
xchg
cmp
mov
sbb
push
stos
xchg
lahf
sub
fisubrl
jno
sbb
lods
sub
inc
pop
sbb
loopne
jmp
mov
lock
push
xor
adc
lock
pop
xor
popf
push
in
stos
jb
out
jecxz
jno
in
push
mov
xchg
data16
add
xor
mov
push
addr16
insl
mov
mov
inc
lock
insb
mov
cltd
and
cmp
fwait
jne
pop
js
adc
pop
adc
jp
mov
rcll
outsb
fcoml
mov
xorl
out
push
pop
adc
into
push
xor
lock
aaa
cmp
cmp
sub
jb
sahf
dec
fisttpl
and
xor
clc
test
gs
jge
fstps
mov
aaa
hlt
push
pop
imul
mov
cmp
add
data16
hlt
xchg
inc
icebp
cmc
scas
inc
jl
and
xlat
push
addr16
frstor
cmp
pop
jb
xchg
pop
sahf
dec
or
xchg
mov
jnp
jno
out
pop
lcall
rcrb
pop
aaa
pop
divl
xor
or
popf
cmp
cwtl
and
stc
or
dec
dec
iret
jecxz
stos
mov
inc
push
jae
leave
sti
jmp
pop
mov
repz
sub
es
xor
cltd
lods
lahf
mov
dec
and
inc
jecxz
in
mov
fcmovnbe
cmpsb
pop
je
repz
inc
pop
and
jl
xchg
jmp
push
xchg
xor
push
mov
mov
mul
in
sbb
adc
fistpll
out
mov
stos
push
inc
mov
xchg
pop
add
push
loop
mov
rol
lahf
pop
outsl
cmp
sarb
jns
scas
fiaddl
cmp
jmp
mov
cs
mov
mov
cld
lret
or
or
fs
shr
add
jno
xchg
mov
xchg
int3
filds
add
out
jge
push
lods
int3
or
push
iret
repnz
inc
mov
cmp
pop
clc
aas
add
push
sbb
pop
push
mov
dec
es
aaa
add
pop
stos
pop
imul
fisubrl
subl
push
inc
iret
repz
fistpl
sbb
sub
mov
in
mov
scas
mov
into
mov
or
loope
pop
xor
vmovlpd
adc
faddl
mov
mov
andl
push
or
call
inc
sub
mov
cmc
mov
sub
popa
xchg
dec
jge
in
stc
testl
lcall
imul
outsb
add
adc
scas
sbb
push
ds
cmp
and
in
push
mov
dec
stc
addr16
leave
jne
push
jp
outsb
pop
mov
in
outsl
mov
aas
pusha
pop
hlt
out
mov
adc
xor
mov
push
loop
lret
mov
negl
fiaddl
and
aad
lea
inc
inc
jno
popf
push
mov
popa
push
add
andb
sub
iret
pop
out
dec
stc
xchg
xor
daa
cmp
pop
mov
orl
mov
xchg
aam
or
out
mov
xchg
or
in
jmp
les
xorb
call
imul
sbb
inc
inc
sub
mov
ss
inc
push
inc
or
xorb
aad
fmull
xor
push
mov
lret
jmp
pop
data16
pop
movsb
outsl
adcl
daa
xchg
rcrl
into
push
cwtl
xchg
cltd
push
jb
add
adc
and
stc
xchg
imul
pop
outsb
rolb
lea
nop
push
jns
mov
in
outsb
out
insl
fcomi
in
pop
and
mov
sbb
mov
cmpsl
je
xor
movsl
inc
js
outsb
outsl
jne
push
jp
and
adc
testl
pop
push
fsubs
rclb
call
movsl
mov
fidivrl
stos
cs
push
dec
pop
xchg
pusha
pop
sub
push
mov
imul
ds
stos
mov
aas
sbb
aas
imul
movsb
pop
repz
ss
ljmp
pop
int
aam
mov
xchg
aam
mov
loope
addl
cs
push
stc
movsb
dec
shrb
sub
or
jne
stos
movsb
add
sub
sbb
imul
or
or
adc
sub
dec
popa
adc
test
pop
outsl
les
cmpl
add
push
jae
lods
pop
lcall
and
cmp
xor
int
lahf
pusha
mov
adc
and
adc
mov
imul
push
fwait
xor
lock
loop
cmp
xchg
andb
inc
scas
add
xor
push
sbb
or
jno
jno
out
out
cmp
hlt
mov
push
push
out
or
pop
jecxz
mov
stc
mov
jg
xchg
push
psrlq
adc
or
inc
cltd
xchg
xor
sbb
jge
popf
cs
cmpl
movsb
xchg
or
outsl
xchg
aaa
push
mov
std
jns
in
es
iret
and
sub
test
cli
xor
sub
outsl
negb
js
jnp
xchg
xchg
ret
inc
aad
push
or
mov
cs
and
arpl
push
or
jmp
jmp
filds
dec
stos
sahf
jnp
imul
mov
xchg
mov
jle
movsb
xor
mov
jmp
fnsave
test
aaa
testb
movsb
mov
fcomp
push
lahf
idiv
jecxz
enter
add
stos
sbb
pop
pop
pop
int3
rol
ja
inc
aam
into
and
mov
stc
jbe
cmp
jecxz
adc
push
pop
mov
jmp
jge
lods
lahf
popf
push
add
xchg
mov
mov
shl
int3
ficompl
ret
loope
in
add
pusha
cltd
jo
ret
rcll
mov
packuswb
js
data16
cmp
push
bound
bound
fucom
mov
fistpl
imul
cltd
or
mov
pop
mov
mov
mov
ss
mov
xor
cld
dec
mov
push
xchg
cli
pop
push
cmp
cld
pusha
fsubl
pop
xor
sub
imul
mov
inc
sbb
xor
inc
je
pushf
mov
jle
jle
dec
lods
lret
xor
loopne
test
cmc
jbe
jmp
lahf
mov
fucomp
loope
in
push
and
sbb
outsl
sti
push
ja
out
add
dec
push
shr
cli
or
xchg
mov
cmc
test
or
cli
adc
adc
icebp
enter
mov
push
add
xchg
ds
or
cmp
pop
shrl
mov
mov
adc
fwait
jg
add
jb
push
in
leave
ret
std
mov
rcl
leave
cs
pushf
add
cs
ficomps
jp
and
sti
out
jo
sahf
jle
fists
arpl
pop
leave
xor
jg
adc
cmp
mov
cld
out
mov
mov
inc
inc
dec
ret
in
pop
fnstcw
cmpsb
jno
movsl
mov
or
mov
inc
movsb
dec
inc
xor
mov
or
lods
jle
push
mov
aaa
xchg
adc
inc
mov
sub
xor
xor
clc
sahf
dec
push
and
shll
cmpsb
jns
push
jle
inc
add
xchg
jecxz
inc
add
add
push
push
mov
jae
lret
adc
or
xchg
pop
lock
dec
out
sbb
inc
xor
out
shll
rcl
xor
addb
mov
jnp
cmc
xchg
aad
loopne
dec
divb
mov
out
and
mov
test
push
jecxz
jg
roll
lcall
xor
stc
loopne
add
mov
out
imul
in
lds
adc
aam
ds
mov
stos
outsl
and
scas
push
call
imul
les
pop
push
cltd
in
and
daa
or
call
aad
enter
adc
int
jp
mov
adc
adc
jbe
sbb
out
aam
mov
movsb
adcl
adc
sub
jl
sbb
repnz
mov
dec
adc
jmp
mov
test
adc
mov
jecxz
test
js
sbb
mov
in
adc
sub
psllq
jge
push
gs
xchg
clc
lcall
mov
push
dec
cmpsb
cmpsl
std
and
lds
popf
outsb
xor
sbb
je
xchg
aas
mov
int3
sahf
xchg
add
fmul
lcall
push
mov
bound
xchg
add
scas
jne
push
mov
dec
adc
xor
xchg
xchg
gs
mov
fadd
jp
hlt
mov
das
xchg
inc
imul
push
stos
imul
mov
out
add
xchg
cmp
dec
cmp
pop
fisttpl
clc
pop
popf
xor
idivl
pop
adc
cmp
test
lods
sub
stos
in
mov
pusha
push
jbe
jb
sub
adc
and
mov
inc
jg
lahf
pop
push
push
fdivl
out
nop
push
jecxz
in
adc
pop
xchg
lock
call
shrb
mull
cmc
sub
mov
imul
int
xorl
iret
mov
fmulp
scas
aad
sub
imul
xchg
ljmp
scas
push
and
jae
xchg
dec
xor
cmp
sub
lret
in
xchg
pop
cmp
in
xor
std
pushf
xor
jae
cmp
push
add
push
in
ja
push
ja
sub
fs
jge
add
icebp
loope
adc
jmp
dec
lds
sbb
lcall
movb
jl
mov
rol
push
xlat
filds
repz
insl
fdivrp
icebp
shll
add
and
mov
and
shll
out
mov
js
shrb
or
arpl
cmp
sbb
pop
xchg
icebp
adc
or
or
aam
icebp
pop
gs
stc
push
sbb
int3
add
ret
icebp
ret
sahf
cmovl
jp
add
push
xchg
js
js
int
mov
mov
lret
jecxz
aaa
pop
leave
cmpsl
dec
jecxz
out
cmpsl
stc
test
push
push
andl
ds
sbb
rep
and
cmc
fstpt
rcl
mov
out
mov
adc
pop
nop
cltd
add
pushf
dec
xlat
cltd
push
mov
xor
jae
repnz
icebp
mov
mov
push
pusha
fdivrs
adc
inc
jnp
mov
push
sub
mov
sahf
push
cmpsb
pop
mov
xlat
add
add
jbe
xor
push
push
test
fidivrs
scas
push
ja
push
pop
sbb
cltd
sbbl
out
xor
lods
lods
dec
xchg
orb
cmp
into
or
and
aas
inc
lret
orb
fisubs
or
mov
or
pusha
mov
loope
orl
stos
out
loope
pop
jle
clc
push
sbb
int
cltd
iret
jmp
shl
inc
cli
mov
or
in
ret
nop
cmp
jp
subl
mov
jne
mov
dec
xor
xor
daa
in
jp
lock
jns
inc
rorb
lods
mov
test
fidivl
js
inc
inc
loopne
mov
icebp
pop
cmp
aad
xor
inc
clc
jns
lock
dec
int3
out
ss
xchg
in
cmp
push
fisttpl
int3
sub
dec
lret
sbb
mov
mov
clc
insl
ret
mov
jb
es
push
push
mov
push
ficoml
push
xlat
mov
jmp
out
inc
pop
or
sbb
or
cmc
jecxz
std
and
cs
xchg
push
jbe
clc
sub
out
and
popf
mov
mov
cld
lcall
mov
sub
outsl
sub
mov
jecxz
push
popf
sub
insl
fisubrl
insl
lcall
adc
xchg
sub
dec
mov
mov
inc
aam
sub
cmpl
insl
pop
push
lea
and
cmp
aad
mov
in
push
mov
jp
inc
negl
aaa
in
test
jne
xlat
cmpsl
lret
cmp
push
and
mov
xchg
jmp
add
stc
jg
in
xor
test
jl
clc
sub
mov
lahf
ret
dec
pop
mov
in
dec
out
popf
lret
movsl
push
inc
js
mov
bnd
mov
cmpb
add
mov
dec
add
inc
mov
jl
pop
testb
lods
fcoml
jecxz
in
dec
xor
call
dec
fidivrl
cmpsl
add
fdivrl
adc
cld
push
push
xchg
push
jl
sbb
fldcw
out
and
icebp
in
inc
mov
mov
pop
notl
notb
push
and
out
dec
adc
fdivrl
jg
inc
inc
adc
hlt
mov
test
in
add
scas
test
inc
adc
mov
je
daa
cmpsb
xchg
sti
gs
xchg
mov
popf
xchg
andl
idivl
xor
mov
in
out
mov
lcall
clc
rorl
xchg
hlt
inc
pop
xchg
adc
inc
inc
xchg
movsb
popf
mov
mov
jne
incl
pop
es
jmp
imul
in
xor
sbb
addr16
mov
jmp
push
jl
cmp
inc
add
test
mov
pusha
cmc
outsb
or
mov
scas
test
pushf
test
mov
push
mov
lods
jl
mov
aaa
jae
out
test
add
jle
inc
fcompl
popa
fsub
lods
cmp
jne
int3
mov
mov
aaa
and
and
repz
adc
jmp
aaa
jg
or
stos
iret
movsb
dec
fnsave
sub
add
ret
rorb
dec
sbb
sbb
xchg
insl
adc
outsl
cwtl
cmp
imul
sbb
icebp
xchg
aad
es
jno
mov
xor
jmp
xchg
lcall
imul
jbe,pn
sbb
ret
mov
adc
pop
sub
or
push
and
sbb
out
and
hlt
cwtl
insb
and
pop
jo
xor
cmp
mov
cmp
fcomps
mov
push
dec
mov
mov
lret
testl
out
xor
xchg
fnsave
or
or
pop
sbbb
mov
push
mov
jno
test
push
xor
cld
add
cmp
hlt
aaa
int3
mov
jns
lock
sahf
arpl
outsl
insb
push
arpl
push
roll
push
or
shlb
push
sbb
pop
and
pop
inc
pop
push
lods
hlt
lret
out
mov
mov
jge,pn
call
cmc
dec
jnp
movsb
jne
inc
shl
xchg
add
xor
popf
or
inc
sbb
fwait
addb
leave
sbb
jo
sub
and
in
xchg
push
inc
nop
mov
ret
sbb
pop
cmp
jmp
or
mov
adc
cmp
rorl
sub
popa
dec
lahf
mov
inc
outsb
adc
adc
xchg
sbb
xlat
insb
push
pop
push
data16
mov
jne
cmp
inc
jnp
ret
flds
cmc
shl
mov
adc
inc
leave
int3
dec
mov
mov
frstor
mov
inc
shrl
leave
cmp
std
inc
cli
loope
mov
cmp
jg
pop
aaa
jno
loope
pop
loopne
movsb
ljmp
mov
fwait
in
xchg
or
testl
push
lods
testb
lds
stos
call
sub
mov
sbb
push
aas
outsl
jle
lcall
data16
dec
out
sub
mov
adc
push
cmc
inc
dec
mov
lods
out
flds
in
movups
stc
fdivrs
pop
mov
rorl
or
inc
and
or
xlat
push
pushf
fdivs
push
iret
adc
jne
sbb
cs
dec
or
mov
mov
lods
das
add
cs
inc
mov
cmpsl
add
or
cld
mov
cltd
add
std
cmp
dec
arpl
push
scas
mov
call
inc
or
aas
push
mov
inc
xorl
out
frstor
xor
int
pop
shlb
int3
daa
inc
and
push
jle
inc
in
mov
sbb
xchg
stos
jecxz
mov
pop
cmpsl
mov
inc
leave
dec
rcll
xchg
inc
jp
cli
jle
and
inc
mov
pop
popf
inc
jp
sbb
notl
insl
adc
fs
aaa
mov
mov
mov
decl
subl
jne
and
rorb
inc
int3
adc
sbb
mov
jp
mov
rorl
hlt
xor
shlb
fiaddl
lock
mov
push
inc
ror
fistps
xor
or
ds
jg
xchg
push
aas
scas
cs
je
rcrb
xor
dec
sbb
push
mov
daa
rorb
and
rclb
out
inc
inc
gs
jecxz
fstpt
je
repnz
sahf
cmpsl
icebp
jmp
sahf
sub
and
add
or
pop
aam
lahf
mov
lcall
popa
cmpsb
push
inc
int3
pushf
jge
xor
cmp
and
shrb
mov
lock
xchg
xchg
lret
sbb
mov
test
adc
pop
push
jns
pop
mov
add
sub
cmp
lods
or
shlb
and
test
and
push
inc
lods
lret
dec
sub
mov
jo
dec
mov
push
xchg
pop
icebp
xchg
addw
call
mov
sub
or
inc
shrb
loope
imul
fimull
pop
or
push
adc
xchg
adc
cwtl
pop
imul
cmp
jg
rcrl
cld
add
aas
loope
adc
popa
sbb
mov
in
js
outsl
sbb
sbbb
insl
sbb
ret
pop
inc
pop
mov
outsl
stc
in
repz
lcall
xchg
adc
sbb
pop
adc
ret
adc
lahf
inc
inc
xor
mov
test
push
jne
xor
repnz
mov
inc
sub
mov
mov
xor
mov
bound
jp
cs
cltd
inc
xlat
int
cmp
scas
fsubl
das
dec
fdivs
fiaddl
inc
mov
pop
adc
iret
test
add
dec
mov
sub
loope
pop
pop
xor
cmp
in
out
add
add
sarb
push
stos
jnp
adc
int3
ss
stc
repnz
sbb
fdiv
sbb
adc
xor
cmp
adc
movsl
cli
imul
dec
xchg
imulb
out
add
push
mov
and
adc
xor
or
mov
pop
dec
sbb
pop
jo
push
mov
jnp
inc
fidivrs
scas
orl
mov
aam
and
test
mov
mov
lods
stc
sub
push
dec
out
mov
in
insb
mov
jns
sbb
negb
fists
mov
sbb
stos
and
inc
inc
dec
aaa
aaa
pop
mov
xlat
fsubr
aad
dec
mov
js
or
inc
sub
repnz
lods
ds
scas
push
or
pop
scas
fldpi
stc
cli
dec
into
cwtl
out
daa
rorl
iret
arpl
push
int3
xchg
roll
sub
cmp
mov
addl
jns
std
popa
push
and
mov
cmp
fs
pop
scas
cmp
adc
jno,pt
jp
loope
scas
jo
or
fdiv
cmp
dec
inc
jecxz
jne
sarl
adc
mov
mov
mov
iret
enter
sub
mov
fimuls
adc
cltd
lret
fiaddl
repz
inc
xchg
or
adc
ficoml
fidivs
push
xor
mov
ds
sbb
or
scas
push
bound
sub
sub
dec
mov
push
or
stos
std
pushf
cmp
mov
or
dec
fistpl
popl
jecxz
dec
xchg
mov
jb
imul
xor
adc
cmp
outsl
cwtl
cwtl
jno
in
out
cmp
add
in
sahf
lods
fwait
inc
xchg
xchg
inc
fnstenv
jno
lods
ds
fistl
cmc
inc
push
test
cltd
fistps
sub
fdivr
dec
or
pop
std
cmpsl
ficompl
mov
xor
repz
mov
sub
test
shrl
jp
mov
cmp
outsb
cmpsl
cmpsb
xor
popa
mov
je
cmpsb
ljmp
stos
add
int3
lds
mov
in
not
cltd
and
into
in
ret
jecxz
fisttps
sbb
mov
lock
xchg
inc
icebp
xor
faddl
jns
lret
jno
adc
jns
xor
outsl
push
mov
push
mov
jge
mov
adc
cli
test
sahf
imul
sbb
mov
inc
push
adc
pop
imul
leave
xor
gs
jne
jno
cld
in
pop
insl
ljmp
push
pushf
inc
push
dec
dec
mov
hlt
cld
mov
out
callw
cmpsl
adc
pop
adcl
scas
inc
fstpl
das
mov
mov
cli
mov
pop
push
dec
cs
sub
popa
sbb
inc
push
insb
mov
stos
movsl
ljmp
fwait
or
adc
push
pop
dec
fcmovu
push
addr16
js
js
rolb
ljmp
jae
js
insl
cltd
push
push
jmp
ror
push
push
mov
push
jge
inc
inc
lea
adc
mov
jnp
std
pop
test
pop
mov
and
andl
int3
hlt
xlat
inc
mov
inc
jno
test
popf
add
inc
mov
or
or
mov
xor
int3
into
push
cs
cmc
push
add
adc
outsb
pop
lds
add
movsl
xchg
stos
movsl
mov
jmp
adc
mov
leave
mov
adc
mov
and
fldl
push
aas
cmp
or
inc
fcomps
sub
cltd
rcll
nop
xchg
inc
fcomi
int
dec
mov
jmp
add
idivl
push
out
add
fxch
in
fs
pop
lahf
pusha
mov
ret
popf
mov
and
insl
je
scas
pop
dec
lret
push
ret
test
mov
fdiv
ss
and
pop
dec
insl
ret
inc
sbb
sar
subl
push
aad
fwait
aad
fadds
xor
pop
cld
jns
mov
xor
mov
jmp
scas
fldcw
dec
mov
mov
mov
lret
cmp
cmc
clc
ficompl
dec
jle
cmpsb
mov
arpl
xchg
and
aad
jnp
push
mov
test
out
lods
pop
push
repz
cmp
mov
pop
insb
shll
add
roll
jmp
jecxz
cmp
lock
dec
adc
sub
or
sub
xor
jbe
mov
jno
mov
pop
les
mov
cmovns
in
in
sti
jne
dec
mov
push
insb
jae
fucom
adc
movsl
mov
xor
std
gs
outsb
mov
cwtl
or
paddq
xchg
stos
push
lret
pop
in
lret
mov
fsubl
fistl
dec
clc
sub
test
sbb
push
mov
xor
mov
adc
pop
push
in
out
arpl
shll
mov
jno
sub
inc
adc
xchg
mov
outsl
jnp
repz
xor
or
and
or
les
subl
ficoms
in
insb
lock
popl
pop
jbe
shl
inc
out
xchg
add
mov
lds
movb
xchg
popf
loop
movsb
jae
xlat
xlat
cmp
data16
dec
dec
fxch
ret
fcoml
and
inc
mov
adc
outsl
xorb
mov
mov
dec
adc
add
push
sarb
mov
repnz
stos
or
mov
jge
cmc
lock
push
xlat
sarb
fisubl
mov
jae
jl
inc
mov
pop
outsl
stos
ffreep
add
stc
imul
outsl
cmpsl
xor
in
cmp
in
adc
and
xor
cld
int3
jmp
dec
mov
fnsetpm(287
add
jecxz
cmpb
hlt
inc
ja
jno
cmpb
push
xor
iret
mov
pop
pop
ds
cmp
jno
and
loop
mov
xorl
push
add
mov
fidivl
push
fdivrl
pop
cmpsl
adc
cmpsl
mov
sub
pop
adc
xor
inc
and
pop
inc
mov
or
pop
popf
je
push
mov
fwait
and
loopne
cmp
lds
enter
test
rcr
popl
ljmp
add
jg
dec
mov
jecxz
daa
cmpsb
inc
popf
and
ds
dec
xor
xor
shrb
mov
loopne
arpl
and
pop
lahf
fdivl
and
sub
ret
adc
cmpl
test
das
leave
pushf
pop
and
cmc
gs
sahf
repnz
push
cmp
mov
mov
ja
and
xor
mov
cmpsb
es
nop
int
jmp
push
inc
insb
mov
aaa
lea
jno
gs
cmp
mov
and
pop
add
nop
scas
aad
mov
push
in
mov
xchg
out
enter
sbb
xor
ljmp
xchg
cmp
js
in
dec
sub
pop
sub
jp
shll
and
cld
dec
lea
pop
scas
sub
inc
jg
mov
inc
jae
jge
clc
or
lret
or
jb
iret
inc
inc
out
and
stos
fcomi
ja
xchg
loop
xchg
jbe
movsl
xchg
dec
add
dec
repnz
lret
add
sub
mov
jle
call
lea
ds
mov
and
shrl
xor
jns
in
dec
jno
mov
jg
mov
scas
dec
add
sub
adc
mov
lods
xlat
inc
aad
lods
lret
lods
or
and
fisubs
xlat
xor
loopne
dec
push
dec
repnz
decb
add
rorb
adc
adc
xor
pushf
pusha
inc
adcb
inc
xchg
push
push
notb
lahf
push
push
fcmove
arpl
dec
adc
out
jb
testl
jo
mov
push
pop
insb
es
mov
fmull
es
stc
xchg
mov
sub
lcall
hlt
enter
std
test
fidivrs
jb
jl
sbb
xchg
shlb
push
mov
pop
jecxz
cmovnp
adc
mov
dec
dec
int3
mov
jle
popa
mov
jae
xchg
or
data16
mov
and
movsl
xchg
outsl
jg
hlt
rcrb
mov
or
adc
rcrl
cmp
cs
cmp
mov
pop
ret
sub
aad
filds
jmp
addl
pusha
lret
popa
adc
or
sub
xor
sarl
push
movlps
enter
fbstp
loop
arpl
xor
out
daa
out
push
stos
cmp
sbb
sbb
outsb
xor
outsb
mov
std
out
push
loopne
inc
sub
mov
fcoms
sbb
sbb
cmp
xchg
mov
pop
test
pop
mov
fsubr
mov
xor
push
pop
icebp
mov
mov
xchg
ss
cmp
push
mov
jns
shll
push
cltd
jge
xchg
fiadds
out
sub
data16
inc
imul
imul
inc
out
mov
add
jne
sub
and
loopne
popf
test
sbb
enter
adc
xlat
dec
mov
push
insb
jle
sbb
push
pop
fldenv
inc
loope
push
popf
dec
jl
mov
sbb
mov
lds
fiaddl
mov
popf
pop
jnp
into
lds
mov
movb
jae
pop
popa
push
pop
mov
and
inc
test
push
repz
adcl
xchg
out
movb
adc
inc
cwtl
mov
pop
jno
and
mov
xchg
pop
cmp
xchg
es
lock
stos
pop
cmp
outsl
iret
xor
sub
push
xor
aad
loop
out
and
sub
cld
gs
movsl
inc
mov
out
das
int3
loope
mov
jbe
or
adc
and
inc
push
pop
xor
pop
push
push
or
frstor
mov
aas
dec
test
stc
insb
pop
negb
loopne
mov
push
rclb
in
mov
xlat
or
xor
inc
pop
aaa
sarb
sbb
insl
cmp
jecxz
add
lds
inc
jae
aam
sbb
add
xor
push
push
adcb
mov
dec
push
inc
push
outsl
push
and
ret
mov
add
cmp
sbb
sbb
mov
jae
sbb
jne
das
enter
addr16
cmp
inc
scas
pushf
in
cmp
push
int
fbstp
and
or
cltd
mov
adc
adc
imul
xor
clc
mov
cld
pushf
xor
lods
cld
pop
imul
mov
adc
gs
mov
cmp
adc
pusha
xor
mov
sub
adc
in
xchg
outsb
aad
inc
repnz
cli
inc
jns
outsl
in
mov
dec
jne
push
fadds
subl
popa
mov
pop
fcmovnu
pop
ror
es
sti
aad
add
cli
inc
and
xor
xor
loope
adc
add
pop
outsl
inc
ds
leave
inc
std
nop
pusha
adc
aas
mov
loopne
adcb
cmc
sbb
pop
popa
xchg
cld
gs
add
das
repz
push
and
jge
je
adc
jnp
pop
dec
dec
jmp
fisubs
inc
mov
cltd
jmp
insb
mov
push
in
mov
call
xchg
js
into
sbb
xchg
sub
xorb
fadds
test
and
or
insl
mov
inc
xchg
xchg
add
ds
jmp
add
push
cmp
push
sub
cmp
call
popl
mov
into
sub
out
mov
leave
push
mov
test
out
jne
sti
fisubl
daa
push
adc
mov
push
mov
js
arpl
jle
dec
popa
pusha
and
cmp
rorl
lods
loop
mov
test
cmpsb
push
lahf
cmp
or
addl
cmc
repnz
data16
in
push
jecxz
mov
es
and
sub
ret
inc
aam
lods
mov
aas
dec
out
adc
add
test
cmpsl
dec
push
inc
mov
pop
stc
push
dec
hlt
ss
sbb
or
pop
mov
fnstsw
sarl
es
incl
cli
inc
jae
jmp
lahf
xchg
push
cld
adc
hlt
pushf
xchg
fsubl
pop
aaa
mov
cmp
push
clc
incb
pop
insb
jg
sbb
popa
dec
repnz
xor
arpl
adc
mov
in
fmul
test
push
popa
cmpsb
sbb
sbb
nop
adc
xor
xchg
iret
call
nop
lahf
jl
jns
adc
stos
sbb
mov
mov
daa
mov
jg
cmp
jns
push
jmp
lcall
sub
mov
cmp
and
xor
aaa
divl
incb
dec
imul
mov
daa
push
push
cs
clc
push
arpl
push
jp
sbb
pop
arpl
push
clc
out
std
push
pop
xor
lea
pop
cwtl
pushf
cmpsl
aaa
xor
bswap
sub
sub
mov
cmp
mov
sbb
mov
popa
pusha
pop
xchg
cmp
adc
mov
mov
or
pop
xchg
dec
cmp
mov
pop
inc
xor
imul
int3
sub
mov
xor
cltd
cltd
or
push
push
jle
sub
push
inc
fistps
loopne
add
pusha
mov
repz
out
rorl
rcr
lahf
cmpsl
fisubs
mov
shll
js
add
push
leave
mov
hlt
arpl
stos
test
inc
ss
mov
clc
xchg
jns
sbb
lods
imul
jae
clc
xor
pop
loope
pop
jl
and
xlat
inc
mov
jmp
punpckhdq
in
and
shr
mov
xchg
sub
jns
arpl
outsl
jmp
pop
scas
addr16
fwait
scas
mov
insl
inc
xor
inc
push
and
ss
dec
pushf
add
adc
rcr
aam
and
ret
mov
lods
cmp
sahf
and
bound
adc
hlt
jns
mov
mov
mov
pushf
int3
cmpsl
xchg
xchg
xchg
jne
mov
sub
jbe
and
pop
and
jecxz
add
adc
dec
clc
lock
ret
into
fldt
cld
xlat
cmpl
test
aaa
inc
mov
inc
xchg
or
enter
add
mov
sbb
pusha
ret
addr16
and
out
jl
dec
mov
add
push
inc
pop
lock
inc
xchg
into
push
sub
xlat
loop
subb
insl
ret
outsl
push
nop
lret
add
test
adc
push
sahf
mov
out
pop
movsl
mov
insb
push
adc
xchg
mov
test
jecxz
shlb
jae
popa
fcmovu
sub
jl
and
fistpl
inc
push
sbb
arpl
mov
loopne
lods
cmp
or
or
movsl
aaa
fidivrs
add
inc
and
bound
hlt
jnp
jo
inc
mov
cmpsl
and
fcmove
notb
in
sbb
dec
inc
adc
push
mov
xlat
or
pop
stos
cld
addr16
std
sbbb
and
xchg
cld
jl
xchg
inc
test
decl
lahf
jae
pop
xor
arpl
pop
xchg
fwait
sbb
out
popf
cs
jecxz
adc
sbb
or
pop
das
xor
lret
imul
xor
test
pop
sub
movsb
gs
orb
out
jle
mov
and
push
movsb
movsl
icebp
clc
in
sti
repnz
jnp
out
ljmp
sbb
sbb
testl
xchg
adc
outsl
out
pop
stos
or
sbb
mov
fwait
inc
and
pop
adc
or
fwait
mov
xlat
adc
mov
push
cmp
fdivs
fisttpl
sbb
popf
and
jnp
inc
xchg
shll
out
into
inc
mov
es
sbb
stos
adc
push
pop
jno
pop
mov
test
add
xchg
leave
aad
or
xchg
data16
adc
adc
inc
xchg
ja
outsb
or
xchg
pop
xchg
cli
push
repnz
adc
cltd
fidivs
inc
jo
dec
test
push
jecxz
pop
mov
paddq
scas
shrl
mov
int3
lea
or
popf
or
dec
pop
js
inc
cmp
jge
into
xchg
ficoml
cld
xchg
xchg
dec
or
add
push
out
dec
add
add
sub
icebp
cmp
push
fcmovnu
es
mov
outsl
lcall
mov
sub
ljmp
xchg
in
mov
movsl
xor
mov
push
mov
cltd
dec
adc
decl
in
daa
mov
ds
sbb
push
jle
das
pop
test
loopne
xor
pop
movsb
mov
mov
ja
ficoml
and
aad
aam
pop
aad
add
in
stos
cmc
dec
add
dec
or
xchg
inc
xor
mov
nop
xor
mov
call
leave
pop
into
mov
mov
adc
push
clc
inc
adc
fnsave
inc
push
icebp
rclb
mov
jae
mov
outsl
frstor
jl
jmp
fldt
fsubrp
mov
movsb
lds
xor
fucomip
adc
ficoms
daa
mov
incb
daa
xor
mov
ss
in
jmp
push
fdivs
imul
in
push
push
xchg
pop
rcrl
and
div
xchg
lock
movsl
dec
inc
repnz
outsb
sbb
jmp
add
mov
dec
loopne
aad
jns
xor
imul
push
jle
inc
shll
or
shlb
jle
and
sbb
test
lret
push
ret
pusha
push
sub
fcoml
cld
xor
std
arpl
hlt
jns
dec
pop
aas
mov
or
enter
daa
jecxz
nop
add
dec
pop
adc
xchg
cli
mov
add
push
fisttps
into
arpl
adcl
pop
adc
arpl
sbb
push
outsl
xchg
aas
mov
push
xor
adc
mov
and
shr
cmp
cltd
sbb
in
and
cmp
sbb
jne
sti
out
jmp
jmp
mov
orl
sbb
dec
roll
fwait
insb
sub
xor
hlt
andl
fildl
inc
adc
loope
shll
fs
or
push
push
fdivr
pop
mov
mov
cld
pop
mov
mov
inc
and
xchg
in
mov
pop
cli
adc
or
cmp
sbb
jo
and
test
cmp
sbbl
fidivl
jmp
aad
daa
cmpsl
std
lcall
dec
jge
dec
sub
insl
cmpb
test
xor
mov
cmp
push
push
or
jecxz
fisubs
daa
movsl
lahf
scas
push
sub
clc
fsubs
addl
mov
mov
and
sbb
dec
call
cmp
xor
mov
popa
not
movzbl
jmp
dec
ret
outsb
pop
loope
fidivl
fistpll
jecxz
push
aaa
into
add
pop
jbe
dec
popf
insb
sbb
xchg
test
add
inc
sbb
sbb
push
lahf
outsb
aad
mov
mov
push
xchg
les
mov
ss
jmp
fcmovne
push
lcall
sbbl
jle
fstpt
iret
pop
pop
xchg
rcrl
lret
dec
mov
lahf
sbb
int
push
cmp
imul
or
insl
mov
scas
cs
test
jmp
xor
push
and
sbb
push
and
test
mov
cld
mov
or
mov
pop
mov
pop
mov
and
fldcw
jp
shll
sub
xchg
sbb
enter
lds
movsl
mov
test
sub
mov
in
ret
sub
push
pop
adc
cmp
sub
js
mov
push
fidivs
xor
out
push
movsl
ss
das
adc
scas
jnp
cmpb
jns
mov
pusha
xchg
mov
xor
int3
add
rcll
mov
cmp
jmp
repnz
scas
cmpsb
mov
addl
mov
mov
push
ror
fisttpl
xor
stos
push
mov
adc
adc
adcl
das
mov
imul
add
push
xor
lcall
adc
loopne
fcoml
sub
cwtl
lret
jg
mov
pop
jnp
enter
pop
movsl
mov
loope
push
adc
push
jno
lahf
mov
pop
or
aam
xor
adc
mov
fnstsw
mov
je
stos
pop
aad
imul
add
jbe
subl
jno
adc
add
xor
aad
jb
jo
out
xchg
dec
imul
icebp
iret
mov
aaa
xchg
or
pop
gs
mov
cmp
rclb
leave
push
adc
cmp
pop
out
repnz
xor
aaa
mov
push
mov
outsl
mov
jmp
leave
mov
popa
jbe
jae
inc
mov
xchg
xchg
sbb
cltd
int3
sub
repz
add
dec
inc
loopne
jae
std
negb
jl
dec
out
mov
das
mov
or
dec
out
and
sub
es
pop
std
fmul
out
mov
sbbl
cwtl
notl
inc
fs
sub
outsb
scas
clc
xorl
sbb
ljmp
arpl
js
and
imulb
jmp
add
inc
call
leave
mov
add
push
notl
fisubl
or
adc
movl
imul
dec
sub
dec
aas
add
jg
xor
push
pushf
iret
pop
push
xor
lret
push
test
pop
sbb
jp
inc
imul
and
bound
lret
rolb
insb
popa
adc
inc
cmp
xor
xor
pop
dec
in
inc
pusha
push
jo
xor
xchg
xlat
insl
jno
outsb
in
push
cmp
and
and
incb
sbb
daa
sbb
shlb
daa
leave
push
fcom
popf
ja
and
inc
sub
movsl
dec
dec
dec
insl
jno
mov
out
push
cmp
pop
mov
pop
xchg
push
push
cmp
pop
pop
push
imul
shlb
inc
xor
pushf
mov
mov
test
pushf
mov
xor
test
xlat
sbb
push
add
xchg
mov
push
pop
std
in
nopl
push
mov
subl
dec
mov
movsb
lret
inc
push
shll
leave
lcall
add
into
cmp
mov
addr16
aas
xchg
idiv
pushf
xchg
xchg
and
push
and
adc
lea
xchg
xlat
enter
add
aam
xor
pop
outsb
ss
mov
inc
or
mov
cmpsb
mov
inc
sbb
pushf
or
inc
imul
lahf
les
pop
loop
or
dec
add
rcll
test
pop
cmp
cmp
adc
xchg
jmp
out
push
adcl
cwtl
mulb
cmpsb
imul
sbb
loopne
sbb
bound
add
popa
mov
pushf
add
scas
mov
adc
vpextrw
lds
mov
cltd
je
fstps
push
push
sub
cmp
fs
mov
adc
das
notl
into
sbb
testb
sbb
adc
fdivl
fdiv
add
dec
jb
sub
aam
shl
jbe
push
push
clc
lahf
shlb
enter
or
jns
inc
aad
cld
mov
or
hlt
and
cmp
inc
and
pushf
xor
xorl
lret
inc
je
xchg
cmpsb
xor
out
pop
jo
sub
lds
and
cltd
pop
pushf
imul
push
call
les
push
mov
xchg
out
jle
xor
mov
or
xchg
xor
jle
dec
add
xor
pop
sub
mov
sub
xchg
xchg
and
mov
push
sbb
stc
xlat
fwait
outsl
mov
popf
mov
das
pop
inc
ret
or
xor
ss
inc
dec
insl
out
add
xor
cmp
add
mov
in
dec
xchg
scas
fsubp
out
dec
mov
xchg
icebp
pop
dec
push
clc
pop
mov
rcll
xchg
cmp
mov
call
jecxz
jp
pusha
push
in
cmpsl
push
repz
jmp
add
or
lods
jecxz
xchg
push
in
push
sti
lret
out
fldt
inc
jl
push
data16
ljmp
mov
add
jle
loop
sub
jle
test
movb
mov
mov
jnp
in
iret
mov
pushf
jmp
andb
fcmovu
mov
jno
nop
daa
hlt
outsl
lock
or
mov
out
pop
push
add
xchg
bnd
push
lahf
stos
sub
cmpsl
and
minps
mov
pop
cli
insb
push
jae
jae
and
jno
scas
outsl
sbb
or
popf
cld
fadds
and
adc
sbb
cmp
push
sbb
pusha
fcoms
or
xchg
aad
pop
rcrl
mov
test
fs
mov
or
jns
adc
add
arpl
cmpsb
jl
jmp
or
xor
jne
cltd
ret
inc
inc
test
mov
xchg
sarl
inc
jo
popf
jle
test
test
jg
js
int3
je
js
in
and
push
sbb
inc
inc
cmp
mov
add
mov
cmp
scas
mov
push
out
out
loop
aam
and
stos
in
push
xchg
mov
pop
nop
in
and
mov
mov
mov
pop
movb
aam
incb
xor
lods
sti
xchg
push
cmp
sarb
adc
in
rolb
pop
inc
in
cmp
inc
pop
inc
mov
or
les
lret
add
jl
inc
aad
ljmp
iret
or
xchg
fdivrs
jp
add
leave
add
std
data16
add
loop
in
lret
hlt
xchg
insl
push
sub
mulb
jnp
in
jg
or
imul
shl
into
div
xor
dec
fwait
jle
xor
pop
ds
jmp
inc
outsl
inc
loopne
idivl
lret
xor
inc
subb
fs
aam
sub
repz
fldt
cltd
popf
iret
sbb
xlat
or
lods
xchg
cmp
clc
dec
add
cmp
adc
jmp
arpl
jae
call
mov
mov
inc
jmp
decl
add
push
mov
mov
sbb
call
sbb
mov
test
pop
stos
mov
les
xchg
push
mov
loop,pt
fwait
out
cmp
mov
jge
aad
arpl
ret
jno
cmp
scas
loop
shr
divl
mov
ret
mov
mov
add
int
sub
leave
shlb
rcrb
xor
aad
les
pusha
aad
mov
icebp
ret
cmpsl
dec
pop
inc
test
and
and
into
sbb
in
les
and
mov
push
enter
mov
jecxz
xor
scas
mov
outsb
enter
enter
rclb
dec
cmp
repz
aad
dec
in
icebp
lods
or
fstps
jne
xchg
mov
mov
mov
lods
repnz
les
rclb
pop
sbb
dec
lahf
pusha
and
sbb
dec
mov
jge
push
push
cmp
or
or
push
mov
dec
pop
xchg
pop
jge
pop
mov
cmpsb
and
and
enter
pop
mov
sahf
fisttpll
lret
inc
out
or
jns
std
data16
adc
js
arpl
mov
lcall
xchg
stos
xor
push
mov
push
in
pop
sbb
dec
or
mov
or
std
imul
dec
mov
sbb
repz
jno
jge
add
adc
inc
outsb
cs
movsl
ret
cli
out
shll
jb
mov
and
add
sbb
xlat
and
pop
cli
test
or
push
xor
sub
gs
lret
mov
cmc
lock
and
lds
push
lods
add
xchg
aas
cli
sysenter
sub
lock
inc
sub
and
outsb
pop
mov
gs
sbb
leave
and
xor
in
pushf
push
adc
mov
movsl
add
jecxz
fdivr
dec
add
movsl
in
ret
cmp
xchg
pop
sub
cmpsb
push
aad
xor
or
scas
lods
cld
int3
xlat
and
imul
push
andl
push
pop
sbb
jo
pop
inc
dec
push
hlt
fcom
xchg
xor
shr
mov
cmp
dec
test
popf
dec
dec
repz
jno
jle
xlat
mov
adc
arpl
or
sti
add
stos
push
int
les
push
in
bound
mov
jne
ljmp
mov
jns
repz
repz
movsw
jl
pop
mov
ret
es
in
addr16
rcl
pop
loopne
sbb
cmpsl
imul
sbbb
insl
outsb
sub
mov
pop
jl
and
cmp
test
mov
test
mov
insl
shrl
je
pop
inc
inc
rcrb
dec
inc
sahf
pop
imul
bswap
pop
negl
outsb
mov
test
dec
pop
out
pop
cmp
mov
fnstcw
lcall
add
cs
or
loope
popa
jns
xlat
mov
icebp
dec
pop
ret
cmp
addr16
jno
xor
das
inc
mov
mov
insb
or
jle
and
inc
mov
sbb
inc
pop
shl
andb
shrl
mov
out
cmp
mov
push
fcmovb
add
sub
sub
push
sbb
adc
popa
shrl
and
mov
bnd
jecxz
add
loop
ja
jne
or
jnp
mov
dec
adc
push
inc
imul
je
dec
sub
lods
dec
push
xor
and
inc
insb
jbe
pop
pop
loop
xor
repnz
dec
cwtl
mov
lods
les
mov
mov
leave
or
insl
cmpb
push
bound
cli
lods
and
lahf
xor
nop
mov
cmp
adc
jnp
ss
xchg
mov
and
cli
xchg
scas
mov
and
mov
cmp
mov
pop
pop
dec
stc
sbb
and
lods
fmuls
and
in
and
mov
inc
and
xchg
inc
xor
add
iret
scas
ret
fstp
mov
or
cmpsl
fmuls
incl
sahf
push
pop
jp
push
insb
jne
dec
adc
add
and
sub
xor
cwtl
xchg
sub
icebp
pop
cs
dec
jg
jno
fsubs
xor
dec
and
adc
lods
pop
ljmp
popl
and
xchg
cld
sbb
sbb
xor
cmp
mov
pop
xor
pop
xor
push
mov
ret
imul
jo
lods
loopne
cmpsl
pop
pop
cmpsl
popa
jne
rorb
inc
adc
inc
cs
repnz
sub
mov
adc
insb
out
inc
int3
push
fs
je
leave
out
nop
jne
push
in
repnz
mov
push
push
inc
fbld
out
scas
add
daa
pushf
fnsave
xlat
dec
imul
in
push
push
and
inc
xor
frstor
xchg
push
jae
popf
mov
adc
and
loope
cmovnp
sub
sub
nop
and
mov
inc
xchg
gs
push
ficompl
lret
jo
insb
std
mov
push
xor
pop
xchg
aas
gs
imul
push
cmp
stos
test
lea
jl,pt
ret
cli
add
adc
scas
pop
in
push
xor
aas
shll
cwtl
push
or
mov
dec
aaa
je
into
sub
push
in
insl
inc
push
xchg
loopne
scas
push
mov
pusha
in
mov
lahf
or
mov
lea
pop
jmp
das
mov
pop
jae
stos
or
push
sub
pop
sahf
push
call
push
sbb
xlat
xor
aas
dec
insl
in
push
idivb
and
fdivrs
ss
pop
push
adc
xchg
lods
dec
cmp
ja
gs
mov
sub
adc
sub
add
push
test
xchg
repnz
adc
jg
push
dec
xchg
mov
cmp
jl
data16
xchg
cmp
xor
cmc
dec
lods
push
lahf
out
inc
enter
xorl
mov
push
and
mov
jb
in
bound
scas
in
mov
and
pop
in
aad
in
clc
ljmp
and
adc
push
adcb
cmpsb
fisttpll
mov
mov
xor
mov
test
inc
sub
add
ss
cli
mov
shld
out
mov
mov
sbb
and
paddsb
jno
into
leave
xchg
stc
shr
xor
mov
lret
cmp
outsl
scas
fwait
aas
test
adc
xchg
sti
and
shll
outsl
push
mov
cmpsb
in
mov
clc
ficoml
inc
imul
and
nop
mov
das
ud0
mov
sub
mov
mov
loopne
punpcklbw
clc
into
or
cmp
insl
rcr
fisttpll
out
mov
xor
mov
popa
sti
jl
pop
adc
xchg
scas
xchg
ficoms
ficompl
leave
test
add
cmp
loop
pop
and
xchg
cmp
sbb
stc
jbe
out
cmpsb
leave
lods
xchg
nop
push
pop
jne
loop
out
dec
jmp
push
stos
cmp
adc
gs
cld
or
xchg
or
push
out
mov
xlat
mov
add
pop
out
cld
fstl
int3
dec
cmp
mov
adc
cmp
and
adc
dec
pop
xchg
jge
xor
jl
dec
xor
xchg
dec
insl
pop
in
lahf
scas
mov
mov
loop
mov
jle
mov
cmpb
lea
test
cld
or
movsb
sub
add
fs
push
push
sbb
leave
insb
out
loop
cmc
rdtsc
sub
mov
sub
jne
cmp
inc
push
inc
inc
imul
jl
pop
in
bound
pop
bound
movsl
outsl
xor
jb
out
repz
pop
jo
jmp
push
xlat
loop
xchg
inc
pop
aad
adc
mov
popf
xor
inc
jbe
add
xor
pushf
cmpsl
adc
in
in
sbb
ret
movsb
push
insl
dec
xor
or
mov
xlat
sbb
xor
dec
lods
adcb
daa
lods
fsubrs
int
fs
jge
adc
gs
mov
leave
jbe
jns
pop
jmp
add
test
fisubs
sbb
and
outsb
iret
cwtl
push
jl
das
ss
sbb
loop
pop
cmpsb
movsb
jns
cltd
imul
mov
xchg
xor
and
test
add
lods
cmp
enter
adc
paddb
ja
and
das
shlb
pop
mov
icebp
xlat
loope
push
jbe
sub
orl
lret
and
stos
and
mov
jecxz
mov
vandpd
xchg
or
mov
lods
pop
mov
sti
les
add
dec
xchg
push
addr16
js
pushl
fistl
pop
movsl
repz
loop
jmp
push
cld
out
test
inc
or
sbb
cwtl
test
sbb
mov
dec
cmp
pop
mov
push
out
adc
mul
int
pop
hlt
movsl
or
scas
out
int3
in
adc
jmp
mov
clc
pop
sarl
or
lahf
sub
xchg
lock
and
or
fsubp
cld
sarb
ds
sub
jl
ss
or
gs
cmp
cmp
inc
and
movsb
mov
fcmovbe
push
std
mov
iret
cmpsl
pop
sub
push
and
les
mov
cmpsb
push
adc
add
in
out
in
das
mov
mov
aam
movsl
xor
mov
pop
add
sub
faddl
sahf
stos
bound
sub
call
dec
ficompl
xor
cld
xor
and
jbe
arpl
shrl
mov
aas
movsb
jo
ss
sbb
jecxz
lock
clc
and
or
push
das
dec
jl
je
inc
sub
jb
ror
and
xor
call
cs
jbe
or
popa
pop
mov
or
mov
jno
pop
jno
addb
cmp
mov
or
xor
pusha
mov
pop
mov
xchg
cmp
movsl
dec
outsb
mov
mov
mov
lcall
cmpsl
pop
xchg
push
in
fdiv
movsl
jp
cmp
cld
sub
xchg
dec
xchg
arpl
or
int
loopne
sub
pop
cvtpi2ps
jge
sub
adc
adc
mov
popa
xor
movb
jle
outsl
imulb
inc
pop
inc
or
adc
adc
shll
insb
jb
mov
lcall
insl
out
pusha
adc
incb
mov
xor
outsl
jmp
or
movsl
or
test
jno
inc
mov
mov
into
inc
push
mov
adcl
loop
popa
pop
cmp
fs
test
ja
sbb
gs
es
adc
popa
imul
add
sub
test
das
xchg
add
stos
jo
xor
xchg
mov
aas
inc
ds
jno
test
sub
or
sub
jg
out
pop
aas
cmp
xor
adc
test
ss
js
adc
test
mov
jnp
jmp
xor
and
sub
sub
lods
jns
out
mov
les
cmpl
adc
jp
sbb
mov
test
aaa
push
sub
pop
test
dec
popa
roll
lcall
lret
cwtl
cmpsb
pop
mov
add
mov
leave
shll
mov
or
and
sub
rcrl
cmp
adcl
cmp
pop
stos
jno
mov
imull
xchg
ja
es
movb
jmp
inc
int
pusha
push
movsl
dec
push
idiv
pop
fsubrs
test
jp
add
fldenv
mov
mov
aas
jo
es
cmpsl
push
add
testl
push
out
cmpsl
popf
scas
sub
mov
cmp
and
mov
inc
test
pop
stos
xchg
inc
mov
repz
int
popa
ljmp
mov
clc
sub
testl
add
out
pop
pop
xor
in
mov
dec
push
aad
adc
inc
dec
inc
imul
add
xlat
jbe
repnz
ffree
sub
adc
push
and
pop
pop
fs
loope
rcrb
test
cli
iret
loop
popa
inc
cmp
ret
shlb
out
pushf
and
dec
pop
in
or
sbb
cltd
insl
sti
xor
inc
out
mov
mov
mov
pop
mov
mov
inc
mov
test
sarl
icebp
lret
mov
xor
push
cmc
scas
sub
mov
test
sahf
scas
lods
movsl
xorb
jmp
sub
jbe
jns,pn
or
push
push
xor
push
pusha
dec
idiv
dec
js
fisttpl
inc
and
cmp
cmp
dec
pop
stos
sub
xor
jecxz
jp
insl
fwait
dec
loopne
mov
and
loopne
ljmp
call
je
icebp
xor
or
movsb
fisttpl
fisttps
in
or
ret
and
mov
xchg
jb
lret
sti
daa
pop
sbbb
xchg
adc
xorl
aam
lods
shll
push
sbb
push
cs
mov
outsl
mov
add
pop
fisttpll
mov
jo
int
repnz
aad
pop
cmpsb
repnz
enter
pop
sub
sbb
xor
shll
stc
test
add
popf
add
xor
push
popa
jg
mov
sti
xor
fstpt
in
icebp
jnp
repnz
fldcw
outsl
push
repz
lods
lods
and
mulb
loope
imul
bound
iret
and
and
fisubrs
shlb
inc
pop
push
and
lret
push
sub
fnsave
push
cmp
sub
leave
repz
and
pop
sbbb
ror
mov
dec
xor
std
push
xor
sbb
jnp
push
sub
test
lock
cld
cmp
ss
jmp
cmp
cmp
mov
jge
aad
inc
and
movsb
mov
and
push
and
mov
sub
outsb
lret
pop
or
pop
xchg
adc
cmp
pop
out
sbb
fisubrs
addr16
push
mov
js
pop
in
sbb
add
leave
xor
lods
jae
sbb
pop
cld
popa
sub
or
ds
inc
stos
testl
fidivs
mov
fistpll
into
in
lea
adc
sub
out
mov
pop
roll
bound
mov
inc
push
sbb
push
add
cmp
push
mov
xor
cmpb
daa
in
adc
fstps
mov
xchg
stc
lahf
rcrb
inc
gs
loope
std
ret
push
sahf
and
scas
mov
mov
enter
jg
mov
stos
pushf
push
lret
out
cmp
mov
les
cmpsl
push
xchg
clc
xchg
inc
test
ljmp
cmc
xchg
mov
clc
push
aaa
dec
mov
es
and
inc
stos
es
hlt
mov
les
and
mov
mov
push
dec
jno
dec
lds
xor
push
loop
test
ds
adc
bound
aam
popa
jmp
inc
mov
mov
sub
call
inc
lret
mov
call
xchg
aaa
xchg
mov
mov
mov
push
repz
roll
and
pop
pop
fistl
lahf
in
fwait
xor
dec
fwait
dec
ss
ja
loopne
loop
lret
jb
or
pushf
and
inc
loope
push
sbb
jmp
fdivrl
fisubrl
lahf
adc
fwait
ja
push
std
dec
test
cmp
scas
rcrl
xchg
push
ds
mov
pop
push
insb
jbe
pop
xor
add
cltd
mov
lret
insb
push
icebp
mov
stos
loope
shll
aaa
ret
inc
jo
out
movsl
mov
ficoms
mov
test
faddp
adc
fstpt
repnz
scas
jmp
ds
fstl
dec
mov
daa
push
cs
inc
sbb
and
mov
xchg
inc
ss
or
xor
addr16
ljmp
mov
sub
mov
fisttpll
rcll
mov
pusha
push
sbb
sub
sbb
out
push
or
mov
stc
shlb
jns
jne
cs
outsl
jb
jbe
sarl
stos
dec
rclb
or
mov
pop
xor
cmpsl
push
es
lods
in
or
shrb
arpl
fimull
add
iret
scas
adc
nop
aaa
xchg
dec
enter
test
inc
cs
sahf
test
jecxz
xor
push
pop
js
cld
jecxz
cmpl
xchg
iret
popf
ds
arpl
pop
icebp
out
inc
pop
dec
dec
and
mov
adc
fsts
dec
bound
in
pusha
cmpsb
sub
lods
in
shl
aam
mov
mov
bound
cli
jmp
iret
jmp
push
jo
sub
inc
call
add
rclb
repz
cmp
xlat
leave
pusha
popa
sbb
sub
mov
push
fistps
hlt
ret
int
lret
cwtl
push
shrb
pop
out
insl
jno
rcll
stos
f2xm1
sbb
push
ret
xchg
cmp
and
xor
lcall
in
fimuls
test
out
pop
scas
pop
leave
xchg
jns
mov
mov
add
addr16
or
dec
push
fimuls
subb
stos
rol
popa
int3
add
jp
lods
mov
fbstp
or
mov
lds
mov
testl
sub
push
out
xchg
cwtl
or
dec
dec
les
ja
mov
mov
flds
add
jle
mov
push
push
sbb
jmp
push
xor
pop
mov
cmp
or
xchg
insl
mov
and
cmp
sub
mov
popa
pop
out
adc
pushf
push
outsl
sbb
mov
xchg
mov
inc
push
iret
jns
sub
imul
jb
push
xor
cmp
fstl
mov
push
cmpsb
push
mov
and
in
adc
mov
jmp
pop
hlt
mov
mov
jae
adc
shrb
ja
fidivl
mov
pusha
push
aam
sbb
std
loopne
mov
ret
xchg
hlt
xchg
fdivs
cli
xchg
je
enter
int
pop
xlat
enter
lahf
cwtl
or
shrb
pusha
stos
add
pop
inc
adc
ljmp
xor
fs
mov
xchg
loope
xor
lcall
push
loopne
nop
iret
or
fistps
mov
dec
je
and
push
shl
dec
and
test
or
fiadds
cltd
mov
inc
scas
js
pushf
xor
sub
js
jecxz
cmpsl
shll
iret
mov
fcmovnbe
push
jmp
pop
rolb
jnp
push
push
mov
push
mov
test
or
push
bound
push
xor
or
js
stos
in
mov
hlt
cmpsl
js
cmp
test
test
ss
ret
mov
lret
and
mov
cmp
jns
jb
popf
out
int
loop
fidivl
fadd
icebp
mov
ja
push
in
repnz
insl
repz
outsb
sbb
pop
js
insb
sub
jmp
test
adc
ficoml
imul
movsl
sub
lds
inc
clc
mov
repnz
or
cwtl
cmp
inc
xchg
nop
mov
xor
in
ss
cmc
loop
repnz
sub
push
xor
fwait
fs
insl
incb
js
adc
pop
into
mov
xor
popf
je
or
enter
cmpsb
mov
mov
sbb
dec
mov
js
lds
popa
jp
sub
repz
dec
cmp
into
and
cmp
hlt
cmp
dec
and
pop
bswap
iret
out
and
int3
and
cli
pushf
add
sub
add
push
jns
mov
lahf
adc
ljmp
es
mov
and
xor
jae
sub
and
mov
out
add
sbb
and
sti
cmp
sbb
pushf
sti
bound
mov
push
in
jbe
stos
fildll
mov
jne
mov
ret
jb
xchg
pusha
sahf
lods
mov
cmpsl
inc
negb
mov
sbb
cmp
xchg
and
scas
mov
lea
mov
je
je
repz
pop
rclb
rcrb
sbb
leave
mov
not
mov
cmp
adc
cmp
pop
sub
adc
pop
inc
dec
out
into
lods
sub
in
lods
out
iret
push
push
add
mov
fdivs
outsl
pop
nop
lcall
fwait
iret
nop
xchg
test
inc
pop
sub
shll
sbb
pop
in
push
sbb
push
icebp
iret
stc
cmp
xchg
sub
or
and
sub
pop
out
or
dec
fimull
mov
popa
fmuls
lds
xchg
filds
cmc
movsb
scas
iret
pop
ret
shll
xchg
xchg
mov
push
fstps
mov
lds
dec
push
jo
mov
push
cs
out
sahf
push
mov
call
ds
jb
out
xor
adc
stc
add
inc
mov
in
adc
adc
stos
mov
roll
scas
xchg
or
adc
cmpsb
mov
cmp
add
mov
pop
add
loop
sbb
arpl
test
test
sbb
lcall
or
dec
mov
mov
xor
insl
fistpll
dec
add
das
out
inc
imul
adc
adc
repz
leave
hlt
push
lret
je
sub
loop
mov
stc
adc
arpl
rcrb
sub
lods
adc
sbb
xchg
or
pop
mov
stc
repz
pop
xor
data16
mov
cmpsb
or
cmp
cmpsl
gs
inc
pop
and
ret
pop
jg
sbb
adc
je
rcl
jmp
cltd
insb
lahf
or
icebp
das
push
in
call
push
adc
or
ljmp
mov
loop
dec
dec
jmp
inc
xor
pushf
cmp
sbb
jne
sub
jmp
mov
sbb
mov
mov
cmp
cmp
in
out
ja
enter
cmp
xchg
mov
sub
and
js
xchg
push
push
int3
fidivrs
ret
push
fnsave
addl
lahf
jne
push
push
mov
gs
call
scas
xchg
mov
adc
jnp,pt
add
stos
ja
cwtl
dec
xchg
adc
mov
cmp
mov
jmp
xchg
les
hlt
cmc
jle
add
call
lds
paddusw
sbb
sbb
cmp
int3
push
jno
or
adc
mov
bound
push
arpl
addr16
aam
lea
or
hlt
loop
lcall
sbb
xor
mov
xchg
jp
inc
inc
fcompl
ret
leave
notb
mov
test
scas
lock
push
cs
pop
sahf
jmp
sbb
and
jle
shrl
fists
inc
push
out
push
fs
pushf
xchg
aam
xchg
jns
movsl
nop
mov
movsl
repz
mov
push
aad
cmp
sarb
add
inc
ret
stos
mov
cmp
enter
out
inc
pand
push
jno
mov
jne
out
das
inc
mov
or
xor
xor
das
pop
insb
adc
xchg
jb
insb
out
lahf
jl
in
js
das
mov
push
pop
jmp
mov
data16
packsswb
stos
scas
js
pop
sub
in
inc
rclb
mov
mov
inc
shl
rclb
add
sub
rcrl
pop
hlt
or
sbb
loop
outsb
sysret
shll
cmpsb
inc
in
push
cwtl
sbb
mov
mov
loopne
movsb
mov
adc
nop
fwait
mov
push
mov
lds
pop
addl
mov
sbb
or
mov
lahf
dec
shll
in
cwtl
add
and
cmp
fistps
cmp
and
pop
mov
clc
adc
lea
dec
inc
test
popf
pop
push
pop
out
addr16
cmp
xchg
jge
push
shlb
into
roll
xchg
lret
sbb
aad
jmp
jmp
xchg
sbb
loop
insl
lret
push
shrl
sub
push
cmp
inc
sarl
dec
js
aas
jp
mov
lea
gs
jae
sarl
aaa
pop
pop
xchg
lea
subl
sarl
push
fstp
push
mov
push
mov
push
insb
pop
clc
scas
xor
and
popa
xchg
jno
arpl
stc
repz
dec
out
jle
push
sbb
mov
pop
adc
repz
sbb
loope
xchg
decl
pusha
out
or
frstor
dec
adc
pop
ret
and
gs
data16
pop
imul
repnz
ljmp
sti
pop
int
mov
mov
mov
mov
stos
xchg
adc
in
xlat
jmp
ss
pushf
mov
ja
test
jecxz
sbb
in
xor
adc
jge
lret
orl
daa
jecxz
sbb
dec
js
push
fstpt
mov
int3
repnz
mov
aas
lret
sarb
cltd
xchg
repz
push
mov
mov
les
mov
mulb
sub
add
or
jle
ss
adc
outsb
call
iret
imul
fiadds
add
push
shll
pop
mov
aad
std
jecxz
leave
adc
dec
jge
mov
ljmp
fnsave
xchg
or
filds
cmp
out
or
enter
mov
lods
popa
sub
dec
sub
cltd
sub
bound
pop
and
data16
add
andb
mov
jae
or
cmp
push
pop
sub
in
jle
aam
fs
shl
cmpb
nop
int
fimull
add
cmp
clc
cli
add
cmc
fisubl
sbb
int3
outsl
imul
ljmp
xchg
in
hlt
scas
and
jne
inc
cmp
xor
lods
fwait
xorb
imul
push
std
lea
mov
jb
pop
and
sub
push
pusha
bound
cmpsb
out
push
jle
jle
xchg
and
mov
out
mov
xor
lcall
les
or
dec
lods
inc
aad
in
stos
xchg
inc
rcll
pop
fldcw
addr16
add
insb
insl
sar
mov
mov
mov
sbb
scas
mov
lea
jb
sarb
jecxz
fcomip
or
and
adc
popf
push
lea
push
cwtl
adc
insb
sub
and
insb
in
mov
fmull
iret
sahf
inc
int
add
rep
push
gs
push
leave
xor
movsb
sub
notb
add
scas
jmp
pop
xchg
scas
pop
adc
ds
and
inc
aaa
movsl
sub
jecxz
and
psubusb
cmp
std
pop
ss
aas
outsb
push
out
sub
mov
adc
mov
mov
inc
xchg
mov
sub
out
add
lret
xor
int3
addr16
sub
add
stos
dec
insb
lea
jnp
xlat
cmp
ss
addl
sub
pop
cmp
push
loopne
pusha
xor
arpl
and
js
mov
sbb
inc
inc
jae
in
loop
or
decl
sub
int3
cwtl
and
mov
inc
rorl
sub
je
pop
arpl
jne
xchg
xchg
cld
mov
mov
clc
je
stc
shlb
cwtl
pusha
push
cs
push
jnp
xor
push
xchg
fldl
stos
rcrb
daa
test
popf
pop
ficoms
jae
xchg
aam
daa
jle
push
jl
push
je
aad
outsl
divl
mov
mov
and
fmul
pusha
mov
dec
cmp
jl
xchg
insb
mov
sub
add
add
mov
pop
enter
mov
pop
stc
bndstx
pop
ret
pushl
mov
frstor
fmull
test
pushw
pop
push
push
jne
jl
sub
mov
aas
inc
xor
cltd
mov
xor
jo
test
scas
cmp
jp
inc
mov
aad
push
sbb
push
mov
add
cltd
adcb
xchg
int3
cmp
jnp
inc
xchg
arpl
imulb
jg
shll
pop
in
cmp
rcrl
in
add
lods
insl
sub
mov
add
or
fbstp
or
xor
aam
fstpl
aam
fcoml
xchg
pop
pop
out
movups
jecxz
adc
jbe
cltd
js
and
or
stos
mov
int3
mov
addb
mov
and
jle
sbb
insl
mov
js
int
cmp
dec
ds
push
inc
je
mov
in
mov
movzwl
dec
enter
add
cmp
ret
iret
std
cmp
add
dec
mov
or
or
sub
fdivrs
sti
lea
adc
das
mov
sbb
pop
popl
loopne
fwait
lret
sbb
push
pop
subb
ljmp
add
lcall
je
in
dec
jmp
sbb
leave
sub
pop
xchg
aas
sub
cmpsb
sub
xchg
jae
int
aam
mov
sbb
retw
cli
or
and
sbb
xchg
test
std
pcmpgtd
xchg
cmpsl
sub
add
adc
cli
sbb
bound
push
add
xor
jne
dec
fistpl
sbb
sbb
lods
dec
cmp
cmpsl
ss
cmp
dec
jns
ljmp
jno
add
inc
mov
sub
mov
dec
cmpsl
mov
pop
inc
scas
imul
pop
insl
js
sbb
dec
jbe
aam
hlt
sbb
xchg
mov
jnp
adc
ljmp
repz
sub
rorl
mov
sub
dec
in
cmp
cmpsl
fbld
fcomps
push
jge
hlt
dec
iret
inc
das
dec
add
push
xchg
outsl
pop
fld
shl
in
test
stos
xor
popa
jb
shr
mov
push
adc
addr16
jne
outsl
inc
andl
sti
xchg
adc
inc
jnp
dec
inc
jle
clc
xor
out
iret
out
or
sahf
rcrl
in
shl
sbb
jle
repnz
jge
sarb
mov
mov
das
lahf
jle
movsl
inc
inc
icebp
add
addr16
push
add
scas
mov
xchg
push
pop
rcrb
nop
pop
adc
xor
cs
xor
punpckldq
cld
outsb
pop
lds
pop
aad
jmp
sub
lcall
pop
sub
lcall
idivb
push
lret
shll
sti
sahf
lahf
jecxz
out
mov
fcoms
mov
push
pop
dec
sbb
fs
pop
mov
shll
and
add
push
in
xchg
leave
out
dec
je
inc
clc
rcrb
lret
inc
repnz
adc
xor
sub
mov
push
xchg
jp
and
outsl
mov
add
add
add
std
mov
mov
daa
jae
push
bound
jb
push
cmp
not
test
jle
sahf
es
aam
mov
add
mov
fwait
int
pop
mov
xchg
push
push
xor
jmp
in
inc
addr16
shll
jo
test
enter
push
fsts
jno
add
add
push
mov
push
imul
sbb
xchg
clc
arpl
outsl
sub
mov
mov
sub
xchg
jge
mov
cmp
leave
shlb
dec
dec
sub
mov
jge
jb
fs
jle
movb
mov
xlat
jb
jnp
cmp
dec
cmc
ffreep
shr
adc
adc
ficompl
js
xchg
jg
inc
fsub
add
push
popa
fisttpll
imul
sbb
sub
mov
outsl
lret
loopne
adc
cmp
shrl
pushf
push
and
pop
pop
stos
stc
or
dec
outsl
insb
add
xor
pop
adc
jno
cmpsb
fwait
lea
test
pushf
jg
iret
mov
mov
adc
sub
aad
push
fs
mov
jecxz
push
push
xor
mov
fisubs
aad
add
mov
loopne
rcrb
mov
enter
pop
jns
cli
test
lret
adc
pop
repz
int
loope
cmp
push
aas
in
dec
jmp
loopne
adc
pop
mov
sub
mov
sbb
xlat
punpcklbw
fldl2e
xchg
aam
mov
mov
adc
push
cmp
mov
outsl
outsb
add
pop
gs
lcall
pop
sbb
rcrl
inc
mov
adc
rcrb
mov
aam
hlt
std
rcrl
ret
jns
ja
cwtl
mov
inc
inc
and
cld
daa
xchg
ret
test
movsb
push
leave
cld
es
xor
xchg
fsubr
pusha
mov
test
and
fld
mov
inc
xchg
push
mov
cmp
jb
push
sub
js
movsb
mov
jne
subb
das
xchg
cld
push
stc
aaa
mov
gs
fmulp
xor
imul
sti
nop
aaa
add
movsl
and
data16
mov
imul
push
xor
adc
and
push
int
push
js
stos
es
cld
psllw
enter
jg
adc
ret
and
aad
loope
pusha
jg
xchg
mov
repnz
dec
jl
or
push
icebp
inc
or
or
dec
jp
or
jb
sti
sahf
addr16
mov
mulb
pop
add
cwtl
rorb
sub
or
dec
insl
in
outsb
jnp
movsl
mov
test
sarb
jb
call
mov
xchg
mov
mov
fldcw
sarb
rorl
push
mov
xchg
mov
in
sub
xor
cmp
sub
inc
pusha
daa
mov
data16
fcoms
adc
cmpsl
sbbb
and
aas
mov
push
add
sarb
loopne
push
adc
pop
aaa
add
cmpsl
inc
cld
imul
add
adc
jns
dec
fdivl
ffreep
in
dec
dec
ljmp
pop
popf
pop
push
pop
add
in
xchg
lods
outsb
sahf
repz
pop
or
in
xor
xchg
xchg
xchg
mov
dec
sbb
hlt
out
fadd
sbb
sbb
pop
js
pusha
bound
sub
adc
fisttpll
push
hlt
andl
inc
add
pop
subl
push
fs
xor
in
leave
in
mov
and
mov
mov
lret
or
cld
mov
divb
pop
jbe
sbb
cli
loopw
pop
lock
mov
cmp
cltd
pop
push
mov
jecxz
jo
fcomi
adc
je
adc
cltd
add
bound
in
sub
lcall
mov
add
cmpsb
int3
lcall
popf
or
mov
mov
adc
iret
out
ja
stos
pop
dec
inc
cmp
les
fldl
sbb
mov
rcrb
mov
mov
sub
loop
loope
jnp
outsb
pop
xchg
mov
pop
inc
dec
stc
rep
addr16
push
cwtl
dec
js
les
mov
pop
cmpsb
hlt
mov
xchg
int3
xchg
in
inc
jno
dec
icebp
fsts
adc
cmp
and
mov
sbb
add
ljmp
jecxz
and
lcall
mov
stos
arpl
imul
dec
push
cs
outsl
push
rcll
sbb
movsb
icebp
insb
int3
aam
out
and
mov
mov
jb
clc
inc
cwtl
iret
push
pop
addr16
jbe
repz
lock
outsb
aaa
subl
adc
add
xchg
es
aam
sbb
pop
cmp
outsb
inc
mov
pavgw
inc
lods
mov
aas
ljmp
in
mov
loope
push
lods
pop
nop
stc
pop
and
push
cmp
fdivr
hlt
movsb
loope
cld
out
adc
add
xor
dec
sub
ret
stos
add
mov
icebp
push
in
bound
mov
inc
ljmp
mov
mov
divb
and
pop
sub
pop
jae
pushf
scas
mov
cmp
and
xchg
es
loopne
into
cmp
inc
jnp,pn
mov
and
or
hlt
dec
es
into
add
mov
mov
cld
xchg
jmp
mov
out
adc
xchg
scas
lock
pop
adc
ja
xchg
adc
push
cmp
pop
mov
ret
rcll
call
and
fisttps
ret
outsb
jns
mov
in
mov
jle
sub
push
push
pusha
xor
adc
cmp
fwait
pop
and
adc
adc
pushl
je
pop
gs
jle
jecxz
dec
sti
ja
pop
movsb
orb
pop
fisubrs
cmp
jo
mov
dec
dec
popa
or
nop
test
fcoml
push
adc
jns
cmpsl
cmp
cmpsl
xchg
cmp
iret
ret
xchg
xchg
outsb
add
xchg
dec
dec
add
dec
std
testb
orl
sarl
add
add
jnp
rcl
out
and
or
test
pop
and
int3
xchg
sarl
dec
push
sbb
lock
push
jns
fwait
pop
je
data16
out
nop
inc
rcr
lahf
pop
or
into
cmp
ja
push
mov
lds
fsubrl
jne
aas
fs
in
xchg
lahf
mov
cwtl
mov
dec
sbb
sbb
loopne
or
test
mov
add
xor
ret
outsb
mov
mov
adc
mov
pusha
jl
xor
ficomps
add
repz
mov
add
sub
jl
ficoml
pop
xor
dec
divl
jmp
pop
add
and
cwtl
iret
pop
test
test
in
lret
das
jge
push
pop
sub
xchg
arpl
mov
cld
scas
and
loope
sub
pop
into
push
push
aam
orl
pop
rcrl
aam
xor
jecxz
out
xchg
rorb
rclb
ss
or
loope
lret
movsl
pmuludq
popa
xchg
addr16
and
pop
xchg
pop
scas
cmp
dec
aaa
movsb
dec
mov
dec
sub
dec
xor
xlat
js
or
aas
daa
movsl
icebp
dec
ds
mov
out
or
pusha
mov
push
add
in
mov
aam
sub
xor
pop
sub
sbb
mov
and
mov
fcompl
add
sbb
into
jns
jge
push
push
add
sahf
sti
loop
in
imul
shr
mov
int
push
cmp
and
and
das
inc
sti
mov
xor
aad
das
out
test
loope
aad
mov
adc
std
push
jl
xor
filds
imul
mov
add
stos
mov
imul
pop
mov
inc
sub
xor
jne
sbb
push
cmpsl
scas
sub
push
sub
out
or
dec
dec
and
in
mov
ret
push
and
jmp
mov
mov
inc
mov
xorb
out
enter
xor
sbb
adc
sub
cmpb
rcrb
fs
ljmp
jp
out
arpl
pushf
fs
cli
shl
rol
inc
xchg
lahf
dec
mov
dec
inc
cmp
and
insb
rcrl
ret
push
es
loope
andb
stos
mov
jp
push
call
xchg
sub
sub
insb
ret
pusha
inc
mov
pop
imul
pop
movsl
mov
inc
push
lock
lock
leave
mov
dec
cmp
in
ljmp
in
bound
mov
pop
test
bound
pop
shr
jo
adc
fmull
jmp
sbb
jmp
add
fs
or
ljmp
aaa
mov
inc
out
mov
mov
jge
das
pop
test
dec
mov
pop
enter
addb
adc
lret
or
fnstenv
cmp
mov
adc
lcall
movsb
lock
lcall
repz
shrl
xor
ret
sbb
ret
mov
fstp
divl
pop
cli
push
fsubr
rcll
test
cmp
enter
popf
mov
test
cmc
xor
insb
shrb
mov
push
sar
movsl
jne
fldcw
sbb
dec
fidivrs
jne
ja
mov
jl
cli
outsl
leave
mov
mov
fistpll
mov
addb
outsl
lea
stos
repnz
jb
mov
sbbl
sbb
insb
dec
in
scas
push
or
mov
xor
jecxz
pushl
mov
push
pop
mov
cmpsl
lret
stc
sbb
jns
xchg
test
fidivs
and
mov
sbb
or
std
shlb
inc
pop
imul
add
jmp
jno
mov
sub
push
push
inc
adc
or
jae
sbb
les
xor
adc
popa
ljmp
add
fnstenv
mov
xor
stc
jge
mov
mov
jecxz
inc
jo
imul
imul
or
fs
addr16
or
jecxz
add
mov
call
outsb
or
popf
jle
jle
cmpsl
dec
mov
arpl
sub
stos
or
mov
pop
out
rolb
mov
ljmp
xchg
subb
call
add
add
xchg
pop
mov
mov
les
mov
add
mov
outsb
pop
cmc
bound
shl
cmp
xor
stos
int
pushf
mov
push
inc
jg
xchg
mov
mov
stc
mov
jns
push
dec
jmp
sarb
shlb
xor
ds
daa
add
push
das
leave
mov
jbe
dec
je
mov
sbb
xor
test
frstor
repnz
pushf
pushf
fmuls
fnsave
sub
shll
push
mov
hlt
or
sbb
pushf
mov
mov
outsl
push
mov
scas
add
mov
pusha
cmp
lods
in
mov
xor
push
mov
sbb
mov
mov
add
push
and
dec
nop
movsb
popa
ljmp
add
cmp
stc
jg
and
dec
adc
daa
add
push
test
xor
add
xor
test
sbb
mov
out
mov
inc
pop
dec
out
repz
scas
insb
aas
pop
bswap
pop
in
pop
mov
mov
or
lahf
xchg
icebp
addr16
stos
cmpsb
addl
pop
fwait
mov
mov
faddl
push
cmpsl
inc
repz
jl
adc
movsl
cmc
leave
and
cmpsb
or
cltd
ds
jmp
das
mov
aas
pushf
out
mov
jg
nop
and
lret
in
xchg
jp
sub
xchg
mov
lcall
shlb
and
andl
lock
push
fstpl
dec
mov
cltd
lahf
movb
pop
dec
push
das
lahf
in
jne
les
fistl
mov
stos
cmc
mov
sbb
sbb
adc
inc
mov
loop
popf
mov
sbb
sub
adc
pop
sbb
fxch
mov
scas
adc
fisubrs
es
loop
push
loopne
mov
int3
mov
test
adc
clc
cmp
cs
jmp
imul
cltd
jbe
xor
mov
push
cmp
jg
adc
je
ss
ljmp
int
xor
in
fstl
enter
add
pop
cmp
inc
push
add
mov
xlat
nop
xor
xchg
dec
fimuls
leave
add
sub
lods
call
pushf
ljmp
and
lock
iret
cltd
ds
mov
mov
aas
cmp
xchg
in
mov
les
inc
dec
in
mov
loopne
and
dec
pop
xchg
arpl
add
push
addr16
mov
mov
int3
roll
mov
sbb
lods
pop
movsb
call
xor
mov
mov
mov
stos
call
sbb
call
xor
std
cmp
dec
into
loope
pop
std
repz
and
outsl
push
inc
dec
dec
sub
aam
in
bnd
aas
pop
or
test
ja
in
inc
mov
add
faddl
ret
xlat
clc
arpl
and
cmp
xor
fwait
jo
or
icebp
pop
roll
add
mov
dec
cwtl
mov
sub
cld
pop
pop
pop
push
stos
add
cmp
lock
rcll
out
sbb
xor
repz
push
stc
movsl
and
add
inc
test
js
incl
mov
adc
ljmp
les
sbb
push
adc
push
sbb
xor
testb
jp
push
add
dec
mov
jecxz
ret
cmp
pusha
push
dec
cmc
out
mov
sahf
jae
mov
sti
cltd
push
xor
into
xlat
gs
mov
inc
mov
lock
jns
xor
xchg
in
push
into
cli
mov
mov
sbb
imull
push
add
or
push
popa
adc
or
jne
xor
les
dec
sbb
sbb
xchg
push
push
add
mov
iret
add
dec
ret
add
inc
push
push
sub
cli
js
repz
pop
cltd
divl
and
pop
and
hlt
inc
daa
je
jl
dec
sti
push
fwait
loope
mov
xlat
push
adc
flds
test
cli
fildll
and
or
inc
xchg
jmp
sub
jno
jge
adc
dec
test
push
sbb
mov
and
pop
jge
loopne
int3
mov
add
and
and
pop
dec
es
lods
into
inc
stos
loop
shrb
loop
push
adc
mov
ljmp
push
fsubl
or
in
loope
movsl
dec
lds
xor
add
iret
cs
pop
mov
faddl
adc
aas
iret
ja
jo
add
loope
hlt
mov
iret
lds
rcl
dec
xor
data16
adc
aam
push
inc
push
cli
loopne
test
add
cli
loopne
or
add
rcll
das
jnp
cmpsl
scas
roll
in
fsub
jae
jb
roll
dec
mov
in
dec
xchg
xchg
jg
lcall
daa
sbb
cs
fstpl
pop
xor
sahf
cmp
pop
push
pusha
jmp
popa
ja
ss
enter
lahf
pop
push
cmpsl
push
cli
lods
push
adc
cmp
adc
pmuludq
enter
sarl
loope
rclb
push
movsl
push
repnz
jo
outsb
inc
push
push
out
adc
add
mov
nop
dec
addr16
dec
mov
shlb
and
hlt
into
outsb
fs
adc
adc
loopne
cmp
mov
xchg
lods
lds
xchg
cmp
int3
mulb
insl
push
xchg
fwait
mov
inc
insb
jp
pop
sbb
pop
push
push
aas
fcoms
dec
sbbl
dec
or
jecxz
ret
stc
push
mov
xor
mov
cmpsl
subb
mov
test
pop
pop
mov
push
dec
in
pop
cmp
mov
jg
nop
lret
addr16
daa
fwait
adc
mov
nop
stos
cmpsl
js
and
pushf
adc
cmp
leave
popf
sbb
xlat
cmp
sbb
rcrb
fs
pop
into
adc
ucomiss
fldenv
mov
aaa
dec
cmc
sti
mov
ss
mov
cwtl
xor
jno
pop
push
cmpsb
dec
rcll
movsb
bound
rcrl
add
test
inc
lods
andl
dec
jl
popf
sti
int3
xchg
sub
cmp
xor
or
sbb
int3
adc
pop
or
imull
cwtl
clc
mov
cld
sub
fldl
or
xchg
xorl
out
enter
scas
std
cmp
xlat
or
idivb
mov
lret
pop
andl
pop
mov
popa
push
jno
add
std
call
jge
lea
scas
adc
sbb
xchg
je
pop
jl
sbb
add
dec
mull
inc
xor
sub
xor
jmp
mov
loopne
sbb
fcoms
arpl
cmc
prefetcht0
xor
mov
jmp
repz
fsubrl
ss
imulb
fwait
jo
into
fwait
mov
les
push
adc
in
cmpsb
cmp
dec
mov
and
adc
dec
pop
dec
mov
bound
loop
push
test
lcall
and
popa
nop
mov
mov
pusha
add
fisttps
fldcw
or
jp
jmp
enter
in
subb
lock
cmp
or
sarb
dec
mov
repz
mov
lock
pop
cli
roll
insl
test
jb
jmp
fs
and
idiv
dec
sahf
lds
cwtl
cmp
mov
lcall
lock
int
loopne
leave
push
xor
and
popf
cwtl
push
or
inc
fsubs
sti
into
mov
or
or
jo
pop
lret
fs
stos
mov
arpl
stos
ret
cmp
clc
push
sub
popa
lods
in
rcll
sub
xchg
or
and
xor
loop
dec
rcl
pushf
leave
push
addb
adc
and
fdivs
jecxz
adc
dec
mov
mov
inc
cmp
cmp
add
and
add
xchg
xchg
insl
mov
bound
outsb
sti
sub
adc
test
lcall
pop
lret
sub
cli
xchg
movsl
cwtl
fstp
pop
inc
scas
arpl
fs
adc
scas
or
jg
ret
xchg
sti
cmp
jbe
pop
int3
adc
ja
daa
ljmp
lret
push
out
jmp
dec
test
mov
jns
adc
inc
imul
test
fdivrl
xor
les
in
dec
cmpsl
mov
xchg
pop
mov
das
push
adc
sub
push
cmp
popf
sahf
and
jbe
icebp
pop
es
out
decl
mov
out
imul
pop
cmp
xchg
sbb
test
iret
lock
jmp
out
insb
je
sbb
inc
cmpsb
mov
pushf
xor
push
dec
popf
adc
scas
repz
push
ss
push
jns
shrb
cs
cmp
lahf
inc
test
inc
iret
data16
and
fs
mov
push
out
xor
fsubl
dec
push
dec
cmp
into
jg
mov
out
sub
or
mov
mov
out
jle
idivl
lret
pop
scas
lods
bnd
push
fimuls
aam
xor
fisubl
and
outsl
aad
ja
and
mov
fsts
rorl
push
in
mov
push
mov
hlt
enter
ret
mov
stos
sub
movsb
sbb
loopne
dec
push
cmpsb
aas
mov
xor
clc
hlt
xchg
adc
ss
mov
dec
movsb
ja
mov
mov
fdivrl
push
sub
sbb
mov
adc
jo
orl
jge
cmp
xor
adc
jnp
in
stc
sbb
test
jp
xor
jae
scas
movsl
cmp
insb
pop
mov
or
rcrl
mov
in
mov
push
sbb
jecxz
aaa
cmp
imul
loop
ret
in
pusha
and
cmc
jno
push
sbb
jnp
push
and
sbb
in
iret
vrsqrtps
cmpb
jb
in
in
fadd
shrb
iret
mov
mov
scas
xchg
jge
scas
sahf
xor
scas
test
lcall
incb
push
dec
cmp
pop
das
and
out
sbb
sub
and
jge
cmpsb
jae
mov
not
test
xchg
es
pop
ss
jae
test
jl
mov
leave
shrb
pop
push
aaa
mov
jne
add
or
mov
pop
stc
adc
out
cwtl
mov
mov
shl
xchg
or
or
mov
push
inc
and
pop
arpl
jl
xchg
mov
cld
movl
movsl
lea
sub
jb
loopne
es
fistpll
icebp
jmp
cld
repz
arpl
and
xchg
cmpsl
das
mov
cmp
pop
mov
out
clc
sahf
cli
pop
out
repz
mov
sbb
sahf
and
inc
pop
lahf
data16
push
pop
xor
adc
push
arpl
iret
pop
loope
scas
pop
cld
pop
or
ret
dec
outsb
fidivl
inc
xchg
mov
ljmp
xor
js
jae
mov
add
xchg
xchg
jg
xchg
loop
bound
adc
ror
sub
dec
incb
pop
iret
or
jno
sbb
mov
fmull
pop
scas
jnp
jbe
and
cmp
fcmovnb
fxch
add
adc
fstpt
sahf
cld
fimuls
push
in
int3
sti
repz
loopne
pop
test
jb
inc
sub
push
mov
xor
jge
and
push
rcrb
insl
mov
sub
xor
lock
or
sub
les
add
sbb
or
sbb
repz
push
sub
fcoml
push
cwtl
mov
sbb
arpl
adc
pop
xchg
jl
mov
cli
add
mov
aam
lods
jp
sub
dec
xchg
outsl
adc
pop
push
jecxz
cmp
push
sbb
pushf
shrb
jle
sahf
xchg
or
ret
pop
pop
ret
push
fldcw
popf
cmp
test
sub
stos
outsb
test
mov
xchg
lds
mov
roll
pusha
lods
sub
dec
xor
aaa
sub
pop
push
sti
addr16
mov
pop
xor
push
out
clc
dec
pop
and
sub
stc
push
inc
andl
mov
js
add
cmp
xchg
mov
cmpsl
lahf
xchg
lret
push
adcb
in
jno
mull
int3
adcb
data16
loopne
lock
sub
or
test
mov
jecxz
inc
cltd
test
xchg
and
ljmp
xor
loopne
jle
xchg
dec
sbb
jecxz
sahf
clc
out
ljmp
inc
lret
std
out
fwait
xchg
sbb
shrb
mov
adc
inc
in
cmp
push
addl
mov
adc
mov
add
mov
push
jb
out
pop
scas
aaa
into
out
loopne
ret
add
sub
cmc
outsl
xlat
jg
xor
dec
mov
jl
inc
and
ja
pop
mov
jns
push
aad
cwtl
sub
flds
jecxz
jae
and
popf
push
sbb
cmp
sub
mov
dec
add
enter
dec
inc
sarb
sti
push
mov
adc
sahf
pop
dec
lahf
mov
sbb
aaa
sub
sub
add
outsl
fcoms
mov
call
xchg
jb
les
gs
movsl
mov
jb
je
lcall
adc
sbb
js
insl
push
pop
aad
sub
dec
jo
dec
cmp
stos
mov
sub
push
cmp
int3
mov
cmp
dec
dec
data16
cli
add
mov
pop
cs
insl
sbb
lds
cmp
sbb
imul
fldcw
mov
ljmp
pop
mov
mov
lahf
inc
fs
mov
adc
push
ret
pop
xor
aam
mov
std
adc
scas
scas
add
gs
lea
or
adc
in
xchg
add
pop
and
out
sahf
test
or
pop
jp
sbb
xor
shrl
enter
xor
jb
sub
mov
or
push
lret
outsb
imull
add
idiv
pop
into
push
iret
ds
ljmp
out
mov
pop
dec
xchg
mov
dec
insl
sbb
jg
fnstcw
test
mov
inc
xchg
sti
mov
mov
cmp
aam
lcall
mov
test
js
mov
dec
test
mov
jmp
ret
lcall
ds
and
shl
fidivs
in
mov
and
push
imul
sbb
jmp
xchg
sub
jle
push
and
add
mov
add
lock
mov
push
outsl
stos
xchg
mov
add
testb
iret
dec
mov
mov
roll
insb
pop
je
in
jge
lods
outsb
scas
add
xchg
cmp
pop
add
and
cmp
dec
in
popf
in
adc
mov
iret
dec
add
pop
pusha
xchg
js
comiss
jecxz
testb
jae
fnsave
mov
xchg
mov
loope
fs
and
lods
sub
xor
cltd
insb
mov
mov
inc
push
mov
cmp
mov
in
out
cmp
sub
sbb
aas
mov
mov
or
repz
push
lahf
pop
cmp
jb
pushf
popl
inc
cmp
insb
icebp
inc
dec
mov
xor
ljmp
and
and
and
xchg
jae
add
iret
jmp
or
jbe
das
les
das
outsb
xor
adc
imul
jmp
xchg
cmp
xchg
pop
mov
sbbb
fwait
pop
test
fidivrs
ret
or
movsb
cs
inc
imul
test
insl
aaa
cmp
das
xchg
rorl
testl
mov
sbb
inc
mov
push
je
jg
pusha
pop
push
add
sbb
fs
cmp
or
int
in
pushf
addb
aas
insb
pusha
std
sub
pop
sbb
push
xorb
in
das
lds
jo
pop
xchg
push
scas
sub
jmp
mov
mov
jg
aaa
lahf
in
jg
jl
and
jb
dec
scas
testb
dec
cmp
in
dec
stc
sub
mov
adc
cmp
pop
mov
outsb
xchg
lahf
jne
mov
jo
sub
rcr
cli
mov
das
bound
leave
mov
xchg
dec
inc
lahf
pop
sbb
adc
dec
sbbb
xor
sub
les
arpl
push
outsb
jmp
dec
insb
jbe
mov
xchg
loope
lcall
xchg
mov
arpl
and
mov
pushf
leave
dec
je
movsb
cmp
ss
add
dec
add
cmc
mov
sti
sub
mov
fisubrs
sbb
mov
xor
jp
xor
icebp
mov
mov
imul
aad
xchg
outsb
mov
dec
orb
sarb
imul
mov
pop
jbe
outsb
mov
out
in
dec
icebp
add
adc
imul
sub
lcall
bound
and
add
out
ret
adc
push
inc
xor
lahf
hlt
jno
jl
divb
xchg
xchg
adc
insb
mov
pop
cld
in
xchg
xor
push
mul
and
sbb
xchg
scas
push
lret
and
roll
fildll
cld
xchg
inc
cs
int
adc
push
fsts
dec
pop
push
inc
xor
cmp
inc
mov
pop
jns
jnp
loop
cli
xor
mov
shlb
inc
jp
xor
mov
lcall
fucomip
mov
push
adc
test
push
int3
jecxz
repnz
and
mov
pop
xchg
test
outsl
bound
jle
imul
sub
dec
das
dec
xor
cmp
das
jle
mov
xchg
cmp
orl
dec
and
xor
adc
pop
fisttps
jbe
or
pop
jle
or
cld
or
pop
inc
cs
sbb
call
out
xchg
push
pop
imul
ljmp
push
gs
cmp
jmp
pop
xchg
lahf
loopne
push
aam
int3
jnp
add
jle
push
lcall
in
push
lahf
int3
enter
rcrb
sti
and
and
xchg
dec
and
jns
loope
je
mov
and
out
mov
lcall
inc
in
pop
getsec
mov
into
movl
xchg
sub
sbbb
xchg
repz
jno
popf
cmp
std
daa
shrb
in
add
lret
mov
int
pusha
jns
cmp
out
pop
inc
sbb
dec
mov
add
jne
cld
out
push
or
jmp
jne
imull
das
daa
jmp
int
pop
inc
pusha
jg
movaps
movsl
xchg
inc
xchg
int
sbb
test
cld
and
loopne
dec
aam
cli
cmp
rcrb
jns
jo
add
inc
leave
sbb
aam
ds
nop
mov
jmp
sbb
push
aad
movsl
movsb
jmp
iret
filds
pcmpeqw
cwtl
mov
dec
push
out
icebp
mov
mov
xchg
loop
jno
push
mov
pop
sub
rcl
out
insb
jbe
mov
push
pop
daa
inc
mov
data16
lahf
out
dec
mov
aam
nop
xor
sbb
stos
lds
add
fwait
pop
cmpsb
pushf
shlb
lret
mov
fisubl
sahf
test
scas
fistps
inc
pop
cmp
cmpsl
dec
mov
stc
dec
inc
mov
dec
or
mov
pop
lcall
add
lods
cmc
cld
add
sahf
lret
mov
adc
clc
decb
jno
add
add
in
loope
mov
in
jo
adc
pop
adcl
xor
lods
mov
or
test
sbb
push
fldl2t
int
iret
jns
mov
jecxz
neg
jl
dec
and
jecxz
in
mov
dec
or
clc
out
mov
scas
jge
loop
orl
notl
movl
ret
clc
out
inc
les
sub
mov
stos
mov
mov
popf
imul
sbb
stos
cli
sbb
mov
nop
xchg
lods
push
dec
sbb
sub
repnz
pop
sti
mov
je
shrl
mov
aad
into
gs
jge
add
xor
in
cmpsl
xchg
aad
dec
lret
dec
test
cmpsb
lock
dec
push
bswap
lods
pusha
adc
mov
push
ficompl
mov
push
add
in
and
imul
divl
xor
insb
jg
mov
jle
loope
push
push
fucom
incl
inc
and
pushf
inc
outsl
pop
lahf
and
sbb
dec
mov
mov
jp
arpl
xor
shll
or
or
loopne
fsubp
xlat
jmp
adc
std
enter
push
aam
lcall
cli
fs
inc
aam
and
notb
shlb
mov
popa
hlt
adc
daa
mov
cltd
mov
popa
lods
jno
mov
pop
inc
xor
mov
push
jb
mov
jp
and
or
mov
lahf
sub
lds
cmp
add
in
jb
pop
adc
push
rep
xchg
inc
or
out
push
lret
sub
mov
mov
xor
es
lods
outsl
sbb
adc
dec
cmp
cmp
lcall
inc
push
imull
loop
push
or
inc
jle
pop
cmp
mov
jge
pop
sti
cmp
clc
adc
xchg
xchg
lods
outsl
in
std
seto
push
xor
aaa
out
bound
aas
or
movsb
or
mov
imul
out
pop
insb
mov
sub
lret
mov
call
loopne
xor
std
adc
mov
dec
dec
mov
rcll
sub
repnz
xor
sub
inc
sub
push
js
icebp
data16
lcall
gs
imul
enter
pushf
out
mov
shrl
add
mov
sbb
xchg
dec
std
subl
mov
push
xchg
jo
arpl
sahf
mov
mov
lock
pop
arpl
dec
repz
add
dec
fcmovnbe
iret
imul
adc
enter
cmp
jns
sbb
jb
pop
mov
bound
test
stc
and
aad
les
stos
push
mov
loop
dec
dec
pop
movsl
pushl
mov
mov
push
inc
mov
xchg
es
xlat
jge
and
mov
dec
adc
jnp
pop
lret
dec
dec
push
test
fs
push
inc
or
subl
flds
pop
aad
stc
mov
sbb
jnp
pop
push
adc
jecxz
pop
and
aam
test
lret
xlat
sbb
xchg
adc
arpl
add
and
and
scas
xor
arpl
sub
outsl
loope
loopne
adc
sbb
mov
or
inc
add
out
mov
imul
fprem
pop
fimull
sbb
ljmp
test
das
mov
popa
ljmp
in
adc
andb
jg
lods
jmp
lret
jp
xchg
mov
popf
pop
mov
inc
fisttpll
rcrl
iret
jge
out
lock
pop
mov
das
pop
ljmp
enter
in
lahf
or
mov
adc
push
dec
ja
push
mov
fnsave
and
das
sbb
mov
add
and
cmp
xchg
std
mov
push
pop
jno
jnp
pop
rolb
imul
mov
in
and
adc
pop
jbe
push
xchg
fnstsw
movsb
jnp
insb
mov
mov
mov
loopne
cmp
jne
jmp
mov
popf
outsl
jno
xchg
out
mov
arpl
in
add
cmpb
push
mov
jae
leave
sahf
add
pop
xchg
xchg
iret
xor
jg
sub
clc
in
and
dec
mov
adc
mov
mov
out
scas
movsl
jle
inc
sbb
fsubrs
ss
xchg
jnp
mov
add
jecxz
jg
iret
and
data16
fmull
in
or
in
out
js
pop
xchg
sub
aas
psrlq
dec
les
lcall
mov
arpl
pop
jb
mov
xchg
inc
add
negl
jge
xchg
int3
sub
adc
sarl
xor
cmp
jge
addb
dec
lcall
pop
push
lcall
push
sar
testb
sahf
push
jns
int
mov
sbb
sub
inc
jo
fildll
ljmp
scas
sarb
dec
mov
fwait
mov
sahf
test
jns
lret
repz
notl
stc
adc
pop
mov
jge
add
cmpsb
jnp
sbb
sbb
pop
push
jg
jnp
xchg
xchg
iret
mov
sti
add
nop
repnz
inc
inc
lcall
inc
pop
xor
fstpl
fsts
jne
js
mov
loopne
cmc
cwtl
mov
test
pop
imul
mov
mov
gs
ror
in
xchg
movsb
pop
mov
push
dec
pop
test
jge
adc
cmp
mov
pop
mov
sarl
cmp
cmp
stc
pop
in
std
cmp
add
movsb
xchg
rclb
mov
outsb
push
fnstsw
push
dec
stos
dec
outsl
fimuls
mov
fs
cmp
sti
jno
jl
dec
insl
xlat
pop
xchg
sub
jbe
push
lods
enter
dec
cwtl
sahf
push
mov
pop
mov
sub
ret
std
outsl
jp
imul
stos
jne
xchg
push
mov
cli
push
dec
repnz
push
jo
mov
iret
sbb
aas
push
call
and
fnstsw
jae
jns
mov
outsl
in
lods
xchg
cmp
mov
adc
movsb
mov
jle
in
movsb
ficomps
sbb
jle
fiadds
cmp
push
inc
insl
dec
es
sub
stc
jle
mov
js
inc
insb
ss
dec
sub
dec
imul
push
icebp
inc
mov
pop
add
add
inc
jp
mov
sbb
pop
je
imul
and
add
mov
or
les
aas
mov
dec
repnz
jne
push
mov
mov
lock
loop
or
lret
iret
xchg
add
test
ja
inc
nop
dec
xchg
cwtl
jp
xchg
stc
sbb
loop
arpl
mov
loope,pn
jge
andb
and
inc
xor
cmpsb
ja
jmp
jnp
mov
add
insb
or
mov
test
mov
into
ljmp
dec
jnp
mov
dec
sbbb
bound
jnp
cld
and
cmp
mov
popa
je
xchg
mov
out
inc
fs
pop
jg
pop
aam
mov
clc
pop
pushf
sub
loop
adc
sbb
int3
jmp
push
rclb
aam
sar
xchg
xor
lret
fidivl
and
push
call
in
adc
sub
in
ds
dec
add
lock
shl
add
fwait
or
fisttpll
xor
int
aas
xchg
and
dec
ds
rclb
pusha
xchg
stos
movsb
arpl
int
and
stos
jns
sbb
popf
sbb
mov
lea
shll
pop
into
or
repnz
xchg
push
shr
jmp
lret
movsb
and
lods
fisubrs
mov
cmp
mov
xor
or
lret
and
mov
mov
repz
xor
shll
hlt
xchg
sub
bound
aad
cmp
repnz
add
andl
cmc
int3
cltd
cld
fstl
xor
fstps
mov
repnz
jae
jl
pop
shll
xor
jmp
mov
mov
dec
out
enter
push
cmp
test
add
lret
ret
rclb
push
sub
jnp
or
jl
cmc
bound
push
inc
cmp
dec
pop
call
cmp
lock
adc
pop
das
stos
shlb
mov
inc
inc
clc
mov
xchg
cwtl
leave
in
pusha
popf
xlat
push
aaa
pusha
inc
mov
adc
sub
sub
mov
mov
and
xor
iret
sahf
dec
xchg
jns
or
nop
cmp
fiaddl
adc
dec
lods
sbbb
mov
enter
add
pop
push
orb
push
lret
push
cmpsl
out
mov
sub
pop
nop
mul
pop
lret
xchg
pusha
lret
sub
pop
and
test
add
lahf
mov
sbb
out
jl
popf
test
xchg
and
sbb
in
dec
jno
stc
pop
mov
and
sub
push
adc
and
inc
cmc
imul
sbb
std
mov
add
jmp
vsubpd
std
jecxz
lods
out
scas
jmp
out
icebp
mov
shlb
mov
lods
sahf
push
outsb
push
mov
mov
pop
aas
cltd
lret
adc
push
push
pop
mov
hlt
in
loop
mov
stc
jne
fistps
xchg
daa
shll
and
cmpsl
mov
push
mov
xor
xor
sub
cltd
js
fcmovbe
sbb
xor
dec
in
push
adc
std
sub
cmp
and
or
or
call
inc
add
jne
fimull
jae
jnp
add
dec
into
daa
pusha
pop
add
push
outsb
mov
fs
or
jg
stos
rcl
xor
daa
or
xchg
aad
mov
lret
loopne
clc
push
fdivs
mov
pop
nop
jae
ret
inc
sub
inc
jp
jne
fwait
test
xchg
in
mov
sub
fnsave
jl
fnstsw
js
mov
daa
xchg
stc
imulb
xchg
mov
push
and
fcompl
adc
mov
cltd
arpl
popa
pop
xor
xor
fyl2x
icebp
lahf
pop
xchg
and
mov
addr16
aam
stos
imul
imul
sbb
inc
sar
push
lret
sahf
jbe
int
iret
jb
movsl
outsl
push
ror
outsl
sbb
jle
xor
ss
dec
pop
ficomps
bound
aam
call
fbld
ds
xchg
sub
push
dec
xor
sbb
or
push
clc
movsb
scas
lret
jns
pusha
push
roll
sbb
or
test
xchg
pop
das
call
push
sub
sbb
shlb
lcall
popa
or
mov
jo
in
out
hlt
notl
lret
fs
mov
sbb
mov
mov
insb
outsb
icebp
pushf
pop
dec
sar
outsb
fistl
xchg
mov
shll
lret
mov
jnp
jl
imulb
stc
cwtl
or
jle
or
xchg
scas
cwtl
leave
ss
repnz
enter
inc
xor
cmc
adc
and
repz
dec
jno
std
test
sub
inc
int3
jmp
andb
xchg
cmp
aaa
inc
fwait
nop
cld
xchg
jo
mov
jp
pushf
jns
ss
test
jp
out
clc
shlb
lret
std
xchg
cltd
scas
xor
rorl
sbb
sbb
rdtsc
fisubrs
cmpsl
push
mov
inc
lock
loope
mov
lahf
push
sahf
call
cmp
aas
add
dec
xor
mov
fucom
mov
and
mov
shlb
sahf
pushf
sbb
cs
pushf
mov
mov
and
xlat
movsb
iret
xor
bound
sub
or
jae
jno
das
loop
clc
and
jge
je
lods
lock
cmp
popf
int
dec
jl
notb
or
fistps
shlb
lahf
ret
add
stc
inc
push
in
daa
mov
and
push
fwait
cmp
jnp
loopne
or
sub
xor
jae
ja
hlt
mov
test
test
in
xor
aaa
inc
ret
mov
test
xor
scas
mov
mov
aam
adc
rcr
negl
in
sbb
nop
add
mov
and
loope
pop
push
lret
imul
mulps
sbb
call
xlat
xchg
xor
mov
shrb
aaa
sbb
gs
into
aam
lock
or
hlt
in
lcall
loop
mov
out
subb
pop
or
imul
fisubs
ja
iret
or
int3
popf
ss
test
pop
inc
loop
dec
xlat
cmp
jle
in
and
adc
or
fwait
jmp
addl
out
jnp
loope
sbb
jne
daa
mov
fisttpll
lods
mov
orl
insb
dec
test
out
movsl
stos
aad
xchg
outsl
push
mov
inc
dec
mov
add
push
sarb
lret
sub
jbe
dec
push
arpl
mov
mov
add
es
aaa
insb
mov
dec
jae
inc
push
jmp
stc
cs
add
popf
push
mov
ja
and
mov
xchg
push
pop
jl
add
mov
sbb
pop
aaa
daa
outsl
stos
ret
mov
hlt
pop
xchg
loop
in
mov
popa
and
inc
fmul
xor
pushf
outsb
das
out
orb
sub
mov
test
loope
int3
lret
add
gs
add
dec
jp
mov
lock
and
jg
dec
mov
lock
mov
mov
jo
xor
nop
aad
out
mov
inc
dec
inc
shll
lea
aas
mov
inc
mov
mov
xlat
mov
dec
aad
xchg
cmp
xor
mov
sbb
out
out
into
mov
and
and
daa
pushl
lds
sahf
dec
pop
pop
xor
pop
pushf
push
xlat
mov
loopnew
adc
push
push
xchg
dec
insb
rorb
xor
lahf
mov
sbb
sbb
push
pop
jl
mov
dec
jmp
gs
sub
movl
pop
out
js
jl
sbb
jb
inc
cmpl
xchg
cli
fsubs
les
xor
je
mov
fadds
fildll
xchg
std
push
mov
cmp
jmp
cmpsl
and
loope
sub
sbb
nop
dec
add
ret
imul
pop
mov
je
fimuls
out
ja
rorl
xor
pusha
repz
sahf
jne
and
repnz
pop
int3
arpl
popa
stos
inc
mov
scas
and
and
jno
rcrb
fwait
call
xlat
mov
test
into
sub
adcl
in
dec
out
daa
mov
fisubs
je
dec
push
popa
xchg
in
cmp
mov
jo
dec
pop
inc
xchg
fdivs
and
inc
push
sub
dec
or
xchg
mov
clc
add
adc
add
pop
lahf
jmp
mov
xchg
mov
jae
cmp
popa
imulb
dec
push
add
pop
icebp
shrb
call
push
add
popa
push
cld
add
mov
sub
sub
add
test
jge
lret
inc
ja
pop
icebp
inc
pusha
add
mov
jns
sti
stc
mov
pop
aaa
movsb
add
and
ljmp
add
or
loopne
jbe
frstor
in
jmp
xor
imul
push
add
lret
xchg
aam
mov
add
shr
in
pop
jo
aam
mov
aaa
mov
push
imul
aad
cs
xchg
or
xor
push
adcl
clc
xchg
jmp
addr16
mov
repz
add
shr
lret
fsubl
icebp
movsl
xchg
push
push
jmp
subb
out
mov
imul
xchg
pop
popa
gs
movl
push
mov
and
or
mov
sub
imul
xorl
movsb
push
imul
push
inc
xor
fistpl
jns
loope
sti
jnp
shl
shrl
sbb
call
xor
les
mov
inc
repz
pusha
dec
cli
and
pop
and
test
add
push
stos
add
fidivl
xor
sbb
push
push
add
dec
notl
test
ja
and
ss
shll
push
inc
jae
mov
mov
insb
push
stos
fwait
add
mov
mov
int3
ds
cmp
pusha
scas
dec
call
mov
aam
mov
ljmp
xor
mov
lahf
cmpw
cli
pop
inc
arpl
and
cmpsb
in
pop
mov
xor
out
call
cs
sti
pop
mov
shlb
pop
das
xor
jge
push
mov
movsl
xchg
leave
fnstsw
mov
ret
dec
ficoml
enter
dec
add
repnz
icebp
gs
ss
pop
mov
stos
mov
shll
bound
ss
bound
mov
test
xchg
inc
lea
vcvtpd2psy
fnstenv
xchg
sub
lds
pop
jmp
pop
les
cmpsl
and
adc
jl
xor
mov
je
cli
fwait
js
mov
xchg
pop
push
fiadds
stos
push
std
test
insb
stos
fisubrs
xor
sub
push
divb
loopne
push
jl
sbb
or
cmp
loope
xor
jo
cmp
push
ljmp
fsubrs
push
ss
ja
adc
int
stos
pop
ret
shlb
add
mov
ljmp
out
sbb
fdivs
js
jmp
cmpsb
mov
jg
xchg
inc
xor
rcrl
movsb
bound
insb
clc
jg
rcl
push
sbb
or
xor
cmp
repnz
lcall
scas
mov
mov
xchg
sub
xor
test
or
aaa
mov
inc
out
fildll
push
dec
int3
jmp
cli
or
js
mov
insl
es
cmpsb
inc
xor
repz
stc
lcall
adc
dec
icebp
jmp
mov
notl
pop
mov
das
leave
jp
jecxz
add
and
and
in
add
inc
pop
mov
mov
movd
loop
adc
xchg
imul
daa
jle
cli
sub
dec
enter
mov
or
scas
inc
hlt
pop
test
push
lods
orl
mov
cmp
and
inc
jle
insl
jno
sub
mov
xchg
add
and
inc
dec
pop
mov
xchg
stos
jge
cmpsl
in
mov
mov
cmpsl
fcmovnbe
insb
and
xchg
xor
xor
sti
xchg
or
or
xchg
jbe
mov
jmp
add
int
push
fdivrs
iret
mov
inc
jbe
cmp
pop
cmp
in
data16
sbb
ret
sbb
into
mov
sbb
and
into
mov
int3
fisubl
fs
dec
inc
hlt
inc
xor
out
add
mov
hlt
nop
add
xchg
test
inc
lahf
clc
pushf
pop
mov
cmpsl
pop
jp
fbstp
lret
jo
negb
xor
call
test
aad
pushf
mov
arpl
adc
into
jp
rorl
mov
loope
outsb
inc
ret
or
fnsetpm(287
mov
fcmovnb
fmuls
mov
cmp
lcall
mov
stc
outsl
xlat
in
jb
and
dec
inc
inc
fsts
mov
push
add
mov
cs
outsl
or
dec
in
adc
jp
mov
xchg
xchg
ret
adcl
sbb
sbb
jl
stos
arpl
aaa
bound
pop
inc
jae
repz
cltd
cmp
xor
jg
insl
pop
insl
sub
arpl
jmp
clc
pop
mov
adc
jecxz
xchg
rol
add
mov
aaa
xor
fs
inc
fnstsw
adc
dec
mov
pop
jnp
xchg
popa
je
dec
dec
and
cli
test
xlat
mov
jnp
jb
cmp
fs
mov
loop
pop
dec
rcrb
adc
cmp
xchg
jmp
nop
mov
mov
repz
mov
into
repnz
inc
insb
adc
adc
dec
dec
rcr
jns
mov
xchg
lods
xor
xchg
mov
xchg
add
fstps
shrl
pusha
xor
or
xor
insl
aam
lock
push
clc
mov
cld
repz
jne
test
mov
jp
aaa
push
pop
push
call
mov
xchg
and
push
xor
or
sub
mov
mov
bnd
jnp
jae
sahf
pop
sub
push
sub
jp
xor
stos
aaa
vminss
ret
inc
pop
jle
push
sahf
add
sub
sbb
je
imul
mov
stc
pop
jno
arpl
bound
in
outsb
mov
pop
pop
mov
lods
and
clc
jns
xor
hlt
pop
aam
sub
in
xchg
cmp
jle
adc
loop
out
pop
inc
imulb
shrl
push
cltd
leave
lods
mov
cwtl
add
fldl
sbb
inc
jmp
sub
call
pop
enter
inc
decb
test
and
inc
and
lret
mov
mov
cmp
jae
fildl
dec
xor
jmp
mov
subl
mov
mov
repz
fidivrs
pop
jnp
jb
popa
sarl
xor
fsubrl
mov
cld
mov
cmp
loop
jno
jnp
sub
test
sub
fs
ljmp
mov
mov
push
es
in
xchg
dec
pop
jb
loopne
nop
add
push
int3
cs
jmp
cmp
jne
push
lods
push
js
testb
push
mov
leave
jmp
jae
lret
loopne
fwait
xchg
ja
in
shll
sbb
int3
mov
jo
int3
and
test
orb
pop
or
push
cmp
pop
mov
roll
test
sahf
jle
fcompl
xchg
leave
push
mov
xchg
pushf
dec
ficomps
imul
fisubl
adc
dec
dec
mov
rolb
pop
fcompl
and
mov
cmp
pop
or
add
cmc
movsl
es
mov
mov
lods
je
add
mov
out
adc
rorl
movsl
scas
arpl
add
pushf
notl
mov
in
inc
add
nop
popa
cmp
push
insb
pop
adc
imulb
push
sbb
hlt
inc
mov
out
test
js
mov
outsb
mov
jne
out
xor
or
xchg
push
mov
add
clc
xchg
xchg
and
inc
inc
jb
lret
mov
xor
in
mov
sub
lods
loop
push
je
in
pop
or
xchg
push
sbb
pop
iret
push
out
inc
jge
sub
mov
fnsave
adcl
adc
aas
rorb
clc
mov
ret
in
test
hlt
mov
scas
mov
out
arpl
cmp
or
xchg
lods
lds
pusha
jmp
or
mov
xchg
pop
xchg
scas
stos
bound
fistps
jg
imulb
shrl
dec
jbe
lods
add
orl
inc
scas
sub
push
fs
push
lods
arpl
xchg
fidivl
jne
add
xchg
xchg
dec
sbbb
dec
add
jg
into
cmp
push
gs
sbb
or
xlat
cmp
aas
leave
ss
jg,pt
xor
mov
imul
pop
cwtl
or
ror
xor
into
mov
push
xchg
cmc
push
ja
push
sbb
fiadds
jbe
dec
les
fsubr
fwait
ret
sarb
outsl
cmp
jb
jge
fldenv
mov
dec
lods
adc
sub
dec
cltd
mov
xor
fwait
aaa
insl
and
sbb
aam
push
in
pop
pusha
icebp
mov
and
inc
cwtl
add
adc
push
addb
and
jecxz
rorl
ret
or
and
imul
ljmp
stos
inc
xchg
gs
out
add
xchg
inc
mov
sbb
mov
jmp
add
xchg
sarb
into
outsl
incb
mov
sbb
aad
test
mov
aam
or
push
les
ja
mov
mov
addr16
and
dec
pop
sbb
fmuls
xor
pop
ja
iret
jmp
insl
outsl
sub
add
push
jp
lret
shll
nop
jmp
push
sbb
mov
and
push
xchg
testl
dec
shrl
push
and
sub
inc
cmp
in
mov
xchg
lret
mov
dec
push
in
and
insl
adc
bound
mov
psubb
das
xor
adcl
mov
std
mov
sbb
mov
out
push
sti
push
pop
sub
push
push
pop
add
stos
enter
push
into
cld
insl
ret
mov
mov
mov
es
pop
mov
test
jmp
jno
dec
leave
cmp
dec
jbe
push
xchg
cmp
fs
pop
clc
inc
mov
cmp
in
sub
xlat
lcall
push
sbb
push
dec
push
mov
add
in
sarl
ss
bound
or
out
lea
data16
or
aam
sbb
jnp
jb
pop
pop
mov
shlb
sub
test
shll
cmp
cmp
bound
sti
jp
mov
outsb
xchg
xor
xor
hlt
repz
rcrl
shll
out
xor
loope
pop
pop
add
and
leave
xchg
loopne
fists
shrb
dec
rcll
adc
clc
add
jne
out
or
jmp
or
jp
insl
aad
or
and
lret
fs
adc
pop
jle
adc
pusha
mov
adc
mov
or
xchg
roll
jb
mov
inc
xchg
lea
mov
mov
das
xchg
imul
lock
xchg
add
sub
adc
sbb
push
lds
lcall
push
inc
aad
stc
cmc
sbb
mov
cmp
push
insb
rcl
sub
repnz
sub
push
jne
push
aam
fidivl
mov
in
or
ror
mov
insb
mov
test
sub
add
fmull
or
outsl
mov
int
add
inc
and
push
jbe
mov
jb
lods
jge
push
fcompl
jge
sub
and
mov
or
insl
mov
cmp
ret
cltd
mov
repz
bound
mov
scas
xchg
xor
push
mov
insl
sbb
stos
push
jge
aad
pop
sub
insl
and
mov
fdivl
sub
je
sub
lret
test
arpl
push
out
out
add
dec
jg
cmp
ret
jge
aaa
add
stc
cmp
stos
bound
cli
out
mov
popf
out
push
int3
pop
cvtpi2ps
inc
movsl
inc
jb
cwtl
test
insb
out
jmp
bound
pop
in
fidivl
dec
mov
ja
inc
fwait
push
add
sub
stos
inc
pop
mov
and
aam
rcrb
xor
repz
jnp
sub
insb
inc
test
pop
cld
sbb
inc
scas
cmc
and
je
pop
sbb
stos
testb
jecxz
cmp
lcall
mov
lret
mov
es
and
cmpsb
or
inc
fdivl
pop
incl
daa
mov
out
aad
lock
xor
js
xor
repnz
mov
aam
clc
int
adc
lods
stos
adc
shll
lret
sbb
lcall
lods
add
xchg
jne
push
mov
fldenv
into
cmp
add
push
bound
pop
sub
lcall
mov
push
or
jecxz
ret
dec
dec
ret
inc
std
fs
in
js
std
lret
rorb
pop
xchg
cmc
xchg
pop
gs
push
and
push
pop
inc
inc
lea
sbb
into
push
inc
mov
inc
pop
pop
pop
push
mov
test
dec
in
aaa
out
iret
add
divl
lret
arpl
xor
jne
int
adcb
movsl
loopne
icebp
or
imul
hlt
fnstsw
add
jnp
sub
fwait
mov
adcb
jg
test
jo
xor
aam
dec
jp
or
inc
int
rorb
stc
mov
cld
stos
lcall
or
lods
arpl
sub
gs
pop
sub
mov
and
or
push
jmp
loop
dec
jno
jno
data16
ljmp
sub
ds
out
out
xor
test
enter
inc
sbb
mov
movsl
add
jnp
add
cmpsl
cld
mov
fcoml
jb
inc
add
data16
shll
jnp
xchg
ds
insb
nop
mov
inc
xchg
jecxz,pn
mov
jle
test
fs
std
in
rol
pop
dec
mov
mov
test
mov
insl
inc
into
arpl
jae
lret
mov
inc
mov
stc
stos
daa
cltd
xorb
rorb
mov
sti
in
and
lret
test
addr16
imul
loop
adc
subb
inc
aas
lret
shrl
mov
sahf
inc
mov
add
ret
cmc
hlt
cld
aaa
or
mov
arpl
or
xchg
stc
pop
test
repnz
cmpb
lret
mov
std
repz
inc
lret
adc
adc
pushl
mov
dec
test
scas
fwait
popf
inc
push
push
movb
aam
sbb
mov
insl
daa
scas
mov
cli
insb
adc
repz
mov
inc
lods
in
aaa
mov
ret
stc
arpl
in
sub
scas
dec
sub
or
jb
jecxz
imul
divb
les
sahf
lcall
insb
aad
pop
js
dec
jo
hlt
jl
je
cmp
pop
inc
sbb
inc
bnd
xchg
sbb
psrld
inc
adc
mov
pop
jae
add
pop
push
test
jbe
cmp
mov
insb
loopne
inc
xchg
sar
imul
sbb
addb
inc
and
in
outsl
lods
mov
sahf
sbb
lea
add
insl
movl
mov
cmp
stos
push
cld
cli
inc
cmpsl
fisttpl
push
dec
xchg
xchg
xchg
js
bound
push
or
pop
jp
inc
cld
ljmp
mov
xchg
outsb
daa
lret
mov
jle
fdivs
sub
push
mov
mov
sbb
dec
ja
mov
rol
cli
xchg
cs
xor
mov
test
stc
rcrl
inc
xchg
adc
sub
dec
pop
jp
decl
stos
and
rorl
dec
cmp
jo
pop
andl
outsb
lods
stos
lea
shll
mov
adc
ret
jae
mov
dec
jl
aam
xchg
cltd
sub
aas
out
mov
jle
loop
mov
jbe
push
add
cmpsl
mov
or
stc
mov
pop
mov
lods
adc
test
std
fidivl
ret
lds
mov
mov
cmp
int3
pop
and
xchg
loop
ret
test
or
stos
out
iret
push
rcrb
jns
cmp
hlt
and
sbb
adc
xchg
sbb
clc
hlt
push
xor
sbb
cmp
ja
jp
dec
subl
mov
add
enterw
or
ret
ret
mov
jge
dec
dec
mov
adc
jmp
mov
push
ret
stos
in
stos
test
fisubs
or
and
push
adc
dec
test
lds
in
fistpl
dec
repz
es
mov
cmp
aas
cwtl
out
and
pop
jns
jg
stos
es
inc
negb
aaa
ret
xor
inc
scas
lods
dec
jns
lods
add
inc
dec
sub
push
xor
movsl
test
lahf
pusha
adc
adc
popa
pop
or
xor
mov
mov
bnd
add
mov
add
mov
adc
jae
hlt
dec
les
adc
hlt
gs
or
in
dec
hlt
daa
cli
pop
mov
xchg
js
mov
dec
xor
xchg
mov
cltd
out
popf
int
dec
pop
jo
fsubrl
pop
in
pop
or
xchg
or
lahf
loope
dec
sub
push
cs
dec
cmp
shlb
xor
dec
cli
nop
xchg
cltd
inc
cmpsl
outsb
call
movsb
movb
mov
mov
and
and
mov
sub
sti
sahf
mov
xchg
inc
je
mov
xor
jmp
frstor
mov
sbb
push
xchg
and
mov
dec
sub
jmp
enter
inc
lret
xlat
dec
je
dec
and
xlat
push
arpl
inc
loopne
andl
mov
jnp
xor
pop
mov
pop
in
mov
das
ds
mov
jns
push
xor
adc
jp
lods
int3
call
mov
sub
push
lods
ficompl
dec
sbb
arpl
jb
cs
fcomi
jg
pop
bound
add
adc
xor
pop
out
mov
jbe
mov
aam
xchg
pop
arpl
push
cmpsl
xchg
xchg
pushf
fcom
dec
repz
fcomi
mov
arpl
jp
jecxz
or
into
or
lea
out
push
jp
mov
outsl
insb
xlat
mov
and
sub
inc
mov
in
cmpsb
sub
push
subl
add
sbb
and
pop
xchg
jne
js
pop
xlat
enter
mov
clc
mov
sbb
dec
movsl
cmp
and
out
pushl
pop
testl
das
rol
sbb
aas
or
pop
pusha
pop
fs
xor
xchg
mov
pop
cmp
add
mov
out
fisubrs
push
add
jg
adc
stos
mov
adc
mov
xchg
lcall
imul
push
into
adc
jle
into
adc
jb
cmpsb
push
movsl
movsb
cmp
mov
in
mov
loop
out
jo
pop
jle
notb
lret
test
mov
mov
or
daa
xchg
rorb
adcl
out
sbb
stos
imul
ret
movsb
xor
ds
int3
or
fld
inc
loopne
imull
mov
xlat
push
out
xchg
mov
push
xchg
sub
add
inc
xchg
push
cwtl
stos
mov
popa
cmp
sahf
es
addr16
xchg
dec
sub
ja
push
pop
rcll
cmp
shl
sbb
insl
mov
xlat
xor
nop
push
sub
pop
sti
cli
insl
push
imul
js
sbb
mov
jns
pop
shrl
div
adc
or
or
cs
out
std
xchg
shrb
inc
mov
add
shll
jnp
sub
jb
jg
sub
cmc
imul
pop
lods
and
mov
nop
leave
in
sub
sti
repnz
insl
pop
sub
mov
mov
out
out
jge
inc
in
test
push
xchg
adc
stc
and
imul
fwait
outsl
sarb
aad
stos
dec
sti
shlb
sarb
add
ja
or
hlt
cmp
mov
dec
cltd
cld
sahf
sti
push
jno
movsb
adcl
or
movsb
sub
mov
std
mov
jnp
sbb
push
les
xorb
mov
add
fstpt
leave
testl
shl
sub
enter
stos
add
pop
mov
pop
xor
dec
fidivl
sbb
ds
mov
jo
test
sub
icebp
addl
inc
fwait
xlat
or
xchg
lahf
jmp
sbb
sbb
in
dec
dec
xor
rclb
aam
inc
out
xchg
mov
cwtl
xchg
adc
jno
sarl
dec
xchg
loop
ficompl
mov
jp
pop
enter
gs
sub
add
mov
test
sbb
inc
out
xlat
push
aam
cmp
std
jl
int
sub
lahf
and
pushf
nop
pop
imul
sbb
or
adc
ret
mov
pop
mov
cmpsl
rcrl
sti
cwtl
and
pop
lcall
lds
jne
push
pop
jo
cltd
loop
test
xor
sbb
push
iret
scas
and
aaa
icebp
std
or
lahf
cltd
ret
sarl
in
sbb
stos
dec
stos
sub
idivb
mov
xchg
push
add
dec
or
icebp
push
fldt
cwtl
aam
dec
push
cli
fcoms
pop
mov
push
arpl
ss
push
sub
adc
stos
pop
mov
xor
jg
pop
jl
or
sub
lret
aam
cmpb
cmp
aaa
add
mov
cli
push
xlat
scas
sbb
sarl
dec
jnp
push
and
dec
mov
push
aad
mov
adc
mov
outsl
jbe
cmp
ror
lea
push
mov
arpl
sti
imulb
movsl
cli
iret
clc
and
cmp
rorb
xor
and
mov
adc
stc
mov
mov
aas
loop
loop
mov
lods
and
pop
mov
push
sbb
cmp
out
push
std
xor
cwtl
lea
lods
mov
mov
mov
stc
icebp
lock
imul
cwtl
sbb
lock
ds
lret
cld
push
mov
jne
or
jno
imul
sti
ljmp
and
call
mov
pop
add
aad
ja
jbe
in
adc
mov
stos
sub
gs
xor
jmp
icebp
jnp
in
mov
adc
mov
repz
ja
sbb
bound
into
or
rcrb
adc
adc
pop
add
fsub
pop
loope
movsl
mov
sub
or
pop
mov
out
and
popa
adc
sub
ret
cmp
sbb
xrelease
jle
fiadds
gs
call
scas
out
test
fcompl
hlt
add
hlt
mov
outsb
xor
ret
dec
push
outsb
push
sbb
xor
inc
aaa
jg
test
rorb
add
push
or
subl
arpl
mov
in
xchg
push
jb
pop
xor
and
cmp
cmp
add
popf
ret
push
std
inc
out
dec
icebp
push
cmp
les
and
or
mov
out
pop
adc
icebp
xor
scas
sbb
push
rcll
xchg
add
jbe
into
mov
aas
std
cli
arpl
push
data16
rclb
or
mov
xchg
ja
and
call
jle
pop
enter
fwait
xchg
and
repz
iret
lret
xor
sub
mov
sub
stc
rorb
and
movsl
pop
xchg
daa
mov
mov
ljmp
mov
push
push
dec
pop
push
or
daa
pop
ja
add
add
xor
es
pop
jp
sbbb
in
or
test
cmpsb
push
jle
in
scas
fs
pop
adc
and
xor
cmp
fcomps
add
icebp
jle
call
dec
movsl
xor
lret
ret
adc
nop
inc
out
mov
dec
popa
pop
imul
mov
xchg
jne
jb
fcomps
fsub
lds
out
push
push
sahf
lods
and
fildl
xor
adc
fs
fidivrs
iret
mov
xchg
and
cmp
cmp
xor
call
adc
add
pop
xor
loop
cli
pop
or
jns
mov
lcall
je
xor
imul
imul
jbe
shll
add
lock
shrl
movsl
mov
cmpsb
js
or
dec
push
and
lds
mov
cmpsl
and
out
cs
insl
loopne
pop
sbb
popf
and
mov
insb
lds
mov
aas
mov
jbe
hlt
hlt
mov
xchg
sbb
and
mov
stc
dec
sbbb
jge
popa
mov
push
cmp
sahf
sbb
xor
jmp
ja
sbb
mov
cs
aas
arpl
and
in
or
scas
popf
xchg
inc
mov
ss
mov
adc
out
dec
test
cltd
dec
je
into
and
dec
and
xor
out
adc
test
bound
and
lcall
addr16
cld
or
arpl
xor
fistl
jecxz
test
je
jae
mov
mov
or
cmp
int
jl
sbb
inc
and
and
dec
or
cmp
je
iret
adc
stos
sbb
stos
mov
mov
mov
repz
out
push
xlat
and
pop
push
pop
push
or
fmull
sbb
xchg
stc
cmp
test
in
bound
jp
xchg
roll
mov
stc
inc
add
fwait
dec
imul
xor
andb
sub
movsl
cmp
icebp
ds
in
xorl
ds
lods
or
mov
dec
cld
imul
out
push
sub
in
cmp
rorb
mov
aas
nop
pop
pop
test
test
ljmp
pop
hlt
cli
rclb
dec
subb
lea
mov
out
add
jne
pop
push
fmulp
dec
hlt
gs
add
sub
out
movsl
pushf
in
scas
jae
and
inc
or
clc
and
push
sarb
xor
in
sub
jae
movsl
xchg
cmp
jo
pop
repnz
das
push
adc
out
ret
les
inc
mov
ds
ss
jl
xchg
mov
xor
cmp
mov
mov
xchg
les
jg
pushf
cltd
cli
sti
push
mov
ljmp
sbb
jp
in
jl
dec
outsb
scas
mov
test
je
orl
push
sub
mov
mov
test
cmpsb
out
push
add
je
ja
cmpb
cmp
inc
jg
ret
pop
mov
test
cmp
mov
or
sar
ja
and
pop
inc
push
jge
inc
xchg
sub
adc
xchg
sbb
mov
jae
add
lods
push
jge
pop
sahf
cmp
stc
xorl
jecxz
pushf
push
in
in
mov
sub
jl
mov
loope
dec
fnstcw
movsl
push
jg
sub
lret
imul
fstps
pop
out
lock
adc
xor
mov
sub
lcall
xchg
aas
ret
insb
out
shll
xchg
mov
in
and
sbbl
stos
ss
jno
out
data16
xor
test
jb
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
jmp
jp
clc
mov
xor
loop
dec
push
or
mov
jmp
xor
int3
and
daa
mov
dec
or
pop
out
outsb
or
adc
cltd
std
jmp
jmp
inc
test
cli
jle
aas
nop
xchg
scas
aad
sbb
ret
cld
push
and
jl
lcall
xor
lods
adcb
pop
in
push
inc
lret
mov
rcrb
xor
push
sub
xchg
insl
xchg
cmp
lods
test
mov
jp
inc
in
ret
out
or
or
sbb
jp
jmp
in
pop
das
outsl
popa
add
sahf
imul
lret
jl
sbb
mov
rcl
loopne
stc
jo
or
push
adcl
rcl
and
push
orb
sub
pop
nop
cli
push
push
test
cltd
sub
mov
xor
pushf
fnstcw
mov
push
mov
sahf
loope
inc
popf
inc
aas
add
or
aam
sbb
shl
imul
ror
pop
push
sub
pop
jno
mov
loope
add
and
cmpsl
out
les
enter
daa
repz
or
mov
aam
lcall
mov
cmp
mov
add
fnstenv
jecxz
call
fmul
sbb
daa
mov
aas
jae
push
xchg
int3
scas
out
cmp
js
add
int
out
mov
or
pop
mov
jno
into
jo
lahf
les
sbb
negb
lock
lcall
cmp
out
add
pop
stos
push
shll
jl
pop
cmp
mov
jecxz
out
push
stc
pusha
mov
push
mov
or
jbe
stos
mov
dec
lret
pop
lret
adc
stos
les
pop
adc
or
sub
popa
xchg
call
repnz
iret
push
fisubs
loope
xchg
inc
nop
pop
mov
loopne
pop
or
pop
scas
mov
fisubrl
in
inc
cmc
cmpsl
outsl
dec
test
enter
add
jmp
xchg
or
pop
dec
push
insl
hlt
sti
jnp
push
stos
mov
sbb
cmp
cmp
jmp
jp
int
inc
sbb
jle
adc
shlb
xchg
or
push
sub
popa
xlat
adc
test
ss
and
and
movsb
inc
sbb
jns
es
adc
jg
sbb
fcoml
insb
cmpsb
xchg
inc
sub
sarl
add
push
pop
les
rcrl
fnsave
sub
mov
fdivrs
adc
lcall
adc
fs
mov
mov
cmpl
mov
rcrb
out
mov
lea
cmp
sub
fiadds
outsl
xchg
sub
add
cmp
and
int
out
xchg
fnsave
mov
dec
sub
mov
dec
lcall
inc
repz
fdivrp
cmp
or
popa
lret
js
pop
mov
ficoml
aad
hlt
mov
es
mov
pop
adc
jbe
out
cli
jbe
xchg
push
cmp
push
push
sub
push
inc
sub
sbb
js
or
sub
lods
lcall
in
push
cmp
jns
dec
xor
add
test
test
divl
popa
mov
pop
scas
mov
push
push
dec
mov
out
push
loope
loopne
and
inc
shlb
pop
daa
add
or
or
add
rcll
sub
pusha
or
rcrl
mov
xchg
ret
jns
test
test
inc
jo
add
js
push
push
jns
sbb
add
popa
arpl
faddl
cmpsb
iret
les
sbb
jno
cwtl
push
lods
cld
pop
movsb
xor
aas
and
or
lock
pop
aaa
adc
push
int3
lock
fistpl
adc
jnp
mov
pushf
pop
dec
sbb
fs
js
add
mov
dec
test
xor
imul
scas
gs
mov
pop
mov
adc
pop
test
pop
pop
cltd
xor
mov
cmp
add
test
xchg
mov
xor
cwtl
or
mov
es
stc
add
xchg
int3
mov
push
jnp
jp
mov
mov
mov
ffree
sti
sbb
jae
add
add
in
dec
push
roll
pop
dec
push
test
inc
push
rolb
addr16
and
inc
lahf
xor
push
mov
mov
bound
sbb
pause
or
stos
mov
push
out
cltd
gs
xchg
jno
aam
ja
outsl
fdivrs
push
push
mov
adc
mov
mov
hlt
xorl
adc
ret
out
sbb
adc
ffree
rol
ds
int3
xlat
scas
xchg
sbb
out
mov
lock
xchg
std
das
pushf
or
aam
idiv
xlat
xor
or
lods
dec
int3
out
jecxz
push
lcall
push
repz
shl
add
mov
inc
lea
sbb
daa
iret
adc
pop
push
jmp
outsl
test
adc
xor
pop
mov
pop
push
jecxz
adc
xchg
mov
pop
aaa
mov
fiadds
mov
addr16
jecxz
adc
push
dec
xorl
cmp
jne
or
cmp
cmp
vpshufhw
ret
outsb
subl
sub
leave
test
xchg
mov
push
pop
jle
xor
int
and
mov
daa
bound
lock
inc
mov
lods
jmp
sub
sbb
sbb
inc
cli
popl
pop
xor
fidivs
loopne
sub
stc
das
fbstp
cmp
push
jl
add
cmp
rcr
push
stos
ret
ds
pop
cmp
cli
out
mov
pop
xchg
and
cli
jbe
xchg
rcrl
mov
fsubrl
mov
and
gs
roll
mov
clc
add
repz
sbb
in
jecxz
add
shl
into
movsl
push
mov
imul
sbb
sub
pop
ret
jg
adc
lahf
jle
mov
pop
mov
jecxz
int
aas
push
mov
lcall
jne
in
lahf
jg
push
cltd
xor
cmpsl
mov
test
inc
fsubrs
cwtl
es
jne
mov
jae
mov
add
sti
out
sub
fs
or
cmp
aaa
stos
adc
ret
push
or
pop
jg
ret
je
in
test
mov
push
sub
add
aam
test
pop
cwtl
cwtl
stos
pop
xchg
divb
stos
mov
pop
js
jl
sub
sbb
cli
dec
or
lret
lret
sub
pop
dec
stos
es
and
cmpsl
cmp
imul
jne
mov
and
shlb
test
loopne
test
shll
nop
xchg
into
addb
je
in
les
repnz
xchg
outsb
movsb
fnstcw
mov
push
fildll
mov
cld
rcl
jg
xor
popa
lret
lea
stc
cmp
stc
dec
jl
pop
es
outsb
paddusb
popa
popa
scas
fdivl
sub
add
mov
imul
cmpsl
pop
adc
sbb
arpl
test
lods
neg
sub
mov
movsb
mov
xor
jno
push
add
out
inc
outsb
jno
mov
inc
in
cmp
divb
std
cld
rcl
push
mov
roll
loopne
jp
and
fldt
pop
xlat
rcrb
popf
and
adc
dec
push
loopne
out
xchg
mov
cmpsb
jl
pushf
push
xchg
jno
test
xor
xor
jnp
jp
and
leave
imul
dec
cmp
sbb
push
sub
mov
in
lahf
aam
arpl
jl
mov
adc
js
xor
push
jbe
mov
mov
in
movb
jne
fimull
addr16
pop
das
push
push
adc
pop
lret
xor
mov
cmp
andb
mov
jno
cmp
dec
cmp
dec
dec
fcoms
int3
int3
mov
loopne
lods
and
js
subb
adc
iret
arpl
mov
dec
lahf
test
ret
icebp
repnz
inc
push
insb
shll
and
jae
shll
jl
lcall
jnp
xor
out
imul
sub
pop
inc
mov
loopne
les
out
movsb
xor
pusha
xchg
mov
sbb
out
test
jle
clc
das
push
push
les
mov
pop
push
add
icebp
sub
push
xor
pop
fsub
ja
jecxz
jl,pt
mov
das
push
movsb
pusha
sbb
cmp
mov
in
cmp
xchg
mov
test
movsb
idiv
pextrw
test
dec
iret
ss
xor
mov
pushf
lcall
add
call
pop
jns
dec
repnz
push
or
shll
int3
xchg
addr16
punpcklbw
mov
push
mov
and
decb
jg
std
repz
or
clc
mov
jno
enter
data16
adc
mov
stos
pop
xchg
lahf
adc
push
pop
ja
mov
adc
mov
xor
nop
xchg
adc
mov
add
inc
push
lcall
mov
xor
cmp
int
pop
jbe
xchg
inc
decb
xchg
in
xor
stos
clc
xor
mov
dec
inc
lock
test
test
and
rorb
jle
incl
stos
fcmovu
and
or
ljmp
lds
test
push
cmpsl
mov
mov
jl
jmp
push
hlt
push
and
mov
es
imul
cmp
ficoml
in
stos
stc
dec
mov
fwait
ss
xor
pop
outsl
cmp
jnp
inc
pop
pop
pop
mov
sub
mov
stc
ds
add
insl
push
cmp
pushl
sbb
dec
push
mov
cmp
inc
js
popf
or
clc
or
imul
inc
cmc
jnp
dec
cmc
call
into
aaa
in
insl
jno
mov
imul
idivb
and
push
lahf
pop
xor
mov
inc
xchg
shrl
cld
mov
sub
jno
lea
mov
in
aas
sarb
pop
pop
pop
movsl
sub
and
mov
or
stos
dec
lcall
mov
orb
dec
push
pushf
mov
adc
jne
ja
shl
lods
xchg
sbb
fnstsw
push
lods
mov
lahf
test
and
lret
sub
push
cltd
mov
les
mov
andl
stc
scas
dec
fistpll
xor
hlt
testl
and
dec
imul
jno
jne
sar
mov
push
push
pop
mov
lds
test
stos
cmpsb
das
push
push
xor
pop
sub
stos
mov
pusha
hlt
out
inc
inc
out
rclb
ficompl
jmp
inc
push
pop
and
pop
imul
in
loop
xor
int
mov
mov
das
incl
dec
jmp
add
mov
mov
loop
cs
inc
sti
std
xor
push
adc
pop
cmp
mov
outsl
adc
and
fbld
shlb
fistpl
stos
repnz
push
ror
add
jbe
les
add
sub
out
jnp
adc
aam
xor
in
das
xlat
mov
loope
repnz
cli
pushf
pop
adc
dec
mov
push
add
int3
jo,pn
imul
orl
sub
pop
jmp
inc
stos
test
int3
sbb
adc
repz
dec
shlb
icebp
mov
push
and
aas
leave
lods
lret
sahf
and
mov
mov
cltd
dec
sub
and
cmpsl
les
xor
push
test
add
loope
gs
xor
into
scas
lcall
xchg
into
nop
xchg
fdiv
mov
jnp
adc
popf
and
mov
cmp
mov
or
dec
dec
aas
outsb
inc
xchg
lcall
pop
xchg
mov
inc
sub
sbb
jle
out
inc
mov
int3
mov
stc
iret
push
or
bound
popa
jbe
test
xor
xor
rclb
rcr
ret
cmp
push
mov
cmp
fnsave
mov
cmp
or
inc
mov
inc
inc
push
mov
pop
or
test
and
push
mov
fwait
shll
pop
dec
int
or
fwait
stos
lods
jge
out
xchg
inc
and
movsb
arpl
mov
lods
cs
jb
add
pop
and
stc
lahf
hlt
cmp
xchg
daa
popf
fcoml
ds
push
rclb
fs
sbb
mov
pusha
jmp
mov
cmc
enter
push
lret
cmp
popf
push
stc
mov
fnstenv
clc
gs
mov
jl
ds
test
mov
nop
jns
xor
cltd
lcall
popf
or
stos
movsl
dec
por
lds
pushf
jg
sbb
cmp
inc
pushf
pop
out
shll
dec
clc
iret
add
xor
sbb
pop
push
mov
int
inc
xor
dec
pop
cwtl
dec
ljmp
test
or
jp
movzwl
sti
std
out
loopne
inc
push
pop
inc
cmp
pop
mov
cmp
lcall
mov
stos
dec
and
insb
roll
sub
pop
fmull
lods
sbb
push
pop
push
cmpsb
notl
cld
clc
adc
dec
hlt
mov
pop
ljmp
mov
lock
dec
or
mov
loop
inc
pop
mov
or
inc
pop
inc
add
call
mov
cmp
out
or
jbe
push
call
rcll
add
inc
stos
lahf
mov
cmpsb
enter
push
cs
aas
xor
sub
mov
push
add
and
sbb
dec
add
pusha
cli
jae
cmp
cmp
divb
test
push
notb
pushw
nop
jle
mov
pop
mov
inc
mov
in
movl
xchg
xor
cld
sbb
lock
dec
or
jno
sbb
movsb
scas
in
je
push
jb
insl
mov
xor
mov
push
sarb
mov
or
cli
mov
sbbl
cli
push
les
ffree
or
cmp
push
jae
pop
mov
inc
aaa
xor
ljmp
cld
mov
add
pop
rorb
jl
sbb
cmp
setb
lret
fs
cli
gs
xchg
test
jb
jecxz
xchg
sub
lds
jmp
jae
adc
pop
movsl
push
mov
enter
adc
xchg
sbb
and
pop
jmp
pop
adc
lock
jl
mov
jle
jno
pop
fstps
idivl
sub
mov
in
loop
aaa
pop
xor
sbb
xor
xchg
mov
and
jne
pop
xchg
loope
fstpt
add
shll
cmp
push
inc
sub
sbbb
add
imul
imul
test
in
mov
in
xorb
or
test
ss
rep
mov
in
jl
rclb
sar
pop
mov
aas
sbb
mov
push
mov
mov
sahf
push
mov
adc
fcomps
scas
xlat
fimull
dec
lods
jge
and
jmp
and
rolb
push
into
cltd
sbbl
dec
cmp
mov
test
add
dec
or
pop
adc
xchg
push
ficompl
inc
xchg
sbb
or
call
add
or
jp
mov
push
in
push
xor
add
rcll
inc
ret
mov
popa
or
push
push
inc
adcb
std
adc
sub
lret
scas
mov
dec
cmp
adc
add
ss
je
sub
mov
mov
cmp
and
ret
outsb
xchg
and
jne
mov
cltd
cmp
daa
call
dec
pop
aaa
in
or
int3
mov
imul
xchg
inc
lcall
loop
sub
jne
ja
sbb
sub
fnstsw
pop
xor
mov
fistl
cs
hlt
pop
dec
cmp
push
adc
or
test
lahf
pop
leave
inc
pop
or
lret
jnp
and
movsb
dec
prefetcht0
mov
mov
in
jnp
ds
fs
push
addl
cmpsb
mov
lahf
mov
xor
imul
call
inc
jg
inc
mov
insb
iret
push
ficoml
inc
mov
mov
pop
mov
cmp
leave
out
mov
jle
repnz
lret
dec
movsl
insb
mov
popf
sbb
xor
les
dec
jle
les
mov
fwait
adc
lahf
cmp
stc
fwait
mov
addb
cwtl
pop
jmp
in
call
mov
aaa
lcall
movl
and
divb
in
jae
push
or
test
lea
xlat
bnd
rclb
adc
enter
in
inc
stc
gs
shrb
loop
push
mov
or
movsl
out
mov
jbe
add
add
sub
sub
pop
add
iret
lods
rorb
test
std
push
pop
std
cld
stos
or
add
into
cmp
xor
and
movl
inc
lods
mov
pushf
pop
movsl
fnsave
aas
push
sbb
jns
test
jmp
pop
mov
inc
mov
test
dec
cmc
mov
into
pop
xor
push
inc
cwtl
xchg
lret
popf
jne
cld
jbe
call
xor
jb
loop
xor
jo
push
imul
imul
and
sub
dec
aas
fwait
mov
fmull
int
mov
or
ror
mov
int3
cmp
cmp
aam
loop
mov
cmpb
xor
mov
or
mov
inc
aam
scas
add
rclb
mov
jge
jbe
mov
rorl
repz
and
ror
mov
xor
adc
mov
pusha
push
ja
shlb
les
stc
pop
xor
pushf
lods
or
jne
sarb
aas
xchg
out
arpl
in
push
cmp
leave
aam
neg
mov
jmp
jbe
incl
fidivl
push
push
push
dec
sub
inc
sbb
sbb
nop
stos
jns
shll
out
sbb
and
repz
push
xlat
sub
outsl
and
mov
cs
leave
sti
and
or
xor
jg
mov
push
icebp
sbb
cmc
xor
mov
test
jmp
cld
xchg
fsubrp
cmp
fwait
mov
jae
stos
xchg
std
pop
jl
gs
lock
fs
fidivrs
dec
imul
xor
push
hlt
push
jne
std
hlt
jns
cmp
cmp
in
imul
imul
or
pop
add
xor
dec
push
fwait
stos
jmp
jns
cmp
sub
push
pusha
lcall
jg
add
mov
insl
stc
fstpl
adc
cmpsb
cmp
js
add
lods
stos
insb
dec
mov
mov
mov
or
push
or
dec
dec
call
outsl
movsl
je
cltd
bound
cwtl
int3
aas
icebp
insb
xchg
loope
stc
andb
jnp
add
and
shl
push
dec
test
and
fsubp
xchg
int3
cmpsl
gs
jbe
enter
xchg
aam
xor
ss
cmp
mov
scas
ret
push
sarl
bound
xchg
and
shrb
ds
mov
dec
inc
or
cwtl
mov
frstor
stos
push
jmp
call
cmp
imul
add
sbb
fadds
mov
sbb
sahf
sbb
paddd
fdivrp
mov
lods
pushf
cmc
jg
cmpsb
push
sub
jmp
mov
and
push
loope
sbb
js
fistl
mov
and
shll
call
jmp
jle
or
out
xorb
xor
inc
mov
sbb
sub
icebp
cmp
adc
dec
pop
push
mov
loopne
mov
fadd
scas
lods
sbb
inc
xor
cltd
dec
mov
outsl
mov
jne
cmp
jp
std
xchg
cmc
js
adc
cmp
push
jnp
sbb
pop
jecxz
mov
and
and
or
cmpsl
iret
mov
cli
push
cld
or
rclb
ja
test
inc
out
pop
pop
shlb
jmp
and
sbbl
sub
sti
setnp
add
sub
and
sub
jbe
push
dec
and
jnp
cwtl
shrl
mov
in
lds
mov
loop
and
adc
mov
hlt
sti
std
push
movsb
loop
arpl
mov
cmp
push
orb
jmp
adcl
adc
mov
addr16
shl
sbb
and
loope
daa
shrl
lods
rolb
mov
scas
repnz
xchg
es
xchg
ja
mov
cmp
bound
mov
xorps
arpl
mov
push
mov
stos
mov
insl
adc
sahf
shll
cmpsl
enter
addr16
xchg
add
das
jnp
dec
mov
and
stc
pop
xchg
push
fcomps
lock
pop
ret
mov
aaa
and
js
rcll
dec
mov
and
push
leave
loop
xor
hlt
push
fs
rcl
mov
dec
mov
sub
clc
arpl
adc
mov
mov
ret
test
push
loope
pop
adc
loopne
mov
mov
movl
sbb
mov
and
subl
xlat
or
lret
icebp
xlat
and
es
idivl
adc
rolb
imul
ror
int
or
mov
repz
push
pop
xor
adc
push
clc
fisubrl
inc
imul
dec
inc
or
xchg
repz
fs
bound
test
xchg
in
les
fnstcw
sbb
mov
ret
pop
cmp
ds
sbb
iret
xchg
sub
cld
jp
mov
loopne
outsb
fs
jp
or
cmpb
lret
xchg
sub
or
pop
cltd
pop
mov
fs
inc
sti
xor
mov
lret
jp
stos
dec
test
jle
push
rcrb
aaa
mov
mov
mov
dec
jne
jle
rcll
mov
add
fisttpl
or
dec
push
test
movsl
push
pop
inc
sti
pop
add
mov
mov
imul
pop
or
mov
sti
arpl
es
fsubl
call
fldcw
xorb
insl
aam
adc
popf
mov
js
mov
mov
cs
xchg
nop
into
push
mov
dec
iret
xchg
or
lgs
jo
push
cs
ret
movsb
and
hlt
cltd
jmp
inc
fbstp
mov
pop
mov
call
test
jb
adc
fiaddl
out
mov
mov
and
cmp
xchg
movsb
mov
sub
pop
pop
dec
or
in
aaa
cli
lods
fs
xchg
cmp
jge
jl
in
lret
cs
xlat
hlt
sub
sub
adc
jmp
xchg
pop
add
les
mov
mov
out
xor
xor
stc
lret
loope
adc
test
cmpsl
or
or
and
adc
into
jmp
call
ret
dec
aam
int
subl
shrb
sbb
rcrb
push
jno
push
cmp
std
hlt
movsb
aam
inc
sbb
frstor
dec
pushf
das
pop
or
fistps
pop
cs
jle
dec
cmp
pop
pop
jb
ds
cld
mov
lret
sbb
daa
mov
xor
xchg
fimull
push
sbb
inc
push
fildll
lret
mov
jo
jbe
dec
lret
mov
or
inc
jne
and
sbb
stc
scas
inc
and
push
add
addl
mov
lret
dec
inc
xor
xor
dec
push
aam
push
mov
push
insb
sbb
sti
sub
dec
cltd
pop
loopne
push
testb
jg
xor
cmp
add
fwait
jno
xchg
add
sti
push
insl
mov
add
mov
mov
mov
call
arpl
sti
xchg
lret
xlat
jae
lock
adc
aad
stc
iret
insb
sbb
add
mov
mov
loop
mov
fsubrs
in
stos
int
mov
xchg
addr16
movsl
xchg
push
mov
cmp
fiadds
ret
cmpsl
fsubs
mov
add
mov
dec
sub
jg
out
lea
out
lcall
or
mov
out
or
rcl
outsb
jle
out
xor
mov
int
jae
outsb
lods
and
pop
pop
test
push
daa
shll
repnz
pop
cmpl
pop
xchg
sbb
sub
inc
add
xor
and
aad
mov
cltd
cmp
jmp
xor
rclb
push
and
lods
rorb
cmp
daa
xlat
dec
ja
jge
loop
dec
negb
outsl
daa
pop
jge
js
add
sub
dec
push
inc
xlat
xor
inc
inc
jge
xchg
xchg
in
cmp
arpl
push
lods
fisubl
and
fisttpll
mov
dec
ds
hlt
je
lahf
in
sub
fstpt
xor
call
mov
xchg
jg
pop
mov
pop
inc
test
ret
ss
mov
push
shrb
ficompl
jb
mov
movsb
mov
sub
jb
es
test
cmp
std
xchg
mov
xchg
push
jbe
jle
std
shlb
mulb
mov
cmp
add
adcl
imul
mov
movlps
xchg
notl
xchg
sbb
hlt
aas
bound
repz
xchg
in
mov
cltd
fisubrs
add
std
xor
sub
cmp
shlb
push
repnz
rol
pop
outsl
or
push
mov
test
mov
inc
adc
pop
and
sub
dec
addr16
push
lods
inc
cltd
pop
mov
repz
pop
cmpsb
je
stos
dec
inc
push
xor
movsl
ret
jne
sub
and
push
or
mull
ja
jno
iret
pop
mov
lock
push
jge
jg
jp
int
push
mov
aam
pcmpgtb
lea
push
inc
aad
adc
test
out
popf
pop
stos
aaa
push
sub
outsl
adc
lret
popf
pushf
inc
test
sbb
into
inc
inc
jo
daa
jl
shrb
cmp
in
shll
stos
dec
and
dec
mov
fdivrs
add
add
mov
pop
ja
mov
mov
mov
dec
cmpsl
inc
lret
out
and
test
cli
pop
lret
mov
jae
ret
ja
sbb
jno
insl
and
sub
fidivrs
or
pop
inc
and
cld
insl
out
nop
push
test
jecxz
leave
cmp
or
mov
and
jge
daa
je
dec
out
arpl
xlat
fs
lods
cs
sub
or
mov
test
inc
rcrl
cmp
sarb
dec
cmpsl
sub
sahf
ret
in
mov
and
push
jg
add
ss
outsl
cmp
sub
pop
into
bound
fwait
lahf
pop
mov
les
ficomps
cltd
lret
ljmp
and
lahf
mov
shl
fldenv
out
ja
rolb
das
sub
aam
and
cmp
je
mov
adc
xor
addr16
in
xchg
jmp
jo
xchg
or
aad
xor
lcall
lahf
mov
dec
cmp
cmp
pop
add
mov
std
lcall
xor
btr
xchg
fstps
xchg
lock
inc
add
lock
mov
addr16
arpl
jne
repnz
sbb
aas
adc
push
cwtl
jle,pn
aam
mov
xchg
jnp
xchg
cld
cmp
add
pop
adc
aad
sub
sub
mov
call
xchg
les
fwait
out
adc
icebp
sbb
xor
int3
pop
testl
or
xchg
pop
sbb
cmp
pop
xchg
in
mov
xchg
jecxz
call
rorl
inc
jp
fists
lahf
push
ja
out
mov
jle
xchg
cmp
test
cwtl
mov
push
fwait
mov
inc
mov
mov
push
imul
sbb
and
adc
loopne
lock
pop
and
cmp
sub
sbb
mov
pusha
mov
mov
sub
insb
mov
cltd
mov
inc
mov
cld
pop
xor
jns
out
insb
scas
rorl
jge
gs
icebp
movsl
ret
outsl
ss
lcall
ds
shrl
popf
scas
xchg
mov
and
mov
daa
insb
pushf
dec
outsb
into
mov
dec
inc
and
jno
push
sti
lods
mov
daa
in
decl
xchg
dec
xchg
jne
pop
out
push
inc
es
ret
test
mov
sub
sahf
push
leave
adc
leave
test
sbb
sti
mov
test
sbb
cpuid
test
aaa
sbb
add
adc
jle
jae
shlb
scas
cmp
add
mov
pop
xchg
test
sahf
xchg
and
and
enter
pop
jl
movsb
or
lock
dec
dec
jmp
fisttpll
fwait
mov
dec
leave
rorl
or
mov
mov
cs
cld
xchg
mov
sub
pop
in
mov
dec
lret
xchg
pushf
sub
call
pop
mov
lret
push
nop
mov
inc
lods
test
int
xor
and
loopne
fstpl
rcr
lret
mov
sarl
cmp
stos
or
jae
addr16
dec
stos
xor
data16
sbb
xlat
inc
dec
xchg
out
repnz
in
push
add
hlt
cmp
mov
cli
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
