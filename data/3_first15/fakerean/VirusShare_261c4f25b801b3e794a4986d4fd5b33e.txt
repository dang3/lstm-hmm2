xor
mov
in
ret
ja
ds
enter
imul
ja
sbb
ja
dec
jmp
xor
ja
cmp
ja
sti
in
push
imul
xchg
and
in
test
jnp
ja
sub
ja
and
ja
add
add
pop
jbe
add
add
cmp
pop
cmp
sarl
mov
cmp
sbb
out
cmp
das
cmp
pop
cmp
aaa
cmp
loop
ja
mov
ja
mov
cmp
push
cmp
or
cmp
scas
cmp
into
cmp
add
add
shll
add
add
daa
inc
das
cltd
lret
or
xor
int
iret
inc
cltd
std
and
jl
stos
sbb
leave
inc
jmp
xchg
or
or
iret
pusha
call
sahf
ret
inc
sbb
jp
lods
ds
jbe
add
lock
cmp
repnz
nop
mov
xchg
in
test
mov
xor
icebp
pop
mov
add
mov
icebp
hlt
xlat
mov
mov
xchg
lock
pop
adc
jbe
inc
inc
push
int
outsb
add
jmp
test
scas
inc
js
sbb
mov
loopne
out
repnz
jg
repnz
fcomp
jbe
adc
push
jp
sub
adc
std
int3
cli
cmp
inc
and
fmulp
push
cmp
pop
push
jg
sbb
pop
in
lods
addr16
loop
stos
test
add
outsl
xchg
out
xchg
or
jb
sahf
pushf
adc
popa
sub
sarb
mov
clc
adc
sub
neg
mov
insl
jg
test
mov
std
pop
sub
lods
and
das
pop
ds
pop
les
stc
rclb
sub
sub
pop
fwait
push
hlt
xor
out
lods
adc
dec
das
inc
sub
stos
cltd
xchg
inc
ljmp
xor
iret
in
mov
frstpm(287
fnstsw
out
xor
sbb
sahf
inc
or
fmuls
lods
xchg
ljmp
imull
icebp
mov
push
or
popa
test
sub
and
gs
lcall
dec
sbbl
jl
and
and
outsb
sub
cltd
arpl
int3
pop
shll
imul
popa
pop
loopne
fwait
imul
loope
addl
cmp
flds
sbb
push
xor
push
sub
mov
mov
inc
push
movsbl
push
add
push
add
mov
call
sub
push
dec
mov
add
sub
xor
lea
mov
sub
xor
and
mov
mov
mov
add
add
movsbl
sub
mov
movzbl
inc
xor
add
mov
inc
sub
sub
mov
mov
mov
test
je
add
dec
sub
mov
sub
lea
add
add
or
add
mov
mov
add
add
add
sub
mov
repnz
movzwl
sub
add
inc
jmp
mov
mov
inc
movsbl
sub
add
mov
sub
add
xor
add
mov
sub
xor
inc
add
mov
pop
sub
sub
pop
jmp
push
sub
xor
add
mov
add
sub
push
sub
push
sub
lea
push
add
dec
push
sub
call
mov
jmp
sub
mov
mov
add
add
mov
sub
sub
mov
mov
mov
sub
xor
add
sub
push
sub
mov
push
add
mov
dec
and
inc
add
mov
pop
inc
pop
sub
or
cmp
jne
sub
push
mov
mov
sub
dec
push
sub
sub
push
mov
xor
sub
sub
xor
add
xor
sub
mov
push
sub
xor
add
mov
inc
sub
mov
movzbl
sub
add
or
sub
add
mov
add
dec
movswl
movzbl
add
add
mov
and
add
sub
mov
inc
lea
mov
sub
and
sub
mov
mov
cmp
jb
movswl
xor
dec
add
mov
mov
mov
inc
add
inc
dec
sub
mov
add
lea
dec
dec
movswl
mov
inc
sub
cmp
jb
xor
dec
add
movsbl
mov
add
or
inc
mov
mov
xor
add
add
xor
sub
sub
pop
lea
test
jbe
or
sub
add
add
mov
add
inc
push
sub
add
incl
mov
pop
xor
movsbl
imul
mov
push
mov
and
and
sub
movzwl
mov
sub
lea
movzbl
add
or
add
and
mov
and
mov
mov
add
mov
xor
add
mov
sub
pop
dec
jmp
sub
dec
inc
add
mov
mov
nop
jne
dec
mov
dec
sub
mov
mov
sub
add
imul
add
mov
mov
dec
add
sub
add
mov
sub
sub
mov
sub
test
jbe
sub
mov
dec
lea
add
sub
add
mov
push
dec
dec
xor
movzwl
mov
pop
lea
xor
add
movzbl
mov
inc
sub
movzbl
mov
add
add
sub
and
or
add
mov
mov
movzbl
inc
mov
and
sub
mov
mov
mov
movzbl
imul
add
add
dec
sub
and
mov
movzbl
add
xor
add
imul
inc
mov
mov
and
add
dec
sub
mov
dec
jne
imul
mov
sub
movzbl
sub
lea
pop
imul
sub
pop
sub
mov
pop
mov
sub
imul
inc
add
mov
add
ret
push
push
inc
dec
push
push
inc
add
push
mov
push
or
mov
sub
add
sub
mov
sub
or
sub
mov
add
push
mov
xor
movswl
push
add
dec
push
sub
mov
push
movzbl
sub
add
mov
mov
call
sub
add
add
sub
add
mov
inc
imul
pop
jmp
push
xor
push
mov
mov
lea
inc
je
sub
dec
sub
mov
add
add
mov
mov
mov
dec
inc
lea
sub
add
cmp
jne
mov
add
xor
sub
add
dec
sub
mov
mov
lea
sub
jmp
dec
push
or
mov
mov
mov
test
je
imul
add
dec
add
mov
dec
dec
sub
add
repnz
mov
pop
add
jmp
inc
pop
xor
sub
lea
sub
add
dec
movb
xor
add
inc
mov
dec
jne
sub
pop
add
pop
ret
mov
inc
dec
and
sub
sub
mov
mov
inc
mov
add
add
mov
mov
call
mov
dec
add
add
mov
mov
sub
add
movsbl
sub
lea
add
sub
add
add
mov
inc
call
movzbl
push
add
call
mov
pop
lea
add
call
add
add
mov
push
lea
sub
sub
add
add
mov
xor
dec
sub
mov
mov
sub
call
add
add
mov
pop
mov
add
sub
pop
sub
inc
pop
add
mov
pop
dec
sub
xor
pop
mov
mov
pop
or
mov
dec
sub
pushl
add
lea
push
add
jmp
add
push
or
push
mov
push
and
sub
push
sub
mov
push
mov
mov
dec
push
add
jmp
push
dec
sub
lea
movzbl
sub
sub
mov
mov
add
sub
sub
add
mov
add
add
imul
sub
xor
movzwl
xor
pop
pop
jmp
push
call
mov
lea
sub
sub
sub
sub
mov
add
dec
push
sub
add
add
mov
xor
sub
dec
mov
call
mov
add
dec
sub
sub
mov
pop
sub
add
lea
inc
mov
mov
sub
sub
add
sub
lea
sub
inc
sub
mov
mov
xor
dec
dec
mov
mov
test
je
sub
int3
sub
sub
sub
mov
sub
inc
add
mov
mov
dec
add
movzbl
add
mov
inc
sub
inc
mov
mov
add
inc
sub
sub
lea
inc
sub
sub
add
mov
sub
sub
add
add
mov
inc
inc
add
mov
lea
add
add
or
mov
mov
sub
inc
sub
mov
lea
add
sub
add
mov
mov
add
dec
movzwl
call
mov
mov
inc
dec
add
add
mov
sub
add
add
mov
mov
add
dec
dec
mov
mov
xor
add
pop
add
ret
add
jmp
mov
xchg
xor
mov
cmp
out
dec
mov
mov
sbb
xchg
inc
and
sub
lret
loopne
push
xor
xchg
hlt
inc
cmp
insb
out
jb
xchg
push
push
aas
dec
push
insb
movb
popa
int
or
mov
ss
es
sbb
xor
and
push
mov
push
dec
cs
fadds
mov
aam
insb
inc
sahf
xchg
stos
dec
imul
push
jle
and
in
xor
scas
inc
lahf
xor
test
outsl
xlat
shll
pop
cmc
int
outsb
leave
push
fucom
pop
std
pop
adc
or
dec
stos
and
push
ret
imul
mov
mull
dec
cmp
rol
push
dec
mov
mov
jg
fidivrs
mov
popf
lods
mov
es
cld
mov
popf
jne
pop
adcb
sbb
lds
xor
mov
fsubs
clc
mov
fldenv
hlt
int
clc
mov
mov
les
pop
xchg
inc
adc
cmp
inc
add
sbb
dec
sub
cli
xchg
push
or
inc
aas
cmp
cmpsl
inc
mov
sbb
push
dec
xor
xor
sahf
and
in
dec
sbb
js
pop
jnp
jmp
cs
xchg
andl
inc
jo
popf
cmp
or
int3
pushf
jae
xor
test
int
or
mulps
cmp
xor
pop
stc
mov
lea
aaa
adc
inc
push
bound
lret
stos
movl
cmp
xor
mov
xchg
jl
dec
mov
cmp
xchg
in
repz
add
and
mov
lea
ja
ds
je
mov
imul
std
inc
lcall
fistps
sub
out
aad
adc
insl
cwtl
rorl
mov
iret
dec
mov
xchg
push
or
mov
int
cmp
shr
and
push
je
mov
cld
cli
mov
mov
lcall
shl
jbe
xor
mov
loop
xor
and
inc
sbb
fdivr
je
dec
add
jbe
pop
jmp
xor
xor
cld
adcb
push
or
inc
mov
mov
dec
cmp
cmc
loop
push
loope
call
mov
xchg
jb
popf
test
xchg
mov
das
adcl
rorl
out
loop
xor
test
mov
scas
pop
push
sbb
push
stos
data16
xor
mov
and
mov
shll
out
pop
and
in
icebp
es
loope
scas
pushf
popa
inc
adc
pop
xor
jl
daa
fldt
xlat
xchg
bound
or
dec
or
and
mov
or
call
pop
jle
faddl
xorl
push
mov
add
xor
enter
pusha
in
adc
sub
cmp
fldcw
fistps
rorb
in
add
enter
movsl
push
xorb
push
das
aas
adc
rcrb
jp
aam
jnp
xor
pushf
or
ret
dec
inc
idivl
jp
fs
mov
sbb
adc
push
pop
and
cmp
sbb
loopne
pop
dec
mull
sub
rcrl
stos
in
push
pop
mov
mov
outsl
fcompl
add
jp
or
xchg
add
sub
dec
aam
add
push
nop
mov
inc
loope
loope
sbb
pop
jmp
inc
gs
inc
inc
pop
mov
mov
pop
pushf
push
lahf
inc
rolb
aaa
pop
lret
cmp
sub
repnz
sbb
out
gs
sarl
fistpl
scas
mov
xchg
daa
hlt
and
jbe
mov
rcll
mov
sub
mov
cmc
stos
test
pop
outsb
fwait
xor
inc
mov
adc
xor
fistps
out
jle
testb
pop
call
inc
jno
cmp
adc
lret
stc
fbstp
push
push
sbb
mov
cmpsb
stos
je
mov
test
push
dec
or
rcll
adc
dec
rorl
out
add
cmp
enter
inc
iret
dec
inc
jp
mov
jl
dec
sahf
pop
xchg
fsubr
and
jmp
popf
push
jo
aad
mov
jg
xor
repz
xchg
out
icebp
ret
jge
repz
in
mov
loop
adc
push
inc
or
rcrl
sub
push
sbb
pusha
inc
adc
in
movsl
pushf
aam
push
adc
cmpsl
sbb
dec
pop
and
sbb
dec
js
movsl
sbb
xchg
popf
aad
movsb
fsub
repnz
cmpsb
pop
jno
insl
push
int
ffreep
adc
dec
ret
and
and
cmc
subl
sahf
outsl
adc
jne
fcoml
out
push
jl
jae
xor
lret
hlt
leave
xor
inc
mov
mov
push
scas
js
lds
pop
jno
pop
cmpl
mov
jp
outsb
leave
scas
test
pop
sti
or
mov
aad
fisubrl
xchg
sbb
mov
rcll
sbb
fldt
or
cmp
xchg
cmc
sub
cmp
mov
shl
jb
cld
push
jmp
int
sarl
fsts
sbb
aad
mov
xchg
out
mov
jbe
add
cmp
pop
mov
pop
push
out
dec
adc
xor
cli
inc
push
pop
popa
xlat
out
movsl
leave
clc
mov
sub
push
inc
jo
stos
lahf
ds
stos
jnp
and
das
in
pop
test
xor
inc
mov
pop
add
inc
mov
test
or
popl
ss
xchg
sub
das
xlat
sub
pusha
mov
jo
nop
inc
arpl
ss
out
inc
inc
movsl
cmp
xchg
xchg
std
and
out
or
cmc
pop
xchg
iret
daa
imul
idivb
push
int3
in
sti
dec
scas
loope
inc
cmp
adc
fxch
mov
dec
out
ds
or
subl
mov
push
lcall
insl
cs
mov
loop
dec
jo
mov
sbb
arpl
sub
mov
jne
add
lods
or
jmp
pop
call
pop
pop
jecxz
int
std
sbb
mov
fwait
push
cs
std
stos
jno
xor
das
xchg
xor
iret
popa
rorl
pusha
in
and
pushf
fistpl
cmp
cmp
add
clc
adc
add
inc
jge
jmp
imul
or
rclb
and
jno
push
pop
mov
inc
xlat
sbb
mov
and
mov
out
and
out
into
sbb
aam
mov
jp
icebp
inc
cli
iret
push
pushf
aaa
mov
sbb
int
sbb
subb
cmp
out
push
icebp
test
mov
stc
adc
ror
orl
sub
dec
xor
mov
stc
arpl
sub
or
addr16
push
adc
mov
pop
xchg
js
scas
pop
xor
shll
sub
out
frstor
add
mov
inc
pop
xor
inc
xchg
leave
cmp
out
int3
mov
rolb
mov
rcrl
orl
shl
sbb
jle
icebp
out
sub
loopne
push
xor
fcoml
dec
and
cmp
mov
mov
insb
xor
lock
mov
sub
xor
jb
xchg
inc
movsl
dec
ljmp
push
sub
stc
leave
inc
test
xor
jae
iret
cmpsb
stos
pushl
jnp
mov
add
pop
dec
sbb
push
dec
fadd
lret
scas
jae
fcom
popa
lds
sub
mov
jmp
lahf
sub
lcall
mov
xor
movsb
jae
jo
repz
pop
sub
mov
xor
leave
es
xchg
mov
mov
lahf
adc
xchg
loope
xor
xchg
mov
inc
jg
hlt
inc
lret
push
sbb
xlat
imul
mulb
ret
call
push
int3
std
and
pop
inc
jae
scas
call
xor
add
data16
out
mov
xlat
cmp
push
mov
and
push
push
pushf
hlt
mov
mov
in
arpl
clc
mov
jge
push
cmpsb
push
das
mov
mov
movsl
pop
xchg
jne
cli
pop
movsl
stos
popa
xor
cmpsl
popf
jecxz
outsb
jmp
add
pop
test
pop
mov
fadds
cld
lcall
xor
sti
sub
pop
xor
cwtl
cld
mov
sub
mov
imul
daa
push
mov
das
inc
cmp
jl
xorl
and
pop
dec
bound
mov
mov
sbb
imul
adc
push
scas
fwait
insb
jl
ss
stos
add
push
pop
arpl
ud0
sbb
subl
xor
pop
push
ucomiss
test
adcb
dec
scas
pop
xchg
push
shll
pop
ja
das
mov
adc
ds
bound
leave
addr16
add
add
js
out
sahf
push
andl
mov
and
pop
bound
into
and
ljmp
xchg
popa
mov
xor
sahf
test
stos
pop
or
pusha
jbe
mov
imul
jo
fadds
mov
or
or
pop
std
pop
in
jo
push
mov
fbstp
dec
testb
lods
cmp
dec
scas
xor
cmp
jmp
out
not
idivb
notb
iret
mov
bound
out
out
outsl
mov
xchg
xchg
lods
sbb
xchg
fsubr
into
andb
dec
fdivs
add
je
mov
ret
in
xchg
mov
mov
fstps
aaa
leave
loop
push
push
into
cmp
mov
mov
dec
pop
and
aas
mov
addr16
fsubrl
aas
icebp
mov
lret
mov
mov
rol
jns
xchg
out
push
dec
outsb
sub
xor
cmp
das
ds
test
mov
jecxz
adc
adc
fwait
or
mov
adc
xchg
enter
mulb
pop
aam
push
aas
mov
lock
sbb
gs
jno
aam
xor
sub
mov
inc
dec
gs
rolb
subb
std
icebp
add
test
in
notl
sbb
mov
sub
cli
popf
dec
cmc
pop
mov
xchg
add
int
sbb
nop
pop
call
push
mov
add
adc
gs
mov
inc
inc
xchg
scas
mov
add
xchg
adc
sti
ds
dec
inc
xchg
loop
fidivs
data16
mov
xor
cmp
pop
call
js
leave
es
pushf
push
xchg
mov
jle
push
arpl
pop
dec
aad
xor
cmp
sar
jmp
mov
mov
xchg
cmp
mov
mov
ljmp
add
xchg
icebp
ret
xchg
das
in
pop
or
fimull
lock
insb
or
and
outsl
push
jo
mov
dec
and
mov
sbb
fldln2
push
out
test
fstpt
mov
ss
and
sarl
mov
ja
cmpsl
lret
xchg
fcmovbe
xor
out
lods
and
xchg
sub
cltd
fwait
xchg
outsb
out
icebp
add
popa
cltd
imul
pop
mov
and
les
push
inc
mov
mov
xchg
daa
je
lret
scas
and
ljmp
pop
jns
cltd
jne
rcll
jl
ljmp
jecxz
sbb
push
and
add
xor
push
mov
or
xchg
jge
or
subl
jo
outsb
jl
pop
jo
pop
mov
cmp
and
cmp
pop
xchg
sbbl
pop
xlat
fidivrl
pop
sbb
sub
je
push
lock
mov
cmp
inc
fsub
shlb
cwtl
push
mov
incl
xor
xchg
popf
inc
fimull
and
sub
rcrb
jecxz
out
ljmp
mov
pop
xchg
push
xchg
push
repnz
sbb
pop
xor
inc
testb
dec
pop
insb
dec
roll
pop
outsb
sahf
fsubl
popf
frstor
adc
mov
es
push
jp
adc
sbb
mov
stos
fs
shlb
movsb
pushf
push
mov
sub
aam
idivl
mov
jl
repz
shlb
jo
push
int
and
sahf
push
shl
nop
hlt
mov
xchg
adc
ljmp
or
aad
add
or
test
inc
mov
lret
xor
das
inc
ja
cmc
lods
lret
call
xchg
mov
pop
outsl
xor
fisubs
movsb
adc
cmp
push
or
pop
js
and
icebp
xor
imul
daa
jecxz
sarb
jo
mov
mov
jl
and
pop
inc
adc
call
push
mov
dec
mov
leave
pop
jae
mov
add
call
add
add
nop
sarb
sahf
add
fildl
mov
mov
add
jnp
and
mov
mov
cmp
es
sbb
pop
iret
push
hlt
sub
xor
aad
aam
pop
mov
sub
add
outsl
movq
sub
or
and
outsb
aas
xorb
sub
test
sbb
stos
test
in
jnp
pop
inc
mov
mov
push
ljmp
sub
and
jge
shrb
fwait
insb
test
sbb
jmp
ret
cmpsb
or
jne
loope
imul
xchg
sbb
clc
das
mov
inc
mov
mov
cs
call
stc
movsb
inc
imul
mov
sub
mov
dec
gs
dec
out
dec
add
das
cmpsl
inc
mov
jp
dec
dec
out
inc
or
pop
ret
sub
or
push
dec
and
push
jae
not
scas
rorb
stc
or
pop
add
adc
or
adc
insb
popf
sub
sti
inc
popa
mov
mov
adc
stc
in
ja
jbe
cmp
sahf
pop
out
std
cmp
stc
test
shrl
mov
iret
sbb
bound
pop
fildl
sbb
nop
mov
sbb
and
adc
xchg
and
push
lds
dec
test
gs
jg
jp
out
cmpl
arpl
mov
cmpsb
jno
xchg
mov
sbbl
xor
mov
mov
lock
popa
mov
cmp
cli
push
push
in
sub
sarb
pop
pop
inc
mov
aam
push
fiadds
dec
sub
sub
outsb
push
cmp
jno
loop
std
in
sahf
repz
and
in
xor
mov
mov
negb
hlt
cli
pop
bound
insl
out
inc
inc
ja
fistpl
inc
orps
les
xchg
xchg
in
aad
mov
sub
movsb
ficompl
mov
dec
test
cli
jle
cld
out
in
jne
fcompl
negb
cmp
jge
movsl
icebp
ret
push
pop
repz
jb
xchg
or
jae
or
mov
lahf
rcll
rcrl
imul
ja
or
sub
call
sub
mov
cltd
enter
sub
inc
imull
movsl
arpl
lock
or
mov
lods
mov
aam
pop
inc
bound
shr
pop
scas
iret
sbbb
jno
popl
cmp
jecxz
addl
fidivrs
ljmp
movb
lcall
sub
mov
push
aam
jne
lahf
iret
mov
cmp
adc
xchg
pop
and
push
jo
jne
add
inc
sbb
data16
xchg
xor
xchg
mov
or
bnd
shrb
sbb
xchg
out
int3
pop
pop
cmpsb
lea
sub
cmp
les
and
pop
ret
push
sti
sarl
aam
cmp
pop
nop
add
sub
sahf
jae
ror
jnp
mov
roll
mov
dec
jnp
sti
add
mov
xchg
xor
mov
divl
cmp
xor
scas
shrb
xlat
test
in
adc
scas
pushf
ret
das
push
mov
lahf
out
or
repnz
inc
adc
jno
pushf
test
test
bound
mov
in
dec
flds
jne
xlat
jmp
mov
xchg
cwtl
test
mov
dec
repz
push
pushf
dec
int3
shl
inc
mov
dec
aad
mov
sahf
jl
cmp
popa
cld
outsl
jmp
inc
inc
xchg
popf
cmp
cmpsb
imul
fwait
sbb
xchg
icebp
and
adc
jl
push
fbld
loopne
rcrl
or
shll
daa
mov
xor
lods
mov
shl
aam
mov
dec
ljmp
mov
dec
jnp
lret
pop
pop
push
pushf
sbb
scas
inc
neg
pop
adc
and
sub
lahf
mov
push
lcall
sahf
mov
aad
inc
imul
int
aad
pushf
test
mov
es
clc
ja
jmp
loope
int3
inc
mov
scas
xchg
fstl
movsl
dec
jb
xchg
dec
cmp
sub
mov
jns
test
cmp
lcall
cmp
add
lods
adc
faddl
xor
jle
mov
call
lock
cltd
sub
sbb
mov
iret
ret
mov
dec
stos
xchg
pop
jne
ror
icebp
std
mov
cltd
mov
mov
dec
mov
mov
scas
push
push
xchg
fwait
push
pop
push
imul
fidivrs
cmp
and
xor
lods
mov
loopne
imul
xor
mov
imul
sahf
dec
and
vmread
mov
fidivl
cltd
xchg
and
dec
jecxz
cmp
out
and
adc
pop
jb
add
mov
loope
mov
add
lods
mov
fldt
ljmp
cmpps
adc
pop
push
cmp
jle
daa
xor
mov
fadd
mov
pop
mov
mov
inc
fmull
pushl
pop
sbb
cmp
shll
mov
lea
jae
lcall
cmp
leave
dec
test
es
iret
cmc
push
ja
mov
or
cmc
pop
sbb
js
jno
mov
mov
jno
pop
pop
sub
lret
out
add
xor
inc
xchg
mov
imul
or
scas
fmul
jg
sbb
mov
mov
dec
je
gs
and
mov
loope
dec
dec
or
cli
xchg
inc
test
lret
mov
rolb
sbb
test
jo
dec
dec
aad
decl
sub
inc
xchg
dec
ret
in
inc
xor
in
inc
outsl
sbb
in
and
mov
fwait
gs
push
mov
shrb
call
push
ret
jl
mov
pop
pop
and
mov
xor
pop
stos
or
stos
xor
push
mov
movsb
xor
and
mov
cmp
testb
dec
push
jl
inc
outsb
out
mov
aaa
sub
gs
mov
jbe
movsl
xlat
scas
gs
lea
push
lret
inc
loopne
pop
ss
jae
aad
cmp
adc
ds
inc
sti
or
pushw
mov
mov
and
cltd
cmpsl
jo
add
push
out
int3
xlat
inc
lods
adc
pop
mov
nop
repnz
in
xchg
jns
leave
dec
sbb
cmc
inc
int
leave
add
testb
pop
mov
and
inc
dec
push
fisubrl
cltd
testl
cmp
mov
mov
sbb
out
in
jb
xor
pop
pop
call
mov
jecxz
cwtl
cmp
hlt
outsl
pop
dec
push
push
and
dec
push
inc
xlat
mov
mov
sub
scas
push
cmp
add
jmp
push
mov
icebp
push
push
insb
repz
jno
pop
jmp
cmp
sar
icebp
add
sbb
stos
rcl
insb
mov
inc
or
dec
mov
and
aas
fcmovu
cmc
xor
jnp
loope
xchg
orl
cmp
push
mov
dec
pop
in
mov
fcomip
in
xor
sbb
push
lret
xor
fdivrs
pop
add
hlt
dec
add
stos
mov
movsl
pop
and
push
pop
add
shr
mov
popa
dec
ret
sub
inc
mov
int3
push
outsl
add
add
or
repnz
jno
outsl
dec
lds
rorb
insl
cmp
dec
push
inc
in
fwait
dec
addr16
xchg
push
sahf
xchg
pop
fstl
mov
pop
nop
dec
sub
fisubrl
aas
arpl
repnz
loopne
nop
iret
cmpb
call
dec
ja
dec
mov
push
mov
mov
dec
into
mov
popl
stc
fldenv
xor
hlt
push
clc
push
push
pop
adc
pop
ret
js
fs
mov
in
pop
test
or
std
pop
lahf
jg
jne
xchg
jae
fcomi
insl
bound
js
and
scas
in
sbb
int3
sub
pop
sub
sub
mov
cli
cmp
add
mov
sbb
or
repz
insl
enter
stos
sti
jb
jl
mov
sahf
shll
loopne
xchg
shll
fmuls
inc
jmp
shlb
or
add
mov
xor
fildl
inc
loop
xor
clc
and
dec
lods
shlb
fildl
mov
das
sbb
cmpsb
imul
mov
push
in
in
scas
fistps
mov
pushf
add
jbe
jae
or
outsl
xor
mov
mov
in
push
das
lock
push
int3
jne
orl
bound
jmp
rolb
fldt
inc
jbe
lods
jp
xor
mov
or
mov
outsl
imul
mov
lea
int
pop
inc
and
test
cmp
dec
and
mov
push
adc
arpl
adc
jbe
jae
mov
inc
into
jle
pop
loop
jmp
xchg
movsb
js
push
cli
or
xchg
sbb
push
loop
shl
outsl
maxps
adcb
mov
xor
test
out
shrl
sahf
fmulp
movsl
xchg
pop
adc
pop
inc
jmp
cmpsw
xor
cmp
dec
pop
mov
xchg
adc
mov
out
xchg
mov
int
pop
jg
out
sub
lock
inc
jno
imul
mov
sahf
lret
cmpsb
icebp
popf
pop
imul
push
and
out
adc
cwtl
cmp
mov
pop
cmpl
inc
call
push
pop
mov
pop
ficoml
int3
mov
test
imulb
and
push
test
cltd
daa
addb
and
lahf
and
movsl
hlt
insb
pushf
fimuls
mov
sub
loopne
and
subb
iret
sbb
in
outsb
cltd
pop
cli
mov
mov
jp
or
mov
xchg
adc
pop
hlt
pop
fucomp
xlat
scas
dec
stos
roll
or
in
mov
add
fcmovb
jb
fsubrl
add
dec
or
inc
sub
cmpsb
mov
add
cmc
inc
xchg
mov
enter
ss
xchg
push
xlat
mov
push
pop
adc
xor
ret
scas
out
or
jno
mov
adc
cmpb
mov
ret
int
sbb
dec
push
mov
mov
movb
leave
xlat
aad
cli
loope
xor
imul
stc
clc
repnz
js
add
push
jnp
and
arpl
js
lret
stc
in
add
pop
rolb
xlat
cld
sub
cli
mov
or
andb
nop
test
adc
mov
enter
pop
mov
mov
subb
push
fldl
sub
mov
repnz
lret
cmp
enter
int
ss
lods
sahf
mov
cmpsl
scas
push
xlat
shl
dec
add
in
mov
dec
xorl
sbb
mov
stos
pop
imul
gs
test
fsubr
mov
sub
adc
iret
sub
push
mov
pop
cmp
push
mov
jb
andb
enter
push
sbb
mov
movl
adcl
fsubrl
lahf
pop
mov
push
fiaddl
add
inc
flds
repnz
movsl
and
mov
sbb
xorb
mov
mov
cmp
adc
jb
dec
iret
lea
dec
popf
out
xor
lret
inc
hlt
mov
add
dec
push
ds
push
lods
in
in
jbe
ljmp
sti
inc
cld
sub
mov
test
mov
mov
sahf
loope
loope
adc
ret
outsb
jmp
mov
pop
outsb
int3
test
sti
bound
out
imul
imul
fcoml
xchg
out
stos
push
push
sbb
push
xchg
cmp
daa
inc
mov
push
outsb
std
xor
dec
nop
lods
xchg
cmc
add
cmpsb
pop
outsl
es
popa
sub
or
pop
je
outsb
inc
in
test
dec
stos
add
jg
int3
dec
cmpsl
dec
movsl
mov
ficomps
xchg
fs
sub
sub
sbb
jg
cmpsb
sahf
mov
lock
sbb
pop
xor
pop
cmpsb
das
mov
cs
sbb
test
jecxz
jle
call
and
push
lahf
fadds
outsl
xor
es
mov
pop
scas
es
xor
pop
push
pop
mov
lcall
bound
mov
out
mov
lods
mov
dec
scas
ja
xchg
lods
jg
push
js
movsb
pop
or
fwait
mov
cmp
inc
pop
and
sub
mov
add
bound
push
xchg
lahf
add
scas
cmp
call
mov
mov
lahf
jge
fistpl
push
push
mov
lock
lock
lea
fxch
cmc
xor
fsub
subb
cmp
fcoms
aas
inc
pusha
and
stos
and
pushf
out
shrd
lret
inc
dec
mov
je
or
movb
jecxz
iret
js
js
dec
ds
push
fimull
push
stos
jl
add
addb
cwtl
or
and
and
fcoml
and
mov
and
dec
pop
add
repz
fiaddl
dec
out
jmp
inc
popa
pop
clc
mov
jge
daa
fwait
cmpb
xor
sti
bt
dec
mov
scas
add
xor
das
xchg
push
xchg
sub
lea
nop
pop
push
and
insb
fdivrs
xor
scas
out
sbb
mov
lds
and
cmp
pusha
loope
adc
inc
mov
cwtl
nop
add
add
push
dec
and
lds
xchg
addr16
mull
aaa
cltd
jns
cmc
sbbl
mov
mov
stc
cld
loope
mov
arpl
aam
push
xor
jle
and
fadds
and
sbb
into
loope
mov
in
std
dec
sub
popf
sbb
aas
out
int3
inc
mov
call
mov
cli
xchg
out
mov
mov
bound
pusha
cltd
gs
je
mov
jp
dec
sbb
or
sbb
sub
xchg
movsb
cli
xchg
mov
stc
daa
push
mov
jmp
mov
and
mov
cld
xor
sahf
push
cs
xor
ljmp
cmp
pop
push
jle
popa
shll
stc
fstl
sbb
mov
inc
pop
xchg
cmp
mov
push
push
mov
fs
andb
mov
and
inc
add
dec
pop
push
div
sbb
test
push
inc
pop
das
sub
shrb
push
pushf
mov
sub
cmp
outsl
in
push
dec
inc
das
pop
mov
lock
sub
push
jae
sbb
mov
fnsave
test
push
negl
adc
daa
add
das
xor
imul
std
je
lret
fs
fiaddl
fcoms
in
rclb
ljmp
cmp
jmp
ss
cmp
sub
or
mov
jmp
xor
sbb
fucomi
xor
in
les
xchg
ds
add
inc
lret
sub
stos
mov
jge
jb
bound
daa
push
cmp
jne
cwtl
rcll
dec
pop
sahf
add
ds
sar
insb
jae
sbb
jl
dec
xchg
sub
das
fsubrl
stos
popa
mov
xchg
mov
add
add
in
and
ljmp
pop
sbb
test
mov
repnz
dec
popf
jae
xchg
and
lods
lds
push
mov
enter
ja
jns
cmc
xchg
hlt
sbb
jl
inc
mov
and
call
movsl
jnp
repnz
or
jb
mov
imul
xor
mov
repz
mov
mov
and
jno
repz
lahf
push
outsb
add
imul
mov
add
cwtl
jno
pop
adc
add
xchg
std
scas
dec
jmp
and
out
xchg
dec
lds
or
pop
test
jb
fsubrs
jae
sbb
dec
mov
mov
lret
outsl
push
inc
push
sub
orl
int
dec
pushf
mov
or
cmpsl
adc
popf
mov
lahf
adc
cmpsb
cmp
mov
jns
scas
xor
icebp
or
sub
cld
aam
lock
in
lcall
xchg
sub
fidivrs
jl
out
mov
mov
adc
leave
sbb
sbb
inc
movzbl
cmp
pushf
out
add
xchg
dec
xchg
ret
dec
cmpsb
and
cld
insl
sub
mov
mov
sbb
icebp
data16
jo
jmp
lret
pop
sti
pusha
add
cmp
addr16
inc
mov
outsl
mov
std
sbbb
ret
lea
xor
mov
jmp
mov
adc
ss
push
xchg
sbb
mov
lret
cmp
dec
fwait
jl
mov
jno
fcmovnu
jne
mov
xor
mov
xor
test
mov
outsl
fwait
lods
mov
insb
pop
imul
pushf
lret
leave
pusha
xchg
xor
jle
adc
adc
cltd
sub
call
fcmovu
push
sbb
and
sbb
xchg
movsb
call
loop
jo
in
and
lahf
or
cmp
mov
nop
in
loop
mov
cmpsl
mov
mov
pop
test
icebp
insb
ss
lea
mov
lods
test
push
arpl
cmpsl
push
out
leavew
mov
rcrb
hlt
insb
fst
je
ljmp
cmp
mov
pop
aas
cmp
loop
xchg
adc
fs
out
fidivs
popa
cmp
inc
add
out
mov
add
cmp
xor
addr16
fidivrl
inc
mov
movsb
pop
adc
fs
xchg
fists
notb
in
xchg
lock
mov
sbb
cmp
or
nop
dec
mov
test
sub
data16
lahf
rcrl
loop
mov
xor
mov
in
xor
pop
stos
jmp
popf
andl
cmc
add
inc
lds
sub
push
daa
inc
dec
mov
sbb
dec
scas
xorl
mov
sub
arpl
scas
adc
cmp
jge
and
push
mov
icebp
or
shlb
jg
xchg
iret
inc
stos
int
xchg
dec
imul
jae
mov
jae
gs
inc
fwait
lods
jl
insl
push
ljmp
add
test
fsubr
lahf
shl
in
sub
or
cmc
mov
or
jns
test
push
jno
test
out
and
mov
shl
idiv
mov
push
negb
pusha
mov
dec
pop
jno
inc
out
stos
sub
jo
daa
sahf
sbb
sbb
je
shrb
pop
pop
cli
pop
cs
or
dec
arpl
xor
add
or
push
lods
test
pop
nop
mov
faddl
or
mov
mov
pop
cmp
sbb
out
sub
dec
fs
aas
or
pop
lahf
xchg
and
pop
out
xchg
dec
sbb
pop
lahf
imul
adc
push
pop
adc
or
pop
imulb
sub
sbb
ds
sub
mov
xor
pop
arpl
inc
nop
addb
mov
jno
xor
repnz
scas
jmp
mov
pop
out
cmc
fstpl
and
sub
notb
fidivs
sub
cmc
jno
and
ljmp
pop
rclb
cltd
cs
andl
ret
lods
insb
aaa
shr
inc
xor
rolb
insl
ljmp
xor
outsl
ja
daa
cwtl
xchg
lret
cld
jg
lahf
jl
jbe
aad
sbb
int
mov
push
xchg
mov
sub
sahf
push
es
cltd
pop
std
ret
in
sub
jge
rclb
outsl
add
adc
fbstp
std
test
loop
mov
ss
gs
sbb
push
cmp
fimuls
and
popw
mov
adc
push
jl
shl
lret
and
mov
lahf
mov
mov
aad
push
cmpsb
lock
add
sti
ret
push
or
adc
shrb
push
mov
addr16
hlt
mov
sahf
add
mov
pop
sarb
mov
adc
lods
adc
lods
shll
cmpsl
into
jmp
add
iret
fistpll
adc
cmp
lret
and
and
mov
icebp
and
and
and
test
gs
pop
movsl
and
ss
inc
jmp
idiv
lret
sub
jle
jae
push
pushf
imul
push
negl
lea
lret
dec
into
adc
add
adc
sbb
repz
cmp
adc
and
or
cli
les
sti
pop
pop
mov
fdivrs
dec
mov
cld
ret
lea
in
fstpt
xor
cmp
cmpb
add
popf
daa
frstor
bound
stc
arpl
fldcw
hlt
jg
insb
dec
push
repz
ss
ds
jae
aad
enter
adc
out
mov
int
out
popl
jae
mov
lret
jbe
rcrl
je
mov
xchg
or
test
xchg
xchg
test
adc
or
pop
shlb
xlat
arpl
xchg
imul
aad
sahf
jge
sahf
cmpsb
rorb
jo
push
lret
out
add
xor
hlt
movsb
dec
mov
pop
ljmp
rcrb
push
mov
mov
xor
xchg
jnp
cli
lret
add
inc
ret
inc
test
repz
xchg
divl
test
sti
mov
cs
xor
cmp
pop
pop
or
or
adcb
popa
sbb
js
mov
das
add
xor
cli
pop
lahf
arpl
or
push
ljmp
inc
gs
add
cmp
call
test
shrl
call
mov
lahf
mov
mov
lret
das
ja
xchg
sbbl
xor
dec
jmp
mov
daa
xchg
jle
sub
xor
ret
sahf
xchg
incl
xchg
in
jnp
sti
dec
ss
cmp
lea
into
and
add
call
jne
jecxz
mov
test
mov
je
into
movl
cmpsl
mov
adc
xchg
sbb
dec
cmc
int3
mov
pop
fwait
jns
or
add
jle
cmp
jo
sahf
clc
dec
mov
mov
jecxz
jo
sbb
fstpt
repz
mov
cmpsb
xchg
fcoms
in
sbbl
out
mov
sbb
and
inc
stos
repnz
adc
aas
push
and
mov
push
mov
mov
cmp
out
xor
cmp
stos
mov
mov
mov
js
add
or
sbb
aam
idivl
outsl
adc
mov
xlat
pushf
aam
cs
in
add
adc
xor
xor
cwtl
xor
mov
pop
xchg
or
push
repnz
test
pop
gs
insb
scas
push
shll
out
lret
jp
xor
loop
popf
lret
inc
js
add
fldlg2
add
inc
jl
dec
cmp
js
push
es
clc
pop
jno
fwait
jb
mov
push
sub
out
sbb
push
sub
push
or
incl
or
cmpsb
popf
movl
sub
int
pushf
cmp
dec
movsb
sbb
adc
lods
or
jl
xchg
push
cmp
xor
inc
inc
dec
pop
or
cli
jno
lods
xor
cwtl
lds
in
ret
sti
outsl
inc
inc
jmp
xlat
jb
fidivs
ljmp
pop
stc
xchg
xor
aad
data16
mov
insl
dec
int
jle
fs
mov
jbe
scas
cmp
and
dec
dec
or
dec
jns
stos
push
cmpsb
mov
dec
addr16
cmc
xlat
add
in
mov
cmp
pushf
push
notb
mov
jl
jnp
jb
sahf
push
in
xlat
ror
test
lcall
shll
int
test
sahf
mov
aad
pop
or
jmp
and
in
xchg
pop
lods
test
daa
pop
xchg
hlt
mov
adc
jne
insb
adc
sbb
addb
scas
fidivl
movsl
inc
sbb
xchg
push
lock
sbb
imul
xchg
dec
and
in
add
xor
mov
out
cmc
sub
fmull
je
dec
ds
jo
in
shlb
outsl
mov
adc
negl
insw
or
sub
push
mov
inc
cmp
mov
add
bound
popf
stos
adc
xor
scas
mov
insl
lods
test
sbb
adc
xchg
mov
push
xor
or
push
cmpsb
andb
ds
ss
mov
xor
cltd
lods
vmovdqu
rorb
dec
and
cmp
pop
outsb
mov
into
bound
inc
cmpsb
pop
pop
pop
sub
push
push
movsb
push
add
popf
inc
shl
mov
fimull
std
cltd
data16
rol
sub
adc
fldenv
lret
out
pushf
sub
jle
sub
call
cmpsb
subl
adc
int
inc
mov
xor
ss
jg
cmp
lods
xor
or
xor
mov
mov
adc
outsb
or
out
movsb
add
pop
in
mov
and
push
scas
lods
xchg
xchg
in
jecxz
xor
in
dec
sub
pop
les
jae
ljmp
or
sub
jg
lret
test
or
or
in
pop
into
cli
sub
into
outsb
js
sub
mov
lods
shl
loopne
xor
fadds
pop
push
outsb
cmpsl
outsl
mov
mov
es
xor
or
pop
loopne
adc
aam
lret
enter
daa
in
mov
push
popa
icebp
outsb
ficompl
mov
es
xor
test
loop
mov
clc
jl
ds
push
xchg
xor
ja
cmp
es
or
cld
mov
xchg
sahf
mov
cmc
jno
inc
and
push
mov
or
and
repnz
sub
repz
cmp
jle
ja
pop
jb
xor
xchg
push
cs
scas
adc
enter
mov
fwait
bound
xchg
aaa
insl
push
stc
ja
push
cmc
arpl
jns
bound
cmp
fwait
pop
cmpsb
dec
shlb
jmp
rclb
stos
mov
pop
sub
and
or
aam
stos
test
fisubl
in
call
fcoms
int3
adc
bswap
or
mov
cmp
pop
repz
jmp
push
adc
jo
xchg
mov
push
cld
sbb
jecxz
add
nop
inc
xlat
pop
sub
push
leave
and
test
cmc
sahf
mov
mov
sub
xor
nop
ja
adc
inc
xlat
aas
push
sti
test
add
adc
outsb
cli
mov
fisttpll
ret
dec
xchg
test
and
jmp
ss
and
movsl
mov
stos
adc
pop
or
cwtl
or
and
fstpt
gs
xor
pushl
repz
jo
repnz
inc
pushf
xor
mov
mov
shl
int3
xor
mov
push
lcall
stos
jns
xchg
adcb
mov
jns
fsts
mov
fcoms
add
out
jae
jbe
adc
pusha
pop
sbb
cmpsb
fwait
lds
cmp
adc
aaa
iret
lret
xchg
xor
push
insl
pusha
jne
sub
sub
pop
pusha
mov
inc
mov
jbe
push
lock
aad
pop
jno
ror
repz
divl
nop
push
mulb
adc
rcrl
jne
push
lcall
and
movsb
lahf
call
jns
mov
and
outsb
int
cmpsb
sbb
enter
jno
push
dec
je
push
enter
rcll
push
cmp
into
mov
stc
sub
cs
icebp
enter
or
fdivs
pop
sbb
repz
test
cmp
sub
pop
jo
mov
jno
jp
xchg
xorb
bound
shl
sbb
lock
sbb
xchg
sbb
add
push
dec
xlat
push
jmp
fldcw
fs
and
jb
add
push
jecxz
inc
dec
adc
stc
mov
in
rcrb
data16
cmp
mov
lods
mov
gs
sub
test
inc
push
test
jg
mov
bound
mov
fnstenv
push
sarl
sarb
cld
pop
or
jo
insl
lret
xchg
pushf
sbb
je
sahf
cwtl
push
mov
and
xor
fstpl
int
mov
adc
inc
das
xorl
outsb
mov
add
outsl
loop
and
in
out
sarb
jecxz
xor
test
sub
sub
cmc
cmp
ficoms
loop
fsubr
push
mov
int3
xchg
fisubrl
mov
call
push
and
fistl
daa
jmp
xchg
cs
repnz
lcall
and
inc
adc
sbbb
cmpsl
push
push
mov
mov
xor
dec
pushf
inc
inc
test
lret
test
mul
inc
fisubl
shrb
add
sbb
push
mov
xchg
fcompl
mov
cli
ss
in
jl,pn
or
sub
jne
xor
xchg
mulb
dec
sub
add
xchg
orl
inc
lret
aas
cld
cmc
imul
outsl
dec
jno
xor
inc
cmp
xchg
and
mov
es
fs
aas
mov
ja
cmp
lods
cmp
pop
dec
stc
shr
jmp
in
sub
cmc
mov
mov
test
jmp
lret
mov
adc
imul
xchg
orb
fildl
inc
jns
pop
pop
cmpsb
pop
dec
jge
push
adc
xchg
jbe
dec
shll
pushf
xor
enter
xlat
fadds
jae
jg
les
cmpsl
addr16
xchg
adc
repz
adc
movsl
in
out
cmp
xor
ret
popl
dec
push
pop
dec
jg
inc
add
addb
fldenv
mov
dec
frstor
in
test
in
jnp
or
pop
sbb
divl
adc
push
xchg
or
xor
or
pop
bound
pop
mov
sub
dec
dec
fsubs
mov
call
sbb
fistps
pop
dec
jae
adc
or
sub
outsb
or
adc
pushf
sbb
cmp
or
cmp
pop
jns
cmc
and
pop
inc
dec
adc
pop
push
out
ret
addr16
xlat
inc
movb
mov
call
xchg
jg
loope
jne
loopne
cmc
outsl
and
and
push
iret
jae
or
push
enter
xchg
mov
ss
hlt
ret
sbb
dec
add
in
push
inc
mov
dec
nop
leave
shrl
arpl
cmpsl
ret
call
aam
clc
lcall
sbb
pop
test
adc
stc
aaa
jne
cmp
nop
ljmp
imul
test
lods
mov
mov
mov
xchg
inc
sbb
inc
in
mov
xchg
push
sbb
clc
inc
pusha
sarl
push
stos
fistpll
stos
hlt
insb
stc
pop
sbb
divb
in
divl
jge
jmp
and
xor
jmp
faddp
mov
pushf
cmp
mov
mov
sahf
dec
mov
pop
rcl
dec
pop
jp
call
test
out
dec
sub
xchg
sti
test
adc
nop
jnp
jle
int3
mov
xchg
fnstsw
lods
xchg
mov
shll
je
cmp
push
push
push
xchg
or
rolb
lods
add
jbe
cmp
popf
dec
jns
pusha
mov
mov
jmp
cmc
xchg
mov
and
notl
sub
sub
imul
pop
jb
lods
push
and
popf
in
call
cs
in
mov
sub
dec
ret
insl
cmp
cmpsl
adc
dec
and
push
push
dec
and
int3
aam
cmp
es
shr
mov
mov
dec
daa
test
xor
adc
mov
mov
nop
roll
adc
inc
jns
push
sbb
mov
pusha
inc
lds
fistpll
mov
aad
sbb
push
jp
sub
cmc
and
jp
xchg
mov
stos
adc
je
lret
mov
adc
cmp
xchg
test
xor
pop
test
icebp
mov
or
push
lea
cmpl
mov
mov
nop
mov
jae
loop
inc
inc
adc
addl
cltd
xor
cmp
push
sbb
jl
xor
pop
mull
or
cli
mov
mov
cmp
je
and
adc
or
testl
xchg
xchg
pop
pop
cmp
sub
in
mov
fdivrl
ds
and
loopne
push
lret
int
xchg
jbe
add
cwtl
in
push
mov
inc
dec
inc
cltd
and
mov
pop
mov
jnp
test
inc
cmp
mov
sti
fcmovbe
cmp
mov
bound
loopne
and
sbb
fadds
pop
mov
add
insl
inc
dec
fidivl
mov
js
dec
mov
push
or
inc
or
or
mov
lahf
push
aad
dec
lahf
test
mov
in
mov
lock
testl
push
cmpsl
fs
pop
out
sti
stc
xchg
imul
les
push
mov
enter
sub
and
jmp
loopne
popf
xchg
ficoml
das
iret
movsl
jns
fcoms
jmp
xchg
into
fiaddl
fcmovne
aaa
push
pop
sub
xor
sbb
fnstenv
pop
adc
xor
int3
ja
lock
jno
loopne
mov
ja
dec
mov
mov
and
pop
call
add
insb
rolb
inc
dec
xchg
test
inc
pop
mov
dec
pop
xor
jp
cmpl
sub
and
ret
cwtl
mov
or
jecxz
jl
and
out
mov
lea
ja
xchg
and
push
stos
into
sar
xchg
test
std
mov
adc
xchg
fprem1
iret
int
inc
xchg
mov
test
add
push
inc
clc
mov
or
xor
leave
fs
iret
push
mov
ret
fldl
decb
pushf
fdivs
xchg
call
mov
mov
xchg
add
pop
and
cmpb
data16
xlat
loope
cmpsb
xchg
sbb
xchg
shrb
cwtl
push
cmp
dec
call
pop
and
mov
stos
jae
or
test
mov
cmp
or
and
fnstcw
mov
xchg
lock
adc
jecxz
jo,pt
aaa
movsl
aas
or
cld
sbb
fdiv
imul
push
aam
bound
pop
pop
imul
out
addr16
sbb
std
dec
cmc
sub
std
pop
hlt
mov
js
mov
mov
xor
lret
jg
addb
xor
mov
ret
mov
cmp
mov
test
and
mov
inc
lret
pop
clc
adc
mov
imul
mov
jl
js
dec
mov
int
or
fs
mov
cwtl
add
cmp
cmp
fbld
push
es
xchg
adc
int3
shlb
lret
cmp
pop
add
scas
mov
push
std
js
xchg
int
inc
push
ret
jb
adc
cs
stos
push
imul
cmp
repz
int
jmp
dec
pop
adc
sub
push
cmp
mov
or
call
enter
xor
in
inc
xor
addr16
mov
popf
outsb
fisubrs
push
lahf
aas
pop
inc
jge
popf
jnp
sub
pop
pusha
mov
rcrl
in
mov
jge
jns
or
pushf
or
and
cld
orl
sbb
nop
pop
sub
rcll
or
stos
inc
cmpsb
pop
mov
sub
outsb
push
ficoms
or
insl
adc
jne
fwait
notb
xor
fdivl
or
xchg
stc
fcomp
mov
sbb
cmc
in
push
dec
jbe
lret
mov
pop
push
mov
inc
add
bound
add
stos
es
xchg
call
pop
in
in
mov
xor
push
fnsave
sbb
icebp
xor
fwait
test
sbb
jns
and
push
dec
stos
add
inc
mov
mov
mov
nop
xor
adc
mov
inc
pop
sub
imul
xchg
add
add
jno
enter
xor
fs
nop
mov
loopne
push
push
popa
icebp
stc
outsl
mov
lret
xchg
pop
les
inc
into
dec
push
inc
cmp
in
ss
xor
inc
lods
lret
xor
pop
loop
repz
push
sbb
mov
push
ds
out
mov
xlat
push
fcmovnb
insb
das
dec
xor
jge
xor
aas
jl
fstp
add
push
addr16
sbb
inc
dec
or
inc
pop
adc
xlat
sbb
cld
std
cmpsl
dec
dec
mov
push
xor
or
dec
xor
xor
call
call
movl
mov
pop
push
outsl
pop
push
jmp
in
add
mov
stos
ja
in
mov
adc
mov
jb
adc
pop
in
jg
dec
int3
data16
stos
mov
aam
and
pop
inc
in
fistl
xchg
push
addr16
and
insl
in
jmp
add
mov
push
lds
sbb
ja
jns
or
les
sbb
lcall
inc
nop
cmp
add
testb
mov
and
adc
push
jbe
adcb
je
xlat
push
dec
imul
sbb
inc
jle
or
xor
inc
inc
sub
out
stos
clc
sarb
and
movsl
ljmp
rclb
sbb
mov
push
repz
inc
push
sbbl
sahf
dec
xchg
outsl
out
je
imul
lods
ljmp
fs
cmp
xchg
pop
lods
aad
inc
outsl
addl
aad
xor
mov
pop
mov
mov
xor
pop
or
dec
jns
fisttps
add
or
stos
or
loope
nop
sub
cld
xor
jg
lods
cmpl
mov
inc
sti
xchg
adc
int
lods
xchg
and
jg
fdivrs
movsl
scas
push
mov
push
dec
sbb
imul
cmp
and
in
mov
loopne
sahf
je
lods
adcb
pop
add
in
cmp
inc
xchg
mov
inc
mov
out
push
rclb
mov
mov
sbb
push
lret
sub
stos
mov
cmp
or
sub
mov
jl
add
mov
sub
int
aam
icebp
sbbb
repnz
jl
sub
rorl
adc
loop
jbe
cmpsl
jns
jae
loop
jp
rclb
js
pop
subl
mov
jecxz
decl
lods
inc
fisttpll
add
jl
mov
push
xchg
jmp
int3
inc
mov
cwtl
mov
das
cli
adc
push
jmp
cld
or
add
hlt
pop
in
mov
mov
inc
and
daa
ficomps
repnz
xor
fcmovbe
add
adc
movsb
outsb
lods
jne
xor
jmp
movsb
cmpsl
push
lret
xorb
add
mov
pop
xor
leave
cmpsl
mov
stc
pop
js
ss
data16
xchg
dec
add
push
fsubrl
std
pop
insl
aam
push
test
xor
gs
daa
std
int3
jecxz
ss
inc
or
insl
fs
jae
les
dec
sub
not
aas
xor
lea
jb
or
and
les
xor
pop
adc
xchg
fucomip
add
loopne
outsl
and
xor
test
out
xchg
mov
sub
stos
ljmp
sbb
mov
insb
pop
les
mov
inc
roll
mov
in
cli
xor
outsb
clc
mov
sahf
stc
xchg
xchg
adc
sub
mov
pop
push
stc
lds
andl
stc
push
jb
pop
aad
stos
js
test
int3
push
cmp
loop
pop
inc
push
nop
movsl
pushf
cmp
dec
sbb
xor
roll
mov
lods
repnz
cwtl
pusha
jle
pop
push
pop
in
sbb
stc
jbe
jg
insl
std
mov
fs
fcompl
scas
jbe
ficomps
pop
and
pop
arpl
out
or
push
pop
adc
insb
notb
cmp
push
and
sarl
mov
aad
lods
cltd
int3
lcall
cmp
jae
fimuls
fldcw
adc
ror
clc
inc
test
xor
cmpsl
shlw
mov
sub
frstor
pop
out
shrl
stc
pop
mov
in
mov
subl
pop
pop
push
mov
xchg
rcll
jge
add
loope
fidivs
int
nop
jle
jle
pushf
fwait
add
lds
lea
sub
filds
ret
pop
out
mov
scas
mov
stos
fiaddl
jg
sub
mov
mov
xlat
jg
sub
push
jo
repnz
mov
cmp
inc
rcrl
pushl
loopne
clc
test
mov
sbb
sub
mov
rorb
xor
ljmp
popa
lret
mov
jg
sub
mov
jge
loope
cli
xchg
mov
jl
outsl
dec
repz
dec
and
icebp
out
add
mov
xchg
hlt
addr16
xor
jge
xchg
ja
pop
insb
mov
loope
pop
push
sub
leave
and
stos
sub
xchg
xor
negl
dec
arpl
xchg
test
pop
aam
imul
xchg
sub
and
xchg
add
pop
and
and
into
jg
jno
push
push
into
fs
jnp
in
outsb
pop
pop
mov
pop
not
repnz
pop
xor
cmp
in
cmc
mov
ds
dec
mov
mov
sub
mov
jecxz
push
out
adc
inc
sub
dec
or
dec
loop
repnz
sub
sub
mov
rcll
fcompl
arpl
sub
cmp
mov
fistl
adc
lea
dec
orl
negb
pop
mov
xor
popf
push
insb
add
cmc
xchg
loope
jmp
test
mov
sar
sbb
cmp
inc
rorl
nop
lcall
das
loope
mov
inc
adcl
call
rolb
shrb
ljmp
ds
cmp
lcall
or
ror
cmp
xchg
jecxz
cmp
clc
push
test
mov
inc
test
daa
outsb
push
arpl
xchg
loopne
jl
jo
xchg
fwait
hlt
daa
mov
mov
dec
imul
lods
bnd
sub
or
mov
fsubrs
sbb
daa
hlt
and
loope
rcrl
pop
mov
loop
pop
mov
subl
add
and
mov
cmpsb
fwait
mov
xchg
sbb
push
adc
and
outsl
outsl
jbe
xor
or
jge
clc
arpl
iret
dec
insl
jno
int3
mov
sbb
repz
into
push
in
mov
sbb
dec
and
mov
flds
adc
adc
ret
loop
test
sub
test
mov
fsts
in
sub
dec
mov
lods
xor
xlat
mov
push
and
aad
xchg
movsl
out
xchg
lcall
pop
movsb
ret
aaa
mov
aas
lock
scas
fnsave
lret
sub
insb
sub
test
les
or
adc
pop
lret
mov
cmpsb
xor
dec
loope
pop
inc
daa
gs
mov
mov
mov
lcall
pop
push
rcr
xchg
aas
jae
in
or
imull
and
and
fs
out
push
pop
insb
mov
dec
int
mov
mull
or
fnstcw
xor
mov
out
and
mov
fs
lea
jns
xchg
pusha
lds
cli
rorl
xor
push
mov
lock
xchg
add
outsl
idiv
lods
rcl
nop
lret
sbb
pop
xchg
xchg
fisubs
pop
loop
mov
pop
sbb
and
pop
add
jge
imul
add
dec
inc
xor
aad
mov
sub
sub
or
add
aam
adc
push
lcall
icebp
adc
mov
jmp
pop
add
mov
jae
into
outsl
repz
iret
and
out
dec
xchg
xchg
popa
imul
hlt
push
stos
dec
es
xchg
ret
mov
mov
push
mov
jne
push
and
iret
mov
mov
push
pop
add
dec
xchg
sub
jmp
mov
out
lods
or
dec
mov
jmp
or
les
pop
pop
xchg
int
jl
inc
outsb
cmp
push
mov
inc
add
and
push
shr
lcall
rcll
lcall
fstpt
cmpsl
inc
stos
pop
add
pop
push
and
push
fiadds
add
cltd
ljmp
pop
rcr
mov
pusha
shrl
roll
jo
stos
xchg
mov
cs
rcrl
jne
push
cltd
inc
addl
sub
sbb
sbb
xlat
test
ss
mov
test
test
scas
mov
sahf
fwait
pop
sub
cs
lea
pop
aad
pusha
and
jecxz
sahf
mov
test
bound
test
cltd
bound
insb
and
rcrb
cs
lahf
push
xchg
inc
fs
or
pushf
add
cmp
aaa
cmp
ss
sub
cmp
addr16
pop
addr16
jmp
add
repz
mov
leave
jb
xor
dec
lahf
stos
pop
or
jecxz
shll
fwait
je
fadds
das
test
stc
xlat
test
pop
and
push
xchg
and
add
ja
jg
ds
jmp
adc
cmp
scas
mov
jle
idiv
mov
dec
mov
fnsave
mov
fisubs
sbb
pop
fiadds
pushf
insb
out
and
std
std
jg
bswap
mov
adc
rolb
dec
mov
push
test
test
sbb
data16
stc
jg
push
xchg
jbe
push
xchg
mov
addb
xchg
insb
cmpsl
stos
out
ss
js
scas
lods
mov
into
add
movsb
sbb
loope
mov
push
jno
adc
xchg
pop
push
push
push
adc
push
aad
lcall
mov
pop
xchg
shl
mov
fwait
mov
shr
loopne
lcall
cmpsb
mov
xlat
mov
imul
fildll
xchg
sub
add
dec
out
xor
ret
and
jle
clc
pusha
jne
addr16
outsb
sbb
addr16
insb
cltd
mov
int3
jne
lods
packsswb
or
scas
fxtract
je
pop
push
sub
js
sbb
inc
and
repnz
cmp
pop
sbb
ljmp
movsb
push
add
sbb
jne
cmpsb
dec
icebp
dec
adc
hlt
mov
hlt
or
iret
sbb
notl
mov
push
dec
in
add
mov
cltd
rolb
addr16
sbb
testl
sti
pop
xor
jno
jno
jp
mov
lock
pop
mov
xchg
sbb
push
mov
mov
scas
adc
dec
push
fsubrl
aam
dec
int
dec
add
or
jecxz
add
dec
inc
xor
imul
ds
push
xchg
mov
aad
hlt
dec
hlt
iret
mov
lock
movb
mov
dec
in
or
mov
push
mov
add
addl
rcrb
fisttpl
jmp
mov
push
pop
mov
std
pusha
push
inc
push
cltd
pop
lea
dec
push
add
push
xchg
fs
ljmp
movsl
insb
xor
aas
loop
out
insl
in
cmp
stos
jb
or
ljmp
ja
inc
arpl
push
mov
fcmovnbe
int3
add
cmp
mov
sbb
mov
mov
dec
repz
mov
xorl
lahf
mov
hlt
and
mov
movsl
scas
stos
test
shll
xchg
jecxz
rorb
sti
mov
adc
jmp
dec
pop
sub
and
and
push
mov
or
int
inc
mov
js
movsb
insl
mov
call
call
pop
sahf
jmp
mov
mov
out
fnsave
lret
mov
jle
fsubrs
in
mov
std
dec
shll
mov
push
push
mov
lahf
leave
xchg
xor
outsl
xchg
or
lock
cld
fiadds
lods
sub
mov
jle
mov
pop
pop
mov
ret
mov
pop
sbb
cld
cld
cmpsb
mov
push
mulb
sub
and
xchg
insl
and
jne
pop
sbb
cltd
fidivrl
dec
push
jns
dec
xchg
or
into
cltd
add
scas
dec
xor
lret
pop
inc
test
fs
ds
sbb
or
mov
popa
cmp
outsb
xchg
shr
xlat
add
gs
cwtl
pop
inc
into
xlat
adc
pop
movsl
test
pop
stos
imul
mov
in
shl
fwait
call
or
xchg
andl
and
sub
in
test
lret
lcall
pop
pop
insb
fsub
in
mov
ljmp
mov
mov
cmp
js,pt
mov
in
push
and
xor
loopne
mov
into
arpl
push
xor
daa
aam
lea
ss
cld
scas
push
fmul
loope
hlt
dec
dec
mov
nop
loop
cmp
ds
pop
mov
mov
orb
mov
jne
inc
loop
jle
sbb
mov
sbb
test
adc
sbb
push
imul
pop
mov
negb
push
fisttpl
xchg
add
or
lret
push
add
inc
jl
mov
gs
sarb
cmpsb
sti
dec
jl
pop
mov
movsl
mov
out
icebp
jle
addb
lods
aam
xchg
shl
xlat
push
sub
inc
loopne
adc
out
out
fsub
inc
repnz
add
loop
movsb
pop
xchg
xor
cmc
fsubp
dec
dec
cmc
iret
sarl
dec
dec
jno
xor
add
icebp
ret
in
xor
mov
adc
and
aaa
popf
xor
dec
jb
test
add
jl
sub
out
cli
ret
xor
fisttps
adc
daa
cltd
adc
jno
mov
arpl
aad
and
mov
cmp
add
push
lock
repnz
xor
arpl
orl
inc
sub
cmc
jecxz
xchg
push
stos
mov
dec
arpl
lahf
mov
dec
pop
pop
aaa
popa
mov
sbb
insl
xchg
mov
aaa
fmull
pop
jecxz
andl
xor
in
xchg
ss
push
mov
pop
inc
and
inc
sahf
pop
test
insl
sub
adc
and
test
push
dec
dec
dec
pop
iret
rcr
loopne
outsl
push
inc
leavew
fnstenv
data16
pop
cmpsl
scas
clc
lods
jp
outsb
add
sbb
fisttpll
cmp
fidivrl
jecxz
scas
add
test
or
ficoml
mov
push
cli
cmpsl
lahf
repnz
adc
idivb
mov
push
cli
je
add
hlt
into
in
pop
add
daa
testb
dec
fmul
rorl
or
or
sub
outsb
out
data16
or
in
or
pop
repnz
mov
divb
jp
dec
fs
arpl
int
outsl
push
push
dec
jno
add
fsubp
add
cmp
inc
mov
js
lods
push
jp
xchg
rorb
fmul
js
fs
xchg
or
das
mov
xchg
lret
push
imul
sti
xor
push
ds
lds
cmp
push
jae
inc
xor
xchg
movb
mov
mov
sbb
jno
jmp
push
shl
mov
xchg
pop
mov
iret
inc
shll
stos
cwtl
subl
pop
inc
cmc
aad
xor
inc
sub
outsb
cmpsl
jmp
test
or
ljmp
xlat
imul
sub
push
cwtl
mov
ret
xor
insl
and
xchg
ss
rorl
hlt
mov
jne
fiaddl
int
jl
inc
inc
call
or
cltd
fldl
fst
bound
sahf
dec
push
std
mov
and
push
in
popa
js
outsb
push
scas
sub
add
mov
xorw
cli
mov
data16
sub
mov
sbb
outsl
aad
sub
inc
sub
stc
fsubrl
shrb
mov
mov
xchg
xor
xlat
cmpsl
xor
and
and
cmp
mov
inc
lret
cli
repz
jns
aas
pop
inc
dec
pop
push
pop
pushf
dec
pop
out
in
lcall
out
pop
mov
inc
icebp
or
mov
iret
inc
cmp
xor
add
jnp
loopne,pn
into
and
repnz
lea
pop
rcrb
add
arpl
pop
xor
sub
mov
push
sbb
xchg
mov
scas
inc
divl
mov
add
decl
lahf
int3
pop
stos
les
ja
add
repz
xor
mov
xchg
and
jp
cmpsl
xchg
sti
pusha
shll
jg
cmc
dec
insl
je
mov
push
test
nop
pop
fs
es
adc
in
lods
xchg
mov
inc
jg
fptan
push
mov
out
push
shll
mov
scas
cmpsl
inc
scas
mov
adc
pop
mov
in
cld
insl
mov
bound
xor
pop
pop
shrl
sub
roll
rclb
pop
cld
repnz
push
xchg
sbb
xor
je
inc
scas
imul
es
sahf
xor
adcb
mov
add
arpl
das
mov
and
imul
cmp
add
shrl
shl
adc
xchg
jne
sbb
lret
loopne
and
outsb
lcall
hlt
sub
jnp
pop
cmc
out
arpl
mov
in
icebp
dec
addr16
mov
out
mov
dec
push
shrl
mov
fsub
repnz
dec
out
shlb
test
xchg
popf
xchg
icebp
inc
sub
popf
xchg
adc
or
fidivs
rclb
lods
xor
jo
outsb
sub
enter
mov
add
dec
and
and
stos
fistps
sub
cmp
cmp
rcll
cld
sub
testl
and
scas
cs
jbe
and
cs
or
adc
test
clc
cmp
jmp
mov
mov
push
or
adc
inc
adc
xchg
negl
lcall
fsubrp
shl
mov
fstl
jns
inc
dec
adc
pop
mov
in
pop
gs
pop
dec
mov
inc
std
fiaddl
mov
scas
scas
and
stos
in
cmp
jno
inc
xchg
sahf
stos
or
xorl
ficomps
shrb
out
cmpsl
outsb
dec
lods
sbb
inc
js
ret
dec
lret
imul
decl
or
and
int
push
andb
lock
pop
fcmovnbe
stc
xor
gs
aad
push
pop
insl
loop
and
jp
mov
xor
mov
psllw
cmc
add
sti
cmpsl
inc
cmpsb
sub
mov
stos
mov
pop
and
sti
out
cltd
je
xchg
dec
hlt
sub
and
fiaddl
in
push
lea
mulb
mov
stos
popa
lods
or
sbb
and
pop
in
jmp
ja
scas
bound
xchg
mov
data16
mov
jae
loopne
pop
pop
mov
outsb
pushf
xchg
cmp
outsb
icebp
xor
repnz
add
cli
sbb
sub
into
insb
mov
sbb
inc
adc
cmp
lahf
pop
pop
outsb
pop
loopne
fistl
adc
or
testb
pop
lret
out
mov
and
xor
rolb
xlat
jecxz
cmp
jns
pop
and
push
iret
pop
arpl
dec
add
daa
ffreep
jp
imul
cld
xor
dec
dec
aas
xor
jae
insl
cmp
loop
out
ficomps
sbb
or
lds
push
jge
dec
adc
lcall
push
rorl
push
les
xchg
insb
rclb
lcall
xchg
sbb
inc
ret
aaa
or
addr16
push
fwait
inc
roll
mov
xchg
and
push
dec
popf
fbld
test
and
adc
jb
hlt
jbe
pop
stos
outsl
xchg
test
cli
es
mov
js
test
mov
dec
xchg
iret
lret
std
leave
cmpsl
stc
lret
incb
xor
xchg
adc
paddusw
mov
add
repz
clc
jmp
push
dec
imul
lock
mov
lret
bound
push
adc
int
mov
push
xor
es
int3
clc
xlat
mov
xchg
jo
pop
xlat
enter
clc
pusha
orb
pop
xor
out
push
mov
jp
test
cs
movsl
ret
inc
push
cmc
jecxz
and
in
fs
xor
xchg
insb
movsl
test
jo
and
adc
mov
mov
into
cltd
jns
outsb
push
xchg
or
jl
or
add
jp
hlt
ja
xchg
inc
and
xlat
dec
sti
lock
jo
inc
xchg
mov
scas
adc
das
sbb
dec
pop
xor
jae
mov
add
pop
lds
aam
add
push
mov
in
cmp
inc
lock
xchg
xchg
xchg
mov
lock
pop
insb
mov
imul
test
pushf
sar
ret
cltd
inc
rep
je
push
sbb
dec
lods
sub
mov
push
in
fildll
mov
int3
outsl
jg
add
movsl
inc
popf
ds
xchg
es
adcl
add
push
cmpsl
push
into
fwait
xchg
fsub
inc
fs
daa
mov
loop
mov
or
jnp
mov
jle
icebp
mov
jnp
jae
push
jg
arpl
xchg
sbb
dec
ret
scas
insl
lock
xor
aad
dec
into
adc
out
add
push
fdivl
and
adc
mov
rcl
mov
loopne
mov
enter
jno
out
popa
aam
sub
in
mov
insl
daa
sahf
mov
sub
cmpsl
fldl
aaa
outsb
mov
lods
add
ret
jno
je
sbb
xchg
jmp
data16
dec
pop
sbbb
jecxz
sub
mov
cmpsl
cmp
jecxz
push
in
mov
mov
es
mov
adc
mov
es
inc
in
imul
addl
push
into
push
add
mov
sub
dec
mov
repz
mov
push
add
sti
dec
mov
xchg
dec
cmp
push
out
push
fsts
loop
push
sahf
push
popf
sbb
dec
repnz
mov
inc
add
cmp
pusha
xchg
incb
cmc
mov
lcall
daa
stos
sbb
mov
mov
cmc
mov
pminub
xor
repnz
inc
ficoms
ficoms
lret
fimuls
lds
adc
pop
sub
divb
dec
sub
pop
sbb
jle
push
lock
dec
ret
dec
jmp
jne
jae
dec
les
inc
sti
mov
cs
gs
fsts
xchg
pop
sub
dec
rcrl
cmp
out
mov
jle
arpl
addb
lcall
stc
imulb
test
packssdw
cmp
push
cmp
jmp
out
cmp
push
pop
pop
int3
fstpl
rcr
sbb
sub
test
cmp
decl
jecxz
xchg
out
repz
int3
jecxz
xchg
sub
into
adc
enter
clc
sbb
add
inc
mov
pop
aad
test
dec
jecxz
jb
jae
dec
dec
aad
mov
jo
jnp
pop
ret
hlt
xchg
imul
xor
or
lock
ficompl
fiadds
daa
aam
stc
loopne
test
adc
xchg
jl
push
insl
sub
pop
cmc
int3
mov
ljmp
jne
add
pop
aad
lret
test
cs
rcr
pmaxsw
cmp
jno
int3
out
out
in
jge
add
push
jl
sub
and
and
mov
push
arpl
push
inc
pop
les
loopw
mov
mov
out
dec
jp
aam
jbe
sbb
bound
push
jnp
sub
push
xor
dec
test
aaa
mov
aas
dec
cmp
in
loop
adc
mov
xor
xchg
into
dec
outsb
push
xor
xchg
xor
mov
push
rolb
cmp
pop
sbb
clc
mov
shll
or
in
call
xchg
lods
lret
popa
sahf
fwait
mov
push
dec
xor
sub
testl
jns
push
enter
dec
xchg
push
imul
pop
sub
push
push
xchg
sbb
cld
pushf
push
lcall
jb
fsubl
data16
pop
lock
dec
or
lods
sti
mov
and
add
int
inc
das
sub
inc
aaa
jl
insb
sbb
jbe
aad
addr16
cwtl
sub
pop
jae
xchg
pop
nop
je
xlat
lret
jmp
xchg
stc
out
loopne
fdiv
add
add
lahf
cmc
mov
cwtl
data16
test
stos
mov
cli
cwtl
fimull
xor
aaa
cwtl
das
cld
push
mov
je
popa
mov
mov
sahf
loope
xor
rolb
orb
xor
fs
push
sbb
dec
aad
push
clc
or
mov
imul
xchg
sub
mov
mov
movsb
lcall
mov
enter
cs
pop
outsb
mov
add
mov
call
adc
or
adc
bound
dec
xor
sbb
pushf
add
and
cwtl
adc
cmc
mov
mov
pop
andb
outsb
insb
add
repnz
enter
out
ret
dec
cmpsb
add
fcomi
in
mov
dec
ffree
subl
inc
shl
add
movsl
add
pusha
or
gs
sub
inc
or
xor
push
sbb
loopne
sub
dec
cltd
fildl
insl
cli
loope
cmp
xchg
pop
pop
xchg
out
mov
test
stos
jecxz
sub
or
shlb
inc
xor
test
fldl
jne
sbbb
sti
stc
push
inc
xor
insb
mov
push
jnp
jle,pn
fisubl
xchg
xchg
call
xor
movsl
rorb
stc
mov
pop
int
je
enter
and
adc
shll
scas
loop
add
push
pop
pusha
mov
pop
andb
jmp
pop
xchg
push
ret
jmp
cs
gs
sarl
in
lods
ret
rorb
jno
cmp
sahf
cmp
popa
sub
mov
test
fwait
add
and
test
jmp
shll
push
cwtl
xchg
inc
push
clc
or
dec
sarb
mov
xchg
pop
inc
jae
xchg
ja
call
nop
xor
cld
std
fsubrl
aam
ret
sbb
and
inc
clc
loope
fdivrl
cmpsb
cmpsl
inc
inc
ffree
lods
popa
outsl
pusha
lcall
mov
insb
das
push
out
pushf
mov
cmpsb
pop
pop
mov
push
jb
icebp
push
fnstenv
inc
in
dec
xlat
push
xchg
mov
outsl
subb
sahf
pop
loop
aad
xor
xchg
jg
scas
in
pusha
enter
mov
sbb
pop
mov
outsl
jno
inc
pop
sub
push
inc
insl
jnp
test
sub
sub
into
cmpsl
pop
idivl
sahf
or
lock
lock
push
dec
rep
out
dec
arpl
call
mov
cli
daa
lock
lret
xor
inc
lahf
cmp
pop
sbb
inc
aad
push
popf
loop
push
test
inc
jnp
or
pop
test
stos
sub
ja
bound
lods
push
lcall
sahf
push
jmp
cmpsl
mov
mov
in
loopne
pop
ficompl
and
add
cmovne
push
xor
loope
sub
das
inc
xchg
inc
jmp
cmp
cmpl
aas
cld
rolb
pop
shll
ret
sbb
mov
cmp
icebp
cmpsb
add
pop
xlat
out
mov
ss
mov
pop
gs
mov
pop
daa
and
rclb
int3
pushf
andb
inc
jns
jae
fiaddl
popf
pop
push
and
push
daa
lea
and
psubsb
or
inc
addr16
mov
jle
pop
mov
pop
les
or
iret
out
shl
adc
jo
xchg
push
jle
hlt
inc
sub
xlat
jns
jg
xor
shlb
cmpsb
lods
clc
sub
fmuls
dec
dec
inc
std
sahf
sbb
mov
insl
inc
insb
adc
cltd
ret
and
dec
mov
and
loopne
ljmp
lret
ss
aaa
xchg
mov
les
xchg
divb
or
jecxz
and
fcomip
stos
test
jns
vdivps
xchg
xor
mov
pusha
cmp
dec
add
adc
mov
inc
xor
loope
sbb
lds
add
jmp
cmp
push
mov
xchg
pop
dec
popf
in
add
push
out
pop
daa
and
and
std
xchg
loopne
push
daa
idivl
xchg
out
adc
stc
cmp
ret
rorl
and
and
cltd
jnp
imul
outsb
xlat
test
insl
into
push
mov
xchg
jp
mov
fs
arpl
mov
adc
mov
daa
shrb
cmc
adc
jmp
neg
shrl
mov
push
in
inc
pop
lea
mov
incl
stc
popf
jmp
add
mov
out
ss
cmpl
mov
dec
sbb
insb
sub
xor
adcb
lods
lcall
or
push
in
xchg
jmp
jno
fcomps
test
jp
gs
dec
decl
sahf
cmpsb
dec
jge
pop
sub
fistpll
adcl
popf
inc
les
sbb
sbb
lods
fistl
leave
cmp
mov
iret
xor
int
cmp
and
mov
add
out
push
push
jbe
lea
adc
xchg
xchg
cmpsb
imul
push
js
adc
cmp
fmulp
mov
sbb
fs
xchg
mov
push
push
jnp
dec
xor
sub
es
dec
gs
pusha
pop
shl
dec
fldcw
mov
loopne
ja
shlb
sbb
lcall
lods
push
mov
mov
sbb
dec
pop
jns
aas
jae
pop
addr16
jmp
fwait
imul
pop
inc
xor
sbb
rcrl
dec
or
lods
mov
mov
repz
test
xlat
roll
jecxz
mov
subl
rcll
or
test
lds
mov
cmp
aas
fnstsw
xor
inc
lods
or
out
jmp
push
jp
jmp
xor
xchg
mov
fyl2xp1
dec
mov
push
ljmp
xlat
in
pop
jb
sub
jmp
idivb
push
cmpsb
pushfw
dec
pusha
fadd
popa
pop
frndint
mov
add
adc
shll
cmp
test
push
xchg
call
mov
movsl
or
test
mov
imul
or
addr16
shlb
cmp
stc
fwait
decb
out
mov
add
mov
or
jl
into
adcl
mov
in
push
in
inc
incb
cwtl
pop
cmp
mov
or
inc
dec
cmp
stos
pop
xchg
inc
inc
mov
out
and
push
adc
test
mov
or
jns
inc
arpl
jb
mov
and
cltd
test
adc
pop
push
int
push
in
or
lds
mov
sub
xlat
ss
jmp
mov
mov
or
movsl
int3
sub
push
add
and
sbb
pop
movsb
cli
loopne
dec
iret
jns
dec
mov
push
fpatan
pop
cmpsb
dec
aad
cmp
jmp
pushf
jmp
pop
and
xor
pop
cmpsl
or
ljmp
pop
pop
add
inc
xlat
in
daa
pop
xchg
fnsave
pop
out
sub
and
in
test
cmp
push
arpl
sarl
movsl
iret
dec
ljmp
add
push
mov
sub
ret
pop
pop
or
rorl
test
xchg
jno
mov
mov
adc
mov
pop
jnp
sbb
in
cmpsl
lods
cmp
in
inc
and
bound
jge
movsb
lahf
sahf
or
ljmp
mov
mov
adc
mov
jmp
add
sbb
pop
jne
in
adc
test
push
ja
or
nop
leave
fcomps
stos
lret
dec
pop
cmp
lcall
sub
mov
dec
rolb
xlat
sbb
or
jbe
pop
enter
xor
fildl
shl
cmp
mov
or
les
cli
gs
mov
pop
sub
adc
xchg
popa
cmp
cmp
xor
mov
jnp
mov
sub
pop
pop
fwait
std
cwtl
inc
mov
pop
cld
push
rcr
in
mov
ficompl
mov
sub
int3
daa
fiadds
cmc
lods
inc
xor
xchg
sub
leave
cltd
lods
scas
mov
into
push
inc
fcoml
enter
xchg
inc
jbe
push
inc
cmp
xchg
cmp
and
jae
xchg
add
ja
cmp
xchg
pop
int3
call
mov
jecxz
ja
pop
adc
jmp
or
pop
enter
lret
stos
imul
test
add
or
aad
dec
lods
mov
adc
mov
cmp
cld
decb
mov
ja
sub
test
stos
push
jp
rclb
out
aam
jno
outsl
out
inc
inc
shlb
mov
cli
aad
lods
test
and
iret
lock
cmpsl
xchg
call
ds
push
shl
add
out
mov
call
xchg
push
outsb
cmp
stos
mov
aaa
nop
imul
lcall
fadd
mov
repz
into
dec
in
jbe
insl
inc
bnd
adc
inc
in
movsl
stos
mov
mov
out
xlat
cltd
mov
outsl
dec
push
in
cmpsl
aas
cwtl
mov
pop
xchg
ja
int3
icebp
test
push
pop
xchg
jne
ret
aad
lahf
add
adc
or
jle
sub
das
test
jne
jno
pop
ja
mov
inc
inc
testb
mov
imul
mov
or
repz
mov
mov
dec
ret
mov
mov
mov
out
push
mov
es
loope
sub
out
sub
fldcw
mov
clc
mov
mov
fstps
aam
fs
lcall
push
xlat
decl
mov
dec
dec
cmpsl
shrb
and
sahf
in
mov
xchg
cld
cmpsl
cmp
jmp
xchg
imul
cmp
mov
or
mov
into
push
cmp
imul
ret
mov
xchg
inc
sbb
cmp
fsub
pop
ret
add
lahf
outsb
scas
lret
jnp
lret
adc
gs
dec
push
fistl
loope
pop
aas
push
jb
xchg
lsl
aad
and
and
xchg
push
pop
sub
fdivrl
adc
rcrb
lods
jg
or
mov
sbb
mov
jbe
bound
add
lcall
cmp
pop
clc
test
mov
xchg
dec
leave
xorl
outsb
inc
dec
lahf
add
mov
inc
dec
stos
fstps
sbb
adc
cmpsl
xchg
std
gs
daa
cwtl
pop
int3
mov
pop
jge
add
aad
inc
pushf
and
xor
jne
fbstp
mov
clc
mov
and
push
fnsave
jne
cmp
mov
inc
inc
dec
mov
in
jns
sbb
vmwrite
in
cwtl
mov
jb
jmp
and
daa
out
in
les
cmpsb
jbe
subl
loope
mov
inc
pop
js
adc
testl
mov
int
enter
xchg
inc
leave
adc
ret
ljmp
dec
loope
ljmp
and
aaa
pop
mov
scas
es
jb
stos
pop
jecxz
jg
out
shr
mov
fistpll
out
jle
mov
mov
cmpsb
mov
xor
in
push
sbb
cmc
stos
pushf
sub
pop
pusha
pop
mov
jecxz
push
ret
dec
sub
cld
sbb
mov
jge
ret
test
enter
test
mov
add
test
cmpb
ljmp
rcll
addr16
sub
insl
push
and
inc
adc
fldenv
or
insl
aaa
movsl
fmul
sub
xchg
cmp
in
leave
pop
mov
xchg
test
idivb
ja
sbb
adc
pop
jns
fisubl
loope
repnz
gs
out
insb
subb
inc
or
rcrb
xor
dec
dec
icebp
es
fidivrl
call
jle
mov
adc
push
pop
sti
or
push
popf
sub
dec
sbb
and
and
testb
lret
mov
adc
hlt
xchg
mov
outsl
int3
mov
jp
or
popa
sbbl
adc
movsb
and
dec
test
cmp
or
pop
mov
mov
jb
adc
push
cld
mov
cmc
shrb
sbb
loop
in
pop
addb
or
ds
sbb
fwait
jmp
pop
subl
jp
into
or
mov
ret
add
sub
in
rcl
addr16
fcoms
test
and
sbb
fdivs
es
gs
loopne
cltd
fcmovbe
inc
je
andl
rol
arpl
out
in
rcll
inc
in
pop
and
or
mov
nop
lahf
pushf
adc
ret
push
movsb
ds
add
imul
das
in
aad
fmuls
cmp
pop
scas
test
add
testl
push
add
jmp
ja
arpl
gs
insl
out
insl
int3
and
cmp
xchg
fsubrs
test
dec
or
pusha
fiadds
sub
test
mov
or
pushl
in
or
pusha
lcall
mov
out
repz
arpl
adc
add
pushf
test
xchg
lods
sbb
add
les
lods
rcrl
adc
sbb
and
and
in
cmp
jg
push
mov
in
pop
dec
stc
adc
mov
repz
mov
or
inc
cmpsb
sbb
insb
mov
and
sbb
mov
fs
sti
sub
into
inc
and
stos
or
ret
ljmp
mov
jle
push
movsb
and
int3
outsl
sti
into
jg
ds
sbb
xchg
xchg
cmp
int
mov
repnz
outsb
js
pop
fcoml
movb
je
xchg
lret
pop
rclb
daa
aaa
jge
negl
int3
and
cs
popf
enter
sub
dec
test
jmp
iret
push
jno
cld
push
jbe
mov
sbb
mov
arpl
stos
mov
jne
mov
adcl
xchg
xchg
adc
es
lock
push
out
rorb
gs
outsl
push
push
nop
ss
push
jp
in
mov
xor
idivl
scas
movsl
inc
xor
jge
lahf
pop
orb
les
xchg
push
iret
or
and
or
inc
test
xchg
loope
xlat
or
nop
pop
xor
int3
sub
adc
lret
arpl
jg
inc
dec
cli
leave
rol
mov
fcomip
push
out
mov
jo
and
aam
pop
lcall
mov
add
mov
adc
fs
sahf
cmp
mov
repz
mov
jnp
fidivrl
or
cmp
inc
jp
mov
push
inc
and
inc
jle
cld
xchg
xchg
js
fcompl
clc
mov
repz
adc
xchg
shlb
cmp
outsl
aam
in
mov
inc
std
xchg
lods
dec
add
mov
mov
test
jl
push
jmp
stc
jp
ds
arpl
xchg
insl
push
clc
ss
nop
movsl
adc
push
aaa
adc
xchg
in
negb
cmp
pushf
mov
cmp
fiaddl
jl
xchg
js
mov
inc
sbb
out
daa
inc
scas
jmp
and
push
mov
loope
movsl
sahf
sbb
adc
mov
ljmp
mov
mov
cmp
sub
inc
mulb
jne
stos
push
or
jae
inc
dec
mov
cltd
dec
sbbb
sub
mov
xor
jmp
pop
pushl
outsl
mov
dec
add
daa
int3
es
div
sub
cmpsl
hlt
lret
pushf
or
push
std
into
cmp
push
adc
mov
and
dec
add
pop
cmp
add
mov
outsl
fldcw
ffree
dec
sub
orb
hlt
sub
rclb
jmp
popa
xor
jo
adcb
pop
mov
leave
sarl
pause
pop
es
xor
pop
outsb
mov
jp
mov
out
pause
inc
popf
repnz
mov
insl
xchg
subb
push
outsb
inc
jl
xor
imul
aas
insl
mov
mov
mov
jnp
mov
jb
xor
lcall
ds
jle
divps
cmpl
and
pop
mov
popa
insb
push
fldl
pushf
dec
xchg
mov
pop
out
push
test
in
lahf
movsb
jo
lock
cwtl
lods
push
and
sub
or
cmc
mov
pop
imul
les
icebp
mov
jmp
outsb
xor
mov
scas
sbb
cltd
imul
mov
adc
xchg
ljmp
rorb
rcll
mov
and
dec
ret
ficompl
idivb
in
mov
adc
cmpsl
jmp
inc
lret
jmp
jne
inc
mov
mov
repz
fimull
loop
icebp
xor
push
cld
dec
negl
das
ljmp
into
jnp
sbb
push
mov
out
jbe
mov
lods
xor
js
lret
fstpl
stos
jle
inc
lea
sbb
sbb
psadbw
cs
js
inc
cmp
loop
jmp
enter
nop
dec
int
loopne
clc
into
outsl
or
mov
mov
push
je
dec
fstpl
dec
push
and
and
xchg
pop
pushf
mov
inc
sti
stos
mov
inc
std
daa
mov
push
mov
pop
out
inc
adc
xlat
push
jns
pop
insb
bswap
cmc
mov
sbb
push
add
mov
jne
or
and
lret
mov
mov
sub
xchg
pop
or
pushf
pmuludq
shll
dec
dec
pop
or
jo
and
sbb
sbb
jmp
or
add
out
xchg
ljmp
lods
or
mov
mov
aad
clc
mov
cmp
mov
xchg
sbb
jmp
xor
pop
imul
mov
cmc
add
cmpsl
and
insb
mov
jl
popf
loop
mov
ret
or
clc
inc
dec
or
sti
aam
nop
xchg
push
cmp
mov
lahf
or
leave
enter
stos
mov
out
mov
pop
sub
cmp
and
mov
in
lcall
push
hlt
xchg
and
cwtl
rorl
loopne
stc
adcb
rcrb
stos
pushf
mov
mov
iret
sub
insl
lret
sbb
jb
jnp
nop
mov
dec
cmp
pop
jne
imul
and
sub
sti
mov
mov
nop
xchg
sub
iret
cmpsw
pop
shlb
mov
jmp
lea
js
aam
in
pushf
arpl
push
bound
push
push
test
shlb
dec
bound
stos
add
addl
sahf
xchg
and
in
fsubrp
sbb
sbb
pusha
sbb
adc
imul
int3
push
jge
mov
jnp
push
cltd
adc
lea
int3
mov
cmp
inc
or
push
push
lret
data16
out
pop
mov
out
pop
aam
orl
icebp
loop
adc
inc
cmp
sti
int3
xor
sbb
icebp
leave
jg
lret
ja
fnstsw
adc
movl
mov
je
sbb
sti
jle
pand
lret
pop
adc
les
cmp
dec
cli
inc
pop
mov
or
out
push
dec
xor
test
shrl
popl
inc
leave
ds
pop
mov
xchg
div
fdivrl
jo
ret
in
sbb
jbe
push
ret
add
rorl
jne
aaa
or
sub
and
inc
shrb
xor
ljmp
in
mov
sarb
subb
or
cmpsb
add
aam
aaa
imul
sti
pop
add
inc
lahf
pop
test
addb
icebp
mov
aad
outsl
fmul
or
adc
mov
lods
push
out
add
sahf
push
pop
pop
movsb
xchg
imul
or
lcall
mov
inc
clc
imulb
pushf
push
stos
outsl
or
daa
mov
movsb
outsb
adc
adc
push
outsl
mov
dec
push
sub
scas
jns
daa
mov
cmp
pop
jg
mov
mov
push
int
adc
sbb
mov
cld
in
test
icebp
push
popa
ss
mov
test
mulb
add
inc
out
fwait
cmc
add
fs
sbbl
jle
xchg
into
movsl
lods
add
xchg
or
jo
adc
test
mov
ficoms
andb
movsl
cli
adc
pop
js
aas
subb
popa
jge
cmpsl
sti
les
xor
mov
sub
mov
ds
pop
fisubrs
push
das
aas
pop
mov
cltd
push
push
push
xor
and
sub
out
and
lds
xor
imul
lods
push
inc
lds
enter
shll
nop
or
jo
das
mov
xor
insb
cmp
inc
sti
cmp
not
cmc
int3
jg
in
mov
movsl
lods
jnp
test
loope
imul
pop
in
lcall
clc
mov
les
test
sti
jl
sahf
xchg
movl
inc
das
in
jb
jmp
or
loope
cmp
adc
test
es
add
or
cmp
cmpsb
and
hlt
aas
mov
nop
mov
fwait
xor
add
stc
test
aam
or
sbb
in
lcall
cmc
outsl
movsb
fisubrs
aam
in
or
xchg
mov
xor
jmp
inc
scas
dec
mov
pop
xchg
or
xchg
adc
sahf
inc
movb
aas
addl
sbb
fwait
dec
inc
jae
mov
add
or
jno
mov
das
inc
xchg
jns
cmp
mov
out
or
fstpl
mov
inc
pushl
sbb
or
and
adc
lds
dec
mov
mov
push
addb
cmp
addr16
sbb
movsb
and
mov
nop
clc
cld
les
push
orl
mov
imul
adc
push
jp
fldt
aaa
jo
arpl
mov
fisubrl
xor
leave
and
mov
and
clc
pop
fwait
jbe
movsl
mov
xchg
xchg
imul
xor
mov
stc
cmp
iret
les
mov
jg
pop
dec
inc
int
ficompl
dec
add
cmp
test
mov
ret
add
in
dec
into
js
ljmp
mov
dec
jge
hlt
daa
xchg
insl
xchg
mov
pop
mov
outsb
in
cmc
ja
aas
and
out
sarl
add
lds
lods
and
adc
leave
cs
dec
push
add
outsb
jb
mov
sub
ljmp
jmp
and
xchg
inc
pusha
cltd
push
lret
dec
movsl
daa
stos
or
das
cmp
iret
fisttpl
dec
jne
stos
sti
sbbb
jle
shrb
imul
pop
fidivrs
mov
bound
mov
cwtl
jnp
lcall
inc
add
jno
ret
and
dec
push
inc
xchg
hlt
push
jl
cli
ljmpw
adc
push
stc
mov
cs
pop
or
xor
decl
mov
js
add
cmp
xor
lcall
shl
mov
mov
fwait
lret
dec
jnp
loop
mov
add
in
or
int3
xchg
xchg
into
scas
jno
aas
aad
ds
sub
adc
jne
icebp
test
fistl
jbe
inc
add
inc
int
ss
ret
or
es
outsl
loop
push
out
xchg
and
pop
mov
or
cli
push
push
push
sahf
shrl
jmp
repnz
fists
push
or
mov
out
bound
nop
mov
push
rclb
icebp
push
pop
movl
jle
cmp
enter
out
inc
or
adc
pop
repz
or
jae
push
ljmp
push
popf
cmp
mov
push
sub
ljmp
add
repnz
jg
dec
fstpl
mov
cmp
shl
sub
testl
insl
and
push
xchg
fldl
push
movsb
sub
sub
fdivrp
sbb
mov
sbb
leave
outsb
adc
shrl
push
cmc
add
xor
iret
fidivs
jp
orl
xchg
adcl
test
push
xchg
pmulhuw
fmull
push
jno
bound
dec
test
insb
mov
lods
inc
sbb
sbbl
mov
jbe
scas
push
mov
in
popf
pop
or
ljmp
call
push
sub
mov
sbb
inc
loopne
mov
leave
or
inc
dec
add
sub
pop
mov
cmpsb
cmp
add
pop
dec
lock
dec
or
xor
or
xchg
out
frstor
cmp
push
mov
cmc
fcmove
dec
push
push
pusha
jno
sbb
mov
aaa
mov
aam
loopne
ficoms
push
mov
dec
mov
xor
pop
or
mov
or
scas
jno
inc
sbb
movsl
xor
jno
pop
or
insb
stc
jecxz
int3
pop
or
sti
fisubs
push
adc
mov
cmpsb
cmp
shrb
inc
push
movsl
pop
sbb
addb
insb
in
dec
jne
or
les
mov
out
dec
jl
cmp
xchg
std
mov
jg
fdivrs
dec
out
xor
je
and
push
adc
mov
pop
jnp
lahf
hlt
xchg
mov
and
movsb
pop
out
mov
js
xor
pop
push
jo
push
push
outsl
test
pop
mov
sahf
call
push
push
outsb
imul
sbb
mov
lahf
sahf
pop
test
lods
mov
and
xchg
push
test
add
and
mov
and
pop
fs
mov
xchg
add
add
gs
cmp
and
lret
aaa
or
shrl
aam
dec
pop
mov
mov
mov
jle
lret
lret
ljmp
pop
pop
inc
ds
and
push
adc
adc
fdivs
xchg
repz
shl
je
push
rorl
std
jg
mov
xor
and
mov
test
ja
je
mov
std
jb
popf
sar
lahf
mov
xchg
scas
sub
incb
or
ljmp
outsl
incl
mov
dec
cmc
mov
in
enter
rcll
out
out
adc
dec
lods
inc
or
or
test
cmp
int3
cmc
jno
repz
dec
into
xor
in
xor
xchg
sbb
cld
lea
mov
cmp
push
push
pop
mov
fxam
shl
lea
int3
xor
inc
push
daa
outsb
bound
js
cwtl
dec
xrelease
jbe
add
mov
and
xor
xor
adc
mov
pop
mov
loopne
mov
in
xchg
leave
push
pop
daa
imul
sbb
inc
les
adc
ds
mov
call
lret
jge
roll
les
cmpl
mov
iret
xchg
pop
mov
xor
mov
adc
out
pop
stos
int3
js
jecxz
je
shrb
mov
lret
ficomps
sub
clc
cmp
es
lds
push
or
xorl
xchg
mov
sbb
sub
jl
test
stos
in
or
lcall
setno
fidivrl
out
imul
push
pop
out
aaa
xchg
inc
mov
mov
in
mov
cmp
mov
xchg
or
adc
sub
mov
cmpsb
or
ljmp
cmc
loope
call
jnp
outsb
cmp
sti
push
mov
stos
push
push
dec
and
mov
cmp
cmpsb
leave
mov
or
mov
dec
fistps
lahf
xor
jl
dec
jp
lock
pop
mov
sbb
imul
dec
inc
stos
xchg
pop
rol
out
push
mov
mov
and
lea
xlat
enter
jg
daa
scas
clc
js
hlt
push
nop
pushf
shr
mov
aad
arpl
dec
pop
mov
push
cli
pop
shl
scas
xchg
scas
jbe
clc
rclb
and
stos
push
push
std
adc
js
jno
lret
in
rcrb
loope
mov
loope
pop
push
pop
cwtl
lcall
xor
push
push
ja
and
jp
push
mov
mov
data16
jge
mov
jmp
adc
add
push
inc
fsubrs
cmpxchg
loop
je
test
or
aad
enter
sbb
adc
ret
xor
sub
dec
movsl
sub
pop
cli
mov
iret
aas
mov
aaa
adc
inc
cvtdq2ps
and
xchg
sahf
cmpsb
pop
push
pop
sarb
ret
in
inc
push
in
mov
jnp
popa
ja
jmp
arpl
popf
jg
int
out
movl
ret
scas
add
xchg
addr16
xor
outsb
notb
ret
push
loopne
mov
lea
jle
add
lea
or
fildl
jbe
rcr
fcmovne
push
inc
or
dec
icebp
and
pop
push
sub
cmp
popf
lock
mov
filds
xchg
dec
inc
int
sarb
sbb
leave
in
jp
cmp
adc
btc
out
sub
std
mov
cltd
scas
push
xor
rol
int3
mov
test
rcr
mov
testl
outsb
insb
rol
xchg
loop
leave
mov
push
daa
sbb
ret
and
imul
mov
mov
inc
out
dec
sti
pushf
dec
fldl
hlt
mov
mov
shll
jp
jbe
add
iret
lods
outsl
mov
mov
pop
xchg
gs
pop
and
outsl
pop
sbbl
or
inc
inc
xchg
dec
test
inc
out
jns
xor
dec
cmp
or
xor
and
add
xchg
cmp
ja
cld
cmc
les
gs
sti
lcall
sti
pop
pop
pop
in
inc
ja
xchg
rcll
mov
cmpsl
loopw
ret
dec
xor
aas
add
call
jo
cmp
xor
std
push
js
jp
loope
dec
and
dec
or
ss
icebp
shrl
dec
repnz
mov
push
lock
pop
mov
fucom
xchg
mov
sahf
mov
fisttpll
xlat
push
imul
adc
mov
lret
push
add
or
push
xor
inc
in
in
ss
sub
iret
pusha
es
jnp
xchg
pop
push
js
jge
pop
mov
lods
pusha
cmp
cwtl
mov
dec
pop
andb
push
push
rcll
sahf
aam
leave
js
cmc
loope
pushf
mov
jg
scas
out
call
lea
mov
mov
inc
loope
push
pop
pushf
inc
stc
sub
dec
dec
lret
mov
rorl
lods
adcl
loope
jmp
add
or
lahf
fwait
mov
mov
into
out
ret
movsl
inc
jno
pop
inc
mov
xchg
push
sub
test
push
gs
adc
orl
sub
pushf
jmp
shll
inc
insb
repz
jmp
mov
sbb
fwait
gs
orps
xor
inc
xor
xchg
xor
or
scas
shl
js
add
or
insl
outsl
stc
sub
pop
repz
jle
imul
nop
repnz
pop
mov
and
pop
and
clc
aaa
jle
xor
dec
mov
mov
mov
shll
int3
mov
add
fidivl
mov
imul
sbb
add
cmp
xchg
lea
aam
clc
popf
shl
cld
rorl
mov
repz
pop
lcall
push
ljmp
testl
lods
push
mov
negl
dec
in
dec
stc
fcmovbe
test
and
xor
mov
jmp
pop
dec
mov
xchg
dec
push
push
xchg
clc
jnp
aam
xor
sarl
in
jns
loop
sbb
jg
sbb
les
and
push
push
dec
cmp
mov
sub
push
subl
sub
mov
shll
les
clc
adc
sbb
push
ret
mov
push
xchg
push
xor
pushf
into
sbbb
push
pop
loope
dec
test
pop
push
cltd
enter
or
xchg
ja
cmp
insl
add
lds
cmp
ret
push
outsl
enter
adc
cld
ja
repnz
jo
cmpsl
outsl
or
adc
xchg
xlat
xor
loopne
repz
xchg
adc
sub
push
stos
js
dec
xchg
mov
mov
repz
xor
mov
fldcw
out
add
jae
xchg
and
lods
in
mov
ror
xchg
dec
dec
stos
stos
and
mov
loopne
lods
sub
ret
cltd
push
jle
jg
in
mov
addr16
sbb
cli
aaa
out
pop
fnstcw
lret
inc
mov
inc
jbe
fadds
jae
hlt
add
pop
pop
fs
pop
cmp
push
add
mov
xor
inc
ret
je
adc
add
pusha
adcl
mov
stos
mov
mov
mov
fwait
sti
lods
adc
push
jae
jmp
or
jl
hlt
mov
cwtl
movsl
ss
test
loopne
sub
das
in
ficompl
inc
mov
fsubs
xor
lret
ljmp
lea
mov
or
rolb
and
or
test
jmp
lcall
push
sub
adc
mov
mov
lahf
mov
add
dec
push
mov
fdivl
cmp
inc
cld
xor
or
lods
iret
cld
add
dec
ljmp
dec
or
xor
mov
sub
mov
out
mov
inc
pop
lea
icebp
cwtl
call
fbstp
nop
sbb
xor
jg
movsb
or
xlat
cltd
movsl
pop
int3
roll
shll
sub
jnp
aam
xlat
sub
jne
jno
inc
or
lods
xchg
movsb
rorl
pushf
aam
cmp
clc
push
pop
fwait
in
popf
dec
movsl
pop
dec
pop
test
jmp
pop
enter
pop
fmul
jae
mov
add
out
push
push
lods
jle
sarl
pushf
sbbl
cmp
in
xor
pop
xchg
lds
out
stos
jp
cwtl
jmp
dec
pop
filds
sbb
mov
or
pop
fimull
cli
enter
cli
insb
xchg
test
into
xchg
xor
arpl
add
push
fld
icebp
stos
stc
les
sub
je
popa
push
xor
scas
in
out
in
orl
test
rcll
std
xchg
push
or
int
cs
adc
pop
je
cli
push
and
inc
inc
inc
pop
popl
push
mov
arpl
lods
orl
insb
cwtl
xchg
push
scas
inc
cmp
loopne
push
out
jmp
mov
shll
push
lret
inc
pusha
xchg
lcall
and
xchg
int3
jl
add
jg
js
mov
pop
out
fbld
out
xorl
inc
out
inc
test
shlb
test
rclb
bswap
jp
ret
pop
ds
inc
inc
mov
out
mov
andl
icebp
sbbl
push
iret
int
cmp
in
or
aad
mov
shlb
pop
stos
divb
xchg
xchg
in
push
mov
sub
lods
aam
mov
rorb
pusha
push
push
jbe
testb
cmp
jmp
fildl
scas
outsb
fisubrs
mov
popf
adc
jbe
pop
adc
and
les
fsubl
scas
and
dec
cld
dec
outsb
dec
xor
jne
inc
mov
sbb
cmc
insl
jmp
pop
adc
and
push
pop
insl
shr
mov
mov
lahf
mov
icebp
ss
loopne
andl
stc
lods
xchg
movsb
sbb
dec
icebp
lods
fidivl
hlt
jp
jo
lret
mov
shll
je
fcmovne
cmp
mov
inc
popa
jno
add
stos
or
addr16
pop
sbb
inc
fldenv
xchg
outsb
sub
ja
sbb
ret
xor
addr16
jge
cmp
ret
test
fstpl
std
inc
adc
xchg
lret
scas
ss
pop
push
lods
sahf
imul
mov
and
inc
cwtl
xor
push
nop
xchg
and
push
out
data16
enter
or
sbb
loop
out
mov
inc
mov
jo
sbb
popf
dec
hlt
test
mov
lods
lret
xchg
cwtl
aaa
jge
pop
andb
sbb
subb
inc
mov
and
push
subl
fs
dec
xchg
mov
and
cld
sub
movsl
push
loop
jne
lock
sub
lret
push
xor
cld
mov
out
sub
add
inc
loopne
jo
adc
push
inc
xchg
sub
cld
jo
xchg
sbb
fldcw
pop
jg
movsb
cmpb
push
mov
dec
and
and
sub
jno
xchg
mov
dec
add
push
pop
mov
jns
roll
lds
imulb
out
cltd
cmpsl
mov
scas
xchg
sub
rcl
popa
and
pop
fistpl
bswap
bound
fnstenv
cwtl
mov
jge
inc
outsb
cld
dec
cmpsb
xchg
imul
xchg
pushl
into
xor
mov
jp
inc
dec
xor
psraw
stos
lret
xlat
shlb
adc
shrl
inc
cmp
and
cs
or
sbb
in
pop
xchg
cmp
add
xchg
call
xchg
aas
ss
ss
jecxz
adc
leave
and
ja
mov
jp
pop
ljmp
xor
mov
test
repz
lods
jae
enter
jno
addr16
and
arpl
pop
pushf
xor
aaa
ret
popf
out
mov
data16
sub
xchg
shrb
xchg
mov
popa
stos
arpl
inc
mov
dec
nop
sub
ja
inc
jl
inc
xor
jmp
push
push
icebp
add
or
inc
loope
adc
sub
add
lods
jb
mov
mov
mov
and
clc
mov
inc
and
push
inc
xchg
pop
in
iret
add
sbb
scas
xchg
ret
jno
frndint
or
cmp
fcoml
rcrl
xor
jecxz
movsb
lahf
mov
xor
mov
cld
xor
mov
xchg
jmp
movsb
js
dec
pop
dec
xor
xchg
add
divb
mov
add
repnz
movsb
cmp
push
adc
mov
cmp
lret
incb
mov
andl
dec
fcmovbe
loop
das
sub
mov
lods
andl
loop
dec
jo
cs
out
mov
iret
lret
mov
fcmovnb
jnp
test
mov
push
aam
in
lods
sbb
xlat
sub
jp
mov
dec
push
cmpsl
push
adc
mov
and
cmpsb
or
movsb
fldenv
popf
fstps
and
iret
jle
shrb
stc
out
pop
cwtl
iret
nop
out
pop
adc
pop
mov
mov
adc
cmp
mov
cmc
xchg
jge
cmp
xchg
repz
into
add
dec
xor
jmp
rcr
and
mov
mov
aam
jmp
out
mov
fstp
fldt
mov
lret
sub
sbb
shll
push
bound
xchg
cmp
daa
aad
or
stc
lods
dec
xchg
aaa
ds
loop
out
or
aam
mov
mov
hlt
imul
or
inc
and
std
ret
clc
mov
pop
js
ds
or
mov
std
fsubrs
rol
out
shr
cmpl
mov
dec
sbb
cld
push
cmp
movsl
jne
push
push
idivb
add
repz
js
mov
aad
jnp
out
xor
dec
lods
xchg
inc
add
cli
inc
andl
bound
stc
inc
jmp
add
int
add
jns
sarb
jns
icebp
call
popf
mov
flds
aas
jb
mov
mov
pop
xchg
pusha
lds
jno
jo
add
xorl
stos
push
sbb
push
test
pop
push
outsb
lret
mov
fmul
mov
fisttps
iret
daa
andb
aaa
pushf
fistl
in
xor
loopne
je
jnp
xchg
xchg
scas
or
lods
sub
mov
out
es
in
lret
jns
xorb
inc
cwtl
add
mov
sbb
data16
inc
xchg
xchg
ret
jl
or
pop
stos
cmp
aaa
jae
cwtl
adc
lret
dec
mov
mov
pop
call
jnp
mov
ja
stos
sti
test
outsb
mov
rcr
pop
stc
pop
out
mov
push
add
mov
and
in
mull
jbe
lcall
lcall
test
and
add
mov
pop
in
mov
pop
jecxz
test
pop
inc
mov
cmp
in
push
cmp
insl
mov
mov
rolb
aaa
cmpb
dec
push
mov
std
outsb
stos
hlt
cmp
pop
cmp
loop
fstpl
cmp
shlb
std
lea
pop
std
lds
fwait
mov
cmp
or
sarl
leave
sbb
xor
lods
inc
push
mov
inc
gs
mov
in
sarl
lds
jmp
rorb
xor
xchg
leave
jge
mov
cmpsb
xchg
cli
ficomps
push
outsb
push
cltd
xor
test
sbb
mov
sbb
sbb
imul
xor
mov
mov
hlt
mov
sarl
ljmp
in
cli
mov
lods
sub
std
push
insl
cmc
in
cld
pop
cmp
shll
test
test
and
add
cmp
mov
loope
in
lret
stos
daa
rclb
bound
push
push
lcall
xchg
mov
add
add
sbb
ret
sub
xchg
xor
scas
adc
push
add
and
mov
adc
mov
ja
andb
cmp
mov
movb
cmp
jbe
out
lcall
xchg
push
adc
add
popf
inc
mov
test
sub
sbb
inc
out
repz
pop
loopne
ja
cwtl
lds
ja
add
pushf
push
dec
outsl
xchg
inc
lcall
sub
addl
mov
or
mov
sbbb
sbb
push
loop
rcrb
add
shr
icebp
jmp
xchg
xchg
jne
or
dec
imul
sbb
nop
sub
insb
insl
les
jg
push
add
insb
daa
mov
icebp
dec
lret
call
fs
and
popf
cmpsl
mov
xchg
jmp
jg
repnz
cmp
cmpsb
es
mov
cmp
mov
push
push
fistps
in
xor
jmp
mov
mov
cmp
daa
es
mov
addb
and
push
mov
mov
loop
repnz
adc
cmc
lock
inc
cmp
sub
mov
mov
xor
sub
jnp
sbb
dec
out
mov
ljmp
inc
mov
push
add
xchg
pushf
mov
sbb
jne
mov
aaa
lret
outsb
mov
sbb
fprem1
nop
jp
shll
xor
push
into
pop
or
enter
sbb
test
mov
test
xchg
mov
pop
inc
mov
ja
xchg
or
dec
into
add
and
cmp
aam
out
lcall
lods
pop
into
int3
rcr
lcall
jb
push
adc
stos
aam
lcall
lcall
cmp
in
xor
dec
das
cs
pushf
es
inc
test
jp
sahf
or
xchg
mov
adcl
int
and
inc
movsl
rcll
jb
xchg
or
jg
pop
mov
addl
aaa
jnp
cmp
gs
mov
pop
push
dec
jp
lods
mov
fldenv
movsb
fstpt
imul
scas
out
fwait
mov
loop
ret
pop
movl
inc
pop
std
sub
test
xchg
inc
cmc
adc
push
insl
arpl
ljmp
or
lret
roll
imul
add
pop
fucomip
cld
jae
repz
push
repz
xchg
sub
lock
dec
out
outsl
inc
adc
cmpsb
adc
and
or
mov
daa
aaa
jo
mov
clc
stos
fistl
add
int3
hlt
ss
jp
mov
jne
roll
cmp
mov
dec
lret
push
jns
mov
push
jae
pop
ss
sub
scas
cmp
loop
jg
and
push
out
lods
iret
rorb
xchg
jg
adc
pop
mov
sub
jnp,pn
mov
cmp
int3
subb
sub
jg
sbb
jge
imul
addl
fadds
shll
stos
scas
mov
cld
fmulp
cmp
xchg
jns
jb
cs
in
jae
mov
sahf
popa
in
fldcw
fsubrl
pop
das
stc
pop
push
xchg
push
xchg
pop
subb
mov
cmp
xchg
orb
insb
push
in
mov
outsb
insl
mov
dec
cmp
cmpsb
sbb
scas
rcll
imul
in
xchg
jl
mov
ljmp
sbb
jno
jp
add
hlt
test
loop
mov
jle
inc
pop
out
out
pop
mov
add
pop
add
and
out
mov
outsb
jmp
stc
loopne
cmp
test
test
fstl
sbb
pop
daa
mov
rcr
sub
aas
sbb
into
cmp
cld
iret
aad
fwait
inc
add
jge
icebp
lret
inc
or
sar
sbb
adc
ret
mov
aas
lods
cs
lods
jne
push
sub
lret
push
arpl
test
mov
sbb
test
xor
push
lea
sub
mov
cmp
mov
clc
jae
dec
fisubrl
dec
outsl
mov
xchg
sub
iret
sub
ljmp
or
jno
push
xchg
push
notl
xor
mov
jecxz
mov
lods
bswap
cmp
mov
cmpsl
sub
sahf
xor
cltd
or
xor
xlat
je
lret
cmpsb
xor
and
ljmp
jp
je
or
lahf
aas
pushf
pop
and
or
push
jecxz
shlb
iret
mov
mov
cmpsb
in
lret
inc
pop
mov
cltd
jno
mov
mov
aaa
test
push
push
inc
sub
clc
mov
dec
loop
ret
xchg
pop
loope
in
into
jno
pop
pusha
dec
daa
xchg
pop
mov
sahf
dec
mov
or
mov
cmp
les
jp
push
add
mov
inc
fcomi
movsb
mov
pusha
dec
pop
daa
or
shll
inc
lock
outsb
out
in
bound
jns
ss
push
adc
lret
pop
pop
sub
cmp
push
movsb
xlat
dec
sbb
sub
cmp
sbb
inc
push
sub
cli
pop
fidivs
jae
mov
ret
repz
lret
xchg
int
pusha
cmp
aaa
stos
and
inc
and
mov
or
push
sbbl
outsl
jnp
mov
arpl
mov
into
adc
add
jge
sub
push
je
or
es
loop
push
decb
cmp
mov
testl
aaa
andb
inc
pop
and
enter
xchg
fisttps
pop
dec
sbb
cmc
sub
scas
sbb
out
xchg
scas
mov
mov
es
pop
psubsw
xor
mov
cmc
mov
dec
mov
sub
repz
sti
lds
mov
fsubrl
mov
add
jg
adcb
push
adc
fildl
fisubs
nop
mov
pushf
sarl
jmp
ja
sbb
mov
scas
cmp
xor
in
imul
cs
testb
adc
rcl
or
popf
sub
inc
scas
ja
imul
xchg
mov
lods
popa
mov
mov
sbb
mov
or
dec
in
sahf
mov
sahf
rorb
ljmp
nop
sti
mov
negb
fdivrs
add
add
mov
mov
fnstsw
mov
or
sub
add
mov
cwtl
or
sbb
push
push
mull
push
pop
lods
imul
lds
add
push
jo
xchg
cli
adcb
ret
lods
data16
push
xchg
fsubr
loopne
fldcw
add
jbe
repnz
add
push
fwait
jns
sub
dec
cs
jns
insb
and
push
shl
icebp
pop
sub
call
sti
mov
fisttpll
divl
cli
lods
movsl
xchg
xor
pop
scas
xchg
movsb
dec
mov
add
mov
gs
add
lcall
jnp
add
nop
les
mov
push
mov
sarb
pushf
pop
pop
mov
mov
sti
cltd
cwtl
cld
fs
std
sbb
loope
repz
mov
jg
adc
ret
xchg
pop
ljmp
hlt
repz
aad
test
dec
pop
mov
movsb
adc
pop
push
lahf
daa
xchg
rclb
mov
lea
cmp
lods
cltd
mov
imul
pop
mov
fucomi
mov
mov
dec
push
or
dec
and
in
sahf
jno
mov
mov
mov
repz
ror
mov
mov
arpl
stos
mov
jmp
cwtl
xor
out
pop
jns
mov
and
jl
push
movsl
roll
insl
dec
mov
push
push
sahf
std
pop
sbb
push
xchg
jbe
xchg
xor
or
mov
stos
sub
push
mov
lret
inc
stos
jnp
movsb
mov
jge
insl
mov
xor
and
jge
mov
mov
nop
mov
and
jmp
cwtl
add
push
imul
mov
dec
xchg
repz
mov
and
scas
out
add
pop
inc
push
leave
inc
fwait
xlat
add
inc
test
cli
fwait
sbb
cmp
int3
mov
adc
jmp
lods
xlat
rorb
frstor
dec
sti
lahf
cwtl
pop
inc
insl
ja
iret
xor
sub
push
imul
xor
rcll
je
data16
cs
mov
jge
mov
push
xor
mov
andb
add
inc
nop
xor
xchg
std
and
xchg
dec
mov
fcmovne
dec
aad
sub
gs
iret
sub
sbb
std
xchg
sbb
sub
scas
data16
pop
xchg
add
icebp
aad
nop
or
test
ljmp
xchg
push
mov
mov
mov
mov
sub
mov
cmp
stc
or
sub
or
mov
imul
xchg
xchg
push
push
popa
push
stc
pop
sub
cmp
xor
cmp
push
pop
jo
sbb
mov
push
loop
push
xchg
lret
push
pop
push
cmp
mov
jle
ss
add
leave
ljmp
and
cmp
icebp
mov
mov
cmpsb
loope
inc
cmpsl
add
jns
xchg
out
push
scas
and
je
jg
adc
pusha
cmpsl
aas
inc
pop
jg
outsl
mov
cmp
push
push
lcall
psubd
aad
jl
outsb
xchg
pop
push
scas
push
shrb
adc
mov
cmpsb
dec
jl
xchg
mov
in
dec
push
adc
cmp
fsub
cmp
cmpsl
lret
ret
rdmsr
nop
or
jo
xchg
push
sbb
lods
add
out
lea
cmpsb
inc
lods
stos
in
push
fidivl
sub
sbb
xor
pop
push
mov
inc
sbb
pop
ljmp
mov
negb
stos
push
pop
outsl
dec
lahf
cld
cmpsl
cmp
lods
pop
sub
mov
movsl
or
stos
int3
nop
jae
add
addr16
dec
dec
sahf
sub
int3
push
and
push
movsb
add
mov
ja
test
inc
xchg
pop
pop
jno
mov
jecxz
mov
sub
inc
lds
andb
mov
or
je
fistl
sub
cmp
lcall
cmp
ds
in
in
sub
dec
fucom
out
lock
push
pusha
inc
add
sbb
daa
insl
mov
cmp
mov
xor
fsub
orb
sarl
test
inc
loopne
int
or
fildl
jg
inc
add
mov
imul
sbb
sbb
dec
sub
out
sbb
frstor
dec
movsl
js
xchg
fs
pop
inc
cmp
dec
lahf
dec
adc
mov
jbe
jle
into
mov
jl
lds
ret
shlb
in
cltd
mov
inc
hlt
xlat
xor
sub
inc
dec
push
in
aad
or
mov
test
in
popf
xor
repnz
outsb
dec
dec
fimuls
mov
test
shl
imul
xlat
jp
mov
add
xchg
aaa
jb
faddl
dec
inc
test
bound
lds
mov
insb
out
add
and
cmpsl
cmpsl
aam
jne
jne
mov
cmp
popl
sbbb
or
into
dec
ds
test
mov
pop
cmp
out
mov
or
pop
inc
sub
loopne
int
mov
lret
std
mov
loope
pop
shlb
dec
push
pusha
addl
dec
fnstenv
inc
xorl
and
mov
mov
pop
or
jmp
out
sub
in
xchg
mov
lahf
adc
in
test
cmp
cmp
cmp
mov
mov
add
les
ss
jp
jb
cmp
lret
sbb
mov
aam
mov
ja
lods
test
inc
psubsw
mov
mov
sub
mov
stos
cmc
inc
sub
pop
and
pop
push
pop
push
pop
or
jb
xchg
jo
adc
fdivs
ficoml
xchg
jecxz
xchg
loop
dec
insb
pusha
dec
mov
ret
in
xchg
outsl
inc
pop
callw
push
ljmp
or
sbb
bound
pop
push
adc
sbb
add
aad
lds
lret
out
dec
push
and
mov
lods
xor
xchg
das
decb
jmp
adc
ljmp
pop
leave
push
sahf
test
leave
sub
sti
fldenv
xor
push
inc
cltd
jle
xchg
dec
dec
gs
dec
add
in
testb
pop
xchg
sbb
aad
pop
mov
add
xchg
gs
psubsw
push
dec
xor
mov
pop
dec
and
dec
scas
xchg
pop
movsl
pop
mov
xor
or
mov
cmp
sbb
test
clc
pushf
jne
mov
push
sbb
stos
dec
inc
out
jg
nop
inc
push
test
xor
xorb
cmpsl
cli
sbb
adc
enter
push
shll
rcl
nop
aas
pop
inc
sub
cmpl
push
sahf
jmp
lea
xor
pop
pop
sub
subl
loope
movb
pop
mov
int
push
mov
fwait
xor
loopne
ds
inc
inc
cmp
xlat
stc
jno
push
push
or
jmp
lods
push
test
mov
sbb
sbb
cmp
stos
incb
jl
cmp
push
jmp
jg
out
jnp
push
push
jge
sub
mov
repnz
mov
mov
bound
daa
mov
cltd
and
xor
xlat
fsubs
std
jno
push
cli
mov
pop
push
cmp
jp
iret
dec
dec
roll
inc
fdivrs
insl
pop
sbb
lret
out
nop
sub
pop
and
cmp
jae
shlb
rclb
mov
cltd
leave
sbb
sub
pop
mov
jecxz
enter
xor
out
sbb
fadd
mov
into
cmp
mov
mov
cltd
inc
push
jo
scas
js
leave
aas
pop
xor
outsb
mov
adc
addl
mov
mov
lcall
pop
scas
clc
in
push
and
jmp
xchg
xchg
add
adc
xchg
pop
pop
negb
outsb
cmp
adc
add
push
repz
jp
mov
icebp
inc
mov
stos
and
lea
or
mov
jae
in
and
mov
pop
lods
test
sub
lahf
push
mov
dec
dec
aam
in
ljmp
or
outsl
and
in
dec
xchg
fdivrl
ja
imulb
in
gs
pop
pop
adc
pop
aas
mov
fdivrs
jns
xchg
scas
gs
loopne
mov
nop
ret
mov
add
and
sbb
cmpl
insb
and
jle
inc
or
xchg
bswap
cmp
jl
adc
jge
fdivs
mov
aad
dec
sbb
or
cs
fs
push
lret
push
icebp
mov
jge
dec
clc
rclb
mov
jo
jne
dec
test
ret
xchg
insb
add
sub
push
jnp
int
shr
cld
push
lods
mov
cmp
sbb
nop
fisubrl
iret
testl
xlat
inc
scas
or
xlat
mov
rolb
mull
bound
insb
in
mov
out
subl
jne
mov
lahf
ficoms
pop
sti
gs
scas
ret
loop
push
sbb
stos
in
inc
call
cld
dec
sub
sbb
shlb
push
push
inc
bound
xlat
xchg
add
mov
jmp
xorl
jno
jb
pop
cs
mov
mov
jecxz
mov
out
inc
jle
mov
jb
das
jmp
das
mov
xor
mov
cmp
jae
mov
jno
ds
xchg
mov
sub
arpl
cmp
leave
pop
aaa
mov
mov
ret
adc
cmp
shrl
mov
mov
mov
jg
jmp
fiaddl
xchg
cmpsl
cmp
imul
pop
out
movsl
sbb
loope
sahf
cmpsl
jbe
data16
mov
sahf
and
lahf
imul
adc
pusha
push
shr
pop
mov
push
jmp
pop
mov
xor
sub
sahf
dec
xchg
stos
mov
sbb
sbb
add
adc
mov
push
add
xchg
movsb
jp
mov
jbe
jbe
mov
or
sub
inc
data16
xor
shll
loope
inc
add
mov
mov
stos
inc
sub
xor
mov
jmp
dec
imul
movsl
sbb
xor
pop
ds
mov
imul
jae
repnz
das
into
stos
adc
and
push
mov
hlt
mov
fcmovb
repz
mov
jp
sub
xor
xor
dec
cwtl
subl
adc
imul
in
mov
and
scas
and
and
inc
jge
add
cmpsl
jne
cmpb
lods
and
mov
lds
xor
test
ss
sub
jl
fcompl
lahf
jle
ljmp
in
icebp
mov
movsb
jo
cmp
nop
loope
push
mov
test
std
pusha
clc
mov
icebp
inc
shll
lods
cmp
or
es
imul
mov
idiv
mov
scas
and
mov
mov
adc
mov
pushf
arpl
adc
push
stos
mov
lea
out
or
mov
fwait
mov
sbb
popf
mov
aad
push
xchg
fcom
icebp
std
sub
push
out
sub
jmp
xor
lods
imulb
inc
js
negl
js
push
jge
fimull
rcll
imul
push
lret
cld
add
jmp
fnstcw
std
arpl
loope
jnp
je
sbb
inc
sbb
cwtl
lea
adc
push
sbb
insb
cmp
cmp
xlat
or
lahf
mov
push
outsb
addr16
jp
les
lret
in
out
hlt
mov
mov
jnp
dec
push
xchg
push
xor
inc
dec
lea
aaa
lahf
mov
cmp
cmp
pusha
jbe
into
sub
push
adcl
xchg
stos
test
repz
xor
add
fldcw
sbb
push
sbb
test
jae
cmc
in
push
dec
push
push
sub
das
fucom
adc
cs
mov
push
xchg
mov
mov
into
sub
mov
inc
mov
cmp
or
das
mov
xchg
sbb
fcoms
mov
outsl
mov
xchg
pop
xchg
das
lahf
xchg
sub
add
cmp
xor
dec
push
leave
in
lds
xchg
jno
and
out
mov
aaa
shr
in
jb
adc
arpl
int
test
jl
std
fistl
mov
or
cmpsl
push
roll
scas
cwtl
mov
mov
das
xor
inc
lock
cmp
mov
xor
mov
and
and
leave
inc
mov
mov
mov
lds
mov
es
rorl
xchg
add
lret
jge
sbb
loop
cmp
fsubrp
lret
xor
int
xchg
int3
dec
aad
stc
movsl
cmp
dec
aas
std
cmpsb
mov
lret
fcomip
test
leave
jbe
stos
dec
jb
cmp
cs
mov
adc
jo
aaa
jno
incl
xor
ljmp
cmpsl
popa
xor
mov
mov
fcoms
ret
lret
adc
xchg
rcl
push
pop
mov
pop
outsb
add
lahf
aas
movsl
stc
movsb
lods
lods
fisttpll
mov
imul
xchg
lcall
xchg
jmp
sbb
dec
push
subb
ja,pn
lods
clc
out
mov
add
or
aam
sarb
test
cmp
push
lret
mov
jb
push
imul
mov
lods
inc
or
mov
cwtl
das
dec
mov
and
xchg
rorl
je
jl
pop
stos
pop
cmp
cltd
mov
xchg
cmpsb
ficoml
sub
sub
push
mov
mov
push
ffree
jl
xor
pop
cld
hlt
scas
sti
xlat
lahf
jmp
or
jbe
xchg
pop
mul
cmpsb
loop
test
xchg
jp
jbe
ljmp
pop
push
fists
test
jge
xorb
shll
sub
pusha
mov
imul
xorl
jp
js
and
lret
adc
sub
out
rclb
incl
jae
xor
subl
cs
or
flds
push
sbb
cmc
mov
in
pushf
out
int3
insb
pusha
repz
popa
mov
push
or
mov
adc
sarb
stos
rcl
jns
and
inc
int
inc
cmp
xor
lret
sahf
dec
add
mulb
cmp
sub
pop
incb
pop
test
outsb
lcall
lods
add
push
or
leave
mov
sbb
push
mov
in
mov
movsl
popf
xchg
mov
into
inc
imul
and
push
rcrl
addr16
sbb
notl
mov
cltd
bound
shll
xor
add
movsl
out
sarb
or
dec
in
xchg
lods
jp
pop
pop
int
mov
add
shrb
mov
leave
popa
jb
out
lcall
arpl
or
std
outsb
inc
in
and
fs
movsl
pusha
xchg
xor
sti
pop
mov
jo
loop
cmpsb
sub
xchg
stc
in
mov
mov
jmp
xchg
or
aaa
pushf
loopne
fs
sub
out
call
hlt
enter
out
into
test
mov
xchg
push
pop
mov
lock
rolb
cs
mov
jae
pop
inc
out
vphaddbw
test
lret
inc
jb
and
and
lods
and
jge
rcrb
out
and
or
popf
orl
pop
out
dec
xchg
mov
bound
jnp
subl
pop
dec
fimuls
push
sbb
dec
cmpsl
fisubrs
fsubl
js
jnp
inc
mov
dec
sub
sbb
pop
dec
jmp
jle
mov
mov
inc
jg
pop
mov
push
pop
lahf
xchg
inc
insb
jl
int3
arpl
shlb
sbb
arpl
mov
or
jmp
xor
outsl
ljmp
lcallw
outsb
idiv
dec
jbe
mov
ja
inc
aam
je
xchg
cmpb
fdivl
shl
cltd
sub
sub
ljmp
pop
dec
xchg
cmp
dec
dec
add
inc
decb
je
aad
push
sbb
ficomps
pop
dec
divl
add
lahf
pop
bound
int
in
jb
adc
icebp
push
add
sub
divb
cwtl
out
cmp
cmp
sub
fwait
cli
gs
pop
scas
push
pop
int3
cmpsb
lods
cmp
insb
pop
les
cmpsb
inc
push
jb
fdivrs
sub
shl
stc
or
cmpb
fwait
add
mov
add
push
out
call
ds
inc
add
gs
jns
add
mov
xorb
out
push
xchg
jb
jge
pushf
fnstsw
push
sbb
push
push
lcall
stos
xchg
mov
fcompl
out
sbb
adc
cmpsb
ljmp
dec
jnp
push
cld
xchg
pop
stos
dec
mov
arpl
pop
js
pop
rclb
pop
adc
cmc
je
pusha
jb
dec
jg
bound
lods
fnstsw
inc
lock
xchg
add
and
add
lods
xor
cmpsb
call
add
enter
rol
add
fidivrs
lock
stos
adc
and
in
mov
jl
cmp
dec
push
arpl
popa
xchg
mov
sahf
lret
int
add
adc
daa
sbbb
mov
loopne
pop
add
pop
pop
mov
sub
sti
xor
mov
xor
loop
mov
leave
add
add
dec
dec
lret
insb
xchg
jl
inc
es
daa
push
je
test
sar
lds
mov
pop
dec
loopne
flds
push
mov
mov
sub
out
xor
int
and
or
jge
arpl
push
clc
xchg
jg
mov
inc
push
sti
push
xor
mov
js
icebp
enter
aas
and
sub
push
mov
push
xchg
dec
insl
loop
lock
push
mov
cmp
sahf
xlat
test
scas
jno
lret
inc
adc
stos
cmpsl
ljmp
dec
jp
enter
push
in
insb
hlt
lods
inc
clc
fimuls
cs
push
lcall
sbb
dec
out
cmc
cld
jne
fnstenv
mov
in
fidivs
in
out
in
aaa
ret
adc
push
stos
adc
fst
pop
dec
repnz
sub
in
or
les
std
hlt
add
sub
or
jae
add
mov
xor
and
mov
out
pop
popa
cwtl
out
mov
cmpsb
pop
cmpsl
in
cmpsl
push
dec
loop
mov
mov
daa
dec
rorb
cmp
das
mov
call
js
sti
adc
in
out
mov
ja
movsb
pop
inc
out
push
push
popf
xchg
std
jb
add
pushf
movsb
fwait
push
lret
mov
jae
in
repz
fmuls
scas
jnp
xchg
mov
jb
sub
pop
jl
aas
mov
adc
mov
mov
popf
inc
dec
popf
fwait
ja
adc
cli
cmp
stos
pushf
cs
int
sbb
cmpsb
adc
mov
cmc
test
xchg
lret
jp
xor
sub
jae
xchg
hlt
into
fdivl
aam
sbb
mull
push
adc
mov
mov
or
mov
push
movsb
adc
sbb
lahf
jl
ficomps
or
adc
shll
xchg
cmp
jg
stos
push
andl
test
lods
into
and
testb
cmp
jnp
dec
pusha
ljmp
gs
xchg
mov
add
mov
jne
sub
add
push
testb
into
es
inc
mov
adc
out
or
jmp
fldl
or
xchg
ljmp
and
sub
int
cltd
enter
int3
xchg
or
mov
inc
repnz
fildl
push
pusha
movsb
push
into
lods
cmc
mov
push
xor
mov
mov
or
xor
xchg
cmpsl
pusha
inc
mov
or
mov
adc
jnp
imul
push
dec
enter
divb
mov
jo
mov
cmp
cwtl
sub
mov
fstpt
sti
mov
xor
pop
rcll
add
jmp
push
pop
push
mov
outsb
or
mov
or
mov
push
outsb
fmuls
mov
clc
xlat
push
popf
pop
add
add
pop
sub
fstpl
jp
xchg
jbe
add
jmp
push
xor
and
inc
lcall
push
sub
dec
aas
or
xor
loopne
cmp
sarl
mov
mov
push
enter
push
adcb
dec
stos
mov
inc
aam
ljmp
in
mov
jae
pop
sub
xchg
mov
inc
sub
and
nop
jecxz
sbb
arpl
mov
pop
pop
pop
stos
in
inc
push
loopne
pop
mov
adc
fiaddl
inc
pusha
xchg
pop
lds
lahf
js
or
aaa
call
fadds
jnp
aaa
popa
add
and
xchg
stos
mov
pop
mov
xlat
arpl
inc
lret
inc
aas
pop
inc
mov
sbb
adc
mov
movsl
mov
dec
sahf
dec
mov
mov
arpl
push
rcrb
mov
aam
cmpsl
dec
shr
aam
inc
pop
lock
out
nop
mov
les
jo
dec
and
aaa
and
stos
shl
mov
jne
call
je
jmp
ljmp
xchg
mov
inc
fwait
sub
fs
mov
jmp
test
insb
or
or
inc
sti
pop
ljmp
hlt
rol
or
and
loopne
xor
stos
ja
std
ficompl
leave
stc
in
mov
mov
imull
js
cmp
push
popa
inc
xor
adc
aas
aam
xchg
xor
bnd
nop
inc
mov
jp
add
xor
int
imul
dec
les
push
inc
inc
mov
mov
xchg
mulb
nop
mov
js
xchg
adc
aaa
les
push
insl
cmp
mov
lahf
push
mov
xlat
mov
data16
jmp
jl
inc
xor
int3
jl
loopne
mov
mov
lahf
inc
fldenv
stos
arpl
jno
int
mov
adc
movsb
insl
dec
sbb
repz
mull
andl
sbb
xchg
xchg
or
jo
loopne
fisubrs
mov
jle
lods
movsl
repz
ud2
aad
arpl
in
mov
jl
mov
in
ljmp
inc
add
mov
xor
pop
pop
icebp
adc
inc
std
jge
jne
out
das
int
and
es
or
lods
pop
pop
cmc
out
mov
xchg
test
dec
sub
lods
sub
dec
xlat
movsl
ret
mov
and
sub
std
sub
fcmovne
iret
addr16
jmp
ficoml
or
out
scas
jp
sub
or
nop
or
mov
rorl
sub
jo
jge
adc
cld
and
popa
mov
insb
in
jbe
inc
shlb
cwtl
push
jbe
mov
mov
cs
xor
out
leave
mov
adc
mov
pop
mov
bound
int
lds
ljmp
shl
leave
mov
enter
cmp
lods
mov
pushf
repnz
add
frstors
arpl
ffree
jb
cmp
lahf
mov
test
cltd
mov
push
repnz
lods
pop
jge
popa
mov
mov
mov
mov
leave
notb
test
stos
repnz
out
es
xchg
pop
out
jb
mov
pop
mov
stos
cmp
dec
testl
popa
lret
cli
shlb
mov
inc
jge
clc
cmp
enter
sbb
sub
inc
imul
cmp
mov
pop
std
adc
xchg
push
xor
pop
fwait
pop
pushf
jb
loop
sbb
stc
test
stos
ja
pushf
jns
mov
mov
cmp
and
pop
add
jl
push
mov
and
mov
lods
out
mull
loopne
adc
mov
rep
xadd
sahf
lods
mov
add
test
out
subb
or
lahf
mov
scas
fnsave
mov
nop
and
pop
cs
add
cltd
sbb
das
pop
lret
iret
cmp
xchg
pushf
adc
lds
stc
jecxz
rcll
xor
mov
je
sbb
imul
pop
rcrl
lahf
in
pop
es
mov
scas
jnp
lods
jmp
sbb
pushl
jp
or
jmp
jnp
lret
pop
iret
int3
lea
cs
sbb
adc
dec
pop
mov
push
mov
das
add
xchg
rcll
cmp
cmpsb
cmp
pop
lods
test
xchg
and
xchg
negl
aaa
jge
scas
in
scas
in
mov
mov
mov
mov
sbb
jae
push
fwait
mov
nop
scas
add
and
sbb
aad
mov
push
ja
sbb
mov
mov
sbb
dec
negl
negb
fsubl
imul
lock
test
xchg
ret
mov
mov
push
lret
movsb
icebp
dec
mov
xchg
test
xor
les
inc
push
mov
xor
test
or
mov
lock
xor
and
mov
pop
mov
jp
or
and
cmpsb
or
jg
mov
jg
xchg
adc
pop
mov
mov
or
jne
sarl
cmp
scas
insb
xchg
fisubrl
mov
test
cmpsb
mov
jbe
ds
xor
mov
mov
fs
inc
xor
test
mov
adc
fistl
sub
mov
cltd
inc
inc
mov
loopne
subb
popf
nop
fistpl
lcall
xchg
mov
push
push
or
js
or
gs
xchg
aas
sub
sbb
mov
push
add
pop
out
xor
jae
out
pushf
jmp
or
ret
clc
loope
sbb
pusha
out
bound
and
fdivl
xchg
xchg
or
mov
cmp
fists
sbb
popa
mov
test
nop
leave
push
xlat
scas
fdivl
xchg
pop
jge
out
pop
int
lret
je
jne
inc
push
cmpsb
and
ret
out
repnz
into
jae
ret
popa
insl
ret
mov
pop
mov
mov
mov
pushf
insb
mov
iret
shlb
xchg
sbb
or
inc
dec
pop
cmpsl
ljmp
test
and
sub
mov
or
or
out
pop
idivb
jle
adc
and
ficoml
mov
fs
shlb
xor
xchg
cmp
cmp
shrl
ret
cmp
outsb
xchg
cld
dec
sub
push
inc
cmpsb
sub
mov
cmp
jne
pusha
test
into
jnp
ja
mov
push
shlb
xchg
and
xor
xchg
adc
das
push
leave
fdivs
push
imul
xchg
adc
into
call
lahf
jb
xchg
arpl
iret
pushf
pop
stos
movsl
call
or
and
push
ss
pop
mov
mov
ss
out
sbb
mov
popf
std
jecxz
xchg
stos
mov
xchg
sub
mov
adcl
sub
push
xchg
push
fwait
sti
pop
nop
ss
or
daa
lret
cmpl
lret
add
pop
pusha
mul
jge
cmpl
mov
add
outsl
sub
and
pusha
in
and
fs
bound
lret
sbb
loop
push
dec
enter
mov
xor
add
popa
movsl
mov
test
xlat
or
or
jge
cmp
cmpsb
xchg
jo
push
sub
dec
or
sbb
push
dec
out
div
cs
push
mov
insb
mov
mov
bound
jmp
inc
xor
and
jae
outsb
das
out
pushf
mov
inc
xchg
pop
push
pop
test
inc
in
pop
fadd
mov
adc
or
shlb
dec
nop
loope
inc
and
and
sub
lea
sub
lock
fidivrs
scas
ret
push
adc
stos
or
iret
dec
test
adc
dec
dec
mov
push
in
enter
and
out
lret
mov
xchg
sbb
in
shll
pop
dec
pop
push
repnz
outsl
push
pusha
mov
lods
int
test
js
and
xor
push
int3
and
les
xlat
pop
mov
adc
movsl
mov
add
aas
mov
movsb
sbb
mov
push
fwait
pusha
rolb
dec
push
and
mov
mov
jae
sbb
lret
iret
pop
arpl
add
xor
and
int
push
fs
ret
lods
lcall
insb
enter
lds
fimull
dec
jmp
mov
repnz
sub
in
lock
and
push
insb
inc
divl
jg
pop
mov
ljmp
pop
nop
orl
pop
xlat
cmp
cmp
inc
ljmp
in
shlb
sbb
mov
pop
and
ret
push
test
sbbl
push
aaa
daa
cld
aam
mov
add
out
inc
sbb
inc
in
es
int
aaa
jp
mov
in
scas
rclb
xor
lock
push
into
sbb
mov
sub
icebp
daa
mov
cmp
mov
or
sbb
stc
jae
mov
push
cmp
je
lds
aam
dec
sub
bound
fucomi
push
mov
movsl
imul
and
movsb
cli
arpl
jge
push
addb
dec
out
cmc
or
daa
enter
sub
and
js
fisttps
mov
cltd
lcall
xchg
inc
stos
bnd
inc
test
aad
inc
mov
outsl
jbe
jbe
pop
adc
in
pusha
xlat
in
push
mov
inc
pop
or
jle
mov
lret
cmp
je
sbb
or
sub
push
dec
insl
inc
test
cmp
pop
add
js
jbe
lods
push
mov
cmp
mov
arpl
outsl
adc
mov
in
jo
cmp
xchg
and
fwait
ret
in
sub
mul
push
imul
das
push
test
pop
arpl
frstor
push
push
or
pop
lds
mov
pushf
lret
push
bound
testb
sbbb
shll
aad
outsb
sbb
lcall
cltd
das
leave
in
and
adc
nop
xor
dec
xor
pop
aaa
stos
jp
dec
in
pop
data16
das
sbb
pop
fidivrl
repz
testb
add
fnstsw
int
subb
sub
loopne
pop
in
cltd
ljmp
stos
out
xor
adcb
sbb
outsl
les
mulb
mov
pop
fimull
in
pop
pop
push
shll
enter
cltd
cs
cmp
sub
jp
in
mov
cs
rol
rolb
push
js
cmc
and
xor
and
rcrl
pop
push
xchg
scas
shl
test
movsb
stc
cmpsl
jle
dec
pop
or
mov
imul
xor
call
pushf
sub
sbb
add
and
cmc
ret
push
es
mov
std
es
xchg
mov
shrl
sbb
dec
sub
inc
out
push
stos
hlt
xchg
push
cmp
dec
mov
ret
test
sbb
inc
das
cli
lock
mov
es
lds
xchg
loope
lods
lcall
add
loope
xchg
inc
imul
add
jne
ds
jle
jbe
push
movups
mov
test
mov
in
mov
lcall
jns
shrb
sub
pop
lea
mov
mov
cld
jmp
shl
and
xchg
sbb
xor
pop
pop
cmp
mov
push
mov
int3
mov
xor
pop
fstl
test
outsl
mov
je
jnp
nop
dec
adc
pop
out
push
and
add
fdivrl
imulb
fisubs
cltd
enter
inc
xchg
dec
push
mov
xchg
jae
mov
int
lret
push
push
ja
push
xchg
jl
pop
int
push
test
loope
or
push
mov
fisttpl
lods
cmp
in
xor
or
adc
push
out
mov
cmc
cmp
imul
movsl
cmpsb
shlb
mov
fbld
cmc
mov
ret
test
pop
inc
sbb
jns
pop
mov
arpl
mov
or
pushf
pop
sub
jne
xchg
lds
mov
ss
and
aad
mov
lods
mov
faddl
test
cmpsl
fildll
xor
pop
ss
mov
xchg
push
lock
popl
inc
jae
scas
sub
sbb
icebp
xlat
add
push
stc
jb
cmp
rorl
imul
jo
inc
adcb
out
dec
int
mov
mov
jmp
add
push
lods
inc
outsl
add
and
loop
add
dec
ret
ljmpw
sub
jle
in
jecxz
hlt
icebp
mov
xchg
xor
mov
xor
add
inc
fnstenv
test
lahf
cmp
pop
mov
mov
inc
push
sub
das
push
gs
jle
pop
jl
rol
xor
stos
or
cld
mov
aas
pop
lret
clc
aaa
shlb
jge
pusha
int
daa
pop
int
xchg
jne
and
call
hlt
loope
xchg
mov
pop
jb
cmp
xor
outsl
inc
test
jecxz
inc
sub
js
or
loopne
out
negl
pop
xchg
lea
mov
dec
rorl
ret
loopne
mov
pop
ret
pop
dec
mov
leave
push
sub
pop
inc
movsb
pop
icebp
inc
mov
sbb
sub
and
hlt
cmp
lret
dec
pusha
mov
cld
push
xor
mov
cwtl
lods
je
test
lds
inc
xorl
lret
add
sub
push
or
ficoms
xchg
push
push
push
or
pop
jnp
mov
test
cmpsl
ljmp
sahf
xchg
mov
xchg
test
and
inc
lea
sub
ret
pop
fwait
outsl
xchg
cmpb
xchg
xchg
xor
and
or
outsb
pop
pop
mov
and
jne
jge
sbb
addr16
push
lret
aam
subl
aad
repz
adc
adc
in
imul
mov
sti
jb
xor
fstl
sub
or
sub
std
push
cmp
pop
jo
adc
out
adc
ds
mov
sub
sub
mov
imulb
dec
sbb
push
std
in
or
xor
aam
mov
mov
push
addr16
pop
mov
lds
or
loope
nop
bound
or
and
mov
and
dec
es
cltd
or
add
jbe
push
cwtl
jp
adc
aad
xchg
jns
add
or
sub
daa
cmp
push
into
mov
cwtl
nop
out
add
pop
cmp
test
mov
clc
mov
mov
jns
cmpsl
sbb
fstl
xchg
mulb
lea
loop
outsb
movsl
mov
sarb
icebp
stos
les
lret
cs
notb
ja
pop
sahf
popa
aad
inc
cs
imul
loopne
mov
dec
lods
xor
in
inc
cli
dec
pop
dec
in
call
pop
dec
out
sbb
out
pop
loope
cmp
decb
adc
jl
js
mov
lcall
mov
repnz
jb
xor
add
push
fimuls
ds
rcl
adc
mov
mov
dec
lods
test
mov
adc
inc
loop
dec
or
mov
pusha
pop
inc
jp
sti
outsl
sbb
lods
lods
ljmp
leave
sbb
mov
fcmovnbe
pop
mov
daa
gs
sub
and
lea
inc
push
sbb
idivb
mov
shl
rcll
dec
fwait
inc
dec
lea
pushl
ficoms
lds
lcall
jno
push
fiadds
and
adc
jo
mov
mov
and
pop
jl
je
fimuls
mov
out
push
gs
dec
repz
push
hlt
or
bound
js
xchg
aam
sub
stos
div
fs
movsl
xchg
aam
push
and
or
fsub
xor
scas
aaa
ror
mov
repz
mov
sti
outsl
fdiv
jle
ret
or
cmpsl
sbb
out
aaa
mov
addr16
mov
jns
push
cmc
jbe
pusha
pop
shlb
leave
imul
jb
inc
jl
imul
mov
and
mov
xor
pop
loop
dec
out
inc
leave
adc
and
push
cltd
out
and
cs
pushf
dec
push
mov
seta
stc
pop
push
cld
mov
mov
pop
addw
fidivl
push
jno
test
sahf
daa
xor
aad
adc
mov
and
out
xchg
sbb
ret
xchg
mov
add
add
dec
aam
int3
fdivl
aaa
mov
push
test
sbb
cld
lret
aaa
mov
movsb
or
in
xchg
aaa
jecxz
pop
iret
adc
not
mov
push
pop
cmp
into
pop
cltd
pop
addl
aaa
mov
arpl
test
add
mov
js
mov
mov
sbb
test
jne
ret
outsl
cli
aam
xchg
xchg
dec
or
cmp
popf
mov
test
pop
xlat
sbb
lret
pop
adc
xchg
aas
ss
push
sbb
adc
mov
repnz
mov
bound
inc
mov
clc
sbb
lods
sbb
fldt
lahf
push
lock
dec
or
mov
into
shlb
pop
inc
mov
dec
outsl
cmc
je
fucom
imul
xor
jae
mov
xor
addb
mov
dec
bound
jl
lods
push
dec
movsl
and
mov
push
xor
push
pop
int
add
cmp
lret
in
pop
enter
cmp
push
testb
rorl
arpl
lea
outsb
dec
xchg
in
aaa
rorl
mov
push
lahf
hlt
rcrb
cmp
sarb
pop
outsl
jg
xor
sar
xorb
pop
aam
push
arpl
xchg
adc
les
jnp
add
outsl
or
sbb
xchg
scas
and
es
sbb
mov
push
pop
int3
negb
fstpl
xchg
push
sbb
cmp
jp
testl
xchg
pushf
loop
lea
pop
add
daa
jg
mov
nop
daa
mov
pop
xor
mov
cmpsb
mov
cltd
add
push
push
int3
insl
mov
pop
incl
adc
fiaddl
push
jbe
mov
cmc
cmpsl
cwtl
pop
cmc
fidivrl
rcll
aam
jp
push
jnp
push
ucomiss
mov
loop
jmp
jge
sbbl
nop
jge
enter
push
xchg
jb
mov
inc
cmpsl
dec
jae
or
xchg
scas
test
mov
add
outsb
ds
mov
shl
sub
and
les
sahf
aas
jno
aad
int
push
mov
xchg
jb
andl
xor
call
into
add
or
outsl
inc
xchg
or
pop
add
lcall
pop
inc
adc
sahf
dec
mov
inc
mov
pop
xchg
or
sbb
push
fsts
shll
push
fstpl
xchg
loope
fisttpl
cmpsl
fwait
pop
insb
data16
mov
test
ret
test
iret
pop
lcall
pusha
lods
mov
xor
int3
xor
add
mov
lret
ret
adc
rolb
pop
xchg
fs
inc
cmpsl
push
adc
cmpsb
jmp
insl
fdivs
sbb
rorb
inc
dec
xor
sub
fcmovu
lret
lahf
adc
mov
and
fs
in
fmull
xor
jo
inc
pop
inc
test
mov
cmp
dec
cli
int
roll
ljmp
or
cmp
ds
repnz
add
and
call
adc
movsl
inc
cmp
or
mov
shlb
mov
push
dec
mov
add
xor
sub
iret
in
jmp
jmp
pop
dec
rorb
xor
in
fsubrs
and
mov
fmuls
jmp
push
lea
sub
jge
mov
pop
rolb
push
or
mov
push
int3
mov
lock
fdivl
rclb
xchg
xchg
lret
movsb
adc
out
sbb
jo
jmp
ds
mov
data16
sub
sbb
mov
xchg
imul
out
leave
lret
cmc
xchg
mov
adcb
in
je
jns
stos
push
sbb
out
je
jnp
push
ja
add
ficompl
jnp
and
test
stos
into
bound
sub
lods
mov
add
fs
pop
dec
fstl
jmp
or
sbb
xor
mov
and
or
xor
test
subb
insl
dec
mov
inc
push
ds
or
jae
lcall
push
push
xor
pop
pop
lret
push
pop
mov
jne
add
call
push
xchg
idivl
add
inc
aas
fimuls
orb
sbb
mov
les
dec
nop
das
push
into
daa
ret
jmp
insb
adc
dec
jb
adc
jnp
sbb
xchg
jl
lret
hlt
inc
out
rcrb
outsb
mov
adc
imul
outsl
test
inc
or
enter
fmuls
push
inc
mov
mov
aad
inc
movsl
mov
jo
mov
sti
push
dec
cli
shlb
push
fidivs
or
or
inc
fwait
and
sub
stos
in
jl
sbb
rorl
inc
ds
pusha
int
insl
scas
mov
pop
and
ljmp
cwtl
stc
in
xchg
in
jmp
xor
mov
xor
dec
aas
add
in
pop
es
jnp
fimull
push
stos
and
xor
inc
cmp
adc
adc
das
sbb
push
push
cmpsb
ljmp
cmp
and
jg
xchg
imul
sub
mov
imul
mov
sub
imul
jae
xchg
decb
mov
or
out
inc
cs
mov
jb
sub
icebp
in
stos
call
cmp
push
roll
nop
pusha
fwait
add
lret
xor
cltd
fldl
xor
outsb
xchg
rolb
fsubrp
mov
imul
sarb
test
and
pop
pop
adc
pusha
sub
mov
xchg
cmpsl
and
sbb
mov
adc
daa
sub
lock
test
outsl
jae
sub
lret
fstpt
xchg
outsl
and
mov
ret
xchg
sub
push
ficoms
jnp
xchg
shll
inc
jb
push
cmc
inc
adc
ja
mov
hlt
int
cli
and
scas
je
jmp
je
fsin
ljmp
ret
shrl
ds
and
icebp
loop
lods
aad
pop
jns
scas
or
stos
xchg
loopne
sbb
das
mov
push
xor
push
shrb
das
cwtl
out
cwtl
ret
mov
push
lods
ja
inc
dec
cmc
push
mov
lea
nop
jne
test
negb
or
data16
lahf
hlt
or
fwait
push
mov
sbb
or
push
xchg
and
pop
loope
cwtl
out
scas
xorl
and
loope
frstpm(287
in
ret
std
inc
dec
scas
jmp
cmp
xlat
repz
add
aam
jo
mov
jg
dec
out
test
popf
rcll
push
popf
adc
inc
and
js
dec
scas
dec
pusha
xchg
fidivrs
call
ret
movsl
mov
out
cld
or
dec
add
in
or
pop
mov
ljmp
jmp
nop
ret
test
cmpsb
jb
test
mov
inc
in
gs
outsb
in
add
push
sbb
jae
rclb
jg
bound
dec
rorb
out
sbb
xor
push
movsb
sqrtps
jle
sub
repnz
inc
imul
std
std
in
jnp
outsl
outsb
adc
stos
fiadds
add
or
das
outsb
lods
shlb
lods
mov
mov
xchg
setle
xchg
outsb
inc
xchg
daa
roll
lret
cmc
push
std
adc
lock
jae
imul
loopne
push
andl
inc
push
add
mov
js
repz
and
pusha
inc
enter
lret
dec
loop
sti
popf
mov
pop
xchg
test
test
push
fst
adc
dec
inc
xchg
cmp
or
xor
mov
outsl
out
or
call
cmc
fidivrs
and
cwtl
lret
in
test
jl
inc
cs
sbb
aad
push
adc
add
sbb
xor
jge
je
out
loop
stos
mov
mov
lds
movsb
pop
fcomip
mov
pusha
sbb
xchg
jbe
jnp
and
mov
lcall
push
jecxz
cmpsl
xchg
cmp
fnstcw
mov
pop
cmc
int
mov
xor
ja
test
mov
cmp
push
and
pop
imul
fisubs
pushf
ret
aas
fcoml
push
hlt
cs
fmuls
fwait
das
inc
mov
inc
les
shl
mov
xchg
in
in
lret
jns
jl
aam
int
movsl
xorl
pop
rep
or
loope
mov
stos
pop
mov
pop
fwait
push
mov
lret
and
jno
inc
fwait
cmp
cmp
jle
int3
dec
shlb
jmp
fldt
add
aaa
in
add
gs
lods
mov
jmp
or
pop
iret
pop
mov
bound
or
mov
je
inc
ss
inc
pop
sti
cmp
divl
into
pop
cmpsb
and
lret
pop
jecxz
jl
int
add
pop
and
ret
push
lret
out
push
lret
enter
incb
adc
std
sub
icebp
pop
mov
adc
xchg
xchg
lahf
jae
jne
lret
inc
lods
test
ret
xor
lods
jne
sahf
mov
enter
sbb
mov
cmc
inc
sub
mov
or
inc
adc
lock
pop
xchg
in
int
shll
push
pop
icebp
out
gs
sbb
jo
jb
aaa
cmp
push
mov
or
pop
or
movsl
in
pop
movsl
jle
adcl
and
cli
loope
sub
dec
dec
cmpl
cmp
outsb
out
adc
push
outsb
mov
js
imul
test
mov
ret
out
cmp
les
pop
sbb
push
int
mov
stc
mov
or
adc
mov
sub
repz
or
aas
hlt
mov
test
mov
or
cmpl
mov
xchg
jae
jo
ret
jl
loop
mov
dec
inc
xchg
mov
pop
cmpsl
jg
in
scas
jae
add
ja
shl
xlat
pop
or
dec
je
inc
add
popl
movsb
cmpsb
movl
push
xchg
shlb
shrb
jg
sarl
rclb
cltd
and
sar
pop
pop
jnp
or
out
mov
in
loopne
mov
dec
jb
shr
sub
fnsave
mov
cmp
test
push
popf
in
pop
xor
les
pop
xor
fxch
popw
sti
dec
pop
cmc
xor
xchg
xor
and
fdiv
push
inc
in
adc
dec
ja
add
lcall
je
mov
lods
setae
and
dec
xchg
sub
sbb
adc
sbbl
inc
mov
jno
testl
pushf
dec
sbb
pop
xchg
sbb
inc
inc
pop
int3
fldpi
rclb
outsb
fwait
test
xchg
xor
cltd
cmpsb
pop
pop
shll
add
lods
inc
xor
and
test
aam
imul
push
repz
xchg
or
or
movsl
cwtl
xor
mov
stos
or
jb
jae
out
decb
sar
sub
je
push
mov
pop
lods
push
outsb
and
aaa
jns
leave
add
xchg
jmp
daa
ret
fdivrl
nop
test
arpl
test
pop
ja
jmp
mov
mov
repz
hlt
fiaddl
mov
stc
in
jge
ret
inc
jecxz
pop
mov
lds
sbb
mov
dec
aas
pop
stos
clc
add
mov
ret
cmp
lods
push
and
test
sbb
cmpb
jmp
add
cmp
or
push
mov
jo
dec
cwtl
dec
rcrl
inc
lds
lret
sbb
hlt
dec
cmpsl
ret
mov
inc
pop
or
movsb
cli
sbb
icebp
inc
cmc
push
popf
xchg
dec
push
jecxz
mov
adc
push
popf
lea
fisubrl
aas
or
iret
imul
dec
sbb
mov
jns
inc
popf
jb
rcll
call
out
xchg
gs
cld
inc
mov
leave
mov
jl
pop
lods
in
push
sahf
aam
dec
dec
lds
sbb
jnp
loop
outsl
and
xchg
cmc
mov
insl
sahf
mov
aaa
adc
push
push
leave
xorb
call
pop
in
xor
stos
pushf
jp
cld
jecxz
push
pop
fisttpll
pop
ret
fsubl
and
je
dec
aaa
rcrb
cltd
cld
sub
sbb
pop
mov
xchg
xor
inc
inc
fwait
sub
pop
mov
pop
cli
xchg
inc
pop
data16
jecxz
or
mov
les
jno
lcall
pop
test
dec
iret
repz
cmpl
sub
cltd
sbb
add
js
je
mov
rorb
inc
out
cld
dec
int3
clc
stos
js
stos
orl
in
adc
jp
lahf
call
rorl
fbstp
outsb
es
imul
stos
test
sbb
mov
mov
addb
pop
xor
rcl
imul
sti
iret
jae
arpl
inc
test
testl
xchg
xchg
test
pop
stc
ljmp
jae
adc
or
or
add
neg
daa
mov
mov
das
cmc
mov
mov
clc
lea
fnstenv
jne
insl
mov
lea
fidivs
xchg
call
lea
xchg
out
hlt
int3
pushf
sti
pop
jbe
in
add
adc
adc
imul
adc
xor
dec
fs
lea
push
out
mov
les
es
in
mov
aas
jecxz
fsubl
xchg
sub
cltd
test
popf
inc
mov
or
ret
cmpl
js
xor
add
aam
xchg
das
cltd
in
inc
int
inc
xchg
xchg
scas
jne
sbbl
jmp
pop
dec
or
aad
jg
push
xchg
mov
pop
mov
jae
fdivl
shll
xor
mov
mov
insl
cmp
imul
pop
pop
insb
int
rclb
fisttps
popa
mov
xchg
mov
add
pop
in
cmp
or
rol
sbb
lahf
clc
inc
and
push
adc
popa
mov
mov
xor
cmp
push
or
inc
out
ja
pop
mov
in
repz
and
adc
mov
push
insb
lods
jb
iret
std
aad
push
rcll
mov
icebp
inc
nop
sbbb
add
dec
jne
jbe
rolb
call
xor
mov
mov
adc
xchg
ret
scas
call
mov
and
or
jecxz
insl
inc
bound
and
cmp
jge
cmp
mov
sbb
sub
adc
ret
sarb
jp
mov
sub
mov
sbb
flds
add
sub
mov
sarl
cmp
mov
das
sbbb
cmp
sahf
stos
cmp
lds
cmp
js
dec
push
sbb
lods
lock
sbb
enter
mov
jb
jle
test
mov
icebp
sbbl
mov
sbb
lret
mov
mov
mov
adc
lret
loopne
mov
and
dec
out
enter
repnz
sbb
cmp
sti
pop
add
mov
pop
sub
pop
sti
cmpsl
lahf
inc
add
lock
mov
push
pop
fisttpl
mov
sbb
test
jne
es
pop
pop
fldt
in
xchg
xchg
inc
dec
loope
roll
mov
adc
adc
in
icebp
sbb
and
cmp
pop
int
mov
push
test
in
ss
shl
sub
mov
adc
adc
add
jge
dec
pop
idiv
idivb
mov
xor
outsb
cmp
mov
mov
sub
cmp
rcrb
insl
or
mov
mov
pop
decb
imul
adc
adcb
and
cmp
mov
aam
xchg
sbb
int3
dec
adc
inc
or
xor
xor
mov
jnp
insb
lds
inc
sub
jmp
hlt
mov
xchg
jne
xchg
inc
mov
dec
push
jg
jg
adc
xchg
cmpsb
ss
xor
sub
test
cmpsl
aam
fcmovb
les
lds
or
xchg
xchg
mov
push
cltd
ss
mov
mov
mov
mov
das
dec
repnz
lcall
jle
stos
movsb
push
xor
icebp
addl
sti
mov
je
mov
test
out
inc
mov
fsubs
sbb
push
hlt
inc
icebp
into
and
sahf
ss
sbb
pop
or
daa
mov
cli
pop
cmp
xor
mov
sub
loopne
add
and
xor
hlt
repnz
and
push
mov
jp
cmp
or
js
das
stos
mov
subb
jle
andb
mov
pusha
or
sbb
insb
adc
std
pop
fildll
arpl
scas
aas
jne
push
adc
dec
mov
adc
sahf
out
dec
into
fistpl
arpl
out
or
push
rorl
cltd
in
adc
mov
push
add
out
lret
jmp
jle
or
lds
push
sti
sub
enter
mov
cmp
jg
in
ret
cmpsb
leave
addr16
dec
fcoms
add
fisubs
xor
shr
addl
daa
and
test
adc
aam
cltd
test
es
xor
jmp
pop
aad
pop
out
lcall
sbb
mov
shlb
sti
mov
jg
lods
lock
int
subb
out
dec
movsb
gs
divl
outsl
mov
and
pop
mov
sbb
pop
dec
adc
call
lods
and
sub
into
jo
jecxz
daa
stos
cwtl
xchg
push
repnz
add
sub
pop
cltd
dec
and
fdiv
inc
cmc
enter
mov
cmpsl
adc
dec
mov
push
xchg
jp
xchg
in
dec
mov
jns
imul
out
pop
jnp
in
sti
mov
pop
xchg
push
stos
sbb
pop
popf
xchg
inc
ljmp
jg
sub
sbb
iret
mov
and
push
out
pop
mov
xlat
rcl
mov
push
mov
out
cwtl
jns
add
loopne
mov
sub
xor
out
shll
push
push
scas
cltd
or
mov
movsb
mov
int3
fmuls
repz
insb
push
iret
mov
push
jne
inc
add
loopne
pushf
test
lahf
and
xor
rcll
fs
test
cmp
dec
dec
pop
outsb
pushf
aaa
add
add
ret
ror
addl
shrl
shlb
sti
and
push
xor
inc
sbbb
xlat
jns
cmp
loope
clc
lds
lea
inc
push
or
fdivrl
out
movsb
push
sbb
jae
jl
movsl
xor
insl
or
outsb
sub
or
add
push
clc
mov
mov
fmul
fsub
or
mov
or
mov
addr16
jae
aad
jne
pop
and
xchg
lahf
push
xor
cmpb
testl
aam
add
pop
cli
inc
loop
outsl
js
jle
and
aad
and
clc
call
addl
mov
ds
pop
mov
inc
cld
pushl
jno
pop
pop
aaa
xchg
mov
sarb
jns
adc
lret
adc
cmp
repz
movsb
js
int3
push
cmp
mov
dec
push
je
out
mov
adc
movsl
pop
insl
mov
cld
mov
out
jo
andl
adc
sbb
int
ret
dec
mov
bound
inc
outsl
mov
or
movb
and
dec
sarl
rcrl
jle
orb
ljmp
push
sbb
mov
jl
add
stos
call
pop
icebp
add
stos
dec
pop
in
jecxz
cmp
insb
into
int3
push
push
and
xchg
push
lock
jo
mov
in
pop
outsl
mov
and
into
popa
inc
mov
pop
and
or
scas
jmp
cmp
jecxz
gs
lar
sbb
iret
xchg
adc
sbb
ja
mov
cmove
out
jne
mov
add
mov
push
orb
popl
bound
push
xor
jae
jne
ret
mov
cmp
rolb
mov
sbb
aam
pop
repnz
jae
invd
test
insb
jle
rcl
jg
inc
aaa
push
test
or
xor
ss
push
adc
inc
dec
dec
ficoml
fldcw
mov
push
pop
cmp
lahf
rcll
pop
cli
jp
pop
and
mov
movsl
mov
andl
adc
testb
int3
fsubrl
das
mov
js
cmp
test
add
add
cmp
std
cmp
loopne
or
sub
insl
stos
popa
std
push
jge
jno
mov
inc
nop
fstps
shr
mov
movsb
ds
mov
mov
inc
fimull
xchg
mov
dec
pop
mov
rcll
mov
das
pop
xor
add
inc
dec
subb
push
mov
push
mov
inc
dec
xlat
sarb
js
and
outsb
arpl
jbe
cmp
cmp
cmc
mov
aaa
xchg
sub
lods
stc
or
stos
imul
adc
inc
pushf
sub
sbb
inc
mov
sub
add
push
pop
inc
push
xor
hlt
fimull
mov
sub
movsl
jmp
pop
ja
inc
cwtl
lods
xlat
clc
leave
adc
outsb
lret
add
sbb
xchg
dec
dec
rol
sbb
clc
shrl
mov
add
jnp
mov
pop
and
jecxz
iret
lret
dec
fs
and
mov
jns
mov
cld
out
aam
push
adc
insl
lret
xor
lahf
mov
sbb
cmpl
or
jle
sub
and
dec
std
push
ret
sbb
notl
insb
test
dec
xchg
int3
shlb
sbb
outsb
xchg
in
ds
mov
ret
jle
shrl
jp
pop
cs
ret
pop
aas
fsub
lcall
jns
popf
dec
adcl
repz
test
xchg
lcall
jno
dec
jae
mov
icebp
xor
or
lds
outsb
fisubs
jecxz
inc
push
inc
sub
outsb
stos
daa
jbe
movl
cs
call
push
inc
sub
add
sarl
rcrb
lret
imul
sub
inc
movsl
fistpll
aaa
stos
rolb
jno
out
jae
cmp
sub
cmc
mov
or
and
inc
push
push
add
lock
adc
addr16
mov
rorl
ds
sbbl
test
jb
dec
in
and
pop
out
xlat
cmp
bound
lds
out
cmc
js
jne
test
and
xchg
mov
sub
jecxz
sub
rclb
es
repz
sub
into
shll
mov
inc
and
andl
or
sub
dec
dec
jl
pop
mov
sbb
fs
sahf
pop
out
jecxz
add
es
iret
cmp
shlb
dec
xchg
and
jecxz
jae
insb
add
sub
dec
in
shll
insl
jae
imul
push
bound
fcoms
imul
in
jmp
loopne
lock
sbb
xor
repnz
jmp
adc
shrl
cmp
sar
lahf
sub
push
adc
mov
or
mov
fisttpl
xor
adc
andb
adc
push
pop
xchg
add
and
xchg
inc
dec
fldl
loop
insb
inc
cs
imul
lret
pop
pusha
or
inc
aad
or
sub
lret
aas
pop
fcomps
and
out
je
xor
movsb
sub
mov
cwtl
mov
xor
sub
push
fdiv
and
sub
pop
cmp
inc
sbb
mov
fldl
cltd
sub
pusha
ror
adc
mov
fsubr
shr
test
stc
jne
jge
mov
xor
dec
test
and
test
push
and
cmp
or
dec
pop
mov
fisttpll
shll
mov
sarb
mov
out
bound
insl
out
or
mov
fsts
sti
add
imul
mov
popa
push
inc
mov
mov
out
insb
ss
xchg
push
negb
sahf
repz
lcall
push
repz
dec
das
mov
inc
inc
add
mov
mov
inc
jnp
or
nop
out
mov
sbb
sub
sub
cwtl
jle
cltd
inc
movsl
or
cmpsb
and
lea
and
std
std
jae
inc
xlat
test
mov
jbe
cmp
adc
add
xchg
aam
mov
mov
out
jae
mov
inc
mov
add
enter
ror
das
inc
or
sub
rcl
out
sbb
mov
std
mov
push
xchg
pop
hlt
add
pop
push
dec
pop
lds
in
loop
jno
or
adc
inc
mov
sub
xchg
stc
clc
xchg
xlat
cli
jbe
inc
rcr
ret
or
mov
mov
push
imul
sub
pop
int3
movsb
enter
cmp
cli
inc
cmc
leave
jno
inc
test
sub
movsl
loopne
inc
fwait
int3
filds
mov
cmp
sti
gs
mov
scas
scas
inc
sub
in
fdivr
mov
dec
dec
xlat
mov
ret
cmpb
and
mov
es
or
mov
add
scas
jo
insb
pop
gs
scas
pop
je
js
push
and
mov
fidivrl
cmc
dec
sbb
out
out
bound
addr16
cli
pop
xchg
addb
imul
pop
sbbb
les
add
mov
ficomps
out
mov
cmp
fisubrl
jmp
arpl
sbb
push
lock
andb
test
sti
xchg
cmp
mov
adc
push
lods
addr16
imul
jnp
shll
fcomi
addb
nop
inc
jge
push
dec
in
push
out
and
jp
enter
lods
cmp
jg
or
cs
sbb
daa
mov
pop
ljmp
push
repz
push
cmpsl
enter
cld
call
int
cmp
ret
add
js
inc
lods
dec
push
cmp
push
adc
mov
mull
loopne
push
xor
daa
push
dec
adc
movb
je
lock
add
clc
cmp
jne
cld
in
addr16
xor
insl
and
sbb
imul
xchg
cmp
out
inc
jns
xor
mov
test
and
test
or
or
lret
mov
dec
pusha
pop
popfw
inc
cwtl
je
stc
dec
iret
mov
mov
fwait
imul
cmc
shll
mov
lahf
scas
or
mov
test
iret
arpl
shl
inc
xor
cmpsb
cld
jne
inc
dec
jno
xchg
cltd
and
nop
fisttps
or
mov
push
mov
mov
rclb
imul
cmp
pop
data16
idiv
out
add
mov
cmpsl
sarl
cmp
mov
subl
sbb
ss
xor
adc
and
jns
lahf
ror
popf
fldt
lcall
icebp
adc
movsb
sub
sbb
xchg
and
loope
dec
icebp
sbb
sbb
push
pop
pop
xchg
scas
out
das
xor
nop
mov
pusha
or
icebp
gs
xor
js
repz
push
push
push
rolb
mov
cmpsl
xchg
shlb
lret
jae
inc
adc
in
xchg
dec
or
xchg
in
sub
xor
add
pop
or
mov
xchg
dec
or
repnz
mov
or
push
insl
testb
mov
out
cmp
adc
mov
xchg
lds
and
sbb
cmp
adc
aad
cmp
jno
nop
adc
lret
sub
inc
sti
xchg
mov
xor
pop
cmovl
adc
inc
dec
jle
adc
dec
cmp
je
cmpl
test
mov
dec
xor
add
pop
fidivl
das
pusha
pop
jmp
test
inc
or
mov
orb
and
ja
jle
push
mov
shll
fsubl
dec
mov
add
into
out
jmp
xor
cmp
dec
or
pop
shrb
adc
clc
rcll
xchg
inc
imul
jle
lret
popf
lods
jo
repz
push
mov
lea
daa
pushf
xchg
mov
repz
or
cmpsl
and
push
movsb
shlb
or
lcall
movsb
dec
in
inc
lods
sbb
in
movb
lahf
bound
ja
dec
dec
sub
inc
mov
add
lret
fsubrl
jne
push
adc
movsb
ljmp
fimull
out
adc
add
adc
push
jecxz
test
test
sbb
sub
js
jge
movsb
push
dec
test
popa
xorb
imul
out
lods
add
push
add
push
sahf
nop
xor
xor
cmp
mov
jbe
mov
and
imul
add
jnp
xor
inc
movsl
sub
test
and
and
fsubs
and
push
mov
stos
loope
cmpsb
fs
fs
adc
enter
aad
add
fcoms
xchg
ds
inc
ret
mov
sbb
mov
xor
mov
push
repz
pusha
jae
data16
and
and
imull
and
cli
loop
or
mov
or
jbe
jmp
lods
xlat
daa
sub
pushf
push
pop
stc
xor
test
pop
hlt
daa
and
rorl
into
mov
xchg
mov
lahf
jbe
and
mov
push
mov
xchg
and
in
into
aas
lock
loopne
bound
jmp
out
xor
mov
xchg
jmp
inc
pusha
mov
testb
jb
pop
inc
mov
xor
imul
jp
aad
fnstenv
movsb
daa
cmp
leave
dec
rolb
cwtl
or
mov
aaa
sub
mov
rdtsc
js
fisttps
repz
dec
push
push
xlat
xor
std
xchg
inc
add
lahf
add
pop
addr16
mov
jae
fiadds
cmpsl
xor
cmpsb
int3
dec
jp
and
mov
jb
bound
jg
ret
push
outsl
xor
xchg
sbb
jmp
sti
std
test
insl
cmc
in
mov
out
icebp
or
cmp
jno
add
and
fs
dec
mov
jae
xor
xor
sub
addr16
cmp
add
xchg
jbe
lods
mov
xchg
pop
lock
cmp
sub
pop
mov
cmp
sahf
push
and
mov
jbe
adc
fisubs
jae
loopne
pusha
mov
push
loop
sub
test
cltd
fs
pop
repnz
jp
addr16
insb
jbe
ret
and
cmpsb
add
flds
sbb
ret
hlt
mov
shl
lea
or
shrl
sub
jns
lock
out
mov
push
xor
pusha
out
mov
stos
dec
jecxz
inc
push
push
push
imul
push
xor
sbb
and
cmp
insb
sbb
sub
lcall
ret
roll
push
sub
xchg
sbbl
mov
add
pop
mov
cmp
dec
mov
mov
stc
mov
push
lret
adc
mov
push
push
pop
aaa
les
movsb
push
dec
fwait
aad
jnp
out
nop
jno
sub
dec
addb
and
mov
subb
stos
arpl
mov
or
push
lock
repz
in
cltd
divb
loopne
outsl
push
stos
rorl
and
adc
stos
cli
push
or
jno
ss
setbe
lods
xchg
dec
inc
sbb
jmp
popf
nop
pop
lahf
xorb
mov
sbb
push
sbbb
test
repnz
jb
pop
jl
inc
sahf
dec
dec
ljmp
xor
enter
fs
addl
mov
orl
cmpsl
mov
insl
stos
jns
sbb
push
je
das
add
inc
sbbb
pop
pop
mov
adc
shlb
into
add
jl
outsl
scas
adc
gs
sbb
adc
jae
xchg
cli
stos
add
dec
cmpsl
imul
imul
lahf
mov
xlat
sbb
es
cwtl
adc
mov
push
mov
inc
jb
ss
sbb
scas
jl
and
mov
dec
mov
sahf
idivb
lds
add
out
pusha
jbe
sbb
lock
sub
mov
fldenv
mov
int3
inc
lds
add
out
dec
iret
aam
add
mov
mov
push
loop
mov
test
pop
fwait
sti
pop
rorb
jg
popa
ret
aas
aaa
arpl
aam
rcl
pop
xor
push
int
add
sub
test
scas
push
movsl
adc
loop
lret
les
inc
xchg
adc
sbb
xor
js
sub
lret
je
ljmp
or
outsl
pop
fcom
mov
add
scas
ss
pop
mov
add
lret
lods
in
lcall
fwait
je
dec
leave
mov
loope
add
pop
or
loop
test
mov
mov
mov
push
jbe
cld
lahf
out
bnd
push
xchg
add
scas
scas
aam
lahf
ficomps
stos
xlat
jecxz
pop
adc
cmp
fiadds
in
icebp
cwtl
shrb
push
sub
or
fsubl
movsl
xchg
aas
pop
in
lret
fsts
in
aas
into
jg
and
push
test
pop
mov
add
xlat
fisubrl
mov
test
sarl
lock
imul
fdivl
pop
mov
cmp
sbb
mov
cs
in
cmp
or
jbe
add
jb
cltd
pop
add
out
and
and
mov
sahf
xor
imul
sti
in
xor
xchg
mov
mov
out
lods
adc
pop
daa
test
inc
lea
sub
cmp
outsb
call
call
imul
int
sub
dec
movsl
dec
testb
lahf
jae
stos
js
ficoms
in
outsb
adc
mov
js
bound
cltd
xchg
mov
mov
dec
scas
shrb
cmp
das
mov
push
icebp
lcall
test
sbb
cltd
sub
xorl
frstor
ljmp
aam
daa
repnz
das
dec
mov
rcrl
pop
xchg
loop
andl
inc
xlat
xchg
sbb
dec
pop
jno
push
leave
cmp
hlt
mov
test
add
repnz
pop
aaa
and
sbb
repz
leave
inc
out
jecxz
cmpl
pushf
push
cmp
imul
outsl
mov
mov
iret
inc
or
gs
icebp
arpl
ret
dec
pop
stos
adc
xor
sarl
mov
push
pushf
push
mov
push
out
cltd
repz
imul
repnz
movsb
cmp
nop
xchg
cs
pop
movsb
test
outsb
mov
mov
cltd
push
nop
jnp
insb
or
and
jecxz
cwtl
loopne
imul
enter
xor
add
cmpsb
mov
jmp
repnz
in
mov
in
adc
js
pop
and
or
add
shll
and
push
idivl
aas
cmpsb
sbb
pusha
jno
je
pop
jge
mul
lds
hlt
sbbb
inc
and
sbb
notl
pop
std
cld
shll
cmc
cld
xor
mov
pop
xor
push
or
pop
loop
sti
insb
lret
cmp
xlat
dec
and
enter
mov
and
cwtl
pop
leave
xchg
cmp
pop
lock
cs
push
sti
sbb
fcmovne
std
sarb
pop
xor
fwait
pop
enter
push
aaa
add
sub
mov
push
mov
mov
jae
mov
push
out
add
xchg
mov
xchg
mov
or
aam
inc
lret
jo
shlb
orl
adc
adc
repnz
ffree
mov
insl
mull
pop
and
lret
jb
jbe
inc
cs
or
push
cmp
jg
fsts
loopne
xchg
adc
mov
pop
adc
push
mov
push
adc
mov
dec
aaa
inc
pop
push
push
mov
popa
sti
jmp
cli
stos
negl
popa
mov
push
jnp
aaa
fwait
or
sub
mov
jne
stc
cmpsb
mov
sub
popf
leave
loop
xor
mov
or
mov
ds
pop
stos
push
mov
int3
sbbl
mov
clc
pop
js,pt
and
pop
cmp
aam
xchg
std
ljmp
sbb
rclb
js
test
rcrb
rol
mulps
out
inc
pop
daa
les
jle
je
shl
addr16
or
xor
ja
insb
mov
daa
mov
sbb
dec
sub
adc
cmp
xchg
divb
out
and
xchg
jle
mov
inc
sub
leave
push
mov
sahf
sbb
mov
idiv
fsub
sbb
jmp
xchg
mov
ret
dec
push
in
scas
xor
lods
aaa
ljmp
adcb
cwtl
cmp
pop
mov
jl
sub
scas
shlb
jb
add
xchg
mov
mov
sub
push
vsubss
popa
loope
push
or
sbb
fwait
scas
and
addb
scas
fildl
fistl
and
inc
and
jb
enter
xor
sub
mov
dec
adc
jmp
jmp
push
rolb
stos
inc
adc
movsb
cli
and
fcomip
test
sub
in
ds
xor
pop
leave
stos
ret
icebp
negl
fs
mov
sbb
out
sahf
adc
push
jge
daa
out
pop
mov
sub
cli
movsb
xchg
mov
adc
test
cmp
mov
xchg
push
sahf
add
pop
pop
xchg
inc
faddp
inc
and
outsb
sbbb
push
xchg
testl
cmpsl
xor
mov
mov
adc
bound
shr
rcrb
mov
cmp
mov
repnz
aas
xchg
dec
and
and
sub
jle
inc
jl
mov
dec
dec
jle,pn
cmp
pop
sbb
ja
push
aas
outsb
and
or
sub
fistpl
sarl
add
cld
arpl
sbb
push
into
or
sti
inc
sub
xlat
xchg
push
adcb
js
stos
out
sbb
test
sbb
imul
cmpb
stc
push
sbb
rorb
dec
sbb
jne
stc
add
ret
xchg
or
imul
iret
lret
test
je
inc
inc
xlat
outsl
mov
pop
int
test
repz
dec
imul
xchg
and
xchg
loop
es
cmp
insb
sub
push
mov
xor
sub
jno
rorb
cmp
inc
loopne
test
inc
pop
cmc
add
mov
scas
icebp
sub
movsl
mov
das
movsb
ret
push
in
test
or
bound
jb
data16
pop
shll
xor
shll
sbb
int
adc
or
xor
ret
jae
xchg
sub
cmp
sti
mov
imul
out
sbb
add
popa
leave
gs
dec
jae
dec
pop
ret
insl
sub
leave
adc
test
mov
loopne
rcll
icebp
idivl
std
test
mov
test
sub
jecxz
stos
cli
pop
jp
scas
mov
hlt
jb
mov
stos
mov
popa
int3
loop
mov
notb
push
out
xor
or
adc
ja
fs
mov
test
loop
and
and
lds
ret
adc
lahf
sub
out
stos
movsb
adc
xchg
adcb
adc
rcrb
out
sbb
jo
sbb
adc
xor
push
mov
ds
mov
dec
jp
adc
mov
sbb
outsl
out
call
lcall
jg
mov
sub
decl
les
inc
roll
fs
iret
stos
jmp
sbb
insb
inc
mov
movsl
and
xor
mov
adcb
in
stc
add
rolb
pop
push
xchg
movsl
sahf
cmp
pop
shlb
ss
repnz
xchg
psrld
ljmp
mov
xor
mov
fwait
into
mov
push
imul
in
xor
inc
aad
add
inc
mov
jae
or
lret
mov
idiv
add
insb
mov
sbb
jge
lcall
lahf
pop
or
test
daa
jecxz
mov
adc
sbb
mov
mov
insb
data16
in
pop
pusha
sbb
lods
cmp
repnz
mov
test
or
decb
insb
sbb
aaa
inc
dec
les
or
je
imul
fmuls
sub
adc
add
incb
mov
lcall
xor
sti
lea
xor
xchg
daa
aam
and
stc
int
int3
mov
xor
lcall
fcoml
in
mov
lret
jbe
das
mov
out
out
mov
xchg
ss
push
scas
pop
push
inc
fcoml
adc
and
into
repz
and
xchg
jge
iret
test
adc
mov
hlt
jle
pop
pop
jb
mov
ss
dec
or
stos
out
sub
int
adc
inc
sbb
dec
lret
jns
xchg
insb
xor
jnp
loope
mov
jge
repnz
xor
int
cld
sbb
inc
and
sbb
mov
dec
sub
fisubrs
dec
test
pop
xchg
in
fadd
xor
jbe
loop
test
clc
rclb
aam
xchg
jae
mov
loopne
out
push
sbb
dec
pop
xorl
out
xlat
xchg
jmp
push
test
mov
scas
psadbw
es
movsl
jnp
cmpsb
or
mov
scas
nop
popa
pop
cmpb
push
iret
mov
mov
icebp
outsl
cwtl
test
mov
xchg
mov
inc
std
call
or
jle
push
clc
jecxz
cmp
subb
ds
minps
mull
jne
jl
sbb
hlt
shr
shll
cmp
jae
cmpl
popa
aad
sarb
inc
outsl
outsb
pop
push
xor
roll
mov
mov
mov
cmp
jnp
sub
ljmp
adc
fstpl
inc
pushl
pop
xchg
jl
aad
sar
repz
mov
push
cltd
js
sbb
int3
xor
adc
adc
sub
xchg
dec
jecxz
cmp
sti
cmp
xor
test
ljmp
leave
int
sub
fwait
mov
jo
inc
and
jp
mov
dec
fucomip
sbb
sti
xor
sub
dec
push
popf
arpl
cmp
xor
and
mov
push
pusha
push
leave
cmp
xor
cmp
mov
test
rcr
stc
cmp
xchg
mov
mov
pop
or
sub
test
adc
mov
jge
incb
sahf
jl
or
in
cmpsl
scas
enter
pop
icebp
cmp
push
sbb
adc
das
loopne
jmp
mov
mov
sti
adc
sub
imul
pushfw
inc
xchg
mov
lahf
outsl
fsts
xor
mov
or
dec
add
out
mov
test
sub
dec
lret
and
stos
or
xchg
add
divl
fs
pop
mov
pop
cmp
dec
xlat
cld
cmpb
pusha
mov
pop
mov
push
std
test
or
jecxz
stos
and
mov
push
int3
mov
xchg
pop
cmp
jle
stos
in
aaa
push
lret
and
or
dec
sub
ds
cmpsl
pop
push
pop
fildl
fdivrp
pop
sub
imul
mov
jl
jg
jecxz,pt
cmp
mov
addb
mov
jp
aam
shl
stos
filds
mov
pop
testb
push
shr
mov
fldt
mov
push
dec
gs
ljmp
jnp
lock
daa
xchg
xchg
push
out
sti
cmpl
enter
add
cmp
lock
adc
jbe
pushf
dec
pop
in
and
lret
and
arpl
xchg
mov
jo
adc
mov
loope
cld
mov
pop
add
sbb
xchg
cmp
sub
repz
inc
mov
xor
xlat
add
mov
js
push
je
jnp
aad
sub
addr16
cli
inc
into
pop
and
test
or
repz
xchg
std
dec
mov
adc
jmp
pop
cwtl
call
mov
lea
pop
xor
in
pushf
adc
in
mov
xlat
push
dec
fsubrs
mov
orl
cltd
in
pop
cld
or
inc
xchg
lock
stos
jbe
and
aaa
dec
adcb
jb
pushf
mov
shlb
ja
sbb
xchg
insb
fxch
push
mov
test
and
cmpsb
test
test
sbb
jb
mov
cmpsb
arpl
aas
leave
dec
aas
arpl
cwtl
adc
pop
xor
and
aaa
mov
mov
push
lret
lret
sub
aaa
push
sarb
ss
mov
addr16
nop
pop
test
push
pop
aas
pop
and
push
xchg
ljmp
inc
insl
leave
and
lret
int3
decl
fisubl
into
pop
sti
data16
out
mov
shr
mov
inc
cmpb
stos
cwtl
mov
das
out
data16
jb
mov
data16
imul
ret
fstl
xlat
sbb
cwtl
shlb
into
mov
push
inc
stc
rorl
hlt
pop
movsl
jns
jae
sub
es
test
fst
mov
xchg
or
imul
xor
lods
dec
mov
idivl
pop
dec
pop
jmp
xlat
jbe
das
cmpsl
imul
ds
xchg
shlb
xor
xchg
aaa
lret
xchg
scas
mov
mov
adc
gs
jp
push
arpl
lea
mov
mov
dec
mov
fistpl
cmp
lsl
mov
out
lahf
in
divb
aad
sub
xorl
mov
lahf
sbb
popa
sbb
testl
loop
push
lock
test
jae,pn
inc
inc
add
xor
push
icebp
mov
jge
or
sbb
dec
imul
lds
xor
in
mov
out
lahf
sbb
pop
xor
dec
pop
mov
push
lods
rcrl
xor
jno
aaa
mov
sbb
and
popa
out
mov
mov
fcoms
cmp
or
mov
and
int
shl
sbb
test
mov
imul
mov
mov
les
popa
cmp
scas
sar
push
fwait
popf
lods
addr16
fcmove
dec
jmp
sub
cmc
or
jecxz
insl
pusha
mov
stc
or
jge
ja
inc
int3
fcomps
inc
nop
dec
push
aad
mov
push
ljmp
push
cltd
es
cli
pop
cmpsb
hlt
test
comiss
mov
mul
pop
sub
push
insl
push
mov
add
push
add
pop
pop
jp
xchg
jns
repz
fisubrs
jmp
jbe
repnz
test
addl
shrl
push
mov
popl
fdivrs
daa
xchg
outsl
adc
arpl
stc
mov
rol
cmp
into
popl
mov
push
and
fs
lahf
push
enter
lcall
popf
mov
aam
lock
adc
aaa
xchg
xor
cld
ret
adc
mov
or
mov
add
jnp
test
add
out
insl
insl
dec
push
lea
loopne
xchg
mov
cmpl
lcall
inc
out
jbe
stos
jne
mov
test
mov
cmpsb
int3
andb
push
sbb
dec
fs
and
pop
mov
lods
mov
jg
pushf
xchg
cmp
outsb
cwtl
xor
mov
data16
jecxz
test
mov
xchg
pop
add
inc
inc
inc
cmp
or
jmp
loop
inc
iret
inc
pop
mov
push
mov
mov
repnz
pop
fucomi
fildll
add
mov
rorl
push
mov
xchg
hlt
lea
mov
scas
loopne
dec
lods
inc
movsb
push
add
and
or
rcrl
arpl
lods
nop
mov
test
inc
xor
and
cmpsl
pop
shrb
mov
scas
into
rcrb
ret
xchg
adc
pop
popf
popa
mov
psllw
jp
inc
mov
sahf
cmpsl
in
scas
lods
add
insb
or
dec
ss
out
lahf
push
dec
pop
int
pushf
or
pop
lds
divb
cmpsb
sub
mov
or
gs
mov
and
dec
popf
dec
sbb
cmp
rcr
jnp
xor
xchg
data16
scas
je
add
dec
jle
pop
test
dec
das
int3
loop
pushf
cwtl
and
int3
jge
insb
fs
arpl
test
xor
inc
lods
xchg
outsl
mov
push
mov
cmpsl
dec
repnz
inc
lea
out
adc
pop
mov
clc
sub
aas
scas
sub
push
in
dec
lret
jne
fbstp
leave
fsubr
jl
push
adc
sub
test
out
cmp
adc
into
mov
add
hlt
mov
pop
or
jmp
push
int
insl
jge
mov
inc
mov
xchg
out
outsb
insb
fsubl
loop
jge
inc
inc
and
stc
shl
jne
inc
mov
and
sbb
int
andl
int
test
ficomps
mov
movb
in
jle
xlat
jae
test
movsb
add
add
dec
fistpl
mov
jno
pop
test
add
dec
sti
inc
or
icebp
aaa
push
subl
pop
cwtl
adc
dec
adc
movsb
cmpsl
or
aaa
cmp
mov
es
add
clc
repnz
cmp
sbb
add
mov
ds
cmpsb
jnp
xchg
outsb
mov
adcl
push
daa
lds
pop
iret
mov
stos
loope
push
pop
sub
js
stc
push
mov
pop
jns
loopne
aas
mov
cmp
adc
test
je
xchg
pop
and
scas
mov
and
sub
mov
rcrl
or
rorl
es
mov
sub
mov
dec
insl
mov
fs
xchg
daa
insb
cmp
sbb
dec
gs
repz
int
sub
jp
inc
mov
jns
xor
mov
pop
sbb
mov
sbb
sub
or
scas
lahf
xor
pushf
cltd
cmp
sbb
and
andb
inc
jns
test
lcall
jnp
or
ret
mov
imul
loope
xchg
or
sbb
or
xchg
loop
pop
mov
inc
push
test
push
lret
pop
int3
inc
ja
fidivs
roll
fistpll
fistpll
push
jns
add
push
push
mov
push
ja
mov
bound
or
inc
mov
adc
xor
jnp
lods
ja
pop
or
and
push
sbb
lods
popf
shlb
jo
pop
or
mov
ljmp
adc
ljmp
stos
sti
mov
fistps
or
in
and
mov
pop
sub
pop
arpl
push
movsl
jg
aas
clc
ja
and
out
or
das
inc
or
mov
out
pop
outsl
jl
int
xchg
add
sbb
add
adc
mov
lods
scas
sbb
in
ret
dec
rclb
mov
fs
fstpt
xchg
lret
xor
cmp
int3
add
inc
cmp
das
xor
dec
int
aam
mov
mov
pop
inc
outsl
sarb
add
add
idivl
dec
jge
xchg
addb
jg
xchg
dec
jle
pop
movsl
aam
mov
inc
test
cltd
xchg
pop
test
ret
push
lea
sub
pop
jo
shrb
pop
pop
rolb
or
mov
add
xor
subb
xor
push
andb
mov
pop
mov
jg
test
arpl
dec
ja
pop
fisubrs
xor
sub
xchg
div
push
stc
out
arpl
shl
andl
lret
jns
int
jmp
out
fiaddl
mov
fsubs
adc
fistps
jbe
mov
push
enter
cmc
rcll
fbstp
push
fbstp
js
stc
scas
or
scas
fbstp
fbld
xchg
fildll
mov
jecxz
push
xlat
in
jbe
xor
sti
or
pop
out
sti
add
aas
test
and
addr16
dec
mov
aas
push
adc
inc
jp
mov
in
add
aam
xchg
jge
add
mov
push
stos
sbb
cmp
clc
andl
and
nop
jge
or
push
sbb
mov
mov
cmp
sub
mov
cmp
outsl
xor
nop
and
js
pandn
fwait
sub
sub
enter
push
adc
mov
add
mov
or
mov
in
xchg
add
std
or
sub
sbb
nop
push
stc
addr16
sub
and
int
out
ss
int
fstl
icebp
jecxz
mov
or
cli
in
in
cmp
lahf
icebp
jge
push
push
jae
sub
mov
mov
push
adc
pushf
rorb
pop
not
aam
outsl
push
mov
hlt
aam
mov
cs
and
aad
jmp
ficomps
test
or
lahf
xchg
mov
fildl
flds
repz
scas
jg
pop
jb
adc
add
push
sbb
pmulhuw
fisubrs
fcmovu
or
mov
sub
fwait
sarb
les
mov
adcb
sbb
mov
or
push
add
out
inc
ljmp
inc
push
leave
mov
andb
xor
dec
int
pop
inc
cmpsl
push
push
sub
inc
es
pushf
les
mov
inc
dec
orb
xchg
adc
sbbl
xchg
cli
pop
sub
and
dec
insl
dec
rorl
ficomps
fwait
mov
inc
pop
lcall
stc
pop
push
pusha
shl
xchg
cli
out
sbb
mov
insb
sub
lret
loopne
insb
jbe
sbb
mov
pop
push
xor
test
sub
lahf
dec
icebp
mov
and
mov
insl
insb
push
mov
out
and
jg
lock
dec
mov
jecxz
out
js
jge
outsl
xor
rolb
test
push
add
dec
jmp
dec
daa
int3
sub
mov
ret
out
push
sbb
jns
mov
mov
inc
sub
sub
mov
clc
xchg
test
jge
rcrb
mov
xchg
sarb
aam
aam
adc
mov
loopne
push
sub
in
jg
scas
clc
ror
push
mov
pop
jle
faddl
mov
adc
and
jbe
push
inc
inc
imul
fwait
stos
or
mov
andb
xor
xlat
mov
mov
jb
jns
lret
dec
jmp
mov
sbb
lock
and
cli
pop
dec
movsl
push
cltd
out
hlt
mov
xorb
xchg
jle
loope
mov
imul
xor
cld
dec
push
loope
jo
adc
scas
adc
adc
aad
out
xchg
inc
iret
jns
jnp
xor
rcrb
sub
leave
mov
mov
xchg
inc
mov
mov
rcll
jle
push
andb
dec
cmpsb
and
mov
ret
dec
es
mov
ret
inc
mov
push
decb
imull
lret
mov
test
jge
test
mov
loope
dec
decb
and
or
je
addr16
add
and
inc
call
cmp
fwait
js
push
and
lret
cmpsl
cmpsl
fidivl
pop
std
fs
mov
arpl
ds
lahf
pop
cmp
in
mov
mov
and
loop
js
xchg
dec
paddusb
inc
pusha
lcall
pop
out
dec
mov
push
enter
cs
hlt
lods
or
sti
inc
in
adcl
dec
lods
xchg
adc
sbb
inc
pop
ret
shll
jge
mov
ret
test
jns
inc
inc
adc
mov
mov
cmpsb
rolb
scas
cmp
or
adc
lock
mov
in
jno
jae
lcall
add
mov
xorb
pop
shlb
mov
scas
add
adcl
sbb
scas
mov
mov
mov
nop
xor
pop
inc
cld
fistl
adc
shrl
into
shlb
ret
cmp
fimuls
lods
mov
dec
push
cld
sbb
and
sbb
jp
push
leave
sub
mov
jae
xchg
out
sbb
cwtl
jne
jge
lahf
fdivs
adc
sti
mov
mov
fs
xor
int3
jbe
xchg
je
ss
add
cmpsb
sti
jg
jmp
lahf
scas
jno
add
daa
mov
xor
clc
push
adc
or
and
mov
std
sbb
mov
insb
sub
fistl
in
add
mov
imul
hlt
pop
mov
insb
aas
xor
mov
adc
rorl
mov
lds
mov
mov
inc
cwtl
lret
dec
fldenv
ja
shll
sbb
repnz
gs
inc
adc
sbb
je
icebp
pop
pop
mov
push
xchg
sahf
bnd
sub
pop
push
les
or
stc
jo
sub
push
pop
adc
push
xchg
add
dec
cmp
dec
stos
stos
std
xchg
test
mov
cld
scas
mov
mov
fld1
dec
adc
fbstp
inc
xor
mov
adc
jns
jecxz
dec
push
cli
pop
sub
loop
push
or
pushf
cs
add
les
mov
jg
fcomip
fcomp
push
insb
mov
pop
cmp
insb
push
add
test
sbb
mov
pop
sub
mov
repz
lods
push
loopne
add
mov
xchg
inc
mov
incb
dec
jno
sbb
push
mov
cmpl
adc
js
push
stos
hlt
and
inc
data16
pop
jbe
loopne
add
cld
ja
std
inc
sub
mov
push
jmp
es
shrl
and
xor
or
sub
call
pop
std
sub
xchg
ja
cmp
cmp
pop
fiadds
xor
sub
in
jl
hlt
mov
mov
inc
es
in
movsb
je
add
fnstcw
sbb
test
fnstcw
cltd
jbe
inc
xchg
fwait
pop
or
das
movsl
scas
aad
sub
sbb
out
lods
fisubl
sbb
mov
pop
mov
inc
stos
mov
sub
aam
inc
mov
adc
and
lret
call
popf
test
lds
mov
sub
or
test
outsb
cmp
push
fstpl
jb
daa
adc
dec
ljmp
aam
std
lods
insb
das
add
sbb
jne
cmp
and
dec
cmp
sub
xchg
cld
daa
xchg
daa
pop
inc
bound
xchg
imul
aaa
sti
loop
pop
lods
mov
mov
or
cmp
jb
hlt
mov
sbb
push
popf
shrb
int3
mov
mov
arpl
lahf
mov
jg
cmp
and
sbbl
fimull
dec
cmp
daa
inc
repz
sub
jg
xor
inc
jo
pop
mov
dec
cmpsl
sti
push
stos
js
std
rorb
sbb
ret
push
int3
mov
sti
mov
in
lock
xchg
ja
push
mov
adc
adc
daa
data16
lods
sbb
xchg
xor
jne
test
mov
pop
jp
mov
xor
ds
scas
cli
push
cmp
xchg
jmp
mov
adc
negl
das
jae,pt
ljmp
mov
push
idiv
ja
dec
dec
mov
jae
in
ret
daa
cld
adc
xchg
ds
push
les
imul
pop
sbb
xchg
dec
ret
test
pop
rcrb
mov
lods
sbb
jg
push
inc
adc
and
fiadds
loopne
jmp
pop
jp
fs
jae
ss
fildll
rcll
popf
sti
and
cmc
and
pop
cmp
mov
call
cmp
push
shlb
xor
push
test
or
lret
fwait
in
xorl
testl
cmp
fdivs
js
out
repnz
in
idiv
mov
push
arpl
xchg
dec
add
call
test
je
les
jne
int
push
xorb
add
mov
popf
outsl
lea
mov
mov
xchg
xor
int3
aad
sahf
fdivrs
int3
ror
sbb
and
movsb
jmp
pop
ror
mov
jp
mov
sbb
push
fadd
insl
pop
out
clts
hlt
mov
cli
lea
stos
movsl
test
call
into
addr16
shlb
popw
es
pop
fs
and
pop
or
cld
and
stc
movsl
mov
add
rcrl
xorb
mov
cs
xchg
inc
lcall
and
push
lds
popf
push
mov
mov
int3
movsl
adcb
por
mov
cmp
scas
jmp
andl
dec
mov
cmp
inc
mov
cltd
in
and
fwait
pop
imulb
add
mov
dec
or
inc
dec
mov
cwtl
rolb
sbb
imul
or
fs
vmread
in
sub
sbb
sti
push
jno
lret
imul
mov
dec
sub
out
mov
add
insl
lock
mov
and
adc
jmp
scas
cmp
sub
test
push
filds
nop
push
insl
mov
jae
call
push
mov
or
adc
add
jno
iret
scas
cmp
pop
dec
jae
dec
ret
repnz
addb
dec
es
sbb
jge
das
movsb
out
or
inc
add
dec
cmp
push
shll
mov
push
out
andb
fistl
add
sub
insl
fcomi
movsb
mov
addl
fwait
out
into
insb
sub
push
sub
in
loope
lea
xlat
ret
in
push
mov
shrb
pop
jne
imul
in
dec
mov
mov
inc
xchg
repz
fmuls
aaa
mov
jecxz
shrb
xchg
std
mov
into
mov
out
xor
out
mov
lahf
jbe
xorl
pop
lea
pop
sbb
and
mov
mov
pop
pushf
shlb
cmpsl
jg
push
mov
icebp
xchg
test
rorl
push
shll
push
sbb
in
inc
mov
imul
jns
clc
sbb
xchg
sub
xchg
lahf
xchg
cmpsl
and
lods
mulb
sbb
std
out
pop
stos
shl
jp
mov
mov
daa
inc
jmp
adc
inc
mov
pop
js
jns
pop
pop
pop
push
xchg
inc
js
xchg
mov
inc
bnd
jns
push
mov
cli
jmp
into
dec
inc
scas
daa
jmp
test
inc
jbe
adc
pop
or
aas
mov
aad
xchg
addb
rcll
test
add
in
popa
fmuls
movsl
sub
cmpsl
mov
push
jle
insb
imul
xor
and
or
pop
xchg
ds
xorb
and
fbstp
lret
out
mov
xchg
push
shll
shl
adc
xchg
lret
movsb
and
mov
push
dec
mov
pop
mov
out
mov
popa
rcrl
dec
icebp
lods
pop
xchg
cmp
xor
mov
add
xchg
cmpsl
dec
sbb
lds
or
jg
je
hlt
mov
fcmove
xorl
mov
mov
add
loope
pushf
int
cmp
xchg
cmp
cmp
ret
stos
rclb
icebp
test
clc
inc
or
shrb
popf
add
popf
add
lcall
dec
lret
adc
inc
push
cs
xchg
mov
pop
inc
xor
mov
cs
addr16
ret
sbb
or
test
nop
mov
ret
or
scas
sub
xor
fnstsw
or
fwait
mov
pop
cs
or
mul
or
xchg
dec
ret
push
push
lcall
jg
jnp
xchg
mov
inc
fldcw
push
mov
adc
lcall
sahf
fistpl
dec
shll
mov
insb
fnstsw
pop
xor
dec
xor
or
sub
imul
js
cwtl
xchg
dec
dec
mov
push
or
mov
fmull
sti
jecxz
pop
cmpsl
dec
add
ficoml
push
adc
popa
jl
in
jno,pn
popa
dec
adc
rolb
pushf
int3
clc
jmp
rorl
aas
xchg
push
mov
mov
test
pop
repnz
xchg
mov
scas
fadds
pop
andl
addb
clc
imul
and
or
pop
stos
mull
cmp
pop
mov
inc
fdivp
mov
pop
test
rcrl
mov
cltd
mov
xor
push
test
pusha
and
movb
xchg
xor
xlat
sub
jae
imul
pop
test
or
sbb
xor
sub
sbb
xor
jle
popa
outsb
cmc
out
in
mov
lods
mov
out
adc
aad
xor
pop
jg
das
push
cvtps2pd
pushf
neg
movsl
push
insl
clc
push
or
aad
inc
lea
mov
std
outsb
mov
xchg
fildl
mov
ret
and
lea
lods
fldt
jne
pop
mov
xchg
sti
icebp
push
jle
pop
mov
pop
loope
or
pslld
lock
mov
scas
ds
mov
jl
mov
fsub
add
push
daa
jg
pop
idivl
cmp
xor
xchg
mov
scas
repz
sbb
sbbl
cs
in
inc
ss
rcll
aas
mov
adc
aam
push
jns
sbb
in
mov
fadd
lods
int3
in
mov
fidivrl
nop
sub
sahf
icebp
out
inc
fs
push
pusha
push
add
rcl
and
sub
mov
out
cs
sub
rcrl
pop
push
fcoml
out
pop
adc
in
sarb
sub
ret
jle
mov
mov
clc
idiv
xchg
mov
xchg
lds
dec
cmpsl
xchg
xchg
cmp
pop
push
sub
xchg
dec
out
cwtl
sahf
lock
dec
mov
jl
add
sub
pop
insl
dec
bts
loope
add
sbb
adc
sbb
jg
add
loope
sbb
jge
int
mov
cmp
sbb
mov
cmp
ret
mov
jbe
or
xchg
sbb
jae
mov
mov
or
pop
add
sti
test
test
xchg
xchg
push
or
pusha
mov
aam
push
pop
stos
jno
dec
add
fistl
adc
jg
fsubrl
inc
jae
sub
mov
jae
pop
or
mov
dec
lret
loop
jns
movsb
sbb
test
inc
add
xchg
add
mov
xlat
mov
mov
pop
pop
push
mov
or
rcrl
cwtl
out
inc
imul
les
dec
arpl
icebp
ficoml
adc
dec
xlat
xchg
add
add
inc
adc
mov
mov
iret
push
ss
stos
fisttpll
mov
stos
or
je
icebp
mov
pusha
push
push
push
sbb
jge
fs
mov
popa
fisubrs
mov
outsl
xorb
xor
shll
pop
add
xor
insb
xor
hlt
aaa
adc
fwait
movsl
andb
loop
sahf
and
lock
jg
andb
icebp
imul
cmpsl
aas
add
clc
dec
lock
or
sti
flds
dec
sar
inc
sbb
sub
sti
and
xchg
xchg
int3
xor
fisttpl
mov
loop
adc
arpl
fwait
ja
lods
pop
int
jbe
jae
pop
repnz
or
push
fsubl
stos
push
xchg
mov
sarb
stos
adc
push
out
inc
scas
push
adc
inc
das
mov
ds
imul
out
mov
fst
mov
pop
shl
stc
jmp
sbb
adc
repz
add
cmc
pop
or
pop
inc
adcb
insl
hlt
mov
fs
jmp
sbbl
jnp
inc
test
mov
iret
xchg
repz
dec
sbb
or
sub
mov
adc
into
outsb
sahf
xchg
leave
lret
mov
inc
shlb
in
nop
adc
xchg
adc
pop
fadds
das
cmp
ret
data16
insb
movsb
xor
bound
push
fiaddl
mov
out
stos
jl
inc
and
sub
push
push
sarb
mov
inc
cmp
inc
mov
sbb
in
jle
mov
dec
fidivl
sub
hlt
xchg
mov
dec
and
pushf
cmp
mov
movsb
fsts
push
inc
mov
std
lret
mov
lds
aam
pop
mov
movsl
mov
add
addr16
mov
shll
pop
and
and
jae
out
pop
fisubrs
lahf
pop
in
sbb
xchg
aaa
pop
test
and
aam
out
pop
nop
fldt
cwtl
lret
repz
stc
rcrb
sbb
mov
mov
aas
xlat
jbe
xchg
inc
sbb
mov
jecxz
ja
mov
ret
inc
push
repz
in
std
stos
sbb
xor
cmc
aad
enter
das
fstps
rolb
inc
movb
xor
jno
imul
out
xchg
mov
mov
out
jne
push
jae
mov
add
jmp
jge
mov
and
cmp
inc
out
inc
pop
xor
push
popl
sbb
jne
pop
push
jo
imul
jecxz
dec
cld
stos
scas
stos
int
mov
sahf
sub
xchg
dec
xchg
pusha
int
add
sbb
xor
mov
aaa
call
mov
cmc
sub
je
xor
jmp
jge
cwtl
std
pusha
xor
mov
and
cld
sub
mov
loopne
or
sub
daa
xchg
cmp
loopne
nop
stos
icebp
add
xchg
orb
add
lahf
xor
mov
test
in
cs
mov
cmp
inc
dec
inc
xor
sbb
out
jmp
jmp
imull
rcrl
call
xchg
jnp
pop
in
dec
pushf
imul
fwait
mov
fidivrl
inc
pop
adc
mov
bound
dec
push
and
inc
mov
pop
inc
fsubl
cs
push
dec
sub
sub
lret
in
mov
fldenv
add
mov
cmp
mov
outsl
or
xor
inc
add
jle
and
sub
push
add
adc
inc
and
int
adc
pushf
push
inc
pusha
push
lcall
in
ret
popa
add
xorl
mov
jne
int
dec
dec
or
rcr
cmp
jge
or
jnp
jbe
cmp
repnz
xor
push
paddd
test
divb
cmp
mov
repnz
jl
test
cwtl
and
adc
js
xor
mov
inc
push
shrl
sbb
fbstp
push
xor
je
add
and
jbe
ljmp
jb
add
out
mov
adc
sub
or
mov
push
sub
stos
or
pop
jp
in
and
out
ja
fsts
test
movsl
cmp
cmp
push
sub
lock
adc
addr16
daa
sti
cmc
xchg
sbb
lea
nop
scas
xrelease
sub
or
int
adc
inc
xor
mov
cld
push
andl
cmp
pop
and
lds
mov
adc
fisubrs
out
mov
dec
pop
popa
in
pusha
add
sub
scas
aas
lahf
pop
adc
add
mov
fldl
push
iret
lahf
add
cmp
mov
mov
add
jbe
in
fldt
or
mov
add
rorb
dec
xchg
sbb
push
jnp
inc
push
loopne
push
or
fcmovnbe
das
xor
xor
dec
cmp
mov
inc
push
cmpsl
mov
push
neg
mov
push
nop
adc
cmpsl
in
xchg
add
ret
sbb
bound
fcompl
cmpsb
mov
pop
sbb
in
ja
out
adc
jecxz
call
cmp
push
pop
xchg
into
xchg
jge
xchg
push
or
mov
adcb
cmpsl
inc
mov
cmc
pop
push
pop
dec
sbb
je
sub
call
stc
xchg
fisubs
xchg
cmpsb
or
push
xchg
stos
adc
bound
adc
ss
and
jecxz
xchg
cmc
scas
mov
and
cmp
fwait
jg
mov
arpl
stc
dec
or
stc
push
xorl
fidivs
lcall
fldenv
fdivl
mov
es
push
and
xchg
jge
out
cmp
fnstsw
xor
or
addl
popf
cmp
mov
mov
and
pop
sub
push
jae
pop
pop
fstl
xor
inc
mov
fdivrp
mov
loopne
pusha
xchg
sbb
or
pop
sbb
je
std
icebp
sti
aaa
scas
pop
sbb
sbb
cmpsb
add
sub
inc
dec
pusha
pop
test
sti
pop
int3
mov
xchg
xor
cmp
enter
adc
imul
outsb
xor
xchg
scas
sbb
insl
sub
xchg
pop
add
mov
fnstsw
adc
pop
fwait
lock
xor
mov
jno
fldenv
arpl
push
mov
adcb
stos
jmp
mov
or
in
test
movsb
jo
lcall
int3
inc
jmp
mov
icebp
loopne
push
pop
lods
hlt
inc
cmp
or
mov
hlt
movaps
lahf
jo
jg
push
push
cwtl
cmpsl
or
cs
sbb
xlat
aam
sti
or
shrl
call
movsl
mov
loopne
popa
int
dec
mov
aam
mov
test
push
push
shl
cli
cmp
or
jle
dec
nop
outsl
or
xor
cmp
ret
outsl
ror
or
mov
cltd
mov
testb
inc
sub
cmp
sub
or
sbb
stos
or
inc
mov
icebp
pop
add
int
xor
out
loop
ss
mov
add
xor
scas
pop
lods
push
clc
out
xlat
fadds
mov
mov
addr16
inc
add
add
inc
mov
pop
sub
cmpsl
jecxz
cmp
cli
adc
divb
pop
push
jl
lcall
ret
bound
rcll
push
loope
mov
lcall
out
fcomp
fisttpll
dec
xchg
mov
out
xchg
push
das
push
mov
xor
fidivs
inc
incb
pusha
add
pop
xchg
test
scas
cmp
pop
or
imul
mov
call
imul
and
test
sub
jle
jl
addb
xchg
mov
adc
sbb
sti
testl
loope
mov
xchg
lcall
es
push
loopne
je
in
dec
test
nop
mov
mov
loop
pusha
mov
xor
inc
mov
shlb
rorl
adc
mov
addr16
mov
arpl
mov
faddl
mov
ljmp
push
icebp
scas
cwtl
sub
pop
jns
pop
popf
loope
xchg
clc
inc
fwait
mov
jo
ror
adc
test
pop
adc
shrb
or
out
test
ret
scas
mov
push
lods
sub
subl
jnp
mov
cmp
push
sub
mov
sbb
je
inc
and
jae
addb
jo
pushf
faddl
sub
or
pop
imul
push
cmp
mov
jl
test
mov
sbb
popf
pusha
out
push
sub
and
xchg
into
mov
xor
sbb
push
lods
fdivp
jnp
inc
pop
test
mov
dec
cmp
jbe
push
mov
adc
mov
xchg
fstl
loop
xchg
out
push
ret
xchg
jnp
cmp
imul
xchg
ret
push
sbb
fildl
cmp
cmc
mov
xor
or
out
mov
je
into
inc
adc
mov
push
sbb
add
mov
in
dec
out
je
out
lods
loope
aas
scas
testb
jge
in
cmp
and
mov
int3
roll
xchg
jl
mov
aas
cld
pop
push
imul
dec
cld
repz
js
frstor
andb
addb
insl
nop
or
cld
or
inc
cmp
adc
outsb
or
sub
xor
push
xor
xlat
adc
in
lock
pop
int
xchg
mov
xor
cs
rorb
out
mov
outsb
jecxz
popa
adc
or
adc
mov
pusha
mov
int3
sub
es
or
in
jno
cmpsb
xor
pusha
ret
repnz
in
jg
push
sub
and
loopne
stos
cmp
enter
dec
xchg
rolb
inc
test
int3
add
negl
pop
push
and
scas
ds
sbb
or
ret
adc
and
hlt
subb
inc
sbb
sbb
stc
push
test
leave
jl
cli
sbb
inc
ds
xor
or
pop
mov
mov
repnz
pop
ret
mov
cmp
cmp
dec
shl
mov
adc
jg
sub
jns
or
in
and
or
mov
jns
cmp
jp
push
xchg
xor
rorl
ljmp
add
push
test
xchg
movsb
sub
mov
repz
bound
je
pop
mov
mov
out
mull
cmc
jo
mov
cmpsb
mov
in
sub
iret
insb
daa
sub
sbb
mov
fs
inc
imul
mov
cmpsb
shlb
popf
fcomp
push
jle
or
dec
mov
ret
inc
popa
in
ja
sbb
rclb
dec
pop
lret
add
mov
or
cli
mov
test
adc
mov
adc
adc
push
pushf
mov
andl
jmp
fisttps
inc
and
nop
int3
fistl
add
inc
lock
iret
push
cli
or
add
adc
arpl
push
arpl
int3
xchg
xor
sbb
jge
inc
or
rcl
aad
aas
je
cmp
jge
shll
pushf
jb
test
push
mov
xchg
int3
xor
push
or
dec
adc
push
icebp
test
sbb
xchg
dec
inc
add
inc
or
or
adc
dec
jnp
jmp
js
xor
dec
mov
push
loop
adc
sahf
jbe
add
pushf
adc
gs
xor
push
mov
dec
daa
movsb
fwait
clc
sbb
repnz
mov
ljmp
push
mov
loopne
jae
jns
cld
imull
cmp
arpl
add
in
push
adc
dec
aaa
stos
sub
shlb
cmc
test
xor
pusha
cltd
inc
xchg
jbe
mov
adc
jo
xchg
into
and
sarl
xor
push
rorb
push
mov
cmc
mov
push
sbb
push
adc
les
jecxz
out
push
pop
fstps
movsb
mov
pop
push
mov
icebp
lcall
divl
cmp
pop
push
push
mov
rcrb
cwtl
movb
imul
inc
mov
aad
iret
sbb
rcll
inc
nop
cmpsl
push
dec
push
inc
mov
mov
mov
fildll
mov
inc
and
mov
sti
scas
cmc
cltd
and
add
cmp
inc
iret
outsb
lret
cmc
or
mov
mov
jp
movb
dec
or
xchg
out
aam
push
rorl
mov
stos
jg
mov
xor
push
add
jbe
movl
data16
jb
pushf
and
fcmovb
mov
out
ret
fcoms
popa
push
sahf
int
push
jecxz
movsb
sbb
push
shll
dec
call
mov
sbb
repz
mov
or
sub
jle
mov
insb
pop
pop
sub
mov
or
popa
adc
sub
dec
cmp
ret
dec
sarl
outsl
or
dec
pop
aad
je
sbb
mov
pushf
fisubrs
test
fadd
shll
mov
pop
add
add
or
sub
dec
dec
jp
pop
add
sbb
popa
test
in
leave
shlb
clc
adcl
dec
lds
mov
mov
sub
iret
mov
or
sti
jbe
popa
gs
dec
jp
movsl
mov
inc
mov
enter
jmp
jg
inc
xorl
fcmovnb
cmpsl
fstpl
xor
notl
pop
into
mov
inc
stc
gs
sbb
arpl
jb
fnstcw
ret
and
insl
cmpsb
shrb
cmpl
ljmp
sbb
xor
mov
jb
add
jns
test
and
pop
test
push
ret
mov
cmc
mov
mov
mov
xchg
rcrb
mov
push
test
dec
test
push
jb
adc
insl
ja
imul
pop
pop
inc
mov
je
mov
popf
sub
mov
fbld
pop
ficoml
addr16
repnz
mov
ss
or
call
shll
add
lret
mov
xor
adc
je
sub
mov
dec
minps
das
or
cs
popa
jg
xor
insl
dec
movsl
into
xchg
add
push
insb
push
imul
jne
stos
xor
jp
pop
dec
add
jbe
mov
add
add
rorb
repz
cli
xchg
and
push
out
dec
fadd
mov
pop
les
mov
jge
or
in
mov
hlt
aad
in
movsb
or
xchg
in
cmp
push
jo
and
test
xor
and
adc
cmpsl
out
push
sbb
adc
xchg
mov
sbb
mov
les
dec
mov
and
dec
repnz
lcall
xchg
lcall
mov
faddp
dec
or
das
arpl
mov
inc
rcr
mov
fucomip
inc
push
call
aad
gs
repnz
sbb
pop
adc
inc
arpl
and
repnz
push
test
int3
out
cmp
xor
cmc
lahf
and
out
ljmp
aaa
pop
cld
sbb
loop
loopne
push
jb
addr16
inc
fdivp
popa
adc
pop
sahf
iret
mov
adc
push
ftst
mov
or
xchg
hlt
dec
xorl
mov
dec
pop
xchg
sbb
int3
xchg
mov
bound
sub
push
scas
insl
fmuls
fwait
adc
outsb
cltd
sub
in
push
dec
enter
jl
lods
jae
ds
movsb
adc
jg
cmc
mov
xor
mov
popf
jno
iret
or
mov
or
ljmp
decb
sbb
fdivp
lret
pop
mov
fmuls
lret
xchg
mov
or
mov
repnz
sahf
push
dec
jmp
adc
rcll
ss
or
mov
sahf
stc
pusha
out
and
repz
ret
jo
mov
pusha
lea
pop
lahf
inc
push
inc
xchg
inc
mov
and
xchg
fwait
cld
sbb
gs
aam
xor
dec
sub
xchg
jmp
mov
push
inc
cs
sub
sti
mov
aam
xchg
pop
dec
aad
ss
mov
and
shl
dec
scas
in
pop
test
mov
lods
scas
mov
jne
push
sub
inc
rcr
inc
nop/reserved
adc
pop
cmp
nop
and
add
add
divb
mov
sbb
js
adc
jo
jl
out
jle
popf
in
adc
lds
pop
cmp
lret
mov
add
pop
adc
fistpll
add
sub
push
sub
ds
loope
andb
das
sbb
int3
fdivrp
jle
jle
addb
imulb
cmc
sub
stc
or
cmp
mov
lods
out
out
xchg
out
out
mov
pop
insb
dec
adc
inc
adc
roll
mov
jae
movsl
pop
pusha
das
mov
mov
jecxz
test
jp
mov
iret
icebp
pop
mov
orl
xchg
stc
pop
sub
ljmp
das
fldlg2
push
mov
imul
aas
int3
adc
xchg
int3
mov
push
in
mov
pop
xchg
cmpsl
call
pop
sbb
insl
cmp
cmp
addl
xchg
dec
jae
out
dec
pusha
psubusw
aaa
mov
mov
xchg
pop
xchg
xor
cmpsl
mov
lret
ds
dec
loopne
loopne
mov
sbb
daa
movsl
mov
cmp
xor
push
lock
push
or
fwait
adc
outsl
loope
rcll
sbb
stos
pop
sbb
mov
or
cmp
out
cli
icebp
xchg
push
inc
mov
mov
cmp
repz
aam
mov
leave
push
lret
xchg
daa
push
push
cmp
mov
mov
subb
inc
jnp
sub
mov
pop
cltd
lods
jmp
mov
mov
mov
ja
ss
push
adc
dec
fistl
lret
push
sbb
inc
jo
fildll
and
and
jnp
pop
nop
shrl
pop
cmp
icebp
jge
jp
cmp
adc
xor
sbb
lods
jbe
xchg
cmp
loop
add
imul
test
sub
hlt
mov
in
notb
mov
adc
dec
ss
lahf
fldl
jl,pt
push
inc
jp
push
pusha
push
cltd
jg
call
shll
xchg
stos
cmp
out
add
sarl
movsb
mull
insl
inc
out
xchg
roll
stos
call
rep
clc
push
xchg
inc
movsb
cmpb
inc
mov
rcl
sub
push
inc
cli
fimull
cmp
cmc
dec
fsts
push
jb
mov
dec
mov
popf
orb
cmp
mov
and
lds
fistpl
or
inc
addr16
sti
repnz
daa
jae
mov
or
jecxz
repnz
jle
adc
jae
and
scas
mov
sub
jecxz
xor
cmp
inc
jmp
mov
imull
lods
ficomps
xchg
mov
je
sbb
lret
and
loope
rcr
or
xchg
cmp
push
jmp
xchg
push
push
test
lea
fists
adcb
jle
frstor
mov
or
jl
dec
popf
repnz
mov
popa
and
mov
jbe
xchg
ljmp
sbb
sub
or
push
out
inc
pop
mov
push
mov
xchg
imul
jge
out
xchg
pop
inc
lods
sbb
mov
pusha
mov
aad
xchg
pop
push
out
popa
or
leave
cmpsl
cmp
cmpsb
insb
shlb
lahf
pop
dec
xor
mov
rcrl
lods
imul
aaa
lcall
es
and
add
out
mov
inc
dec
mov
fdivr
jmp
pop
insl
pop
sbb
pop
aad
fisttpl
testl
js
in
out
stc
xchg
sbb
mov
jnp
pop
mov
rolb
dec
mov
lods
scas
xchg
jle
mov
push
rorl
xchg
sbb
inc
lock
dec
push
inc
add
mov
push
lea
cli
mov
ja
jg
mov
jg
pop
xchg
movsb
jno
mov
aam
loop
push
mov
inc
push
jbe
add
jbe
or
rcrb
xchg
fisttpll
cmp
xor
hlt
and
int
lods
hlt
push
jns
call
add
pop
jp
rorl
sub
sbb
enter
sbb
dec
and
push
data16
jge
mov
pop
xchg
jge
stos
repz
loope
mov
sub
cmpsl
pop
pop
imul
stc
xor
xchg
mov
dec
dec
sub
jge
ss
ret
sub
stos
xchg
mov
or
or
mov
dec
sti
cmp
clc
addr16
lret
adc
andb
mov
mov
lods
loope
dec
lods
pop
xor
mov
mov
pop
jnp
push
mov
pop
fidivl
mov
movsb
jg
shr
loop
xor
pop
in
cmp
xchg
outsb
icebp
fistpll
push
das
add
cmpsb
repz
ret
pop
sub
clc
jl
lock
flds
cwtl
imul
mov
out
pop
pop
imul
pop
inc
arpl
jl
pop
xchg
shll
jb
aad
and
cltd
mov
scas
mov
dec
xchg
ret
inc
add
sbb
popa
ficoml
push
pop
es
pop
ss
bound
ss
push
mov
lods
aas
in
or
mov
repz
insl
cmpsb
inc
dec
push
cs
jb
fisubrs
lahf
mov
or
mov
pop
mov
outsb
jmp
add
push
outsl
in
out
sbb
pop
fnstenv
push
stos
mov
cmp
test
xchg
inc
addr16
divb
push
shrl
stos
fcomp
inc
cmpsl
xor
or
ja
jno
mov
and
xor
jb
leave
pop
pop
cld
out
dec
sbbb
mov
ljmp
pop
mov
sub
and
xchg
lods
mov
mov
lret
test
les
xchg
jle
sub
or
inc
ja
lods
xor
cmp
sbb
test
pop
mov
push
dec
fisubl
movsb
pop
push
js
push
pop
add
mov
jg
xchg
add
push
xchg
insl
cmc
test
push
pop
fdivs
sbb
or
lahf
ja
icebp
test
dec
jne
sbb
int
ja
mov
loop
sbb
jnp
sbb
add
jmp
lods
dec
cmc
xor
push
fidivrl
popf
imul
xchg
call
call
out
jl
sub
sbb
mov
orb
ja
sub
neg
nop
push
lods
cltd
cmp
or
dec
xlat
out
or
xor
les
mov
adc
fisttpll
xchg
stos
fdivrl
daa
into
fldt
fs
dec
mov
in
outsl
je
xor
cmp
push
inc
xor
aas
pop
ss
int3
aam
sbb
cltd
xor
fisttps
sti
loop
je
pop
dec
roll
scas
sub
xor
rcr
sarb
fwait
push
jnp
int
das
xor
mov
ljmp
cmpsl
cltd
gs
or
hlt
fisttpl
popa
sub
xor
mov
aas
pop
mov
and
mov
push
rorl
mov
sub
adc
lock
jae
lds
push
lcall
dec
clc
mov
fsubrl
ret
inc
push
sub
mov
xor
sbb
push
xlat
out
add
cmp
push
aas
in
push
or
sahf
lahf
adc
cli
mov
mov
mov
adc
pop
pusha
sbb
and
cmc
mov
lock
lret
popa
andl
lcall
jmp
xlat
scas
add
into
mov
ret
jle
mov
lret
inc
and
mov
lret
adc
push
push
adc
movsb
jne
jno
std
ds
loop
mov
cli
add
cltd
fcomps
mov
push
icebp
out
test
fstpl
sbb
mov
xchg
test
movsl
mov
cli
iret
sbb
andl
jo
jmp
mov
or
xchg
loopne
fwait
xchg
and
fcoms
ljmp
mov
es
aaa
mov
in
push
bound
push
nop
and
mov
fstpt
insl
inc
jp
xchg
mov
mov
sbb
test
pop
jb
pop
xor
movsl
in
xor
or
xlat
cltd
fsubr
xchg
fisubl
sub
pushf
fwait
xchg
outsl
bound
jbe
add
dec
cmp
xchg
push
push
inc
push
aas
nop
fistpll
stos
aam
flds
pop
fidivs
outsb
in
test
sbb
insb
or
jmp
cmp
jb
fwait
sub
les
add
mov
pop
cli
hlt
std
in
mov
or
pop
mov
inc
push
mov
pop
jmp
jle
and
jl
xchg
in
mov
js
cmpsl
es
dec
iret
sub
cld
aas
mov
nop
push
mov
adc
aam
xor
sbb
in
adc
in
aad
fbld
imul
lcall
popf
mov
sbb
rcrb
lods
outsl
out
dec
adc
adcb
out
ds
inc
mov
lods
call
mov
mov
in
sbb
aad
aaa
stos
push
daa
aam
mov
push
push
lcall
pop
mov
adc
shrl
sbb
mov
js
and
ficoml
sbb
pop
sbb
xchg
in
decl
xchg
sbb
pop
jp
push
jno
and
inc
jg
out
shrb
outsb
scas
xor
shl
xchg
mov
movsl
push
icebp
inc
jl
mov
cmc
sbb
cmp
insb
mov
in
subb
orl
jp
inc
iret
orl
sbb
push
scas
shlb
mov
push
cs
cmpsl
insl
dec
push
xor
hlt
sti
repz
jmp
test
dec
lcall
jecxz
std
pop
lods
pushf
pop
lcall
sbbb
incb
or
sahf
outsl
mov
or
jl
push
pop
iret
aas
cmpsl
mov
pop
dec
fs
sbb
push
pop
test
add
movsb
stos
mov
cmpsl
in
rcl
fisubrl
xor
inc
and
mov
leave
mov
dec
jl
push
sub
lcall
lods
clc
add
rolb
xchg
imul
sbb
jo
jae
lea
fsubl
or
lds
mov
pop
adc
or
imull
mov
out
jae
sahf
or
in
pop
sbb
cli
dec
cmp
movsl
lds
loopne
in
and
gs
adc
cmp
aaa
sub
movsb
cli
jl
ss
nop
fstpt
iret
and
addb
jnp
pop
mov
icebp
mov
mov
or
mov
inc
mov
cmp
sub
dec
pusha
popf
std
push
fsubl
repz
push
mov
fmuls
adc
mov
fmuls
lahf
lods
dec
xchg
pushf
sub
dec
push
out
add
xor
mov
popf
mov
lea
mov
xchg
xchg
aad
cld
mov
outsb
and
out
adc
loopne
rcrl
lcall
stos
inc
scas
test
lret
aas
push
nop
jo
adc
gs
jnp
fiadds
scas
imul
pop
gs
ljmp
cmp
cmp
aam
cmc
inc
mov
shlb
jo
pop
and
cmp
xor
add
xchg
xor
jle
fsts
pmuludq
lret
repnz
mov
mov
sbb
add
mov
ds
mov
mov
mov
dec
push
int
lea
cwtl
mov
xor
out
int
lret
xor
stc
outsb
cvtdq2ps
dec
sub
outsb
popf
inc
jmp
push
mov
daa
enter
stos
into
scas
fs
shll
lds
in
jge
fcoms
pop
std
push
sbb
mov
jecxz
loope
out
dec
xor
movsb
lods
ljmp
hlt
lods
push
clc
in
mov
cmp
and
push
pop
stos
pop
jo
ljmp
inc
sbb
xor
xchg
xor
xchg
sub
pop
data16
xlat
lds
pusha
sub
sbb
test
pop
jg
mov
test
push
sub
in
xor
outsb
add
sbb
and
and
jno
test
mov
push
sbb
nop
lahf
test
in
scas
cmpsb
xchg
fisttps
jo
cmp
jmp
or
aaa
push
call
scas
flds
mov
sub
xor
sub
sub
ss
and
xchg
gs
out
insl
ljmp
int
cmp
pop
mov
int
popl
mov
jae
and
out
cmc
push
popf
ja
jp
aaa
mov
mov
stos
sbb
push
into
push
xchg
outsl
fsts
in
xor
adc
lcall
add
xchg
imul
xchg
int3
add
mov
mov
push
push
shlb
and
sbb
jmp
jmp
push
mov
dec
fimuls
imul
jmp
loopne
mov
jp
sbb
lret
test
mov
in
das
popf
push
lcall
outsb
imul
and
shlb
inc
dec
mov
sbb
sbbb
enter
cmp
dec
inc
sub
jl
outsl
movsl
lcall
adc
xor
and
lock
sub
les
incl
mov
jbe
bound
stos
pop
cwtl
push
pop
push
mov
jb
mov
popf
cmp
arpl
aaa
into
sbb
in
adc
mov
lahf
pop
cwtl
fldenv
loopne
pop
and
insl
push
shr
xchg
mov
cld
sbb
jle
jae
xor
ret
insb
bound
leave
aaa
iret
enter
repnz
mov
mov
adc
in
je
adc
or
add
jne
fistps
psrad
icebp
cmp
mov
xchg
lret
dec
mov
repnz
cmpsl
sahf
jne
mov
pop
insl
or
fildl
cmpsl
lods
shrb
shl
sbb
pop
jle
xchg
ljmp
cmpsb
add
mov
outsb
stos
and
mov
xor
cmp
loop
bswap
mov
push
pop
hlt
pusha
pop
mov
out
insb
sub
rolb
lds
das
jp
cmc
mov
outsl
mov
ljmp
stos
xchg
pop
push
cmc
dec
ret
mov
stos
push
pop
ljmp
movsl
mov
cli
push
shll
xor
outsl
jge
mov
mov
cmp
lea
jnp
cmp
pop
xor
add
xchg
fisttpll
push
mov
inc
aam
lods
call
mov
pop
or
push
xchg
lret
dec
pop
inc
jae
imul
sbb
imulb
loope
pop
iret
shll
jno
loop
mov
or
dec
and
dec
inc
xchg
adc
mov
pusha
push
push
mov
inc
aas
xchg
sbb
in
and
and
pop
aas
ds
sbb
je
mulb
pop
fwait
mov
push
nop
xor
pop
or
inc
jmp
cld
sub
mov
iret
lret
jg
addr16
movsb
jg
mov
mov
mov
push
push
mov
ja
push
pop
dec
push
add
fs
jmp
sbb
fmuls
or
jb
loope
arpl
fstl
pop
inc
fdivrl
lods
pop
lret
mov
test
fisttps
jg
push
jb
ds
cli
lea
iret
arpl
lock
leave
xchg
aam
mov
or
mov
push
xchg
xor
mov
in
or
lret
pop
repnz
lret
xchg
test
shlb
pusha
sbbb
aad
inc
mov
call
bound
xchg
mov
aam
aad
fidivs
or
hlt
imul
add
rcrb
push
mov
inc
inc
addr16
push
shrl
lcall
test
inc
and
daa
lock
std
pop
cmp
outsb
das
imul
loopne
das
mov
fldenv
dec
stos
mov
dec
cld
pop
incl
adc
pop
adc
pop
jp
in
iret
sahf
ficomps
sbb
insb
jge
ljmp
lds
pop
fcompl
lea
xchg
insb
filds
pop
call
mov
xchg
lds
cmp
js
and
add
fs
sbb
lret
outsl
cmp
or
nop
push
dec
fildll
pop
shll
pop
les
inc
xor
xchg
xor
out
cmpsb
imul
lahf
jle
daa
cld
xor
pop
push
ds
fisttpl
loope
les
gs
fcmovne
and
jnp
push
leave
cmc
add
mov
push
shr
add
fildll
popa
adc
mov
std
sbb
pop
add
sbbl
cmp
pushf
jp
mov
shll
int3
icebp
insb
loope
adc
fs
xchg
dec
sub
aad
je
push
xchg
push
pop
es
fimull
add
xchg
iret
pop
into
cwtl
inc
adc
push
sbb
push
ret
fwait
adc
daa
adc
push
push
inc
clc
push
push
pop
and
mov
insl
jmp
mov
lods
and
movsl
cld
pusha
mulb
mov
lahf
jge
push
outsl
jbe
xchg
push
popf
sahf
jnp
mov
int
popf
js
xchg
bound
jle
adcb
push
scas
mov
test
push
movsb
repz
imul
loope
ret
mov
cs
shrl
aas
push
pop
cmp
push
test
mov
daa
adc
push
pop
mov
mov
mov
mov
call
lods
iret
scas
js
or
add
clc
and
popf
ss
xchg
jl
js
adc
jnp
sub
cltd
and
inc
aad
sbb
jbe
cmp
cmpsb
add
push
mov
daa
ret
sti
cmpsl
das
fs
mov
mov
jp
mov
gs
push
add
add
or
add
adc
cld
sti
ss
lock
test
push
jg
xchg
xchg
pusha
xchg
sti
mov
dec
lea
loopne
test
int3
sti
test
fcomps
sub
stc
shl
sarl
jnp
aaa
out
mov
pop
nop
and
inc
push
test
or
lods
cmp
lds
sbb
mov
pop
pop
xchg
dec
hlt
mov
push
mov
dec
out
out
pop
push
lds
push
aam
ljmp
sub
xor
mov
mov
ret
mov
stc
lcall
sub
xchg
or
ds
pop
movsb
aam
std
cwtl
mov
test
and
in
gs
lock
jb
fwait
cmp
add
mov
stos
mov
xchg
xor
lea
mov
out
outsb
lret
xor
pop
mov
arpl
int3
sub
jne
stc
mov
and
mov
pop
stos
pop
fldenv
xor
shl
or
je
lods
cmp
fwait
les
frstor
pop
sub
mov
gs
cmc
adc
movl
or
fidivs
sub
stos
outsb
mov
dec
xorb
insb
daa
sbb
cld
xor
inc
fucom
shrb
pop
scas
or
push
or
roll
aaa
mov
gs
rcrb
and
mov
push
fists
jecxz
xor
jg
sbb
push
add
and
mov
inc
popf
in
jne
insl
ja
in
cmpsl
add
pop
sub
outsl
jecxz
insb
dec
cmp
and
xchg
push
mov
lock
and
xor
ret
push
outsb
dec
cmp
mov
mov
outsb
loopne
fs
shll
inc
popf
add
xchg
movsl
cmpsl
push
jp
adc
or
mov
xchg
insl
jmp
in
neg
clc
mov
lahf
or
adc
idiv
insl
orl
xlat
cwtl
outsb
xchg
adc
and
mov
lahf
arpl
mov
arpl
and
mov
mov
stos
je
adc
add
jmp
in
add
add
cmp
sbb
jbe
dec
jecxz
loop
lods
aam
sub
jg
mov
test
mov
out
adc
push
xor
nop
mov
lods
dec
adc
fucomip
mov
test
addl
cld
mov
shll
fstpt
cmp
push
jnp
in
lods
dec
movsl
pop
sub
subl
lock
sbb
jbe
ret
insb
fadds
push
in
push
sahf
add
cmp
clc
push
lret
and
sub
push
cmp
lret
je
jmp
lds
pusha
fdivp
inc
or
mov
push
mov
push
je
push
out
lds
bound
cwtl
test
ja
out
mov
iret
out
push
addl
ds
pushf
enter
add
xorl
sub
sbb
cmovnp
mov
mov
inc
mov
iret
adc
mov
mov
pop
aaa
sahf
push
mov
jbe
lahf
ror
in
push
and
jecxz
cmp
pop
hlt
and
jns
sub
jne
fimuls
or
mov
mov
push
jmp
in
out
movsb
call
push
jbe
movsb
repnz
pusha
xorb
push
divb
int
fiaddl
mov
mov
cmp
pop
push
dec
loop
mov
outsb
push
push
mov
jne
aad
cld
movsb
cmp
imull
daa
decb
jo
test
loopne
add
xor
add
out
mov
jle
inc
jbe
rcrl
lods
or
inc
mov
push
cmp
fxch
xchg
mov
xchg
ljmp
ss
inc
cwtl
pop
or
adc
fcomps
aam
sbb
cmp
lock
sbb
loop
push
xor
or
popl
dec
or
jbe
repz
faddp
lret
push
adc
push
incl
sub
push
movq
adc
or
mov
mov
adc
stc
push
div
xlat
push
or
mov
dec
push
stos
arpl
scas
or
mul
lods
push
xchg
insl
and
pushf
ja
inc
add
mov
scas
pop
jg
dec
loopne
mov
insl
push
cs
xchg
test
or
aas
cmp
iret
xchg
xchg
imul
adc
fwait
inc
mov
jne
push
cli
xor
iret
das
push
mov
lods
mov
adc
cmpsb
leave
mov
lods
imul
dec
popa
nop
mov
insb
aaa
sub
inc
sbb
dec
inc
das
jmp
xor
sub
cmp
mov
mov
xor
jecxz
sbb
mov
pop
mov
int
into
lahf
movsl
in
popa
movsl
push
lret
jo
adc
push
cld
xor
leave
lea
hlt
jno
es
mov
add
outsb
inc
cmp
lret
mov
movsb
pusha
nop
mov
sub
and
push
pop
lock
mov
ret
fs
cmp
repnz
cmp
adc
lret
movsb
aaa
or
in
xor
add
dec
pop
test
pusha
daa
mov
call
addb
sahf
xor
enter
xlat
fs
inc
leave
xchg
imul
xchg
cmp
or
jle
cltd
xor
sbb
mov
sub
lods
mov
lret
xchg
ljmp
lret
xchg
and
das
inc
push
xor
dec
or
rolb
call
lods
push
addb
xchg
and
les
into
adc
jae
inc
fcoml
push
addr16
stc
adc
outsl
imulb
in
and
test
sbb
pop
aam
or
push
add
test
sbb
es
adc
mov
bnd
enter
sbb
adc
mov
inc
dec
push
push
mov
sub
dec
and
cmp
inc
pushf
cmpsl
jl
lret
mov
jmp
loopne
rorb
and
rolb
adc
xchg
ja
idivb
push
inc
rcrl
repz
sbb
lahf
les
idiv
sbb
xchg
pop
rcrb
fbstp
mov
xchg
mov
sbb
dec
js
push
test
cmp
loope
dec
jnp
mov
inc
jmp
xchg
movsb
ret
and
jo
out
and
sahf
out
in
xchg
fwait
addr16
fsubrs
or
and
push
out
cmpsb
pushf
rorb
mov
mov
rcr
mov
jg
push
negl
push
ja
out
mov
lret
push
fadd
repnz
aas
mov
out
out
subl
xor
sbb
push
cmpl
ret
orb
xchg
lds
sbb
nop
aas
cmp
outsl
jmp
in
pop
lret
jae
xorl
push
ficoms
lahf
leave
je
jno
lods
or
mov
mov
gs
add
pop
jne
and
mov
les
push
into
jo
test
and
pop
int3
mov
gs
lret
pushf
test
inc
mov
jns
sub
push
adc
mov
stos
mov
cmp
call
mov
inc
or
jbe
sub
xor
in
pop
shlb
dec
mov
add
mov
cmc
mov
sub
shlb
mov
insb
cmp
cld
out
stos
mov
push
sarl
stos
repz
cld
fcomip
xor
push
dec
arpl
jmp
sub
lret
cmp
mov
mov
mov
mov
ret
arpl
outsb
scas
test
js
fnsave
push
les
hlt
je
mov
icebp
mov
enter
pop
add
stc
push
push
mov
pop
lret
push
jecxz
jg
outsb
into
add
cwtl
xchg
movsl
pushf
fs
cmp
mov
daa
pop
xchg
pop
adc
push
fucom
std
fildll
je
adc
lods
xchg
pushf
test
or
fsubrs
push
mov
push
insl
pop
sub
pop
xchg
addr16
ss
and
test
movsb
div
ja
and
mov
mov
mov
adc
fcom
gs
xor
enter
pusha
ljmp
push
ret
pop
nop
ret
pop
movsb
and
pop
mov
dec
movsb
lods
movsb
xor
popa
sbb
and
pop
mov
and
test
dec
xchg
rol
mov
cmpsl
mov
inc
sbb
xor
fwait
add
arpl
imulb
pushf
and
rcr
sbb
dec
loopne
adc
cmp
rolb
sub
pop
roll
jmp
push
clc
repnz
test
mov
es
outsb
jle
out
lcall
mov
inc
das
sbb
mov
fimuls
lret
inc
cwtl
enter
adc
cli
ss
pop
ret
pop
mov
xchg
shr
and
lods
cmpsb
pop
ljmp
add
stos
loopne
icebp
insb
leave
push
jle
aas
aad
es
push
mov
nop
push
sbb
mov
jb
lock
incl
ret
test
dec
and
fisttpll
push
pop
ret
xchg
xchg
pop
xlat
pop
sahf
pop
repz
fcoml
pop
mov
shrb
lds
icebp
out
jmp
mov
mov
mov
mov
pop
cmp
push
fisttps
sbb
ds
xor
jnp
lahf
and
adc
dec
dec
dec
int3
jg
test
push
clc
dec
sahf
sbb
arpl
je
lods
adc
lds
icebp
sbb
sbb
pop
mov
push
test
int3
xchg
jno
push
out
push
jmp
pusha
mov
xchg
es
mov
fstpl
je
insb
mov
faddl
mov
dec
pop
pop
js
lea
mov
mov
aam
stos
dec
mov
pop
mov
es
xchg
pop
sub
push
or
aaa
dec
mov
jbe
es
movsl
inc
add
nop
push
push
out
fisubl
and
inc
mov
xchg
cltd
xor
add
pusha
mov
roll
scas
push
ds
imul
lcall
xchg
add
lea
ljmp
mov
or
sub
jb
data16
out
sbb
fcomps
jecxz
pushf
xlat
fbld
inc
mov
mov
mov
cmp
fdivrs
mov
push
cmpsb
xchg
lods
rclb
dec
lods
or
or
sub
cltd
xor
pop
cmp
imul
push
dec
rolb
dec
mov
lahf
out
add
negl
jns
cmp
xor
jne
lret
lcall
pop
cmp
imul
jo
loop
fiaddl
dec
aam
xchg
ret
int
cwtl
int
cld
js
push
out
jle
fistps
out
ret
imul
xchg
les
icebp
mov
push
inc
in
test
movsl
call
lea
adc
dec
divb
dec
imul
fstpt
std
sub
fwait
std
enter
shl
int
mov
mov
rolb
inc
scas
dec
jl
fsubrs
and
push
shl
rcl
movsl
inc
scas
cli
xchg
pop
push
dec
outsb
dec
and
aas
dec
or
mov
xchg
sbb
stos
idivl
push
hlt
jp
rorb
sbb
sbb
sub
lock
mov
adcl
fiaddl
lods
dec
sti
pop
pushf
cmp
xlat
mov
xchg
inc
add
xor
fcomps
xor
hlt
and
jmp
fwait
xchg
add
mov
jecxz
int
sub
or
mov
mov
push
pop
aam
jbe
pop
inc
mov
xchg
add
dec
push
xchg
adc
fstpt
lcall
cmp
sub
in
pop
adc
daa
push
lock
scas
clc
je
mov
xchg
jge
out
push
jnp
stos
mov
leave
push
incl
sub
lods
movsl
or
cwtl
cmpsl
loopne
pop
stos
dec
push
cmp
mov
jl
adc
mov
fsubrs
shlb
xchg
cmpsl
mov
inc
add
or
ret
or
fs
xchg
faddl
pop
mov
pop
mov
leave
or
xor
cs
or
insl
jno
movsl
adc
jp
jle
neg
insl
lods
jbe
clc
pusha
into
in
sbb
add
lcall
pop
push
test
jmp
lods
stos
test
hlt
and
lcall
popa
sub
lcall
xor
sub
fstps
outsl
imul
ret
inc
or
rdrand
mov
out
das
out
hlt
lea
fmull
add
cli
and
push
cmp
pop
jae
sub
mov
daa
mov
sti
shlb
sbb
mov
or
xor
js
mov
sbb
xlat
jb
rcrb
sub
aam
ja
cmovnp
mov
and
inc
xor
adc
outsb
cli
jns
inc
shll
int3
pop
adc
and
rcl
in
xor
fdivrs
or
add
sbb
push
mov
mov
inc
pop
push
repz
mov
push
pop
int3
sbb
pop
lods
push
jno
notl
call
or
jl
and
sbb
loope,pn
insb
lods
shrl
das
inc
stc
cmp
fsubp
xor
rclb
mov
adc
mov
push
add
sub
mov
pushf
dec
xor
rorl
dec
lahf
lods
xchg
dec
jne
xchg
scas
or
mov
test
or
cwtl
push
push
push
jge
sbb
int
ja
adc
je
iret
dec
cwtl
dec
jl
add
adc
pop
xor
daa
dec
cmp
les
or
xor
test
or
dec
cmp
mov
push
fidivrs
pushf
jl
dec
and
xor
into
aam
lret
pusha
push
and
and
rcrb
cmp
scas
mov
scas
pop
test
imul
jecxz
jnp
jp
test
fcmovbe
outsl
mov
mov
xor
adc
xchg
push
and
or
sub
push
xor
clc
and
push
jno
in
inc
cmp
lods
lret
mov
mov
repnz
out
outsb
sub
pop
dec
xchg
out
repz
imul
mov
push
ss
or
mov
push
jge
mov
shl
pop
into
repnz
dec
nop
jmp
push
sarl
cltd
rcr
loope
and
sahf
mov
xor
sbb
flds
or
lea
sbb
nop
movsb
xchg
fisubrl
cli
pop
jo
xchg
shll
rorb
push
gs
testb
lea
add
fnsetpm(287
mov
mov
inc
xchg
pop
push
cltd
outsb
and
lret
mov
mov
mov
out
mov
mov
iret
pop
fnstcw
add
xlat
lock
add
lcall
dec
xor
lahf
mov
adcb
xchg
fsubl
push
cmp
dec
lds
mov
dec
loope
pop
mov
pop
jle
mov
stos
jb
nop
fcoml
inc
les
push
daa
mov
jmp
add
pop
dec
cmp
add
and
lock
mov
inc
mov
out
xor
or
popf
test
sub
scas
nop
popa
mov
dec
imul
cmp
add
jo
leave
lret
sub
enter
push
test
rclb
insb
or
add
mov
push
mov
ret
dec
mov
sub
loop
ficomps
cli
inc
mov
jno
xlat
xor
cmp
in
push
int3
test
roll
aaa
imulb
dec
je
sbb
pop
push
or
mov
sbb
add
sub
fiadds
enter
andb
inc
fchs
lahf
stc
jns
adc
fptan
icebp
mov
aas
repnz
mov
mov
rolb
dec
test
sub
adc
lds
sub
jns
rcl
xor
repz
fidivl
sbb
mov
sub
pop
in
insl
test
sahf
push
call
sbb
stc
adc
xor
ds
int3
push
addr16
push
daa
jl
push
mov
inc
jae
leave
and
rcrb
ss
mov
or
cltd
mov
and
mov
popa
movsl
sub
cmp
mov
pop
mov
aam
fsts
lods
adc
cmp
dec
pop
dec
inc
pop
pushf
loopne
jae
mov
and
or
stos
fadd
and
imul
pop
push
lods
jbe
cmp
pop
imul
sub
adcl
xchg
inc
mov
repnz
pmaxub
mov
cmp
cs
mov
out
in
hlt
inc
imul
icebp
sbb
int3
pop
insb
lcall
mov
or
or
mov
cmpsb
and
lcall
nop
or
xorl
data16
jbe
js
and
dec
shr
clc
daa
test
flds
aam
xadd
imul
gs
adcb
sub
in
push
and
cmpl
pop
jne
dec
cmpsb
pusha
adc
rol
pop
inc
xor
pop
sub
add
push
daa
daa
sbb
sbb
mov
xor
int3
jae
imul
fstpt
mov
add
stc
pushf
mov
jne
sbb
sub
push
lock
and
mov
nop
addr16
jle
test
adc
cli
and
mov
dec
jg
lea
rclb
leave
jno
nop
xor
adc
jp
mov
xchg
mov
les
mov
sbb
inc
fistpll
shrb
inc
pmullw
sbb
push
mov
sub
mov
je
inc
mov
inc
mov
mov
cmp
enter
adc
fs
aas
mov
jb
enter
cmpsl
lahf
andl
sub
push
sbb
leave
add
rorb
and
dec
mov
cmpsl
jge
dec
les
aam
add
xchg
jae
sub
filds
out
ret
push
pop
movnti
jo
jg
adc
stos
xchg
bound
lcall
or
pushf
test
jl
stc
dec
test
rcrb
mov
add
iret
into
push
adc
insb
loope
mov
rol
and
mov
test
sahf
jge
xorw
mov
and
push
sahf
outsb
pop
and
mov
jb
cmp
add
mov
xorps
insb
sub
mov
fistl
or
jge
mov
repz
dec
push
in
mov
or
loopne
in
adc
jnp
fwait
pushf
push
xor
adc
mov
sbb
orl
inc
scas
test
rorb
test
iret
insb
xchg
lock
fsubs
out
mov
call
jl
jae
cmpsl
cmp
push
ss
xor
loopne
out
out
jge
mov
filds
jae
loope
pop
add
incl
mov
insl
frstor
jmp
pop
scas
das
gs
movsb
jno
mov
mov
mov
push
aas
push
sti
jp
inc
jnp
lea
mov
cmp
icebp
push
push
fs
jl
outsl
cmp
faddp
mov
popf
adc
sub
adc
fwait
jmp
add
push
pop
repnz
iret
aaa
xchg
sub
je
idivb
dec
int3
aad
adc
imul
mov
ds
test
inc
cmc
pop
sbb
aas
int3
and
xchg
mov
rcrl
cmp
mov
shlb
ss
ss
outsl
add
push
cltd
or
out
mov
sbbb
pop
or
add
dec
out
fists
iret
sub
cmc
xor
dec
xor
pop
cmp
inc
mov
insb
dec
jge
shl
dec
pop
fldenv
ja
ret
iret
mov
stc
cmc
call
push
std
mov
repz
aad
xor
adc
in
adc
mov
and
mov
outsb
mov
and
or
pop
xor
mov
enter
lret
popa
sahf
push
jmp
nopl
jne
jbe
fists
pop
push
dec
ret
sbbl
push
cmp
clc
scas
dec
out
movsw
stc
pushf
sti
push
push
int3
nop
sbbl
inc
ja
cli
sbb
gs
cmp
mov
cmp
mov
xchg
push
sbb
in
gs
and
cltd
mov
jb
lret
rcll
mov
loope
icebp
pop
or
cmp
ret
out
bnd
sarb
jl
cmpsl
cli
cmp
in
push
loop
mov
add
mov
and
sub
stos
leave
sbb
mov
je
lods
mov
push
je
push
dec
mov
imul
add
sub
sar
xchg
fiaddl
cmc
pushf
xor
adc
lcall
lcall
test
ret
or
lret
pop
addb
jge
adc
nop
iret
into
aad
sub
xor
data16
or
jg
jns
mov
pop
inc
add
or
jne
ret
xchg
push
shll
pop
mov
fcmovne
jge
out
xor
mov
dec
dec
dec
mov
out
adc
test
mov
test
mov
aam
std
cmp
and
hlt
or
bound
in
jl,pt
rorl
cmp
cs
or
xor
dec
sti
pusha
cmpsl
ud1
pop
dec
fcoml
int
in
test
mov
and
cmovae
cld
jo
cld
testb
pop
mov
mov
shlb
mov
sub
mov
mov
cmpsb
xchg
fadd
ret
push
stc
ljmp
jmp
push
stos
outsb
jo
in
rcr
test
mov
xchg
fldcw
ljmp
outsl
lret
mov
pop
stc
cmc
inc
int
and
cld
push
mov
pop
pop
sub
jge
int
cmc
insb
and
sbb
test
and
lea
in
test
movsb
cmp
or
js
dec
iret
lahf
clc
insb
aas
mov
fadds
movsb
mov
mov
mov
xchg
cmp
orl
sbb
adc
xchg
popa
push
mov
orps
adcl
dec
fildll
nop
outsb
and
int
mov
aas
cmp
aam
jg
jmp
jno
sahf
leave
and
mov
cs
rorb
popa
int3
icebp
jbe
mov
adc
lcall
call
cmp
ds
and
jmp
sub
xchg
fs
mov
iret
mov
inc
jg
dec
bound
dec
aaa
xchg
mov
mov
in
out
scas
pop
push
les
inc
xor
hlt
jnp
sub
int
adc
in
test
adc
mov
fldenv
leave
loope
cmp
jo
cmp
ds
loope
push
pop
fldenv
add
daa
mov
test
dec
std
fwait
cmpsl
and
aam
push
mov
dec
cli
xor
pusha
aam
pushf
jmp
arpl
adc
sub
test
lods
xor
lea
les
inc
pop
insl
lods
out
stos
test
cmp
sub
test
sub
ljmp
cmpl
or
pop
fwait
push
repnz
xchg
sub
sti
mov
xor
jb
or
pop
repz
lret
adc
je
dec
stc
xchg
xchg
sbb
lret
daa
add
out
shrb
mov
call
add
int3
rcrl
mov
subb
mov
xor
aaa
push
daa
jbe
xlat
pop
out
mov
push
xchg
dec
jne
dec
test
jg
xor
mov
inc
out
test
xchg
mov
mov
push
ja
sub
lods
movsl
jg
into
mov
dec
fsubl
pop
push
movsl
pop
mov
dec
inc
movsl
mov
scas
pop
dec
aaa
push
push
push
mov
fs
das
jbe
rorb
jb
pmaxsw
mov
scas
mov
adc
xor
inc
rcll
pop
popf
add
mov
imul
lods
mov
subl
sbb
jl
add
nop
mov
or
mov
cltd
jb
adc
mov
test
mov
std
sbb
rcll
shlb
test
xchg
dec
inc
or
xchg
cmp
sbb
into
xlat
mov
inc
pop
cmp
popa
repnz
pop
push
inc
mov
das
divb
cmp
or
fstpl
adc
aaa
scas
adc
pop
mov
pop
pop
loopne
or
dec
sub
pop
mov
mov
scas
fistl
sub
movsb
sub
ret
lret
ja
jg
pusha
mov
sub
movsb
xchg
inc
xor
cwtl
test
lcall
xlat
jecxz
add
dec
xchg
mov
cmc
xor
lret
pop
ret
fsubrs
push
decl
es
fbstp
sub
or
dec
mov
lcall
xor
inc
iret
add
mov
jnp
xchg
jo
mov
fcmovnu
test
lds
sub
imul
aad
repz
mov
and
and
stos
xor
xchg
pop
push
mov
sub
testb
cmp
push
or
mov
sbbl
ret
and
pop
inc
daa
jg
int3
out
mov
pushf
aas
xchg
out
insl
enter
in
cmp
pop
les
adc
std
add
ret
cmc
cs
or
stos
pop
daa
push
inc
into
cltd
add
aas
sub
push
push
cmp
adc
sahf
pop
stos
add
mov
icebp
pop
push
inc
das
sub
std
add
push
incb
cmp
push
sub
pusha
fs
int3
dec
sbb
push
dec
adc
and
insb
mov
mov
les
cmpl
ds
movsb
xchg
decb
xor
fwait
xor
std
inc
les
decl
movsb
xchg
call
add
lret
movsb
cld
xchg
cmp
inc
mov
xchg
pop
dec
and
icebp
movsb
in
dec
mov
and
mov
imul
fldt
rorb
cli
or
jl
fcoml
adc
clc
mov
push
xor
mov
repz
pop
rorb
clc
repz
push
sub
dec
jg
cwtl
adc
push
repnz
jmp
xchg
mov
pop
pusha
sub
cmp
jnp
popf
dec
adc
pop
pop
mov
mov
iret
shl
idivb
or
cli
mov
and
ljmp
aaa
or
pusha
pop
and
ss
sbb
ret
test
data16
cmc
out
lcall
or
cmp
mov
push
jno
and
fdivs
mov
lea
loope
mov
imul
or
push
into
push
cmpsb
dec
sahf
and
xor
push
fcoml
into
outsl
sub
jecxz
and
pop
scas
dec
sbb
cltd
mov
jecxz
pop
mov
outsl
inc
mov
xor
inc
mov
js
aas
fimuls
lcall
adc
fidivrl
sti
cltd
adcl
aaa
add
arpl
cmp
xor
pop
ror
stc
adc
push
mov
xor
loop
push
jmp
iret
inc
scas
stc
ror
cmp
push
int3
jnp
jp
or
outsb
lret
cmp
shl
mov
mov
lret
xchg
or
inc
xchg
stos
sbb
pop
je
xchg
clc
sub
pop
mov
arpl
imul
sbb
and
sbb
or
inc
pusha
in
jp
fucomp
add
push
adc
das
call
lods
sbb
dec
hlt
adc
into
pop
ss
add
inc
popf
testb
or
cmp
add
and
sbb
or
aaa
cmp
xchg
jg
int
insb
push
add
push
jmp
hlt
mov
and
jg
jmp
nop
sti
adcl
scas
cmp
cmpsb
add
cmc
xchg
push
fucomip
or
xor
mov
out
mov
shrb
and
stos
fldt
fwait
test
add
pop
dec
lea
lods
es
mov
iret
add
lods
inc
lods
jge
and
jnp
repz
fnstcw
lea
mov
ja
fistpll
jmp
imul
pop
mov
enter
add
movsl
out
push
push
mov
push
shll
dec
xchg
jo
loop
lret
push
stos
add
pop
and
dec
jo
push
leave
cs
into
cmpsl
pop
int
movsl
rorb
pop
adc
sahf
dec
xchg
decb
mov
cmp
pcmpgtw
xor
push
cmp
fwait
mov
dec
sub
pop
fsubr
iret
dec
mov
repz
stos
shl
pop
inc
xor
bound
fisubl
jbe
lret
sub
jbe
mov
loope
mov
aam
and
or
stos
dec
repz
movsb
dec
jae
pop
inc
aas
test
xorl
xor
sub
xchg
out
pop
mov
in
and
pop
scas
inc
jbe
stc
fimull
push
sub
adc
into
in
dec
or
test
hlt
std
xor
sub
inc
push
dec
sub
mov
and
dec
loope
jge
scas
sbb
inc
xchg
and
rcrl
jo
movsl
push
orb
push
mov
xchg
loope
adc
adc
push
insb
fdiv
push
das
jo
idivl
outsb
jle
out
cli
mov
mov
data16
mov
mov
push
inc
int
pop
push
insb
mov
dec
ss
mov
out
sub
push
lcall
nop
lret
loope
je
inc
mov
idivb
rcll
push
nop
pushf
testb
sbb
jb
mov
add
test
aaa
mov
dec
lcall
or
pop
xchg
out
iret
mov
mov
addr16
jae
mov
and
sbb
push
das
test
pop
adc
xchg
mov
lds
das
imul
leave
jg
dec
js
add
dec
sbb
sbb
je
mov
mov
mov
jge
add
jmp
xor
hlt
hlt
inc
and
stos
adc
test
lods
add
bnd
hlt
adc
scas
lret
das
cmp
pop
ficoml
adc
sti
cmp
movsb
in
mov
lret
fwait
pop
in
loope
gs
jl
into
jnp
mov
int
mov
insl
push
cltd
cld
insl
mov
dec
or
scas
test
ficoms
ret
lock
pop
inc
loope
inc
cwtl
flds
adc
jecxz
jge
push
jp
inc
dec
iret
es
rorb
scas
adc
popf
loope
imul
jecxz
scas
adc
mov
bound
popa
nop
add
stc
inc
xor
jnp
mov
mov
jo
cmpsl
dec
jbe
xor
lods
push
movsl
imul
lcall
adc
stos
and
popa
pop
mov
pop
in
or
loopne
stc
hlt
xchg
adc
jb
mov
lea
sub
jecxz
and
ss
in
or
int3
mov
add
pop
lea
adc
jnp
int
cwtl
adc
fisttps
and
iret
cmpl
in
mov
mov
dec
mov
fnsave
test
lea
lcall
mov
add
jecxz
stc
loope
xor
lret
xor
test
call
ret
inc
xlat
inc
sbb
mov
mov
dec
adcl
popa
mov
cld
xchg
add
sub
push
xor
push
xchg
call
imull
xchg
out
aaa
sbb
enter
rclb
loopne
xor
push
or
faddp
dec
xor
add
jmp
inc
or
pusha
sbb
xor
lcall
xchg
dec
cs
inc
lret
aam
rcl
and
sbb
xor
sbb
dec
mov
sahf
or
xor
add
pop
sbb
sub
out
lods
mov
scas
adc
inc
dec
pop
testl
xchg
enter
insl
aam
mov
imul
jbe
mov
mov
mov
adc
lds
inc
jb
mov
mov
mov
dec
or
pop
push
mov
mov
imul
xchg
adc
pop
xor
cmpsb
push
cli
lcall
outsb
out
xchg
incb
icebp
inc
or
sub
mov
sbb
insb
dec
push
les
jnp
xorl
gs
pop
cltd
enter
mov
mov
pusha
add
and
lret
pop
mov
das
mov
sub
jnp
loop
scas
out
test
enter
sub
insb
daa
xorb
or
mov
mov
les
jbe
adc
or
fst
mov
aam
dec
rcll
xchg
or
std
xor
mov
inc
xchg
push
insb
sub
ss
arpl
inc
inc
pop
lds
and
mov
insb
repz
xchg
cmp
roll
add
jge
inc
pop
into
push
and
cmp
in
outsb
ljmp
repz
int
push
scas
mov
adc
sub
add
cs
dec
pop
out
jbe
std
mov
arpl
and
inc
pushf
fstl
stos
push
in
xchg
aam
cmp
out
mov
hlt
pop
cmpsl
xchg
fmuls
inc
in
add
or
or
dec
lcall
mov
xor
adc
loop
loop
jne
mov
xor
call
lds
in
fstpl
mov
dec
dec
add
pop
sbb
and
xchg
pop
popf
cs
loope
inc
xchg
mov
aaa
dec
mov
sub
fisubrs
iret
jno
sub
dec
loopne
pop
testb
xlat
in
and
in
aam
mov
int3
cmpsl
in
jl
cmc
xor
scas
movsb
fists
arpl
nop
jb
jnp
xchg
sub
std
sub
adc
imul
push
inc
dec
and
insl
dec
mov
sub
push
dec
arpl
adc
adc
int
mov
xchg
pop
adc
xor
pop
xchg
shll
out
or
xchg
pusha
mov
imul
jge
pop
jg,pn
or
jne
cmp
mov
out
adc
sub
sbb
in
f2xm1
scas
pmaddwd
and
pop
movl
ljmp
push
ret
pop
pop
dec
ret
add
lret
push
jecxz
mov
jl
in
push
pop
hlt
mov
push
pushf
lock
in
dec
or
push
cmp
out
leave
data16
jbe
test
sub
mov
add
and
lods
lret
mov
add
xchg
lcall
test
test
jno
imul
scas
pop
and
fimull
lds
dec
fcmovne
mov
mov
gs
push
sub
repz
ss
fists
imull
das
cltd
sti
divl
call
call
fcomi
mov
xchg
aad
xor
push
jl
and
sub
std
xor
inc
mov
or
aad
pop
add
push
loope
jecxz
pusha
lcall
pop
movsb
js
jb
fidivrl
andl
call
fstpl
insl
jns
cld
mov
jnp
fs
adcl
pop
je
stos
mov
rcrb
dec
cmp
jecxz
test
mov
sahf
loopne
cltd
gs
rcr
dec
mov
cmp
jnp
xchg
inc
pop
pop
test
enter
sub
push
popf
stos
sti
mov
std
out
add
test
in
sub
cmpsb
in
dec
je
xchg
inc
xchg
push
adc
xchg
pop
adc
shll
addb
repz
pop
pop
sbb
mov
dec
sub
hlt
lret
clc
jno
ds
or
test
or
outsl
cmp
pop
mov
ja
cmpsb
das
or
jne
fsubs
pop
iret
scas
mov
and
and
movsl
das
mov
dec
dec
shlb
pop
out
repz
sti
mov
jb
jge
xor
dec
mov
cwtl
adc
sahf
leave
pop
xor
xchg
arpl
pushf
rcrl
cli
test
loop
or
rcrb
xor
cmp
push
icebp
or
in
push
mov
sbb
outsl
hlt
dec
lret
hlt
psubd
lret
or
test
clc
jg
mov
mov
mov
mov
hlt
lea
mov
lea
inc
mov
push
cmp
js
lahf
mov
mov
xchg
pop
lcall
and
aam
add
mov
test
pop
jbe
pop
or
cmpsb
outsl
dec
jg
inc
xor
mov
mov
cmpsb
sub
mov
int
out
mov
cltd
sbb
test
dec
adc
jmp
push
outsb
push
cmp
adc
cmpl
in
clc
loop
in
in
jle
sub
mov
cmpsl
sbb
dec
lret
popa
adc
ss
jp
inc
lahf
ja
outsl
cltd
and
sbb
call
inc
lahf
push
push
ret
push
pop
std
pop
cmp
data16
pop
daa
dec
inc
or
fcoml
loope
pop
aas
cli
mov
lods
ret
cmp
pusha
ffreep
xor
jnp
cmpl
sub
pop
cvtdq2ps
xor
mov
shrb
sbb
push
orl
aas
scas
push
mov
mov
dec
mov
inc
mov
cltd
and
and
das
fsts
pop
bnd
jne
insb
bound
out
lret
add
push
mov
je
xorb
jl
cmp
sbb
out
stos
das
lods
scas
popf
or
sub
lds
or
dec
stc
mov
loope
push
jmp
movsl
test
or
jecxz
popa
push
cmpsl
les
mov
mov
int
in
mov
mov
mov
fs
jb
lcall
iret
sti
repz
shl
sbb
cmpb
sub
cmp
push
ja
sbb
adc
xchg
push
and
leave
pop
cli
or
add
add
out
imul
dec
int
cmp
hlt
sbb
add
push
xor
jecxz
adcl
cmp
aam
decl
cmc
testl
test
sub
fdivrl
mov
nop
push
cwtl
mov
xor
inc
xlat
sbb
xchg
stc
mov
call
mov
not
cwtl
andl
dec
idivl
popa
push
xor
dec
xchg
js
mov
or
adc
mov
rcll
int
mov
xor
insb
sbb
bound
adc
sub
orb
and
add
hlt
adc
lcall
test
xor
cld
test
mov
mov
add
test
mov
je
test
push
loopne
or
add
inc
loop
jno
push
jbe
cmp
push
bound
std
pop
rol
or
or
and
mov
jno
mov
inc
mov
jg
xchg
add
dec
and
stos
pop
dec
push
fnstsw
out
popa
subb
xchg
insl
loopne
push
ja
dec
shll
mov
sub
add
je
jmp
lds
pop
and
push
xchg
testb
pop
or
inc
int
mull
push
mov
mov
ficoms
dec
inc
es
jecxz
pushf
stc
jmp
jmp
jle
sub
mov
sub
or
pop
inc
add
loope
popf
push
jmp
andl
inc
add
adc
dec
dec
lret
sbb
pop
lret
or
mov
xlat
inc
pop
lock
fstpt
mov
or
sub
ss
dec
scas
stc
mov
fistpll
fs
mov
pop
adc
enter
xchg
cmpsb
imul
fdivrl
push
dec
inc
arpl
test
int3
popf
out
popf
jne
jg
in
daa
mov
fmulp
jge
lea
dec
or
and
cmp
jmp
mov
fadds
mov
pop
iret
mov
iret
sub
test
int
mov
jge
mov
pop
mov
lret
incb
stos
cmp
jmp
and
adc
lahf
push
adc
cmpsb
adc
or
xchg
dec
enter
jl
mov
xchg
jnp
fcomp
add
lods
mov
pop
jb
mov
jle
inc
out
xchg
and
mov
mov
lret
dec
adc
inc
xor
ret
cmp
in
and
fistl
xor
xor
pop
fsubs
aad
push
movsb
xchg
ss
xor
ret
aas
arpl
enter
push
push
add
hlt
cld
or
iret
cmp
cmp
jl
insb
aam
daa
pop
sub
push
sub
int3
dec
adc
push
pop
je
aaa
sub
add
sahf
mov
inc
mov
xchg
adc
adc
dec
test
xchg
lret
insl
mov
loop
mov
jbe
pop
dec
pop
pop
mov
mov
test
inc
insb
pusha
enter
mov
push
mov
in
call
mov
in
ret
xorb
sbb
push
fidivl
test
popl
or
cmp
and
add
push
imul
mov
sbb
dec
add
repz
sub
jmp
ljmp
int
sbb
dec
and
inc
sbbb
sub
xor
add
mov
add
enter
std
xor
mov
add
mov
mov
std
xor
xchg
and
pop
sbb
dec
pop
in
iret
xchg
ljmp
jecxz
insb
xor
call
push
fists
stos
and
popa
sahf
leave
stc
mov
pop
cmp
mov
rcl
test
out
xchg
push
adc
mov
push
adcb
dec
mov
imull
adc
movsl
cld
pusha
add
fs
arpl
or
dec
lret
adc
loopne
add
sub
incl
xor
in
pop
ret
mov
jmp
dec
ja
int
mov
jbe
xlat
add
popf
arpl
sub
adc
jl
push
cmpsb
push
lcall
jb
sub
fistpll
ret
lahf
xchg
and
lea
push
lret
inc
push
das
aad
jb
loopne
mov
mov
outsl
pop
inc
pop
sbb
fldenv
push
xchg
add
aam
or
rcr
test
je
imul
cmp
fsubrl
lock
mov
insl
adc
clc
push
ja
icebp
icebp
and
lahf
jle
jne
imul
cmp
or
ljmp
imul
lds
bound
add
fstpl
add
mov
in
insl
insl
and
insb
adc
push
push
adc
mov
sub
psrlq
fwait
pop
faddp
pop
add
sbb
out
mov
and
mov
dec
ljmp
ret
fwait
dec
mov
pushf
sets
and
cld
mov
pop
pop
mov
push
jmp
sub
aas
jle
sbb
leave
xlat
jg
daa
xchg
dec
movsb
fiadds
shrl
dec
stos
add
xchg
cwtl
sub
popf
push
xor
jns
push
std
dec
xor
lret
dec
lods
add
jl
push
dec
pop
scas
ds
xchg
jg
dec
push
aad
js
dec
jecxz
shrl
addr16
ja
inc
sub
jp
shlb
push
in
xchg
test
sub
ja
cmpb
test
mov
gs
push
outsl
lea
push
lahf
stc
dec
xchg
mov
mov
mov
ss
enter
push
ds
iret
xor
mov
iret
popa
nop
push
add
subl
sti
xor
sbb
pop
ret
sub
xchg
cli
stc
pop
mov
out
add
fisubrs
les
out
pop
popf
movsb
push
xchg
cmp
jmp
or
xor
jnp
mov
out
jge
aam
rorl
inc
and
cmpsb
mov
mov
or
push
lret
cltd
jae
push
mov
movsl
ret
mov
pop
pop
add
add
enter
fnstenv
in
xor
dec
mov
push
test
mov
jmp
xor
pop
leave
lcall
xor
sbb
iret
sub
jo
rorb
nop
inc
push
std
mov
movsb
insl
test
movsb
mov
sub
jnp
sbb
xor
enter
jno
cmp
add
fwait
cmp
nop
mov
test
fistpl
sub
push
cmp
adc
xor
inc
pusha
mov
arpl
aas
xchg
xor
add
adc
popa
loop
sahf
sbb
xlat
mov
add
mov
add
ljmp
lods
int3
push
bound
pop
ds
dec
push
xchg
daa
call
das
addl
mov
jg
rcrl
mov
mov
loope
repnz
inc
jne
ss
cmc
add
andb
jecxz
icebp
iret
pop
lds
push
and
cld
lods
sbb
sub
dec
pop
shlb
or
js
sub
loope
push
outsb
inc
push
pop
ljmp
cmpl
call
in
fdivrl
xchg
icebp
ror
jp
call
inc
fisttpll
mov
xchg
xchg
mov
mov
mov
pop
cli
dec
xor
jb
test
xor
inc
jl
pop
lret
aam
or
cwtl
xor
int3
push
rcll
push
nop
pop
cltd
fwait
ret
xchg
mov
lea
repz
dec
jle
test
adc
scas
sub
mov
outsb
mov
inc
subb
aam
jno
mov
mov
sbb
fdivrl
add
jo
ficoml
pusha
push
fs
mov
pop
lea
xor
push
cwtl
into
dec
es
mov
imull
decb
sahf
or
in
loop
cltd
xor
adcb
sub
push
adc
nop
cmpb
lret
add
sbb
jb
cli
in
pop
jns
outsb
into
mov
pop
out
xlat
adc
ret
dec
sti
mov
mov
pop
and
dec
sbb
mov
push
inc
jae
sbb
out
enter
lahf
sbb
pop
add
push
xor
and
or
mov
repnz
ret
mov
dec
popf
outsl
jo
js
mov
aas
push
decl
lods
fmul
cmp
jb
lods
jo
mov
fcoms
test
sbb
push
cs
ljmp
dec
ljmp
imul
pop
fwait
fs
xchg
fildll
xor
mov
sub
fs
repz
and
orl
enter
stc
in
sahf
shrb
fwait
outsl
clc
lods
loopne
xor
popa
fmul
cs
jb
out
les
jns
dec
sbb
cs
mov
xchg
sbb
sub
out
dec
xchg
out
add
out
adc
xor
adc
push
les
cmpsl
cmpb
das
test
mov
scas
xchg
add
scas
and
popa
js
daa
idivl
cmpb
pop
fstps
imul
push
adc
add
call
inc
lret
pop
movsb
dec
ljmp
insl
je
push
inc
lcall
jmp
xorb
xor
pop
xor
loopne
adc
int
popf
or
gs
xchg
sub
mov
out
je
xor
jbe
je
or
cltd
jo
jg
inc
insl
sub
cmp
mov
and
ja
sub
gs
add
jmp
jne
adc
les
xorb
push
inc
aas
outsl
mov
mov
outsl
inc
sbbl
stos
mov
js
fs
inc
mov
jne
mov
je
or
mov
test
xor
mov
pushf
jecxz
lock
in
mov
jne
iret
jg
fnstenv
into
push
bound
cmp
xchg
rcrb
push
cmp
and
cmpsl
mov
es
inc
xor
cmp
leave
movsb
push
xchg
mov
jecxz
jbe
ljmp
mov
inc
aad
mov
mov
and
outsl
and
pop
mov
lahf
cmp
push
daa
pop
test
cmpl
push
dec
jle
mov
es
cmp
mov
adc
adc
jno
cld
push
arpl
mov
mov
mov
jne
scas
push
rorb
cld
jbe
sbb
addr16
jl
in
jmp
cmp
sbb
std
pop
stos
cmp
std
mov
jle
push
subl
aaa
pop
lret
or
mov
adc
and
xor
jle
lret
sbb
adc
or
cmp
sub
int3
add
sub
push
pop
loopne
inc
mov
outsb
xchg
mov
jmp
insb
or
and
fldenv
xor
adc
testl
push
fdivrs
dec
in
js
subb
push
cld
cmpsl
movsl
pop
adc
sbb
or
add
dec
dec
lahf
or
ss
cld
cmpsb
dec
sub
jno
je
out
xor
stos
pop
adc
sbb
xchg
mov
xchg
add
dec
cltd
outsl
rclb
push
bound
sbb
clc
gs
lret
leave
addl
rep
mov
pop
mov
mov
pop
mov
or
leave
out
mov
fstpt
adc
jns
sub
adc
xor
repnz
adc
jmp
mov
call
and
fcmove
xchg
push
jg
arpl
sub
mov
add
xor
push
aad
cmpsl
push
das
jl
mov
subb
adc
lock
xchg
lods
movsl
fs
sub
lea
js
jl
lods
and
sub
scas
jno
icebp
mov
inc
das
leave
mov
fsubr
movsb
loope
lods
sub
xor
mov
shll
adc
jo
int3
loop
in
mov
and
insb
xorb
lods
mov
popa
dec
xor
mov
out
dec
pop
push
push
stc
fstpl
daa
cmovle
sub
inc
pusha
mov
push
jle
fcomip
stos
icebp
ja
shll
jle
or
jmp
mov
je
out
scas
ss
outsl
fbld
lret
push
cmp
fcoml
addr16
mov
xlat
inc
imul
addl
mov
cmpsl
adc
aam
push
aas
scas
sbb
ds
sub
mov
mov
or
sub
in
aad
fwait
adc
mov
out
frstor
cmp
add
icebp
sbb
jno
adc
xor
out
daa
mov
mov
mov
push
movsb
scas
and
add
mov
insb
push
mov
xchg
sbb
out
sub
push
jno
out
stos
cli
loope
mov
scas
push
bnd
push
push
jl
inc
mov
xor
xor
je
dec
int3
dec
jne
cli
cmp
cld
clc
ret
outsb
lahf
fcmovbe
icebp
pop
cmp
add
adc
negb
outsb
or
cmp
out
mov
cmpsl
mov
xchg
adc
insl
jle
pop
das
pop
dec
push
mov
mov
push
fildl
mov
cli
push
hlt
scas
sbb
push
jl
out
ds
mov
mov
test
std
push
repz
lds
push
pop
dec
push
movsb
push
sbb
adc
xchg
jno
inc
aam
mov
in
mov
fldt
jns
andl
xchg
cmp
adc
cli
stc
xchg
pop
cs
mov
mov
jnp
popa
push
iret
adc
out
negl
sub
cmp
add
dec
xchg
mov
mov
popf
xor
int3
jmp
jmp
dec
mov
pop
js
les
enter
daa
lods
leave
scas
pop
xchg
ljmp
push
test
ljmp
daa
test
jno
dec
aad
adc
lahf
push
adc
xlat
xchg
jne
pusha
mov
jno
fistl
stc
ljmp
popf
data16
insl
and
fists
dec
xorl
das
aaa
adc
inc
sahf
cltd
dec
aad
rcrl
sbb
or
and
and
imul
jge
repz
ret
cmpsl
mov
xor
cld
pushf
jmp
push
push
jge
push
xor
stc
pop
jl
pop
rcll
pop
mov
dec
pop
jne
das
adc
jns
das
fs
test
enter
movsl
push
shrl
mov
or
in
xchg
in
imul
inc
inc
out
push
cmc
jge
jecxz
int
xchg
int
sub
aaa
ljmp
mov
cmp
jnp
sahf
scas
jno
inc
adc
inc
adc
fcmovnb
pop
adc
rcrl
fstpl
decb
into
sub
or
dec
push
inc
and
rclb
stos
push
lock
idivl
push
adc
push
neg
mov
mov
mov
arpl
test
scas
mov
lret
add
fsubrl
xor
rorl
push
lcall
int
adc
clc
mov
into
jmp
jp
sbb
lahf
sub
aaa
jno
cmp
jae
adc
xchg
push
mov
movsl
pop
pusha
add
mov
arpl
cmp
pop
mov
loopne
inc
jno
ss
jns
in
sti
xor
loope
popa
push
dec
pop
rcll
leave
arpl
jnp
xor
pushf
mov
scas
sub
cli
ret
adc
cmp
jcxz
pop
xor
jno
loop
dec
mov
dec
lret
and
movsb
je
lret
into
fildl
sbb
mov
pop
movsl
pop
push
mov
mov
mov
jns
xchg
sbb
mov
sarl
nop
sbb
add
jne
lds
test
jns
mov
loope
out
iret
lock
in
popa
pop
xor
sub
sbb
pop
in
lahf
faddp
ret
mov
std
add
xor
insl
loop
loopne
inc
mov
movsl
test
adc
jmp
pop
mov
lret
xchg
inc
cmpsb
fisubs
jbe
out
sub
xor
jmp
mov
sbb
arpl
test
outsb
test
scas
stos
mov
pop
mov
inc
or
sub
lahf
pop
or
mov
testl
shrl
enter
jl
fiaddl
loopne
scas
or
fcoml
xchg
pop
inc
pop
jmp
pop
push
cmp
jae
sub
pusha
cmpsb
fbstp
into
pusha
dec
out
out
insl
add
jnp,pn
sub
loope
and
aad
add
cmpsl
xchg
jmp
leave
loop
xchg
ja
xor
add
rorl
clc
data16
and
or
loopne
dec
pop
push
jb
fwait
cmp
rcll
dec
pushf
jp
mov
dec
jle
jp
pop
mov
leave
sar
data16
shlb
xchg
mov
addr16
jecxz
insl
push
mov
clc
push
dec
inc
into
pop
xor
sbb
or
in
stc
sub
mov
lock
push
mov
negl
mov
pop
jbe
push
pop
pop
dec
pop
mov
js
rorl
les
subl
aad
and
jnp
rcrl
stos
sahf
mov
mov
jbe
imul
jbe
xor
popa
mov
dec
mov
mov
shll
xchg
cmp
and
jmp
inc
icebp
xorb
jnp
fs
insb
and
in
negb
mov
cmpsl
fsubrs
pop
adc
sbb
jecxz
adc
and
adc
sbb
inc
aas
or
or
push
xorl
clc
add
int3
daa
mov
mov
jg
or
sti
push
and
cmp
in
ds
arpl
pushf
xchg
mov
sbb
sbb
mov
aad
enter
xchg
popf
imul
cmc
push
fbstp
jne
jns
or
and
aad
cmp
out
push
aam
fdivrs
sbb
out
cmp
std
test
sub
or
add
cli
dec
inc
adc
divb
jo
call
out
test
jmp
loopnew
ror
in
dec
add
push
mov
int3
mov
ljmp
sarb
addl
shll
gs
out
adc
adc
daa
dec
xchg
dec
cld
dec
fs
fidivl
shl
das
fsubs
mov
dec
mov
test
jg
cmp
push
mov
scas
imul
in
aad
stos
or
je
adc
sub
imul
pop
add
test
cmp
mov
jecxz
in
cmc
or
mov
test
test
fisubrl
repnz
leave
pop
clc
test
or
xchg
adcl
mov
js
xchg
imul
jbe
out
lea
sbb
into
jae
js
inc
pop
cwtl
dec
sub
cmp
pushf
aad
bound
insb
mov
cmp
push
inc
mov
lret
ljmp
sbb
dec
test
arpl
xchg
add
das
push
push
ljmp
pushl
sti
jmp
sub
loope
xchg
nop
jmp
notl
mov
iret
aad
or
mov
scas
scas
icebp
mov
push
aaa
rcrl
testb
cmp
or
fstps
dec
mov
lds
push
pop
pop
jmp
push
sbb
nop
pop
cmc
pop
out
sbb
cld
cmpsb
shrl
push
test
jnp
ret
outsb
dec
and
dec
jns
lds
nop
lahf
rcrl
rorb
pop
xor
dec
cmp
sub
leave
or
mov
xchg
xor
jle
arpl
mov
xor
dec
mov
ljmp
mov
cld
fwait
mov
jno
mov
testl
sub
xchg
dec
les
movsb
mov
mov
or
xchg
push
sbb
xor
xchg
mov
xor
call
mov
pushf
daa
jbe
test
movntps
push
mov
in
push
sub
pop
mov
dec
inc
or
mov
dec
loopne
adc
lcall
push
ss
sub
lock
jno
repz
or
scas
sbb
in
dec
sbb
test
lock
rcl
dec
xchg
fmull
mov
pop
pop
pop
das
rorb
fistpll
xor
push
sahf
xchg
cs
test
add
loope
adc
int
or
pop
icebp
loope
inc
xchg
or
dec
xchg
lea
std
xchg
push
out
cmpb
sti
mov
xchg
pop
daa
fcompl
aaa
or
outsl
jl
lret
xchg
sbb
xchg
and
decb
lret
xlat
fmull
stos
cmc
push
push
sub
popa
mov
jae
arpl
xor
lret
fldenv
adc
add
stos
into
jge
inc
into
andl
cmpsb
mov
imul
push
sti
adc
outsb
imul
int
cmp
sbb
fildl
mov
jo
push
aas
inc
jmp
loope
jae
push
sub
test
movsl
dec
jp
in
and
cs
dec
cltd
cmp
sub
mov
test
push
push
inc
pop
add
ret
xchg
sahf
roll
push
movsl
mov
mov
pop
xchg
in
push
das
jae
xor
jmp
lret
add
mov
out
xchg
mov
or
jo
sti
clc
jp
jmp
xor
mov
bound
gs
jb
inc
in
inc
jo
les
push
mov
xchg
mov
mov
mov
mov
and
lahf
punpcklbw
cltd
push
jle
imul
pop
sti
loope
pop
ficomps
sub
xchg
mov
je
xlat
cmp
push
adc
dec
imul
sbb
leave
xlat
call
sahf
leave
sub
push
mov
aas
pop
or
jge
push
scas
inc
pop
fmuls
cmc
dec
jb
xchg
rcll
cmpsb
push
out
push
inc
cli
dec
jecxz
gs
fldcw
push
pop
es
adcb
pushf
es
imul
fcoms
imul
inc
jae
fs
mov
ret
out
mov
mov
sub
in
mov
je
mov
loopne
xor
out
in
inc
sub
les
pusha
mov
sbb
push
mov
pop
cmp
sti
jbe
xor
mov
inc
xchg
adc
jo
aam
fwait
pop
stos
push
inc
jl
jl
cmpb
into
loope
sbb
push
sub
fmulp
jecxz
jmp
inc
add
cld
adc
lods
xor
in
sub
xchg
lea
dec
jns
test
nop
xor
mov
cmp
mov
jo
loopne
push
int3
push
cmp
mov
imul
sbb
adc
out
cmp
sbb
adc
pop
pop
sub
out
hlt
fnstsw
push
sbb
inc
or
mov
jae
cmp
add
sub
imul
fcoms
jmp
cmp
stos
in
mov
movaps
or
test
in
push
mov
dec
add
cmp
mov
ds
dec
ror
sub
mov
and
fnstcw
mov
int3
add
fists
xor
inc
rcll
rcrl
mov
sbb
cmp
hlt
ret
jno
and
mov
inc
lds
pop
xor
fimull
sahf
cli
pop
sbb
repnz
or
lods
pushf
cmp
es
push
nop
xchg
dec
mov
test
outsl
xor
adc
loop
stos
test
mov
push
das
lock
mov
cmpsl
lea
data16
mov
mov
mov
ljmp
jg
jo
mov
dec
xchg
sub
and
cmp
adc
mov
les
inc
adc
cmp
scas
enter
xchg
pushl
dec
ss
mov
add
or
lret
push
fmull
rcll
dec
and
movsl
push
out
fucomp
mov
gs
dec
mov
and
pop
sarb
xor
jo
jge
push
xchg
aas
aam
mov
sbb
dec
xor
jns
inc
cmp
jbe
xorb
dec
addl
mov
push
outsl
dec
mov
add
leave
sbb
aam
pop
shll
fdivrl
aas
and
aam
cmp
xchg
stos
in
jge
nop
dec
movb
jge
scas
ds
xchg
lret
sahf
xchg
sbb
mov
lahf
pop
jl
aas
xchg
adc
cmpsl
aam
daa
inc
test
rcrl
or
sub
add
inc
push
inc
mov
adc
xchg
fidivl
repnz
cmp
push
push
movsl
inc
add
imul
jecxz
out
cltd
cmp
jmp
in
pop
fnstenv
inc
cld
mov
arpl
cltd
sbb
dec
inc
xchg
mov
in
mov
dec
xchg
jmp
push
push
adc
lcall
or
lods
mov
xchg
nop
cmp
and
jp
xor
je
fsubrl
jp
int
xor
outsb
jne
ret
xor
lods
push
mov
sbb
push
dec
sbb
mov
pop
pop
loopne
xor
or
lret
rolb
lods
cmp
ja
cmp
pop
aas
jb
call
jne
aam
stos
fs
ret
mov
or
gs
sarl
cmpsb
sahf
movsl
xchg
dec
xlat
cmpsb
arpl
adc
mov
sbb
push
mov
bound
jnp
out
outsl
loopne
adc
adc
js
nop
lret
fsubr
add
dec
clc
test
aaa
dec
or
xor
adc
dec
pusha
pop
ret
push
or
or
jbe
lods
sub
jg
xor
cli
cmc
call
mov
pop
rcll
inc
sahf
cltd
daa
insl
repz
mov
push
aaa
sub
mov
pop
xor
inc
or
lods
fisubrl
mov
in
enter
cmp
pusha
ficoml
stc
xchg
add
xchg
mov
adc
cmp
sub
adc
and
shll
and
les
cmp
cli
pop
inc
mov
enter
mov
repnz
sbbl
imul
dec
imul
push
cwtl
adc
mov
pop
es
cmp
jl
vunpckhps
pop
mov
jne
loopne
repz
pop
push
xchg
pavgw
and
sub
xchg
jae
dec
cwtl
clc
popf
test
mov
in
sbb
js
rorl
inc
je
mov
scas
sub
cmp
mov
pop
pop
stos
int3
xor
push
push
xor
std
mov
aas
inc
clc
jnp
inc
into
dec
pushf
imul
negb
mov
jge
xor
outsl
cmpsb
rcrl
rorl
pop
and
in
sub
inc
push
insb
cmp
arpl
lcall
sbb
lock
mov
jge
sub
mov
pop
lret
icebp
mov
mov
rcl
fbstp
and
nop
scas
mov
divb
in
subl
add
and
and
js
xor
iret
xor
cmc
movsl
inc
sbb
jl
fadd
xchg
mov
xor
stos
sbb
mov
lret
dec
jae
mov
lea
in
rcl
push
add
adc
cmp
aas
lahf
push
std
shl
fwait
pop
leave
lea
cmc
xchg
pop
jg
lahf
mov
push
push
jecxz
lahf
cld
and
je
nop
mov
add
in
mov
and
pop
sub
das
sub
xlat
cs
lods
std
or
push
fnstsw
rcrb
inc
fcompl
clc
js
mov
or
aaa
in
adc
sahf
es
jnp
fsubs
dec
adc
mov
pop
mov
icebp
std
sbb
rcrb
mov
push
jle
jecxz
push
lods
mov
cmp
push
mov
lcall
xchg
dec
push
sub
loopne
js
xor
pusha
outsb
pop
pop
or
dec
subl
negl
adc
xchg
xchg
jae
das
fsubr
hlt
jae
adc
enter
mov
cmpsb
mov
push
mov
mov
nop
popa
pop
in
fstpl
adc
movsb
mov
in
sbb
mov
js
inc
pop
cmpsb
xor
xchg
ljmp
hlt
mov
bound
dec
mov
dec
jnp
repnz
xchg
sub
mov
testl
push
cmp
lahf
cmpsb
scas
add
sub
sub
sbb
add
push
aam
cld
dec
stos
enter
mov
dec
cli
mov
cwtl
jne
int3
int3
lods
sti
enter
xchg
xor
push
push
sbb
push
xchg
mov
push
into
mov
fstl
xor
xchg
ret
xor
stos
ret
ret
les
xchg
hlt
scas
cmp
cmpb
popa
icebp
ja
or
sbb
cmp
popa
jnp
lret
lds
inc
cmp
mov
mov
or
pop
or
push
jo
pop
sbb
clc
std
push
push
dec
in
jo
push
xchg
loop
je
cmp
pop
frstor
adc
in
xchg
mov
sbb
xchg
pop
jae
push
mov
outsl
in
mov
paddusw
roll
out
xchg
popa
pop
lods
scas
daa
scas
movsb
roll
push
dec
xor
test
out
stos
and
sub
mov
shr
and
cmp
add
cmp
inc
push
daa
mov
xchg
cmp
pop
leave
adc
dec
pop
ss
xlat
pop
pop
cmp
arpl
mov
lock
and
push
fdiv
pushf
xor
loope
insl
rol
test
movsl
xchg
pop
sub
aam
dec
lds
mov
out
mov
les
jmp
jg
movsl
in
add
sbb
daa
aam
pusha
int
xor
push
jmp
inc
sbb
push
cs
dec
pop
std
add
xchg
and
pop
insl
inc
adc
jbe
pop
add
stos
push
lods
test
nop
movsl
mov
lock
jae
inc
fs
aad
lock
pop
mov
and
push
loopne
dec
sbb
pop
inc
pop
xchg
aam
aam
push
out
lcall
jnp
inc
sbb
imul
xor
inc
mov
sahf
pusha
jo
and
int
sbb
jb
pop
addr16
cmp
push
cltd
scas
xchg
aaa
xlat
lock
xor
jg
xchg
mov
pop
inc
pusha
lock
adc
or
std
cltd
stos
outsb
ror
or
scas
mov
and
sbb
xchg
std
shll
cmp
dec
push
call
fisubs
pusha
mov
popl
cwtl
xor
test
in
add
xchg
enter
push
repz
sbb
inc
fcom
aam
add
push
rolb
cmp
or
lret
fucomip
push
vpmacsww
icebp
out
and
push
xor
insl
jle
lcall
push
mov
lcall
sub
loope
movsb
outsl
test
mov
enter
testl
and
ja
jne
xor
cmp
add
data16
sub
jle
jge
popa
push
inc
cmpsl
test
push
mov
pop
mov
scas
sbb
pop
fidivl
lea
fistps
lods
lcall
sbb
loope
xchg
push
mov
popa
mov
popa
lret
pop
sbb
xor
xor
xchg
inc
or
ret
xchg
pop
ret
icebp
cmp
in
xchg
out
iret
insl
testb
aam
sbb
xor
mov
adc
jle
imul
adc
orl
mov
in
jg
rcrb
jle
sahf
imul
gs
rcrb
or
lcall
mov
outsl
int3
inc
and
mov
out
std
lock
dec
std
icebp
sti
mov
mov
cli
xor
or
loopne
lods
pop
mov
push
mov
data16
sbb
jns
sbb
jge
sub
outsb
cmp
cmpsl
hlt
movsb
add
or
jo
fidivrl
lret
cli
cmp
popa
sbb
dec
bound
push
movsb
shlb
push
mov
data16
lahf
into
inc
mov
cltd
cmp
add
and
lahf
les
out
jbe
shl
rcl
loop
or
dec
push
cmc
xchg
aas
xor
mov
sbb
sbb
sarl
add
jmp
lea
inc
sub
shl
sub
inc
mov
cltd
insl
lock
andb
cmc
mov
test
sub
mov
mov
push
in
mov
fnstsw
lret
dec
iret
inc
fcomip
jne
mov
pop
jge
pop
jnp
in
mov
push
mov
sti
mov
repz
lock
das
rcrl
lods
insb
adc
dec
stos
mov
clc
adc
nop
mov
mov
shr
aaa
pop
cmp
enter
lahf
fmuls
and
cmp
sub
inc
mov
stc
scas
mov
pop
inc
mov
cmp
scas
shr
gs
cli
fsts
in
mov
movsb
or
pushl
scas
sbb
sub
sbb
stos
movsb
add
fwait
iret
pop
push
icebp
pop
jns
or
inc
sub
cmpsb
mov
push
mov
cmp
push
cld
and
das
movl
push
jb
jno
sub
call
sub
movsb
les
adc
cmp
daa
push
cmp
push
jb
push
adc
test
daa
mov
inc
call
loope
inc
inc
orb
in
cmp
mov
cli
jo
inc
inc
sti
in
daa
jecxz
push
xchg
scas
shrl
add
inc
mov
repz
lret
clc
jge
adc
repnz
lea
fcoms
push
pop
lds
or
pop
sti
icebp
push
test
lds
xchg
nop
insl
and
cli
or
insb
inc
mov
out
into
mov
xor
jne
es
lds
xchg
cltd
loop
scas
jmp
sbb
mov
sbb
or
add
dec
imul
int
movsl
daa
add
rcrb
xlat
inc
xor
mov
inc
stc
xor
les
mov
repnz
cli
js
leave
mov
sbb
pop
mov
pop
std
ljmp
out
in
and
fisubs
add
fcmove
int3
jae
jg
dec
fwait
clc
mov
fildll
xchg
hlt
push
or
test
adc
and
aad
jns
and
dec
test
mov
jnp
xchg
xchg
mov
fistpll
ror
movsl
sbb
jbe
sti
mov
sbb
mov
fadds
inc
jl
aaa
divb
pop
dec
pop
xchg
scas
push
and
icebp
sbb
fstpt
dec
daa
mov
dec
shll
cmpl
mov
jbe
push
pushf
ljmp
in
rcr
and
std
in
sahf
fs
mov
inc
mov
mov
movsb
jecxz
pop
out
add
push
lret
lds
mov
xchg
pop
add
adc
lea
xor
sar
inc
dec
xchg
js
divb
pop
dec
mov
sahf
mov
mov
sbbb
lds
add
cld
stos
js
xor
dec
push
inc
xchg
xchg
mov
fsubs
gs
inc
xchg
aad
out
lods
out
lea
dec
test
stos
pop
dec
sbb
repz
pushf
fsts
enter
jmp
cmp
and
iret
aam
inc
add
out
mov
inc
stos
in
xchg
test
mov
cmp
out
xor
bound
rcll
in
in
mov
cltd
push
xchg
subl
clc
cltd
xchg
dec
and
and
pop
out
loope
adc
xchg
icebp
cmpsb
out
xor
adc
fwait
push
add
fwait
andb
cmp
rclb
mov
andb
sub
sti
mov
lcall
in
ljmp
cltd
inc
or
movsl
cs
add
iret
mov
and
call
mov
sbb
addr16
xlat
aas
les
insb
and
cmp
movsb
cmp
enter
mull
cmp
sub
arpl
sub
iret
imul
or
iret
lods
mov
jns
loope
dec
mov
jge
add
push
xor
mov
cld
xor
cmp
xchg
cmp
repz
mov
stos
lock
dec
sub
movsb
cmpsb
adc
mov
mov
mov
mov
pop
rcrl
adc
pusha
xor
aad
mov
das
adc
or
and
add
xor
lret
inc
ret
into
mov
dec
push
out
pusha
popa
pop
mov
gs
outsl
jecxz
sub
cmpsl
xchg
or
cltd
inc
shrd
popf
mov
lds
shrl
and
fstpt
dec
mov
inc
arpl
nop
mov
mov
jl
loope
stc
push
add
movb
dec
popa
xchg
or
pop
ljmp
push
imul
into
mov
stos
rorl
lock
aaa
sbb
pushf
add
cmp
mov
loopne
call
inc
inc
insl
rcrl
dec
sbb
push
xor
adc
icebp
out
mov
cli
add
fnstcw
mov
add
testb
je
ja
xor
popa
test
jnp
into
pop
sbb
insl
iret
into
fistpl
lock
cmp
outsl
mov
sbb
dec
xlat
std
or
aam
cli
cmp
mov
dec
mov
andb
shll
dec
sub
enter
lcall
cmp
or
iret
lea
cld
xchg
xor
movsl
jecxz
cmp
sub
xor
notl
gs
aaa
inc
push
movsb
pop
jno
jnp
daa
pop
js
lcall
mov
test
jno
repz
test
lods
leave
arpl
inc
popa
mov
enter
or
hlt
imul
inc
xor
add
add
rcr
xor
adc
ja
xchg
popa
insl
sar
or
xorb
mov
outsb
mov
xchg
rolb
sbb
sub
inc
mov
xor
mov
jle
popa
aad
and
jge
and
stos
fsts
cltd
and
push
sbb
sbb
pop
inc
adc
dec
je
xlat
enter
jae
mov
sub
dec
into
mov
or
mov
xchg
mov
sbb
stc
int3
mov
push
cmc
fistl
xor
push
sub
push
in
loope
mov
mov
cwtl
subl
insl
cmp
movsl
ret
xor
adc
xor
fwait
and
dec
jne
movsb
aam
xor
mov
out
not
mov
les
iret
inc
bound
lcall
test
mov
movsb
dec
lcall
sub
iret
mov
push
cmp
mov
and
or
ljmp
mov
mov
repnz
cld
out
dec
das
dec
jg
mov
call
bound
inc
int3
inc
xchg
jmp
jno
push
dec
sbb
addb
rcrb
stc
int3
inc
das
je
cs
mov
orb
ja
push
out
dec
pop
test
mov
je
movsb
cmpsl
jg
dec
fcomi
repz
jg
ja
push
push
std
jle
test
dec
lock
dec
xchg
jne
and
mov
aad
mov
popa
xchg
adc
adc
cmp
pop
mov
jne
pop
in
inc
cli
jle
dec
std
pop
add
xor
fwait
mov
sbb
dec
inc
mov
inc
loop
adc
inc
mov
dec
pop
and
dec
sub
push
dec
push
mov
movsl
or
dec
push
sti
lret
and
pop
sub
stos
pop
mov
xchg
push
imul
fs
mov
mov
adc
adc
lds
push
mov
pop
cmp
mov
dec
mov
mov
scas
cltd
aam
fcomip
pop
jne
fistpl
dec
loop
xlat
push
ljmp
xlat
mov
sub
xor
push
mov
pop
mov
pop
das
ret
push
sub
neg
mov
mov
xchg
mov
cmp
and
gs
push
mov
insb
cmp
xor
add
lea
mov
inc
nop
jecxz
into
lds
addr16
cmp
mov
nop
add
pop
fmul
sbb
mov
cmc
cmpsb
jb
pop
cmp
das
dec
mov
cmp
pop
pop
xlat
out
mov
push
mov
out
cmpsb
test
push
jecxz
lcall
mov
xor
cmp
sbb
fucomip
xchg
mov
sub
dec
push
push
sbb
jmp
cs
sub
out
addr16
inc
jno
loope
mov
pop
jmp
aam
or
popf
decl
mov
and
inc
pop
sbb
std
and
int3
cmp
dec
fidivs
popa
insl
aaa
andl
push
dec
xor
mov
in
cwtl
push
icebp
sbb
mov
push
mov
xor
test
roll
dec
or
loope
xor
adcl
pop
ja
ja
inc
mov
cltd
add
out
push
outsl
pop
xor
test
cmp
negb
and
jl
test
fistl
cmp
inc
sahf
int3
lret
xchg
shlb
flds
test
jecxz
sub
push
mov
pusha
std
push
adc
add
repz
daa
les
cmp
or
adc
sub
bound
addr16
popl
mov
ret
push
or
mov
push
sub
dec
pop
xchg
int3
xchg
pop
lahf
sbb
sub
dec
cmovae
in
mov
pop
jnp
cmpb
fdivrl
dec
or
xor
dec
fsubrl
add
sbbb
orl
push
and
push
popf
jo
ret
adc
daa
cmc
fs
mov
xor
lods
lods
jmp
add
push
scas
pop
and
inc
jecxz
or
pop
test
sbb
add
sub
mov
lods
in
and
clc
xor
push
lcall
lods
test
or
repz
add
incl
std
dec
nop
fisubl
je
imul
sub
test
sub
adcl
sub
sub
inc
out
fstpt
sub
ret
ret
push
stc
sub
cmpb
divl
js
jmp
lret
mov
bound
mov
and
push
inc
pop
cmpl
pop
pop
roll
or
push
fcoml
outsb
lods
dec
jecxz
add
in
sarl
push
pop
inc
or
movsl
dec
xchg
dec
add
mov
in
inc
mov
add
jg
xchg
aas
ja
mov
arpl
js
stos
or
or
inc
mov
call
subl
xchg
xchg
or
sub
ljmp
dec
in
shll
cli
xor
enter
xchg
adc
pop
xor
cmp
call
push
aaa
movsb
test
into
sahf
rorl
aaa
popa
ja
pushf
xchg
pop
mov
fs
inc
mov
pop
rcll
lds
lret
sahf
jne
sbb
mov
add
sbb
in
pop
ret
in
mov
test
push
jno
push
jl
jp
push
loopne
or
je
pusha
mov
mov
adc
ss
xchg
add
fs
out
mov
decb
inc
add
adc
push
jmp
jbe
popf
mov
outsl
add
out
test
jbe
scas
inc
test
ficomps
leave
fldcw
js
sti
adc
mov
inc
fdivr
sahf
loope
mov
adc
popa
clc
cmpsb
adc
in
icebp
loope
mov
sbb
ds
xchg
iret
jo
sbb
sbb
mov
fcomi
sub
jge
in
addl
or
mov
aaa
testl
push
sahf
dec
inc
adc
pushf
cmpsb
lret
mov
mov
xchg
or
add
aam
cld
mov
out
orl
ret
xchg
test
arpl
hlt
leave
push
mov
imul
lret
jne
fcoms
jb
jg
jmp
or
scas
cmp
out
mov
movsb
idivb
mov
imul
cmp
sub
pop
pop
std
or
xlat
sbb
loop
cld
sub
test
into
sub
or
dec
aam
imul
pop
cmp
mov
jg
push
es
pop
mov
fstpl
inc
scas
addr16
cmp
dec
vfpclassss
and
xor
std
dec
lds
clc
push
sti
xor
or
xchg
push
mov
mov
pop
leave
jg
sbb
pop
xor
jb
jg
sub
xlat
dec
pop
xor
inc
scas
mov
adc
out
add
loop
cwtl
cmp
test
mov
cs
out
xor
cmp
inc
push
test
add
dec
sbb
and
sbb
cmpsb
loope
dec
adc
sub
aad
push
adc
ret
loope
mov
mov
fbstp
mov
and
das
xor
cmp
mov
mov
push
cmpsb
jmp
lret
pop
out
sub
mov
adc
aam
gs
xor
cld
inc
int3
xor
pusha
imul
push
lods
dec
int
and
cli
adc
ljmp
insl
mov
pop
movsb
pop
inc
sub
movsb
lds
test
fsubrl
sub
jae
push
iret
jae
cwtl
popf
pop
idivb
push
jae
mov
aaa
xchg
mov
pop
fmull
push
test
enter
dec
jbe
std
push
dec
nop
mov
icebp
jp
js
ljmp
rorl
insl
movsl
inc
pop
adc
out
mov
leave
inc
sub
fdivs
lcall
out
fstpt
adc
outsb
adc
jbe
rolb
and
or
stos
push
sub
jnp
dec
add
lret
lds
movsl
sbb
subl
pusha
aas
push
lds
cwtl
dec
das
sub
push
popf
cmc
jmp
cwtl
mov
inc
std
movsl
lods
pop
orl
mov
push
pop
inc
inc
lock
out
pusha
mov
pop
jmp
dec
pop
jmp
scas
pop
xor
fists
sub
sbb
ss
jg
scas
aam
mov
inc
and
pusha
fcmovne
test
cmp
roll
push
cmc
push
mov
fadds
stos
faddl
jl
aas
stos
push
mov
je
xchg
out
in
xor
dec
lcall
arpl
cmpl
cmp
mov
cmpsb
mov
sub
cs
ja
outsb
test
xchg
push
sarl
inc
out
imul
cld
movsl
adc
dec
sahf
pop
pushf
into
push
shll
jne
mov
push
mov
xor
inc
xchg
dec
pop
repnz
pusha
ds
push
xor
jns
movsl
mov
push
sub
shll
inc
and
sbb
pop
repz
and
mov
mov
les
sbb
int3
mov
xchg
and
add
inc
jge
jge
adc
fidivrs
adc
inc
int
sub
pop
push
cmp
pushf
and
lret
jb
dec
mov
int
jg
pushf
aam
les
int
lds
fiadds
xlat
push
pop
xor
clc
inc
adcl
sbb
insb
insb
loop
js
dec
imul
inc
sub
xlat
dec
mov
and
xor
mov
rol
inc
xor
inc
in
test
sub
inc
mov
leave
shrb
mov
mov
or
jne
gs
mov
movsl
fstpt
gs
leave
sub
ret
pop
cmp
dec
push
sbb
jne
sbb
mov
arpl
sbb
aad
bsf
loop
mov
push
stos
fwait
cmpsb
lret
cltd
jb
sbb
out
loope
pop
mov
fsubp
xchg
sbb
enter
mov
aad
adc
dec
push
bound
cmpl
es
mov
popa
pop
cs
jbe
cli
enter
lret
dec
movsb
andl
aaa
cmpsb
pop
mov
lret
xchg
mov
push
cld
pop
sub
jg
movsb
xchg
repz
stos
test
pop
pop
adc
rorb
jns
stos
jecxz
fisttpl
lret
mov
iret
addr16
enter
add
and
outsb
push
dec
imul
cltd
push
sarb
cmp
jecxz
and
push
jg
or
movsl
add
js
popf
add
dec
mov
cmp
outsb
fiaddl
js
imul
xor
adc
fisubs
aam
xchg
out
mov
mov
and
loopne
jo,pt
aad
adc
mov
test
les
ss
jg,pn
jp
idiv
fiadds
aaa
repnz
int
cltd
dec
cs
testb
xor
notl
sbb
lds
sub
mov
jle
sub
divb
pop
inc
pop
add
jle
cmpsl
daa
inc
and
and
cmpb
inc
add
dec
lods
mov
lcall
mov
ja
dec
test
loope
mov
iret
jl
mov
mov
leave
nop
sbb
mov
repz
test
sub
rcll
es
xor
lea
dec
out
mov
loopne
add
in
xchg
fcmovb
pop
scas
lret
scas
pop
lods
nop
cld
add
mov
fistl
sub
jmp
gs
pop
cmc
out
xor
repnz
fstpl
or
lea
xchg
sub
imul
das
sbb
bound
adc
popl
cmpsl
jecxz
lret
mov
add
outsb
sti
mov
ljmp
fs
add
mov
cs
mov
jnp
xor
arpl
and
jne
jge
jns
lods
int
jp
cmp
xchg
enter
mov
jae
mov
xchg
mov
mov
cmp
push
loope
xor
mov
fdecstp
test
sbb
push
mov
in
inc
sub
jne
sti
inc
lods
inc
imul
jg
ss
xor
mov
ja
shl
mov
ja
inc
and
pop
cmc
popl
cmovo
or
adc
popf
mov
or
movsb
int
xchg
shrl
sbb
mov
xor
mov
cmpsb
fwait
icebp
out
xor
loopne
sub
jp
mov
push
xor
cmp
clc
inc
cmp
mov
sub
xchg
es
and
loop
push
adc
pusha
das
sbb
fstps
xor
ss
mov
xchg
mov
inc
push
mov
mov
lods
inc
sbb
int3
lods
lahf
add
fdivs
push
repz
popf
push
inc
stos
jp
and
out
mov
pop
xor
mov
xchg
xor
adc
andb
add
add
pop
movsb
aam
call
xlat
enter
mov
xlat
dec
push
xor
and
hlt
pop
leave
scas
call
outsb
test
xor
je
lods
mov
sub
iret
ret
dec
xor
test
test
jne
add
pop
ficomps
sub
dec
clc
fcmovnbe
fmuls
and
jg
out
sti
int
mull
jno
mov
not
pop
out
pop
dec
aas
add
jne
gs
lds
das
cmp
in
f2xm1
or
repnz
cvtps2pd
pop
xchg
pop
cmp
outsb
and
xchg
stos
test
adc
and
je
stos
jae
in
sub
ret
les
push
out
sbb
or
shlb
xchg
or
mov
rorb
push
daa
mov
fidivrl
cmp
xor
mov
sbb
cld
fstpl
neg
clc
jae
insb
jle
mov
out
std
lea
jmp
sub
jae
mov
sti
int3
cmpsb
stc
xor
add
cs
xor
lods
jb
sbb
addr16
add
cmpsl
iret
push
pop
mov
mov
icebp
dec
fistpll
mov
out
movsb
or
push
pushf
loopne
loope
adc
mov
jg
out
cmpsb
vcmpss
popa
jo
ljmp
push
test
rorl
jno
jb
inc
out
sub
jle
stc
inc
xor
fdiv
daa
popa
jnp
lcall
pop
mov
inc
mov
fdivs
push
xchg
or
sub
jmp
push
mov
test
jnp,pt
mov
outsb
push
mov
scas
ljmp
arpl
pop
cwtl
inc
js
pushl
popa
je
jp
pop
movl
mov
adc
je
or
mov
xor
notb
inc
cmp
out
cmp
jnp
adc
incl
inc
popa
lock
popa
jle
or
cmpsl
repz
inc
clc
pop
add
add
push
mov
or
call
enter
sub
sbb
pop
pop
pop
jle
adc
fstpt
pop
sub
test
test
mov
js
inc
sbb
or
fstps
jl
lock
mov
out
push
pop
call
jmp
cmp
mov
imul
push
stos
jae
add
sub
xchg
cmp
push
cmp
xchg
and
add
stos
mov
imul
sub
adc
adc
push
nop
jae
inc
iret
les
jo
out
lret
sbb
mov
and
cmc
fcoms
dec
pop
loopne
dec
jl
dec
subb
or
scas
sub
mov
jg
jmp
lret
ret
mov
mov
clc
cmp
xlat
lret
cmpsb
xor
daa
mov
pop
nop
stos
inc
jl
popa
xchg
add
in
mov
sub
incl
out
aad
mov
arpl
leave
subl
xor
addr16
scas
mov
xchg
arpl
pop
lcall
sbb
lahf
mov
std
lret
jp
pop
xchg
mov
push
pop
loope
insb
cmpsl
cmp
shll
lahf
clc
xchg
xor
mov
push
or
xor
xor
lock
imul
push
pushf
and
loop
rcrl
cmpsl
or
xlat
add
cld
insl
adc
mov
ss
test
jl
or
shll
cmp
popf
jle
mov
mov
and
test
and
or
xchg
xlat
movsl
loopne
xchg
dec
jne
add
fstl
push
ss
and
jg
mov
pop
cwtl
out
push
xchg
cmp
jmp
mov
pop
push
push
rclb
out
jbe
add
or
mov
es
ret
mov
sub
in
cld
stos
test
mov
dec
inc
inc
cwtl
pop
pop
ja
icebp
xchg
subps
call
jmp
je
sbb
sbb
shll
rcrb
push
ret
in
pop
adc
bound
daa
ret
sub
mov
mov
test
dec
int
shr
fwait
inc
imul
adc
stos
sahf
leave
stc
int3
adc
loop
sbb
cmp
inc
out
inc
fimull
add
mov
test
jae
and
notb
fimuls
lret
sbb
notb
icebp
push
mov
cmp
filds
lods
jecxz
fistpll
xchg
jmp
sub
dec
add
rorb
movb
sbb
mov
adc
or
movsl
mov
and
or
frstor
mov
or
cmpsb
stos
rcll
aaa
xchg
fidivrs
ljmp
stos
cld
push
jno
add
decb
dec
dec
mov
popl
xor
dec
icebp
adcl
lahf
xchg
jecxz
lods
es
stos
in
xor
test
and
and
out
xchg
rcll
imul
push
cwtl
inc
sarw
xchg
mull
or
mov
js
rorb
ret
popa
adcl
aas
and
mov
xor
cmpsb
jno
mov
push
clc
cmpsb
outsl
mov
scas
dec
mov
stos
out
les
mov
push
cmpsl
lods
sbb
rep
or
leave
mov
pushf
add
push
jle
push
push
lret
insl
xchg
in
inc
call
or
rcll
sbb
test
aaa
movsb
sub
cld
inc
or
add
sub
out
push
call
adc
aaa
xchg
push
jmp
stos
mov
xchg
mov
idiv
add
arpl
mov
fidivl
jae
movswl
aad
xor
cmp
cmp
sbb
dec
push
pop
push
lret
or
inc
and
insl
dec
xor
adc
mov
mov
pop
jnp
jmp
call
mov
fdivrs
push
add
lret
mov
in
push
fildl
daa
sbb
add
inc
mov
gs
je
stos
dec
repnz
add
lret
adc
mov
int3
xchg
mov
inc
out
add
pusha
mov
in
mov
sub
dec
jge
addr16
sub
cmpsl
inc
add
sarb
xchg
jl
int3
cmp
flds
fildll
jnp
fisubl
movsb
mull
lods
sahf
sbb
sub
push
into
pop
mov
decb
xchg
pop
int3
filds
je
mov
xor
out
out
mov
in
sti
fisubs
leave
inc
pop
andb
fnstenv
sbbb
xchg
cmp
in
dec
and
sub
and
loop
xor
cmp
adc
outsb
pop
and
scas
fiaddl
push
and
xchg
fists
mov
mov
jns
imul
jp
ja
jno
mov
divb
xchg
dec
jae
inc
das
push
push
mov
shr
ljmp
inc
adc
push
cmp
in
cmpsb
jge
scas
mov
mov
insb
js
test
mov
dec
outsl
inc
js
imul
ret
push
cwtl
and
popa
sarl
pop
xor
push
sub
lods
xchg
mov
jnp
sbb
mov
mov
push
leave
cmp
cmp
call
push
lret
cld
shll
clc
fs
cld
dec
shrb
jne
add
mov
pop
gs
roll
cltd
rorl
lds
pop
mov
data16
ror
pop
lock
jle
movsb
arpl
add
out
insb
push
pusha
cmp
jmp
push
cmp
imul
mov
xchg
dec
mov
inc
movb
pop
rolb
sahf
and
push
cld
adc
mov
push
repz
sbb
jo
mov
push
fwait
cltd
jo
int3
sbb
rorl
in
xor
cmpsb
xchg
loopne
andl
xchg
cmp
cwtl
jb
inc
inc
xchg
stos
push
scas
or
pop
pop
xlat
adc
insb
pop
dec
fcmovne
pop
rclb
leave
jmp
out
dec
pop
xor
sub
aad
scas
xchg
push
cld
mov
loopne
cmp
sbb
cmc
pop
jne
stos
pop
and
shll
lret
les
adc
sub
push
inc
pushf
xorb
pop
arpl
push
mov
ret
pop
fdivs
jne
lahf
push
jno
out
shlb
mov
mov
inc
or
or
inc
mov
insb
sub
dec
jns
jb
ja
leave
add
cli
bound
je
or
fwait
mov
fdivrl
inc
inc
jl
out
xor
incl
mov
and
xchg
mov
lcall
cmp
adc
jecxz
test
jb
sub
mov
xor
add
sbb
mov
pop
mov
sub
jb
out
push
mov
scas
mov
out
xchg
dec
shlb
ljmp
adc
sub
pop
in
push
adc
inc
hlt
and
movsl
decb
test
xchg
ficompl
imul
shlb
movsl
push
rcl
imul
hlt
xor
stos
fbld
stos
jae
mov
roll
mov
fstpt
imul
sbb
fisubrl
jecxz
dec
mov
dec
sub
pop
in
pop
xchg
inc
and
mov
dec
cmpsb
data16
hlt
adc
xchg
cli
push
adc
shrb
mov
fstpt
iret
fdivp
mov
sti
loope
pop
inc
xchg
ss
xchg
stc
and
loope
sub
dec
sbb
lret
nop
sbb
jge
sbb
inc
mov
in
jmp
out
lods
or
mov
bound
aas
sarl
lods
mov
pop
mov
xlat
test
add
in
ret
cmp
dec
mov
dec
add
xchg
sub
jno
lods
xchg
cs
cmp
scas
loop
inc
test
adc
aam
loope
sbb
test
into
das
lcall
sbb
add
rorb
jnp
mov
or
dec
xchg
push
cmpsl
pushf
mov
lea
pop
or
pop
hlt
adc
cmc
ficomps
xchg
push
xor
add
dec
or
cmp
nop
mov
adc
popf
adc
mov
insb
std
xor
xchg
mov
js
clc
mov
scas
out
cmc
nop
cs
outsb
xor
es
cmp
xchg
mov
aad
or
ret
jmp
xchg
sti
andb
fsubs
imul
popa
int
daa
scas
roll
jo
mov
push
rcrb
push
mov
je
jbe
and
push
das
mov
test
adc
sbb
cmpsb
xchg
or
cs
sub
sbb
mov
mov
mov
xor
icebp
test
daa
bswap
fidivrs
sub
cltd
jnp
loope
xor
jle
dec
dec
push
fnstenv
cmp
insl
lods
push
test
sbb
fnstsw
fnstenv
xchg
jl
sub
enter
sub
les
pop
std
pop
inc
fimull
ficoms
dec
out
lret
mov
data16
inc
pop
and
popa
sbb
scas
dec
testb
mov
sbb
fbstp
ret
jae
xchg
mov
dec
sub
out
ss
push
pop
and
sub
mov
xchg
lock
xchg
leave
lcall
push
pushf
pop
inc
cld
mov
pushf
or
cli
ds
aam
cmp
inc
insb
xor
loop
pop
ret
pop
fldt
adc
imul
mov
test
mov
gs
shl
jbe
push
test
add
add
mov
bound
mov
je
fs
sarl
es
push
mov
sarb
pop
or
jp
mov
imul
jb
jl
jle
fmulp
mov
pop
imul
jnp
notl
and
ljmp
aas
dec
sub
outsb
xchg
mov
add
jb
test
testb
add
xlat
stos
adc
xchg
jae
push
push
sar
pop
adc
punpckhdq
lcall
xchg
hlt
or
int
pop
jge
in
and
jmp
out
je
bound
adc
test
hlt
pusha
cmpb
push
adcb
das
fs
ljmp
pop
in
pop
into
mov
mov
into
loopne
cmp
xchg
out
repz
sbb
les
pcmpgtb
sbb
xlat
js
xor
popa
pop
pop
inc
push
or
mov
int
call
xor
push
lahf
push
pusha
fbstp
pop
mov
insb
imul
cli
popf
or
out
dec
inc
mov
push
jp,pt
dec
nop
push
inc
lret
es
imul
js
pop
mov
dec
mov
mov
add
fs
pop
addr16
push
xlat
xchg
or
pop
pop
in
push
outsl
mov
adc
jg
insl
add
scas
xor
inc
adc
jbe
imul
bound
clc
shr
test
lds
lods
repnz
popa
jp
sub
lret
xor
pop
or
mov
or
mov
xor
xchg
cli
or
mov
and
add
hlt
mov
add
shlb
aam
subl
fistpl
push
dec
popa
sbb
pmulhw
dec
lret
cltd
sahf
movsl
xchg
test
jno,pn
add
push
inc
int
adc
outsl
mov
push
adcb
push
dec
push
arpl
enter
popf
not
cs
mov
sub
test
mov
pusha
adc
push
scas
cli
mov
out
adc
add
clc
lods
xor
sub
inc
inc
adc
sbb
inc
scas
cmp
ret
call
push
or
inc
adc
sti
shlb
xchg
div
lods
mov
adc
insl
jno
arpl
sub
in
xor
sub
jo
cli
add
ror
popf
js
in
xchg
mov
int
sub
mov
xor
xlat
stos
out
popa
ss
inc
mov
inc
sahf
dec
enter
aas
xchg
fstl
fnstsw
xchg
mov
inc
xor
lret
dec
ja
inc
mov
mov
les
mov
mov
movsl
fdivrs
pop
and
clc
push
imul
jg
outsb
cli
mov
mov
cmpsl
or
pop
mull
outsb
mov
dec
loope
mov
fcmovne
out
fdivrl
cmc
fistl
add
scas
add
mov
test
sarb
ljmp
sbb
sub
icebp
call
enter
add
out
aas
jg
lods
insl
loope
lock
mov
cmc
fucomip
nop
in
shl
shll
andl
int
add
pop
mov
testb
or
dec
add
push
push
insb
push
push
mov
push
jae
loop
mov
ss
popa
imull
mov
push
icebp
inc
je
aaa
notb
mov
pop
scas
dec
adc
cmp
test
lea
shlb
push
xor
mov
in
or
testb
jno
cmpl
lahf
sub
and
mov
repz
adc
mov
xchg
push
into
out
or
ss
rcrl
nop
mov
orl
fwait
jle
jae
fsubs
imul
icebp
daa
mov
inc
xor
lret
mov
ljmp
push
jmp
imul
pop
imul
xchg
dec
hlt
mov
mov
daa
insb
add
bound
dec
cmpsl
rol
adc
fucomi
lea
xchg
push
loop
imul
sub
call
push
xor
xchg
dec
test
rol
fisubs
dec
arpl
dec
pop
mov
iret
adc
pop
xchg
mov
loop
cmc
test
lods
add
mov
fwait
pop
fcmovnu
in
lds
cli
push
inc
mov
xchg
rcll
ficoml
cmc
cmc
aaa
mov
push
pop
mov
cmp
jmp
in
mov
dec
sub
pop
sbb
add
lret
test
divl
lret
cmp
sub
bswap
xor
shlb
add
xlat
sbb
cmp
popf
fs
inc
fmul
and
cmp
xor
dec
mov
inc
jg
das
push
shll
sub
sub
pop
jg
jns
push
mov
add
jns
xchg
mov
xorb
dec
fwait
jb
mov
es
pop
lea
inc
repnz
and
aaa
sahf
ljmp
rcl
add
mov
pop
lret
int3
imul
pop
ret
fsubrs
push
jle
idivb
xchg
cmp
jge
sbb
fisubl
loope
repnz
into
icebp
or
rorl
pop
sub
mov
popl
or
fcmove
cmpsl
jge
popf
adc
subl
inc
lods
xchg
andl
pop
stos
cmp
sub
pop
imul
fimuls
push
add
and
jmp
jae
outsb
jbe
xor
loop
test
call
cmp
fwait
rol
sbb
ja
cmp
jmp
fucomip
call
cwtl
mov
xchg
imul
pop
cwtl
out
subb
cmpsl
mov
js
mov
out
and
sbb
mov
jae
push
mov
divl
xchg
jg
dec
dec
enter
mov
andl
popf
repnz
or
rcl
test
dec
cwtl
xor
add
ss
push
pop
inc
xchg
ljmp
and
out
arpl
enter
mov
call
inc
fwait
inc
jbe
mov
pop
repz
popf
mov
cli
sub
sub
sub
movsb
xchg
adc
cmpsl
dec
mov
and
inc
mov
out
gs
decb
lcall
or
inc
mov
outsb
push
in
sti
imul
xor
leave
xchg
shrl
enter
sub
int3
cmpsl
sarb
inc
pop
ss
fidivrl
or
dec
or
adc
bound
hlt
jo
hlt
mov
cmp
sub
in
mov
loope
xchg
lcall
das
movsl
imull
das
push
add
fisttpll
pop
test
adc
sbb
scas
or
pushf
cli
mov
mov
ret
mov
add
mov
out
mov
test
mov
jb
addr16
aam
lret
popa
sbb
jbe
popf
mov
adc
cli
fldenv
rolb
clc
lds
lods
das
cltd
mov
mov
xchg
adc
jbe
popf
push
add
adc
mov
js
test
jno
pushf
adc
or
mov
pop
cli
adc
neg
popf
mov
lret
sbb
jb
clc
pop
cmp
ret
outsl
and
jl
jge
jb
xor
push
jo
mov
fsubp
jmp
fistps
xchg
or
clc
imul
scas
or
test
xchg
insl
sbb
cmpsl
loop
fiadds
adc
in
or
ds
xor
repz
dec
mov
push
mov
mov
push
dec
jnp
pop
mov
adc
mov
adc
inc
outsl
cwtl
push
subb
std
mov
sub
add
call
xchg
in
dec
jno
outsl
sub
pop
inc
addr16
adc
fs
nop
imul
fistpll
mov
adc
xchg
movsl
cmpsl
mov
inc
cld
lods
or
test
bound
insb
aaa
sbb
idivl
gs
sbbl
outsl
xor
mov
sar
dec
mov
inc
xchg
or
adc
mov
xchg
sub
sbb
lods
scas
sbb
push
mov
in
aaa
fcomps
stos
pop
mov
cmpb
int
pusha
out
adcb
movsl
mov
mov
sbb
in
push
fcmovbe
fld
fsubrl
or
lahf
fs
lods
and
orl
das
repnz
les
insl
adc
loope
and
test
dec
out
outsl
cmp
jne
int3
stos
inc
imul
ja
ja
arpl
cltd
cli
inc
fists
add
pop
sub
dec
xchg
das
sarl
pusha
sahf
fwait
pop
cld
enter
cmp
aad
mov
mov
and
xor
lea
jmp
push
sti
addl
outsl
imul
mov
int3
adc
adc
mov
or
mov
adc
ds
dec
adc
sub
outsb
inc
mov
and
push
add
add
movsl
dec
inc
jge
xor
mov
mov
cwtl
cmp
cmp
push
add
jmp
adc
outsl
ret
xchg
xchg
or
imul
inc
inc
inc
lcall
cmpsb
push
pop
jecxz
sbb
into
sub
sbb
add
shlb
dec
bound
xchg
aas
mov
mov
xor
sbb
loope
sbb
sahf
xchg
or
movsb
jecxz
pop
or
mov
andb
dec
xor
out
cmp
cld
jb
jae
lahf
dec
test
mov
inc
mov
bound
cmp
or
or
push
ret
cmc
repnz
xor
sarl
pop
sbb
cmp
pop
push
sub
adc
pop
mov
stos
test
movsl
adc
es
ret
mov
loope
and
sub
and
int
xor
jp
sub
sub
out
out
icebp
test
rclb
xchg
adc
in
out
sub
mov
lret
dec
push
rcll
adc
lret
pop
cwtl
test
cmp
ret
jmp
pop
mov
dec
jmp
pop
mov
xchg
xor
add
test
sbbl
xor
xchg
inc
push
bound
add
test
call
mov
aaa
shrb
ret
and
or
mov
push
dec
sbb
iret
mov
test
push
add
sub
adc
addr16
inc
shr
aad
outsl
inc
lds
xor
imul
mov
leave
pop
push
pop
pop
mov
in
mov
and
ljmp
lods
and
pusha
js
test
test
leave
cld
iret
lcall
or
cmp
inc
inc
push
pop
or
ds
mov
jge
sub
movsb
inc
xor
push
sbb
xchg
roll
or
cltd
insl
mov
je
sub
lret
adc
mov
jbe
push
push
lea
scas
mov
mov
dec
pop
es
ds
mov
mov
jmp
data16
sub
add
mov
xlat
loop
in
xchg
cmpsb
iret
push
xchg
ret
in
and
movsb
sub
stos
adcl
sub
insb
insl
cmp
movsl
mov
popa
inc
inc
and
push
inc
sti
push
dec
add
mov
pop
cmpsl
pop
adc
out
sar
inc
stc
jno
shll
leave
lods
cmpsb
jnp
mov
push
mov
popa
push
scas
cmpsl
pop
fwait
mov
cmp
push
lock
jno
inc
loopne
xor
dec
xorb
stos
aas
add
shlb
dec
iret
xchg
fs
outsl
movsb
aaa
mov
xor
int
imul
ss
lods
pop
cmpsb
shrl
and
and
or
cld
hlt
lds
push
shlb
fsubrs
rcl
lods
sbb
icebp
in
sub
les
lock
add
cs
or
lretw
jb
lds
xchg
test
dec
lods
xchg
out
cltd
hlt
xchg
not
jbe
and
popf
sub
xor
ja
loopne
mov
in
lods
stc
add
xor
jmp
mov
out
adc
xor
and
test
add
adc
movl
iret
dec
sbb
sbb
dec
xchg
scas
int3
adc
inc
filds
mov
dec
movlhps
add
push
pop
xchg
lret
sahf
or
cmpsl
daa
cmp
adc
mov
imul
xor
fwait
inc
vunpckhps
scas
gs
rcll
fnstsw
int
outsb
xor
sub
aaa
int
sbb
push
inc
popf
mov
ds
and
ljmp
mov
xchg
fadds
cld
sbbb
mov
nop
fdivrl
pusha
ud0
rorb
jle
or
xchg
imul
jbe
cld
nop
xor
adc
mov
dec
push
cmc
adc
jae
jnp
imul
xor
in
jmp
in
fadd
jb
popa
or
pop
into
cmp
lret
aad
pop
lret
push
inc
and
pop
sbb
sbb
sub
dec
mov
icebp
pushf
fadds
call
mov
push
add
ja
mov
arpl
mov
sub
stos
adc
dec
cs
xlat
movsb
andl
jae
xor
in
cli
lds
mov
insl
fwait
outsb
push
not
lock
sahf
jmp
jns
outsl
cmp
cmpsb
mov
in
mov
out
hlt
or
jg
lock
cwtl
inc
mov
cmpsb
push
lea
fisttps
push
call
push
test
push
aam
and
add
mov
mov
mov
insl
es
stc
out
pop
lret
in
popl
fucom
push
sahf
mov
mov
adc
out
sbb
and
jno
fcmovnbe
test
cltd
and
mov
adc
leave
sbb
lods
into
inc
fildll
mov
sarb
test
jb
mov
popf
sbb
pop
rorb
dec
sbb
out
mov
sarb
and
push
cmpb
cmp
ret
std
cmp
and
fmull
in
and
mov
pusha
insl
cmp
mov
sbb
enter
xlat
or
in
xchg
xor
and
lret
pop
jno
mov
dec
sti
mov
mov
cmpsl
sti
pushf
cld
sub
movsb
mov
jge
adc
push
into
cmp
das
inc
dec
pop
mov
in
xor
fldcw
or
sbb
jle
ret
in
fistpll
popa
pop
cmpsb
mov
icebp
dec
xor
add
repnz
xorb
rorl
jns
and
ja
jp
cmp
test
push
sbb
fnstenv
xor
push
pop
xor
sub
aad
jp
iret
mov
pop
mov
mov
data16
aam
inc
test
fs
movsl
and
mov
inc
mov
pop
inc
lods
sub
xchg
dec
or
lock
lods
lahf
mov
add
mov
inc
jge
mov
pop
pusha
les
dec
inc
mov
cmc
lock
in
ret
mov
sub
mov
lods
inc
and
sub
cmp
push
sbb
ret
bound
push
fnstsw
jnp
int3
pop
into
push
xorb
pop
fsubs
mov
mov
aam
lock
jb
push
lcall
rclb
lretw
sub
jnp
xchg
pop
fucomp
out
xchg
xchg
pop
jle
faddl
inc
xchg
inc
loope
pushf
icebp
add
fdivr
and
ss
int3
cmp
out
test
invd
cli
push
imul
xor
lods
insl
xchg
fdivrs
testl
and
ja
cmpl
lock
pop
sbb
add
push
loop
jp
les
lods
lds
pop
or
popf
mov
adc
aad
repz
les
sbb
xor
cs
sub
push
add
ljmp
dec
jle
fistpll
rcll
add
outsl
adc
frstor
out
cmp
pop
ljmp
gs
adc
lcall
sub
sbb
in
mov
sbb
xor
dec
xor
cmp
xchg
cmp
xchg
pop
aam
inc
test
lcall
push
lods
push
dec
inc
push
lcall
cmp
pop
ficoms
add
js
pop
out
arpl
jae
cld
lret
lret
jl
mov
jecxz
mov
fucomp
repz
in
push
js
aas
mov
fdivrl
add
push
imul
sub
faddl
shll
mov
subl
xlat
test
addb
jne
in
dec
sbb
mov
leave
adc
sbb
lock
xor
call
push
sub
pop
outsb
lods
sbb
movsb
lock
fcomps
mov
fs
sub
mov
insb
inc
mov
xlat
jmp
lret
adc
jmp
subl
dec
mov
pop
jb
cmp
insb
jl
call
into
leave
cmc
jl
adc
fidivrl
add
sbb
xchg
adc
adc
mov
hlt
inc
inc
adc
cltd
out
pop
and
push
arpl
jne
pop
add
mov
jge
mov
cld
mov
je
loop
les
vminss
gs
pop
inc
movsl
jg
shlb
xchg
cltd
jl
inc
push
jle
in
ds
pop
bound
lret
add
add
out
decb
cwtl
dec
pop
lock
pop
pop
ja
bound
xchg
mov
xor
jmp
and
int
fcompl
subb
mov
jp
mov
and
sbb
in
mov
cmp
adc
ja
pop
insb
mov
fs
repz
out
push
cmp
add
xchg
movsl
jo
push
inc
xchg
lahf
fidivs
inc
pop
das
sbb
inc
les
inc
arpl
xchg
das
mov
idiv
ret
ss
mov
jne
jle
fmuls
std
pop
or
jmp
loop
popa
jbe
popa
xor
xchg
push
je
std
and
out
mov
pop
add
sub
mov
iret
cmpb
loopne
mov
sub
mov
jle
cmp
inc
pop
mov
dec
sti
icebp
ret
cmp
rcrb
data16
test
inc
mov
sub
pop
dec
lock
mov
mov
lret
jmp
pop
popf
jns
mov
stos
pop
bound
jo
inc
push
lret
enter
stc
cmp
pop
fdivrl
mov
movsb
movsl
push
sbb
test
out
fcompl
mov
lret
das
xchg
push
in
cmp
popa
lds
jmp
in
jns
add
insb
addr16
inc
adc
adc
and
xchg
xchg
divl
cmp
inc
add
fistl
xlat
mov
mov
add
ds
rolb
fstpt
push
mov
adc
dec
enter
dec
dec
push
imul
cmp
out
rclb
into
add
lret
mov
fmuls
cltd
bnd
incl
xor
mov
xchg
gs
into
jne
std
pop
add
push
cmp
mov
es
jl
dec
jge
daa
out
push
pushl
test
ss
shll
jo
push
push
outsl
call
dec
loopne
lock
mov
fisttps
clts
jl
jp
xor
cmpsb
lea
lock
addr16
sub
mov
xchg
mov
ljmp
mov
iret
ds
in
jecxz
out
icebp
out
xor
out
test
mov
push
adc
or
mov
pop
aad
loop
cmp
jle
sbbl
pushf
dec
into
sub
xlat
cli
lret
and
inc
and
lret
mov
mov
sub
setne
sub
daa
lret
pop
push
mov
push
ret
push
mov
out
nop
cmp
outsl
mov
jbe
adc
test
bound
mov
mov
add
and
pop
cmpl
data16
inc
fldcw
inc
mov
popf
pop
jmp
sub
cmp
mov
add
adc
test
xor
lret
push
or
push
cmp
mov
cmp
daa
hlt
outsl
and
lds
or
mov
mov
add
ret
cltd
arpl
jb
cli
and
xchg
cmp
test
sbb
dec
ss
inc
out
dec
pop
hlt
enter
mov
inc
insl
sbb
call
or
in
out
testl
loope
cmp
pop
mov
xlat
xchg
lahf
sti
in
lock
pop
outsb
sbb
xchg
dec
xchg
jp
cmc
mov
imul
jb
cmp
xor
aad
jp
imul
sahf
mov
bound
add
add
mov
test
jmp
and
pop
loop
das
xlat
or
je
xchg
pop
das
mov
adc
push
sbb
inc
pop
xchg
sbb
mov
xchg
cmp
in
outsl
addr16
adc
pop
movsb
sub
dec
inc
rorb
sub
loope
into
adc
xor
jo
std
push
add
sub
jb
mov
xlat
xor
lret
or
sub
push
fwait
push
add
insb
push
adc
loop
shll
adc
cmp
lcall
repnz
fiadds
lret
xchg
sub
pop
cmpsl
mov
into
bound
test
mov
int3
movsb
cmp
xor
or
adcb
mov
jo
repnz
dec
lods
mov
je
lds
jmp
jmp
jecxz
into
sbb
mov
jo
sahf
adc
stc
cs
push
imul
or
adc
imulb
jns
mov
inc
aam
mov
add
xchg
js
cld
sbb
xchg
fldcw
push
xchg
cld
dec
icebp
lcall
and
jge
clc
mov
fdivs
lods
or
out
aad
adc
gs
xor
jmp
cmp
inc
sub
mov
enter
mov
ffreep
int
and
fstps
rolb
mov
jne
dec
and
mov
push
js
add
xor
insb
add
cwtl
ds
and
jo
and
roll
dec
lods
xor
mov
fldl
mov
xor
lret
pushl
sbb
in
mov
jae
in
sub
dec
push
call
cltd
inc
mov
mov
xor
inc
adcb
xor
xor
adc
mov
jb
shr
mov
jno
add
xchg
jnp
xchg
aas
mov
mul
push
cmp
call
out
test
pop
rcll
inc
inc
pop
xchg
mov
and
and
orb
xchg
scas
or
inc
mov
jns
push
pop
dec
add
ja
aaa
imul
mov
test
adc
jae
or
nop
push
nopl
pushf
pop
inc
inc
in
jns
or
insl
or
pop
lcall
mov
push
ret
xor
cld
add
cltd
xorb
jg
jecxz
or
xchg
sbb
in
cwtl
add
mov
stos
push
xor
inc
incl
add
sub
hlt
push
mov
and
iret
jns
cmpsl
adcb
sbb
xchg
rorl
popf
and
push
mov
adc
out
xchg
or
aas
and
pop
inc
shrb
sbb
mov
mov
aas
and
jns
sti
nop
mov
pushl
aam
insl
push
faddl
pop
out
adc
dec
mov
lret
inc
mov
inc
arpl
imul
cli
stc
adc
pusha
shlb
mov
insl
or
icebp
outsb
xchg
sbb
enter
cmpsl
push
sub
pushf
inc
addr16
mov
xchg
les
xchg
dec
fbstp
mov
jmp
jns
xor
jnp
aam
mov
mov
lds
jge
inc
jno
shlb
test
mov
xor
fcom
ljmp
imul
cld
cmp
pusha
les
pusha
cmp
adc
insl
ret
outsl
add
cmc
push
mov
mov
loopne
inc
jo
push
mov
adc
testl
and
popa
insb
and
push
cmp
out
mov
xchg
push
outsb
adc
jmp
or
call
jle
in
push
mov
mov
mov
stos
test
add
mov
das
mov
mov
xor
push
add
scas
inc
outsb
loope
shl
cmpsb
fcmovnb
lods
rorl
mov
or
cmp
nop
enter
dec
aad
dec
pusha
rcrb
pop
or
jae
cmp
aam
and
pop
cld
lock
mov
and
push
xor
dec
fidivs
pop
scas
jns
nop
and
mov
arpl
xor
pop
add
mov
imul
fs
jp
add
pop
sbbb
ficoms
and
xchg
aaa
lds
or
cmc
aaa
xor
les
sub
pop
mov
and
out
jb
jmp
cmp
gs
cmp
ss
cmp
in
jno
inc
mov
mov
ret
lea
ljmp
lds
and
mov
xor
les
jns
xlat
sti
das
adc
jp
pop
fists
xchg
movsb
sbb
leave
adc
push
mov
add
addr16
mov
repz
mov
inc
cmp
mov
in
xor
mov
ret
icebp
sub
data16
inc
jbe
dec
mov
fcomp
mov
mov
push
mov
mov
sar
push
xchg
and
dec
cmpsb
das
jge
test
ljmp
sti
in
out
imul
adc
jge
add
push
bound
popa
sub
push
mov
mov
pop
push
cmp
aaa
insb
pushf
and
rcrb
mov
mov
or
shr
sbb
or
lods
inc
aaa
sbb
and
lret
inc
and
mov
loope
or
pop
jbe
xchg
frstor
push
and
dec
stos
inc
inc
push
in
fs
aam
jg
sbb
punpckhdq
jl
je
lcall
rorb
sbb
cmp
rcrb
in
jmp
daa
mov
mov
or
sub
cmpsb
sub
gs
imul
stos
cmp
jmp
jecxz
rol
lahf
jmp
sbb
pop
sub
out
gs
jmp
test
ret
dec
mov
and
arpl
fiaddl
sahf
or
or
sbb
xchg
outsl
dec
scas
jg
movb
daa
rorb
lret
mov
popf
fstpt
icebp
jge
push
js
fwait
or
mov
jne
cwtl
jno
mov
and
mov
lret
cmpsb
insl
sub
dec
xchg
sub
inc
mov
pop
cmp
in
sub
stc
push
out
rcrb
and
movl
pop
dec
jnp
cmpsl
jnp
add
stos
sbb
pushf
inc
or
roll
out
xor
jg
lock
loope
jp
rcr
or
fwait
inc
aaa
dec
mov
push
loop
lret
xchg
shl
sub
imul
fcmovnb
inc
jns
and
lcall
lcall
adc
gs
arpl
push
mov
and
push
jns
stos
cld
pop
shrl
scas
dec
leave
mov
insb
sub
xor
popf
xor
add
in
sub
outsb
pop
xchg
dec
dec
push
mov
cmpsl
out
js
or
lods
insb
cld
pop
mov
mov
inc
dec
adc
imul
push
mov
pop
lds
stos
cmp
in
sbb
lret
test
fcom
push
test
mov
inc
add
jo
pusha
or
inc
and
into
rcrl
repnz
lods
or
pop
lcall
cmpsl
sub
xor
fwait
xchg
sbb
jp
pop
pop
in
fisttps
dec
inc
aam
xor
cmp
scas
sub
xchg
push
xor
push
call
ficomps
ja
cmpb
xchg
ss
xchg
mov
mov
sbb
xchg
mov
test
or
adc
pop
std
test
adc
xor
cmpsb
pushf
push
and
xorb
or
adc
in
in
shrl
xor
daa
and
adc
faddp
xchg
adc
aaa
fiaddl
pop
jp
es
fiaddl
divl
push
or
add
addr16
insl
xlat
aad
loope
lahf
push
mov
and
roll
mov
bound
test
sub
jb
test
outsl
stc
cld
mov
mov
and
enter
iret
js
adc
lret
push
pushf
cmp
mov
aaa
popa
cmpsl
rol
pushf
dec
loop
enter
push
mov
sbb
dec
cmpsb
adc
cmp
inc
jae
sub
inc
and
mov
idivb
jl
les
mov
push
rorl
fsubrp
pop
mov
xchg
xor
add
fdivrs
ja
out
stc
sarb
mov
out
pop
pop
jae
push
test
cmc
pop
jne
in
outsl
xchg
mov
call
lahf
sbb
stos
and
adc
push
jmp
or
adc
decb
repz
shrb
outsl
mov
fwait
movsl
ja
pop
cmpsl
cmc
xchg
hlt
push
into
arpl
test
icebp
mov
jns
std
call
insb
arpl
add
das
popa
in
popf
push
cmpsl
mov
aad
inc
je
lahf
add
jae
pushf
push
sahf
int3
sahf
add
inc
pop
loope
cmc
fistps
cmp
mov
jo
dec
and
cmc
out
and
sub
mov
negl
inc
sbb
mov
and
jb
arpl
dec
dec
sbb
sbb
icebp
jnp
out
repz
rorb
xchg
scas
fisubl
fsubp
cmp
or
repnz
into
arpl
add
cmp
push
push
jge
mov
sarl
mov
push
jl
jo
cltd
les
test
pusha
loop
pop
mov
mov
inc
xchg
dec
adc
ret
lea
push
mov
mov
fwait
pop
pusha
push
cmc
fildl
aam
mov
sub
fsubs
push
in
jo
fs
fcomps
fxtract
movsb
fstpl
enter
mov
movsl
cmc
daa
test
jg
in
lret
ljmp
and
xor
adc
jp
jp
pop
push
test
ja
fcomi
cmp
mov
dec
jg
ret
into
cmp
push
mov
int
es
jl
jo
cmp
shrl
or
inc
xchg
outsl
fisttps
das
jl
cld
stos
mov
mov
scas
ficomps
dec
adc
mov
and
push
sub
mov
dec
xor
xchg
mov
add
pop
xor
jmp
pop
scas
shrl
dec
xchg
xor
inc
cmp
mov
xor
sub
sub
cmc
repz
aas
js
adc
sbb
scas
push
jp
in
fsubrl
and
or
pop
mov
das
lret
mov
dec
repz
in
mov
pop
dec
mov
pop
es
mov
push
lret
jl
js
test
inc
insb
adc
daa
ficompl
mov
push
enter
lcall
lods
iret
push
cmpsl
int
jl
xchg
pop
shl
sarb
fs
arpl
hlt
test
add
inc
int3
pop
push
lret
sbb
ret
test
xchg
jno
mov
cwtl
mov
push
dec
lods
shl
dec
lcall
adc
cs
movsl
in
adc
gs
adc
stos
xchg
imul
cli
pop
sbb
mov
dec
sbb
jno
lahf
sbb
pop
sub
mov
imul
xor
push
jno
int3
out
xchg
pop
enter
lock
jne
sub
sarl
hlt
in
popa
xor
or
movsb
mov
mov
test
sahf
hlt
push
cltd
popa
cmp
adc
fstps
jbe
inc
push
sub
outsb
out
adc
cmp
add
jne
loopne
rcrl
daa
mov
jp
fdiv
sbb
mov
mov
shrd
xor
adc
xor
fadds
cmp
sub
jbe
insl
jle
inc
inc
cmp
std
fs
lods
ljmp
sub
inc
mov
jo
pop
scas
add
lret
mov
iret
inc
mov
adc
adc
xor
jp
xlat
movsb
add
repnz
jno
and
or
mov
leave
jno
push
nop
push
daa
inc
ds
inc
push
lods
dec
pop
mov
lods
mov
loopne
das
scas
add
rcll
ja
cmpsl
adc
mov
fs
xchg
sahf
xchg
aad
jmp
movsl
in
lahf
mov
imul
xchg
je
shl
je
mov
jp
ret
je
or
aam
mov
test
pop
cmp
inc
lods
popf
repnz
sbb
frstor
mov
lret
bound
mov
lcall
je
mov
mov
push
push
jmp
xor
fimull
add
mov
dec
push
xor
pop
jo
pop
mov
insl
in
dec
rolb
insb
mov
and
xchg
ljmp
movsl
lcall
cmp
rol
push
aam
popa
inc
and
icebp
inc
fiadds
jno
mov
jno
or
ss
or
adc
inc
push
inc
push
scas
cmp
inc
test
pop
pop
imul
movsb
mov
neg
repz
lds
cmp
cltd
ror
jns
gs
lock
pop
out
xchg
xlat
inc
cmp
xor
int
inc
pusha
push
popl
test
sub
mov
mov
jo
push
and
mov
inc
nop
aam
xor
inc
test
sub
daa
jg
pop
jecxz
and
mov
dec
push
ljmp
dec
xor
cmp
pop
iret
xor
sbb
imul
test
fsubl
fs
pusha
dec
les
sub
loope
cld
pop
sbbl
aam
mov
insb
arpl
jmp
cwtl
and
and
cs
add
test
xor
lods
rcrb
es
int3
xchg
xor
enter
mov
outsb
mov
sahf
mov
mov
in
fsubs
mov
pop
filds
push
sbb
push
mov
push
sbb
sbb
push
sub
and
pop
lcall
inc
mov
cli
adcb
xor
icebp
arpl
lcall
mov
ret
xor
push
jle
cmpsl
insb
sub
xchg
jb
repnz
sub
adc
in
xchg
add
adc
pop
les
test
jns
mov
aam
arpl
dec
movsl
mov
and
insl
lods
aaa
rolb
add
je
lret
or
leave
xchg
inc
stos
lods
sbb
mov
movsb
out
ss
pop
test
xor
pop
js
std
andb
xchg
xchg
lret
jnp
sbb
sbb
cs
or
stc
fmull
pop
mov
aaa
jne
mov
sub
sbb
fisttps
push
rclb
call
pop
loop
dec
jp
or
orl
test
sti
cmpsl
jbe
mov
dec
icebp
decb
jae
lds
mov
stc
cmc
add
xor
dec
push
js
leave
sahf
or
xor
xchg
dec
xor
ret
sub
jno
fcoml
pop
sahf
or
loope
lret
pop
les
imul
test
ja
jbe
mov
dec
stos
loopne
mov
or
je
andb
adc
andl
iret
mov
shll
push
scas
xchg
dec
out
cmp
cmpb
xchg
loope
mov
in
aad
sub
scas
xor
xor
jbe
push
data16
dec
xchg
adc
orb
cmpsb
fwait
inc
jb
pop
movsb
mov
pop
clc
jbe
pop
mov
jg
dec
pop
ss
addl
sub
mov
out
xor
xchg
adc
sub
add
cmpsl
outsl
sarl
pop
xchg
test
fwait
insl
jmp
call
dec
ss
cli
insl
lahf
mov
add
cmpl
lcall
cwtl
nop
mov
sarl
dec
or
dec
nop
adc
sahf
xlat
addr16
negl
jl
movsb
adc
stos
xchg
fwait
xor
push
hlt
repnz
and
or
inc
push
cmp
popf
dec
add
or
mov
clc
inc
jl
repz
fs
sbb
xor
pushf
sbbl
sub
cwtl
pop
push
mov
into
int
inc
lcall
mov
aam
stos
pop
sarb
sub
fmul
in
mov
int
inc
xchg
cltd
xchg
das
bound
or
fstps
insb
dec
jb
adc
lahf
mov
push
popa
testb
mov
hlt
fldl2t
cli
test
iret
leave
xchg
and
ss
stc
sbb
sahf
and
dec
sub
or
out
fwait
or
jecxz
jl
sbb
jmp
ljmp
cs
cs
in
cmpl
cli
mov
pop
movb
orl
inc
jg
jle
jbe
mov
pop
adc
cltd
jle
lods
pop
filds
sub
fstl
clc
and
and
shl
clc
mov
inc
inc
dec
cmp
or
sub
push
sbb
fiadds
movsb
dec
cmc
decb
daa
inc
lret
and
mov
int
mov
and
cli
pop
xchg
fsubrs
jp
sub
and
xchg
jno
cmp
cmp
dec
xchg
jmp
fwait
sub
test
cmp
inc
ror
fwait
les
adc
pop
popa
inc
jmp
rol
xor
xchg
mov
cmp
out
fdivl
mul
ss
lea
add
dec
ja
jno
out
jo
dec
rcll
mov
mov
add
push
and
mov
repz
xor
jne
jecxz
arpl
jg
pop
xlat
scas
xchg
dec
or
or
jo
sub
out
data16
xchg
pop
cs
int
dec
sbb
lods
int3
aad
inc
ficoml
mov
lea
daa
lcall
enter
dec
or
fcmovu
divl
mov
mov
cmp
fists
xchg
int3
mov
pop
mov
mov
or
scas
in
adc
jae
or
into
in
cmpb
insl
mov
fistps
adcb
jge
inc
arpl
mov
movsb
fiaddl
int3
imul
mov
daa
or
orl
hlt
ljmp
fmuls
mov
jno
and
xor
rcrb
les
cmp
aaa
inc
cmp
imul
lea
repnz
push
loopne
or
xor
sbb
pop
pop
stos
push
lea
faddl
mov
mov
mov
fidivrs
jne
sbb
sub
fisttps
fildl
or
mov
aad
sub
xor
adc
scas
cs
inc
jbe
call
xchg
sti
inc
rorb
or
add
inc
movsb
ss
popf
inc
jbe
or
sbb
dec
subl
es
xchg
insl
mov
mov
fdiv
push
sub
jo
stc
les
imul
pop
hlt
mov
std
sub
cli
rorl
aad
sub
jg
sbb
mov
add
das
int
add
xor
inc
xor
jno
xor
pop
inc
fimull
fsubrs
pop
and
mov
jne
mov
lret
dec
je
ret
das
rcl
pop
jecxz
sub
in
lods
add
jnp
pop
jg
sub
les
push
mov
and
mov
test
mov
sub
fs
ret
mov
xrelease
jge
les
into
cmp
fists
mov
outsl
cmp
movsl
sbb
scas
inc
testb
in
inc
ror
mov
or
negl
xlat
imul
add
mov
in
mov
add
jbe
stc
mov
stos
les
lcall
mov
aad
push
sbb
push
in
dec
pop
pushf
lds
xor
mov
and
and
push
jns
pop
lcall
fisttps
mov
dec
lahf
in
inc
testl
mov
jge
rclb
sbb
xchg
pop
ffree
mov
cmp
add
data16
xor
add
cmpb
inc
jge
or
inc
xor
mov
hlt
fadds
push
test
sbb
imul
mov
fldenv
repnz
jecxz
push
mov
mov
add
adc
jmp
mov
aaa
cli
mov
jne
push
lea
inc
xchg
icebp
pop
add
mov
mov
lahf
jmp
popf
dec
movsl
arpl
push
das
outsb
fidivrs
je
add
loope
loopne
sbb
sub
inc
andb
and
pop
lock
je
jl
enter
xchg
adc
shrl
fidivs
loopne
push
pop
inc
pop
xchg
outsb
cmpsb
movsl
or
int
aas
inc
pop
mov
int3
jmp
xchg
mov
pop
pusha
divl
mov
xor
aad
dec
mov
fsubr
inc
push
sar
xlat
fists
cld
xor
adc
imul
push
and
dec
leave
lret
arpl
xor
popf
jecxz
and
and
jmp
in
inc
jns
or
outsl
ljmp
les
faddl
mov
push
and
js
mov
and
dec
sbb
movsl
mov
jo
call
push
jg
icebp
mov
push
sbb
lds
xor
push
sub
jbe
scas
leave
xchg
stc
jmp
xchg
leave
js
lret
push
int
mov
std
std
xor
sub
xchg
pop
pop
push
test
ret
fcoms
cmp
push
sbb
adc
cmp
adc
aam
fadds
sqrtps
or
inc
idiv
sarl
push
arpl
dec
xor
movsl
divb
push
or
mov
rep
push
sub
xlat
pop
insb
es
fcoms
push
jg
jl
cmpsb
and
rcrl
inc
sbb
aam
ja
xchg
push
push
push
mov
lock
dec
stos
adc
ffree
mov
xchg
mov
xchg
sbb
push
div
fadd
cmp
mov
shrb
mov
outsl
dec
outsb
adc
mov
es
or
adc
adc
or
jno
mov
pop
adc
fdivrs
fsubrl
sbb
and
xor
in
andl
pop
pop
rcll
mov
mov
lcall
sbbb
fistl
push
imul
popf
fdiv
xchg
inc
jne
xchg
jnp
mov
add
adc
xor
push
and
mov
pop
and
jo
push
fnsave
mov
leave
subl
rcrl
aad
xor
in
jbe
or
mov
pop
fcomps
pusha
cmp
ljmp
pop
add
lea
mov
sarl
inc
pop
sbb
movsl
popf
xchg
push
cwtl
mov
dec
mov
pop
lea
mov
xchg
xchg
cltd
inc
xchg
scas
movsb
out
adc
adc
ficomps
adc
and
aaa
out
dec
lret
push
movsb
fstps
dec
ljmp
in
shrl
and
stos
ror
lret
xchg
push
or
test
push
movd
in
jmp
rorl
adc
decb
enter
movl
pushf
xchg
dec
cmp
jne
fucomp
lret
fnstcw
daa
out
add
cmp
inc
cmp
clc
loop
push
add
dec
test
sub
jns
jns
push
imul
popf
mov
fcmovu
gs
aam
dec
push
movsl
rcr
test
xchg
or
xchg
aas
xchg
jge
xor
fisubrl
es
jns
and
out
stos
pop
rorl
mov
sbb
jle
pushf
xor
idivl
add
pop
pop
rcr
mov
and
out
andl
xor
adc
inc
cmp
adc
scas
add
jg
std
sarb
jb
sub
mov
push
dec
cld
loop
movb
je
ds
clc
mov
inc
inc
inc
cld
and
and
pop
cld
mov
inc
mov
inc
sahf
roll
cmc
lock
pusha
mov
cwtl
jl
lds
dec
jb
jge
popf
cmpsb
test
xchg
mov
xor
bound
dec
mov
lock
movsb
jne
push
adc
rorb
sub
and
lret
mov
loopne
pop
adc
xor
adc
pop
pop
enter
push
mov
bound
aaa
adc
pop
ljmp
xor
inc
lcall
inc
hlt
inc
icebp
xchg
add
dec
lods
jecxz
fwait
cmpsl
js
ljmp
mov
push
daa
jmp
or
mov
push
jg
xchg
mov
jg
mov
mov
sub
adc
icebp
or
js
push
notb
mov
push
push
push
lret
cmpsb
cltd
or
dec
push
clc
push
mull
cwtl
xchg
movsb
outsb
inc
cld
out
jne
int
xor
aas
out
mov
movsb
movsb
data16
jo
das
inc
adc
ftst
jne
add
stos
xor
xor
scas
adc
sub
add
adc
ret
loop
sbbl
icebp
xchg
jnp
jae
into
mov
sub
inc
loope
jl,pn
xchg
mov
dec
mov
ret
adc
nop
pop
popa
ljmp
sti
lcall
cmp
pop
add
adc
fdivrp
mov
mov
push
xor
xchg
sbb
daa
nop
into
sub
xchg
sub
xchg
cld
sbb
adc
outsl
adc
push
xchg
pop
dec
lods
push
jbe
movsb
dec
je
adc
punpcklwd
mov
push
cwtl
inc
dec
rcrb
in
stos
out
out
lods
cwtl
rcr
insl
gs
cli
in
movsb
aam
lret
sub
adc
inc
bound
mov
je
adc
inc
or
sub
sti
adc
lods
inc
dec
cmp
xchg
jnp
lods
dec
sub
pop
mov
fstpt
fmull
fidivl
es
clc
inc
loopne
addr16
jp
lcall
jno
lea
dec
adc
pushf
adc
int3
mov
daa
adc
inc
je
lods
cmpsl
test
push
bound
sbb
fs
jns
xchg
xor
das
out
xchg
sbb
lock
out
xor
push
aaa
mov
cmc
mov
jae
inc
aaa
in
xchg
pop
adc
xchg
adc
shrb
jb
sub
xchg
sub
cld
fisttps
sti
int3
mov
push
pop
stos
sub
pop
jmp
pop
inc
jle
or
push
jb
jle
cld
loope
push
mov
je
rolb
dec
repz
xchg
aaa
outsl
sti
andl
dec
std
xor
xor
xor
mov
lcall
cwtl
mov
lock
jb
outsb
std
xchg
mov
lock
inc
or
iret
add
fdivrl
jp
pop
or
ficompl
loope
dec
fstpt
insl
rorl
nop
dec
jae
sbb
int
test
rcll
pop
ja
test
mov
mov
and
push
jae
pop
pop
mov
xchg
xchg
dec
xchg
sahf
mov
xor
cld
int3
and
mov
js
jecxz
test
push
ds
sbb
sub
mov
outsl
sub
jg
or
mov
cmp
sbb
pop
cld
mov
mov
cmp
and
repz
adc
xchg
push
inc
sbb
or
mov
dec
call
lods
xchg
insl
lods
jb
mov
jle
aam
scas
fsubl
mov
pop
sti
popf
xor
divl
movl
mov
testl
je
jo
cli
inc
aad
ljmp
imul
aaa
push
cmp
or
mov
xor
std
mov
cli
cmovo
push
xchg
push
sbb
or
cwtl
and
mov
mov
sub
lcall
jmp
pop
sbb
cmp
leave
sbb
mov
sub
imul
cmp
repnz
dec
push
imul
add
in
popa
pop
add
jmp
push
xor
xchg
xchg
out
jge
lret
test
dec
stos
jbe
out
sub
mov
fbld
ret
repz
push
test
das
sub
lods
shl
int3
dec
mov
dec
repz
lds
mov
sbb
imul
inc
xorb
shr
xor
push
lock
adcb
dec
sbb
fmull
fcomps
sti
and
dec
call
xor
mov
push
inc
xor
xchg
fcoml
sub
test
insb
pop
gs
cli
not
add
repnz
scas
addl
jnp
inc
sub
inc
pushf
pop
pop
xchg
adcb
or
cmp
jae
cwtl
add
pop
dec
jmp
shll
push
popa
and
push
jae
shrl
imul
pushf
add
mov
adc
pop
mov
scas
and
fwait
xor
cmp
push
es
cmpsb
scas
mov
insb
popf
ja
or
jmp
andl
push
mov
mov
or
lret
mov
ss
nop
lods
jmp
in
test
pushf
iret
sub
mov
cmp
loopne
mov
ljmp
aaa
movsl
adc
icebp
cmp
sbb
iret
insl
push
pop
sahf
mov
mov
fs
lds
mov
push
mov
mov
lods
imull
sub
cmpsb
les
test
jge
mov
mov
loopne
outsl
pop
add
mov
jge
pop
daa
mov
insb
cld
pop
jno
xchg
jns
nop
in
ret
ljmp
hlt
mov
dec
shr
sub
mov
mov
mov
fwait
fs
aam
mov
sub
sbb
and
jp
inc
add
adc
jge
lock
pop
jecxz
lret
subl
rcrb
push
adc
loopne
icebp
aas
hlt
cmp
fmull
push
lds
lods
xchg
lea
ljmp
xchg
ret
aam
add
mov
mov
daa
jecxz
xchg
int
sub
nop
sub
jb
adc
lret
lods
lret
bnd
sub
nop
or
xor
test
jno
mov
dec
sbbl
mov
adc
js
push
jg
push
pusha
push
testl
fs
mov
mov
mov
test
dec
mov
jg
std
call
sbb
jne
fdivs
add
or
call
push
idivb
dec
push
sub
and
mov
mov
imul
adc
mov
rcrl
xchg
dec
xchg
std
or
icebp
das
sub
fnsave
xor
sbb
pushf
aas
xchg
mov
pop
pop
and
lds
xlat
loop
jb
push
cmpsb
jg
lds
imull
cld
add
pusha
loopne
stc
push
xchg
mov
out
pop
imul
imul
out
mov
cmpsb
jmp
sbb
xchg
int
cwtl
lock
subl
xchg
mov
or
enter
outsb
mov
ss
pop
push
arpl
mov
decl
test
cld
fbld
outsl
mov
test
clc
scas
in
pushf
and
adc
les
ficompl
pop
incl
fisttpll
lods
std
neg
pop
mov
cmpsb
jns
aaa
xchg
jg
imul
or
in
adc
mov
in
ljmp
popf
les
push
test
pop
xchg
adc
mov
adc
inc
mov
push
int
in
inc
loopne
inc
or
jbe
pop
sbb
sub
and
incb
ficoml
movb
aas
adc
jmp
lds
jnp
sahf
hlt
mov
in
scas
cmp
fisubrl
mov
repnz
mov
loop
mov
bound
sub
xchg
mov
add
test
lock
test
adc
xchg
mov
sbb
dec
add
cmp
cmp
loope
cmp
idiv
arpl
adc
xor
out
pop
xor
pop
lret
xchg
push
lock
ficoms
push
mov
or
andb
sub
sub
jg
cmp
mov
test
imul
lea
xchg
pavgw
or
sub
and
fldl
shrl
pop
adc
repnz
xor
inc
jb
adc
xchg
jl
cltd
dec
insb
nop
or
test
insl
incb
pop
mov
in
loop
xor
pop
icebp
imul
sub
add
pop
leave
leave
int3
dec
lods
push
fs
jae
nop
jno
xor
and
aas
lods
scas
sbb
negb
or
sti
mov
dec
rolb
repnz
adc
dec
or
test
movsl
movl
in
sub
aaa
sub
cmp
cwtl
cwtl
in
shr
mov
mov
xchg
xor
mov
mov
and
mov
hlt
loope
insb
push
mov
jo
pop
notb
ds
adc
xor
pop
add
in
fsub
test
dec
and
cs
inc
jl
or
adc
rcll
jle
test
jb
cs
add
stos
jmp
xchg
pop
mov
popa
add
lret
jle
ret
lods
notl
cmp
xlat
fwait
sbb
xchg
mov
in
inc
hlt
pop
rdtsc
fstpt
clc
pop
cmp
in
dec
ret
mov
test
sbb
lret
mov
mov
xchg
test
ret
inc
in
xchg
hlt
sbb
sub
mov
in
idivb
cli
dec
flds
dec
incb
and
into
push
popl
lods
jecxz
sub
hlt
sbb
add
dec
enter
ja
ret
xchg
dec
je
daa
mov
cmp
dec
stos
ds
bound
lcall
push
es
insl
aad
dec
cmpsl
sbb
mov
roll
aaa
imul
add
aas
imul
sub
mov
jne
test
add
dec
js
sub
je
scas
mov
call
dec
clc
std
pop
add
nop
inc
ljmp
xlat
in
pop
mov
stos
jae
mov
sbb
xor
cmp
jb
fstpt
outsl
mov
pop
mov
dec
mov
add
sti
dec
dec
in
icebp
add
mov
lds
xor
push
rorl
push
lock
mov
shlb
pop
shrb
and
lcall
lds
dec
mov
loope
jne
mul
pop
mov
fists
mov
mov
addr16
xchg
push
jnp
dec
fisubrs
and
ficoml
fcmovbe
inc
xchg
shr
mov
mov
inc
mov
or
jae
xorb
adc
in
in
ljmp
dec
out
add
mov
scas
lcall
into
mov
and
in
inc
cmp
vbroadcasti32x8
jbe
stos
icebp
insb
frstor
push
pop
fdiv
in
pop
pop
xor
inc
adc
movsb
out
mov
sub
insl
nop
scas
jecxz
sti
shll
pop
aas
dec
movb
xor
cs
cmc
in
int3
jg
sub
adc
adc
add
into
push
stos
jg
cltd
movsb
dec
sub
jb
xor
imul
jl
cmp
negl
mov
ret
ja
xchg
adc
sbb
test
jmp
jmp
cli
push
sub
data16
pop
xchg
call
sbb
scas
iret
testl
imul
sub
mov
sub
mov
ficoms
pop
popa
push
test
xorl
ss
in
and
xchg
cld
cli
xchg
sub
dec
leave
and
jae
enter
lcall
xor
xor
xor
pop
loop
subb
and
pop
lea
adc
rep
mov
out
std
inc
jl
mov
ljmp
shll
mov
cmpsl
adc
mov
fwait
xor
aaa
addb
jno
inc
enter
sub
and
xchg
cwtl
pop
data16
fbld
pop
mov
jle
daa
mov
mov
cld
pop
pop
xchg
adc
das
jae
pop
xchg
mov
sub
push
xchg
jge,pt
and
jp
mov
test
jle
jnp
pop
je
add
testb
add
xchg
add
jge
fbstp
pop
xchg
fisubs
sbb
lea
and
jle
pop
inc
dec
inc
setp
addr16
pop
int
idivb
jle
mov
dec
test
dec
jecxz
push
jle
lret
psubd
cmp
cmpsb
xchg
jge
es
out
pop
push
fstl
add
adcl
in
lods
pop
ret
mov
add
cmp
fwait
mov
xor
push
push
xor
into
sub
push
xor
scas
or
jle
lahf
adc
test
mov
mov
add
pushf
hlt
pushf
mov
jnp
lret
adc
xchg
or
popa
xor
cltd
cltd
cltd
enter
mov
arpl
subl
or
int
pusha
sub
push
push
and
and
fisubs
bound
pop
push
aad
mov
ds
mov
mov
into
push
sarb
mov
pop
add
inc
lcall
std
jecxz
push
pop
adc
mov
jnp
cmp
cli
jno
xor
dec
pusha
hlt
into
shr
dec
xor
fcmove
enter
hlt
imul
push
or
xchg
mov
adc
shrl
lahf
leave
lds
cmpsl
nop
rcrb
ret
sbb
adc
ret
pop
jle
loope
push
xchg
mov
push
jp
add
xchg
inc
outsw
loop
sbb
std
lea
mov
mov
clc
fs
mov
lds
lods
test
int
cmp
cmpl
xchg
das
outsb
repnz
out
popl
pop
and
hlt
sbb
leave
loopne
mov
mov
xchg
or
and
dec
es
xor
sahf
xchg
push
and
nop
mulb
pushf
das
lcall
lret
rcll
fmulp
mov
int3
rclb
push
inc
sbb
jo
js
push
loop
int
ss
mov
sahf
rolb
lahf
jle
mov
pushf
inc
xchg
out
and
pushf
in
ja
xchg
xchg
xor
in
je
cltd
hlt
sub
outsb
add
cmp
aas
dec
and
add
or
stos
fwait
mov
mov
mov
xchg
fstl
mov
and
xchg
jb
push
stc
int
adc
or
test
fstps
jno
push
mov
int
pop
loope
xchg
mov
pop
shl
rclb
pop
leave
or
orl
ficompl
js
in
ret
mov
cwtl
inc
xchg
scas
jne
dec
pop
dec
sbb
in
mov
xor
sahf
adc
test
fstpt
and
mov
pop
cmp
mov
imulb
lret
and
xchg
sub
inc
cmp
rol
add
sub
push
mov
fiaddl
push
jecxz
or
stc
xchg
repz
add
xor
mov
add
jne
push
xor
mov
sub
adc
sub
cmp
arpl
cmp
orb
xor
shlb
xor
mov
fstl
cmp
in
pop
popa
je
jbe
js
add
ljmp
add
jecxz
adc
inc
test
jle
out
int
mov
stos
pop
popf
adc
push
shl
xchg
mov
pop
or
int
aas
push
push
and
cmc
sub
addr16
repnz
in
sbb
rcl
pop
cmc
dec
pop
mov
lock
pop
and
scas
xor
out
mov
bound
sbb
es
rcr
cmpsb
cli
cli
ja
lds
int3
int
pop
push
cmp
sbb
mov
icebp
jmp
orl
mov
mov
scas
xlat
xor
cmpsb
mov
incl
mov
bound
and
sbb
cmp
inc
mov
ret
xchg
jg
adc
insb
dec
sti
mov
push
ljmp
sbb
fs
xor
mov
not
mov
cld
lods
add
mov
jp
in
mov
jg
outsl
lea
jmp
fldt
mov
pop
out
ss
imul
xor
repnz
xchg
das
jge
hlt
sub
push
adc
aas
into
add
xor
out
push
jge
lcall
jno
add
fiaddl
sbb
mov
in
scas
insl
into
jbe
fs
jbe
sbb
test
push
inc
loop
and
int
lods
push
sbb
clc
shl
cmp
fs
shr
imul
pop
cmc
adc
shlb
mov
enter
push
mov
loope
adc
fs
aam
dec
arpl
mov
mov
dec
sbb
jo
call
addl
dec
loop
push
test
add
sahf
dec
ret
mov
mov
sub
mov
push
sub
test
gs
stos
xor
rcr
pop
call
jne
fidivl
and
dec
mov
xchg
xor
ret
or
outsb
inc
pcmpgtd
or
jmp
mov
add
jge
movsb
mov
dec
jl
rcrl
dec
inc
sbb
or
pop
frstor
lcall
mov
xorb
xchg
mov
cmp
outsl
mov
pop
jecxz
mov
dec
test
cmpsb
scas
pop
pop
jno
sbb
mov
cmp
xor
nop
addl
sbb
xor
es
xor
fwait
test
xchg
loopne
int3
add
push
pushf
mov
or
pushf
push
push
mov
loopne
int3
mov
out
cmp
cmp
jne
or
jp
jne
dec
shl
repnz
test
xor
or
add
sti
stc
pushf
mov
jp
jecxz
push
mov
fwait
shl
jmp
shlb
push
xchg
and
pop
pop
xchg
pop
push
js
sub
and
sti
push
xchg
fiaddl
das
dec
adc
xor
sbb
and
dec
sarb
call
leave
hlt
cmp
xchg
neg
lahf
adc
jg
push
fldt
test
jae
and
mov
insl
ret
scas
imul
jae
imul
cmp
xchg
mov
jg
sbb
loop
int3
and
dec
xor
iret
rorb
fmul
scas
push
dec
push
mov
aas
lds
push
add
lock
imul
xchg
cmp
out
incb
mov
jns
jb
mov
cwtl
aas
fdivrl
dec
xor
inc
daa
ret
imul
jns
sub
clc
aam
pop
xchg
cli
sub
arpl
insb
clc
arpl
and
popa
loopne
sbbb
repz
xchg
mov
dec
sub
fcoms
and
push
aam
xlat
cltd
xor
xchg
push
sub
lcall
xor
loope
cltd
and
inc
push
pop
fadds
xchg
xor
bound
push
mov
lods
jb
nop
xchg
mov
cmp
dec
lret
inc
sbb
push
mov
xchg
pop
subl
es
push
pop
push
fildl
dec
sarb
push
cltd
xchg
push
add
mov
mov
push
dec
push
rclb
xor
jecxz
ds
scas
mov
fdivrs
and
lea
jns
xchg
js
adc
imul
sub
sti
mov
sbb
divb
adc
ret
cmc
jne
cld
or
add
out
mov
adcl
cmp
push
cmp
push
mov
pop
adc
sti
mov
adc
rcrb
stos
fwait
shll
or
add
sub
push
dec
jne
test
xchg
int3
mov
loopne
xor
jle
jnp
add
clc
push
and
call
mov
jmp
out
pop
fwait
out
inc
int
sub
decb
and
cltd
popf
cld
test
mov
cwtl
adc
mov
or
xor
inc
xor
data16
add
adcl
lret
notl
fmuls
movsl
mov
ret
mov
ret
notb
push
cli
out
adc
les
mov
inc
mov
cmp
sub
loope
pusha
das
stos
xlat
je
push
cmp
xchg
mov
jae
cmp
xor
lods
fisubs
pop
xchg
scas
fimull
ja
loope
or
daa
adc
jmp
xchg
out
mov
pop
repnz
ret
push
cmp
bound
dec
cmp
and
push
jb
mov
push
mov
and
inc
in
add
ror
pop
mov
ret
xorb
jne
xchg
mov
jo
cmpsb
inc
push
popf
scas
and
push
aas
and
bound
or
inc
test
mov
push
in
xor
cmp
push
jp
or
mov
add
lahf
push
ficoml
xor
call
andps
sti
jge
pop
pop
sbbl
dec
push
insl
jl
lods
push
cmp
ss
les
push
inc
add
aas
dec
or
adc
lcall
stc
andl
pop
push
lds
pop
jb
pop
and
and
in
adc
xchg
dec
cli
xor
mov
aaa
aam
dec
dec
outsl
ficompl
adc
push
sub
dec
stos
dec
incb
mov
fmull
push
mov
lret
addr16
shl
scas
call
pop
sub
push
or
adc
push
cld
pop
testl
mov
dec
xor
imul
push
pushf
inc
ficomps
push
setno
dec
aad
inc
loop
clc
test
popa
into
mov
sub
mov
sbb
sti
add
dec
stc
sbb
mov
sahf
imul
pusha
aaa
mov
test
aam
push
push
loop
jecxz
mov
dec
cmp
mov
add
and
fs
mov
pusha
mov
push
into
cmp
xor
leave
int3
imul
xchg
sbb
incb
jo
mov
inc
add
or
pop
push
pop
xchg
test
in
lret
sbb
inc
mov
xchg
in
imul
inc
mov
lret
dec
sub
insb
xchg
add
mov
outsl
sti
sbb
out
pusha
imul
mov
ljmp
pop
pop
or
sub
mov
adc
ds
int3
lods
shl
pop
int
and
cli
loope
mov
mov
insl
jns
fistps
jecxz
or
or
mov
sub
mov
out
adc
inc
pop
cmp
sbb
mov
jmp
in
subl
sub
mov
mov
or
rcrl
and
ret
add
lahf
fucomip
xchg
jbe
push
jnp
adc
push
xlat
mov
add
mov
jo
inc
fcomps
js
sub
push
movsl
loope
stc
icebp
adc
stos
pop
aaa
hlt
jnp
or
cli
cmp
mov
mov
mov
and
repnz
pop
mov
les
in
and
jmp
pop
dec
dec
mov
xor
repz
dec
push
je
push
xchg
push
inc
stos
xchg
sbb
mov
mov
arpl
stc
pop
cwtl
aas
inc
ficompl
or
push
gs
mov
out
repnz
inc
mov
inc
cwtl
jne
in
adc
sub
jne
adc
or
xchg
mov
and
into
mov
inc
pop
push
icebp
xlat
cmpsb
and
add
rcrl
imul
mov
stos
lcall
pop
sub
and
stos
fnsave
hlt
mov
js
xor
mov
je
addr16
pop
mov
hlt
mov
mov
add
imul
in
and
mov
rclb
jg
nop
fdivs
nop
adc
inc
movsl
test
pop
call
jecxz
jle
or
push
fcoml
sub
ret
or
mov
shl
loope
sbb
adc
scas
mov
fidivl
cmp
sub
negb
jns
jno
mov
sub
cld
mov
pusha
cmpb
xor
test
aaa
xor
inc
mov
pop
imulb
call
ffree
mov
rcrb
sarb
mov
xor
add
adc
cmc
hlt
pop
push
adc
sbb
xor
xchg
lods
xchg
pop
and
add
mov
cmp
cs
xor
or
test
cmp
mov
clc
nop
pop
movsb
pop
inc
mov
push
mov
insb
lret
les
mov
test
std
notb
lahf
loope
mov
add
jns
add
scas
cmpsl
and
js
add
cltd
sahf
add
pop
pushf
call
addl
fisubrs
insb
fs
xorl
outsl
xchg
sub
out
loopne
or
aaa
jle
lods
or
je
push
nop
adc
inc
mov
or
mov
fstpt
lret
sbb
sbb
jp
out
pop
or
fcmovne
mov
add
lahf
mov
adc
sub
mov
mov
push
test
test
jae
push
addb
xlat
or
cli
cmpsl
cmp
push
sahf
fisttps
mov
insb
out
jne
cmp
icebp
dec
cld
lret
mov
dec
adc
mov
and
mulb
hlt
mov
lods
aaa
inc
push
popf
push
iret
lahf
movsl
sbb
push
test
mov
xlat
sbb
pop
aaa
outsb
outsb
int3
cltd
in
and
lret
loop
cli
jg
push
xchg
or
pop
sbb
jnp
dec
pop
fcmovnbe
loopne
flds
sarb
jns
jb
jmp
insl
fisubrs
sub
movsb
test
jle
pop
lock
out
cmpsl
popf
fistl
xlat
aad
pop
pushf
cmc
popf
add
pop
pop
inc
adc
cld
or
lods
cmp
mov
dec
mov
jge
fs
out
fwait
mov
nop
pushf
out
sbb
aad
xor
in
mov
dec
cld
dec
xchg
push
adc
or
cmp
test
ficoms
cmp
jp
leave
xor
sbb
test
scas
add
jmp
divl
repz
sub
outsb
xor
sti
call
jne
adc
xchg
push
loop
pop
dec
mov
call
loop
add
and
mov
fdivp
jns
sbb
fwait
inc
std
in
iret
mov
add
fwait
in
fstl
in
mov
or
mov
push
adcb
jmp
xchg
xchg
fistl
mov
test
push
adc
pop
and
sahf
mov
sbb
add
cmpsb
ret
add
ret
in
test
mov
cli
mov
push
xlat
xchg
stos
mul
inc
push
popf
jl
lcall
mov
jl
lods
aaa
icebp
ds
push
icebp
lds
sbb
xchg
xchg
pop
test
xorl
std
scas
jns
movsl
sub
push
jno
xor
xchg
sub
cltd
mov
xor
insb
fisubl
push
fdivrs
popf
cmp
andl
cli
fmul
enter
sarb
stos
adc
ss
cmp
mov
fbld
es
frstor
cmc
repnz
inc
cmpsl
push
pop
out
xchg
jg
int3
ret
icebp
and
pop
mov
out
mov
movsl
ljmp
sahf
pop
mov
adc
sbb
xchg
sbb
or
jmp
push
subb
adcl
jnp
out
imul
lods
pop
cmpsb
jecxz
xor
lret
repz
mov
xchg
cmp
inc
cli
cmp
in
or
les
gs
mov
mov
ja
fcmovnb
stos
icebp
lock
popf
pop
adc
xchg
shr
bswap
daa
cli
sub
cmp
dec
inc
fcoml
lret
lea
and
xor
push
mov
sub
and
inc
test
pop
ds
stos
fnstsw
dec
mov
sbbl
or
pop
sti
test
stos
testb
push
mov
mov
popf
lock
test
test
aam
hlt
xchg
cmpb
fisttpll
push
es
mov
cmp
es
sbb
gs
mov
lea
leave
or
push
inc
adc
pop
daa
xchg
aas
out
adcb
mov
std
and
popa
jo
inc
iret
in
jo
dec
pop
lds
int3
sbb
mov
push
dec
mov
fstpt
aaa
jb
mov
mov
lret
xor
popf
dec
les
xor
push
lahf
inc
jg
dec
lea
popa
pop
mov
xchg
cmp
shlb
in
mov
lds
sarb
mov
xorl
fcmovbe
fwait
push
repz
mov
nop
cwtl
fcmovnbe
mov
jnp
mov
mov
inc
jg
and
repz
xchg
popf
adc
inc
inc
jecxz
sbb
jne
nop
xor
jno
bound
sbb
xor
push
push
sti
stos
or
cmp
inc
adcb
mov
fdivrp
out
pusha
cs
sahf
or
jl
fucomi
testb
cmp
dec
ja
cmp
push
xchg
pop
xor
lcall
dec
pop
jno
jle
andl
clc
pop
ror
insl
mov
or
imul
fs
jmp
pop
add
out
sbbb
and
sbb
xor
and
aas
dec
xchg
fcompl
inc
sahf
dec
cld
imul
push
or
add
pop
add
sub
dec
lahf
mov
jp
mov
pop
fiadds
pop
test
xchg
inc
xor
out
jl
mov
and
push
or
mov
adc
popl
scas
mov
xor
xchg
xchg
lock
cltd
or
xchg
xor
cmpsb
xchg
in
out
and
mov
push
scas
xor
lea
js
mov
lods
lret
xchg
movsl
jo
cmp
jae
cwtl
data16
cmp
pop
xor
mov
adc
push
mov
pop
out
xlat
das
xchg
xor
hlt
inc
cmp
sarl
lea
dec
rolb
loope
xchg
cwtl
in
mov
add
repz
and
sti
cltd
xchg
daa
aam
and
fmul
dec
stos
jno
push
addr16
mov
sub
cs
filds
cmp
adc
pop
push
push
mov
sub
mov
mov
pop
lret
xchg
mov
sbb
cwtl
mov
mov
int3
pop
mov
insl
mov
call
imul
pop
xchg
pop
mov
mov
outsb
cmp
loope
insb
outsl
out
dec
dec
jno
fidivrs
mov
jns
jmp
rclb
pop
xor
mov
mov
mov
icebp
daa
xor
pop
imul
inc
xchg
xchg
xchg
cmp
ret
rolb
mov
xchg
mov
das
push
mov
pop
mov
jne
out
add
gs
ret
push
and
add
addb
stc
in
test
xor
loop
repnz
jno
pop
hlt
mov
ret
lahf
ret
clc
adc
pop
inc
fidivl
cmp
sub
aam
push
arpl
jnp
in
loop
dec
gs
mov
fwait
sub
jae
sbb
jecxz
int
arpl
negb
iret
test
xor
xchg
push
adc
daa
bound
mov
or
mov
scas
mov
sbbb
push
ja
pushf
jns
or
shll
dec
lcall
shlb
dec
lcall
dec
orb
les
xchg
call
sbb
and
xchg
mov
ficomps
or
rorb
xchg
mov
push
pop
push
rorl
cmp
jae
add
mov
push
jnp
jb
dec
and
das
inc
leave
insl
pop
xor
gs
fs
call
js
repz
adc
imul
and
pop
mov
and
jnp,pn
ja
lret
test
mov
vandnps
xchg
inc
test
mov
pop
cwtl
adc
jle
std
clc
sbb
movsl
jle
push
lods
add
xchg
ja
jp
or
pop
mov
xchg
repnz
pop
and
pushf
cmc
push
ds
and
or
leave
cli
sub
fincstp
aam
in
add
add
push
and
ss
andb
out
fidivrs
sbbl
ret
xor
test
mov
loopne
adc
orl
xchg
cmp
fcomi
test
add
call
cld
mov
jo
add
fildll
loopne
mov
or
pusha
ja
shrl
add
xor
adc
fsubrs
iret
pusha
popa
sbb
xor
xor
xchg
mov
jp
mov
int
ficoms
jmp
jge
popfw
dec
adc
scas
arpl
sar
jle
push
fsubs
out
out
pop
cli
fisubrs
adc
inc
mov
jns
jmp
sub
add
mov
fidivl
mov
xor
call
pop
dec
sahf
mov
jmp
into
xchg
js
orb
sub
cld
clc
xor
fadds
xor
out
mov
mov
les
cmc
push
cmp
sub
mov
loope
mov
jle
std
arpl
leave
int
sub
cmp
out
fstpl
cmpsb
stos
and
cs
mov
bound
dec
enter
jne
ret
mov
imul
push
or
cmp
dec
xor
jge
icebp
int
add
jno
popa
mov
sub
push
add
inc
mov
cmp
pusha
xchg
es
rclb
adc
movsb
test
push
notb
inc
and
jle
sahf
lret
add
jne
mov
mov
adc
inc
mov
and
sbb
test
jo
ret
sub
xchg
ss
mov
jl
jns
cmpsb
jecxz
fistl
lods
sub
or
mov
adc
or
lods
push
adcb
mov
in
fcoml
sub
bound
popf
loopne
add
push
aaa
mov
stos
outsb
and
xchg
aas
mov
lods
in
mov
pop
pop
jmp
mov
lock
mov
std
jbe
outsb
fldl
rorl
and
mov
ss
pop
or
shlb
nop
in
inc
sbb
add
add
push
dec
nop
outsb
sub
int3
test
outsl
push
xor
arpl
std
in
test
mov
xchg
cmc
xor
mov
std
lret
outsb
push
add
mov
jae
ret
and
shrl
out
dec
push
test
adc
mov
jg
imul
lret
in
and
out
in
inc
movsb
xchg
pop
div
jo
jp
and
scas
aam
insl
call
imul
js
and
popf
xor
imul
push
push
mov
movsl
popf
sbb
mov
out
fwait
adc
add
cs
dec
in
aad
stc
pop
enter
xchg
xchg
enter
dec
and
cmp
sti
jge
push
sbb
push
mov
pop
xchg
loopne
incb
sub
je
mov
jne
lods
dec
mov
add
pmulhw
insl
jmp
xchg
pop
cmp
cld
mov
xor
into
das
in
xlat
inc
cmp
scas
pop
or
xchg
nop
rcll
or
and
jnp
dec
dec
dec
push
sub
stc
pop
sbb
imul
and
aas
incl
add
cmp
inc
scas
jno
es
xchg
imull
fwait
das
sbb
mov
repnz
cmp
stc
fisttpl
xchg
in
sbb
leave
lock
add
add
cmp
jmp
lahf
add
je
out
jle
inc
push
iret
ret
mov
movsb
cmp
mov
pop
jo
shrb
movsb
sub
loop
sahf
or
xorb
adc
mov
dec
lock
gs
and
mov
dec
fsubrs
add
cmpsl
in
xor
aaa
mov
push
out
jge
cmpsl
int3
xor
inc
arpl
pop
fwait
pusha
fmuls
aam
dec
inc
cmp
xor
in
and
lds
ds
fimull
aas
adc
or
xor
repz
jp
xor
mulb
xchg
xor
stos
add
aam
lock
jl
lods
adc
std
orb
mov
nop
nop
pop
sub
sub
lds
cmp
jno
daa
mov
aas
pop
mov
pop
movsb
sahf
scas
out
push
rcl
lods
mov
fwait
jbe
fisubl
shr
cltd
jnp
inc
mov
and
sub
fwait
sub
imul
or
shll
jl
mov
or
out
sti
popf
jo
imul
cmp
xchg
mov
adc
mov
add
jne
xchg
es
mov
cmp
and
mov
incb
outsl
imul
jbe
push
cwtl
sub
pop
xchg
cmc
outsb
dec
and
xchg
sbb
push
mov
loop
jnp
pushf
popf
arpl
push
pop
aam
fistl
inc
inc
push
xchg
push
push
xor
and
call
shl
test
fwait
cmp
mov
xchg
sahf
mov
stos
xchg
gs
add
pop
mov
push
fdivrl
fs
dec
cltd
adc
add
or
das
pop
repz
sub
jne
mov
ret
cwtl
mov
mov
cmp
test
imul
iret
movsb
mov
sbb
inc
clc
sub
int3
das
or
push
movsl
jb
mov
gs
lahf
cmpsl
jmp
push
jae
call
mov
and
xor
js
jp
adc
jmp
bound
pop
out
out
jo
cmc
cmp
xor
dec
int
jecxz
sub
sub
cwtl
mov
test
into
jmp
and
test
inc
idivb
movsl
pop
iret
or
movsl
inc
mov
inc
xor
jle
in
inc
xchg
lcall
insl
adc
mov
xchg
adc
outsl
cmp
in
je
lahf
ror
cwtl
aad
pop
leave
xor
mov
mov
out
jb
nop
js
out
repz
test
or
insl
or
inc
push
pop
jmp
or
sub
xchg
pop
imul
out
movsb
push
and
dec
das
aam
in
jno
rcr
sbb
push
dec
inc
mov
mov
inc
fdivrl
xor
test
push
xor
xchg
into
inc
in
xchg
das
pop
push
nop
lods
mov
aaa
pop
popf
loopne
js
mov
outsl
fists
cmpsb
sub
and
pop
xchg
mov
pop
xor
int3
cmp
sbb
jl
cmc
jmp
cmp
dec
push
in
int3
fsubr
mov
cmp
lds
sub
sbb
dec
into
cmpsb
jl
shl
xor
addr16
in
and
xchg
jle
and
dec
lret
cwtl
mov
das
push
lock
mov
pop
adc
and
loope
mov
shl
jne
dec
ss
pop
inc
jb
test
dec
jb
std
in
ljmp
movsb
adc
mov
mov
xchg
jp
popa
xor
and
jge
push
sub
call
ja
test
or
xchg
xchg
xchg
adc
insb
ret
in
cmpsl
test
scas
out
loope
mov
cmp
stos
add
jmp
adc
in
or
fisttpl
imull
jmp
mov
pop
xchg
cs
mov
movsl
out
mov
and
mov
sbb
js
adc
adc
adc
pop
test
mov
add
aaa
push
inc
push
pop
bnd
jmp
mov
xlat
ficoml
pushf
int
adc
imul
push
cmp
sysenter
pop
xchg
loopne
imul
lcall
push
int
xor
decb
mov
mov
fnstsw
inc
mov
ja
fistpl
out
and
imul
jns
jge
xchg
ret
mov
scas
repnz
jmp
mov
enter
cmpsl
fcoml
fisubl
jno
repz
enter
or
cmp
cmpl
pop
mov
lahf
pop
mov
xchg
push
xor
mov
cltd
andl
shll
cmc
xorl
xor
in
rcll
mov
fstl
pop
mov
push
out
inc
cmpl
inc
out
add
ljmp
arpl
push
sub
outsl
xor
test
jb
mov
cli
shr
ja
sbb
sbb
ret
rclb
scas
xchg
mov
adc
paddw
pop
add
jo
pop
and
pop
fisttps
les
dec
mov
add
movsb
fmuls
and
lods
shrb
in
scas
mov
or
pop
lock
test
push
sbb
sub
jae
test
jns
jmp
or
adc
out
aas
mov
dec
das
dec
push
scas
inc
outsl
aad
dec
rcrb
stos
mov
and
sub
daa
nop
cmp
sub
and
xlat
mov
je
dec
xchg
movsl
in
ffree
out
adc
add
xor
fistpl
xchg
add
scas
mov
pusha
jg
xor
sbb
in
inc
adc
sub
mov
jb
and
imul
sbb
jo
sbb
pop
add
sbb
add
lock
jne
idivl
xor
inc
negl
insl
jge
ror
mov
dec
push
cmc
into
rol
sbb
push
setae
daa
xchg
scas
inc
in
xchg
add
shll
sub
xchg
add
popf
sub
mov
add
jb
test
sub
mov
cmpsl
repnz
outsb
dec
cmp
jnp
repnz
mov
lock
xor
mov
cld
movsb
mov
pop
add
pop
in
jne
ds
sbb
jmp
bnd
xchg
jg
enter
and
xlat
adcb
mov
dec
ret
adc
xor
sub
or
pop
add
loope
xor
dec
push
sbb
pop
xorl
xorb
jp
popf
xor
inc
ret
aas
je
movsl
dec
inc
fmul
xor
rol
xchg
aam
lods
adc
inc
iret
shr
cmp
pop
jb
pop
inc
psubusb
js
lea
repz
movsl
dec
adcl
dec
in
mov
adc
loope
add
adc
fmuls
enter
xchg
and
sbb
pop
jmp
imul
jp
push
add
or
jbe
xor
lea
sarb
cmp
sahf
clc
cmp
adc
in
ret
add
and
cmpb
mov
dec
push
and
xor
push
sbb
call
pusha
push
cmp
popa
mov
push
adc
das
sub
insb
pushf
xchg
adc
adc
in
or
xor
pushf
cmp
cld
stc
sub
mov
iret
in
adc
std
les
jmp
pushf
es
push
xchg
lock
cld
rolb
lock
pop
xchg
push
push
sahf
adc
push
rep
cmp
mov
mov
std
ja
fucomi
sbb
int3
stos
pop
rorb
or
jge
mov
dec
ret
jo
jmp
imul
and
xor
movaps
andb
insb
into
daa
dec
in
push
sbb
bound
les
mov
sbb
sbb
adc
sub
jae
fstps
mov
ret
adc
push
aaa
daa
lahf
jle
push
fsubr
lods
cmp
leave
dec
sub
out
cmpb
repz
add
mov
or
xor
ljmp
popf
sbb
mov
or
test
aaa
pop
xor
mov
jnp
iret
adc
adc
dec
cmp
outsb
or
xchg
gs
push
xor
sub
aaa
mov
iret
popa
push
stos
stc
or
sbb
inc
lret
icebp
inc
lods
rorb
inc
aad
scas
ljmp
pop
sti
push
mov
add
lahf
call
mov
add
notb
sub
imul
enter
push
fnsave
pop
pop
dec
xor
repnz
jge
xor
adc
push
push
insb
iret
insl
add
xor
fcoml
int3
rcl
imul
push
pop
sbb
add
add
addr16
cs
sbb
aad
and
pusha
pop
dec
cmc
shl
addl
ficompl
xor
push
pop
lods
jp
test
mov
subl
xlat
cmc
stos
or
out
jbe
cmp
aaa
int
ds
daa
push
sub
sbb
nop
sbb
cmp
enter
inc
mov
jl
orl
das
fistpll
mov
shl
mov
in
jl
mov
daa
jnp
clc
add
push
rorb
jmp
inc
xor
out
fwait
cmp
adc
or
mov
xlat
movsb
sti
shrl
cmpsl
in
mov
movb
into
sub
pop
sti
pop
adc
dec
daa
ss
test
push
sbb
xchg
inc
outsb
xor
test
arpl
xchg
xchg
cwtl
lcall
frstor
sarb
into
inc
and
cmpsl
adc
scas
nop
ret
xchg
clc
and
fnsave
mov
adc
data16
mov
xchg
sub
pushf
fdivs
cmp
xor
aad
outsl
and
stos
daa
xchg
ret
mov
xchg
ds
js
push
test
sbb
push
and
push
aam
push
sbb
andl
inc
push
cmp
pop
cli
and
iret
mov
movsl
mov
add
into
add
sbb
int3
sub
repz
cmp
imul
imul
aaa
int
movsb
adc
fsts
sarb
jmp
xor
add
cltd
pop
dec
ret
jge
cmp
insl
stos
mov
cmp
cwtl
nop
or
pop
sub
pop
push
dec
jp
hlt
jmp
dec
cltd
aad
mov
sti
cs
jnp
cmpsl
clc
aaa
lahf
inc
add
out
fptan
cmp
mov
or
ret
cmpl
bound
rorl
ret
mov
mov
fstpl
out
xchg
xchg
xchg
xchg
movsl
push
pop
dec
adc
ljmp
rcll
adc
dec
dec
push
divl
push
xor
fmuls
out
jl
mov
ljmp
xchg
pop
push
sub
iret
popa
or
xor
inc
das
scas
mov
ret
or
push
sbb
mov
xchg
xor
std
add
in
and
mov
scas
sahf
jecxz
and
and
inc
sub
adc
mov
inc
jg
inc
rcr
push
sbb
mov
sahf
pop
les
cmp
int3
push
inc
test
fs
push
or
stos
fdivrs
ljmp
mov
cmpsb
ds
fisttpl
movsb
aad
inc
loope
dec
popf
cmp
scas
push
mov
jnp
push
xor
insb
sbb
xchg
pop
ret
lods
pop
jecxz
mov
cs
add
sub
mov
cmp
loop
jae
popa
jo
iret
cli
jg
pushf
dec
and
xor
aaa
adc
gs
mov
lret
inc
testl
cli
push
push
push
jg
mov
enter
mov
cmpsb
cmpsb
mov
xlat
pop
andb
and
cmp
aad
dec
shll
add
xchg
imul
add
rcrl
push
push
outsb
inc
inc
mov
out
fmulp
fiadds
cli
pop
sbb
lods
fidivs
cmp
inc
into
inc
cwtl
jecxz
or
sub
push
fildll
pop
imul
arpl
les
rorb
lds
sbb
adc
jecxz
cltd
dec
pop
inc
stc
pusha
pop
jb
les
xlat
shlb
repz
fsubrl
test
arpl
push
icebp
lahf
movsb
aas
pop
xchg
xor
inc
pop
mov
les
rcrl
imul
popf
push
inc
mov
jle
subl
cmp
mov
daa
cwtl
ret
cmc
inc
cmp
sahf
testb
or
mov
mov
xchg
sub
testl
daa
add
cmovns
rcrl
and
je
sub
lahf
aas
mov
add
popa
js
adc
loope
inc
add
pop
push
and
pop
scas
sahf
push
cs
cmp
divl
add
inc
push
ss
lahf
stos
lcall
mov
pop
ljmp
inc
das
je
push
pop
cmp
dec
mov
enter
pop
test
mov
mov
inc
and
mov
popf
push
in
out
cmp
repnz
cmp
add
xchg
stos
sub
mov
jae
lock
iret
jne
mov
push
mov
insb
xchg
sbb
ret
push
jno
mov
icebp
mov
jno
ret
lret
and
cmp
fcomip
pop
and
lods
mov
xchg
scas
ds
sub
sbb
dec
xchg
push
es
sub
orb
pop
clc
popa
icebp
daa
xor
fisubrl
jae
stos
jp
repz
mov
and
bound
pop
dec
cmp
hlt
daa
sbbb
xor
repz
hlt
fucom
repnz
jnp
xchg
out
adc
rcrw
mov
mov
mov
cmp
lret
push
icebp
movsb
jge
push
mov
mov
dec
mov
ss
lcall
scas
out
std
xchg
dec
call
popf
cs
aam
adc
ds
inc
inc
into
push
loope
push
and
mov
shll
adc
inc
adc
repnz
aaa
lods
xchg
arpl
cwtl
cltd
js
cli
fisttpl
cmp
iret
or
push
cmp
push
xchg
cmpl
and
insb
push
xchg
lahf
inc
cmp
push
pop
dec
rcr
into
cwtl
and
pop
rcrl
cmpsb
xchg
xor
jo
test
enter
dec
sarl
scas
popf
decl
ss
shll
xchg
xchg
out
mov
scas
adc
pop
stos
and
sub
pop
scas
popa
pop
mov
push
leave
scas
xor
in
insl
and
insb
lock
stos
sbb
xchg
iret
jcxz
jb
bound
jg
cmpsl
repz
popf
movsl
fst
mov
xor
imul
test
stc
cmp
mov
cmp
sbb
mov
sbb
mov
lods
fcmovnb
sub
jo
popf
inc
repz
mov
pop
xchg
sti
xchg
ret
js
in
idiv
lcall
or
push
rcll
xlat
outsl
leave
push
into
decb
das
popa
icebp
jp
mov
roll
pop
mov
std
mov
clc
add
cmc
xlat
outsl
in
fisttpl
stc
xchg
cmpsl
mov
scas
aam
cmpsl
and
testl
loopne
sub
push
gs
stos
cmpsb
pop
xchg
mov
pop
in
clc
xchg
int
mov
mov
idivb
shl
add
fnstsw
leave
xor
in
or
dec
xor
aaa
xchg
mov
sub
test
and
into
sbb
movzbl
subb
bound
testl
inc
ljmp
mov
pop
fs
sub
fs
push
dec
and
xchg
lea
nop
scas
inc
icebp
cmp
push
sbb
loop
add
mov
xchg
outsl
xor
lods
mov
fcmovu
fistl
inc
iret
add
push
icebp
ja
adc
inc
lret
cltd
xlat
dec
ss
pop
icebp
test
mov
rorb
mov
sub
cwtl
es
sbb
xchg
lcall
out
fistpl
mov
lret
dec
mov
jns
rcll
shl
test
jnp
popf
mov
test
sub
add
xor
jbe
repz
pop
and
arpl
xor
sub
cmp
int
sarb
cmp
xchg
cmpsb
inc
cmp
xchg
jae
dec
int3
icebp
lods
fadds
adc
jnp
int
inc
int
and
mov
add
or
rcrl
movsb
mov
movsb
outsl
xchg
lret
nop
fdivrl
arpl
pop
and
test
jmp
enter
lcall
inc
cli
mov
insl
sbbb
push
jae
loop
push
or
sti
sub
cmp
gs
test
sti
xchg
sti
inc
std
icebp
sbb
pop
mov
les
stc
mov
inc
jge
jle
jbe
shll
cli
xchg
stos
pop
push
or
adc
mov
push
jge
mov
push
inc
lahf
in
test
inc
dec
int
out
cli
or
stc
inc
pop
add
test
sbb
sar
sub
cmp
pop
pop
inc
mov
mov
outsl
xchg
outsl
mov
aas
mov
xchg
out
lret
imul
ljmp
push
jge
push
rcr
lods
mov
insb
mov
mov
add
mov
sbbl
insb
mov
in
cmp
lahf
push
popf
dec
or
jge
cmp
icebp
imul
imul
push
xchg
lods
fstpt
mov
cmp
scas
jg
scas
pop
cli
adc
lahf
xor
xchg
mov
pop
lcall
sub
mov
sahf
cmp
mov
xor
mov
call
xchg
out
mov
stc
enter
dec
addl
lods
jne
xchg
or
pusha
shl
insl
xor
adc
or
mov
adc
sbb
and
int
into
daa
das
sbb
ljmp
inc
add
inc
add
or
push
push
dec
xor
sahf
shl
ficoml
jmp
pushf
pop
push
or
mov
jle
out
cltd
and
outsl
ljmp
sbb
stc
in
cli
arpl
sbb
xchg
rcr
rorb
mov
mov
rol
mov
shr
addr16
jno
xchg
or
xchg
or
dec
pop
cs
roll
pop
int
jecxz
mov
fisubrl
or
inc
scas
cmc
pop
aas
cltd
push
shrl
inc
pushf
test
dec
sti
lods
inc
js
and
icebp
popf
push
nop
mov
dec
push
inc
mov
subl
push
ficoml
mov
lahf
cmpsl
xor
jg
mov
bound
test
push
out
cmp
ja
cmp
test
sub
push
or
sub
in
lahf
gs
inc
lea
push
out
popa
mov
adc
frstor
mov
xchg
mov
imul
pop
iret
push
or
fwait
mov
dec
in
aam
test
imul
fisttpll
data16
pop
out
xchg
adc
inc
cwtl
imul
mov
push
or
sbb
sbb
adc
insl
mov
bound
adc
push
xor
inc
sub
loope
mov
into
dec
sub
fsubs
in
jo
repz
dec
or
fists
pslld
pop
mov
push
je
out
jb
xchg
fisubl
dec
jmp
jmp
lods
je
sub
call
fisttpll
xchg
int3
mov
cmp
sbb
call
push
movsb
faddl
or
js
lret
pop
dec
xor
inc
aas
sbb
nop
fcoms
xchg
and
scas
stos
data16
and
aas
sbb
sbb
sbb
cs
or
jecxz
sbb
mov
cmpsl
jne
jmp
stos
lods
pop
mov
sbb
ja
inc
pop
ja
jno
mov
mov
mov
push
in
add
and
add
orl
aas
pop
mov
lcall
or
and
ss
adc
inc
shll
shrl
cld
loope
fwait
out
sbb
cld
pop
repz
mov
and
sahf
call
arpl
xchg
out
in
stc
imul
xor
cmp
mov
dec
mov
mov
leave
iret
mov
loopne
pusha
cmp
cld
cmp
fcmovb
lods
mov
mov
sbb
jmp
test
jg
jno
cmp
push
xor
rcrb
add
jge
adc
daa
xchg
js
push
cmp
test
rolb
dec
lods
xor
movsb
mov
xchg
jecxz
popf
es
jle
xor
aam
lea
mov
dec
outsl
aad
pop
cmpb
shll
andb
inc
fnstcw
jp
out
fwait
ret
lock
icebp
lcall
movsl
add
aas
push
mov
notl
fiaddl
xchg
add
rclb
clc
imul
mov
adc
xchg
xchg
insb
sub
rorb
dec
pop
loope
in
addb
jns
mov
dec
jp
fcmovnu
leave
adc
sbb
or
test
mov
mov
push
aad
or
jne
out
jp
cmp
js
add
or
int3
pop
jmp
mov
out
ret
mov
and
sub
fisubs
jge
cwtl
inc
lods
push
sbb
jae
or
jg
cwtl
les
and
xor
imul
and
xchg
sahf
imul
xorl
push
into
or
add
daa
shlb
xchg
imul
lret
into
pusha
fs
add
repnz
or
aaa
and
pop
adc
mov
mov
nop
push
jge
je
jns
xor
mov
and
and
fs
xor
sub
jl
lret
cltd
and
pop
lret
leave
add
push
pop
sbb
add
icebp
cmp
cmp
das
push
cld
xor
or
test
inc
pop
mov
jmp
dec
cmp
sub
leave
and
push
divb
test
add
cmpsl
fsubl
mov
ja
pop
lea
sbbb
pushf
push
insl
mov
insb
adc
sbb
insl
pushl
int
mul
popf
repz
sbb
jnp
sub
mov
mov
ds
sahf
jp
lock
xor
repnz
lods
adc
mov
adc
enter
ret
push
scas
inc
cld
dec
pop
or
adc
test
pop
syscall
aad
pop
add
xlat
and
xchg
mov
pop
ret
adc
push
pop
cmc
push
inc
xchg
mov
mov
movsl
mov
sbb
leave
xor
ret
cmp
xor
mov
inc
gs
mov
jns
cld
xor
mov
inc
or
jp
mov
jbe
jmp
test
pop
or
push
pop
cmp
dec
loopne
adc
adc
xor
cmp
xchg
aam
repz
lret
cwtl
inc
push
mov
sbb
mov
dec
data16
push
lock
xchg
xchg
ja
push
sbbb
pop
dec
mov
sarl
insl
xchg
cmc
and
xchg
xchg
bound
dec
sub
test
repz
js
or
pop
push
or
addr16
mov
es
xchg
dec
fadds
jne
jg
testl
daa
or
or
aad
movsl
adc
mov
push
pop
stc
jbe
lret
pop
jnp
sbb
outsl
or
arpl
rclb
mov
test
je
cltd
xor
sbb
out
xor
inc
jb
push
mov
cmp
in
jmp
divl
sti
stos
orb
inc
sarb
mov
insl
add
clc
dec
pusha
cs
test
mov
xchg
or
out
pop
leave
add
inc
jae
or
lcall
das
push
out
bound
adc
add
dec
daa
jmp
and
scas
mov
adc
nop
cmp
and
insl
dec
lcall
sub
jecxz
dec
lock
mov
push
or
mov
mov
push
pop
mov
mov
inc
inc
jg
and
mov
mov
sbb
push
fdiv
adc
or
mov
mov
and
push
push
mov
jl
cmp
call
jp
sti
add
in
sbb
xlat
sbb
popf
mov
and
lock
xorl
jle
jno
fdivrs
out
mov
and
push
cmpsl
mov
stos
imul
shlb
pop
mov
fsubrp
cs
ljmp
repnz
rorl
mov
loop
add
movb
pop
mov
jecxz,pn
and
repnz
mov
sub
or
leave
xchg
cwtl
testb
nop
cmp
cmp
xchg
cmp
add
out
sub
sbb
adc
and
mov
das
movsb
testb
shld
aas
in
arpl
jge
test
nop
dec
jl
mov
cmp
jle
or
push
lea
sarb
in
fisubl
loop
sbb
mov
cmp
test
cmp
cli
cmp
inc
dec
aam
lock
or
std
andl
mov
push
sub
jb
lea
mov
aam
push
rcrl
imul
sub
shlb
loope
and
and
pop
cld
fwait
pop
pushf
das
push
test
fcomip
pop
test
imul
in
clc
les
mov
mov
push
aam
inc
sbb
jecxz
in
and
test
loope
dec
xchg
xor
adc
sti
and
pop
xchg
push
dec
cmp
adc
jno
adc
push
ja
in
and
movsl
mov
dec
pop
pop
and
loopne
xor
aam
ret
and
sbbb
out
repnz
testl
and
imul
inc
xor
xor
pop
cmp
leave
lcall
enter
adc
sub
add
mov
pop
test
rcrl
jl
fwait
xor
xor
xor
divl
xor
jecxz
stc
out
sub
and
leave
lea
cltd
push
shll
lret
or
mov
add
call
ret
push
jno
push
mov
push
inc
movsl
adc
daa
into
jmp
std
pop
je
fwait
push
lret
popf
xchg
gs
lods
inc
iret
jmp
add
mov
and
aaa
sub
adc
pop
stos
push
stos
pop
pop
sar
addr16
cli
loopne
popa
out
mov
popa
pop
je
mov
mov
sbb
xlat
jge
add
jle
lret
movsb
outsb
leave
ljmp
mov
jecxz
ret
out
aam
scas
push
add
sub
nop
mov
jmp
out
jecxz
clc
les
pop
cmpsl
pop
out
jmp
aam
fs
das
mov
mov
xor
nop
ret
dec
addr16
adc
push
mov
mov
fsts
and
lods
loope
rclb
fistl
cwtl
xchg
xor
mov
fwait
mov
lods
push
push
loope
mov
fs
push
push
inc
popa
xor
jmp
subl
add
pop
inc
push
out
ljmp
sbb
or
push
jbe
ja
js
mov
outsb
pop
cmp
faddl
push
push
aas
je
bound
arpl
xor
sbb
mov
ss
push
inc
sbb
cmp
pop
sub
mov
outsl
cmp
xchg
mov
push
jle
adc
xor
int
hlt
fildl
push
sbbl
inc
sbbl
nop
movsl
xor
fisubl
gs
inc
mov
mov
or
fildll
mov
or
sub
xchg
jge
fdivs
faddl
in
int
mov
xor
shrl
mov
add
sub
push
add
cmc
jl
fwait
add
loopne
aas
pop
mov
mov
repz
mov
cmp
ret
xchg
jle
mov
jecxz
jle
aas
gs
cmp
movsl
testb
and
loop
cmp
loopne
adc
add
pushf
movsb
cmpsl
cwtl
aam
inc
or
dec
data16
out
xor
adcl
andb
stos
cmp
xor
popa
mov
lret
jp,pn
insl
sbb
pop
sbb
mov
add
lahf
cmp
push
out
or
jge
inc
popf
pop
cltd
pop
dec
adc
and
mov
outsl
rcrl
ret
in
sub
addl
test
dec
push
xor
int
in
push
cmpsl
stos
ret
imulb
movsb
lea
mov
imul
mov
rorl
dec
jno
int3
in
jg
inc
mov
fisubs
dec
fsubs
fs
lret
xor
out
add
std
aam
lret
insb
call
sub
or
fs
sbb
ds
sub
push
adc
push
mov
loop
mov
aam
mov
arpl
xchg
lahf
xchg
or
stc
mov
loop
push
int3
outsb
add
loopne
mov
adc
jmp
leave
outsl
or
push
inc
je
xchg
pop
mov
mov
or
xchg
jp
outsb
jne
ja
and
cmp
jl
pop
adc
movsb
pop
iret
incb
test
adc
push
mov
inc
add
repz
pop
jecxz
cmp
testl
rolb
mov
in
outsb
inc
push
pop
cli
js
fmulp
jle
adc
test
mov
push
or
lret
pop
lcall
mov
sub
mov
enter
lds
push
bound
adc
lds
and
outsb
pop
adc
sub
repnz
je
fsubs
or
xor
push
mov
scas
inc
in
les
decb
sub
enter
arpl
inc
enter
nop
call
cmp
jne
inc
push
cmc
popa
out
dec
das
or
mov
cltd
and
sarl
iret
roll
scas
mov
les
cmp
push
cmp
outsb
inc
push
xor
and
mov
mov
xchg
mov
xchg
mov
pop
in
inc
leave
out
xchg
fs
cli
push
mov
cltd
xchg
add
xor
mov
adc
xor
aaa
cmp
lret
push
pushf
jmp
jg
mov
mov
mov
mov
push
push
adc
push
xchg
mov
inc
and
in
pusha
repnz
mov
in
dec
imul
mov
dec
fwait
push
cmc
push
stos
or
out
xchg
popf
fidivs
and
sbb
int3
push
pop
push
popf
aas
inc
js
xor
hlt
adc
sahf
shrl
or
and
mov
out
rcrb
mov
add
sarb
pop
sti
xchg
pop
std
jg
mov
stos
lea
mov
xrelease
cmp
jb
enter
lcall
jnp
mov
xor
addb
sub
push
cmp
popa
jecxz
and
sahf
xchg
andl
jae
and
push
inc
repnz
push
add
adc
push
push
imul
mov
jecxz
push
in
or
pop
mov
sti
pop
aad
inc
fsubs
mov
out
jnp
outsb
outsb
or
jnp
adc
and
lods
inc
bound
pop
das
fistpll
dec
mov
shl
add
orl
jo
add
push
jbe
insl
popf
fwait
sbb
pop
leave
outsl
mov
adcb
sbb
dec
cld
rorl
lcall
or
dec
inc
dec
sbb
or
and
and
lods
imul
rclb
insl
dec
faddl
sub
in
sbbl
and
adcb
adc
inc
notl
fstl
xchg
pushf
adc
dec
xor
pop
mov
imul
jmp
dec
popf
shlb
jl
jge
xchg
cmp
repz
fsubs
jmp
adc
ljmp
or
add
xchg
dec
mov
mov
push
xor
je
cmp
sub
push
cmc
adc
pop
fistps
loopne
pushf
into
add
int3
push
pop
mov
mov
outsb
je
adc
fiadds
stc
and
ret
out
cmp
fistl
mov
pushf
add
mov
cmp
out
sub
mov
js
pop
xchg
push
decl
xchg
lret
mull
cmp
andl
outsl
fcompl
pop
xchg
roll
adc
mov
mov
mov
jo
jo
inc
jne
xchg
ds
pop
out
or
stos
neg
enter
xor
imul
mov
jle
movsb
or
jle
ja
mov
in
pop
aas
test
andl
cmpsl
ret
jge
repnz
mov
iret
pop
repnz
xchg
mov
sbb
rcr
stos
dec
dec
lahf
sbb
fsubrs
adc
add
lcall
xor
test
add
mov
mov
pushf
ljmp
push
push
ss
jmp
xor
sub
xor
jno
push
insb
push
pop
xor
lds
orl
int3
cltd
std
mov
pop
sub
ss
dec
mov
pop
or
imull
push
insl
pop
test
enter
arpl
mov
inc
pop
lcall
mov
leave
js
inc
sbb
jge
outsl
push
dec
lret
sbb
dec
jne
xor
cmp
jl
mov
lahf
xchg
test
aad
popl
testb
xor
fistpll
in
adc
ret
stos
sti
pop
adc
int
jo
aas
or
cmp
xor
xchg
push
movsl
jne
test
xlat
dec
aaa
lret
in
xchg
call
dec
dec
add
jbe
and
cmpsl
movsl
nop
fsubs
adc
daa
imul
shrb
daa
js
mov
or
and
mov
scas
xor
sub
jae
lret
cmp
or
sub
add
js
jb
xor
lods
shl
loope
call
sti
sbb
call
mov
adc
push
jbe
mov
xchg
mov
push
xchg
push
lds
and
add
pop
repz
mov
or
mov
sub
mov
test
pop
xchg
fisubl
mov
sub
push
imul
lods
insl
clc
or
sub
pop
and
adc
ja
dec
sbb
sub
mov
xchg
stos
and
mov
xchg
pop
adc
pop
push
adc
pusha
daa
push
pop
pop
daa
inc
fs
pop
jae
add
mov
mov
jb
push
stos
dec
add
pusha
pop
or
or
cmpsl
jne
clc
push
scas
and
push
cmp
mov
dec
das
mov
hlt
sbb
and
sbb
add
js
daa
inc
lret
gs
mov
aas
mov
push
addb
push
inc
xchg
je
sti
incl
ficoms
mov
out
movsb
lcall
adc
cmp
fsubrl
daa
scas
fimuls
test
dec
mov
jo
inc
cmp
test
xor
mov
jecxz
push
movsb
push
aam
aaa
cmpsb
adcb
add
aas
push
out
test
stos
add
out
adc
jbe
rclb
test
fimull
adc
ds
aad
xor
mov
mov
outsl
inc
shll
mov
shrb
jns
orl
lea
mov
xor
cmp
push
sub
fldt
out
cli
insl
inc
fxch
bound
sbb
lret
in
xor
lods
mov
data16
push
dec
inc
shufps
mov
das
pushf
fdivrs
mov
mov
sub
push
pop
and
cmp
movsl
lcall
sbb
push
dec
shlb
inc
dec
xchg
ja
leave
dec
mov
cmp
add
sahf
fadds
test
and
add
int3
clc
fs
sub
ljmp
jne
push
jmp
jbe
mov
sbb
cmp
pop
jp
test
sbb
xor
and
xor
pop
adcl
shll
or
vmwrite
adc
scas
popa
rol
jp
sti
cltd
or
mov
and
xor
pop
rcl
dec
adc
lods
mov
dec
sub
pushf
cmp
scas
cmp
ds
pop
fsubs
das
mov
pop
xchg
int
mov
jne
cmp
mov
mov
shrl
insb
ja
gs
cmp
dec
xchg
dec
inc
pop
inc
dec
hlt
pop
mov
mov
push
int
rcll
jnp
das
push
mov
cmpsw
testb
dec
jne
fldcw
jge
scas
lods
push
inc
mov
imul
hlt
xor
pop
out
push
insb
xchg
mov
pop
out
dec
push
mov
insb
outsb
int3
adc
jb
pop
adc
mov
mulb
leave
or
sbb
adc
push
rcll
sub
arpl
ds
and
pop
and
cvtdq2ps
out
xchg
fmuls
orl
sbb
add
mov
mov
sbb
mov
out
push
lea
insb
bound
pop
lds
push
add
mov
push
pop
and
movsb
xchg
mov
jecxz
stos
rcl
sbb
addr16
or
testl
pop
adc
imul
inc
push
mov
test
pop
shll
or
sbb
jp
fmull
orb
add
and
arpl
push
xchg
fsubr
pushf
sbb
sub
jno
add
cld
lea
js
fwait
sbb
lret
ds
sub
in
enter
mov
rcrl
loop
mov
cmc
scas
add
jg
int3
ss
fidivl
imul
jge
mov
jae
dec
cmp
ret
mov
lret
lods
xchg
and
idivl
pop
bound
xor
jno
jb
cwtl
mov
mov
stc
shrb
aaa
pop
sbb
ffreep
fdivr
cmp
out
cmp
stos
mov
mov
rcr
out
pop
not
jmp
leave
in
faddl
aas
pop
repz
push
adc
leave
sbb
add
pop
arpl
push
shll
xchg
ja
repnz
cmp
push
fwait
adc
adc
das
ret
test
dec
cmp
xchg
pop
movsl
repnz
scas
mov
stos
popa
mov
jle
adc
mov
cmp
in
push
les
cltd
mov
jle
and
cmp
mul
repnz
dec
pop
xchg
jbe
mov
iret
add
in
xchg
scas
lret
dec
pushf
insl
shlb
xlat
xchg
jge
sahf
pop
lahf
xlat
dec
push
xor
out
outsl
pop
scas
inc
lea
cli
ret
inc
icebp
scas
mov
in
pop
ds
fs
clc
lret
rcrb
fcmovb
in
xchg
lods
sub
pop
popa
sub
cltd
bound
aad
push
pop
les
fstl
inc
fwait
push
add
sti
sbb
outsl
mov
lock
sbb
repnz
fwait
popf
push
pop
loop
pop
mov
mov
sub
lret
jge
sub
add
clc
test
xor
jle
sahf
mov
dec
test
movsl
mov
insl
or
cmp
adc
jle
pop
push
sbb
lods
cmp
out
inc
lea
xor
xchg
subl
sbb
ret
testb
add
inc
xor
add
fdivrl
xchg
or
mov
sbb
xchg
pushf
insl
or
fwait
cmp
or
jge
xor
stos
popa
and
push
xchg
sahf
sbb
sbb
repnz
subl
xchg
jl
sti
mov
daa
or
insb
cmpsb
mov
sbb
cltd
sub
fistl
repz
sub
insb
bound
inc
in
clc
ljmp
es
es
arpl
inc
push
out
int3
dec
aas
xor
shlb
inc
cmpl
pusha
mov
popf
in
and
sub
cmpsl
cmp
push
cmp
inc
adc
pop
jle
mov
or
mov
mov
aaa
test
sbb
fistps
and
jmp
mov
or
dec
popa
nop
push
pop
cmp
dec
jns
pusha
sti
enter
add
js
pop
mov
or
dec
pop
cmpsb
movsb
push
inc
lock
xchg
imul
pop
adc
dec
mov
adc
or
or
xchg
pop
insl
xchg
push
in
pop
mov
or
cmp
dec
ret
push
in
out
cmpsb
push
sbb
out
push
jp
out
shll
clc
das
and
adcl
andb
loopne
fldl2t
shl
inc
sbb
clc
mov
movlps
jmp
aas
cli
mov
ret
jnp
sub
mov
int
data16
mov
fidivs
add
sub
mov
sub
rcl
paddw
jle
xchg
das
mov
mov
pop
cmp
or
mov
cmc
outsl
push
mov
das
add
js
mov
inc
out
lods
ljmp
pop
je
test
rcrb
push
in
adc
cmp
xchg
adc
inc
add
movsb
repnz
mov
nop
mov
ljmp
adc
sbb
mov
sahf
cmpsl
jno
push
mov
testl
loop
rorl
pop
sbb
push
rorb
mov
pop
in
or
in
dec
into
and
lret
lret
scas
lcall
push
int
jno
pusha
mov
cmc
cmp
or
movsb
xor
xchg
adc
test
jp
aam
iret
mov
fs
lock
push
mov
pushf
out
push
shlb
push
or
jns
add
repnz
jo
push
loope
rorl
xchg
mov
adc
lock
or
outsl
repnz
repnz
mov
cmp
aas
ljmp
stc
xchg
dec
sbb
cmpl
mov
loop
xor
inc
in
in
lret
outsb
dec
pusha
in
inc
and
fmuls
or
jl
pop
or
or
pop
cld
dec
xchg
cmc
stos
lock
push
add
xchg
pop
stos
jmp
dec
pop
inc
mov
nop
ss
pushf
dec
and
and
sbb
pop
mov
loop
mov
adc
jae
cmp
scas
sbb
aas
or
leave
int3
jecxz
or
pop
enter
push
ljmp
add
push
call
movsb
sbb
inc
jmp
je
call
pop
xor
outsl
out
xor
or
movsb
fwait
xor
or
push
mov
xor
stos
lret
dec
ss
jle
stos
fisubs
adc
inc
rcrb
push
cltd
rolb
test
push
sahf
xor
out
ffreep
adc
stos
test
jge
inc
test
cmc
das
jle
and
insb
mov
arpl
cs
or
stos
stos
test
or
sub
arpl
or
insl
ficomps
addr16
outsb
jmp
cmp
fs
fs
xor
and
dec
rclb
test
imul
pop
testl
repnz
cmp
mov
js
aaa
icebp
adc
add
call
fistps
popf
mov
iret
cld
xchg
cmc
push
shrl
adc
daa
jge
mov
and
aad
xor
stos
pop
xchg
push
or
push
adc
sub
addr16
sub
ret
cltd
push
mov
stos
mov
adc
clc
xchg
in
dec
fcmovbe
xor
jne
ja
push
sar
in
sbb
xlat
fdivl
lret
rclb
sub
add
or
or
inc
adc
inc
jae
in
into
insb
out
stos
xor
shr
cmpsb
ss
or
fs
cmc
inc
add
mov
daa
daa
es
or
sbb
xchg
and
dec
stos
loop
inc
xchg
in
lret
jae
pop
or
and
in
push
mov
adc
sbb
in
mov
cmp
sub
mov
orl
das
enter
lods
pop
jo
notb
mov
lea
xchg
stc
aad
add
pop
scas
rorl
mov
add
repz
sub
test
inc
les
mov
jnp
jl
shrl
ss
add
enter
push
sahf
in
lcall
lds
int
push
jo
imul
pop
repnz
idivl
push
xor
in
test
scas
cmp
jp
lret
fucomp
xchg
inc
outsl
mov
or
add
cmpl
push
mov
sbb
pop
xchg
gs
shr
hlt
push
sub
mov
call
lret
cmc
dec
enter
push
xchg
jecxz
inc
pushf
pop
imull
daa
mov
xor
adc
js
aaa
in
dec
mov
ss
insl
insb
or
xor
mov
aas
decb
mov
push
jo
addr16
insb
pop
jbe
and
out
es
and
pop
jne
inc
xchg
jmp
das
pop
testl
push
cs
not
adc
ds
jno
pop
or
cmc
std
cli
and
aad
xchg
cmp
xchg
push
fildll
movsl
mov
dec
push
xchg
and
aad
les
and
popf
lea
int
bound
xchg
fcompp
add
js
rorb
fwait
jnp
insl
pop
addr16
adc
inc
repz
mov
es
sbb
lds
adc
lds
adc
dec
decl
jp
adc
pop
test
rcl
sub
jbe
aad
adc
jmp
neg
jne
outsb
test
dec
sub
mov
pop
cmpsl
mov
jg,pt
aas
test
pop
inc
xchg
dec
ljmp
adc
add
repz
rcr
dec
mov
std
out
push
push
imul
push
outsb
mov
aas
pop
sub
les
mov
or
cmp
roll
in
jns
push
dec
add
jp
test
jl
clc
clc
leave
test
std
movsl
pop
repnz
fldcw
push
jl
pusha
mov
jg
sti
pushl
add
jecxz
inc
mov
jge
mov
mov
dec
cmc
js
pushf
adc
adc
in
adc
cmp
mov
cld
xlat
push
adcb
pop
jbe
dec
jbe
adc
in
jne
imul
cmp
stos
xchg
das
push
inc
popa
lea
fcmovnbe
test
push
or
shr
sbb
and
test
mov
or
dec
adc
mov
dec
adc
out
sub
stc
js
cmp
cli
adc
fwait
mov
bound
pusha
inc
ret
sub
inc
scas
cmp
notl
push
adc
push
fistpll
aam
push
push
and
mov
pop
lcall
fsubs
adc
inc
sbb
dec
addr16
dec
jp
adc
jb
repnz
imul
out
aas
ret
push
push
push
clc
mov
or
adc
mul
mov
cmpsb
inc
xor
shll
cmp
test
push
aas
int
stc
mov
addr16
and
ss
mov
clc
mov
dec
aam
pop
sub
cmp
push
leave
les
pushf
dec
repnz
cmc
push
hlt
jb
testl
xor
imul
and
arpl
and
stc
je
fsubl
jl
imul
adc
cmovge
push
repnz
mov
inc
fildll
cmp
or
or
sub
or
popf
mov
lahf
bound
inc
push
or
movsb
aas
cwtl
jecxz
cvtpi2ps
hlt
into
dec
cltd
out
xchg
pop
cmp
mov
xchg
test
arpl
add
xlat
rol
lods
stos
popf
scas
loopne
das
jno
fimull
xor
xchg
mov
fbld
add
sbb
mov
xor
xchg
les
mov
bnd
and
and
in
ficoml
jno
xchg
sub
into
gs
shll
ss
fadd
fs
pop
sub
sub
inc
mov
push
sbb
push
jb
mov
je
les
push
jle
in
pushf
insb
xor
negl
test
pop
dec
dec
mov
fcomps
mov
cmpsl
jp
outsb
push
sbb
xor
int3
cmc
aaa
or
jg
sahf
push
std
fidivrs
mov
mov
sub
xchg
cmp
test
out
callw
sub
ja
sbb
push
testl
mov
scas
in
pop
divb
pop
sbb
lock
push
cmp
inc
inc
jae
sti
push
push
and
pop
out
jae
cmp
sbb
mov
sbb
test
popf
mov
adc
out
push
cmp
mov
fdiv
jmp
xor
or
or
fildll
cmpsl
add
push
jns
and
inc
fstps
jle
sub
loopne
mov
repnz
pop
sarl
mov
add
xchg
movsl
jl
jmp
pop
hlt
inc
add
rcl
mov
add
inc
fmuls
popf
mov
push
adc
outsl
or
jg
scas
pushl
fcmovu
sbb
lods
mov
sbb
mull
pop
xchg
aam
sub
jns
jb
xchg
mov
inc
rolb
pop
adc
mov
stos
js
inc
das
les
sbb
adc
pop
hlt
jno
pop
lea
out
mov
jp
lock
out
int3
mov
mov
add
adc
inc
mov
and
fnstsw
and
in
sbb
mov
jo
cld
dec
loopne
mov
fistl
xor
dec
pop
scas
adc
sbb
aam
xchg
ds
mov
pushf
rorb
mov
push
pop
ljmp
xchg
aam
lock
inc
or
jae
sub
xchg
arpl
movsb
mov
push
adc
das
mov
mov
ljmp
cmc
popa
pusha
movsb
sti
jno
fwait
sbb
cmp
sub
mov
dec
mov
xchg
into
sbb
jno
xchg
pop
push
adc
sbb
dec
cmc
test
mov
jmp
mov
inc
push
adc
call
hlt
inc
test
inc
cltd
or
jle
lahf
sbb
das
mov
rcll
cmpsl
sbbl
int3
dec
and
cmp
test
mov
movsb
leave
cmp
mov
imul
iret
dec
xchg
adcb
inc
fcompl
sbb
xor
out
outsl
mov
or
shl
mov
add
sub
adc
sub
mov
lods
sarl
cld
pop
jns
cmp
dec
sub
xor
es
stc
mov
out
mov
loopew
sbb
and
aaa
cmpb
mov
movsl
jp
push
pop
and
xchg
mov
lock
rorl
testl
xchg
les
add
arpl
sti
ds
cld
xchg
dec
jge
lret
cltd
pop
ljmp
and
jg
loopne
and
sahf
add
push
jae
cli
rcl
dec
aaa
adc
out
movsl
jno
pop
mov
adc
or
shlb
stos
mov
mov
das
popa
adc
int
sbb
mov
push
push
test
dec
jb
pop
int
xor
jo
out
xchg
or
mov
cmp
aad
bound
inc
neg
xchg
dec
cmpsl
jp
mov
push
jp
push
mov
push
jns
mov
xlat
scas
popf
loope
adc
sar
and
test
add
jnp
adc
aaa
inc
push
jp
jo
xor
push
insb
jecxz
xchg
push
adc
mov
gs
push
ljmp
xor
int3
out
mov
dec
in
enter
jl
and
lahf
int3
jl
add
jp
sbb
sub
cmp
and
lds
dec
xchg
add
lcall
mov
mov
call
mov
sbb
jns
mov
jle
mov
mov
pusha
push
es
out
pop
inc
pop
xor
push
pop
xor
insl
and
cmp
and
fstp
xor
pop
push
add
out
jmp
jae
adc
test
test
pop
push
push
mov
mov
xor
jb
stc
outsl
cltd
mov
xchg
pop
cmp
lds
mov
repnz
mov
cwtl
popf
push
push
enter
stos
dec
adc
cmovge
loopne
insb
aad
mov
sbb
mov
push
inc
imulb
sbb
sub
enter
adc
inc
mov
fwait
xchg
pop
testb
in
xor
test
nop
test
sbb
in
insl
or
pop
sbb
daa
inc
fisubrl
popa
push
mov
mov
add
scas
and
test
scas
dec
pushf
dec
adc
jg
out
imul
ret
or
xor
sti
fimull
bound
xchg
xor
dec
nop
dec
pop
xor
mov
dec
adc
ss
dec
jp
scas
xor
sub
push
add
mov
adc
jnp
cmpl
out
xchg
xchg
popf
add
mov
int3
and
clc
fs
lds
add
repz
lock
mov
mov
cmpsb
shll
shufps
leave
inc
jns
sarb
popf
iret
xor
movsb
lret
xchg
mov
popa
push
and
outsb
xor
sub
add
ret
test
fwait
stos
call
cmp
lock
jmp
in
lret
adc
adc
mov
jle
mov
push
cwtl
sbb
sbb
nop
dec
repnz
nop
cmp
pop
ds
loopne
ret
int3
leave
jne
repnz
popa
pop
and
fimuls
or
insb
dec
jge
fpatan
lea
call
out
push
in
jne
clc
jbe
sbb
xor
cwtl
mov
ret
and
mov
xor
fldenv
mov
xorl
mov
cwtl
stc
mov
movsb
adc
popa
add
int
cmc
orl
imul
jp
cmp
mov
loope
xchg
adcl
jbe
mov
test
mov
jl
int3
push
or
push
xlat
pushf
insl
cwtl
lret
inc
arpl
fistpl
stc
mov
cmp
mov
xor
pop
xchg
int
out
cli
out
loopne
mov
jb
jnp
mov
int3
add
mov
fidivs
cwtl
fidivrl
xlat
daa
inc
or
icebp
cmp
aad
jecxz
mov
pop
and
decb
sub
ja
mov
loop
ret
test
inc
mov
jg
aad
leave
dec
xchg
stc
mov
cli
ja
fmull
xor
sub
mov
lcall
xor
mov
shlb
pop
in
cmpsl
dec
mov
dec
cmp
dec
test
mov
xchg
outsb
mov
sub
enter
mov
scas
cld
rorl
out
fwait
dec
dec
mov
mov
cli
rol
cmp
inc
test
jge
jecxz
cwtl
jmp
test
dec
int3
mov
mov
mov
push
fldt
jle
mov
aaa
push
xor
cmp
fidivrs
mov
lock
inc
into
stc
cmp
data16
loopne
std
cmp
mov
loopne
mov
iret
outsl
dec
call
cmp
mov
lods
or
pop
pop
push
sub
out
repz
mov
inc
cmp
xchg
out
ret
jecxz
sahf
inc
sbb
insl
mov
in
or
xor
add
out
add
sub
push
lcall
repz
mov
lock
mov
lgs
or
sbb
pop
or
pop
push
push
inc
jnp
js
cs
movsb
fmulp
out
push
lds
dec
scas
or
mov
xor
jp
pop
xor
inc
jp
and
lds
mov
cmp
lods
movb
sbb
gs
out
xor
repz
loopne
rolb
out
stos
push
out
scas
fidivl
in
nop
xchg
outsl
and
mov
jg
stos
xor
or
jg
add
ljmp
enter
fsts
jae
ja
or
jle
pop
add
int3
bound
xchg
jge
and
adc
xlat
les
rclb
outsb
icebp
mov
xchg
hlt
xlat
cltd
dec
lea
movsl
pop
sbb
jne,pn
stos
inc
xor
push
insl
push
or
adc
inc
je
mov
mov
into
insl
inc
mov
sbb
cmp
push
xor
add
add
mov
stc
jge
aas
int3
xchg
loopne
and
push
pop
lret
mov
cmp
fcoms
aas
pushf
test
sub
int
cmp
leave
sbb
inc
in
push
bound
std
jge
and
movntq
out
xchg
mov
sub
push
jecxz
xchg
push
inc
ret
pop
xchg
xor
and
outsl
dec
lahf
or
inc
adc
and
jb
push
push
movsl
ljmp
lock
arpl
xchg
dec
xor
lea
pushf
lret
pop
movsb
cmp
lods
push
pop
mov
insb
pop
pop
sbb
adc
mov
inc
cmp
sub
adc
adc
imul
lahf
stos
cmp
push
fisttps
rcrl
xchg
nop
in
dec
stos
push
aaa
and
adc
pop
cmc
and
arpl
push
aaa
jbe
and
inc
and
cmp
push
dec
cwtl
lds
repnz
nop
mov
dec
cmp
insb
sub
jb
xchg
cld
jno
sti
jecxz,pt
cmp
popf
test
sbb
push
jnp
js
lds
add
cwtl
mov
jae
out
xor
xlat
push
pusha
in
lods
inc
daa
pusha
xor
std
dec
adc
add
loopne
mov
inc
mov
inc
sbb
cmp
mov
sahf
idiv
adc
iret
pop
es
pop
outsl
hlt
adc
loop
or
jb
inc
push
or
sbbl
xchg
mov
jmp
or
push
mov
inc
stos
ds
pushf
imul
push
mov
dec
loopne
xchg
cmp
add
mov
popf
push
sbb
cmp
fiadds
cltd
fdivrs
loope
das
stc
test
cmp
mov
push
and
push
andb
adc
jnp
in
cmp
mov
aaa
lar
push
das
mov
pop
cmp
xor
sbb
stos
fiadds
add
or
xor
lahf
das
add
leave
jnp
fwait
call
jecxz
adc
mov
dec
shrl
lock
jmp
scas
stc
ja
jne
out
mov
ficoml
dec
ss
dec
sub
out
push
adc
mov
mov
jb
jle
pop
mov
ret
xchg
lcall
scas
inc
sbb
xchg
pop
xchg
sti
push
sub
jno
aas
dec
arpl
push
pop
int3
push
cltd
test
aam
xorb
das
shr
fists
ficoms
mov
in
lret
jg
push
leave
pop
loopne
push
jno
mov
fwait
sub
or
les
cmp
push
mov
pop
pop
mov
test
cmp
xchg
loopne
or
add
lods
insl
frstor
cli
ds
adc
in
jnp,pt
outsl
add
movsl
ljmp
cli
jne
add
xchg
mov
out
psubusw
loopne
out
aam
scas
sub
arpl
idivl
ds
fwait
inc
pop
adc
mov
out
cmp
roll
mov
ret
jp
inc
data16
cmp
xchg
rcl
out
ret
nop
push
push
test
ss
nop
inc
out
ret
dec
mov
inc
scas
xlat
xchg
xor
sub
xor
pop
rep
out
cs
out
dec
leave
sub
sbb
dec
xchg
mov
xchg
ja
mov
fldt
cmp
int
pop
xchg
stos
add
popf
xchg
xor
aad
or
repnz
mov
jge
pop
cmp
clc
mov
dec
shll
add
divl
jne
movsl
sbb
add
lcall
adc
adcl
jmp
push
cwtl
mov
dec
lods
fcomi
int3
add
pop
test
and
orb
xor
inc
inc
shlb
push
scas
mov
shl
mov
pop
xchg
lahf
cmp
fbstp
mov
add
mov
dec
mov
xor
cmp
nop
arpl
xlat
hlt
and
rorb
ret
stc
push
pop
loop
dec
loopne
inc
push
cmp
leave
pushf
cmpsl
push
gs
push
roll
mov
and
cli
lods
fs
sbb
dec
pop
lret
out
push
adc
clc
out
mov
insb
adcb
push
mov
dec
mov
lods
cmp
add
sarb
push
sbb
test
push
mov
ret
std
repz
sbbb
xchg
pop
push
push
jmp
xchg
jno
sbb
push
cmpsl
mov
mov
or
addb
or
mov
cld
in
dec
cwtl
cs
mov
sbb
into
jns
rolb
sbb
xchg
clc
imul
sbb
xlat
jne
push
dec
pusha
push
jb
pop
mov
and
sbb
outsl
sti
fisubrs
cld
add
mov
or
jne
cmp
je
add
les
lods
sbb
sbbb
test
loop
les
or
push
add
cmp
adc
aaa
movl
xchg
iret
aad
daa
clc
int3
repnz
inc
cmp
mov
insb
push
inc
xlat
icebp
xor
jnp
jle
out
xor
cmpsl
add
ret
bound
mov
mov
ret
data16
dec
jne
ret
das
aaa
pop
pop
jb
ret
outsl
pop
push
push
pop
fimull
fisubrl
mov
mov
imul
dec
dec
clc
adc
shlb
push
jbe
lcall
mov
or
mov
sahf
push
nop
sbb
ret
out
push
inc
cmp
ret
adc
dec
insb
rorl
stc
jns
jne
daa
sahf
shrb
jne
ja
push
push
fdivrs
mov
rorb
imul
adc
xchg
imul
arpl
enter
aaa
fildl
icebp
xchg
ja
cmpsb
sahf
push
inc
adc
mov
ficompl
test
ja
xor
insb
leave
mov
imul
imul
addr16
and
xorb
push
xchg
cltd
fisubrl
inc
int3
std
clc
lcall
aas
adc
imul
stc
sbb
filds
lahf
repnz
push
xchg
lcall
lahf
cmp
pop
inc
and
jmp
loop
iret
cmpsl
mov
orl
sub
xor
test
mov
mov
testb
sub
es
negl
xor
aad
insb
inc
and
mov
jge
jmp
inc
push
add
pop
cmc
inc
mov
mov
imul
push
dec
in
cld
jmp
sub
lds
out
cmpsb
repnz
cmp
iret
jecxz
mov
insl
xchg
jmp
sbb
cltd
js
cltd
testl
mov
mov
out
push
sahf
cmpsb
rcrl
xor
dec
rolb
jnp
out
imul
mov
fidivrs
cs
and
fldcw
jne
ljmp
call
sub
jne
stc
stc
cltd
push
or
sbb
xlat
add
pop
repnz
cmp
arpl
xchg
adc
or
lea
mov
mov
push
push
je
pop
pop
js
mov
stc
dec
sbb
cs
jg
jmp
outsb
pop
mov
andl
inc
loope
pop
mov
es
icebp
out
cs
xchg
std
shr
lods
or
out
icebp
pop
pop
or
dec
xchg
cmpsb
mov
cmp
lret
movl
xchg
outsl
dec
push
popf
and
scas
and
inc
sahf
xchg
movb
outsb
fidivrs
icebp
cmp
rcl
or
push
push
cmp
inc
jle
and
inc
les
push
fidivrs
xchg
inc
shll
ja
lock
fldl
adc
test
les
hlt
stc
mov
pop
js
mov
and
cmp
sar
insl
mov
push
loopew
cmp
xchg
leave
clc
add
mov
fs
jae
sbb
or
icebp
push
mov
adcb
cmp
shll
shrl
cli
dec
aas
es
and
lock
cmp
push
dec
xchg
nop
psadbw
adc
aaa
mov
mov
sti
movb
das
jne
push
inc
push
cmp
mov
adc
psllw
pushf
inc
mov
aam
in
lods
outsl
xorb
cmp
lahf
adcl
lcall
imul
push
shll
gs
test
out
adc
sbb
idivl
loope
jmp
mov
add
push
inc
jg
inc
pop
rcr
test
sub
jp
sub
mov
fisubrl
lahf
in
lods
loopne
sbb
int
jge
inc
ret
dec
push
and
ljmp
out
mov
push
xchg
xor
xchg
jle
mov
xor
pop
repz
js
pushf
or
dec
xchg
ljmp
out
icebp
andl
push
imul
loop
inc
or
sub
pop
or
sub
sub
lcall
sub
jns
in
adc
or
pop
sti
stc
jno
xchg
lea
xlat
gs
adc
sub
shlb
fnstsw
popa
pop
in
test
test
movsl
int3
icebp
fimuls
pop
pop
out
fsub
aad
imul
scas
mov
mov
nop
jmp
push
pop
jno
and
xchg
mov
cltd
pop
cld
xor
or
sub
xchg
mov
xchg
xor
push
daa
das
pop
stc
nop
fcom
cmp
call
daa
out
and
sub
loop
mov
in
add
pop
call
test
movsb
mov
inc
push
out
lcall
cmc
ljmp
mov
test
das
ja
sub
inc
adc
xlat
add
scas
xchg
in
mov
cmpb
pop
into
or
imul
add
ljmp
incb
daa
and
adc
inc
aam
sbb
jle
jne
dec
and
frstor
es
lods
popf
adc
sbb
scas
add
xor
ss
pop
xor
or
fimull
xor
and
adc
je
pusha
mov
mov
iret
xor
mov
fsubs
xorl
icebp
mov
mov
adc
sbb
jne
adc
adc
mov
mov
lds
fldcw
cmp
push
sub
jo
insl
popf
push
sbbl
jp
or
jle
outsl
ds
test
push
xchg
mov
and
push
push
stos
in
pop
jecxz
clc
cmpsb
sub
out
sub
in
pop
cmpsl
mov
or
sub
testl
in
sub
cli
lret
push
shrb
stc
adc
xor
dec
jne
push
push
push
add
mov
out
cld
imul
push
popf
mov
pop
dec
xchg
lds
jge
jnp
jnp
jp
and
mov
mov
movsb
jnp
rcrl
adc
pop
inc
rorb
decb
mov
xchg
sub
inc
outsl
add
bound
adc
cmpl
sub
mov
inc
int3
push
insb
popa
add
or
popa
push
pop
xchg
into
fwait
xlat
pusha
and
fmulp
jl
xchg
inc
add
jns
jle
adc
jnp
iret
add
fwait
arpl
push
mov
rcl
push
adc
fwait
pop
push
dec
rcll
cltd
xchg
ss
mov
sbb
xor
sbb
xchg
jp
dec
add
jg
mov
icebp
inc
pushf
mov
mov
push
arpl
mov
outsb
insb
inc
cltd
mov
daa
sbb
shrb
cmc
roll
nop
mov
fwait
andl
sbb
outsl
les
xor
dec
sbb
aam
mov
and
adc
push
sbb
mov
fs
insl
test
jne
sbb
out
repz
push
sahf
jl
jp
roll
mov
jg
fdivrl
jmp
pop
add
in
adc
or
js
ror
iret
fisttps
sub
mov
clc
inc
xor
enter
cmp
test
mov
fstpt
gs
dec
adc
fimuls
cli
loopne
cmpsl
xchg
push
aas
mov
fistps
and
push
out
mov
mov
push
push
add
pop
inc
jecxz
test
in
jb
fmuls
xor
mov
xor
push
loope
and
cmp
push
out
out
adc
xchg
lcall
add
fidivrs
dec
mov
test
xchg
inc
imul
pop
imul
sbb
arpl
aas
mov
test
std
xor
and
adc
in
hlt
jle
ljmp
xchg
jno
aas
out
mov
lods
push
xchg
je
push
insl
cmpsb
roll
clc
push
filds
adc
iret
add
hlt
mov
xor
stos
scas
pop
pop
in
cld
loope
scas
adc
sub
aas
pop
dec
mov
movsb
inc
push
cmp
rorl
ret
or
jne
jge
bound
mov
mov
and
movsb
sbbl
nop
mov
pop
fiaddl
test
mov
aam
mov
push
jnp
addr16
lcall
mov
adc
fs
mov
mov
lahf
inc
jp
adc
sbb
jle
ljmp
int3
sbb
sub
stc
js
sub
xor
std
mov
pop
push
imul
test
inc
xchg
in
arpl
lea
movsl
mov
mov
sbb
mov
mov
fwait
outsb
mov
into
mov
ljmp
mov
in
pop
push
xchg
xchg
decb
fwait
jne
mov
inc
push
mov
mov
pushf
movsl
cmp
fsubrs
sbb
sub
cwtl
out
inc
scas
stos
xchg
jns
inc
mov
jnp
mov
in
inc
popf
out
sarl
arpl
clc
mov
jns
jb
outsl
loopne
pushf
adc
clc
mov
mov
std
sub
int3
addr16
sbb
lods
aas
mov
scas
adc
xchg
jmp
sub
insl
daa
cmpsl
test
leave
notb
mov
insb
xlat
or
push
dec
xchg
hlt
xor
add
fiadds
shlb
mov
aam
add
imul
ret
and
lods
adc
pop
mov
add
hlt
mov
inc
cmp
lahf
je
ljmp
xchg
in
lret
add
pop
ret
out
insl
jecxz
pop
push
mov
scas
repnz
xorb
inc
xchg
ret
adc
test
je
cmp
or
in
xchg
out
sbb
jno
mov
ficomps
sbb
test
adc
stc
in
orl
and
cmp
or
mul
bound
mov
rcrl
push
mov
sub
sbb
mov
sahf
int
adc
xlat
xchg
xchg
stos
lcall
mov
js
sbb
mov
sahf
jmp
mov
scas
pop
nop
add
and
mov
xor
shrl
sub
jle
mov
or
xchg
mov
push
rolb
mov
fisttpl
out
stos
icebp
sbb
test
dec
sbb
repnz
lods
cmp
cmp
xor
jecxz
cli
push
push
gs
push
aas
push
int
add
jl
mov
gs
aad
and
xchg
or
adc
repz
inc
inc
in
dec
cmp
in
mov
or
sub
cmp
mov
pop
icebp
xchg
aam
mov
cmp
mov
sti
sahf
ret
mov
mov
sahf
and
inc
inc
pushl
loope
and
xor
rorb
mov
in
in
jl
aas
cmpb
movsb
push
imul
in
int
mov
pusha
sub
or
adc
dec
out
sbb
leave
jl
scas
fidivrs
and
out
call
fdiv
dec
inc
add
sub
push
push
mov
sub
out
fwait
mov
jnp
mov
sahf
push
pop
add
jl
push
inc
mov
shlb
jmp
push
pop
sub
mov
jbe
aaa
sti
cli
fisubs
js
push
dec
pop
scas
mov
loope
sbb
scas
jo
mov
in
jp
call
mov
push
jo
rolb
stos
mov
mov
mov
pop
cmovne
xor
push
iret
push
cs
test
or
lods
ret
xorl
cmp
adc
les
mov
xchg
fwait
xor
and
sbb
mov
out
xchg
je
pop
mov
test
outsl
aad
cmp
push
and
stc
aam
mov
cmpb
cld
dec
push
inc
and
xor
push
xor
hlt
and
mov
add
push
xchg
adc
ja
lea
fistl
mov
daa
out
xor
xchg
mov
and
add
xor
pop
mov
mov
aas
insl
ss
adc
cmp
pop
push
roll
nop
mov
mov
pcmpgtd
in
add
pop
and
pop
pushf
cmp
lret
loop
jae
sbb
adc
mov
cmpsb
lds
sbb
push
nop
test
jno
cmp
js
inc
add
mov
mov
cmp
inc
repnz
inc
movsl
out
cmp
xor
mov
aas
int3
les
jne
jnp
and
or
xchg
sub
or
leave
sti
js
sbb
cmpb
mov
jecxz
xchg
adc
les
cmpsl
dec
mov
or
sub
hlt
in
loop,pt
aad
je
ss
jbe
sbb
pop
xor
popf
daa
sub
loopne
xchg
add
jmp
xor
jecxz
inc
pop
jle
fs
imul
inc
mov
pop
bound
and
outsl
stos
sub
loopne
rclb
push
icebp
add
push
xchg
in
or
inc
xchg
xlat
stc
insl
xchg
jg
and
xchg
and
insb
adcl
inc
leave
subl
int
add
xchg
push
push
in
enter
icebp
add
push
fcmovu
sbb
cs
outsb
andl
push
cmp
or
mov
ljmp
mov
lret
mov
push
test
int
push
pusha
xchg
psubusb
out
lret
xor
shlb
repnz
daa
jecxz
leave
mov
xchg
mov
test
int
add
push
aaa
add
cmp
je
cmp
xor
mov
inc
dec
pop
push
jge
pop
xchg
pop
lods
xor
jge
cld
ficompl
cmp
aaa
cmpsb
adc
push
mov
mov
jo
xor
cmc
mov
repz
fwait
sub
in
adc
fwait
push
xchg
les
ljmp
pop
cmp
insb
test
nop
subl
cli
roll
inc
jns
pushf
lcall
pop
repnz
cmpsb
lock
mov
pop
and
leave
roll
jbe
mov
xor
pop
pushw
popf
pop
and
mulb
out
add
lea
out
adc
mov
pop
inc
adc
iret
out
pop
xor
xchg
cmp
pop
fwait
adc
or
js
mov
es
jge
decb
inc
pop
jge
outsb
inc
and
mov
add
ficomps
lcall
mov
jbe
mov
sub
cli
stc
xor
xor
push
dec
pop
test
xchg
adc
jae
pop
push
and
push
lds
sbbb
imull
ficoml
cld
push
sbb
mov
jnp
jno
mov
push
insl
cmpsb
sbb
push
cwtl
cmpsl
pop
daa
and
jnp
sub
or
mov
movsl
cmp
push
scas
push
das
mov
pop
cwtl
into
mov
jmp
inc
lods
nop
scas
sti
pusha
mov
popf
cmp
dec
imul
and
inc
sahf
mov
insb
xchg
xor
adc
dec
cmp
adc
jno
lods
ret
fs
or
rol
mov
ss
pop
dec
jl
ret
mov
hlt
stc
sub
xor
sbbb
mov
add
cld
in
aaa
sbb
arpl
mov
imul
push
insb
sub
pop
add
mov
rcl
cld
mov
in
xor
lds
int
in
push
inc
in
xchg
pop
cmpsb
test
and
ret
in
xlat
hlt
and
add
push
lods
jle
hlt
int3
sbb
shl
rclb
mov
fstpl
cs
out
les
xor
gs
mov
xchg
cmp
lds
aas
arpl
xchg
jp
pop
out
ljmp
jbe
sti
and
add
dec
jl
cmp
add
and
jae
ficompl
ror
pop
fildll
xchg
mov
or
test
or
jge
add
push
cmp
xchg
pop
test
push
fidivl
in
cmp
repz
adc
cwtl
sbb
loope
pop
popa
push
jns
popa
aam
ficoml
and
fwait
imul
mov
inc
dec
xor
hlt
mov
or
mov
inc
mov
mov
cld
mov
gs
fsts
orl
scas
jmp
fiaddl
mov
push
add
mov
xchg
cltd
insb
pop
mov
ja
scas
mov
lods
cmp
scas
xor
imul
xchg
ret
xor
popf
pop
popa
notl
ret
out
jnp
mov
pcmpgtd
add
add
stos
ret
push
push
jmp
cmpsb
shll
stos
cmpsl
cmc
lahf
mov
cmp
xor
adc
int
stos
jnp
jg
stos
xor
mov
mov
adc
mov
pop
in
adc
fcmovnbe
call
loop
mul
sbb
cli
xor
or
loop
push
repnz
adc
in
lods
rcrb
mov
sbb
adcl
sub
xchg
cmpsb
sub
cmc
and
das
jbe
loope
push
mov
sbb
sub
aam
and
cs
and
cmp
pop
iret
fdivrs
or
xchg
loope
addl
fidivrs
outsb
imull
sbb
enter
mov
aam
mov
lods
repz
dec
sub
dec
sti
sub
std
stos
jb
or
pop
fisubrl
jmp
fimuls
jp
dec
lret
cmovns
in
sub
pop
pop
and
imul
push
shrl
xchg
outsb
ja
lods
clc
mov
mov
push
pushf
mov
dec
inc
mov
les
mov
pop
mov
mov
and
sbb
and
add
sahf
inc
dec
mov
pop
and
sti
cli
push
jecxz
out
in
stos
outsb
inc
call
int3
xchg
lea
and
jb
outsb
sub
daa
popf
dec
pop
push
sbb
subb
xor
cld
add
lock
xchg
icebp
and
cmp
cmp
mov
inc
jmp
aas
and
popf
lods
mov
icebp
lcall
jnp
stos
ret
in
roll
les
rcrb
mov
out
stc
test
jmp
add
stos
jne
inc
loope,pt
ret
das
add
xchg
mov
mov
sub
sahf
ja
sti
mov
je
pop
fists
test
mov
jno
les
mov
sub
insb
jbe
in
int
push
mov
repz
jb
inc
or
sti
popf
push
fisubs
arpl
sbb
mull
sbb
pop
pop
xchg
cmp
out
aaa
lods
jns
lds
jmp
insl
cmp
cmp
out
es
mov
mov
jg
mov
sub
adc
test
pop
jnp
xor
sbb
test
cmp
jmp
subl
test
pop
aas
pushf
add
adc
jnp
jg
sub
mov
rclb
pop
cwtl
stos
add
scas
mov
sbb
insb
aaa
mov
jmp
jnp
push
orl
sbb
addr16
mov
pop
dec
icebp
enter
pmaxub
push
daa
hlt
sub
lock
and
insb
mov
popa
xlat
lret
in
icebp
hlt
cmp
addl
or
test
pop
push
xor
and
cli
mov
and
iret
pop
in
nop
dec
loope
xchg
lods
mov
dec
test
in
loop
stos
and
popl
sub
lock
mov
xor
movsb
std
jo
cmpsl
jne
sub
xchg
mov
add
dec
inc
daa
xchg
mov
mov
loop
push
add
sub
pop
inc
stos
lods
in
lret
mov
push
stos
mov
fildl
and
outsl
mov
xchg
mov
push
mov
rorb
pop
gs
das
flds
adc
cld
pushl
jmp
pop
fstl
aam
imul
xchg
or
add
push
scas
les
pmaxub
bound
mov
add
hlt
popf
sarl
enter
subb
cmp
ds
or
loope
mov
stc
push
jbe
repz
cmp
and
xor
jp
push
addr16
and
out
loopne
ret
dec
test
test
arpl
pop
repz
push
dec
dec
mov
js
add
cs
jbe
and
sub
pop
mov
test
adc
pop
gs
andb
cwtl
shl
sub
sbb
or
popa
jo
dec
cli
in
xor
push
xor
inc
cmp
movsb
in
push
and
adc
push
inc
cmc
pop
loopne
jno
and
test
inc
push
imul
aad
push
adc
lds
insl
sti
xchg
pop
nop
pop
leave
scas
adc
enter
dec
js
fbstp
maskmovq
testl
sub
sbbl
pop
add
pop
fidivs
das
dec
pop
les
lock
testb
pusha
dec
push
ret
xor
mov
pop
cs
into
int
xchg
push
mov
add
cmp
lds
inc
cmp
imul
xlat
mov
and
mov
cs
pop
mov
out
mov
cwtl
add
lret
ret
add
mov
sbbl
jo
ret
mov
ret
lds
lds
fcoml
xchg
lods
xchg
mov
fimuls
out
mov
mov
imul
xchg
cli
xchg
push
push
mov
dec
nop
sbb
adc
bound
out
and
dec
jbe
orl
mov
push
pop
push
pushf
repnz
xchg
imul
popf
cmp
arpl
ljmp
and
and
frstor
popf
inc
popa
mov
andb
or
mov
jg
inc
xchg
push
mov
dec
je
into
cmp
pop
lret
data16
cmp
mov
xor
stos
cltd
movsl
push
cmp
clc
enter
xor
scas
lcall
pop
mov
push
cmp
mov
sub
js
push
pop
or
imull
movsb
data16
jmp
fnstcw
das
js
rcr
sbb
aas
cmpsl
nop
out
je
and
mov
fwait
testb
fistpll
jge
in
sub
push
push
xchg
jecxz
mov
aad
test
add
push
stos
mov
sub
clc
mov
adc
aad
jmp
sbb
jo
push
arpl
pop
cltd
sbb
ficoms
subb
push
dec
test
pop
movb
mov
mov
mov
cmpsb
jge
fnstsw
mov
adc
jae
shrb
and
sub
sbb
push
and
shll
sbb
cmpsl
imul
sub
daa
cmc
fs
dec
lahf
inc
call
testl
xor
mov
popa
mov
mov
mov
int
xor
or
mov
add
xchg
cmp
mov
lock
popa
dec
sub
xchg
or
nop
stos
push
sub
jbe
add
xchg
roll
pop
cmp
inc
into
sub
jle
les
mov
sarl
lods
xchg
and
stc
push
add
push
pop
gs
in
mov
test
scas
cmp
leave
mov
xorl
in
mov
outsb
mull
mulb
or
pop
sbb
cmpsb
insl
sub
pop
pop
aam
pop
in
enter
icebp
stc
mov
dec
xchg
bound
sbb
pop
mov
lods
pop
push
mov
and
cmpsb
in
jg
or
pop
aaa
lcall
mov
add
in
xchg
pop
xor
test
stos
clc
mov
push
pop
movsl
inc
adc
lods
ds
jbe
xor
mov
data16
pushf
lret
js
jge
adc
je
mov
gs
roll
stos
fists
mov
cmpsl
cmp
adc
in
and
movsl
sahf
xchg
stos
mov
or
adc
movsl
popa
bound
mov
push
jbe
mov
pop
or
pop
test
push
mov
in
mov
insl
ljmp
mov
mov
inc
fwait
mov
push
xor
addb
mov
adc
pop
ss
add
or
hlt
ficoms
cmp
mov
call
push
adc
pushf
orl
loop
mov
aad
jg
aad
pop
xchg
xor
xor
or
xor
push
xor
popa
mov
mov
jae
mov
fidivrs
pop
sub
inc
adc
xor
push
sbb
push
icebp
neg
loop
mov
daa
mov
mov
les
mov
cmc
ret
pop
ljmp
test
shll
popa
call
sbbb
jo
lret
sbb
xor
jae
fsubrs
repz
dec
test
dec
lahf
inc
shlb
andl
ret
lcall
cmp
pop
scas
pop
lret
push
push
dec
lock
mov
xor
push
jecxz
inc
inc
xchg
and
dec
jg
mov
pop
hlt
and
sub
pushf
cmp
pop
ljmp
repnz
xor
add
jae,pt
cmp
hlt
mov
fldl
mov
pop
push
mov
ret
pop
mov
and
mov
cmp
sub
dec
sarb
push
jge
rcl
mov
mov
xor
pop
mov
push
dec
mov
xor
pop
es
push
inc
mov
sub
sbb
cmp
cmp
fdiv
xchg
jno
dec
and
jne
mov
mov
cmp
cltd
lret
orb
hlt
popa
jno
push
adc
xor
lock
dec
cltd
and
leave
sbb
inc
xchg
inc
mov
mov
mov
xchg
and
cmp
imul
cmpb
das
dec
int3
jbe
push
sbb
in
insl
sbb
addl
or
mov
ja
sub
repz
push
out
xorl
mov
push
test
xor
scas
inc
idivl
push
arpl
fildl
jnp
insb
dec
mov
sbb
ficomps
jmp
sub
cmp
in
out
call
fimuls
test
inc
mov
lahf
dec
jnp
js
aaa
sahf
mov
add
xchg
sub
lret
and
cwtl
jbe
rcrb
pusha
jg
in
inc
xor
mov
outsb
push
adcl
push
jle
daa
mov
insb
add
add
mov
pop
xchg
xor
into
repnz
pop
jmp
fs
add
clc
cs
mov
inc
lcall
mov
lahf
cmp
lahf
enter
jno
mov
ret
push
mov
mov
outsl
mov
sbbb
mov
jae
lahf
xor
shl
cmpsl
mov
pop
je
mov
test
push
inc
inc
popf
sub
fisubl
mov
int3
int
push
fcompl
sub
out
mov
lods
data16
pop
xor
ljmp
mov
dec
inc
mov
outsl
adc
aam
lock
lcall
adc
xchg
pop
sbb
rcrb
sbb
ja
lods
mov
adc
scas
fidivrl
jge
or
sub
push
push
and
shll
push
scas
fcoml
fimull
or
xchg
jg
sub
mov
leave
add
xchg
jb
fld
and
mov
lcall
inc
sti
dec
inc
dec
bound
imul
push
test
push
testl
aad
jg
xchg
stos
aad
aam
inc
mov
sub
sbb
jle
in
lods
pop
ror
shrl
xor
js
and
sbbl
lea
adc
aas
outsb
inc
shrb
sub
mov
fcomps
test
scas
out
fsubr
fidivrl
push
sub
push
sahf
sti
push
adc
outsl
nop
sbb
mov
xor
sbb
hlt
sub
mov
sub
jno
xchg
out
jnp
jl
or
push
insb
stc
xor
ficoml
lods
mov
and
int3
and
fsub
js
movsl
mov
fldt
inc
cmc
mov
mov
push
mov
lret
mov
ljmp
lret
mov
pop
pop
mov
out
addl
mov
inc
cli
repz
fcmove
cmpsb
or
xor
dec
jb
jle
fsubr
pop
test
jl
mov
mov
out
lcall
outsb
pop
mov
mov
das
loopne
cltd
ja
sahf
aad
je
push
add
mov
cmp
rcr
pop
imulb
test
pop
shlb
mov
adc
in
dec
and
fwait
push
addb
mov
sub
inc
add
inc
jnp
aad
cmp
test
sbb
mov
sti
pop
fidivrs
xchg
scas
les
dec
mov
out
cmp
je
in
push
xor
adc
mov
xchg
mov
mov
jns
gs
pop
int3
adc
iret
cs
scas
dec
sbb
cmpsl
push
adc
sub
out
fs
dec
out
pop
sbb
mov
mov
in
test
outsb
jns
ljmp
nop
aad
push
xchg
dec
dec
lods
movsl
xor
inc
out
add
jg
sbbb
test
inc
mov
lock
mov
in
movsb
addb
dec
cmp
mov
stc
mov
xchg
and
cmp
dec
mov
xrelease
pop
xchg
out
xor
pop
mov
jns
dec
lock
arpl
adc
js
jne
mov
call
jp
es
mov
out
mov
jmp
xlat
ja
mov
mov
mov
cmc
cld
ss
testl
sbb
xchg
mov
mov
sub
mov
or
cld
out
push
orps
fisubl
or
xchg
xor
push
daa
das
fld
sti
and
in
out
lods
push
or
and
push
addb
cli
and
xchg
scas
cmp
cwtl
push
enter
push
pop
fs
das
ja
test
and
es
sbb
loope
lock
pop
lods
ror
push
hlt
mov
fdivl
mov
xor
sub
ljmp
add
mov
mov
stc
ret
adc
adc
xor
cld
dec
or
ret
repnz
pushl
scas
rcll
insl
sbb
mov
inc
mov
xor
fcmovb
roll
push
jle
xchg
pushf
rclb
repnz
or
fcos
or
js
xor
jns
ret
and
fst
pop
lret
or
push
shl
dec
test
jp
stc
inc
pop
ss
in
xchg
push
mov
sub
dec
cmp
test
dec
pop
in
cmp
andl
adc
cmp
push
lret
mov
pop
and
jmp
lahf
xor
cmp
imul
popa
addr16
pop
add
sarb
test
popa
dec
fwait
pop
insl
xor
adcl
das
ljmp
or
popa
and
orl
sub
dec
ja
fbld
or
adc
ficoml
adc
in
je
test
or
bound
xchg
dec
call
mov
mov
cmpsl
mov
gs
fidivs
outsb
mov
test
imul
mov
and
dec
mov
aaa
les
mov
sub
jns
cmc
dec
or
lods
xlat
sbb
mov
js
in
or
xchg
js
mov
fs
sbb
mov
xchg
push
xlat
jae
inc
xor
xchg
adc
cld
gs
insb
ret
push
jp
incb
sbb
mov
jecxz
cmp
fisttps
in
and
pop
mov
in
mov
dec
mov
das
inc
push
test
daa
inc
andb
out
and
fs
pop
and
lahf
cmp
mov
push
arpl
gs
mov
push
xor
je
movsl
fbstp
and
push
push
cmp
push
sahf
jmp
fimull
adc
xor
push
lods
mov
xor
xchg
mov
mov
sbb
xchg
ret
adc
mov
or
or
dec
and
sbb
lret
jne
and
fmuls
dec
scas
push
sbb
cmp
sub
fadds
mov
in
inc
push
mov
and
es
stos
cli
jecxz
test
cli
and
push
jecxz
sbb
cmp
jae
mov
push
popa
sbb
sbb
xorb
aaa
add
sub
rcll
negl
jne
cmc
das
jns
mov
rcrl
jge
jbe
cmpsb
hlt
outsb
add
scas
pushl
adc
sub
lret
lds
out
jp
push
aas
sub
nop
push
xchg
jbe
clc
mov
mov
fnstenv
test
mov
lods
ja
stc
inc
fs
fisubl
xor
mov
sub
iret
pop
sub
mov
xchg
jmp
arpl
lcall
sub
in
sbb
sbb
je
mov
test
mov
mov
es
adc
xor
pop
xchg
push
add
jg
fbstp
pop
aaa
call
loopne
in
pop
push
push
xchg
nop
cmp
lret
ret
push
cmp
jp
iret
push
dec
cbtw
xchg
xchg
xlat
jmp
lea
das
ds
ja
jno
in
cmpsl
lods
nop
and
aaa
inc
stc
je
mov
movsl
andb
mov
dec
lcall
cld
int3
dec
and
pop
shrb
adc
and
rorl
pop
xor
dec
xor
cmc
mov
movsb
leave
xchg
mov
mov
mov
cmp
sbb
xor
test
pop
add
cmp
ds
inc
sahf
mov
call
inc
dec
je
xchg
icebp
in
jl
add
mov
fs
xor
push
mov
std
and
ja
mov
imul
mov
add
jbe
and
mov
or
add
cmp
jb
ret
cmc
xchg
mov
fs
cmpl
lea
clc
sbb
aad
subb
sbb
or
aam
pusha
dec
cmpsb
push
mov
std
in
or
aam
inc
sub
add
xor
ret
sub
pop
and
mov
dec
inc
cmp
sti
mov
scas
jp
bound
push
jmp
jg
jo
mov
pop
fxch
sub
mov
jb
adc
sbb
jne
adc
pop
data16
jbe
mov
sbb
inc
aam
jmp
jge
and
iret
gs
hlt
dec
jne
or
cmp
inc
push
pop
xchg
cmp
arpl
repz
pcmpeqw
cmpl
sbb
in
cmp
shrl
xor
pop
fisubrs
pop
push
sbb
dec
popa
inc
mov
xor
movb
mov
in
sbb
nop
popa
stc
call
lret
ret
mul
adc
loope
mov
sub
sub
sarl
lahf
sub
push
push
mov
jbe
movsl
mov
inc
mov
nop
mov
into
pop
cmpsl
lcall
lds
ficoms
je
movsl
lret
adc
mov
and
sub
xor
add
mov
mov
fscale
mulb
out
mov
lods
lods
je
test
into
sbb
jns
push
aaa
mov
nop
loope
js
adc
aad
xor
jmp
push
pop
cmp
cmp
adc
dec
iret
mov
sub
mov
hlt
mov
mov
pusha
push
adc
mov
jmp
sti
push
cmp
or
pop
scas
jnp
or
shlb
out
aas
mov
out
data16
sub
jl
add
pop
stos
push
or
lods
push
mov
cmpsl
fstpt
mov
fdivl
rcrb
inc
shrl
sti
xor
ret
pop
daa
incb
jno
sub
scas
roll
adc
or
cli
jmp
sub
out
into
fs
cmp
nop
sbb
cmpsb
mov
dec
orl
adc
sbb
and
and
lock
lds
mov
push
int
or
ss
loope
jmp
popa
cmp
hlt
pop
fadds
into
rorb
sbb
movsl
mov
fisubrs
in
dec
cmp
sub
mov
push
in
jae
xchg
cmp
sub
out
and
lret
out
mov
adc
mov
push
mov
jbe
sub
ds
in
xor
aas
dec
push
jg
les
sahf
push
jecxz
jle
divl
jge
ficoml
xor
out
push
inc
rcrl
loopne
loope
xor
and
mov
imul
jo
push
loope
fbstp
jge
outsl
xor
gs
push
xor
add
jae
mov
test
push
pop
mov
pop
jb
xor
jle
mov
mov
cmp
stc
mov
repnz
loope
xor
loop
nop
insl
test
cmp
push
sub
mov
out
shll
jle
fldl
fdivrs
push
test
xor
out
inc
jp
jg
rorb
ja
clc
sub
aas
out
mov
mov
lahf
lret
mov
pop
aas
push
sub
stc
push
sbb
loop
lret
cmc
cli
stos
mov
iret
jmp
xchg
mov
push
xchg
pop
lds
xor
faddl
mov
std
ds
cmp
pop
or
fnstenv
data16
out
jns
add
add
out
hlt
xor
jl
or
jo
addl
movsl
loopne
pop
ret
in
pop
mov
shll
ret
cmp
cs
jb
aad
push
imul
out
xchg
sbbl
cltd
push
lahf
clc
call
inc
das
imul
dec
mov
adc
pop
push
movsb
mov
lock
cmp
adc
imul
lods
mov
xchg
push
jns
mov
popf
jecxz
sbb
sti
cmp
lahf
xchg
lock
cmp
push
mov
sbb
test
sbb
pushf
mov
push
sbb
push
pop
xchg
aad
rclb
popf
mov
cmpsl
add
mov
or
push
mov
inc
xor
fcmovnbe
cmpsl
mov
cmpsl
pop
jg
push
push
dec
sbb
pop
push
jp
mov
ds
call
sbb
mov
outsb
mov
xchg
ljmp
movsl
mov
sbb
mov
vmovdqu
push
add
sub
js
jne
mov
pop
mov
je
cmp
jbe
ficompl
jmp
test
ja
add
cmc
shlb
pop
stos
sub
inc
sub
mov
popf
and
cmp
sarl
iret
popf
cmp
mov
bound
mov
mov
mov
add
push
jge
dec
out
out
or
adc
call
mov
xor
pop
xor
mov
inc
cmpsb
xchg
lods
jne
sub
pushf
add
and
int3
mov
dec
fs
les
sbb
push
sbb
sarb
insl
imul
inc
les
shll
aaa
cmc
inc
xorl
iret
and
fs
lcall
lret
jne
inc
pop
cmp
inc
lret
mov
and
cmp
mov
into
fbld
adc
mov
dec
sbb
sbb
mov
mov
stc
hlt
lret
jmp
mov
push
sub
sub
jnp
lcall
test
mov
dec
xor
inc
mov
mov
xchg
in
mov
sub
jge
jnp
mov
xchg
push
sub
movsb
jb
test
inc
dec
push
sti
mov
test
adc
sbb
lds
insb
mov
rolb
mov
imul
fsub
and
dec
fdiv
and
mov
xchg
frndint
mov
fistl
lret
xchg
imul
add
push
or
ja
mov
je
pusha
pop
jecxz
jmp
mov
or
sarb
repnz
and
cwtl
and
icebp
ss
mov
cltd
gs
push
add
shrl
jge
sub
dec
fsubrp
leave
xchg
push
data16
iret
mov
or
inc
and
cmc
lds
jae
push
cmpl
push
pop
outsl
jl
dec
cmpsb
jne
movsl
aas
std
pop
dec
in
lcall
stos
push
xor
sub
push
adc
popf
int
and
mov
scas
and
cmp
mov
int3
fdivrl
inc
divl
cmp
icebp
lea
inc
scas
iret
cmp
negl
dec
inc
and
xchg
mov
rclb
jno
pushf
xchg
fsubs
fucom
push
icebp
pop
mov
in
mov
testb
sarl
shll
inc
jnp
out
ja
add
jno
and
lods
dec
push
mov
push
xchg
sahf
pop
inc
dec
pop
adc
out
test
push
in
fdivrs
and
sub
mov
cmp
loopne
sbb
and
pop
imul
mov
cmpsl
and
inc
outsb
pop
inc
adc
js
repnz
popf
fidivs
add
dec
stos
adc
aam
adc
mov
mov
and
cmp
xor
mov
dec
stos
dec
int
mov
jmp
fldt
cltd
shll
outsl
iret
push
dec
jl
and
fcomps
adc
xor
pop
out
faddl
in
mov
add
xor
push
bound
insl
or
sub
sub
cli
ss
or
add
pop
insl
in
fwait
outsb
test
bound
add
xor
add
cmpsl
repnz
push
fs
test
shlb
xor
test
hlt
jae
popa
mov
pusha
sbb
aaa
and
ret
std
sbb
jle
push
cld
or
dec
sahf
data16
faddp
mull
sub
mov
imul
test
pusha
je
xor
mov
int
je
data16
pop
aaa
pop
mov
sbb
xor
mov
fidivrs
pop
add
and
rclb
jl
mov
ret
and
dec
adcl
sub
jo
inc
push
xlat
rclb
addr16
les
ljmp
fmulp
mov
addr16
dec
jp
dec
sub
fmull
push
jecxz
pop
data16
sahf
cmp
add
gs
lahf
mov
cmpsb
outsl
or
pushf
lock
push
push
cltd
push
movsb
sbb
sbb
int
movsl
dec
roll
cmpsb
outsl
rcrl
mov
sbb
jb
dec
lds
sub
inc
cmpsl
push
mov
pop
mov
pop
sbb
inc
adc
pusha
pushl
aad
ret
out
sub
sbb
into
out
jecxz
jae
icebp
xor
mov
hlt
gs
cli
pandn
mov
mov
into
push
nop
cmp
mov
inc
mov
insl
push
sarb
out
int
sub
dec
ja
ficoml
gs
xchg
iret
ror
mov
pop
insl
push
daa
test
ja
xor
imul
cmp
ror
and
or
xchg
adc
jne
jmp
mov
cld
pop
stc
pop
xor
stc
dec
in
sub
bound
push
insb
test
inc
test
add
dec
jno
pushf
shrb
pop
call
in
inc
aad
jns
jnp
dec
xor
ja
cltd
mov
addr16
inc
lcall
sahf
sti
movsl
add
clc
int
push
loope
xor
mov
sahf
out
jp
dec
dec
pop
lcall
dec
loope
fidivl
adc
std
imul
jge
daa
lahf
pop
inc
push
lcall
int3
stos
repnz
bound
rol
mov
push
mov
xchg
pop
movsl
lcall
jl
out
fldenv
cmpsb
das
mov
sahf
mov
or
pop
push
fdivp
imul
pop
pop
mov
mov
push
xchg
xor
aam
popf
andl
jno
sub
mov
sbb
sbbb
cmp
jno
mov
shrl
call
ljmp
sti
cmp
inc
mov
out
cmp
pop
test
or
cmp
icebp
push
clc
xor
fdivrl
gs
jbe
xchg
xchg
dec
hlt
sbb
jo
ret
cmpsl
jbe
fwait
pushf
arpl
mov
in
mov
lea
lahf
mov
push
pop
mov
push
and
nop
test
jecxz
xchg
fwait
jl
or
sti
scas
xchg
out
movsb
dec
frstor
push
cmp
xor
push
leave
cltd
mov
lods
js
xor
jo
clc
pop
sub
push
nop
and
mov
mov
push
pop
and
mov
xchg
cmc
dec
dec
ret
xor
cmp
inc
cltd
sbbb
repz
jae
sub
pop
or
inc
mov
ja
and
push
jno
inc
mov
dec
sahf
cs
or
ljmp
jge
xor
xor
loopne
pusha
jo
dec
push
pop
in
stc
jp
sahf
ljmp
aaa
jecxz
shrb
popf
movsl
popa
fnstenv
inc
aam
mov
inc
jb
sbb
in
test
and
arpl
sbb
mov
out
xchg
pop
jb
lods
xchg
xchg
mov
insl
and
mull
popa
cmc
je
mov
mov
dec
shl
inc
adc
stos
fsts
cmp
mov
cmp
sub
ds
jnp
sbb
test
fwait
daa
xchg
sub
mov
clc
cmp
cld
sbb
sbb
jne
les
in
neg
jge
mov
fs
loope
and
stos
in
inc
add
sbb
xchg
outsl
add
mov
xlat
aas
mov
jae
sbb
jl
call
xor
stos
sbbb
or
add
xchg
push
bound
inc
cmp
pop
cli
or
pop
mov
int
cwtl
and
jg
pusha
cmpsb
mov
scas
xchg
rol
mov
lret
mov
cld
mov
pop
hlt
pop
add
rorl
into
or
xor
sub
xor
sub
xchg
cs
jecxz
in
arpl
mov
scas
sti
gs
adc
fists
mov
sti
mov
cmp
fimull
mov
arpl
insl
fidivs
cltd
out
sbb
mov
or
popf
ret
or
mov
inc
les
mov
ja
mov
es
or
cmc
cmp
ror
repz
nop
xchg
fwait
mov
inc
popa
pop
dec
neg
fstps
dec
sub
mov
inc
mov
je
push
das
mov
mov
adc
mov
fwait
out
cmpsb
add
and
mov
and
push
sbb
imul
outsb
enter
pop
mov
inc
mov
jb
adc
cmp
lods
fcompp
mov
cwtl
lcall
sbb
mov
adc
sbb
adc
xchg
jmp
ss
pop
pop
int3
mov
sahf
xor
inc
mov
add
sar
inc
xchg
into
lahf
push
push
movsl
push
icebp
dec
mov
add
iret
add
es
jae
aad
push
lods
dec
adc
iret
jne
stos
adc
loope
push
lods
lahf
xor
incl
sub
jmp
bnd
push
add
mov
inc
dec
adc
cmp
pop
mov
clc
push
icebp
xor
sbb
into
lds
data16
xor
xlat
xchg
je
cmpsb
and
sbb
sbb
add
mov
adc
cmc
or
xorl
pop
mov
ja
das
aaa
test
jns
notl
out
adc
popa
ret
mov
aas
flds
adc
cmp
mov
xor
sti
mov
push
out
inc
inc
in
nop
ficoms
xor
mov
pop
dec
gs
int3
inc
dec
stos
jns
mov
mov
or
dec
pop
movsl
cmp
repz
loop,pn
mov
push
aad
xlat
mov
js,pn
jl
pop
shrl
lods
cmpl
jp
mov
jp
dec
cmp
popa
mov
push
sbb
out
dec
std
pop
out
dec
scas
sub
xor
push
cmp
ss
xchg
adc
insl
dec
mov
push
sbb
mov
xor
in
ss
jp
add
xchg
frstor
shlb
jne
jae
cmp
test
or
in
mov
stos
fidivrl
les
outsl
scas
jl
lods
call
add
push
arpl
or
xchg
xor
dec
aad
leave
out
pusha
mov
inc
lock
mov
sbb
or
jl
xor
jmp
mov
ret
jecxz
pop
xchg
xchg
cli
mov
inc
dec
es
push
outsl
pop
push
dec
jbe
in
dec
sbb
jg
cwtl
mov
push
push
sbbl
pop
sbbl
nop
sahf
mull
cmp
jno
mov
lcall
loop
cmpsb
cmovge
lahf
filds
and
aam
cwtl
cmpsl
add
cmp
adc
inc
pop
jb
fbstp
sbb
mov
xchg
scas
outsl
push
lcall
lds
xor
test
in
sub
jo
lahf
mov
xchg
sahf
sub
fistpl
aaa
mov
outsl
sub
pop
pop
sbb
leave
push
sbb
pop
mov
jae
xor
inc
sub
jo
sbb
data16
xchg
leave
scas
enter
mov
pop
xor
out
add
mov
ljmp
ds
imul
push
dec
sahf
out
aam
push
fxch
adc
icebp
aaa
and
jp
js
dec
into
or
popa
dec
push
cmp
pop
mov
cmc
add
shl
or
mov
cmp
push
dec
fsubrs
test
loope
aam
push
pop
cmp
mov
jp
adc
fstpt
pop
jg
mov
lods
lret
lret
ret
es
mov
in
sub
sub
pop
bnd
cmc
fidivrl
into
mov
mov
cli
dec
and
xor
js
or
mov
mov
and
xor
lret
les
test
cmp
shl
inc
fxtract
adc
fisttpll
dec
mov
sahf
jmp
sbb
repnz
mov
bound
mov
pop
push
clc
sbb
or
faddl
jae
push
stos
into
orb
sbb
fidivl
sub
xchg
xor
pusha
mov
clc
pop
popf
push
push
sbb
xchg
lds
mov
and
cmp
sub
sub
nop
leave
std
mov
adc
shll
cmpsl
lds
test
enter
pop
enter
sub
xor
notl
cmpsl
jns
mov
cmc
fucomi
push
or
test
mov
add
pop
enter
jecxz
push
mov
subl
cmp
fsubrl
mov
push
imul
jp
xchg
jns
out
movsl
insl
lods
mov
movsb
add
cmp
incb
repnz
imulb
inc
cmpsl
cmp
xchg
sbb
xor
nop
adc
xchg
mov
daa
aas
sti
notl
ljmp
imul
xchg
lods
pop
xchg
fwait
icebp
lods
stos
inc
fwait
jle
xchg
pop
out
lods
pop
xchg
fdivs
les
cmp
int
add
jp
lods
push
pop
sbb
add
push
and
fcoml
add
jmp
nop
mov
inc
in
mov
int
sbb
mov
add
cs
cs
mov
cmp
dec
add
mov
std
lahf
js
addr16
and
cwtl
ficoml
xchg
and
pushf
shlb
iret
push
push
outsl
push
jne
pop
inc
aas
pushf
push
stos
sbb
xchg
repnz
mov
fistps
test
paddusw
fs
inc
cmpsl
outsb
dec
adc
movsl
or
sbbl
arpl
adc
lahf
xor
mov
cmp
mov
dec
out
jl
pop
enter
stos
popa
in
cmc
mov
mov
sar
cmp
jne
cmp
push
fbld
loop
loop
push
fsubs
insl
sahf
add
fidivs
dec
pop
pusha
or
pop
daa
lret
xorl
aam
pusha
pop
or
mov
lds
insl
in
mov
hlt
dec
insl
daa
cmp
fists
out
push
jge
fs
jmp
add
sti
xorb
addr16
jae
pop
and
mov
in
jb
fcompl
pop
movsl
mov
mov
adc
andb
sbb
outsl
loopne
cmpl
pop
js
jnp
movswl
mov
and
sub
mov
sbb
popf
pop
sbb
sti
xor
jno
enter
ja
adc
out
cmp
bts
ss
dec
push
xorb
shl
aas
pop
mov
mov
inc
push
ss
pop
ds
inc
dec
mov
in
mov
add
cmp
mov
mov
or
add
mov
dec
xchg
rep
sarb
cmpsb
mov
movsb
pushf
push
enter
adc
cmp
loop
cmc
clc
enter
pop
nop
in
jne
pop
and
lea
push
loop
push
insb
and
pop
mov
xor
push
jmp
jnp
pusha
stos
in
sub
inc
repnz
adc
dec
and
stos
aaa
xchg
jmp
arpl
jns
sarb
pop
or
popa
shll
xchg
pop
popa
push
inc
daa
fidivl
push
push
iret
inc
mov
adc
mov
cmpsb
adc
dec
jl
adc
jb
mov
mov
pop
add
add
subb
out
jo
jecxz
shlb
dec
xchg
cld
push
stos
shlb
pop
lock
orl
jp
adc
sbb
testb
or
ret
xor
pop
mov
test
aad
mov
test
scas
mov
into
cmc
cmp
shr
test
inc
mov
mov
sub
lock
dec
dec
loopne
insl
sbb
xor
add
stos
lret
fimull
or
dec
or
pop
loope
mov
jmp
cmp
sbb
lock
fnstenv
inc
add
mov
negl
ds
unpcklps
fisttpl
bound
and
loopne
xor
adc
arpl
ret
icebp
lahf
fwait
dec
idivl
cwtl
pushf
out
xor
cmpl
jmp
mov
mov
loopne
flds
enter
pop
cmp
je
rcr
mov
xchg
scas
shrb
fsts
insl
jp
jp
mov
add
sbb
sbb
dec
lcall
or
pusha
lret
icebp
hlt
fadds
jbe
fnsave
jmp
xchg
insb
push
pop
popf
int
push
cmp
out
repnz
or
mov
lret
push
fists
orl
sub
pop
jg
test
sub
es
jo
push
sbbl
jo,pn
add
and
lods
hlt
movsl
jg
push
aam
mov
push
fcompl
and
jne
sub
out
repz
ret
jno
ljmp
gs
and
cmp
pop
and
mov
mov
pushf
in
jne
cmp
fstps
pop
lahf
xor
in
pop
cmp
into
sbb
addr16
insl
inc
incl
jno
mov
std
pushf
adc
adc
jl
inc
mov
lods
notl
aaa
inc
sub
xor
or
js
fiadds
bound
xchg
cli
ret
fldt
repnz
jb
fdiv
std
cmp
pop
push
arpl
pop
or
push
ret
ficomps
sbb
and
fimuls
ss
and
lock
mov
rcr
lahf
movb
enter
or
decl
lds
test
xor
scas
push
adc
shlb
cmp
stc
call
pop
repnz
stc
jb
loopne
inc
mov
stos
lods
jp
mov
je
xlat
add
dec
ror
outsb
cmp
pop
lods
dec
adc
ss
nop
aad
arpl
adc
repz
nop
cs
xor
mov
js
testl
xor
xor
addr16
loop
out
xchg
add
rorb
xor
les
adc
xchg
leave
ret
test
sub
xchg
mov
lcall
lock
in
jge
sti
repnz
out
movsl
adc
movsb
hlt
or
jns
inc
dec
data16
and
add
mov
mov
aaa
js
mov
in
adc
mov
jge
cmpsb
mov
call
add
cmc
bnd
mov
push
jmp
push
lds
dec
mov
aam
xchg
jmp
shl
mov
hlt
repnz
jmp
xchg
out
imul
and
jo
push
in
fwait
jns
mov
inc
mov
add
mov
lret
mov
movsbl
pop
sbb
dec
jecxz
lods
mov
xchg
adc
test
jl
push
xor
jmp
mov
pop
pop
iret
inc
or
leave
repnz
outsl
sub
arpl
add
insl
xor
mov
ja
inc
adc
pop
mov
add
rcr
cmp
fdivrs
mov
mov
test
icebp
cmp
fwait
je
cli
icebp
pop
fsts
call
xlat
xor
xlat
jb
inc
aam
gs
xchg
outsb
les
or
sbb
push
ror
xchg
mov
mov
pushf
xlat
xchg
cmp
or
mov
mov
jmp
movsb
or
in
fisubl
xchg
add
jl
fistl
and
mov
call
mov
cmp
cs
xlat
jl
rcrl
xchg
xlat
push
jae
add
aaa
andl
ficompl
sub
mov
xchg
cmp
mov
dec
test
addr16
or
push
and
and
pop
cmpsl
mov
in
dec
out
mov
xor
pop
push
jno
cmc
fildl
jo
aaa
jmp
fwait
sahf
imull
fnstcw
mov
les
jb
xchg
or
lret
push
out
mull
mov
sbb
stos
xchg
inc
je
notb
sbb
dec
mov
mov
sahf
pusha
push
inc
loope
fnstenv
sbb
loop
ljmp
jbe
xchg
rcll
sub
xor
ret
mov
push
outsl
or
rcrl
pop
or
adc
in
pop
jmp
in
adc
add
enter
mov
incb
nop
push
sbb
lcall
dec
outsb
push
cli
mov
in
lock
inc
pop
sbb
fwait
add
in
movsb
imulb
outsb
js
adc
mov
sub
xorb
incl
adc
test
push
test
add
sahf
cmp
cmp
jne
adc
enter
addr16
leave
das
imul
mov
or
pop
cmp
mov
cmp
int3
sbb
cmp
imul
test
iret
loop
into
mov
hlt
outsl
adc
gs
sub
adc
fnstcw
fnsave
insl
rcrl
mov
push
sbb
call
mov
mov
xor
jno,pt
andb
nop
in
pop
lods
xor
push
push
out
inc
xor
dec
cmc
or
push
push
test
mov
add
push
mov
test
mov
cwtl
in
cwtl
jecxz
jae
inc
arpl
add
adc
inc
sahf
les
popf
inc
push
jno
loop
cmpsl
mov
push
cli
or
das
loopne
jmp
pushf
jl
or
mov
out
add
sbb
dec
ficomps
add
lods
int
leave
decb
cld
mov
rorb
cmp
in
sarl
sub
loope
sbb
outsl
push
stos
xchg
jno
pop
pop
imul
jmp
push
lods
add
lret
and
mov
xchg
fcomi
jbe
pop
imul
xchg
fwait
dec
cmpsl
mov
or
adc
rolb
mov
jno
ret
pop
pop
push
inc
mov
and
das
mov
jno
repnz
fistps
clc
mov
sub
or
or
les
push
das
xchg
jg
test
push
iret
xabort
push
fwait
mov
add
mov
xor
add
jmp
mov
lea
xchg
xchg
out
repz
out
xor
push
inc
aaa
lea
xchg
insl
outsl
out
ret
jno
jne
gs
jns
aaa
sub
inc
jnp
fldcw
movsl
push
and
sbb
icebp
and
jecxz
xor
jo
xchg
pop
sub
cmp
jnp
push
dec
mov
and
xor
stos
push
mov
repz
mov
mov
jb
cs
or
insl
mov
sub
into
out
add
or
mov
gs
loope
jp
jp
mov
cwtl
jp
dec
mov
pop
cmp
fdivp
mov
enter
add
outsb
jmp
iret
cmp
mov
pop
cmp
add
call
mov
push
or
cmp
movsb
adc
sarb
inc
aaa
or
xchg
stc
shrl
ja
lret
mov
pushf
inc
dec
scas
imul
xchg
mov
sub
xor
mov
nop
jg
or
repz
jbe
pop
xchg
outsl
jecxz
push
orl
jns
imul
jmp
stos
or
mov
pop
pop
xchg
mov
fists
mov
mov
lock
mov
loope
cmpsb
jno
jns
mov
add
pop
daa
adc
in
lcall
out
push
cmp
data16
sub
test
stc
cld
je
xor
pop
xchg
test
xchg
sbb
push
jp
ret
aaa
icebp
lock
push
pop
jecxz
pop
es
mov
push
insb
push
xlat
insl
addb
ds
fdivl
mov
sbb
pop
movsl
fwait
adc
aaa
in
adc
test
push
xor
or
cltd
mov
fwait
loope
or
add
or
inc
outsb
inc
push
jp
jge
push
push
add
adc
mov
loope
push
ret
add
mov
lods
mov
es
bound
rol
call
aam
cmp
cltd
enter
push
test
repz
jmp
mov
sub
test
pop
pop
adc
xchg
bound
lds
mov
xor
cwtl
lahf
add
sti
mov
xchg
dec
fnstenv
loopne
mov
pop
fildll
insb
xchg
fwait
mov
jno
scas
mov
push
std
pop
enter
jmp
lcall
xchg
lcall
pop
push
enter
cmp
shrb
dec
add
sub
and
xchg
or
cld
xchg
mov
sbb
rcrb
xchg
fdivrs
dec
aas
mov
mov
add
xor
popf
mov
rcr
mov
inc
aam
xor
mov
out
push
les
and
jo
mov
int
fsubs
aaa
and
jae
sub
inc
adc
stos
js
mov
pop
or
dec
repnz
mov
xlat
xchg
xchg
mov
xchg
or
aas
mov
sti
ds
js
pop
or
daa
loop
jns
hlt
int
dec
pop
in
aaa
fistps
xchg
aaa
repnz
sbb
imul
xor
arpl
je
hlt
push
shlb
add
cmp
daa
pushf
std
push
or
pop
add
cmc
push
insl
mov
and
adc
gs
bound
mov
shrl
lock
call
inc
xchg
jns
xor
mov
lahf
subb
xor
mov
cli
loope
adc
mov
pop
iret
xchg
mov
add
adc
loop
pop
ret
std
lahf
data16
add
incb
xchg
gs
push
cld
mov
cmc
pop
std
or
sti
repz
add
fadds
mov
out
xor
xchg
jno
mov
leave
mov
push
push
fldt
inc
cmp
or
out
bound
cld
scas
repz
aaa
mov
add
xchg
mov
pushaw
imul
int3
add
cmp
rcrb
mov
and
xchg
xchg
cs
out
mov
ja
out
pusha
cmpsl
add
xor
jo
xor
xchg
fimull
subb
repz
aas
imull
push
data16
push
cmpsb
adc
call
arpl
fcmovnu
and
cmpsl
and
scas
pop
rcll
lea
pop
xor
jae
jns
jae
dec
jbe
movsb
mov
jg
mov
or
sbb
dec
out
int
fsubs
sub
pop
loope
push
out
push
mov
xlat
int
cli
mov
push
aad
shlb
mov
clc
shl
add
pop
imul
adc
nop
sbb
stos
mov
sub
pop
in
mov
stos
inc
mov
fistl
mov
dec
push
inc
cmpsb
in
cmc
int
sbb
push
mov
cwtl
add
xchg
jge
pop
shl
je
dec
rorb
aas
dec
repnz
and
lea
ds
lcall
rcrb
and
pushf
xchg
xchg
sub
xchg
inc
jmp
or
std
std
ret
sbb
mov
add
stos
sbb
sbb
fcmovu
xchg
add
bound
cmp
lods
iret
out
inc
outsb
inc
mov
dec
mov
cld
jle
leave
pop
icebp
mov
add
jmp
push
mov
int
mov
cld
mov
or
sub
and
push
or
mull
loopne
push
daa
cmp
add
push
jmp
sbb
push
pop
sub
imul
xlat
xor
call
sti
dec
sub
int3
cmp
test
mov
lret
mov
cltd
jo
arpl
psrlw
pop
shrb
lea
add
mov
mov
ja
jb
cmc
test
xor
sbb
out
cmp
cli
outsb
sbb
mov
loope
inc
push
mov
lock
lret
aaa
test
pop
inc
xlat
add
je
jle
or
inc
xchg
sub
out
mov
or
and
sbb
cwtl
and
mov
sbb
jae
pop
sbb
popa
cmp
cwtl
jl
cmp
push
in
jg
sub
daa
push
push
int
sub
push
sub
ljmp
add
add
xchg
movsb
pop
push
sbb
lahf
fistl
dec
pusha
repnz
ja
and
cmp
stc
cmp
lret
fnsave
aam
popa
nop
mov
sbb
cmp
std
nop
mov
inc
cmp
cmp
ficompl
push
jge
sbbl
mov
adc
xchg
jo
fisubrl
pop
xor
fildll
pop
lret
out
push
push
stos
cld
and
call
aam
mov
push
test
add
pop
pop
xchg
sub
mov
pop
pop
cmp
repnz
add
rcll
daa
dec
sti
outsl
push
inc
mov
fsubrs
arpl
lahf
dec
iret
jno
jle
sbb
add
call
push
cld
adcb
in
aaa
and
and
xor
lock
clc
lea
jmp
push
jl
in
popa
push
std
idivl
pop
inc
sete
jo
dec
pusha
insl
xor
inc
add
jg
lods
and
cmp
fsts
mov
out
jbe
insl
test
ljmp
xor
push
stos
in
ds
mov
cltd
mov
push
into
add
jecxz
xor
cs
ss
inc
movsl
outsl
iret
shr
rclb
pop
mov
dec
sbb
jl
add
stc
es
adc
push
or
in
ficoms
fwait
add
dec
pop
push
mov
movsb
fldcw
pop
std
dec
inc
xor
mov
jge
push
mov
scas
hlt
ja
xchg
loop,pn
dec
push
xor
pcmpeqb
fistpl
mov
mov
lock
sahf
mov
pop
inc
xor
push
jp
jg
cmp
jecxz
mov
and
dec
lahf
shrl
sbb
adc
subl
loopne
mov
xchg
je
jno
push
roll
je
and
jne
ljmp
pop
xchg
in
stos
cmpsl
out
sbbl
push
test
cmp
mov
cmp
ds
mov
fcmovne
or
int3
mov
pusha
mov
cs
jno
jl
cmp
jbe
js
sub
xor
or
push
addr16
cmpb
sbb
cmpsb
jp
mov
xor
mov
mov
add
adc
lds
mov
in
sub
sahf
stc
add
mov
and
aas
fildll
xchg
test
cmp
or
jecxz
shl
lock
dec
and
inc
inc
sbb
mov
aas
mov
popa
jle
cwtl
das
mov
jp
out
ds
lret
ja
or
sub
lcall
xor
jp
sub
xor
mov
mov
xor
cmpsl
lock
xchg
out
cmp
test
or
call
imul
mov
sub
cs
xchg
insl
pop
adc
push
sahf
out
fsubr
pop
cld
push
dec
stc
stc
xor
imul
mov
lds
dec
scas
lret
xlat
pusha
lock
into
lret
out
pop
inc
sub
js
ja
incb
inc
daa
aas
dec
imul
out
jle
jae
xchg
sub
mov
ljmp
fmull
pop
mov
in
dec
loopne
sbb
js
adc
jmp
stos
inc
cmpl
lock
adc
cmp
cmp
imul
hlt
ja
aaa
mov
cmpsl
push
cmp
or
call
push
push
or
test
pushf
push
ss
test
mov
lea
cmp
jnp
rclb
mov
in
js
es
dec
sbbl
notl
popf
cltd
andl
adc
dec
pop
ret
push
fsubrs
sub
dec
cmp
mov
push
adcb
push
push
pop
push
outsb
lcall
push
es
js
aas
dec
cmpsl
xor
xchg
push
loop
adc
mov
adc
mov
shrb
ds
call
fisubrl
jae
add
pop
xchg
push
mov
insb
int3
adc
fs
pop
push
ss
mov
shrl
stc
nop
cmp
cmpsb
cmpsb
xor
stos
add
loopne
push
jbe
mov
pop
ljmp
test
jg
or
push
jns
loope
sbb
cmovne
popa
ret
sbb
aaa
test
shrb
cmp
pushl
lahf
xor
popa
idivl
inc
mov
adc
mov
stos
cmp
test
xchg
xor
daa
daa
mov
or
js
and
in
dec
adc
out
testb
and
and
arpl
stos
fisubl
aaa
jge
jle
mov
inc
sbb
and
fidivrl
aad
or
dec
insl
andl
mov
adc
fidivrl
loopne
add
fbld
xor
in
ljmp
popl
fdivrl
xchg
fbld
cmc
xchg
test
jns
inc
lods
adc
inc
cmp
add
in
mov
sbb
and
push
push
jo
jl
jp
outsl
pop
stos
mov
pushl
outsl
dec
stos
frstor
pop
jo
std
sub
dec
xor
bound
cmp
pop
xchg
addr16
xor
xchg
sbb
jge
inc
xchg
inc
mov
mov
test
int3
dec
int
cmp
jb
cwtl
pusha
lds
cmp
fdivr
and
lret
mov
sbb
sub
pop
call
and
call
aad
mov
pop
popf
push
sbb
xchg
pop
fmuls
clc
les
sub
mov
jmp
mov
or
lock
pop
fsubs
mov
push
aas
mov
cmp
add
testl
adc
xor
repz
les
adc
xchg
pop
sahf
xchg
idivb
fstl
movsl
pop
pop
inc
sti
jl
ljmp
loope
fdivrp
pop
push
add
add
mov
fstp
or
in
xor
insl
cmp
rol
add
xor
inc
bound
dec
inc
sbb
or
outsl
cwtl
lods
fstp
cwtl
fisttpl
mov
aas
mov
aas
add
xor
movsl
loope
xor
decl
negl
adc
xchg
mov
or
cmp
ds
mov
repnz
or
mov
loopne
push
call
test
or
xor
mov
and
repz
ljmp
ret
scas
sub
and
jnp
lahf
pushf
cmp
fimuls
mov
lea
repz
add
or
dec
mov
pop
pop
adc
dec
test
lods
cld
cmp
out
fstps
rcll
or
aaa
mov
or
cmpsl
adc
and
push
addb
pop
mov
inc
cmp
adc
xchg
pop
jnp
and
std
cmc
inc
mov
outsl
imul
inc
adc
andl
cmp
and
cmpsl
je
inc
cwtl
push
pop
jnp
nop
cmp
enter
icebp
in
scas
pop
sbb
or
mov
fcmovnb
gs
or
sub
in
leave
or
xchg
repz
ja
xchg
out
jge
sti
ljmp
inc
xor
dec
outsb
arpl
or
jnp
jecxz
mov
leave
or
sub
push
cmp
jo
mov
popf
mov
mov
divb
cli
mov
or
push
arpl
ja
xor
cmc
mov
dec
cmp
and
lea
add
dec
push
mov
mov
lock
in
int
xchg
or
in
mov
cmp
and
dec
mov
ds
dec
push
vxorps
xchg
cmp
sub
add
pop
hlt
jb
sub
sti
cmp
fsub
icebp
cli
mov
mov
jmp
cmp
loop
mov
imul
jns
bound
popa
adc
bound
mov
subl
popa
jbe
pop
les
aam
push
movsb
inc
mov
std
add
push
lret
push
mov
testl
out
jp
and
jge
jle
sub
icebp
fsubrp
sub
cld
mov
add
mov
push
xchg
dec
pop
lods
imul
push
push
es
ss
call
arpl
leave
arpl
push
xor
pop
popa
dec
mov
sbb
xchg
xchg
std
std
pop
pop
or
cmp
and
addr16
cld
push
push
imul
push
mov
mov
push
aas
push
mov
mov
sbb
enter
aas
xchg
pop
movsl
lds
dec
outsl
cmpb
dec
imul
arpl
pop
add
push
mov
lcall
jo
test
mov
adc
add
add
and
add
add
movsl
icebp
push
loope
clc
test
sti
push
stos
cmp
push
fidivl
inc
pop
fwait
inc
dec
movsb
pop
jb
fwait
mov
lods
lcall
jmp
pushf
xchg
sbb
call
shl
xchg
shlb
sbbl
scas
cmp
fs
pop
arpl
and
movntps
fnstenv
imul
push
adc
int
and
aas
ljmp
imul
push
and
and
xchg
xchg
nop
mov
lret
sbb
push
pop
or
jg,pt
sbb
dec
jg
out
out
sbb
mov
jne
pop
push
dec
daa
std
push
lret
pop
push
sbb
sub
scas
hlt
lods
lods
out
dec
es
add
out
aad
push
xchg
idivl
stos
and
mov
enter
and
imul
and
jecxz
xchg
sub
cmp
xchg
push
cld
fsts
cwtl
addl
lods
or
mov
jle
enter
cli
mov
mov
jge
sbb
cli
loope
insl
cmp
mov
nop
mov
sbb
mov
add
adc
mov
ss
pop
enter
xchg
adc
lea
out
lods
mov
and
push
xchg
sbb
mov
mov
xorb
sbb
add
cltd
loope
xchg
test
and
das
mov
lret
ffreep
sbb
push
sbb
push
into
lcall
faddl
jno
xchg
les
mov
aas
adc
aaa
shlb
add
popa
rcl
icebp
int3
insb
ret
inc
mov
pop
sub
xor
mov
nop
xor
testl
dec
sbb
fs
push
xchg
adc
mov
enter
xchg
and
divl
insl
fdivl
aas
sub
movsl
sub
psrlw
test
jl
sbb
movlps
pop
pop
and
movsl
jecxz
loope
mov
aas
inc
push
dec
sub
inc
or
jne
mov
popa
cmp
jge
rol
ljmp
int3
xor
mov
push
into
je
fcoms
inc
xchg
adc
sahf
pop
fcomps
cmc
stos
add
outsl
scas
mov
sub
jb
mov
push
testl
mov
fs
push
sbb
rorl
lret
xchg
data16
nop
scas
cmc
cmp
push
out
shll
cwtl
test
jge
or
jns
sbb
inc
loop
bound
mov
pop
inc
cmpsb
push
dec
xchg
adc
bound
inc
lds
and
js
gs
inc
popf
sbb
cli
ds
roll
sub
loop
mov
sub
ret
jle
daa
adc
push
sub
je
lock
add
call
aas
or
aam
dec
test
cmc
iret
mull
popf
call
push
fldcw
aas
inc
cltd
jp
ss
xchg
pop
test
arpl
loop
gs
lahf
test
in
in
mov
ja
sbb
je
cmpsb
aad
push
repnz
inc
xor
xchg
cltd
cmpsl
std
insl
or
pop
jmp
pop
xor
shrb
cmpsb
xchg
je
les
loope
subl
insb
inc
inc
mov
mov
add
adc
fs
mov
cwtl
sub
mov
ret
subl
pushf
mov
cmp
out
inc
test
adc
cmp
mov
mov
adc
or
fstpl
sub
lahf
loope
xchg
pop
cld
pop
or
or
ss
adc
ljmp
mov
jnp
xchg
mov
bound
clc
test
lret
out
cmc
xchg
scas
xchg
jmp
outsb
jp
inc
mov
adc
out
and
inc
out
popf
inc
test
and
outsb
cltd
mov
cwtl
sub
pop
outsl
push
pop
or
mov
cmp
push
mov
mov
sub
mov
stos
in
or
mov
pusha
jae
inc
mov
jae
into
pop
inc
in
fmuls
movsb
ja
jmp
push
cmpsb
mov
jns
adcl
das
and
lock
inc
sarb
or
sub
out
arpl
xchg
sbb
inc
test
hlt
mov
mov
ss
pop
lods
xchg
push
or
scas
into
mov
push
rolb
shlb
ret
fldenv
dec
enter
sbb
int
mov
pusha
daa
in
call
push
jle
fisubrl
sti
add
lock
jp
inc
jo
ret
add
sub
daa
lods
add
xchg
inc
add
lret
jg
lret
or
imul
pop
clc
lods
fdiv
stos
or
push
lahf
lcall
icebp
icebp
pop
in
fwait
lods
repnz
cmp
orl
idivb
or
pop
dec
xchg
xchg
push
cmp
dec
inc
add
out
fwait
or
movsb
push
and
xchg
xchg
mov
in
dec
xor
adc
das
add
cld
mov
sbb
flds
lds
loopne
repz
repz
ret
movsl
aaa
incb
mov
outsb
fistpll
sbb
push
mov
fbld
or
pushf
sbb
jo
push
mov
jae
mov
pushf
fcmovb
outsl
dec
xchg
sbb
push
inc
push
push
mov
shl
dec
xor
xor
out
aas
movb
fsubr
movsl
jmp
sub
sub
inc
mov
push
xor
decl
rcrb
and
push
out
pop
inc
or
mov
jno
adc
add
mov
xchg
into
xchg
sub
sahf
and
pushf
test
stc
repnz
mov
dec
arpl
push
inc
push
inc
jbe
and
insl
cmpxchg
add
push
fdivrl
inc
add
lods
mov
sgdtl
dec
push
add
add
fdivrl
lods
sbb
push
and
inc
xlat
loope
adcb
push
imul
imulb
testl
cmp
mov
cwtl
lcall
and
or
adc
sub
mov
sahf
and
add
repz
mov
int3
or
push
outsb
adc
adc
sub
dec
mov
sarl
mov
xlat
push
movsb
gs
sub
mov
and
ret
mov
and
popa
repnz
inc
mov
insl
inc
jmp
loop
fistps
inc
pusha
cli
jo
arpl
adc
xchg
shll
hlt
or
orl
dec
push
xchg
loop
push
xchg
sbb
in
mov
mov
adc
jmp
syscall
jbe
jns
xchg
dec
push
pusha
mov
or
mov
shr
stc
and
lods
adc
call
sub
jbe
dec
out
icebp
and
inc
fcmovu
sub
testl
xchg
lock
subb
outsb
pop
push
mov
push
dec
shrl
mov
push
dec
cmp
mov
fldt
out
ja
jae
adc
out
cld
insb
roll
aam
push
xchg
ficompl
pop
ret
jno
adc
mov
ret
mov
mov
fadds
adc
pop
inc
mov
das
sti
mov
xchg
pushf
idivl
adc
out
mov
xor
ret
cs
std
or
pop
aad
push
cmp
stos
and
pop
push
jg
aas
aad
push
jp
pop
outsl
repnz
add
enter
or
popf
mov
imul
je
lret
rcll
pop
fnstenv
cmp
pop
and
mov
add
insl
icebp
addr16
lea
mov
and
pop
inc
imul
mov
shlb
mov
repz
divl
adc
fs
leave
imul
lret
mov
js
fdivp
xchg
push
sub
rolb
sahf
sbb
jg
cli
sarl
push
fstpt
pusha
mov
push
subb
xchg
sub
cmc
shll
pop
aas
test
cmp
xor
ss
inc
hlt
and
repz
nop
movsl
adc
xor
push
flds
pushf
inc
scas
stos
jno
fidivrs
loopne
arpl
roll
test
sti
hlt
or
outsb
or
cmp
fildl
xor
mov
mov
xor
add
jecxz
jmp
stos
jno
sbb
cmp
es
int3
mov
xor
jae
jbe
daa
adc
and
in
cmp
jns
push
sbb
cmpsl
addr16
xchg
cli
pop
pop
stc
je
insl
xlat
pop
mov
scas
mov
loopne
pop
mov
pop
mov
icebp
pop
xlat
ljmp
push
ret
sub
ret
mov
fstpt
ret
je
mov
sbb
push
data16
ss
repnz
sbb
inc
in
lods
lds
frstor
addr16
ret
out
xchg
cmp
xor
push
mov
cmp
push
fcoml
mov
movsb
mov
icebp
xchg
bound
test
pop
jnp
js
adc
mov
pop
pop
mov
lcall
data16
sbb
mov
mov
mov
arpl
fnsave
insl
outsl
push
and
fwait
call
fs
movsb
jb
in
aas
out
sbb
xlat
xchg
inc
cmc
mov
pop
pop
arpl
xor
pop
xlat
xchg
mov
std
in
pop
popf
stos
in
fisubs
les
add
push
sbb
dec
and
xchg
mov
je
std
pop
lret
push
lock
aaa
cmp
and
adc
or
mov
test
out
pop
jnp
xchg
call
jmp
mov
sub
out
inc
sbb
cmc
xlat
repz
mov
test
fnstenv
enter
and
imul
cmpb
aad
test
lds
iret
mov
add
ret
popa
dec
xor
jno
pop
and
movsl
cwtl
int3
mov
push
fnstcw
xchg
and
mov
std
xchg
pop
xchg
pop
inc
xchg
xlat
mov
mov
xor
cmp
aaa
int3
xchg
movsb
xor
movb
mov
sti
dec
repz
outsb
add
loope
cmp
lods
flds
pop
jno
pusha
xor
jecxz
dec
shr
test
push
pop
push
xchg
mov
js
in
scas
int
rorb
mov
jg
out
push
mov
xor
insb
jmp
decb
sub
mov
test
sbb
in
fists
xchg
add
ljmp
push
jg
cmc
adc
mov
mov
jnp
enter
outsb
aad
or
add
lcall
mov
xor
sub
sbb
push
cs
pop
cmpsl
pop
insb
dec
xor
cmp
ljmp
inc
lahf
pop
mov
push
out
mov
xor
gs
fldcw
push
jae
aaa
lcall
and
xor
and
adc
cwtl
sbb
popf
push
in
xchg
sub
stc
cmpsl
sti
inc
addr16
out
mov
pop
lds
jge
mov
pop
push
cld
cwtl
pop
mov
int3
hlt
out
and
jnp
push
inc
mov
push
jecxz
insb
xchg
popa
stos
push
xchg
and
xor
into
xor
mov
push
xchg
rcrl
jg
push
jbe
fs
scas
mov
mov
xor
mov
and
cmp
imul
jbe
inc
inc
inc
or
bound
push
aad
pop
dec
inc
xlat
push
and
cmpsb
cwtd
outsl
test
xorl
hlt
test
cmp
int
ss
cmc
add
sub
and
sub
stc
dec
push
mov
add
and
pop
mov
xchg
dec
aad
test
mov
adc
call
sahf
lods
xchg
cs
sub
sub
shrl
jo
pop
movsb
pop
insb
daa
fld
aas
int
ss
sbb
sub
out
jns
xchg
mov
cmp
fdivrl
cwtl
xlat
xchg
cmp
mov
xor
cmp
movsb
jae
ss
add
pop
pop
int
loop
sbb
mov
dec
adc
lods
lcall
fimull
imul
push
inc
jo
inc
sbb
push
xor
xchg
arpl
cltd
jmp
cmp
mov
daa
cmp
data16
dec
mov
loop
mov
mov
fstpl
and
imul
xchg
or
sti
addr16
es
mov
test
js
cmp
call
in
or
sbb
lods
loop
and
or
mov
mov
dec
dec
lds
mov
loope
push
sbb
jne
cltd
cmp
push
mov
jb
sti
push
fldenv
arpl
xor
xchg
lds
cmp
lret
fcoms
in
rorl
fistpl
out
mov
out
xchg
rol
shlb
std
into
push
xor
mov
pop
cmp
iret
in
int3
shl
or
add
or
sbb
iret
lods
mov
dec
jmp
lret
mov
fsts
outsl
push
push
mov
testl
rcl
aad
xor
enter
pop
push
ret
imul
cld
push
loope
int3
xorl
mov
mov
call
cmpsb
subb
aas
out
sti
sub
and
cmc
add
pushf
movsl
sub
cmp
sub
inc
addr16
lret
push
mov
fisttps
mov
and
cmp
data16
xchg
jno
cwtl
sti
inc
hlt
xchg
pop
fcmovnbe
jecxz
lret
sbb
mov
ss
sahf
stos
sub
enter
stc
jbe
xorb
mov
clc
fnstcw
or
xor
aas
insl
lock
add
pop
ljmp
aam
jb
adc
dec
adc
fwait
movsl
shlb
and
jns
es
adc
push
fistpll
dec
pop
in
ret
bound
pop
sub
sub
lahf
mov
jg
fidivrs
xchg
jae
sub
daa
dec
out
pop
pop
scas
sbb
jne
ja
cwtl
push
cmc
add
and
add
out
sti
inc
scas
aam
or
and
fiaddl
fldcw
std
and
push
xchg
sub
sbb
pop
out
test
addl
loopne
insl
or
or
and
dec
lret
in
adcl
leave
cmpsb
jne
jg
fidivs
xor
xor
in
xor
flds
cmpsl
xchg
mov
push
lea
or
hlt
push
mov
in
or
push
mov
addb
push
dec
dec
dec
iret
jecxz
out
push
scas
jo
jno
cmpb
clc
addb
pop
iret
xchg
nop
mov
out
push
mov
pop
jae
lcall
push
int3
jo
inc
inc
sbb
xor
adc
cwtl
mov
outsl
stos
pop
push
jns
les
push
insb
ficoms
mov
je
add
cld
out
mov
xchg
mov
je
int
hlt
push
adc
pop
sbb
test
xchg
jae
push
mov
jmp
mov
fnstenv
call
xchg
sub
aam
inc
adc
inc
add
clc
lret
stc
sbb
out
lods
cmpsb
mov
sub
ja
icebp
sub
mov
mov
cmp
mov
xchg
popa
mov
and
push
sbb
lods
mov
jp
repnz
or
jle
jne
jg
js
aam
xor
push
dec
data16
scas
pop
xchg
mul
jo
loop
lahf
xchg
lcall
lret
mov
sti
cmp
lahf
add
fisttps
mov
jle
test
test
aam
icebp
stc
nop
inc
push
incb
aam
cmp
inc
push
insb
movsb
and
inc
dec
addr16
sbb
out
shl
lea
inc
addr16
aas
mov
add
aam
std
outsl
dec
ret
imul
dec
dec
and
add
jmp
xchg
es
out
mov
cmp
jb
cmpsb
mov
test
outsl
lock
sub
dec
and
sub
or
aam
cltd
add
fbld
lret
pop
jmp
insl
movsb
dec
jns
rcl
sbb
aad
cmp
mov
movsb
inc
mov
push
leave
adc
or
mov
jbe
js
dec
icebp
mov
shlb
and
into
aas
xchg
push
cli
and
sbb
aaa
cli
xor
stos
inc
jno
stc
cmpsb
inc
pop
lods
inc
or
repz
dec
loop
outsl
mov
jle
sub
or
or
xor
cltd
add
mov
pop
fwait
aad
sarl
jle
mov
sub
jle
inc
popf
test
mov
cmp
nop
pmulhw
inc
cld
in
pusha
sbb
insb
push
inc
aaa
rolb
movsl
mov
pusha
xchg
adc
fwait
or
fisubrl
leave
xchg
sub
mov
jge
or
test
es
dec
in
dec
pslld
or
int3
adc
shll
lds
or
push
rcrb
pusha
sub
loope
loopne
movsl
inc
ja
in
xchg
scas
jmp
std
dec
jne
ss
mov
lods
pop
or
cwtl
xor
inc
ror
lcall
inc
inc
sub
cmp
pop
jnp
jae
sub
das
rcrl
adc
lock
xor
ds
push
aam
mov
and
jo
int
adc
dec
insb
sub
add
subl
pop
insl
mov
fs
lea
nop
jbe
lods
pop
aas
std
ss
adc
and
push
int3
pop
add
xor
rcll
sbb
mov
out
cmc
test
fiaddl
cli
adc
mov
rcrl
sub
mov
lock
sbb
inc
inc
dec
outsb
mov
jl
mov
mov
mov
sbb
pushf
ds
cmc
or
pop
cmp
mov
jno
inc
sub
stos
clc
pop
mov
xchg
mov
jnp
pushf
pop
mov
fsubrl
push
mov
xchg
gs
stos
cwtl
out
adc
addb
stc
xor
add
mov
and
outsl
push
mov
mov
adcl
rorb
xchg
cmp
or
fninit
adc
xchg
out
xchg
es
jge
pop
dec
mov
cld
adc
inc
add
and
push
enter
dec
shll
xor
cmp
add
cmpsb
jnp
lock
cltd
mov
loop
mov
pushf
stos
sub
cli
movsl
push
fldcw
es
rorb
push
xchg
mov
sbbb
sbb
add
push
mov
dec
mov
mov
inc
push
adc
inc
or
jb
movsb
ds
icebp
add
arpl
mov
cld
shll
add
dec
gs
in
pop
adc
and
sbb
sub
bound
cld
dec
jl
cld
or
out
or
push
pushf
push
test
lcall
xor
lods
sbb
lods
lret
xchg
adcl
sarl
sub
mov
xor
xchg
adc
mov
adc
adcl
gs
xor
xorl
push
add
jle
jmp
dec
test
cld
mov
roll
push
ror
pop
aam
jbe
hlt
push
mov
mov
xor
int3
bound
pop
xchg
je
add
loopne
in
es
hlt
mov
int
imulb
out
pusha
adc
sub
pop
mov
mov
adc
es
xor
sysenter
lahf
or
fstps
mov
es
ficomps
sub
clc
sbb
mov
outsb
subl
push
mov
lea
cli
bound
cmp
aad
mov
cld
mulb
outsb
into
notl
flds
std
push
popa
js
adc
fdivl
imul
pop
pop
pop
daa
cmpsb
dec
pmulhw
test
add
mov
leave
cmpl
mov
cmc
adc
fadd
xchg
nop
pop
xor
addr16
push
xor
mov
adc
and
test
rcrb
jge
push
jecxz
cwtl
xorl
sub
adc
xchg
push
idiv
jns
inc
divb
hlt
dec
xor
out
bswap
sbb
jb
test
pop
inc
push
insb
stos
call
int
mov
mov
sub
mov
jl
cmp
sub
jge
inc
mov
addr16
ljmp
xchg
add
and
imul
addb
movsl
mov
bound
sbbl
mov
pop
pop
xlat
pop
pusha
les
sub
cli
ss
push
lret
xor
popf
stc
mov
int
add
push
xchg
pushf
in
mov
push
js
ret
sti
test
mov
sub
sarl
insb
loop
ja
or
xchg
test
divl
lret
xchg
and
or
cmp
push
loope
ds
in
or
loope
mov
imul
or
shlb
sar
pop
out
daa
fbld
shl
jno
cmp
leave
mov
ja
xor
mov
jle
xchg
xor
xchg
popf
mov
pop
test
push
jecxz
add
mov
out
mov
mov
sbb
xor
jl
in
pop
cltd
add
xchg
adc
sub
jo
leave
or
mov
and
xor
int3
dec
leave
fadds
mov
flds
inc
enter
dec
xor
mov
sarb
stc
sbb
jge
dec
jb
call
pop
pop
leave
sbb
lret
scas
fidivs
xor
aam
sub
add
loope
mov
pop
movb
lock
or
sbb
movsl
jecxz
into
push
int3
xor
sti
xor
lea
sbb
std
push
push
cmp
jmp
xor
mov
mov
lea
mov
cmp
xlat
sbb
xchg
push
icebp
fisubs
sub
mov
xchg
push
gs
inc
dec
and
call
aas
rcrb
jns
popf
popa
cld
push
test
mov
xchg
insb
add
imul
jnp
mov
mov
data16
xor
sbb
and
or
pop
pop
stos
dec
movsb
adc
add
data16
scas
mov
jo
imul
xor
insb
mov
dec
out
pop
addr16
add
push
sbb
insl
jp
push
jp
stos
add
scas
mov
popf
or
negl
clc
sub
adc
je
mov
sub
movl
outsb
lret
mov
lcall
lods
jb
and
addb
xchg
ja
shr
in
mov
in
popa
icebp
aam
pandn
xchg
add
cltd
arpl
das
jg
jno
stos
ret
lcall
or
lahf
scas
testl
sbb
jne
test
push
fildll
dec
dec
enter
test
inc
xor
jl
mov
mov
pop
jecxz
pusha
adc
fiaddl
sub
nop
add
cs
sbb
lahf
push
inc
fld
fsubrs
xlat
xchg
and
hlt
fsubr
dec
pop
fsubrs
and
lds
sbb
sub
stos
pop
andb
xor
pop
pop
add
decl
jo
sub
adcl
jp
js
xor
repz
jl
std
adc
aaa
pop
dec
mov
jl
cmpsl
mov
push
mov
es
pop
jecxz
loopne
xor
and
sub
dec
jg
cltd
sub
loope
mov
decl
sti
shll
dec
dec
or
mov
lods
fcmovnu
ret
push
lea
mov
std
jle
mov
movsb
fldenv
xchg
repz
test
iret
das
mov
inc
pop
sub
xor
daa
jp
fwait
test
jne
xlat
pop
or
mov
cmp
xor
push
pusha
inc
movsl
mov
leave
inc
out
out
jns
inc
sub
xchg
mov
test
das
or
imul
bound
rcrl
aaa
mov
mov
sarl
and
xor
jp
dec
jp
scas
mov
cmp
jbe
dec
pop
adc
xlat
mov
outsl
jno
idiv
dec
icebp
inc
rorb
jg
in
cmp
pand
scas
pop
js
sbbb
icebp
sbb
jns
sub
insl
xor
sti
cs
mov
sub
xchg
mov
xor
movsb
push
push
inc
cwtl
dec
sbb
cmpsb
ds
mov
arpl
jne
xor
xor
mov
pushf
xchg
test
pop
push
addr16
dec
dec
ljmp
adc
test
mov
sbb
test
mov
lcall
movsl
add
jae
das
scas
pusha
jecxz
addl
enter
test
enter
fsts
in
mov
in
outsb
dec
xchg
je
lcall
inc
stos
or
mov
enter
repz
mov
outsl
loop
push
jecxz
adc
xchg
pop
sbb
rorb
sbb
mov
ljmp
adc
divl
mov
arpl
sbb
push
stos
push
ljmp
cmp
insb
pop
cld
les
popf
or
pop
std
mov
outsb
jp
inc
nop
popf
push
ss
je
mov
xlat
jp
movsl
orb
inc
fistps
push
jl
rcl
insb
repz
movntps
js
xchg
stc
fidivrs
in
scas
xor
jb
aam
add
jp
fwait
out
cld
pop
jne
pusha
loop
push
lods
mov
pusha
hlt
sub
mov
mov
jle
jb
and
push
add
pop
xchg
mov
push
es
xchg
in
and
pusha
aam
rcr
out
adc
jns
addr16
xchg
mov
movsl
pushf
dec
bound
cmp
lahf
das
ficoml
jecxz
fcompl
ret
inc
mov
pusha
lds
and
jns
aaa
lods
sarl
mov
test
das
fcmovu
mov
shrl
inc
mov
cmc
jns
loop
loope
push
jecxz
xlat
xor
mov
dec
into
scas
gs
sbb
and
loop
mull
sahf
idivb
test
loopne
sub
and
subb
sti
sub
push
mov
jno
out
ds
push
xchg
dec
inc
test
inc
pop
addb
lds
mov
mov
jns
in
loope
add
adc
jnp
outsb
out
mov
xchg
sub
pop
adc
in
pop
data16
imul
cmc
mov
inc
add
xor
xchg
and
in
aam
enter
popf
cmp
cmpsb
jb
sub
test
jbe
lea
pop
sbb
mov
push
aas
out
mov
pop
xchg
inc
fdivrs
fidivrl
mov
sarb
jecxz
fistpl
mov
cli
pop
insb
ss
mov
mov
sbb
mov
imul
cli
fcmovu
mov
call
xor
mov
pop
scas
std
xchg
xor
stos
mov
bound
decl
int
jns
shll
out
jnp
mov
pop
add
cmp
and
leave
sbb
mov
cmp
or
xchg
stc
cld
inc
ds
dec
and
or
movsl
mov
inc
in
inc
call
pop
dec
dec
jecxz
jb
mov
inc
mov
mov
xchg
arpl
xchg
mov
notb
cs
icebp
mov
popa
in
or
and
dec
cmp
jle
jo
add
adc
aaa
mov
push
mov
ret
sub
int
xor
mov
sbb
push
inc
jle
sub
jg
mov
pop
lcall
pop
xor
test
mov
jle
pop
loopne
scas
push
xchg
and
daa
dec
mov
xchg
push
test
jne
sbb
stos
pop
or
cmpl
repz
pop
sbb
add
dec
jno
dec
mov
and
lret
fcmovnb
add
scas
cltd
xchg
outsl
in
mov
mov
pop
adc
aam
push
jmp
sti
and
movsb
jns
adcl
imul
js
sbb
mov
test
inc
mov
jmp
mov
inc
repz
leave
pop
aam
sub
sub
les
mov
sbb
xorl
pop
push
lret
cmp
call
mov
mov
dec
push
xor
test
add
adc
decb
jle
sub
xchg
test
cmc
rol
add
vmovsd
jo
jge
mov
cmpb
inc
inc
addr16
loope
into
or
test
xsave
loopne
mov
rcll
pop
jns
fmull
addr16
fimull
mov
mov
sarl
jno
dec
sar
sbb
loopne
or
inc
cmp
adc
pop
xchg
mov
nopl
xchg
add
nop
push
push
cmp
aaa
and
rsm
xchg
outsl
or
orb
lret
jno
mov
or
cmp
push
aad
sub
push
ret
aam
xchg
inc
or
ja
test
sbb
les
jnp
jl
cwtl
push
lahf
mov
icebp
aaa
int3
pusha
jnp
mov
fst
push
and
cmc
sbb
cmp
loope
fidivl
pushf
jb
insl
insb
ret
int3
sbb
jno
repnz
sbb
enter
pop
int3
bound
jnp
xchg
jmp
pop
shrb
int3
xlat
lret
cwtl
sbb
cmp
adc
xor
mov
out
lods
adc
inc
push
pop
das
and
fs
mov
mov
shll
fldt
jg
dec
data16
push
push
stc
pop
fsubr
xor
xor
dec
add
cmp
cmp
jl
mov
in
mov
push
fmull
push
es
movsl
outsb
repnz
inc
jle
mov
cmp
ljmp
outsl
cs
ss
mov
sbb
imul
jl
loope
decb
sbb
in
or
pusha
cmp
add
loop
pop
aad
mov
aam
mov
pop
xchg
lret
cld
mov
daa
inc
xchg
iret
push
std
dec
adc
or
pop
notl
mov
pop
arpl
iret
stc
push
adc
xchg
push
pop
jb
lret
sub
imulb
mov
hlt
fisubs
or
icebp
in
jo
lds
popf
pop
movsb
insl
hlt
mov
pop
add
adc
mull
test
jae
and
out
test
inc
repz
icebp
repz
js
xchg
cs
push
xchg
insl
pushf
pushf
pusha
les
dec
mov
out
mov
stos
xchg
aaa
in
mov
xchg
fs
mov
jmp
xchg
loope
push
int
sub
cmp
add
adc
adc
lods
stos
pop
je
mov
lds
imul
repnz
xlat
jb
pop
into
movsl
mov
aas
push
sbb
xor
repz
xchg
mov
mov
pushf
xchg
xchg
and
mov
adc
inc
xchg
sub
test
xchg
dec
mov
cmp
push
jnp
pop
mov
in
xchg
or
inc
jl
loope
dec
add
ret
xchg
iret
test
cltd
clc
dec
ret
icebp
and
inc
mov
push
fisubrs
pop
xchg
xchg
mov
xchg
push
pop
scas
ret
xor
insb
mov
mov
popa
lods
sti
jb
push
adc
xor
ljmp
mov
test
int
adc
fstl
mov
stos
scas
or
testl
fstps
inc
add
les
rcrl
xor
dec
pop
fnsave
mov
pop
jmp
sbb
cmp
cli
mov
repnz
outsb
adc
and
push
or
in
and
clc
push
icebp
jge
out
sub
cmp
sahf
or
push
xchg
mov
ljmp
popa
aam
vaddpd
jno
lea
nop
inc
dec
sub
outsl
cmp
adc
cmp
sbb
call
pop
out
movsl
cmp
dec
jnp
insl
jle
gs
mov
outsl
adcb
int3
mov
cmp
cmpsl
dec
sbb
push
mov
dec
pop
test
sbb
mov
icebp
out
stos
jns
xchg
enter
mov
mov
mov
inc
xchg
test
mov
loop
push
shll
lds
addr16
cld
jmp
jb
pop
test
jmp
jnp
xor
pop
mov
pop
and
jbe
std
pop
pop
aas
out
js
mov
pushf
xchg
mov
push
cs
test
jmp
push
movsb
pop
cmp
sbb
and
dec
out
and
andb
cmc
or
icebp
in
dec
jmp
lar
adc
insl
test
popf
add
fiaddl
or
xchg
fstpl
mov
adc
imul
xchg
sub
mov
enter
or
outsl
fsubrs
fisttpll
es
andb
daa
add
xchg
pop
and
mov
rcll
jb
mov
pop
xchg
sbb
push
mov
outsb
cmp
imul
jge
test
jno
sbb
dec
add
scas
std
mov
jge
test
sub
fsts
outsb
jb
xchg
repnz
sub
push
inc
jg
mov
mov
dec
adcl
jb
cmp
aam
or
repnz
dec
jbe
rcrl
add
repnz
lcall
lret
adc
push
or
test
or
lahf
ja
jp
in
mov
sub
jbe
scas
out
fcmovnbe
jnp
out
scas
and
or
add
inc
les
iret
or
test
mov
mov
mov
out
fcomip
or
mov
pop
ret
pop
xchg
cld
or
lock
and
ss
dec
xchg
stos
pop
and
and
sti
aas
or
aam
mov
insb
icebp
bound
cmp
jmp
and
addr16
xchg
pushf
or
incb
sub
pop
stc
mov
mov
inc
stos
xlat
data16
or
mov
add
push
mov
outsl
daa
lods
mov
xlat
cmp
pop
cmp
and
lock
fpatan
jle
orb
iret
pop
adc
je
pop
jl
addr16
dec
mov
movsb
xor
sti
mov
fbld
std
xchg
dec
mov
in
and
cmpsb
mov
sbb
mov
pusha
sahf
les
incl
mov
jmp
or
lods
in
in
push
xchg
pop
lods
jecxz
out
cmp
int
mov
or
mov
in
sti
shlb
mov
xor
fs
aad
mov
addr16
call
sub
cld
notb
ljmp
adc
and
add
pop
icebp
cmp
pop
pop
movsb
mov
or
cmp
sbbb
dec
dec
mov
dec
lea
dec
into
adc
sbb
aad
das
adc
xor
scas
cmp
movsl
sbb
or
lea
fcoml
and
stos
pop
add
push
add
jb
xchg
mov
jae
push
adc
xchg
or
and
push
jp
arpl
push
jle
inc
jne
add
mov
xchg
aaa
rclb
cs
hlt
push
push
out
pop
sti
mov
aaa
jle
shlb
mov
out
enter
sub
push
mov
pop
xchg
dec
shlb
inc
pop
cmp
sbb
aad
ss
out
idivb
cmpsl
inc
lret
push
xchg
fimull
or
adc
push
pop
in
inc
mov
in
out
mov
test
adc
dec
pop
mov
cmp
push
sarl
xchg
cmp
sub
addr16
outsl
sbb
daa
jae
sub
pusha
add
testl
pop
cmp
push
loope
xor
nop
push
jb
jg
inc
mov
mov
scas
hlt
mov
adc
pop
hlt
jle
inc
mov
adc
inc
repnz
push
pop
popf
jno
or
mov
ret
push
fisttps
fsubs
and
in
jbe
push
mov
dec
mov
movsl
jno
jecxz
or
je
pop
and
sub
mov
sub
fsubr
popf
and
adc
in
stos
xchg
addl
mov
ficoms
jmp
rcll
dec
ss
outsb
test
dec
ficoms
imul
sub
pushl
cmp
out
lods
adcb
push
ret
inc
aam
pop
loopne
dec
mov
push
aas
inc
add
cmp
rcr
loopne
icebp
mov
movsb
add
sub
pop
xchg
mov
enter
add
das
ds
ljmp
es
into
sub
je
and
jnp
daa
iret
lahf
push
daa
aad
pusha
das
xchg
ret
cwtl
jl
das
dec
mov
inc
dec
std
adc
iret
cmpxchg8b
int3
stos
xor
nop
push
add
lods
es
insl
ss
negl
mov
mov
rcrb
add
lahf
shl
std
fs
in
mov
cltd
lret
out
lds
ret
aaa
mov
adc
mov
cmp
scas
jl
sbb
lock
push
adc
sbb
sbb
aad
and
cld
pop
fsubs
ret
shlb
add
in
pop
cmp
mov
mov
xchg
push
cltd
shl
ja
ffree
int3
cld
jno
out
stc
int
addb
aas
inc
sbb
imul
jl
sbb
lret
push
shrb
xchg
xchg
icebp
inc
mov
mov
push
cltd
jns
loope
loope
and
jno
clc
aad
cmp
lods
mov
imul
mov
ret
cmpsl
cli
call
cli
lcall
adc
mov
sbbb
lcall
test
cld
sbb
inc
pushf
cmpsl
dec
and
jge
iret
cld
into
and
mov
push
pop
mov
pushf
pop
xchg
scas
loop
fadds
sbb
scas
adc
adc
jle
xlat
mov
cli
insb
jmp
arpl
push
jl
sub
and
dec
pop
inc
sub
ror
test
mov
test
fisubrl
sub
pop
sarb
cs
mov
cmp
inc
inc
sbb
push
and
mov
pop
add
fadds
sub
lods
shrl
arpl
ret
xchg
push
add
ret
imul
pop
stos
jb
cmpsl
movsb
int3
shrb
roll
into
xchg
dec
sbb
or
sbb
fstpt
imul
push
pop
out
insb
cmp
or
cmp
imul
sbb
xchg
mov
ds
jmp
pop
cmpsl
jno
stos
xchg
add
pop
out
pop
adc
pop
or
cmp
push
in
je
lods
fs
loop
repnz
out
jae
fnsave
out
pop
push
push
ret
dec
xchg
xchg
popf
shr
xchg
xor
daa
in
les
sub
imul
loop
mov
repz
sbb
push
inc
sar
jmp
test
lds
xchg
test
fists
fldln2
jbe
jle
pop
inc
sbb
cld
mov
sahf
xchg
push
dec
push
xchg
leave
jle
mov
ss
ljmp
pusha
cltd
and
pop
out
cwtl
xchg
sub
adc
mov
dec
aam
sub
dec
in
dec
mov
and
or
lret
xlat
repnz
push
testb
hlt
dec
sbb
push
push
mov
inc
xchg
lods
into
sbb
hlt
or
aam
pop
push
hlt
sub
movsl
lods
mov
pop
mov
cld
icebp
jae
or
sbb
cld
inc
mov
test
dec
push
push
iret
xchg
je
stc
lea
dec
enter
in
jle
std
dec
rcl
mov
cmp
or
pop
xor
or
jb
mov
call
filds
pop
xor
les
cmpl
cs
idivl
into
subl
cld
add
cltd
fdivrp
lcall
dec
imul
ret
leave
xchg
mov
fstpl
sbb
js
adcl
adc
cmove
sbb
push
test
xor
ret
sti
repnz
test
pushf
repz
jb
inc
mov
or
aad
out
int
ds
aaa
push
aaa
jnp
mov
cmp
imul
andl
sbb
sub
aam
mov
push
outsl
sti
sahf
jbe
lahf
mov
cld
xlat
xchg
cmpsb
ret
movsb
push
sbb
push
sbb
sbb
mov
lret
jge
or
hlt
push
sti
outsl
daa
mov
sarl
push
insl
loop
push
mov
lds
mov
push
out
push
ret
scas
scas
dec
mov
sbbl
pop
lods
and
out
dec
inc
lcall
ja
adc
adc
mov
sub
dec
xchg
es
xor
sbb
xchg
add
bound
pop
dec
jp
in
movsb
inc
xchg
xor
nop
cmp
aam
dec
das
je
jmp
jae
xchg
mov
mov
xacquire
pop
or
inc
adcb
lods
and
mov
insl
jl
cmpsl
inc
pop
dec
and
add
ficoms
addr16
mov
add
xor
pop
mov
xor
sub
push
sti
daa
mov
scas
pcmpgtw
out
mov
insb
jl
push
push
mov
std
adc
pop
ret
repz
or
mov
jbe
fadd
adc
and
insb
mov
sub
mov
insl
imul
mov
lcall
xchg
pop
pop
cmpsb
mov
into
push
adcb
xchg
xor
fldt
icebp
shl
adc
dec
or
pop
aam
sbb
call
bnd
add
add
in
testb
pop
jge
bound
gs
adc
lcall
mov
cmc
xor
loopne
aam
sti
imul
sub
pcmpeqw
and
mov
cli
out
out
add
sbb
xchg
sbb
sahf
xchg
add
cmp
in
cltd
out
loopne
jno
push
imul
sahf
pop
add
aaa
es
jecxz
incb
push
dec
ss
sahf
stos
fs
loopne
cmp
incl
scas
mov
mov
xchg
ss
mov
pop
xor
loope
in
or
xor
jae
and
lods
insl
loop
mov
in
jnp
pusha
push
call
out
mov
pop
adc
mov
cmp
out
negb
xor
push
aas
repnz
mov
jp
shlb
or
cltd
jne
adc
inc
lcall
adc
xor
push
fldl
shll
aad
push
sbb
add
dec
mov
cmc
mov
add
adc
push
push
movsb
push
out
dec
addl
jl
js
adc
xchg
jle
out
adc
jecxz
faddp
jo
sub
mov
arpl
push
aad
dec
rcrb
mov
add
sti
mov
add
cli
mov
mov
jnp
xor
icebp
xchg
adc
pop
jg
xchg
popf
cmc
ds
addr16
aas
aad
or
ds
xor
cmp
movsl
sub
sarl
fwait
and
jnp
xchg
pop
aaa
mov
mov
push
sub
jmp
sub
dec
push
jo
js
cmp
add
jne
test
jle
or
pushf
adc
sub
sti
call
bound
lret
mov
add
pop
iret
cmp
xchg
add
xor
sub
stos
lds
leave
stc
mov
cmp
sbb
xorl
jno
jp
add
jae
inc
push
push
jmp
nop
mov
fidivl
xchg
repz
jecxz
in
adcb
adc
dec
daa
push
test
jbe
lret
fsubrl
rcrb
ffree
cltd
shrl
jbe
das
pop
xchg
mov
hlt
popf
stos
add
push
subb
pusha
stc
pop
mov
cmp
cmp
scas
dec
mov
xor
mov
inc
lock
cmpsl
in
cmp
cltd
xchg
or
xchg
xor
adc
daa
mov
adc
and
and
out
in
sbb
jl
sub
cmp
mov
test
popa
jp
sbb
popfw
sbb
adc
out
int
and
ja
jge
repz
push
sub
fisttps
call
js
das
xor
and
pop
ficoms
sbb
jbe
jl
xchg
cmp
cld
test
in
cwtl
sub
mov
jo
scas
adc
imul
push
xor
adc
cs
mov
mov
clc
sarl
out
fcmovnbe
in
loopne
or
xlat
in
jp
push
push
sbbb
mov
jnp
cs
test
jb
imul
dec
xor
fwait
cmpsl
out
data16
xchg
testl
shll
nop
lahf
insb
inc
shr
sub
inc
jmp
add
lods
mov
testb
rcll
dec
out
xor
pushf
sbb
xchg
dec
xor
jae
jl
mov
icebp
push
les
sub
mull
imul
push
dec
pop
mov
ficoml
xor
pop
cli
test
mov
movzwl
mov
fisttpl
push
sbb
jle
loope
mov
jnp
lea
gs
mov
pushf
mov
addb
cmp
mov
sub
and
hlt
push
ss
push
jg
inc
jmp
ds
and
pop
jno
mov
mov
addb
dec
shll
cmc
popa
mov
pop
and
in
jno
add
ljmp
add
inc
ss
dec
loope
mov
or
stos
cmp
stc
and
xor
add
mov
aas
xlat
in
xor
repnz
mov
cwtl
sub
or
mov
xor
mov
inc
repnz
cwtl
mov
cwtl
movsl
sbb
jno
mov
fcomip
imul
shll
jle
fldenv
mov
push
outsb
inc
lods
mov
je
rolb
xchg
sbb
lahf
cmpsl
shlb
sub
mov
xchg
test
xor
sub
test
pop
adc
xlat
jg
xcrypt-ofb
cmpsl
outsl
sbb
push
jnp
sbb
xlat
icebp
scas
xchg
pop
loope
mov
cltd
scas
scas
icebp
aad
fsubrp
in
idivb
sbb
mov
ret
mov
xor
dec
stos
movb
and
out
jle
add
imul
xorb
test
lea
cltd
push
xchg
hlt
in
inc
jecxz
js
pop
xchg
sbb
cmpsb
cmp
xchg
lods
inc
sbb
fnstcw
clc
adc
dec
xchg
adc
stos
xchg
dec
aad
push
xor
and
dec
push
ss
imul
bound
fldt
or
or
jp
test
cltd
mov
test
push
movsl
bound
test
push
out
pop
adc
inc
cwtl
lcall
xor
aad
xor
imul
xor
sahf
cmp
fisubrs
cmp
sti
imul
pop
je
mov
adc
test
popf
mov
push
test
jbe
mov
test
jo
add
inc
fildll
stos
push
mov
pop
xchg
pop
stc
stc
mov
xchg
fiadds
xor
xorb
mov
insb
mov
mov
shll
xchg
sub
std
xchg
and
out
or
mov
push
dec
movntps
test
cmpsb
jnp
test
jbe
push
or
ret
push
cmp
adc
int
cmp
stc
push
add
sarb
xor
frstor
pusha
sbb
cld
pop
mov
popf
bound
and
movsl
mov
xchg
stc
fwait
or
out
xor
mov
jns
fsubr
stos
stc
cmp
ret
sbb
xchg
mov
jo
mov
rclb
push
sahf
sbb
mov
imul
repnz
out
cmpsl
frstpm(287
jp
jl
mov
or
scas
stc
shlb
dec
push
fbld
jge
jle
or
mov
insl
cmp
mov
jno
fcompl
shll
xchg
xchg
scas
mov
sub
outsb
push
pop
movsl
push
aas
pop
in
fcmovnb
lds
sub
xor
pop
mov
lcall
test
in
or
mulb
fpatan
jmp
mov
adc
jmp
repnz
mov
jp
dec
jl
fidivl
pop
test
enter
jmp
test
test
in
lock
insl
dec
dec
lret
daa
mov
call
loop
ret
fwait
jbe
jmp
outsl
enter
mov
ljmp
jl
stc
sbb
mov
and
sbb
iret
push
dec
add
push
inc
ret
cwtl
mov
insl
jns
mov
dec
add
out
push
cmpsb
or
push
sub
les
scas
hlt
mov
xlat
lods
dec
mov
mov
fisttps
imul
sbb
mov
repnz
add
pop
sub
lahf
out
shlb
movsl
or
push
leave
xor
push
out
cmp
ja
dec
jmp
mov
add
hlt
or
sub
insl
rcll
inc
jnp
out
lret
inc
mov
xchg
dec
lcall
imul
lret
lock
gs
sar
in
mov
iret
add
cmp
jne
aas
adc
loopne
addr16
dec
jno
and
or
decl
jecxz
pusha
push
ret
push
sub
test
mov
mov
add
add
jmp
add
pop
jmp
aaa
mov
std
out
out
sbbb
mov
ljmp
push
shl
out
movsl
pop
add
iret
inc
mov
add
and
push
adc
das
sbb
inc
dec
popa
pop
testl
sub
or
push
jbe
addl
sbb
mov
xlat
pop
jbe
sbb
lahf
sbb
pop
inc
aad
inc
adc
scas
push
rorb
ret
push
daa
movsl
insl
arpl
fsubrs
rcl
fucomp
pop
mov
or
es
test
xor
mov
les
add
ud2
sub
xchg
stos
xchg
nop
clc
in
dec
jmp
ret
dec
cwtl
cmp
shr
jl
inc
mov
xor
adcb
enter
push
fstpl
stc
dec
je
cmp
and
scas
shld
push
fisubs
das
jecxz
sbb
addr16
cmp
data16
pop
std
icebp
xor
loope
out
push
fcomps
cltd
popf
mov
arpl
pop
sbb
into
outsl
xchg
sbb
inc
int
dec
clc
pop
es
push
jbe
pusha
scas
lahf
xchg
add
out
jo
lcall
in
mov
loope
mov
adc
in
in
ds
sbb
and
push
jbe
add
or
add
out
aam
and
stos
dec
mov
cli
lods
xor
fldpi
mov
push
pop
call
mov
fwait
inc
ret
add
or
gs
lcall
out
sbb
aam
mov
pop
call
test
or
push
lods
imul
icebp
jmp
fistpl
out
pop
fdivrl
repnz
mov
movsl
adc
rcl
inc
jne
add
std
fldl2t
cwtl
and
test
gs
xor
push
xchg
lods
jns
mov
testl
jecxz
xchg
iret
aad
fldt
test
sub
aaa
test
arpl
stos
sub
iret
sub
lds
sbb
mov
mov
jmp
push
cmp
bound
subb
scas
out
push
sbb
nop
aam
or
xchg
adc
lock
stos
neg
sbb
pop
mov
lret
dec
xor
mov
cmpsl
popa
mov
ss
icebp
xor
xor
fwait
jge
addl
push
add
cwtl
add
adc
movsb
jb
fists
inc
or
sub
and
cmpsb
lcall
lock
mov
leave
push
xchg
xor
popa
jbe
cwtl
dec
movsl
ja
pop
adc
repz
lcall
rcr
aas
mov
mov
push
shr
add
cwtl
fisubs
sub
pop
rolb
push
icebp
and
ljmp
jbe
and
push
and
aaa
jo
push
daa
lods
sbb
inc
loopne
push
daa
push
stos
adc
xchg
mov
sub
scas
sbb
cld
and
adc
out
push
pop
jnp
cltd
add
mov
pop
ret
and
push
inc
ljmp
push
jb
or
pop
inc
js
mov
imul
bound
mov
pop
pop
dec
rorl
out
ret
cmpsb
push
add
cmc
add
mov
popa
subb
jg
test
ja
push
add
ljmp
cld
and
fildl
insl
inc
push
dec
add
outsl
jp
stos
loop
dec
movsl
and
stos
repnz
out
les
out
and
sbb
mov
call
sub
mov
fisubs
add
jl
push
mov
add
sbb
mov
pop
enter
jbe
movsl
and
insl
pop
out
fwait
jmp
int3
jl
mov
outsb
sub
mov
and
push
cmc
sub
cmp
adc
mov
pop
mov
push
cs
int
sbb
fs
shl
sbb
mov
icebp
mov
adc
shrb
xorb
movsb
sub
test
xchg
lea
jecxz
cmpsl
mov
xchg
stos
xorb
adc
sbb
push
mov
jecxz
pop
addl
imul
lds
add
xor
xor
pop
mov
inc
gs
enter
lock
jg
dec
push
test
pop
sub
gs
mov
cli
cltd
outsl
adc
aam
mov
pusha
arpl
and
mov
pop
lcall
lea
xchg
xchg
xchg
data16
into
xor
gs
mov
gs
and
lods
in
sub
cmp
enter
jle
rcrb
cli
es
sub
flds
lret
test
xlat
dec
inc
sbb
cmpsl
dec
test
mov
sbb
xchg
dec
mov
xor
jl
subl
mov
dec
jl
mov
xchg
pop
shlw
in
add
dec
pop
inc
mov
clc
and
pop
out
xchg
inc
clc
insb
cltd
add
jae
inc
mov
inc
adc
xchg
mov
ret
jno
adc
cmp
push
adc
stc
pop
and
jge
pop
test
mov
xchg
out
flds
mov
cld
hlt
jle
pop
and
xor
or
repnz
dec
cmp
inc
sbb
lret
dec
sub
out
cli
cmp
xchg
inc
imul
decl
mov
jecxz
xor
aaa
filds
data16
sbb
jge
sub
sbb
xchg
or
pop
imul
jne
or
mov
dec
xchg
pop
cmp
dec
ljmp
mov
test
inc
es
and
sbb
lret
fstpl
cmp
push
adc
jno
dec
aad
mov
pop
pushf
das
mov
cltd
jge
pop
out
xor
xchg
lret
mov
loopne
fs
mov
insb
xchg
xor
jge
stos
push
fcomi
fcomi
sbb
std
xor
mov
cmp
xchg
mov
or
aaa
push
dec
sbb
fbstp
mov
cmpsl
pusha
outsb
rcr
ret
mov
jp
fwait
xor
repnz
jbe
sub
mov
mov
js
pop
push
inc
repnz
sti
adc
add
push
scas
xchg
loop
mov
mov
gs
not
cmp
pop
dec
push
repz
adc
push
mov
pushf
fsubl
cmp
ljmp
leave
movsl
nop
push
outsl
sbb
pop
into
adc
or
push
sub
aam
movsb
lahf
mov
mov
push
mov
mov
xchg
push
mov
inc
mov
rcrb
jno
daa
xor
decb
xchg
xchg
es
xchg
pushf
push
aam
dec
test
cmp
lds
push
mov
adc
fbld
mov
inc
jns
jnp
cmp
pop
or
mov
aam
adcb
pop
ds
cmpsb
mov
mov
push
sub
aaa
xor
or
movsl
movsb
aad
mov
sbb
xor
inc
movsb
dec
je
loop
mov
xor
scas
jecxz
jl
inc
fmull
ficoml
mov
js
mov
pusha
jg
pop
cmpl
into
sbb
push
test
imul
dec
insl
jbe
or
dec
push
cmp
cmp
fwait
push
stos
sub
lcall
test
cmpsl
scas
out
xor
js
shl
leave
jge
dec
fsubrp
shlb
stos
push
mov
rclb
into
arpl
xor
repnz
loope
lods
repnz
mov
cmpb
test
add
inc
insb
insl
cmp
repz
test
xorl
movsb
pop
lods
repnz
cmp
repz
aaa
std
jnp
dec
mov
ljmp
add
push
dec
pop
fcomi
add
push
imul
aas
push
mov
je
cmc
jnp
rclb
outsb
xchg
xchg
add
cmpb
lret
mov
mov
xor
outsl
in
or
lods
enter
xor
pop
mov
pop
pop
cltd
leave
jg
mov
jbe
jns
or
test
inc
or
push
xchg
inc
std
scas
int3
mov
xchg
inc
stos
push
in
push
adc
lea
mov
std
and
sahf
lock
ds
stos
lds
call
sti
imul
out
dec
insb
inc
sub
inc
adc
js
pop
mov
clc
in
push
add
cmp
push
cli
jnp
ja
inc
pop
cltd
cmpsl
push
sub
arpl
sub
std
outsl
outsb
jae
js
mov
in
in
jns,pn
mov
jae
lds
bsr
jge
mov
popa
dec
gs
subl
test
lcall
push
mov
cmp
xchg
push
out
ss
xchg
stc
xchg
cpuid
cltd
pop
push
insb
sbb
inc
pop
ret
lret
pop
pusha
sbb
fnsave
xor
add
ret
sbb
shrb
xor
cmp
mov
repz
daa
sbb
ds
and
out
cwtl
test
xchg
push
mov
xor
adc
xchg
inc
movsb
repnz
inc
push
ret
out
inc
add
add
movsb
jg
fildll
and
out
mov
gs
and
add
dec
daa
leave
pusha
cmp
jg
push
lahf
out
mov
out
rorb
mov
in
orl
call
scas
inc
xor
aam
mov
add
scas
outsb
pop
fbld
faddl
out
out
pop
mov
pop
mov
sub
cmp
fwait
push
aaa
imul
es
push
loope
push
push
scas
jle
daa
adc
clc
dec
adc
aad
xchg
or
inc
push
mov
roll
mov
fs
out
insb
in
ret
and
inc
insl
test
pop
dec
lds
mov
jg
js
inc
cld
aaa
sub
xchg
lcall
mov
mov
cli
test
push
xchg
pop
inc
cmp
pop
test
mov
cld
mov
fcmove
loopne
ror
jns
ss
addr16
scas
gs
push
push
pop
scas
jnp
scas
dec
movsl
add
mov
or
xor
mov
jle
mov
ja
bound
dec
dec
jl
in
cmp
sub
movsl
jl
call
lahf
mov
sbb
sub
pushf
cmp
mov
mov
iret
enter
mov
fs
push
or
adc
ret
lods
fidivrs
sarl
mov
jb
aad
and
addr16
lds
cmpsl
sub
and
daa
push
jp
in
push
mov
movsb
inc
push
lods
adc
fistps
xchg
xchg
bound
in
andb
and
push
mov
shll
adc
dec
xchg
cmp
xchg
dec
cmp
scas
push
pop
cmp
push
mov
stc
xorl
inc
push
in
or
notl
ficompl
lods
movsl
push
enter
jecxz
adcl
ds
inc
sarb
scas
sahf
enter
loope
lds
mov
add
aad
jne
xchg
or
test
imul
push
xchg
pop
popf
mov
icebp
cli
pop
pop
pop
dec
or
std
data16
jb
shll
mov
jmp
ljmp
sbb
in
mov
mov
xchg
dec
cmpsb
aad
jp
movsl
iret
jmp
dec
sbb
xchg
repnz
jg
cltd
outsl
ret
lods
mov
push
xchg
inc
out
xchg
in
test
sbb
mov
repnz
sub
mov
add
repnz
flds
pop
and
adc
imul
outsb
xchg
repnz
pop
in
pop
stos
mul
leave
aam
lods
mov
mov
iret
orl
xor
aam
sub
ss
sub
mov
adc
adc
sbb
xchg
mov
idivb
outsb
inc
aad
pop
jp
mov
mov
mov
and
pop
mov
or
bound
outsb
fstps
aas
bswap
aad
pusha
mov
and
dec
enter
add
inc
sti
cli
sub
idivl
mov
stc
push
cmp
mov
dec
sbb
rol
int
adcl
subb
push
repnz
in
jae
aad
loope
push
ja
mov
jns
daa
pop
movsl
test
jle
push
scas
pop
mov
dec
rorl
jp
lods
add
push
fidivl
popf
daa
test
daa
dec
mov
hlt
xchg
test
adcl
adc
in
mov
test
rorb
mov
pop
mov
cs
fildl
int3
mov
xchg
and
out
out
cmc
shll
loope
and
sbb
in
push
sbb
jae
repnz
mov
pop
dec
add
sub
adc
mov
sub
dec
jns
lods
fdivr
pop
mov
call
in
enter
ljmp
outsb
lcall
dec
insb
ret
pop
mov
cli
sub
hlt
cmc
les
arpl
std
cmp
and
mov
int
daa
cmpsl
test
mov
lcall
adc
into
sub
hlt
cmp
repz
push
shl
pop
inc
or
imul
adc
lods
icebp
fucom
sub
cmp
jge
shr
mov
adc
or
xchg
test
jp
xchg
jg
mov
test
lods
pop
ja
jle
call
cmpl
jp
cld
cmp
fs
xchg
add
xor
inc
push
int
jnp
and
mov
xchg
aad
out
cmp
mov
adc
or
xchg
sbbl
daa
pop
push
xchg
mov
xor
out
mov
adc
outsl
inc
aaa
js
pusha
xor
cmpsl
vmovd
push
xchg
ret
out
or
lods
iret
out
loop
jle
jge
cmp
add
movsl
push
int
jo
mul
mov
xchg
push
add
clc
out
lret
mov
idivl
or
lock
in
in
lret
dec
cltd
movsl
mov
popa
stos
js
fsubrl
int
mov
arpl
xchg
clc
mov
cmpsb
xchg
icebp
mov
pop
and
pop
pop
mov
dec
mov
xchg
nop
das
xchg
dec
iret
insb
sub
dec
push
cmp
bound
sub
pop
in
rolb
sbb
xchg
mov
movsb
inc
cli
push
xchg
and
pop
push
sub
mov
rcrb
or
out
ss
lret
dec
mov
mov
ds
movsb
lds
xchg
loope
lea
jge
jle
jo
xchg
and
gs
sub
daa
cmp
stos
sar
rolb
and
cmp
lret
lea
or
negb
cmp
cwtl
mov
pop
lock
mov
outsb
gs
push
leave
loopne
pop
push
gs
pop
rol
xlat
into
and
in
sahf
push
leave
movsb
pop
inc
cmp
test
mov
mov
jo
out
into
aad
clc
test
dec
fdivl
and
xor
adc
cmp
xchg
mov
inc
lahf
mov
cmp
dec
es
dec
fstps
cmp
sbb
mov
dec
mov
daa
xor
dec
or
pop
adc
jnp
sub
and
cltd
add
push
or
inc
mov
xor
add
lock
mov
shr
addl
cmp
test
into
jecxz
jbe
cld
sub
lcall
loopne
test
jle
xor
es
sbb
in
dec
repz
dec
jo
xchg
data16
mov
lret
lea
cmc
xor
or
add
push
shl
rcl
repz
cli
xchg
in
sub
ljmp
out
xchg
fsts
lock
cmp
mov
movsl
mov
popl
aaa
repz
adc
sbb
sarl
dec
out
dec
xor
jno
pop
jno
mov
jno
bound
mov
roll
int3
mov
and
cmpb
mov
idivl
sub
leave
loop
adc
repnz
repz
cmpsl
sub
aaa
cmc
enter
sbb
enter
xlat
jg
xchg
repz
pop
cld
pop
xchg
jmp
cmpl
pop
clc
or
popa
dec
dec
sub
enter
jl
into
lock
js
adc
cs
push
xor
and
sbb
cwtl
dec
imul
cmp
repnz
dec
mov
or
aad
add
xlat
mov
bound
pop
aaa
xlat
sti
push
mov
scas
jecxz
clc
adc
test
cmp
popf
test
and
orl
add
test
sub
frstor
mov
js
cmp
fstps
std
js
jp
jle
mov
jbe
push
or
jmp
push
pop
push
repz
stos
sahf
int3
mov
xchg
xchg
xchg
call
in
inc
mov
pop
mov
mov
subb
repnz
cltd
ja
jg
fidivl
out
lds
pop
test
mov
cmp
incl
mov
sub
sub
nop
icebp
jge
outsl
stc
inc
adc
scas
xchg
jns
pop
add
pop
adc
iret
outsl
mov
mov
scas
mov
and
inc
sbb
jg
stos
gs
lret
mov
movsl
push
mov
inc
jae
jbe
enter
mov
or
or
xchg
ret
or
pop
inc
call
pop
dec
and
shll
inc
rol
xor
jecxz
jmp
lock
mov
jno
jmp
push
movb
dec
pop
addr16
loop
test
mov
or
fisubl
rcl
std
pushf
test
xlat
push
das
xor
int3
mov
adc
xchg
ja
mov
pushf
add
jb
imul
dec
jmp
ror
adcb
mov
push
push
xor
leavew
cltd
or
ljmp
fcomp
lcall
inc
fistps
lods
push
dec
push
pop
mov
and
ljmp
popf
clc
negl
jecxz
in
adc
lock
fcoms
mov
and
in
adc
cwtl
xchg
and
xchg
in
add
jno
mov
notl
sbb
sbb
data16
pop
enter
ja
mov
mov
fisubrl
sbb
insb
mov
adc
and
loopne
or
xor
imul
popa
sbb
mov
imul
dec
outsl
pop
iret
add
ja
add
or
sahf
lcall
mov
or
cmp
pusha
sbb
mov
inc
fwait
and
cwtl
xor
daa
dec
ljmp
outsb
out
pushf
mov
ret
arpl
orb
push
sub
push
jmp
movsb
sbb
cmpl
mov
leave
xor
mov
add
pop
push
lcall
and
fucomi
and
jecxz
mov
inc
sysenter
lcall
in
enter
xchg
inc
mov
cli
ja
cmp
xchg
jo,pn
ret
pop
jb
pop
jp
out
xchg
pusha
cmpsb
movsb
addl
or
shrl
shl
sub
call
inc
ret
shll
xchg
and
outsb
into
add
sub
and
cmpb
dec
fdivr
aaa
dec
loope,pt
push
inc
jl
add
xor
popf
mov
jne
stos
mov
ss
sub
xchg
ja
lret
mov
pop
pop
push
mov
xlat
sbb
outsb
mov
and
fbstp
adc
inc
lret
add
mov
ja
inc
mov
sub
push
cmpsl
sbb
ss
std
xchg
mov
pop
imul
push
push
and
not
jle
push
mov
dec
mov
and
add
mov
notb
add
adc
inc
adc
xchg
dec
pop
shll
stc
movsb
inc
rcl
lock
out
es
inc
rcrb
mov
pop
and
sbb
or
jno
mov
pop
adc
add
pushl
adc
cmp
inc
sarb
fs
loope
sti
cmc
pop
lret
sbb
rcrb
mov
fcoms
call
insb
inc
ret
mov
jge
mov
clc
jmp
out
adc
lahf
call
lcall
ds
pop
sahf
push
xor
cmc
into
xchg
cmp
ss
pop
loop
cs
xlat
stc
pusha
xchg
jg
pop
pop
mov
subl
lods
sti
loopne
ret
dec
test
jo
dec
jne
push
stc
or
dec
xor
imul
jmp
mov
sub
mov
xchg
pop
sbb
scas
into
mov
xchg
lds
or
pop
pop
or
lock
addr16
ljmp
sub
push
arpl
sub
fst
in
or
repz
inc
aas
and
mov
mov
cmpsl
ds
sbb
jl
gs
and
cmp
cmpb
dec
movq
push
mov
sbb
loopne
mov
fwait
shlb
int
cmc
lret
mov
add
mov
leave
out
pop
mov
sbb
int3
pusha
and
and
push
mov
cmpsb
icebp
sbb
ss
cmpsb
cli
stos
adc
mov
mov
fisttpll
xor
push
xchg
stc
or
push
mov
and
xchg
push
or
test
rolb
or
or
mov
mov
int
sub
jg
icebp
ja
and
out
aad
mov
xor
jnp
jg
hlt
cmp
and
cmpsl
sub
add
aad
adc
into
fimuls
out
mov
and
test
stos
push
add
jns
mov
push
imul
fidivrl
pop
and
and
ret
clc
rcrl
fs
lahf
push
or
pop
mov
loopne
cmp
dec
aas
or
insl
jg
pop
jg
pushf
adc
bound
push
mov
pop
lock
or
icebp
test
sbb
ljmp
mov
inc
stos
lahf
aad
inc
mov
lret
sbb
push
pushf
jns
clc
fcmovbe
inc
push
hlt
repz
loop
out
mov
outsl
insb
cwtl
pop
iret
dec
clc
xchg
and
test
mov
bound
in
push
jo
add
dec
pop
mov
jo
sub
fcmovu
adc
arpl
insl
sub
inc
jno
scas
out
dec
lahf
mov
sarb
hlt
in
nop
xor
popf
push
fwait
idivl
js
adcl
pushf
xor
inc
pop
fisubrl
ljmp
icebp
adc
mov
mov
pop
fildl
shll
out
stc
pop
or
ss
aas
imul
mov
rcl
add
out
adc
add
repnz
fsub
jg
pusha
sub
rcrl
dec
pop
pop
outsb
in
aas
shl
xor
jmp
clc
jg
push
lea
mov
lret
push
movsb
mov
shl
rcrl
jno
mov
adc
pop
or
stos
fsubr
xchg
sbb
add
fwait
cld
adcb
jb
outsl
fwait
cmp
in
nop
orl
jbe
cmp
and
mov
pop
ljmp
jae
shll
adc
in
lods
mov
cmpsb
sub
push
bound
xor
cmovo
stos
imul
mov
mov
stos
mov
call
jnp
push
imul
adc
mov
and
push
push
mov
sarb
es
insb
or
inc
mov
es
mov
push
scas
ss
pop
jmp
imul
xor
aas
mov
jp
or
rcll
nop
and
and
cmp
inc
push
mov
ds
mov
call
xchg
orl
aad
jge
cmp
sbb
aas
les
iret
mov
or
jns
cltd
sbb
mov
lcall
faddl
pop
pop
or
lods
stos
pop
rcll
or
xchg
jae
insb
call
push
sbb
pop
pop
sarb
mov
push
sub
inc
jecxz
xor
dec
jno
xchg
in
dec
dec
jbe
jg
repz
cmpsb
imul
inc
adc
in
outsb
and
jecxz
jns
adcb
dec
mov
outsb
and
data16
hlt
movsb
repz
pushw
jle
and
push
jecxz
inc
pop
jle
mov
jo
sub
aam
arpl
into
sbb
fxch
or
or
push
xchg
cmc
rorb
xchg
sub
jbe
in
fldl
fwait
lret
pop
xchg
out
adc
pop
push
push
jne
sub
sub
dec
lods
push
aam
sub
ret
jecxz
sti
popa
mov
mov
repnz
fwait
lret
mov
test
jp
jne
imul
fisttpl
arpl
adc
adc
cmpsl
into
imul
insb
loop
daa
arpl
cmpsl
mov
ror
xor
push
nop
ret
inc
clc
iret
cmpsl
inc
addb
cwtl
in
addr16
ret
sub
bound
fnstcw
mov
inc
pop
dec
inc
cmpsb
mov
xor
out
repnz
pusha
pop
js
and
add
xacquire
mov
mov
xchg
jo
xor
pop
out
mov
sti
push
xor
and
inc
loope
xchg
and
add
leave
out
test
cmc
stos
out
fcoms
and
hlt
stc
sub
and
dec
mov
enter
addl
jnp
inc
pop
cmp
sbb
push
mov
bound
dec
adc
dec
pushl
aam
mov
push
adc
xor
mov
orb
jcxz
sti
vcmpps
sbb
mov
ret
xor
pop
xor
inc
jmp
adc
mov
aaa
rcr
cmpl
dec
inc
aas
jne
cmpsl
xor
lret
popa
rcrl
cwtl
mov
stos
jge
dec
popf
sarl
mov
outsl
and
jnp
movb
push
push
inc
jmp
in
lock
or
pop
rcl
adc
or
mov
mov
pop
jl
adc
xor
and
lds
in
or
int
pop
enter
fisttpll
lret
xor
int3
jle
adcl
mov
jmp
xchg
jecxz
mov
mov
mov
mov
jmp
and
pop
pop
xchg
fs
icebp
sbb
punpcklbw
sub
fstp
aaa
aad
push
aam
mov
add
insl
sub
xchg
ss
out
pop
lret
sbb
adc
mov
lcall
jb
or
jmp
xor
mov
mov
cmp
xor
jnp
xchg
cmpsl
adc
mov
mov
int3
in
aad
adc
jge
das
sti
sub
cmp
add
std
rcl
aas
vmread
sbb
idiv
add
stc
shlb
inc
xchg
orl
mov
xchg
cmp
loope
and
std
push
aaa
dec
push
rcrb
loope
pop
pop
push
jno
hlt
out
in
sub
popa
mov
mov
hlt
shll
push
sarb
pop
out
stos
std
and
push
xchg
jle
ss
outsl
adc
ljmp
jnp
push
imull
stos
sub
movsl
push
pminub
daa
flds
cmc
fisubrl
adc
mov
into
out
mov
mov
aaa
jge
std
push
xor
test
dec
inc
sahf
stos
push
push
hlt
cmp
leave
lods
cmp
inc
lret
jnp
pop
call
inc
cld
std
sub
int
sbb
out
mull
xor
dec
call
aas
adc
es
add
inc
leave
dec
mov
jmp
call
vmovlpd
mov
cli
sub
decb
sub
dec
inc
xchg
dec
inc
sbb
jae
mov
stos
adc
es
inc
stc
push
aad
mov
xchg
popf
in
inc
add
xchg
cld
sbb
jmp
std
mov
pop
outsl
test
and
jg
fs
push
rorb
cltd
and
loopne
dec
stos
mov
xchg
test
stos
add
cmp
add
mov
push
sub
mov
xor
or
push
push
subb
or
leave
dec
bound
int3
bound
jle
stos
repz
cwtl
sbb
pop
lea
in
ss
mov
fldenv
les
jo
sarl
mov
fistl
cmc
ss
fs
notl
inc
iret
stc
hlt
bound
mov
out
imul
gs
std
das
inc
adc
jnp
shr
cltd
rcll
push
jecxz
pushf
pop
fcoms
mov
dec
or
loop
mov
ffreep
jb
and
xor
ss
mov
in
jne
push
add
iret
xchg
add
dec
add
cmp
outsl
lahf
lret
mov
test
sbb
xchg
jecxz
xor
jb
mov
push
lahf
push
mov
stos
xchg
repz
gs
push
or
or
fcoml
stos
jne
sbb
aad
dec
frstor
pusha
pusha
add
add
into
push
int3
cmc
push
xchg
jmp
iret
das
lcall
shll
inc
mov
inc
jg
add
dec
es
fadds
es
rolb
jne
flds
cltd
rcr
xor
mov
flds
xchg
push
jl
das
fcom
int3
sbb
mov
mov
mov
jmp
daa
sbb
test
ss
cmp
rolb
pushf
jno
or
cmp
adc
repz
jb
aaa
inc
jbe
cli
lret
adc
mov
xor
stos
inc
sub
inc
test
dec
lret
shll
imul
pop
sub
inc
mov
pop
pop
cli
pushf
pusha
mov
lret
movsl
in
mov
cs
ret
mov
fwait
xchg
pop
cmp
daa
ret
rcr
sub
jne
stos
int
hlt
andl
pushf
xchg
cmpsb
shlb
sti
sahf
aad
out
jno
push
icebp
mov
fstps
cmp
popa
gs
in
push
sbb
jbe
adcl
icebp
lods
into
cwtl
inc
lahf
stc
mov
add
test
or
popf
xchg
pop
je
adc
xor
and
fldln2
and
shl
mov
xchg
sbb
pop
test
and
test
pop
adc
or
mov
jl
jbe
pusha
jl
inc
popa
xchg
cmp
enter
rcrb
mov
int3
jecxz
shlb
rcll
dec
popf
and
mov
xchg
out
test
pop
mov
xchg
loope
out
imul
xchg
xchg
pusha
frstor
push
in
push
or
xchg
sbb
jns
dec
mov
test
jb
cltd
scas
ret
in
add
lcall
sub
inc
dec
cmp
push
int
cmp
cmp
inc
or
sbb
push
mov
xor
scas
sbb
pop
push
iret
shrb
imul
push
es
test
in
cmpl
clc
icebp
mov
test
or
inc
jnp
sbb
mov
lcall
test
sbb
fwait
inc
dec
repz
push
sub
cmc
or
out
xchg
push
sub
clc
mov
aas
mov
lahf
not
fadds
aaa
dec
add
xchg
pop
push
inc
stc
and
push
xchg
adc
cltd
outsb
xchg
scas
pusha
into
mov
je
inc
jg
mov
inc
push
outsl
xchg
adc
std
sahf
mov
icebp
mov
add
lret
mov
mov
cltd
jo
loop
filds
lahf
push
push
jp
ss
cmp
dec
mov
mov
rcl
rcl
sub
test
adc
stos
aad
inc
mov
adc
or
sub
out
mov
adc
loopne
jp
add
mov
inc
insl
shlb
mov
pop
xchg
shl
mov
loope
mov
adc
inc
xlat
mov
roll
add
subl
fcoml
dec
repz
mov
jae
aad
adc
mov
nop
int
mov
movsl
xor
jnp
out
or
xor
mov
in
cltd
inc
fimull
je
xor
pop
nop
push
pop
inc
sub
xlat
add
mov
scas
pop
or
loopne
or
rcll
cmp
out
xlat
dec
xchg
pop
lea
lret
sub
and
lods
jb
mov
add
in
lods
fmuls
roll
dec
cwtl
aam
jne
std
pop
fs
fidivl
xor
ret
mov
leave
imul
mov
pop
imul
sbbb
aaa
pop
inc
cld
jns
pop
pop
adc
mov
push
sub
jo
js
cmp
movsb
or
es
xchg
out
push
icebp
leave
pop
imull
adcb
mov
imul
xor
test
mov
sub
cmpsl
pushf
test
lds
and
ja
stc
int
xchg
std
or
jg
add
adc
and
adc
ret
xchg
in
xor
pop
cmc
pop
adc
mov
js
sarl
or
outsb
mov
sub
pop
outsl
add
out
push
gs
jmp
fucom
fists
xchg
cmp
and
test
lahf
cmp
xchg
test
pop
sbb
mov
mov
jl
jecxz
jg
adc
fisttps
loope
jo
out
lret
xchg
pop
fistpl
fisubrs
mov
or
arpl
pop
inc
and
cmp
xor
fucomip
ljmp
leave
inc
inc
mov
enter
xchg
jge
rolb
in
dec
ret
fcoms
pop
pop
in
xchg
pop
jnp
into
daa
jno
cmp
xor
fimull
xlat
js
add
add
lods
or
jno
out
ret
push
rcrl
repnz
test
inc
sbbl
inc
jecxz
sbb
mov
aaa
insb
push
sub
sbbl
mov
xor
xor
push
lods
in
adc
sarl
in
shll
inc
xchg
inc
dec
cmp
sub
push
mov
aad
loope
shl
test
xchg
push
jl
hlt
andb
and
test
fldt
mov
movsl
xchg
xchg
dec
shll
imulb
arpl
and
xorl
roll
push
or
adc
jne
adc
ret
push
fcmovbe
orl
xorl
jl
jg
inc
clc
sbb
mov
jnp
repnz
movsl
daa
das
call
inc
mov
and
cltd
push
mov
fstpt
push
mov
mov
cld
dec
test
aad
sbb
inc
daa
in
dec
iret
xchg
lcall
lcall
cmpl
arpl
sub
inc
xchg
xor
jmp
or
push
mov
subl
scas
dec
movsb
mov
push
mov
ds
cltd
in
iret
scas
jne
hlt
das
mov
dec
cmp
cs
mov
jmp
in
jb
insl
test
push
sbb
and
xchg
xchg
or
xlat
pop
xchg
mov
ljmp
in
clc
and
xor
push
sub
cli
negl
je
inc
mov
sar
cs
in
cmpsb
mov
inc
inc
cmp
xchg
scas
loope
adc
sub
xchg
je
xchg
xchg
je
add
adc
aaa
inc
test
out
add
testl
scas
add
aaa
sbb
idivl
pop
stc
je
xchg
loopne
aad
and
jnp
adc
mov
movsb
nop
or
adc
lods
cli
orb
push
and
push
in
loopne
les
xchg
je
in
test
pop
or
int3
xor
add
adc
das
stos
fidivl
mov
test
adc
xchg
test
cmp
rcrb
iret
mov
xchg
movsl
js
inc
pop
clc
dec
scas
sbb
push
jne
xor
add
or
mov
mov
and
loop
cmp
cmp
and
mov
pop
bound
mov
cmp
test
js
pop
sub
inc
jp
adc
jno
and
mov
lods
jl
ljmp
stos
js
xchg
pop
inc
stc
jns
scas
popf
sbb
addr16
mov
negl
jb
mov
cmp
ss
fwait
inc
sub
mov
mov
movsb
aaa
xor
push
scas
pushf
jmp
rorb
rcr
enter
xor
shr
popa
cmp
dec
cmp
or
bnd
mov
jecxz
mov
outsb
clc
and
xchg
loopne
inc
dec
mov
push
or
fidivrl
cs
mov
js
scas
cs
subb
jno
pop
sbb
jp
insl
repz
mov
mov
push
xchg
dec
out
out
out
mov
cmpsl
clc
pushf
das
mov
mov
jmp
lea
popf
add
je
cmovge
ljmp
ds
ja
std
mov
or
and
or
rcrb
imul
jle
lods
std
push
out
xchg
jo
xchg
adc
inc
leave
inc
icebp
xor
or
jbe
xchg
sub
xor
mov
loope
in
out
pop
pushf
push
add
jno
insl
jnp
adc
movsl
insb
outsb
xchg
push
cmp
mov
outsb
in
push
aaa
lods
jl
xchg
jo
mov
fwait
cs
mov
fmull
inc
or
and
inc
lods
in
add
push
shrb
mov
movsl
mov
push
addr16
cmpsl
scas
dec
mov
mov
add
ret
xchg
cmp
or
clc
pop
adc
jecxz
hlt
sbb
inc
nop
cli
inc
xchg
sbb
sbb
inc
js
popf
lret
push
jbe
movsl
or
in
jecxz
sbb
int3
cld
outsb
shl
repnz
adc
mov
fwait
out
jp
and
cltd
and
mov
mov
sub
popf
fcomps
push
loop
pop
inc
sbb
mov
mov
adc
or
jno
lret
jne
popa
aam
arpl
rorl
pinsrw
outsb
loop
insb
and
js
mov
sbb
lds
jo
add
imul
das
add
cmpl
add
roll
fucom
lgs
sbb
mov
je
mov
popf
cmp
aam
jns
ret
adc
clc
jb
sub
lods
std
call
push
xchg
pop
pusha
jbe
sbb
mov
js
mov
or
push
sarb
dec
pop
int3
icebp
arpl
loopne
jmp
pop
pop
ret
sbb
xchg
mov
sub
mov
movsb
lods
mov
sbb
adc
int3
push
mov
out
and
inc
sub
sbb
or
mov
in
or
int3
or
xor
cld
aam
push
pop
mov
roll
mov
mov
and
movsl
enter
jne
inc
xchg
flds
cltd
mov
loopne
dec
int
nop
or
or
imul
enter
or
pop
jnp
not
cwtl
mov
sub
pop
fisttpll
sub
dec
pop
dec
roll
adc
push
flds
add
cmpsl
cmpsb
xchg
sub
movsl
sub
cmc
or
jnp
fnstenv
push
push
adc
push
jmp
cld
imul
fnstenv
mov
push
adc
shlb
jo
pop
adc
add
les
shl
sarb
sub
fwait
lret
mov
rcrb
cmp
or
rcll
out
insl
test
lock
loopne
jne
pushf
dec
xor
mov
cltd
xchg
mov
std
mov
mov
adc
pop
test
scas
sbb
inc
imulb
outsb
and
jmp
mov
mov
imull
and
mov
loope
fldl
xchg
ss
xchg
adc
inc
test
outsl
and
jae
cmp
ja
sub
jne
xchg
cmp
fcmovu
sti
mov
lds
sbb
aas
lcall
xor
mov
mov
and
cmpsb
cmp
xor
jmp
repz
or
mov
xchg
das
mov
hlt
fists
xchg
jns
lahf
cli
sub
ret
and
pop
sub
dec
sub
xchg
hlt
sbb
clc
xor
adc
std
sbb
sub
push
xchg
outsl
pusha
enter
sbb
popf
push
jno
aas
arpl
mov
lods
push
dec
es
jle
lret
adc
std
rol
mov
sub
inc
mov
fisttpl
xor
leave
jle
lcall
into
in
cmp
pop
pusha
hlt
mov
out
ljmp
xor
sarb
mov
pop
push
dec
ss
adc
cmpsl
pop
pop
ljmp
cmp
fnstenv
pop
lea
out
mov
iret
mov
rclb
imul
mov
aas
in
and
or
fisubs
test
movsb
stc
xchg
jbe
int3
ficoms
fwait
sbb
sbb
shr
int3
test
daa
loopne
mov
jge
cmp
mov
lods
cltd
or
and
mov
inc
xchg
insl
hlt
mov
dec
enter
cmpsb
or
ja
out
pushf
loop
lods
xchg
jg
andl
mov
call
jns
jo
xchg
adc
mov
xor
inc
cmpl
scas
push
andb
fcmove
add
pusha
push
testl
xor
in
outsl
mov
xchg
clc
repnz
sarl
loop
pop
mov
lock
mov
lea
test
loope
sub
pop
faddl
or
cltd
popl
mov
test
and
loope
fisubs
mov
inc
dec
mov
sub
nop
jle
xor
cli
push
or
ss
jle
mov
les
inc
repnz
or
imul
imul
test
gs
add
pop
pop
mov
fists
pop
lea
or
dec
cmp
add
ja
ret
lret
pop
mov
orb
jo
ficomps
jg
icebp
mov
orb
and
adc
xchg
js
sbb
lahf
mov
in
hlt
daa
mov
cwtl
pop
or
insl
popa
jle
ja
pop
xchg
sarl
and
pop
push
lea
lods
xor
pop
jne
inc
stos
inc
popf
das
mov
shlb
test
and
push
fnsave
adcb
and
imul
fs
cmp
bound
sbb
mov
push
or
bound
ffree
xchg
adc
cmpsb
outsb
popf
popf
lret
stos
testl
ret
ss
or
xchg
mov
int3
fwait
push
icebp
sbbl
js
jge
pusha
mov
dec
xor
xlat
stos
in
adc
imul
into
jge
xchg
lret
lock
enter
adc
add
outsb
loop,pt
and
jle
repz
nop
test
jl
leave
in
mov
fdivl
xor
je
jbe
inc
movsl
daa
mov
cmpsb
ja
bound
into
lds
xor
scas
sub
or
popa
in
movsl
push
mov
and
out
dec
inc
mov
jecxz
fnstenv
fucom
fstps
adc
out
inc
lret
sbb
mov
push
arpl
lock
mov
mov
data16
repnz
lret
psllq
jae
or
push
shl
stos
add
cmpsb
xor
mov
mov
mov
mov
rcrb
jecxz
icebp
insl
fidivrs
push
xchg
clc
push
xchg
repnz
and
sbb
rolb
outsl
fisttpll
pop
leave
jmp
test
iret
and
or
mov
cmpsl
idiv
scas
xchg
adc
jg
xlat
ret
push
imul
ljmp
aam
hlt
or
push
add
repnz
pop
int3
shl
cmp
pop
mov
rcl
iret
mov
rcll
daa
pop
mov
in
std
mov
clc
mov
push
cld
push
fstpl
xchg
or
dec
sub
test
movsb
scas
fwait
test
sbb
aam
mov
sbb
mov
xchg
xchg
cmp
push
or
nop
cmp
inc
sub
sbb
cmp
cmpxchg
jbe
int3
xchg
sbb
ficoms
xor
fidivrs
xor
sub
stos
inc
scas
push
faddp
popa
loopne
rcrb
sub
sbb
xor
jmp
mov
test
cs
pop
inc
or
adc
dec
in
jns
pushf
dec
adc
sbbb
pop
mov
add
insl
out
xchg
lock
mov
leave
aad
jbe
xor
jnp
aas
push
bound
inc
push
ret
dec
aaa
mov
add
mov
pop
mov
cmp
stos
sahf
sub
mov
jns,pn
ficompl
sub
shlb
cmp
push
cmp
push
popf
xor
jge
std
adc
lret
lea
aas
mov
xchg
repz
mov
out
sbb
or
insb
push
sub
jle
jnp
rcrl
punpckhdq
test
adcl
into
mov
clc
cmp
xor
dec
mov
sbb
push
mov
test
inc
scas
data16
inc
ret
cmp
xor
aas
sub
lahf
aaa
pop
or
sbbl
imul
fstps
call
arpl
push
sahf
ja
ja
repnz
mov
and
xor
cmp
mov
xchg
xchg
cmp
mov
push
ret
fnsave
sahf
aas
ficoms
push
sbb
faddl
int
aaa
xlat
lea
mov
data16
ror
push
adc
sahf
xchg
mov
pop
test
xor
pop
pop
shrl
pop
push
jmp
shll
mov
sub
incl
adc
je
dec
jns
test
fisubl
push
pop
sub
mov
aaa
or
xor
fadds
or
xchg
fstpt
rorb
mov
jmp
inc
inc
cmp
incb
cmp
dec
jne
lods
mov
scas
push
mov
inc
mov
mov
xor
fsubl
test
jg
daa
xchg
jb
ja
iret
lods
cmp
push
neg
pusha
repnz
mov
mov
bound
pop
cmpsb
jbe
sub
repnz
sti
adc
int
mov
outsb
decl
loope
sbb
xor
fs
ss
out
and
xchg
fiaddl
add
dec
insl
fwait
sahf
out
dec
in
push
sahf
sub
and
xchg
addr16
mov
sbb
aaa
cmp
jecxz
adc
hlt
mov
pusha
sub
stc
icebp
pop
ss
insl
ss
or
sahf
lahf
testb
cmp
mov
and
dec
and
cmp
sahf
and
lahf
cli
bndstx
jo
enter
push
adc
jnp
popa
daa
xchg
fs
mov
pop
add
pop
add
rcr
or
inc
push
or
pop
inc
lods
mov
fs
sub
cmp
movsl
mov
push
out
pop
sbb
jae
out
pop
jb
or
jne
cmpsb
test
xchg
xchg
jne
mov
pop
push
adc
gs
in
cmp
adc
or
fidivl
out
mov
jecxz
shrl
xor
mov
inc
xor
add
sub
inc
out
popa
adc
push
je
adc
inc
add
push
popa
lcall
sbb
sbb
arpl
mov
pop
arpl
fisubs
inc
mov
mov
push
xor
inc
js
push
sub
jmp
sti
scas
sub
movsl
fistpll
fisubrl
lods
xor
mov
lahf
dec
add
cmc
push
push
pop
clc
mov
dec
cmpb
sub
jecxz
push
push
and
xchg
pop
jnp
std
xchg
cmpsl
inc
cmp
shlb
fs
mov
test
pop
call
adc
test
stos
sub
call
or
test
xor
pop
jnp
jp
outsb
xchg
testb
jb
mov
lods
mov
pop
aam
sti
sbb
stc
sti
ficomps
or
nop
mov
inc
pop
test
lock
imul
inc
popf
cld
lds
and
cmp
adc
hlt
xchg
in
mov
sahf
push
and
add
adc
inc
inc
pusha
fnstcw
xchg
jbe
into
int3
cmp
mov
test
pop
xchg
pop
inc
pop
pop
mov
add
outsb
jae
cli
movsb
popf
fcoml
stos
xchg
jo
mov
mov
cmpsb
push
xchg
arpl
cld
jp
or
inc
cwtl
pop
icebp
mov
pusha
es
aad
rcr
xchg
cmpb
ficomps
dec
aas
sub
fwait
mov
pop
movsb
mov
mov
adc
adc
mov
out
pop
lahf
enter
loop
adc
adc
fldl
fwait
out
inc
dec
aas
mov
ja
lods
xchg
mov
mov
push
lcall
mov
das
es
pop
pop
mov
mov
jg
gs
lret
mov
push
inc
imul
hlt
inc
and
adcb
dec
pop
sbb
pop
cltd
cmp
test
pop
xorl
sbb
pop
dec
ja
mov
shrb
add
shll
cmpsl
cwtl
xchg
testb
ljmp
repnz
cmpsb
dec
sahf
jge
jnp
cltd
scas
ljmp
enter
inc
pop
mov
lahf
inc
adc
xor
leave
lahf
pop
and
xchg
into
push
cwtl
push
stos
mov
pop
or
loop
ret
ret
push
in
sbb
cwtl
inc
xor
pop
adc
xor
fsubs
jmp
pushf
out
jl
sub
ljmp
mov
add
or
or
fst
or
adc
push
int
pop
stc
push
push
push
mov
dec
addb
jge
jecxz
jge
nop
push
push
add
int3
ret
lcall
xchg
or
pop
scas
cmpsb
pop
mov
dec
in
mov
xchg
dec
scas
push
fcoml
mov
loop
stos
int
aad
sbb
push
sbb
aas
cmp
fisubs
or
fimull
ja
test
dec
out
sti
xlat
add
xlat
pop
and
add
xchg
mov
into
adc
sbb
sbb
stc
jb
mov
insb
rcl
xchg
ds
lret
pop
mov
cmp
inc
aas
push
push
fildll
test
addl
lea
mov
cmp
sbbl
add
inc
jno
jnp
mov
loope
out
jmp
pop
cli
scas
aas
inc
test
stos
mov
pop
int
and
xchg
dec
testl
xchg
sub
out
push
clc
scas
mov
pop
mov
jno
sbb
mov
and
push
adc
out
add
jno
sahf
add
mov
inc
push
cmp
and
out
sub
scas
mov
pushf
sub
mov
lock
pop
sub
aaa
addr16
test
ss
push
mov
xchg
pop
xor
imul
push
aaa
in
fmuls
insl
cmp
add
jmp
push
sub
jge
sarl
shlb
out
or
adc
or
push
andl
jl
mov
gs
or
stos
mov
mov
dec
fsubrs
mov
lds
mov
jl
jne
push
loope
ja
in
add
stos
fisubs
aas
mov
push
cld
xchg
cmp
filds
xchg
mov
sbb
call
cmc
jb
mov
mov
ja
test
cmpsl
adc
or
sahf
push
push
iret
inc
loop
ss
fwait
jne
pop
in
scas
fisubrl
dec
fists
out
and
test
out
leave
cltd
push
rcr
cmc
mov
push
and
cmp
mov
add
dec
lret
movsl
stos
push
popf
std
mov
sbb
add
jmp
leave
je
or
gs
cmc
adcl
sub
cmp
loop
sub
pop
cmp
fdivrs
icebp
and
incb
fmuls
push
outsl
loopne
push
push
test
mov
sbb
sbb
mov
or
ss
repnz
call
push
loop
cmp
test
scas
es
decl
and
sbb
dec
push
je
lea
aad
xor
aad
scas
cmp
mov
and
jae
mov
jmp
xor
fsubs
cwtl
subb
pop
in
xchg
addr16
movb
adc
sbb
dec
out
push
out
xchg
sbb
xchg
and
aas
pop
ret
out
xchg
xor
jb
mov
sbb
mov
loope
ret
sbb
jp
sbb
push
repnz
jle
leave
mov
cld
leave
mov
fs
dec
pop
jmp
insb
cmpl
dec
nop
dec
inc
fmull
fcoml
xchg
sub
ja
shrl
fdivr
and
pop
mov
mov
fcoms
adc
rorb
int3
shlb
fwait
cmp
push
int3
dec
sbbb
inc
mov
push
js
sbb
cli
bound
pop
pushf
sbb
xchg
mov
jmp
xlat
mov
sub
insl
and
sbb
clc
in
dec
loopne
test
ja
push
inc
or
out
gs
pop
xchg
les
adc
nop/reserved
pop
dec
jg
icebp
cmp
hlt
cmp
or
inc
xor
hlt
mov
rclb
cmpsb
cmp
push
mov
adc
cld
jb
sbb
add
jbe
sbb
mov
into
stc
ss
or
pop
sbb
jne
popf
mov
jno
push
fcompl
inc
adc
jmp
jmp
xchg
cmc
mov
test
adc
sbb
out
xor
mov
int
mov
pusha
mov
sbb
sbb
pop
ds
scas
adc
lahf
inc
lods
and
call
push
mov
popa
mov
les
pusha
jne
out
mov
xor
xchg
xchg
sbb
mov
outsb
mov
xor
dec
movl
in
add
fstps
and
jle
std
xchg
cmp
push
and
addl
ss
sbb
mov
lea
ja
pop
mov
adc
dec
mov
ss
mov
push
outsl
inc
sbb
xor
dec
repz
pop
popa
scas
fwait
jg
enter
insb
arpl
lret
mov
outsl
sub
pop
push
scas
std
test
dec
adc
push
jp
nop
je
stos
adc
cltd
dec
adc
int3
jns
add
xor
outsl
push
movsl
inc
cmp
dec
mov
fcoms
mov
add
or
imul
sbb
xchg
lods
jns
add
ds
cmp
xchg
mov
lock
int
pop
aaa
mov
pop
aas
cwtl
ds
xchg
int
in
inc
hlt
test
lea
scas
flds
sbb
and
test
stos
and
lods
fsubrs
idiv
ret
rcr
mov
dec
icebp
shlb
shlb
add
jne
mov
mov
pop
sahf
mov
add
icebp
push
das
fs
xor
or
arpl
divl
hlt
loope
lcall
enter
ljmp
out
or
cmp
pop
icebp
pop
mov
xchg
movsl
scas
out
mov
lods
sbb
mov
cltd
mov
scas
cmc
pop
sub
jmp
andl
cmpl
orb
mov
xor
jns
jge
jne
loope
push
icebp
bnd
sbb
inc
ja
fsubrp
inc
push
jb
push
in
xchg
lods
xor
je
push
pop
fs
inc
pop
push
in
addl
test
fcom
xchg
dec
dec
mov
scas
jnp
or
or
stos
xchg
xor
mov
out
and
and
or
test
inc
stos
jmp
and
cmpsl
fbld
fisubrs
sub
inc
in
lahf
jge
je
xchg
mov
sub
jg
daa
mov
mov
cmp
xchg
pop
inc
adc
dec
push
dec
adc
lds
rclb
push
mov
and
add
rorb
jle
icebp
mov
mull
push
add
ss
das
into
dec
inc
push
sbb
mov
mov
push
scas
add
pop
mov
add
aam
add
mov
mov
mulb
lods
lahf
clc
popf
lods
ret
push
jp
fadds
adc
add
pop
pop
sbb
faddl
popw
stos
fiadds
jnp
loope
iret
cmpsl
lods
pushf
fcomi
push
jle
pop
out
mov
popf
push
jg
enter
rcr
jb
inc
mov
pop
and
nop
push
push
mov
test
mov
das
insl
out
add
cmc
mov
xor
iret
dec
rcl
cmpsb
or
out
into
adc
and
sbb
xchg
mov
xor
push
in
into
sarb
pop
push
jmp
adc
mov
xorb
jp
sbb
fcmovnbe
dec
add
push
ret
outsl
or
sub
insb
mov
or
fnstenv
cmp
jg
push
mov
pop
push
out
into
mov
inc
cmp
jnp
mov
push
push
clc
hlt
repz
out
adc
lcall
aad
cs
dec
dec
jbe
adc
jns
or
sbb
cmp
mov
pop
ret
push
xchg
dec
movb
adc
in
mov
push
dec
add
fisubrs
mov
aam
es
or
es
lea
sub
add
dec
dec
pushf
popf
gs
mov
xor
in
ret
test
lret
jb
fmull
lcall
lcall
xor
ret
mov
cld
cmp
sub
jg
push
pushf
jle
add
jmp
inc
xchg
fdivrl
xor
lahf
pop
lds
sub
push
mov
mov
push
outsl
dec
jbe
xor
cmpsb
mov
push
loopne
aas
loopne
in
mov
inc
rcr
dec
xchg
test
imul
pop
test
jmp
test
cmpsl
arpl
sub
andl
cwtl
ljmp
adc
icebp
adc
cld
out
movb
popf
adc
outsl
adc
stc
sbb
xlat
push
inc
out
ljmp
push
jns
dec
mov
fwait
mov
sub
rolb
ds
cmp
inc
pop
sarl
negb
cmpsb
scas
test
aaa
fcoms
stc
pop
add
mov
lds
lcall
cs
sub
pop
add
in
mull
push
jo
mov
shll
repnz
cs
in
push
add
outsl
push
lea
push
mov
and
sbb
adc
jp
push
call
inc
in
fists
fsts
jle
cli
add
sbb
mov
bound
ljmp
rep
scas
mov
inc
pop
pop
mov
aaa
sub
push
cmp
lods
mov
icebp
call
push
out
aad
lahf
lcall
and
shrl
popf
mov
rclb
or
popa
inc
mov
cmp
scas
dec
call
cmp
xor
fwait
aas
pop
pop
jl
test
imul
into
mov
mov
mov
stos
add
jb
hlt
out
xchg
xchg
inc
cltd
outsl
push
pop
aad
sbb
push
out
lods
shr
dec
in
jmp
int
or
iret
mov
jge
cltd
fldcw
hlt
jge
popa
add
cltd
ja
or
mov
xchg
mov
and
sub
nop
fs
mov
adc
pop
bound
fdivs
jns
jo
dec
mov
mov
mov
sti
jb
sbb
sbb
sbb
mov
adc
dec
test
lret
adc
pop
pop
leave
popa
iret
enter
mov
inc
xor
rorl
aas
loopne
xor
push
test
xchg
cltd
and
jno
pop
push
daa
fnsave
sbb
out
scas
cwtl
aaa
sahf
insl
movsl
xchg
xorb
xchg
out
pop
sub
push
outsb
shl
lds
pop
or
test
jnp
xchg
mov
inc
sub
cmc
cwtl
xor
int3
inc
ficompl
fisttps
mov
jl
nop
pop
cmp
mov
dec
inc
std
lahf
lock
mov
lea
adc
ljmp
aad
clc
mov
inc
fisubl
sti
leave
jmp
lret
inc
int
or
jno
jp
sbb
in
ljmp
lock
push
adc
mov
sbb
inc
popf
rclb
cmp
clc
movsl
filds
adc
decb
aam
dec
mov
repz
shlb
dec
sub
mov
mov
inc
mov
cltd
pop
bound
lret
xchg
pop
and
inc
mov
xor
shlb
cwtl
out
jb
mov
imulb
and
add
aad
sbb
jb
mov
jbe
cs
cmc
sub
xchg
push
fimuls
mov
ja
cmp
sar
xor
nop
testb
mov
mov
test
add
dec
arpl
push
aad
fsts
sbb
movsb
les
fidivs
lret
js
test
shl
mov
loope
cmc
roll
in
sub
loopne
pop
testb
adcb
jmp
sbb
sti
js
inc
imul
or
out
ret
dec
jge
push
cmp
test
lahf
or
jecxz
mov
imul
dec
pop
in
inc
aaa
mov
je
ljmp
addr16
sbb
in
fs
add
cmp
mov
jnp
push
jno
popf
fwait
mov
jmp
out
addr16
inc
push
cmc
sbb
in
add
roll
test
and
movsl
cs
insl
arpl
add
je
aaa
xchg
ficoms
in
sbb
xchg
cmp
add
sbb
sbb
enter
lds
adc
push
test
mov
bound
adc
loopne
add
subl
lret
xor
fdiv
xlat
cmpsb
jo
cmpsb
test
xlat
lahf
pop
mov
neg
bound
add
shlb
inc
fwait
mov
mov
dec
ja
add
les
stos
mov
cmc
xchg
mov
out
sbb
and
shld
insb
push
stc
movsb
clc
xchg
adc
cmp
sbb
out
outsb
pop
pop
ss
jmp
std
lcall
ret
rolb
pop
fwait
sub
fbld
dec
mov
xchg
fldl
or
sbb
orl
ja
push
bound
rorb
mov
mov
adc
mov
push
ror
imul
xorl
pop
mov
or
jo
divl
andb
sbb
repz
sti
fidivrl
out
cltd
adc
rorl
add
sub
fs
iret
imul
sbbb
nop
xchg
pop
sub
in
cmp
adc
aas
loopne
dec
mov
sub
mov
sub
lds
mov
dec
sar
xor
cmp
divl
outsb
mov
and
xchg
mov
shlb
cmp
das
push
fwait
adc
fidivs
mov
call
gs
jecxz
dec
add
sbb
out
jecxz
push
sbb
add
outsb
sbb
cwtl
lret
mov
push
scas
lahf
fs
leave
and
push
call
and
dec
xchg
jo
mov
inc
jecxz,pt
fadds
test
dec
add
or
mov
sub
mov
cmp
mov
dec
loope
push
jmp
cmpsb
scas
or
out
lods
xchg
mov
sti
mov
add
jp
dec
and
aad
lods
and
mov
scas
mov
scas
aas
sub
mov
push
fwait
inc
out
push
adc
je
aad
out
addr16
in
rol
cmpsb
ficoml
mov
into
repnz
push
jle
mov
jb
xlat
mov
and
mov
dec
mov
idiv
adc
jp
xchg
add
es
pop
ds
jg
mov
xor
or
iret
pop
bnd
shld
sbb
sub
mov
je
ljmp
sarl
sahf
out
push
mov
jbe
adc
adc
test
mov
and
mov
or
xor
sub
or
movsb
fdivp
clc
push
cli
call
sbb
xchg
les
popf
inc
pop
fstpl
xlat
dec
inc
aad
hlt
mov
ss
cmp
lods
out
ljmp
out
pop
mov
adc
adc
cmp
insl
mov
cmpl
pop
pop
xor
jb
out
dec
aad
pop
in
cmc
sbbl
mov
xchg
rolb
and
outsb
xchg
or
ss
xor
or
fsubp
jae
dec
hlt
out
ljmp
loope
cmp
outsb
cmp
cwtl
aad
lcall
sbb
into
adc
add
int3
mov
cmc
push
sub
hlt
dec
xor
mov
std
inc
iret
repnz
testl
xchg
sbb
orl
cmp
push
push
jmp
mov
inc
cmp
xor
daa
fisttps
mov
loop
aaa
sub
rolb
push
xchg
lret
scas
jnp
daa
lret
stos
mov
mov
xchg
inc
inc
add
fstpt
loopne
jns
insb
dec
cmpsb
hlt
jecxz
mov
sbb
add
rclb
jl
mov
pop
nop
pop
sbb
mov
or
mov
sar
sbb
int
add
push
adc
mov
inc
cmpsb
and
sub
fmul
or
fiadds
sti
jns
jb
cmp
sahf
dec
in
inc
pushw
je
dec
scas
mov
and
lds
inc
out
lds
ljmp
cmp
test
loope
das
inc
push
stos
test
loop
cmp
lahf
out
xchg
pushf
test
cmp
inc
xchg
pcmpeqb
negl
jo
sbbl
mov
fcompl
pushf
insb
sub
daa
lret
stc
pop
push
or
daa
call
loope
je
mov
dec
jl
push
fildll
and
andb
negl
push
jl
lahf
aam
sbb
pop
popf
leave
sbb
popf
lcall
mov
mov
mov
daa
call
in
xor
clc
push
pop
popf
jmp
fstl
sub
out
stc
out
add
in
push
rcrl
popf
test
mov
fldl
or
pop
mov
add
mov
adc
loop
push
add
mov
lcall
cmp
lahf
mov
pop
mov
scas
inc
cld
jb
sbb
nop
push
outsb
out
pop
nop
xchg
pop
pop
iret
xor
jmp
jl
rol
lret
test
pop
push
jg
enter
loop
mov
lds
shlb
jb
mov
push
jle
lock
inc
fwait
inc
imul
gs
xchg
stos
mov
mov
jl
incb
jge
into
int3
scas
lret
stos
je
movsb
sbb
scas
pop
jo
ficompl
fdivrs
out
out
fimull
aaa
cld
pusha
out
insl
pop
aas
and
cmp
or
cld
in
mov
sbb
xchg
sub
cmpsl
into
pusha
dec
fcoms
cli
sbb
into
into
movsl
mov
in
aas
movsl
pusha
cs
lds
and
inc
int3
out
adcb
je
lret
adc
sbb
cld
aas
xchg
jecxz
js,pt
jl
and
inc
hlt
inc
sub
bound
push
push
fidivrs
lret
sti
mov
sbb
enter
movsb
or
jno
xchg
loopne
mov
aaa
cmpsl
pop
mov
test
push
dec
shrb
sub
scas
inc
sbb
jo
xchg
dec
in
ja
pop
jmp
and
sbbl
in
sbb
xor
xchg
sbb
add
pop
popa
xchg
lret
add
mov
fwait
push
dec
aaa
out
in
punpckhdq
jno
mov
loop
jb
loopne
and
addr16
adc
insb
rorl
mov
icebp
fistpl
dec
cmc
inc
sar
mov
jmp
mov
dec
add
repz
movl
in
mov
cltd
shrl
repz
push
xor
pushf
push
stos
cmp
aad
and
cmc
cli
xor
xchg
pop
pop
pop
and
fmull
pop
sub
fwait
lods
mov
dec
jge
rcrl
gs
add
mov
xlat
imull
movsb
outsb
cmp
adc
pushf
jbe
ds
cmp
jns
dec
mov
addb
nop
insb
mov
cmp
cltd
and
rol
mov
out
sbb
mov
clc
pop
add
and
jbe
cmpsb
cwtl
mov
jbe
pop
pop
mov
loopew
nop
add
adc
cmpsb
popf
xor
jl
movsb
mov
mov
sbb
pop
bnd
movl
add
orl
jl
or
add
fs
push
lret
xchg
sbb
mov
imul
jecxz
mov
ret
adc
fisubl
arpl
mov
arpl
ss
xlat
jae
push
dec
mov
jp
push
jecxz
cltd
jns
xchg
xchg
nop
daa
pop
in
cwtl
out
xchg
xchg
nop
jmp
pop
and
pop
aam
aam
jge
scas
push
les
sbb
cmp
dec
lds
in
xchg
das
scas
es
xchg
and
jmp
or
xchg
pop
out
pusha
repz
adc
lcall
stc
adc
ss
sub
and
imul
and
div
scas
xchg
mov
aaa
add
mov
repz
pop
scas
inc
inc
pop
or
add
or
lods
cs
jnp
arpl
sahf
sahf
roll
rcrl
and
mov
or
xor
addr16
out
sub
mov
pop
and
xchg
push
insb
aad
mov
test
cli
pop
cld
jae
adc
leave
clc
das
lahf
test
ret
xorb
ss
sub
sti
outsb
pop
nop
clc
pop
shrl
gs
or
daa
aas
aad
int3
imulb
adc
push
mov
lea
inc
loop
aaa
push
fs
cltd
and
push
incb
cmp
cli
sbb
stos
std
push
mov
pop
add
mov
jnp
ficoml
rclb
rorl
add
je
xchg
popa
inc
fs
inc
inc
pop
das
int3
subl
mov
or
xlat
faddp
xchg
lock
mov
stos
in
or
mov
pop
jle
push
sub
xchg
ret
repz
bound
jns
sahf
dec
enter
push
call
inc
and
or
sbb
js
xor
mov
mov
jb
testl
imul
cmp
and
jle
imul
xchg
lcall
dec
arpl
dec
mov
cltd
daa
pop
lods
mov
mov
pop
or
mov
ret
cmpsl
out
dec
mov
sub
add
test
sub
add
cmp
cmp
in
cs
fimull
pop
sti
les
and
mov
pop
jmp
imul
rcrl
inc
push
inc
add
addr16
sbb
rcll
ret
sub
pop
sbb
stos
jecxz
sbbb
fcomp
fwait
nop
inc
cmpb
jl
mov
xor
sub
lds
sub
inc
rclb
mov
jg
mov
mov
sub
dec
dec
cmp
jae
pop
out
push
stos
push
add
data16
fst
cld
sub
out
in
mov
and
popf
shl
or
sub
out
fldl
inc
mov
jns
aad
cld
cmp
das
imul
cli
aad
push
and
out
mov
and
nop
inc
mov
sti
data16
loop
pop
push
out
sbb
mov
push
push
sub
rcrb
fs
out
fistpll
aad
jge
jp
rol
gs
pop
imul
sbb
push
xchg
adc
mov
ficompl
xchg
push
in
pusha
push
push
sahf
sbb
pop
lock
test
xbegin
or
nop
adc
xlat
adc
arpl
cmc
pop
rol
inc
sbb
mov
fdivrl
divl
add
jge
test
daa
je
xchg
in
sub
inc
xor
adc
inc
and
rolb
mov
rclb
rol
inc
in
inc
imul
xchg
mov
adc
rolb
dec
dec
jae
sub
cld
mov
push
lcall
adc
arpl
cmp
int3
test
dec
xor
or
xchg
sub
dec
pop
shlb
add
inc
lahf
adc
inc
ret
mov
sbb
pop
mov
gs
push
or
incl
orb
sub
xor
ds
int
xor
xchg
adc
push
add
out
pop
test
sbb
xchg
pop
int3
mov
lea
repnz
pop
imul
mov
dec
rcr
jb
xor
les
loope
jne
pop
cmp
testb
cld
enter
jle
mov
enter
mov
fbld
movsl
enter
jns
int
leave
std
or
add
lds
out
cmp
jp
and
push
imul
in
data16
icebp
in
dec
inc
or
xchg
push
pop
sub
xor
out
cmp
cmpb
mov
cmp
sbb
insb
cmp
mov
insb
aaa
dec
ds
scas
loope
inc
jns
or
sti
inc
leave
cwtl
sbb
aaa
fildl
pop
pop
sbb
mov
loop
add
out
movsl
iret
movntq
out
xor
ja
loope
inc
xor
daa
out
ss
fildl
ret
ror
jb
pusha
andl
cmc
pop
in
sbb
cmp
out
mov
push
mov
add
call
and
in
lods
shrb
dec
inc
or
jle
or
rorl
add
fldl
mov
mov
add
push
jne
xorb
loope
cmp
add
lret
and
push
cmpsl
test
mov
insb
adc
fs
lret
lock
test
or
jg
stos
inc
rcl
adc
mov
sub
xor
in
jecxz
cli
sub
pop
mulb
stc
out
add
push
and
xor
mov
sbb
insl
jno
test
je
and
ret
js
push
les
add
pop
or
int
mov
cmp
push
push
aaa
and
mov
mov
pop
cli
mov
cmpsl
cvtps2pd
adc
leave
call
mov
sbb
sbb
mov
notb
ret
std
out
adc
movsl
jecxz
cld
movsb
xchg
mov
mov
orb
add
fistpl
shll
xor
int
cmpsb
iret
xor
repnz
push
clc
mov
aaa
aaa
imul
stos
mov
sbb
in
add
mov
ret
into
xor
jne
xor
adc
test
imul
int3
dec
pop
xchg
pop
xor
mov
inc
ret
pusha
movb
in
xor
mov
data16
inc
in
out
add
and
in
add
dec
fnsave
out
push
and
andb
lcall
lahf
mov
dec
out
pop
mov
dec
ficompl
sub
mov
jecxz
fmuls
in
jbe
jae
jne
xchg
xor
inc
test
loopne
negb
leave
jp
or
jns
add
out
ljmp
stc
inc
xlat
xchg
daa
lcall
xor
sbb
std
jbe
push
lret
pusha
pop
xchg
ja
dec
xchg
adc
mov
jg
rep
icebp
push
stos
inc
stos
es
cmp
cmp
mov
and
inc
adc
push
xchg
pop
and
out
lock
inc
ret
outsl
jne
mov
sti
mov
cmc
mov
mov
cmp
sub
xchg
outsl
and
push
mov
add
mov
pop
sub
shrb
movsb
ret
ljmp
ret
in
xchg
mov
cli
je
dec
lock
sub
mov
xchg
icebp
and
xor
push
aad
mov
xorl
into
adc
push
lods
loop
int3
cmpb
out
decb
aas
push
jnp
push
dec
out
fstpt
cwtl
or
pushf
popf
xor
rcrb
bound
inc
mov
fcompl
sub
popf
mov
xchg
clc
sub
cmc
aam
add
jb
jecxz
fisubrl
xchg
cs
cwtl
movsl
dec
ss
push
int3
fcmovnbe
xchg
mov
imul
push
maskmovq
idivl
adc
dec
push
mov
mov
xor
and
insb
rorl
mov
shr
xchg
sbb
push
sbb
stos
cli
and
mov
sbb
pop
mov
vxorpd
rcl
adc
lcall
mov
mov
inc
lods
sti
data16
sub
lods
call
xor
stos
pop
lret
mov
jecxz
xor
pop
test
jne
cmp
pop
stos
and
dec
jmp
ljmp
addr16
rorl
lahf
sbb
pusha
dec
adc
jg
lds
xchg
sub
xor
xorb
je
stos
xlat
add
jecxz
aas
sahf
sbb
aaa
dec
cmp
es
push
lahf
pop
or
cmpb
outsl
jns
dec
push
cmp
mov
mov
addr16
push
in
cmp
cmp
clc
mov
loop
push
push
adc
enter
imul
sbb
movsb
or
test
push
sbb
insl
pop
stos
xor
mov
icebp
inc
shr
enter
pop
sti
mov
div
push
lret
inc
lods
stc
lret
inc
call
lret
dec
pop
loopne
int3
inc
jp
dec
sub
lods
rcrb
pop
push
cmp
sub
repz
cmp
arpl
nop
pop
dec
sti
out
cwtl
or
sbb
fcmove
add
out
adc
xor
sbbb
jb
mov
add
push
xor
jge
fdivl
out
pop
ljmp
adcl
pushf
xchg
jecxz
pop
fsubrp
pop
ja
dec
insb
add
dec
fdivrl
push
cmp
adc
int3
lds
jne
pop
sbb
js
rol
push
sub
clc
rcrb
icebp
pop
sahf
cltd
pop
test
shll
add
mov
ficoml
mov
xor
je
lret
jns
add
pop
in
int3
sbb
jle
out
jns
lcall
inc
and
int3
cmp
push
out
inc
addb
jns
fistl
mov
cwtl
icebp
ss
xlat
fwait
mov
xor
outsb
loop
mov
mov
popa
sbb
sbbl
sbb
cmp
and
aam
cmc
mov
push
push
xchg
jmp
into
call
add
inc
dec
inc
jmp
data16
jno
dec
push
or
xchg
nop
insb
push
mov
rclb
movsb
add
jg
ficomps
xor
mov
js
sub
mov
imul
add
cmp
mov
pop
aaa
or
jo
loop
outsl
xchg
incl
xchg
or
cmp
cltd
mov
pushf
mov
shll
dec
call
xchg
enter
push
pop
icebp
jnp
add
rclb
outsl
dec
jl
jae
push
orl
sbb
jne
in
std
repz
sub
je
mov
sub
repz
popf
lock
ja
jb
and
dec
or
and
pushf
xchg
ss
test
sub
jg
inc
sub
jne
frstor
fs
cmpl
adc
shll
push
sub
push
fbstp
movd
pushf
mov
mov
outsb
movsl
call
lcall
rcrl
mov
popf
jg
out
mov
push
fisubrl
sbb
xchg
nop
outsl
cmp
sbb
mov
pxor
shrl
sbb
test
jmp
or
jns
in
fcoms
sub
inc
lahf
mov
mov
push
into
aaa
les
mov
jbe
imul
dec
cwtl
div
aaa
and
add
sub
jae
add
or
mov
mov
cmp
adc
pop
rcr
xchg
addl
lret
repnz
aas
mov
fs
cmc
push
test
adc
movsl
fdivl
lea
and
mov
adc
insl
mov
cmc
jge
jo
mov
sub
xor
mov
adc
idivl
orb
test
mov
cmp
stos
xchg
cmp
fdiv
mov
insl
push
cmpsl
xchg
leave
fxch
lret
mov
mov
sete
js
jge
push
or
js
arpl
inc
mov
cmp
dec
add
leave
xorb
mov
adc
sbb
int3
xchg
xchg
add
ljmp
adc
and
int
cmp
lret
test
jae
sbb
cld
fiaddl
arpl
lds
pusha
mov
sbb
ljmp
nop
pusha
sub
stos
fsub
xor
stos
outsl
inc
add
insl
leave
xchg
lret
and
cli
pop
aas
pop
jae
add
or
xchg
shll
adc
add
and
lret
ljmp
seta
cs
and
ljmp
mov
ds
mov
fdivrs
in
bound
lea
fwait
sbbl
jae
and
popf
inc
mov
dec
int3
xchg
mov
aas
addr16
dec
mov
pop
cltd
and
and
nop
fwait
xchg
popf
push
dec
aaa
or
in
stos
out
cs
mov
fwait
into
sbb
ss
and
cmpsb
mov
jno
xor
jge
pusha
in
pop
cmpl
inc
xchg
incb
push
mov
outsb
cmp
xchg
xchg
imul
sub
pop
mov
lea
jmp
or
pop
imul
mov
mov
dec
ja
lret
lahf
stos
or
enter
xchg
and
sub
jecxz
loop,pn
imulb
dec
adc
das
add
dec
pop
mov
icebp
in
sub
push
sahf
jmp
jecxz
ljmp
bound
adc
cmp
adc
stos
sti
lods
xchg
mov
outsl
cli
mov
rcrb
lock
cmp
das
insl
shr
mov
xchg
popf
icebp
idivb
push
outsb
inc
repz
jp
pop
push
insl
repnz
fdivrl
push
sub
mov
lcall
in
sub
pop
out
insl
push
sbb
adc
test
xor
push
das
imulb
loopne
add
loopne
movsl
subb
pop
ret
cmpsb
mov
push
loopne
arpl
ss
xor
leave
ret
xchg
cmp
mov
mov
lcall
pop
jle
jne
sbb
sbb
mov
push
out
test
xor
or
inc
mov
nop
and
mov
aad
test
mul
ret
nop
in
data16
xorl
push
add
mov
mov
cmpsl
xor
shrl
ret
and
leave
jb
pop
inc
xor
push
loopne
sub
push
daa
lret
idivl
pop
fxtract
cwtl
pop
cltd
and
repnz
push
pop
xor
add
test
xchg
xor
and
inc
add
lock
mov
or
add
mov
sub
icebp
dec
jnp
jg
mov
adc
push
dec
inc
in
divb
ds
in
cmpsl
rorb
pop
rorb
dec
xchg
cmp
ljmp
adc
data16
js
push
loopne
inc
mov
mov
aam
jecxz
cmc
dec
in
mov
jg
xchg
add
xor
add
jp
call
mov
negl
outsb
cmpsl
aam
lds
fst
sbb
inc
xorl
shlb
stos
xor
pop
adc
pop
repnz
mov
stc
pop
test
decl
clc
push
adc
cmp
inc
mov
jg
push
and
cmp
lret
pop
sub
pop
pop
insb
xor
clc
cltd
jecxz
js
push
add
out
mov
mov
and
jns
add
das
push
mov
out
add
and
and
mov
or
sbb
xor
inc
mov
sub
repnz
jbe
popf
push
pop
js
movb
popf
inc
add
call
outsl
loop
mov
and
mov
pop
out
xlat
mov
push
test
fbstp
fnsave
cmovbe
out
fstps
cmp
push
fmul
add
cmp
push
aaa
mov
push
pop
mov
scas
jae
jne
cwtl
shrb
imul
shll
mov
mov
and
mov
in
mov
inc
or
lret
loope
std
fists
and
scas
enter
xchg
out
push
push
dec
packsswb
iret
jo
mov
jne
mov
je
sbb
rcrb
in
mov
icebp
push
popl
aas
pop
cmp
addl
push
lcall
psubsb
dec
leave
out
jbe
inc
mov
xchg
xchg
push
xor
loope
mov
cmp
iret
jns
add
fistpll
insl
dec
push
inc
out
cmp
sub
mov
mov
inc
add
gs
or
cmp
pop
les
ds
sub
add
xlat
stos
or
ss
or
add
fsubs
inc
push
stc
stos
add
jp
subl
iret
scas
bound
dec
andb
aad
fmulp
or
mov
cltd
ficomps
repz
mov
mov
sbb
shrl
arpl
sahf
add
xor
std
movsb
call
cmpsl
in
es
movsl
and
movsl
jno
insl
ret
dec
cmp
imul
cmp
cmc
or
mov
pop
pop
scas
cmpsb
dec
ficompl
jecxz
jmp
jns
or
cmc
cld
stos
push
dec
clc
inc
call
cmp
pop
bnd
cwtl
lahf
jle
nop
clc
jecxz
xlat
or
outsl
ja
pushf
ss
call
shrb
and
or
pop
add
push
mov
or
mov
in
fs
cs
call
test
jae
call
cmp
fstps
clc
adc
pop
gs
sub
push
sub
push
test
lahf
inc
aam
pop
lds
push
push
addl
push
dec
sbb
inc
or
push
add
inc
dec
cli
aaa
clc
repz
and
dec
jo
add
test
pushf
pusha
bound
shlb
or
sbb
fwait
mov
ret
and
mov
push
insb
dec
loop
or
out
add
mov
adc
mov
xlat
rolb
mov
dec
lock
mov
push
push
ds
add
loop
pop
push
add
test
insb
test
call
jmp
mov
enter
dec
mov
mov
xchg
xor
dec
imul
jmp
daa
std
popf
ja
xor
ss
adcl
and
xor
lahf
fmull
xchg
dec
add
push
cld
scas
call
cmp
dec
lock
jmp
enter
jecxz
or
adc
iret
out
xchg
jp
mov
inc
fistpll
mov
pop
push
pop
out
push
test
rolb
mov
lret
js
or
cli
add
insl
adc
inc
stc
xchg
loop
pop
call
push
or
movsb
cmp
or
jns
mov
jbe
push
mov
ficompl
xchg
jecxz
inc
bound
or
dec
int3
xor
sbb
adc
adc
jo
adc
call
xlat
aam
xchg
mov
sub
jbe
or
xor
scas
cmp
mov
repz
stos
mov
push
sub
xor
cmp
movsl
xor
xor
xchg
push
stos
lret
test
test
out
rorl
sub
ret
das
adc
add
shrl
inc
xor
insl
sub
imul
idivb
sub
or
cmc
or
test
test
in
fcomp
inc
sbb
adc
dec
cmc
das
dec
shlb
xchg
adc
filds
push
xchg
mov
sbb
mov
addl
dec
sbb
test
fisubl
pop
pop
nop
fidivrl
mov
mov
bound
scas
cmpsb
cmp
orl
cmp
sub
movb
mov
mov
lahf
push
in
jl
test
movsb
aad
shll
jmp
fadd
repz
xchg
or
mov
inc
lock
mov
stc
lahf
xor
inc
sti
stos
lret
hlt
jge
cmc
ss
mov
dec
mov
mov
mov
stc
or
scas
inc
aaa
sti
aaa
out
idiv
sub
inc
sub
mov
ds
inc
sbb
ss
outsl
xor
out
daa
pop
sti
inc
in
test
icebp
aam
adc
mov
inc
gs
lods
mov
or
dec
jge
xchg
shll
inc
ret
sub
mov
cmp
cmp
add
dec
xor
cli
mov
gs
jnp
pop
add
data16
inc
test
push
dec
and
fdiv
dec
adc
cld
push
pop
scas
movb
mov
add
int3
hlt
cmp
mov
xchg
mov
jmp
push
lods
adc
adc
jle
cmpsb
dec
ret
fsts
icebp
xchg
fcmove
mov
mov
add
jmp
sarb
fst
sti
pusha
sbb
add
lds
xor
jp
add
pusha
je
arpl
adc
mov
sub
jmp
sahf
leave
imul
outsl
cmp
xchg
sti
jmp
das
mov
std
fildll
sbb
ficoms
push
fs
sub
popa
mov
loopne
xor
cmc
add
mov
test
mov
xor
jl
cmp
incb
adc
mov
mov
xor
icebp
jp
cmpl
inc
out
mov
jmp
sub
mov
arpl
ds
imul
push
icebp
xchg
test
jo
addr16
xchg
and
fs
add
jecxz
popl
repnz
sti
mov
pop
pushf
mov
out
jnp
or
imul
inc
push
sbbl
test
loopne
push
mov
sahf
stc
dec
mov
cmpsb
inc
clc
xchg
cltd
lods
xlat
clc
fisubs
pop
pop
push
lahf
data16
aaa
jno
and
clc
outsb
inc
mov
scas
clc
flds
loopne
cld
sub
movsl
mov
jae
mov
mov
pop
lret
test
jecxz
ret
mov
mov
shll
decb
imull
mov
sarb
xor
call
repz
lcall
inc
sub
jp
and
mov
int
in
push
int3
xchg
jge
mov
fs
addr16
or
mov
mov
dec
cmpsl
fistl
and
inc
lcall
fldt
arpl
cmp
data16
adc
jl
and
shrl
mov
xor
or
popa
mov
lahf
in
sub
push
popf
xor
and
jbe
stos
fadd
sub
add
movsb
mov
push
inc
or
repz
xor
dec
fwait
mov
faddl
pop
iret
icebp
pop
lcall
das
call
out
jmp
das
fnsave
icebp
xor
les
xor
xor
test
jae
dec
xchg
incl
imul
mov
xchg
cmp
push
add
lock
xor
push
mov
mov
push
or
lret
xor
sbb
aaa
adc
mov
test
and
adc
push
xor
aam
movsb
jecxz
push
insl
out
dec
and
sbb
ret
cmpb
pop
lods
mov
xchg
je
arpl
xchg
add
popf
imul
das
push
nop
clc
push
cmp
pop
and
pushf
jb
inc
jo
mov
or
mov
sbb
cs
shlb
arpl
lret
test
cmp
ret
jne
cltd
jp
out
jl,pt
cmpsl
aad
mov
mov
lea
jge
shrl
sbb
cmp
repnz
sbb
lret
mov
out
xchg
sbb
insb
in
insl
dec
pop
push
xchg
repz
dec
jb
rcrb
mov
inc
lret
adc
mov
rclb
sub
out
push
push
xlat
mov
cmp
jl
aaa
pop
loop
sub
aas
sub
pop
shl
test
call
pop
pusha
lods
out
and
sbb
fistps
dec
push
rclb
sbb
jle
js
lahf
js
pop
les
xor
add
cli
dec
mov
pop
or
jno
popa
adc
out
mov
add
fiadds
iret
mov
and
add
xchg
mov
push
xor
into
jmp
pop
ja
adc
cmpsb
lahf
mov
dec
std
add
ror
push
xor
rcrb
inc
notl
ja
sub
jo
sub
add
push
int3
jle
rorl
mov
and
out
sub
gs
lods
xchg
hlt
cs
cmp
mov
sub
jp
out
jb
jno
test
lea
mov
es
mov
out
push
xchg
and
push
shr
mov
sbb
cmpsl
sub
push
test
imul
or
rclb
test
jno
imul
mov
outsl
sbb
inc
jecxz
mov
loop
sahf
insb
pop
add
insl
hlt
xchg
pushf
cs
xor
adc
sub
cli
out
mov
mov
add
std
clc
clc
jo
cmpsb
xchg
das
jno
es
lahf
jae
in
sbb
xchg
lock
fdivr
gs
mov
lcall
icebp
xchg
jecxz
pop
mov
cltd
dec
mov
loopne
jmp
mov
mov
pusha
incl
pop
push
lahf
adc
stc
stc
jae
mov
lods
fadds
or
loope
stos
dec
into
leave
dec
mov
ficoml
stc
out
dec
cmpsl
insb
pusha
push
mov
push
sub
lea
dec
or
in
int3
cmp
or
sub
pop
fisubrl
or
gs
into
int3
pop
das
in
jge,pn
pop
add
or
adc
pop
sbb
xor
shrb
loop
std
pop
sarl
ds
insl
ja
ret
dec
iret
xchg
std
into
icebp
and
push
jmp
dec
pand
xchg
push
xchg
je
cmp
es
add
add
add
xor
inc
fdivrl
shll
into
and
insl
xor
jo
ret
push
repz
arpl
push
into
fs
or
mov
inc
ljmp
inc
push
sahf
xor
mov
mov
mov
inc
push
mov
call
mov
and
pop
hlt
add
xor
dec
out
fiaddl
repz
xchg
mov
and
mov
pop
mov
push
fmulp
adcb
adc
cmp
xor
mov
inc
repz
push
and
ret
fs
stc
cmp
sti
cs
dec
ja
jmp
pop
xchg
dec
shl
call
push
push
out
inc
cmpsb
mov
enter
or
ds
scas
adc
mov
gs
xchg
cld
jp
scas
push
sub
cs
pop
sub
mov
adc
jle
dec
outsb
pop
sarl
jmp
outsl
dec
negb
dec
leave
and
shrb
inc
outsb
sti
enter
sub
xor
cli
xchg
adc
lret
xchg
scas
mov
je
push
adc
dec
jle
les
dec
lret
jmp
sbb
xchg
loop
loopne
push
sub
fcompl
pushf
fcmovnbe
xlat
push
hlt
ds
outsl
dec
js
loop
pushf
jo
shl
lods
xor
rcr
movsb
inc
int3
iret
das
add
push
test
xchg
xchg
hlt
dec
and
or
xchg
xor
push
add
std
sbb
jno
inc
xchg
sub
into
sub
dec
jno
daa
push
or
scas
sub
mov
out
mov
inc
lock
std
arpl
jmp
mov
pop
pop
enter
scas
fadds
mov
int3
mov
adc
arpl
mull
gs
addr16
mov
xchg
pop
or
insb
pusha
stos
push
and
mov
or
lods
popf
stos
ror
xor
jo
fisubrl
cs
hlt
mov
push
mov
rorl
insb
sbb
mov
movsl
ret
xchg
xor
out
pop
and
dec
sbb
inc
mov
ficompl
xchg
adcb
sub
or
and
cld
sbb
push
cmp
fildl
inc
test
sub
out
pop
cmp
cmp
jmp
aad
daa
dec
cmp
ffreep
aas
jp
in
sbb
sarb
loope
xchg
jl
hlt
movups
xchg
sbb
xchg
lods
les
repz
xor
nop
mov
mov
daa
push
ja
daa
xchg
jno
and
pop
movsl
outsb
mov
fs
fwait
pop
mov
inc
or
push
lea
lcall
adc
mov
pop
out
repnz
inc
dec
mov
jno
xor
lret
pop
lret
sti
shlb
jne
lds
xor
pop
sbb
adc
rclb
inc
negb
add
arpl
mov
mov
add
mov
inc
inc
in
emms
inc
rcll
xor
or
xchg
inc
xorb
decl
mov
jge
andb
mov
popa
leave
outsl
bound
and
pop
pop
sbb
int3
les
lret
push
fs
xchg
push
xor
out
cmp
popf
inc
add
les
pop
dec
xchg
outsl
push
xor
xlat
call
fcoms
lahf
stos
and
pop
call
mov
in
jne
xchg
iret
lahf
addl
xor
inc
loope
shll
cmp
adc
push
jns
lods
pop
inc
and
sub
daa
jmp
fcompl
lock
mov
sbb
stc
enter
inc
sti
inc
push
lock
sbb
and
adc
sbb
enter
addr16
mov
jecxz
gs
or
out
enter
sbb
mov
add
nop
xchg
cld
insb
dec
push
dec
xchg
loopne
frstor
inc
inc
mov
std
mov
or
aas
jp
push
and
test
jl
inc
cltd
inc
pop
jle
cmpsl
pop
jmp
jb
xchg
ja
mov
lods
loope
int
fcomp
data16
mov
lcall
jmp
lods
pop
cltd
shlb
xor
add
pushf
add
jne
out
xchg
mov
enter
dec
js
push
mov
into
sti
add
mov
or
sub
push
mull
pop
aaa
xor
call
push
xor
push
subb
fsubr
push
push
xor
sub
xor
mov
cld
xchg
add
mov
movsb
adc
lods
xchg
mov
and
mov
xor
mov
dec
sub
aad
sti
ss
pop
stc
rcrb
sbb
leave
ret
in
fistl
loopne
in
add
imul
cmpl
jecxz
clc
fdivrs
out
xchg
mov
dec
mov
rclb
push
jg
sub
shrb
jno
inc
push
add
shlb
dec
sbb
cli
fwait
aas
pusha
inc
movsl
outsl
insl
fsubs
ss
or
push
lea
out
cwtl
test
ret
aam
xchg
adc
mov
jae
cld
dec
mov
or
push
sarb
mov
aad
and
lock
lea
test
test
jecxz
outsl
cmpsb
out
sub
adc
andb
or
stos
sqrtps
xchg
repz
mov
cmpsb
pusha
imul
adc
add
loope
pop
iret
imul
xchg
out
jle
movl
imul
pop
pop
mov
cmpsb
inc
xlat
fistpl
das
and
stos
ret
inc
xchg
push
pusha
cmc
repz
mov
jle
cmp
xlat
sbb
pop
dec
sbb
cmp
inc
pop
cld
push
dec
subl
sub
adc
jle,pn
sbb
rorl
repnz
hlt
js
pop
adc
mov
insl
jle
sbb
cli
and
ss
xchg
lret
test
push
mov
add
push
clc
pushf
mov
fwait
push
js
data16
sti
fidivrs
mov
insl
les
xchg
mov
add
sub
mov
jne
je
mov
push
orb
jmp
inc
push
jne
push
jmp
insb
addr16
mov
push
xchg
mov
xchg
xor
mov
cmc
in
scas
arpl
sub
mov
sbb
pop
xchg
cmp
mov
or
jmp
xchg
nop
ficompl
cld
xchg
out
xchg
cmp
aad
mov
push
stos
aam
mov
push
scas
mul
out
sub
sti
and
js
bound
push
loope
loope
outsl
mov
or
test
rorb
dec
jmp
rclb
sub
popa
pusha
sbb
int
jecxz
movsl
xor
icebp
jle
inc
adc
mov
cmp
fadd
and
test
jecxz
in
add
jns
repz
call
fidivrs
adc
lods
popf
or
and
icebp
imul
ret
sub
outsl
sahf
jns
jno
lds
dec
test
and
mov
loop
out
pushf
stos
pop
cmc
fsubrp
or
mov
dec
push
roll
sbb
cld
inc
jno
ret
jp
xchg
adc
xor
push
cld
dec
push
cmp
ret
adc
in
addr16
inc
out
cld
mov
mov
add
lcall
add
push
mov
jo
push
loope
mov
loop,pn
mov
dec
orb
sub
pop
lea
in
mov
mov
inc
mov
mov
or
ss
aas
sbbb
or
fdivrl
std
jne
pop
stos
repnz
cmp
xchg
loopne
lcall
push
sti
inc
push
fwait
pop
test
popa
jg
or
idivb
into
leave
rcll
sarl
jbe
and
outsl
rorl
arpl
int3
jae
imul
push
jecxz
xor
dec
dec
out
mov
std
or
ja
mov
and
enter
xor
dec
push
inc
xchg
enter
fisttps
addr16
scas
mov
fiadds
sub
xlat
jbe
pop
outsb
out
into
push
jne
sub
mov
outsb
lret
adc
cmpsb
pop
ret
add
call
jae
add
push
dec
insb
divb
jge
loope
jns
std
cmp
pusha
das
ja
insl
loop
ret
adc
mov
and
cld
popa
and
clc
adc
pop
shlb
ret
aad
mov
mov
ja
in
lods
fwait
push
dec
lret
stos
sub
jle
and
dec
fistpll
nop
cmp
lahf
imul
mov
mov
sti
sbb
adc
lods
mov
popa
out
roll
inc
enter
mov
test
mov
std
fwait
aam
js
push
xchg
sub
fists
sbb
sub
inc
push
ds
out
les
sub
sbb
arpl
mov
jmp
ret
movsb
es
xor
aam
fists
aas
aas
adc
loope
jge
xchg
dec
ret
ja
mov
pop
sub
xchg
add
stos
out
in
outsl
fdivrs
in
and
cwtl
lret
cmp
push
push
xchg
bound
xchg
or
outsl
mov
repz
mov
xor
push
cmpsb
movsl
je
mov
jbe
fsts
cmp
jae
outsl
xor
sahf
mov
adc
push
rep
and
mov
xor
sahf
inc
xchg
sbb
cmpsb
lods
call
pop
mov
add
xchg
and
ret
sbb
push
addr16
xchg
faddl
xchg
clc
jl
scas
or
stc
stc
sti
cwtl
inc
add
mov
pushf
or
add
es
les
push
into
in
jns
mov
cli
xor
lret
adcl
arpl
xor
mov
dec
stc
jge
pop
movsb
lahf
das
jbe
inc
aad
dec
enter
jo
cmpsb
cmp
stos
mov
mov
adc
loopne
xchg
mov
ja
imul
and
insl
add
mov
jbe
push
cld
in
out
jmp
mov
xor
lcall
sbbl
pop
arpl
push
fst
into
je
sub
jmp
roll
roll
inc
and
cmpsb
jp
pop
mov
adc
hlt
cmp
shlb
mov
stos
out
lock
sbb
jno
pushf
and
cmc
ja
sub
outsb
cld
xchg
and
mov
jg
cmpsl
fwait
ret
in
pop
cmp
fld1
movsb
xor
xor
int
jo
ss
pop
xchg
lea
jle
cmpb
dec
into
jge
sub
push
lret
test
stos
loope
xchg
repnz
out
mov
cld
inc
push
sub
in
adc
jg
mov
fs
or
cmp
outsb
iret
fisttpll
pop
cltd
loopne
dec
outsb
mov
fwait
xchg
es
pusha
cmpsb
add
mov
andl
and
push
xor
sahf
andl
adc
out
test
mov
test
repnz
shlb
clc
mov
sarl
cmp
dec
jo
rcll
inc
mov
mov
jb
repz
popa
xor
dec
sbbl
lock
push
sub
inc
mov
push
int3
jecxz
sti
das
cmp
int3
sbb
cmp
fistpll
lods
rolb
sub
dec
nop
sub
mov
sahf
adc
and
popa
adc
imul
inc
pop
ret
rorl
incl
xor
aam
or
jg
mov
pop
inc
js
ds
in
mov
add
adc
les
mov
fmull
push
aas
adc
in
jle
mov
xor
and
shll
lret
repnz
insb
dec
sbb
hlt
add
cmp
xor
mov
dec
sarl
fistps
je
insl
or
push
movsl
jecxz
or
jle
jge
lea
scas
adc
inc
and
cli
mov
clc
movsl
jp
out
out
jae
ja
loopne
xor
jl
xchg
sbbb
movb
aam
lahf
cld
push
mov
int3
int
outsb
mov
movsl
aam
fstps
mov
pusha
jge
cmp
cmp
cmp
mov
xor
mov
adc
addb
jno
mov
jecxz
rol
or
lock
mov
sub
insb
cmp
ror
bound
jno
pop
icebp
adc
pop
xchg
jle
mov
cmp
sub
daa
dec
xor
test
lcall
mov
and
mov
or
mov
out
mov
add
pop
xchg
sub
es
jnp
movsl
jp
repz
add
daa
lret
add
xlat
test
movsb
push
sbb
imul
in
clc
mov
stc
inc
sub
push
and
imull
int
ror
insl
jp
or
loop
bnd
outsl
arpl
in
add
outsb
scas
jp
in
dec
sbb
sbb
fdivrs
inc
rclb
bound
lcall
lock
cld
and
sbb
or
sbb
das
ret
jo
pop
cmp
cltd
pop
fs
push
push
hlt
dec
or
inc
push
or
mov
cmp
jbe
xchg
rcrl
push
mov
nop
mov
adc
mov
adc
mov
mov
and
dec
push
xor
dec
mov
in
and
dec
gs
int
xor
and
adc
insl
pop
jmp
or
pop
fistpl
test
lahf
xchg
movsb
leave
mov
adc
mov
inc
mov
dec
adc
hlt
cmc
int3
rclb
pop
inc
stos
ret
mov
and
js
sub
mov
xor
jae
jl
fdivrs
cmc
inc
addb
add
inc
popl
pop
int
inc
data16
cmp
test
cmpsb
shl
jmp
icebp
pop
jmp
push
outsl
push
in
jnp
push
jge
dec
popf
cmpsb
movsb
fmul
adc
jg
xlat
push
test
mov
jmp
arpl
dec
shrl
ret
inc
or
test
or
clc
cmp
mov
cmp
ja
and
mov
fyl2xp1
mov
jbe
push
aad
adc
pop
add
test
in
jmp
out
hlt
jbe
je
mov
pushf
cmc
les
xlat
xlat
ss
aad
mov
dec
pand
push
or
sbb
pop
lret
leave
repz
sbb
fcmovu
xchg
arpl
dec
je
adc
dec
lahf
mov
nop
je
cld
cld
popf
xchg
ja
sti
inc
push
pop
int3
jb
push
les
mov
scas
hlt
jecxz
loopne
push
pop
lea
rclb
out
mov
fwait
mov
stc
jnp
mov
and
aaa
stos
fimuls
jp
sub
push
dec
cmp
push
aad
outsl
gs
std
lods
aad
jl
mov
sbb
add
pop
cld
in
adc
outsl
jg
jecxz
js
push
jo
xor
cmp
mov
int3
sub
pop
push
nop
pop
xorps
clc
movsl
insl
adc
push
je
ret
cmc
mov
imul
lock
xchg
insb
lret
out
push
std
dec
add
adc
dec
sub
sbb
je
in
cld
inc
ljmp
inc
outsb
inc
sar
insl
and
cwtl
cmpsl
dec
aas
outsl
add
sti
imul
lcall
dec
test
cmp
sbb
out
ljmp
arpl
pop
sub
push
sbb
jb
adc
adc
lods
lret
adc
mov
or
jmp
scas
ficomps
out
xor
and
pop
cmp
jae
and
pop
fs
aas
cmpsb
fisttpl
int
pop
stc
pushl
pop
pop
aad
cmp
add
aam
jns
xorl
ds
add
aas
addb
ror
por
inc
clc
or
testl
test
xchg
rcl
lods
addb
push
xchg
push
ret
xchg
cltd
sbb
jge
mov
pop
addl
mov
les
ret
ret
add
mov
rorb
ret
je
bound
ficompl
and
and
out
daa
hlt
and
icebp
out
dec
push
cmp
push
outsb
adc
fimuls
add
in
mov
stc
mov
fcmovne
and
inc
xor
sub
stos
mov
jae
xchg
xchg
jae
mov
int3
popf
test
in
jl
mov
mov
or
sbb
pop
push
sbb
mov
sub
ret
and
aaa
or
sub
lret
lea
jl
aam
sbb
das
add
mov
adc
mov
andb
loopne
adc
cmpsl
mov
cmp
cli
in
jecxz
cmp
or
sbb
fstpt
adc
shlb
lahf
lds
mov
xorb
stc
loopne
test
sub
cs
and
arpl
add
xchg
adc
popf
sub
sbb
push
or
mov
sbb
push
pop
loope
mov
xchg
stos
xor
repz
cmp
sub
imul
ret
test
push
pop
lock
movsb
push
xchg
jae
outsl
push
icebp
cmp
test
pop
out
cmp
sbb
cmp
jmp
es
jno
xchg
int3
in
ja
test
call
pop
inc
push
data16
mulb
pop
clc
mov
dec
xchg
call
testb
pop
or
pop
pop
dec
push
outsb
popf
test
cmp
jne
add
cli
push
movsl
test
inc
test
outsl
scas
into
jg
adcb
cmp
adc
and
xor
call
push
cli
cmp
and
cmpsl
mov
and
mov
add
mov
dec
mov
and
test
insb
out
or
and
fidivl
popf
cmpsl
or
mov
adc
into
xor
jmp
xchg
insb
test
in
mov
lcall
sub
mov
cmp
adc
dec
int
outsb
sbb
or
out
adc
push
mov
lods
int
imul
inc
or
cltd
repnz
dec
cmp
mov
movsl
or
sub
xlat
aam
popf
jl
and
add
pop
stos
add
fsts
push
adc
pop
pop
movsb
sub
icebp
mov
lret
out
js
ss
clc
add
or
dec
mov
xor
xchg
mov
movsl
inc
lcall
mov
adc
mov
xchg
xchg
add
mov
lods
and
mov
inc
xchg
outsb
fstpl
push
ss
jae
mov
out
push
push
es
clc
push
les
int
dec
fdivl
or
xchg
and
jmp
pushf
jb
mov
xchg
int
inc
into
mov
inc
lahf
and
insb
ds
pop
punpcklbw
push
inc
push
jge
xor
xadd
inc
pop
popa
sub
pop
dec
jg
jno
push
xlat
inc
in
xorb
dec
dec
and
sbb
or
jg
push
mov
mov
inc
xchg
lcall
mov
ljmp
inc
clc
inc
sbb
jb
andl
icebp
jbe
icebp
pushf
dec
adc
ret
cmp
inc
sub
adc
jle
lcall
ret
mov
mov
sub
fcoms
lahf
ret
xor
shlb
scas
cwtl
cmpl
out
fdivp
push
loop
mov
inc
mov
stc
mov
jp
in
prefetcht2
aad
ss
mov
fs
neg
sbbb
pop
andl
mov
adc
dec
inc
sub
and
add
push
in
adc
lods
ljmp
ret
push
into
cld
push
push
into
test
add
sbb
sub
iret
in
pop
pop
scas
add
push
jecxz
ret
xchg
mov
mov
insb
sub
daa
arpl
sbb
lock
mov
adc
mov
mov
push
adcl
das
hlt
fldt
cmp
xor
int3
mov
pop
cmp
aas
test
out
jg
jae
frstor
push
xor
xlat
stos
inc
inc
inc
arpl
sbb
cmp
lret
cwtl
lock
js
lret
sahf
xor
pop
lods
or
cld
sbb
mov
jle
das
sahf
jp
out
jne
pop
int
dec
sbb
xchg
subb
ljmp
push
aam
lock
aas
aam
in
rcrl
enter
lahf
in
cmp
mov
adcl
aas
jo
lret
dec
popa
add
push
jbe
insb
out
sbb
arpl
jb
ret
xchg
xor
pop
repnz
ror
mov
arpl
les
cmp
or
mov
sbb
jmp
repz
mov
xor
mov
cs
out
push
lcall
cmp
rcrl
pusha
in
push
les
das
mov
in
mov
pop
lahf
push
xlat
scas
addl
xchg
sbb
orl
popa
test
pop
or
sub
mov
adcl
lret
xor
add
jo
add
pop
movsb
loop
aas
hlt
xor
xor
shlb
out
pop
adc
pop
in
cld
sbb
jmp
jno
add
adc
jo
dec
divb
popf
cmp
ret
fs
pop
pop
sbb
in
call
dec
xorb
pop
xchg
mov
sbb
frstor
pop
iret
pop
ficomps
sbb
push
sub
push
cmp
je
cmp
aam
cmp
cmp
cltd
add
push
aas
fdivs
jno
mov
popa
fucomp
or
push
xchg
loope
idiv
pop
stc
lods
sti
loopne
outsl
add
cmp
sub
and
loope
add
and
jle
jp
hlt
or
mov
int3
adc
add
xlat
pop
push
add
sub
pop
xchg
lods
insb
jo
inc
fiaddl
fadds
aaa
jne
pop
dec
inc
xor
cmp
adc
inc
jb
decl
faddp
dec
mov
lds
pop
lret
lret
add
lret
clc
mov
jns
fimuls
test
out
imul
insb
pop
xchg
mov
nop
xchg
xchg
add
inc
jns
or
adc
or
imul
mov
pop
enter
mov
xor
sbbb
dec
pop
pop
inc
popf
add
pop
lock
dec
ljmp
fmuls
fwait
test
xor
insb
dec
jno
cwtl
mov
lcall
rclb
lods
xor
xor
mov
das
or
ret
in
dec
test
pop
in
int3
sub
sbb
xchg
and
shrb
pop
std
cwtl
ret
sub
lods
rcrl
popa
mov
sti
iret
jnp
addr16
xor
mov
mov
push
jno
or
aas
leave
rclb
out
imul
xchg
ror
mov
add
jmp
push
pop
dec
dec
mov
arpl
mov
clc
xchg
push
ret
into
jne
ret
adc
lahf
mov
mov
adc
mov
aad
push
push
jmp
jb
jmp
pop
and
mov
xchg
cmp
xchg
popa
shlb
ja
fildll
inc
jp
ss
clc
jo
cmp
movsb
push
xor
insl
mov
pushf
jmp
aad
stos
hlt
popf
xchg
xor
gs
add
stc
xor
out
lcall
icebp
lock
or
xor
gs
xlat
dec
add
dec
mov
dec
cmp
pusha
xor
adc
xchg
jbe
outsl
pop
dec
hlt
lahf
xor
or
inc
ss
jge
jns
je
inc
pushf
cld
fisubrs
pop
fiaddl
jecxz,pn
ret
popf
mov
xor
and
bound
jb
aas
shl
dec
test
jne
inc
sub
fs
ds
in
icebp
popa
push
sub
dec
mov
in
adc
popf
js
pop
mov
and
arpl
mov
jp
fildl
outsl
or
pop
in
or
adc
add
sub
test
hlt
sub
xchg
int3
sar
lods
testb
lret
stos
mov
es
cmp
aaa
pop
mov
js
and
jbe
pop
repnz
loopne
mov
jnp
sub
lds
push
cmp
bound
dec
mov
dec
outsb
insb
jge
lahf
ljmp
mov
jnp
inc
cmp
movsl
add
insl
out
das
std
sbb
push
push
cwtl
in
mov
jns
push
jle
add
push
dec
jb
cs
loop
popf
pop
or
pop
and
rolb
push
ljmp
sahf
xchg
cmp
jp
cld
jmp
push
cmpsb
mov
xor
rcrw
inc
pop
pop
xchg
sbbb
jb
push
dec
movsl
dec
push
arpl
daa
fstpt
xchg
out
and
cmp
pop
mov
adc
shrb
popf
sti
mov
aam
push
loope
enter
jns
jl
subb
add
adc
ss
cld
stos
out
pop
cld
push
call
es
adc
adc
sarb
mov
mov
int
mov
fdiv
lods
xchg
aaa
xchg
sub
inc
push
push
cmp
enter
clc
movsb
ja
iret
test
cmc
xor
mov
dec
in
add
mov
jge
xlat
stc
lret
les
data16
sub
out
jle
lds
enter
mov
jnp
insl
inc
dec
lea
xor
jo
rorb
inc
dec
xor
push
les
shl
jns
jo
mov
or
adc
test
sbb
xor
mov
xchg
dec
ret
movaps
push
cltd
fbstp
fsubl
mov
rep
movsb
pop
lock
nop
fwait
jo
leave
cmp
xchg
pop
jns
iret
inc
jge
dec
mov
pop
jo
fcmovnbe
fdiv
xchg
insl
loope
fstps
pop
mul
push
int3
pop
mov
sub
jg
mov
mov
lret
lock
add
xchg
mov
mov
jne
or
pop
jns
scas
mov
dec
dec
pushf
inc
push
test
add
jmp
push
fistpll
das
mov
inc
sub
in
incl
adc
sub
arpl
fisttps
lds
outsl
jnp
mov
or
lahf
pop
jmp
mov
sbb
xor
fwait
inc
and
cli
pop
cmp
push
push
and
sub
or
aad
addr16
lahf
shl
push
pop
mov
xor
xor
sbb
push
mov
data16
outsb
rcrl
je
mov
dec
xchg
xor
push
aaa
sub
repnz
inc
sbb
xor
mov
loopne
stc
in
insl
iret
pop
push
stos
mov
mov
push
loope
xor
mov
mov
movl
jnp
sbb
inc
mov
jnp
pop
dec
jmp
jmp
nop
scas
mov
aaa
dec
jmp
js
cld
rolb
push
xlat
sub
ret
scas
movsl
arpl
inc
sbb
cmp
into
test
push
cmpsb
outsl
push
xorl
cmc
dec
jp
xchg
lcall
mov
rcrl
mov
adc
xchg
fs
mov
pop
out
push
sbb
cld
lea
sahf
fistpll
adc
cmpsb
rolb
pop
lcall
add
pop
sbb
rclb
mov
push
rclb
mov
lea
push
ja
add
xor
les
mov
test
push
arpl
imul
jo
inc
fistl
enter
mov
gs
mov
int3
xchg
xchg
popf
in
out
mov
jnp
mov
mov
stos
and
dec
ljmp
js
pop
pop
mov
cmc
mov
mov
and
sahf
xchg
xor
arpl
int3
pop
adc
xor
inc
popa
push
int
lock
in
outsl
xchg
mov
mov
outsb
push
jbe
and
mov
in
push
lret
inc
push
mov
pop
or
aaa
bound
roll
dec
adc
cltd
out
or
lret
push
int
xor
or
inc
sbb
ret
jo
dec
out
sbbb
mov
add
mov
subb
ljmp
movsl
jecxz
xchg
stos
push
cmp
jmp
cmp
inc
sub
in
jge
gs
pop
lret
jns
pop
add
loop
pop
pop
insl
adc
mov
sbb
sbb
cs
rol
sti
cmp
mov
mov
into
lock
jno
addr16
pushf
sub
daa
and
lea
enter
clc
pop
loopne
or
nop
jge
fmull
insl
aaa
mov
mov
inc
pop
pop
jae
jmp
add
sub
ja
sbb
push
cmp
inc
scas
arpl
stc
mov
cmpsb
movsb
lret
addr16
mov
ja
hlt
test
into
push
test
sbb
cmc
push
ficomps
fdivp
bound
cld
sub
in
ret
lahf
je
inc
js
int
pop
scas
jbe
out
aas
lods
loopne
sbb
repnz
ret
mov
imul
cwtl
icebp
leave
xchg
push
add
push
pop
es
xchg
sbb
jo
fcoms
fisubs
sbb
addl
sub
inc
and
cli
out
xchg
jecxz
add
jle
or
cmp
nop
add
out
mov
enter
roll
sti
pop
jmp
push
insb
cmp
aas
out
cmp
xlat
out
inc
xor
arpl
leave
xor
inc
sub
scas
clc
jo
xchg
push
pop
call
or
jl
scas
lods
dec
subb
xchg
adc
sub
jns
push
pop
pop
xor
mov
and
push
loopne
pop
test
hlt
enter
mov
cld
cmp
jge
cli
mov
dec
jns
mov
mov
sti
push
dec
shrb
sub
js
jne
sub
bound
je
clc
mov
leave
imul
in
mov
cmp
pop
repz
dec
dec
jns
add
add
mov
or
inc
push
xchg
shl
and
cli
ret
stos
or
cld
int
xor
push
pop
cmp
sub
mov
ds
push
es
xor
jbe
rcll
stos
ret
push
rep
test
mov
lds
out
ds
fcoms
sbb
pop
mov
xor
and
push
xor
fisubrl
cli
pop
mov
das
movsl
lret
xor
sarl
jp
mov
lds
cmc
loope
mov
pusha
icebp
cltd
pop
add
lea
mov
dec
cld
inc
stos
popa
out
test
and
xor
iret
fisttpl
xchg
xchg
aad
dec
shlb
adc
push
ss
imul
mov
cmp
arpl
xchg
fbld
pop
push
pop
popf
cmpsl
fildll
pop
mov
jg
mov
xor
or
xchg
daa
or
into
mov
push
stos
shlb
pop
shl
les
std
push
xor
mov
xor
inc
int3
dec
xchg
les
add
daa
sub
sub
inc
jnp
pop
mov
jp
push
movsb
and
sbb
enter
stc
test
mov
and
sbb
lret
or
cmp
fucom
pop
aaa
lret
inc
push
pop
out
xchg
loope
enter
f2xm1
scas
ljmp
mov
loope
push
in
pop
sbb
leave
and
xchg
pop
pop
imul
andb
insl
int
test
mov
sbb
in
fwait
xchg
pop
adc
xchg
mov
rorb
sub
and
pop
dec
push
sub
aad
cmp
lret
in
sti
jge
xor
adc
lahf
jl
insb
add
lret
xchg
dec
dec
jo
cmp
sbbb
cmp
sbb
mov
or
pop
scas
mov
daa
push
sbb
mov
sti
sarl
push
add
jecxz
and
fwait
jae
adc
mov
cmp
jp
dec
xor
insb
lods
lahf
les
inc
adc
adc
jb
or
fidivl
push
stos
or
loop
push
pop
ret
pop
rcll
sbb
xlat
mov
inc
xchg
push
sbb
lret
data16
jbe
loop
sub
mov
pop
xchg
fildll
sub
push
aam
jae
fsubr
mov
inc
scas
pop
mov
lret
jnp
stos
jbe
xchg
andb
mov
outsb
push
xchg
aas
and
ficompl
pusha
and
mov
outsb
push
jno
xor
push
das
sub
dec
out
jge
rcrl
jne
mov
inc
fwait
pop
add
lahf
jne
jne
pop
add
clc
addr16
and
mov
cmp
push
xchg
call
pop
std
nop
shll
sbb
mov
dec
push
scas
mov
fmull
add
and
roll
sar
or
lret
popa
mov
adc
in
sbb
jno
or
dec
popf
mov
in
add
jns
pop
jle
add
mov
mov
into
pop
gs
mov
and
pop
mov
out
daa
push
daa
inc
decl
insb
pushf
mov
mov
and
adcl
sbb
cmp
sbb
int3
mov
jbe
inc
mov
lds
stos
jne
rcrb
adc
call
xchg
divb
mov
arpl
mov
popf
in
inc
addl
imul
pop
cmp
xor
mov
shlb
loope
mov
xor
clc
bound
push
clc
push
shll
or
mov
pusha
test
cmp
cli
pop
pop
ds
mov
sbb
add
pop
sub
pop
dec
jmp
pop
repnz
outsl
leave
dec
aad
gs
dec
das
outsb
cmp
repnz
sub
mov
add
mov
adc
cwtl
dec
adc
pop
jnp
jl
ficoms
mov
scas
xor
lds
sub
test
mov
jmp
mov
cmp
std
push
pusha
cmp
fst
stos
shlb
enter
jge
jnp
cld
mov
loop
mov
push
pop
mov
int3
adc
jo
int3
sub
movsl
push
pop
in
dec
pop
push
pavgw
xchg
fistl
mov
pusha
insb
pop
ret
iret
stos
clc
and
mov
push
orl
out
pop
xchg
push
out
or
pop
sub
dec
mov
pop
rcll
fs
mov
stos
cltd
jge
mov
sub
mov
lret
inc
sti
mov
add
jg
mov
aaa
test
dec
xorb
cmp
jb
mov
test
dec
les
inc
out
popf
insb
xlat
push
and
movsb
call
xchg
lods
dec
or
mov
jmp
ss
in
arpl
shlb
jge
sti
enter
or
ljmp
popa
cmp
mov
inc
add
or
loopne
adc
push
cmp
mov
mov
pushfw
rcrl
scas
bound
jge
pop
addr16
das
daa
pop
ss
jb
pushf
inc
jns
xor
sbb
dec
into
mov
das
sub
dec
aaa
push
movsb
cvtps2pd
stos
movsl
ja
aam
movsb
push
push
mov
lds
xorb
iret
xor
mov
call
push
jnp
adc
ss
sbb
addl
cmpsb
mov
les
lods
lea
lds
jae
mov
lds
push
les
mov
loop
fcomps
lods
arpl
idivb
fcomp
aaa
stos
rcrb
int3
xchg
fsubl
inc
leave
je
fidivrs
in
into
jl
cmp
jae
lods
rol
jae
mov
les
mov
clc
push
xor
test
outsb
pop
repz
push
mov
cmpsb
mov
stc
add
orl
jg
cmc
push
cmp
mov
fcompl
adcb
push
push
callw
inc
popl
or
pop
xor
ja
test
cli
cmp
pop
mov
into
mov
outsb
add
rolb
push
popl
pop
les
out
xchg
inc
nop
cli
sbb
mov
adc
mov
add
adcl
push
add
andl
pop
xchg
mov
ds
xchg
mov
mov
les
and
mov
adc
inc
incl
leave
out
cltd
negl
notl
scas
cli
fdiv
insb
ljmp
repnz
aaa
xor
cmc
ffreep
repnz
es
in
mov
pop
sub
sbb
mov
xchg
jo
mov
or
mov
push
ljmp
sarl
inc
iret
imulb
std
mov
mov
cli
push
adc
lcall
sti
jo
stos
jbe
jp
mov
cmpsb
cmpsl
adc
cli
cmpsl
sarb
or
lret
rclb
sub
das
test
mov
test
cwtl
sbb
cmpsl
xchg
movl
orb
sub
jns
test
hlt
xor
or
jmp
xor
mov
jnp
cwtl
inc
and
add
cld
out
fmull
movsl
xor
int
mov
sbb
mov
pop
xchg
mov
mov
imul
dec
adc
pop
fcomps
movsb
adc
fisttps
push
or
mov
pop
daa
ret
sahf
daa
shll
dec
lods
bound
and
jne
mov
cmp
and
jecxz
sub
in
pop
repz
sarb
mov
xor
insl
rcll
lahf
repnz
adc
mov
scas
mov
lods
pusha
orb
stos
xchg
push
jp
cmp
cs
or
jne
loopne
das
push
lahf
mov
loope
cmp
out
loopne
int3
dec
daa
add
sbb
out
mov
pop
cmp
dec
sbbb
sti
movsl
push
dec
push
movsl
lret
push
push
push
and
in
pop
popa
aas
fucom
movsb
inc
adc
mov
cmp
inc
fwait
repz
inc
ret
sub
sub
sbb
xor
out
popl
fdivrl
dec
and
call
cmp
bound
mov
testb
mov
jmp
xchg
movsb
xchg
bound
gs
leave
lock
ret
sub
jnp
dec
loope
mov
cmp
mov
push
pop
test
fwait
xchg
pushf
jle
dec
daa
xlat
sbb
lods
out
stos
xlat
mov
insl
daa
and
out
adc
cmp
out
mov
inc
pop
rol
jecxz
push
js
ljmp
ljmp
add
loopne
jle
clc
and
push
cmp
dec
ret
sub
jnp
icebp
stos
stos
inc
bound
clc
push
push
mov
lret
dec
aad
sub
pop
in
mov
fdivrs
xor
in
pushf
sub
cltd
lret
adc
cmpl
loope
movsb
adc
leave
jge
or
hlt
loop
push
insb
das
mov
or
rorb
sub
in
or
mov
add
mov
outsl
int3
push
xor
xor
jno
stos
mov
jmp
sub
dec
mov
or
insl
xor
idivb
pop
push
adc
xchg
jb
jmp
mov
mov
lcall
fcmovbe
jmp
jae
dec
jecxz
xchg
and
add
ss
push
jg
hlt
fstps
fadd
mov
cmp
inc
bound
cmc
add
mov
jns
mov
push
mov
pop
jns
jmp
fimuls
or
xlat
pop
mov
adc
div
repnz
mov
push
jmp
ss
popa
ljmp
jge
cwtl
imul
jg
lock
push
inc
cmpsl
stc
fistpl
das
inc
pop
inc
jmp
mov
daa
lds
adc
roll
mov
xor
jl
xchg
loop
das
cs
ffreep
inc
cld
jne
in
jge
mov
sbb
mov
addr16
outsb
stc
mov
ds
cmp
out
lds
inc
cmc
loope
dec
lds
push
pop
mov
enter
mov
jecxz
loope
pop
xor
mov
hlt
and
mov
daa
bound
jmp
dec
movsl
mov
data16
lock
sbb
fisubs
aad
push
jmp
sbb
fdivrp
mov
adc
sti
and
repz
add
rorb
je
pushf
incl
sbb
lods
orl
sbb
push
adc
enter
adc
inc
dec
test
mov
jae
data16
lret
lcall
in
push
xor
stos
hlt
fistps
ficomps
frndint
jmp
push
adc
cmpsb
push
adc
xchg
in
lods
add
cmp
leave
push
or
pusha
sub
mov
push
jo
and
cmp
inc
or
aaa
fidivl
lea
fdivl
out
dec
hlt
test
addr16
and
sub
sub
push
push
ret
loope
hlt
cmpsl
sub
or
sub
push
mov
dec
data16
push
aaa
pop
test
inc
lahf
pop
cmp
xchg
jg
cmp
dec
lret
fdivr
adc
out
mov
fwait
test
aad
sar
sub
lret
movsb
mov
in
sbb
adcb
and
pop
or
push
ficoml
adc
icebp
lds
movsb
pop
faddl
mov
push
outsb
dec
gs
arpl
sbb
cmp
dec
test
sti
mov
mov
cmp
xor
jge
jnp
popf
ret
cmpsb
and
jmp
jae
insb
mov
stos
xlat
aad
mull
push
pop
jmp
int
rorl
repz
fcmovnb
or
dec
and
cmpsb
in
daa
jecxz
lods
mov
sub
mov
xor
mov
and
or
sub
jbe
pop
insl
mov
mov
mov
inc
mov
outsb
scas
or
or
imul
test
xchg
inc
sbb
popf
xchg
in
pop
lret
cmp
mov
insb
push
jmp
push
hlt
and
dec
aad
and
lcall
push
out
nop
jmp
outsl
movsb
and
js
sbb
and
shlb
push
lret
push
fbstp
out
imul
inc
fimuls
lock
out
fmull
and
orl
cmp
or
dec
sub
stos
cmpsb
sbb
push
shl
sbb
icebp
imul
arpl
cmp
add
rclb
lods
call
jno
dec
filds
add
pop
std
lcall
sbb
pop
sbb
pop
lods
push
ss
inc
mov
mov
test
ret
bound
notl
call
ret
add
popa
jbe
divl
ds
lds
iret
add
mov
mov
push
push
xchg
xchg
mov
fnstsw
jl
xor
sub
pop
xchg
movl
subb
sub
mov
out
rorb
inc
jns
jl
roll
fstpl
pop
out
std
lcall
push
pop
jne
jl
data16
push
and
push
pop
repnz
popf
push
mov
push
jmp
in
ret
lock
es
jmp
scas
inc
bound
adcl
xchg
add
fnstcw
push
sub
fwait
pop
dec
dec
sub
and
nop
popa
in
jb
xor
fcomps
mov
or
js
dec
xor
addr16
scas
xor
mov
cmp
sbb
xor
lret
in
inc
push
outsl
ljmp
inc
ja
stos
js
sbb
aas
add
xor
jb
fwait
dec
rcll
pop
push
loopne
je
cmp
push
mov
mov
adc
sub
sbb
pusha
aaa
and
test
adc
lods
jg
pop
mov
hlt
jl
pop
mov
mov
mov
in
into
xor
xor
push
shll
xor
xor
inc
test
out
rcrl
cli
cltd
mov
icebp
xor
int
fcmovbe
out
push
inc
pushf
jo
test
xlat
and
fcom
jl
or
push
xchg
push
pop
xor
daa
mov
mov
dec
or
insl
lea
int3
aas
dec
sbb
aas
es
ljmp
xor
cmp
push
aaa
cs
mov
cmp
ret
int3
in
jo
adc
lcall
std
push
arpl
push
lret
and
ja
pop
movsl
fiaddl
dec
daa
lods
xor
adcl
mov
lret
mov
pop
ret
mov
mov
imul
sbb
stc
push
shll
insl
rcr
xchg
icebp
push
xchg
pop
push
sub
test
popf
add
int3
loopne
scas
jle
and
cmc
pop
mov
hlt
lock
mov
lcall
into
mov
adc
rorl
pop
mov
imul
das
mov
lock
nop
subl
fwait
cmp
shrb
rcr
push
and
inc
es
mov
or
stc
fcoms
or
push
xchg
loopne
mov
sub
fs
inc
fs
sub
popf
xchg
in
cmp
in
divb
das
mov
jno
shl
and
or
jl
fidivrl
leave
jno
fs
into
push
xor
jb
push
or
rolb
iret
mov
xchg
sbb
adcl
cmp
adc
fwait
leave
sub
andl
inc
mov
inc
pusha
mov
cmp
mov
cli
xchg
add
sub
aad
sbb
xchg
ja
out
nop
test
gs
xchg
mov
inc
mov
dec
in
jg
jg
inc
jnp
lret
sub
jmp
pop
jg
repnz
inc
sbb
inc
loop
ret
xchg
test
sti
repz
inc
scas
add
fisubrl
cmp
fisubs
leave
inc
cmp
fwait
pop
adc
lahf
clc
xchg
ds
xor
rclb
cmc
push
cwtl
xchg
jbe
ficoml
fcompl
mov
dec
mov
add
or
ret
cld
sub
scas
or
dec
out
jne
jbe
insl
mov
jmp
out
or
lahf
adcb
jns
repnz
cmp
call
fldcw
push
mov
xchg
push
repz
push
or
sbb
and
lahf
adc
or
mov
xlat
dec
popf
adc
jmp
jno
mov
scas
add
pop
sbb
icebp
jp
jl
pop
repnz
push
imul
and
xlat
or
nop
or
leave
add
or
mov
popa
dec
adc
sbb
scas
xchg
lcall
sti
mov
ret
bnd
fstpl
movsb
inc
pop
push
andb
in
sti
popa
add
sbb
mov
outsb
cmp
cmc
dec
sub
push
leave
ja
fstpl
sub
adc
inc
cmp
mov
int3
fnstcw
or
cltd
xor
xor
adc
imul
lcall
shll
push
insb
pop
jg
sub
sub
mov
dec
add
jne
pop
popf
pop
sbbb
jge
sub
cmp
pop
push
in
xchg
adc
mov
jmp
roll
ret
add
mov
cmp
push
xlat
pushf
mov
mov
loopne
pop
pop
lret
xor
fdivp
imul
cmp
aad
stos
loop
jmp
xchg
hlt
daa
inc
ret
cmp
mov
ss
fmulp
call
sbb
and
out
or
mov
xchg
jo
lods
push
pop
push
nop
xorb
aam
sbb
je
fwait
dec
and
cmp
fists
aad
ret
push
jno
sub
in
daa
loop
movsb
sub
int3
lds
push
shll
sbb
clc
jl
mov
mov
mov
add
push
data16
push
int
mov
mov
fdivl
pop
xchg
aad
jbe
jns
pop
xor
mov
test
jo
mov
mov
and
cmp
dec
sbb
dec
mov
push
sti
repnz
xlat
sub
and
push
loope
jl
dec
add
inc
cli
mov
pop
fcmovnu
sbb
pusha
sbb
inc
loopne
cmpsl
jp
lock
mov
fcompl
xor
and
dec
scas
xchg
repz
xchg
pop
push
jl
xor
lock
pop
lock
stc
int3
fimuls
test
pop
jo
je
into
pop
push
jbe
popf
or
scas
inc
outsl
cld
loope
push
jp
sti
cld
lods
rol
mov
cltd
dec
test
jg
mov
out
ljmp
js
in
jg
gs
repz
jge
sbbb
fwait
pop
cmpsl
mov
scas
sub
gs
jl
jae
mov
push
sub
leave
lea
fwait
das
loope
mov
sbb
lret
or
or
in
ror
or
cmpl
mov
lcall
mov
push
xor
test
dec
push
insb
add
inc
iret
shlb
sbb
or
cli
mov
sub
sbbb
mov
arpl
inc
and
mull
push
mov
mov
mov
push
xchg
pusha
aad
mov
cld
lcall
pop
fildll
dec
mov
ss
test
fdivp
push
sub
adc
jno
ss
lret
mov
pusha
clc
arpl
loopne
push
adc
mov
mov
aam
and
shrd
cmpsl
jecxz
enter
push
or
jl
js
mov
ja
cmpb
rcrl
xchg
scas
dec
mov
and
pop
dec
sub
push
sub
inc
dec
and
testb
lret
jp
cltd
pop
les
mov
sarb
mov
call
push
js
and
pop
dec
push
add
add
xlat
adc
mov
lea
and
push
pop
cmp
jg
or
dec
cmp
std
cld
aaa
mov
aaa
inc
mov
or
cli
rclb
in
and
sub
in
push
cld
stos
cmp
test
aam
test
in
cltd
cld
sub
lods
sub
xor
sbb
jae
sbb
mov
inc
lods
cmp
xchg
mov
inc
cmpl
push
dec
mov
in
push
ror
adcb
sbb
out
mov
test
out
jecxz
pop
push
cs
fimuls
lahf
adcb
inc
xor
cmp
mov
rcr
mov
pop
repz
lcall
aas
jle
jge
jmp
pusha
iret
inc
mov
mov
mov
push
insl
rcll
je
lcall
xchg
add
xor
adc
fimuls
or
jecxz,pn
mov
popa
jns
fdivrs
outsb
jmp
or
mov
ds
out
or
add
hlt
ficoml
out
push
bound
pop
icebp
in
imul
sub
js
xor
xor
sbb
mov
ja
idivb
xchg
scas
stc
call
nop
dec
out
add
push
lods
mov
je
mov
mov
xlat
adc
adc
icebp
je
aas
call
in
mov
mov
sub
inc
fnsave
mov
lret
in
pop
lcall
leave
loope
inc
movsb
and
sub
mov
in
adc
fistl
rorl
push
add
xchg
lcall
mov
xchg
jns
jns
es
jae
sub
cwtl
sti
xchg
mov
jle
xchg
bound
stc
scas
arpl
mov
and
and
jp
mov
mov
int3
mov
dec
lea
and
movsb
and
push
mov
mov
xchg
mov
daa
popf
mov
adc
pusha
movsl
js
xchg
mov
aam
hlt
test
fdivl
movsl
inc
jge
cmp
mov
mov
aaa
hlt
das
movsl
jno
cmp
pop
or
xchg
test
daa
lds
jbe
push
imul
push
push
dec
cmp
mov
mov
inc
add
dec
data16
xor
xor
mov
sub
loope
adc
pop
shll
jmp
imul
nop
cmp
push
negl
lret
aaa
mov
daa
and
ss
stc
scas
pushf
sbb
xor
out
insb
push
or
inc
pop
xchg
sub
fs
int
imul
enter
xchg
cmp
adc
cwtl
movsl
cmp
or
lods
cmp
jno
push
stos
push
add
and
jns
dec
fdivl
jge
stc
repnz
aas
lods
jge
addr16
pusha
mov
jecxz
sbb
popf
push
mov
push
add
cli
pop
sbb
cli
add
loopne
sub
iret
mov
nop
loop
sub
cmp
pop
dec
lahf
cmp
rcrl
inc
js
adc
int3
testb
xlat
mov
mov
lahf
ss
inc
cmpsb
sbb
hlt
cmp
sbb
lret
xor
call
push
jl
sub
clc
imul
scas
imul
adc
outsb
mov
or
cmp
mov
sti
jle
sbb
xchg
push
jecxz
lret
or
ss
pushl
stc
sbb
insl
sbb
insl
pop
iret
dec
in
out
push
ret
or
xorb
stos
lods
and
es
je,pn
data16
pop
lock
into
ret
cltd
jge
imul
jmp
mov
shll
adc
es
or
dec
dec
xor
sbb
mov
cld
jbe
xchg
add
mov
and
cs
sub
shll
ds
jne
imul
aam
rcr
xor
fidivs
std
movb
movl
sarl
mov
pop
ss
lahf
add
bound
mov
inc
iret
icebp
pop
test
aam
sbb
das
test
pop
mov
cmp
add
jnp
and
lds
mov
ds
jbe
popa
push
pop
aaa
hlt
push
inc
sub
push
push
and
cmp
mov
dec
pop
inc
scas
lods
shlb
outsb
jno
sub
pop
les
jbe
sub
dec
lret
movsl
or
and
fadd
movsb
ja
inc
push
mov
push
jp
rol
push
enter
scas
mov
out
xor
in
scas
inc
sub
mov
jns
mov
cmc
stos
mov
cmp
daa
in
shrb
xchg
ss
stos
mov
jle
mov
mov
loope
push
add
loope
loop
arpl
incl
inc
call
dec
mov
lahf
xchg
into
jge
xchg
insl
mov
int3
fists
fcmovnu
dec
jge
jne
pop
fs
xchg
fldcw
aam
lret
push
iret
aaa
daa
inc
ret
jmp
iret
jns
inc
xor
cmp
popa
pop
mov
xchg
dec
out
or
pushf
xchg
fcmovne
enter
data16
mov
sbb
daa
in
icebp
shll
or
or
sbb
push
outsb
pop
cli
mov
cmp
jnp
in
and
mov
test
loope
jmp
or
pop
stos
pop
adc
cmc
outsb
rclb
jne
fcompl
push
loop
inc
shrb
xchg
fwait
enter
popa
mov
or
jne
mov
and
adc
adc
pop
mov
pop
adc
les
adc
outsl
push
dec
loopne
movsl
addl
std
es
cmp
mov
sbb
xchg
xor
ss
jmp
data16
fwait
bound
mov
jno
mov
xchg
mov
inc
cmp
pop
mov
mov
frstor
rcrb
inc
mov
in
pop
ds
push
outsb
test
test
xlat
popa
jbe
ret
sti
mov
je
adc
dec
inc
inc
xor
call
or
and
mov
xchg
insb
mov
pop
mov
in
in
mov
xchg
jno
mov
pusha
jae
adc
cwtl
mov
adc
decb
stos
imul
roll
movsb
ja
dec
xor
fsubl
push
ret
cmp
mov
jecxz,pn
in
jmp
lods
sub
fwait
push
jge
mov
popf
aam
and
test
insl
inc
fistpl
xor
lock
lret
test
push
pop
mov
pushf
mov
adc
lods
cld
sbb
jl,pn
dec
std
lahf
push
dec
mov
fsubrs
add
out
mov
scas
and
lea
in
cld
add
mov
cmc
xor
sbb
xchg
sub
dec
hlt
imul
cmpb
lock
cmp
cwtl
jg
stc
cwtl
pop
add
shll
mov
dec
lcall
outsl
insl
mov
jle
pop
es
mov
jg
mov
xlat
stc
dec
adc
int3
add
adc
fldenv
sub
mov
xor
lock
inc
xchg
mov
shlb
test
mov
pop
sub
ja
roll
jnp
push
rorl
sbb
testb
out
pop
jmp
imul
hlt
shlb
jl
xor
add
push
jb
aas
fwait
inc
divl
loope
and
fwait
push
sbb
imul
shlb
sbb
sysret
jae
dec
enter
sbb
push
in
pop
enter
xlat
inc
out
cmpsb
stos
loop
adc
adc
pop
int3
adc
testb
lret
cmc
or
add
test
sarb
jno
dec
dec
aaa
dec
data16
decb
adc
push
xchg
adc
cmp
js
jnp
dec
sahf
jmp
in
push
sub
lods
pop
fsts
fidivrl
cmp
or
pop
sti
adc
repnz
dec
jmp
or
sbb
cmp
rol
xor
lods
lret
mov
int
test
or
pop
aam
xlat
cmc
in
sbb
insl
sbb
cmpsb
icebp
fimull
cmp
loopne
punpcklwd
adc
sbb
pusha
pop
out
pop
stc
xor
push
jmp
mov
test
sub
push
out
pop
dec
xlat
subb
std
push
mov
lea
repnz
and
jo
lret
cmp
mul
stos
iret
pushf
push
inc
in
stos
sub
subb
out
or
xchg
inc
and
loope
dec
enter
mov
iret
sbb
mov
out
xchg
insb
cmpsl
mov
add
fldt
stc
mov
cwtl
xchg
or
movl
or
and
sub
scas
push
sbb
add
aaa
mov
lret
pop
test
cld
add
sbb
nop
dec
fldenv
pop
lock
aad
das
push
daa
inc
add
xchg
ret
lahf
dec
mov
outsl
aam
sbb
fwait
cld
and
inc
inc
scas
push
dec
cmp
test
fwait
fwait
movsb
inc
xchg
and
push
xchg
ljmp
cld
dec
outsb
mov
jp
cmpsl
pop
ret
pushf
mov
xor
imul
cmpsl
lods
subl
pop
es
jae
push
ret
xchg
imul
dec
stc
in
dec
or
into
fdiv
dec
daa
push
mov
mov
ret
cmp
insl
add
out
add
sbb
pop
inc
clc
sub
out
in
lock
fists
and
sbb
repz
adc
jl
pushf
or
dec
sbb
or
adc
bound
int3
mov
call
xchg
fadds
inc
out
push
cmp
ret
dec
sti
leave
mov
jns
aas
das
dec
sbb
xor
add
shlb
stos
repnz
inc
out
lock
add
mov
out
imul
incb
and
xor
je
out
add
sub
leave
and
mov
jmp
adc
mov
in
sti
mov
sub
cmpsl
add
ds
pop
stos
cmp
sti
add
lret
xchg
jmp
fstp
std
ret
or
and
or
dec
in
sti
push
ret
scas
pop
mov
das
adc
pop
loopne
xor
mov
out
gs
shl
xchg
add
xchg
fsts
sub
sbb
xchg
test
mov
sub
xor
xor
loope
ss
pop
popa
lds
pop
mov
mov
repz
jbe
adc
test
gs
xor
sbb
popa
repnz
xor
out
mov
int3
pop
movl
div
push
dec
lods
xor
cltd
pop
das
aas
add
mov
push
dec
lahf
mov
popf
inc
fldcw
insl
push
add
mov
shll
aas
ret
lock
mov
repz
lret
push
sbb
mov
mov
xchg
xor
inc
mov
sub
fwait
mov
popa
cmc
inc
mov
pop
idiv
add
es
push
pop
ficoml
inc
call
fimuls
jecxz
je
lahf
cmc
dec
adc
arpl
adc
sub
mov
int
mov
repz
xor
mov
sub
iret
int
mov
sti
out
sti
or
sub
xchg
jp
pop
cmp
lock
mov
xlat
add
sbb
inc
std
add
push
fistl
jno
sti
js
cmpsb
inc
push
fnsave
outsl
push
out
mov
loopne
lret
pop
aas
and
cld
sub
fstpl
mov
les
mov
and
andl
out
clc
int
lods
stos
push
xchg
xchg
push
idivb
lods
ret
cmp
jecxz
bound
or
mov
lret
rcrb
add
push
int
stos
iret
cmp
popf
sar
xchg
pop
or
mov
push
jmp
jae
jne
cmp
fsts
pop
fwait
mov
jbe
push
xor
out
push
lods
fsub
add
popf
ficompl
icebp
adc
out
subl
sub
sbb
sub
inc
insb
lea
jno
hlt
mov
fsubrl
xchg
jb
pop
int3
sbb
adc
es
loop
or
stc
mov
and
stos
sub
inc
in
std
scas
out
arpl
jae
addb
mov
sahf
add
fiaddl
frstpm(287
rcrl
out
aas
icebp
repz
in
imull
leave
mov
lods
push
pusha
pop
xchg
roll
inc
daa
loope
push
test
xlat
fbstp
stos
jecxz
inc
inc
inc
fdivrl
sbb
inc
cmp
fistps
push
pop
outsb
out
pop
dec
xchg
imul
mov
mov
xchg
mov
fwait
push
mov
push
or
xchg
test
es
pop
inc
mov
adc
es
jne
pop
mov
jecxz
jle
jo
in
rorl
pop
pop
addr16
sub
jp
mov
repnz
add
call
mov
mov
push
loop
push
test
gs
pop
repnz
punpckhwd
addr16
shrl
cld
and
sub
xchg
in
into
cmpl
fprem1
cmp
jge
xchg
push
inc
and
inc
or
jge
roll
dec
sub
in
popa
ficoms
movsl
out
into
add
fcmovbe
stos
mov
xchg
jb
ret
adc
xlat
jnp
rcrb
inc
mov
cmpsl
dec
push
roll
mov
fisubrl
test
insb
add
jp
lock
inc
orl
lcall
lcall
sub
xor
call
inc
in
cltd
mov
sbb
leave
test
inc
sbb
mov
fldt
cwtl
adc
mov
pop
sub
mov
push
jle
in
add
lock
sbb
clc
insl
jno
pop
shll
movsbl
jmp
insl
insl
es
jg
fists
or
and
cmc
fnstcw
cmp
lret
movsb
pushf
cmp
mov
movsl
jb
add
xchg
and
pop
xor
push
push
es
call
sbb
std
scas
jo
xchg
dec
pop
inc
test
sbb
lret
or
pop
jnp
mov
mov
orl
or
jge
addr16
ds
sub
mov
cs
test
fldcw
or
mov
mov
iret
pop
jae
and
aad
repz
push
out
xorl
xchg
xchg
clc
fmulp
or
xor
notb
dec
push
ss
dec
and
cs
push
inc
jmp
fnsave
imul
decb
xchg
sub
and
sbb
sub
sub
jbe
dec
pop
jne
pop
mov
adc
xchg
mov
xor
arpl
pop
in
mov
cmpb
dec
popf
mov
sahf
cmp
cmp
stos
movsl
div
int
lahf
popf
pusha
cmp
mov
cmpsl
testl
outsl
inc
push
sub
mov
icebp
dec
mov
imul
dec
ds
imul
push
mov
push
xchg
pop
jge
cmc
mov
xor
adc
lcall
mov
jecxz
and
test
lods
mov
das
dec
sbb
insl
dec
ja
sti
test
repz
cmc
test
mov
add
out
cli
mov
mov
enter
jbe
adc
fstl
mov
adc
enter
aas
adc
sbb
push
mov
addr16
mov
imul
push
mov
pop
jl
fbstp
or
dec
repz
js
les
iret
jno
adc
mov
mov
sub
sub
sub
sbb
fnstcw
mov
fidivrs
clc
or
cli
mov
ljmp
hlt
sub
bound
xor
arpl
lods
insb
out
jle
in
push
adc
mov
outsb
sub
daa
fldpi
mov
call
shlb
jle
leave
dec
xor
insl
xor
mov
inc
aas
cmp
push
insl
arpl
push
aad
pop
jae
push
cld
and
push
push
mov
xor
je
loop
sub
pop
aam
inc
test
lret
and
icebp
pop
jbe
cmpsb
les
inc
sahf
fistpll
push
movsl
lods
imul
dec
stos
mov
and
sub
das
adc
std
cwtl
fxch
out
and
inc
sub
shlb
mov
in
in
mov
push
pop
imul
xchg
cmp
pop
stos
lcall
sbb
pop
push
int
repz
xlat
insb
loopne
fcmove
adc
pusha
adc
stc
mov
jno
fwait
insl
rorb
and
fsubrs
or
fcompl
lea
lret
sti
lods
or
jb
mov
mov
ja
filds
pop
testb
fs
push
les
jp
fs
inc
bound
jne
jg
les
cmp
cmp
js
or
sbbb
push
xor
test
jmp
mov
roll
lock
sahf
pop
orl
sub
sahf
cmp
cmp
push
cmc
cmp
push
push
mov
mov
mov
popf
and
push
push
adc
mov
push
sbb
out
scas
sahf
pop
out
mov
loope
pop
mov
jmp
xchg
fwait
movsb
ficomps
cld
jmp
repnz
cld
add
adc
imul
lea
es
jae
push
insl
xchg
das
into
and
add
dec
js
outsb
push
xor
lcall
sbb
cld
push
xchg
repnz
stos
dec
or
int3
or
rorl
icebp
sub
jle
rol
subb
insb
daa
ret
sbb
mov
js
cwtl
push
adc
addl
decl
lret
cmp
pushf
flds
mov
or
sahf
stos
mov
and
mov
mov
xchg
mov
insl
ja
daa
sub
scas
pop
adc
xchg
dec
mov
pop
sbb
test
jae
movb
sub
fbld
shrl
stos
bound
adc
popa
mov
mov
push
and
mov
or
mov
xchg
cmp
push
sbb
xchg
sarb
dec
sub
aam
call
xor
fiaddl
push
out
push
sahf
mov
pop
xor
into
mov
imul
adc
sti
jno
ret
pop
in
in
js
mov
enter
bound
test
and
sbb
mov
cmp
jae
mov
jg
stos
stc
mov
ljmp
dec
je
in
mov
pop
sbbb
and
adc
in
and
add
inc
adc
add
pushf
and
lea
ffreep
xor
jno
cmp
mov
push
les
stc
js
xor
push
mov
adc
push
popa
out
pop
push
inc
add
mov
mov
mov
cli
xchg
push
fldenv
lods
sub
xchg
mov
out
cmpb
dec
out
fwait
and
scas
or
inc
mov
push
aad
data16
movsb
sbb
loope
dec
inc
add
push
pop
xor
push
push
notb
mov
lcall
mov
add
pop
jnp
or
jno
jnp
jae
aad
cmpsl
mov
scas
mov
jns
arpl
or
xchg
add
rcll
mov
lds
popa
mov
mov
jno
scas
push
xchg
pop
or
jle
xor
movsb
sahf
repz
rorl
and
pop
popf
push
jl
nop
leave
mov
lret
pop
movsb
inc
cmp
sbb
int3
call
stc
pop
enter
mov
roll
inc
lret
add
je
jo
xor
jg
xchg
dec
stc
fdiv
mov
int3
cmp
ja
pushf
incl
cli
jp
mov
leave
jp
cltd
mov
lcall
lock
mulb
mov
aad
out
outsb
iret
fsubrl
movsb
jmp
stos
or
cmp
mov
sub
outsb
pop
push
dec
jb
stc
and
pop
lock
shrb
push
mov
std
xchg
test
sbb
sub
add
cmp
mov
sarb
hlt
in
xchg
movsl
rcrl
int3
push
inc
and
mov
das
add
sub
data16
sub
dec
mov
lock
pop
push
mov
ss
imul
ljmp
mov
xor
push
xchg
mov
sbb
add
sbb
push
outsb
int
and
out
es
sbb
iret
js
or
pop
arpl
fdivp
and
in
cmp
mov
sub
rcll
stos
lcall
add
movsb
cmc
mov
push
dec
inc
adc
cmpsl
test
mov
mov
cmp
outsb
dec
jp
lock
stos
pop
jecxz
dec
jne
jge
int
out
jnp
pushf
jnp
pop
or
cs
sbb
cmp
cli
loopne
push
mov
jo
aam
or
push
inc
push
ret
rorb
dec
fistpl
and
jae
out
lds
aas
adc
mov
pop
shrl
push
pop
pop
cltd
and
and
loopne
add
sub
js
cli
fisttpll
aam
shl
jbe
leave
pop
dec
iret
repnz
xorl
pop
xor
xchg
movntps
ss
xlat
gs
sbb
test
pop
jecxz
repz
xor
jle
pop
mov
lods
mov
nop
popa
hlt
pop
jg
dec
ffreep
cmp
xor
je
pop
or
cmpsl
dec
fnstcw
cwtl
aaa
mov
dec
mov
ss
popf
sub
jb
test
test
lea
insl
and
mov
inc
rclb
mov
iret
fcomps
mov
in
rorl
lods
pop
jns
in
les
mov
or
jb
mov
mov
push
dec
pushf
pop
sbb
aam
movsl
and
or
add
adc
jmp
jns
push
loopne
push
inc
repnz
inc
fistps
icebp
dec
lds
test
pop
addr16
ljmp
cmp
loope
xchg
stos
lret
adc
push
into
adc
mov
iret
pop
and
out
mov
mov
mov
cmpsl
mov
adc
out
aaa
hlt
hlt
sbb
dec
outsb
fstpl
psubd
push
fs
std
popl
sub
sbb
push
adc
fs
jnp
cs
inc
sahf
ret
mov
mov
dec
pop
out
shrl
mov
pop
lcall
dec
cvtpi2ps
push
rorl
testl
in
filds
clc
repz
fnstsw
fscale
test
call
inc
pop
hlt
dec
dec
inc
sbb
push
pushf
dec
movsb
sbb
sub
jg
mov
scas
lods
int3
ss
clc
movsb
addr16
rcrb
fistps
dec
js
daa
lds
call
popa
or
jns
adc
pusha
mov
jecxz
adc
jle
jnp
pop
leave
mov
enter
lea
jne
daa
pop
je
cmp
and
cli
pop
cmp
ss
gs
xchg
push
xchg
sbb
movsl
sbb
das
int3
out
push
jns
int3
ja
imulb
lahf
cmp
andb
repnz
add
mov
hlt
scas
cli
popa
jmp
adc
sti
das
cmp
lret
sbb
mov
cmp
sti
addr16
mov
inc
xor
mov
and
cwtl
cmc
cmpsb
adc
sub
mov
sbb
ljmp
mov
repnz
pushl
repz
xchg
and
leave
sub
enter
add
dec
xor
dec
and
aaa
adc
pop
stos
test
add
shll
mov
inc
mov
cmp
jno
sbb
push
ss
mov
dec
fnstcw
push
push
add
cwtl
mov
mov
mov
fistps
mov
adc
scas
push
mov
or
push
pop
lcall
add
jbe
sbb
mov
cmp
cmp
push
push
sti
fidivrs
shufps
push
cmpsb
pusha
mov
fwait
iret
rolb
mov
inc
pop
lds
adcb
stos
pop
jge
mov
js
lret
sub
xchg
mov
ljmp
jmp
dec
ret
jmp
mov
or
pop
sub
out
pushw
addr16
icebp
or
jb
out
std
adc
xchg
fcmovne
aam
bound
jge
dec
es
jb
icebp
push
xor
sbb
push
add
sub
rcll
jno
jl
jge
loopne
jae
push
clc
inc
movsb
insl
push
mov
loope
pop
mov
ljmp
push
stc
mov
fs
das
into
xchg
adc
mov
dec
nop
fwait
aas
xor
mov
sub
add
sbb
lea
repz
add
loop
mov
and
jb
xor
into
cmpsb
or
pop
sub
push
jo
out
mov
and
adc
fcmovne
pop
scas
adc
cmp
iret
mov
inc
in
js
sbb
add
sub
arpl
loope
adc
js
pop
pop
shrb
mov
dec
aam
add
stos
aas
and
lds
or
inc
stos
pop
stos
loopne
imull
jecxz
icebp
jle
imul
inc
jae
push
call
cmc
jp
jnp
inc
inc
leave
lret
mov
incb
dec
dec
sarb
clc
or
mov
pop
clc
pcmpgtw
insl
shlb
sub
add
jo
roll
mov
test
movsl
fstl
dec
scas
add
rolb
add
out
mov
fdivr
orl
clc
push
mov
xchg
sbb
jmp
in
shll
int
pop
or
xchg
mov
int
lahf
dec
cmp
push
add
xchg
pop
cmp
xchg
nop
jp
loopne
inc
xchg
or
repz
push
sbb
mov
sti
dec
sub
orb
xchg
pop
and
hlt
mov
push
lret
sbb
shrl
adc
jge
testl
lret
insl
sbb
jmp
sbb
add
jne
rcrl
inc
loop
and
popf
rclb
push
sbb
cmpsb
ja
pop
mov
jle
imul
stos
xchg
cltd
stos
lods
gs
jle
inc
add
fisubl
pusha
mov
sbb
loop
sub
fstpt
mov
in
stos
sbb
and
cmp
mov
faddl
sbb
sbb
or
sbb
dec
and
mulb
push
test
adc
cltd
jl
les
imul
fdivrs
mov
sub
std
pop
lods
and
mov
movb
outsb
xchg
adc
mov
push
sbb
shl
mov
bound
or
loope
pop
dec
mov
mov
movsl
mov
out
in
push
cltd
sbb
fsubrl
outsb
nop
add
lahf
add
adc
cmpsl
jmp
xlat
popa
add
or
hlt
in
lret
push
js
repnz
decl
fistl
sub
mov
jae
lds
or
pop
and
ljmp
mov
je
jb
lret
xchg
dec
nop
leave
mov
loop
scas
cs
repz
push
jp
dec
movlps
leave
inc
inc
xor
lret
call
jno
mov
cmpb
dec
jmp
dec
mov
int
xor
sti
addb
outsb
aam
repz
jmp
jae
mov
push
or
adc
cmc
fs
enter
lcall
jecxz
nop
pop
cmpsb
sarb
mov
inc
inc
clc
push
jg
jg
iret
icebp
nop
dec
add
gs
into
stos
call
movsl
cs
in
pushf
shlb
cmpsl
push
call
pushl
lcall
jno
jb
jae
je
rolb
movsb
into
xor
loop
mov
es
mov
shll
pop
mov
cmp
push
jmp
cmp
xor
imul
das
ret
sahf
lea
out
pop
cmp
dec
xchg
sub
lcall
out
mov
pop
mov
or
mov
or
inc
mov
fwait
adc
neg
xor
sbb
test
cwtl
jecxz
pop
push
dec
lret
lods
sbb
pop
loop
and
and
jl
push
adc
jnp
lock
cwtl
es
mov
int
nop
repz
fprem1
mov
add
int
mov
out
stc
test
jp
sub
push
es
push
test
adcb
mov
xchg
pop
dec
add
cmp
cmp
or
mov
inc
cs
mov
inc
xor
cmp
in
bound
mov
mov
mov
lret
jns
push
push
rorb
xor
dec
lods
mov
sbb
jne
mov
loop
jno
jnp
lds
fdivp
test
push
iret
cld
dec
pop
pop
loopne
dec
lods
mov
sub
cmp
lcall
rcll
mov
popf
cmp
xchg
jne
pop
cmp
xlat
imul
mov
cmpsl
aad
sahf
enter
loope
xchg
or
ret
jmp
mov
repz
mov
sub
mov
stc
lret
rcrl
aaa
or
loope
cld
push
sbb
jl
ss
push
clc
cmpb
jns
jae
js
lea
adc
gs
jb
xchg
das
sbb
push
adc
pop
lahf
sbb
adc
fsubr
xor
add
push
lcall
das
mov
imul
push
push
sbb
mov
fadds
or
mov
pusha
loopne
loopne
cmc
jl
cmpsl
vmread
add
jnp
or
adc
inc
inc
insl
jp
inc
insb
inc
in
lahf
ja
scas
cmp
cmpl
inc
icebp
sub
push
cmp
xor
scas
loope
jp
fcoml
pop
jno
xchg
mov
ds
or
pop
aam
ja
adc
scas
repnz
sub
loopne
dec
cld
lea
cli
cld
in
mov
lret
sub
jns
xchg
sub
fsqrt
in
mov
fisubrl
and
or
bound
xor
push
sub
pop
ret
or
stos
fldcw
mov
push
pushf
xor
jno
popa
loop
aas
in
call
repnz
iret
idivb
mov
mov
inc
jle
pop
mov
adc
mov
ja
sub
mov
pop
mov
addr16
mov
jg
cmp
jo
adc
loopne
adc
cmpl
adc
adc
xchg
xchg
test
aad
sbb
insb
push
cmpsl
jle
dec
mov
mov
nop
stos
mov
inc
cmp
insb
orb
pushf
jo
inc
pop
cld
jecxz
inc
cs
outsl
popa
mov
loopne
aad
fwait
inc
in
jmp
lea
out
bound
insb
adcb
out
cmc
lret
fidivrl
xor
xchg
fucomp
ret
imul
js
loopne
test
lods
outsl
popf
mov
dec
inc
sub
sub
mov
cmc
cmove
xchg
or
int3
iret
push
push
jb
sub
lret
clc
cmp
and
lret
cwtl
inc
and
les
push
fcoms
and
loope
nop
scas
dec
sahf
jle
subl
adc
cmp
mov
sti
inc
jge
inc
jge
or
ret
stc
push
jg
xchg
pop
std
mov
xor
lea
negb
in
mov
push
repz
or
cmp
xor
rclb
testl
sub
adc
mov
inc
sub
fisttpl
mov
push
ret
push
xlat
loope
or
add
mov
push
xor
lods
adc
or
mov
xor
mov
in
sub
mov
adc
xor
sub
inc
push
nop
push
arpl
data16
push
in
dec
inc
xor
adc
sub
sub
mov
mov
pop
cmpsl
mov
cmc
inc
pop
dec
xchg
pop
lds
leave
mov
je
je
fs
insl
mov
and
push
loopne
outsb
popf
cmp
inc
mov
mov
add
push
ja
aad
xchg
nop
ss
stos
adc
xlat
cmpsb
mov
push
fisttps
imul
mov
fcomi
pushf
out
xchg
adc
add
cmp
mov
push
xchg
pusha
cmp
aam
and
enter
mov
and
in
lahf
jecxz
loop
sbb
jnp
cli
data16
rclb
xchg
dec
sub
outsb
je
insb
fisubl
mov
or
orb
lret
test
dec
lods
mov
leave
lcall
mov
lods
popa
in
adc
inc
out
aaa
mov
cld
jno
xchg
add
inc
push
sub
adc
mov
in
dec
push
adc
cmp
push
or
inc
fsubs
inc
pop
and
stos
inc
inc
xor
notl
and
sub
clc
icebp
ss
xlat
xchg
push
test
add
in
mov
mov
fbld
sbb
adc
xor
or
dec
add
xchg
sar
sbb
adc
push
andl
push
mov
lahf
into
aaa
cmp
aas
aas
shlb
push
xor
sbb
aam
cld
js
repz
bound
and
test
xor
jmp
pop
in
rcr
xor
fsubrp
std
xor
push
sbb
fstpt
insb
xor
into
mov
xor
cmpsb
adc
in
add
add
loop
sbb
jg
push
iret
out
aam
xchg
xorl
sti
mull
jg
sarl
push
add
jmp
mov
addl
push
pushf
ret
iret
cmp
jo
mov
push
ljmp
dec
push
pop
mov
dec
cmp
jg
mov
xchg
push
push
sub
xchg
fisubrl
dec
aad
sub
adc
push
sti
das
ficoml
popf
mov
mov
cs
or
cmp
jno
cli
pop
push
or
jns
insl
jp
and
ljmp
xchg
mov
test
iret
bound
stc
fwait
int
mov
mov
popa
xlat
div
xor
and
cld
xor
cmpsb
push
test
xchg
pusha
jns
and
mov
in
iret
push
jne
jb
mov
xor
std
shll
fisubs
out
pushf
cmc
shlb
dec
jo
xchg
add
es
push
insb
cmpl
loope
and
push
adc
cmp
fildl
sub
and
into
hlt
ljmp
rol
sbb
mov
and
daa
cwtl
add
cld
cmp
and
andb
jne
icebp
das
mov
jge
iret
and
sahf
fsubl
sub
out
ss
dec
add
out
mov
ja
pop
mov
stos
push
jle
outsb
and
sar
ror
pop
fcomps
int3
pusha
jp
xor
lret
sub
pushf
stos
or
push
inc
jmp
sbb
fcoml
sub
movsb
addr16
call
mov
mov
bound
enter
jbe
test
pop
adcl
lcall
push
xchg
call
jge
test
xor
cmp
xchg
sbb
add
add
mov
cmp
mov
cmpsl
sahf
ret
mov
ficompl
cld
mov
xor
sbb
pop
ret
leave
fldcw
sbbl
scas
mov
adc
pop
inc
repnz
dec
fbld
jmp
out
lret
enter
adc
sub
sub
jb
lea
cmp
imul
fwait
dec
lods
xor
mov
sti
jmp
movsb
lods
sbbl
mov
jle
out
test
in
and
xchg
into
shrb
cwtl
jp
cli
les
push
cmpsl
inc
dec
popa
imul
inc
jp
push
dec
test
push
sub
outsb
lods
cltd
adc
xchg
les
mov
and
mov
repnz
and
xchg
push
sub
lods
test
test
jmp
dec
aad
inc
pop
pop
fldl
sub
push
adc
pop
jp
fiaddl
icebp
sub
mov
add
xor
inc
mov
adc
xor
lahf
inc
ljmp
out
inc
sbb
scas
das
mov
out
andl
fimuls
pushf
jmp
shlb
cmp
xor
xchg
jp
jecxz
and
sbb
and
pop
jecxz
fisubrs
ss
jp
sub
inc
push
inc
repz
jge
jne
in
dec
dec
pusha
push
lods
xor
aaa
test
mov
and
cmpb
roll
push
in
imul
pop
xchg
aad
repnz
push
xchg
push
iret
fnstenv
cld
add
stc
mov
shrb
es
inc
in
mov
push
sbb
mov
inc
into
test
popa
adc
movsl
mov
sub
pop
xor
test
aaa
mov
ret
int
mov
hlt
fst
sbb
xor
repz
push
jecxz
jg
push
stos
loopne
xor
push
push
pop
fdivr
addr16
cmp
push
xchg
push
movsl
dec
adc
out
inc
js
clc
mov
stos
mov
add
xchg
xchg
outsb
pop
shlb
xchg
xor
stos
cmpsl
cmp
jno
test
and
xchg
fmull
jns
repz
inc
rolb
hlt
xchg
mov
mov
and
ss
adc
inc
test
je
adc
into
aas
ret
mov
cmp
jmp
ljmp
fldenv
push
fwait
mov
negb
mov
cltd
std
mov
clc
in
testb
pusha
leave
xchg
leave
xchg
cmp
mov
sbb
add
jbe
jno
insb
push
mov
mov
pop
sbb
inc
and
loop
inc
push
mov
mov
xchg
sahf
xor
mov
adc
mov
mov
fcomp
cmp
lea
pop
fcomp
lret
out
add
aad
sub
lock
leave
stos
call
in
adc
in
adc
or
jne
adc
dec
sbb
lds
inc
incb
pop
pop
dec
adc
adc
and
xchg
lcall
test
les
xor
call
clc
cmp
out
cmp
pop
sbb
outsl
jle,pt
inc
sti
xor
enter
mov
add
sbb
cmp
sbb
inc
xor
dec
mov
and
xor
mov
bound
sbb
sbbb
xchg
cmp
bound
pop
fwait
into
out
xchg
add
or
out
ror
imul
data16
shl
mov
sahf
pop
mov
xchg
inc
inc
push
mov
cwtl
sbb
jbe
in
mov
fucom
sub
xor
insl
xchg
ljmp
jl
addr16
add
and
clc
pop
sbb
test
mov
in
mov
scas
xor
in
pop
jle
or
pop
push
test
int3
cmpsl
aad
movsl
push
pop
imul
mov
push
out
jp
scas
pusha
or
fists
movsl
sbb
sub
mov
add
movsl
inc
out
sbb
sbb
out
xchg
xchg
ja
dec
lock
mov
test
dec
mov
xor
test
sbb
add
mov
xor
adc
mov
and
cld
hlt
push
fistpll
and
or
rol
repnz
loopne
xchg
mov
rorb
xchg
mov
add
enter
jns
pop
mov
movsl
das
pop
jle
test
cmp
add
ret
and
add
dec
sbb
fsubrp
sbb
and
cmc
pop
lock
bndldx
popf
or
cmc
aad
adc
jecxz
fimull
pop
push
jae
mov
and
xchg
push
adc
mov
lock
xor
mov
iret
lahf
mov
inc
int
fs
add
jb
cltd
mov
jnp
cmp
es
jle
repz
pop
fidivs
inc
movsb
clc
dec
in
iret
js
ret
iret
in
fisttps
or
les
nop
aaa
jb
stos
sbb
in
and
inc
mov
add
and
loope
mov
and
sbbl
lret
enter
adc
in
mov
jno
mov
sbb
jecxz
lret
fwait
imul
es
inc
inc
fwait
jo
mov
jnp
add
je
stc
lret
hlt
scas
sub
push
test
ss
pop
cwtl
out
adc
jbe
mov
lahf
icebp
orl
and
sbb
into
aaa
ret
push
jb
inc
cmp
mov
ror
lcall
jb
cs
sub
jb
pop
lcall
out
mov
xchg
and
insl
dec
pop
bnd
and
push
mov
pop
pop
xlat
inc
pushf
insl
sbb
push
dec
jae
into
ret
in
hlt
sub
fnsave
enter
ss
adc
sub
mov
and
lret
dec
pop
movsb
dec
inc
sbb
aas
int3
sbbb
sti
movsl
roll
mov
call
or
shll
iret
fwait
push
test
into
scas
pop
pushf
cs
popl
test
dec
movsl
mov
xchg
jg
inc
ds
push
xor
mov
cmp
pop
aam
cmpl
push
int
jg
or
insl
in
xchg
xchg
fldenv
out
fcmove
or
pushf
je
cmpsl
and
sbbb
inc
xchg
jno
inc
cmp
loop
and
nop
mov
lds
mov
and
ret
pop
xchg
scas
scas
mov
mov
jns
shl
mov
sub
sbb
insl
pop
cli
movl
popa
out
scas
sub
mov
stc
cmpsl
outsb
push
int
sub
xchg
dec
outsb
nop
cli
push
cmp
push
pop
mov
sbbl
pop
test
push
insl
test
in
outsl
add
mov
mov
lods
dec
or
rep
icebp
mov
int3
adc
cmp
lahf
rcr
xor
mov
scas
outsb
fldt
sbb
cmc
arpl
lea
divl
mov
cmp
sbb
int
sub
daa
js
inc
in
inc
pop
dec
js
shrl
cmp
stc
cld
fstpt
xchg
mov
ror
dec
clc
and
stos
das
xor
clc
xchg
leave
es
jp
outsl
loope
in
and
in
adc
sti
dec
cs
xchg
or
insl
pop
mov
stos
mov
cmpb
std
mov
shll
cmp
jmp
fwait
dec
add
js
pop
imul
or
push
into
mov
insl
es
xor
pop
inc
std
push
xchg
add
xor
pusha
xchg
stos
ds
stc
test
mov
inc
mov
shrb
dec
push
sbb
das
popf
je
fcoms
mov
cli
das
rcl
cwtl
lods
inc
dec
sahf
xor
addl
add
je
loopne
ret
divl
adc
dec
sti
inc
insb
js
mov
adc
push
adc
mov
lret
fdivp
mov
xchg
popf
mov
cmp
and
clc
rcrl
leave
lret
sub
adcl
or
lret
mov
cmp
aaa
repz
das
push
xchg
repnz
lret
pop
adc
jno
in
pop
lock
lods
sarl
scas
sbb
or
jo
pop
push
jno
mov
dec
push
lahf
jl
push
mov
inc
leave
add
jg
repz
lea
fsubs
rorb
test
je
sbb
mov
fs
mov
dec
mov
insl
or
js
or
mov
pop
out
mov
dec
mov
mov
gs
jecxz
fistps
inc
dec
jge
lret
in
cmpsl
xor
out
enter
repz
pusha
lods
iret
and
mov
test
jge
int3
lea
test
ja
jecxz
jns
add
inc
aas
and
repnz
aad
movsl
stos
popf
fdivl
imul
hlt
cmpsb
int3
dec
movsb
adc
ja
ret
enter
mov
hlt
testl
mov
inc
mov
icebp
lea
in
push
mov
scas
add
fsubl
jb
or
enter
mov
xchg
ss
out
icebp
jb
ljmp
cs
hlt
pusha
add
into
ret
or
fiadds
gs
loopne
mov
lock
test
clc
nop
sub
pop
aaa
int3
sti
mov
and
or
ljmp
subb
int
dec
xchg
incb
enter
xor
lds
mov
dec
add
je
aaa
popa
leave
mov
add
das
aam
mov
push
push
xor
fidivs
leave
xchg
sub
addb
xor
pop
dec
lock
add
inc
jae
ffreep
xor
aad
xchg
xchg
icebp
shrl
outsl
movsl
test
inc
sub
sbb
lods
jle
mov
insb
push
ja
popa
mov
mov
mov
mov
mov
or
jg
mov
push
test
adc
out
pop
add
div
mov
mov
ljmp
push
ljmp
xor
add
push
arpl
das
pop
jge
push
test
into
xor
add
loope
inc
stos
xchg
jl
ffreep
adc
mov
or
inc
mov
jnp
xor
mov
ja
sbb
mov
inc
xlat
addr16
leave
enter
push
movsl
lods
scas
xlat
clc
and
xor
inc
inc
or
leave
jne
jle
jb
jo
adc
test
sahf
mov
ret
sub
negl
cmpsl
jecxz,pt
push
dec
or
inc
mov
or
push
into
sub
movsb
adc
and
cmpsb
mov
pop
mov
cmp
inc
lret
mov
xchg
sbb
mov
dec
int
imul
inc
or
in
sbb
mov
cli
pop
pop
cmp
rcl
test
push
out
dec
je
add
dec
lcall
xor
cltd
inc
cmp
ljmp
fmull
cmp
and
sub
mov
push
pop
mov
icebp
ret
dec
mov
mov
shrb
pop
stos
pop
std
ja
mov
rol
xchg
mov
or
imul
mov
cmpsl
jnp
movzwl
xor
push
xchg
pop
mov
inc
or
xlat
fs
test
xlat
push
dec
cltd
ret
push
sub
jnp
data16
pop
mov
pushf
inc
or
test
pop
iret
scas
hlt
stos
sbb
mov
popa
mov
fisttpl
inc
mov
pop
lcall
out
jg
inc
stos
jg
inc
pop
xchg
movsb
add
stos
outsl
dec
sub
scas
fs
stos
dec
rol
jp
xchg
adc
into
jns
fsub
pop
outsb
call
out
cmpl
push
and
nop
aaa
add
outsb
fnstenv
aad
nop
mov
sub
xchg
xchg
sbb
push
mov
pop
xor
mov
call
cmp
mov
push
dec
push
cmc
push
xor
pop
shll
ljmp
pop
addr16
leave
pop
or
sub
mov
jne
ret
inc
mov
dec
icebp
add
mov
push
ljmp
clc
iret
push
subb
inc
lret
addr16
repz
sub
push
mov
ds
pop
movsb
adc
cmc
pop
out
add
cli
push
or
fwait
lods
push
sub
out
xchg
inc
in
ret
mov
ss
and
ljmp
push
xlat
jb
cmp
ljmp
ret
ret
out
cmp
pop
xchg
and
insb
jnp
into
mov
jg
lods
cli
mov
sbb
shlb
test
dec
mov
hlt
fcomi
divb
mov
mov
leave
cwtl
push
dec
imul
adc
jge
fldcw
fwait
cmpsl
adc
sbbb
adcb
stc
adc
mov
mov
adc
mov
arpl
mov
add
dec
sbb
stos
push
cmp
cli
mov
bound
cmp
jp
mov
std
psllq
mov
adc
jp
shl
popl
lock
xchg
adc
popf
rcll
jnp
fs
in
xchg
mov
insb
cmpsl
xchg
mov
stos
cli
xchg
movsl
test
fwait
lcall
aaa
jmp
imul
add
xchg
jns
idiv
mov
mov
fwait
pop
push
cwtl
fadd
dec
ret
add
xchg
mov
pop
xchg
lock
cmp
push
outsl
stc
pop
adc
pop
sbb
inc
test
jae
sub
int
addr16
in
leave
pop
jns
int3
sahf
insl
mov
lock
movlps
or
mov
jle
ljmp
lret
in
mov
popa
stos
and
repnz
cmp
or
sbb
bound
lods
pop
adc
cmpl
jb
adc
into
push
mov
or
test
cltd
jb
aas
out
in
jp
lcall
mov
or
aas
sub
scas
ret
jecxz
mov
sahf
dec
or
je
sbb
push
or
loopne
jmp
xchg
test
push
bound
mov
cmp
fsubrl
mov
xchg
sbb
fs
fs
xchg
pusha
and
mov
push
pop
clc
mov
and
outsb
or
pop
movsb
std
imul
mov
or
test
or
ficomps
out
xorb
pop
mov
aas
test
pop
jne
sti
dec
aam
xor
out
cmp
cmpb
pop
push
or
repnz
or
xchg
mov
scas
add
insb
push
inc
pop
in
loopne
orl
gs
push
mov
mov
aaa
outsl
mov
mov
mov
out
ja
sti
dec
fbstp
mov
sbb
cmpsl
mov
movsb
pusha
test
negl
inc
loope
pop
inc
mov
mov
xor
iret
dec
aad
dec
fidivs
sbb
enter
dec
lret
add
inc
pop
test
rcrb
addl
subl
jl
xchg
mov
iret
xlat
cmp
adc
jp
imul
mov
adc
call
pop
push
mov
bound
mov
mov
xorl
lret
insb
dec
faddl
adc
popa
dec
dec
pop
dec
push
adc
out
or
mov
fisubs
fucomp
subl
out
inc
xchg
fsubrl
inc
dec
ss
jbe
mov
jae
das
inc
idiv
std
stc
mov
mov
aas
push
popa
pushf
cmp
test
push
ja
movsl
mov
pop
cmp
and
outsl
imul
mov
loope
insb
addr16
mov
jne
sbb
repnz
pop
imul
mov
mov
loopne
rorl
jg
scas
jo
dec
inc
cld
mov
cmp
mov
stos
xchg
adc
inc
pop
ds
arpl
sti
and
or
mov
xor
test
inc
int
jb
inc
nop
aam
insl
daa
lock
pop
test
pushf
pop
sub
inc
call
mov
fdivl
insb
push
inc
push
xchg
xchg
add
aad
repnz
pop
push
push
push
sbb
xchg
jae
inc
xchg
rolb
sbb
idivl
fnsetpm(287
popf
push
adc
lods
jg
scas
fcmovnu
xor
ja
js
out
sbb
addb
inc
jne
xchg
jmp
add
push
add
fbstp
sub
mov
jmp
shl
mov
dec
repz
imul
inc
popf
gs
push
mov
push
pop
jne
je
js
ja
cmc
je
les
and
push
ja
sbb
dec
fcoms
jecxz
in
movsb
pop
mov
arpl
loopne
cmc
mov
into
mov
dec
icebp
ja
loop
mov
jecxz
ret
dec
push
testb
in
adc
sbb
std
pop
lea
ja
jnp
out
pushf
jno
aam
push
cmp
inc
cmp
mov
push
shll
pop
dec
cmp
and
jg
push
or
push
jb
adc
xchg
mov
hlt
test
aam
repz
xchg
jge
inc
jle
jp
dec
inc
shl
ret
cld
push
xchg
mov
xchg
insb
cmp
fdivrl
pop
bound
in
pop
mov
subb
mov
cmp
adc
fs
lds
out
hlt
push
inc
arpl
cmpsl
scas
fnstenv
jae
sub
mov
in
jb
mov
xchg
and
stos
lret
mov
pop
wrmsr
xchg
fwait
mov
sbb
sub
stos
jnp
and
push
test
push
cmpsb
lea
cld
les
stos
aad
mov
loop
add
push
jp
movsl
inc
fcmovnu
scas
inc
cmp
xor
push
pop
or
inc
lret
inc
out
clc
xor
push
pop
test
scas
lods
in
jmp
jae
outsb
adc
imul
call
lods
pop
xchg
or
mov
rorl
push
ret
outsb
pop
icebp
sbb
ja
addr16
fisttpl
ret
imul
adc
cmp
lods
xor
push
pop
ret
sti
lds
jo
xor
xor
negl
imul
xchg
add
cmpl
dec
xchg
sti
imul
inc
call
jl
cmp
loop
ss
push
and
fcoml
icebp
sbb
mov
sub
push
imul
pop
mov
and
das
enter
pop
pop
fdivrl
nop
mov
and
sqrtps
addr16
sub
pop
sbb
nop
cwtl
ret
lahf
popl
adc
mov
sbb
jno
cs
and
clc
ja
xor
push
icebp
pop
xchg
inc
repz
movsl
inc
js
fidivl
aad
add
lret
and
fcom
dec
pusha
lock
sarl
sub
add
sub
roll
ret
inc
mov
push
xchg
ss
mov
add
ror
push
inc
jg
notb
or
mov
enter
mov
cli
repnz
mov
call
and
sbb
sub
test
adc
out
aad
dec
jp
andl
mov
repnz
xchg
adcb
das
scas
sub
fisttpl
in
jae
sub
add
or
xchg
stos
je
jbe
popf
or
rorl
sbb
push
outsl
xchg
sbb
or
jbe
xchg
adc
xchg
insl
adc
sbb
lds
mov
popf
lds
xchg
int
insb
mov
xchg
mov
lahf
orl
shrb
adc
and
pop
sbbb
repz
jmp
jp
xchg
and
hlt
mov
mov
aas
jmp
push
lret
stos
flds
cmp
enter
test
xor
push
loop
rcrb
fimull
mov
loope
jbe
jecxz
pushf
das
jecxz
add
xchg
jbe
sbb
int
push
sub
inc
mov
cmp
cmp
mov
notb
pop
pop
ss
mov
sbb
lods
pop
out
dec
das
cwtl
in
popf
imul
jb
mov
mov
xchg
push
xchg
inc
and
adc
movsl
aaa
mov
or
xchg
adc
push
sub
inc
push
xchg
scas
cmp
push
outsb
or
ds
sbb
es
lods
fstl
insb
pop
mov
cmp
mov
pop
call
pushf
sti
loopne
add
pop
mov
cli
push
call
dec
mov
or
fldcw
pop
leave
xchg
jne
dec
scas
mov
pop
xchg
push
loope
fsubs
lea
mov
pop
or
mov
sbb
ret
xlat
rorl
out
mov
inc
outsl
fsubrs
rcl
pop
ljmp
adc
es
push
or
iret
sub
pop
cmp
add
pop
push
sub
outsl
sbbb
shll
fsubl
js
int
imulb
fidivrs
test
xchg
test
mov
mov
imul
adc
popa
jo
pop
rcll
jmp
imul
mov
out
mov
fidivs
in
push
fsubrp
dec
stos
mov
mov
stc
xchg
enter
cmp
jle
ret
addr16
cmpsl
jbe
aam
aam
movsl
flds
and
insl
and
aad
xchg
inc
cmp
fldl
mov
repz
out
dec
jns
movsb
repnz
mov
je
cltd
mov
fiaddl
sbb
inc
mov
mov
mov
pushf
aaa
sbb
push
xchg
lods
test
loopne
shll
inc
add
faddp
arpl
ret
les
test
xchg
out
out
jg
mov
push
adc
rorb
fisubs
ljmp
xchg
es
mov
lods
not
lea
lret
and
rcrl
xchg
or
popf
test
mov
out
inc
push
popf
inc
and
mov
adc
sbb
into
add
addl
movsl
sbb
repz
pop
mov
mov
push
pop
adc
and
and
xchg
adc
pop
mov
in
sbb
hlt
xlat
jmp
mov
push
insl
mov
iret
push
stc
or
pop
lods
daa
xor
pop
iret
ffree
daa
test
mov
movsl
pop
rcll
mov
aas
mov
or
or
cmp
aam
fwait
lret
sahf
in
or
mov
arpl
jne
inc
xchg
movsb
jp,pt
lret
out
push
sbb
mov
jb
cmp
enter
sbb
and
jmp
fsubrs
rcrl
dec
mov
dec
lock
mov
rclb
mov
mov
pop
mov
sbb
ret
and
test
loop
mov
aaa
arpl
xchg
fstpl
lea
dec
adc
mov
mov
shlb
lds
dec
push
add
inc
and
ljmp
lea
fstpt
jl
testb
mov
jb
push
popf
cmp
mov
or
dec
pop
push
sub
push
push
addr16
test
jns
stos
push
pop
cmp
popa
addr16
jecxz
adc
adc
push
dec
mov
push
outsb
push
in
mov
arpl
in
add
mov
xlat
nop
incl
adc
addr16
mov
pop
outsl
je
out
or
or
mull
and
into
mov
fcomi
imul
mov
pop
sbb
scas
sti
jnp
loop
mov
mov
lods
sbb
cmp
sbb
fdivl
xchg
sub
imul
in
push
xor
in
loopew
jge
adc
daa
rcr
in
sbb
dec
xchg
pop
dec
sbb
sub
inc
fwait
cmpsl
je
mov
in
jne
inc
adc
cmpsb
sbb
cmpsb
fdivl
nop
cwtl
outsb
js,pn
pop
out
add
sbb
stos
shrb
lret
sbb
mov
lahf
stos
imul
cmp
lock
sahf
inc
mov
adc
pop
mov
ret
rcl
stos
and
mov
test
xor
loopne
adc
jns
loope
aad
out
fstps
sti
jp
mov
sub
push
adc
in
nop
cmp
mov
adc
loopne
lods
cmp
movsb
push
mov
ja
cmc
push
into
enter
loopne
loop
mov
hlt
push
jns
xlat
aam
push
lods
scas
arpl
jg
and
in
mov
xor
sbb
mov
movsb
cmp
jae
cmpsb
push
push
cmp
pop
sahf
jb
cmpsb
shrl
repz
fisttpll
lods
mov
jbe
add
rolb
mov
mov
add
jl
xor
std
negl
pop
add
data16
pop
rcrb
dec
jno
cld
jle
loopne
arpl
mov
inc
loope
xchg
push
cmp
inc
mov
dec
test
aam
sbb
stos
and
pop
sub
mov
cmpsb
sub
sub
clc
fbstp
insl
cli
adc
lods
pop
fstp
jb
test
lods
dec
jb
jl
xchg
mov
cmp
daa
mov
mov
jae
mov
or
inc
pusha
sub
jp
mov
mov
test
aas
mov
dec
pop
cmp
push
in
movsb
daa
cli
int
mov
or
inc
js
add
pop
inc
js
lret
xchg
jne
fptan
pushf
nop
mov
sub
push
outsb
sub
cmpsb
daa
in
or
mov
adc
push
sbb
xchg
sub
sar
jo
out
and
out
out
mov
gs
sub
sbb
add
add
or
fdivrl
add
iret
xchg
cmpb
mov
xor
data16
rol
enter
adc
in
aad
xor
jp
xchg
xor
jle
lock
sub
mov
es
popf
xchg
fst
adc
bound
cmp
sbb
loope
test
inc
or
sbb
inc
movsb
cmp
int3
pop
ss
aam
movsb
nop
pop
inc
insb
push
jno
inc
fisubs
or
add
add
push
mov
adc
aas
sbb
mov
mov
and
cld
fs
cmpsl
enter
xchg
nop
and
push
cwtl
js
dec
imul
ret
xchg
adc
lcall
stos
std
sbb
hlt
js
pop
cs
pusha
insl
out
cli
les
rcll
xchg
in
sbbb
scas
xchg
sub
lds
das
jmp
sub
lret
int3
cmpsb
clc
inc
in
mov
loop
outsl
iret
add
imul
sti
add
out
dec
cmp
sbb
mov
ljmp
adc
mov
pusha
idivl
in
adc
adc
pop
add
jle
sbb
mov
into
pop
sub
and
out
mov
cld
pop
ljmp
mov
sub
shll
add
cmp
xlat
sbb
flds
sar
leave
sbb
fisubrl
ds
xchg
pop
adc
push
scas
cmp
mov
adc
mov
dec
jns
mov
sbb
push
sbb
mov
movsl
mov
aad
hlt
xchg
jge
lds
dec
push
loop
cmp
and
pop
and
popa
mov
sti
jl
inc
and
mov
lea
call
sbb
or
lahf
mov
jle
lock
xchg
or
mov
fwait
cmpsl
lret
mov
cmpsb
mov
rcll
mov
xchg
cmp
cltd
nop
pop
adc
adc
or
mov
jbe
inc
push
ljmp
aad
sub
data16
mov
or
sub
mov
mov
pop
adc
add
jmp
cmp
xchg
or
push
mov
cmpsl
sahf
pop
mov
mov
loop
fists
sub
add
pop
mov
pop
push
add
xor
dec
fdivp
mov
cmp
mov
out
add
cwtl
adc
push
cmp
pop
sub
repnz
add
mov
adc
jmp
push
jns
nop
adc
mov
cmp
cltd
cltd
and
or
pop
cmpsl
mov
in
mov
mov
lea
mov
subl
sub
or
into
pop
xchg
jo
leave
fidivrs
push
cmp
mov
mov
fwait
test
call
gs
pop
adc
inc
lods
mov
loopne
mov
adc
dec
mov
repnz
and
jmp
lcall
push
xorb
lret
fstpl
push
sahf
adc
cmp
outsl
addr16
push
pop
and
jne
out
pusha
scas
xor
sarl
pop
jnp
push
scas
aas
mov
cmp
out
xor
inc
arpl
imul
xchg
in
add
or
cmp
pushl
inc
jmp
sbb
daa
std
pop
xchg
add
xor
add
jae
cmc
jp
push
es
or
and
pop
pop
test
jns
push
out
inc
push
pop
aaa
dec
lods
fnstcw
repz
add
cltd
push
lahf
xchg
sbb
mov
data16
ret
sbb
mov
iret
sbb
lock
and
adc
pusha
sbb
cld
pop
ds
adcl
addr16
adc
insb
push
test
js
outsl
push
mov
adc
aam
cmp
pop
inc
fildll
inc
jo
fst
subb
push
mov
inc
repnz
pop
aas
pop
ja
andl
ret
dec
jecxz
push
mov
in
in
leave
loop
xchg
sub
les
insb
push
nop
out
out
fistpl
test
cli
inc
and
push
lret
and
cmp
jnp
lods
mov
shlb
mov
loope
js
jl
mov
or
mov
inc
insl
xchg
xchg
adc
pop
mov
jb
sarb
mov
stos
pop
or
mov
pushf
push
inc
jge
cltd
push
add
sbbl
jmp
cmp
lret
mov
fwait
movsb
inc
add
push
add
and
mov
push
mov
cmc
jl
adc
outsb
inc
insb
sbb
sbb
sub
movsb
jo
pop
test
int
pop
and
push
pop
inc
addb
incl
jmp
or
fcompl
push
sub
fs
jne
jbe
xlat
sub
dec
stos
inc
jb
dec
xor
imul
push
fsub
shrl
out
mov
inc
dec
pop
and
and
stc
orb
xchg
sub
pop
inc
mov
jnp
adc
cmp
cmp
pop
sahf
mov
xchg
push
arpl
xchg
or
dec
test
cmpsb
cwtl
ficoml
inc
mov
xchg
shl
fdivrs
sub
and
jnp
dec
add
pop
sahf
mov
or
repnz
mov
sbb
mov
inc
mov
mov
push
pop
or
flds
sarl
cmp
gs
ss
ja
cmp
push
subb
or
test
outsb
aaa
push
add
in
frstor
jg
cmp
jecxz
jmp
pop
sbb
imul
push
mov
cwtl
jmp
jo
shrb
xchg
ficoml
sbb
add
pop
xchg
lahf
test
pop
adc
out
scas
data16
daa
add
ljmp
jecxz
fcmove
or
fisubs
pop
mov
mov
mov
or
sub
xor
and
cmpsb
inc
push
push
ljmp
ret
adc
lcall
dec
add
xor
lods
fldenv
mov
jbe
pop
insl
fidivl
xor
daa
xor
lret
out
mov
adc
mov
jnp
mov
push
ret
xor
push
push
in
inc
add
les
inc
std
add
loopne
xor
cs
data16
xchg
push
arpl
push
mov
dec
sbb
cmpsl
sub
mov
mov
jne
and
inc
aaa
loopne
adc
xchg
mov
fs
add
sub
insb
xlat
mov
cltd
out
pusha
and
clc
imul
jo
rcll
adc
in
mov
push
cmc
imul
cld
mov
iret
mov
push
or
in
mov
cmp
arpl
cli
mov
and
mov
jne
xor
sbb
gs
outsb
inc
rcrb
jl
lcall
dec
pop
cmp
sarb
shll
data16
pushf
dec
fisttpll
lcall
notb
xor
inc
push
pop
mov
push
xor
fisttpll
jae
add
and
outsl
test
sub
insb
cld
sti
pop
fsubrp
add
sahf
or
cmp
jbe
inc
fnstenv
insl
pop
jnp
scas
sub
add
mov
jo
cs
and
mov
lea
push
in
dec
nop
pop
mov
dec
xchg
outsb
nop
clc
dec
mov
mov
loope
sub
cmp
adc
or
in
cld
xor
rcll
or
nop
stos
dec
mov
sbb
bound
prefetch
ja
adc
insb
sbb
sbb
stc
test
mov
xchg
into
repz
aam
ficompl
or
xlat
mov
mov
out
jecxz
xchg
mov
add
push
push
pop
add
jl
mov
mov
repz
into
loopne
add
push
sbb
cs
pop
sbbl
xorl
adc
cmpsl
dec
add
adc
scas
sub
sub
in
in
or
ljmp
out
mov
loope
nop
hlt
pop
adc
mov
xchg
cmp
mov
push
in
sahf
push
mov
leave
or
or
cmpsb
xchg
in
dec
add
in
dec
frstor
dec
imul
repnz
js
sbb
or
lock
fsubrl
scas
fstl
shlb
push
inc
fstpt
dec
ljmp
pushf
sub
cmpsb
mov
push
cmpsb
testb
jb
lods
lock
dec
std
lret
jno
pop
test
adc
and
arpl
sbb
inc
shrl
hlt
outsl
inc
jg
jl
stos
mov
lcall
lret
xchg
repnz
popa
and
leave
mov
push
ss
mov
pop
or
lea
xlat
clc
or
xchg
lahf
mov
lret
adc
pop
cmp
jmp
ds
fs
scas
jae
sub
add
push
outsb
adc
movsl
pop
cmp
lods
subl
popa
nop
push
into
mov
sub
mov
ja
test
movsl
outsl
add
push
push
dec
add
addl
fs
movsb
stos
sub
or
mov
into
jo
xchg
shl
stos
jp
mov
inc
mov
mov
sub
sbb
int
mov
out
icebp
lods
in
xchg
jne
mov
sub
in
lods
and
jmp
enter
mov
push
ja
push
inc
pop
lods
cld
add
flds
and
push
mov
pop
xlat
scas
sbb
and
insb
adc
jnp
jbe
out
sar
xor
fisubl
or
mov
rolb
in
fsub
scas
dec
and
push
cmp
sbbb
int
repnz
xor
dec
jns
roll
loope
jecxz
jmp
mov
jo
push
dec
rorb
outsb
ja
mov
bound
out
push
rclb
out
ljmp
rcr
inc
add
rcrl
int3
icebp
xor
sub
push
test
insl
stc
sub
jl
stos
dec
ficomps
cmp
movsl
fmuls
cltd
xor
xlat
mov
adc
fsubs
xlat
dec
dec
push
out
idiv
divl
xchg
sbb
addr16
dec
aam
pusha
add
imul
jg
ss
cmpsb
or
push
adc
push
and
fdivp
add
pop
lret
mov
mov
int3
xor
scas
inc
into
scas
jecxz
jg
inc
lea
and
jle
sub
lcall
push
lea
test
jg
sub
sbb
or
into
mov
outsb
lret
test
push
jg
pusha
add
cmpsb
in
aad
inc
bound
push
xchg
pop
arpl
insb
leave
lret
push
xor
dec
xchg
mov
mov
push
icebp
popa
pop
push
adc
pop
dec
popf
pop
roll
js
fbstp
mov
popf
aas
adc
cmp
clc
outsl
xchg
jae
insb
xchg
lret
push
adc
fcomp
jns
iret
and
jne
push
popl
cmp
icebp
fbstp
jge
push
fadds
jbe
rolb
rcl
ret
iret
imul
dec
decl
jp
mov
pop
pushf
addr16
fsubl
sub
daa
xchg
lcall
jnp
or
add
cli
mov
ljmp
dec
cmp
loopne
mov
ds
pop
outsl
inc
popa
fimull
enter
xor
ss
sahf
sbb
cwtl
les
icebp
ror
pop
sub
xchg
negl
gs
cmc
pop
movaps
xor
pop
sub
imul
adc
sub
les
out
lods
fwait
or
clc
fs
icebp
lea
push
or
aas
dec
jp
inc
or
fnstcw
push
popa
or
push
pop
lods
ss
inc
int
ss
out
lds
xor
mov
or
aad
hlt
pop
emms
fistpl
and
inc
add
daa
pop
inc
inc
shlb
inc
jno
mov
hlt
dec
or
aad
imul
dec
fcomps
push
xchg
jb
add
jae
outsb
call
inc
shll
add
adc
mov
aaa
out
adc
lea
fstpl
pop
and
sbb
push
push
or
or
and
mov
xchg
push
adc
sbb
jno
pop
cmc
and
pop
sbb
jg
test
pushf
xor
jl
push
dec
rcrl
repnz
int3
outsb
or
push
sahf
sbb
out
loope
mov
out
aas
cmp
test
iret
push
mov
inc
mov
aam
sub
jmp
lea
and
push
sub
dec
cmp
icebp
sbb
cmp
xlat
cmp
sbb
push
adc
dec
cmp
test
outsl
push
mov
in
inc
jecxz
mov
fnstsw
xor
arpl
xor
xlat
push
cmp
sbb
ljmp
in
lcall
cmp
xchg
sbb
sbb
into
jae
pop
mov
addl
jno
bound
jbe
mov
insb
repz
push
fs
mov
cli
xor
cmpsl
cmpsb
push
test
adc
mov
out
jns
xor
xchg
add
cld
out
inc
xor
test
mov
pop
lods
inc
addr16
adc
in
pop
popf
adc
popa
xchg
add
dec
or
fmuls
aas
jp
scas
lcall
movsl
mov
sbb
test
ds
outsb
sub
cld
push
mov
mov
push
adc
out
sbb
js
loope
pop
jle
cld
adc
adc
jle
mov
xchg
addr16
in
push
xchg
xchg
dec
xchg
lret
mov
mov
inc
mov
jecxz
inc
dec
xchg
test
and
sbb
pop
cli
mov
dec
mov
jne
loop
add
in
jbe
dec
mov
cltd
int
xchg
inc
int3
rcrl
xor
jno
js
adc
dec
icebp
cmc
fyl2xp1
aad
and
dec
movsb
mov
pop
mov
frstor
adc
dec
mov
pop
push
xchg
mov
dec
pop
and
ffree
testl
sbb
pusha
mov
shll
add
push
inc
adc
sbb
xorl
and
or
cmp
inc
cmp
mov
stos
adc
mov
push
mov
ss
dec
sbb
mov
jl
xor
mov
adc
cmp
and
cs
pushf
dec
mov
fwait
pusha
ret
mov
and
and
mov
mov
jbe
sub
adc
mov
mov
push
js
cmp
pusha
sbb
imul
mov
inc
jo
pop
repz
shlb
fiadds
sbb
add
sbb
add
xchg
fwait
inc
mov
pop
xor
adc
lahf
into
imul
into
push
scas
in
xor
std
inc
sub
loop
leave
rclb
adc
fdivr
add
iret
push
mov
fdivl
arpl
addr16
mov
push
cltd
in
lods
jae
jle
dec
jle
ret
insl
ffreep
pop
jno
push
out
jnp
int3
sarl
dec
mov
jnp
push
or
adc
inc
xchg
and
xchg
jl
push
sbb
mov
adc
xchg
aas
or
jns
nop
lea
fwait
adc
cmpsl
mov
int3
xchg
outsl
pop
dec
cltd
mov
fbstp
inc
imul
enter
pop
and
jno
ja
mov
test
pop
mov
add
aam
ljmp
stos
cs
lods
pusha
pushf
dec
jnp
jno
push
aad
jo
adc
movb
mov
sub
jne
negl
mov
loop
inc
mov
xlat
roll
dec
jecxz
in
sub
lods
inc
sbb
mov
lods
mov
icebp
repz
xchg
jnp
jmp
adc
ficomps
mov
jno
push
mov
test
les
shll
adc
jecxz
cmpsl
fst
repz
lods
or
mov
sub
std
ret
pop
popa
cld
int
mov
cmpsb
and
jne
sbb
pop
mov
and
sub
nop
pop
pop
ret
mov
stc
mov
cmp
or
inc
and
and
loop
add
dec
jne
mov
dec
adc
nop
into
sti
inc
xlat
loopne
push
add
or
gs
lods
daa
ret
fnstenv
in
sub
mov
pushf
iret
push
jns
ret
mov
xlat
mov
lea
mov
add
add
test
push
xor
aam
jmp
mov
daa
pop
fimuls
or
data16
jo
shrl
jp
pop
sub
andl
adc
lahf
test
inc
cld
xchg
mov
aam
inc
fcmovne
sbb
out
inc
rclb
fcom
lcall
nop
or
inc
int3
addr16
jns
pop
dec
pop
mov
mov
imul
inc
jl
stos
xor
incl
jb
testb
xor
adc
xor
jmp
dec
xchg
mov
nop
loope
fstpt
jge
fwait
popa
sahf
dec
pushl
jnp
add
mov
fistl
xor
xlat
sbb
mov
add
inc
shll
ficomps
sub
arpl
adc
movsl
sbb
rclb
aas
imul
adcl
sbb
mov
stos
arpl
jnp
fmuls
inc
jae
xlat
jl
fidivl
call
stos
mov
cltd
rol
mov
adc
dec
sbb
repnz
add
outsb
push
sbb
jecxz
int
shrl
and
imul
xchg
orb
or
in
ja
mov
imul
inc
hlt
std
mov
jmp
data16
jle
mov
sbb
mov
cwtl
test
orb
xor
daa
clc
mov
adc
hlt
out
fdivs
jp
in
setl
in
and
shr
add
jae
pop
inc
mov
mov
pop
jp
mov
bound
repz
cs
fcmove
movsb
hlt
jl
mov
add
rolb
pop
call
or
ret
es
xlat
sbb
pushl
mov
add
mov
mov
inc
in
cmp
jl
mov
adc
mov
aaa
test
add
xchg
inc
or
pop
dec
pop
ficoms
and
adc
jecxz
jle
andl
pusha
dec
sub
cmp
in
pop
cmc
cmp
pop
adc
sub
loopne
leave
cmp
lcall
mov
pop
sbb
in
mov
xchg
bound
pop
jno
clc
clc
xchg
push
push
inc
dec
xchg
nop
or
aas
dec
add
dec
daa
cmp
lcall
scas
lods
pop
xor
sub
mov
aas
adc
jg
fsubrs
ret
sbb
ret
pop
daa
sarl
xchg
call
dec
lds
addb
or
sahf
push
mov
mov
mull
aaa
inc
int3
sbb
lods
push
dec
mov
adc
push
pusha
sbb
loopne
add
stc
mov
mov
jecxz
dec
cltd
leavew
or
inc
insb
inc
faddl
cmpsl
loopne
push
jo
jne
jno
mov
xor
jg
jmp
push
sub
mov
lret
push
xor
xor
jbe
and
push
nop
pop
mov
comiss
out
dec
and
aaa
ss
pop
not
gs
mov
pop
ja
lea
jno
pushf
inc
loopne
mov
mov
mov
or
xor
lds
mov
scas
xlat
fbstp
in
es
adc
aad
sbb
iret
pop
dec
xchg
pop
ljmp
cmp
sbb
in
fsubrl
std
push
and
rol
pushf
add
dec
int
outsl
or
in
xchg
pusha
mov
pushl
ret
inc
push
neg
jnp
xchg
sbbl
pop
dec
xchg
into
es
adc
sub
add
pushf
adc
adc
inc
stc
pop
out
or
push
push
in
fdivrl
sbb
adcb
leave
in
xlat
iret
jnp
sub
mov
in
pop
test
cmp
dec
inc
jg
test
cltd
pop
xlat
fistl
mov
mov
push
mov
ljmp
sahf
xor
loope
push
movsl
cmp
cmp
sub
jbe
lcall
cmc
mov
xchg
daa
stos
xor
fwait
push
lods
sahf
jge
push
jmp
ja
sbbb
rcrl
jp
push
xchg
movsb
gs
out
pop
sub
ret
mov
iret
rolb
in
jg
sub
push
jne
es
loop
mov
into
push
fwait
lret
xor
mov
mov
jle
xor
push
dec
in
xor
iret
mov
push
inc
dec
xchg
inc
mov
lods
loop
jo
in
scas
pop
out
out
iret
jno
adc
xor
dec
mov
mov
mov
and
subl
jp
int3
jnp
xlat
push
hlt
subl
scas
fnstsw
xor
xchg
and
xchg
movsl
ja
adc
stos
or
iret
fisttpll
enter
jecxz
stos
pop
mov
aam
int3
sub
pop
scas
sub
or
jp
sti
fdivs
jl
adc
pusha
subl
movsb
cmp
mov
push
add
test
dec
inc
subb
loop
and
cli
xor
popf
xor
lahf
push
push
dec
faddl
ret
mov
xchg
xor
cwtl
cld
cmpsl
mov
sub
mov
out
sbb
xchg
mov
in
sub
popf
es
add
jne
xchg
pop
jl
jp
sub
sti
nop
out
push
ja
mov
xlat
fistl
call
subl
mov
ret
xchg
mov
push
mov
out
rcrl
push
lock
sti
pop
out
sbb
push
dec
xor
stc
in
adc
mov
bnd
inc
jmp
mov
lock
stos
pop
inc
mov
inc
and
pop
mov
repz
lcall
repz
or
enter
cwtl
push
lahf
scas
aam
test
cmp
push
mov
xchg
mov
int
inc
fsubrp
push
shrb
add
hlt
push
js
jne
xchg
bound
pop
mov
jl
jle
pop
sbbl
dec
add
sbb
sti
cmp
addr16
push
mov
jnp
imul
icebp
lret
or
test
cld
jl
mov
fldt
fsts
stos
sbb
lahf
addb
fisubl
ret
mov
jp
lahf
jmp
pushf
loop
jl
inc
and
sbb
xor
and
lea
mov
data16
jle
inc
stos
sbb
cmp
fucom
sbb
cmp
pop
or
pop
adc
xor
or
inc
aaa
mov
stos
pop
repnz
mov
dec
cmp
cld
lds
xchg
mov
ret
adc
and
add
insl
test
rclb
cmp
add
popa
mov
lret
call
aam
cmp
cmp
push
imul
add
cmp
cmp
sti
xchg
jb
roll
mov
push
add
insb
lcall
xchg
jge
mov
mov
xor
sub
notb
mov
repnz
hlt
enter
mov
aaa
dec
jo
cmp
ffreep
pop
xchg
pop
xlat
fcmovnb
cli
fisttpll
fdivr
pop
xor
add
jle
xchg
stc
icebp
mov
xor
rcrl
lret
iret
aam
pop
pusha
fldt
imul
bound
and
mov
imul
call
mov
popf
push
add
dec
pop
aas
push
mov
mov
andb
mov
mov
das
mov
sbb
aad
add
call
dec
out
cmp
adc
push
insl
cld
enter
jb
pusha
lret
ret
add
mov
mov
push
test
pop
insl
lea
dec
shrl
inc
mov
sub
movsb
xor
adc
push
jp
clc
stos
iret
and
pop
inc
es
push
cmp
xchg
ss
xchg
rol
jno
adc
xlat
loop
es
xchg
sub
das
push
or
leavew
sbb
shlb
lret
add
mov
dec
in
mov
pushf
mov
push
lahf
ffreep
pop
mov
out
sub
inc
xor
js
sub
inc
fmuls
jae
mov
xchg
mov
mov
stos
xchg
sbb
cmpsb
mov
sahf
std
out
sbb
mov
mov
std
mov
or
sbb
sub
sub
and
sbb
std
push
call
out
imul
std
mov
adc
cmc
test
inc
lahf
test
loopne
add
jmp
jecxz
sahf
scas
popa
repnz
xchg
add
sbb
sub
push
out
add
sbb
xchg
jne
in
fsts
pop
aaa
adc
fs
movsl
mov
ja
add
and
cmpl
and
cld
and
and
sahf
or
pop
imul
je
popf
jb
pop
jo
sbb
fmul
loopne
arpl
push
sub
popa
hlt
in
inc
loopne
aaa
lret
cmp
and
dec
repnz
call
js
pop
and
lods
fsubrs
dec
lcall
dec
shlb
sbb
pop
or
hlt
pop
add
sbb
mov
adc
mov
or
jnp
push
lds
popa
out
jnp
in
jnp
lods
sbb
add
out
xor
mov
adc
mov
iret
fwait
shrl
loopne
and
jbe
leave
sub
pop
test
dec
data16
pop
or
popf
mov
jg
xchg
stos
shrl
inc
jge
das
and
cwtl
loope
jp
mov
cmp
cmpsb
hlt
mov
fwait
sbb
loop
into
enter
inc
xchg
lcall
les
add
cltd
imul
outsb
mov
fwait
mov
push
sub
outsb
cmpsl
int
add
pop
push
jo
mov
mov
cmp
rcl
pop
and
cmpsl
cwtl
pop
jnp
cmpsb
and
cmp
leave
xor
cmpsl
pushf
addb
adc
mov
fisttpl
scas
test
es
aad
out
mov
dec
add
fucom
sub
inc
xor
inc
jp
mov
dec
mov
iret
repz
jmp
mov
pcmpeqd
sub
xor
in
sub
fstl
push
or
adc
mov
xchg
mov
xor
mov
push
cltd
push
dec
sub
int
icebp
or
stos
jb
bound
pop
outsl
mov
dec
pop
mov
sub
pop
xor
mov
hlt
pop
fidivrl
rclb
mov
cmpsl
pop
sti
in
add
xchg
loopne
xor
adc
or
in
xchg
inc
insl
add
push
hlt
das
adc
outsl
dec
cmc
aaa
ret
loopne
repnz
and
mov
mov
notb
pop
jno
pop
mov
mov
addr16
sahf
cwtl
push
out
lahf
and
ss
dec
xor
cmp
pop
or
aam
test
jnp
shll
icebp
jns
or
fbld
jecxz
cmovae
pop
mov
pop
cmc
push
fistps
xchg
mov
fimull
sub
pusha
and
int
mov
ret
fmul
dec
in
jns
cmp
add
push
dec
jle
sti
and
dec
mov
lods
ret
push
icebp
inc
mov
lcall
mov
jns
mov
movsb
jbe
jecxz
sbb
into
lahf
nop
xchg
dec
mov
lea
notl
insb
xchg
mov
loope
out
es
or
jo
jl
adc
lea
cwtl
stos
add
mov
sarl
jno
mov
inc
jo
mov
push
movl
add
lahf
push
xor
adc
mov
adc
idivl
or
or
cmp
stos
jnp
pop
ret
stos
fchs
int3
inc
mov
or
insl
mov
pop
mov
cltd
xlat
int3
hlt
in
push
sbb
mov
lret
sbb
in
arpl
xor
rcl
aad
add
inc
sub
fistpl
add
and
subb
cmp
xor
mov
jae
in
or
cmc
and
inc
pop
mov
push
jmp
push
icebp
clc
lods
mov
push
cli
movsb
aaa
add
sahf
jae
je
jmp
sbb
and
popf
loope
adc
mov
adc
movlps
faddl
rcrl
push
or
fidivs
jg
lods
mov
shll
cmpsb
ret
pop
xchg
lahf
ret
adc
dec
outsb
pop
sbb
pop
hlt
arpl
stc
test
ffree
mov
leave
adc
in
jle
mov
andl
fimull
cmp
imul
sub
fcoml
sub
mov
mov
cmp
stos
jae
lods
rolb
cli
add
xchg
insl
or
call
cwtl
enter
mov
xorl
jae
stos
jb
xor
jg
push
je
fsubp
sti
and
push
clc
jne
sub
or
in
and
dec
int3
scas
fidivrs
add
mov
jmp
cmp
mov
mov
aad
inc
xor
jnp
push
adc
shrb
push
out
cld
ret
stos
jne
aaa
shll
or
cmp
sub
gs
int3
out
fcomps
sti
ja
in
push
bnd
pop
jo
mov
jbe
mov
pop
or
cli
jno
mov
dec
mov
repnz
push
or
enter
popf
andb
pop
cli
out
pop
popf
rclb
iret
lret
cmpsl
xchg
call
pop
fwait
or
push
add
add
add
pop
fistpl
in
and
cmp
jp
pop
lea
and
nop
pop
xchg
aad
sbbb
fwait
pop
shr
inc
stos
sbb
aas
pusha
dec
mov
sub
hlt
test
mov
sbb
and
push
shll
pop
pusha
inc
rcrl
dec
push
test
cmc
xchg
xchg
lock
mov
mov
xchg
add
mov
leave
mov
xchg
and
xchg
mov
or
xchg
out
add
or
mov
add
loop
divl
mov
xchg
loopne
add
push
out
filds
popa
out
daa
jmp
out
aas
jns
pop
fistpl
sbb
stos
outsb
mov
or
push
cwtl
cmp
adc
mov
jmp
push
lret
lcall
push
cmc
cmpl
scas
dec
test
out
loop
push
ljmp
mov
addl
jmp
out
aaa
int
fdivrs
mov
mov
adc
dec
push
call
lret
push
adc
ljmp
loope
mov
into
pop
xchg
ja
mov
and
jmp
cwtl
inc
aaa
mov
jg
adc
add
push
adc
sub
fisttps
lahf
xor
mov
dec
jle
fcomi
addr16
lret
jg
test
pop
cwtl
inc
fldz
lock
insl
std
dec
jb
arpl
pop
and
xor
sahf
rolb
jp
cmc
hlt
shll
push
cld
hlt
or
popf
or
leave
ret
in
sbb
adc
loopne
fildll
and
fistpl
mov
inc
push
lret
jns,pt
and
insb
and
sbb
cmpb
inc
pop
js
adc
push
div
enter
lods
add
jnp
ljmp
ds
lods
mov
lret
inc
daa
jge
out
ret
xchg
in
push
imul
pop
cmp
in
mov
dec
mov
push
or
sub
xlat
shrb
das
pop
push
xchg
inc
dec
cmpsl
pop
in
push
inc
jp
in
xchg
pop
cltd
mov
mov
mov
lods
sahf
cmp
cwtl
mov
loope
inc
pop
pusha
lea
fdivl
movsl
xor
mov
mov
stos
sbb
nop
aad
sbbb
dec
scas
repnz
sahf
sbb
or
dec
cmpsl
sbb
mov
es
cmp
mov
fdivrs
call
xacquire
pop
or
outsb
cs
xchg
aam
mov
inc
push
or
and
loop
fsubs
dec
ret
out
insb
std
push
scas
pusha
fisttps
scas
fcomi
mov
cmp
sub
sub
xor
sub
adc
shr
inc
push
cli
in
fdivs
xchg
sbb
mov
inc
jp
es
mov
inc
inc
or
cld
add
jg
cmpsb
fsubl
jae
sub
imul
sbb
pop
roll
cmp
xchg
add
xor
cmp
or
enter
inc
cwtl
popf
insb
mov
dec
cwtl
into
mov
xchg
gs
mov
xor
in
das
lds
fisubs
xor
lret
call
ja
and
clc
int
sbb
jns
sub
or
inc
sub
sbb
xchg
or
ret
pop
xchg
xlat
aad
call
leave
jmp
inc
scas
mov
dec
fldenv
fstps
mov
push
rorl
roll
or
mov
popf
fldt
sbb
sahf
or
add
pushf
xor
outsl
adc
cli
imul
mov
call
and
loope
and
icebp
push
sub
ret
scas
add
xchg
and
fabs
cmc
in
fsubl
mov
insb
inc
clc
outsl
data16
push
dec
ss
adc
cltd
push
outsb
js
vpcmpgtb
adc
jge
in
xchg
xchg
pop
int
out
and
sbb
roll
hlt
cld
xchg
mov
popf
jbe
shlb
inc
adc
int
mov
xchg
push
sahf
out
push
push
mov
lods
lret
mov
mov
xchg
pop
fdivs
dec
xor
sub
in
adc
aas
dec
lret
push
test
sahf
push
leave
push
xor
xchg
mov
xchg
cmp
lea
inc
xchg
lea
fbld
inc
lods
pop
cli
fiaddl
ret
in
out
lods
mov
push
inc
cld
cmp
push
adc
test
cld
mov
stos
xlat
iret
mov
xlat
into
sub
and
fs
pop
xchg
xor
xor
xchg
sbb
enter
out
or
mov
add
xchg
push
or
xchg
sub
or
cmpl
xor
mov
fwait
push
push
sub
inc
push
xchg
lea
xchg
mov
xor
pusha
or
and
mov
inc
cmp
add
int
jnp
hlt
je
mov
jp
imul
rcr
cmp
mov
push
jo
mov
inc
enter
in
lds
jno
test
cwtl
xchg
pop
mov
mov
lods
into
stos
inc
jle
or
mov
push
jno,pt
mov
frstor
aaa
or
fcmove
filds
iret
lret
fldl
pop
iret
sbb
movsl
stc
lea
sti
lcall
shrl
iret
mov
mov
fucom
enter
fisubl
mov
adc
xchg
rcll
ljmp
into
cld
clc
push
pop
pop
into
adcl
pop
add
sti
cwtl
mov
lea
ja
inc
mov
clc
repnz
pop
dec
or
mov
pop
popf
fs
cmpsb
adc
sbb
std
outsb
sarb
cmp
add
sti
lcall
push
mov
popa
idivb
insb
cltd
stc
adc
jne
fidivrl
or
sub
cmp
loope
in
int
incl
scas
adc
iret
insl
sub
decl
xlat
outsb
jmp
lods
mov
test
outsb
fldl
cmp
dec
add
sbb
jp
mov
xchg
fcomps
jb
imul
pop
mov
and
dec
mov
lods
sub
mov
or
xchg
outsb
push
mov
inc
cmp
loop
stc
add
lret
mov
dec
and
pushf
in
mov
sbb
aas
stos
jne
lock
pusha
adc
xchg
rcrl
push
data16
adcb
insb
push
cld
adc
xor
mov
les
jge
rorl
jle
push
fidivrs
clc
and
xor
and
mov
lret
sbb
and
adc
mov
scas
dec
push
jecxz
addr16
jp
into
add
pop
or
xchg
rclb
mov
popf
test
lret
ljmp
sub
pop
add
cmp
fwait
stos
sbb
hlt
jl
push
es
fnclex
inc
adc
pop
or
add
mov
dec
out
imul
push
sbb
cmp
adc
fnsave
ret
or
cs
push
jae
test
cmpl
insl
aas
in
add
jno
push
aam
shlb
movsl
sbb
xchg
ret
data16
add
fmulp
js
or
push
add
inc
push
in
ja
inc
adc
push
cmp
push
add
lahf
in
sub
cwtl
stos
dec
dec
out
dec
out
xor
aaa
push
mov
cs
mov
jnp
cmp
aaa
lods
or
stos
or
cmpsl
out
mov
loop
out
xchg
and
lcall
mov
stos
cltd
cld
addr16
cmp
cmp
push
push
xchg
addb
mov
xchg
cmp
aas
fs
xor
cmp
pop
cld
stos
addr16
pop
push
dec
jns
inc
cmp
into
leave
in
sub
outsb
inc
bound
stc
pop
pop
or
push
cmp
pop
pop
shlb
sbb
pop
adc
outsl
jbe
sahf
pop
popa
movsl
ljmp
les
dec
sub
cwtl
mov
xchg
insl
in
popf
inc
loop
je
inc
mov
cmc
fcmovnbe
stos
adc
fs
sarb
pushf
mov
sub
imul
inc
adc
insl
call
mov
rorb
ficomps
cmc
lcall
fadds
jle
fdivrs
dec
js
fstpl
test
mov
mov
mov
stos
cmpsb
sbb
lock
cltd
mov
insl
and
sbb
ljmp
icebp
popa
mov
lret
push
repnz
and
or
push
lods
sub
insb
fwait
push
xchg
pop
add
test
ret
nop
xlat
movsl
jmp
inc
in
inc
lahf
call
mov
lcall
inc
dec
pop
hlt
push
sub
dec
insl
xor
out
in
mov
gs
sub
sbb
push
cld
test
stos
insb
insl
test
std
lret
aas
mov
cwtl
gs
adc
lret
fwait
sub
insb
scas
mov
fstps
pushf
jns
mov
pushf
xor
jp
push
popa
mov
push
sbb
push
int3
pop
mov
fdiv
iret
mov
mov
out
or
lret
call
jmp
enter
lods
or
and
lcall
fs
sub
xor
pop
in
sbb
adc
adc
mul
mov
push
mov
jmp
pop
daa
mov
pop
and
pop
iret
sahf
pop
jecxz
dec
stos
out
jo
mov
mov
lcall
pop
push
jecxz
pop
ss
push
inc
data16
lock
mov
jecxz
xor
or
arpl
mulb
loopne
push
gs
pop
mov
lret
icebp
imul
clc
cwtl
cwtl
sub
int
xchg
jp
xor
jno
test
inc
pop
mov
jecxz
jns
add
inc
pop
loope
push
push
insl
lahf
insl
in
sahf
into
out
mov
and
pop
out
jge
scas
dec
insl
cmp
jbe
adc
out
lock
ficoml
mov
lret
movsl
or
lds
outsb
fsubs
mov
mov
out
dec
push
std
testl
mov
aad
pusha
adc
mov
push
mov
pop
sbbl
and
popa
in
nop
movsb
imul
rorl
movb
mov
mov
scas
mov
xor
pop
add
jno
mov
adc
jno
popa
cmpsl
gs
vmovshdup
bound
aam
lret
fdivs
imul
or
rolb
xlat
add
adc
push
nop
aam
adc
push
les
jbe
dec
jmp
sbb
pop
es
out
push
mov
inc
push
in
adc
outsb
jmp
stc
mov
jne
sub
pop
sbb
cmpsl
test
ret
inc
outsb
test
xor
test
bound
cmpsl
mov
pop
jb
nop
rcll
cmp
mov
inc
insl
lahf
pop
lods
fwait
adc
cltd
leave
dec
dec
pop
or
mov
dec
movsbl
je
popa
mov
jp
xor
add
sub
aad
outsb
rol
jmp
push
pop
imul
movsl
add
rorb
clc
imul
std
jne
fdivrs
inc
lea
test
lret
mov
mov
and
adc
shl
lret
cmp
rcr
clc
enter
lods
sbb
scas
es
mov
std
adc
insl
fidivs
cld
adc
testb
mov
xchg
mov
lds
rcrl
mov
fdivs
ret
cmp
pop
or
sbb
sti
xor
mov
sub
push
call
cwtl
cmp
sub
nop
xor
push
ret
test
outsl
mov
ja
scas
jnp
fs
inc
es
insl
sbb
es
jo
imul
fs
mov
mov
pop
fcompl
daa
dec
mov
jecxz
adc
fwait
add
add
iret
sub
aas
fists
or
push
cld
cltd
and
loope
ja
xchg
pusha
in
fstl
push
or
test
add
repnz
sbb
mov
stc
pop
je
and
xchg
ja
je
ss
sbb
lcall
cwtl
cwtl
popa
cwtl
mov
mul
and
jae
fistpl
pop
inc
pop
cmp
lcall
and
js
in
aad
push
lahf
and
sub
nop
xchg
inc
jno
cmp
repz
lahf
daa
adc
add
roll
xchg
dec
mov
add
sbb
adc
cmp
jbe
push
pushf
push
cwtl
pop
loope
sub
dec
pop
mov
icebp
mov
pusha
lahf
mov
push
add
scas
push
mov
lods
cld
flds
call
dec
or
fcompl
mov
xchg
push
incl
adc
or
sti
jecxz
add
popf
js
pop
cwtl
mov
repz
loopne
jecxz
xor
jl
push
lods
push
jb
or
sbb
fsubrl
sbb
cmpsl
frstor
mov
popa
testb
xchg
divb
aas
jae
push
loope
pop
loope
adc
xor
mov
sbb
rcll
add
cmovnp
andb
sub
ret
push
and
cwtl
mov
lea
jno
xchg
or
pop
adc
mov
fnstcw
pop
mov
mov
inc
outsb
sbb
xor
xchg
mov
ret
mull
lea
jecxz
addb
sbb
nop
push
int3
in
mov
mov
mov
test
inc
cs
scas
daa
mov
xchg
shll
in
arpl
xor
pop
int3
fbld
and
inc
repnz
xchg
push
mov
ja
sahf
mov
ret
add
ret
jp
cs
cmp
out
ljmp
mov
repnz
mov
adcb
out
xchg
cmp
xor
inc
jae
inc
inc
push
insl
insl
mov
xor
in
mov
sub
mov
dec
std
fmul
pop
mov
movsl
adc
push
sub
push
andl
std
insb
and
sub
js
push
sbb
js
push
jmp
push
cs
inc
fcoml
lods
cmp
adc
into
shll
push
push
mov
mov
sbb
cmpsl
into
movb
call
leave
sub
hlt
clc
pop
imul
rcl
out
sub
ja
dec
mov
and
or
addr16
cmp
pop
fwait
pop
cld
or
pop
and
fdivs
mov
dec
sbb
cmp
inc
xchg
es
pop
jecxz
repz
scas
mov
insl
sub
jne
xor
outsb
and
mov
xlat
gs
shrl
in
cwtl
or
fsubrs
mov
push
leave
icebp
es
and
loop
insl
and
sub
adc
dec
les
roll
outsb
jo
fistpll
int3
mov
mov
fldenv
mov
mov
xor
xor
mov
jne
pop
scas
mov
ja
dec
sahf
xor
stc
adc
inc
scas
sub
push
fadd
rcrb
or
xor
outsb
xor
sub
into
push
out
es
sahf
test
dec
cmpsl
out
shlb
in
test
xor
cld
dec
cmc
fbld
pop
cs
xchg
jne
mov
je
jecxz
inc
icebp
pop
cmp
and
xchg
ljmp
fcmovbe
push
mov
pop
test
out
add
ret
testb
daa
adc
mov
arpl
js
mov
mov
rclb
ret
sbb
push
mov
arpl
mov
movsb
sub
mov
cmp
jl
or
add
cmp
mov
cmp
imul
xor
jg
mov
sbb
in
or
and
daa
cmpl
and
jno
test
jge
mov
insl
test
pushf
jns
mov
jmp
and
in
bound
jge
sub
cli
out
jg
je
ds
jnp
inc
xchg
fidivrs
loope
scas
hlt
dec
jns
pushf
sub
push
jb
lret
sarl
sbb
arpl
cs
les
mov
cmp
adc
inc
sub
add
lea
mov
dec
sbb
icebp
adc
iret
hlt
sahf
and
inc
mov
xchg
repz
or
mov
stc
mov
cmp
sahf
push
pop
mov
xor
push
rorb
push
dec
incb
ret
mov
test
xor
loope
movsl
inc
cmp
cld
clc
ret
popf
fnsave
push
jl
jg
add
cmp
shr
pop
lahf
jp
out
mov
pushl
in
movsl
sub
divl
inc
addr16
test
lret
out
aas
movsb
jp
imul
xchg
out
je
sbb
sub
addr16
gs
or
pop
jne
bound
push
push
mov
imul
ds
call
int
test
push
xor
inc
sbb
sbb
xor
std
inc
adc
and
mov
jg
out
adc
repz
shr
cmpsl
xchg
mov
pop
mov
xchg
adc
mov
jle
sbb
jmp
mov
pushf
incb
loope
shr
jmp
pop
dec
mov
fisubs
adc
xchg
cmpsl
nop
ljmp
call
loope
loop
mov
xchg
mov
lock
lds
jp
jb
xchg
outsb
imull
bound
mov
and
scas
ret
lret
imul
xchg
mov
sub
movsl
xchg
out
jno
mov
push
ds
cmpsl
loop
add
in
jge
push
sbb
cmpsl
shlw
arpl
or
fsubs
cld
ja
shl
jle
cmp
fwait
inc
repz
or
lahf
das
jp
out
xor
xor
inc
xchg
call
push
jp
call
mov
imul
rcll
insb
cmp
jmp
leave
xor
sub
xor
pop
and
std
xchg
int3
push
mov
inc
nop
inc
loopne
sub
sbb
movsl
jnp
pop
jo
pusha
scas
cwtl
decb
push
fidivs
test
inc
adc
daa
xor
aaa
mov
aaa
sti
cmc
mov
fwait
add
push
inc
push
mov
and
gs
sbb
and
rcl
sahf
and
pushf
test
sbb
push
dec
andl
cli
bnd
les
shll
jae
subl
add
bound
cltd
jns
push
jle
gs
or
lret
movsb
pop
mov
lds
mov
sub
pop
in
xor
mov
push
mov
cmp
push
out
out
sbb
mov
jp
scas
rorl
lret
adc
sub
int
aad
or
dec
mov
fcompl
lds
rorb
jmp
call
jns
jno
adc
push
xor
std
adc
mov
fcompl
jge
sub
outsl
dec
jle
add
cmp
sub
mov
movsb
faddp
push
lea
mov
test
xchg
and
and
adc
xchg
dec
in
sub
jg
imul
jmp
jmp
mov
jnp
mov
sub
aad
lock
inc
sahf
movsb
pop
pop
push
das
stos
int
jg
inc
insb
sbb
xor
fsubp
dec
clc
test
lret
into
outsl
push
dec
jnp
or
je
lds
and
and
jb
jo
inc
ret
int3
int3
fwait
inc
fs
jno
xor
fs
mov
push
lock
add
cwtl
jmp
jle
jge
aam
fildll
mov
push
add
and
nop
cmpsb
xchg
inc
mov
subl
add
jge
js
call
jg
or
pusha
and
rclb
add
lahf
mov
cmp
outsb
movsl
inc
mov
in
je
rcr
mov
push
push
mov
xor
pop
jp
dec
jnp
lcall
nop
cmp
dec
sub
jae
movsb
orb
inc
mov
in
sub
fbld
in
shl
push
pop
dec
pop
jl
scas
push
or
mov
imul
or
das
repz
ret
xor
jle
dec
rcrl
rclb
int
dec
mov
decb
cmpsb
lahf
test
push
add
xchg
xor
pop
daa
inc
js
enter
nop
movl
mov
fsubrl
and
and
jmp
call
xchg
aam
scas
or
jge
pop
push
bound
add
jae
scas
mov
popf
faddl
and
mov
xchg
int
mov
mov
aaa
fwait
leave
xchg
inc
cmp
xor
sbb
data16
mov
daa
in
sbb
adc
adc
mov
ds
pop
mov
sbb
mov
daa
clc
and
push
stc
cmp
lret
jl
jp
adc
cltd
das
sti
out
fistps
mov
pop
lods
icebp
push
enter
inc
xor
and
mov
add
xchg
sti
mov
and
mov
cli
cmpsl
aam
and
add
mov
dec
cmp
ss
jbe
rcll
fnstcw
xchg
int
push
inc
inc
jmp
pop
xchg
in
mov
mov
es
jmp
jbe
mov
xor
in
shrl
icebp
nop
jmp
pusha
mov
or
mov
and
push
jae
jns
in
push
orb
xchg
mov
ret
orl
xchg
xchg
mov
dec
popf
sbb
cs
es
inc
rcll
jb
in
sub
in
cmp
pop
add
pop
arpl
movb
popf
adcl
mov
pop
dec
jne
icebp
jnp
lcall
fwait
ljmp
aaa
mov
push
vmwrite
dec
adc
cli
xor
call
xchg
push
cmc
lods
fstps
sub
inc
sbb
xchg
xor
push
mov
sahf
dec
dec
leave
lods
rorl
cmp
ret
dec
pop
cld
and
sub
in
fcmovnbe
xor
mov
popa
xor
test
fnsave
sbb
mov
xorl
ss
lahf
sahf
dec
rorl
or
fwait
mov
jge
aaa
gs
inc
fwait
pop
or
dec
dec
fdivl
aas
and
jl
pop
ret
inc
gs
cli
sub
and
mov
jae
nop
and
mov
daa
imul
lds
push
mov
jae
and
bound
mov
xor
pop
mov
lahf
and
and
xchg
fwait
aaa
mov
cli
jge
adc
lahf
and
lret
pushl
lcall
daa
cmp
jge
jecxz
push
sub
sbb
push
xchg
push
mov
popa
movsl
dec
add
repnz
push
test
lods
lods
cmc
mov
je
jl
sub
inc
push
jp
xchg
and
mov
xor
ja
es
jecxz
xor
jo
pushf
repnz
jb
ds
test
or
xor
and
jae
mov
out
mov
sbb
es
xchg
jbe
or
cmc
out
xchg
xor
enter
out
jns
imul
pop
sarb
jns
or
jl
iret
dec
add
loopne
jbe
mov
lret
pop
xchg
pop
jle
cs
and
loope
ja
mov
pop
and
lcall
mov
jle
out
xchg
sub
mov
leave
dec
pop
ror
jne
loopne
mov
bound
add
or
fistpl
mov
pop
inc
inc
pop
movb
xchg
aas
add
push
inc
imul
ljmp
shll
mov
mov
add
shll
repz
int
adc
pop
mov
cwtl
ljmp
jno
dec
repz
fbstp
sahf
xchg
jae
enter
mov
adc
cld
bnd
mov
pop
enter
leave
add
jo
arpl
dec
int
enter
jb
push
sbb
and
sahf
pop
shlb
adc
std
pop
and
sbb
xabort
jne
cmp
pop
inc
hlt
js
and
aad
pop
and
mov
daa
clc
outsb
aad
push
mov
sub
ds
pop
inc
outsb
mov
mov
test
mov
orl
or
add
mov
fsts
movsb
aaa
push
mov
dec
xor
add
shll
mov
shlb
imul
fwait
push
mov
dec
inc
inc
mov
or
shrl
fisttpl
push
aaa
mov
mov
or
ds
mov
pop
popa
ret
rclb
push
mov
and
jl
out
jge
or
dec
mov
jb
pop
into
xor
out
scas
gs
push
push
je
sub
dec
enter
sub
fs
adc
lods
and
cmpsb
cvtps2pd
mov
dec
mov
scas
jnp
scas
rcll
pop
add
repz
push
dec
jo
jg
add
mov
fdiv
sbbb
in
shlb
dec
mov
inc
gs
int
in
jae
notl
jecxz
jnp
mov
mov
sbb
popa
bound
mov
pop
xchg
pop
add
daa
test
mov
mulps
stc
imul
movsb
vcmpss
fucomp
in
in
mov
xlat
jp
or
sbb
out
mov
inc
fldlg2
loopne
sbb
sub
outsl
push
aaa
sahf
xlat
ds
test
push
xchg
stos
mov
in
call
sub
xchg
loop
insl
push
cmp
xchg
inc
scas
cltd
adc
push
mov
inc
push
sahf
fmul
pop
nop
xor
imul
sub
push
xchg
in
xchg
js
mov
pop
stc
stos
lods
call
mov
pop
pop
inc
cld
in
leave
push
hlt
arpl
jecxz
nop
mov
in
in
xchg
pop
mov
sbb
shll
sbb
xor
fwait
jns
inc
inc
cmp
push
sub
jno
iret
movsb
mov
insl
fdecstp
loope
mov
pusha
push
movsl
or
ss
push
mov
xchg
or
popf
cs
pop
pop
lods
rclb
repnz
or
out
dec
pop
imul
sbb
mov
and
scas
mov
xor
in
adc
pop
mov
mov
out
bound
inc
loop
daa
or
mov
ret
and
inc
stos
in
mov
add
imul
jmp
mov
xlat
sahf
cmpsl
pusha
jno
or
hlt
iret
loop
cmp
push
das
push
mov
mov
mov
jecxz
data16
xor
fldt
loop
mov
or
dec
popl
mov
adc
inc
mov
call
push
fbld
ljmp
xor
push
and
std
adc
or
popa
repz
xor
bound
or
gs
mov
incl
and
xchg
mov
jg
aaa
mov
push
std
in
dec
ja
or
dec
outsl
sub
xor
fadds
lods
fs
or
hlt
jge
sti
jp
mov
or
mov
xor
inc
shl
inc
addb
xchg
pop
ffree
pop
sub
or
cmp
mov
shlb
pop
repz
or
or
push
cmpsl
jmp
insb
aas
lcall
sub
cmp
fnstenv
adc
addr16
aaa
push
cmp
sub
idivb
mov
mov
popl
and
pop
out
ja
ret
adc
sbbl
stos
and
fsubrl
mov
or
rcr
adc
adc
call
pop
ret
mov
pop
inc
cmp
adc
sbb
mov
ret
clc
in
ret
lods
pushf
add
cmc
arpl
clc
cmp
pop
mov
mov
shrb
dec
pop
lea
inc
push
inc
test
pop
inc
test
cmp
xchg
xchg
add
push
orl
cld
stc
inc
pop
pop
fdivrs
shlb
lds
push
rcll
scas
addb
das
jecxz
mov
push
pop
inc
or
aas
and
inc
adc
mov
mov
les
sbb
scas
adc
sahf
pop
xchg
xchg
inc
jge
mov
ret
sub
mov
mov
xor
mov
movsl
data16
ss
push
xor
leave
test
mov
jmp
mul
xchg
jno
dec
mov
cli
add
imul
int3
das
jne
push
shlb
sbb
jl
movsl
fadd
cmp
call
lret
inc
out
push
dec
mov
add
rolb
dec
pop
lret
cmp
movsl
ja
fwait
out
sbb
sbb
cmpsl
adc
inc
or
mov
scas
add
loopne
dec
push
pop
mov
imul
push
fs
mov
and
outsl
stos
and
in
scas
jle
push
cltd
call
incb
xor
push
popa
dec
cld
pop
jae
sti
adc
add
lods
dec
inc
push
inc
pushf
or
inc
sbb
jp
aad
les
stc
out
cltd
std
addr16
xchg
test
jns
xchg
mov
lret
jbe
pop
mov
insl
mov
mov
addr16
loope
xchg
add
pop
imul
jb
es
pop
adc
shl
mov
or
scas
pop
xor
add
dec
clc
pop
pop
jp
xlat
mov
shrb
loope
sbb
stos
mov
outsl
aam
adc
xchg
add
sub
aad
sbb
testb
call
mov
test
mov
push
dec
mov
mov
movsb
pop
aas
les
pand
add
or
xor
out
adc
dec
push
std
pop
ret
loop
jns
rclb
dec
sarb
lretw
stc
into
fadd
fdivrs
js
or
and
test
xor
sti
add
jl
xchg
mov
loope
xchg
xchg
or
rorb
fisubrl
les
mov
pop
add
sbb
int
xchg
cmpsb
call
rclb
stos
rclb
sub
cmp
test
pop
jecxz
insl
xchg
and
nop
int
inc
xchg
jg
bound
adc
pop
add
add
nop
and
mov
push
popf
pop
es
ror
in
lcall
daa
loopne
mov
lods
test
in
cld
or
enter
subb
jo
pop
call
popa
fdivr
pushf
in
mov
in
loopne
mov
dec
cmp
mov
pop
mov
adc
ret
or
xchg
mull
push
inc
movsl
inc
stos
jae
cmp
mov
fs
loopne
jp
or
data16
lds
test
cmp
aam
js
shlb
daa
ljmp
mov
int3
mov
lret
ret
fdivrl
daa
xchg
xchg
xchg
testb
jecxz
or
dec
cmp
fnsave
mov
jbe
dec
cld
loope
test
hlt
jae
movsl
hlt
mov
jo
jmp
fldcw
or
sub
cmp
ret
cli
pop
sbbb
addb
repnz
shll
cmp
scas
jns
push
sbb
mov
fisttps
add
xor
movsl
leave
jno
fcmovbe
push
movb
stc
stos
shlb
dec
xchg
fisubs
push
sub
stc
sbbb
mov
xor
into
cld
popa
es
not
inc
ds
clc
mov
idivl
daa
pop
ja
std
lret
pop
and
outsb
es
mov
lds
cmp
addr16
sbb
sbb
fnstcw
sti
add
mov
imul
paddsb
popw
mov
ja
mov
aas
enter
fcoml
mov
hlt
out
adc
xchg
xor
xchg
or
or
push
call
jb
xchg
popf
mov
in
cmp
iret
pop
xor
scas
xor
test
fs
iret
enter
arpl
jns
out
daa
out
xor
adcl
push
mov
cmp
int3
push
inc
scas
insl
add
pusha
mov
xor
sub
xchg
adc
pop
sub
xchg
and
negb
dec
mov
test
mov
lret
out
cs
out
scas
sahf
nop
inc
mull
nop
shrl
es
ss
push
aas
push
jo
inc
dec
jmp
faddl
inc
ret
lods
loop
movsb
mov
jecxz
mov
lds
cmc
cld
icebp
sub
shrl
lods
fidivrl
fdivl
in
xchg
popf
dec
add
clc
cmc
adc
mov
pusha
mov
mov
xchg
sub
call
int3
clc
loop
push
dec
or
stc
push
inc
movsl
mov
imul
jle
dec
mov
mov
cld
lods
xlat
test
cmp
scas
lahf
xor
add
and
loope
add
popf
fnstenv
mov
cmpsb
fwait
fs
dec
out
and
fucomip
fld
xchg
orl
or
cmpb
lcall
mov
fwait
sub
mov
jns
and
cmp
cmp
push
es
mov
sbb
adc
cmpsb
ds
shlb
fwait
add
xor
pop
mov
std
data16
rcrl
in
and
mov
jae
xor
inc
loopne
sub
cs
inc
mov
jne
popf
pop
movsb
jnp
cmp
xchg
and
inc
out
dec
mov
pop
mulb
faddl
mov
add
push
dec
mov
sbb
add
sub
dec
push
xchg
scas
xchg
loope
ss
jbe
sub
xchg
and
fs
adc
shll
dec
sbb
test
push
adc
cmp
sar
dec
call
xchg
mov
popa
xchg
cmp
sbb
mov
imul
mov
sbb
cmp
outsb
lret
push
mov
dec
and
mov
and
iret
call
jmp
jle
out
add
dec
xor
imul
dec
cmp
stos
lods
jns
scas
rorl
fidivrs
jecxz
and
fnsave
vmovupd
movsb
add
int
addb
test
fwait
xchg
mov
xchg
and
ss
xchg
pop
xchg
cmp
and
add
cmc
mov
addr16
inc
scas
ja
js
push
xchg
fs
scas
adc
loop
shrl
sub
push
sbb
lods
jmp
mov
dec
lock
inc
mov
aas
out
movsb
mov
or
popf
mov
dec
aad
mov
mov
lds
xchg
push
ret
pop
cmpsb
popf
stos
rcl
inc
jb
mov
cmp
in
cvttps2pi
mov
call
push
dec
cltd
jae
mov
mov
mov
mov
stc
xlat
out
repz
test
or
int3
loope
into
clc
push
test
mov
adc
into
sbb
leave
faddl
ss
fmuls
mov
outsl
or
cmp
and
xchg
call
mov
icebp
xchg
inc
push
cwtl
or
sub
inc
pop
push
fidivrs
mov
movsb
push
in
popa
sbb
xor
arpl
mov
mov
rcrb
enter
inc
xor
or
adc
inc
fs
dec
add
xchg
push
push
test
dec
mov
mov
dec
btc
cli
loop
cwtl
xchg
int
mov
push
bound
xorl
popa
adc
out
out
pop
and
shlb
icebp
or
mov
mov
faddl
mov
cwtl
xor
int3
jge
push
sub
sub
dec
outsb
mov
repnz
int3
mov
fwait
subb
sbb
push
adc
aaa
inc
pop
out
push
in
xchg
int
adc
sbb
leave
leave
je,pn
popa
jecxz
sahf
pusha
mov
jge
clc
push
ds
in
std
cs
lret
ss
sub
sbbb
out
scas
out
ficomps
push
int3
loope
test
cltd
scas
push
loopne
jecxz
filds
pop
divl
lcall
push
cmpsb
pop
mulb
add
add
xchg
rcll
jno
bound
pop
mov
pop
and
jecxz
loope
in
and
pushf
lcall
fisttpll
in
cmp
clc
add
jle
cmp
je
scas
cmp
test
cmpsb
cmc
lret
inc
push
out
imul
and
adc
cmp
roll
inc
jo
clc
jl
dec
and
mov
dec
icebp
push
pop
push
outsl
pushf
ret
scas
mov
mov
or
jmp
ret
cmp
loope
cmp
sub
repnz
add
jge
jae
dec
popf
mov
or
mov
int
sarl
pop
in
test
loopne
adc
mov
push
dec
lds
scas
dec
jae
sbb
out
or
inc
sub
js
push
mov
cmovbe
pop
pop
mov
outsl
dec
stos
test
mov
ss
lcall
adc
sbb
out
leave
ret
adc
cmp
incb
lock
push
cltd
cmc
roll
decl
lods
cmp
fisubl
cmp
fldl2e
mov
adc
xchg
in
pop
insb
jmp
jo
idivb
insl
and
lods
into
ret
ror
push
pop
adc
and
mov
testb
mov
mov
fidivrl
lea
and
mov
sub
leave
adcl
mov
lds
sbb
cmp
xchg
shrb
inc
ljmp
insb
mov
push
inc
mov
mov
or
mov
das
imul
inc
jnp
fsubs
sbb
pop
fildl
inc
xchg
xchg
adc
adc
nop
les
mov
iret
loope
repz
ja
fs
xchg
in
add
xor
aas
mov
pop
mov
sti
jne
sub
mov
pop
daa
nop
xchg
nop
add
and
cli
push
loopne
sub
imul
mov
mov
and
mov
jno
xor
or
decl
pushf
mov
push
pop
nop
inc
push
mov
mov
dec
loopne
sbb
push
jecxz
test
sub
fistl
cld
xor
sub
mov
xorl
mov
es
xchg
scas
inc
inc
xchg
out
lods
add
repnz
xchg
flds
jnp
enter
push
dec
ficomps
push
shl
or
stos
jg
fs
or
and
enter
and
shll
cmc
in
int
jnp
lock
mov
repnz
add
inc
lods
sub
cld
jns
sbb
push
mov
dec
dec
jge
data16
cmp
and
mov
push
ret
push
or
mov
mov
xchg
in
repz
inc
inc
outsl
jae
jp
mov
aad
movsb
das
in
mov
test
cmpsb
das
jnp
xchg
cmc
sub
scas
or
andl
cmp
xchg
lcall
sbb
mov
repz
sbb
mov
aad
lea
pop
sub
mov
mov
out
ss
iret
lcall
push
ljmp
pop
fstl
and
sbb
pop
rcll
cmp
sbb
cltd
in
test
stos
sub
mov
pop
loope
adc
lea
ret
out
shlb
je
cltd
inc
pop
ss
sbb
into
mov
xor
push
mov
and
push
add
sbb
outsb
jns
add
cmp
in
adc
out
or
mov
mov
inc
xchg
lods
inc
mov
out
lds
test
xadd
hlt
fcompl
repnz
std
jno
add
fldenv
push
sbb
aaa
add
push
mov
jle
jno
aam
mov
clc
add
insb
int3
jnp
lahf
sub
insl
jp
mov
int3
mov
xchg
inc
add
cmp
fs
test
test
mov
xor
bound
inc
pop
cmpsb
repnz
jge
inc
sub
lods
in
dec
sbb
stos
das
push
lods
fisubs
cmpsl
mov
mov
push
mov
hlt
inc
push
xor
mov
inc
jae
rep
xor
pop
or
add
and
dec
mov
mov
call
add
cmpsb
sbb
pop
popf
mov
mov
inc
mov
jl
roll
movsb
rorl
or
or
adc
inc
or
push
push
arpl
xchg
pop
clc
bound
mov
and
or
mov
push
aas
dec
scas
xor
in
loope
mov
mov
cmp
cmp
jge
mov
adcl
inc
test
jno
xor
insb
mov
out
add
ret
push
jg
cmp
pop
addr16
dec
sub
dec
and
lods
xor
mov
fcoms
sub
adc
push
mov
test
inc
jle
rcll
outsb
jmp
sti
jbe
mov
out
movsb
mov
xor
repnz
mov
jg
dec
dec
clc
lock
sbb
adc
int3
mov
lret
sbb
cmp
aam
scas
adc
fs
or
lret
xchg
aad
push
cmp
jae
scas
daa
mov
jb
sahf
out
les
dec
pop
jl
mov
jns
aam
call
les
imul
jge
ficomps
ds
nop
sub
sub
popa
jns
xchg
add
dec
inc
ret
nop
arpl
mov
xchg
inc
and
fnsave
pop
push
mov
pop
sbb
into
fs
imul
mov
fcmovu
aaa
jo
pop
aam
jae
dec
jmp
pop
cmp
call
push
sbb
subl
and
add
mov
ljmp
mov
daa
in
xor
mov
pop
subb
rorl
cld
sbbl
adc
cwtl
pop
sub
ret
xor
sub
push
adc
stc
test
cmp
mov
repnz
nop
pusha
repnz
dec
and
gs
or
subl
lock
jecxz
in
or
sub
out
xlat
popf
push
rorl
dec
test
jmp
lret
mov
inc
shll
test
xchg
cmpb
mov
fiaddl
jne
negb
cmc
rolb
sub
arpl
ljmp
xorl
dec
clc
sbb
arpl
int
xor
imul
cltd
stos
lock
les
fists
and
pop
test
and
shrl
inc
pop
js
test
jb
mov
nop
xchg
mov
push
stc
push
cmp
sbb
push
pop
pop
sub
sub
lea
adc
fwait
jl
repz
fmull
jle
add
pop
into
stc
sbb
jg
pop
punpckhdq
in
mov
sbb
hlt
fsubr
cmp
jbe
lret
push
dec
fsubrl
add
int3
shlb
xchg
xor
fstl
sbb
mov
xor
dec
or
or
jns
mull
movsb
stc
push
fisttps
inc
xor
push
cmpl
scas
mov
faddp
xchg
pop
ffreep
iret
mov
push
mov
push
cltd
push
mov
mov
scas
inc
in
cmpsb
sbb
add
lods
popf
inc
loope
xchg
out
fisubrs
cld
xchg
pop
movsb
aam
in
movsb
jae
gs
test
rcl
insl
es
dec
mov
loop
or
mov
jno
out
xchg
jmp
mov
mov
push
fcomps
add
pop
xchg
pop
fistps
jmp
push
adc
jne
aad
sub
jae
sub
push
inc
cmpsl
clc
imul
adc
add
lock
dec
loope
lret
jno
popa
dec
into
and
and
mov
jl
jb
add
cmp
pusha
cmp
cmpsb
and
add
dec
aam
inc
hlt
mov
push
in
add
mov
push
sub
iret
sub
cltd
in
int3
sbb
adc
aam
and
and
xor
sahf
leave
aas
xor
jecxz
lcall
ja
iret
push
clc
cli
repz
hlt
lods
mov
or
ja
jb
jecxz
cmp
add
or
les
aam
fstpl
test
sbb
dec
push
notb
shll
mov
idivl
inc
sbb
mov
xchg
popf
movsb
pop
mov
xchg
scas
mov
jbe
rcl
rolb
push
dec
cmpsb
jecxz
mov
mov
into
xlat
inc
add
test
icebp
cmp
push
dec
test
or
push
pop
cmpsl
cwtl
out
add
cwtl
push
pop
pop
push
or
pop
cmp
push
rorl
cltd
ret
aad
adcb
insl
push
incb
scas
pop
lods
sbb
out
in
dec
loop
ret
adcb
popf
ds
test
pop
fs
cmp
aas
out
cmp
lods
push
insl
fs
push
sbb
movsb
aad
and
push
rol
cwtl
inc
cwtl
popf
out
outsb
dec
xlat
xlat
push
out
loopne
out
cli
idivb
jge
les
sub
mov
ljmp
add
mov
dec
or
cmp
adc
cwtl
pop
test
dec
xchg
cmp
sbb
push
aas
mov
push
leave
add
es
xchg
cltd
inc
sbb
push
mov
imul
pop
mov
mov
sbb
stos
aad
movsb
in
adc
mov
and
lcall
imull
nop
jp
and
data16
test
sub
jbe
mov
stc
loopne
mov
loopne
scas
int
cmp
cld
inc
mov
decl
sub
jge
jle
repnz
pusha
xchg
pop
outsb
inc
push
pop
xchg
fwait
aam
or
and
cld
xchg
push
sub
push
sbb
jl
andb
add
mov
mov
mov
pop
jmp
insl
push
cmpb
sbb
fildl
imul
sbb
stos
fbld
or
mov
aad
push
insl
push
pop
cli
xor
mov
jp
das
mov
icebp
xor
out
stos
and
lcall
aas
movsb
nop
je
and
cmpsw
xor
out
lcall
add
push
jns
or
adc
cmpsl
jp
cmpl
jp
mov
and
call
addr16
add
insl
mov
sti
arpl
ret
xchg
push
mov
mov
data16
out
mov
call
ret
clc
leave
orb
out
jb
fiaddl
xchg
add
clc
enter
ret
nop
movsl
lret
dec
dec
out
cmp
xchg
int
inc
cltd
pop
sub
ret
and
out
sahf
pop
cmpsb
sti
aas
sbb
jle
sar
adcb
mov
xchg
rcrl
mov
cmp
adc
faddp
add
push
dec
popa
xchg
repz
or
lods
push
mov
sbb
xchg
jg
xchg
sbb
hlt
jmp
adc
sbb
mov
shlb
xlat
aas
loopne
xchg
iret
subl
std
movsl
mov
xor
pop
mov
clc
mov
mov
insl
jmp
sub
jmp
cmp
xchg
iret
fldt
lret
enter
aaa
and
add
pop
pop
out
test
mov
adc
test
test
dec
cmp
mov
scas
pop
or
xlat
pop
dec
pop
inc
cmp
push
add
xchg
test
dec
pop
xor
mov
mov
push
enter
push
add
cmc
push
push
adc
int
iret
add
in
test
daa
sub
int
icebp
cmp
add
in
jle
test
add
out
mov
or
jno
fists
ja
adc
lock
jno
andl
jo
popf
lds
mov
xor
add
aas
out
punpcklbw
cmp
sub
pop
lea
mov
bound
jp
cmovg
mov
loopne
es
pop
jbe
fs
inc
push
sub
hlt
push
and
int
call
fstps
mov
imul
ja
cld
jmp
lods
xchg
rcll
cmpl
push
dec
and
cmp
xlat
and
mov
dec
lea
xor
out
scas
xchg
jl
adc
mov
andb
sbb
sti
jb
in
cld
arpl
jecxz
sub
nop
sbb
jne
aas
cs
or
insb
jno
pop
outsl
pop
add
push
and
push
inc
mov
jae
test
sbb
repnz
stos
fwait
xor
dec
out
mov
mov
lret
fs
or
nop
rorl
cld
out
push
in
scas
push
mov
shr
add
repnz
xor
mov
lock
push
mov
xor
frstor
mov
jge
je
sub
adc
add
lock
xchg
aaa
loop
mov
pushf
mov
lock
nop
data16
loope
jp
divl
jne
repz
into
scas
in
push
xor
fs
ss
in
imul
xchg
movsb
aas
mov
movl
movsl
mov
mov
pop
or
sti
push
pop
add
xchg
push
or
cmc
data16
jmp
int3
enter
repnz
inc
and
or
dec
aas
test
test
jp
outsl
hlt
outsl
dec
fldcw
mov
fiaddl
push
sti
pusha
push
mov
or
xchg
icebp
ds
push
in
jge
xor
adc
or
stos
fwait
arpl
shll
out
dec
pop
scas
pushf
cmp
shlb
fadd
mov
and
mov
push
sub
out
inc
push
cld
aad
jg
lods
dec
aaa
sbb
pop
sbb
mov
repz
popa
or
sub
xor
js
dec
arpl
sub
inc
aas
sub
stc
fbstp
mov
ljmp
dec
xchg
fstl
and
and
mov
mov
jb
test
and
incb
xchg
lds
int
add
nop
pushf
cmp
ljmp
sbb
dec
repz
xchg
in
in
movsl
je
js
aas
jle
out
fsubrl
incb
clc
in
dec
pushf
push
jge
in
lods
cmpsb
mov
pusha
mov
dec
insl
lods
stc
dec
pop
sbb
lods
add
cmp
mov
sti
lret
or
cmpsl
cmp
neg
pop
mov
dec
mov
dec
mov
scas
clc
mov
inc
lock
mov
jge
cmc
adc
ljmp
mov
adc
mov
add
mov
inc
shl
enter
in
shlb
loopne
ljmp
mov
jbe
daa
xor
js
mov
add
add
jg
sarb
mov
sub
push
xchg
shlb
pop
sub
push
addr16
or
mov
lds
insl
mov
pop
leave
dec
jnp
mov
enter
add
and
testb
or
js
push
add
and
jne
sub
mov
cs
sub
popf
jbe
cs
adc
inc
aad
into
push
lcall
xor
lods
pop
imul
xor
jle
dec
and
out
in
in
pop
mov
mov
push
ss
test
xor
cmp
pusha
push
xchg
and
sbb
ljmp
push
dec
push
jle
fdivrp
xor
loop
ret
push
aad
bound
xchg
mov
sbb
push
mov
decb
inc
jno,pt
or
push
dec
sub
and
sbb
les
mov
mov
mov
outsb
mov
pop
sbb
xchg
stc
mov
or
xchg
inc
cmp
adc
pop
sbb
fs
popf
add
jo
add
cmpsl
adc
lcall
fisttps
mov
xor
mov
inc
xchg
jl
jae
sbb
fdivrs
stc
mov
inc
mov
pop
cmp
push
cmp
or
pop
fldenv
dec
fs
stc
es
sub
test
push
hlt
add
mov
out
lahf
xor
cmp
adc
test
test
out
dec
add
icebp
and
or
daa
inc
lds
mov
shll
out
or
xor
mov
xchg
add
push
icebp
movsl
jae
loopne
out
dec
je
xlat
xchg
outsb
mov
or
jbe
sbb
lds
fdivs
popf
inc
enter
mov
pop
pop
int
dec
sbb
xchg
fcomps
or
dec
push
dec
loopne
mov
xchg
int3
faddp
or
push
lret
in
pop
inc
mov
inc
repz
fs
mov
rclb
mov
sahf
movsl
dec
xlat
mov
int3
mov
dec
mov
dec
clc
inc
in
dec
test
cmp
jnp
insb
mov
lods
sbb
outsb
sbb
mov
test
clc
push
test
and
sbbl
inc
push
sub
xor
fwait
loop
mov
push
popa
out
adc
pop
in
pop
sbb
jb
lcall
mov
xchg
cmp
mov
pop
sbb
and
arpl
rcll
mov
mov
mov
xchg
sub
xchg
pop
test
lahf
jnp
mov
in
scas
dec
mov
int
and
ss
cmc
fnsave
lods
sub
popa
int
fadd
test
sahf
push
push
lds
insb
lret
cmp
iret
mov
sub
movsl
or
jp
repnz
out
pop
loopne
fnstcw
movsb
mov
movsb
mov
out
cs
sbb
jl
cmp
cmp
and
arpl
mov
out
into
daa
sub
inc
pcmpgtb
lds
lret
mov
imulb
push
daa
sbb
mov
jmp
mov
cmp
lea
ds
sbb
outsb
fstps
iret
pop
jg
pop
popf
xchg
out
add
xchg
scas
mov
test
xor
add
iret
ja
pop
shlb
xchg
pop
les
mov
mov
inc
mov
test
xor
das
pop
mov
icebp
pop
inc
add
std
bound
daa
push
adc
push
dec
loope
dec
out
mov
cmp
push
xchg
xor
sbb
xchg
push
pop
add
jno
insl
xor
dec
jg
or
out
mov
push
jecxz
pop
paddsw
icebp
stos
lret
roll
xor
popa
sub
jp
repnz
dec
cmp
pop
jl
ja
call
and
xor
xchg
call
add
or
xor
cmpsl
adc
add
adc
movsl
pusha
dec
ljmp
xchg
dec
mov
mov
push
sbb
dec
rcrb
int
outsb
ficomps
xchg
push
or
fstpl
push
jbe
xchg
cmp
js
jl
loopne
orl
aad
cmp
push
movsb
jle
sti
loope
and
test
mov
fidivs
push
and
mov
shl
out
dec
pop
dec
and
ds
mov
push
inc
stos
call
je
jecxz
es
xchg
stc
in
pusha
and
xor
inc
cwtl
cmp
dec
in
lock
sub
lea
fcompl
movsl
inc
and
mov
add
dec
cmpsl
mov
test
gs
push
adc
fldl
fistpll
xchg
dec
push
das
sub
shl
imul
or
fisttpl
jno
pop
xor
es
into
mov
ficompl
mov
dec
shr
or
pop
pop
fcompl
pusha
fnstcw
mov
shll
scas
ss
scas
xchg
movsl
inc
fisubrs
inc
mov
cli
adc
loop
cmp
dec
mov
xchg
pop
cmp
add
inc
ljmp
cmpsb
jbe
pop
out
stos
dec
fwait
sbb
fwait
dec
mov
pop
push
roll
sbb
popa
lods
or
push
mov
leave
dec
aad
pusha
or
jmp
mov
mov
dec
pop
xchg
jns
cmp
xchg
test
leave
aad
cmp
push
lret
rcrl
call
cmpsl
xchg
xor
in
add
xlat
into
shll
xor
add
enter
fsubrs
cmp
pop
scas
or
mov
lods
ja
cld
push
mov
test
out
push
test
fnstcw
out
dec
fwait
in
es
loope
jns
jno
testl
ljmp
dec
jg
and
test
stos
das
in
fnstcw
iret
rorb
pushf
movsb
addr16
bound
cmp
out
in
mov
movsl
cmc
mov
mov
movsb
ljmp
nop
outsl
dec
mov
std
pop
repnz
xor
aam
roll
xchg
dec
movsl
sahf
int
ss
daa
mov
xor
jge
jg
mov
xlat
or
rol
add
mov
pop
loope
and
mov
popa
mov
cmpsl
dec
dec
inc
mov
hlt
mov
es
js
mov
ljmp
mov
mov
aad
sub
sbb
jge
cs
fbld
adc
cmc
sbb
push
adc
sahf
xor
idivb
mov
mov
inc
jbe
push
setle
lea
cld
dec
scas
lret
jge
sbb
xlat
jmp
adc
cmp
jns
and
push
cmpsb
call
loopne
mov
decb
aad
add
pop
lret
adc
fs
lret
xor
fsts
or
popa
punpckldq
sub
subl
shl
sarl
jns
adc
cmp
dec
icebp
mov
sub
pop
int3
or
or
mov
mov
cs
push
lcall
stos
aad
sbb
mov
jne
aas
or
pop
pop
or
pop
xchg
in
xchg
pop
jno
push
or
push
or
addr16
xor
mov
add
or
movsl
fisubrs
out
push
mov
or
mov
mov
dec
gs
movsb
push
icebp
imul
and
dec
jg
es
mulb
mov
mov
pop
test
std
sub
jp
inc
mov
in
lcall
ds
enter
aas
scas
jmp
or
mulb
cmp
out
sub
dec
and
xor
fmul
push
andl
xchg
scas
pop
lds
jp
push
mov
mov
inc
sbb
cwtl
and
pusha
test
add
out
and
mov
ss
or
xor
daa
jbe
push
adc
pop
mov
or
sahf
dec
imul
ret
dec
jp
fdivrl
lahf
arpl
jae
xor
push
mov
push
fs
push
xor
in
stos
sti
and
outsb
and
ljmp
in
sbb
cmpsl
popa
xor
out
fdivs
cmp
inc
xchg
imul
insb
ja
xchg
xchg
je
stos
pop
lock
mov
xor
in
aad
inc
mov
cld
xchg
or
shl
mov
add
inc
or
sbb
sub
and
imul
xor
xor
out
es
jo
lret
jp
movsl
xchg
and
lock
adc
dec
outsb
inc
outsl
xchg
scas
xor
fs
sbb
mov
inc
mov
bnd
push
fsubrl
inc
cli
lcall
jecxz
or
fdivrl
popa
out
pop
lods
mov
cli
jp
or
dec
sahf
enter
popa
fisubrs
jns
ja
pop
popf
pop
rclb
inc
call
test
decb
mov
inc
xchg
daa
sbb
pusha
cltd
sub
xchg
xchg
outsl
icebp
divl
arpl
inc
and
inc
mov
mov
int
xor
call
loope
push
xor
xor
sub
dec
xchg
sub
sbb
push
mov
mov
ljmp
cmpsb
push
push
add
lcall
bound
gs
sahf
mov
lret
out
test
mov
sbb
push
mov
dec
pop
and
repnz
add
je
shl
icebp
adc
inc
pop
pop
jno
iret
insb
inc
test
adc
jle
add
mov
sub
fwait
cli
cld
std
jnp
sub
or
cmpsb
cmpb
enter
mov
repz
movsl
mov
mov
nop
mov
xor
jmp
movsl
cltd
bound
inc
lea
mov
fxam
adc
icebp
xchg
addr16
mov
xor
int3
mov
dec
iret
aam
adc
mov
cltd
or
pop
pop
push
xor
mov
dec
outsl
or
out
dec
mov
mov
mov
cmp
mov
aad
addb
in
sarb
xlat
dec
adc
adcb
cmp
inc
not
jb
or
inc
cmp
sub
xchg
jo
xchg
adc
sub
mov
roll
pushf
pop
gs
in
fsubrl
nop
sti
and
es
jns
in
lcall
sbb
push
xlat
in
movsl
cmc
jl
jecxz
pop
and
sbb
in
sbb
in
mov
mov
xor
aam
iret
push
dec
mov
xchg
xor
mov
fwait
shrb
cmp
std
inc
js
mov
jno
adc
fcompl
mov
lea
lods
in
jns
je
push
adc
sbb
dec
mov
pop
jg
js
test
add
out
addb
sahf
jns
cmp
dec
inc
incl
jl
dec
mov
in
es
dec
mul
rorb
pop
sub
sub
int3
test
das
inc
in
add
test
add
fdivr
mov
gs
xchg
dec
fcmovne
dec
or
test
xchg
shrb
movsl
push
push
rcl
loope
or
cmp
adc
faddp
inc
pop
rcl
mov
cmp
fidivs
sub
xchg
dec
xor
jbe
mov
lahf
imul
adc
xor
xor
mov
xchg
or
popa
add
xchg
xchg
mov
subl
int
mov
xlat
scas
adc
xor
add
inc
iret
pop
sub
push
mov
xor
mov
dec
pop
in
mov
test
push
stc
mov
je
sub
sub
sti
int
cmc
xor
loope
enter
cmp
loop
daa
lret
test
aaa
inc
lods
stos
movsl
jl
jne
jbe
fdivl
movsb
push
rorb
nop
in
xorl
not
jne
clc
dec
jo
mov
sub
leave
leave
popa
pushf
mov
lret
push
add
sub
loopne
divl
ret
jecxz
adcb
and
out
imul
push
das
dec
pop
sub
call
inc
push
mov
push
push
push
enter
adcl
test
js
sub
out
imulb
aam
mov
in
sub
mov
daa
cld
pop
adc
dec
pop
call
lods
ss
mov
stos
inc
shl
aaa
inc
cmp
mov
xor
nop
push
inc
xor
scas
jecxz
cmp
imul
insl
cmp
fimuls
std
fmull
mov
and
xchg
leave
push
sbb
sub
sbb
sbb
lahf
and
icebp
lds
jp
add
insl
jge
xchg
inc
repnz
push
cmp
and
pusha
imul
jo
data16
pop
outsl
pop
jle
sbb
push
pop
pop
sti
nop
mov
into
inc
sub
push
scas
cwtl
adc
sarl
lret
ds
out
rcll
repnz
das
and
cli
or
adc
push
jge
cmpsl
std
shll
ja
cmpsl
data16
jle
cmp
sbb
lock
enter
imul
icebp
test
inc
xor
out
push
mov
out
bound
add
popa
outsb
mov
jecxz
aas
push
inc
sbb
in
out
mov
fisubrl
sub
rcrb
xor
add
sbb
and
mov
xlat
jle
mov
mov
mulb
enter
pop
push
cmpsl
cltd
imul
setns
mov
movsl
or
jo
gs
outsb
inc
pop
and
jmp
popf
shl
xchg
jo
jns
jmp
sahf
xchg
es
fisubrl
push
add
data16
mov
les
daa
xchg
mov
xchg
lret
push
leave
stc
push
add
es
cmp
fisttps
incb
xchg
add
push
mov
in
aam
loop
mov
into
or
call
repnz
add
or
push
mov
test
rorl
and
and
jno
cwtl
pop
outsb
adc
jmp
jbe
int
mov
pop
xchg
add
hlt
dec
and
push
imul
mov
mov
mov
pop
jae
push
insb
mov
xchg
jnp
int3
stc
call
out
jle
test
adc
xchg
add
dec
mov
test
sub
adc
shll
add
xor
fisubs
movsl
mov
sub
jae
mov
ds
fsubrl
scas
lods
cmpsb
call
jo
pop
repnz
sub
or
fucomp
mov
mov
mov
popa
xchg
subl
jge
in
xor
gs
ds
out
jge
mov
mov
sbb
ret
sbb
pop
sbb
es
mov
adc
insl
push
jae
in
xchg
and
adc
outsb
stos
test
cltd
movb
pop
out
stos
cld
pushf
test
xor
xlat
mov
mov
dec
mov
add
mov
jbe
push
mov
jmp
test
jne
fadds
cmc
icebp
lahf
lahf
in
je
aas
xchg
loopne
cmpb
or
stc
sbb
mov
insb
decl
pop
and
xchg
mov
test
scas
add
mov
lret
mov
jge
shll
js
pop
add
insl
inc
xchg
cmpsl
mov
scas
pop
insl
inc
pop
sti
jmp
shrb
js
arpl
cmp
xchg
mov
orl
and
lea
cmp
cmp
pop
mov
test
xor
repz
imul
add
jo
cmc
mov
cli
pop
and
cmpsb
fstpt
paddsw
sub
gs
sub
mov
pop
inc
and
arpl
outsb
negl
xchg
out
push
add
repnz
add
jno
add
jns
adc
jo
sbb
xor
mov
imul
jmp
or
sbb
sbb
jl
adc
pop
cmp
divb
pop
testl
js
repnz
and
test
aas
in
xchg
mulb
loop
std
cmp
pop
mov
lds
lahf
pop
lcall
cwtl
popf
in
mov
xchg
es
push
push
mov
imul
andl
ja
push
jb
fimuls
dec
sbb
push
aam
push
lahf
mov
pop
xchg
inc
add
ret
loope
pop
std
or
enter
sbb
aas
into
mov
lea
or
sbb
pushf
dec
sub
dec
shl
sub
hlt
roll
jp
cmp
mov
in
popf
sub
sbb
cmc
and
sbb
pop
inc
vmovsd
pop
rcll
dec
push
jno
cmpb
and
negb
scas
xor
xchg
in
xor
mov
mov
sbb
inc
add
iret
xor
mov
cmpsb
outsl
loope
inc
outsl
push
leave
mov
dec
jle
inc
mov
mov
lahf
inc
and
and
mov
fisubs
mov
or
lods
jo
lock
lods
nop
scas
xchg
jmp
jle
aad
xor
inc
pop
pop
push
clc
lods
fisttps
sub
fistpl
in
pop
or
add
adc
cmp
or
inc
and
mov
inc
xchg
sbb
pop
dec
scas
xchg
mov
cmpsl
test
out
pop
pop
or
and
lods
jns
add
je
addr16
fnstenv
pop
mov
mov
jle
mov
int3
cmp
adc
in
jno,pn
shl
push
lods
jle
xor
sbbl
xchg
jp
cmp
sarl
dec
inc
cmpsb
scas
das
cs
mov
fmul
or
mov
jbe
out
out
clc
test
pop
mov
sbb
subl
jno
jecxz,pn
imul
loop
rcl
pop
sub
mov
xor
ja
sub
int
and
jl
add
mov
jbe
ret
dec
and
cmp
add
hlt
xor
int3
imul
sti
inc
push
pop
xor
insb
and
push
mov
push
insl
jb
adc
sub
rorl
cmp
mov
test
xor
xchg
aad
repz
je
loopne
push
mov
xor
in
and
mov
pop
out
lahf
mov
mov
xor
cmc
adc
shlb
out
xchg
nop
sub
xchg
clc
ljmp
xchg
imul
xchg
jge
cmpsl
dec
stos
dec
cmp
jmp
or
xchg
sub
fldenv
mov
cmp
dec
push
jmp
xor
and
adc
shlb
stc
xchg
push
pop
or
loop
fmuls
sbb
mov
repz
and
dec
add
jp
jmp
mov
cli
pusha
in
iret
jb
in
xchg
sbb
xchg
dec
out
xor
loop
jne
jg
movsl
mov
scas
insl
jl
sub
add
and
pop
adc
mov
cld
adc
arpl
adc
int
inc
mov
pause
push
in
dec
and
iret
mov
dec
mov
in
aaa
jnp
lods
sbb
popl
sbb
jl
add
pop
and
mov
pusha
mov
test
sahf
inc
ja
test
inc
out
mov
aad
xchg
mov
push
ret
adc
inc
das
dec
add
or
lods
sub
imul
movsb
in
cmp
sbb
pop
jbe
and
inc
mov
push
stos
lret
aas
lret
sbb
push
cmp
rcl
sub
adc
dec
pop
roll
jecxz
pop
stos
and
stos
test
cmp
mov
imul
je
repnz
sbb
addr16
pop
inc
mov
jae
into
or
scas
or
pop
into
and
stc
movsb
mov
jge
in
add
popa
das
mov
push
stos
outsl
nop
push
lock
cmc
push
imulb
sbb
sbb
in
push
pop
leave
push
mov
out
sub
mov
cli
xor
xor
js
pusha
sub
sub
ja
xchg
and
les
stc
popa
xor
inc
repnz
pop
mov
and
cmp
xchg
in
xor
ret
jg
inc
add
mov
sub
dec
xor
lret
lods
pusha
cmp
out
inc
imul
mov
jae
mov
sub
mov
aad
rcrb
jae
cmp
adc
mov
lock
jnp
in
loopne
stos
xchg
and
fxch
xor
lods
push
xlat
or
push
xchg
sub
sahf
xchg
and
addr16
push
dec
xchg
cmp
test
enter
imul
jnp
mull
fstps
mov
imul
in
es
nop
loopne
bsf
push
pop
scas
dec
test
lea
mov
loopne
iret
push
imul
loope
inc
shl
cmpsl
pop
adc
je
jecxz
lcall
sub
mov
pop
outsb
ljmp
test
pop
ds
clc
mov
out
mov
rclb
daa
push
aas
rolb
das
sub
pop
ror
add
push
xor
inc
shrl
and
xor
fdivs
je
xchg
push
inc
mov
fnstenv
sub
push
or
push
dec
sbb
or
ficompl
inc
leave
sub
mov
mov
dec
stos
dec
incl
adc
sbb
int3
sbb
or
mov
or
add
aam
push
jp
ret
pop
int3
aam
clc
xchg
and
les
xchg
lods
iret
mov
stos
sub
jp
mov
fisubs
mov
ss
or
sti
push
jns
nop
mov
imul
cs
pushl
xchg
dec
jmp
ja
mov
pop
jge
insb
mov
jne
pushf
jmp
jb
aaa
aas
movsl
daa
add
inc
dec
jae
int3
enter
imul
fmull
cmpsl
popa
and
outsl
sbbb
xor
adc
push
xor
ljmp
repnz
ja
cmp
into
mov
stc
push
in
nop
lahf
nop
xor
test
dec
fisubs
fadds
jge
daa
loopne
icebp
cmpl
iret
push
shrl
cli
jbe
mov
jne
pushf
movsb
sbbl
cld
scas
jae
rorl
add
xor
fwait
ds
or
stos
adc
int
or
mov
test
push
add
cmp
idivb
and
adc
mov
xorl
pop
lcall
sahf
add
mov
hlt
and
mov
gs
les
add
and
arpl
sub
lock
pop
int
push
loopne
cld
loopne
dec
push
xchg
std
xchg
sti
in
cmp
xor
sub
inc
popl
cltd
pop
jmp
out
jle
jbe
push
mov
sahf
mov
mov
mov
pop
aad
sub
push
add
fnstenv
in
jmp
mov
mov
add
fcmovnbe
inc
adc
insb
je
adc
call
in
xor
cld
dec
mov
cmpsl
sub
out
stos
jge
push
popa
aas
ret
repz
mov
ja
popa
leave
pop
mov
add
pop
shrb
dec
mov
cld
bound
notb
xchg
ja
js
ds
add
ja
outsl
out
sub
sbb
test
repnz
aad
jb
xor
js
push
je
jbe
xor
test
mov
pushf
push
jb
in
cltd
hlt
ja
xlat
and
jge
mov
adc
lret
push
cmp
xorl
int3
cmp
sbb
cmp
sub
das
out
pop
imul
ror
add
sbb
pop
jmp
ret
ficoml
aaa
fisttps
jge
out
outsb
rcll
mov
ljmp
cmp
sub
loop
ja
nop
xchg
jg
xchg
ljmp
cmpsb
repz
enter
iret
cmp
addr16
mov
in
push
rclb
aaa
mov
inc
cmc
xor
cmp
sbb
lret
mov
cmp
mov
cmovb
les
rclb
insb
pop
into
sbb
add
lcall
sbb
mov
pop
mov
fstps
inc
jae
xchg
mov
mov
xor
cmpsb
cltd
daa
sub
push
dec
mov
push
cmp
sbb
adc
adc
mov
lret
mov
stc
sbb
xlat
jbe
push
and
call
loopne
mov
pusha
or
and
je
fidivrl
mov
stc
push
outsb
push
sbb
mov
stc
ja
clc
cmp
cmpsb
cli
adc
inc
push
mov
divb
lret
mov
or
aam
cmpsl
push
xchg
outsb
fdivrs
cmp
adc
and
ss
das
cli
jno
jmp
cld
insl
xor
sbb
pop
sahf
dec
arpl
sbb
mov
mov
popf
add
push
imul
push
mov
outsb
in
imul
mov
lds
push
das
adc
enter
ds
pop
sbb
xor
dec
xrelease
xchg
ja
cmp
gs
sti
add
and
mov
rcrb
jns
jne
outsl
loop
lds
jmp
adc
jo
stos
xor
xchg
fwait
xchg
mov
sbb
xlat
addr16
rorl
pop
movsb
stc
movsl
jle
mov
lret
enter
xchg
mov
dec
inc
rcll
in
add
xchg
into
js
push
movsl
popl
mov
aaa
ret
shll
mov
cmp
shlb
bound
lea
fsubrl
or
aad
clc
out
inc
mov
in
sbb
mov
bound
incb
jns
scas
ja
inc
aam
xchg
cli
ret
movsl
mov
sub
rorl
fnstsw
aas
dec
into
cltd
add
jne
sub
les
mov
cmpsl
pop
test
cmp
ret
cmp
imul
sub
mov
in
ds
adcb
xor
iret
into
cltd
lock
xor
icebp
and
dec
test
sub
jmp
xchg
shl
mov
js
sub
orl
aad
mov
scas
xor
dec
push
sbb
mov
jge
and
roll
pop
inc
nop
aad
insb
sbb
rorl
jp,pn
lret
or
push
jbe
out
and
ret
jge
push
or
ret
in
pop
jge
ret
inc
inc
mov
lcall
sub
cs
or
and
js
mov
int3
pop
sti
popa
iret
mov
xorb
xor
call
aas
or
jne
sbbl
jmp
lock
fldl2e
push
pavgb
ljmp
push
jns
or
loopne
aad
mov
jge
sub
dec
sub
inc
push
outsb
andb
orb
idiv
fiadds
sub
fwait
add
cmpsb
add
int3
stos
add
movl
xchg
adc
sbb
ss
roll
aaa
or
cmp
jle
jg
mov
pop
push
lcall
adc
decl
xchg
jnp
shl
jp
mov
push
arpl
insb
jg,pn
loopne
mov
gs
push
ror
adc
adc
sub
fldenv
cmp
lods
repz
mov
lahf
insb
and
mov
outsl
repz
in
adc
lods
mov
mov
ret
sbb
in
and
out
pusha
pop
test
cmp
aad
lds
in
pushf
mov
sub
fwait
stos
leave
jp
inc
jno
or
push
ds
test
and
push
ret
and
es
test
pop
pop
data16
dec
xchg
push
push
cmp
and
push
xor
dec
mov
jp
mov
mov
lods
cmp
dec
push
pop
and
and
cmp
rorb
icebp
jo
cwtl
rcl
pop
inc
lock
test
sub
hlt
loop
mov
out
sti
arpl
xchg
adc
inc
xchg
push
pop
jge
rorl
or
int
push
leave
mov
outsb
mov
jg
xchg
cli
lret
add
cmp
inc
cwtl
test
and
paddsw
out
adc
test
int
lods
push
int3
outsl
or
xchg
dec
sbb
pop
cltd
xor
fwait
jb
xor
cmc
repz
xlat
imul
outsb
stos
jbe
mov
adc
pop
popf
cld
push
push
adc
enter
mov
out
mov
push
test
mov
inc
fstpt
xor
inc
and
pop
aad
push
push
subb
and
dec
mov
inc
or
pop
out
cmp
jne
loope
ss
in
jns
inc
and
xor
push
loope
add
testb
subb
shr
in
pop
adc
mov
sarb
das
mov
aad
and
loope
mov
lcall
xor
cli
mov
ds
loopne
pop
in
divb
popf
lea
pop
fcmovb
adc
roll
imul
notb
pushf
enter
subl
addl
scas
into
pop
icebp
test
jmp
push
lods
push
std
sbb
cmp
mov
sti
mov
test
dec
ljmp
xchg
push
fidivl
dec
adc
or
ljmp
fwait
jb
loopne
jecxz
dec
mov
data16
jecxz
mov
out
ret
gs
iret
cmpsb
les
dec
pop
inc
sti
sub
and
mov
mov
std
scas
adc
inc
jp
out
push
call
mov
dec
add
mov
in
push
fwait
out
lret
cld
mov
in
push
cmp
das
sub
inc
lock
push
pop
hlt
orl
bound
outsb
pop
inc
adc
hlt
pop
or
aaa
fdivr
add
insb
loopne
ret
ja,pt
rorb
jo
dec
dec
add
adc
or
loope
xlat
push
int3
jp
or
mov
jle
xor
cmc
jecxz
or
cmc
xchg
fs
out
enter
insb
mov
dec
or
jo
or
adc
outsb
adc
adc
mov
mov
mov
rcr
ret
dec
daa
pop
frstor
xchg
pop
fwait
pop
push
pop
mov
insb
and
scas
add
int
xchg
pop
jp
mov
in
lods
cmpsb
mov
insl
in
xchg
mov
lret
dec
xchg
or
insb
sub
pop
ja
mov
xchg
test
xchg
mov
lods
es
pop
cmpb
scas
scas
lock
jge
stos
inc
fbstp
jp
pop
loope
xchg
lea
pop
stos
jecxz
push
cmc
sbb
pusha
ds
push
mov
test
shll
and
jb
push
push
xorb
out
sub
adc
enter
lods
vmovaps
xchg
dec
ljmp
addb
aam
scas
ffree
mov
xor
jns
aad
mov
js
shrl
clc
mov
cltd
cmp
in
sbb
and
dec
mov
xchg
int3
pop
nop
enter
fsubs
mov
ds
adc
insb
js
and
icebp
fisubrs
aas
adc
cmp
cli
adc
lret
stos
stos
push
jg
sbb
adc
negl
mov
repz
lods
jb
in
cmp
out
pop
popa
and
mov
scas
jbe
div
mov
notb
loop
mov
popf
jo
data16
das
cmc
jns
dec
xor
mov
out
pop
ficompl
adc
mov
inc
fisubs
and
xchg
xor
pushf
test
xchg
push
into
dec
int
sub
fisubl
out
arpl
gs
jb
popa
je
jbe
adc
cwtl
adc
popa
cmp
lds
stos
fistl
and
aaa
lods
mov
adc
fcoml
push
insb
aas
push
mov
pop
xor
and
push
adc
sub
cmpsl
aam
cmp
sub
sbb
mov
out
ss
insb
je
mov
das
into
mov
xor
mov
stc
leave
int3
fsubrs
mov
inc
cmp
hlt
xor
dec
icebp
and
popf
inc
insl
push
jg
outsl
sbb
push
mov
xor
or
test
lods
into
std
dec
adc
and
fcmovb
std
add
mov
sarb
sbb
xlat
lods
cwtl
int
les
push
jmp
shll
loope
mov
inc
enter
mov
pop
int3
sub
loope
mov
push
outsb
mov
outsl
push
scas
inc
test
jle
stos
aad
xchg
or
movsl
mov
push
push
sbb
mov
cmpsb
movsb
in
mov
aas
ror
pop
ds
inc
xor
xchg
push
cwtl
out
in
daa
mov
adc
out
rclb
inc
add
popa
jp
inc
lret
cmc
mov
popa
mov
stc
dec
add
xor
fcmovne
cs
xchg
or
cmp
push
mov
xor
xor
pop
pop
js
loop
mov
loopne
sbb
pop
mov
lods
pop
push
or
dec
add
in
xor
icebp
stos
dec
icebp
rol
stc
fs
int
sub
pop
xor
in
cmpsl
pop
loop
imul
mov
jnp
fsubs
xchg
mov
ds
mov
jge
sub
dec
mov
cli
inc
movsb
adc
add
adc
mov
sub
repz
jle
mov
fwait
jle
sbb
cmp
js
cmp
adcl
imul
dec
loop
xchg
push
mov
daa
je
mov
cmpsl
data16
stos
xor
movsb
and
stc
sub
scas
repnz
daa
loope
ja
scas
and
pop
andl
sbb
insl
push
sbb
stos
ret
adc
lcall
jo
adc
sar
nop
dec
add
and
pusha
enter
add
inc
cmpsl
hlt
out
decl
sbb
or
repnz
sub
cld
mov
popf
and
push
rorl
xor
je
aam
ljmp
in
insb
push
insb
aad
pop
leave
inc
das
daa
jecxz
fsubs
xchg
je
mov
adc
mov
out
aad
test
gs
jns
and
data16
mov
out
enter
stos
in
mov
test
add
pop
fldt
xchg
and
in
mov
sub
xor
jmp
or
sub
sub
mov
call
fs
jnp
mov
ljmp
mov
pop
insb
cltd
push
mov
insl
cmp
sar
cmp
nop
int3
fs
and
es
sbb
or
in
pop
adc
adc
enter
aas
es
leave
in
in
test
clc
dec
adc
out
out
jmp
ja
adc
fsubrl
pop
xchg
leave
xlat
inc
shlb
add
in
pop
lahf
xor
cs
xor
mov
cltd
adc
push
dec
cmp
and
dec
mov
lods
movsb
mov
cmp
lea
cli
call
push
xlat
daa
xor
inc
repz
mov
lock
mov
mov
ffreep
mov
sub
xor
xorb
mov
sub
and
xchg
je
sbb
test
pop
mov
inc
or
pop
mov
jmp
xchg
cs
push
je
push
mov
or
push
xabort
popa
mov
sub
and
push
adc
aaa
mov
jae
jle
mov
xchg
mov
push
loopne
addr16
rol
inc
mov
aam
xchg
and
imul
mov
push
inc
loope
ds
xchg
dec
ret
aad
push
jmp
ja
call
jg
imul
add
pop
sar
fnsetpm(287
dec
sbb
pushf
fs
xor
mov
pop
cs
xchg
hlt
lcall
pop
dec
std
push
in
jle
mov
inc
lahf
int3
inc
cmc
sti
lret
test
push
in
pushf
sarl
mov
jecxz
dec
xchg
cmpb
push
testb
loop
stos
call
ficoms
sarl
or
pop
cmpsb
out
mov
inc
jbe
sbb
inc
out
imul
sub
outsl
inc
neg
cmc
jb
sub
xchg
sub
sahf
and
out
adc
mov
mov
fcomps
sahf
mov
xor
push
cmp
jns
and
lds
mov
pop
pop
xchg
inc
cmpsb
or
dec
pop
push
shrl
sub
scas
mov
mov
adc
jns
xchg
mov
in
lea
rorb
cld
xchg
sbb
ds
adc
xchg
push
mov
mov
dec
inc
aas
cmp
leave
jne
inc
idivb
movups
pop
jge
shlb
fsubp
inc
mov
pop
paddq
sbb
adc
add
ljmp
inc
cmp
ljmp
jb
mov
js
filds
mov
aaa
xor
push
icebp
popf
fs
fcmovnu
popf
ret
ret
rclb
icebp
mov
jnp
lret
push
mov
lea
or
adc
adc
inc
pop
jae
jo
pusha
arpl
aad
clc
ret
imull
and
inc
mov
inc
mov
mov
xchg
in
mov
mov
mov
out
jnp
scas
mov
cli
adc
sub
jb
inc
shll
add
adc
and
inc
pmulhw
adc
hlt
scas
add
arpl
hlt
jle
mov
pop
add
adcl
pop
xchg
repnz
xchg
add
sub
loopne
jnp
fmulp
cltd
xchg
insb
lods
in
dec
and
jecxz
fnstsw
mov
jge,pt
ret
mov
push
push
inc
mov
ret
push
cmp
mov
inc
xor
hlt
mov
dec
out
or
mov
dec
imul
xchg
in
adc
xor
popf
push
dec
sbb
test
pop
push
inc
into
lods
ret
inc
lahf
orl
mov
mov
in
cmp
loop
out
rcl
mov
pop
jnp
fsts
cmpb
add
scas
push
lds
inc
decl
push
cs
nop
lahf
mov
out
xchg
pop
imul
rcr
sub
lods
idiv
repnz
mov
jecxz
aam
sbb
lahf
jecxz
push
fcmovnb
cmp
sub
pusha
cmpsl
xchg
xchg
jl
mov
mov
fldt
mov
les
repnz
scas
xor
adc
enter
add
ss
inc
faddl
cmp
mov
adc
insl
xchg
mov
aas
fstpt
jno
cmp
xchg
adc
mov
inc
sti
mov
adc
test
sub
add
dec
add
adc
cmp
aad
fildll
mov
mov
pop
imul
xchg
pusha
leave
add
sbbl
inc
in
adc
scas
mov
sbb
aas
ret
pop
mov
sbbl
repz
sti
mov
fs
dec
dec
add
mov
push
subb
popa
inc
sub
shrl
and
dec
scas
inc
or
mov
jae
sarl
sbb
cltd
sbb
xchg
lds
test
js
add
mov
inc
inc
cmp
data16
mov
sub
cmp
out
sti
mov
in
divl
mov
mov
inc
dec
hlt
mov
xchg
xorl
loop
aas
sbb
std
add
call
xchg
imul
loop
testb
fadds
xor
loope
mov
out
ds
jns
lods
dec
cmp
sahf
sbb
clc
jl
outsb
mov
in
sub
lods
leave
into
xchg
lahf
dec
stos
dec
push
and
loope
fwait
and
cmpsl
mov
dec
adc
lret
jecxz
imul
jnp
dec
fdivrp
clc
orl
pop
xchg
addb
mov
pop
adc
push
xchg
enter
xor
jb
testb
dec
sbb
stos
insb
out
adc
int3
dec
pop
mov
or
mov
push
sub
sbb
mov
or
sbb
and
xchg
fwait
outsb
xchg
sarl
pusha
outsb
sbb
test
pop
sbb
pop
addb
jmp
ss
cmc
pusha
dec
cmp
cwtl
mov
hlt
test
dec
pop
push
add
add
mov
ret
ja
sbb
cs
out
xchg
arpl
dec
inc
mov
rcrl
int
and
js
xchg
mov
loope
sub
mov
and
rcrl
movsl
dec
dec
xor
mov
rcrl
inc
lds
or
dec
push
cmp
lock
or
jge
sbb
inc
sbb
bound
mov
incl
xchg
stc
adc
lods
or
mov
and
cmp
add
xchg
rolb
fs
and
xor
mov
sbb
sarl
lcall
push
cwtl
lods
loopne
sbb
jne
sti
add
inc
imull
andb
adc
cld
xchg
ret
sbb
dec
push
mov
out
call
in
hlt
adc
push
lds
push
popa
pusha
cli
pusha
std
fsubl
xlat
pop
or
insb
into
insb
jmp
cld
aad
insb
scas
push
in
and
xlat
pusha
xchg
imull
adc
out
ljmp
push
es
mov
inc
add
pop
lcall
pop
neg
inc
and
into
adc
dec
adc
or
pop
adc
fs
loop
lds
mov
mov
push
mov
aam
popa
clc
in
outsl
sub
dec
das
dec
adc
aaa
push
add
pop
pop
pop
in
sbb
mov
jp
pop
mov
cld
jno
push
xchg
aam
out
out
imul
setne
fildll
and
inc
imul
cmp
xchg
xchg
sub
icebp
test
ss
cltd
stos
scas
dec
fldcw
xor
cli
xor
fcmovne
mov
not
jne
int
xchg
pop
add
mov
scas
pop
sub
sub
repnz
or
jl
test
addl
mov
ds
in
fwait
and
inc
mov
dec
jno
and
bound
jno
mov
mov
sbb
or
out
imul
adc
fisttpll
rolb
dec
sbb
sahf
jecxz
js
add
lcall
inc
pop
xchg
adc
jne
mov
adc
xchg
xchg
adc
mov
sub
movsl
pop
mov
movsb
sub
shl
addr16
xchg
test
fwait
jbe
xor
bound
ret
shr
in
imul
popa
jmp
pusha
dec
jge
add
pop
pop
mov
arpl
and
inc
mov
xor
mov
jbe
fsubrs
repz
fs
push
push
mov
lret
mov
pusha
mov
repnz
inc
daa
pop
ret
lret
cs
sbb
cmp
push
lret
mov
and
iret
push
sbb
mov
mov
or
loop
sbb
mov
pusha
cmpsb
jg
xor
ret
ret
push
sub
loopne
jb
pop
in
out
ret
jle
jmp
stos
es
popa
mov
mov
in
cmp
push
dec
inc
fs
outsl
popf
jo
cmp
or
push
fiadds
cli
addr16
push
push
inc
xchg
ret
scas
push
or
outsl
jno
cmpsl
aad
jmp
sub
iret
push
arpl
cltd
push
icebp
and
repz
iret
pop
xchg
adc
sub
out
fnstcw
or
jmp
mov
mov
jb
xor
cmpsb
push
mov
push
imul
or
fldl
xor
aas
outsb
daa
jp
and
cli
and
test
sbb
jne
mov
xchg
xor
mov
xor
shrl
icebp
xor
das
jg
int
pop
loope
pop
insb
out
int
or
cmp
xchg
mov
cwtl
xchg
mov
mov
pop
cltd
out
lods
push
fsubrl
xchg
jl
cmpsl
mov
insl
arpl
cmc
push
mov
loop
xor
imul
cmp
lret
int
inc
xchg
testb
push
aas
pop
test
push
jmp
add
or
out
ss
dec
pop
cmp
sete
jne
or
jnp
fs
lods
in
shrb
lret
push
pop
lock
dec
dec
sbbb
shll
mov
sub
inc
pop
or
fmull
cmpsl
pop
lods
insb
dec
mov
xor
xor
cwtl
sbb
std
dec
add
test
adc
lret
cmp
push
push
adc
pop
scas
aas
mov
mov
imul
jne
and
stos
lcall
fcoml
lods
mov
mov
push
adc
mov
or
and
insb
sbb
flds
std
sbb
mov
sahf
jle
xchg
xorb
scas
xchg
or
ss
jne
mov
roll
adc
push
xchg
mov
enter
sbb
jle
dec
mov
das
daa
push
lret
hlt
insb
sub
ret
and
out
aas
test
fiaddl
dec
cmp
out
jb
arpl
fdivrs
shll
insl
testl
cmp
aaa
ror
mov
push
sbb
popf
adc
popf
popf
or
jo
add
pop
mov
adc
notb
or
adc
xchg
pop
cltd
xchg
push
ret
xchg
xor
mov
hlt
sbb
xchg
cmp
cmp
add
dec
xchg
xor
or
idivl
and
sbb
lahf
push
pushf
push
shr
scas
mov
sti
add
jns
fldt
hlt
out
push
sub
cmp
xchg
fiaddl
adc
ja
cmp
add
popa
scas
jb
repz
fbld
cld
jecxz
pop
xlat
ret
cmp
mov
jo
sub
imul
and
inc
inc
data16
sbb
leave
or
pop
in
pop
sti
cmp
popa
out
in
xchg
mov
test
rorl
mov
cli
aam
mov
cwtl
test
add
idivb
sub
arpl
jp
std
jle
inc
jp
mov
push
ss
inc
mov
xchg
sub
dec
jns
test
stos
dec
test
push
hlt
out
xor
ja
test
push
sbb
adc
test
xchg
daa
fidivl
adc
lods
popa
popa
enter
loope
dec
in
jecxz
divl
or
push
or
mov
xchg
cmp
stos
sub
lods
stos
fstp
xchg
aam
pop
cmp
mov
lcall
inc
inc
nop
push
cmp
mov
leave
lea
sub
cwtl
dec
and
lea
rol
push
dec
cltd
jl
jl
into
xorb
stc
add
lahf
push
ljmp
xchg
test
adcl
jle
ret
je
xor
dec
fidivrs
cli
fidivrl
loopne
xor
or
arpl
inc
daa
aam
and
add
rclb
add
mov
inc
pop
loopne
rolb
rcrb
xchg
fisttpl
add
push
leave
es
push
into
pop
test
jno
scas
jge
popa
dec
mov
xchg
call
fnstenv
aad
push
pop
jg
inc
mov
das
push
addr16
cmpsl
and
fldenv
enter
sbb
xor
adc
out
or
cli
out
xor
push
test
cmp
pusha
jbe
mov
jge
pop
xchg
lret
sbb
lret
jg
adc
xchg
mov
test
popf
stc
mov
sbb
jmp
inc
fiadds
testb
clc
call
fimuls
and
ficoms
into
lcall
xor
pop
orl
sbb
outsl
sub
aaa
cmp
test
and
add
mov
stc
dec
scas
test
push
pop
cmp
mov
and
adc
les
aas
loopne
rol
mov
jle
addb
imul
cmp
jg
pop
ret
subb
daa
push
movsl
mov
movsb
ss
jnp
pop
and
sbb
std
jb
mov
xor
inc
iret
pop
das
aad
xchg
xor
pop
out
aam
sub
pop
sbb
dec
cmpsl
and
jmp
pushf
and
sbb
xlat
inc
or
mov
in
sbb
jle
dec
sub
lret
pop
popf
pop
loop
orb
xor
int3
andl
jbe
adc
les
pop
dec
icebp
popf
cmp
shll
xor
mov
inc
lret
insb
push
aaa
mov
or
ret
fldenv
lret
outsl
data16
in
push
push
xchg
dec
sbb
xor
cmp
lcall
jne
adc
mov
sahf
cmp
jo
fildl
ljmp
ret
lret
scas
adc
pop
inc
icebp
inc
mov
mov
subl
and
sti
aam
mov
push
sub
popa
aam
aam
xchg
mov
pop
adc
mov
arpl
shlb
movsl
cmp
fbld
adc
iret
cwtl
in
jbe
inc
cld
clc
das
leave
push
xchg
outsb
loope
pop
shll
dec
fs
negb
negl
rep
and
pop
ficoml
xchg
ret
fadd
mov
sarb
mov
cmc
out
mov
cmp
dec
mov
add
xchg
add
push
pop
nop
mov
je
fcomip
push
lods
mov
xor
and
and
arpl
pop
sbb
pop
add
pusha
sbb
cmpsb
cmpsl
cmpsl
fcompl
adc
pop
pop
loopne
jle
sbb
sub
in
fists
and
add
pusha
mov
bound
lock
mov
repz
jns
repnz
aam
xchg
lea
mov
adc
dec
repz
mov
or
outsl
jne
das
xchg
rorb
sahf
dec
add
mov
jno
aad
enter
test
mov
pop
arpl
add
mov
shl
inc
adc
pop
pop
push
ret
daa
and
xor
movsb
mov
jno
mov
push
mov
lahf
mov
jnp
jae
xchg
cmp
int3
sbb
adc
shll
push
inc
inc
pop
adc
mov
loope
adc
cmp
xchg
int3
test
mov
enter
sub
movsb
fstpt
int3
xor
push
push
and
outsl
xor
int3
sbbb
in
dec
loop
and
dec
xchg
cli
and
stos
pop
jbe
mov
in
fidivs
dec
fidivs
lods
fidivl
and
push
nop
inc
pusha
stc
loop
push
mov
bndstx
inc
xorl
mov
loope
inc
mov
in
sbb
mov
inc
and
jns
sub
loop
push
jno
adc
cmpsl
mov
inc
jae
xchg
xchg
cmp
xchg
hlt
ret
jno
cld
repnz
pop
aad
mov
out
adc
stc
cli
arpl
jne
lret
inc
adc
rep
or
or
push
push
imul
xor
pop
test
push
ret
dec
mov
xchg
mov
arpl
icebp
fcos
push
pop
es
sarl
pop
idivb
mov
jge
dec
into
dec
jge
xchg
cmp
fs
shll
dec
xlat
sahf
hlt
mov
jnp,pn
push
sub
inc
jle
pop
aad
fwait
fwait
pop
cmp
and
jb
sahf
xor
out
aam
mov
sahf
add
repnz
and
sub
mov
pusha
and
mov
push
xchg
imul
sbb
arpl
test
cmp
push
xchg
add
enter
movsb
xchg
fcoms
fmul
in
or
pop
mov
mov
mov
jns
xor
sub
scas
leave
adc
and
pop
gs
jo
push
negb
adcb
and
add
mov
adc
daa
and
dec
cmp
test
push
sbb
or
sbb
scas
cmpsl
aad
sbb
and
adc
dec
ds
add
and
aad
push
sti
cmp
test
mov
mov
in
push
stc
sbb
and
or
sub
jge
insb
adc
adc
xor
rcrl
add
scas
sbb
jg
adc
aaa
lds
dec
repz
jns
mov
add
je
push
jo
cwtl
fisttpll
xor
int
sbb
jo
sub
cmp
inc
js
mov
sub
pop
mov
test
out
inc
ljmp
std
lret
inc
shlb
ja
std
outsl
cmp
cli
cmp
add
or
test
rcrb
adc
aaa
push
cs
xchg
jmp
je
add
and
in
dec
sahf
les
imul
aam
rcrl
scas
lods
arpl
push
cwtl
int3
sbb
mov
mov
push
adc
js
sbb
and
outsl
lcall
ja
xchg
xor
sub
lahf
push
sub
insb
cmpsl
ss
fs
call
pop
xor
inc
and
pop
inc
test
mov
pop
add
ret
ret
jmp
addr16
mov
mov
fistps
cs
lret
push
xchg
mov
pop
lret
enter
lods
insl
negl
lods
mov
adc
xor
cmp
inc
stos
int3
rcll
xchg
sbb
in
xor
xor
sbbl
jmp
jne
adc
lret
pop
pop
test
hlt
add
sub
jne
mov
inc
subl
xor
jns
pop
mov
push
mov
int
xchg
add
jne
call
mov
xchg
sbb
leave
mov
ss
into
push
lret
mov
dec
testl
lret
jo
imul
loope
adc
out
xchg
mov
push
andl
or
out
push
scas
and
inc
push
jb
sbb
xchg
or
xchg
and
dec
push
push
mov
negb
not
sbb
icebp
lods
pop
dec
fidivl
mov
es
cmp
mov
mov
test
jno
add
sbb
pop
aam
mov
push
adc
aaa
ds
dec
rolb
lahf
sbb
jl
int3
mov
push
nop
or
cmc
cmp
icebp
mov
dec
sub
sbb
mov
inc
or
adc
jbe
sub
or
mov
and
push
mov
sub
and
push
sbb
pushf
push
cmp
cmp
xchg
sbb
push
jg
add
xchg
jo
or
cmp
cwtl
pushf
push
out
or
cmc
sbb
mov
xor
cs
xchg
fcomps
cmc
repz
xchg
push
or
lds
movsb
xlat
scas
pop
adc
add
mov
lret
pop
cmc
inc
or
and
add
or
xchg
push
xor
std
lea
mov
out
push
lahf
push
sbb
incb
daa
mov
dec
ret
shlb
sbbb
xchg
ret
jb
add
dec
stos
mov
pushf
pop
data16
cs
or
dec
jne
test
jmp
insb
sbb
jno
shll
insb
stc
jge
pushf
mov
stos
xchg
out
jmp
testl
fcmovnu
into
jl
mov
in
ud2
xor
sahf
fwait
inc
xor
ret
push
test
xchg
dec
cmp
mulb
cmp
arpl
cmp
shll
add
in
data16
mov
jnp
insl
lret
mov
add
sbb
adc
xchg
int
adc
int3
mov
aam
cmpb
push
or
outsb
push
xorb
xchg
cmpsl
pop
stos
xchg
jns
push
mov
cs
push
fildl
psadbw
xchg
mov
cmc
jecxz
xor
clc
push
xchg
cmp
shlb
test
mov
mov
sbb
cmp
mov
cwtl
fst
js
rcr
pop
sbb
sbb
jp
pushf
xchg
and
xchg
sub
je
in
mov
testb
jle
fsub
xchg
inc
aaa
test
stc
cltd
cmpb
pop
pop
push
repnz
movsl
push
sti
mov
jp
icebp
imul
adc
or
repnz
inc
pop
xor
dec
jbe
mov
dec
cmc
jno
push
ss
and
push
push
fwait
mov
xor
lock
pop
adcl
lock
sub
mov
jl
movsl
dec
sub
aaa
pop
jge
pop
test
std
sub
inc
jp
and
inc
push
cli
pop
mov
dec
stos
nop
jo
or
mov
jle
lods
or
xchg
es
dec
in
pop
jp
sbb
push
inc
or
fst
add
pop
divl
sbb
add
aas
mov
aam
lods
and
pop
fdivrl
popa
addr16
sbb
iret
mov
inc
dec
adc
mov
add
test
stos
stos
lret
lahf
push
xchg
inc
movsl
and
int3
jne
or
stos
scas
popf
sahf
enter
cmp
sbb
dec
cmc
dec
sbb
shr
push
dec
aas
dec
push
pop
shl
sub
inc
out
lds
outsb
scas
fistps
jno
in
xor
ds
lret
sbb
repnz
cmc
sbbb
add
pop
lock
jl
lret
rol
sbb
dec
int
movsl
mov
sbb
jbe
mov
push
mov
xchg
and
mov
orl
push
push
push
std
mov
adc
mov
sub
mov
xor
mov
jmp
push
dec
iret
push
test
scas
xchg
stos
xor
les
push
xor
cmp
mov
jae
gs
or
mov
mov
rorl
popf
into
adc
clc
in
ret
data16
push
leave
jl
outsl
imul
push
adc
sub
aaa
adc
and
xor
or
push
iret
movsl
pushl
and
add
int
fimull
out
mov
mov
jmp
push
lods
outsb
fsubs
mov
jmp
out
mov
ja
jl
cmp
push
push
fcomp
popf
or
and
imul
inc
cmc
adc
inc
sub
add
cld
stos
adc
pop
mov
cs
jg
into
jl
int3
movsb
cmpsl
and
jle
xor
sbb
pop
sahf
mov
and
or
cmc
shll
clc
and
sub
jno
test
sbb
test
sbb
inc
mov
push
dec
and
sub
cmp
push
and
cmp
js
js
xor
and
loope
pop
insl
push
pusha
mov
dec
out
andnps
ja
add
xchg
bound
mov
jnp
mulb
push
sub
je
fistps
mov
mov
insb
xor
xchg
ja
mov
aam
insb
std
ja
push
inc
add
mov
aas
sbb
movsl
push
jmp
mov
pop
aas
ljmp
popa
or
popa
push
adc
lods
in
jl
sub
addr16
cmpsl
test
leave
inc
out
fadds
popa
rcll
js
fidivrs
imul
push
adc
ds
jb
pop
jb
and
notb
shl
cltd
mov
ja
inc
mov
jb
lahf
cmpsb
adc
adc
push
adc
repnz
loopne
js
pop
cmp
pop
sub
stos
push
and
jle
rorl
in
daa
iret
jmp
cld
std
mov
sub
push
sub
pusha
add
fwait
push
enter
mov
inc
pushf
mov
adc
sbb
sub
je
mov
mov
jp
dec
adc
jb
cltd
cmp
arpl
sti
xchg
cmp
cmp
out
or
call
xchg
mov
xor
adc
gs
and
pop
dec
scas
into
sub
sbb
or
ja
mov
adc
jl
pop
call
js
push
xor
xchg
pop
jno,pt
dec
and
repz
mov
dec
mov
sbb
rcrl
gs
pop
fadds
lret
jle
xor
repz
rcrl
cs
cli
lea
negl
push
cmp
addr16
daa
jmp
lock
jae
lods
ret
pop
or
mov
ret
xor
mov
cmp
push
cmp
jle
sub
sub
sbb
cmpl
cs
scas
data16
popa
loop
mov
or
adc
push
pop
sbb
push
std
sub
jmp
mov
dec
jae
fnstenv
pop
pop
idivb
fbstp
mov
arpl
and
out
and
neg
jne
push
ds
mov
mov
add
pushf
sbb
lock
or
mov
imul
fnstsw
adc
test
mov
xchg
repnz
xor
jl
cmp
bound
imul
inc
xchg
xchg
mov
xor
cmc
in
mov
sub
lcall
mov
out
andl
dec
sub
mov
and
in
mov
pop
bound
add
test
cmp
clc
stos
inc
add
fwait
dec
int
xchg
das
movsl
ret
in
stc
or
pop
int3
xor
sub
push
fdivl
add
es
sbb
sti
mov
popa
ljmp
add
pusha
add
mov
cmp
mov
insb
xchg
test
in
sbb
inc
cwtl
mov
adc
jns
ret
mov
imul
dec
xor
inc
shlb
pop
push
push
mov
movsl
pop
movsb
mov
aad
and
jg
cmp
push
mov
adc
lahf
cmc
sbb
in
jg
pop
popf
adc
sahf
inc
xchg
jl
mov
dec
aam
jle
cld
add
cmp
push
pop
mov
push
outsb
inc
mov
sub
dec
pop
cmp
xor
clc
ror
sub
xor
pushf
mov
cmp
jae
ror
mov
pop
testb
cs
fcmovbe
imul
mov
jae
mov
into
movsl
add
lret
ja
rcrb
mov
jmp
jne
push
dec
sub
xchg
lods
sub
inc
adc
jl
fs
shll
mov
adc
mov
push
xchg
mov
popa
shll
xchg
int
lods
sbb
into
push
dec
or
popa
pop
jg
nop
movsb
push
negl
pop
fwait
dec
inc
das
inc
xchg
lock
lock
fsubs
and
xor
sbbb
arpl
sub
out
pop
mov
jmp
fyl2x
inc
adc
mov
sub
push
xor
pushf
xor
std
movsl
or
pop
adc
inc
ret
push
and
add
xchg
lods
cmp
jge
loope
repz
push
int3
cwtl
iret
sub
cwtl
jge
push
mov
scas
cwtl
rorb
fs
subb
inc
arpl
mov
pusha
cmc
test
add
insb
push
add
ljmp
or
push
mov
and
arpl
cmc
sti
and
mov
lea
icebp
xchg
data16
movsb
cmp
std
mov
jnp
jge
dec
cmp
sub
stc
aam
out
inc
stos
fucomip
cwtl
in
movsl
or
or
rcr
pop
dec
fstl
mov
jecxz
sbb
clc
scas
unpcklps
nop
fidivl
sbb
xor
fidivs
push
dec
andl
in
lods
pusha
dec
rcrl
lret
cmp
fsubrp
icebp
das
pop
inc
push
jl
mov
jle
addr16
sti
cmp
mov
outsb
cs
adc
outsb
je
inc
dec
cmp
cmp
clc
and
jle
jnp
sahf
dec
les
rol
and
hlt
aad
mov
sbb
jnp
icebp
or
xor
mov
xor
adc
adc
data16
pop
xchg
fisubrl
jne
push
repnz
push
cmp
mov
stos
push
lock
out
les
movsl
iret
and
sti
popf
mov
sub
and
iret
loop
cmp
adc
mov
jp
fstpt
mov
lods
enter
movsl
xchg
lret
mov
dec
ret
sti
mov
stos
add
out
jae
push
outsb
test
popa
cli
dec
sub
jno
test
inc
or
popa
xor
inc
add
lret
fbld
dec
sub
lods
and
push
aad
cmpl
mov
lret
pop
xor
ds
jbe
incl
roll
scas
jnp
mov
mov
sub
test
add
mov
sub
popf
mov
sbb
mov
fcomp
out
lret
aas
xlat
cmpsl
push
imul
gs
dec
jne
lock
mov
cli
xor
and
loopne
adc
jnp
add
fsubrl
push
add
mov
jns
xchg
and
cmp
inc
xchg
fwait
cmpsl
sti
push
push
add
out
mov
hlt
pop
int3
or
dec
mov
sbb
loope
shrl
int3
mov
xor
push
cmp
pushf
jmp
inc
cmp
sbb
push
push
fyl2xp1
jo
iret
fsubr
bound
call
pop
dec
add
cmpsl
cmpl
aas
cld
iret
dec
pop
pushf
push
push
jl
mov
ja
stos
cli
out
test
jg
arpl
push
inc
adc
xchg
cwtl
inc
and
hlt
xchg
pop
imul
lret
scas
inc
jg
dec
mov
int3
jo
stc
out
pop
fs
push
lods
adc
mov
leave
push
xchg
arpl
aad
adc
leave
pop
popf
mov
pusha
test
and
fwait
pop
xor
scas
sub
cmp
notl
sub
xchg
movsl
jg
sub
push
mov
dec
mov
add
and
and
out
test
push
jno
cwtl
shrb
inc
fildl
push
call
mov
aad
cltd
lock
orl
mov
xchg
push
jno
fwait
mov
xchg
sahf
push
pop
lret
push
xor
iret
test
lcall
inc
mov
jge
inc
sbb
mov
cmp
cmp
add
in
jle
scas
mov
inc
mov
ds
je
jno
xchg
mov
loope
movsb
pop
mov
imulb
push
arpl
icebp
mov
stos
jg
addr16
adc
sub
cwtl
push
push
or
lock
mov
mov
jne
outsb
mov
fisttpl
mov
push
and
jns
je
push
mov
bound
and
lahf
mov
push
mov
scas
mov
mov
cmc
jge
sbb
mov
int3
push
pusha
add
shll
inc
jns
imul
mov
sbb
adc
outsb
es
clc
cltd
scas
mov
add
in
lcall
jmp
test
mov
gs
es
inc
and
out
add
fstps
ret
in
fnstsw
fnsave
lret
into
pushf
cltd
jmp
xchg
div
and
rclb
xor
repnz
sub
push
and
push
fsts
das
add
ja
push
in
insl
adcl
ja
in
loopne
xor
or
xchg
sub
mov
xchg
icebp
push
dec
inc
movsl
jp
sub
std
stos
dec
or
pop
loopne
flds
jo
aaa
add
mov
push
repnz
xchg
and
mov
sbbb
and
cltd
jp
jns
or
dec
fcmovu
cmp
stos
jl
fidivrl
cmp
lea
sub
int3
dec
loop
stos
push
and
or
cmpsb
push
xlat
dec
addr16
add
adc
dec
jle
int
xchg
stc
lock
pop
dec
mov
push
pop
xchg
inc
sub
pop
repz
push
leave
jecxz
mov
sbb
sub
hlt
xor
outsb
in
and
rcrb
sub
add
push
pop
lds
and
add
mov
push
bound
jb
jmp
icebp
jge
jl
or
sahf
push
mov
jns
out
enter
cltd
adc
jl
imul
push
inc
outsl
sub
jge
pushf
fs
pusha
add
add
sub
or
std
insl
cltd
inc
fdivrp
lahf
adc
add
aas
jmp
movsl
popf
aad
mov
inc
adc
push
call
movsb
cld
punpckldq
sbb
push
mov
inc
jecxz
cmp
fidivrl
mov
int3
jns
pop
fwait
mov
jmp
repnz
out
xchg
sub
dec
mov
mov
sbb
jecxz
xchg
sub
out
mov
sbb
push
pop
push
adcb
or
orb
out
or
pop
mov
sbb
cmp
sbb
inc
push
outsl
jne
loop
cwtl
push
adc
mov
stc
inc
stc
mov
mov
add
jmp
jmp
pushf
sbb
adc
cmp
jmp
dec
sub
movsb
stos
lret
mov
bound
in
fidivrs
movsl
in
mov
sbb
push
push
jp
mov
ds
pushf
mov
test
fstpt
mov
mov
das
adc
push
xor
xlat
sti
inc
push
mov
rcll
dec
sbbl
sarb
out
sti
add
sbbb
or
mov
or
dec
sub
or
out
les
jbe
scas
dec
fs
and
les
test
jb
jno
xorl
cmpsl
stos
icebp
sub
pop
push
dec
and
pop
ret
test
adc
shl
sub
and
cwtl
push
ret
push
xchg
mov
adc
and
mov
xor
test
je
pop
cltd
popf
jecxz
inc
inc
mov
fs
pop
mov
jbe
inc
xchg
mov
popa
outsl
divb
movsb
in
js
pop
jecxz
test
iret
pop
xchg
ficoml
test
adc
dec
xchg
mov
mov
xchg
adc
add
insb
sbb
xor
and
les
les
in
cmc
imul
push
popa
daa
mov
sbb
push
lahf
pop
jns
xchg
dec
gs
mov
cli
shlb
fcmovnbe
dec
dec
out
test
repnz
out
add
xchg
pop
fisttpl
mov
insb
icebp
jle
sbbb
and
in
lahf
mov
mov
jg
adc
ret
adc
adc
sub
jb
psllw
shrl
sub
mov
cli
add
orl
jne
lret
fwait
sbb
sub
sub
out
es
or
movsb
jle
push
fdivs
mov
pushf
inc
ljmp
xchg
jl
sub
popf
les
or
ffree
das
inc
add
movsl
mov
sbb
jb
leave
dec
icebp
orl
fwait
push
xchg
inc
xor
imul
fcoms
cmpsb
movsl
sub
push
filds
js
or
in
leave
notl
aaa
inc
cmp
fcmove
int
cltd
jne
arpl
ror
xchg
pushf
inc
sti
stos
rorb
add
jae
aad
enter
push
clc
adc
jnp
in
jne
cmp
dec
pop
nop
xor
insl
dec
arpl
stos
jle
cmpsl
jmp
add
jp
dec
in
add
xchg
jno
pop
fucom
pop
cmp
push
fldt
test
inc
shrl
inc
out
cltd
aam
pop
insl
push
mov
push
mov
test
mov
push
loop
jecxz
pushf
and
fsubl
repnz
xchg
and
dec
imul
xor
adc
lods
lods
jb
mov
mov
lods
mov
out
pop
mov
or
mov
mov
rcr
mov
out
mov
in
sub
pop
sbb
inc
out
filds
fs
outsb
fcomip
mov
mov
push
mov
scas
pop
sub
fildl
xchg
mov
add
arpl
adc
jnp
test
push
jns
pop
cmp
push
dec
fsubp
adc
test
mov
stos
mov
fcmovne
into
push
push
insb
sbb
rcll
mov
out
pop
sbb
jp
xchg
cmp
ljmp
push
call
cmovnp
jp
int
push
test
in
inc
pop
shll
sbbb
add
mov
mov
sbb
pop
mov
or
xor
test
and
cmp
data16
aad
ret
sub
xor
outsb
js
sub
mov
mov
leave
cmp
and
stos
mov
arpl
mov
lds
fildl
mov
repz
jmp
jnp
cld
inc
shlb
inc
mov
into
shrl
jno
filds
sbb
sbb
imul
jmp
sub
push
repnz
fstps
fwait
outsb
or
push
xor
adc
je
subb
les
mov
push
mov
or
clc
in
sub
cmp
ror
cmp
push
adc
push
add
and
jne
adc
or
mov
aam
repz
xchg
push
in
sbb
sahf
inc
adc
adc
sub
and
dec
push
int3
dec
lds
lock
sbb
adc
addr16
lret
call
sbb
or
and
pop
jle
pop
add
adc
pop
jge
xchg
pop
or
leave
aaa
add
cmp
int
sub
mov
xchg
xor
jle
jb
mov
pop
inc
jecxz
arpl
imull
clc
pop
mov
lds
lahf
cmp
mov
mov
bound
jbe
popa
mov
add
push
bnd
testb
pop
sahf
test
mov
sbb
gs
jns
push
aam
mov
or
add
jmp
cmc
inc
mov
push
std
adc
arpl
aaa
addl
pop
and
cld
lret
adc
lock
or
addr16
ficomps
int3
cli
sub
mov
popf
and
notl
rcrb
lcall
int
add
sarl
sahf
loope
lds
rorb
imul
push
sbb
sub
add
ljmp
lock
mov
in
jns
mov
adc
xor
cltd
test
les
xchg
shll
jbe
les
stc
stc
xchg
or
aad
xor
adc
stos
adc
repz
adc
inc
lods
stos
es
rorl
adc
mov
das
ss
jle
cld
pop
in
std
std
mov
pushl
push
mov
ljmp
lahf
jae
mov
test
in
push
sbb
bnd
adc
xor
inc
jge
leave
test
ss
test
aas
pop
sbbl
add
lahf
xor
sub
dec
out
out
jae
ja
jge
mov
sti
aam
fiadds
popf
push
pop
out
dec
cs
cmp
xchg
sar
jg
inc
loope
or
jmp
fistps
sbb
push
pop
into
add
inc
aam
insb
sbb
pop
sbb
lods
mov
add
or
ret
pop
xor
es
fs
inc
jno
jle
mov
movsb
mov
orl
jbe
push
add
mov
mov
ret
jns
lret
dec
jns
lcall
add
stos
movsb
movsl
push
or
les
cmp
jo
lea
stos
mov
push
outsl
rclb
mull
subl
rolb
in
rcrb
mov
lahf
or
jge
shl
add
inc
out
inc
add
mov
clc
mov
cltd
popa
jl
daa
outsb
pusha
dec
pusha
loopne
fcos
nop
sti
sbb
out
out
add
add
mov
repnz
and
xchg
aam
imul
mov
push
xchg
rcll
dec
xchg
lea
lods
out
add
adc
xor
in
mov
sbb
add
decl
add
push
movsl
pop
lret
roll
or
sub
jmp
pop
sub
push
cmp
add
js
cmp
rorl
mov
mov
xchg
cwtl
and
sub
scas
pop
sbb
idivb
mov
pusha
sbb
mov
cmp
dec
out
shrb
repz
loope
or
stc
jae
jo,pt
adc
fs
pop
cmp
scas
dec
or
enter
mov
xor
fnstenv
jae
rorl
add
jbe
outsl
lcall
movsb
xchg
das
push
or
arpl
cmpsb
jg
adc
jo
fstpt
adc
out
push
test
lahf
mov
int
xchg
push
xlat
ficoms
imul
lahf
jbe
inc
push
stos
inc
sahf
les
in
adc
gs
cmp
orl
jne
push
pop
dec
repnz
add
iret
mov
rolb
sahf
adc
cmpsb
decb
mov
ja
lods
ja
sub
in
adc
cli
push
fcomip
xchg
adc
inc
loop
in
xchg
fdivrl
xchg
mov
fxch
jp
adc
sbb
xchg
add
shll
xor
add
adc
andb
dec
dec
xchg
and
stos
sub
out
push
stc
mov
sbb
arpl
push
jb
push
fistl
pop
lods
movl
mov
jge
lahf
iret
mov
mov
mov
fs
in
mov
icebp
push
imul
call
outsl
mov
outsb
mov
xor
xchg
aam
lods
clc
sahf
inc
xorl
jbe
std
mov
sti
mov
sbb
ret
mov
cmp
into
int
pop
aas
sub
sub
adc
jmp
cltd
and
pop
dec
inc
mulb
mov
jne
xor
and
orl
iret
add
xor
mov
sbb
pushf
adc
mov
or
adc
in
mov
mov
inc
lea
sub
ss
test
push
push
sub
ss
leave
filds
adc
fsubp
push
pop
cmp
dec
xor
dec
xchg
loope
mov
es
clc
in
adc
out
out
call
mov
cmp
movsl
outsb
fmull
pop
dec
orb
dec
sbb
ljmp
cmp
jns
xchg
int3
loope
inc
adcb
rorl
inc
nop
lret
popf
dec
lea
nop
cmpsb
aam
in
sbb
imul
add
out
dec
jns
dec
cmp
lret
adc
sbb
mov
fists
loope
dec
rclb
xchg
sar
cwtl
js
mov
ds
or
vpshld
add
iret
sub
xor
push
negl
xchg
out
and
inc
test
aad
fiadds
xor
insb
sahf
cli
inc
repnz
es
sbb
aam
addr16
dec
in
adc
lret
out
rol
insb
sbb
pop
jno
mov
mov
jle
xchg
cmp
cmp
and
nop
xor
add
fwait
pop
sbb
aad
add
or
pop
pushf
in
mov
sub
std
enter
out
adc
mov
pop
outsl
aam
ljmp
pop
push
dec
pusha
sub
cmp
cmp
cld
push
out
in
xor
mov
or
mov
sbb
cmp
add
cwtl
and
xor
jae
xor
scas
jge
dec
adc
jg
cmp
sub
lods
dec
dec
enter
jns
test
mov
pop
push
arpl
idivb
andb
fisttpl
and
adc
sub
mov
jle
shlb
repnz
fs
sub
adc
mov
gs
lcall
sbb
popf
xchg
movsl
shr
xchg
cmp
fcomi
xchg
jl
std
xor
das
mov
lods
movsl
sbb
jp
ja
ficompl
jae
cmp
aad
jg
xor
decb
or
and
sarl
rcrl
pushf
sub
hlt
movsb
pop
pop
cmpsb
or
push
cmp
rol
cli
cmpsl
cmpsb
call
push
imul
testb
into
lcall
xor
inc
pop
push
mov
jecxz
or
push
test
pushw
push
adc
mov
jl
orl
xchg
jp
jecxz
xorl
nop
mov
add
xchg
and
pop
adc
jl
bound
jns
and
sbb
mov
bound
ljmp
test
arpl
je
mov
aas
stos
cmpsb
lods
push
imul
adcb
xor
cmpsl
push
sahf
push
iret
icebp
jo
insb
push
insl
sub
lds
loopne
or
mov
xlat
push
jmp
mov
out
call
xchg
scas
mov
daa
adc
sub
cmpsb
sbb
lods
fwait
cmp
or
push
push
cld
sub
push
xor
cmp
dec
sti
and
cmp
fdivp
js
iret
jle
cmp
mov
out
inc
ss
icebp
pushf
push
nop
std
xchg
pop
mov
fstps
and
test
lret
cs
pusha
out
pop
push
or
jno
lods
dec
jo
call
mov
nop
mov
push
xchg
icebp
fcmovb
sub
mov
sub
aad
test
cmc
xor
sub
in
bound
xor
and
data16
mov
shll
outsb
int3
dec
lds
test
dec
or
dec
dec
movsb
jmp
adc
mov
mov
gs
push
sti
out
dec
mov
sub
shr
inc
push
push
js
or
je
lock
stos
into
rorb
jecxz
push
loope
push
shlb
or
mov
pop
shlb
arpl
dec
push
xchg
outsl
insl
add
shrl
cmc
xor
mov
mov
push
mov
out
and
mov
movsl
lahf
jl
jle
scas
jae
xchg
pop
addr16
fdivs
and
sub
fsts
test
add
sbb
repz
inc
and
xchg
fmul
lcall
aas
adc
pop
xchg
add
lock
pusha
pusha
xchg
jmp
dec
mov
xor
xor
cwtl
test
cmp
xchg
inc
das
ss
arpl
lcall
das
mov
xchg
movsb
arpl
sti
mov
mov
roll
ljmp
or
mov
popa
aaa
ret
push
adc
push
aad
mov
aad
sub
inc
jae
out
dec
adcl
daa
xrelease
loop
mov
aam
dec
cwtl
inc
data16
mov
call
ret
mov
mov
repnz
mov
test
add
loopne
into
sbb
inc
adc
out
jb
inc
sub
dec
mov
repz
es
mov
inc
mov
fdivrs
jo
mov
adc
nop
mov
out
sub
bound
jmp
imul
add
andb
inc
fldcw
sbb
mov
fwait
pushf
aas
dec
pusha
jbe
jb
dec
mov
hlt
mov
cmp
test
push
and
xchg
or
xchg
stos
int3
pusha
ret
pop
lods
lods
xchg
cli
add
adc
adc
lahf
fbld
mov
inc
xor
cwtl
fists
jle
dec
fildl
ss
or
mov
and
mov
shrb
mov
jle
movsb
xchg
frstor
cmp
test
movsb
push
xchg
or
sbb
outsl
rol
int
add
dec
pusha
cmp
mov
leave
push
imul
leave
pop
out
cmpsb
inc
int3
mov
loopne
adc
repz
scas
pop
xchg
adc
adc
mov
je
in
adc
sub
cmp
into
js
push
mov
inc
shll
jae,pn
std
mov
sub
test
jl
push
push
xchg
jp
jg
push
sbb
mov
or
das
mov
mov
in
fs
mov
push
add
out
lret
loope
push
insb
fcmovu
adc
push
jl
dec
sub
sub
ja
shll
scas
and
sub
lea
or
pop
mov
aaa
ss
cmp
in
test
dec
out
add
pop
pop
rolb
xchg
out
sti
sbb
and
sbbl
mov
stos
cld
cmp
inc
dec
clc
data16
push
mov
or
mov
add
xor
sbb
lret
jle
xchg
cmp
lds
adc
mov
mov
std
ds
clc
loop
out
test
lret
cltd
push
add
push
xlat
push
mov
add
mov
cmp
ds
jl
and
pusha
push
fstps
sahf
push
mov
dec
repnz
or
pusha
and
inc
mov
mov
shr
call
lret
jle
dec
lea
leave
rcr
hlt
cmp
mov
cltd
int
call
mov
int3
movsb
xchg
or
add
adc
out
cmpsb
pushf
insb
idivb
dec
out
fildl
movsl
fdivrs
mov
xor
push
loopne
and
inc
adc
test
inc
into
sahf
das
pop
inc
add
outsl
jmp
or
adc
aaa
cmp
jmp
scas
in
mov
jb
std
mov
lcall
pusha
mov
aaa
sbb
jg
sarb
sub
add
ret
xor
add
das
ja
fists
out
rol
fdivl
lods
dec
jmp
das
xchg
push
inc
mov
loopne
or
ja
cs
or
mov
and
inc
mov
jne
sahf
jnp
rcrb
out
mov
ret
popf
leave
mov
sub
fsubs
xchg
xchg
cwtl
jp
insb
movsl
lds
clc
mov
loope
adc
enter
xor
sbbl
aaa
jnp
mov
stos
mov
shrl
and
dec
pop
pop
ljmp
pusha
gs
sti
xchg
mov
out
dec
ss
push
testl
repnz
push
jns
dec
xor
imul
stos
xchg
fildl
inc
or
call
shll
repnz
in
mov
adc
gs
out
jg
add
push
jbe
divb
dec
xor
and
scas
std
addr16
jb
adc
adc
mov
and
in
imul
fisubrs
pushf
cli
mov
push
inc
mov
sub
pop
cmpsl
dec
int
mov
test
fidivrl
or
lret
imul
in
sub
call
int
out
cmp
dec
daa
jo
inc
inc
cmp
imul
mov
stos
mov
pop
das
fists
push
sub
add
sub
or
add
fdivrs
add
ss
mov
insl
mov
rclb
gs
xchg
cmc
sarl
lret
notl
xor
inc
dec
test
add
stos
subl
iret
xor
sub
mov
test
jp
adc
jns
stc
add
insb
ror
mov
push
ret
fsubrl
rcl
push
sub
xchg
icebp
mov
sbb
push
pusha
jmp
icebp
popf
addl
add
mov
jbe
add
pusha
lahf
push
xor
out
and
push
adc
push
lods
lock
div
cmp
mov
fs
ds
xlat
pushf
cmp
or
push
xchg
subb
lret
or
pop
out
dec
icebp
jge
lds
out
data16
inc
cmp
add
xor
mov
test
xchg
and
dec
inc
mov
sub
push
fdivrl
lret
cmp
jne
aam
imul
fimull
adc
imul
xor
xor
mov
ja
mov
fistpl
aad
dec
dec
je
enter
pusha
test
lahf
cmp
outsb
inc
lods
jbe
inc
popa
subl
mov
out
loope
test
enter
or
vdivps
pop
enter
inc
call
mov
and
lret
int
iret
jno
leave
lods
jmp
jecxz
or
add
inc
imul
pop
sbb
and
add
fsubl
jno
arpl
mov
cwtl
dec
mov
pop
add
sub
ljmp
pop
shrb
or
int
in
popa
mov
iret
mov
insb
ljmp
sub
push
pop
popw
divl
call
inc
pop
shlb
mov
mov
into
scas
adc
lahf
sbb
fdivs
and
fistpll
dec
nop
rcrb
cmp
lods
adc
rclb
rcrl
lods
xchg
jnp
inc
jmp
les
inc
push
fwait
mov
jae
punpcklwd
cmp
lret
fstl
gs
jnp
addb
push
mov
mov
xlat
add
lods
mov
int3
push
pop
arpl
mov
outsb
das
pop
jno
mov
xor
lods
pop
es
xchg
lcall
in
into
aam
out
subb
cmpsl
pop
sbb
pop
sbb
add
mov
icebp
sar
test
dec
loopne
fcomi
cmp
xchg
jmp
pop
xchg
aas
xchg
fdivrl
rclb
int3
movsl
dec
add
jg
xor
pushf
inc
pop
roll
into
jmp
pop
xchg
shlb
lods
sbb
inc
adcb
notl
mov
mov
mov
dec
pop
dec
sarl
andb
movl
ljmp
inc
fsts
iret
pop
adc
lret
pusha
cmp
lods
aam
fbld
xchg
fcoms
lahf
jp
xchg
mov
jl
and
rorl
dec
push
fsubrs
push
cmp
iret
sub
nop
xor
in
jbe
test
cmpsb
cmp
pop
push
xor
sbb
sbb
adc
ss
pop
xor
or
and
clc
ljmp
lods
fmulp
xchg
mov
and
jo
sbb
xchg
in
cli
mov
pop
cmp
movsb
pushf
out
ljmp
dec
dec
fcoms
mov
xchg
test
jne
add
xchg
ss
mov
pop
pop
inc
xor
or
xor
es
jne
into
cmp
pop
push
out
mov
nop
insl
cmpl
pop
sti
loope
pushf
outsl
daa
orb
adc
xor
addr16
movsl
push
out
int3
mov
or
adc
iret
in
scas
mov
push
adc
xchg
and
jae
mov
ret
xchg
pusha
rolb
push
mov
enter
int3
ret
push
out
mov
into
inc
stos
loope
pop
adc
pop
iret
xchg
adc
mov
scas
dec
sbb
scas
test
mov
aaa
add
icebp
jbe
mov
xor
push
mov
pop
dec
lahf
add
das
ja
mov
sti
jne
dec
xchg
push
fcmovnu
dec
fwait
test
push
into
test
adc
movsl
cltd
inc
lds
xchg
mov
cmp
adc
push
lods
roll
xor
inc
mov
ror
add
push
xchg
mov
jb
jmp
das
es
jne
inc
icebp
and
mov
mov
xchg
add
push
push
fldt
das
jle
sti
test
mov
mov
insl
orb
push
pop
cwtl
mov
loop
pop
dec
out
mov
inc
mov
stos
scas
roll
leave
mov
sub
xor
inc
mov
out
arpl
mov
push
shl
jns
inc
push
mov
dec
jge
xchg
loop
ret
in
mov
shll
lea
jnp
push
adc
scas
fs
xor
fistps
mov
cmp
orb
aad
pop
mov
or
sub
xor
or
cmpsl
jo
cmp
mov
lret
mov
xor
jmp
scas
push
ficompl
movsb
add
rclb
test
fsubp
out
bound
inc
adc
inc
test
ret
clc
mov
mov
xchg
xchg
cmp
scas
cmpsl
inc
xchg
pop
mov
dec
out
fwait
push
push
hlt
mov
pop
xchg
jbe
push
xor
cmp
adc
divl
or
lret
mov
or
call
mov
mulb
inc
inc
mov
les
jg
insb
push
loopne
push
dec
xchg
sbb
or
mov
jmp
in
aaa
lock
mov
imul
lock
mov
mul
xchg
sbbl
aaa
mov
cmc
mov
push
cltd
out
cmpsb
sarb
mov
rcrb
das
iret
mov
cmp
jmp
pop
lock
pop
and
add
sbb
es
in
outsb
loopne
mov
int3
stos
movsl
dec
pop
pop
xchg
mov
adc
sbb
mov
push
popf
cmpb
ljmp
dec
adc
in
sbb
sub
cmp
mov
dec
pop
aam
jo
negl
xchg
shl
je
xor
int3
fidivrs
int3
shl
shlb
mov
clc
fistpl
jl
leave
mov
push
int
mov
fcomi
mov
sub
pop
jmp
mov
inc
push
sti
sbb
jnp
dec
notb
jnp
icebp
fxch
pop
das
fisttpll
leave
fstpt
repnz
xlat
repz
and
lret
mov
iret
xor
andb
fwait
leave
mov
insb
jns
sbbl
enter
mov
push
add
pushl
sbb
xor
xor
aaa
addl
scas
dec
stc
sar
mov
mov
jnp
movsl
insl
shrl
adc
add
out
push
pop
sub
cmp
push
lea
sbb
jno
decl
nop
push
push
ja
test
cmpsb
sti
fwait
leave
push
mov
das
sbb
in
dec
adc
je
xchg
dec
mov
and
inc
add
test
outsl
mov
add
int
dec
stos
push
xchg
ficompl
xchg
fmul
push
add
xchg
xor
clc
jno
int3
mov
mov
es
mov
pop
pop
sub
test
push
xchg
add
cmp
mov
sbb
xor
mov
mov
sub
fstl
movntps
loope
jl
cwtl
xchg
push
add
dec
xor
stos
pop
xchg
inc
ret
fmull
popa
push
js
adc
int
and
scas
push
fisttpll
mov
pop
push
and
mov
mov
out
lret
stc
enter
dec
add
adcl
les
fwait
ja
in
pop
out
or
push
sub
lret
push
mov
outsl
push
fcomps
sub
leave
fcomps
jae
mov
imul
inc
enter
rcr
adcl
stos
mov
fnsave
fsubl
push
mov
mov
cli
sub
xchg
testl
xlat
inc
rorl
push
pop
cmpsl
cwtl
add
xor
add
out
flds
stc
pop
add
sbb
scas
std
movsl
popw
rcrl
jno
cld
fistpl
sbb
das
push
imul
and
call
shl
test
inc
es
pop
add
push
shll
subl
sub
lret
sbb
addr16
mov
addr16
fwait
ss
xor
subl
inc
xchg
insb
popa
or
sbb
adc
iret
ja
xor
mov
cs
jae
dec
pop
ss
out
sub
call
xor
push
jb
jecxz
pop
mov
push
in
stos
fldenv
xchg
iret
adc
xor
lahf
mov
adc
and
dec
jecxz
sub
sub
pop
imul
test
repz
lds
jge
jbe
sbb
into
push
push
and
lret
or
mov
fistl
dec
xchg
jmp
xor
jnp
rorl
mov
fimull
lret
arpl
or
push
sub
push
pop
int
push
out
imul
sbb
sbb
mov
dec
push
fildll
sbb
daa
int3
push
call
xchg
add
fcoms
cmpl
lods
enter
inc
pushf
jnp
adc
fadds
push
in
cli
hlt
stos
mov
mov
dec
push
adc
adc
in
push
adcb
jmp
or
mov
inc
pusha
divb
ljmp
xchg
mov
sbb
jmp
pop
addr16
or
addr16
cmovne
fwait
vpsllq
mov
xchg
daa
inc
push
cmp
lret
lods
push
xchg
or
je
sbb
mov
or
pop
mov
add
test
jl
jne
or
mov
mov
movsl
addb
inc
sub
sbb
jg
jge
or
pop
jb
fldl
push
adc
push
mov
inc
inc
xlat
outsl
pop
dec
outsl
sbbl
arpl
jns
sub
jecxz
and
xor
pop
dec
mov
test
imul
and
ss
fwait
mov
aad
push
xchg
flds
or
scas
and
jmp
jg
sub
xor
sub
lods
out
aad
cmpsl
scas
xor
inc
lock
in
xchg
in
roll
sti
cmpl
aas
js
sub
lahf
arpl
movsb
mov
mov
shlb
aam
stc
and
inc
ja
mov
dec
mov
push
out
movsl
je
addr16
in
jne
out
add
inc
pushf
adc
dec
out
rcrl
movsl
pop
xchg
xor
nop
or
xchg
int3
loop
cmp
pop
or
pop
test
jle
dec
lds
ljmp
cmp
lcall
sbb
ja
pop
out
in
adc
subl
js
dec
jae
add
in
pop
into
fldenv
add
jg
int3
xor
int
sub
mov
cwtl
sub
fstpl
pushf
pop
mov
mov
inc
pop
in
xchg
mov
jp
push
icebp
and
dec
stos
repnz
lock
scas
into
scas
sbb
fsts
push
fcmove
in
mov
std
std
ret
sbb
sub
push
cmpsl
mov
or
cmpsl
push
inc
jmp
dec
test
sub
add
in
ss
or
and
xor
jb
stos
sarl
fisubrl
rcl
adcb
push
dec
adc
cmc
in
std
xchg
dec
jp
pusha
int
xor
lret
inc
mov
jnp
push
xor
fimull
adc
add
xchg
and
fsubrs
in
pop
pop
dec
pop
inc
test
adc
hlt
adc
nop
out
adc
dec
mov
int3
sub
mov
fmull
mov
rorl
mov
loop
mov
jbe
dec
das
push
cmp
xor
mov
or
pop
push
sub
mov
xchg
push
movl
pushf
dec
stc
adc
out
sbb
in
jns
mov
enter
imul
out
aaa
inc
xchg
fisubl
inc
jl
cmp
js
push
mov
mov
jl
cmc
inc
les
dec
ret
out
sub
push
dec
lds
incb
fcomps
sbb
mov
adc
sti
adc
or
jns
cmp
cmc
xchg
pop
mov
ds
pop
popa
ss
pop
ja
jge
mov
into
mov
sahf
scas
insb
xchg
inc
arpl
dec
mov
in
push
lods
push
xchg
or
mov
lods
push
bound
pop
push
out
dec
jle
iret
fistl
and
jmp
sub
and
insb
stos
mov
in
mov
cmp
shlb
fcmove
test
mov
mov
cmp
aas
xchg
xlat
bound
inc
xor
std
xor
push
addr16
daa
mov
insl
daa
mov
inc
je
sti
push
int
sub
in
insl
leave
aas
loop
or
aaa
push
mov
hlt
xor
push
hlt
push
adc
hlt
mov
loop
insb
xor
jmp
xor
lds
rolb
dec
test
dec
ja
xor
mov
dec
adc
mov
cwtl
jne
arpl
jo
mov
lods
push
inc
test
mov
nop
xchg
fidivrl
shlb
rcr
xchg
out
xchg
in
hlt
ds
sbb
inc
lahf
xchg
xlat
mov
jecxz
jg
sbb
or
imul
sbb
in
mov
sahf
imul
push
sbb
outsl
pushf
call
sub
inc
icebp
or
sbbl
fmull
enter
jmp
pop
add
cmp
aas
in
cmp
mov
sub
lret
sti
cmpsb
add
fidivl
imul
pop
mov
mov
push
pop
cmp
xadd
add
or
inc
xor
mov
adc
jmp
mov
movsl
outsb
test
pop
ljmp
xchg
ja
sub
jmp
scas
pop
lahf
lock
add
fnsave
stos
pop
dec
push
xchg
hlt
fs
into
fsubl
fstl
cmp
xchg
or
jmp
push
cmp
sti
jmp
or
popa
addr16
les
dec
lret
lret
sub
jp
xchg
sbb
lret
xchg
aad
mov
xchg
push
cld
sarb
testb
stc
fstpl
inc
pusha
in
scas
fucom
push
inc
fistpl
movsl
outsb
nop
adc
jmp
xchg
pop
adc
jne
mov
inc
hlt
mov
arpl
pop
aam
xor
stc
cmp
or
dec
hlt
mov
orb
pop
sub
nop
pop
mov
lods
lods
btr
and
xor
repnz
lock
adc
in
out
pop
push
in
push
popf
repz
push
lret
repnz
cmp
pusha
dec
repz
jle
cmpsb
aad
xor
fs
outsl
sbb
mov
dec
sbb
jecxz
dec
call
lods
jmp
movsb
in
mov
and
pushf
insl
pop
sub
dec
xor
dec
or
sub
xchg
cmp
adc
scas
mov
mov
push
and
aas
call
inc
dec
cmc
push
fs
out
cmpsl
movsb
fbstp
popa
or
mov
std
mov
icebp
jns
je
lea
std
std
jbe
hlt
lahf
in
jmp
jbe
dec
add
xor
push
mov
add
sbb
push
jb
adc
flds
jp
out
adc
outsb
xor
or
sbb
cs
mov
xor
sub
lock
mov
fs
sbb
scas
jne
divb
dec
sub
mov
repnz
inc
cmp
test
pop
mov
leave
add
ja
rcr
das
push
daa
mov
mov
xor
test
addr16
push
push
dec
sbb
cmpsb
cmp
shrl
dec
out
std
jge
fisubrs
aam
lods
pop
pushl
js
or
and
addr16
mov
insl
out
inc
orl
ja
pop
dec
sbb
lods
fistps
cmp
sub
int3
daa
lret
push
dec
pop
jbe
or
cmovge
jecxz
push
leave
jns
lret
push
pop
jns
sar
outsb
out
lods
dec
mov
out
es
and
hlt
outsl
cmpsb
cmpsl
push
sbb
test
mov
cmp
dec
jnp
xchg
jp
sub
outsb
cmp
ljmp
pop
pop
xlat
mov
into
stos
dec
inc
out
push
pop
mov
loop
shl
iret
xor
daa
jno
outsl
dec
mov
and
sti
aas
and
dec
je
cs
and
fildll
add
cltd
jl
clc
fnstenv
repnz
add
scas
rolb
sub
mul
lahf
xchg
mov
lods
sbb
sbb
sub
xchg
jnp
loopne
std
scas
loop
in
add
mov
cltd
int3
dec
xchg
jb
int
scas
fwait
inc
jge
pop
movsl
insb
cmpl
push
lahf
push
js
pop
out
add
into
imul
sbb
aam
fidivrs
out
jbe
gs
adc
mov
or
mov
dec
ret
push
mov
push
mov
adc
addb
mov
testl
out
pop
xchg
in
xor
gs
ficoms
cld
rclb
jns
into
sub
inc
mov
sub
cld
add
pop
and
inc
sub
sbb
aas
imul
sbb
push
pop
adc
int
pushf
lock
lods
jnp
xlat
dec
xchg
pop
cmpsl
das
aas
push
cmpsb
push
rorl
xor
rcll
rorl
and
jecxz
sti
outsb
in
daa
inc
pop
out
outsb
adc
je
jp
jmp
lds
daa
outsl
mov
add
jbe
cwtl
cmp
adc
mov
fcmove
and
stos
pop
arpl
dec
push
rcr
mov
xor
mov
jno
repnz
mov
call
mov
inc
sub
sub
sbb
shl
aam
ret
add
xlat
push
adc
cwtl
out
idivb
icebp
mov
mov
enter
je
push
xor
pusha
cmp
cs
mov
movsb
xchg
push
sti
dec
jmp
test
sbb
jb
dec
std
cmpsl
and
cmpsb
sbb
mov
insl
mov
test
dec
lock
fsubrs
mov
push
pop
mov
and
and
adc
cmpsb
and
aas
add
dec
popa
add
das
popa
push
enter
sbb
mov
add
mov
movsl
push
sbb
push
xor
mov
jae
pop
subl
pop
push
xchg
sub
aad
sti
addb
adc
mov
push
pop
xchg
out
push
cmpsb
subps
je
xchg
stc
dec
push
fcmovnbe
sbb
push
ret
imul
cs
scas
sub
mov
pop
loopne
xchg
sub
mov
push
push
callw
lcall
out
mov
ljmp
jbe
or
clc
test
mov
jbe
mov
dec
dec
shrb
popf
jl
inc
pop
mov
pop
add
mov
cmp
int
jg
ret
fstpt
test
icebp
in
iret
cmp
cwtl
addr16
inc
or
mov
sub
xor
loop
or
xchg
fcmovnbe
test
dec
adc
roll
pop
cmc
cld
and
fiaddl
xchg
push
dec
cmp
pop
lods
sub
dec
out
js
ljmp
jnp
jl
out
test
xor
jbe
fisubs
mov
mov
gs
das
sbb
sbb
scas
cli
in
out
das
fimull
repnz
fistpll
xor
lods
rolb
pushf
nop
adc
ljmp
or
xchg
stc
jmp
xorl
leave
mov
push
pop
iret
cmp
loopne
sbb
xchg
jnp
sahf
inc
mov
push
sti
push
push
fstps
cmpsl
vmread
pop
xchg
ficoml
pop
or
xorl
sub
pop
jle
xchg
lods
icebp
sbb
or
stos
pop
xor
mov
push
pop
icebp
mov
push
dec
cmpsb
sub
imull
fwait
sub
hlt
pop
or
jmp
into
jo
prefetch
adc
or
xor
and
movsl
xor
push
lcall
mov
dec
popf
fwait
dec
repnz
jmp
outsl
cmp
and
ret
lret
jge
sub
jg
push
shrb
out
scas
lock
add
inc
or
insb
cmpsl
inc
clc
out
mov
xchg
pop
stos
pop
dec
jmp
jp
pop
int
movsl
fidivl
jo
lds
movsl
shrb
adc
loop
das
mov
decl
stc
push
test
push
mov
lds
adc
je
pushf
or
cli
fs
icebp
sti
pop
adc
add
dec
add
mov
insb
rcrl
cmpsb
cltd
icebp
mov
jle
mov
mov
mov
jno
dec
out
lds
arpl
sbb
pusha
decl
les
and
scas
xor
popa
repnz
imul
addl
out
cmpsb
andb
adc
add
addr16
shl
out
lcall
clc
stos
mov
jbe
repz
in
fadd
jne
cmpsl
sbb
ret
inc
xchg
sbb
jbe
xchg
les
xchg
outsb
jno
stc
frstor
or
call
mov
das
add
mov
or
mov
popa
sti
dec
ljmp
jb
push
lds
sbb
into
into
xor
mov
xchg
in
and
adc
mov
arpl
pop
or
inc
rorb
jmp
push
mov
outsb
enter
stc
cmp
adc
fstl
sbb
mov
cli
loope
mov
add
arpl
leave
cltd
jmp
inc
mov
sbb
pop
cltd
inc
mov
sarl
sbb
mov
sbb
arpl
icebp
cmp
jns
addr16
and
out
jl
sbb
dec
sbb
and
add
adcl
cmp
mov
mov
mov
stos
fsubr
repz
push
adc
mov
sub
mov
pop
lods
ret
mov
sub
cmpsb
xor
mov
ret
popw
movsb
cmp
imul
xchg
mov
fimuls
sub
loope
sub
cmp
sub
push
adc
shll
and
repz
adc
xor
out
cmp
stc
in
ficoml
mov
pop
inc
scas
mov
pop
pop
push
fwait
mul
push
das
push
adc
xchg
or
push
add
outsb
movsb
rorl
iret
push
mov
push
cs
fs
dec
sub
ret
fldl
or
jle
les
pop
mov
sub
sub
bound
test
sub
mov
add
mov
xor
or
xor
nop
out
mov
mov
add
jle
dec
out
lret
subl
filds
add
or
cld
xchg
mov
jg
rcrb
lods
leave
cmp
jne
xor
xchg
mov
jp
pop
jb
loop
dec
rol
test
and
xchg
insb
jp
movsb
fcmovnb
xlat
and
add
aam
test
paddw
add
shl
nop
in
aad
aad
div
fistpll
dec
gs
repnz
adcl
jl
idivb
outsb
lods
inc
out
rclb
and
test
mov
or
push
xchg
test
movsl
imul
call
pop
repnz
pop
mov
les
lds
mov
or
addl
xrelease
loope
divb
xor
or
int
fs
test
jno
aas
out
mov
jnp
nop
stos
mov
add
shl
test
sbb
dec
xor
test
std
push
pop
and
sti
push
ret
jge
jb
daa
xchg
loope
mov
mov
dec
test
scas
ret
pause
xor
rdmsr
push
inc
les
xchg
pop
pop
jo
mov
icebp
mov
popf
in
mov
dec
rcll
out
push
mov
mov
lcall
mov
iret
dec
cmc
fisttpl
pop
fdiv
xchg
mov
jecxz
xchg
cmpb
repz
push
aas
lahf
dec
sbb
jnp
in
frstor
inc
push
sbb
sub
orb
lahf
mov
mov
jge
mov
fsts
cmpsb
icebp
pop
rorb
add
fsubrl
inc
js
loop
sbb
dec
jg,pn
cli
sub
movsl
inc
lahf
inc
fisubrs
or
lods
shll
lcall
jmp
std
loopne
ljmp
mov
or
jmp
jmp
push
ljmp
pop
xor
das
sub
mov
xor
int3
mov
fistpl
cmp
imul
and
repz
jne
add
hlt
inc
inc
clc
lret
in
rcrb
mov
inc
aaa
inc
in
int3
rorb
or
outsb
pop
cmp
jecxz
lret
sub
scas
xlat
lea
clc
xchg
subb
loop
notl
cmp
adc
es
sbb
cwtl
stos
cmp
lock
dec
jge
cmp
repz
repz
lcall
adc
fidivrl
lret
sarb
mov
les
fists
lcall
insl
mov
pop
xchg
mov
scas
sub
lahf
pop
inc
pop
push
sbb
cmp
lret
and
mov
in
adc
aam
icebp
mov
xchg
movl
dec
inc
in
xchg
cmpsl
cmp
mov
jae
xchg
fs
pop
in
sbb
jecxz
stos
addr16
jo
gs
and
lods
mov
jmp
bound
std
adc
mov
sti
dec
dec
shlb
and
insb
fcomps
mov
out
jbe
mov
and
sub
push
jo
xor
jbe
sub
adc
mov
mov
xchg
push
cmp
fstpl
in
sub
mov
pop
push
jo
add
inc
es
pop
dec
push
push
jne
cltd
dec
mov
mov
call
xchg
orb
dec
das
push
testb
outsb
jo
sti
lea
in
dec
xchg
stos
mul
rolb
pop
test
mov
in
fdivl
mov
imul
stc
popf
push
andb
lea
imul
add
loopne
ljmp
clc
pop
pop
stos
les
mov
in
pop
iret
imul
adc
nop
in
mov
push
or
mov
adc
sub
in
icebp
sub
and
test
mov
mov
ret
cmp
adc
cs
or
lahf
jo
mov
sub
cmp
or
loop
and
das
jno
popf
jmp
das
cwtl
aam
sbb
add
je
jg
fdivrl
add
loope
push
movsl
xchg
faddl
mov
cmp
loope
cld
inc
pop
dec
mov
xor
mov
sub
data16
jo
xchg
mov
xchg
push
push
addr16
in
es
enter
test
sub
push
dec
cmp
push
loope
jl
sub
sbb
cmp
shrl
push
inc
and
lret
add
les
in
aaa
or
mov
cltd
sbb
pop
or
push
inc
or
inc
and
pop
shlb
sti
xchg
mov
fistpll
call
add
outsb
iret
xchg
pushf
push
and
rcrl
daa
inc
fimull
lods
leave
inc
pop
lds
push
mov
xchg
mov
pop
pop
mov
fiadds
mov
mov
jp
xchg
pop
pop
cld
pop
shl
cld
fldcw
fwait
add
stc
ss
and
mov
sbb
in
push
arpl
jne
add
es
dec
into
sahf
adc
pop
in
mov
jge
xchg
xchg
int
dec
xlat
cmp
mov
and
cmp
pop
repz
fistps
push
jno
sub
cld
loopne
les
pop
scas
xchg
imul
push
mov
fcoml
outsb
fdivp
sub
icebp
xchg
mov
and
sahf
lahf
shrl
int3
mov
xchg
dec
xor
and
in
out
rcrl
cld
popa
fstps
lds
xchg
jle
mov
lea
sbb
push
push
or
stos
mov
add
je
ja
leave
cmp
inc
int3
mov
xlat
fisttpll
or
mov
adc
xchg
test
scas
fbstp
aaa
push
das
shrb
out
int
lcall
aam
bound
jge
adc
insb
scas
out
subl
add
dec
repz
mov
int
test
mov
daa
jmp
cs
cmp
mov
arpl
sbb
out
push
pop
push
fwait
cs
jecxz
lds
dec
cmpl
or
mov
mov
and
les
pusha
adc
cmc
fwait
pop
dec
or
pop
jg
leave
enter
shrl
jnp
jb
dec
xchg
add
das
daa
sub
xor
arpl
ret
loop
dec
jle
and
not
push
cmp
nop
hlt
sub
dec
les
sub
imul
hlt
mov
in
test
popf
daa
mov
testl
mov
rcll
mov
jne
push
xlat
push
cltd
nop
cmp
idivl
pop
sbb
out
cmpsb
sbb
adc
sar
movsl
aam
adc
add
aam
addl
jge
loopne
cli
mov
clc
fimull
xchg
sub
xlat
aam
test
jp
out
fisubs
movsb
idivl
and
shlb
inc
lock
icebp
test
pop
stos
pop
and
or
cmpsb
pushf
out
jbe
mov
clc
clc
aas
push
shr
inc
in
push
test
lret
jbe
jmp
popa
sub
bound
rcll
jb
mov
lods
mov
jne
repz
jo
testl
jmp
bound
mov
hlt
pop
pop
movsl
cmp
mov
xor
jl
fcoml
mov
addr16
popa
lret
rcrb
aaa
cmpsb
pop
shl
mov
lcall
call
or
mov
mov
mov
or
sub
orb
out
mov
fstl
filds
lock
add
fmuls
out
pusha
push
insb
outsb
popl
icebp
es
ret
lahf
in
mov
das
test
les
clc
push
and
dec
cmc
mov
adc
push
pop
pop
mov
arpl
and
cli
insb
stos
and
jg
pusha
daa
repz
sti
movsb
in
stos
decb
lcall
xchg
sub
fldl2t
shll
dec
xorl
xchg
cmp
push
inc
xchg
sbb
mov
add
sbb
stos
mov
repz
cmp
or
dec
jmp
mov
clc
scas
push
push
jb
mov
and
inc
inc
cltd
js
int
aad
loopne
fwait
out
adc
rol
pop
out
mov
adc
movb
shrb
sub
mov
push
sbb
ja
inc
and
adc
sbb
int3
xchg
ret
stos
xchg
test
rorl
and
xor
inc
out
cmc
cwtl
jle
mov
gs
ret
aam
call
jae
push
cltd
mov
cmp
sbb
inc
repz
mov
movsb
or
cmp
cmp
inc
cld
add
pop
movsl
cs
jmp
sbb
or
jp
mov
push
jecxz
int3
jnp
lods
ret
mov
insl
push
popa
cmp
mov
mov
adc
mov
mov
or
adc
xchg
sbb
hlt
leave
fldl
and
jp
dec
jbe
lds
inc
dec
mov
testb
xor
cmp
aaa
mov
jl
mov
in
mov
ficoml
cwtl
jp
xor
fs
aam
insb
in
fnsave
fidivs
and
mov
cmp
ffree
mov
in
cli
mov
imul
nop
xchg
xor
nop
icebp
jp
rcll
incb
push
out
adc
mov
loopne
push
cmp
js
pop
mov
inc
mov
xor
mov
sbb
xor
dec
test
loopne
imulb
loopne
stos
iret
sub
mov
sub
into
bound
mov
xchg
fs
subl
aad
mov
clc
fisubs
popf
adc
ljmp
mov
inc
cltd
sarb
xor
pop
push
dec
nop
testl
idivb
adc
xchg
daa
pop
enter
fcoml
or
les
xor
stos
cmp
test
pop
loopne
push
inc
push
cmpsl
mov
inc
jae
fimuls
sti
fs
xlat
jne
mov
into
add
dec
daa
sbb
xor
jne
movsl
fldenv
pop
cmp
adc
dec
pop
test
fstpt
xchg
stos
or
rcr
icebp
andb
pop
sbb
movsl
or
loop
or
stos
ficoml
in
enter
aad
mov
dec
aaa
sub
add
fcompl
testl
mov
in
adc
cmp
pop
fstps
cmp
xor
lret
xor
push
daa
test
fucomi
cmp
cmp
pop
adc
jmp
bnd
cld
or
movsl
fcoml
imul
dec
pop
fyl2xp1
test
dec
fwait
mov
stos
aaa
sub
loopne
out
cvtdq2ps
adc
daa
or
lahf
lahf
arpl
adc
std
mov
icebp
cmpsb
jle
mov
push
sahf
enter
movsl
testl
and
mov
das
dec
negl
leave
ljmp
xchg
je
iret
cmc
aad
leave
cmp
pop
lret
adc
pop
or
imul
movsl
sarl
pop
mov
or
cli
dec
or
push
mov
add
daa
adc
into
or
data16
out
fwait
adc
inc
sbb
cmc
xor
imull
and
ljmp
insl
stos
adc
mov
sbb
cmpsb
cmc
mov
sbb
push
sub
es
sub
mov
cmc
xor
imul
push
fimull
sub
xor
pop
mov
mov
dec
adc
push
xchg
and
mov
mov
xor
lock
lea
rcrl
adc
mov
ss
mov
cwtl
test
mov
adc
lock
push
cs
mov
ret
dec
jne
jne
sbb
stc
xchg
sub
dec
lds
stos
bnd
jg
pop
sub
push
sbb
or
mov
jl
scas
jmp
cmp
into
fs
or
adc
roll
cmp
or
frstor
stc
int3
inc
sbb
int3
mov
inc
aaa
pop
cmc
xor
sarb
xchg
mov
or
andb
popf
xor
fmul
xor
ror
or
sbb
pop
bound
push
jo
pop
inc
aas
add
pop
jle
xorb
add
sti
roll
inc
pop
inc
add
xchg
fs
jbe
jnp
push
push
push
xor
pop
cwtl
xchg
xchg
movsl
adc
pmullw
jnp
xchg
mov
mov
insb
ds
les
hlt
ror
mov
sbb
adc
adc
pop
xchg
test
inc
jl
xchg
imul
daa
jne
lock
push
stos
les
scas
or
in
mov
push
sub
stos
mov
mov
cmp
and
sub
shrb
and
adc
lret
push
xor
jnp
test
mov
pusha
dec
hlt
sub
mov
jp
ficomps
shlb
das
mov
push
pop
pop
mov
add
lcall
sbb
push
stc
xchg
fwait
imul
inc
and
mov
jne
mov
xchg
add
pusha
imul
cmc
jmp
nop
xchg
push
fucomip
repz
fidivrl
pop
jge
rcr
pop
or
mov
imul
stos
sahf
ret
cwtl
mov
sbb
fimull
cmpsl
pop
imul
sbb
and
and
jns
movsb
rcrb
inc
aas
std
inc
adc
ja
in
leave
dec
adc
xor
xchg
xchg
mov
cmp
mov
fbld
mov
push
xchg
lahf
nop
or
or
add
rclb
sub
mov
loopne
mov
xchg
sub
jb
aad
shr
add
dec
mov
adc
xchg
shrl
ror
scas
jl
jecxz
push
mov
push
adc
lods
outsb
loop
sbb
cli
loopne
out
ja
push
cmp
sahf
xchg
mov
lock
jnp
push
jne
jecxz
ljmp
jo
imul
lret
mov
jo
push
or
sub
adc
sti
call
test
lahf
cmp
lods
lahf
jle
mov
jl
jmp
jmp
xchg
ss
std
enter
aas
pop
sbb
xchg
adc
sbb
loop
mov
cs
lea
sahf
adc
lock
jmp
push
bnd
sar
scas
cmp
mov
je
push
mov
aam
or
dec
pushf
cli
fucomip
push
nopl
jle
mov
pop
movsb
adc
mov
sbb
rcll
jmp
imul
popa
push
push
pop
adc
and
or
fsubr
call
or
adc
sub
in
ljmp
lds
inc
xchg
or
adc
sub
insl
xchg
iret
inc
hlt
adc
dec
dec
fisttpll
ja
sarl
inc
test
dec
dec
movsl
cltd
push
mov
mov
testb
pop
jo
push
leave
mov
mov
movsb
rcl
sub
int3
mov
bound
adcl
cmp
popf
add
lods
out
test
push
lods
cmpsl
dec
and
xor
adc
loope
cmp
repnz
jle
cmpsl
in
icebp
aam
adc
rclb
lcall
push
lds
push
or
push
mov
jecxz
xchg
leave
cmp
dec
pop
sub
pop
movsb
jb
sbb
sub
lods
fsubrl
ss
out
loop
mov
stc
aas
testl
xlat
mov
push
mov
inc
jae
lret
in
repz
mov
arpl
js
sub
mov
push
add
xlat
int
les
mov
into
pusha
inc
in
ds
or
cmc
lret
mov
sti
popf
mov
pop
lahf
push
xlat
cli
xor
cmc
and
test
push
push
push
loop
orl
cli
push
fcmovne
push
je
jmp
stos
mov
insl
dec
mov
int
cmp
lret
sub
mov
cmp
cmpl
addl
fs
loope
clc
or
hlt
add
jl
push
enter
pop
add
lcall
mov
push
lcall
jns
imul
lret
stos
mov
fiaddl
iret
jp
test
fldt
mov
xchg
scas
clc
je
adc
sbb
insb
jmp
stos
repnz
cli
lahf
mov
push
jb
push
ds
xchg
adc
add
fadds
inc
jne
mov
cld
add
imul
xchg
movsl
cmp
cwtl
xchg
mov
jg
dec
adc
mov
gs
ret
mul
in
les
mov
or
inc
pop
fimuls
sbbl
pop
or
push
and
add
rcll
mov
fiaddl
jne
pop
and
and
fiaddl
mov
xchg
mov
call
insl
mov
jecxz
cwtl
sbb
push
pop
cmp
movsl
cld
jno
push
scas
aaa
aas
push
repz
xchg
shl
mov
fwait
test
cmp
pushf
imul
xor
jnp
rolb
cmpsb
lods
pop
nop
repnz
movsl
mov
push
xchg
add
mov
jg
inc
lods
mov
jmp
jge
push
pop
imul
cmp
andb
cmp
ss
lahf
xor
scas
bound
into
aad
sub
roll
push
insl
repz
psubb
scas
imul
mov
mov
push
imul
ja
pop
cld
sub
rcrl
push
jnp
mov
mov
addr16
pop
sbb
mov
fdivrl
popa
sub
sub
clc
sbb
mov
add
add
lcall
push
adc
test
jg
loope
loopne
mov
xor
mov
jmp
inc
ret
lcall
outsb
mov
xchg
xchg
sbb
cmpsl
sbb
fldt
out
adcb
inc
cltd
stos
cmp
mov
jb
mov
popf
xlat
xchg
aas
mov
jge
fisubrs
push
popf
jb
stos
mov
xor
sbb
jnp
xlat
sub
in
jp
xlat
lods
in
jae
dec
cld
out
test
stos
in
mov
push
ljmp
popf
or
sub
push
jg
dec
shl
add
into
ljmp
and
pushf
aaa
lea
pop
out
insb
pop
loopne
push
adc
inc
lock
dec
sbbl
aam
stos
aad
shr
out
inc
cltd
pop
mov
and
and
push
xor
dec
ret
push
cmc
imul
cwtl
jmp
jl
jge
jmp
je
push
stos
das
es
loope
sub
xlat
lea
loopne
jmp
mov
mov
cmp
lock
and
lret
push
mov
mov
pushf
repnz
xchg
in
cmp
cwtl
in
idiv
vcvttps2dq
and
out
popf
into
xor
fnstcw
sbb
add
scas
out
pop
inc
fisubrs
lea
sbbb
pop
jle
push
cwtl
imul
fisttpll
xchg
popf
fstl
sbb
add
out
push
mov
call
cwtl
stc
std
adc
das
jle
sub
shl
jnp
cltd
and
mov
stos
xchg
data16
insb
leave
pop
xchg
rcrb
pop
jno
sub
or
call
dec
ret
mov
xlat
out
jbe
call
jae
inc
xor
stos
fnstcw
sar
push
insb
mov
inc
repz
and
add
mov
ss
aam
bnd
loopne
or
mov
xchg
and
sahf
sbb
mov
incb
nop
jne
lods
or
lcall
dec
adc
xlat
inc
cmp
in
dec
mov
cmp
or
push
mov
or
xorl
jge
test
push
dec
or
cwtl
mov
xchg
xchg
inc
fidivrs
je,pn
repnz
dec
cmp
jnp
xor
mov
in
rcrl
mov
fdivrl
push
jmp
bound
jo
mov
loop
jg
mov
inc
or
pop
adc
arpl
inc
cmpb
or
xchg
jmp
mov
jle
das
sub
or
movsb
push
fs
js
lcall
insl
sub
aad
loop
scas
movsl
pop
sbb
mov
idiv
jb
mov
sbb
es
add
mov
dec
xchg
push
mov
dec
sub
mov
inc
dec
xchg
out
mov
xorb
cmp
je
fwait
aas
inc
neg
jg
or
mov
adc
adc
pop
out
and
stc
push
loopne
cmp
jmp
xlat
repnz
dec
aaa
movsl
imul
mov
dec
mov
inc
test
popf
aas
dec
les
mov
push
sub
sub
movntps
jg
in
sbb
test
add
in
xor
les
icebp
mov
push
mov
cli
imul
sti
rcrb
add
test
mov
das
aaa
vunpckhps
add
or
lods
insb
fcmove
repnz
sub
jo
xchg
jns
sbb
fidivrs
sbb
scas
out
dec
xchg
rorl
xchg
out
les
enter
nop
movsl
mov
jnp
push
push
cld
cmp
fnstsw
imul
sub
jp
icebp
push
int3
inc
inc
and
xchg
pop
hlt
popa
test
scas
jmp
repz
xchg
sbb
arpl
add
popa
push
test
pop
fwait
jp
addr16
mov
stos
scas
cmp
bound
jmp
ss
jno
pop
clc
clc
and
lds
sbb
dec
sbb
jge
jno
adc
sbb
xor
xor
pusha
shlb
cmpsb
sub
add
sti
adc
push
xchg
mov
adc
sbb
in
loopne
pop
test
popf
jnp
mov
hlt
outsb
dec
xor
test
outsb
xchg
push
pop
xchg
iret
pop
cmpsl
mov
test
insl
sbbl
jp
test
xchg
out
stos
push
bound
mov
js
and
cmpsb
cmp
sub
xor
cld
daa
cmp
push
jo
nop
mov
push
xchg
mov
das
push
sti
jmp
int3
or
add
jg
inc
adc
sbb
cmp
lret
adc
or
dec
add
cmp
test
cmp
fcomip
and
jno
sti
addr16
ljmp
dec
gs
inc
test
sti
lcall
ror
pop
fsts
pop
push
imul
or
rcrl
xchg
inc
fadd
out
jno
imul
aas
xor
ss
mov
jmp
jne
jg
roll
xor
daa
in
inc
add
cwtl
mov
push
mov
xchg
add
arpl
cmp
lret
adc
pushf
xor
dec
cmpl
pop
lret
sbb
push
inc
dec
sbbl
xor
dec
jl
push
in
not
cmp
sub
pop
pop
ret
mov
nop
loop
fsubrp
mov
outsl
mov
jg
cmpsl
out
xchg
pop
sar
xor
dec
call
adc
ret
jnp
lcall
gs
sbb
pop
jbe
cmp
test
out
aad
pop
dec
mov
xorl
jo
xchg
leave
and
test
cs
and
cmp
sti
push
gs
pusha
addb
gs
inc
adc
push
pop
add
aas
mov
dec
jecxz
jmp
jb
stos
js
cld
mov
scas
mov
sub
cmpsb
dec
psllw
mov
les
adcb
dec
in
out
inc
out
out
mov
mov
cmp
shl
and
pop
xchg
adc
mov
xchg
mov
pop
push
xor
ljmp
sbb
inc
xor
test
jl
jae
inc
pop
and
rcrl
mov
ficomps
xor
push
sar
repnz
pop
addr16
push
js
jge
inc
xchg
mov
lods
test
aad
pop
add
repz
dec
dec
and
jb
scas
scas
push
pusha
push
test
leave
lcall
mov
xchg
adc
outsb
cmpsl
jmp
sbbb
cwtl
std
xchg
dec
divl
enter
pop
lret
lods
cmp
xchg
mov
es
sbb
ret
sbb
xchg
imul
add
pop
orl
mov
sbb
xchg
loopne
outsb
or
orl
movsb
pop
stc
push
jle
pop
push
pop
and
pop
mov
sahf
out
pop
xchg
jbe
mov
pop
add
fisttpl
mov
mov
push
push
push
loopne
sbb
in
dec
cli
gs
pushf
cs
adc
jmp
mov
xor
hlt
mov
cmc
cld
jno
and
mov
adc
stc
pop
cmp
xchg
or
or
les
add
jp
mov
dec
daa
xchg
or
xchg
jmp
test
adc
xor
jle
cmc
inc
xchg
call
adc
dec
dec
mov
aaa
fbld
loope
rorb
data16
pop
clc
ret
ljmp
mov
rol
cmpps
mov
cwtl
imul
fists
dec
jmp
hlt
ja
xchg
inc
inc
sbbl
repz
insl
test
ja
loopne
scas
std
sub
mov
dec
rolb
stos
dec
push
test
stc
mov
mov
adc
jns
lock
mov
jnp
inc
or
pop
dec
push
cmp
mov
adc
daa
and
xor
mov
std
add
jno
test
push
in
jo
cmc
sbbl
orl
popa
in
xchg
not
cmpsl
jge
imul
jmp
inc
xor
mov
stos
push
xchg
scas
sub
or
cmp
in
jno
jae
cmpsl
sbb
mov
fdivp
push
adc
je
shlb
shll
rorl
aas
shrb
stos
mov
lea
and
lret
decb
dec
pushf
or
in
pop
dec
mov
sbb
pop
sub
push
cmp
int
jo
lcall
adcl
int3
fidivl
scas
pop
dec
aad
outsl
arpl
negb
jb
jl
fisttpl
inc
dec
sub
mov
jbe
das
sub
imulb
mov
orl
popa
sub
outsb
scas
dec
push
inc
in
cmc
cmpsl
xor
adc
xchg
es
sub
adc
lock
dec
inc
nop
jge
mov
add
dec
aad
dec
jp
shrb
dec
in
stc
pop
and
push
rclb
sub
xlat
nop
xchg
stos
test
sub
arpl
dec
aas
mov
pop
cmp
outsl
into
mov
jb
mov
leave
ret
cmc
xchg
arpl
repnz
insl
push
popa
jp
add
xchg
ljmp
xor
sbb
lea
std
push
sub
sbb
insl
enter
cmp
push
sub
or
cmpsb
and
leave
imul
dec
gs
std
pop
push
pop
in
fisubrs
mov
cli
pop
sbbb
add
cmpsb
test
jge
cmpsb
push
add
fs
dec
adcl
aam
clc
sbb
arpl
jbe
sbb
mov
mov
mov
push
mov
sti
loopne
push
jg
or
sub
dec
cmpsl
pushaw
lods
pop
cmc
nop
mov
pop
movsl
jno
inc
icebp
add
ja
dec
xchg
adc
cmp
mov
arpl
xor
mov
in
in
jo
mov
int
cltd
pop
dec
dec
pop
xchg
pusha
in
jb
out
movl
push
xchg
sbb
xor
pop
inc
xor
mov
test
xor
or
inc
cmp
mov
pop
ljmp
ficoml
ja
stc
std
dec
add
fnstcw
aam
mov
loope
cmp
lahf
pop
add
push
adc
ds
aam
jmp
sarl
add
push
mov
out
rorl
jno
jg
and
jnp
mov
std
fsts
pop
jge
jbe
mov
les
pop
jg
mov
mov
scas
leave
push
loop
pop
push
repz
or
xchg
addr16
imul
lret
pop
add
pop
aaa
jb
imul
xor
dec
adc
stos
mov
or
add
popf
xor
sbb
or
xor
mov
mov
daa
add
pop
cmc
or
es
sub
pusha
ljmp
stc
fstl
push
icebp
mov
dec
ficompl
pusha
cmp
push
add
jmp
cmp
push
push
inc
stc
iret
lds
or
cmp
push
fstps
sarb
xor
out
dec
pop
inc
xchg
sbb
sbb
in
gs
rorl
or
push
cmpsl
cmpsl
jg
lahf
fimuls
adc
ret
cmp
fisubl
pop
cmp
dec
scas
daa
pop
push
aam
adc
mov
shll
sbb
xor
scas
xor
mov
fs
cltd
outsb
and
jo
lds
pop
ljmp
jmp
mov
ja
inc
xchg
sub
xchg
fisttpl
mov
sahf
mov
fwait
scas
inc
test
rclb
sahf
pop
aad
push
clc
mov
aaa
test
inc
call
hlt
adc
adc
int
mov
adc
mov
aad
mov
call
mov
adc
mov
int
cmp
aad
jns
scas
push
mov
fs
xchg
mov
sub
sti
mov
push
add
mov
out
xor
inc
movsb
dec
push
dec
jmp
add
mov
or
loop
jp
ret
shll
mov
xchg
fistl
xchg
stos
adc
adc
fiaddl
movsl
icebp
mov
sbb
xlat
sarb
sbb
outsb
outsb
cld
add
or
mov
push
popa
stos
add
ljmp
std
stos
dec
mov
inc
mov
out
in
int
dec
data16
lods
cmc
jmp
adc
jge
pop
aad
stos
xchg
stos
mov
shrl
jmp
sbb
ljmp
xchg
shl
push
cmpsb
popf
bound
ret
sbb
inc
dec
mov
hlt
shr
lea
push
test
jnp
je
cmc
push
cmp
out
pop
cmp
popa
cmp
xor
call
ljmp
enter
aad
mov
push
pushf
mov
iret
movsl
lock
fsts
pusha
mov
es
push
xchg
xchg
mov
pop
fiadds
mov
outsb
jge
dec
imul
sub
mov
cs
cld
dec
lcall
int
std
or
jl
mov
jg
pushf
jg
or
or
inc
cmp
and
insb
enter
mov
cmp
pop
insb
mov
adc
dec
fstl
lret
stos
and
dec
xlat
js,pt
push
pop
out
out
jbe
pop
ficoms
std
or
mov
xor
shr
das
cltd
dec
data16
fisubs
dec
jecxz
shr
push
sbb
and
call
or
xchg
lcall
int
sbb
js
xor
jne
fstpl
xchg
and
pop
popf
xchg
cs
dec
mov
loope
call
clc
das
js
pop
mov
fmul
push
out
jmp
or
int3
mov
dec
jl
insb
and
dec
adc
mov
push
pop
dec
mov
loope
add
aad
daa
mov
mov
lret
int
icebp
push
adc
adc
insb
arpl
cmp
lock
adcb
cs
mov
dec
testb
testl
and
data16
das
arpl
inc
sbb
ret
cmp
repnz
xchg
fwait
andb
out
push
outsb
mov
incl
xchg
inc
sbbl
in
jbe
cld
clc
or
loopne
mov
imul
ljmp
cmpsb
pop
std
cmp
mov
fistpl
movsb
loopne
sbb
call
out
gs
pop
dec
imul
fcomi
mov
outsb
ret
clc
add
cli
or
xor
xchg
sub
fimull
dec
or
inc
jg
sti
mov
mov
sbb
mov
jmp
scas
rorb
mov
sbbl
push
insb
jle
and
js
fucomi
scas
jnp
ret
add
and
jl
ja
ss
bnd
and
jmp
fsts
loopne
das
ljmp
xor
add
sti
push
mov
push
pop
mov
mov
jnp
fnstsw
mulb
in
enter
outsb
loopne
mov
jp
cmp
xchg
jecxz
rcrl
arpl
jg
in
cmpsl
pop
test
push
addr16
add
movsb
stos
adc
gs
push
das
incl
mov
cmp
addr16
xchg
sub
sub
hlt
cmpsl
push
sbb
mov
hlt
mov
sub
sub
fcoms
xor
or
cmpsb
mov
movsl
fcom
and
inc
sti
and
or
cld
jmp
fstpl
sti
add
mov
lods
cli
testl
pushf
addr16
andl
adc
setnp
decb
pop
out
or
sub
mov
mov
js
cltd
dec
jo
pop
loopne
call
sbb
cmpsl
hlt
or
lea
fdivrs
or
movsl
ds
fstl
lods
out
jbe
jge
repz
test
lock
lahf
ja
cmp
sbb
sarl
clc
imul
call
out
int3
rolb
mov
imul
pop
leave
cmpsl
mov
fwait
bound
cltd
push
xchg
jns
outsl
pusha
sbb
sub
jne
inc
rorl
repnz
cmc
in
sub
mov
fisubl
movsl
xchg
pop
mov
sahf
and
out
pop
dec
push
mov
dec
xor
aam
leave
mov
sub
sbb
stc
pop
sub
fs
js
xor
mov
mov
inc
or
addr16
lock
insb
push
rcll
sti
lds
and
pusha
scas
adc
outsl
sbb
ljmp
into
jns
or
out
xchg
in
bnd
lods
adc
xor
inc
inc
mov
stos
es
movsb
enter
dec
pop
out
hlt
fdivr
and
mov
adc
dec
push
stc
dec
rcll
adc
insb
mov
mov
dec
nop
jb
inc
sbb
rorl
lahf
movsb
out
rolb
mov
push
in
push
or
lcall
call
add
faddl
clc
adc
jmp
or
sarl
mov
in
mov
pop
arpl
lds
or
gs
pop
hlt
sub
push
and
xor
dec
stc
mov
pop
daa
imul
sbb
and
push
leave
out
repnz
mov
mov
sbb
inc
sbb
addr16
lock
lods
in
sti
xchg
lcall
das
cli
inc
xchg
dec
or
mull
sbb
mov
sub
popa
mov
leave
cmp
leave
cwtl
sbb
push
iret
es
fdivp
sub
aam
cmp
xlat
jo
mov
mov
sub
test
jns
leave
ss
add
mov
fwait
mov
xor
idivl
adc
and
xchg
pop
xor
push
idiv
dec
jecxz
lea
sub
popw
and
push
ret
inc
daa
imul
xor
cmpsb
loop
sbb
aad
sbb
mov
ret
movsb
adc
or
dec
lea
xor
into
divl
popa
pop
into
fbld
xor
das
pop
gs
stos
or
lea
outsb
pop
ret
cli
jb
mov
decb
inc
pop
sti
mov
jge
negb
fiaddl
inc
imull
xor
pop
mov
imul
sbb
inc
push
in
sub
cwtl
clc
rol
repnz
xor
push
daa
fcmovnu
inc
loopne
sbb
push
in
push
mov
sbb
ljmp
jmp
inc
test
mov
int3
push
fcmovb
sub
int3
push
xor
hlt
fcmovbe
and
mov
shrb
inc
lea
imul
and
xchg
jge
call
hlt
cmp
rclb
stc
cmp
jecxz
or
leave
testb
sub
nop
add
stos
jne
cs
add
mulb
adc
pop
jle
gs
inc
pop
test
lea
mov
add
push
fsubrs
or
and
push
push
cld
mov
sub
xchg
and
xchg
xor
daa
cmp
add
jmp
push
dec
sbb
in
push
jg
jp
cmp
pop
fisubs
push
lds
pop
movsb
add
jle
cmpb
in
jp
cmpb
lcall
xchg
clc
xchg
rol
fbld
idivl
int3
sbb
dec
add
cmpsb
dec
mov
or
pop
repnz
sub
dec
sbb
lock
ljmp
xor
in
and
loope
mov
push
cmpsl
pop
in
ss
add
push
pop
add
inc
hlt
adc
icebp
pop
test
icebp
cmp
in
ja
in
sub
sbb
inc
jg
xor
clc
sbb
imul
push
push
stc
into
cmpsl
bound
shlb
arpl
mov
jge
aas
pushf
xchg
out
fs
cmp
sub
adc
add
sbbl
in
xchg
jge
repnz
cmc
sbb
testb
hlt
pop
mov
sub
mov
in
clc
push
inc
test
xchg
cs
dec
pop
dec
nop
cltd
or
or
addr16
rolb
inc
and
mov
or
pushf
sub
das
push
movsl
add
fwait
scas
test
add
mov
fucomp
mov
sbb
mov
ret
fs
data16
jecxz
mov
pop
incb
sar
pusha
loope
daa
leave
mov
mov
fadds
scas
test
out
sti
xor
lds
imul
push
imul
movsl
sbb
stos
xchg
add
fdivrl
dec
xor
sub
fstp
adc
mov
sti
or
loopne
xchg
xchg
xchg
jno
hlt
pop
rolb
pop
or
dec
out
pop
cltd
lods
jno
sub
loopne
ss
xor
mov
xchg
imul
push
clc
push
lret
out
stc
inc
jg
pop
and
jle
sbb
lock
into
popa
in
sarl
test
jnp
test
clc
cwtl
mov
scas
sbb
shll
fsubs
sub
aas
xchg
icebp
pop
adc
popf
sbb
insb
mov
add
js
cmpsb
nop
sbb
out
sti
mov
push
out
inc
mov
inc
and
jnp
arpl
mov
or
cld
subl
add
lods
int
adc
jp
dec
rclb
int3
jbe
repz
fists
xchg
push
adc
pusha
xchg
lret
ss
and
jns
int3
mov
movsb
movsb
cmp
cmc
int3
mov
das
std
adc
movsl
adc
jnp
cwtl
and
ljmp
gs
lods
inc
pusha
and
ja
mov
mov
test
xchg
in
sarl
mov
lods
add
mov
xchg
add
repnz
inc
mov
lods
adcb
inc
or
les
repz
pop
fisttpll
dec
push
add
jecxz
mov
nop
pop
push
mov
nop
dec
push
inc
stc
adc
insl
roll
or
bnd
loope
sub
pop
in
pop
ds
mov
loopne
shll
adc
adc
add
fmul
mov
lahf
fs
dec
xorb
stos
sub
outsl
idivl
lahf
push
pop
mov
rolb
xor
ljmp
cmp
imul
jo
aad
cmp
xor
push
into
cld
loope
int
pop
movsb
je
push
fcmovnb
add
inc
jae
mov
fldenv
scas
lea
fcompl
and
add
push
jmp
cli
in
push
das
cmp
jmp
xor
xchg
ljmp
stos
mov
mov
push
jae
dec
movsb
sub
and
cs
jno
push
popf
sahf
and
mov
pop
das
out
dec
push
mov
stos
cmp
cmpsb
das
scas
xchg
sub
out
scas
fwait
sbb
xor
rolb
jne
inc
jge
pop
arpl
xor
jecxz
negl
sub
loopne
hlt
dec
pop
fimuls
mov
pop
leave
shlb
adc
mov
pop
cwtl
sbb
adc
sub
out
in
daa
loope
stos
xchg
push
leave
and
lods
mov
cmpsl
das
mov
pop
cmpsb
cmp
daa
dec
push
mov
lret
and
les
rcrl
jno,pt
jbe
pop
sub
xchg
loopne
pop
push
cwtl
mov
dec
cs
in
mov
pop
sarl
stos
jnp
mov
popa
ret
sbb
iret
andl
aam
sbb
cmc
mov
pop
adc
xor
dec
lret
cmpsb
cld
mov
into
sub
inc
and
insl
sbb
cmp
push
loopne
roll
imul
mov
data16
das
popa
xchg
insl
xchg
ret
add
adc
cmp
jns
stos
es
pusha
dec
pop
pop
add
jbe
sti
jns
inc
and
int3
xchg
jmp
ja
and
pop
dec
shll
or
loop
sbbb
loope
clc
test
int
and
or
out
divb
in
xor
out
ret
dec
mov
xchg
cs
lea
lahf
fimuls
xchg
movsl
and
shll
ret
mov
mov
adc
les
ss
test
pushf
inc
pop
push
scas
data16
push
mov
in
rcll
in
dec
popa
dec
or
mov
cmp
repz
out
mov
xchg
pop
cmc
inc
and
mov
test
stc
inc
sub
addr16
js
sub
das
push
jns
xchg
loopne
mull
imull
rclb
sbb
cmc
sub
or
ja
lock
dec
push
jl
inc
mov
sbb
lods
es
add
stc
repz
es
jecxz
mov
mov
push
aas
pop
mov
push
xchg
dec
inc
outsb
rorb
and
nop
icebp
sub
sub
sbbl
add
out
mov
jp
inc
jg
addb
decb
pop
fldt
xor
lock
inc
mov
mov
cld
sub
aaa
dec
pusha
icebp
push
mov
cld
les
insl
mov
movsb
imulb
xchg
or
xor
mov
mov
pop
std
xchg
mov
jbe
pop
push
cmpsb
out
subb
repnz
shll
in
xor
add
fdivr
lea
test
rcrl
inc
and
mov
xchg
push
sbb
aas
ljmp
mov
clts
lock
cld
cmp
mov
adc
sbb
mov
mov
push
addr16
mov
and
dec
mov
repz
loop
cmp
imul
aaa
rol
push
inc
mov
xor
dec
lsl
mov
mov
inc
and
scas
test
mull
dec
dec
inc
stos
mov
out
xchg
lret
xlat
and
pop
ficompl
mov
lea
pop
ds
sub
mov
das
dec
or
push
mov
xor
xor
jl
push
sbb
into
clc
lds
daa
in
inc
jo
cmc
jbe
das
stc
repz
gs
aas
dec
sub
enter
inc
mov
pop
jecxz
xchg
cmpsl
enter
and
adc
xchg
xchg
mov
push
adcl
ds
or
jp
out
imul
aaa
scas
insw
add
pop
jp
inc
lods
sub
imul
testl
push
popf
pushf
cmovne
pop
ja
cwtl
or
daa
imull
cmp
aas
dec
fisubl
bnd
add
mov
adc
sbb
pusha
and
addr16
xchg
fstpt
loop
lock
sbb
dec
repz
push
pop
sahf
fidivl
xor
cmpb
inc
add
cmp
cmpsl
mov
add
push
mov
in
xchg
daa
fmuls
push
mov
addr16
shrl
cwtl
orb
or
cwtl
jge
loope
xchg
out
outsl
mov
add
std
les
xlat
pop
mov
addr16
int
push
ss
dec
xchg
adc
inc
insl
pushf
sub
mov
jp
andb
push
sahf
cli
bnd
mov
shl
add
inc
push
call
shrb
std
mov
popa
out
dec
movsl
adc
subl
xchg
pop
and
fwait
pusha
mov
mov
inc
mov
mov
popa
outsl
lahf
and
pop
ja
das
jne
add
mov
or
xchg
dec
test
int3
inc
mov
push
dec
adc
adc
test
lods
arpl
mov
mov
jae
sti
pop
or
test
inc
pop
gs
rclb
test
jae
adc
pop
push
mov
mov
cmpsl
xor
cs
negb
inc
or
test
jbe
pop
fs
test
aad
pop
repz
out
push
xor
in
and
push
mov
loope
and
push
cmp
push
xor
test
int
xor
inc
into
or
dec
push
push
sub
pop
cmpsl
add
or
cmpsb
je,pt
mov
push
add
mov
pop
and
fildl
mov
dec
add
lods
or
dec
adc
mov
ja
and
cld
add
jg
or
in
xlat
xchg
test
jp
imulb
and
cmp
aad
jno
mov
mov
or
scas
jne
insb
pop
repnz
dec
mov
lea
xor
inc
in
pusha
dec
cli
dec
inc
dec
push
pop
popa
jne
js
xchg
rcrl
fs
xchg
outsl
jl
aas
pop
adc
iret
add
rclb
dec
mov
jmp
and
fstpl
popa
sub
push
cwtl
into
mov
mov
in
push
push
xor
or
inc
jp
mov
loop
and
gs
cmpsb
push
pop
sbb
push
jecxz
lock
push
xchg
pop
iret
xchg
pop
enter
lods
imul
or
pop
xor
std
pop
outsl
sbb
pop
subl
arpl
cmpsl
add
xorl
pop
rolb
insl
movsl
fnstenv
sub
push
push
shl
sub
sti
bound
sti
cmc
cmp
lea
xchg
lret
pop
movsl
ret
iret
sub
mov
imul
jno
stos
jle
addr16
cmp
cmpsl
inc
xchg
add
sub
ds
mov
aas
mov
sahf
push
lea
push
sub
repnz
cltd
in
repz
xor
movsb
cmp
sti
ss
sarl
xor
cs
dec
in
adc
push
out
or
shll
into
lcall
sarl
gs
cmp
xorl
mov
adc
das
je
inc
adc
out
popf
add
je
orb
pop
mov
mov
fdivp
push
lds
addb
in
je
ret
mov
and
cld
cmpsl
test
out
lahf
shr
test
mov
add
lods
pop
in
int3
stc
jp
imulb
das
xchg
xor
andb
dec
stc
in
rorb
sub
pop
ficoml
int
lea
xchg
or
add
mov
sub
xchg
sbb
insl
fdivs
sbb
ljmp
jg
aad
call
pushf
xor
xchg
sbbl
xor
cmp
xchg
lea
sbb
dec
sti
stos
lock
sbb
aaa
mov
push
xchg
daa
cmp
insl
aad
xchg
fnsave
jb
bound
cs
and
push
jne
push
shlb
pop
mov
pop
repnz
xlat
scas
lret
loop
push
ja
mull
or
adc
inc
sbb
sbb
bnd
dec
outsb
add
test
pop
pop
cmpsb
push
pop
test
jno
xchg
mov
adc
xchg
cmp
mov
fs
xor
push
scas
sub
out
mov
mov
fistpl
in
sbb
sub
xchg
mov
sbb
dec
add
adc
lret
xchg
or
mov
outsl
mov
xor
add
xor
mov
push
aas
nop
dec
std
fists
daa
sub
scas
push
mov
and
jle
lea
xchg
mov
mov
mov
cmp
inc
ds
fnstsw
push
es
stos
inc
or
loope
and
std
pop
test
and
mov
sub
pop
push
dec
jge
jo
fistl
jl
cli
imul
jp
dec
jne
ljmp
sbb
add
cltd
or
mov
push
mov
inc
sbb
sbb
sub
xlat
int
mov
imul
pushf
xchg
xor
rorb
adc
outsb
test
clc
or
cld
xorl
int3
mov
or
and
in
or
int3
sbb
pop
jp
js
test
enter
sbb
aas
jb
iret
ror
shll
mov
pushf
xchg
lock
icebp
mov
mov
adc
add
or
sub
adc
and
aad
adc
sti
inc
orl
cmpsb
daa
push
xor
xchg
mov
pop
mov
mov
inc
and
ret
push
adc
xchg
bound
mov
aas
fstpl
xchg
adcl
push
sbb
add
push
xchg
cmp
sbb
adc
and
aaa
mov
daa
ret
mov
mov
sub
jle
setbe
and
mov
or
xorb
dec
fdivrs
clc
pop
mov
lock
adc
bound
dec
sti
in
icebp
pop
xchg
inc
andb
adc
cmpb
scas
jbe
ja
push
pushf
popf
lods
and
jbe
push
rorb
jecxz
push
cld
xor
or
xchg
cmp
loopnew
jp
scas
jns
mov
sahf
sub
ret
in
add
scas
adc
mov
adc
push
icebp
xchg
enter
in
in
xorl
arpl
clc
xchg
mov
mov
mov
mov
cwtl
mov
and
gs
cs
xchg
adc
cmpb
lods
push
or
icebp
arpl
push
push
and
imul
adc
fistpll
push
push
sbb
add
jg
lds
mov
ljmp
rolb
sub
jns
jo
and
pop
inc
sub
addr16
sub
mov
push
push
fldt
mov
dec
push
scas
fimull
adc
cmp
loop
repz
lea
mov
out
popf
icebp
push
in
aaa
aam
mov
or
xchg
fnsave
fisttpl
jae
jno
inc
pop
adc
mov
das
cmp
fsubrl
negl
or
xor
inc
add
jb
clc
movsb
lar
in
push
mov
and
mov
and
ret
clc
arpl
mov
mov
push
xor
test
popa
movsb
and
push
pop
add
sti
jbe
int3
cmc
and
jge
xchg
roll
stc
add
pop
out
cmp
mov
adc
sarl
out
add
popf
rclb
jb
pop
fisubrs
pop
and
fwait
shll
fs
cmc
shl
dec
add
aam
cld
cmp
dec
mov
cmp
lret
jb
rcr
push
pop
jnp
add
fwait
cmp
xor
mov
repz
cmp
in
mov
aad
jne
jp
jne
int
bound
mov
neg
sbbl
inc
nop
cmpsl
or
xchg
cmc
mov
clc
cld
push
pop
je
stos
or
jge
mov
mov
mov
mov
xlat
sahf
cmpsl
sbb
inc
shlb
mov
aam
mov
fnstcw
scas
into
xchg
sahf
in
pop
aad
out
lds
mov
or
xor
lods
cmp
sarl
arpl
sahf
pop
and
mov
insl
lret
push
sbbb
jmp
fst
xchg
les
daa
shlb
cmpsb
bound
jns
mov
jae
xchg
ror
addr16
cmp
push
fwait
cwtl
mov
shlb
sub
xor
ret
out
dec
lcall
xchg
imul
sub
shrb
pushf
sahf
rcr
popa
mov
rclb
out
push
mov
ret
and
fiaddl
sub
jo
or
ret
inc
jns
cli
mov
popf
aas
jo
mov
cmp
jno
and
push
subl
pop
sbb
xchg
fistpll
mov
cmpsb
sbbl
out
fsub
ljmp
sahf
mov
and
xor
mov
aaa
stos
xchg
scas
ficoml
adc
sarb
xchg
jno
push
push
adc
call
fistpll
movsl
les
dec
popf
pop
sub
rorb
dec
sbbl
cmpsl
pop
fiaddl
sub
inc
xor
cmpsb
push
cmp
sub
popf
adc
scas
mov
and
inc
xchg
lret
push
xor
out
or
push
loopne
push
jns
xor
cld
cmp
dec
in
stc
sbbb
sub
fstpt
popf
into
and
inc
lahf
mov
mov
xchg
push
lods
ret
push
or
addr16
sti
mov
mov
jae
adc
daa
test
dec
add
scas
xor
test
or
pushf
gs
mov
cli
out
shrb
hlt
xchg
adc
popf
in
xor
mov
ret
and
cmp
xor
dec
hlt
pop
addl
mov
dec
and
pop
pop
pop
loopne
sarb
xor
ret
bound
cld
adc
or
mov
fcomps
xor
mov
pop
enter
pop
out
or
insb
xchg
pop
mov
les
mov
mov
std
push
and
ljmp
lods
bound
dec
incb
jb
or
iret
jae
scas
mov
xchg
dec
mov
mov
icebp
jb
add
cmp
jmp
enter
lock
pushf
out
jnp
push
cli
ljmp
dec
add
or
cmp
aad
adc
sub
testb
xor
mov
jmp
and
testl
daa
out
mov
mov
jl
xchg
and
fisubs
loopne
lcall
jno
jmp
add
mov
fidivl
ror
rcl
movsb
push
adc
fbld
sub
sub
fistps
jecxz
in
lcall
mov
inc
mov
inc
push
jb
or
repnz
and
and
push
jp
dec
lahf
ret
in
loopne
dec
mov
out
xor
mov
in
jns
cmpsb
inc
add
push
push
fld
icebp
loop
cmp
jge
movsb
sbb
cmp
inc
inc
xchg
nop
xor
cltd
fsts
shlb
sbbl
push
scas
enter
dec
push
shlb
cmp
loopne
imul
pop
inc
cmp
mov
in
cs
sbb
je
idiv
jae
push
mov
test
shr
adc
mov
sbb
lahf
cmc
aas
push
push
subb
insl
push
cmp
xor
jno
sahf
mov
dec
dec
xor
popa
mov
xor
adc
popf
xchg
out
stos
lods
aam
mov
xchg
xor
sub
cmp
jnp
jo
int
cmpb
pushf
adc
dec
cmp
lds
adc
dec
mov
fsubrl
fsubl
cmp
pop
xor
mov
mov
ret
sti
xchg
mov
mov
mov
and
sbb
mov
mov
fstl
cmp
dec
cmpsb
insl
scas
fsubs
adc
pop
and
jbe
outsb
sbb
jo
adc
adc
jecxz
movsb
out
cwtl
xor
inc
pop
jle
mov
andl
xor
dec
fucomi
ds
lcall
mov
loope
sub
push
or
or
or
leave
or
sub
cmp
and
lods
fsubr
cmc
leave
cmp
sub
neg
je
sub
cmp
fnstsw
add
mov
or
inc
dec
movsl
repz
xor
adc
or
lea
or
pop
inc
sbb
add
and
adc
inc
shl
jae
push
decl
in
jp
push
imul
pop
jbe
imul
js
pop
sub
lea
fsts
inc
les
push
daa
or
jnp
sbb
push
adc
outsb
mov
push
add
and
rorb
fildl
mov
push
sub
push
adc
ljmp
xchg
andl
fsubs
push
add
or
adc
jbe
sub
sub
fcoml
pop
lret
inc
mov
lcall
lds
ret
mov
outsb
subl
icebp
sbb
pop
jge
or
mov
mov
mov
int
call
pop
fistps
mov
test
ja
adcl
pop
or
fiaddl
jl
dec
mov
aad
pop
enter
mov
mov
cmp
out
dec
cmpsl
enter
pop
orb
add
imul
lds
insl
aaa
icebp
dec
mov
movsl
sub
bound
or
aaa
popa
add
xor
aam
push
push
mov
push
xchg
subb
and
xchg
jg
movsb
and
jns
mov
sub
sti
mov
les
jmp
cmc
jecxz
pushf
dec
pop
pop
cmpb
jae
cmpsl
enter
es
imul
sbbb
and
push
ds
cmc
dec
sahf
repnz
sub
aas
sbb
pusha
cmpsb
push
cmc
bound
xchg
sbb
arpl
dec
arpl
mov
std
imul
jne
cmpsl
sub
dec
cmp
xchg
xor
lea
lea
mov
and
das
loop
stc
cmp
ror
jo
jg
in
dec
jmp
push
cmpsb
mov
call
fimuls
mov
push
cmpsl
div
inc
insl
mov
cltd
mov
cmpsb
add
sbb
dec
fdivs
scas
inc
push
movsb
sbb
leave
adc
pop
jge
outsb
shrb
pop
mov
pushf
sbb
inc
sbb
cli
jle
test
adc
fisubrs
sub
ja
mov
mov
and
cmc
iret
adc
ds
popa
adc
sub
and
loop
mov
iret
mov
jge
push
adc
add
mov
leave
js
sub
nop
sbb
clc
mov
imul
stc
sbb
gs
jg
es
iret
cmp
imul
pop
divb
pop
mov
or
push
adc
pop
cmc
xor
xchg
dec
xchg
pop
add
popa
call
fldlg2
or
les
cmp
shrl
int3
dec
cmp
lahf
mov
sahf
inc
dec
aam
mov
pushf
mov
pop
rclb
jnp
inc
and
pop
test
push
popa
xchg
xchg
icebp
fimull
xchg
movsb
scas
mov
inc
ljmp
mov
in
pop
in
pusha
xchg
sar
test
orb
push
ds
aaa
push
mov
add
js
test
addr16
lds
aad
aas
sbb
xor
inc
cmp
sti
fisttps
fwait
jbe
in
popa
adc
xor
lret
add
insb
push
dec
sub
into
xchg
inc
inc
aas
xchg
inc
jnp
dec
add
sbb
push
and
pop
pop
in
aas
cmp
adc
insl
inc
mov
sub
ret
cmp
sahf
fwait
cmp
jbe
scas
fdivs
test
popf
mov
pop
iret
lea
mov
adc
test
loope
dec
lock
gs
xchg
or
pushf
mov
pop
lea
xchg
addr16
lock
pop
pop
add
xchg
inc
sub
es
push
stos
sbb
or
ret
cmc
shl
mov
rolb
mov
mov
repnz
lock
mov
jl
aad
jb
pop
mov
inc
jecxz
movsl
ret
mov
jne
in
jbe
fwait
daa
jb
aaa
nop
or
fs
adcb
loopne
cs
fdivrs
xchg
addr16
loopne
mov
imul
out
xor
add
inc
cmpsl
push
and
repz
icebp
cmp
mov
xchg
inc
stos
or
frstor
call
sbb
jl
aam
fisubrl
fmuls
rol
cltd
push
ret
pop
or
mov
sbb
sub
or
push
xor
bnd
dec
xchg
xchg
jl
ja
xor
fildl
jbe
arpl
pop
mov
fidivl
in
test
jp
jns
adc
xor
xchg
call
pop
jns
jae
jo
test
sahf
inc
hlt
mov
idivl
push
andb
cli
adc
mov
aad
dec
loope
insl
std
aad
xchg
cmp
dec
inc
leave
mov
ds
push
lock
pushf
ja
fsubrs
fdivrl
ret
pop
jns
mov
pop
int3
int
inc
enter
xchg
inc
or
mov
rolb
data16
mov
push
jge
inc
sub
idivl
xor
push
push
sub
xchg
pop
fs
mov
add
xlat
or
out
mov
push
sub
mov
mov
pop
mov
jo
push
adc
pop
mov
adc
xor
inc
scas
dec
mov
movsb
mov
dec
sbb
or
repnz
popa
popf
jecxz
je
in
out
mov
and
fisttps
outsl
sbb
sti
shll
dec
pop
push
and
pop
mov
imul
cmp
mov
dec
jg
xor
std
push
add
imul
das
loop
jp
andl
dec
ja
nop
cs
in
repz
ret
fidivs
pop
jne
jae
shrb
xchg
jg
daa
in
out
jns
jne
fldenv
mov
mul
jle
xor
sahf
repz
es
push
xchg
jecxz
sahf
lock
movsl
je
sbb
out
jmp
out
and
je
scas
sub
scas
pop
arpl
or
sbbb
push
mov
cmp
pop
imul
cmp
sbb
ret
test
pushf
sahf
fidivs
mov
sub
lahf
loopne
lret
popf
arpl
push
cmp
hlt
xabort
sbb
out
cmp
cmp
push
pop
loope
adc
mov
or
outsl
psubd
xor
xlat
inc
pop
and
les
sub
xor
inc
sti
xchg
iret
pop
inc
std
mov
sbb
sbb
ffree
imul
lds
call
or
dec
daa
xchg
or
mov
ror
adc
push
and
in
pop
js
pop
add
adcb
cmp
cmp
mov
je
xchg
aas
jp
sbb
pop
sahf
xor
ss
push
movups
xor
jb
pushf
dec
lret
mov
cmpsb
xchg
mov
push
xchg
in
mov
ds
mov
sahf
pop
int3
mov
jno
cwtl
icebp
cmc
mov
xor
xchg
daa
rorb
inc
dec
movsl
int
lret
xchg
pop
jle
in
xchg
movsl
adc
in
add
fisttpll
std
in
out
shrl
test
mov
add
cmpsl
cmp
outsb
dec
fldenv
mull
inc
mov
aas
sub
fdivrp
push
fs
push
jns
jp
fnstcw
push
aam
mov
loopne
xor
pop
adc
sbb
mov
sbb
mov
xor
fwait
and
sbb
sbbb
insl
mov
pop
lods
aam
push
xchg
mov
pop
mov
cmpl
inc
cmp
add
push
inc
or
or
push
ljmp
inc
mov
hlt
lock
iret
jl,pn
mov
test
ja
adc
je
mov
lahf
jno
scas
scas
int
inc
and
lahf
fbld
mov
cli
add
xchg
jl
xchg
nop
in
lods
aam
add
inc
pop
sbb
adc
pop
pop
push
inc
mov
cmpsl
test
outsb
pop
insb
push
xchg
pop
dec
enter
mov
xlat
adc
incl
push
insl
inc
lods
sbb
loopne
pop
mov
lret
or
adc
in
xor
inc
inc
mov
sarb
mov
jg
xchg
xchg
inc
shrl
cmp
push
je
mov
lret
or
dec
and
outsb
out
jge
shr
jo
int3
fidivrs
cltd
cmp
inc
mov
lock
push
mov
pop
loop
sbb
insl
and
movb
imul
test
outsb
clc
jp
mov
mov
jp
sub
sbb
fidivrl
cmp
pop
xchg
lahf
loopne
sub
dec
out
mov
xor
mov
or
xor
add
orb
stc
pop
and
xor
push
jg
mov
out
ljmp
and
negl
add
dec
sbb
xchg
scas
popw
or
push
or
or
dec
dec
mov
scas
pop
push
fs
pushf
insl
cmp
cmp
push
cmpsl
in
or
push
cmpsl
aad
adc
adc
xor
and
jns
sub
adc
dec
stos
push
jmp
mov
sbb
aad
ja
jl
negb
inc
mov
test
call
or
scas
xchg
add
idivb
test
xchg
dec
xlat
dec
iret
lret
pop
adc
insb
push
out
jmp
outsb
les
enter
push
loopne
push
inc
push
adc
cmc
lahf
sti
in
or
enter
mov
sbb
rcrl
rcll
mov
adc
scas
push
dec
test
test
push
cmp
insl
out
in
out
divb
scas
lds
rorl
or
outsb
add
cmp
sub
pop
pop
xchg
sbb
xchg
or
mov
flds
pop
test
das
sbb
dec
lods
mov
lret
je
rcll
idivb
fadd
pop
data16
adcl
jl
pushf
xchg
or
das
cmp
xchg
dec
lcall
jmp
notb
mov
mov
mov
jmp
or
mov
sahf
cmp
adc
jne
rolb
xor
cmpsb
lods
jb
lret
ret
mov
push
sbb
aaa
das
test
pop
in
or
or
les
cs
pusha
jb
push
int3
mov
sti
pop
cs
xor
mov
andb
outsl
shl
sub
push
adc
rcrl
push
inc
test
fs
aaa
sbb
popf
es
mov
xchg
mov
dec
pop
imul
jp
pushl
push
mov
pushl
into
cmp
enter
cmc
add
fildl
pop
jecxz
push
popf
dec
je
cwtl
ja
ret
xchg
loop
pusha
das
dec
mov
addr16
xor
push
out
add
ja
scas
jl
daa
pop
cmp
addr16
negl
out
jle,pn
cld
rclb
mov
xor
clc
inc
shll
ret
in
lods
fcompl
dec
add
adc
adc
sub
sub
pop
jo
rorb
xchg
rorl
ss
jbe
shr
dec
push
cmpsb
jg
cmp
xchg
stos
add
addl
insb
lcall
dec
ss
jns
xchg
ret
lahf
shl
insb
ss
dec
fistpl
mov
and
xor
cmp
mov
mov
fcom
inc
je
arpl
lcall
call
or
cmp
jb
loop
outsb
sub
stc
in
dec
mov
stos
fsts
xor
fidivs
shl
add
push
in
mov
ret
dec
rorb
mov
lods
or
es
outsl
inc
es
lahf
push
outsl
cmp
mov
sub
je
or
and
push
clc
addr16
pop
lcall
jb
pushf
or
enter
fwait
mov
mov
adc
cmovb
cmp
xor
sbb
sbb
inc
pop
add
std
push
jp
mov
cld
cwtl
popf
xchg
jmp
decb
add
fildl
je
sub
ds
cmp
cltd
test
stc
test
addr16
enter
adc
jo
sub
xor
jp
xchg
imul
adc
xor
fcoms
cmp
flds
inc
xchg
and
clc
popa
pop
shr
jle
push
mov
out
insb
and
mov
and
mov
dec
ljmp
sbb
into
mov
or
push
xor
mov
test
dec
decl
mov
cmp
imul
xor
out
out
data16
xchg
shlb
pop
fwait
insl
inc
sarl
outsb
fbld
dec
repz
mov
add
divb
lds
dec
inc
or
mov
iret
adc
xchg
movb
testb
mov
or
push
notl
cmp
lods
sub
or
xchg
dec
aas
push
std
lods
pop
out
in
test
pop
pop
movsl
jecxz
fistps
mov
sbb
xchg
daa
push
js
punpckldq
mov
lods
mov
add
or
ret
cmp
clc
or
das
sbb
or
lea
jo
ja
ret
mov
cmp
daa
test
mov
pop
adc
jo
enter
pop
ficoml
rorb
sbb
sub
cmp
std
stc
lock
mov
pop
push
adc
stos
stos
push
test
stc
les
add
cmp
sub
or
add
cmp
shr
repz
std
add
iret
aaa
xchg
daa
lret
sahf
adc
dec
adc
mov
adc
mov
dec
sub
mov
lahf
dec
cltd
cltd
xor
mov
cmp
mov
mov
out
adc
pop
adc
cmp
xchg
mov
dec
mov
mov
addb
mov
rcrl
or
subl
ja
in
mov
push
outsl
outsl
xchg
in
dec
push
sbb
addr16
and
arpl
bound
fisttpll
imul
testb
outsb
xlat
subb
adc
dec
jge
cmp
jp
mov
cmpsl
rcrb
int
mov
and
test
sahf
stos
testl
sti
jae
loope
repnz
and
outsl
hlt
push
sbbb
jb
sub
push
mov
fisubs
push
fstps
lcall
in
push
jle
push
mov
xchg
add
or
xchg
jg
cmp
jns
or
mov
popa
adc
cmp
cmp
add
setae
push
sub
movsl
cmpsb
leave
mov
hlt
fisttpll
stos
ljmp
pop
ja
rorb
adc
push
jmp
jnp
mov
stos
pop
lock
mov
loop
mov
sbb
dec
mov
scas
jle
cli
sbb
addb
out
sahf
call
or
and
loopne
test
xor
jle
decl
push
add
mov
mov
sahf
jb
dec
imul
mov
or
cli
fimuls
inc
mov
jge
cmp
jmp
ss
mov
fists
push
cmpsb
hlt
lahf
mov
sahf
xchg
scas
adc
mov
jne
push
cmpsl
cmp
add
insl
mov
xor
clc
lret
iret
scas
and
cmp
repnz
inc
rcll
cmc
or
dec
cmp
cmpsb
xor
pushf
cld
addb
xor
adc
lds
and
decl
pop
or
fisttps
fcoms
rclb
scas
rorl
push
cld
movsl
sub
cmp
imul
mov
push
mov
mov
pop
jmp
lea
xor
jbe
cmp
xchg
pushl
jb
inc
sub
inc
popa
jb
idivb
jl
mov
mov
push
mov
testl
xlat
out
icebp
dec
mov
sub
mov
dec
dec
loopne
scas
pusha
inc
mov
pinsrw
cwtl
push
outsl
aaa
push
mov
out
cmpsl
mov
lret
jb
stos
mov
enter
outsl
pop
mov
scas
xor
dec
cmc
push
push
scas
mov
push
xchg
xchg
inc
add
sub
xor
imul
and
xlat
push
icebp
fs
or
cmc
add
fs
jp
aaa
lea
lea
dec
cmp
mov
fmull
das
cmp
pop
or
dec
data16
cli
rcrl
add
fwait
sahf
inc
icebp
std
ss
xchg
xor
jle
mov
in
xchg
jb
or
les
imul
jp
adcb
movsl
cli
ficoms
mov
adc
rorb
lds
jp
jb
out
push
loop
lods
les
test
test
sbb
sub
scas
js
push
mov
pop
adc
aaa
mov
sti
adc
add
push
sub
outsl
and
push
nop
lods
leave
lret
jp
push
add
pop
sar
cmpsb
fdivrs
movsl
lock
testb
aas
das
out
inc
mov
xor
sbb
cmpsl
in
sbb
inc
lock
adc
xor
jmp
fwait
mov
lahf
xor
div
outsl
sti
mov
lahf
data16
sub
out
into
aad
xor
cmp
xor
mov
jp
mov
and
jo
push
aaa
rorl
incl
int3
mov
xor
adcb
sti
lods
dec
test
mul
push
push
pushw
cmp
inc
pop
push
push
mov
in
push
mov
push
rcrb
or
or
cltd
cmp
pushf
jne
or
pop
inc
push
dec
cmp
aaa
aas
shrb
or
dec
add
fcoms
fsub
inc
dec
pop
shr
daa
push
sbb
leave
mov
dec
mov
inc
cmp
add
out
mov
jbe
movq
sub
cmp
adc
push
or
pop
popl
xor
imul
repnz
imul
pop
out
sub
nop
ret
cmp
and
sbb
popf
xorl
inc
push
push
push
mov
cmp
cmp
xchg
loope
sbb
dec
stos
push
out
or
inc
mov
xchg
test
subb
fdivrl
je
xchg
push
mov
je
jno
push
js
adc
hlt
xor
call
push
add
mov
inc
imul
cmp
mov
repz
cmp
mov
ss
in
inc
add
test
aam
pmulhw
mov
fwait
pop
sbb
sbb
pop
lds
sub
ja
in
icebp
test
hlt
cmp
jae
push
mov
leave
sbb
and
insl
les
jae
sub
push
into
loop
add
stos
popf
sub
push
lcall
lahf
xor
arpl
lds
sahf
popfw
lods
push
sub
pop
arpl
jp
add
adc
pop
insb
rcr
jb
jg
or
popf
cmpsl
insl
push
jo
xor
pop
mov
clc
outsl
or
xor
psubq
imul
jmp
sub
insl
das
mov
insb
and
mov
sbb
aaa
or
mov
call
jecxz
push
adc
xchg
test
jo
mov
jl
fisttpll
push
mov
adc
test
adc
sub
les
mov
jp
push
adc
adc
mov
nop
sub
mov
decl
ljmp
in
icebp
test
std
sbb
ss
pop
xchg
inc
sbb
movsl
aad
mov
xchg
mov
ret
stc
mov
mov
add
idivb
mov
filds
push
adc
and
inc
js
fnsave
sub
addl
clc
push
test
repz
and
mov
aas
sub
leave
mov
sbb
cmpsl
pop
cli
fs
push
pusha
lret
mov
repz
inc
sbb
push
lahf
mov
int3
or
cmpsb
jne
and
pop
adc
hlt
or
out
cli
cmp
loopne
pop
push
icebp
mov
repz
xor
add
jmp
xchg
cwtl
das
rcrb
inc
lret
cli
daa
push
sbb
lahf
lods
xlat
out
fsubp
es
mov
mov
mov
test
fbld
lea
mov
dec
push
push
addr16
jae
adc
rcrl
push
into
movsb
jo
iret
and
dec
xchg
push
cwtl
ret
imul
cmp
test
inc
push
xchg
pop
jae
sbb
add
push
mov
mov
divb
inc
repnz
xor
dec
jbe
inc
mov
sub
decb
orb
pop
aas
clc
adc
lret
xor
in
js
mov
xchg
cmp
cwtl
jnp
pop
xchg
xor
jae
outsl
lea
or
push
movsl
cmp
mov
xchg
out
fs
jge
les
lret
xor
and
add
movsb
aaa
mov
test
fwait
sarl
insb
aaa
add
push
sahf
enter
mov
testb
xchg
inc
mov
xor
lahf
pushf
pop
inc
test
or
dec
rorb
leave
jecxz
pushf
pop
adc
loop
pop
adc
mov
loop
cmp
ret
mov
jb
das
sub
test
xchg
xorl
mov
loope
pop
hlt
push
push
dec
push
inc
sbb
mov
aaa
iret
inc
fsts
add
cmpsl
lods
aad
cmp
bound
fs
imul
jmp
loopne
pmulhuw
neg
rorb
xor
test
je
jo
add
leave
mov
sub
repnz
flds
loop
fmuls
faddl
push
xchg
orb
in
or
cmp
sbb
push
mov
xchg
mov
and
xchg
fs
push
mul
jo
out
push
aad
mov
andb
out
add
xor
and
xchg
loope
xchg
les
lock
inc
int3
push
inc
jp
mov
push
mov
mov
cmc
lock
push
aaa
into
stos
insb
inc
stc
ja
mov
repnz
xchg
or
xor
dec
xor
inc
xchg
jge
lock
icebp
cmpsl
clc
fisubl
mov
icebp
sub
add
js
or
or
loopne
dec
les
orb
or
sbb
int3
fwait
push
aaa
sub
dec
daa
in
stos
ret
mov
jl
xchg
push
pop
sbb
xor
testl
loope
and
add
push
js,pt
ss
mov
jp
pop
scas
mov
cld
push
aad
leave
add
mov
sbb
mov
xchg
add
inc
stos
je
int3
imul
and
mov
jno
add
push
inc
sub
xor
add
mov
nop
cwtl
jg
mov
inc
xchg
xor
xchg
pushf
inc
pop
fsubr
out
inc
and
data16
loopne
adc
test
sub
ds
fmuls
push
lret
iret
mov
xchg
lock
add
sbb
xchg
inc
pop
inc
jo
fnstsw
pop
inc
inc
lret
lahf
add
xchg
cmp
frstor
out
repnz
or
testb
mov
cli
daa
add
jnp
xchg
cmp
in
push
lret
sbb
adc
sbb
cmp
jae
dec
imul
std
pop
dec
pop
fisubs
rcrb
testb
out
sub
shl
pop
add
rcrb
fcoml
cmp
out
lods
mov
adc
mov
lcall
push
add
fistps
rcll
lret
sbb
mov
xlat
ds
xlat
dec
call
movsb
fidivl
jae
cmp
js
out
arpl
push
sub
mov
xorl
xchg
add
sbb
loope
repnz
movsl
lds
in
shll
ljmp
loopne
push
dec
outsb
xlat
enter
hlt
test
add
ja
pop
sti
sbb
popa
loop
in
jmp
shll
jl
add
daa
sub
cmp
mov
pop
addl
and
xor
jb
dec
fidivrl
in
int
mov
push
dec
push
rorb
jge
scas
xchg
rcll
int3
lods
cmp
pusha
cmpsb
xchg
and
mov
add
sti
xchg
mov
int3
push
jo
filds
test
mov
das
mov
add
inc
pop
loopne
mov
xchg
add
pop
into
sar
pop
and
loopne
jp
into
and
mov
jle
jle
sahf
fstl
fs
jmp
jns
push
das
test
add
subl
add
mov
sahf
push
hlt
and
dec
in
mov
lret
negb
or
jnp
xchg
sub
arpl
sbb
adc
andb
jb
pop
adc
insb
xor
add
test
xchg
scas
mull
sbb
jae
sbb
pop
push
popf
jb
je
inc
lods
icebp
loopne
inc
cmp
notb
arpl
xchg
nop
adc
mov
arpl
jnp
bound
add
jno
popf
mov
xor
xchg
out
and
cmp
gs
xchg
adc
pop
mov
lcall
push
xchg
inc
sbb
fstl
sub
mov
into
jno
movsb
jo
xchg
xchg
push
push
xor
shlb
mov
push
xlat
inc
test
test
inc
xor
flds
push
xchg
xchg
xor
and
daa
insl
icebp
js
enter
pop
mov
sbb
fistpll
inc
addr16
add
inc
dec
sbb
adc
aad
ljmp
mov
and
repz
mov
sub
mov
push
mov
movsb
cmpsl
lock
and
sbb
mov
add
xchg
inc
mov
pop
xlat
lret
aas
cmp
in
sahf
lock
into
sub
dec
lock
mov
mov
jbe
fcmovnu
test
mov
iret
aaa
lcall
inc
sub
fsubrs
push
addr16
sub
stos
mov
test
out
idivl
add
int3
cld
jp
movsb
jl,pt
push
scas
or
jnp
pop
arpl
mov
orb
in
fistl
cmp
call
cld
aam
cmp
mov
inc
scas
xchg
mov
or
jno
dec
daa
orb
sub
les
sub
sar
xor
popf
xor
sbb
xor
mov
push
mov
ficoml
lret
xor
sub
inc
inc
sar
or
sti
pop
pop
cltd
shlb
arpl
push
mov
sub
int3
push
add
xchg
pop
repnz
ret
fstps
lea
add
repnz
shll
addr16
std
sbb
test
dec
std
jne
push
and
mov
loop
cld
pop
out
iret
or
push
mov
aam
push
sub
mov
xor
and
inc
stos
xlat
dec
sarl
arpl
in
fwait
adc
mov
ret
mov
aad
jle
popf
ret
push
cld
sub
jp
fcomps
cmp
pop
dec
dec
shl
cmp
jl
cmc
add
insl
ds
filds
sbb
loope
ret
gs
outsb
or
sbb
dec
data16
scas
pop
cli
mov
xor
pop
sahf
std
xchg
repnz
jl
pusha
iret
pop
test
adc
add
cld
xor
jns
pop
mov
shl
pushf
sbb
push
es
popa
xor
divl
cmp
test
mov
mov
fbstp
ja
aaa
push
mov
lds
bound
mov
push
insl
bound
sbb
push
rep
and
dec
jns
das
and
lods
xor
or
push
jns
push
xchg
sub
pop
insb
in
or
dec
jp
and
inc
pop
and
pop
data16
sarl
imul
push
cmp
mov
movsl
mov
shrl
int
mov
add
mov
je
mov
nop
in
divb
sbb
add
dec
imul
sub
xor
jno
jge
loop
clc
scas
lahf
add
sbb
rcll
inc
push
pextrw
mov
loope
sub
sbb
movsb
lods
shll
aam
shll
jnp
jge
aas
xchg
repz
inc
daa
inc
imul
inc
int
cmp
in
daa
outsl
pop
xlat
mov
pop
push
mov
pushf
mov
ds
repz
xchg
mov
push
sub
insb
les
fistl
sub
mov
stc
mov
icebp
xlat
xchg
ds
loope
ljmp
enter
pop
cmp
fiaddl
test
add
rcr
jo
imul
jo
and
cltd
dec
pop
jno
aam
pop
daa
mov
add
dec
out
daa
jge
arpl
push
test
inc
lock
adc
push
andb
xor
es
xor
ds
out
outsl
mov
test
fcoms
cs
add
mov
mov
test
lods
insb
mov
fimuls
mov
test
jnp
aas
mov
jg
adc
mov
mov
jl
inc
lods
lock
push
sahf
add
popf
mov
push
hlt
sub
pop
icebp
lock
negb
into
sarl
fildl
test
lcall
lds
jnp
mov
jae
nop
and
cmpl
lea
lret
bound
xchg
xor
inc
fists
int
sub
xchg
mov
push
into
jle
int3
or
adcb
sub
push
push
popa
mov
sbb
or
jnp
add
jmp
roll
adc
int
mov
add
inc
cs
jne
or
int3
mov
shlb
scas
mov
jle
adc
push
inc
sbb
outsb
in
push
inc
mov
cmp
test
push
add
inc
gs
jnp
shrb
ljmp
rcll
test
xchg
jge
lock
ja
sub
jbe
mov
or
hlt
cmpsb
sub
and
inc
rclb
pop
xlat
jbe
sub
cmp
bound
cltd
je
sbb
push
dec
push
cmp
dec
sub
jmp
add
xor
pop
mov
sbbl
push
les
and
cmpsb
jae
xchg
mov
lret
jecxz
mov
movsl
mov
mov
int3
push
std
sub
out
cs
test
or
aaa
add
lret
hlt
push
pop
popf
bnd
in
xchg
xor
cmp
cmp
or
hlt
sub
and
fwait
sub
sbb
mov
mov
adc
or
jge
loop
nop
clc
int3
jl
dec
insl
mov
stc
in
scas
mov
jle
push
sahf
xchg
adc
pop
jl
adc
mov
dec
fdivl
cmpsl
jb
adc
and
repz
outsb
jbe
in
imul
push
lods
into
dec
pop
int
clc
icebp
int
mov
ret
inc
shl
fsubrs
dec
sti
xchg
cwtl
pop
adc
sbb
mov
aam
hlt
aas
add
or
orb
inc
mov
pushf
out
dec
shlb
jo
pusha
int3
inc
mov
and
mov
fsts
repz
xchg
xlat
jb
sbb
pop
imul
cltd
pop
std
adc
jo
fmull
inc
cmpsl
insl
ljmp
jae
push
movsb
mov
lods
dec
fwait
push
mov
mov
pop
js
loopne
add
push
shl
fdivrs
sub
ss
int3
test
cmc
ffreep
rcl
mov
stc
scas
outsb
sub
push
fiadds
and
int
sub
std
sarl
stos
jmp
bound
mov
test
mov
xchg
ds
inc
pop
popf
and
es
test
and
jge
xchg
mov
cld
lods
imul
xor
mov
sub
cmp
and
stos
mov
mov
ret
imul
dec
or
stc
xchg
pop
dec
std
mov
clc
xchg
or
es
jecxz
clc
es
mov
jno
lret
rolb
rol
lret
mov
mov
sub
pop
or
sahf
clc
repnz
loope
cmp
xchg
dec
inc
push
insb
cmpb
clc
dec
push
out
scas
xchg
fs
hlt
lods
xor
es
movsl
pop
lahf
pop
fwait
arpl
push
push
dec
fwait
es
and
in
dec
inc
ret
mov
mov
jns
inc
fidivrs
movsl
aas
xchg
pusha
jle
mov
cwtl
push
je
out
mov
mov
dec
pop
dec
sbb
mov
xchg
sbb
lock
testl
rorl
js
popf
add
out
jge
fcomps
aaa
mov
roll
sbb
push
leave
ret
repnz
loop
xchg
xor
test
inc
push
or
cs
sbb
imul
jle
mov
loop
jecxz
cli
popa
lock
dec
outsb
sub
loopne
mov
loope
xchg
hlt
fdivrl
movsb
sub
jnp
inc
bound
es
inc
ret
out
jp
push
cmpsb
repz
std
bound
xchg
mov
loopne
out
push
fwait
out
inc
lods
inc
popl
stos
jl
fistps
cmp
cld
int
mov
pushf
mov
and
lods
lahf
mov
rorl
xchg
push
out
push
cltd
mov
cmc
aam
inc
mov
repnz
data16
in
cmp
push
or
mov
mov
dec
loope
movsl
incl
stos
fisubrs
xor
mov
jb
push
pushl
loopne
stos
pushf
add
int3
add
xchg
testl
sub
or
data16
rorb
loopne
push
cmp
lcall
jge
sub
mov
cmp
dec
pusha
pop
ret
adc
rol
xlat
sub
test
outsl
jne
push
mov
adc
arpl
adc
mov
stos
xchg
nop
fwait
xlat
inc
cmc
out
or
adc
stos
cmp
mov
mov
mov
or
movsb
inc
and
pusha
pop
or
add
testb
movsb
scas
jnp
lret
adc
test
dec
dec
ret
ljmp
ret
dec
jle
test
jmp
jne
into
movsb
les
ja
stos
lahf
jge
adc
pop
shr
jno
cmp
les
lea
lods
mov
jecxz
sti
push
in
mov
sub
insb
xorb
xorl
cmpsl
dec
sbb
cmpsl
xor
je
pushf
push
lret
mulb
mov
fstpt
loop
stos
push
loopne
imul
jnp
push
jne
aad
push
outsb
pusha
cmp
negl
sub
and
mov
cwtl
cmp
shrb
arpl
shll
pop
clc
pusha
inc
out
ret
fdivs
subl
add
clc
dec
ret
insl
aas
js
popf
xchg
sbb
fwait
or
sbb
decl
cmovs
jg
ret
mov
inc
mov
pop
jae
xchg
mov
rorl
add
add
sub
ror
adc
mov
mov
movsb
xchg
inc
jg
jb
dec
ret
pushf
movsb
int
lods
int
stos
out
xor
shlb
cmpsb
frstor
sbb
dec
enter
or
cli
mov
xor
movsb
xchg
mov
popf
sub
lcall
jp
mov
push
sahf
adc
pusha
sahf
sbb
sub
movsb
lock
cwtl
out
scas
in
hlt
add
orb
loop
jbe
xor
sub
fcomps
lcall
sarb
dec
shrl
test
cmpsl
ljmp
xchg
mov
adc
push
push
xchg
inc
pop
addr16
sbb
insl
lret
out
movsl
push
add
stos
jl
daa
mov
dec
mov
ret
into
cmp
ret
loop
push
and
mov
push
fidivrs
fcomip
fsubr
les
cmpsb
push
xchg
pop
cmpsl
dec
mov
into
daa
ss
outsb
pop
nop
or
stos
subb
es
stos
inc
jae
push
xchg
in
xchg
and
mov
jle
mov
sub
mov
push
dec
imul
stc
inc
and
pop
and
and
jo
sbb
mov
and
dec
leave
shr
or
mov
data16
iret
or
cltd
sub
adc
ficoms
aam
mov
xchg
fstpt
lock
dec
gs
sbb
or
aam
out
popf
pop
out
jl
cmp
xor
aaa
or
jb
xchg
cli
pop
cmovs
roll
cmp
jns
sbb
sbbl
sbb
movsb
in
sub
xor
addr16
mov
dec
sahf
push
mov
mov
dec
lret
dec
ljmp
xchg
or
jne
jb
adc
adc
jmp
pop
dec
mov
inc
mov
imul
aaa
scas
xchg
lods
mov
ss
insl
call
xor
dec
es
loopne
int
xchg
mov
sub
mov
repnz
mov
in
xchg
push
push
in
dec
repnz
fs
aas
arpl
xchg
inc
xchg
mov
dec
cmp
inc
ja
sub
mov
bound
addr16
fcoms
imul
loopne
xchg
sub
in
add
xchg
and
lretw
ds
or
pop
fstpl
notb
cmc
out
cs
aas
adc
lods
add
std
das
mov
mov
mov
pop
push
test
fs
sbbb
sub
ret
dec
mov
xchg
fs
dec
adc
inc
ljmp
daa
sbb
test
test
cmp
es
fisttpll
bound
sub
pop
shll
cli
icebp
cmp
push
scas
nop
xchg
jns
clc
ljmpw
add
push
clc
pusha
xchg
cmpb
xchg
xor
jg
mov
push
mov
es
push
sarl
cmc
cmp
add
lea
or
imul
sbb
in
push
out
mov
fs
add
dec
btr
or
push
and
push
es
fcomps
je
popa
mov
cli
jmp
mov
push
loop
lock
aam
stos
jmp
fs
fiaddl
cli
repnz
in
pcmpgtd
movsl
push
adc
daa
xchg
push
push
cmp
or
and
sahf
cmpl
aam
add
aas
in
fcom
xchg
sbb
mov
hlt
cli
mov
sbb
adc
cmc
icebp
inc
push
test
stos
xorb
push
or
xchg
cs
mov
add
xor
xor
push
jecxz
loope
push
mov
jge
push
enter
inc
push
push
jp
lods
movsb
jae
int
sub
push
jnp
test
add
sub
add
popa
dec
js
ljmp
pop
sahf
dec
outsl
in
push
cmp
mov
mov
xchg
loopne
stos
or
add
cs
mov
pop
imul
mov
js
mov
fidivl
jae
xchg
lret
sub
push
cwtl
mov
imul
adc
sbbl
sti
imul
es
roll
push
rcrl
aas
inc
add
push
mov
int3
lock
enter
jo
pop
mov
orl
dec
xchg
push
or
mov
jae
add
inc
les
mov
int
lock
sbb
sub
mov
add
add
sti
iret
pop
fs
sbb
mov
mov
mov
ss
push
inc
sbb
mov
insl
adc
cli
shll
sbb
push
dec
dec
mov
jns
xchg
test
mov
inc
fnstsw
and
sbbb
sahf
repz
add
out
lahf
or
popa
or
xor
push
dec
aad
inc
out
push
jl
cltd
xchg
in
push
int3
cmp
lcall
sub
xchg
mov
jno
mov
push
xor
pop
mov
lods
jp
and
adc
es
pop
fs
adc
xchg
test
ja
cmp
sarb
sub
cs
xchg
lea
es
sbb
lock
fwait
sbb
je
jp
mov
push
outsl
lret
test
jle
dec
xchg
jmp
into
adc
push
in
cmp
daa
hlt
lcall
pop
loop
push
push
jns
pop
mov
sub
pusha
xchg
idivb
fwait
loope
adc
ds
mov
jbe
aaa
pop
idivl
mov
arpl
jo
insb
and
shrl
addr16
iret
xchg
mov
add
dec
mov
sbb
inc
decb
dec
nop
xor
sub
ret
aad
mov
dec
mov
mov
mov
xchg
xchg
sti
jl
clc
inc
cmpsb
dec
sbb
and
inc
mov
iret
lock
push
cvtps2pd
imul
hlt
xchg
jne
lcall
adc
push
daa
fcmovnb
lret
leave
scas
in
mov
xchg
bound
incl
or
xlat
int3
add
cmp
shl
add
call
mov
dec
lcall
ds
cltd
movsb
ret
sbb
int
mov
push
and
pop
cmp
xor
addr16
rol
int3
stc
xchg
xchg
jbe
scas
pop
xchg
lea
loopne
pop
sbb
push
ss
popf
mov
push
mov
xchg
iret
sbb
mov
inc
pop
aas
cmp
adc
stos
mov
dec
sbb
loop
xchg
mov
repnz
push
or
sarb
mov
push
mov
lock
sub
push
hlt
imul
outsb
cmp
and
arpl
dec
out
mov
in
out
lret
cmpsl
jne
cmc
push
lock
cmp
jg
sub
mov
repnz
ds
stos
mov
mov
out
mov
shlb
pop
insl
cltd
scas
aad
or
test
add
test
repz
aad
or
sub
mov
in
test
cmp
stos
sub
and
mov
aas
push
insb
mov
inc
faddl
jo
loop
mov
fistpl
xor
ljmp
cmc
push
add
leave
and
add
push
push
fwait
sbb
cli
fidivrs
jns
adc
or
stos
jno
scas
loope
faddl
mov
pop
inc
int3
sbb
test
imul
in
repnz
loopne
rorl
pop
sbb
mov
sbb
stos
and
mov
mov
lds
xchg
or
adcl
js
std
test
ljmp
mov
mov
jmp
push
iret
movsl
xor
dec
aam
push
icebp
enter
mov
jmp
ds
xor
or
cwtl
push
fnstcw
icebp
int3
and
ficoms
into
popf
or
xor
inc
fildll
fstpl
ficompl
xchg
in
es
jns
lahf
pop
mov
push
popa
pop
js
mov
mov
jnp
imul
jp
repnz
andb
punpcklwd
xor
punpcklwd
je
les
popa
rcll
cmp
ja
test
shrl
imul
dec
push
jb
push
jne
jg
stos
daa
jb
add
mov
jo
pop
sub
idivb
nop
or
testl
shlb
push
repnz
and
mov
outsl
ljmp
jo
add
out
inc
add
jge
cmp
xor
pcmpeqb
mov
out
fldl
jo
push
aam
arpl
dec
dec
pop
add
sbb
or
mov
jbe
mov
pop
in
jmp
adc
cmp
jno
push
xchg
rolb
inc
std
or
pop
or
xchg
jg
pushf
jle
mov
and
push
mov
push
or
mov
inc
add
inc
mov
mov
jo
ds
add
pop
in
sbbb
int
or
sti
pop
daa
ret
inc
dec
mov
xchg
pop
cmpsb
out
inc
mov
mov
dec
jl
popa
jo
dec
cmp
inc
test
add
cmpsb
sbb
add
and
jo
data16
xchg
mov
cmpsl
adc
repnz
rcrb
xchg
loope
xor
scas
cmp
push
pop
in
cmpsb
inc
subl
sti
arpl
loope
cmp
push
aaa
test
jb
mov
lahf
xorb
daa
scas
sub
dec
enter
aam
js
fstpl
ss
inc
jbe
mov
cmp
pop
inc
aad
call
mov
js
out
push
repz
mov
mov
jae
cmc
shlb
dec
out
icebp
cmc
aaa
and
rcrb
adc
repz
add
push
mov
push
xor
mov
rol
leave
mov
jecxz
adc
and
dec
loope
inc
rorb
cmp
out
lret
notl
ds
or
sbb
push
das
jge
out
push
and
divl
es
jl
cmp
in
mov
ljmp
xor
stos
lea
icebp
xchg
es
lret
test
mov
push
mov
pushf
fisttpl
cmpsb
add
dec
sub
xor
add
sub
movsb
sbbb
mov
in
fisubrs
pop
es
xlat
and
pop
nop
mov
mov
sti
sbb
dec
sbb
dec
das
fld
jp
inc
nop
sbb
adc
stc
aad
mov
loopne
inc
sub
iret
call
cmc
ret
dec
lret
lret
push
dec
xor
jg
add
or
mov
xor
mov
sbb
les
push
fcomps
pushf
aam
pop
negb
cld
pop
pushf
xlat
push
outsb
xchg
mov
xor
outsb
xor
stos
test
fs
rcll
fcmovnu
jl
cmp
sbb
fsub
and
ss
shl
push
repnz
sub
ror
stos
lock
in
lods
ja
push
in
jmp
ds
cs
ret
jne
and
adc
or
jg
pop
lods
lea
push
test
lods
jp
push
scas
xor
das
insb
notb
aaa
dec
sub
mov
add
test
pop
fwait
jmp
jno
out
dec
dec
xchg
cltd
lods
mov
xchg
into
pop
cli
xchg
xchg
hlt
les
mov
cli
push
mov
sub
stos
pop
mov
cmp
and
aam
divl
sub
and
push
cmpsb
icebp
int3
or
rclb
dec
and
pop
xchg
add
or
lds
in
pushf
and
ret
addb
dec
jle
cmpsb
icebp
fistpll
sbb
testb
dec
gs
adc
sahf
outsl
nop
and
pop
mov
mov
inc
dec
or
xchg
jbe
in
ja
cs
mov
enter
in
dec
lret
cmpsb
sub
data16
xchg
jecxz
fistl
rorl
scas
or
push
mov
sbb
xor
sbb
adc
adc
inc
cld
repnz
mov
popa
ss
and
jo
push
fidivl
mov
pop
sub
ss
cmp
push
dec
mov
enter
add
push
adc
cmp
add
xor
out
push
nop
movsl
pop
jecxz
add
mov
imul
ljmp
repnz
xor
push
in
xor
or
dec
cmpsb
mov
push
dec
pushf
popf
in
and
adc
push
lea
idivb
xor
int
int3
lret
sbb
hlt
pushf
mov
insb
in
mov
aam
test
sbb
loop
and
xor
or
test
aaa
xchg
mov
sub
notb
sub
xchg
hlt
push
imul
jbe
jae
dec
sti
xchg
jle
lods
xor
add
xchg
scas
rorl
test
int3
dec
bound
or
popl
popf
sahf
ljmp
mov
ffreep
xchg
cmp
js
notb
popf
inc
pop
push
adc
frstor
mov
sarl
lods
je
push
out
adcw
lds
idivb
mov
sbb
addr16
in
ret
nop
adc
and
sbb
dec
cmp
sub
pop
fdiv
ss
call
pushf
cs
lds
cwtl
xchg
sub
xchg
les
int3
push
leave
fwait
mov
xchg
loope
enter
lea
aam
scas
inc
mov
dec
out
ret
cmpsb
mov
lock
aam
inc
and
mov
cltd
stc
mov
xchg
jno
mov
subb
cmp
mov
jmp
fistl
inc
inc
push
xlat
std
jge
ljmp
mov
inc
aad
sahf
jb
xor
lret
push
xchg
lahf
xchg
dec
xlat
mov
sbb
inc
xchg
js
test
pusha
inc
stc
xchg
sahf
out
cmc
andb
pop
xor
je
cltd
div
enter
jno
or
pop
push
dec
aaa
adc
out
fwait
xchg
adc
std
popf
rcrl
jae
push
mov
mov
xchg
xor
shlb
popa
repz
push
dec
imul
add
ret
jae
sub
lods
js
out
inc
pop
addb
icebp
xchg
pop
xlat
out
sahf
jl
shlb
cmp
popa
xchg
addb
xor
je
lcall
nop
cmp
and
je
aam
push
inc
add
shrl
mov
xor
insl
stos
push
or
int3
xor
stos
cmpsl
mov
or
lods
xor
jnp
inc
ret
in
mov
cmp
aas
repnz
xchg
dec
sahf
sti
gs
jecxz
add
fadds
repz
imulb
es
andb
pop
shr
test
cmp
cli
fwait
jp
outsl
jl
push
shrb
test
shlb
sub
jmp
scas
sbb
scas
pop
mov
xor
mov
iret
arpl
add
lret
sbb
and
mov
loop
aaa
test
add
jecxz
aaa
jo
hlt
cmp
sub
sub
xor
in
sbb
sub
lret
cltd
scas
fnstsw
lds
add
call
fcmovnbe
adc
adc
and
xchg
sahf
fucom
mov
addr16
or
add
insb
jle
or
mov
xor
or
lcall
mov
leave
insl
insl
or
pop
sbb
jecxz
jp
clc
aad
ds
into
outsb
push
xchg
out
xchg
dec
dec
cmpsb
mov
sarl
adc
out
inc
xlat
xchg
xlat
icebp
js
nop
mov
imul
push
clc
push
and
out
testb
movsl
movsb
icebp
fnsave
adc
sub
cmp
mul
xor
loopne
sbb
jge
mov
jl
in
cltd
cmp
xor
cmp
popf
mov
fdiv
push
dec
sbb
sub
aam
xor
shlb
xchg
and
stos
pop
movl
inc
in
sarb
jp
mov
xchg
add
sbb
daa
mov
mov
lea
mov
cmp
decb
xor
xorl
mov
pop
shlb
xor
imul
pop
xchg
test
bound
xor
push
decb
xor
out
add
lret
xchg
scas
test
les
rolb
xchg
notl
mov
dec
repz
push
call
mov
ja
lock
add
in
mov
je
xor
jne
adc
es
int
je
cmc
es
push
mov
movsl
adc
add
mov
cmpsb
sbb
imul
jg
dec
and
repz
dec
pop
xlat
xchg
sti
adc
out
iret
ljmp
cwtl
sub
out
add
sbb
repz
jns
or
xchg
and
lods
mov
sbb
mov
push
enter
add
mov
sub
in
cmp
inc
gs
aad
or
dec
add
and
aam
push
mov
pop
fs
pop
in
insl
adc
insl
sbb
mov
ret
add
jae
xchg
iret
dec
push
les
or
cli
ficoms
xor
insl
dec
mov
jae
lods
andl
xchg
shl
call
ret
and
test
adc
mov
mov
lret
rolb
mov
jns
ljmp
bound
mov
add
xchg
push
add
fldt
clc
aaa
lea
add
and
push
sub
ret
popa
xchg
or
mov
lcall
and
xchg
aam
inc
inc
pop
xor
scas
pop
ret
add
call
pop
or
add
scas
sub
cmpsl
ja
lret
or
les
xchg
dec
mov
dec
outsb
shrb
sub
xlat
sub
fmuls
fldcw
loop
push
mov
in
stc
add
sbb
nop
sbb
or
adc
neg
aas
pop
cmp
or
dec
ss
loope
lcall
mov
orl
pop
cwtl
notl
lcall
sbbb
lds
test
nop
imul
jl
insl
xchg
shl
and
rorl
cwtl
out
or
pop
dec
dec
subb
fcmovnbe
insl
xchg
xchg
loop
xor
inc
cmp
push
inc
inc
shrb
mov
mov
xchg
mov
or
dec
inc
mov
ficoms
jns
push
ljmp
leave
bound
jb
out
jge
mov
mov
clc
sti
ret
std
enter
jecxz
lods
push
imul
jne
mov
dec
aaa
lods
idivb
out
xchg
dec
cmp
and
out
in
pop
cmp
adc
hlt
fwait
push
push
push
sti
inc
sarl
mov
xor
lret
xor
inc
and
shlb
mov
pop
jmp
ja
push
sbb
mov
pop
cli
test
test
lods
or
jmp
int3
cmp
mov
divl
sub
dec
iret
dec
cmp
inc
push
or
dec
xor
rol
test
scas
addl
std
jns
cs
or
mov
sub
clc
xchg
xor
insb
sbb
nop
cmp
and
mov
ret
shrl
xor
dec
dec
test
data16
cli
repnz
inc
insb
mov
pop
adc
mov
and
and
pusha
test
adc
dec
pop
jb
inc
mov
lcall
dec
cmpsb
inc
sbb
add
test
stc
xchg
aaa
repz
xchg
lock
push
or
or
nop
pop
xor
mov
mov
add
jge
cld
mov
les
mov
dec
inc
insb
lods
fbld
stc
adc
cmp
orb
insl
mov
add
jbe
jb
loopne
aaa
loope
iret
pop
clc
arpl
xchg
cld
js
cmp
shrl
inc
xor
shrl
jnp
and
popf
and
xor
lret
jns
adc
mov
fisubrl
aaa
mov
cmp
mov
and
gs
jl
in
call
xchg
dec
fldl
ret
mov
cmp
add
lret
pop
cld
bound
inc
stos
jmp
imul
pop
jnp
movsb
jae
xor
or
into
mov
pusha
outsl
pop
scas
cmp
push
pop
les
dec
and
xchg
mov
dec
xchg
xchg
sbb
imul
and
movsb
jl
cmp
lcall
cmpsl
repnz
push
xchg
and
push
xor
stos
sbb
push
ja
out
sbb
pop
sbb
add
inc
addr16
out
mov
mov
jb
in
adc
sub
pop
pop
int3
jo
das
aad
stos
leave
pop
andl
jne
test
push
rcrb
pop
push
ljmp
xlat
and
divb
mov
lea
jmp
push
mov
shrb
shll
es
aam
jns
rclb
fs
push
sbb
pushf
imul
out
cmp
fsubr
jne
in
movsl
xchg
movsb
cmp
pop
outsl
int
imul
jns
mov
subl
dec
pop
mov
push
iret
ror
dec
nop
clc
lret
out
rolb
mov
xchg
ret
movsb
adcl
sub
ja
sbb
fmuls
test
cmp
mov
push
into
push
jo
add
jb
fdivrs
std
push
sub
sub
push
lret
jbe
sub
push
dec
and
and
mov
sub
adc
and
or
sbb
mov
clc
push
iret
lock
lret
popf
aad
mov
ret
scas
pop
popf
sbb
adc
fists
push
jmp
nop
jbe
in
xchg
push
rorb
rcll
mov
push
test
pushf
mov
mov
icebp
stos
jno
lcall
cmpsl
cmp
push
inc
gs
xor
aas
out
push
rcrb
cmp
stos
fwait
aaa
shll
push
out
pushf
dec
pop
xchg
mov
adc
mov
inc
cwtl
ljmp
mov
sbb
adc
sbb
push
sarl
rorb
pop
fidivs
xor
push
push
fstl
sub
adc
fs
push
sahf
es
lcall
mov
xor
xor
movsl
dec
xchg
mov
insl
popf
lock
adc
mov
and
adc
in
aam
cmp
nop
jo
mov
mov
mov
aaa
cs
inc
out
adc
push
jle,pn
inc
pop
shrl
out
loop
ljmp
adc
inc
push
mov
pushf
movsb
fistps
je
inc
dec
xlat
bound
stos
mov
mov
lahf
sbbl
adc
iret
mov
lods
addr16
and
test
data16
cli
movsb
ljmp
cmp
mov
xchg
xor
popa
ljmp
stos
xchg
bound
out
pop
mov
adc
jmp
daa
out
add
add
adc
ret
mov
fdivrl
push
pop
mov
jg
push
sahf
ds
mov
cltd
and
and
repz
sbb
pop
xor
fisubrs
push
movsb
or
sub
jae
fmulp
adc
pusha
stos
rcll
cmp
and
shll
das
cmp
sbb
xchg
lret
cmp
loopne
int3
jnp
push
push
pop
add
daa
lods
jecxz
mov
test
popf
ficoms
ret
xor
jmp
xor
xchg
loopne
out
sub
dec
dec
test
and
stos
out
js
lcall
xor
cli
aad
jl
adc
fsubrs
mov
push
loop
fidivrl
popf
xchg
mov
and
mov
cmp
fcompl
imul
sub
push
mov
push
enter
lret
dec
mov
aas
dec
idiv
fwait
jnp
push
cmp
daa
xchg
stos
dec
or
leave
xlat
sub
and
fwait
andl
sbbb
insl
icebp
and
js
xchg
imul
push
leave
xor
in
or
mov
jae
arpl
mov
xor
imul
xchg
ljmp
ljmp
dec
test
movsb
dec
xchg
mov
test
mov
xor
pop
mov
or
cltd
sbb
push
add
loopne
jo
rorb
xchg
je
push
push
scas
xchg
idivb
insl
inc
mov
dec
popf
cld
cli
insl
mov
add
dec
mov
or
js
sbb
xor
das
shr
inc
push
hlt
or
pop
fisubl
popa
cld
or
fsubr
dec
sbb
ss
imul
mov
push
ljmp
cmpsb
in
call
lret
push
gs
call
adc
pop
xchg
pushf
mov
mov
inc
inc
ret
bound
push
lret
inc
adc
push
in
add
roll
xchg
mov
or
ss
lahf
push
fdivp
out
mov
test
aaa
fs
mov
icebp
inc
notb
push
iret
adc
pcmpeqd
push
out
dec
enter
fadd
mov
push
xor
aam
mov
mov
push
sbbl
dec
xchg
lcall
aaa
mov
loope
shll
aas
rclb
push
scas
cmpb
arpl
xchg
lds
out
lret
push
inc
outsl
lods
jmp
sbb
aaa
mov
ja
adc
adc
xchg
cltd
mov
lret
adc
lcall
ret
add
cs
sub
es
inc
or
std
movsl
jns
fs
fistpll
jl
outsb
cmpsb
pop
mov
js
sub
jl
or
bound
mov
jge
dec
cmpsb
imul
jnp
xor
sbb
sahf
pop
dec
daa
jg
xchg
pop
and
xchg
xchg
ret
roll
adc
push
fiaddl
loopne
adc
dec
scas
mov
movsl
or
testb
cmp
and
in
xchg
pop
and
jne
cmp
pop
jno
inc
repnz
adc
jmp
ss
es
stos
cmp
andb
dec
stos
push
das
cltd
mov
mov
cmp
or
out
mov
stc
sub
jmp
cmpsb
sbbl
fldenv
jae
mov
push
mov
test
addl
inc
out
stos
stos
xor
pop
xchg
add
and
nop
mov
xor
push
jle
cmpsl
sbb
jecxz
sub
inc
testb
insl
or
or
push
inc
add
cld
lds
inc
test
inc
lock
pop
rcll
inc
fldcw
cmp
hlt
dec
rorb
lods
adc
movsb
add
push
lds
ror
add
cmpsl
pop
xchg
fistl
pop
push
adc
mov
sbb
xchg
adc
sbb
sub
adc
das
rcl
xor
jo
sarl
or
fdivs
add
test
or
xor
loope
or
cwtl
xchg
in
and
xchg
aaa
lods
stos
mov
cli
int3
sbb
in
aad
mov
cld
jl
fbstp
ss
add
std
ss
call
pop
test
or
in
lods
sbbl
add
push
add
xor
pop
sub
add
inc
xor
cmpsb
cmp
aad
adc
and
jmp
xchg
sbb
inc
sub
jnp
push
pop
lcall
cmpl
stc
dec
adc
aas
in
pusha
cmp
addr16
bound
fidivl
mov
push
push
scas
cmpsl
xchg
inc
das
jecxz
push
mov
aam
int
mov
in
push
pop
shrl
push
dec
nop
mov
jb
or
lods
cmp
push
iret
adc
hlt
movsb
outsb
mov
jp
lret
push
in
nop
xchg
mov
shl
inc
fnstcw
mov
out
ror
data16
cmp
jp
movsb
adcb
mov
push
xchg
jo
jns
in
insb
clc
and
add
and
or
ret
or
cmpl
sbb
arpl
out
sbb
mov
movsl
jo
enter
dec
xor
xchg
adc
loop
out
or
mov
inc
outsb
inc
call
lahf
loop
xor
mov
rclb
or
pop
jg
pop
fs
mov
xor
fcmovnu
test
nop
sbb
jp
fwait
fs
icebp
xchg
add
adc
je
sarl
addr16
xchg
imul
arpl
fs
or
les
dec
xchg
xor
and
xchg
movsl
sub
adc
xchg
into
jno
leave
xor
push
or
shll
push
outsl
mov
add
pop
test
scas
lock
add
aam
aaa
orl
clc
es
fldcw
popa
push
mov
es
add
mov
cmpsl
inc
push
ficoml
roll
aaa
or
dec
dec
jbe
sti
jp
roll
cmp
pop
mov
pop
in
xchg
test
jnp
mov
addr16
mov
adc
cmp
mov
fbstp
ficompl
xchg
jecxz
dec
out
add
ja
ret
mov
cmp
inc
bound
cltd
mov
mov
sti
pop
mov
cmpsb
and
inc
cltd
adc
cmp
cmp
jae
cmpb
add
pusha
or
sub
push
fldenv
enter
mov
popf
lahf
cmpb
lahf
sub
stc
sahf
mov
mov
jae
outsb
cmp
decl
gs
dec
sarl
out
xorb
push
mov
je
mov
test
jns
xor
mov
xchg
xchg
shlb
in
sbb
out
popf
xlat
cld
setge
repz
mov
lods
inc
lea
mov
shll
lret
or
imul
and
push
dec
push
pushf
lods
shlb
or
in
add
popf
fnstcw
jge
outsl
sbb
inc
push
adc
ljmp
xchg
mov
dec
mov
xchg
jne
in
dec
sbb
stc
adc
lds
into
xor
mov
fsubrs
pushf
andb
sub
sbb
sarl
mov
rorb
scas
sub
adc
cmp
xchg
popa
nop
lds
call
or
add
repz
sbb
and
lret
and
clc
pusha
mov
ss
fucomp
inc
ja
repnz
icebp
jo
ss
bound
mov
fstpt
and
push
cmpsb
and
int
and
inc
pop
lret
or
sub
or
push
inc
jns
movl
insl
push
in
nop
cmpsl
jne
mov
pop
addr16
dec
mov
stos
mov
jo
push
mov
pushf
push
pop
dec
mov
mov
jp
add
fwait
test
es
ds
daa
lds
push
cmp
movsb
mov
data16
ja
push
cltd
xchg
add
or
mov
add
sbb
xor
aad
stos
mov
xchg
flds
xchg
adc
out
or
arpl
dec
or
lcall
bound
adc
pop
push
and
mov
in
sub
xchg
fists
mov
in
call
xor
dec
mov
shll
dec
dec
out
popa
sbb
out
push
or
mov
je
and
mov
cmp
outsl
subb
dec
repnz
movsb
pop
xor
cld
ret
pop
mov
push
dec
fistpl
faddl
pop
xchg
hlt
arpl
xor
movsl
nop
inc
mov
sbb
cmova
fdiv
aad
mov
sbb
push
mov
dec
lea
fwait
inc
daa
aam
push
jmp
push
in
decb
push
das
scas
jne
pop
adc
adc
inc
dec
sub
jns
fs
sub
push
sbb
loope
pushf
mov
int3
mov
jno
lcall
fstp
mov
or
pusha
jmp
call
jecxz
mov
stc
adc
add
cmp
cld
aam
pop
xchg
lods
pop
jg
inc
std
pushf
inc
jmp
stos
in
sbb
mov
push
push
mov
insl
sbb
pop
sbb
mov
jno
repz
data16
or
sub
out
push
popw
outsl
movsb
push
add
mov
and
sbb
daa
pusha
or
imul
aam
or
push
add
cmp
add
cs
and
outsl
add
fs
addr16
mov
fldl
push
cmp
jp
mov
sti
sbb
jp
call
mov
loop
xchg
mov
mov
test
icebp
dec
sbb
jno
sbb
mov
and
inc
dec
outsl
lahf
orl
add
es
jae
adc
xlat
add
div
insl
sbb
push
mov
cmp
sbb
cmpsb
xchg
inc
pop
test
jns
fwait
in
push
popa
inc
add
jg
and
cmp
xor
sbb
sub
xchg
fwait
std
pop
inc
mov
andl
adc
push
xchg
cmpsb
popa
rorb
dec
ss
cmp
daa
mov
pushf
int3
loope
scas
cwtl
adc
lock
mov
jnp
cmp
push
dec
pop
subb
data16
mov
sti
and
out
testb
pop
jmp
std
cmc
ja
repnz
nop
sbb
bound
pop
pop
cmp
test
cmpsl
jno
js
in
mov
andl
test
fdivl
pop
inc
arpl
cmp
cwtl
inc
cmp
rcl
out
sub
lods
cwtl
in
subl
aam
insb
adc
xor
nop
and
sub
pusha
in
inc
dec
bound
and
aam
fldt
mov
in
fs
sbb
and
fisttpll
fnsave
dec
sbb
je
mov
rcrl
movsl
je
pop
and
push
test
adc
and
add
fs
std
jae
xlat
in
xor
jns
inc
data16
aaa
xchg
inc
jle
roll
test
lret
inc
inc
addb
xor
rcll
mov
push
loope
adc
scas
push
lea
cmc
mov
rorb
jb
daa
insb
pop
outsl
test
mov
ss
sarl
add
xor
adc
xchg
xor
pop
ljmp
lods
push
ficomps
rorb
ljmp
dec
fbld
scas
mov
sub
sub
js
xor
mov
mov
pop
mov
lret
xchg
test
movsl
and
test
inc
int3
adc
and
jns
cs
sbb
and
lcall
fcmovu
xor
push
add
aas
push
push
lcall
cmpsb
xor
addb
shl
inc
xchg
ds
sbb
or
xchg
sub
push
inc
insb
mov
lcall
pop
jnp
xor
outsb
xchg
inc
insl
mov
push
jae
lods
sub
sti
inc
aaa
dec
scas
mov
lods
push
jle
aam
xchg
inc
sub
inc
lods
jle
shll
add
push
jecxz
cmp
or
shrl
mov
movb
pop
jb
adc
outsb
lods
cmp
call
sbb
pop
into
movsl
addr16
sub
add
fldcw
mov
clc
mov
stc
push
pop
out
sarb
inc
shr
cmpsb
fnstenv
jge
mov
mov
mov
imul
fnsave
roll
sbb
in
adc
dec
xchg
xor
mov
loopne
stos
icebp
rcll
aas
sub
bound
mov
sbb
ror
int
pop
sub
push
jmp
sub
std
shl
les
adc
dec
mov
in
and
lds
cmpsb
fwait
add
and
fbstp
jmp
add
out
adc
jmp
dec
push
clc
jle
xchg
scas
test
jl
mov
sbb
push
iret
inc
ds
lret
cwtl
imul
icebp
ficoms
cld
out
sub
fldl
divb
shll
mov
push
push
mov
push
or
cmpsl
cmp
cmp
addr16
jns
idivl
adc
lods
lods
inc
pop
sbb
cmp
loope
dec
lods
push
xchg
xchg
sbb
add
lds
cmp
xchg
xor
mov
push
in
hlt
push
pop
mov
xchg
inc
pusha
imul
push
dec
lock
insl
push
inc
and
loope
mov
les
push
fistl
ret
jb
neg
jbe
pop
xchg
ss
stc
cltd
in
arpl
push
movsl
je
shl
pop
dec
jbe
in
stos
mov
lcall
dec
inc
test
sub
adc
mov
mov
loope
xor
ret
ljmp
out
int
dec
xchg
fisubrl
push
and
ss
jb
inc
cmp
in
pop
xor
dec
aad
or
adc
ljmp
mov
mov
sbb
jbe
adc
sub
or
and
out
rcr
cli
icebp
mov
loopne
cmp
mov
test
repnz
push
sub
add
jecxz
bound
shrl
adc
stos
push
scas
shl
dec
rcr
sub
lahf
aam
cmpsb
jecxz
bnd
es
mov
add
push
btr
xchg
dec
push
mov
pop
pop
dec
jmp
js
mov
cld
xlat
jp
fdivrs
out
ret
int
in
pop
mul
jl
aam
mov
xrelease
int3
repnz
std
sbb
push
mov
ret
inc
es
push
jnp
scas
jmp
pop
in
mov
sub
out
dec
sbb
sti
in
adc
mov
add
and
jle
lret
fwait
add
mov
fadd
add
adc
dec
and
addps
js
cmp
inc
xchg
inc
data16
test
mov
lock
adc
jno
add
sub
xor
mov
int
stos
push
fstpt
lcall
and
adc
insb
fildll
popf
xchg
out
mov
pusha
cs
test
scas
loope
adcl
loopne
mov
lahf
and
jno
inc
inc
jecxz
in
and
dec
and
sar
pop
cmp
push
adc
mov
push
stos
mov
mov
jne
subb
xorl
jp
xor
mov
xor
xchg
adc
pop
sbb
negb
sbb
push
js
add
iret
mov
lea
push
push
mov
pop
cmp
cmp
or
jmp
or
lcall
lret
ljmp
shll
shlb
insl
or
cwtl
cmpsb
push
sub
shlb
mov
cmp
cmp
cmpb
dec
cld
or
and
scas
jnp
notb
push
dec
inc
inc
testl
pop
xchg
cli
sbb
and
aaa
mov
lahf
mov
outsl
mov
repnz
jecxz
stos
popa
int
jo
lods
lret
int3
and
mov
xor
out
jne,pn
mov
mov
stos
xchg
in
xor
fcomip
cmc
fwait
mov
inc
adc
int3
lsl
or
sbb
je
add
test
pop
sbbl
dec
xchg
test
sub
dec
mov
int3
and
fcmovu
cmp
ds
sbb
xchg
lds
add
nop
lcall
mov
std
mov
das
xchg
hlt
mov
xchg
push
sahf
repnz
nop
dec
xor
imul
in
fwait
sub
lods
cmc
mov
out
sub
cmp
adc
pop
lds
pusha
inc
add
xor
stc
leave
lods
cmpsl
pop
stos
mov
push
push
or
jge
rcrb
push
shrb
inc
adc
and
push
cmpl
pop
xor
aad
or
jp
cmp
aam
sbb
add
inc
mov
pushf
push
add
jns
aam
shlb
jmp
jb
adc
movsb
push
inc
jp
and
sub
xlat
xor
cmpsb
lahf
call
jge
stc
xchg
mov
ret
push
inc
test
jmp
ret
fadds
inc
int
dec
cwtl
mov
inc
lret
fs
pop
pop
dec
or
cmp
movsb
shrl
mov
or
lea
xchg
stc
push
xchg
push
add
xlat
out
jns
and
notl
xchg
cmp
clc
pop
xchg
loop
fs
push
sub
mov
repz
dec
jle
sbb
jmp
sub
fisttpll
mov
lret
adc
mov
gs
jo
or
pop
test
ret
xchg
mov
jmp
adc
aad
or
lret
xchg
pop
cmp
pushf
add
mov
xor
pop
pop
jb
mov
jnp
inc
sub
inc
in
push
cwtl
lea
cmp
pop
cmc
push
xchg
mov
fcoms
rcl
jae
mov
jo
push
icebp
gs
dec
and
rolb
jle
addr16
in
cmp
out
scas
jl
mov
mov
cmpsl
mov
shlb
xor
cmpsb
test
sub
mov
lcall
xchg
add
pop
mov
gs
xor
ret
jb
sbb
add
mov
out
je
xor
cs
enter
pop
popa
ror
ljmp
and
pushf
popf
jp
jge
or
inc
std
inc
ss
inc
dec
out
icebp
push
cs
pop
mov
cmp
stc
lahf
fdiv
dec
adc
das
mov
mov
adc
pop
les
add
lods
inc
inc
dec
jne
mov
push
lods
or
shlb
sub
repnz
adc
sub
inc
sub
scas
fcomps
clc
jge
pushf
cmp
adc
cmp
lcall
push
mov
into
or
aam
jmp
mov
dec
and
or
sbb
mov
pop
pop
ds
scas
sub
rcl
es
mov
into
shlb
out
inc
mov
push
dec
enter
outsb
loop
xor
test
call
cltd
xor
cmpsl
and
in
mov
enter
fidivrs
call
daa
ljmp
clc
es
lret
add
inc
mov
loope
sbb
outsb
cmp
jne
jmp
jb
pop
out
mov
xor
cmp
lods
adc
xchg
mov
xchg
cld
movsb
cmp
mov
scas
pop
pop
mov
xchg
cmp
mov
cwtl
adc
inc
jg
rorl
in
add
out
shrb
mov
push
cmpsb
push
xor
add
and
test
jmp
out
shr
aad
fsub
ljmp
cwtl
mov
ja
in
lds
call
les
mov
xchg
pop
lahf
xor
mov
lods
and
cmp
mov
ss
jo
incb
add
mov
xchg
add
movsb
adc
pop
notl
push
jno
xor
shrb
pop
sub
cs
ret
jmp
mov
pop
icebp
ljmp
scas
xchg
jge
cmp
mov
and
jecxz
mov
jmp
negl
cmp
lods
sti
mov
jo
test
sub
push
adcl
mov
jbe
fisttpll
mov
jecxz
dec
sbb
sbb
test
std
and
call
inc
dec
movsb
pushf
mov
popf
xchg
xor
enter
mov
dec
sub
add
test
rorl
or
push
and
ret
inc
loop
mov
mov
cmpsb
test
mov
jmp
and
loopne
mov
mov
fs
mov
dec
arpl
pop
imul
movsl
stos
pop
popf
push
mov
mov
test
loopne
lock
stc
pop
dec
daa
push
stos
mov
push
add
out
pop
push
mov
or
push
stc
and
and
cli
push
jbe
or
test
mov
sbb
jmp
push
jecxz
outsl
dec
pop
or
pop
jno
lea
iret
pop
mov
in
push
sbb
sbb
dec
sti
add
repnz
outsb
jns
or
in
xor
loopne
fs
mov
in
lcall
and
inc
push
mov
pushl
xor
addr16
in
outsl
fwait
sub
xor
gs
subl
push
outsl
fisttpl
mov
cmp
pop
mov
int3
aad
icebp
and
in
mov
cmc
xlat
mov
out
pusha
cs
push
pop
call
ret
ljmp
xchg
cmp
scas
mov
pop
dec
jecxz
bound
push
insl
lret
aam
mov
shrb
mov
pop
or
mov
or
fildl
adc
or
adcb
fnstsw
or
sbb
cmp
or
dec
enter
scas
or
adc
mov
inc
sub
mov
pop
dec
fildll
test
out
pop
rclb
bnd
and
gs
inc
cmp
jge
movsl
push
cmp
insl
fwait
sar
enter
cmpsl
mov
nop
insw
popf
es
cli
add
adcb
sub
aaa
mov
jp
iret
lods
or
xchg
pop
jbe
mov
test
cmp
cmpsb
mov
dec
mov
shl
les
cmp
cmp
or
xchg
mov
loopne
fwait
xor
push
rcrl
movsb
or
rcl
mov
fsubrs
ja
jg
test
xor
add
add
xchg
sbb
cmpsl
test
aaa
jl
sar
mov
ret
gs
bound
pop
mov
popa
mov
rorb
out
mov
push
cmp
jmp
push
ret
mov
in
push
mov
push
paddsb
xchg
sub
xlat
repz
adc
and
mov
jge
or
dec
sar
arpl
pop
adc
je
jg
sub
loopne
xchg
dec
sbb
test
cmp
xlat
movsl
mov
add
ss
add
outsl
outsl
pop
adc
xor
popf
lods
pop
lds
xchg
repz
dec
cmpsl
pop
mov
dec
push
adc
cmp
xor
or
in
ss
add
ret
sbb
orps
adc
rcrb
negl
out
sbb
repz
stos
icebp
and
jle
jmp
inc
sbb
or
dec
mov
cs
les
hlt
insl
sbb
xchg
iret
pop
sub
cmp
enter
cmp
fidivrl
mov
or
jns
insb
push
iret
pop
lds
loopne
aam
lds
jne
jbe
lret
mov
cwtl
pop
out
and
sbb
xorb
mov
ret
cltd
std
js
mov
out
mov
sbb
cmpsl
push
stc
or
mov
pop
clc
inc
cld
sarb
popf
in
mov
mov
cld
dec
cmp
sbb
inc
dec
sub
pop
and
pop
push
in
push
andb
pop
mov
push
and
andl
negb
ljmp
in
xor
lock
xchg
negb
mov
add
xchg
js
ret
aas
jo
rcll
je
xchg
jns
call
push
and
adc
jne
xchg
dec
pop
data16
stos
or
scas
sub
or
imul
jl
adc
into
sub
pop
or
shrl
dec
aaa
aad
push
jmp
in
xor
shl
sbb
mov
ss
in
outsl
cli
push
fsubr
adc
mov
cmpsl
sub
fimull
xchg
xchg
test
call
mov
pop
arpl
sub
adc
lahf
add
push
xchg
aas
int
adc
filds
fwait
mov
adc
mov
popa
jno
cmc
nop
ss
sahf
fcmovne
arpl
xchg
and
mov
in
pop
ljmp
std
cli
xchg
imul
jo
mov
aaa
pop
jns
insb
adcb
sahf
lods
dec
test
ret
inc
gs
cmp
or
sbb
movsl
jns
aaa
cld
jle
aas
mov
jb
xchg
xchg
lods
push
cmpsl
ja
lahf
adc
or
scas
js
dec
cmp
or
xchg
jo
movsb
push
push
inc
enter
push
inc
sbb
in
jecxz
xor
loopne
cs
enter
out
insl
push
cmc
xor
cmp
fs
repz
aam
in
jnp
inc
daa
daa
lea
add
ret
nop
mov
aad
mov
xor
xchg
sub
call
mov
mov
lret
inc
jne
outsl
lret
xor
adc
cs
sbb
lock
xchg
jns
jecxz
push
inc
call
sub
lret
xchg
aam
and
bnd
pop
aas
scas
xor
sbb
sbb
push
xchg
mov
aaa
js
sbb
mov
inc
sub
dec
mov
int3
push
mov
shr
mov
dec
lds
enter
jo
and
call
or
aad
mov
xchg
add
ljmp
add
cmp
adc
std
mulb
cld
xor
mov
add
cmc
ror
cmpl
jne
fdivrp
pop
dec
orl
sub
push
jo
in
xor
and
sub
aas
and
sbb
pop
push
scas
xor
test
add
imul
ss
test
xchg
mov
jg
add
cld
or
or
outsl
mov
add
mov
push
cs
jle
add
adc
sbb
sahf
insb
in
mov
and
pop
sbb
fcompl
rorl
lret
addb
jo
jmp
add
push
outsl
mov
xchg
jne,pn
rorb
and
mov
rclb
jo
lods
in
jnp
pop
scas
xor
cmp
stos
jo
inc
inc
pop
ret
or
mov
sti
leave
xchg
data16
ret
cld
sbb
int3
subl
jo
mov
adc
cmc
mov
std
jnp
rorl
insb
cmp
sbb
and
fcoms
push
mov
jae
in
cmp
adc
jp
push
mov
push
mov
in
cmc
sub
sbb
cmp
and
repz
andl
test
adc
cmp
sahf
cmpsl
mov
out
test
xchg
shrb
sbb
pop
in
movb
les
xchg
jmp
adc
pop
push
cmc
add
pop
mov
pop
leave
lods
lret
adc
rcr
add
les
jns
fdivr
das
jg
int3
sar
mov
ret
cld
mov
stos
loop
faddl
out
mov
aas
in
add
pop
jle
in
loope
lds
nop
lods
popw
imul
daa
and
ret
cmp
lea
out
es
bound
adcl
xor
pop
push
je
fdivrl
push
pushf
test
outsb
push
xor
test
cmp
mov
stos
pop
repz
cmpsb
cmc
inc
push
rorb
dec
fdivrs
mov
in
pop
push
nop
ficompl
mov
int
mov
std
inc
cli
iret
jp
push
int3
dec
roll
sub
xchg
das
jmp
xchg
bound
movsb
mov
jo
lock
mov
std
mov
sbb
pop
mov
cs
cwtl
jno
mov
adc
mov
roll
xchg
mov
enter
sub
sarl
pop
fs
mov
mov
lret
mov
pop
out
xchg
out
add
movsl
sub
lock
and
scas
lods
push
cmp
lods
xchg
sub
inc
sbb
sub
mov
test
add
lret
loope
ds
mov
mov
fs
push
cmp
in
lret
adc
push
stc
insl
rcl
fistpl
imul
lcall
cmp
cmp
add
imul
or
xor
lea
sbb
xor
cmpsl
jecxz
mov
push
cmp
insb
into
xchg
ficoms
adc
pop
pop
and
je
sub
adc
mov
jle
mov
cmp
add
cmp
popf
loopne
ds
arpl
bound
out
shrl
test
cs
enter
pop
add
jmp
nop
adc
or
mov
shlb
cmp
inc
xchg
test
mov
iret
jmp
sub
ss
sub
mov
cmpb
dec
ficompl
in
arpl
jb
push
rcll
jge
leave
dec
popa
test
sub
in
pop
xor
js
pop
fsubs
sbb
lds
pop
dec
ret
mov
jns
pop
rcr
jnp
icebp
lcall
or
rcrb
std
xor
add
xor
fisubrl
mov
push
js
jg
or
mov
push
outsl
pop
pop
cmp
aas
mov
pusha
sub
adc
sub
repnz
call
lret
and
cli
mov
lods
ja
dec
mov
daa
and
mov
sub
inc
mov
pop
dec
push
and
fdivl
add
mov
out
dec
pusha
fists
aad
push
adc
inc
add
mov
roll
xor
scas
mov
aas
scas
hlt
jnp
adc
cmp
call
dec
fcmovbe
decb
insb
outsb
dec
cmp
pop
jg
inc
fdivrp
stos
mov
frstor
inc
sbb
loopne
pusha
cmp
inc
popf
sub
out
jge
xor
in
ret
dec
xchg
or
aad
xlat
lds
lcall
push
stc
and
test
icebp
sub
cmp
aas
dec
sub
data16
pop
fstpl
lds
jmp
jp
or
jp
and
insl
jge
xor
mov
or
jp
lock
and
dec
shlb
lds
lock
mov
mov
xor
jbe
jecxz
out
je
jb
xlat
movsl
lods
mov
xor
cmp
push
nop
pop
fstpl
add
fistpl
pop
aam
imul
outsl
dec
into
cmp
jbe
mov
sbb
dec
mov
pop
movsl
ljmp
jb
clc
jecxz
gs
pop
ret
sbb
out
mov
hlt
gs
lods
push
or
fbld
push
rcrb
enter
popf
inc
shlb
push
mov
jge
mov
lods
lods
cmp
mov
or
or
pop
and
dec
stos
int
inc
mov
outsb
jecxz
aas
in
outsb
dec
les
push
xor
jbe
push
stc
adc
sub
lods
cli
and
pop
ja
ljmp
sbbb
mov
xchg
pop
jge
and
ret
dec
sarl
cmc
fnstcw
jb
in
outsb
es
xchg
into
sub
push
lret
push
outsb
adc
jno
lret
aaa
xlat
orl
int3
mov
addr16
js
out
sub
das
test
xchg
mov
into
test
scas
bound
mov
add
mov
pusha
lock
loope
aas
iret
cmpsl
mov
test
mov
xchg
jb
pop
int
inc
cwtl
sub
mov
mov
sbb
scas
gs
mov
aam
jp
stos
push
adc
sub
jno
dec
movsl
pop
in
mov
hlt
jge
cvtdq2ps
lods
push
rcll
add
data16
sbb
xchg
xchg
add
cmp
mov
inc
or
cs
loopne
jl
js
xchg
in
je
hlt
add
xchg
sti
push
or
inc
xor
xlat
pop
inc
cwtl
in
fisttps
mov
hlt
add
sarl
and
fisttpll
mov
lock
lds
out
sub
xor
neg
xchg
mov
cli
mov
and
loope
in
call
mov
fisttpl
push
stc
jp
mov
test
shll
dec
aaa
addb
lock
movsb
sbb
xor
jno
inc
mov
or
arpl
out
loopne,pn
subb
adc
sub
out
jb
sbb
cmpsl
addb
std
lods
cmp
in
mov
test
jb
adc
sbb
aas
es
mul
loop
mov
push
jp
into
dec
bound
dec
or
pop
pop
stos
inc
in
clc
test
dec
hlt
hlt
pusha
lea
inc
clc
pop
movl
in
xchg
mov
push
mov
dec
and
mov
adc
xchg
and
jae
sbb
mov
mov
fnstsw
addl
sub
call
sub
jp
aas
cmp
stc
sbb
fs
push
lock
cld
xchg
xchg
xor
adc
cltd
xchg
pop
xor
push
push
daa
and
jg
dec
cmpsl
imul
push
stc
add
mov
fs
or
mov
ss
inc
push
push
xchg
sbb
mov
jmp
cltd
outsb
xchg
xor
js
cmpsb
filds
dec
xlat
push
mov
mov
scas
stc
xchg
lea
or
jl
sbb
jo
fiaddl
popf
push
cltd
test
cwtl
daa
or
cmp
repz
arpl
dec
test
and
add
xor
add
in
cmp
lcall
xor
mov
mov
imul
xchg
mov
test
roll
xchg
aam
mov
adc
xchg
jl
cmp
mov
out
iret
adc
clc
mov
in
lcall
adc
stos
sub
smsw
in
call
shl
xchg
adc
xor
cmpsl
and
outsb
lods
mov
or
fisubs
xor
inc
jl
outsl
dec
and
inc
scas
lret
lods
xor
xchg
sub
and
jl
xor
add
dec
and
adc
mov
je
pop
out
sar
fwait
sub
add
adc
cwtl
sub
loop
inc
pop
dec
leave
fisubl
cmp
xchg
inc
add
inc
loope
ljmp
mov
test
daa
lcall
stos
sbb
xor
cmpsl
addl
das
add
sub
loop
sub
movsl
orl
rclb
jp
mull
xor
adc
in
lahf
inc
sbb
sub
rclb
shll
mov
movl
aad
aam
inc
lock
jns
xchg
dec
adc
test
xchg
mov
xor
mov
xlat
js
test
and
cltd
cmp
mov
mov
popf
sub
lods
loope
imul
jle
ret
add
clc
sub
jbe
push
xchg
jb
mov
cli
ss
pushf
jp
outsl
aaa
daa
mov
push
cmp
gs
pushf
lret
jl
push
movsb
shl
push
jle
add
dec
sub
aaa
mov
xchg
push
push
fcomps
test
jg
roll
xor
add
jge
adc
dec
andl
or
jle
mov
int3
je
movsb
mov
aam
ljmp
add
inc
sbb
nop
fcoml
dec
out
lahf
sub
aaa
sahf
push
jg
insl
ja
in
or
push
push
mov
jp
and
std
into
push
add
test
push
rolb
jg
cmp
call
and
inc
in
jb
insb
mov
shl
sbb
icebp
fistpl
cmp
jp
insb
sub
add
dec
xor
fnstenv
jge
mov
outsl
outsl
xchg
pop
xor
out
adc
inc
loope
pop
mov
aaa
mov
cmp
adc
loopne
jge
cltd
lret
mov
lret
sarb
and
inc
or
xchg
mov
xor
in
mov
mov
pop
pop
push
test
aas
pop
lcall
push
mov
dec
jae
sbb
add
aam
mov
and
jno
and
icebp
orl
xchg
es
mov
jmp
pop
adc
add
insb
ficomps
fldenv
aas
or
or
out
jnp
jl
xchg
aad
ret
iret
mov
jmp
push
addr16
sbb
xchg
lods
outsl
sub
das
dec
push
xor
loope
mov
cs
dec
icebp
add
in
mov
aas
push
loopne
fcompl
movsb
pop
testb
les
dec
outsb
and
jmp
xor
cmpsb
pop
in
lods
in
push
movsb
in
aas
cli
push
daa
jp
aam
lea
flds
xlat
arpl
add
jae
lahf
and
cltd
adc
inc
mov
push
js
fwait
and
cld
mov
and
sarb
std
test
out
shll
test
jmp
test
in
shrl
cmp
nop
pop
cmpsl
sbb
test
pop
fwait
add
lods
sbb
jle
jmp
pop
scas
pop
cwtl
dec
ror
push
in
mov
popa
lea
inc
lahf
movsl
nop
dec
mov
ss
xchg
fdivr
loopne
add
mov
jnp
xchg
jne
in
enter
imul
lcall
push
xchg
fistpll
xchg
adcb
cmp
xor
and
jbe
orl
fimuls
or
inc
out
or
xchg
test
or
or
or
push
aas
push
xor
movsl
leave
mov
cmc
pusha
lods
lahf
movsb
data16
cmpsb
mov
adc
sbb
cmc
into
imul
lahf
mov
pop
jb
and
fnstenv
jns
jne
aad
addl
pop
fildll
daa
loope
test
out
add
or
mov
pop
rorb
xchg
inc
xor
shrl
bound
mov
bound
xor
aaa
push
outsl
xchg
je
push
ret
hlt
and
in
test
mov
dec
jae
sub
imul
xor
ds
test
inc
and
loop
inc
out
add
loope
and
addr16
imul
push
dec
mov
notb
xchg
in
jecxz
push
dec
push
mov
movsb
scas
les
sbb
xor
push
scas
pop
mov
push
ficompl
stos
xchg
stos
xchg
test
xor
inc
mov
xlat
or
js
jl
mov
mov
pop
hlt
scas
stos
imul
or
popa
fs
mov
ja
add
pop
leave
xchg
push
loope
lahf
daa
cmp
test
int
pop
push
imul
mov
or
fcmovnb
mov
xor
xchg
pop
out
mov
addl
and
bswap
sarl
lahf
cmpsl
add
es
lret
mov
rcrb
push
sahf
mov
jle
out
cmp
push
mov
dec
popa
mov
jno
mov
inc
add
mov
rolb
mov
push
in
je
or
fisttpll
dec
mov
cmpsb
sub
sbb
cmp
repnz
mov
push
les
inc
add
cmp
test
test
les
mov
js
insl
out
add
call
fstl
cmp
xor
loope
mov
repz
mov
aam
mov
je
aad
cmp
flds
xchg
repnz
jl
scas
stos
rorl
or
adcb
and
inc
test
imul
and
inc
test
inc
xor
mov
repz
cmp
dec
call
jns
xchg
ret
jne
mov
fdivp
lahf
sbb
mov
imul
shrb
lods
in
push
jns
pop
mov
data16
mov
cmp
cmp
pushf
push
out
std
shlb
sub
cmpsb
std
sbb
cmc
out
mov
lods
lahf
pop
leave
lods
inc
movl
jmp
cwtl
out
jmp
rolb
gs
adc
mov
lret
cmp
ss
test
mov
mov
and
imul
add
jo
add
ret
insb
pop
or
cltd
xor
and
jmp
shlb
push
or
add
inc
sub
lea
add
pop
ret
xor
sbb
push
add
hlt
rclb
loope
fistpll
je
enter
dec
push
shrb
mov
lahf
iret
fdivl
test
jle
adc
mov
xchg
sbb
sbb
out
imul
cmp
insb
adc
imul
in
pushf
push
pusha
orb
mov
dec
sahf
repz
cmc
repz
jb
mov
or
mov
scas
push
cmp
push
mov
inc
inc
fs
xchg
mul
pop
andl
orl
and
xor
in
xor
pop
push
pop
push
add
cmp
sub
or
adc
jae
test
in
sub
je
inc
mov
rclb
pop
sub
mov
push
les
mov
stc
sbb
lds
imul
sbbb
and
les
lods
inc
jbe
sti
dec
jns
jmp
cmp
ret
test
stos
push
inc
mov
lock
inc
inc
pushf
leave
mov
sbb
jle
stc
lods
ret
xchg
ss
test
loopnew
xchg
popf
pop
inc
sbb
mov
jmp
dec
mov
and
in
bound
dec
bound
mov
daa
setbe
and
jb
sbbb
lock
cmp
and
lods
sbb
enter
arpl
xor
dec
dec
mov
insb
stos
sbb
cmc
push
dec
sub
adc
cmp
xchg
jge
les
insl
mov
aas
lods
in
scas
lds
push
push
lret
leave
cmp
jno
scas
adcl
push
dec
adc
cmp
push
and
scas
repz
jmp
subl
xchg
pop
push
mov
int
outsb
adc
out
mov
mov
and
inc
and
jg
rcll
xchg
xchg
push
icebp
jle
jp
sub
jae
mov
xlat
pop
popa
mov
xor
out
lret
loop
dec
lock
jmp
inc
pop
rorl
mov
xchg
xchg
jge
pop
push
and
mov
out
lds
or
pop
xor
insl
mov
test
subl
push
inc
outsb
clc
inc
icebp
dec
shl
or
loope
xchg
push
iret
sbb
pushf
repz
sbb
xor
adc
jnp
mov
xchg
and
mov
hlt
push
sbb
sbb
push
pop
out
es
push
loope
repz
adc
dec
mov
mov
or
sarl
pusha
fs
fyl2xp1
mov
fisttpl
push
es
jnp
dec
mull
out
stc
sbb
cmp
jae
pop
adc
push
loopne
ss
call
aas
xor
inc
out
dec
lods
mov
mov
sub
lret
mov
or
lods
sub
sti
stos
ljmp
sub
add
fstpl
mov
adc
or
adc
sbb
mov
scas
ret
sbb
rcrl
sbb
adc
jno
cmp
cli
mull
jmp
cmp
pop
push
inc
and
push
jl
lods
stc
or
xchg
mov
dec
lods
or
pusha
xchg
test
lods
mov
int
pop
jge
pushw
out
pusha
adc
out
inc
mov
clc
mov
xlat
subl
mov
jl
rcr
rcrl
and
cmpsb
imul
popf
shlb
cld
ja
mov
repz
or
pop
lcall
mov
xchg
mov
je
insb
data16
jecxz
add
mov
cmc
inc
push
inc
xor
dec
push
sub
xchg
or
enter
xchg
cmp
cmp
add
push
mov
mov
fdivr
mov
adc
mov
xlat
mov
mov
pop
add
jle
out
lods
add
ljmp
fs
inc
push
cs
mov
nop
pusha
mov
repz
jne
or
pop
push
cmp
nop
movsb
fstl
pop
adc
insb
fcoms
xchg
shl
jnp
int
dec
cli
xchg
adc
mov
dec
test
jp
cmp
rorb
jbe
mov
outsb
jge
daa
lcall
repz
cmp
call
and
push
pop
cmp
repnz
add
les
lahf
cli
jns
fnstcw
xchg
imul
insb
and
sbb
or
popf
add
dec
push
out
pusha
repz
lea
inc
movups
inc
cwtl
dec
dec
fmull
sub
push
push
mov
ljmp
fldl
dec
aas
or
dec
cmpb
out
mov
test
fildll
jecxz
dec
xchg
test
nop
ret
pop
mov
or
mov
push
leave
out
push
add
pop
sub
lock
pop
lock
and
mov
shl
mov
jl
jno
fisubl
push
jecxz
imul
xchg
out
les
dec
ss
adc
pop
xchg
shlb
out
insb
mov
mov
int3
lods
lretw
inc
test
lds
in
cmp
dec
xor
or
cwtl
adc
stos
dec
mov
into
inc
dec
out
or
xor
int
cmp
add
fnsave
xchg
jno
cmp
or
repnz
push
in
cwtl
adcb
fs
movsb
leave
in
aam
rorl
inc
iret
in
fmull
xor
pop
inc
xchg
adcb
push
xor
hlt
fcmovbe
mov
xchg
loopne
push
inc
ret
push
dec
pop
add
loopne
icebp
loopne
inc
int3
scas
cli
in
and
pushf
push
jb
add
xorb
ss
movsl
xchg
int3
int
dec
sbb
push
jl
push
clc
mov
pop
in
iret
jae
lcall
in
pop
mov
and
xchg
fdivl
sarb
sbb
push
lret
mov
jbe
out
insb
insb
pop
push
dec
mov
dec
and
add
mov
dec
scas
sahf
mov
js
xor
xchg
inc
repz
movsb
sub
enter
clc
pop
shl
add
fs
mov
or
stos
mov
sbbb
inc
push
sub
out
xchg
sub
aad
mov
imul
sar
pop
imul
pop
mov
stc
add
fsubrs
or
outsb
xor
push
xlat
inc
or
mov
orb
pop
or
sahf
mov
dec
data16
bound
ss
out
adc
push
repz
mov
sbb
fwait
or
pop
arpl
addr16
call
jecxz
inc
mov
in
outsb
xchg
das
sahf
iret
repz
mov
scas
mov
inc
sbb
int
lret
and
inc
adc
mov
pop
and
push
add
sbb
and
push
pop
test
cwtl
andb
or
sbb
call
jp
adc
stos
push
pop
mov
and
scas
add
xchg
and
fstps
sub
test
hlt
arpl
mov
imul
pop
mov
out
decl
adc
rcll
mov
sahf
push
push
adc
inc
std
das
call
inc
test
pushf
cmpsl
push
repz
jmp
sbb
ret
cwtl
addb
adc
lret
orl
cmpsl
and
popa
ret
out
sbb
pushl
mov
mov
mov
jnp
inc
xor
sub
lods
xchg
add
pop
xchg
pop
mov
les
push
shll
pop
xchg
mov
rol
mov
xor
jne
nop
cmp
lds
stos
or
pop
arpl
outsb
adc
ret
mov
xchg
mov
inc
mov
fwait
dec
push
cmp
dec
xor
mov
adc
pop
shl
scas
cmp
stos
leave
data16
data16
sbb
sub
aam
cmpsl
sub
sbb
call
sub
outsb
mov
mov
popf
jno
lds
pop
cwtl
mov
imull
popa
mov
mov
mov
jae
ss
xchg
xchg
fwait
dec
inc
idivl
into
movsl
mov
dec
jecxz
idiv
cmc
cli
rcrl
loopne
rcrl
mov
mov
push
pusha
daa
cs
mov
iret
mov
add
mov
add
stos
dec
stos
and
xor
pushf
or
jle
loopne
pop
mov
fs
inc
mov
mov
inc
insl
xor
das
pop
pop
cmpsl
adc
clc
int3
mov
arpl
add
mov
push
test
add
clc
test
push
daa
sbb
and
outsb
sahf
sbb
push
sbb
shll
sbb
in
in
xchg
aam
mov
push
sar
inc
fs
mov
fistps
or
jns
jmp
lock
ja
ficoms
push
pop
loope
pop
dec
pop
orl
jne
mov
fdiv
push
adc
xorl
int3
pop
imul
push
test
test
and
aam
jmp
and
aaa
imul
les
and
in
xchg
loop
mov
lret
and
xor
aaa
std
lret
fwait
mov
mov
in
mov
mov
mov
in
push
sub
pop
mov
jno
push
adc
test
test
jae
cmc
lcall
clc
or
ds
ds
inc
ds
ljmp
jae
pop
div
sbb
pop
into
mov
push
ret
cmpsb
jge
jbe
repnz
mov
jl
iret
sbb
mov
xchg
push
inc
outsl
cmpsl
mov
orl
xchg
popf
cld
clc
push
sbb
scas
adcb
jb
xor
ret
in
adc
pop
mov
or
sub
sbb
minps
mov
inc
das
fsubl
jmp
mov
andb
clc
mov
mov
pushl
rorl
adc
push
sti
sbb
sub
in
sbb
dec
push
mov
imul
repz
sbb
fwait
les
loop
pop
jmp
pop
cld
sahf
jb
mov
inc
adc
push
and
xlat
insb
pop
lret
insl
cwtl
push
mov
add
cmp
loope
fbstp
call
ljmp
stc
scas
fcomp
inc
add
sub
jecxz
outsl
lcall
inc
pusha
loope
mov
pusha
push
sub
inc
add
cmp
int
movsl
inc
jg
test
je
movsw
cmp
push
push
testb
or
sub
in
arpl
stc
xor
sub
pushf
adc
cmp
mov
loopne
lea
mov
js
jb
ror
inc
les
sub
aaa
mov
fldenv
fstpt
stc
mov
inc
push
sbb
jle
aam
out
mov
movsb
sbb
push
les
sti
pop
neg
fidivrl
fnsave
lahf
mov
add
repnz
inc
fldl
cmp
and
fiadds
jb
jb
dec
test
and
push
jp
fisubrl
inc
aam
xchg
fistl
jb
push
pop
cmpsb
cmc
loope
pusha
sarb
push
xor
adc
test
adc
adc
lret
aad
mov
sub
sar
shrb
sbb
push
nop
in
push
js
push
push
inc
fldenv
add
dec
sbb
scas
mov
cltd
int3
adc
pop
push
les
push
pop
pop
lea
dec
cmpsb
lret
push
mov
pusha
in
push
xor
stos
push
dec
xchg
loopne
aad
mov
push
jno
xchg
pop
sub
add
lea
jmp
cli
xor
xchg
mov
popa
dec
stos
cld
mov
pop
jl
nop/reserved
pop
mov
outsl
mov
lea
mov
loop
sub
icebp
sbb
cld
mov
push
leave
jb,pt
mov
sahf
push
imul
lods
mov
ficoml
mov
into
inc
inc
jb
and
insl
cmp
mov
scas
adc
sti
xor
aam
ficoml
or
ss
mov
repz
mov
dec
out
inc
pop
lahf
scas
xlat
je
pushf
ret
mov
inc
ret
daa
pop
out
mov
dec
mov
cmc
add
xor
xor
jmp
lret
cli
adcb
push
ljmp
cmpsl
and
jle
outsl
sbb
jecxz
sub
jbe
aam
xor
adc
sbb
cld
xchg
pop
fbstp
jl
or
insl
aad
lret
jnp
and
add
sbbb
in
and
out
or
push
ret
in
les
divl
test
jnp
leave
rcrl
xchg
addl
loopne
decb
dec
xchg
arpl
int
jmp
repz
sbb
popf
out
js
push
sub
nop
dec
cmc
mov
aaa
in
jle
mov
xchg
mov
sbb
std
mov
fistps
xchg
je
add
jnp
in
mov
das
repnz
enter
mov
cwtl
hlt
fisttpl
xchg
je
push
movsb
popa
push
outsb
shl
xchg
setne
mov
in
cld
mov
cmc
lea
mov
adc
int
push
pop
cmp
mov
lret
push
adc
jle
cmp
cs
sub
mov
xchg
ja
sbb
dec
xchg
sub
inc
cmc
cmc
push
inc
sbb
insl
ja
jge
mov
lcall
lods
push
mov
enter
or
cmp
fld1
mov
mov
into
dec
inc
cld
pop
das
fs
fistl
into
or
pop
repz
push
arpl
ret
add
aam
mov
sub
xchg
ja
out
jge
xchg
and
cld
dec
push
and
add
stos
xor
mov
pop
in
pop
sub
xor
pop
je
pop
pop
cmpl
cmc
and
xor
movsl
ja
cs
rcrl
dec
push
int3
and
fistpll
add
push
loope
xor
loop
dec
mov
adc
cmp
and
adc
lret
fists
push
shrl
loop
or
rolb
xchg
nop
test
fists
and
fmull
xchg
mov
pop
rolb
cwtl
xchg
cmp
ljmp
push
sarl
cmp
andb
cmp
stc
mov
sub
test
mov
jbe
and
rorb
lods
jbe
orl
shll
xor
mov
xchg
cmp
and
xor
or
movsb
mov
xor
dec
push
inc
stos
jo
int3
lahf
in
out
push
jb
pop
das
jp
test
icebp
jae
int
add
shl
inc
mov
shrb
jl
xchg
mov
jb
cltd
adcl
testl
fwait
pushf
out
lock
or
pop
xlat
mov
imulb
jno
xchg
xor
xchg
mov
stos
push
shrl
or
std
push
dec
mov
xchg
jne
xor
and
push
fmuls
or
movsb
pop
push
mov
arpl
add
jp
jne
xchg
and
jnp
sti
loope
movsb
cld
data16
xor
mov
popf
or
push
xor
loop
rcrb
fidivrl
or
dec
fbld
dec
lods
push
lea
addb
enter
call
jecxz
add
sbb
adc
movsl
and
test
jg
aad
jmp
or
iret
ret
mov
in
pop
sbb
fisttpll
and
incb
adc
pop
out
and
adc
mov
dec
int
fimull
xchg
sti
jp
dec
stos
scas
cmp
aas
jle
ljmp
fdiv
push
cwtl
insl
es
sbb
pusha
ret
pop
xchg
lock
mov
dec
push
das
inc
imul
mov
int3
sar
push
orb
mov
popa
sub
or
aaa
mov
sbb
aaa
cmpsl
cs
xor
in
or
pushf
xor
rcll
pop
jnp
sub
mov
mov
outsb
loop
dec
leave
clc
idivb
sub
pop
aam
cmp
fwait
inc
dec
pushf
stc
jae
cmp
bound
fcoml
sub
into
sarb
aam
scas
push
mul
mov
cwtl
jg
repnz
ds
mov
lock
inc
push
insb
mov
sti
clc
jl
jmp
ret
pop
inc
cmpsb
jbe
pop
mov
push
pop
nop
repz
mov
es
das
pop
jp
mov
add
cmp
push
mov
pop
jno
cmp
in
call
ja
bound
or
fildl
mov
adc
pop
mov
fisubl
ret
push
pop
xchg
mov
or
sbb
shlb
mov
lret
xor
mov
mov
add
out
loope
sahf
add
sbb
mov
adc
popa
lods
fisttpll
sti
and
mov
sbb
or
mov
and
cwtl
movsl
fsubp
sti
xchg
inc
xor
movsb
repz
xchg
xchg
inc
pop
std
jb
pop
cmp
pop
rcll
vandps
test
data16
pop
subl
xchg
mov
loop
cmc
ds
loope
mov
fiadds
push
cmp
inc
and
jl
lahf
adc
rorl
fistpl
lock
fildl
cmc
mov
jle
cld
pop
pop
jbe
jge
sbb
out
dec
ficoms
xlat
cmp
loop
sub
jb
rorb
pop
jp
fdivrl
ja
xrelease
hlt
xor
or
nop
ret
lds
mov
adc
sub
fidivs
inc
mov
mov
iret
dec
adc
xor
pusha
sub
call
jl
jmp
mov
aad
out
mov
ljmp
mov
adc
popf
outsb
push
mov
pop
mov
adc
fistps
cltd
push
push
dec
cwtl
imul
lods
mov
jne
cmp
shl
sbb
dec
cli
add
sub
imul
pusha
jnp
mov
mov
cmp
push
jns
stos
push
xlat
sbbl
test
xchg
rorl
pushf
mov
repz
ret
mov
pop
roll
and
or
add
cltd
int3
pop
addr16
test
pop
mov
xlat
stos
sbb
movsb
pop
jl
popa
mov
push
push
and
or
jne
rorb
push
sbb
jge
and
adc
outsl
cmpsl
jmp
sarl
jns
inc
cld
fimull
icebp
sar
inc
addb
repnz
cltd
pop
dec
cltd
sub
or
sub
scas
add
lahf
or
pop
dec
mov
add
das
xchg
popf
dec
ljmp
aas
mov
push
insb
lds
loope
xchg
mov
int
sbb
hlt
adc
out
cmp
repnz
insl
inc
push
inc
scas
sbb
cltd
and
push
and
jne
push
cmp
push
inc
dec
push
xchg
lods
xor
leave
iret
mov
gs
xchg
or
sub
imul
stc
add
fidivs
stos
out
loopne
sbb
push
dec
lods
mov
dec
loope
sub
cmp
fs
ss
add
pop
and
pop
lds
cmp
sub
enter
arpl
jne
sub
push
test
fimull
cmp
cmp
mov
cmp
add
pminub
mov
js
bound
inc
fs
aas
jmp
cmp
js
jl
dec
mov
sahf
test
mov
popa
std
mov
mov
jo
or
push
fcoms
out
cld
punpcklbw
aam
les
daa
in
jl
loop
add
xchg
pop
inc
loopne
lret
xchg
mov
add
jb
fwait
andl
test
lods
in
adcl
icebp
pusha
loop
movsl
repz
or
dec
and
pusha
repnz
xchg
jp
xor
gs
or
mov
das
iret
enter
push
pop
mov
pop
sbb
enter
fadd
stos
mov
inc
pop
shl
and
std
cmp
hlt
out
jne
rolb
inc
cmp
das
push
movsb
pop
divb
push
jg
cli
sbb
jbe
mov
sbb
mov
xor
add
add
push
sarl
addl
repz
lods
les
inc
mov
xor
xchg
sti
pusha
push
jg
adc
push
xchg
mov
jl
nop
cmp
push
fdivrs
cmp
pop
enter
push
loope
pop
ret
scas
scas
mov
out
jmp
inc
mov
lock
xorl
mov
jns
and
or
stc
mov
test
pop
aaa
cld
xor
and
mov
add
dec
nop
xchg
fsub
cmp
mov
mov
add
clc
in
mov
xchg
enter
adc
and
jmp
imul
pop
jnp
cmp
mov
adc
pop
aas
shlb
mov
jbe
mov
mov
xchg
pand
mov
pop
int
loopne
lds
aam
mov
movsb
es
cmp
xor
sub
ds
xor
andb
mov
nop
push
mov
data16
ret
out
xchg
in
mov
int3
mov
and
int3
dec
mov
or
ja
jo
mov
xchg
and
std
mov
inc
movsb
fs
inc
xlat
out
pop
test
js
fwait
imul
pop
dec
rorb
pop
rorb
jl
push
les
add
dec
cmp
mov
enter
inc
inc
push
and
pop
xor
fisttpl
xchg
adc
lods
jnp
cs
mov
dec
pusha
and
ja
add
roll
adc
in
lret
push
iret
das
or
xor
sbb
fnsave
inc
cmpsb
mov
lahf
or
jno
push
imul
cmp
xlat
ss
sarl
pop
mov
or
xchg
shlb
cwtl
test
in
inc
sub
xor
rcrl
js
mov
push
add
mov
add
inc
ja
test
nop
insl
inc
ljmp
mov
or
cwtl
shll
fwait
mov
loope
jecxz
imul
movsl
faddl
and
les
add
adc
test
mov
popf
cmp
cltd
sub
cltd
or
loop
mov
sub
insb
loopne
and
popf
test
sub
jg
inc
jmp
test
xchg
dec
sub
fs
mov
fsubrl
dec
maskmovq
mull
and
jb
mov
mov
mov
sub
add
mov
dec
add
je
mov
cwtl
repnz
imul
sbb
mov
fincstp
shl
add
pop
inc
dec
adc
arpl
push
mov
jmp
lcall
ficoms
pop
inc
sbb
jge
adc
dec
nop
sub
fs
mov
mov
mov
xor
and
and
mov
ret
mov
decl
jns
movsl
inc
mov
or
in
leave
pop
negl
inc
push
cwtl
rcrl
xchg
fcmove
push
lret
inc
cmp
xor
add
movsb
cmc
outsl
adc
and
jecxz
xor
xchg
or
dec
lds
fwait
cmp
pop
xor
cs
sbb
or
sahf
inc
xor
mov
mov
jecxz
bound
cltd
push
je
xchg
fstps
out
adc
sahf
push
fdivr
mov
sarl
mov
mov
adc
sbb
sbb
int
push
aas
rolb
cli
inc
scas
dec
jecxz
sbb
hlt
fst
sbb
sbb
cmp
das
jge
inc
mov
leave
test
cmp
out
cltd
pop
sub
imull
xor
hlt
pusha
scas
mov
popf
fiadds
sbb
push
push
pop
ja
push
mov
mov
ja
dec
das
movsb
addl
outsb
cwtl
xchg
js
incb
dec
ret
xor
fldt
ret
js
add
cmp
fs
repz
popf
cmp
xchg
mov
loop
push
cmp
repnz
inc
xor
fnsave
mov
fwait
sbb
je
fs
add
sahf
mov
lock
mov
jo
mov
and
inc
pop
into
and
and
push
jo
sbb
cmpsl
sbb
push
push
aad
push
sbb
xchg
into
mov
std
fdivrs
mov
cmc
sbb
loopne
scas
aas
test
add
mov
pushf
enter
aaa
call
xor
jb
jle
mov
dec
mov
insl
enter
std
inc
mov
jmp
xchg
sahf
mov
sahf
ja
idivb
lock
rclb
push
ss
mov
mov
repnz
jae
sahf
aam
mulps
mov
enter
lods
jp
ret
out
push
addl
xacquire
test
cmp
shrl
movsl
xor
fcomps
repz
outsb
js
stc
mov
sbb
mov
xor
pusha
fadds
mov
out
jg
pop
push
mov
xchg
adc
jl
sbb
xchg
sbb
xchg
jmp
sub
mov
mov
lock
push
fsub
mov
pop
cmp
cmp
arpl
sbb
mov
xor
xchg
jg
jl
pop
inc
iret
stc
mov
stos
and
mov
push
les
addr16
mov
jno
mov
mov
daa
add
jge
pop
iret
shll
in
mov
shl
ficompl
mov
dec
xor
pop
imul
fidivrs
mov
in
mov
call
mov
add
mov
gs
int
test
add
push
cmp
sub
fstps
out
sub
xchg
iret
cmc
pop
rclb
dec
jecxz
jge
add
cmpsl
mov
push
ror
cmpsl
ljmp
mov
sahf
aam
insl
cmc
jbe
mov
je
fimuls
cwtl
adc
sbb
push
out
sysenter
add
mov
jb
cmp
push
pop
adcb
xor
pop
nop
xor
dec
xor
movsl
dec
xchg
mov
xor
mov
pop
addb
sbb
cltd
add
inc
jecxz
pop
push
dec
aad
sbb
mov
sbb
scas
incl
pop
repz
mov
nop
or
and
mull
push
xor
inc
lcall
js
pop
js
into
bound
cmc
fdivr
cmp
mov
jo
mov
lock
ret
rcrl
stos
idivl
jns
je
mov
daa
sub
iret
push
or
xchg
clc
xchg
or
subb
mov
scas
enter
lcall
cmpsb
js
sbb
add
ss
add
test
xchg
mov
sbb
cwtl
sub
and
cmc
dec
iret
add
mov
sbbl
mov
fisubs
jmp
lret
fldl
xchg
insb
sub
xchg
xor
jp
lock
and
xor
iret
aaa
stc
xchg
pop
add
xor
or
test
xchg
clc
pushf
xchg
cli
or
sbb
sbb
xor
testl
xor
and
push
jnp
les
insb
out
and
pop
push
mov
int
lcall
fidivs
xchg
mov
adc
and
daa
mov
cmpsb
mov
or
out
ja
sbb
mov
into
jbe
dec
imul
jne
and
insb
mov
push
jecxz
cmp
lock
ror
sbb
or
adc
lea
xchg
inc
mov
push
push
cmc
fistps
scas
cs
dec
jle
push
fbld
movsl
xor
imul
jg
std
imul
or
repz
adc
push
andl
xor
mov
in
inc
rorl
pop
mov
nop
push
pop
dec
dec
icebp
jnp
mov
dec
mov
cli
cmp
sbb
clc
cmp
mov
jo
scas
mov
repnz
and
push
sahf
pop
or
dec
inc
mov
loop
in
lcall
xor
out
mov
mov
adc
add
inc
and
adc
stos
mov
std
cmpsb
xchg
xor
lods
inc
adc
and
aas
dec
aaa
add
adc
aaa
nop
imul
mov
icebp
std
xchg
rolb
sbb
iret
std
jbe
adc
insl
aad
or
loope
mov
sbb
fsubl
cld
out
cli
imul
ret
mov
push
xor
bnd
adc
xlat
cmp
dec
sub
or
hlt
mov
negb
inc
ds
notl
mov
outsl
repnz
push
ja
jae
jle
xor
push
es
jo
addr16
inc
or
cli
mov
jp
sbb
xchg
mov
and
inc
fmuls
mov
add
rorl
push
shlb
mov
pop
and
or
mov
cmp
inc
mov
fmulp
idivb
stos
fs
push
or
jle
lods
outsb
ja
int3
lret
mov
cmp
cli
pop
cwtl
sub
or
test
mov
gs
cmp
gs
adc
xchg
cwtl
cmpsb
scas
inc
pusha
rcr
call
fcmovnu
adc
adc
lea
mov
ja
mov
jecxz
push
and
std
subl
pusha
inc
pop
arpl
stos
push
fs
adc
cs
add
lods
jge
jecxz
cmp
inc
xor
cmp
fs
jge
into
ret
mov
rclb
and
adc
inc
in
jo
sbb
out
int3
fistl
lcall
adc
mov
mov
cmpsl
push
mov
imul
cmc
aad
jge
into
stos
xor
inc
and
xor
mov
or
fstpt
or
idivl
jge
test
xor
pop
sbb
test
inc
xchg
or
inc
lret
lret
js
imul
divl
jns
jbe
cld
popa
fstl
and
mov
pop
loope
enter
pop
call
add
cmp
negl
daa
arpl
shl
aas
add
data16
sbb
mov
sbb
or
loope
sub
mov
xor
xchg
lret
outsl
xchg
xor
popf
and
jl
outsl
mov
xor
iret
loop
out
push
stos
fs
or
mov
sbb
shll
and
cmp
into
insl
stc
shr
inc
gs
pop
pop
sbbb
and
cmp
imul
cmpsl
in
popf
mov
clc
popf
push
or
loopne
xor
insl
xchg
in
cmc
mov
lahf
pop
sbb
add
mov
repnz
sub
scas
mov
ficompl
xchg
sub
jge
sub
in
inc
mov
int
out
sub
dec
pushl
test
push
and
mov
xor
lahf
sbb
push
movsbl
mov
ret
int3
insl
adc
ret
fwait
loope
mov
and
imul
addr16
jns
mov
std
in
xchg
movsl
outsb
push
sbb
jecxz
icebp
pop
shll
push
in
cmp
shrb
cmp
pusha
outsb
fadds
addb
arpl
jae
dec
loop
xchg
into
sbb
inc
clc
adc
cmp
add
decl
inc
loop
jne
adcb
mov
call
jg
cmpsl
adc
xor
pop
xchg
cmp
pop
cmp
fcomi
jnp
ss
sbb
sub
fdivrp
jp
scas
loop,pt
das
je
jecxz
push
cmp
ljmp
ja
lahf
movsl
out
xchg
gs
outsb
imul
jnp
lods
pop
pop
add
xor
inc
pop
bound
push
pop
aam
je
dec
mov
jno
sbb
jbe
mov
dec
stos
inc
adc
cltd
rorl
push
jle
loopne
add
lret
incl
xchg
cmp
ret
adc
lret
insl
push
aas
test
jae
push
int
loop
mov
cmpsb
popf
bound
and
pop
sub
arpl
divb
daa
jo
test
pop
iret
lods
enter
adc
sbb
loope
lea
clc
ss
inc
pop
xor
lret
add
shll
testb
mov
insb
jecxz
repz
pop
mov
daa
push
inc
int
psubsb
push
pop
shll
jp
sub
hlt
and
sar
test
sub
outsl
sub
dec
mov
mov
addr16
ret
fdivrs
jns
je
int3
inc
jmp
popa
cmp
in
arpl
or
jbe
jle
push
iret
insl
pusha
shl
xchg
cmp
add
dec
pop
sti
andl
and
dec
adc
das
imul
jne
sbb
jg
repz
push
pop
stos
cmp
fwait
pop
pop
inc
and
mov
lea
inc
xchg
xchg
pushf
push
push
dec
push
popf
aas
dec
enter
repnz
mov
pop
sub
lret
or
into
adc
push
xchg
pusha
xor
push
dec
fisubl
rcl
aad
das
and
jp
mov
jnp
and
dec
aaa
xor
xlat
adc
aam
mov
adc
test
jns
sbbl
pop
mov
test
sti
add
lret
add
call
aas
insl
cmp
inc
ss
lret
dec
mov
test
or
sahf
cmpsb
inc
into
or
sbb
lds
push
ficomps
out
outsl
inc
lods
sub
iret
pop
test
lret
roll
pop
mov
aaa
dec
sub
xchg
int3
cmpsl
dec
test
dec
or
mov
pop
mov
test
sti
dec
outsb
mov
movsl
lret
lret
push
cmp
out
jnp
inc
pop
add
push
call
cmp
mov
scas
pop
jbe
push
xchg
in
pop
push
cmp
aaa
jne
outsb
and
aas
mov
leave
testb
inc
pushf
dec
mov
pop
ret
fsubl
sub
gs
imul
jmp
pusha
add
sub
and
or
es
mov
clc
mov
jle
mov
popf
pop
and
inc
dec
lcall
imul
cli
push
push
mov
dec
dec
jge
sahf
out
cmc
jae
pop
mov
icebp
or
int
insl
sahf
push
xor
xchg
xor
ret
inc
pop
je
add
enter
push
adcl
cmc
insl
loope
nop
dec
es
push
cld
stos
ss
aam
ds
mov
xor
xchg
loope
into
push
stc
and
in
out
jle
leave
pop
push
repz
jp
inc
int3
jae
cmp
icebp
dec
mov
inc
mov
scas
add
inc
jp
daa
pushf
mov
sub
mov
dec
or
rcrl
fadd
jle
xchg
test
jbe
and
or
cwtl
pop
jmp
sbb
rcrl
fsubs
in
adc
in
fisttps
test
jle
jl
lea
pushf
lods
enter
add
dec
lret
jbe
movsb
push
cmp
ret
mov
mov
push
popf
pop
lahf
aaa
es
cmp
sahf
push
dec
aam
leave
repnz
xor
mov
sub
arpl
pop
jo
jecxz
pushf
jg
xchg
int
mov
jmp
jecxz
cmc
enter
sub
jl
sub
in
sbb
pop
fistps
cmp
lods
inc
fnstcw
sbb
fcoms
push
rcrl
scas
fs
xor
dec
adc
xor
mov
repz
shrb
frstor
idivb
mov
cmpb
pop
and
mov
pop
mov
mov
sbb
push
mov
lods
cs
negb
in
mov
jns
add
jg
xchg
in
cmpsb
push
sub
clc
jmp
clc
or
mov
fdivs
pushf
inc
mov
sahf
and
jo
sbb
jae
rcl
dec
aad
jp
in
fwait
out
jb
push
dec
cmc
insl
mov
adc
js
xor
dec
out
inc
xchg
cmpsb
cmpsl
jnp
insb
ret
ffree
aam
mov
push
adc
stc
inc
pop
mov
push
out
in
jbe
inc
adc
sub
bound
or
je
mov
test
push
pop
hlt
jmp
adc
push
int3
lcall
call
mov
roll
dec
insb
movsb
mov
mov
add
cmpsb
inc
adc
jle
inc
fcoml
mov
push
ss
adc
cmp
mov
lcall
int
sub
lds
and
mov
push
fnstenv
out
sbb
lock
lret
fsub
or
daa
sbb
xor
je
stc
int
push
outsl
shll
xchg
je
mov
jmp
ror
mov
sahf
and
call
xor
in
mov
xchg
out
outsl
jb
jl
je
jno
test
call
dec
lds
mov
inc
jle
mov
xor
mov
push
xchg
push
dec
jmp
mov
add
lods
pusha
jb
mov
mov
iret
or
xchg
xchg
pop
sbb
daa
fs
scas
frstor
adc
cmp
and
and
andl
or
out
outsb
outsl
mov
sub
shll
push
out
out
test
fdivrp
addb
out
repz
cli
xchg
aaa
iret
sbb
xchg
adcb
jl
push
mov
lahf
adc
lahf
push
in
lods
pop
mov
sti
or
repnz
lea
push
aaa
call
call
dec
jns
adc
mov
int
xor
jmp
push
ret
jmp
push
aam
int3
jge
mov
jg
outsl
mov
adc
repz
adc
adc
fiadds
lods
jno
fbld
out
repnz
loop
adc
enter
xlat
pop
or
out
adc
cmp
mov
dec
loop
nop
sub
sti
xchg
arpl
mov
pusha
test
inc
stos
add
lods
out
cmp
popa
mov
cmp
mov
and
pop
rcl
in
pusha
insb
test
fisubl
pop
into
sbb
cmp
adcb
push
xor
mov
mov
sub
mov
shrl
sar
xchg
add
cwtl
imul
adc
out
adc
cmpsl
orb
xor
inc
sbb
push
out
sbb
shlb
popa
jnp
leave
add
jp
pop
push
cli
push
jno
adc
aaa
inc
cmp
xor
repnz
and
push
mov
movsb
rcrl
jle
clc
xor
lods
or
cwtl
inc
ret
ss
fcoml
outsl
pop
daa
cmp
xchg
xor
sbb
sbbb
js
fidivrl
movsl
dec
jge
dec
outsb
fwait
or
adc
dec
adc
push
adc
inc
sti
fsubrs
and
insb
addb
fdiv
xor
rol
or
fs
or
lds
jmp
and
cmp
add
push
mov
xor
outsl
xor
ds
push
scas
dec
cs
repz
mov
jl
insl
dec
stos
mov
lahf
jl
mov
pop
adcb
outsb
inc
rolb
call
xor
mov
mov
dec
mov
inc
repnz
in
cmpps
xor
loop
test
or
std
roll
dec
pop
xchg
pop
test
aam
outsb
jle
mov
sub
lods
jle
mov
fiadds
and
mov
scas
lcall
push
mov
mov
lods
arpl
mov
xorb
lahf
or
push
lock
enter
lret
dec
xor
out
fidivrs
call
cmpsb
xchg
imul
pop
push
adc
add
fld
insl
aam
les
lahf
mov
lock
les
xchg
dec
jecxz
test
pop
lret
in
std
in
sub
in
into
fidivrl
lret
cld
aas
cli
push
and
lret
es
mov
pop
into
data16
push
adc
cld
xor
push
pop
mov
pop
or
dec
push
sbb
aas
les
jecxz
adc
fs
and
mov
nop
jne
rcll
mov
sub
xchg
imul
insb
lea
cmp
dec
xor
nop
and
jnp
mov
loopne
push
sub
fwait
mov
into
rcll
test
fldl
pop
inc
pushw
scas
bound
pop
lret
data16
cmp
pop
ret
mov
fsubrl
rcl
out
or
jae
sbb
push
jb
mov
sub
push
repz
push
mov
dec
xor
adc
push
inc
pop
mov
imul
das
push
loopne
pop
jnp
mov
or
sbb
fwait
sahf
jno
inc
mov
imul
pop
popf
pop
dec
sub
mov
sbb
mov
xchg
dec
xchg
ret
cmp
icebp
mov
stc
or
jl
add
int
add
and
dec
push
sbb
push
cmpsb
inc
fldl
push
flds
dec
and
mov
jns
jae
out
sub
xor
es
pop
cmp
das
shrb
add
arpl
sbb
fidivrs
pop
rcr
cli
mov
fistpll
ror
or
stos
mov
outsl
lcall
enter
ror
pop
mov
cld
popa
add
jg
fnstcw
adc
or
fimull
rclb
mov
lods
stc
aas
aaa
divl
pop
inc
fisubrl
xchg
aad
pop
jge
fdivrl
push
out
dec
test
sbb
jge
sbb
data16
mov
lahf
lret
jbe
push
jo
mov
mov
and
ret
mov
cmp
adc
push
mov
mov
mov
mov
fwait
pop
fstpl
fwait
daa
std
ljmp
mov
or
out
jl
mov
repnz
movsb
mov
addl
sarb
xchg
mov
movsl
sbb
call
jo
mov
ja
int3
or
jge
fldt
sub
rolb
call
mov
test
pop
data16
filds
icebp
fdivl
inc
xlat
movsb
push
push
arpl
cmp
mov
and
ret
outsb
enter
imul
pusha
loop
call
outsb
push
dec
xor
pop
xor
xor
or
mov
rclb
dec
push
sub
and
inc
movsb
popf
push
jg
xchg
mov
imul
cmpsb
add
adc
scas
stc
pusha
out
imul
cmp
xor
or
iret
xor
pop
je
fwait
pop
pop
insl
cmpsb
push
mov
jmp
mov
push
jp
mov
movsl
ja
mov
std
xchg
std
mov
test
mov
out
mov
inc
cwtl
ds
call
scas
pusha
clc
mov
outsb
les
sbb
push
jl
insb
data16
add
mov
imul
fstpt
pop
aas
jne
jecxz
shr
into
dec
cmc
mov
fisubrs
nop
vaddsubps
pushf
sbb
in
mov
xchg
je
inc
subl
out
and
xor
mov
es
push
call
ret
insb
mov
push
subl
int
cwtl
arpl
add
cmp
xchg
xor
sub
nop
sbb
xchg
cwtl
mov
cmp
mov
xchg
test
dec
jmp
insl
repnz
loope
scas
enter
push
mov
popl
pop
mov
sbb
outsb
push
xchg
cld
cmp
or
sbbb
push
mov
push
mov
dec
lock
mov
or
shrb
test
mov
jmp
push
mov
cmpsb
mov
dec
dec
cs
pusha
pushf
enter
xchg
xor
test
stos
pop
mov
and
push
push
xchg
and
and
in
sbb
outsl
xchg
add
int
xor
adc
test
push
loope
or
xchg
fwait
sbb
pushf
aad
fdivrl
bound
in
pop
rdmsr
xchg
xlat
sub
ficomps
pop
add
inc
lods
shl
xor
std
push
mov
in
and
cmp
aad
ljmp
fisubl
aaa
inc
xchg
pop
popa
inc
rcl
aam
jb
fwait
sti
cs
rorl
pop
add
clc
or
std
dec
jo
jno
jbe
xchg
xchg
les
adc
lock
push
dec
adc
mov
arpl
push
xchg
push
add
jge
fstl
push
lahf
jo
jge
push
shll
mov
push
dec
or
jne
xchg
cltd
lcall
dec
and
xor
push
jmp
enter
xchg
or
test
sarb
icebp
add
add
scas
mov
jo
fstps
loope
sti
mov
out
sub
fst
sub
xchg
sub
cmp
jge
mov
outsb
jo
in
sub
jl
mov
stos
fists
xchg
mov
sahf
popf
icebp
testb
fsubl
mov
das
test
loop
aas
test
or
adc
pushf
cmp
push
pushf
jge
int3
loop
roll
clc
rcr
pop
scas
repz
xchg
aam
movsb
jae
xchg
mov
lds
add
insl
fwait
jns
and
dec
or
sub
cld
or
sub
jo
dec
lea
push
sbb
cltd
shrl
ljmp
stos
outsl
jnp
or
and
sbb
or
shrb
xchg
jae
dec
sub
fnstcw
sahf
xchg
push
mov
mov
daa
pop
inc
cmp
iret
or
add
jnp
cmpsl
hlt
fmulp
icebp
cli
idivb
inc
mov
vorps
in
xchg
cmpl
repz
jne
fstl
inc
negb
inc
xchg
mov
addr16
sbb
andb
ret
mov
push
ret
in
loope
cmp
push
cs
das
xchg
jb
add
iret
or
in
push
stos
shrl
jo
aas
les
mov
mov
lret
push
enter
push
ret
in
push
repz
rcrb
shrl
into
xchg
xchg
sbb
int3
cmp
fs
sub
gs
test
repnz
pop
cmp
adc
xchg
pop
cmp
mov
pop
sbb
jge
mov
sbb
sbb
jecxz
pop
mov
adc
mov
jne
fnstenv
dec
cmp
insl
push
mov
ret
cmp
xchg
dec
es
lods
ds
or
cmp
aad
mov
lret
dec
icebp
cmpsb
sub
out
xor
rcll
mov
jae
xor
xor
pop
stos
or
sub
inc
mov
xchg
loope
add
bound
sub
pop
repnz
xchg
sarb
add
xor
test
cwtl
push
inc
mov
icebp
ja
sub
sbb
mov
xlat
mov
stos
iret
imul
and
push
pop
inc
inc
mov
jl
ret
adc
push
orl
je
aaa
xlat
movsb
rorb
lds
inc
xchg
pop
xchg
incb
cmpsb
rolb
popa
dec
ljmp
ja
inc
mov
dec
inc
sub
ret
sarl
inc
or
loope
int3
xchg
adc
pop
ficompl
pop
xbegin
fucom
test
add
and
fwait
mov
out
out
scas
repz
mov
lods
gs
hlt
mov
loop
mov
xor
adc
test
cmc
push
pusha
inc
and
pop
inc
and
jp
mov
xor
jae
dec
popa
and
or
ret
in
jae
mov
cmp
mov
lods
or
outsb
testl
xor
stc
aam
stos
inc
fcomip
in
mov
test
shrb
test
and
movsb
nop
mov
lahf
or
std
cmp
movsl
mov
mov
lret
fiaddl
and
addl
fcompl
jno
lock
mov
mov
int
adc
push
mov
sub
mul
pop
clc
aam
inc
sti
cs
mov
xor
pop
add
test
sub
into
push
mov
loop
addr16
adc
cmp
psubb
pop
adc
addb
pop
jg
push
shll
mov
pop
lock
dec
leave
inc
push
cmpsl
outsb
fidivrs
xchg
sbb
adc
inc
inc
jne
add
iret
aam
xchg
pop
cmp
add
cmp
cmpsb
pop
das
cld
pop
cmp
sbb
ljmp
xchg
rcrb
xchg
mov
adc
adc
xor
and
xorl
outsb
lods
lret
fmuls
mov
fiadds
mov
packssdw
push
adc
cmc
cmp
lahf
test
divb
ss
out
adc
pop
mov
mov
or
repz
xchg
arpl
aad
push
fnsave
mov
add
adc
mov
adc
stos
add
movsb
icebp
dec
outsl
movsl
mov
loope
jge
lea
mov
inc
mov
imul
sbb
dec
pop
int3
jmp
loop
pop
cwtl
sub
inc
out
or
adc
mov
mov
mov
lcall
cltd
outsl
popf
test
iret
jecxz
gs
decb
jnp
cmpsl
mov
ret
adc
jl
movsl
mov
adc
inc
test
out
ljmp
xlat
aas
xchg
jle
add
aam
andl
xchg
jbe
stos
test
scas
adc
sbb
mov
mov
xchg
ret
je
clc
pop
sub
ret
add
mov
lret
fld
loopne
pop
adcb
mov
xchg
stos
and
fimuls
mov
cs
orl
dec
jno
addr16
mov
imul
xchg
sbb
les
lock
les
std
sbb
loopne
sbb
popf
dec
sarb
je
stos
mov
icebp
cmp
cmp
addr16
jl
xchg
add
outsl
call
pop
jle
ljmp
adc
scas
mov
push
aam
fwait
push
ss
out
dec
xor
mov
push
iret
adc
xchg
sub
mov
or
in
mov
fs
int
nop
pop
mov
xchg
cmp
sbbb
inc
mov
mov
xor
imul
xchg
or
cmpsb
gs
stos
mov
outsb
fsubrs
jnp
clc
int
cmpsl
mov
sbb
mov
jl
xlat
movsl
movsb
mov
mov
sbb
fdivs
pushf
addr16
xchg
bound
jns
addr16
movsb
jl
sbb
xorb
lods
add
add
subl
sub
mov
jb
lahf
movsl
jbe
sahf
out
leave
dec
mov
xchg
xchg
jl
ljmp
fsubl
jnp
push
stos
lods
and
clc
cmc
mov
rclb
mov
jno
inc
daa
ds
fcmovb
add
cmp
sbb
or
mov
mov
xchg
je
pop
inc
cld
mov
lods
sbb
cmp
and
xor
mov
negb
outsl
subb
dec
adc
jmp
and
dec
inc
mulb
enter
add
sahf
ret
gs
mov
scas
jecxz
aas
cmp
sarl
sbb
cmp
jecxz
and
outsb
fnstsw
loope
push
pop
sub
mov
push
sub
stc
rorl
std
or
sub
xchg
incl
stc
iret
add
aad
cmp
pushf
popa
sub
or
inc
mov
and
int
cli
cmpsb
inc
popf
lock
in
adc
pop
fildl
jno
xchg
pop
mov
jns
loope
and
inc
enter
inc
insb
js
sarl
lfs
xchg
add
imul
aas
jl
mov
insb
jecxz
adc
jg
cltd
test
jecxz
gs
mov
data16
cmp
jbe
stos
mov
lea
imul
fbld
jge
mov
inc
add
ret
push
jb
inc
das
pop
and
push
test
mov
test
lcall
mov
leave
push
cs
fs
int3
pop
jnp
inc
xor
cltd
mov
jbe
cmpsb
es
pushfw
mov
xchg
in
or
loope
insl
xorl
add
hlt
addr16
inc
iret
jecxz
xchg
jl
movsl
add
fildl
sahf
fwait
push
pop
ljmp
or
dec
dec
cmp
push
dec
jg
sbb
std
pop
movsl
push
add
and
clc
cmp
push
enter
scas
jmp
imul
out
mov
xor
or
lea
in
fistl
sahf
xor
inc
out
scas
into
jmp
out
inc
sub
pop
ljmp
mov
sub
icebp
adc
outsl
in
pop
popa
dec
aas
das
arpl
mov
dec
push
xor
push
loope
pop
push
lahf
jno
ja
lods
out
push
in
adc
lods
jle
dec
or
int3
mov
dec
es
jns
jecxz
fistpl
pop
or
dec
aam
rcrl
dec
iret
mov
xor
shll
aad
jg
icebp
adc
imul
iret
jmp
mov
outsl
pop
mov
sbb
adc
pop
test
cld
and
inc
repz
inc
or
ss
or
fstpt
je
aaa
rsqrtps
xchg
aad
cmc
mov
jb
pop
cmp
or
stos
fucomip
dec
jl
add
or
adc
mov
dec
cld
xchg
jg
mov
and
mov
dec
scas
jmp
test
in
push
out
and
xchg
addr16
in
cmp
cmc
dec
dec
sarb
jg
aas
mov
dec
push
pop
loop
ror
sbb
cli
mov
xchg
fbstp
inc
and
mov
in
dec
outsb
cwtl
sbb
sahf
inc
pop
shl
jne
mov
sti
leave
xchg
push
mov
test
inc
push
cltd
cmp
inc
fimuls
xor
shr
inc
xor
ror
movsl
jb
xlat
imul
lret
pop
insl
mov
push
popa
stos
out
cli
cli
lock
lcall
sbb
aaa
mov
add
mov
aaa
xor
jnp
lret
test
test
dec
mov
dec
cmp
xchg
hlt
add
js
rclb
fwait
test
mov
mov
insb
fdivrl
loop
je
xchg
in
addr16
mov
push
jno
mov
cmp
mov
hlt
jno
xor
dec
xchg
jnp
outsl
cmpsb
rcll
inc
cs
sarl
es
inc
or
jle
call
jge
inc
inc
adc
xor
xchg
mov
ds
push
mov
dec
es
cmp
inc
mov
into
icebp
pop
inc
fmul
outsb
push
jnp
cwtl
push
ret
jae
pop
pusha
push
test
ret
lods
lcall
push
sbb
or
pop
mov
jle
loope
cwtl
or
xor
sti
aas
xchg
push
push
mov
push
sbb
jle
mull
and
ret
jmp
dec
xchg
mov
inc
loop
imul
or
leave
out
inc
sarb
insb
mov
repz
mov
add
jns
loopne
ljmp
mov
test
xchg
push
fstps
mov
add
loope
addr16
minps
jg
arpl
cmp
gs
inc
lahf
jae
insl
flds
stc
push
loopne
inc
xchg
shll
dec
aam
call
mov
mov
mov
inc
jnp
pop
jne
and
cmpsb
notl
outsb
stos
daa
lahf
xchg
inc
js
add
pop
jnp
stos
and
push
push
scas
mov
lret
push
in
aas
mov
mov
aad
das
mov
ljmp
int3
mov
orl
in
iret
jmp
jge
sbb
jnp
jo
push
xlat
das
mov
mov
inc
mov
aam
jne
push
or
push
scas
jp
or
push
xchg
bts
add
popa
cli
sub
movsb
jecxz
mov
dec
in
sub
int
push
fsubrl
pop
lock
movl
push
shrl
lods
xchg
pop
mov
add
outsl
imul
cmp
add
imul
stos
and
mov
imul
mov
push
testl
scas
push
fbstp
mov
stos
push
pop
arpl
aas
movsl
jno
add
dec
mov
mov
add
mov
or
or
inc
aam
sub
sbb
leave
push
adcl
mov
jecxz
mov
and
es
ss
aad
push
daa
mov
pop
push
iret
sub
jb
mov
adc
pop
iret
mov
cld
pop
loopne
dec
out
jno
enter
push
test
xchg
movsb
xor
sahf
jl
cld
mov
jne
std
cmp
cmp
in
daa
mov
stos
in
push
popl
lret
mov
enter
es
enter
out
mov
mov
dec
pop
icebp
adc
roll
sti
dec
repnz
test
outsb
adc
imulb
mov
in
inc
and
adc
add
add
sub
out
mov
ret
mov
test
das
scas
cmp
mov
lock
cmpsb
jnp
inc
mov
sbb
and
icebp
rcll
in
cld
js
cmc
jle
jl
add
jmp
mov
mov
mov
xor
insb
outsb
sub
stc
xor
add
rcrb
xor
sbb
jg
cmp
push
mov
je
ds
mov
hlt
mov
fsts
dec
fistps
scas
mov
int
lcall
cmp
enter
sub
mov
xor
es
js
mov
jb
xchg
jnp
lods
fwait
push
cmp
cs
cld
mov
roll
xchg
sahf
addr16
rolb
ljmp
jecxz
shlb
pop
jnp
mov
cmp
push
ret
pop
scas
inc
dec
push
mov
jp
out
test
imul
push
lock
enter
lock
sarl
push
or
or
jl
rcrb
xchg
sbb
push
add
pop
add
outsl
adc
jo
jl
aas
in
jno
add
rcl
lea
mov
in
inc
lahf
in
jb
xchg
in
stos
mov
scas
pop
frstor
or
hlt
xchg
push
mov
jecxz
mov
sarl
mov
push
aam
int3
jne
and
or
int3
inc
cli
aaa
mov
int3
mov
mov
fildl
retw
mov
fldcw
mov
test
inc
movsl
inc
sbb
and
inc
mov
adc
mov
stos
sub
aas
xchg
push
sub
pop
in
aad
sbb
mov
dec
nop
scas
out
fcompl
ja
test
clc
inc
cltd
pop
fs
xor
mov
push
sbbb
out
xchg
or
jae
mov
sub
imull
mov
loop
push
stos
jo
js
addr16
xchg
mov
dec
int3
sahf
mov
out
sbb
insl
push
mov
or
mov
sub
rorb
jg
mov
mull
bound
pop
cmc
cmpsl
insl
sub
cltd
xchg
xchg
pop
pusha
push
mov
mov
mov
lock
add
jg
jbe
incl
loop
pop
rorl
mov
or
loope
dec
clc
sbb
mov
lret
adc
rcrb
jg
bound
pop
subl
scas
test
jne
call
mov
sub
jo
push
pop
xor
fwait
xchg
pop
xor
sub
push
ret
fldcw
es
cwtl
jnp
dec
or
test
pushf
addb
std
sub
adc
sbb
pop
mov
xchg
aas
cwtl
mov
push
leave
shr
xchg
xchg
cli
adc
jae
repnz
addr16
je
int3
imul
push
push
inc
sub
push
push
sbb
sbb
jae
mov
fpatan
aad
cmpsl
js
gs
pop
adc
push
mov
jmp
stc
dec
cmc
ret
jne
in
ljmp
adc
movsb
adc
in
lcall
lahf
jge
insl
out
hlt
jecxz
xchg
jp
mov
add
cli
stos
jl
sub
xor
and
imul
stos
pop
ret
movsb
add
xlat
pop
movsb
sar
push
xchg
out
dec
xor
sub
mov
xor
mov
push
in
xchg
movsl
push
mov
cmp
and
sub
mov
xor
push
xor
push
push
fs
lea
cwtl
mov
test
or
cld
pop
idivl
les
dec
sbb
sbb
sbb
and
mov
ret
mov
popf
sbb
std
enter
pop
cmpsb
lea
mov
cmpsl
lods
adc
mov
pop
icebp
jecxz
icebp
xchg
mov
cmpsb
test
flds
or
xor
push
pop
shl
adc
cmpl
insl
xor
arpl
dec
mov
mov
add
mov
scas
cmpsb
mov
sbbb
pop
pop
xchg
data16
inc
rclb
jno
add
lret
jp
cmpsl
je
rcrl
sbb
mov
xor
mov
and
jbe
mov
shrl
push
push
ljmp
dec
insb
cmp
mov
xchg
push
lahf
mov
call
push
repnz
ret
test
jb
ss
push
enter
mov
mov
aad
nop
and
adc
pushf
test
sbb
cli
and
fimull
adc
out
aas
add
lods
je
out
and
inc
lcall
es
or
jmp
jb
inc
nop
cmpsl
and
aad
sub
and
mov
push
mov
lock
ret
add
and
das
pop
pop
and
xchg
adc
out
cltd
dec
or
out
into
sti
and
and
sarb
pushf
jmp
rorl
nop
fisttps
rcrb
iret
cmpsb
ss
out
cli
dec
push
lahf
mov
xor
xchg
or
js
cmpsb
out
loope
lcall
sub
shll
rclb
and
pop
pop
xlat
xchg
popa
aas
adc
sub
cmp
fldt
inc
andb
movsl
sahf
ja
and
fwait
pop
mov
shrl
pop
movl
add
mov
iret
std
std
int
pop
xchg
decl
mov
lret
and
fs
jecxz
add
int3
jne
jge
xor
call
mov
cmc
cltd
mov
sub
mov
test
jae
add
hlt
ja
bound
and
xor
gs
fcoms
in
dec
rcrb
push
add
ljmp
add
mov
xor
adc
mov
mov
sub
mov
add
push
fists
loop
adc
into
cmpb
or
sbb
pop
dec
aaa
imul
inc
sub
loope
ljmp
sub
inc
push
test
stc
subb
dec
pushf
push
jbe
push
mov
or
in
repnz
imul
inc
outsb
stos
add
inc
xchg
jne
pop
mov
pop
xchg
icebp
and
jl
cmpsb
mov
ja
xor
sub
xor
leave
sub
pop
and
cli
cmp
inc
sub
mov
lcall
shl
bnd
xchg
iret
mov
test
jns
rcll
inc
jb
cmp
loopne
sti
loop
out
jmp
and
mov
cmp
add
dec
sub
cmp
mov
lock
gs
push
jl
or
stos
pop
add
daa
and
dec
popl
sbb
imul
scas
ret
fwait
mov
inc
pop
push
sti
add
cli
arpl
rcrb
mov
push
aam
mov
pop
sub
sub
pop
mov
inc
jno
aad
imul
or
cmp
push
sbb
xchg
repnz
xchg
aam
bsr
shrl
stos
push
in
popa
movsb
in
int
test
lds
and
pop
or
and
arpl
arpl
movsl
or
jo
mov
in
or
insb
pop
xor
ljmp
inc
test
dec
jo
je
ss
and
outsb
scas
pop
ja
xchg
push
test
jg
stos
js
mov
mov
add
xor
cmp
inc
push
cli
sub
mov
xchg
aas
stos
stos
sub
stos
ret
add
cmpsb
sub
jae
inc
push
jge
push
sub
sbb
repnz
and
add
shlb
test
roll
jbe
jno
dec
xchg
daa
cmp
jbe
sti
mov
shlb
cwtl
cmpsb
cltd
adc
mov
std
xor
push
pop
inc
and
jp
inc
mov
sbb
xrelease
or
mov
mov
sbb
test
ds
jns
xor
cli
nop
loope
cmp
iret
bound
xchg
cmpsl
call
push
pop
sarb
add
out
mov
clc
xchg
imul
jecxz
stc
push
and
jns
jmp
dec
add
subl
mov
pop
loopne
pop
push
aas
sbbb
jae
sub
or
mov
mov
js
subl
inc
push
push
sbb
jecxz
dec
cmp
push
add
mov
fcoml
test
xchg
pop
call
sti
stc
stc
call
or
scas
dec
pushl
jle
cmp
adc
add
pusha
loopne
mov
imul
cmpsl
add
lods
pop
mov
lods
popa
lods
jns
inc
mov
mov
inc
mov
sahf
add
mov
dec
or
lret
fimull
lock
out
add
rcrl
sbb
je
imul
data16
movsb
pop
or
mov
orb
pop
mov
inc
ja
jge
ficompl
sbb
jne
pop
dec
test
popf
inc
and
lods
cwtl
xor
pop
pop
xchg
mov
lods
jge
sub
gs
mov
jnp
push
fwait
jge
push
push
mov
pop
mov
addb
adc
das
inc
shlb
pusha
push
rcrb
stc
fcmove
cmp
jle
fs
sub
xchg
xor
xor
inc
sub
push
push
ds
jp
mov
mov
insb
sub
xor
aas
xor
ds
or
out
mov
sarl
outsl
notl
aam
data16
sbbb
iret
stos
stos
stos
adc
pushf
test
fnstcw
scas
or
int
movsb
mov
inc
add
test
in
mov
mov
insl
enter
decl
pusha
xlat
movsb
std
popf
sbb
push
xor
add
mov
lret
sub
dec
rol
faddp
pop
imul
cmpsb
out
sahf
out
lods
mov
mov
lds
push
pop
mov
adc
rolb
pop
in
xor
dec
mov
imul
divl
jo
ret
push
outsb
scas
and
lock
shrl
jnp
push
mov
je
push
and
scas
sub
in
les
fcom
pusha
add
dec
jb
push
xor
scas
outsb
test
or
in
lahf
sbb
lret
lahf
push
dec
and
and
mov
fnstsw
cwtl
push
or
pusha
or
clc
jecxz
xchg
aam
xor
mov
pop
mov
xchg
pop
ljmp
fwait
pop
pushf
fmuls
dec
push
or
popa
jge
movsl
lock
xchg
roll
add
push
mov
push
pop
daa
jbe
cltd
mov
jle
fistl
mov
ja
or
loop
mov
cmp
mov
hlt
loopne
add
sub
sub
pushf
sub
mov
imul
xchg
mov
mov
movsb
lahf
push
xor
cmp
pop
xchg
ja
test
lods
cmp
les
rcrb
cmp
repz
add
out
sub
push
inc
fidivs
repz
lods
inc
jp
sub
mov
and
or
scas
orl
cmp
test
jae
imul
or
testb
mov
inc
sbb
jne
sub
xchg
cmp
imul
out
push
fcoml
inc
jl
jno
or
lock
push
iret
ret
and
push
fld1
int3
enter
lods
test
xchg
add
lea
es
add
scas
inc
enter
outsl
inc
cs
fxch
jl
pop
loope
stos
pop
test
fiadds
int3
adc
mov
inc
addr16
push
and
ret
sub
cmp
inc
adc
jnp
stc
insl
fcmovnb
test
push
push
ljmp
mov
call
mov
pushl
mov
inc
push
sub
inc
or
nop
xchg
fdiv
les
lret
in
js
xor
jl
arpl
repz
xchg
mov
xor
jp
int
inc
int3
push
adc
pop
test
sti
push
cmp
mov
cmp
les
cwtl
fldl
ss
or
inc
scas
add
cwtl
daa
xor
scas
idivl
and
xlat
sbb
pop
jecxz
jb
xor
mov
jp
add
stos
push
cld
or
pop
es
jns
arpl
push
cmp
repz
addr16
rcrb
int
xchg
mov
push
dec
inc
rol
test
mov
test
push
add
std
mov
movsl
mov
sbb
pop
jno
jmp
sub
fcomps
xor
sub
mov
fistpll
filds
stos
mov
mov
add
fsubs
xchg
cmp
dec
sahf
into
or
and
jo
and
in
test
call
push
in
ss
lea
sti
inc
jecxz
jge
jmp
cmp
pusha
xor
arpl
test
add
xchg
scas
jne
movl
outsl
maskmovq
notl
into
ss
movsl
jmp
xor
sbb
lahf
inc
pushfw
rolb
adc
inc
ret
imul
addl
push
out
sbb
ret
mov
ja
jp
fstps
adc
fsts
sbb
push
xchg
movsb
lock
lcall
push
decb
fs
push
imul
lods
mov
out
imul
pop
inc
lea
cs
pop
arpl
dec
ror
lods
rol
jo
out
mov
mov
add
cld
pop
and
imul
jne
xchg
cli
fcomps
test
mov
and
jne
pop
popa
xorl
mov
push
mov
or
int
cltd
jp
pop
jno
jbe
rep
pop
mov
out
imull
adc
roll
sahf
add
and
lret
notl
inc
jp
stos
xchg
mov
fld
ficoml
mov
cmc
lock
inc
ficoms
loopne
or
mov
cmpsb
into
pushf
pop
pop
rcll
stc
lock
out
push
xchg
cli
in
data16
sub
stos
out
negl
repz
int
dec
xchg
lret
dec
xchg
lods
iret
sbb
fnstsw
popaw
lods
dec
imul
sbbl
jae
in
push
push
das
fucomip
hlt
jle
movsl
dec
lods
sbb
sub
into
mov
xlat
cwtl
cmc
push
xchg
dec
sub
in
shll
lahf
inc
insb
pop
add
xchg
push
addl
mov
jmp
orb
dec
sarl
js
xchg
iret
sbb
jae
repnz
setp
pop
insl
push
shl
xchg
popf
js
mov
loop
mov
inc
sbb
cmp
pop
insb
clc
add
cmpsb
mov
mov
shlb
jnp
xchg
jp
cmp
xchg
inc
stc
and
jb
push
dec
std
out
sub
call
out
cltd
pop
pop
dec
repz
daa
dec
add
dec
mov
xchg
jl
pop
cmc
fs
jp
push
sub
lcall
pop
push
test
mov
mov
dec
cltd
inc
add
push
inc
sahf
enter
jg
addr16
cmp
sub
aas
insl
clc
insb
imul
push
ret
ss
call
adcl
aad
clc
jge
sub
les
xchg
mov
xchg
add
push
dec
adc
cmc
inc
inc
es
jo
and
push
movsl
fcoms
sub
cmp
negb
xchg
jg
push
andb
call
call
mov
scas
leave
inc
xchg
push
loope
pushf
push
xchg
dec
movsl
js
pop
sub
sub
pop
jge
je
cmp
push
cmpsb
xor
push
shl
or
jns
insl
mov
cmp
push
popa
je
fstp
repnz
in
sbb
mov
adc
add
sbb
adc
stos
sbb
aad
nop
pushf
push
jb
rorl
bound
add
lea
ret
dec
push
sbb
adc
mov
sbb
push
pop
movsl
xchg
xchg
sbb
xorb
add
cmp
js
mov
dec
pop
cmp
push
pop
insl
roll
mulb
ds
int3
test
jmp
adc
cs
dec
and
sbb
xlat
lahf
fidivs
fisttpll
pushf
lods
jb
sbb
movsb
dec
xchg
outsb
aad
mov
dec
jmp
cltd
xor
jb
cli
and
push
fs
bound
sbb
mov
idiv
jecxz
and
pop
add
or
mov
mov
and
mov
cmp
flds
movsl
mov
push
pushl
xchg
rclb
sub
or
dec
mov
xor
faddp
push
mov
sbb
cli
gs
jno
inc
imul
and
ret
pop
sbb
aaa
sbb
adc
mov
fdivs
mov
out
out
mov
in
xor
lds
xchg
inc
or
and
push
and
arpl
push
and
dec
iret
dec
out
hlt
sub
add
pop
push
jae
test
data16
push
add
or
cmc
addr16
cmc
or
or
pop
mov
cmp
mov
scas
push
orb
dec
sbb
bound
sahf
jbe
mov
push
lret
xchg
popl
imul
push
or
addr16
pop
adcl
mov
mov
push
mov
les
popa
loopne
scas
hlt
ss
xorl
jns
cmp
xor
xor
addr16
pop
or
pop
push
xchg
stos
test
inc
aas
js
sub
lods
push
jle
xchg
stos
ds
test
ljmp
arpl
test
test
loope
sbb
sub
ja
pop
sarl
in
mov
imul
and
fstl
jo
mov
fs
jle
xor
scas
orl
jnp
or
cmc
jb
fisubs
loope
ds
add
aaa
and
call
test
not
jnp
jmp
xchg
jge
sahf
push
and
xorb
lahf
pop
mov
jns
add
pop
addr16
and
add
popa
or
mov
lret
clc
jb
cltd
gs
mov
xchg
ret
scas
loop
mov
pushf
faddl
std
les
and
push
lret
sbb
mov
cmc
xchg
xchg
adc
and
scas
aam
rcr
les
test
fs
adc
sub
pop
sub
into
imul
adc
sub
cmpl
pop
in
add
mov
mov
jle
push
push
xor
jne
shll
hlt
cmpsl
inc
xchg
aaa
jb
outsb
add
test
fbstp
xlat
mov
mov
rcll
inc
js
dec
pop
out
push
frstor
scas
testb
mov
jmp
mov
jnp
stos
or
out
xor
jmp
testb
call
ja
sarb
iret
pusha
dec
iret
xchg
cltd
gs
cli
add
loop
mov
adc
adc
xor
inc
jmp
and
jae
lods
int3
adc
popa
adc
js
sub
cltd
xchg
xor
or
ljmp
outsb
jp
pushl
gs
test
and
sub
push
ljmp
shlb
int
in
insb
scas
push
add
imulb
icebp
test
arpl
pop
es
xchg
dec
inc
cmc
pop
movsl
lods
jns
push
pop
jg
ds
in
bound
popf
and
mov
fldt
fdivrl
cmc
ss
push
adc
stc
fwait
xchg
cltd
je
nop
push
pop
and
push
sbb
sbb
gs
scas
jne
into
jne
push
xor
repnz
cmp
ja
push
pop
arpl
ret
daa
xor
xor
push
cmp
xchg
aas
push
jl
push
orl
inc
pop
fadd
scas
xor
push
and
cmpsb
ficomps
ds
aas
int
cmc
outsb
fldt
leave
cmpsb
aam
rclb
mov
or
movsl
push
mov
jmp
pop
xchg
dec
and
imul
cltd
shrb
aad
mov
and
or
out
scas
push
xchg
mov
subb
push
lret
inc
mov
xor
cmpsb
mov
test
adc
scas
loopne
mov
push
xorl
lret
cwtl
pusha
fistps
lahf
sub
mov
sbb
push
sbb
push
xchg
cmp
push
out
pushl
mov
out
push
mov
int
enter
cmovb
push
mov
mov
int3
pop
pop
sbb
jb
sbb
pop
dec
ds
xlat
xchg
in
jne
aaa
fimuls
dec
lcall
xor
or
push
fbld
dec
inc
xor
ffreep
jns
fdivl
push
xchg
or
inc
mov
and
adc
jle
or
adc
fildll
aas
stos
lds
pop
mov
cmp
test
jge
and
ret
lock
jmp
xor
loop
xchg
jge
or
jnp
push
cmp
adc
mov
test
sarl
shrb
shll
test
push
fwait
xchg
nop
mov
pop
xlat
out
fwait
xchg
std
jmp
nopl
dec
addr16
mov
jmp
mov
lret
mov
sbb
cmp
std
adc
mov
sbb
cmp
pop
cltd
ret
repnz
or
mov
lock
sbb
jmp
js
aaa
adc
pop
lret
loopne
fistpl
mov
divb
ds
adc
mov
cwtl
mov
test
inc
pop
sub
lret
mov
in
fwait
into
adc
mov
lret
orb
ss
xchg
std
mov
hlt
mov
hlt
stos
in
mov
cmp
shlb
in
adc
les
pop
es
loopne
mov
cmp
faddl
imul
lahf
add
mov
out
adc
insl
inc
cltd
out
adc
adc
aad
hlt
xchg
ret
in
inc
loop
lds
jge
push
inc
pusha
jae
push
push
mov
and
mov
test
cld
scas
psrld
add
roll
stos
sbb
add
mov
push
lret
jo
scas
or
sahf
out
add
push
mov
mov
or
cld
sarl
hlt
enter
fnstenv
xor
cltd
push
xchg
fiadds
sub
pop
dec
mov
cltd
jg
inc
adc
cmp
repnz
mov
mov
scas
not
add
call
shl
in
in
xor
fbstp
dec
bound
push
js
in
aaa
dec
mov
and
inc
scas
mov
dec
push
inc
push
dec
ljmp
mov
test
fwait
test
fiadds
pop
fldl
mov
aad
mov
push
dec
fistpll
rol
sbb
pop
mov
and
es
mov
pop
jno
mov
in
fbstp
jbe
lea
into
mov
add
xor
lcall
adc
pusha
test
jbe
gs
mov
jae
ret
jp
setae
xlat
mov
repz
push
shlb
in
ror
ss
sub
fstpl
push
fwait
scas
pop
shlb
cmpsb
sbb
movsl
test
mov
stc
sub
sbb
js
outsb
push
testb
test
xchg
fs
xor
scas
xchg
push
sub
jnp
lds
pop
pop
dec
icebp
xor
mov
sbb
or
jns
icebp
mov
push
xor
imul
push
add
adc
cmc
test
jmp
or
shrl
jbe
mov
nop
mov
pop
js
xchg
int
mov
addl
and
movsb
dec
sub
inc
repz
xlat
shrl
sahf
ds
ja
pop
sub
xchg
or
sub
pop
loope
clc
call
or
lock
fld
addl
push
ja
inc
add
cwtl
cmc
mov
addr16
ljmp
nop
lds
adc
add
mov
mov
aas
ret
sbb
lea
test
stos
or
gs
lods
mov
in
mov
push
push
xchg
cli
aad
and
lds
ret
push
lods
aaa
inc
jne
movsl
lock
adc
nop
lahf
mov
inc
movsl
add
mov
std
fmuls
in
ss
mov
xor
fisubs
add
test
fldt
mov
outsb
subb
les
xchg
xchg
push
mov
rcrb
inc
add
fiaddl
in
orl
adc
mov
gs
or
cli
push
std
mov
pop
inc
xchg
sbb
push
push
mov
data16
adc
add
inc
jo
adc
in
outsl
push
mov
or
aaa
aas
xor
dec
leave
xchg
fadd
adc
daa
xor
jnp
dec
cs
mov
dec
in
mov
test
fwait
lods
ljmp
fdivl
inc
lcall
dec
push
sbb
mov
test
fcomps
push
cld
testl
jo
jbe
ds
js
dec
mov
neg
es
movsb
push
sbb
adc
dec
dec
sub
jbe
jno
in
mov
lret
loop
inc
and
push
fadd
pop
and
in
dec
js
jne
pop
out
cmp
dec
add
and
fmuls
mov
repnz
repz
movsl
mov
lods
mov
xor
cmp
rcrl
outsl
mov
push
into
mov
out
xlat
mulb
or
test
dec
sub
js
sub
out
pop
outsl
sbb
sub
rcrl
pushf
lahf
pop
push
std
lret
push
test
pop
mov
add
or
mov
add
out
ja
xor
cs
ljmp
aas
sbbb
cmp
out
push
jg
push
mov
pop
es
int3
cmc
push
rcll
mov
pop
or
sbb
jnp
lahf
xor
push
lods
in
mov
and
fimull
sarb
mov
scas
daa
push
hlt
jae
mov
ret
cmp
mov
jecxz
inc
cmp
sahf
pop
aam
idiv
push
mov
shrb
mov
ljmp
cmp
xlat
test
fcoms
xchg
loop
jo
in
pop
pop
std
ffree
imul
and
shrl
xchg
sbb
lahf
adcb
adc
push
add
or
rorb
mov
cmc
push
inc
push
das
push
insl
imul
push
inc
bound
sbb
and
push
add
cmp
fildl
or
fcomi
and
inc
mov
xlat
xor
add
les
js
pop
jge
test
xchg
subl
sahf
lret
out
adc
xor
or
cwtl
test
mov
xchg
mov
out
ret
or
and
xlat
mov
mov
mov
in
xlat
leave
frstor
decl
aad
pop
xor
jp
lcall
daa
sbb
in
stos
aaa
sti
mov
sti
and
shlb
in
sbb
in
call
mov
repnz
pop
mov
xlat
xor
cmp
mov
pop
xchg
int
divb
aad
mov
mov
or
pop
les
xchg
arpl
jnp
adc
int
filds
data16
leave
subb
lock
clc
mov
lds
in
mov
test
andl
popf
jno
iret
iret
adc
in
fsubl
dec
push
inc
arpl
rcl
adc
std
stc
mov
push
jg
outsl
fmull
in
pusha
jmp
test
test
adcb
fstps
jmp
xchg
sbb
push
addr16
repnz
mov
aam
xchg
mov
lea
cmp
clc
movsb
rol
jbe
lret
cld
inc
xor
gs
loope
iret
jmp
mov
jne
shll
scas
jbe
push
push
test
jp
in
sub
add
stos
xor
std
pop
ja
add
mul
outsl
insb
dec
clc
ja
add
inc
pop
repz
enter
aad
pop
add
filds
add
jle
add
arpl
aad
cli
jp
xor
mov
sub
mov
inc
in
mov
mov
sbb
cmp
sarl
aaa
loopne
mov
mov
jb
clc
sbb
fiadds
fwait
ret
push
lods
popf
push
pop
in
xchg
mov
and
adc
fwait
sub
insl
cmp
int3
adcb
jecxz
dec
xchg
add
mov
outsl
pusha
and
cmp
sub
notb
int3
dec
notl
cmp
cmp
lcall
push
and
pop
subb
pop
hlt
aam
mov
dec
mul
sub
xlat
cmp
mov
add
and
scas
iret
dec
pop
rcrb
pop
fldcw
aaa
out
mov
fisubs
add
aaa
xchg
pop
ljmp
sbb
inc
les
pop
loope
sub
outsl
mov
push
cmp
pop
lods
ret
jle
stc
cmpsb
mov
repnz
or
sub
das
push
mov
jp
bound
mov
inc
and
xchg
insl
negl
push
pushf
pusha
inc
cmp
jmp
sbbb
sub
or
sub
rclb
aam
fcmovne
adc
int3
les
add
iret
out
adc
call
add
sbb
out
das
fists
or
add
rorl
in
jnp
dec
sbb
dec
mov
add
and
jno
ret
add
sub
pop
std
repnz
dec
sbb
test
pop
jmp
aas
aam
lea
add
xor
sub
jg
jmp
mov
add
loope
sbb
or
rclb
les
clc
jns
aad
mov
lret
sub
addb
pop
lcall
xor
dec
fcoml
push
mov
jp
fidivrl
add
mov
addl
mov
adc
cmp
push
stc
loop
loope
dec
outsb
mov
push
in
decb
mov
dec
mov
dec
fdivr
adc
scas
xor
aas
mov
enter
mov
fsubp
mov
cs
test
pop
lret
out
fadds
loopne
adc
stos
or
leave
out
pop
mov
mov
adcl
adc
and
jne
sbb
xchg
xor
push
out
pop
xor
in
movl
xchg
movsb
sub
mov
stc
or
mov
cmpsb
leave
cmp
stc
xor
std
xchg
test
ja
daa
xor
adc
add
cmc
mov
xchg
insl
lods
sub
and
lock
jl
mov
xchg
jns
jne
push
cmc
pop
mov
bnd
inc
cli
mov
imul
cmp
mov
subl
xlat
data16
dec
mov
fdivr
je
loopew
jl
xor
mov
mov
aas
sbb
xchg
push
mov
dec
xorl
cmpl
mov
dec
jle
cmp
divb
in
imul
adcl
repnz
lcall
pop
fcomps
stos
push
stos
pop
lds
mulb
sub
ljmp
aaa
push
fidivs
inc
xor
ficompl
cmp
aad
dec
xchg
inc
mov
mov
pusha
jmp
clc
and
insb
or
push
pop
push
in
fstl
lcall
add
add
mov
sub
push
imul
add
xchg
aad
adc
arpl
stos
scas
push
xchg
pushf
ds
out
xchg
mov
loopne
add
and
mov
jecxz
testl
shrl
cmp
test
leave
mov
dec
shll
out
add
jecxz
adc
int3
je
jp
gs
and
xorb
bnd
xor
sbb
call
mov
pop
add
dec
inc
fldcw
xor
pop
ss
inc
mov
scas
popa
repnz
mov
fmull
mov
push
cwtl
pop
adc
shll
imul
mov
and
sbb
dec
and
or
jle
out
cmp
mov
mov
or
aaa
or
jle
mov
inc
jae
mov
push
jnp
mulb
bound
in
jns
clc
pop
inc
pop
out
decl
sub
or
nop
insb
xlat
sbb
adc
fsubrs
jle
lods
inc
aaa
or
cmpsb
mov
in
xor
jecxz
push
popf
testl
jmp
fwait
xor
loop
sub
cmpsl
js
mov
test
nop
aaa
pop
inc
sbb
jne
dec
movsb
mov
push
pop
adc
jne
es
dec
adc
sub
shlb
lret
inc
fwait
sarl
sbb
inc
pop
add
cwtl
push
imul
mov
mov
cmpsl
mov
adc
xor
jge
bound
cmc
xor
data16
jae
fsub
xor
cs
and
xlat
mov
mov
cwtl
aam
cmp
shll
mov
cmp
lahf
sbb
in
mov
inc
xor
pushf
out
inc
mov
sbb
es
das
dec
insb
lea
loope
xchg
insb
jne
jecxz
mov
sub
test
outsl
jae
mov
mov
lret
loope
stos
ds
int
mov
rcl
data16
sub
stos
pop
and
xor
xor
ss
xor
enter
shrl
pop
cmp
cmp
or
or
aam
dec
insl
mov
xor
gs
and
sbb
or
jnp
and
mov
mov
mov
dec
in
lcall
sbb
outsb
fs
xchg
jp
rol
xor
sub
jp
fyl2x
pusha
inc
cmp
aas
add
fdivrl
leave
arpl
sbbb
stc
push
scas
xchg
inc
ffreep
xorl
dec
lret
lcall
sbb
pop
jge
mov
sub
mov
adc
ficomps
jne
loope
leave
cmp
pop
mov
sub
addr16
mov
jae
mov
xchg
in
lock
lods
push
xchg
lret
mov
sbb
xor
and
fcomp
rcrl
cmc
sbb
and
int
enter
sbb
lods
sbb
adc
js
or
and
lock
mov
xor
adc
dec
sbb
xchg
sbb
push
cmp
arpl
push
xor
sbb
jp
lret
dec
das
in
xor
fisttpl
hlt
js
push
in
lds
xchg
push
movsb
cmp
fnsave
out
mov
scas
jle
mov
lahf
insl
fs
cmp
fsubrs
daa
jnp
cwtl
imul
push
inc
les
jae
mov
ds
push
std
cmpsl
insl
or
xor
jl
scas
rolb
leave
sbb
add
sbb
arpl
cwtl
rcr
push
ljmp
xchg
jns
stc
mov
nop
inc
jl
or
stos
cmc
rcr
iret
daa
repz
jne
mov
fnstcw
loopne
pop
xor
loope
xor
sub
xor
jno
outsl
xchg
fs
adc
push
cmpsb
aas
push
lahf
ret
popa
incl
mov
push
movd
add
sti
xor
mov
rorl
nop
push
orb
mov
gs
mov
adc
cmpsb
mov
mov
mov
stos
xor
insb
sti
fldenv
aam
movsb
repz
add
ljmp
and
scas
sbb
mov
sub
in
mov
test
xchg
mov
add
xchg
sahf
xlat
outsb
sahf
sti
aad
adc
jle
push
xchg
popa
and
push
push
jo
jnp
lods
loopne
jne
dec
jne
or
or
sti
fnsetpm(287
dec
xor
lea
cltd
and
arpl
dec
xchg
movsl
sbbl
mov
adc
mov
movsl
sahf
and
loope
push
mov
xor
mov
out
cltd
repnz
push
ljmp
scas
pxor
pop
lret
popf
push
sub
sbb
adc
repnz
cmp
cmp
lcall
xchg
popa
inc
xchg
or
popf
jle
inc
jge
mov
pop
sbb
sub
and
hlt
xor
test
pop
lods
stc
les
fs
push
in
push
mov
repnz
out
cmp
ja
sub
jle
out
icebp
fldenv
dec
sti
xlat
jnp
mov
mov
pop
mov
addr16
and
mov
rclb
xchg
jno
fstps
xchg
fwait
dec
popa
ljmp
mov
jns
mov
push
popf
pop
add
scas
std
and
mov
fldenv
sbb
popf
mov
lods
int3
in
mov
jne
xorl
lods
cmp
ficoml
das
fwait
pop
int3
xchg
std
push
insl
ds
inc
push
inc
dec
xchg
inc
xor
pop
out
cs
jb
xchg
inc
xchg
mov
loopne
mov
xor
aaa
pop
adc
sbb
fiaddl
cmp
xor
out
dec
rol
mov
push
sbb
or
mov
cmp
mov
lret
lret
and
mov
addr16
inc
test
cmp
movsb
stc
add
xchg
adc
push
pop
imul
loope
mov
jbe
sbb
xor
std
adc
push
cli
cmpsb
mov
pop
pop
movsb
subb
cwtl
sub
sub
fcmovnu
fistl
imul
incb
mov
adc
fimull
push
data16
movsb
or
sti
sbb
lods
mov
add
add
sbb
sbbb
mov
and
sub
or
int
int3
mov
pop
sbb
mov
cmpsb
mov
adc
inc
mov
es
sahf
xchg
pop
out
cmp
add
pop
xchg
int3
pop
pop
lods
and
xchg
in
push
sysenter
jp
je
popa
sbb
xchg
pop
cli
pop
jnp
cmpsl
fisubrs
shl
mov
push
add
pop
jg
and
ret
dec
mov
aam
add
push
pop
cmp
jb
fucomp
push
in
loopne
cmp
mov
stc
mov
stc
xchg
call
pop
sti
xorl
insb
mov
rolb
dec
incl
sub
mov
pushf
or
cmpsb
loop
add
xor
gs
jae
popf
mov
push
lret
pop
ljmp
or
pop
jle
rcl
dec
push
pop
inc
jno
movsb
ror
mov
mov
in
adc
cmp
cmp
aam
mov
cmc
repnz
dec
mov
cltd
jle
rcr
pop
xor
cmp
std
or
outsb
jl
stc
dec
out
pop
hlt
mov
out
inc
inc
pop
int3
lcall
xor
mov
aam
and
xor
lahf
std
push
and
inc
dec
cld
mov
lcall
adc
mov
cmpsl
test
mov
outsl
dec
push
sbb
fistpl
push
and
or
cmp
mov
dec
cmp
push
idivb
ret
sbb
inc
mov
xorl
popa
push
lods
jbe
lds
ret
xchg
int3
xchg
push
aad
int3
and
stc
push
mov
push
sbbl
jo
jmp
pop
fs
jns
loop
ds
fsts
inc
xlat
dec
xlat
outsl
out
mov
hlt
jg
sub
inc
push
repnz
aas
and
jmp
cmp
push
push
cltd
inc
sahf
push
cltd
sbb
loopne
imul
mov
ss
sbb
mov
testl
cmp
in
lods
out
loope
cmpsb
repnz
rolb
enter
insl
mov
sar
push
add
mov
rcll
mov
sub
mov
sti
aaa
or
jecxz
jne
insb
out
in
cmp
cmp
pop
cmp
stc
jae
pop
mov
test
jns
sub
sub
lea
and
cli
or
push
push
dec
and
rol
mov
xchg
add
nop
sub
or
jecxz
and
mov
sbb
mov
popa
adc
sbb
mov
adc
jle
js
lods
cmp
xchg
add
rcr
and
inc
jge
mov
test
nop
and
lea
pop
pushl
loopne
popa
int3
ficoms
pop
push
dec
inc
lds
pop
and
addr16
xchg
enter
or
sbb
lods
mov
addl
xchg
int3
imul
and
mov
nop
mov
mov
inc
jle
pop
call
ret
adc
sub
push
bound
cmpsb
idivb
jle
ljmp
mov
cltd
imul
shll
pop
push
or
dec
in
outsl
mov
and
or
imul
sti
inc
cmp
dec
int
push
frstor
testb
mov
icebp
mov
xchg
repz
mov
lds
nop
shll
jno
jg
imul
push
push
xor
fsts
je
mov
push
sbb
jo
lds
dec
sub
data16
xlat
jl
xor
popf
lods
sti
nop
sub
testb
sti
movsl
arpl
add
sbb
lret
popa
and
push
inc
adc
and
sub
mov
push
lds
dec
mov
cli
ss
sbb
aas
stos
dec
test
sbb
pop
into
in
push
dec
lock
outsb
and
aas
push
movsl
inc
add
jmp
bound
lret
loope
jno
insl
sbb
dec
jb
out
pop
movsb
xor
adcl
push
out
xchg
mov
adc
and
imul
pop
jecxz
inc
add
je
outsb
in
adc
adc
xor
add
pop
ss
sahf
popl
mov
in
mov
mov
fcoml
in
aas
pop
jge
and
pop
ds
cmp
scas
cli
mov
lds
hlt
cmpl
xor
ret
xor
or
hlt
xchg
push
lock
in
test
in
xor
cmpsb
push
cmp
mov
sbb
sbb
lock
cli
jns
jmp
cmc
jae
arpl
out
test
mov
loopne
mov
faddp
int
imul
aas
mov
popa
mov
int3
repnz
gs
icebp
push
pop
lahf
xor
inc
and
cld
and
xchg
xor
jns
popa
and
add
hlt
push
cld
dec
stos
and
pop
lret
xchg
mov
imul
mov
pop
jno
and
aas
cmp
fwait
or
pop
cwtl
and
jbe
mov
dec
jmp
iret
push
and
inc
mov
insl
scas
fimull
mov
sub
fsub
jae
je
test
and
sbb
mov
push
call
lods
bound
ret
xor
sbb
xchg
xchg
out
loopne
ja
pushf
data16
lods
xchg
push
rolb
mov
jecxz
mov
fs
loope
shlb
sbb
cmpsl
xchg
and
aaa
mov
repnz
cmp
ljmp
es
ffree
inc
and
int3
pop
subl
push
xchg
jne
je
inc
ret
cli
inc
or
test
cltd
leave
cltd
pop
aas
mov
mov
scas
and
hlt
xchg
sahf
pop
das
mov
in
dec
pop
int3
mov
decl
add
pusha
inc
or
psrlq
jo
sahf
xchg
mov
mov
xor
dec
push
popf
sub
dec
ficomps
fnstcw
sub
out
fildl
int
cmp
add
out
das
aam
pop
adc
aad
mov
les
inc
mov
aaa
inc
hlt
test
sbb
push
subl
in
xlat
cmp
hlt
clc
jo
pop
inc
xchg
int
jae
jg
pop
dec
insl
clc
aas
push
adc
mov
lods
xor
add
je
loop
int3
mov
mov
fidivs
vpavgw
out
xchg
or
inc
out
cmp
jns
popl
sbb
push
daa
out
xor
clc
out
inc
jge
lret
cltd
jne
add
sbb
mov
shrb
lods
cmp
pop
pop
bound
lahf
mov
dec
pop
and
pop
loopne
enter
inc
popa
mov
dec
mov
jne
and
xor
mov
test
rcl
mov
mov
jb
jl
mov
imul
imul
roll
orb
dec
jae
shlb
and
scas
fnstsw
nop
scas
out
cmc
pop
out
xchg
or
jmp
mov
lods
fucomp
incb
sahf
and
fisttpl
and
jbe
push
das
cmp
shlb
jb
out
mov
repz
sbb
nop
andb
jge
in
sarb
fcmovne
movsb
jmp
xor
add
ror
cmp
andb
mov
fcoml
dec
repz
push
xchg
xlat
cmp
sub
mov
cmpb
loopne
mov
imul
xchg
push
mov
or
loopne
lahf
int3
jp
jns
push
adc
sbb
cmpsb
enter
inc
sbb
fstpl
out
or
lods
jo
pop
sti
popa
call
sbb
xor
iret
mov
jbe
cs
sbbb
shrl
or
adc
push
cmp
add
xor
js
test
aad
es
add
jae
mov
mov
pop
insb
cmp
mov
and
jmp
es
notb
inc
bound
leave
mov
insl
sarb
push
xor
push
xchg
mov
lahf
arpl
cmp
push
cld
movsb
stos
and
ret
or
jmp
out
aaa
mov
xchg
adc
mov
add
adc
push
stc
push
cmc
jb
mov
pmulhw
mov
rol
xchg
int
xor
mov
into
jns
int
mov
add
add
inc
stc
repz
sbb
icebp
insl
fistps
mov
adc
inc
mov
jmp
insl
repnz
je
jp
push
dec
mov
sub
lahf
cmpb
lea
lods
daa
fs
jmp
scas
mov
cwtl
xchg
jbe
xchg
mov
adc
js
inc
mov
imul
in
pusha
iret
pop
xchg
push
fucomi
xchg
xor
es
or
pop
lods
and
sarl
mov
aad
push
cmc
push
movsl
push
mov
jl
adc
in
cmc
cmp
idivb
add
aam
mov
in
sbb
inc
pop
add
stc
sbb
mov
xor
fsubl
fsts
mov
insb
int
and
jecxz
add
or
scas
jle
push
pusha
mov
aam
mov
stos
xchg
sub
fcmovbe
mov
test
cmp
movsl
dec
orb
dec
mov
fmul
dec
gs
in
push
xchg
adc
es
jno
stc
push
jo
xchg
mov
test
cmp
stos
xchg
test
mov
mov
mov
push
pop
inc
mov
and
push
push
sbb
test
daa
ja
pop
adc
das
test
das
mov
hlt
jns,pn
sbb
cmc
out
or
dec
shl
ret
out
repz
addr16
mov
cmp
mov
pop
movsl
mov
outsb
mov
fildll
ljmp
shrb
mov
mov
push
addl
fildll
pop
int3
ret
sbb
les
jmp
clc
js
adc
aam
iret
insl
ljmp
dec
cmpsl
popa
push
fstp
cmp
xor
mov
movsb
and
cmc
fsubrl
hlt
insl
cmp
sbb
popa
das
xor
mov
ljmp
and
pop
pop
testl
out
add
push
cmp
xchg
enter
mov
test
int
dec
fisubrl
movsb
inc
mov
push
push
cmp
or
lret
xchg
fsts
pop
int
inc
push
push
scas
aaa
cmp
sbb
in
push
in
fidivl
out
cmp
xchg
std
xchg
ss
pop
outsb
pop
inc
or
sbb
test
ds
inc
push
mov
imul
out
movsl
push
sub
sub
fwait
add
mov
push
ss
mov
mov
jno
xchg
in
sub
test
xchg
fidivl
adc
jp
or
lods
adc
mov
fld
cmp
push
lea
loopne
mov
push
push
dec
fsubrp
dec
push
lods
js
fs
iret
inc
js
test
cs
cmp
loope
pop
adc
add
pop
insl
out
out
xchg
lahf
cmp
add
test
mov
dec
stos
arpl
xor
jo
test
nop
ja
lahf
add
inc
lret
lods
inc
jnp
mov
into
stos
rolb
xor
pop
aad
push
mov
inc
in
cmp
mov
imul
inc
or
jmp
arpl
repnz
negb
outsl
push
sbb
hlt
mov
sub
xor
out
inc
inc
push
cmp
les
aas
js
sahf
cli
aad
fldl
into
adc
test
outsl
xor
mov
inc
push
cmc
loope
push
mov
xchg
stos
xor
lods
mov
mov
jnp
sbb
shr
ss
jno
dec
pushf
push
dec
incb
pop
mov
jb
mov
inc
mov
inc
push
xchg
inc
xor
dec
clc
xlat
test
stos
stc
jge
jg
sbb
pop
dec
sti
sbb
sub
push
xchg
scas
mov
pop
and
push
fisubrs
data16
jne
inc
jnp
pusha
int
stc
iret
adc
scas
addr16
scas
mov
or
xchg
lock
std
pop
or
pop
jno
fldt
inc
dec
pop
into
hlt
sub
cmp
pop
mov
fldenv
cmpsb
jb
xchg
loop
mov
pop
and
ljmp
bnd
repz
std
js
dec
and
imul
sub
xchg
adc
addr16
jg
adc
adc
pushf
jle
mov
mov
jno
adc
adc
iret
sub
rol
icebp
lcall
push
std
sub
inc
test
jp
jb
push
fisttpll
cmp
mov
arpl
jo
cmp
mov
cmc
cmpsb
iret
in
repz
dec
orl
jb
out
test
pop
cmpsb
jno
int3
cmp
jg
outsb
imul
mov
lret
fmul
clc
shrb
addb
mov
ficoml
les
sub
push
xorl
jo
addb
inc
mov
ljmp
sbb
sbb
jg
out
jmp
add
stos
cmp
push
and
stos
jae
arpl
shlb
call
in
in
mov
stos
push
adc
or
or
dec
pop
mov
pop
call
fwait
insb
test
sbb
repnz
jmp
dec
push
jne
out
imul
pop
add
lea
push
insl
inc
rorb
stc
mov
aaa
adc
xchg
daa
adc
xchg
loope
and
jmp
and
ds
mov
daa
popa
dec
jle
adc
add
das
sbb
sti
jno
je
push
add
in
inc
push
sbb
mov
shlb
adc
testl
rcrl
dec
or
xorl
add
in
push
gs
fdivs
mov
aam
pop
mov
sub
cwtl
test
xlat
mov
inc
mov
out
sbb
ds
cmp
lds
or
ds
mov
mov
add
inc
pop
imul
lahf
and
inc
popa
ret
dec
cmpsl
mov
mov
inc
push
fldenv
scas
mov
xchg
test
loop
in
test
loope
data16
outsl
pusha
out
jnp
int
pop
inc
jns
in
jno
jle
cmpsb
jae
push
addr16
mov
out
das
inc
xorl
sub
std
mov
adc
fcomp
inc
ret
and
add
mov
mov
dec
cld
xor
rcl
adc
and
das
mov
ss
push
test
mov
rcrl
icebp
dec
push
xchg
sbb
out
mov
shl
adc
mov
mov
mov
mov
imul
test
fistpll
add
fstps
dec
aaa
and
adcb
xchg
test
and
and
lods
adc
push
sarl
xchg
lahf
js
mov
loope
scas
jmp
add
mov
mov
jle
xor
shrb
xchg
in
mov
jl
push
lods
in
xchg
insb
adc
and
movsl
fdivp
dec
push
push
fldt
pusha
push
cmp
push
repz
dec
mov
jbe
inc
clc
aas
add
mov
push
xchg
in
fnstcw
test
mov
pop
jle
das
mov
mov
lcall
rclb
fimuls
inc
out
cmc
inc
stc
mov
fstps
inc
mov
mov
jg
sahf
or
ljmp
lods
mov
mov
pop
push
cmp
push
jmp
adcl
xchg
jle
dec
xchg
sub
mov
lret
adc
adc
jmp
cs
mov
push
es
pop
mov
orb
cltd
out
sbb
push
mov
mov
xchg
or
jns
sbb
xchg
shll
or
sub
adc
popf
sarb
jle
push
fcoml
pop
lahf
xchg
repz
lods
mov
ss
lahf
push
fldenv
jae
bound
and
jmp
pop
cmpsl
out
addr16
ror
das
int
ds
jo
ss
mov
sub
pop
out
dec
pop
insb
in
xor
gs
cmp
adc
cmp
lea
loopne
jnp
dec
test
mov
push
bound
das
mov
jnp
jmp
or
imul
inc
sbb
test
and
xchg
inc
int3
push
loopne
or
mov
lahf
scas
lds
push
shll
hlt
addr16
jp
ffreep
shl
loopne
push
mov
fisubrs
sbb
jp
dec
cli
dec
idivb
mov
jle
and
sbb
xor
enter
stos
add
test
sbb
loope
adc
dec
or
sub
stc
pusha
iret
subl
movsl
cmovno
pop
sbb
dec
lods
out
imul
push
cmp
stc
call
adc
pop
je
dec
xor
popf
data16
sbb
xor
inc
ss
jecxz
insl
pop
sbb
dec
inc
es
and
pop
in
movsb
inc
xchg
sbb
roll
push
jecxz
loope
adc
cmp
cmp
call
push
xor
dec
mov
sbb
cs
scas
ljmp
or
mov
jns
loope
xchg
cmp
cs
jp
sbb
movsl
pop
pop
mov
rcrl
xor
jp
fsubl
xchg
lods
cmp
repnz
negb
movsl
jb
jae
cs
js
mov
adc
popa
or
pushf
js
or
adc
add
inc
add
sbb
pop
jmp
addr16
lods
jle
dec
loope
push
xor
push
js
pop
das
xchg
add
int3
into
cltd
bound
aaa
bt
xchg
nop
cmp
add
sbb
loope
dec
loopne
ret
push
add
scas
xchg
faddl
xor
sub
scas
lahf
rorb
inc
mov
iret
loope
mov
jmp
sub
insb
add
shrb
jns
fsubrp
jp
test
in
bound
lock
cld
test
inc
cmp
pop
insb
popa
lret
inc
imul
push
into
test
mov
pop
fsubs
sbbb
sub
pushf
cli
dec
pop
repnz
icebp
stos
loop
daa
das
out
in
mov
ja
mov
lods
cmp
xchg
fdivl
adc
adc
pop
adc
icebp
ljmp
fstps
xchg
test
add
sub
test
xor
jbe
mov
ret
test
test
cld
dec
sub
lds
fistpll
add
inc
and
mov
inc
roll
xor
mov
mov
leave
mov
fstl
adc
lods
jnp
js
adc
add
push
push
mov
les
adc
test
arpl
ds
loope
cmp
and
lods
andb
jge
sub
dec
sarb
ja
push
jne
std
cmc
mov
lcall
outsl
lods
or
sbb
cmc
adc
bound
jmp
ljmp
add
mov
lret
lods
inc
mov
fs
call
add
jp
mov
push
lahf
xchg
dec
dec
jle
nop
popfw
cs
and
adc
jmp
insb
push
lods
fadds
mov
pop
or
enter
adc
mov
inc
leave
jnp
sub
push
and
mov
ds
mov
rorb
test
rclb
inc
push
int3
pop
xchg
daa
fdivrl
ljmp
orl
sub
mov
faddl
adc
les
loop
and
sbb
jl
inc
jge
fwait
pushf
js
xchg
in
outsl
fwait
stc
adc
xor
cmp
add
mov
scas
roll
or
loopne
popa
xchg
dec
push
jp
sbb
mov
rol
sub
mov
fs
mov
push
stos
inc
sbb
imul
stos
loope
and
pop
sub
fcoml
push
test
insb
shrb
lods
mov
dec
aas
jne
mov
pop
mov
jmp
nop
pop
xrelease
icebp
add
rorl
mov
das
cmp
ret
jl
mov
pop
and
push
jp
pop
add
cwtl
mov
subl
out
ds
lret
scas
xor
adc
mov
arpl
repnz
repnz
xchg
pusha
lock
push
jp
dec
or
test
loopne
imul
mov
pop
pop
faddp
or
lcall
xor
add
imul
out
dec
adc
repz
pop
adc
aad
hlt
push
cmp
call
cmp
sbb
jnp
xorl
mov
xchg
and
shrl
jl
test
jne
outsb
xchg
cmp
pusha
push
or
mov
xchg
pushf
out
pop
sti
std
inc
jb
or
push
imul
sarl
mov
xchg
sbb
imul
movsb
and
sahf
xchg
adc
mov
or
idivl
jo
imul
xlat
movsb
inc
iret
sub
mov
add
in
scas
or
ss
jns
xchg
jecxz
dec
inc
addl
addr16
mov
test
leave
xor
adc
clc
cmp
jne
in
xor
xchg
imul
ljmp
ss
add
call
fnsave
jp
stos
lea
pushl
jo
sub
jmp
sbb
sahf
incl
xor
lods
mov
fildll
jnp
cmp
mov
inc
imulb
loope
bound
xchg
xchg
inc
xchg
test
dec
pop
loop
jle
cmpl
inc
push
jl
jnp
sti
inc
jo
dec
rcrb
rcl
jns
pop
jo
jbe
cltd
call
sub
in
inc
adc
les
cwtl
adc
rolb
dec
repz
aam
mov
inc
mov
push
sub
push
adc
push
push
mov
push
adc
inc
sub
inc
jnp
stos
cmp
cltd
pushf
and
and
les
sbb
ret
sbb
in
clc
jae
ljmp
fdivrl
hlt
dec
fiadds
cs
daa
and
into
xor
test
add
mov
les
jl
dec
insb
adcl
and
rolb
ss
dec
jb
and
fdivrl
out
mov
mov
out
js
cmp
cli
jmp
imulb
mov
stc
add
out
mov
push
jmp
cmp
inc
lret
mov
xor
or
push
xlat
scas
imul
or
jb
clc
enter
inc
inc
jbe
cmp
into
test
pop
cmp
xor
imull
inc
fmull
cli
rcrl
imul
pop
inc
jmp
ret
or
xor
pushf
add
shrl
inc
and
std
test
inc
lock
pusha
mov
shl
or
faddp
or
icebp
jb
dec
dec
je
dec
int3
shl
rcrb
movsl
je
sbb
in
aaa
fmuls
sub
loop
lock
aam
lret
repnz
lcall
adc
and
pop
insb
mov
outsl
insb
test
xchg
cmp
in
fdiv
jecxz
xor
rcll
xor
mov
orb
sub
in
mov
shll
xlat
lods
xor
jg
pop
sti
pop
mov
mov
jae
cmp
test
jb
mov
insb
inc
scas
sbb
xchg
lret
sti
xor
jle
shll
iret
jo
pop
cmp
lea
je
je
xchg
add
mov
fwait
insb
mov
jnp
icebp
add
push
xor
push
enter
ror
test
inc
sbb
cmp
stc
jg
lods
call
jne
sti
into
sbb
cwtl
ja
jecxz
inc
divb
jmp
stos
sub
dec
fs
fdivl
sbb
xchg
mov
outsb
xchg
jae
lret
fisubrl
fwait
popa
mov
cmp
in
mov
lods
jo
xchg
sub
icebp
iret
ret
lcall
stc
mov
add
cmp
les
xchg
add
inc
in
loop
or
pop
adc
mov
insl
pop
in
xor
pop
adc
add
imul
cmp
dec
mov
and
push
es
and
icebp
mov
fdivrp
shlb
jo
fmul
add
repnz
mov
ss
fucomp
ret
movsb
mov
inc
sbb
insb
cwtl
xor
mov
incb
dec
mov
ja
push
push
and
xorl
fstpl
lcall
mov
aam
aam
sahf
dec
sbb
jp
mov
add
shll
mov
sti
sbb
adc
icebp
cmp
stos
push
mov
pop
cmc
push
dec
sub
xchg
pop
and
or
call
lock
sbb
jmp
xchg
xchg
sbb
mov
hlt
add
mov
jge
mov
incb
jno
mov
dec
shrb
sub
inc
out
jbe
xor
loopne
call
ja,pn
sub
cld
push
out
mov
jae
pop
xchg
popa
rcl
pop
cmp
or
mov
xor
xor
cmp
xlat
mov
push
cmc
jl
inc
lret
jbe
add
sub
shrb
or
inc
pusha
push
leave
xor
out
sub
out
fucom
push
dec
sub
cmp
pop
xchg
or
mov
rorb
xchg
add
and
and
xchg
push
cld
xor
fists
and
and
iret
pop
sbb
xchg
cmp
jno
pop
orl
into
dec
or
sub
fadds
jmp
pop
subl
mov
andl
sbb
cmp
push
mov
data16
inc
and
xchg
mov
test
or
adc
xchg
push
shll
hlt
dec
cmpsb
movsb
cmp
jo
push
and
movsl
lret
jno
aas
xlat
or
push
lock
iret
int3
int3
inc
fmull
jnp
outsb
mov
push
incl
sarb
sbb
sbb
add
aam
leave
repz
pop
cmp
jecxz
push
movl
pop
pop
xlat
and
int3
cmp
mov
and
add
fsubr
mov
in
jns
out
rcrb
xor
push
mov
xlat
sbb
mov
pop
jne
and
push
enter
lret
pop
xchg
fwait
adc
push
jmp
and
push
dec
call
pop
scas
fdivrl
popa
scas
or
test
pop
loop
std
iret
xchg
inc
pop
js
int3
imul
repz
into
dec
jle
popa
nop
stos
arpl
sbb
lret
cmpsl
out
push
ficomps
mov
aad
adc
xchg
sub
enter
pop
jge
inc
fisubl
fs
lods
jg
cli
adc
xchg
fimull
leave
gs
mov
mov
shlb
mov
jns
loop
leave
inc
rcr
inc
ret
std
ret
ret
ss
inc
sub
cs
adc
bound
cld
push
int3
leave
fmuls
hlt
lret
push
xor
or
inc
xor
clc
xorb
stos
out
in
xorb
pop
xor
dec
aaa
sbb
mov
repz
iret
subl
push
idivl
scas
inc
hlt
jns
jle
mov
mov
filds
rorl
movsl
repz
lods
fs
push
mov
mov
pop
sub
clc
sbb
jne
pushf
pop
mov
sbb
pushf
movsb
sub
test
mov
sub
mov
sti
xor
xchg
sub
or
cli
les
int
out
lret
xchg
mov
mov
fcomi
loope
add
lds
cmp
stos
insb
sub
aam
lds
test
sti
int3
imul
jae
pop
jp
jg
add
xchg
and
xchg
test
aaa
inc
add
add
movsl
cmpsl
xor
push
out
push
and
jle
inc
iret
sbb
test
lahf
inc
pop
sub
dec
push
add
lret
dec
lret
xchg
sub
add
jl
stos
ds
iret
loop
shrl
add
ficoml
out
sub
shrl
dec
das
sbb
mov
inc
outsl
jge
insb
stc
and
fmul
inc
cld
mov
push
test
adc
mov
nop
das
aaa
std
out
arpl
cs
jmp
stos
ret
out
gs
int3
dec
and
dec
imul
or
arpl
ja
fnstenv
xchg
mov
push
sahf
xlat
loopne
pop
pop
mov
fcomps
adc
xchg
test
lret
aaa
add
and
int
popw
and
mov
std
add
cmp
xchg
push
mov
mov
jle
gs
mov
fwait
adc
sub
mov
mov
push
ret
xor
adc
adc
mov
mov
pop
pop
das
std
shl
push
stc
add
inc
sar
insb
adc
lahf
inc
shl
mov
bound
mov
je
jmp
add
int
mov
inc
xchg
sub
stos
fs
add
mov
out
dec
cmp
or
divb
popa
popa
sub
adc
in
push
je
add
icebp
inc
mov
dec
jp
pop
add
adc
mov
das
or
test
repz
scas
pop
addb
popa
xor
loop
sub
add
mov
push
out
inc
je
loope
or
xchg
mov
jle
mov
mov
cmp
mov
cmp
aas
mov
ljmp
mov
xchg
sbb
std
push
or
jle
sbb
xor
sbb
lds
adc
pop
roll
jb
frstor
mov
pop
inc
jp
sbb
or
addr16
int3
xchg
outsl
aaa
lret
xor
aam
roll
sub
dec
repnz
fcom
dec
rolb
fs
int
xchg
mov
xor
pop
adc
push
add
lods
jl
dec
mov
test
lods
popa
cmp
xchg
sahf
mov
sub
ror
dec
dec
or
push
dec
sub
pop
mov
out
mov
sbb
lret
mov
pop
xchg
cltd
adc
mov
lds
xchg
mov
icebp
lock
jle
jns
dec
push
sbb
dec
cmp
cli
aad
xor
aas
inc
and
ds
insl
sarl
push
sti
mov
movsl
xchg
dec
adc
inc
fbstp
lods
mov
pop
mov
lret
sbb
mov
clc
cwtl
mov
mov
jp
es
add
adc
adc
and
mov
mov
ds
aam
dec
lods
outsb
lds
adc
dec
mov
cld
loopne
aam
out
pop
sub
sub
or
adc
xor
leave
aad
into
sbb
mov
icebp
popf
dec
imul
adc
ljmp
xchg
push
das
jno
aad
addr16
loope
ret
jmp
ss
ror
loopne
cmp
and
mov
mov
and
pop
scas
mov
ret
fcmovb
cmp
xchg
or
inc
aam
mov
sub
gs
jo
and
pop
arpl
test
inc
push
dec
ret
dec
rclb
aam
xchg
adc
test
in
adc
call
xchg
xor
mov
or
bound
cmpsb
mov
aad
sub
fdivrs
mov
testl
imul
aas
mov
rorl
ja
pushf
gs
and
mov
push
pop
add
mov
inc
sub
mov
pushf
xchg
mov
or
jns
and
pop
lods
sbb
adc
inc
fadds
rcrb
push
outsl
jne
cs
add
jge
es
push
ret
xor
jle
inc
cmpl
cltd
adc
push
movsl
dec
sub
xor
stos
aam
inc
sub
push
add
cbtw
movsl
add
fcoms
sbb
push
sub
mov
mov
adc
sub
jl
lea
in
mov
lret
shr
mov
jns
fisttpll
pop
cmpsb
inc
xchg
dec
sub
jle
xchg
dec
repnz
cmp
adc
add
or
dec
jne
or
test
dec
shlb
hlt
fsub
pusha
bound
addl
aas
insl
dec
subl
int
adc
adc
jne
mov
jp
mov
ljmp
sub
in
jb
mov
addr16
adc
cmpsl
dec
data16
aas
aaa
jb
push
mov
in
dec
cltd
cmp
test
loopne
mov
jb
test
jle
dec
push
or
add
push
ds
dec
lock
mov
and
push
push
rolb
inc
jg
cmp
repz
sub
mov
fisubs
aas
outsl
mov
dec
add
sahf
repz
jb
lock
clc
pop
pop
inc
daa
mov
sub
or
sub
cmc
jge
repnz
int3
shlb
push
xor
xor
jp
push
xor
jl
mov
or
inc
int3
clc
push
dec
cmp
mov
pushf
xlat
sub
add
pop
lds
push
xchg
ds
pop
sub
cmp
movsl
inc
push
jle
fwait
pushf
fimull
fwait
mov
ss
roll
inc
fdivp
out
push
rcrb
dec
cltd
test
out
pop
in
inc
sbb
push
push
push
mov
xchg
xchg
insl
cmpl
lea
cwtl
imul
out
and
rolb
aam
mov
dec
call
loop
or
or
pop
ret
or
mov
xchg
jmp
mov
ja
shl
xor
daa
fidivs
push
enter
push
jmp
adc
and
pushf
leave
mov
lock
pusha
ret
inc
sbb
out
add
jno
jl
pusha
fwait
jle
fs
lds
ret
movsl
add
mov
jg
sbb
mov
and
ftst
push
lods
gs
pop
push
sahf
add
daa
imul
xchg
pop
je
scas
cmp
test
ljmp
imul
ljmp
xlat
and
and
leave
pop
cwtl
jmp
fwait
mov
jns
jp
insl
push
add
mov
ss
repz
ficompl
lock
scas
mov
sbb
mov
pop
xor
sbb
and
cs
daa
jge
gs
xchg
cmpsl
xor
sub
mov
les
stc
inc
data16
mov
dec
inc
cmp
insb
lock
sub
ljmp
pop
mov
lret
jbe
mov
sub
dec
bound
push
rorb
mov
or
movsb
sub
rcrl
pop
andl
mov
pop
mov
xchg
cltd
inc
inc
push
push
cwtl
test
cmpsb
pop
movsl
rcll
inc
push
or
mov
or
stos
xor
fidivl
fbstp
ja
stc
push
inc
pop
mov
jo
lods
mov
fcoml
dec
inc
mov
aaa
push
fcompl
fldenv
mov
mov
mov
cmp
and
in
sbb
mov
pop
fdiv
sub
pop
iret
inc
jne
arpl
cmovge
in
dec
sahf
test
movsb
adc
loope
push
pop
cmp
cmp
adc
pop
lea
imul
daa
mov
ror
inc
ljmp
ds
dec
fstl
pop
out
sub
jp
lahf
in
je
inc
sti
pshufw
cmp
and
xor
jo
lock
lock
popa
or
lods
pop
push
mov
sti
ja
cmc
or
push
sarb
adc
insb
ret
js
mov
inc
mov
jle
jnp
inc
imul
or
dec
mov
cwtl
xor
mov
sbb
out
dec
fidivrs
pop
xor
hlt
add
xchg
push
jb
mov
xchg
loope
push
mov
mov
out
mov
lods
int
push
rcr
enter
sub
mov
adc
mov
ja
pop
fsubs
insb
dec
enter
push
leave
push
or
aad
sbb
in
aas
push
push
pushf
fsubrl
leave
jmp
in
pop
orl
mull
daa
push
test
test
dec
push
pop
fcmovu
in
mov
xchg
ja
test
ds
push
ret
jmp
xor
or
xchg
stos
inc
addr16
mov
cwtl
add
aad
lahf
cmp
jo
out
dec
fdivr
mov
lds
mov
hlt
aas
insb
ret
stos
xchg
ror
sbb
jae
outsl
andb
sbb
inc
ja
es
sub
sub
xor
mov
ds
dec
lret
push
movsb
xor
test
stos
dec
mov
mov
fistps
fcmovbe
int3
or
dec
jmp
nop
aad
mov
pop
js
and
cmp
and
iret
xor
jge
cmp
cmp
jecxz
nop
and
mov
loope
mov
ljmp
cmpsl
push
int3
jl
lret
mov
sub
jle
inc
push
dec
jmp
sti
xor
aas
and
sbb
fstps
es
pop
mov
fcomps
lock
jns
inc
sub
fadds
xchg
aad
inc
movsl
fnstsw
xchg
push
cmp
outsb
jo
xchg
les
sub
inc
mov
add
rclb
pop
xor
sub
sti
sbbl
and
rclb
mov
mov
stc
mov
xchg
pop
or
adc
mov
xchg
sbb
push
push
adc
pop
push
push
sbb
scas
jne
sahf
fimull
iret
mov
dec
aas
push
jle
fmul
lret
or
xlat
stos
xchg
stos
iret
call
test
daa
add
ja
test
inc
xor
pop
aaa
cmpb
xchg
and
jno
jbe
jno
in
mov
cmp
mov
mov
movsl
add
aas
aad
mov
jnp
je
mov
int
sub
inc
lock
lret
jl
mov
shl
mov
adcl
cmc
int3
scas
clc
jp
jmp
xchg
call
rcll
push
imul
and
fcomps
cmp
push
sbb
sbb
lret
fadd
movsl
sbb
cmpsb
in
aas
and
push
jmp
add
dec
nop
xchg
adc
notb
adc
mov
popa
mov
imul
pop
aaa
outsb
xchg
ljmp
mov
lea
cmpsb
inc
shr
shrl
fisubs
lret
mov
lods
js
add
data16
test
add
xor
icebp
and
pop
and
pop
insl
push
fs
imul
mov
add
test
mov
jae
loop
leave
xchg
xlat
mov
adc
jecxz
and
int3
inc
fstpl
incl
daa
movsb
test
and
xor
push
dec
jle
ljmp
mov
xlat
mov
ljmp
jnp
inc
es
dec
in
aaa
outsl
pop
pop
add
addb
aam
jmp
mov
mov
and
sbb
loop
test
das
sbb
subl
mov
jnp
icebp
add
aas
mov
dec
ljmp
lcall
or
fisubl
js
inc
dec
or
lds
outsb
das
push
push
fnstcw
push
inc
mov
adc
inc
dec
out
dec
into
sub
aam
push
xor
push
pop
push
add
stc
inc
or
out
mov
xchg
iret
adc
dec
xchg
dec
mov
rolb
pop
dec
push
pop
stc
xchg
inc
cmp
push
mov
arpl
jae
cmp
scas
js
loope
stc
adc
aad
add
filds
push
mov
in
push
pushf
gs
inc
scas
bound
lds
pop
in
pop
adc
push
push
imul
cmpsb
mov
rolb
icebp
clc
insl
stos
in
sub
orl
out
xor
dec
out
lret
inc
fisubrl
scas
adc
fstpt
mov
dec
ret
mov
jmp
cld
dec
imul
shlb
pop
fadd
jne
lods
pop
test
js
add
and
mov
sbb
mov
lods
sbb
lahf
mov
mov
mov
test
cmpl
inc
add
sbb
scas
sbb
and
popa
popa
mov
lods
mov
shlb
in
xchg
mov
gs
lods
stc
mov
out
pop
dec
fs
push
or
enter
pop
push
and
test
inc
inc
sbb
test
xor
mov
push
xor
sbb
ljmp
hlt
cmp
push
pop
popa
ret
jne
xchg
icebp
nop
pop
pop
push
movq
xlat
adc
int3
clc
and
ret
cs
rcr
sub
adc
cmp
and
ja
hlt
pop
or
xchg
jl
in
jnp
sarb
jle
lret
add
mov
and
mov
ret
ss
push
leave
lods
out
repnz
pop
pop
jo
lods
inc
mov
out
and
in
mov
shrl
jbe
aas
mov
testl
ljmp
fbld
insb
aad
mov
sbb
add
fs
popa
fsubp
je
jae
cmc
jg
inc
sub
pushf
xor
call
cltd
aad
out
jp
jno
aad
push
adc
cmp
mov
dec
inc
push
or
daa
add
pop
xor
pop
jnp
push
popf
std
mov
cmp
fdiv
outsb
bound
cmp
mov
icebp
je
jmp
push
dec
aaa
xchg
push
nopl
sti
outsl
imul
in
in
cmp
stos
push
mov
cmp
fisubs
rolb
in
rcl
pusha
mov
cmpsb
fld
addb
mov
scas
xchg
dec
loope
mov
jae,pn
add
push
sub
inc
push
inc
arpl
sub
mov
or
fbld
pop
scas
mov
repz
dec
out
in
out
xor
stos
jmp
xorb
lds
lods
push
or
add
test
pusha
mov
std
jb
xor
pop
mov
sbb
shlb
cmp
xor
fbld
inc
push
cmp
stc
fcomps
mov
mov
xchg
clc
daa
push
xchg
cwtl
addr16
mov
js
xor
aaa
sbb
inc
add
out
mov
rcll
aas
out
pop
js
xlat
movsb
jno
in
sbb
inc
call
dec
loop
sub
sub
popa
aas
xchg
mov
push
in
sbb
push
subb
xor
bound
mov
lcall
out
push
fbld
push
cmp
lods
fidivrs
pop
mov
int3
insb
aam
xor
leave
scas
mov
es
jl
inc
repz
in
jp
cmpsb
cmp
into
fwait
pop
in
lock
pop
mov
aad
mov
xchg
sub
mov
popa
inc
inc
icebp
adc
insb
rorb
mov
and
inc
push
sbb
push
mov
jmp
out
lods
sbb
fsubrs
mov
mov
adc
test
int3
out
js
inc
jne
rolb
out
cwtl
gs
push
pusha
push
mov
fnstsw
stc
ret
jg
jnp
inc
jbe
adc
clc
andl
push
jns
neg
lahf
idivb
loop
cwtl
add
call
xor
stc
add
shr
xorb
jecxz
xor
hlt
jae
pop
out
sbb
negl
scas
mov
mov
mov
inc
or
mov
mov
mov
or
cld
icebp
insl
movsb
mov
or
orb
sarl
xadd
jo
pop
mov
imul
lret
adc
fimuls
cli
mov
adc
stos
push
lcall
or
pop
fimuls
test
and
adc
adc
scas
test
or
stos
xchg
imul
rol
shll
jge
pop
into
pushf
mov
sbb
in
in
cmp
fistpl
push
mov
sub
outsl
lea
xchg
jmp
lods
fdivrl
arpl
pop
stc
imul
ret
ljmp
imul
mov
aam
mov
popf
pop
mov
ret
movsl
xchg
mov
popf
push
sahf
mov
pusha
outsb
cmpl
xor
add
mov
push
mov
outsb
cmp
or
mov
in
push
mov
cmp
push
mov
fbld
jle
outsl
jecxz
lcall
xor
aaa
idivl
scas
xor
or
inc
aad
pop
push
pop
jl
mov
cwtl
and
and
loop
dec
mov
and
cs
fbstp
and
mov
lea
and
scas
mov
imul
mov
dec
and
mov
addl
stos
and
ljmp
xchg
rcll
shll
sub
xor
cwtl
lcall
das
push
shll
and
inc
push
cmp
mov
in
mov
push
fldl
ficompl
js
adc
dec
mov
sub
jecxz
test
mov
mov
mov
jbe
pop
push
jmp
inc
mov
js
mov
xor
repnz
and
ljmp
inc
add
inc
sarl
mov
insb
into
push
pop
mov
ficoms
push
cmp
jnp
xchg
jle
pop
scas
ret
jp
js
rcrb
xchg
jp
mov
sub
mov
fdivrs
mov
nop
push
jo
mov
push
aas
mov
test
ljmp
icebp
roll
out
adc
shl
jmp
arpl
adc
dec
je
andl
call
pusha
movsb
pop
cwtl
sub
jle
shrb
or
sbb
je
and
lds
jle
adc
push
rcrb
mov
popa
cmp
shrb
push
mov
or
and
lret
daa
enter
sub
test
push
jnp
and
xor
pop
push
lock
incb
inc
bound
xor
xchg
lods
push
pop
cli
sbb
outsb
int
scas
int3
je
int
jl
dec
int3
sub
stc
cmp
negb
cmp
xchg
loope
arpl
xchg
arpl
jmp
fnstenv
lods
cld
push
data16
sbb
and
loope
or
mov
jb
movsl
pop
lods
popf
adc
lock
pop
idivb
sbb
xor
lcall
lret
call
cli
sbb
add
test
and
lds
jnp
out
mov
mov
xor
fwait
pop
jge
leave
test
inc
in
adc
sbb
rcl
mov
fiaddl
fcompl
pop
mov
mov
dec
jb
xor
scas
mov
loope
and
mov
inc
loopne
popa
shlb
arpl
sbb
jecxz
mov
mov
or
arpl
fistpl
sti
jbe
add
rcr
mov
inc
push
push
lret
xchg
mov
xchg
mov
mov
xlat
inc
pop
pop
dec
mov
push
jbe
inc
cltd
in
lret
pop
iret
xchg
in
insb
fcomip
jb
jmp
inc
xlat
nop
data16
imul
pop
sbb
pop
cmp
ljmp
notl
dec
shl
pushf
or
jnp
inc
push
or
dec
mov
sub
mov
movsb
inc
xchg
shlb
push
or
ja
test
xchg
stos
arpl
sti
pop
and
pop
loop
popa
xlat
adc
das
xchg
leave
mov
ret
cmpsb
dec
jnp
inc
mov
dec
adc
add
enter
jmp
mov
push
pop
push
add
jne
xchg
cmp
lods
push
gs
imul
shrl
daa
aaa
dec
push
push
lods
dec
xor
arpl
pop
lret
icebp
pushf
imul
cmp
ss
mov
lock
icebp
and
push
pop
sub
sbb
push
dec
decb
xchg
cmp
not
pushf
mov
pop
pop
mov
imul
push
dec
mov
outsb
shlb
xchg
xchg
jbe
cmp
xchg
int3
std
inc
add
jle
jbe
jne
outsl
xchg
inc
and
int3
js
push
pop
mov
mov
or
in
pop
mov
add
repz
lret
int
jl
and
test
xor
and
or
imul
sub
mov
cltd
xor
in
or
mov
xchg
cld
sub
xor
xlat
aam
notl
cmp
sub
jae
adc
mov
ljmp
cltd
or
sbb
or
pop
xor
in
movsl
pop
mov
inc
mov
or
xchg
into
xchg
ja
push
xor
cmpsb
pop
push
mov
popa
cmp
add
insb
pop
fdivrl
sbb
jns
int3
jns
push
loope
in
mov
push
xlat
cmp
cmpsl
stos
aaa
dec
pushf
sahf
inc
dec
mov
jmp
fimull
loop
dec
inc
test
enter
mov
lds
pusha
in
mov
mov
popa
mov
cwtl
add
mov
enter
jle
push
rcrb
lahf
xchg
push
sbb
xchg
fwait
add
and
pop
and
cmp
xchg
adc
xchg
push
inc
push
jb
out
enter
sbb
fiadds
inc
adc
pop
inc
xor
cmpsb
test
pushf
mov
and
jecxz
fwait
ljmp
mov
lret
hlt
dec
ds
dec
xchg
ljmp
mov
mov
sti
rorb
icebp
inc
xor
mov
les
ds
add
sbb
jnp
xor
inc
pop
jnp
in
pusha
loopne
or
mov
enter
les
imul
push
loop
dec
lds
sbb
dec
add
pusha
std
and
push
and
fldl2e
sub
xorl
push
or
xor
pop
sub
pop
sbb
std
mov
int3
adc
fistps
add
mov
fsubs
scas
bound
int
sub
mov
add
loope
mov
add
push
sti
clc
js
or
jb
mov
sub
push
push
sub
jge
aaa
nop
leave
out
and
xor
sub
inc
mov
ret
push
mov
gs
adc
test
sub
xor
jb
sbb
je
push
ror
repz
mov
xchg
addr16
lret
imul
das
xlat
insb
insl
dec
repnz
out
sti
sbb
adc
adc
or
nop
loop
cmc
xchg
mov
add
sbb
push
and
lcall
lret
dec
add
dec
pop
aas
stos
scas
sbb
add
sti
xchg
stos
xor
xor
sub
pop
lock
sbb
mov
lahf
adc
add
ja
sbb
xchg
repz
push
in
aaa
ficompl
sarb
inc
pop
or
das
call
and
add
adc
ret
xor
lock
push
repnz
jbe
mov
pushf
or
decl
js
jae
addr16
aas
hlt
mov
divb
pop
dec
push
subl
into
mov
jo
pusha
push
inc
xlat
popa
sahf
fxch
sbb
or
cmp
incl
inc
pop
je
jge
sbb
subl
shlb
stos
xchg
call
xor
xchg
xchg
push
and
pop
mov
pop
mov
lock
xchg
xchg
jle
mov
inc
rorl
jle
lea
sbb
pop
test
jo
ds
dec
ret
rcll
jl
xor
in
subb
int
sarl
mov
jg
dec
dec
push
adc
fs
roll
mov
call
dec
mov
xchg
orl
dec
mov
mov
test
jge
ja
repz
mov
rcrl
adc
mov
test
arpl
push
sbb
mov
dec
fnstcw
or
cmp
stos
shrl
aad
out
leave
clc
jecxz
xchg
pop
pop
test
sub
jl
xchg
mov
outsb
fs
and
fsubl
mov
iret
push
das
add
mov
int3
sub
jbe
inc
das
addl
sbb
imul
mov
popf
rcrb
stos
pusha
mov
mov
push
les
stc
idivl
imul
push
inc
sbb
sbb
xchg
sbb
mov
jns
xchg
loope
xor
repnz
pop
mov
jg
and
lret
leave
inc
ret
xor
push
push
mov
cs
mov
mov
sarl
push
test
pop
lds
dec
popf
insl
test
mov
sub
loope
call
inc
mov
movsb
mov
jno
rcl
aad
into
cwtl
clc
jl
rcr
lds
lods
dec
add
dec
sbb
repnz
mov
push
ljmp
sarl
imul
push
cmp
adc
dec
xor
mov
pop
mov
ds
test
popf
mov
das
js
inc
add
push
pop
mov
sbb
es
ret
fiaddl
mov
lods
or
jno
test
mov
cs
loopne
movsl
rcl
loopne
sub
adc
stc
test
mov
shlb
pop
loope
pop
xchg
and
mov
and
sub
pop
lods
out
lock
insb
sub
out
mov
andl
jp
mov
fadd
jbe
mov
mov
and
add
cmp
inc
inc
jb
imul
and
mov
xchg
push
xchg
stos
sub
cmpsb
and
popa
dec
popf
cmp
aas
shlb
outsl
rcll
add
gs
stc
cmp
push
cmp
jl
mov
hlt
in
pushf
adc
jae
ss
adc
loope
pop
ljmp
sub
mov
inc
sub
lock
addr16
mov
iret
pop
orl
mov
repnz
mov
imul
mov
jmp
mov
pop
jo
mov
in
shl
mov
lds
inc
mov
decb
cmp
add
mov
cltd
mov
add
adc
popl
aaa
dec
add
mov
xchg
mov
mov
or
sub
in
sbb
std
js
add
movsl
pop
enter
and
push
push
cltd
icebp
movl
push
dec
xor
xchg
lods
stos
dec
and
testl
jle
leave
aad
addr16
sub
les
push
pop
or
das
rol
insb
sbb
sbb
movsb
inc
mov
imul
fcompl
inc
lods
loope
adc
fiadds
mov
scas
dec
xchg
lds
aaa
cltd
push
andb
push
rclb
lcall
addr16
lods
xchg
aas
les
imul
icebp
fistps
jg
sbb
test
xchg
mov
fmuls
xchg
lods
jl
repz
arpl
pop
add
inc
insl
cld
adc
aam
les
jbe
and
inc
cmpsl
enter
das
cmp
mov
data16
in
inc
jo
jno
inc
adc
ja
hlt
add
inc
int
sbb
sahf
mov
into
sub
iret
data16
mov
lcall
xor
xor
xor
roll
jl
xchg
jecxz
pop
leave
xor
nop
mov
sbb
sub
adc
and
pop
vpcomq
dec
lock
stos
mov
aam
inc
xor
movl
popa
inc
push
pop
cmp
je
mov
xorb
jno
xor
jbe
cmp
clc
test
fwait
inc
mov
xchg
mov
push
push
dec
push
fcmovbe
loope
xchg
push
lcall
pushf
sub
mov
xchg
bound
pushf
xor
add
lock
push
out
aas
and
aas
mov
sbb
ret
roll
adc
sbb
ljmp
mov
mov
cld
push
add
das
shl
orl
icebp
add
mov
sbb
test
aad
cltd
jo
repz
add
lret
or
adc
xchg
lock
data16
js
push
xor
inc
sti
sub
dec
pop
ret
push
fwait
mov
xor
cltd
cs
cmpl
dec
xor
add
mov
mov
imul
jo
outsl
xor
dec
scas
lahf
cmp
or
sti
mov
add
test
ja
and
inc
lcall
mov
mov
xor
subl
das
out
pop
jg
sub
mov
adc
lock
mov
sarb
adc
clc
push
out
inc
stos
and
fsubp
sahf
rcrb
std
mov
add
loope
mov
xor
lods
dec
xor
ja
adc
movsb
dec
ds
inc
xchg
jp
fnstcw
ljmp
jnp
ja
es
push
push
pop
adc
ret
push
fsub
adc
pop
mov
sbb
dec
cmc
sbb
popa
fistps
dec
and
std
cmpsb
pusha
jg
jne
jnp
mov
iret
lods
cmc
mov
pop
fldl2e
push
stos
jb
xchg
js
xchg
and
adcb
mov
add
out
sub
sbb
pop
shl
pop
mov
es
xor
add
es
fadds
mov
mov
inc
xor
aaa
incl
fcoms
std
cmpsb
cmc
out
out
dec
mov
jg
mov
pop
or
bndldx
jno
mov
or
fidivrl
xchg
out
jbe
push
or
jge
and
jmp
inc
cmp
jo
jne
fiadds
or
pop
inc
fmull
add
popa
fstps
inc
inc
shlb
rclb
movsb
jb
fwait
cs
loopne
sub
cmp
lods
jle
arpl
sbb
in
sub
xchg
xchg
adcl
pop
addb
in
rcll
push
xor
arpl
xchg
cltd
pop
mov
mov
inc
hlt
clc
pop
fs
xchg
cmpsl
cmc
aas
adc
mov
jo
xor
adc
and
das
stos
or
fsubrl
xchg
mov
mov
adc
movsb
mov
lock
icebp
ja
mov
xchg
imul
aaa
lock
adc
push
leave
fidivl
xchg
push
das
add
xchg
rcll
and
or
lods
mov
jle
jbe
out
aaa
je
jno
out
and
xchg
inc
mov
mov
shlb
mov
xchg
ljmp
movsl
xor
je
add
les
popf
mov
hlt
aad
xor
xor
add
pop
in
dec
push
adc
mov
push
shrb
pop
daa
jg,pn
mov
ss
andl
push
fcoms
xor
xor
pushf
ljmp
lods
daa
mov
mov
mov
dec
push
or
int3
andl
jo
adc
mov
add
cmc
aaa
ljmp
mov
cmpsl
push
and
jp
pop
inc
jmp
jl
lret
jp
mov
inc
add
popa
ljmp
inc
push
enter
test
stos
and
lods
inc
in
aaa
mov
pop
lds
jp
aad
xor
lret
xchg
cli
test
adcl
and
das
and
and
in
gs
imul
jmp
fisubl
popf
mov
mov
pusha
shrb
sbb
shl
cmpsl
dec
pop
aaa
dec
ds
scas
inc
mov
std
icebp
jl
loopne
aaa
movsb
push
ljmp
xchg
add
add
inc
testb
adc
mov
sarl
dec
dec
cltd
jmp
rcr
push
push
shlb
movsl
das
xchg
xor
push
and
sahf
cmp
icebp
sbb
pushf
subl
test
js
inc
pop
jg
fcmovne
stc
out
mov
xchg
jns
loop
push
add
sub
pop
and
mov
push
into
push
sarl
cmc
xchg
icebp
ja
sub
pop
mov
jo
pop
or
les
adc
inc
popa
aam
add
jnp
movl
add
in
adc
stos
adcb
mov
xchg
cmp
int
int3
pop
aam
mov
sti
cwtl
and
sbb
adc
fstpl
mov
sar
cmp
pop
xchg
push
xor
cmp
aas
ds
jo
jl
cmc
push
sub
ds
rolb
mov
aaa
sub
test
push
fs
nop
leave
fiaddl
inc
rorb
popf
sub
fwait
push
lods
and
mov
das
mov
push
adc
cmc
cld
sub
dec
add
cmp
scas
shrb
stos
rorb
mov
sub
addr16
incb
imulb
mov
jo
adc
loope
shrl
push
jns
or
loop
std
call
dec
push
mov
ret
add
int3
ljmp
and
inc
shrl
pop
repnz
cmpsb
shll
fidivrs
mov
xchg
inc
cmpsb
and
add
loopne
out
xchg
jg
testl
mov
loopne
push
jb
sahf
push
mov
inc
out
data16
fs
mov
jmp
mov
adc
cs
js
sub
push
mov
dec
lds
popf
test
mov
loope
jns
out
jp
jmp
cwtl
fmuls
push
popa
dec
cli
popa
lock
int
adc
sbb
sub
in
ds
add
ja
movsb
inc
add
fistpl
cld
push
xorl
pop
rol
jmp
add
test
nop
lds
repnz
loope
xchg
xchg
loopne
ljmp
mov
addr16
and
xchg
mov
and
push
movsb
scas
xchg
add
dec
or
leave
sub
sbb
repz
lcall
enter
xchg
sbb
lcall
or
inc
xchg
push
repnz
xorb
and
filds
lret
add
xor
test
and
mov
out
popa
jno
jle
std
ss
idivb
cltd
push
xorl
pop
jle
push
pop
push
pop
lods
sahf
xchg
jno
add
insb
xchg
dec
sti
jnp
mov
ret
and
lods
cmp
cs
pop
andb
mov
aam
xor
shlb
dec
mov
stos
sub
aas
jno
loope
pop
adc
enter
stos
pop
loopne
ret
test
popa
jp
loop
mov
daa
mov
sbb
std
negb
sahf
arpl
push
hlt
jns
das
jle
stos
inc
popa
rorb
fwait
pop
nop
or
dec
mov
inc
int
jp
incl
jne
push
mov
cmp
inc
int
das
or
pop
lcall
sub
pop
mov
fs
or
dec
pop
out
popa
je
pop
push
lret
or
inc
pusha
hlt
and
adc
cmp
dec
ficompl
and
es
lret
fsts
clc
jecxz
sahf
pop
cs
out
and
js
fistl
idivl
out
cmpsl
sub
movsb
jns
insl
stc
mov
cmp
mov
jl
lret
mov
jmp
jl
xchg
mov
sarl
stos
outsl
lea
fistl
test
scas
cmc
ljmp
out
dec
sbb
pop
jg
sarb
push
scas
xchg
xchg
mov
testb
js
leave
daa
addr16
loop
adc
movsb
jmp
push
test
je
inc
cmp
add
hlt
or
push
lret
inc
cwtl
push
cmpsb
lea
js
adc
mov
jo
adc
dec
push
notb
aas
mov
gs
mov
mov
xchg
jmp
mov
cmp
int3
mov
mov
cmp
fdivs
mov
pop
mov
outsl
sbb
xchg
push
cmp
lock
packuswb
call
mov
sahf
adc
inc
je
call
fisubrs
cmp
outsb
jns
mov
aam
sbb
fwait
shl
idivb
sbb
push
xor
xchg
inc
sahf
xchg
pop
ja
or
popf
stos
pop
push
lods
fistl
int
and
test
sahf
xchg
jnp
xor
in
mov
aas
jo
push
jns
aaa
jne
mov
add
dec
pop
mov
cmc
ljmp
lods
int3
je
pushl
rcr
jae
xrelease
and
and
fistpl
stc
notb
cmp
cwtl
mov
lcall
jge
xor
in
bound
pop
pop
and
mov
dec
cmp
xchg
sub
jb
push
sbb
sbb
aas
sub
les
popa
push
xchg
bound
xchg
sbbl
add
sub
movsb
xor
jmp
xor
xchg
cltd
sub
loope
mov
ja
mov
gs
movsl
mov
dec
repnz
popa
add
inc
jge
push
cmpsl
jne
addb
test
mov
stos
push
out
sbb
imul
or
sub
dec
lods
cmp
mov
jecxz
add
outsl
inc
adc
je
scas
in
in
sarl
pop
lock
inc
push
jmp
sbb
dec
in
fidivrl
orb
pop
iret
xor
popa
lea
fcmovu
outsl
aad
lds
mov
or
mov
sub
aaa
pop
cmp
loopne
repnz
repnz
jle
cmpsl
inc
mov
aad
xchg
xchg
cmpsb
dec
lret
xor
xor
gs
inc
adc
push
call
inc
imul
xor
dec
mov
adc
iret
mov
movsl
dec
add
rcrl
adc
lcall
lods
lock
sbbl
rcl
inc
push
pushf
mov
jp
les
movsb
scas
push
mov
inc
dec
pop
or
adc
shrb
push
sbb
fs
sub
lods
xor
mov
hlt
repnz
mov
out
cld
mov
icebp
add
mov
mov
xchg
sbb
shll
push
popf
cwtl
les
or
fs
push
out
push
add
pop
and
rcr
cmp
cmp
jno
es
lds
sbb
cmc
cld
mov
das
jb
pushf
repz
divl
ret
addr16
les
mov
inc
adc
xor
imul
mov
add
lds
xchg
xchg
ljmp
pop
cmp
sar
mov
mov
cmp
aam
xor
push
inc
mov
push
arpl
xchg
in
or
sahf
adc
lret
std
xchg
cld
mov
push
jp
int
lock
or
or
pop
pop
inc
dec
jae
std
stc
negb
imul
push
test
jg
sbb
jb
inc
sub
ds
ret
jae
xchg
pop
mov
mov
mov
in
mov
roll
insb
pop
fildl
in
jno
jno
jnp
repz
sub
pushf
dec
add
adcl
jl
daa
sub
mov
pop
mov
xchg
jge
cmp
les
ljmp
pop
rclb
call
push
xor
mov
pop
mov
out
cmp
imul
push
xchg
adc
mov
pushf
add
cmp
ds
pop
std
movsl
jnp
cmp
sub
pop
mov
rorb
test
cmp
cmp
lret
js
push
jb
daa
push
stos
mov
push
pop
cmp
cmpl
jl
and
repnz
bound
mov
cmc
cld
rorb
dec
leave
push
pop
sbb
jbe
arpl
insb
mov
shr
pop
insb
or
and
mov
cmp
xor
mov
in
inc
push
sbb
jp
cmc
lods
rcr
sarl
fsubrs
sub
divl
jb
push
imull
cmp
cmpsb
mov
sti
sub
mov
imul
clc
cs
cwtl
ret
in
aam
adc
jbe
shl
dec
inc
cmpsb
pop
into
aam
dec
dec
mov
imul
jb
imul
inc
in
jns
mov
xorb
xchg
pop
addl
clc
lret
cmc
adcb
nop
add
pop
xor
pop
sbbb
insl
sbb
rcrb
xchg
push
movsl
mov
add
jg
inc
push
jo
jmp
mov
push
mov
xchg
xor
dec
mulb
hlt
js
add
arpl
popf
mov
ja
jge
or
mov
jne,pt
mov
test
iret
xor
icebp
insl
cli
push
sbb
scas
cld
in
mov
subb
dec
icebp
jbe
out
into
repnz
push
outsb
mov
or
fnstcw
pushf
jle,pt
adc
sbb
push
int3
icebp
loope
inc
cmp
adc
add
cli
cld
outsb
inc
push
int3
test
js
mov
and
push
std
jecxz
aam
xor
lret
mov
mov
pop
jbe
push
sub
aam
loopne
test
repnz
or
mov
sub
sti
in
dec
outsb
xchg
jo
rep
inc
in
out
std
idivb
inc
insl
pop
not
fcomps
shr
fadds
xor
insb
ficoml
sbb
add
test
push
mov
sub
jmp
push
rorb
test
das
mov
fcoms
mov
das
dec
popa
pop
ret
sbb
jecxz
cmp
rcrb
sub
out
sbb
push
sub
adc
push
arpl
lods
push
mov
ss
and
jnp
add
ja
shlb
mov
outsl
adc
adc
rolb
push
test
push
inc
mov
add
jnp
repnz
or
add
ret
test
push
xchg
inc
dec
mov
out
xor
data16
adc
sub
out
ret
cltd
xchg
loope
mov
adc
nop
pop
mov
fnstcw
inc
jge
fldt
jbe
pop
xchg
cwtl
xchg
test
xchg
mov
cmc
lds
loop
jnp
ljmp
push
imull
je
mov
mov
mov
inc
or
mov
pop
stos
movb
cmp
aas
sbb
call
ffree
test
imul
push
pop
imul
and
fcomps
xchg
and
in
fisttpll
insl
dec
addr16
mov
loopne
add
psllq
mov
pop
dec
popa
fidivl
dec
adc
into
lock
data16
add
sti
or
push
add
mov
mov
inc
lock
mov
cmp
addl
std
add
push
and
fisubrs
fdivp
mov
sub
inc
nop
xlat
test
push
or
add
cmpsl
push
xor
jo
inc
inc
adc
mov
fldt
rcrl
pop
jg
mov
andb
sub
xor
pop
fists
dec
test
sub
ss
cmp
arpl
or
aaa
adc
push
outsb
cmp
inc
lret
push
js
sub
push
cmpsl
and
cmp
add
mov
loopne
cmp
aam
stos
test
insl
icebp
dec
mov
dec
repnz
cmp
repnz
xor
dec
cwtl
or
mov
or
pop
add
push
dec
push
jl
inc
mov
sub
jecxz
and
jge,pn
sbb
cld
imul
sarb
cltd
mov
push
sub
mov
cs
jne
adc
pop
incb
fsubrp
dec
data16
movsb
mov
adc
inc
sbb
lret
dec
push
mov
sub
pop
cwtl
adc
pop
inc
xchg
mov
jmp
push
sub
pop
xchg
push
scas
cmc
int
dec
sbb
loope
mov
inc
outsl
xchg
pop
cltd
mov
pop
test
push
js
pop
out
pop
dec
inc
sbb
or
dec
sub
inc
dec
mov
jo
fnsave
xor
sub
or
dec
jmp
cmp
or
adc
dec
in
rcl
roll
or
jns
pop
pop
fstpl
and
ljmp
sub
mov
dec
mov
and
lret
or
fs
sbb
lret
jmp
fisubl
jae
loop
xor
jge
mov
in
or
jmp
mov
jb
stos
cmp
xor
cmp
mov
fidivs
in
inc
inc
cmp
hlt
pusha
jb
das
and
into
adc
and
jp
stc
and
sub
xor
or
xlat
cld
imul
jno
mov
adc
push
inc
stc
leave
jle
fs
sub
or
movsl
mov
popf
std
adc
inc
inc
push
sub
sbb
mov
pusha
push
addl
sub
lds
or
add
inc
imul
jbe
jg
sub
mov
orl
jecxz
sub
xchg
je
xchg
mov
ss
pusha
lret
mov
imul
xchg
mov
aas
pop
ljmp
or
enter
mov
stc
mov
xchg
lods
or
fsubs
out
mov
adc
pop
out
jo
arpl
cmp
add
dec
je
test
xchg
mov
lahf
inc
fidivrl
repnz
jo
add
je
jmp
addr16
pop
mov
dec
stos
cmc
dec
dec
pop
lcall
pop
or
cmpb
inc
pusha
decl
or
mov
mov
xor
pop
pop
das
les
and
fdiv
mov
xchg
rcr
ss
push
sub
movb
in
add
mov
xchg
scas
jo
inc
sub
jg
jae
dec
cmp
jo
or
mov
sbb
xchg
mov
shl
push
inc
and
cmp
or
adc
sub
mov
cli
loop
mov
add
xlat
inc
fcom
shr
push
xor
in
fucom
repz
cmc
leave
cmc
adc
es
cmp
nop
add
stc
shl
mov
push
sub
test
dec
pop
decb
fwait
lods
mov
out
sub
pop
bound
les
movsl
stos
jmp
xchg
mov
add
push
jle
scas
xor
addr16
mov
cmpsl
mov
je
push
clc
cmpsl
dec
inc
fisubrl
mov
sub
int3
into
pop
int3
scas
jbe
scas
test
arpl
push
mov
jl
jae
xor
mov
das
pop
fisttpll
mov
bound
inc
shrb
jmp
out
xor
ret
cs
xor
pop
xor
lret
sub
cmp
enter
or
pop
pop
push
cld
sub
lahf
mov
rcrl
ljmp
push
push
in
mov
push
js
lea
mov
rorb
repnz
test
lods
or
subl
dec
push
dec
out
jae
jne
mov
lods
push
insl
stos
rcl
jns
shll
add
mov
push
adc
push
xchg
inc
sbb
js
fs
mov
cmp
xchg
insb
push
jnp
xchg
pop
push
ljmp
fwait
push
add
dec
push
sbb
push
jge
imul
sbb
test
adc
pop
mov
scas
mov
cmp
fnstcw
inc
mov
ss
push
sub
add
xor
pop
stos
scas
test
jnp
outsl
loop
jge
fs
mov
adc
mov
repz
jg
fadds
mov
lods
jnp
fistps
in
inc
scas
movsb
sti
clc
aas
mov
push
movb
jns
mov
js
mov
loop
xchg
pushf
cmc
fs
mov
movb
push
aas
xor
repnz
arpl
mov
ret
or
sbbl
or
and
dec
pop
jl
dec
dec
aas
sub
pop
mov
cmc
lods
fxch
lods
sbb
and
xor
shlb
loope
stc
inc
xor
mulb
mov
jnp
cwtl
cmc
adc
inc
mov
outsl
cld
in
add
mov
mov
adc
mov
inc
or
jmp
sub
int
insl
imul
mov
cmpsb
cmp
push
aaa
pop
lcall
xchg
int
int
push
mov
inc
mov
gs
leave
sub
pop
arpl
push
sbb
mov
sbb
stos
lahf
lret
mov
fistl
sti
pop
pop
cmpsl
jmp
pop
sarb
adc
faddl
repz
jmp
add
orb
aam
inc
jns
sbb
sub
mov
and
dec
mov
ds
popf
ret
jae
arpl
insl
sub
je
xchg
xlat
test
jb
jp
out
stos
add
lock
or
adc
insl
out
repz
rorl
cs
in
push
jle
jecxz
ljmp
inc
xchg
jge
clc
add
fiadds
mov
xor
int3
arpl
inc
clc
es
rcrb
cmp
fisubrs
add
cmp
jo
sbb
sbb
mov
sahf
int3
ja
data16
dec
adc
fcompl
xlat
sahf
lret
push
inc
pusha
xchg
adc
out
enter
xor
lcall
mov
xchg
ror
inc
inc
add
sub
call
pop
fwait
and
xchg
sub
inc
mov
scas
mov
and
mov
pushf
xchg
jb
push
sbb
jge,pt
sub
les
push
jg
and
mov
mulb
or
mov
dec
mov
mov
xchg
mov
cli
adc
or
int3
jp
or
xchg
push
jge
in
xor
mov
jo
lods
clc
pop
bnd
add
jo
sbbb
loopne
xor
mov
jno
aad
sbb
pop
cmc
mov
cltd
ja
sub
mov
sub
push
cltd
loop
adc
cmpsl
hlt
in
cmp
fistps
adc
into
pushf
cmp
cmp
scas
xlat
mov
lret
pop
sbb
mov
shrl
cmp
mov
aas
pop
mov
in
xchg
jg
and
cli
out
dec
mov
jmp
jl
fisubl
dec
push
mov
icebp
pop
test
push
in
sub
lods
pusha
jb
push
pop
xor
and
pop
cs
mov
cmpsl
sub
ja
ja
xor
insl
mov
push
mov
sub
push
or
aas
test
sahf
hlt
repnz
adc
testb
movsb
in
rclb
sbb
and
in
sub
aam
out
mov
dec
sarl
sub
imul
shrb
inc
hlt
aam
sub
cli
dec
jnp
js
popa
in
jno
xchg
loop
push
jge
jb
test
subl
jmp
jp
mov
das
xor
es
and
push
test
and
mov
mov
mov
fistpl
pop
je
jmp
mov
xchg
daa
adc
in
in
mov
xchg
insb
pop
cmp
loope
outsb
stos
sbb
sub
mov
inc
mov
popf
outsb
jb
sub
pop
xchg
xchg
imul
lods
mov
sbb
mov
mul
sahf
dec
sbb
lcall
push
mov
dec
sahf
je
pop
jp
xchg
dec
inc
mov
sub
dec
gs
adc
loopne
mov
fsubrs
fadd
stos
out
xorb
jg
push
pop
sub
mov
cmp
push
outsb
mov
out
jne
icebp
xchg
mov
ret
xor
push
mov
push
pushf
es
mov
sub
leave
mov
lock
jae
out
loopne
xchg
aaa
pushf
ret
and
dec
push
and
dec
jge
jl
mov
cs
cmp
xor
in
dec
jle
sbb
mov
xor
clc
fsubrl
push
add
and
mov
ja
mov
ljmp
push
ja
xchg
dec
or
clc
or
dec
test
into
fcompl
mov
xor
mov
aaa
xchg
inc
xchg
mov
lods
cs
ljmp
sbb
das
adc
jmp
mov
das
fadds
call
jne
push
hlt
mov
loop
repnz
xor
mov
sub
dec
fisubrl
rcll
enter
pusha
sub
push
pop
jno
push
testb
mov
orb
mov
je
int3
xchg
inc
sbb
paddb
aas
adcl
fs
push
mov
mov
cmp
sbb
mov
inc
sbb
jecxz
pop
dec
xchg
out
movsb
stos
lds
ret
push
jle
add
ret
int
adc
adc
cltd
or
test
jmp
das
subb
in
repz
daa
pop
dec
mov
faddp
lahf
addl
test
and
fsub
inc
xchg
test
add
sbb
fcmovu
adc
sub
sbb
aam
adc
lods
xor
in
mov
clc
mov
lret
pop
aaa
js
and
les
mov
in
pop
inc
cmp
addr16
sbb
lcall
jecxz
jmp
mov
push
fst
jns
imul
aam
fs
daa
shlb
mov
scas
sbb
orl
leave
sub
push
add
sub
cmpsl
shl
mov
xchg
inc
fldcw
jmp
insl
vandnpd
mov
xchg
mov
cmp
fisttps
outsl
loope
out
cmpsb
mov
pop
dec
push
clc
mov
lock
ljmp
mov
mov
jp
or
aad
test
js
addr16
pop
inc
pushf
hlt
sbb
cld
call
mov
sub
icebp
ret
mov
pushf
cld
sbb
std
movsb
sub
std
fisubrl
adc
ds
inc
mov
pop
push
sahf
je
icebp
out
adc
fistl
pop
loope
frstor
jb
idivb
xor
mov
push
movl
loope
cmp
enter
add
xchg
dec
movb
xor
aas
mov
jge
mov
sbb
pop
jb
mov
pop
sar
arpl
loop
imul
int
push
out
imul
fsub
mov
div
into
cmpsb
add
xchg
sbb
sub
xchg
movsl
xchg
call
adc
or
cmp
dec
fstl
jmp
jle
aad
xor
inc
dec
addr16
add
add
call
push
push
bound
insb
mov
sbb
cs
not
dec
or
sti
ljmp
mov
mov
add
xchg
loope
sbb
add
adc
mov
sbb
cmc
outsl
in
divb
jmp
add
insw
loope
in
fnstsw
add
xchg
loop
fwait
rcrb
ljmp
inc
push
rcl
out
dec
ss
mov
loope
sub
mov
cmpsb
shll
jb
in
pop
sbb
inc
lret
lock
mov
pop
ret
iret
pop
and
incb
pop
lahf
sbb
sbb
sarl
sbb
and
mov
mov
mov
outsl
fbld
in
dec
pushf
insl
adc
lods
loopne
cmpsl
mulb
pop
add
mov
push
jns
ror
mov
add
rclb
movsl
mov
push
mov
fimull
lock
std
pop
push
adc
lret
les
loope
sub
fistl
je,pt
fnstcw
sbb
fistpl
mov
inc
pop
insl
shlb
stos
xor
mov
dec
mov
cltd
lret
adc
and
sub
dec
nop
sub
enter
rep
sti
mov
jno
cmp
lods
mov
mov
icebp
rcrl
lahf
jne
push
cmpsl
inc
enter
mov
aam
jne
cmp
push
mov
scas
cmpb
pop
adc
xlat
push
sbb
cmp
sub
imul
mov
adcb
xchg
mov
insl
movsl
scas
stos
sub
pop
hlt
movsb
cmp
insb
add
dec
dec
jp
push
int3
and
jne
mov
fdivl
mov
ret
dec
and
jg
cmp
push
jnp
jo
and
jne
inc
mov
lea
or
out
inc
pop
sbb
stc
sbbl
icebp
push
and
sub
lods
jge
push
das
push
and
sti
test
into
int3
or
cmpsb
mov
xor
mov
xor
lods
ret
push
dec
jmp
pop
pop
cmp
push
ret
pop
add
loopne
lds
bound
out
leave
sbb
mov
mov
xorl
sbb
popf
sub
dec
in
insl
xor
add
loop
jl
movsb
and
pop
inc
movsw
mov
adc
out
sub
push
roll
mov
insl
cmp
repnz
outsb
ret
sbb
mov
fbld
jnp
outsl
xor
in
mov
test
in
mov
cmpb
addb
sbb
call
cmp
add
std
popa
cmp
jl
and
jmp
sub
sbbb
pop
test
push
mov
fmull
lods
scas
dec
les
lock
fwait
cld
pop
nop
rcr
adc
xor
mulb
cmpb
rcrl
mov
arpl
mov
popa
in
pop
xchg
out
inc
jle
movsb
dec
loope
adc
loopne
dec
arpl
leave
cmp
outsl
push
or
clc
stos
sub
mov
jle
jecxz
dec
push
rclb
xchg
jmp
xchg
sbb
inc
nop
jge
or
dec
jo
sub
cmp
sahf
popl
repnz
inc
or
cmp
js
fisttps
adc
test
aaa
xchg
and
push
xor
cli
ja
inc
jo
divl
test
push
mov
addr16
cmp
repz
iret
mull
rolb
and
dec
cmc
fs
jbe
and
in
ds
jne
lcall
add
xchg
insl
js
inc
lods
gs
fisubs
ret
and
sbb
cmpsb
cli
adc
iret
dec
outsb
insb
or
fildl
cmp
xchg
sbb
shrl
popa
cli
lret
inc
adc
xor
lea
mov
nop
inc
int3
test
daa
adc
and
imul
cmc
and
aaa
out
jp
mov
inc
mov
xor
push
mov
mov
push
pop
sub
mov
inc
shll
xchg
mov
mov
aam
pop
loop
into
pop
and
hlt
cmpsb
popf
iret
gs
dec
cli
repz
lea
jle
scas
cld
mov
sbb
test
addr16
push
fdivp
xchg
mov
loope
leave
mov
sahf
pop
sub
jnp
enter
daa
mov
pop
fmuls
inc
pop
pop
test
js
arpl
mov
inc
and
or
imulb
test
jnp
sarl
cmp
insl
mov
cmp
cmc
jns
cmp
das
mov
mov
xor
ss
outsb
into
mov
mov
or
add
mov
mov
mov
popf
mov
adc
out
add
fldenv
aad
mov
mov
iret
dec
pop
push
dec
imul
lcall
pop
xor
in
mov
fsubs
xchg
sbb
push
xor
pop
xchg
imul
mov
sub
jno
push
shr
test
and
insl
ss
and
pop
shrl
lock
inc
stc
stos
movsb
fiadds
or
mov
mov
test
pop
xor
push
inc
ret
sub
addb
addl
mov
fsubrs
fdivs
stos
cld
pop
popf
mov
jns
push
int3
mov
leave
jae
pop
or
dec
enter
push
jl
xor
lea
xchg
js
imul
mov
cmp
xchg
inc
shl
xor
sub
add
cmp
fstpl
mov
cmp
bound
aad
adc
jbe
push
add
adc
jg
dec
mov
xchg
pop
hlt
leave
xor
mov
stos
inc
or
popf
mov
int3
jae
fildl
test
into
pushf
js
add
mov
xchg
sub
jp
pop
ds
sub
inc
mov
pop
lock
repnz
adc
push
cs
mov
jbe
imul
sub
stos
das
cmc
in
mov
dec
push
out
fstps
cmpsb
dec
mov
xor
mov
push
mov
adc
xchg
int
jge
and
ds
jge
xchg
stc
pushf
test
mov
loop
mov
ss
push
inc
ljmpw
les
mov
stos
gs
pop
mov
add
mov
arpl
stos
les
xor
cmp
add
jge
stc
out
add
sbb
sub
add
xchg
adc
popf
movb
mov
inc
pop
outsb
or
imul
xchg
jl
dec
psrlq
mov
mov
inc
pop
sub
mov
adc
fldenv
call
fisubs
mov
out
adc
add
mov
enter
pop
mov
dec
mov
or
mov
repz
lea
popa
or
imul
aas
xor
ja
mov
aas
adc
inc
cli
inc
xchg
lods
xchg
and
push
pmulhw
loopne
mov
add
xlat
mov
div
and
fstpt
dec
adc
cmp
xchg
pop
pop
test
sub
lds
and
rorl
mov
fucom
sbb
scas
mov
cmpsb
mov
adc
cmp
xchg
jns
push
adc
sbb
aad
jno
jno
push
dec
rcr
ret
cltd
push
adc
ss
mov
jno
sbb
mov
pop
mov
movsl
roll
xchg
lret
jg
adc
lret
lock
shr
shrb
adc
push
js
dec
push
sub
cmc
shrb
out
dec
imul
mov
fwait
mov
test
inc
inc
pop
mov
or
subb
push
pushf
xor
dec
cmp
in
mov
cwtl
xor
test
sar
mov
xor
xor
stos
pop
mov
inc
shrb
mov
mov
sbb
add
mov
cmp
mov
mov
cltd
jns
data16
mov
adc
pop
rolb
dec
in
in
xchg
adc
dec
cmp
insl
clc
sub
std
ja
inc
popa
aad
fsubs
cmc
sub
pop
mov
push
mov
adc
test
pop
out
xchg
dec
sbb
cmovb
mulb
rclb
pop
iret
and
add
mov
and
in
cmp
int
lods
inc
and
add
daa
mov
sub
xchg
mov
mov
mov
out
xchg
jp
cwtl
push
cwtl
popa
mov
fildll
das
dec
jmp
adc
ret
int3
ss
int
pop
and
lock
insl
inc
jmp
jne
fdivrs
fwait
loope
loopne
into
out
adc
dec
jae
xchg
cmp
cmpsb
xor
mov
jg
sub
nop
out
and
insb
xor
or
or
xlat
pushf
js
inc
shlb
mov
push
lods
cmp
cmc
arpl
in
xor
sub
lcall
pop
aam
push
sub
cld
ljmp
imul
je
stos
hlt
sbb
push
jle
inc
out
xorb
dec
pushf
lods
fisttps
rcll
mov
inc
sub
push
icebp
js
lock
test
stos
xorl
cld
add
xchg
leave
fsubrs
fcomps
cwtl
rclb
test
mov
jle
call
orb
and
inc
icebp
cwtl
sbbb
adc
push
loop
and
int
je
or
movsb
jo
hlt
mov
xchg
push
cmp
inc
mov
mov
lock
or
cmpsb
mov
rolb
lret
sub
cmp
add
cmp
mov
js
imul
iret
inc
aaa
les
shrl
addr16
sub
int3
in
ficoml
rolb
add
cs
push
inc
mov
cld
add
in
aad
fiadds
shrl
mov
add
jmp
pop
push
jl
add
jno
xor
std
out
mov
pop
leave
jne
mov
push
mov
pop
into
scas
je
imul
loope
push
dec
pop
in
add
sahf
fmul
xchg
mov
pop
mov
arpl
or
xchg
test
fdivl
js
test
pusha
pop
ret
movsl
cs
and
cmovo
dec
mov
mov
mov
outsl
sub
mov
pslld
pop
cs
mov
cwtl
cs
inc
push
or
jmp
sub
aas
add
gs
pop
jno
fidivs
adc
mov
dec
cmp
or
testl
xor
repz
add
cmp
repz
lea
add
and
pop
rcll
mov
je
inc
cwtl
adc
popa
sub
cwtl
xor
xchg
or
rcrb
pop
and
xlat
jge
mov
mov
js
imul
stc
and
stc
das
fmull
pop
ret
lret
je
cmp
lods
lcall
orl
lock
cwtl
mov
insl
lods
les
jae
aad
out
cmp
lahf
mov
cltd
cmp
adc
mov
ja
lods
sahf
pop
mov
inc
cmpsl
add
mov
inc
mov
js
dec
xlat
fnstenv
push
push
push
jnp
adc
adc
sbb
mov
sbb
and
pop
jnp
hlt
dec
cmovge
ret
or
gs
add
and
xchg
shl
clc
inc
xlat
add
rolb
or
mov
push
push
cmp
and
loopne
in
mov
or
das
or
xchg
push
shll
xchg
loop
xchg
xor
or
addl
sub
xchg
ret
jnp
in
dec
stos
in
pop
jne
jb
xchg
push
sahf
cmpsl
jo
sbb
xor
stos
jp
jg
xchg
cmp
js
mov
sbb
pop
and
aam
and
scas
sub
add
jo
cld
sbb
stos
scas
sbb
sub
ja
aam
jle
sub
ja
mov
ret
fidivrl
ret
xchg
push
push
out
dec
xchg
sub
add
aas
mov
iret
bound
mov
js
pop
push
shlb
add
xchg
dec
adc
add
std
lret
das
hlt
jne
mov
cmc
push
and
addr16
cmp
and
imul
adc
sub
pop
stos
movsb
or
xchg
inc
add
es
add
mov
or
fistps
jmp
mov
scas
jnp
les
add
pushf
data16
shlb
dec
mov
xorl
pop
sbb
pop
mov
int
mov
jae
out
add
in
mov
add
dec
add
and
push
inc
jbe
push
ret
or
cld
ret
pop
roll
js
jp
mov
stos
push
or
cmc
mov
sbbl
jns
outsb
cli
sub
ljmp
ret
push
push
inc
icebp
xchg
pop
dec
xor
and
push
into
sbb
mov
jecxz
sbb
sub
in
xchg
les
adc
push
jp
jnp
inc
loop
mov
mov
mov
mov
adc
pop
add
out
rclb
xchg
dec
pop
mov
xchg
mov
insl
test
push
je
cmpsl
push
inc
aam
xor
hlt
cmp
leave
in
fcmove
lock
shlb
lock
jl
insl
xchg
addr16
and
arpl
push
test
pushf
rcr
xlat
jo
inc
aad
lahf
popf
stos
and
hlt
add
dec
pop
pop
cmpsl
jge
xor
imul
mov
cmpb
and
cltd
aad
stos
push
push
and
into
aad
cmp
lea
mov
xor
or
cmpsb
movsb
dec
dec
imul
push
xchg
dec
test
in
jne
mov
xchg
std
pushl
ror
pop
or
scas
ret
out
stos
push
and
xchg
lock
sub
ljmp
inc
adc
or
gs
sarb
push
sbb
mov
push
divb
fstpl
xchg
cwtl
push
repz
imul
repz
lods
jnp
ret
scas
push
lcall
js
adc
fs
xlat
mov
rolb
rorl
dec
push
loop
sbb
lods
mov
inc
ret
je
xchg
cmp
shrl
and
cld
push
push
xchg
add
addr16
lea
pusha
loope
mov
and
orb
ret
mov
in
cmp
dec
sti
dec
pop
inc
dec
cmp
popa
cmpsl
cli
arpl
or
xchg
lods
xchg
sub
int
push
loop
scas
fnsave
xor
insl
in
or
es
jg
aaa
push
dec
dec
insb
lods
xchg
repz
add
and
cmp
subl
xor
clc
ret
jl
aad
and
fs
sbb
and
cwtl
pop
iret
fsub
mov
cwtl
out
push
iret
lds
adc
js
lahf
jae
rorl
jne
in
fldl
jle
or
leave
js
cmc
push
inc
lock
pop
or
fimuls
outsl
std
push
js
lcall
lds
push
inc
into
das
cld
push
push
inc
out
xchg
and
mov
sub
sbbl
jmp
movsl
xor
pop
and
testl
and
mov
jne
pop
fbstp
int
pop
and
dec
subl
xor
cmp
push
sbb
push
mov
inc
cmovne
inc
cltd
mov
push
cmp
mov
fs
dec
and
xchg
les
add
loopne
data16
or
into
push
jb
dec
sbb
pop
je
repz
inc
mov
xchg
insl
stos
inc
push
add
push
loope
pop
add
out
jmp
jg
inc
pop
sbb
cli
mov
push
call
shlb
fcompl
xchg
mov
mov
lcall
hlt
add
xchg
add
test
es
mov
mov
aas
pop
lock
js
out
cmp
arpl
xchg
or
add
sbb
call
sub
hlt
ds
or
mulb
rorl
xor
add
lahf
loopne
jo
mov
adc
out
add
cmpsb
enter
out
cli
lret
adc
jno
cmp
icebp
add
sbb
gs
lds
dec
pop
mov
adc
inc
xor
pushf
repz
in
add
loop
js
mov
mov
mov
popf
sub
dec
xchg
int3
mov
jg
fbstp
testb
jg
cmpl
xor
mov
lret
bound
dec
in
shrl
scas
adc
and
pop
sbbl
shrb
mov
int3
rcl
sbb
aam
stos
int
jnp
cmp
jo
imul
ficoml
adc
data16
lock
inc
inc
mov
xlat
nop
or
hlt
add
pop
cmp
cmp
nop
push
xor
stc
cli
dec
pop
inc
fistpll
pop
clc
ret
jp
movsb
cli
inc
jmp
mov
rorb
or
fidivrs
cmp
or
jmp
jb
jnp
je
sbb
int
sbb
xchg
iret
push
outsb
cwtl
dec
inc
int3
hlt
add
cld
aaa
daa
int
enter
hlt
pop
mov
and
sub
adc
mov
cld
out
movsl
loop
pop
mov
fsubrl
pop
std
jne
icebp
mov
inc
mov
in
mov
cmpsb
je
push
mov
adc
adc
cwtl
test
outsb
cs
add
repz
int
or
fwait
aam
arpl
loopne
aad
mov
scas
scas
mov
dec
popf
insl
das
repnz
aas
sbb
fidivs
xchg
jge
ficomps
sbb
shlb
lret
jmp
xchg
mov
int
cli
jo
repz
push
xchg
pop
popf
fwait
mov
pop
sub
mov
cmc
sub
xchg
push
xor
mov
pop
popa
roll
lock
insl
mov
sub
mov
inc
mov
and
aas
int3
sar
andl
mov
xor
enter
push
mov
inc
das
mov
orl
push
xor
jmp
push
mov
fidivrl
xchg
dec
jbe
inc
iret
inc
mov
cmp
push
imul
ret
repz
pusha
es
xchg
lods
jmp
mov
imul
adc
leave
notl
mov
inc
cmova
dec
jno
inc
out
stos
mov
add
mov
mov
and
sub
xchg
push
loope
flds
adc
mov
lret
cmpb
mov
sbb
and
sti
xchg
sub
aam
fimull
test
ja
xor
frstpm(287
jl
push
out
sub
mov
lock
xor
jbe
int
outsb
jne
pushf
sbb
ret
insl
pop
nop
nop
add
xchg
jmp
ficoml
sub
mov
sahf
inc
or
xor
mov
pop
jmp
or
xor
dec
jecxz
icebp
stc
rol
push
int3
mov
sub
adc
fimuls
pop
fisttpl
jo
fcmovne
cmpl
cwtl
movsb
wbinvd
sub
daa
add
ss
dec
xlat
push
stc
mov
add
inc
divb
lret
je
notb
adc
pop
jnp
jle
les
mov
call
cmp
subb
xchg
ret
xchg
push
inc
out
inc
sti
or
add
clc
push
pop
shl
fwait
mov
push
xor
lods
mov
mov
popa
das
std
push
dec
out
pop
imul
ret
xor
cwtl
je
in
push
sar
sbb
mov
lea
inc
pop
loop
bndstx
jnp
test
popf
sar
test
xor
add
pop
inc
ret
push
test
das
mov
inc
dec
frstor
test
testl
mov
sub
push
dec
nop
push
aaa
cmp
xor
dec
sub
into
pop
es
popa
notl
push
xor
xchg
shl
test
rorl
in
adc
jmp
xchg
fcompl
inc
imul
pop
cmc
jle
push
cmp
test
jnp
out
imul
jg
cmp
cmp
std
test
enter
pop
push
or
push
dec
movsl
pop
iret
jnp
push
imulb
fbstp
cmpsl
jge
mov
xchg
jmp
inc
fmull
mov
daa
mov
rol
dec
jns
mov
mov
ficomps
pop
pop
ja
and
pop
or
gs
xchg
out
cmp
shrl
jmp
enter
lret
xchg
sbb
aas
aaa
jg
mov
ret
jb
subb
outsl
pop
lods
or
xchg
add
inc
into
jp
push
mov
in
xorl
imul
dec
in
lock
cmp
mov
mov
sbb
fcmovnu
and
sub
lock
pop
ror
mov
scas
inc
mov
pushf
outsl
cltd
mov
pop
scas
xor
fwait
push
jge
xchg
add
add
jbe
and
jecxz
pop
pop
popa
data16
ss
psrld
ret
outsl
and
lods
adc
add
sbb
pop
imul
push
sub
ficomps
pop
leave
ffree
mov
lret
mov
mull
mov
pop
push
leave
xor
add
sub
fisubl
xchg
sub
mov
mov
icebp
push
repnz
xor
jae
mov
rcl
pop
inc
dec
inc
mov
fldenv
mov
out
outsb
xor
pop
mov
loop
rorb
out
dec
xlat
lahf
mov
sbbb
out
sub
mov
cli
outsb
push
imul
sbb
lods
cmp
mov
insl
sub
int3
sahf
mov
cmp
insl
orl
mov
std
outsl
mov
mov
add
out
push
sbb
sahf
mov
and
ret
ret
test
cwtl
dec
push
lods
subl
imul
xor
lods
lcall
aad
dec
mov
in
fstl
push
add
adc
mov
test
loopne
xchg
jbe
scas
sbb
scas
arpl
add
add
inc
or
xchg
mov
shrl
into
inc
sbb
dec
add
fcompl
movsb
dec
scas
sub
icebp
xor
jecxz
jo
daa
or
sbb
loopne
sub
mov
in
cmp
subl
xchg
jle
inc
test
mov
and
add
xor
pop
dec
aaa
ljmp
pop
leave
cwtl
sbb
rcrl
xchg
pop
sbb
imul
push
pushf
jmp
movsb
aad
xchg
andl
add
xchg
push
pop
mov
lds
cmp
jns
stos
push
and
sbb
inc
mov
int3
mov
clc
loopne
cltd
adc
or
mov
pushf
xchg
sub
pusha
sub
fsubl
mov
int
cmp
jge
dec
sbb
pop
sub
data16
and
fdivrl
cmpsl
pop
add
inc
pop
pop
iret
dec
lods
dec
and
dec
in
push
addr16
mov
sbb
cld
or
xor
cmp
negb
xchg
out
mov
push
test
jnp
fbld
push
loopne
sbb
add
xchg
enter
add
xchg
push
or
jl
xchg
cld
push
add
mov
insl
jb
in
imul
nop
je
mov
cmpsl
push
aaa
fs
rcr
test
or
jb
and
bound
adc
out
adc
jnp
dec
icebp
sbb
push
mov
and
fs
add
lods
mov
insb
mov
push
cmp
push
mov
cli
icebp
pop
dec
xchg
mov
arpl
adc
xchg
stos
fcmove
mov
mov
mov
and
movsl
xchg
sub
pop
sub
dec
cld
xchg
dec
pushf
aam
jp
fst
inc
or
jp
push
ffreep
pusha
and
push
or
fisttps
ljmp
add
cmpsb
adc
xchg
sub
call
push
wrmsr
pop
stos
out
aas
and
enter
fimuls
lcall
cmp
movsl
xlat
cmp
int
or
dec
out
sub
and
out
js
jbe
or
push
push
fwait
xchg
popf
push
cli
adc
ds
in
shlb
out
push
inc
pop
test
push
and
fmuls
xor
xor
jno
cmc
lds
push
rorl
outsb
mov
pop
cld
mov
pop
or
mov
inc
das
leave
testb
xlat
aas
popf
sbb
xor
adc
or
mov
mov
jnp
loopne
pusha
into
ds
xchg
inc
shll
dec
mov
cwtl
icebp
mov
add
pop
les
popa
jl
adc
cmp
mov
nop
jle
cmpsb
push
popl
jno
push
mov
xor
adc
or
clc
imul
push
fdivs
inc
insl
arpl
addr16
cltd
xor
fmul
inc
push
fdivr
mov
xchg
mov
mov
fwait
jl
rolb
mov
les
orb
xlat
dec
jae
imul
sub
inc
setns
cmpb
xchg
mov
inc
dec
aaa
dec
je
popf
jns
inc
mov
sub
aam
jg
sbb
shl
push
sarb
out
std
cwtl
push
xchg
mov
dec
add
stos
sahf
jnp
js
and
add
mov
cmp
aaa
shrl
in
xchg
popa
out
inc
sbb
pop
mov
popa
ret
fucom
fsubrl
jecxz
push
stos
pop
push
clc
in
push
imul
lret
cmpl
sub
push
cmp
ljmp
xor
mov
lods
push
xchg
adcb
iret
loopne
add
ret
push
clc
andl
idivl
test
ret
xchg
push
xchg
lods
mov
jne
sbb
xchg
sti
pop
dec
cmp
xchg
je
mov
mov
les
mov
add
xlat
xchg
mov
scas
testl
fs
xchg
or
shll
inc
enter
and
mov
loopne
sub
jp
jmp
div
in
cs
push
lret
es
std
outsb
xlat
push
and
push
mov
fdivs
jmp
cmpsl
sahf
bound
popa
jne
pop
mov
aad
insl
sahf
push
jge
xchg
repz
mov
fsubr
movsb
stc
and
lret
dec
jl
push
push
cwtl
imul
cld
subb
cwtl
dec
sbb
inc
daa
lret
xorb
pop
fndisi(8087
dec
test
pop
cmp
movsl
iret
pop
jp
dec
outsb
push
fcmovbe
push
test
add
jns
stos
es
or
pop
into
fidivs
inc
das
mov
leave
into
int3
add
push
sub
push
es
insl
push
in
add
bound
dec
or
cmp
std
jae
leave
testb
loop
cmpsl
outsb
pop
jle
sbb
jp
sti
aad
in
mov
js
sub
jo
inc
and
sti
lret
add
xor
loop
push
push
sub
dec
mov
call
adc
mov
sub
sub
popa
popa
jmp
aas
mov
rcr
cli
mov
je
leave
out
sub
push
cld
jnp
popf
pop
mov
xchg
mov
lds
cmc
xchg
xlat
jecxz
call
adc
mov
jno
in
xchg
dec
cltd
in
xchg
push
cld
cmp
mov
ja
xchg
int3
testl
decb
repnz
push
hlt
push
jnp
dec
xor
sbb
or
cmp
cs
repz
pop
mov
daa
jo
ret
adc
imul
movzwl
mov
ret
subl
sbb
outsl
xor
jb
lock
jnp
movsb
imul
push
jl
nop
push
and
in
imul
or
ljmp
in
and
xorl
in
jb
inc
lods
mov
mov
es
addr16
push
imul
ljmp
mov
push
pusha
and
leave
in
mov
into
cmpsb
mov
fs
jge
insb
cmp
outsb
sarb
lcall
jge
jg
es
roll
aad
shll
data16
and
pop
inc
inc
into
es
sbb
arpl
dec
cltd
and
bnd
push
xor
dec
loopne
lock
jb
sti
push
xor
lods
fmuls
popa
inc
addl
cwtl
cwtl
imul
mov
sarb
outsl
push
add
pushf
int3
aas
cmc
bound
out
shrl
inc
out
hlt
ljmp
lret
arpl
cwtl
sub
out
push
insb
pop
sbb
xchg
loop
pop
jo
lds
sbb
insl
scas
sahf
cmp
xor
dec
lret
push
adc
xchg
mov
xor
adc
xchg
dec
cmpsl
imul
sbb
sub
push
push
jecxz
cmp
js
add
mov
loopne
imul
adc
cmp
xchg
pop
inc
outsb
mov
test
sti
mov
push
rcrl
in
mov
clc
xor
sub
repz
push
sub
mov
shr
les
imul
outsb
ljmp
mov
enter
jg
dec
push
hlt
sub
mov
mov
mov
stos
sub
mov
cwtl
jnp
inc
jle
cmp
clc
add
insl
xchg
push
add
popa
xchg
pop
mov
cmc
in
loopne
xchg
mov
sbb
and
sbb
mov
das
lret
xchg
push
cmp
mov
jge
add
das
mov
or
loop
lea
test
cmp
push
ucomiss
or
cltd
mov
pop
out
mov
mov
das
mov
jne
ja
pop
and
imul
iret
int3
lds
inc
imul
test
pop
jb
mov
data16
dec
lcall
imul
mov
test
and
mov
mov
orb
scas
cmpsb
gs
mov
addr16
pop
cmp
das
mov
xchg
out
jb
ljmp
mov
sub
rorb
mov
lds
lea
insl
dec
outsl
add
fldt
out
call
fwait
dec
or
sbb
push
xchg
pop
push
repz
push
in
mov
or
lods
sub
cmp
lock
movsb
add
cmp
dec
rorb
loop
orl
adcb
cmp
pop
jmp
sahf
cmpsb
cmpsb
push
test
sbb
and
push
mov
nop
das
push
cwtl
push
pusha
fldenv
xchg
sarb
cmp
nop
gs
mov
sahf
jo
dec
test
outsl
dec
negb
cmp
rcl
sbb
movsb
push
incl
rcrl
fistps
sahf
mov
rcrb
cmp
das
inc
xor
push
inc
pop
int
icebp
mov
sub
scas
lea
daa
mov
lret
fsts
or
or
cmc
xor
stos
lds
push
xchg
xor
adc
or
mov
lods
mov
dec
aaa
pop
ds
jne
or
das
mov
pushf
sar
xchg
ds
cs
and
mov
jge
mov
das
push
jp
inc
iret
add
and
out
sbb
int
inc
pop
jecxz
out
nop
pusha
mov
pop
fstpt
cmp
and
fistps
out
pop
mov
test
pusha
mov
popf
in
cmpb
or
push
xchg
mov
popf
pop
imul
dec
xor
xchg
imul
insl
pop
cli
cmp
les
mov
ja
cmc
dec
xor
and
inc
jl
ds
out
addr16
add
into
mov
xchg
lret
adc
addl
jns
add
mov
adc
xor
adcl
dec
outsb
pop
adc
pushf
and
insl
into
mov
ficompl
ljmp
sub
push
int
lcall
add
cmp
xor
fimull
dec
dec
imul
mov
pop
cltd
push
adc
jne
add
push
dec
cmp
push
mov
test
mull
pop
rclb
adc
add
movsb
xchg
push
mov
ja
push
adc
mov
out
loopne
int3
aaa
mov
vpsubusw
cmp
jbe
cmp
mov
sbb
push
sub
inc
loopne
mov
jne
int3
push
lock
out
mov
inc
push
mov
mov
orl
das
bnd
fcmovne
faddl
mov
jge
outsb
and
fucomp
scas
in
insb
jae
xchg
or
xor
jmp
ljmp
pop
popa
mov
xchg
sbb
add
repnz
push
xchg
fnstenv
sbb
pop
jmp
js
rolb
int
sahf
pop
test
int
adc
mov
and
ss
movsb
inc
xor
loope
fs
inc
jecxz
imul
or
cld
movsl
stos
out
mov
frstor
mulb
pop
insb
inc
adc
aas
scas
bound
cmc
stos
js
inc
addl
enter
fldenv
imul
icebp
mov
popa
or
jne
andl
mov
daa
nop
pushf
pminsw
push
in
sub
dec
fadds
ret
arpl
push
push
ret
stos
es
sarl
jno
mov
sub
insb
and
insl
dec
sbb
popa
cli
sub
leave
mov
lods
lods
fcoms
adc
dec
fwait
xor
sub
pop
fisttpl
lcall
jl
lea
add
and
ljmp
cltd
adc
sbb
sub
in
mov
mov
pop
or
adc
xchg
pusha
mov
cs
sbb
addr16
add
cmpsl
mov
shr
xchg
and
and
fidivrl
shlb
lret
xchg
xor
push
in
les
popf
sub
pushf
rclb
xchg
pop
insl
nop
and
je
and
movsl
mov
xor
movsl
pop
ffreep
lock
mov
sar
dec
int
push
mov
scas
cwtl
push
add
jne
add
mov
hlt
inc
or
jns
push
mov
pop
mov
inc
add
orb
sbb
add
dec
lcall
mov
xor
lcall
mov
push
aam
xchg
fnstsw
cld
je
mov
push
sub
push
lahf
lret
lcall
rcrb
icebp
and
fsubl
and
pop
jo
test
lds
test
xor
mov
sahf
adc
inc
add
in
fildll
or
mov
mov
push
dec
adc
add
mov
adc
or
fstpt
or
jmp
mov
pop
cltd
lock
repz
cs
aas
int3
mov
lods
aam
jp
push
mov
mov
fadd
lahf
test
and
or
add
xchg
rcrb
cmpsb
fistps
imul
sub
sbb
xchg
inc
pop
ror
mov
jb
or
add
in
inc
js
dec
arpl
and
jns
ss
scas
imul
sub
push
stos
shll
lahf
dec
aas
lods
xchg
in
lds
enter
gs
leave
mov
rclb
test
lret
add
add
jmp
dec
inc
jns
pop
and
out
test
inc
shrl
push
dec
pop
aam
mov
xor
mov
mov
cmp
es
out
mov
and
mov
addl
mov
fisubrl
xchg
dec
jle
ja
movsb
sti
add
call
fucompp
jne
add
in
mov
daa
cld
cmp
insb
pushl
outsb
sbb
data16
push
loopne
js
add
dec
gs
outsl
int
aad
inc
mov
cmp
inc
push
xchg
mov
pop
mov
push
test
mov
test
add
mov
hlt
inc
mov
icebp
test
mov
mov
mov
dec
out
mov
xchg
lret
sbb
ds
push
cmp
sub
cwtl
xchg
and
dec
or
ror
shrl
cmpb
adc
cmp
push
inc
or
enter
out
imull
scas
rorb
pop
ss
scas
mov
call
xchg
imul
aaa
pop
repz
inc
ftst
push
pop
imul
insl
aad
dec
leave
or
adc
stc
mov
fcom
xchg
jb
sub
fisttpll
shll
jb
add
xor
cmp
sbb
mov
sahf
jnp
aad
mov
push
cwtl
fadd
jge
negl
jns
das
xchg
pop
inc
mov
shrb
fs
movsl
push
fnsave
notl
xchg
adc
adc
cli
add
sahf
push
pop
clc
and
mov
pop
or
mov
rep
pop
aas
mov
xchg
repnz
mov
inc
jo
xchg
clc
daa
fmuls
cwtl
icebp
dec
leave
aam
arpl
cld
sub
out
mov
xor
adc
xor
dec
dec
pushf
xchg
push
mov
iret
cmpl
add
inc
nop
das
xchg
sbb
jl
mov
nop
icebp
mov
lcall
mov
mov
sbb
and
mov
ficomps
mov
jmp
insl
in
ds
lock
add
jge
int
pop
jnp
cmp
loopne
and
jae
test
call
lods
jmp
pop
sidtl
lahf
outsl
cwtl
mov
shrl
sarl
ret
sbb
mov
mov
cmpb
or
std
push
pushf
aam
jmp
int
int
pop
dec
popf
add
sub
ja
sar
mov
into
and
mov
sbbb
aam
shll
add
mov
fldl
xor
xor
mov
rcll
mov
fdivp
add
or
xchg
push
aas
int
lods
fcoms
fstps
ljmp
mov
loope
push
xchg
dec
ja
push
adc
dec
adc
rorb
mov
jmp
out
xor
push
mov
in
pop
add
rcrb
enter
adc
scas
std
cmpsl
cmpsl
jne
aad
cmp
mov
push
rol
pushf
in
ret
mov
lods
or
pop
jnp
jae
out
sub
cld
add
sahf
inc
sbb
xor
mov
and
in
adc
push
insl
or
push
bound
mov
push
adc
pop
dec
test
and
xor
out
adc
loopne
pop
or
popa
xor
or
xchg
testl
call
hlt
jns
test
or
sub
or
inc
xchg
mov
mov
mov
data16
jle
aaa
insb
and
add
inc
mov
cmpsb
scas
push
loope
aam
jle
ljmp
push
cmpsb
mov
xchg
add
loope
cwtl
aad
jae
push
negb
pop
stos
xchg
dec
add
std
cmpsl
or
aas
loop
jecxz
xor
test
test
jns
dec
adc
pop
shll
push
cmpb
pop
or
cmpsb
jae
pop
mov
pop
stos
into
push
mov
pop
stc
cmpb
enter
mov
and
nop
dec
lret
clc
cltd
cmp
clc
fstl
sti
lret
popf
in
testb
ds
mov
dec
imul
jb
add
pushf
adc
mov
mov
jne
xlat
xchg
sbb
push
rcl
or
daa
ret
shrb
sti
mov
data16
jns
cmp
jmp
lea
mov
xor
negl
imul
add
add
sub
data16
adc
push
sub
fcmovu
int
cwtl
rcll
push
insb
inc
aam
iret
cmp
mov
leave
jg
push
ss
cmp
movsl
pop
gs
jge
sub
cld
mov
bnd
out
out
loope
sbb
das
sbb
jle
sub
mov
clc
hlt
cltd
out
xchg
popf
les
cmp
aam
cmpsl
pop
xchg
mov
mov
jne
mov
insl
jns
adc
cltd
iret
pop
add
add
xchg
mov
addl
int3
cmc
repz
jae
push
sbb
mov
mov
and
stos
out
sbb
cmp
adc
iret
xchg
jg
lcall
dec
jp
insb
xchg
orb
pop
jle
push
mov
mov
into
popa
fcomps
dec
jl
mov
jno
stc
popa
aad
push
sub
stc
lret
mov
fnstsw
in
loopne
std
sbb
in
or
cmp
dec
sbb
std
cltd
out
inc
out
stos
push
ljmp
xchg
in
test
or
stc
ss
lcall
lcall
sub
call
clc
dec
int3
jae
jge
dec
bswap
addr16
popa
mov
in
inc
or
lahf
sahf
ss
movsl
inc
mov
in
pushf
cmp
push
push
dec
std
dec
or
repz
xor
pop
jmp
add
decb
push
mov
push
mov
jno
jb
js
mov
and
shlb
mov
cmp
das
dec
mov
test
sti
add
cmc
imul
push
ljmp
pop
rorl
xor
cmp
inc
repz
test
sub
shlb
sbb
fldcw
lods
fwait
test
inc
jl
loopne
ret
push
icebp
xchg
inc
ret
iret
mov
jae
xor
dec
shll
cmc
mov
mov
and
lods
sbb
pop
je
in
mov
into
mov
sbb
andl
cmp
dec
int
sub
addl
add
xchg
adc
loope
adc
adcl
cmp
movsl
pop
xor
scas
inc
outsl
aad
pop
push
mov
add
in
int3
out
push
sub
and
xchg
test
xchg
cmp
xor
push
hlt
sbbb
mov
xchg
dec
fs
xchg
ja
push
loopne
push
mov
add
xchg
movsb
jmp
in
jp
test
cmc
mov
mov
inc
insb
inc
int3
lods
hlt
pop
jp
gs
mov
fcompl
mov
pop
adc
ja
subl
jnp
sti
jle
add
pop
pop
jmp
pop
pushl
test
loope
addr16
fnstcw
mov
adc
das
es
repnz
mov
push
sub
xchg
sbb
fistpl
fcoml
push
lcall
pop
push
mov
jmp
inc
cmc
inc
aas
pusha
mov
cmpsb
adc
mov
adc
push
in
pusha
sbb
xor
aad
lods
xchg
xchg
ret
xor
and
cmp
test
in
sbb
push
push
outsb
pop
aam
push
push
jp
jne
stc
aaa
sbb
insl
pop
lret
push
aaa
dec
mov
mov
inc
and
ret
movsb
call
outsb
jb
lahf
dec
je
xchg
loope
cmpb
fcmovne
cmc
cmc
ss
dec
cmp
test
gs
adc
or
rorb
xchg
mov
xlat
ret
dec
clc
xor
gs
fcmovb
push
cmp
iret
mov
mov
cmp
out
push
or
xchg
shll
aaa
in
stos
jb
fisttpll
testl
mov
xchg
hlt
shl
mov
xchg
sub
mov
leave
mov
fsts
rclb
lods
xchg
es
and
rcrb
and
lret
pusha
nop
les
lods
xor
jae
inc
lahf
xor
mov
sarb
pusha
in
pop
mov
je
mov
test
cmpsl
je
xor
xor
bound
and
inc
in
dec
xor
and
fdivl
inc
aas
call
cli
push
mov
mov
stos
rcrb
mov
sbb
imul
push
jmp
xchg
roll
aas
stos
cwtl
push
or
stos
xor
pushf
push
fisttpll
pop
in
lods
in
and
es
xor
scas
shr
add
fdivrl
test
push
dec
or
stos
sbb
sub
add
jge
xchg
cwtl
or
out
cltd
cli
pushf
sub
push
scas
ds
pop
dec
insl
adc
scas
sub
cmp
scas
cltd
imul
or
add
xor
and
pop
adc
in
shll
push
add
jbe
out
xchg
mov
mov
stos
nop
or
mov
sub
mov
les
inc
jecxz
push
sub
sub
loopne
cltd
dec
ret
test
cld
mov
addr16
fdivrs
scas
xlat
pop
dec
insl
mov
or
or
lods
mov
insb
pop
xchg
fstpl
or
dec
push
das
jp
xchg
sub
or
cli
push
xor
cmp
daa
rcrb
add
ret
inc
sahf
ja
imull
xor
cmp
inc
loope
pushf
arpl
movl
idivl
sbb
rclb
jnp
lea
test
ret
mov
test
inc
jecxz
test
jne
and
stos
jno
in
mov
push
aam
xor
decl
push
sbb
push
insl
orb
fwait
push
jne
dec
adc
jo
push
dec
adc
test
lea
sti
ja
cmpsl
out
mov
push
sub
ror
fidivrs
sbb
pop
sub
jmp
mov
xlat
iret
xor
mov
enter
push
stos
mov
push
inc
pop
adc
in
inc
push
push
pop
imul
mov
out
mov
pop
ret
les
ds
or
shrl
imul
cmp
repnz
xor
pop
mov
enter
jns
orl
divl
ss
setnp
std
or
add
xchg
mov
add
push
and
sbb
mov
inc
or
sub
stc
sbb
fidivrl
test
sbb
adc
and
push
push
and
cmp
adc
cmpb
push
cmpsb
add
pop
mov
push
mov
rol
add
pop
fwait
int
lods
dec
dec
mov
jmp
cmp
sahf
pop
lcall
je
inc
sbb
mov
pop
sbb
rcrl
sub
add
jmp
in
sarl
dec
and
mov
leave
mov
pop
aaa
loopne
mov
rolb
insl
pop
cmpsl
dec
xchg
insl
repz
daa
pop
push
and
lock
push
xor
mov
pop
loop
mov
mov
xchg
jne
in
mov
scas
mov
das
xchg
push
xor
push
add
fiaddl
addr16
jbe
jle
sbb
or
int3
movsb
cmc
jne
push
dec
ljmp
xchg
les
or
adc
xchg
es
pop
cs
adc
add
jmp
fucompp
out
das
cmpl
cmp
lea
cmc
push
out
addr16
add
pop
inc
loop
sub
cmp
jns
mov
lock
fwait
hlt
arpl
ja
sahf
movsb
inc
jp
xchg
loop
and
das
mov
stc
repnz
aaa
imul
cli
imul
aas
ret
pop
ss
les
test
fisttps
nop
dec
outsl
jae
mov
mov
push
int3
cmpl
adc
bound
ja
mov
imul
or
jbe
insl
ds
dec
dec
xchg
push
repnz
pusha
not
jbe
jmp
fcmovbe
mov
mov
dec
push
lcall
push
test
ret
add
pop
cmpsb
and
sub
inc
or
jmp
and
or
mov
jecxz
mov
mov
add
and
les
movsl
xor
mov
repnz
adc
mov
mov
mov
ljmp
dec
pusha
stos
pop
push
outsb
push
inc
cmpsl
fwait
pop
mov
les
in
lret
or
inc
sub
pop
or
inc
in
fildll
pop
lods
inc
call
lret
adc
or
and
and
iret
aas
mov
sbb
iret
test
mov
insb
jecxz
icebp
pop
jne
mov
mov
sub
sbb
sbb
mov
outsb
mov
repz
xlat
mov
dec
and
mov
gs
lret
jb
in
jbe
xor
push
cmp
pop
jecxz
push
sub
mov
jnp
lahf
adc
sbb
inc
enter
xor
nop
adc
xlat
push
inc
or
and
push
sub
std
inc
xchg
jnp
sbb
mov
push
push
jns
xor
add
dec
push
into
imul
lret
pop
jp
mov
xchg
icebp
mov
repnz
push
inc
lods
aad
lcall
inc
leave
addr16
pushf
cld
loope
jnp
push
add
fdivr
lods
gs
rorb
add
mov
sahf
lods
dec
ja
pop
mov
add
add
pop
out
adc
xor
iret
popa
pusha
cmpb
push
pushf
nop
jmp
fidivs
jae
pushaw
xor
add
das
inc
jbe
loopne
pavgw
scas
bound
in
fistpll
or
push
sbb
mov
lahf
and
data16
std
mov
sbb
in
addb
adc
clc
dec
mov
roll
cmp
pop
xor
and
adc
cmp
add
orb
int
xor
mov
mov
out
test
cmc
pop
xchg
fs
sbb
dec
jno
cmpsb
and
or
mov
pop
shlb
pop
lock
les
shll
ljmp
jne
fucomp
stos
cltd
popf
xchg
scas
scas
mov
mov
xor
jl
add
scas
fwait
jmp
pusha
jae
dec
adc
adc
cmp
adc
push
inc
push
rcr
pop
das
push
jp
scas
mov
jnp
mov
in
cmp
and
push
hlt
pop
hlt
das
lea
mov
jecxz
xor
pop
mov
and
and
shl
and
imul
fldl
mov
push
fwait
mov
ss
sbb
repz
lahf
push
mov
ret
ja
cmc
adcb
call
enter
jle
inc
int
pop
sbb
push
inc
xchg
push
cmp
fcmovnbe
jb
test
test
loop
or
popa
int3
stos
jno
iret
out
fs
dec
sub
mov
mov
lcall
dec
mov
test
pop
ret
inc
out
shrb
in
sub
jp
scas
pop
arpl
jb
imul
push
lds
or
rcrb
fnsave
push
jno
mov
jb
or
adc
or
adc
mov
in
loop
sbb
ret
popa
lahf
ret
adc
sarl
xchg
or
cmp
sub
and
nop
mov
ja
dec
jmp
popa
lcall
mov
hlt
js
loope
test
add
cli
into
push
mov
aaa
aam
cmpsl
jl
xor
int3
adc
popa
xchg
std
add
push
push
xchg
shl
js
add
lahf
xchg
imul
movsl
jg
mov
rcr
push
xor
xor
lcall
test
inc
mov
int
lcall
imul
xor
jo
rcrl
int
icebp
imulb
aas
mov
mov
sub
cmp
sub
pop
xchg
push
cmc
dec
mull
lods
jo
sbb
aam
andb
push
jl
add
mulb
dec
negb
sub
insl
mov
lock
cld
pushf
inc
insb
mov
pushf
xor
orl
xor
cmpsl
dec
push
push
dec
add
pop
pop
dec
loop
or
stos
mov
mov
fucomp
push
or
aad
jecxz
psubb
in
mov
adc
lds
add
xchg
ja
push
cmp
cmpsb
ds
fisttpl
clc
in
aad
ds
out
add
or
add
mov
popl
sahf
imul
cmc
leave
outsl
mov
or
inc
mov
cmc
mov
fdiv
out
dec
xlat
cmpsl
clc
add
inc
mov
mov
mov
push
jp
sub
and
out
outsb
cmp
jns
mov
inc
jae
sbb
jmp
int3
fmulp
mov
xchg
adc
testl
push
lret
jb
ret
pop
push
jg
xchg
mov
lds
lds
inc
jb
ja
sub
shlb
movsl
test
lds
or
cltd
push
test
in
xor
popa
in
dec
test
icebp
dec
in
and
inc
insb
mov
int
pop
cmpsb
ja
inc
sub
jge
mov
xchg
cmp
and
inc
fistpll
fimull
inc
jb
add
test
mov
lcall
adc
inc
or
test
fwait
lods
xchg
xchg
xor
lret
roll
popf
and
push
scas
sbb
and
outsl
mov
cmp
outsb
into
pusha
lea
mov
mov
aam
inc
stos
cmpsb
sbb
outsl
or
stos
loopne
daa
stc
mov
xchg
rcrb
pushf
push
mov
cmc
stc
sbb
das
ret
call
inc
in
jl
adc
push
mov
je
es
xor
jle
sub
cwtl
into
stos
arpl
jecxz
imul
sub
adc
aam
mov
jae
cmpsl
jns
inc
inc
push
jae
movsb
sbb
mov
ret
inc
je
scas
sti
daa
pusha
pop
cmc
stos
out
xchg
pushf
add
shlb
mov
xchg
not
jno
test
fbld
sub
inc
in
inc
addl
push
or
push
sar
iret
cmpsb
emms
add
cmc
xor
pop
sbb
mov
and
pop
stc
cmp
sbbb
mov
sub
mov
aaa
shll
add
pop
rcl
adc
lods
notl
push
push
or
xor
mov
push
jno
xchg
pop
imul
test
jbe
xor
in
call
nop
imul
inc
aaa
pop
icebp
push
or
cmpsl
push
push
ret
pusha
and
lret
aad
gs
lcall
dec
push
jge
mov
add
inc
inc
inc
sub
and
push
sub
mov
jbe
mov
and
pop
cmc
loop
dec
repz
jae
cmp
rcr
inc
ret
lahf
xor
push
add
jecxz
cmpsb
lods
jmp
mov
cltd
lods
in
fstl
inc
xlat
and
roll
imul
loop
dec
int3
clc
dec
add
pusha
push
jmp
adc
jne
sbb
add
adc
in
pop
cmc
sub
cmp
adc
inc
jnp
mov
ja
or
out
mov
cmp
mov
or
jbe
jo
push
mov
cmp
out
adc
xor
cwtl
mov
sbb
fsubrs
jmp
fsubs
cmp
jmp
lret
pop
pop
stos
outsl
ret
sbbb
loopne
dec
icebp
jmp
testb
clc
mov
jmp
dec
test
mov
fildll
xchg
gs
dec
mov
inc
les
pop
fidivs
inc
mov
jo
mov
jo
out
fiadds
shlb
mov
int3
add
and
pop
addr16
fnstenv
sub
enter
dec
pop
pop
or
push
xor
in
cmp
mov
ja
lock
adc
add
sub
cmpsb
xchg
test
popf
adc
xor
push
sbb
js
lcall
adc
xlat
mov
into
insb
sbb
cmp
jmp
add
cld
les
pop
push
rcrl
imul
xchg
xor
push
movsb
icebp
mov
jno
xchg
rorb
adc
push
call
add
clc
xchg
xchg
std
cld
aad
push
sbb
sub
les
lret
orl
fidivl
mov
xchg
loopne
jb
in
and
add
xor
sub
jl
lds
inc
or
or
sub
sti
icebp
dec
adc
addr16
insl
lret
test
leave
jmp
pop
mov
cmp
arpl
mov
lret
sub
ret
inc
sbb
stos
inc
jne
mov
fistl
adc
mov
mov
repnz
jmp
or
mov
ja
cmc
sub
sti
out
or
cwtl
scas
push
cmp
and
sahf
inc
pop
mull
cld
dec
pop
js
out
popa
or
loope
pop
dec
fisubl
mov
xchg
test
mov
mov
xlat
fsubrp
push
test
mov
stos
inc
aad
nop
ret
push
mov
lock
sbb
fsts
out
repz
pop
das
shl
inc
and
out
addr16
fwait
jge
fnstcw
pop
and
lea
pop
xchg
jecxz
stos
stc
repz
sarl
or
sbbb
out
xlat
adcb
sub
insl
xchg
test
pop
mov
pop
fistpl
insb
cmp
pop
jae
pusha
lea
mov
sarl
pop
sbb
mov
mov
addb
das
sahf
rcl
rcr
dec
sbbl
xchg
xchg
stos
xchg
jno
stos
add
aad
mov
xor
mov
shlb
data16
fs
pop
cmp
add
or
ljmp
icebp
mov
jle
stos
cltd
loope
cmp
roll
aad
std
pop
fisubs
test
xor
adc
xor
push
aas
mov
push
popf
inc
bound
fdecstp
dec
xchg
mov
imul
add
jo
adc
fidivl
repz
inc
outsb
add
adcl
aaa
imul
sub
and
adc
pop
push
pop
push
mov
popa
push
add
adc
xchg
mov
pop
into
fdivr
pusha
arpl
push
imul
pandn
xor
jmp
dec
mov
xchg
xlat
or
or
cmp
cmp
push
movsl
sub
sub
fdivrp
xchg
xor
fstl
pop
mov
gs
pop
adcl
insb
xchg
arpl
cli
or
mov
and
pop
je
cmp
xchg
cmp
push
sbb
and
je
orl
xchg
xor
out
or
jg
aad
notb
divl
insb
jmp
sbb
dec
loope
add
loopne
sbb
scas
push
lods
cmp
pop
lret
cmp
push
lcall
xchg
repnz
out
addr16
addr16
and
or
xchg
jnp
pop
cmpsl
and
aas
iret
fdivr
loop
shlb
xchg
jo
mov
or
loope
inc
jbe
rorl
into
std
mov
pop
outsb
xor
into
aaa
sbb
int
mov
pop
mov
lock
in
cmpsb
push
aam
xchg
ret
jge
int
addr16
fcmovnbe
pop
push
xchg
loopne
jnp
xor
and
js
or
dec
cmp
xor
js
stos
frstor
and
insl
mov
sti
or
xchg
mov
xlat
cwtl
sub
repz
add
mov
pop
dec
in
mov
scas
pop
int3
arpl
sar
dec
cwtl
stc
inc
pop
push
pop
or
xchg
dec
xchg
or
jecxz
leave
add
ljmp
jecxz
nop
aad
sub
mov
add
xchg
fimull
sub
adc
fldl
mov
ret
enter
sub
push
mov
imul
push
sub
je
cli
cmpsl
into
sbb
dec
mov
shr
movsb
roll
sti
lret
icebp
inc
dec
nop
mov
xorl
pop
xchg
fisttps
popa
mov
mov
mov
inc
ret
out
xchg
mov
xchg
xor
and
lds
and
pop
or
loop
mov
push
pop
fisubrs
sbbb
or
bound
insl
cltd
pop
ss
mov
add
mov
icebp
in
dec
cmp
inc
test
mov
ffree
or
addr16
xchg
inc
pop
and
and
das
lcall
lcall
dec
sub
push
jno
shrl
inc
inc
imul
mov
sbb
jg
cmp
icebp
pop
xchg
pop
mov
adc
pop
inc
jnp
pop
in
push
push
add
mov
cmp
adc
test
clc
ficoms
sub
movsb
adc
cmp
sbb
fdivrs
fs
mov
push
shrl
lods
xor
and
divb
in
push
negb
outsb
xor
push
pop
lret
mov
std
sub
adc
bnd
cltd
pop
push
lds
inc
mov
popa
sbb
cmp
push
xchg
lods
ss
xor
enter
mov
adc
mov
xlat
shll
out
testl
push
push
pop
pop
or
inc
das
repnz
addr16
mov
adc
xchg
push
rorl
rcll
outsb
lods
push
sub
out
call
cwtl
pop
int
into
mov
mov
nop
jecxz
or
pop
pop
mov
and
lret
xchg
mov
pusha
sub
mov
pop
add
test
rcrl
push
cltd
cmp
out
push
popf
repnz
adc
and
nop
push
popf
insb
stc
jns
inc
adc
xor
mov
pusha
mov
addr16
sub
and
push
ret
popa
int3
adc
fwait
aas
push
sbb
xchg
mov
aaa
cltd
data16
or
cmpsl
push
sti
movsb
daa
imul
or
jge
or
in
mov
xchg
jb
xchg
adc
and
xchg
frstor
inc
inc
and
shll
fisttpll
aad
jo
es
cmp
pop
xchg
jo
mov
data16
pop
mov
dec
iret
add
pop
mov
outsl
mov
mov
fst
mov
add
mov
mov
insl
mov
adc
psubb
jmp
pop
fnstcw
cmp
push
mov
add
lea
or
dec
rolb
daa
fisubrl
aam
cmp
pop
jno
testl
addl
push
sbb
lret
call
insl
mov
jns,pt
insl
and
dec
out
cmpsb
setg
mov
fistpll
push
fstl
outsb
mov
xor
in
mov
add
les
push
es
lcall
sahf
xchg
dec
sbb
push
adc
outsb
xlat
dec
insb
xor
cld
test
cli
into
pop
jb
jecxz
rorl
xchg
outsb
sbb
sti
cs
adc
push
cmp
lret
outsl
fucomi
cmp
scas
ss
pop
loopne
cs
adc
jge
ds
test
mov
dec
xor
jno
ljmp
out
jle
cmp
pop
cs
cmpsb
push
cmp
dec
mov
push
insb
jecxz
repnz
push
or
leave
mov
clc
push
inc
int
adc
in
mov
inc
scas
mov
mov
adc
jbe
sbb
sbbl
sub
push
sub
adc
pop
frstor
sub
movsb
ret
in
shl
insb
into
decl
ljmp
jae
cmp
je
fcmovnb
insb
fcoml
jno
fistps
inc
jp
sub
leave
data16
imul
or
test
clc
rcrl
xchg
fwait
aad
scas
js
sbb
clc
jns
xchg
cmp
enter
scas
xchg
dec
xor
or
cmp
mov
dec
call
jb
aaa
out
scas
mov
push
in
push
and
les
ss
dec
int3
lea
hlt
inc
fiaddl
mov
movsl
lods
shll
lret
lock
sbb
leave
lret
pop
and
lahf
out
ss
adcl
mov
or
aaa
pop
les
pusha
ss
fisttps
or
shlb
or
or
mov
mov
jne
insb
sub
push
dec
dec
pop
inc
xor
jnp
sub
xor
jp
adc
or
aas
stos
test
cs
ljmp
mov
adc
mov
inc
mov
jle
roll
mov
shl
cmp
jae
test
gs
rcr
pushf
fdivrp
decl
dec
add
pop
xchg
mov
sub
cmp
fistpl
pop
xor
stos
pop
movsb
ds
xor
push
nop
mov
das
aaa
xchg
arpl
pop
cltd
fbstp
sbb
sub
xchg
call
xor
inc
pop
xor
cmp
cs
xchg
mov
mov
imul
mov
xchg
xchg
mov
movmskps
test
push
jge
pop
loopne
cmp
and
sbb
push
std
mov
mov
xchg
mov
je
nop
scas
push
fistpll
addr16
lock
xor
ja
or
add
insl
cmp
out
add
adc
adc
je
jno
xlat
pop
pop
aas
mov
shl
popa
outsb
pop
push
mov
rcrl
push
cli
scas
mov
adc
aam
pop
mov
in
cmp
mov
testl
loopne
dec
xchg
mov
lret
js
in
addb
jl
mov
mov
mov
cld
ljmp
or
mulb
sub
cs
je
inc
or
ss
and
shl
jnp
and
std
sahf
call
xchg
push
out
cmp
pop
rorb
ret
sbb
push
inc
insl
aam
ja
lret
idiv
push
les
mov
or
xor
arpl
dec
into
mov
dec
sbb
out
lods
mov
xor
jle
outsb
out
mov
add
pop
ds
mov
push
cmc
fidivrs
push
mov
mov
clc
sbb
enter
inc
out
sbb
ffreep
fmull
shl
pop
sub
jae
xchg
das
dec
call
sahf
sahf
and
add
mov
mov
imul
test
popf
cs
xchg
into
test
cmpsb
push
xchg
ds
push
mov
hlt
lret
cmc
jbe
xchg
adc
or
mov
xchg
cltd
sbb
fs
fnstcw
lds
cmp
stc
mov
and
cmp
xor
addr16
sub
jno
dec
jge
ret
stos
and
sti
jp
rcll
cld
loop
mov
test
adc
push
or
or
pop
sbb
xchg
rcll
cmp
lret
dec
pop
aas
xchg
lret
inc
lret
cmc
jns
repz
ljmp
pushf
ret
out
fs
xchg
test
dec
rcll
mov
push
adc
xchg
gs
repnz
jno
std
and
dec
inc
add
out
daa
add
dec
jno
nop
icebp
or
test
shrl
add
andnps
add
xchg
in
xchg
out
lea
jecxz
and
or
cmp
pushf
dec
sarb
mov
inc
clc
sub
fwait
dec
stos
imul
push
cmp
cmp
pusha
or
xchg
push
push
mov
js
js
ret
cs
pop
ret
mov
or
sbb
push
outsl
mov
int
gs
push
call
call
jl
dec
imul
sbb
inc
test
push
gs
and
shll
clc
pop
ficomps
in
scas
dec
ss
and
test
dec
mov
test
bound
scas
mov
shrb
inc
out
out
xor
xchg
cmp
sti
mov
roll
jmp
jno
gs
outsl
adc
fsubrs
sbb
cmp
js
std
push
sbb
stc
mov
sbb
sub
dec
popa
ljmp
mov
xor
mov
scas
mov
cwtl
iret
pop
fdivr
pop
dec
mov
repnz
fdivr
repnz
fwait
test
ja
jmp
fstpt
mov
sahf
lahf
xlat
cld
jnp
stos
pushf
sbb
stc
add
and
push
insl
dec
push
int
imulb
push
inc
mov
jmp
xlat
rolb
call
enter
es
movsb
adc
adc
loopne
out
add
loope
mov
jmp
cld
sti
mov
movaps
negl
and
dec
sbb
mov
adc
push
test
inc
orb
push
add
xchg
je
add
stos
inc
and
shr
mul
ja
mov
pop
jge
leave
add
lret
sbb
or
or
arpl
imul
mov
sbb
xchg
mov
sub
and
dec
mov
jb
dec
lods
adc
pop
aam
cmp
or
ljmp
repz
into
imul
inc
notb
mov
stos
negl
fsubrs
xchg
cmp
mov
cld
pop
fsubs
std
enter
mov
out
das
cmc
push
jle
dec
pop
push
adc
je
inc
ret
xor
imul
jmp
or
and
test
fisttpl
add
push
outsb
xchg
popf
jns
shl
or
aad
test
sarl
add
sbb
add
mov
push
mov
sub
mov
inc
outsl
cwtl
push
in
int3
loop
adc
lods
push
into
divl
jmp
mov
cmc
and
jp
dec
repnz
jne
out
and
dec
outsl
pop
sahf
jbe
jae
imul
jns
inc
orb
pop
sti
fcmovnu
pop
adc
push
div
fcoml
jnp
in
dec
pop
or
mov
mov
stos
push
movsl
cwtl
imul
inc
addl
mov
in
add
pop
in
mov
xor
pop
mov
mov
repnz
and
jne
ss
stos
xchg
jle
imulb
mov
mov
loope
call
sahf
or
rorl
lret
mov
imul
jl
push
sub
ja
push
cmpsl
mov
jno
add
push
scas
or
adc
addr16
repz
mov
and
rcrl
add
pop
dec
push
push
xor
ja
mov
and
pop
addr16
sahf
xchg
or
cmp
cmp
daa
call
movsl
test
popf
xchg
jmp
mov
sub
stos
or
cltd
inc
xchg
push
mov
pop
adcl
ret
ds
loop
cmpsl
das
ror
cmp
inc
loop
js
or
test
stos
jge
xchg
mov
jl
cs
cmp
pop
in
jbe
inc
in
adc
lods
clc
dec
push
xchg
pop
popf
sahf
sub
xchg
jl
cld
inc
shl
xchg
movsl
mov
mov
push
sbbl
mov
mov
fstps
adc
add
idiv
aam
call
call
sub
inc
adc
hlt
push
mov
stos
lods
push
cmp
add
popl
ret
fmuls
mov
fwait
cmpsb
sbb
ret
dec
in
dec
mov
cmp
inc
es
push
lods
outsl
mov
xchg
mov
pop
fistpl
jp
mov
test
xor
das
xchg
arpl
fldt
adc
cmp
call
dec
ljmp
push
lret
popf
sub
rcr
hlt
jb
enter
fildl
mov
and
inc
loopne
mov
lret
daa
jns
test
jnp
int3
sub
jo
pop
in
fisttpl
mov
cmp
cmp
iret
mov
mov
aas
cmp
mov
std
xlat
or
pop
test
stos
and
jbe
aaa
out
or
cld
leave
cs
lea
inc
dec
popa
jg
sub
icebp
cltd
mov
addb
imul
mov
das
into
sub
mov
or
mov
cmc
incb
xchg
pop
cs
mov
cmp
mov
into
cli
les
in
jns
out
adc
jnp
mov
jl
rcll
push
pop
mov
mov
inc
add
aaa
out
inc
lret
sbb
dec
push
or
fsubs
inc
outsl
addl
sub
nop
rolb
and
outsl
sbb
pop
pushf
mov
cld
push
mov
fidivl
outsl
loope
mov
sub
lahf
sub
fcmovbe
mov
jmp
shlb
daa
pop
pop
pop
iret
into
pop
cmp
jle
and
mov
test
pop
mov
addl
xchg
lea
clc
inc
push
clc
mov
and
cld
imul
sbb
push
inc
bound
lret
cwtl
out
mov
lock
outsl
in
mov
jnp
and
fldt
inc
pop
pop
in
pop
stc
lods
mov
rolb
dec
pushf
xor
jp
and
int
lods
lret
xor
imul
sub
pop
jb
pop
add
rorl
xchg
in
or
fs
bound
push
test
mov
test
push
add
mov
xchg
lods
cmp
sti
pop
das
mov
xchg
cmp
mov
adc
fstpl
and
mov
outsb
in
aam
inc
or
cmove
sbb
fsubrp
add
add
adc
xchg
dec
inc
gs
mov
jne
iret
cmc
mov
and
scas
shll
lcall
mov
add
mov
push
cld
pusha
mov
sub
add
pop
sbb
cld
rcrb
mov
in
ds
clc
in
loopne
mov
clc
fnstsw
andl
ja
push
dec
call
push
and
cmp
or
mov
inc
cmpb
dec
rorl
or
xchg
dec
xchg
pop
out
add
mov
pusha
rcll
xchg
aaa
fwait
xchg
add
sbb
jnp
xchg
lcall
push
xor
xor
mov
pop
ja
pop
mov
cmpsl
adc
int
or
push
dec
nop
fmull
xlat
xor
pop
xor
cmp
jmp
pop
sar
fldenv
sbb
mov
fwait
popf
sbb
rcr
sub
test
int
dec
repz
das
outsb
add
mov
pushf
gs
adc
jb
adc
ds
mov
fiaddl
loop
lret
iret
and
xchg
mov
push
pop
xchg
pop
push
dec
mov
mov
sub
test
adc
je
push
in
repnz
addr16
xor
lcall
xlat
gs
loopne
lds
unpcklps
sbb
das
mov
sub
rclb
out
sub
movsb
loop
idivl
sub
inc
cmp
ja
incl
gs
lods
fisubs
jge
out
mov
gs
imul
aaa
pop
cmpxchg
push
or
in
imul
adc
jae
out
sub
mov
or
popa
inc
in
bound
lock
mov
and
mov
mov
inc
and
sub
inc
shlb
mov
or
push
cmpsl
test
pop
mov
cmpsl
das
cld
test
roll
aad
push
stos
push
xor
inc
inc
fisubrl
or
mul
out
sbb
dec
inc
mov
inc
jle
mov
inc
push
loopne
inc
inc
xorb
jne
mov
js
repz
out
push
shl
std
mov
mov
xchg
lods
popf
ror
xchg
inc
add
sub
cltd
xor
in
mov
jp
stos
inc
gs
push
loope
ret
lea
xor
psrlq
in
shr
jecxz
data16
inc
add
out
mov
leave
out
jg
je
into
lcall
test
out
pop
or
test
leave
sbb
notl
push
mov
inc
jb
jp
push
out
call
ljmp
arpl
cmp
in
loop
out
xor
int
enter
mov
cmp
popf
mov
cs
xor
jl
fisubrl
sub
mov
imul
pop
stos
movl
mov
or
push
push
dec
push
sahf
popa
dec
adc
sub
sbb
icebp
je,pt
mov
cmc
aas
cmpsl
pop
cmp
mov
adc
test
sub
cmpsb
dec
mov
adc
jecxz
jns
cmpsb
sbb
sub
dec
mov
mov
add
push
adcl
push
sub
dec
push
push
rclb
movsl
hlt
and
in
icebp
push
jle
xchg
icebp
jne
push
adcl
imul
push
aas
nop
xor
das
stc
imul
scas
bound
arpl
loop
cwtl
js
xlat
adc
xchg
lods
push
lock
outsl
popf
inc
xor
pop
sub
mov
xlat
scas
inc
fs
jecxz
fldt
fstpl
xlat
cmpsl
xchg
pop
add
jnp
aad
popf
arpl
mov
dec
mov
push
dec
jb
pop
jo
loope
push
ss
imul
loop
xchg
mov
jnp
lcall
or
inc
fldcw
pusha
rolb
adc
out
sub
pop
addb
mov
push
dec
mov
mov
sbb
enter
scas
inc
adc
lods
mov
push
icebp
mov
inc
add
pop
jecxz
leave
jo
pushf
mov
mov
push
aam
nop
sub
into
scas
xchg
cmc
loopne
into
jo
cmpsb
jne
jno
fs
movsb
mov
repz
stc
mov
arpl
pop
cmc
les
mov
mov
dec
loopne
cmp
sbb
outsl
xchg
fcmove
scas
push
test
fisttpll
dec
out
repnz
cmp
ret
shl
stos
shl
or
lret
into
or
pop
ja
add
pop
aas
ss
push
frstor
mov
pop
out
mov
or
mov
dec
cmpsl
fnstcw
test
insb
shl
test
cmc
enter
xchg
cltd
cmp
dec
jmp
lcall
push
xor
imul
and
fwait
xchg
mov
ret
hlt
sarl
adc
mov
ret
mov
das
push
mov
icebp
ret
outsl
mov
mov
pop
xchg
sbb
add
call
repnz
pop
dec
inc
mov
outsb
sbb
mulb
out
out
adc
mov
adc
je
xchg
aas
jecxz
xchg
xchg
into
stc
ss
int
andl
loope
sbb
mov
outsl
cmp
rol
mov
or
sub
mov
test
pop
lcall
fistpll
sub
iret
insl
mov
push
ret
inc
xchg
test
shrb
mov
pop
stos
xchg
ljmp
dec
lret
pop
add
mov
xchg
inc
jbe
push
repz
outsb
jle
mov
pop
add
cmp
cmp
cmp
int3
lds
pop
lcall
loope
sbb
or
fstps
inc
addr16
jnp
add
add
hlt
rcrb
js
sub
clc
stos
mov
pop
int3
je
pop
mov
add
in
and
pop
lock
dec
bound
mov
aad
imul
sbb
pop
mov
mov
test
orb
and
cmpsl
into
and
cs
xorb
cmpsb
into
push
movsb
inc
testb
or
sub
pop
mov
popf
sub
das
inc
pusha
add
inc
add
mov
popf
jns
mov
aad
sbbb
je
repz
rcrb
fisubs
xor
ljmp
in
cmpsb
ljmp
adc
dec
add
dec
sub
ret
inc
decb
gs
cltd
mov
mov
out
inc
loopne
inc
dec
pop
sarb
pop
test
pop
dec
push
pop
jecxz
popf
push
pusha
push
pop
popa
xor
xor
das
in
dec
lret
adc
push
sbb
jp
imul
jmp
ss
or
call
jl
pmaxub
and
sahf
jbe
pop
in
jo
mov
clc
lahf
sbb
jl
test
pop
scas
jno
or
jno
adc
sub
add
xor
mov
out
xchg
bound
into
cltd
xchg
out
outsl
dec
dec
aad
outsl
jle
fs
pushl
loopne
or
ret
push
push
xor
and
sub
rcll
push
xor
push
in
push
dec
push
jge
lahf
sbb
xor
push
outsb
and
in
xchg
xchg
clc
lahf
mul
jns
cmp
adc
test
shr
inc
mov
fxch
stc
in
bound
mov
das
xchg
inc
fidivrs
push
or
sub
iret
arpl
add
and
imul
xor
xor
enter
cmp
mov
jns
fwait
loop
dec
xchg
lea
push
inc
adc
sarl
mov
and
push
and
pop
sbb
push
lods
jo
js
fisubl
mov
push
or
rol
mov
jae
or
mov
lds
jnp
sti
xor
cmpsb
repnz
aad
mov
aad
push
outsb
mov
cmp
sysret
mov
sub
std
xor
jns
and
jg
pop
jl
ret
jmp
loope
lret
mov
faddl
mov
xchg
adc
or
ljmp
sti
xorl
or
lret
jns
add
cmpsb
loop
cmc
jl
enter
cmp
rcrl
xor
and
mov
imul
jp
lahf
xor
cmp
mov
sbb
cwtl
les
lret
pop
add
pusha
into
lahf
gs
lret
pushf
mov
ljmp
stos
ss
mov
mov
sbb
xor
mov
nop
ja
lock
push
and
mov
scas
stc
dec
mov
cld
bound
js
roll
inc
or
mov
jmp
je
cwtl
push
jb
mov
rcrl
jmp
cld
sbb
sbb
lods
loope
xchg
ljmp
cmp
clc
mov
movsb
lret
mov
lcall
inc
popa
decl
lret
adc
xchg
sarb
xor
rcrl
jne
add
sbb
and
cmp
imulb
cmp
pop
ret
and
push
lds
xchg
push
imulb
lret
fs
xchg
push
out
stos
inc
adc
pop
adc
push
or
xchg
icebp
mov
pop
mov
pop
fmull
jb
leave
enter
in
adc
into
stc
nop
mov
stos
add
jbe
mov
adc
in
push
scas
or
int
dec
in
sub
cmc
cwtl
or
xor
push
pop
mov
sub
mov
push
mov
jecxz
or
insl
test
jne
adc
mov
mov
add
orb
fisubl
mov
mov
sub
in
cmp
lret
adc
scas
jmp
test
adcl
test
shll
cmp
adc
fistps
or
xor
mov
int3
lahf
imul
push
stc
aas
xchg
fmulp
shl
jl
cmp
mov
add
popa
rclb
aas
or
mov
mov
xor
rclb
mov
xor
mov
xor
cmpsb
cmpsl
xor
movsb
arpl
daa
mov
sub
movsl
dec
movsl
imul
sub
cld
addr16
jecxz
xchg
daa
push
hlt
filds
jae
dec
icebp
movsl
pop
jbe
ds
dec
fcomps
push
negb
cs
push
jmp
lret
out
push
int3
mov
pop
pop
fsubl
ror
aas
stos
and
outsb
sbb
jle
fwait
leave
call
cmp
add
pop
or
gs
xchg
bound
in
lods
pop
adc
sbb
pusha
xorb
push
cmp
sub
adcb
imul
or
and
test
adc
ja
mov
int3
loopne
jns
fstpt
sbb
addb
xor
fimuls
and
inc
dec
xchg
cwtl
cmpsl
lods
dec
data16
rcr
mov
cld
or
pop
sub
inc
lods
ret
pop
in
jg
mov
jecxz
sahf
cmpxchg
cmp
push
push
rcll
call
mov
push
xchg
or
jl
cmpsb
les
pop
push
imul
sbb
hlt
push
and
cmpb
fstp
icebp
xchg
adc
mov
notl
js
push
fstps
fwait
mov
xor
pop
aam
push
or
mov
mov
in
aaa
pushf
adc
or
push
test
sub
pop
mov
add
pop
dec
pop
mov
sti
push
fisttpl
push
xor
loope
loop
sbb
test
in
orb
stos
sub
pop
jecxz
xor
xor
repnz
adc
push
or
into
fdivp
cmpsl
mov
cmp
adc
xor
fnstcw
outsb
xlat
lret
sbb
sbb
sbbb
sub
pusha
and
push
cmp
xchg
lahf
test
fs
pop
sti
int3
add
lds
mov
dec
jno
shll
cmp
xchg
addr16
enter
sub
daa
cmp
cmp
lock
test
mov
daa
in
dec
jae
stc
mov
lods
data16
inc
xor
ret
dec
push
loopne
jb
test
ss
jae
fistpll
jne
mov
xor
rorb
sbb
stos
daa
xchg
sarl
insl
adc
add
adc
jl
xor
sti
pop
pusha
adc
xor
movsl
cmp
push
mov
stc
es
jb
pop
push
mov
ror
pop
mov
cwtl
ficoms
push
inc
mov
imul
aad
sub
fnstsw
movsb
push
dec
fdiv
xor
stos
cmp
mov
mov
test
test
rcrl
sub
movb
test
addl
add
jp
sub
ficoms
jnp
or
ret
and
rcr
outsb
xchg
or
adc
mov
repnz
xchg
loopne
xchg
dec
mov
pop
imul
sub
in
psubd
pop
iret
int3
test
xor
jg
stc
sub
push
outsb
cmp
lds
cmp
outsb
test
fsubrs
rcll
aad
stos
dec
jae
mov
sbb
les
mov
outsb
lcall
mov
jae
shlb
ja
js
push
xor
pop
mov
sub
std
hlt
mov
push
or
xchg
mov
push
dec
push
and
add
sbb
into
pop
inc
adc
add
mov
add
pop
jbe
cmpsl
adc
ret
imul
incl
rep
dec
sub
mov
jnp
out
push
or
testl
into
push
jae
in
pop
lds
ss
dec
gs
push
push
mov
fs
std
sbb
push
mov
sbb
je
and
dec
movsl
imul
sahf
aam
int
mov
dec
sub
in
aad
mov
sti
lahf
dec
out
lcall
push
add
roll
sub
xor
fmuls
fiaddl
sbbl
pop
push
cmp
in
sbb
xor
xchg
or
icebp
ljmp
ret
inc
in
jae
lahf
hlt
orl
pop
jg
nop
inc
std
push
bound
adc
and
outsb
inc
inc
out
sub
aam
mov
sbb
add
ljmp
jbe
xor
or
mov
inc
sbb
sti
jmp
jnp
cmp
pop
dec
jl
adc
les
je
sub
or
out
in
outsb
fistpll
inc
mov
pop
not
sub
repz
and
shll
cs
jmp
xchg
mull
lret
inc
filds
mov
cwtl
leave
dec
xor
push
lods
and
pop
insl
jae
in
pop
scas
sub
cmp
lods
movsb
or
cmc
and
movsb
mov
jns
ret
adc
out
call
jne
mov
ds
jne
movsl
inc
ret
xor
repnz
pop
inc
fwait
sbb
ret
shll
cli
iret
call
mov
add
cmpsb
iret
imul
add
mov
lret
clc
push
js
jnp
cmp
sti
sub
and
pop
pop
pop
std
ret
cld
inc
daa
mov
imul
nop
sbb
or
xchg
in
cld
hlt
mov
mov
test
movsl
push
cmp
cltd
pusha
cmc
mov
fucom
pusha
arpl
stos
mov
testl
pop
or
xchg
test
daa
aam
xchg
cltd
push
loope
popa
stos
out
add
xchg
push
out
test
xchg
jl
push
fidivrl
shrb
call
or
leave
loop
mov
sbb
inc
rorb
sbb
push
fwait
or
stc
movsb
dec
xchg
movsb
fcoms
inc
push
popa
mov
xorl
and
add
movsl
xchg
hlt
cli
hlt
lods
std
jl
sbb
out
loop
ja
xchg
or
gs
hlt
sar
mov
repz
ret
mov
in
jnp
addr16
sub
aam
icebp
or
leave
jmp
mov
scas
add
aaa
pushf
aaa
inc
dec
cmp
or
push
xlat
stc
daa
dec
jo
xor
fwait
sahf
inc
inc
icebp
or
sbb
gs
imul
pop
insb
jmp
mov
daa
xorb
or
std
pushf
xor
and
insb
andb
test
pop
orl
or
jp
imul
pop
jnp
mov
sbb
in
sbb
in
inc
xchg
jmp
xor
jb
shll
mov
dec
adc
sub
dec
popa
pusha
add
cmc
lret
and
dec
sub
in
shl
cmp
sub
jb
push
bound
mov
xor
mov
cltd
adc
ffreep
faddl
imul
jp
xlat
push
scas
in
stc
cs
xor
adc
mov
jb
add
mov
sub
jne
data16
mov
outsl
pop
add
xchg
mov
iret
xchg
dec
mov
xor
mov
decl
stc
in
xchg
scas
xor
sub
loop
mov
out
pop
dec
pop
add
pop
mov
lret
js
xor
loopne
shl
fistpll
insb
arpl
dec
scas
fimull
cs
js
push
pop
jbe
cmp
jbe
subb
lods
cs
cld
jb
pop
popa
ss
es
les
adc
jmp
mov
shrb
push
jo
sub
repz
jg
xchg
mov
or
push
outsb
ss
xor
pop
mov
dec
xor
scas
not
xor
mov
add
test
lods
es
dec
jp
dec
inc
sqrtps
jb
push
adc
jno
push
cmp
dec
lds
iret
pushf
inc
lea
mov
bound
jbe
adc
adc
outsl
scas
mov
pop
dec
pop
ljmp
add
lret
aas
into
hlt
popf
push
lea
nop
sub
mov
jmp
insl
fwait
adc
fimuls
sarl
sub
lret
and
sti
cmp
in
iret
int
outsl
aaa
ret
lahf
mov
add
mov
enter
int
or
inc
jb
inc
out
mov
pop
cltd
mov
inc
cli
sar
test
sub
fstps
fucompp
ss
xor
into
test
cltd
paddq
loopne
icebp
dec
mov
pop
add
test
daa
cs
pop
dec
repnz
pusha
adc
lods
jo
fs
sbb
mov
movsl
lea
pop
push
out
xchg
or
dec
sub
mov
add
sub
or
icebp
cmp
xlat
cmp
int3
in
xor
sub
mov
fcmove
lahf
inc
jp
pusha
sbb
ret
mov
sub
outsb
mov
sahf
pop
stc
fstl
xchg
ret
pop
popf
mov
clc
cmp
lcall
xchg
pop
jge
pop
cld
aas
or
or
decb
ljmp
push
sti
pop
sti
adc
jb
mov
pop
rclb
push
sbb
aam
sti
lret
in
dec
jp
addl
test
stos
in
addb
jmp
adc
mov
cmpsb
xorl
es
aad
mov
or
mov
imul
jmp
dec
sbb
sbb
sub
cwtl
fbld
cmp
xchg
mov
sbb
xor
fs
inc
jl
and
jp
adc
ret
cmp
xchg
insl
pop
sbb
sub
add
out
ds
mov
lahf
push
mov
cmp
mov
jae
fmuls
loop
or
mov
adcl
dec
stc
jns
aaa
mov
inc
dec
xchg
adcb
dec
ror
inc
rolb
mov
repz
mov
lahf
cmp
sbb
addr16
clc
sarl
or
cld
es
jmp
pop
pusha
jge
insb
repnz
mov
aas
sbb
int3
outsl
popa
add
fmull
movsl
pop
mov
pop
adc
pop
imul
add
mov
out
stc
mov
lret
fcomip
cmp
cltd
daa
and
dec
xchg
test
xor
pop
pop
mov
mov
clc
int
pushf
shl
fadd
pop
out
lcall
out
jo
int
cmp
add
dec
dec
push
inc
mov
daa
add
push
out
icebp
pop
lock
stos
and
dec
xchg
adc
cmpb
jns
xchg
or
push
or
xchg
aas
fucom
pop
dec
jno
sbb
pop
gs
incb
pop
sahf
mov
pop
add
cmp
push
ljmp
add
push
or
and
push
aam
jae
out
cmp
mov
fiaddl
inc
and
scas
xchg
and
inc
dec
cmp
jp
inc
ss
cmp
mov
imulb
movsl
cli
sub
mov
je
insb
decb
test
or
inc
sahf
aaa
pop
int3
iret
jo
adc
mov
out
movsb
enter
loopne
lret
rorl
call
loopne
xor
enter
xchg
pop
jl
push
jmp
cwtl
push
xchg
inc
ret
sub
sub
push
jnp
sub
and
lret
xchg
cmpsb
add
push
xlat
clc
shrl
pusha
loopne
jae
fwait
out
inc
dec
cmpsb
daa
sub
cmpb
xor
out
cmpsl
and
loopne
push
inc
out
js
jnp
sub
fxch
jle
mov
mov
bnd
dec
je
or
pop
xchg
fmul
add
cmp
push
xchg
fisubrs
movsl
jae
and
js
fistps
or
pop
and
mov
addr16
andb
or
inc
jno
lods
sti
sarb
mov
ret
addl
xchg
sbb
jmp
jo
cmc
adc
or
inc
xchg
outsl
jge
inc
clc
cmpsl
adc
lea
test
js
mov
mov
icebp
cli
shll
pop
add
pop
rorb
out
cld
ljmp
pushf
dec
test
jle
inc
push
mov
and
sub
loopne
push
fwait
push
mov
mov
and
mov
mov
mov
or
add
test
repnz
push
xchg
pop
inc
dec
insb
jo
shlb
icebp
stos
hlt
mov
ficompl
mov
cmpsl
mov
or
cmp
sub
adc
cmp
outsb
xorb
cmp
jecxz
cmpsl
cs
pop
cli
mov
div
xchg
out
mov
sub
pop
iret
xchg
test
enter
or
pop
aad
inc
pop
mov
xorb
lahf
int
in
and
or
mov
flds
out
or
fstpl
add
pop
mov
cmove
das
jecxz
and
xor
mov
lret
xor
mov
mov
push
dec
daa
jl
cmp
test
jmp
imul
icebp
gs
aad
xchg
push
sub
addr16
xlat
stc
rclb
xlat
xchg
lcall
mov
sahf
pushf
add
xor
mov
dec
andl
lea
pusha
ret
mov
cld
lds
push
roll
inc
fdiv
js
enter
sbb
sbb
xchg
int3
js
inc
cmc
imul
cmc
add
cmp
or
inc
fwait
mov
shrb
mov
leave
inc
add
fdivrl
mov
loopne
pop
cmpb
call
pusha
mov
xchg
es
jle
and
push
cmp
push
push
lcall
mov
mov
sarb
pop
push
sbb
pushf
dec
sub
cmpsb
pop
and
cltd
cli
sub
sbb
push
fwait
lods
cmp
lret
shll
fmulp
mov
repnz
sti
sahf
popa
mov
ret
int3
ss
repz
shll
inc
in
sbb
cmp
std
notb
dec
and
std
outsl
repnz
fwait
call
ja
adc
adc
adc
cmpsl
xor
mov
loop
daa
lahf
dec
push
movsl
pop
aas
mov
jbe
outsl
pop
cmp
dec
testb
push
mov
fwait
jmp
push
jo
roll
fsubrl
jg
idivl
and
ja
inc
adc
push
nop
leave
mov
sub
fnop
loope
mov
fildl
aad
loop
sbb
mov
cmp
push
cli
mov
push
lret
jmp
jo
sub
and
mov
mov
daa
aad
orb
mov
fs
lds
mov
clc
mov
scas
fcompl
sbb
ja
cmp
lret
sub
cmpsb
pop
pop
mov
clc
stos
inc
cmc
pmaddwd
pop
out
fwait
jbe
fcom
mov
or
bound
icebp
xchg
and
sbb
jge
pusha
and
ja
mov
outsl
lods
ffree
jle
arpl
xchg
sti
cltd
outsl
jne
mov
and
and
xlat
sbb
sbb
xchg
and
je
xor
xchg
xor
daa
push
fisubrs
cltd
jecxz
mov
leave
orw
sbb
adc
imul
xchg
adc
mov
mov
mov
pop
jns
inc
mov
sub
je
push
push
ja
lea
out
adc
movl
pop
popf
scas
pop
dec
cmp
or
mov
ljmp
lret
sub
or
adc
add
xchg
out
mov
insb
inc
lcall
push
push
aaa
mov
mov
mov
xor
outsl
push
and
inc
push
fwait
ljmp
mov
popf
dec
cmpsb
xor
rcrl
cmp
and
fdivs
push
cld
mov
sub
and
xchg
bound
pop
call
jl
in
dec
fimuls
push
jl
repz
loop
xor
cld
in
fmull
cmpsb
cld
xor
cmpsb
jo
mov
cmp
pop
xchg
add
xchg
pop
jl
xchg
inc
pusha
push
je
outsl
mov
xchg
xchg
and
and
ja
xlat
mov
jns
mov
das
jmp
inc
mov
push
jl
pusha
xchg
popa
jnp
bound
cmc
adcl
fwait
into
int
dec
push
in
aam
mov
test
ret
mov
adc
inc
insl
pusha
ljmp
inc
mov
dec
ror
shrl
cmp
and
rorb
jg
insl
push
mov
cmp
out
bound
ds
jmp
fbstp
adc
or
ret
mov
fidivs
jmp
inc
jns
mov
scas
pop
cmp
or
mov
push
pop
pop
shrb
bnd
mov
mov
inc
ret
repz
dec
imul
or
shl
mov
lahf
fiaddl
andb
add
dec
lret
sub
push
fnstcw
fstpl
or
pushf
arpl
add
dec
push
mov
cmc
mov
mov
ficomps
mov
push
cmp
mov
xorb
cmpb
mov
push
es
scas
pop
sti
fucomip
xlat
pop
add
loopne
js
std
jp
mov
mov
xor
adc
sub
icebp
mov
mov
rcrb
xor
pusha
cmp
xchg
in
add
push
lods
pop
rolb
jmp
je
and
mov
cmpl
fidivrl
mov
inc
inc
pop
ret
dec
and
lea
mov
ret
hlt
pop
loopne
mov
inc
test
push
subb
push
sub
jns
jecxz
pop
jle
pop
xchg
fldlg2
in
scas
mov
jle
mov
push
cmp
mov
or
mov
fidivrl
imul
loop,pt
fstpl
aas
xchg
jge
sahf
inc
pop
cmp
pusha
jecxz
xchg
jno
cmp
adc
lods
stc
and
leave
xor
mov
insb
ja
sub
lahf
sub
sub
mov
ljmp
mov
mov
inc
lret
or
cmc
arpl
int
add
pop
jb
xchg
das
xchg
mov
jno
mov
pop
mov
push
aad
xor
xchg
push
aas
ret
add
and
inc
ja
lea
pop
push
add
loopne
pusha
push
scas
leave
mov
inc
and
push
sbb
mov
jbe
in
xchg
loopne
adc
arpl
ja
xlat
mov
mov
xchg
push
inc
je
jle
outsb
push
roll
and
xor
mov
in
and
movsb
aas
aam
lcall
jle
out
mov
mov
cmp
sub
xchg
cmp
dec
pop
dec
lods
ret
dec
xchg
xchg
jnp
dec
aaa
jg
adc
mov
ficompl
in
fsubrs
add
mov
inc
mov
in
addr16
jne
xor
pop
flds
in
loop
pop
mov
ja
fucomi
loop
ss
orb
pop
in
mov
roll
movsl
mov
mov
imul
xchg
popa
xchg
movsl
rep
xchg
or
movl
in
negl
lock
dec
ficomps
mov
fildll
sub
pop
add
jne
jae
stos
mov
negb
repz
fcompl
int
sti
cs
xchg
mov
xchg
xchg
push
xchg
sub
push
ret
rcrl
dec
and
int
cmp
inc
jno
jnp
ja
js
mov
insl
je
cmpsb
sub
outsl
jp
mov
dec
cli
mov
hlt
aam
aad
test
mov
daa
imul
add
stos
pushf
mov
ret
addr16
cmp
or
leave
xor
daa
mov
mov
cmp
das
cmp
rcrl
mov
or
int3
or
mov
cld
sbb
rolb
push
aaa
dec
inc
subl
pop
pop
jbe
mov
jmp
push
xchg
dec
int3
daa
adc
in
out
out
imul
rcrl
xchg
push
pop
stos
cli
shlb
outsb
or
lds
push
xchg
cld
es
fldz
mov
std
aad
pop
jnp
inc
mov
jle
in
loop
jne
into
inc
lret
lods
xchg
cmpsl
test
and
es
outsb
icebp
sbb
out
jns
call
stos
repnz
loopne
jno
pop
insb
les
push
das
add
jge
jae
imul
pop
int
outsb
ret
in
sbb
push
hlt
fidivrl
mov
xor
sub
out
imul
add
insb
push
or
mov
xchg
jno
xchg
inc
pop
js
push
mov
in
jl
cmp
mov
pop
lret
test
inc
push
inc
neg
jae
and
lcall
xchg
lods
dec
jg
push
pop
inc
mov
mov
add
push
adc
out
pop
pop
bnd
ret
jmp
test
loope
ret
aam
mov
jmp
or
fs
and
test
out
cs
roll
in
aad
sbb
loope
cmc
sbb
in
mov
cld
sbb
mov
jo
xor
lods
adc
decl
cltd
mov
jb
cmp
enter
stos
mov
repnz
mov
lahf
loopne
test
fwait
scas
and
mov
cmc
add
jmp
rorb
negb
push
leave
mov
push
rolb
jo
inc
pop
test
icebp
or
push
fsts
push
add
movsl
cmc
imul
or
lea
loop
andl
mov
mov
fcompl
cs
jecxz
pop
insl
mov
adc
adc
pop
dec
inc
mov
inc
les
sbb
mov
push
pop
stc
aad
rorl
je
test
mov
iret
icebp
lds
xchg
arpl
pop
and
mov
push
mov
pop
sbb
mov
xacquire
mov
or
inc
xor
inc
mov
lahf
cmc
out
call
sbb
mov
cmp
inc
mov
and
sbb
imul
add
push
adc
aaa
nop
mov
pop
fs
inc
rcll
mov
xchg
sub
outsb
test
xor
push
cmpsl
push
sti
jmp
ficompl
in
repz
xchg
inc
lock
add
pop
xchg
mov
addr16
orb
jmp
adcl
repnz
xchg
or
out
dec
aad
out
mov
ds
fldt
pop
sbb
jle
sar
fldt
mov
xor
xchg
and
sbb
mov
into
stos
mov
sub
xor
sub
add
adc
pop
adc
ljmp
es
mov
push
arpl
mov
lock
fildll
cmp
loope
packuswb
data16
push
add
dec
daa
mov
dec
sbb
std
in
jae
sbb
shlb
cmp
aas
jns
ljmp
cmc
js
outsl
inc
cmp
in
shlb
testl
shl
adc
push
mulb
pop
stos
data16
sbb
mov
xchg
inc
fimull
data16
mov
mov
outsb
icebp
dec
call
adc
aad
push
pop
jecxz
into
iret
out
xlat
cmp
pop
enter
cld
xchg
xor
cmpsl
subl
scas
out
or
jle
hlt
push
dec
jle
fistpl
loop
lods
andl
sub
daa
push
aas
sbb
cld
fdivrl
pop
andb
test
jne
call
jmp
inc
jno
rorl
cmp
and
sub
xchg
rolb
nop
mov
inc
push
imul
subb
test
xor
mov
insb
fisubs
outsl
mov
xchg
fsubrl
jno
cmp
add
cmpsl
mov
fbstp
adc
adc
lock
imul
ret
sub
or
rorl
fwait
xor
scas
lods
adc
xlat
out
out
mov
inc
push
ss
fdivrl
jg
mov
aaa
mov
call
lret
rol
xchg
adc
cmpsb
or
test
jp
mov
sbb
mov
idivl
adc
jge
popf
popa
jecxz
int
das
scas
mov
std
mov
mov
fisubrl
mov
jns
mov
fisttpl
add
and
pop
jmp
mov
aad
fcomps
xchg
fidivs
lcall
mov
aad
mov
cmp
mov
pop
jle
mov
in
aam
xor
test
jns
mov
int
insl
loopne
fwait
mov
nop
mov
or
ljmp
push
in
cmp
imul
add
loop
subl
ret
inc
mov
subb
les
sub
jne
push
imull
xor
shll
leave
and
xor
xor
cmpsl
or
imul
push
enter
int3
and
icebp
xlat
adc
sub
pop
ss
sub
push
out
gs
lds
aad
pop
fwait
inc
ds
std
test
mov
xor
ja
push
mov
arpl
ficomps
xchg
pop
cmp
ds
mov
push
out
in
icebp
pop
push
add
push
aaa
repnz
addr16
addb
cs
inc
mov
xor
jnp
adc
inc
sub
es
sub
addr16
jbe
push
nopl
loope
fnstenv
xlat
outsl
sahf
les
xor
mov
int3
xor
ss
mov
mov
mov
js
pop
lcall
fldcw
dec
sarl
jno
sub
stos
push
ja
mov
lods
fsubl
stc
pop
or
rolb
or
mov
cmpl
inc
lods
fidivs
pusha
out
jle
and
test
pusha
in
je
cmpsl
jo
pop
mov
cltd
or
addb
rclb
jne
or
iret
lds
icebp
clc
xchg
inc
int3
fmul
insb
mov
pushf
jbe
fs
mov
sub
push
sbb
push
xor
add
mov
stos
push
or
int3
sbbl
xchg
fcmovu
mov
cmp
call
addb
out
enter
in
push
xor
mov
mov
jmp
out
lea
cmc
dec
add
push
or
push
cld
sub
mov
add
lock
push
lods
sbb
sbb
xor
in
sbb
mov
js
aad
fsubrs
fisubrl
or
xchg
dec
and
sub
ss
mov
inc
lds
pop
xchg
mov
test
mov
mov
loope
or
mov
movb
dec
inc
mov
jne
mov
cld
mov
add
les
jnp
test
into
je
and
leave
repz
inc
cwtl
in
out
fmull
push
hlt
aas
addr16
sub
or
push
jae
ss
sbb
loope
scas
loop
push
pop
cmp
adc
mov
setno
push
xchg
inc
dec
lds
xor
jl
push
pusha
xchg
mov
std
pop
inc
add
xor
imulb
nop
lds
int
push
aam
sti
sahf
rcr
scas
outsl
insl
imul
loop
fadd
push
push
or
test
je
xlat
std
mov
mov
dec
sbb
push
cmpsb
cwtl
rcrb
fistpl
sub
mov
insb
fmul
imul
xor
jl
jnp
mov
fucom
xchg
out
lret
arpl
ficoml
push
aam
xchg
dec
add
rcrb
jg
sarb
pop
cwtl
xor
pop
mov
xchg
repnz
addb
mov
xor
adcl
xlat
repnz
mov
test
mov
mov
xchg
not
add
xchg
and
and
xchg
mov
jmp
jle
mov
jmp
rol
sbb
cmpsl
cmp
test
and
outsb
out
sbb
call
jmp
xchg
adc
push
jecxz
aam
push
xchg
dec
xor
stos
xchg
mov
sub
xchg
inc
test
push
in
mov
cmp
xchg
mov
in
mov
popf
int3
pop
jns
je
push
push
jne
push
lods
addr16
pop
fidivrs
outsb
js
fs
insb
xor
xchg
sbb
mov
push
aad
inc
icebp
and
push
or
call
in
and
sub
mov
inc
lcall
std
adc
mov
add
notw
adc
push
orb
stos
fidivl
jg
mov
mov
clc
aam
inc
cltd
or
pop
in
xor
repnz
notl
mov
les
inc
adc
lret
mov
or
js
push
scas
outsb
adc
xchg
ja
shl
xor
dec
stos
outsb
cltd
call
movsl
sti
inc
stos
cld
xchg
std
add
fsubrs
xor
int3
push
pop
inc
mov
lret
sub
imul
or
mov
imul
movsb
addr16
shr
fidivs
std
pop
cmpsl
out
repnz
push
gs
or
aas
push
lret
ffreep
jg
or
imulb
mov
xor
mov
punpcklbw
ret
in
in
bnd
push
jmp
int3
das
xchg
aaa
add
lahf
rclb
sub
imul
stos
loop
mov
testb
pop
fmul
test
repnz
inc
in
lahf
mov
popf
dec
sbb
stos
aam
push
dec
xchg
pop
nop
stos
call
sub
bound
pop
xor
sub
shll
mov
sbb
sbb
xor
scas
and
and
lea
loope
pop
xor
lds
xchg
nop
mov
xchg
push
jo
rol
stos
mov
jle
jecxz
add
movsl
int
jle
out
cmc
rcrb
pop
cli
sbb
fistpll
jl
jne
subb
sub
pop
in
imul
ja
push
pop
int
arpl
rcrl
dec
dec
pop
push
test
xchg
mov
mov
mov
mov
jno
lea
ret
pop
add
stos
les
add
daa
cli
rcr
cmc
or
mov
scas
cmp
pop
adc
and
in
and
nop
dec
mov
cmc
jp
cmp
dec
test
aam
mov
xchg
xor
rcll
mov
dec
notl
push
ljmp
iret
jmp
xor
jle
or
inc
xor
inc
push
mov
pop
xchg
and
shr
mov
pop
cltd
and
out
and
xchg
cli
add
cmp
fdivrs
lods
or
icebp
xchg
lahf
push
fdivr
push
cs
fstps
mov
adc
xorl
jne
inc
lret
in
arpl
pop
add
mov
popa
mov
mov
mov
mov
jbe
movsl
jnp
pop
add
shrb
cmpsl
cmp
cmp
mov
out
popf
jge
mov
addl
jg
cmp
mov
xchg
gs
cltd
aam
fsubs
inc
test
inc
scas
push
out
jmp
ss
imul
mov
and
adc
jge
xchg
add
insl
jecxz
subl
add
dec
lahf
div
dec
pop
xor
sub
mov
or
add
jge
mov
and
xor
or
push
adcb
sub
es
lods
cmp
jbe
repz
or
jmp
jbe
or
iret
mov
out
xor
jnp
pop
cmpsb
lahf
xor
sub
jl
in
push
lea
push
jns
jle,pt
mov
push
scas
aas
mov
decb
sbbb
cld
lods
xor
mov
ja
mov
inc
or
dec
or
sahf
sub
or
scas
cmpsl
mov
test
popf
sbb
ljmp
jbe
pop
rclb
mov
outsl
js
std
test
mov
inc
lock
mulb
leave
mov
push
imul
inc
fs
fxch
ja
stc
pop
mov
jg
test
test
bound
pop
sub
ficoms
cwtl
out
fdivrs
xchg
jmp
pop
xchg
xchg
and
dec
lods
adc
movsl
mov
xchg
loope
cmp
pop
bndldx
dec
mov
sbb
xor
jg
xchg
cmp
jp
rcrb
out
pop
fsubrs
in
cmp
dec
fsubrl
mov
pop
mov
inc
sarb
cld
sub
or
pop
cmpl
xlat
call
adc
addr16
test
mov
push
mov
jecxz
insb
mov
sbb
jp
jmp
leave
mov
fcmovne
fisttpll
fcompl
mov
je
data16
pop
fdivrs
jmp
mov
jb
js
xor
in
notl
stos
loope
pop
pop
out
jle
and
and
mov
sub
mov
loopne
mov
pop
int3
pop
pop
cs
fiadds
push
mov
iret
pop
inc
ljmp
add
sub
cli
cltd
jbe
sbb
push
sub
ret
or
add
or
jmp
jb
decb
xchg
aam
xor
jae
adc
dec
push
dec
int
int
adc
repz
mov
sub
repnz
int3
fidivrs
adc
andb
cs
and
xchg
pop
cmp
lea
dec
lahf
dec
rclb
xchg
ja
adcb
xlat
or
adc
push
stos
in
jg
lcall
inc
or
icebp
fwait
mov
and
sarl
xchg
outsl
sbb
out
shrb
push
ds
or
cmp
add
dec
out
fisttps
sub
or
mov
jmp
jecxz
ds
gs
add
cmp
out
inc
out
inc
loop
cmc
jns
push
lret
lds
cmpsl
pusha
pop
ss
adc
fwait
mov
test
cltd
and
cmp
jl
sub
iret
pop
pop
xchg
lds
or
ret
ret
rcrl
hlt
cmp
nop
pop
mov
mov
cmp
nop
mov
xchg
mov
and
pop
push
insb
lret
lret
cmp
outsl
inc
int
mov
mov
mov
mov
rclb
mov
push
jae
sbb
sub
mov
in
fadd
xor
adc
add
push
sub
das
or
or
popf
pop
repz
lods
lock
xor
inc
aad
pop
push
and
jge
adc
push
outsb
rcr
add
test
movsl
cmc
test
jmp
lock
repnz
push
and
cs
call
or
fcoml
jbe
add
push
lock
cltd
add
aad
mov
push
sbb
clc
aad
xchg
pop
mov
xchg
xor
subl
incl
cmp
lds
fimuls
jl
icebp
or
cli
push
test
and
out
into
mov
push
sahf
fbstp
mov
stos
xor
and
popf
stos
fidivrl
lds
and
mov
adc
shlb
adc
les
sub
pusha
jmp
or
orl
add
sub
adc
mov
xchg
or
or
xor
jns
or
bound
dec
and
inc
dec
je
xor
jne
inc
rorb
lods
out
adc
das
sbb
out
andl
cmpsb
push
imul
lcall
adc
orl
repnz
pop
sbb
imul
pop
push
mov
push
lret
inc
pushf
testb
dec
mov
sbb
inc
scas
sub
cmp
cmpsl
aas
dec
push
lds
test
pop
jecxz
ret
imul
fisubl
mov
adc
xor
rolb
fabs
fcomps
push
mov
test
test
or
adc
addl
add
stos
xor
js
ss
mov
jae
jo
sbbb
fcoms
and
push
push
call
adc
cmc
push
or
cmpsl
cmc
aaa
fdivr
push
add
cld
or
push
stc
cmp
sub
clc
cmp
sbb
mov
push
lock
out
mov
sbb
sub
inc
xor
mov
pop
shrb
add
stc
sti
fwait
jbe
repz
adc
cmp
jo
dec
xor
xadd
adc
adcl
mov
push
mov
fcoml
int3
repz
mov
push
cmp
or
loop
jge
js
sub
lret
inc
xchg
and
inc
outsb
sub
add
dec
out
xchg
les
lea
jge
imul
xchg
push
lcall
xchg
aad
clc
cmp
xor
xchg
mov
out
push
mov
repnz
cs
out
iret
cmp
lea
roll
test
inc
mov
ds
into
lret
rcl
and
mov
dec
fsubl
jno
xchg
outsb
cmp
xchg
add
in
jecxz
push
insl
adc
xchg
call
xor
arpl
mov
scas
sbb
ret
xchg
lods
stc
xchg
js
lds
cmc
mov
test
pusha
mov
outsb
push
fnstsw
cs
out
adc
push
xchg
push
sbbl
inc
sbb
pop
fldl
jge
imulb
xlat
aas
xchg
fmull
dec
aas
je
cli
sub
adc
mov
lcall
out
outsb
mov
in
aam
sbb
inc
imul
push
nop
pop
inc
scas
sub
inc
ds
stos
sub
sbb
add
stos
cmp
and
rcrb
rcl
fs
dec
std
push
dec
cld
or
dec
xchg
out
test
cwtl
outsl
mov
lret
mov
mov
xchg
xor
pop
jmp
call
inc
push
fst
inc
fcomp
or
adc
les
adc
xor
mov
rcll
jnp
ror
jg
mov
pop
or
stos
decb
inc
repz
bound
mov
popf
mov
clc
lods
fcomp
mov
adcb
mov
nop
add
jmp
dec
mov
and
hlt
jge
iret
lcall
and
mov
loop
mov
call
in
mov
jp
cmc
xchg
mov
bound
jg
cltd
ret
test
ror
test
push
pop
xchg
sbb
sub
lea
cmp
repnz
inc
mov
mov
stc
jb
flds
gs
push
shl
sbb
ret
es
xchg
stos
lds
flds
lods
cmpsl
pusha
and
jp
and
in
xor
xor
ljmpw
push
add
sbb
iret
shll
sub
outsl
push
pop
cmc
imul
dec
mov
inc
dec
jne
pop
xlat
jl
and
cs
add
pop
pop
or
mov
int
lods
bound
pop
add
call
icebp
bnd
jns
in
mov
sub
xbegin
fsub
shlb
xchg
in
push
in
shl
mov
lret
sub
inc
arpl
cwtl
pop
jbe
jl
std
push
popa
mov
mov
daa
mov
or
dec
xchg
insl
adc
in
or
add
mov
or
ret
loope
fidivrs
in
mov
mov
add
aas
mov
push
sub
subl
cli
fstpl
pop
or
lock
push
adcb
scas
or
stc
lods
ficoms
movsl
idivb
mov
fisubrs
int
repz
jae
mov
cs
addl
ja
add
mov
loope
inc
sub
xor
ret
in
or
mov
push
pop
adc
sahf
loope
xor
inc
jae
mov
push
mov
lret
mov
pop
cmp
adc
xor
pop
outsl
test
inc
int
xor
jnp
sahf
in
aaa
inc
pop
cmp
jbe
mov
mov
sbb
xchg
ljmp
repz
push
lret
adc
xlat
leave
cmpl
sub
es
push
movsl
inc
jo
pop
pop
out
call
mov
inc
arpl
mov
dec
jns
ljmp
fstpt
mov
stos
xchg
inc
sbb
loop
and
dec
cmpsb
or
sub
das
loopne
xor
inc
pop
test
xor
imul
lock
sbb
mov
xor
pop
jne
arpl
fs
pop
mov
test
jmp
xor
pop
or
sbb
pop
cmp
jge
cltd
fwait
xchg
stos
std
inc
insb
imul
test
mov
aad
mov
bound
pushf
lcall
sahf
or
lock
roll
loope
adc
loope
cli
pop
cmp
xchg
adc
jge
sbb
leave
stc
dec
push
ja
andl
jge
fucomp
pop
insb
repz
adc
out
test
pop
mov
call
adc
inc
ljmp
std
and
jp
push
or
dec
push
xchg
jae
mov
mov
cltd
repz
push
ja
xchg
scas
loopne
xchg
cmp
mov
push
icebp
fadd
inc
loop
xchg
in
sarl
out
mov
ret
sub
cmp
enter
jg
lret
sti
fwait
repz
int
incb
jnp
scas
jns
sub
inc
test
add
das
stos
xchg
jb
imul
fsubl
fs
adc
lock
in
jbe
std
pop
jb
mov
cmp
imull
fchs
pusha
or
mov
push
push
or
loopne
cmpsl
out
mov
add
jnp
insb
int
mov
jnp
js
cmp
or
inc
lds
cmc
andb
cmp
loop
addl
shlb
dec
insl
test
mov
gs
and
inc
jle
mov
push
push
sub
loopne
sbb
jae
fisubs
or
jp
jmp
xchg
inc
cmpsl
sub
dec
cmp
cmp
add
adc
adc
mov
pop
dec
pop
es
movsl
jge
push
testb
pop
lea
inc
iret
or
mov
jle
push
lahf
leave
xor
jnp
and
mov
je
pop
js
mov
push
ret
jl
in
aad
pusha
push
outsl
jp
pop
mov
mov
sbb
push
cmp
dec
push
js
pop
cmp
cs
inc
mov
ja
pop
inc
ljmp
arpl
pop
pop
push
jbe
int
and
mov
mov
cli
ljmp
mov
stc
or
repz
sahf
aam
jns
in
push
lds
sar
sbb
sbb
and
arpl
stos
mov
xchg
inc
xor
add
lret
fisubrs
aaa
andl
or
sbb
dec
mov
sub
negb
in
pop
push
or
pop
mov
or
mov
call
xchg
xor
in
push
mov
mov
iret
aaa
mov
cmp
and
iret
cli
scas
pop
xor
scas
and
sub
enter
mov
imul
push
fimull
dec
xlat
jb
jg
mov
out
es
js
xor
cmpsb
arpl
aad
jg
jo
sbb
and
aam
mov
inc
insb
cmp
mov
jbe
ljmp
jmp
fwait
dec
aas
lds
push
and
aad
cmc
fmull
xchg
pushf
stos
sti
aad
in
xchg
or
divb
in
mov
xchg
add
out
fwait
and
out
loopne
push
loop
stc
mov
repz
and
out
mov
cmp
mov
sub
mov
sub
push
jo
test
xorl
cmp
jp
ret
aam
add
mov
icebp
push
mov
push
pusha
imul
adc
xchg
shlb
lods
mov
lahf
mov
out
outsl
mov
ficoml
jge
cmp
fsubl
add
mov
pop
in
sbb
cmp
fwait
ret
not
or
dec
adc
insb
insb
mov
arpl
or
sub
das
pop
cmpsb
and
fs
orl
int3
mov
dec
pushf
sahf
idivl
mov
inc
cmpsl
adc
or
adc
xchg
inc
adcb
cmc
lret
test
mov
mov
inc
in
out
stc
sbb
jb
icebp
cltd
mov
ror
subb
jecxz
jg
call
cmp
lahf
push
mov
xchg
sti
dec
nop
push
cmpl
ss
xor
pop
push
cltd
nop
lea
and
js
adc
adc
leave
xor
mov
test
adc
out
adc
in
mov
roll
fsubl
fwait
inc
sub
cmc
sbb
mov
out
xchg
clc
add
push
mov
pop
adc
xor
lds
mov
inc
cbtw
ja
jle
sub
out
rclb
or
push
nop
fdivs
ret
stos
cmp
add
cmp
dec
lahf
loope
adc
pushf
or
mulb
xor
mov
jno
mov
icebp
mov
filds
xchg
adc
sub
push
sarb
jmp
jo
sti
inc
cltd
ficoml
dec
fdivs
sbb
lret
jmp
mov
inc
out
xchg
pop
mov
sbb
outsb
xor
icebp
ret
mov
test
mov
es
mov
inc
ja
inc
je
xor
xchg
push
jle
xor
bound
xchg
cmp
test
fisubs
aas
mov
sbb
dec
clc
psubd
int
adc
add
test
push
adc
push
ds
push
dec
aaa
lods
mov
out
mov
imul
push
ret
cmp
mov
cmp
lcall
mov
stos
add
pop
nop
outsl
xor
mov
or
sub
pop
pop
aam
je
push
push
ficoml
sub
insb
push
out
pop
call
test
imul
cli
leave
xchg
lods
loopne
adc
push
sub
mov
add
adc
out
outsl
push
outsl
add
ja
xchg
mov
cld
sbb
gs
push
adc
lahf
sbb
fisttpll
stc
roll
cli
push
cltd
cmc
leave
fs
sub
fsts
mov
loop
add
ljmp
dec
or
sahf
jns
adc
fists
lods
pop
sbb
and
inc
inc
xchg
xchg
xlat
cmp
scas
out
mov
lret
insl
or
in
adc
jg
sbb
repnz
dec
in
dec
mov
sahf
loopne
int3
nop
mov
jae
fwait
and
inc
push
xchg
sahf
sahf
xchg
in
lods
imul
pop
lret
mov
mov
xor
mov
bsr
outsb
test
mov
imul
into
adc
fwait
aad
add
cmp
inc
adc
sbb
data16
push
inc
push
pop
inc
sbb
jbe
adc
cmp
add
sub
aad
std
outsl
add
dec
jne
push
movsl
mov
mov
imul
shlb
jmp
es
xchg
sbb
xor
mov
mov
push
cmc
sub
pop
std
sbb
ja
clc
mov
dec
jae
ljmp
xchg
pop
push
dec
xchg
fwait
jp
iret
andl
subb
test
jne
add
jne
cmp
add
push
or
push
sub
jmp
inc
test
xchg
divl
hlt
inc
pop
or
movsb
out
jmp
sahf
push
dec
stc
xchg
loop
or
in
mov
sub
out
je
ret
mov
ljmp
cmp
lcall
icebp
lods
into
jg
xor
cltd
mov
or
xchg
sbb
push
inc
xchg
push
out
cmp
mov
insl
out
jb
pop
inc
jmp
sub
dec
fisttps
xchg
and
xor
icebp
imul
nop
and
mov
rclb
in
add
jb
movsb
movsb
jmp
adc
fdivp
push
sbb
mov
stos
pop
pop
ret
pop
fwait
test
xlat
xchg
inc
lds
dec
jno
shld
dec
push
mov
push
jo
push
pop
mov
gs
sbb
mov
jb
sub
icebp
dec
call
jo
jae
adc
xlat
add
mov
jecxz
dec
push
lods
int
shll
test
outsb
out
outsb
adc
loopne
scas
loopne
and
jae
inc
aaa
mov
dec
enter
push
cmpsl
mov
imul
aad
fnstsw
xchg
movsl
dec
dec
insb
add
push
movsl
jae
ret
je
pop
mov
mov
cmpl
gs
cmc
and
cmp
jmp
inc
pusha
imul
mov
addb
aas
cmp
loopne
pop
movsl
fcomps
shrb
cmp
cltd
lahf
in
fistl
stc
and
call
jge
ja
enter
divl
jno
sub
dec
lahf
mov
fisttps
aam
cmp
mov
int3
int3
or
call
mov
adc
sub
pop
lret
inc
ja
mov
xor
and
popf
leave
or
push
adc
push
jle
je
out
dec
int3
insl
fldenv
imul
std
popf
and
ja
cmc
xchg
mov
pop
sarl
aam
ret
mov
nop
xor
pop
dec
out
popa
ficomps
mov
leave
ja
xchg
stos
push
mov
or
dec
aam
push
leave
adc
shlw
xchg
mov
mov
cmpsb
sbb
jl
mov
in
mov
shll
out
xchg
xchg
adcl
jbe
scas
addr16
cmp
cmp
mov
mov
xchg
pop
lcall
push
cmp
push
fldcw
mov
aam
mov
int
hlt
jns
jmp
push
fstps
out
mov
pop
clc
sub
jo
inc
pop
jo
lods
bound
add
add
jl
lock
add
lock
jno
sbb
ds
pop
and
xor
add
out
jle
push
sti
fldl
push
cmp
jp
mov
in
sbb
jecxz
or
loope
in
pushf
popa
adc
cmp
or
inc
cli
pop
repz
scas
pop
or
call
pop
fldcw
xchg
inc
sbb
sbb
data16
dec
mov
xchg
push
inc
and
cli
imul
jne
mov
roll
xor
add
jmpw
loope
jno
test
dec
out
mov
in
adc
test
xor
insb
idiv
inc
paddq
and
mov
enter
outsb
xchg
inc
dec
mov
push
jl
push
add
inc
jecxz
dec
mov
adc
les
mov
stos
test
add
or
add
mov
push
inc
arpl
inc
scas
mov
cmp
and
cli
sub
push
mov
lea
cwtl
out
add
in
pop
jb
out
repnz
sahf
stos
ret
sub
aas
fcmove
dec
push
insb
notl
mov
jge
xor
insl
iret
adc
popa
mov
loope
mov
popf
inc
push
stc
cmp
pop
lea
int
cmpsb
aad
or
xchg
mov
mov
jns
dec
lcall
movb
in
sbb
push
jge
outsb
sub
xchg
sti
in
das
xchg
mov
fdiv
shlb
add
xor
cmp
orl
mov
dec
movsb
scas
in
imul
repz
sub
lea
xchg
pop
mov
cli
jmp
jmp
fisttpl
push
icebp
daa
movsb
sahf
adc
push
push
stos
nop
out
loope
in
mov
pop
loop
jne
pop
sub
jns
cmp
xchg
and
xchg
cmp
mov
lock
fisttps
mov
mov
and
xchg
ljmp
call
add
push
and
into
fwait
pop
xchg
sub
std
dec
pop
aas
cmpsl
xor
cmc
loope
out
popa
cmp
jne
mov
cld
iret
push
lea
pushf
and
xchg
push
int3
daa
mov
or
lods
mov
xor
jmp
loope
inc
enter
push
dec
lret
add
push
outsb
and
push
cmp
xchg
daa
out
or
jmp
xchg
inc
dec
ret
or
mov
mov
sahf
repnz
stc
adc
push
add
in
inc
adc
and
sub
jae
mov
dec
mov
mov
or
mov
loopne
xchg
sub
enter
fbstp
call
outsl
lea
mov
adc
and
outsb
insl
pushf
in
sbb
lret
call
jne
mov
icebp
xchg
add
sub
out
into
inc
int3
and
scas
data16
clc
mov
addr16
push
xchg
jp
jp
or
mov
xchg
icebp
mov
test
pusha
addr16
mov
aam
leave
mov
in
movsb
mov
sar
jl
push
mov
insb
mov
push
fisubrs
inc
push
push
lock
cmp
mov
dec
push
xchg
mov
jb
icebp
pop
jo
pop
stos
arpl
xlat
rdmsr
jae
xchg
push
fsubs
mov
ds
pop
call
mov
inc
push
bound
hlt
cs
pusha
scas
jl
orl
shrb
push
in
pop
mov
shlb
or
fucom
push
pop
loop
clc
sbb
mov
scas
iret
in
push
lea
sar
das
out
fidivl
sub
fs
xchg
scas
dec
ljmp
push
pop
das
xchg
pop
outsb
lds
daa
or
add
sahf
int
stos
sbb
xchg
fstpt
and
mov
or
xor
add
hlt
outsb
test
subb
pop
xchg
pop
int3
pop
imul
xor
cmp
mov
call
pop
mov
lods
add
pop
lods
mov
xchg
push
and
inc
add
movsb
outsb
push
jge
rol
imul
cmp
je
or
mov
jp
inc
sbb
sti
das
push
lock
aas
aas
or
jne
arpl
into
pop
mov
pop
daa
mov
jp
lret
cmp
les
or
cmc
xchg
lret
mov
aas
mov
hlt
repz
adc
mov
dec
imul
push
add
push
dec
cmpsl
pop
clc
push
dec
loop
stos
les
in
icebp
xor
ret
xchg
jbe
in
aaa
int3
cmp
rcl
lret
sbb
int3
jmp
mov
and
pusha
cmp
shll
pop
inc
ror
push
sti
add
jbe
xchg
sub
clc
xchg
mov
es
sub
ss
into
in
je
adcb
sub
push
sbb
mov
adc
sbb
test
out
cmp
out
jb
jg
out
dec
outsl
or
pop
push
sub
sbb
add
add
sub
jnp
push
jo
clc
and
in
scas
mov
lahf
add
mov
fdivrl
xor
mov
add
jg
shl
stc
lret
add
push
shrl
aad
jo
sbb
shll
idivb
lret
mov
notl
out
es
popf
jb
out
pop
scas
sub
adc
fdivs
int
xchg
iret
outsl
jecxz
add
nop
xchg
push
adc
inc
sub
fldcw
and
loop
enter
test
and
scas
adc
mov
inc
inc
inc
inc
cmp
inc
jp
sbb
std
das
xlat
in
ss
push
sbb
cmp
or
mov
jmp
es
push
xchg
pop
mov
nop
xchg
in
outsb
ds
add
test
dec
fadd
pop
popf
fucomip
add
xor
sar
mov
shr
mov
inc
in
sub
mov
push
adc
xchg
out
sbb
sarl
add
rol
xchg
into
scas
mov
xchg
mov
push
test
and
jp
lock
into
cmpl
cmpsb
xor
cwtl
ja
aaa
xchg
and
cwtl
int
add
jns
xor
push
add
mov
test
call
and
cltd
out
xchg
mov
mov
mov
mov
ds
lret
fs
push
setns
roll
mov
ret
xor
mov
mov
jge
mov
jle
push
xchg
mov
adcl
cmp
inc
xor
out
push
push
mov
loope
out
or
mov
mov
push
jo
pushf
push
mov
push
sbb
dec
add
lods
sub
pop
dec
pop
sbb
push
cmp
test
ret
fldl
mov
pop
mov
add
mov
in
into
call
idivb
in
push
xchg
and
sbb
xchg
ds
js
sub
xchg
xor
shrl
insb
cmc
aam
sub
jmp
xor
pusha
repz
push
mov
andb
mov
mov
loope
pop
lods
or
testb
mov
add
fbld
adcl
fcos
xchg
mov
sbb
popa
and
and
add
fisttpl
in
sub
insb
sbb
fs
xchg
hlt
mov
xor
push
cmp
out
je
int
add
imul
jo
jb
add
daa
sub
and
iret
insl
push
mov
jmp
inc
mov
add
fisubrs
mov
mov
dec
lahf
sar
jmp
sub
mov
cmpsl
jne
push
add
divl
jbe
imul
jmp
push
outsl
xchg
inc
fwait
and
movsb
loope
jmp
push
sbb
mov
fnstcw
xor
dec
enter
loop
shrb
xchg
bound
mov
rcrb
adc
or
insb
jo
insl
sbb
in
mov
jg
lea
push
or
sub
or
fiaddl
sub
lahf
movsl
fwait
outsb
and
or
stos
adc
loopne
sarb
cmpsl
push
sbb
add
cmp
jne
dec
push
inc
dec
push
cli
mov
xor
dec
pop
in
ljmp
mov
or
inc
mov
sub
mov
outsb
inc
mov
push
and
add
and
xchg
xor
and
testb
int3
push
push
mov
adc
dec
mov
in
sbb
punpckhdq
mulb
xchg
lock
out
hlt
fisubs
inc
pop
hlt
inc
mov
test
xchg
mov
lods
out
fdiv
cld
dec
push
movsb
push
cmp
xchg
test
sbb
orb
imul
mov
add
dec
jg
test
lcall
in
stc
xchg
sub
je
push
or
icebp
lcall
dec
sbb
jo
cmp
sarl
dec
sub
inc
pop
inc
add
imul
lods
cmpsb
movsl
jns
rorb
outsb
lds
popa
jnp
and
pusha
pop
popa
cmp
xor
jge
xchg
sbb
pushf
sub
and
mov
mov
fdivp
pop
sahf
pop
inc
and
cwtl
rcl
enter
xchg
out
dec
sub
inc
insl
fs
xchg
push
lea
les
es
inc
lods
test
decb
loop
add
inc
cmp
mov
mov
or
jge
pop
gs
shll
lods
xor
pop
gs
mov
add
scas
xchg
dec
and
xchg
pop
sub
loopne
mov
repz
adc
mov
popa
jge
xchg
out
xchg
mov
lea
xor
mul
mov
repz
es
xor
lahf
mov
bound
fstpl
xchg
mov
push
jmp
xchg
test
cwtl
incl
add
pop
fmuls
sbb
loopne
xor
int3
adc
add
sbb
in
lds
cs
push
push
out
sahf
lret
clc
shlb
pop
outsl
fs
rol
in
mull
push
jmp
pop
push
mov
jne
int
dec
inc
and
mov
insl
jbe
jbe
dec
dec
sahf
or
and
cmc
out
xchg
sub
mov
scas
push
sti
pop
adc
jmp
fists
cli
in
aas
pop
xor
cmpsb
jge
outsl
fs
push
lcall
adc
and
mov
push
cmp
cld
push
and
repz
sub
sbb
ja
das
cmp
sbb
push
push
cmp
sarl
insb
and
sbb
push
gs
mov
data16
sbb
les
pushf
add
pop
out
daa
pusha
and
int
push
pop
ret
fs
jb
ja
add
and
mov
push
push
mov
repnz
out
loop
sub
mov
pushf
fwait
push
pop
mov
out
gs
pushl
cmc
int3
sbb
insb
and
push
out
inc
daa
int
or
iret
stos
dec
add
pushf
dec
dec
mov
scas
in
loope
mov
dec
push
int
imul
lret
xchg
sbb
fisttpl
loope
inc
mov
adc
mov
popa
in
jb
popa
mull
in
mov
push
push
inc
sub
dec
insl
fists
aas
test
cmp
mov
pop
inc
stc
cwtl
mov
push
je
movsl
jmp
jmp
mov
in
pop
or
shrd
mov
or
das
push
or
inc
ja
push
xchg
dec
ret
sub
stc
cmpsl
jmp
cmp
jp
add
jb,pt
push
lods
mov
jecxz
mov
leave
sbb
jecxz
xchg
inc
dec
je
arpl
notb
cld
in
test
sub
and
push
cmc
filds
inc
xchg
cmp
aas
jecxz
hlt
nop
push
cltd
leave
fisubrl
gs
inc
sbb
add
aad
push
cld
fucomip
js
xchg
mov
lea
sahf
sbb
mov
movsb
ja,pn
out
adcb
push
scas
pusha
jge
xchg
lds
lahf
data16
cmp
push
xchg
out
or
pop
lock
nop
cmpsb
dec
pop
addr16
mov
sahf
jns
add
add
in
pop
fldl
dec
mov
stos
cmc
adc
int
loope
int3
sbb
jnp
jnp
sahf
or
mov
add
inc
das
xor
jno
int3
inc
and
push
or
push
sub
pop
idivl
into
pop
push
cmp
push
aas
xor
sbb
mov
stos
push
popf
jl
inc
dec
inc
mov
loope
or
imul
adc
jnp
fcoms
mov
jbe
dec
enter
mov
mov
cmp
xor
andb
and
push
gs
mov
js
add
idivb
fwait
jno
mulb
int3
xchg
jg
inc
push
jp
movsb
mov
lock
stc
sub
outsb
dec
xor
outsb
iret
sbb
pop
into
push
out
cs
and
shll
movsb
out
int
aaa
and
in
or
jmp
mov
mov
and
popf
pop
ror
sub
add
xor
xchg
rol
mov
cmc
imul
mov
and
aam
rcrl
adc
add
mov
inc
fcmovnu
mov
mov
lret
cmpsb
jae,pn
test
mov
movsl
pop
mov
in
addr16
test
mov
inc
ficoml
push
test
popf
stos
movsbl
out
and
inc
add
xchg
xor
imul
xchg
sub
mov
sub
aad
xlat
xor
mov
mov
pop
xor
xlat
fwait
or
mov
test
pop
jecxz
or
dec
icebp
sbb
js,pn
jg
clc
rcrl
iret
imul
cs
andl
lods
mov
pushl
jge
mov
test
testl
pop
push
pushf
in
out
sbb
sar
aad
xchg
lods
sub
pop
mov
lahf
jmp
pop
push
subl
shlb
xor
cmp
dec
stos
fisubs
mov
or
dec
je
fnstenv
ret
jnp
out
sub
aaa
jp
inc
subl
iret
cmp
jp
push
outsl
loop
jo
jecxz
inc
mov
adc
cmp
popa
and
call
dec
mov
nop
outsb
fldenv
mov
lahf
bound
fisubrl
or
iret
stos
fwait
imul
nop
xor
cmp
mov
rcrl
ja
fbstp
movsl
cld
pop
sub
mov
stos
pop
fistpll
into
insl
rorb
and
cmp
rcll
lret
lods
or
dec
xor
inc
sbb
and
xlat
pusha
rorb
fwait
mov
daa
dec
test
xchg
jl
in
sbbb
xor
movsl
jae
sub
aas
hlt
mov
fidivs
mov
sahf
adc
icebp
jmp
clc
cwtl
mov
pop
or
lret
ret
and
aam
jnp
xor
inc
jmp
push
mov
in
pop
or
lods
fistl
mull
pop
and
sarl
xchg
ss
sbb
ret
ja
push
xchg
dec
pop
gs
negb
push
popa
pop
incl
xchg
test
mov
pop
fxch
push
mov
and
dec
pop
das
sti
arpl
pop
dec
insb
jne
stos
adc
imul
jb
pop
stc
aas
xchg
and
nop
popa
lods
out
mov
shlb
xchg
and
mov
adc
xor
mov
jnp
push
add
imul
push
cmp
repnz
mov
xchg
dec
push
adc
shlb
jo
cmp
clc
mov
sti
adc
std
sbb
mov
push
in
int
ret
nop
or
pop
icebp
lahf
lret
popa
ficompl
pop
ss
fadds
dec
retw
sbb
jg
mov
xor
fisttps
xor
leave
mov
add
jg
adc
push
mov
lahf
lret
jp
nop
and
rclb
lfs
mov
xchg
push
iret
fsubrs
or
adcl
mov
stos
lock
loope
push
lock
scas
cmpsl
test
int
mov
jbe
mov
add
pusha
jp
sbb
cmp
push
sahf
aaa
dec
push
fs
dec
xlat
std
adc
jbe
inc
mov
inc
xchg
mov
pop
ja
in
loop
mov
aam
loope
bound
aas
ret
mov
xor
push
mov
xchg
lret
loope
test
push
cwtl
push
dec
das
shlb
jbe
psadbw
sbb
mov
popf
pop
sub
int
pop
out
jno
lahf
mov
cmc
jns
push
repnz
test
stos
adc
roll
mov
fwait
mov
fnstcw
and
push
inc
pop
cmp
push
or
sbb
jo
lret
mov
hlt
fnstcw
filds
insb
cli
and
adc
int3
pop
add
mov
movl
or
or
out
adc
pop
push
xlat
add
shll
stos
leave
mov
loopne
mull
lds
mov
aas
mov
mov
sbb
fistpl
adc
scas
leave
dec
idivl
xlat
pop
daa
and
jne
mov
jno
decb
cmp
push
dec
aas
mov
movsl
and
jnp
mov
aad
lret
xchg
sarb
cmp
jns
xchg
fildl
outsl
xchg
and
sub
incl
pop
enter
mov
dec
pop
lret
mov
push
adc
loopne
enter
xchg
incb
das
daa
jl
mov
jge
in
dec
push
ds
rorl
lea
mov
lahf
shrb
iret
add
sti
cmp
push
lret
mov
movl
and
lcall
shrb
lds
xchg
mov
add
pop
mov
daa
test
arpl
test
lahf
push
push
std
fsubs
add
hlt
adc
dec
nop
negb
addb
outsl
in
or
sbb
repnz
shrb
insb
inc
push
hlt
mov
fdivs
ret
stos
cs
out
bound
dec
ja
rcll
push
jecxz
insl
jnp
rorb
out
mov
adc
flds
fnstsw
push
jge
adc
ret
lds
pop
mov
push
dec
ret
insb
cmp
xchg
mov
and
inc
inc
mov
jb
fimuls
or
ja
or
mov
cmp
popf
adc
jp,pt
out
inc
movsb
push
daa
sub
test
test
or
cmp
imul
in
aad
scas
mov
out
dec
fwait
or
cmp
inc
inc
pusha
jb
mov
enter
icebp
and
mov
add
push
mov
scas
cmp
addb
xchg
or
mov
pop
dec
dec
aas
dec
js
cmc
cmp
or
outsl
and
or
mov
inc
rorb
pop
pop
popf
clc
loopne
pop
pop
icebp
bound
mov
pop
jmp
dec
das
add
mov
movsl
outsl
aad
dec
dec
lcall
xor
sbb
inc
lock
nop
fsubrs
cmc
inc
adc
in
jmp
jge
cmpsb
xor
in
in
sub
dec
insl
xor
and
lods
push
adc
jge
aad
imul
jbe
cmp
lea
fdivs
imul
xlat
lret
out
scas
lcall
push
jle
cmp
pop
sbbb
decb
test
or
pop
mov
mov
cmpsb
je
dec
mov
addr16
jae
xchg
cmp
jl
adc
and
add
push
out
hlt
cmpsl
add
inc
pop
out
sbb
mov
push
or
push
xchg
loop
mov
dec
jle
xchg
sbb
cmp
popl
loop
imul
or
xchg
mov
rcl
sbb
adc
mov
sbb
ss
xorl
xchg
leave
xchg
add
sub
cmp
ret
dec
mov
test
mov
xchg
movsb
inc
fdiv
mov
scas
xchg
imul
out
mov
repz
out
jecxz
cmp
mov
adc
jecxz
mov
inc
repnz
sub
fcoml
cmp
cmp
sbb
mov
out
rclb
mov
add
pushf
add
xchg
int3
and
stos
ret
cs
sbb
adc
jns
mov
test
xor
adcl
testl
cli
ljmp
jge
or
sub
ja
push
aam
pop
loopne
xor
fnstsw
pop
shrl
into
cs
out
xorb
psrad
mov
push
jo
mov
movsb
cmp
jle
jecxz
mov
push
cmpsl
out
xchg
out
jle
int3
add
fcoml
pop
psrlw
jmp
outsl
inc
mov
aam
fiadds
mov
xchg
sbb
cld
push
lret
sub
loope
xchg
inc
fidivrl
and
jecxz
rolb
shrl
and
pop
aaa
je
and
xor
aas
cs
insl
sbb
arpl
jmp
int
fiaddl
out
sbb
pop
push
ret
mov
sub
jno
jl
inc
aaa
mov
jecxz
push
mov
or
mov
pop
shr
scas
xchg
sub
adc
aam
pop
sbb
pop
cwtl
and
leave
pop
aas
das
jmp
lock
jmp
jne
mov
andl
sub
push
lock
lods
sbb
cmp
nop
imulb
popa
or
xchg
push
dec
xor
movsb
jnp
cmp
and
push
mov
scas
xlat
orl
mov
xchg
mov
bound
jne
dec
out
xor
add
cwtl
pop
nopl
fnstcw
push
es
in
mov
out
test
add
and
mov
les
inc
pop
sub
cmpsb
cmp
adc
pop
ret
sub
das
bound
cmp
sahf
sub
and
push
popa
mov
gs
aaa
sbb
add
xlat
xor
in
pop
jg
fs
inc
lds
aas
jge
clc
mov
jmp
out
add
stos
add
and
push
adc
add
adc
mov
ret
and
pop
dec
dec
add
mov
pop
adc
add
bound
fwait
rcl
in
pop
mov
dec
xchg
xchg
xchg
add
sbbl
and
jmp
nop
push
cltd
or
test
mov
xor
scas
dec
cmp
shl
iret
fs
fucomi
stos
pop
loopne
idivl
and
std
and
jo
xor
insl
jae
stos
inc
aaa
add
adc
popf
lret
add
ljmp
lret
sub
mov
test
loopne
push
dec
adc
lret
sbb
pop
test
loope
dec
nop
into
jge
mov
nop
push
cmpsb
xchg
pushl
jno
pop
adc
lret
ret
out
inc
cld
addb
sub
std
mov
mov
cmp
dec
xchg
mov
sub
out
sbb
push
mov
mov
inc
js
jle
lcall
insl
pop
inc
xor
push
xchg
mov
lahf
out
movsl
scas
mov
nop
mov
insb
test
push
mov
xchg
lds
cltd
daa
es
or
xor
jge
shlb
ljmp
cld
push
out
jge
mov
xlat
shlb
inc
xor
cmp
data16
adcb
push
mov
ret
gs
inc
iret
pop
pop
xchg
icebp
inc
mov
sub
in
xchg
dec
jl
pushf
mov
lahf
adc
lret
push
xchg
push
mov
pop
loope
test
rclb
out
cwtl
data16
jo
jg
xor
into
cli
jge
into
adc
lock
mov
mov
in
sub
shrl
hlt
hlt
xchg
xrelease
pop
icebp
pop
leave
leave
dec
mov
movsl
shlb
mov
cmpsb
mov
fwait
popf
push
pop
dec
sub
lods
jb
clc
std
bound
add
jmp
pop
mov
jmp
xchg
clc
into
xor
add
dec
iret
sbbl
adc
fstpt
daa
mov
sub
cmp
xchg
or
sbb
and
adc
mov
mov
xchg
mov
xchg
addr16
push
mov
or
push
dec
sub
sahf
xor
dec
mov
mov
mov
cmp
mov
adc
adc
enter
adc
or
pop
int
mov
stc
sub
in
cltd
mov
mov
sub
push
repz
shrl
hlt
sarb
les
jo
jnp
in
xor
popa
das
je
cltd
jmp
ud0
adc
dec
xor
and
sub
js
insl
data16
int
insl
fcmovnbe
add
xchg
xor
cltd
dec
xchg
ret
mov
xor
fsts
stos
push
sarl
in
outsl
sbb
ss
jnp
inc
sub
cmp
cmpsl
jecxz
xor
mov
push
pop
je
mov
xlat
mov
pushf
push
inc
adc
push
pop
mov
and
shll
std
stos
enter
mov
jecxz
sub
cltd
mov
in
pop
mov
fsubl
add
lcall
push
mov
mov
ljmp
cltd
clc
stos
push
nop
rorb
loop
rolb
add
in
mov
fiaddl
sahf
repz
fidivrs
and
mov
jge
push
jp
sbb
lret
or
subb
imul
mov
ret
or
adc
fdivrs
mov
mov
and
push
jns
mov
mov
jge
mov
out
out
loopne
sbb
lcall
pop
stos
sbb
mov
fisubs
movb
push
loopne
js
mov
jno
pop
and
jbe
sbb
jnp
lahf
sbb
lds
fcoml
mov
push
mov
xchg
xor
sahf
mov
push
loopne
and
jl
and
mov
mov
jae
push
pop
sub
and
call
jmp
sarb
push
or
lahf
insl
and
dec
clc
or
fdiv
cmp
push
ret
push
add
mov
pop
jo
pop
jmp
out
sti
and
sahf
mov
sar
cwtl
xor
std
jno
ja
push
pop
pushf
jmp
pop
jae
adc
mov
xorl
xor
push
jnp
sbb
sbb
fisttps
jmp
jnp
sub
jmp
dec
mov
lret
out
adc
sbb
mov
jge
push
mov
inc
jns
xchg
ret
jae
inc
scas
js
jbe
in
sti
cmpsb
jae
pop
in
nop
dec
cmp
cmp
int3
sahf
mov
pop
popl
lods
mov
and
add
sbb
or
adc
shr
or
dec
stos
std
adc
inc
pop
fldl
push
xor
cld
popa
gs
xchg
inc
dec
stc
test
fdivrs
dec
jo
hlt
insb
test
pop
xchg
push
movsb
aas
int
adc
sub
inc
xchg
inc
orb
das
jecxz
inc
loop
hlt
pushf
sub
add
mov
push
out
fisttpll
sbb
add
shll
pop
pop
jno
roll
inc
cmp
lcall
mov
adc
inc
add
xchg
mov
cs
call
sub
out
cwtl
or
aas
add
ds
adc
lret
inc
mov
ja
iret
pop
call
inc
push
stos
dec
repnz
or
xor
in
xlat
dec
cwtl
fdivs
dec
xor
inc
lods
in
loop
int3
jne
sbbl
in
pop
jbe
stos
inc
ret
jne
sbb
ja
cmp
data16
pop
fisubs
mov
test
rorb
out
fwait
sub
mov
out
sbb
movsb
xchg
es
xor
add
xor
inc
add
stos
insb
call
dec
add
scas
roll
mov
adc
sahf
jne
jl,pn
bndldx
pusha
rol
jle
ljmp
sub
mov
fdivl
fwait
xchg
jl
push
fwait
mov
dec
lret
sub
pushf
push
add
mov
cld
mov
pop
in
mov
rclb
jno
mov
or
insb
pop
and
push
xor
imul
insb
xor
shlb
jmp
fistpll
mov
and
or
nop
and
xor
sub
push
enter
cmpsl
test
sub
mov
sbb
mov
and
cli
sub
push
sub
testl
idiv
in
adc
push
push
daa
movsl
cmpsb
jnp
pusha
out
dec
icebp
rolb
xchg
mov
and
mov
fisttps
insb
adc
mov
rorl
cmp
insb
xor
lret
testb
add
ljmp
adc
cmp
or
popf
and
jg
inc
add
lret
inc
dec
sbb
bnd
mov
sbb
mov
push
jne
push
lahf
xchg
jne
addl
jecxz
xchg
lea
dec
inc
cld
shlb
lock
in
call
sbbb
sub
jle
popa
stos
fs
pop
repz
jns
inc
enter
sbb
mov
jmp
inc
dec
mov
in
imul
enter
and
sub
inc
fisubl
aaa
cmp
xchg
imul
mov
adc
enter
loop
mov
jmp
je
insl
jns
sbb
cmp
cmc
sahf
add
arpl
xchg
mov
add
ds
lret
daa
jnp
pop
jae
movsl
mov
lret
push
and
jo
add
jge
int
rcr
or
push
in
pushf
xor
mov
xor
cli
fwait
data16
call
adc
lcall
add
adc
fbstp
repnz
or
xor
out
jnp
mov
cmp
test
xor
push
lds
loop
in
test
in
mov
es
je
leave
push
out
xor
fimull
add
sub
pop
fcom
sbbb
add
pop
adc
cmp
jb
fwait
xchg
fwait
lret
sub
fs
xchg
adc
or
clc
outsl
pop
pop
push
cltd
lahf
push
jbe
in
mov
leave
mov
outsl
cs
pop
fs
sub
add
stos
fidivl
adcl
imul
push
mov
add
push
test
add
mov
push
stos
fwait
push
inc
mov
mov
push
xchg
shrl
mov
mov
gs
mov
sbb
ret
lahf
xchg
cwtl
xchg
sub
mov
maskmovq
imull
mov
pop
pushf
xor
cs
in
push
sbbl
adc
orb
shl
cli
es
outsl
push
addr16
ds
and
and
fwait
jg
and
dec
lods
jg
xor
enter
cmc
mov
cmp
pop
xor
mov
mov
nop
mov
jg
sub
mov
mov
jl
mov
sub
mov
es
cmpsl
lock
mov
dec
add
fisttpl
pop
xchg
loopne
inc
hlt
add
repnz
fwait
push
imul
mov
push
push
mov
lods
in
loop
sbbb
inc
dec
clc
pop
mov
push
jle
out
je
mov
ja
pop
gs
xor
test
sub
and
dec
stos
lahf
lret
and
dec
xchg
repz
mov
cmc
sbb
lods
and
mov
jecxz
out
and
jp
xchg
xor
popa
sub
push
mov
jo
xor
nop
je
in
sbb
je
push
sub
imul
sarl
cmp
mov
adc
cmp
leave
or
lahf
adc
pcmpgtd
orl
add
sbb
sti
out
stos
in
inc
loop
in
mov
clc
mov
pop
push
daa
lds
cmp
jns
imul
pop
je
mov
loopne,pt
or
ljmp
sub
inc
jbe
dec
imul
pop
fucom
dec
shrl
mov
mov
sbb
pop
mov
push
xchg
or
aad
lret
lret
push
cmpl
xor
xor
lcall
enter
xchg
ret
push
pop
repz
and
dec
add
xchg
mov
and
adc
adc
pop
cmpsl
ss
push
and
daa
in
lret
decb
cld
mulb
les
icebp
cmpsl
shlb
xchg
aad
mov
gs
lcall
push
dec
cmp
mov
adc
mov
inc
shll
jns
xchg
adc
lret
mov
pop
cmpsb
push
call
in
mov
jp
and
dec
out
movsl
sub
inc
cmp
insl
fs
bound
loop
scas
repnz
cmpsb
and
jp
pusha
push
stos
mov
es
xor
test
fwait
lahf
cmp
cmc
xchg
push
add
inc
cmp
jecxz
cld
or
xlat
test
xor
scas
lret
lea
xor
sbb
pop
enter
mov
adc
jp
sub
cmpsl
repz
ja
stos
outsl
ret
push
orb
xor
sbb
inc
andl
cli
add
inc
adc
gs
pop
xchg
jle
lahf
adc
fwait
jo
adc
or
stos
pop
pop
inc
shlb
pop
sbb
stc
dec
sbb
xchg
mov
xchg
mov
nop
nop
xor
jno
push
jl
inc
and
push
mov
mov
faddl
adc
sub
xor
mov
lcall
dec
mov
xor
or
cmp
mov
sub
push
mov
clc
and
sub
mul
jecxz
shlb
add
ljmp
stos
cld
fucomip
mov
or
test
dec
out
cmp
mov
mov
test
out
mov
push
jp
jle
mov
pop
notb
fs
imul
std
dec
pop
movsl
nop
sub
dec
fcoml
xchg
sub
imul
out
jmp
inc
lret
sbb
outsl
and
mov
loop
pop
or
xchg
push
sub
xchg
enter
jle
or
sbb
lds
dec
pop
cmpsl
push
int3
ret
add
and
push
xchg
mov
xchg
and
add
jnp
popa
ds
bound
ds
lcall
jbe
scas
daa
fcomps
ja
cmpsl
inc
adc
and
jmp
outsl
bnd
lock
and
push
sub
fstps
xchg
cmp
sbbb
cltd
in
or
popa
or
rol
sub
imul
pusha
test
roll
push
pusha
mov
shll
imul
add
insb
int
jnp
das
scas
inc
in
push
add
ss
push
inc
xchg
sbb
add
push
lret
stc
dec
push
and
imul
outsb
adc
mov
stos
stos
xchg
pop
dec
add
cmp
ficompl
outsb
push
clc
adcl
xor
xor
repnz
and
adc
sub
sahf
pop
shlb
mov
add
xchg
jle
out
call
xchg
test
out
roll
jmp
dec
add
cmp
sub
in
pop
push
aad
repnz
or
cmp
xor
xchg
lret
adc
push
cmp
jg
pop
out
fisubl
pop
shlb
cmpsb
rolb
or
cli
cmp
outsl
cmp
aas
xchg
das
sbb
andb
or
or
push
repz
pop
adc
sbb
movsb
stos
pop
jp
cld
fwait
xchg
dec
push
mov
mov
mov
dec
addr16
sbb
adcb
push
imul
push
push
add
inc
aaa
flds
test
pushl
cmp
ret
mov
mov
jge
jp
loopne
aad
daa
test
inc
xchg
lret
scas
ljmp
jbe
gs
push
femms
xchg
dec
push
mov
lahf
xchg
pop
imul
dec
pop
fstpt
mov
arpl
adc
xor
daa
mov
arpl
or
mov
sbb
cmp
dec
fisubrl
les
pop
adc
and
pop
out
push
rcll
test
lds
xchg
fisttpl
dec
cmp
rorb
mov
inc
ret
cmp
ja
mov
jns
add
out
cmp
std
dec
sbb
pop
cmpsb
mov
adc
sub
in
or
xor
fcomi
mov
test
xor
daa
adc
jp
sbb
bound
testb
dec
sbbl
jge
cld
mov
sbb
cmpsb
add
xor
fxch
or
lods
cmpb
xor
sub
push
dec
sbb
sbbb
fs
je
js
in
cmpsl
into
and
xlat
push
jmp
mov
mov
mov
shlb
mov
push
stos
push
aaa
inc
sub
and
aas
sbb
inc
test
lret
clc
cwtl
cmp
and
pop
xchg
dec
mov
dec
ret
ret
or
outsl
arpl
jo
stc
add
outsl
mov
mov
aaa
xchg
gs
in
lds
into
cmp
ds
in
leave
inc
xorb
dec
mov
fwait
push
test
jno
dec
in
cmp
nop
call
cmc
jle
mov
int
xlat
xlat
test
pop
xchg
fidivs
aam
mov
sub
add
outsl
mov
mov
jae
jp
sarl
pop
mov
inc
stos
push
sub
mov
shlb
jmp
jo
pop
and
test
sti
xchg
mov
push
imul
repz
push
lret
in
mov
jo
xchg
pop
int
cmpsl
sbb
fisttpll
out
or
jo
dec
sbb
or
mov
repz
dec
mov
aas
sub
pop
rcr
fwait
ret
pop
mov
ja
sbb
adc
or
fistpll
js
ja
push
mov
and
or
dec
adc
mov
les
cld
inc
and
leave
imul
mov
sbb
cli
lds
sbbl
mov
outsl
xor
addl
inc
ficompl
insl
cmp
sub
dec
into
dec
mull
add
dec
in
insb
jo
pop
push
out
add
lcall
xchg
cmp
loope
stc
out
lahf
pop
test
filds
pop
add
mov
aaa
dec
shll
or
cmc
lock
xlat
cmpsl
and
inc
int
lods
push
das
or
popf
arpl
loop
test
je
dec
pop
lea
aam
jnp
cmpb
shlb
jo
sub
subl
jmp
pop
dec
adc
sbb
mov
and
lds
mov
test
lock
sbb
stos
aaa
pop
sub
push
stc
mov
jbe
sbb
or
inc
test
mov
lods
iret
mov
jg
insl
lea
ret
and
roll
cmp
sbbl
sub
icebp
pusha
xchg
daa
dec
xchg
or
push
leave
stos
outsl
stos
jmp
out
pop
imul
notb
stos
mov
movsb
sub
sbb
js
loope
lahf
arpl
dec
push
pop
stc
fldl
stos
imul
add
jge
pusha
add
fdivrs
or
clc
sarb
arpl
mov
test
pop
mov
out
mov
cwtl
pop
inc
into
arpl
mov
xchg
and
mov
lods
dec
js
fs
movsb
lret
scas
loopne
leave
cmc
rcll
and
arpl
lods
daa
cmp
xchg
cmc
inc
or
xchg
mov
sub
mov
push
sub
lods
jl
lret
and
andb
jo
push
and
xor
in
cld
cmpl
andl
mov
or
cmp
push
inc
nop
mov
rolb
mov
rorl
int3
inc
pop
or
mov
xor
imul
mov
mov
add
lds
xabort
pop
lods
mov
ds
mov
aam
add
xor
divl
in
iret
dec
out
sti
xchg
rolb
repnz
inc
inc
mov
sub
cmp
add
push
push
xchg
test
xchg
shl
fdivr
or
sub
rcrb
push
xor
sbb
cmp
aam
pop
cmp
adc
lods
mov
ffreep
xor
into
jg
rcl
pop
out
or
xchg
or
xor
adc
add
xor
sahf
cmpsb
ja
pop
sbb
fcomip
adc
mov
mov
nop
inc
jge
mov
push
add
gs
push
jae
cld
loopne
into
cs
clc
rclb
and
and
pop
insb
ss
iret
cmpsb
call
jae
sbb
xchg
jns
lcall
fnstenv
insb
lcall
int
pop
jecxz
stc
fcomi
data16
mov
test
adc
lock
movsl
xchg
push
movsl
cld
stos
jb
popa
or
push
aaa
cmp
and
test
cmp
jno
jmp
mov
popf
adc
mov
or
loopne
dec
shll
insl
mov
dec
mov
xchg
jmp
imulb
fcmovbe
ljmp
xchg
popf
leave
adc
pusha
into
adc
lahf
jg
repnz
sar
or
aad
stos
outsl
xchg
dec
fdivrs
test
inc
ret
dec
adc
jnp
xor
or
dec
popf
cmpl
outsb
ror
psubd
daa
les
js
fiaddl
loope
leave
fidivl
test
or
scas
mov
sub
mov
aam
mov
mov
pop
pop
idivl
in
orb
pop
mov
test
imul
data16
lahf
or
mov
rcrl
imul
cmp
fisubl
out
decb
faddl
pop
lret
push
daa
data16
daa
inc
xchg
cmc
jno
sbbl
push
xlat
std
mov
call
add
or
xor
notb
in
and
pop
add
inc
into
into
popa
and
movsb
pop
mov
sti
movsb
test
mov
out
and
cmp
xchg
jo
mov
push
jne
ds
or
ret
xor
pop
xor
xchg
jmp
out
mov
dec
mov
mov
stc
lea
push
jle
leave
fidivs
jg
and
lods
rcrl
outsl
jl
test
adc
dec
test
xor
push
adc
prefetcht2
cmp
sub
daa
adc
rcrb
mov
pusha
xor
xchg
mov
fstl
into
jo
aas
xchg
mov
or
jl
bt
mov
dec
out
add
xchg
les
daa
pop
enter
pop
std
xor
pushf
or
ss
scas
repnz
mov
iret
adc
and
enter
repnz
int3
mov
xchg
push
jle
dec
inc
mov
inc
out
mov
shlb
push
ja
test
or
and
das
iret
in
xor
cltd
outsb
jnp
jle
enter
sahf
inc
jp
xor
mov
fisubrl
out
test
inc
pop
adc
push
push
out
and
adc
mov
xlat
cwtl
fsubrs
pusha
lods
and
add
fxch
and
push
fists
add
aad
and
ret
sarb
shlb
push
call
cmpb
pop
iret
imul
bound
subl
add
xor
jp
mov
xchg
mov
adc
movl
cwtl
pop
loope
sti
popa
add
enter
and
pop
xchg
ja
sub
or
pop
aad
in
jb
loop
push
js
sub
or
dec
xchg
mov
enter
add
pop
xlat
lods
sub
pop
sahf
push
jmp
insl
clc
enter
test
lahf
mov
push
and
push
call
jo
cmp
iret
xchg
in
mov
lea
hlt
mov
outsl
pop
rorl
ficomps
fsubrl
dec
or
mov
out
push
repz
int3
out
addr16
jbe
cmpsl
mov
push
mov
das
rorb
or
jmp
inc
mov
xchg
push
pusha
mov
mov
lret
push
ss
test
mov
jne
rolb
pop
nop
add
mov
fdivrs
sarl
out
cmp
add
push
je
loope
imul
xchg
sub
hlt
out
daa
inc
ljmp
xor
outsl
inc
xorl
dec
lret
push
pop
cmp
test
xbegin
icebp
fdivs
xchg
pop
cltd
adc
aam
nop
pop
sbb
data16
in
xor
out
aam
scas
push
add
dec
push
fdiv
or
pop
repz
int3
cltd
dec
mov
jo
adc
ret
outsl
or
sbb
addr16
rorb
std
addr16
adc
pop
flds
js
mov
scas
push
jmp
lods
fstpl
push
cmp
push
iret
cmp
outsl
in
xor
mov
sub
lock
stos
push
inc
cmpsb
or
xor
jbe
daa
lcall
fs
push
push
ret
jge
lods
int3
mov
sbb
repnz
scas
push
or
sbb
mov
adc
jle,pn
cli
jmp
out
xor
sbb
mov
xchg
rclb
mov
jne
push
stos
or
je
add
mov
sub
das
mov
repz
adc
not
testb
pop
push
in
mov
enter
mov
mov
decb
lea
sahf
mov
movsb
adc
sahf
lret
popf
xchg
xor
jg
xlat
push
stos
sub
aam
jle
leave
negl
rolb
cltd
arpl
xchg
ficoms
lods
test
cmp
cmp
js
fbld
cmp
sahf
mov
lods
xor
jnp
repnz
dec
iret
jle
rcll
stos
mov
pop
pop
sbb
cli
inc
adc
sbb
inc
rclb
pushf
aad
dec
mov
xchg
shrd
cld
shl
mov
ds
bound
jo
icebp
sti
dec
fcmovbe
jp
mov
jecxz
js
mov
lcall
in
cmpsb
fwait
mov
xlat
lea
clc
dec
filds
lock
mov
mov
cmp
dec
inc
jmp
cwtl
push
iret
inc
push
mov
adc
push
dec
popa
fwait
lcall
or
je
mov
xlat
mov
adc
cmpsl
push
cmp
fldt
call
lahf
out
push
cmp
out
cwtl
cmp
scas
cmpsb
xchg
mov
add
cmc
mov
adc
xchg
lret
mov
fisttps
sbb
sbb
js
push
jnp
iret
movsl
andb
pop
inc
gs
and
ds
ret
sbb
out
or
inc
cmp
push
cltd
pushl
jecxz
lods
out
seto
adcl
lds
inc
push
addb
or
loopne
and
scas
jecxz
or
daa
xchg
jecxz
lcall
pop
pushf
andb
jmp
aaa
and
mov
adc
ljmp
jmp
jno
push
pop
xor
fdivrs
and
and
shlb
cmp
pop
shll
add
mov
je
mov
xor
mov
xor
sbb
cmp
and
mov
add
push
xlat
jl
das
hlt
lahf
loop
ja
iret
mov
mov
sub
mov
mov
in
fidivrl
and
push
jmp
pop
jg
lcall
ret
or
jnp
test
add
mov
adc
psllw
movsl
adc
or
jns
ret
test
imull
mov
cmpsb
idivl
cld
mov
pop
mov
sbb
fisubrl
push
push
sub
repnz
sarl
fs
pop
in
xor
cmp
test
cmpsl
stc
ss
test
push
jl
fcomip
out
push
je
mov
xor
popa
scas
sti
lret
ret
mov
aas
add
sbb
addr16
in
adc
cmp
xchg
add
out
mov
xchg
rorl
or
pusha
inc
push
dec
cld
fldenv
or
or
cmpsl
movsl
aam
lcall
movsb
sub
leave
dec
push
sarl
je
repnz
into
push
xor
lods
pop
sbb
mov
pushf
stos
push
scas
lods
pop
call
add
mov
loop
out
adc
adc
xchg
xchg
std
sbb
cmpsb
daa
push
mov
pop
sahf
rorl
push
bound
sub
mov
sub
shl
mov
jl
adc
stc
mov
push
jl
lret
mov
mov
arpl
stc
mov
outsl
lcall
gs
outsl
jnp
mov
out
lods
pop
push
mov
inc
lret
mov
or
in
idivb
not
mov
add
fwait
bndldx
inc
inc
pop
aas
cs
aas
js
dec
push
mov
mov
outsb
loop
xchg
push
inc
fnstcw
in
shll
sbb
pminsw
push
je
cmp
sub
mov
lcall
cmpsb
xchg
or
lret
das
lcall
push
bound
xor
add
stos
mov
push
nop
and
inc
loopne
dec
push
mov
dec
mov
fnstsw
push
ss
hlt
test
in
push
or
ret
adc
rorl
and
xchg
jae
in
mov
mov
cmc
xor
cs
jle
sub
and
and
mov
mov
ja
es
and
mov
popf
push
pop
lods
add
notb
aam
sbb
fidivrs
jb
push
mov
add
int
pop
dec
std
insb
sub
xor
pushf
or
divl
mov
mov
add
xchg
in
sub
add
decb
aaa
mov
mov
cmp
arpl
push
pop
xor
call
shrl
gs
add
call
adc
pop
daa
mov
xchg
or
popf
ss
xor
pop
nop
or
loopne
fbstp
das
sbb
mov
sbb
sub
lahf
pop
mov
xchg
xorb
aam
pusha
jg
loopne
icebp
sbb
addr16
inc
mov
xchg
and
call
jecxz
rclb
mov
sub
pop
xchg
ret
mov
stos
data16
imul
lock
shlb
test
inc
mov
es
cmp
xchg
jno
jecxz
push
push
or
pop
and
and
mov
add
sbb
sbb
jmp
and
call
lcall
mov
outsb
out
leave
scas
cmp
sub
and
fsubrl
lahf
jno
lret
and
add
adc
pushf
adc
mov
pop
sbb
pop
push
pop
sti
fildl
sub
cmovae
mov
cmp
adc
add
dec
out
push
test
bound
arpl
ret
dec
lret
pop
aas
test
pusha
icebp
inc
in
call
dec
xchg
mov
lahf
insb
and
fistpl
fildl
lds
adc
add
scas
adc
xchg
shlb
addb
and
cld
jne
fadds
and
decb
cmp
mov
xchg
xchg
subb
pop
addr16
ss
xchg
xor
daa
xchg
xchg
or
push
cmp
in
rorb
sub
mov
mov
cwtl
popa
push
pop
cmpsb
aad
fsubl
xor
jle
lds
lcall
scas
cmpsb
mov
sbb
fisttps
push
test
lahf
jo
and
fstps
adc
mov
call
fdivrl
rcr
inc
and
jp
bound
xchg
rcl
popa
pop
sahf
ds
jb
inc
mov
loop
mov
ficoml
mov
outsl
arpl
xlat
jnp
inc
daa
addr16
sub
and
pop
icebp
sbb
std
xor
stos
cltd
sbb
pushf
icebp
mov
push
jns
fisubs
mov
stos
add
push
repz
mov
mov
stc
or
insl
push
cmp
js
mov
cli
dec
aam
cmpb
jae
lds
pop
sub
stc
cmp
jnp
push
lds
mov
dec
je
and
out
pop
pop
outsb
test
inc
clc
stos
lret
add
dec
leave
pop
sub
ret
dec
push
jmp
pop
sarb
fwait
movsl
xor
sub
cmp
ljmp
into
mov
lret
daa
iret
mov
adc
or
mov
loope
dec
jle
fmul
add
shrl
push
std
or
inc
movsl
and
push
jns
pop
ret
out
sub
fiaddl
and
outsb
jae
aam
or
mov
sub
loope
out
test
popf
lcall
je
xchg
movsl
jecxz
push
mov
mov
stos
outsb
addr16
fwait
push
sbb
jne
xchg
cli
sarb
push
pop
sbb
cwtl
inc
shrb
popf
adc
fcmovb
xchg
jg
mov
leave
add
lret
pop
lods
mov
xor
lahf
mov
movntq
aaa
repnz
cmp
push
mov
dec
adc
cwtl
andl
push
push
sub
jle
enter
daa
ret
and
cld
aaa
and
pop
mov
and
cmp
mov
mov
sbb
xchg
mov
dec
out
jb
imul
movsb
sub
aaa
loope
cmp
or
mov
lcall
push
fldt
sub
mov
push
mov
pop
xchg
fwait
aad
or
pop
sbb
lret
cld
cld
pusha
int
clc
sbb
mov
inc
scas
mov
push
fs
test
sub
scas
lret
movsl
daa
pop
mov
gs
cmp
outsb
lcall
sbb
or
ret
mov
lret
pop
mov
stos
outsb
jp
ds
testb
mov
inc
inc
or
mov
aam
out
cmp
pop
test
pop
mov
xor
arpl
ljmp
iret
cwtl
push
shrb
sar
lods
in
xor
cs
jle
sarl
xor
scas
fs
ret
outsl
stos
mov
and
and
push
jno
ja
push
ss
leave
sub
aam
lcall
negb
xchg
add
jmp
push
add
xchg
pop
popa
push
mov
notb
or
movsl
mov
adc
rcll
push
adc
adc
jp
aas
rclb
movsl
xlat
inc
pop
nop
jbe
enter
scas
cmpsb
negl
jnp
ret
cmp
push
lods
std
fwait
pop
es
cld
jns
mov
cs
loopne
pop
repz
aad
loopne
mov
ss
adc
sub
cmp
out
imull
leave
popf
jno
inc
insl
xor
ljmp
push
rcrl
cmp
in
cmpsl
and
in
add
sti
adc
or
pop
xchg
daa
or
test
xlat
sahf
mov
mov
inc
movsl
aaa
mov
imul
xorl
inc
aaa
jp
sbb
jno
mov
jnp
scas
ficomps
pop
call
out
cmpsl
mov
xchg
or
add
loope
lea
outsl
hlt
gs
rolb
pop
test
and
and
ror
in
daa
ljmp
sbb
adc
adc
popf
in
sbb
call
jne
js
lock
loopne
ss
out
mov
push
imul
xchg
sbb
pop
test
repnz
test
dec
stos
popa
jae
pop
push
pop
or
sbb
mov
dec
sub
scas
xchg
xorb
push
xor
dec
pusha
sti
sbb
push
mov
adc
lods
shll
outsl
arpl
pop
mov
jl
pop
adc
fmuls
imul
call
fwait
test
mov
mov
stos
xchg
lock
jmp
in
insl
jmp
xor
out
push
push
or
pop
aad
gs
mov
idivb
dec
inc
inc
ret
push
addr16
pop
adc
into
call
jle
rclb
mov
sub
sub
sub
pop
fstl
push
cwtl
sbb
jecxz
add
aas
dec
shrb
add
sbb
lahf
pop
sbb
sbb
adc
mov
ja
jae
cld
or
rorb
outsl
mov
jecxz
scas
push
lret
adc
sbb
iret
nop
fstpt
cmp
mov
pop
lds
cwtl
stos
gs
sub
sbb
inc
mov
cmp
fwait
mov
jg
xchg
test
gs
add
scas
xchg
mov
je
lods
mov
fnstcw
js
inc
loope
push
out
aam
imul
cmpsb
sbb
sbb
xor
and
xor
inc
rolb
call
scas
clc
jne
scas
pusha
inc
shll
xchg
adc
shl
stos
inc
out
dec
movsb
xchg
push
pop
push
outsl
scas
inc
imul
arpl
repnz
icebp
movsl
notb
mov
into
mov
dec
pop
pop
outsb
movsb
inc
jno
addb
jp
ret
dec
popf
or
daa
pop
and
pop
inc
cmp
int3
ss
push
xchg
and
inc
nop
loope
pusha
aam
push
jo
sbb
pop
cmc
std
sbb
push
sbb
mov
push
ret
ret
cwtl
dec
add
lret
inc
inc
pusha
jne
out
dec
sbb
nop
daa
aad
sub
xor
std
clc
inc
adc
pusha
and
adc
cmp
mov
icebp
ficoml
std
add
ja
xchg
ret
mov
ss
mov
xchg
fiaddl
rcrb
shl
push
pusha
add
es
and
sub
pop
pop
sbb
jne
adc
in
jecxz
mov
cmp
push
fimull
aas
inc
adc
and
mov
jns
jp
sbb
and
pop
imul
inc
add
pop
cltd
mov
pushf
pop
mov
movsl
int3
lahf
loop
cmc
mov
out
sbb
enter
push
incb
stc
aaa
or
push
xchg
xor
jo
mov
xchg
fwait
cmp
cmp
mov
dec
shll
mov
mov
pop
int3
into
aaa
std
and
sahf
cmpsl
cwtl
jp
xchg
add
aaa
ds
cmc
and
hlt
fldpi
jecxz
loope
or
cld
xor
fldenv
sbb
sahf
je
mov
out
js
mov
cwtl
or
jae
shrd
and
or
leave
xor
cltd
cmp
cltd
mov
into
icebp
xchg
and
mov
add
mov
jmp
sahf
pop
and
aas
and
push
pusha
mov
or
int
loop
repz
lcall
test
push
js
ret
push
mov
xchg
pushf
loop
jp
cmp
inc
insl
adc
les
and
add
sbb
jb
fadd
dec
das
es
scas
loopne
lret
pop
or
xor
andl
popf
add
imul
fstps
aaa
jo
sbb
mov
jns
je
push
fsub
mov
sub
inc
movsb
repz
xchg
push
scas
or
in
and
and
add
lahf
stos
xchg
dec
jl
test
js
ret
out
cld
and
cmp
inc
shl
cmp
jmp
in
sbb
pop
and
and
clc
adcb
roll
scas
pop
inc
add
or
pop
mov
cmp
pop
push
add
es
outsl
iret
pop
mov
cmc
andl
sbb
push
pop
adc
mov
lahf
xchg
mov
pushf
enter
push
and
rolb
out
cmp
or
stos
pop
xchg
sbb
or
and
cmp
test
aam
push
mov
andb
xor
pop
imul
mov
hlt
shll
insb
add
xchg
fwait
stc
jo
bound
mov
fnstsw
cmp
mov
mov
lahf
pop
xor
scas
rcll
out
scas
outsl
xor
bnd
int
pop
mov
lcall
sbb
xor
cmp
lods
leave
sbb
sub
ljmp
mov
pop
mov
dec
testl
fwait
ret
and
insb
out
arpl
movsl
sbb
stc
push
cmp
pop
or
pusha
mov
shrl
incl
cmp
out
pusha
jg
mov
testb
xchg
pushf
cwtl
pop
int
jne
xlat
mov
jb
enter
repz
mov
cld
inc
addl
jg
test
cmpsl
mov
test
sbb
fcmovb
addr16
push
sub
mov
push
pop
call
add
int
divl
inc
sub
jnp
negb
cld
mov
sti
xchg
pop
outsl
xchg
jmp
in
sti
dec
insb
jbe
ret
push
stos
mov
push
lock
cmpl
pop
gs
out
repz
sbb
loop
jg
dec
fists
sub
test
call
sti
push
dec
xor
add
repnz
xlat
aaa
xor
insl
lret
jb
add
mov
add
add
push
mov
out
bound
sarb
imul
xchg
push
out
sbb
cwtl
cld
in
sbb
dec
xor
scas
mov
jnp
inc
jp
lret
aas
je
outsb
sahf
mov
xchg
inc
push
sbb
loopne
cmp
pusha
enter
xor
pop
xchg
call
mov
sahf
mov
ret
jno
mov
inc
in
rcl
fsubp
push
push
and
jne
test
je
pop
dec
sub
ret
sbb
and
cli
push
jle
push
jne
inc
sub
shl
in
sub
push
push
push
test
fildll
cmc
mov
aaa
faddl
jle
pop
mov
decb
dec
inc
adc
es
sbb
in
inc
out
adc
cmp
lret
fcompl
punpcklwd
xchg
cltd
cmp
adc
les
popa
push
jb
cmp
jne
push
xchg
fwait
leave
icebp
push
jmp
and
stc
fistpl
mov
loop
shrl
mov
fucomp
sbb
cmpsl
adcl
lret
ds
cmc
popf
pop
je
roll
mov
out
or
jae
mov
enter
jo
shr
inc
test
arpl
shr
out
xorb
out
sahf
sub
pop
dec
aas
xor
push
sub
fisubrs
fmuls
jno
jecxz
sub
sub
mov
and
cli
orl
shlb
std
mov
lret
dec
ja
sub
scas
jb
jl
xchg
adc
data16
ret
sub
rcll
in
rolb
and
cltd
mov
nop
out
xorl
cwtl
xchg
loope
or
pusha
repnz
movsl
dec
dec
cmpsl
mov
mov
loope
or
inc
or
mov
insb
cmp
fwait
out
jne
cmp
movsb
stos
mov
inc
sub
sbb
ret
inc
sbb
xlat
add
inc
xchg
cmp
mov
jo
xor
cmp
xchg
addr16
sbb
pop
or
pop
jno
aam
loopne
test
add
repz
or
pop
movsl
add
ja
cmpsb
movb
mov
inc
ds
loopne
cmp
mov
js
jmp
add
add
fistpll
add
dec
icebp
sub
call
cmp
cmova
mov
mov
xchg
xlat
dec
and
mov
movsb
dec
shrb
rol
test
test
fstps
movsb
test
dec
sub
loopne
dec
lcall
inc
mov
dec
push
xchg
or
sbb
xchg
ficoms
cmp
xchg
popf
lds
cmp
int3
mov
xchg
inc
pop
sub
push
mov
dec
je
jne
jb
dec
test
pop
adc
cld
in
lods
imul
push
adc
sub
shrb
movsl
adc
mov
out
jecxz
mov
enter
push
call
pusha
popf
mov
loop
mov
cmp
xor
mov
mov
jmp
cmpsl
lahf
lcall
cmp
or
jo
cwtl
lds
daa
inc
push
inc
lahf
icebp
add
cmpsb
push
lods
or
push
lods
push
fistl
push
fstpl
fmull
xchg
ret
sti
call
add
pop
push
mov
rcr
or
xchg
sti
xor
mov
dec
xchg
fstps
int3
in
loop
mov
mov
adc
adc
adcb
and
mov
or
jae
jnp
mov
gs
movsb
les
add
imul
sub
dec
es
push
jno
adc
inc
cmp
in
cmpps
sbb
insb
fildl
mov
sub
cmc
daa
mov
stos
xor
notb
push
out
fisubrl
movsl
bound
sub
jnp
mov
loop
int3
inc
push
xchg
jp
out
daa
std
out
stos
test
push
xor
and
or
js
inc
out
inc
daa
sub
dec
and
aas
rorl
mov
rcrl
jle
addr16
andb
aad
fidivl
jne
data16
lahf
mov
pop
hlt
mov
mov
inc
loopne
mov
aam
push
test
cmp
imul
jg
sbb
lcall
cmp
in
in
push
test
push
add
cmp
push
into
cmc
sti
bound
les
addr16
into
cli
push
rorl
push
rcrl
lds
addb
pop
int
int3
inc
call
pop
and
push
mov
lcall
pop
jo
adc
pop
xchg
sub
sti
mov
adc
push
xchg
cmp
mov
test
cmpsl
pop
sub
inc
aad
aad
mov
gs
cld
cmpsb
add
xor
ret
inc
lods
push
and
and
jmp
loope
mov
into
sub
ret
dec
popf
cs
sub
or
mov
fsubl
jmp
stos
shl
inc
dec
sbb
cmpsb
sahf
rcrl
rcrl
xchg
push
lcall
jbe
xor
ja
jecxz
jecxz
mov
into
inc
jmp
in
add
sub
add
stos
cmp
pop
xchg
icebp
arpl
sbb
xor
outsb
cwtl
cmp
xor
addb
std
xor
jmp
inc
addl
in
out
stos
push
inc
bound
push
mov
jmp
jp
cmc
jb
scas
or
in
jno
push
xchg
pop
pop
insb
xor
push
out
sbb
imul
sub
mov
push
lea
push
push
cmpsl
lahf
and
cmpsb
pop
mulb
inc
mov
outsl
pop
or
into
xchg
shll
gs
js
cli
jnp
call
mov
rcll
pop
fwait
xor
xlat
icebp
cmc
loopne
test
ja
pop
or
xor
sti
out
inc
pusha
xor
fstpt
ret
fsubl
or
push
shrl
popa
and
add
or
subl
mov
in
ss
ja
call
dec
dec
push
pop
pop
into
push
jb
mov
mov
dec
cmp
popa
lods
das
inc
pop
cs
inc
les
rorb
cltd
insb
bound
testb
lea
stos
xchg
sub
mov
cli
stos
sbb
mov
stc
sbb
bound
cmc
mov
and
sbb
cmp
arpl
jno
mov
repnz
cmp
xor
and
addb
sbb
dec
mov
mov
xor
add
dec
mov
mov
sub
xchg
movsl
pusha
jbe
jae
xor
popa
pop
add
sbb
inc
data16
push
adc
jb
repnz
stc
xor
xlat
daa
xor
aas
mov
mov
scas
mov
mov
inc
pop
push
sub
int3
test
xchg
hlt
lahf
lea
movsb
xor
idivl
jge
push
fdivs
mov
lods
push
aas
lock
mov
cltd
stos
rcrl
das
movsl
stc
add
dec
jge
xlat
sbb
popf
mov
in
inc
sub
mov
test
mov
mov
mov
mov
ficompl
xchg
mov
dec
enter
clts
dec
mov
adc
cmpsb
dec
adc
mov
mov
js
or
pushf
daa
mov
movsb
cld
lea
jb
push
pop
shlb
nop
dec
rcrl
push
mov
xchg
sbb
xchg
js
imul
pop
test
aaa
dec
out
test
add
out
adc
and
push
imul
pop
aaa
repz
popa
sub
mov
pop
in
addl
dec
cs
xchg
adc
fcomps
xor
lods
xchg
dec
lret
cmpsl
fimuls
xor
mov
sbb
inc
movl
imul
push
dec
js
call
push
ss
addr16
inc
jns
arpl
dec
mov
lds
mov
push
mov
xor
daa
and
add
stos
ret
andb
in
xchg
add
mov
add
pop
movsb
cmpsb
jmp
xor
dec
adc
rol
mov
jb
mov
mov
nop
push
movsl
sbbb
mov
push
jae
xor
sbb
push
pusha
push
lds
or
cld
xor
jl
xchg
arpl
shr
mov
std
aas
cmp
lods
adc
mov
xor
add
pop
push
subl
scas
addl
inc
xor
divl
add
data16
pusha
adc
insb
fcomps
dec
adc
lret
ss
jp
pop
es
jns
cmc
dec
cmpl
lods
xorb
int
popa
jp
repnz
lds
and
xchg
bound
jne
mov
lock
xlat
sbb
in
data16
repz
sbb
adc
mov
xor
les
adc
aas
divb
lds
jbe
sbb
mov
das
clc
cltd
xchg
adc
arpl
cmp
pop
inc
shlb
mov
jmp
mov
ja
xchg
subb
cmp
aam
xchg
xchg
mov
inc
daa
mov
test
decb
rorb
jl
and
cmc
push
daa
aam
adc
dec
insl
jns
cmp
cmp
jnp
sbb
sub
dec
enter
sub
inc
sub
pop
call
add
sub
xchg
lods
int3
leave
shr
lret
scas
adcl
aad
popf
jnp
pushw
shlb
add
xchg
mov
movsl
and
inc
xchg
pop
mov
or
jno
daa
cld
jnp
pusha
pop
dec
fprem1
xchg
addb
dec
mov
sub
out
sbb
adc
adc
inc
fstps
repnz
cltd
shll
jbe
movsb
xchg
ss
mov
jmp
inc
shr
rorl
push
cmpsl
repnz
std
lahf
ret
jmp
inc
sbb
and
sbb
push
mov
add
jne
add
sar
or
pop
daa
mov
das
cmp
arpl
mov
pushf
adc
xlat
sbb
popl
rcl
push
push
shll
pop
int
mov
jl
aas
test
ret
std
fwait
pop
out
imul
push
xsaves
add
and
pop
lret
out
mov
jmp
dec
cs
pop
push
or
adc
xor
js
ja
mov
inc
xor
add
mov
adc
mov
int
xchg
fiadds
sti
shll
rorb
insb
mov
cmp
xchg
stos
dec
addr16
cmp
pop
push
popa
loop
pop
lcall
push
push
cmp
mov
push
cmp
call
pause
jmp
loop
fcompl
dec
mov
mov
jg
pop
cmp
push
loopne
daa
sti
imulb
ficompl
xchg
push
adc
dec
jne
push
sbb
push
sbb
shlb
mov
push
pop
repz
sub
add
add
in
negl
movswl
mov
shl
jmp
pusha
jecxz
test
mov
add
rorb
shlb
adcl
fisttpl
lds
jecxz
data16
pop
pop
js
cmp
mov
dec
lea
test
in
cmp
imul
mov
fsubrl
pop
out
adc
mov
ja
push
lahf
test
mov
push
ds
sahf
leave
repnz
cwtl
push
pop
hlt
jb
or
pop
in
ror
hlt
cltd
lret
sub
loope
jp
daa
outsb
inc
stc
mov
fs
pop
ret
push
pop
adc
cmp
fnstcw
clc
enter
jl
inc
in
xor
sbb
adc
stos
adc
sbb
data16
jbe
or
xor
add
sub
je
adc
sbb
adc
leave
mov
test
cmc
pop
pop
pop
scas
jae
je
popf
and
cmp
jb
movsb
dec
shlb
idivl
xor
ja
jecxz
pop
adc
add
popa
add
jp
ljmp
rcll
std
sbb
jge
push
jl
xor
cld
repnz
push
xlat
imulb
mov
call
scas
in
and
lcall
mov
pop
jecxz
es
mov
pop
xor
test
mov
mov
add
inc
cld
stos
pusha
and
sub
adc
inc
mov
pusha
mov
jno
outsb
xchg
jle
or
jecxz
sub
data16
cld
jp
shll
in
repnz
fsub
int
xchg
fwait
mov
push
sub
es
cmp
mov
cli
cli
and
push
clc
push
mov
lea
adc
in
pop
ret
outsl
aas
xchg
cmp
cmp
jp
dec
out
mul
int3
cmp
pusha
in
jns
pushf
push
fwait
cmp
cmpl
rcr
jne
add
xchg
int3
subl
ljmp
xchg
push
jl
push
pop
std
push
test
mov
sarl
setge
in
adc
pop
imul
es
push
in
pop
sbb
inc
leave
or
cmp
add
repz
aam
or
scas
fdivr
insb
xor
mov
aas
inc
test
lret
add
xchg
scas
mov
pop
leave
pop
fmuls
aaa
stc
mov
xchg
jne
jno
jmp
inc
bnd
add
mull
xlat
fistl
push
test
adc
dec
push
imul
stos
lret
push
mov
es
lret
and
mov
xor
push
xchg
adc
loope
ja
in
mov
js
repnz
lret
ljmp
lahf
or
lds
in
dec
sub
out
push
es
jge
mov
add
mov
mov
rcll
test
sub
sbb
lods
enter
mov
mov
sub
std
fld
sub
nop
shlb
adc
insb
sahf
cmc
hlt
xchg
add
shr
leave
push
test
enter
dec
mov
adc
xchg
add
scas
push
pop
push
aad
or
pop
hlt
clc
push
cmp
in
mov
das
int
loope
testb
outsl
adcb
xchg
into
cmp
jo
lcall
xor
sahf
dec
imul
pop
insl
cmp
mov
lret
out
imull
sbb
push
mov
sbb
fucomi
adc
add
pusha
hlt
mov
jmp
loope
mov
xchg
jno
jnp
jns
cmpb
adc
mov
lret
pop
fmul
sub
test
je
jle
stos
cmpsb
mov
pushf
push
inc
push
es
mov
insb
ret
sbb
into
sbb
cmp
sbb
inc
jb,pn
jns
insb
add
xor
lcall
pop
je
std
shrb
xlat
xor
mov
notb
pop
xorb
mov
pop
xor
test
fisttpl
or
shlb
aas
add
and
test
cmp
mov
mov
insb
flds
jmp
sbb
fstps
fcoms
loopne
in
add
xlat
inc
out
xor
xchg
movsl
inc
jo
cmc
js
xchg
scas
push
push
les
scas
jo
inc
push
push
repnz
lock
push
daa
xor
frstor
or
cmp
pop
loope
add
adc
push
cmp
mov
ret
in
mov
push
rcll
nop
in
ret
data16
mov
adc
cmp
lock
push
rcrl
xor
xchg
imul
jl
adc
jge
mov
inc
jo
enter
dec
ds
mov
cmpsl
mov
or
pop
ret
pop
mov
leave
push
repz
lods
cli
int
dec
dec
cmp
or
std
mov
daa
mov
mov
data16
push
repz
mov
mov
mov
mov
add
sbb
dec
sbb
and
mov
popa
sti
dec
repz
lds
and
mov
sbb
scas
mov
xor
les
jmp
xchg
outsb
ljmp
loope
fcompl
inc
sbb
pop
cmpsl
mov
es
cltd
rcll
out
mov
fimull
shl
loope
sbb
xchg
imul
outsl
mov
in
je
xchg
xor
push
ljmp
cmpsb
jb
imulb
push
and
mov
std
in
jge
aas
jg
cmpsl
lret
cmp
add
ret
inc
les
stos
xor
inc
jbe
lcall
cld
jnp
lret
popf
lcall
sbb
aad
fnsave
mov
out
gs
movsb
in
jae
pshufw
rcrl
adc
test
or
mov
xor
mov
je
and
bound
inc
fdivrp
mov
icebp
mov
sbb
add
movsb
jbe
add
cli
mov
cli
mov
add
dec
stos
xchg
mov
rcrb
pop
iret
xchg
jl
mov
js
stos
nop
fistl
lods
pop
mov
mov
fmull
pop
in
and
and
mov
ss
pop
cmpb
cmp
sbbl
into
mov
or
imul
lea
add
loopne
fmuls
push
pop
data16
in
and
aaa
into
adcl
mov
dec
jl
adc
repnz
stos
and
fimull
into
adc
xchg
pop
fst
ljmp
cld
or
pop
in
mov
add
inc
loopne
test
mov
ret
stos
sub
sbbb
arpl
dec
mov
or
fdivrs
mov
add
push
aas
lcall
lret
mov
pop
and
mov
mov
addl
inc
xor
outsb
lods
fisttpl
test
sub
and
and
dec
dec
push
movsb
push
ljmp
cmpsl
lods
movsb
sbb
fwait
and
mov
scas
xchg
cmpsb
dec
dec
adc
add
loope
data16
add
jg
cwtl
popa
insl
in
cmp
ror
mov
or
das
in
push
pop
ret
enter
je
add
sub
movsl
das
cmpsl
inc
icebp
pop
mov
inc
inc
js
insl
push
mov
mov
lea
dec
iret
mov
cld
imul
mov
push
sub
imul
ret
iret
mov
ficoms
loopne
scas
mov
mov
or
mov
call
or
enter
cs
adc
daa
dec
add
cmpsb
jns
idiv
xchg
xchg
leave
xor
pop
jp
xor
nop
cmp
add
or
xchg
xchg
mov
adc
int3
mov
push
jno
hlt
jb
sub
fildl
test
scas
jnp
push
xchg
and
pop
repnz
sbb
mov
fildll
mov
add
data16
inc
setno
es
fdiv
insb
push
rorl
in
frndint
mov
mov
adc
xchg
mov
inc
cmpsb
loope
mov
or
fnstsw
sbb
popa
jge
dec
dec
cmp
xor
mov
jge
cli
inc
adc
ret
pop
pop
mov
dec
mov
es
out
in
mov
push
lods
outsb
pop
mov
sbb
add
sub
lods
loopne
xchg
jnp
out
add
test
push
pop
xor
add
shlb
pop
test
xor
sahf
cltd
xchg
out
jge
jp
xchg
pusha
imul
lret
mov
jno
lods
fcmovnu
sbb
fwait
lahf
mov
fdivs
out
xor
loop
jae
call
fisttpll
inc
sub
sbb
push
cmp
add
stc
xchg
pop
mov
mov
popa
fwait
adcl
add
js
sti
outsl
sbb
ficoms
pop
cmp
and
pushf
dec
push
add
pushf
add
cltd
roll
in
cmp
mov
fldl
loop
jecxz
push
testb
adc
in
and
test
pushf
nop
push
inc
xchg
pusha
xor
fsts
xchg
mov
fdivrl
mov
rcr
shlb
test
leave
leave
mov
mov
xchg
std
or
mov
clc
pop
adc
push
loopne
dec
out
sbb
imul
xchg
dec
ds
xor
je
and
cwtl
fsubrs
sarb
mov
shlb
insb
mov
add
das
or
lret
mov
xchg
add
jbe
sub
lods
add
or
dec
inc
lret
pop
das
rorb
inc
cmpsb
fisttpll
ds
test
insb
jbe
int
and
push
inc
adc
pop
jp
mov
sar
test
out
mov
xor
ficoms
roll
mov
push
push
dec
sbb
lock
dec
aaa
sbb
and
push
dec
jl
dec
cmp
nop
enter
outsl
stos
push
adc
sbb
xor
push
ret
xorl
mov
bound
lock
sub
mov
dec
dec
or
add
sub
sub
nop
mov
das
daa
jns
ret
leave
cmp
popa
push
jne
mull
test
or
xchg
cwtl
mov
loope
add
idivb
mov
movsl
sbb
sbb
jp
outsb
mov
fisubrs
mov
pop
xlat
stc
mov
rcll
xlat
cmp
add
std
aas
add
cli
das
addl
or
inc
jg
sbbl
jmp
or
fildl
in
adc
dec
adc
or
popa
jecxz
fbstp
jmp
xchg
and
sbb
addr16
test
ja
mov
dec
cmp
fwait
out
cmp
mov
jecxz
xor
negl
jl
xor
lret
cmpsb
es
aam
mov
setb
imul
jne
mov
ret
adc
in
in
scas
loopne
loopne
sbb
mov
stos
adc
or
mov
ret
int3
mov
lcall
mov
mov
pop
imul
jl
jle
loopne
fld
test
clc
lahf
imul
cli
add
sbb
mov
adc
mov
add
fnstenv
outsl
lret
in
cmc
sbb
call
test
dec
mov
cmp
out
stc
in
fisubrl
cmp
outsl
cs
in
add
cli
out
cld
xor
mov
push
push
and
dec
push
aad
add
push
jb
xor
xchg
adc
mov
adc
or
mov
pop
mov
adc
in
vmread
int3
lods
jp
loop
int3
mov
pop
push
rorl
jl
mov
clc
mov
pusha
push
sub
iret
inc
push
mov
dec
movsl
cwtl
pop
or
xchg
mov
push
scas
clc
mov
xchg
adc
inc
ficoml
hlt
imul
test
lds
imul
xor
mov
mov
lcall
xchg
sbb
std
jo
aam
jae
es
adc
xorb
add
xchg
mov
pop
inc
xor
shll
sbb
cs
mov
jae
adc
adc
pop
mov
sub
dec
inc
into
lock
jno
test
dec
xchg
push
cmp
gs
cli
pop
imul
mov
xchg
adc
cmp
inc
sub
mov
in
mov
pop
adc
sub
mov
testb
fs
push
sbb
or
pop
xchg
inc
mov
sbb
push
xchg
jns
jae
repnz
jp
iret
mov
mov
mov
mov
inc
inc
data16
jo
fiadds
cmpsl
or
popa
mov
jl
push
cmp
mov
adc
mov
cmpsb
movsl
fidivl
xchg
jns
shrb
mov
pop
push
push
jmp
mov
adc
bnd
jnp
cmp
leave
pop
lds
cmp
mov
into
ds
imul
cld
in
add
int
dec
add
shll
outsl
jmp
lret
cltd
popa
mov
sbb
pop
popa
mov
inc
outsb
pop
test
repz
loope
jns
jmp
imul
xchg
je
adcb
lret
and
mov
test
loopne
jne
adc
pop
sub
pusha
insl
mov
jae
negl
andb
montmul
cmpsb
add
pop
je
andl
ret
outsl
je
xor
mov
fwait
sub
cmpsl
test
mov
clc
test
xchg
jp
into
out
bound
xchg
sbb
loope
mov
xchg
dec
sbbl
jecxz
mov
cmp
or
loop
adc
add
sbb
and
dec
jg
or
fistpll
push
dec
push
sbb
inc
push
mov
inc
cwtl
inc
sarb
in
movsb
sub
xchg
or
pusha
mov
sub
ficoml
jp
sahf
xor
rorl
insl
cwtl
fnstsw
shll
push
jmp
mov
psrlq
lea
scas
clc
add
sub
push
mov
adc
ret
ja
mov
inc
mov
imul
filds
es
lds
lea
test
mov
mov
mov
lahf
inc
cmpsb
lret
in
mov
or
mov
ret
dec
cmp
sbb
sbb
hlt
jno
outsl
imulb
pop
mov
mov
fisttpll
inc
and
loope
and
pop
addb
daa
and
pop
pop
mov
adc
popf
sub
pop
and
lret
xchg
out
jo
sbb
push
fimuls
mov
pop
sbb
cltd
sbb
rcrb
fisttpl
cs
push
xor
addl
lea
inc
pop
mov
inc
data16
aaa
cmp
dec
inc
fdivrs
test
scas
stc
add
in
int3
mov
es
cmp
cmp
push
mov
insb
sub
aas
jg
adc
or
lahf
inc
mov
test
jae
adc
push
dec
stc
xchg
inc
stos
mov
pop
mov
in
inc
jne
xor
loopne
mov
xor
fcomps
ror
push
ror
mov
cmp
fildl
ja
ss
cmp
jle
test
jo
and
xor
shrb
mov
pop
loop
shll
pop
stos
jbe
inc
pop
xor
mov
notb
inc
mov
popa
mov
daa
nop
std
pop
xchg
pop
and
ljmp
sbbl
adc
enter
jg
faddl
leave
in
clc
cli
xor
aaa
int
mov
loope
inc
lock
pop
hlt
push
lcall
sbb
imul
xlat
sub
mov
push
pop
rorl
fidivs
mov
test
jmp
call
aad
xchg
dec
mov
mov
jecxz
enter
arpl
jns
push
aaa
and
test
push
sub
dec
adc
in
or
hlt
pop
fsubs
mov
mov
push
ret
adc
addr16
jp
rcrl
jg
inc
inc
outsl
fadd
jbe
enter
cmp
fs
mov
into
std
mov
aad
stc
cmp
dec
inc
ret
sbb
sti
and
mov
leave
inc
repz
jae
in
adc
mov
xor
rcrl
hlt
add
icebp
xchg
dec
jle
xor
dec
push
lcall
xchg
xchg
inc
sbb
inc
idiv
adc
into
decl
clc
push
push
das
inc
icebp
mov
lods
push
push
pop
xchg
cmp
xor
push
inc
inc
inc
std
push
jo
imul
xor
cmp
mov
pop
cmp
cmpsb
call
adc
lock
xor
in
scas
jle
or
test
ret
mov
lea
scas
jle
cmpsb
dec
pop
int3
std
inc
ds
popf
jnp
out
adc
imul
mov
data16
cmc
xor
mov
loop
sbb
cli
mov
mov
jge
call
sbb
shll
lret
mov
inc
mov
sbb
hlt
cmp
imul
popa
mov
mov
jle
pop
dec
inc
dec
mov
inc
fsubr
sbb
mov
stc
add
loop
push
mov
cmp
repz
push
cs
or
inc
push
push
push
mov
mov
adc
sarb
in
adc
jbe
in
sub
mov
or
push
mov
mov
stos
mov
dec
jge
xchg
xchg
sahf
in
rclb
jmp
mov
nop
fsub
mov
cli
xchg
xor
enter
scas
mov
xchg
je
subl
pop
xchg
fdiv
in
cmpsl
mov
lock
mov
jle
pop
inc
stc
or
xor
mov
test
sub
mov
jmp
cmp
xor
dec
cmp
mov
dec
push
sub
shlb
xchg
mov
popa
rolb
cwtl
jbe
pop
and
push
or
push
fnstenv
shlb
loop
ljmp
pop
lds
mov
cwtl
jno
mov
negb
in
imul
cmp
les
ds
cwtl
aaa
rclb
xchg
hlt
push
into
mov
out
sbb
pop
dec
mov
test
cmp
rclb
jb
loope
xor
adc
arpl
inc
pop
jne
cmp
and
ffree
in
sarb
or
dec
lds
cmp
lret
rcl
addr16
pop
inc
pop
mov
insl
aam
push
lea
test
mov
mov
hlt
and
jecxz
inc
iret
das
int
add
fldt
mov
jo
mov
pop
pop
mov
lret
mov
jno
ss
stc
daa
jge
push
lahf
push
pop
nop
scas
insb
mov
lock
mov
out
idivl
dec
adc
mov
aad
sbb
mov
fistpll
mov
shlb
xchg
clc
sbb
lret
sub
pop
mov
inc
ret
fdivp
out
stos
inc
loopne
jne
xchg
inc
add
rcr
cltd
addb
inc
xorl
mov
popf
inc
push
xor
add
nop
movsl
pop
add
jae
ss
out
cmp
xor
push
lret
xchg
cmpsb
jne
push
fldcw
lea
data16
aad
adc
ja
outsl
mov
and
nop
daa
dec
mov
ja
jae
mov
pop
jo
cld
adcb
leave
dec
int
mov
add
in
rorl
push
xchg
cmp
das
arpl
rclb
fnstenv
sbb
dec
or
pop
jmp
arpl
adc
push
mov
mov
jp
movsb
fmull
incb
pop
and
js
lods
adc
leave
inc
je
pop
lcall
das
mov
inc
fbld
arpl
loope
cs
cmp
subl
fyl2xp1
fnstcw
pop
jnp
int
out
jmp
adc
sub
xor
out
cmp
pop
pop
sarb
insl
loopne
xchg
mov
xchg
hlt
or
push
cmp
hlt
sbb
dec
xor
push
out
jae
add
adc
mov
xchg
jae
outsb
fstpt
movntps
jle
adc
push
out
bound
je
push
int
les
mov
xchg
out
dec
xor
rcll
in
sbb
lods
add
add
into
daa
pop
mov
out
cmp
dec
push
test
jecxz
ret
cwtl
mov
push
aas
movsb
out
push
mov
loopne
ja
aad
mov
shrl
cmp
popf
fimull
mov
leave
negl
data16
inc
cmp
test
aad
jle
cmpsb
xor
xor
rolb
lret
inc
gs
xchg
add
and
lahf
or
fdivr
in
mov
mov
jnp
out
xlat
lods
or
das
test
ss
pop
popa
fbstp
jnp
fadds
clc
stc
mov
in
xor
data16
xchg
push
adc
mov
neg
xlat
pop
cli
cld
mov
jg
and
mov
sub
xor
std
loope
sub
les
dec
push
mov
lret
jns
mov
adc
jmp
mov
pop
lcall
in
cs
xchg
into
mov
mov
jecxz
lea
std
into
hlt
dec
mov
push
out
xchg
xchg
imul
mov
lret
jecxz
negb
mov
jmp
jmp
mov
and
and
fisttps
push
lahf
push
mov
pop
dec
and
aam
mull
adc
push
sbb
mov
subb
popf
in
call
scas
add
cmc
fmul
clc
push
lods
inc
pop
pop
mov
addr16
sbb
sarb
daa
inc
stc
or
cmp
mov
xor
sbb
xor
test
leave
mov
xchg
adc
and
fsubs
sub
xchg
test
jmp
int
ficoms
or
int3
push
mov
dec
mov
rcrl
mov
mov
dec
xor
imul
outsb
call
shr
imull
pop
sub
sub
sbb
pop
test
jns
lret
imul
mov
mov
std
pop
ds
data16
iret
lret
outsl
mov
scas
loop
shlb
cmpb
loope
add
fsts
mov
and
mov
dec
xchg
lahf
jmp
push
iret
sbb
pop
cmp
jno
add
or
aas
sub
xchg
lods
jae
push
inc
xor
inc
pop
xchg
or
aam
pushf
sub
out
icebp
pop
xchg
jp
icebp
in
mov
push
lods
insl
out
int
icebp
push
faddl
pusha
mov
movsl
push
push
in
dec
sbb
mov
mov
push
rcrl
dec
mov
pop
js
add
pop
test
jne
push
pop
jnp
fimuls
mov
mov
sbb
jle
push
xlat
stc
iret
mov
popa
fiadds
in
mov
arpl
orl
pop
pop
sbb
ljmp
sarl
test
ja
pop
sub
mov
cwtl
fsubrs
pop
enter
or
or
dec
out
jne
test
sahf
pushf
sahf
pop
nop
into
jb
in
test
cmp
mov
lods
mov
xor
cwtl
fstpt
inc
mov
sub
fnsave
movsl
pop
inc
jno
mov
jo
xchg
imul
mov
pop
lds
rclb
lock
call
imul
add
enter
jno
fdivrl
arpl
sbb
lret
jno
movsl
pop
cmpsl
sbb
imul
mov
lret
sahf
inc
xchg
jge
inc
cld
inc
std
add
mull
cli
in
cmp
fldenv
xchg
xchg
push
jl
mov
cmp
movsl
mov
cs
cli
sub
call
jns
int3
hlt
add
in
add
add
mov
or
and
jnp
icebp
imul
mov
dec
add
xchg
testb
xor
pop
or
popf
fcompl
cmp
mov
fstps
out
cmp
wrmsr
std
lods
aad
pop
xchg
mov
mov
sarl
pop
jnp
push
sbb
pop
xchg
xor
pop
fsubs
into
int3
outsb
add
test
test
popa
mov
xor
shrb
or
inc
imull
mov
pop
clc
inc
mov
insb
jns
sbb
js
add
adc
or
data16
pop
mov
sbb
pushl
negl
pop
xchg
jns
and
xor
pop
aaa
shlb
cld
sbb
test
insl
sbb
or
sbbl
mov
ljmp
data16
and
in
data16
sub
mov
sbb
outsb
inc
in
sbb
dec
sbb
adc
ja
xchg
pop
cwtl
arpl
mov
shll
ret
mov
cli
and
lock
das
adc
xor
test
arpl
sub
or
test
lds
cmp
mov
adc
mov
push
in
movsb
push
jbe
repnz
xor
push
fnstsw
sbb
xchg
or
jb
xchg
xlat
ja
add
dec
push
adc
cld
xchg
cld
cmp
loope
loop
dec
mov
add
xchg
shrb
cmovle
mov
lret
fldl
test
imul
and
imul
sub
xchg
jne
int3
leave
mov
add
andb
out
orl
popf
out
push
mov
inc
xchg
pop
sbb
pop
mov
test
fcoms
pop
inc
fisubs
loope
jge
xchg
or
add
lea
sub
sti
mov
icebp
sub
ja
inc
pusha
ficoms
lds
inc
push
ss
gs
add
mov
fnstcw
fisttps
inc
jbe
mov
fcomi
aam
mov
lahf
xchg
das
jge
push
nop
das
sub
lods
cltd
mov
pop
rorb
xchg
mov
pop
enter
push
mov
adc
jo
hlt
out
stos
les
cwtl
stc
ja
pop
xchg
inc
pop
push
sub
pop
xchg
gs
mov
push
lods
jbe
ss
mov
mov
orl
jo
inc
ret
sti
xchg
ja
iret
inc
imul
lret
imul
ror
or
mov
push
push
mov
pop
fildl
jno
daa
dec
test
outsb
inc
sbb
cmpl
mov
add
adc
xor
jle
sub
lock
js
or
mov
sti
les
stc
sub
jl
lock
pop
or
and
daa
cmp
scas
xchg
enter
mov
xchg
push
fnstcw
xor
loop
fsubrp
dec
inc
sti
jle
divb
jns
in
mov
adc
lahf
stc
jl
test
sbb
in
and
lret
cltd
or
fmulp
jle
jmp
stc
or
jl
mov
cmp
xchg
xlat
mov
cmp
mov
nop
cmpsl
pop
aaa
mov
add
and
jne
cmp
xchg
xor
fbld
jo
popf
sbb
add
adc
aaa
and
and
das
aam
mov
subb
pop
fwait
gs
or
lock
mov
mov
jg
aam
stos
fnsave
pop
lea
jns
cmp
lar
sub
lods
xchg
jp
fists
fwait
xchg
lea
scas
sub
sbb
repnz
ds
inc
mov
in
push
mov
xor
in
stos
inc
cmpsl
mov
jge
jle
add
adc
rol
add
mov
jb
out
lea
xor
out
es
jg
hlt
push
jg
xchg
fidivl
xchg
add
notb
fcmovnu
outsb
icebp
jne
cmp
in
and
insl
pop
cmp
jne
outsb
movsb
inc
jae
int3
repz
mov
and
jge
sub
pop
xlat
les
push
adc
stc
add
cmp
jns
popa
add
push
lock
pop
arpl
loopne
int3
jae
inc
sub
mov
and
scas
xor
cltd
cmpsl
xchg
insb
cmp
cmp
leave
xchg
inc
ret
pop
cmp
sbb
call
mov
and
fisttpl
lock
inc
daa
push
mov
ljmp
mov
adc
fs
xor
cmpsl
popf
jns
lods
mov
cmp
jnp
fcoml
scas
pop
daa
xor
insl
je
icebp
cmp
inc
aam
repnz
ror
repnz
inc
sub
rcr
cltd
rcrl
mov
jnp
and
roll
aas
push
add
xchg
ds
cmp
and
xor
std
stos
add
cltd
pop
xchg
scas
cmpsb
mov
lds
es
fldt
mov
cmc
jp
cs
sub
nop
xchg
mov
xor
popf
jp
int
jl
cmp
jo
shrl
add
outsl
in
in
movsl
idivl
inc
icebp
in
push
add
fstpl
pop
inc
das
test
mov
jbe
fnsave
cmp
fwait
dec
jbe
xor
adc
sbb
mov
jle
inc
pop
xor
add
sub
outsl
in
xor
in
test
inc
mov
les
adc
pop
jp
jl
or
sbb
aam
lcall
int3
daa
iret
aam
es
dec
inc
push
call
leave
inc
enter
pop
ljmp
in
push
or
test
les
jne
jne
sub
xor
negl
push
xchg
xchg
dec
or
iret
test
pop
cmp
fwait
xchg
in
popa
scas
popa
shrl
jae
loopne
or
dec
les
shrb
mov
mov
inc
daa
lock
pop
addl
lret
push
dec
les
es
lret
int
xchg
pop
pop
cs
push
pushf
fists
cmpsb
cs
inc
sbb
mov
xor
insb
dec
mov
sbb
mov
fidivrs
je
xchg
hlt
xchg
into
lea
pop
dec
pushf
pop
xchg
add
adc
xchg
or
enter
xor
fcoml
movsl
mov
outsb
xor
out
outsb
sti
xor
leave
addr16
sbb
pop
dec
das
xchg
or
cmp
jl
rcrb
outsb
jnp
loop
jae
loope
jbe
mov
add
imul
sub
push
es
xchg
js
pop
mov
stos
sarb
outsb
cmp
and
mov
clc
shl
push
mov
fidivrs
xor
add
cmp
inc
out
mov
mov
adc
stos
adc
test
nop
jg
insb
adc
add
aam
popf
sbb
push
sbb
movsl
xchg
mov
cmp
dec
mov
je
xchg
adc
lahf
or
jle
lock
je
clc
sar
pop
cmc
push
movsb
mov
nop
punpckhwd
inc
pusha
add
fnstcw
jne
mov
data16
xor
mov
orl
sbb
dec
or
aaa
inc
xor
xchg
add
cltd
push
xorl
pop
inc
xorb
sub
pop
inc
daa
insb
cmpsl
std
dec
aad
in
inc
imul
mov
xchg
sub
cltd
fwait
mov
sbb
pop
jno
ss
mov
mov
cmpsl
das
mov
lea
push
in
shll
add
stos
adc
pop
stos
in
push
lods
and
and
out
fldcw
adc
and
inc
cli
add
addr16
mov
mov
shrl
add
mov
dec
dec
mov
mov
pop
shll
out
sbb
repz
or
dec
dec
jo
mov
int
push
mov
pop
push
imul
ja
mov
rorl
dec
push
or
pop
push
pop
out
arpl
into
jg
mov
add
shlb
lods
adc
call
push
push
dec
sbb
adc
scas
dec
dec
mov
xchg
cld
pop
sub
sqrtps
mov
sbb
adc
mov
es
dec
outsl
ljmp
sbb
lret
cmp
xchg
repnz
shrl
ret
push
adc
cmp
mov
data16
xchg
sarb
inc
push
out
roll
mov
mov
xchg
xchg
mov
jns
push
imul
pop
xlat
es
push
jp
cli
shlb
adc
jge
cld
push
add
adc
fmull
sbb
mov
jp
push
aas
or
cltd
mov
lds
lds
jnp
fdivr
lret
inc
xorb
out
mov
xchg
xchg
push
jle
pop
cmp
mov
nop
imul
push
mov
test
xlat
xor
or
leave
les
mov
inc
sbb
jmp
loope
xchg
jle
push
pop
pop
rorl
cmp
aaa
fldl
sub
mov
cmp
push
imul
scas
sub
insb
or
xor
fdiv
lods
loop
arpl
sbb
sub
mov
jg
addr16
shlb
cld
int3
sbb
enter
pop
pop
add
roll
mov
xor
cmp
cmp
movsb
mov
lds
in
adc
fimuls
aam
dec
cli
mov
xchg
std
popa
fsts
xor
and
dec
aas
lods
scas
repz
push
cmc
or
xchg
insb
jne
mov
mov
test
mov
out
xchg
mov
lahf
ret
sub
jl
in
mov
dec
std
jg
insl
pop
shll
inc
inc
lcall
pop
mov
pop
ss
mov
dec
adc
jecxz
jns
in
cs
lcall
pop
sub
add
mov
xor
adc
or
addr16
fists
mov
push
mov
in
jge
data16
sbb
subl
adc
push
sbb
aam
xchg
jle
mov
shl
rorb
pushf
les
pop
nop
insl
mov
dec
jns
ja
test
mov
bound
mov
xchg
push
push
mov
mov
nop
cmp
adc
xor
adc
les
mov
lock
nop
adc
std
roll
mov
leave
ja
enter
es
ja
data16
cmpsl
xchg
enter
lcall
add
xchg
mov
stos
out
or
ljmp
aas
jno
repz
pop
shll
jo
insb
pop
or
push
dec
push
xchg
packuswb
jno
push
jecxz
aad
sbb
cmpsb
movsb
in
fbld
mov
sarl
pop
and
or
cmp
mov
repz
scas
push
mov
or
loop
adc
aam
mov
add
outsl
jb
sub
je
or
jae
inc
pop
mov
mov
xchg
mov
dec
das
mov
xchg
dec
sub
fdivr
xchg
inc
in
xchg
jle
pushf
push
test
pop
and
xchg
in
mov
lcall
sbb
jbe
in
aaa
pusha
and
aam
jmp
fadds
cmc
icebp
lock
cmpb
xchg
int3
mov
add
adc
push
lods
sti
and
call
negl
pop
jp
xor
xchg
push
sub
mov
jo
cs
cmp
ret
push
outsl
adc
pop
ljmp
popa
mov
icebp
lea
pop
push
dec
nop
iret
dec
jg
shll
mov
enter
paddsb
test
jo
or
in
sub
ret
cltd
jge
inc
adc
adc
add
cli
cmp
repz
in
jp
pop
and
xchg
ret
mov
inc
pop
inc
pop
xchg
and
jecxz
cwtl
cld
add
sbb
cmp
repz
sub
scas
sub
jns
push
mov
sbb
out
test
push
sbb
sti
arpl
jae
inc
xchg
mov
aam
arpl
pop
push
sahf
clc
movsb
inc
fcmovne
cmp
sub
adc
and
or
rol
stos
pop
mov
cmp
mov
lock
sbb
rolb
pop
lock
pushf
xor
jge
andl
outsb
jecxz
sar
and
lea
cmp
pop
cs
into
lds
movhps
loope
scas
xchg
push
frstor
insl
adc
lret
loope
xlat
icebp
aas
mov
stos
mov
mov
adc
repnz
subb
xchg
cmp
in
xchg
push
sbb
rep
or
arpl
jo
js
jg
fwait
aas
pop
cmp
lea
sarb
cmpsl
xchg
push
dec
push
out
cmp
cmpb
out
inc
cmp
inc
dec
ret
fstl
out
outsb
stos
leave
mov
das
cwtl
outsb
sub
lcall
lds
dec
push
jecxz
aam
faddl
mov
fiadds
loope
das
xor
mov
in
jnp
dec
push
inc
aas
pop
xor
ja
or
or
cmp
orl
rcrb
mov
and
cmpl
xchg
sbb
cld
mov
lret
dec
mov
adc
fisubs
jmp
mov
dec
cli
add
dec
dec
outsl
pop
popf
push
dec
ja
adc
jb
dec
mov
sahf
adc
inc
sub
fisttpll
fsub
out
pop
sbb
scas
andb
inc
add
dec
mov
insb
jne
out
aam
sti
mov
fnstenv
mov
shl
xor
popa
int3
pop
mov
and
lret
jle
or
jecxz
movsb
add
mov
pop
in
test
insb
jg
jle
pop
fdivl
jae
push
pop
cmp
jle
lock
add
cltd
jb
adcl
into
cmp
adcb
xlat
sub
or
sbbb
out
mov
aaa
add
mov
cli
pop
aaa
dec
mov
cli
or
jp
push
cld
sub
bound
enter
mov
movsb
pop
ljmp
mov
mov
mov
adc
cmp
pop
mov
cmp
mov
notb
mov
pop
cmpsb
shlb
jle
loopne
sub
mov
fbstp
push
clc
cld
mov
jmp
scas
lock
rolb
lret
mov
fstpl
xchg
orl
cmp
dec
and
hlt
mov
jae
mov
dec
mov
xor
xlat
fisttpll
mov
in
pop
mov
xlat
jl
push
stc
lock
fisttpll
mov
fcoml
insb
cmpsl
mov
fstps
hlt
mov
popa
pop
fucomip
xchg
and
aaa
add
push
jecxz
cmp
dec
lods
jne
mov
enter
sbb
aas
lods
pop
push
jns
adc
outsb
fadd
cmpsl
fwait
in
mov
inc
xchg
roll
imul
mov
and
lds
push
loop
aaa
out
xchg
pop
test
sub
fmul
xchg
mov
mov
adc
xchg
or
and
sbb
arpl
push
mov
movsl
push
jmp
in
mov
xor
lea
sarb
xchg
lds
add
lahf
jge
add
es
lret
test
push
mov
lds
add
add
sti
test
ret
cwtl
xor
xchg
fwait
test
add
in
dec
xchg
dec
and
fdivr
cltd
lods
jnp
fisttpll
xchg
add
dec
movsl
cmp
mov
dec
add
cld
lods
aaa
fdivrl
roll
rorl
ds
inc
bswap
js
jne
das
push
jno
in
mov
lods
jg
int
icebp
inc
mov
int3
aas
xchg
cltd
jns
rcrb
fldt
lret
add
shrl
pop
aas
add
jle
jae
es
pop
sub
cmp
lods
inc
or
ret
push
cmp
jno
pop
pop
mov
shll
push
cmp
mov
ljmp
or
rcrl
push
fidivs
and
dec
test
xchg
subb
cmpsl
mov
sti
pop
sahf
in
movsl
imul
out
sbb
jp
test
cmpsb
adc
pop
cmpsl
pop
mov
ljmp
or
fcmovnb
dec
jle
and
cld
icebp
loopne
sub
dec
dec
stc
lods
mov
sub
rcrb
jnp
dec
pop
inc
jae
inc
jmp
es
jns
mov
test
mov
into
cmp
and
cltd
cmove
inc
pop
jge
xchg
mov
test
pop
js
mov
xchg
stc
cmp
ret
mov
addr16
int3
mov
xor
inc
out
xchg
mov
add
mov
jmp
mov
scas
enter
sub
dec
loop
dec
stos
bswap
add
nop
addr16
jle
jecxz
inc
push
sbb
cmp
lret
xor
int3
pop
arpl
scas
aaa
sub
mov
adc
mov
push
orb
pop
pushf
jb
xchg
and
jno
sub
sbb
push
push
insl
dec
jp
movsb
popf
pop
mov
scas
cld
clc
lods
cmpsb
shll
movsb
inc
repnz
lahf
sbb
mov
addr16
outsl
inc
mov
cwtl
or
lock
adc
push
icebp
mov
pushf
dec
cmp
adc
sub
mov
loop
pop
hlt
pop
repnz
mov
imul
jp
jbe
mov
sub
add
pop
push
add
push
outsb
rcr
mov
mov
outsb
mov
adc
addr16
pop
dec
xchg
outsl
dec
mov
int3
push
bound
inc
repnz
cmc
xorb
fsubs
data16
push
repnz
movsb
cs
mov
outsl
sub
dec
lds
fadds
xchg
loopne
fmuls
out
add
mov
ljmp
add
nop
mov
add
addr16
pop
test
jp
push
or
inc
push
xor
and
xor
xchg
sbb
jl
les
cmc
rolb
fs
or
icebp
mov
ja
das
cmp
iret
rolb
mov
shll
insl
dec
arpl
mov
sbb
push
lock
addr16
addr16
daa
xor
push
pop
adc
int
adc
cmp
jle
xchg
cwtl
jnp
ljmp
add
test
repz
jbe
int3
push
sarb
jl
pop
jp
cmp
push
push
xor
pop
arpl
push
cwtl
arpl
inc
adc
or
push
mov
jecxz
in
shll
inc
test
push
pop
popa
cmp
dec
cwtl
jnp
push
mov
iret
cmp
fcmovnb
int3
adc
jp
pop
sbb
push
les
fs
inc
push
xchg
mov
adc
lock
sub
sbb
add
push
into
fs
mov
aas
bound
pop
mov
xor
dec
cmp
cmp
lcall
in
pushf
mov
std
sarb
mov
lret
ror
jp
adc
jbe
push
and
inc
add
sarl
pop
fsubrs
dec
sbb
push
lea
repz
fcmove
test
push
xlat
insl
enter
push
xchg
or
rol
jmp
jb
jmp
lret
mov
std
test
and
aad
addr16
xor
xor
add
scas
push
imul
xor
push
icebp
mov
aas
leave
out
mov
mov
std
addb
xchg
das
fstl
shlb
scas
stos
sub
push
sti
xchg
cwtl
xor
fimuls
clc
mov
and
ljmp
iret
in
adc
mov
cmpsl
mov
daa
xor
mov
ljmp
jmp
mov
xor
inc
sub
and
pusha
stos
nop
push
loop
je
sub
sub
mov
xchg
mov
cmp
mov
cli
divb
fcoml
mov
push
push
sbbl
lret
adc
push
xchg
in
add
push
lret
and
xor
ljmp
sbb
subl
mov
sub
mov
jne
push
stos
push
enter
sbb
add
out
mov
push
mov
aam
jns
adc
mov
test
mov
out
sbb
pop
jle
outsl
adc
aas
mov
sbb
jne
pop
add
addr16
dec
adc
icebp
jg
in
pop
dec
pop
sub
leave
push
inc
daa
mov
call
test
out
loope
jmp
pop
xchg
add
dec
pop
in
sbb
or
cmc
xchg
add
pop
ret
mov
fsubp
repnz
sbb
xchg
mov
inc
cmp
int
sbb
cmp
dec
jl
mov
lock
stos
or
mov
dec
inc
pop
cmp
rcpps
outsl
pop
es
fs
xor
adc
pop
push
js
mov
jb
cmp
mov
shll
pop
ja
sub
sub
jle
jmp
ret
hlt
sbb
jecxz
in
mov
xchg
add
and
dec
sub
pop
cmp
ss
scas
insb
cmpsl
rcll
ljmp
mov
cwtl
sbb
xadd
inc
test
xchg
lds
xchg
or
mov
ret
adcl
test
jno
and
andl
jno
add
inc
xchg
or
adc
nop
ret
lods
cmc
push
popf
mov
sub
jg
ljmp
fs
fistpl
lods
jb
std
lea
inc
out
mov
mov
jbe
adc
mov
stc
jns
jns
jecxz
fadds
fwait
aaa
bound
rclb
ds
test
xor
test
pushl
js
or
dec
xorl
mov
pop
das
pop
fsubrl
mov
or
sub
and
push
lret
enter
les
mov
clc
dec
jb
push
xchg
in
stc
mov
pop
dec
push
daa
push
cmpsl
pop
and
pusha
popf
mov
mov
ds
int3
mov
aam
ljmp
aaa
push
inc
dec
mov
mov
pop
mov
sbb
dec
jmp
lcall
pop
imull
jbe
mov
xlat
xchg
dec
cmp
and
push
jge
les
cs
into
mov
jo,pt
cltd
mov
filds
pop
mov
mov
push
scas
lods
stc
mov
pop
fnstcw
ja
sub
pop
mov
xor
sbb
test
lock
cld
icebp
inc
int3
and
push
or
mov
jecxz
inc
repz
or
inc
mov
cmp
loopne
shrb
sbbl
mov
sahf
dec
cmpsl
and
insl
xchg
ss
add
jne
inc
scas
adc
fprem
aaa
pop
xchg
add
push
lock
loopne
iret
xchg
ss
les
inc
cs
inc
ds
inc
in
or
mov
inc
or
mov
push
jb
movsl
scas
add
sbb
popf
sbb
mov
dec
out
cmp
cld
imul
movsl
xchg
or
inc
and
mov
je
outsb
push
mov
mov
inc
xor
dec
push
out
int3
bswap
jmp
cmpl
incb
sbb
test
cmp
repnz
push
mov
fidivrs
or
jmp
add
add
pop
jno
adc
pusha
scas
hlt
push
outsb
stos
lock
pop
mov
cmp
adc
add
pop
iret
xor
lods
cmp
scas
popf
sarb
push
sub
cwtl
arpl
repnz
cmpsb
pop
mov
mov
mov
and
cmp
push
inc
js
sub
dec
dec
inc
xchg
ljmp
imul
mov
adc
sub
mov
mov
mov
syscall
in
dec
xlat
pop
adc
test
jns
mov
rcll
aad
mov
cwtd
imul
adc
mov
mov
lock
popf
outsb
aaa
pop
fimuls
adc
sbbl
stos
pop
inc
repnz
int
ficoml
cmp
arpl
stos
into
push
std
mov
rcr
pop
fistps
fisttpl
cmpsb
insl
xchg
adc
pop
mov
push
outsl
daa
insb
jne
mov
lods
jge
movsb
jbe
pop
cmp
lock
dec
data16
mov
mov
insl
lahf
int3
ja
ss
scas
adc
sbb
cltd
xchg
int
adc
adc
pop
loopne
mov
loop,pn
pop
push
daa
push
push
cmpsb
aaa
push
test
ja
mov
mov
push
test
into
mov
dec
out
mov
xchg
mov
push
ret
mov
mov
gs
xor
sub
or
cwtl
jb
mov
xor
enter
je
repnz
add
hlt
jecxz
mov
mov
shrl
lret
movsl
int
das
js
jp
loopne
xor
lret
lods
sarl
imul
dec
mov
add
mov
dec
clc
and
push
andps
xor
pop
push
jmp
stos
inc
add
xchg
cltd
push
lds
popf
jo
pop
outsb
shl
push
and
add
pushl
pxor
sub
out
mov
push
mov
hlt
push
repz
cmp
fdivs
popa
sbb
inc
adc
mov
jno
scas
fildll
cmp
sbb
cmpsl
out
imul
aad
rclb
repz
inc
lahf
mov
test
adc
sti
mov
jmp
push
rcrl
inc
outsl
aaa
sub
adc
shl
or
or
push
scas
cmp
mov
test
push
cmpb
loope
sbb
add
or
xchg
int
push
in
adc
and
jo
cmp
cmpsb
lret
ljmp
jmp
jg
push
imulb
fdivl
push
mov
mov
adc
pop
into
and
pushl
mov
jp
out
dec
ds
pop
pop
jnp
pop
aas
stos
dec
or
adc
sarb
cld
add
orb
xchg
push
js
cmp
and
xlat
fldt
test
dec
shrb
pop
popf
mov
mov
xchg
pusha
or
ja
pop
sbb
cmpsl
loope
lods
sarb
mov
stos
dec
je
mov
cmp
cltd
int
out
and
mov
mov
adc
addr16
inc
imul
jb
nop
out
ret
int
in
les
fs
fbstp
cld
pop
sub
cmpsl
inc
loope
xor
xchg
cs
leave
add
das
sbb
mov
adcb
inc
lcall
or
out
mov
pop
call
push
cli
scas
fistpll
sbbb
xchg
int
scas
pop
mull
jnp
data16
cmc
test
shlb
iret
or
ss
dec
mov
jg
mov
aas
adc
mov
push
repz
in
lea
add
arpl
inc
in
mov
lahf
and
enter
std
movsl
hlt
fldcw
add
or
dec
mov
sub
pop
inc
lret
mov
repz
lds
mov
pushf
mov
dec
and
stc
mov
inc
inc
cmp
ljmp
int3
fs
mov
adc
adc
pop
push
adc
sti
adc
leave
jo
and
int
scas
xchg
outsb
xor
adc
xchg
loop
loopne
dec
inc
std
int3
daa
mov
lods
scas
jno
sub
stos
and
mov
push
cmp
or
adc
out
sub
pop
pop
mov
dec
icebp
repnz
insb
sub
repz
mov
pop
and
and
xchg
push
leave
pop
jp
dec
lret
or
and
xor
rcll
lock
movsb
inc
jge
mov
jb
mov
mov
ljmp
gs
sbb
sbb
add
mov
scas
lret
mov
lods
jne
negb
adc
and
or
sub
jl
fldt
lret
and
add
es
push
bound
imul
mov
adc
adc
pop
cmp
pop
jp
addr16
outsl
inc
cmpsl
inc
xor
adc
pop
sub
in
fmul
jo
xchg
jecxz
jb
add
and
or
push
pop
push
cmp
jns
xchg
lret
sti
push
pushf
stos
pop
mov
adc
pop
mov
xchg
out
jo
das
and
dec
sbb
int
movsl
cltd
add
test
jg
push
not
mov
or
outsl
in
dec
stos
les
lods
mov
and
xor
ss
scas
sbb
mov
movsl
mov
jbe
lret
or
dec
movsb
xchg
outsb
cmp
jg
in
jp
popa
push
add
jo
test
inc
dec
fildll
mov
xchg
lea
xchg
inc
sub
shll
pop
addr16
sub
hlt
or
mov
scas
add
push
sub
sti
jo
stos
inc
pop
jmp
nop
mov
shrb
shlb
push
iret
out
adc
outsb
mov
add
imull
xlat
outsl
mov
int3
xor
add
icebp
insl
mov
scas
pushl
dec
stos
fdivs
das
jns
out
or
jno
shr
xlat
and
fcmovne
bound
and
cmp
fwait
cmpl
in
xchg
repnz
mov
lods
test
hlt
dec
pop
cwtl
sahf
stc
push
inc
in
aam
nop
jp
lret
shlb
arpl
repnz
mov
add
mov
fmull
dec
pop
pop
in
dec
or
jp
jbe
push
fwait
aaa
mov
push
mov
push
inc
pop
data16
movsb
lret
int
push
add
pop
testl
pop
lods
inc
mov
push
push
test
lahf
loopne
insb
je
push
lret
push
mov
xor
cmc
mov
fsts
xor
xor
aaa
popf
adc
shrl
lods
sti
push
dec
aad
aaa
xchg
mov
pop
cmpsl
inc
xor
jb
xchg
jg
or
and
xchg
mov
mov
adc
xchg
push
pop
cmp
pop
inc
addb
add
or
cltd
les
cmc
sub
mov
sbb
mov
enterw
push
inc
out
pop
movsl
in
lret
mov
xchg
push
mov
add
cmpl
jae
adc
xchg
mulb
sahf
sub
mov
lret
cld
dec
sbb
adc
pop
das
popa
mov
lea
push
dec
xor
out
ficoms
pop
std
shr
ret
push
ret
ss
mov
jbe
add
sbb
int3
imulb
and
scas
sbb
mov
push
lcall
adcl
xor
push
je
mov
test
call
jne
push
and
xchg
fimuls
mov
jge
mov
test
ret
or
enter
test
aam
mov
jno
mov
lahf
mov
xchg
xchg
mov
fistpll
orl
dec
sahf
cmp
stos
pop
cwtl
dec
add
les
cs
lahf
cwtl
inc
and
ret
xor
jns
mov
add
xchg
cmp
sbb
inc
insb
and
dec
xor
cwtl
call
call
lock
dec
cmp
or
scas
sbb
sub
pop
or
aaa
sbb
jmp
mov
sbb
test
jp
pop
int3
cmp
lcall
stc
or
dec
lcall
mov
pop
imul
cmpsl
sub
negb
sub
mov
subl
sbb
movsb
mov
shr
nop
xchg
cld
rcl
ret
sbb
or
xchg
fsts
pop
addr16
lahf
icebp
mov
orb
cmp
repnz
jns
jo
mov
lcall
shl
test
inc
cmp
incb
mov
jl
lcall
aad
mov
inc
out
dec
or
ss
cs
add
lods
lahf
lcallw
mov
insl
dec
ljmp
popf
inc
data16
jo
fimull
fdivs
es
push
mov
aas
arpl
js
lahf
popf
sbb
into
add
gs
rorl
test
mov
iret
repz
rorl
mov
cmp
arpl
xchg
or
add
mov
push
lahf
loope
les
imul
cld
pop
xchg
aaa
xchg
push
repz
cmp
add
cmpsl
and
lods
pop
adc
shr
xor
out
inc
arpl
jno
inc
mov
xchg
mov
cltd
jnp
movsb
call
xor
pushf
pop
lcall
pop
lret
fistps
mov
pop
mov
mov
jbe
push
jae
out
fld
adc
mov
cld
bound
and
out
in
pop
jg
jo
xchg
leave
arpl
cmp
xor
mov
xchg
jbe
cmp
sbb
sub
jae
adc
pop
pusha
mov
je
in
mov
sub
call
popf
xchg
aas
xlat
or
dec
data16
repz
push
fnstenv
sub
ljmp
dec
stos
stos
cltd
aam
or
je
jmp
push
pop
inc
lahf
or
notl
mov
fnstsw
test
in
cmp
cmpsl
and
xchg
xor
insb
sbb
outsl
sub
cmp
add
cmp
clc
dec
pop
push
insb
into
in
in
imul
out
jge
gs
aaa
shll
les
mov
lea
imul
in
inc
push
cltd
add
test
bswap
popa
pop
add
inc
adc
inc
icebp
inc
inc
fsubrl
gs
fildl
mov
dec
rolb
pop
nop
out
ljmp
fldt
mov
dec
lock
inc
cli
pop
inc
xor
repz
pop
cmpsl
sub
lret
cmp
xlat
lock
sub
in
jo
popa
xor
or
xor
push
mov
and
andl
mov
ds
jns
xor
xchg
es
xchg
or
outsb
mov
fists
adc
and
insl
mov
xchg
cmc
aad
mov
push
jmp
les
sti
adc
or
mov
cwtl
sbb
mov
push
mov
insb
out
in
jns
shr
inc
ja
sysenter
mov
xchg
or
pop
jb
mov
js
inc
mov
xchg
jno
xor
in
xchg
test
adcl
mov
fisubs
and
and
xlat
leave
repnz
hlt
jg
cmpb
cwtl
test
icebp
cs
sbb
jmp
int
add
pop
cs
sbb
dec
popa
and
adc
xor
add
jg
mov
pop
stc
pop
testb
and
cmpl
pushf
je
shlb
aad
cld
mov
mov
pop
int3
popa
or
fidivrl
std
or
xchg
dec
faddl
lods
xchg
pop
out
adc
adc
and
sbb
adc
rorb
xor
pop
or
test
sub
mov
ds
scas
xor
push
cmpsb
push
sarl
paddw
push
mov
cmp
movsl
adc
inc
out
jecxz
or
add
xlat
xchg
scas
pop
add
fdivs
pop
int
pop
pop
std
push
adc
ljmp
movsb
popf
insl
fisubrl
ja
cmp
jne
lods
ss
int3
xlat
clc
into
lret
arpl
out
cmc
sub
frstor
fcoms
xor
adc
cmp
cmp
insl
pop
or
add
mov
add
andb
sahf
loope
inc
mov
inc
shll
mov
int
cmp
jns
or
mov
test
pop
cmp
outsl
push
pop
cli
orl
jo
jp
adc
jne
mov
jmp
push
cwtl
pop
stc
fsub
push
insl
xor
fidivs
inc
mov
xchg
arpl
and
pushf
lods
cmp
cmp
fs
dec
push
es
gs
jbe
cld
int3
imul
xchg
xor
repnz
pop
cwtl
les
lods
inc
mov
push
xor
cld
mov
jg
daa
sub
arpl
mov
mov
les
cmp
cmpsb
loopne
data16
dec
imul
andl
insl
and
pop
jp
mov
out
rolb
fiadds
mov
pushf
leave
iret
push
mov
int
mov
je
and
test
mov
loope
cli
fidivs
sub
leave
cmp
adc
insl
and
jbe
jbe
cmpsl
mov
mov
aaa
jl
mov
pop
mov
jnp
inc
jg
xor
fsts
icebp
clc
push
pop
mov
push
mov
test
jb
sub
jmp
nop
or
sbb
inc
test
dec
cmp
mov
mov
out
adc
mov
addl
cmpsb
mov
pop
push
or
and
ret
rorb
pop
daa
outsb
mov
push
sub
jmp
mov
ss
and
mov
pushf
and
scas
pop
out
sbb
shll
movsb
add
add
cs
pop
xor
push
jl
or
add
jo
push
andl
push
stos
js
lods
lods
jb
add
fildl
add
shr
in
jns
xor
mov
insl
sub
shrl
push
lods
xchg
popf
sbb
in
jne
add
loopne
add
outsb
inc
cld
pop
xchg
lods
out
icebp
jg
outsb
inc
pop
and
jecxz
loop
xchg
rclb
sub
mov
mov
dec
int
push
gs
int
out
fwait
push
or
lods
sub
pop
popl
stos
aad
aaa
push
push
push
mov
inc
cmp
sub
mov
fisubs
and
sub
sbb
and
cwtl
cmp
dec
hlt
jg
pop
pop
xlat
push
arpl
loopne
or
ljmp
cs
cmp
loop
nop
out
add
sub
pop
insl
cmp
mov
leave
push
pop
or
stos
dec
add
mov
sub
fwait
nop
hlt
pop
push
adc
jecxz
adc
xor
adc
sbb
insl
sbb
sbb
clc
sbb
les
mov
dec
movsb
test
push
inc
mov
mov
mov
push
clc
in
mov
jl
mov
out
aad
ljmp
aad
inc
jg
sub
shll
lods
pop
mov
mov
mov
xchg
int3
adc
test
inc
out
and
pop
in
push
popa
mov
cmc
or
stc
mov
dec
jb
xchg
scas
adc
jb
mov
add
lock
or
int3
hlt
pusha
popa
fisubrs
stos
and
pop
paddb
sbb
hlt
xor
ds
or
xor
iret
mov
jle
sbb
fs
xchg
aam
jp
and
repz
cmp
add
fdivrl
jnp
xchg
sub
std
and
cwtl
jae
adc
negb
dec
xor
jge
fwait
mov
mov
test
mov
loopne
pop
sub
cmp
arpl
cmpsb
cmpsl
pop
mov
and
mov
out
out
das
lahf
push
jbe
pop
xor
adc
pop
popf
jg
add
clc
das
mov
in
xor
imul
lcall
popa
adc
in
out
shll
dec
cmp
jmp
arpl
fcoms
sarl
pshufw
mov
cmp
cli
mov
shlb
mov
xchg
push
daa
cwtl
movl
cmp
and
sub
bound
mov
stc
add
adc
insb
adc
push
xlat
enter
imul
out
sbb
mov
sbb
shrl
lods
xchg
lock
mov
out
jae
jg
jecxz
fstps
aam
mov
inc
mov
in
xchg
int3
jge
ror
fidivrl
mov
lods
adc
ret
pop
test
ret
addl
dec
outsb
push
push
nop
popa
sti
mov
jg
ds
sbb
jno
hlt
iret
mov
in
neg
aaa
lock
jbe
je
mov
cmpsl
add
dec
xchg
jae
jecxz
or
pop
movsb
dec
shlb
add
mov
jecxz
cmp
mov
adc
rcrb
lds
pop
push
or
insl
or
xor
sbb
cmp
je
in
and
pop
xchg
adc
ja
xchg
pop
pop
pop
cmp
lcall
subl
and
sub
hlt
ss
ss
jb
pop
push
adc
xor
cmc
pushw
clc
imul
sbb
sub
push
incb
rclb
xchg
test
iret
inc
and
xchg
cmp
jnp
cli
adc
ljmp
mov
loop
add
bound
loop
add
cli
movsb
and
cltd
adc
jmp
clc
orl
sahf
mov
insl
add
fistpll
inc
mov
fcoms
jmp
popa
orl
dec
decl
hlt
lock
enter
outsb
mov
or
jl
aad
out
sbb
lret
mov
fnstcw
fcomps
inc
add
sub
jp
filds
sbb
sbb
inc
sbb
insl
push
add
mov
rorb
fwait
mov
fists
jno
insb
lock
aad
xor
inc
sub
andl
negb
lock
xchg
fsubr
sub
sub
or
push
roll
aaa
add
sarl
dec
sub
jbe
push
mov
push
mov
mov
lds
idivl
dec
cmp
mov
imul
pop
dec
sub
jae
add
mov
maskmovq
negl
insl
and
jecxz
sbb
sub
mov
loop
mov
xor
dec
mov
fdivrl
ljmp
jne
mov
into
mov
jp
or
sub
adc
ret
rcll
jbe
loop
fldcw
mov
push
mov
cmp
lods
mov
xchg
lea
test
xchg
and
or
mov
imul
jae
cmpsb
movsb
shlb
call
lret
jno
fistl
in
insb
pop
xchg
shlb
movsl
xchg
insl
push
fcoms
lcall
ljmp
push
rcr
jne
xlat
cmp
jecxz
test
and
outsb
loopne
jge
out
out
mov
xor
xor
pop
mov
and
cmpsl
xchg
pushw
adc
jmp
repz
xor
and
sbb
pop
xchg
add
cmp
sub
ljmp
xchg
mov
sub
pop
movsl
jge
popl
inc
aaa
push
cwtl
mov
inc
or
push
or
dec
das
mov
xchg
xlat
jne
leave
popf
aad
int
mov
inc
cli
fwait
inc
faddl
lcall
test
std
gs
shrl
jl
mov
das
movsb
add
loopne
inc
mov
iret
mov
jg
jnp
push
int
add
inc
xchg
shl
sub
stc
gs
aam
scas
ja
jns
lds
stos
push
shll
pop
sub
mov
dec
and
stc
mov
dec
adc
iret
mov
and
mov
dec
icebp
idivl
pop
ds
sarb
mov
sti
and
cli
cmpsb
in
inc
add
jg
divl
mov
enter
mov
cmpl
fcmovb
aad
pop
push
jecxz
xchg
jle
add
xchg
mov
pop
or
xchg
int
xor
hlt
add
out
stos
hlt
mov
outsb
je
mov
dec
mov
add
jecxz
outsl
outsb
push
mov
enter
xchg
out
adc
mov
lret
aas
js
insb
loopne
xor
imul
test
mov
push
imul
push
push
jne
inc
mov
cwtl
int
rcl
push
das
repz
test
inc
insb
or
jle
iret
cmp
cld
adc
scas
jne
xchg
push
or
clc
adc
pop
orb
mov
inc
inc
xchg
sbb
cld
int3
inc
test
mov
push
fwait
xchg
movsl
dec
push
out
fucomp
cmpl
mov
cmp
jae
or
jo
push
jle
pop
stos
push
jae
pop
dec
jo
sub
add
or
mov
add
mov
incl
roll
inc
jne
imul
insl
outsb
scas
es
icebp
inc
stc
cmp
repz
jge
inc
push
in
data16
xor
int
movl
pop
movsb
xchg
dec
ljmp
mov
mov
ljmp
pop
fwait
imul
in
xor
insb
mov
fisubl
in
xor
push
xlat
cmp
cmp
rcl
je
cwtl
jg
mul
xchg
xchg
inc
cmp
xor
add
mov
test
mov
or
mov
mov
cli
push
push
lret
or
lea
mov
or
mov
je
out
jle
mov
hlt
dec
and
pop
pop
push
and
jae
icebp
stc
cmp
mov
pusha
fwait
aaa
pop
fwait
outsb
or
lds
cs
rcll
mov
sahf
jge
add
enter
hlt
out
fwait
pusha
aam
mov
sahf
lea
xchg
arpl
xor
mov
nop
sub
out
push
jbe
addl
mov
pusha
add
je
addr16
sub
xor
mov
mov
aad
xchg
cltd
mov
je
stc
call
sub
scas
xor
sahf
outsl
xchg
xchg
das
movsb
popa
sbb
test
mov
mov
sub
push
cmp
adcl
push
fildll
add
out
push
nop
mov
mov
imul
pusha
xchg
xchg
movsb
outsl
fwait
cs
ss
mov
scas
xchg
or
jns
inc
subb
adc
lds
enter
cmp
mov
lods
or
dec
out
stc
xor
cmpsb
pop
test
sti
dec
xchg
fsts
mov
mov
add
aaa
divl
stc
sahf
test
sub
sub
jnp
loope
imul
or
loope
insb
jnp
mov
sti
mov
lret
sbb
pop
cmp
ljmp
add
xor
mov
inc
sbb
mov
and
fwait
ret
fstl
dec
cmp
sbb
stc
insb
clc
scas
jae
inc
cld
mov
repnz
pusha
push
add
jns
jno
adc
movsb
test
rorb
inc
aam
lods
mov
fwait
dec
cs
mov
clc
push
jnp
fildl
jnp
ss
lret
mov
xor
sbb
inc
out
repz
test
jo
test
sub
inc
xchg
jbe
pushf
lock
adc
stos
xchg
pop
mov
jno
outsb
add
and
sbb
sbb
cwtl
scas
xchg
lcall
iret
ljmp
das
xor
xchg
add
aas
and
add
sub
faddl
frstor
leave
jnp
fistpll
adc
pop
sbb
enter
into
push
rorl
cmp
cmc
dec
popf
xchg
aas
repz
jp
and
shr
movsb
sbb
test
leave
pusha
jle
mov
test
push
sub
imul
out
inc
sti
dec
test
sbb
jbe
dec
movl
pop
popf
fptan
jmp
dec
shrb
mov
adc
cmpl
inc
jo
mov
inc
sub
icebp
es
jne
inc
jg
or
lret
test
enter
fsubs
shrl
mov
sbb
mov
rcrl
andl
push
aaa
jmp
in
lock
sub
xor
lahf
mov
stos
add
pop
xor
movsl
sarb
into
arpl
scas
pusha
xchg
iret
inc
adc
or
into
dec
fimuls
ja
lea
inc
xchg
cmpb
in
adc
es
jl
cmp
mov
mov
mov
inc
and
xor
and
mov
adc
pop
lret
test
sbbl
mov
push
cli
cwtl
aaa
inc
addr16
push
xorb
jne
incl
push
data16
stc
daa
lods
xchg
mov
nop
add
pop
mov
pop
sbb
leave
push
mov
js
ret
sub
shrl
insl
jbe
clc
ficompl
faddp
hlt
scas
mov
arpl
and
ret
mov
xchg
add
xchg
sbb
cmp
add
push
loope
daa
fisttps
popa
sti
xor
push
sub
test
mov
jbe
loop
jbe
push
add
shr
movb
pop
aaa
cmp
or
das
lds
rcll
scas
jmp
sar
and
pop
adc
pop
testl
or
lock
adc
mov
add
jle
cs
fistps
jno
sbb
or
shlb
cmc
mov
fs
ja
fwait
outsb
inc
loopne
mov
out
daa
xlat
jne
dec
mov
adc
xor
push
nop
cmp
cmpsb
xor
inc
jecxz
les
mov
shll
mov
push
fcomp
and
mov
nop
and
int
std
ss
mov
ss
xor
cmp
daa
cmpsl
cmpsb
loopne
mov
mov
xchg
out
bound
inc
pusha
push
ret
inc
loope
xchg
outsl
jmp
movsb
mov
out
pop
mov
pushf
fwait
jmp
dec
adc
or
sub
mov
lahf
lods
add
add
sub
dec
sub
and
xchg
movsb
insl
or
movsl
and
sti
rorl
jge
mov
push
aaa
leave
cltd
dec
call
jg
pusha
adc
aas
shll
cmp
cmp
loopne
xor
fldcw
out
push
sub
jl
push
sbb
dec
mov
push
mov
pushf
insb
xor
push
lret
xchg
aaa
mov
pop
inc
je
lds
adc
or
lcall
push
mov
or
leave
movsl
jo
sahf
sub
notb
lea
imull
push
stos
stos
scas
and
out
outsl
sbb
dec
lret
ss
out
rcrb
xchg
pushf
add
xchg
adc
xor
jge
sub
mov
mov
push
sbb
adc
pop
out
or
dec
jo
fidivs
pop
inc
mov
and
jo
inc
repz
fs
lret
push
shl
sbb
jnp
shl
pusha
push
pushf
cmp
xor
push
outsb
jne
rcrl
out
mov
cmpsb
movsb
mov
lods
test
loop
outsl
iret
push
inc
cmpsl
shll
mov
jo
jp
add
stos
and
test
mov
jp
nop
push
cmp
push
das
es
pop
enter
inc
nop
enter
pop
enter
add
rorl
mov
pop
xor
pop
adc
pop
xchg
outsb
shlb
sub
fidivrl
jl
jmp
cmpsb
ljmp
imul
jbe
fimull
shrl
adc
cld
cmp
or
jb
sbb
push
jb
test
or
dec
xchg
xor
pop
dec
sbb
test
bound
stos
xorl
popf
lods
xchg
push
pop
mov
ficompl
mov
sub
movsl
and
bound
sbb
andl
and
add
mov
mov
stos
mov
pusha
mov
jle
int3
or
pop
jne
xlat
xor
or
out
xchg
lret
out
xchg
ss
sbb
sbb
mov
mov
ss
adc
rcl
popa
cmc
cmp
mov
mov
xchg
popf
add
sub
mov
push
lahf
stc
lods
ja
das
xchg
mov
sbb
lods
daa
xchg
shlb
mov
cmp
or
iret
imul
and
mov
dec
xchg
insb
outsb
fldl
mov
and
xchg
js
sbb
popa
adc
loopne
xchg
js
int3
xor
push
cmp
mov
rcrl
lds
mov
addl
push
test
adc
pusha
sbb
and
adcl
mov
test
sbb
fistl
rolb
test
mov
xor
lahf
mov
pushf
xor
push
xchg
xor
rorl
adc
fsubrl
add
aam
outsl
adc
xchg
add
rep
mov
push
shll
imul
sub
hlt
ja
test
aam
pop
cmp
or
out
pop
flds
mov
sahf
in
mov
mov
jb
xchg
int3
jno
icebp
in
mov
hlt
and
std
xchg
aam
pop
mov
add
loop
mov
fcoml
aas
adc
int3
popa
das
mov
insl
nop
repnz
addr16
lds
push
jg
rcr
lds
pushf
push
inc
push
test
dec
aas
and
adc
lret
sarl
mov
je
cmpsb
cmpb
aas
jle
repnz
sub
ljmp
inc
fwait
dec
mov
dec
test
out
aas
int
shrb
sbb
enter
pop
pop
pop
rcll
dec
es
mov
cwtl
and
push
sar
out
test
lods
push
or
pop
aad
add
test
lahf
call
sbb
dec
push
lods
cmc
outsl
out
repnz
add
cwtl
dec
out
mov
xchg
dec
mov
pop
sub
push
jns
sahf
test
repnz
lahf
mov
push
or
add
repz
xchg
fists
icebp
cmp
in
xchg
mov
xlat
xor
push
callw
scas
or
nop
push
enter
pop
pushf
lcall
dec
pop
stos
mov
jnp
int3
mov
clc
or
shl
cmp
inc
mov
les
repz
push
pop
shr
fst
sbb
xor
and
mov
mov
lret
inc
and
mov
pusha
xchg
loope
mov
or
or
sahf
sbb
shrb
repnz
jmp
jae
dec
sahf
mov
mov
dec
int3
stos
inc
arpl
jne
faddl
stc
jmp
cli
mov
mov
jne
lds
push
pop
cwtl
mov
xchg
test
test
pop
aam
bound
xchg
xchg
sub
dec
fcomi
cmp
push
add
div
mov
xchg
aas
mov
jp
xchg
aam
fsubrl
jmp
repnz
push
es
popa
xchg
pop
pusha
popf
xchg
shl
and
icebp
frstor
pop
push
aam
sbb
mov
cmp
call
hlt
lahf
adcb
push
lea
negb
pushf
sub
cmpsl
and
jmp
mov
pop
hlt
and
shl
movsb
arpl
cld
sub
push
xchg
cwtl
push
orl
sbb
pop
jne
cmp
iret
pop
pop
sarl
pop
jae
cmp
sbb
ljmp
fyl2x
xchg
xor
push
sbbl
or
jecxz
notb
rorl
xor
jnp
bound
lcall
movsb
icebp
mov
mov
mov
mov
sub
je
into
inc
sub
scas
fdivrl
jne
cmp
icebp
lret
sbb
call
pop
mov
gs
divb
jge
dec
mov
lock
mov
pusha
hlt
pop
loope
xchg
aaa
push
add
push
add
or
scas
call
mov
dec
cmp
fidivrs
push
cltd
xchg
sbb
dec
or
imul
or
into
lahf
and
cltd
lods
cld
lret
out
push
loopne
stc
data16
cmp
jecxz
repnz
add
testl
nop
test
pop
movsb
or
jmp
or
fwait
jae
mov
inc
cld
addr16
mov
inc
adc
mov
xor
stos
inc
pop
xor
add
pop
jb
lahf
je
mov
mov
rcrl
cwtl
add
ja
fldcw
xchg
pop
sbb
xlat
jo
jae
imul
out
push
inc
fmull
cmp
jae
in
jne
les
roll
test
iret
mov
shrl
shr
mov
pop
lcall
adc
imul
mov
bnd
cmpsb
push
test
add
xchg
fwait
mov
push
enter
cmp
or
ja
cmp
ror
sub
fwait
xor
fstpl
sbb
je
fdivr
pop
mov
mov
shlb
ret
xchg
push
inc
inc
push
inc
dec
pop
xor
clc
jne
mov
xchg
cmp
jne
inc
adc
mov
and
mov
jmp
push
mov
xchg
cltd
sahf
stc
pushf
loope
pop
push
push
add
push
sbb
mov
dec
xchg
xchg
push
sti
lea
in
scas
xchg
int3
cmp
bound
push
push
sahf
adc
decl
mov
loope
xchg
int
lods
popa
cld
mov
iret
pop
push
inc
mov
xor
stc
movsb
xlat
sbb
lds
inc
or
add
jns
mov
jecxz
lret
push
lcall
dec
add
push
mov
sub
enter
lcall
mov
xor
add
bound
lds
jnp
repnz
push
data16
lahf
pop
or
cwtl
push
push
adc
mov
mov
dec
mov
scas
cmp
iret
mov
fwait
sarb
push
push
or
lret
cmpsb
jno
in
dec
add
cld
pop
popf
mov
mov
xor
in
inc
sbb
mov
jle
pop
cwtl
subl
push
push
pushf
mov
lahf
jns
fstpt
sbb
xchg
pop
mov
mov
mov
push
ss
dec
inc
adc
xor
cmpsb
push
xlat
mov
push
stc
ja
loope
in
dec
push
pusha
sbb
add
jle
mov
js
push
cs
mov
shll
hlt
jo
xchg
inc
push
stos
sbb
fists
mov
jnp
aad
jmp
push
ret
call
imul
inc
insb
ljmp
sbb
mov
mov
iret
loope
inc
cmpsl
aaa
movsl
stos
xchg
popf
adc
scas
xor
cmp
in
push
sub
inc
and
jp
and
jg
mov
cmp
cmc
gs
pushf
xor
push
andl
test
in
sub
lcall
add
notb
lret
lret
pusha
jg
pop
rorb
jbe
xlat
jp
cmc
fisubl
cs
fs
je
pusha
mov
jne
in
mov
dec
pop
andl
sub
push
jp
jne
or
xchg
hlt
cli
and
sbb
cli
push
arpl
and
and
sbb
into
dec
or
cld
mov
xor
push
sti
pop
pusha
pop
fcoms
popf
dec
mov
xor
pusha
inc
out
mov
cli
scas
add
add
pop
repz
mov
mov
jl
call
and
mov
mov
inc
push
je
imul
mulb
adc
cmp
mov
rcrb
sbb
clc
sbb
xchg
xchg
cmc
or
psllw
mov
mov
int
xor
cwtl
xor
inc
pop
cmp
xchg
enter
fcoml
xchg
push
mov
pop
mov
call
jo
xor
jecxz
lock
ret
cwtl
jnp
jae
mov
arpl
push
inc
cld
mov
push
or
xchg
arpl
mov
add
pop
sarb
addr16
xchg
idivb
push
pop
jns
xor
jmp
stos
notb
das
std
pop
pusha
test
add
jbe
push
sub
xor
fdivl
or
xchg
orl
in
ret
jge
outsb
mov
pop
jg
pop
sub
mov
pop
fnsave
adc
push
pop
push
lcall
fstps
pop
mov
jle
dec
popa
add
shlb
mov
shll
jnp
dec
ljmp
div
orl
adc
je
xor
mov
xchg
mov
xor
gs
cs
lods
adc
xor
outsl
jne
int3
cmp
imul
push
leave
pop
rclb
jns
jp
fmul
jmp
repnz
cmpl
cmp
nop
popf
js
dec
jnp
or
fbstp
cmp
jne
mov
mov
add
aaa
sti
out
ret
shrb
cmp
popa
imul
rclb
ffreep
int
xor
xchg
sbb
movsb
jmp
stc
xor
jae
fistpll
add
fisubs
mov
imul
and
push
out
mov
and
fisubl
dec
call
mov
pushf
sbb
push
inc
add
int
mov
pushf
mov
cmp
cltd
xchg
sub
lahf
adc
sub
lea
adcl
daa
push
push
push
push
lds
fdivrs
pusha
and
repz
push
lret
rcrl
pop
lret
rorb
mov
xchg
adc
sub
mov
push
repz
scas
in
test
in
into
das
jns
lret
fdivrs
ret
pusha
repnz
sbb
dec
adc
dec
xorl
out
add
movsl
xchg
jae
ljmp
sti
cli
cli
mov
test
sbb
icebp
loopne
cwtl
aam
dec
cld
cmp
push
mov
xchg
or
or
int
or
in
xchg
inc
mov
sti
faddl
add
movsb
xchg
add
and
daa
jb
fidivrs
lret
scas
mov
js
and
xchg
mov
lcall
xor
adc
push
fisubl
xchg
mov
lret
loopne
es
sahf
jmp
xor
cltd
xchg
mov
inc
loope
cmp
and
xchg
inc
lahf
fcmovu
add
mov
mov
iret
mov
push
jo
cmp
dec
xor
imul
jb
lods
jo
cwtl
pop
mov
stos
add
das
jle
test
adc
push
gs
pop
sbb
xor
mov
mov
pop
mov
mov
movsbl
fs
insb
in
and
xor
dec
int3
lcall
xchg
mov
arpl
jle
dec
jl
js
dec
nop
sub
les
inc
int3
lock
fcompl
adc
xchg
pop
mov
cmp
out
cmc
mov
test
in
mov
and
mov
adc
fstps
sbb
in
dec
aas
es
inc
jmp
das
imul
jecxz
lret
popa
mov
js
inc
jl
vmovsldup
test
leave
cmp
jp
xchg
adc
je
or
xorb
add
je
cmp
xchg
mov
or
stc
das
stos
add
repnz
ljmp
push
fbld
and
sub
push
cmp
pop
jp
dec
in
je
jae
incl
cmp
jnp
xorl
xor
ljmp
das
arpl
pop
push
xchg
mov
popa
insl
jb
lcall
cmpsl
out
xlat
adc
xor
icebp
and
cld
outsl
cli
loope
mov
mov
adc
out
in
enter
lds
test
cld
scas
push
aad
mov
pop
out
dec
insl
lods
jl,pn
jnp
std
jne
adc
and
xlat
or
cltd
rclb
cld
aad
and
bound
jns
bound
mov
add
or
je
setns
mov
sbb
mov
icebp
mov
cmp
sti
popa
dec
sub
xchg
sub
dec
in
gs
arpl
lods
repz
jne
cwtl
out
je
push
push
lahf
mov
in
add
xchg
sarb
out
pop
jg
outsb
jae
inc
pop
inc
iret
jb
pop
push
pmaddwd
leave
clc
ljmp
add
outsl
out
dec
data16
push
push
mov
mov
adc
push
shrl
movsb
les
stc
sub
jecxz
or
cli
enter
cld
mov
jb
jmp
lds
ret
push
sub
mov
loope
jp
stos
clc
push
sub
dec
sub
hlt
cmp
cmpb
mov
clc
cwtl
sbb
push
push
lds
fmuls
pop
and
and
or
out
les
mov
ss
cmpsl
aam
popa
cltd
test
sub
pop
and
lds
imul
mov
cmovae
dec
mov
cmp
imul
fwait
notb
mov
insb
sti
mov
xchg
pop
mov
mov
cld
push
fistpl
pop
mov
sub
sub
jmp
pop
imul
adc
and
and
mov
rcr
inc
inc
sti
lds
adc
icebp
adc
pop
xor
mov
adc
sahf
mov
rorl
clc
pop
push
das
int
or
pop
fbstp
stc
cmp
jmp
and
sbb
inc
mov
movsb
stos
in
xchg
push
pop
fldl
dec
dec
int
pushf
xchg
sbb
jmp
mov
mov
and
push
jae
sbb
push
pop
not
outsb
lcall
xchg
enter
mov
add
lods
test
mov
pop
sub
test
mov
mov
ds
js
jp
mov
call
ret
pop
and
sbb
or
dec
mov
xor
cmpsl
pop
jb
mov
clc
dec
shrl
in
pop
mov
sub
push
jno
fidivrl
push
loop
inc
sarb
ret
fcomi
dec
mov
pop
je
shl
std
cwtl
and
mov
sarl
jp
xchg
add
ljmp
sbb
cmpsb
leave
xchg
cmp
inc
ss
stos
push
adc
negb
cmc
cli
jge
imull
mov
int3
mov
cmp
sub
jg
fs
mov
cmp
pushf
dec
jl
cmp
fadd
and
mov
orl
mov
insb
cmc
mov
fdivl
popa
xor
es
mov
mov
mov
cmc
pop
loopne
add
mov
sub
push
push
jns
in
or
jp
daa
pop
or
cltd
fisttpl
xlat
push
loop
push
subl
pusha
decb
ffree
std
aaa
or
xchg
pop
and
cli
jae
in
mov
jo
push
or
lock
xor
hlt
adc
jae
inc
cmp
rcll
cmp
inc
movsl
inc
cmp
imul
repz
jae
subl
push
movsb
dec
aad
loopne
or
lret
pop
xchg
stc
and
push
aad
jbe
test
mov
scas
daa
jmp
mov
lock
jecxz
xorb
adc
subb
jne
pop
inc
ror
sbb
repnz
xor
cs
mov
push
mov
mov
imul
enter
loopne
and
jne
jle
into
std
iret
rolb
ljmp
pop
addb
insb
sti
xchg
dec
fwait
in
cmp
jmp
insb
xchg
xor
mov
repz
dec
punpckhdq
rol
inc
xor
lods
sub
subb
inc
je
mov
scas
imul
xor
fs
adc
adc
mov
in
rclb
xchg
cld
mov
aam
sub
adc
test
rep
xor
ret
scas
es
xchg
mov
xor
xor
xor
in
mov
frstor
cwtl
imul
clc
jp
loop
cli
fdivr
dec
fildll
and
cli
inc
inc
call
out
mov
jno
aaa
and
and
in
mov
cltd
cmpsl
cmp
dec
inc
inc
push
scas
jmp
stos
xchg
jecxz
mov
jo
jg
inc
flds
sub
push
insb
fadds
xlat
movsb
mov
subl
xchg
pusha
into
dec
sub
or
mov
push
ret
mov
popf
sbb
adc
cli
pop
adc
jp
into
pop
sbb
cwtl
leave
add
inc
and
mov
xchg
sub
add
mov
adc
adc
cmp
dec
cmp
fstp
fs
pop
pop
pop
inc
test
mov
fists
and
xchg
and
rcr
mov
rclb
xchg
xchg
cmp
mov
into
pusha
dec
xor
dec
mov
out
adc
pop
aam
mov
mov
int3
nop
addr16
inc
rclb
fcoml
sbb
fdivs
leave
into
lods
pop
or
loope
mov
test
lock
push
in
int3
mov
loop
in
int3
and
pop
fstl
mov
mov
add
jnp
dec
push
jns
and
pop
sbb
adc
add
adc
icebp
mov
inc
inc
in
sarl
lds
bnd
dec
pusha
sub
add
cmp
or
in
popf
fldenv
xchg
add
xor
cmp
or
xchg
jmp
cmpsb
mov
loope
sbb
enter
jne
xor
xchg
into
xchg
cmp
mov
jg
and
pushf
lret
js
inc
jmp
aad
cmc
mov
jg
pop
add
or
sub
test
clc
xor
push
outsl
sbb
mov
ss
xchg
stc
cmpsl
mov
sub
sub
mov
jno
push
xchg
add
xchg
std
lcall
in
das
stc
les
push
sti
data16
pusha
movsl
lret
dec
in
xor
dec
aam
and
push
and
mov
cmp
jge
pop
inc
cmpsb
cmp
jns
and
and
fwait
add
and
cmpsb
iret
pop
shlb
movsl
cmp
addb
and
cwtl
out
cmpsl
push
pusha
sub
insl
faddl
jbe
and
out
pop
and
and
push
mov
pop
xchg
ror
push
jno
adc
pop
popf
mov
es
xchg
std
int3
dec
into
dec
xor
sbb
sbb
outsb
int3
sub
mov
cwtl
mov
push
stc
and
push
aad
dec
repnz
push
mov
scas
ja
leave
aad
or
in
pusha
ljmp
int3
dec
popw
adc
repnz
pop
sar
sub
dec
sbb
in
test
ror
xor
subb
arpl
imul
jle
and
cmpsl
push
ret
lahf
ljmp
xchg
jmp
nop
jecxz
inc
ss
push
xchg
sbb
adc
clc
cmp
pop
ljmp
test
push
push
fnstcw
hlt
pop
insb
or
std
shr
jp
push
dec
rcrb
js
pusha
ss
insl
sub
loope
das
sub
insl
stos
and
or
stc
lock
hlt
mov
outsb
jo
test
inc
sub
mov
les
call
dec
cltd
movsb
pop
push
mov
jp
inc
popf
enter
pop
xorb
mov
lcall
movsb
xor
fistl
popa
out
jb
mov
jmp
cld
dec
pop
lcall
jmp
jge
popa
jb
add
jl
or
aas
xor
popa
repnz
sbb
lods
jbe
xchg
ss
xchg
hlt
mov
push
or
clc
hlt
daa
sti
mov
in
fcoml
mov
enter
xchg
aas
add
cli
pop
lods
or
repz
sbb
je
jmp
mov
jns
call
mov
shll
lock
fimuls
int
mov
mov
pop
dec
or
dec
jbe
sti
or
jo
cld
dec
xor
dec
cmpsl
xchg
push
inc
lret
xchg
gs
jg
jmp
xor
aad
and
mov
adc
jne
push
rcrb
lods
lea
inc
lret
push
scas
or
dec
je
inc
jo
aaa
sbb
cmpsl
aam
push
rol
inc
push
pop
inc
out
adc
popf
push
xlat
inc
pop
push
hlt
js
dec
mov
pop
dec
pop
pop
sub
mov
pop
out
lcall
mov
cmp
mov
mov
pop
cmp
xor
jno
popf
pop
out
fldl
cmpsl
or
out
mov
mov
sbb
adc
add
lret
push
inc
push
jg
or
jge
adc
and
bound
lods
push
aas
imul
xchg
dec
stos
cmpsl
fsubl
repnz
lock
arpl
push
jo
push
imul
xchg
jnp
pushf
fisubl
into
xor
mov
popf
adc
lahf
push
push
je
sbb
test
lret
insb
stos
push
int3
jo
xor
cmpb
push
cmp
addl
sbbl
imul
xor
cmp
pop
movsl
loop
xchg
popf
adc
jge
or
fistps
inc
and
pop
sbb
subl
cmp
leave
sub
std
mov
aaa
and
mov
add
sahf
and
mov
hlt
inc
ss
xor
mov
mov
mov
xorb
ss
lods
sub
je
and
jge
pop
or
leave
pop
sbb
mov
dec
loop
test
push
sahf
and
mov
ret
iret
insb
clc
nop
aam
iret
int3
mov
sbb
fstpt
shl
mov
ficompl
or
or
dec
scas
dec
pop
dec
out
test
sub
inc
cs
stos
mov
mov
push
inc
iret
lds
loope
xlat
xchg
pop
push
xor
movsl
dec
and
sub
xlat
push
adc
popa
ss
ljmp
daa
mov
mov
nop
push
leave
stos
push
cmp
hlt
xchg
adc
rorb
push
add
sbb
inc
pop
popf
repnz
sti
lods
mov
dec
pop
mov
sub
movsl
int
xchg
enter
int3
inc
xor
in
arpl
xchg
sbbl
lahf
mov
lods
xor
repnz
push
rcrb
xor
les
xor
push
dec
xor
xor
sub
rolb
and
fs
and
outsb
cmpsb
lahf
imul
pop
or
out
sbb
ljmp
lret
test
fisubs
ffreep
mov
push
cmp
mov
stos
jg
insb
lcall
mov
jo
xchg
dec
lret
testb
xor
in
in
lahf
aas
push
imul
xchg
mov
xor
sub
mov
xchg
xchg
ss
mov
scas
int
mov
lret
pop
lea
add
pushfw
inc
imul
sub
mov
jmp
fimull
sub
jb
push
les
xchg
xchg
cli
call
stos
push
mov
xchg
fimull
icebp
sysenter
aaa
jb
push
subb
popa
push
nop
aas
sahf
xchg
scas
testb
rclb
repnz
push
push
stos
mov
pop
pusha
xor
mov
fsubr
fwait
daa
icebp
xor
sbb
mov
call
inc
loope
dec
xchg
mov
xor
popa
inc
rcll
and
inc
popf
cmpsb
mov
mov
dec
pop
repz
push
mov
mov
push
push
andl
and
fsubl
aad
cli
shll
adc
aam
lcall
sub
adc
les
sbb
aaa
scas
xor
mov
dec
inc
repnz
in
jo
ljmp
pop
xor
xchg
dec
in
addl
adc
inc
push
sub
out
movsb
add
jl
mov
or
enter
mov
mov
fistpll
jg
div
adc
pop
xchg
stc
sbb
mov
repz
icebp
push
xchg
scas
lcall
loopne
pop
mov
add
mov
adc
in
outsb
outsl
cld
jb
add
jae
js
push
and
and
loop
sub
cli
inc
cmp
addb
inc
insl
push
aad
pop
mov
jo
loop
enter
and
mov
dec
out
jb
iret
aas
test
xlat
mov
loop
in
jbe
rcrb
test
jg
jbe
ss
push
jb
mov
xorb
pop
mov
dec
ja
push
fisubrs
ljmp
inc
nop
cmpsb
lret
push
mov
pop
ret
pop
repnz
cld
lret
lret
int3
clc
popf
add
lock
mov
add
faddl
xchg
test
mov
pop
loop
xchg
xor
repnz
leave
lods
sbb
dec
ret
testb
push
sub
sbb
adc
dec
les
dec
jo
aam
pop
sub
stos
or
or
xchg
fucomi
add
mov
add
div
jae
lods
jb
add
test
mov
rcrl
sub
push
loopne
push
push
jns
mov
jno
jns
push
mov
gs
aad
je
add
mov
push
inc
jo,pt
sbb
js
ror
into
push
pop
out
ret
mov
sbb
fwait
inc
rcrl
repnz
aaa
mov
js
adc
stos
lahf
aam
xorl
mov
aad
daa
and
stos
cld
in
test
outsl
aaa
popf
mov
cmp
mov
movsl
jo
aad
mov
mov
add
add
and
in
lret
push
pop
mov
lods
pushf
mulb
or
inc
loope
adc
mov
mov
in
inc
pop
mov
adc
movsl
in
add
ljmp
in
lds
decl
gs
shrb
inc
test
sub
xorb
sub
lret
sub
jnp
insb
push
ret
arpl
push
and
inc
mov
sub
js
sbbl
sub
jecxz
or
sti
xchg
cmp
addr16
aaa
movsb
lock
sub
xchg
sbb
xchg
daa
mov
aaa
scas
inc
lret
jle
es
ret
fidivl
dec
test
jmp
xorb
dec
out
imull
ljmp
add
lds
inc
stc
stc
sbb
add
insl
mov
mov
fucomp
add
pop
lds
inc
cli
mov
flds
inc
inc
ja
je
std
cmp
cwtl
fldl
jns
xlat
incb
mov
lret
push
aad
mov
icebp
xor
scas
cs
jecxz
mov
dec
cmp
and
out
hlt
hlt
mov
jp
jp
fucompp
fwait
aam
sahf
mulb
mov
jl
in
aam
sub
test
sub
dec
jo
ds
sbb
and
push
jmp
push
loope
cmpsb
xor
sbb
loop
xor
ror
adc
inc
into
outsl
movsb
xlat
xchg
outsb
mov
jne
xchg
test
add
cli
push
ljmp
sub
cli
scas
aad
jle
cli
hlt
dec
mov
ds
sbb
jmp
add
jl
iret
jg
cwtl
jge
insl
es
out
fcompl
push
ret
aad
push
mov
xchg
insl
test
inc
scas
iret
addr16
call
adc
faddp
orl
push
push
jecxz
insb
sub
adc
mov
adc
movsl
cwtl
cmpsb
jbe
mov
push
sarb
ljmp
push
call
xchg
out
inc
iret
rolb
cmpl
mov
cmp
in
add
inc
mov
pop
cmp
jmp
pop
and
mov
mov
es
test
xchg
daa
adc
out
fildl
inc
add
pop
xor
icebp
push
scas
es
sub
inc
mov
push
dec
mov
dec
pusha
pop
stc
movsb
or
mov
repz
mov
push
sbb
xor
in
or
divl
push
or
xchg
xor
sbbb
adc
out
mov
dec
cmp
stos
push
sbbb
cmp
xchg
xor
into
xor
cmp
adc
out
add
sbb
adc
push
cmp
inc
dec
add
jb
sbb
pusha
repz
pop
inc
push
divb
mov
loopne
xchg
xor
jae
daa
lea
xchg
les
cmpsl
push
aas
cld
pop
pop
mov
sub
mov
sbb
test
pop
int3
mov
int
gs
xchg
testl
cmpsl
sub
mov
jo
shlb
cmp
adcb
stos
dec
repz
mov
jae
pop
push
ss
jp
fbld
mov
mov
adcb
sbb
jmp
loope
cmp
pop
or
inc
sbb
inc
mov
inc
jae
test
in
cmp
insl
and
lds
fmulp
shlb
sti
iret
pusha
cmp
rcrl
insl
and
mov
movsl
mov
pop
test
xchg
sub
sahf
loope
cmp
cmp
sbb
nop
scas
lahf
lret
or
push
jno
push
imul
orl
push
mov
fldt
lcall
sbb
pop
inc
aam
int3
rcrl
adc
jae
fimull
mov
dec
mov
movsb
xchg
push
loopne
aaa
iret
imul
inc
subb
cmp
cmp
dec
cmp
inc
sbb
sbb
push
sbb
js
or
test
dec
int3
stc
loopne
xchg
inc
enter
in
add
fmuls
xor
ret
dec
lods
out
mov
es
cmp
aaa
pop
lds
fs
cltd
out
int3
fldcw
pop
jne
shl
pop
test
fistpll
mov
pand
pusha
mov
popa
push
pusha
popf
sub
je
xlat
jns
lods
hlt
hlt
mov
ljmp
dec
in
xchg
loop
mulb
jp
ror
rcrb
push
jae
jg
xchg
or
out
cwtl
fwait
lods
cltd
ds
inc
repz
clc
repz
insb
push
push
dec
mov
xchg
mov
mov
adc
add
push
xchg
das
es
push
and
clc
inc
lods
insl
ret
xchg
push
in
inc
shl
push
imul
push
mov
lahf
push
shlb
ljmp
leave
repz
mov
and
inc
cs
add
mov
jo
jns
ss
jge
icebp
xor
add
push
adc
fwait
jecxz
or
jp
das
jb,pt
popf
sub
and
pop
test
call
or
sbb
inc
dec
and
js
xchg
jbe
jno
add
adc
inc
je
dec
pushw
mov
orb
xor
shll
shlb
lea
jecxz
xchg
jno
xor
popf
pop
je
pop
sbb
les
andb
pushf
push
push
lock
xchg
jne
mov
mov
push
je
mov
cmp
xchg
outsl
iret
jle
add
xor
popa
insl
pop
sub
dec
push
nop
data16
pushf
jae,pt
in
scas
stos
sub
adc
loop
mov
in
mov
fdivrs
lret
je
xchg
xor
mov
and
mov
popf
jecxz
out
adc
sub
xchg
sbb
mov
sti
dec
aaa
imul
cld
add
test
lret
cmpl
adc
xchg
shll
cmpsl
dec
loope
inc
cli
in
in
xor
fists
aas
scas
fsubl
add
fstl
aas
mov
sub
sbb
xchg
cwtl
gs
mov
std
push
ret
shrb
mov
push
adc
push
inc
fisttps
std
dec
adc
sub
mov
pop
or
fcompl
mov
enter
in
nop
loope
jnp
and
insl
loop
scas
push
mov
and
icebp
jo
mov
stos
push
inc
fldt
mov
gs
fildll
movsl
insl
pop
and
test
or
adc
adc
cltd
ret
pop
jns
int3
test
aam
and
add
push
hlt
test
sbb
pop
or
cli
gs
mov
dec
es
adc
push
jo
push
mov
fistps
and
pusha
repz
mov
xor
jns
aaa
mov
xchg
sbb
out
pop
or
add
xor
in
out
add
lods
lods
cwtl
cwtl
add
sub
jp
das
or
and
mov
jecxz
mov
add
scas
sbb
in
test
adc
imul
push
popf
mov
mov
lret
jnp
jg
ret
mov
cmp
and
xchg
mov
pop
inc
cmpb
sub
xchg
test
jl
cmc
imul
fnstenv
push
das
cmp
mulb
sub
jne
jmp
out
sbb
movsb
rcl
add
movsb
xor
xor
cwtl
aam
dec
pop
adc
cli
pop
mov
fwait
ja
test
je
mov
sti
push
lret
pop
push
mov
insb
cmp
and
arpl
or
test
and
loopne
in
loope
adc
cmp
xchg
xor
popa
dec
or
fcmovb
shl
je
in
lds
inc
loopne
jo
jns
mov
lock
lods
mov
fdivl
dec
iret
jns
mov
pushf
fistps
std
sub
xor
testb
xchg
fcoml
ss
push
popf
mov
ficomps
mov
out
out
mov
sub
mov
lock
movsl
mov
addr16
add
dec
stos
andb
mov
hlt
push
and
cmp
addr16
lret
add
inc
mov
and
fsubl
in
jne
sub
lret
das
jns
or
mov
lret
adc
sbb
push
jbe
or
jp,pt
cmp
sbb
dec
inc
dec
movsl
mov
cmp
xor
push
mov
addr16
pop
sbb
icebp
ljmp
cmc
arpl
adc
gs
pop
mov
sub
push
leave
cmp
adc
cmpsl
std
pushf
xchg
xor
mov
in
hlt
add
fwait
cmp
jb
popf
add
dec
fwait
shr
dec
mov
bound
xchg
fidivrl
pop
movsl
sub
jle
xchg
rcl
xchg
or
pop
mov
dec
mov
and
mov
jo
adc
fists
les
push
dec
push
icebp
jbe
lock
sbb
xlat
popa
and
addb
leave
sbb
inc
xor
loop
mov
and
cmp
into
xor
adcl
xchg
in
pop
pop
in
jp
push
jmp
mov
mov
jmp
in
mov
loopne
pop
inc
xor
mov
jp
jge
int3
std
cltd
lret
cwtl
fs
add
jecxz
int3
jge
xchg
mov
cmpsl
xchg
sub
fsubr
adc
shr
cmp
xchg
add
movsl
cmc
xchg
mov
push
out
test
push
daa
inc
arpl
test
push
jge
cmp
fistpll
push
inc
push
enter
imul
cmpsl
aaa
xchg
stc
out
sub
mov
and
shrl
shlb
xor
loop
cmp
iret
push
mov
out
insb
mov
js
fnstcw
mov
out
inc
pop
mov
insb
push
xchg
xchg
pop
data16
push
pop
sahf
mov
mov
aad
sbb
gs
mov
movsl
adc
rcrb
pop
test
js
or
pop
into
cmp
in
jg
in
or
aaa
and
aam
push
pop
pushf
sub
jnp
sub
pop
mov
sub
movups
xor
and
bound
insb
fsts
cmp
jae
out
or
mov
cmpl
mov
lret
pusha
sarl
enter
popf
mov
cs
mov
push
adc
shll
dec
lret
or
mov
dec
push
or
lds
dec
pop
mov
inc
cmp
loope
leave
lods
or
mov
adc
aaa
popa
popf
inc
cmpsl
jg
ds
insb
sub
insb
dec
dec
rsqrtps
gs
pushf
push
push
pop
cmpsl
loop
stos
cmp
clc
nop
mov
push
sub
lcall
notl
or
sub
lods
jb
icebp
loopne
xchg
test
inc
sbb
jp
xlat
into
js
sbb
xlat
dec
mov
out
add
cmp
rclb
int3
jge
gs
cmp
mov
xor
adc
fistl
test
inc
mov
pop
cltd
sub
cwtl
pushf
ret
push
loop
mov
sbb
aas
bound
mov
mov
je
cmp
enter
push
sbbl
ja
movsl
pop
push
pop
hlt
mov
in
cmp
mov
sbb
xor
dec
mov
push
or
movsl
mov
push
mov
or
lock
mov
cwtl
push
sbb
fsub
and
jno
cmp
test
mov
mov
ds
adc
cmp
cmp
shrb
xor
loop
dec
xor
dec
sbb
jecxz
adc
gs
aaa
pop
xchg
test
addr16
test
fdivs
ds
xchg
xchg
inc
mov
rcrl
dec
adc
sub
xor
add
mov
das
cwtl
lahf
cmp
lret
shrl
test
and
mov
push
arpl
cmc
and
mov
mov
flds
hlt
push
jno
mov
cld
inc
sahf
push
mov
jmp
inc
or
cmovo
jae
sub
scas
jo
mov
xor
mov
dec
push
loope
jbe
cmp
mov
pop
stos
repnz
ja
dec
xor
cli
jne
test
inc
mov
pop
mov
dec
repnz
or
popl
mov
stc
pop
insl
test
mov
push
int3
dec
pop
in
xor
xchg
data16
or
cmp
les
int3
pop
lcall
add
int3
sbbl
aam
push
adc
in
aad
push
lret
sbb
add
lahf
ret
aad
rolb
dec
loope
pop
dec
dec
sub
iret
std
jns
mov
adc
int
mov
in
cs
adc
js
pusha
popf
aad
inc
inc
xchg
push
push
cmp
mov
cmpsb
gs
push
stos
push
mov
jg
pop
jl
inc
dec
fsubr
cmp
insb
dec
xchg
push
aaa
mov
pop
int3
lods
push
mov
jb
or
pop
jp
xchg
push
jge
xor
sub
aad
and
ds
adc
scas
xorb
shrb
subb
jle
in
ja
sub
inc
shlb
mov
in
mov
test
fnsave
mov
add
jo
aam
pop
bound
pop
aas
mov
in
add
je
insb
out
cmpsb
mov
mov
jmp
clc
cli
hlt
test
mov
ret
sub
dec
sbb
js
sbb
adc
adc
test
std
fs
aaa
inc
cwtl
xor
adc
sarl
dec
cmp
fldt
cli
jb
in
pop
adcb
es
pop
stos
sub
rdmsr
push
cmp
imul
repnz
jbe
cld
daa
es
std
sub
xchg
iret
pop
cmp
xor
inc
xchg
xlat
clc
push
insl
inc
addb
adc
cmp
in
mov
dec
xor
test
test
mov
jle,pt
push
fdivrs
mov
sti
in
xor
stc
fs
xor
mov
cld
in
pop
inc
cmpsl
mov
ja
incl
stos
aam
and
push
mov
dec
or
xor
fwait
sbb
daa
sti
dec
int3
mov
push
imul
enter
mov
cwtl
int3
sbb
jnp,pt
mov
fmull
mov
fdivl
sti
or
fcmovnu
pop
nop
imul
shll
gs
mov
outsb
popa
xchg
mov
pop
js
divb
push
sub
lods
xchg
cli
xchg
icebp
cmpl
aaa
jno
test
adc
decb
adc
shl
movsl
fidivs
inc
xor
aam
jge
sub
mov
cs
test
stc
lds
andl
rorl
mov
dec
sub
or
inc
mov
or
xor
jge
orl
test
push
or
into
xor
or
pop
addr16
sbb
cmpsl
mov
jns
add
push
movsbl
push
xor
push
lods
es
into
lret
inc
fnsave
arpl
mov
imul
mov
fistpl
icebp
push
bnd
cwtl
rcrb
mov
mov
ljmp
ss
xlat
cmp
push
add
or
adc
imul
sti
lock
int
mov
push
les
mov
mov
mov
pop
ds
scas
roll
adcb
dec
inc
xchg
mov
mov
ljmp
jbe
mov
jb
cmp
fadds
mov
outsb
or
out
rol
xchg
jo
testb
loopne
mov
dec
adc
adc
adc
lea
sub
imul
inc
fmull
or
outsl
adc
pop
inc
mov
movb
sbb
or
bnd
push
lahf
lret
sahf
dec
xchg
aam
xchg
popf
jbe
add
adcb
int
add
imul
or
outsb
cmp
addb
cld
popa
out
pop
push
cmp
shrb
insb
sub
inc
jno
lcall
scas
and
lret
movsl
jmp
dec
out
adc
rcrl
dec
and
cmp
push
sub
fcoms
mov
test
fistpll
mov
jno
ja
xchg
inc
out
fnstsw
ljmp
push
push
les
pop
mov
scas
mov
movsb
fsubs
negb
aaa
or
rcr
imulb
sub
mov
fidivl
fcoms
punpckhbw
sub
arpl
lock
sti
cmp
in
gs
das
jnp
cmp
adc
xlat
clc
lock
jns
xchg
pop
repnz
xor
xlat
scas
movsl
mov
nop
adc
leave
xor
ret
mov
fwait
sub
push
or
pop
fstps
lock
fcoml
mov
int3
fdivr
mov
fnstenv
pop
mov
mov
xor
mov
mov
xchg
cmp
inc
cltd
imul
aaa
les
pop
pusha
out
dec
dec
jl
ds
mov
ret
add
adc
lret
stc
call
push
or
dec
or
pop
xor
std
dec
loope
inc
outsl
sub
repz
and
sub
push
cwtl
pop
scas
lcall
mov
loope
test
jb
dec
sarb
and
mov
fadd
adc
out
sbbb
shr
dec
das
xchg
std
ss
ljmp
popa
ja
mov
push
stos
cmp
sub
nop
mov
mov
sti
dec
imul
subb
mov
addr16
mov
xchg
lods
jno
lods
sub
jge
cmp
xchg
mov
cmp
pop
dec
push
ljmp
int
fs
jl
sub
rcrb
jae
cmp
movsb
push
ficomps
repz
mov
sbb
mov
dec
cmpsl
popf
jnp
xor
jle
lea
jo
sbb
popa
scas
lea
adc
jmp
push
lods
push
gs
and
loope
aas
out
add
out
aam
mov
cmp
lahf
lock
test
or
popa
xchg
or
cs
cmp
outsl
xchg
aaa
iret
xlat
xchg
xor
xchg
fs
sbb
incb
mov
fs
mov
pushf
das
shlb
xchg
or
lods
mov
nop
enter
sub
out
mov
pop
sub
push
in
mov
jnp
sbb
fs
or
iret
push
aas
test
mov
out
pop
jae
jge
mov
jo
mov
into
mov
jle
lods
push
ja
cli
add
push
call
pop
add
xorb
or
jecxz
add
movsb
jg
in
xchg
add
xchg
dec
push
out
jb
es
call
ret
repz
ret
sbb
inc
mov
or
push
xchg
xor
push
adc
mov
nop
imul
js
and
and
test
mov
or
gs
hlt
aas
push
pop
sub
scas
lods
jae
imul
ret
jp
mov
and
ja
inc
fsubrl
fs
fdivs
sub
pop
mov
movsb
cmp
and
sar
ja
ds
mov
cmpsb
or
mov
mov
das
in
or
iret
xchg
add
fidivs
dec
dec
mov
push
in
or
lock
xlat
shll
cmp
push
stos
jp
mov
mov
add
xchg
repz
push
add
xchg
pop
sub
inc
sub
out
imul
adc
shlb
pop
loopne
jmp
ds
jle
ljmp
jnp
xchg
and
jnp
and
xchg
outsl
loop
hlt
mov
outsb
pop
rcll
and
lret
jecxz
cltd
adc
imul
or
or
jo
aam
xchg
push
xchg
faddl
div
iret
mov
xlat
mov
lcall
jecxz
push
xor
or
pop
dec
sbb
fs
in
mov
cmp
outsl
dec
inc
jns
leave
out
xor
ret
sarl
sbbb
push
sub
sbb
or
jae
cli
lret
outsl
insw
xchg
inc
xor
xchg
dec
aaa
sbb
inc
jp
sar
je
fs
jns
push
testb
sub
jl
lret
push
mov
xorl
mov
mov
test
xchg
or
inc
mov
mov
sbb
rorl
and
sbb
mov
mov
fnstenv
and
insb
push
je
mov
pop
aam
out
mov
in
fiadds
mov
dec
sbb
fs
loop
cltd
cmpb
push
xchg
lock
push
jno
jo
inc
pushf
dec
mov
lds
nop
add
in
mov
mov
daa
shld
mov
mov
mov
cmc
call
mov
cmp
pop
fidivl
or
enter
mov
jmp
inc
rcrl
mov
sbb
ds
in
daa
xor
ljmp
mov
xchg
aad
lcall
xor
sub
loop
dec
xor
out
int3
cmp
outsb
push
push
push
jmp
xchg
std
fiadds
rcll
xchg
push
mov
cmp
nop
pop
in
xchg
scas
adc
push
push
inc
mov
insl
jne
and
into
mov
jne
jo
loopne,pt
pusha
hlt
push
push
inc
das
mov
test
mov
call
inc
mov
ss
fcmovnb
loopne
js
sarb
cwtl
fs
add
pop
lret
rolb
inc
nop
push
pushf
leave
pop
in
movb
xchg
and
inc
fnstenv
jae
push
pop
cmp
xchg
aaa
outsb
sbb
add
add
mov
cmpsb
in
jo
jbe
mov
xlat
jno
dec
sarb
test
adc
xor
push
add
aam
sbb
inc
inc
xor
call
out
fnstsw
stc
pop
or
sbb
pop
xchg
shll
pop
int
jecxz
sbb
inc
aad
scas
or
sahf
cli
or
lcall
mov
sar
ja
mov
mov
add
mov
xor
imull
jns
push
lea
xchg
std
scas
sub
stc
pop
sub
xor
push
insb
add
dec
test
ds
lods
insb
mov
fs
sub
jb
outsl
in
pop
inc
xchg
push
or
add
jecxz
cmp
int
dec
clc
testb
sub
leave
int
out
cmpsl
mov
pop
inc
sbb
mov
movsb
scas
pop
fimuls
insl
dec
xlat
insb
fimuls
idivb
call
int
pop
nop
mov
mov
mov
pop
pop
dec
mov
neg
jmp
addr16
in
into
fcmovnbe
sub
cmpsb
es
lea
jle
inc
add
cmp
imul
cmp
mov
mov
daa
aad
mov
hlt
into
insl
shrb
pop
mov
xor
enter
add
dec
divl
pop
out
jl
xor
dec
add
lret
loop
arpl
and
fiaddl
xchg
jp
imul
popa
out
inc
jns
xlat
sbb
mov
imulb
sbb
sbb
shrl
jmp
int
add
jnp
in
mov
add
rolb
test
add
xchg
ja
add
or
clc
push
aaa
jo
and
mov
pop
sub
or
push
idivl
xor
test
pop
clc
sub
inc
insb
add
jb
jbe
lods
loopne
lret
inc
movsl
mov
xchg
icebp
in
call
mov
jne
mov
and
dec
lret
in
xchg
mov
or
pushf
in
ljmp
or
sahf
jecxz
daa
mov
cmp
jge
jecxz
sbb
cmc
and
stos
add
and
add
cld
lahf
or
mov
jmp
push
xor
jns
stos
mov
add
inc
mov
sbb
inc
movl
out
or
sub
cli
push
ss
adc
jnp
hlt
dec
ljmp
pop
sub
hlt
mov
sbb
add
add
addr16
rolb
js
xor
xchg
nop
pusha
adc
idivl
xor
fdivr
and
pop
ljmp
cmpsl
pop
sub
je
mov
push
jo
clc
adc
aaa
out
mov
xchg
rol
ror
mov
das
pop
sub
aaa
out
or
cvtps2pd
dec
insl
out
ljmp
test
xchg
xchg
sti
add
dec
dec
pop
mov
cmp
cmp
lcall
call
enter
negb
arpl
pop
fwait
jb
cmp
jl
pop
mov
cltd
fsubrs
jnp
push
repnz
xlat
lods
stos
lock
ljmpw
jb
push
sub
popl
sbb
aaa
lds
cwtl
jns
or
in
mov
pop
stos
loopne
iret
sti
jg
imul
leave
xor
sub
ret
mov
popf
jae
in
enter
pop
mov
mov
lods
rcl
pop
mov
push
adc
add
dec
fwait
pop
push
pop
cwtl
add
mov
int3
testb
out
repnz
nop
pop
sti
push
add
dec
fnstenv
sbbl
mov
imulb
stc
ljmp
dec
xchg
mov
icebp
testb
outsl
sub
push
mov
inc
mov
mov
jo
divb
adc
outsl
fstps
outsl
sbb
jle
out
ljmp
adc
popa
mov
sbb
push
push
or
movsb
jp
push
cmpb
jg
aas
push
xor
push
mov
out
mov
and
in
mov
mov
pusha
mov
sub
or
jo
push
fadds
ja
mov
inc
test
inc
cld
jp
inc
push
andl
add
lret
sub
and
addr16
and
aaa
sub
imul
cmp
dec
jb
stc
xchg
clc
sub
fisubrs
sub
push
sbb
dec
jno
dec
fwait
xchg
repnz
push
lret
popl
cli
ja
decb
ljmp
stos
inc
mov
fstl
push
lds
sbb
sbb
mov
xor
mov
mov
xor
aad
scas
mov
insl
push
mov
cmp
xchg
rcrl
loopne
mov
xchg
arpl
fistpll
daa
jno
sub
sbbl
add
lret
fmuls
iret
hlt
pmaxsw
adc
jo
dec
add
xlat
pop
dec
xchg
add
mov
fldenv
mov
xchg
ljmp
test
jmp
call
mov
out
rcll
xchg
rcr
incl
sub
data16
add
sbbl
in
jns
fcomps
cmp
adc
inc
int3
enter
adc
xchg
leave
and
mov
bound
xchg
mov
lahf
test
jge
hlt
lods
insl
stos
jp
fldt
imul
mov
sbb
and
push
sub
call
pop
push
enter
mov
inc
insl
mov
inc
and
jmp
popf
or
or
repnz
add
and
push
aam
test
or
cld
ljmp
sub
ficompl
mov
mov
push
inc
mov
test
xor
bound
push
inc
pop
je
in
push
sbb
sbb
imul
jb
cmp
lea
cld
mov
pushf
xor
mov
pop
sahf
xor
stc
gs
rcrb
mov
and
repz
je
negb
rclb
mov
test
jg
jo
lds
and
scas
sub
push
push
mov
fistpll
int3
push
and
jbe
cmp
insl
rolb
out
ja
test
jae
mov
roll
jae
mov
loop
andl
shll
imul
jo
std
dec
loopne
mov
jo
jne
push
imul
aam
sbb
jae
push
jge
and
jg
dec
adc
pop
mov
mov
fcomps
jl
mov
loop
mov
bound
in
hlt
out
insb
mov
dec
jmp
pop
push
jnp
cs
daa
fldl
or
inc
and
push
repnz
loop
jne
lret
fidivrs
filds
sbb
cld
mov
push
jecxz
push
xchg
out
cmpsl
or
fisubl
mov
sti
mov
jb
mov
jmp
sbb
fiaddl
and
movsl
cld
in
mov
sbb
mov
cld
cmc
hlt
mov
sub
jne
inc
and
xchg
push
add
sbb
jae
lahf
mov
mov
cmpsl
jno
insb
inc
sbb
push
mov
sbb
xchg
ret
xor
xor
push
mov
jbe
les
xchg
ljmp
imul
adc
dec
movsb
inc
push
fstl
aaa
icebp
sahf
call
fwait
lods
inc
lret
push
jae,pn
sbb
cs
sysexit
inc
loop
mov
inc
dec
mov
or
xchg
cs
shll
jbe
inc
sbb
scas
or
add
shr
jp
lret
out
mov
xor
stos
mov
xor
out
mov
sarl
das
push
call
dec
push
or
cmp
mov
sarb
stos
xchg
stos
mov
dec
mov
into
push
fisttpll
shr
pushf
aad
xchg
adc
mov
pop
bound
xor
pusha
outsl
and
aas
mov
and
sub
jns
cmp
push
cmp
stc
dec
xor
xor
jb
xor
inc
add
jmp
mov
shrb
jg
dec
rcrb
and
and
pop
ffreep
icebp
jbe
cmp
pop
or
mov
arpl
or
cmpb
sahf
mov
movsl
sbb
aad
dec
cmp
insb
xor
xor
clc
or
xor
mov
lds
cmp
push
pop
cmp
mov
add
sbb
push
sub
push
sbb
pop
mov
fucomi
xor
mov
std
xchg
sub
and
sbb
jl
mov
push
or
mov
pop
fmull
leave
push
cs
cmp
or
outsb
iret
xchg
mov
xchg
cmpsl
xchg
loope
xchg
sub
add
push
pop
adc
mov
dec
xchg
stos
mov
push
sbb
push
and
arpl
inc
pop
mov
adc
mov
enter
adc
sub
xlat
shll
push
rolb
inc
mov
push
push
xor
adc
mov
dec
push
adc
lea
and
in
shll
dec
aam
jbe
jns
cli
jg
repz
cli
push
mov
pop
movsb
ss
adc
jo
int
lcall
icebp
sahf
push
aad
test
and
sti
xor
mov
jbe
cwtl
mov
fs
sub
sbb
xchg
pop
scas
repnz
leave
pop
insb
mov
xor
ljmp
lds
mov
add
dec
icebp
js
mov
stos
cmpsb
push
nop
negb
bound
or
mov
adc
xor
xchg
add
adcb
std
hlt
imulb
push
repnz
xchg
sbb
and
xchg
add
and
arpl
in
mov
dec
add
jbe
mov
je
mov
jnp
fiadds
adc
jno
andl
popf
push
arpl
and
out
addl
lret
dec
cmpsl
jmp
inc
sbbl
inc
cli
in
adc
jbe
dec
sti
xchg
mov
mov
pop
outsl
or
cli
xchg
jo
xchg
outsl
popa
and
lds
push
cmpl
pop
clc
lds
arpl
push
in
and
cs
cltd
inc
testb
adc
inc
aaa
stc
xchg
sti
mov
repnz
in
jo
sbb
add
outsl
xor
scas
dec
pop
pop
ficomps
ss
dec
js
leave
push
lods
pop
pop
cmc
sbb
push
xchg
shlb
push
shrl
in
data16
ljmp
jecxz
dec
xchg
stc
adc
sbb
fwait
jmp
sbb
bswap
add
adc
pop
adc
loope
mov
repz
jb
xlat
and
jle
mov
xor
adc
test
jg
pop
inc
and
mov
aad
push
xchg
je
xchg
push
hlt
push
or
je
jbe
call
xchg
insb
movsb
push
fcoml
dec
mov
jne
sbb
icebp
mov
xor
ljmp
jecxz
sbb
lock
jnp
sbb
mov
jmp
and
loope
jle
sbb
rcrb
cltd
push
dec
out
cmp
rcl
and
jmp
cmp
cmp
notb
shll
mov
xor
inc
jne
and
cs
and
sti
xchg
sub
xor
jne
outsb
sbb
std
into
and
sahf
push
shrl
push
xchg
shr
ja
mov
ljmp
mov
sub
pop
pop
jns
xchg
jmp
data16
movsb
dec
jmp
xor
pop
add
inc
xchg
movsl
pop
and
imul
in
dec
stos
push
dec
mov
lret
push
or
xchg
mov
adc
cmp
adc
xor
in
push
test
int
push
push
xchg
mov
cmp
ljmp
mov
les
int3
xchg
sbb
cltd
outsl
aam
pop
xor
pop
adc
jle
jge
pop
inc
xchg
lds
rcll
dec
sbb
fcmovb
repnz
arpl
jl
inc
mov
push
and
push
sub
test
or
std
pop
pushf
mov
xor
sti
xorb
inc
xor
stos
sbb
mov
push
out
sbb
sar
ss
inc
je
dec
jmp
fwait
es
sbb
not
ds
xor
sahf
mov
mov
testl
inc
add
add
jns
mov
mull
push
sub
jbe
add
add
push
mov
lcall
hlt
cmp
ror
mov
test
mov
scas
mov
xor
inc
adc
push
mov
sub
adc
xchg
stc
adc
mov
lea
mov
cmp
js
or
lahf
pop
stc
push
lods
cltd
pop
push
jb
mov
xor
popa
lds
adc
mov
sbb
ss
cwtl
sbb
push
xchg
and
xchg
faddp
lret
sub
push
sub
inc
jl
xchg
push
xchg
cwtl
cmp
lods
inc
test
lods
cmc
je
pop
inc
fucomp
test
or
ds
negl
outsb
imul
inc
mov
insb
pop
mov
push
xchg
jmp
jg
mov
into
add
mov
insl
leave
dec
pop
sbb
jge
push
lods
test
jg
test
or
das
cmp
xchg
push
jl
lods
and
mov
fsubl
push
lahf
mov
loopne
sbb
add
and
xorl
pop
or
and
scas
faddp
dec
insl
cwtl
push
loopne
mov
xor
aaa
stos
mov
nop
and
mov
sti
mov
int
dec
xor
movsl
xlat
xchg
vshufps
cmp
sbb
xor
xor
inc
adc
mov
mov
push
fbld
lods
dec
insb
mov
pop
das
sbb
negb
sub
cwtl
mov
pop
sbb
in
push
xchg
sbb
hlt
aaa
std
stc
cmp
dec
into
int
mov
or
scas
mov
push
ret
out
or
jp
push
mov
stos
pop
cwtl
fnstcw
clc
inc
cmp
imul
imul
pop
inc
adc
jb
xor
xor
fincstp
mov
test
daa
ret
outsl
cwtl
daa
popa
cltd
or
push
test
jno
mov
push
fdivl
cmp
lock
or
pushf
mov
das
push
cmp
sbb
int
paddq
in
dec
xor
cmp
cmp
orb
push
mov
mov
cmp
sahf
lahf
sbb
mov
mov
sub
xchg
icebp
adc
add
lods
add
mov
mov
xor
popf
lahf
mov
movw
pop
ret
call
fcmovnbe
cs
add
scas
rcrl
vpmulhw
add
adc
jb
sbb
sub
mov
pushf
arpl
fwait
xchg
ss
inc
sbb
outsl
mov
xchg
pop
jl
jne
sbb
xor
xchg
cmp
insb
stos
add
cmp
or
xor
add
xor
xchg
icebp
push
out
outsl
and
aas
or
adc
mov
lea
add
pushf
mov
sbb
into
mov
movsl
add
xlat
stos
jnp
push
stc
std
mov
or
outsb
adc
pop
xchg
test
mov
ja
test
push
sub
inc
push
jle
stc
ret
mov
lcall
andl
pop
mov
adc
xchg
into
fwait
mov
jl
lret
pushf
aam
adc
mul
je
dec
scas
dec
pop
fiadds
xchg
repz
jmp
fadds
fwait
sub
lret
imul
jnp
jne
mov
xor
inc
push
nop
mov
adc
push
and
push
pop
push
mov
and
push
addr16
push
insb
cmp
out
adc
push
xchg
push
mov
mov
sub
mov
cli
cmp
sub
pushf
aas
xchg
sti
stos
in
dec
out
out
dec
clc
pop
rcrl
insl
movsb
setl
out
shlb
adc
and
add
jno
dec
mov
xchg
mov
push
test
cmp
fdivr
aam
jl
cmp
xchg
inc
add
mov
sbb
lret
outsb
jo
out
cld
ljmp
stos
fs
or
cli
xor
and
sub
jle
bound
or
pop
push
mov
xor
pop
cli
or
add
mov
outsl
sahf
cmpsl
js
pushf
add
daa
call
inc
aas
gs
pop
int3
cli
or
paddsb
xor
lahf
sarl
pop
dec
mov
fcmovbe
mov
test
adcb
out
scas
addl
cmp
data16
rolb
fldcw
lret
repz
and
mov
nop
test
mov
out
inc
xor
add
sahf
sub
sub
mov
call
test
add
cmpsb
sbb
adc
mov
data16
pop
cmp
mov
in
clc
lret
fucom
test
sub
std
pop
cld
subb
fildl
xor
lcall
push
and
cli
mov
lahf
and
sub
lahf
sbb
pop
cmpsb
push
and
test
push
out
or
mov
jae
adc
lcall
push
inc
xchg
pcmpgtb
dec
xlat
loope
xlat
adc
sbb
lret
cmpsb
jle
in
mov
loope
cmp
ja
and
jb
mov
imul
xor
lock
aad
dec
pop
dec
pop
test
movsl
lret
faddp
mov
push
int3
test
pop
cltd
jge
lock
shrb
and
pushf
sbb
loopne
ja
bnd
dec
in
fcomps
fcomi
fstl
mov
test
dec
pop
add
inc
and
pop
imul
cmp
xchg
ljmp
xchg
stc
or
ljmp
jge
mov
or
add
std
insl
es
mov
dec
add
cmp
jbe
add
sarl
cmpl
and
pop
loopne
hlt
sub
addr16
push
push
xlat
push
test
sar
sbb
rcrl
mov
int3
cmpsb
outsl
imul
dec
test
jbe
rcrl
add
xchg
mov
push
out
dec
jb
shl
mov
jns
test
dec
push
mov
mov
mov
push
stos
mov
ss
ret
sahf
rorb
lods
cmp
incl
push
int
fsubl
imul
and
stos
jno
jmp
cmp
cwtl
mov
jg
out
test
jmp
mov
dec
mov
or
xchg
xor
je
adc
mov
dec
mov
cmp
lahf
ja
inc
mov
cmp
xchg
xchg
shll
push
daa
sbb
inc
mov
inc
mov
and
cmp
adcl
stos
xlat
mov
xchg
fdiv
adc
xor
mov
pop
sub
cmp
in
cmp
loope
call
sbbl
xor
sub
mov
xor
shll
leave
cmp
rcrl
movsl
dec
or
inc
jnp
dec
dec
imul
mov
jns
and
xchg
out
xchg
outsb
outsl
push
cmpsl
inc
mov
mov
xchg
shlb
mov
stc
adc
add
inc
stc
fcmovu
lcall
inc
mov
icebp
inc
ret
rcl
inc
add
out
cli
and
testb
sub
cmp
push
pop
orb
fwait
sbbb
mov
mov
adc
sti
outsb
imull
shl
std
mov
repz
sti
fisubl
shlb
gs
xchg
push
inc
add
sarb
jnp
adc
push
xor
pop
sahf
mov
aas
sbb
cli
xlat
cmpsb
push
push
sub
addr16
jmp
xchg
shrb
xorl
mov
mov
and
stos
pusha
sub
jne
push
or
cmp
jge
push
cmpsl
faddl
stos
aas
jbe
les
inc
jne
xor
dec
add
cmp
loope
loope
or
xchg
push
pop
mov
orl
mov
pmaxub
dec
clc
add
add
jb
rcrl
lea
add
and
pusha
add
sbb
cmp
xchg
jo
js
stos
dec
xor
hlt
lods
cs
dec
xor
lahf
loop
imul
ds
cmp
jns
push
xchg
aas
dec
and
lods
imul
rcr
push
andb
enter
xchg
jle
repnz
inc
push
pop
add
or
xor
in
xor
lods
mov
push
roll
push
push
dec
cmp
push
pop
pop
jbe
loopne
sub
repz
or
pop
pop
push
int3
loope
inc
xor
fistpl
pop
mov
mov
cmp
leave
fcmovb
cmp
inc
icebp
cli
mov
fsubl
push
pop
loope
enter
jmp
push
fldl
int3
jecxz
ljmp
adc
mov
mov
or
pusha
xor
mov
dec
orl
imul
repnz
inc
clc
jle
mov
mov
adcl
js
lcall
gs
pop
je
add
vaddps
out
sahf
xchg
mov
pop
dec
test
or
mov
pop
cmpsb
add
cli
sbb
jne
inc
pop
loope
ds
mov
addr16
inc
xchg
xchg
jecxz
les
addr16
jb
int
aam
js
imull
mov
scas
out
popa
sub
jle
iret
sub
mov
mov
sub
popa
popf
out
ljmp
into
nop
mov
push
sub
cmc
xchg
jbe
pushf
fdivs
add
or
iret
daa
sub
movsb
test
dec
jp
je
lds
add
push
int3
loop
shl
mov
sbb
and
pop
pop
inc
fwait
stos
decl
xchg
jnp
xor
xor
ds
mov
push
lret
mov
je
adc
lret
pop
imul
cmpl
in
push
out
int
loop
popa
inc
inc
mov
mov
adc
cmc
mov
sbb
cmp
fistps
clc
scas
into
pop
xchg
mov
pop
add
in
and
ss
pushf
and
sahf
add
jle
mov
in
aas
ss
adc
ss
mov
in
lock
xor
andl
mov
out
fdivrs
push
xchg
rcrl
mov
pop
loop
shrb
sub
push
pop
scas
xor
sub
push
out
lahf
flds
xlat
lods
fs
arpl
adc
mov
sarb
mov
addr16
in
mov
xchg
sahf
add
mov
dec
cwtl
insb
inc
aas
inc
sbb
add
rcrl
inc
inc
scas
js
jbe
pop
push
pop
decl
cltd
mov
or
ja
js
jne
hlt
xchg
cmp
pop
je
sub
push
cmp
or
or
in
lock
adc
jle
mov
nop
jmp
xchg
lods
cltd
dec
testl
or
sub
mov
mov
ss
mov
daa
mov
pop
sbb
push
arpl
cmp
mov
inc
cli
out
or
xor
xchg
xor
mov
daa
or
mov
popa
int3
mov
add
imul
and
mov
lret
shufps
push
sti
xchg
stos
push
cld
aaa
push
sbb
sbb
in
mov
mov
pop
pop
aaa
cmpsl
add
mov
ja
or
outsl
add
lcall
pop
xchg
push
xchg
sub
adc
sub
sub
ljmp
cmovbe
mov
mov
dec
rcrl
aad
stos
inc
out
es
mov
mov
or
adcb
mov
jmp
inc
push
mov
sub
jp
lock
push
sub
daa
sbb
pop
or
sub
test
cmpsb
pop
icebp
sbb
or
fs
dec
dec
sbb
xchg
rorb
loop
mov
jle
push
push
inc
aad
in
lcall
cmc
mov
icebp
xchg
add
add
mov
jno
adc
cmp
push
mov
and
gs
push
das
or
inc
pop
sub
add
aaa
xor
mov
mov
fdivrl
inc
inc
out
lds
jno
pop
or
stos
pusha
dec
mov
outsb
pop
and
aam
sub
push
mov
test
std
xor
push
dec
fmull
xchg
imul
cmp
or
mov
inc
outsl
mov
mov
cmpsl
faddp
lock
fisttpl
lods
repnz
clc
lods
xchg
jae
test
pop
sbb
add
push
mov
std
inc
sbb
jmp
cmp
cli
clc
inc
add
pop
jb
dec
test
mov
lcall
lds
addb
popa
jbe
mov
dec
in
jle
jecxz
pop
jle
cmp
xchg
pop
test
inc
mov
pushf
push
imul
iret
shll
ret
lods
mov
in
cmpsl
in
push
mov
and
je
mov
pop
rcl
loope
ja
and
or
and
inc
shll
cmp
push
jle
aas
jmp
jne
dec
pop
daa
mov
dec
sbb
ret
addl
jmp
mov
cmp
popf
mov
cmp
lahf
mov
fwait
push
cmpsb
test
mov
pop
out
or
shl
jne
xchg
mov
movsl
sbb
xor
sub
push
adc
add
xchg
sbb
mov
push
jp
or
sub
dec
or
jbe
cwtl
jg
inc
sbb
sahf
int
lahf
repz
adc
cmc
jnp
in
dec
ljmp
arpl
sbb
mov
jb
push
cmp
fadds
mov
sbb
ss
shrl
dec
aad
insb
cld
iret
sbb
mov
hlt
andl
jge
loope
lret
or
sahf
jl
adc
in
test
mov
dec
sbb
ds
xchg
add
loop
lds
xorb
xchg
imulb
cmp
add
mov
aad
push
subb
jae
cmp
nop
fwait
adc
outsb
fdivs
dec
mov
das
mov
mov
ja
es
nop
scas
jg
mov
sub
lock
fisttps
std
enter
sub
das
xor
cwtl
pop
push
push
mov
mov
lock
iret
es
cmp
mov
test
mov
pop
or
rcl
lea
mov
mov
cld
jno
and
jne
scas
out
test
jmp
outsl
int
cmpsl
sub
dec
stos
sub
lea
call
scas
push
inc
fistpl
xchg
lock
mov
adc
iret
mov
mov
in
cmp
int3
sahf
mov
pop
out
push
sbb
xor
insl
fcmovne
mov
xor
xchg
testl
repnz
pop
xchg
mov
mov
sbb
pop
inc
xchg
jle
xchg
mov
fisttps
stos
cmp
or
xchg
pop
fistpl
addl
hlt
push
sub
int
sbb
jecxz
or
es
jmp
jmp
cmp
repz
aam
dec
stc
mov
movsl
jns
out
mov
xlat
dec
xor
push
ss
frstor
sbb
sub
jb
push
sub
and
cwtl
stos
push
cltd
in
adc
cmp
aad
pop
fcmovnu
fdivl
push
xlat
fs
adc
repnz
xor
into
dec
pop
jo
inc
add
and
push
lea
repz
mov
sbb
movl
in
and
dec
or
adc
dec
dec
sub
mov
aad
mov
jecxz
xor
dec
sbb
dec
lret
fbld
test
push
in
pop
jmp
pop
je
xchg
cltd
pop
insl
mov
jns
push
popf
sub
ja
call
lahf
and
sahf
leave
ss
cli
xchg
inc
lret
movsb
shlb
dec
out
push
imul
fldl
xchg
stos
adc
add
nop
sbb
bound
mov
ret
pop
adc
mov
lock
mov
popf
loopne
shlb
jno
xchg
mov
mov
out
out
out
push
cli
iret
or
stos
dec
in
or
xlat
xchg
dec
fidivrl
cmpsb
jne
ret
and
sbb
out
fmuls
enter
aam
popf
mov
mov
jle
and
mov
iret
sbbb
sub
enter
dec
push
mov
push
and
xlat
cltd
bound
rep
imul
xchg
xlat
and
in
pop
xor
sbb
mov
adc
iret
push
out
dec
jmp
jmp
imul
pop
inc
push
in
cmp
ss
pop
add
sbb
and
out
add
mov
add
inc
xor
dec
jo
jno
out
in
outsl
inc
or
push
xor
jo
sbb
insl
push
hlt
add
inc
enter
mov
lret
shlb
jns
loop
test
stos
add
lea
out
rolb
mov
dec
sub
push
push
fdivr
rcll
add
cmpsb
pop
imul
lods
mov
xchg
rorl
outsl
jne
cld
gs
insb
jecxz
lods
xchg
dec
andl
mov
xorb
ret
pop
adc
fimuls
stos
xchg
push
iret
and
dec
or
jo
adc
push
ljmp
jae
out
xchg
test
fidivl
in
lods
addr16
push
cld
call
shlb
xchg
sbb
scas
clc
adc
popa
cli
cmpsl
movsb
push
icebp
adc
stos
xchg
nop
fildll
icebp
dec
push
inc
pop
mov
ljmp
jmp
leave
arpl
mov
shl
jns
add
adc
xor
mov
loope
dec
add
inc
dec
pop
and
stc
loope
into
fnstsw
pop
out
lods
pop
xchg
and
mov
mov
inc
xor
mov
out
test
stos
jge
in
jg
mov
push
cld
inc
jmp
cmp
in
xor
popa
add
jno
aam
movsb
lods
adc
sarb
jp
xlat
daa
cli
jle
outsb
xchg
into
mov
jns
sbb
lcall
fsub
in
cmp
dec
popw
loope
addl
mov
in
lcall
popf
lods
leave
sub
xchg
lea
pop
out
xchg
mov
jno
xchg
fidivrl
pop
push
adc
cli
sbb
int
mov
xchg
sub
xchg
jp
push
les
shlb
stos
sbb
adc
out
or
dec
popf
das
mov
mov
sub
lcall
and
or
mov
adc
or
lcall
cli
into
cmpsb
in
push
sub
cmpsl
adc
out
stos
jnp
dec
xchg
dec
cmp
jns
inc
xor
insl
aaa
lcall
stos
sbbl
xor
lret
je
rcll
xchg
lret
push
stos
mov
mov
sti
jl
xchg
in
xlat
mov
movsl
je
sbb
mov
data16
cmp
or
pop
xchg
jmp
inc
push
mov
xor
push
sbb
scas
out
jo
rorl
xchg
inc
filds
dec
jb
movsl
insb
shl
jle
cmpb
rol
std
jp
imul
nop
fsubs
and
stos
sub
fidivs
out
cmp
mov
inc
adc
xchg
roll
int3
push
mov
pop
jl
icebp
and
push
and
jl
dec
daa
mov
mov
sahf
pop
pop
cmp
adc
in
inc
sti
fistps
push
push
repnz
cmp
pop
rorl
roll
sar
mov
gs
dec
incb
popf
push
daa
leave
jae
inc
push
sbb
add
jo
fiaddl
mov
popf
push
push
lcall
ds
xchg
insb
std
pop
clc
in
jmp
idivb
xor
rol
imul
in
sub
leave
and
xchg
mov
jne
sub
lds
test
stos
adc
mov
jmp
push
cmp
movsl
mov
movsl
inc
test
push
cwtl
and
cmp
test
enter
push
jnp
ljmp
test
imul
dec
call
fidivrl
mov
cmp
hlt
out
lret
jl
rcl
adc
fdivl
dec
icebp
mov
gs
rorl
jg
adc
xchg
mov
adc
or
lods
push
iret
scas
or
loopne
pop
mov
ljmp
ds
cwtl
xchg
shrl
nop
pop
sbb
mov
cltd
sbb
fidivrl
xchg
and
xchg
mov
fsubs
sbb
cmc
xchg
sub
fiadds
or
jns
jbe
in
imul
fdivrs
int3
mov
dec
xor
stos
stos
imulb
scas
call
dec
lea
inc
sub
cmp
shlb
dec
outsl
mov
pop
mov
lock
mov
xor
push
add
arpl
clc
dec
mov
test
cmp
jl
xlat
and
call
je
shll
pop
lods
sub
icebp
inc
xchg
popa
dec
sbb
fistpll
xor
and
cld
fists
pop
stos
mov
in
rcll
push
addr16
xchg
cs
cmpsl
pop
fwait
xor
addr16
xchg
loopne
sub
lods
xor
add
cmp
jo
js
pop
syscall
cmp
mov
mov
std
ss
sbbl
popa
out
mov
test
mov
testb
ja
dec
or
xor
pop
outsl
pusha
rcll
outsl
cmp
push
ljmp
xlat
xor
mov
sbb
fidivl
je
lea
xor
ss
lods
dec
xor
lods
pop
xlat
imul
pop
add
cmpsl
movsl
sub
cmp
fisubrs
xor
jg
mov
frstor
pop
sbb
movnti
stos
cs
enter
sbb
cmp
loop
dec
dec
jge
ja
sti
scas
add
rcll
jbe
insb
lret
je
rcll
and
jg
or
lret
dec
push
mov
icebp
imul
aam
in
arpl
outsl
and
or
loope
mov
xor
in
dec
lea
rcrl
push
pop
pop
ss
cmc
out
rol
jnp
aaa
popf
aad
inc
pop
adc
pop
scas
or
mov
push
push
insl
std
dec
inc
ljmp
incl
test
ret
aad
pop
adc
push
pop
push
sub
je
inc
hlt
mov
rolb
add
jg
inc
xchg
mov
push
mov
and
mov
pop
xchg
cmovno
xor
jne
or
int
cld
in
movsb
dec
or
push
jge
jl
lds
xchg
leave
xor
stc
cmp
mov
aad
lock
out
inc
pop
pop
ret
shl
sahf
loope
scas
mov
out
ret
xor
aam
xlat
inc
inc
test
sbb
mov
in
xor
popl
loope
and
xchg
xchg
ljmp
into
adc
mov
add
push
push
pusha
pop
fcmovnbe
ret
push
insl
test
add
cmp
xchg
adcl
imul
xor
repz
inc
ds
and
pop
fisttps
xchg
loopne,pn
dec
cmp
or
mov
jno
pop
outsl
imul
cmc
xor
push
cmp
mov
out
nop
mov
in
ds
mov
sub
mov
mov
call
push
pop
inc
addl
mov
test
fisubs
inc
jmp
aas
cltd
in
gs
lret
mov
js
add
int
ret
inc
inc
dec
cmp
adc
or
xor
test
mov
adc
ficomps
cmp
inc
adc
hlt
negb
shll
mov
outsl
dec
jbe
jns
sti
cmp
inc
adc
push
inc
mov
mov
and
outsl
out
adc
fs
test
push
mov
shl
dec
sub
repz
xchg
flds
je
jbe
dec
cld
jg
lcall
cmpsl
sbb
mov
mov
pushf
pushf
sti
mov
cmp
jg
pop
or
imul
pop
cltd
sub
les
pop
or
lods
mov
cmpsl
mov
sbb
push
mov
push
xchg
cmpsb
push
fmul
mov
pusha
in
jle
cmp
push
mov
fs
loopne
dec
xchg
jbe
js
push
pushf
pop
jl
les
call
js
xor
fsts
and
inc
sub
or
jge
mov
scas
dec
mov
insl
lds
jne
mov
pop
mov
aaa
mov
frndint
das
jbe
pop
pop
dec
mov
jge
stos
push
add
lahf
push
movsb
and
out
lahf
popa
rorl
or
cmc
pop
inc
cwtl
lret
rorl
fmuls
push
sti
cmpsl
xor
cltd
add
adc
leave
dec
loope
lcall
iret
xor
or
pop
out
jbe
add
mov
mov
xchg
mov
jle
ret
cmc
sub
rcll
pop
mov
out
sbb
pop
dec
and
test
cmc
lods
ja
lcall
mov
push
push
lahf
xor
jecxz
lods
popf
rcl
outsl
repnz
adc
pop
pop
or
cwtl
jnp
push
dec
cmpsb
mov
out
negl
mov
rcrl
xchg
loope
sub
adc
xchg
stc
add
mov
push
arpl
loope
leave
loop
sar
sahf
add
in
cmp
mov
xchg
aam
mov
ss
pop
lea
xor
addr16
leave
je
sbb
movsb
add
lret
mov
cli
mov
dec
push
lahf
and
test
mov
mov
mov
testb
leave
maxps
jmp
cs
adc
outsl
arpl
movsl
loopne
mov
pop
rclb
cld
rolb
sub
mov
cmpsl
idivb
and
and
in
lock
es
xchg
or
pop
cmc
mov
sub
mov
jmp
inc
ja
aaa
test
push
inc
sbb
dec
movsl
mov
arpl
push
pushf
lcall
xor
inc
push
out
push
outsb
lods
xchg
sub
mov
je
ja
int
pop
enter
cmp
les
aad
fldl
lea
jp
push
inc
nop
andb
fcmove
mov
repnz
sub
test
insb
jne
xor
jg
sbb
and
cld
jnp
mov
in
xchg
sub
mov
ret
or
shll
mov
mov
and
imul
xor
xlat
dec
mov
into
pop
aam
mov
aas
fs
adc
in
in
int
fs
sbb
addr16
sbb
mov
inc
stc
repz
jg
dec
pushf
cmp
add
mov
fsubl
inc
sbbl
and
repnz
pop
ficoml
inc
mov
sub
stos
cmp
subl
inc
fst
add
addr16
mov
insb
pushf
test
jl
sar
imul
enter
shl
test
dec
enter
enter
inc
pop
pop
cltd
enterw
push
test
movsb
loope
cmpsl
mov
ljmp
push
aaa
or
jl
mov
and
jl
loop
sub
mov
push
mov
mov
lea
test
mov
jns
xchg
mov
sub
ja
lods
mov
mov
or
xor
sbb
jno
inc
shrl
ret
mov
loope
and
ret
data16
test
popf
adc
jns
xchg
fcompl
inc
shl
les
jno
jge
movsb
insb
xchg
mov
sub
fsubr
push
sti
fildll
jnp
jge
dec
nop
insb
fistpll
mov
repz
add
lcall
pushf
push
repnz
adc
iret
cmpsl
cmpsl
cmp
movsb
scas
add
jne
orps
aas
outsb
insb
nop
daa
test
movsb
mov
sarl
mov
jne
mov
sbb
push
jne
sub
dec
adc
cmp
push
cli
cmp
mov
enter
and
sbb
sbb
push
adc
sub
int
cs
fmul
mov
mov
jmp
imul
repnz
jle
dec
xchg
popa
imul
stos
mov
outsb
push
jmp
xlat
ds
int
fists
out
out
mov
mov
jb
push
pop
fnstenv
cmpsl
test
cmp
xor
inc
lahf
das
and
inc
in
mov
inc
mov
jl
iret
cltd
push
mov
push
push
shr
out
inc
jno
cli
or
add
cmp
fimuls
subb
or
push
cmp
or
out
mov
lods
sbb
add
jle
or
adc
jmp
mov
jo
xchg
or
in
mov
xchg
push
mov
xor
lods
out
xchg
xchg
inc
xchg
mov
ret
lret
call
and
out
movsb
pop
sbb
and
mov
pop
or
orb
sub
push
dec
jns
cmpsb
cmpl
outsl
or
insb
jb
in
pop
fsubrl
cmp
inc
sbb
cld
lea
cmp
sbb
pop
nop
shrl
lods
cmp
mov
cmc
mov
adc
and
aam
mov
mov
dec
cli
adc
add
or
pushf
jnp
mov
sub
xchg
sbb
jp
les
ret
jmp
sub
or
cmp
jg
mov
sub
or
lret
mov
fstpt
lret
dec
cmpsb
adc
je
pop
test
lret
dec
stos
fildl
sbb
inc
xor
push
push
mov
jecxz
imul
ss
and
repz
mov
inc
mov
jg
cmpsb
lods
pop
mov
lds
and
leave
dec
pushf
sti
mov
push
xor
cmp
pop
cs
sbb
jp
movsb
mov
and
mov
sti
mov
jns
push
jmp
sub
jmp
stc
inc
lahf
sbb
out
cli
jno
inc
aas
cltd
es
xchg
je
cltd
pop
cmpsl
mov
fisubl
jp
xchg
cmpsb
rol
addl
cmp
in
popf
mov
cmp
pusha
cmp
repz
jge
jbe
inc
aaa
cltd
xchg
push
xor
mov
cmpb
insl
add
icebp
fmull
fimuls
popf
mov
or
jo
jmp
xor
pusha
ss
int
js
cli
push
dec
cmpsl
inc
or
adc
lea
lret
xor
sub
shlb
xor
xchg
xchg
pop
icebp
in
sbb
bnd
push
fs
std
push
add
xor
mov
sbb
aaa
inc
test
adc
addl
das
jp
addb
mov
and
fdivs
pop
pop
or
xchg
cmpsb
decb
nop
popf
dec
repnz
test
xor
mov
inc
inc
mov
mov
or
pop
sti
cwtl
jno
sub
in
scas
jne
jmp
jl
xchg
int3
pop
sub
mov
jmp
jne
mov
bound
adc
inc
mov
xor
cld
dec
mov
xchg
ds
xchg
dec
test
movsl
pop
xchg
inc
or
out
aam
push
imul
iret
lcall
shlb
xchg
in
cli
adc
pop
mulb
leave
loopne
test
test
sahf
adc
mov
cmp
push
cmpsb
xchg
lods
shl
les
shll
push
aaa
aaa
sahf
adc
pop
loope
adc
in
scas
and
dec
les
pop
cmpsb
add
sbb
push
out
xchg
push
aam
push
ja
ds
pop
adc
jmp
xor
std
xchg
mov
lods
push
fcmove
std
hlt
add
jns
adc
xor
mov
add
outsb
xor
push
fwait
loop
xchg
bound
gs
outsb
fwait
cmc
mov
cmp
loop
call
mov
iret
rolb
cli
lods
stc
imul
je
xchg
jno
shr
out
jge
push
mull
mov
decl
add
lds
rol
test
es
subb
push
les
push
ljmp
xor
ret
xor
out
dec
orb
mov
jge
dec
popa
mov
mov
in
pop
jo
nop
mov
jecxz
rolb
dec
sub
insb
jns
imulb
nop
adc
loop
sub
mov
inc
out
iret
aad
ror
jl
sahf
lock
lock
js
fdivrl
pusha
int3
cld
idivl
adc
push
xchg
ret
movsl
push
mov
sbb
or
fstpl
lea
outsl
pushf
repz
test
mov
fdiv
test
je
dec
cmp
jno
icebp
cli
xchg
pop
inc
shlb
fwait
mov
xor
jp
stc
leave
jmp
sub
mov
or
outsl
in
call
and
pop
sahf
mov
xchg
adc
cs
mov
imul
test
and
inc
iret
add
enter
sbb
gs
cli
movsl
pop
sbb
mov
rcrb
fimull
fisubrs
sbb
lock
fs
mov
sub
fdivrl
cmc
and
jmp
xlat
jp
inc
rcrl
inc
inc
int3
mov
int
cld
rorl
scas
iret
mov
fdivl
imul
cltd
insl
sar
pushf
inc
pop
pop
sub
icebp
pop
hlt
dec
cmp
mov
pop
sub
and
repnz
xor
shl
mov
jle
jnp
jle
cmp
add
pop
fsubl
shrl
aaa
mov
frstor
pop
repnz
loop
cmpsl
mov
push
loop
add
sti
or
sbb
cwtl
aam
fnclex
fdivs
loope
fcompp
addr16
stos
data16
inc
jbe
cwtl
add
test
hlt
movsl
pop
adc
dec
lea
mov
mov
es
jbe,pt
cmpl
ret
sub
adcl
cmp
js
fstp
sbb
add
addr16
dec
ja
sub
arpl
lods
cmp
stos
mov
add
mov
aas
shlb
daa
test
push
fs
and
movsb
jbe
scas
mov
das
fwait
mov
jle
rcl
jecxz
pop
mov
mov
jns
lret
mov
adc
pop
stc
aas
lods
icebp
lret
mov
fs
pop
fldenv
inc
lret
pop
sahf
jle
jle
add
fiadds
iret
mov
mov
xchg
int3
sub
cmp
mov
insb
adc
aas
mov
mov
fmull
mov
ja
mov
subb
jnp
xor
cmp
pop
jo
aaa
dec
lea
loop
daa
jle
repz
xor
xchg
ret
adc
das
xlat
push
dec
sub
shrl
mov
xchg
pop
pop
daa
aas
mov
scas
das
mov
test
or
lds
inc
sbb
lds
clc
inc
adc
subb
in
cltd
inc
push
fisubs
or
arpl
sbb
jns
mov
cmp
ja
or
xchg
subb
js
sub
lcall
mov
sbb
sub
sbb
mov
or
sub
pop
mov
fldenv
mov
push
dec
push
pop
pop
pop
dec
aad
adc
push
sbb
dec
shr
lods
pop
lea
xor
jg
pop
dec
mov
push
push
aam
sbb
xor
std
scas
adc
mov
or
xor
sbb
jnp
mov
dec
aas
jnp
push
mov
push
mov
push
cmp
mov
aad
jae
sub
leave
and
add
in
mov
pop
mov
add
out
nop
push
inc
jns
sub
scas
pop
or
fistl
jmp
orl
pusha
jns
test
aaa
scas
jo
jnp
mov
int3
mov
add
popa
stc
call
mov
jge
clc
jb
push
sti
cltd
cmp
jnp
mov
xchg
jmp
les
inc
adc
lods
frstor
cmpsb
xchg
lods
or
xchg
fiaddl
inc
mov
push
mov
ljmp
xor
scas
loop
or
shrb
xlat
cmpsl
push
mov
in
pop
ret
cmpsb
or
cltd
or
sub
fsubrl
push
out
notb
add
incl
cmp
jb
fwait
push
lock
aaa
add
mov
paddb
mov
cmpsl
dec
and
mov
push
testb
mov
inc
jns
push
movsl
cmp
adc
dec
cwtl
cmp
xchg
pop
jg
or
lock
dec
xor
sub
icebp
mov
sahf
or
inc
fstpl
xchg
orl
mov
and
push
push
adc
dec
adc
lods
notl
add
and
push
adcl
arpl
inc
and
xor
cld
jg
fwait
push
int3
mov
in
xchg
push
push
mov
xchg
and
mov
daa
xor
add
adc
call
xor
loope
inc
insl
mov
push
mov
jmp
mov
and
jo
roll
dec
push
mov
sbb
adc
ret
fbld
lcall
cmp
aaa
aad
scas
mov
xor
xchg
mov
fiaddl
in
mov
popa
sub
cmp
adc
dec
xor
mov
es
idiv
mov
adc
pop
iret
scas
loop
adc
xor
rorl
scas
es
lret
pop
jns
insl
stc
sub
xchg
sub
pusha
push
push
mov
jns
mov
adc
lods
jp
mov
add
mov
notb
ret
dec
mov
js
cmp
dec
stos
sbb
push
adc
out
shrl
lret
rol
mov
cs
sbb
and
cwtl
fiaddl
nop
repz
xchg
mov
sub
pop
out
jae
call
mov
aad
je
jg
daa
rcl
xchg
push
scas
mov
pop
jmp
adc
pop
dec
lock
mov
es
les
cmp
or
jb
push
pop
cmp
dec
gs
nop
cltd
fwait
or
bound
bound
jl
enter
sbb
push
cmpl
loop
adc
mov
push
test
lcall
dec
je
cld
or
sbb
inc
test
pusha
xor
push
ja
push
movsb
mov
sbb
out
push
cli
out
fcompl
repnz
test
pop
loope
fnstcw
out
and
add
ss
lahf
lcall
sbb
and
push
pop
and
mov
es
fldenv
mov
fisubrs
push
mov
mov
inc
pushl
sbb
xchg
xchg
sub
lods
jae
inc
cltd
test
lcall
mov
mov
xchg
mov
or
jno
inc
adc
xor
or
adc
popf
cld
mov
xor
in
call
sbb
mov
mov
add
in
jl
sbb
sbb
js
mov
pop
in
lods
test
inc
lcall
jae
xchg
xchg
mov
clc
cwtl
dec
xor
and
andl
xor
push
cmc
jp
aad
inc
cmp
xor
dec
into
mov
adc
rorb
das
push
jnp
inc
nop
and
inc
add
pop
sarl
imul
popf
jo
loop
test
lods
push
pop
stc
ficoml
das
pusha
cmpsl
je
pop
jno
mov
push
cmp
push
xchg
fxch
or
out
and
xor
adc
loopne
stc
inc
ja
xor
bound
int
addl
nop
sub
jne
sub
xor
pop
loopne
cmp
subb
lcall
jbe
dec
xchg
mov
test
sub
fdivr
shll
push
and
addr16
jno
mov
push
sub
xor
jns
repnz
test
cli
int3
and
pop
fisubl
mov
rcrb
mov
push
add
sub
inc
push
mov
sub
aam
pop
push
scas
lahf
add
push
mov
cltd
rcrb
adc
mov
push
out
and
mov
pop
aas
hlt
fistpl
cmp
mov
mov
dec
fnsave
and
xchg
jp
xchg
fdivl
dec
adc
sbb
xor
mov
adc
push
aam
jmp
or
push
stos
addr16
std
mov
jge
sbb
clc
xchg
cmc
pop
fldenv
pop
push
rcrl
je
into
pop
dec
xchg
insb
sub
mov
les
mov
ljmp
testl
mov
scas
push
cwtl
int
lret
ss
add
lret
push
jb
cmp
lods
stos
lds
add
fadds
scas
mov
sahf
mov
adc
sbb
xchg
mov
jo
fdivr
negl
shrl
in
sbb
fisubs
adcl
pop
jns
lea
adc
sbb
fcoml
jle
stos
pop
pop
in
aam
inc
aaa
bnd
push
shrl
popf
sbb
int
inc
xlat
divl
sbb
dec
mov
stc
push
mov
jl
xlat
add
out
inc
mov
jge
jo
add
cltd
std
inc
andb
lea
or
inc
sub
pop
adc
or
shrb
lds
daa
js
mov
sar
inc
ljmp
mov
rcrl
lahf
fucomi
dec
push
lds
test
test
ja
iret
inc
pop
push
hlt
shrl
daa
into
and
data16
clc
jecxz
xorb
out
mov
nop
imul
mov
pushf
rcll
jmp
cmpsb
mov
sub
mov
mov
gs
mov
cwtl
sub
jge
dec
jbe
lea
movsb
pop
pop
push
xchg
mov
pop
int3
insb
inc
lcall
push
nop
push
imul
push
movsl
cmp
xchg
or
loop
enter
scas
inc
dec
pop
jns
lret
test
iret
out
push
std
movsl
ja
sbb
jb
xchg
enter
data16
hlt
jae
push
test
lcall
ret
insb
js
outsl
mov
mov
and
clc
xchg
leave
jnp
test
aas
fistpl
scas
in
mov
cltd
or
imul
and
push
cli
push
fisubrs
aam
cltd
push
sub
inc
std
icebp
lcall
dec
icebp
and
jp
sbb
pop
ss
cmc
pop
roll
data16
dec
adc
es
xchg
push
hlt
scas
idivl
xor
pop
dec
clc
cld
dec
and
and
mov
ds
pop
inc
push
sub
pusha
add
enter
mov
scas
pop
sti
scas
cmp
push
and
aad
cmpsb
jno
cmp
push
fwait
sbb
les
lret
mov
call
hlt
push
leave
pusha
mov
fsubr
aaa
pop
stos
push
jae
repz
nop
test
adc
ret
bound
std
mov
xchg
add
bound
es
jl
repz
sub
add
mov
mov
cmpsb
lds
iret
push
sbb
push
add
cmpsl
mov
ror
daa
shll
cmp
repz
jno
push
imul
test
fwait
sar
xchg
xor
cmp
adc
nop
arpl
add
test
mov
push
xor
add
shll
push
xlat
adc
out
jne
incb
jg
sub
pop
pop
jb
dec
stos
mov
insb
push
or
and
sub
pop
pop
mov
cld
jge
jno
imul
psubd
hlt
xor
push
xchg
mov
lcall
cwtl
mov
dec
lret
and
pusha
add
test
and
push
sub
inc
xchg
lods
sbb
call
inc
sub
pushf
sbb
mov
test
fidivrs
leave
xor
xor
ds
or
stc
mov
xlat
dec
scas
dec
xor
arpl
push
add
add
xor
jae
imul
fimuls
gs
mov
lods
mul
cwtl
inc
loopne
jae
jno
mov
xchg
xor
cmp
add
mov
xor
jp
push
dec
cmp
fdivrl
je
out
fsubs
inc
orl
lret
out
dec
lea
addr16
inc
and
inc
cs
and
push
data16
xchg
sarb
cmp
sbb
push
inc
dec
test
xchg
mov
inc
mov
pushf
ror
jnp
push
fisttps
pop
adc
rcr
sbb
ljmp
mov
jnp
or
jne
add
cmc
popa
nop
cmc
xor
mulb
mov
cmp
and
or
xor
and
rcll
jecxz
fnstenv
lret
and
lods
mov
mov
jmp
jmp
or
fs
xchg
cmpsl
imul
fs
inc
xchg
adc
aaa
arpl
rcl
dec
jbe
fwait
mov
fwait
jmp
cwtl
cltd
lret
ljmp
and
jmp
push
or
jmp
inc
cmp
xchg
movsl
fdivs
idivb
sbb
inc
imul
in
and
shr
rorb
lods
test
push
mov
mov
jle
push
popa
sub
push
in
mov
jl
or
dec
sbbb
cmp
push
pop
jae
push
add
pop
add
cmp
or
das
pop
negl
mov
xchg
movsl
dec
fists
sub
jmp
je
mov
fwait
in
enter
movsl
mov
and
cmp
dec
mov
inc
mov
fbld
iret
scas
cmpsl
jle
aaa
leave
jb
mov
and
jl
lret
dec
jo
faddl
sbbb
xlat
ret
and
rcrl
test
xor
outsb
jbe
in
or
and
add
or
jecxz
stc
lock
mov
imul
int3
jmp
fnstenv
adc
outsl
subb
in
ss
scas
mov
lcall
mov
sub
adc
adcb
and
cmp
enter
pusha
mov
push
fpatan
stos
sbb
push
iret
iret
sbb
cli
or
mov
mov
loop
scas
pusha
push
stos
xor
daa
xor
ret
ja
mov
in
mov
std
and
lods
dec
test
pop
mov
aas
lods
jb
sub
js
xchg
cmp
xchg
shll
std
push
ret
inc
rep
add
es
dec
ja
push
xor
scas
dec
ljmp
aaa
aam
int3
pusha
mov
mov
ss
sbb
cmp
das
stos
bound
pop
push
out
dec
sub
mov
xchg
jne
or
jb
xor
outsb
les
mov
dec
setp
inc
mov
jg
jecxz
sar
cli
outsl
mov
dec
xor
push
dec
cmpsb
pusha
mov
loopne
push
leave
inc
mov
cltd
int3
cmc
loopne
cmp
loope
sbb
nop
cld
les
jb
shlb
jne
pop
cli
aad
and
add
imul
in
push
or
pushf
xor
movsl
enter
cmpsl
lret
fstl
or
dec
imul
divb
cld
movsl
cmp
mov
lahf
or
sbb
lcall
cmp
movsl
push
testl
inc
sbb
cmp
xchg
cld
sbb
je
mov
incb
sub
shl
movsb
rclb
cmp
xchg
pop
mov
leave
mov
push
test
mov
inc
cmp
cli
mov
adc
ljmp
push
adc
rolb
sbb
scas
cmp
sub
les
jecxz
sub
in
dec
call
xor
cmpb
adc
adc
loop
ret
pop
mov
or
pusha
aam
test
and
stos
incl
jae
or
cmp
loope
xor
adc
xchg
push
ficomps
pop
xchg
in
addr16
cmp
push
insl
imul
xchg
jecxz
push
scas
add
sbbb
push
bound
dec
pop
push
es
ret
mov
jecxz
dec
cli
mov
push
lret
stos
jne
push
sbbb
sbb
fsubrs
inc
lds
sbb
cld
mov
inc
lahf
pop
pop
xor
insl
sub
shl
inc
test
mov
int3
sbb
mov
dec
cwtl
add
loopne
pop
mov
push
pop
xor
jp
sub
cli
xchg
adc
or
data16
or
jns
xchg
sbb
pusha
in
loope
inc
repz
mov
mov
jmp
xor
jge
sub
ss
ja
scas
lds
add
pop
pop
jne
into
jo
mov
data16
in
je
ret
pop
xor
scas
icebp
add
mov
push
test
popa
test
push
pop
sbb
jmp
scas
lods
stc
insb
out
sbb
out
inc
pusha
push
pop
or
adcb
inc
jbe
pop
dec
ljmp
ds
xchg
inc
add
sbbl
xchg
pop
jl
jnp
lds
cltd
pop
scas
sub
add
fildll
popa
fiadds
xchg
les
sbb
call
sbb
dec
inc
hlt
mov
ljmp
ret
jl
insl
test
insb
in
and
mov
inc
jmp
mov
fstpl
jnp
add
ljmp
xchg
loopne
cmc
xchg
sub
ljmp
inc
out
push
shlb
adc
mov
jno
mov
sub
daa
cmp
cli
sbb
add
jmp
loopne
sahf
jl
push
sahf
inc
loope
mov
pop
push
mov
popf
je
adcb
jbe
sub
pop
mov
aas
push
cmpsl
cltd
ret
push
pop
addr16
out
xlat
pop
cmp
fs
mov
and
out
inc
sar
push
aad
push
inc
and
push
fistpll
push
cltd
sub
les
ljmp
mov
xchg
fwait
jb
sbb
lret
imul
xchg
sbb
pop
call
pop
subb
popa
in
in
in
subb
cmp
xor
cmpsb
ja
icebp
xorb
jnp
push
jle
adc
xlat
rolb
jecxz
jnp,pt
cmp
adc
sub
fwait
cmpsb
stos
adc
mov
adc
jmp
dec
cmp
inc
outsl
outsl
cwtl
fwait
call
fs
add
jge
pop
loop
insb
cmp
push
add
mov
xchg
sti
push
divl
add
roll
stos
mov
or
cwtl
inc
push
jno
mov
lahf
pop
insl
out
aas
or
adc
lcall
sub
cmp
lcall
in
lahf
fidivl
lea
inc
iret
subb
cs
gs
and
xchg
jg
mov
cmp
adc
andb
outsl
sti
pushf
stos
mov
xchg
movsl
or
adc
pop
in
add
pop
sub
fiaddl
ss
fwait
sti
cmp
adc
jbe
fimuls
loope
out
and
jo
mov
add
mov
shr
xor
icebp
pushf
out
xchg
sub
sub
inc
dec
inc
dec
mov
push
pop
bts
scas
and
push
out
sbb
stc
sbb
and
jo
mov
inc
or
jns
xchg
pop
pop
lods
jge
dec
jl
jg
bnd
adc
xchg
mov
addr16
sub
jg
ljmp
push
add
adc
mov
gs
rcrl
xchg
or
push
mov
rorb
mov
jo
sub
sahf
jne
mov
jnp
mov
in
jne
stc
pop
stos
movsl
push
cmpsb
ret
outsl
shrb
pop
add
aam
jo
arpl
dec
xlat
loope
movsl
scas
inc
inc
lcall
add
pop
lds
idiv
cltd
iret
jge
cmp
call
movsl
int3
lcall
push
dec
jns
adc
aad
mov
push
cmovno
or
pop
jnp
cmpsb
jmp
cltd
add
mov
cltd
test
loope
ds
mov
in
mov
mov
jl
jl
cmp
or
in
aas
loopne
mov
jo
pop
imul
test
and
fwait
xchg
int3
loop
sbb
fs
aaa
xor
je
xchg
add
pushf
push
mov
fwait
daa
sbb
rolb
mov
pop
cmp
aas
fwait
in
pop
adc
mov
mov
popa
cltd
rolb
push
jmp
loop
xchg
outsb
fs
into
pushf
inc
and
icebp
cmp
push
dec
jle
fs
fcomps
push
pop
and
cltd
rcll
enter
shr
mov
jae
mov
mov
sbb
mov
mov
sti
lahf
fwait
xchg
sub
pop
pop
sti
in
xlat
dec
lods
sub
repnz
adcb
adc
or
xchg
in
mov
shlb
aas
jae
xchg
pop
sbb
lea
aad
mov
mov
adc
sbb
sub
jp
xor
imul
mov
inc
cmpsl
fisttps
cmp
pop
inc
pop
and
dec
pop
cmpsb
ja
xchg
mov
cmpsb
pop
push
cmp
sbb
scas
xchg
push
jmp
sahf
leave
add
shll
cmp
int
pusha
fldenv
negb
mov
xchg
or
adc
sbb
xorb
or
shl
arpl
xchg
adc
js
cmp
arpl
addr16
insl
or
mov
push
aas
mov
jg
pop
iret
push
movsb
xorl
call
mov
and
cmp
stos
sarb
cltd
jb
cs
addb
out
pop
adc
dec
fstpl
inc
jnp
xlat
or
push
inc
mov
mov
leave
jecxz
addr16
popfw
cs
fadd
aaa
push
int
pop
jae
loopne
jnp
cltd
je
fmull
cltd
cmp
es
fnstcw
pop
push
repnz
pushf
mov
scas
jge
jns
test
in
inc
jg
adc
test
stos
and
jmp
push
add
out
inc
fcompl
mov
rorl
movsl
stos
bound
loope
cmp
fidivrl
repz
mov
in
sub
xchg
add
push
add
jmp
fcoms
xchg
mov
mov
push
cld
xor
sbb
jecxz
popf
xchg
dec
mov
fsubs
add
bound
mov
xchg
push
mov
jb
add
lcall
xlat
fisubl
or
movl
mov
fsts
inc
push
jecxz
mov
sbb
call
inc
inc
cmp
int3
mov
jge
loope
movsb
add
out
es
mov
dec
push
mov
pusha
jle
jp
iret
pop
lcall
or
add
das
popa
dec
mov
leave
das
mov
dec
aam
aam
add
add
pop
out
fstl
pop
cld
mov
xchg
mov
and
cld
cli
inc
adc
add
ds
imul
mov
lea
and
in
gs
and
mov
iret
push
ljmp
repnz
mov
fnstcw
jecxz
roll
jo
dec
push
adc
and
test
mov
inc
dec
pop
adc
lcall
add
stos
and
sub
test
cs
and
mov
mov
packssdw
shl
stos
dec
xchg
lock
lret
mov
clc
push
xor
lock
or
adc
in
imul
and
out
mov
or
shlb
cmpsb
js
outsb
lods
mov
cmp
mov
std
shll
or
jg
sub
in
outsl
lods
add
add
scas
mov
inc
pop
mov
pop
scas
jl
or
xor
inc
mov
ret
in
mov
mov
xor
push
popl
sbb
xchg
cmp
cli
push
outsb
data16
stos
testb
push
stos
inc
and
mov
lods
jecxz
lods
cmp
ret
in
mov
xchg
sub
imul
mov
push
in
push
xor
imul
push
push
mov
loopne
cld
in
shrl
mov
ljmp
test
js
subl
repz
push
adc
xchg
mov
mov
xchg
pushf
dec
push
stos
sti
cmp
out
jns
xchg
mov
bound
daa
xchg
push
daa
adc
mov
jae
in
in
xchg
and
pop
ss
mov
ret
addl
xor
out
mov
fxch
dec
ret
jns
xor
push
xchg
pop
xchg
or
call
jbe
fwait
divb
movsl
cmpb
pop
test
lret
xchg
adc
daa
mov
scas
xorl
xchg
xor
lret
outsb
push
aas
add
push
xchg
add
cmp
inc
loope
xor
arpl
adc
fistpll
and
add
rcrb
pop
cs
pop
psrlq
xor
jecxz
xchg
sub
or
cmc
inc
and
icebp
mov
test
pop
xchg
roll
and
nop
lods
cmp
mov
mov
xchg
nop
iret
lcall
mov
sti
loopne
pop
incb
les
cltd
loop
and
sbb
sbb
shlb
inc
frstor
sub
xor
mov
mov
lods
cltd
push
push
xor
inc
cmc
clc
test
jl
imul
scas
call
cmp
call
dec
xor
add
push
movsl
imul
repz
push
mov
jne
add
ljmp
add
inc
les
arpl
stos
add
cmp
push
sub
jae
cmpsl
jle
xchg
movsl
push
jno
filds
ds
lret
add
sub
jle
xchg
push
mov
leave
and
data16
mov
repnz
xchg
test
rcl
popf
dec
sub
bound
int3
add
or
pop
dec
aaa
sbb
int3
mov
addl
repnz
jmp
out
or
pop
aad
ljmp
nop
cld
pop
ffreep
dec
repz
and
cmp
dec
mov
adc
pusha
pop
aad
push
sub
or
jno
mov
xchg
shll
or
sarb
adc
cmpsl
inc
aam
sub
pop
mov
sub
push
jae
dec
push
mov
testb
enter
clc
scas
xchg
sti
lahf
sbb
push
mov
popf
roll
cltd
inc
mov
jp
gs
daa
pop
mov
sub
xor
lods
cwtl
sub
sub
lret
mov
js
push
shrb
lcall
xor
fists
popa
push
or
das
fimull
and
cmpb
out
imul
adc
imul
mov
dec
sarb
test
imul
cmp
ret
sub
ret
movsl
and
jne
mov
add
popf
fwait
sbb
loopne
push
fld
and
mov
push
das
dec
mov
arpl
sbb
clc
stc
add
hlt
or
mov
pop
mov
xchg
sub
adc
filds
fdivrs
idiv
pop
xchg
out
pusha
push
cli
xlat
fists
push
add
xor
jl
inc
mov
and
cli
repnz
pop
or
push
test
movsl
lea
out
in
cmp
inc
xchg
or
mov
push
add
out
aas
les
roll
xor
lods
mov
jno
or
push
imul
xor
pop
push
movsl
xor
iret
xchg
das
in
xchg
and
xchg
ficoms
pop
test
sti
adc
iret
dec
in
dec
aaa
or
mov
imulb
orl
adc
outsl
in
mov
mov
fistpl
mov
arpl
xor
and
scas
or
sub
rorl
mov
sar
sub
jp
jbe
mov
jg
lds
mov
fsubr
lds
xchg
sbb
movsb
les
or
cmp
daa
daa
jl
sbb
sahf
fstpt
sahf
cltd
mov
cmc
jmp
pop
jae
cmp
ficoms
mov
dec
popf
and
pop
cmp
jmp
jo
movsl
cmpb
mov
or
out
out
insb
mov
in
cmp
rcr
push
cwtl
or
cmc
mov
ror
jo
nop
sbb
cmpl
fdivr
pop
jns
jnp
repnz
mov
cmp
mov
fs
sub
sti
mov
push
sahf
scas
jae
and
ds
sub
push
pusha
movsl
pop
sbb
mov
jbe
sub
stc
adc
adc
xor
repnz
add
cmp
in
sub
mov
lds
mov
mov
sub
inc
jne
sbb
dec
bound
and
aas
cmc
cli
in
jp
fcmovnu
add
pushf
enter
mov
fwait
addr16
in
adc
jbe
mov
push
outsl
imul
jb
lcall
mov
imul
fsubrl
call
jmp
jbe
cmp
add
mov
cltd
sub
imul
ds
or
repz
js
aam
cmc
lods
mov
and
sub
inc
cmpb
pop
int
cli
nop
rcrb
imul
stos
mov
sbbl
inc
cmc
cmpsl
outsl
and
mov
outsb
push
sbb
movsl
fbstp
fwait
stos
hlt
idivl
add
adc
sti
test
add
lods
inc
repz
add
dec
or
dec
dec
xchg
ss
in
in
out
add
testb
test
pop
cmpsb
in
xlat
adc
in
xchg
mov
clc
lds
outsb
dec
out
popf
aad
jmp
xchg
test
mov
push
loop
sbb
jne
sarl
adc
pop
pop
out
out
inc
lahf
inc
pusha
aaa
push
or
jb
sbb
cmc
cli
rolb
inc
inc
dec
sbb
add
xor
add
ds
xchg
jle
xchg
xor
test
xor
dec
lds
fiaddl
dec
addr16
lret
stos
in
or
ljmp
push
mov
push
xchg
or
icebp
or
lods
adc
shrb
es
clc
mov
mov
mov
mov
inc
sbb
adc
xlat
aaa
inc
mov
pop
push
movsb
outsb
dec
loopne
sbb
andl
cmpsl
in
push
gs
sub
ljmp
ret
sbb
mov
js
popf
vmptrld
adc
or
popa
add
xor
or
aam
xchg
mov
in
shll
mov
xchg
push
repz
jmp
inc
jl
cmp
jne
cmp
add
add
mov
jno
xor
dec
mov
push
xchg
and
imull
mov
cwtl
dec
cmp
pop
fistps
aam
and
fiadds
cmp
not
sub
fisubrl
sbb
imul
xchg
jno
pushf
mov
rorb
mov
dec
test
insb
shll
in
push
loop
adc
out
js
gs
mov
xor
adc
repnz
mov
ds
rcrl
cmp
mov
xor
pop
ja
push
push
pop
sbbl
imul
mov
lcall
and
inc
gs
push
xorb
adc
orb
sub
xchg
repnz
jg
cmp
sub
sub
into
push
negb
inc
rcll
fildl
fwait
jmp
mov
sub
mov
xchg
xchg
push
and
mov
jle
cmp
out
lods
ret
ret
adc
or
aas
nop
mov
or
mov
jb
out
xor
xor
xor
stos
test
arpl
fists
repnz
pushf
push
scas
inc
jmp
shrb
and
std
andnps
push
loopne
jmp
push
mov
out
out
popf
jl
mov
sub
les
pop
scas
lods
divb
icebp
adc
das
mov
sbb
bound
psraw
lds
icebp
or
mov
adc
xor
jp
adc
mov
xor
cmc
test
sbb
scas
inc
push
call
mov
cmp
xor
sti
lahf
jge
add
sbb
fcmovnbe
popa
adc
repz
jns
fnsave
scas
lods
adc
mov
jmp
sub
adc
inc
subl
into
out
sbb
mov
std
jae
mov
rcrb
cs
or
insl
or
enter
ret
out
sbb
out
dec
aaa
pop
xchg
add
and
stos
mov
dec
jle
prefetchwt1
mov
jo
fcmovu
mov
push
mov
dec
adc
jbe
imul
lods
pop
mov
bound
je
leave
icebp
scas
mov
fmul
jle
push
cmp
mov
push
inc
cmp
adc
inc
scas
push
imul
cld
inc
gs
lods
mov
cmc
xchg
insb
test
mov
jo
aas
jge
inc
or
je
adc
shl
mul
jp
jbe
fs
gs
pop
push
pop
fnstcw
loopne
cltd
add
mov
int
jmp
lds
out
push
pop
shrl
inc
mov
iret
cmp
bound
mov
add
mov
std
add
mov
adcb
jo
jae
cmp
inc
outsb
push
mov
inc
loope
leave
sub
jmp
xchg
dec
cwtl
rorb
lret
pusha
ljmp
imul
push
and
cwtl
inc
mov
orb
sbb
ret
test
push
fisubrs
insl
addr16
xor
adc
popf
push
cli
enter
sbb
cwtl
ret
xor
mov
dec
dec
xor
push
mov
fisttpl
test
and
ficomps
mov
lahf
lea
xor
sti
into
sub
xchg
repz
dec
fs
mov
test
cld
jnp
pop
stc
in
ds
mov
xchg
sahf
fcmovnu
push
sbb
push
xlat
lea
push
shlb
dec
jg
iret
cmp
fs
jno
jne
cli
inc
out
fidivrl
scas
in
and
insb
int3
xchg
enter
icebp
fistpl
test
xor
mov
es
mov
jle
mov
andl
imul
ja
test
outsb
jl
dec
divb
imul
sub
lcall
jge
adc
mov
lcall
not
jnp
lret
movsl
addr16
sbb
lock
iret
movsl
or
ja
add
push
xor
outsl
xor
mov
xchg
add
test
xor
mov
mov
adcb
xchg
adc
jmp
cmp
ljmp
jmp
cmp
jbe
sbb
add
mov
in
xor
push
inc
out
jl
or
ffreep
loop
push
je
push
sahf
adc
out
mov
sub
mov
roll
lods
jne
scas
or
dec
bound
rolb
in
jae
repnz
push
add
adc
xchg
fs
ret
sarb
insl
cmp
sti
xor
cmp
das
mov
fwait
add
data16
sbb
add
lcall
lcall
dec
pop
jb
jmp
out
mov
mov
fsubs
dec
xor
inc
mov
jecxz
jecxz
and
dec
lds
loopne
sub
and
pop
pushf
mov
mov
cmp
and
pop
push
mov
sbb
stc
xor
cwtl
or
test
idiv
mov
jecxz
lods
mov
fs
arpl
cmp
and
adc
xchg
loop
mov
inc
jae
add
andl
push
jge
fsubp
ret
pushf
lds
sti
dec
lret
xor
xchg
cmpsb
ficomps
das
imul
aam
cmp
mov
sub
cmc
or
sar
and
sahf
xor
xor
lock
push
jbe
inc
adc
fdivrp
int3
xor
dec
jmp
fwait
cli
push
aam
ficomps
popf
outsb
ss
jno
pop
cmp
jnp
ljmp
int3
push
lock
sub
inc
jns
scas
sub
pop
sbb
hlt
cmp
outsl
rcrb
or
cmc
or
push
push
sub
das
popa
xor
in
into
inc
jne
xchg
pop
and
test
mov
movsb
xchg
xchg
dec
xchg
lcall
addl
mov
jle
sbb
cmp
lock
push
jl
bound
sbb
stos
dec
cwtl
adc
adc
or
jo
ds
pop
adc
sub
jg
xchg
addr16
aas
and
or
stc
aas
inc
push
stos
lea
push
adcb
and
leave
push
bound
dec
sub
dec
orl
jns
mov
push
cmc
pop
jae
dec
cmp
sbbb
fcmovnb
or
stc
push
or
call
out
lcall
test
jle
cmp
mov
fs
pop
imul
test
adc
insl
nop
mov
pusha
dec
mov
or
xor
hlt
int3
xchg
cld
lahf
and
add
mov
add
and
daa
lahf
aad
xchg
ret
ja
test
jne
cmp
add
cmp
xor
pusha
xchg
sbb
popa
mov
lea
ds
lret
cli
cli
or
inc
or
scas
inc
data16
jne
movsl
pop
mov
mov
inc
sub
lock
int
call
rcrb
pop
loopw
pop
wrmsr
mov
push
dec
sbb
dec
mov
xchg
je
shlb
mov
stc
addr16
stos
xor
test
fs
fsubrl
mov
iret
rorb
inc
sahf
pop
fmuls
jge
mov
repnz
test
push
cmc
test
inc
pop
sub
cmpb
or
push
sub
push
and
popf
and
and
inc
jp
mov
xor
jns
jns
sub
data16
aas
jle
pushf
mov
dec
pushf
imul
std
outsb
push
es
ss
dec
data16
dec
cmc
stos
fucom
inc
pop
sahf
sti
insl
inc
scas
adc
xor
jno
cltd
filds
jecxz
std
mov
push
outsb
xchg
ret
scas
ficompl
divb
cmpsb
mov
xor
inc
jp
xchg
popf
sub
inc
fdivrs
lea
jl
jl
sbb
fwait
jno
mov
movsl
lods
sbbb
pop
cmc
nop
add
lods
inc
or
xchg
lahf
stc
in
clc
ljmp
in
lret
push
das
cli
lahf
sub
in
stos
xor
clc
push
pusha
pop
mov
dec
cmp
daa
add
mov
mov
stc
or
mov
jecxz
rclb
xor
mov
push
stc
pushf
and
lds
fisttpl
pop
aam
pushf
push
add
push
pop
push
or
arpl
shl
adc
jl
rolb
int3
int
xor
loopne
fstpt
cmc
push
test
aad
or
in
gs
popf
arpl
sahf
mov
iret
js
lmsw
mov
cli
out
add
and
sbb
rorb
call
test
gs
lret
les
jge
fcmovbe
add
sbb
lock
cmpl
fnstsw
push
or
push
sub
daa
dec
popf
rcll
sbb
int3
push
push
out
pop
push
sarl
pop
cld
sub
mov
iret
inc
sahf
or
sub
mov
sarl
es
xor
jb
cltd
notb
pop
xchg
inc
fs
mov
mov
out
or
out
incl
aas
test
je
ss
daa
jge
jb
int
mov
pop
cld
xchg
daa
dec
jns
loopne
mov
jge
jge
xchg
jle
lret
jae
pop
push
cld
add
push
icebp
enter
out
cmp
call
aas
mov
dec
scas
cmp
pusha
push
sbb
call
dec
ja
sahf
pop
mov
repz
jo
pop
xor
inc
xchg
insl
fidivrs
arpl
int
ret
hlt
or
jmp
xor
iret
scas
rol
inc
in
jbe
int
add
int3
lahf
push
in
ss
adc
adc
popa
fldl
push
sub
data16
mov
cwtl
dec
fcoml
fisttpll
sbb
push
scas
std
jp
repnz
sub
lahf
xchg
test
ret
imul
test
adc
mov
mov
inc
cmp
sbb
fists
hlt
mov
out
xchg
dec
mov
jmp
ljmp
cmp
mov
jnp
daa
popf
in
shrb
and
adc
cs
or
push
sub
fwait
xchg
insl
mov
mov
pop
sub
lret
jns
ret
shll
mov
gs
loop
pushf
orl
mov
loope
lea
pop
mov
gs
xor
dec
push
std
int3
mov
push
fwait
add
in
xor
shr
scas
les
pop
cmpb
lahf
lea
imul
imul
dec
mov
pop
ja
pop
and
adc
mov
cmc
in
add
mov
xchg
xchg
dec
aam
pop
aad
xchg
pushf
mov
cmpsl
add
in
xor
loopne,pt
pop
cmpl
sub
xchg
mov
pusha
iret
das
dec
inc
mov
outsl
add
dec
jns
sbb
sub
scas
jg
fmulp
dec
jb
or
ds
les
es
in
pop
insb
lea
and
xchg
out
pop
sbb
test
int3
test
imull
dec
scas
and
clc
aad
push
sub
jg
add
out
fwait
stos
cmp
in
lds
popf
inc
out
test
loop
stos
jne
ljmp
nop
sbb
push
into
aas
dec
xchg
mov
xor
stos
lahf
roll
fwait
mov
ja
mov
xchg
or
mov
frstor
jnp
cmp
in
cmp
das
cmpsl
xorl
mov
cli
push
push
inc
add
push
push
shl
cltd
xchg
cld
mov
mov
sbb
pop
adcb
imul
and
cs
sbb
arpl
pop
push
shll
aam
inc
jl
push
mov
ret
add
sub
adcl
cmp
call
xor
pop
mov
cmp
push
push
fldl
dec
xlat
xchg
pop
mov
rclb
or
lods
xchg
jecxz
lods
lds
mov
outsl
inc
xorb
xor
cmpsb
into
jae
push
sub
cmp
mov
mov
insb
icebp
pop
fsubrs
and
imul
in
loope
push
loop
xchg
pop
mov
xchg
jecxz
leave
ret
push
repz
xchg
add
mov
xchg
test
stos
jo
leave
icebp
rolb
shlb
es
inc
jo
in
push
xchg
adc
dec
add
lcall
loopne
fidivl
out
or
jo
jl
push
shr
jmp
sar
dec
jns
nop
int
lods
jge
inc
loope
sbb
push
popf
xlat
push
adc
leave
aas
and
inc
mov
jmp
push
and
nop
inc
mov
mov
cmpsl
sbb
dec
inc
add
inc
lahf
sbb
mov
iret
and
and
outsb
xlat
cltd
pop
data16
xor
and
and
sbb
sub
or
cmp
ja
lea
test
dec
or
pusha
cmp
pop
aas
testl
addr16
jae
sub
adc
repz
xchg
ljmp
lds
jle
and
dec
and
jle
push
jbe
pusha
xchg
sbbb
pop
adc
mov
jp
adc
fcmovne
in
mov
test
jecxz
enter
jl
les
sbb
inc
mov
cmp
push
arpl
push
int3
shlb
loop
test
das
mov
hlt
cwtl
jmp
pop
imul
imul
push
push
loope
lock
out
mov
mov
xchg
pop
pop
sbb
movsl
sahf
cmp
and
adc
pop
inc
mov
aad
lcall
lret
fsubrs
jbe
test
shll
mov
mov
adc
leave
inc
sub
clc
getsec
cmp
cli
data16
inc
aaa
and
lahf
cmpsl
imul
push
mov
mov
clc
mov
add
stos
jmp
inc
dec
push
jecxz
mov
mull
clc
mov
or
mov
dec
js
xchg
movsb
push
sbb
test
jne
stos
dec
stos
inc
inc
pop
ret
jnp
nop
inc
add
das
and
js
enter
push
mov
lea
in
test
scas
cmp
jo
lock
adc
fsubrl
mov
pop
sbb
xadd
scas
inc
push
ljmp
and
cli
fimull
dec
dec
je
mov
cwtl
mov
sbb
and
inc
push
mov
lahf
jle
jno
mov
adc
testb
pop
stos
enter
jge
sub
add
sbb
mov
les
aaa
sbb
rolb
mul
push
cmp
xchg
mov
repnz
or
fldt
ficompl
mov
pop
mov
jecxz
sbb
js
dec
popf
or
sub
xor
jecxz
sbbb
jne
and
or
das
mov
mov
or
inc
jmp
xor
jge
outsl
cmpsb
aad
lods
roll
imul
out
push
pop
mov
ret
cmp
inc
lock
xorl
incl
int
sahf
loope
adc
push
mov
adc
outsl
fisubrs
int
sub
scas
out
inc
enter
daa
mov
test
and
test
jp
lock
arpl
or
jg
sbb
out
push
xchg
inc
mov
repz
nop
xor
push
or
cld
insb
aad
mov
pop
jecxz
pop
pushf
or
bnd
int
push
dec
mov
gs
sbb
cmc
xchg
int
in
ss
inc
add
adc
and
xchg
and
icebp
mov
cmc
lock
mov
fcoms
je
dec
int
xchg
jo
cmp
popf
mov
outsl
mov
cmpb
cwtl
inc
mov
das
pop
popa
add
cmp
push
in
inc
jae
sub
or
das
jecxz
sbb
setno
rcr
rcrb
push
icebp
ret
jbe
test
inc
dec
jecxz
ja
push
or
iret
and
add
sbb
fisubl
cld
fcomp
push
adc
push
mov
adc
xchg
jne
cmp
fmull
in
dec
stos
leave
push
in
and
jl
inc
fsubr
das
call
inc
sahf
xchg
mov
or
jp
or
out
push
shlb
pop
shl
dec
insb
adc
cwtl
push
mov
push
fcompl
sub
addr16
xor
mov
jg
in
rclb
fidivrl
jge
aad
cli
out
mov
pop
add
sub
fimuls
xchg
ljmp
mov
jl
jl
xor
cmpb
call
push
cmp
rcrl
mov
inc
es
mov
pop
mov
jl
xchg
add
repnz
xlat
loopne
xchg
ret
xchg
add
push
cmp
outsb
jns
outsb
add
adc
cmp
outsl
cmp
sub
xor
add
lods
mov
daa
cmp
movsb
int3
sbb
insb
and
xchg
popa
iret
in
dec
jmp
loopne
sub
xorl
div
add
insl
pop
daa
mov
fsts
fidivrs
push
push
xchg
or
adc
push
cld
jge
jb
mov
and
push
and
call
shrl
mov
pop
sbb
pop
cltd
mov
dec
test
push
std
es
cmpsl
movsb
stos
mov
add
adc
decl
push
mov
push
fdivp
cmp
fcmovne
and
mov
shr
sub
xor
and
fcomp
push
dec
mov
mov
mov
xchg
ljmp
mov
push
out
sti
or
stos
mov
mov
lock
sub
test
movsb
sahf
push
pusha
and
dec
rcl
mov
fsts
dec
jne
testb
mov
ljmp
inc
sbb
and
mov
jbe
sbb
cmc
clc
or
dec
add
out
test
xchg
add
sub
jo
in
fs
outsb
sub
sbb
test
je
in
daa
mov
sub
or
add
pop
add
daa
xchg
dec
fdivs
or
leave
dec
test
inc
adc
mov
pop
and
imul
inc
xchg
push
inc
mov
push
ds
js
xchg
push
push
push
lods
jl
jb
mov
sbb
test
sbb
push
push
cli
mov
lret
xor
shll
mov
adcb
sahf
xchg
ret
mov
test
test
ficomps
cmp
scas
or
imul
pop
cmp
push
dec
fcoml
xchg
dec
aaa
cmc
test
xchg
ja
test
jmp
sar
lret
add
sub
xor
pop
mov
sbb
repz
clc
popa
cmp
idiv
or
pop
cli
test
insb
pusha
jmp
xor
xchg
sahf
hlt
sbb
cmpsb
push
adc
rep
cltd
mov
stos
add
in
sub
test
xchg
mov
dec
xchg
push
aas
mov
sahf
xchg
int3
lret
mov
andl
jmp
mov
pop
in
lret
js
das
and
jg
pop
mov
mov
xchg
sub
das
and
fstl
rcll
ds
insl
sbb
data16
adc
loope
cltd
inc
scas
lahf
pushf
sub
inc
sbb
cs
mov
adc
xorl
push
lahf
dec
popf
shrl
loopne
sahf
in
arpl
insb
sub
movsl
or
test
xchg
add
sbb
or
jb
lock
xor
adc
stc
add
dec
fwait
aas
xorb
add
test
xor
or
push
in
sub
cmp
mov
fisubl
jo
jno
inc
inc
push
mov
test
push
pop
inc
dec
sub
es
stos
jle,pn
les
sbb
mov
rcll
icebp
jb
inc
jg
pop
stos
into
lea
pop
pop
add
mov
scas
dec
add
sbb
sub
cmpsb
push
loop
xor
stos
mov
and
jnp
ljmp
arpl
into
mov
enter
push
insb
dec
adc
in
repz
loope
jns
add
sub
add
dec
inc
test
pop
pop
insb
fcompl
push
jle
adc
mov
addb
mov
rol
xchg
in
out
xor
sbb
sub
mov
xchg
mov
in
cs
mov
scas
test
dec
arpl
stos
mov
adc
inc
ja
ljmp
push
jbe
ret
ja
loope
scas
lock
das
jmp
pop
jmp
cmp
dec
repnz
mov
add
inc
xor
fsubs
push
or
and
js
in
loop
mov
in
dec
popf
mov
sub
push
lahf
sub
lret
fldcw
cltd
xor
jge
mov
mov
test
or
call
adc
dec
pop
fdivr
sbbl
add
rcrb
sbb
scas
and
stos
inc
push
sahf
mov
push
fiadds
sbb
sub
cmp
loope
push
addr16
add
and
push
push
xchg
clc
adc
mov
test
and
fisubl
push
jl
lock
sti
call
jl
loope
lret
shll
push
shlb
push
add
movsl
cmpsl
jmp
add
xor
fwait
cmpsl
xor
imul
add
movsb
stos
out
push
mov
sub
and
and
out
push
leave
rol
fmull
pop
jno
imul
dec
insl
jecxz
and
dec
loop
push
test
pusha
in
ret
fiaddl
mov
fisubrs
dec
mov
fistpll
les
scas
cmp
xor
inc
lahf
jnp
and
push
or
xchg
sub
test
lock
into
push
mov
inc
sar
jbe
cmp
scas
bound
fldl
push
pop
inc
imul
insb
icebp
mov
icebp
ljmp
xor
cmpsb
lretw
arpl
inc
push
test
inc
pushf
mov
mov
les
mov
xchg
xor
jb
jno
dec
jmp
jl
std
lds
lea
shll
ljmp
pushf
outsb
and
int3
and
push
inc
mov
inc
repnz
outsb
and
dec
fwait
jo
ja
mov
cwtl
lods
into
pop
push
scas
call
out
adc
stc
push
pop
hlt
enter
fcmovbe
mov
jno
sub
push
xlat
test
test
add
dec
cmpsl
jns
push
jmp
ficoms
mov
xor
cmp
mov
push
adc
jbe
lcall
lds
sub
adc
call
daa
sbb
jl
add
in
mov
lea
sub
out
sub
cmp
dec
add
hlt
pop
add
imul
cmp
mov
push
inc
int3
cltd
add
sub
dec
cltd
jg
adc
push
cmp
and
lret
add
je
xorb
push
and
sub
or
mov
pop
adc
stos
clc
fstps
jb
bound
mov
popa
data16
cmp
push
push
lahf
xchg
adc
inc
inc
fstpl
rolb
mov
push
addb
test
or
dec
dec
xor
mov
pusha
adc
push
cltd
and
inc
xor
push
jg
shlb
add
idivl
stc
jg
pusha
mov
imul
andl
lcall
rcr
std
pop
daa
arpl
inc
int
mov
xor
sub
ss
pusha
or
leave
fsubp
or
xor
test
nop
push
fistps
mov
xchg
xor
cld
in
add
push
lret
adc
test
dec
pop
cmc
punpcklwd
lahf
lods
mov
pop
ja
dec
xchg
cltd
pop
in
jae
sarb
repz
xor
pop
or
lods
dec
mov
jno
aad
inc
cmp
mov
cmp
call
inc
out
movsl
jp
mov
or
in
xor
jle
mov
jno
push
iret
out
xchg
add
nop
xlat
cmp
pop
sub
bsr
or
mov
push
xor
or
and
push
iret
rcrl
cmp
inc
imul
adc
lret
cmp
mov
adc
je
test
lea
cmovge
add
sbb
push
sarl
shlb
dec
mov
fcom
mov
push
cs
sbb
mov
dec
cmpsb
test
fistl
inc
jo
test
jae
int
dec
push
jnp
xor
ljmp
mov
jl
xchg
test
mov
jge
pop
add
mov
orb
push
adc
xchg
jb
pop
cli
xor
add
xchg
imul
jg
jmp
cltd
push
add
xchg
shll
pop
mov
and
and
xor
add
pop
mov
fisttpll
and
orl
call
je
pop
in
push
mov
je
jg
cmp
mov
rorb
or
stos
cmp
fstp
push
scas
push
aad
dec
sbb
mov
lea
ss
add
fwait
addr16
mov
sbb
lods
test
lahf
ljmp
lds
cmc
insl
inc
imul
xchg
push
sahf
pop
cmc
or
mov
jae
xchg
int3
fdivp
scas
insb
movsl
cld
aaa
sbb
fwait
icebp
scas
out
xchg
xchg
jecxz
adc
inc
movsb
test
stc
mov
leave
sti
repz
jne
inc
shrl
loope
jge
sti
mov
adc
jge
adc
pushf
cld
jp
xor
mov
xorb
push
cmp
xchg
push
in
or
lods
inc
aad
lock
mov
jae
decb
xchg
sbb
mov
jbe
mov
jg
add
jns
push
jg
aas
in
dec
jno
lods
lcall
jo
jge
lods
xchg
and
lock
call
outsl
mov
mov
arpl
pushf
rcrb
mov
add
mov
push
xchg
daa
jmp
sbbb
sbb
leave
out
or
sbb
mov
sbb
out
push
sbb
les
divl
push
jp
shl
or
enter
aas
push
in
movsb
push
sub
mov
jno
leave
test
jl
pop
push
stc
mov
imul
mov
mov
icebp
inc
mov
and
test
cwtl
push
sub
dec
mov
push
das
in
addb
push
lcall
shlb
adcb
repnz
les
mov
leave
outsl
lods
lea
lahf
or
mov
pop
pusha
ret
pop
sbb
push
dec
aam
popw
cmp
mov
inc
int
arpl
mov
sarb
test
nop
pusha
xor
mov
lret
adc
xor
imulb
lcall
imul
push
or
xchg
data16
scas
and
lods
popa
fidivrl
mov
icebp
in
lock
xorb
xor
inc
testl
push
or
shrl
adcl
pop
or
push
imul
xchg
sbb
xchg
dec
and
es
and
cmpsl
xlat
fs
sbb
adc
pop
mov
inc
jnp
fldenv
dec
das
sbbl
jnp
push
push
outsl
or
fisttpl
adc
incl
xor
jno
jg
add
nop
sar
repz
jge
hlt
mov
pop
movsl
xchg
in
sbb
pop
add
push
shl
xor
icebp
testb
inc
xor
xchg
xlat
insb
add
shl
lods
ss
mov
sub
cmpsl
sbb
jno
inc
test
or
std
pop
mov
repz
jne
lea
jmp
icebp
out
or
pop
ret
movsb
in
xchg
and
sbbb
lea
in
mov
sub
sbb
test
rcrl
add
sahf
repnz
xor
rolb
rorb
sub
daa
mov
andl
lds
xor
sub
out
outsl
jmp
push
rorl
pop
sti
xlat
mov
jmp
icebp
push
dec
mov
xor
push
fwait
cmp
xor
add
push
push
add
lods
or
xchg
add
push
test
in
adc
mov
or
outsb
popa
das
sub
inc
shlb
mov
das
hlt
jns
gs
push
mov
dec
call
and
jne
adc
test
xor
mov
aam
repnz
sub
into
mov
fwait
out
or
xchg
cltd
fwait
lret
add
add
xor
jne
ret
or
mov
ss
lret
hlt
cli
jnp
leave
outsb
mov
stos
add
mov
pushf
jne
push
push
and
lds
cmp
dec
pushf
dec
pop
sub
inc
addr16
and
xor
add
pop
cli
and
rol
sub
fs
fimuls
ret
mov
shll
pop
cmp
jns
mov
jmp
out
sub
xchg
ljmp
pop
mov
jbe
adc
mov
ret
xchg
xchg
jbe
gs
pop
es
insl
jle
inc
sbb
xorl
xchg
fldt
int3
stos
les
dec
clc
stos
pop
mov
sbb
out
scas
xchg
insb
cs
cmp
xchg
dec
insb
mov
or
mov
out
pop
and
jbe
push
in
loop
cld
lret
or
mov
inc
sub
lahf
jl
addl
adc
nop
adc
and
clc
fnsave
dec
into
stos
popa
in
das
outsb
cmpsb
xor
lret
mov
cmp
fistpl
jns
inc
mov
jno
test
cli
mov
jmp
nop
jp
dec
xor
cld
sbb
arpl
mov
adc
fdivr
jl
in
sub
test
sarb
shll
gs
nop
scas
adc
mov
cs
sbbl
jl
dec
insb
push
sbb
nop
inc
xchg
cs
divb
call
xchg
out
shlb
stos
push
repnz
fsubl
sar
lods
sbb
call
push
push
dec
mov
push
mov
cmp
test
scas
adc
xchg
mov
mov
sbb
xor
adc
aas
inc
ljmp
and
lods
or
mov
mov
out
jge
cmp
imul
mov
mov
mov
ljmp
xchg
dec
iret
lea
int3
cmp
repnz
pop
mov
aam
ss
or
mov
out
xchg
cs
sbb
xchg
jo
js
daa
loope
fildl
pop
adc
mov
add
test
fldl
testl
jl
push
push
mov
cmp
mov
insb
jo
dec
mov
imul
mov
movsl
mov
adc
cmp
inc
lods
xchg
pop
xchg
pushf
add
pusha
pop
insl
mov
xchg
dec
xchg
dec
movsl
adc
addb
jg
sbb
lret
loopne
cmp
imul
notl
jp
and
pop
sub
jnp
or
data16
stos
out
sbb
jmp
xor
cs
cmp
inc
icebp
dec
push
and
jne
and
or
jb
push
fdivr
jecxz
imul
nop
pushf
outsl
jmp
xor
sub
sar
jle
daa
push
mov
sahf
jle
xchg
fisttpl
jmp
jmp
fmulp
cmp
repnz
fadd
adc
fidivs
push
aaa
icebp
cmp
adc
lahf
hlt
push
push
aas
xchg
loope
mov
lcall
lock
push
sub
push
jg
ljmp
stos
addr16
mov
and
out
insl
xor
sbb
ret
frstor
push
outsl
insb
add
lds
mov
out
pop
or
jae
sub
ds
jmp
mov
imul
idivl
xor
push
push
roll
push
push
adc
test
mov
cmp
aam
imul
sbb
mov
inc
cmp
fwait
and
dec
cmp
mov
and
ds
add
stos
add
jg
sub
jecxz
mov
repz
lahf
xchg
mov
sarb
add
xor
mov
pop
dec
jecxz
fisubrl
mov
mov
xchg
jecxz
in
xchg
xchg
lods
mov
jbe
cmp
jnp
mov
push
inc
shll
popa
movsb
pop
jg
push
cmp
aam
sbb
cmc
sub
insb
or
mov
out
cmp
jbe
pop
xchg
jge
push
rclb
repnz
push
xchg
and
dec
xlat
or
inc
enter
xchg
or
int
jno
mov
or
xchg
push
dec
adc
pop
cmp
mov
mov
cmp
mov
add
cmpsl
or
dec
ret
push
in
pop
int3
std
adc
std
aas
and
inc
push
fldl2t
ret
stos
out
testb
push
js
add
sbb
subb
mov
jge
es
mov
fidivrs
xchg
scas
mov
das
mov
inc
shrb
cmpl
push
mov
cmp
jecxz
rorb
cmovae
fmul
insl
lahf
int
bound
imul
scas
fnstcw
fwait
mov
cmpsl
lock
pop
jg
pop
sub
mov
lahf
gs
cltd
add
pop
rolb
hlt
inc
xchg
mov
xlat
adc
movsl
jne
mov
shll
pop
push
mov
aaa
push
xchg
push
mov
push
cmp
popa
xor
out
push
imul
addr16
mov
bound
pop
test
aaa
xor
lret
cmp
cmp
xchg
xchg
aad
mov
out
out
lock
movsl
mov
in
repnz
sti
lods
inc
data16
and
xchg
fcoms
add
dec
cmp
int
pop
movsl
and
lcall
adc
adcb
ficompl
cs
mov
adc
daa
inc
divl
leave
push
xor
mov
hlt
mov
fsubrs
add
mov
jne
xchg
int3
and
movsb
push
jge
mov
mov
xchg
add
rorl
scas
xor
adc
cli
cmpsl
mov
in
cli
or
sub
mov
mov
mov
hlt
rclb
and
lahf
ret
cmpsb
js
sbb
dec
divb
stos
add
cwtl
popa
mov
mov
lret
push
or
sti
jno
sub
pop
lcall
cmpb
addr16
sub
adc
addb
mov
es
je
pusha
mov
lods
sbb
fstpt
inc
pop
lcall
aam
insl
cltd
xor
enter
shr
outsb
fsubl
dec
stos
or
mov
xorl
mov
stos
out
sbb
cs
fisttpl
push
sbb
adc
dec
and
xor
les
fidivs
adc
lods
movsb
adc
xchg
mov
cmp
bnd
dec
subb
inc
push
pop
dec
and
add
insl
add
enter
lods
jg,pn
nop
adc
mov
inc
imul
out
sbb
push
mov
pusha
push
sub
in
rclb
sbb
jecxz
inc
movb
aam
mov
insl
mov
or
xor
pop
or
inc
jl
pusha
mov
adc
lret
mov
or
mov
inc
push
imul
pop
jnp
fiaddl
cltd
int
mov
lods
iret
sahf
shl
loope
adc
push
cltd
ret
fiadds
xchg
xchg
int
xchg
lret
push
pop
inc
push
cwtl
sub
cwtl
and
push
mov
pop
nop
mov
outsl
pop
loop
subl
push
out
push
jno
cmp
repnz
pushf
pop
jo
jne
push
xor
test
adc
popa
pop
mov
into
adc
mov
int
addr16
rol
add
js
test
mov
in
adc
push
out
xor
mov
iret
fnstsw
inc
test
orl
dec
je
sub
aam
push
sub
lds
outsb
sbb
hlt
popf
pop
mov
mov
addr16
test
sbb
dec
jnp
mov
lods
mov
cli
aaa
fs
ret
gs
loope
call
sbb
xchg
insb
loope
loop
push
ffree
adc
cltd
cmc
add
test
addl
xchg
cltd
inc
and
subl
mov
lahf
rcl
mov
aas
cs
pop
xor
dec
push
push
jb
pop
jns
push
imul
xchg
push
xchg
and
adc
iret
iret
bound
test
repnz
repnz
pusha
or
pop
pop
bound
clc
repz
cmp
les
mov
jg
ljmp
cmp
jne
adc
leave
mulb
jge
cld
xor
or
pop
jl
mov
sahf
sbb
mov
loope
and
add
test
xor
cmpsl
mov
jge
icebp
or
xor
and
cmp
push
or
mov
imul
arpl
xchg
loopne
lea
mov
cmp
mov
test
xchg
and
push
sub
imul
jecxz
sub
pop
iret
mov
ret
adc
mov
lock
pop
dec
pop
lret
fldt
mov
fsubl
jo
out
mov
jno
cli
mov
stos
push
dec
pop
loopne
xorl
sahf
sahf
inc
adc
inc
dec
add
sti
and
adc
insb
xchg
push
mov
cmp
int
js
shr
movb
icebp
call
pop
in
xor
xchg
std
xor
lods
call
xchg
pop
icebp
cmp
xor
mov
jp
and
jecxz
movsl
mov
faddp
cmpsb
ret
pop
ret
pop
enter
or
xchg
jmp
ja
dec
mov
xor
add
or
call
xchg
cmp
pusha
push
lcall
push
inc
xorb
cmp
add
filds
test
pop
stos
mov
cli
clc
hlt
test
mov
notb
out
pop
jmp
mov
lods
gs
xchg
and
or
fiadds
dec
test
xor
fldl
clc
mov
in
mov
jnp
lock
push
je
testl
nop
decl
std
push
aaa
xor
and
xor
shl
cmpsl
stos
stos
jg
jmp
in
push
int
xor
pop
ja
jo
shll
fsts
and
insl
cmp
out
cmp
push
pop
lahf
push
das
mov
xor
mov
pop
mov
dec
mov
lret
push
popf
iret
dec
mov
int
stc
sahf
pusha
dec
xor
shll
popfw
xchg
push
insl
sbb
jp
lcall
and
scas
lcall
repz
xor
cmp
pop
xor
sub
or
scas
inc
int3
seta
mov
aam
enterw
adc
adc
rclb
lret
mov
adc
or
add
bound
jbe
cmp
xor
sbb
push
xchg
in
cmp
scas
push
scas
fisubrs
cs
push
or
outsb
cmp
mov
sbb
sub
inc
shlb
loopne
xchg
ss
sarb
sbb
or
jne
add
lds
inc
repz
mov
ds
sti
jo
adc
fldt
bound
shll
lock
movsb
out
and
movsl
adc
scas
jmp
fidivl
jne
fcomps
loopne
xor
push
jg
icebp
pushf
imul
test
and
lods
call
push
sub
jmp
fdivrs
pop
stc
lods
std
push
ljmp
inc
sbb
pop
loope
inc
mov
enter
dec
dec
fcomps
negb
ret
cmpsb
inc
iret
mov
jge
mov
adc
adc
or
pop
in
fwait
dec
lcall
insl
add
inc
aam
clc
adc
mov
jge
jne
fwait
mov
test
xchg
stos
pop
xchg
es
inc
insl
movsb
adc
and
sbb
mov
xchg
lea
jge
pop
pop
popa
pop
and
sub
sub
in
mov
shlb
push
dec
rcrl
fstps
lds
test
or
inc
mov
inc
outsl
and
lret
ja
mov
adc
xchg
jl
inc
fxch
xchg
and
cmc
das
add
jg
cmpl
cmp
mov
push
ljmp
cmp
cmpsl
outsl
dec
ja
or
xchg
sbb
add
addb
ja
aam
cmp
pop
mov
mov
or
and
sarb
mov
imul
pushf
dec
mov
cli
push
jmp
ljmp
push
into
mov
add
sahf
cwtl
cld
adc
pop
adc
push
mov
adc
pop
mov
and
mov
mov
adc
xor
jno
mov
fimuls
and
lds
lods
es
mov
popf
nop
xchg
ss
xchg
or
xor
es
sbb
mov
outsl
pop
sbb
movsb
add
or
ds
xchg
bound
js
mov
sub
mov
insb
cmp
jb
imul
add
lahf
aas
lods
sbb
inc
mov
jecxz
push
xor
push
lock
pop
int3
jo
mov
and
cmpsl
mov
cmpsb
mov
add
push
out
sbb
mov
or
int3
and
dec
dec
cmpsl
jb
insl
pop
ror
jo
leave
fsub
inc
jae
push
jno
in
cmp
push
or
lock
loope
pop
pop
sub
int3
cmp
sub
fmulp
int3
nop
xchg
pop
pop
sbb
mov
xor
sub
std
pop
cwtl
fwait
aad
outsb
out
fs
in
cmc
arpl
rorb
push
fldt
adc
stos
inc
push
adc
ss
stos
push
pop
outsl
dec
fcompl
cmp
outsb
or
adcb
jne
rolb
fcomp
insb
fs
jmp
xchg
pop
int3
dec
adc
jmp
pop
pop
xor
xchg
test
push
enter
imul
cmp
jo
inc
pop
enter
enter
fldcw
sbb
mov
jl
rcrl
push
adc
sub
and
mov
addl
push
add
orl
mov
insl
add
shl
jbe
xor
jg
mov
push
push
scas
mov
add
pop
outsb
rolb
negl
pop
sbb
movl
fiaddl
into
mov
mulb
je
cmp
movsl
shll
clc
das
out
pop
mov
xchg
js
jb,pt
mov
sub
sahf
and
test
jnp
xlat
fst
sbb
cmc
pushf
adc
daa
hlt
mov
or
mov
add
jge
mov
cmpsb
mov
ljmp
test
pop
jg
dec
xor
adc
mov
loop
dec
xchg
sbb
shrb
lods
stos
lcall
inc
shl
mov
lds
add
hlt
ljmp
test
cmp
push
push
mov
dec
movsb
jo
test
out
out
push
imul
hlt
sti
xchg
sub
mov
icebp
xor
inc
dec
jbe
push
outsl
adc
pop
test
popa
mov
xchg
adc
xchg
jae
lock
dec
push
push
cmp
mov
aas
mov
inc
int3
sbb
jne
stc
mov
xchg
and
push
sub
xor
mov
push
clc
fidivs
stos
out
push
pop
jb
iret
mov
fcmovu
xchg
xchg
pusha
call
mov
leave
mov
jbe
sbb
cmpsl
add
xor
popf
mov
je
inc
shll
in
dec
movsl
adc
push
mov
shrb
stos
mov
jbe
imul
in
mov
sbb
aam
stc
sbb
fsub
shlb
and
push
adc
pop
jo
arpl
pop
mov
xchg
dec
inc
xor
lahf
fiadds
stc
mov
mov
or
cmp
sti
imulb
push
lret
mov
adc
mov
aaa
cmpsb
push
aas
mov
push
jbe
cmp
push
cltd
pop
pop
sbb
mov
pop
and
add
ljmp
stos
push
sbb
xor
jb
inc
add
and
in
push
test
mov
push
mov
add
push
mov
dec
lcall
std
out
inc
inc
adc
mov
es
add
jnp
imul
xchg
pop
pop
in
sub
cmp
push
push
mov
xchg
mov
cmp
fidivs
fcoml
pop
push
mov
inc
push
pop
cmpsb
cmpsb
and
pop
jns
shlb
pusha
push
or
jbe
gs
inc
inc
mov
outsb
pusha
pop
pop
addr16
out
into
mov
es
cmp
cmpsl
push
shl
aaa
imul
and
movsl
mov
jb
sub
jp
xchg
cmp
dec
dec
fisubrs
pop
cmp
lods
xor
insl
adc
insb
repz
data16
ret
jg,pt
fcoml
xor
cltd
test
rcrb
gs
or
rcl
loope
sar
scas
cwtl
jb
cmpsl
data16
cld
jecxz
daa
mov
mov
jno
dec
cmpsb
cmp
inc
out
idivl
add
jns
push
and
dec
sbb
xchg
aas
mov
push
push
loope
jae
mov
jae
js
and
adc
sub
je
sbb
pop
out
outsb
mov
and
roll
push
loope
insb
ret
je
lock
imul
jae
pop
add
aad
sbb
pop
popf
cmp
add
imull
mov
fimull
pop
pop
loop
pop
push
cmpsb
std
pusha
jo
pop
lock
pop
in
pop
sbb
bound
pop
xor
dec
jecxz
mov
dec
push
xchg
and
lods
jno
inc
cs
popf
in
and
pop
mov
dec
shll
data16
data16
sbb
mov
lahf
xor
cmpsl
mov
movsl
pop
xlat
push
lea
mov
xchg
jnp
scas
arpl
inc
cmp
cmp
out
mov
inc
ficoml
xlat
ja
push
or
jp
popa
and
les
fwait
mov
and
ss
push
out
mov
shlb
and
movsb
xchg
xor
mov
push
or
add
and
int3
sub
add
mov
clc
loopne
outsb
push
loope
jbe
pop
subl
mov
bound
ljmp
pop
test
mov
add
scas
cmp
loop
fmulp
cmp
sbbb
loope
inc
aad
hlt
add
xor
popa
mov
dec
xchg
pop
mov
jnp
ret
and
lret
mov
frstor
xor
inc
icebp
test
in
add
sbb
insb
or
ret
xchg
adc
inc
idivb
mov
in
movb
inc
lss
pop
ds
pushf
and
out
test
mov
jo
js
lahf
mov
dec
sbb
mov
mov
jbe
or
clc
mov
cld
jecxz
call
lock
adc
cmp
sbb
in
cmp
scas
test
in
es
ss
test
sbb
ficompl
ret
mov
jmp
inc
aam
leave
pop
jecxz
out
mov
push
inc
mov
mov
into
insb
shll
add
fs
repnz
out
pop
sub
mov
cmpsl
inc
or
pop
hlt
xlat
ja
das
mov
pop
insb
aad
or
pop
push
ss
out
inc
mov
movsl
dec
mov
cmc
pop
pop
test
inc
je
cmp
popf
add
daa
adc
dec
push
and
and
fimull
scas
push
xchg
sub
mov
inc
stos
mov
mov
rep
aam
sub
push
stc
repz
jbe
mov
push
ret
ror
jae
outsb
repnz
sbb
pop
sti
std
clc
test
xlat
and
fidivl
bound
aam
mov
pop
mov
adc
sbb
js
jb
inc
enter
jle
mov
adc
xchg
and
sbb
jbe
sbb
adc
rcll
inc
ja
out
ds
pusha
sarb
xor
push
sub
push
nop
jge
in
int3
push
faddp
xor
mov
imul
pop
icebp
and
adc
addl
sbb
dec
and
loope
dec
lahf
mov
mov
jb
sub
mov
shl
mov
mov
sub
sbb
cmp
movsl
mov
cmp
or
mov
outsl
jne
fidivrs
adc
mov
sub
loopne
push
adc
aad
sub
mov
push
popa
or
push
add
xor
lcall
cmp
lods
push
adc
loopne
pushf
imul
push
mov
je
repnz
jo
out
adc
xchg
insl
xor
mov
pusha
imul
je
mov
jno
and
js
or
inc
and
xor
nopl
pop
or
push
shlb
dec
xor
jge
pop
les
dec
fiaddl
sbb
icebp
outsl
mov
repz
call
push
inc
out
hlt
test
not
jge
sarl
aaa
in
dec
add
sub
sbb
loope
mov
scas
lahf
pusha
outsb
test
fnstsw
sbb
cmp
cmpsl
mov
dec
je
out
scas
jae
ljmp
mov
inc
ffree
arpl
scas
fidivl
test
add
push
sti
xchg
test
mov
fdivrs
js
jle
pusha
dec
pop
push
or
pusha
sbb
xchg
mov
jne
cmp
push
and
jge
out
out
jne
mov
pop
jb
int3
aam
shll
xchg
mov
mov
cld
int
dec
sti
ret
mov
movsl
sub
sub
mov
pop
rcrb
insb
or
lcall
shll
dec
aam
imul
out
dec
loop
inc
dec
das
enter
xchg
xchg
imul
jbe
out
aas
xchg
bound
mov
sti
mov
jno
popa
ret
lcall
and
sbb
pop
push
jns
pusha
shrl
xor
dec
cmp
fisttpll
ret
nop
inc
mov
popf
dec
lods
jge
lods
daa
cltd
fiaddl
or
push
lahf
pop
sub
fnsave
jecxz
jmp
mov
pop
add
mov
in
subb
mov
pop
sbb
sbb
xchg
push
pop
rcll
test
jno
xchg
insl
adc
jp
mov
push
fcoms
mov
cmp
inc
fcmovnbe
inc
pushf
je
shl
sub
lret
subb
adc
jge
adc
jbe
cmpsb
adc
inc
pop
fwait
loop
js
mov
bound
pop
fsubl
sbb
pop
add
jb
pushf
sbb
jb
pop
pop
adc
mov
dec
mov
repz
hlt
aas
or
frstor
cld
cmp
cmc
repz
mov
xor
roll
cmp
movsl
scas
xor
cmc
or
adcl
cld
jl
dec
imul
inc
test
dec
cmp
pop
and
mov
mov
jo
push
jnp
lret
fdivrl
pop
fs
dec
cmp
in
mov
push
xor
or
pavgb
mov
sub
je
test
sub
cmp
lods
jmp
inc
mov
es
clc
mov
outsl
pop
or
add
mov
and
xor
imul
sti
jo
mov
pop
inc
testb
rcrb
adc
adc
add
adc
shll
lods
adcl
mov
xchg
xchg
or
mov
arpl
movsb
jp
sbb
lahf
jge
jg
add
adc
adc
push
push
pop
adc
ret
popf
mov
xor
xor
ret
pop
js
pop
inc
and
outsl
out
lods
xor
imul
fists
mov
or
add
sbb
stc
imul
aaa
sub
fcoms
dec
and
addr16
mov
pushf
aas
adc
movsw
lods
sbbl
in
inc
ret
mov
fiadds
cltd
xor
push
test
fwait
adc
mov
lahf
xor
sti
mov
push
and
aad
add
ss
cmpb
cltd
push
mov
inc
xor
dec
jl
repz
orl
dec
imul
push
lods
lock
ss
or
push
insl
mov
jo
ds
enter
stc
dec
insb
lods
mov
pop
mov
cmp
cmp
in
xor
int
movsb
adc
je
inc
ret
mov
cmp
outsb
cmpsl
cmpsb
xorb
adc
dec
mov
stc
mov
int
pop
mov
and
cmp
loope
jbe
movsl
adc
push
cmp
mov
ret
aaa
mov
pop
mov
mov
lods
jle
cmp
mov
es
mov
lret
cld
push
mov
imul
sbb
sbb
iret
pop
stos
mov
inc
loope
rorb
pop
repnz
gs
mov
out
aam
inc
imul
mov
or
xorl
cwtl
add
je
cli
cs
popa
dec
pushf
pop
lret
cmp
mov
cli
inc
mov
jnp
in
push
nop
mov
stc
inc
test
cmpsl
int
daa
addb
push
fisttpl
jp
outsl
shrb
or
fs
fdivrs
ret
mov
mov
pop
jne
sbb
sbb
ss
cmpsb
mov
gs
inc
imul
mov
adc
mov
pushf
xchg
inc
jg
add
dec
sub
dec
icebp
data16
push
ljmp
mov
sub
pop
in
push
pusha
cmc
push
ficomps
mov
inc
clc
jb
lods
xchg
pop
dec
addr16
pop
es
stos
cli
rclb
cmpl
sub
lods
daa
dec
push
mov
fscale
or
aam
push
xor
push
into
cli
mov
push
cmp
sar
jecxz
mov
stos
add
into
callw
pop
aam
repz
dec
pop
into
and
lods
fldt
ljmp
jnp
ss
or
adc
mov
adc
sbb
sarb
loope
mov
mov
pop
cltd
mul
mov
testb
scas
cld
push
test
push
xor
test
ret
xor
xor
mov
mov
mov
mov
and
dec
xor
inc
fwait
pop
xor
enter
cli
push
sub
popw
jo
cmp
mov
ds
mov
xor
outsb
and
ljmp
test
jp
lret
xchg
js
cmp
loopne
cmp
fiaddl
test
pop
mov
es
aas
pusha
cmpsl
pop
xchg
sti
sub
cmp
in
out
xlat
pop
out
pop
movsl
rorl
imull
and
xchg
push
inc
rcr
or
sbb
aam
xchg
xlat
call
jecxz
sbb
xchg
pop
test
mov
inc
add
test
xlat
sub
xor
push
mov
mov
mov
push
or
es
repz
adc
out
lock
pushf
jl
outsl
test
cmpsb
push
sahf
lahf
scas
xchg
cmp
push
xchg
data16
xchg
push
fstl
sbb
pop
mov
pop
outsl
imul
fldl
jae
xor
call
in
pop
push
and
inc
lret
mov
push
hlt
xchg
ret
stc
xchg
fisttpl
mov
cmp
and
xchg
shrb
stos
pop
or
add
inc
fcos
xor
lahf
jmp
stc
test
sarl
cmp
in
mov
push
rol
mov
cmp
pop
mov
cmc
shrl
jge
in
add
push
sub
adc
mov
ret
mov
jp
sub
adc
test
fidivrs
mov
cld
sbb
mov
pop
dec
mov
jecxz
xor
sub
add
movsb
dec
mov
mov
ret
and
push
cmp
ret
jle
or
xor
decl
xchg
out
pop
movsl
jae
les
cmp
sar
js
or
fdivs
fsubr
lds
notl
lea
mov
mov
or
cmp
pop
addr16
jae
or
or
sahf
ror
leave
xchg
out
jb
sbb
jb
inc
mov
pop
hlt
out
pop
xorb
shrl
push
ret
cld
cmpsl
test
lea
xor
fldt
pop
punpckhwd
push
sarl
notl
or
add
jo
aas
xchg
shr
pop
in
adc
push
dec
sar
aas
xor
dec
roll
sub
jae
inc
mov
in
jnp
add
pop
fildll
scas
dec
push
call
cmpsl
pop
movsb
mov
arpl
rclb
dec
insb
addr16
fcom
pop
xlat
insb
sub
fstps
addb
fcomi
and
xchg
jl
scas
sub
or
xor
mov
outsb
cmpsl
sub
int3
push
int
fsubrs
nop
push
pop
daa
mov
xchg
mov
push
int3
push
or
inc
or
arpl
sbbb
movsb
ret
add
push
dec
push
fwait
repnz
mov
idivl
dec
ja
pop
dec
add
int
out
movsl
mov
in
dec
imul
adc
adc
aad
xor
dec
gs
sarl
xor
stc
xor
lcall
xchg
arpl
or
mov
mulb
movsl
dec
call
lods
frstor
adcb
sbb
and
dec
mov
insl
lock
sub
dec
arpl
add
movsl
xchg
pop
xor
ffreep
or
cld
lcall
add
mov
add
pop
push
out
xchg
jmp
inc
ret
imul
enter
dec
lret
into
fxtract
mov
jmp
leave
roll
cmp
js
daa
and
out
mov
mov
shrl
add
pop
shll
or
testl
cs
mov
aad
inc
ja
xchg
sub
inc
inc
pop
jb
inc
cmp
xor
adc
subw
inc
fidivs
divb
adc
into
scas
out
sub
clc
or
push
clc
std
xchg
leave
xorl
and
jg
aam
mov
int
sub
add
and
mov
mul
roll
adc
ret
fs
mov
jmp
jmp
and
fists
cwtl
nop
cmp
cmp
jle
inc
icebp
into
push
mov
insl
leave
insb
mov
sub
fisubl
cmp
fldenv
paddsw
dec
sbb
into
add
dec
lods
ljmp
aam
lahf
lods
mov
mov
lret
mov
es
test
sbbl
aaa
xchg
xor
gs
push
mov
inc
rcr
jecxz
adc
fstl
push
adc
sub
xchg
lahf
iret
mov
inc
loop
xchg
mov
ret
mov
addr16
hlt
add
or
fldt
add
ds
rclb
xor
rcrl
mov
xor
inc
ja
stc
inc
aam
in
pusha
int3
push
inc
add
call
mov
test
adc
daa
aam
mov
test
pop
outsb
insl
out
out
cmp
adc
js
gs
lret
sub
lods
test
mov
stos
jg
scas
mov
inc
add
xchg
inc
sbb
sbb
cs
pushl
in
subl
insb
clts
xchg
insl
out
xchg
movsl
in
adc
lock
test
mov
ror
loope
fstpt
mov
test
sub
rcl
ficoml
xchg
je
mov
aam
lahf
out
pop
jl
sbb
or
mull
pop
xchg
stos
shl
push
sahf
adc
cmc
ret
cmpsl
int
cli
cmp
pop
stc
sub
out
xor
pop
sti
cmp
aad
pop
sbb
cld
push
mov
in
bound
lret
fld
cmp
jecxz
sarb
ficoms
scas
mov
das
jmp
pcmpgtd
sbb
mov
push
mov
pop
mov
fdiv
sbb
jmp
push
mov
xchg
movsb
inc
sub
jge
fsubs
mov
fdivs
out
mov
lods
cmp
mov
fs
push
mov
push
dec
imul
test
loope
pop
adc
xchg
ret
push
dec
mov
inc
sarb
cmp
xchg
jl
stc
adc
cmp
test
mov
xchg
xchg
imul
and
dec
push
push
pop
inc
lods
mov
scas
scas
push
test
test
cmp
sti
lahf
sbb
mov
or
pop
mov
mov
imul
mov
push
call
xor
cli
movsl
sarb
je
dec
lret
mov
push
fwait
aas
das
jl
in
xor
das
imulb
jmp
push
hlt
mov
and
xchg
mov
call
jns
fwait
cmp
mov
or
enter
loope
mov
aaa
lret
mov
xor
popa
repnz
inc
movsb
sarl
cmp
inc
adc
dec
mov
sbb
aaa
div
mov
dec
dec
faddl
icebp
lcall
in
pop
jmp
lahf
ljmp
js
bound
sub
outsb
mov
pusha
popf
and
fs
xchg
jae
enter
push
lods
adc
punpckhwd
loopne
jcxz
test
xor
mov
pop
sub
push
dec
push
aam
cmp
ret
icebp
ja
lcall
adc
xchg
fbstp
cli
movsl
insl
aaa
inc
decl
adc
xchg
inc
popf
xchg
mov
int3
loope
jbe
push
test
and
jns
enter
insl
cmp
sti
xchg
leave
dec
mov
sub
mov
outsl
add
jl
call
je
insb
xor
mov
lahf
mov
mov
push
push
xchg
sub
cmp
fcomps
cmp
dec
or
inc
roll
fwait
stc
jmp
push
fld
xchg
jle
ret
andb
and
frstor
add
dec
jno
adc
lret
sbb
pop
adc
push
mov
adc
rorb
scas
fsubr
mov
or
int
sub
mov
or
adc
push
adc
adc
and
sub
orl
pop
mov
dec
stc
inc
xlat
jb
in
aad
xchg
or
or
nop
test
jo
push
mov
inc
or
cld
into
cld
ret
cs
mov
mov
clc
sub
cwtl
or
xchg
push
adc
push
pusha
sub
cmpl
ljmp
pop
cltd
lahf
adc
or
xchg
cld
test
fs
mov
and
addr16
ficoms
stc
inc
pop
and
iret
loop
pushf
xchg
mov
mov
dec
aaa
mov
cwtl
pop
push
dec
mov
pop
inc
jecxz
dec
push
mov
decb
sahf
inc
mov
mov
fwait
shr
syscall
ret
jno
pop
aam
push
jne
sbb
adc
ret
ss
arpl
iret
fs
mov
aas
or
pop
sub
test
cmpsb
fs
enter
cs
pop
inc
xchg
les
test
inc
lods
syscall
dec
pop
cmp
lods
push
popa
sbb
stos
ret
and
lret
movb
test
push
aad
push
rcl
scas
int3
cld
fistpll
mov
sub
lds
leave
ss
dec
cmpsl
push
call
push
outsl
call
lock
out
ja
jmp
xchg
nop
stc
jle
mov
and
jp
dec
ret
dec
add
mov
dec
push
and
push
or
push
sub
ja
jns
rolb
addl
add
mov
mov
xchg
es
rcr
push
jle
je
ja
mov
unpcklps
adc
sti
enter
xor
cmp
std
jg
jno
icebp
cmc
rclb
sti
xlat
pushf
pop
inc
mov
imull
mov
xchg
mov
xor
fistpl
adc
cmp
xchg
shrl
dec
xor
and
ljmp
adc
push
pop
ret
mov
cwtl
int3
shrb
jno
adc
mov
xchg
mov
pusha
push
push
sbbl
add
in
jle
leave
xor
jne
ror
sbb
sahf
push
ljmp
aam
sub
mov
lea
xchg
dec
sub
and
pop
int
or
sub
mov
pop
mov
in
inc
mov
dec
jbe
sub
imul
cmpsl
sbb
aaa
adc
mov
xor
imul
repz
in
cmp
aas
call
push
push
leave
cmpl
int
xchg
xchg
popf
adc
lcall
cmp
jg
test
sar
and
cmp
push
mov
jp
mov
ret
cmp
xor
push
rclb
xor
idivb
push
roll
xor
xchg
loope
sti
dec
inc
jp
mov
inc
jne
int
mov
pop
loope
pminub
mov
cmpsb
add
adcb
lret
ret
shlb
xor
faddp
aaa
cmp
test
and
arpl
sbb
mov
call
and
push
pop
or
call
ds
push
fidivrs
dec
jb
es
pop
dec
dec
sub
dec
sbb
dec
xchg
xor
sbb
cmp
imull
jb
dec
fstps
loope
fadd
sti
arpl
xor
ficoms
sbb
pushf
in
push
repnz
pop
clc
xchg
lcall
and
pop
xor
jl,pn
arpl
adc
loop
call
fwait
or
push
pop
inc
addr16
xor
popf
cli
arpl
jmp
push
call
cmp
or
jbe
lea
dec
mov
adc
and
xchg
xchg
scas
mov
dec
repz
dec
les
mov
pop
inc
sbb
bound
and
push
aad
mov
or
aaa
fdivl
aam
pop
jmp
cmp
mov
inc
pop
cmp
mov
je
xchg
lock
inc
and
lock
add
sbbl
mov
int
mov
sub
push
sti
fwait
cmp
dec
mov
mov
mov
xchg
jp
xchg
aas
addr16
mov
mov
fstpl
repz
popf
cmp
aas
test
shrl
xor
rclb
xchg
js
movsl
rorb
jo
int3
enter
fisubl
pop
mov
xchg
push
adc
repnz
adc
pushf
or
cmp
xchg
cli
leave
fucomip
xor
inc
insb
jb
xchg
sbb
lahf
mov
xchg
pop
data16
int3
and
xor
call
leave
or
pop
stos
cld
dec
adc
enter
or
ds
iret
adc
mov
and
adcb
mov
sub
or
push
or
mov
rorl
fdiv
cltd
pushl
push
mov
mov
add
mov
leave
push
int3
pushf
push
out
dec
push
js
mov
jno
push
repnz
orl
outsb
dec
mov
push
sub
dec
mov
scas
iret
popf
cmp
sbb
test
repz
adc
xchg
sbbb
decl
shrb
mov
loopne
jle
fcmovnb
dec
dec
mov
fdivrl
test
dec
sti
movsl
cltd
lds
int3
push
sub
xor
xor
ja
bswap
cmp
sub
shlb
sbb
mull
and
cmpsb
pop
push
dec
pop
mov
mov
ds
push
mov
jb
fisttpl
lahf
pop
daa
pop
mov
loop
or
inc
and
loopne
scas
mov
sub
mov
leave
mov
push
cwtl
mov
push
pop
xchg
shll
lahf
out
vpsrlw
out
adc
call
sbb
rolb
mov
mov
pop
fwait
sbb
test
lret
es
jp
mov
mov
addr16
pop
jle
dec
xchg
es
mov
out
xchg
outsl
mov
push
aas
adc
test
in
mov
xchg
sti
pop
sub
xorl
inc
xchg
loop
lods
ss
xchg
inc
es
les
xor
cmpsb
imul
lret
jle
xor
inc
orb
pop
xchg
xchg
leave
mov
dec
pop
pusha
sbb
inc
mov
push
stc
push
test
and
mov
je
mov
outsb
push
mov
mov
xor
pop
pusha
or
xchg
push
test
mov
repz
stc
inc
adc
mov
imul
or
mov
sbb
cld
stc
xchg
sbb
in
clc
push
dec
xor
sub
loopne
inc
data16
in
push
xchg
pusha
inc
fstl
test
xchg
pop
push
pop
adc
push
sub
xor
or
and
pop
sti
fcom
test
mov
outsb
jo
fs
mov
mov
icebp
mov
dec
ret
mov
xchg
pop
cmp
addr16
fldl
jns
dec
and
mov
ds
lcall
fnstcw
sbb
xor
mov
icebp
incl
aaa
push
js
clc
test
adc
leave
pusha
xchg
sti
mov
movsl
jb
in
adc
fcmovnb
or
mov
pop
push
lods
out
cmpsb
dec
cmpsl
lcall
cmp
cmpb
imul
leave
into
pop
das
sub
mov
push
sbb
pop
sub
loopne
mov
sub
outsb
repz
sbb
xchg
popa
das
pushf
dec
imul
add
shrl
insl
push
xchg
lahf
sub
leave
popa
pop
lds
or
pop
ret
ficoms
arpl
es
xlat
stos
aaa
jne
ja
mov
xor
ds
jne
push
sbb
in
dec
push
mov
or
add
xchg
popa
adc
sti
ja
das
push
jae
insl
jp
fcoml
imull
and
mov
mov
xchg
jnp
push
xchg
mov
sub
adc
fsub
and
jno
xchg
int3
aas
lret
xor
dec
inc
sub
xchg
mov
push
lcall
rcrl
test
inc
xchg
aad
or
sbb
in
adc
das
scas
push
sbbb
sbb
cmc
jl
dec
stc
mov
sub
fwait
push
inc
or
subb
xchg
loop
mov
lds
adc
sub
clc
mov
stos
xchg
in
jle
fiadds
cltd
sbb
add
cmp
enter
popa
addl
fs
test
cmp
sbbl
cli
cmp
stos
ljmp
cmpb
ljmp
mov
dec
bound
push
xchg
ficoms
adc
std
sbb
mov
inc
push
mov
sub
sbb
fcompl
push
mov
inc
adc
sar
inc
inc
cmp
push
decb
test
cli
mov
int
dec
inc
inc
jbe
inc
popf
pushl
stos
sbb
sub
stc
dec
lea
mov
xchg
sub
xor
lret
jns
pushf
gs
or
lret
sbb
sbb
or
cmpsl
sti
insl
mov
je
cltd
inc
pop
cwtl
pop
add
and
xchg
fsts
pop
xor
push
rcll
inc
fwait
jb
js
sbb
mov
test
mov
xor
outsl
jecxz
pop
pop
pop
mov
add
das
mov
mov
add
stos
adc
xor
imul
pop
pusha
and
fstps
mov
ret
sbb
aaa
dec
jnp
cmpsl
nop
popl
gs
dec
lcall
inc
and
stos
dec
xchg
das
scas
push
push
sbb
and
lea
dec
je
call
adc
push
cmp
pop
xorl
bound
ret
fld
pop
adc
rclb
popa
movsb
outsl
xchg
adc
pop
loopne
outsl
cs
dec
lret
push
shl
push
icebp
hlt
xchg
dec
xchg
jecxz
cmp
inc
shrl
jno
das
xchg
stos
mov
xor
cmp
ds
mov
jecxz
movsl
pop
sub
movsb
jae
push
push
movsb
cmpsb
test
out
pop
sbb
out
push
cmp
loope
inc
xchg
int
dec
jno
mov
loopne
sub
std
or
xchg
xchg
je
dec
aaa
xchg
rorb
js
mov
popa
rcrb
sub
nop
push
mov
and
popl
std
cwtl
lods
adc
or
nop
or
xchg
adc
aam
std
lahf
xchg
aam
lock
loop
inc
push
ss
sbb
jp
mov
dec
sub
lret
inc
int3
jle
inc
or
icebp
ljmp
addr16
mov
lods
cmp
aam
inc
mov
mov
jmp
jae
lods
xor
lock
int
aad
sub
repnz
xor
cmpsl
int3
outsl
imul
cmpsb
cltd
ret
stc
add
loope
mov
jp
dec
sbb
mov
pop
incl
mov
jne
inc
loop
out
fwait
pop
popa
push
jno
roll
scas
int
aaa
or
cmp
cmpsb
dec
mov
lea
outsb
ja
mov
ljmp
add
ret
mov
lock
dec
push
sub
sub
fwait
and
sbb
sub
lret
push
dec
movsb
jmp
out
push
or
add
inc
sbb
js
out
mov
arpl
sbb
js
jl
lods
repnz
lret
sub
pop
cwtl
aad
mov
xor
xorl
out
cmp
inc
and
insb
into
repnz
dec
xchg
jg
push
lret
ret
and
fwait
mov
rcrb
push
jbe
lahf
mov
jg
loopne
push
fs
jmp
xlat
cmp
shl
bound
xor
xor
xchg
adc
lcall
imul
aam
mov
inc
adc
xlat
ja
pop
hlt
loop
out
ljmp
les
cltd
mov
jecxz
leave
xor
push
dec
mov
out
jmp
cs
rcrb
es
lods
push
cmc
inc
sarb
insb
ret
imul
push
shr
mov
add
pushf
and
mov
int3
add
sti
push
jge
jle
xchg
mov
aas
loope
lods
mov
and
cmp
icebp
hlt
mov
pop
xor
inc
push
inc
bound
and
cmc
data16
outsb
pop
xchg
inc
hlt
xor
lods
jl
pushf
insb
nop
ljmp
out
sbb
mov
imul
cltd
das
jecxz
mov
jecxz
repz
inc
dec
or
xlat
inc
fsts
addr16
mov
jne
sbb
add
pop
sbb
mov
xchg
push
dec
adc
mov
mov
cmc
rcrb
or
xchg
pop
outsb
add
xor
nop
or
xor
mov
test
and
movsb
rolb
mov
dec
and
stos
jmp
outsb
inc
or
out
dec
dec
mov
push
scas
es
mov
cwtl
or
dec
push
stc
icebp
dec
cmp
adc
pusha
push
cmpsl
push
jns
mov
xorl
add
imull
sbb
arpl
sahf
pop
jmp
inc
cmp
lcall
sub
repnz
xor
in
xchg
sbb
sbb
push
stos
aaa
stc
es
fwait
inc
inc
incl
push
sub
cmp
jbe
jg
rcr
test
pop
ret
fs
int3
hlt
jg
xchg
sub
loopne
rcrb
dec
push
and
stos
in
inc
adc
xorl
push
push
sbb
fwait
mov
and
lock
jg
sarb
jp
mov
notl
and
sub
bound
mov
lcall
inc
paddd
test
mov
lods
pop
xor
xor
pop
imul
sarb
add
incl
mov
and
rorb
and
pop
adc
sti
fbstp
xchg
cmp
add
add
gs
mov
aad
ljmp
jle
or
aam
fs
mov
mov
jns
sahf
push
mov
int3
movsl
inc
loope
loopne
lods
stc
loope
ljmp
orl
pop
icebp
mov
jp
fwait
lods
jg
and
jg
adc
gs
mov
out
jecxz
mov
fsubrs
sarb
mov
xchg
cld
lret
call
loopne
mov
arpl
mov
pop
xchg
in
ficoms
sbb
jo
mov
push
mov
sahf
mov
test
jecxz
out
fucomp
add
xchg
lret
or
mov
in
xchg
sub
inc
pop
jb
sub
sti
subl
and
call
loop
idivl
adc
arpl
jo
rcl
sub
jmp
and
leave
dec
sar
push
mov
ss
lret
and
xchg
data16
pop
jnp
outsb
inc
push
movsb
lret
cld
rcrb
or
arpl
stc
sub
rclb
aam
xor
inc
sbb
mov
fwait
or
xorl
sub
rcll
push
xor
lcall
js
jl
jnp
xor
fcomps
mov
push
inc
sbb
jecxz
jle
inc
les
pop
out
fistpl
ficoms
lret
mov
jo
pop
push
cmp
mov
sub
out
sub
clc
lods
cmpsb
cmp
bswap
in
subl
push
jo
mov
xchg
dec
dec
pop
cli
ljmp
jl
outsl
dec
mov
rclb
scas
jns
andb
or
mov
push
pop
xchg
roll
loope
movsl
cmp
jecxz
pusha
adc
inc
addb
cmp
lods
stc
movsl
mov
shll
bound
inc
sbb
add
pop
pop
repz
sbb
addl
adc
mov
fwait
jbe
nop
shrb
add
shll
aam
xor
invd
xchg
jnp
xor
mov
insb
xor
cmp
xchg
pop
in
dec
pop
out
mov
sub
popa
and
bound
jecxz
test
push
mov
cld
xchg
or
sti
jns
mov
or
mov
or
cli
mov
fwait
inc
pop
fistl
addr16
xlat
pop
pusha
aaa
or
lods
mov
dec
adc
ja
or
sbb
mov
mov
xchg
mov
aas
repnz
xchg
jb
cltd
adcb
insb
pop
mov
mov
sahf
xchg
cmp
mov
rcll
cs
mov
sub
mov
push
jb
or
or
inc
mov
xor
jge
shrb
mov
jno
lods
scas
sbb
jns
add
jae
cmp
ficompl
cmp
loopne
jns
nop
mov
xchg
xchg
lea
dec
fwait
sti
jno
adc
loop
jecxz
add
adcb
outsb
cmp
add
mov
mov
xchg
lret
mov
lret
ljmp
fwait
in
and
daa
jns
push
pushl
iret
xchg
incl
out
pop
mov
sub
mov
loopne
add
lret
ljmp
mov
lret
lods
clc
xchg
data16
mov
repnz
cltd
lahf
bound
sub
add
faddl
mov
outsl
add
ds
mov
xchg
mov
mov
outsl
test
push
cwtl
inc
or
add
inc
fstl
addl
fucomi
test
sub
mov
push
mov
cmp
fisubrl
pusha
mov
xor
cmp
clc
stc
inc
add
mov
outsl
out
pop
dec
mov
or
push
and
in
adc
add
aas
pusha
lods
fdivl
leave
mov
data16
jl
push
cmp
pop
arpl
push
call
ret
jb
adc
int
push
mov
ret
push
mov
and
xor
push
pop
add
fcoml
mov
cmp
sarl
je
fsts
outsb
loop
bound
dec
pop
adc
xor
negl
inc
or
jecxz
roll
and
dec
loope
inc
mov
lods
inc
rcrb
incl
fnstenv
lahf
incb
dec
push
xor
and
pop
cli
or
sub
pusha
outsl
lret
pop
and
cmc
call
mov
out
mov
mov
arpl
jmp
cmc
test
xchg
push
push
pushf
mov
cwtl
daa
cwtl
sbb
mov
cld
adc
fmull
jne
rorb
imulb
inc
sub
inc
sarl
lock
rol
ja
loopne
jge
popa
xor
lahf
cmp
push
xchg
mov
mov
mov
dec
mov
por
push
push
test
fnstcw
daa
or
mov
dec
imul
rolb
divl
imul
xor
adc
dec
push
mov
mov
inc
pop
push
jp
pop
jns
fcoms
mov
jne
and
pushf
pusha
cmpsb
sbb
or
mov
ret
mov
cmp
sarl
das
je
popf
and
pop
out
stos
jo
fistps
pop
addr16
shl
xchg
fsubs
jp
aas
cmp
ljmp
jnp
jno
mov
push
lods
dec
popa
inc
rcr
inc
inc
nop
xchg
and
push
lret
and
or
jmp
pusha
xor
mov
out
mov
xchg
dec
xor
fcom
shlb
into
mov
decb
xor
imul
inc
sbb
movsb
adc
push
test
inc
adc
subl
push
push
jle
and
clc
jae
scas
loopne
adc
dec
mov
cli
int3
cmpsb
xchg
xchg
xor
sbb
leave
sahf
into
mov
mov
rol
ds
xchg
adc
test
test
adc
and
jo
aam
push
aaa
lds
aaa
mov
mov
xor
lods
jbe
mov
andb
inc
inc
popf
xchg
lret
sub
bound
pop
repz
sub
push
mov
xor
xor
jbe,pt
out
movsb
xchg
add
cltd
push
insl
es
or
push
pop
insb
cmpsl
fildll
fbld
test
sti
test
jne
jg
outsl
scas
xchg
testl
ss
cmc
add
cltd
sub
inc
sbb
inc
xchg
push
aad
lahf
adc
and
adc
jl
xchg
mov
test
dec
cmp
jns
and
xchg
ss
test
pop
and
js
or
and
fiadds
inc
adc
jecxz
pop
cmp
inc
in
vmovntdq
imul
sbb
and
mov
xchg
jb
inc
xchg
cmp
lret
inc
pop
outsl
pop
rcrl
add
hlt
cmp
enter
sbb
fsts
dec
xor
jl
outsl
cmpsb
mov
cli
pop
push
pop
adc
inc
das
test
jmp
sbb
adc
aad
movsl
ss
lahf
fdivs
add
mov
imul
mov
inc
jb
ljmpw
aaa
call
addr16
mov
xchg
lea
hlt
mov
sbb
jns
push
clc
pop
dec
mov
inc
and
andl
mov
and
adc
or
inc
filds
nop
push
out
mov
push
pusha
push
mulb
dec
addb
leave
push
xchg
push
mov
stos
xchg
cwtl
mov
push
mov
push
stos
icebp
mov
scas
int3
jo
xor
or
in
cmpsl
push
push
add
push
daa
shlb
pop
adc
jmp
fbld
popf
jmp
pop
xchg
sub
lds
sbb
or
movsl
sub
stos
rolb
stc
mov
xchg
or
loopne
movsl
or
jbe
repnz
hlt
sub
push
xchg
pushf
inc
adc
push
mov
mov
xlat
push
filds
or
insb
lcall
inc
jle
mov
or
fcomps
dec
push
xchg
or
ljmp
sahf
sub
add
mov
push
aam
pop
bound
lret
xchg
lcall
xor
mov
or
fcoml
jg
iret
adc
dec
or
add
inc
push
into
lcall
mov
mov
js
push
push
jmp
hlt
cmp
cli
lret
inc
lods
add
stos
in
scas
jns
inc
jge
sub
sbb
es
imul
adc
fimull
ret
iret
arpl
nop
cmp
xchg
mov
jns
in
or
arpl
js
pop
xchg
insl
insb
inc
inc
sub
movsl
jb
mov
xor
fs
or
push
inc
mov
adcl
xchg
lret
sbb
jecxz
gs
mov
sub
push
aam
pop
out
les
or
loope
push
pop
mov
aam
inc
cmp
ror
cmp
fwait
cmp
dec
lock
repz
lcall
dec
or
mov
repnz
ret
shll
test
add
lods
mov
push
dec
out
lret
test
imul
fidivrl
scas
mov
loop
adc
insb
adc
jge
rorb
add
call
or
lcall
sub
clc
das
mov
push
pop
testb
loopne
dec
fsubrs
cmp
jecxz
pop
xor
test
lahf
xchg
stos
jge
or
cmp
fisubrs
xchg
cmc
xchg
mov
lods
sub
xchg
lret
ss
test
xchg
and
sub
xchg
lock
fistpll
inc
or
rclb
cmp
or
push
dec
xchg
adc
addr16
xor
popa
int3
sbb
daa
shr
adc
in
test
fcoml
cmova
push
inc
scas
popf
cltd
mov
je
bnd
rcr
mov
xchg
sbb
es
adc
cmc
cmp
das
dec
loop
cld
insb
pop
cmp
dec
test
insb
cmpsl
cmp
jg
fnsave
add
popa
pop
and
xchg
les
jae
xchg
mull
dec
movzwl
inc
sub
xchg
xchg
icebp
jge
inc
dec
xor
add
mov
out
dec
bound
mov
pop
mov
sbb
add
xlat
lret
pop
push
int3
mov
lret
adc
cmp
mov
add
pop
bound
dec
add
int
add
aas
pop
lds
fwait
or
inc
inc
xchg
pop
loop
push
pop
adc
icebp
insb
out
mov
cmp
xchg
fstpt
mov
scas
or
cwtl
fcomi
mov
and
mov
rorl
iret
jp
pop
loop
insb
sbb
push
mov
lahf
stos
orb
push
movsb
cmp
jnp
out
push
in
sbb
popf
andb
cmp
orl
cli
add
test
push
roll
xchg
std
cmp
fldt
into
mov
sub
jns
outsb
inc
mov
cld
push
insb
popf
mov
add
cltd
dec
sbb
pop
ss
sbb
bound
es
daa
add
push
xchg
mov
in
cltd
scas
mov
out
or
imul
xor
cmpsl
mul
dec
mov
adc
sub
test
stc
test
mov
dec
mov
outsb
mov
push
or
rcrb
cltd
adc
sub
test
sub
mov
or
scas
insb
lahf
jo
push
std
add
mov
shr
inc
push
lea
pop
mov
lret
mov
jl
xchg
sub
std
aaa
jge
xor
outsl
lret
mov
xor
mov
xor
mov
jp
mov
test
jg
out
push
stc
bound
insl
inc
mov
subl
adc
das
or
mov
mov
sub
fistpll
mov
dec
adc
push
cltd
aaa
xchg
inc
outsb
mov
push
mov
fst
jle
xchg
rcll
mov
mov
outsl
cmp
je
mov
scas
aaa
mov
jnp
out
adc
xor
jle
movsl
sbb
xchg
in
add
cld
cmpsb
push
fildll
icebp
inc
inc
leave
loop
filds
loope
mov
xor
pop
jns
xchg
daa
btrl
mov
adc
and
out
stos
in
into
or
xchg
inc
mov
int3
in
mov
mov
rcr
stos
or
cltd
loopne
aaa
mov
mov
inc
incl
loope
pop
jno
cmpb
test
rcrl
dec
in
pop
sar
push
ret
or
test
cli
out
mov
or
cmp
add
adc
mov
pop
cmp
lds
pop
addl
push
adc
mov
test
hlt
insl
clc
add
pop
xor
repz
mov
mov
lahf
xor
sbb
dec
movsb
push
adc
dec
cs
xor
fwait
iret
jb
xchg
call
filds
add
aas
adc
sbb
jae
xlat
mov
add
add
mov
push
hlt
jl
sub
stos
ret
inc
dec
mov
nop
push
push
fadd
add
cmpsb
jp
lret
cmpsl
pop
lret
or
mov
fmull
cmp
jae
fmull
or
jne
sub
fdiv
jns
sub
repz
sbb
jl
sub
cmp
inc
add
lds
scas
jle
push
jnp
arpl
and
cs
inc
inc
repz
lahf
fwait
push
inc
add
sub
scas
adc
adc
sub
dec
pop
mov
mov
cmp
sub
jg
mov
repz
arpl
xchg
mov
push
cs
cmpsl
hlt
lods
daa
adc
jne
mov
out
xor
cmpl
lret
js
addr16
mov
inc
and
xlat
notl
ss
les
mov
xor
and
aaa
cmc
push
jbe
ljmp
cmp
pushf
lea
in
add
xor
mov
mov
adc
sbb
jecxz
push
jmp
inc
fcmovne
mov
pop
lea
jb
sbb
cltd
sub
push
cmpsl
mov
test
dec
sbb
icebp
and
fadd
call
into
pop
mov
xchg
mov
mov
or
lock
lds
scas
in
and
jmp
cld
pop
data16
and
cmpsb
sbb
shr
sbb
out
cmp
jg
test
je
fmuls
cmpsl
popa
fwait
sbbb
mov
mov
inc
jno
jmp
aas
fbstp
push
pusha
mov
leave
pusha
daa
in
inc
dec
or
xchg
or
adc
cli
mov
dec
adc
popa
dec
jle
cmp
pushf
leave
inc
stos
sbb
xchg
shrb
lcall
clc
add
mov
std
mov
add
sub
sbb
or
xor
fisttpll
pop
inc
pop
mov
push
sub
subb
test
mov
lods
and
pop
inc
outsb
push
jge
xchg
in
mov
out
negb
insb
or
ljmp
mov
xchg
inc
and
and
je
rorb
bound
jne
into
fcompl
aas
jp
sub
adc
and
mov
stos
cltd
pop
xlat
or
mov
and
pusha
test
lds
lds
dec
fdivs
aam
inc
inc
xor
mov
jae
in
dec
mov
xor
out
icebp
or
pop
ret
ret
fbld
sbb
adc
add
xchg
pop
sbb
add
push
aad
pop
jb
mov
popf
or
mov
mov
mov
imul
aad
ja
push
enter
decl
jb
mov
dec
dec
add
jae
dec
lcall
imul
sbb
ja
inc
add
cs
pushf
cmpsl
mov
mov
es
lret
lcall
sbb
mov
ds
xchg
jg,pn
add
jo
in
adc
adc
les
ja
fidivrl
xor
xor
movsb
popf
add
push
pop
rclb
mov
sbb
int
jns
test
push
ret
fisubrl
xorl
sub
out
int
sub
push
push
add
or
imul
call
repz
or
cli
mov
push
sbb
cmp
and
pop
sub
mov
ss
sub
mov
cmp
into
xor
in
repnz
cmpsb
dec
fists
mov
adc
in
hlt
inc
pop
or
lock
iret
mov
es
test
mov
icebp
out
pop
call
jle
mov
dec
or
mov
cmp
and
mov
sarl
mov
cld
xchg
leave
and
cmp
es
test
shl
inc
dec
xor
imulb
fiaddl
jae
fcompl
imul
mov
jns
mov
push
int
jmp
pusha
inc
mov
adc
jl
negl
rorl
cmc
mov
fistps
pop
push
jb
aas
pop
mov
push
test
popa
xor
mov
cmc
cmp
rolb
mov
shll
inc
mov
repnz
ljmp
test
pop
jno
xor
orl
std
adc
sbb
add
pop
sbb
jb
insb
mov
inc
mov
pop
enter
push
and
dec
test
mov
lret
xor
jns
fsubrl
sub
xorb
fstpt
lcall
mov
cmp
add
movb
outsl
std
jge
insb
arpl
imul
cmc
mov
cmp
ss
sbb
push
push
scas
mov
repz
sbb
mov
pop
fistps
rcrl
stos
js
sbb
loope
outsb
shrl
ret
repnz
mov
xor
sub
jo
or
fcoms
xchg
jne
loopne
dec
xchg
ret
push
xchg
cltd
push
inc
fldenv
jnp
lods
and
or
push
mov
call
outsb
ret
push
cmp
addb
add
add
aam
cmp
cmpb
out
pop
in
fldenv
shll
or
jge
imul
pushf
inc
ret
mov
inc
out
cltd
or
add
sti
xchg
in
in
cmp
test
xor
addr16
cli
mov
xchg
and
dec
xchg
dec
pusha
popf
jmp
int3
mov
leave
jbe
sbb
test
lea
ds
inc
adc
aad
inc
adc
divps
mov
push
mov
sub
shrb
jb
lret
pop
sti
enter
in
ret
imul
lret
mov
inc
imulb
or
sub
xor
sub
jge
jge
jg
scas
mov
out
dec
movsb
fnstsw
iret
dec
scas
test
cwtl
mov
fstl
cmp
inc
filds
dec
int
test
jge
aam
scas
lea
and
and
xchg
jecxz
nop
lret
sbb
vorps
popa
ret
sub
sar
cs
mov
test
add
js
stc
movsl
xor
pusha
sub
lcall
scas
js
sub
imul
nop
scas
push
lods
xchg
mov
dec
mov
pop
stos
mov
xchg
xchg
das
arpl
sbb
push
mov
mov
fidivrl
lock
lcall
mov
mov
push
lock
jmp
sarb
mov
adc
sbb
imul
out
or
mov
inc
inc
pop
and
xor
sub
pop
int
insb
push
or
cmp
mov
inc
mov
cwtl
popf
or
or
mov
jns
sti
cld
pop
outsl
hlt
lock
fcmovbe
lret
and
shlb
cmpsl
pop
test
add
sahf
outsb
push
rol
push
mov
daa
mov
jmp
add
push
out
stos
jb
xor
rorb
or
divl
fwait
jo
std
popa
push
aad
and
fsts
scas
popf
leave
push
ljmp
loopne
adcl
dec
inc
in
or
jp
fcmovnu
stc
fsts
subl
sub
orb
insw
push
stc
jl,pn
jge
rcll
sub
pop
add
maxps
or
fdivr
sbb
jp
je
std
cmp
lahf
xor
dec
cmpsl
mov
loope
dec
fists
rorb
sbb
adc
lret
roll
or
mov
and
iretw
dec
adc
ja
pop
stc
inc
jmp
insb
out
xchg
push
inc
lock
mov
test
sbb
adc
jge
iret
add
or
lds
sbb
popf
push
add
mov
test
mov
leave
fisubrs
fldl
inc
xchg
push
xchg
dec
mov
out
out
inc
pop
dec
and
nop
out
add
in
dec
data16
out
xchg
xor
sub
mov
push
jecxz
loopne
add
pop
es
pop
out
test
mov
cmp
push
inc
push
inc
mov
sub
out
je
test
pop
movl
dec
rcll
add
or
jle
or
scas
sbb
pop
cmpsb
jns
int
jl
ret
xor
mov
data16
js
test
add
pop
adc
push
cli
xchg
add
mov
jmp
add
push
mov
push
test
xor
sbb
enter
adc
cld
pop
outsb
sub
mov
mov
icebp
lcall
jp
in
stc
gs
mov
push
fldcw
lock
sbb
adc
jmp
sub
mov
rolb
push
lock
fmull
cs
cwtl
pop
inc
xchg
dec
mov
aaa
xor
mov
mov
inc
mov
cld
insb
inc
xor
mov
call
pop
faddp
xchg
les
sbb
lods
out
andl
test
pop
cli
xchg
arpl
gs
xchg
pop
scas
dec
or
or
out
mov
mov
fs
cltd
mov
aaa
push
fwait
pushf
ficoms
std
gs
jbe
mov
out
in
inc
add
xchg
lock
sbb
xchg
jae
ret
shlb
fnsave
mov
rcrb
adc
ja
scas
cmp
jno
and
fld
inc
enter
inc
cltd
clc
pop
aad
les
mov
dec
mov
xor
xor
sbb
lds
cwtl
jb
adc
sarl
in
pop
mov
jmp
fcmovbe
jb
adc
jnp
gs
xchg
xor
in
dec
out
push
sub
sub
sbb
push
mov
pop
push
lods
dec
lock
mov
lods
xor
popl
xchg
cmp
dec
pop
popf
add
jae
fsubs
xor
lock
cmp
into
add
push
orb
ret
ss
pop
ficoml
iret
add
adc
iret
or
xor
inc
adc
into
lea
jl
mov
mov
fldl
pop
iret
mov
dec
test
sahf
sbb
pushf
mov
mov
mov
jb
in
xchg
xchg
movsb
out
scas
les
pop
jno
xchg
shlb
push
lcall
or
cmp
sbb
sub
dec
jg
jb
xchg
xchg
cmpsb
cmp
jl
jp
outsl
out
rcl
mov
shlb
bound
or
imul
shll
testb
xor
call
aaa
je
mov
add
lds
and
jbe
inc
pop
filds
leave
stc
mov
xchg
or
dec
add
or
gs
dec
push
into
pushf
pop
jno
mov
or
insl
mov
adcl
fidivrs
and
in
xor
xchg
aaa
cmp
pusha
fsubl
mov
pop
and
ret
and
xor
ss
test
xchg
ja
arpl
sahf
pop
loope
and
adc
test
xor
sti
xchg
inc
test
xor
and
fstp
outsb
push
add
ret
popf
gs
lcall
add
into
mov
stos
push
or
ljmp
mov
jbe
mov
mov
loopne
popa
sub
cmc
pusha
pop
sub
xor
sub
sub
cli
push
shrb
lret
sti
or
cli
jae
adc
push
test
arpl
es
pop
xchg
pop
popf
lock
test
test
lea
cmp
mov
cld
pusha
js
mov
lods
mov
call
mov
cmpsl
stos
add
out
sub
xchg
enter
loop
jne
ficoms
adcb
in
shll
gs
and
popa
add
inc
push
or
ss
sti
fst
xor
fs
mov
adcb
jo
mov
sbb
es
xchg
loopne
mov
cmc
and
adcl
lods
add
inc
adc
aad
sar
jle
cmpxchg8b
int
jo
cmpl
scas
call
add
mov
leave
inc
adc
fisubs
aad
sbb
push
lock
sarl
fcomip
mov
push
cmc
int3
xchg
movntps
or
push
fsts
or
idivl
insb
push
pop
pusha
ljmp
sbb
sbb
xchg
scas
enter
dec
sub
dec
cmc
jno
mov
loope
xorl
cmpsb
jnp
insb
sub
test
loopne
aaa
hlt
sub
int3
test
push
jmp
lods
mov
test
adc
ret
sub
das
fsubs
fucomp
xor
repz
xchg
nop
je
ja
popf
repnz
stc
sub
icebp
js
mov
adc
mov
stc
loope
mov
adc
jbe
pop
jnp
fimuls
mov
dec
push
xorl
xchg
shl
aad
je
cmpb
inc
fnsave
in
dec
pop
mov
pop
mov
adc
lea
xchg
pusha
pop
xchg
loop
cmp
jnp
jbe
mov
or
push
inc
mov
dec
out
xchg
xor
adc
mov
pushf
stos
fwait
add
js
dec
fstl
scas
in
dec
cmp
pushf
and
jo
rcrl
jg
movsl
inc
insb
scas
bound
ljmp
sti
cs
aad
jl
mov
sti
mov
pop
push
mov
cli
mov
mov
ljmp
mov
ret
and
xchg
adc
push
xor
lock
sbb
js
pop
mov
xor
scas
and
mov
mov
mov
xor
xchg
jmp
xor
aam
jns
fld
cmpsb
and
jmp
xchg
inc
and
inc
pusha
je
pop
dec
jae
int3
add
arpl
xor
push
addr16
stos
mov
ret
bound
imul
mov
jp
mov
ret
sbb
or
pop
daa
popl
cmp
loope
xlat
inc
adc
test
adc
mov
outsb
movl
mov
push
xor
ljmp
push
pop
push
mov
inc
icebp
push
adc
test
jo
xor
ret
pop
mov
or
cmp
mov
das
loope
adc
adc
out
out
xor
or
jnp
dec
mov
enter
dec
adc
or
push
rcll
xchg
pop
and
pop
fcompl
push
and
scas
push
adc
inc
popa
aad
adc
mov
pusha
mov
push
sbb
xchg
jnp
push
ffree
adc
xor
mov
inc
enter
popf
inc
jmp
mov
pop
in
jne
xchg
in
and
cwtl
adc
mov
pop
aaa
cmc
mov
je
jmp
mov
sarl
xchg
rcll
outsb
mov
and
gs
aam
test
mov
lock
pop
rcrb
je
sar
das
cmovp
cmp
retw
adc
pop
sub
movsb
or
mov
add
inc
xchg
xchg
in
pop
lock
sbb
mov
cwtl
sub
frstor
jmp
adc
add
sub
mov
imul
pop
push
mov
push
scas
mov
stos
je
lahf
test
rolb
decb
popf
leave
push
andb
jl
dec
int
xchg
jo
mov
aam
into
dec
xor
xlat
push
and
outsb
lcall
jmp
arpl
xchg
pop
pop
cmp
scas
daa
addr16
adc
sub
pop
mov
fnsave
dec
pop
shlb
pop
test
push
inc
xor
jbe
aas
test
call
imul
mov
pop
push
jp
orl
stos
dec
xor
mov
sbb
push
pop
jnp
mov
lret
arpl
rcll
mov
jnp
jno
sbb
or
jmp
cwtl
scas
sbb
lcall
es
lock
test
mov
inc
and
push
lock
and
repnz
sahf
cmp
mov
rcl
or
add
dec
out
dec
sub
xor
insb
dec
push
test
rcll
xlat
or
xor
inc
xchg
push
xor
and
mov
adc
ja
adc
sahf
in
pextrw
lods
mov
shr
xor
mov
pop
outsb
hlt
push
jns
or
ja
bnd
jb
or
adc
je
insb
mov
xor
das
mov
mov
repnz
push
stc
cmpsl
mov
mov
bound
sbbl
test
adc
or
adc
adc
pop
and
xor
dec
xor
lds
jp
or
add
push
push
lcall
dec
int3
or
ljmp
dec
pusha
pop
mov
cwtl
les
cmp
xchg
pop
mov
cmp
mov
push
cld
adc
movsl
mov
loopne
loopne
xchg
xor
pop
pop
test
loop
pop
scas
insb
ss
and
and
cmp
sbb
imul
pop
shll
sub
leave
mov
inc
sarb
mov
bound
xchg
mov
push
sub
in
aas
jmp
aad
xchg
repz
mov
mov
outsb
adc
popa
lret
jnp
jecxz
sbb
lea
dec
aad
cmp
inc
stos
jno
out
xchg
xchg
push
clc
fdiv
test
mov
xor
out
scas
mov
inc
repz
cmp
sub
pop
or
mov
aas
bnd
test
xchg
xchg
lahf
into
pop
ljmp
cmp
les
xor
cmc
mov
cwtl
cmpsb
fwait
ljmp
push
xor
sbb
xor
mov
out
push
jns
dec
pushl
popf
pop
clc
fcoml
rclb
jns
inc
clc
jo
adc
pop
fnsave
fadd
xor
call
inc
xor
sti
shlb
out
sbb
or
cmp
daa
cmp
cmp
push
mov
and
roll
das
negl
insl
mov
in
xchg
dec
mov
test
stos
sub
dec
dec
sbb
or
lods
jnp
add
les
js
addr16
cwtl
rclb
aas
xchg
xor
sub
hlt
mov
mov
sbb
mov
repnz
or
inc
lret
ja
fimull
inc
adc
rcrb
xchg
or
or
inc
into
daa
and
adc
sbb
jmp
movsl
jl
hlt
pop
fwait
stos
lock
and
xor
movsb
cwtl
test
inc
dec
popa
and
into
dec
push
add
out
aad
xchg
sub
fsubl
cmc
mov
mov
test
lds
xlat
int
rcrl
push
and
cwtl
sub
loopne
arpl
push
das
bound
ss
jl
iret
scas
or
mov
push
fs
aas
xchg
fldt
mov
mov
pop
repz
push
and
dec
or
xor
xor
mov
mov
or
pushf
dec
movsb
and
mov
mov
cmpl
cmp
in
jle
loopne
jo
jg
aam
daa
and
fsubrs
dec
add
push
mov
mov
cmp
insb
cltd
pop
inc
out
xchg
mov
push
loopne
insl
ret
leave
sub
or
mov
xor
mov
and
or
cli
xchg
pop
or
add
das
push
or
ds
pusha
test
mov
int3
mov
test
scas
sub
shrb
out
dec
rorl
mov
ficompl
jmp
jle
and
rclb
inc
pop
inc
inc
sub
mov
cmpsl
sub
in
sub
xchg
or
shll
cmp
leave
sub
imul
imul
adcl
lcall
mov
lods
sub
mov
xor
sbb
mov
add
push
dec
inc
pusha
ljmp
cmp
mov
inc
mov
xchg
push
ficoml
fists
outsl
inc
push
js
data16
adc
cmp
add
and
xor
sub
in
std
or
adc
push
cmp
jno
cmp
cli
loopne
int
cmp
in
add
vpaddb
xor
cmp
add
dec
adc
lds
pop
xor
arpl
jae
sbb
aas
out
jmp
or
add
pop
xor
inc
push
loope,pn
lock
fdivr
xchg
pop
mov
dec
push
dec
inc
dec
rcrb
out
adc
hlt
and
cmc
cmpsl
lods
subb
lret
ljmp
inc
mov
pop
dec
dec
rolb
lret
mov
je
lock
test
cs
in
pop
xor
pop
and
dec
add
rcl
inc
out
rcl
xchg
mov
mov
or
repnz
jo
mov
pop
iret
mov
fsubrs
test
add
jl
sub
xchg
xchg
adc
jo
cld
mov
adc
push
pop
std
sub
mov
subb
and
fdivrs
cwtl
shrb
ss
outsb
push
aas
aaa
jne
test
mov
mov
clc
lods
rcll
int3
call
repz
arpl
and
xchg
or
inc
ret
push
test
dec
imul
fcoml
ret
mov
dec
mov
cmp
pop
lret
movsl
sbb
inc
xchg
and
mov
into
pop
gs
cwtl
pop
enter
sbb
mov
jge
mov
gs
rcl
cmpsl
cmp
sub
daa
jecxz
dec
js
sbb
dec
daa
aad
fidivs
adc
mov
jge
add
ljmp
jbe
ljmp
xor
mov
and
jecxz
push
mov
cmp
data16
mov
and
mov
push
cld
push
lods
je,pt
mov
cmpsl
lods
movsl
mov
inc
out
addl
outsl
pop
jo
lds
adc
stc
orb
xor
push
jl
or
sub
dec
ret
mov
test
ret
mov
inc
cmp
pop
incl
lods
xor
mov
or
xchg
inc
imul
jp
xor
sub
sub
incl
push
call
pop
fdivrl
loop
test
ficoml
out
xor
sbb
test
sub
out
push
sbb
scas
jno
adc
dec
jno
sub
test
xor
adc
add
fisubrs
xor
xor
or
mov
pop
push
je
push
fwait
jo
test
inc
xor
pop
sub
jg
jno
enter
push
sub
popa
mov
cwtl
sub
ljmp
pop
jne
rclb
sbb
sbb
mov
push
fsubrs
xchg
or
test
inc
cmpb
push
aad
js
mov
cwtl
div
loopne
mov
xor
ljmp
lret
push
data16
push
xlat
push
xchg
adc
xor
mov
js
insb
inc
mov
mov
rcll
arpl
mov
mov
inc
push
pop
add
lcall
jmp
mov
mov
testl
cli
filds
jb
sti
fchs
cmpb
xor
sbb
lahf
push
into
jno
xchg
ss
mov
iret
cmp
sub
add
test
adc
in
xor
int3
dec
aaa
dec
insb
fildll
cwtl
dec
add
sub
xor
fisttpll
add
mov
das
and
push
jle
mov
pop
daa
sbb
xor
push
or
das
mov
jnp
or
sub
mov
inc
data16
cld
movsb
push
or
cmp
pop
aaa
push
mov
xchg
adc
bound
imul
pop
pop
xchg
inc
jle
mov
mov
sub
mov
dec
fcompl
negb
and
fiadds
push
cmpsb
cwtl
cmp
jno
mov
jecxz
mov
shr
mov
mov
je
int
daa
in
jp
rclb
pop
cmpsb
xchg
xlat
loopne
ret
mov
test
sbb
cmpsb
sub
xchg
ret
sbb
rorl
mov
xchg
pop
and
cmp
mov
gs
sbb
out
sbb
or
push
xchg
insl
idiv
xchg
push
test
jo
scas
in
repz
mov
adc
inc
icebp
jnp
ljmp
bound
or
add
or
dec
cmp
xchg
imul
add
dec
mov
cmp
mov
mov
out
test
repz
mov
test
add
outsb
push
adc
inc
jge
mov
xchg
les
lret
outsb
push
shll
dec
inc
sbb
dec
xor
rclb
movaps
xchg
adcl
data16
add
jge
mov
pop
test
sub
push
mov
out
out
pop
aad
mov
inc
sub
sub
rcrb
mov
or
jge
xor
lea
mov
int
adc
inc
shlb
aas
std
es
jns
sub
sbb
jae
xchg
and
data16
mov
adc
mov
out
dec
pop
mov
mov
stc
add
mov
int
mov
cmp
mov
add
pop
add
popf
mov
call
popa
cmpl
inc
cmp
adc
sbb
sub
imul
and
mov
sbb
ja
loope
fdiv
cmp
jno
sub
repnz
pop
mov
mov
insl
lea
or
cmp
ffreep
nop
adc
frstor
scas
fsubr
lea
jle
xchg
in
xor
inc
push
mov
cmp
sbbb
jnp
mov
cmpsb
dec
imul
xchg
xchg
pushf
adc
rorb
mov
sub
push
dec
ret
popf
lret
push
pop
jno
or
insl
xchg
sbb
mov
and
pop
in
dec
rcr
cld
adc
push
xorb
pop
loope
add
pop
inc
pop
imull
pusha
shll
roll
daa
xor
nop
outsb
xor
cwtl
mov
jne
aam
aam
sti
enter
les
icebp
xchg
jno
sub
push
cmp
push
ljmp
aam
lds
xor
cltd
and
insb
outsb
mov
pop
mov
sub
mov
cld
adc
jnp
aaa
sub
dec
dec
nop
xor
mov
adc
stos
push
pop
dec
leave
cwtl
aas
pop
hlt
pop
sti
scas
mov
pop
push
sub
fs
dec
imul
dec
jp
mov
pop
test
xchg
pop
cmpsb
jo,pn
dec
xor
cmp
stc
popf
rclb
cmc
ret
lret
jmp
xchg
push
loope
mov
push
pop
push
mov
push
adc
add
fld
cmpps
fisubl
loopne
mov
mov
js
repnz
xchg
cmp
lcall
sarb
imul
push
lods
movsb
adc
add
mov
sub
call
cmpsl
repz
inc
inc
and
stos
roll
rep
out
dec
jge
fwait
ss
ret
cwtl
pop
pop
inc
xchg
fs
mov
dec
add
pusha
inc
sbb
orl
notl
test
ret
test
sub
ds
out
das
sub
mov
xchg
leave
rcr
push
mov
cmp
lods
mov
cmpsl
movsl
lods
sub
and
push
mov
mov
sbb
stos
push
stc
adc
daa
push
jae
adc
out
adcl
sub
les
mov
stos
and
cmp
and
push
in
and
scas
pop
inc
adc
adc
notb
lds
push
stc
lds
sar
jmp
xchg
mov
outsl
xchg
ljmp
hlt
test
das
xor
pop
mov
jecxz
or
stos
cmp
xor
xchg
xchg
shrd
push
es
sub
push
aam
fcompl
iret
add
xchg
mov
mov
mov
cmc
or
sbb
push
push
adc
inc
add
xor
lea
gs
rol
fwait
xchg
subl
lcall
dec
ljmp
in
sub
fcoml
add
fneni(8087
sub
xor
inc
mov
and
std
movsb
cmp
xchg
pop
cld
addl
and
inc
add
loopne
jge
aad
mov
pushl
cmpsl
loopne
jle
sahf
sbb
jecxz
xor
repz
test
adc
movsb
mov
mov
ss
mov
iret
movsl
add
shrb
outsl
cmpsl
jb
cmpsl
adc
push
xchg
hlt
jle
inc
xchg
stos
cmp
jge
scas
insl
das
int
scas
mov
sbb
iret
xchg
loope
adc
jb
push
sbb
cltd
dec
sbb
push
fists
stos
sub
sbb
jecxz
inc
xchg
bound
pop
sub
sub
out
and
jecxz
xacquire
ret
dec
je
xchg
pusha
lcall
pop
in
dec
std
mov
lock
xorb
mov
jo
imul
in
stc
inc
js
js
push
xlat
push
ret
or
addr16
pop
or
notl
movb
xchg
aad
or
ja
sub
movsl
dec
andb
dec
mov
cltd
fs
insb
lret
iret
jno
sbb
or
std
clts
mov
in
testb
jo
inc
stc
in
cli
aas
scas
and
jno
das
sbb
lret
inc
add
cld
xor
mov
sbb
cmc
popf
inc
pop
pop
sarb
pop
outsb
push
mov
jb
push
fsub
dec
int3
test
push
mov
hlt
fwait
lahf
inc
push
in
push
out
faddl
roll
insb
dec
div
inc
fiadds
leave
and
pop
mov
leave
jne
ja
mov
jbe
jne
lcall
jmp
inc
neg
lret
cli
or
or
in
aad
rol
dec
sub
inc
sarl
push
in
xor
ss
insb
cmp
fwait
add
push
sub
and
push
loop
pop
jg
sbb
movsb
sbb
pop
xchg
ret
cmpl
enter
gs
in
in
lahf
pop
inc
mov
outsl
sbb
outsl
sub
fidivrs
add
popf
jmp
mov
lret
push
and
mov
int3
adc
ret
inc
or
xorb
leave
inc
xor
mov
sahf
js
pop
sbb
xor
popf
clc
pop
push
shl
jmp
adc
mov
sub
or
add
xchg
sbb
jb
cmpsl
dec
dec
jo
adc
dec
cltd
sub
cmp
cmp
icebp
sbb
fnop
scas
mov
xor
lock
inc
mov
inc
inc
cltd
pop
mov
or
sub
roll
pop
jno
push
fistpll
nopl
cwtl
stc
lock
lret
aam
fidivl
dec
push
enter
dec
lods
push
scas
cli
jp
in
cmp
ja
add
sbb
scas
lcall
dec
popa
xchg
or
cltd
mov
mov
sti
test
ud2
mov
mov
xor
mov
jmp
pop
nop
adc
pop
mov
fisubrl
add
nop
outsl
xrelease
inc
mov
cld
enter
ret
cmp
add
xlat
stos
sub
in
lock
mov
call
mov
cwtl
mov
fdivl
push
xchg
sub
leave
popf
hlt
dec
ss
jne
mov
or
ljmp
loope
xchg
sbb
jp
les
or
aad
add
pop
mov
cmp
jle
shlw
clc
lds
fcompl
cwtl
stos
mov
dec
sti
cld
loopne
cmp
xchg
pop
rcrb
mov
jno
test
js
inc
inc
push
jmp
xor
adc
mov
mov
jno
jb
mov
test
shll
and
sub
cmp
addr16
and
movsb
xor
ljmp
push
fildl
jecxz
fildll
cmp
mulps
inc
pop
arpl
mov
sahf
push
mov
aam
test
cmc
imulb
mov
xchg
inc
sbb
cmp
fwait
sahf
popa
sbbl
mov
pop
lds
or
hlt
mov
mov
cmp
in
pop
cmpsb
addr16
orl
jns
and
mov
xchg
or
repz
scas
cltd
enter
inc
negb
fnsave
cmp
push
and
adc
insb
insl
jb
adc
fbstp
dec
decb
mov
pushf
jle
aad
iret
cmp
into
jl
adc
out
test
adc
push
mov
int
int
push
add
daa
jp
mov
mov
ret
movsl
cli
mov
lock
push
xchg
call
jge
jp
fists
mov
aad
fcompl
sub
sub
aaa
rorb
shrb
jbe
shrb
movsb
pop
inc
rclb
and
pop
mov
mov
xchg
inc
inc
nop
stos
lods
fdivrl
out
test
inc
iret
dec
notb
xchg
sti
dec
dec
add
push
xchg
pop
sub
inc
insl
cltd
out
sbbl
inc
mov
call
cmpsl
cli
bound
push
push
in
fbld
ljmp
xchg
loopne
fsubrl
inc
pop
out
and
xor
outsb
mov
sub
arpl
lahf
xchg
rolb
mov
cmp
xchg
test
sub
ret
pop
stos
daa
daa
mov
cmp
xorb
rorb
testb
mov
jbe
cmpsl
fistl
inc
cmp
xchg
mov
push
ret
aad
xlat
pop
leave
add
lods
mov
mov
and
in
mov
mov
mov
xlat
jg
add
jmp
adc
mov
sbb
sbb
inc
and
cld
adcb
arpl
mov
imul
pop
loop
fildl
pop
shrb
inc
int3
cmc
push
mov
addr16
addl
testl
test
sbb
xchg
enter
inc
pop
leave
fsub
lahf
inc
shll
xorl
push
or
or
mov
and
mov
std
dec
dec
mov
lahf
lahf
push
sub
aam
lret
dec
in
mov
test
daa
push
pop
test
xchg
jp
push
ja
push
mov
or
das
imul
dec
add
fistps
inc
pslld
add
mov
inc
mov
repz
jge
bound
jle
aad
lods
scas
ljmp
fs
lahf
push
xchg
cs
sahf
dec
subb
xchg
jge
fwait
cmp
or
cmpsl
or
jnp
and
xor
sti
mov
mov
push
out
les
call
int
je
imul
pop
inc
inc
hlt
repz
mov
xchg
mov
imul
enter
sbb
pushf
stc
sarb
dec
xor
or
leave
xor
insb
sub
inc
mov
roll
test
lret
xchg
add
loope
popa
popa
dec
stos
test
ficomps
mov
inc
ja
outsl
adc
cmpsl
je
outsl
shll
or
jle
pop
push
add
aad
mov
fisttpll
call
push
and
mov
push
jnp
xor
lahf
frndint
in
xchg
cmpsb
sub
xor
mov
jb
xchg
stos
cmc
or
loope
rcll
lods
fdivrp
inc
shrl
dec
std
stc
xchg
into
pop
xor
ffree
lcall
das
dec
call
enter
lcall
pop
mov
lds
push
loopne
mov
cmpl
inc
xor
mov
int
popa
push
mov
aam
in
pop
xchg
dec
and
push
out
sbb
add
enter
iret
adc
jp
fwait
push
pop
xchg
jae
pop
daa
pop
idivb
cmp
mov
aam
mov
and
les
xchg
xor
test
or
mov
inc
cmpsb
bnd
add
mov
lcall
fwait
mov
adc
or
in
orb
mov
adc
dec
enterw
ds
mov
movsb
inc
arpl
arpl
adc
adc
scas
pop
stos
je
cmp
in
dec
shll
fisubrs
jb
xchg
addr16
lock
mov
add
cld
je
shll
subb
jnp
ss
lea
inc
mov
aad
frstor
in
inc
mov
cmp
cmp
mov
inc
bound
scas
decl
movsb
mov
stos
gs
push
mov
cmp
mov
inc
cld
jne
leave
incb
push
aaa
icebp
cs
xchg
into
out
mov
push
out
jmp
mov
jne
and
aaa
enter
mov
cmp
push
inc
dec
pop
insb
daa
jno
cmc
jbe
les
arpl
popf
sahf
test
in
rcrb
jmp
adc
inc
mov
rcrb
les
addl
inc
jp
iret
dec
sub
push
sti
subb
lcall
xchg
mov
lods
test
dec
jb
jmp
das
sbb
pop
insl
and
icebp
lea
cli
ljmp
sub
rolb
sub
rcll
sub
rdpmc
push
rcr
cmp
adc
or
adc
inc
dec
jnp
push
arpl
or
xchg
aam
out
ljmp
jg
mov
lcall
xor
rorb
dec
mov
les
inc
jmp
inc
xor
out
out
mov
loopne
xchg
jl
loop
subb
xor
jae
bound
cmc
jns
and
sbb
iret
inc
test
nop
addr16
or
in
dec
xchg
and
sbb
jmp
inc
call
xor
sbbl
out
outsb
add
jg
gs
pushf
stos
ljmp
fcomps
lcall
into
cmp
jbe
pushf
pop
aas
jno
ja
sahf
cli
pushf
mov
fldenv
mul
mov
push
mov
cmp
fsub
outsb
cmp
dec
fwait
push
jmp
pop
lods
mov
dec
mov
xlat
in
mov
pop
or
adc
sbb
mov
std
pop
sbb
and
test
mov
test
loop
mov
or
fisubrl
inc
mov
xchg
mov
ffree
mov
xchg
cwtl
mov
push
adc
push
stos
xlat
ja
lcall
and
sahf
cwtl
shl
dec
sub
xor
rep
outsb
xchg
mov
pushl
xchg
call
push
repnz
inc
fldl
jb
es
mov
or
test
fs
cmp
clc
out
jne
ss
xor
jmp
mov
aam
pop
push
inc
push
pushf
mov
out
sub
dec
jecxz
imul
mov
int
mov
and
cwtl
stos
push
mov
push
push
int3
xchg
mov
or
push
sub
pop
leave
adc
and
jae
loopne
fnstsw
daa
pop
lods
rolb
mov
daa
repz
add
fnsave
test
imul
sub
mov
push
pop
insl
pushf
mov
andb
iret
bound
popf
lcall
aaa
and
xor
and
pop
rdtsc
xchg
sub
mov
je
mov
fldcw
cmp
xchg
xor
arpl
xor
popa
add
xchg
xchg
movsb
popa
inc
or
or
in
xorb
inc
sub
dec
inc
adc
pop
inc
clc
inc
sahf
aad
iret
adc
mov
mov
daa
scas
loope
push
lods
int3
push
push
jno
insb
repz
push
jnp
push
mov
push
in
or
arpl
lcall
add
mov
or
pusha
sub
aaa
sbb
mov
cmpsl
pop
dec
ljmp
shll
jl
out
inc
inc
add
add
adc
stc
out
cmp
mov
adc
jmp
iret
pusha
add
cmpsl
ret
lcall
add
mov
pushf
mov
cmpsl
or
fiadds
scas
xchg
hlt
daa
sbb
or
jbe
int
sti
cmpsb
mov
fs
jl
call
pop
imul
or
outsb
mov
out
pop
pushf
add
push
and
fwait
movsb
popf
mov
sbb
jnp
cmp
or
and
mov
imul
mov
cmp
lock
mov
nop
xchg
jmp
idivl
ret
xchg
cmove
sbb
lock
and
cli
mov
fcomps
insl
mov
negl
mov
je
or
pop
and
out
loop
orl
dec
js
clc
arpl
jno
pop
hlt
sbb
and
pop
push
imul
leave
in
fs
daa
cltd
inc
int
push
push
xchg
cmp
add
cmp
jge
push
lock
or
mov
mov
xor
cmp
icebp
adc
les
xchg
loopne
icebp
pop
jnp
mulb
sti
cmp
adc
popa
mov
cmc
shl
xchg
std
sbb
jp
sub
dec
push
sub
add
insb
dec
fstps
cmc
and
mov
xchg
fndisi(8087
dec
imul
adc
enter
jle
cmp
xor
mov
sbb
mov
stos
push
push
mov
loope
cmp
cmp
mov
xchg
repnz
xchg
adc
push
arpl
xchg
dec
cs
mov
adc
jge
sub
ja
repz
scas
pop
push
jne
fnsave
cmp
sub
adc
and
out
cld
jns
movd
repz
and
jge
js
mov
nop
test
dec
aaa
push
fcompl
inc
mov
daa
push
xchg
sub
mov
sbb
add
fiadds
iret
mov
xor
dec
add
mov
aaa
cmpsl
daa
rcrl
mov
jle
jno
aas
nop
push
popa
pop
sbb
and
jecxz
cld
out
pop
ror
push
sbbb
fwait
sub
fdivl
sbb
call
xchg
or
jg
das
rclb
jp
sbb
aam
pop
fs
push
pop
jp
es
jmp
daa
push
outsb
cmpl
xor
mov
push
movsl
mov
push
mov
pop
aam
test
jp
clc
rclb
mov
lock
mov
mov
stc
cltd
adc
iret
out
filds
in
ljmp
sbbl
into
sbb
stos
mov
mul
sbb
sbb
xchg
mov
daa
inc
xor
repz
mov
cs
inc
mov
cmp
dec
xor
seta
aaa
mov
aas
xor
and
lahf
jbe
sbb
sahf
pop
xchg
xchg
mov
idivb
cmc
aaa
sbb
mov
scas
sub
cwtl
dec
mov
sahf
fiaddl
call
cmp
xchg
and
mov
cmp
flds
cmp
and
xor
mov
std
ja
daa
addr16
aam
sub
scas
pop
mov
sbb
outsb
jmp
test
scas
mov
test
mov
mov
gs
jnp
adc
in
loop
test
pop
cmp
out
sub
jns
fsubrs
ljmp
mov
mov
ret
imul
cmp
push
add
pop
cmp
dec
adc
loopne
inc
sub
cld
mov
testb
jns
test
inc
xchg
xlat
sbb
xchg
and
stos
arpl
xor
jge
pop
or
je
pusha
arpl
enter
hlt
add
inc
adc
sbb
lret
addr16
pop
pushf
fs
fldt
and
sub
repz
ret
mov
add
iret
cmp
sub
iret
pop
pushf
mov
fisubl
mov
lods
rclb
add
pop
pop
ljmp
cmc
mov
adc
mov
int3
test
repnz
sub
insb
pushf
aaa
out
sbb
push
add
push
xor
clc
sbb
pop
mov
je
cmc
push
xchg
jmp
xor
pop
in
pop
push
mov
sub
adc
add
repnz
jo
mov
int
xchg
loopne
push
mov
dec
xor
jae
mov
pop
and
cmp
mov
in
rcll
ja
pop
scas
pop
or
test
pop
jae
jg
sbb
enter
popf
popl
lea
mov
push
cwtl
sub
movsb
orps
xchg
xchg
nop
jae
loope
lds
mov
xor
dec
cmp
sub
sub
test
xchg
test
xor
push
adc
pop
jne
outsl
dec
psubusw
pop
inc
adc
jno
push
sub
gs
stos
pop
negb
or
mov
jg
pop
and
sbb
pop
std
fldz
loope
push
mov
enter
push
mov
mov
pop
xchg
cmpsl
in
movl
push
jo
sbb
cmp
or
sti
push
xchg
outsb
pop
out
rcrb
es
ja
dec
jae
dec
xor
pop
push
jp
add
mov
call
pop
test
lock
movsl
mov
std
cmp
outsb
dec
dec
push
dec
in
pop
inc
divl
sub
lods
adc
pop
lods
adc
das
adc
setne
ficoml
xor
cmpsl
imul
leave
pop
repz
dec
sti
mov
aaa
inc
iret
mov
ret
push
scas
pop
pop
mov
mov
orb
add
jnp
pop
or
rclb
clc
mov
dec
cmp
cld
imul
arpl
pop
xchg
mov
loopne
jmp
into
mov
in
insb
push
mov
push
addr16
cs
cmp
rcrl
leave
out
mov
push
out
jbe
cwtl
add
scas
out
and
mov
add
mov
stos
and
mov
in
sbb
int
and
in
shlb
pop
cmp
arpl
jo
popf
jl
push
cs
lret
pop
in
push
outsb
xor
push
pop
mov
adc
adc
ret
adc
push
jo
push
or
xchg
jp
insb
cmp
xchg
sub
xor
loop
cli
dec
scas
lahf
pop
jne
xor
adc
into
loope
xor
fs
ja
ret
ja
ljmp
cmp
xchg
pop
or
mov
pop
stos
mov
sbb
sbb
mov
and
scas
scas
stos
or
sub
lret
in
pop
xor
mov
adc
enter
popa
xor
push
call
and
cmp
clc
leave
mov
cltd
mov
repnz
fistl
or
mov
mov
enter
into
test
cmp
imul
jl
call
pop
dec
mov
test
push
cltd
cwtl
mov
xor
sub
push
mov
add
rorb
aad
push
in
xor
dec
mov
xchg
jg
cmc
mov
cmp
dec
ficoml
jb
pop
addr16
pop
mov
lock
push
lcall
loope
leave
cmp
xor
inc
dec
sbb
mov
pop
mov
inc
pop
pop
jmp
cmp
repnz
lahf
out
outsl
cmp
std
stos
movsb
test
daa
xorb
mov
adc
cmp
cmpsb
pop
orl
dec
mov
jg
mov
ja
mov
push
pop
add
cmc
add
add
dec
jecxz
in
xor
pop
into
call
push
loope
push
or
cmpsb
push
test
push
push
push
jbe
xchg
aas
pop
add
test
add
pusha
cmpsb
popf
test
lock
jns
pop
mov
dec
je
int3
outsb
mov
nop
shlb
daa
test
xchg
sub
cltd
ret
push
sub
aad
js
test
shrb
mov
push
out
pop
sub
adc
dec
add
inc
fcompl
pop
insb
cltd
and
test
loop
es
cmp
adc
xor
jp
jae
mov
dec
mov
cmp
mov
mov
sti
daa
icebp
mov
mov
out
lods
dec
mov
sti
and
jecxz
sbb
pop
sbb
addr16
popf
divb
into
push
shl
xchg
outsl
ret
pop
lcall
jle
xor
fsubr
jle
inc
lret
mov
jp
pop
xchg
outsb
stos
mov
jmp
jb
sbb
loop
ror
jg,pn
lock
aas
insb
popa
mov
adc
pushf
aam
or
insl
push
dec
sbb
and
test
ds
and
dec
push
mov
insb
or
arpl
outsl
dec
mov
dec
ss
inc
mov
sbb
or
pop
xchg
mov
sbb
ret
jne
inc
or
into
imulb
mov
mov
ret
lods
xor
adc
or
sahf
lods
inc
sub
daa
fwait
push
xchg
jnp
cs
lock
mov
cwtl
or
cmp
mov
push
sti
movsb
dec
inc
mov
dec
xchg
leave
inc
in
test
cmpl
rcrb
xor
test
loope
mov
push
addl
mov
mov
mov
sahf
pop
dec
adc
stos
scas
mov
cmc
xchg
push
ret
and
sbb
cltd
dec
mov
lret
sub
subb
push
mov
dec
xchg
test
rcrl
adc
insl
and
cld
js
push
into
mov
lahf
sarb
repnz
std
rorl
jno
and
sbb
aas
ss
mov
pop
aad
mov
mov
ljmp
fbld
fidivl
jne
ljmp
es
pop
addr16
jb
cmpsl
dec
js
pop
push
lods
sbb
ret
dec
adc
shlb
std
popa
mov
sub
int3
add
xchg
data16
lods
outsb
jo
and
sar
add
fsubrs
and
pop
lods
in
out
stos
and
add
insb
stos
and
xor
add
or
cs
xchg
mov
sbb
out
out
repz
das
ja
xchg
fdivrs
xor
cmp
lock
dec
jmp
cmp
pop
mov
cli
ficompl
popa
ret
jmp
jl
lfs
inc
fsts
enter
xor
mov
adc
nop
mov
fsubrs
dec
fs
add
xchg
shll
mov
cmp
sub
add
out
dec
mov
clc
jp
aam
and
sarl
dec
dec
jne
addr16
cmp
sbb
lock
das
cmp
test
lcall
dec
push
nop
sbb
jno
out
add
jns
sbb
jae
push
pusha
fstpt
pop
cmpb
sbb
adc
es
sbb
scas
int
push
popa
test
mov
cmp
outsb
test
xlat
leave
mov
and
cmpsl
idivb
jecxz
mov
add
sub
out
arpl
dec
sbb
xchg
jmp
mov
hlt
inc
je
imul
int3
mov
cltd
adc
mov
push
xchg
push
sub
sub
popf
addr16
xor
xchg
fs
xor
lods
imul
insl
lds
pop
xor
push
jo
in
loop
cld
scas
jp
mov
call
sub
xor
ja
sbb
and
in
push
or
nop
xchg
jb
idivl
jno
jmp
mov
jge
lret
jle
add
and
daa
call
cltd
imul
mov
inc
mov
sahf
js
lret
mov
inc
test
sub
fistpll
addr16
test
push
cwtl
pop
lahf
negl
adc
imul
loopne
test
cwtl
call
mov
jne
movsb
jle
fs
xor
pushf
jmp
push
in
mov
mov
mov
std
jmp
xlat
mov
mov
or
pop
outsl
xchg
inc
sbb
adc
xchg
shr
xchg
in
es
cmp
vsubss
add
jo
lret
les
sahf
in
mov
mov
mov
shlb
lods
push
pop
adc
fisttps
dec
ja
mov
sbb
mov
push
or
shl
stos
and
push
inc
push
mov
inc
xchg
xchg
pushl
fildl
loopne
ljmp
jmp
xorb
sahf
jl
lods
mov
sub
add
mov
ja
and
and
bound
loop
dec
in
fs
push
push
lods
jge
dec
sbb
and
int3
xchg
cmpsb
ds
insl
test
push
icebp
and
xchg
test
fs
xchg
cs
or
mov
add
add
and
stos
or
daa
inc
hlt
mov
popl
push
cld
or
jl
cmp
push
jb
mov
push
pop
in
test
jne
idivb
xor
divl
adc
sti
mov
test
inc
mov
test
sahf
xchg
data16
mov
adc
adc
pop
sbb
mov
or
and
inc
xchg
nopl
andb
inc
jnp
sahf
jns
push
aad
push
nop
aam
xor
mov
mov
push
stos
push
pop
iret
test
pop
notl
or
add
sbb
sarl
jo
mov
stos
gs
xchg
mov
aaa
movsb
jp
mov
adc
xchg
push
cs
repnz
je
ficoml
inc
ja
aaa
idivb
cmp
mov
les
leave
sub
mov
mov
mov
mov
pop
pushf
cld
fs
xor
mov
cmc
add
es
out
fistps
clc
into
or
inc
insb
loope
cld
jg
push
dec
lds
adc
inc
cmp
mov
mov
lds
push
adc
jno
sub
cmpsb
inc
cmp
sub
cmpsb
adc
out
mov
addr16
jl
jecxz
push
mov
scas
push
out
pop
sbb
test
and
mov
lock
addl
mov
pop
rol
sti
adc
pop
fcmovne
je
mov
xchg
stos
data16
inc
loope
and
add
dec
andb
sbb
clc
nop
shlb
xchg
mov
xor
mov
mov
es
call
add
pop
lret
mov
insl
push
out
rcrl
mov
roll
neg
gs
push
flds
out
and
inc
cmpsb
push
lahf
jg
in
or
iret
fwait
rcrb
pop
mov
out
jns
xor
bound
sub
iret
jle
and
xor
mov
fistl
or
jle
pusha
test
inc
sbb
dec
arpl
inc
shrb
in
mov
ds
fdivl
jns
mov
jno
out
adc
dec
sbb
push
push
dec
subl
jmp
push
leave
xchg
sbb
gs
sahf
es
push
sbb
sub
popa
imul
out
dec
lcall
cmp
pop
sub
in
aad
or
out
push
aam
or
adc
inc
test
test
jl
cmc
push
sahf
les
add
push
dec
mov
push
mov
inc
inc
mov
cmpsl
inc
dec
mov
clc
imul
cmp
std
cwtl
shrl
push
ss
or
pop
je
push
add
lcall
mov
sarb
adc
nop
jae
leave
enter
ss
jo
xor
hlt
pop
xchg
pop
or
pop
pusha
mov
or
outsb
push
push
rcll
jbe
mov
push
fisttpl
cs
mov
xchg
cmp
and
clc
jl
sub
mov
movsl
jp
jge
test
xor
clc
mov
sub
mov
cld
xor
and
std
cmp
data16
adc
cmp
je
in
jb
jne
jp
rep
imul
ret
xor
sbb
push
enter
hlt
mov
push
loop
pop
outsl
out
pop
xchg
scas
push
push
adc
mov
xor
jns
out
xchg
loop
push
lcall
xor
and
sbb
adc
ja
push
mov
mov
leave
scas
mov
jns
and
sbb
push
sub
imul
pop
push
mov
mov
push
mov
in
fdivrs
lea
adc
loop
rolb
xchg
fldcw
add
inc
sub
or
mov
mov
fildl
push
lahf
pop
push
jns
dec
push
push
jge,pt
add
mov
mov
xor
or
lcall
cmp
push
jmp
addr16
cmp
xchg
cmp
call
mov
xlat
dec
sub
sbb
ss
mov
mov
fsubrl
lret
out
add
cmpsl
ljmp
add
out
sbb
out
flds
cwtl
and
push
xlat
xchg
cmc
pop
sub
fbld
je
stos
scas
or
mov
bound
aad
movsb
add
mov
fsubl
in
mov
imul
shrb
dec
sbb
jecxz
test
lds
ficoml
add
xor
push
test
jge
sbb
ds
xor
mov
cmp
adc
mov
pop
push
push
lods
pusha
loopne
imul
movsl
jge
gs
scas
test
enter
mov
std
fstl
mulb
mov
mov
pop
mov
shll
xchg
or
cli
cmp
popf
and
int3
leave
sub
rcrl
into
adc
lods
dec
faddp
jno
sbbl
or
xor
jns
and
testl
xchg
clc
push
scas
int3
test
and
push
cmc
fsubl
iret
jge
insl
aas
in
sarb
daa
mov
sbb
cmp
sub
cmc
pop
cmp
pop
mov
xchg
mov
xor
scas
aam
mov
cmpb
jne
pop
jo
push
loopne
mov
int3
push
stos
in
adc
or
orb
ret
inc
inc
mov
int3
lods
push
ret
sub
fldl
cmp
sbb
outsb
and
lcall
add
rcr
add
aam
xor
mov
jno
inc
and
loope
pop
test
jmp
xchg
jg
pop
mov
mov
pmuludq
movsl
fnsave
adc
jecxz
jo
inc
int3
or
mov
enter
mov
mov
ds
enter
in
sbb
adc
dec
jge
sub
out
insb
je
push
sub
lods
sub
xchg
icebp
xchg
mov
mov
mov
lret
mov
mov
sub
fisubrs
push
dec
out
rolb
in
add
inc
hlt
rclb
shr
mov
push
pop
jp
scas
xor
sub
andb
mov
lcall
xchg
xchg
jne
dec
repnz
add
jns
push
ljmp
inc
les
in
pop
cmp
jo
adc
add
mov
push
dec
push
stc
pusha
add
jne
jp
add
mov
push
in
stos
xchg
test
orb
pop
out
mov
ror
pop
cld
pop
int3
popa
fisttpl
cmpsb
or
mov
add
mov
add
lret
in
or
jo
jnp
mov
push
fbstp
xchg
enter
cmpsb
and
sahf
lret
adc
out
or
out
ret
jb
xorl
add
push
jbe
sbb
push
mov
out
xchg
cmp
jp
or
jns
lods
pop
into
dec
sarb
xlat
push
test
sti
push
push
sbb
popa
inc
sbb
cmp
inc
push
outsb
dec
sub
inc
jno
or
adc
inc
mov
fsub
xchg
lcall
dec
cmp
or
cmp
dec
push
int
adc
fnsave
push
mov
lds
xor
xcrypt-ctr
cmpsl
sbb
xchg
xchg
cltd
cmp
ja
adc
aam
jp
into
sub
adc
popl
into
pop
lea
push
stc
out
shr
mov
pusha
mov
inc
mov
sti
sub
mov
inc
out
test
je
xor
mov
jno
add
mov
inc
call
or
push
cltd
add
mov
push
mov
enter
jecxz
rorb
sub
jno
jp
add
push
xchg
push
jmp
nop
ds
popa
popf
js
cwtl
mov
fsubp
movsl
stc
divb
xchg
mov
inc
xlat
push
mov
xor
jne
pop
pushl
push
dec
shrb
jno
mov
push
in
clc
cwtl
aam
sbb
jb
loop
ret
sub
push
add
rorb
push
fwait
inc
test
add
add
test
jmp
imul
xor
dec
jns
sbb
pop
dec
cmp
bound
out
jg
stc
mov
sbb
lock
daa
dec
cmp
push
ja
xchg
das
test
and
loopne
sbb
in
mov
mov
or
mov
sub
repnz
inc
iret
push
mov
adc
lock
mov
xor
jnp
js
testl
and
push
rcrb
fldcw
mov
xchg
pop
add
jb
fbld
insl
mov
mov
adc
dec
ret
mov
dec
test
popf
push
jmp
stos
mov
inc
add
xchg
jnp
mov
addr16
xchg
ljmp
cmp
or
lcall
dec
je
lods
inc
push
data16
test
jnp
test
xor
xchg
lret
dec
fstps
int
adc
mov
cmpl
and
jecxz
roll
out
and
fdivs
mov
add
dec
jb
leave
pop
dec
push
pop
adc
push
jno
movsb
add
sbb
addr16
jbe
in
fmulp
mov
rclb
ret
loopne
cmp
sti
orl
sarb
or
fs
jo
mov
push
mov
lret
mov
cwtl
xor
inc
mov
sub
or
mov
sarl
stos
ret
sbb
ss
outsb
pop
call
adc
xchg
jae
je
push
out
sbb
push
jns
lcall
cld
xor
out
ss
mov
add
cmp
sbbl
scas
or
mov
dec
mov
out
push
xorl
push
push
fwait
sbb
or
movsb
movsl
or
adc
pop
inc
or
lock
aam
cld
idiv
imul
inc
xor
cmp
push
jb
stos
cmp
pop
xor
sbb
in
mov
cs
aaa
lcall
test
movsb
data16
imul
js
pop
stos
pusha
jne
fimuls
dec
jbe
xchg
xchg
stc
ss
mov
lods
test
mov
stc
dec
inc
sbb
test
push
jnp
dec
lds
add
lcall
dec
dec
stos
mov
subl
mov
in
cld
call
imul
sysenter
movsl
cs
jmp
mov
pop
mov
pop
idivb
lods
addr16
add
enter
and
out
popf
fsubp
scas
push
push
aam
inc
outsb
xchg
dec
xor
std
xchg
pop
insb
out
sbb
dec
fsts
xchg
jl
inc
js
cmp
mov
ja
jp
arpl
dec
push
pop
shrl
lret
sahf
mov
mov
jmp
insb
mov
jbe
loopne
push
lret
fst
pop
mov
adc
mov
dec
dec
push
scas
xor
scas
jle
xlat
shll
xchg
aam
in
fs
dec
pop
cwtl
int3
cwtl
clc
stos
out
mov
sub
dec
xchg
inc
mov
lock
xor
test
sar
fisttpl
jnp
and
adc
mov
iret
lret
sub
sbb
xlat
cmp
mov
cmc
push
ss
push
xchg
bound
jnp
fstpt
addr16
mov
push
jl
cmc
pop
cmp
mov
lret
push
inc
fldcw
aas
inc
mov
or
cmc
mov
outsb
test
mov
rorb
cld
data16
xchg
cmp
outsl
and
out
bndldx
cltd
bound
das
ret
xchg
dec
das
lcall
xlat
and
adc
cmp
rcrb
xor
mov
xchg
lods
shrl
add
or
add
xor
shll
jl
icebp
xchg
and
ja
or
test
inc
pusha
inc
fidivs
pop
insl
mov
adc
pop
lret
sub
adc
cwtl
mov
xor
cmpsb
aad
insb
sbb
adc
inc
jae
or
add
mov
aam
sub
push
add
jl
std
shlb
ja
fnsave
mov
ss
sub
mov
and
incb
pop
add
xlat
push
push
xchg
addb
es
jmp
fisubs
pop
sub
push
xor
jo
addb
jp
scas
jg
ret
out
hlt
lods
fsubs
dec
adc
xor
sbb
dec
add
dec
xor
out
sarl
pusha
shlb
stos
push
jo
std
dec
and
gs
scas
jg
push
jmp
mov
cld
lea
lret
pop
xchg
push
dec
xchg
push
test
inc
dec
sub
scas
insb
out
jbe
mov
cmpsl
adc
push
aam
pop
in
mov
in
push
mov
ds
arpl
push
jno
mov
hlt
test
dec
push
xor
filds
icebp
push
push
test
loopne
sahf
mov
jbe,pn
inc
mov
xor
mov
or
adc
xchg
lret
inc
sub
cmpsb
addb
fnsave
pop
ss
movsb
lahf
sub
fs
mov
loop
cmp
xor
mov
push
cmpsb
aaa
ret
mov
sub
and
out
mov
mov
inc
jno
cmp
push
insb
cld
mov
mov
mov
or
xor
out
jns
xor
gs
fadds
sbb
je
mov
into
push
inc
lahf
incl
push
daa
call
stos
in
adc
hlt
fcmovnbe
mov
mov
push
pusha
outsb
jle
cmp
fsts
rcl
fsubrs
enter
cmp
mov
fs
xor
out
xor
je
cld
xor
cwtl
in
sub
pop
inc
ds
mov
add
xchg
popa
jno
sbb
imul
add
mull
jecxz
mov
loopne
pop
pop
pop
clc
sub
ror
test
mov
xlat
imul
sub
mov
imul
lods
sub
cli
sbb
mov
cmp
add
xor
add
pop
lret
icebp
push
sbb
js
xchg
mov
stc
inc
sbb
lds
and
add
dec
mov
jmp
inc
mov
xor
sub
mov
sbb
mov
outsl
std
pop
xlat
movsl
mov
cltd
pushf
dec
xchg
pop
adc
adc
daa
push
test
mov
jmp
lcall
adc
mov
pop
xchg
addr16
ret
push
aad
mov
dec
iret
stos
and
inc
mov
fcmovnbe
aad
dec
stc
pop
pop
in
mov
div
insl
push
xchg
adc
sub
jl
adc
sub
jl
push
mov
pop
cli
xchg
sbb
xchg
outsl
xchg
or
mov
aaa
mov
xchg
xchg
repnz
pusha
leave
add
or
dec
ret
dec
movsb
shll
cmpsl
test
jle
inc
xlat
test
fs
pop
popf
cmc
xor
orl
and
js
inc
sbb
ret
pop
add
jae
test
in
adc
jp
ret
ja
jnp
ret
fidivl
fbld
xchg
call
call
shr
sub
loope
or
mov
fildl
test
jecxz
push
push
mov
dec
jl
adc
movsb
popf
cltd
fdiv
shlb
insb
push
sub
loopne
fistps
mov
cmpsl
div
in
orb
cld
arpl
and
repz
pop
mov
cli
push
into
jb
push
fcomps
call
in
jne
imul
jnp
lahf
daa
cmpsb
fcmovnu
adc
sbb
ljmp
mov
paddsw
test
daa
or
mov
mov
icebp
and
aas
sub
pop
lcall
pop
fs
dec
xchg
xchg
out
sbb
cltd
add
arpl
xlat
movsl
mov
push
lret
fadds
pop
bnd
in
mov
dec
outsb
imul
je
adc
push
pop
sub
pop
jl
hlt
xor
push
sub
icebp
hlt
push
push
lahf
sahf
push
fcoml
outsl
shlb
lret
test
pop
adc
xchg
fwait
dec
and
push
jmp
jnp
bound
icebp
cmp
jae
push
mov
call
push
dec
aad
and
sti
pop
sbb
lahf
push
addr16
add
fmul
lret
sahf
inc
cmp
add
aas
mov
aas
jne
push
notl
lods
mov
ret
leave
xor
stc
mov
pop
incl
aam
pushf
int3
testb
out
bound
pop
add
or
sti
cmp
and
scas
and
fs
testb
or
inc
inc
and
push
push
sbbb
or
sbb
ds
pop
lahf
adc
sarb
adc
ljmp
js
aad
jne
js
sub
pop
shr
ljmp
mov
pop
and
push
adc
dec
lret
pop
imulb
mov
xlat
mov
adc
dec
ja
sub
fdivrp
out
aad
cmp
cld
jmp
lahf
dec
pop
add
pop
rcrw
sub
jne
lods
scas
loope
inc
pop
ljmp
pop
test
imul
rcrb
faddl
xor
push
das
arpl
push
xchg
stc
xor
sub
jo
loopne
jb
xchg
or
fwait
notb
sub
std
lock
cmp
imul
bound
jg
pop
mov
xor
sbb
out
lods
hlt
xchg
iret
mov
push
push
lret
or
test
xchg
jecxz
xor
add
lcall
data16
adc
xchg
mov
dec
add
push
inc
cmp
or
or
fs
repnz
in
or
mov
das
fmull
xchg
js
add
inc
dec
mov
movsb
lcall
repnz
mov
mov
fs
pop
adcb
pop
add
je
ficoms
xor
stc
add
iret
out
xchg
xchg
mov
mul
sub
pushl
mov
xor
aam
cmp
or
loopne
in
mov
push
add
insb
cmp
add
jb
adc
and
mov
pcmpeqw
repnz
sub
jne
inc
pushf
jl
call
fs
xchg
inc
shl
mov
xor
or
out
scas
push
push
mov
mov
cli
pushf
jge
mov
insb
repz
scas
popa
jg
gs
add
test
mov
push
shl
mov
mov
sti
jo
sbb
cs
mov
cmp
pusha
dec
add
mov
imul
cmp
sbb
mov
dec
sbb
sbb
dec
sbb
hlt
push
test
jge
and
iret
add
imul
mov
add
cmp
das
fsubl
inc
mov
jnp
cmp
fptan
push
aad
xchg
adc
enter
inc
sarl
xchg
xor
adc
jg
clc
and
or
mov
sub
mov
loope
out
mov
jne
mov
xor
enter
in
lret
das
mov
sub
ret
adc
mov
and
rcrb
aam
loope
mov
sub
repnz
gs
sahf
dec
sahf
mov
fs
lds
mov
xor
mov
xlat
int3
pusha
pop
dec
mov
adc
jg
in
fistpll
mov
push
or
jmp
out
imull
sbb
jne
push
insb
add
shlb
ljmp
sbb
fucomip
dec
lods
lock
clc
add
lret
cmp
repz
pop
pop
xchg
pop
sbb
xchg
iret
sbbb
sub
enter
pusha
cmpl
sbb
mov
push
mov
add
adc
push
xchg
sub
sti
shlb
out
stos
xchg
or
and
cld
dec
popaw
outsl
push
mov
xor
insl
push
cmp
lods
leave
out
add
pop
push
stos
jno
push
hlt
ljmp
aas
mov
pusha
sbb
adc
adc
cmp
popw
inc
inc
xchg
fidivl
or
push
mov
pop
imul
xchg
sbb
test
cmp
popf
cmp
fnstcw
add
into
inc
in
les
inc
xor
dec
pop
xlat
and
shl
mov
scas
ror
std
loope
pushf
leave
sti
and
jl
jmp
mov
cld
inc
jnp
lods
loop
loop
jmp
push
fcomp
mov
lret
xchg
ja
cmp
dec
mov
lock
push
lahf
int3
lahf
dec
pop
push
add
push
mov
jne
sbb
stos
mov
cmp
test
mov
pop
jg
jle
int3
lahf
clc
rcr
xchg
rorl
shll
dec
imul
sbb
pop
divl
xchg
mov
add
mov
push
sub
and
es
xchg
stos
popa
xor
sbb
jae
loop
sub
mov
ror
dec
cmpsl
push
push
inc
jle
adc
xchg
xor
jnp
imul
add
inc
pusha
push
arpl
adc
mov
dec
or
xchg
mov
mov
sbbl
mov
jne
cmpsl
xchg
dec
cltd
in
loopne
xlat
xchg
sarb
mov
mov
sub
enter
sbb
pop
add
xor
andl
cmp
jb
add
dec
out
pop
push
push
add
pushf
pop
xor
xor
cmp
mov
push
orb
icebp
pusha
xchg
inc
xor
cmc
or
push
push
or
sub
mov
sub
nop
add
xchg
les
xor
pop
sbb
pop
mov
jp
adc
adc
fdivs
je
mov
adc
sti
ss
sahf
jb
call
je
pop
dec
xchg
fisttpll
sbb
les
mov
fs
out
mov
in
movsb
add
mov
pusha
ja
mov
mov
sbbl
out
and
data16
sub
mov
push
mov
inc
fsubs
dec
in
fsubrs
fwait
mov
sbb
mov
fmulp
sahf
fucomi
jecxz
xchg
sbb
jo
mov
xchg
movsb
add
or
sub
adc
jae
lret
jle
test
push
sbbl
mov
mov
shl
adc
mov
xor
movsb
das
and
and
add
cmpsb
or
fwait
xchg
test
pop
outsl
xchg
ljmp
jecxz
adc
adc
filds
dec
insb
sub
and
dec
dec
out
dec
insb
pop
xor
clc
cs
lret
inc
xchg
adc
cmp
jle
sti
mov
and
in
out
insb
xor
push
dec
cmp
mov
stc
lods
test
mov
adc
mov
xchg
loopne
jae
movsl
or
add
push
enter
jnp
sbb
into
int3
cltd
add
lcall
mov
and
adc
enter
leave
incb
push
mov
pop
stos
sbb
in
std
icebp
mov
fsubrl
inc
jg
lea
popf
jle
call
add
jg
cld
or
out
xor
adc
or
mov
es
adc
mov
dec
and
imul
testb
push
or
pop
fcoml
jge
cltd
fistpl
js
push
in
fdivs
mov
pop
cld
pop
dec
mov
stc
inc
xchg
and
movsb
sub
sub
sbb
push
mov
lret
mov
inc
sti
scas
jnp
push
cmp
sbb
out
test
movsb
pop
push
inc
xchg
dec
jns
xchg
jns
nop
mov
pop
push
mov
out
or
xor
jmp
call
mov
aaa
jnp
cltd
xor
ja
sahf
sub
xchg
xchg
sbb
in
xor
sarb
ret
push
loop
inc
xchg
inc
jne
cli
sbb
push
jnp
push
cmpsb
cld
jns
jp
mov
hlt
cmc
pop
lock
fbld
mov
mov
cmpsb
jmp
push
mov
stos
pop
imul
jecxz
inc
insb
mov
or
sub
pop
and
js
dec
inc
dec
mov
add
hlt
arpl
or
icebp
loop
lret
ljmp
lret
cwtl
sbb
lea
pop
adc
fmuls
scas
jae
cmp
leave
mov
pop
cmp
pop
jno
lds
push
lret
lcall
outsb
add
imul
xchg
jge
cmp
mov
pop
js
pop
rorb
pop
out
or
sbb
jbe
xchg
cmp
pop
call
jb
xchg
pop
outsb
jns
dec
iret
lcall
mov
int3
inc
cld
fmuls
push
pushf
arpl
in
jnp
cmc
jno
outsl
int
and
ret
dec
les
fsubrs
mov
jne
out
les
ss
repnz
xchg
and
insl
mov
xchg
xor
repnz
cmc
ret
fidivrs
push
ret
pop
arpl
jns
jne
fstp
imul
mov
lahf
add
int
out
inc
aaa
adc
pop
add
pusha
dec
lcall
push
or
mov
and
sbb
ja
lret
jp
sbb
adcb
je
fmuls
adc
imul
add
lods
sbb
xor
xor
imul
add
stos
adc
mov
xchg
mov
pop
cli
cmp
push
mov
pop
adc
lret
std
adc
add
push
out
mov
call
xor
outsb
inc
mov
jb
mov
pop
inc
push
dec
jecxz
cmpsb
inc
or
inc
pop
in
mov
enter
or
flds
imul
xchg
mov
sbb
popf
loop
clc
cs
out
xlat
loopne
and
andb
mov
jge
daa
sbb
pop
scas
or
loope
out
addr16
or
movb
gs
add
js
xor
xor
sub
fsubrl
mov
loopne
or
enter
leave
jb
test
lahf
jbe
push
sbb
dec
mov
pop
xchg
jmp
cmp
cmc
das
mov
outsl
mov
notl
inc
xchg
and
mov
fucom
aad
xor
mov
addr16
enter
testl
xor
pushf
cs
xorb
xchg
add
jl
es
das
pop
lahf
ja
xor
imul
sub
fmull
movsb
lods
jnp
pop
mov
adc
jmp
add
stos
cmpsb
push
mov
xchg
cli
cmc
mov
fwait
xchg
divl
je
arpl
mov
sbb
add
xchg
test
js
sbb
dec
lods
jo
add
mov
sub
push
add
or
fnstsw
sahf
xor
jo
mov
scas
pop
pop
in
fs
ret
adc
outsb
frstpm(287
or
into
xor
cld
js
lock
aaa
push
pop
pop
mov
mov
mov
mov
jmp
fstl
push
pop
mov
jp
mov
mov
mov
leave
negb
sbb
insb
stos
mov
xlat
daa
maxps
pop
pop
ret
mov
rcrb
push
test
and
lcall
cmp
andl
outsb
jbe
add
js
adcb
pop
jp
gs
cwtl
sahf
xchg
lods
mov
mov
xor
or
inc
xlat
cwtl
daa
pop
inc
pop
in
and
in
loop
mov
or
out
sbb
mov
mov
jbe
xor
mov
sub
cltd
shlb
movsl
cmp
inc
jae
xchg
les
mov
pop
mov
arpl
xchg
inc
loop
mov
aam
addr16
xlat
or
in
outsl
filds
dec
cwtl
sbb
mov
mov
sarl
mov
or
mov
orb
jp
into
shrl
arpl
sbb
test
out
lea
ljmp
sti
adc
sbb
pop
ret
pushf
jmp
mov
mov
and
stc
enter
push
pop
xchg
or
xor
mov
adc
dec
out
pop
cwtl
xlat
mov
ja
mov
or
and
insl
adc
stos
or
sub
dec
test
push
pmuludq
aad
push
mov
fstl
in
push
fidivrs
jo
sub
lock
js
rorl
ret
imul
xlat
std
jl
rolb
cli
fwait
stc
cmp
adc
lret
and
cmpsb
sub
imul
jp
shlb
jne
add
stos
dec
and
inc
cs
ja
addl
mov
out
dec
mov
or
es
push
push
pusha
cltd
bound
ss
pop
xchg
shlb
dec
repnz
test
lods
or
repz
movsl
scas
push
stos
and
jbe
inc
decl
pop
cmc
jns
inc
mov
aam
repnz
icebp
lds
repnz
pop
adc
pop
dec
add
push
or
int
cli
insb
xcrypt-ctr
cmpsl
ffreep
stos
arpl
and
push
add
jne
in
jg
pop
xchg
shlb
mov
jnp
adc
inc
sahf
and
push
dec
add
aam
stos
push
popa
adc
dec
punpckhwd
shlb
jl
pop
and
adc
lods
cmpb
push
xchg
push
in
or
add
aad
sub
jne
adc
sub
out
xchg
push
and
push
xor
xor
sub
or
jo
xorl
lea
rorb
insl
aas
call
push
in
out
int3
jns
pop
rol
or
lcall
jnp
subl
testl
push
or
xchg
aaa
add
es
sub
push
rcrb
jne
mov
inc
imul
adc
push
movsb
iret
jnp
mov
je
push
insb
je
nop
push
add
imul
mov
sbb
push
sbb
sti
ret
loop
push
fadd
sbb
inc
push
daa
in
es
mov
test
or
jnp
jne
cmp
mov
pop
and
loop
and
inc
adc
loop
mov
shlb
pop
sti
mov
lret
movsl
decl
pop
insl
add
push
leave
jecxz
sub
or
movd
js
daa
fs
push
inc
mov
inc
adc
and
sub
ljmp
test
cwtl
or
pause
mulb
xlat
loope
adc
sbbb
sub
std
and
mov
push
jle
scas
pop
jno
jbe
fsqrt
sbb
and
sub
or
mov
push
jb
mov
mov
and
push
adc
call
sub
mov
int3
in
stc
sub
push
test
push
push
dec
jae
out
push
adc
sbb
mov
and
inc
push
xchg
sbb
push
fmull
shrb
mov
xchg
mov
test
xor
bound
lahf
pop
xchg
adc
sti
mov
push
push
jae
out
jnp
out
and
inc
and
inc
lcall
out
aaa
pop
lods
and
lds
add
ljmp
gs
adc
jle
mov
fisttpll
outsb
lds
pop
cmp
pop
js
insl
xchg
push
and
mov
es
lock
push
mov
cmp
fwait
into
dec
and
cmp
xchg
out
or
popa
xchg
fdivr
loop
stos
out
push
mov
and
mov
sbb
in
xchg
sbb
push
or
xor
and
out
call
or
jp
dec
je
mov
or
cmp
mov
adc
cmp
jno
fs
hlt
ljmpw
ret
fisttpl
imul
dec
cmp
jns
lret
push
adc
cwtl
pop
imull
and
and
xor
dec
leave
cmp
mov
mov
rclb
inc
daa
outsl
cltd
aam
fidivrl
gs
jbe
and
push
enter
or
test
push
fs
fsub
add
add
hlt
shll
fistpll
adc
cmc
xor
out
enter
cmp
scas
lea
pop
push
movsl
in
cmp
mov
repnz
pop
mov
inc
cmp
lods
add
gs
jnp
lea
cmp
and
and
lods
inc
push
push
lcall
test
adc
data16
xorl
out
push
mov
invd
repnz
pop
outsl
movsb
imul
jb
mov
and
jnp
mov
shll
ret
sbb
jo
pusha
sub
xchg
lcall
in
lods
push
pop
or
add
push
das
and
adc
dec
or
imul
clc
aam
scas
das
imul
mov
call
xchg
cli
call
inc
add
int
mov
add
push
sbb
or
mov
xor
les
sbb
sub
add
mov
xchg
adc
stos
ljmp
mov
mov
sub
scas
ss
cmp
mov
push
loope
jp
xchg
cmpsl
add
in
jae
subb
mov
nop
mov
inc
lods
inc
mov
mov
paddd
jp
cli
int3
mov
dec
bound
loopne
sbb
cmpl
cltd
test
cwtd
and
jb
cli
lds
push
mov
adc
inc
and
mov
lret
int3
inc
cmpl
movsl
in
stos
mov
push
in
loopne
xlat
int3
push
mov
pop
aaa
inc
mov
out
dec
sarb
jb
mov
in
enter
pop
gs
jmp
pusha
cli
test
push
mov
push
notb
mov
push
outsb
outsb
inc
push
nop
xor
mov
in
mov
cmpsl
popf
dec
push
shlb
sahf
outsb
es
or
cmp
je
divb
inc
sub
cli
pop
xchg
cmp
jp
popf
jae
mov
pop
repz
inc
fs
and
jns
jl
aaa
jg
hlt
ss
pop
in
mov
pushf
pcmpeqb
ja
jne
rclb
mov
rol
cli
js
mov
inc
and
rorl
pop
xchg
orl
aad
test
adc
push
xor
push
add
fsubrp
das
xchg
fmuls
and
sbb
push
cmp
inc
lock
or
sbb
pop
push
pop
xor
fldt
aam
add
insl
jl
and
mov
outsl
mov
int3
outsb
or
mov
fildll
jb
mov
mov
or
adc
std
mov
xor
leave
movsb
lret
mov
mov
pusha
push
fsubl
jecxz
xchg
inc
ret
push
sbb
inc
daa
call
scas
sti
loop
lods
enter
dec
sbb
sbbb
pushf
mov
mov
sbbb
mov
xchg
popf
cmp
xchg
mov
sbb
aam
sarb
sub
cltd
sahf
lret
xor
lahf
rorl
leave
ljmp
aas
mov
gs
int3
imul
imul
out
xchg
mov
mov
sub
gs
pop
int3
dec
and
int3
ja
lahf
leave
enter
ret
insl
add
fwait
insb
xor
cmpsl
mov
push
mov
push
cmp
rcr
cli
mov
and
pop
xchg
incb
xor
js
fisttpll
inc
insl
es
sub
outsl
sarl
shlb
pop
je
jnp
roll
xor
fsubs
imul
sbb
sahf
lods
pop
dec
mov
popa
icebp
aad
nop
dec
mov
dec
fisubs
mov
jne
fildl
or
mov
aad
xlat
inc
rorb
in
out
ds
cmp
push
roll
or
icebp
popf
push
test
repnz
call
test
mov
dec
push
add
test
add
cltd
or
adc
jle
les
jg
push
mov
ret
xchg
rolb
scas
call
dec
rorl
jl
push
rolb
incb
cmp
aaa
mov
rclb
xchg
lahf
xchg
cltd
mov
inc
jl
aam
in
mov
jmp
jns
ret
pushf
add
popa
fdiv
push
cld
into
adc
mov
enter
shrl
pop
lock
test
mov
lods
jo
push
je
mov
inc
xchg
loopne
jnp
outsb
pop
push
or
xorl
add
dec
fdivrl
mov
mov
or
jecxz
xor
pop
xchg
in
in
mov
cmc
ja
mov
xor
mov
mov
adc
lds
bound
cmp
test
loopne
aad
push
lods
or
adc
lea
sarb
sbb
loopne
pop
mov
idivl
jns
xor
push
pop
aad
mov
adc
imul
mov
les
adc
sub
or
cwtl
mov
jno,pt
or
int
dec
or
sbb
sbb
outsl
sub
adcl
jno
lcall
fmull
jp
loope
push
mov
mov
rcl
cmp
iret
pop
jle
into
fcomp
and
push
nop
sbb
sbb
jmp
sti
fisubl
dec
sahf
aad
inc
das
mov
pop
fdivr
mov
in
lret
dec
lods
shlb
or
in
icebp
sub
xchg
enter
fcoms
or
mov
clc
mov
nop
mov
xchg
pop
mov
fld
cmp
jp
mov
lock
loop
daa
movsb
or
pushf
xchg
lods
push
push
sbb
mov
mov
sbb
bound
push
or
pop
iret
insb
js
std
aas
add
mov
mov
cld
idiv
cmp
mov
jmp
and
cmpsb
mov
xchg
or
test
mov
loope
sahf
dec
je
cmp
or
cmp
aad
rcrb
jp
ljmp
movaps
adc
dec
popf
push
loop
movb
daa
in
mov
stos
push
push
inc
xlat
pop
cmpsb
inc
jnp
ds
call
pop
test
or
mov
inc
out
push
mov
arpl
add
mov
out
inc
jae
out
xor
mov
sbb
pusha
or
out
jg
aas
inc
jns
addr16
cmc
mov
scas
mov
adc
lock
out
push
jne
js
bound
add
loopne
mov
adc
inc
scas
or
cwtl
lret
pop
mov
and
add
mov
pop
and
push
shlb
pushf
push
in
xchg
mov
movsl
mov
jp
clc
dec
jmp
sbb
cmp
popf
jne
subl
mov
enter
inc
nop
xlat
popl
les
xchg
shr
outsb
adc
dec
jmp
fucom
orl
xchg
cmpsl
sub
mov
pop
mov
jb
movsl
or
sub
int
xchg
jne
or
hlt
xor
mov
push
jae
cmp
pop
xchg
xor
jo
addr16
inc
sub
mov
cmp
les
jns
lret
fsubr
push
loop
xor
jmp
outsb
pop
insl
sub
add
imul
cmpsb
mov
ja
push
ss
adc
mov
xchg
dec
mov
gs
push
adc
std
lret
int3
adc
or
and
aas
enter
pop
xchg
orl
push
dec
jmp
xchg
cmp
xor
sbb
cmp
pusha
cmp
jmp
ret
or
mov
dec
aad
or
pop
out
bound
sub
sbb
pop
sar
adc
bound
or
push
xchg
mov
mov
push
cmc
push
xchg
test
fbld
jp
cwtl
mov
loop
pop
fbld
scas
lds
in
dec
rcr
push
pushf
xchg
xchg
js
add
xchg
lods
test
mov
mov
add
mov
int3
push
xchg
ficomps
jbe
adc
ljmp
int
stos
dec
fidivs
push
nop
rcr
cmc
outsl
xchg
mov
sub
dec
cmp
lahf
jne
daa
adc
jl
sub
arpl
in
insb
pop
push
test
insb
sbb
sub
mov
xor
jp
push
or
movsl
int3
test
xlat
fwait
lods
adc
mov
dec
mov
shl
pop
mov
ljmp
in
in
sub
repz
sub
ljmp
push
push
stc
cmc
jmp
ljmp
test
mov
adc
and
add
lret
stos
mov
push
mov
out
orl
sbb
xorl
jmp
inc
out
mov
idivl
xchg
jp
incl
cltd
jae
cmpsb
enter
push
insl
repz
push
sbb
sti
repnz
out
and
and
cmc
cwtl
mov
mov
or
jg
mov
lods
cmpsl
sbb
inc
mov
shlb
and
or
push
mov
stc
push
cli
sahf
xor
lea
inc
jae
pop
add
inc
mov
add
rcl
inc
adcl
adc
or
sbb
sahf
dec
test
mov
mov
mov
jl
pop
mov
push
pop
xchg
pop
jge
mov
ret
fs
mov
push
sbb
loop
pop
xchg
aam
in
xor
jb
xorl
xchg
pop
iret
nop
rcrb
xor
divl
jnp
xchg
pop
or
gs
gs
jo
test
fs
mov
out
or
xchg
mov
xor
xor
rcll
inc
cmp
push
jns
cmpsl
jnp
iret
mov
sti
cwtl
jbe
sti
jmp
jo
fs
test
xor
fdivrl
rolb
mov
lahf
cmpsb
loopne
insl
dec
in
inc
lea
cmp
sbb
ffreep
cmp
mov
loope
mov
push
add
lea
ja
icebp
js
cmp
xchg
adcb
clc
inc
sub
enter
loop
es
mov
push
xchg
arpl
inc
scas
aas
and
mov
cwtl
jle
cmpsl
data16
movsl
ret
addr16
jnp
mov
out
out
and
clc
cmc
fildll
adc
enter
inc
push
and
dec
icebp
loopne
jnp
mov
adc
mov
aaa
sub
push
cmc
insl
and
bound
and
pop
lret
mov
adc
adc
pop
cwtl
test
rclb
pop
and
clc
push
test
or
ret
aam
insb
add
jae
inc
and
cmp
jg
fists
pop
jl
addr16
inc
aam
cmp
call
mov
mov
mov
paddd
out
arpl
scas
lock
mov
scas
out
xchg
das
hlt
adc
lcall
mov
xor
adc
int3
lds
out
js
cmpsb
andb
sub
sub
mov
jo
pushf
scas
test
inc
jmp
jne
rcr
push
jb
pop
std
sbb
or
cli
popa
cmp
repnz
mov
mov
lcall
mov
std
xor
sbb
jmp
mov
adc
mov
lods
insl
cld
inc
sub
push
lock
add
push
cmpl
dec
dec
dec
or
push
fisttpll
and
sbb
xor
mov
lods
fs
aaa
mov
pop
hlt
xlat
insl
jl
jbe
mov
jmp
loop
ret
add
fadd
mov
in
icebp
add
ja
xchg
les
dec
in
out
jns
jb
jmp
mov
mov
add
daa
stos
lds
dec
shr
and
mov
inc
jge
cli
mov
shll
in
popa
jae
xor
scas
xchg
pop
adc
ljmp
lret
or
xlat
sbb
out
push
push
shll
fstpt
lret
popf
push
jmp
rcl
pusha
xchg
icebp
jecxz
iret
test
notb
adc
push
mov
and
movsl
mov
sub
ss
mov
xchg
cmpl
dec
cmpsb
xor
das
jne
testl
jnp
stc
cmp
fistpll
in
cli
sbb
call
mov
pusha
mov
xor
pop
lret
cs
mov
or
int
leave
and
push
mov
jae
aad
loop
fs
push
fsubrs
jp
cwtl
das
or
jno
adc
mov
into
cmpsl
dec
mov
std
cmp
xor
dec
inc
adc
repnz
sbb
enter
stos
stos
jle
es
les
adc
xor
xchg
imul
testb
int3
lods
xchg
jnp
xchg
in
cmpsb
mov
int
aaa
mov
mov
adc
stc
aaa
mov
fwait
aam
lods
sub
aaa
or
jmp
jmp
jmp
xor
mov
jle
scas
stos
mov
mov
int
push
push
ss
lret
cli
out
adc
sarb
mov
mov
adcl
cmpsl
jecxz
scas
movsl
inc
inc
rcr
insl
xor
dec
add
mov
cmpl
stos
insb
pusha
test
xor
push
sbb
pop
jl
xchg
ss
mov
je
or
push
mov
clc
cmp
adc
and
scas
mov
inc
push
shrb
cld
dec
sarb
popf
sbb
inc
repnz
mov
addr16
das
inc
insb
es
ret
mov
inc
ror
pop
fmul
push
lock
mov
shl
leave
jecxz
test
jo
ljmp
push
fnsave
sahf
arpl
inc
jp
cmp
aam
push
xor
test
push
rclb
fistpll
arpl
adcl
or
testb
es
clc
insb
shlb
jp
in
arpl
push
outsl
inc
inc
mov
inc
sub
add
push
mov
mov
lods
and
enter
imul
inc
jae
xor
push
inc
mov
sub
dec
and
cmp
ret
shlb
mov
mov
jo
push
lahf
inc
scas
cltd
jg
leave
test
or
adc
mov
les
lcall
stos
cmp
jge
fildl
jbe
xchg
mov
jle
mov
loope
sbb
aas
xchg
or
mov
push
mov
jecxz
int
cmp
jle
dec
cmp
loope
cmp
sbb
dec
push
xlat
pusha
xchg
rcll
shll
xchg
outsl
push
repnz
cld
adc
cltd
frstor
push
push
aaa
loope
aad
cmp
mov
mov
xchg
icebp
fisubs
or
push
mov
lret
gs
mov
xor
mov
push
xchg
into
call
fnop
and
cmp
int3
xor
cltd
pop
sbb
sbb
inc
movsl
fstl
mov
aam
fwait
test
xchg
outsl
repnz
mov
adc
cmp
into
ror
cmp
inc
xchg
cmp
outsl
stos
adc
jns
repnz
lods
js
in
push
xor
retw
xor
push
pop
and
sub
inc
xchg
jns
fnop
push
push
testl
push
arpl
into
cs
mov
sbb
jge
dec
test
pslld
lret
push
daa
sbb
inc
xor
daa
pusha
fisttpl
sti
xor
fsubs
pop
rolb
and
imul
add
negl
std
pop
and
clc
and
scas
das
pop
mov
ret
jmp
mov
lds
jne
add
fwait
mov
pushf
push
mov
sub
xchg
cmpsb
shl
ljmp
xchg
cmp
xchg
sarb
push
mov
mov
icebp
inc
fidivl
lret
stc
imul
cmpb
loop
repnz
testb
fdivrs
rolb
inc
fdivrl
das
mov
aas
cmp
aaa
pushf
mov
fdivrs
sbbl
jle
cmp
jo
inc
pop
cmpsl
in
out
aad
pop
adc
fisubs
out
cmp
iret
scas
stc
push
les
jle
std
push
mov
add
dec
sbb
rcl
add
pop
inc
sti
shlb
fildl
push
out
negb
mov
fidivrl
mov
imul
shll
iret
fwait
ja
cmp
jbe
mov
add
sub
in
lock
cli
sbbb
dec
sti
aaa
mov
jb
jae
jno,pn
popa
stos
mov
test
lea
faddp
mov
xor
pop
leave
mov
jo
shlb
add
aam
jp
sbb
push
mov
out
andl
xchg
mov
stos
push
loop
cmc
and
push
aad
orb
imul
sub
fiadds
lock
mov
xchg
and
mov
pop
jne
mov
mov
ds
jnp
adc
inc
sub
inc
mov
push
xchg
mov
std
cld
test
cmp
imul
jmp
cmp
push
mov
lock
mov
mov
ret
out
cmp
xor
pop
arpl
mov
mov
into
mulb
loope
jmp
test
mov
add
insb
pop
jb
js
jo
jg
mov
dec
imul
jnp
popa
inc
shlb
imul
jecxz
xor
jle
lret
adc
arpl
pushf
xor
outsb
push
loope
push
aad
lcall
jae
jg
jno
sti
inc
or
pop
fxch
and
movsb
adc
cld
icebp
add
xorl
mov
cmpsb
or
jmp
xlat
push
repz
add
pop
jbe
mov
shlb
sti
mov
pop
push
mov
mov
iret
and
mov
ja
jecxz
mov
push
jo
cmc
mov
xchg
mov
cmp
dec
in
pop
sub
push
test
mov
sbb
in
shll
cmp
mov
cli
cmpsl
aad
and
mov
movsl
cmp
mov
packuswb
sbb
mov
mov
xor
jg
mov
ljmp
jmp
cmpsb
xorl
sub
fcomps
add
shll
mul
out
sbb
ja
sub
insb
sub
jle
imul
xchg
xor
and
repz
dec
fildl
in
sub
notl
cmp
dec
inc
or
push
out
cmp
xor
mov
lods
hlt
in
and
jecxz
fwait
sub
add
xchg
jae
jmp
call
adc
arpl
mov
mov
idiv
sbb
mov
sbbl
and
mov
sahf
pop
inc
cmp
sbb
sub
arpl
ljmp
js
pop
jae
imul
jmp
dec
arpl
lods
clc
jb
inc
xchg
push
jge,pn
movsb
clc
je
and
ljmp
gs
mov
subl
and
pusha
sub
mov
push
xchg
inc
lcall
push
and
jp
add
sub
loope
sub
inc
push
inc
add
std
out
sub
leave
and
outsl
orl
stos
and
xchg
je
dec
inc
test
loopne
into
sti
lds
cmp
shl
cld
out
push
adc
aas
inc
out
cmovl
ret
addr16
push
push
jo
xchg
xor
sti
xor
xor
xor
int3
dec
add
or
movsl
xchg
pandn
push
mov
and
ret
test
pop
sub
cmp
inc
xchg
divl
aam
mov
cmp
pop
popa
test
cltd
gs
xchg
and
pop
mov
cld
pop
test
insl
stos
or
or
roll
lods
lcall
xor
push
jecxz
ficoms
mov
dec
lods
movsb
jge
aam
mov
scas
jns
mov
fmulp
fstpt
jnp
mov
scas
in
into
bnd
mov
xchg
push
adc
push
or
sar
sub
inc
add
stos
mov
cs
and
sub
insb
mov
out
call
lret
pushf
pop
adcl
jmp
pop
xor
out
mov
popa
xchg
inc
push
pop
test
out
cmpsl
mov
mov
lret
mov
push
lahf
stos
into
lock
in
add
pop
sbb
ret
clc
test
inc
xchg
jg
call
xchg
sbb
fstl
mov
sbb
or
arpl
mov
xor
aam
mov
add
fcompl
mov
sbb
cmpsl
nop
cld
sbb
dec
rcll
mov
or
cld
mov
mov
ret
ret
inc
lcall
xor
and
icebp
out
aas
add
xor
test
lret
sbbb
les
jnp
clc
shll
imul
ss
out
adcb
out
xlat
xlat
jp
xor
mov
cwtl
and
fwait
jae
push
sbb
and
aas
pop
stos
loop
clc
leave
fwait
mov
adc
sub
dec
jbe
mov
pop
fildll
jo
sar
mov
cmp
inc
pop
ret
cs
lea
lahf
cwtl
xor
movsl
loopne
and
dec
mov
lcall
mov
dec
test
mov
fwait
scas
stc
clc
fistpll
inc
xchg
jae
xchg
xchg
int
sub
mov
scas
shll
adc
and
dec
pop
jno
std
xor
sbb
fldcw
pusha
lret
push
jae
add
jl
rol
xchg
arpl
sbb
and
rorb
ja
stos
xor
pop
hlt
push
ljmp
fisubs
and
xor
jno
out
outsl
inc
dec
mov
xchg
add
dec
cld
imul
aam
iret
xchg
int
stos
popf
stos
insb
pop
cli
mov
push
loopne
mov
fstpl
jmp
shl
xchg
ss
inc
je
stos
mov
jle
pop
es
inc
dec
sub
mov
js
or
sbb
cmp
out
mov
in
mov
shll
xchg
rcrl
imul
repz
mov
aad
cmp
sarb
cmp
xchg
sub
sbb
adc
cli
jle
jmp
sub
ljmp
sub
xor
mov
daa
xchg
mov
popf
pop
in
sahf
xchg
and
cltd
fstps
add
inc
jecxz
and
mov
cmp
bound
sub
sbb
add
add
fwait
xchg
pop
lds
lcall
or
ret
push
inc
idivl
xchg
aaa
sahf
clc
push
mov
and
inc
ret
shlb
lret
pop
bound
sub
cmp
dec
mov
stc
outsl
xlat
sar
sti
jno
push
jnp
iret
lahf
shrb
int
aam
lea
stc
cmp
mov
adcl
out
push
stos
sahf
inc
lods
pop
loop
jnp
sbb
subb
shlb
and
xchg
adc
in
dec
ja
ret
mov
dec
adc
sub
clc
sub
inc
xor
lock
cs
pop
or
arpl
test
push
aad
andl
push
test
nop
inc
lret
out
add
xchg
jbe
sbb
push
xor
mov
and
lcall
add
cmp
jl
movups
jmp
mov
adc
xchg
cltd
xchg
xchg
push
adc
ret
sahf
mov
rol
mov
stos
stos
sbb
jl
lahf
cli
adc
pop
cltd
dec
jle
dec
es
aaa
push
pop
push
mov
pop
and
fs
filds
and
movsl
hlt
fstl
push
inc
cmp
jmp
mov
iret
stos
mov
lret
jl
cwtl
cld
xor
mov
or
stos
inc
sub
sahf
dec
out
fwait
sub
movsb
shl
aas
ja
div
xchg
sti
lahf
dec
enter
sbb
cmp
stc
enter
xlat
pop
xor
jbe
push
pop
xor
push
mov
pop
and
cmpsl
push
test
push
jmp
mov
push
aaa
in
cmp
sub
shl
push
outsb
outsl
jmp
dec
icebp
pushf
test
inc
cmpsb
xor
inc
sbb
call
test
int
ret
adc
repnz
lret
adc
outsb
lea
push
insb
cwtl
cmp
test
push
nop
testl
and
inc
mov
and
mov
inc
aad
scas
pop
inc
repnz
xchg
sub
out
dec
mov
and
and
test
xor
aas
je
les
push
into
fisubl
popa
sbb
mulb
dec
dec
pushl
mov
aas
ret
pushf
iret
outsl
aaa
popa
jmp
ss
adc
ja
lea
addb
bound
sbb
xor
inc
push
pop
cmpsb
or
lret
mov
push
push
sbb
movb
xor
pop
fidivl
mov
in
mov
xchg
fstl
andl
int3
or
data16
ds
fdivl
test
mov
inc
cwtl
pop
aas
push
aas
add
xor
push
sarb
inc
rorb
or
mov
fadds
andl
fstps
push
push
pop
stos
push
cmpsl
push
xor
stc
rcll
pop
mov
leave
fidivrl
insb
iret
les
lods
popa
push
or
test
ficomps
and
js
pop
mov
les
pop
inc
fisubrs
in
call
jge
pop
stc
test
xchg
lret
flds
fimull
mov
leave
aad
fsubl
and
je
jmp
lds
push
xchg
mov
xchg
repnz
movsb
sahf
les
xchg
pop
mov
clc
add
xor
std
and
cwtl
pop
in
shlb
mov
pop
dec
cmpsl
test
scas
in
push
mov
inc
pop
jp
lock
cmp
inc
rorl
add
xor
lea
outsl
mov
psubb
and
adc
inc
push
out
enter
and
les
mov
test
pop
cs
or
pop
imul
xor
mov
daa
stc
jb
or
fldcw
lds
jns
cmp
adc
mov
mov
out
mov
mov
out
mov
or
andl
pop
fcomps
in
lds
and
push
sbb
or
cwtl
outsl
inc
mov
add
mov
mov
cmp
jbe
aaa
xor
and
sub
and
push
sbb
rcll
mov
insl
lea
sbb
inc
aaa
jmp
ds
cli
add
popa
mov
into
push
mov
mov
jmp
push
rorl
jecxz
inc
data16
out
daa
xor
mov
pop
mov
std
or
adc
repnz
andl
negl
jo
test
mov
push
push
sbb
inc
mov
jecxz
lods
inc
aaa
push
ror
xchg
mov
cmp
xchg
dec
repz
mov
jecxz
movzbl
pushl
xchg
lret
inc
adc
adc
ljmp
add
lcall
jbe
xor
call
inc
sbb
js
jg
lcall
jne
iret
sbb
dec
stc
or
mul
mov
pushf
mov
mov
dec
xchg
stos
fwait
mov
push
mov
or
xlat
mov
jb
sub
in
lea
pushf
jmp
sbb
pushf
push
fbld
lods
sub
ret
bound
pop
mov
rcrb
data16
sbbl
shll
push
cli
jno
outsl
fimuls
popf
mov
fsincos
jns
aad
mov
je
sbb
movb
cs
iret
mov
mov
push
jnp
out
adc
mov
mov
fbstp
cwtl
adc
dec
iret
sbb
push
mov
lock
cs
mov
test
mov
mov
jecxz
lcall
out
stos
add
push
data16
mov
sbb
and
hlt
test
insb
or
arpl
rcrb
push
mov
or
out
sbb
jle
shrl
sbb
fdivrl
add
loopne
rcrb
mov
sub
out
fisttpll
outsl
adc
insb
lahf
js
shll
fstps
out
jl
pusha
xchg
jp
push
push
mov
add
bound
pop
andl
bound
cmp
xchg
pop
fwait
add
jne
ds
lock
or
out
dec
scas
out
push
dec
fs
pop
cli
xchg
mov
add
aas
mov
and
lods
push
jb
fstpl
lret
jbe
test
scas
das
sub
shlb
or
mov
jmp
mov
ret
inc
not
inc
int
in
dec
add
jb
lea
jp
mov
pushl
ftst
jecxz
dec
push
mov
inc
iret
inc
rcll
repz
push
movsl
cmp
sbb
lock
nop
pop
inc
rclb
imul
sahf
inc
mov
push
xor
xchg
sub
stc
xor
aam
cmpsb
jle
cmpsb
jle
dec
lret
movsl
add
jno
push
cmp
sbb
pusha
and
adc
push
in
cmp
mov
fucom
ja
jl
in
sbb
push
in
imul
adc
fs
cmp
pop
in
pop
int
mov
aad
jo
repz
aaa
dec
daa
stc
jnp
mov
xchg
sbb
outsb
adc
pop
repz
scas
mov
in
and
cmp
mov
insb
movsl
enter
jecxz
pop
popf
or
sub
push
shll
adc
push
push
mov
hlt
mov
inc
add
push
and
repnz
jl
push
push
sarb
sbb
dec
cld
stc
pop
subb
filds
ja
jmp
xlat
push
jecxz
xchg
ret
dec
mov
js
inc
jmp
movsb
leave
fs
or
sbb
mov
cld
dec
jl
or
mov
out
movsl
cmp
jl
jbe
test
out
pop
into
inc
je
mov
cmpsb
sbb
mov
sub
mov
ficomps
jb
enter
mov
cmpsb
nop
mov
lods
pop
xor
popf
mov
sub
push
neg
out
testl
je
mov
add
cmc
nop
outsl
mov
loopne
pushf
rorl
pusha
repnz
push
iret
or
faddl
in
jecxz
mov
xchg
push
adc
jb
jbe
stos
lds
dec
cmp
sbb
mov
mov
not
orb
rorl
testl
cld
sahf
cmp
add
adc
jb
inc
inc
lods
int3
into
mov
mov
cs
push
sub
or
and
outsb
xor
dec
lds
fsub
sbb
std
add
mov
lock
test
jne
mov
mov
rcll
lods
push
lods
jbe
stos
movsl
rcrl
das
aas
mov
rorb
sub
jb
gs
test
mov
push
xchg
shrl
mov
or
jp
mov
test
sub
add
cli
stos
push
sbb
push
mov
out
mov
mov
or
xlat
int
push
mov
jns
inc
into
and
out
mov
pop
fcoml
cmp
dec
mov
push
dec
arpl
andl
mov
jecxz
out
out
gs
xor
shl
push
mov
clc
or
mov
push
adc
add
testb
out
aam
pop
pusha
roll
adc
and
pop
pop
es
call
jle
scas
mov
xlat
pop
movsl
add
mov
daa
pop
adc
or
repnz
jp
loop
mov
inc
pop
lret
or
sbb
mov
lret
xlat
jno
sbb
call
jmp
mov
hlt
xlat
pop
addb
les
out
iret
cltd
mov
in
mov
push
xor
mov
cmc
inc
push
mov
mov
fdivrs
popf
rorb
mov
sbb
in
mov
xor
mov
cmp
scas
jp
sysexit
xchg
jno
pop
or
push
cs
and
mov
lea
in
ja,pn
or
sub
xchg
cld
stc
dec
sub
and
fsubr
rcl
in
and
xor
adc
fmuls
ja
test
popa
sbb
jo
stos
jmp
sbb
ss
pop
mov
sarb
ds
aam
pop
loop
xchg
xor
fsubrp
push
xchg
pop
imul
xchg
and
push
movsb
push
les
mov
js
outsl
nop
inc
testb
mov
or
add
rolb
xlat
ljmp
rclb
js
or
aad
xchg
cmpsl
dec
inc
jo
pop
scas
ret
adc
cmpl
loop
dec
add
inc
mov
and
and
icebp
test
jo
push
and
mov
loopne
pusha
or
mov
adcb
dec
push
cltd
or
cmc
fisttpl
sbb
call
mov
xchg
aaa
cmp
jmp
das
push
ja
sbb
xlat
insb
dec
or
icebp
rcrl
call
or
mov
data16
insl
fimuls
popa
mov
lret
sbb
sub
insl
jbe
lcall
pop
xchg
push
fiaddl
push
mov
jns
pop
pop
pop
je
cmp
push
pop
and
loope
mov
ss
lcall
je
inc
adcl
and
addr16
lds
cmp
sbb
in
mov
clc
cmp
cmp
jo
pop
xchg
sub
cwtl
push
imul
push
push
xchg
cmp
iret
push
dec
imul
loop
test
js
ret
call
lret
in
mull
adc
int
sbb
sti
sbb
or
int3
mov
xorl
xchg
cmp
xlat
neg
into
shll
pop
repnz
divl
inc
dec
pop
or
loopne
inc
dec
sbb
jns
pop
std
push
mov
in
cli
and
lret
pop
push
mov
outsl
sub
pushf
push
cwtl
fdivs
mov
das
adc
dec
mov
inc
inc
sub
xchg
mov
sbb
xorl
es
test
add
mov
cli
adc
or
sti
loopne
andb
sbb
xchg
rcll
adc
sbb
mov
mov
push
cmp
dec
or
add
cli
cli
popf
xor
or
push
hlt
pop
mov
xchg
adc
aam
cwtl
loope
sub
decb
xchg
icebp
or
inc
inc
fisubrl
xor
bnd
pop
mov
and
cmp
insb
stos
xchg
push
jmp
inc
sub
jnp
ljmp
mov
xchg
push
pop
inc
pusha
xchg
fcmove
scas
xor
nop
cmpsl
pop
sub
cli
fistps
mov
mov
sub
mov
or
fmull
call
or
cmp
xor
push
lock
sbb
cmp
add
fwait
scas
lods
pop
or
test
test
lods
stos
push
data16
pop
push
xchg
scas
push
lcall
shrb
sbb
add
sbb
cmp
cwtl
pop
xchg
push
mov
cmp
sub
orb
mov
jle
aad
inc
sbb
mov
test
inc
arpl
sbb
repnz
lds
jmp
int3
pop
inc
inc
gs
adc
add
sbb
xor
jne
sub
jo
inc
fcomp
mov
pop
and
inc
pop
loope
das
int3
push
or
jg
aas
mov
js
int3
mov
jge
mov
out
insl
mov
pusha
fisubs
adc
dec
jnp
ret
pushf
or
jmp
aas
popa
fwait
push
gs
in
and
jae
lret
insb
into
subb
jbe
cli
cmp
or
out
mov
or
or
mov
xor
dec
repz
dec
xor
out
mov
pop
imul
add
mov
aad
xor
and
leave
xchg
mov
scas
xor
loopne
adc
aas
fsubs
rorl
add
jo
nop
in
enter
jo
mov
and
mov
mov
es
add
in
mov
and
aas
lds
sbb
ljmp
test
jno
sub
dec
fbld
add
fnstsw
jp
jno
pop
aas
lret
mov
adc
test
aas
cmp
dec
or
in
jl
xchg
std
jns
outsb
or
sahf
fists
jg
adc
sub
push
jp
adc
lods
xchg
cltd
mov
mov
test
fdivp
mov
cmp
shl
jge
lret
cmp
aad
insl
push
call
inc
xchg
add
leave
rorb
stc
sahf
cmp
pop
jecxz
dec
dec
iret
inc
stos
jbe
ds
or
test
mov
add
stc
cmpl
mov
and
add
mov
pop
xor
xchg
cmp
or
stc
ja
jno
das
inc
mov
push
xor
adc
inc
jmp
jmp
mov
mov
mov
into
mov
add
mov
push
jle
mov
outsb
adc
mov
pop
aad
clc
arpl
enter
test
fnstcw
cli
or
jecxz
js
lret
xchg
mov
mov
mov
add
cltd
cmp
and
bound
sti
aas
push
ret
call
leave
and
xchg
mov
sti
imul
in
test
scas
jl
daa
dec
adc
adc
inc
nop
or
mov
xorl
pop
xchg
pop
xor
test
mov
lahf
jno
vmread
fsubs
stc
in
addl
xchg
push
gs
rolb
repnz
rcll
mov
scas
movd
add
xchg
mov
jns
fs
cmpl
les
push
dec
fs
dec
lret
ja
rcrb
arpl
push
mov
or
xchg
cmp
dec
enter
leave
push
push
aas
lods
mov
outsl
mov
xor
in
bound
ljmp
into
fsubs
ret
push
imul
ss
xchg
je
cmpxchg
scas
pop
sbb
xor
and
and
sbb
ret
jo
shl
rolb
mov
sbb
cli
loopne
iret
sub
and
stos
mov
ret
lods
add
pop
dec
jmp
inc
jge
jecxz
std
jge
mov
xlat
add
jg
jp
xor
and
ret
mov
mov
fdivrs
movsb
push
adc
push
dec
or
or
jb
insl
xchg
add
add
sub
ficoms
add
addr16
adc
push
xchg
ja
lret
sbb
push
sub
mov
repz
ja
outsl
data16
jmp
xchg
and
push
or
into
repnz
out
loope
out
adc
ja
scas
stos
lret
mov
repnz
jno
cli
dec
xlat
clc
addr16
mov
pop
mov
push
or
sub
or
dec
dec
inc
mov
loopne
popf
inc
and
cmp
frstor
and
mov
fcomi
int
and
add
bound
and
adc
lds
cmpsb
nop
sti
pop
imul
jmp
movsl
insl
dec
popa
fsubr
int3
mov
lea
leave
into
cli
jl
and
mov
loope
nop
xor
xor
dec
adc
sub
mov
iret
stos
fwait
add
ds
nop
je
out
icebp
and
pop
add
insl
xor
clc
stos
inc
cld
movsb
in
adc
or
in
dec
ror
xchg
cmpb
push
mov
jmp
pop
rclb
das
push
or
sbb
call
sub
inc
mulb
addr16
or
in
loopne
insl
inc
aas
shlb
nop
push
mov
int3
scas
or
fiaddl
enter
in
push
in
push
aad
and
pop
lock
fsubs
adcb
cwtl
and
out
sbb
sbb
mov
in
rolb
scas
dec
stc
das
movsb
les
xorl
xchg
jno
ds
sti
push
push
cmpsb
cmpsl
ja
pop
cmp
xchg
sbb
lock
mov
mov
in
xchg
rcl
das
cli
sbb
movsb
xchg
and
sbb
cmp
leave
mov
sbb
inc
mov
add
test
push
cli
cwtl
cmp
xchg
push
pop
andb
cmp
xor
xlat
xchg
or
mov
in
cmpl
sbb
or
fnstsw
arpl
ficompl
insl
pop
inc
sub
push
scas
dec
call
xor
movsb
or
adc
and
stos
push
adc
in
mov
ss
mov
xor
adc
lcall
test
push
popf
aad
mov
mov
xchg
in
mov
es
sub
jle
mov
sbb
sbb
inc
push
mov
or
mov
call
cwtl
lahf
stos
daa
and
cmp
pop
test
arpl
adc
scas
add
push
pop
pop
jbe
pop
aad
inc
and
inc
xchg
and
in
stos
sbb
lret
js
xchg
jl
ljmp
or
insl
stos
into
cmp
loop
mov
push
xor
in
in
xchg
and
iret
nop
in
mov
mov
rclb
ret
test
call
add
mov
inc
iret
inc
dec
fstpt
faddl
imul
mov
jp
movsl
addr16
pop
movsl
inc
in
enter
fcompl
js
cli
in
pop
out
notl
rcrb
or
adc
in
repnz
insl
mov
sub
cmp
inc
repnz
lods
fcoms
arpl
shl
jne
repnz
out
mov
dec
stc
sub
rcl
mov
and
inc
addb
cmp
aas
mov
mov
sarl
cmpb
movsb
lea
mov
push
xor
add
xchg
out
mov
divb
mov
mov
addr16
pop
jo
push
jno
cmpsb
xlat
jb
cmp
popf
mov
jle
xlat
and
call
fsubrs
popf
dec
sbb
out
out
pop
add
mov
inc
xchg
int3
lret
or
rcrl
jg
fistps
fistpl
mov
push
dec
test
hlt
mov
addr16
pop
cmp
xchg
ret
mov
enter
in
sub
in
lods
and
orl
mov
sub
in
push
xor
divb
push
sub
out
jg
xchg
mov
adc
sbb
lcall
xchg
loopne
mov
addr16
pop
jle
mov
int3
push
xchg
pop
jne
lock
fsubl
dec
pop
psubb
mov
jns
push
xor
jle
inc
test
shrb
inc
ja
popa
ret
mov
sbb
pop
jne
pop
xchg
add
inc
je
test
cmp
jae
mov
popf
es
aam
or
loope
jo
jge
dec
fistps
mov
lods
imulb
rep
popa
mov
ficompl
and
sbb
push
ljmp
xchg
jnp
sub
lcall
push
pop
data16
dec
aas
icebp
das
popf
ljmp
xor
imul
add
cmp
movq
jo
inc
in
sbb
clc
mov
rol
and
dec
xchg
cs
lods
mov
jmp
pop
cmp
push
mov
cmpsl
fdivs
cli
mov
iret
pop
in
inc
add
ja
insl
jne
scas
pop
mov
pop
and
and
popa
dec
mov
cmp
fdivs
subl
pop
mov
mov
xchg
lcall
and
jge
and
pop
xor
jno
push
movsl
jae
popf
jo
and
insb
and
mov
xor
inc
mov
jecxz
jmp
and
mov
adc
fdivr
leave
xchg
mov
ret
adc
mov
cmpsb
mov
pop
cmpsb
cmp
js
sahf
pop
pop
lods
fiadds
xchg
in
movl
dec
adc
push
cmpsl
pop
push
and
int
mov
push
pushf
ljmp
or
loope
push
jle
jmp
mov
lret
lcall
cmpsl
leave
out
adc
or
push
fsubrl
jns
in
and
xor
fucomp
mov
jmp
or
insb
and
sqrtps
mov
aam
cli
loope
xchg
je
and
lds
and
adc
push
dec
into
push
adc
mov
lret
or
pop
ss
push
inc
je
orl
in
addr16
nop
adc
jmp
loope
fistpll
jl
lods
jmp
out
pop
popa
cmc
push
push
xlat
add
xchg
xor
lds
pop
nop
and
xchg
das
loope,pn
shrl
and
xchg
xchg
jg
or
push
das
or
mov
jecxz
mov
insw
dec
popf
jno
push
mov
adc
test
sub
push
imul
mov
sub
nop
pop
and
or
or
negb
inc
sbb
jle
pushf
hlt
stos
jg
insl
add
jno
sub
or
mov
rol
ljmp
and
dec
lcall
sahf
mov
or
cmp
ljmp
xchg
icebp
nop
stos
iret
imul
outsb
push
add
in
sub
adc
out
push
inc
dec
js
fisttps
push
outsl
dec
ror
aad
sbb
in
mov
or
push
fadds
popa
push
sub
out
iret
fs
les
out
and
mov
push
cmp
clc
hlt
dec
and
ret
cmp
fs
push
sub
sub
in
add
xchg
loopne
enter
fidivs
addb
ds
test
fnstenv
out
in
mov
jecxz
sub
jo
jno
jg
rclb
fsubrl
repnz
out
out
mov
xor
push
out
jmp
mov
or
cmp
hlt
cmp
sub
inc
int
nopl
inc
mov
or
xchg
cs
div
jge
int3
out
cli
dec
push
aad
pop
and
in
cmp
fmul
rclb
mov
repnz
mov
lahf
pop
lcall
mov
xor
inc
mov
adc
inc
stos
add
pop
sub
scas
adc
pop
arpl
pop
clc
push
test
scas
xor
rcrl
lret
int3
mov
xchg
mov
xchg
and
sbb
and
pusha
iret
pop
add
cltd
aas
push
dec
mov
push
xchg
jb
and
mov
test
add
test
and
cmc
iret
xlat
sbb
loopne
int3
popa
jno
mov
aam
mov
and
cs
and
roll
call
push
icebp
roll
sub
fsts
mov
stc
insb
push
mov
bound
sbb
push
ret
push
aas
pusha
clc
mov
js
je
pushf
mov
xor
lock
and
sub
mov
cwtl
js
add
add
jg
mov
inc
mov
clc
jnp
xchg
test
xchg
cmc
std
test
mov
cmp
mov
sarl
jo
fildl
int3
inc
addl
jp
mov
pop
fcoml
lds
mov
sub
sbb
or
in
jns
jg
inc
pop
jl
xchg
popf
inc
lock
outsb
cltd
inc
push
jge
xorl
push
lret
repz
xor
ss
xchg
nop
inc
xchg
xor
divb
mov
sub
leave
jl
cltd
jbe
inc
lds
push
or
ljmp
lea
in
adc
add
jge
mov
outsl
popa
adc
dec
loopne
jecxz
int
repz
pop
aaa
xchg
pop
movups
loopne
insb
pop
adc
xchg
jno
lcall
adc
sbb
lret
dec
adc
and
out
xor
and
mov
push
lcall
lea
roll
jae
pop
push
dec
xchg
push
enter
cs
sbbb
rcll
out
cmpb
cld
sbb
mov
jne
or
add
pop
inc
inc
dec
sub
mov
les
out
push
orl
dec
adc
stos
xor
cli
sbb
popf
jle
pop
and
cmpsb
icebp
popa
push
mov
jmp
loop
push
sbb
fxch
pop
and
inc
xchg
xchg
sub
mov
pop
jb
mov
lahf
ljmp
pop
jp
dec
cmpsl
repz
cmpsl
outsb
decl
repz
es
and
rorl
scas
fnstenv
add
into
icebp
fwait
adc
movsb
or
push
sbb
add
stos
rcll
push
mov
jbe
mov
lea
push
addr16
dec
or
in
mov
stos
cld
sub
das
pop
mov
out
push
pop
mov
nop
push
add
dec
fisubl
mov
faddl
pusha
sbb
or
mov
out
aad
sub
cmp
movsb
jne
push
fwait
and
enter
daa
push
jp
push
jno
mov
pushw
add
inc
and
imul
scas
imul
add
sub
jnp
popa
xchg
scas
js
mov
mov
ja
inc
sub
dec
loope
push
mov
in
incb
add
pusha
cli
add
repnz
cld
in
mov
stc
mov
test
inc
jecxz
or
mov
jnp
jecxz
jb
sbb
loopne
xchg
inc
sub
push
cmp
cli
insb
aad
out
rcll
imul
inc
loope
arpl
in
jg
mov
in
jmp
xchg
rolb
add
push
adc
add
xchg
or
gs
pushl
ret
test
push
mov
loop
pop
xchg
push
es
push
fs
dec
in
std
mov
movsl
inc
sbb
popa
pop
aam
rorb
mov
imul
mov
repnz
rcrb
mov
sub
mov
sub
adc
std
test
in
fcomps
jecxz
int3
xchg
icebp
lds
cmp
aas
mov
xchg
xchg
loop
in
lret
aad
stos
and
cmp
inc
jne
fcoms
mov
dec
in
or
imul
jnp
ret
hlt
mov
mov
and
dec
xchg
pop
lock
adc
icebp
cmpsb
sti
mov
and
jge
jmp
push
mull
mul
lcall
sbb
xchg
icebp
filds
movsl
cwtl
cmp
push
xchg
sub
insb
dec
mov
mov
and
cli
dec
mov
xor
inc
mov
mov
cltd
jl
es
xor
shrb
xor
mov
pop
incb
push
clc
jae
cmpsl
and
arpl
insl
mov
cmc
je
mov
repz
mov
xchg
sti
sbb
mov
cmpsl
stos
mov
mov
pop
mov
or
enter
cli
sti
push
in
or
jecxz
cli
cmp
pop
orb
inc
data16
add
pusha
sbb
sbb
in
or
sti
sub
add
mov
ret
mov
xchg
mov
pop
out
pusha
mov
mov
imul
mov
sub
push
mov
arpl
lea
test
dec
push
dec
cld
fwait
dec
dec
fwait
int
mov
imul
ss
jbe
xchg
in
decl
repnz
xchg
mov
data16
test
sub
push
sub
jnp
out
xor
in
fistl
jecxz
ljmp
aam
dec
xchg
pusha
popa
or
aad
iret
mov
loopne
and
sub
jbe
ret
mov
in
repz
cmp
outsl
orb
pop
cmp
leave
jb
movsl
dec
mov
out
mov
sbb
and
std
jae
test
lock
cmp
data16
dec
jg
push
push
fists
push
or
inc
mov
into
outsl
or
notb
or
out
sarb
push
cld
pop
test
insb
lods
push
push
scas
dec
fldt
xor
xchg
mov
das
push
pop
sahf
stc
ret
pop
lock
ret
xchg
or
cli
and
out
pop
jae
stc
adc
nop
and
mov
cmpsb
femms
adc
adc
mov
pop
sub
fildl
or
mov
int3
repnz
and
adc
mov
lods
sub
add
xchg
rolb
stos
test
or
stos
mov
subb
arpl
jle
movsl
aas
in
xchg
mov
data16
hlt
leave
loopne
insl
xchg
sbb
dec
or
out
inc
cmc
js
data16
imul
nop
jbe
inc
lcall
fs
int3
cli
xchg
sbb
xchg
mull
lds
hlt
call
jb
sub
rorb
push
lds
sbb
sbb
adc
cld
mov
pop
ret
dec
pop
push
fwait
add
test
ss
push
test
fdiv
add
adc
addr16
cltd
mov
dec
cmp
pop
cmp
das
mov
popa
outsl
sub
lret
mov
icebp
scas
or
sbb
sbb
dec
dec
out
mov
sbb
in
cmp
fwait
jne
pop
movsb
and
push
inc
dec
mull
insb
aas
imul
push
mov
mov
lods
subb
xchg
dec
dec
xchg
test
arpl
call
xor
xor
test
jae
push
or
or
inc
fwait
jp
ja
in
cmc
xchg
into
loop
ficoml
inc
insl
outsb
popf
mov
fistl
shlb
addr16
pop
das
xchg
aad
fnstsw
pop
add
bound
sahf
in
adc
ss
or
cmc
rclb
mov
leave
mov
inc
loope
lahf
fildll
repz
addl
jne
inc
mov
imul
mov
jmp
cmpsb
and
fsubrl
inc
mov
and
mov
mov
cmp
mov
xchg
mov
lods
fldt
cwtl
fs
subl
mov
scas
test
sub
cmp
xchg
mov
enter
jne
mov
loope
idivb
orb
test
icebp
je
jns
and
cmp
icebp
xchg
xchg
stos
gs
add
aad
inc
cmp
int
mov
push
mov
dec
xor
push
pop
push
into
or
cmp
jge
push
scas
test
fcmovbe
js
push
lahf
data16
gs
push
data16
and
push
insl
cmc
mov
sbb
push
or
push
jb
jae
adc
orl
adc
pop
pop
repz
dec
ljmp
lea
cmp
pop
leave
mov
int
pop
out
sar
clc
pop
inc
les
inc
cmp
gs
push
aas
add
sahf
fsubrl
pop
pop
mov
mov
dec
sub
pop
dec
mov
das
pop
sti
dec
lret
mov
mov
cmp
sti
lret
push
jnp
cmc
xor
jle
adc
lock
push
in
lods
int
adc
jecxz
mov
rol
test
lret
loopne
xor
or
inc
inc
cmpsb
push
std
ret
pop
fsts
sub
inc
mov
sbb
in
ds
push
bound
gs
mov
shlb
jns
lea
inc
fwait
scas
push
jg
gs
jmp
cltd
push
lods
jl
adc
aam
xor
scas
aaa
pop
rcrl
dec
mov
adc
push
adc
push
mov
cmc
pusha
mov
arpl
rcl
lea
and
test
pop
add
cmp
repz
out
cmp
mov
jl
ds
loopne
jecxz
xorl
cs
adcb
test
lock
lret
jae
inc
divb
fmulp
ret
mov
pop
push
iret
jmp
mov
push
fidivrs
jbe
mov
xor
popa
mov
dec
xchg
lahf
scas
icebp
jnp
adc
out
jno
dec
out
scas
add
je
push
adc
ret
icebp
into
pop
rcrl
stos
add
dec
xor
pop
hlt
and
mov
xchg
add
sahf
pop
add
pop
popf
arpl
mov
leave
daa
fwait
lock
and
lret
dec
mov
aam
mov
and
sbbl
or
inc
pop
icebp
leave
xor
mov
movsb
pushf
fucomp
into
mov
inc
mov
mov
cmp
insl
js
aad
fucom
pop
nop
push
fwait
jle
inc
adc
pop
jne
pop
lret
fadds
xor
mov
jno
mov
hlt
loop
fistpll
fisttpl
popf
push
mov
popa
push
imul
repz
leave
notl
push
lcall
xchg
mov
cmp
dec
cmp
jnp
dec
xchg
loop
or
cltd
push
add
daa
jle
add
sub
lahf
sub
add
sub
test
add
bound
inc
iret
jl
mov
pavgb
ja
adc
outsl
movsl
mov
adc
cwtl
xor
adc
inc
sarb
stos
adc
aaa
jnp
jmp
fsubl
push
inc
adcl
sub
add
adc
xor
cli
cmp
addr16
fdivs
xchg
data16
adc
lcall
daa
arpl
adc
mov
jbe
outsb
push
in
subl
jns
mov
cli
std
cmp
int
cmp
loop
push
call
pop
or
icebp
jp
sbb
dec
shrl
mov
cs
clc
cmp
pop
mov
push
sub
movl
mov
mov
out
inc
test
jne
mov
sahf
mov
inc
jns
pop
xchg
and
pushf
sbb
mov
cwtl
lea
sbb
mov
ret
inc
cmp
pusha
push
sti
mov
pop
pop
lods
jg
cmp
aas
call
outsb
or
push
and
insl
and
cmp
gs
filds
imul
daa
cld
mov
sbb
xchg
and
pop
loop
ja
outsb
iret
jl
add
scas
adc
mov
xchg
scas
cmpb
mov
and
ljmp
cmpsl
lock
insl
add
aad
xchg
lods
push
and
pop
xor
js
cmp
into
inc
mov
imul
cmp
push
aas
dec
iret
jns
or
cmp
push
jl
shll
mov
push
movsl
scas
xchg
ljmp
add
addr16
xorb
dec
pop
in
stc
push
imul
ss
mov
pop
xchg
aad
test
mov
dec
jbe
ds
orl
out
aad
cmpsl
js
out
imul
ds
mov
jae
inc
dec
adc
fists
mov
jp
ret
xor
pop
adc
push
fsubrs
lea
fstpt
lret
inc
das
gs
mov
xchg
mov
xlat
mov
mov
fsubrp
lcall
xor
cld
or
out
dec
dec
cmp
push
cmpb
out
mov
sbb
jns
push
push
lods
lahf
xchg
push
jge
mov
ret
mov
pop
and
sbb
push
adc
cmp
pusha
pop
pushf
pop
mov
jbe
mov
aam
xor
popf
aas
push
popa
dec
cltd
outsl
lea
sti
subb
mov
cmpsl
jb
push
inc
pop
mov
mov
mov
xor
dec
test
xchg
sub
mov
into
mov
xchg
scas
or
dec
divb
pop
test
xchg
xlat
subb
jae
pushf
xor
inc
lret
jecxz
mov
dec
insl
rcl
inc
les
lret
sub
fdivrs
pop
mov
leave
cmpsb
jge
ret
ds
sub
repz
mov
mov
push
lds
jle
or
add
pop
repz
aaa
in
popa
test
mov
dec
and
cwtl
lret
xchg
or
jae
loope
pop
fmull
push
add
outsl
cmp
sbb
insb
hlt
lods
xchg
xchg
xchg
and
dec
repz
mov
sbb
xor
pop
jmp
sbb
dec
mov
jbe
cli
call
inc
push
nop
mov
sbb
mov
xor
adc
mov
sbb
outsl
dec
je
xor
enter
ja,pt
mov
pop
lods
stos
nop
mov
loopne
je
pushl
hlt
mov
adc
or
push
mov
aad
fistl
push
pop
push
jo
int3
hlt
ds
mov
inc
adc
fcompl
js
pop
mov
loope
sti
lds
add
sbb
sbb
sub
xchg
mov
aas
outsb
cmp
sbbl
xor
mov
and
mov
sahf
shr
sbb
inc
and
ja
or
iret
jmp
fdiv
enter
cmp
sahf
test
sub
fmul
mov
sbb
mov
das
pop
sub
insl
sbb
sbb
lret
adc
mov
mov
xor
repz
shl
or
cmove
push
ja
aad
sbb
call
popa
xor
sbb
fimull
mov
pop
and
xchg
loope
loope
data16
xchg
pop
cli
fstpl
xchg
xor
add
and
and
das
or
dec
out
cmpsb
ror
push
jo
test
insb
jnp
jg
lret
or
xchg
adc
sarl
cld
jl
inc
jnp
cld
dec
xor
adc
je
push
test
aam
or
lds
imul
movsb
push
lret
mov
jmp
adc
sti
xchg
push
xor
cmp
pop
fnstenv
mov
out
xlat
jbe
into
jns
fisttpl
push
pop
rclb
adc
sub
repnz
mov
cmp
and
sarb
insl
jg
jae
int
stos
cli
clc
out
mov
push
dec
mov
mov
cmpsl
in
add
sbb
in
pop
jp
ja
outsb
lahf
jb
test
pop
push
test
pop
mov
xlat
inc
push
dec
pop
repz
orb
inc
loopne
mov
sti
mov
dec
jge
push
aas
cs
aad
lahf
lods
cmp
mov
cmpsl
push
mov
dec
pop
iret
cmp
xchg
xchg
pop
ss
and
jmp
fs
rclb
jp
js
jge
dec
dec
shlb
push
push
or
rolb
and
pushf
mov
lret
mov
mov
adc
xchg
gs
lds
sbb
pop
pop
jl
inc
add
adc
jg
nopl
std
int3
popf
fs
cwtl
jo
mov
inc
out
cmp
xchg
or
stos
or
std
sbb
add
movsb
push
mov
mov
in
mov
mov
dec
stc
sub
mov
lret
cmpsl
lret
sti
sub
std
pop
cwtl
mov
js
lods
pop
stc
mov
dec
outsb
xchg
jge
shlb
or
or
mov
mov
mov
xorl
fistl
cmp
std
std
loop
mov
mov
ja
add
cmpsl
scas
push
cmp
dec
subb
dec
mov
cwtl
pop
mov
pop
jno
xchg
ret
push
inc
sub
popf
and
jo
int
sbb
movsl
scas
cmp
and
push
sub
mov
lret
add
push
or
push
imul
int3
pop
or
popa
in
jp
mov
aaa
stos
in
sub
pop
out
cmp
sahf
hlt
xor
hlt
fs
filds
cmp
mov
cmp
ficoml
rorb
dec
out
mov
negb
pop
and
inc
ds
lcall
pusha
shlb
push
insl
cmp
call
pop
xchg
test
pop
xor
and
cmp
hlt
jecxz
repnz
mov
mov
das
or
pop
test
imul
sti
mov
pop
mov
testl
push
jle
int
lcall
repz
popa
std
in
sarb
mov
push
call
ss
cli
or
lcall
int
ficoml
in
insl
daa
pop
inc
push
jnp
pop
pop
test
setns
leave
lret
sub
nop
or
out
out
adc
out
test
xor
or
inc
cmp
ja
dec
fwait
icebp
inc
push
xlat
adc
aas
push
mov
popa
add
mov
shrl
test
adc
dec
adc
iret
imul
push
adc
adc
and
movsl
clc
loop
icebp
fldt
xor
mov
push
test
aas
jo
add
les
jmp
xchg
int
xor
stos
shlb
pop
cmpsb
adc
cmp
clc
test
sbb
pop
or
sub
imulb
data16
mov
stc
push
xor
movsb
mov
pop
push
inc
jo
aas
or
pop
fwait
negb
lock
in
cmp
mov
scas
aaa
fld
loope
xor
jno
mov
aas
dec
les
repnz
ljmp
fcomi
xchg
pop
sti
fs
pop
mov
pop
and
and
ror
aas
loope
jmp
aas
call
mov
push
aaa
jnp
sti
ss
hlt
inc
daa
arpl
icebp
dec
sbb
movsl
mov
push
sbb
inc
das
movsb
xchg
fistps
scas
mov
inc
negl
push
jb
fwait
adc
cmpsl
and
sub
leave
inc
cltd
mov
cs
xor
mov
repnz
push
out
test
dec
loopne
pop
jmp
lea
adc
jb
or
pop
lahf
gs
in
mov
dec
adc
push
cmp
dec
dec
xor
inc
pop
movsb
in
add
int
mov
in
imul
scas
lea
sbb
fnstsw
mov
clc
adc
stos
add
push
jo
xor
das
xor
iret
mov
xchg
pop
out
sub
mov
je
stos
inc
xchg
jb
cmp
fcmovnbe
lock
xor
xchg
mov
push
stc
adc
mov
ret
test
or
jb
lret
xor
jecxz
aad
rcrl
or
add
sbb
ret
sbb
fnstsw
aas
push
lahf
jp
inc
test
cmp
in
mov
pop
pop
dec
dec
jb
in
mov
cmp
cli
push
mov
pop
adc
xor
lcall
scas
fdivs
pop
dec
leave
ja
nop
ret
and
dec
sbb
push
jecxz
stos
inc
ss
push
xorl
mov
cmc
mov
clc
push
enter
xor
loopne
fcmovb
mov
and
aas
mov
andl
out
stos
dec
add
xchg
fidivs
cmp
call
pop
push
mov
lods
repz
fisubrl
aaa
inc
jae
xchg
mov
dec
adc
repnz
add
sub
repnz
jp
insb
insl
das
dec
jmp
pop
jns
and
pop
inc
aam
xor
pop
outsb
jp
ljmp
push
add
ret
mov
scas
jae
test
ret
inc
loope
lds
xchg
sbb
leave
pop
ret
ljmp
inc
or
testl
ds
cld
or
outsl
fsts
or
fdivl
or
sbb
into
mov
mov
xchg
or
cmp
inc
push
out
and
repz
pop
pop
jae
lret
mov
push
mov
mov
push
cmp
test
jecxz
and
icebp
xor
repz
mov
ja
adc
lret
fistpl
and
fcompl
cld
lahf
xor
flds
std
mov
mov
fsubr
dec
in
xor
sbb
test
arpl
push
sub
pop
rclb
push
les
mov
test
and
or
xlat
fs
jge
push
mov
pop
mov
push
out
xchg
data16
das
ret
mov
rorb
iret
inc
dec
mov
adc
xchg
and
add
sbb
pop
les
mov
pusha
lahf
mov
jo
ret
xor
or
rcll
fwait
cmp
in
out
and
cmovp
loope
out
test
inc
xlat
push
arpl
loop
cld
imul
pop
mov
in
mov
adc
cmp
div
loop
dec
sbb
in
xchg
sub
and
imulb
lods
push
xorl
push
pusha
mov
xchg
inc
out
xor
fs
mulb
fs
movsl
dec
aad
clc
std
jle
add
or
rorb
xor
and
adcb
pop
xchg
jl
rcrl
mov
sahf
sbb
dec
push
popf
in
push
cmpsl
mov
or
xchg
je
int3
mov
iret
rdpmc
pop
cli
mov
dec
hlt
mov
cmp
stc
lods
mov
dec
aas
jmp
mov
cmp
jbe
pop
clc
jno
xchg
jmp
or
sub
and
sbb
and
jbe
lods
shlb
enter
jl
sub
dec
out
or
sbb
sbb
push
jl
dec
sub
xchg
mov
mov
sbb
mov
push
sbb
lods
jg
sub
jl
mov
lea
inc
pop
or
movsl
mov
int3
xchg
ret
lcall
pop
in
push
repz
sbb
sub
jb
shlb
popa
xor
xor
inc
push
xchg
sbb
fmull
jg
jns
xor
les
fcomps
and
mov
icebp
sahf
pusha
lea
dec
mov
cmc
movsl
pop
mov
out
test
sub
sub
mov
rcrb
push
lahf
push
lcall
lret
in
enter
add
or
popf
mov
and
sub
mov
or
push
out
pop
inc
lods
push
mov
insb
inc
test
std
or
test
pop
loop
aam
enter
fidivl
xchg
pop
fisttpll
mov
sub
out
shll
dec
clc
in
xchg
dec
inc
imul
test
inc
inc
jbe
dec
adc
pop
xor
pop
flds
orb
pop
lock
mov
fstpl
add
sub
adc
es
sub
and
or
or
cltd
mov
lret
sahf
fsubrs
and
aaa
addl
xor
inc
push
inc
movsb
pop
pop
popa
add
notl
addr16
outsb
sub
movsl
cli
shrb
repz
ljmp
sbb
lds
xor
adc
jne
sar
fnop
shrb
mov
leave
ds
mov
add
scas
cmc
mov
fidivl
imul
add
sub
imul
fldt
and
push
ror
insl
or
mov
pop
and
icebp
aas
shl
outsb
jne
sub
jge
jge
or
cli
xchg
and
mov
push
push
clc
imul
jbe
push
adc
jno
lret
xchg
ja
sub
xchg
js
jae
std
xchg
add
cmp
ljmp
mov
nop
aad
ss
xchg
pushf
sbb
lret
les
sbb
lret
aaa
jmp
lcall
clc
stos
gs
and
pushf
jb
repnz
icebp
cwtl
sti
sar
lea
popa
pop
jae
push
pop
push
jnp
pop
in
stos
pushf
ds
notl
imul
enter
push
add
in
add
jl
add
test
inc
aam
push
sbb
jb
pop
jge
shl
out
xlat
cli
inc
inc
xor
in
je,pn
mov
mov
and
cmpb
mov
mov
add
pop
jne
ja
shrl
xchg
push
out
adc
je
jp
daa
stos
jl
jb
lret
mov
clc
mov
jl
jbe
xchg
adc
stos
imul
stos
in
sub
sbb
outsb
data16
popf
jbe
cmp
dec
sub
xor
sub
and
push
xchg
shlb
mov
jge
sub
and
icebp
sbb
loop
jg
pop
aas
gs
mov
cmp
lods
mov
in
fwait
bound
mov
mov
test
xchg
sbb
addl
repnz
mov
mov
jae
bound
aad
pop
xchg
jp
stos
push
push
fstpt
test
test
jl
mov
rcr
pop
push
mov
mov
inc
sbb
mov
push
in
arpl
xlat
dec
cmp
shll
cmp
jo
movsl
mov
aam
cmc
xor
sub
mov
sahf
jbe
pop
mov
cli
jp
add
jle
fninit
inc
cmp
movsb
rolb
sub
out
outsl
cmpl
or
fcoms
pop
lcall
cmp
popa
adcl
xor
out
inc
cli
hlt
fcomp
mov
mov
dec
push
sti
movsb
repz
pop
addr16
shll
jl
or
cmp
inc
mov
push
cmp
fwait
arpl
jbe
sahf
aad
or
repz
push
xorl
loope
add
sbb
stos
pop
repnz
inc
rorl
js
dec
sti
das
push
les
jno
jb
pop
pop
jne
push
and
inc
pop
cwtl
mov
test
or
inc
popf
insl
xchg
inc
pop
int
add
in
lock
pop
loopne
jge
xor
mov
or
repnz
add
popa
sub
jmp
sub
lcall
loopne
mov
rolb
adc
dec
sub
push
daa
xchg
cld
hlt
js
fs
xor
ja
jb,pn
inc
out
xor
outsb
mov
pop
sbb
push
pop
push
add
sti
es
add
sti
arpl
fiaddl
sbb
mov
cmp
jle
aaa
movsl
in
mov
lods
and
mov
movsb
push
mov
call
push
fs
xchg
push
imul
pusha
mov
pop
push
insl
mov
hlt
test
cmp
xor
adc
lcall
sti
test
cmp
cmp
jl
in
addr16
ja
cs
mov
fcmove
dec
fwait
aaa
divb
pop
frstor
xchg
mulb
mov
push
sahf
orb
aam
or
xor
inc
fwait
mov
xchg
daa
mov
outsl
scas
jp
lret
in
and
pushf
orl
into
push
daa
mov
and
cmc
in
sub
sub
sub
jge
and
imul
mov
mov
add
shl
and
pop
pop
sbb
sbb
ret
xchg
xor
shr
movsl
cmpsl
xchg
pop
ficoms
test
pop
inc
inc
outsb
das
mov
mov
push
cmp
fsubrp
mov
frstor
subl
movhps
out
shrl
inc
icebp
sub
xor
mov
jle
adc
sti
sbb
aas
push
xchg
adcb
jns
scas
fbld
fs
cmp
add
fisubrs
jo
jae
cmpb
cwtl
inc
xchg
pop
lds
jo
out
add
xchg
add
adc
sbb
mov
sbb
add
jne
xor
xor
and
orl
add
mov
jmp
mov
sub
into
add
mov
add
mov
hlt
cmp
fstps
lahf
jns
pop
and
jp
and
mov
sbbb
mov
inc
scas
jge
cltd
pop
xor
xchg
inc
scas
pusha
mov
jo
cmp
fs
dec
mov
icebp
push
inc
aaa
xchg
push
mov
pushf
inc
dec
mov
xlat
dec
jmp
testb
stc
jge
or
out
adc
loop
ja
cmpsb
or
push
inc
cmp
jo
daa
jmp
cmpl
or
out
mov
cmp
push
jne
lret
rorl
sub
pop
mov
inc
inc
cmp
xor
jne
nop
enter
rcl
cmp
fisubrs
lret
and
jnp
shrb
sub
dec
mov
sbb
and
jno
mov
push
fs
xchg
pop
xor
sub
sbb
aam
or
imul
xchg
outsb
push
imul
or
jns
inc
sbb
sub
cs
out
mov
add
gs
in
sbb
shl
lods
xchg
push
dec
pop
push
jnp
push
xchg
or
ror
push
sahf
outsb
lret
push
cwtl
test
xor
addl
push
lods
xor
push
sbb
outsl
divl
dec
sahf
mov
xlat
add
lret
fistps
outsl
aas
xchg
xor
or
sub
fidivl
mov
fidivl
cwtl
fs
adc
mov
pop
aad
aam
jmp
neg
sub
sub
inc
and
or
mov
outsb
or
push
jae
xchg
cltd
jae
bswap
sub
lock
mov
cltd
shrb
movsl
and
out
add
dec
mov
mov
outsl
scas
daa
mov
movsb
lret
mov
hlt
sub
sbb
xchg
jg
mov
push
repnz
pushf
pop
das
imul
jo
in
data16
dec
out
andl
jl
in
outsb
sub
std
popf
pop
xchg
imul
fidivs
ret
cmp
push
jecxz
aaa
loop
sbb
push
jge
pop
jp
mov
addb
js
aam
push
rol
arpl
adc
mov
outsb
orl
outsb
dec
xchg
imulb
mov
popf
fiaddl
movsb
test
mov
jl
inc
lock
fldl
xchg
xor
sub
pop
aas
mov
into
mov
xor
inc
or
test
xchg
mov
or
out
push
aaa
stc
mov
dec
mov
mov
sub
push
and
pop
fildl
sbb
imul
cmpsl
into
dec
mov
mov
sub
data16
or
pop
cli
jo
fldcw
cmp
mov
test
test
or
inc
icebp
and
push
xchg
sbb
scas
arpl
ss
cmp
jae
inc
xor
sbb
ja
cld
or
loop
sahf
pop
hlt
cli
pop
insl
pusha
pop
push
jp
pushf
sbb
stc
push
xchg
mov
sub
fsubrl
fldenv
aaa
ret
int3
mov
shrb
scas
pop
sbb
stos
sub
daa
sbb
pusha
add
pop
pop
pop
mov
cwtl
mov
stos
adc
dec
repnz
pop
and
mov
je
sbb
sub
sub
adc
jp
je
insl
lcall
sub
xchg
pop
lds
loop
sub
and
jb
mov
int
cs
out
xchg
push
test
clc
aas
popf
push
insb
cmp
aaa
out
sbb
push
xor
xchg
stos
js
inc
aam
daa
subl
adc
nop
push
mov
stos
movsl
push
mov
pushf
icebp
push
insb
or
movsb
test
lcall
sub
adc
insl
mov
outsl
jecxz
cmpb
sub
or
cli
add
je
ficomps
mov
add
xor
jmp
movsb
jge
repnz
dec
adc
into
not
testb
dec
call
ret
daa
pop
push
sbb
dec
xor
in
or
mov
pop
push
loopne
repz
fildll
mov
cwtl
hlt
pop
pop
sub
or
add
xchg
cmp
in
mov
rolb
pusha
cmp
insb
call
xchg
jae
imul
insl
jbe
pop
xchg
and
push
lret
dec
nop
sbb
sar
mov
lds
das
xor
mov
insb
jg
adc
xor
mov
fiadds
pushf
inc
sbb
inc
rcrb
add
dec
inc
mov
mov
in
cmc
or
xchg
int
jbe
mov
pop
test
jg
jne
jge
inc
inc
dec
icebp
or
push
cmpsb
gs
inc
cmpb
add
iret
lods
addb
mov
clc
pop
in
fyl2xp1
xchg
hlt
movsl
xchg
xchg
int3
mov
lea
mov
ss
leave
push
in
pop
movsb
push
pop
cmpsb
js
cli
aas
cld
add
fstps
rcr
in
or
stc
mov
sbb
jae
jno
dec
pop
cwtl
adc
pop
sub
neg
shrl
mov
pop
xchg
dec
or
std
mov
js
push
fiadds
pop
or
cs
outsb
divb
out
sub
fsubrl
sub
mov
mov
outsl
movsb
xor
push
lcall
fsts
or
push
lea
xchg
push
or
andl
and
mov
cli
ficomps
outsb
loope
mov
jns
in
and
mov
in
lret
sub
std
jl
dec
call
imul
js
adc
ret
inc
setae
stos
add
aas
cmp
cld
or
add
lahf
call
stos
int
hlt
test
push
adc
and
xchg
mov
iret
xor
bound
mov
pop
pushf
jns
ljmp
lcall
jmp
sub
push
shl
imul
adcl
into
mov
jo
ret
or
mov
dec
sbb
and
and
dec
and
mov
mulb
stos
fimuls
inc
mov
mov
jecxz
mov
sbb
cmp
shrb
psllw
outsl
sub
dec
mov
dec
stos
dec
jmp
int
sub
push
xor
sub
test
add
mov
inc
pop
repz
xor
jne
lea
add
test
ret
dec
ret
and
mov
inc
xchg
pop
aad
divb
ds
gs
mov
pop
jno
cmp
mov
das
aaa
lock
mov
or
xchg
outsb
mov
xchg
shrl
ss
stos
sub
adc
test
cli
mov
lods
xor
fisttpl
enter
lcall
pushf
jmp
mov
adc
test
lock
outsb
inc
dec
repz
lcall
ss
stos
int
cld
jg
out
fisubl
xor
aaa
int3
cmp
push
bnd
in
push
jle
pop
mul
mov
jo
aam
scas
fisttps
jnp
dec
adc
pop
xor
cmc
sahf
incb
gs
repnz
int
push
adcb
js
cmp
or
mov
push
fstl
gs
jle
add
lcall
pop
lock
sub
mov
or
add
scas
int3
or
jg
addl
mov
inc
xchg
add
rcll
incl
mov
lea
rcrb
pop
pop
cmc
mov
sahf
mov
insl
fucomp
mov
jo
outsb
push
xor
test
add
and
xchg
cmp
jo
test
xor
shll
punpckldq
leave
sbb
cmpsl
dec
scas
inc
jmp
cmc
push
sub
mov
pop
fldl
mov
cli
mov
cmp
mov
cmp
dec
shr
jge
clc
ret
xor
jae
sub
add
sti
enter
loop
out
push
movb
mov
lret
xchg
cmpsl
outsl
jecxz
dec
or
cmp
cmp
xor
daa
add
jns
pop
shll
sbb
mov
sarl
fsts
lods
bt
mov
adc
mov
mov
mov
or
insb
or
pop
mov
es
jae
pop
dec
jp
mov
add
repz
in
mov
cmp
data16
stos
imul
lret
mov
enter
fs
mov
stc
cs
or
mov
cmc
lods
loopne
inc
test
fwait
mov
mov
pop
mov
sbb
cmp
lock
out
mov
jl
add
mov
mov
cmpsb
push
test
popa
sbb
push
pop
dec
int
pusha
inc
daa
xchg
adc
movsb
add
xchg
loope
pop
clc
shlb
push
lret
stos
in
and
pop
xor
out
adc
sub
push
cmpsb
aaa
mov
push
les
popa
in
xchg
mov
jo
int
lret
push
sti
popa
mov
add
push
xchg
push
inc
es
in
inc
pop
into
cmp
pop
jae
mov
sub
or
inc
pop
mov
lds
aam
push
adc
inc
lods
repz
cmpsl
fbld
aaa
push
pop
add
cmp
jge
loope
dec
cli
push
dec
inc
jecxz
adc
fsubrs
fwait
mov
aas
sbb
adc
rcrl
mov
jae
jge
pop
iret
cltd
inc
enter
insb
ror
push
out
xor
in
push
into
push
pushf
or
sbb
pop
pop
daa
lea
out
push
ja
lods
dec
xchg
and
cltd
rolb
mov
clc
sti
or
imul
cmc
push
stos
subb
adc
aam
scas
mov
push
and
jbe
addr16
push
sbb
lock
adc
xor
lret
jle
and
xchg
xor
mov
fldln2
faddl
push
rolb
aaa
mov
loop
idivb
xchg
loope
mov
mov
xchg
mov
outsb
xchg
mov
test
fildll
shrb
lcall
mov
cmp
mov
test
insl
lock
pop
jne
mov
outsl
ljmp
mov
jge
dec
jnp
mov
cltd
ss
shr
mov
les
cmc
cmp
push
add
fnstcw
scas
xor
mov
aas
push
negl
jbe
clc
mov
insb
std
into
enter
adc
push
sub
pop
cmp
dec
sarb
pop
inc
je
pop
cmp
mov
test
xchg
pop
adc
arpl
push
or
adc
xchg
lahf
cltd
mov
dec
fsubl
shlb
and
mov
pushl
sub
lods
pop
jg
jo
xchg
pusha
mov
out
inc
cmp
cltd
mov
ljmp
and
mov
jl
xchg
xchg
sub
mov
mov
inc
mov
aad
add
popa
xor
adc
and
popf
add
test
inc
pop
mov
andl
icebp
jge
fs
jns
dec
jl
in
mov
push
and
bswap
daa
pop
in
lcall
test
xchg
arpl
mov
daa
cmp
cmpsb
push
pop
sub
insb
pop
pop
push
ret
mov
mov
ret
imul
sbb
sbb
daa
xchg
into
mov
lods
aad
add
into
mov
lret
cwtl
xchg
sbb
mov
out
test
mov
jnp
lea
std
mov
add
adc
xlat
xor
sahf
hlt
or
dec
mov
pop
mov
jg
mov
add
addr16
and
cli
mov
xchg
js
cmpsl
jl
sbb
loop
jmp
pop
ds
xor
push
add
xor
sbb
daa
mov
push
loop
xlat
or
cwtl
mov
dec
xchg
loop
inc
sbb
inc
xchg
mov
cmc
cmp
inc
lret
lds
or
mov
ss
arpl
cld
sahf
cli
sbb
cmp
xor
insb
das
xor
pushl
adc
adc
mov
and
popa
shll
es
adc
negl
sarb
push
jae
mov
mov
frstor
xchg
daa
xchg
aas
add
imul
dec
jns
test
pop
ss
in
mov
xor
mov
xlat
cmp
mov
xor
iret
mov
test
pop
sbb
loop
and
inc
jle
cmp
addb
out
orb
das
push
inc
xor
ljmp
ficoms
icebp
es
xor
outsb
inc
repz
inc
add
jo
cmpl
sub
mov
and
fcompl
add
into
out
mov
or
mov
sarl
sub
mov
mov
mov
lods
pushf
fstl
adcl
pop
push
in
dec
adc
out
pop
xchg
cmpl
shll
fld
cwtl
and
fwait
sbb
movsb
in
test
push
jge
aam
loop
cwtl
sbb
push
aam
xor
cmp
pop
in
out
jae
int
cmpsl
aaa
mov
xchg
scas
adc
insl
out
mov
sbb
clc
inc
mov
les
adc
hlt
inc
shlb
jmp
push
pop
fs
push
mov
fadds
into
mov
sub
stc
pop
pop
mov
cmpsl
lea
fisttps
mov
jae
scas
add
push
or
icebp
push
lea
adc
das
in
mov
sub
leave
sar
xlat
xlat
jo
add
pop
push
push
or
scas
pushf
loop
and
inc
js
push
dec
ret
mov
not
in
pop
pop
in
jo
adc
daa
mov
cld
mov
mov
mov
xlat
jo
xchg
mov
rorb
mov
mov
jno
sub
sub
les
pusha
fucomip
or
push
inc
push
adc
cmpsb
jbe
jno
loopne
jae
cmpsb
pop
call
insl
inc
add
lahf
xor
xchg
bnd
mov
repz
mov
or
ret
lret
xor
xchg
jmp
sub
jno
mov
bound
out
pop
sub
mov
cmp
and
mov
mov
fucomip
and
shr
mov
bound
js
and
adc
cmp
xor
mov
push
imul
shlb
loopne
push
lods
mov
and
mov
pushf
or
add
adc
mov
xlat
loope
push
cmpb
loop
inc
cli
dec
fs
add
sahf
outsb
fsubl
inc
xchg
jno
cwtl
xor
sub
xorb
cltd
mov
add
inc
dec
xchg
in
adcb
jmp
add
mov
push
sti
sbb
adc
cmp
dec
mov
xchg
clc
mov
in
mov
pop
lahf
enter
clc
into
mov
ret
dec
adc
or
xchg
mov
rcrl
fs
adc
jp
mov
or
inc
inc
lcall
jp
sarb
fadds
ret
lock
test
push
mov
aam
jp
and
pushf
mov
or
sbb
nop
loopne
push
loop
cmp
cmp
popf
dec
sbb
and
movsb
imul
dec
mov
adc
pop
fstpl
divl
mov
cmp
jge
loop
sub
fbstp
dec
mov
jnp
push
xor
jp
pop
inc
arpl
int3
mov
cmpsb
add
lcall
popf
xor
lahf
scas
out
adc
and
ds
imul
sahf
mov
lcall
out
or
inc
imul
pop
adcl
mov
mov
and
dec
loopne
data16
pop
mov
cmc
mulb
jne
imul
pop
adc
push
adc
sub
dec
pop
and
call
les
mov
jmp
mov
jno
sub
sti
adc
pop
aaa
sahf
mov
mov
cmc
mov
in
xor
data16
push
cmpsb
cmpsb
cld
adc
in
pop
and
xchg
fimuls
stc
bound
mov
and
xlat
shll
mov
add
mov
pop
enter
in
add
inc
bound
sub
add
vmovapd
data16
scas
lea
cmp
push
dec
add
icebp
push
add
dec
leave
xchg
inc
rcl
ret
ja
mov
xchg
into
into
mov
or
xchg
jno
mov
in
fdivl
mov
stos
movsl
fnstenv
sti
test
lods
lret
and
cmp
bound
repnz
sub
and
push
out
mov
icebp
mov
xchg
adc
adc
inc
push
dec
sbb
mov
add
jmp
dec
and
cmpsl
mov
imul
sbb
ret
frstor
sti
incl
xchg
adcb
stos
xor
mov
cmc
sub
push
cmp
ss
fsubs
push
cmp
nop
and
mov
hlt
lds
or
fstpl
shll
mov
mov
adc
cmp
push
jg
lods
or
lret
pop
sbb
mov
add
push
pushf
les
leave
mov
inc
roll
inc
mov
mov
pop
sub
jp
andl
int
mov
lods
in
rcrl
dec
jae
popa
subl
xchg
dec
in
pop
and
clc
mov
mov
das
pop
sbbb
in
cmp
pop
mov
xlat
out
sub
sub
mov
mov
movl
sub
js
xor
mov
iret
cmc
cmp
mov
mov
xchg
dec
fdiv
in
push
insb
ja
xor
mov
pop
mov
inc
cmp
push
push
cld
and
adc
xor
nopl
add
xor
dec
xor
int3
xor
js
adc
mov
adc
cmp
push
mov
loopne
dec
xlat
enter
cwtl
clc
mov
pop
jo
pushf
lods
xchg
subl
push
call
fnstenv
mov
add
inc
loop
hlt
rcrl
out
cmpsl
pop
arpl
jmp
ss
sarb
shll
rorl
arpl
push
mov
in
mov
dec
pop
aad
cltd
scas
pop
in
outsl
mov
jne
stc
adc
sahf
push
jae
out
ret
pop
lahf
lahf
jno
dec
adc
push
sbb
jns
cwtl
test
add
pop
cwtl
inc
cmc
dec
mov
cwtl
sub
and
add
mov
je
fwait
push
clc
les
inc
or
test
sahf
sub
test
rcrb
add
push
aam
lahf
mov
sub
jg
out
or
in
outsb
xor
push
or
test
out
flds
cmp
xchg
sub
xchg
outsl
outsl
paddb
ficoml
cmp
or
shll
stos
fwait
adc
or
sub
pop
add
data16
lahf
xchg
add
movsb
lock
cmc
pop
gs
sbb
mov
test
cmpsb
in
sahf
cmp
pop
movsb
rdmsr
movsb
insb
jle
popf
mov
xor
xchg
sbb
xlat
mov
pusha
mov
scas
adc
or
sub
pop
sbbb
or
loop
push
cmpsl
mov
in
fstpt
dec
lea
and
push
fildl
in
scas
fdiv
cmc
cmp
popa
sub
aad
xor
inc
adc
inc
dec
roll
cmp
jp
das
out
out
outsb
in
add
xchg
mov
js
push
lahf
xchg
iret
call
mov
stos
mov
aas
arpl
xchg
sbb
leave
xor
int
cmp
xchg
jmp
negl
fidivrs
les
jo
scas
jno
or
stc
push
test
insb
in
fcomp
sbb
dec
lods
in
xchg
fstpl
cmpsl
mov
sbb
sbb
mov
movsb
xchg
push
jb
cwtl
push
inc
loopne
jp
push
sbb
icebp
imul
xchg
divl
mov
add
daa
cld
xor
or
inc
sbb
mov
inc
jmp
sbb
pop
xlat
addr16
lds
mov
mov
pop
push
push
aaa
ss
aam
jecxz
scas
icebp
dec
cmpsb
pop
js
loopne
and
and
lock
sbb
js
pushf
push
cmovnp
push
daa
out
or
mov
sub
fs
push
push
movl
add
mov
jo
test
bnd
jne
ds
cltd
pop
fwait
jle
sbb
stos
ret
fidivl
pop
popf
dec
xor
cmp
fsubp
dec
xchg
adc
jge,pn
cli
sbb
sbbb
pop
cmp
jl
scas
mov
jmp
mov
and
repz
pusha
sub
insb
or
test
das
loopne
pop
cwtl
es
xchg
mov
sub
inc
add
ret
sub
mov
mov
mov
cld
dec
xor
add
enter
fcoms
rol
bound
inc
inc
cmp
pop
out
enter
ret
lcall
sub
nop
cltd
mov
pop
fwait
fs
xchg
fwait
sbb
outsb
sub
sbb
call
mulb
incb
dec
jbe
push
stc
scas
xor
dec
push
inc
imul
mov
inc
mov
imul
shlb
stos
das
sub
cmp
sti
pop
jmp
xchg
loop
sub
xchg
idivl
cmc
xchg
and
dec
mov
pop
and
ds
mov
push
pop
mov
test
jg
xchg
popf
mov
sahf
sbb
inc
out
repz
pop
ja
adc
and
sti
push
mov
fisttpll
adc
add
push
cs
loopne
mov
xchg
aam
cmp
push
aam
lahf
adc
inc
fs
jp
pop
push
push
mov
xlat
nop
pop
xchg
popa
mov
sbb
jecxz
pushf
mov
xlat
mov
enter
cs
insb
pop
icebp
mov
arpl
fs
mov
cmpsb
cmp
lods
aam
push
fwait
lcall
or
push
loope
add
daa
jg
outsb
lock
sbbb
cmp
jmp
dec
jmp
push
dec
movsl
stos
xor
or
ja
pop
jbe
mov
mov
lahf
pop
mov
push
pop
inc
dec
loope
cltd
aas
mov
popa
xchg
pusha
inc
or
mov
mov
test
inc
sub
xor
pop
pop
ss
jae
dec
orl
movsb
pop
xlat
imul
cmp
mov
sahf
outsb
lea
aaa
es
dec
jb
das
clc
dec
dec
sub
mov
dec
call
mov
sahf
loop
mov
lret
lods
in
mov
aam
jge
mov
mov
add
mov
lret
mov
jae
and
adcb
pop
cs
or
ret
call
rcr
ret
and
inc
or
add
xchg
jne
inc
adc
test
jno
dec
clc
fxch
loop
loope
loopne
lahf
sbb
sti
xchg
stos
and
xlat
stos
cmp
push
mov
xorl
mov
jnp
or
das
insl
rcrl
repnz
adc
add
rorl
pushf
vpcmpeqb
sub
mov
iret
lods
adc
jle
mulb
mov
mov
movsl
mov
ret
aam
mov
roll
jl
pushf
test
cmpsl
dec
xchg
loop
cmp
popf
cs
movsl
fxch
mov
insb
icebp
repnz
fisubrs
in
call
sub
pusha
repnz
daa
fcoml
dec
inc
aas
cs
xlat
sahf
push
and
xchg
pop
int3
lock
mov
popf
fidivs
subb
fnstsw
add
sti
sbb
outsl
adc
pop
adc
fldt
mov
shlb
jbe
mov
aam
xor
fstl
mov
dec
cmp
jmp
add
scas
jl
sub
testb
sub
cwtl
mov
cmp
adc
or
iret
icebp
je
inc
xchg
fists
sarl
stos
and
fwait
in
mov
cs
aam
out
nop
mov
clc
push
push
add
push
aam
in
lcall
jge
fcom
jo
shrl
xor
pop
cmpsb
xor
leave
mov
dec
mov
shr
push
dec
icebp
leave
sbb
sub
mov
cmc
ret
fs
jecxz
aas
fcmovnu
fdivl
int
movsb
dec
inc
sbb
cmp
jmp
fiadds
ljmp
mov
adc
movsb
lahf
cmp
gs
mov
es
cltd
mov
sbb
or
shrl
call
iret
cmpsb
test
lock
jns
mov
cmp
lahf
push
xor
pop
push
push
jne
jno
les
add
lods
adc
pop
mov
xchg
or
xchg
sbb
add
push
jnp
repz
inc
mov
les
into
add
adc
jmp
add
or
mov
call
jb
orps
shll
gs
mov
fsubs
lods
and
xchg
test
cmp
sbb
fadds
xor
cmpsb
in
add
adc
xchg
test
xor
jb
fwait
pop
inc
dec
scas
jns
lods
ss
cmpsl
jg
out
push
mov
mov
adc
and
stos
inc
pop
or
scas
loop
in
lea
xor
jl
mov
fbstp
xor
or
jns
sub
jle
mov
clc
push
stos
ljmp
cmp
inc
icebp
mov
fnstsw
sbb
sbbl
testl
hlt
ds
adc
jns
lds
mov
cmp
and
and
jl
movaps
xor
std
xchg
sub
pop
into
idivb
or
das
adcl
jg
mov
neg
pop
mov
mov
leave
dec
mov
movsl
and
clc
and
testb
insb
or
cmp
ljmp
inc
xchg
jne
fistpll
leave
inc
xor
inc
dec
ljmp
sub
addb
push
sbb
xor
out
push
add
inc
push
mov
cmp
lret
cmp
insb
call
push
fcompl
dec
mov
add
mov
or
sarb
stc
mov
dec
out
inc
sbb
aam
cli
les
sub
shrl
push
jle
inc
stos
inc
sub
scas
sbb
leave
dec
add
mov
shl
mov
pushf
cmc
jb
jg
push
call
push
rcl
or
and
shlb
lret
jg
loopne
mov
pushf
xor
jb
nop
cltd
xchg
es
sub
mov
sub
sub
stos
scas
cs
rol
pop
push
xchg
mov
push
repnz
jmp
mov
jmp
shlb
xor
jne
pop
lock
and
mov
lds
outsl
movsl
out
fs
mov
push
push
test
fwait
xchg
repz
fimull
adc
and
shlb
out
out
push
lret
mov
sbb
push
inc
out
in
jo
fisubrs
xchg
xchg
insb
sbb
dec
insl
lret
xchg
pop
add
ja
cld
lret
stos
outsl
xchg
pop
cli
xor
outsb
in
adcb
mov
mov
pop
orl
cmp
aad
push
test
cmp
xchg
iret
xchg
scas
out
sbb
loop
icebp
hlt
insb
mov
jecxz
test
pop
xchg
lret
mov
lret
xchg
push
jno
sbbb
test
loop
scas
push
shr
leave
flds
ss
inc
push
icebp
idiv
hlt
and
fsubs
inc
bound
push
xchg
push
das
pop
loopne
jb
js
cmp
bound
adc
out
xor
idivb
inc
mov
xchg
add
jmp
fisttpll
fcoml
filds
lea
not
pop
cmp
inc
sub
dec
dec
cmp
imul
push
or
inc
push
pop
sbb
inc
pop
sbb
xchg
setnp
inc
pop
dec
add
rorb
repz
adc
mov
mov
loop
or
jae
popf
add
ds
dec
mov
cmp
rcrb
xchg
sub
or
inc
pop
sub
jne
add
loop
mov
mov
lahf
in
add
push
dec
lret
mov
jle
push
xchg
cli
add
stc
mov
mov
repz
pop
inc
cmp
sub
jp
xor
cmp
std
inc
enter
inc
sbbl
movsb
in
adc
outsb
dec
ror
incb
movsl
dec
hlt
test
push
pop
jnp
adc
dec
sahf
mov
xchg
insb
int3
lret
rorb
push
add
lds
jge
pop
jo
in
ret
push
add
dec
xor
mov
sbb
subl
xchg
xlat
inc
icebp
gs
adc
lock
fisubs
pop
loopew
fisubrs
add
mov
cmp
aas
pop
jmp
jb
lods
jnp
rorl
insb
jo
shlb
popa
push
mov
ds
std
aad
mov
cmpsb
sbb
cmp
cmpsl
and
pop
je
mov
cmp
out
jg
lock
jle
mov
lcall
add
adc
jmp
mov
scas
mov
jmp
add
push
mov
pop
adc
and
es
pop
mov
cmp
loope
lds
push
xchg
lret
add
loope
inc
out
into
std
jg
aam
aam
push
cmc
xor
hlt
xchg
mov
mov
mov
imul
cmp
sbb
fnstsw
mov
mov
pop
adc
inc
pop
push
stc
push
mov
fmull
and
ds
xor
loopne
loop
jae
fsubp
inc
rolb
dec
testl
xchg
bound
push
push
mov
and
int3
adc
je
in
mov
or
and
jbe
dec
jmp
bound
sti
jg
inc
jno
push
popa
das
popf
push
sbb
test
cmp
xchg
dec
aam
or
out
mov
add
fsubr
imul
inc
push
cmp
jp
lds
mov
pushf
mov
icebp
lea
shl
test
in
les
mov
mov
in
and
es
or
jbe
cld
jae
cmp
out
lret
or
aad
mov
pop
sub
sarl
pop
gs
jp
enter
subl
pop
hlt
jmp
jmp
xchg
outsb
jb
lds
dec
insl
rcll
adc
dec
fs
scas
mov
in
sub
jp
mov
mov
ret
adc
push
dec
mov
jle
in
xchg
sbb
sub
ret
cmp
adc
scas
jbe
outsl
cmp
fidivrs
int
outsb
bound
mov
sub
jno
iret
inc
fwait
icebp
lock
add
pop
inc
inc
pushl
xchg
mov
stos
rorl
jo
and
lret
data16
mov
iret
divb
pop
loopne
js
sbb
bound
scas
loope
xchg
inc
pop
cwtl
pop
icebp
movsl
sbbb
pop
icebp
out
ja
shll
dec
push
lods
cld
hlt
loope
lods
or
or
mov
stos
xchg
push
ljmp
jge
xchg
mov
sub
arpl
lods
mov
cltd
dec
lds
pop
push
adc
adc
lcall
jge
mov
test
add
test
shlb
sub
scas
sbb
dec
sub
dec
je
jo
inc
push
jns
push
pop
and
xor
inc
mov
std
add
fcoms
adc
sahf
xor
call
push
sti
fbld
std
stos
in
repz
sbb
inc
inc
push
push
rorl
ja
or
mov
jo
sub
xorl
fldenv
fwait
add
iret
sub
sub
or
lods
xchg
jmp
push
stos
testl
adc
adc
jne
leave
stos
and
cld
sub
push
and
xchg
mov
je
lock
push
mov
rcll
fsubrs
ficompl
orl
insb
or
and
xchg
lcall
sub
sbb
inc
cli
jno
std
mov
add
xchg
xor
jge
addl
adc
xchg
pop
adcb
dec
inc
cmp
and
jns
xchg
pop
push
shrl
or
pop
pop
shll
xchg
sbb
mov
xor
loop
jp
cmpsb
and
cmpsl
in
jge
sbb
repz
imul
orb
jle
xchg
xchg
xchg
out
or
add
inc
mov
adc
loop
fcoms
dec
test
xchg
or
test
std
jnp
aad
push
lods
or
hlt
jbe
cs
jno
add
and
shrl
sub
sub
test
pop
ret
cmp
add
xor
mov
jae
lock
adc
andb
dec
pop
pop
in
das
fmulp
xor
dec
push
enter
adc
jl
and
push
or
call
mov
aad
pushl
lods
adc
ds
inc
dec
ja
jp
es
outsb
xor
ret
addr16
dec
push
outsb
mov
cwtl
jbe
test
xor
adc
inc
jp
sub
ret
xor
mov
stos
adc
push
adc
xor
jno
xchg
cmpsl
out
sti
sbb
cmp
xchg
sbb
pop
imul
lret
mov
add
hlt
push
leave
pop
call
mov
icebp
xlat
push
jg
les
adc
sbb
mov
push
inc
fnstcw
xlat
mov
bound
ret
mull
iret
cld
rcrl
insb
pop
mov
jecxz
sub
jmp
xchg
lods
mov
jb
fmull
mov
in
cmp
xlat
mov
rcrl
jg
or
jmp
jbe
mov
pop
mov
sbb
mov
sbb
int3
jmp
es
xor
mov
mov
mov
loopne
je
pop
dec
jmp
ss
scas
mov
add
xchg
lods
rcrl
nop
dec
addl
xlat
adc
dec
xchg
mov
cltd
inc
fildl
and
lods
aam
insb
xchg
fistl
cs
push
sahf
cmp
addr16
cmc
rcll
sbb
cmpsl
adc
mov
mov
mov
inc
scas
mov
out
lock
mov
jbe
push
mov
mov
sub
pop
mov
push
inc
ret
xchg
out
je
dec
in
jp
cwtl
popa
clc
es
mov
sub
loopne
sti
and
jns
loop
cmc
dec
arpl
loope
cmpsl
inc
pop
repnz
jl
sbb
mov
inc
pop
fdiv
xchg
and
sbb
jle
mov
hlt
push
pop
mov
inc
xchg
stos
ljmp
insb
in
xor
cmp
xchg
jne
cld
js
push
or
cmpsl
cli
pop
jae
cmp
jmp
in
cli
dec
addr16
js
gs
decl
or
jns
jbe
insl
xor
repnz
out
jg
mov
xor
das
in
push
jno
ret
pmaddwd
sbbl
push
xor
add
mov
jecxz
lods
push
adc
in
xchg
pop
xchg
popf
jb
sbb
push
sti
repnz
sub
movsl
jp
mul
repnz
movsl
cmp
hlt
loope
sub
mov
or
jmp
sbb
rcl
push
and
incb
fisttps
cmp
sbb
xor
sub
mov
inc
test
pop
xchg
mov
mov
lret
lahf
outsl
mov
gs
jmp
and
push
pop
popa
jge
lahf
out
inc
pushf
sub
ret
je
out
push
adc
jbe
or
cmpsb
mov
das
push
adc
movsb
adc
mov
pusha
das
dec
add
xor
insb
push
dec
ret
push
push
cmp
lahf
mov
sbb
mov
scas
fwait
inc
mov
xor
dec
int3
add
sahf
fs
xor
mov
sahf
jne
push
clc
ss
add
cmpsb
jns
cmp
xor
dec
cmc
xor
mov
enter
and
adc
cmc
je
push
ror
movsb
idivl
dec
les
sub
jnp
adc
jo
mov
cs
nop
mov
int3
out
pop
ret
sbb
mov
gs
lea
in
gs
ret
cltd
repnz
pop
aaa
inc
inc
hlt
mov
xchg
cmpl
mov
mov
jne
call
xor
adcl
test
mov
es
or
daa
insl
test
scas
ss
ds
rcrl
mov
xlat
pusha
and
je
or
pop
mov
push
rolb
bound
jmp
shll
inc
ds
mov
subl
or
pop
cld
out
and
fcmovbe
dec
cld
test
pushf
das
js
xorl
nop
cwtl
mov
mov
sbb
rcr
movsl
mov
fs
out
pop
mov
out
rcll
mov
xor
fwait
mov
or
push
dec
repz
mov
mov
cwtl
cmc
lods
jecxz
pop
inc
xor
xchg
loope
into
mov
cmovae
mov
adc
jae
xor
adc
mov
movsl
stc
mov
lahf
xchg
xor
imul
sub
daa
outsl
and
stos
jbe
mov
je
sbb
pusha
int3
jbe
repnz
inc
lods
xor
sbb
or
or
sub
jg
sub
inc
jns
out
sub
fldenv
jle
gs
xor
push
cmpsb
les
dec
pop
stc
or
test
inc
sub
cmp
movsl
push
mov
rep
jae
ret
popf
ret
stos
add
and
andl
movzbl
call
push
pop
add
push
lahf
jge
sub
dec
or
leave
xor
inc
insb
lret
xor
or
dec
add
mov
mov
popf
ljmp
pop
jge
in
lea
push
mov
push
or
std
push
xor
cltd
cwtl
insl
fcompl
add
jns
in
add
call
cs
adc
outsl
icebp
mov
fcom
daa
cmp
xlat
insb
icebp
sub
outsw
dec
jo
mov
fnsave
sbb
data16
lds
out
or
lcall
imul
mov
in
mov
call
ffree
in
inc
jbe
jmp
shrb
inc
sbb
mov
out
pushf
lret
sub
enter
push
scas
sbb
cmp
mov
jmp
pushf
roll
movsb
dec
stc
and
and
lret
popf
mov
iret
js
std
dec
sub
sahf
cmp
int3
test
ror
cld
js
daa
repz
scas
pop
popl
cmp
sub
sbb
pushf
mov
jno
hlt
test
cmp
inc
test
pushf
add
cwtl
push
jnp
and
xlat
mov
divl
cmp
in
xor
adc
xor
jo
dec
in
lahf
aaa
aam
clc
stos
shlb
lcall
add
xor
mov
lret
mov
mov
shrb
fdivrl
stos
inc
add
imul
popa
pop
pop
mov
add
xchg
lret
push
stos
mov
sbb
je
xor
dec
dec
lea
ljmp
inc
loope
call
leave
insl
pop
inc
mov
roll
and
dec
add
ljmp
cmp
repz
add
int3
fucomp
test
cmp
cmpsb
arpl
es
fs
push
jns
adc
xor
adc
pop
out
fcomi
scas
sub
and
insb
sub
aam
push
mov
outsb
inc
xor
mov
addr16
data16
out
imul
mov
jg
dec
push
xor
adc
mov
int
pop
fisubs
mov
fistpl
cmp
insl
cwtl
mov
cltd
push
jge
stc
push
mov
mov
jnp
ret
xor
test
pop
sbb
repnz
aas
and
pop
cltd
jl
xchg
inc
lahf
pop
ja
scas
dec
imul
shlb
pop
pusha
xchg
jecxz
xor
mov
out
loope
sbb
fisttpll
iret
hlt
mov
lods
mov
add
sbb
jno
ret
or
imul
xchg
pusha
cmc
cs
loope
mov
and
jo
sub
imul
mov
pop
jp
cmp
jmp
ret
xchg
pop
cmc
notb
fisubrl
dec
xchg
jl
popf
testl
sbb
clc
je
xchg
adc
insl
mov
in
mov
sub
cmp
fs
push
add
cld
inc
jp
mov
aad
adc
cmp
push
adc
push
das
lods
int3
lea
push
fs
sbb
aad
inc
sbb
outsb
cltd
inc
and
fs
mov
cmp
mov
es
adc
xor
pop
xchg
daa
ds
cmp
or
inc
jae
dec
inc
add
xor
lret
mov
out
call
mov
sahf
and
cmp
adc
dec
cmpsb
roll
loope
xchg
add
roll
fidivs
imul
hlt
dec
sti
push
das
pushaw
testl
lods
jmp
lret
push
fadd
aad
xchg
jo
jle
lods
mov
dec
fisubrl
jae
sub
idivb
ficoml
lock
mov
dec
lcall
sbb
pop
jae
cmpsl
jl
mov
mov
cmp
xchg
mov
adc
imul
outsl
cli
fwait
push
std
dec
cs
addr16
xor
push
mov
fcmovbe
xlat
fidivl
imul
mov
mov
or
int3
or
xor
ja
insb
sahf
push
mov
xchg
pop
xchg
wrmsr
jnp
push
pusha
rorb
iret
movsl
and
push
xor
movsl
jle
mov
push
test
push
jl
ret
mov
mov
inc
shlb
mov
xchg
inc
scas
lret
xor
sub
xchg
mov
adc
push
inc
or
sbb
scas
xchg
aaa
adc
push
test
pop
push
adc
adc
xchg
add
mov
and
push
push
xor
fs
add
dec
xchg
sub
jl
mov
cli
mov
mov
push
out
sbbb
lcall
inc
test
mov
push
outsb
jne
outsb
or
push
mov
cs
mov
test
mov
jp
sub
dec
xchg
or
je
sub
jg
jae
fadd
push
dec
loop
out
ds
pop
jl
outsl
inc
int
xchg
cmp
fmull
jnp
xchg
das
xor
cmpsl
sbb
xchg
out
stos
add
ret
mov
lods
or
test
rclb
repz
frstor
sbb
cmp
aad
shll
ja
jecxz
mov
lds
lahf
mov
fnsave
sub
pushf
idivl
jne
mov
stos
ror
mov
xor
mov
inc
and
pop
aam
rorl
jbe
cmpsb
push
mov
cmp
inc
js
jbe
sbb
jecxz
mov
jo
out
popf
sbb
pop
cmpsl
out
mov
push
pop
or
fistpll
shl
and
leave
or
in
addr16
daa
pushl
data16
in
bound
addr16
dec
cmp
pop
pop
shll
aas
in
out
dec
ljmp
mov
cld
leave
out
adc
pushf
sub
mov
push
mov
stos
xchg
mov
test
lea
pop
ret
dec
add
add
push
push
push
outsl
js
scas
adc
push
into
imul
push
call
loopne
push
jge
fldt
adc
pop
inc
daa
jecxz
std
jmp
test
or
lods
add
sarb
mov
cmpsb
in
pop
imul
out
movsl
dec
mov
into
movsb
dec
or
inc
jbe
test
dec
das
je
jae
inc
test
cmp
ja
mov
cmp
lret
mov
xor
sahf
lock
push
outsl
daa
jecxz
jb
mov
loopne
fisubs
popa
jbe
xchg
fwait
adc
pop
jecxz
jecxz
loope
incl
cmp
jbe
es
cmc
jl
cmp
and
in
mov
js
jl
popa
pushf
stos
aam
or
stos
add
inc
insb
xchg
xor
xor
aad
push
push
and
movsl
push
mov
inc
loop
enter
mov
call
lret
aaa
sahf
addb
addr16
lret
cmp
stc
xorl
in
and
mov
add
out
or
movsl
inc
xor
shll
and
aas
mov
and
push
push
stos
loope
pop
xchg
in
out
sbb
inc
out
dec
in
fmulp
sti
je
dec
jecxz
pop
shll
mov
pop
fldl
push
push
mov
xor
jnp
imul
imul
fldl
iret
inc
xchg
sub
je
mov
subl
and
dec
lods
cli
sub
jo
imul
rcrb
mov
scas
pop
push
and
addr16
cmp
cmp
lods
out
ja
jle
cs
sub
cmp
cmp
ljmp
stos
and
pop
daa
jo
jbe
cmc
orb
mov
mov
imul
pop
test
dec
pop
cli
mov
lret
int3
jno
pop
cmpsl
xor
xorl
sbb
das
push
xchg
loop
stos
xlat
sbb
or
sub
mov
push
inc
adc
pop
add
ret
shll
jbe
pop
inc
lret
push
jae
pop
out
hlt
mov
jecxz
fldt
cld
lock
mov
sbb
int3
mov
aad
jp
pop
cmp
js
mov
leave
mov
les
stos
dec
fsubl
jl
or
ret
lahf
andl
lahf
add
and
push
xor
sbb
test
addl
adc
cmpsl
enter
je
adc
sub
ss
into
repz
jo
mov
mov
lods
scas
lcall
xor
out
stos
notl
jns
out
lret
cld
lds
xor
dec
mov
dec
push
lds
jecxz
add
ror
mov
lods
test
cmpsb
imul
int
cmp
and
mov
mov
mov
or
repnz
dec
iret
orl
mov
fldenv
dec
xchg
das
jge
mov
adc
or
test
or
fistl
repnz
adc
xchg
lahf
cmp
sbb
lock
scas
cmp
int3
sahf
cmp
andb
cld
xchg
mov
mov
js
ss
xor
lcall
push
sbb
xor
jbe
jno,pn
jne
lahf
arpl
lret
sbbb
outsb
mov
iret
gs
adc
and
faddl
test
cmpsl
inc
sub
mov
fstpt
test
insl
inc
rcll
sbb
xchg
stos
test
hlt
stos
pop
aas
nop
mov
jmp
dec
and
mov
sub
xor
xchg
sti
xor
inc
push
enter
jo
push
sub
sbb
adc
loopne
ja
sub
fcmovnb
cmp
xchg
mov
loop
sti
add
inc
icebp
push
jl
mov
mov
lods
fstpl
xchg
jo
idivb
flds
adc
sub
rorl
pusha
inc
jge
mov
mov
cwtl
fdiv
mov
add
or
or
addl
add
mov
scas
clc
cmp
inc
bnd
in
jno,pn
enter
rcrl
xlat
mov
nop
sbb
int3
inc
orl
sbb
dec
in
mov
push
dec
mov
or
and
fcomp
push
xor
dec
inc
mov
jae
and
insl
aaa
mov
xchg
cld
sbb
arpl
push
dec
or
loope
mov
pushf
inc
jb
hlt
ss
movsl
adc
xchg
sbbl
insl
imul
lock
sbb
lock
jns
inc
mov
and
xor
mov
int
push
fcmove
add
lods
jge
test
aaa
in
fstp
pusha
iret
mov
loopne
xchg
jl
xchg
adc
jns
jbe
and
lds
stos
fbstp
xchg
mov
dec
repz
movsl
hlt
and
push
out
insl
das
cltd
pop
mov
in
mov
cmpsb
cmc
add
adc
and
add
adc
stos
xchg
mov
shll
mov
sub
push
mov
lds
lods
push
ret
sub
pop
popf
mov
xlat
and
rorb
cld
push
mov
mov
xchg
into
imul
repnz
jg
xor
fwait
outsl
loopne
xchg
sub
es
sbb
sbb
test
inc
loop
adc
push
in
fstp
dec
ljmp
sub
popf
xor
and
xchg
sub
inc
int3
push
out
pop
xor
mov
adc
out
fbstp
in
push
xchg
xchg
mov
fcmovnu
aaa
sub
push
lods
cmp
mov
dec
jb
testl
pop
outsl
adc
sarb
bound
popf
loope
aam
xor
sti
imul
push
sbb
dec
imul
sti
push
sarb
shll
xchg
mov
xor
sub
pop
adc
push
jle
scas
and
bound
movsl
jns
and
ja
filds
lods
jno
xlat
mov
adc
sub
add
andl
mov
ss
lods
and
pop
das
pop
orb
ds
std
in
mov
cld
xor
nop
leave
mov
push
push
hlt
int3
in
push
mov
pop
adc
jnp
lds
cli
mulb
and
fcomps
adc
ja
mov
sub
test
and
pop
pop
insb
fwait
dec
xchg
mov
dec
lods
sbb
push
daa
das
std
mov
adcl
imul
les
add
push
mov
stos
inc
or
insb
in
imul
push
pop
jb
sub
in
dec
add
sbb
pushf
inc
xor
ds
sti
sbb
add
push
enter
ret
sbb
jmp
aaa
mov
bnd
add
mov
adc
add
inc
xchg
out
inc
cmp
inc
sbb
les
cmp
les
out
mov
rolb
xor
adc
loope
xchg
movsl
pop
inc
xchg
je
mov
cld
or
lret
in
cld
xlat
jnp
or
adc
loope
js
push
mov
into
lods
dec
push
in
scas
cmpsb
mov
sbb
mov
pop
cmp
insl
cmp
or
push
fcmovne
insl
pop
mov
xchg
or
push
cs
ds
push
into
mov
dec
jmp
pop
and
inc
and
jmp
pop
icebp
mov
mov
stos
jns
int3
pop
xor
imul
out
arpl
jl
xor
cli
cmp
out
dec
aas
push
popa
clc
pop
sbb
lret
xchg
leave
orl
dec
mov
popa
inc
xor
pushf
pop
lret
fwait
sti
fadds
lods
mov
mov
jmp
mov
imul
jne
push
dec
xchg
inc
xchg
fidivrs
and
into
fidivl
cwtl
fistpl
sbb
test
aad
mov
mov
mov
call
xchg
jb
sar
lock
and
je
inc
test
add
dec
std
jbe
jl
inc
mov
push
dec
mov
in
test
xor
scas
jp
xchg
adc
mov
and
adc
push
jmp
add
xchg
daa
lcall
xchg
enter
clc
mov
in
loop
sahf
xchg
arpl
inc
jae
or
inc
out
xlat
mov
stos
cmpsl
sbb
fldpi
mov
cmp
jle
cmp
pop
mov
cmp
out
cmp
mov
in
sbb
cmp
ret
push
in
jne
inc
sbb
call
xchg
mov
stos
add
fs
fisttpll
sarb
and
inc
rcll
ret
je
xchg
mov
cmc
in
in
sbb
clc
cli
out
xchg
ret
jecxz
or
pushf
ja
fwait
cmpsl
mov
fiaddl
adc
push
pop
andb
adc
sub
lret
jmp
stc
sub
adc
inc
xchg
add
cmp
xchg
pop
arpl
sub
and
mov
xchg
ss
inc
pop
push
dec
xchg
aam
shlb
xor
jmp
jne
dec
adc
test
das
inc
adcl
ss
mov
push
in
divb
mov
daa
lock
cltd
stos
cmp
loopne
cwtl
sub
arpl
inc
lcall
out
xchg
add
cmp
dec
loopne
call
out
in
push
fs
pop
mov
sub
xchg
ljmp
fldcw
cmp
or
pop
divl
cli
test
mov
int
add
roll
mov
fldcw
pushf
stc
lods
in
jle
xor
sbb
daa
push
outsb
stos
lock
mov
lea
cmc
jecxz
cmp
cli
inc
adc
inc
lea
jle
repz
mov
iret
cmp
call
out
inc
xchg
insb
mov
test
fucomip
or
mov
fcomps
roll
cmc
std
loopne
pushf
movsb
xchg
pop
jecxz
dec
mov
ret
mov
lds
out
testb
aad
bound
pop
mov
popf
cld
pop
addr16
enter
shl
es
cld
pop
sbb
sub
ljmp
scas
mov
fdivrl
imul
gs
lahf
push
js
xor
or
push
fs
stos
mov
call
jns
jge
xchg
mov
sarb
jge
imul
jno
push
int
adc
push
mov
jg
mov
in
and
cmp
pop
std
jecxz
pop
lock
xchg
incb
test
jbe
data16
clc
xchg
and
jmp
xorb
jno
sbb
or
dec
and
mov
cmp
and
dec
enter
cmp
mov
stos
idiv
imul
mov
cmpsb
ret
nop
push
loope
mov
adcl
cmp
in
inc
nop
inc
cli
push
mov
adc
icebp
sub
add
es
push
pop
push
pusha
jbe
lret
xor
pop
jo
iret
movsl
dec
stos
push
cld
jmp
cmp
cmp
cltd
scas
xchg
in
jbe
stos
adc
nop
push
jl
cmc
test
jns
movsb
pop
arpl
popa
mov
xchg
stos
in
out
add
jbe
dec
mov
dec
imul
mov
push
scas
jle
mov
mov
rcrl
and
in
cmpsb
movsb
stos
mov
andl
shlb
mov
aas
and
jb
jg
pop
adc
shlb
push
jo
mov
mov
cmc
aaa
addr16
lcall
les
sbb
in
jno
sbb
arpl
loopne
cltd
pop
mov
psrld
jne
mov
fsubp
jns
mov
mov
ret
lods
ror
out
xorl
int3
rcrb
and
scas
cmp
push
out
jmp
mov
sarl
or
addr16
sub
mov
fcoml
sbb
inc
into
push
cmpsb
inc
cs
orl
inc
shl
adc
test
sbb
cltd
out
shl
test
fdivs
and
sbb
push
frstor
mov
sbb
xor
in
inc
sub
test
sbb
jae
dec
mov
or
dec
sbb
xchg
ds
xchg
rcrl
int3
jl
fs
mov
leave
lret
jnp
pop
dec
mov
daa
repnz
mulb
fdivrl
jo
xchg
jecxz
or
leave
nop
cmp
inc
inc
cmp
push
dec
jecxz
cmp
inc
and
out
loopne
xchg
repz
outsb
sahf
mov
xchg
sub
in
je
cmp
inc
into
cmpsl
leave
shl
push
sub
sbbl
adc
or
call
daa
outsl
mov
jl
sarb
mov
cli
jnp
stos
push
xchg
sbb
fsubl
mov
call
stc
pop
and
pop
cs
sti
or
mov
cltd
sbb
mov
jno
or
mov
ret
xchg
fildll
jae
fdivrl
jae
lods
sbb
std
leave
sbb
movsl
dec
or
popf
imul
add
jns
mov
in
test
xchg
inc
xorl
bound
mov
cmc
pop
ss
add
cmp
call
mov
xor
idivl
cmpsl
inc
leave
aas
mov
aas
rol
add
jae
sub
push
or
push
insb
and
xchg
adc
mov
call
and
mov
sarl
jmp
ja
mov
cmpsb
cmpsl
push
outsl
sbb
mov
pusha
loop
adc
out
lcall
pop
fmulp
call
paddq
jmp
arpl
test
mov
out
sub
jnp
and
mov
mov
sti
fsubr
js
fs
movsl
es
dec
mov
dec
mov
dec
mov
add
lcall
mov
inc
dec
movsl
push
repnz
shr
mov
xchg
aad
pop
or
pop
push
mull
or
dec
jmp
divl
sbb
xor
fsubrl
push
add
rcrl
jle
pop
loopne
mov
adc
mulb
cmp
stos
xor
inc
dec
adc
cltd
movsb
dec
and
dec
das
xchg
out
mov
xbegin
xlat
sub
jle
cltd
mov
pop
jge
repnz
or
xchg
aam
or
pop
aad
jo
jg
add
mov
mov
or
fwait
in
lds
adc
xor
arpl
lods
fdivl
push
mov
pop
or
sbb
adc
adcb
xchg
xor
mov
mov
xchg
inc
aas
adc
mov
mov
cmpsb
cmc
pushf
jg
movsb
je,pn
aam
fidivs
push
test
or
push
or
cmpsb
push
fs
ja
cmpsb
push
inc
rcrb
and
fcmovb
ret
mov
pop
and
lods
loope
dec
mov
daa
jmp
dec
rcrb
sub
in
cmpsb
dec
js
ffree
add
push
loop
and
cmpsl
fisttps
inc
ja
push
inc
popl
jns
and
nop
mov
adcb
sbb
arpl
mov
and
dec
loope
mov
adc
cmp
mov
int
scas
addl
sub
idivb
int3
add
lds
jns
loope
pop
push
popf
cmp
cli
jl
lcall
sbb
jae
jne
test
in
fidivrl
enter
mov
addr16
ljmp
lea
mov
jae
jns
inc
pop
imul
shlb
push
lcall
add
call
push
pop
add
fildll
mov
stos
das
mov
inc
roll
mov
test
mov
test
pusha
scas
int3
lea
outsb
xchg
jecxz
lret
aaa
mov
adc
fstps
stos
sub
test
in
cmc
push
adc
sub
mov
popa
and
test
adc
dec
test
push
mov
int3
xchg
push
std
pop
loope
sub
push
pusha
pop
sub
mov
adc
push
sbb
push
inc
or
push
and
rclb
lods
setp
sarb
jo
push
std
test
pushf
pop
mov
bound
cwtl
and
out
xor
es
cmp
outsb
flds
cmc
push
arpl
cmp
add
xor
sahf
sub
repnz
xchg
inc
mov
pop
jle
inc
mov
mov
lcall
xchg
mov
cld
call
jle
movsl
sbb
iret
add
popa
push
movsl
cmp
sbb
test
mov
pop
jmp
pop
inc
les
cwtl
and
xor
pop
lcall
adc
and
leave
les
test
mov
jecxz
hlt
int3
mov
adc
mov
xchg
hlt
ret
push
or
jb
inc
shrl
sub
cli
mov
test
mov
jg
shr
loopne
mov
inc
push
out
dec
adc
clc
push
dec
xchg
pop
jae
push
xor
loopne
ljmp
sbb
bound
mov
lret
inc
in
pushf
or
shll
fldt
or
rcl
push
sbb
lahf
xor
test
sub
shll
and
hlt
push
cmp
cmc
enter
rolb
dec
or
cmp
or
cwtl
mov
cli
shll
inc
inc
mov
dec
lea
and
add
and
inc
addr16
fisubl
mov
adc
pop
rorl
dec
mov
idivl
mov
adc
sbb
xchg
in
dec
push
adc
dec
mov
sidtl
jecxz
inc
mov
sbb
xchg
mov
sbb
push
sub
pop
pop
fidivl
push
pop
daa
ja
lcall
and
lock
ret
scas
aam
pop
pop
imul
cwtl
clc
and
xchg
dec
sti
pop
out
xchg
and
bound
inc
xchg
fwait
and
dec
cli
jae
jle
jecxz
aas
jge,pt
or
aad
outsb
into
pop
pop
xor
push
cmp
movsl
out
test
mov
adc
imul
pop
xor
adc
movsb
xor
lods
dec
inc
mov
xchg
test
mov
cs
and
and
movsl
test
sub
shlb
adc
adc
iret
mov
mov
cmp
lds
add
xor
mov
pop
sub
or
and
insb
sbb
pop
xchg
in
adc
push
or
inc
scas
add
pop
fisubrl
add
mov
sub
sbb
dec
aas
lcall
rclb
mov
fs
rorb
pushf
sub
cmp
pop
jbe
movsb
mov
fcomps
push
ret
and
adc
push
sbb
jl
mov
inc
ja
out
xor
sti
inc
jno
lods
add
mov
sbb
xchg
jns
mul
push
cmp
faddl
add
ss
dec
mov
add
xorb
adc
push
push
aad
xchg
jmp
inc
aam
int3
pushf
and
scas
imull
dec
out
cmp
lock
divb
xchg
int
add
lea
xchg
push
scas
stc
jae
xor
pextrw
push
scas
lods
insb
les
sbb
aad
out
test
add
loope
and
data16
popf
inc
pop
jo
fmull
cmp
cmpsl
or
fsubrl
dec
mov
sub
xlat
bound
enter
push
out
ljmp
push
mov
rcll
jo
test
dec
mov
jge
pop
jge
int
xor
cmpsl
dec
cwtl
insb
jecxz
push
mov
das
fxch
in
mov
mov
test
xor
imul
in
xor
mov
dec
mov
pop
mov
pop
rol
test
repnz
js
popf
cltd
mov
mov
int
cmc
fucomp
cwtl
lods
cmpsl
push
adc
cmpsl
scas
data16
stos
xchg
test
lods
repz
adc
adc
sub
insl
out
cmp
pop
push
push
inc
cmovns
sub
in
imul
xor
jecxz
je
xchg
lret
mov
nop
out
jecxz
xchg
and
push
and
xchg
pop
lret
ficoms
push
out
jecxz
les
add
inc
or
sub
jns
dec
hlt
rorb
test
add
jmp
mov
mov
push
xchg
mov
mov
jbe
or
push
push
sti
in
popa
imul
arpl
out
fisubrs
pop
mov
sbb
in
add
sub
retw
or
adc
dec
aas
lcall
mov
mov
pusha
xor
jmp
push
sub
xor
insb
ffreep
stc
jns
stc
gs
mov
sbb
add
push
shrl
cld
outsb
lret
fistpl
pop
sarb
pusha
inc
iret
xorb
in
lahf
lds
xor
inc
mov
push
xor
pop
mov
sbb
xor
mov
jb
test
mov
cmp
mov
adc
or
jecxz
and
enter
test
adc
ss
iret
insb
lds
lahf
push
xor
popa
loope
mov
out
sbb
das
or
and
inc
inc
cwtl
aam
xor
and
sub
out
int
lcall
ja
addr16
je
movsb
iret
popa
in
xor
insl
add
and
out
daa
jg
into
jecxz
pushf
push
mov
inc
dec
or
and
dec
loopne
sbb
fdivs
stos
xchg
mov
pop
mov
dec
ret
pop
mov
adcl
cltd
or
cld
and
push
pop
out
lock
mov
add
adc
ret
and
xchg
sub
fstps
pop
loopne
data16
cmc
xchg
repnz
pop
in
xor
ret
and
mov
scas
pop
shld
ss
adc
cwtl
sub
ret
pop
inc
push
cs
loop
repnz
in
xor
fsubrl
adc
mov
ss
scas
idivl
mov
xor
cs
movsl
ja
jecxz
inc
pop
insb
sbb
fsubrl
mov
pop
pop
out
cmp
adc
cwtl
and
test
outsb
dec
mov
sbb
rcrb
mov
mov
xor
cmp
clc
mov
xor
inc
and
jno
mov
cmp
into
and
add
push
cmp
add
mov
fistps
dec
dec
std
mov
ret
adcl
xchg
add
push
inc
ds
idivl
jmp
jmp
addr16
scas
mov
mov
inc
pop
jo
mov
test
shlb
inc
mov
je
inc
sbb
push
bound
fadd
or
and
jno
jmp
pop
outsl
jge
and
out
xor
jp
js
push
xchg
movsl
stos
es
and
mov
or
mov
push
pop
mov
xchg
xchg
or
xchg
insl
and
jo
mov
fdivrl
mov
cmp
std
mov
cmp
mov
push
test
out
add
pop
rcll
adc
stos
cmp
pop
cld
jo
mov
neg
pop
xorl
cmp
pop
mov
push
dec
es
stos
mov
aad
pop
adc
dec
je
loope
out
fld
dec
pop
in
xor
ret
in
jae
cmp
sub
in
xlat
mov
aaa
inc
mov
add
push
lods
fimull
lret
mov
ja
loop
cmp
push
jp
iret
hlt
dec
add
fnclex
or
rolb
fisttpl
or
shrb
jmp
sub
add
loopne
ljmp
in
imul
sti
mov
mov
adc
mov
out
testb
sahf
cld
cmp
mov
shlb
cwtl
mov
cltd
add
adcl
pop
sub
repnz
inc
loope
push
data16
xchg
sub
arpl
js
inc
adc
mov
xor
fsubrl
cwtl
scas
jl
ss
cmp
sbb
or
movsb
out
out
sbb
pop
pop
xchg
xchg
cmp
mov
or
fwait
xor
mov
dec
push
fists
mov
mov
aad
xor
push
sbb
jge
dec
stos
inc
sub
and
mov
ss
xchg
push
cmp
stos
cmp
lahf
stc
inc
les
add
pop
pusha
into
push
fstpt
dec
mov
xlat
push
mov
scas
loope
test
cmp
xor
lret
cmovb
xor
aad
mov
adc
xor
lcall
inc
jle
mull
inc
pushf
xchg
and
or
pop
arpl
and
sub
hlt
cmc
sub
adc
je
mov
sbb
adc
cmp
mov
popf
mov
lea
sbb
mov
popf
lret
bound
mov
aad
sbb
rol
xchg
dec
cmp
fmuls
push
sub
pusha
jno
out
imul
sbb
popa
adc
adc
add
xchg
jo
push
inc
pop
adc
insb
stc
inc
fsubr
cmp
mov
jecxz
xor
orb
sbb
lret
scas
sbb
pop
push
stos
or
adc
xchg
cmc
lods
sub
imull
jle
and
inc
and
es
into
mov
mov
mov
cs
mov
add
insl
push
testb
ret
pop
push
cmp
incb
movsb
xchg
sub
jp
stc
jb
scas
cmpsb
mov
sbb
fcmovnu
fcoms
cli
add
mov
popa
dec
test
or
xchg
push
idivl
mov
jo
xchg
fbstp
mov
jp
xor
outsl
data16
and
push
sub
icebp
push
push
cmp
cmpsl
testl
xchg
insl
hlt
mov
outsb
mov
sbb
imull
mov
mov
cwtl
lahf
or
aas
xor
pop
inc
mov
mov
jp
ret
imul
mov
push
pop
int3
pop
xlat
icebp
push
ds
rorl
pop
lods
mov
sub
mov
in
rorb
into
jge
mov
insb
sbb
dec
test
loopne
bound
xor
xor
daa
ret
fidivs
cmp
dec
push
stos
js
aas
jle
js
dec
es
lret
fdivs
mov
icebp
imul
mov
daa
or
hlt
test
icebp
or
jl
lcall
in
jmp
loop
dec
add
shl
out
xor
or
lods
loop
pop
push
mov
jae
lahf
les
mov
pop
mov
mov
xor
ret
cli
aad
inc
cltd
ret
test
dec
sbb
stc
xlat
or
das
or
lods
cmp
ljmp
mov
mov
stos
jecxz
ss
aas
sbb
orb
xor
mov
fnstcw
or
add
pop
into
cmp
pop
sti
imul
xchg
cmp
rorb
sbb
lods
aam
hlt
jle
pop
fucomip
pop
int3
xchg
movsb
mov
xor
xor
adc
mov
in
jle
loope
sub
dec
push
ret
test
pop
mov
pushf
push
dec
rcll
mov
pop
mov
and
push
cwtl
dec
mov
aaa
cli
fnstcw
out
ja
add
and
orl
movsb
out
cmp
jns
pop
jle
mov
shll
kmovb
out
and
lret
pop
or
jmp
stos
imul
in
lods
frstor
add
inc
test
lock
add
fdivrs
mov
xor
dec
mov
gs
pop
in
jns
pop
lcall
jg
mov
test
orb
pop
cld
in
loopne
pusha
push
cmpsb
push
fcomps
mov
pop
adc
aas
les
pusha
imul
and
inc
ret
mov
jb
mov
movsb
lods
shlb
nop
pop
jp
js
or
clc
xor
movsb
ljmp
jnp
movsb
pop
dec
add
xchg
cltd
jl
sub
pushf
mov
mov
and
sub
int3
sbb
push
int3
inc
push
mov
std
lods
outsb
push
mov
or
jp
je
in
ljmp
and
sub
insl
call
cmp
add
cmp
addr16
aaa
sub
dec
ret
enter
in
add
push
std
cmc
cmp
cmp
mov
sub
dec
jecxz
scas
push
xchg
mov
push
orb
cmp
insb
lods
call
cmpsl
adc
call
dec
jl
mov
push
mov
gs
movsl
popf
test
adc
push
adc
fcoms
clc
mov
popf
pop
icebp
mov
leave
inc
sub
mov
add
lock
jge
pop
mov
fwait
out
xchg
add
popl
pop
push
xchg
adc
dec
outsl
rorb
push
sbb
movsl
fistpll
pop
dec
add
aad
lcall
nop
or
arpl
dec
xchg
jmp
mov
mov
xor
loope
cld
sti
lret
lods
sub
les
cltd
adc
add
les
imul
outsl
test
xlat
mull
pop
rcll
mov
lock
cmpsl
jbe
lds
jae
xchg
in
pop
clc
mov
mov
cmc
loope
test
and
mov
mov
dec
call
test
repz
aas
xor
push
jecxz
mov
mov
aas
mov
cmp
jg
outsb
sub
lds
xor
or
mov
or
fisubrl
loop
pop
push
mov
pop
lret
cmp
je
or
mov
push
mov
or
inc
mov
adc
dec
scas
mov
scas
test
push
movsl
popa
aaa
cmp
fcmovnbe
pop
shrb
test
pop
shrl
fwait
push
dec
add
cwtl
in
clc
cmp
xchg
call
cmp
sbb
rcrb
inc
xor
mov
inc
call
daa
add
cltd
pop
jo
dec
inc
enter
lds
pop
jbe
cmpsl
cs
mov
sub
test
push
dec
movb
in
outsl
roll
subl
pop
addr16
out
mov
jb
cmpsb
lods
into
pop
clc
repnz
xchg
inc
sbb
pop
dec
enter
sbb
or
cs
and
or
pop
fiadds
shrl
fwait
xchg
int3
insl
pusha
sbb
mov
add
push
adc
pop
fwait
pop
and
push
or
mov
mov
movsb
or
lahf
outsb
and
sub
frstor
scas
jae
lods
pop
shr
imul
push
lret
xor
mov
insl
iret
pop
mov
or
push
loopne
cmp
int
fs
mov
inc
int3
cmpb
or
imul
sbb
rorl
and
inc
or
xchg
mov
loopne
mov
sub
xchg
mov
mov
adc
popf
cmp
push
sbb
in
xlat
adc
jmp
aas
ficoml
xor
mov
and
adc
shlb
mov
jo
icebp
nop
xlat
jmp
dec
sub
pop
dec
jne
mov
xchg
test
fisttpl
dec
mov
sti
push
aaa
mov
mov
fcomip
popf
jl
leave
andl
mov
sub
fisubrs
clc
inc
pop
xchg
pop
pop
dec
pop
mov
or
mov
jge
xlat
jae
jle
jns
xlat
pusha
movsb
js
xchg
out
dec
rolb
stc
fwait
and
cmp
jae
jns
lea
in
xchg
mov
xor
bound
clc
xor
and
cmpsb
ljmp
pop
dec
mov
xchg
rorl
cmc
mov
cmp
mov
mov
aam
ds
inc
push
test
mov
imul
add
jmp
sub
outsl
js
sahf
sar
int3
push
lods
stos
sub
push
sub
xchg
cmc
dec
jle
into
mov
jbe
and
dec
push
and
adc
mov
cwtl
mov
push
lahf
mov
adc
sbbl
push
repz
ret
js
outsb
aaa
lods
inc
adc
cld
cli
out
push
jp
mov
sub
lea
mov
mov
ret
scas
iret
in
test
stc
mov
inc
sbb
scas
cwtl
inc
pop
xor
test
mov
push
cs
cld
mov
mov
or
and
adc
push
mov
stc
cli
add
xlat
repnz
insb
mov
loope
bound
dec
xor
mov
data16
pop
add
repnz
jo
mov
repnz
dec
popl
scas
jl
ljmp
inc
dec
sbb
inc
mov
stc
and
es
push
sarl
add
cli
rorl
mov
aam
pop
xor
popf
jno
jecxz
mov
cmp
movsl
mov
mov
xor
pop
mov
repz
fwait
js
incb
push
repz
jle
stc
jp
pop
lea
sbb
loopne
pop
lods
push
cmp
in
mov
stos
xchg
add
pop
jmp
test
pop
push
fistl
insb
lret
jmp
cwtl
jnp
int3
sahf
and
sbb
call
loope
into
sbb
test
cmp
sbbl
notb
test
cwtl
mov
pushf
cltd
push
pop
ret
mov
les
test
inc
addr16
rorb
cwtl
pop
xor
fbstp
int3
xchg
mov
inc
xchg
les
lods
mov
ret
test
je
add
push
pop
fsubp
insl
cltd
sub
fcmovu
mov
imul
andb
adc
pop
mov
shlb
stc
push
or
xor
mov
fildl
out
in
into
aam
in
cmp
fs
scas
jns
mov
mov
loopne
cmpsl
sahf
or
cmpsb
ja
dec
stc
push
mov
jno
into
mov
mov
out
jb
sub
pop
int3
aaa
sub
dec
jg
addl
jle
lods
add
aaa
xchg
shl
mov
cs
mov
jnp
dec
cld
cmpsb
test
cmc
mov
inc
and
pusha
adc
adc
and
bound
les
fwait
pop
add
push
lea
out
insb
push
pop
lahf
je
scas
cmc
jo
sbb
sub
lret
inc
adc
loopne
inc
mov
lret
dec
add
clc
bound
push
mov
int3
mov
push
sub
pshufw
dec
sbb
mov
cmpsb
lret
lea
out
inc
orb
cltd
std
sbb
xor
ds
cs
pop
fldl
and
pop
inc
mov
sub
mov
mov
jne
jge
sbb
lret
and
inc
enter
int
sub
cmp
sbb
mov
movb
inc
out
fs
adc
cwtl
leave
xchg
or
repnz
ret
adc
in
push
ret
rclb
jp
adc
int
xchg
adc
out
imul
faddl
fisttps
mov
cwtl
aas
subb
in
push
jbe
shll
in
mov
imul
jb
movsl
mov
pusha
sti
dec
test
lock
cmp
mov
icebp
xchg
pop
xor
pushw
inc
pop
dec
and
or
test
jecxz
xchg
jo
out
test
in
add
jno
movsl
std
jge
and
jne
fcom
int3
ds
mov
arpl
cmc
sahf
stc
sbb
out
pusha
push
inc
jnp
filds
mov
fdivp
shrl
xor
mov
inc
push
adc
and
es
mov
lret
scas
fiaddl
lcall
push
sub
inc
cltd
out
adc
movsl
and
gs
pop
sbb
push
cltd
push
ffree
ficompl
adc
lods
add
es
jmp
adcb
inc
lods
inc
cwtl
ret
add
lods
pusha
scas
jecxz
or
imul
pop
jle
push
pop
mov
xor
mov
fwait
jle
dec
pop
inc
push
jb
into
add
nop
adc
mov
and
cli
ss
sbb
add
int
fnstsw
jle
aam
xor
lcallw
sahf
aas
fisttps
pop
fnstcw
cmp
lcall
xchg
jg
mov
daa
cmp
scas
out
inc
data16
jbe
xor
xchg
inc
arpl
out
loop
das
sub
mov
nop
push
push
fwait
leave
cmp
cmp
add
push
shlb
sub
jne
das
cld
push
arpl
callw
int3
mov
xchg
and
lahf
xor
sbb
push
mov
inc
scas
sbb
jmp
testl
stc
and
push
inc
inc
pop
imul
push
mov
scas
movsb
push
roll
cmp
movsb
stos
mov
jl
out
pusha
js
push
cmpsb
sub
cmp
iret
cltd
inc
int3
mov
xchg
cmp
xlat
sub
shll
paddusb
and
mov
iret
add
mov
xchg
arpl
cmp
popa
scas
adc
or
int3
test
aaa
enter
inc
push
mov
mov
cmp
rorl
in
fwait
push
inc
cmp
or
adc
adc
adcl
sub
inc
fwait
dec
orb
pop
cmpsl
sub
dec
aam
dec
jnp
and
out
test
mov
pop
sbb
shlb
dec
lds
test
inc
push
sbb
ds
push
das
movsl
cltd
jl
cli
or
out
iret
add
int
popa
adc
imull
ljmp
call
rcl
ja
fmull
push
or
add
aas
dec
mov
popf
outsl
and
mov
pop
js
mov
mov
cmp
rcrb
push
xchg
xchg
in
jle
and
sahf
clc
fdivs
test
adc
jbe
adc
dec
push
push
xor
inc
loope
insl
push
dec
sahf
fldl
push
loopne
mov
fmull
nop
cwtl
pop
cmpl
das
push
adcb
sub
pusha
into
pop
push
sub
push
sub
movsb
xor
fs
xor
sub
inc
inc
sbb
jmp
and
xor
fwait
xlat
jmp
loopne
jp
sbb
mov
adc
cmp
loop
and
das
negl
lock
cld
je
iret
jp
scas
ret
and
aad
jp
mov
jo
adc
adc
dec
mov
cld
add
jae
dec
jbe
js
jmp
push
push
je
rolb
mov
popf
in
lock
pop
or
enter
aaa
arpl
xchg
add
and
aaa
fisubrs
xor
or
xchg
rorl
divb
in
fucomp
lea
mov
ret
scas
imul
jae,pn
sti
push
inc
roll
gs
in
xchg
fisttpl
lods
sub
enter
lret
xor
or
idivb
jl
push
ds
pop
insl
mov
push
push
in
lods
std
fwait
xchg
call
lret
sbb
xor
in
imul
lds
sbb
rorb
outsl
push
push
xor
sbb
jns
pop
xchg
std
jge
das
bound
add
sbb
mov
mov
int3
popf
sub
mov
ficomps
cs
xor
mov
imul
data16
stc
cwtl
dec
jl
mov
into
mov
push
mov
loopne
data16
jge
inc
int
and
adcl
push
adc
lret
pushf
int3
add
ftst
xor
lahf
xor
je
loopne
xor
cmpsb
jne
int
mov
aam
pop
repz
mov
fisubrl
jle
xchg
aad
movsl
adc
pop
jb
pop
testb
sbb
mov
out
mov
mov
mov
dec
shll
es
mov
ds
test
add
pop
dec
xor
dec
mov
sub
imul
imul
lods
rol
sarl
pop
push
scas
fistl
fstpl
mov
jne,pt
jns
xor
stc
ljmp
or
push
movsb
push
call
pop
push
pop
add
mov
pop
sbb
insb
lcall
xlat
adc
jnp
fistpll
imul
scas
inc
jge
jae
and
push
stos
pusha
push
mov
movsb
push
push
pop
ret
cmp
mov
cmp
iret
xorb
lcall
mov
test
out
in
frstor
jno
jl
out
dec
enter
pop
mov
jno
bound
pop
jp
add
das
aam
jbe
popa
jno
repz
out
sbb
pusha
or
add
jb
cmp
and
jge
and
pop
mov
sbb
xor
or
cltd
mov
sti
push
jbe
ror
scas
inc
fadds
jp
cwtl
in
mov
subb
and
mull
test
jge
mov
outsl
push
jne
jnp
ja
add
cmc
sahf
adc
sbb
cmp
cmc
jb
cmp
jbe
or
pop
inc
xchg
xchg
mov
das
mov
aaa
sbb
pop
cmp
push
xor
ss
push
aas
xchg
aas
add
movsl
test
insb
popf
pop
pop
ss
cmc
repnz
ret
shrb
jle
loope
pop
sub
pop
lea
roll
xor
xchg
push
mov
gs
lcall
out
sbb
pop
and
ja
stos
sub
mov
inc
push
pop
jecxz
xor
cs
adc
and
mov
cmp
add
in
mov
mov
int3
jp
pop
sub
mov
mov
cld
inc
push
sbb
jl
sub
sub
jne
xchg
scas
enter
and
xchg
icebp
sbb
cwtl
fs
cmp
clc
jae
mov
insb
outsb
mov
xor
mov
popa
xchg
mov
push
les
mov
out
jno
addr16
or
insb
lcall
mov
xchg
push
insl
cld
xchg
push
stos
and
aam
pushf
movsb
cmpsl
in
gs
out
sub
adcl
cmpsl
enter
xchg
gs
mov
add
dec
scas
cmp
je
leave
pop
fisubs
dec
cltd
pop
lea
das
fildl
or
divl
adc
aas
pop
int
bound
cmp
push
dec
call
adc
lahf
int3
iret
xor
xor
xor
dec
jae
fiaddl
scas
jmp
xchg
jb
add
cwtl
or
pop
imul
les
mov
mov
dec
lea
cmpsl
mov
jg
sbb
add
stos
lock
sub
add
mov
insb
mov
loop
xorl
mov
enter
hlt
push
mov
cmp
test
or
and
xchg
in
pop
sub
cwtl
lods
fldcw
arpl
loopne
push
xor
stc
cwtl
jbe
lcall
lods
jg
jne
aad
sbb
sub
pushf
pop
mov
lret
mov
xor
ds
jmp
and
mov
lret
sti
sbb
add
mov
xor
xchg
inc
mov
shlb
cmpsl
negb
jno
xchg
icebp
jmp
aad
sub
addr16
sub
push
stos
dec
fwait
xor
rolb
loop
popa
push
inc
mov
fisttps
add
dec
mov
pop
jbe
icebp
cltd
popf
idivl
jmp
pop
subl
into
xchg
add
mov
add
rcrl
push
in
daa
inc
imulb
push
xchg
rcl
inc
and
push
xor
loope
in
rclb
mov
pushf
xchg
mov
xchg
sbb
fs
in
xchg
mov
jle
gs
and
pop
mov
and
test
in
sub
push
mov
cmp
mov
insl
and
pop
mov
ja
mov
pop
xchg
mull
pop
imul
mov
pop
lcall
push
or
jne
pusha
xor
or
in
pop
xor
xchg
daa
lods
mov
leave
in
jbe
insb
cs
sub
fcmovne
lods
mov
push
repnz
jg
fiaddl
sbb
outsb
push
dec
sti
mov
mov
mov
out
mov
dec
xor
ffreep
enter
lock
pop
nop
inc
popf
ja
imulb
add
or
fs
dec
push
jmp
movsb
pop
stos
jns
sbb
xlat
mov
scas
ljmp
mov
xchg
mov
or
into
lds
mov
pop
pxor
push
push
imul
or
mov
push
mov
lret
into
jg
lods
add
cmp
adc
sbb
inc
cltd
sbb
stos
push
or
adc
arpl
in
pop
outsl
push
addr16
push
xor
xchg
adc
out
aam
inc
jle
inc
adc
addb
mov
jle
arpl
cltd
adc
ss
adcl
mov
rol
in
cli
lcall
int
pop
or
dec
mov
repz
shrb
xchg
xchg
or
mov
and
cld
das
loope
or
enter
outsl
insl
call
xor
mov
xor
or
mov
pop
adc
sbb
fcmovne
jnp
cli
pop
and
mov
or
mov
cmpsb
adc
dec
add
cmp
movsb
add
cmp
mov
mov
lahf
test
xchg
jmp
imul
and
out
inc
pop
pop
sbb
mov
not
dec
lahf
mov
into
mov
or
mov
cli
sbb
out
fsubrp
stos
sub
pop
jp
adc
sahf
add
jmp
jnp,pn
test
icebp
test
test
jb
mov
jp
or
movb
iret
or
sbb
jecxz
fsubs
in
pop
out
out
out
add
loopne
bound
mov
daa
jmp
ss
jge
insb
inc
inc
sarb
sub
pop
test
mov
lahf
stos
mov
mov
dec
mov
mov
dec
stos
push
hlt
cmpsl
mov
adc
cmpsl
mov
dec
mov
cmpsb
popa
or
rcll
notb
les
in
sub
loope
mov
lds
bound
out
inc
sbb
mov
xchg
sbbl
divb
lret
popf
jge
int
sub
push
xor
loop
imul
sub
scas
push
pop
sbb
and
aaa
cmp
xor
loope
test
mov
xor
sbb
jmp
pop
das
int3
mov
or
or
aad
xor
popf
sub
add
fcoml
stc
loop
ja
sbb
xchg
xchg
outsb
xor
seto
cmp
xor
pop
xor
xorb
pop
jle
mov
sti
push
testb
xor
sbb
les
fdiv
jns
into
test
inc
aas
push
loopne
mov
cmp
mov
jp,pt
icebp
jge
cmp
pop
jge
pop
insb
xchg
call
int3
or
shrl
ss
push
mov
out
and
inc
xchg
lods
sti
jp
push
nop
mov
cmp
shl
pushf
sahf
gs
add
and
add
data16
mov
popa
and
mov
mov
imul
mov
cld
shll
aaa
add
add
adc
das
bound
mov
testl
mov
pop
push
in
mov
cmp
mov
jmp
ret
jle
mov
jge
int3
push
add
cmpsb
push
cltd
dec
hlt
or
jle
xchg
pusha
push
inc
in
inc
aaa
jae
xor
lahf
or
xor
cmp
mov
aas
aaa
jbe
push
icebp
mov
test
inc
adc
dec
sub
push
xor
xchg
inc
mov
jbe
pop
ret
repz
jae
int
mov
mov
cwtl
mov
or
or
movsl
fistl
xor
cmp
aas
in
jnp
lahf
daa
aas
pop
loopne
repnz
sub
push
cmp
pop
mov
sub
and
div
daa
mov
mov
imul
xor
insl
mov
sets
shll
loop
jo
jns
loopne
int3
or
stos
or
idivl
jp
xor
inc
jns
hlt
mov
mov
insb
pop
pop
jl
mov
xor
mov
je
pop
rclb
cmpsb
push
inc
cmpsl
xor
sbb
stos
int
lods
sbb
sub
and
sahf
call
adc
mov
je
or
fsubl
push
es
adc
test
mov
dec
inc
call
sbb
in
xchg
mov
pop
push
add
cmc
rcl
fstps
add
bound
cld
cltd
lds
xor
xor
stos
lods
scas
test
fmulp
mov
sbb
pop
pop
loop
fcoms
test
in
jo
inc
cmpsl
js
mov
mul
sub
mov
dec
inc
inc
jnp
shll
pop
sub
xor
sbb
daa
jmp
inc
ret
inc
sbb
mov
pop
addr16
xor
lret
ret
cwtl
incb
push
cmpsb
in
adc
mov
jecxz
mov
push
mov
stos
int
inc
xor
aam
xchg
dec
xchg
test
and
jl
add
sbb
popa
js
enter
jmp
hlt
sahf
or
sarb
dec
movsb
cmp
jl
xor
inc
idiv
hlt
and
loope
imul
scas
mov
fldt
rol
mov
mov
in
stos
outsb
imul
stos
jp
jg
mov
mov
push
xor
mov
scas
imul
lds
inc
dec
jmp
sahf
xchg
xchg
mov
xor
dec
mov
pop
xchg
xor
das
dec
sbb
fisubrs
mov
imul
pop
mov
pushf
int3
inc
push
enter
out
push
test
dec
stos
lock
daa
addl
adc
fwait
jecxz
jns
mov
cwtl
cmpb
cwtl
push
ss
xchg
lcall
out
hlt
jnp
sub
out
pop
or
add
mov
cmp
push
and
ja
mov
add
fildl
mov
mov
xor
sub
xor
inc
addl
cmp
cltd
scas
dec
test
jne
inc
rol
sahf
leave
adc
fs
xchg
test
push
pusha
and
xchg
xlat
mov
jge
outsl
xchg
sti
inc
imul
push
repnz
ja
jp
sub
enter
lea
cmp
scas
cmp
push
je
andb
popa
push
mov
jbe
mov
ret
mov
xor
mov
jg
xchg
or
lea
mov
sub
or
mov
cmp
mov
int
rclb
mov
dec
mov
lret
lock
dec
addr16
pop
ret
arpl
inc
test
mov
xchg
in
sbb
loop
mov
add
int
ds
or
mov
in
std
mov
inc
cmc
mov
pop
dec
push
out
call
mov
leave
mov
xlat
mov
jge
pop
add
jl
jae
ss
in
jne
bound
mov
mov
push
les
test
ds
repnz
loope
aas
out
pop
jl
cltd
mov
or
mov
in
xor
lods
enter
xchg
dec
imul
mov
and
pop
lret
pop
and
mov
cmpb
jecxz
stc
std
pop
movsl
mov
je
add
loop
dec
adc
lret
aad
mov
mov
sub
andl
js
xchg
lock
mov
loope
push
fisttps
xchg
add
ret
hlt
test
pop
sub
xchg
mov
mov
jno
in
enter
or
mov
out
xchg
pop
sub
stos
inc
pop
dec
sub
jb
fs
push
or
pop
inc
stos
incl
test
fcoms
and
xchg
and
outsl
je
cltd
rorb
mov
or
jge
popa
xlat
sti
aas
addb
test
decb
mov
push
div
push
push
ret
orl
sub
cltd
push
dec
pop
loopne
and
adc
loop
call
int
inc
sbbl
push
adc
shll
xorl
mov
sub
add
mov
aaa
adc
pavgw
out
mov
adc
or
sti
cld
jbe
gs
cmpsb
add
outsb
neg
xor
sub
xor
das
fisubrs
dec
daa
flds
rclb
outsb
jge
addr16
mov
pusha
and
fwait
ja
adc
lret
iret
mov
pop
mov
popa
aad
pop
pop
mov
inc
insb
pop
and
and
clc
aam
sarl
mov
call
cmc
jns
xchg
je
cmp
insb
out
mov
test
push
or
pop
bound
fmulp
movsb
pushf
lret
outsb
sbb
pop
popf
ss
mov
das
cmp
cld
jge
movsb
pop
aas
push
mov
out
leave
icebp
outsb
lret
ljmp
cld
cmp
pop
and
lock
lock
or
dec
mov
bound
ret
xchg
adc
or
addl
sub
add
mov
push
lret
xchg
push
sbb
addr16
ja
fcmovnu
test
sub
sti
sub
outsb
mov
sarb
test
inc
push
inc
mov
into
jle
sbb
fcomps
fwait
aaa
fidivrl
mov
insl
and
ljmp
pop
mov
imul
and
sub
gs
repnz
push
imull
nop
ja
sub
adc
shrb
mov
or
jb
data16
mov
addr16
mov
das
lock
pop
add
daa
aas
xchg
lret
mov
mov
dec
push
and
push
mov
div
jne
push
pushf
hlt
leave
dec
rol
jne
xor
hlt
aaa
sbb
fdivp
add
push
xchg
xor
test
cltd
loope
mov
sbbb
sbb
jae
aas
mov
out
sbb
pop
inc
mov
ret
gs
in
push
mov
mov
fcomps
lahf
lods
and
lahf
lods
cmp
testb
mov
dec
mov
xor
in
aas
adc
mov
cs
cmp
clc
mov
mov
je
jnp
jb
cmp
xchg
or
test
enter
xchg
movsb
xchg
mov
mov
pop
scas
dec
adc
int
sub
sub
sub
mov
insl
xchg
fs
ja
and
outsl
jmp
lds
ljmp
fwait
lcall
jp
lods
xchg
mov
sbb
lock
dec
mov
les
mov
sbb
aad
data16
les
push
add
xor
dec
jecxz
scas
dec
jb
fsubs
and
sub
inc
and
mov
inc
jp
cld
into
add
add
gs
decb
aaa
pop
dec
or
and
sahf
inc
or
fildll
repnz
lea
ret
into
jnp
pop
pop
in
ljmp
in
aam
orb
pop
lock
daa
rol
jecxz
inc
rcrb
or
mov
xchg
and
pushl
repz
lret
xor
jmp
lret
call
push
and
fildl
test
lock
ret
xor
mov
insl
add
inc
pusha
jmp
aas
jbe
and
push
pop
lds
andb
xchg
sbb
pop
or
fisubrl
fdivrl
lret
xor
lcall
loop
lock
mov
pop
mov
outsl
inc
mov
nop
add
insb
add
inc
dec
mov
adc
sbb
jo
je
rclb
movsb
mov
xchg
push
clc
jne
bound
inc
test
dec
xor
pusha
dec
pop
dec
sbb
jns
pop
xor
sbb
or
and
jbe
ds
imul
aas
aas
mov
fcoml
jae
insl
xlat
xor
cmp
in
adc
add
fldl
and
xchg
jo
push
push
xor
jo
mov
aam
rcl
test
sahf
add
cmpl
mov
ds
pop
or
jmp
add
add
pop
divl
mov
sub
xor
mov
fsubs
mov
nop
test
mov
test
push
and
inc
jge
imul
jl
subl
dec
mov
std
loope
inc
orl
fildll
dec
mov
std
cmp
testl
or
and
jecxz
daa
pmulhuw
push
push
ficompl
stos
lcall
iret
sub
inc
add
repnz
mov
pop
out
mov
repnz
lods
push
lret
mov
lock
sahf
adc
sbb
imul
jmp
add
xor
out
push
fcomip
mov
enter
jle
push
test
and
pushl
in
cld
push
add
test
dec
pushf
adc
mov
sbb
cmp
add
or
push
sbb
cwtl
lods
xor
rclb
mov
nop
fildl
adcb
testl
or
dec
cmpsl
pop
jbe
push
sub
in
jge
xchg
iret
hlt
cli
test
idivb
mov
sbb
inc
mov
mov
and
mov
sahf
cmp
loope
outsl
push
in
pop
pop
insb
out
sbb
xchg
add
lret
mov
stos
and
jecxz
fsubr
push
or
adc
mov
ja
shl
pushf
lcall
xchg
les
out
push
test
mov
add
mov
and
aam
push
dec
aam
sub
inc
inc
inc
cmc
push
sub
mov
lds
sub
jg
cmpsw
movsl
add
mov
push
out
sbb
push
jo
das
clc
lret
aad
sub
jg
push
loop
rcr
pushf
in
in
pop
add
inc
jle
adc
cmpsb
lods
sbb
fnstsw
pop
popa
insb
xchg
cltd
mov
mov
jg
addr16
cmpsl
xchg
and
pop
dec
mov
pusha
icebp
mov
or
dec
int3
cmp
call
iret
jns
xchg
shl
mov
call
and
sbb
dec
xchg
enter
test
sub
into
mov
inc
lods
sahf
inc
xchg
xchg
and
fisubrl
out
out
mov
mov
jge
fldenv
jp
xor
cmp
mov
mov
xor
xchg
and
cs
jo
jne,pt
adcl
jb
fwait
cmpsl
cmp
dec
fcompl
insl
or
cmp
js
adc
pop
sbb
xor
lahf
js
fucom
pcmpeqw
inc
dec
pushf
cmp
pushf
repz
mov
xchg
pop
mov
pusha
sub
and
or
inc
mov
mov
push
fucomp
outsl
insb
pop
mov
es
mov
scas
mov
pop
jecxz
adc
js
popw
insb
call
enter
testb
gs
add
xchg
outsb
push
xchg
mov
iret
pop
jecxz
add
mov
dec
stos
in
cmc
mov
mov
inc
ss
pushf
clc
lods
mov
sbb
fwait
test
sbb
or
shlb
dec
imull
data16
sbb
cmpl
ljmp
fisubl
mov
icebp
inc
lret
push
add
scas
sbb
mov
pusha
jae
mov
fists
xor
add
mov
and
ficoml
out
mov
mov
outsb
stos
mov
fiadds
push
fwait
lcall
pop
jns
dec
scas
les
jecxz
fnstsw
xchg
adc
mov
xchg
mov
adc
adc
jle
lcall
sub
xchg
and
repz
sub
mov
decb
dec
xchg
sahf
mov
lret
mov
mov
pop
pop
xor
cmpsl
mov
xchg
mov
or
pop
scas
jns
dec
pop
out
mov
scas
out
pop
or
cmp
push
jnp
push
push
adc
pushf
jmp
jbe
dec
dec
aad
or
inc
popl
outsb
int3
sbb
jne
loopne
stc
scas
test
loop
leave
sbb
movsb
xor
mov
pop
dec
jno
out
sbb
daa
aaa
lods
dec
shlb
mov
bound
xor
jecxz
push
rol
lds
pop
xor
data16
sub
jecxz
shlb
imul
xlat
pusha
sbb
adc
fcompl
cltd
clc
mov
addb
divl
xchg
das
pop
dec
cmpsl
add
sbb
dec
or
mov
cmp
aaa
adc
jb
mov
mov
push
popa
jns
mov
cld
sahf
jmp
call
fwait
mov
jmp
lock
sub
sub
sahf
jmp
sub
mov
push
mov
fisttpl
ret
mov
mov
mov
es
orl
repnz
lods
es
lea
mov
outsl
xchg
sti
ja
push
lods
push
lret
daa
xchg
sbb
fnsave
adcl
nop
cmpsl
test
fidivrs
and
mov
ja
cs
adc
and
pushf
dec
insl
pusha
or
test
cs
fists
divb
cmp
into
inc
stos
loop
fisttps
in
js
stc
jle
xchg
cmc
jg
fsubrs
out
mov
lods
dec
pop
cmp
push
into
movsb
ret
mov
adc
bound
xchg
mov
mov
jno
xor
jge
aad
mov
adc
inc
jle
add
jnp
or
aaa
mov
pop
inc
aam
pop
rcrl
or
mov
dec
cmp
clc
mov
cmp
push
cmp
stc
fwait
sbb
jg
mov
inc
mov
adc
xchg
popa
push
shll
mov
loop
sub
mov
or
das
ljmp
and
push
adc
mov
jmp
les
loope
inc
sbb
das
rcrb
les
outsl
divb
sub
cs
imul
fwait
lds
or
pop
cmp
sti
lock
or
mov
js
push
mov
push
movsb
add
hlt
dec
test
sti
in
imul
adc
sbb
out
mov
dec
mov
sub
push
pop
aaa
mov
adc
idivb
pusha
xor
clc
sub
int3
enter
push
filds
daa
hlt
nop
pop
nop
enter
cli
jne
out
add
aas
int3
mov
pusha
cmp
mov
mov
stos
out
incb
mov
adc
scas
xlat
mov
stos
lods
ret
fdiv
dec
out
or
pop
jp
pop
push
and
inc
mov
ficoms
jnp
cs
add
xchg
iret
add
inc
std
dec
lds
cld
inc
mov
cmp
jb
push
mov
lcall
add
test
pop
into
and
sub
dec
mov
icebp
sbb
in
fxch
dec
xchg
out
fs
movsl
arpl
rcrl
xor
or
aas
xor
scas
bound
test
js
fldt
cli
add
jecxz
loopne
push
jmp
mov
cmovno
rcrb
adc
adc
xor
mov
xor
rorl
pop
fs
sub
insl
daa
add
and
push
add
mov
add
sbb
and
or
out
daa
sub
test
aam
xchg
xlat
sbb
xlat
jle
andb
jnp
movsl
mulb
data16
test
sbb
loop
lea
xor
xchg
nop
sub
lds
mov
mov
mov
cmp
add
in
sbb
aaa
inc
addb
inc
xor
imul
dec
mov
xor
pop
data16
loop
mov
sahf
divb
js
iret
push
xchg
rolb
sarl
push
lods
pop
mov
push
push
shll
ljmp
jns
add
into
shrb
and
push
xchg
js
pop
stos
addb
popa
into
xchg
cmp
aad
mov
and
lods
sub
arpl
ds
push
mov
sahf
sub
xchg
jge
test
pop
adc
inc
jae
js
stc
xchg
adc
sub
cmc
mov
cmovae
mov
jp
imul
or
mov
lods
push
adcl
pushf
insl
out
dec
cmc
sub
mov
cmp
imul
sahf
or
sbb
dec
in
mov
insl
pop
leave
mov
sbb
out
xor
dec
aaa
push
add
mov
xchg
mov
roll
xchg
leave
cld
adc
sahf
pop
xor
xchg
out
cmp
sbb
clc
pop
es
cmpsb
cltd
cmp
pop
cmp
sub
mov
ret
xor
dec
jnp
lahf
cmp
pushf
out
ds
pop
out
into
or
scas
xchg
mov
pushf
popa
movsl
jg
das
ss
scas
add
cmp
and
cmpsb
sti
cmp
cmp
movsb
xchg
mov
push
mov
inc
jns
cmp
shlb
sbb
sub
cmp
fcoms
fstp
das
xor
push
int
push
sbb
pop
mov
gs
lahf
pop
xor
js
movl
mov
call
cmp
xchg
mov
sbb
mov
fisubrs
subl
ds
pop
xchg
jle
movsb
aas
mov
jle
movsl
movsl
and
cli
fdivp
adc
ror
sub
loopne
fdivp
mov
sbb
test
xchg
sbb
mov
ret
add
in
stos
outsb
xchg
shlb
add
push
push
fldt
push
cmp
fwait
adc
movsb
fcomps
loope
lret
stos
xchg
test
jae
bnd
aaa
rorl
add
mov
adc
pusha
mov
mov
cmp
fimull
cmp
sbb
sbbl
insb
add
cmpsb
add
push
mov
fidivrs
jmp
fwait
dec
icebp
mov
out
xchg
pop
ret
jg
xchg
jo
test
mov
aad
jecxz
addb
or
mov
lds
mov
jp
int3
stc
mov
pushf
iret
pushf
pop
je
int3
icebp
mov
ret
fsubrl
add
inc
xor
lods
lret
out
cmp
and
cmc
adc
movsl
int
jecxz
shr
mov
cmp
adc
mov
push
pop
out
pushf
repnz
test
xor
jb
cmc
bound
sbb
jne,pt
ja
cmp
jae
jl
aaa
arpl
cmp
mov
jb
jg
or
or
sbb
push
mov
pop
mov
test
push
filds
cmp
out
sub
fsts
out
shlb
xorb
enter
xor
or
mov
jmp
inc
jne
sub
jle
ja
leave
movsl
xchg
outsb
inc
dec
mov
gs
es
stc
or
xchg
rcll
dec
and
rcrl
jl
adc
or
mov
mov
shll
in
mov
inc
ja
jle
jg
into
test
scas
imul
add
push
cltd
in
sbb
ss
or
jns
popf
in
sti
fisttpl
in
pop
inc
pop
adc
das
cmpsb
xor
fstpt
or
clc
sub
xchg
ret
xor
outsb
inc
mov
xorl
movsb
dec
pop
adc
push
fmull
pop
pop
xlat
xchg
aaa
jnp
cli
out
outsb
or
inc
aad
addr16
mov
sbb
adc
sbb
mov
xchg
mov
clc
mov
fadds
sti
aas
jp
arpl
fdivl
out
adc
jbe
fwait
pop
pop
dec
add
xor
jne
stc
pop
out
jne
call
push
movsl
lcall
inc
testl
outsb
aaa
enter
mov
out
sbb
jg
mov
xchg
loop
cmp
xchg
call
dec
push
sub
insl
mov
mov
pop
sub
push
sbb
lret
mov
xor
xor
into
push
iret
scas
out
inc
stos
scas
enter
stos
mov
push
push
pop
fmuls
f2xm1
pop
mov
push
fmuls
push
add
int
dec
jo
out
in
lods
xchg
clc
pop
test
adc
std
sar
fstps
fldcw
add
in
aas
add
cmp
or
into
ljmp
xchg
and
or
xchg
xor
or
cmp
loop
stos
aaa
dec
shll
dec
sub
pop
les
ss
popa
xchg
xchg
pop
insb
repz
fiaddl
dec
mov
lret
cmp
addr16
movsb
scas
ds
adc
mov
xlat
ja
jne
dec
stos
sub
loop
enter
push
push
ljmp
mov
inc
lea
cmp
pop
je
sub
sbb
inc
cmpl
and
push
in
shll
das
xchg
dec
mov
cli
leave
add
adc
inc
daa
mov
jne
mov
dec
cwtl
sub
fwait
or
inc
mov
sbb
repnz
in
mov
jno
xchg
push
mov
jae
lcall
xchg
sub
repnz
loopne
pushf
mov
sbb
ljmp
cs
aam
jns
mov
xchg
imul
pop
or
outsb
or
outsl
mov
dec
xor
jecxz
mov
sbb
fldl
mov
or
dec
repnz
adc
fld
ds
xchg
sub
mov
adc
and
or
pop
pop
or
and
cmp
sbb
std
pop
aam
mov
int
pop
ret
mov
movsl
mov
inc
mov
cmp
pop
dec
mov
cld
pushf
out
xchg
pop
mov
das
arpl
xor
out
inc
ljmp
cltd
cmc
mov
outsl
sub
adcb
lods
sub
shrl
test
fsubrs
test
int3
outsb
mov
add
int3
cmp
je
cmp
and
push
mov
push
push
enter
and
ss
and
dec
mov
xlat
testl
mov
xlat
ds
pushf
repz
pop
movsl
out
mov
scas
xlat
mov
push
pop
sbb
sub
push
ss
paddb
fcmovne
sub
cmp
nop
loop
cmp
nop
mov
add
ficompl
or
xchg
fsts
fisttpl
daa
rcl
jns
cs
cs
fisubl
xlat
shll
lock
movsb
inc
cmp
cwtl
push
fcomi
jl
push
add
lret
or
push
out
xchg
adc
mov
aam
pop
popa
in
cwtl
out
cwtl
push
cmp
jle
dec
lahf
imul
cmp
xchg
imul
ds
das
adcb
mov
sti
lods
popa
sub
xor
outsl
or
iret
cmpsb
mov
ficompl
inc
xchg
jle
sub
out
adc
jbe
loop
aaa
jbe
ss
push
mov
mov
iret
adc
adc
jecxz
inc
jl
push
inc
in
sub
mov
dec
mov
inc
ret
pop
fwait
dec
in
pushf
cmp
aad
jge
out
cmp
out
adc
push
mov
pop
insl
iret
inc
dec
lret
sbb
cli
xor
lock
pop
inc
aad
xorb
xchg
in
fidivrl
adc
sbb
jp
mov
inc
jge
mov
test
or
sar
and
ss
mov
clc
shrb
nop
xlat
sbb
movsb
xchg
jb
nop
jb
cmp
out
sbb
bound
aam
jp
push
mov
lds
sbb
push
loopne
dec
lods
popf
mov
cli
pop
rolb
mov
mov
adc
jg
mov
insl
icebp
push
pop
add
mov
pop
jns
aad
data16
sti
add
pushl
data16
inc
lock
push
push
call
adc
push
mov
push
insb
lret
mov
icebp
pop
iret
or
adc
mov
xor
sbb
adc
inc
jg
lods
mov
loopne
push
push
mov
xchg
stos
lcall
movsb
xorb
cmpsl
icebp
insb
aad
inc
inc
movsb
pop
movsb
scas
pop
jns
inc
repnz
into
sahf
and
nop
mov
movsb
scas
jg
ljmp
adc
push
sbb
mov
jle
je
mov
add
jmp
in
or
insb
ds
mov
mov
mov
pop
pop
shl
js
add
sub
in
stos
and
bound
mov
sbb
push
insb
inc
sub
jge
jns
insl
pop
or
adc
mov
in
int3
leave
cmp
das
subl
shrb
mov
xor
adc
jne
push
sub
lcall
std
fidivrl
sbb
sub
jo
sbb
cwtl
mov
repnz
frstor
lods
movsl
jne
andl
or
mov
push
enter
shll
cwtl
inc
movsl
push
mov
clc
xchg
or
movsb
pop
push
and
mov
xchg
outsb
mov
push
xor
xchg
pop
subb
call
stc
jge
imul
addr16
ljmp
in
sti
insb
test
stos
fisttps
inc
cli
imul
cmp
lret
scas
imul
imul
jle
xchg
mov
sbb
sub
sti
aad
sbb
push
out
into
mov
adc
movsl
ficoml
or
std
loope
imul
fwait
jae
in
movsb
sub
ror
mov
es
loope
and
stos
sbb
out
and
dec
rclb
xor
xchg
xor
call
aaa
xchg
and
stos
pop
xor
xor
push
negb
aam
mov
mov
das
movsl
xlat
sbb
aam
mov
xor
popf
dec
push
testb
loop
es
stos
mov
xchg
pop
and
xchg
jae
or
test
das
enter
ja
arpl
stos
adc
bound
pop
inc
rclb
in
push
lea
add
in
cld
sub
enter
icebp
test
dec
mov
ljmp
jg
push
pusha
push
imul
xchg
and
fsubr
lods
int3
movsl
push
test
fcomip
in
dec
repz
rorb
mov
or
outsl
fstpl
add
loopne
mov
dec
das
sbb
jg
clc
hlt
loope
aas
inc
xchg
sarl
daa
pop
sarl
or
repz
adcb
and
leave
xorl
outsb
sarl
repz
pushf
inc
inc
enter
daa
add
stos
dec
mov
fistl
mov
jae
inc
adc
data16
push
insl
inc
sub
mov
mov
into
jbe
inc
ljmp
cli
sub
mov
data16
out
jmp
push
push
adcb
bound
mov
mov
mov
bound
xchg
inc
les
negb
setnp
or
and
lods
dec
outsb
mov
mov
adc
push
xor
xacquire
and
push
sahf
or
add
push
mov
xor
sbb
pop
sbb
in
not
cwtl
pop
add
xor
xchg
cmp
and
mov
mov
xor
or
xlat
push
cmpsl
and
cmp
push
or
insb
inc
mov
mov
push
mov
pop
sti
repz
scas
dec
ret
test
mov
inc
sbb
adc
mov
cmp
cmp
enter
test
lods
push
shlb
arpl
cltd
adc
mov
jbe
aad
xchg
repz
hlt
cmp
vphaddubq
ljmp
loop
adc
rolb
shlb
push
sub
scas
pop
sarb
fwait
pop
aam
jecxz
loope
and
pop
push
daa
inc
cli
fwait
pop
lahf
mov
lods
mov
imul
mov
in
adc
ret
movsl
sub
jno
push
pop
stos
inc
cwtl
hlt
inc
add
pushf
push
and
mov
push
shll
pushf
pusha
inc
cli
shrl
adc
jno
cmp
call
jg
mov
mov
shrl
push
lcall
and
push
loope
in
inc
xor
and
inc
push
jae
pop
test
xchg
stos
popf
cmp
mov
push
push
cmpsb
aam
test
out
add
das
sbb
inc
and
call
adcl
cmp
xchg
cmpsb
adc
gs
cmp
push
xor
test
shll
pop
push
push
sub
xor
mov
mov
or
pop
fstpl
push
data16
sub
push
hlt
xchg
out
insb
test
out
cmpsb
shrl
push
add
sub
xchg
or
leave
sbb
lds
adc
leave
mov
test
testl
nop
or
jns
dec
ja
les
jecxz
xor
daa
mov
adc
ja
loope
push
fwait
mov
mov
test
in
in
mov
jb
jb
repz
sub
and
inc
and
pop
cwtl
pushf
jecxz
mov
incl
clc
sti
inc
test
gs
jns
and
loope
popf
imul
mov
mov
nop
sbb
adcb
jle
mov
sahf
xor
inc
inc
lcall
arpl
mov
cltd
dec
aad
xchg
aaa
jmp
leave
shl
arpl
push
insl
mov
movsl
pusha
lods
cmp
and
jae
int
enter
mov
mov
rcrb
bound
add
imulb
je
repz
dec
pop
mov
mov
or
mov
in
or
aad
repz
lea
fdivrs
jno
ror
sub
mov
jg
bound
jecxz
sar
lock
call
mov
or
add
daa
test
icebp
pop
iret
fmull
fisubs
dec
pop
mov
mov
fbld
jp
mov
mov
jb
cltd
mov
push
in
stos
inc
cld
es
jne
mov
push
pop
mov
or
mov
inc
xchg
jle
sahf
mov
adc
jb
out
fnstsw
dec
clc
cmp
or
call
frstor
jecxz
into
fcmovu
aaa
popa
mov
xor
jp
cltd
cmc
xchg
std
dec
cmp
test
pop
cs
int3
daa
add
aaa
mov
gs
stos
sbb
and
or
popf
dec
jo
lcall
cmp
xor
push
repnz
inc
pushl
xor
sbb
push
iret
mov
adc
sti
mov
imul
xchg
sub
sbb
jno
adc
push
scas
bound
xchg
xor
stos
sbb
into
ret
mov
pop
js
or
jo
jo
push
pop
iret
lods
bound
stos
jecxz
mov
jno
pop
xchg
outsb
jl
pop
lret
push
insl
in
mov
stos
lret
cwtl
mov
clc
loope
and
sub
dec
jo
and
push
push
ret
push
ja
jmp
aad
mov
out
fsubr
push
clc
or
cmp
movsl
aad
jne
rorl
movsl
xchg
and
cmpsb
enter
scas
or
daa
fwait
sub
fldln2
cmp
movsb
sbb
pushl
iret
cli
int3
outsb
mov
mov
scas
push
js
sahf
mov
dec
jp
mov
xchg
jl
lods
out
jnp
push
and
cmp
push
jge
cmpsb
pusha
negl
push
mov
lock
rcr
jb
add
push
adc
mov
lods
dec
sahf
push
push
faddl
in
sub
sbb
mov
cli
ja
ret
sbb
pop
aaa
jp
xlat
pop
xchg
cmp
testb
in
addl
push
dec
and
pop
push
mov
mov
and
test
push
xor
je
inc
xchg
sub
cmp
addr16
mov
cmp
loopne
add
addr16
in
nop
cmpsl
cmp
insb
mov
pop
call
mov
call
pop
sahf
add
cmc
lock
adc
pop
push
or
sbb
ret
xchg
mov
adc
cmpsw
ss
out
insb
out
pop
cli
clc
std
adc
sbb
cmp
inc
imul
cmp
mov
aaa
scas
push
jmp
lret
pop
bound
lret
data16
sbb
cmp
or
inc
out
jae
shr
pop
fdivs
sbb
stos
scas
lods
lahf
mov
adcb
cs
cmp
stos
popa
mov
cmc
aam
pop
xchg
sbb
jae
push
pop
adc
pusha
out
scas
nop
lds
add
int
sub
ds
push
hlt
int
fmuls
mov
aas
shr
add
inc
loop
stos
sbb
and
lea
xchg
rolb
xor
sub
aam
mov
stos
lret
push
mov
loope
pop
sbb
les
dec
mov
mov
and
mov
in
pop
in
shl
pop
or
sbb
and
pop
ds
lret
xor
arpl
and
and
add
or
push
xchg
movsb
pop
or
mov
xchg
popf
pop
inc
js
xchg
xor
dec
jo
repnz
pop
rorl
fnsave
push
pop
mov
mov
dec
inc
cmpl
lret
add
mov
fld
aam
int
xor
insl
or
xchg
mov
adc
movsb
bound
out
add
mov
iret
xor
aam
and
inc
push
aad
push
pushf
push
bound
mov
xchg
ret
sbb
jae
jl
mov
mov
rcr
jle
shlb
xchg
dec
mov
push
aam
js
es
push
xchg
lahf
jo
xchg
adcb
sub
adc
xor
lods
fstpl
enter
lcall
push
sub
hlt
pop
inc
insb
xor
xchg
push
mov
jp
lods
jmp
jmp
cwtl
call
cmp
int
call
test
lcall
rorl
stos
call
pop
aaa
and
lcall
xor
cmp
dec
dec
das
or
leave
jmp
xor
movsl
inc
test
daa
or
notb
push
fistpll
mov
cmp
and
call
xor
nop
lds
test
fistps
fstpt
xor
inc
fcoml
mov
mov
mov
enter
leave
sub
xor
jae
jo
xchg
test
shlb
add
stos
loopne
fs
ss
mov
std
cmp
and
shl
add
cmp
fidivrl
xchg
ljmp
mov
les
mov
mov
call
popa
mov
adc
cltd
sub
dec
rcrl
mov
test
xor
incb
stos
mov
inc
xchg
ds
mov
and
push
mov
fisubrl
sub
insl
or
ret
test
mov
mov
adc
xchg
stos
mov
out
jmp
sub
ss
dec
adc
jge
push
cwtl
mov
xchg
lock
mov
ret
addr16
enter
xor
int3
pop
stos
mov
push
outsl
push
fdiv
pushf
nop
dec
push
loop
or
push
push
add
xchg
push
nop
inc
mov
inc
cmc
add
adc
xor
rolb
cmp
fwait
cmp
dec
push
cmp
xchg
jne
cmpsb
stos
das
push
push
je
lret
push
push
imul
jecxz
mov
push
incl
movsb
mov
cmp
dec
push
mov
test
mov
fsincos
xchg
cmpsl
iret
sbb
sub
sbb
xlat
leave
leave
sahf
or
add
in
outsl
pushf
push
mov
jno
dec
or
inc
xor
sbb
movsb
sbb
pop
add
push
lea
jecxz
xchg
jmp
lods
ljmp
flds
jo
mov
fcompl
push
iret
mov
adc
add
push
pop
jmp
push
ficompl
ficompl
pop
sarb
enter
pop
and
cmpsl
mov
mov
ss
mov
pop
icebp
pop
push
fidivl
mov
inc
nop
jecxz
sbb
push
sbb
rol
dec
aad
mov
cs
lcall
rcrb
lock
or
and
mov
cmpsb
xchg
ds
je
ljmp
xchg
cmp
xchg
push
bound
rcrb
repnz
push
mov
fwait
push
sti
push
hlt
outsl
shrl
cs
hlt
clc
mov
and
cli
pop
push
gs
ljmp
cmp
leave
push
fistpl
scas
pusha
xchg
hlt
in
pop
push
jns
add
loope
dec
bnd
fbld
sbb
push
test
imul
fiaddl
adc
cmc
inc
lea
mov
sub
std
push
rcrl
test
push
and
movl
cmp
adc
movsb
push
xorl
jl
es
aad
icebp
dec
test
rorb
scas
int3
adc
sbb
cli
rep
adc
inc
loopne
sarl
cmpsl
cmc
cltd
cmp
addr16
cs
push
roll
cwtl
popf
fcmovnbe
push
mov
pushf
dec
and
jae
or
xor
lock
and
mov
add
xlat
nop
arpl
pop
pusha
xor
je
aam
inc
cmp
push
sahf
insb
add
or
and
leave
jo
outsl
out
stos
inc
notl
add
test
and
adc
adcl
dec
and
cmc
movsb
jno
push
add
jb
mov
push
pop
ret
test
loopne
sub
scas
mov
sbbl
push
mov
ret
xchg
dec
out
and
hlt
or
out
filds
sub
mov
inc
push
sahf
adc
cld
adc
cmpsl
test
pop
pop
aad
sub
sbb
popa
addr16
movsl
pop
and
test
xor
push
call
add
sub
hlt
inc
adc
mov
pop
int3
nop
adc
aad
sbb
lea
jecxz
in
jl
cwtl
sub
mov
loop
dec
cld
lds
dec
call
loopne
into
stos
cmpsl
hlt
mov
xor
xlat
cmp
push
jp
cmc
int3
adc
cmpl
lret
iret
pop
dec
xchg
inc
inc
xor
and
test
mov
fcomps
pop
aaa
push
ljmp
xor
or
jno
pop
cmp
cmp
cmp
inc
fs
adc
loopne
das
popf
in
pushf
pop
hlt
js
sbb
movsl
jns
push
sbb
fistl
scas
lds
insb
jns
aad
incb
xchg
jne
sub
lcall
in
dec
lods
xor
xchg
mov
pop
pop
mov
cmp
mov
cmp
pop
pop
push
mov
cmp
in
sub
mov
add
sbb
push
sub
vucomisd
dec
jns
scas
jb
lahf
sub
mov
mov
jmp
popa
push
add
push
leave
mov
mov
mov
jp
cmp
xchg
push
sahf
mov
xlat
inc
bnd
imul
cmp
test
mov
inc
push
push
mov
mov
pushf
cs
jns
scas
test
cmpl
adc
adc
fsubl
insb
pop
cmp
add
jb
or
lcall
xchg
into
fs
pop
mov
xor
arpl
negb
lret
xchg
adc
fdivs
adc
xchg
pop
mov
sbb
mov
fnsave
idivl
arpl
imul
std
imul
sbb
sti
mov
dec
jecxz
shrb
rclb
frstor
mov
jecxz
icebp
xchg
in
imul
aad
shrl
xlat
in
push
ss
xchg
outsl
ret
sbb
in
and
mov
xchg
push
jp
daa
es
mov
aaa
push
sbb
sub
aam
rcll
cmp
sbb
adc
out
pop
push
push
lret
xor
outsl
je
or
pop
rcrl
lea
mov
add
punpckhbw
sbb
gs
cmpsl
adc
pop
popa
test
fiadds
pop
pusha
adc
sbb
cmp
push
push
cmp
sub
push
xor
xor
clc
inc
je
sbb
lds
pop
xchg
mov
inc
roll
repz
dec
std
adc
fs
add
insl
sub
adc
cmp
lods
das
dec
ds
out
pop
cmp
leave
movsb
into
or
or
es
cli
sbb
lret
push
iret
hlt
push
pushf
mov
and
rcrl
hlt
mov
ss
cmp
jmp
fdivrl
sub
cmpl
roll
or
cmpsb
test
xchg
mov
call
icebp
inc
push
ds
xor
fisubrs
add
mov
test
push
sbb
mov
dec
pop
add
in
xchg
in
test
cmp
push
push
xor
fs
iret
fnstcw
popa
dec
xchg
fninit
std
cmpsl
jb
dec
outsl
dec
pop
jge
mov
mov
repz
lods
cmp
sbb
nop
aas
and
push
mov
pop
loop
stc
pop
push
add
addr16
pop
mov
sahf
lea
mov
push
jne
mov
mov
xor
sbb
jg
daa
sub
scas
cmp
dec
mov
dec
cmpsl
movsl
sti
cmpsb
inc
or
push
lret
out
push
xchg
mov
push
push
shrb
xchg
bound
inc
stc
divb
loopne
in
pop
and
sbb
mov
pop
cwtl
mov
dec
popf
rclb
lahf
or
icebp
fidivrl
mov
sbb
push
in
or
mov
rcrl
outsb
sub
insl
nop
hlt
adc
hlt
std
adc
out
out
add
out
aad
ljmp
cmp
dec
cmp
xor
mov
mov
mov
dec
dec
mov
roll
push
fsts
je
insb
fdivs
pop
out
shl
fwait
inc
in
out
aad
notl
je
dec
mov
jo
imul
popa
fwait
mov
repnz
scas
stc
mov
cs
xor
cli
call
dec
mov
pop
nop
js
xor
inc
fmuls
dec
mov
mov
cmpb
outsl
sub
push
mov
jbe
mov
fnstcw
ja
jno
inc
xlat
sbb
cmp
push
iret
nop
sub
mov
mov
dec
ss
decl
and
mov
fsin
mov
and
jae
cld
out
mov
mov
cmpsl
cs
scas
cld
push
xchg
cmc
stos
adc
jp
aam
gs
cmp
pop
mov
ds
cwtl
cmp
rcrb
jbe
mov
and
mov
xor
mov
nop
repz
in
in
jns
rolb
outsb
dec
jb
inc
out
mov
add
call
push
jne
adc
jns
cmc
push
sub
sub
mov
mov
pop
movsl
dec
push
xor
push
jecxz
xchg
dec
xor
push
pop
scas
dec
mov
xor
incb
in
adcl
fstpl
jp
in
mov
shl
inc
push
jno
fistps
test
lods
imul
push
adc
push
aam
aas
lea
das
inc
inc
out
out
pushf
push
xor
jmp
insb
outsl
mov
sti
and
scas
pop
add
and
ss
in
mov
mov
or
loopne
iret
mov
xchg
test
add
popf
mov
jo
pop
dec
mov
loope
add
xor
pop
rol
sti
xchg
xor
pop
loope
ss
stos
fbld
push
inc
mov
push
call
jb
add
push
mov
repnz
and
dec
int
stos
stos
cltd
push
xchg
inc
leave
rol
cmpl
mov
inc
push
xlat
push
adc
call
xchg
jmp
jmp
int
dec
jg
cmp
dec
add
inc
inc
aas
testl
and
int
orb
push
dec
mov
cmc
movsl
hlt
push
fidivs
lock
cltd
xor
or
fdivs
mov
xchg
mov
ljmp
test
and
add
int
jne
mov
xchg
mov
jns
sub
repnz
xorb
icebp
cmp
sbb
sub
dec
fsubl
xchg
push
jns
xchg
adcb
call
adc
aaa
imul
or
sahf
bound
sbb
loope
push
push
mov
mov
cmpsb
mov
push
mov
and
aam
repz
daa
mov
cmp
jne
mov
sbb
orl
pop
sbb
aam
lret
imul
addb
or
add
pop
mov
aaa
lods
xlat
sub
jp
xchg
push
lods
popf
cli
icebp
jnp
jge
mov
fistps
adc
cli
pop
ret
inc
leave
push
cmp
orb
rol
jg
lds
fs
mov
cli
inc
sbb
arpl
mov
add
aad
out
or
sbb
in
ret
orl
ret
ficomps
xor
sub
ss
bound
js
std
dec
dec
sub
sahf
mov
lea
loope
icebp
jno
mov
iret
bnd
pop
das
lods
push
jb
rolb
xor
push
dec
aaa
shll
fstps
push
aas
cmp
pop
or
fcmove
rcrl
shll
add
xchg
outsb
add
xchg
scas
psubw
sahf
in
pusha
jae
in
testl
xor
inc
in
xor
xor
mov
fistps
lds
adc
jp
or
inc
xor
xor
insb
shll
pusha
xchg
out
repnz
mov
pop
outsl
mov
pop
xor
mov
add
cmp
adc
out
pop
push
decl
sbb
cmpsl
out
dec
sbb
lret
nop
mov
mov
ljmp
in
sub
xorl
or
lock
xchg
sbb
mov
push
fcmovbe
jo
sub
add
test
or
inc
inc
jge
ljmp
mov
xchg
lcall
lock
mov
cmp
sbb
setns
inc
popf
subl
fimuls
iret
je
ljmp
sub
xchg
dec
jl
inc
jb
mov
ljmp
sbb
movsl
fwait
pop
adc
adcl
and
scas
cwtl
jns
mov
dec
cld
into
mov
aaa
inc
arpl
mov
sub
cmpsl
fildll
jbe
stos
cli
ss
add
testl
loopne
jbe
aaa
mov
push
lds
scas
cmpsl
adc
lds
push
push
push
fisttpll
mov
mov
mov
ds
imul
fsub
sbb
adc
imul
mov
ds
popa
xchg
pop
shlb
and
mov
sbb
dec
mov
fisttps
sbb
addb
cmp
test
and
push
xchg
lret
scas
pop
sbb
push
inc
sub
gs
sbb
mov
les
aaa
xchg
rcr
add
fcoml
xchg
loope
sub
icebp
cltd
dec
lret
mov
sub
xchg
out
fcompl
cmp
add
pop
cwtl
jge
in
jno
mov
iret
add
arpl
mov
scas
hlt
push
push
jns
imul
or
add
sub
jmp
xchg
add
hlt
push
jno
adc
xor
sti
and
pop
lahf
or
push
jmp
push
cwtl
leave
dec
add
xor
xor
sub
jge
imul
fdivl
test
mov
adc
jecxz
add
adc
pop
xchg
imul
push
and
nop
add
mov
and
rcr
dec
aas
lea
daa
mov
pushf
pop
mov
lcall
pushf
xorb
mov
xor
bound
and
sbb
mov
mov
loop
push
xchg
imull
jle
pop
and
cs
mov
inc
xchg
movsl
and
fwait
or
add
imull
cwtl
add
pop
mov
and
test
ja
push
int
nop
jle
test
pop
int
and
popf
pop
mov
mov
das
cltd
pop
xchg
out
push
test
xor
lods
mov
addr16
and
cli
cwtl
cli
and
jno
or
xlat
inc
pusha
mov
in
lock
fwait
jge
add
add
test
lea
sub
jmp
push
mov
sbb
mov
cld
enter
pop
ss
inc
cmp
sub
test
lret
lret
xor
lret
pop
jp,pt
lock
xlat
in
cli
sbb
add
ss
xchg
jge
xor
lods
cmc
push
enter
inc
xor
fiaddl
push
imul
add
pop
roll
pop
dec
daa
mov
std
int
pop
jne
pop
fwait
push
ss
cld
aas
sub
cwtl
mov
push
push
jae
gs
out
movsl
frndint
xchg
shlb
dec
cld
push
dec
and
push
mov
cmp
sbb
test
lret
adc
inc
sub
mov
cwtl
xor
stos
lret
stc
aaa
mov
std
mov
aas
test
inc
jns
jecxz
out
xchg
dec
mov
and
and
sub
mov
mov
push
push
adc
sub
mov
add
cltd
push
inc
mov
jns
mov
lret
shrl
push
negl
jne
test
popf
movsl
mov
fildl
pop
or
add
in
lea
xchg
xor
inc
push
add
sbbl
mov
cmp
mov
sbb
dec
ss
mov
jbe
idivb
nop
lret
in
push
add
cmpsl
mov
mov
frstor
fyl2xp1
push
jne
adc
cmp
scas
pop
inc
sub
stc
jle
popf
add
cld
sub
sub
xchg
push
out
or
add
movsl
xor
loope
mull
xchg
xchg
or
data16
dec
ja
and
xor
leave
pop
fbstp
mov
lahf
in
pop
addr16
repz
adc
das
adc
xor
int3
adc
pop
mov
test
jbe
sti
shlb
fdiv
js
js
ror
addr16
dec
push
imul
out
fisubs
out
jmp
shll
push
stos
in
mov
sbb
mov
shl
fs
pop
into
xor
dec
ds
fisubl
cld
fld
sub
call
test
insb
mov
fcmovne
xlat
jle
aaa
jnp
sbb
xchg
xor
lods
jmp
push
mov
je
ds
aas
add
mov
jno
cs
push
shll
inc
add
inc
push
push
xor
jae
int3
je
cmp
cmp
lret
jns
sub
mov
or
mov
jmp
adc
imul
pminsw
orb
insb
es
idivl
pop
push
or
dec
test
sub
addr16
arpl
mov
ret
mov
data16
jmp
fisubs
inc
mov
dec
mov
push
pushf
mov
xchg
or
mov
xchg
jg
or
addr16
push
sub
jb
dec
cmpsl
xchg
fdivl
pop
ficoms
rcrb
shrb
int
jnp
inc
repz
inc
cmp
loopne
adc
jnp
cmp
mov
movsb
pop
dec
add
mov
jns
push
mov
xor
fwait
rcl
andl
add
sti
push
mov
cwtl
ss
loopne
jb
xor
xchg
inc
sub
and
js
outsl
mov
outsb
mov
mov
pop
jecxz
pop
outsl
clc
icebp
jl
pop
mov
and
and
jmp
bound
out
loopne
xchg
lcall
movsl
push
dec
xchg
xchg
sbb
fstl
lahf
add
lods
insb
movsb
in
mov
jmp
in
lods
shlb
push
scas
sub
loopne
xor
fsubrp
adc
cmp
es
test
push
fists
out
std
cmpsb
mov
roll
jp
mov
fldcw
cmp
outsl
insb
mov
sti
fdivl
mov
push
repnz
dec
push
jl
iret
int3
mov
xlat
dec
and
mov
sub
repz
loope
leave
xor
inc
sbb
scas
mov
fcos
mov
inc
xor
add
lret
decl
xchg
nop
cltd
push
fadd
test
out
jne
cmpsl
lret
and
add
outsb
out
daa
cli
dec
inc
test
jecxz
inc
push
and
xchg
adc
and
mov
into
fstps
adc
push
and
cmp
shll
xchg
mov
mov
lcall
xchg
mov
loop
xchg
ljmp
add
das
inc
cli
loope
jg
xor
neg
lds
fistpll
push
daa
lds
sub
jne
push
divb
in
out
fwait
sbb
inc
fxch
add
std
hlt
push
jnp
inc
clc
ficoms
or
and
pop
xor
fldl
mov
cwtl
jmp
mov
push
insb
jns
fs
andl
pop
push
dec
insl
insl
mov
lret
xchg
inc
cli
stc
xor
jb
mov
dec
rclb
ret
hlt
sbb
bound
mov
xor
sub
xor
cmp
in
push
mov
scas
inc
inc
test
or
fsubrl
mov
dec
in
loope
add
pop
addr16
mov
cwtl
dec
pop
mov
pop
arpl
ret
xchg
mov
enter
das
jle
mov
add
jns
movsb
negb
inc
adc
outsl
test
loopne
cmpsb
cmp
cmc
inc
cld
mov
xchg
test
adc
lcall
jae
mov
das
adc
lods
fs
push
mov
pop
cs
push
xchg
jle
fmul
cmpsb
data16
fwait
dec
cltd
jno
mov
mov
pop
pop
jge
or
jb
push
dec
ret
inc
dec
psllq
cmp
mov
fidivl
xor
ss
pop
lcallw
xor
sbb
mov
fisubrl
add
push
push
roll
int3
sub
int3
dec
mov
push
mov
hlt
mov
ret
xor
dec
mov
pop
iret
fmul
sbb
bound
push
dec
lea
jbe
mov
gs
icebp
sub
adc
push
mov
inc
pop
arpl
dec
mov
rorl
cmp
fimull
cld
mov
mov
les
in
push
mov
int3
addr16
cmp
lds
int3
je
mov
repz
lahf
cmp
mov
arpl
xor
sub
int
sub
jge
jb
xor
jle
mov
dec
in
mov
rolb
cmpsb
mov
push
jmp
and
arpl
rorl
punpckhwd
aas
and
xor
add
inc
adcb
xor
and
ljmp
jl
add
jl
cmp
jbe
pop
cwtl
push
sub
std
add
enter
test
frstor
call
xchg
aad
pop
fisubs
clc
insb
sti
shr
popl
add
sahf
ret
sub
inc
push
cmc
loopne
les
in
clc
inc
stos
push
out
mov
xor
jp
rolb
sub
cmp
dec
pop
adc
or
lcall
jno
mov
mov
jno
ljmp
or
mov
cmp
lret
mov
rolb
mov
out
scas
push
jae
mov
xor
mov
aam
pop
mov
jecxz
pop
pop
std
xor
cltd
and
repz
incb
xchg
shrb
sbb
lret
call
dec
cmp
jns
out
sub
fstl
jno
clc
int3
bound
fdivr
mov
ja
cli
or
jle
adc
xchg
insb
jne
stos
ficoml
pop
inc
mov
lret
push
lret
aaa
mov
stos
mov
jne
sub
lods
mov
jno
andb
sbb
push
sbb
sbb
test
stos
idiv
clc
lea
and
int3
lea
adcl
mov
data16
or
icebp
fdiv
inc
jecxz
sbb
jno
push
push
pusha
pop
and
mov
ljmp
push
movsb
xlat
cmp
push
mov
cmpb
addb
in
ret
popf
lret
dec
cmp
jnp
loop
cmp
cmp
add
imul
push
nop
addr16
in
xchg
std
insb
cmp
jp
push
push
mov
jp
push
and
fs
mov
loope
sbbb
fidivrs
pop
mov
mov
les
rorb
clc
cwtl
inc
mov
scas
dec
pop
jecxz
or
or
fs
fdivrl
and
push
sbb
nop
mov
js
rorb
sarl
and
sub
sarb
je
mov
nop
jnp
cmp
jle
jo
or
stos
test
add
mov
jnp
mov
pop
scas
jecxz
adc
outsb
dec
sub
movsb
cli
lds
mov
ret
aam
or
or
xor
jne
mov
xchg
test
push
fwait
and
push
xor
sti
jge
dec
mov
in
pop
repz
rclb
add
sub
cmpsl
pop
test
out
lock
std
add
aam
cmp
sub
xor
mov
ds
js
and
sub
push
push
test
dec
cmp
xor
adc
xlat
das
sbb
aad
or
fisttps
mov
movsbl
in
push
lods
out
lds
lcall
ret
or
outsl
jae
mov
popa
add
in
pusha
push
pop
test
mov
mov
int3
repnz
daa
xorl
lods
add
in
pushf
pusha
or
sbb
xor
xchg
stc
or
dec
clc
mov
xlat
test
dec
cmc
pop
aam
mov
scas
mov
sbb
inc
cmpsl
mov
mov
shrb
dec
push
mov
movsl
sbb
mov
push
negb
add
icebp
mov
imul
jb
mov
dec
push
push
mov
sub
mov
or
or
lret
in
loopne
fdiv
inc
mov
cmp
cmp
mov
sub
in
mov
cmp
loop
pop
pop
sub
jmp
or
shld
push
stos
shl
mov
sti
dec
pushf
mov
mov
cmp
jp,pn
adc
xchg
roll
data16
add
adc
mov
jg
or
lcall
icebp
mov
aad
aad
mov
in
mov
addb
sub
rol
xlat
adc
dec
pop
aaa
cmp
fisubs
call
jmp
ds
test
inc
test
jns
rolb
jg
cwtl
dec
inc
add
lret
sub
hlt
or
aad
or
notb
sub
jle
sub
cmp
adc
ja
in
mov
jl
pop
mov
or
jmp
sub
out
fildll
jl
popa
and
mov
cmp
es
and
call
fstps
es
bound
nop
rcrb
mov
out
cmp
and
xor
mov
insb
rol
push
push
jg
xor
jecxz
jbe
mov
pop
adc
icebp
xchg
push
mov
cmp
call
xor
dec
mov
xchg
inc
rcrl
mov
or
push
fmuls
jp
loopne
push
add
out
fmuls
pop
mov
xor
sbb
cli
lahf
pop
rcl
mov
sbb
sahf
xchg
lret
xrelease
mov
cmp
cmp
es
je
bound
repz
inc
mov
shrl
hlt
mov
rolb
sub
sub
repz
cmp
bound
jg
jecxz
dec
mov
jmp
cmp
xor
inc
xchg
jmp
cmp
popa
fistl
jl
cmp
hlt
sahf
or
jb
int3
imul
decl
lods
ror
xor
cmp
cli
mov
jnp
xchg
mov
stos
fisubrs
cli
pop
lahf
cmp
mov
lahf
out
mov
inc
pop
jae
mov
loop
outsl
scas
out
imul
inc
add
mov
inc
cwtl
inc
in
pop
xor
fwait
lods
jns
cmpsb
rclb
jbe
xchg
jb
pop
das
cmp
outsb
xor
sbb
pop
rorl
cmp
into
cmp
dec
xchg
in
pop
arpl
cmp
push
inc
or
test
push
add
jno
inc
cmp
bound
aas
pop
test
and
dec
enter
out
xor
outsb
ds
je
insb
push
inc
imul
rclb
jno
jp
in
mov
stc
testb
ret
cmpl
xchg
xor
pusha
loope
roll
push
out
or
jmp
das
lcall
hlt
xchg
cmp
js
ficoml
jo
sbb
sti
mov
ja
mov
sbb
leave
dec
in
cmp
js
sub
imul
xor
sub
aaa
shr
xchg
pop
jo
adc
push
inc
mov
jbe
ret
fsubr
cmp
test
mov
xchg
popf
pop
and
cmpsb
loopne
mov
js
pop
mov
jecxz
push
cmpsl
and
xor
mov
fcoms
loope
cmp
in
cld
rolb
inc
ds
addl
dec
aam
xchg
xor
in
js
mov
sbb
jmp
inc
fimuls
out
int
lea
fsubrs
es
add
mov
push
xor
dec
inc
test
nop
adc
sub
mov
scas
cli
inc
xchg
or
pop
or
lret
and
xchg
mov
mov
lock
mov
adc
jg
mov
dec
xchg
inc
cli
jg
add
jb
popa
mov
dec
jp
pop
fisubrs
add
fwait
push
sbb
mov
fistl
inc
pop
xchg
xor
pop
jge
jmp
mov
push
xchg
loope
xor
mov
xor
xchg
mov
outsl
test
repnz
fsubs
lods
lahf
ss
pusha
mov
out
push
xor
cs
addr16
dec
jno
cld
lods
mov
pushf
jge
mov
mov
and
pop
shrb
mov
mov
cmc
in
enter
hlt
cmp
adc
stos
push
test
test
push
push
mov
int
call
add
or
lds
jbe
pop
cmpsl
push
mull
cmp
pop
push
fldenv
mov
mov
xchg
pop
ss
xchg
cmpsl
scas
dec
test
pop
sub
outsb
jo
mov
dec
add
out
push
inc
xor
xor
cs
imul
jne
or
push
cli
movsl
popf
cmp
cmp
fimull
mov
jne
cmp
inc
jae
sbb
test
push
dec
stos
or
add
push
cmp
fstpl
inc
popa
aam
in
mov
push
and
je
or
cli
push
jbe
in
ja
and
in
fsts
sub
bound
mov
cmp
push
xchg
jno
mov
addl
jne
sub
xchg
xor
push
cmp
adc
inc
out
jns
or
das
and
shl
mov
gs
and
mov
add
rolb
pop
mov
mov
pop
fimull
pop
int3
push
sti
rorl
nop
pop
mov
jle
mov
xchg
adc
popa
and
fists
loop
icebp
mov
xchg
in
std
nop
mov
insb
ss
fs
stos
adc
sub
lahf
lcall
pop
aam
pop
loopne
aad
cmpsb
movsl
inc
mov
push
or
aaa
dec
mov
lods
cltd
pop
repz
test
sbb
mov
mov
push
xchg
jnp
ja
popf
cs
insl
xchg
sub
and
je
lds
in
iret
pop
lret
shrl
fistps
push
jne
jecxz
cmp
movsb
add
or
scas
rorl
mov
mov
outsl
sub
mov
outsb
mov
mov
data16
rol
test
popa
daa
push
cli
push
xor
ss
sbb
js
out
cmp
pop
lret
mov
lods
mov
jns
jp
mov
aas
push
xor
mov
xchg
les
xor
xlat
jb
loope
cwtl
cwtl
rcl
pop
adc
and
ret
or
or
int3
adc
sub
andl
and
mov
xchg
add
jl
pop
adc
push
clc
xor
jns
push
iret
mov
insl
cmp
lcall
inc
jle
sarl
push
icebp
push
addr16
ficompl
push
add
and
push
or
xor
rcl
loopne
lods
test
shl
sbb
push
subb
cmpsb
loop
cmpsl
jne
imul
xlat
in
jg
out
sub
add
inc
lcall
adc
mov
cmpsl
movsb
sbb
inc
mov
arpl
int3
and
ja
cli
sbb
sbb
mov
push
mov
fwait
movsb
lahf
cmpsb
xor
add
add
pop
mov
add
aaa
adcb
fs
lds
jb
orl
in
repnz
cmp
dec
out
outsl
add
cwtl
add
xchg
cmp
push
jae
push
je
popf
pop
add
insb
mov
enter
push
inc
ss
insb
jp
sbb
shll
inc
xchg
testb
cmp
jmp
add
mov
push
or
sbb
pop
loopne
jle
in
leave
movsb
or
push
repnz
out
xchg
lret
jmp
repz
clc
rorb
dec
fcmovne
outsb
imul
sbb
xchg
adc
mov
out
test
jge
jb
in
jb
mov
pop
jp
orb
lret
in
jne
aas
fistl
fwait
stc
cltd
lret
sub
cmp
push
jo
popf
sub
mov
xchg
hlt
jne
cltd
mov
adc
daa
xchg
in
or
test
cli
mov
fucomip
jae
sub
ja
mov
mov
cmc
push
push
out
clc
pop
adc
punpcklbw
dec
mov
int3
subb
ja
push
sbb
and
xor
leave
fcompl
xchg
cmc
mov
and
cmp
repnz
sti
mov
pop
mov
lret
mov
sbb
fistpl
inc
add
sbb
aad
bound
insb
jae
popfw
xchg
and
add
in
aaa
adc
mov
dec
mov
out
addr16
and
pop
mov
dec
aas
inc
pop
mov
mov
aam
xchg
sahf
into
add
sbb
mov
mov
xor
sub
or
mov
shl
loopne
lods
mov
fistl
or
leave
xor
cmp
bound
ss
mov
fidivl
mov
test
lahf
add
pusha
xchg
repz
mov
dec
mov
into
dec
jp
push
lds
pop
push
sti
xchg
xor
push
xchg
inc
pop
pop
shlb
inc
sbb
in
mov
es
push
adc
jns
dec
jmp
in
jbe
or
adc
imulb
into
fcmovne
sbb
nop
jbe
in
das
mov
insl
xor
mov
ret
orl
sub
jb
sar
test
xor
or
enter
xchg
xchg
add
es
in
negb
inc
pusha
sbb
idivb
sti
jbe
test
mov
add
in
pop
out
pushf
or
push
mov
movsb
xchg
lret
dec
add
mov
adc
and
scas
sub
inc
ret
sbb
lea
in
aaa
out
jp
xorb
enter
int
cmpsl
xor
jmp
stos
push
mov
pop
hlt
and
mov
das
in
sbb
push
dec
popf
sub
push
adc
aaa
xor
jp
fldcw
shrb
or
mov
xchg
inc
add
cli
in
rorl
test
popf
int
mov
pop
jmp
pop
jge
xlat
mov
push
loope
cmp
push
iret
aaa
mov
or
push
add
jbe
divl
fcomps
movsb
sbb
xchg
roll
fcmove
xor
cmp
sbb
ss
dec
mov
outsl
xchg
daa
jecxz
scas
and
jbe
adc
cs
xor
mov
push
lret
test
xchg
jle
test
ret
inc
mov
sub
ficoms
mov
xchg
imul
cmp
xor
std
rcll
push
pop
push
xorl
lock
or
mov
hlt
sbb
fsubrs
iret
bound
outsl
ss
dec
or
icebp
fstps
xor
sub
inc
mov
outsb
cmpsl
fstps
push
test
movsb
std
dec
es
sbb
decb
jae
bound
cli
in
gs
sti
xchg
fildl
jo
lcall
test
imull
push
adc
das
fistl
aas
outsl
rorl
mov
and
dec
jmp
jnp
repnz
insl
clc
and
aam
dec
cmp
arpl
sbb
fcomi
mov
sub
jle
icebp
iret
jns
add
push
mov
test
inc
sarb
test
clc
data16
mov
jg
sub
ja
dec
sub
das
sub
divb
jbe
push
dec
mov
cmp
mov
cmp
sub
cmp
xchg
jp
adc
cwtl
inc
push
cwtl
popa
mov
mov
repz
aad
and
cmp
dec
push
mov
aad
inc
sub
push
cmc
insb
cmp
sbb
cmp
xor
inc
adc
mov
out
and
pop
push
lods
sub
aaa
ljmp
xor
inc
jp
das
push
hlt
jb
push
sahf
notb
cmc
scas
jnp
outsl
mov
mov
lods
pop
pop
mov
mov
fcomps
dec
adc
dec
outsl
push
add
mov
leave
mov
jecxz
mov
mov
sub
jae
arpl
jp
out
leave
lods
pop
xchg
hlt
in
fwait
push
xor
push
cmpsb
pop
dec
xor
shl
xor
aaa
stc
aad
sbb
xor
or
movsb
ficompl
jle
push
dec
push
mov
push
mov
test
mov
sahf
test
push
lahf
and
out
arpl
leave
mov
cmp
cmpsb
jmp
or
int
or
imull
fldl
dec
push
jo
stos
add
nop
dec
jbe
pop
in
lods
cmp
cmc
or
mov
pop
insb
sub
jo
sbb
aaa
dec
xor
push
cli
mov
insb
int
jo
mov
jecxz
mov
dec
lea
test
sub
test
xor
and
mov
dec
sub
ds
adc
pop
nop
xchg
push
popf
cs
sub
mov
rcrl
or
inc
adc
hlt
pop
fs
push
cmp
xor
mov
imul
push
repnz
lds
dec
dec
jmp
inc
or
jae
add
mov
mov
mov
xor
push
pop
stos
cmp
adc
adc
pop
xlat
lcall
rolb
xchg
je
mov
call
sub
sbb
add
loopne
dec
aam
mov
das
js
sub
push
daa
adc
movsb
xor
popf
mov
lahf
sbb
cmpb
xchg
jge
and
xor
sbb
pushf
xor
push
mov
mov
sub
pop
cli
push
outsb
xchg
or
mov
scas
cmp
fstpt
xchg
xchg
iret
ja
mov
sbb
mov
xor
cmp
sub
xor
jge
xor
js
push
into
mov
ret
and
mov
outsl
jbe
mov
sbb
loopne
xor
mov
dec
mov
and
ja
loope
xchg
cltd
inc
inc
pop
xor
fcmovbe
nop
xchg
pop
aaa
std
shll
dec
stos
sbb
rclb
movsl
int
movsl
jb
mov
inc
stos
lcall
iret
scas
cmp
dec
inc
aaa
dec
outsl
and
popa
into
sti
pushf
in
and
in
push
test
xchg
imul
mov
leave
xchg
mov
mov
adc
jg
dec
hlt
jae
movsl
pop
dec
cmp
xlat
sub
cltd
mov
mov
sbb
ss
les
test
dec
xor
ds
hlt
addr16
mov
dec
inc
test
lahf
call
push
adc
xor
jo
inc
lret
dec
mov
pop
call
mov
mov
xor
cmp
das
test
sub
movsb
out
nop
and
mov
int
mov
inc
mov
push
mov
sub
or
pop
test
nop
inc
out
push
mov
call
add
test
push
orl
xor
xchg
mov
pop
int
push
data16
imul
stc
lock
push
mov
test
xor
sbb
adc
jg
xor
adc
fisubrs
sub
negl
aad
xchg
add
fistps
mov
sbb
test
out
pop
stos
mov
add
push
insb
out
mov
jecxz
mov
sar
mov
jge
int3
jbe
outsl
mov
pop
das
push
scas
or
sbb
pusha
jg
dec
xor
xchg
push
xchg
and
stc
dec
xchg
and
mov
test
adc
ret
push
aad
mov
test
scas
lcall
xor
fidivs
cmp
adc
cs
adc
inc
mov
cwtl
lcall
push
ret
adc
repz
insb
ljmp
sahf
test
sbb
out
jo
mov
gs
pop
sub
lods
sub
rcr
mov
loopne
test
add
fs
lods
outsl
outsl
sub
xchg
out
popf
pop
add
xchg
pop
mov
mov
gs
and
js
mov
out
pusha
mov
xchg
rcl
hlt
nop
mov
mov
lds
lods
roll
pop
filds
xchg
test
sbbl
rcrb
call
fmull
sub
mov
sbb
pop
loope
int3
fcomps
cli
sub
jmp
movsl
loope
or
push
xchg
cmp
je
test
and
sbb
movsb
mov
inc
stos
pop
or
pop
lret
dec
loope
mov
ja
sbb
cmp
aad
loopne
shll
fnstcw
inc
enter
icebp
lret
out
jbe
lret
test
push
shll
inc
outsb
imul
data16
xor
push
stos
xor
inc
xor
xor
jo
or
leave
xchg
mov
out
fdivl
or
jl
hlt
and
aas
xchg
pushf
mov
sarl
jae
lods
fwait
nop
jbe
xor
scas
and
and
push
sub
cmp
push
dec
ret
test
shlb
push
shrl
mov
mov
je
sbb
mov
enter
or
cli
adc
mov
and
in
jecxz
cmpb
pop
ret
jg
shrl
or
xor
push
pusha
call
and
or
outsb
mov
div
mov
push
mov
and
cmc
push
lahf
movsl
mov
insb
inc
mov
mov
or
inc
pop
stos
rclb
data16
xchg
or
pxor
pusha
loopne,pn
mov
in
inc
fidivrs
mov
stos
stos
xor
pop
out
bound
xor
mov
and
into
push
out
aas
je
inc
jo
jno
call
loopne
pop
out
push
pop
sbb
and
pop
cmpsb
leave
sbb
stos
jl
push
test
fcoml
inc
stc
mov
cli
push
push
insl
sub
pop
jno
inc
jns
xchg
fdivrl
aam
testb
jmp
push
daa
ret
mov
inc
adc
push
push
and
pop
negb
lcall
and
clc
les
movsl
fisubrl
cld
repz
and
or
fdivl
cmp
jne
into
test
or
xchg
shll
pop
sub
imul
or
fldcw
shl
test
pop
ret
inc
ret
fsts
jne
push
in
in
cwtl
sub
lahf
mov
jb
cmpb
sub
stos
ficomps
or
and
pushf
sub
repz
mov
fstps
inc
and
xchg
pop
mov
xor
mov
adc
jne
pop
dec
jmp
cmp
add
sbb
jb
std
sbb
test
mov
or
mov
mov
push
fmul
ljmp
xchg
cmpsl
in
jle
xor
mov
cmpsl
sbb
lret
lret
stos
push
cmp
ds
gs
notb
sahf
repz
es
xchg
cmpsl
enter
in
nop
inc
mov
push
cmp
int
jge
pop
inc
movsl
jl
cmpsl
jle
xlat
mov
xor
hlt
lret
mov
xchg
sub
addb
mov
xchg
test
popa
push
and
es
add
mov
movsl
ret
out
stc
or
fstpl
xorl
or
cmpsl
je
jne
pop
mov
adc
loope
loope
aas
int
stc
ret
cmp
xchg
push
cmp
sbb
sbb
and
enter
and
push
imul
push
popa
jo
inc
gs
ds
mov
mov
sub
lods
mov
add
push
movb
inc
sbb
xchg
cmpsb
adc
cli
lea
or
fsubl
sbb
push
testb
test
or
push
cmc
ljmp
xchg
test
enter
xchg
mov
mov
cmp
out
fimull
mov
rcl
orl
scas
aam
fldenv
pop
jbe
aaa
pusha
popl
lock
mov
or
or
and
dec
sbb
jle
dec
mov
adc
cmpsb
push
push
rorl
add
mov
fs
test
fisttpl
ljmp
popl
push
sub
std
pushl
mov
xor
xlat
aas
ds
in
or
daa
aad
adc
jae
aam
sub
adc
imul
mov
in
hlt
xor
movsl
xor
dec
sarb
adc
es
xor
bound
inc
mov
mov
je
mov
ja
lcall
mov
icebp
cmp
popa
fistpll
sub
fisttpl
imul
adc
cmpl
movsb
bound
stos
add
hlt
jbe
jg
fisubs
int
or
ds
sbb
jns
lea
imul
sub
rorb
nop
sub
int3
push
cmpsb
div
and
mov
outsb
in
iret
jb
or
mov
jmp
test
sub
pop
jns
ljmpw
cmp
sub
popa
jle
std
push
adc
iret
dec
aaa
jmp
xor
mov
pusha
and
lcall
shlb
cli
das
xchg
pop
outsb
cli
cmpsl
mov
fwait
jp
dec
cmc
inc
jmp
mov
mov
jg
icebp
pop
jp
addr16
jle
out
mov
inc
ds
inc
jge
or
data16
icebp
int3
arpl
addb
in
in
fimuls
scas
test
test
adc
mov
shll
mov
push
add
sbb
mov
xor
rclb
and
or
je
pop
in
int3
or
shlb
mov
adc
cmp
mov
jge
in
inc
das
mov
push
add
loop
lahf
mov
add
aaa
cmp
jp
hlt
leave
hlt
daa
inc
sub
int3
mov
jmp
sbb
cmove
movsl
lea
out
cmp
and
rorl
or
pop
mov
andb
out
mov
es
push
inc
stc
add
fidivrs
testb
insb
lds
cmc
sub
ret
mov
leave
jnp
adcb
adc
mov
bound
inc
outsb
adc
jge
jne
das
cmp
subb
jae,pt
xor
cmp
xor
jg
fsubrs
xlat
addr16
imul
mov
mov
sub
xor
gs
cmp
in
out
dec
push
in
aad
cmpsb
in
push
nop
pop
and
sbb
adc
adc
je
mov
mov
lods
pop
sub
adc
sub
push
xor
fsubr
mov
test
lock
pop
mov
xor
sbb
hlt
sbb
andb
inc
nopl
mov
push
pushf
pop
push
ss
jmp
dec
add
or
push
dec
sbb
xchg
and
shl
mov
mov
jno
test
push
or
movsb
aas
es
test
jne
add
addr16
icebp
adc
pusha
or
lret
iret
flds
repnz
pop
mov
mov
fmull
inc
lret
xor
daa
sub
mov
aas
jns
jnp
sbb
inc
mov
pop
movsl
fwait
cmp
push
push
in
imul
mov
pusha
scas
popa
clc
lock
pop
pop
jnp
jns
inc
les
stos
out
sub
push
insl
call
xor
loopne
jb
mov
cmp
or
out
mov
or
stos
jle
iret
inc
and
mov
cmp
mov
pop
popw
jl
push
mov
lods
cmp
push
xchg
stos
sub
repz
mov
push
test
hlt
sub
imul
pop
adc
mov
lret
lahf
cmp
pop
dec
jmp
mov
xchg
test
and
fmull
iret
lock
hlt
addr16
adc
outsb
adc
inc
push
mov
adc
and
mov
repnz
shlb
divb
pop
jle
mov
mov
pop
xor
test
and
subl
mov
sbb
or
push
or
push
pop
inc
xor
stos
call
mov
dec
inc
nop
push
jecxz
repnz
fs
jno
aam
shrb
mov
xor
pop
ss
inc
xchg
and
sbb
jecxz
adcl
push
adc
outsl
mov
in
mov
lahf
fwait
js
gs
lods
sbb
mov
fsubs
sub
cmp
cmpl
bound
push
adc
xchg
push
fdivrl
jp
or
scas
aaa
adcb
dec
mov
inc
add
hlt
cmp
arpl
xchg
cmp
pop
test
popl
clc
inc
xchg
pushf
jb
jge
xchg
aas
ja
cmc
sbb
cmc
adc
nop
stos
adc
jle
test
adc
xorb
push
pop
sub
int3
mov
sub
sub
mov
xchg
mov
push
insb
lods
add
rolb
outsl
dec
or
xchg
mov
pop
mov
insb
dec
mov
sbb
outsl
xchg
aas
pop
fcompl
movsb
shrl
in
lock
jl
cltd
lret
cwtl
aaa
pop
dec
mov
ja
cmpsb
adc
pop
adc
aas
add
inc
xchg
xor
mov
test
addr16
jg
in
push
cmpsb
lahf
lds
push
cmp
jle
dec
sahf
jg
sub
rorb
pusha
mov
xchg
mov
stos
xlat
dec
push
and
ljmp
nop
in
pop
fs
mov
mov
mov
nop
in
pop
push
mov
push
mov
cs
imul
out
add
cmc
xor
mov
lret
shlb
insb
das
mov
xlat
add
sub
mov
mov
jecxz
inc
in
test
loope
pop
hlt
cmpsb
push
dec
jge
push
fimull
lods
cltd
xchg
push
pop
add
out
lds
xchg
sarl
shrl
sbb
cmp
test
or
sbb
test
mov
gs
fsubrs
ja
movsb
lock
loop
cli
fiaddl
loope
pop
mov
lret
pop
mov
mov
enter
jp
sub
xchg
bt
xchg
repnz
aaa
lret
ja
shl
jmp
aaa
push
repnz
cltd
jo
in
pop
jne
xchg
ret
leave
sarb
xor
xchg
inc
test
mov
xor
hlt
push
aas
push
pop
cmp
and
dec
sub
adc
sahf
adc
push
lock
xor
and
pop
sti
cltd
dec
ficoml
cltd
mov
jb
incb
das
ss
xor
ficoms
mov
mov
daa
in
leave
stos
dec
daa
mov
or
push
mov
std
test
and
dec
imul
inc
test
cmpsl
dec
or
sub
loop
jecxz
pushf
in
mov
imul
mov
in
sbb
sub
xchg
push
aad
fistl
imul
in
into
stc
mov
lock
nop
jnp
sahf
push
xchg
repnz
addr16
hlt
jecxz
outsl
mov
and
dec
push
insl
jo
lds
cmpsb
leave
aaa
adc
fwait
or
push
cmp
xor
jb
jne
sarb
xchg
inc
push
iret
fisttpl
mov
inc
test
rorl
pop
stos
inc
mov
and
les
ret
mov
cld
pop
call
lcall
inc
adc
mov
aaa
pop
sub
cltd
jae
js
sub
push
int3
std
mov
mov
loop
mov
ljmp
adc
jge
sbb
dec
cmp
mull
cld
lock
shll
xchg
sub
mov
mov
ja
dec
scas
sub
ja
into
push
cmc
pop
sub
in
iret
das
sbb
mov
adc
mov
enter
jge
inc
jg
nop
imul
dec
add
xchg
xchg
stc
mov
test
addr16
dec
enter
ret
arpl
cltd
mov
loopne
sbb
rsqrtps
dec
push
std
sub
shll
outsb
repz
mov
push
lret
mov
test
in
dec
mov
xchg
lds
sub
jp
adc
mov
cltd
fidivrl
cmpsb
and
push
jle
mov
pop
enter
add
xchg
or
push
inc
sarb
jecxz
xor
dec
dec
and
jo
push
jp
jge
pop
js
adc
push
loope
mov
dec
cmpsl
inc
or
mov
fldl
jno
push
psubd
stos
jmp
and
xor
push
adc
pop
mov
sub
ljmp
ud2
cmpsl
decl
out
pop
pop
cmp
or
mov
into
into
mov
jmp
outsb
scas
adc
test
mov
jno
je
fisttpll
mov
lea
mov
add
out
cmc
jno
daa
add
test
into
stos
stos
adc
jg
mov
stc
jbe
jae
stc
insb
movsl
or
mov
fisubrl
push
mov
out
gs
in
mov
cmpsl
incl
mov
dec
icebp
xorl
and
cld
mov
or
add
adc
and
in
push
mov
jge
aad
lea
pop
aad
jg
inc
jbe
jle
mov
add
addr16
add
xchg
cmp
imul
add
jne
and
sub
fadds
adc
call
lret
shll
jmp
cli
mov
lds
fmul
inc
ja
dec
inc
add
dec
adc
jbe
lock
aad
jb
xlat
add
hlt
sbb
and
sub
arpl
loope
sub
push
and
and
xchg
xor
cmc
sbb
in
popa
cmp
push
cmp
mov
std
test
cli
ror
lods
ds
loope
adc
insb
sbb
packuswb
mov
stc
repz
push
ljmp
push
repz
je
inc
fisubrs
mov
dec
xchg
scas
ss
cmpsl
aaa
cmpb
jg
xchg
outsb
xchg
mov
sbb
cli
lret
dec
jl
or
xor
hlt
mov
popa
fs
out
roll
nop
rcll
ss
imul
insb
arpl
cltd
jnp
leave
xor
fdivrs
in
imul
mov
jb
scas
jo
fmuls
xor
fstpt
adc
mov
lds
scas
lods
arpl
gs
and
mov
jno
push
mov
insl
xlat
jbe
lcall
sarl
je
dec
lock
lcall
cmc
aaa
gs
mov
idivl
mov
push
add
xor
jg
mov
in
es
call
int
dec
je
aam
pop
in
std
mov
sub
xor
sbb
mov
fistpll
adc
jg
jge
lods
ds
adc
cmp
cld
push
data16
cmp
mov
sub
push
jbe
gs
cmp
scas
shll
xlat
push
push
push
xchg
mov
rorb
jne
xor
pop
aad
paddsb
mov
mov
sarb
or
sbb
clc
xor
xchg
fstpl
psrad
movsb
filds
stc
add
inc
loop
nop
jne
and
pusha
push
jb
enter
mov
out
inc
mov
xchg
xor
mov
push
jl,pt
mov
push
out
mov
lock
decb
je
insb
push
in
adc
mov
mov
mov
sarl
jg
jg
jnp
mov
addb
xchg
jmp
mov
sbb
gs
xchg
lods
mov
iret
inc
sti
aad
cmp
mov
dec
ljmp
std
out
stos
adc
rcl
leave
fmulp
stos
add
xor
jae
fmuls
dec
sbb
jle
addr16
jo
mov
popf
data16
cmpsl
pop
pop
mov
rol
cwtl
jae
add
jg
shrl
sub
or
mov
dec
sarl
dec
and
sub
pop
adc
nop
and
stc
add
add
rorl
xchg
data16
bound
jne
and
dec
lret
lret
scas
out
movsb
xchg
xchg
cmp
jg
std
dec
jno
mov
lret
stos
aaa
mov
dec
ret
ljmp
xor
xor
fmuls
jnp
fistpll
pop
xchg
mov
sub
dec
test
fimuls
cltd
push
aaa
lcall
fwait
call
icebp
ljmp
inc
sti
iret
cmp
or
popf
and
sahf
sbb
sbb
loopne,pn
pop
xor
bound
scas
adc
xchg
xchg
xorl
xor
aad
lock
mov
pop
dec
rcll
daa
lock
adc
leave
arpl
aas
fists
sub
fiadds
and
lret
xchg
mov
sub
jo
lret
or
push
cli
mov
jl
xchg
into
and
push
push
mov
shrb
fisttps
and
lds
ret
xchg
lea
cmp
push
xchg
cmp
jns
mov
cmp
dec
mov
pop
inc
add
std
aad
mov
sbbl
iret
jnp
loope
pusha
push
pop
stos
ror
push
bound
test
lods
lds
insl
xchg
lods
push
pmaxub
lds
dec
out
lds
xchg
mov
pusha
inc
movsl
test
sbb
mov
sarb
xchg
adc
stos
and
mov
sub
push
cld
ss
and
out
in
dec
popa
pushf
loope
adc
lret
aad
jae
aas
push
cmp
jg
adc
push
ljmp
enter
and
rcr
adc
add
mov
mov
dec
sahf
inc
out
insb
mov
push
and
jnp
or
dec
fsubs
dec
js
fisubrl
imul
jmp
test
sub
outsb
into
push
insb
fidivrs
push
inc
jno
add
mov
and
adc
pop
test
xor
cli
pop
adc
cmp
pop
xor
ret
mov
cmp
in
and
sub
adc
ficomps
jbe
int
dec
out
js
jo
sti
lds
xchg
leave
stos
inc
pushf
gs
rcrb
xchg
jns
movsb
pop
fisubrl
and
cmp
cmpsb
test
jb
mov
jbe
mov
mov
sub
sub
sbb
shrb
jmpw
adc
and
icebp
cli
sbb
sub
gs
scas
sbb
sarl
cld
jecxz
xor
mov
xorb
shrl
outsb
cmp
jge
ucomiss
movsl
bound
pop
cmove
lcall
dec
ret
xchg
push
push
mul
sbbl
jmp
xor
repz
enter
mov
test
mov
mov
mov
jge
div
popa
mov
or
ljmp
inc
test
stc
fs
divb
mov
mov
mov
push
sbb
dec
scas
popa
jmp
cmp
dec
add
sahf
cmpsb
data16
in
mov
js
outsb
xchg
in
insb
aas
cmp
in
mov
cltd
sbb
mov
aaa
imul
arpl
imulb
mov
fdivrp
mov
test
das
test
or
popa
test
jge
sbb
mov
orb
xchg
lock
dec
aas
in
pop
sub
lret
cli
mov
xor
pop
icebp
jp
loop
fwait
pop
insl
push
sub
fisubrs
shll
mov
inc
scas
les
or
imul
iret
mov
jmp
adcb
dec
rorl
lret
mov
xchg
nop
lds
xlat
sub
subl
add
fs
inc
dec
ja
mov
popa
aam
cld
out
std
xor
test
xor
dec
ja
jl
mov
and
dec
adc
incl
scas
add
xlat
pusha
or
in
xchg
jo
and
xor
mov
add
mov
jae
add
sbb
test
xchg
add
aad
dec
push
inc
pop
cmp
inc
mov
and
lock
xchg
bound
mov
lods
aam
in
push
dec
repz
in
xor
fld
lods
fs
scas
pop
xor
dec
jbe
sbb
push
push
cmc
imul
jbe
jne
aad
mov
test
test
dec
lcall
xor
in
cwtl
adc
loopne
xchg
jle
inc
inc
or
xor
sub
enter
inc
cmpsl
pusha
push
xchg
ss
mov
movsl
xchg
addr16
push
stc
jmp
and
cmpb
jns
sbb
movsl
add
adc
sub
mov
push
xchg
test
mov
test
movsb
test
xchg
imul
jl
aam
sbb
notb
and
aaa
xor
movsb
clc
adc
addb
mov
and
pop
sub
jo
mov
or
adc
jb
push
fdiv
loopne
dec
fbstp
xchg
loope
mov
negb
inc
subb
push
fsubrs
cld
stos
daa
xchg
addr16
jae
out
jg
adc
iret
mov
mov
mov
inc
mov
fwait
in
insl
fisubl
loop
xchg
mov
pop
xchg
cmpsb
mov
cmp
add
or
loope
push
sbb
jnp
or
movsl
dec
mov
and
push
or
sub
add
cli
fldt
mov
cwtl
mov
jnp
or
mov
insl
sahf
out
in
jb
aas
stc
sbb
dec
jns
xchg
dec
mov
mov
jl
push
jo
mov
mov
xchg
sub
xor
cmp
dec
mov
push
lock
and
push
or
je
or
aas
jb
inc
adc
daa
mov
dec
cmpsl
mov
mov
outsb
cld
cltd
stc
ficoml
xchg
pop
cwtl
mov
pop
les
out
mov
mov
aas
lea
push
loope
adc
pop
enter
mov
fnstsw
mov
mov
push
movsl
insb
nop
sahf
lret
cmp
push
imul
lcall
ja
jecxz
push
mov
mov
sub
mov
fwait
adc
fwait
ror
xchg
mov
adc
pop
fcoml
mov
subb
cli
out
stos
push
sti
mov
xor
test
sub
sbb
mov
xlat
cmpsb
cmp
sub
xor
push
xor
in
inc
and
cld
in
sbb
sub
lahf
fdivr
pusha
mov
fidivrs
sbb
jmp
loopne
pusha
inc
mov
sbb
aam
push
scas
xor
aaa
pop
mov
cs
cmp
in
xchg
adc
push
sbb
mov
popf
jbe
lret
adcb
push
or
into
mov
fdivl
hlt
xchg
or
ret
inc
xor
lret
jae
jl
mov
inc
cmc
jb
mov
ret
sahf
repz
test
out
dec
push
dec
hlt
pcmpgtd
inc
xor
ljmp
xchg
xor
push
dec
jae
push
ss
or
or
insb
push
and
insl
addb
cmp
xor
push
xor
lock
add
ja
iret
mov
push
test
clc
in
stc
push
test
rolb
mov
scas
sti
mov
call
hlt
xchg
jmp
pop
icebp
push
fidivl
mov
aam
mov
add
jg
dec
stos
xchg
sub
add
mov
jge
lret
and
mov
jno
mov
pusha
fdivrs
inc
adc
pop
fildl
fwait
orb
sub
rcll
icebp
lret
in
or
or
xorb
jbe
subb
ret
mov
les
loopne
mov
ss
mov
or
push
sbb
movsb
jns
jecxz
leave
xor
pop
sub
rorl
sub
inc
out
jmp
inc
xchg
inc
jnp
outsb
cmp
adc
adc
loop
push
sbb
mov
dec
push
cmpsb
sub
jne
arpl
or
pop
fwait
pop
test
xlat
call
ljmp
clc
aam
ret
cwtl
enter
jecxz
and
xchg
mov
movsl
lods
push
enter
test
adc
js
jb
pop
icebp
outsl
xor
or
daa
mov
loopne
or
in
fldcw
push
out
in
adc
scas
sti
out
lret
cmp
in
push
in
std
int
add
dec
enter
clc
sub
rclb
mov
jnp
out
jb
mov
lret
sub
add
ret
mov
dec
aaa
jmp
cmpsb
lock
mov
mov
sbb
shlb
hlt
and
imul
out
sub
dec
jnp
xchg
lret
rolb
leave
fisttpll
pushf
cmp
movsb
adc
das
ret
push
pushf
pop
enter
add
and
scas
add
dec
cmp
fistps
add
jl
pop
or
jne
jnp
mov
cmc
ret
dec
orl
ljmp
fisubrs
xchg
add
scas
clc
andl
jae
mov
inc
data16
imul
aaa
cmpsl
add
jnp
int
fldl
cld
jg
daa
mov
add
aad
rclb
sarb
adcb
and
aad
sub
xchg
call
aam
dec
pop
cltd
adc
insl
icebp
std
out
addr16
ja
pushl
or
add
mov
mov
mov
fists
push
dec
mov
scas
sbb
out
and
inc
jecxz
enter
push
pushf
cmc
rcr
test
shrb
negl
sbb
and
adc
arpl
or
sahf
jecxz
out
insb
or
mov
out
imul
mov
sbb
outsb
lahf
rolb
push
inc
in
cli
xchg
cmp
xor
jecxz
lods
into
push
add
mov
inc
repz
icebp
xchg
testb
jmp
fsubrl
add
inc
mov
mov
pop
push
cwtl
imul
pusha
cltd
sti
outsb
in
scas
imul
cmp
inc
adc
je
dec
mov
cmpsl
mov
pop
in
cmp
and
jle
pop
pop
xor
call
lcall
mov
jp
jo
push
sbb
jns
gs
jle
aad
test
imull
insl
jo
daa
or
mov
mov
mov
adc
repnz
leave
imul
jmp
pop
into
shll
jg
mov
dec
cld
sbb
mov
imul
and
ficomps
aas
lods
repnz
pop
movb
fisttpl
pop
and
into
fistpl
xor
push
stc
stc
verw
xchg
mov
decb
mov
lret
add
int
and
dec
in
fiadds
or
fwait
pop
pop
xor
mov
gs
adc
repz
jmp
fucomi
lock
xor
push
adc
pop
push
dec
inc
rol
xor
add
lahf
movsl
lods
outsl
bswap
xor
push
xchg
clc
add
pop
mov
decl
mov
inc
and
aaa
insl
xchg
mov
iret
sub
in
push
dec
or
adc
mov
inc
sar
lods
popa
pop
pop
out
jo
mov
gs
les
idivb
sarl
popa
mov
fs
cmpb
nop
icebp
out
mov
cmp
pusha
cmp
in
add
sub
icebp
mov
xchg
std
jge
imul
jp
xchg
mov
hlt
push
mov
or
insl
adcb
push
dec
aad
addb
scas
lcall
xor
sbb
in
popa
insl
mov
cmp
ds
sbb
push
addr16
mov
sub
mov
sbb
sub
push
inc
and
shll
out
inc
dec
xchg
in
notl
insl
dec
insb
dec
out
push
shr
xlat
and
jge
js
xchg
jo
data16
mov
shrl
cmp
adc
push
push
sti
arpl
push
test
sub
aas
jmp
sub
mov
pusha
stos
cmc
lahf
stos
into
xchg
inc
stos
and
inc
cltd
scas
push
pop
fcompl
lcall
jmp
loop
adc
inc
xor
test
mov
shl
push
sub
jne
sbb
mov
or
int3
inc
push
shr
add
leave
dec
cmpsl
fimull
mov
xchg
rolb
fidivs
or
mov
out
adc
sahf
hlt
icebp
inc
mov
xchg
cld
and
aas
or
sub
pop
sahf
sbb
sbb
and
inc
icebp
sahf
pop
imul
scas
xor
ret
fiaddl
jecxz
and
cmp
sub
roll
push
push
xchg
xor
pop
mov
rorl
jns
adc
inc
xor
and
cli
std
fbld
int3
dec
lcall
xor
jg
imul
pop
xlat
dec
mov
cltd
inc
adc
nop
jl
leave
sbb
es
xor
push
lahf
mov
lds
negb
mov
loopne
mov
cmc
cltd
cmp
test
test
loopne
push
rorb
cmp
leave
mov
mov
xchg
cmp
dec
std
xor
addr16
sub
fwait
inc
insb
dec
and
sarl
nop
push
mov
imul
test
out
jnp
movsl
call
xor
ret
loop
adc
shr
inc
int
adc
in
jp
add
and
add
sbb
jmp
adc
sbb
rorl
sub
pop
cltd
cmp
lret
sbb
or
jge
pop
es
adc
push
or
out
ss
insl
std
dec
loop
ss
aas
nop
ljmp
mov
push
or
push
imul
lcall
testl
pop
lret
lcall
dec
lods
and
add
xor
inc
mov
sbb
xor
fnstsw
mov
iret
lds
pop
dec
xchg
leave
jne
lock
pusha
xlat
cmc
into
dec
jae
aaa
mov
bound
out
jbe
lods
push
les
xchg
push
add
pop
and
xchg
add
test
adc
adc
icebp
xor
shrl
mov
lret
sar
insl
int3
sti
dec
ret
enter
and
or
cmp
lret
push
xchg
ss
xor
hlt
loope
nop
xchg
add
cwtl
iret
mov
mov
mov
cmp
sti
fdivs
dec
add
aam
jno
xchg
imul
add
jb
jl
jns
pushf
test
cmp
xorb
std
std
jle
imul
pop
xchg
jl
inc
into
iret
jne
inc
sarl
loop
pop
lods
sub
cmp
inc
push
xor
jp
jb
fdivl
mov
or
call
cmpsl
add
jp
dec
push
push
xchg
cmpsb
push
mov
dec
push
mov
pop
pop
jb
dec
mov
sahf
lods
mov
sub
stos
sbb
push
fidivl
mov
inc
xchg
dec
push
sahf
vpmulld
imull
les
outsb
and
lods
mov
in
pop
pop
lahf
push
in
add
pop
ror
jne
sub
sbb
in
iret
sbb
mov
cmpsb
rclb
lock
add
outsb
mov
mov
leave
pop
pop
repz
add
mov
jecxz
addr16
repz
mov
mov
pop
pop
mov
pop
and
das
lret
mov
ss
mov
ficompl
jp
hlt
add
fwait
and
push
pop
rorl
dec
pop
jmp
lods
inc
repz
jno
pop
lods
pop
call
icebp
mov
and
cli
xor
in
mov
faddl
scas
cmpb
add
out
push
mov
std
pop
push
jbe
imul
sub
add
pop
xchg
cwtl
cwtl
int3
mov
xor
into
inc
mov
es
mov
pop
insb
lahf
popf
mov
imul
iret
ret
adc
stc
aam
loope
mov
mov
xor
xlat
add
cld
add
movsl
mov
mov
fstl
mov
mov
int
and
pop
add
stos
das
add
mov
mov
cmp
add
cmp
fildll
das
sbb
fcmovbe
into
bound
and
loopne
ror
shlb
jle
fisubl
nop
js
test
add
loope
movsl
lock
aas
jne
ljmp
inc
jmp
cmp
scas
and
or
xor
sbb
jge
in
add
ds
testb
imul
jmp
or
pop
loope
dec
dec
pop
lret
iret
adcb
inc
out
xchg
shrb
or
lea
cmpl
pop
xchg
mov
xchg
cld
add
push
push
fsub
icebp
clc
mov
or
insl
mov
mov
aas
push
test
pop
pop
mov
cmc
push
and
repnz
add
mov
data16
mov
jge
ss
lods
out
cmc
add
push
xor
mov
data16
mov
add
subl
aam
sti
pop
lods
sub
mov
jns
test
and
loop
pop
or
mov
notl
loopne
fldcw
xor
cmp
scas
push
lret
xchg
je
clc
xchg
lds
dec
lcall
mov
das
mov
pop
jge
mov
aad
loop
in
lret
adc
rep
call
mov
mov
fnsave
mov
or
dec
test
fidivrs
xchg
stos
add
xor
roll
and
mov
xchg
jge
dec
cmp
add
clc
xor
orl
mov
add
scas
add
icebp
inc
jb
repnz
push
xchg
dec
lret
pop
mov
mov
mov
add
add
repz
mov
add
shlb
adc
stc
adc
mov
cli
out
sub
jae
lret
mov
jge
sbb
push
fsubrs
push
push
rclb
lods
in
mov
sti
dec
rorb
shll
fdivrl
sub
in
or
mov
shl
insl
inc
dec
rol
sbb
addl
xor
movsl
jmp
scas
fisttps
pop
imul
mov
and
imul
jnp
cwtl
and
ja
pushf
andb
lock
in
fsubp
scas
insb
insl
push
cmpsb
inc
rol
xor
scas
pop
jo
jnp
ss
add
mov
jns,pn
xchg
cmpsb
pop
xlat
jg
or
lea
pusha
loope
mov
bound
into
out
ja
insb
stos
xchg
mov
cli
jmp
mov
je
adc
mov
ror
xlat
dec
fld
inc
or
dec
les
dec
jne
sub
cmp
sbb
test
mov
add
pop
std
bound
inc
sub
pop
xchg
sbb
mov
mov
jno
and
rcrb
jb
jle
mov
dec
cmc
popa
cmpsl
out
dec
push
mov
in
or
xlat
pushf
gs
imul
mov
jne
lret
mov
xor
sbb
dec
nop
dec
cltd
outsl
popl
scas
ret
and
xor
jecxz
filds
cltd
cmpsb
pop
inc
jae
ret
mov
cmp
rorl
icebp
andl
sbb
jecxz
test
sbb
add
push
mov
adc
repz
xchg
xchg
cwtl
cmc
dec
enter
sbb
xor
jge
and
rcl
mov
push
iret
xchg
test
sub
push
roll
ja
add
mov
mov
mov
and
dec
loope
mov
push
fisttps
pop
cmp
loop
out
xchg
call
jge
nop
outsb
jo
clc
adc
ljmp
js
ret
fsubrp
add
rcl
or
push
fstpt
add
xchg
aas
adc
imul
insl
push
test
xchg
mov
mov
iret
xor
cmpsb
je
xlat
sbb
mov
movsb
adc
int
cmp
cwtl
jbe
or
inc
xchg
loop
lods
pop
imul
out
inc
push
jle
cmp
pop
pusha
jecxz
jae
add
sbb
imul
pop
mov
js
cmp
ds
lret
xchg
fs
aas
mov
cmp
dec
mov
outsb
xchg
gs
in
add
int
dec
aas
push
mov
pop
push
jmp
xor
jp
jmpw
fwait
loopne
movsb
xor
pop
xor
push
and
mov
xor
and
jnp
mov
sbb
repz
fsubrs
push
jecxz
insb
sub
jae
pushf
mov
dec
mov
and
aas
lea
mov
imul
nop
fistps
push
push
jl
lcall
mov
push
sbb
add
rol
add
mov
inc
js
dec
mov
push
cmp
iret
lret
ljmp
test
clc
ror
or
jb
inc
int
mov
or
push
addb
mov
fidivrl
mov
pop
inc
jb
shll
out
xor
xor
jno
fnstcw
xor
inc
cmp
bswap
inc
push
lcall
insl
jl
arpl
jo
es
push
aad
add
push
inc
adc
add
jae
imul
repnz
mov
add
and
jg
mov
push
pop
or
fcomip
in
mov
inc
aaa
aad
inc
into
shl
syscall
into
push
jl
imul
or
sti
inc
pop
in
sub
mov
call
adc
ss
sti
mov
or
repnz
mov
mov
mov
and
int3
sub
mov
loop
clc
dec
mov
ljmp
mov
jno
or
mov
mov
imul
stos
nop
shl
pusha
div
cltd
or
scas
xchg
sub
inc
mov
sbb
clc
mov
jo
push
scas
and
push
rclb
push
xchg
fucom
iret
jp
cmp
pop
test
lcall
mov
nop
push
fimull
dec
and
shrl
push
cmp
cmp
mov
push
les
outsl
mov
sbb
movsb
pop
jmp
frstor
fimull
inc
out
mov
aas
loop
dec
inc
or
dec
out
push
fs
loope
ja
rolb
pop
and
cmp
mov
pop
mov
push
jmp
inc
imul
xchg
xor
pop
insl
repnz
dec
jl
mov
and
pop
push
dec
fisubrs
je
adcl
out
fnstenv
sbb
popf
jecxz
inc
jbe
ljmp
dec
out
push
ljmp
push
jp
insl
mov
add
jmp
jp
xchg
andb
and
in
inc
push
imul
cmp
adc
nop
outsl
es
add
test
test
in
ror
sahf
mov
shlb
add
mov
iret
add
aas
repz
sub
jns
loope
repz
add
add
std
inc
sbb
jp
mov
cmpsl
push
xor
test
adc
imul
inc
push
cmp
fcomps
iret
mov
outsl
loope
jae
daa
inc
fstps
hlt
mov
out
sahf
aas
cmp
cltd
xchg
dec
hlt
rcrl
pusha
in
xor
add
mov
divl
xchg
imul
push
or
hlt
out
mov
idivb
jg
idivb
jns
pop
repnz
mov
lret
cs
andb
cmc
cltd
cmp
cmovne
sarb
mov
mov
and
pop
mov
xor
pop
in
cmp
mov
icebp
dec
mov
stos
lret
push
imul
lcall
jl
jmp
push
xor
mov
flds
add
pushl
mov
xor
cmc
lahf
push
pop
fcmovnb
imul
sarb
out
push
std
sub
mov
lea
sbb
fs
dec
cmp
lahf
loope
cmp
inc
mov
enter
lods
fildll
cmpsb
iret
dec
ret
and
push
push
push
or
inc
dec
enter
into
adc
das
in
clc
dec
or
pop
into
shll
lret
in
ret
cmp
push
in
subb
shll
call
xor
es
ss
int
mov
jae
jl
lcall
jns
stos
cmp
inc
or
push
xchg
das
shr
shll
and
sbb
jp
movsl
mov
fisubrl
sub
jge
xchg
popa
fsubs
adc
mov
cwtl
pop
out
cwtl
push
cs
adc
std
xchg
add
or
test
xchg
shll
jns
enter
imul
mov
sbb
or
dec
in
sarl
jo
dec
xchg
mov
and
scas
adc
dec
imul
jp
pop
lock
lahf
sahf
fistpll
das
int
mov
jg
stc
test
outsb
or
fisubs
adc
push
in
xchg
ds
xor
sbb
pushf
dec
call
test
icebp
cmc
push
fisubrl
mov
adc
scas
clc
scas
fucom
jno
shl
adc
rorl
inc
pop
adc
std
pop
stc
xorb
mov
sbb
cs
jle
sbb
lahf
inc
xor
pop
dec
cmc
fldenv
icebp
and
push
fistpll
ret
js
out
add
lock
dec
sbb
loop
or
pusha
iret
jp
push
cmp
dec
out
mov
add
cmpsb
ds
sub
fcmovu
scas
into
scas
pushf
inc
xchg
cmp
bound
jl
add
lods
insl
les
out
ja
jnp
out
xchg
sbb
ret
xor
fwait
sub
mov
je
or
add
pop
push
inc
push
pop
sbb
pop
ret
test
iret
xlat
dec
xchg
loop
mov
daa
cmp
pop
scas
dec
mov
call
sbb
push
dec
sbb
imul
push
pop
pop
stos
inc
adc
aam
cs
add
cwtl
outsl
in
jle
jnp
sbb
hlt
ds
xor
in
outsb
adcl
jne
jecxz
mov
aam
insb
push
bound
jp
arpl
in
lahf
pop
std
call
pop
xchg
adcl
push
xchg
clc
in
inc
out
arpl
outsl
push
mov
jg
fldcw
pop
cmovs
xchg
cwtl
int
xchg
ds
nop
or
adc
sbb
test
fadds
lods
xchg
movsl
adc
lahf
sub
mov
ja
push
push
mov
lea
xor
push
dec
notl
jo
sbb
add
or
xor
dec
fimuls
rcrl
sbb
ret
jmp
stos
mov
add
test
andl
loopne
outsb
test
aas
psllw
cmp
push
stos
xchg
xchg
pop
adc
and
stos
es
mov
add
inc
cmp
mov
mov
lods
rcl
insl
inc
xlat
testb
adc
lds
cwtl
out
out
xchg
lods
push
xchg
in
insl
mov
jle
shlb
dec
shrl
xor
repnz
cltd
aam
add
jns
lock
outsb
mov
adc
adcl
cltd
test
xchg
inc
lahf
int
inc
jmp
push
mov
sbb
push
clc
mov
sbb
pop
cltd
cmpb
dec
lret
lods
es
lret
icebp
pop
sarb
push
negb
test
ret
rcrb
jle
in
fnsave
aas
mov
fldenv
mov
pop
mov
cmpsb
mov
cmpsl
outsl
mov
pop
push
das
popf
cwtl
push
repz
add
fisttpl
ss
xor
xchg
imul
scas
adc
sahf
fimull
out
scas
fs
rolb
or
push
or
sahf
outsl
inc
mov
rcll
dec
cmp
dec
shlb
cmpsb
or
add
arpl
pop
aam
dec
cmp
sub
xor
mov
pop
xlat
popl
jns
orb
push
sti
lcall
add
jns
test
shrl
cmp
movsl
push
dec
dec
jo
repnz
mov
pop
cmp
lods
cltd
rcrb
fisttpll
sbb
mov
fdivs
stos
pop
arpl
mov
add
mov
fildl
mov
mov
push
out
mov
mov
nop
add
mov
ficoml
popf
and
int
dec
cmp
leave
leave
add
popa
daa
xchg
xor
mov
leave
xchg
repnz
mov
mov
loop
push
jo
aaa
mov
popf
sbb
cmp
sub
sub
int
xor
xchg
aaa
mov
dec
and
rclb
fisubrs
jae
cmp
fdivp
pop
rolb
je
jbe
xor
cltd
out
mov
push
inc
inc
and
int3
pop
xor
mov
adc
pop
addr16
ja
xchg
jnp
cwtl
jecxz
dec
aaa
pop
xabort
add
or
bound
cwtl
outsl
insl
jne
dec
ljmp
inc
dec
in
jp
out
inc
mov
or
call
mov
testl
es
inc
sbb
inc
pop
arpl
push
call
testb
in
das
aam
dec
loop
leave
aam
cmpsb
inc
pop
jns
push
or
cmp
or
add
rcrb
dec
mov
mov
sbb
add
repnz
and
daa
adc
cmc
or
xchg
mov
imul
jns
inc
cmp
and
add
cmp
xchg
sbb
jecxz
sahf
movsb
loope
and
mov
ja
int
sbb
addr16
outsl
add
andl
outsb
cmp
or
cmp
cmpsl
data16
and
popf
pop
filds
mov
cmp
sarb
scas
dec
out
or
repnz
es
mov
pushf
inc
mov
pop
into
fists
test
push
jns
add
inc
addl
fucom
nop
push
mov
pop
add
push
mov
test
mov
daa
ja
in
dec
mov
es
dec
sub
mov
insb
dec
pop
adc
test
push
and
jmp
mov
fnstcw
adc
sub
cmp
add
cmp
imul
mov
lret
arpl
xor
or
aad
and
out
and
pop
dec
repz
jmp
dec
in
out
cmc
inc
pop
repnz
inc
leave
mov
addl
jecxz
into
lds
cli
ss
data16
movsb
in
cs
cwtl
sub
add
sarl
cli
xor
cmp
push
lahf
js
mov
add
rcrl
inc
adc
out
into
outsl
leave
adc
adc
aas
sahf
std
lret
aam
incl
or
push
push
ja
idiv
mov
push
aas
or
lret
arpl
push
loope
out
push
push
insb
xchg
xchg
or
mov
nop
inc
nop
out
bound
push
cmp
lods
in
cli
inc
pushf
jmp
outsb
and
xor
sbb
add
repnz
xor
sbb
hlt
add
daa
pop
push
xor
rclb
dec
sub
sub
inc
jecxz
and
iret
into
dec
xor
or
mov
jl
aad
and
xlat
xchg
xor
jmp
aad
mov
int3
je
xor
xchg
jbe
outsb
daa
lods
mov
push
jmp
sbb
test
mov
cmp
push
es
pusha
jae
push
mov
pusha
or
xor
lret
outsl
loop
lret
out
scas
mov
add
lahf
or
stos
cmp
sbb
add
test
popf
inc
mov
cmp
ljmp
cmp
dec
adc
or
outsl
insb
and
sub
dec
dec
lahf
jle
cmp
data16
imul
xchg
ds
cwtl
adc
jne
outsb
pop
mov
push
insl
xor
call
movsb
in
jle
aas
sbb
push
jmp
hlt
dec
xchg
in
test
jp
outsl
sub
or
out
sub
cli
pop
lods
adc
sub
daa
std
mov
cltd
pop
repnz
adc
lcall
adcl
sbb
add
in
cltd
cmc
aam
cmc
jecxz
push
lea
jne
xchg
push
leave
or
sbb
iret
jge
push
cmp
int3
sbb
inc
lret
jns
mov
pop
xor
ret
cmp
mov
push
andb
icebp
cld
and
mov
cwtl
outsl
mov
or
mov
dec
and
iret
fildl
outsb
fucomp
and
lret
int3
jl
push
ss
cmp
into
inc
leave
lahf
adc
push
mov
mov
ljmp
dec
xchg
add
push
push
in
jecxz
push
cmpsb
pop
pop
int
adc
mov
movsl
xchg
jecxz
js
jns
sub
or
pop
cltd
or
pop
mov
dec
push
sbb
and
sbb
test
xchg
fcomps
sub
lock
cmp
adc
js
inc
lock
mov
js
lret
cmp
sarl
push
popa
loope
push
scas
push
test
pop
dec
xor
gs
fsts
subb
outsb
cmp
loop
ret
pushf
and
inc
rclb
arpl
sub
inc
xchg
mov
sahf
inc
mov
push
xor
in
pop
inc
or
cs
neg
xchg
or
movb
fidivs
outsl
inc
arpl
pop
mov
cmp
adc
lcall
pop
dec
pushf
subl
mov
loopne
and
pop
iret
dec
jns
add
mov
xchg
les
lahf
sub
adc
loop
cmp
es
shlb
cmp
loopne
lods
rolb
mov
cli
pop
push
cmp
bound
inc
pop
mov
inc
xor
jae
jns
cmp
jb
xor
inc
dec
dec
lea
push
fldcw
jae
mov
shll
and
mov
nop
xchg
xchg
mov
iret
mov
mov
cmp
sbb
jle
jge
mov
shlb
inc
ds
aas
or
jmp
repnz
loope
stos
mov
cld
fxtract
mov
punpckhbw
fnstenv
or
sarl
jb
jp
std
nop
add
cmpsl
sub
and
outsl
jmp
sub
sbb
fadds
ss
and
and
pop
test
repz
cld
fdivrs
sub
pop
insl
jmp
orb
icebp
adc
icebp
push
sub
xchg
xchg
jp
jl
scas
mov
mov
push
aam
ljmp
hlt
aas
inc
insl
pop
stc
stos
rcrb
push
xor
mov
ror
cmp
fsts
movsl
dec
pop
sysret
push
or
cmp
fs
insb
mov
add
dec
mov
jnp
std
sbb
jae
mov
neg
ret
cld
mov
leave
dec
jg
sahf
mov
pop
xor
divl
jle
filds
push
testl
inc
insl
iret
jmp
dec
and
ss
or
jl
icebp
int3
bound
mov
mov
lock
and
xchg
out
sbb
pusha
fcmovne
shll
outsl
lods
cmp
js
popf
cmp
jne
dec
add
stos
in
push
pop
movl
mov
in
stos
push
xchg
jl
pop
pusha
test
dec
jb
fstps
fnop
sub
sub
mov
mov
or
mov
in
jp
add
jp
mov
or
fstpl
push
popf
jmp
jbe
movsb
sti
jl
cmc
mov
std
es
loope,pn
jle
mov
shll
cmc
push
pop
inc
mov
fstl
sub
enter
jmp
iret
or
adc
dec
jo
and
pusha
insl
stos
dec
push
pop
or
jo
and
cmpl
lds
lahf
lods
into
std
mov
pop
movsb
xor
xchg
sbb
sbb
int3
xchg
jl
ret
cmp
pop
push
in
or
and
xchg
add
mov
cwtl
mov
xor
dec
or
xorb
dec
rorb
loopne
cmp
jno
and
jl
mov
aas
ret
push
aas
push
xor
lcall
movsb
clc
sti
in
sub
sub
in
pop
in
addl
push
push
xor
cltd
lods
inc
or
cmp
xor
cmp
mov
leave
push
cmc
inc
sti
lods
and
jmp
ljmp
cmp
add
mov
popa
sahf
sub
aam
jge
and
or
insb
jns
test
sbb
shl
adcb
xchg
dec
fildl
shll
scas
xorl
test
in
ss
bound
mov
push
and
fnstcw
xchg
xchg
dec
xchg
mov
mov
or
cmp
and
xor
aad
into
adc
insl
mov
push
xor
out
sbb
dec
mov
push
mov
nop
xlat
mov
stos
add
adc
and
push
or
enter
std
push
cmc
sub
mov
pusha
push
cld
orl
ljmp
shlb
orl
sahf
inc
fldenv
mov
adc
insb
mov
dec
outsl
pop
fnstsw
jb
mov
rolb
jne
add
sub
xchg
push
imul
adc
leave
fdivs
mulb
mov
xor
inc
cld
gs
fcoml
mov
dec
int
pop
inc
mov
push
lods
popf
inc
lds
and
jmp
ss
adc
sub
insl
adc
les
data16
push
pop
aad
imul
or
adc
jge
xchg
cmp
or
jmp
pusha
mov
mov
jmp
scas
mov
dec
pop
std
stc
cs
loop
sub
adcl
imul
stos
cmp
cld
push
inc
fucomip
iret
push
push
test
in
int3
jne
scas
cmp
jp
subb
xor
gs
mov
in
mov
push
inc
dec
mov
pop
jle
adc
xchg
aaa
push
mov
mov
ja
int
js
push
mov
dec
lahf
repz
leave
xchg
outsb
jg
mov
mov
sbb
jae
daa
out
sbb
fstpt
lret
xchg
lcall
or
gs
stc
add
push
mov
adc
jecxz
sbb
clc
sub
inc
mov
xchg
mov
outsb
data16
lock
mov
ss
movsl
out
test
xorl
imul
add
insb
cmp
in
mov
push
lods
sbb
cmp
jecxz
aam
pushf
lahf
mov
jb
sbb
shll
mov
push
pop
xor
repnz
test
notb
mov
or
inc
or
hlt
xor
push
filds
sar
inc
mov
xlat
xor
and
subw
fsubr
sarl
inc
rcrb
sub
out
push
fwait
add
and
sbb
outsl
xchg
leave
mov
or
je
lret
ljmp
ja
call
test
cwtl
jo
xchg
dec
frndint
rcrl
pusha
cmpsb
xor
push
mov
or
fnstenv
push
jo
data16
sub
mov
into
fs
pop
in
pop
pop
lds
and
lcall
mov
jmp
dec
fincstp
enter
or
xchg
jle
std
and
xor
cs
jae
adc
pop
ds
mov
push
mov
mov
push
xorl
ljmp
mov
addr16
rclb
test
pop
inc
aam
testb
aad
in
leave
stos
in
push
xchg
sbb
lcall
xor
ret
test
push
xchg
inc
or
loopne
mov
pop
fucomp
or
xor
fiaddl
test
imul
fnstsw
fcoml
scas
jbe
jp
cs
aaa
cmp
ja
add
mov
fwait
imul
pop
jne
lcall
xchg
inc
xor
add
pop
push
push
insl
fdiv
sub
xor
xchg
adc
adc
jl
or
pop
bound
xor
jmp
jne
xchg
cli
jb
pushf
ljmp
repnz
adc
jle
je
pop
aas
xor
iret
pop
leave
repnz
fldcw
xlat
mov
inc
sub
fisttpll
mov
out
loope
bound
adc
xor
sub
jmp
dec
mov
shl
jge
clc
pusha
cmp
cltd
aaa
stos
movsb
test
pushf
dec
in
push
ds
dec
mov
dec
insl
and
push
and
jbe
stos
mov
imul
add
loope
cmp
and
adc
cmp
mov
call
or
sarl
lods
mov
movd
add
cli
dec
out
cwtl
fldt
cli
add
jg
push
cli
and
jg
xor
and
push
insb
inc
fldt
int3
movsb
dec
mov
lock
mov
pop
clc
sahf
adc
das
sbb
orl
add
pusha
xchg
arpl
in
push
mov
es
lahf
ret
push
rcrb
shlb
push
adc
dec
insl
ret
mov
setne
addr16
mov
movsb
in
sarb
sbb
testb
inc
push
add
int
xchg
insl
jbe
xor
icebp
scas
cmp
and
mov
mov
mov
leave
sbb
rclb
repz
aad
dec
sub
mov
cmc
nop
rorb
fs
loope
jl
jge
out
shll
das
test
dec
xchg
out
out
push
cmpsb
ret
lock
mov
or
shll
xchg
mov
sub
push
imul
push
fnstcw
test
inc
aas
sbbb
int
ret
sar
xlat
paddusb
mov
cmpsb
xchg
xchg
imul
sub
jnp
xchg
mov
nop
sbb
test
in
mov
filds
xchg
pop
cmp
aaa
mov
in
jg
ret
add
out
xchg
adc
xorb
out
mov
sbb
scas
sbb
outsb
int
xor
jl
or
mov
ret
cmp
int
cmp
imul
push
out
dec
mov
sbb
fldcw
je
add
pop
lods
fs
pop
cmp
pop
mov
jno
xlat
lods
addr16
sarb
insb
or
jns
fcoml
call
dec
dec
pop
int3
dec
sub
dec
push
es
xchg
xchg
mov
push
xchg
jbe
lret
pop
sub
fdivrs
lahf
adc
or
mov
bound
cmpsl
out
negb
loope
xchg
jg
loop
jle
add
sub
sbb
and
xor
mov
rclb
cli
ja
in
jle
jg
xchg
jne
mov
pusha
stos
mov
adc
cmpsl
and
lods
inc
mov
mov
xchg
sbb
push
xchg
cmp
mov
mov
std
inc
ficompl
jl
out
push
sub
fbstp
std
loope
adc
icebp
aam
aaa
cmpsb
xor
clc
mov
nop
mov
call
mov
jbe
adc
arpl
out
or
pop
mov
fcmovbe
mov
xchg
and
sub
lods
rcrb
fdivs
insb
sub
push
popa
arpl
hlt
shlb
mov
push
rcrb
push
mov
xlat
push
outsb
outsb
pop
or
sub
shlb
pusha
mov
shll
jne
out
shl
xchg
rcl
ss
pop
fs
fdivl
sub
cmpb
xor
mov
ficompl
lcall
adc
and
leave
rorl
sub
pop
repz
mov
mov
mov
mov
fldenv
test
sbb
or
enter
js
cmpsl
pop
cmp
cmp
adc
mov
int
insl
shll
popf
std
mov
or
xor
stos
lds
xchg
cmp
cmp
lods
in
or
repnz
adc
add
adc
rorl
lds
or
loope
fcmovnbe
clc
cmp
andl
push
pop
iret
lcall
repnz
pop
jmp
mov
out
ljmp
and
dec
dec
push
sbb
mov
jmp
and
test
sarl
icebp
xchg
add
aaa
cmpsl
or
add
sub
and
xor
aam
cmp
cmp
mov
sti
push
sub
mov
push
imul
popf
pop
sbb
adc
pop
add
inc
fcompp
stos
fcompl
repz
pop
cmp
shlb
aaa
out
insl
jecxz
repnz
es
lods
enter
sbb
js
imull
ds
pushf
push
jle
int3
movsl
sbb
test
cmp
and
jg
ret
jne
cwtl
test
jmp
add
pop
mov
clc
mov
xchg
or
jno
daa
mov
popf
or
mov
jg
add
jno
adc
stos
and
push
mov
loop
or
lea
inc
push
mov
mov
or
sbb
adc
pop
push
add
stos
lods
sbb
imull
cmp
fisubl
rclb
xchg
daa
ret
pop
xchg
xchg
adc
int3
jl
rol
dec
pop
ret
mov
sub
mov
testb
jle
popf
in
and
mov
add
roll
sar
add
movsl
mov
mov
notb
inc
and
outsl
mov
dec
call
clc
xchg
mov
and
lahf
lret
add
or
xchg
jns
cltd
stos
adc
scas
sbb
push
insl
add
call
mov
leave
sbbb
dec
fcmovnb
xor
aam
orb
dec
in
clc
cli
inc
cmp
cld
and
out
fs
js
mov
add
outsl
pusha
dec
adc
test
and
jo
sahf
leave
mov
dec
cltd
add
loope
inc
repz
push
dec
inc
enter
cmc
movsl
xchg
push
push
sti
xor
sbb
scas
and
pop
inc
xchg
jmp
adc
push
pop
xor
jecxz
jbe
into
mov
jae
sbb
or
jle
shll
insb
sbb
or
fistpll
outsl
les
mov
mov
dec
aaa
jle
lds
xchg
jg
sbb
mov
dec
sub
mov
mov
scas
pop
mov
inc
dec
divl
mov
mov
and
xchg
js
or
lea
pop
and
cmp
cmpsb
sub
mov
and
scas
push
pop
xchg
xorl
or
add
es
aad
dec
mov
lea
mov
mov
push
sub
cltd
test
test
fs
pop
mov
jnp
daa
ret
outsl
xor
pop
push
mov
push
andl
sub
aaa
mov
rol
mov
xor
xchg
in
push
or
jb
cmpsb
xor
in
mov
cltd
leave
outsl
fsubs
dec
mov
or
adc
pop
dec
notb
add
fwait
idivb
loop
lret
pop
push
adc
sbb
pushf
sbb
add
negl
fiaddl
arpl
xor
nop
ffree
fildl
inc
add
leave
push
xchg
into
sahf
mov
inc
push
js
mov
in
push
jmp
sub
xchg
je
push
adc
mov
pusha
cmp
sub
jne
sahf
hlt
mov
loop
cmpsl
mov
jge
push
mov
mov
loop
add
and
sarb
xchg
mov
jmp
sub
out
push
mov
mov
add
xchg
fimull
popf
addr16
mov
cs
jge
lahf
push
cld
jns,pn
dec
mov
pop
cltd
test
les
and
inc
repnz
lret
xchg
sub
or
mov
push
and
push
push
mov
setl
mov
inc
mov
or
mov
loop
ja
jl
and
and
sub
dec
adc
ds
shrb
hlt
xchg
and
xchg
dec
test
cltd
jns
or
mov
js
sub
outsb
es
cmp
mov
test
pop
sti
dec
pop
das
fsubrl
mov
outsb
pop
loop
sub
push
or
jo
and
inc
mov
js
sbb
in
sub
and
lcall
call
dec
subb
lret
push
das
outsl
inc
stc
push
daa
dec
sarb
push
mov
fcoml
jo
jno
scas
pop
xor
jle
icebp
push
test
push
sbb
cmp
test
sbb
test
xor
mov
mov
cs
iret
cmp
add
stos
xchg
xchg
addb
lods
test
or
or
and
sbb
xchg
test
inc
or
jo
xor
call
call
pop
icebp
scas
pop
hlt
pop
fwait
xchg
xor
cmp
cmpl
sub
inc
test
pusha
iret
xor
sbb
mov
dec
lock
or
cmc
sti
pushf
icebp
test
lret
frstor
pop
sbb
stos
adc
sub
push
fsubs
pop
lret
jecxz
sub
cmp
movsb
mull
and
xchg
mov
pop
jl
add
aad
lret
insb
ljmp
inc
cmpsl
int
in
xchg
jno
cld
inc
pop
cmp
mov
pop
pop
lods
xchg
fwait
test
xor
or
addl
mov
arpl
fs
jmp
mov
and
inc
roll
stos
in
xor
push
pop
mov
sbb
je
xor
ds
popf
stc
xor
sti
xchg
scas
shr
or
sub
jge
mov
aaa
fcompl
dec
out
cmp
mov
popf
dec
cltd
fisubrs
scas
adc
add
lret
scas
jg
jne
dec
and
xchg
pop
adc
dec
enter
mov
mov
push
sbb
xchg
and
jo
mov
fdivl
mov
cmp
push
adc
adc
shrl
popf
aas
push
ficoms
add
sbb
aad
sahf
mov
ds
pop
push
pop
ja
fwait
iret
or
cmp
jae
loopne
loopne
scas
std
enter
xor
push
mov
pushf
adc
ficomps
xchg
push
stos
cmpsb
add
lret
and
clc
push
xchg
cmp
mov
cmp
jl
out
lock
clc
bound
xchg
or
sbb
lods
or
inc
in
sbbb
mov
push
icebp
in
push
das
sub
insb
push
xor
adc
mov
push
vpmulhw
es
inc
insb
movsl
mov
mov
insb
sarb
mov
dec
xor
subl
mov
pop
dec
ret
lea
lret
jnp
sbb
fadd
pop
pop
and
mov
movsl
xchg
xor
int
repz
push
cs
xchg
mov
mov
test
in
sahf
pop
dec
int3
mov
push
shlb
testl
clc
cmp
inc
mov
hlt
jae
add
enter
push
call
xchg
add
xchg
xchg
outsl
inc
bound
adc
mov
jmp
shl
into
add
adc
push
sahf
or
ljmp
out
in
rcrb
int3
cmp
lock
lods
add
outsl
jge
clc
rcrl
jmp
ss
sbb
mov
imul
mov
adc
addr16
in
mov
in
xor
cmp
lcall
int
push
push
call
out
test
imul
pop
fdivrs
nop
fs
jge
scas
mov
or
mov
lret
ss
dec
add
stos
adc
mov
enter
in
xor
mov
lcall
adc
cmp
enter
pushl
mov
jp
icebp
xchg
and
movsl
push
mov
inc
xor
mov
sti
adc
inc
outsl
ja
lret
inc
jnp
js
inc
inc
push
sbb
jmp
mov
mov
lret
push
es
js
mov
cltd
pop
fwait
nop
sub
xchg
adc
in
sbb
adc
scas
scas
jp
sbb
enter
lods
js
push
in
leave
sbb
mov
mov
cmp
pop
fstps
and
test
movsb
lds
fidivrl
add
cmpsb
jecxz
add
ret
xchg
and
std
inc
sbb
sbb
sar
jns
fs
push
mov
fidivs
cs
inc
repz
icebp
sub
testl
addl
enter
mov
pop
adc
imul
jne
jecxz
orb
jg
shl
cmc
mov
dec
pop
push
out
and
gs
out
sbb
addr16
lret
push
and
test
and
out
inc
inc
lret
adc
and
fildl
or
sub
nop/reserved
push
jmp
hlt
jle
out
pop
lcall
shrl
sub
add
push
mov
fdivrs
cmpl
nop
iret
sbb
push
jg
rcll
or
jns
hlt
push
pop
pop
std
fnstsw
and
stos
into
je
aad
shrl
into
jbe
pop
mov
pop
adc
lahf
xchg
adc
fcoml
mov
jo
daa
aas
pop
push
and
mov
xor
or
pushl
mov
into
insb
mov
sbb
sbb
inc
push
addb
je
out
fadd
xchg
std
int
push
nop
push
sbb
sti
xchg
aam
imul
outsb
cmp
sahf
push
repnz
fnsave
xor
dec
inc
data16
pop
push
cmpsl
mov
inc
enter
ljmp
rol
inc
inc
jl
or
sti
jne
sbbb
push
adc
xchg
inc
addr16
pop
dec
std
push
inc
dec
pop
fs
xchg
mov
jo
imulb
sub
loopne
xchg
push
mov
cmpsb
dec
push
mov
pop
inc
int
push
shll
fcomps
adc
cmp
pop
sub
test
jge
mov
pop
and
out
lods
loop
lea
ffree
idivl
push
push
jne
rcll
sti
js
daa
or
sbb
pop
add
and
and
mov
xchg
leave
xor
mov
adc
or
add
ds
lds
sbb
setae
dec
jns
lods
sub
adcb
sbb
xchg
xchg
mov
test
jne
lea
movsb
cmpsb
out
lahf
xlat
dec
fstl
dec
push
lret
jo
or
jae
rcr
mov
push
test
inc
lods
sub
js
cld
add
repnz
js
push
mov
jge
test
ds
mov
rorb
pusha
fnstsw
cmpb
stos
rclb
and
pop
adc
adc
push
nop
dec
add
mov
divl
call
sbb
mov
xor
and
push
lods
push
mov
sti
les
push
shl
js
or
sub
repnz
loop
mov
addr16
mov
or
xor
sub
inc
out
jae
int3
mov
jg
lds
test
jae
push
mov
push
arpl
sub
shlb
cltd
jecxz
mov
stos
dec
mov
inc
cmp
adc
mov
andb
mov
add
jmp
fmulp
adc
insb
pop
push
mov
or
push
out
dec
mov
jne
addl
das
ret
xor
cmp
mov
rclb
je
lds
sbb
pop
cmp
xor
sti
mov
and
push
xchg
sub
push
test
daa
je
mov
mov
jne
add
or
jg
setbe
cmp
imulb
test
cmp
scas
xor
pop
ds
cwtl
inc
repnz
adcl
mov
ljmp
loop
sub
sbb
fs
sbb
add
mov
lret
mov
fisttps
mov
adc
aaa
add
bnd
add
ja
inc
or
outsl
mov
and
xor
jb
xchg
fdivs
xchg
push
stc
xlat
sbb
andb
mov
es
mov
and
or
lahf
pop
popf
mov
mov
mov
mov
lret
xor
push
inc
dec
cmp
out
jbe
dec
cmc
push
out
push
mull
jle
lea
addr16
sub
call
movsb
cmpsl
push
fistpll
popl
sbb
scas
inc
cmp
xor
negl
fstpl
aad
adc
xlat
sahf
std
mov
mov
mov
cld
fcomip
int
jae
and
es
xchg
fistps
aam
lret
adc
imulb
fidivrs
mov
xor
orl
pop
jge
adc
les
add
mov
int3
mov
in
sub
fstp
pop
lret
ret
pop
pop
daa
cmp
fisubl
push
lock
pop
sbbl
inc
xor
or
shlb
and
lahf
lea
pop
pop
sbb
pop
mov
sub
loop
and
push
scas
or
stos
cmpsl
cld
es
adc
inc
push
fstl
cwtl
sub
push
andl
cmpsl
dec
mov
outsl
jb
mov
and
cmp
es
loopne
out
cmp
dec
adc
aaa
imul
inc
mov
and
lret
mov
shlb
mov
jne
sti
je
ja
push
or
stc
dec
mov
mov
lock
dec
mov
add
cmp
cmp
outsl
mov
shrb
in
ret
fucomp
push
push
es
rol
jae
xor
js
shrl
fisttps
push
and
jmp
mov
dec
jnp
popf
xchg
mov
imul
mov
popf
or
jbe
mov
pop
inc
loope
sets
inc
imul
in
jecxz
jnp
adc
loop
aas
pop
jecxz
adc
loope
xor
arpl
mov
dec
fisubrl
adc
shlb
negb
or
cmp
push
clc
inc
mov
dec
inc
int
pop
aas
mov
in
pop
aam
hlt
mov
dec
lds
mov
dec
push
dec
push
ret
inc
or
xor
cs
fidivs
pop
decb
mov
adc
adc
loop
and
cmp
jmp
ljmp
push
sub
jne
xchg
push
sar
fldenv
or
inc
test
mov
adc
push
fcompl
mov
xor
sbbl
jge
add
sub
add
or
dec
push
adc
mov
iret
mov
dec
idivl
inc
movsb
mov
sub
or
xchg
jnp
mov
or
sub
sub
jns
jmp
int3
sub
outsb
pop
int
lock
sbbl
xchg
cmpsl
push
add
lret
cmp
adc
pop
rorb
fcoms
sbb
data16
clc
cmp
and
sbb
imulb
mov
stc
gs
jo
sbb
fsubrp
in
lds
jge
dec
je
mov
jge
push
mov
xor
insl
lret
hlt
nop
push
ret
cmpsl
pop
mov
and
dec
push
xchg
sarb
cwtl
jbe
sysenter
mov
rcrl
pusha
mov
dec
adc
jo
mov
mov
and
cli
cltd
in
push
in
xor
in
add
movsl
pop
cmc
sub
daa
aam
sbb
es
mov
stos
sub
mov
push
jb
jle
add
mov
jge
push
int3
push
dec
clc
fcmovnb
lock
xor
ljmp
sbb
rorl
mov
cmp
cs
outsb
add
lret
es
movsb
ret
push
push
inc
jne
and
orb
aas
push
adc
into
sarl
inc
popf
xor
fstpt
das
pusha
lods
and
sbbb
add
loopne
cli
stc
mov
and
in
mov
cmpb
adc
ljmp
cmp
inc
leave
mov
arpl
fisubs
jo
inc
mov
ret
outsl
push
xor
mov
mov
imul
aam
push
mov
pop
cmp
dec
in
pop
test
lea
xchg
pop
xchg
sbbl
jne
inc
adc
aas
negl
mov
cltd
mov
ficoms
cmc
add
mov
jmp
mov
fsts
and
or
mov
xchg
xor
or
in
insb
add
adc
lret
leave
es
aaa
mov
in
loopne
loope
fcmovb
aam
dec
adc
pop
pusha
pop
inc
adc
inc
rcrb
xchg
mov
stos
cs
pop
movsb
pop
push
clc
fsubs
and
adc
xchg
int
jno
cmpsb
cwtl
jns
dec
xor
xor
xor
nop
jecxz
ret
je
aad
fisubrs
cld
adc
mov
and
xor
mov
cmp
out
loop
pop
fisttps
lods
add
push
jge
roll
pop
out
xor
movsb
cmp
jg
iret
jns
sub
cmp
sbb
or
nop
mov
scas
mov
imul
xor
in
std
and
jmp
mov
pop
and
je
mov
in
cmp
sub
lea
les
mov
imul
add
jmp
enter
mov
jo
fcomps
les
jne
lea
ja
or
pusha
imul
jno
pop
mov
add
dec
lods
mov
inc
and
push
xchg
mov
or
ja
mov
loopne
and
mov
jno
sbb
and
cwtl
add
mov
cmc
pop
jl
aam
hlt
mov
insl
das
fstpl
mov
xchg
lods
shlb
sub
sbb
shrb
jmp
lahf
sar
pushf
ljmp
addb
ljmp
aas
stos
pop
movsl
daa
push
inc
mov
pop
push
mov
xchg
mov
cld
xor
cmp
lds
pusha
shlb
subb
dec
shl
fadds
pop
iret
stos
repnz
jb
push
ret
dec
ficoml
inc
in
push
out
cmc
into
test
aaa
pop
mov
mov
les
aaa
dec
lds
dec
jecxz
sbb
cmp
or
in
dec
xor
dec
add
scas
lret
outsl
out
out
mov
mov
outsb
and
adc
jnp
aad
imul
mulb
out
out
shl
sbb
sub
cmp
lds
test
icebp
or
push
into
mov
movsl
outsb
xlat
adc
fimull
sub
ret
popf
dec
repnz
jmp
mov
mov
lcall
xchg
push
adc
sub
jmp
lar
jns
rorb
xchg
movsb
xchg
ret
sti
mov
mov
pop
and
add
push
movsb
in
jo
mov
imul
roll
cmpb
cmp
inc
push
and
pop
inc
add
sahf
push
inc
test
iret
jle
fidivs
add
sub
xlat
push
inc
mul
pop
dec
adc
fimuls
sbb
inc
lea
jb
jb
jg
jp
ss
push
xchg
lock
xor
add
sub
cmp
or
mov
xor
mov
int
fsts
stos
xor
cld
aas
jmp
cmp
mov
mov
fs
in
lock
movsb
jg
jns
pop
aaa
inc
popa
sahf
out
pop
in
roll
test
cmp
and
and
andl
orl
xchg
movsl
mov
lods
jne
sub
push
cmc
imul
mov
xchg
and
lret
xchg
xor
fnstsw
sar
out
shr
addb
xor
mov
mov
sbb
sub
addl
fs
add
int
scas
int3
push
cmpsl
icebp
lret
cmp
scas
add
and
mov
and
stos
mov
fwait
sub
shrb
scas
aam
pushf
shll
dec
adc
out
insb
mov
jbe
push
iret
mov
mov
pop
int
push
jae
pop
addr16
jb
lahf
jge
fisttps
mov
fwait
movsb
popf
out
mov
dec
aaa
pop
nop
je
fldl
addr16
jo
adc
xchg
xchg
jle
dec
inc
rcrb
dec
xchg
and
in
sbb
imul
add
cltd
imul
in
push
out
xchg
pop
xchg
push
jmp
push
pop
aas
and
jbe
mov
test
lods
mov
xchg
inc
das
lcall
scas
xor
fs
adc
lods
scas
mov
adc
lds
test
sub
xor
in
fnsave
cmc
shl
jp
cmpl
adc
pop
cmp
movsb
push
data16
mov
mov
add
mov
fisubrs
lcall
and
mov
adc
push
xchg
mov
cmpl
mov
push
les
out
inc
xor
lcall
mov
sbb
jle
lods
sbb
mov
rcll
iret
sbb
out
test
jns
cli
icebp
or
in
mov
aam
out
jp
mov
cli
inc
enter
add
pop
sbb
hlt
xor
mov
int
mov
push
and
shl
fnclex
sub
sub
adc
into
xlat
sub
push
call
pusha
out
mov
add
jle
pop
add
gs
add
adcl
fsts
dec
aad
push
daa
mov
push
inc
cmp
ljmp
jp
cld
mov
fs
jne
mov
xchg
cmpsb
aam
xchg
or
inc
adc
mov
sbb
sub
mulb
in
add
std
mov
mov
xchg
mov
mov
mov
popf
inc
adc
pop
cmp
aas
mov
in
and
mov
sub
mov
arpl
xchg
sub
aaa
xchg
shrl
mov
pop
icebp
insb
push
or
jns
jns
addr16
rcrl
js
negl
movsb
sub
test
ret
repz
pop
jmp
arpl
dec
mov
popf
or
mov
mov
imul
jge
sbb
xlat
xchg
dec
xor
sub
sti
scas
add
add
mov
sub
inc
push
mov
fnstcw
push
cmc
push
and
or
inc
pop
js
lahf
stos
subb
push
mov
mov
pop
je
sar
leave
or
cmp
add
sbb
xchg
test
cmc
ss
dec
jnp
push
inc
dec
icebp
fisttpl
out
cmp
iret
call
add
jnp
repnz
sbb
lcall
es
jle
bound
dec
decb
inc
shll
jno
and
aas
mov
push
jnp
cmp
xchg
mov
rcrb
jne
pushf
adc
test
hlt
lods
and
outsl
push
les
ljmpw
into
and
lret
xchg
push
or
xor
or
inc
cmp
inc
mov
dec
out
mov
or
jae
mov
cld
sub
stos
int3
inc
daa
test
int
mov
cmpsl
inc
sbb
cwtl
cmp
lahf
cmp
ss
cmp
stos
mov
gs
pop
mov
xchg
xor
cld
pop
sub
dec
int3
cld
outsl
lods
mov
pop
les
stos
fnstenv
enter
fwait
bound
rcrb
dec
mov
test
pop
jae
sbb
push
iret
push
push
xor
test
pop
inc
dec
pop
lds
dec
out
fimuls
dec
push
or
cmp
and
mov
gs
popa
test
mov
dec
shl
jnp
repz
cs
xchg
xchg
xchg
lahf
mov
or
sub
add
mov
push
out
jne
adc
fmull
ret
arpl
inc
pop
sbb
shrl
lcall
sub
mov
and
jno
enter
xchg
inc
or
push
mov
movb
xor
push
ljmp
or
xchg
jb
bound
imul
and
movsb
loopne
sbb
rolb
in
out
imul
xchg
movsl
lahf
pop
stos
sbb
cwtl
adc
fiaddl
add
xchg
test
sarb
and
lret
into
dec
pop
les
adc
int3
aas
inc
pop
pop
addr16
adc
js
xchg
jno
addr16
xchg
sti
les
mov
in
and
daa
jno
inc
push
jp
cmp
out
or
mov
call
incl
push
cli
insb
sbb
ret
mov
stc
push
add
push
xchg
mov
or
mov
push
dec
mov
xor
daa
jmp
jae
mov
jo
data16
push
sbb
jp
xchg
jmp
popa
dec
adc
ret
nop
mov
inc
sbb
aam
mov
xchg
inc
ss
popa
test
sahf
lock
cmp
adc
cmpsl
popa
sbb
into
dec
adc
sub
and
cmc
or
leave
cmpsl
cltd
cmp
push
icebp
mov
mov
std
mov
mov
cmp
daa
je
mov
pop
fisttpl
clc
popf
fidivrs
lds
stos
lea
addr16
jmp
dec
movsb
int
lcall
pop
cmp
cmp
jl
xchg
dec
testl
aas
push
pusha
xor
cmp
mov
rorl
in
adc
mov
addb
jbe
inc
out
mov
pop
mov
inc
jne
sbb
inc
pop
xchg
cld
add
and
movsl
imul
mov
push
or
in
sub
push
test
push
rcll
sbb
mov
or
or
imul
and
sbb
outsb
loope
dec
push
sahf
fsubl
mov
pop
lea
test
int
pop
sbb
fstpt
icebp
pusha
insb
lcall
pushf
jl
xor
dec
or
call
faddl
ret
jl
adc
ds
mov
cmc
fisubrl
cmp
mov
pop
mov
fldenv
into
dec
ss
movntq
out
mov
pushf
pop
push
incl
jge
mov
mov
inc
mov
leave
addr16
jne
mov
xchg
pop
movb
lods
cs
xor
xchg
xor
push
into
shlb
mov
ret
or
frstor
or
out
jnp
insl
ss
cmp
loope
adc
arpl
cmp
mov
and
xchg
add
cmpsl
add
fiadds
cmp
stos
adc
or
sbb
pusha
adc
out
push
mov
mov
jmp
sbb
push
outsb
mov
sahf
loope
decl
mov
cmp
sbb
dec
dec
sub
xor
jecxz
and
into
fiadds
push
sbb
or
pop
mov
dec
popf
sbb
cmp
push
mov
jae
scas
inc
std
cmc
lods
repnz
sbb
mov
fists
stos
xorl
adc
scas
cmp
mov
es
arpl
cmp
add
in
out
sub
insb
inc
or
in
in
and
pushf
pop
fstpt
or
jmp
pop
pop
fstl
xchg
lret
jne
mov
or
add
std
movsl
xchg
pop
fnstenv
jle
lret
adc
in
imul
mov
cmp
cmp
ss
xchg
add
push
shll
xchg
lahf
leave
cmp
into
xchg
shrl
fidivrl
pop
ficoms
dec
inc
outsl
pop
xchg
lahf
in
outsl
int3
mov
sub
sahf
fidivl
in
imul
fbstp
sub
in
mov
mov
add
gs
orb
dec
dec
sub
out
imul
add
mov
jbe
lret
inc
pop
jle
inc
test
pop
bound
bound
inc
enter
data16
dec
out
cmp
add
xchg
loop
inc
mov
inc
push
and
popf
out
add
push
cltd
mov
cmp
mov
mov
xchg
dec
cld
jp
fmull
or
jge
dec
cmp
lods
mov
push
lock
outsb
pop
adc
pushf
lret
ficompl
loop
push
pop
scas
adc
mov
out
mov
int3
xchg
jl
add
jne
push
int
push
jae
test
call
popf
adc
jle
push
lods
sbb
mov
push
out
mov
mov
outsl
js
mov
and
ds
enter
loopne
sub
cmp
ffreep
test
jo
stos
sub
ret
loope
or
push
fucomi
mov
jae
mov
adc
jbe
mov
mov
lahf
jns
add
pop
in
test
and
gs
das
add
cltd
lods
cmp
insb
push
es
ret
inc
inc
xor
insb
leave
in
std
in
xor
loop
repnz
dec
mov
push
lret
ja
adc
dec
add
fs
push
call
and
mov
cmp
jecxz
std
adc
das
das
pop
add
mov
es
fiadds
cmc
sub
imul
adc
cmp
aas
pop
lahf
fsts
leave
insb
in
idivl
pop
daa
sub
dec
addr16
loopne
test
and
loop
pop
and
or
mov
repnz
loop
fs
lret
int3
sbb
dec
aad
rcl
lret
stos
ss
pop
jg
mov
cmp
push
xchg
pop
cld
pop
aas
repnz
rcrb
jmp
sbb
mov
ljmp
lahf
inc
mov
jg
ret
push
mov
pop
stos
test
test
mov
lret
in
stc
cli
add
push
repz
mov
loope
xchg
add
adc
jmp
push
dec
fdivr
out
xchg
scas
xor
cmp
push
cmpsb
scas
test
push
lods
pop
or
iret
loop
pop
fstps
sarb
xchg
push
bound
jle
insl
xlat
icebp
cmpsl
jmp
lret
out
sub
or
xchg
ss
ret
or
shrb
add
insb
sbb
ret
pop
sbb
mov
clc
pop
mov
aam
pusha
sbb
rol
mull
mov
movb
std
dec
xor
test
inc
ret
jne
pop
push
sbb
outsl
sbb
or
dec
insb
mov
xchg
push
bound
aad
mov
stos
push
clc
inc
shll
jb
push
sti
mov
je
mov
rolb
popf
roll
xchg
ss
inc
or
xchg
sbb
pop
lds
lcall
sub
popa
decl
dec
mov
xchg
or
cmpsb
xchg
jg
sbb
jne
jl
jae
inc
ret
push
aas
mov
inc
cmpsb
jo
cltd
or
cmp
xchg
fstp
outsl
push
jecxz
and
bound
outsl
inc
test
lods
test
and
xor
scas
jne
out
lds
aas
daa
hlt
jmp
out
adc
mov
push
shll
bound
pop
in
popf
lods
cmpsl
cmpb
minps
ja
dec
push
add
ret
jl
lahf
outsl
lahf
xor
push
mov
sub
sbb
cmp
stc
pop
bound
iret
mov
mov
ror
dec
or
mov
mov
xchg
in
in
lret
aam
adc
push
sub
fsts
push
rorb
jns
cmp
aaa
cmp
inc
pop
push
jnp
lea
xor
in
sub
fld
inc
xor
into
in
push
outsl
into
and
mov
xor
mov
push
adc
pop
dec
sub
sbb
movsl
repz
sbb
ret
cmpsl
jge
imul
in
ja
mov
mov
insb
jno
dec
add
in
add
mov
fs
jge
ss
adc
fstps
rcrb
xchg
push
repnz
pop
cmp
in
shrb
sub
mov
or
lock
out
sets
pushf
push
fstl
pop
or
cwtl
inc
movsl
jbe
sub
fstpt
repz
adc
popf
in
lods
lret
push
adc
xchg
or
xor
into
mov
lods
jnp
and
sahf
scas
fcompl
add
imul
loope
fimuls
push
jo
sub
pop
bound
xor
rcr
xorb
push
leave
mov
rcl
stos
xor
ds
test
pop
xchg
pop
cmpsb
popf
out
push
mov
xor
push
cmpsl
fcmovne
icebp
sbb
shrl
sbb
dec
inc
shr
fistps
popa
stc
pop
xor
test
sti
sbb
subb
fdivs
sbb
mov
dec
adc
mov
out
mov
push
inc
ja
rcll
or
sbbl
jne
shl
cmp
sti
mov
jno
int
inc
sbb
add
pop
ljmp
mov
sub
mov
adc
insb
aad
push
push
popa
push
outsb
dec
outsl
add
sub
orb
xchg
mov
mov
sbb
mov
adc
cmpsl
out
jno
fyl2x
cmpsw
xchg
mov
push
arpl
sub
pop
push
stc
jo,pt
inc
ss
dec
jl
pop
sub
sub
shrl
ljmp
leave
adc
jle
mov
xchg
imul
cmpsb
ss
lret
jp
addr16
mov
into
push
mov
outsb
sbb
stos
out
add
mov
mov
dec
or
xchg
das
sbb
and
and
adc
mov
subl
inc
icebp
clc
xor
cwtl
xchg
repnz
lret
pushf
add
insb
lock
xchg
scas
push
pop
addb
test
std
inc
movsb
and
mov
aad
mov
push
lcall
jbe
jno
xchg
pop
pushf
cmp
jne
pop
or
sahf
inc
jmp
inc
idiv
loopne
sub
into
mov
jno
lcall
lds
sbbb
out
iret
ds
push
cmpsl
and
mov
mov
fwait
int3
pushl
xor
xchg
test
inc
and
orb
mov
fwait
push
imul
dec
add
mov
inc
pop
xchg
iret
or
pop
add
mov
shlb
add
stc
jae
popf
fldt
xlat
adc
pop
lahf
dec
jg
pop
pusha
lock
xor
mov
push
loopne
push
mov
push
cltd
imul
addr16
mov
mov
mov
cli
pusha
imul
call
jl
mov
sub
xor
xlat
jb
rorl
xchg
pushw
mov
dec
push
mov
sub
jnp
gs
and
dec
xchg
cmp
mov
push
pusha
insl
enter
or
and
dec
push
lahf
mov
test
pop
mov
pop
cmp
fstpt
adc
adc
push
out
cmp
and
lret
pushl
adc
shlb
call
inc
xchg
addr16
les
mov
mov
cmc
mov
or
pop
or
cmpsb
mov
shld
arpl
les
mulb
xchg
pop
sub
pop
dec
rorb
or
mov
pop
mov
push
sbb
and
jne
add
mov
mov
pop
xchg
xor
lahf
push
sar
add
test
subb
dec
push
mov
fiaddl
fstpl
mov
fildll
fistps
xchg
xor
in
call
xor
jbe
inc
xchg
cld
cmp
sub
addr16
stos
jmp
icebp
add
push
push
push
mov
mov
sbb
pusha
loop
scas
scas
jl
fsubs
mov
pop
mov
pop
pop
inc
out
mov
loopne
stos
or
orl
jl
movsb
sbb
xchg
dec
cmp
lds
adc
das
sbb
daa
mov
mov
lods
fdivrs
xor
hlt
gs
fwait
mov
adc
xchg
pushf
rclb
push
or
popf
aam
cwtl
aad
rcrb
das
es
jmp
sbb
push
outsl
aam
push
push
out
sbb
cmpsl
xor
stos
jl
add
mov
jl
aad
es
insb
xor
out
fbld
add
in
xchg
mov
jae
xor
into
daa
push
sub
xor
mov
movsl
mov
jg
mov
test
add
not
and
sbb
stos
xchg
mov
stc
fsubrl
mov
cmpsb
dec
insl
mov
inc
push
test
and
enter
out
push
aas
sbbl
xchg
mov
subl
movl
popa
mov
outsb
sub
lcall
and
dec
mov
sbb
lods
cmp
pusha
aas
jne
js
push
ljmp
dec
xorb
dec
call
jmp
xor
or
sub
cli
push
lret
lds
ds
and
cmpl
mov
jge
pop
shrb
jne
lret
sbb
fwait
cwtl
lds
stos
shll
icebp
out
movsb
test
outsl
clc
popa
cmp
adc
xor
jmp
push
or
mov
sbbb
lcall
fcom
icebp
shr
inc
jge
ljmp
or
jno
negl
inc
stc
popa
out
adc
push
jno
lcall
imul
dec
fwait
push
push
shl
xchg
sbb
sbb
mov
jg
shrl
inc
mov
cs
jns
mov
mov
mov
repz
xchg
pop
jge
mov
push
mov
mov
lret
dec
into
repnz
into
or
adc
mov
xor
aad
jecxz
sbb
push
push
push
fs
push
cltd
jmp
loop
mov
fcompl
cmp
push
pop
and
xchg
sub
mov
and
aad
insl
jae
xor
arpl
and
fnstcw
sar
cmp
cwtl
xor
ja
rcrb
cmpsb
push
lods
icebp
rorl
xchg
cmpl
xchg
sahf
push
movsl
mov
pop
mov
cmp
int
in
insl
sbb
xchg
repz
mov
adc
adc
mov
cmp
and
jg
cmp
dec
out
jge
jle
test
push
add
sbb
in
or
bound
ja
adcl
addr16
dec
in
aas
aad
xchg
leave
mov
jbe
push
mov
mov
clc
mov
lods
lahf
int
or
jns
frstor
inc
dec
fmul
xlat
jno
inc
push
stos
loopne
outsl
sbb
idiv
cmp
out
add
add
and
pop
test
sbb
repz
lret
sub
hlt
fwait
xchg
xor
rcl
es
inc
or
push
dec
sbb
mov
faddp
hlt
aad
out
push
ljmp
out
bound
shrl
ror
adc
mov
or
sbb
add
adc
outsb
xchg
pop
out
adc
das
xor
int3
xlat
and
jecxz
enter
and
call
test
js
mov
and
imul
sub
xlat
sbb
mov
push
sub
jno
mov
neg
ret
popa
je
mov
and
call
mov
pop
std
jbe
lods
dec
call
gs
xchg
test
sbb
jo
inc
sub
jp
or
and
je
mov
mov
lods
dec
imul
pop
in
lods
mov
ret
or
shll
clc
ficompl
fstpl
jns
pop
add
lahf
push
xor
or
rol
sti
add
pop
mov
xchg
xchg
cmpl
aas
lock
mov
bound
mov
cmpsb
clc
insl
adc
sarb
pop
stos
test
scas
sbb
xor
scas
mov
insb
enter
insl
sahf
stos
sbb
or
out
repz
mov
lret
std
movsl
stc
mov
repnz
and
ret
adc
push
jle
fsubrp
push
scas
imul
fcomi
aad
inc
cmpl
nop
test
and
cmc
fbstp
out
xor
xor
inc
dec
insl
sbb
xchg
pop
dec
pusha
jo
or
dec
xor
insl
gs
shlb
adc
lds
leave
ret
pop
popa
xchg
nop
sbbl
mov
jp
mov
les
adc
xlat
mov
enter
xchg
stos
call
mov
mov
ret
fists
lret
push
les
std
shrl
sbb
xor
sbb
pop
nop
in
fldl
add
fldcw
jb
mov
pop
and
loop
insl
and
leave
std
lcall
jae
mov
ret
push
inc
and
rclb
xchg
lods
aam
add
test
pushl
jne
inc
js
mov
loop
xchg
in
adc
xorb
cwtl
add
ljmp
or
loope
aas
test
fs
jl
popa
push
es
test
jg
std
in
cmp
xchg
jg
adc
and
mov
add
es
jnp
adc
cli
push
ret
fnstsw
add
popa
dec
fs
xor
test
mov
fnstsw
pop
mov
stos
xor
inc
sahf
shll
jmp
repz
sbb
loop
movsb
cmp
mov
jno
add
std
mov
inc
xchg
into
fs
popa
pop
stc
shlb
pop
icebp
mov
mov
das
or
sbb
mov
mov
pop
mov
sub
js
aad
dec
bound
push
call
dec
jg
jno
lret
xor
popf
mov
cmp
inc
scas
jnp
imul
pushf
in
sub
pusha
mov
jne
xchg
jns
adc
mov
push
pop
push
dec
add
arpl
cltd
loop
scas
in
in
pop
mov
push
in
and
inc
je
sbbl
pop
iret
or
shlb
xor
adc
cmp
test
adc
cmp
sbb
push
and
or
push
cs
ficompl
mov
lahf
adc
decl
inc
sbb
insl
sbb
aaa
shrl
xlat
sysenter
and
popa
push
loop
xchg
scas
je
icebp
jae
fisubrs
mov
je
mov
dec
hlt
dec
or
mov
xlat
shr
ret
lods
mov
jb
or
pop
inc
call
pop
and
and
cmpsb
nop
jecxz
adc
add
ds
mov
push
sahf
cli
jle
in
imul
xor
lock
imul
loope
or
adcl
lret
fistl
mov
addr16
inc
or
xor
push
push
cmp
cmp
sbb
sub
dec
cmpsb
out
inc
mov
mov
scas
xchg
into
cltd
mov
mov
es
xchg
outsb
push
cli
jmp
pusha
fmul
std
js
addr16
popf
sbb
popf
jo
iret
jno
rcr
fidivrl
sti
adc
test
shll
loopne
xchg
cltd
dec
push
sahf
mov
in
jo
je
hlt
negl
int3
std
nop
cwtl
mov
dec
push
repz
add
lcall
das
inc
icebp
fsub
in
idiv
int
scas
sbb
and
pop
and
mov
lea
add
pop
or
and
dec
imul
ds
dec
inc
dec
xor
out
fcomip
rorb
cli
push
mov
pop
mov
jge
mov
xchg
out
and
push
bound
dec
lock
hlt
jmp
ficoms
pop
aam
jmp
mov
les
adc
push
mov
out
jmp
imul
jb
stc
lods
mov
xor
lahf
inc
mov
mov
jmp
adc
sbb
adc
cwtl
cmp
inc
xor
addl
cmp
lock
pop
mov
push
loopne
adc
fistpl
cltd
inc
insl
mov
rcrb
add
cmp
sbb
pushf
rorl
sbb
push
xchg
or
xchg
jl
sbb
and
dec
out
push
mov
cmp
dec
lods
mov
aad
mov
fbstp
int3
insl
pusha
mov
ja
mov
movsl
mov
and
decl
cli
loop
cwtl
mov
and
mov
xor
cs
repnz
aas
lret
movsb
or
jne
dec
arpl
ja
cmpsb
or
sbb
sub
mov
jns
push
mov
ret
leave
iret
mov
popf
cmpsl
lds
mov
adc
jnp
mov
out
js
fsts
cltd
jns
js
or
loope
or
sbb
dec
lods
rorb
decb
push
sub
cmp
mov
xchg
rorb
stos
lock
inc
sbb
mov
data16
popf
cmp
fdivrs
out
jle
mov
scas
and
loop
inc
push
push
sub
cmp
inc
inc
jbe
out
dec
xorl
push
xchg
loop
imul
mov
out
aas
xchg
bound
xchg
sub
inc
mov
sub
pop
dec
loopne
imul
push
subps
stc
or
out
cmpsb
into
dec
push
mov
and
pop
jle
cmp
adc
test
cmpsl
int3
mov
xorb
xchg
cltd
clc
js
mov
shll
xor
xchg
fisttps
mov
xchg
adc
xchg
pop
insl
sub
addl
mov
pusha
enter
pop
incb
outsl
dec
jo
scas
or
in
ljmp
adc
outsl
xor
in
aas
jmp
xchg
mov
jmp
loop
dec
ljmp
das
loopne
sbb
outsb
imul
ja
push
add
call
pop
mov
jo
bnd
iret
cmpsl
lcall
inc
testl
sahf
sbb
repz
cmpl
mov
pop
stc
or
dec
pop
inc
aad
in
sbb
mov
push
mov
pop
pop
cld
dec
or
cmp
insl
mov
and
xchg
push
mov
jo
dec
lock
outsl
movsbl
sbb
scas
ficoml
xor
xchg
jae
xchg
repz
xor
fisttpl
std
sub
xor
insb
push
sti
adc
dec
loopne
mov
push
dec
mov
mov
jle
sub
movsl
sar
pop
inc
mov
stos
imul
aaa
cmc
mov
mov
je
mov
sub
and
popf
push
mov
insb
loop
and
scas
jno
rcll
jge
scas
nop
adc
dec
mov
daa
outsl
jl
sbb
rcr
lcall
shrb
movsl
std
clc
shll
jnp
sbb
xchg
lods
xchg
adc
int
mov
iret
popf
lods
push
outsl
mov
hlt
popa
mov
jl
and
cli
inc
xor
mov
rcrb
and
jne
mov
adc
cs
mov
dec
mov
add
repz
pop
xchg
loope
lds
popa
insl
and
mov
xchg
std
jb
enter
jmp
nop
cltd
mov
clc
sbb
in
xchg
xchg
cmp
notb
int
lcall
mov
jbe
inc
fildll
test
enter
pop
iret
test
xchg
clc
lret
loop
dec
mov
cli
aas
sbb
stos
scas
ljmp
push
pop
sub
icebp
pop
js
loope
jae
add
mov
loope
inc
aam
add
xor
xor
xchg
lahf
iret
loopne
xchg
stos
mov
push
mov
sarb
pop
nop
ds
xor
and
xor
lgs
cmp
or
scas
push
pop
mov
stos
in
fdivl
ja
aaa
enter
push
adc
ficoml
out
scas
xor
mov
or
out
dec
sub
shll
pop
jmp
push
sbb
mov
adc
loope
fisubs
sub
cld
fisttpl
push
mov
je
mov
aas
test
pop
sbb
xchg
jl
mov
push
push
xor
leave
adc
mov
xor
cmp
cmp
test
repnz
mov
loopne
mov
sbb
mov
cwtl
in
cmp
dec
insl
or
je
mov
imul
mov
ret
mulb
mov
mov
add
push
mov
rclb
jb
push
or
rcr
mov
int
xchg
jl
push
lahf
loopne
cli
leave
jae
add
stc
leave
xchg
out
xchg
pop
xor
mov
cld
xor
ds
add
mov
mov
fcmovne
or
mov
fistpl
pop
aaa
jp
int
mov
mov
repnz
icebp
mov
call
mov
rol
imul
adc
xor
lcall
cmc
and
and
dec
cmp
xor
add
sar
mov
push
cli
int3
ffreep
adc
cli
mov
adc
or
adc
dec
movnti
pop
loope
mov
das
dec
jne
mov
pushf
icebp
dec
jge
arpl
adc
in
dec
or
inc
rcll
lods
add
aad
test
and
test
mov
xor
adc
test
mov
or
ja
jecxz
dec
imul
jle
push
push
addb
int3
mov
aaa
jae,pn
sti
xor
out
adc
inc
sarb
lret
push
or
xchg
adc
mov
stos
adcb
and
iret
mov
xchg
xchg
les
xor
adc
xchg
lea
clc
pop
ljmp
js
mov
stc
in
test
dec
dec
pusha
aaa
cmp
adc
out
cwtl
mov
sbb
mov
push
sti
cmc
xor
imull
cmp
pop
lods
rcl
decb
or
xchg
insl
pusha
pop
cmp
xchg
pop
es
inc
jb
pop
jbe
mov
xchg
fstps
insl
mov
inc
daa
lea
xchg
xchg
lea
or
mov
shr
cmp
in
aaa
cmp
cmp
enter
pop
mov
xor
test
push
jbe
data16
cmp
jmp
imul
outsl
xor
jg
in
push
mov
cmp
or
jl
xchg
insl
and
cltd
shrb
mov
cmp
aad
icebp
dec
and
add
inc
movsl
cld
into
mov
xchg
dec
stos
xorl
scas
add
popf
adc
adc
cmp
dec
arpl
out
ljmp
and
popl
shl
or
adc
negl
inc
push
pusha
xor
cli
add
popa
frstor
jl
pushf
inc
push
push
out
add
pop
pop
into
sbb
into
inc
lea
inc
jmp
in
xchg
in
push
test
push
loope
add
insl
xchg
scas
mov
or
test
or
movl
push
add
xor
jge
repz
lea
testb
xchg
dec
cmc
inc
sub
rol
or
rclb
movsb
dec
rcll
leave
stos
sbb
fdecstp
jmp
mov
pop
test
in
int3
cmp
enter
sub
push
incl
mov
repnz
adc
popa
mov
int3
cwtl
mov
sbb
shld
push
lea
cs
sarb
stos
and
cmp
push
adc
pop
mov
mov
cmp
cs
test
pop
pop
aam
cmp
sbb
mov
xchg
js
ja
and
out
lret
or
xor
cmpsl
fdivr
jle
xchg
mov
jl
aaa
into
cmp
mov
xchg
push
cld
loope
lock
pop
inc
je
mov
push
fistpl
daa
mov
mov
cmp
jbe
cmpsl
mov
fwait
outsl
mov
aaa
call
or
dec
nop
bound
dec
inc
ficoml
inc
cmp
xor
mov
jmp
cmpl
ja
xor
out
mov
xor
rcrb
or
dec
mov
add
cmpsb
ficoml
mov
addr16
and
fwait
das
leave
repnz
pop
imul
scas
jmp
jle,pn
int3
roll
push
add
stc
or
mov
cltd
or
jbe
cmpsl
cmp
clc
pop
inc
and
ficompl
push
ret
sahf
hlt
cmp
add
fists
sahf
dec
mov
mov
mov
xor
js
jecxz
sbb
mov
dec
ds
mov
or
int3
jns
mov
cmpl
sbb
movsl
fimuls
xchg
popa
iret
jae
insl
pop
cmpb
inc
and
jmp
pushf
mov
mov
push
sub
repnz
daa
movsb
aas
je
in
shlb
and
jae
out
fsubrl
cmp
movsb
jmp
cmp
fs
add
push
clc
push
repnz
js
es
adc
jmp
movsb
pusha
lea
sub
adc
sub
and
pop
sub
mov
lock
inc
icebp
call
add
insl
scas
cmpb
or
jae
enter
cmp
and
pop
adc
jg
mov
and
les
and
adc
rol
inc
dec
scas
subl
in
or
aaa
shrb
test
inc
lahf
fmull
scas
clc
jg
push
cmp
mov
iret
xchg
out
jl
lods
pushf
sbb
andl
or
push
pop
dec
mov
dec
jno
out
test
jmp
cmp
fldt
fsubl
jno
fmuls
jbe
aas
enter
mov
iret
out
cmp
pop
mov
mov
push
mov
and
loope
pop
jo
int
xchg
mov
cmp
or
daa
rorl
sub
test
push
xchg
andl
add
inc
into
jns
xorl
dec
push
pop
and
ljmp
dec
lea
ljmp
jno
push
inc
inc
popa
and
add
cmp
hlt
jae
lds
popa
add
push
jl
lcall
inc
jnp
stos
jnp
rcl
enter
push
lods
xor
add
push
adc
iret
push
cmp
or
inc
pop
mov
cmpsb
cmp
dec
mov
push
xor
idivl
dec
jnp
outsl
mov
int
popf
cmpsl
sbb
aam
xor
aam
pop
push
xchg
aaa
inc
adc
mov
jmp
xor
add
in
pop
jp
jnp
insl
out
cmp
icebp
push
adc
mov
xlat
jl
mov
mov
jmp
fimuls
pop
xlat
out
xchg
push
dec
jp
inc
inc
rorl
loope
lods
and
xlat
insl
test
out
cmp
sbb
xchg
adc
lods
adc
outsl
mov
in
cmpsl
pop
lods
pop
lret
jb
shll
outsl
fildl
je
test
and
xor
sbbb
jae
stos
xlat
in
daa
add
call
lods
fisttps
fsubrs
jae
clc
pop
fs
push
testb
pop
pusha
jl
sub
fadd
push
lock
test
imul
mov
fadd
add
decb
das
xor
pop
pop
pop
mov
repnz
test
mov
cmpsb
jecxz
dec
jno
popf
clc
cmpb
push
xchg
nop
dec
sbb
pusha
fcmovb
push
pop
sbb
xchg
adc
sbb
push
mov
mov
cld
dec
mov
push
ror
cmp
adc
cs
repz
rclb
js
sub
ss
bound
rolb
fstpl
push
mov
or
loop
ds
inc
mov
and
int3
mov
out
or
xor
std
das
mov
fidivrl
fisubl
iret
pop
add
jecxz
sti
push
jnp
lea
cmp
inc
fdivrp
push
ret
jbe
decl
push
inc
lock
push
fidivs
mov
bound
sub
imul
movsb
mov
mov
adc
push
fsubrs
shrl
mov
jmp
dec
sub
xchg
add
stos
stos
xchg
test
adc
push
pusha
call
push
inc
imul
lret
nop
sub
bound
cmp
imul
dec
mov
flds
jge
pop
sahf
ret
mov
inc
inc
imul
mov
mull
outsb
push
inc
mov
fcmovu
test
inc
in
imul
jb
sarl
fisttpl
ret
dec
mov
sbb
clc
outsl
hlt
sbb
je
push
jns
mov
push
and
push
cmp
push
push
sbb
jl
add
cmp
add
mov
jbe
jnp
add
xchg
push
add
stos
cld
jge
mov
cmp
add
dec
sbb
cld
movsl
and
adc
inc
inc
cmp
or
daa
daa
pop
add
in
rorl
jb
rorl
or
jns
xorb
xchg
dec
dec
jmp
lret
xchg
xor
shll
or
pop
dec
xchg
test
xor
popa
dec
iret
mov
xor
ficoms
sub
mov
enter
rolb
dec
loopne
cmovo
push
push
cltd
cmp
sbb
arpl
lcall
mov
inc
inc
cmp
es
pop
cmpsl
stos
call
xchg
jns
or
add
pop
test
negb
mov
jo
push
jle
jo
lds
xchg
jns
inc
push
sti
dec
addr16
mov
or
ret
enter
aam
outsl
add
ret
dec
xor
jne
pop
outsb
mov
dec
sbb
pop
mov
mov
jmp
xchg
xor
loopne
aad
sbb
movsl
jae
mov
inc
mov
lds
subl
push
add
or
icebp
sub
out
arpl
fwait
mov
rcll
loopne
loope
inc
xchg
pop
scas
test
jnp
ljmp
sbb
mov
dec
mov
jp
jns
pop
jb
push
mov
test
inc
sub
lods
cmp
inc
aas
insb
dec
add
gs
adc
mov
mov
push
pop
orl
jecxz
into
aas
lret
or
repnz
xchg
aam
or
ret
rcrb
push
mov
stos
in
xchg
sbb
movsb
add
xor
scas
xchg
imul
xchg
add
cmp
and
hlt
mov
movb
mov
mov
cld
cmp
fwait
inc
jge
push
jge
adc
pop
into
or
and
mov
movb
fstpt
cmp
and
pop
xor
cmp
enter
push
imul
mov
int3
orl
or
aad
pushf
es
sti
pop
push
push
dec
aam
iret
sbb
lcall
iret
inc
gs
jnp
fsubrp
scas
movsl
loopne
add
js
push
pop
xchg
sbb
mov
jl
sub
push
lahf
cmpsl
adc
sbb
or
scas
std
shll
push
sbb
jns
mov
imul
pop
sarl
bound
mov
pop
aaa
push
gs
popa
lcall
xchg
xchg
clts
inc
loopne
cmp
or
sarb
lods
jl
ljmp
mov
lahf
mov
inc
pushf
aad
mov
lock
sti
jl
add
nop
decb
and
out
push
xor
add
pop
adc
loope
xchg
pop
mov
jns
dec
gs
adc
and
stos
je
in
pop
notb
in
push
gs
and
mov
cmp
pop
lret
sti
sti
pushf
lods
adc
cmpsb
mov
sahf
outsl
les
or
jne
outsl
fiaddl
mov
jae
imul
xlat
and
stos
push
test
cltd
inc
jle
nop
pushl
bound
jp
pop
sub
sub
mov
mov
sub
mov
iret
jns
xchg
stc
movsb
cmp
cmp
add
sub
adc
psrlq
clc
xchg
out
movsl
inc
pop
mov
inc
push
inc
leave
jmp
aam
pop
adc
or
test
imul
aad
jne
jg
mov
adc
lds
je
mov
loop
add
sub
lods
cmp
imul
pcmpgtd
sub
movsl
dec
lea
jb
andl
cld
xchg
push
repz
pop
lret
or
sub
outsb
and
psubusw
das
stc
jg
cmp
lods
add
inc
add
xchg
cmp
pop
fwait
push
cmp
cmp
vphaddwd
imul
mov
cmp
adc
cltd
std
enter
xchg
cmp
adc
push
out
pop
sbb
aaa
iret
insb
js
fsubr
cmp
and
inc
mov
sub
pop
cltd
int3
xlat
loop
clc
in
cmp
push
ret
jns
cmpsb
xor
xchg
fidivrl
hlt
sbb
andb
cli
cmp
cmp
adc
out
popf
rcll
xchg
cs
repz
call
stos
or
ret
inc
xchg
inc
les
mov
ret
mov
int3
mov
mov
pusha
loope
pop
adc
lahf
cs
loope
in
sbb
xchg
call
pop
sbb
sbb
mov
cwtl
aas
cltd
mov
nop
dec
or
ret
adc
paddusb
cld
aas
out
lcall
fsubs
rolb
inc
or
push
inc
add
mov
movb
test
cmp
mov
sub
nopl
jge
je
xor
and
mov
sarl
and
arpl
gs
fidivs
data16
hlt
add
jg
arpl
mov
fwait
or
mov
mov
cmp
sbb
jmp
cmp
ja
in
or
dec
dec
jbe
jp
cltd
mov
dec
jge
inc
psubd
mov
dec
adc
mov
cmp
and
push
movsl
push
iret
or
mov
fs
cmp
f2xm1
jbe
jbe
mov
dec
in
jns
inc
sub
test
cmpsl
fcomps
adc
and
sbb
test
hlt
jnp
clc
mov
pop
int3
cmovo
imul
sub
mov
sarb
enter
loop
xorw
push
cmp
sarl
xchg
push
add
fistps
dec
mov
xchg
idivl
dec
sub
lcall
xorb
rcrb
scas
icebp
sbb
ret
or
test
mov
mov
mov
mov
sub
push
mov
adc
outsb
pop
imul
mov
cli
push
aad
pop
xchg
sbb
lret
ja
stos
mov
int
xor
xor
enter
jne
fldl
rorb
sbb
outsb
movsl
stc
cmp
insb
cmpsl
into
popf
arpl
fsts
mulb
rorl
dec
out
mov
jg
jl
jmp
out
shl
pop
jne
sub
cmp
test
xchg
in
insl
inc
enter
xchg
adc
sbb
aas
mov
mov
jne
testl
xchg
mov
insb
xchg
sbb
fwait
fcomps
imul
cld
cmpsl
adc
push
or
pushf
mov
sub
je
cli
imul
lret
xor
fidivs
sti
jmp
sti
fs
mov
call
and
insl
mov
sub
sub
cltd
leave
push
add
mov
imul
mov
test
das
test
daa
inc
add
xor
cmp
jp
push
ret
dec
inc
mov
mov
cs
push
pop
stos
insb
les
into
hlt
addr16
jo
mov
es
dec
mov
test
lahf
cmp
repz
ss
loope
mov
adc
jne
fwait
ja
xor
cmpsb
add
lods
cli
push
lock
testl
mov
pop
test
ja
jbe
mov
int3
mov
int3
pavgw
sbb
lods
cld
xchg
mov
sbb
enter
jae
hlt
xchg
jae
test
cmp
push
sbb
mov
das
mov
dec
mov
mov
enter
into
mov
rcll
stos
out
ja
clc
pop
arpl
lahf
adc
call
insb
fmull
mov
adc
add
leave
lahf
mov
mov
pop
outsl
mov
lock
jmp
mov
or
scas
icebp
clc
add
adc
into
dec
ficompl
jp
iret
repz
int
push
add
aam
dec
sbb
pop
mov
out
fs
pop
imul
in
pop
mov
or
pop
xchg
cmp
jp
jge
mov
addl
jl
imul
push
int3
jmp
sahf
stos
push
pop
dec
sub
mov
es
sub
arpl
push
inc
adc
sarb
movsb
mov
into
jne
jl
icebp
in
pop
jecxz
xorb
mov
mov
mov
mov
or
and
out
dec
jno
cmc
mov
out
insl
jb
sub
into
mov
jle
mov
pop
mov
aas
xchg
cmp
jb
das
cwtl
hlt
addr16
addr16
cmp
out
inc
clc
mov
xchg
nop
mov
int
in
xchg
mov
iret
cs
inc
es
test
out
xlat
leave
fdivrp
inc
stos
inc
add
xlat
adc
adc
lods
test
add
rolb
pusha
add
aas
shlb
jbe
and
xor
xor
inc
cmp
int3
dec
sub
cmc
mov
lods
arpl
dec
pop
rol
dec
pop
fmull
sbb
out
xchg
xor
mov
and
ds
lahf
into
in
add
mov
out
shrb
push
stc
lods
dec
xchg
cmp
or
mov
and
fdivs
sti
cmp
add
daa
notb
ja
stc
inc
xchg
rcrb
in
adc
cld
push
int3
adc
sbb
dec
and
fstpt
add
out
shrb
or
jb
pop
mov
addb
outsl
adc
ret
int3
cmp
punpckhdq
jnp
in
xor
mov
ds
or
sbb
fisubl
lods
mov
xchg
incb
sbb
xchg
test
int
pop
xchg
xchg
xchg
push
movl
ss
jge
lods
cmp
add
nop
inc
adc
mov
cmp
imul
loopne
mov
inc
in
pusha
fstpt
lods
adc
pop
push
cmova
outsb
ret
insb
mov
cmp
mov
test
inc
sub
pusha
push
cld
sti
or
add
loopne
push
sbb
inc
add
loopne
mov
sub
clc
addr16
add
cli
in
arpl
jecxz
mov
aam
nop
inc
cmp
mov
adc
jno
mov
aaa
out
jbe
xlat
fsubs
jl
inc
jle
xchg
in
cmp
push
or
mov
push
shlb
lods
sub
jns
sub
inc
icebp
and
xchg
mov
xor
stos
xchg
mov
push
and
arpl
fidivs
pcmpeqb
inc
mov
cs
cmp
shr
mov
add
and
xlat
add
lahf
sub
lods
rcrb
mov
add
cmpb
add
rclb
test
xchg
sbb
cmp
or
sahf
jbe
ret
add
cmc
movb
and
icebp
mov
nop
sti
data16
add
cmp
xchg
pop
mov
ds
repnz
out
dec
ds
adc
mov
pop
into
aad
mov
movsb
push
cli
mov
mov
enter
push
jns
adc
call
or
xor
fldl
mov
dec
arpl
xor
dec
stc
mov
jle
or
add
push
mov
xchg
xor
xor
jo
insl
or
repz
jmp
sti
fisttpll
repnz
cmpsb
pushf
cmp
sbb
mov
adc
addr16
testb
mov
imul
pusha
stos
xor
int3
fcoms
dec
or
insl
adc
inc
cmp
push
xlat
adc
pop
std
dec
aad
movsb
icebp
pop
int3
aam
sub
or
jp
lret
mov
lret
cwtl
sbb
fsubs
repnz
xlat
movsl
lret
nop
test
cli
or
ljmp
xchg
fwait
adc
loop
pop
shlb
loope
sub
aas
add
jne
sub
cmp
jns
ds
mov
push
loopne
or
movl
fwait
jg
xchg
test
test
rcrb
lret
loope
add
js
and
and
out
push
fstpl
and
pop
xlat
push
xor
push
add
inc
sbb
int
fildll
rcrl
adc
cmp
sbb
clc
dec
push
aad
mov
pop
cmc
shlb
jnp
inc
adc
hlt
mov
and
cmp
shrb
int
aas
out
and
outsb
popf
sbb
ss
pop
mov
sub
xor
leave
xchg
jno
and
sub
push
dec
bound
gs
sbb
leave
idivb
clc
mov
add
mov
and
pop
cltd
cltd
pop
repz
push
xor
rdpmc
pop
push
dec
mov
sbb
ja
push
mov
lods
popa
icebp
mov
test
cmp
pop
adc
sub
outsl
xchg
in
in
imul
orl
fistps
dec
aaa
inc
and
cs
xchg
mov
pop
aad
cmp
mov
gs
aaa
push
roll
aaa
adc
adc
xor
jo
jbe
add
out
imul
iret
mov
leave
mov
or
sahf
push
addr16
push
sbb
jbe
jb
scas
inc
adc
mov
aas
sub
pop
js
jecxz
dec
loopne
test
sbb
xor
xor
lret
loope
pop
jo
mov
out
jg
lret
xchg
mov
inc
lea
in
xchg
out
faddp
lahf
nop
lds
out
stos
jp
and
imul
out
enter
cmpsb
in
push
mov
nop
jae
repnz
test
leave
mov
flds
adc
push
outsb
repz
aaa
ret
insb
sub
inc
xchg
inc
fistpll
out
add
dec
pop
cmpsb
pop
cmp
sbb
pop
in
arpl
sub
stos
inc
in
pop
lcall
jmp
daa
bsf
ja,pt
mov
gs
mov
xlat
adc
in
aam
xchg
sbb
cmc
sahf
push
sub
sti
int
cmp
push
add
mov
in
decl
outsl
push
jmp
adc
cmp
insb
and
xchg
dec
mov
movl
les
cs
cmp
fdivrl
xor
adc
daa
outsl
decb
dec
mov
movsb
out
in
add
mov
inc
add
out
and
popf
scas
bound
mov
ss
imul
popf
and
ret
sbbl
jne
mov
test
js
xor
mov
add
xchg
mov
icebp
push
cld
cltd
jle
add
push
dec
pop
dec
or
mull
sub
lahf
xor
pop
pusha
adc
out
xor
negb
dec
cmp
cmpl
jns
jns
dec
data16
mov
and
dec
jno
push
xor
cmpsl
mov
out
add
enter
mov
push
sbb
idiv
shll
lret
cmpsb
add
dec
lods
nop
nop
in
popa
dec
outsl
jmp
mov
stos
sti
stos
mov
into
push
ds
cld
push
push
lds
xor
mov
mov
ret
mov
cmp
mov
sub
je
ljmp
adc
repz
iret
cmp
cmc
inc
jns
mulb
hlt
icebp
push
mov
cmp
cmpsl
daa
data16
gs
cmp
mov
xor
xor
loopne
sub
dec
imul
mov
test
xchg
inc
nop
cmp
jl
push
imul
stc
inc
out
adc
adc
sub
outsl
ret
iret
cmp
mov
imul
dec
xor
cmp
insb
in
scas
and
inc
lret
add
aam
sahf
jmp
iret
mov
subl
sub
inc
inc
add
add
mov
jl
fcomps
outsl
xchg
pop
jb
outsl
call
popa
clc
js
outsl
mov
cmpsb
xchg
or
jns
mov
addr16
daa
divl
mov
scas
int3
loopne
sbb
xchg
test
ret
in
sub
filds
enter
stc
jbe
loop
lcall
jp
cmp
sbb
cmc
gs
fsubp
mov
sbb
jge
mov
pusha
pop
testb
add
jns
clc
movsl
add
mov
sub
add
push
mov
scas
js
sti
in
icebp
pop
jnp
push
les
adc
insl
out
or
scas
fldt
popa
leave
pop
aad
aaa
negl
mov
shrb
rcll
cmp
roll
insl
cmp
popf
loope
xor
aam
mov
jmp
out
dec
addr16
out
lret
or
hlt
xchg
mov
lret
cltd
mov
cmp
dec
mov
stos
pop
add
leave
add
pop
inc
out
pop
pop
leave
mov
rolb
mov
jmp
jmp
pop
scas
dec
cld
cmpsb
iret
pop
loope
jge
mov
mov
push
cld
or
inc
xchg
xchg
data16
lcall
in
mov
push
je
inc
stos
jp
jb
sti
mov
repz
xchg
bound
push
hlt
mov
int
dec
xchg
loope
pop
call
inc
mov
mov
sbb
shrb
vpaddusb
imul
inc
popf
jl
sub
dec
jb
mov
lods
push
and
shrb
xchg
test
inc
sbb
sub
sub
and
mov
loop
pop
mov
rcr
in
rol
pushf
int
and
jl
lods
ljmp
fdivl
rorb
pop
sbb
lods
dec
inc
fsts
mov
dec
and
sbb
adc
push
jmp
out
pop
and
dec
dec
aas
jo
cmc
fimull
xor
mov
int3
or
mov
les
int
xchg
mov
xchg
loope
pop
fcmove
mov
cmp
pushw
mov
mov
mov
push
or
sbb
push
mov
and
inc
push
cmp
lret
psrld
outsl
push
jmp
movsl
sbb
mov
imul
xlat
les
mov
stos
movlhps
mov
sub
jo
movsb
lret
inc
and
jecxz
push
cmc
mov
cld
jo
lods
rcrb
es
mov
adc
add
mov
shrb
xor
adc
aam
inc
mov
in
xor
movsb
and
cmp
jl
mov
pop
movsl
adc
insl
repnz
pushf
mov
inc
faddl
xchg
push
adc
insl
mov
push
xor
nop
adc
hlt
mov
and
push
add
jo
cwtl
inc
pop
adc
and
pusha
push
add
jbe
lods
mov
shlb
ret
cmp
fisubrs
pushf
shrb
popa
scas
and
push
inc
fildll
jnp
test
lret
dec
jbe
aad
mov
mov
xchg
lea
cmpsb
out
call
mov
mov
jp
sbb
or
test
cli
rcrl
out
sbbl
mov
push
xchg
xor
push
mov
adc
pop
and
dec
jmp
cli
xchg
lret
pop
adc
mov
mov
sahf
sbb
jge
xor
cmp
call
arpl
sahf
ret
aas
dec
sar
or
pop
lods
mov
adc
xor
mov
mov
mov
dec
pop
loopne
mov
fidivrs
negl
jge
and
arpl
inc
pop
xchg
push
mov
loopne
imulb
mov
popf
push
lock
test
popa
xchg
mov
setl
dec
lock
loopew
xlat
jle
loop
xor
aam
pop
out
xchg
lds
test
push
bound
and
mov
add
jp
js
roll
jnp
xchg
sahf
inc
mulb
lcall
and
scas
xor
jbe
out
add
shr
mov
mov
fistpll
outsl
int3
outsl
push
pop
and
jb
mov
nop
mov
xorl
mov
push
enter
jbe
xchg
cmp
addr16
lret
jmp
inc
xchg
imul
mov
aam
cmp
cmp
fcmove
inc
dec
popf
sti
insb
sub
lock
lcall
add
repz
arpl
pop
mov
pop
push
cld
and
push
mov
sbb
xchg
pop
cmp
pop
or
cmp
mov
aas
mov
imul
pop
dec
push
int
divb
xorb
scas
jecxz
mov
shlb
test
fbstp
jo
call
ja
and
mov
sub
insl
or
in
repz
test
mov
add
lret
cmp
in
sub
add
or
jbe
dec
push
add
mov
push
mov
jne
out
xchg
scas
movsl
push
ficoml
cmc
cmp
stos
or
in
mov
mov
es
ljmp
fimull
fcomps
pop
enter
in
push
mov
cltd
imul
loop
cmc
add
nop
cmc
out
mov
or
mov
vmovupd
sub
es
in
scas
dec
stos
movsl
pusha
mov
jg
ljmp
sub
dec
addb
popa
push
imul
movsl
repnz
jns
loop
cli
pop
mov
icebp
movsl
lcall
mov
out
stos
cld
add
xor
inc
push
stc
clc
sub
lods
lods
push
outsl
and
mov
das
sbb
sbb
in
dec
add
leave
push
push
jno
leave
sbb
add
aam
xchg
xlat
rol
mov
xor
jge
push
fcomps
imul
xor
lcall
sbb
add
cli
scas
cli
jb
imul
cld
cmp
dec
mov
cmp
jae
mov
sbb
shrl
aaa
cld
xor
in
movsb
jge
es
and
cmp
inc
and
psrlw
cmp
inc
or
sbb
sub
sbb
mov
aam
adc
in
fmul
cli
sbb
div
inc
mov
cmp
jge
jge
mov
adc
push
add
data16
inc
fcomi
mov
lahf
xor
loope
das
or
jge
inc
adc
xchg
ljmp
inc
aaa
sub
inc
and
xchg
movsl
inc
test
dec
inc
sub
xchg
data16
dec
fcmovu
stc
adc
in
test
jbe
daa
dec
stos
mov
cs
in
test
je
xchg
pop
sbb
hlt
or
mov
xlat
mov
pushf
inc
aad
lods
mov
xchg
int3
pop
cmp
sti
jnp
push
cltd
inc
mov
scas
push
mov
rorb
add
addr16
fstpl
sahf
sub
mov
std
shrb
pop
push
in
pop
and
clc
popf
sbb
pop
outsb
in
mov
push
jle
je
jae
daa
and
fwait
pop
dec
dec
test
dec
mov
inc
loopne
dec
pop
insb
stc
mov
inc
in
lahf
lock
add
scas
or
call
jge
test
out
sub
and
mov
fwait
adc
and
mov
push
shrl
lea
sub
sbb
fsubr
lret
adc
jle
in
fstps
fwait
hlt
mov
mov
pusha
inc
and
pop
stc
icebp
shlb
sbb
cmp
inc
mov
jns
mov
adc
inc
cmpsb
mov
stc
cmp
push
mov
mov
cmpsb
lock
repnz
or
cmp
imul
pushf
cmp
pop
pop
dec
addr16
add
lahf
testb
mov
mov
jecxz
fs
xchg
jns
lds
sbb
int
pop
xchg
mov
rorl
or
stos
mov
sahf
in
imul
aad
mov
dec
outsl
adc
pushf
or
in
pop
adc
inc
out
insb
les
or
mov
mov
cmp
mov
jmp
xchg
cs
std
insl
or
sbb
ret
shll
ficompl
add
add
cltd
push
cmpsl
outsl
lahf
addr16
push
cli
cld
lret
shrb
mov
add
xchg
and
es
push
dec
dec
std
xor
pop
into
scas
cli
lret
jo
mov
ror
mov
pushf
inc
push
add
pop
or
and
mov
out
outsl
andl
imul
mov
lods
push
mov
adc
add
sub
ds
ja
sbb
repnz
addr16
add
lahf
xor
jns
pop
pop
out
add
xchg
loope
out
into
lcall
jno
stos
sti
aas
jae
out
xchg
fwait
dec
jns
fst
arpl
loop
sbbb
cmpsb
push
sbb
push
jbe
mov
sub
inc
xchg
stc
push
or
out
fidivrl
xchg
jecxz
or
cwtl
popf
inc
xor
aam
in
jo
scas
rep
in
sbb
lods
sbb
mov
sub
dec
jae
pop
scas
inc
divb
push
xor
cs
call
add
ret
push
jl
imul
or
add
lea
pop
dec
in
or
push
jne
cmp
dec
aaa
flds
test
pusha
andb
es
ja
fimuls
jae
mov
les
pop
push
cwtl
ja
cs
cwtl
jecxz
into
pop
in
mov
mov
int3
and
adc
adc
cli
call
das
das
nop
push
lods
enter
in
xor
and
shr
in
mov
popf
cmpsb
scas
mov
stos
cmc
and
mov
inc
or
sub
xchg
jecxz
addr16
pop
push
mulb
mov
cmpsl
jo
mov
xor
in
scas
cmc
test
repz
dec
insl
cmp
inc
les
scas
loopne
shrl
sub
sbb
loopne
aad
scas
xchg
clc
lahf
aad
jb
das
pop
mov
stos
and
daa
scas
push
pusha
mov
push
mov
dec
jo
out
adc
sub
shr
loope
xor
sbb
imul
es
outsb
outsb
sbbb
sbb
add
stos
jnp
add
mov
test
xchg
mov
mov
xor
jns
push
xchg
repnz
leave
psubusw
adc
adc
imul
iret
mov
or
das
mov
jns
sbbl
mov
adc
pop
jb
xor
int
xchg
nop
jle
mov
aam
lahf
and
ja
jecxz
sti
loope
add
push
jno
jle
pop
inc
stos
mov
xchg
and
jb
insl
js
rcr
mov
dec
rcll
pop
cli
out
in
rcll
cmpl
mov
mov
sbb
test
icebp
outsb
pop
xor
stos
daa
jbe
out
notb
mov
mov
or
movsl
ret
out
mov
adc
test
and
cld
push
in
addl
mov
arpl
popa
xor
popa
xchg
imul
ret
mov
outsb
jbe
repz
sarl
fldcw
jae
or
rcll
gs
idivb
rcr
repnz
pop
es
jmp
dec
jecxz
or
rolb
jae
out
or
mov
andb
int3
push
pop
push
test
pop
jmp
sub
add
sbb
mov
and
pcmpeqw
xchg
cmp
movsb
mov
push
rcll
or
cltd
sbb
adc
inc
fcmovnu
pop
and
push
cmpb
xchg
rclb
stos
pop
test
shr
mov
fcoml
fistpll
xor
xor
roll
cmp
mov
mov
lds
dec
pop
xchg
stos
xchg
adc
pop
inc
inc
cmp
cs
mov
sbb
dec
fwait
adc
mov
mov
inc
inc
mov
xor
xchg
and
repnz
add
xor
and
jle
in
fcoml
xchg
fdivr
adc
int
into
cmp
push
out
cli
pushf
adc
or
movsb
test
and
stc
loop
loop
push
nop
outsb
fst
jae
icebp
or
dec
sub
sbb
mov
scas
xchg
cmp
sbb
leave
out
cmp
shrb
jle
mov
test
scas
jmp
push
pop
enter
jo
and
mov
jle
jno
sbb
shlb
popf
sub
es
cmp
mov
push
dec
cld
sahf
outsl
add
aas
nop
jecxz
inc
cmc
loopne
mov
imul
or
aam
pop
insl
in
inc
or
mov
mov
dec
in
inc
inc
and
mov
dec
loopne
stos
clc
xchg
sub
mov
dec
dec
xor
mov
sar
int
adc
add
dec
int
sbb
jmp
fs
pop
sub
repz
daa
mov
jno
inc
xchg
mov
cmp
aas
enter
ljmp
lret
cmc
lret
imul
push
into
lret
js
mov
data16
jg
pop
jp
in
add
shl
sub
test
mov
call
inc
add
cmp
nop
stos
sbb
test
mov
and
int3
testb
sbb
adc
mov
mov
jbe
icebp
mov
loop
or
pop
test
fidivrs
adc
addr16
mov
jbe
loope
add
icebp
or
imul
dec
mov
icebp
adc
jl
lods
jb
add
sub
stos
sub
add
aas
mov
jo
push
dec
sub
push
mov
frstor
je
lcall
std
out
out
lock
das
inc
pop
mov
add
testl
jns
dec
ret
xor
xchg
pushf
jnp
jp
nop
xchg
gs
ds
out
sbb
pcmpeqb
pop
add
inc
inc
or
sbb
rcl
std
mov
ret
mov
sub
pop
js
mov
sub
testl
push
mov
xchg
fldcw
inc
mov
das
out
call
push
pop
or
repnz
xchg
pop
add
ds
mov
mov
movsl
xlat
lods
jae
scas
int3
xchg
testb
stos
xchg
dec
in
sbb
sub
dec
ljmp
sbbb
mov
and
pop
jle
mov
cmpb
cs
popa
divl
mov
add
je
imul
cmp
ja
inc
mov
rorl
xor
xchg
adc
rcl
stos
mov
sbb
loop
clc
dec
pusha
dec
movsb
enter
adc
mov
mov
rorl
sub
ret
shlb
pusha
cmp
ljmp
pop
bound
out
adc
mov
stc
inc
filds
mov
fwait
mov
enter
test
jb
push
bound
sub
fildl
bnd
and
sti
xchg
bnd
pop
xchg
cli
cmpsl
jge
fiadds
fs
or
pop
insl
sbb
mov
icebp
nop
mov
sbb
filds
lret
leave
push
mov
fsubl
dec
cmp
mov
dec
rcr
add
mov
cltd
xchg
or
and
ret
cmp
push
sub
inc
in
js
cmc
xchg
bound
icebp
scas
loop
jmp
in
mov
add
insl
dec
fwait
mov
mov
gs
sub
sahf
outsl
aad
add
ja
jnp
mov
movsb
fmul
clc
xchg
or
stc
xchg
lahf
in
and
iret
lods
das
arpl
popa
cwtl
repz
int3
pop
mov
shlb
add
lret
cmc
dec
mul
mov
mov
imull
adc
mov
mov
pop
adc
clc
pop
fisubl
js
addr16
xchg
addr16
mov
fs
dec
stos
cmp
mov
lcall
test
std
shll
imul
mov
hlt
and
sbb
lret
mul
pop
int3
and
xor
outsl
ret
or
jnp
xor
push
cmp
dec
aad
inc
push
push
rcrb
push
sbb
jge
rclb
leave
push
or
push
cmpsl
je
arpl
jmp
pop
cmp
out
clc
xor
pop
scas
arpl
es
sbb
sti
jl
jp
insb
icebp
movsl
scas
orl
dec
dec
xor
fistpll
icebp
jecxz
sub
pop
ljmp
cmp
stos
adc
push
lea
xchg
xor
aam
subb
out
pop
ja
pushf
add
xchg
fiaddl
cmpsb
pop
loopne
sbb
and
jno
js
inc
or
addr16
aaa
xchg
inc
clc
outsb
and
fidivs
sub
push
cmc
pop
xor
int3
jo
into
test
loop
push
xchg
inc
leave
jb
inc
daa
xchg
imul
and
insb
add
hlt
insl
mov
rcrl
sbb
cmp
cli
xor
cmp
push
xchg
lock
jnp
das
lock
stos
aad
out
sub
mov
cmp
and
aam
sti
out
pop
dec
push
mov
push
sahf
jns
int
mov
fidivs
push
aaa
imul
mov
sbb
xor
pop
mov
loop
pop
or
cltd
sub
fdivrs
pop
adc
jecxz
jg
jb
adc
pop
bnd
or
rcll
cli
mov
dec
fcompl
in
rcrb
mov
adc
pop
add
mov
inc
jnp
sbb
jle
lea
sub
ret
pop
xor
lods
cmpsl
fistps
lea
pop
fcmovnbe
nop
adc
ljmp
jecxz
adc
push
loope
sbbl
jne
scas
pop
nop
or
dec
dec
les
je
lcall
int
push
xchg
cwtl
cli
push
jns
or
stc
push
sbb
sub
xchg
stc
cmp
inc
loop
sub
sub
int
outsl
into
loop
call
loopne
cmpsl
popf
cld
in
cmp
dec
mov
aam
dec
and
push
sahf
sub
push
add
inc
inc
mov
sub
mov
sbb
xor
and
cltd
pop
mov
adc
sub
sbb
sti
aad
push
mov
sub
icebp
std
mov
stos
fwait
or
push
out
or
pop
xchg
cmp
jle
nop
int
clc
cmp
mov
aaa
aas
pop
mov
and
nop
sbb
bt
fmuls
and
mov
pop
xchg
aas
rcrl
mov
add
lahf
jne
push
aas
or
scas
shll
mov
cld
pop
mov
cmp
jae
out
pop
out
iret
decb
lret
loopne
push
add
jge
pop
ret
out
in
cmp
inc
iret
stos
lret
mov
dec
add
push
xchg
mov
je
sbb
imul
dec
cmp
sub
sbb
outsl
cmpsb
pinsrw
jp
mov
xor
out
dec
pop
arpl
icebp
cmp
in
mov
dec
or
jmp
lret
nop
adc
cld
inc
in
aas
sti
cmp
out
and
aas
arpl
cs
pop
mov
fstpt
inc
mov
bnd
das
lcall
pop
jge
and
das
out
in
mov
call
mov
cmp
loopne
inc
incb
jp
out
push
mov
popf
movsb
push
sahf
jle
mov
aad
push
inc
add
mov
jmp
aas
push
xchg
sbb
cmp
pop
ljmp
xor
adc
sbb
stc
jns
cltd
icebp
fdivl
into
push
jnp
sbb
adc
dec
or
jmp
sysexit
nop
mov
pusha
shll
cmpsb
popf
test
cmpsl
jge
dec
shlb
jb
pop
jno
in
loopne
mov
into
and
lea
inc
nop
jae
in
mov
mov
mov
mov
cmc
insl
jbe
mov
adc
sbb
and
xor
lret
test
addr16
ljmp
popf
push
dec
cli
aam
aas
ret
addr16
pop
adc
cmpps
cmp
pop
sub
outsb
push
hlt
pop
xor
nop
or
cltd
inc
jnp
xor
loope
cmp
xchg
cmpl
cmp
push
pop
xchg
lcall
mov
insb
push
jb
test
leave
in
and
add
xor
sbb
push
pop
push
sub
push
shrl
xchg
pxor
and
inc
xchg
das
inc
mov
mov
lret
outsb
push
mov
imul
rcll
jns
mov
mov
fs
insl
push
scas
lcall
sub
sarb
test
jo
pop
xchg
push
inc
xchg
arpl
sbb
lods
mov
xor
sub
and
jle
sbbb
and
xchg
les
aas
test
inc
pop
dec
mov
push
push
xchg
repz
lret
xor
inc
arpl
jmp
inc
pop
cmp
pop
adc
sbb
mov
andl
sub
lret
jne
cwtl
sbb
xor
jno
jb
ja
fmull
shll
push
out
jo
inc
movsl
int
pop
lcall
rcll
push
adc
mov
cld
fildl
and
imul
pop
jne
xor
cmpsb
jcxz
mov
dec
xchg
scas
mov
test
mov
nop
repnz
mov
mov
and
mov
xchg
sbb
movsl
or
or
mov
add
in
stos
outsl
xchg
dec
int
ret
in
jmp
push
pop
mov
rorb
inc
pop
ret
lock
xchg
xacquire
and
mov
cmp
add
fstpt
fs
mov
test
popa
mov
or
out
jbe
mov
jb
cli
push
enter
dec
mov
push
js
pop
test
call
xchg
aaa
mov
test
loopne
fistpll
movsl
jae
push
mov
mov
pop
nop
pop
mov
mov
cmp
sub
lahf
cmp
add
sbb
sub
mov
pop
lcall
dec
mov
out
push
jg
push
mov
xor
cmp
mov
push
fs
rcrl
pop
into
aaa
xchg
std
jbe
mov
push
fbld
or
push
push
sub
pusha
sti
xchg
ret
inc
ret
dec
adc
icebp
cmp
xor
inc
mov
cld
push
jmp
repz
add
sbb
notb
and
add
sub
imul
cmp
sub
mov
push
test
mov
repz
sbb
rcrb
sub
int
and
aam
movsl
in
xchg
movsb
xlat
cmpsl
mov
into
adc
push
jg
sub
loop
rol
mov
push
fadd
or
js
inc
pop
lahf
adc
jno
shlb
push
mov
cmp
lods
fneni(8087
push
sub
clc
mov
adc
hlt
psrad
int
pop
movsb
mov
int
lds
leave
jno
insl
add
shll
or
outsb
das
popf
xchg
mov
mov
fnstenv
xor
jnp
adc
pop
lods
xchg
lods
xlat
pusha
add
loop
mov
leave
push
cld
xchg
repnz
jg
popa
fidivrs
jg
xchg
test
pushf
jg
and
fwait
xchg
mov
push
loop
mov
addr16
out
lea
xchg
or
mov
das
dec
jmp
in
mov
and
sub
pop
xor
cwtl
xor
pop
dec
ljmp
sub
scas
aam
mov
push
into
addr16
mov
testb
or
jae
call
int3
xchg
pop
hlt
push
mov
movsl
add
cmp
or
push
jg
pop
shr
testb
aad
inc
clc
gs
lock
push
and
mov
imul
call
popw
sub
int3
lret
pop
mov
mov
dec
addr16
adc
or
std
adc
add
ds
lock
outsb
sbb
bound
addr16
aas
dec
call
or
lea
cwtl
add
and
iret
mov
mov
fmuls
fidivrs
pop
jb
loope
cwtl
push
mov
popa
mov
push
std
add
lds
sub
sub
movsl
std
cmp
adc
cmpsb
sub
je
push
insb
je
jb
inc
ud2
into
shlb
xchg
mov
pusha
out
and
cs
stos
push
std
push
mov
ljmp
mov
ficoms
lea
inc
rclb
cmp
mov
test
xchg
xchg
xor
lods
aad
add
inc
or
sti
push
cmp
insb
mov
mov
pop
jmp
scas
mov
and
and
jl
cmp
cwtl
cld
pusha
and
nop
mov
mov
and
xor
movsl
rorl
outsl
test
pop
adc
pop
mov
adc
jmp
popf
adc
pop
fs
sbb
test
dec
sbbl
xor
jp
pop
pop
int3
stos
sub
inc
sbb
test
adc
jecxz
dec
dec
pop
fcmovnbe
mov
add
or
in
incb
test
inc
inc
popf
or
out
sbb
icebp
sub
and
jle
pop
popf
xor
xor
cltd
test
xchg
imul
std
imull
fdivrs
inc
lods
addr16
and
shll
jp
sub
call
mov
unpcklps
or
xchg
dec
fldl
repnz
cmpsb
cmp
ja
shl
xor
pop
jnp
ljmp
and
cmp
mov
mov
mov
loop
xor
cmp
gs
popf
lock
inc
push
lahf
clc
lock
adc
mov
pop
mov
push
cmpsl
sub
andl
int
out
mov
mov
mul
mov
imul
sarl
adc
repz
inc
enter
fnsave
cmpsb
test
inc
or
lcall
in
push
mov
lods
inc
cmpsl
xchg
mov
xchg
push
data16
stos
lods
jl
inc
popa
sbb
bound
lods
addb
ss
and
aaa
hlt
cmp
jl
std
jl
mov
js
fs
orl
push
jge
es
or
dec
pop
pop
pusha
mov
hlt
mov
orb
fwait
jae
stos
mov
repnz
cwtl
jmp
mov
ret
inc
xchg
sbb
icebp
cmpsl
in
and
mov
fisubrs
sbb
cmc
and
xchg
jp
fs
rorl
insb
sub
xchg
insb
jbe
fidivrl
jge
sub
mov
test
arpl
jbe
inc
jmp
inc
dec
test
leave
out
pop
inc
cmp
repnz
jo
mov
mov
adc
lods
mov
jmp
stos
aaa
les
clc
add
call
and
sub
out
mov
push
mov
cmp
adc
mov
lods
jmp
call
stos
xchg
vcvttpd2dqy
into
fisubs
jge
push
pop
addb
sub
pop
or
add
cmpsb
mov
add
out
es
lea
enter
ljmp
dec
jo
inc
mov
lods
pop
rolb
inc
mov
insl
or
push
loopne
repnz
cmp
lods
sub
out
loope
jecxz
iret
or
mov
notl
out
fists
daa
push
lret
sbb
cmp
mov
addr16
in
cmp
mov
lds
lret
outsb
inc
mov
in
mov
outsb
jae
fiadds
shrb
divl
lret
fisubrl
jb
lods
cmpsb
inc
adc
adc
cmp
inc
pushf
loope
sub
jmp
mov
add
shlb
inc
repnz
cmp
jns
dec
adc
push
xchg
inc
inc
loopne
dec
xchg
ror
or
lcall
rcr
mov
sbb
lcall
fnstcw
sbb
stos
or
int3
adc
xchg
ljmp
sar
out
insl
fsubrl
pop
mov
fidivrl
and
dec
push
stos
inc
ds
jg
push
cmp
scas
jno
das
mov
les
stos
scas
fcomip
aad
int
push
clc
std
fwait
jnp
stc
rcr
mov
out
mov
aas
hlt
add
data16
mov
ret
jmp
mov
cmp
test
push
lods
pushf
sbb
loope
mov
adc
mov
xor
xor
ds
scas
adc
imul
iret
aad
mov
jecxz
daa
into
imul
call
mov
aad
sub
fmul
cmpsl
push
fs
xor
test
inc
pop
in
add
fcoml
adc
insl
mov
or
adc
imulb
mov
imul
lcall
add
test
or
sbb
mov
mov
mov
xchg
pop
pusha
iret
loop
dec
jns
push
push
inc
and
mov
jno
pop
push
rcrl
dec
pop
mov
mov
cmp
pop
cmp
mov
movsb
in
ljmp
adc
or
mov
lcall
jae
pop
jae
mov
mov
out
stc
xchg
rcrb
xor
sub
jge
call
adc
mov
sbbb
popa
ret
subl
sub
lcall
bound
mov
xchg
into
decb
mov
mov
movl
and
mov
mov
imul
stos
pop
jo
icebp
fwait
inc
push
push
lcall
fbstp
xchg
or
ret
repnz
sbbb
movsb
addl
pop
cmpsb
sub
jo
arpl
push
frstor
mov
jg
imul
repnz
sub
daa
int
sbb
xor
dec
pop
rorl
mov
sbb
in
cmp
mov
sbbb
mov
loopne
aaa
and
mov
cmp
pop
sbb
test
out
inc
fs
jae
jbe
adc
mov
imul
popf
xchg
mov
scas
insl
in
pop
in
add
repnz
inc
mov
fnstsw
fiaddl
sub
out
loop
dec
xor
xor
adc
sub
xorl
sub
adc
lahf
es
or
arpl
and
mov
mov
mov
push
xchg
lcall
loope
arpl
adc
xchg
push
and
push
jnp
sahf
cmpsb
orb
or
outsb
pop
cmp
imul
push
sub
or
and
sub
mov
loope
in
add
jbe
inc
xchg
ja
xchg
push
jne
sbb
in
dec
test
test
sbb
lahf
xchg
fs
shrl
lods
out
rorb
in
and
test
mov
ret
jo
cmp
fnsetpm(287
dec
push
cmpsb
scas
xchg
or
in
in
jo
push
inc
rclb
ret
adc
or
icebp
mov
cmpsb
cmp
fcomps
in
nop
faddl
jmp
cs
lahf
hlt
test
shll
pop
cmpsl
cmc
dec
icebp
lea
ljmp
sub
mov
or
adc
sbb
mov
sbb
mov
pop
das
jbe
pushf
gs
pop
pop
dec
push
lret
jle
loopne
mov
icebp
movsb
dec
ja
test
rclb
cmpsb
loope
pop
pop
xchg
addr16
pop
cmp
je
cmc
leave
cld
sub
inc
xchg
xlat
dec
fisubs
push
aam
or
jge
xor
dec
cmp
ror
inc
inc
lret
sub
pusha
mov
in
ds
mov
ja
dec
pop
lret
mov
pop
adcl
push
add
pop
loope
xor
sub
xchg
rorb
or
test
pop
mov
push
jnp
add
dec
js
or
mov
pop
rorl
cmp
and
inc
insb
cmpsb
js
shll
outsb
sub
out
cmp
push
sub
inc
jbe
xchg
imul
icebp
or
push
jb
daa
rolb
jl
out
mov
leave
dec
out
add
mov
mov
push
add
imul
cs
movsb
out
or
sbb
ja
jmp
pop
shll
xchg
in
loop
ja
push
pop
stos
fistl
mov
add
mov
cmp
jbe
push
fwait
ret
pop
lock
pop
aaa
stos
inc
das
call
loope
iret
mov
in
cmp
jmp
out
dec
sub
pop
repz
inc
xor
fcoml
outsb
pop
jg
dec
pop
push
xor
jg
mov
fcoms
or
jae
xchg
push
leave
leave
dec
outsl
or
fldl
icebp
scas
cmpsl
xor
cld
enter
cli
jnp
je
bound
stc
in
out
pop
mov
xorps
pop
or
mov
lret
cmc
pop
xor
idivl
push
dec
sbb
dec
xor
imul
mov
sbb
add
jmp
data16
sbb
cmp
sub
call
jnp
cmpsl
rorl
mov
push
fs
jns
das
test
sbb
sub
sub
out
inc
arpl
into
push
icebp
jmp
or
jmp
and
pop
inc
jg
andl
mov
or
int3
xor
sub
xchg
adc
fs
xor
or
lds
cli
cmp
inc
cmp
jle
pop
cmp
xor
cmp
clc
mov
test
stos
pop
add
lahf
mov
sub
jns
dec
rcll
push
xchg
xor
mov
mov
je
test
xchg
je
fcompl
xor
fcmovnbe
mov
inc
cld
jp
mov
and
xchg
out
repnz
adc
mov
mov
out
dec
ja
lock
cmp
cmp
aad
push
lcall
mov
out
scas
jge
into
jmp
push
imul
mov
mov
les
lods
pop
jecxz
sub
inc
mov
mov
inc
ftst
lret
push
lret
pop
add
aaa
mov
or
mov
fnstcw
push
inc
mov
or
xchg
cmpsb
dec
mov
sub
or
ficoms
ja
xor
sarl
rcr
ss
jecxz
pop
cmpl
mov
movb
add
pusha
push
popf
loope
testb
mov
in
jmp
mov
pop
out
mov
fmuls
subb
or
sarb
pop
or
popa
out
xchg
pusha
xor
mov
pop
mov
inc
rolb
pop
cwtl
ljmp
or
lods
push
lret
cmpsl
and
add
sbbl
aas
inc
jbe
mov
or
push
cmp
mov
pop
cmp
mov
push
roll
in
inc
fdivs
add
adc
adc
loop
test
sub
negl
cmpsl
or
in
outsb
xor
ds
in
xor
add
jo
sub
fcmovne
popa
lcall
cmc
movl
pop
out
jecxz
lds
mov
dec
ret
in
aam
adc
outsl
rcrl
ficomps
jmp
out
dec
and
jecxz
xor
mov
fwait
pop
cmp
and
xor
in
sbb
xchg
dec
repnz
and
shl
jmp
aas
xor
or
pop
das
mov
xchg
repz
sbb
pop
cmp
dec
mov
enter
jnp
inc
sbb
pop
shr
xchg
adc
stc
adcb
jb
fldl
movsl
or
arpl
cmp
xchg
movsl
es
cmp
fdivrs
dec
std
xor
enter
pop
mov
into
clc
mov
ja
fimull
fisttpl
lea
mov
loop
fsubrl
dec
push
stos
mov
js
sbbl
es
loope
push
nop
ljmp
jae
jmp
and
xchg
lcall
adc
testb
push
imul
adc
sbb
adc
pop
adc
sbb
xor
imul
out
mov
xor
fs
insl
hlt
jp
cmpsl
lcall
xor
lret
dec
pop
xchg
lcall
jb
inc
mov
lcall
js
stc
mov
ja
es
int3
popa
xor
add
adc
movsb
mov
push
sub
std
cli
in
lahf
inc
lcall
or
cmp
jbe
inc
jo
stos
leave
push
inc
shlb
sbb
test
sub
in
xchg
cmp
or
jns
jno
ss
ss
add
imul
in
mov
addb
ret
push
rcl
leave
adc
iret
test
jno
mov
leave
and
or
sbb
inc
lret
jl
stos
leave
bound
pop
sub
inc
mov
repnz
jne
push
and
mov
add
sub
sub
pop
movsl
ret
dec
popa
lods
dec
cltd
xor
addr16
xchg
xchg
ja
clc
push
or
push
test
stos
iret
adc
or
mov
jge
pop
or
loop
and
mov
or
stos
loopne
dec
icebp
dec
loop
dec
or
or
pop
mov
or
stos
in
mov
sbb
mov
int3
in
ret
jnp
int3
cli
sub
stos
push
sub
xchg
test
mov
xor
sbb
int3
cmp
adc
push
sarb
out
jecxz
jl
call
cmp
inc
inc
cmp
pop
js
jnp
outsb
repz
jge
add
push
or
xchg
mov
mov
jmp
xchg
cld
fidivrl
stos
lret
xlat
xchg
imul
push
pop
adc
mov
jns
mov
mov
ret
and
push
inc
mov
jmp
mov
jg
fcompl
fs
icebp
add
xchg
or
sub
jle
mov
push
adc
or
mov
push
movsb
jne
mov
mov
ljmp
ret
push
sahf
or
shrl
xor
fidivrl
add
cmp
sbb
les
and
jno
sbb
adc
dec
xor
test
sub
jmp
hlt
push
pop
adcl
mov
xor
inc
inc
cwtl
jl
xchg
adc
push
or
inc
hlt
cmpsb
outsl
inc
adc
dec
stos
lods
or
sub
or
insl
fwait
orb
dec
in
loopne
fsubs
dec
ds
and
jg
sbb
test
pop
pop
xchg
or
das
mov
enter
adc
enter
jns
leave
add
push
call
mov
jl
xchg
lahf
xorb
dec
xor
mov
outsl
gs
fld
sub
dec
mov
imul
stos
mov
sbb
or
cmp
inc
mov
scas
pop
mov
stc
inc
les
xlat
fisttpl
cld
push
xchg
divb
mov
mov
shll
push
loop
cmp
xchg
test
jl
and
sbb
testb
aaa
sub
sub
adc
mov
rcrb
imul
cwtl
add
popa
sahf
mov
shlb
adc
cltd
and
pop
or
stos
lahf
stc
mov
int
mov
clc
mov
mov
into
add
dec
add
hlt
add
enter
mov
add
mov
or
hlt
mov
lods
fwait
rclb
lods
sub
lock
jno
inc
fsub
push
add
xor
stos
mov
mov
push
adc
pop
out
push
push
xchg
sub
sbbb
inc
loope
dec
jge
sbb
cmp
cmp
xor
jle
fsubr
in
xor
mov
pop
test
icebp
jp
enter
ja
into
jae
sti
mov
fbld
lcall
out
nop
fs
out
mov
jo,pt
subl
mov
aaa
adc
subl
mov
out
sbb
push
adc
mov
mov
gs
push
popa
daa
or
jbe
adc
daa
les
add
pusha
sbb
cltd
cmp
push
and
adc
xchg
cwtl
push
or
sbb
inc
pop
inc
stc
rclb
inc
or
cmp
push
aaa
push
xchg
add
lods
subb
jl
xchg
pop
dec
push
pop
les
mov
stc
dec
clc
outsl
div
dec
leave
aas
mov
pop
sbb
gs
push
int
sub
mov
movsl
clc
sub
pusha
movsb
loop
test
push
push
or
push
xor
dec
daa
mov
out
cmp
rcll
pop
pop
rolb
nop
pop
js
out
test
cmpsb
imul
stos
ds
popa
cmp
lods
or
pop
jns
fs
inc
cltd
or
mov
lret
mov
fsubl
or
mov
cmpsb
cwtl
jg
cwtl
shl
nop
mov
aad
insl
and
push
add
insb
jo
sub
imul
sbb
mov
or
mov
in
adc
int3
lret
outsl
mov
mov
stos
mov
lret
xchg
sub
lret
dec
mov
pop
aas
imulb
adc
jbe
fcoml
mov
sarb
mov
sub
jg
lret
nop
stc
dec
mov
arpl
sbb
dec
loop
mov
out
push
and
inc
xlat
loop
xchg
imul
testl
iret
ret
mov
pop
dec
xor
dec
mov
testl
xor
jns
push
cld
sub
sti
loopne
ja
cld
pop
aas
xor
pslld
std
jbe
ja
rolb
mov
jmp
call
enter
je
mov
mov
xchg
gs
jns
jb
and
xor
dec
add
xchg
sub
jmp
pop
shll
test
icebp
jecxz
rorl
or
in
adc
pop
jl
xchg
jbe
cs
mov
in
add
jnp
inc
or
mov
out
push
sbb
int
lret
repz
xor
imul
dec
or
sahf
xchg
pop
sbb
sarl
leave
icebp
andb
mov
aaa
push
bound
sbb
mov
hlt
rorb
nop
adc
rorl
push
mov
push
mov
in
in
or
add
jno
jge
xor
mov
mov
or
imul
fs
jle
adc
shll
mov
shlb
push
dec
dec
les
clc
nop
mov
mov
mov
popa
jp
jno
push
jg
jmp
mov
add
dec
dec
sbb
insb
in
xorb
out
cmp
mov
xlat
rcrb
lahf
sub
int3
xor
xchg
les
loope
lods
mov
lods
and
or
aas
subl
das
add
fs
outsl
test
jle
sub
popa
mov
movsb
or
neg
icebp
sbb
pop
pop
xchg
push
clc
pop
stos
bound
cmp
iret
pop
push
mov
mov
cmp
adc
sub
xor
insb
sbb
test
mov
xchg
incb
test
mov
jge
mov
rcll
dec
fildl
sbb
xchg
frstor
sbb
inc
xchg
shlb
scas
scas
pop
mov
pushf
push
and
pop
test
sti
fists
xchg
test
mov
push
cmpsb
xor
enter
mov
or
or
xchg
subl
cs
or
adc
repnz
xor
push
sbb
insl
jnp
insb
lret
sbb
inc
nop
add
cltd
pop
adc
mov
and
sub
cmp
mov
xor
pushf
adc
and
rcll
sub
cmp
mov
enter
lea
mov
ljmp
or
push
adc
cli
xchg
or
addr16
jecxz
imul
movsb
loope
inc
sub
push
nop
lods
cmp
sub
mov
cld
push
pushl
mulb
in
notb
int
jmp
insl
xchg
rclb
cmp
xor
mov
push
repnz
push
es
jmp
mov
dec
xchg
mov
test
mov
or
push
jb
jbe
mov
enter
scas
orb
jmp
mov
mov
or
lea
nop
jae
je,pt
sbb
push
popa
mov
adc
or
cmp
xor
ror
sbb
stos
das
jb
cli
push
lds
clc
or
cmp
mov
loop
push
pop
sbb
into
inc
sub
stos
sarb
mov
adc
cltd
enter
shll
iret
mov
cmc
xor
scas
dec
sbb
or
and
cmp
js
insl
icebp
cmpsb
push
insb
xchg
hlt
clc
jb
mov
movsl
mov
je
push
repz
xlat
icebp
lar
rcll
jae
xor
movsb
adc
mov
stos
push
jno
xchg
pop
xchg
mov
out
sbb
arpl
mov
add
and
xor
jnp
rcl
fists
xchg
fistl
lret
xor
mov
pop
rclb
sub
or
ja
fidivl
mov
shlb
lock
scas
jecxz
dec
inc
jge
dec
out
dec
shll
pop
mov
inc
dec
inc
in
xchg
jae
aam
ret
sbb
lea
inc
in
dec
adc
push
add
leave
mov
insb
hlt
out
dec
out
cmpsl
jnp
and
push
cmp
ret
mov
or
aaa
and
mov
or
dec
testb
cwtl
mov
xchg
lds
add
jb
push
mov
sbb
xchg
lods
outsb
jno,pt
js
lret
mov
mov
ret
ror
scas
das
aas
or
insb
mov
xor
pop
ss
std
sti
lret
cmp
adc
or
mov
inc
mov
aad
adc
ret
fstp
ja
push
data16
push
fcomi
aam
andb
insl
leave
push
add
call
mov
mov
mov
ret
and
clc
cwtl
lea
incb
fs
bound
xorb
pushl
mov
sti
jns
xchg
mov
xor
sub
mov
push
mov
pop
cli
icebp
lcall
pop
mov
mov
jno
jp
je
in
xor
pop
and
mov
orl
mov
mov
dec
fstps
mov
pop
fcom
jne
repz
aad
stos
das
jb
mov
push
push
jae
dec
repnz
push
mov
sbb
xor
dec
dec
stos
repnz
out
cmp
mov
xchg
lahf
test
sbb
sbb
outsl
or
clc
or
lahf
in
inc
xchg
pop
inc
imul
cmc
jae
and
and
aad
push
ror
cli
jne
xchg
mov
push
out
jns
fildl
mov
ja
jmp
jl
mov
xchg
mov
lock
push
adc
push
ret
cmp
ljmp
mov
and
xlat
movsb
inc
daa
cmp
adcl
sbb
xchg
mov
mov
imul
mov
pop
pop
hlt
lcall
cmpsl
jno
push
push
icebp
and
xor
jl
decb
pop
or
mov
jge
in
mov
fbstp
nop
int
push
adc
push
cmpsl
repnz
int3
adc
xchg
fsubl
mov
bound
addr16
lahf
arpl
aam
repnz
push
mov
test
and
mov
xchg
pop
out
call
mov
shlb
leave
aam
notb
sub
aaa
outsl
mov
sub
push
and
pop
xchg
pusha
ss
orl
stos
jg
pop
daa
cmp
and
push
clc
or
add
lcall
pop
inc
mov
mov
push
pop
xchg
xor
xor
xor
inc
out
dec
dec
sbb
cwtl
pop
inc
icebp
cmc
push
out
mov
pop
push
mov
pop
out
aaa
inc
mov
rcl
andb
and
mov
pop
mov
add
inc
add
loop
test
insb
inc
jbe
shrb
aam
xor
adc
out
inc
cmp
cld
jmp
rcrb
loope
jge
bound
or
sub
lret
adc
mov
mov
mov
leave
mov
dec
je
or
or
sbb
mov
xor
lock
mov
sub
mov
cltd
leave
jno
loopne
mov
ss
imul
and
xchg
daa
je
aam
in
je
roll
mov
mov
or
mov
adc
cmpsb
sub
hlt
mov
dec
mov
push
jb
stos
cmp
shlb
sbb
movsb
push
jle
xchg
jecxz
mov
sbb
movsb
out
inc
sub
push
cmpsb
repnz
in
popf
icebp
xlat
mov
cmc
repz
cltd
xor
sti
sbb
movb
xchg
arpl
stos
stos
push
sub
mov
push
inc
mov
daa
test
int3
cmovae
add
adc
push
cwtl
cmpsb
popf
ja
orl
dec
pop
xchg
imul
iret
inc
xor
mov
imul
lods
adc
ds
stc
cld
pop
mov
iret
scas
insb
fildll
push
fs
out
inc
xchg
adc
or
lea
add
iret
push
cmpsl
sar
push
js
jg
negl
je
je
dec
scas
out
xchg
bound
insb
dec
xlat
cmp
add
xchg
sub
cwtl
inc
mov
fs
repz
test
movsb
stc
mov
out
stc
ret
xchg
cmp
or
fstpt
test
and
addl
inc
sbb
hlt
mov
jb
je
mov
mov
cs
push
rcr
fdivrs
and
scas
pushl
repnz
hlt
into
or
inc
xor
test
add
hlt
aam
push
into
js
or
lock
insl
mov
add
movsl
inc
mov
fcmovne
ljmp
xor
inc
testl
imulb
xorl
fucompp
cs
pusha
sar
pop
mov
mov
mov
mov
dec
xchg
lods
cmp
cmp
lret
imul
push
lret
mov
pop
loop
mov
and
nop
or
inc
ret
imul
cmp
or
mov
nop
adc
jae
sbb
push
ss
push
rcl
mov
pop
mov
clc
add
cltd
fidivrl
or
cmpsl
lret
mov
fucomp
inc
std
repnz
fwait
mov
rorb
out
jnp
mov
sbb
mov
cmp
cmp
cmpsl
cmpsb
xchg
mov
jmp
and
es
lret
lahf
shlb
and
pop
mov
stc
or
inc
adc
pop
popf
add
jg
add
hlt
into
and
insb
sub
xchg
imul
mov
pop
sub
cmp
sub
out
mov
cmpsl
pop
clc
mov
negb
jl
xchg
push
cmp
out
dec
xchg
mov
cltd
and
push
dec
jl
jne
je
orb
nop
fyl2x
mov
push
stc
test
int3
repz
pop
stc
cmp
sbb
les
repnz
out
add
ds
frstor
rorl
push
cmc
mov
cli
mov
push
cmp
cmp
aaa
sbb
dec
xor
or
inc
mov
shlb
adc
jmp
or
pop
enter
insb
ja
shlb
icebp
mov
pop
outsb
add
jp
sub
popa
push
dec
push
scas
ljmp
sub
in
out
xorb
dec
push
and
inc
or
ss
imul
sub
fsubs
xor
mov
dec
sbb
add
dec
ja
add
dec
loopne
popf
mov
cmp
int3
sti
sub
mov
mov
stos
in
and
insl
mov
xchg
pop
sbb
sbb
adc
jecxz
pop
sahf
gs
scas
inc
push
mov
cmp
push
inc
pop
or
adc
mov
mov
push
cmp
shrl
lcall
fdivrl
xor
aam
pop
ret
sub
lcall
add
cmp
add
mov
cmp
push
dec
adc
and
out
mov
add
mov
iret
dec
ds
mov
rcl
ret
movb
mov
stos
adc
sub
push
sub
pop
mov
push
cld
mov
pop
sub
int
inc
repnz
inc
into
inc
jne
or
ret
mov
out
rolb
dec
loop
sub
xchg
shlb
popa
xchg
fwait
lods
pop
stc
imul
mov
pop
ja
mov
mov
movsb
mov
mov
jecxz
push
fxch
cmp
cld
mov
stos
pusha
dec
outsb
lcall
scas
sub
jmp
les
push
sbb
xor
sbb
mov
orl
sbb
ret
pop
mov
jle
cmp
cmpb
int
pop
cmc
cltd
add
and
sub
adcb
lahf
insb
inc
fwait
test
sbb
ss
fisubs
push
sbb
inc
mov
sub
mov
mov
mov
jmp
sahf
test
sub
outsb
les
ret
dec
mov
jae
push
push
pop
add
popf
ja
scas
mov
adc
outsb
in
push
mov
dec
xor
xchg
dec
cmp
mov
lods
sbb
inc
mov
add
xchg
subl
jns
inc
cmp
jb
mov
or
jecxz
adc
jecxz
pop
std
or
push
or
je
push
mov
mov
dec
mov
out
sarb
orl
jbe
test
jno
dec
sub
inc
sub
shll
lahf
sbb
sbb
shll
loop
jge
testb
push
push
fsubs
nop
lock
add
sbb
stc
mov
stos
mov
lcallw
fidivrl
hlt
mov
sarb
mov
push
pop
sub
cmp
dec
push
js
sbb
pusha
pop
mov
lods
adc
adc
add
aad
pop
jge
and
lahf
shll
dec
sbb
adc
mov
push
xor
jge
mov
pop
jno
xor
push
sarl
push
xlat
dec
lds
ss
jno
sbb
adc
hlt
test
mov
inc
mov
adc
lods
add
fadds
cmp
fstl
add
or
xchg
push
or
lea
cmp
out
imul
mov
stos
pop
pop
lock
mov
call
in
adc
fnstenv
dec
mov
icebp
imul
push
lret
rorb
add
cs
iret
inc
aas
push
dec
sub
or
and
xorl
pop
push
pop
lods
es
xchg
loopne
or
ja
es
adc
cmc
xchg
push
cli
jp
or
dec
arpl
xlat
in
and
call
mov
pop
and
cmp
out
cs
outsl
jecxz
movsl
int3
mov
adc
call
xor
lcall
lock
aad
roll
xor
pop
sub
cmp
andl
add
loopne
loopne
mov
sbb
ret
call
lret
sbb
ljmp
scas
cmp
inc
mov
bound
xchg
or
fnstenv
repnz
out
mov
movsb
adc
adcl
fsubl
xchg
xchg
adc
les
in
nop
test
lock
or
jne
int3
sbb
or
fists
int
push
clc
xchg
fs
sub
adc
jo
sbb
inc
cmpsb
or
in
and
lret
xor
outsb
push
loope
mov
pushf
pop
sub
mov
leave
and
in
push
mov
cmp
lods
push
push
jg
inc
xor
mov
mov
jo
js
sbb
sub
mov
aam
jno
mov
rcrb
xchg
jnp
cmpsb
ljmp
cmp
inc
mov
sti
nopl
dec
call
xchg
rcl
push
push
cld
add
sbb
cmp
and
cmp
dec
movsb
lret
jae
fmuls
pop
icebp
or
inc
or
dec
test
xchg
add
push
pop
andb
ja
fldcw
inc
mov
mov
lock
push
mov
inc
or
data16
push
sbb
xor
inc
xor
xor
push
dec
mov
ds
std
inc
and
aad
ja
pushl
pop
fimull
loop
repz
xchg
mov
pop
jmp
mov
jae
xor
imul
lcall
mov
jae
adc
mov
rcl
jmp
movsb
mov
imul
in
inc
push
push
mov
xchg
rolb
push
xor
lods
ficoms
in
push
jge
or
dec
scas
int
mov
pop
cmp
mov
add
fnstsw
popa
cmp
outsl
orb
adc
movsb
pop
in
pushf
cs
jecxz
inc
mov
inc
xchg
cmpsb
push
jecxz
leave
push
fcmovnu
enter
add
cltd
pop
sbb
dec
mov
test
popa
pop
or
fst
and
out
shrl
xchg
lods
fisttps
int3
jecxz
ds
fwait
mov
or
je
and
mov
mov
add
cmp
int
xchg
xchg
fwait
stos
dec
fs
inc
lret
aad
push
outsb
push
std
and
xlat
lret
adc
aad
and
mov
iret
imul
cmp
into
test
adc
mov
jo
hlt
jecxz
adc
mov
mov
loope
push
mov
pop
ffree
out
lea
sub
cli
negl
hlt
jge
pop
lcall
js
pop
insl
dec
jno
pop
adc
mov
fsubrs
mov
and
stos
and
int3
test
sbb
cld
repz
adc
sbb
xchg
das
cmpsb
push
and
ret
ficoml
push
jp
jbe
scas
push
pusha
adc
iret
mov
mov
fsub
scas
cmp
cmp
loop
mov
or
pop
fistpl
vmaxsd
jb
inc
xchg
or
std
pushf
shr
repz
dec
cltd
lret
or
jbe
popa
adc
xchg
imul
out
or
int
pop
cld
es
add
jle
or
les
icebp
mov
clc
pop
lds
dec
int3
into
xor
jmp
cwtl
out
negb
outsl
and
push
mov
cld
aaa
jno
pop
add
test
sub
dec
outsb
icebp
sbb
xchg
sub
mov
cmc
xchg
pop
or
hlt
repnz
ds
cmp
test
ljmp
xchg
dec
mov
ljmp
les
ret
mov
loope
comiss
cmp
inc
int
jecxz
mov
test
ret
and
stos
nop
ss
cli
mov
and
sbb
bound
subl
repnz
xchg
xchg
cld
inc
xchg
push
push
cltd
lahf
dec
fstpt
arpl
ret
movsl
adc
insb
sub
movsl
sbb
loopne
popa
xor
inc
cld
imul
cli
jmp
add
sub
and
test
pop
test
addr16
movsb
mov
into
inc
fs
loopne
lods
mov
lods
or
dec
pop
enter
adc
test
clc
push
cmpsb
pop
xchg
jo
ret
xchg
sub
sbb
xor
push
pop
xchg
shl
jecxz
sbb
rclb
and
mov
add
js
adc
shlb
fcmovnbe
shlb
orb
fstpl
mov
mov
xchg
icebp
mov
lods
mull
cltd
nop
mov
push
cmp
ja
sub
push
pop
xor
std
mov
lcall
out
stos
push
xorl
xchg
and
ret
cmp
in
adc
std
adc
inc
repnz
jb
push
mov
pop
rclb
xchg
iret
sub
pop
inc
iret
ds
jne
push
sbb
push
les
fisubs
rcrl
push
inc
data16
mov
xchg
mov
std
movsl
cmp
xchg
pusha
shll
gs
aad
mov
jae
dec
add
lret
repz
test
jg
dec
les
pop
dec
arpl
outsb
lea
jg
xor
dec
xchg
dec
data16
push
movsb
iret
mov
mov
add
movsl
repnz
cmp
popa
cvtps2pd
xchg
push
push
xchg
sarb
insl
es
cmp
imul
sub
inc
ficoms
mov
sbb
rcr
daa
mov
fcoms
sub
mov
rcr
fsubrs
jmp
xchg
pop
mov
cltd
nop
setbe
and
aaa
dec
daa
or
loopne
xor
out
cltd
xchg
pop
sub
xchg
jp
outsb
leave
addb
xchg
out
adc
jns
icebp
adc
enter
scas
adc
adc
mov
setp
sti
stos
or
mov
xchg
pop
jno
fildl
sarl
jne
jae
or
pop
test
add
lahf
jne
cmpsb
xchg
scas
fbstp
or
cltd
lds
adc
cmp
mov
js
enter
adc
repnz
std
pushf
int3
push
leave
gs
or
lods
mov
test
out
es
adc
das
stc
xchg
cmp
loope
in
das
or
xchg
loope
cmp
or
jnp
mov
cmc
jo
push
jmp
fcompl
mov
xchg
test
shr
and
arpl
stc
inc
add
daa
std
pop
test
jge
xchg
mov
stc
push
xor
cmp
paddsw
cmp
insb
push
mov
imul
enter
add
xor
mov
and
mov
movsb
pop
dec
pop
xor
and
mov
sbb
roll
hlt
stos
or
aaa
lods
icebp
add
movb
lods
or
mov
and
ljmp
aaa
negb
cmp
dec
stos
xchg
jnp
imul
js
aas
lret
fwait
cmpsl
iret
push
push
cs
or
loope
shlb
call
add
mov
cmp
int3
xor
mov
dec
pop
rorl
call
add
pop
or
jo
adc
movsb
xchg
sbb
lds
dec
arpl
pop
sub
and
push
sub
adc
subl
in
cmp
mov
mov
das
subl
scas
or
sbb
mov
xchg
cs
sbb
jge
test
dec
jl
sub
dec
jmp
cmp
in
lods
cmp
mov
leave
arpl
and
movsb
fdivrl
sti
shlb
hlt
addr16
pop
int
shrb
rorl
inc
cmpsb
scas
jge
mov
adc
cmp
stos
fidivs
lret
cltd
cmc
pop
mov
adc
mov
jge
and
mov
stc
data16
leave
cmp
xchg
test
push
imul
loop
sbb
ficoml
lcall
pop
jns
dec
nop
mov
cmp
lahf
in
fwait
dec
xlat
push
jb
clc
sbb
sub
add
ja
mov
dec
aad
or
cmp
mov
mov
repz
andb
xor
mov
clc
adc
mov
adc
rolb
sub
mov
addb
xchg
xchg
jmp
gs
cmp
cmpl
call
jo
cs
aad
xor
mov
and
rcr
jl
jno
xor
into
jnp
repnz
and
movb
aas
rolb
ljmp
ror
fdiv
test
jg
xor
div
adc
gs
xchg
icebp
stos
rorl
in
pop
imul
imul
sub
jbe
xchg
test
mov
sbb
sbb
test
push
jmp
mov
fistl
add
push
inc
push
sub
add
inc
fimuls
pop
popa
cwtl
stc
dec
mov
dec
and
test
mov
fsubr
es
lock
icebp
jl
cs
pushf
add
outsl
add
fimull
jge
pusha
jle
sbb
pop
aaa
sbb
lret
fstpl
mov
insb
enter
xlat
mov
test
daa
je
loop
dec
or
in
lock
inc
mov
repnz
or
gs
aaa
and
gs
xchg
test
loope
adc
jne
mov
or
fcmovnb
xor
pushf
sbb
mov
imul
pop
jp
arpl
mov
jg
popa
daa
sahf
test
inc
mov
xchg
aas
or
add
jbe
dec
mov
lods
xchg
scas
adc
pop
mov
lret
pop
cmpsb
mov
sub
scas
pop
pop
inc
xor
test
clc
adc
dec
loopne
ret
pop
xchg
pop
aas
cmp
test
or
sub
jb
in
add
std
or
mov
in
icebp
dec
jo
shlb
xor
filds
fisttpl
adc
cltd
cmp
xchg
mov
and
subl
scas
decl
repz
push
add
outsb
jb
stos
rcrb
mov
popf
cltd
push
movsb
mov
rol
es
mov
shll
dec
mov
cmpsl
dec
or
lret
fsubl
into
in
imul
sti
mov
scas
aas
jbe
outsb
adc
jge
mov
cs
pusha
insl
aad
stos
add
and
xor
xor
cmpsl
fidivrs
cmp
rcrb
shll
jle
in
scas
xor
lods
out
jp
mov
sbb
mov
mov
insl
cmp
negl
pop
in
xor
std
pop
pusha
imul
xchg
lods
push
push
pop
cmp
outsl
xor
popa
fisubs
aaa
pop
roll
cmp
in
sbb
mov
fisttpll
xor
push
popa
cmp
add
jns
mov
idivb
pop
xor
inc
cli
test
stos
cmp
add
sbb
or
jb
mov
test
rorb
mov
or
cmpsl
scas
jno
out
dec
jp
idivl
popf
sbb
pop
jp
adc
dec
and
andb
sbb
loopne
fcom
scas
push
push
in
xchg
jae
in
fidivl
and
xor
and
push
mov
in
shl
mov
add
negl
fs
enter
pop
iret
and
sbb
dec
adc
sub
ja
pop
stc
aaa
jecxz
int
inc
int
mov
je
ss
imul
out
xchg
inc
enter
mov
setns
jne
and
jae
das
pop
mov
mov
inc
clc
cltd
nop
dec
mov
xchg
or
adc
push
insb
scas
mov
sbbl
sbb
cmpsb
mov
cmp
pop
cltd
jmp
lahf
das
mov
fwait
jbe
mov
fnstcw
xchg
rep
inc
add
dec
imul
xchg
ljmp
dec
cmp
mov
clc
add
mov
out
in
call
add
xchg
mov
aaa
je
sub
jo
cmpsl
cmc
push
repnz
xchg
sbb
mov
and
sbb
fisubs
add
or
ja
adcb
ret
sbb
fmuls
mov
and
loopne
popf
scas
js
xchg
push
and
mov
jnp
xchg
push
push
enter
cmp
add
mov
sbb
movsl
popa
popa
ficompl
out
adc
imul
xchg
outsb
loope
repz
lcall
push
rorl
jo
aas
cld
fstps
mov
arpl
cld
xor
or
or
xor
cmpsb
add
pop
xor
push
or
lret
arpl
cltd
loop
decb
out
filds
lret
scas
push
jne
pop
filds
dec
sbb
outsl
test
pop
aam
or
jnp
loop
addr16
or
dec
cmc
adc
dec
jg
jne
xchg
adc
jmp
or
cli
mull
ljmp
or
fisttpl
repz
add
xor
mov
and
out
sarl
sub
push
mov
adc
jmp
jl
mov
pop
jae
xorl
mov
mov
gs
mov
lock
lock
mov
inc
lock
pop
test
out
and
lds
adc
mov
push
and
pop
leave
int
jb
sub
test
dec
and
pushf
sarl
dec
pop
lods
jmp
mov
fistpll
push
push
push
xor
inc
cmp
jge
sub
push
push
lret
sbb
lods
out
leave
ss
insl
mov
fndisi(8087
arpl
andl
and
inc
mov
aaa
jnp
aas
pop
xchg
mov
lret
cmp
out
jno
into
xchg
mov
and
or
ret
jnp
cld
inc
aad
dec
push
sbbb
nop
mov
xor
add
int
cmp
lcall
mov
jmp
xor
cmpsl
out
mov
mov
adc
adc
lock
cmp
mov
int
je
lret
jo
dec
repz
test
pop
nop
cmp
data16
insl
fdivs
add
adc
in
xchg
add
dec
icebp
nop
aam
lret
mov
ja
push
sbb
and
ss
dec
mov
push
dec
pcmpgtb
xchg
jl
in
repnz
sub
inc
fsubs
or
add
out
push
push
sbb
xchg
inc
ret
mov
adc
push
and
clc
push
jmp
fisttpll
test
or
ja
mov
jns
sbb
adc
add
sbb
aad
sub
xchg
std
dec
push
pop
test
repz
jg
xchg
push
adc
lock
into
icebp
or
jnp
ljmp
pop
xor
fcompl
imul
int
adc
push
sbb
cmpsb
lret
fcomps
cmp
cltd
add
rolb
ja
mov
dec
sahf
adc
xlat
shrb
int3
fsts
ss
pop
dec
sub
enter
insl
or
lea
mov
scas
xchg
fdivrs
xchg
sub
test
inc
sub
sbb
daa
sbb
dec
inc
rclb
lods
adc
pop
pop
jae
cmp
mov
sahf
lcall
xchg
in
jl
dec
ds
jg
lret
jg
cmp
bound
mov
scas
bswap
mov
cmp
xchg
sbb
aam
data16
ret
sub
outsb
xor
mov
ret
mov
inc
cmp
iret
and
adc
inc
loope
pop
lret
je
int
stos
jecxz
jle
ljmp
or
test
cmp
or
aad
lods
call
sbb
imulb
cltd
loopne
testb
xchg
es
pop
mov
or
arpl
dec
lods
scas
xchg
mov
lcall
sahf
mov
repnz
cmc
jns
ljmp
dec
enter
sbb
mov
test
or
enter
or
std
out
pop
lahf
lods
in
xor
lcall
inc
sbb
ss
pop
fs
cmpsb
shlb
adc
movsl
mov
or
cmpl
lods
pop
lcall
outsl
movsb
ret
xchg
das
imull
in
pop
popa
hlt
sub
inc
xor
sub
inc
pop
sbb
lcall
loopne
jno
ljmp
jmp
add
cmpsl
cld
fisubrl
sahf
in
sti
cmp
andl
inc
push
xlat
cmp
mov
adc
clc
push
pop
inc
push
and
sub
mov
movsb
jbe
jl
jbe
pop
arpl
repnz
add
cli
xchg
push
dec
push
adc
test
es
mov
mov
or
lret
mov
add
pop
jno
pop
jge
sub
frstor
outsl
out
stc
lea
mov
pop
mov
leave
mov
loopne
sbb
jecxz,pt
jp
mov
je
fisubs
lods
add
mov
xor
loopne
mov
test
adc
cmp
jb
lods
mov
jne
mov
mov
aad
loopne
jo
pusha
mov
imul
sti
cmpsb
pusha
inc
push
fistpll
mov
mov
mov
in
push
cmp
lock
xchg
fistpll
imul
pop
lds
pop
and
ljmp
out
xor
bound
adc
divl
push
das
dec
and
std
xor
xor
jg
cmpsb
dec
andl
jne
pushf
dec
pop
mov
movsb
outsb
jae
or
fisttpll
push
ss
mov
jge
test
mov
mov
pushf
mov
mov
sbb
add
add
mov
fsubp
pop
ja
sub
or
mov
das
cmp
out
mov
or
dec
mov
ret
pop
lods
outsl
or
cld
add
push
jne
insb
lret
loope
ret
stos
sbb
push
pushf
cli
pop
lahf
fwait
shrb
fistps
xchg
adc
push
xchg
iret
test
shll
imul
dec
lds
clc
or
lret
pop
frstor
or
adc
ret
xchg
fs
sub
xor
jno
mov
nop
or
test
sbb
clc
outsb
pop
fs
mov
push
cwtl
imul
or
mov
sahf
or
fcomps
pop
ja
fimull
loop
inc
insl
dec
pop
mov
jne
in
mov
or
mov
pop
adc
adc
mov
stc
inc
mov
stc
cmpsb
mov
adc
pop
stc
cmp
insb
or
into
fdivrp
pop
lock
fwait
cmp
inc
xor
mov
out
inc
jnp
adc
test
dec
add
pop
loopne
leave
ds
sahf
jle
lods
mov
lea
out
fidivs
fwait
and
rorb
rclb
xor
cltd
mov
cs
stos
sbb
icebp
cmp
sub
rorb
push
jl
cmp
sub
inc
imul
pop
loopne
ds
and
push
fs
jmp
mov
dec
aaa
adc
sbb
xchg
or
roll
imul
pushf
getsec
and
pop
fadd
addl
jnp
fs
push
in
dec
push
repnz
leave
cmp
pusha
mov
dec
dec
xchg
xor
in
dec
push
mov
lahf
xchg
js
xor
mov
ss
jnp
ja
or
cltd
out
xor
or
in
fsub
popf
ja
dec
cld
pop
sahf
in
adc
sahf
int
push
inc
mov
test
sub
js
xchg
mov
jne
insl
xor
or
xor
mov
repnz
jle
enter
mov
arpl
sbb
enter
jae
gs
jbe
les
mov
jmp
iret
fidivl
mov
lods
jno
out
sbb
shlb
das
push
test
add
push
push
lret
lcall
hlt
inc
imul
push
xchg
inc
sub
outsl
adc
add
aam
jle
xchg
adc
lret
mov
scas
lods
pop
add
sbb
xchg
mov
js
push
imul
push
and
outsl
mov
and
mov
lods
jg
into
shl
shrb
or
push
inc
mov
mov
dec
push
dec
cmp
shr
xchg
inc
pcmpeqw
xchg
mov
inc
mov
jo
cmpb
cs
dec
fisubrs
or
push
adc
jg
arpl
add
or
jmp
leave
jmp
fisttps
fs
insl
add
mov
mov
and
push
push
mov
lcall
pop
xchg
fstl
in
in
idivl
call
aad
lds
sbb
loopne
push
lcall
jnp
fs
movsb
idiv
pop
outsl
add
ds
nop
mov
push
ljmp
nop
shlb
push
adc
mov
repnz
sbbb
ret
lds
cmp
cld
adc
test
and
dec
scas
jp
sub
inc
or
mov
test
xlat
aaa
out
stos
pop
icebp
add
jge
insb
movsb
es
icebp
jne
mov
inc
mov
fiadds
adc
adc
mov
cmp
xlat
in
in
imul
hlt
lods
call
push
cmp
push
cltd
adcb
sub
add
adc
stos
xchg
pop
roll
mov
pushf
mov
cwtl
popf
lods
repnz
adc
pop
lea
out
call
cwtl
adc
pushf
add
lcall
xchg
pop
ret
fwait
mov
syscall
je
dec
or
and
pop
xchg
mov
out
roll
push
mov
aad
mov
or
xchg
push
sbb
insl
test
clc
inc
pop
inc
add
inc
fisttps
lds
push
ret
fcomip
lock
enter
insb
mov
push
fldt
loop
sub
js
jl
mov
add
movsl
data16
in
push
mov
and
aas
jns
fucomp
dec
xchg
call
mov
clc
in
xchg
lds
add
ret
sar
dec
popf
adc
stos
popf
lahf
mov
popa
pop
xchg
jb
sub
adc
fstpl
sub
mov
inc
xchg
ss
flds
adc
arpl
or
push
in
dec
add
jbe
rcrb
mov
cs
aas
fwait
mov
push
pop
push
mov
adc
adc
lods
push
mov
sub
out
outsl
pop
sub
dec
adc
mov
fstpl
add
popa
test
xchg
insl
pop
dec
pop
aam
and
pop
icebp
les
push
outsb
mov
dec
in
int
pop
ret
or
add
into
mov
dec
sbb
cmp
pop
bound
sbb
inc
mov
imul
sbb
insb
inc
cmp
xchg
dec
cmpsb
mov
mov
jp
sbb
lcall
xchg
or
and
jecxz
aad
sbb
bnd
pop
mov
in
jmp
dec
inc
es
cwtl
push
mov
in
sub
cmp
pusha
cs
jge
dec
shlb
adc
sahf
mov
popa
sbb
inc
lea
std
sbb
mov
insl
sar
mov
movsb
cwtl
aaa
cmp
dec
cmpsl
add
scas
lfs
fwait
xchg
gs
lock
sub
fmuls
stc
stos
or
dec
sbb
pusha
bound
mov
cmpsl
jle
loop
cmp
pop
mov
sub
pop
mov
mov
pop
sahf
enter
imul
cmp
pushf
rorb
lds
insb
pop
xor
test
test
mov
test
dec
dec
fs
and
push
loop
cmp
mov
stos
pop
dec
mov
or
lahf
and
out
ret
jl
xlat
imul
and
add
dec
and
test
and
popa
stc
insl
cmpsb
mov
cmp
insb
mov
cwtl
rol
and
jae
dec
rclb
int
lcall
lret
dec
jno
hlt
insb
call
mov
mov
or
sub
mov
lods
push
aam
adc
ret
or
lahf
mov
out
push
call
add
push
sbb
mov
popa
pop
pop
inc
cli
pop
inc
add
stos
shl
insl
stos
push
jne
and
push
iret
pop
sbb
ss
inc
mov
lret
mov
mov
push
mov
mov
daa
int3
fistl
sar
dec
push
jp
sbb
inc
aad
or
cmp
xchg
jmp
inc
jecxz
sub
lods
loop
mov
dec
xor
sbb
dec
mov
fwait
mov
mov
xor
stos
test
inc
dec
mov
js
negl
sbb
inc
lea
jnp
shll
hlt
fcomps
jae
mov
cs
popf
and
sbb
push
push
pop
pop
jbe
mov
fstpl
sub
add
aaa
test
and
push
push
xchg
pop
sub
outsb
lods
or
es
mov
shrl
xchg
jge
mov
outsl
or
adc
lods
daa
addb
jbe
pop
xchg
loop
and
stos
or
sbb
dec
rclb
pop
xchg
xchg
xchg
mov
pop
jmp
pop
xchg
and
inc
mov
sbb
pop
adc
movsl
jae
cmp
jmp
outsb
push
dec
add
in
add
std
pop
sbb
mov
mov
xor
mov
cmpsb
xor
mov
call
dec
scas
les
daa
cmp
xchg
orl
int3
mov
rep
out
lods
push
jp
pushf
and
outsl
mov
outsb
movsb
push
push
pop
xchg
daa
mov
repnz
cmc
js
repz
pop
jle
mov
stos
xlat
xchg
jl
test
add
and
mov
int
jo
enter
popf
inc
in
mov
mov
jge
sub
into
js
dec
xor
fcmovnb
inc
add
loopne
jg
in
mov
gs
hlt
jo
mov
clc
sub
or
pop
xor
push
or
lock
pop
repnz
decl
sub
fidivl
test
and
push
xlat
negl
fists
fs
sub
inc
lods
lret
pop
fisttps
jno
push
push
mov
fmuls
dec
xchg
leave
push
adc
pop
mov
pushf
lahf
pop
xor
jae
sahf
add
adc
adc
lds
push
jg
inc
xlat
push
jae
pushf
cmpsl
ja
xor
and
mov
jl
jecxz
cmp
pusha
jno
push
out
and
lods
inc
fnstcw
rorb
mov
ud2
call
cli
ss
or
scas
shlb
and
mov
mov
inc
adc
or
stc
mov
adcl
dec
lret
and
rcll
iret
jle
cmp
cltd
pop
mov
mov
mov
adc
add
sar
dec
or
and
dec
fmuls
cld
je
sub
int3
inc
dec
std
mov
and
push
jo
clc
scas
imul
test
imul
pop
clc
mov
popf
add
inc
sahf
mov
sub
addr16
lods
mov
lcall
jecxz
mov
xchg
add
push
rcr
push
push
aad
dec
xor
les
rcrb
xorl
rolb
pop
adc
stc
xor
ljmp
aaa
lock
mov
cmp
xor
push
push
sub
insl
in
add
sbb
add
loopne
push
mov
mov
and
les
out
xchg
mov
test
pop
leave
fidivrl
sub
cld
adc
loope
dec
imul
mov
xor
push
pop
add
xchg
pop
das
push
sub
popf
xchg
sub
fdivr
sti
xor
ljmp
adc
push
add
mov
cmpsl
sbb
sbb
push
mov
test
pop
stos
repnz
cmc
jae
ret
xchg
repz
xor
inc
les
pusha
cmp
orl
dec
fimull
insl
jp
rcrb
mov
sub
out
dec
inc
bound
fildll
jbe
mov
ret
and
bound
jecxz
frstor
inc
cwtl
outsb
dec
iret
in
ljmpw
and
pushf
dec
and
and
or
movsb
adc
sbb
xchg
pop
iret
mov
aad
inc
inc
sbb
adc
lock
cmp
fs
jle
cmp
lcall
xchg
stos
stos
imulb
std
dec
sbb
addl
sti
pop
popa
inc
out
in
cmpsb
xchg
into
ss
push
mov
aam
imul
push
ss
movsl
pop
daa
leave
mov
jnp
mov
lcall
jno
cmp
pop
cmpsl
push
mov
inc
cwtl
into
sbb
hlt
xchg
stc
jge
nop
dec
aam
testb
dec
rorl
ret
repnz
jecxz
cld
loopne
mov
ficomps
and
sahf
jne
inc
testl
cmp
andl
mov
test
test
hlt
cmpsl
inc
clc
dec
shrb
mov
cli
adcl
roll
or
repnz
jp
stos
lea
dec
push
xor
pusha
jbe
in
or
or
and
gs
cmc
xchg
xchg
sahf
add
xlat
xor
and
in
sbb
xchg
mov
mov
adc
xor
pop
inc
mov
call
xchg
add
add
or
mov
push
ljmp
or
dec
xchg
leave
stos
stc
or
mov
adc
adc
mov
cmp
or
jp
jg
mov
out
js
add
mov
pop
cltd
push
sbb
outsb
call
add
or
xor
xchg
lcall
pop
xchg
je
fldl
std
and
adc
outsb
ds
pcmpeqd
loopne
or
stos
into
fisttpl
or
ret
cmc
xor
sub
add
movsb
test
jae
or
ret
outsl
lahf
xor
and
test
sahf
push
js
test
cmp
lret
or
and
xchg
mov
inc
dec
stc
jge
imul
das
dec
dec
mov
out
mov
pop
ja
adc
push
xchg
or
clc
inc
ss
scas
cmc
cmp
aas
outsb
and
data16
and
mov
pop
loope
mov
jecxz
in
stos
icebp
fistpl
pop
adc
pop
enter
or
add
sub
roll
gs
push
repz
loope
cmp
pop
xor
mov
psubq
mov
fmul
mov
lcall
fucomp
fsubrs
or
mov
popf
jmp
dec
or
inc
pop
sub
out
outsb
push
fadds
add
push
lcall
int3
cmova
push
cmp
mov
lea
jmp
mov
mov
rcrl
mov
mov
pop
cmp
pop
jmp
mov
and
mov
mov
xchg
mov
cwtl
jecxz
jbe
mov
lods
mov
lea
inc
push
sbb
mov
repnz
xor
sub
push
xor
sub
lds
lock
pusha
push
repz
int3
movsb
pushf
pop
test
cmp
push
mov
in
popf
ror
mov
sub
imul
cmp
mov
push
in
dec
mov
in
data16
mov
push
outsb
push
jle
dec
adc
push
mov
scas
loop
inc
pop
lcall
repz
and
adc
inc
in
cmpsb
pop
ror
inc
or
lret
mov
cmp
xchg
fcmovb
mov
sti
xchg
fnstcw
in
scas
orb
push
inc
pop
pop
cmp
lea
arpl
pop
cmpsb
das
inc
pop
mov
scas
std
pop
dec
subb
pop
mov
mov
pop
mov
adc
gs
or
jno
mov
insl
jbe
dec
mov
dec
ja
mov
sbb
xgetbv
inc
adc
jo
aad
cmpb
fnsave
dec
dec
inc
cwtl
vpunpcklwd
ret
repnz
loop
ljmp
gs
sbbb
addl
sahf
insb
mov
mov
enter
stos
mov
popa
mov
cwtl
and
mov
mov
mov
add
push
mov
xchg
adc
inc
inc
xchg
dec
mov
lea
mov
sbb
cs
jle
lret
xor
cs
ds
or
dec
mov
mov
roll
sti
popa
jne
dec
imul
add
shrb
js
mov
faddl
adc
pop
ljmp
add
int
mov
ficompl
cmp
push
sbb
shl
int
scas
xchg
or
dec
iret
adc
xchg
fcompl
roll
mov
jmp
or
inc
lock
hlt
adc
test
inc
in
or
aas
shrb
les
push
lods
xchg
leave
and
mov
mov
stos
movsl
mov
push
in
outsb
push
fcmovb
pop
popf
sub
jae
call
popf
jmp
clc
int3
jae
shrb
pusha
xor
rcrb
aaa
mov
daa
aas
leave
xchg
notrack
jge
push
rorb
popa
jmp
mov
dec
lods
jns
fldenv
js
adc
rcrl
xor
sbb
cltd
and
and
ja
push
imul
adcl
push
sbb
jno
mov
in
sbb
out
or
test
jecxz
jns
mov
mov
ficoms
imul
mov
pusha
push
lret
arpl
loop
sub
rcl
sub
daa
inc
xorb
enter
frstor
adc
int
dec
aaa
adc
add
call
fbstp
mov
cli
sbb
add
je
rep
adc
cltd
mov
xlat
sbbl
mov
nop
mov
push
fiaddl
lcall
inc
xchg
in
pop
aam
inc
nop
ficomps
lock
add
inc
hlt
or
xor
jbe
sub
jg
in
push
push
in
inc
enter
mov
test
adc
fmulp
push
sub
jae
inc
adc
jmp
cmp
das
mov
sbb
out
jp
pusha
jne
cmc
mov
in
and
dec
push
les
mov
addr16
lcall
push
lret
xor
pop
push
les
stc
and
std
sbb
cmp
xchg
jno
and
aad
iret
dec
dec
push
pop
das
pusha
insb
jmp
dec
pop
jl
mov
mov
pop
add
std
xchg
enter
inc
jl
jns
push
cmp
outsb
aaa
lds
sub
fsubrp
mov
jge
or
or
cmp
fs
scas
adc
push
pop
push
subl
mov
loope
into
inc
out
daa
stos
mov
testl
ret
or
or
inc
push
inc
xor
arpl
sub
mov
dec
bnd
es
stc
insb
add
xchg
sbb
stc
add
fdivrl
imul
addr16
pop
es
mov
dec
sub
push
push
or
andb
mov
fsubrs
ret
stos
test
cltd
adc
or
xor
push
ret
call
pop
frstor
popf
getsec
and
mov
or
pop
out
inc
repnz
pop
inc
sbb
mov
push
fidivs
lock
shlb
sub
push
mov
aas
sarb
sub
arpl
dec
insl
and
jae
jae
jo
pop
lret
mov
mov
pop
sub
js
xor
lds
mov
mov
xor
stc
rolb
shl
cltd
movd
jg
mov
ss
or
sbb
push
es
lds
mull
xchg
subl
jo
lods
pop
add
sub
into
lock
add
pop
into
rcl
and
lcall
scas
shl
inc
push
push
mov
mov
xchg
icebp
lods
enter
scas
push
jno
orb
popf
popa
int3
mov
jns
jl
outsb
ja
decb
cmc
mov
jge
dec
jp
and
and
mov
cmpsl
in
jne
pop
pop
ss
jne
shlb
mov
out
pop
or
fldz
ja
cmp
xor
bnd
andl
cmp
jnp
or
es
cmp
ljmp
shrb
jecxz
bound
push
fs
inc
enter
adc
cmp
push
lods
les
lods
adc
shl
roll
rclb
stos
int
ret
out
jge
mov
out
cmp
into
stc
dec
xor
xor
mov
jp
fsubl
mov
inc
jns
mov
dec
mov
sbb
sarb
sub
test
ret
jbe,pt
inc
imul
xor
loop
push
and
rcr
mov
fildll
jmp
repz
cmpsb
push
lods
mov
fcomps
es
or
jmp
push
and
lret
sbb
mov
mov
js
popf
mov
das
mov
mov
sub
lods
pop
arpl
icebp
je
push
or
test
das
cmp
xchg
lods
jg
add
fnsave
sbb
lcall
gs
ja
adc
adcb
ret
xor
mov
ja
add
inc
je
push
cltd
shll
and
arpl
leave
nop
push
imul
mov
lahf
sti
std
jns
imul
pop
xor
dec
int
pop
pop
in
sbb
jg
sbb
in
sbb
mov
dec
faddl
shl
sahf
jl
dec
mov
lods
sbb
add
push
ret
xchg
xchg
mov
mov
aam
dec
in
or
or
js
stos
mov
test
mov
hlt
insl
mov
jl
cmpsl
popf
js
cmpsl
push
aam
lahf
andl
sbb
jo
aad
outsl
or
or
sub
cwtl
pop
shrl
ret
mov
shll
insl
add
xchg
cmp
insb
push
in
sti
filds
out
and
xor
loope
jg
pop
or
jnp
les
or
xor
dec
mov
mov
xchg
mov
jo
dec
fldcw
in
or
xchg
xor
lds
sub
jnp
pusha
cmpsl
xor
push
jl
jge
insb
jnp
lds
imul
sub
shll
sarb
pop
test
popa
pop
inc
sub
or
stos
and
into
sub
adc
and
cwtl
popa
mov
in
aad
test
mov
pop
shl
jnp
call
out
pop
push
inc
pop
insl
xchg
lods
adc
repnz
mov
inc
mov
in
mov
inc
aaa
add
add
jbe
pop
ret
mov
xorl
pop
push
inc
adcl
mov
pop
std
out
add
xchg
pop
ds
inc
ret
fldcw
out
cld
aaa
adc
loope
jb
es
xchg
nop
mov
loope
addl
ret
jg
cmpsb
cmp
pop
js
mov
flds
mov
les
out
dec
push
add
lods
mov
out
loop
jp
das
sbb
mul
movsb
aam
jp
es
decb
add
fisubs
mov
pop
scas
push
pop
insl
mov
scas
out
repz
jns
je
in
sub
mov
lods
jbe
lret
aad
jge
test
add
push
mov
add
pusha
out
aad
test
push
in
pop
lahf
mov
sub
xchg
jg
out
dec
fists
rcl
fwait
sbb
mov
lcall
gs
orl
in
mov
and
cmp
push
test
into
in
mov
xchg
bound
cs
int
dec
out
in
imul
xchg
mov
ret
test
mov
arpl
cmpsb
pop
adc
dec
sbb
imul
es
jnp
jge
and
je
jno
xchg
rol
inc
into
cmp
cwtl
jl
push
inc
in
sub
stc
xchg
sarb
mov
inc
sbb
jne
lea
sbb
sub
jle
les
and
or
sbb
dec
jge
xchg
push
int3
inc
sbb
cmpsb
sub
enter
adc
movsb
in
xor
cmpsl
xchg
push
call
and
stos
mov
cmc
mov
gs
arpl
in
jb
add
ret
sahf
pop
bound
leave
jae
outsl
dec
repz
and
push
nop
add
rcrl
rclb
cltd
dec
test
push
gs
cwtl
jb
xor
jmp
inc
mov
mov
sbb
test
jno
js
int
or
add
sbb
jmp
push
mov
jmp
or
imul
mov
lcall
outsb
or
roll
aaa
fisubs
out
jg
lret
add
pop
add
jo
dec
jge
mov
shll
dec
add
push
int3
add
mov
je
add
ret
dec
loop
inc
mov
adcl
es
inc
cltd
cmp
cwtl
push
stos
mov
int3
fcmovnbe
pop
dec
xchg
shlb
jb
cmpb
out
add
dec
xchg
and
jnp
fs
pushf
or
outsl
push
and
outsb
add
test
cmp
mov
cli
xchg
cmc
jnp
clc
cmpsl
outsl
and
push
inc
add
xchg
mov
lds
jns
sbb
gs
insl
cmpsl
test
xor
push
ljmp
ds
push
xchg
clc
in
dec
xchg
mov
sub
lea
popa
dec
fcomps
rep
and
imul
idiv
add
or
adc
leave
jle
loope
movsb
mov
aam
lcall
jns
mov
ret
xchg
mov
or
and
out
adc
ret
fnstenv
jbe
mov
test
pop
cmpsb
mull
sbb
sbb
dec
ss
out
xor
push
cld
dec
sbb
leave
push
add
mov
lods
mov
dec
mov
pop
pop
and
push
sub
nop
add
jp
inc
push
cwtl
cmc
les
sti
fs
imul
xor
movb
subl
mov
out
push
pop
push
push
jne
xor
jne
push
pop
inc
jae
outsl
push
stc
ret
ret
sbb
dec
xchg
repz
clc
pop
jecxz
fs
jg
movb
pop
sahf
das
jno
xlat
loopne
test
popf
lods
out
lcall
pop
sub
and
cmp
popf
rclb
sti
rorb
jne
xor
push
ljmp
pop
pop
imul
daa
adc
sar
in
cltd
xor
jae
push
push
cmpsb
mov
xor
imul
sub
pop
inc
jns
lret
nop
push
mov
gs
jb
sub
out
mov
into
imul
cmp
adc
fmuls
xchg
push
cld
bound
enter
imulb
jl
clc
cwtl
lock
insb
push
in
js,pn
xchg
fbld
jns
or
mov
aaa
and
cmp
data16
mov
movb
xor
dec
pop
xor
and
mov
test
xchg
rcl
fldcw
or
add
push
sub
pusha
mov
insb
shll
cmp
popa
and
sub
mov
lret
lret
fisubl
cmp
rorl
loope
lods
push
ds
andb
pop
fistps
roll
int
popf
daa
sub
cwtl
push
push
xchg
shlb
xchg
imul
add
aas
add
insl
sub
xorl
insl
or
or
xchg
inc
or
fsubrs
test
test
inc
repz
outsb
cmpsl
adc
shlb
cwtl
cmp
inc
adc
adcl
jg
push
fdivrs
popa
mov
int
icebp
jmp
add
mov
mov
js
xor
lds
mov
into
pop
dec
imul
adc
jp
pop
xchg
xchg
sarb
sahf
rcrb
ficoms
inc
cmp
cld
iret
mov
jg
mov
cmp
cmp
mov
sub
outsb
pop
push
rorl
div
int3
mov
das
sub
lods
or
push
jb
nop
sarb
push
sbb
xor
jnp
push
mov
mov
movsb
js
inc
cmp
roll
xchg
adc
push
cltd
mov
xor
mov
push
add
out
mov
pop
out
fisttps
xchg
or
xchg
jo
jmp
mov
dec
cmp
outsb
in
add
es
leave
adc
and
cmpsl
leave
mov
into
test
xchg
inc
jecxz
mov
ljmp
dec
jne
in
fcmovnb
xchg
mov
decl
sbb
or
jns
scas
pop
push
sbb
pusha
imul
xor
mov
cs
out
fildl
sar
mov
jnp
aas
test
push
adc
aad
std
insb
movsb
mov
xchg
or
jne
mov
jge
shll
das
fcmove
icebp
mov
dec
in
test
fisubs
mov
out
stos
hlt
out
mov
and
bnd
xlat
das
cltd
pop
inc
call
or
ljmp
cwtl
mov
ret
std
pop
stc
add
cmp
xchg
outsl
lock
xchg
add
push
push
pop
adcl
lods
popf
sub
inc
int
mov
jmp
pop
ret
fsts
test
mov
mov
pop
fdivrl
jns
int
mov
inc
push
fisubl
xchg
subl
or
addr16
dec
icebp
jecxz
sub
xchg
fmull
decb
sub
fs
loopne
inc
lock
aam
popa
mov
mul
lock
das
jb
fbstp
fs
mov
dec
fxch
test
fcomps
and
clc
ret
jb
inc
and
sub
jge
jno
sbb
xor
subl
mov
xor
inc
dec
sub
and
ret
xchg
mov
pop
push
pop
pusha
mov
sbb
sbb
rcll
movsl
js
mov
add
mov
dec
stos
mov
pop
or
mov
pop
mov
frstor
enter
mov
sbb
pop
loop
movsl
rcrl
or
lds
mov
cmpsb
int3
add
nop
sti
ljmp
add
inc
nop
adcl
shrl
lcall
adc
aas
jnp
dec
add
and
jg
push
adc
jae
rcll
sub
mov
cmp
mov
lret
pxor
testl
xchg
jno
sahf
push
sbb
mov
jp
mov
mov
sar
rorl
fs
jl
sahf
mull
inc
stc
pushf
jnp
or
loop
or
jnp
repz
clc
dec
sub
sbb
mov
sahf
fmul
pusha
fcmovb
mov
nop
shll
daa
jg
pop
and
jno
sbb
mov
cmp
es
aad
cli
pop
fbstp
mov
cld
jg
adc
pop
push
shrl
ja
mov
add
inc
les
xchg
pushf
push
rcrb
in
push
sub
or
dec
les
mov
hlt
mov
mov
shlb
shrb
xchg
pop
mov
shrl
adc
lret
jg
xor
push
jp
stos
inc
add
retw
pop
fimuls
leave
fs
jnp
test
jo
pop
call
mov
lods
mov
idiv
dec
xlat
cmp
decl
jle
insl
daa
pop
ds
cmp
out
or
mov
and
jbe
popa
sbb
sti
mov
testl
in
dec
int
mov
out
out
pop
jbe
data16
pop
inc
fistl
lea
xor
add
pop
pop
rorl
mov
jmp
jmp
mov
mov
inc
xor
mov
aad
lret
push
sub
int
addr16
and
push
cwtl
sub
sbb
repnz
push
dec
or
push
notl
imul
aas
movb
sbb
stos
ljmp
jb
stc
cmp
aad
push
jae
mov
jne
jae
xchg
stos
sbb
add
add
je
xlat
sbb
jnp
imul
in
dec
leave
jo
jbe
repnz
adc
adc
icebp
jno
pop
in
sbb
mov
jbe
out
cmp
sbb
xchg
loop
xor
pop
fs
bound
bnd
add
or
stc
incb
jae
mov
mov
leave
movsl
xchg
mov
cltd
mov
shll
jb
or
xchg
subb
adc
movsl
repnz
imul
mov
adc
cld
inc
or
call
pop
in
lret
push
int3
les
adc
xor
fsincos
xchg
roll
cld
scas
test
es
in
inc
sbbl
test
insb
mov
or
int
mov
xchg
sub
out
inc
roll
scas
sbb
jmp
add
sub
out
mull
mul
pop
jnp
pop
fcmove
xchg
xlat
mov
add
push
lea
clc
jmp
into
fdivs
hlt
adc
ja
push
mov
xchg
mov
in
xchg
jg
dec
shlb
mov
shrb
and
out
mov
cmpsb
push
xor
pop
pushl
in
lock
jne
pop
icebp
adc
out
pop
js
lods
push
mov
andl
aaa
das
mov
adc
shl
cmpb
xorb
xchg
xor
test
dec
outsl
cmp
insl
inc
pop
sbb
pushf
loopne
pop
or
add
jb
sub
jae
and
inc
sbb
aas
loopne
xorb
test
pop
adc
in
movsl
std
mov
ss
push
xlat
popw
mov
imul
cld
jl
xlat
mov
mov
mov
int3
lahf
call
xchg
adc
inc
mov
vmovlps
mov
xchg
xchg
dec
mov
sbbl
push
mov
dec
and
add
jmp
inc
mov
pop
inc
mov
jl
aam
scas
xor
mov
xor
cmc
push
mov
mov
dec
jo
pop
leave
push
xchg
adc
add
jne
in
push
imul
ss
insb
fucom
ret
scas
sbb
test
in
fidivrl
lahf
mov
rorb
adc
stos
mov
call
jecxz
mov
xchg
lret
xchg
sbb
inc
cmp
shlb
jbe
cld
pop
pusha
mov
repnz
test
in
mov
scas
loop
mov
cmp
push
addr16
and
mov
push
push
mov
aad
lock
inc
int3
popl
dec
je
out
icebp
xchg
dec
outsb
fcomps
popf
iret
mov
jge
ret
mov
jne
out
mov
adc
cwtl
and
push
add
ret
xor
inc
and
jbe
mov
mov
mov
out
sbb
adc
mov
jp
adc
rcrb
in
hlt
add
push
jecxz
sub
fisubrs
mov
push
or
xor
fstpt
mov
outsl
pop
push
cmp
lock
movb
push
mov
push
jns
dec
neg
pop
inc
out
repnz
push
fidivrs
loop
or
outsl
push
subb
repz
pop
int3
inc
aad
add
sbb
jae
jo
inc
cmp
pop
push
fcoml
fcoms
pop
push
mov
jo
pop
pop
stos
sbb
in
adc
movsb
nop
insl
inc
iret
cmpsl
jae
iret
mov
out
add
test
aas
jns
testb
push
outsl
jle
in
jmp
stc
loop
and
test
and
aas
mov
hlt
pop
and
stc
test
cmpsb
cltd
pop
aas
dec
into
xchg
ret
cmp
outsl
or
jo
add
push
nop
fldcw
and
xchg
mov
mov
insl
add
push
call
nop
xor
aaa
aaa
sub
xor
shll
in
dec
sub
and
bound
rcrl
stc
cmp
sub
mov
pop
in
jle
inc
es
jmp
or
adc
inc
mov
add
mov
cmp
cmpl
jne
jno
mov
mov
loopne
sub
leave
int
push
xchg
icebp
insl
xor
sbb
addr16
lods
and
push
les
adc
and
stos
add
xchg
cmp
cmp
aaa
sbb
adc
xlat
sbb
jne
xorl
pop
adc
xchg
inc
xchg
pop
jb
cmc
add
call
sbb
out
pop
mov
mov
jp
ret
xor
shll
lock
and
sbb
test
sti
mov
jp
mov
cmp
pop
or
sub
cmc
loopne
dec
stos
xor
sbb
aaa
stos
ljmp
dec
lock
sub
inc
xor
inc
scas
das
insb
data16
repnz
xor
sub
adc
ds
and
xchg
xchg
stc
sub
and
sbb
mov
cmp
cmp
test
ja
push
xor
cmp
mov
test
aas
xchg
pusha
sbb
jecxz
lds
leave
orb
scas
adc
icebp
jno
fnsave
push
lods
shr
es
mov
aad
mov
scas
jmp
sub
loopne
xchg
lret
clc
push
lods
sub
xchg
leave
in
add
fcomi
xchg
dec
shll
rolb
add
and
cmc
jg
or
mov
mov
cmpsl
mov
scas
arpl
inc
stos
test
pop
sbb
add
sub
dec
pop
cmp
and
mov
fwait
mov
mov
stc
cwtl
adc
pusha
cli
fimull
push
xchg
jecxz
jp
data16
xchg
pop
jecxz
cli
rcrl
js
sahf
xor
cld
out
clc
enter
cmp
sbb
lods
inc
movsl
pop
sbb
push
add
sbb
xor
jp
and
in
xor
rcr
inc
adc
cmp
das
pop
test
movsb
mov
add
and
test
jl
inc
xorl
aad
sub
bound
scas
jbe
sarb
mov
sbb
sub
in
fwait
mov
mov
das
mov
clc
mov
cld
and
mov
cmp
pushf
mov
and
nop
sub
fldcw
insl
into
jne
inc
adc
and
push
push
addr16
test
sbb
push
js
add
jg
and
in
bnd
ss
jnp
aad
and
je
call
mov
or
pushf
and
ficomps
fsubp
mov
mov
cmp
andb
xor
xchg
mov
lods
push
and
or
mov
aam
mov
sbb
cmpsl
push
inc
hlt
hlt
and
add
bound
jge
fisubs
lea
or
imul
xor
or
in
adc
add
inc
mov
and
insb
add
mov
imul
mov
repnz
mov
out
add
hlt
les
push
push
xchg
les
in
inc
and
xor
or
loope
scas
sahf
mov
sub
fucomip
into
xor
popa
xor
inc
ja
or
lods
pop
jp
loopne
push
and
mov
jmp
adc
push
fnstenv
mov
xchg
pop
xor
pop
jb
xchg
push
cld
add
or
imul
sbb
fistl
je
jge
mov
subb
rcrl
fwait
incb
pushf
in
outsb
push
shr
std
mov
incb
sbb
push
add
inc
ss
xor
and
dec
iret
xchg
mov
xor
mov
mov
adcl
out
mov
dec
pop
sahf
dec
push
mov
inc
adc
sub
sub
inc
cmpl
pmulhuw
push
and
inc
and
hlt
jo
xchg
xor
loop
cli
jmp
in
push
jmp
adc
or
aam
adc
mov
popl
xor
notl
xor
cmp
cmp
ss
mov
rcr
mov
cmp
mov
testb
cs
adc
insl
pop
xchg
mov
xchg
popf
sbb
aam
mov
scas
or
mov
scas
sub
lea
rcr
jo
vmwrite
mov
js
push
call
in
ret
adcb
icebp
ret
sbb
mov
mov
lds
inc
push
test
add
mov
inc
ss
ret
rcrl
jmp
imul
fdiv
jle
xchg
pop
aam
pop
hlt
add
inc
jne
mov
jbe
jno
xchg
addr16
xchg
test
shl
cld
adc
iret
les
addr16
subb
adc
incb
adc
rolb
and
test
les
xchg
addl
fwait
jl
xchg
sbb
sub
jo
xchg
cmpsl
dec
or
rcll
mov
adcl
mov
mov
shll
test
aaa
int
dec
push
int3
or
js
cmpsb
gs
xchg
mov
jo
sub
fs
ja
stos
mov
or
lcall
fimull
pop
scas
bound
ja
jecxz
bound
les
testb
xor
cld
mov
gs
rcrl
ljmp
pop
inc
inc
das
faddl
xchg
aad
stos
mov
cmp
popa
mov
mov
fnstsw
add
roll
pop
dec
dec
mov
mov
cld
mov
and
jle
incb
xor
xor
stos
icebp
clc
jne
push
andb
cmp
dec
mov
sbb
xchg
test
or
loopne
dec
mov
push
mov
xor
mov
cmc
imul
sub
jmp
pop
aas
adc
arpl
mov
xchg
xchg
adc
cmp
aas
aaa
mov
addr16
imul
xor
fwait
or
jl
cwtl
imul
test
pop
out
pusha
inc
adc
aam
scas
mov
arpl
pop
pusha
rol
out
loope
adc
cwtl
mov
int
mov
ds
stc
mov
sahf
les
or
adc
add
inc
insb
sbb
jle
mov
sub
jbe
test
mov
xor
push
pop
adc
cmpsl
les
popf
inc
mul
mov
xchg
push
dec
and
test
cmp
and
in
fisubs
pop
add
shl
scas
xor
loope
gs
sti
xchg
sahf
push
add
sahf
ljmp
mov
stos
pop
mov
incl
and
ss
test
fstl
push
cmp
jno
mov
js
movsb
call
mov
mov
loope
and
xchg
inc
xchg
loopne
roll
adc
mov
mov
jb
shl
insb
sub
add
sarl
pushf
lds
xorb
movsl
xor
lock
lea
mov
ljmp
jo
mov
pop
mov
lret
les
test
sbb
xchg
pop
leave
ror
xor
mov
rorl
push
cltd
imul
addr16
ljmp
mov
pop
aad
sub
enter
mov
adc
cmpsb
daa
or
and
mov
cs
arpl
cmp
je
mov
dec
in
fists
repnz
stos
xchg
sti
loope
inc
sub
daa
pop
pop
add
popf
dec
ds
incl
adcb
sbb
push
out
xor
mov
adc
push
mov
mov
movsl
push
lods
adcb
push
mov
push
mov
cmp
sub
mov
xor
dec
pop
nop
pop
in
jne
sbb
ss
aam
ret
xchg
mov
les
inc
stc
push
cmpsb
xor
sub
pop
xchg
stos
aad
mov
and
jl
inc
fld
fldl
jne
mov
stos
xchg
testl
jle
ret
sti
fsubr
mov
cmpl
adc
mov
lods
mov
pusha
add
nop
mov
pop
push
movsb
push
aad
pop
pop
add
adc
pop
pop
sub
inc
call
loopne
pop
loope
jns
dec
lea
lea
xchg
scas
mov
stc
mov
mov
jae
push
sbb
mov
movsl
loopne
dec
sub
mov
lret
aam
inc
add
dec
or
subb
mov
in
popa
and
add
flds
adc
or
push
clc
into
loope
push
and
aam
jl
dec
pop
push
jg
xor
hlt
rcrl
pop
mov
jg
cmp
dec
shr
es
orl
adc
in
cld
hlt
repnz
shrl
lea
iret
and
pop
push
pop
fdiv
sti
mov
pop
popa
xor
xor
insb
adc
nop
and
cmp
in
std
mov
cmpsb
push
fldenv
cmp
mov
mov
xchg
jne
loopne
sbb
ret
popf
ret
fdivr
repnz
push
push
mov
push
and
xchg
imul
adc
jne
dec
jmp
add
mov
xor
in
mov
lret
ljmp
jb
xor
sub
andl
adcl
arpl
imul
xor
sub
pop
clc
mov
fsubp
xchg
sbb
nop
xor
mulb
shlb
adc
imul
rorl
cmp
inc
pop
xlat
mov
xorb
insl
jecxz
aam
dec
lods
push
jbe
pop
cmc
insl
das
int
in
xor
dec
push
cli
andl
jge
push
punpcklbw
incl
push
xchg
push
push
movsl
and
jns
jnp
mov
lret
stc
dec
dec
add
push
cmpsb
js
or
adcb
pop
or
xlat
and
mov
pop
std
icebp
inc
sbb
subl
inc
subb
cmp
icebp
mov
jle
push
sub
lods
push
inc
daa
popa
or
sahf
and
xchg
movsl
push
in
outsb
push
xchg
cmp
leave
mov
push
pop
fcoms
and
sbb
or
sbb
outsb
decb
repnz
dec
jp
sub
mov
cli
push
imul
ja
jbe
cmp
sub
pushf
push
pop
xchg
stos
sub
es
das
xchg
jbe
fstps
cmp
push
hlt
xchg
jb
cmp
add
into
fildl
dec
scas
loope
jo
inc
daa
or
imul
aaa
jno
inc
dec
push
test
mov
jmp
mov
mov
test
sub
cmpsl
lock
add
dec
divb
ret
dec
sub
loope
push
cmp
cmp
shr
call
xchg
add
inc
mov
xchg
cmp
fwait
pop
hlt
test
adc
jnp
cs
lods
data16
sub
mov
shl
jecxz
pop
aam
dec
or
xor
jge
pop
inc
paddsw
jp
jmp
lret
fadd
shlb
cltd
loop
stos
leave
jnp
adc
and
shlb
out
inc
push
or
mov
xchg
nop
sub
push
in
inc
inc
jecxz
pop
das
pop
leave
enter
mov
lds
outsl
cli
dec
cmp
mov
mov
adc
out
add
mov
or
and
rcrl
fwait
aaa
cmp
mov
xchg
ret
sahf
test
in
loop
fstpt
xchg
testl
repnz
cmp
or
dec
fcoms
sbb
or
xor
sbb
push
cmp
inc
mov
cmc
jmp
pop
push
xchg
inc
sbb
xchg
rorb
pop
sub
fadds
subl
imul
mov
int
adc
lahf
loopne
dec
test
mov
insb
mov
fwait
leave
ja
mov
sub
in
dec
xor
or
jns
lds
mov
mov
or
jns
cmc
cmpsb
in
popf
leave
pusha
insb
jb
xor
subl
cmpl
cmp
movsb
push
lea
popa
push
inc
rorl
mov
cltd
movsb
pop
out
fsqrt
sub
mov
xor
add
fstpt
cmc
dec
and
mov
pusha
sbb
cld
in
enter
es
pop
add
bnd
movsb
pop
lahf
jo
shlb
jp
push
hlt
fsubs
fdivr
icebp
cmpsb
int3
icebp
divb
sub
add
xor
test
cwtl
mov
xor
rcrb
sbb
gs
sub
lret
dec
icebp
jp
and
jg
dec
push
xor
cmp
std
mov
jae
adc
mov
push
addr16
pop
cld
xor
adc
mov
sarb
push
mov
xchg
push
shlb
sbb
and
ret
adc
push
add
cmp
orb
sti
int
sahf
in
aas
xchg
mov
jg
stos
dec
push
repnz
ret
ljmp
call
or
dec
cli
dec
xchg
and
xchg
sbb
cli
popa
add
cld
push
adc
movsb
pop
cltd
sbb
clc
pop
pop
inc
mov
jl
out
inc
int
push
sub
inc
fwait
jl
jbe
jl
out
aad
sbb
cwtl
cmp
mov
fdivrs
add
mov
jns
mov
sbb
stos
cmp
call
or
arpl
jg
sub
xor
or
fsts
sub
dec
mov
fnstenv
out
in
adc
call
fisttps
rclb
cmp
insb
sbb
sbb
and
xchg
jp
inc
daa
movsb
mov
icebp
dec
jbe
mov
repz
jl
sbb
das
mov
mov
cmpsl
cld
pop
lcall
orb
mov
cwtl
mov
xchg
dec
test
jg
cmc
xor
jae
jge
mov
clc
dec
es
andb
ss
xor
call
es
mov
stos
js
aaa
daa
popf
bound
movsb
sarl
cli
pop
xchg
sbb
mov
or
mov
pop
pop
inc
and
mov
add
sti
gs
insb
jnp
push
and
vfnmsub213pd
inc
clc
test
lea
xorb
ret
mov
cwtl
sti
mov
push
xchg
ja
adc
jl
lods
leave
enter
lea
xor
jle
repnz
scas
cmp
mov
decl
rcrb
cmp
insb
call
mov
mov
test
add
shlb
test
mov
test
inc
cmpsb
cld
mov
mov
inc
sbb
jbe
cwtl
jge
lock
fs
shll
cmc
add
sahf
xorb
mov
out
fisubrs
mov
or
pushf
cmp
imul
xchg
dec
xchg
xchg
fdivrl
jae
mov
nop
xor
loope
test
jo
mov
popa
dec
push
mov
outsl
subb
pop
lods
js
daa
or
dec
outsl
mov
jae
dec
xchg
xchg
movsl
mov
push
iret
jecxz
cmpsl
iret
and
and
push
lods
test
jne
popf
sbb
loope
xor
fisttpl
addr16
mov
push
adc
cmp
lds
and
xchg
fdivrs
pop
cli
stos
movsb
inc
popf
fcom
mov
mov
bound
shlb
mov
or
cmp
add
scas
leave
imul
push
lret
insl
ret
leave
push
jbe
push
pop
in
test
fwait
xor
out
fisttpl
movsl
push
xchg
jns
fildll
rcrl
aad
sub
dec
inc
xchg
roll
cmc
pop
sub
rorl
aad
pop
add
jp
rcrb
lds
xchg
fistps
in
cmp
int
push
push
jmp
int
and
cwtl
repnz
sbb
add
add
xor
imulb
mov
add
xchg
or
add
jecxz
jae
loopne
sub
xchg
filds
push
and
repnz
mov
fdivrl
cli
fcmovne
aad
bound
pop
lds
fildl
sub
lret
notb
cli
dec
cmpsl
stos
pop
lods
sub
outsb
push
mov
bound
divb
ss
inc
ret
cmp
clc
mov
fildll
xor
pop
push
pushf
arpl
fcomp
mov
mov
push
mov
mov
jae
or
leave
fincstp
cmpsb
cmpsb
shlb
lods
push
cltd
std
imul
xlat
push
cli
xor
ja
sub
sub
les
iret
fisubl
mov
pop
je
cmpsl
hlt
mov
cltd
dec
repz
jge
dec
add
insl
xchg
cmp
ja
les
jae
test
jge
lock
ret
test
negb
push
fnsave
ds
xchg
mov
push
sub
xchg
js
es
xor
add
int
pop
or
mov
mov
jmp
push
lock
pusha
std
jl
aas
push
pop
je
and
inc
cmpsb
push
mov
mov
cmpsl
fists
daa
testb
sarb
nop
lcall
pop
rcll
and
std
jge
out
in
adc
inc
jae
sub
repz
xlat
mov
jns
jg
jecxz
push
add
insl
rcrl
sbb
sti
stos
aaa
pop
bound
jne
cli
lea
jecxz
and
loop
xorl
fstps
lcall
pop
fdivp
mov
data16
aas
pop
mov
fwait
jnp
mov
in
mov
mov
in
ficoml
dec
mov
pop
pop
sbb
mov
mov
cmp
sbb
aad
and
mov
xchg
sub
or
push
sti
dec
xchg
fists
cmp
adc
mov
and
push
sti
xor
push
lods
shlb
dec
outsb
push
or
cmpl
sub
vpshaq
pop
lcall
fldcw
test
add
xlat
mov
xchg
pop
das
adc
loop
fwait
nop
push
cltd
inc
xorb
clc
setp
fnsave
lds
test
lods
mov
mov
adc
mov
lds
ds
int3
cmc
dec
sub
call
lahf
in
scas
test
xchg
lds
jmp
outsb
push
ret
fsub
pop
movsl
lea
mov
roll
icebp
mov
arpl
pop
xlat
sbb
fildll
mov
mov
out
movsb
int
loopne
dec
jecxz
xor
push
inc
mov
gs
mov
mov
mov
cmp
adc
xchg
loopne
cltd
inc
sbb
fmull
mov
push
in
jmp
inc
pop
and
aas
pusha
outsl
xchg
lods
jle
or
fbstp
cs
adc
testl
idivl
or
loope
andb
mov
sbb
sub
and
jl
gs
js
sbb
mov
scas
outsl
clc
mov
call
lds
sti
xor
push
cltd
xchg
enter
mov
sub
mov
adc
add
mov
push
sbb
or
lcall
cmc
push
jg
fstpl
inc
scas
xlat
outsb
sbb
pop
stos
push
shlb
dec
inc
mov
sarb
xchg
mov
jne
scas
imul
movsl
test
imul
push
mov
scas
fisubrl
aam
lcall
fwait
sahf
pop
mov
sub
orl
lcall
cwtl
and
shl
pop
xor
mov
sbbl
or
stos
leave
push
adc
xor
loopne,pn
inc
into
fstpl
pusha
sbb
aam
fdivs
dec
inc
add
xchg
adc
cli
and
sub
pop
testb
mov
or
insl
xorb
jbe
enter
imul
mov
dec
lds
xchg
hlt
lods
cmp
cwtl
repnz
dec
in
sbb
mov
adc
or
pop
add
jecxz
cltd
fisubl
mov
dec
pop
mov
cmp
or
xchg
stos
ljmp
xor
mov
repz
and
mov
xor
pop
decb
jp
mov
cmp
sbb
cli
lret
dec
gs
mov
mov
cli
cmp
into
cmc
scas
xchg
dec
ja
or
out
lahf
imul
cmp
leave
cmp
lds
popf
ficomps
popa
rolb
testb
push
jmp
cmp
inc
fs
lret
push
jg
test
ljmp
or
jno
and
test
or
stc
add
mov
adc
xor
cmp
stos
test
loopne
outsl
push
or
clc
xchg
scas
scas
cld
imul
cltd
cli
sbb
mov
or
pop
repz
add
jle
and
mov
ret
adc
jns
jle
dec
sub
xchg
arpl
cmpsl
mov
cmpsb
leave
inc
mov
xchg
iret
stos
in
push
adc
jb
push
popf
pop
mov
cmp
and
lea
mov
mov
fstps
shr
out
mov
rcrb
adc
pop
dec
jle
jecxz
test
sti
xor
test
sub
imul
dec
inc
cld
lret
bound
test
mov
daa
xchg
pop
ss
call
xchg
mov
sub
aaa
orl
mov
sbbb
xchg
push
xor
test
cli
cmp
in
or
inc
adc
or
in
je
repnz
cwtl
xchg
inc
addr16
cmp
and
shrb
and
adc
cmc
mul
xchg
scas
filds
mov
sbb
popf
xchg
test
mov
adc
inc
cltd
adc
enter
push
pusha
and
sbb
cmp
int
movsb
cmp
xlat
andl
add
adc
clc
lret
outsl
loope
dec
daa
sbb
stos
push
cmp
fisubs
or
ljmp
xchg
inc
cmp
mov
leave
push
xor
leave
sti
xor
jbe
push
insb
scas
loop
pop
push
sub
push
mov
je
or
fwait
mov
insl
cwtl
aas
or
pop
mov
push
pop
adc
jae
aam
inc
in
pop
mov
mov
cmc
push
hlt
loopne
xlat
nop
add
fdivrl
js
jge
rorl
popa
mov
add
fisubl
sahf
out
dec
popa
sbb
popa
and
sbb
les
cmpsb
jge
sub
xchg
pusha
inc
or
mov
mov
enter
test
or
int3
cmp
rorl
outsb
cmp
in
and
fld
xchg
notb
xchg
lds
push
mov
sub
cmpsb
in
inc
fdivs
iret
pop
sub
test
sahf
cltd
cmpsl
fwait
adc
mov
push
sbb
mull
divb
dec
xchg
imul
test
push
push
and
jle
test
nop
gs
jns
and
mov
or
gs
push
jmp
push
add
repz
and
in
int
in
mov
dec
outsb
imul
lcall
jo
mov
les
add
lret
insl
jnp
out
mov
mov
lods
mov
and
pusha
js
sub
xor
pop
cli
arpl
xadd
mov
adc
out
imul
aad
cwtl
xor
xchg
mov
cwtl
push
and
inc
repnz
jo
fistps
lock
ret
loop
dec
add
xlat
push
sub
jg
push
or
push
clc
add
xchg
push
orb
repz
into
xchg
or
pop
mov
cltd
test
jne,pt
mov
xor
add
inc
cs
sarl
fsubr
pop
aaa
scas
inc
lea
stc
out
xor
test
repnz
pusha
enter
inc
mov
neg
clc
pop
fs
mov
nop
dec
faddp
gs
cld
dec
xor
dec
ret
mov
ja
cmp
test
test
bound
add
daa
repnz
sbb
sub
sbb
jl
int3
mov
or
iret
sub
outsb
rorb
out
out
xchg
stos
mov
xchg
pop
jo
mov
ret
push
jbe
or
pusha
cwtl
das
dec
dec
xor
dec
cli
aad
pop
bound
jns
xor
mov
add
or
sub
sub
lods
push
push
addb
fidivrl
movsl
int
cmp
arpl
popf
scas
xchg
xchg
jo
and
lret
dec
mov
mov
mov
test
mov
mov
mov
or
xchg
mov
loop
int3
add
sbbb
pop
or
mov
mov
pop
pop
pop
sub
shl
adc
in
addr16
cwtl
loopne
in
in
inc
and
push
jnp
mov
scas
in
adc
aaa
jp
push
les
jmp
leave
or
pop
leave
jecxz
xlat
nop
sbb
xor
mov
push
icebp
add
movsb
fists
mov
aad
mov
xchg
das
int3
arpl
ja
sti
adcb
sub
or
adc
sbb
out
mov
push
popf
cwtl
out
jl
xor
fs
mov
hlt
inc
jmp
xchg
or
das
data16
push
mov
lret
clc
mov
das
in
out
inc
popl
mov
mov
aaa
lret
scas
xorl
xchg
or
push
ret
sbb
jbe
outsb
dec
imul
popa
push
test
xor
jbe
dec
cli
pushfw
mov
popa
mov
xchg
mov
dec
mov
test
imul
nop
imulb
in
push
in
xorl
out
rcrl
ss
mov
jge
jg
and
sbb
iret
jnp
xor
leave
mov
add
aam
insb
xor
sub
fidivl
pop
pop
stos
mov
mov
fbstp
mov
cltd
xchg
cmpsl
mov
loop
iret
dec
jp
xor
xchg
jecxz
fwait
xchg
scas
adc
lock
cwtl
dec
add
stos
fildl
data16
movsb
cmpl
mov
inc
add
cmp
pop
orb
loope
xor
gs
and
daa
test
sub
imul
cltd
adc
shrl
cmp
lods
adc
jnp
push
add
mov
iret
scas
sar
push
mov
loope
pop
das
ljmp
loopne
in
int
outsb
mov
jns
cld
cmp
das
dec
idivl
stc
std
inc
je
mov
mov
notb
aam
hlt
sarb
or
aad
and
dec
xchg
mov
xor
cwtl
loop
jl
xor
sbb
push
test
call
jb
in
dec
fstl
pop
pop
bound
or
je
cli
imul
notl
ljmp
add
loopne
les
and
ret
or
push
loop
pop
lods
addr16
inc
add
fisubrl
pop
sbb
inc
xchg
ss
jmp
cmpsb
push
in
add
mov
or
stc
and
ljmp
inc
mov
xor
lea
pop
push
pop
or
and
pop
stc
outsl
push
adcb
xor
lods
push
and
imul
addl
lret
pushf
test
into
pop
jae
cmp
mov
push
or
push
push
cmp
inc
dec
mov
stc
mov
pop
cmpb
cmc
mov
lods
inc
jecxz
fmul
xchg
add
jle
pop
aaa
mov
and
ja
mov
fistpl
gs
mov
push
dec
xchg
sbb
or
pop
push
dec
int
fildll
das
dec
pop
inc
stos
inc
jecxz
jo
lahf
mov
enter
hlt
push
add
clc
sbb
imul
push
imulb
and
xchg
fs
adc
mov
adc
lret
and
add
xor
add
jmp
fadds
adc
add
stos
js
dec
addr16
arpl
xchg
add
push
push
push
jns
adc
adc
das
adc
push
mov
sbb
mov
mov
call
and
jbe
pushf
inc
mov
outsb
mov
mov
fisttpll
sbb
mov
mov
xor
ret
ret
push
gs
addps
inc
push
jmp
push
gs
or
xchg
jl
sbb
sub
mov
adc
push
and
insb
shll
ds
dec
mov
jecxz
and
jecxz
adc
xlat
int3
sbb
enter
test
push
jne
add
push
popa
cmc
xchg
stos
stc
mov
pop
mov
jo
mov
push
xor
push
jle
push
xchg
cmp
insl
mov
xchg
call
lods
jns
mov
aaa
out
pop
imul
xchg
sub
fs
outsl
enter
add
fstps
xor
pop
aaa
sbb
jecxz
test
insl
pop
shlb
xchg
pop
iret
push
je
push
cwtl
loop
adc
adc
xor
sbb
dec
mov
inc
jge
jl
cli
mov
jns
mov
cs
cmp
daa
cmp
push
jno
js
mov
stos
loope
mov
out
mov
cli
sbb
rcrb
mov
mov
popa
lahf
addr16
cmp
inc
ret
sahf
pop
push
and
sub
jae
fwait
lret
mov
add
dec
lahf
mov
pop
and
pop
movsb
movsb
dec
lahf
jmp
das
movsb
dec
xchg
clc
daa
pop
push
fidivrl
les
jnp
nop
push
clc
inc
scas
mov
fs
inc
mov
cmpsl
jp
xorl
or
dec
leave
out
adc
mov
push
add
cmp
cmpsl
dec
in
pop
cmp
sahf
out
imulb
cmpsb
add
push
jg
les
fs
lds
iret
jecxz
and
mov
dec
int
test
push
pxor
pop
mov
movb
push
mov
cmp
xlat
out
std
es
adc
imul
dec
test
pop
mov
xor
xor
imul
inc
or
xchg
pop
adc
pop
cmp
or
mov
push
cmp
pop
pop
jp
daa
adc
cs
or
loope
xchg
mov
out
movsb
ret
jo
jmp
movsl
dec
jnp
mov
mov
in
jmp
pop
aam
push
mov
pop
aam
mov
cld
lret
push
hlt
je
sbb
push
addb
mov
cmpl
ficoms
insb
jle
lods
mov
loop
iret
xchg
xchg
mov
sbb
fcoms
inc
or
adc
ror
sbb
sbb
sbb
xor
cmp
jns
push
cmc
add
pop
data16
icebp
daa
mov
mov
movb
jl
mov
xor
cmp
xor
fstpt
push
xchg
inc
rcrb
fs
push
mov
inc
repz
xchg
sbb
jle
adc
sub
call
inc
add
sti
ss
and
aad
xchg
add
neg
mov
and
ret
pop
or
das
cwtl
lods
rcl
jg
add
add
xlat
dec
inc
out
fwait
sahf
mov
push
dec
xchg
sbbl
sub
out
pop
jg
inc
shrb
pushfw
lock
cmp
cmp
daa
add
xchg
into
imul
sarl
and
mov
movsb
sub
cld
imul
pop
movsl
mov
add
cmpsb
inc
cld
and
cmp
mov
push
mov
push
fsubr
and
and
adc
fnstenv
or
mov
push
daa
ljmp
lret
push
test
fidivs
decl
pop
xchg
repnz
mov
ficomps
dec
and
and
mov
arpl
into
pop
sbb
cmp
es
lahf
mov
xchg
mull
push
adc
out
pushf
scas
sahf
cmp
mov
adc
mov
imul
or
jmp
mov
push
dec
dec
jae
and
and
fists
leave
xor
adc
jecxz
popa
jle
pushf
add
out
jecxz
or
mov
lcall
lock
repz
loope
hlt
and
sub
ljmp
pusha
in
jae
push
and
leave
pop
cltd
fcmovbe
repnz
push
cmp
xor
push
sbb
xchg
sti
mov
jo
dec
xor
adc
pop
sub
sub
sub
adc
das
jnp
ret
pop
push
xor
cmpsl
sub
mov
test
arpl
xchg
test
jns
mov
cmp
filds
inc
sub
sub
jmp
push
add
push
leave
nop
add
out
sahf
adc
mov
cmp
xor
pop
dec
nop
adcl
not
or
loopne
daa
stos
adc
dec
outsb
mov
in
and
pop
loop
mov
in
ror
sub
jl
arpl
imul
addr16
xorb
orl
cmpsl
xchg
push
xor
int3
mov
xor
or
jae
mov
add
sub
fildl
add
inc
xorl
pop
jp
sahf
jns
jnp
imul
fdivl
scas
int3
pop
xor
pop
inc
insb
mov
test
sbb
xor
inc
aam
repz
in
out
jae
out
lods
je
test
cmp
or
push
rcrl
aad
push
out
gs
in
cmp
ret
dec
test
jne
xchg
jl
sbb
mov
jae
popa
ret
adc
push
or
repz
and
pop
data16
dec
dec
xchg
pop
inc
cs
mov
push
or
sbb
mov
jb
push
fidivrl
out
xor
xchg
xor
sub
cli
cmp
xor
in
mov
add
add
iret
mov
jp
in
push
push
pop
jne
cmpsl
lret
ss
pop
pop
sti
sti
shrl
leave
or
lahf
xchg
enter
xor
mov
jl
push
out
sbb
je
push
mov
pushf
or
lret
mov
xor
les
add
cltd
mov
mov
dec
mov
gs
repz
fwait
add
repnz
pop
push
ljmp
test
xchg
mov
orl
cmp
iret
mov
adc
loop
or
shrl
cmpsb
fdivr
xor
movsl
inc
mov
aad
stc
inc
mov
cmp
push
in
jmp
into
jb
jp
sbb
xor
pop
aaa
jbe
push
ficomps
sbb
sbb
out
jo
and
push
add
je
cmp
fidivrs
sub
sub
jno
jns
and
call
fcoms
push
arpl
nop
or
fsubl
jge
sahf
jg
cmp
daa
xor
xchg
inc
dec
xchg
push
jbe
into
aam
adc
add
nop
popf
stos
sahf
lea
jecxz
lds
sub
rolb
sub
call
divb
insb
jbe
and
push
push
cmp
inc
mov
xchg
enter
xor
dec
shlb
mov
out
stos
dec
dec
add
repz
fsubrp
pop
and
or
push
add
jp
mov
inc
insl
inc
push
loope
add
pop
loopne
loopne
std
and
xor
ss
or
leave
push
mov
lahf
push
jno
adc
sub
arpl
inc
pop
leave
test
jle
cmpsb
cs
push
std
jns
cmpsl
sub
jnp
fucomip
fwait
add
sub
and
jg
and
ret
idiv
cmpsl
sub
jo
sbbl
cmp
cmp
inc
xchg
ficomps
ret
sub
and
or
jnp
sbbb
ljmp
test
xor
cmpsl
icebp
daa
test
sub
loopne
iret
mov
cwtl
enter
jo
push
add
fsubrl
and
adc
cwtl
shrb
les
push
adc
enter
sbb
rorl
ljmp
aaa
dec
pop
or
inc
adc
mov
add
pushf
rolb
sub
pop
dec
and
xor
sahf
jp
xchg
adc
and
adc
ret
pop
push
test
out
enter
roll
mov
sbb
decl
and
data16
or
insl
xchg
sbb
out
sbb
adc
aaa
sub
fwait
rorl
fsubrs
push
jge
insb
std
dec
xor
cmc
push
in
stos
mov
push
dec
add
push
insl
hlt
add
sub
cltd
and
int3
mov
or
cmp
int3
pusha
sti
inc
test
scas
or
pop
pop
enter
test
push
dec
sub
dec
mov
and
xor
in
out
push
fsubrs
in
jmp
shll
outsb
sub
outsl
popa
and
inc
popa
lock
push
das
pop
aas
adc
cmc
pop
xchg
xor
pop
mov
mov
xor
sub
adc
mov
mov
fbstp
sub
xchg
mov
ficompl
imul
notl
inc
sar
mov
outsb
nop
mov
in
dec
les
or
cmp
push
mov
or
inc
jb
jmp
xlat
mov
rcrb
sub
adc
sub
push
mov
bound
xor
mov
xchg
adc
or
ss
jns
lods
inc
pop
fimuls
into
lods
and
push
shrl
mov
mov
pushf
add
dec
jne
sub
lahf
leave
fstpl
mov
inc
in
aad
hlt
insb
mov
add
sbb
stc
push
cs
jns
push
cmpsl
ret
sbb
adc
inc
cmp
stos
push
xchg
add
sbb
add
insb
xchg
arpl
mov
fbstp
pop
test
jae
jp
shll
pop
cltd
hlt
xchg
lret
sbb
dec
mov
xchg
jmp
icebp
pushf
xchg
into
mov
movsl
arpl
sahf
ret
test
or
int
es
popf
lahf
dec
mov
popa
test
push
jle
int
jmp
dec
rorb
inc
fiadds
fwait
repnz
popa
jb
test
iret
xchg
xor
sub
xlat
and
fbld
mov
inc
das
cmp
xor
push
xchg
adc
enter
xchg
dec
dec
mov
fistpl
inc
mov
out
mov
xor
test
or
rcll
inc
imul
xchg
rclb
ret
cwtl
add
pop
ja
mov
test
xchg
loope
loope
adc
dec
pop
push
mov
push
or
sub
mov
or
and
and
dec
jns
ret
fcomps
jns
jmp
push
push
out
mov
xchg
and
out
ss
lods
ds
mov
fwait
out
inc
lods
push
fucomp
mov
pushf
nop
push
stos
std
or
mov
in
xor
in
lcall
divb
jns
push
mov
sbb
or
dec
pusha
hlt
dec
jecxz
cwtl
mov
jl
cmp
xchg
inc
jg
repz
jg
aam
adc
ds
adc
test
loope
xor
fwait
pop
ljmp
js
js
ds
mov
leave
jg
mov
jne
ljmp
mov
in
test
fcoml
leave
jmp
add
pop
and
dec
cmc
mov
movsb
pop
push
jp
mov
shrl
fldenv
inc
movsb
xchg
push
push
xlat
popa
sub
std
push
push
aaa
clc
inc
loope
push
mov
pop
sub
xchg
int
test
pop
jl
cmp
movsb
lods
jle
scas
cmp
pushf
pop
stos
dec
rcrb
nop
fsts
inc
cmc
sbb
lods
dec
jecxz
scas
add
out
push
mov
lahf
adcl
jmp
arpl
lret
jae
inc
out
sti
call
pop
xchg
test
and
or
dec
out
or
pop
shl
mov
xorb
shl
fiaddl
daa
pushf
mov
aaa
mov
stos
cmpsl
and
out
mov
sti
push
leave
mov
lods
cmpsb
addl
aam
lods
test
shlb
fistpll
jns
cmc
pop
ret
push
xor
fcmove
test
mov
test
loope
jg
jno
cs
mov
stos
clc
xor
jo
popa
mov
push
inc
lods
adc
sbb
loopne
fbld
fisttpll
fwait
mov
mov
enter
pop
mov
leave
flds
mov
sarb
imul
mov
out
imul
sub
push
out
cltd
movswl
les
rorl
jo
dec
mov
and
and
pop
pusha
outsl
jne
ljmp
lahf
aas
or
vpcomw
cwtl
stc
inc
push
in
outsb
scas
pop
sub
sahf
test
mov
out
and
fcmove
les
and
mov
push
mov
shlb
fisttps
push
ret
cmp
push
jbe
push
xchg
sti
je
sarl
lcall
jnp
test
sub
sbb
iret
xchg
lock
stos
xchg
jb
mov
divb
loopne
push
push
lcall
mov
cmpb
shll
stos
xchg
mov
inc
notl
xchg
daa
and
lods
inc
and
xor
inc
addb
js
outsb
loop
jnp
sbb
or
aad
mov
insl
add
jmp
test
adc
popf
into
pop
stos
sti
cmpsb
cmpsl
xchg
push
mov
cwtl
pop
pop
lret
mov
mov
pop
add
sbb
push
fdivrl
mov
mov
or
rcr
dec
je
and
sahf
mov
dec
ret
out
iret
sahf
inc
out
lret
out
sub
push
sbb
inc
stc
jmp
push
or
dec
int
test
dec
inc
cmpl
cltd
rorl
xchg
out
jbe
push
mov
xor
mov
int3
loop
arpl
or
nop
es
or
das
cmp
out
out
int3
js
test
in
adc
jns
sub
push
xchg
push
popf
jge
ret
pop
xlat
pop
xor
and
aas
stc
ficoms
or
fwait
mov
add
addl
adc
adc
outsb
imul
les
add
stos
rorl
xor
push
mov
jo
stos
and
pop
sub
shrb
scas
pushl
add
enter
cmc
addr16
fistps
cwtl
fwait
insl
aam
test
loope
dec
sgdtl
sbb
adc
cmp
test
ds
sub
sbb
cmp
les
int
push
loopne
sub
pop
int3
shlb
test
inc
mov
sbb
cmpsl
push
xlat
sbb
pop
ja
arpl
dec
pop
fwait
pushf
lret
dec
out
fwait
or
addb
jecxz
cltd
data16
cmp
mov
fldcw
cmp
inc
jne
xor
mov
inc
cs
jmp
cmp
ljmp
popf
rcrl
movsl
mov
inc
mov
addr16
fcoml
push
cld
mov
mov
pop
adc
gs
sbbl
xchg
sbb
fwait
mov
xor
addr16
lahf
mov
daa
data16
cmp
ret
and
mov
or
jl
test
cs
das
out
retw
push
lret
setbe
jno
lods
scas
aad
pop
lods
jo
lea
sub
push
repz
shrl
xchg
scas
add
pop
jle
in
lea
iret
inc
cmp
sub
lds
dec
pop
cmc
inc
push
pop
lcall
pop
push
lret
mov
shl
mov
adc
xor
inc
mov
pop
adc
cmp
test
lds
sub
push
dec
dec
mov
clc
dec
dec
inc
pushf
mov
das
mov
clc
and
out
or
mov
fs
or
xor
movsl
mov
mov
cmp
dec
dec
pop
lcall
mov
mov
and
fistl
mov
xchg
cmpl
xor
push
dec
add
rclb
cmp
jg
jle
and
loopne
cmp
iret
push
mov
pop
in
insb
xchg
sahf
jae
fcmove
pushf
mov
mov
lcall
sub
jmp
xchg
jle
push
jecxz
outsb
push
mov
pop
xlat
das
in
mov
addr16
data16
dec
mov
or
popa
xchg
push
aas
cmp
or
or
push
or
push
out
lods
out
add
inc
scas
scas
enter
lahf
mov
adc
fildl
or
inc
sbb
in
xor
push
movsb
scas
jbe
aad
lods
xor
incl
jbe
movsb
inc
loope
xchg
aaa
enter
xchg
ret
mov
pop
fadds
pop
aad
dec
lock
addb
pop
adc
jb
mov
cld
vpcmpgtb
push
push
adc
xor
dec
loopne
mov
mov
cmp
or
jne
sub
jle
pop
aad
add
fnstsw
xchg
adc
cmp
cmp
ficoms
ja
orl
sub
aam
cmp
ret
xchg
sbb
outsl
or
sbb
in
cmp
xor
loop
les
lods
push
insb
stos
addb
aas
insl
ret
stos
push
mov
xor
push
and
andl
das
fs
pop
mov
inc
or
jno
ljmp
pop
adc
or
fidivrl
aaa
pop
jne
cs
xor
push
xchg
aam
sbb
inc
loope
mov
jmp
mov
bound
fstpt
faddl
aaa
into
jnp
cmp
jnp
xor
sti
push
add
jge
mov
lea
mov
xchg
cmp
repz
mov
stos
inc
test
xor
stos
mov
gs
inc
cli
xor
mov
in
cli
cmp
mov
hlt
xor
inc
jecxz
cmp
jmp
fstpl
jae,pn
ljmp
sbb
movsb
sub
lock
dec
adcl
inc
stos
dec
loopne
popa
insb
fbld
rcr
ljmp
or
push
mov
loope
cmp
sbb
insl
dec
mov
imul
mov
xchg
cmpsl
ret
out
mov
push
jecxz
js
stc
not
xchg
and
sub
adc
mov
pop
ja
dec
and
push
loopne
sbb
mov
test
xor
cmc
and
pop
imul
jno
mov
int
shll
or
mov
jnp
adc
push
sbb
or
mov
pop
daa
sbb
mov
in
das
pop
mov
imulb
jb
int3
aaa
and
outsl
push
aam
pop
popa
test
or
xchg
jp
lret
mov
cmp
xchg
mov
cmpsl
fisubl
aaa
outsb
das
xchg
mov
adc
cmp
cli
push
cmc
es
xchg
inc
cmp
hlt
outsl
xchg
jb
jnp
pop
sti
in
mov
add
popa
push
nop
enter
cs
xchg
mov
mov
sub
mov
push
loopne
fldt
lock
into
push
testl
sbb
out
xor
mov
insb
pop
pop
xchg
sar
or
sbb
es
adc
or
mov
cmpsb
xchg
sub
call
popf
mov
cmp
imul
inc
pop
repnz
scas
mov
int3
fs
out
test
mov
repnz
push
mov
sub
xchg
xlat
lret
push
lock
jge
rcll
mov
aas
pop
popf
sub
jmp
in
add
ret
sub
std
pop
lods
inc
out
dec
cmp
cmc
lret
sub
mov
cmp
mov
test
xchg
jg
inc
pop
lcall
int
mov
and
or
leave
add
pop
fisttpl
mov
cwtl
out
sbb
mov
mov
mov
aad
into
xchg
xor
xor
and
xor
pop
dec
push
outsb
test
popa
fdivrl
cli
pop
out
hlt
jo
movsb
push
cmp
test
mov
in
or
aad
movsl
adc
pushf
fwait
add
pop
sub
cmp
sub
insb
int
xlat
movsb
inc
jle
insb
push
pop
adc
mov
sti
jb
and
jg
insl
hlt
xorb
jae
leave
std
in
add
cmpsl
jno
and
das
push
ljmp
or
add
add
pop
cmp
add
arpl
add
sti
mov
fwait
arpl
jmp
fadds
mov
mov
xor
xor
aam
xchg
cli
outsb
lret
loop
int
out
movsb
jl
loop
daa
hlt
mov
lock
cmpsb
push
cmp
imul
jg
push
pushf
subl
xchg
loopne
cmp
ss
add
and
or
dec
sbb
aad
in
fsubr
mov
push
aas
cmpsb
mov
dec
mov
xchg
aaa
addl
jbe
sbb
cmp
jmp
xchg
ja
jo
pop
mov
lds
shll
rcrb
dec
cmp
les
bound
dec
jl
pop
fcomip
cmp
shll
sbb
je
xor
test
xor
shlb
pop
jl
insl
xchg
divl
mov
rcll
jb
adc
jecxz
mov
lahf
and
sub
jb
mov
xchg
fbld
push
adc
push
cltd
mov
or
std
or
cmpsb
sbb
clc
xchg
loope
cwtl
add
cmp
ror
imul
xchg
in
incl
xor
jns
test
repnz
push
or
mov
mov
lcall
sbb
in
and
cmp
bound
or
test
or
enter
imul
insb
in
sbb
or
in
inc
mov
pop
and
xchg
mov
jl
hlt
xchg
data16
mov
mov
sarb
ficompl
stc
inc
sub
cs
int3
inc
shll
mov
lock
inc
xor
jbe
aaa
ja
popa
enter
cwtl
js
out
loop
adc
notl
int
ljmp
sbb
dec
pop
mov
test
in
cli
push
mov
pusha
lahf
movhps
jle
jae
movsb
aaa
pop
jo
push
mov
inc
movsl
push
test
mov
js
cmc
xor
mov
xor
imul
in
dec
dec
std
scas
out
int
mov
lods
or
pop
data16
push
or
mov
xor
mov
out
push
jb
xchg
outsl
fisubl
imull
iret
inc
test
int
add
mov
test
push
jo
mov
add
loope
lods
cwtl
mov
loopne
hlt
mov
daa
subb
push
out
in
xlat
jns
cli
add
loopne
movsl
mov
pop
fcomp
add
dec
jg
lock
adc
inc
mov
jbe
stos
ret
not
xchg
xor
clc
roll
cmpsl
insb
or
int
leave
lahf
cmpsb
mov
outsl
shlw
xchg
xchg
add
test
imull
add
adc
dec
xor
mov
or
aas
adc
orb
sub
cmp
outsl
jae
push
jb
dec
repz
xchg
push
dec
clc
xor
popl
stos
cld
daa
push
les
popf
sbb
mov
enter
or
add
xchg
push
leave
inc
imul
xor
xlat
inc
sub
outsl
inc
in
inc
and
jns
fstl
pop
daa
enter
push
bound
mov
xor
mov
dec
cmp
cmpsb
mov
push
xchg
jae
mov
xchg
xor
fists
pop
cmp
and
push
repnz
ds
not
pop
mov
and
xchg
mov
jp
cli
xor
push
pop
jmp
xchg
dec
shll
stos
popa
cmpsb
sti
loopne
and
add
sahf
fsts
rclb
dec
dec
adc
dec
sbb
lret
sbb
push
lds
pop
mov
pop
cmpsb
ret
movsl
loope
outsb
xor
mull
es
movsb
cmp
inc
fwait
dec
movsl
test
sbb
xchg
fstps
lahf
mul
jle
enter
push
and
repz
xor
inc
sbb
add
loop
inc
mov
fimuls
loop
inc
lea
les
rcrl
mov
push
inc
andl
mov
inc
icebp
cmpsl
lcall
repnz
mov
in
sub
clc
pop
push
or
mov
test
cmpsb
fnstcw
mov
cmp
sbb
sbb
int
leave
in
es
in
pop
sub
push
adc
mov
faddp
pop
cltd
push
push
mov
mov
mov
subb
mov
adc
pop
push
repnz
inc
fidivrl
sbb
inc
cmc
icebp
outsl
repz
aad
lahf
insb
sub
xor
orl
fldt
and
lock
cmp
fwait
loop
push
mulb
mov
lahf
loope
movsb
xchg
jmp
addb
inc
jecxz
mov
imul
inc
sub
test
and
mov
lods
cmp
das
popf
and
sub
push
stos
fld
jg
fwait
pop
cs
and
or
popa
dec
adc
adc
mov
es
rorb
mov
and
xchg
xchg
push
loopne
jg
and
jmp
cmp
xchg
call
dec
stc
xchg
xor
and
fstl
xor
or
push
das
add
jmp
arpl
fsubr
push
mov
cmp
cmp
rcl
hlt
psrlq
popa
clc
push
fsubr
add
test
xchg
subl
rolb
sahf
pushf
pushl
mov
ss
sahf
mov
scas
add
xor
lods
sbb
lods
loop
mov
std
out
aad
inc
add
mov
mov
aam
mov
xorb
dec
xchg
and
jns
aam
xlat
test
loopne
aad
loope
mov
sbbb
cld
cwtl
ljmp
push
pop
dec
mov
sub
loopne
xchg
jge
pop
xchg
add
dec
popf
popa
mov
lods
int
frndint
mov
inc
pop
cmc
push
mov
push
and
cmc
lods
cmp
adc
dec
xchg
nop
rcr
popf
bound
repnz
dec
adc
adc
xor
xchg
jge
xchg
inc
or
mov
lock
das
dec
cmp
orl
in
movsl
fs
sub
sbb
pop
pop
mov
mov
jg
xchg
inc
mov
dec
mov
inc
lock
test
ljmp
pop
out
in
cs
add
mov
jno
cli
out
test
push
pop
lock
mov
andl
rolb
inc
repnz
imul
aad
lret
add
inc
ret
aad
or
scas
into
dec
or
das
aam
in
jbe
cmp
push
aaa
fmull
jge
mov
test
cwtl
movsl
cmp
inc
stos
push
in
fwait
fwait
and
mov
mov
xchg
sub
xchg
mov
in
out
out
xchg
sub
jl
mov
xor
push
mov
and
imul
mov
scas
jnp
mov
out
add
idivl
push
test
mov
pushf
lret
dec
pushf
add
mov
ret
mov
xor
mov
nop
std
enter
pop
lods
lcall
loop
push
sbb
xchg
cmc
and
ja
sbb
js
imul
imul
mov
push
sbb
push
in
sub
std
aas
xor
rorb
inc
negb
fsubrp
shll
icebp
and
fldenv
mov
mov
aaa
pop
lahf
rcll
pop
call
int3
push
ret
into
outsb
adc
insb
jge
xor
rcr
fsubrs
test
aas
loopne
pushf
out
stc
ret
insb
out
or
loop
mov
das
sbb
dec
insl
jne
jge
aas
mov
mov
mov
add
aas
in
inc
das
das
push
jle
daa
adc
pop
clc
mov
cmp
add
jne
fcoms
inc
or
xchg
inc
pop
add
lret
jb
les
aaa
jb
arpl
push
bswap
jecxz
or
fidivl
stos
and
and
cmpsl
sbb
std
push
xor
and
mov
push
int3
sarl
sub
pop
add
and
inc
mov
mov
sub
cmpsb
push
push
dec
dec
clc
jecxz
mov
mov
adc
push
and
add
dec
outsl
nop
fnstsw
xchg
sbb
push
jne
mov
jns
sti
jbe
nop
cs
push
ja
jo
mov
dec
in
neg
mov
jns
push
xor
stos
mov
iret
jg
mov
sub
xchg
jns
lret
xor
pushf
dec
cltd
in
push
aad
sbb
mov
and
lret
les
ja
stos
dec
mov
ja
cmp
jmp
pop
adc
mov
mov
push
mov
mov
cmp
scas
and
js
mov
aam
dec
or
xor
or
xchg
xchg
and
mov
jae
daa
xchg
pusha
rcll
popf
ret
or
pusha
out
jl
sub
xor
cmp
and
xchg
test
xor
icebp
sbb
cmpsl
sub
cs
mov
xchg
xchg
pop
in
push
dec
nop
or
inc
pop
lods
pushf
jl
xchg
in
cltd
loop
pop
aaa
sbb
mov
popf
int
pop
adc
mov
xor
and
add
jge
fdivp
int3
movsl
add
mov
cmp
mov
out
jmp
jl
mov
js
add
ret
xchg
pop
rclb
or
jnp
icebp
jle
jecxz
enter
push
jle
repz
inc
and
js
inc
out
leave
lretw
rcrl
jbe
clc
xorb
push
cmp
xor
adc
push
push
xchg
lea
add
push
adc
add
add
jl
lret
rcl
in
xchg
dec
rcr
sbb
dec
push
mov
bound
insb
loopne
add
push
mov
stos
rcll
scas
sub
inc
sbb
cmp
add
pop
adcb
cmpsl
fwait
mov
sbb
sub
lock
stos
or
lods
lret
pop
jp
mov
stos
xor
push
cwtl
inc
repnz
jae
cmp
mov
scas
imul
stos
lds
jp
bound
out
adc
pop
lcall
dec
mov
cmpsb
cltd
sub
push
mov
repnz
cs
orb
push
jp
jb
popf
or
movsl
push
mov
or
popf
ret
icebp
imul
aaa
leave
fidivs
fiadds
lret
enterw
xor
sub
mov
js
les
pop
push
adc
lds
adc
mov
hlt
sbbl
into
pop
pop
or
test
xchg
into
cmp
and
push
or
fwait
cmpsl
fsts
fs
xchg
out
dec
lret
cmp
test
jecxz
add
popa
repnz
pushf
inc
std
cmpsb
cli
xor
dec
cli
movsb
loope
imul
xchg
mov
mov
mov
pushf
js
pop
mov
xchg
repnz
lds
pop
mov
push
lods
iret
int
insl
aam
mov
mov
ljmp
adc
push
jno
dec
jmp
dec
mov
sbb
push
inc
adc
fcoml
imulb
mov
in
out
adc
sti
sub
sbb
jns
test
cmp
mov
push
pusha
pop
and
lock
daa
or
and
push
jnp
mov
cld
loopne
cmp
add
inc
jmp
pop
add
xor
aas
push
std
nop
push
fbld
mov
enter
dec
xor
add
lea
aas
adc
mov
mov
lods
or
fisubs
loopne
das
mov
mov
adc
dec
cmc
aaa
and
push
jp
repnz
jp
mov
push
gs
fldcw
add
pusha
jne
cmp
sub
dec
add
das
jl
cld
xchg
aas
inc
mov
sub
mov
icebp
cs
push
lds
xchg
cmp
lahf
fsubrs
ds
cld
push
daa
bound
xor
add
cmpsl
sub
repnz
jo
add
jne
mov
cmp
mov
add
pop
sub
jb
int
mov
dec
mov
lret
test
push
xor
rorw
popl
cmpsb
arpl
sbb
stos
xor
inc
adc
jecxz
andl
ret
cwtl
dec
sarl
xchg
sub
aad
cltd
xorb
mov
pop
outsb
stos
mov
push
sbb
loop
mov
jo
clc
jae
mov
jl
pop
aam
lret
in
cmc
fimull
in
sub
inc
addr16
std
cli
push
sahf
cmc
push
mov
sub
dec
cmp
mov
popf
and
notb
js
daa
icebp
rorb
rcrb
add
xor
jno
jp
int3
aad
and
movsb
and
sbb
add
jb
mov
mov
cmc
lods
and
and
xchg
cmc
outsl
pop
push
test
xlat
inc
adc
xor
mov
test
gs
insl
fwait
test
pop
push
rcll
adc
imul
mov
iret
add
repz
sub
or
xchg
addr16
sahf
push
test
xchg
ficoml
push
les
ret
test
sbb
loop
cli
adc
sbb
or
dec
imul
jmp
sti
outsl
mov
fdivrp
mov
mov
push
adc
les
insl
sub
sub
fbstp
scas
push
vpsubw
jge
pop
adc
pop
je
jne
orb
mov
push
clc
into
mov
pop
mov
fs
jnp
or
imul
mov
aaa
dec
nop
shll
and
lea
movsl
sbb
scas
js
imul
mov
int
fdivp
jnp
ljmp
pop
xor
aam
ds
dec
out
xor
orl
dec
push
rcl
aas
in
arpl
jb
inc
fsubrs
mov
xchg
inc
push
mov
and
loop
cmp
xchg
mov
pop
push
or
mov
cli
cmc
xchg
jle
push
shlb
push
and
push
xchg
pop
in
cld
lahf
std
cli
or
jne
jb
xchg
mov
rcrl
push
fdivrs
into
lcall
inc
jne
es
inc
shl
mov
mov
jmp
dec
nop
adc
sbbl
xchg
ss
mov
sbb
aaa
xlat
xchg
out
leave
mov
les
pusha
mov
std
mov
jmp
push
add
or
push
mov
loop
sub
sbb
pop
lock
and
imul
adc
xor
ret
inc
js
jp
pusha
hlt
mov
cld
ljmp
adc
dec
and
shll
iret
adc
loop
push
out
xchg
push
aad
and
xlat
inc
je
mov
pop
jge
sub
add
scas
adc
insl
stos
sbb
shrb
es
push
mov
or
aam
outsl
pop
cwtl
adc
shl
loope
and
lods
cli
or
adc
mov
inc
jno
add
mov
mov
bound
pop
shrb
in
jb
jo
sbb
fidivrs
jg
js
cmc
lock
adc
cs
mov
mov
pushf
xor
xchg
lret
cli
jg
imul
mov
ret
pushf
mov
scas
dec
insb
or
lds
in
stos
lds
outsb
dec
mov
shrb
ret
xor
cmpsb
and
jb
mov
push
sbb
xchg
out
nop
jge
aad
dec
pop
scas
stc
and
adc
repnz
popa
out
sti
inc
or
out
jbe
push
das
out
cld
pop
testl
addr16
shlb
in
xchg
rclb
repz
les
pop
leave
jb
sub
out
hlt
fldl2e
xchg
push
xorb
dec
push
sbb
test
iret
into
dec
test
xchg
fcmovnu
xchg
inc
add
dec
je
push
mov
mov
ret
loope
mov
jp
mov
icebp
rolb
xchg
fcompl
int
test
outsl
add
sub
into
sbb
nop
cli
icebp
mov
int3
mov
pop
in
add
add
adc
pop
sub
hlt
inc
shl
mov
stos
add
or
xchg
cmc
or
insb
push
dec
sub
mov
xor
data16
out
test
sti
xchg
sbb
xlat
hlt
aam
out
pop
stos
and
or
inc
mov
test
xor
in
pop
and
aas
outsb
cld
cli
imul
inc
aam
aas
xchg
outsb
xor
cmc
daa
pop
aaa
cltd
sbb
jmp
jbe
mov
in
jo
jmp
in
inc
inc
outsl
or
inc
mov
in
jle
xor
jae
jo
lahf
repz
out
xor
je
xchg
leave
scas
movsb
and
lret
xorb
cmpsb
xor
jecxz
mov
push
bound
inc
adc
and
popf
pop
push
sub
jp
clc
negl
pop
jmp
cli
jne
add
imul
mov
rcrl
lds
mov
pop
movsl
and
adc
cmp
das
dec
mov
sub
mov
sahf
and
and
fadds
sub
lea
jp
sbb
bound
jge
and
jmp
push
mov
and
xor
fcmovnbe
sbbb
inc
test
mov
jbe
movsb
mov
data16
inc
jnp
cmp
dec
fiadds
sub
in
fisttps
call
ss
xlat
movsb
aaa
sbb
sti
fwait
mov
push
or
and
mov
mov
jbe
ret
ljmp
imul
into
fiaddl
test
xchg
and
adc
ret
nop
inc
in
ss
push
xchg
sub
push
int3
test
jns
inc
mov
sbbb
or
addr16
xor
mov
push
and
aam
mov
out
push
nop
mov
xchg
scas
icebp
jle
jne
pop
inc
shrl
mov
mov
sub
insl
pop
push
push
xchg
mov
sbb
fwait
pop
movsb
ret
push
cld
fwait
sbb
test
xor
out
insb
adc
cmp
movsl
jne
test
xchg
cwtl
xchg
push
dec
scas
ljmp
fcmovnbe
mov
repnz
mov
int3
xchg
xchg
push
jecxz
stc
jnp
jnp
scas
movsl
repz
fisubl
fmull
aam
jmp
cli
sbb
imul
mov
jge
or
popa
ss
arpl
push
in
mov
pop
mov
pop
cwtl
jo
mov
mov
gs
mov
adc
push
lret
xlat
inc
xor
jae
or
mov
jle
push
sub
ja
in
out
mov
je
add
loope
xchg
sbb
sub
mov
sbb
out
sub
outsb
dec
sbb
xchg
push
jns
dec
pop
inc
sbb
mov
ror
or
aad
xchg
cld
and
pop
outsl
push
xchg
jle
popf
xor
cwtl
xchg
jb
mov
inc
lods
mov
sbb
arpl
hlt
pop
add
push
jmp
insb
lret
outsl
ds
sub
sbb
cltd
into
clc
cmp
dec
pusha
xchg
lock
mov
sarl
xchg
dec
fistl
rcl
arpl
cmp
xchg
mov
inc
xchg
lret
mov
shlb
cmp
leave
movl
aam
fisubrl
add
xlat
and
mov
in
or
pop
stos
mov
les
xor
lret
jne
aaa
sbb
mov
adc
mov
rcrl
inc
test
pop
aad
data16
insb
mov
or
bnd
test
call
xchg
sbb
push
stos
lea
xchg
insb
movsl
movzbl
mov
std
loopne
fidivrs
and
mov
add
je
jbe
loopne
iret
ret
jmp
jmp
loop
out
or
sbb
jns
mov
out
loope
movb
sahf
add
ret
into
call
cmp
mov
ds
inc
iret
adc
les
jo
js
push
sbbl
stc
cmc
push
mov
add
inc
xor
shll
ljmp
xchg
mov
in
out
or
xlat
cmp
pop
and
dec
xchg
mov
mov
xor
cmpb
stc
inc
testl
pop
loopne
mov
test
dec
aam
mov
filds
pop
and
scas
jecxz
jl
and
int
popa
cld
mov
aam
inc
leave
push
es
inc
adc
jle
leave
mov
ljmp
jg
loopne
mov
pop
xor
cmp
movsb
movsl
mov
popa
loopne
pop
test
arpl
int3
dec
cli
xchg
clc
pop
inc
lods
mov
sbb
adc
adc
leave
mov
pop
pop
jb
lea
insl
stc
push
sub
mov
test
aaa
jmp
jmp
ja
and
in
repz
jp
out
sub
inc
mulb
xchg
sbb
test
jle
push
sub
lcall
pop
arpl
sbb
lret
arpl
mov
and
push
cmp
bound
dec
addb
and
int3
fs
cmp
repnz
outsl
mov
mov
imulb
out
pop
ljmp
les
adc
mov
aaa
jl
gs
mov
repnz
pop
add
mov
aaa
cli
pop
lods
lret
insb
sti
cmpsb
dec
sub
sub
fmull
dec
xor
ljmp
adc
shlb
mov
pusha
fwait
les
nop
jno
loopne
xchg
andb
lcall
shr
cmpsb
scas
rorl
cmp
dec
loope
fidivrs
sbb
jb
pushf
stc
mov
pop
dec
sub
outsb
scas
popa
mov
xor
and
xlat
cmpsb
mov
clc
ret
adc
aad
ljmp
pop
push
cmp
xor
ret
test
adc
xor
cli
insb
lret
mov
sahf
xor
or
mov
adc
jb
imul
fists
sbb
adc
fldt
mov
sub
fisubrs
dec
pushf
mov
out
or
inc
ds
xlat
cwtl
jge
lret
add
mov
ljmp
jle
fcmovu
cmc
lret
inc
xor
xchg
and
test
cmp
cmp
aas
cs
mov
ja
ja
cmpl
sub
add
jp
sahf
jne
or
data16
aas
hlt
out
jo
dec
push
add
call
and
add
sbbl
ds
cmp
lods
shlb
testl
mov
adc
xchg
fmuls
push
push
inc
mov
or
jp
mov
pop
and
int
rcrl
int3
inc
xorl
cmp
pop
nop
mov
push
inc
sbb
rorl
adc
fwait
ds
fildll
xor
mov
push
inc
mov
cmp
cltd
or
mov
push
int3
dec
inc
pop
aam
aad
daa
daa
sub
negb
dec
or
cwtl
js
sti
jo
pop
mov
inc
xchg
xchg
mov
inc
pop
xor
mov
enter
je
in
test
dec
addr16
outsl
adc
adc
js
mov
cli
dec
pop
jo
repnz
push
jmp
cmp
ret
jo
mov
cmp
test
insl
ja
xor
repnz
and
clc
pushl
js
in
ss
insl
or
push
insl
mov
mov
mov
jge
sbb
sti
fs
mov
xor
aam
aad
ret
test
lret
imul
sub
mov
xor
mov
xor
mov
inc
jnp
xchg
pop
call
cmp
aad
sbb
lea
lock
fldcw
mov
rcrb
jle
or
cmp
mov
and
jecxz
xchg
enter
fbld
int
push
pop
sub
dec
das
xchg
mov
xor
sbb
push
jb
stos
aam
fs
dec
xchg
in
jle
notb
ja
mov
clc
push
xchg
mov
icebp
push
sub
in
push
xchg
movsl
xchg
xchg
xor
xor
pusha
pop
pop
pop
xchg
cmc
ret
or
pop
jb
cmpsb
mov
mov
push
sub
shlb
call
xchg
or
adc
lods
ret
cli
xchg
out
aad
dec
rcl
loop
or
loop
or
shrl
cmp
daa
dec
pop
xor
push
and
xchg
sub
lock
dec
ret
lock
dec
mov
pop
sub
adc
jp
rcrb
mov
sahf
jmp
mov
data16
aam
push
or
and
xchg
jl
cld
jmp
fwait
leave
xchg
test
cmp
ss
add
adc
adc
cmp
insb
pop
mov
cltd
push
fidivl
andb
int
fnstsw
aam
pushf
fsubp
fsts
cmp
lret
mov
sbb
es
std
pop
push
cltd
xor
sub
call
pop
addb
sbb
and
ror
and
leave
xchg
push
das
shrb
out
push
je
and
adc
jae
mov
jb
mov
fisubrs
js
jmp
push
fisttpl
cmp
dec
stos
repz
sahf
hlt
ljmp
aaa
cs
xchg
pusha
adc
fidivrs
xchg
and
and
adc
shlb
or
xlat
movsb
mov
mov
mov
inc
fisttpl
lock
mov
inc
adc
movsl
mov
xor
add
cmc
xor
je
push
in
iret
sahf
addr16
mull
movsb
mov
fdivl
add
and
pop
test
iret
add
mov
in
mov
push
push
bound
pop
inc
or
cmp
fmuls
push
jp
jl
fnstenv
data16
mov
dec
mov
xchg
int
mov
and
test
push
dec
lret
fldl
mov
push
pop
ss
mov
mov
lahf
pop
and
jbe
push
add
sub
repnz
xchg
adc
cltd
pop
sub
in
jg
out
jmp
ror
shll
pop
std
jae
xchg
lods
insl
ss
pop
lds
xchg
dec
inc
out
or
bound
cmp
mov
mov
ret
xlat
adc
or
sbb
inc
sarb
fisubrs
push
or
nop
popf
mov
out
lds
test
fiaddl
repnz
jmp
pop
inc
xchg
mov
bound
sbb
fisttpll
push
inc
pop
jge
in
mov
xor
outsb
jp
repz
icebp
fcompl
mov
lock
cmp
or
adc
jae
inc
aaa
sbb
push
lock
and
xor
inc
sub
cmp
outsb
xor
aas
add
mov
loope
inc
pop
push
and
sbb
jbe
daa
mov
jg
inc
rcrl
mov
loope
adc
cmp
fcomps
pop
cmp
frstor
pop
xchg
dec
dec
sbb
push
sub
pop
sub
repz
vpunpckhdq
push
push
loopne
stos
sbb
scas
mov
adcl
pusha
xchg
ja
add
add
popa
mov
aad
mov
mov
popf
shlb
enter
and
mov
into
jne
xor
adc
adc
mov
dec
stos
loop
adc
popa
mov
shlb
jbe
int
sbb
mov
mov
sub
and
lcall
daa
arpl
sbb
adc
mov
sbb
popl
inc
push
jp
fs
adc
pop
jno
lods
mov
xlat
jae
inc
loope
mov
xchg
xor
in
subps
jb
mov
xchg
jl
hlt
js
hlt
cld
js
lea
cli
push
orl
js
or
adc
mov
stc
sarb
cs
push
call
and
fiaddl
lods
movsl
push
hlt
into
arpl
stos
adc
cld
popf
dec
stos
cld
fisubs
aam
inc
and
decl
outsl
std
mov
aas
scas
shl
fldcw
push
mov
jmp
hlt
mov
rol
dec
or
xor
sti
lret
loopne
scas
insl
js
daa
adc
adc
pushf
push
and
pop
sbb
pushf
into
out
xor
int
into
cmp
cmp
mov
and
add
xchg
into
rdmsr
xor
loope
int
out
mov
push
rcl
negb
push
orb
fstl
aas
pusha
jl
cmp
xchg
push
add
aas
ljmp
sub
pop
adc
fs
out
nop
int
and
mov
cli
pop
or
push
jp
push
mov
or
add
loopne
xor
cs
aaa
pop
mov
mov
adc
mov
pusha
dec
fldt
push
inc
pop
pop
pop
rcrl
fldcw
lock
push
sub
push
xor
cmpsb
cld
jns
je
jns
push
loopne
push
xor
fisubrl
cmp
rorl
mov
stos
adc
ds
adcl
fmul
das
ret
pop
sub
xor
les
fcoms
bound
lret
in
fcmovu
mov
jl
or
inc
js
jbe
xor
out
outsb
jp
sub
add
jnp
jbe
mov
repz
shl
or
loopne
or
int3
ja,pt
adc
loope
dec
inc
sub
int
fnsave
popf
or
ret
out
loopne
fdivl
lods
xor
je
cmp
lods
aad
outsl
push
or
andb
pop
lret
mov
lods
xchg
push
mov
movsl
push
or
int
push
test
shll
xchg
ret
adc
pop
popf
add
inc
xchg
sarb
popa
scas
push
popa
ja
add
in
jb
dec
enter
out
sahf
push
loopne
fdivrs
sub
mov
push
cli
cmp
stc
enter
popf
in
adc
adc
inc
ret
and
test
and
es
ja
aam
push
ljmp
scas
jbe
cmpsl
jae
push
stos
adc
mov
push
sbb
push
aaa
nop
iret
push
or
xor
fcomi
and
sahf
mov
stos
xchg
int
pusha
ja
cmp
lods
add
test
enter
pop
add
jns
mov
dec
jae
mov
shl
ret
outsl
push
ret
push
aam
dec
xchg
cmp
addr16
gs
mov
les
cs
stos
jb
sahf
subl
or
or
xchg
pop
sbbb
test
jno
push
mov
xchg
dec
jnp
in
inc
xor
push
xchg
mov
inc
jg
inc
mov
arpl
mov
xor
lods
scas
mov
mov
mov
loope
rcr
les
mov
sahf
sti
mov
rcrl
push
clc
in
push
jg
adc
inc
into
insb
pusha
outsl
je
ret
xlat
lcall
rolw
hlt
mov
mov
lock
adc
cmc
out
or
ret
mov
or
or
jbe
out
push
pop
push
jno
iret
push
outsl
pop
imul
mulb
lret
lds
in
lock
decl
leave
lret
jp
dec
fs
rcll
loopne
ret
xor
lret
push
adc
sub
arpl
push
mov
out
les
mov
enter
dec
push
xor
fmull
jae
out
xor
xchg
jecxz
clc
pop
mov
or
lcall
flds
negb
test
or
sbb
or
loope
idivb
addr16
xor
xchg
sahf
cmp
rolb
mov
inc
xor
and
pop
test
sub
das
jp
cmp
mov
out
pop
sbb
incl
addr16
outsl
add
inc
fmuls
and
pop
adc
and
pop
or
rcrl
aam
out
int3
sbb
mov
xor
and
das
outsb
sbb
and
mov
xor
mov
mov
arpl
andl
cmpsb
test
mov
icebp
dec
stc
ds
xchg
es
call
sub
sbb
movb
testl
cmp
pop
inc
sub
out
test
mov
sub
mov
xchg
push
push
jbe
stos
cmpsb
add
loope
sbb
or
repnz
stos
shll
mov
or
out
das
sbb
mov
mov
incb
fstl
lahf
out
ret
push
fs
dec
pushf
cwtl
mov
fstps
mov
adc
push
mov
push
mov
pop
push
pop
sub
or
aad
das
dec
xor
sub
push
cmpsl
gs
jo
push
pop
jmp
or
pop
popf
mov
jno
dec
movsb
into
sbb
pop
pop
mov
int3
jp
cld
loop
mov
jle
push
jb
sub
outsb
mov
filds
xchg
mov
sub
mov
pusha
out
add
lcall
inc
jmp
jns
mov
cmc
and
mov
xchg
xor
divl
mov
inc
das
pop
sub
sbb
xor
nop
movsb
cmp
scas
pop
repz
scas
pop
cmc
adc
jnp
push
leave
js
ljmp
repz
xchg
das
jmp
in
test
leave
xlat
sti
cmp
enter
cmp
pop
ret
add
and
hlt
cwtl
arpl
and
into
jnp,pt
mov
and
inc
sti
dec
jmp
adc
or
call
out
mov
mov
sbb
cmp
das
frstor
jb
and
add
mov
stc
ret
sbb
jp
mov
aam
mov
jns
jno
or
nop
and
jle
ja
sbb
and
mov
shrb
in
mov
cmp
inc
arpl
rorl
adc
daa
sub
subb
jns
adc
nop
jl
test
sbb
mov
nop
gs
insl
inc
dec
mov
nop
outsl
inc
inc
push
push
inc
or
sbb
stos
cmp
fwait
bound
ret
xchg
lret
dec
jecxz
imul
xlat
jle
xor
fmul
enter
xor
jecxz
lea
rep
or
push
and
cmp
loop
cli
aad
adc
sbb
std
xor
jns
pop
cld
bound
das
xchg
cmp
or
xor
call
ss
cmp
ljmp
xor
xlat
fs
js
std
ljmp
daa
std
push
push
cli
das
inc
ja
sbb
xorl
mov
pop
loop
adc
mov
je
cwtl
add
hlt
arpl
xor
scas
dec
mov
clc
ja
addr16
fadds
adc
sub
mov
dec
inc
hlt
jno
mov
adc
data16
sub
test
shl
jl
int3
mov
jmp
dec
xchg
cwtl
mov
adc
inc
enter
cltd
cmp
ja
push
lods
or
mov
inc
fcompl
shl
int
push
or
push
or
sti
inc
enter
cmpsb
popf
pop
nop
mov
arpl
ret
inc
and
jne
ljmp
push
or
mov
mov
fisttpl
ret
dec
mov
sub
pop
and
mov
lods
testl
out
outsl
adc
loope
icebp
out
out
xchg
loop
cwtl
mov
lock
lds
dec
dec
pop
and
sub
sbb
dec
popa
outsb
add
jb
shlb
mov
mov
lcall
roll
or
mov
dec
adcl
scas
xchg
pop
xor
in
stos
mov
ss
and
ret
xchg
xor
rorb
mov
push
cwtl
jge
enter
push
imul
add
dec
cmpsb
aad
push
inc
clc
fs
fcmovb
and
mov
les
or
mov
dec
jb
loopne
dec
into
sub
int3
aaa
push
iret
jp
mov
dec
mov
int3
push
in
inc
pushf
or
fucom
inc
mov
pop
push
fsubs
aas
pop
xchg
jp
rcr
jge
sub
arpl
cmp
adc
lods
popa
jnp
push
mov
jae
shr
push
filds
xchg
mulb
ret
xchg
jp
in
out
out
dec
mov
outsb
or
push
je
mov
xchg
sar
stos
std
or
test
pushf
or
sbb
call
add
test
mov
enter
push
and
clc
popa
hlt
negb
lcall
dec
cmp
das
inc
jmp
jbe
cwtl
leave
lcall
test
repnz
fsubr
adc
lods
daa
cmp
ljmp
xchg
sar
and
sub
lahf
jg
lret
push
add
pushf
jge
or
jae
ljmp
pop
imul
imul
stos
negl
cwtl
out
dec
jle
mov
div
rcr
adcl
nop
xchg
xlat
cmp
das
dec
push
cltd
leave
out
out
in
push
loope
push
cmpsl
fwait
je
fimuls
xchg
push
jne
test
xchg
aas
rcrb
cmp
inc
mov
movsb
das
ret
sti
xor
testl
addr16
out
shlb
leave
xor
repnz
xchg
mov
cwtl
ljmp
cli
lods
push
cmp
mov
sarl
fnstenv
enter
push
jne
push
mov
xchg
out
es
dec
aaa
jb
cmp
daa
frstor
sub
cmp
adc
pop
pop
enter
jae
jb
fcoml
lret
pop
daa
mov
or
ds
sub
outsl
mov
sahf
divl
dec
sti
gs
cli
js
or
movsl
ss
lea
out
pop
cmp
xor
lds
imul
lds
js
sti
cmp
jg
and
aad
lret
fcomi
pop
mov
xlat
cld
mov
pop
shr
roll
popa
mov
orb
add
jae
decl
iret
jg
incb
xchg
jno
jmp
xchg
cwtl
addr16
xor
adc
in
enter
mov
dec
and
mov
xor
xchg
adc
mov
mov
pop
push
dec
pop
xchg
ret
dec
out
outsl
lret
outsb
sub
popf
mov
jno
shlb
mov
outsl
mov
push
clc
rolb
jb
dec
outsl
mov
nop
push
test
subb
dec
test
fisubrs
xchg
imul
insb
mov
add
xchg
decb
dec
jge
inc
sbb
je
adc
ja
ljmp
lea
mov
sub
bound
inc
jbe
dec
dec
ret
mov
jae
cmp
popf
xor
push
push
ret
adc
nop
and
lds
adc
out
or
mov
inc
into
cmpl
into
shrb
es
jmp
adc
nop
xlat
sub
jns
test
sub
cmp
xchg
into
xchg
mov
test
mov
loopne
xorb
push
mov
popf
scas
flds
bound
gs
cmp
and
aaa
xor
dec
sub
mov
sub
push
jns
jg
and
add
aad
xchg
popa
mov
sahf
pusha
push
imull
mov
stc
sub
in
dec
xor
and
push
js
inc
iret
mov
and
loop
jae
sbb
xor
out
push
loope
xorl
js
out
or
lods
repz
in
or
hlt
inc
cmp
flds
jp
fnstcw
add
std
push
jg
testl
cmp
xchg
out
or
cmpb
in
lods
pop
in
inc
mov
int3
sub
cwtl
ljmp
or
jae
loop
inc
pop
rclb
lods
mov
out
cltd
pushf
insl
mov
push
adc
xor
xchg
lahf
rorb
inc
mov
cmpsl
dec
mov
lahf
jg
xor
loop
mov
es
imul
jle
adc
ds
mov
cmp
shlb
dec
mov
scas
xor
add
mov
insl
adc
jg
jp
xchg
shll
and
fdivrp
test
xlat
push
mov
scas
mov
xor
cmp
es
ret
mov
div
add
mov
dec
scas
xchg
mov
sub
mov
sub
xchg
lods
and
and
fidivrl
xchg
jne
js
or
pop
add
insb
imul
xor
sti
rolb
ljmp
inc
sub
or
ficomps
and
mov
or
pusha
out
enter
icebp
mov
data16
push
inc
stc
ret
cmc
sub
add
add
and
jecxz
pusha
xchg
fisubrl
lcall
adc
xchg
fnstenv
pop
inc
xchg
xchg
mov
push
or
jecxz
cmp
jbe
pop
lods
and
icebp
mov
pop
inc
fisubl
xor
arpl
mov
lods
xor
sbb
cwtl
jne
pop
nop
push
push
mov
nop
inc
xor
sub
xchg
push
outsb
push
dec
sub
sub
mov
in
data16
cmpsb
or
xchg
sbb
cmp
mov
pop
fwait
addr16
push
rol
inc
and
fdivr
loop
xchg
scas
in
ljmp
dec
xchg
jle
out
cmc
shr
stos
das
je
faddl
fwait
sarl
xchg
cwtl
test
xor
rcrl
inc
adc
pop
add
out
pop
leave
mov
adc
mov
sub
mov
shrl
lods
aaa
jp
sbb
mov
repnz
mov
ja,pn
push
jae
rolb
jbe
mov
daa
push
jecxz
mov
inc
adc
scas
xchg
adc
mov
call
daa
push
adc
leave
adc
pop
adc
shr
lret
loop
mov
imul
xchg
push
out
or
imul
or
mov
andl
cmpsb
lds
push
add
jbe
sbb
int3
jo
pop
jo
aaa
sar
and
rorb
pop
mov
lods
fcoms
sahf
fmulp
push
in
dec
push
lret
push
test
mov
movsl
cmp
xorl
lret
sub
idivb
inc
dec
jl
shll
mov
inc
cmp
and
mov
mov
movsb
sub
jno
cmp
iret
out
lock
arpl
mov
inc
arpl
sbb
loop
stos
sub
mov
lock
jecxz
ds
aas
dec
inc
shlb
cmp
xchg
sub
mov
push
pushf
fnsave
verw
ljmp
int
aas
push
mov
add
jbe
popf
mov
mov
das
mov
jle
mov
es
pop
in
arpl
pop
adc
xor
pop
scas
fildl
test
push
int3
ja
cmpsb
bound
cmp
xchg
repz
call
out
xchg
cmp
notb
mov
jmp
das
xor
ds
test
inc
mov
bound
pop
stos
and
jl
subb
iret
dec
repz
aas
pmaddwd
push
iret
xor
mov
ds
dec
ljmp
ss
adc
mov
movsb
int
sbb
add
jns
cmp
add
push
push
dec
test
add
sbb
add
das
sahf
mov
dec
lea
jge
popa
lea
outsb
xor
adc
into
ret
and
std
aad
cmp
xor
movsl
stos
mov
cltd
stos
stos
sub
cmp
inc
iret
xor
mov
ja
icebp
or
sbb
test
and
mov
xchg
arpl
push
pop
xor
push
test
push
test
js
xchg
in
fsubrl
mov
jnp
es
xchg
mov
dec
jb
popa
sti
shrl
int3
pop
inc
and
std
adc
sti
ficompl
sbb
ljmp
cs
mov
jp
int3
mov
mov
xor
outsb
in
cltd
sbb
push
addr16
push
cltd
cmp
adc
lret
sub
lret
js
dec
stos
out
pusha
dec
cmp
adc
clc
push
roll
loop
test
and
inc
out
lahf
aaa
and
nop
or
fmuls
push
inc
cmp
nop
and
nop
sub
jge
sbb
jns
mov
sub
push
push
xlat
stos
sbb
fnstcw
mov
mov
inc
sbb
sub
or
stos
jmp
push
fimull
aam
mov
xchg
mov
add
nop
add
push
mov
in
stos
pusha
mov
mov
push
cwtl
mov
pop
sbb
mov
xchg
ljmp
out
cmp
and
out
push
test
xchg
testl
fsts
sub
xor
dec
lods
sahf
xchg
lods
jns
mov
gs
cltd
div
jp
iret
test
sub
imul
leave
test
into
js
test
cwtl
insb
lret
xor
loope
xchg
inc
mov
add
mov
rclb
sub
and
pop
and
bound
lcall
add
fs
inc
or
xchg
jbe
mov
mov
adc
ret
jns
sti
add
pop
sbb
inc
or
cmp
and
in
mov
dec
push
std
jmp
xorl
and
dec
leave
lea
ja
sbb
setbe
loop
mov
sbb
fdivrl
adc
outsl
or
or
pop
add
jnp
fstpl
cmp
imul
cmp
bound
fwait
push
gs
xchg
cli
ret
enter
into
mov
sbb
outsl
loopne
cmpsb
lahf
lret
xchg
ss
test
fstps
cmp
pop
or
mov
stos
xor
jnp
or
test
jnp
jbe
in
add
and
lods
rcr
das
or
adc
cmp
cmp
daa
mov
push
add
push
cmp
push
jne
test
cwtl
sub
popa
add
xchg
cmp
cmp
or
int3
in
insb
jp
inc
pop
ja
push
inc
pusha
loope
sbb
shlb
cld
std
cltd
or
inc
or
rol
pop
mov
loope
push
dec
adc
mov
push
outsb
push
dec
mov
xchg
arpl
and
movsl
sti
mulb
mov
xchg
in
imul
stos
repz
mov
sub
dec
daa
ljmp
fstl
xchg
jp
stos
lock
popf
adc
loopne
cli
lcall
pop
lcall
jle
inc
mov
push
das
pusha
cmpsl
jno
fs
loop
dec
orb
loop
inc
fnstsw
test
ret
mov
xorb
ret
sub
lds
das
and
mov
leave
cmpsb
int3
cmp
xor
hlt
into
jge
jno
int3
into
mov
cmp
dec
call
cmpps
aad
mov
loope
xchg
inc
je
dec
push
dec
pushf
jnp
xchg
notl
add
mov
sbb
mov
dec
in
daa
cmp
xchg
loope
inc
mov
sbbb
movsb
or
push
cwtl
adc
shl
mov
pop
into
and
sbb
repnz
iret
test
mov
mov
lahf
ljmp
or
js
pavgb
les
popf
cmovae
xor
adc
stos
leave
rcr
mov
sbb
mov
scas
lods
jbe
mov
faddl
daa
cmpsl
mov
mov
cmp
ja
js
xchg
pop
into
jae
sbbl
out
add
leave
stos
xor
jge
inc
mov
shrb
jmp
inc
mov
fsubrp
mov
push
mov
ret
sbb
shrl
in
fcoms
mov
pusha
xchg
outsb
jecxz
jge
aad
mov
mov
popa
mov
lea
mov
fildll
scas
add
and
mov
leave
xchg
aam
insl
ficomps
test
and
ja
cs
call
lret
clc
pop
cmp
int
and
mov
fxch
jae
hlt
outsb
je
push
xorl
adc
cmp
es
daa
shll
stos
adc
push
mov
clc
xchg
nop
cmpsb
sub
lock
xchg
sbb
adc
cmpsb
mov
and
dec
into
xchg
enter
repnz
lret
or
xchg
mov
xchg
jb
sub
mov
and
cmp
dec
inc
jecxz
lahf
mov
pop
in
std
lods
mov
inc
jb
add
aam
or
lods
sub
stos
stos
imul
push
push
repnz
inc
xchg
mov
cld
cltd
lcall
ljmp
push
add
mov
hlt
outsb
pop
and
cmp
arpl
outsl
inc
and
mov
add
sbb
mov
cmpsb
lahf
test
xchg
rolb
insl
xchg
repnz
int
aam
dec
jp
xorb
jb
into
pop
ret
hlt
in
and
mov
call
sbb
pop
and
push
pop
mov
cmp
mov
xor
mov
loope
movsb
mov
stos
jne
xor
repnz
mov
or
sub
xor
jg
pop
push
stos
dec
test
xor
jg
fcoml
out
jecxz
xor
ret
inc
sub
cli
mov
rol
xor
sub
mov
push
mov
ljmp
cltd
scas
mov
cmpsl
sub
fadds
es
out
mov
mov
fs
insb
lret
mov
rclb
mov
mov
dec
adc
loop
xor
sbb
push
or
and
jp
sub
fdivr
mov
and
xchg
jecxz
clc
stos
sub
pop
push
or
ret
mov
bound
adc
ret
and
pop
dec
fnstsw
ret
sahf
mov
es
imul
faddl
or
pusha
das
jg
or
push
or
ja
mov
cld
mov
mov
push
lock
jo
push
cmc
lock
loope
dec
imul
add
cmp
std
mov
mov
and
fmuls
xchg
clc
pop
call
mov
into
jo
cwtl
out
mov
ljmp
mov
mov
nop
dec
mov
sub
adc
cli
dec
stos
mov
mov
sub
add
lods
insl
mov
pop
push
pop
leave
and
cmp
or
int3
mov
aas
leave
andl
aaa
add
loopne
cmpsb
cmp
lods
jns
out
push
fnsave
test
lret
ds
outsl
icebp
ret
testb
jmp
lret
sbb
mov
popa
ds
arpl
inc
xorb
clc
inc
xor
mov
int
ror
mov
enter
ljmp
jae
mov
mov
pop
dec
loop
movsb
dec
imul
inc
pop
test
bswap
icebp
adc
inc
push
mov
push
inc
inc
mov
pusha
and
sub
xor
outsb
xchg
jmp
add
rcll
jp
fcompl
mov
and
inc
data16
daa
push
int
mov
push
mov
push
fs
ds
outsb
mov
mov
mov
loopne
jbe
loopne
mov
push
pop
jb
push
loopne
in
adc
jno
rcll
jns
jle
mov
add
neg
add
into
add
cmp
jo
mov
test
lds
dec
rclb
int3
jmp
jl
cmpsl
js
mov
push
push
jl
sti
xchg
ds
mov
in
repnz
xchg
rcrb
push
jl
cmp
mov
inc
push
jbe
subb
scas
mov
jl
nop
shl
dec
sub
adc
jae
sti
ljmp
lods
jge
shl
hlt
jmp
xchg
sbb
xchg
mov
lret
fldenv
cltd
scas
mov
movsl
lods
and
mov
lock
inc
or
arpl
xchg
outsl
jmp
xor
subl
stos
inc
sub
lcall
add
sub
xchg
fnstcw
push
add
push
cmc
jo
pop
out
ds
xchg
dec
hlt
aaa
sbb
fstpl
sbb
nop
lret
sub
aas
in
sbb
sbb
jge
jne
rcrl
movsb
scas
adc
mov
or
lds
lock
gs
js
mov
or
cmp
call
pop
mov
pop
and
sbbb
inc
fwait
jo
daa
pop
mov
rorb
inc
es
scas
jmp
pop
subb
shll
int
pop
js
loopne
arpl
add
xor
test
jns
or
cmp
test
repz
mov
and
inc
fs
inc
mov
lods
dec
xchg
adc
sbb
call
mov
daa
mov
xor
mulb
push
lock
jecxz
inc
pop
mov
outsb
push
in
inc
jecxz
mov
clc
lret
fcompl
add
mov
loope
ja
outsb
popf
rorl
pusha
scas
out
inc
pop
bound
mov
dec
stos
push
lods
cmp
mov
lret
negb
pop
pop
adc
xchg
push
inc
insb
sub
jecxz
inc
dec
movsb
and
ds
add
aaa
xchg
lods
mov
les
in
jl
xchg
rcll
cmp
jns
aam
jge
xor
or
iret
repnz
nop
mov
les
iret
test
mov
int3
push
ret
fdivl
dec
fsubrp
pop
and
out
add
adc
in
lea
xlat
inc
mov
in
test
movsl
les
sbb
loopne
outsl
push
shl
mov
stos
dec
dec
lcall
ror
cs
xchg
xorl
inc
imul
inc
data16
cmp
sub
or
jecxz
fldcw
outsb
xchg
je
in
sbb
dec
dec
mov
sar
mov
int
cmc
mov
aam
popa
faddl
stos
xor
sbb
push
push
std
lds
lret
pop
test
sub
inc
pushf
mul
mov
int
icebp
arpl
es
lods
in
jmp
js
call
mov
push
lock
dec
xchg
stos
pop
fadd
movsl
cli
rorl
xchg
popf
hlt
cs
hlt
pushf
lods
push
mov
stc
dec
add
int
sub
jb
jae
xchg
push
jp
pop
add
lds
cmp
jno
dec
jns
xchg
nop
clc
out
ja
inc
inc
sahf
xor
mov
test
push
mov
push
push
out
pop
sub
mov
cmp
into
xchg
jl
gs
xor
shll
inc
jge
xchg
rdtsc
scas
fcoms
inc
addr16
push
jnp
dec
cmp
xchg
push
sar
sbb
enter
mov
sbb
stc
out
repnz
and
push
scas
je
adc
cmc
xchg
sbb
int3
and
mov
cmp
sbb
std
repz
or
mov
pop
arpl
mov
mov
push
mov
xor
imul
pop
mov
mov
xchg
sub
fwait
lret
or
xchg
pushf
cmp
or
popa
mov
repnz
jae
je
adc
leave
pop
and
mov
jbe
les
repnz
jmp
lret
fcompl
movhps
push
xchg
pop
xchg
pushl
dec
pop
inc
scas
dec
sbb
addr16
std
mov
sbb
sahf
xchg
cltd
and
mov
frstor
stos
cmpsb
push
sub
bound
xchg
mov
fisttpl
add
data16
gs
xchg
popa
xor
jl
jb
data16
jb
call
adc
stos
xor
fidivs
or
adc
mov
xchg
and
mov
jnp
adc
inc
push
imul
and
jo
mov
jno
dec
mov
ltr
xorl
shrl
push
shl
lret
mov
fs
pop
jne
scas
cmp
lds
cmovge
movaps
push
mov
xchg
lcall
dec
jp
imull
adc
push
test
repz
stc
fiaddl
into
mov
aas
or
out
stc
cwtl
xchg
dec
mov
jl
aas
outsb
inc
insl
imul
add
sub
in
lahf
mov
ret
cmpl
pop
sub
popf
in
mov
mov
rcl
filds
and
mov
iret
pop
pop
aas
jmp
hlt
cmpsl
push
inc
cmp
mov
cmp
xchg
push
popa
int
or
lret
les
fisubl
ss
movsb
mov
lret
xchg
push
dec
or
iret
push
or
pop
and
push
push
cli
mov
subb
loopne
lods
jmp
mov
fisttpl
or
rcrb
sub
and
je
or
cltd
jnp
fdivrl
jae
pop
pop
add
pop
in
cltd
aaa
test
shll
insb
pop
and
jbe
adc
repz
mov
outsb
aaa
mov
imul
dec
push
insb
jg
out
add
add
cmp
pop
test
ljmp
mov
dec
sub
inc
xor
outsb
xchg
lahf
push
mov
mov
mov
sbb
outsl
and
fildll
jb
pop
out
lret
dec
cmpsl
pop
fucomp
jns
retw
xor
adc
call
jne
sbb
mov
les
repz
xor
rcrb
sub
test
jnp
out
mov
adc
mov
sbb
das
jbe
das
ja
sti
stos
jne
adc
iret
sbb
nop
inc
push
aas
mov
and
xchg
loopne
loopne
repnz
xchg
addr16
inc
dec
and
pop
xor
inc
rolb
pop
mull
xor
out
pushf
mov
and
dec
imul
int3
mov
pop
ffreep
sbb
arpl
sahf
call
cmpsl
mov
scas
cmp
jnp
pop
fcmove
sub
mov
popf
call
and
lock
mov
xorb
pushf
mov
mov
or
inc
pop
add
sbb
dec
in
sub
leave
mov
cmp
pop
mov
sub
pop
or
enter
sub
shr
mov
inc
insb
pop
int
pop
insb
sahf
or
inc
lea
js
jp
adc
or
ret
sub
gs
push
fidivs
scas
sbb
jp
lds
add
lea
stc
or
out
xchg
mov
pusha
and
fisubrl
fsubr
push
sti
xor
out
vandnps
pause
nop
adc
repz
loop
mov
jns
mov
adc
enter
pop
add
or
mov
dec
scas
pusha
cmp
mov
daa
gs
insl
push
add
stos
pop
sub
enter
xor
sbb
jg
js
mov
rolb
call
jbe
or
cmovae
dec
movsl
and
or
push
mov
mov
adc
aas
mov
lcall
cmp
jbe
dec
ds
iret
fsts
ss
mov
stos
das
jns
nop
shl
inc
sub
xor
stos
and
adc
push
aas
xor
push
pop
and
iret
jle
in
cld
shll
ja
into
xor
and
mov
adc
push
arpl
push
push
sub
push
adc
or
lcall
inc
push
dec
lea
data16
mov
lods
out
lds
shrb
mov
pop
rcll
sbb
inc
cmove
in
testb
xor
fidivs
jle
mov
dec
ljmp
das
dec
lahf
jne
mov
cmc
int3
jno
jb
pop
inc
add
xor
inc
xchg
mov
or
into
lret
inc
dec
std
cmp
test
mov
insl
sub
sbb
ds
aam
xchg
mov
dec
bound
cmp
test
pop
xchg
or
das
sub
cmc
ds
or
sbb
mov
fcompl
mov
pop
loop
xor
jmp
add
or
lahf
in
or
test
jmp
add
mov
jg
adc
les
aam
gs
cmp
out
cmp
outsl
sbb
iret
or
into
lods
fndisi(8087
int3
popf
js
sub
scas
push
pusha
xchg
dec
inc
adc
mov
sub
insl
sbb
xor
or
add
push
pop
jae
idivb
call
stos
inc
int
iret
aaa
xchg
iret
pop
push
push
dec
fistpl
ret
sbb
push
in
mov
dec
cmc
aas
stc
addl
xchg
dec
negb
das
mov
pop
xchg
cltd
dec
jl
sub
dec
xchg
cmp
fdivs
sahf
xchg
fwait
outsl
testl
cmp
fdiv
and
xor
nop
iret
cli
jno
fistps
mov
xlat
sbb
adc
jl
mov
cmp
mov
jg
push
jp
or
repz
xor
and
jmp
pop
push
fstl
stos
aaa
jge
orl
jns
sub
stos
mov
mov
adc
int3
es
jne
out
xchg
xor
xchg
push
pop
test
lcall
dec
mov
adc
outsb
mov
mov
dec
xor
push
shrb
pop
adc
sub
mov
push
lods
lcall
dec
or
repz
in
testl
mov
enter
jbe
scas
push
cmp
stos
pop
mov
dec
rolb
pop
push
test
fwait
sub
cmpl
xor
mov
dec
rol
xor
add
js
outsb
inc
xor
or
lcall
hlt
adc
cmp
dec
mov
loopne
sti
cmc
mov
push
mov
les
sbb
push
adc
outsb
test
or
int3
les
in
pop
xchg
fbld
mov
cmpsl
mov
loopne
sbb
outsb
mov
xlat
rcrb
lahf
or
mov
pop
and
lods
sbb
inc
call
mov
mov
or
out
in
scas
aad
cmpsb
dec
mov
dec
jge
mov
sahf
fcomp
push
and
cltd
loop
jecxz
jne
in
sbb
insb
xor
add
add
out
xchg
mov
mov
cmp
loope
push
push
sub
add
rolb
in
cmp
xchg
xor
enter
pop
adc
adc
mov
mov
cwtl
leave
scas
loop
hlt
pop
ljmp
push
pop
xchg
xchg
stos
inc
jae
cmp
push
mov
and
mov
icebp
cmp
lods
push
jmp
aaa
lods
fwait
mov
push
stc
lock
aad
xchg
into
lock
cmp
cmpsl
jg
loope
sub
loope
jl
mov
andl
loop
lret
mov
jmp
bound
je
rcll
pop
add
sahf
adc
add
xchg
add
mov
das
lahf
call
mov
mov
mov
es
std
sbb
pop
cmp
icebp
imull
cwtl
out
cmpsl
add
rorl
inc
pop
add
xchg
cmp
push
rcrb
mov
mov
mov
stos
push
add
das
sti
sbb
adc
lods
mov
add
mov
xchg
xor
add
jnp
pop
dec
jb
or
movsl
sbb
scas
or
cmpsl
dec
in
or
into
fsts
rcrb
sub
popf
mov
and
int3
jno
mov
mov
jno
scas
xor
shlb
out
xor
in
repnz
lea
shlb
push
inc
jge
scas
sub
jb
or
test
push
mov
mov
cltd
out
enter
xchg
aas
call
push
inc
insl
push
out
not
adc
inc
or
jge
stc
scas
inc
xchg
lcallw
aas
adc
aad
enter
jo
rol
mull
out
mov
push
push
dec
loopne
out
bswap
mov
mov
xor
sarl
sbb
out
rorl
repnz
sarl
in
inc
xchg
xor
or
sub
jg
fbstp
jecxz,pt
jmp
mov
adc
inc
jecxz
out
and
inc
mov
sub
sbb
mov
jle
ss
mov
push
mov
inc
test
pop
jmp
lock
mov
xlat
lods
sub
mov
dec
cli
shlb
jmp
cmpsb
jg
in
xchg
movsl
into
xchg
leave
cmp
stos
push
pop
mov
gs
insb
js
push
cmp
loope
fistps
push
or
push
subl
out
in
ja
flds
mov
rolb
xchg
inc
js
imul
mov
movsl
bound
pop
xchg
cwtl
sbb
adc
jnp
jmp
and
lret
push
mov
sub
xchg
xchg
loope
pop
xchg
aaa
mov
mov
ss
lahf
out
push
enter
add
shr
add
aad
cld
mov
push
testl
mov
es
push
stos
fdivrl
lahf
dec
sub
insl
into
mov
pop
adc
out
push
imul
popf
add
pusha
test
or
sti
mov
adc
dec
mov
dec
pop
pop
push
shll
pop
ffreep
push
sbb
mov
or
xchg
adc
pusha
ds
jmp
ficoms
mov
mov
inc
fstl
lods
adc
dec
mov
mull
sub
xor
xchg
sbb
stos
add
insb
push
xchg
cmpsl
data16
popl
sub
adc
js
stos
mov
leave
scas
idivb
jg
mov
or
popf
ja
xor
lock
shll
popa
aas
cmp
rorb
push
in
or
out
mov
je
fsubl
push
test
pushf
mov
xchg
leave
fstp
add
lret
or
sub
mov
xor
mov
loop
mov
xchg
fs
aas
call
out
mov
or
xor
lea
jnp
in
jg
in
fs
incl
dec
ja
loop
adc
jecxz
xchg
push
dec
adc
test
and
dec
sbb
inc
sub
cmpsl
add
orl
xor
mov
sbb
sbb
xchg
lret
xchg
mov
ret
pusha
clc
int
movsb
lds
xor
imul
cmp
add
inc
icebp
sub
not
ror
inc
int
inc
js
sti
pop
ja
iret
insl
jno
lcall
cmp
pop
aad
inc
test
xor
arpl
repz
pop
jo
aam
or
sti
cmp
arpl
add
es
push
sub
or
pop
pushf
sub
movsb
mov
into
push
in
inc
xor
mov
into
mov
out
mov
test
xchg
mov
add
in
leave
inc
inc
push
mov
leave
sub
xchg
ret
inc
fs
scas
push
mov
or
xor
xor
cwtl
std
aam
cmp
jl
ljmp
sub
push
sahf
cld
xchg
sbb
rolb
sub
inc
cwtl
dec
mov
mov
xchg
adc
gs
jmp
ds
pop
out
out
test
adc
jecxz
and
aam
sarb
aaa
lods
mov
or
mov
add
lds
adc
or
mov
mov
loopne
xchg
call
jg
insl
popa
out
jo
es
inc
test
enter
mov
dec
mov
shll
push
repnz
mov
xchg
cs
xchg
in
fsubrl
ja
sbbl
in
inc
pop
push
ss
ljmp
sbb
cmpsl
jp
inc
pop
cwtl
cs
add
jge
sub
addl
cmpsb
sbb
scas
cs
xchg
lcall
mov
out
sbb
add
jo
pop
push
mov
push
inc
sub
dec
jno
mov
scas
xchg
inc
stos
andb
fcoms
mov
popf
add
int3
mov
add
arpl
jo
clc
push
jl
sub
pop
fistl
mov
rep
cltd
xchg
mov
stos
lcall
xor
sub
stc
test
into
lcall
std
dec
jae
or
jb
out
dec
fadd
dec
insb
push
dec
xchg
stc
js
cmp
pop
lahf
in
fnstenv
lea
xor
lahf
lods
mov
push
mov
dec
xor
sahf
push
pop
testl
mov
or
loope
add
add
hlt
aad
scas
mov
xchg
in
jmp
sbb
inc
sub
pop
adc
fs
roll
cmp
fwait
dec
inc
movsb
in
adc
cmp
and
push
in
add
xchg
xchg
xchg
jo
pop
cmp
push
jno
inc
pop
in
jo
jg
and
pop
nop
sub
ss
cmc
dec
sub
xchg
dec
jmp
cmp
inc
sub
loopne
sbbl
fisubs
xor
mov
add
cld
pusha
jbe
sete
mov
inc
std
inc
add
clc
push
ret
movsb
dec
jg
dec
mov
push
lcall
dec
and
sbb
cmpsl
push
lret
ja
insb
out
mov
mov
call
push
ja
jle
sub
cli
push
dec
insl
inc
mov
mov
xor
inc
inc
das
pop
rclb
add
xor
pop
cmp
jo
clc
xchg
jle
pop
sub
mov
stos
test
mov
movsl
andb
hlt
sar
shrb
mov
loop
add
add
push
fwait
or
cs
ss
test
mov
dec
pop
pop
es
pop
add
mov
fsubl
imul
add
jne
fnsave
cmpsl
sahf
cmp
push
pop
std
sbb
mov
pop
jnp
lret
xchg
and
jp
jnp
fsubs
jo
pop
loop,pt
push
inc
xorl
push
adc
push
adc
out
popa
xchg
daa
out
add
mov
imul
jl
icebp
push
loop
fisubrs
cli
adc
imul
xor
add
sub
push
aam
push
push
or
mov
mov
xor
sub
mov
test
insb
jmp
and
ljmp
repnz
sbb
mov
jo
push
xor
ret
test
rcrl
jle
jecxz
lret
aam
jb
dec
lds
mov
lock
fsubr
je
cmp
addr16
loope
add
adc
cmpsb
add
mov
xchg
xor
aam
popa
inc
imul
out
stos
sti
dec
out
fistpl
lods
jb
cmpl
outsb
mov
movsb
jecxz
jl
incl
sbb
sbb
pushl
pusha
and
adc
outsl
adc
popa
decl
dec
add
xor
outsb
orl
loope
hlt
lods
les
dec
sbb
sub
push
dec
jbe
mov
pop
outsl
cltd
pop
inc
mov
psllw
mov
js
shlb
out
sub
push
sbb
pop
ja
jl
out
add
and
pop
push
or
inc
xor
incb
daa
mov
sbb
mov
push
cmp
lret
mov
sub
xchg
cld
mov
es
mov
enter
add
push
or
push
hlt
push
mov
cmp
rolb
sbbl
lods
outsl
cli
jnp
fmuls
dec
inc
mov
mov
or
mov
adcb
cmp
or
xor
rorb
and
mov
lret
inc
sbb
lock
mov
sub
dec
mov
fistpl
popa
in
xchg
jbe
dec
or
mov
mov
hlt
in
pop
outsl
in
das
stc
pop
mov
xchg
push
movsl
jecxz
add
inc
jnp
mov
loopne
dec
cltd
outsl
rcll
ss
repz
pop
push
pop
add
jae
cmp
in
repz
cld
mov
or
and
and
lods
dec
rorl
aaa
push
mov
jo
jg
shrl
fst
or
cli
scas
insb
pop
scas
pop
fists
fnsave
daa
outsl
sbb
sbb
andb
cld
stos
push
sub
inc
sbb
mov
es
sub
fnstsw
cwtl
je
icebp
pop
lahf
popf
popl
mov
mov
out
mov
cmp
mov
jbe
aad
jle,pt
out
cmp
andl
jns
sub
sub
addr16
adc
idiv
cmpsb
xor
aam
sti
push
dec
adc
mov
addl
das
cmpb
ret
sahf
ja
lds
imul
daa
mov
subl
cmp
inc
or
pop
hlt
sbb
adc
aad
daa
pushf
xchg
sub
and
jns
ficoml
aam
jnp
mov
jne
xor
push
mov
sbb
sahf
sbb
cmp
add
cli
sbb
adc
push
inc
lods
xor
add
aaa
jp
dec
les
xor
sbbl
test
dec
jle
or
test
jbe
lahf
cld
imul
sub
cmp
push
push
jle
fsubrl
jno
mov
mov
dec
xchg
sub
adc
inc
cltd
in
push
mov
jb
add
fcoms
sti
repz
cmp
add
jmp
jno
or
leave
mov
xlat
pop
push
push
and
adc
jno
es
mov
mov
sbb
das
inc
call
lea
lahf
xorl
loope
stos
pop
cmpsl
mov
outsb
pop
or
movsl
sub
aas
outsl
std
jg
push
cs
ficoms
rcrb
subl
mov
cmp
xor
lds
mov
stos
push
or
insl
mov
aaa
pop
lcall
pop
jno
sbb
stc
pushf
aam
insb
sub
sbb
je
das
lods
pop
jp
aad
movd
lea
or
push
jnp
jmp
into
mov
inc
mov
sbbb
and
loop
js
jecxz
lods
sbb
xchg
sbb
inc
mov
lcall
push
shll
sbb
fucomip
sbb
pop
cltd
adc
cli
adc
js
iret
xor
les
inc
icebp
adc
sarl
push
add
and
pop
loop
popf
jp
je
fistpll
or
mov
fs
sub
std
fcoml
sub
sbb
cmp
jge
add
fs
test
js
ss
sub
xchg
sbb
pop
scas
push
sarb
outsb
dec
std
inc
popa
mov
push
sbb
daa
jbe
adc
lret
stos
inc
sbb
sub
jb
pop
or
adc
lret
dec
lret
dec
dec
cs
sub
xchg
add
ss
fisubl
setle
sbb
mov
pop
adc
out
idivl
dec
or
jb
push
xchg
or
mov
and
dec
mov
clc
cmp
scas
aaa
in
cmc
out
scas
xor
fdivr
add
xchg
add
push
dec
sub
jb
jmp
cmp
std
xor
dec
pop
xchg
inc
cs
and
xchg
jge
xchg
insl
cmpb
loope
push
jle
es
push
xchg
ljmp
dec
loope
push
sbb
push
cmc
pop
cwtl
xor
xchg
xor
test
int3
and
insl
mov
cltd
cmpsl
pop
int
mov
in
lahf
fsubl
inc
ret
xor
out
shrl
jns
bound
inc
cwtl
mov
lock
aas
outsl
adc
mov
test
out
adc
daa
cld
mov
or
cmp
add
and
ror
ds
xchg
push
shlb
lret
mov
or
lds
lret
leave
das
mov
in
mov
and
push
jg
push
cmpsl
push
dec
adcl
rolb
pop
inc
mov
lods
dec
js
jo
fildl
pushf
inc
xor
sbb
fiaddl
jo
jnp
pop
inc
dec
loop
fwait
mov
and
ja
or
xchg
add
iret
aad
lret
sub
subl
jle
push
xor
cwtl
and
lods
cwtl
inc
movsb
push
cmp
shlb
or
push
xor
xor
cmp
mov
pop
add
and
out
mov
mov
jnp,pt
mov
sahf
xor
xor
mov
and
sbb
xchg
dec
or
movsb
loop
outsb
sbb
call
jl
add
push
push
inc
adc
gs
jge
popa
mov
xchg
das
sbb
xchg
or
sub
cli
test
outsb
push
repz
pop
inc
jmp
stos
aam
or
imul
enter
ret
xchg
ret
mov
xor
jo
push
nop
sub
push
stos
dec
add
add
sub
jne
cmc
cltd
fdivr
xor
pop
test
cmc
int
or
and
es
sbb
in
ret
movsl
dec
jbe
xor
outsl
mov
mov
daa
lret
add
sub
adc
and
cmp
gs
mov
pop
js
mov
jnp
cmc
daa
cwtl
lea
sbb
lods
pop
push
jmp
pop
and
outsl
adc
pusha
mov
push
popf
shrb
sahf
push
pop
scas
sub
movsl
pop
mull
int3
clc
cmp
or
jmp
mov
sub
outsl
dec
icebp
aaa
xor
sbb
mov
into
and
outsb
adc
push
or
out
jne
sbb
bound
inc
push
insb
adc
jne
int3
sbb
jo
mov
int
push
mov
fisttpll
fs
mov
mov
insl
mov
loope
insb
xchg
push
xchg
scas
jbe
dec
adc
lods
call
adc
or
cmp
cmp
lahf
aaa
shlb
in
sbb
sahf
fadd
test
adc
adc
dec
loopne
pop
sub
popa
cwtl
inc
mov
test
or
popf
nop
inc
mov
xor
movsl
inc
fmull
lea
dec
push
or
mov
mov
mov
ss
xor
imul
int3
hlt
sbb
popf
jp
in
xchg
das
popa
movsl
adc
repnz
iret
pop
lahf
lcall
sub
ljmpw
or
rcrl
cmp
jl
repz
mov
lcall
enter
jae
lods
iret
inc
xchg
sub
dec
add
jle
xor
pop
xchg
cmp
push
notb
iret
xor
lcall
fucomi
shll
popf
xlat
inc
in
iret
mov
test
ret
cwtl
lods
jmp
push
mov
jmp
sbb
add
lea
int
xor
mov
pop
pop
mov
loope
sub
repz
int
insl
sbb
pop
fidivrl
loop
push
sub
popf
pop
cwtl
andl
clc
lods
and
lret
arpl
shlb
adc
push
dec
adc
dec
mov
cmp
fcmovne
and
lahf
inc
dec
pop
rcl
lea
mov
xchg
jae
push
enter
or
pop
iret
movsl
and
xor
or
push
fdiv
pusha
jns
mov
iret
jnp
insb
mov
aad
jg
mov
das
jnp
scas
adc
mov
jp
add
inc
shll
fmuls
and
inc
repnz
jle
divl
inc
ret
sub
popf
adc
outsl
xchg
addl
call
or
pop
movsl
cltd
add
mov
stos
insl
xchg
stos
push
mov
fidivrl
arpl
pop
jae
subl
mov
imul
mov
mov
imul
push
mov
stos
movsb
mov
push
inc
push
repnz
dec
pop
push
stc
and
adc
push
leave
aam
jle
cmp
mov
ss
and
dec
push
out
fsts
dec
clc
rcll
repz
sbb
loopne
std
out
cmpsl
mov
ror
rorb
cmpsb
lret
jns
lahf
popf
cwtl
or
test
fistps
js
lret
arpl
xchg
sub
gs
cmp
fwait
and
fstpt
repnz
out
int
cmpsb
xchg
das
cwtl
ret
sub
adc
out
ficoms
push
sub
out
jle
mov
add
or
add
ret
scas
xchg
xchg
insb
pushf
test
sub
out
pop
ss
lods
mov
inc
mov
pop
push
add
std
sbb
mov
leave
nop
leave
and
inc
mov
gs
sbb
and
mov
xchg
aaa
mov
push
mov
ret
push
into
cmp
inc
clc
push
in
inc
incl
in
lret
dec
je
stos
and
movsb
adc
mov
ficoms
adc
xorl
mulb
xor
mov
xor
cwtl
es
mov
movsl
ja
fninit
sub
pop
inc
fsubrl
repz
sub
es
pusha
xchg
xchg
mov
enter
mov
cmp
dec
mov
cmpsb
mov
push
hlt
jne
popa
fnstsw
std
mov
dec
lret
dec
stos
loope
cmp
stos
roll
cmpsb
outsb
imul
jp
fcom
loopne,pt
test
dec
in
adc
xchg
out
sbb
test
add
mov
scas
outsb
inc
imul
pop
sbb
or
inc
pusha
sub
je
or
inc
out
call
and
inc
in
test
adc
ret
cmp
fistps
mov
pop
inc
cltd
sbb
push
mov
bound
sahf
in
push
jmp
dec
add
mov
and
fldl2e
mov
aam
mov
mov
xlat
aas
hlt
fsts
xchg
jmp
and
fwait
xorb
rol
jp
mov
adc
xor
test
mov
lods
or
fisubrl
mov
cmp
mov
push
cmpl
sbb
sub
in
rorb
stos
pop
cltd
pop
add
aam
add
xchg
int
dec
pusha
sarl
int3
add
push
ret
cmovge
xor
dec
xor
loope
cmpsl
pop
dec
cltd
pop
stc
ret
xchg
sbb
lcall
sbb
xor
pop
xor
data16
inc
cmp
test
xor
sar
mov
repz
lods
sahf
in
jge
loop
icebp
push
stc
mov
mov
into
sbb
pop
sti
cmp
stos
push
pop
push
push
mov
ja
das
xchg
pop
inc
push
mov
test
pushw
xor
sbb
fimuls
fs
mov
and
outsl
and
pushf
ljmp
pop
cs
sbb
ficoms
pop
popf
inc
into
cmpsb
dec
pop
add
or
dec
sbb
movsl
jb
mov
mov
sub
cld
sbb
sbbb
test
lret
jecxz
push
add
lods
or
mov
or
cltd
sub
hlt
mov
das
jmp
mov
fistpl
scas
push
or
push
dec
mov
add
int
add
hlt
nop
cs
repz
inc
movl
inc
pop
fimull
xchg
mov
xchg
out
movsl
ret
stos
adc
lds
cmp
das
dec
jns
sahf
push
les
mov
loopne
jl
mov
sub
fnstsw
jecxz
adc
push
and
push
jmp
jge
outsb
mov
pop
call
pop
jmp
jle
xchg
and
mov
lods
cmp
mov
dec
roll
test
add
int
mov
outsb
iret
mov
dec
xor
cwtl
push
jle
fcompl
stos
mov
fbstp
pop
scas
mov
push
shll
adc
push
leave
push
repz
lock
jmp
mov
xchg
xor
std
shll
xor
xor
mov
adc
mov
icebp
xchg
int
sbb
test
repz
sub
fdivs
in
inc
jbe
shl
shll
mov
cmp
xchg
mov
jmp
out
mov
jb
popa
icebp
lock
fwait
jae
orl
push
adc
xchg
mov
sbb
add
or
xor
jns
lds
mov
add
add
dec
jno
insb
jo
dec
movsl
mov
pop
sti
and
mov
cwtl
fs
or
out
pushf
mov
shrl
je
sub
ss
shll
nop
inc
in
add
ja
mov
daa
stos
sub
add
jns
mov
pop
inc
push
pop
hlt
cmp
push
movl
dec
ficoml
lds
or
daa
loop
mov
test
fmuls
outsb
std
inc
and
lcall
mov
inc
test
je
rcl
cmp
inc
int
xchg
and
xor
push
fdivrs
inc
faddl
add
je
pop
daa
es
call
mov
or
push
push
ror
test
sbb
cs
inc
daa
push
xlat
sub
mov
xor
cltd
daa
push
mov
aas
daa
and
or
or
cld
ficompl
pop
push
outsl
mov
mov
jg
jo
add
xor
dec
push
sbb
out
lods
loop
xor
jecxz
inc
out
test
jmp
mov
pushf
call
call
push
test
jo
xchg
sbb
jno
mov
ds
dec
sub
inc
cli
mov
push
out
insb
into
pop
movsl
stc
push
aad
push
cmpsb
xor
add
or
add
xchg
scas
movsb
inc
aaa
and
jno
std
int
push
lret
add
addb
mov
mov
fdivrs
imul
cmpb
mov
inc
cmpsb
mov
and
rdpmc
mov
sbb
mov
xor
mov
popl
jo
imul
fnstcw
or
xchg
or
aaa
pop
cmp
test
add
cli
fdivl
fldt
and
imul
fdivrp
pusha
pop
add
cmpsl
ljmp
mov
fsubr
pop
int3
push
lret
aam
sarb
stc
xor
xchg
xor
push
cmpsb
or
aam
push
pop
xor
cmp
mov
xchg
outsb
dec
bound
xchg
jl
outsb
jge
mov
mov
pop
xor
scas
sbb
in
inc
popa
lcall
xchg
or
ret
push
push
ret
xor
mov
add
cld
test
lds
cmp
jo
jae
mov
movsb
mov
lods
jge
xchg
xor
repz
inc
popa
faddl
pusha
cmp
inc
xchg
lcall
jae
gs
sbb
lea
or
lret
shrb
inc
sti
adc
dec
ljmp
sbb
xlat
pushf
xchg
inc
add
or
push
sbb
adc
idiv
ds
xor
repz
lret
rclb
aam
mov
gs
mov
push
jae
push
aaa
mov
hlt
iret
loop
in
push
flds
sub
out
loop
sub
dec
ds
xor
dec
lock
lret
mov
orb
packsswb
mov
lret
mov
mov
call
popa
xor
jecxz
rcrb
jnp
and
fwait
scas
out
mov
push
cmpsb
dec
sti
pop
mov
and
xchg
stos
test
ljmp
mov
adc
cmp
repnz
adc
jne
andl
dec
add
je
lds
inc
jno
addr16
pushf
jo
cli
insl
mov
mov
dec
shl
pop
pop
xchg
jne
cli
out
cmpsl
add
stos
inc
sub
lds
or
add
push
pop
xchg
xchg
shlb
xor
mov
mov
popf
pop
adc
inc
rclb
cmc
mov
dec
xchg
movsl
inc
push
sub
ret
and
fldt
outsb
iret
jns
xor
xor
movsl
in
jmp
ljmp
jbe
stc
jl
or
arpl
and
lds
pop
dec
sarb
mov
xchg
mov
bound
and
inc
xor
sahf
and
out
push
jecxz
popa
mov
fisubl
shrl
mov
lret
xchg
adc
add
lret
cli
sub
mov
push
xor
fwait
jp
push
lea
push
stos
push
das
mov
sub
jl
test
or
das
dec
or
lahf
lock
pushf
out
iret
sub
mov
add
ret
mov
in
lcall
push
cs
jns
push
adc
pusha
popf
ljmp
adc
ljmp
mov
sub
mov
loopne
jno
aas
sbb
ss
les
pop
mov
imul
adc
movl
and
sahf
push
pop
or
outsl
pop
cltd
loope
addl
and
or
jp
nop
jp
pop
stos
subl
adc
cli
xchg
rorb
xchg
pushf
sbb
dec
add
stos
ret
jno
loop
and
lahf
add
aam
stos
insl
pop
insl
xchg
test
adc
dec
cmp
aad
fwait
data16
pop
mov
andl
mov
and
out
mov
lret
stos
or
fildl
ret
pop
sbb
or
or
push
mov
pushf
xor
mov
mov
jns
cld
pop
cmp
rcrb
das
outsb
cmp
adc
dec
test
jp
push
sbb
inc
lahf
lock
dec
lds
aaa
lret
ficomps
movsb
push
arpl
test
xchg
inc
add
std
pop
jno
sub
jle
or
lret
inc
int3
testb
pop
mov
dec
push
test
fimull
cltd
inc
jge
push
test
std
and
mov
add
xchg
adc
sbb
or
cli
test
adc
xchg
pop
xchg
stos
sbb
rcll
mov
adc
push
dec
xchg
mov
lods
adc
test
cltd
pop
xor
repnz
xchg
aad
mov
scas
mov
ret
push
add
fmul
je
sub
and
insl
inc
mov
jge
mov
scas
add
enter
icebp
lret
and
sti
orl
js
mov
rorl
pop
mov
inc
add
pop
movsb
repnz
adc
dec
sarb
dec
dec
js
inc
cwtl
loopne
pop
inc
adc
movsb
mov
fidivl
out
jno
into
test
pusha
fsts
xor
xor
in
mov
lcall
push
shrb
loopne
xor
testl
xorb
xchg
adc
mov
rcrl
repnz
push
insb
xchg
stc
push
xchg
xor
mov
aad
mov
and
sub
sbb
cmp
addr16
into
mov
repnz
sahf
xor
notb
fisttpll
add
xor
push
cmp
inc
pop
jne
punpcklbw
popf
mov
mov
ljmp
mov
push
les
push
xchg
adc
inc
lahf
ret
push
cmpsb
mov
pop
pop
push
xchg
test
rclb
sbb
hlt
cmc
dec
imul
int
push
cmp
mov
cli
test
imul
fwait
test
adc
jge
jae
sub
xchg
int3
inc
xor
data16
jns
out
mov
clc
fisubrs
pop
stc
cmp
cwtl
and
enter
xor
iret
negl
test
imul
push
daa
adc
lds
mov
add
imul
nop
sahf
xchg
cld
sub
pop
cs
int3
sub
adc
lcall
cwtl
ss
ss
fcoms
and
fdivs
scas
mov
pop
aam
jb
or
stc
in
roll
mov
nop
mov
xor
jmp
cltd
stos
cmp
aaa
idivb
inc
sti
andb
sub
call
mov
fisttpl
call
test
mov
test
pop
push
pop
ja
xchg
in
lods
add
imul
psrad
sbb
aas
nop
rcrb
sub
rorb
insb
jne
adc
fwait
mov
mov
mov
cmp
testb
dec
jo
push
sub
adc
fdiv
jg
mov
insl
lds
movsl
inc
cltd
in
fdiv
std
inc
lods
lret
cs
js
mov
xchg
mov
testb
xchg
scas
repz
fsts
push
mov
pop
aam
stc
xchg
sub
loope
inc
pop
loope
or
cmpsb
xor
jecxz
das
jnp
lods
lock
fcmovnb
out
push
clc
mov
imul
cmp
sbb
xor
pop
repnz
scas
imul
and
sub
fidivrs
lods
bound
repnz
int
pop
sti
push
xchg
shr
stc
cmp
adc
rcr
js
adc
sub
and
sub
bound
sbb
out
push
ss
movsb
cmp
addr16
fstpt
loop
pop
pusha
cmc
dec
mov
in
xor
add
bnd
outsb
out
std
push
push
pop
ja
mov
cltd
sub
push
xor
test
aam
cs
xor
cli
pop
sub
lret
aad
xchg
std
mov
pop
insl
jno
sub
pushf
aas
pop
xchg
dec
sub
cwtl
jb
and
enter
or
in
xor
push
sub
jmp
aas
mov
sbb
inc
mov
push
mov
push
shll
sahf
pop
pusha
lcall
cld
icebp
aas
cli
out
mov
mov
jge
add
jge
enter
adc
xor
inc
dec
push
jne
sub
lock
jnp
mov
dec
shrb
lret
mov
nop
aaa
push
outsb
mov
adc
jg
jecxz
addl
into
cltd
iret
dec
hlt
das
lods
and
imulb
adc
iret
aaa
inc
data16
inc
pop
flds
xchg
insb
ret
mov
push
cmovp
hlt
xchg
push
add
std
int
insb
repz
cmp
out
push
cmc
imul
fsubrs
jecxz
cwtl
fs
xchg
mov
in
shlb
mov
pop
mov
aad
mov
or
das
in
add
shrb
js
jb
cli
pop
daa
imul
xchg
mov
mov
imul
pop
dec
xchg
in
lahf
push
and
jbe
lods
dec
pop
mov
hlt
jne
jnp
daa
xor
out
or
cmc
aaa
xchg
push
test
xchg
and
das
cltd
cmpsl
add
inc
stc
arpl
aaa
loope
fwait
negl
iret
test
jmp
sti
roll
les
xchg
pop
outsl
outsl
dec
rol
loopne
push
adc
clc
movsb
xor
imul
xor
call
repz
ds
imul
jl
out
insb
cmpsl
mov
xchg
jmp
cmp
mov
scas
rcr
push
dec
shld
add
mov
fcoml
mov
lods
jle
jns
xor
and
int
push
jnp
int3
movsl
pusha
or
lcall
and
xor
stos
cld
sti
mov
ss
ficoml
bound
pop
adc
fwait
fs
loopne
sub
leave
popf
pop
les
imul
or
cmpb
into
or
or
dec
fdivl
outsl
mov
sti
sub
sarb
sbb
mov
js
rclb
lret
jne
inc
cltd
sub
je
aas
push
ljmp
popf
out
clc
mov
in
std
cmp
jnp
cmp
jo
flds
sub
es
push
mov
pop
xchg
shrl
cmpsl
and
push
xor
or
or
inc
push
or
iret
jge
scas
lahf
sbb
push
stc
and
pop
xor
xor
in
or
jl
mov
shr
xlat
sbb
std
lods
lods
lods
cli
cmp
dec
iret
sbb
adc
ds
pop
and
shlb
je
push
xor
push
dec
in
jne
test
pop
sbb
mov
testb
fsts
sbb
cli
lret
in
xchg
cmp
inc
out
mov
adc
sbb
call
gs
addr16
fimuls
mov
mov
lea
repnz
sub
xor
xor
cwtl
jge
jno
ret
sub
adc
jl
js
xchg
lahf
dec
dec
mov
pop
imul
push
loopne
add
xchg
and
mov
das
mov
and
in
subl
cltd
dec
aam
fdiv
stos
and
xchg
mov
xchg
mov
lea
pop
stc
imul
iret
testb
movsb
lods
push
jnp,pn
mulb
cli
lret
scas
pop
lods
fisubrl
jmp
outsb
repnz
mov
dec
outsb
xlat
jge
cmp
lods
xchg
pop
dec
add
dec
push
outsb
ss
pop
or
adc
aaa
ror
hlt
pop
movsb
xchg
insb
sub
pop
fisubrl
loop
push
dec
popf
cld
push
inc
aad
and
pop
aad
cmpsb
jnp
or
jle
into
ljmp
lret
xchg
pop
in
pmaddwd
adc
out
movl
jle
repnz
enter
loopne
xchg
in
xchg
mov
cmpsl
push
mov
add
xor
mov
test
cs
mov
mov
sbb
cmp
and
mov
inc
into
gs
sub
dec
push
sbb
faddp
std
movsb
aaa
ret
dec
pushf
cmpsl
mov
mov
scas
in
dec
in
or
jg
lret
fcomi
in
lock
pop
fmuls
push
dec
push
ss
cli
or
sbb
enter
sahf
mov
push
out
pop
jo
sub
sbb
out
and
insb
dec
pop
lcall
nop
lret
daa
stos
dec
adc
ret
mov
cmp
xor
xchg
sub
rep
sbb
test
add
outsb
shr
inc
xor
add
push
stc
std
inc
mov
cli
xchg
adc
dec
xor
das
insl
mov
xchg
cld
lds
mov
pop
sub
dec
dec
pop
sbb
jbe
ja
jg
adc
cmp
sbb
sbb
jb
dec
divb
xchg
adc
pop
dec
and
or
sub
push
lret
enter
enter
fmull
mov
pop
xchg
xor
mov
stc
sub
jo
mov
sub
push
adc
sbb
out
xchg
cmp
or
and
loopne
pop
xchg
shll
push
cmc
insb
pop
jecxz
adc
mov
push
and
xor
cmp
xchg
arpl
push
ja
fisubl
push
mov
imul
mov
cmp
mov
dec
mov
scas
push
fistps
xchg
push
sbb
dec
or
out
popf
mov
mov
dec
test
add
shl
ds
add
mov
scas
leave
rorb
sti
aas
xor
test
cmp
stos
sbb
in
dec
sub
arpl
in
add
faddl
mov
fidivrl
push
inc
cmovge
inc
cltd
add
mov
and
or
testb
mov
int
test
jmp
xchg
push
push
ja
dec
inc
mov
loopne
aam
fcomps
pop
sahf
push
in
xchg
and
clc
mov
xlat
adc
sub
cld
lahf
mov
test
sbb
push
ret
rolb
iret
xchg
test
fs
or
xlat
gs
sbb
adc
pop
aas
std
fnstenv
shrl
jnp
xor
adc
push
aaa
insl
insb
jecxz
or
xor
cmpb
outsb
xor
test
lahf
shrb
lahf
sub
pushf
lods
cwtl
lock
mov
xchg
mov
mov
sbb
stos
fcomps
data16
cwtl
xchg
mov
into
cmp
popf
fcomip
in
inc
cmp
movsb
xor
mov
inc
pop
push
dec
jo
sub
mov
out
cs
lcall
mov
ss
sbb
sahf
cmp
pop
mov
imul
lds
adc
mov
lret
fbstp
movsb
cld
fisubrl
shrb
jecxz
inc
dec
ljmp
in
jge
cmpsb
lods
imul
or
mov
push
mov
in
mov
cwtl
popa
leave
ror
dec
bound
aad
add
xorl
xorl
das
dec
pop
push
sbb
dec
xchg
addl
sub
jecxz
ret
js
int
data16
dec
jecxz
arpl
mov
mov
and
jmp
and
mov
xchg
movl
arpl
mov
cmp
es
sti
bound
mov
xor
fst
js
inc
mov
outsb
jle
clc
addr16
mov
push
outsl
mov
mov
mov
shll
lds
fsts
mov
jno
mov
data16
cli
mov
jle
jecxz
bound
sti
mov
mov
adc
pop
add
movsl
push
cmp
pop
sub
out
shrb
js
fdivrl
clc
and
xchg
jnp
lods
out
fstpt
cmpsl
das
inc
test
mov
push
pop
cmp
in
mov
movsl
fs
mov
popa
xchg
and
vmulps
xchg
repz
mov
cmovbe
pop
xchg
sub
ss
test
lret
ret
xor
rcl
stos
and
out
or
mov
add
cld
loope
and
or
or
sahf
testl
movb
dec
xchg
lods
nop
fs
insb
xor
add
jbe
xchg
movsl
mov
push
xor
or
in
push
lahf
push
push
inc
test
mov
lea
add
mov
jns
test
xchg
insb
ljmp
sarb
notl
xor
push
test
adc
js
psubq
test
inc
mov
cmp
sub
jbe
daa
int
and
ja
pop
lret
cmpl
sbb
cltd
inc
loop
icebp
and
push
sbb
pop
and
xor
dec
pop
xchg
cmp
ds
stos
adc
mov
jns
push
xchg
leave
and
mov
lahf
repnz
imul
or
inc
enter
mov
shll
loopne
mov
mov
lods
cmp
das
pop
xchg
push
jb
sub
fstp
sbb
dec
sub
mov
iret
in
jb
mov
in
inc
mov
int
insb
roll
movsl
sbb
sub
aad
pop
sbb
mov
mov
les
xchg
stos
imul
xor
inc
push
pop
cmpsl
sbb
pop
sub
mov
in
cmp
addl
sahf
push
xor
jl
andb
loop
arpl
pop
pusha
xchg
jne
sub
pop
adc
pop
mov
jle
fbld
aas
push
dec
jl
sub
fs
push
arpl
mov
shl
fidivrl
xor
outsl
add
inc
repz
sarl
and
leave
xchg
or
out
dec
mov
daa
test
inc
call
out
pop
fisubl
inc
stos
inc
pop
loop
jae
or
std
les
cmp
push
imul
xor
lahf
iret
mov
xor
lret
int3
insb
jp
jg
push
int
cmp
shll
dec
cltd
lcall
pop
addl
xchg
pop
jle
gs
cmc
movsb
jmp
cwtl
xchg
push
sbb
push
fbld
pop
xchg
in
jno
es
jmp
pop
sahf
sub
call
enter
loope
movsb
addr16
insl
xchg
or
push
mov
mov
scas
idivl
lds
dec
cmp
stos
ljmp
adc
pop
movsl
imul
frstor
and
add
cmp
into
and
mov
cwtl
minps
out
mov
iret
fdivr
fcomip
jp,pn
cmpsb
xchg
mov
mov
mov
mov
fnstsw
shlb
jo
push
sub
in
enter
adc
jns
es
popf
scas
xchg
or
or
loope
shl
push
fld
arpl
push
xchg
shl
jae
pop
int3
mov
cmp
pop
adc
and
mov
sub
out
hlt
dec
and
arpl
push
mov
sti
cmpb
leave
je
imul
cmp
inc
shrb
loopne
and
adc
fisttpll
cmp
xchg
push
jle
xor
outsb
lret
inc
out
xor
pop
bound
loopne
xor
ficomps
dec
movsb
imul
jmp
mov
add
jb
ficomps
mov
scas
push
enter
imul
xchg
sbb
push
pusha
sahf
data16
cmp
icebp
fnstsw
dec
mov
xchg
mov
adc
add
data16
gs
and
fwait
mov
imul
push
dec
cli
cs
fcomp
add
loopne
jns
mov
and
inc
add
jb
mov
pop
inc
aaa
gs
pop
cmp
stos
sub
shlb
loope
xor
out
daa
mov
cld
pusha
push
out
and
je
adc
out
gs
cmp
mov
outsb
lods
push
test
outsb
rcrb
and
mov
dec
push
jo
jne
sbb
mov
dec
mov
dec
test
enter
lea
repnz
push
lods
mov
loopne
shlb
je
mov
cltd
fisubrl
daa
mov
sub
fwait
lods
sbb
inc
roll
or
dec
cmpsl
push
dec
ror
mov
test
ljmp
sub
movsb
mov
inc
test
push
xor
inc
cwtl
mov
xchg
pop
sbb
mov
lds
cwtl
iret
and
mov
cmp
push
sub
stos
cmp
imul
lahf
loop
pop
sub
jmp
mov
andl
lcall
je
inc
repz
cmp
xchg
xchg
xchg
ss
or
ficompl
js
out
pop
das
cmpsw
popa
sbbb
roll
sbb
jge
lahf
insl
cwtl
mov
fiadds
and
inc
arpl
add
add
insl
sub
ret
imul
ljmp
neg
test
mov
dec
rorb
ret
mov
mov
mov
test
pop
ficoml
insb
test
cmpsb
push
loopne
insb
pop
scas
and
in
aas
jae
adc
stc
push
jg
mov
and
mov
pop
adc
js
xchg
int3
mov
and
or
bound
xchg
mov
inc
dec
cld
loop
sub
icebp
in
cmpb
popa
aaa
push
and
cltd
out
jp
int
mov
or
movsl
lods
pusha
push
lret
mov
mov
pop
in
or
fildl
and
xchg
pop
and
sub
dec
adc
mov
mov
stos
jne
adc
insl
loop
jb
jno
mov
ret
or
mov
pusha
inc
notb
aam
es
aaa
push
stc
xchg
adc
dec
in
pop
mov
test
mov
enter
test
push
popa
push
pop
push
outsb
inc
lock
cs
out
add
push
fcompl
or
inc
test
mov
stos
cmp
dec
rcrl
cmp
shrb
inc
jmp
mov
or
jno
xor
outsb
fisttpll
les
lahf
rcr
mov
stos
xor
lret
inc
sar
jg
sahf
mov
and
add
sub
mov
push
mov
mov
lahf
sbb
sub
mov
dec
jp
ret
and
pushf
jmp
xor
dec
call
cmp
cmp
add
nop
aaa
mov
jl
mov
outsl
adc
std
movsb
cmp
adc
dec
imul
dec
inc
add
fnstsw
and
dec
pop
cs
cmp
sub
mov
jno
ljmp
adc
outsl
icebp
pop
leave
xchg
dec
or
push
inc
in
xorl
popf
or
mov
lods
mov
addr16
test
sti
movsl
mov
pop
jns
out
pop
in
sbb
mov
inc
push
mov
adc
push
leave
aam
jecxz
ret
sbb
fistps
shl
mov
add
push
out
ret
jmp
xchg
pop
mov
and
add
pop
dec
imul
dec
add
inc
push
inc
daa
sub
adc
dec
dec
scas
jge
xchg
sbb
xchg
push
repnz
js
test
fsubrs
hlt
in
stos
loope
inc
jmp
adc
cmp
aam
lcall
mov
xlat
dec
pop
mov
fucom
xchg
pop
adc
into
mov
aas
dec
dec
inc
xchg
adc
add
pop
xchg
pop
lcall
hlt
mov
in
mov
or
ja
add
shlb
mov
mov
or
jne
sbb
sbb
pop
fwait
loopne
cli
outsl
lds
push
test
xchg
adc
int
add
add
add
out
int3
sbb
and
cmp
jns
shrl
negb
imul
adc
cmp
enter
jle
loopne
es
loop
mov
insl
xchg
rol
cmp
jmp
out
pop
inc
iret
sbb
addr16
bnd
add
fistl
roll
outsb
add
xor
inc
daa
icebp
inc
and
mov
mov
mov
mov
adc
insb
loope
aam
es
popa
pop
mov
mov
fildll
movsb
push
xor
push
adc
xchg
mov
xchg
add
jbe
and
pop
xrelease
and
data16
mov
ss
setbe
xchg
das
dec
xor
ds
or
jmp
mov
out
cmpsb
pop
popa
ljmp
icebp
push
imul
or
std
mov
or
jae
or
loope
dec
in
pop
sti
in
mov
bswap
cmp
fdivrp
andb
das
fisubs
popa
lods
sbb
or
ret
gs
jmp
scas
mov
push
mov
sub
xbegin
dec
repnz
pop
adc
mov
jge
aas
and
gs
and
out
cmp
int
and
mov
pop
cltd
sbb
xchg
pop
mov
lret
scas
int3
mov
fwait
xor
stos
scas
testb
movsb
pop
xor
test
mov
pop
js
test
in
sti
setnp
dec
mov
dec
and
daa
add
rcrl
repnz
loope
jp
mov
add
jl
sbb
test
js
add
imul
xchg
cmpsl
lods
or
xchg
inc
sub
mov
sub
mov
lock
jle
pop
pop
out
push
add
out
scas
fisubrs
lahf
push
insb
dec
jae
leave
shll
pop
mov
add
pop
not
daa
sbb
mov
inc
dec
shll
stos
inc
cmpsl
in
jno,pn
dec
sub
outsl
enter
leave
jge
cwtl
sbb
or
vpunpckhbw
pusha
sbb
and
popa
push
inc
sub
pusha
jo
lret
in
pop
aas
shlb
lea
daa
in
sub
jg,pt
scas
iret
or
add
cmpsb
lahf
xchg
jmp
lock
test
or
mov
rcrl
mov
call
aaa
cmp
dec
into
roll
popa
or
lea
xchg
call
in
testb
add
cmp
js
cmp
std
fcoml
jnp
pop
hlt
fnstcw
jae
jg
imul
inc
inc
hlt
aas
lds
lret
cmp
flds
dec
aas
fisubl
loopnew
mov
out
xchg
rorb
mov
gs
out
lcall
mov
rorl
mov
or
mov
or
jecxz
mov
aaa
xchg
jae
frstor
gs
lods
out
mov
jmp
xlat
notb
xchg
test
sub
test
mov
scas
jmp
xor
sbb
sbb
repz
cwtl
jne
insb
mov
cmp
repnz
adc
mov
popa
fs
fisubl
scas
dec
test
bound
xchg
push
cs
mov
mov
ret
add
push
out
jle
sub
inc
in
push
push
enter
dec
mov
mov
lods
call
mov
add
dec
cld
out
inc
jns
sahf
jnp
popf
pop
jge
sbb
stos
jae
lret
and
ljmp
push
repnz
jb
cmp
mov
push
and
inc
fldt
pusha
daa
sub
or
pop
adc
or
mov
pop
mov
in
dec
rclb
adcb
lcall
inc
mov
jb
or
dec
mov
cmp
jl
loope
mov
aad
out
ret
orb
in
mov
jecxz
std
aad
lahf
lods
lret
dec
jg
inc
sub
xchg
add
testb
cli
xlat
cs
sub
sub
and
mov
and
pusha
xlat
or
lahf
shl
adc
mov
mov
aas
fbld
ja
pop
cmp
fdivrl
sbb
mov
scas
and
rorl
jle
jge
jns
into
insb
mov
das
sar
or
out
lods
daa
push
std
dec
mov
add
movhps
daa
imul
aaa
xchg
gs
js
xor
push
cwtl
loope
sub
popa
mov
fucom
rclb
outsl
fstpl
lock
cmc
jge
out
sbb
or
movsb
orw
mov
sbb
mov
mov
stos
xor
dec
lret
xchg
sbb
popf
movsb
das
aas
dec
mov
sub
push
jmp
in
or
cmp
or
push
xchg
dec
mov
daa
pop
cmp
cmp
mov
pop
push
mov
stos
push
or
insb
popa
inc
cmpsb
lods
push
mov
inc
sarb
sub
xorb
push
fs
adc
adc
or
int3
xor
int
adc
jns
xor
cmp
cmpb
or
enter
xchg
rcl
add
das
out
leave
xchg
jne
push
dec
push
xor
inc
repnz
and
outsb
test
cltd
sub
mov
dec
mov
xchg
aaa
xor
mov
jae
stos
nop
inc
mov
addr16
sub
daa
sub
icebp
std
xor
add
sbb
push
lret
cmpps
into
popf
xor
fdivl
shll
mov
cli
mov
stos
push
pop
sub
aam
adc
sbb
jp
fisubs
in
bound
xor
movsl
xlat
sbb
jmp
inc
inc
gs
fisttps
pop
cwtl
gs
cmp
fisttpl
cmp
dec
mov
daa
push
mov
mov
ret
dec
pop
cs
mov
add
in
cld
enter
jmp
cli
fs
jnp
int3
mov
iret
dec
rcll
jne
xorl
das
dec
inc
and
xor
mov
movsl
lret
loopne
sub
mov
xor
cmp
inc
add
push
cmp
push
cwtl
inc
fsts
adc
cmpl
insl
aaa
test
mov
stc
ljmp
mov
xchg
insb
sbbl
sbb
jne
add
iret
dec
xor
popf
mov
cmp
idiv
sub
mov
inc
ret
ror
out
xchg
cmpsl
adc
or
or
ret
sub
mov
gs
inc
xchg
dec
pop
jb
fidivrs
mov
fistl
and
or
sbb
sub
sbb
xor
or
xchg
mov
aas
and
aaa
adc
jg
adc
incl
in
test
shll
out
in
xor
bound
nop
push
in
mov
iret
jp
and
dec
add
scas
cmpsb
outsb
inc
ljmp
ljmp
add
sub
or
or
add
xchg
aad
inc
rcll
push
orb
outsb
push
lret
pop
lahf
rcr
and
sbb
movlhps
shr
dec
test
xor
cmp
jnp
enter
mov
dec
sub
sti
xchg
push
enter
lret
fwait
and
mov
jmp
mull
lods
cwtl
ja
fs
sub
xor
sbb
testb
in
pop
andl
ja
cmp
loopne
mov
idivb
adc
adc
sbb
dec
int
lahf
or
push
movsl
std
loop
mov
adc
cltd
jbe
loop
into
fstpl
stos
insl
test
pop
add
cmp
pop
or
xlat
push
in
out
mov
jbe
sbb
cmpl
pop
repz
sub
mov
pop
add
sbb
les
or
enter
xchg
jbe
repnz
add
icebp
push
push
sub
or
xchg
jo
hlt
aas
inc
mov
daa
cli
inc
add
clc
aas
push
jbe
dec
and
sbb
hlt
adc
imul
add
pop
adc
add
and
bnd
push
sub
push
sbb
mov
jg
pop
inc
jge
pop
enter
rcll
repnz
xor
and
lret
popa
adc
scas
mov
sbb
mov
and
xor
insl
icebp
pop
jecxz
and
push
adc
and
mov
xchg
or
testl
clc
add
jl
ljmp
shlb
ljmp
iret
xchg
push
je
jbe
mov
sub
test
xlat
fidivrl
mov
lds
or
sarl
dec
aad
sub
sub
push
lock
aam
jle
xchg
fcmovb
scas
inc
fsubl
sub
enter
loop
in
push
jmp
repz
outsl
mov
adc
push
jns
jae
inc
and
jmp
insl
push
nop
pop
xchg
test
les
xchg
inc
pushf
aas
pop
or
insb
and
mov
xor
xlat
test
sbb
std
aad
fs
lahf
push
xor
xchg
stos
mov
add
mov
stos
add
aam
mov
js
push
lods
push
out
outsl
notl
mov
mov
pop
sbb
push
imul
insb
gs
xchg
xor
mov
mov
pop
in
pop
lods
adc
lods
and
scas
lahf
lea
sub
iret
std
inc
fstpt
leave
push
lcall
icebp
jmp
xor
hlt
imul
in
cmp
test
out
jge
in
dec
adc
stos
push
ret
mov
add
flds
adc
pushf
xor
iret
adc
sub
cmp
sahf
outsb
inc
out
sbb
mov
mov
loopne
js
in
dec
push
inc
push
cmp
xchg
fs
shll
sarb
jno
js
arpl
imul
ss
xor
or
sbb
or
dec
push
jo
test
enter
jmp
jns
xchg
repnz
pop
xor
and
sbb
inc
mov
mov
sbb
lahf
gs
cmp
out
fprem
mov
rcr
out
sbb
repnz
inc
cmpsl
xor
mov
lea
jns
xor
and
nop
sub
dec
and
dec
xchg
pop
fcmove
pop
adc
std
sbb
lcall
mov
fdivrs
into
ljmp
aaa
sbb
notl
hlt
imul
sysexit
adc
push
add
mov
mov
cmp
push
lahf
sub
mov
dec
dec
push
dec
adc
test
sarl
ljmp
xchg
push
add
enter
dec
or
or
mov
mov
aam
mov
into
cmpsb
push
icebp
bound
frstor
ja
dec
inc
xchg
or
mov
repnz
and
popf
arpl
dec
fsubrp
pop
push
jg
fcmovnbe
push
or
add
out
lcall
dec
mov
dec
xchg
push
sbb
out
out
rcl
cli
jecxz
push
pushw
aad
mov
add
dec
rcll
pop
lock
cmp
dec
in
int
lds
cli
inc
push
sti
jmp
lods
xchg
or
jmp
aas
jl
xchg
jg
popf
les
hlt
repz
mov
scas
cmp
jle
jns
adc
jns
data16
es
data16
dec
adc
xchg
jns
add
jnp
enter
aad
or
push
pop
or
mov
lods
es
or
inc
les
pusha
aaa
sbb
shlb
shll
inc
rcr
loop
scas
add
insb
arpl
push
mov
and
or
sbb
mul
xor
jne
xchg
xor
lods
imul
mov
inc
loopne
xor
out
popa
jo
pop
das
xchg
jge
dec
pop
test
lret
fwait
cltd
movsl
pop
cmp
sub
xchg
mov
movsb
shll
dec
fucomi
orb
xchg
push
xchg
dec
enter
dec
inc
xchg
pop
addr16
enter
xchg
jmp
mov
adc
mov
inc
xor
fcmovb
fsubrs
mov
or
subl
push
sahf
out
cmpsb
in
idivb
cmp
data16
out
addr16
ret
lods
cwtl
inc
out
sarb
lahf
xor
xor
stos
test
push
inc
outsl
push
lcall
mov
sbb
and
lret
movsb
clc
mov
sti
lods
cmp
leave
in
es
int3
loopne
dec
fsts
jne
loope
dec
sub
in
mov
hlt
popf
lret
pop
mov
orb
pushf
lret
jae
daa
mov
stos
or
pushf
xor
sub
and
aam
pop
cmp
xchg
add
scas
mov
hlt
shll
sub
push
xlat
cli
fcompl
adc
mov
nop
cmp
jae
or
inc
sbb
jl
pop
out
jg
mov
dec
push
dec
jbe
push
jge
pop
jns
sub
jmp
xor
cmp
push
in
insl
pop
cmp
out
add
xchg
dec
mov
mov
inc
mov
leave
sbb
inc
sub
std
add
cmp
shrl
push
loop
loop
mov
ja
xorl
dec
es
mov
cli
xchg
js
push
fistps
dec
xchg
stos
ror
dec
push
sub
dec
bound
inc
inc
or
ja
fldl
movsl
imul
mov
in
push
xchg
or
pop
jge
scas
into
xor
ret
mov
ror
mov
jo
das
jne
lock
ret
cmp
negb
jb
stc
xlat
cmp
mov
rorb
shlb
and
xchg
mov
xchg
add
sub
pusha
sahf
adc
xchg
test
pusha
scas
loop
lcall
test
sbb
sbb
rorl
lahf
pop
clc
mov
xor
push
add
cmpsl
stos
xor
xchg
dec
jl
xor
mov
push
aam
jmp
push
cmpsb
xor
mov
mov
lret
cmp
movsb
jle
cmpsb
jo
sti
mov
aaa
dec
fisubl
mov
mov
leave
push
enter
cld
push
or
mov
dec
loopne
iret
cmc
addr16
mov
lods
or
jb
mov
and
jo
adc
mov
dec
push
sbb
test
add
scas
fnsave
or
pop
or
dec
ret
add
les
arpl
sbbb
lret
loope
jle
test
cmp
mov
cld
mov
cmc
imul
dec
mov
fnstcw
scas
sbb
enter
out
mov
das
adc
mov
push
hlt
fs
mov
subb
sbb
lock
sub
js
leave
xchg
and
movsb
popa
out
mov
aam
cld
sbb
or
leave
cmp
xor
sub
add
add
int
sub
inc
loopne
push
inc
cwtl
sbb
pusha
mov
fildll
xchg
testb
or
push
shl
test
inc
enter
push
daa
xor
xor
or
push
mov
xor
sbb
and
push
jne
addr16
in
mov
push
or
mov
pop
scas
scas
mov
cmp
mov
inc
stc
shll
pop
call
push
or
inc
pusha
cmc
stc
in
xor
adc
repz
lods
jl
jns
stos
sub
cmpsl
cmp
clc
mov
push
out
addl
pop
cmpsb
ds
add
pusha
dec
cmp
fcomp
fnsave
out
cmp
ljmp
pop
test
cmc
loop
ficoml
xorb
xchg
lods
clc
push
loopne
jp
push
leave
or
enter
sbb
int
cmp
daa
andl
enter
push
cmc
push
cmc
push
mulb
sbb
xor
imul
cmpsl
fucomi
int3
jl
rcrb
shl
popf
xchg
lods
sar
enter
mov
lock
arpl
daa
sub
dec
mov
or
inc
add
test
imul
cmp
and
cmp
jnp
inc
insl
pop
xchg
inc
into
jmp
push
out
out
mov
and
mov
icebp
hlt
xchg
movsb
mov
movsb
jne
shlb
add
dec
pminsw
fisttpll
and
cmpsl
push
jge
ficoms
push
push
lret
adc
xchg
push
add
dec
cmc
xchg
faddp
icebp
mov
jg
adc
inc
inc
mov
push
inc
push
inc
fwait
aaa
aam
outsb
xor
jl
adc
xchg
imul
lock
mulb
repnz
aam
scas
lds
push
mov
cmp
jae
inc
and
or
mov
mov
cmp
inc
or
adc
stos
adc
fmuls
insb
inc
pop
dec
adc
mov
movsl
js
xchg
stos
lds
lea
nop
cmp
sbb
xor
out
jae
pop
inc
enter
loope
add
and
xor
ret
pop
mov
ja
dec
shlb
insl
inc
bound
movsb
popa
outsl
bound
aas
lret
mov
lods
pop
mov
sbb
dec
cli
push
imul
xchg
or
mov
ljmp
xor
jmp
filds
out
movsl
pop
mov
push
cmpsb
sbb
mov
xchg
push
pop
add
cmp
repnz
arpl
jns
call
add
dec
cmp
adc
in
sbb
gs
nop
mov
and
repz
pop
in
and
sub
sub
mov
fmulp
fidivs
xchg
sbb
lret
js
cltd
addr16
adc
pop
outsb
inc
clc
cmp
push
pop
cmpsb
xchg
imul
mov
mov
xchg
out
inc
dec
dec
cmc
or
addr16
add
pop
xlat
pop
inc
loopne
pop
xchg
jno
and
push
stc
lcall
xchg
mov
das
push
mov
mov
push
sub
push
xchg
je
xor
dec
push
mov
xchg
ret
scas
stc
pop
inc
aas
cli
sbb
sub
mov
sub
cli
jecxz
sub
push
xor
dec
pop
out
sbb
sar
pop
fistpll
in
add
push
stos
push
jge
sbb
jne
ljmp
gs
xchg
sub
push
and
inc
add
mov
and
sub
cs
es
mov
fstpt
mov
dec
fnstcw
pop
adcb
sub
mov
cmpsl
sub
jmp
inc
in
sbb
js
jb
in
pushf
lods
inc
ss
dec
add
cmpsb
ljmp
xchg
push
int3
push
dec
pusha
inc
jp
pop
in
ret
loop
out
mov
jp
pushf
fwait
cld
mov
jb
mov
jp
and
mov
and
push
shll
and
lret
jno
addr16
cmp
pushf
sub
cli
jmp
mov
ret
jnp
insb
xor
adc
mov
pop
xchg
pop
fcomps
stos
jle
mov
pop
mov
add
lock
jne
sub
leave
shlb
pop
ret
sub
mov
xchg
pop
pop
xchg
outsl
cwtl
ret
ret
pshufw
inc
cmp
add
sbb
cmp
scas
addr16
push
adc
dec
fs
jp
sbb
shrl
push
xchg
lods
mov
int
lea
cmp
dec
lods
xor
iret
shlb
jbe
cwtl
int
repnz
inc
test
mov
push
aas
push
repnz
cmp
mov
cmp
push
add
shll
cs
lea
in
xchg
add
push
cmpsb
cmc
add
push
push
fcoml
push
mov
cld
push
cltd
out
sbb
push
in
push
pop
popa
jns
or
add
dec
sbb
push
arpl
cmp
sbb
leave
adc
lahf
ficompl
or
lret
mov
inc
ljmp
dec
outsl
fs
sahf
test
push
cld
lods
fsubrp
push
sbb
mov
sbb
sar
cmpsb
adc
inc
cmpsb
aaa
aas
lods
repnz
insb
stos
sti
mov
push
sub
cli
dec
mov
lcall
pop
clc
fdivrl
mov
lea
mov
inc
push
xchg
mov
mov
lret
fcmove
mov
jmp
bound
fcmovb
into
or
push
pop
xchg
dec
sbb
mov
jbe
adc
pop
popf
push
push
inc
inc
sbb
mov
sbb
hlt
cld
mov
das
and
add
add
das
jecxz
cmp
mov
adc
data16
sbb
lods
xor
cmp
sub
repz
mov
mov
ljmp
fwait
mov
cs
and
or
iret
jb
xchg
mov
mov
dec
cmp
and
cs
ds
in
scas
arpl
xchg
rclb
cmp
nopl
cld
insl
rolb
adc
sbb
fwait
movsl
shrb
mov
push
movsb
cmp
shll
xor
addb
stc
mov
loop
mov
mov
ds
cmpsb
or
pop
adc
ja
not
sbb
jnp
fisttps
enter
adc
push
or
lods
push
dec
mov
test
test
adc
aas
cwtl
sub
sub
mov
nop
cwtl
pop
in
push
sahf
cmpsl
fincstp
lods
jns
add
movsl
cmp
mov
jge
or
imul
or
ret
pusha
int3
insl
idiv
lret
test
xchg
or
andl
scas
mov
xor
iret
jge
jne
jbe
add
movsl
or
addr16
mov
stc
mov
inc
into
rcl
stc
inc
movnti
cltd
push
loop
mov
xor
dec
lods
shll
and
scas
push
inc
jmp
jns
pop
jecxz
mov
jae
pushf
imul
sbb
inc
iret
inc
lahf
test
int3
sbb
push
adcl
and
cmc
pusha
fs
leave
adc
mov
and
fisttpll
lock
and
and
fcomps
push
inc
test
and
notb
mov
sub
fs
aam
sbb
push
xchg
pop
test
mov
outsl
popa
pop
inc
mov
xor
in
sti
dec
xor
xor
push
xchg
out
outsb
lcall
icebp
inc
or
dec
rcrl
mov
mov
ljmp
pop
add
pusha
sahf
sti
popf
lea
xchg
adc
xor
jmp
sub
jns
cltd
xchg
or
lret
or
imul
in
mov
mov
mov
pushf
cltd
xchg
rcl
scas
xchg
nop
inc
mov
sbbb
push
out
lods
jnp
imul
outsb
mov
in
cmp
and
fstp
imul
and
or
into
cmp
mov
ljmp
lahf
ljmp
inc
and
xchg
xlat
mov
fdivr
fs
xchg
shlb
bound
pop
sub
int3
rclb
cwtl
mov
sahf
iret
mov
jp
ret
cmpb
cs
add
popf
ds
loopne
adc
je
cmp
mov
xor
and
lahf
iret
testl
fs
sub
out
rorl
xchg
test
lods
add
xor
ja
faddl
mov
adc
xor
xchg
xor
lock
mov
sub
push
jmp
xchg
sub
pop
pop
cmc
sub
push
std
jnp
dec
aad
jp
shrb
dec
jg
pop
test
jl
xor
mov
rclb
push
mov
ss
push
aas
and
pushf
mov
jge
ss
fistps
mov
push
movsl
dec
push
push
adc
push
xor
lret
pop
ss
inc
leave
push
cmpsb
mov
or
jns
xchg
adc
jbe
mov
outsb
js
movsb
insb
sbbl
cmpsb
incb
mov
pop
adcl
jg
mov
fcoml
out
adc
sbb
mov
inc
and
sbb
rcl
repnz
xor
hlt
jmp
icebp
pop
faddp
dec
in
push
jle
jecxz
push
cmpsl
in
cmp
xchg
push
cmpsb
push
and
ret
pop
jge
xchg
mov
push
sbb
cld
add
lret
inc
ljmp
idivb
into
xchg
lahf
adc
fwait
xor
int
cmp
fisttps
cmp
repz
daa
add
loope
inc
test
mov
dec
and
loop
push
loope
psubsb
fs
xor
sub
cmp
adc
push
mov
shrb
jo
mov
pop
scas
out
xchg
repnz
jo
mov
adc
pop
sahf
sub
mov
or
pop
pop
je
sub
fisubl
push
gs
sbb
rorb
jge
repnz
mov
popf
cmp
jle
adc
ja
inc
sub
lds
or
mov
dec
fbstp
scas
out
inc
fistl
sub
insl
loop
out
dec
out
or
dec
ds
testl
dec
test
cmp
cmp
jae
cmp
fdivr
std
xchg
push
mov
xchg
xchg
sub
fwait
jmp
push
dec
cli
cli
add
je
mov
xor
cmp
je
pop
mov
jo
jnp
gs
cli
ja
fidivrs
adc
ljmp
dec
outsb
push
cmc
push
adc
pop
sub
cmp
dec
pop
fstps
insl
mov
dec
pop
push
mov
movsb
loope
push
mov
test
dec
filds
jo
js
sbb
or
inc
mov
arpl
and
cmovge
out
ljmp
pop
repnz
in
inc
scas
add
push
pop
jno
push
jns
jns
or
or
xchg
push
dec
lcall
and
add
and
mov
pop
addr16
cmp
mov
xchg
mov
inc
mov
daa
sbbl
sub
push
sbb
push
pop
push
jle
enter
adc
scas
mov
daa
jl
cli
adc
jns
ret
scas
mov
mov
mov
out
test
jecxz
out
pop
inc
or
push
xchg
loop
das
or
fimuls
fbld
dec
fwait
out
addr16
inc
xor
mov
cmpsl
pop
daa
mov
sbb
xchg
scas
pop
pop
jo
dec
into
jmp
mov
out
fwait
sub
pop
jge
sbb
pop
iret
shr
jb
and
mov
push
dec
dec
mov
aad
dec
in
mov
dec
and
or
xchg
sub
adc
or
inc
pop
fidivl
xor
cmp
cwtd
mov
sub
lea
or
push
add
dec
add
mov
insl
xor
sbb
and
shrb
iret
mov
cli
enter
jno
xor
add
stc
out
ds
aaa
sbb
mov
ret
lcall
loope
push
cmp
das
pushf
xchg
or
add
mov
repnz
jbe
inc
out
stos
dec
fldenv
into
in
aam
pusha
iret
in
or
ret
cmp
test
cmpsl
fiaddl
push
je
xchg
xor
push
cmc
jp
push
call
add
lret
dec
jae
ds
cmp
popa
inc
inc
adc
xchg
sub
mov
shrb
adc
addl
sub
jno
into
clc
aad
inc
sbb
adc
adcl
sahf
cwtl
jae
sbb
outsl
jns
xor
pop
scas
lods
rorb
lret
lret
jbe
and
or
jl
sbb
add
call
pop
push
ds
outsl
xchg
insl
inc
movsl
jo
push
jmp
arpl
or
mov
mov
pop
xchg
mov
mov
mov
lock
faddp
lret
ja
jb
lret
or
das
cmpsl
scas
cmp
test
pop
inc
pop
jmp
js
xchg
in
test
filds
popf
mov
push
int
sub
sbb
insb
aad
insl
pop
test
push
insb
pop
stos
mov
xchg
stc
popa
in
push
pop
push
arpl
jae
std
add
inc
ret
mov
sub
jno
cltd
push
fs
repz
inc
dec
arpl
ja
fiaddl
ss
lock
stos
es
adc
dec
sarb
push
push
xor
dec
cmpsb
jecxz
pop
aad
sub
loop
stos
stc
mov
lds
adc
popa
dec
ja
ret
bound
push
data16
pop
cltd
pop
mov
lods
mov
sub
cld
repnz
movsb
decl
stos
cmc
lea
cmp
add
ret
lcall
gs
adc
add
push
push
fs
test
movsl
mov
icebp
mov
stos
sbb
icebp
jno
push
out
and
jo
out
stos
cld
in
dec
out
push
cli
dec
push
stc
sbbb
jb
pop
leave
dec
mov
jb
sbb
inc
push
fwait
pop
dec
lcall
scas
mov
popf
xor
and
cmp
call
arpl
cmp
inc
loop
pusha
das
sbb
outsb
scas
xchg
mov
outsl
shr
pop
repz
cmp
loop
push
push
push
hlt
cmp
in
stos
lock
sub
pop
xchg
icebp
jl
sub
dec
sahf
and
loopne
shll
cmpsb
sbb
push
aam
rorl
push
out
xor
xchg
sub
adc
push
mov
dec
sti
popa
repz
mov
movsb
fisubrs
sbb
jmp
sti
sti
pop
daa
gs
or
xchg
jo
sarl
push
dec
lret
loope
mov
cmpl
sub
inc
pop
inc
leave
fsubs
cltd
sbb
leave
dec
push
and
addr16
mov
mov
push
dec
int
jge
js
mov
in
popf
arpl
test
gs
ja
jle
push
icebp
repz
repz
adc
xchg
cmpsl
adc
js,pn
mov
xlat
movsl
dec
push
xor
aaa
test
shll
xor
or
imul
mov
cmc
xlat
mov
dec
ljmp
push
push
incl
pop
xchg
ds
xchg
leave
xor
sbbl
leave
sbb
gs
adc
cmpb
xlat
sbbl
loopne
loopne
or
fsubrl
ds
ret
pop
and
mov
sbb
mov
cs
jg
or
aaa
mov
insl
inc
pop
jge
mov
xchg
inc
arpl
cmp
sub
addb
fmull
xor
outsl
jo
fists
jp
jl
mov
xor
loop
dec
lret
sub
adc
lret
pop
stos
fsub
pop
in
mov
adc
mov
loop
lret
mov
bound
ret
ja
mov
data16
fistpl
enter
mov
fistpll
ja
cmp
cmpsl
dec
es
jae
fwait
push
mov
outsb
mov
cli
daa
int3
mov
cwtl
push
lcall
cmp
arpl
ret
sti
test
adc
cmp
pop
cld
insl
sbb
call
mov
roll
jg,pn
and
movswl
dec
and
mov
cmp
fisubs
mov
orl
xchg
mov
add
pop
test
mov
or
xchg
call
push
cmp
sbb
dec
sub
pop
and
insl
fcmovnb
xchg
sub
mov
lret
push
imul
mov
sbb
stc
mov
movsl
loope
xchg
out
xor
pop
shrl
mov
loop
out
push
inc
add
movl
iret
loop
xorl
dec
push
push
test
out
add
dec
cmp
mov
movsb
jnp
push
repnz
loopne
inc
pusha
mov
rdpmc
xor
movsb
aad
jbe
push
sub
stos
call
add
or
leave
mov
jns
inc
int
or
jge
xorb
add
ds
mov
xor
fisubrl
movsb
mov
loopne
lods
fxch
mov
jge
in
add
push
lret
cs
ficomps
jns
jmp
sub
mov
xor
cmp
js
incl
scas
ret
in
stos
stos
rcrl
mov
notl
hlt
pop
or
test
std
sbb
dec
lcall
hlt
mov
outsl
fwait
mov
jns
repnz
adc
imul
dec
stos
cmp
add
adc
inc
sbb
pop
push
pushl
inc
mov
adc
ljmp
cmp
pop
fdivp
pop
cmp
ljmp
jne
shrl
xchg
sbb
cmp
mov
and
in
mov
lds
cmpl
out
pusha
pushf
push
mov
jle
xor
fs
bound
lea
push
sbb
sub
pop
add
cmc
or
clc
in
scas
bound
ss
xchg
pop
adc
push
pop
or
ja
pop
pop
push
mov
mov
testb
mov
in
add
into
push
push
aad
dec
and
sbb
push
xchg
ss
push
jbe
xchg
les
jnp
sbb
jge
sbb
scas
mov
cmp
and
push
lock
ds
mov
xor
push
xor
and
adc
bound
scas
loope
lret
das
mov
or
hlt
pop
and
xchg
call
sub
dec
adc
loop
cmp
loopne
sbb
jbe
mov
lahf
dec
loop
lcall
scas
jmp
pop
xorl
xor
pop
testb
push
out
pusha
xor
lcall
jmp
jle
arpl
cmpsb
movsl
iret
icebp
out
and
xchg
rolb
outsl
push
sub
xor
sahf
push
outsl
jg
xchg
lock
and
in
dec
sub
enter
loopne
or
mov
add
mov
enter
cld
leave
in
mov
xor
sbb
cmp
pop
shrb
mov
pusha
adc
imul
pop
xlat
addb
pop
xor
fsubr
push
xchg
movsl
xor
in
arpl
mov
jno
cwtl
jnp
stc
jb
mov
xor
sbb
fcmovu
adc
js
cltd
jl
or
push
sbb
or
in
insl
cmp
sarb
and
xchg
sarb
test
lods
sub
inc
idivb
mov
leave
cwtl
mov
cmc
jnp
scas
data16
add
xor
cmp
in
lods
jmp
lahf
lods
in
lock
stos
jl
push
rcl
lahf
xchg
mov
push
add
les
mov
pop
shl
js
lods
mov
std
xlat
ret
mov
cmp
push
pop
sub
mov
push
xor
or
xchg
add
daa
push
mov
lods
movsb
repz
mov
stc
xor
xchg
mov
jo
push
and
dec
orb
pop
pop
or
dec
in
or
bound
icebp
mov
inc
mov
repz
jne
jmp
jo
icebp
push
jp
mov
dec
pop
or
lret
or
out
ret
test
jp
mov
cltd
sub
mov
xchg
addr16
xor
dec
out
mov
mov
jae
xchg
call
divb
repz
push
cmc
xchg
and
pop
fisttps
sub
xchg
neg
mov
add
inc
jo
int
or
jmp
in
or
pop
ror
or
loope
pop
es
test
pop
jmp
cwtl
pop
xor
mov
lcall
shlb
fs
push
test
or
xchg
xor
mov
mov
mov
add
ret
mov
push
into
and
sbb
bound
lods
cmp
xchg
cmp
jg
dec
and
lcall
and
jg
enter
mov
inc
jle
ret
loopne
inc
hlt
stos
push
mov
push
jns
ds
cmpsl
dec
mov
pop
or
and
scas
sbb
jne
andl
out
pop
push
scas
lret
jle
push
iret
fidivrs
jmp
stos
in
push
adc
push
dec
add
cwtl
stc
push
test
mov
cli
mov
fistpll
int3
push
inc
and
inc
mov
inc
xlat
jns
add
push
push
dec
mov
or
ret
fistps
imul
jae
scas
mov
xchg
mov
adc
lock
addr16
es
xchg
iret
jbe
lea
cmp
test
mov
push
stos
add
pop
outsl
jae
cmpsb
popa
ficompl
cmp
jo
hlt
fwait
inc
mov
cld
in
and
jae
fcmovu
rcll
sub
dec
lcall
xchg
xor
adc
jmp
negb
dec
ret
pop
inc
mov
and
std
sahf
dec
or
ret
scas
lods
xchg
xor
mov
adc
mov
jmp
adc
lds
push
jae
test
mov
xchg
paddsw
sbb
sbbl
jnp,pn
test
call
loopne
push
aaa
mov
and
xchg
dec
jle
jb
shlb
xchg
pop
out
cli
fidivs
out
mov
leave
bound
push
iret
std
lret
mov
ds
lods
or
cmp
andl
inc
popa
jbe
or
inc
in
cmp
mov
dec
push
out
bnd
pop
sub
push
mov
sub
lock
mov
mov
xchg
dec
out
pop
pusha
sbb
jecxz
popf
add
mov
xchg
dec
dec
mov
dec
cmp
push
mov
xchg
ljmp
das
jae
pop
push
push
out
jo
movsb
jbe
les
add
or
xor
int3
mov
lret
pop
inc
or
fnstcw
aas
jecxz
popf
mov
jns
push
mov
mov
and
aam
mov
xor
aaa
in
movsb
sub
jge
sub
mov
iret
xchg
mov
addl
inc
adc
leave
xchg
out
lret
repz
enter
sahf
mov
movsb
mov
loope
fucomp
mov
and
sbb
fldcw
ss
push
pop
stc
or
es
in
push
mov
jae
jmp
in
loopne
lret
cmp
mov
ja
call
adc
sub
sbb
or
mov
mov
add
out
xchg
push
add
adc
sbb
das
push
mov
sar
je
and
sti
imul
mov
es
arpl
out
cmpsb
pop
xchg
shrb
pop
xor
ss
and
lret
and
or
push
xchg
sub
outsb
and
cmp
gs
ljmp
cmc
lret
lock
cmpsb
dec
fdivrs
xchg
xor
or
jp
and
in
add
jp
add
dec
hlt
stos
or
jnp
outsl
test
sub
out
or
xchg
or
jae
es
pavgb
inc
inc
fisubrs
push
cwtl
loopne
and
add
cmpsl
mov
adc
sbb
mov
les
adc
lods
dec
frstor
adc
test
lahf
mov
sbb
inc
add
ret
sbb
cmc
loop
stos
scas
shll
fstps
lcall
adc
test
adc
jnp
adc
or
lret
imul
div
inc
xchg
xor
pop
aaa
push
stos
pop
jb
and
xchg
mov
fcomip
jnp
push
lea
mov
push
sbb
mov
push
iret
mov
into
lahf
xor
inc
jl
pop
dec
dec
pop
dec
adc
mov
add
cli
or
mov
or
pop
movsb
push
popa
inc
mov
mov
adc
or
adc
outsb
dec
insl
iret
dec
lock
sar
xchg
test
jne
mov
mov
hlt
divb
xchg
ss
adc
push
and
nop
add
mov
or
into
je
xchg
test
mov
jmp
nop
aam
dec
adc
add
cmp
and
cli
push
sub
nop
and
push
cli
fstps
sbb
cwtl
push
sub
test
stc
shrb
or
fwait
mov
mov
inc
mov
int
xor
into
sub
push
sbb
cmp
jns
cmpsl
pop
int3
enter
out
jne
xor
inc
into
shrb
out
cmpsl
sub
stc
out
into
cmpb
andl
push
paddsb
add
loopne
xor
and
mov
xor
mov
sbb
sbb
pop
xor
in
insb
cmp
loopne
jae
dec
mov
rcrb
loopne
cli
jbe
fstps
aam
addr16
xchg
insl
dec
divb
negb
mov
mov
dec
testb
cld
fwait
mov
dec
dec
mov
or
and
in
adcl
xchg
inc
stos
push
mov
sbb
mov
or
inc
loopne
or
xchg
outsl
insl
cmpb
sub
adc
jp
pushf
arpl
xchg
jo
mov
pop
or
cmpl
push
jmp
or
test
scas
sarl
sbb
cmp
rcr
xchg
mov
xchg
add
fistps
dec
adc
scas
jb,pn
inc
xchg
mov
int3
fisttpl
and
push
mov
es
sub
jmp
ds
or
push
movd
mov
xchg
mov
cwtl
xchg
adc
jbe
add
lcall
incb
std
insl
leave
arpl
mov
subl
repz
mov
cmp
xchg
and
push
rolb
movsl
pop
popa
push
xor
mov
iret
aas
int3
fwait
pusha
add
xor
imul
push
inc
pushf
adc
repnz
sbb
ret
jge
dec
sub
sahf
inc
and
in
xchg
xchg
mov
pop
cli
xchg
mov
std
addr16
mov
pop
mov
pop
gs
das
push
insb
test
loope
mov
pop
pushf
iret
addb
xor
jbe
inc
clc
jbe
push
sarl
jecxz
ja
push
icebp
xchg
mov
imul
push
or
jns
sbb
pop
lahf
push
sbbb
mov
xor
es
inc
outsl
cmp
pop
mov
pop
insb
aad
fwait
imul
pop
and
lods
mov
sub
mov
iret
jns
add
push
push
add
sub
fisubrl
movb
push
sub
subps
sbb
push
icebp
mov
iret
dec
xor
ret
imulb
sbb
out
lds
fsubs
xchg
xchg
pop
pop
rorb
scas
and
out
cmc
dec
mov
scas
clc
fisubrs
pop
pusha
pop
lret
out
push
popa
ljmp
inc
loope
sbb
jg
adc
xor
xlat
rcrl
push
and
stos
stos
loop
repnz
push
pop
and
outsl
mov
push
stos
divl
xor
fnsave
dec
mov
and
jl
push
mov
data16
jmp
dec
push
push
push
sub
mul
jno
mov
outsb
mov
push
push
ja
cmp
xor
clc
dec
add
daa
cmp
ja
mov
ret
ja
insl
and
mov
and
imul
xlat
push
sub
stos
add
sahf
clc
dec
and
or
lods
cmp
lahf
mov
sbb
pushf
mov
mov
lahf
stos
gs
fildll
pop
sub
lock
adc
mov
push
add
mov
mov
addl
xlat
rcrb
dec
mov
or
ja
mov
xor
jo
and
imul
leave
out
add
sarl
mov
aad
sahf
ljmp
and
cli
add
adc
insl
int3
lcall
mov
dec
cs
mov
into
add
sbb
cmp
movsl
les
xor
sti
rcl
xchg
insb
pop
inc
fs
in
cmpsb
jg
arpl
icebp
pop
std
scas
adc
cmp
inc
push
imul
stos
outsb
jno,pn
push
out
mov
cltd
icebp
push
sbb
xchg
vcvtdq2pd
and
mov
in
mov
repz
repz
inc
pop
cmpsb
push
fwait
cld
fisttps
xchg
fstps
jle
inc
sbb
ret
mov
and
and
shlb
sarl
dec
mov
sahf
mov
rcll
rcrb
xlat
clc
adc
mov
clc
sub
mov
ja
out
test
xlat
dec
scas
pop
push
pushf
mov
pop
and
xor
sub
xchg
mov
adcl
sbb
sub
mov
addr16
vpaddsw
fstps
fbstp
inc
outsl
movsb
arpl
lods
cmpsl
mov
xor
lahf
rclb
push
mov
xchg
xor
test
add
xor
leave
out
icebp
or
mov
mov
into
cmp
inc
movsb
cs
stos
push
jnp
pop
dec
cmp
sub
push
jmp
loope
sbb
inc
cltd
sbb
test
sahf
stos
std
mov
xor
jmp
pop
xchg
or
movsb
dec
adc
lcall
cmp
adcb
jae
int
fsubrs
adc
imul
mov
push
leave
call
lds
xor
push
outsl
out
cmp
rcl
xlat
xor
ljmp
mov
add
add
sub
inc
shlb
and
and
stos
inc
popa
sti
jg
push
xchg
inc
mov
mov
or
sbb
cmc
sbb
outsl
imul
xchg
jnp
imul
rolb
or
ja
das
std
loope
gs
dec
mov
fcmovb
mov
fldt
mov
mov
mov
fs
pop
mull
fs
popf
sbb
int
pop
push
push
add
test
outsl
cmp
shlb
fcmovnb
lahf
mov
fcomp
cwtl
lods
loope
sub
cmc
jns
xchg
sub
cmp
pop
mov
daa
mov
notb
pop
adc
and
stc
in
xchg
sbb
and
lods
inc
mov
xchg
jp
adc
lea
pushf
pop
mov
popa
sahf
aas
stos
cwtl
psllw
pop
xchg
mov
sbb
out
jae
add
jecxz
fldcw
sub
in
jmp
lods
push
sti
mov
rcr
lcall
or
flds
pop
add
add
aaa
arpl
mov
or
sarl
nop
xchg
xchg
outsl
std
add
jb
sbb
mov
cmc
add
fxch
jle
jge
inc
stc
fs
cmp
xchg
or
outsl
cli
mov
les
lret
rcrb
mov
adc
jne
ret
pop
sub
mov
test
cli
push
dec
push
or
add
mov
sub
sbb
xchg
mov
insb
fistl
ja
pushf
ja
subb
in
icebp
cmp
mov
arpl
sarb
add
pop
nop
aaa
cmc
dec
push
loope
out
rcrl
dec
lods
mov
jae
pop
jno
push
cmp
or
sbb
mov
movsl
pop
jno
adc
or
ja
sub
pop
pop
test
scas
es
mov
sub
int
loope
mov
mov
jle
cmp
cwtl
push
movsb
jo
fists
loop
pop
stos
insb
xchg
clc
lods
fstp
hlt
daa
ja
sbb
dec
xchg
sahf
sub
sub
mov
and
cmp
mov
or
push
clc
mov
ret
lods
cmp
xchg
enter
xor
sbb
jae
nop
stos
mov
mov
in
mov
pop
xor
push
lds
in
push
cmpsl
mov
pop
je
pushf
icebp
sub
pop
out
outsl
lock
cmpsl
into
icebp
in
push
movb
jae
scas
lods
mov
ficoms
rorl
ds
pop
xchg
in
jne
xor
mov
lock
mov
fcmovnu
xchg
dec
sar
mov
adc
dec
add
adc
in
cmpsl
sub
pop
xlat
lahf
frstor
jbe
aad
mov
hlt
sub
clc
int3
je
ret
in
dec
leave
push
mov
jmp
add
cmc
aas
cmpsl
pop
cmp
or
adc
sbb
mov
loop
xchg
pop
dec
pop
outsb
adc
imul
pop
pop
into
dec
mov
dec
ficomps
push
or
int
hlt
and
gs
daa
testl
test
mov
xchg
ja
mov
sub
daa
lock
mov
jb
je
repnz
mov
aaa
lea
mov
jge
add
in
in
jb
adc
and
arpl
movsb
cwtl
cmpsl
ss
xchg
jge
dec
into
cmovnp
inc
clc
insl
cmp
and
imul
and
lock
je
fisttpl
popa
fstpl
pop
jecxz
mov
push
mov
jmp
lock
stc
movsb
les
xlat
push
arpl
stc
pop
xor
cwtl
xor
sbb
into
fs
sub
repz
push
cmp
insl
imul
movsl
ss
ret
add
mov
mov
cmp
sub
pop
add
jp
cli
fildl
push
fists
jle
or
pop
xchg
js
mov
dec
pop
ffree
scas
test
test
mov
inc
xor
jno
fsubrl
sbb
jnp
cltd
and
mov
cltd
dec
cmp
push
stos
and
ljmp
popa
fs
jge
cs
and
aad
xor
stos
shrl
fstl
lods
sbb
jne
push
aas
xchg
hlt
inc
insb
add
adc
sbb
xchg
jbe
ja
dec
in
or
out
shlb
outsl
andl
lods
lds
das
fcomi
add
sub
cmp
inc
arpl
rorl
test
jae
stos
nop
imul
xor
xrelease
cmp
fwait
sub
push
mov
mov
xchg
test
and
fs
jb
add
xor
dec
ret
xor
test
testl
adc
fwait
sub
mov
jle
bnd
and
andl
cmovg
js
jl
int
xor
dec
lock
or
mov
in
dec
mov
jno
es
test
and
addl
dec
test
arpl
sbb
ja
sub
test
je
outsl
jno
or
call
test
inc
leave
pop
lds
movsl
mov
cwtl
push
dec
js
jno
imul
js
mov
into
and
jns
sub
cli
sbb
dec
mov
add
xbegin
mov
cld
test
and
loope
mov
insl
inc
push
sub
adc
movsb
jo
jae
mov
sbb
push
adc
cmc
mov
shlb
movsl
mov
stos
mov
adc
or
dec
push
imul
mov
mov
mov
data16
dec
mov
les
rolb
dec
rol
or
es
shl
mov
add
mov
cld
clc
cmp
push
imul
outsl
pop
icebp
or
mov
sbb
cmp
xchg
fdivrl
loope
jg
add
xchg
data16
nop
mov
nop
dec
mov
sbb
ja
mov
lds
add
push
insb
andb
or
fldl
in
jns
arpl
cmc
repnz
or
adc
stc
sub
sub
push
push
dec
data16
lea
pop
jbe
arpl
dec
push
fcompl
nop
mov
ja
notb
hlt
scas
mov
pop
pop
sub
push
push
aas
mov
mov
or
jno
fnstsw
jl
sbb
cmp
imul
loopne
imul
repz
insb
aam
and
or
cltd
loope
xor
mov
inc
int3
test
iret
mov
mov
pop
and
adc
pop
xlat
pop
out
pop
hlt
add
mov
and
imul
push
icebp
pop
movsb
inc
mov
iret
or
icebp
xorb
cmp
and
insl
xor
push
scas
pop
das
and
mov
lods
vorps
cmp
mov
fldln2
imul
ret
xchg
insb
and
rorl
or
out
das
cmp
mov
pop
jg
mov
pop
xchg
orb
push
lret
shlb
div
add
rolb
and
outsl
jp
or
enter
mov
ficompl
and
cmp
repz
lea
mov
repnz
cwtl
insb
jne
out
cmpb
fdivr
jne
inc
insl
cmp
xor
bound
xor
adc
pop
add
mov
sub
outsb
jp
sub
imul
mov
fcomps
and
mov
mov
into
int3
or
push
mov
dec
xchg
mov
ret
sub
decl
mov
mov
pop
lea
jle
xchg
sarl
or
addr16
xchg
shrb
mov
push
test
shrb
pop
repnz
test
and
in
lcall
jp
es
add
sbb
clc
or
daa
arpl
and
adc
cwtl
xchg
test
push
xor
or
in
lret
dec
mov
pushf
dec
dec
mov
repz
out
mov
mull
out
arpl
daa
iret
out
jo
js
out
fdivrl
rcr
cmp
sub
or
push
insb
dec
push
aaa
sub
jle
jo
sub
icebp
int3
cwtl
mov
stc
cli
mov
mov
xor
movsl
fidivrs
mov
pop
repz
mov
push
add
bound
shl
aaa
je
mov
loopne
push
lcall
dec
popa
jg
lds
and
or
lock
cmp
sub
inc
dec
and
sbb
stos
faddl
popa
shl
sbb
test
fisubrs
scas
daa
jae
les
xor
cmc
adc
sub
mov
jae
in
aam
pop
dec
rclb
cmp
cs
jmp
mov
inc
mov
lret
and
jg
aam
sub
fwait
inc
dec
xlat
shrl
je
jo
xchg
sbb
mov
psllw
pop
jecxz
inc
lret
or
pop
jae
xor
mov
test
out
loop
jl
lea
lock
dec
add
mov
popf
ss
lcall
mov
cli
inc
cmp
cli
aas
ds
fsubp
fwait
arpl
jb
push
pop
movsl
int
push
adc
push
sbb
adc
rcll
in
shlb
fbstp
les
cmp
fucomi
movb
mov
hlt
inc
and
sbb
jecxz
adc
scas
test
or
inc
add
test
ljmp
pusha
pop
mov
sub
xchg
dec
mov
and
std
scas
fistpl
xor
cmp
dec
outsb
push
push
cltd
test
out
and
in
dec
push
test
jge
je
data16
jae
jo
insl
push
jno
xlat
pop
in
ror
in
xchg
jae
mov
in
jecxz
out
add
mov
movsb
jl
and
pop
in
dec
mov
repz
gs
cmp
mov
movsb
ret
jecxz
rcr
ret
ja
add
pop
insl
sbb
jno
sub
ljmp
les
dec
push
sbb
xor
leave
fiaddl
jmp
in
popf
cmp
mov
and
cld
or
les
cmp
mov
outsl
cli
sub
and
mul
hlt
shrb
mul
push
fs
mov
insb
add
xor
aam
xor
mov
sbb
iret
jo
mov
mov
adc
dec
mov
add
jle
pop
pop
pop
das
clc
dec
push
xchg
cmc
xor
lea
les
push
mov
int
sbb
cli
cld
mov
dec
fisttpl
cmc
dec
sbb
dec
cmp
xor
mov
mov
sbb
stos
sub
arpl
sub
fst
sbb
or
popa
xor
mov
mov
pop
mov
pop
idivl
push
fwait
outsl
or
adc
pop
add
stos
aas
jno
rorb
pop
xor
in
mov
stos
mov
push
int
mov
ss
jae
imul
dec
adc
movsb
mov
sbb
std
push
add
bound
mov
mov
out
out
add
mov
movsb
xchg
sarb
popl
pusha
std
fcoms
mov
mov
and
inc
icebp
cli
cmp
jbe
iret
dec
adc
xchg
and
push
push
cmc
ret
insb
jmp
mov
in
adc
fxsave
mov
adc
sub
and
push
ror
add
push
fisubrl
add
stc
sub
xor
cmp
stc
lcall
cltd
pop
lcall
stos
jg
test
orb
push
xchg
dec
es
cli
add
adc
ret
fwait
lods
bound
aaa
adc
fstps
inc
gs
addr16
mov
pop
push
jns
mov
pop
push
or
xchg
subl
int3
lds
xchg
stc
mov
les
inc
aam
add
or
lds
je
out
loopne
jl
imul
push
dec
or
arpl
jbe
cmp
push
xchg
dec
sbb
fstpt
sub
or
pop
popa
mov
stos
sbb
adc
aaa
in
push
jne
xor
sub
lcall
push
fsubrl
dec
sub
les
into
jg
aaa
inc
popa
sub
fwait
pop
dec
roll
sbb
out
lret
add
xchg
aaa
inc
es
push
adc
mov
jmp
imul
mov
mov
cltd
or
sbb
mov
fs
jge
mov
cld
in
cmp
pop
push
lret
push
loope
mov
jl
mov
hlt
dec
xchg
aas
add
cmp
movsl
mov
je
out
inc
cmp
mov
mov
pop
pop
sti
enter
adc
cmp
dec
out
mov
imulb
mov
add
jno
sahf
mov
pushf
inc
rep
fimull
imul
cmp
das
inc
pop
cs
adc
jecxz
sub
leave
imul
pop
dec
sbb
lods
std
jl
xchg
mov
xor
xchg
aam
loopne
fsts
divb
mov
mov
test
sbb
xchg
test
sub
xchg
das
jno
lods
push
mov
aas
sub
mov
je
imul
push
das
pop
int
popf
roll
icebp
push
xor
imul
sub
fistps
or
cmpb
pop
mov
incb
cmc
insl
cmc
mov
pop
xor
movsb
xchg
rorb
jmp
insb
movsb
adc
stos
enter
dec
jmp
jmp
stos
dec
adc
sti
movsl
dec
push
add
adc
xlat
imul
dec
dec
aas
mov
mov
sub
int
push
pop
inc
mov
push
inc
mov
lahf
je
out
dec
lret
add
dec
pop
push
xor
mov
scas
dec
push
sbb
popa
mov
loope
mul
fisubrs
cwtl
jno
test
shlb
dec
mov
add
divl
gs
pop
sbb
std
sbb
hlt
xchg
or
and
pop
cs
call
insb
mov
push
push
addl
jns
xchg
or
test
outsl
mov
or
xorl
xor
mov
push
pop
sub
inc
mov
mov
jecxz
lods
jb
lods
pop
push
test
jbe
mov
inc
pop
pop
mov
pop
ret
stos
lret
movsb
lret
loop
jmp
jp
jmp
dec
jmp
mov
and
pop
testb
push
fnstcw
js
sbb
mov
inc
push
imul
sub
aam
inc
or
dec
lcall
sahf
negl
mov
pop
jbe
xchg
xchg
jnp
mov
pushf
sub
inc
cmp
popf
mov
jnp
cmpsl
js
and
pop
arpl
cmp
jp
adc
push
cmp
fbld
mov
imul
es
add
andl
fmul
leave
jb
mov
adc
mov
loopne
jb
loopne
addr16
pop
mov
stc
sbb
scas
jno
add
lea
lahf
adc
dec
add
lods
mov
dec
and
enter
mov
pushf
sarl
pop
or
in
fs
cs
popf
inc
mov
and
nop
push
sub
sarb
or
out
sahf
fidivl
test
push
addr16
cmpsl
das
push
push
inc
pop
dec
in
add
mov
adc
mov
sbb
adc
sbb
std
cs
sub
fstpl
testl
fiaddl
rcll
and
inc
adc
insl
insb
pushf
fstpt
cmp
imul
test
xor
mov
jmp
mov
iret
sti
outsl
movsb
lahf
or
insb
push
sbb
sbb
xchg
mov
negb
adc
pop
sub
xchg
push
jmp
sbb
hlt
std
fmull
push
aad
inc
aaa
mov
int
add
iret
ret
pop
mov
into
repnz
shlb
jno
pusha
cmc
jmp
fstpt
clc
push
inc
das
push
or
test
mov
ss
or
icebp
rcl
xchg
in
jnp
in
lret
mov
inc
mov
or
paddq
mov
divl
cmp
jo
call
aas
leave
xor
sub
add
out
int3
mov
ret
fcmove
push
and
pop
and
adc
inc
jl
mov
clc
or
stos
adc
jmp
sub
ficoml
loopne
test
lret
push
pusha
test
and
jg
pop
stos
adc
mov
and
aaa
fs
cmp
ret
test
test
clc
cmp
into
xchg
imul
push
mov
shll
cmpsl
nop
mov
sbb
mov
sub
ja
inc
inc
stc
add
call
and
ficoml
idiv
add
outsl
push
adc
cmp
jecxz
xchg
insb
popf
cmp
lock
mov
data16
loope
mov
pushf
int3
ret
mov
mov
adc
shrb
shrb
jp
test
inc
popf
jbe
movsl
aad
and
popf
aad
push
jmp
andl
loopne
mov
or
pop
nop
ret
push
lock
xchg
or
insb
mov
mov
mov
jp
adc
add
add
add
xor
ror
xor
loope
xchg
or
scas
mov
dec
out
push
es
loope
and
mov
inc
push
cli
insb
imul
gs
lds
gs
mov
mov
inc
icebp
lock
faddl
fdivrp
dec
shll
mov
mov
call
xchg
adc
call
push
in
int3
out
sbb
push
xor
or
mov
and
lock
sub
cmp
mov
mov
jle
push
bound
sbb
and
mov
dec
outsl
jne
sahf
mov
enter
pop
or
jno
mov
aaa
jb
fcmove
sahf
mov
das
lods
scas
push
daa
jbe
sub
pop
xchg
jns
inc
or
sbb
in
add
jb
xlat
mov
in
in
mov
in
or
mov
sbb
mov
popa
xchg
insb
adc
shrl
push
inc
and
xor
push
xchg
movsl
lcall
jecxz
add
add
addr16
dec
shrl
fsubl
sub
ja
sbb
loopne
loope
lods
clc
aam
int3
insb
stos
cmp
mov
mov
xorl
inc
push
insl
pop
clc
bound
add
jge
pop
fstpt
adc
mov
mov
inc
or
add
arpl
xchg
xchg
add
xchg
std
add
cmpl
mov
out
xor
mov
or
xchg
and
inc
outsl
xchg
sub
xchg
jg
arpl
xor
ret
or
jns
jae
repz
cmp
push
aas
int
sbb
xchg
lahf
lods
test
pop
scas
inc
pushf
std
xchg
adcb
fdivrs
push
cwtl
push
sub
mov
cmove
jecxz
xchg
out
pop
adc
mov
sub
or
mov
cmp
icebp
leave
xchg
xlat
push
pop
ja
enter
in
movsl
out
mov
pop
aad
mov
mov
test
sbb
lcall
sbb
cmp
scas
jo
out
cltd
insl
sahf
mov
push
push
fsts
push
icebp
dec
sub
test
pushf
push
lods
inc
mov
xchg
gs
inc
fs
gs
sbb
jno
test
pop
mov
pop
dec
dec
add
out
mov
xor
push
adc
ja
out
in
mov
and
and
dec
or
loope
xchg
arpl
test
mov
movsl
xchg
mov
rol
aad
jne
sub
in
jo
push
enter
add
push
jae
in
mov
add
out
sbb
pop
sti
sub
mov
cld
cmp
pusha
jmp
adc
in
aam
mov
push
pop
and
sub
mov
dec
sbb
pop
jmp
jae
jmp
ret
ja
loopne
repz
sbb
dec
mov
les
ret
or
adc
les
adc
mov
mov
imul
adc
clc
out
mov
sbb
pop
mov
pop
inc
dec
call
jb
push
in
into
sbb
sbb
jo
sbb
pop
fprem
or
not
cmp
jns
sub
mov
cld
icebp
jbe
insb
ret
mov
push
xor
pusha
fstps
mov
jne
notl
push
sbb
add
cwtl
and
lcall
pop
push
cs
mov
and
ficoml
addr16
xor
es
and
jge
ret
loopne
sub
ror
push
pop
dec
dec
add
mov
test
insb
xchg
xlat
add
call
shl
aaa
and
mov
jno
inc
mov
push
pushf
insl
pop
movsl
push
fs
jl
inc
jg
mov
jns
inc
dec
jl
sub
pop
loope
mov
sub
shrl
jmp
push
push
cmp
outsl
cmp
shl
add
push
cld
jns
leave
loop
mov
and
ret
xor
dec
push
popf
rorb
addr16
jl
out
jl
lcall
push
inc
xchg
mov
sbbb
pop
push
fmull
mov
lods
jl
aaa
cli
sti
ret
aam
cmp
adc
nop
shl
leave
cmp
popf
sahf
and
insb
inc
scas
cli
lahf
xor
into
jp
je
xchg
mov
or
imul
stc
cs
divps
pop
jmp
mov
inc
mov
rorl
dec
adcl
in
xor
popa
lret
or
fbld
es
imul
outsl
xchg
fistpl
leave
pop
dec
negl
popf
xchg
rorb
mov
loopne
ret
frstor
aad
pop
mov
and
ljmp
ret
xor
stc
cmp
ja
dec
inc
divl
or
scas
leave
pop
inc
inc
les
or
sti
dec
test
pop
ja
push
pusha
stos
inc
loopne
lret
cmp
jge
pushf
in
lds
push
mov
sbb
pop
ss
dec
data16
fiadds
dec
lcall
add
adc
or
dec
into
push
jne
ds
imul
pushf
test
loop
shll
hlt
jno
lods
push
lods
js
mov
push
in
cmp
xchg
mull
cli
insb
sub
insb
inc
and
mov
gs
into
xor
out
pop
xor
sbb
std
add
movsl
add
cmp
mov
icebp
inc
fisubrs
test
loope
mov
pcmpgtd
scas
mov
fwait
mov
lcall
dec
in
insl
jl
inc
jae
push
xlat
lods
jns
imul
pop
adc
sbb
jno
mov
push
add
add
cmp
out
xchg
loopne
and
mov
repz
stc
outsl
pusha
xorb
jbe
cs
adc
sarb
push
rorb
pop
pop
xchg
sti
jbe
icebp
leave
test
loop
clc
xchg
dec
pop
and
xor
pop
add
cmp
scas
das
out
aad
insb
ror
rcl
sbb
xlat
in
cmp
jg
mov
enter
subl
sbb
hlt
sbb
lahf
dec
jmp
lcall
or
mov
bound
out
and
nop
shll
adc
pop
aas
cmc
mov
adc
push
xlat
cmp
scas
mov
lret
fimuls
andb
inc
xor
mov
inc
fucom
xchg
add
test
cli
fwait
imul
cli
sub
xchg
sub
jae
dec
cmp
push
jnp
add
or
mov
mov
or
fidivl
xchg
pop
dec
jge
ja
stc
inc
mov
iret
sbb
out
jmp
sbb
sub
pop
mov
cwtl
imul
fcmovb
test
orb
xchg
mov
sbb
jle
push
sysenter
mov
push
adc
in
xor
std
pop
sarl
inc
test
sti
push
fiaddl
cmpb
out
xor
jl
cmp
stc
mov
ss
push
sub
mov
jne
jle
mov
popf
in
mov
and
daa
mov
lock
sub
cmc
nop
jae
dec
jecxz
pop
jge
mov
xchg
aas
sbb
into
or
add
loope
add
bound
sbb
aaa
int3
mov
out
mov
push
loop
and
push
loopne
dec
mov
push
fsubr
repz
ljmp
pop
dec
aaa
xor
xor
and
and
sbb
jae
add
testl
and
test
cld
xchg
insb
pusha
dec
lret
rcll
call
adc
cwtl
jne
inc
fidivrl
pop
adc
into
jb
push
sbb
push
pop
pop
push
mov
cmc
xor
sbb
cmp
sbb
pusha
icebp
sahf
pop
mov
scas
adc
or
cld
ljmp
inc
fs
shl
xor
mov
repz
and
xor
lods
pop
shlb
mov
dec
mov
push
mov
or
test
gs
popf
test
inc
add
ljmp
scas
outsb
cltd
loop
push
into
test
outsl
add
push
mov
push
jmp
rolb
push
lret
inc
rclb
inc
add
inc
fdivl
jle
pop
adc
and
es
loope
bnd
xor
adc
loop
insl
mov
xlat
push
nop
enter
pop
les
push
mov
rcl
dec
sub
call
lahf
lcall
cli
std
jmp
lods
xor
jle
xor
pop
mov
jbe
cmp
xchg
dec
out
orl
sarb
mov
out
aad
push
inc
sbb
jo
bound
jo
ljmp
jno
and
xchg
xchg
dec
mov
fidivs
add
daa
into
jge
mov
jl
push
aad
mov
sahf
das
push
add
cmpsl
cmc
stc
in
aam
xchg
cmp
adc
lock
sbb
data16
lcall
xor
js
add
mov
fists
aam
dec
imul
or
lods
and
das
sbb
in
add
sub
pop
out
lret
pop
cmpsb
cwtl
mov
cmp
adc
cmpsb
fwait
push
dec
xchg
adc
mov
ss
sub
inc
fwait
and
ds
jae
fstpl
inc
lds
mov
xor
pop
jmp
or
dec
pop
adc
fidivrs
ljmp
dec
add
scas
cmp
mov
add
outsb
fbld
aam
dec
jmp
xchg
sbb
jmp
inc
mov
cltd
inc
jmp
cmpsb
scas
jl
mov
je
int3
out
mov
sbb
sbb
mov
pushf
xchg
sbb
cmp
adc
sub
aam
mov
add
xchg
mov
fcomps
sbb
test
roll
push
xchg
pop
lock
aas
addr16
int3
push
in
inc
jae
ja
pusha
outsb
daa
daa
mov
jle
repnz
and
repnz
loopne
pop
loope
mov
adc
mov
pop
shl
sub
cltd
ss
lods
lods
xchg
sub
stos
xchg
sub
jg
mov
pop
xchg
negl
leave
push
movsb
fwait
lret
dec
test
xchg
and
stos
push
fsubl
or
jbe
aas
mov
pop
xchg
sub
and
les
cld
out
ret
mov
icebp
movsb
bound
jmp
mov
sub
test
adc
mov
fcmovne
pop
jl
push
add
aam
ror
xor
cmpsl
pop
push
in
mov
sub
jb
jno
fadds
cmpsl
int3
insb
les
xor
sub
aas
inc
mov
movsl
or
mov
xlat
mov
nop
jnp
jl
xchg
add
sbb
aas
out
pop
mov
stos
addb
cltd
out
popa
outsb
xor
sub
test
inc
or
shl
shr
dec
adc
in
mov
jne
dec
stc
insb
movsb
xchg
or
sub
inc
push
mov
pop
inc
jmp
cli
nopl
imul
xorb
push
gs
or
inc
adc
adcb
cli
ja
aaa
or
int
cs
mov
aas
sti
sbb
out
xorb
std
mov
mov
popa
jbe
pop
mov
lret
out
scas
mov
aam
lahf
mov
pop
mov
adc
out
adc
xchg
xchg
push
sbb
cmc
rolb
or
arpl
out
mov
lods
fstl
ss
aaa
xchg
out
cs
jg
loop
into
add
repz
pop
mov
cmp
add
pop
sub
int3
sub
mov
das
data16
mov
fldenv
stos
fcoms
sahf
outsb
dec
fs
cmp
stos
ss
xlat
cmp
hlt
mov
sbb
iret
adc
leave
test
cld
ds
or
jmp
call
dec
mov
sbb
jle
xor
jb
pushf
lods
out
pop
scas
lcall
inc
stos
loope
inc
rcrb
sub
aaa
lahf
push
adc
enter
ja
cltd
add
add
dec
stos
mov
sub
std
sub
jnp
stos
mov
mov
push
inc
sub
jge
ret
cmp
ret
inc
pop
xchg
std
gs
push
push
pop
inc
rcrb
inc
addr16
xchg
mov
xor
aam
popf
push
push
adc
mov
les
faddl
fdivrs
stos
push
mov
enter
mov
test
inc
xchg
mov
pushf
dec
mov
ret
pop
cmp
push
and
mul
cmp
adc
sub
aam
push
pop
adc
sbb
and
push
jecxz
mov
ljmp
stc
or
cmp
sub
mov
pop
xchg
dec
xchg
xor
add
jns
subl
ljmp
lds
cmp
aad
loope
lock
mov
dec
in
orl
adc
lahf
pop
push
pop
cld
mov
fildl
mov
xlat
mov
mov
in
push
out
pop
jne
cmc
xor
sbb
nop
jb
xchg
adc
xchg
lods
and
add
testl
dec
push
xor
mov
mov
mov
outsl
movsl
lods
stos
stos
sbb
xor
into
pop
jg
push
push
pop
sub
or
pop
fstl
inc
les
cs
dec
addl
mov
js
push
leave
mov
inc
sbb
in
cmp
adc
mov
inc
test
movsb
jg
and
dec
jl
sbb
fistpl
shll
dec
pusha
jl
push
orl
jecxz
int
inc
int
aas
pop
arpl
cmp
mov
or
bound
rclb
mov
in
sti
js
dec
inc
movsb
mov
push
xchg
push
mov
add
cmpsl
and
add
nop
inc
inc
inc
fisttpll
loope
jg
adc
or
xor
xor
mov
adc
mov
mov
jno
add
or
mov
xchg
push
and
cltd
cmp
xor
ret
cmpsl
stc
add
sub
loope
sbb
jnp
pop
pop
lret
imulb
pusha
push
scas
out
sahf
enter
sbb
lcall
lods
push
insb
jae
jl
pop
insl
nop
bound
test
out
xor
cmc
lods
iret
lods
inc
xchg
out
out
call
sbb
xchg
and
inc
mov
and
mov
xchg
or
adc
arpl
loope
rorb
pusha
mov
dec
mov
ret
lods
mov
shlb
sbb
mov
mov
add
insb
push
inc
push
xchg
pop
lea
dec
fisubl
aad
lahf
int
hlt
push
jbe
test
int
mov
ficomps
loope
stos
in
mov
ret
cmp
lahf
mov
stc
leave
movsb
repz
std
test
dec
adc
popa
mov
inc
mov
mov
and
jg
xchg
pushf
pop
and
addb
sbb
mov
cmp
in
mov
sti
push
mov
call
movsl
mov
fwait
inc
ficoms
pop
insl
jl
inc
xchg
lods
and
sbb
inc
into
out
fcmovu
jl
jno
mov
aaa
outsb
icebp
lahf
push
dec
cli
ja
loop,pt
xchg
lahf
pop
stc
inc
add
jge
xchg
adc
fcompl
mov
xchg
dec
or
xor
jg
js
sub
push
cmpb
scas
fldt
jne
cmp
stos
mov
sbb
and
xorb
mov
mov
daa
push
xchg
ret
pop
push
mov
ret
dec
aam
sbb
cmp
inc
cwtl
lret
pop
mov
insl
cmpsb
nop
mov
inc
mov
das
mov
test
ret
xchg
into
shlb
icebp
add
inc
insl
add
xchg
xchg
mov
jp
daa
lods
xlat
push
movb
adc
hlt
sti
and
cld
dec
or
popf
insb
sbb
cmp
mov
repz
mov
pop
stc
jno
mov
jb,pn
pop
or
mov
mulb
arpl
pop
sbb
pushf
push
or
add
pop
xor
add
in
push
dec
or
pop
fiaddl
mov
inc
xchg
mov
mov
std
sub
addr16
cmp
xchg
or
adc
xor
mov
clc
jp
or
fisubrl
push
std
pop
push
mov
sub
movsl
sbb
js
popf
mov
push
push
daa
cmpsl
imul
jmp
xbegin
adc
lods
out
xchg
mov
xchg
jmp
cwtl
adc
xchg
sub
movsl
gs
inc
int3
jb
dec
add
xor
adc
cltd
jnp
jle
cld
xchg
sub
dec
push
sbb
mov
dec
jge
dec
shrl
std
popa
imul
fucomi
dec
imul
lret
repz
movsl
jo
mov
and
cmp
fcomps
push
push
arpl
aad
shl
pop
popf
mov
mov
sbb
cmp
cmp
cmc
mov
aaa
fcomps
and
js
call
mov
fsubl
xlat
jo
sub
lods
imul
add
sub
ja
dec
push
mov
lea
sub
js
aaa
xor
imul
aam
jecxz
aam
xchg
dec
nop
mov
stc
fmuls
popa
mov
addr16
int
test
stc
push
add
aad
pop
ljmp
mov
jle
ret
jecxz
xorl
xchg
stc
adc
cmp
pop
mov
sbb
imul
jae
mov
jb
outsl
pop
sbbl
arpl
dec
jl
loope
and
inc
mov
insb
dec
or
inc
pop
insl
bound
nop
incb
mov
jmp
aaa
add
jmp
fnsave
cs
inc
dec
daa
jecxz
and
leave
fwait
arpl
imul
inc
insl
pusha
imul
popl
jnp
test
pop
adc
jae
cmpl
movsb
xchg
push
scas
mov
sub
pop
xor
jp
mov
sbb
movsb
jge
mov
test
add
int3
cmp
dec
xor
mov
mov
mov
mov
sahf
adc
jno
inc
shrl
aaa
pop
push
imul
adc
and
out
lcall
or
push
iret
lahf
jae
xor
cli
jmp
jl
fnstenv
dec
mov
cmpsb
stc
xor
cmpsl
imul
xchg
mov
push
addr16
sbb
inc
mov
push
lock
mov
jne
fisubrs
jle
shrb
xor
pop
test
daa
push
pop
ljmp
mov
cmp
scas
dec
enter
cli
and
mov
sarl
gs
dec
mov
sbb
mov
sbb
test
xor
fstpt
and
xchg
sbb
into
sub
dec
scas
cwtl
or
dec
mov
or
hlt
push
fdivrl
and
cmpsb
sub
mov
xchg
into
test
jae
repnz
aam
fnstsw
rcll
adc
scas
sbb
aas
aad
pushf
out
add
adc
cmc
cmp
clc
out
sti
flds
roll
test
push
jg
negl
faddl
adcb
jno
jle
mov
sbb
dec
mov
jle
xchg
imul
and
mov
jno
out
mov
gs
mov
rorl
adc
mov
andb
mov
add
lock
ficoml
inc
jg
cmpsl
adc
fadds
divb
bound
sbb
orl
cmp
or
testb
arpl
push
pop
xchg
mov
lds
test
enter
mov
sub
mov
pushf
aam
call
mov
push
jecxz
icebp
in
sbb
out
dec
add
lret
sub
imul
mov
sub
mov
cmp
mov
rcrb
pop
fbstp
mov
out
mov
loope
cmp
dec
adc
adc
daa
sbb
mov
xor
adc
sbb
lcall
test
outsl
lods
add
sahf
or
jge
sbb
idiv
adc
dec
nop
insl
dec
xor
add
xchg
fildl
pop
mov
sbb
loopne
pop
mov
sti
xor
ja
pop
sub
pop
es
sbbl
into
fiaddl
pop
sub
or
imul
dec
push
add
call
add
mov
jecxz
shrl
int3
push
out
in
fldl
jmp
scas
popa
iret
pusha
cmp
int
sbb
mov
or
stos
ljmp
punpckhbw
pop
imul
ss
mov
jbe
leave
pop
faddl
fdivl
xor
aas
sbb
lahf
into
lret
lret
add
jmp
fwait
dec
jmp
mov
pop
push
lds
out
loope
ret
adc
out
adc
loopne
clc
xor
inc
lds
dec
imul
add
mov
shlb
iret
daa
orps
or
add
pop
pushf
mov
fs
push
loopne
cmpsl
push
pop
ret
shlb
cmc
stos
subl
xchg
push
nop
aam
pop
mov
cmpsl
sub
sub
xchg
push
mov
out
or
repnz
fcoml
lods
shlb
int3
jecxz
imul
sbb
cmp
mov
xor
add
jae
push
add
popf
mov
sub
js
mov
es
mov
dec
jns
mov
test
xchg
test
push
cs
ret
push
cmp
test
adc
enter
movsb
mov
mov
jns
int3
popf
cmp
push
jmp
cmpsl
cmp
and
fdiv
enter
jae
mov
std
lea
cwtl
ss
in
into
xchg
les
cmp
into
jns
ljmp
cmp
ss
xor
bound
pop
test
pop
sub
mov
into
in
rcll
jmp
mov
push
jae
sub
loopne
or
xor
gs
notb
mov
pop
ret
clc
add
out
dec
xchg
sub
lcall
addl
adc
jl
jo
xor
or
mov
adc
mov
sub
xchg
mov
repz
fldl
inc
adc
jl
xor
sub
fstpl
push
out
les
popa
jae
jmp
or
sub
lds
jmp
out
popa
inc
insb
jnp
push
cmp
int
popf
mov
mov
popa
cmc
mov
mov
fwait
xchg
xor
loopne
fists
icebp
out
sub
xor
imul
mov
push
addr16
pop
pop
push
je
ret
mov
jl
pop
cld
mov
dec
pop
js
inc
mov
mov
sbb
cld
add
mov
popa
push
orb
pop
sbb
cmpb
inc
ljmp
add
adc
or
mov
outsb
clc
jecxz
es
jo
aas
repz
and
dec
adc
mov
push
mov
jg
pop
push
cli
adc
out
arpl
mov
push
sbb
psrlq
iret
cltd
inc
test
leave
dec
loope
and
enter
loop
outsb
or
cs
push
pop
loopne
aaa
loope
das
push
jmp
mov
adc
push
jb
ret
shll
repz
mov
dec
out
nop
fstl
mov
jmp
jge
mov
and
and
adc
adc
cmp
mov
loope
lea
fistps
inc
loop
inc
xlat
outsb
sti
incb
mov
repz
cmp
pop
rorl
in
push
popf
mov
scas
subb
inc
mov
push
fiadds
jo
jb
ljmp
lea
stos
xlat
test
sub
sub
inc
sbb
aas
mov
pop
ret
idivb
adc
out
add
and
mov
mov
fucomp
mov
mov
dec
dec
aam
or
jmp
jp
mov
mov
mov
movsb
clc
es
cmp
inc
mov
jno
mov
mov
mov
mov
inc
dec
in
fwait
popf
xor
mov
lahf
push
push
into
insl
ficomps
xlat
add
out
or
inc
int3
xchg
call
or
das
jae
popf
mov
loopne
inc
xor
aaa
inc
xor
and
lcall
into
or
pop
pop
mov
movsl
popa
pop
cmc
add
push
cli
dec
xlat
sbb
imul
xor
in
pop
mov
or
std
push
mov
jp
mov
test
addr16
fcmovnu
das
and
mov
iret
mov
notl
inc
je
push
test
adc
adc
xchg
cmp
stos
sub
mov
movsl
add
movsb
mov
lods
xor
fs
aam
and
ja
push
or
sbb
aas
push
xchg
in
xchg
mov
dec
jns
push
fdivrs
cwtl
test
lea
or
inc
adc
out
or
and
pusha
jge
std
push
sub
add
push
sbb
dec
insb
mov
mov
push
or
cmp
jbe
fs
add
add
add
lret
lret
mov
ds
xchg
fstpl
imul
scas
or
cmp
adc
or
jae
jge
inc
fistpll
out
subb
into
lods
cld
or
decb
push
jmp
idivb
aad
dec
adc
inc
inc
pushl
xchg
ret
subb
mov
xchg
in
rclb
std
lcall
idiv
aas
mov
push
or
sbb
pop
pop
mov
nop
stc
jmp
fdivrl
cld
mov
mov
int3
sar
xchg
insl
in
adc
inc
mov
fs
int3
push
dec
mov
mov
or
pop
push
push
ss
inc
mov
push
jnp
shll
mull
jnp
mov
add
gs
pop
push
arpl
dec
fadds
cmp
push
push
aaa
cmpsb
mov
push
es
outsl
xorl
pop
insb
test
cli
or
or
and
jl
outsl
or
sti
and
xchg
add
dec
stos
mov
daa
dec
push
aam
push
fisttps
push
sbb
fisubl
in
and
dec
in
jg
mov
lods
xor
aam
sbb
scas
insl
in
stc
jge
ficoml
xchg
pop
ja
fcoms
inc
inc
push
das
ds
inc
popa
push
jmp
mov
pop
shl
inc
gs
das
or
scas
repz
jb
inc
jne
sbb
pop
xor
cld
out
push
adc
add
dec
pop
mov
xchg
pop
das
outsl
mov
out
enter
bound
cmpsl
sahf
push
fcompl
or
cmp
shlb
xchg
or
or
loop
enter
inc
pusha
cmp
popa
adc
add
xchg
inc
mov
sahf
outsl
pop
pop
scas
out
lahf
add
shlb
movsl
stos
adc
lock
cmp
xchg
and
or
push
fistps
xor
push
out
pop
out
pop
pusha
sbb
pop
sub
movsl
pushf
dec
orb
cmp
mov
outsl
cmp
inc
mov
adc
fidivl
sub
lds
pop
aas
sti
adc
outsl
mov
mov
mov
lea
cld
aas
sti
das
mov
push
iret
imul
or
out
pop
leave
pop
outsl
mov
xchg
ss
clc
dec
stos
add
push
add
jbe
rcl
cmp
push
aam
cmp
and
or
in
les
cmp
push
push
fcoms
sbb
ja
outsl
mov
mov
mov
push
mov
mov
inc
push
dec
and
jg
movsl
outsl
dec
cli
cld
lea
add
call
sub
mov
ja
jbe
mov
xchg
mov
mov
jmp
xchg
imul
xor
pop
sbbl
mov
jnp
and
mov
repz
push
lret
push
mov
jg
push
lahf
out
cmp
xor
out
and
rcl
adc
mov
in
add
push
adc
mov
dec
in
shll
adc
adc
cmp
mov
sbb
das
cmc
paddw
sbb
test
push
data16
and
cltd
pop
or
test
jbe
pop
lahf
and
xchg
cmp
mov
or
push
push
pop
cli
sub
adc
sub
add
fidivs
repz
inc
stc
in
and
jl
xor
aad
mov
inc
out
and
incb
lods
inc
aaa
jp
or
inc
fldt
xor
push
push
xchg
or
push
mov
pop
shlb
daa
ffree
pop
mov
add
lock
pop
jne
ficompl
movsl
and
aam
addr16
test
jns
clc
adc
and
pandn
mov
in
sub
inc
fisubrl
adc
mov
jns
mov
jb
push
popf
sbb
into
subl
mov
cmp
lcall
add
clc
test
sub
add
sbb
fimuls
cmc
jns
fcmovbe
fstps
fisttpll
sbb
into
loop
sbb
xor
clc
adc
dec
lret
outsb
add
pop
xor
mov
pop
mov
negb
pop
mov
mov
jo
mov
movl
pop
scas
adc
xchg
xor
jae
pop
mov
lods
xchg
sbb
xchg
xor
and
pop
or
jbe
out
pop
pop
lods
sbb
insl
das
xor
bound
pop
add
dec
icebp
mov
mov
mov
out
sub
aas
lds
sbb
cmp
ss
stc
js
inc
xlat
enter
mov
imulb
adc
mov
out
and
cmpsl
adc
jae
add
xchg
ss
into
loop
stc
add
out
mov
fscale
jp
jl
sbb
sub
dec
test
dec
ret
push
push
fistps
xchg
mov
and
mov
sarb
cmpsb
sub
mov
out
call
test
cwtl
jmp
or
call
mov
rolb
xor
jmp
fiaddl
cmp
push
test
jmp
mov
pop
and
int
mov
push
adc
lret
jbe
xchg
xchg
adc
ja
repz
pop
insb
xchg
stos
gs
or
lret
in
xchg
sbb
jne
test
sub
push
ds
dec
sahf
imull
jp
push
das
push
dec
sub
popa
push
jecxz
sbb
adc
mov
andb
out
mov
inc
xchg
and
adc
mov
add
xchg
and
push
jnp
in
sbb
imul
mov
int
and
cmpsl
pop
in
lods
mov
jl
xchg
int
inc
fcomp
movl
fdivl
sub
pop
sub
iret
enter
cmp
in
shrl
or
adc
std
aaa
cmp
fwait
outsl
add
daa
add
ljmp
mov
outsl
jne
in
jmp
movsb
jno
cli
push
scas
insl
test
lahf
and
add
push
mov
inc
sub
fistl
dec
cmp
xchg
pop
adc
adcl
imul
lods
jecxz
inc
xchg
ret
adc
lret
xchg
mov
dec
pop
push
aaa
fidivs
stc
fstps
ret
aaa
jns
push
stos
add
subb
push
pusha
jecxz
mov
test
in
push
lea
leave
cs
cmp
in
mov
sbb
push
push
pop
sub
add
enter
inc
sbb
addr16
outsb
cmp
inc
xor
stos
add
fcomps
fildl
cmc
addr16
in
push
inc
mov
pop
into
adc
add
push
icebp
stc
push
mov
test
jmp
in
jne
jg
mov
cmpsl
or
inc
gs
hlt
dec
filds
mov
clc
movsb
out
adc
inc
xchg
fbld
fld
jns
sbbb
aam
bound
into
and
dec
ja
iret
je
stos
pop
lcall
add
out
inc
mov
ficoml
loopne
jbe
cmc
mov
mov
cltd
mov
sub
je
mov
lds
fistps
mov
leave
sti
xor
sub
xchg
xchg
js
adc
in
xchg
scas
aam
shl
fwait
push
mov
add
pop
push
jge
pop
roll
dec
or
jle
nop
push
jbe
push
outsb
js
das
cmpsl
test
push
push
xchg
xor
sbb
outsb
notb
mov
es
imul
adc
xor
sbb
mov
sar
test
popa
mov
jo
xchg
mov
popa
negb
xor
sbb
pop
dec
or
and
sahf
sub
xchg
insb
push
insb
add
or
jmp
jo
outsl
ret
dec
or
jecxz
scas
or
jo
lods
out
sbb
cmc
dec
in
loope
pop
push
jmp
divl
je
pop
ret
imul
repnz
pushf
mov
mov
and
fs
inc
fnstcw
xchg
mov
nop
mov
adc
imul
movb
aad
lock
lcall
cmc
les
ret
pop
mov
cli
push
cmc
jg
stos
pop
cvtps2pd
and
mov
push
xor
lods
dec
cmp
sbb
cmp
testl
sub
inc
xor
fwait
loopne
insl
cmp
outsl
mov
pushf
sbb
data16
cmp
add
dec
mov
lods
lods
fstp
mov
rep
inc
mov
lret
pcmpeqb
ja
in
popf
adc
mov
jb
mov
xorl
sbb
or
out
or
lret
push
push
sahf
cmpb
insb
cmpsb
mov
fs
decl
cltd
sub
add
cld
daa
pop
out
inc
dec
mov
into
cmp
mov
movsb
xchg
sbb
cmpsl
movsl
clc
movb
pop
sahf
ret
insb
movsl
push
add
sub
xchg
inc
fdivs
mov
push
scas
out
rcll
add
sub
adc
mov
mov
fimull
lret
sub
cmpsl
or
xor
and
aas
out
je
push
leave
mov
xchg
or
and
pusha
enter
ljmp
lcall
in
idivl
jecxz
jg
loopne
sub
pop
es
fs
xchg
enter
cltd
add
xchg
mov
sbb
adc
xchg
jp
sbb
or
jge
bound
ja
scas
or
mov
add
ficoms
push
incl
xchg
dec
bound
stc
loop
cmpsl
and
ret
and
leave
jae
lret
jae
out
lods
pushf
mov
rorb
mov
push
sub
sahf
push
mov
dec
repz
in
call
dec
sti
dec
scas
mov
push
lret
inc
dec
push
mov
xchg
jns
push
dec
js
dec
xchg
out
loope
mov
mov
in
in
xor
inc
stos
out
ret
jle
icebp
aas
pusha
sbb
xchg
gs
and
inc
enter
movsl
xor
lcall
fwait
std
pop
fsubrp
insl
je
lods
lcall
sbb
les
stos
inc
out
inc
stos
lock
in
cmp
dec
xchg
dec
and
sbb
das
jo
sbb
leave
fxch
ss
sbb
out
cmpsb
sub
popa
std
xor
mov
xor
test
jmp
sub
out
mov
jl
notb
sti
lods
paddusb
mov
add
mov
movsb
ljmp
lods
add
aad
inc
scas
xor
inc
test
jle
das
repz
scas
xchg
pop
xor
icebp
mov
int
inc
inc
xchg
mov
jo
icebp
clc
imull
stos
and
mov
push
pop
aad
xor
gs
xchg
mov
mov
and
sub
xchg
jecxz
outsl
jp
aad
lret
adc
stos
xchg
cmpsl
ret
inc
notl
cmp
or
jns
pop
jbe
shll
jp
mov
mov
cmp
cli
les
sub
cmp
add
adc
sub
inc
mov
xlat
loope
dec
cmpsl
ret
cwtl
pop
into
loope
push
fnstsw
mov
sbb
xor
fcomps
inc
inc
pop
mov
stos
add
cld
stos
mov
ja
add
xor
mov
decl
dec
pushf
jle
cmpsl
mov
in
cs
mov
pop
sti
dec
and
cwtl
adc
shl
xor
mov
mov
pop
adc
ja
mov
bound
and
push
and
jmp
jne
ds
jg
sbb
and
shrb
leave
stos
in
or
inc
clts
and
faddl
sbb
sub
dec
in
shlb
sub
hlt
push
lret
mov
repz
lock
loope
lcall
push
outsl
imul
dec
daa
jle
push
ja
mov
pop
cmp
cmp
mov
das
std
in
aad
cld
arpl
shr
mov
mov
mov
into
jbe
leave
mov
test
adcl
fwait
cwtl
hlt
jne
stos
mov
xchg
xchg
dec
push
popa
sbb
or
roll
pop
push
sub
fldcw
and
insb
movsl
or
scas
push
push
cs
and
js
mov
ret
icebp
stos
loop
pop
rcr
push
adc
pop
sub
xor
cs
push
out
cmp
jmp
mov
mov
or
push
arpl
mov
xchg
mov
ffreep
pop
fs
das
iret
or
outsb
mov
testb
xchg
mov
je
inc
mov
test
in
stos
dec
jmp
int3
mov
test
and
add
jmp
pushf
addr16
leave
push
xor
mov
sub
xor
push
cmpsl
mov
stos
or
xchg
sbb
jae
fwait
movsb
leave
dec
iret
inc
ret
out
add
mov
adc
adc
dec
call
shll
popf
sub
lret
mov
mov
cmp
out
pop
or
pop
sbb
stos
sahf
adc
or
fwait
icebp
xlat
sti
xor
mov
dec
imul
inc
fldenv
push
movsl
scas
dec
jmp
pop
inc
test
psllq
mull
sahf
testb
mov
add
scas
outsb
push
mov
ljmp
cmpsb
pusha
jae
mov
or
jo
push
xchg
push
sub
or
xchg
add
jns
ficoms
mov
xchg
dec
notb
je
xchg
jno
adc
pop
dec
lods
das
add
adc
mov
push
mov
mov
mov
test
dec
cmp
int
mov
mov
pop
sub
xchg
dec
mov
mov
dec
inc
lds
pop
cmp
add
hlt
je
xlat
sub
mov
icebp
aaa
or
lds
sbbl
pop
push
cli
sub
sbb
pop
movsb
lea
mov
sahf
test
push
imul
sub
fcmovnu
jno
nop
cmpsb
cmp
mov
dec
loop
ret
cmp
dec
test
sub
pop
ret
sti
fimuls
xchg
shll
xlat
sub
push
movsb
mov
in
push
push
jbe
xlat
addr16
outsb
shlb
inc
mov
pop
add
js
lods
add
test
int
xchg
jno
hlt
lea
adc
jnp
pop
inc
cld
sub
hlt
xchg
lock
loope
inc
jne
imul
dec
mov
add
dec
in
aam
or
int3
push
push
sub
push
ficomps
adc
pop
inc
xchg
lock
inc
int
sub
inc
xlat
mov
lea
jle
aaa
xlat
cs
stos
out
nop
lock
pop
loop
adc
lds
cmp
xlat
or
iret
and
inc
leave
test
jo
mov
and
cli
push
add
fstl
xor
adc
aam
adc
inc
xor
imul
sbb
sahf
lds
mov
testl
or
xor
cmpsb
cmpl
aad
cltd
mov
out
push
mov
je
sahf
arpl
flds
or
xchg
pop
push
fisttpl
jb
inc
das
jnp
mov
pop
ljmp
insl
jb
loope
xchg
sbb
push
aad
and
xchg
push
push
add
push
dec
scas
push
shrb
cld
cmp
lcall
pop
mov
xchg
or
sub
pop
adc
adc
push
movsl
or
pop
pop
xor
lods
pop
stos
shl
pop
pop
push
inc
xor
mov
dec
sub
sub
adc
jg
dec
adc
jne
repnz
lcall
mov
add
inc
cli
dec
push
lds
dec
mov
jns
test
and
orl
aam
jg
clc
movsb
insl
add
push
xor
mov
popf
je
mov
and
insl
adc
arpl
push
inc
stos
cmc
pop
xchg
into
mov
outsb
lret
jb
adc
pop
bound
push
jge
sti
lret
pop
and
clc
inc
cltd
ja
mov
int3
pop
add
arpl
andb
mov
movsb
xchg
cmc
aaa
xchg
in
es
in
sub
pop
or
enter
jnp
je
dec
jp
push
sub
xorl
lcall
outsb
pop
add
or
rcr
into
inc
out
mov
push
push
stc
das
xor
push
ss
sbb
test
mov
and
popf
pop
jnp
dec
fldcw
cli
sub
sub
inc
nop
inc
icebp
mov
js
gs
or
adc
clc
mov
iret
pop
xchg
rcr
popa
mov
movsb
fsubl
mov
out
roll
std
add
or
pop
inc
adc
daa
int3
cmpsl
icebp
mov
xlat
popf
push
xor
pop
adc
adc
out
mov
sub
or
fsts
push
inc
mov
ret
pop
ss
mov
nop
dec
cmc
xor
aam
outsb
xchg
stc
inc
sahf
sbbl
insb
cltd
mov
adc
sbb
jae
xchg
addr16
test
sbb
bound
jns
jno
xor
pop
and
ret
add
jmp
bound
sbb
sub
push
dec
icebp
ds
xchg
movsb
jne
dec
jmp
inc
cmp
cs
repnz
xchg
leave
xorb
lds
lea
aam
js
int3
and
jle
adc
pushf
stc
dec
addr16
mov
mov
call
mov
dec
mov
popf
jne
xchg
pop
mov
jp
add
sub
cli
push
subb
bound
sbb
inc
sub
push
daa
jp
repnz
dec
push
std
mov
mov
mov
xchg
dec
les
in
jg
adc
fdiv
nop
push
dec
push
ds
test
adc
mov
js
fcmovu
mov
xchg
andl
lcall
cmp
les
out
imul
ret
sahf
push
daa
xchg
jl
jb
iret
enter
and
and
inc
pop
push
imul
outsl
movsb
je
push
loopne
sub
xlat
test
adc
xchg
lods
ljmp
add
adc
and
fs
or
mov
or
xor
mov
outsb
cld
push
jge
dec
cmpsl
inc
sbb
inc
add
inc
addr16
imul
adc
cmp
mov
push
mov
and
add
or
add
outsl
mov
rcrb
cmp
mov
rclb
sbb
lods
cmpsb
into
xchg
dec
add
xchg
jp
inc
fidivrs
ja
in
sbb
mov
lret
sbb
lds
pause
ljmp
test
mov
out
and
sub
sub
and
jb
decb
jge
add
sbb
mov
das
fistpl
pop
mov
movl
and
icebp
sub
mov
out
clc
push
mov
sub
sbb
pop
sti
cmp
fnstcw
and
and
call
mov
repnz
inc
int3
pop
in
pop
mov
cmp
cmpb
loop
inc
cmp
jle
sub
push
popf
sub
inc
or
aas
mov
push
sub
or
add
repnz
sbb
push
outsl
dec
push
insb
adc
scas
adc
or
jae
shlb
imul
pushf
into
aaa
mov
outsl
aas
sbb
dec
inc
mov
sahf
aaa
xor
push
sub
sub
dec
xchg
xchg
arpl
lea
inc
jmp
push
mov
into
mov
nop
test
out
out
rcrl
push
and
add
push
mov
sub
popf
rolb
xor
loope
xchg
cmpsb
clc
cmp
mov
sub
dec
mov
xor
jg
sub
iret
jecxz
mov
push
and
sbb
ret
sbb
in
ret
xor
mov
dec
mov
stos
stos
movb
popf
dec
mov
mov
xchg
mov
test
clc
and
xchg
mov
add
cvttps2pi
jg
xlat
sub
pop
inc
test
loop
dec
lret
mov
xor
adc
push
into
subl
sub
cmpb
xchg
and
mov
cmp
mov
loopne
mov
or
insb
into
mov
popa
push
outsb
cmp
sbb
in
test
ljmp
mov
adc
and
or
mov
and
mov
ja
sbb
int3
test
jmp
adcl
jbe
mov
xchg
push
hlt
sahf
outsl
ret
add
notb
cmpsb
imul
in
rcr
stos
push
mov
inc
ror
or
sub
sti
push
mov
cmp
out
or
push
xor
jnp
sahf
xor
add
outsl
xor
into
jno
sti
push
push
jno
cmp
xchg
decl
xchg
in
sbb
imul
test
fnsave
sbb
das
hlt
pop
xor
rorb
and
mov
mov
cmpsb
sbb
je
sbb
int
add
in
jne
jnp
mov
fsubp
mov
cli
std
sbb
push
pop
enter
mov
mov
js
or
popa
adc
inc
add
dec
stos
mov
repnz
jne
pop
mov
int
sbb
idivl
aad
lock
cmpsl
enter
push
mov
int3
push
ret
and
aam
stc
icebp
cld
adc
fisubs
jne
mov
adc
xchg
mov
repnz
pop
xchg
into
aaa
pushf
imul
adc
mov
std
pusha
add
pop
pop
insl
push
out
jae
dec
fnstsw
sub
ret
pop
mov
and
sti
inc
sub
aad
or
jmp
fucomip
dec
std
cmp
lods
rol
mov
jge
jbe
sti
fists
pop
pop
mov
addr16
inc
adc
sbb
cld
jmp
loope
inc
mov
mov
bnd
pusha
cld
xchg
idiv
push
jnp
mov
testb
ret
cmp
mov
mov
jo
add
pop
sbb
icebp
jg
xchg
xchg
mov
pop
cwtl
outsl
in
lods
test
mov
sub
push
data16
cmp
dec
and
mov
or
fucomi
or
test
subl
shrl
xchg
push
xchg
in
sbb
and
sub
xchg
inc
lods
rorl
push
loopne
rolb
push
pushf
lea
icebp
sub
repz
ret
adc
adc
ds
loop
lock
and
sub
sub
lods
lds
inc
mov
pop
aaa
pop
loopne
test
ja
mov
sub
xor
pop
out
insb
cli
lock
mov
pop
jno
imul
repz
pop
push
xchg
sub
dec
xor
repz
pop
loope
stos
fnstcw
mov
pop
adc
sbbl
add
cmp
loope
pushf
push
movsl
mov
cmpsl
pop
cmpl
fnsave
stos
push
and
xchg
call
sub
pushf
test
ljmp
add
push
ja
fidivs
adc
nop
shll
mov
jnp
add
cli
test
jle
outsl
clc
stos
pop
push
sarl
xor
cwtl
lahf
xorl
mov
ficoms
jp
ret
xchg
ds
in
insl
arpl
push
mov
jge
mov
fisttpl
dec
out
out
xor
sbb
test
sub
int3
mov
std
add
sbb
mov
clc
pop
push
stc
lret
aaa
and
into
mul
in
outsl
fs
and
lods
or
icebp
adc
and
jle
sub
jb
std
aam
lcall
adc
stos
aad
imul
adc
nop
ljmp
scas
sbb
push
mov
jp
fdivrs
mov
fistl
inc
mov
ficomps
and
inc
sti
aas
sub
dec
mov
scas
sbb
loopne
dec
mov
in
cs
stos
cmpsl
adc
mov
js
shll
aad
shll
inc
mov
inc
inc
jmp
cmp
push
out
sbb
lahf
and
test
icebp
aam
cwtl
or
ror
mov
mov
jnp
inc
orb
lret
aas
mov
insb
clc
dec
dec
loop
mov
rcll
cmp
push
mov
sbb
push
stos
insb
fsubp
enter
sbb
lods
add
fcmovb
jg
nop
and
ret
rol
jns
sub
jecxz
mov
test
fstps
sti
loop
jle
jg,pn
subb
and
in
loop
adc
aad
adc
add
ret
or
outsl
and
leave
test
xor
pop
push
hlt
push
arpl
lds
lds
nop
cmp
pop
add
mov
int3
inc
shlb
mov
pop
jg
push
inc
or
js
mov
mov
cmp
fsubrl
sbb
test
add
cli
and
icebp
lods
stc
inc
push
adc
pushf
xchg
inc
enter
idivl
test
icebp
repz
inc
aaa
popf
pop
orl
dec
sub
mov
jge
das
sub
enter
repz
xorl
mov
mov
xorb
push
mov
and
sahf
mov
loope
pop
jle
pop
test
mov
daa
sub
pop
or
cmp
mov
add
jg
movsb
mov
pushf
adc
cmp
sub
fnsave
lods
sbb
rorb
jle
lret
aaa
and
enter
jne
repz
repz
lods
int
pushf
or
adc
xchg
dec
out
clc
push
cld
jl
or
pop
sbb
out
pop
xchg
lds
mov
and
nop
pop
mov
push
dec
inc
or
dec
mov
mov
inc
push
jp
xor
inc
cli
jae
mov
or
insl
frstpm(287
aas
dec
pop
jmp
sub
in
test
or
dec
mov
sub
mov
lock
pop
aad
lods
pop
mov
adc
in
jmp
addb
inc
arpl
sub
out
lret
dec
inc
cltd
ja
addr16
fcomip
fwait
outsl
jo
and
loope
dec
lcall
int
stc
xchg
roll
orb
mov
sti
sbb
shrl
sub
and
popf
dec
adc
sbb
push
std
nop
jecxz
sahf
outsb
lahf
cmp
mov
xorb
lret
mov
movsb
rcl
pop
adc
sbb
int3
inc
sti
dec
fidivs
call
addr16
sub
pop
lret
mov
lret
bound
and
jge
push
lret
mov
sbb
test
fs
clc
jno
xor
pushl
and
mov
rcrl
mov
sbb
push
mov
dec
xor
push
in
mov
xor
inc
add
mov
sub
test
pop
xor
inc
insb
inc
mov
adc
and
daa
cld
xchg
bound
sahf
jp
lock
imul
shl
loop
repnz
fmulp
push
pop
testl
lret
add
jb
pop
into
pusha
sub
stos
sub
rcrb
stc
push
stc
mov
nopl
cmc
sub
adc
push
mov
xor
mov
int3
xchg
dec
xchg
and
cli
sub
pop
imul
mov
bound
lock
cmpsb
cwtl
adcl
jno
xchg
sbb
sbb
mov
out
fstps
addr16
mov
das
lods
js
xor
mov
mov
cmp
dec
ret
xchg
xchg
jg
push
mov
ret
xorb
pop
or
cmpsb
shrb
add
and
jecxz
xlat
pop
push
scas
add
ja
int
sbb
sbb
sbb
and
je
loop
les
or
mov
call
xor
ret
dec
mov
mov
in
cmp
stos
add
fwait
in
pop
shlb
les
jp
imul
pop
mov
mov
movsl
and
pop
and
mov
xor
cld
inc
mov
std
pop
fcmovb
out
ljmp
je
out
mov
cmp
cli
push
aaa
out
dec
or
pop
rcrl
ss
or
sub
mov
jb
stos
sahf
xor
clc
nop
scas
inc
mov
or
pop
adc
push
ror
call
lret
call
cwtl
lcall
dec
ja
push
aad
sub
push
jg
add
and
adcl
adc
add
mov
push
pop
xchg
dec
das
scas
dec
push
lahf
test
mov
push
cltd
dec
push
das
out
dec
mov
lods
adc
lods
mov
lret
aaa
push
mov
int
loop
jnp
enter
mov
push
lret
ds
out
in
xchg
pop
fbstp
xor
dec
cmpsb
jecxz
sti
nop
ret
mov
sbb
mov
sub
stos
inc
sbbl
pop
shrl
outsb
mov
ss
jae
aas
cmp
inc
inc
lods
mov
add
cld
shrb
pushf
pop
pushf
lret
pushw
pop
sbb
jle
daa
pop
sbb
push
xor
mov
es
lods
add
daa
shll
scas
arpl
out
loop
test
mov
and
jp
sub
jecxz
jnp
pushf
jb
rcll
pushf
push
test
gs
cmpsl
ljmp
and
pop
setle
and
dec
jbe
sub
or
dec
stos
adc
outsl
mov
mov
adc
and
into
movsl
sub
cmp
out
and
in
out
mov
add
add
fcmovne
mov
test
pop
add
add
inc
pop
mov
xchg
mov
sbb
in
mov
das
jae
out
sarb
mov
dec
stos
popf
sub
lret
fimuls
push
ret
in
lcall
cmp
sbb
mov
mov
push
outsl
push
fdivs
or
jmp
push
mov
jae
jmp
mov
adc
mov
adc
aam
repnz
test
outsl
adc
cmpsb
hlt
sbb
orb
mov
rcll
sbb
nop
mov
aaa
pop
mov
fprem1
jle
pop
cmp
aad
mov
pop
in
inc
sbbl
xchg
mov
dec
std
adc
push
fucomp
filds
pop
dec
jae
cmp
inc
roll
xchg
outsl
or
lea
mov
icebp
and
std
sbb
lods
ret
ss
rclb
and
adc
lods
add
sbb
sub
cmpsb
insb
je
cmp
test
pmulhw
sub
scas
fisubrs
push
sub
mov
je
push
xor
dec
in
push
pop
dec
and
icebp
imul
dec
pop
int
les
pushf
xor
stos
mov
pop
ret
adc
sbb
inc
pop
mov
ljmp
and
rolb
stos
jo
pop
cwtl
push
loope
repnz
cwtl
mov
inc
cmp
mov
cmp
enter
xor
rorl
or
xchg
sbb
lret
daa
inc
sbb
fsubr
ret
data16
xchg
leave
call
pushf
andl
fistl
cwtl
out
or
mov
xchg
and
mov
mov
pop
dec
dec
pop
movsb
loop
das
aam
push
inc
push
and
and
dec
jne
mov
cmc
cwtl
cltd
jae
xchg
xor
or
pop
lcall
call
xor
or
pop
and
cmp
inc
mov
mov
idivl
loope
and
aam
add
pop
out
xchg
add
scas
outsl
mov
jns
sahf
mov
ds
rolb
xor
lods
jae
sbb
jne
out
pop
in
addr16
stos
jl
mov
outsl
xorl
dec
push
and
push
shrl
shll
adcb
sbb
je
pop
scas
in
adc
hlt
add
cmp
add
jge
sub
outsb
ret
and
add
cli
mov
add
pushf
pop
inc
insb
aaa
fs
lahf
inc
stos
mov
add
mov
ret
into
push
inc
nop
loope
dec
stc
outsl
sub
sarl
popf
enter
test
and
lret
push
push
arpl
cmpsb
movsl
add
ret
lock
leave
or
in
xor
jecxz
sub
bound
lods
jb
sub
mov
sahf
push
xchg
dec
jo
dec
xlat
aaa
or
cld
cmp
neg
int
fmuls
xchg
sahf
mov
in
cli
adc
and
out
dec
sub
into
das
inc
lock
and
fiadds
pop
adc
dec
ret
dec
and
pop
movsb
xor
sub
sub
cmp
pop
mov
jno
push
addr16
dec
dec
int3
pushf
xchg
cmp
push
push
mov
ljmp
sbbl
cli
lret
imul
mov
jne
mov
in
jg
and
outsb
cld
jmp
popa
jl
outsb
cmpsb
data16
push
adc
xor
adc
sbb
adc
mov
adc
aas
mov
pop
ret
pop
cmp
ds
nop
je
mov
daa
inc
and
stos
call
pop
mov
hlt
sub
cld
sbb
and
cmp
or
mov
push
movsb
mov
cld
pop
push
lahf
bound
orl
call
ror
outsb
push
jo
movsb
xor
out
xchg
and
and
push
lret
mov
push
addl
add
pop
jle
push
les
call
lods
xchg
push
push
jg
sub
fisubs
jmp
shll
aam
xor
out
or
cmpb
mov
push
adc
push
jbe
jle
sub
dec
mov
rcl
dec
bswap
loopne
fstl
stc
mov
insb
rcrl
jge
fadd
cmp
jae
sub
int3
lahf
jl
xor
cmp
repz
xchg
mov
jnp
mov
inc
ss
cmpsl
loope
lcall
ret
mov
and
aad
dec
inc
dec
xchg
pop
scas
int
cwtl
mov
enter
imul
es
add
test
stos
mov
sub
or
pop
cmp
or
push
test
xor
add
adc
or
mov
in
mov
out
hlt
decb
pop
adc
jo
shll
pop
inc
jl
sub
dec
clc
xor
call
mov
xorb
ja
daa
adc
ljmp
add
pop
xlat
bound
mov
dec
mov
and
fcmovne
pusha
ja
in
je
ja
lock
dec
cld
mov
or
inc
sub
sarb
cmpsl
shll
into
dec
or
jbe
mov
jecxz
mov
shll
shl
outsl
and
add
je
pop
aaa
mov
cmc
or
cmp
mov
jg
xchg
outsl
jae
bound
insl
xchg
pop
inc
test
sbb
adc
mov
maskmovq
testl
sbb
dec
mov
mov
or
mov
hlt
mov
mov
sar
cltd
addl
sub
std
mov
pop
int3
movsb
movq
mov
mov
push
lret
inc
mov
stos
les
movsl
push
imul
fwait
ret
insl
aam
test
pop
in
push
adc
mov
das
out
pop
sbbl
testl
push
pushf
push
and
jl
adc
loopne
ljmp
loop
aaa
pop
lcall
roll
cmp
dec
mov
or
bound
push
mov
add
mov
adc
lret
faddp
xchg
mov
movsb
sbb
and
nop
shlb
subb
mull
sti
and
lcall
xchg
rep
ljmp
add
mov
and
mov
jae
jecxz
test
std
dec
push
jns
mov
loopne
cmp
shrb
xchg
xchg
out
shrl
inc
out
subb
inc
pop
notb
cmp
xor
mov
orl
and
inc
pop
mov
fsubr
xor
les
dec
sub
sbb
out
lods
lea
das
nop
imul
and
sub
fs
sbb
in
add
pop
aad
pop
mov
xchg
imul
push
sub
adc
rcll
divb
jge
pushf
mov
sub
fistl
sbb
sahf
push
and
clc
jg
mov
movsl
movsb
in
lods
inc
jo
subl
mov
cmpsl
clc
mov
clc
xor
push
int
int3
cld
jl
pop
syscall
int
sub
cmp
dec
testl
ja
js
insb
aaa
jo
xor
sbb
dec
push
xchg
push
bnd
call
filds
inc
movsl
jp
lods
insl
or
mov
je
sahf
outsl
cmp
movsl
loope
xchg
ret
add
jb
adc
jge
lock
nop
sbb
orl
mov
mov
int
fistl
sbb
xchg
mov
xor
sub
imul
sub
loop
or
mov
lds
int3
lret
sub
imul
sbb
sbb
pop
leave
nop
jo
and
jbe
dec
adc
sub
shll
popf
das
adc
shl
pop
push
aas
sti
push
loope
cli
xchg
adc
pop
movsb
test
jle
dec
lret
inc
mov
mov
aam
sbb
js
dec
sub
or
or
jnp
loope
idivb
mov
std
rol
mov
mov
popf
cmp
adc
mov
in
repnz
mov
adcb
mov
js
sub
pushf
pop
mov
or
dec
out
mov
ret
push
and
in
or
movsb
roll
push
in
xchg
sti
mov
out
mov
mov
sub
les
stc
push
lods
lcall
push
xor
fildl
inc
and
mov
rcl
cmp
insb
jne
inc
adc
pop
add
mov
adc
in
scas
das
out
movsl
lret
jne
pop
pushf
pop
mov
mov
adc
dec
insl
jge
cmp
out
scas
inc
rol
iret
pop
sub
test
mov
repnz
test
cmpb
imul
les
inc
btl
pop
ret
sub
mov
call
push
cld
rcll
xor
movsl
pop
adcl
and
les
add
jae
or
push
sbb
cmp
adc
pop
push
mov
test
jbe
and
jle
pop
fdivrp
jbe
xchg
push
lret
stos
sarl
imul
and
dec
repnz
stos
or
sbbb
dec
mov
and
sbb
pop
in
sbb
lock
pop
adc
inc
loop
inc
mov
movsl
outsb
pop
cld
sub
rcr
loop
mov
jle
repz
fiadds
mov
loop
mov
push
sahf
loope
xchg
xchg
xchg
mov
sub
shlb
aaa
ds
mov
cmp
cmpsl
fs
ret
adc
addl
imul
sbb
leave
adc
jo
add
stos
std
cld
push
or
mov
leave
imulb
or
shrl
dec
imul
popf
in
pushf
mov
xchg
je
add
fidivs
insl
adc
or
sarb
popf
jg
nop
push
pop
fsubrp
cs
or
je
test
iret
rcrl
std
out
push
cmpsb
popa
lahf
fcomps
add
sbbb
mov
mov
add
aam
or
push
mov
cwtl
pop
enter
pop
mov
ret
and
fwait
sarl
packuswb
sbb
pop
push
mov
sub
sub
in
std
icebp
seto
jb
stc
lret
addr16
xor
lock
dec
pop
mov
pop
test
and
mov
sbb
push
out
pusha
xor
insl
jge
xor
or
orb
mov
dec
jne
cs
mov
xchg
jle
cmpsb
sti
xchg
dec
cmpsb
pushl
sti
sbb
in
shrb
stc
add
push
mov
into
popf
aad
inc
out
loop
sub
sub
jnp
int3
inc
push
sub
push
out
mov
lret
and
hlt
daa
lock
movb
mov
outsl
int
mov
or
mov
fs
mov
outsl
fcoms
mov
stos
push
imul
fwait
ret
dec
mov
add
pop
dec
pop
pushf
mov
mov
out
loopne
icebp
sub
xchg
into
cmp
je
scas
mov
sahf
mov
dec
mov
push
adc
nop
sbb
pushw
mov
and
jne
out
hlt
xlat
pop
mov
stc
lret
data16
pop
mov
or
mov
pop
lods
push
sbb
jb
in
incb
gs
xchg
push
sbb
inc
test
xor
movsb
inc
or
inc
mov
add
sub
cmpsb
pop
sarb
push
pushf
dec
xor
cmc
mov
xchg
cmp
add
cmp
ljmp
stos
cld
xlat
mov
xchg
or
pushf
cli
cli
add
push
fists
or
adc
xor
jle
inc
cmp
test
test
lret
nop
adc
xchg
sbb
aas
cmpsl
lahf
push
mov
inc
lock
jg
inc
ja
aaa
rcl
or
lcall
dec
pop
fdiv
adcl
scas
xor
pop
lcall
sbb
xchg
out
adc
insl
xor
jo
outsb
xor
pop
add
dec
cmp
aas
pop
mov
ss
push
into
pop
pop
xchg
aas
add
dec
xchg
or
jno,pt
fcomps
mov
xlat
pop
daa
shll
ja
cmc
mov
push
mov
cmp
pusha
fdivrl
imul
lahf
jge
or
jp
and
bound
xchg
in
shrl
mov
stc
xchg
fistpl
repz
lds
and
loope
adc
aad
movl
filds
cmc
push
lea
pop
mov
imul
lock
js
icebp
scas
pushw
repz
xchg
test
lods
sbb
and
jle
cmp
jns
bswap
ud1
sbb
stos
mov
cltd
filds
and
rcrl
insb
lds
jno
loopne
into
out
je
xchg
out
and
push
mov
mov
mov
lds
out
xchg
mov
pop
insb
and
in
std
xchg
push
in
filds
jmp
movsb
jecxz
in
inc
and
gs
dec
jge
inc
rolb
mov
cmp
mov
daa
lods
scas
leave
mov
adcb
jbe
ja
push
andl
dec
lret
pusha
lock
add
pusha
orb
mov
jns
xchg
les
push
adc
dec
lods
out
push
imull
xorb
subb
repz
cmp
push
rcl
fdivs
mov
jle
mov
icebp
stc
outsl
icebp
pop
sbb
xchg
or
pop
outsl
loope
xor
int3
mov
and
js
push
scas
popf
pushf
xchg
popf
cmpsb
mov
nop
in
adc
enter
xchg
mov
lret
outsb
pop
fsubl
push
push
outsb
out
jl
mov
xor
xchg
lds
inc
notl
sbb
lcall
pushf
sbb
add
cs
dec
xchg
jne
fs
pop
jl
xchg
lods
ret
pop
sub
fidivrl
adcl
push
push
lcall
mov
and
lret
ret
mov
jp
fsubs
mov
jae
notb
and
aas
sub
bnd
sub
xchg
cwtl
inc
pop
xchg
inc
mov
loope
push
fdivrp
jmp
jns
lret
mov
sub
cmp
repnz
and
xchg
mov
and
or
cmpsl
test
mov
dec
push
and
shlb
hlt
sbb
mov
adc
ljmp
mov
mov
push
repz
pushf
les
loope
sub
dec
rol
fcomps
sub
xchg
cmc
int3
xor
je
in
fidivs
dec
adc
jp
inc
xor
and
insl
shll
testb
jnp
and
movsb
push
xchg
or
mov
sbb
ja
aaa
or
into
call
sbb
movsl
imul
jbe
push
cwtl
jbe
push
push
or
jecxz
jo
or
xor
int
mov
and
fbld
pop
sbb
add
dec
pop
mov
cmp
xchg
fstpt
push
sti
mov
and
stos
dec
xchg
sub
insl
xchg
cmp
jge
loop
cmp
mov
add
nop
mov
xor
adc
test
mov
pop
in
enter
fwait
clc
sbb
cmp
jmp
idivl
push
lret
les
stc
outsl
mov
and
aad
and
ret
or
mov
xchg
pop
add
imul
dec
mov
mov
pop
pop
stc
adc
scas
xlat
bound
cmpsl
pop
mov
enter
jne
pop
xor
out
pop
aad
pusha
js
gs
dec
add
in
sahf
scas
cmpsl
and
push
add
shl
lea
pop
insb
repnz
cmp
push
sarb
lods
pop
ret
js
jno
and
push
lahf
mov
sbb
jns
sti
push
xor
cmpsl
bound
add
add
pop
stos
sti
add
cmp
insb
inc
mov
mov
pop
lret
add
es
dec
sbb
aas
rcl
push
ret
sub
std
popa
movsb
sbb
mov
fistps
stc
enter
sti
popf
cmp
cmp
loope
adc
fmull
fwait
out
push
daa
push
jno
cli
push
sub
sbb
das
sbb
add
jbe
mov
push
pop
push
jg
in
rcl
mov
jecxz
subb
xchg
stos
sub
push
ret
mov
xor
jg
dec
adc
xor
xlat
cmpsb
add
lods
inc
add
mov
pop
scas
mov
iret
cmp
xor
push
lcall
cmp
xchg
call
dec
shll
out
dec
or
lea
lds
mov
rol
ljmp
adc
imul
addr16
push
aam
push
in
xchg
and
std
add
or
aas
inc
push
popf
pop
faddl
or
inc
jns
push
int3
pushf
add
or
lret
fsubrp
cmp
xchg
xor
jns
or
sub
jno
test
pop
mov
enter
fmuls
bound
scas
mov
fs
aam
sub
dec
lret
jns
out
movsl
js
inc
rcrl
ret
add
mov
mov
or
xchg
aad
sbb
dec
mov
xor
lcall
data16
xchg
pop
sub
and
out
mov
pop
jbe
mov
ja
aad
push
cmp
push
mov
pop
lods
fldl
xor
adc
cmp
cmp
sbb
data16
test
roll
push
push
lret
cmp
push
in
aas
mov
sub
pop
xchg
je
aad
sub
out
cmp
dec
iret
push
sbb
xchg
call
iret
cmp
mov
test
push
repnz
imul
adc
mov
divl
sti
mov
push
jl
xor
adc
inc
lods
pop
nop
les
push
xchg
push
cltd
xchg
fwait
out
fnsave
mov
gs
sbb
orl
jbe
adc
jl
adc
das
cmp
mov
and
push
cmovns
xchg
inc
jp
jb
ret
sbbb
fisubl
lds
mov
movsl
or
andb
jae
iret
je
sahf
pop
sub
jbe
pop
lret
popa
adc
pusha
sbb
add
xor
cmc
push
ret
lret
jg
add
addr16
pop
out
loop
inc
outsb
jl
imul
fimull
xor
inc
in
int
mov
sbb
and
adc
sbb
mov
jmp
les
dec
shrb
pop
loopne
std
rorl
inc
movsb
push
loope
mov
pop
xchg
jne
lret
daa
cmpsl
lret
lods
push
sub
idivl
mov
mov
enter
jg
rorl
xor
sbb
out
fwait
adc
cmc
push
popa
add
inc
add
inc
add
psubw
jno
popa
dec
push
push
out
add
mov
movsl
fwait
lret
mov
mov
sub
je
incl
lcall
xor
out
scas
pop
pop
and
sbbl
in
xchg
ljmp
push
push
out
xor
xor
aas
cmp
dec
inc
in
dec
jb
xchg
stos
inc
lret
pop
xchg
and
xchg
push
repz
jbe
call
sbb
and
sbb
cmp
div
aaa
sbb
xor
xchg
scas
cmpsl
push
cltd
imul
in
xlat
in
adc
jb
sbb
adc
cmpl
int3
cmp
add
std
jge
sub
cli
push
das
loopne
repnz
xchg
incl
pop
fbld
and
repnz
xchg
clc
rolb
adc
popf
scas
iret
jg
mov
ds
cmp
xor
dec
jo
in
inc
push
adc
cld
inc
pusha
pusha
lcall
sub
jno
gs
adc
leave
loop
sbb
daa
nop
push
call
nop
mov
xor
sbb
fisttpl
xchg
mov
test
aam
mov
pop
outsb
mov
cld
pusha
adc
fisttpll
pop
adc
add
pop
bound
push
movsb
mov
sbb
jns
sbb
je
cli
loopne
sbb
pushf
adc
jmp
dec
rclb
add
cmp
jle
pushf
test
rcr
push
push
cmpsb
push
dec
or
mov
and
add
lds
mov
mov
jmp
outsl
mov
inc
dec
xlat
adc
push
bound
xlat
push
sbb
mov
cmc
outsl
bnd
clts
push
push
fadds
fisubs
ret
int3
fistl
jb
jle
and
dec
sbb
fidivl
fisubrl
adc
and
inc
ds
outsl
scas
dec
xor
push
daa
add
pop
adc
outsb
mul
shrb
jp
xor
sub
add
fdiv
adc
movsb
rclb
sub
test
stc
push
lcall
sbb
lock
sbb
stc
inc
push
mov
cmp
std
jmp
insb
xchg
jecxz
dec
movsb
xor
imul
pop
aas
mov
stc
hlt
mov
push
lods
cmp
fldcw
iret
jmp
mov
add
jbe
imul
inc
sbb
cmpsb
test
push
insl
xor
dec
daa
outsl
test
push
adc
xlat
out
fstps
jmp
fmull
mov
ffreep
cmp
jge
lret
cmp
inc
pushf
and
ljmp
jmp
rcrb
or
out
xlat
test
and
addr16
out
sbb
imul
cmpsl
loope
adc
adc
ret
mov
or
fs
mov
outsb
shrb
fwait
xor
and
lcall
mov
mov
jno
in
mov
test
pop
add
xchg
mov
leave
dec
mov
mov
xchg
and
ficompl
stos
ret
sbb
and
movsl
adc
mov
add
imull
xorb
inc
leave
fwait
push
cmp
jp
jmp
fstpl
jp
and
popf
cmp
cmc
dec
xchg
mov
push
push
in
test
out
push
loopne
dec
cmp
inc
dec
add
mov
push
lock
idivb
fcmovbe
xchg
clc
outsb
sub
insb
push
inc
and
movsb
adc
das
cmpsl
aas
pop
xlat
sbb
mov
adc
cmp
in
mov
sub
insb
stc
lock
mov
mov
and
test
cmpsb
dec
in
xchg
xlat
lea
push
adc
mov
mov
ret
pop
dec
repz
call
call
pop
add
stos
sub
cmc
stos
frstor
je
push
or
fstl
cld
outsb
cmp
pusha
out
nop
fdivrs
or
inc
cmpb
arpl
stos
sbb
out
mov
lea
mov
int3
jb
jecxz
mov
ja
adc
push
lret
hlt
pop
int
aaa
mov
insb
lcall
jge
push
insb
leave
push
mov
sbb
jmp
clc
push
push
jmp
push
ds
mov
loope
mov
or
icebp
repnz
jae
push
and
pop
ret
xor
or
jo
test
add
add
ret
and
cmpsb
test
int
mov
pusha
xlat
pop
and
xchg
sti
xor
push
out
jl
and
dec
fmul
into
ret
jg
pusha
and
dec
push
out
loope
cmp
arpl
adc
psllw
ret
push
cmp
daa
jns
cmp
repnz
scas
into
shll
outsl
push
fistpll
jnp
xchg
movsl
push
xchg
xchg
mov
ja
cmpsb
and
nop
insb
and
clc
out
cli
or
icebp
inc
lds
shrb
popa
sub
rcrl
aad
rolb
jae
fdivl
xor
roll
das
int3
fidivl
cmp
dec
cmp
lcall
dec
clc
sub
cmp
pop
int3
ja
dec
xchg
jmp
pop
or
int3
ss
insl
loope
inc
mov
jo
fistpl
jnp
es
add
or
into
aaa
dec
iret
or
outsb
jae
mov
aam
fistpll
outsl
rcrl
add
insl
pop
jne
jb
scas
sub
stos
jp
jp
and
cmp
inc
lods
xchg
cmpsl
fscale
xor
mov
cwtl
adc
rcrb
js
lods
jb
mov
dec
pop
push
adc
loopne
or
xchg
sahf
insl
xlat
in
adc
xchg
in
pop
test
mov
das
popa
insl
fcmovbe
sub
push
daa
push
xlat
push
inc
mov
pop
cmpsb
rol
push
or
inc
repz
sub
pop
inc
xchg
cmc
aam
or
mov
fwait
int3
jp
adc
sub
ljmp
adc
mov
jae
aam
fwait
nop
add
int3
fimull
and
clc
inc
loopne
push
inc
or
xchg
mov
push
inc
cmp
cmpsb
cld
or
inc
fmulp
mov
xchg
cmp
lods
shlb
stos
stos
loope
imull
dec
stos
insl
cmp
imul
ss
jns
pop
xchg
adc
scas
jns
js
aam
addr16
pusha
xor
test
sub
jge
shlb
dec
popf
rsqrtps
mov
out
add
iret
or
rcrb
add
push
stos
inc
dec
lods
jns
shll
popa
adc
add
notb
dec
enter
gs
pop
arpl
test
add
movl
mov
cmpsl
outsl
push
cmp
int3
notb
int
daa
push
jge
shll
and
adc
inc
cmp
in
push
fs
xchg
hlt
sbb
scas
cld
dec
addr16
adc
jb
loope
sbbb
dec
rcrl
xor
jmp
inc
or
adc
pusha
mov
jno
xchg
ljmp
mov
cld
sub
fcomip
sub
movsb
lcall
and
dec
out
int
jp
fiadds
pop
xchg
or
inc
mov
sbb
test
or
std
dec
add
outsb
pop
sahf
lock
mov
sbb
aam
cwtl
aas
mov
clc
out
shlb
inc
push
sti
mov
bound
daa
arpl
sti
push
int3
cwtl
and
fs
xor
stos
jnp
mov
fs
xor
xchg
sbb
sbb
fdivrl
mov
cmp
pop
out
inc
fs
sarb
cmp
or
cmp
loope
andb
lcall
mov
addl
pop
std
mov
pop
lock
sbb
sbb
mov
bound
dec
loopne
or
sbb
in
add
pop
loopne
out
jle
rcrb
addr16
out
adc
mov
stos
mov
sbb
cli
mov
cmpsl
or
adc
pusha
jae
adc
gs
and
cmp
inc
push
push
adc
cmpsl
mov
cmp
xchg
and
sti
addl
mov
loop
push
sub
out
into
hlt
mov
je
loopne
cld
mov
mov
fists
movsb
stos
dec
mov
mov
fs
icebp
scas
inc
mov
mov
sub
inc
roll
xchg
lods
ss
ds
lret
fs
enter
cs
inc
sbb
das
dec
or
add
loop
mov
repz
out
sti
jmp
sahf
mov
aaa
mov
jmp
dec
aam
mov
mov
insb
in
pop
pop
out
fwait
aaa
lcall
incl
in
dec
fnstenv
sub
add
xchg
pop
xchg
popl
inc
jge
lea
out
or
sti
addr16
pop
shll
div
aam
dec
mov
scas
jmp
popa
ret
jbe
lret
or
mov
fwait
dec
imul
jmp
pop
les
or
mov
lret
and
lds
cltd
lock
mov
inc
scas
adc
jns
adc
or
fiaddl
and
jno
jns
and
jbe
data16
subl
and
pushf
mov
pop
push
cmpsb
iret
push
and
adc
inc
dec
aaa
lods
lcall
and
xchg
xchg
xchg
add
or
popf
push
jp
imul
sub
or
fwait
aam
cmp
outsb
fs
test
push
jmp
fcmovbe
out
xor
fwait
adc
or
ja
sbb
lcall
sbb
gs
push
and
data16
pop
sub
outsl
or
movl
aas
lock
jo
movsl
mov
clc
jne
sbb
fwait
jne
cmp
jg,pt
and
mov
inc
push
jmp
xchg
jb
or
mov
subl
mov
shl
std
cmp
push
inc
fldl
mov
adc
shrl
mov
add
ds
pushf
xchg
add
outsl
sub
out
xchg
sbb
arpl
push
and
xlat
rcr
sbb
mov
adc
cwtl
das
int
arpl
jg
inc
xchg
outsl
push
arpl
ljmp
or
jns
in
inc
out
push
int
decb
push
cmp
or
sbb
xor
in
xchg
sub
aad
lock
cmp
popf
std
jmp
popf
jecxz
movsl
popf
xchg
jnp
sbb
lods
cwtl
jne
incb
xchg
mov
xor
sub
testb
mov
sbb
and
test
inc
sub
xor
inc
or
idivb
mov
and
divl
add
fisttpll
sub
add
push
les
insl
and
mov
and
movsb
adc
clc
and
inc
mov
xchg
fsubl
xor
cmp
dec
sub
lds
imul
xchg
in
setne
cmp
into
push
ficoms
enter
dec
mov
in
cmpsl
push
jns
add
cld
jmp
ja
xor
iret
sbb
cmp
lcall
rclb
dec
subl
mov
stos
je
sbb
repnz
cwtl
in
and
pop
pop
cmp
xor
fldcw
std
cwtl
das
add
sti
loopne
pusha
das
loopne
inc
mov
jbe
dec
into
andb
mov
push
lea
dec
xchg
gs
mov
shl
mov
faddl
in
data16
dec
fs
sti
arpl
mov
sub
xor
cmp
imul
sbb
in
sahf
dec
not
jo
fidivl
push
call
aad
cmc
mov
in
into
adc
sarb
pop
ja
mov
lea
jecxz
inc
pushf
jecxz
insb
push
mov
jmp
or
or
jecxz
and
cwtl
adc
fcoms
xor
push
ficomps
jbe
in
inc
jmp
mov
bound
cld
mov
ret
xlat
arpl
iret
ja
fxch
pop
out
xor
rorl
loope
cmp
inc
dec
ja
popa
inc
rolb
mov
or
cltd
icebp
xchg
mov
icebp
js
ret
push
fldt
adc
cli
xor
movsb
jo
shlb
pushf
pop
pop
fcomps
adc
ret
mov
push
mov
inc
xchg
xorb
lock
sbb
push
mov
xchg
and
and
dec
or
dec
pop
xchg
sahf
out
rcll
sbb
cmp
movsb
cmp
es
jnp
pusha
std
jmp
pop
arpl
add
dec
adc
pop
sarb
int
push
arpl
jp
cli
imul
mov
inc
out
sbb
dec
pusha
daa
mov
inc
mov
faddl
aam
mov
cmp
enter
hlt
jae
iret
push
xchg
cmp
mov
sbb
outsb
out
loopne
shlb
lret
pusha
fmuls
dec
and
mov
jmp
push
lret
out
pop
sbb
cld
ret
or
inc
popf
pop
push
mov
sbb
mov
pop
jns
xor
xor
pop
mov
jl
inc
lahf
outsl
inc
into
mov
xchg
or
test
xor
jno
testb
das
fisubl
jge
jo
mov
shr
mov
out
lahf
pusha
fs
decb
push
jo
or
cwtl
inc
xchg
pop
dec
sahf
push
push
in
pop
dec
cmc
push
lahf
and
mov
sub
cld
daa
outsb
push
push
cmp
sub
sub
add
lret
loope
in
pop
aaa
cmpsl
lret
xchg
stc
adc
sbb
stos
jne
push
xchg
sub
pop
add
push
push
aaa
add
movsl
mov
out
push
fs
push
xor
jae
call
and
mov
lret
jns
sub
mov
xchg
push
pop
out
addb
lcall
jl
clc
jecxz
jae
sbb
or
xor
inc
lret
or
inc
jno
and
mov
mov
cli
leave
push
mov
ret
movsb
test
aas
inc
sbb
in
scas
lahf
scas
mov
mov
mov
pusha
pop
inc
rol
hlt
or
test
je
stos
outsl
ljmp
lock
ror
mov
aam
addl
mov
dec
mov
mov
push
xchg
mov
lds
xor
or
push
and
and
into
subb
dec
push
cmc
jbe
test
out
lret
mov
dec
pop
das
jnp
jno
push
push
xchg
jg
pop
mov
jle
mov
imul
sbb
subl
jle
in
xchg
pop
data16
in
lahf
out
inc
out
addr16
dec
decb
or
pop
mov
push
inc
xchg
pop
sub
hlt
outsl
sub
iret
dec
xchg
pop
lret
mov
sbb
add
test
enter
pop
ret
out
xor
pop
push
cmp
xor
sarb
mov
cmpl
dec
inc
iret
cmp
add
and
lret
push
lahf
cwtl
or
insb
adcb
out
jb
addb
aas
repnz
mov
mov
pop
jbe
push
repz
outsl
add
adc
cmpsl
clc
adcb
mov
inc
and
pop
pop
in
out
cltd
stos
xchg
aam
bound
movb
js
jnp
arpl
inc
out
push
in
repz
in
leave
inc
push
or
mov
outsb
mov
inc
jo
or
mov
mov
jb
outsb
popf
lret
mov
daa
dec
rorl
mov
fmull
stos
jle
mov
push
pushf
or
ja
orl
aam
imul
mov
mov
popl
pop
pop
test
jecxz
sub
sub
and
adcl
and
sub
jns
dec
and
mov
repnz
xlat
jae
pop
test
inc
add
imul
mov
cmp
aam
pop
mov
sbb
ljmp
sub
xchg
xor
ljmp
pop
xchg
js
lahf
pop
out
and
std
fisubrs
adc
rol
pop
lds
fbstp
addr16
jmp
push
push
sub
int3
lods
mov
int3
mov
and
loope
je
movsb
xchg
es
ret
mov
add
and
incb
jne
cmc
jo
dec
repz
ds
repz
rcrl
dec
test
dec
sbb
cmp
jns
lahf
ja
and
imul
dec
in
xor
mov
jg
das
xor
jg
jmp
leave
out
xor
lret
push
clc
sbb
enter
adc
popf
clc
addr16
add
inc
scas
arpl
jp
xchg
mov
ret
and
mov
lcall
int
xchg
fldcw
pop
lods
sbb
fisttpll
xchg
daa
out
add
adc
stc
sahf
daa
and
mov
cs
push
cmpsb
add
push
adc
insb
sahf
pop
ja
xor
sbb
or
mov
cltd
dec
sub
lahf
cltd
cmp
mov
xchg
cmpsl
xlat
jmp
dec
shlb
int3
cli
imul
in
stos
mov
leave
jmp
cmpb
or
das
mov
std
mov
sahf
adc
insl
mov
fistl
data16
add
mov
scas
ja
add
mov
adc
push
xor
cmp
push
jb
pop
jbe
cltd
mov
stos
xchg
jno
popf
int
arpl
inc
in
ds
addb
add
mov
push
fprem1
mov
lea
mov
adc
dec
pop
xchg
test
movb
cmp
sbb
jmp
sub
mov
adc
ret
push
add
xor
pop
call
cmp
out
cld
add
test
aad
and
mov
dec
jne
xor
push
jge
pop
push
ljmp
jns
mov
push
imul
test
push
pop
mov
pop
sub
pop
pop
fnstsw
add
loop
or
xor
shrb
jp
inc
and
addr16
cmp
rol
push
std
xchg
out
div
pop
inc
pop
adc
test
test
enter
mov
mov
xchg
fidivrs
and
fsub
sbb
jge
sbb
xchg
ret
lret
xchg
inc
fs
pop
loope
stc
in
lahf
test
jbe
xlat
mov
es
ss
push
xchg
cmp
xorb
push
int3
leave
add
mov
sub
paddusw
addr16
jl
mov
xor
in
fs
lods
lods
cmp
negl
rcrl
adcb
lahf
roll
sub
testb
cs
lea
push
xor
mov
xchg
dec
jmp
xlat
mov
pop
jne
test
xor
outsl
push
dec
fildll
lcall
lods
addr16
add
jbe
add
ret
or
push
and
sub
push
rcrb
clc
aaa
addr16
sbb
push
es
or
test
ds
outsl
rcll
fsts
cmp
into
mov
mov
cwtl
lahf
shld
mov
cmp
and
repnz
push
aaa
roll
lret
cmp
cmpsb
sub
add
les
movsl
push
popf
cltd
dec
sub
popf
scas
insb
sbb
js
xlat
jbe
loopne
adc
mov
inc
adcl
repnz
sbb
stos
or
mov
pop
ret
cmpsl
fisttpll
aad
lods
ffreep
imul
out
add
stc
lea
mov
int
in
add
movsl
mov
loop,pt
inc
cs
mov
incb
mov
roll
and
xor
adc
push
gs
aam
out
inc
inc
add
push
jns
fnsave
ficoml
loope
stos
js
inc
pop
cmpsb
fwait
lret
push
aam
dec
out
or
xor
lock
sbb
add
movsl
daa
adc
xor
xor
inc
cld
sub
stos
cmpb
mov
mov
sub
shlb
xchg
sarb
dec
les
pop
push
scas
and
mov
cmp
insb
and
imul
or
fstpl
mov
or
ja
mov
xor
push
sbb
xlat
scas
jg
mov
enter
mov
pop
mov
inc
xor
push
pop
pop
mov
int
jp
rcll
jecxz
mov
mov
lahf
push
mov
mov
or
ret
adc
pushf
mov
mov
or
movsl
mov
dec
imul
movsb
je
fs
push
xor
fldln2
out
push
cmp
xchg
add
mov
shlb
gs
inc
lock
jmp
ds
add
test
pop
movsl
mov
add
cwtl
dec
stc
lea
lahf
cmp
jns
nop
sahf
iret
sub
out
adc
inc
xchg
add
aas
xchg
push
jno
pop
mov
ja
inc
pop
mov
arpl
fdivs
dec
out
fcmove
add
pop
xchg
mov
mov
push
mov
sub
out
pop
addr16
pop
jbe
fisttpll
mov
pusha
push
jbe
ja
out
push
xor
cmpsl
jne
jg
je
or
ret
mov
mov
xchg
mov
lcall
or
ja
cmpsb
pop
jmp
es
clc
sti
aad
mov
xor
or
mov
cmp
lods
jb
push
lahf
sbb
out
fistps
inc
hlt
add
daa
aas
enter
cld
jg
aad
scas
or
pop
lock
stos
fadds
lds
push
push
mov
clc
xor
fwait
repz
shl
popw
insl
pop
inc
dec
inc
movsl
sub
pop
rcl
lcall
lahf
adc
cwtl
call
mov
lret
mov
cmp
jb
xchg
mov
sbb
dec
xor
scas
mov
sub
jmp
xchg
insl
mov
mov
leave
add
pushf
bound
add
adc
gs
insl
mov
clc
pop
inc
xor
xchg
cmp
push
pop
aad
fwait
xor
lcall
rcll
decl
push
arpl
dec
movsl
mov
cli
stos
mov
pop
inc
aaa
add
xor
mov
xchg
sub
and
lods
loope
cwtl
and
stc
push
subl
fldl
imul
jl
mov
mov
adc
or
fisttpl
leave
ljmp
xlat
mov
push
inc
ds
fldcw
out
into
cld
cmp
push
outsb
mov
sub
mov
bound
lret
roll
addl
cmp
sti
scas
sahf
es
in
sub
ds
lods
repnz
pop
jle
dec
lahf
enter
mov
clc
fstpt
jns
insb
es
xchg
add
mov
lea
push
xor
pop
stos
aam
fnstsw
pop
pop
enter
sub
repz
stos
pop
sbb
sbb
mov
jle
in
jb
jno
es
push
fwait
scas
sub
cld
and
cmpsl
lea
je
movsb
mov
xchg
dec
jns
and
fwait
sti
pop
and
into
jnp
pop
xchg
hlt
in
cmc
in
in
xor
data16
and
add
stos
orb
fistpll
adc
add
push
add
sub
lret
xchg
pushf
stos
gs
arpl
in
push
dec
enter
push
inc
adc
sbb
dec
mov
jmp
shrl
adc
jne
pop
insl
jl
adc
push
mov
mov
push
push
inc
icebp
dec
xlat
and
popf
fisubrl
repnz
out
pop
hlt
pushf
inc
addl
movsb
or
adc
sub
jbe
xor
out
xchg
pop
int3
cwtl
mov
push
push
push
mov
mov
ret
xchg
scas
inc
push
repz
and
sub
not
test
jbe
sub
jge
js
test
lds
cs
jecxz
das
enter
lret
adcb
mov
fwait
add
xchg
sti
pop
pop
out
add
sub
aaa
sub
dec
inc
lock
xlat
test
pop
ficoml
test
jne
dec
call
in
mov
lcall
je
push
pusha
jno
lcall
lret
mov
fbstp
xor
jnp,pt
push
das
pop
fdivl
mov
inc
push
test
pop
push
push
icebp
inc
sbb
pop
mov
or
loope
testl
js
xor
ja
xchg
and
push
dec
mov
xchg
and
xor
sahf
sub
in
adc
js
test
outsl
sub
insb
test
add
mov
out
aam
sbb
stos
fcompl
pop
in
and
mov
insb
xor
and
nop
stc
mov
mov
mov
mov
js
xchg
pushf
mov
dec
stc
js
fwait
jmp
sti
and
jno
jg
lahf
dec
xchg
and
mov
clc
jb
mov
xchg
mov
adc
bound
iret
imul
aad
and
push
lods
add
ret
pop
add
ljmp
sub
test
or
pop
mov
pop
dec
mov
lods
ficompl
add
pop
jns
or
ds
ja
or
clc
mov
sbb
inc
movswl
jmp
sub
cmp
repnz
jne
mov
pop
mov
cmp
cmp
addl
lret
movsl
arpl
pushf
xchg
sub
and
dec
jae
sub
into
cltd
sbb
daa
pop
inc
add
cmp
inc
pop
xchg
arpl
lods
push
pop
adc
xor
ds
push
or
lahf
cmp
xor
ja
cmpsb
ficoml
cmpsl
fiadds
popa
cmp
push
push
inc
ss
in
mov
push
insl
enter
fnstenv
fistpl
sbb
inc
fsubrs
mov
push
sbb
test
movsl
shrl
std
and
sbb
xor
stc
adc
das
cltd
or
pusha
push
jp
imul
in
xor
aad
cmp
jae
push
pop
sbb
cmp
cld
mov
inc
dec
sbb
mov
mov
popf
into
mov
in
jmp
cmp
hlt
incb
dec
iret
repz
in
cld
jns
loope
lock
les
push
mov
push
out
into
xor
andb
add
xchg
leave
push
add
cs
and
add
mov
and
xchg
mov
mov
xchg
add
ja
mov
jecxz
xor
inc
out
loop
or
inc
push
call
movsb
orb
les
mov
fs
ja
or
or
mov
jmp
pop
fcom
add
sarb
sbb
mov
adc
xchg
ret
ss
mov
sbb
pushf
mov
xchg
xor
inc
aam
stos
stos
into
mov
rolb
sub
aaa
jmp
jnp
inc
hlt
xor
loopne
xchg
push
fisubl
cmp
mov
cltd
push
xchg
int
and
and
and
fstpt
aas
cmp
add
stos
push
lret
xor
jecxz
push
xchg
add
out
or
add
std
iret
sub
mov
roll
out
mov
clc
dec
scas
ja
shl
jmp
xchg
and
fiadds
lret
notb
jp
pop
sbb
ljmp
js
adc
sbb
or
cwtl
or
sub
stos
and
lret
mov
adc
cmp
mov
popa
mov
lods
pop
ret
icebp
push
jnp
mov
popf
inc
push
call
call
aam
mov
gs
push
xorb
ror
sbb
xorl
xchg
sub
sahf
daa
or
sbb
clc
mov
mov
push
daa
xchg
push
xchg
bswap
xchg
leave
add
jns
inc
xchg
push
push
cwtl
and
push
push
popf
cmp
ja
mov
nop
push
mov
mov
sbb
filds
push
pop
xchg
xchg
jne
aaa
adc
dec
leave
xchg
shrl
aaa
xchg
stc
lret
pop
hlt
jge
dec
adcl
std
lock
mov
lods
push
or
mov
out
xchg
in
inc
push
push
mov
add
loopne
sbb
dec
xchg
add
mov
rorl
stc
mov
insb
ja
idivl
lea
inc
rcrl
add
jge
push
aaa
mov
mov
mov
cs
xchg
add
enter
lods
hlt
mov
shrl
popf
insl
mov
dec
test
xor
jbe
mov
rol
and
gs
push
xchg
pop
or
fbld
in
dec
jne
lea
into
fistpl
imul
jp
dec
add
add
cmp
xor
xor
push
fwait
sub
aad
lea
cltd
stos
pop
mov
push
mov
push
scas
xlat
adc
cwtl
insl
lcall
dec
mov
lcall
cld
je
cmpsb
outsl
in
inc
add
mov
repnz
push
out
je
les
push
nop
mov
push
sbb
repz
inc
push
cwtl
loopne
dec
mov
dec
dec
inc
mov
mov
and
push
lret
cmp
cwtl
hlt
push
orl
inc
scas
test
aad
fistpll
xor
jmp
mov
mov
push
lea
sbb
pop
popf
scas
insl
loop
cli
roll
sbb
pop
sub
movl
add
adc
shrl
mov
out
test
fnstcw
lods
cmp
mov
sbb
push
jnp
and
std
dec
lahf
jnp
inc
stos
pop
sub
test
xor
cmpsl
repnz
lret
inc
mov
iret
mov
jg
sub
popa
mov
jae
pushf
or
or
pop
pushf
pusha
mov
adc
sbb
stos
or
xchg
fldt
cld
fldt
loope
lods
adc
sbb
lahf
in
aaa
hlt
inc
fisttpll
ret
nop
cwtl
xchg
inc
das
cli
inc
subb
aam
lea
pop
mov
pop
adc
push
ffree
ja
fsubl
sti
ja
add
ss
xor
out
mov
jmp
shlb
jb
jnp
mov
jno
cmp
mov
and
jns
fidivl
or
stos
dec
or
fidivrs
test
mov
andb
sub
jg
frstor
push
mov
pop
fwait
add
loopw
loop
fstps
mov
cltd
into
push
popa
fidivrs
jle
pop
cmp
popf
mov
or
test
aaa
in
mov
shll
sti
insb
imul
mov
jmp
addr16
jl
or
mov
fsubs
shll
adc
mov
sub
mov
loopne
imul
cmp
sub
jmp
jbe
inc
ficoms
ret
flds
jne
fdivs
in
mov
mov
mov
sub
and
push
sarb
bound
js
cli
jge
pop
clc
enter
les
pop
fnstenv
rcrb
int
xchg
leave
push
push
xchg
fildll
xchg
mov
sub
jns
loopne
idiv
mov
cmp
xchg
fwait
scas
shlb
sub
fisubs
test
popa
add
decb
leave
ljmp
stc
cmp
xchg
inc
test
mov
out
out
aad
les
and
mov
cmp
popa
sarb
ret
xchg
lods
mov
and
aad
aaa
testl
and
pop
sahf
pop
das
xor
inc
hlt
mov
xor
cmp
jo
jo
cmpsl
mov
mov
pusha
jg
pop
mov
mov
in
jmp
xor
insb
lcall
roll
push
jbe
jno
int3
sub
cli
or
in
mov
add
imul
mov
hlt
in
aam
sub
push
rcrl
sub
push
js
mov
jnp
std
lods
fmuls
pop
and
cwtl
jp
popf
dec
pop
fbld
and
jmp
jb
sbb
outsb
sbb
push
push
push
cmp
inc
jnp
sub
iret
scas
and
mov
and
lods
ljmp
push
xchg
out
push
cmpsl
or
vmread
fsubs
imul
sub
shld
or
and
orb
push
in
push
dec
sbb
jbe
dec
out
add
es
iret
int
cmp
xlat
jb
orl
hlt
addr16
mov
ljmp
or
sub
je
int3
jg
add
iret
or
sbb
aad
inc
xor
mov
xlat
add
mov
mov
cwtl
mov
dec
out
inc
jae
cltd
push
pop
lret
repz
or
sub
push
jne
hlt
adc
cltd
pop
cmp
and
dec
movsl
push
mov
loope
dec
ss
icebp
cmpsl
lret
mov
push
push
xchg
push
daa
jle
lods
lret
das
pop
add
stos
out
mov
and
mov
pop
fldt
jmp
scas
shlb
loop
sbb
add
push
jbe
mov
shll
daa
mov
rcrl
movsb
jbe
aas
xchg
push
sub
sub
mov
dec
arpl
rcr
das
and
jns
aaa
sbbb
xor
pusha
inc
mov
cltd
aaa
adc
test
out
adc
adcl
int
add
mov
stc
sbb
cmp
fistps
mov
cmc
mov
jae
push
pop
jbe
cmp
int3
sbb
mov
or
jbe
daa
pop
mov
ja
dec
movsl
leave
dec
loopne
push
or
dec
adc
cmpsl
mov
sbb
and
lret
jmp
dec
inc
jg
xchg
mov
mov
mov
sub
pop
sub
sbb
imul
lds
rcrl
adc
pop
pop
xchg
add
jle
fs
cmp
xor
inc
mov
hlt
xchg
mov
outsb
fnstenv
add
lahf
pop
add
out
movb
inc
and
jl
cwtl
ds
es
movaps
inc
nop
pop
in
and
enter
in
or
gs
adc
fwait
movsb
jnp
int3
pop
sbb
or
lods
call
mov
nop
aas
add
xchg
movsb
lret
cmp
jne
add
or
out
jp
rol
add
xchg
mov
mov
faddl
xor
shlb
or
push
leave
bound
fwait
push
jmp
jae
incb
dec
test
dec
pop
les
jg
xchg
push
jle
sbb
xor
test
jnp
arpl
filds
lock
sub
gs
mov
fcoml
mov
dec
icebp
aaa
aam
aas
faddl
xchg
int
jae
icebp
xlat
add
push
xor
cmc
push
repnz
mov
js
mov
popf
xchg
mov
xor
add
loope
sub
mov
dec
and
push
dec
jo
test
cmp
and
mov
lret
jp
push
and
add
fld
das
lret
popl
push
mov
jne
push
xlat
mov
jns
push
jbe
icebp
mov
sub
and
xchg
jno
or
pop
fwait
cmp
fcoms
negb
mov
jne,pn
and
adc
lahf
cltd
repz
dec
xor
xor
movsl
rolb
and
mov
data16
and
xorb
mov
push
xchg
dec
pusha
aam
call
push
jne
xchg
push
mov
fs
push
jmp
xlat
and
inc
mov
push
lock
in
push
dec
repnz
movsl
push
cld
bound
mov
push
adc
mov
js
out
popa
mov
or
and
pop
adc
mov
jmp
mov
jns
aaa
ficoml
cmp
mov
mov
aas
ss
dec
iret
fidivl
dec
mov
mov
nop
dec
sub
lods
cmp
dec
push
push
sahf
ret
repnz
sub
and
arpl
inc
popl
mov
mov
or
cmp
fcoms
jno
pop
dec
pop
aaa
pop
xor
in
inc
xchg
xchg
push
push
cmp
bound
xor
push
das
jb
sub
sub
adc
orb
xor
lret
test
pop
inc
adc
jmp
add
aas
sub
cmpsl
iret
xor
cmovle
lret
mov
or
pop
jbe
not
dec
mov
enter
jno
sub
inc
cmp
call
mov
arpl
js
cmpsl
xchg
xor
jbe
out
test
add
and
rcrl
and
out
lock
pop
push
clc
pop
mov
pop
mov
pop
xchg
or
rolb
sbb
mov
or
xor
jmp
mov
jo
icebp
mov
sti
adc
xchg
xor
cmp
and
movsb
xchg
pushf
cmpsl
jae
sarb
sub
cmp
sub
ror
pop
sbb
jo
in
push
adc
test
aaa
pop
fstpt
mov
mov
test
xor
test
push
push
aad
cltd
ljmp
dec
mov
dec
push
imul
std
sahf
movsl
in
pop
movl
or
stos
insl
hlt
ss
jl
pop
enter
inc
inc
or
mov
aaa
push
outsl
mov
gs
adc
sub
xor
int
dec
jnp
aas
xor
rcrb
data16
mov
inc
arpl
gs
fildl
add
adc
aad
dec
out
loop
xchg
fcoms
mov
icebp
lods
jns
scas
cld
adc
adc
pop
jns
loope
add
icebp
and
jl
div
or
sbb
pop
cwtl
push
test
cmp
sub
cwtl
add
cmpsl
pop
adc
mov
aas
sub
call
out
dec
mov
je
test
imul
add
int3
int3
dec
xchg
ret
mov
jnp
mov
jmp
pop
ja
imul
shl
xor
sub
dec
cmp
mov
lods
inc
cltd
lea
cmp
insl
sbb
push
jbe
or
adc
dec
jb
adc
sbb
lcall
push
or
or
gs
xor
cmp
sub
cmc
cmc
dec
and
or
addr16
adc
and
je
incl
cmp
jge
sbb
cwtl
push
lds
ljmp
jo
cli
xchg
aad
mov
cmc
into
andl
hlt
stos
mov
ljmp
les
adc
fnstenv
sahf
mov
sbb
jle
cmp
ficoml
loope
inc
in
or
jmp
xchg
nopl
push
mov
mov
cld
sub
pop
jecxz
push
fisubl
mov
cmp
cwtl
add
mov
shlb
shl
ljmp
sub
sti
mov
sbb
in
jae
lret
movsb
std
adc
movb
icebp
push
xchg
mov
out
imul
jmp
mov
outsb
and
xor
mov
call
lock
jmp
jo
ret
test
mov
ss
pop
add
ja
push
leave
fistpll
mov
push
sub
shr
sbb
out
scas
cli
fldt
inc
or
jmp
out
push
pcmpeqb
add
mov
dec
lds
dec
add
int
mov
jbe
rcll
repnz
mov
js
jge
dec
negb
xchg
cmc
cltd
stos
jnp
adc
mov
daa
hlt
mull
repnz
push
xchg
jno
push
mov
or
mov
push
fcoms
push
out
or
iret
dec
sti
jmp
test
out
mov
faddl
das
das
cmp
mov
cmp
outsl
push
mov
mov
mov
mov
sbb
jp
cmp
prefetch
sbb
imul
js
stc
movsl
pushf
push
movsb
mov
jo
mov
fisubrl
lret
stos
rorb
dec
push
imul
mov
cmp
gs
les
adc
fnsave
hlt
mov
idiv
lock
loop
dec
push
ret
pop
xchg
xchg
mov
fdivs
inc
pushf
lcall
inc
sbbb
aam
icebp
jne
movsb
push
cmp
mov
inc
lods
xchg
xlat
fistps
dec
adc
push
cmp
dec
lret
adc
pop
jg
lds
movsb
pop
push
int3
int
mov
or
sub
sub
or
adc
cmpb
pop
jnp
ljmp
or
pop
rolb
popf
out
inc
in
stc
jmp
push
lret
dec
cmp
test
testb
mov
cli
xchg
adc
adc
stos
add
sub
mov
add
jl
jbe
pop
int3
jle
dec
sti
adc
xlat
push
xchg
xchg
mov
imul
sub
call
movsl
hlt
into
or
fcomps
lds
jo
xchg
and
push
arpl
out
xor
call
xor
out
imul
mov
sub
jecxz
mov
ljmp
ds
dec
js
push
jge
cli
imul
andl
scas
jge
inc
mov
out
shr
adc
lock
inc
cmp
cld
cmpsl
or
mov
dec
cld
adc
loopne
repnz
fadds
loop
out
ret
inc
repz
dec
repz
push
mov
xor
lret
xchg
call
lahf
push
xor
pop
fcomp
cld
push
bound
mov
jbe
std
sub
dec
push
cmpsl
cltd
and
add
lret
xchg
mov
lods
jl
mov
mov
or
pop
repnz
cmpsl
jge
outsb
dec
push
lock
int3
xor
cwtl
or
push
ret
inc
or
xchg
pop
mov
arpl
xchg
jmp
mov
push
dec
outsl
mov
dec
pop
jns
into
in
sub
pop
ja
mov
or
outsl
sbb
std
lcall
mov
aaa
cld
nop
shlb
out
mov
dec
sbb
rcr
je
arpl
outsl
cwtl
cmp
out
cmp
inc
sti
outsb
mov
pop
psubusw
push
cmpsb
out
aam
es
dec
jns
cmp
ja
fidivrs
or
xor
arpl
push
mov
pop
mov
jg
xchg
and
test
cltd
xor
or
jmp
das
ja
pop
jg
adc
pop
test
pop
cwtl
test
shl
icebp
and
outsb
pushf
or
pop
daa
test
push
subl
or
enter
jbe
out
lea
stc
add
or
fsubrl
je
std
sbb
jecxz
xchg
orl
xchg
sarl
loope
sbbb
mul
icebp
inc
out
push
fwait
mov
jnp
xor
push
xchg
lods
test
inc
xchg
lds
sub
dec
lods
mov
or
out
fnsave
dec
jmpw
mov
sbb
inc
sbb
sub
sub
pop
aaa
rorb
lret
jne
imul
push
fldl2e
test
push
adc
pushf
fwait
jae
sar
and
cmpsb
add
and
xchg
and
bound
jnp
in
jle
and
sarl
bndldx
pusha
sub
jp
test
xchg
daa
in
inc
xchg
insl
popf
cwtl
mov
mov
mov
or
xor
scas
outsl
and
cwtl
lcall
nop
inc
sub
outsl
or
mov
ljmp
mov
mov
mov
or
sbb
inc
adc
test
les
ja
lods
js
test
inc
cmp
xor
clc
dec
fwait
or
bound
test
and
ljmp
outsb
es
ficomps
andl
jno
or
std
push
dec
mov
or
jecxz
jmp
fistpll
or
repnz
popa
jo
dec
lods
movsb
push
iret
sbb
aam
leave
push
cmc
aam
pop
sub
sbb
mov
inc
xchg
sub
lret
add
dec
push
jnp
add
shrl
mov
and
cltd
mov
dec
jb
push
pusha
test
or
mov
sbb
mov
add
scas
scas
push
std
mov
arpl
xor
mov
pop
push
xor
enter
pop
loopne
nop
jl
mov
sub
dec
mov
popf
inc
js
movsb
push
dec
ja
mov
iret
subb
aad
cwtl
jp
push
repz
out
xlat
and
out
subb
fisttpll
jl
push
aam
nop
cwtl
imul
cs
dec
pusha
cld
xchg
mov
dec
cld
jge
bound
jno
jb
inc
test
add
adc
insb
lret
and
dec
mov
dec
insl
outsl
iret
movsb
fisttpll
pop
xor
push
mov
pop
dec
ja
pushf
xor
loope
or
enter
push
test
mov
shl
clc
divb
adc
or
add
neg
cmp
hlt
sub
add
inc
xchg
mov
arpl
jge
mov
sub
sbb
jp
xchg
push
ss
pop
sub
xor
stos
lret
cmp
push
mov
inc
mov
dec
cld
lret
sbb
and
xchg
jecxz
hlt
or
dec
cmp
xchg
and
fisubrl
test
hlt
mov
and
jmp
lret
sub
mov
aad
std
imul
pop
call
sbb
mov
push
mov
outsl
out
cmp
gs
ret
jb
push
inc
xchg
inc
jb
mov
loop
out
outsb
cmpsl
and
aas
inc
or
xor
mull
lahf
cltd
add
mov
pushf
lds
gs
pop
lcall
xchg
inc
nop
mov
mov
xlat
cltd
sahf
ljmp
cs
incb
shll
fbstp
pushf
mov
or
stc
add
xor
xor
lret
and
jo
cmpsl
fidivrs
lods
iret
xor
insb
mov
ss
jbe
cmp
cmp
mov
xchg
inc
loope
jecxz
mov
mov
push
in
hlt
pminsw
sbb
int3
or
sahf
fs
dec
add
scas
pop
int
movsb
iret
xchg
mov
mov
stos
lea
jne
rcr
mov
sub
inc
sbb
out
std
and
call
push
jle
repnz
lods
jno
inc
cmpsb
subl
sti
xor
mov
push
sahf
test
xchg
rcl
lret
mov
push
ss
sti
jb
imul
push
stos
scas
dec
xchg
push
rolb
test
test
lea
in
lcall
int
mulb
cmpsb
xchg
jno
cmp
sti
or
lret
out
icebp
sub
pop
jb
mov
mov
int3
cli
inc
pop
dec
push
loopne
mov
sub
xchg
cmpl
adc
clc
cmp
aas
cmp
push
leave
int
jge
stos
int
aam
divl
je
sub
repnz
sub
ss
shlb
pop
arpl
jle
pop
mov
push
jmp
sub
pop
orb
cmpsb
dec
pop
and
imul
insb
scas
dec
lods
sti
mov
xchg
inc
pop
shll
jge
adc
jmp
mov
lret
mov
jne
sub
push
dec
add
bound
mov
insl
in
ret
adc
and
jp
or
or
xchg
loop
sbb
pop
and
pop
aam
push
sub
and
idivl
test
les
popa
cli
xor
lret
push
mov
roll
jp
cmp
sti
imul
or
dec
jmp
das
es
rolb
push
xor
xor
push
push
pop
daa
mov
popa
js
or
sar
xor
das
mov
sub
push
sbb
jnp
inc
pop
test
popf
mov
xrelease
nop
lret
out
xchg
or
add
mov
add
lock
inc
jns
adc
fwait
js
dec
fdivrl
lods
jbe
stos
dec
shl
das
dec
mov
mov
dec
xor
mov
test
imull
cld
fldt
sar
in
cmp
daa
nop
jp
fistl
inc
leave
jl
imul
pop
repnz
add
inc
popf
dec
cs
xor
mov
push
repz
pushf
xchg
mov
pop
fs
and
and
inc
testl
int3
and
test
pop
je
push
test
sub
pop
mov
xchg
jnp
dec
call
or
jns
aad
xchg
aaa
shll
mov
fnstcw
push
dec
pop
data16
xor
dec
test
jg
xchg
fwait
data16
jns
push
ret
add
gs
sbb
mov
xchg
lahf
or
mov
outsb
std
or
dec
inc
sbb
popa
aaa
f2xm1
lcall
mov
in
sbb
fld
dec
pop
iret
out
push
xor
aad
out
lret
stc
add
ds
xchg
sarl
cmovg
rcl
jne
push
mov
outsb
inc
push
xor
dec
sbb
in
js
cwtl
sbb
inc
xchg
push
rorb
or
lcall
cld
sub
sub
and
and
xor
pusha
cltd
or
clc
aad
add
mov
and
adc
mov
jmp
cmc
xchg
mov
fmul
add
mov
aad
ja
jns
aas
or
pop
inc
push
push
dec
movsl
testl
movsl
ljmp
div
in
leave
sbb
and
stos
mov
addl
loopne
fcmovne
insb
fcmovne
dec
aaa
and
mov
scas
push
cmp
cmc
jnp
pusha
sbb
sbb
sbb
pop
sar
lock
xchg
xlat
popf
adc
xchg
imul
xlat
adc
xchg
in
lret
dec
lds
out
push
popf
pop
ss
mov
sbb
xor
loope
gs
pop
and
out
sbb
pop
mov
pop
fyl2xp1
push
cmpsb
adc
sbb
ss
mov
mov
hlt
jnp
nop
sahf
xchg
fiadds
mov
repz
ficoml
inc
sbb
iret
lds
pushf
pop
cs
inc
in
and
std
ret
mov
inc
push
xor
stc
push
mov
inc
mov
push
pop
sub
aaa
pop
push
dec
xchg
pushf
fidivs
mov
stos
loopne
xchg
add
sub
pusha
xor
pop
dec
fdivr
mov
sub
in
mov
cwtl
outsb
in
divb
addr16
loope
repz
mov
decb
test
mov
mov
sbb
xlat
mov
orl
lods
in
lret
dec
cmp
jbe
js
and
mov
jnp
jg
insl
je
inc
ffree
mov
ss
add
push
shrl
mov
lods
lahf
jmp
dec
cmp
pop
mov
sbb
test
imul
das
and
inc
adc
inc
sbb
sub
ja
pop
inc
stos
jno
pop
or
inc
test
xor
leave
mov
pop
xchg
lods
cmp
add
cltd
or
sbb
scas
lods
imul
xchg
push
sub
mov
jmp
cmp
xchg
xlat
decl
mulb
sub
scas
ja
fisubl
mov
pop
dec
adc
xchg
mov
cltd
stos
cmp
stos
dec
popf
jmp
cwtl
cmp
push
lea
leave
mov
mov
imul
mov
mov
fisttps
xor
push
jecxz
out
in
out
imul
test
add
idiv
inc
sbb
cmp
xchg
pop
adc
jle
popf
rcrb
icebp
add
das
dec
lock
aas
adc
pop
mov
pop
std
pop
out
lahf
push
ljmp
dec
scas
mov
pusha
or
jp
fstpt
test
push
cmpsl
lahf
pop
ficomps
loope
jo
jle
add
jge
sti
mov
call
sbb
xor
cmp
insl
cmp
dec
rcrl
inc
fidivl
lods
dec
pop
cmp
xor
icebp
push
pusha
daa
jge
sub
add
nop
sub
dec
inc
loope
and
xlat
lods
ljmp
pop
add
pusha
movsl
jp
cwtl
cmp
mov
ss
dec
jns
frstor
daa
in
clc
push
mov
fistpl
movsb
jno
pop
mov
add
test
lahf
push
aad
int3
dec
add
and
dec
cld
loopne
daa
xor
in
cmp
sbb
mov
sbb
mov
pop
out
nop
aam
lahf
mov
dec
mov
aas
and
lods
xchg
adc
in
pop
xchg
sub
in
popf
mov
xlat
mov
pusha
dec
mov
sub
pop
or
movsb
dec
adc
ja
gs
push
cmp
pop
mov
fisttps
pop
and
pmaxsw
scas
les
test
adcl
jb
lcall
mov
sub
mov
xchg
xor
outsb
inc
cmp
rcl
or
push
in
rolb
inc
icebp
sti
movsb
adc
popf
das
insl
shl
dec
aas
xchg
push
cmpsl
lahf
test
ja
das
orl
cmpsb
repz
push
cltd
xor
mov
jmp
sub
pop
aas
insl
aad
movsb
xchg
in
lock
test
mov
scas
dec
aam
jg
dec
lods
xchg
cmp
or
daa
sbb
addr16
pop
sbb
xor
pop
sbbl
addr16
jle
cmp
adc
jmp
mov
sbb
cltd
lock
xchg
adc
divb
stos
aam
jg
dec
orl
icebp
sub
orb
xchg
lret
mov
pop
pusha
pop
inc
push
push
lcall
bound
es
jge
test
and
sub
jnp
or
in
lcall
sahf
inc
repnz
pop
cmp
mov
and
rclb
jnp
cmp
mov
fnstsw
sti
pop
inc
cmpl
and
enter
shlb
lods
clc
lcall
fs
addb
gs
cmp
sub
cs
pusha
add
jb
cmpsb
addl
cmp
inc
inc
cmp
xlat
xchg
mov
setg
mov
call
cmp
inc
fwait
scas
xchg
ret
inc
xor
pop
dec
in
ret
add
sarb
xlat
cmp
mov
xor
mul
add
test
or
add
pop
jle
cmpsb
mov
push
rorb
lock
jp
add
or
sbb
inc
push
push
xchg
iret
sub
shrl
ss
jnp
aas
dec
repz
add
mov
cs
jae
xchg
insl
mov
ret
sbbb
xor
cld
loopne
das
sub
mov
xchg
cmp
cmp
add
frstor
cmpsl
rorl
xchg
pop
mov
clc
fucomip
cmp
or
insb
lds
orb
inc
sti
decb
cwtl
aaa
xchg
sbb
push
stc
xchg
and
jmp
push
and
aas
iret
lcall
adc
mov
adc
mov
pop
and
mov
fcomp
out
pop
rclb
and
and
dec
sti
int3
mov
daa
and
lahf
cmp
push
std
pop
div
mov
ds
mov
jno
add
in
cmp
jg
mov
pushf
cwtl
jecxz
adcb
aam
es
inc
lret
pop
and
test
mov
push
in
scas
insb
mov
pop
fsts
loopne
and
pop
sbb
mov
pop
pop
or
mov
notb
add
repz
iret
add
cmp
xor
sub
push
mov
sub
testl
arpl
out
pop
cmp
jmp
dec
int3
or
push
gs
inc
icebp
negl
mov
push
mov
jge
bound
das
and
add
or
add
mov
testl
mov
data16
sbb
dec
push
outsb
sbb
scas
mov
fdivs
inc
fcoml
sbb
xor
push
das
adc
sub
clc
or
mov
repnz
test
lea
fidivrs
mov
subb
inc
pusha
mov
dec
rcll
clc
sbb
pusha
push
or
sub
push
gs
sub
cmp
ret
and
sahf
scas
jmp
dec
loope
fldenv
test
mov
out
dec
nop
rolb
xchg
data16
lea
dec
mov
rclb
dec
je
fsubl
push
mov
mov
push
bswap
aad
and
and
and
push
cltd
cmovno
jnp
or
gs
sbb
inc
mov
testb
sbb
loop
push
dec
jle
xchg
out
call
ret
ffree
test
xchg
ds
pop
xchg
mov
outsb
fs
stos
xchg
jne
mov
add
lret
leave
and
push
mov
xchg
test
lahf
decl
les
xchg
sub
iret
jle
cli
mov
mov
jne
push
adc
sub
insl
push
jl
es
dec
cmp
movsl
fwait
cmp
pusha
adc
adc
xchg
les
xorl
jp
and
or
push
loopne
aam
dec
aaa
in
ret
call
sbbb
in
outsb
subl
pop
xor
in
fdivl
repnz
xchg
insb
pop
stos
cmpsl
add
xchg
arpl
lcall
jns
hlt
test
dec
xor
cld
mov
sbb
aam
movl
cltd
imul
icebp
cmp
dec
je
out
js
popf
sbb
testb
mov
push
mov
jp
or
int
mov
mov
ret
mov
nop
mov
and
or
out
xchg
cmp
jns
and
cmp
aaa
mov
xchg
inc
in
mov
xlat
inc
mov
xor
pop
mov
and
xor
scas
sub
imul
mov
cltd
rorb
sub
push
dec
in
xchg
xchg
ret
lret
push
lret
in
xor
call
push
mov
mov
lods
aad
jg
fnstsw
add
jecxz
pop
mov
punpckhdq
mov
clc
addr16
sbb
lret
pop
in
cli
pop
add
and
andb
push
mov
pop
aad
adc
jle
ja
dec
mov
and
push
cmp
out
lds
sub
and
mov
es
imull
add
lret
std
dec
push
sbb
pop
imul
fcomps
and
shrb
or
xchg
iret
sbb
fisubrl
test
hlt
sub
addb
xchg
dec
xor
mov
icebp
push
xor
mov
into
outsb
jmp
in
dec
or
fsubl
mov
insl
rolb
jnp
cmp
fcmovb
insl
push
cwtl
adc
jecxz
rolb
sbb
and
dec
sbb
lods
aad
add
jb
or
adc
and
sub
lds
mov
sarb
pop
add
bound
add
jp
cmpsb
stc
out
inc
int
ret
jae
adc
fiaddl
in
mov
popa
dec
in
cmc
jge
aad
je
jno
popa
mov
and
or
cli
stos
test
out
sbb
in
aad
out
std
or
xchg
inc
pop
sbb
ja
ljmp
test
js
test
xchg
outsb
and
mov
in
pop
mov
jecxz
jns
gs
and
dec
jae
fs
cmp
inc
in
les
xlat
lret
cli
lea
fsubp
inc
inc
sub
outsl
push
test
xchg
jmp
jecxz
movsb
int3
xchg
inc
lods
or
inc
ret
lds
cmpsl
lock
inc
pop
fnstenv
and
pop
pop
out
in
or
sub
mov
xchg
jp
inc
test
loop
aaa
dec
test
push
dec
push
jle
jne
int
cmc
jg
pop
push
test
ret
push
in
cltd
cmpsb
out
mov
iret
test
js
mov
ljmp
mov
adc
iret
mov
push
lahf
push
stc
push
and
jg
dec
div
sar
mov
fidivs
add
lret
aas
mov
in
cmp
mov
jmp
pop
jns
push
push
jae
pop
test
inc
fmulp
jmp
adc
cwtl
mov
xor
sub
push
dec
inc
add
out
in
nopl
cmp
orl
mov
popa
fcmovu
dec
pop
addr16
cltd
push
mov
popa
ss
sti
inc
xchg
test
xchg
add
lock
clc
rcrb
or
cmp
push
xchg
aaa
aas
dec
pop
or
in
fisttps
jmp
mov
pop
dec
dec
in
cmp
test
clc
lods
aaa
cwtl
test
mov
aaa
dec
cmc
sbb
loopne
dec
lcall
ret
jne
push
ret
dec
mov
sub
negb
lea
or
cltd
adc
fistpl
xchg
xor
nop
jp
movsbl
cmpsb
pop
imul
lret
jmp
dec
aas
sbb
fdivl
push
xchg
arpl
lcall
mov
push
pusha
into
push
mov
cld
imulb
push
test
cmp
jge
ds
out
dec
les
lods
cmp
push
into
cmpsl
mov
and
je
data16
xchg
aad
xlat
popf
clc
int3
ja
add
pop
fisubrs
lea
daa
fldcw
push
mov
inc
arpl
add
adc
or
cmp
notl
pusha
lock
jge
fwait
xacquire
out
clc
jns
notl
jne
sub
push
jns
sub
sti
and
mov
aaa
and
add
sub
add
xchg
scas
fcomps
leave
imul
sub
xor
push
mov
jg
mov
pop
pusha
add
arpl
push
adc
sub
lret
jg
lret
rcl
pop
test
and
inc
or
stos
sarl
iret
and
dec
xor
hlt
fnstsw
js
aam
pop
mov
cmc
fists
xchg
sbb
stos
inc
jns
or
test
or
hlt
cld
shl
orb
sar
imul
and
mov
fcomps
xor
mov
daa
xorb
cmc
cli
and
jle
std
dec
ljmp
js
setg
aam
call
dec
dec
pop
dec
cld
or
xor
push
adc
adc
movsl
sub
add
and
loope
jmp
cli
fisubs
clc
sbb
cmc
push
out
stc
clc
mov
ljmp
in
xchg
pop
jg
or
push
push
inc
or
cmp
xor
and
shr
mov
aas
test
jnp
cmpsl
xlat
and
jle
test
lret
call
adc
dec
xor
add
loope
cmp
in
lret
inc
pop
test
jp
lods
and
repnz
sahf
sti
jo
xor
insb
pop
cmc
int3
xor
xchg
adc
cltd
jp
cs
pop
pusha
int3
mov
or
xor
insb
push
dec
add
sub
xor
and
das
scas
int3
iret
xor
shll
subb
lock
pop
fs
xchg
and
sub
or
nop
push
and
xchg
cltd
test
cli
cltd
inc
jge
pop
jne
inc
adc
mov
mov
add
adc
movsl
cmp
into
cmpsb
mov
aad
iret
scas
mov
mov
pusha
fwait
sahf
push
pop
outsb
xor
pop
cmp
addr16
sub
out
pop
test
sub
aaa
sub
sbb
pop
std
mov
push
sub
out
int3
jae
shlb
sbb
outsb
cmp
sahf
pushf
popl
pop
inc
fadd
xchg
arpl
lcall
fmull
scas
jmp
repnz
hlt
ds
or
cmp
sbb
jmp
mov
mov
and
pop
in
or
repnz
jae
push
mov
cld
push
js
xchg
mov
scas
mov
mov
push
in
mov
cwtl
sub
inc
jge
mov
mov
mov
mov
mov
sub
mov
or
xchg
xchg
mov
nop
ss
xlat
or
pop
popf
stc
into
in
enter
mov
mov
lret
xchg
adc
fdivrs
ljmp
jns
or
mov
jb
roll
popa
in
ds
lock
test
push
js
jnp
mov
xchg
xchg
out
clc
call
sub
sahf
inc
push
dec
sub
lgs
data16
cltd
aam
pop
sbb
jecxz
jl
imul
sbb
lret
push
ljmp
mov
ljmp
mov
push
and
addr16
sahf
fdiv
aaa
sub
mov
dec
mov
mov
sub
mov
imull
mov
add
subb
or
push
lock
lcall
and
pop
fimuls
ficoml
pop
lods
jg
or
mov
loopne
or
push
jmp
shrb
inc
loop
sbb
push
xlat
pushl
pop
aam
dec
cmp
and
cmp
test
stc
mov
ret
enter
mov
xchg
jbe
lret
leave
in
cmp
xchg
sahf
popa
mov
cmp
mov
mov
mov
jns
inc
sub
outsb
stos
aaa
leave
cld
popa
xchg
push
aas
in
das
sub
decl
push
inc
js
and
loop
shl
dec
inc
arpl
cmp
add
iret
mov
dec
xchg
or
in
push
cmp
dec
jbe
mov
mov
adc
cltd
mov
adc
rcrl
addr16
jle
mov
fcompl
push
cli
ljmp
je
fidivrs
popf
sbb
xlat
sub
xor
jp
add
mov
test
jmp
jnp
pop
out
scas
popf
loopne
mov
mov
pop
bound
lcall
in
mov
cltd
inc
xchg
popa
xchg
ljmp
sbb
insl
lds
pop
sbb
jmp
test
aam
xchg
jno
std
push
repnz
cmp
adc
inc
iret
mov
repnz
sbb
repnz
add
jns
popf
icebp
push
fidivs
jecxz
call
orl
adc
cld
add
push
pop
jecxz
mov
lahf
pop
push
fs
xor
shr
sti
sar
cmp
push
icebp
adc
cmpsl
adc
dec
nop
jmp
inc
or
ss
jp
nop
fadds
xor
and
xchg
es
je
sub
pop
mov
or
inc
adcb
mov
fucomip
push
loopne
ja
xor
add
push
xor
divl
mov
adc
push
data16
out
xchg
sub
std
out
cmp
jo
rcl
adc
pusha
fwait
cwtl
jns
imul
fsubr
pop
dec
imul
xchg
xchg
sub
cmp
mov
imul
fdivrs
shll
ret
push
hlt
adc
jle
sub
popa
mov
das
gs
pushf
dec
xor
repz
call
cltd
stos
pop
push
xchg
popf
jb
xchg
sarl
jmp
mov
mov
clc
dec
jne
rcr
movsb
jmp
mov
dec
es
leave
out
cmp
fisubrl
jmp
outsl
pop
clc
add
adc
insl
mov
ret
pop
ds
repnz
imul
adc
push
test
out
sbb
dec
lds
lahf
ja
iret
fsubrs
pop
pop
pop
add
xor
imul
cmc
call
bound
test
stos
push
inc
xchg
inc
inc
movsl
mov
dec
jp
js
jbe
dec
insb
into
mov
ja
jns
xchg
fadd
inc
fwait
pop
daa
add
lea
or
jge
push
or
mov
loop
sbb
mov
xlat
loope
popf
pop
pop
popa
dec
sarb
addr16
cmpsl
scas
cmp
mov
ret
or
sub
mov
xchg
test
xor
xchg
movq
inc
jbe
test
repnz
jp
rol
in
movnti
cwtl
sarl
cltd
jecxz
lods
popf
ljmp
loope
pop
pop
jl
fsin
add
push
bound
je
shl
mov
push
or
sbb
mov
mov
xchg
lock
loope
fwait
mov
in
sarl
pop
aam
lret
aaa
cld
rclb
mov
and
lcall
test
adcb
cmpsb
test
shl
stos
inc
ss
std
fstpt
push
add
fstpt
add
jmp
imul
popf
add
das
fisubl
pop
jno
pop
pop
in
add
mov
and
jg
mov
xlat
out
pop
push
in
lods
xlat
insl
jle
ss
fwait
popa
pop
shl
mov
dec
in
push
shll
xchg
icebp
shrl
jb
fldcw
lods
inc
sub
sbb
xchg
cmc
testb
out
jl
int3
mov
popf
or
outsb
mov
loopne
stos
inc
out
xchg
mov
push
push
outsb
adc
stos
inc
sub
cmpsl
stc
roll
push
mov
add
mov
dec
scas
push
adc
mov
hlt
jb
push
adc
or
cli
ds
adc
fcoms
mul
push
xor
out
xlat
test
xlat
sbb
dec
aam
imul
push
sti
inc
sbb
mov
inc
sbb
daa
inc
cld
pop
dec
push
iret
nop
cmp
arpl
pop
loope
hlt
dec
sarb
das
sahf
fsubl
aas
lods
or
jle
lea
jne
sub
sub
mov
out
fdivl
dec
lcall
push
mov
or
push
lock
sti
pop
fdivrs
cld
mov
xor
mov
daa
xchg
and
or
dec
hlt
subb
aam
or
clc
or
scas
xor
mov
mov
rol
inc
xor
add
fcoml
fstpl
daa
and
fnsave
adc
and
aad
mov
lds
adc
mov
inc
inc
push
icebp
pop
in
mov
xchg
adcl
daa
cwtl
add
scas
xor
out
roll
jns
mov
iret
leave
pop
push
add
dec
adc
stos
xchg
les
or
inc
shlb
xchg
orl
fsubrl
pushw
push
xchg
adc
lds
xchg
pop
mov
lret
jno
fimuls
mov
inc
jl
add
push
cmp
xor
push
pop
mov
push
or
adc
test
or
dec
cmc
cmp
jge
push
in
inc
push
jbe
icebp
pop
dec
scas
jge
and
lret
cld
cmpsl
inc
xchg
pop
push
lea
scas
push
std
cwtl
xchg
pop
pop
push
fdiv
mov
negl
pop
insl
xorl
clc
pusha
mov
leave
int
scas
call
popa
jns
mov
inc
jae
mov
dec
inc
int3
movsl
out
adc
stc
out
fdivrp
mov
int3
mov
ja
movsb
inc
fimull
imul
orl
imul
shl
bound
es
in
or
mov
negb
std
mov
pop
enter
out
mov
insl
ds
out
mov
rorb
mov
pushaw
ljmp
leave
mov
jns
xor
cmp
mov
jne
pusha
sbb
dec
mov
int3
es
adc
sahf
sbb
fcmovnbe
das
orb
mov
into
xchg
push
loop
xor
mov
sbb
push
and
frstor
rclb
add
iret
xchg
jle
jo
aad
popl
adc
iret
jecxz
push
insl
jbe
lods
popf
cli
lods
mov
lahf
les
sbb
shll
jno
mov
add
pop
sbb
mov
lret
add
popf
inc
fimuls
jo
or
popf
and
inc
jno
sbb
out
notb
pop
arpl
adc
aad
hlt
cmp
cs
mov
icebp
call
lods
xor
ljmp
in
xchg
fldl
sbb
mov
ret
sbb
insb
mov
jnp
movsl
mov
adc
imul
jb
nop
in
fistpl
das
mov
or
rcl
mov
xchg
cld
jl
scas
ret
iret
lea
jns
jbe
stos
rolb
lock
mov
adc
cmp
or
pop
scas
popa
pop
inc
fcoml
cmp
pop
push
cmp
int
push
fsub
adc
inc
test
cwtl
int3
mov
mov
sub
cmp
lods
jnp
pop
jmp
popa
mov
je
jmp
shl
or
loop
out
xor
cwtl
adc
cld
lock
push
nop
notl
iret
push
sti
cmp
adc
add
cmc
sahf
data16
int
mov
add
cmp
jl
cmp
imul
mov
stos
ja
mov
or
dec
xchg
in
pushf
mov
stc
jno
or
outsl
xchg
andb
repz
add
ret
hlt
xor
gs
dec
insb
or
clc
ficompl
sub
sti
fsubs
xor
lea
int
mov
add
mov
inc
aad
lahf
push
mov
inc
mov
fnstsw
push
mov
mov
jmp
nop
adc
icebp
jo
mov
or
sub
xchg
pusha
test
es
add
int3
sbb
and
push
mov
imul
mov
ds
addb
xchg
cld
lcall
sbb
int
pop
push
mov
xlat
and
xchg
icebp
xchg
xchg
push
insl
aaa
or
add
pop
mov
mov
and
pop
mov
dec
or
adc
andl
stos
lahf
push
adc
and
mov
xorb
loope
cltd
jmp
pop
push
repnz
mov
push
xlat
or
pop
loopnew
mov
in
lods
std
mov
ss
in
movsb
cwtl
cmp
inc
mov
adc
iret
lods
mov
jno
jp
hlt
in
mov
icebp
out
pop
add
pop
lds
fcomps
mov
outsb
or
sbbb
inc
loope
scas
pop
adc
shrb
cld
out
js
push
jno
filds
xor
add
pop
inc
adc
inc
sub
loopne
cmp
lcall
sbb
adc
cmp
dec
js
jbe
mov
push
inc
dec
inc
cld
add
mov
icebp
xchg
or
and
xchg
out
xabort
ja
dec
dec
and
dec
push
and
das
push
pop
lock
fnstsw
pop
ficoms
leave
pop
or
inc
punpckldq
call
add
jg
int3
and
hlt
mov
rep
dec
add
outsb
stc
xor
pop
cmp
test
js
hlt
outsl
mov
ljmp
fimull
fimuls
aaa
cltd
and
push
push
bound
and
jmp
fsubrs
sub
push
jns
movsb
cmp
push
scas
add
and
arpl
testb
in
lds
jnp
pop
cwtl
fbld
or
pop
dec
test
xchg
imul
inc
sbb
stos
loop
xor
jns
fldenv
cwtl
xor
lods
sti
inc
mov
push
pop
loop
dec
adc
mov
push
xchg
adc
mov
shrl
fdivl
or
push
fiadds
adc
or
sub
idivb
lss
jns
adc
out
test
mov
incl
fbstp
fs
dec
jle
loop
clc
int
add
mov
adc
enter
stos
mov
fs
stos
fsubp
jmp
push
int
or
mov
fst
add
aas
mov
mov
out
outsl
inc
xor
pop
lock
rcr
sbb
cli
sub
loope
in
pop
aaa
adc
mov
gs
jns
inc
mov
xorl
xor
sbb
cld
and
xchg
sub
pushf
ds
imul
inc
sub
mov
dec
sub
lods
jae
inc
or
xor
mov
lock
mov
xor
xchg
push
add
cwtl
mov
insl
adc
mov
jl
loope
mov
jnp
iret
pop
jp
xlat
xor
inc
push
xchg
stos
loope
pop
mov
push
movsl
imul
cwtl
imul
push
dec
in
nop
xor
mov
fidivrs
imul
dec
ret
mov
mov
adc
xor
es
dec
in
sub
str
mov
imul
push
fiaddl
aad
imul
xchg
jge
inc
mov
inc
icebp
and
pusha
dec
cltd
sub
jle
add
sbb
add
cmpsl
cwtl
sub
cltd
stos
test
lret
popf
insl
inc
mov
repnz
inc
insb
fsubl
add
dec
test
and
loop
xchg
sub
shrl
idivb
imul
or
sub
mul
xor
pusha
cmp
xor
dec
icebp
pop
aad
test
jl
cs
stc
ljmp
sbb
cld
xchg
cmpl
cmpsl
andb
and
and
xchg
call
mov
or
jmp
inc
pushf
push
mov
jg
inc
xchg
add
sub
sub
sbb
test
outsb
gs
out
imul
push
sbb
lock
cltd
jbe
cmp
leave
and
and
mov
mov
mov
js
mov
es
jno
out
pop
hlt
pop
dec
cmp
cmpsb
adc
push
pop
loopne
and
shrl
pop
lock
mov
das
push
or
shll
dec
iret
mov
sbb
fwait
mov
sbb
push
cmc
loope
mov
movsl
xor
outsb
mov
ljmp
test
inc
jp
fstpt
lret
sbb
loop
adc
mov
nop
mov
sub
jbe
inc
push
push
cmc
sbb
cmpsl
jae
fmuls
xchg
addl
inc
lret
mov
outsl
or
push
inc
out
jge
push
cmp
rcrl
arpl
dec
sbb
hlt
sbb
and
test
fdivs
adc
pop
pop
pusha
popa
add
lds
mov
cmpsl
xchg
data16
scas
sub
cwtl
sbb
lods
xor
xchg
mov
mov
int
dec
sub
iretw
insl
sub
jle,pn
xor
addr16
repz
icebp
push
insb
ljmp
outsb
lds
xor
and
mov
jo
in
mov
pop
sub
mov
in
test
push
mov
jbe
cmp
push
pusha
lods
ss
mov
in
xor
cmp
test
xchg
lret
jo
fbstp
out
ljmp
jp
jbe
jnp
cmp
xorb
xchg
sub
rcll
and
or
rol
fwait
shlb
jmp
fs
jo
push
mov
mov
sub
add
or
and
addr16
xchg
lock
cmc
xchg
bound
jmp
jp
push
imul
repz
aas
mov
sbb
fstp
ret
dec
cli
repnz
lods
add
xchg
fadd
and
pop
mov
mov
xchg
in
jo
or
push
sbb
jle
imul
cmp
data16
pop
testb
cmp
and
xor
nop
cmpsl
bound
jae
js
test
push
mov
or
mov
push
hlt
sbb
flds
sub
fwait
sbb
arpl
out
fwait
sbb
enter
inc
fs
and
repz
popa
fisttps
sbb
and
rolb
js
daa
push
nop
inc
inc
outsb
out
in
push
sub
fwait
jae
movsl
jno
notb
inc
adc
mov
xchg
mov
jecxz
and
in
and
sub
push
adc
scas
and
data16
add
mov
mov
aaa
xor
fisttps
and
xor
dec
sub
in
adc
mov
lea
adc
sbb
and
mov
mov
out
and
aaa
adc
dec
in
sub
xchg
jno
jecxz
xchg
in
mov
lcall
andl
sub
neg
adc
jl
jp
jmp
dec
insb
xchg
mov
sub
js
nop
out
sub
loope
jne
add
push
stos
push
rcll
cmp
sbb
xchg
jge
inc
adc
xlat
mov
sbb
or
fwait
popf
pop
push
aam
jb
push
sahf
int3
add
mov
test
cmp
xor
call
push
dec
insl
je
add
movsb
mov
stos
jl
cltd
enter
inc
jl
movsl
mov
mov
shr
mov
lock
lret
sub
jl
les
pop
test
mov
les
push
dec
fwait
jb
leave
nop
inc
jmp
adc
mov
jecxz
mov
std
add
pop
mov
leave
imul
call
ljmp
pushf
mov
push
push
pop
add
inc
dec
dec
syscall
push
mov
rcll
imul
mov
stc
xchg
add
mov
jb
ljmp
fisttpll
and
and
mov
cmpsb
xor
dec
bound
jne
adc
in
mov
mov
jecxz
add
mov
repnz
dec
xor
iret
adc
imulb
or
psrlq
sub
inc
rcrl
xchg
dec
addr16
out
or
mov
mov
lock
iret
push
xchg
fidivl
adc
cmp
lcall
icebp
imul
les
cmpsb
mov
dec
mov
adcb
test
pop
pop
lahf
enter
cmc
arpl
hlt
scas
popf
jecxz
push
sbbl
add
divb
push
cwtl
jmp
icebp
add
add
mov
push
lcall
mov
sbb
cli
push
cmp
lret
insl
fwait
hlt
mov
imulb
inc
ret
add
push
dec
mov
sbb
hlt
in
inc
rol
mov
pop
push
in
stos
xor
iret
fwait
cmp
test
fldt
mov
icebp
and
mov
jbe
xlat
push
mov
inc
bound
fstps
pop
jno
fisttpll
xor
repnz
and
mov
push
jno
xchg
cmp
arpl
xor
lcall
setl
jno
leave
orb
shl
lret
nop
popf
das
nop
push
or
jle
cmc
inc
lods
clc
aas
and
adc
in
ret
or
xor
mov
add
or
loopne
leave
dec
popa
addr16
push
movsl
push
imul
mov
xchg
dec
jg
add
notb
jno
js
xor
pop
scas
and
rclb
jge
xchg
repz
adc
cli
mov
dec
lds
adc
sbb
mov
jns
lcall
mov
pop
mov
add
lahf
insb
jo
out
rcll
pop
xlat
pop
jne
mov
jno
cmp
dec
adc
adc
sbb
jno
fists
sbb
es
lods
lods
mov
and
lret
es
mov
dec
cmp
js
mov
adc
std
cwtl
jne
gs
mov
sub
insl
popa
mov
dec
insl
out
cmp
sbb
xor
or
and
mov
mov
mov
mov
jne
jg
mov
lock
ficoml
dec
or
out
loop
movsb
pop
lods
aaa
jp
inc
lret
pop
push
adc
cld
push
out
and
mov
mov
xlat
scas
out
cmc
lret
ret
and
pusha
bound
std
pop
mov
dec
test
lret
mov
addb
adc
xchg
xchg
xorl
sbb
pop
std
dec
jno
js
cmpsl
push
or
test
into
or
bound
inc
xchg
mov
or
inc
pop
dec
outsl
jae
and
addr16
ret
push
push
jns
lcall
sahf
int
push
setl
lock
mov
movsb
push
xchg
or
sub
push
or
or
roll
lods
pop
scas
and
jb
addr16
xor
insl
out
add
scas
cmp
and
xor
sub
mov
cld
cmpsl
jbe
sarb
inc
xchg
out
lret
pop
push
push
inc
adc
lret
fsubr
test
dec
outsl
push
fnstenv
sbb
pushf
push
push
push
fnsave
les
pop
dec
faddl
cmpsl
ljmp
lods
mov
and
lea
nop
jns
shll
mov
mov
les
imul
sub
mov
cmp
and
fimull
cmp
ret
dec
stc
mov
xor
scas
jne
mov
dec
hlt
in
or
lahf
pop
addl
int3
insb
daa
fs
cli
je
popf
gs
push
mov
cld
xor
xchg
jno
xchg
pushf
icebp
xchg
pusha
addr16
dec
adc
adc
pop
xor
cs
push
pop
addr16
sarb
js
clc
pop
cmp
andl
daa
cmpsb
in
mov
jb
xchg
sbb
cmc
xchg
mov
and
std
lods
xlat
mov
and
jae
das
shll
fldenv
imul
sub
ret
or
fldl2t
std
loope
mov
cmpsb
dec
movsl
or
cmp
and
in
push
and
outsl
or
mov
mov
pusha
scas
xlat
loop
ret
adc
fucom
push
jmp
ljmp
mov
test
je
add
mov
cmp
sub
inc
ja
mov
push
mov
add
test
jl
arpl
mov
aad
data16
or
clc
test
xor
popa
push
mov
lret
adc
mov
enter
fildll
loope
iret
add
mov
mov
ret
inc
scas
ret
scas
rcrl
sub
lahf
loop
jno
popf
rolb
mov
out
mov
jno
or
pop
xorl
sarl
popa
aam
pop
xchg
xlat
adc
xor
out
dec
jb
add
out
call
std
cmp
sbb
cmpsb
rclb
dec
lcall
mov
push
out
xchg
sub
cmp
cmp
dec
xor
cmp
cmpsl
mov
sub
push
fmuls
sub
stc
jmp
jl
pusha
ss
cltd
push
and
fists
mov
mov
xchg
test
shrl
xor
shll
xchg
sbb
jo
lahf
xchg
int3
arpl
scas
sbb
mov
mov
push
dec
lcall
pop
mov
xchg
movsl
and
add
dec
aam
and
mov
mov
movsb
imul
pop
pop
mov
arpl
jmp
jnp
mov
pop
add
enter
in
cmc
jle
repz
stos
mov
cmpsl
pop
xchg
mov
in
mov
cmc
dec
data16
shrl
test
ret
cmpsb
push
lret
push
and
movsl
xchg
jg
jne
fwait
jle
add
icebp
cmpl
xchg
mov
add
and
xor
add
idivl
add
pop
mov
push
int
or
or
movsb
rcrl
js
push
jo
hlt
mov
push
lret
mov
inc
jecxz
in
inc
inc
mov
addr16
call
pop
cmc
pop
ret
ret
enter
mov
decb
dec
add
mov
movsb
aas
test
and
and
pop
or
out
loopne
stos
repz
out
imul
icebp
and
loop
pop
and
mov
les
clc
je
push
sbb
sbb
aas
mov
sub
jg
mov
and
paddd
insb
daa
sbb
loopne
nop
imul
sbb
fsubrl
push
jne
inc
int3
cmpsb
lods
adc
sub
add
xchg
nop
iret
hlt
pop
cmpsb
adc
cmpsl
mov
cli
arpl
into
xor
stos
lds
or
jge
daa
lahf
popf
cmp
add
cli
adc
aas
sub
int
and
push
hlt
xor
adc
mov
pop
repnz
stos
repnz
xchg
mov
or
jge
lods
aas
mov
mov
xchg
jmp
fildll
mov
mov
add
push
in
mov
pop
ret
in
out
cmpb
push
mov
divb
jns
ds
bsf
mov
in
loope
or
ret
adc
ret
or
sub
push
daa
gs
sub
inc
insl
bound
sbb
inc
and
mov
dec
push
movsb
loope
jmp
mov
inc
sti
ja
xchg
jp
xor
or
xor
mov
jb
and
sub
int3
and
pop
outsl
gs
test
xchg
out
cltd
mov
push
rep
sahf
pusha
jg
stos
popf
add
dec
add
ljmp
add
test
xlat
sbb
push
sub
loop
jo
mov
inc
pop
pusha
bnd
or
push
mov
lret
testl
sbbb
xor
clc
jl
cli
movsb
lods
mov
in
cmc
repz
cmp
pop
xchg
out
lods
shlb
dec
adc
rcrl
jl
xor
mov
cmp
sub
mov
ljmp
jnp
xchg
jecxz
xor
or
cmp
std
icebp
xor
cltd
mov
icebp
mov
std
mov
or
mov
lds
outsl
fdivrl
aaa
pop
mov
pop
loope
adc
addb
cmp
imul
insb
sub
adc
andl
xchg
xor
dec
mov
pop
push
and
mov
subps
push
gs
sahf
pushf
adc
jg
lock
aas
push
sbb
mov
lea
xor
add
pop
lods
adc
out
js
imull
sbbb
push
and
addb
lods
lcall
mov
jge
fcompl
lds
loopne
out
sahf
scas
add
movq
nop
add
mov
rcll
xchg
mov
fwait
mov
nop
loop
adc
mov
jns
and
and
xchg
dec
scas
push
sub
add
mov
xor
push
shlb
mov
rcrl
fisttpll
mov
or
pop
js
lret
mov
outsb
dec
andl
pop
ret
mov
mov
out
pushf
xchg
xor
mov
add
push
jmp
int
mov
pop
push
push
les
das
mov
pop
dec
lods
or
in
ret
aad
ss
mov
xchg
pop
adc
mov
nop
loopne
daa
pop
rclb
mov
frstor
pusha
mov
inc
adc
xor
add
dec
ret
pop
inc
mov
mov
test
add
xor
movsb
pop
push
sub
lods
sbb
add
add
sub
popa
fsts
add
test
xor
jae
rorl
icebp
cld
push
jp
jecxz
lcall
dec
repz
add
xchg
jmp
dec
jle
sti
mov
add
mov
xor
call
mov
or
sub
aas
aad
test
sub
xchg
fwait
sub
xor
lcall
push
cwtl
jp
and
mov
iret
cmpsb
iret
test
gs
mov
sub
dec
scas
inc
push
xchg
and
stos
sub
gs
rclb
jl
adc
lret
loop
sub
add
mov
dec
scas
rcrl
enter
test
sbb
outsl
lret
jne
jne
sbb
xchg
mov
insb
scas
cmp
mov
loope
or
sbb
pop
adc
roll
jp
add
push
andb
mov
mov
into
mov
adc
adc
mov
shll
push
insl
mov
cmpsb
lds
adc
std
clc
add
adc
xchg
sbb
and
dec
cmpsb
lret
jo
add
shr
cmp
fwait
popf
stos
mov
ljmp
subl
xor
push
cli
sahf
mov
daa
mov
scas
xor
jg
push
ja
in
outsb
cmp
jge
xor
dec
pushf
lds
sbb
cmp
xchg
jp
fs
sub
and
in
adc
ss
repnz
sub
dec
daa
cmpb
insl
xchg
call
and
jl
pop
imul
loopne
stos
lock
jecxz
lret
push
jg
ja
pusha
dec
mov
mov
lret
int3
mov
sub
clc
xchg
cmpsl
subb
popa
xor
jo
sbb
cmp
pop
js
and
test
cmpsb
xor
cltd
sub
xor
ret
mov
ret
pop
jo
hlt
js
mov
lcall
imul
vmovlhps
sbb
cmc
or
lods
popa
or
mov
jecxz
loope
scas
xlat
mov
sbbl
icebp
outsb
std
add
rorb
push
out
out
dec
sub
xor
scas
sbbl
loop
pusha
int3
xor
es
cld
jge
sub
xor
pusha
scas
add
adc
mov
sub
insl
mov
xcrypt-ecb
cmpsl
mov
jmp
xlat
or
icebp
cmp
sub
sub
jle
out
or
push
ljmp
cmp
mov
fisubrl
popa
imul
adc
xchg
inc
jbe
push
adcb
outsl
adc
int3
fsubrp
mov
jno
lods
and
stc
jb
adc
sub
divl
inc
nop
popf
cmp
iret
add
sub
out
jne
xchg
xchg
or
jo
aas
dec
dec
cld
das
test
push
testb
or
inc
int
iret
aam
les
sbb
sbb
ret
aas
push
xchg
pusha
aaa
xlat
fcomps
push
pop
aam
aas
popl
or
push
call
cmp
xor
sub
arpl
xor
and
out
rcrb
and
cmc
adc
lahf
dec
adc
lds
out
mov
sbb
push
shrl
push
shr
mov
repnz
lods
jo
or
xchg
xor
addl
push
pop
fstps
addr16
dec
and
push
and
and
test
adc
inc
jne
fisttpll
ret
mov
out
sahf
pop
adc
aaa
jns
aam
xlat
xor
mov
call
ja
in
push
sub
mov
push
dec
pushf
aam
push
cmc
xchg
push
xchg
or
rcrb
inc
push
iret
sarl
dec
roll
clc
cs
into
xchg
pop
mov
jo
adc
push
roll
lock
popa
ss
mov
mov
arpl
sub
push
mov
dec
mov
nop
les
sub
lcall
jae
icebp
jle
pusha
mov
movsl
push
ror
cmp
jmp
pop
and
cld
in
inc
and
push
push
scas
sub
or
out
faddl
push
pop
lock
xchg
clc
xchg
xchg
fwait
cmp
xchg
mov
rcl
mov
dec
arpl
test
pop
mov
jnp
xlat
enter
xor
or
mov
push
js,pt
mov
int
jae
mov
cmp
pusha
adc
out
lahf
movsl
jmp
repnz
sarb
mov
andb
pop
mov
mov
push
in
xchg
push
nop
into
push
jnp
xchg
sbb
mov
enter
push
mov
aam
jl
push
ds
lea
add
cltd
pop
jp
imul
lret
pop
xor
pop
cmpsb
aas
movsl
push
aas
dec
in
scas
sbb
sahf
out
bound
cs
test
je
cmpsl
das
jge
jb
test
call
mov
leave
jb
jno
ret
mov
mov
sub
aad
pop
bound
lahf
add
pop
sarl
fldl2t
jne
mov
test
pusha
cmp
pushf
dec
push
or
mov
sub
fisttps
push
pop
dec
mov
push
or
fs
xor
adc
jmp
testb
dec
call
mov
stos
in
clc
xchg
scas
cmp
stos
scas
sbb
leave
pop
js
mov
adc
sub
lahf
add
sub
adc
dec
pop
pop
push
add
loop
in
in
and
mov
dec
inc
mov
add
mov
push
cwtl
ret
test
push
les
adc
in
cmp
cmpsl
sti
roll
jg
in
cmp
or
xor
mov
inc
sbb
push
xor
and
cmp
xor
lret
loopne
jo
xchg
cltd
jno
mov
test
std
mov
or
xchg
adc
into
es
and
nop
ror
jecxz
ret
mov
xorb
mov
lea
fldt
subl
xchg
cwtl
inc
push
adc
int3
pop
push
xor
sahf
mov
inc
cmp
or
movsb
pop
outsb
loop
inc
adc
daa
add
ljmp
out
push
mov
cmp
mov
cmpsl
pop
jno
lret
mov
jmp
xor
clc
jle
xor
stos
push
push
pop
fwait
jge
mov
ds
sahf
pop
jae
xlat
pop
or
shrl
iret
lds
or
inc
std
lahf
bound
xchg
push
sub
xchg
sub
les
sub
push
xchg
push
mov
out
fisubl
jae
int
mov
push
js
cmp
or
sti
lcall
xchg
lahf
mov
cmp
test
inc
movsb
jecxz
pop
scas
jg
in
ljmp
fistpll
dec
into
stc
adc
mov
fisubrl
pop
outsl
dec
addr16
je
repnz
mov
rol
cmc
xor
cmp
and
pop
std
cltd
cmp
mov
sahf
arpl
mov
jne
xchg
jns
fwait
dec
mov
je
cmpl
outsb
jae
xor
or
loope
inc
mov
xchg
sub
mov
and
ss
das
pop
dec
xor
sub
xor
xor
xchg
les
xchg
dec
xchg
daa
shl
adc
adc
lret
mov
or
mov
rorb
dec
lretw
mov
repz
ja
mov
cmpb
test
cmp
push
popa
outsl
sti
mov
test
testl
mov
aaa
jno
pop
cli
fwait
lods
mov
insb
psubsb
stos
jae
mov
movsl
or
popf
add
dec
dec
lods
adc
jecxz
orb
bound
push
push
hlt
jnp
lock
adc
loopne
inc
insl
cmp
call
rcrb
sbb
enter
xlat
lods
fs
mov
arpl
add
mov
mov
ss
dec
sti
fs
into
pop
sub
movsb
dec
decb
inc
adc
push
imul
mov
pusha
mov
ret
mov
imulb
insb
in
shl
sub
pop
mov
adc
jge
pushf
jp
push
dec
inc
int
daa
xlat
in
pusha
inc
das
ret
mov
insl
mov
sbb
jmp
mov
sub
xchg
xchg
lods
pop
ds
xor
cmp
push
xchg
cmpsl
aaa
lock
repnz
sbb
jle
andb
movsl
or
rolb
sbb
frstor
push
aam
out
lret
pop
cmp
stc
or
xchg
pause
mov
sub
fbld
lods
inc
mov
stc
ljmp
mov
mov
xchg
loopne
sti
call
xchg
addr16
scas
sti
ss
xchg
xlat
fidivs
scas
mov
rclb
wbinvd
jge
jbe
adc
add
mov
das
mov
arpl
cltd
lea
mov
frstor
cld
lds
aam
cmp
and
pop
xchg
add
xchg
lea
stos
or
insb
add
jb
shlb
loopne
mov
sub
mov
sbbl
fnsave
sub
hlt
mov
or
aas
xchg
stc
push
dec
rcl
pop
jl
mov
ficompl
sub
sbb
cmp
icebp
out
xchg
push
xchg
dec
fsubrs
dec
dec
jo
test
jg
test
jbe
xchg
mov
fisubrs
add
lods
js
aas
jb
xor
int
jb
cmp
dec
mov
add
ret
pop
hlt
push
cld
in
sti
push
out
sub
jns
icebp
mov
in
jl
test
ss
xchg
xchg
insl
fsubrl
in
mov
mov
mov
shl
xor
push
out
clc
push
fadd
imul
test
inc
add
push
push
xchg
mov
call
hlt
cmpsl
insb
jb
cmc
aas
lcall
lret
jmp
lcall
push
push
lcall
sbb
add
push
repnz
mov
dec
pop
scas
shll
pusha
xor
jmp
add
and
jp
xchg
jb
dec
and
ret
push
sbb
adc
push
and
mov
jno
add
jns
mov
rcrb
push
cltd
jns
loopne
jp
mov
into
lds
cwtl
in
pop
shrl
aas
andb
imul
cmc
xor
jecxz
inc
add
dec
mov
dec
fstpt
mov
xlat
jb
mov
aaa
push
sub
fidivrl
jp
mov
mov
jg
nop
in
mov
sbb
pop
jnp
ror
inc
or
and
mov
pushf
jmp
dec
ja
imul
loopne
sub
iret
cvtps2pi
inc
jmp
mov
jns
pop
pop
mov
sarb
jae
xor
icebp
cld
adc
enter
cmp
roll
cmp
mov
loop
imul
imul
xor
cld
jne
arpl
icebp
inc
sbb
jmp
mov
pop
mov
mov
fs
fdivrs
xor
hlt
or
dec
xchg
sahf
pushf
je
es
movsl
xor
repz
mov
mov
fwait
xchg
inc
inc
push
stos
int3
sub
ret
pop
inc
mov
outsl
mov
ljmp
testl
inc
stc
xor
xor
jns
push
es
rclb
mov
pushf
bound
adc
enter
in
pop
xchg
popa
fcmovnb
cmp
jb
cmp
pop
xchg
pop
adc
out
test
xchg
icebp
xchg
shl
rolb
mov
push
movsl
jo
cmp
and
outsb
and
mov
lds
dec
ja
ljmp
xchg
scas
mov
sub
pop
stc
push
pop
loopne
loopne
sub
add
jbe
mov
mov
stc
jl
daa
xor
push
lahf
mov
adc
sbb
lcall
sub
fmul
ds
adc
mov
repnz
add
outsl
jno
clc
rorl
mov
jbe
and
xchg
pusha
sub
pop
xchg
int
inc
sbb
gs
fsubl
push
mov
enter
push
lock
aad
push
push
pushf
lret
dec
dec
out
jae
adc
movsb
sarl
mov
dec
push
das
fstpl
dec
stc
mov
and
dec
ljmp
loop
sbb
mov
in
adc
sbb
jne
sbb
arpl
add
dec
push
clc
xorl
mov
mov
mov
xchg
aad
outsb
js
xchg
into
push
mov
xchg
lods
dec
lret
ds
xor
loope
test
ds
mov
push
arpl
arpl
mov
cli
movsl
imul
cmp
cld
test
js
clc
test
aas
or
xor
push
sbbl
lods
push
dec
jg
popf
insl
popa
cmp
jne
roll
push
js
pop
adc
adc
icebp
add
xor
mov
icebp
and
je
daa
mov
into
jae
mov
adc
rcll
xor
mov
fs
shlb
sbb
cs
lret
or
lret
cmp
push
ss
ss
sub
adc
jmp
loop
les
addr16
fwait
dec
rorb
inc
add
in
push
loop
sbb
das
or
and
dec
cmp
xlat
lods
pop
in
sti
or
adc
push
mov
int
mov
pop
cmp
shll
jp
aad
cmp
bnd
mov
mov
inc
add
lret
loope
testb
mov
lock
pop
adc
fucomp
mov
pop
out
shll
ja
mov
lret
repz
adc
and
inc
cwtl
ss
sub
out
push
jbe
add
pushf
push
inc
std
mov
fdivs
and
je
adc
adc
loopne
fwait
popa
sarl
fistpll
push
push
lret
lahf
push
fwait
xchg
stos
daa
fstl
scas
cmp
iret
push
add
dec
mov
adc
xchg
loopne
lret
pop
sub
test
or
sub
inc
test
gs
neg
mov
sbb
pop
cld
int3
jns
or
stos
sbb
or
push
adc
rolb
fisttpl
fldl
scas
xor
fsub
cmp
cmp
mov
or
jmp
ja
sti
xchg
scas
cs
mov
pop
and
pusha
mov
cs
loopne
int
pusha
pop
pop
push
inc
push
sub
mov
pop
add
addr16
leave
mov
bound
mov
pop
gs
cld
cld
shll
xor
enter
push
jge
xlat
not
dec
and
jmp
xlat
jae
xchg
and
xor
mov
or
xchg
cmp
inc
mov
jecxz
jl
and
rcrl
add
fcomi
pop
jecxz
mov
dec
in
push
or
push
jb
leave
add
mov
mov
inc
push
push
neg
mov
pusha
mov
jb
cli
mov
push
jbe
pop
test
jns
jb
lods
rcrb
jge
push
fsubs
xchg
and
cmp
fwait
inc
adc
sub
jne
jp
xchg
xchg
lods
arpl
push
sub
mov
fcompp
outsl
in
cmp
cld
or
pop
cmpb
add
dec
mov
add
cmp
cwtl
scas
sbb
nop
insl
inc
gs
aaa
lock
hlt
mov
cld
mov
call
mov
cmpps
lods
rol
rcrb
sbb
int
lock
lock
push
movsl
jbe
test
sub
fisubs
lcall
mov
push
push
in
nop
add
push
fimull
sub
xchg
hlt
repnz
hlt
scas
cld
pop
mov
sub
pop
mov
roll
leave
inc
dec
dec
mov
in
jnp
cmp
pop
jo
pop
add
push
loop
aas
pop
xchg
daa
sbb
das
movsl
dec
cmp
add
pop
shl
inc
mov
pusha
ljmp
cmp
pusha
daa
es
lcall
in
mov
push
pop
and
movsb
jb
mov
mov
mulb
push
enter
int3
jp
push
or
aaa
daa
dec
mov
jo
cltd
fcmovnbe
sub
xor
or
push
xchg
dec
inc
cs
pop
inc
xchg
in
insb
mov
push
movsb
fists
imul
stos
aad
xor
andb
lahf
push
stos
shll
add
ret
sub
adc
mov
inc
mov
pop
or
psubb
cltd
inc
insl
or
scas
outsb
lret
outsb
in
cli
jb
add
sbb
sti
or
jo
in
test
push
imul
test
popf
addr16
mov
adc
jp
mov
test
xchg
je,pn
in
stos
test
jg
mov
les
xor
xchg
inc
and
jnp
inc
jbe
movsb
insl
insb
jnp
mov
sbb
xchg
in
idivb
ljmp
scas
lds
xchg
inc
mov
aaa
inc
mov
sbb
fucom
aaa
hlt
fstps
push
getsec
mov
aas
dec
xor
pop
adc
mov
cli
push
inc
js
or
or
dec
out
fisubrs
daa
sahf
add
test
mov
pop
pop
je
test
mov
sub
sahf
push
loope
inc
addl
xchg
pop
jmp
or
or
adc
rol
inc
jbe
lds
cmpsl
ret
lmsw
es
mov
icebp
fsubrl
push
jmp
rclb
jl
lea
add
push
je
cmpsb
js
imul
xchg
sbb
dec
xor
add
aaa
sub
inc
xchg
inc
in
popf
faddl
divb
into
gs
dec
cmp
dec
imul
and
mov
mov
xlat
icebp
cmp
sbb
lock
sbb
ret
push
sbbb
dec
dec
fisttpll
lret
jne
lods
test
pusha
jae
fistl
inc
add
push
xor
sub
pop
int3
orl
test
out
jg
pop
bound
cltd
fldl
int
xlat
insl
cmp
add
add
aas
ss
mov
loop
lret
adc
sbb
push
adc
lea
icebp
mov
cmovb
adc
jns
fisubl
out
and
fisubs
push
push
sub
sahf
in
jl
std
or
out
in
je
stc
lods
ja
cmp
pop
in
out
jge
push
repz
outsl
rolb
ret
sahf
mov
mov
sub
cs
mov
imul
dec
leave
das
or
and
jno
push
es
inc
imul
push
aas
outsb
push
fldt
loop
sub
imull
pop
in
xchg
sub
fbld
lods
insb
mov
sub
gs
enter
mov
fidivrs
imulb
ja
popf
sbb
or
dec
mov
push
dec
dec
daa
jno
dec
ret
mov
pop
push
movsb
sub
jmp
mov
jmp
adc
push
jge
pop
sbb
imul
dec
iret
bound
add
xor
cmp
cmp
push
push
leave
incb
push
mov
xor
fwait
pop
jnp
fprem
and
fstps
jbe
jbe
sub
pushf
push
mov
adc
dec
icebp
push
sahf
dec
sar
adc
push
or
es
loop
and
mov
std
lock
insb
scas
inc
inc
sub
xchg
mov
add
movb
arpl
push
and
daa
pop
push
xchg
test
sub
aaa
or
and
loope
inc
sub
sahf
jle
adc
into
clc
outsl
push
lock
adc
iret
sub
inc
push
movsl
jae
cmp
mov
xor
rolb
sub
xchg
out
shrl
lea
lods
sti
lcall
pop
sbb
fwait
es
cwtl
js
xor
mov
mov
dec
and
push
into
jnp
out
push
or
jbe
lds
cltd
xor
scas
repnz
jg
notl
jmp
dec
and
sbb
mov
imul
adc
lods
xchg
pop
jbe
loop
mov
lcall
in
pop
popa
ljmp
cli
cmp
pop
cmp
and
scas
pop
popf
inc
test
fs
fs
iret
cwtl
sar
ud1
int
out
dec
mov
xor
jecxz
ss
rclb
mov
mov
int3
lahf
and
clc
push
jne
sar
or
in
xor
daa
jbe
or
dec
fcoml
and
jmp
inc
sub
cld
fisttps
and
leave
movlhps
subb
jmp
and
out
clc
sahf
xchg
mov
inc
pop
push
mov
movsl
mov
mov
fwait
lods
gs
pop
scas
popa
xlat
test
dec
xchg
pop
decl
ljmp
repz
mov
mov
clc
shufps
sahf
test
sbb
mov
sub
xadd
sti
dec
aad
divb
sub
call
push
pop
pop
jmp
mov
hlt
dec
cmp
sti
out
dec
cwtl
inc
push
add
xchg
fstps
inc
fldl
adc
mov
sub
jecxz
pop
xchg
adc
mov
aam
cmpsb
orl
stos
pop
jp
dec
dec
dec
and
and
fisubrs
repnz
xor
sbb
scas
shrl
dec
inc
into
fidivl
fsubs
push
clc
jl
jne
add
inc
push
add
sti
sub
test
outsb
pop
aam
pop
mov
jmp
mov
lock
xchg
aam
adc
mov
xchg
div
cmc
adc
xor
je
sahf
outsb
leave
xchg
mov
mov
xor
imul
xor
out
mov
dec
sbb
mov
daa
pop
in
mov
arpl
stos
and
pop
fdivl
jle
or
aas
mov
jp
aas
sarl
push
mov
inc
lret
xor
out
push
jns
and
out
cli
cmp
pop
scas
cvtpi2ps
add
ret
lods
cmp
movsb
cmp
mov
mov
cmp
or
mov
jle
mov
pop
lods
pop
lea
dec
sahf
popf
aam
ljmp
adc
stc
push
ucomiss
xchg
das
mov
add
jg
jmp
sbb
lcall
mov
ret
and
xlat
mov
aas
xchg
dec
clc
or
pop
lahf
rolb
into
inc
mov
mov
mov
fnstsw
ror
cmp
cli
mov
and
jg
jb
cmp
adc
ret
push
test
sbb
xchg
dec
xchg
and
addr16
icebp
hlt
into
or
xor
pop
addl
push
repz
push
outsl
dec
repnz
lret
loop
xchg
cmp
enter
shlb
repz
aad
push
push
mov
bound
test
and
in
sbb
xor
lcall
in
pushf
push
orl
sbb
or
xor
jno
adc
sbbl
push
push
inc
movsb
push
aas
lcall
push
lahf
add
mov
imul
cmp
mov
in
mov
jns
pop
add
or
outsl
pop
push
inc
outsl
jmp
mov
mov
adcl
cmp
scas
ret
popf
pop
and
cmp
popf
dec
out
jnp
cmp
aaa
mov
orb
jns
into
xor
fwait
inc
dec
aaa
aad
in
mov
jmp
inc
mov
loopne
jnp
push
xchg
daa
mov
nop
jo
mov
xor
cltd
cmpsl
pop
and
aad
push
xor
cld
sbb
test
loop
bound
push
repnz
cld
dec
je
mov
insb
es
mov
ret
mov
mov
jnp
mov
inc
cld
jns
lods
or
nop
out
adc
ja
or
in
sbb
test
icebp
pusha
ds
adc
pop
and
enter
push
int3
es
push
sbb
push
cmc
xchg
mov
sbb
repz
dec
sub
xor
sbb
idiv
xor
cmovno
and
cmpsl
popf
into
dec
cmp
out
inc
outsb
push
mov
subb
jb
mov
popf
or
add
xor
mov
arpl
or
flds
mov
and
subb
jae
jbe
mov
sub
dec
in
sti
daa
fidivrl
leave
test
xor
sti
movsl
lahf
inc
push
pop
ret
cld
movsl
jmp
sbb
test
pushf
sub
mov
push
repz
adc
sub
adc
mov
mov
jb
movsb
test
mov
dec
inc
je
roll
jb
dec
out
xlat
xchg
dec
aas
push
dec
cmp
inc
pop
mov
add
adc
jno
adc
push
iret
pop
mov
sbb
scas
inc
lock
jo
push
xchg
aam
jne
lret
in
sub
dec
xchg
mov
call
aam
stc
aaa
xchg
aaa
jmp
movl
mov
shlb
test
xchg
fldcw
pop
stos
mov
popa
mov
jnp
mov
loop
out
imul
rcrb
add
cmp
aad
cmp
jbe
sub
dec
icebp
into
xchg
daa
mov
pop
xor
scas
pop
lahf
sbb
out
imul
dec
push
or
outsb
std
sbb
das
lods
or
sbb
push
sbb
and
jne
jmp
pushf
arpl
push
xchg
adc
dec
cld
add
inc
sbb
pop
dec
aas
roll
in
lock
mov
xor
pop
enter
push
mov
fwait
jecxz
cmp
fs
xor
fcoms
push
and
out
adc
cwtl
jbe
xchg
div
lods
mov
cld
sbb
loopne
mov
sub
xorb
aam
xchg
cltd
sub
adc
sbb
sub
mov
test
bound
pop
mov
arpl
nop
push
cmc
dec
add
jnp
mov
jnp
mov
add
in
cwtl
jl
pop
jbe
adc
sub
push
stc
aad
jno
pop
iret
sub
out
dec
sahf
inc
jne
xchg
xchg
sub
cmp
mov
sbb
stos
gs
clc
mov
jmp
out
pop
jb
iret
outsb
pop
mov
mov
jae
inc
ror
out
or
lahf
lea
mov
pop
push
out
lahf
or
lcall
xchg
dec
es
fisubl
rclb
loop
mov
and
stc
pop
mov
cmpsb
scas
push
add
andb
mov
shll
xor
dec
add
pop
cmp
push
icebp
cs
inc
pop
adc
popf
and
pop
xchg
sub
jae
adc
imul
and
inc
lret
sub
test
dec
es
int3
jo
and
in
aaa
arpl
mov
push
das
push
push
sbb
cld
inc
adc
mov
xchg
xor
and
mov
or
mov
inc
test
adc
add
mov
hlt
test
xchg
arpl
sbb
mov
lahf
sbb
in
idivl
jne
test
ret
lret
movsl
subb
xor
xor
out
push
mov
or
or
pop
add
es
mov
mov
lea
pop
sbb
xchg
icebp
jmp
push
test
jne
jns
push
jp
enter
fsubs
or
mov
outsl
jae
stc
rol
or
xor
int
sbb
jbe
xchg
mov
sub
or
pop
pop
mov
jo
or
enter
int3
shr
jecxz
sub
subb
mov
xor
dec
fwait
pop
add
bound
js
xor
push
icebp
or
sbb
mov
cmp
jnp
push
ficompl
data16
and
test
mov
sbbb
sbb
lea
orl
in
or
add
enter
loope
fistps
int
sbb
test
aad
cvtps2pd
xchg
jno
fidivrs
pushf
pop
insb
test
mov
mov
cwtl
lds
cwtl
xchg
cmp
cwtl
scas
and
mov
or
inc
jns
pop
push
cmp
jne
int
es
add
rolb
sub
jg
or
adc
out
repz
fsubrl
inc
outsl
pushf
mov
sbb
call
mov
cli
test
repnz
int
out
lret
sub
fisttpll
rcl
cltd
sbb
cmpsb
aaa
jo
int3
mov
xchg
mov
push
ds
xor
loop
loop
xor
jbe
pop
adc
fisttps
jae
add
sti
movsl
xchg
xor
outsb
mov
or
inc
mov
cli
add
and
and
lds
scas
jno
push
jle
loopne
ret
out
cmp
cmp
mov
xor
adc
mov
push
jnp
jmp
andnps
es
sbb
popf
push
push
sahf
cs
xor
cmc
sub
mov
in
ljmp
test
xor
aad
cmp
mov
gs
mov
add
lods
pop
jp
es
jmp
and
adc
adc
gs
and
dec
push
mov
adc
xchg
test
sbb
adc
enter
lret
ds
lcall
scas
lret
jge
int
lahf
mov
or
pop
shll
lds
lods
mov
fwait
add
arpl
xchg
dec
cmp
dec
out
adc
jae
pop
lahf
out
cltd
rolb
shrl
or
pop
sub
jb
dec
stos
inc
pop
je
inc
repz
sbb
pop
or
pop
stc
sub
dec
fs
xchg
push
cmpsb
std
jns
dec
out
jae
arpl
sbb
pop
popf
inc
mov
loope
test
int3
mov
lods
out
jae
mov
mov
cmp
jp
fidivs
in
ror
xchg
lods
std
dec
pop
push
aaa
je
ss
xor
mov
xchg
cmp
dec
jb
pop
inc
fmuls
sbb
insb
data16
sbb
cs
nop
pop
jo
mov
cmp
push
push
daa
cmp
aaa
ljmp
rcl
shl
fcmovbe
push
mov
enter
adc
fildl
pushf
dec
icebp
xor
pop
sarl
cltd
push
fidivs
or
mov
fs
fisubrs
shlb
xchg
scas
movsl
hlt
cmpsl
mov
fcoms
push
idivb
jmp
jae
lcall
scas
aaa
shrl
mov
mov
fwait
mov
adc
xchg
test
cmp
loopne
es
xchg
rcrb
pushf
insb
add
loop
into
mov
outsl
adc
mov
aad
andb
jne
sub
lahf
mov
mov
paddsb
test
mov
rcl
addr16
idivb
cmc
es
mov
xchg
decl
scas
push
inc
push
pop
shll
xor
adc
cld
or
mov
mov
ss
jge
push
or
cltd
adc
outsl
adc
fcoms
mov
xchg
jmp
aaa
jnp
mov
fldenv
sbb
push
subb
adc
movsb
inc
iret
std
mov
loop
insb
jno
je
dec
out
mov
cli
adc
mov
pop
fstpt
and
loopne
in
arpl
xchg
icebp
sub
cli
xchg
jno
inc
xlat
cmp
out
xor
lea
xchg
fwait
xorl
and
inc
mov
andb
dec
push
fldcw
xchg
int
cmpsb
ss
insl
xchg
jmp
xchg
jge
fsubl
cmp
test
mov
adc
mov
sub
ret
cld
mov
cmp
inc
xchg
push
inc
lds
mov
loope
ljmp
inc
fdiv
dec
cmp
std
xorb
adc
insb
outsb
notb
aam
cmp
fwait
repz
push
or
sbb
fldcw
lods
rcrl
mov
stc
sub
push
ret
jmp
cmp
fstpl
mov
outsb
xor
int
mov
mov
sbb
push
icebp
das
xchg
out
and
jnp
das
sub
dec
cmp
dec
pop
ret
xchg
daa
mov
sub
gs
mov
or
cmp
dec
dec
rolb
push
jp
and
leave
es
adc
out
adc
push
sbb
ror
mov
add
sbbl
les
or
jbe
xor
lock
xchg
jbe
repnz
cmpsb
shrl
pop
outsl
notb
scas
dec
fadds
dec
lahf
adc
jne
jne
mov
jb
mov
or
lods
pop
sti
push
xorb
mov
lds
bound
in
sahf
mov
lock
out
jae
cmp
enter
cmp
stc
clc
ljmp
cmpsl
lds
mov
jb
divl
mov
int
dec
std
sahf
mov
dec
inc
xchg
pop
xchg
icebp
jp
cmp
ljmp
xchg
pop
mov
pusha
sbb
sti
out
sub
loope
xchg
mov
push
lahf
jp
mov
inc
stc
dec
lret
xor
pop
and
lea
dec
lock
lret
add
cmp
js
cmp
pop
push
add
ss
mov
jb
jge
ds
cmpsl
outsl
push
idivl
std
idivb
dec
pop
lcall
lods
ret
ja
xor
pop
mov
and
dec
cli
sbb
lret
fsubr
sarb
mov
insl
mov
nop
and
jb
xor
sub
xor
mov
cwtl
xchg
and
sub
xchg
popa
mov
jge
adc
movsb
xchg
mov
mov
pop
clc
in
mov
mov
dec
dec
jno
sbb
mov
pop
jmp
loopne
xor
push
dec
xor
rolb
sbb
popa
filds
or
jne
dec
rclb
dec
inc
mov
imul
push
xchg
ud2
mov
adc
adcl
aas
dec
pop
jnp
cltd
ljmp
jno
imul
sahf
jnp
lret
in
mov
sbb
mov
sub
rorb
mov
out
rcll
sbb
or
pop
test
pushf
or
insl
lea
pop
cwtl
pop
imul
pop
adc
arpl
push
test
mov
pop
imul
xchg
pushl
sbb
or
mov
shlb
iret
add
mov
mov
lret
rcrl
pop
push
or
sub
outsl
cmp
xchg
scas
or
xchg
popa
cmp
sti
jns
lret
adc
scas
fildll
insb
ds
pop
outsb
dec
std
inc
inc
stc
mov
in
or
mov
cmp
cmpsl
sbb
int3
mov
fstps
fst
lahf
std
addb
lret
outsl
test
lds
orb
cmp
es
imul
dec
push
dec
pop
rcrl
fdivl
stos
xchg
xchg
jnp
cmp
or
ror
push
cmp
sbb
jnp
js
movsl
dec
dec
push
lods
rcll
iret
xor
jae
jno
mov
mov
repz
jmp
dec
mov
incb
sub
mov
cmp
mov
pop
in
gs
outsb
cmp
insb
pusha
loop
out
push
mov
mov
std
scas
cmp
add
dec
cs
pop
aad
out
popf
xor
imul
mov
inc
ds
mov
push
cs
arpl
fbstp
test
lret
cwtl
aam
cwtl
addr16
fs
sbb
mov
and
sbb
adc
jecxz
out
jl
cmp
andb
iret
jne
ret
or
cmp
cld
shll
sub
je
sbb
lret
into
subb
mov
int3
push
cltd
mov
cmp
negb
ja
imul
mov
lret
imull
sahf
outsb
fsubr
outsb
mov
dec
sti
mov
and
movsl
iret
mov
sarl
mov
mov
add
jmp
xor
inc
mov
cld
xor
add
mov
sbb
addr16
push
outsl
xor
mov
shll
fnsave
leave
fldcw
sbb
xlat
fists
sub
mov
push
fnsave
mov
mov
fldl
or
mov
dec
and
inc
cltd
jns
outsb
cmp
je
data16
mov
lods
cwtl
loope
push
mov
inc
xchg
aad
push
cmpb
ljmp
daa
pushf
mov
dec
mov
daa
repnz
into
push
aaa
sahf
hlt
xchg
jae
loopne
sub
arpl
xchg
jmp
mov
sbb
adc
mov
dec
xor
addl
in
rcrb
adc
outsb
fcmove
int3
push
pop
inc
sbb
mov
dec
dec
xchg
insb
mov
enter
aas
xchg
mov
sbb
pusha
movsl
xchg
dec
in
jb
loop
pushl
mov
nop
mov
push
dec
pushf
add
push
jl
mov
aad
pop
ljmp
and
es
push
cs
jbe
or
ret
xchg
in
lret
lret
xchg
pop
test
inc
pop
inc
cltd
add
cli
ret
xor
mov
lock
fnstenv
jae
int3
rolb
dec
in
push
hlt
mov
sbb
mov
adc
repz
dec
mov
adc
imul
imul
icebp
fdivp
pop
fistl
and
fimuls
popa
stos
push
pop
jg
add
dec
jecxz
cmp
xor
rorb
cmp
mulb
int
mov
in
call
mov
mov
push
insb
sbb
out
out
jecxz
cli
into
in
mov
adc
xor
xchg
fnstsw
or
xor
xchg
dec
cmpsl
pop
repnz
dec
leave
movsb
in
and
pop
xor
mov
xchg
or
xor
outsl
xor
cs
push
fdivrl
test
sbb
out
xchg
mov
mov
adc
and
sbbl
shlb
aam
int
aad
int
dec
jp
cwtl
dec
int
popa
adc
test
and
pop
dec
add
dec
and
cmp
dec
xchg
pop
cmc
pushf
push
sub
mov
call
jecxz
outsl
mov
movsl
lock
mov
je
aad
pop
stc
scas
nop
mov
cli
xorb
pusha
cltd
stc
clc
adc
stos
jnp,pt
cmc
leave
xchg
push
inc
and
in
cli
pop
cmpsb
cmc
xor
inc
mov
loope
push
xor
adcl
cli
or
or
addr16
xchg
loope
test
ss
mov
pop
mov
cld
and
cld
mov
cmc
dec
pop
mov
std
sarl
push
mov
notb
sbb
in
subb
xchg
enter
popa
push
and
dec
mov
pusha
dec
clc
aaa
or
add
jae
rcrb
dec
xor
push
lds
repz
out
data16
iret
add
push
inc
or
and
in
imul
fs
fimuls
iret
dec
xchg
xor
mov
xrelease
cmpl
insl
ja
clc
addl
cmp
addr16
pusha
jge
ljmp
sbb
mov
sbb
mov
inc
pop
jecxz
adc
xchg
scas
fcmovnu
in
pop
lods
movsb
push
dec
dec
mov
ret
int3
jmp
repnz
arpl
popa
xlat
mov
xchg
add
add
mov
add
scas
ljmp
movl
test
xorb
test
mov
mov
xor
insb
add
and
jecxz
and
fnstsw
pop
xchg
test
mov
lea
lods
dec
jmp
mov
jmp
ficomps
adc
xor
sbb
mov
xchg
iret
in
push
mov
scas
adc
js
lea
pop
imul
addr16
mov
int
pushf
sahf
call
arpl
pop
mov
stc
es
inc
or
lret
xchg
ja
pushf
xor
imul
or
fidivrl
aad
sub
sbb
repz
bound
jl
dec
sbb
fdivl
dec
or
sub
rcrb
shlb
cli
cmp
mov
lret
mov
adc
aaa
pop
or
bnd
xor
repz
sbb
mov
jp
int
iret
fsubp
push
push
out
jnp
xchg
lea
dec
pop
inc
mov
mov
xor
sbbl
jmp
mov
dec
mov
add
jbe
jne
xor
or
or
jl
lret
xor
mov
js
fcoml
jnp
icebp
jge
rcll
fldt
popa
adc
inc
movsl
jmp
jge
dec
push
cmc
jnp
push
rclb
push
mov
mov
and
rcll
out
test
aas
insb
scas
pop
out
cmp
pop
ret
popf
adc
jns
mov
adc
dec
icebp
je
leave
into
mov
sbb
cld
sti
int
xchg
adc
aas
xchg
mov
jmp
mov
and
xlat
dec
push
ds
mov
mov
shll
jo
lods
ds
shlb
cmp
mov
test
cmovb
mov
add
push
dec
xor
data16
pusha
jecxz
test
inc
push
dec
and
sbb
push
mov
repnz
or
orb
mov
sbb
inc
sub
pop
jbe
xchg
inc
pop
stc
clc
jne
mov
inc
mov
xchg
inc
scas
sub
movsb
and
xchg
cs
andl
xchg
loopne
in
pop
inc
into
mov
mov
sti
int3
js
pop
xor
jae
and
adc
cld
aaa
popa
mov
add
loop
imul
stos
adc
lahf
in
push
and
imul
push
push
lret
cmp
lods
inc
add
cli
in
or
cmpsb
loopne
insl
cli
mov
les
lret
xchg
or
jne
ja
pop
cld
outsb
fwait
xchg
inc
push
adc
jge
or
xor
mov
xchg
or
fsubr
mov
xor
push
aad
lock
inc
scas
adc
cmc
push
rol
jl
insl
lcall
sub
dec
xchg
push
mov
xchg
mov
or
insl
adc
xchg
mov
bound
hlt
push
stc
mov
adc
stc
clc
cld
mov
leave
divl
push
imul
xorb
dec
jg
jbe
jle
enter
xor
shlb
lods
push
cmp
stos
mov
mov
push
cmp
mov
loope
or
mov
aad
pop
dec
mov
test
scas
mov
jnp
jg
dec
mov
jmp
add
sbb
mov
mov
ret
dec
pop
xor
inc
pop
xchg
arpl
xchg
ss
and
or
lcall
mov
faddl
and
inc
adc
cmc
xchg
mov
push
xchg
xor
jg
ds
test
mov
and
push
inc
aad
mov
imul
cwtl
jo
mov
mov
enter
sub
ret
mov
pop
inc
in
shrl
adc
in
jno
in
xchg
push
insb
dec
mov
cmp
mov
mov
dec
add
stos
inc
xchg
inc
and
mov
fcoms
aaa
mov
add
pop
push
fs
dec
mov
lahf
iret
outsb
ja
xor
cmp
cmp
xor
and
ljmp
les
xchg
inc
sbbl
in
pushf
bound
sbb
sub
cmp
les
rcr
nop
fstpt
in
sub
fadds
filds
dec
sub
mov
xor
mov
adc
mov
cmp
pop
and
inc
sub
mov
inc
and
loopne
out
fs
subl
adc
mov
mov
pop
sub
add
sbb
lret
mov
pop
mov
test
in
inc
shrb
ljmp
xor
jne
pop
cmp
aaa
mov
mov
int
hlt
sahf
xchg
jp
push
les
jnp
add
lret
add
jb
mov
dec
xchg
xor
mov
mov
mov
add
rclb
subb
fs
leave
cld
int3
mov
test
fsub
aas
or
scas
add
cmp
push
mov
sbb
test
sub
fucomp
in
push
mov
gs
mov
stc
fdivs
jl
mov
fmull
mov
shrb
dec
rorl
imull
insl
sub
sarb
push
jl
xchg
jle
push
cmc
lahf
cmpsb
das
xchg
out
sti
repz
pop
add
negb
xchg
pop
into
cmpsl
jb
fwait
jmp
jl
mov
dec
adc
cwtl
out
test
shll
adc
xor
scas
push
test
inc
std
jno
or
lods
or
movsl
lahf
push
aam
sub
dec
das
popw
mov
jo
xchg
js
dec
jae
in
or
es
es
jg
jp
mov
sub
call
adcb
pusha
cmpb
int
jg
sub
push
clc
mov
add
xlat
int3
lahf
imul
das
and
inc
adc
call
dec
jge
push
pop
adc
adc
jb
pop
nop
cli
test
jecxz
inc
push
jb
imull
xchg
sbb
shl
inc
movsl
call
adc
sub
xor
lret
adc
jae
rcrl
xchg
clc
aad
pop
repz
je
mov
push
sbb
jmp
jo
idivb
jmp
mov
test
pop
xchg
dec
out
lea
gs
xor
ficompl
cmp
cltd
dec
or
pop
aas
inc
rcrl
mulb
adc
jne
aam
jge
ja
cmp
mov
mov
push
xor
jae
jge
rcll
mov
and
cltd
inc
in
popa
inc
adc
dec
nop
lea
cmp
enter
jge
pop
int
sbb
scas
jns
imul
shlb
insl
push
sbb
xor
sbb
push
sub
ja
or
repz
loopne
shl
inc
mov
subb
mov
sub
cld
xchg
int3
sub
inc
xor
xor
inc
mov
shlb
push
or
scas
dec
xlat
jg
mov
ja
out
cmp
xchg
and
lea
xor
push
dec
fsubrs
cmp
jle
arpl
xlat
fucomp
dec
mov
enter
jle
gs
xor
and
das
insl
xchg
mov
std
xchg
lret
inc
xchg
out
andb
xor
sahf
outsl
mov
push
imul
int
sti
dec
subl
mov
jp
andl
inc
fidivrl
dec
aas
dec
mov
push
push
dec
es
lods
inc
andl
fwait
jbe
lret
dec
cmc
test
jg
cmp
aam
or
repnz
xchg
adc
sarb
and
or
mov
insl
repz
test
jno
adc
scas
jne
lods
mov
ljmpw
movsb
and
lahf
or
in
outsl
lods
and
xchg
jmp
testb
mov
out
pop
mov
cltd
insb
mov
hlt
adc
push
adc
shll
jge
pop
and
sahf
shll
cwtl
add
clc
sub
xor
scas
pop
frstor
and
and
jae
leave
mov
and
jle
scas
lock
jnp
popf
or
jmp
stc
dec
sarb
sbb
dec
mov
pop
sub
loopne
push
shll
pop
cli
add
xchg
sub
sbb
mov
not
sub
cmp
es
and
inc
pop
push
aas
cmp
jb
cmp
jl
into
add
je
mov
imul
sbb
mov
push
test
cs
push
test
int
adc
xor
sub
enter
ds
jbe
push
in
xchg
mov
sti
dec
push
and
lret
xor
aaa
sbb
pop
push
cltd
jns
mov
xor
adc
jbe
lock
outsl
sub
int3
cmp
shrb
and
xchg
pusha
jecxz
int3
push
or
jae
xchg
dec
mov
jge
adc
insb
test
mov
pop
pop
popa
out
movsl
pop
mov
mov
jecxz
fcomps
call
int3
jmp
lret
test
push
outsb
mov
nop
or
sub
cmpsb
cltd
cmc
ffree
aad
imul
divb
push
push
jmp
shl
inc
adc
mov
sar
fs
xchg
sub
adc
dec
sbb
icebp
sub
outsb
cltd
hlt
push
shrl
cmp
insb
pop
mov
adc
mov
push
cmp
stos
insl
sub
sbb
loop
mov
lds
loope
pop
rcll
inc
test
std
movsb
adc
push
xor
or
mov
out
es
jb
add
jge
pop
in
in
mov
cmpsb
popf
xchg
aad
fdivrl
hlt
out
push
leave
cmpsb
sub
xor
subb
gs
pop
fisttps
xchg
and
aam
inc
xchg
xchg
ret
notl
ds
daa
xchg
dec
xchg
pop
sbb
cmp
and
add
sbb
aaa
push
xor
push
dec
mov
dec
jmp
mov
mov
sarb
loop
inc
pop
int3
mov
dec
std
sbb
mov
lret
xchg
jl,pt
pusha
sti
stc
push
stos
outsl
gs
in
arpl
cld
into
mov
mov
dec
push
dec
mov
leave
and
cld
pop
ror
add
and
test
or
lret
mov
test
mov
cmp
and
mov
gs
mov
or
test
xchg
and
nop
add
scas
aas
nop
xlat
imul
sbb
cmp
rcrb
outsb
jge
les
sub
call
or
dec
imul
xlat
stos
inc
ss
aad
and
xorl
xchg
add
movsb
jp
mov
cmp
ljmp
ljmp
les
loop
sub
test
mov
stos
call
or
jb
pop
ja
cmc
adc
mov
pushf
out
cmp
mov
sbb
in
int
addb
mov
jne
outsb
cmp
jbe
inc
daa
inc
xchg
mov
cwtl
sarl
inc
xchg
lds
jo
adc
mov
cltd
je
mov
jb
pop
mov
insb
inc
adc
and
mov
add
sub
bound
jnp
mov
les
dec
test
shr
xor
cmpsl
imul
movsb
sbb
adc
mov
ficompl
lods
push
jmp
aaa
xchg
sbb
les
fldl2t
add
mov
push
mov
loopne
jl
push
mov
jg
or
stos
mov
incl
fisubrs
fiaddl
mov
es
sub
pop
adc
out
fcomps
addb
sbb
inc
pop
mov
mov
stos
out
imull
dec
pop
dec
sar
mov
repz
xor
add
pop
pop
enter
jbe
fadd
xorb
xchg
js
test
jno
bound
rcrl
dec
pop
xor
or
jnp
mov
lret
cmp
sub
cmc
cli
sbb
jne
xor
mov
or
sahf
fwait
arpl
dec
sbb
loopne
iret
stos
xchg
add
jno
mov
adc
sbb
dec
stos
mov
in
mov
fucomp
sub
inc
and
adc
add
xchg
push
mov
mov
cmp
rorl
dec
pop
dec
push
and
mov
fsubl
fisubs
je
test
jb
aas
push
inc
jo
push
fidivl
xchg
jae
pop
xchg
push
or
adc
aad
adc
jb
gs
inc
cmp
pushw
or
ret
push
orb
cmp
mov
mov
push
aad
cs
pop
addl
lret
into
sub
jbe
mov
cmp
aaa
out
xchg
jae
bnd
sub
cmp
mov
xchg
mov
mov
movsl
mov
repz
and
xor
jp
lods
movsl
push
mov
mov
mov
push
push
ds
adc
cli
inc
inc
and
imul
pop
jl
movsb
jns
fsincos
cli
adc
test
ljmp
shll
insb
push
push
popl
insl
fnstcw
ja
lea
cmp
mov
stc
repnz
xchg
xor
xor
add
dec
aam
xlat
scas
inc
jmp
lea
lds
inc
test
mov
int3
jmp
pop
cmpsl
mov
fs
fidivrl
add
fcoms
push
jns
sahf
push
loop
out
pushf
popl
xlat
lds
repz
pusha
pop
fmull
cwtl
push
inc
mov
test
test
cmp
sub
xchg
insl
inc
pop
sbb
aas
pop
xchg
mov
call
daa
mulb
repnz
in
movsb
dec
mov
jmp
or
ret
mov
pop
push
sbb
inc
inc
xchg
ljmp
stos
shl
fs
stc
aaa
sarb
gs
xor
divb
sub
and
pushl
adc
and
shll
mov
cld
outsl
mov
arpl
enter
mov
push
ljmp
adcl
pop
inc
adc
clc
xor
fsub
sahf
sub
sti
and
std
mov
jl
jne
dec
jae
jo
repnz
xchg
xlat
add
push
xor
inc
pop
addl
mov
or
add
or
pop
in
mov
add
mov
add
shl
inc
insl
loopne
bound
stc
inc
lret
inc
mov
in
ljmp
shll
std
add
mov
call
push
add
push
mov
clc
mov
lcall
push
mov
push
lret
sbb
jge
stc
fsubrl
jns
lock
push
xchg
mov
push
mov
inc
loop
popf
push
mov
popf
int
lret
aaa
les
dec
mov
ds
mov
fwait
out
jbe
and
jmp
sbb
xchg
mov
xchg
daa
stos
inc
mov
mov
add
fidivrs
xchg
adc
xchg
add
and
dec
inc
xor
sti
mov
shrl
xor
in
fs
mov
cmpsb
hlt
sbb
push
inc
pop
inc
lods
sbb
enter
int
push
or
and
jle
rclb
lahf
dec
fbld
enter
mov
dec
mov
or
iret
bound
jg
push
imul
xor
lea
push
fwait
xchg
popa
daa
inc
xchg
push
ljmp
lcall
push
stos
movsb
and
or
sbb
jmp
pop
sub
and
mov
loopne
jb
xchg
test
insb
xchg
mov
rcrl
jno
inc
fldenv
stos
or
pushf
push
cs
movsl
out
jbe
jae
mov
imul
lds
sbb
mov
stos
inc
cmpsb
lock
rcrb
mov
and
scas
and
ljmp
xchg
das
push
jno
cmp
add
shl
pop
hlt
xchg
xor
sbb
mov
push
jmp
dec
xor
mov
test
mov
sbb
scas
add
cld
lret
mov
icebp
loopne
adc
add
ja
test
out
sbb
push
aaa
sub
xor
jl
cmp
out
fnstcw
and
dec
scas
aam
sbb
test
mov
and
mov
sahf
call
cltd
lcall
rorb
cs
adc
adc
mov
lock
in
push
jmp
mov
lret
push
lods
mov
push
lcall
sti
push
pop
cmc
int
pop
fwait
lret
cmp
ret
cmp
push
mov
cmc
jp
xchg
daa
sti
inc
pusha
xor
pushf
rep
test
data16
inc
pop
jbe
mov
pop
or
push
cwtl
dec
mov
xlat
push
lock
and
fadd
shrd
out
insl
sub
arpl
jns
mov
js
enter
add
lret
iret
mov
mov
cmpb
mov
xchg
in
fmull
loop
mov
cli
iret
imul
sub
loope
push
and
fs
in
jp
fcomi
out
xor
pushl
ljmp
jns
fcmovnbe
sahf
mov
mov
arpl
movsb
jmp
inc
or
in
mov
in
daa
stos
xor
aaa
inc
push
insb
inc
daa
xchg
inc
pop
adc
dec
xchg
mov
out
sub
arpl
in
push
push
jo
mov
xor
lods
daa
fstpt
push
out
mov
ss
adc
add
and
callw
mov
insl
repz
mov
dec
or
mov
jecxz
fists
add
les
sbb
loope
pushl
mov
jbe
sbb
jns
lods
sbb
lock
imul
mov
pop
rclb
add
xchg
sbb
mov
inc
outsb
sub
jmp
aaa
out
mov
and
out
and
mov
sbbb
mov
clc
stos
mov
mov
sbb
dec
sub
out
pop
scas
push
dec
adc
rcll
sub
inc
xchg
daa
jb
sub
push
xchg
cs
sti
xor
loope
pop
dec
insb
mov
or
jg
insl
xchg
in
xchg
mov
fcmovb
pop
push
xor
clc
sub
fwait
mov
inc
cmpsb
mov
cmpsb
movsl
push
sub
jmp
in
dec
or
mov
pop
and
xor
jae
or
nop
mov
aad
scas
xor
in
jge
pop
arpl
push
out
es
jb
iret
pop
cmp
je
pop
xchg
dec
mov
jnp
push
jmp
mov
loop
cmp
or
mov
repz
sub
mov
mov
push
adc
lods
inc
addr16
loop
jge
jl
xorl
jge
mov
cmp
jmp
mov
inc
mov
mov
icebp
mov
push
mov
mov
pusha
loop
adc
idivb
mov
xor
stos
pop
jle
aaa
fidivrs
jne
sub
test
and
push
pop
cmp
sub
mov
dec
xchg
pop
pop
repz
inc
into
int
jecxz
add
inc
xchg
mov
mov
lret
xor
into
in
mov
movsl
cmpsl
inc
aam
mov
cmp
inc
pop
cmp
or
test
jne
and
and
outsb
and
les
mov
xorb
cmp
aaa
xchg
jae
aad
dec
push
mov
pop
fsubs
pop
jg
out
jno
push
lods
adc
mov
adc
decb
cmp
movsb
fdecstp
dec
jne
push
adc
adc
lea
das
mov
add
add
xchg
std
pop
sub
test
mov
or
bound
jo
inc
pop
mov
jecxz
sbb
mov
out
sahf
push
mov
int
adc
sbb
sbb
movsb
inc
xor
lods
outsl
xchg
ja
test
push
sbb
add
ss
mov
movsb
and
leave
mov
jecxz
mov
xor
xor
lds
add
adc
arpl
imul
add
xchg
and
jbe
stc
and
int
adc
xchg
aaa
lds
sub
in
adc
or
mov
jecxz
shrl
cld
out
lret
arpl
sbb
or
xchg
sub
adc
inc
fs
adc
mov
arpl
nop
inc
jmp
jge
xchg
xchg
pop
cmpsl
shlb
cmp
pop
xor
mov
push
mov
pop
shrl
pop
test
ret
jecxz
and
out
iret
divl
pop
cmp
call
cwtl
mov
lahf
aaa
mov
outsb
or
push
scas
inc
xchg
push
imul
or
enter
daa
aaa
stos
dec
int3
out
pop
ljmp
orl
or
mov
arpl
ja
adcb
icebp
iret
lock
lods
sub
jle
repz
pusha
shl
scas
dec
dec
into
adc
dec
or
test
outsl
xor
xor
fidivl
jno
pop
xchg
inc
mov
pop
cltd
and
getsec
imul
out
mov
in
andl
jae
pop
shrb
push
push
loopne
inc
cmpsb
or
mov
pushf
orb
inc
dec
mov
inc
dec
dec
xchg
mov
pop
mov
test
int
mov
or
pop
mov
int
dec
sub
push
jp
dec
ss
or
cs
fimuls
sbb
into
ret
and
out
push
test
pop
inc
test
cmp
dec
jg
repnz
sbb
rclb
push
jns
in
sbb
popa
pop
dec
aas
mov
adcb
dec
inc
adc
mov
mov
loope
mov
shll
fwait
in
jg
daa
mov
lret
xchg
jp
cmp
cli
sti
cmpsl
xor
lods
in
dec
lds
cmp
das
or
and
xor
add
pop
gs
push
cmpsb
lcall
std
mov
jbe
ljmp
stos
fsubr
sub
aas
and
and
call
xor
mov
mov
add
mov
inc
aad
outsb
fsubrl
mov
int
jno
pop
leave
mov
push
cmp
xor
xor
enter
push
mov
jae
out
jecxz
mov
mov
imulb
gs
das
and
idiv
inc
xchg
adc
out
push
jecxz
fs
jbe
add
mov
pop
mov
jo
incl
or
add
aaa
not
fcoms
adc
jecxz
in
xchg
scas
dec
xchg
outsl
dec
add
jns
fildll
jg
xor
mov
sub
xchg
in
outsb
imul
mov
mov
fnsave
into
cli
stos
call
sbb
aas
ds
push
mov
pushf
cmp
push
jl
mov
mov
add
or
add
js
dec
push
test
test
and
jbe
jle
xor
je
adc
lahf
test
shl
aad
pop
lock
and
jo
dec
into
aaa
lret
lods
add
enter
notb
iret
repz
lahf
mov
sbb
xchg
or
out
les
test
sbb
fldenv
cmp
jae
lcall
adc
mov
push
mov
jge
mov
lret
cs
inc
cmp
call
sub
outsb
fisubs
jo,pt
lods
mov
mov
jbe
jmp
adc
lcall
jno
sub
inc
test
addl
lret
adc
aas
lea
jnp
repnz
cmp
insb
out
out
jmp
inc
sbb
ds
mov
repnz
mov
insb
scas
in
pop
xor
pusha
or
lods
push
stos
or
pop
fs
inc
lea
mov
rcrb
mov
subb
or
cwtl
and
pop
outsl
jecxz
sbb
jb
in
push
fxam
sbb
inc
pop
pop
sub
gs
mov
pop
adc
enter
std
call
add
inc
std
push
jg
ljmp
jmp
pop
pop
in
inc
mov
or
lods
pusha
push
fwait
xchg
xor
fcompl
or
lahf
push
in
gs
xchg
add
cmc
mov
loopne
loop
hlt
cmp
jbe
xchg
sub
cmp
imul
pusha
sahf
mov
das
clc
popf
jns
rolb
xchg
push
sbb
sub
fldcw
mov
adc
gs
in
cmp
xchg
jmp
pop
mov
test
clc
call
loopne
addr16
out
ds
les
cmp
mov
adc
cmp
fstps
out
xor
inc
es
dec
push
in
pop
sub
in
fstpl
bound
inc
ss
mov
jnp
pop
daa
icebp
sub
pop
ds
mov
adc
cmp
and
and
repz
adc
loopne
loope
int3
xchg
ret
xor
dec
out
hlt
mov
xchg
mov
inc
or
or
cmp
adc
cmp
sub
adc
fwait
or
xchg
sbb
cmp
or
mov
dec
mov
shlb
jo
lea
jb
lcall
lahf
rcl
jb
push
pop
mov
pushf
mov
lods
pusha
mov
mov
add
mov
es
xor
mov
xor
add
les
and
fldl
pop
mov
cwtl
cli
inc
imul
sti
jne
and
jle
mov
inc
movsb
gs
rolb
addr16
insl
dec
es
add
lret
mov
add
mov
dec
fsubrs
sbb
add
test
push
mov
cmc
nop
subb
or
pop
mov
repz
xchg
int
mov
popa
les
xorb
sub
sbb
test
jne
leave
cmpsb
adc
mov
pop
add
inc
incb
dec
out
lret
test
outsb
sub
or
adc
out
fwait
mov
xor
fistl
mov
inc
scas
mov
mov
push
jb
sbb
jbe
out
je
mov
or
push
mov
add
popf
stos
jo
adc
sar
ja
sbb
dec
and
cmpl
ja
movl
mov
sub
dec
daa
mov
jg
sbb
das
pop
stos
xchg
fxch
aaa
xchg
int3
add
pop
inc
fnsave
mov
pop
out
push
fs
or
xor
sbb
lret
mov
cmp
call
push
xor
jmp
out
xchg
add
lcall
icebp
ds
and
movsl
pushf
push
movsl
jecxz
add
push
mov
jmp
push
jnp
adc
jnp
out
movsb
xor
out
jmp
insb
mov
push
xchg
and
sbb
push
fstps
pop
stc
cmp
mov
movsb
movsb
xchg
rol
push
lock
sub
cmp
xchg
mov
repnz
movsb
lds
push
add
lret
adc
ss
sub
xchg
outsl
je
mov
popf
loop
inc
mov
xchg
out
nop
loope
sarb
mov
dec
nop
sar
stos
decl
fcmovnu
lea
push
fsubr
scas
mov
fmull
inc
adc
je
jmp
repz
repz
adc
pop
icebp
in
or
mov
sbb
mov
mov
lcall
pushf
inc
jg
pusha
pop
imul
push
dec
xchg
enter
ret
inc
and
push
lcall
roll
mov
mov
jo
popa
xlat
push
push
jle
jbe
pusha
mov
mov
mov
test
push
mov
imul
cmp
inc
push
adc
jbe
ds
daa
and
and
pop
sarb
mov
push
cmp
mov
dec
and
stc
xchg
aas
adc
xor
cmpsb
add
out
or
ficoms
stc
into
cwtl
push
mov
movsb
sub
mov
dec
ror
lret
mov
popf
ss
les
cmp
fistl
gs
jb
cmc
daa
cmp
call
adc
stos
push
push
int
stos
and
andl
cmp
push
test
add
sbbb
data16
jle
adc
das
add
jns
je
ds
cs
rcr
cmp
push
pop
inc
icebp
jg
fldl
int
ljmp
loop
in
aad
mov
arpl
insb
ljmp
iret
mov
lret
cmpsb
or
aaa
add
out
push
daa
push
jle
aam
pop
out
jp
mov
mov
sti
add
out
add
xchg
inc
scas
data16
out
fs
enter
sub
mov
in
adc
sahf
xorb
push
clc
andb
jl
scas
cli
sbb
xor
popl
lret
in
sub
repnz
xchg
adc
shrl
dec
adc
repnz
dec
xor
and
int
pusha
movsb
push
out
sbb
idiv
test
icebp
repz
cli
xchg
aas
adc
test
jecxz
pop
int3
xchg
mov
out
adc
aas
push
mov
aad
push
lret
xor
inc
sub
std
push
data16
mov
xchg
and
aam
loop
pusha
or
sahf
mov
and
je
nop
or
bound
mov
stos
insb
xor
pop
push
inc
push
push
fwait
rorl
loope,pn
push
sub
jbe
pop
push
mov
imul
ljmp
mov
ja
insl
cmp
ja
inc
xchg
std
ja
or
pop
repnz
imul
adc
xor
testb
lods
and
mov
and
pusha
jns
mov
into
adc
subb
sbb
push
or
push
add
xchg
int3
fwait
cmp
add
lock
cwtl
rorb
out
cmpsl
and
daa
cwtl
dec
repnz
mov
mov
adc
cltd
mov
sbb
push
cli
andb
in
aas
cwtl
iret
xlat
inc
xchg
mov
xor
hlt
insb
jp
ret
adc
pop
jl
int
push
fwait
mov
repnz
mov
into
cmp
add
sbb
int
add
or
mov
sbb
cmp
xlat
es
or
xor
rolb
push
je
cmc
sbb
hlt
push
mov
jo
jge
xorl
push
imul
xchg
mov
sbb
movsb
lea
ljmp
dec
aad
repz
mov
push
lods
filds
add
testl
es
mov
pop
aad
js
jno
mov
xchg
and
int
std
fbstp
lds
out
movsl
or
push
dec
clc
stos
fdivrl
push
adc
shll
in
xlat
jge
push
cli
fsubl
dec
bound
lahf
xchg
jle
test
pop
stc
and
pop
and
aam
hlt
pop
or
cmp
fimuls
test
cmp
mov
jmp
mov
pop
test
or
pop
shll
pop
out
sub
push
push
leave
dec
fnstenv
mov
pusha
dec
sbb
adc
adc
cwtl
lahf
es
enter
stos
or
add
lcall
pop
jmp
push
dec
push
cld
lods
in
ss
arpl
shrl
pop
pop
loop
inc
test
pop
daa
xchg
cmp
mov
out
sbb
aas
sbb
les
add
dec
mov
or
inc
inc
mov
sub
mov
or
dec
rorb
negl
xchg
lds
jns
lock
jp
call
sbb
lds
inc
xchg
icebp
cmpb
aas
mov
sti
jb
lods
jns
push
movsb
jmp
sbb
dec
lcall
pop
dec
aaa
call
cmc
xor
inc
js
and
daa
push
jecxz
sbb
lock
outsb
ficoml
add
fwait
gs
filds
imul
push
mov
das
and
insb
and
xchg
scas
ficoml
rcll
enter
push
adc
pop
aaa
pop
into
addr16
cld
fsubrs
out
push
outsl
mov
std
dec
xlat
push
fidivrl
mov
or
cmp
sti
xor
jmp
cwtl
add
out
sarb
pushf
mov
cmpsl
stos
mov
stos
stc
mov
cmp
ds
inc
sbb
sub
push
pop
daa
mov
data16
push
jecxz
repnz
mov
inc
cwtl
jb
add
cmpsb
dec
jp
fisttpl
lods
sbb
pop
pushf
adc
pop
fcmovu
mov
adc
jbe
push
movsl
outsl
xchg
faddl
ret
mov
test
fistpl
out
mov
cwtl
cld
sahf
cld
sub
ret
sbb
mov
into
xor
mov
or
inc
and
jl
inc
xor
sarl
imul
in
inc
sub
outsb
insl
sbbb
cltd
xchg
or
in
out
cld
and
or
aas
popa
fcomps
and
and
pop
lock
inc
in
dec
iret
mov
xchg
test
push
adc
cmp
sbb
sbb
inc
pusha
xor
pop
and
ror
jo
jmp
js
lods
cli
jbe
outsl
mov
rcrb
jbe
aas
push
mov
popa
es
dec
mov
sti
cmp
sub
lds
pop
cmp
rcll
jbe
ret
sti
xor
jl
rcll
mov
lea
mov
std
out
ss
enter
sti
jo
sbb
mov
sahf
xchg
mov
inc
sbb
sub
cld
inc
rorl
adc
les
arpl
jl
cmp
fchs
jo
xchg
cmp
int
cmp
cmpsb
in
pop
sbb
enter
scas
lock
dec
jmp
test
or
add
call
and
prefetch
jnp
inc
outsl
in
and
movsl
push
int
dec
dec
push
xor
test
pop
call
pop
jne
imul
xchg
pushl
cmpsb
ret
and
popa
dec
dec
inc
mov
xor
xchg
insb
sahf
test
loop
fnsave
mov
xor
xchg
inc
sub
sahf
jl
inc
jl
sub
push
sbb
push
icebp
inc
inc
xchg
push
push
ljmp
mov
mov
stc
pop
ja
popa
mov
xchg
sub
sbb
dec
js
mov
daa
xor
mov
and
or
jmp
mov
sbb
xor
jnp
andl
lds
adc
xor
orb
mov
pop
lock
xor
adc
fs
mov
sub
pop
scas
rcrl
pop
add
imul
leave
or
push
mov
push
iret
pop
insb
mov
mov
or
and
push
add
mov
je
int3
hlt
add
inc
ja
std
fidivs
xchg
imul
dec
cmp
js
dec
inc
dec
cltd
push
aas
mov
adc
mov
xchg
testl
push
lods
sub
push
aad
aaa
aad
mov
xlat
fadds
imul
in
insl
ret
lahf
jp
mov
imul
inc
clc
shll
arpl
cwtl
jmp
cmp
and
cmpl
mov
xlat
icebp
inc
jge
cmp
addr16
inc
leave
cmp
pushf
push
cmp
xlat
adc
mov
outsb
loopne
lret
cmc
addb
test
cmp
mul
xor
adc
mov
sti
lods
cmp
hlt
outsb
imul
sbb
sub
mov
sti
add
jmp
push
movsb
fbstp
inc
dec
rolb
ljmp
mov
lds
insl
push
ror
jnp,pt
push
push
jbe
xor
je
mov
pusha
ds
adc
jmp
mov
mov
mov
add
or
out
push
sub
sbb
in
add
adc
mov
rorl
lcall
xor
jl
jo
pop
sub
adc
cwtl
xor
inc
dec
sbb
data16
pushf
loopne
mov
or
lea
out
add
out
mov
nop
data16
lods
lret
jae
imul
mov
popf
add
dec
push
add
clc
aam
les
push
out
dec
dec
es
sbb
or
fmul
loope
into
pop
ja
daa
xor
xchg
sbb
sbb
add
aam
rcrb
cmp
xorl
lahf
jl
sub
push
push
xchg
pusha
mov
fnstcw
int3
push
cmp
or
loop
mov
cmp
orb
rcrb
lods
lods
pop
loope
push
int
psadbw
mov
dec
out
stc
jle
push
and
in
jae
test
fwait
inc
arpl
adc
clc
pop
imul
lock
fcmove
adc
rclb
jmp
jecxz
out
and
cmpsl
adc
or
add
mov
adc
mov
in
adc
xlat
mov
popf
lcall
or
js
mov
fisubs
repz
pop
sub
or
jmp
dec
jmp
pop
push
dec
xchg
and
sbb
das
sub
cmpsl
mov
jmp
sarl
and
cmp
mov
mov
and
negb
js
sub
or
ds
arpl
mov
nop
insl
inc
loopne
dec
hlt
mov
jns
jp
popf
adc
sarb
xchg
mov
fwait
inc
push
and
dec
iret
xor
and
cltd
arpl
adc
adc
xchg
cmp
jne
aas
ja
hlt
mov
dec
ss
out
lret
test
fnstcw
sahf
mov
xchg
cltd
fistps
mov
movsb
adc
inc
into
mov
xchg
shll
movsb
fists
sbb
dec
js
mov
add
clc
or
xchg
int3
aad
cwtl
push
mov
cmp
sbb
jb
popa
add
daa
sub
xor
out
sub
stos
aad
add
pusha
mov
lret
js
out
or
movsb
jno
shlb
pop
fcomi
lods
fldenv
shll
sbb
ret
push
push
mov
aam
xorb
enter
mov
pop
sub
hlt
mov
or
dec
mov
ret
jo
std
pop
out
popa
in
sbb
mov
clc
xlat
mov
cld
mov
dec
pop
xchg
rcll
adcb
fsubrs
mov
repz
xor
int
insb
in
mov
out
pop
mov
int
mov
std
leave
aam
mov
arpl
inc
inc
repz
jmp
add
mov
push
dec
cwtl
pop
test
daa
loopne
fistps
aaa
push
xchg
cmp
mov
pop
mov
mov
mov
iret
jp
push
pop
cmpsb
mov
pushl
in
dec
xchg
fmull
push
das
inc
sahf
xchg
mov
or
push
cmp
inc
and
xchg
add
cmp
arpl
sti
test
lods
push
fldl
cltd
scas
fiadds
push
out
inc
int3
aaa
xchg
enter
rclb
jl
xor
xchg
popa
faddl
cs
mov
push
jae
push
jno
dec
or
add
vmovhps
mov
aam
mov
call
adc
xor
jmp
xorb
aad
jecxz
ljmp
shrb
dec
es
es
fcoms
push
or
sbb
sbb
std
cmp
es
mov
add
lods
sub
fisubrl
cmpsl
dec
or
push
stos
loop
jae
xchg
jne
xor
jns
xchg
push
adc
shll
fistpll
iret
and
scas
test
lock
xchg
xchg
nop
mov
filds
mov
push
push
jbe
pop
inc
roll
fcomps
mov
dec
loope
test
es
add
cltd
and
inc
mulb
xchg
xorb
arpl
mov
sub
clc
movl
jne
scas
cli
fs
sarb
sub
pop
push
aam
or
xchg
addr16
mov
lds
cld
stos
jns
pop
sbb
cmp
and
cli
push
xchg
repnz
jp
fildl
dec
lcall
xor
inc
mov
adc
int
hlt
inc
out
sbb
push
xchg
int
std
or
daa
cli
xlat
dec
fisttpll
xor
dec
idivl
sub
lahf
stc
fisttps
or
lcall
enter
testb
cmpsb
stc
xchg
pop
icebp
mov
mov
xchg
mov
mov
mov
lds
add
testl
daa
scas
pusha
outsb
dec
mov
mov
pop
dec
xor
popf
or
jge
fdivr
push
int
or
mov
xor
sbb
mov
out
cmpsl
mov
mov
ljmp
sbbb
fsubs
push
pop
sub
movsl
mov
in
and
dec
jl
js
movsl
inc
outsb
mov
icebp
mov
mov
cmpsb
fcoms
dec
ljmp
push
je
add
fcmovb
rcrb
xor
add
out
cs
push
push
pusha
mov
je
jp
test
mov
pop
or
cld
jnp
in
and
push
push
aas
cs
fnstenv
mov
or
nop
arpl
cmp
out
jecxz
fsts
cmc
std
sarb
pushf
hlt
lods
loope
xchg
jg
push
das
bound
fmulp
pusha
repz
lds
cld
cmc
rcrl
mov
xor
adc
fwait
leave
in
push
mov
test
mov
fs
lret
push
mov
jle
and
cmp
push
push
inc
outsl
insb
imul
testb
imul
pop
xchg
in
mov
aad
and
add
out
test
cmp
sbb
aas
data16
mov
rorl
leave
sbb
cwtl
sub
cmpsl
jg
xchg
icebp
xchg
adc
cwtl
out
and
dec
dec
inc
bound
leave
ljmp
pop
cwtl
adc
or
nop
icebp
sbbl
loopne
lret
in
stos
rorl
mov
mov
and
push
or
inc
dec
fidivrs
pop
ljmp
ljmp
std
out
dec
cmpsb
dec
loop
pusha
out
inc
cmp
add
inc
or
les
and
or
pop
loopne
rcll
inc
adc
jo
and
bound
into
xlat
mov
cli
xor
cmp
push
or
int
xchg
out
and
jle
les
inc
cli
xor
movsl
xor
mov
fisttpl
inc
xorl
lcall
ja
adc
adc
adc
stc
mov
mov
or
and
dec
pop
gs
push
xchg
mov
jbe
and
int3
adc
lds
mov
inc
arpl
or
jb
insl
push
xlat
dec
lcall
jae
out
loopne
imul
loope
imul
push
in
leave
lahf
push
mov
push
js
hlt
adc
xchg
add
outsl
loop
ret
int
mov
sub
adc
push
sub
jnp
out
iret
mov
shlb
sub
add
popf
rcrb
out
mov
jno
dec
jns
cld
push
mov
lock
cmc
dec
aas
add
shr
scas
test
mov
and
popa
cmpsb
pop
and
hlt
nop
sbbl
and
pop
dec
and
push
and
aas
or
mov
sub
and
mov
enter
xchg
xor
add
cmpsl
jle
sub
cmp
or
ja
cmp
loope
add
test
cld
fists
sub
nop
mov
cmp
cmc
cmp
add
sbb
je
fnstenv
mov
in
jp
faddl
ja
push
push
mov
adc
jmp
cmc
sahf
lock
pusha
xchg
mov
imul
lock
jmp
add
inc
nop
cmc
dec
push
ficoml
testb
push
sbb
rcl
add
imul
jl
jnp
mov
out
lods
push
cld
lea
lods
jo
xor
js
out
push
xchg
gs
add
pop
imul
fs
in
xchg
movsl
cli
pop
mov
lcall
clc
mov
adc
xor
test
xor
sahf
daa
push
int
inc
dec
stc
adc
cmc
pusha
sbb
xchg
mov
enter
sub
mov
inc
cmp
fcomi
cmp
arpl
lcall
sbb
sbb
js
sbb
subl
adc
stc
js
in
and
stos
push
pusha
cmp
fs
stos
add
xor
fldl2e
sbb
scas
push
fstl
xchg
loopne
xor
imul
mov
or
imul
jno
mov
dec
outsl
mov
popf
lahf
jne
inc
mov
addl
add
arpl
add
mov
jne
mov
andb
scas
lahf
popf
cmp
jge
adc
shlb
mov
xchg
xchg
add
in
dec
pop
pop
mov
bound
cmp
aad
pushf
cmp
ret
sub
scas
xchg
lret
in
jb
pushf
adc
mov
lret
repz
or
outsl
cs
popf
or
mov
cmp
test
mov
pop
and
out
jo
jmp
xchg
cmp
aas
aam
aas
das
and
pop
loop
pop
leave
call
icebp
jb
cltd
std
push
mov
fs
xorl
push
fdivs
les
xor
jne
xor
mov
movl
clc
mov
insl
in
and
dec
lret
inc
movsb
cwtl
inc
out
shrl
cmp
imul
and
jecxz
sbb
pop
enter
sbb
int
inc
subl
insl
lcall
xor
mov
push
and
mov
outsl
pop
les
cld
mov
in
loop
add
inc
leave
std
dec
sub
pop
insb
mov
sarb
inc
inc
sub
push
or
fcompl
or
aam
jo
add
popl
push
sub
push
loopne
jle
test
dec
sbb
fs
jne
jp
bound
test
jnp
subl
ss
add
aas
sti
mov
push
mov
orl
add
cmp
ljmp
mov
test
add
cmp
sbb
orl
mov
sbb
repz
lret
shll
mov
xchg
push
cmp
mov
test
ds
and
cmpsb
aaa
xor
cld
mov
lret
dec
jno
push
stos
repz
pop
xor
dec
jo
fdivs
aaa
sbbb
lret
mov
shl
ret
push
pop
pop
sbb
in
test
fsubs
rolb
or
jnp
ds
imulb
aam
stos
stos
cmp
insl
mov
pop
movsl
lods
cld
cli
inc
pop
idivl
and
pop
pop
dec
in
pop
cmp
xchg
arpl
or
and
insl
aam
add
iret
and
je
movsb
cmpsl
dec
pusha
sbb
or
adc
sbb
sbb
push
and
push
outsb
sbb
loopne
cltd
mov
xor
dec
push
xchg
out
std
dec
ret
cltd
jb
loop
aas
cmp
add
pushf
add
dec
xchg
mulb
xorl
out
std
cmp
inc
jne
ds
cmp
pop
pop
add
orl
imul
mov
das
mov
xor
lahf
stos
repnz
mov
push
stos
or
sahf
cmp
xchg
ljmp
js
sbb
jne
sbb
js
jnp
push
mov
lods
xor
sbb
sbb
xor
outsb
aas
push
dec
out
push
es
lcall
ret
jb
imul
adc
gs
jmp
jne
xlat
pop
push
mov
push
mov
sbb
movsl
pop
lods
inc
inc
pop
scas
xchg
aas
into
mov
in
movsb
inc
loope
sarl
jl
dec
sarl
add
ljmp
mov
xchg
jg
and
std
cltd
cmp
sub
roll
in
jecxz
jp
rclb
xlat
sub
mov
add
jecxz
aaa
lea
xchg
mov
test
and
out
sbb
push
ljmp
cmp
pop
xchg
or
into
xor
repnz
mov
xlat
mov
arpl
dec
sbb
sub
inc
addr16
dec
jno
jae
dec
test
inc
mov
jmp
lock
incl
xor
adc
fildll
adc
stos
int
pop
movsb
mov
andl
insb
mov
inc
hlt
rcrl
mov
sarb
cmc
inc
pop
pop
or
adc
cmp
insl
and
in
call
mov
mov
incb
lea
lods
mov
jp
xor
pop
xchg
xlat
loopne
out
jecxz
add
push
xor
xchg
nop
fdivs
in
jo
add
and
fistpll
repnz
mov
add
leave
sahf
lret
jecxz
adc
add
imul
jbe
and
gs
sub
push
call
jnp
jbe
fst
out
mov
es
out
mov
mov
es
scas
std
ficoms
dec
fdivrs
cli
ljmp
pop
push
int3
mov
and
pop
adc
aaa
popa
in
push
and
adc
minps
rolb
in
mov
mov
jnp
lret
or
push
je
mov
inc
adc
jecxz
or
add
add
push
mov
or
adc
scas
and
mov
arpl
mov
aad
cmp
lret
lahf
mov
ds
sub
int
fsubl
sub
into
cmc
and
pop
cmp
push
push
lea
addr16
loop
add
hlt
or
addb
daa
push
jns
xor
fcmovu
and
cmc
mov
ja
xchg
in
xchg
jbe
scas
cltd
stos
rol
xor
imul
shrl
leave
mov
in
ljmp
lcall
shll
cmpsb
fcmovne
push
mov
jle
mov
loopne
jae
fld
mov
outsb
pop
cmc
mov
jnp
lahf
bound
mov
jnp
in
or
mov
scas
xchg
xchg
ret
repz
mov
loop
iret
loop
inc
daa
daa
int
mov
addr16
cmc
mov
or
jbe
leave
cmp
pop
mov
cs
rcll
andl
fcompl
mov
aad
adc
adcb
ljmp
dec
or
sub
dec
add
cmp
dec
or
inc
or
sub
sbb
sub
jae
inc
les
mov
pop
adc
shlb
inc
jb
add
fildll
mov
cmp
add
xchg
cmp
in
fbld
leave
cmp
or
movsl
push
lcall
or
vpunpcklbw
out
add
decb
inc
push
fadds
mov
xchg
adc
cmpsb
sub
jae
outsb
dec
inc
mov
xlat
cmp
sbb
pop
cld
ret
js
pusha
add
sarb
jmp
dec
mov
imul
pop
lods
sahf
mov
outsl
xchg
pop
add
iret
xlat
push
or
add
push
push
adc
push
or
lahf
pop
cltd
std
lods
adc
outsl
pop
fdiv
test
cmpsl
sub
gs
in
out
jno
frstor
jle
xchg
push
or
mov
shlb
cs
pop
cmp
pop
mov
sub
mov
aas
das
addr16
push
loopne
jns
lea
in
nop
dec
and
mov
inc
jg
out
xor
or
test
add
ljmp
adc
sub
pushf
repz
stos
les
in
adc
or
incl
sbb
lock
lods
std
or
aad
xchg
mov
pop
jne
xchg
test
fs
and
mov
movsl
pop
outsb
sbb
aam
pop
inc
aas
jnp
in
stos
popf
cmp
jg
cmpsb
sub
inc
orl
imull
ljmp
out
ja
mov
in
mov
std
add
daa
sbb
popf
cwtl
test
gs
aam
sbb
xor
outsb
sub
test
mov
mov
les
dec
jo
and
or
mov
cmp
decl
mov
mov
cmp
sub
sub
sub
or
int3
out
loopne
adc
movsl
scas
pushf
add
push
mov
pushf
mov
jb
fcoml
adc
adcl
subb
pop
xchg
xchg
out
adc
xlat
fwait
addr16
inc
mov
pop
jl
sub
sbb
push
sbb
movsl
hlt
lods
jge
into
adc
mov
rcrb
out
data16
stos
test
mov
je
test
dec
xor
sub
es
lods
repnz
add
insb
pop
mov
xchg
mov
push
fs
aaa
xchg
mov
imul
fbstp
out
mov
cmpsb
xchg
cmp
adc
or
inc
cmp
pop
add
pop
sti
adc
and
mov
scas
out
sbb
lods
mov
pop
es
or
mov
add
movsb
jb
xchg
dec
mov
fistps
int
cs
jno
inc
cs
loope
test
ss
mov
in
sbb
mov
mov
fidivrs
movl
leave
and
or
xor
cmp
add
sbbb
aaa
jge
push
lock
lods
rolb
pop
jg
mov
hlt
mov
aam
icebp
xchg
cmpsb
in
je
push
out
jge
sbb
rcll
shl
fs
mov
stos
aam
clc
outsl
inc
sti
push
hlt
and
dec
fnstenv
adc
mov
mov
push
pop
ja
aas
mov
cmpsl
out
inc
xchg
and
test
adc
ljmp
mov
cld
sub
addl
in
jne
sub
jne
jo
inc
dec
sbb
lahf
cmpsb
hlt
ret
out
rcrl
jmp
adc
sbb
jbe
fmull
dec
xor
cs
call
mov
pop
or
bound
loop
mov
add
or
add
adc
lds
popf
cmc
cld
cmp
das
js
pop
fwait
out
xlat
jmp
inc
cmpsl
imul
out
iret
lcall
mov
pushf
mov
icebp
lret
or
testb
in
or
mov
hlt
lods
fisubrl
lock
sbb
cmpsl
out
fbld
and
mov
sahf
rcll
imul
pop
pushf
out
xor
cmc
push
stc
leave
and
jmp
xor
sub
dec
rclb
sub
test
push
clc
push
shr
iret
iret
popa
inc
mov
push
arpl
mov
jns
add
add
in
or
or
adc
add
scas
mov
xchg
aad
repz
addr16
sub
sti
adc
pop
std
xchg
mov
fcomps
mov
popa
push
pop
mov
cmc
pop
mov
dec
stos
or
mov
out
inc
inc
mov
loope
loop
push
aam
dec
adc
andl
mov
ss
out
mov
or
stos
mov
fimuls
enter
and
jle
in
stos
jb
popa
scas
into
in
ja
mov
adc
xchg
out
push
or
dec
test
pop
shrb
and
pop
mov
push
pusha
jle
jge
sahf
out
lret
mov
jg
cmc
lds
dec
add
pop
dec
pusha
pusha
jno
or
fmuls
jne
icebp
inc
sub
lahf
xchg
cmp
mov
ljmp
nop
jns
pop
dec
les
lret
dec
pop
mov
or
or
in
cltd
faddl
in
insl
sbb
call
mov
sub
lods
cmp
jecxz
cltd
loop
mov
adc
add
inc
xor
int3
ds
cli
cmp
dec
mov
loop
bound
dec
jge
add
jmp
push
jecxz
adc
cs
pop
insb
cmpsl
daa
test
xor
test
push
lret
pusha
jecxz
cwtl
iret
xor
jbe
data16
or
dec
mov
mov
mov
flds
cmp
or
cmp
clc
int
jg
add
out
dec
push
jmp
xchg
jo
jo
inc
mov
rcll
mov
jbe
insl
pop
imul
pop
lods
inc
and
inc
sahf
and
or
les
mov
icebp
imull
ljmp
xlat
dec
xchg
cltd
push
jnp
mov
sahf
jecxz
scas
pop
int
adc
jae
pop
cmp
in
mov
dec
cmp
jb
push
and
aad
fistpll
cmp
lods
test
jns
int
scas
in
sti
mov
insl
scas
mov
xor
fistpll
cli
inc
jae
and
fmuls
insl
test
aam
int
andl
pop
mov
mov
pop
inc
pop
xchg
mov
xchg
sti
xchg
cmp
pushf
lock
cltd
jo
push
fistl
cmp
arpl
dec
rclb
or
lcall
aaa
or
pop
xchg
mov
pop
mov
cmp
lods
sub
ja
dec
adc
lods
push
movsl
and
mov
push
outsl
mov
pop
mov
scas
mov
xor
and
jo
push
mov
repz
arpl
notb
cmp
mov
imulb
sti
jb
add
insl
mov
pop
inc
popa
outsl
add
cmp
add
cmpb
lods
cld
ljmp
sbb
leave
jae
xor
sarl
fisubl
pusha
sub
aas
push
mov
sub
sbb
cwtl
pop
das
cmp
lock
jns
rcr
push
inc
or
fwait
sbb
xor
mov
fidivl
data16
fisubrl
data16
pop
or
nop
lahf
pop
imul
ss
adc
movsl
pop
aad
sahf
add
or
test
adc
cld
push
inc
daa
fcompl
int3
arpl
call
ficoms
fisubs
push
clc
out
aas
test
dec
cld
test
ss
pop
cli
int3
test
xor
jns
arpl
mov
cs
or
dec
aam
xlat
insb
mov
mov
rcl
push
sub
lret
xlat
sub
mov
negl
iret
shlb
mov
ret
orl
lods
cltd
pop
jg
scas
pop
loop
or
mov
pusha
icebp
imul
pop
dec
stos
inc
inc
repnz
mov
out
mov
cmp
sahf
cmp
jnp
jo
jmp
mov
mov
ljmp
out
std
jp
les
stc
xchg
inc
xchg
call
or
add
cmp
and
icebp
fsts
mov
xchg
mov
ss
xor
xchg
xchg
cmp
dec
and
xlat
jp
dec
inc
jl
lret
loope
call
jnp
adc
sub
in
call
sub
fdivrl
push
and
js
mov
xchg
dec
imul
xor
daa
insl
jo
push
movsl
cmp
aad
mov
lods
mov
push
cmpsb
pop
mov
inc
mov
arpl
fs
dec
aas
jns
daa
sbb
rclb
mov
fmul
and
adc
divl
pop
arpl
pop
int
and
bnd
mov
mov
push
or
js
jne
mov
xor
sahf
pop
push
ret
in
outsl
xchg
sub
rcll
jp
arpl
pop
pop
pop
pop
mov
mov
lods
stos
int3
cmp
imul
hlt
pusha
or
mov
mov
cmp
bound
jmp
add
xchg
in
call
ss
adc
out
cmp
int3
lds
dec
xchg
rorb
xor
icebp
sub
idiv
xchg
cmp
inc
xchg
sbb
jno
jno
xchg
jl
jae
push
sarl
gs
in
test
enter
insb
sbb
mov
jae
jle
xchg
leave
rclb
ljmp
lods
sbb
mov
cmp
mov
adc
or
inc
mov
jne
or
push
loopne
pop
lods
shl
dec
lahf
jle
mov
sahf
into
push
rorl
push
cmp
pop
and
sbb
jg
inc
dec
cmpb
fistpll
xchg
inc
and
xor
push
adcl
pop
pop
ss
inc
cmpsl
or
imul
sub
and
jo
and
jae
insl
and
lock
or
int
and
mov
xchg
ror
mov
in
jp
and
call
push
jp
aas
mov
dec
jo
mov
popa
lock
das
sbb
aam
and
imul
pop
in
cwtl
lea
mov
aam
or
jne
pop
push
and
sbb
jecxz
xchg
rcrl
push
loop
push
push
mov
lds
xchg
std
push
outsb
push
stos
pop
or
mov
scas
or
out
subb
test
aam
xchg
xor
pop
ljmp
subl
es
scas
iret
inc
lock
stos
sbb
add
xor
cmp
mov
cld
jbe
sti
rcrl
xchg
push
repz
cmpb
in
inc
imul
mov
notb
cli
in
test
lahf
xlat
dec
cmpsl
into
out
and
push
cmp
hlt
mov
cmpsb
enter
rol
dec
das
mulb
xchg
lock
divb
push
fidivl
fldcw
mov
int
and
mov
insb
sahf
fwait
fs
cltd
cli
bound
and
aaa
mov
pop
xor
mov
jmp
or
dec
inc
pop
cmp
insb
test
adc
shrl
jb
adc
arpl
mov
xchg
mov
popa
ja
dec
cwtl
mov
popf
inc
aaa
mov
ficomps
rclb
jo
or
push
add
fbld
ds
push
adc
imul
scas
notl
mov
cmpsl
pop
in
hlt
add
dec
sbbl
mov
ja
add
mov
or
sub
fucom
arpl
mov
in
out
jae
loope
ret
shlb
sbb
mov
cld
jbe
subb
test
jmp
inc
pushf
push
xor
mov
jecxz
jge
sbb
mov
or
aam
add
addb
insl
test
push
lock
pop
cld
adc
sahf
sub
sbb
jge
hlt
arpl
xchg
mov
cs
call
cmp
cs
stos
and
cmp
push
mov
or
movsl
adc
das
aas
repz
fdivs
and
jp
rcr
or
push
orb
ljmp
and
cmc
into
mov
sbb
scas
inc
jnp
add
adc
jbe
inc
dec
insb
xor
lods
dec
push
and
cmpb
inc
push
movsl
gs
test
pop
inc
mov
ds
dec
jbe
aaa
repz
je
stos
fisttpll
xchg
add
loop
pop
notl
push
jbe
adc
push
faddl
mov
pop
sub
js
cmp
adc
pop
pop
inc
loop
decl
adc
dec
mov
cs
inc
insb
mov
adc
lea
inc
int3
and
int3
in
loope
jo
out
inc
jl
or
lahf
add
ja
or
pop
movsb
pop
xchg
pop
mov
mov
dec
addr16
xchg
or
ss
subb
mov
jg
or
in
inc
push
jp
icebp
or
add
aam
cwtl
mov
dec
fcompl
sbb
and
cmp
push
and
ja
sub
in
out
mov
sub
fmulp
mov
add
pusha
lret
mov
xor
icebp
add
push
xchg
inc
int3
and
es
jmp
insb
stc
add
push
and
mov
sarb
adc
sbb
js
adc
push
add
jge
std
jle
testl
xchg
sbb
add
cmc
mov
hlt
and
jge
aam
aam
arpl
dec
loop
test
adc
sub
dec
or
jnp
cwtl
and
sbbb
and
aad
std
jmp
ret
jle
icebp
fisubs
stc
mov
add
sbb
scas
mov
mov
scas
iret
nop
pop
push
or
test
in
push
movups
pop
add
jae,pt
lea
inc
push
xor
sar
dec
icebp
xchg
add
cmp
mov
or
lea
mov
xchg
pop
jmp
pop
sub
stos
insl
mov
adc
lods
popa
or
out
scas
adc
stos
lock
dec
jmp
push
mov
fiadds
sub
insl
ud1
dec
loope
subb
xchg
cmp
scas
push
push
and
and
imul
add
call
adcl
sbb
sub
sub
movsl
inc
sbbb
inc
shrb
jle
js
xchg
idivl
and
mov
repz
dec
insb
incb
mov
mov
cmc
cwtl
shlb
inc
xchg
mov
pop
mov
faddl
xchg
aas
imulb
mov
cltd
xor
xor
dec
pop
aaa
or
pop
and
cmp
mov
push
stos
jne
inc
dec
fwait
or
add
or
add
push
mov
pop
pop
test
shll
in
mov
mov
sarb
cmp
xor
int3
sbb
jecxz
aas
inc
sub
mov
daa
mov
ret
lret
jno
repnz
daa
mov
lahf
lret
icebp
push
mov
in
xchg
add
ret
mov
push
popa
jp
cwtl
repz
test
and
es
fidivrs
or
pop
cld
test
clc
lea
leave
int3
mov
mov
xor
js
lods
inc
aam
cltd
dec
shrl
jecxz
sub
rcll
es
pop
and
sub
mov
push
mov
cmpl
add
mov
ret
out
or
jg
out
jg
inc
pop
xor
push
or
out
leave
cmpsb
mov
jp
push
int
flds
data16
insb
in
and
adc
scas
aaa
jg
jne
movsl
mov
cmp
or
sbb
sahf
jecxz
out
and
loopne
cld
sub
call
popf
lea
sub
lods
sub
jnp
xor
cs
dec
add
mov
dec
sti
cmpb
daa
stos
loope
das
fsts
ds
lock
xchg
mov
les
push
in
mov
leave
and
xchg
scas
inc
fdivl
insl
cmp
clc
cmp
xor
mov
ret
lea
or
xchg
loopne
imul
sbb
xchg
push
or
out
and
nop
mov
pop
movsb
test
js
es
cli
call
sti
test
jno
push
inc
adc
arpl
into
dec
std
sbb
inc
ret
ja
or
inc
add
test
cmp
repnz
lcall
mov
enter
out
arpl
xchg
insl
xchg
notl
mov
add
mov
int3
push
fdivl
out
orl
aam
mov
pop
daa
sbb
mov
push
in
xor
push
das
sub
pop
xchg
jg
scas
lret
stos
sbb
xchg
repz
sub
pop
mov
inc
sqrtps
sub
nop
pushf
xlat
inc
ret
xchg
and
mov
fisubs
fwait
xor
pop
sbb
xchg
cmp
lret
xchg
sarl
fdivrl
scas
out
adc
int
rolb
insl
stos
mov
inc
xchg
sub
jecxz
stos
cli
cmpsl
aaa
mov
shrl
sbb
insb
cmp
xchg
xchg
bound
mov
subb
aas
loope
inc
mov
jns
inc
fmull
in
mov
dec
stos
or
jnp
jmp
nop
shll
mov
icebp
or
sub
and
lret
or
popf
mov
sahf
jbe
repnz
mov
push
cwtl
leave
leave
ret
fsubrs
sub
push
add
aad
adc
cmpsl
lock
inc
test
sub
scas
in
jmp
push
xchg
push
outsb
xchg
jp
in
orb
sbb
xor
lret
lret
lock
test
jnp
lcall
pop
fs
fwait
call
mov
or
nop
cli
repz
mov
test
jo
push
sahf
out
das
subl
inc
in
data16
outsb
popl
dec
jo
std
inc
sub
adc
jnp
mov
loop
adc
shll
push
or
fmuls
enter
add
dec
mov
mov
mov
std
aam
xor
jns
loopne
add
add
sbb
scas
lods
push
data16
leave
out
mov
mov
or
int3
scas
call
lods
std
in
or
dec
inc
das
imul
dec
aaa
and
jg
pop
push
add
pop
and
pop
testb
inc
lret
and
jecxz
in
dec
or
movsb
out
push
pop
lcall
mov
cmp
flds
mov
in
dec
mov
cmp
fs
jno
arpl
mov
sbb
lret
subb
push
ret
or
adcb
jg
dec
and
inc
ljmp
js
jo
jmp
dec
insl
lea
ja
movsb
aad
lock
adc
add
sub
add
pusha
push
and
jb
aaa
and
mov
inc
shll
mov
dec
jno
idivb
lock
xchg
movsb
or
mov
pop
scas
or
dec
jo
cmpsl
add
cmpl
jecxz
xchg
cmp
mov
pop
cmpl
adc
loopne
movsl
repz
movsl
cltd
rcr
mov
jae
mov
gs
xlat
sbb
iret
pop
mov
cmp
lods
mov
push
negl
mov
lahf
lock
mov
in
movb
pop
sub
ljmp
inc
push
popa
push
jnp
add
out
pop
je
loope
mov
fbstp
push
sub
push
sbb
add
push
fstp
mov
add
xor
cmp
or
xchg
test
fucom
xchg
loope
lock
jae
mov
dec
cmp
fmull
xchg
stos
int3
inc
in
push
mov
mov
ljmp
lahf
mov
push
inc
jne
pop
popa
loop
jnp
in
cmc
jge
xlat
aam
ret
jo
clc
decb
std
pop
pmulhw
xchg
int3
out
jg
cld
add
xor
into
lcall
adcb
lret
jge
xchg
inc
pop
sbbl
push
sub
adc
jns
cmp
sahf
out
jg
xchg
push
dec
aaa
lock
scas
mov
xchg
sub
int3
adc
jno
int
call
push
leave
or
fdivl
xorb
adcb
nop
sbb
adc
jb
sahf
lods
ss
mov
sahf
push
jne
push
test
xor
cmp
faddp
mov
stc
ds
mov
test
scas
addr16
jecxz
rolb
in
pop
sub
push
and
mov
jmp
pop
or
dec
ljmp
mov
outsb
add
mov
gs
dec
fcoms
pop
and
stc
sub
sbb
sub
or
and
pop
imul
push
pop
mov
inc
jnp
loopne
in
mov
aas
pop
es
dec
and
mov
call
fdivr
jmp
jge
in
repnz
mov
adc
popf
movl
mov
lea
push
pushf
rclb
mov
push
imul
inc
pop
fdivs
mov
jo
xor
adc
jo
clc
xor
fwait
pop
xchg
ficoms
ljmp
dec
imul
jnp
mov
sti
mov
cmpsb
jbe
ficoml
cld
orl
jg
add
or
inc
iret
cltd
daa
jnp
gs
sub
lcall
neg
adc
daa
pop
je
daa
xchg
add
adc
stc
shlb
sti
imul
cmovs
shrl
ja
sbb
cmpsb
and
xor
sbbb
aam
clc
push
nop
sbb
jl
outsb
test
and
xchg
outsl
and
das
out
push
jbe
jb
xor
enter
lods
jecxz
push
lcall
or
mov
cs
out
ja
lcall
lods
jg
mov
xor
rorl
sbb
cli
jp
hlt
adc
push
inc
popa
loopne
sbb
xchg
mov
test
bound
xchg
xor
pop
add
idivl
outsl
outsl
rorl
ret
mov
push
sub
or
sbb
mov
xor
mov
cmp
mov
test
out
fstp
sbb
lods
js
jne
hlt
xor
lcall
pop
xor
hlt
mov
push
scas
fnstenv
jge
push
push
notb
cs
daa
xor
clc
ret
std
lcall
xchg
push
add
pop
in
push
mov
jp
push
rcr
nop
aas
icebp
in
dec
lods
sbb
scas
mov
fildl
aas
jp
jbe
pop
mov
je
fidivs
mov
xchg
cmpsb
mov
mov
mov
xchg
xchg
popf
cmp
fsubrl
pop
push
addr16
fimull
push
mov
inc
mov
clc
dec
dec
jno
lret
or
les
ret
and
xor
pop
or
out
inc
shl
and
dec
pop
stos
popa
out
or
sub
ds
inc
iret
into
in
in
xor
shrb
movsb
repz
in
lahf
gs
clc
leave
xor
sbb
adc
out
in
xchg
pop
sti
ret
test
mov
jno
sub
sub
inc
repnz
notl
jbe
mov
sub
mov
incl
add
sbb
mov
jnp
pop
or
clc
push
leave
xchg
es
test
pop
popa
push
fs
icebp
jl
test
push
lea
sbb
test
and
je
outsl
jmp
insl
imul
mov
sbb
jle
inc
aas
popa
int3
int3
dec
cmpsl
add
lds
mov
das
add
test
aad
xchg
adc
icebp
outsl
push
xlat
fildl
jl
pusha
xor
jae
pushf
dec
adc
test
mov
mov
pop
dec
mov
sahf
psubd
and
incl
stos
mov
pop
jns
lds
sti
imul
pop
in
lahf
push
rclb
mov
pop
pop
out
jle
mov
cmpsl
pop
sub
and
dec
lret
cmp
test
sahf
xchg
mov
das
xchg
xor
mov
xor
xor
icebp
xchg
movsb
addr16
push
pop
test
mov
fldt
mov
mov
and
xchg
jecxz
sar
and
adcl
dec
xor
into
pop
dec
xor
or
cwtl
adc
jae
lcall
inc
pop
mov
loopne
and
inc
or
fsin
loope
adc
test
in
sub
add
xorb
and
adc
pusha
fiadds
mov
imul
jo
and
lcall
movl
into
add
iret
inc
inc
lds
ss
out
and
aas
lret
and
xchg
mov
mov
insb
fwait
inc
jle
or
aad
outsb
inc
scas
into
dec
xchg
cmpsb
mov
add
cmc
push
enter
popf
jmp
mov
sbb
stos
setb
mov
test
insl
clc
pop
aaa
outsb
imul
popf
lods
cmpsb
shlb
adc
scas
lds
jecxz
or
xchg
push
cmp
xchg
add
cmp
aas
repnz
dec
mov
js
mov
popa
jmp
cli
pop
sahf
cmp
bound
negb
lret
cmp
stc
add
int3
add
gs
xor
xchg
call
out
mov
or
adc
xor
sub
scas
mov
test
pop
mov
push
imul
outsb
xchg
mov
or
imul
movsb
mov
pop
arpl
faddl
sbb
inc
rcr
cmpsb
mov
cltd
and
mov
jmp
push
stos
mov
sub
mov
dec
adc
cmp
fsubrp
fsubl
rolb
mov
dec
fsubl
loopne
nop
popf
adc
fistpll
aaa
sbb
adc
popf
inc
mov
push
shrb
pop
sub
bound
adc
popf
cld
push
scas
mov
int3
adc
lock
leave
dec
popf
fisubrl
test
cmp
je
aas
ljmp
lods
push
sti
push
mov
cmp
pop
dec
lods
adc
subl
scas
lea
pop
or
pop
gs
sub
push
add
jno
sub
incl
fildll
jecxz
sti
into
stos
xor
push
mov
imul
inc
cmpb
cmpsl
dec
pop
dec
mov
sahf
inc
push
xor
or
mov
dec
pop
adc
imul
jge
jmp
fsubl
push
fisubs
dec
and
cli
add
mov
jne
jle
aaa
jle
adc
aam
das
and
rorl
rorb
stos
sbb
fs
lea
adc
aaa
addr16
sbbl
bound
xlat
movsb
add
xchg
imul
jnp
pushf
xor
jnp
sets
inc
cmp
push
pop
bound
mov
sbb
xor
pop
test
lcall
in
cwtl
rorl
in
xchg
fmull
fnsave
cmpsl
xchg
ret
push
fsubr
dec
bnd
cwtl
aad
aam
ficomps
sbb
popf
aad
jp
xor
and
add
xor
dec
in
insl
inc
pop
inc
int3
mov
int
nop
push
mov
dec
push
sub
pop
and
xor
xchg
or
test
rorl
stos
sub
push
dec
xlat
movsb
stc
rolb
cmp
std
shll
int
xchg
xchg
xor
jmp
inc
cmp
mov
test
lahf
pop
lret
lods
inc
dec
sub
rcrl
out
mov
mov
jo
rcll
adc
or
outsb
scas
loopne
cmp
mov
sub
jnp
ja
xchg
cmp
imul
pusha
mov
sbb
imul
cmp
mov
adc
gs
insl
or
pop
aam
ss
scas
pop
out
xchg
push
dec
jecxz
or
popa
push
enter
std
add
scas
test
push
pop
shrl
or
aam
inc
mov
pushf
mov
mov
les
xor
stos
sub
xchg
loopne
lds
popf
jmp
nop
push
or
jle
cmpsl
xchg
inc
mov
rorl
cmc
inc
mov
fnsetpm(287
dec
mov
push
repz
repz
movsl
arpl
bound
sub
jns
mov
xor
rolb
mov
mov
add
jl
xor
jecxz
in
mov
inc
in
mov
jb
bnd
popa
repz
sub
jo
cld
pusha
xchg
cs
int3
and
loope
aad
or
jnp
mov
in
mov
aaa
or
popa
lods
adc
mov
insl
orl
fiaddl
aam
scas
add
dec
loopne
andb
pop
aas
test
out
loope
addr16
loope
shlb
sbbl
push
sahf
xchg
aaa
adc
xchg
add
push
test
sub
jg
fcmovnbe
jmp
mov
fnsave
loopne
faddl
mov
inc
mov
popf
mov
stos
xlat
ret
js
das
push
xchg
jle
std
scas
or
hlt
or
mov
arpl
gs
enter
shlb
bound
jp
sbb
sahf
sar
aaa
mov
movsb
test
pop
outsb
pop
pusha
dec
fsubrl
pop
insb
in
ljmp
incb
out
rcrb
nop
iret
aam
out
push
scas
or
fwait
inc
xor
shlb
call
das
mov
out
ss
cs
sbb
mov
inc
jbe
push
mov
adc
addr16
data16
pop
inc
mov
mov
jg
dec
gs
stos
gs
cmp
mov
aam
mov
add
in
aad
aas
inc
and
jo
loopne
out
cmp
jbe
enter
stos
and
push
jbe
clc
notb
mov
pop
mov
push
mov
adc
fsubrp
push
xchg
mov
movsl
loop
push
jb
xchg
stc
cmpsl
or
int3
lret
inc
stc
mov
fbld
inc
mov
cmp
add
into
adc
push
cmp
ds
jns
adc
jmp
clc
or
mov
dec
sbb
sub
push
jne
xchg
mov
mov
lock
lcall
repnz
stos
and
lock
jle
aaa
or
mov
je
fcmovbe
sub
bound
xchg
sti
in
pop
cmp
jl
out
jg
jbe
mov
sub
fnclex
cmp
xor
scas
cmp
or
pop
in
jns
jne
pop
pushf
rcrl
pop
mov
mov
stos
mov
movl
in
mov
imul
dec
loop
movsb
fists
stos
add
mov
mov
gs
lock
cmc
mov
out
sub
cmc
push
sbb
stc
insl
push
orl
and
mov
lcall
aas
cwtl
int3
rclb
pop
adc
cmpsl
popf
test
push
ret
ds
mov
push
rol
jno
jae
call
nop
loop
xlat
insb
sbb
pop
rorb
mov
sub
push
fldl
pusha
and
mov
int3
ret
push
cwtl
and
test
xor
stos
cmp
push
call
mov
nop
push
push
clc
mov
rcll
xor
fildll
push
xchg
loope
stos
cmp
add
flds
mov
push
incb
inc
inc
inc
cmpb
lock
rclb
cmp
hlt
sbb
dec
lods
addb
cmpsl
test
loop
lahf
out
sub
xchg
pop
dec
or
mov
mov
dec
mov
push
leave
out
push
imul
jp
lret
out
dec
mov
out
xor
test
cmp
jns
mov
dec
outsl
dec
or
mov
pop
scas
inc
mov
cs
lds
pop
add
sub
cmp
popf
xor
insb
ljmp
test
lea
jg
pop
jo
push
push
fxch
sub
mov
orl
rcrb
adc
cmp
adc
hlt
ljmpw
sbb
ljmp
dec
fstpl
mov
mov
and
push
or
shl
iret
cli
dec
cmp
imul
jge
xchg
cmc
add
xor
and
out
das
push
fwait
repnz
push
sbb
sub
lahf
push
push
or
hlt
pop
jno
or
movsl
inc
lods
addr16
dec
sub
xchg
push
inc
cs
data16
xchg
mov
pop
movsl
mov
push
jl
pop
mov
cmc
dec
jg
mull
inc
adc
rorb
mov
int
mov
stc
cs
in
mov
imul
push
adc
mov
cmp
repz
inc
test
cmpsl
test
int
pop
push
xor
lret
jae
shll
jae
aad
sarb
int
les
jmp
lcall
or
lahf
xchg
in
mov
xchg
or
xor
mov
jo
pop
repz
add
imul
outsl
xchg
push
or
cli
in
outsb
call
adc
xchg
mov
xchg
sub
in
scas
in
or
sub
jl
cmp
and
lahf
add
adc
incb
add
xchg
mov
mov
lock
fsubr
mov
pavgb
cmp
cwtl
pushf
pusha
lods
mov
je
cld
cwtl
cli
xor
or
sbb
xchg
and
adc
sub
or
add
inc
sub
testb
mov
sbb
addr16
dec
adc
loope
pushfw
fbld
insl
push
adc
std
ja
dec
sub
mov
int3
repnz
test
popf
addb
jmp
scas
mov
fcompl
inc
test
pop
jg
inc
sub
inc
mov
mov
aam
mov
and
arpl
push
pop
dec
ss
cld
inc
icebp
jle
inc
fadds
scas
arpl
mov
push
lahf
sub
sti
les
enter
pop
adc
add
mov
jmp
jecxz
scas
test
sbb
or
iret
mov
add
or
rcll
and
sti
lods
pop
jmp
sbb
test
push
jno
sarl
sub
das
pop
into
shlb
cli
lcall
rorb
sub
mov
fsubs
dec
daa
std
inc
je
mov
popa
rcll
out
rolb
xor
ret
js
adc
push
sbb
ss
lds
lret
fwait
das
scas
cmovo
repz
in
and
inc
jo
stos
xchg
les
inc
adc
inc
out
jmp
add
aaa
jle
xchg
out
out
lcall
push
imul
and
cltd
repnz
mov
xor
cltd
and
nop
cmp
fdivrl
aad
pushl
push
out
arpl
sbb
mov
pop
xlat
adc
mov
pop
jge
add
fwait
scas
std
mov
jmp
push
in
subb
sub
ljmp
int3
js
aas
enter
imul
cld
mov
mov
dec
dec
sub
pop
mov
push
notl
sub
mov
pop
jl
pop
adc
in
popf
jmp
jo
fmull
inc
sub
jg
ljmp
push
stos
sub
mov
sti
mov
inc
cmp
out
outsl
shll
adc
mov
jb
pop
repz
jp
jl
fistpl
lds
fisubl
pop
jle
cmc
int
add
xor
xlat
sub
jmp
rorl
clc
and
mov
sub
sub
add
rolb
xor
mov
inc
int
or
xchg
pop
stc
je
leave
add
xor
cmp
movsl
ds
sub
jae
jbe
push
lret
ret
ja
push
fs
fmull
jnp,pn
or
or
les
loope
shll
or
mov
insb
test
add
popl
mov
lcall
sub
cwtl
mov
pop
mov
bound
rorb
mov
std
inc
sahf
ss
jp
int
icebp
lods
and
movsb
inc
aad
dec
jmp
mov
or
and
dec
xchg
lret
mov
out
adc
fcoml
enter
mov
fldcw
aad
sbb
fistps
inc
jae
les
jns
fildll
pop
mov
pushf
push
inc
or
outsl
pop
cmp
mov
in
out
leave
xchg
lods
std
jecxz
cmp
inc
sbbl
jp
inc
outsl
jecxz
cmp
mov
fidivrl
xchg
stc
pusha
pop
std
ret
mov
lods
mov
gs
ret
test
xchg
add
das
push
lods
or
adc
mov
mov
ljmp
pop
stc
jo
sbb
xchg
add
out
popa
cltd
ss
rcrl
cmpsl
repz
mov
adc
jno
ret
sub
cmpsl
int3
mov
ret
push
xchg
pop
sub
pop
pop
cltd
iret
and
xor
aam
test
mov
dec
stos
shrl
jae
xor
mov
jg
popf
loope
loope
stos
inc
hlt
jnp
xlat
sbb
push
sarl
pop
fists
icebp
cmp
mov
idivb
push
jno
add
jg
jb
xchg
pop
mov
addr16
loop
sahf
add
mov
push
in
inc
inc
fwait
mov
ficoms
ljmp
sub
push
push
pop
hlt
sbb
sbb
in
fs
fcomip
imul
test
push
int
lock
je
xchg
lock
lds
data16
xor
clc
dec
repnz
cld
adc
push
push
xor
dec
mov
mov
adc
dec
sbb
outsl
ds
and
cltd
aas
xor
xchg
sbb
data16
mov
mov
xchg
xchg
or
sbbb
sbb
jno
adc
outsl
xor
pop
out
mov
pop
mov
andps
pop
xchg
cmpsb
cli
mov
xchg
jae
fbstp
sahf
inc
shrl
icebp
sub
adc
sub
pushf
ret
testl
loopne
xor
lret
sbb
sbb
xchg
call
mov
movsb
enter
into
sbb
scas
das
testb
pop
push
rorb
sarb
sub
sub
add
xor
add
mov
lret
add
xor
cmp
jge
out
sbb
nop
mov
lods
adc
jl
dec
sahf
or
mov
ds
enter
fistl
mov
sub
push
in
stos
dec
mov
jno
jnp
and
clc
push
shl
mov
sbb
mov
out
out
sub
sbb
fsubrs
mov
fsubl
adc
mov
aad
adc
scas
out
icebp
cwtl
add
aad
adc
orb
inc
xor
int3
inc
out
out
fldt
pushf
int
mov
faddl
jge
sbb
and
lcall
mov
push
out
leave
mov
mov
stc
mov
push
pop
ret
xchg
mov
sahf
mov
push
inc
ror
sub
shl
or
ss
iret
divb
pop
add
and
mov
xor
add
loope
xchg
sbbb
add
cmp
in
popf
into
lret
shl
push
mov
sbbb
inc
movsb
pop
aaa
fldenv
out
mov
xchg
and
test
xor
lret
enter
cmp
pop
push
or
gs
mov
out
popaw
pop
das
cmpb
leave
inc
ja
add
daa
inc
lods
popa
add
fsubl
pop
add
xchg
xor
stc
clc
sbb
mov
das
shl
movsb
pop
pop
jno
insb
sub
inc
aam
lock
stos
fs
push
mov
out
fwait
loope
in
fmul
dec
movsl
mov
mov
aad
xchg
test
push
addb
push
icebp
pop
mov
in
shl
adc
sub
fdivrs
xor
xor
sbb
and
or
xchg
pop
add
loopne
push
in
xorb
fdivrs
mov
test
cmpsb
ret
cmpsl
pop
xchg
add
ss
aad
xchg
dec
cltd
add
add
xchg
jp
aam
add
dec
aam
add
lea
nop
mov
outsl
int3
dec
and
jp
inc
sbb
cwtl
std
pop
cmp
jge
xor
clc
imul
xor
jae
adc
mov
pop
mov
or
mov
xor
negl
jmp
sbb
pop
loope
dec
test
ja
test
pop
gs
dec
xor
mov
inc
cmp
lock
imul
push
and
hlt
js
lds
pop
loope
xchg
dec
lea
add
inc
scas
pop
cmc
repz
ret
and
pusha
fstpt
mov
dec
in
shll
adc
mov
fstpl
push
fdivrl
outsl
dec
push
fdivrl
cmp
jmp
cmp
clc
sub
and
inc
inc
sub
outsb
adc
out
cltd
clc
inc
jp
pusha
sbb
sbb
ret
push
xor
pop
imul
adc
andl
push
scas
mov
jge
add
lret
je
mov
in
fldenv
and
push
lods
in
pushf
push
sbb
xchg
movsb
fstl
lahf
lcall
daa
mov
mov
xor
adc
sub
fstps
out
push
icebp
out
aam
jnp
push
inc
inc
jnp
adc
sub
push
jne
mov
add
negb
ljmp
dec
jmp
xor
mov
mov
fiaddl
outsb
xchg
lock
dec
add
or
leave
mov
in
cli
rorb
aam
jmp
mov
mov
test
xor
mov
iret
in
adc
out
fs
divb
outsb
sbb
jle
jnp
mov
lea
lods
pusha
cmp
and
daa
xlat
movsl
add
fcmovne
push
dec
ljmp
xchg
std
push
mov
js
bound
dec
dec
pop
fisttps
lret
icebp
lcall
lahf
inc
rorb
xchg
pop
enter
repnz
test
push
and
scas
ss
sub
dec
out
and
jns
imul
pop
lahf
and
jns
inc
lods
sub
mov
std
jp
cwtl
mov
call
adc
pop
adc
repz
mov
fsubp
xchg
scas
orl
repnz
mov
out
push
adc
mov
pop
xchg
fisubl
into
test
adc
jo
sahf
int3
and
imul
ret
fldenv
std
leave
xor
push
sbb
lahf
or
call
and
data16
xor
pop
std
push
push
dec
fbld
mov
out
je
jecxz
or
and
stc
js
xor
dec
rorb
xchg
imul
icebp
daa
lds
sbb
pusha
ret
pop
inc
daa
mov
mov
test
lods
sub
ss
outsl
fbld
test
adc
dec
inc
insb
push
ficompl
hlt
lret
cmp
add
rcrb
sub
arpl
dec
nop
or
fisttps
negb
fisubrs
inc
sbb
popa
test
ss
sub
sahf
sub
jbe
fsubrs
xor
jo
add
mov
outsb
cmp
pop
jl
out
dec
sub
in
popf
out
mov
shlb
daa
insl
cmpsl
in
js
push
mov
rcl
and
gs
mov
pop
out
add
adc
push
mov
enter
lock
mov
jne
mov
outsb
mov
movsl
inc
loope
insb
adc
dec
push
push
inc
es
lock
xchg
jle
add
cmpsb
push
flds
xor
dec
fs
rorb
push
or
daa
mov
mov
dec
push
popf
mov
cld
jle
or
and
pop
mov
nop
aaa
push
jbe
aaa
jecxz
into
lea
jno
add
mov
cs
mov
loop
fscale
inc
inc
iret
inc
cmpsl
pop
mov
idivb
push
adc
pushf
scas
mov
and
inc
nop
imul
mov
sbb
sub
push
popf
adc
jbe
out
daa
adc
sbb
sub
sbb
push
jg
ds
rorl
subb
addr16
inc
pop
sub
cmp
mov
out
idiv
mov
jne
scas
adc
hlt
andb
call
add
xchg
sti
and
adc
ja
imul
xchg
addr16
inc
arpl
xchg
xorb
pusha
mov
add
cmp
sahf
jp
stos
dec
and
jnp
lahf
fistpl
mov
jg
inc
leave
ficomps
arpl
push
push
mov
mov
fnstcw
jb
out
inc
js
pop
daa
jo
in
ja
shrl
xchg
push
mov
dec
pop
les
cmpl
ljmp
and
jae
adc
mov
mov
inc
fidivl
inc
in
fistps
xchg
popf
sbb
pop
mov
imul
xchg
pop
aas
xor
leave
test
mov
mov
sbb
xor
in
jecxz
xchg
lret
sbb
call
addr16
mov
scas
inc
into
jecxz
roll
fidivl
sbb
testb
xor
cltd
ret
mov
or
sbb
sbb
mov
clc
outsl
cmpsb
lret
push
lds
lahf
int
std
cmp
inc
lds
sub
sub
loope
dec
ja
inc
clc
popf
lods
mov
jg
mov
das
or
sbb
xchg
cmp
jge
inc
ljmp
cmp
test
ljmp
jno
jb
sub
arpl
pop
lret
js
jns
stc
mov
nop
mov
adc
cli
sarl
mov
jle
test
arpl
shll
xchg
xchg
das
pop
leave
and
xor
sub
push
xor
xchg
dec
testl
adc
adc
outsl
jnp
es
push
cmp
lods
ret
and
xchg
jno
lret
flds
xchg
push
daa
dec
pop
lret
and
xor
dec
jae
and
dec
inc
jae
xorl
arpl
push
inc
pusha
inc
jle
hlt
fwait
adc
mov
fcompl
mov
test
iret
dec
lods
or
repnz
pop
ret
cmp
in
cmp
ja
xchg
cli
sbb
cmp
sbbl
sbb
xchg
cltd
dec
or
xchg
and
hlt
mov
ss
sarb
mov
jbe
sar
lods
lret
mov
mov
mov
cmpsl
xchg
lods
jmp
jb
imul
shr
pop
fnstsw
imul
inc
cmp
and
mov
sub
dec
std
pop
orl
clc
adc
mov
js
pop
es
fwait
xor
cmc
adc
inc
push
mov
sbb
add
jg
xchg
sbb
daa
or
roll
cmp
fmuls
mov
ret
fdivs
sub
shrb
mov
mov
std
adc
cmp
je
cmp
repnz
inc
dec
mov
data16
iret
xlat
into
ret
sub
add
cmp
mov
ror
xchg
dec
jnp
xchg
jmp
mov
push
xor
mov
xchg
outsl
push
into
and
lcall
mov
dec
cmp
test
scas
fstpt
daa
divb
shll
sub
fdivr
js
fbstp
stos
ljmp
jnp
and
jmp
movsb
rcr
and
and
xchg
xlat
nop
adc
or
inc
cmp
jecxz
mov
shll
pop
jmp
lods
js
cmpsb
add
mov
test
int
enter
pop
js
aaa
int3
mov
cli
cmp
mov
je
popl
loope
popa
sub
add
fwait
or
mov
leave
jae
jmp
rep
insb
xchg
es
adc
icebp
lcall
add
sbb
pop
push
lret
dec
dec
call
push
addb
dec
ret
mov
lret
xchg
jo
mov
test
bound
cmp
ret
or
ror
daa
inc
fsubr
jnp
in
mov
cs
fcomp
jo
and
mov
jg
inc
jb
lahf
fidivl
sahf
xor
add
movsb
fbld
jp
mov
and
filds
add
mov
push
fs
adc
jp
pop
addr16
aam
addr16
add
or
jo
adc
or
les
aaa
cmp
enter
leave
enter
jmp
js
add
divl
mov
mov
inc
jp
sahf
or
add
pop
mov
add
andl
dec
mov
in
or
data16
movsl
dec
fisttps
sahf
nop
pop
sbb
icebp
mov
xchg
inc
mov
mov
or
scas
xlat
push
xchg
lods
sti
cltd
mulb
or
mov
popf
cld
add
mov
mov
cmp
fisubl
stos
xor
leave
jb
xor
pop
dec
cmpsb
xchg
sub
in
repz
push
mov
or
clc
cli
fistpll
das
adc
dec
rep
popf
out
test
dec
aaa
xchg
lret
sbbl
push
xchg
outsl
jecxz
in
xor
or
jl
data16
adc
inc
xchg
adc
in
je
dec
lock
lcall
xchg
xor
sub
sti
es
jae
stos
or
mov
and
mov
adc
aaa
mov
adc
cltd
xor
or
dec
or
jmp
das
or
int
insb
insb
inc
jmp
xchg
fsts
cmp
sti
dec
call
dec
xor
sbb
push
sub
mov
mov
and
mov
inc
and
ja
add
pusha
dec
test
lea
jne
push
fstpt
inc
inc
add
aad
and
inc
outsb
push
inc
imul
mov
push
pop
repz
cmp
outsl
mov
jg
dec
xchg
int
jp
movsb
das
jle
push
aaa
mov
mov
int
loopne
xchg
lret
imul
mov
mov
rorl
in
hlt
jbe,pt
xchg
js
mul
fcmovu
jg
add
push
addb
lods
fisttps
inc
popa
push
jb
push
mov
mov
fcompl
jmp
lcall
sbb
scas
jne
inc
cld
fwait
repz
pusha
arpl
lods
and
adc
scas
and
lret
mov
mov
stos
pop
push
xchg
push
popf
aam
cltd
push
ret
jb
inc
insl
add
frstor
lret
pushf
sub
cwtl
mov
push
js
or
adc
jne
mov
cmp
mov
and
add
mov
lahf
inc
adc
lahf
adc
jmp
adc
shlb
lea
mov
jp
push
or
mov
imul
shrb
xchg
xchg
xor
mull
xor
std
xor
xor
ffree
clc
hlt
cmp
aaa
dec
push
repnz
mov
xchg
sub
mov
lea
xchg
es
add
sub
push
xchg
outsl
adc
and
mov
dec
sti
push
lea
outsl
outsl
or
sbb
mov
dec
sbb
mov
loope
mov
mov
pop
xchg
adcb
sub
mov
sbb
xchg
ja
int3
hlt
jl
pop
cs
call
cli
xchg
mov
jnp
and
loopne
mov
insl
add
cmp
mov
push
mov
sub
cmp
add
xchg
adc
adc
push
into
fdivrs
pop
loope
out
jle
xchg
mov
les
or
cli
test
pop
push
and
sub
jmp
adc
int
test
push
fwait
push
push
mov
adcl
sbb
mov
enter
jmp
imul
adc
fldcw
gs
mov
jns
imul
mov
or
sub
inc
dec
xor
xor
pop
movlps
ja
xchg
aas
cli
sub
xor
inc
incb
dec
or
xchg
aam
pop
mov
lcall
test
sbb
ljmp
xchg
and
mov
inc
lret
dec
fidivs
in
int3
out
lods
pop
mov
and
mov
jno
inc
lahf
lahf
dec
mov
out
cmc
jnp
gs
and
jecxz
push
sub
outsl
and
repz
cmp
push
mov
std
loope
push
loopne
push
test
sub
mov
lods
pop
in
mov
fldenv
aad
ret
xor
xchg
cmp
fsincos
hlt
movsl
aad
xchg
je
jno
mov
lret
sbb
xchg
out
insb
mov
pop
subb
dec
in
cmp
or
cmp
stos
push
loopne
adc
and
fisttpll
cmpsb
scas
xlat
adcb
mov
xchg
in
fidivrl
jns
xchg
movb
pcmpeqw
mov
scas
test
ja
sbb
add
lcall
pop
cli
enter
or
pop
pop
cli
jb
test
stos
jns
insb
jmp
fcomp
pop
cmp
and
daa
pushf
push
sub
ljmp
movsb
fcom
sahf
sbb
sub
call
in
cmp
movsl
mov
iret
or
mov
orb
lods
pop
rorl
sub
push
jae
xchg
cli
sub
leave
cmp
adc
dec
adc
ljmp
pop
popl
cmc
pusha
pop
inc
xor
loope
out
mov
and
aas
push
fidivrl
cmp
cld
outsl
jecxz
pop
xchg
xchg
notl
jns
movsb
push
leave
lock
inc
push
inc
mov
into
mov
push
adc
xor
stc
fnstenv
mov
jns
fstp
int3
jae
adc
fstpt
rclb
adc
and
dec
or
add
leave
mov
inc
les
cs
mov
inc
fwait
jbe
mov
sahf
leave
sbb
mov
rclb
or
mov
outsb
push
repz
and
sahf
icebp
data16
jno
cwtl
push
sbb
sbbb
enter
nop
fsts
xor
and
sub
mov
je
imul
push
shlb
lock
iret
imul
mov
and
or
push
jno
sbbl
push
sbb
rcrl
cli
movsb
xor
bound
push
xor
xchg
insb
mov
imul
leave
test
xor
loopne
inc
fs
push
gs
pop
aad
dec
sbb
or
push
insb
mov
sub
mov
xor
xlat
mov
adc
and
std
add
adc
nop
mov
sbb
outsl
into
inc
jl
jge
sbb
push
cli
int3
xchg
test
sahf
push
shl
cs
jmp
inc
clc
xor
cwtl
cmpl
sbb
enter
cmp
push
popl
adc
mov
aad
into
nop
cmpsl
or
fdivl
shll
jne
imul
dec
adc
test
push
insl
add
lret
or
sbb
mul
mov
ljmp
aam
mov
bound
into
js,pt
inc
pushf
cmpb
in
inc
jne
xchg
adc
lahf
sub
test
pusha
add
flds
addr16
push
xchg
mov
cmp
pusha
pop
sub
je
and
jb
jbe
or
sbb
push
push
jl
cmp
in
sub
sub
cmpsb
jge
mov
sbb
mov
pop
int3
lcall
jle
adc
out
xchg
mull
and
ror
mov
lods
jne
push
inc
pushf
mov
jg
xchg
sahf
push
es
lock
pop
or
mov
es
ret
push
jb
push
cld
sbb
andb
adc
or
dec
pop
subb
push
loope
adc
stc
daa
cmp
push
stos
ljmp
into
mov
cmpsb
out
and
mov
lret
int
addr16
push
les
pop
inc
mov
adc
test
fs
mov
imul
dec
nop
pushf
andb
nop/reserved
push
or
mov
push
test
xor
test
mov
sbb
mov
loop
and
mov
in
ss
sub
jo
sub
push
arpl
jnp
mov
sarl
rol
out
xchg
mov
andb
cmovno
aad
mov
jno,pn
jmp
ljmp
dec
dec
add
scas
in
out
mov
lahf
jecxz
add
clc
fstps
das
pushf
js
mov
mov
scas
or
pop
in
pop
push
pop
or
sti
cmpsl
mov
mov
addb
or
out
test
push
or
fisttpl
sbb
aaa
in
sub
jp
lret
sbb
lods
mov
add
insb
lods
test
jo
or
pop
mov
lods
xorps
cmp
popf
sub
push
shll
jmp
mov
add
pop
icebp
movsb
enter
add
inc
sahf
jle
xchg
pop
lret
lret
ljmp
repz
rorb
push
mov
fdivl
movsb
mov
mov
xchg
push
sbb
dec
aam
cmp
adc
push
mov
sub
and
pop
out
daa
out
xor
in
or
mov
bound
push
jp
movsl
jne
mov
cmc
cmp
js
test
adc
js
mov
adc
ficomps
sub
pop
in
stos
in
push
js
cmp
pop
sahf
int
jg
add
mov
imul
testb
cmp
sub
insb
stos
mov
mov
cmp
test
ljmp
add
xor
push
pop
jb
dec
inc
mov
or
orb
lods
mov
lock
xor
enter
fmuls
es
xchg
fwait
xlat
cmpsb
addr16
mov
push
lods
out
test
mov
dec
xor
and
sub
or
outsb
cmpb
aad
jecxz
xor
fwait
push
shlb
sbb
out
push
and
lahf
ljmp
hlt
sti
repnz
sub
rcr
xor
pushl
in
jp
mov
or
push
inc
lahf
cs
leave
mov
lods
das
insl
dec
shll
loope
fcmovne
sbb
shll
push
movsl
pop
add
jecxz
and
imul
mov
and
and
fcomps
test
loop
roll
fmuls
jbe
pop
cltd
pop
and
push
xor
call
lahf
mov
mov
out
push
out
int3
inc
ret
stc
fwait
push
arpl
clc
out
loop
test
pop
mov
dec
cld
pop
out
ja
jg
iret
aas
push
mov
gs
dec
out
in
mov
cli
inc
jg
xchg
test
int
mov
sbb
mov
cmp
shll
clc
icebp
dec
xchg
add
dec
pop
or
aam
iret
loop
leave
dec
jo
fadd
adc
fcoml
mov
sbb
arpl
or
sub
dec
and
movsl
or
dec
out
popa
iret
roll
cmpsl
testb
jmp
loop
mov
pushf
pop
cmp
jecxz
rolb
lret
mov
outsb
cld
push
pop
data16
in
xor
dec
sbb
dec
xor
mov
mov
add
inc
adc
popa
in
jbe
movsl
mov
adc
jl
inc
jb
push
nop
mov
nop
in
dec
mov
mov
je
call
mov
xchg
imul
push
mov
mov
fsubr
out
int
jl
movsb
pop
cmpsb
int
cmc
pop
pop
pop
add
lods
inc
int3
cwtl
mov
inc
lcall
mov
call
and
idivl
roll
scas
insl
or
mov
xchg
insl
ds
ss
scas
xchg
or
push
add
jmp
sbbl
mov
push
mov
cli
test
cld
adc
inc
adc
xor
int3
dec
pop
mov
insl
lahf
pop
rcl
jmp
je
movl
std
mov
in
dec
std
mov
insl
rcll
push
inc
jbe
pop
push
inc
aaa
pop
dec
inc
fimull
cmpsb
das
add
push
call
ljmp
pop
jno
insb
lds
jl
mov
rcrb
pop
cmpsb
adcb
push
clc
movb
mov
repz
jge
add
and
lcall
lods
ja
dec
mov
xchg
dec
cmpsl
pop
pop
mov
xchg
in
movsl
dec
xchg
mov
out
ret
mov
rcrl
push
ja
ret
aas
in
add
int
stos
out
pop
lcall
popa
in
sahf
ds
adc
dec
or
mov
jb
add
inc
into
insb
cmp
add
mov
jb
lcall
xor
jle
sahf
mov
sbb
sub
filds
imul
lods
mov
jecxz
out
call
add
iret
xchg
jp
jecxz
lahf
inc
mov
xchg
jbe
adc
sub
pushf
rorb
sbb
mov
mov
icebp
imul
sub
dec
push
pop
pusha
jo
cmp
mov
cmpsb
movsl
inc
sub
pop
pop
cwtl
push
adc
nop
and
mov
add
fs
pop
mov
xor
xchg
pop
mov
mov
adc
or
mov
in
jne
sbb
cmp
ds
out
push
imul
in
inc
out
pushf
loop
neg
movsb
mov
and
mov
test
rcl
push
bound
jbe
pop
dec
sar
mov
lret
mov
inc
xlat
mov
cmc
sbb
dec
mov
mov
fs
std
mov
shlb
shlb
or
enter
and
test
in
sub
inc
xlat
lea
insl
callw
adc
xchg
mov
imul
dec
psrlw
lret
imul
hlt
xor
adc
inc
inc
sbb
popf
stos
mov
inc
lret
imulb
push
add
aam
loope
test
out
test
in
add
jle
mov
pop
jl
mov
insb
enter
xchg
inc
mov
cs
je
iret
std
int
sub
cld
nop
mov
loop
ret
and
mov
push
xor
cmp
jb
pop
clc
mov
or
fisubl
add
fisttpl
insl
enter
pop
fucompp
push
xchg
cmp
mov
int3
mov
inc
xchg
sub
mov
adc
jecxz
xor
in
pop
jecxz
xor
nop
jge
mov
add
aam
data16
pop
xchg
loope
les
int3
mov
sahf
int3
test
xchg
dec
mov
push
pop
sti
fiadds
push
shrl
pop
test
sub
lcall
mov
dec
rcr
movsl
int
in
dec
or
inc
xchg
pusha
repnz
out
mov
jo
setle
sbb
cmp
jnp
or
and
jge
push
mov
in
and
push
leave
adc
pushf
add
jp
aad
xor
xchg
and
lods
lds
fnsave
xor
fadds
les
dec
jbe
add
dec
mov
movsl
ljmp
fdivl
pop
jecxz
fists
pop
into
ja
jmp
push
xchg
push
xchg
mov
push
push
dec
rorb
jmp
mov
call
push
jbe
jl
mov
push
mov
mov
sti
cmp
push
push
pop
push
xor
jmp
mov
jae
sbb
mov
push
rcrl
jg
fstl
sbb
aam
lods
mov
loope
or
cli
mov
inc
subl
jle
and
ja
cli
xchg
jle
or
es
stos
sbb
mov
cltd
or
mov
jp
aaa
xor
arpl
xor
xor
ss
inc
push
out
xchg
dec
into
mov
imul
imul
fs
stos
dec
test
jb
pushf
cli
add
push
mov
add
pusha
in
imul
je
sahf
test
xchg
into
outsb
lods
scas
leave
or
mov
pop
dec
dec
pop
hlt
add
mov
inc
pop
loope
loop
adc
push
stos
xchg
popa
dec
in
xor
xchg
adc
fsubrl
shlb
sub
lea
cmp
dec
mov
mov
jmp
push
setno
push
stos
cmpsl
and
data16
xor
mov
sbb
cmp
adc
aaa
sbb
adc
rorb
jecxz
jmp
mov
add
fisttpl
sahf
dec
pop
arpl
cltd
test
icebp
test
lock
dec
cli
aam
jp
daa
outsb
insl
loop
loope
into
cli
and
and
mov
sub
test
in
outsb
addb
mov
xor
popa
pop
enter
xlat
sahf
or
andl
js
adc
jns
dec
jg
mov
jmp
jp
pop
xchg
pop
add
adc
into
daa
jp
dec
pop
push
ds
rcll
pop
jg
scas
adc
cmp
ret
test
sbb
inc
sti
mov
je
mov
inc
pop
mov
dec
mov
mov
aam
dec
xor
sub
jnp
dec
add
in
stos
push
inc
add
fldenv
in
mov
cld
scas
hlt
sbb
fiadds
push
and
xchg
popa
sub
mull
fildl
jo
andl
movsl
xor
shrb
addr16
popa
nop
repnz
insb
cmpsl
out
pop
cmp
jbe
jecxz
or
jno
rorb
push
xchg
test
pop
dec
sub
dec
lret
jmp
lods
jmp
std
and
into
xchg
mov
adc
cmp
cltd
call
xchg
rcrl
or
mov
ds
mov
inc
push
outsl
xchg
mov
out
adc
daa
pop
out
in
bound
xchg
push
pop
rorl
pop
mov
or
mov
dec
mov
into
cmp
xchg
xchg
or
fistpll
aaa
pop
popa
pop
mov
movsb
xor
ja
xorb
fiaddl
xchg
push
jle
fadd
mov
mov
mov
pushf
sub
and
mov
cwtl
adc
mov
daa
mov
and
test
jmp
bound
sub
ffree
sub
mov
out
jmp
fnsave
divb
lret
lahf
push
mov
xchg
mov
or
or
xchg
test
push
je
aad
jmp
bswap
mov
hlt
popl
xlat
addr16
cmp
and
bound
jmp
lret
scas
out
repnz
or
ret
add
pop
inc
jg
js
inc
pop
mov
mov
andb
push
mov
fsubrp
es
or
add
gs
add
nop
fdivl
push
inc
push
stos
rolb
loop
push
push
pop
in
loopne
ret
lea
sahf
and
lret
lods
cmp
push
sbb
loope
insl
xor
jns
popl
int3
xor
xchg
xor
fidivs
xchg
mov
pop
mov
dec
pusha
movsb
jmp
stos
mov
jecxz
gs
enter
dec
jp
arpl
outsb
addr16
jns
mov
pop
sarl
sbb
int
gs
sbb
ja
pop
dec
scas
xchg
push
in
dec
ss
ficomps
sbb
xchg
imul
dec
out
mov
sub
jns
jo
mov
push
or
dec
subb
mov
or
sub
lahf
xchg
aaa
push
pop
mov
jmp
dec
or
jnp
jb
loop
inc
repnz
jl
je
lret
adc
scas
push
add
inc
push
cltd
imul
mov
push
aam
movsl
pop
leave
arpl
mov
js
fldenv
fdivs
ficoms
xchg
pop
scas
push
xchg
jae
mov
mov
mov
in
lods
pop
cmp
jnp
cld
mov
addb
adc
shl
xor
sub
sbb
cmpl
test
xor
dec
and
push
test
iret
sbb
add
bound
decl
ja
sbbl
popf
into
cs
inc
stc
ljmp
insb
out
arpl
add
scas
rorl
imul
call
mov
je
sbb
hlt
lods
pushf
ds
mov
leave
sahf
out
push
mov
std
xor
dec
adc
jg
sti
mov
dec
incl
out
xor
mov
jae
test
ss
add
inc
xor
add
or
push
mov
mov
imul
dec
push
mov
jbe
sub
push
or
inc
int3
stc
enter
xchg
imul
mov
push
in
scas
ficompl
rorb
outsb
sbb
scas
jmp
pop
push
leave
sti
fcoml
out
adc
xor
iret
push
add
test
mov
cmc
addr16
addl
push
fwait
mov
jmp
mov
dec
lret
pop
xchg
jp
and
pop
es
out
stc
test
jns
aad
or
mov
mov
popf
mov
repnz
pushf
mov
les
loop
leave
gs
divl
cld
fldl2e
test
cmp
out
add
jle
mov
ret
int
bound
decb
sub
xchg
test
mov
in
shr
inc
or
xor
adc
lret
dec
cmp
gs
and
and
lret
fsubl
imul
jae
fimuls
jne
mov
insl
mov
fdivrp
test
int
in
notb
movsl
push
inc
not
divb
daa
lods
dec
cmpsb
sbb
aam
or
cwtl
sub
mov
mov
push
mul
or
mov
mov
int3
popf
and
adc
push
mov
sbb
inc
in
std
and
out
jp
sbb
ljmp
jne
mov
cmpsl
popf
lds
lods
sbbb
pop
testl
test
mov
in
movsl
sub
in
test
cmp
dec
xchg
sbb
popa
fninit
mov
mov
lock
adc
and
mov
jns
cmp
xorb
inc
movsb
mov
pusha
jne
adc
jns
insl
lahf
mov
mov
mov
repz
and
push
sti
lods
in
mov
cli
outsb
push
and
ds
outsb
lds
fnstenv
in
insb
sahf
cmp
pop
mov
mov
sbb
test
mov
dec
mov
lock
std
dec
xchg
aaa
mov
shl
lret
testl
mov
mov
adc
and
je
shll
cmpsl
dec
insl
into
stos
xorl
pop
test
mov
es
int
divl
push
test
mov
inc
pop
out
lret
add
fidivrs
mov
and
jb
test
and
pop
or
pop
cld
lods
mov
add
decb
jmp
mov
nop
xchg
jp
xchg
inc
sub
pop
adc
xor
add
dec
in
dec
sub
push
xchg
jmp
jge
lods
jns
out
stos
test
mov
or
dec
push
bound
nop
dec
imul
jp
mov
sbb
stc
adc
dec
sti
daa
xchg
loop,pt
aam
xchg
pop
sub
cmp
xchg
mov
push
lret
dec
rcll
fucomip
aas
in
sti
lock
clc
dec
ret
cmpsb
inc
sahf
jbe
popf
dec
daa
dec
sti
sub
fsubrp
nop
add
adc
add
js
add
push
and
lock
shl
mov
mull
nopl
aas
call
lods
sub
out
jne
call
sbb
ljmp
xchg
sbbb
rcl
lds
pop
sbb
shrb
test
ss
ret
adc
pop
movsb
arpl
and
pop
dec
out
push
cs
pusha
cmc
push
jl
fidivs
adc
jns
scas
insb
pop
call
call
sbb
cmpsb
ss
mov
ret
pcmpgtd
lods
sub
faddl
jle
int3
out
mov
test
mov
pushl
out
shl
inc
fcomps
jmp
pop
stc
pop
cmp
movsl
dec
enter
insb
jp
xchg
adcb
ret
sub
xchg
xor
out
mov
je
push
mov
ja
int3
mov
push
adc
fdiv
mov
cmp
sub
mov
inc
arpl
inc
or
out
xlat
loopne
jmp
cmpsl
add
push
or
gs
ret
shll
data16
add
stos
inc
stc
mov
push
shll
sbb
aas
or
out
testl
rol
lahf
push
daa
inc
sub
rclb
ficoml
xchg
fwait
out
orl
mov
mov
push
pop
stos
mov
stc
jmp
insl
stc
dec
lahf
fistpll
xchg
sub
push
xlat
mov
call
jns
idivl
adc
pop
lods
mov
sub
pusha
lea
in
jb
dec
call
cs
mov
lcall
adc
mov
dec
add
jae
dec
jnp
mov
or
dec
rcr
mov
imul
fstl
mov
lea
test
adc
pop
sbb
sbb
lea
enter
xchg
insb
push
stos
dec
add
xchg
adc
jmp
cmp
insb
lea
mov
push
xchg
push
cmp
neg
jns
jl
movsb
push
ret
mov
dec
add
adc
mov
xchg
jbe
iret
mov
leave
mov
xor
xchg
test
lea
dec
xchg
adc
ss
int3
imul
cld
pop
cmp
jbe
imul
mov
cmp
push
mov
sbb
enter
sti
imul
aaa
aaa
mov
pop
push
mov
out
repz
mov
cmp
xchg
or
popa
mov
adc
jp
bound
in
xchg
cwtl
pop
scas
dec
dec
cmp
imul
jge
push
dec
movsb
sarb
out
mov
sbb
dec
aad
cltd
pushf
lea
sti
mov
lret
hlt
push
mov
push
mov
in
inc
jae
stos
add
scas
xor
inc
inc
jnp
or
aas
loope
push
mov
mov
pop
mov
sbb
movsl
xchg
mulb
pop
add
lods
insb
sahf
in
add
sbb
or
or
mov
outsb
outsb
adc
imul
ljmp
shl
xchg
cmp
imul
push
mov
dec
add
dec
iret
stc
add
int
icebp
insl
jge
add
xchg
adc
inc
or
lret
xchg
mov
lods
aad
add
div
mov
pop
out
dec
sti
into
in
mov
loop
pop
jl
mov
sub
in
fsubrl
cld
insl
xchg
and
ljmp
imul
adc
mov
sub
callw
mov
mov
xor
aas
mov
ljmp
mov
sbb
lea
outsb
stos
sbb
fiaddl
mov
inc
xchg
inc
lds
stos
pop
adc
shrb
dec
pusha
rclb
notb
fdivs
mov
sub
fimull
pop
sub
inc
cmpsl
adc
cs
adc
out
sub
push
mov
subb
in
push
push
ds
mov
cwtl
inc
dec
test
sbb
mov
lock
insl
stc
inc
push
rclb
stos
mov
andl
mov
mov
mov
int
push
ret
xlat
test
mov
push
fs
lea
or
mov
movsb
daa
jo
in
iret
jg
call
into
rclb
and
and
fs
dec
jbe
sahf
adc
cmp
test
sbb
jge
mov
fisubrs
dec
fs
mov
xchg
sti
xlat
movsb
mov
jno
lds
push
arpl
mov
add
dec
lcall
loop
sarb
jle
hlt
ror
outsl
idivl
pop
xor
dec
mov
mov
outsl
push
push
mov
adc
jmp
faddl
xor
pop
in
cmp
or
dec
xor
and
sub
jecxz
fldln2
dec
clc
push
int3
bound
mov
sub
repnz
add
les
cmpl
and
inc
xchg
js
scas
leave
add
push
orl
ret
fcoms
ss
std
lds
dec
xchg
xchg
outsl
mov
icebp
mov
inc
inc
sahf
punpckhdq
ljmp
movsl
inc
push
daa
in
into
xchg
ret
test
xchg
inc
or
mov
iret
mov
push
mov
xchg
stos
sub
pop
das
fcompl
psubb
fbld
adc
jmp
dec
outsl
popf
pop
cld
iret
push
cmc
jg
leave
lret
push
outsl
jge
push
pop
fcmove
inc
cwtl
imul
insb
push
cmp
cmp
pop
xchg
xchg
scas
jle
push
cmp
ja
or
mov
inc
nop
fidivrs
pop
and
cmp
aaa
sahf
push
mov
push
rorb
xchg
push
mov
in
add
in
pop
rcll
jg
aaa
loope
das
scas
hlt
or
mull
push
in
dec
xor
cwtl
lcall
push
sub
rcrl
out
outsl
shrb
dec
popa
pusha
add
aaa
jg
repz
sub
in
jb
sub
adcb
or
movsb
push
jmp
adc
pop
or
push
xchg
lods
aas
mov
push
add
sbb
shll
test
ljmp
shll
or
pop
jae
insl
mov
pushf
movsb
cmp
mov
adc
sub
loop
mov
mov
mov
cltd
cmpsl
jle
daa
gs
mov
jecxz
sbb
sbb
test
fldcw
mov
push
and
adc
push
imul
mov
xor
out
adc
dec
lahf
int
or
cmpsl
jmp
into
dec
aas
pop
mov
adc
dec
sub
sub
inc
inc
mov
out
or
sti
setb
ja
call
lods
dec
mov
dec
enter
add
push
popa
mov
in
inc
insb
and
aaa
leave
mov
insl
leave
dec
lahf
and
sbb
les
dec
movb
and
pop
enter
lret
ficoml
pop
negl
dec
xor
dec
adc
push
cmc
loop
adc
fwait
xlat
cmp
xlat
stc
inc
scas
xchg
pop
xor
leave
dec
adc
jl
cwtl
lret
sub
inc
ret
test
inc
mov
push
hlt
pop
out
test
ret
stos
jbe
jae
daa
loopne
pop
push
or
sbb
nop
loope
cmpsl
xchg
stc
aaa
cmp
add
std
xchg
sbbb
mov
cmpsb
and
call
imul
xor
mov
dec
sti
add
popf
cltd
fsub
cmc
hlt
negl
mov
xor
jae
ds
fs
std
jp
sbb
test
das
sub
adc
cmp
push
push
je
hlt
es
in
pop
mov
xchg
repnz
mov
ja
rcrb
jge
or
mov
jle
lret
xor
outsl
push
nop
int3
ljmp
aam
sti
leave
mov
jp
lods
mov
into
push
add
dec
xchg
mov
mov
mov
lods
jnp
mov
out
sbb
ret
pop
jno
das
xchg
imul
out
dec
imul
add
add
mov
adc
dec
aaa
in
mov
daa
rolb
daa
icebp
adc
pusha
jp
aaa
movsl
orl
add
fcoms
xchg
dec
inc
test
int
dec
xchg
scas
testb
in
mov
sbb
jbe
cmove
cmpl
jge
out
sub
in
das
xchg
cmp
stos
pop
int3
fcoml
imull
adc
jmp
loopne
push
aas
ret
mov
popf
mov
sahf
and
add
pop
out
cmp
fs
inc
pop
fwait
cmc
pop
inc
sbb
and
insl
push
stos
adc
adc
fdivrp
xlat
jle
pop
cmp
xor
sbb
push
cmpsb
mov
cmp
int3
xchg
dec
cltd
fldl
or
or
mov
xchg
or
xlat
ret
in
cmpsb
mov
add
or
jge
enter
mov
pop
sub
jmp
mov
insl
pop
mov
sub
les
pusha
mov
push
mov
inc
push
lret
pusha
sbb
or
xchg
dec
repz
push
ljmp
xchg
jecxz
xchg
xchg
movb
xor
sub
or
push
push
es
notl
cmpsl
jb
adc
jecxz
fstps
bound
sbb
add
popa
push
mov
mov
idivb
nop
mov
cmp
sub
roll
ss
cli
fnsave
aas
addr16
push
push
pop
push
xorb
fcoml
lods
pusha
scas
cmp
or
and
orb
jp
and
mov
push
mov
cmp
mov
shrd
lods
mov
jecxz
or
mov
js
lock
mov
push
dec
mov
incl
cmovne
mov
sahf
sub
insl
cld
hlt
test
sarl
jmp
pop
cld
xchg
add
shlb
movaps
popa
and
sti
cwtl
or
faddp
mov
sub
dec
xlat
xlat
orb
mulb
dec
cmp
mov
pop
ret
shrb
lock
cmp
push
mov
add
in
arpl
dec
js
pop
inc
into
imul
stos
add
and
js
jb
cmp
setne
sbb
sub
dec
div
sbb
sbb
xchg
aaa
call
adc
testb
lods
or
iret
pop
jnp
dec
xchg
and
xor
pop
shll
orb
fisttps
jo
nop
mov
popa
fs
lcall
pop
dec
dec
ljmp
push
lods
or
mov
loopne
insb
mov
test
push
and
fwait
xchg
inc
push
push
das
int3
push
daa
clc
fbstp
pusha
movsl
cmp
mov
dec
sti
jns
iret
and
addr16
push
or
adc
mov
sub
mov
cwtl
pop
fisttpll
adc
loop
int
mov
mov
jle
pop
test
std
mov
lods
mov
idiv
scas
and
hlt
in
pop
mov
orl
jb
pop
shll
xor
fnstsw
gs
inc
sbb
clc
ja
dec
mov
and
bound
cld
mov
and
push
mov
push
test
mov
and
xchg
jne
xchg
pop
sbb
or
sub
push
mov
push
mov
pop
dec
inc
xchg
sahf
bound
movsl
push
ret
sub
cwtl
decb
fdivs
call
adc
lea
push
cs
xor
xor
ficoml
mov
lahf
mov
push
and
fisttpll
je
das
ret
sub
inc
mov
jmp
mov
das
scas
pop
subb
cld
dec
jne
repz
fdivrs
push
jns
filds
scas
cmpsb
xchg
mov
mov
sub
add
imul
pop
jnp
roll
fistl
push
pop
sub
xchg
mov
inc
pop
push
clc
mov
mov
push
rcrb
repnz
adcb
dec
or
sbb
popl
sbb
mov
scas
mov
lods
lods
push
push
daa
enter
or
ret
mov
cld
repnz
int
out
dec
pop
lods
popa
aaa
add
and
mov
lods
stos
cmp
cmp
cld
outsl
loope
xchg
test
jle
dec
add
or
hlt
outsb
mov
scas
push
pop
stos
lods
imul
aas
pmulhuw
imul
add
xor
mov
mov
cmpsb
xlat
imul
js
sub
loope
sbb
and
divl
xor
and
es
outsl
and
dec
push
bound
jo
lods
pusha
pop
ficomps
xchg
sbb
fwait
sbb
sub
loopne
xchg
loopne
out
popa
in
loop
stos
sbb
add
fcomps
xlat
xor
inc
and
jne
xchg
adc
add
add
pop
push
dec
aad
cmpsl
mov
les
ss
xor
sbb
mov
xor
adc
mov
mov
js
outsb
or
imul
sbb
clc
and
ss
and
sbb
sub
push
mov
inc
xor
out
fwait
adcl
sub
insl
outsb
mov
movsl
mov
and
xor
inc
sbb
xchg
dec
lea
jne
cmpl
jne
cmp
jl
inc
fcmovne
je
les
psubd
ja
mov
jbe
ret
cltd
mov
add
mov
icebp
clc
mov
xchg
int3
mov
es
fidivrs
jns
sbb
cmp
scas
sahf
push
roll
lret
scas
idivb
cmc
mov
int3
or
cwtl
stos
mov
lcall
xchg
pop
mov
loope
cmp
mov
dec
mov
add
cmp
orl
ret
adc
jp
lret
mov
jne
jg
or
add
ljmp
or
inc
ror
inc
add
jae
es
inc
popa
dec
scas
adc
cmp
mov
jmp
arpl
popl
cltd
or
xchg
lods
or
idiv
ret
jp
testl
cmp
and
adcl
enter
and
push
mov
clc
stos
pop
movsb
lods
xchg
scas
in
sti
in
pop
sub
pop
inc
jl
add
subl
rcrl
push
jecxz
xchg
popf
mov
int3
add
xchg
mov
mov
pop
sub
test
mov
dec
add
movsl
inc
mov
pop
sbb
lea
ror
pop
out
int
imul
mov
push
cmp
fisubs
xchg
lock
lret
inc
in
jecxz
notb
inc
inc
mov
mov
sub
cmp
test
ja
jecxz
add
and
pop
fs
add
dec
aas
push
ss
jmp
loop
and
repnz
xchg
or
add
std
adcl
mov
xor
mov
scas
arpl
xor
loope
lods
jmp
loopne
shll
xchg
mov
mov
push
xor
mov
sbb
push
hlt
out
aad
pop
or
jge
push
cwtl
in
pop
stos
hlt
sub
add
ficoml
sub
mov
push
cmc
stos
shl
sub
xor
lock
in
das
loopne
out
xor
add
jmp
xchg
sub
cmp
xchg
sub
nop
pushf
and
xchg
cmc
fisubrl
fnsave
cld
adc
inc
std
loope
jne
or
lahf
sbb
sti
mov
jno
icebp
mov
push
stc
into
lret
stos
jp
gs
ljmp
leave
push
push
cmp
inc
cmpsl
inc
test
lods
push
dec
pop
dec
sbb
cltd
sub
sub
add
mov
pop
fwait
sti
adc
dec
cmp
jp
cmp
movsl
sbb
fsts
jp
clc
xor
and
stos
loop
mov
aas
outsb
sbb
cmp
jne
add
xor
in
add
mov
ljmp
push
sbb
mov
sbb
imul
push
test
add
cmp
aad
ljmp
push
mov
iret
shl
loopne
subl
and
xchg
or
xchg
inc
repnz
jae
mov
inc
dec
testb
xchg
or
call
jae
repz
jmp
dec
and
inc
cltd
dec
fwait
xlat
cld
mov
sub
les
adc
mov
jecxz
mov
cmp
add
jae
jg
push
add
loope
jbe
mov
pop
mov
pop
xor
imul
aas
push
test
lea
mov
mov
out
pop
addr16
xchg
cmp
cmpsl
ss
mov
jle
ds
push
dec
sub
fcomps
iret
negl
inc
and
pusha
mov
ljmp
add
pop
jmp
mov
or
in
lock
push
cmpsl
ljmp
stos
insb
cli
xchg
or
das
push
xor
cld
sub
ret
repnz
cltd
mov
pop
adc
iret
int
insl
test
mov
enter
pop
in
mov
fstpt
xchg
arpl
stos
out
xor
in
cmp
mov
mov
dec
xchg
int
insb
aas
and
xor
xchg
xchg
pop
pop
loopne
cld
xchg
adc
bnd
fwait
jmp
bound
sbb
pop
or
push
shrl
fstps
and
add
jmp
pop
js
cmp
mov
psubq
adc
jecxz
jle
and
insl
push
and
xchg
mov
xchg
jge
mov
sbb
out
jne
aaa
mov
cltd
adc
loopne
sbb
lret
jecxz
xor
ljmp
adc
or
mov
daa
push
and
sbb
jp
arpl
dec
jne
and
insl
xchg
das
repz
loop
or
pop
mov
std
mov
outsl
pop
sahf
adc
mov
in
testl
ret
lock
bound
insb
ljmp
not
lods
in
dec
mov
inc
push
xor
add
jae
pop
xchg
push
test
mov
cmc
sahf
sbb
icebp
sbb
clc
pop
add
cmpb
imul
pop
push
dec
ret
rcrb
ljmp
sbb
aaa
sub
ret
mov
mov
inc
add
sub
dec
rorl
jo
jae
lods
mov
aad
adc
insl
pop
and
xchg
xor
int3
test
xor
adc
pop
sub
adc
nop
scas
popf
pop
outsb
sbb
xor
vpavgw
lret
shlb
test
inc
dec
fmuls
clc
fldenv
iret
fwait
dec
dec
test
iret
xor
dec
sbb
push
inc
sub
ficomps
aam
in
sub
push
sbb
inc
fidivl
mov
jmp
xchg
cmp
mull
mov
mov
insl
or
dec
insb
jge
dec
jb
add
xorl
dec
popa
pusha
int
out
rolb
in
das
xchg
cmpsb
in
dec
aaa
dec
outsl
testl
ret
loop
push
sub
es
aas
xor
jge
bound
movsl
xchg
xor
shr
push
mov
lahf
sub
jnp
mov
xchg
clc
sub
test
addr16
inc
shl
mov
rep
aam
pop
cmp
ljmp
cmp
ror
xchg
mov
cmp
test
cmp
stos
adc
xor
dec
and
inc
shl
js
mov
mov
mov
mov
mov
inc
std
fadd
add
mov
ds
push
test
mov
cli
int3
imul
test
pop
je
lret
adc
fs
cwtl
xor
jno
inc
pop
shll
xorl
arpl
sahf
fisubrs
das
jo
xor
xchg
push
cmpsb
sub
int3
push
mov
scas
jge
loope
imul
cmc
ss
mov
popf
iret
adc
mov
mov
cmc
xor
roll
mov
sub
jmp
fsub
int
pop
int
lds
pop
cmpsl
ss
and
mov
push
adc
pop
inc
aad
pop
lods
out
jmp
outsb
mov
movsl
out
decl
mov
mov
fwait
push
pushf
cs
lcall
cmp
sub
insb
jae
into
stos
adc
clc
ja
mov
sub
cmpsl
out
and
xor
sbb
inc
jns
pop
icebp
cli
loope
sbb
mov
pop
adc
leave
imul
gs
lret
jmp
popf
jbe
adc
dec
je
icebp
js
in
nop
lret
inc
lock
flds
push
pop
sahf
push
and
fs
shll
cmp
pop
push
sbb
sub
cmp
imul
stos
lcall
pop
mov
push
aas
pop
fdivs
jl
je
cs
mov
or
and
cmp
lock
leave
mov
dec
push
mov
and
push
outsb
fadds
push
mov
pop
cmp
push
jg
mov
push
xchg
xlat
cmp
xor
mov
xchg
loopne
dec
mov
ss
sbb
sahf
das
push
inc
idiv
pusha
aas
pop
sub
cmc
xlat
jmp
scas
dec
xor
pop
loopne
sub
imul
fidivl
call
aas
lds
xor
cltd
andb
lret
dec
push
and
mov
pop
mov
adcl
pop
gs
mov
rolb
es
lods
xchg
aaa
jbe
inc
sahf
cwtl
cvtdq2ps
hlt
dec
push
jg
scas
test
push
add
push
xlat
inc
sbb
popf
lock
pop
mov
adc
lock
mov
sti
add
movsb
in
scas
inc
cmp
in
popf
jmp
in
push
cli
xchg
dec
test
pop
cmpsb
jo
scas
icebp
pop
addr16
dec
out
push
mov
sarl
jne
fcoms
ds
es
cs
sub
shll
sbb
xorl
fcoms
and
inc
pop
dec
lcall
sbb
sub
push
ja
aaa
sbb
outsl
push
sub
inc
push
fdivs
fidivrs
cwtl
mov
cmpl
outsb
xchg
cmp
dec
scas
std
sub
mov
jo
scas
fisttpll
sbb
int
shlb
pop
pushl
cwtl
lock
dec
sub
adc
leave
mov
fsts
shrb
xchg
or
mov
es
pushf
dec
fbld
add
ja
pop
push
cmpsb
mov
pop
or
arpl
incb
sbb
xchg
xlat
rcll
add
ja
scas
pop
xchg
out
imul
xchg
mov
sti
loop
fwait
xor
dec
popf
mov
das
pop
jmp
aas
mov
loopne
add
inc
cs
lds
sbb
pop
divb
add
sub
jb
mov
loopne
sub
cld
mov
inc
dec
sub
mov
sbb
addb
cs
out
inc
adc
cwtl
inc
xchg
push
fimull
sahf
or
dec
xchg
sbb
shll
push
repnz
xlat
in
or
icebp
pop
fisubrl
loop
aas
mov
or
mov
jp
ret
add
add
inc
mul
cmp
lcall
adc
out
or
xchg
adc
fistpl
mov
cmp
cmpsl
add
xchg
and
add
stos
imul
mov
jle
mov
adc
shll
ss
in
iret
xchg
ljmp
lock
movsl
sub
sub
adcl
sub
out
insl
jae
jae
xchg
adc
mov
into
dec
test
add
jl
cmpsl
inc
and
push
and
mov
mov
lahf
lock
cwtl
push
mov
stos
aad
mov
pop
dec
inc
scas
xor
std
push
stos
mov
jmp
adc
cmp
ret
outsl
mov
xchg
insb
mov
paddb
in
das
rcll
sub
mov
adc
inc
outsb
add
ror
mov
lret
push
cmp
mov
popa
or
aad
and
push
sub
xchg
mov
call
xor
out
cmp
xchg
jl
jnp
mov
adc
pop
xor
ret
push
dec
lahf
stos
mov
push
mov
cmp
pop
je
repz
cli
aaa
das
int3
rclb
xchg
sub
je
shlb
insl
shlw
or
addr16
lcall
aaa
pusha
xchg
lods
xor
xchg
test
ret
bound
mov
jle
dec
cmc
bound
mov
ficompl
stc
mov
rcll
fcmovnb
insb
movsl
mov
sub
xor
adc
pop
mov
xor
mov
test
pop
cmpsb
out
push
or
push
xchg
sub
out
jnp
lahf
shlb
and
das
or
sbb
sbbl
js
ljmp
cli
sti
bound
jne
loopne
pop
pop
fisubrl
mov
adc
cmpsl
xchg
xchg
push
xchg
and
or
adc
inc
jmp
and
leave
adc
in
pushf
jl
mov
into
lock
mov
leave
add
or
mov
mul
or
rolw
cld
inc
lods
sub
std
mov
addb
mov
cwtl
push
in
scas
add
and
cs
push
push
test
call
inc
outsl
fld
fcomps
outsl
and
inc
jae
lcall
adc
mov
sbb
es
fstl
insb
aaa
push
add
xlat
and
xor
stos
push
arpl
cmp
adc
popf
lock
jns
and
icebp
notl
xchg
gs
out
adcb
das
mov
int3
sarl
fildll
mov
test
leave
dec
push
repnz
fcmovne
sbb
dec
jb
add
inc
iret
push
nop
xchg
cmpsb
jo
inc
adc
mov
xchg
xchg
xor
std
dec
outsb
xor
pop
subl
bound
movsl
rclb
mov
or
lock
pop
pushf
pop
ja
lahf
scas
inc
insl
jbe
cmpsl
ljmp
adc
ret
jae
push
fxch
into
cli
cld
shrb
xchg
sub
bound
push
jecxz
xchg
leave
daa
pop
hlt
dec
outsl
das
arpl
add
sub
sub
inc
in
xor
cmp
mov
aam
adc
dec
lcall
pop
lret
js
ret
jg
nop
sbb
pop
stc
push
leave
fcomip
fwait
mov
and
and
hlt
adc
fndisi(8087
mov
stos
lret
arpl
mov
aaa
pushf
lea
cs
sub
frstor
add
dec
push
adc
xchg
mov
adc
out
inc
jle
ret
xor
lcall
aad
fnstenv
fnstenv
push
fidivl
xchg
xchg
pop
jo
imul
fs
jge
fstl
pop
lcall
lret
dec
adc
arpl
sub
xchg
mov
push
leave
fistpll
push
mov
rol
sub
xchg
cltd
es
jns
xchg
outsb
sarb
cmp
stc
cltd
xor
in
push
scas
mov
mov
or
push
popa
iret
dec
inc
xchg
push
dec
in
mov
aad
sbb
xchg
cwtl
andb
mov
cmc
mov
cs
mov
push
mov
scas
mov
ss
xchg
jbe
mov
sub
mov
add
je
pop
arpl
and
xchg
leave
jnp
sbb
orl
adc
inc
add
adc
jl
test
ja
fwait
mov
or
mov
dec
mov
mov
mov
inc
xchg
add
sbb
push
inc
nop
inc
mov
cmp
and
mov
lods
mov
add
shl
lahf
les
insb
inc
repnz
mov
or
inc
or
aam
aaa
ficomps
mov
bound
cmp
push
push
mov
lret
cwtl
lret
loopne
mov
imul
sub
add
xor
xchg
mov
nop
sbb
out
jb
and
stos
nop
insl
cli
lea
ja
and
daa
fistpl
les
cmp
cmc
mov
mov
pushf
xchg
nop
in
test
cmp
jle
push
push
inc
pop
popa
ss
xor
pop
lods
cmp
sub
sub
fs
jne
test
rorl
push
data16
loope
xchg
sub
daa
mov
mov
xor
lods
ret
sbb
movsb
subb
adc
pop
dec
lcall
adc
ja
popa
inc
data16
dec
add
inc
adc
fs
mov
repnz
or
mov
dec
push
dec
fcmovu
or
clc
mov
sbb
mov
dec
leave
sbb
xchg
cs
cltd
dec
shrl
test
pop
inc
mov
mov
xlat
aad
fwait
adc
push
cwtl
adc
push
imul
std
cltd
inc
pop
scas
xor
sub
repnz
in
sarl
xchg
mov
fcmovb
fisubrl
mov
js
arpl
fs
or
shll
es
loope
and
fldl
push
ret
push
push
in
push
push
xchg
ss
push
inc
push
push
icebp
cmp
mov
cmp
cmp
dec
xor
dec
adc
inc
xor
shrb
cs
pushf
pop
cli
jnp
sbb
out
sbb
or
and
cmp
nop
adc
adc
and
inc
clc
inc
xchg
inc
out
je
fimuls
push
or
in
and
cltd
pop
lock
jnp
std
push
jl
jmp
dec
in
cmp
mov
cwtl
lret
pusha
sbb
repz
inc
or
fmull
clc
sbb
lea
mov
fdivrs
inc
inc
cmpsl
dec
adc
dec
mov
fimull
imul
lea
push
xchg
test
pop
call
inc
add
fs
lds
test
sbb
mov
sbb
hlt
or
cmp
cwtl
push
lock
mov
lcall
lods
je
mov
out
jg
dec
fldcw
jne
lods
cmpsl
cld
pop
add
pop
imul
lds
jb
test
loopne
cmp
sbb
dec
loopne
jp
lods
or
jp
or
test
lahf
jns
sub
dec
fwait
cmp
icebp
mov
sub
mov
jmp
lods
movsl
mov
and
push
popa
test
mov
xchg
pushf
imul
jbe
xchg
fnstsw
pop
jmp
cwtl
mov
bound
std
mov
stc
sub
lea
pmulhuw
or
jns
push
xchg
pushf
insb
pushf
push
sbb
and
sub
leave
scas
es
jmp
or
inc
xchg
inc
pop
icebp
cmpsb
int
loopne
pop
cmp
and
mov
cmovno
lods
repnz
inc
sbb
popf
xchg
out
jnp
les
js
sahf
mov
adc
push
and
push
mov
pop
xchg
jns
cmpsb
ja
or
mov
ds
sub
jbe
jns
stc
mov
fdivs
fisttps
cltd
or
nop
jge
add
or
ja
inc
push
and
cltd
mov
idivl
add
insl
repnz
dec
aas
cwtl
je
in
insb
push
sub
mov
outsb
pop
xchg
stc
xor
push
push
xchg
lds
push
insb
inc
loopne
xchg
adc
sbb
mov
mov
add
jns
test
loope
rorb
in
mov
jnp
fucomi
arpl
push
push
push
fs
fld
xchg
and
icebp
scas
int
sub
gs
insb
and
xor
or
mov
gs
xor
daa
sub
jne
int3
cli
outsb
mov
das
mov
add
lcall
int
fisubrl
xlat
cmpsl
mov
mov
pop
cmp
sbb
fxch
lahf
jbe
mov
iret
dec
push
ds
and
cmpsl
sahf
stos
aaa
mov
mov
pusha
or
add
lret
xchg
fs
mov
xchg
aam
mov
dec
out
jmp
dec
xchg
fnstcw
loope
lcall
cs
imul
push
add
jp
jb
stc
add
popf
xlat
add
jae
and
lds
push
bound
jbe
mov
lods
fimuls
stos
add
inc
inc
mov
ljmp
fcmove
dec
push
std
dec
enter
xchg
icebp
mov
inc
test
ljmp
add
pmaxsw
loopne
stos
test
pusha
xchg
lcall
jno
fists
lds
out
cmp
mov
das
test
shlb
cmc
inc
add
inc
in
jne
int
and
dec
popa
adc
test
push
std
push
and
xchg
mov
dec
add
in
and
and
sub
leave
out
arpl
sahf
imul
fwait
inc
pusha
rorl
das
je
dec
popf
stos
pop
test
fwait
sbb
sbb
cmp
inc
mov
stos
in
imul
mov
jl
test
movsb
fisttpll
push
test
push
xor
or
movsl
or
and
out
fdivrl
stos
xlat
pop
cmc
insb
je
xchg
mov
push
sbb
in
dec
mov
mov
sbb
cmc
loop
adc
cmp
loopne
paddusw
dec
aas
adc
push
imul
cmpsb
arpl
cmp
dec
aad
jecxz
mov
rcll
pop
add
jno
ret
dec
cli
add
rcll
jge
dec
xor
rorl
sahf
cltd
cmp
pop
ret
and
mov
sbb
push
lahf
pop
jns
or
jae
fcoms
inc
or
dec
das
insb
dec
cmp
jecxz
into
stos
out
dec
jp
jge
fcmovnu
dec
add
mov
loopne
add
xor
sub
sarl
sub
mov
es
adc
cmp
pop
cmp
mov
push
jmp
pop
pop
hlt
out
mov
test
xchg
xor
sbb
cltd
cmpsl
pop
ss
dec
cmpsl
lret
mov
idivb
ds
lock
sti
jecxz
popf
adc
ret
sbbl
fcoml
sub
incb
add
inc
hlt
dec
push
or
outsl
push
loopne
cmp
popa
cmc
adc
fldt
jb
push
xchg
push
xchg
inc
cltd
xchg
pop
aas
scas
pop
decb
adc
dec
lret
ljmp
into
in
aas
sahf
xor
pop
xor
mov
dec
sub
inc
xchg
rol
cmpsb
cmp
fistps
nop
daa
lret
sti
out
icebp
inc
xchg
dec
lock
xchg
mov
mov
test
and
and
insb
or
cltd
cs
push
jecxz
jnp
mov
push
cs
cmpsb
xor
je
mov
mov
ret
cmp
sbb
adcl
mov
std
jg
jbe
lods
jne
sub
inc
pushf
adc
cmpsl
xor
daa
xor
fists
filds
mov
jb
pop
jb
mov
mov
pushf
xchg
in
je
xchg
fcmovnb
jne
sub
or
and
jno
inc
cmpsl
xchg
cwtl
dec
repnz
pop
push
call
int3
imul
dec
and
dec
call
cmp
imul
xor
pop
dec
imul
jge
push
adc
and
testb
pop
lods
aas
lock
clc
xchg
in
and
jmp
roll
mov
mov
shll
add
in
xlat
mov
stos
xchg
mov
fs
lods
adc
xchg
loop
pop
loopne
sbb
and
js
pop
mov
pushl
mov
push
jnp
xor
sbb
fiadds
sub
test
and
pop
jmp
ret
adc
sbb
or
sbb
dec
inc
outsb
mov
push
sub
fwait
loop
mulb
pop
hlt
ss
aad
add
aam
push
jns
test
inc
into
sub
lahf
cmc
daa
pop
leave
dec
adc
push
xchg
mov
dec
ss
fstps
push
dec
mov
adc
xor
icebp
mov
push
lods
out
mov
add
xchg
dec
je
cs
mov
cmp
sbb
test
mov
fsubr
jp
idivl
jne
dec
jl
sub
pusha
inc
loopne
inc
sbb
pop
in
imul
fdivs
inc
jge
adc
ret
stc
and
push
das
mov
cld
push
cmpsb
and
int3
stc
sbb
lcall
pop
cmp
inc
or
clc
lea
test
ljmp
pop
and
test
inc
cwtl
subb
push
clc
test
ds
pop
cmc
mov
mov
xchg
push
movsb
xor
pop
dec
cltd
adc
pop
mov
in
pop
jo
xlat
clc
cmp
ret
insl
or
fstp
jo
cmp
adc
cmp
cwtl
inc
xor
movsl
cltd
cmc
inc
aas
mov
cmc
sub
add
mov
ret
mov
pusha
mov
mov
repnz
xchg
jmp
nop
and
add
mov
dec
pushf
jno
mov
xchg
mov
mov
sbb
xchg
push
dec
repnz
mov
cmpsb
xchg
mov
ds
xchg
cld
sub
test
out
aad
cli
ss
mov
mov
push
sub
rdtsc
fildl
pop
xchg
test
push
out
inc
es
int
cli
shll
insb
adc
push
outsb
mov
or
sti
adc
mov
sbb
cmp
mov
pmullw
lock
xor
inc
imul
mov
xchg
jp
cwtl
cli
out
xchg
or
js
jl
je
mov
jno
js
xlat
mov
inc
mov
daa
and
jns
call
lret
pop
push
mov
popf
ljmp
js
mov
inc
daa
lock
repz
xchg
and
lret
dec
pop
xchg
sub
and
adc
stos
dec
dec
dec
mov
or
adc
outsb
mov
mov
lods
mov
iret
sbb
clc
lods
test
pop
aas
pop
outsl
mov
adc
xchg
arpl
xchg
mov
movsb
outsb
and
lods
nop
ja
int
or
jb
shrb
sub
inc
cmp
out
push
xchg
ds
mul
xchg
dec
or
and
pop
clc
mov
ljmp
nop
pop
sahf
ja
mov
mov
std
inc
sub
mov
sbb
sub
ljmp
je
sbb
adc
or
mov
sbb
nop
dec
jecxz
adcb
add
aam
dec
mov
jb
fs
jp
sub
fdivrl
loop
or
not
pop
jno
jmp
sub
sbb
addr16
in
lock
loopne
js
ror
out
push
fwait
cli
dec
out
push
dec
repnz
pushl
add
pop
or
push
xchg
dec
add
dec
push
in
movsl
das
jle
out
or
inc
out
adc
jb
add
inc
cmp
cld
iret
fisubrs
cltd
pop
stos
aas
ljmp
adc
adc
int
nop
and
int
pop
mov
pop
repnz
mov
mov
mov
mov
pop
xor
push
cvtdq2ps
mov
inc
out
xchg
xor
stc
lods
stc
push
xchg
mov
cmp
and
loopne
add
test
rcr
test
cltd
popf
fimull
mov
sbb
clc
push
sti
adc
jno
pop
mov
rorb
push
gs
mov
push
cltd
pushf
lods
adc
push
data16
adc
test
sub
rcll
out
loop
cld
mov
cltd
out
dec
adc
mov
das
arpl
adc
inc
je
cs
icebp
cli
shrl
fcoms
adc
xor
xchg
xchg
mov
fmuls
aad
xchg
adc
pop
cmp
fwait
cmc
repnz
pusha
ret
js
jge
and
test
push
mov
pop
sub
fcomip
xor
ja
lret
sbb
dec
mov
jp
jns
lea
rclb
xor
loopne
jp
jae
scas
pop
aaa
xor
leave
lods
shr
repnz
cmpsl
xor
dec
sub
into
lret
xchg
out
dec
fisttpll
addl
pop
bound
mov
movsl
inc
jb
fdivrs
les
xchg
pop
std
test
sbb
jg
out
aaa
arpl
jbe
test
daa
or
xor
jmp
sbbl
jl
test
push
lahf
xor
fidivl
mov
and
push
andb
cmpb
arpl
dec
cmc
mov
and
sub
shl
scas
cltd
cmc
fs
push
mov
sbb
shlb
add
xchg
arpl
dec
ret
and
push
int
cltd
rcrb
sub
jnp
adc
mov
mov
jbe
xchg
stos
movsl
adc
fildl
xchg
mov
mov
shll
lret
mov
jae
stc
push
ljmp
inc
adc
jae
jl
cwtl
lcall
add
mov
sti
mov
push
rcrl
xor
dec
pop
jno
push
roll
ret
aad
mov
jmp
mov
pushf
in
imul
lods
rclb
and
mov
test
or
pop
imul
add
xchg
jae
das
mov
jae
pushf
test
test
fbld
stos
push
out
leave
jbe
shl
xor
bound
lcall
pop
sti
das
xor
cmp
negl
icebp
cltd
enter
sarl
bound
shr
lds
mov
cmp
xchg
cmp
cmp
mov
jbe
and
aad
fwait
je
shlb
popl
mov
adc
sub
inc
cld
mov
in
or
es
adc
xchg
lret
repz
out
test
cli
mov
mov
or
adc
sbb
mov
push
push
mov
add
icebp
sbb
and
es
mov
mov
xor
push
outsl
shlb
cs
cwtl
gs
sub
gs
sbb
dec
and
pop
js
nop
dec
insb
or
icebp
jmp
adc
mov
vmread
add
adc
test
lods
push
inc
arpl
and
sub
std
stos
mov
jne
and
push
mov
clc
dec
xchg
popl
push
jecxz
inc
ret
adc
or
rclb
leave
mov
adc
cltd
add
push
rorl
lock
outsb
xor
in
sti
pop
aam
jno
dec
sub
outsl
push
cwtl
mov
imul
aad
cmp
repz
ja
fnstenv
mov
fstps
lret
or
scas
sbb
xor
pop
xchg
into
ret
fwait
test
pop
push
sbb
dec
or
pusha
inc
insb
xchg
mov
lahf
in
jnp
xchg
mov
pcmpgtw
push
scas
in
imul
test
xchg
cmp
imul
shll
and
roll
push
flds
mov
add
lret
pop
inc
repnz
adcl
xorl
xor
push
subb
mov
movsl
xchg
cmp
icebp
aaa
jae,pn
enter
jae
mov
xchg
jbe
xchg
pop
push
pop
jb
mov
and
adc
xor
fdivrp
sarl
adc
pusha
or
and
mov
rclb
fldl
inc
jne
sub
mov
cmp
int
hlt
sbb
roll
shll
in
xchg
or
mov
xchg
xchg
xor
mov
aam
inc
sbb
inc
mov
dec
in
mov
jmp
fisubrl
add
adc
fnstcw
cltd
sahf
std
mov
cmp
sub
push
mov
hlt
test
pop
adc
int3
xor
inc
pop
sti
inc
rol
or
nop
adc
ja
lea
and
rclb
dec
push
fsubrs
adc
stc
movb
mov
push
push
adc
dec
mov
cmp
cmp
lods
jmp
out
lret
ljmp
jecxz
mov
mov
push
aaa
xor
lcall
leave
test
sub
mov
adcl
shrl
cmp
and
mov
push
push
test
add
mov
jno
xchg
inc
push
add
pop
push
mov
mov
xchg
mov
pushf
jae
mov
rcrl
fucomi
lods
xchg
sub
sbb
ljmp
pop
leave
lods
loop
test
es
adc
or
lahf
loop
inc
insb
dec
mulb
jp
ljmp
cmp
imulb
pop
cmp
xor
ss
test
mov
cmp
mov
pop
xchg
jbe
ss
mov
fdivr
or
xchg
fstpt
int
test
mov
mov
or
and
les
ret
or
cmp
mov
iret
jae
aam
cltd
inc
jge
lret
lahf
cmp
sbb
ret
ss
shlb
dec
test
dec
xchg
jb
mov
inc
fsts
jae
dec
in
test
dec
xchg
orl
cmp
das
popa
leave
add
mov
push
call
lahf
lods
xchg
mov
lret
dec
mov
arpl
add
sarl
cltd
pop
and
mov
in
pop
add
stos
pop
sti
mov
inc
mov
adcb
aas
sbb
sti
xchg
push
add
lods
jg
mov
xchg
push
pop
and
aas
out
pusha
inc
lahf
or
test
out
subl
lahf
daa
xor
data16
pop
loope
mov
in
clc
or
movsl
and
loop
hlt
mov
or
and
insb
and
mov
inc
shrl
mov
ds
in
and
push
out
outsb
aas
bound
jns
push
enter
nop
sarb
cmp
adc
pop
xlat
hlt
inc
pushf
fidivs
and
dec
pushf
lods
lock
and
cli
xchg
iret
js
fists
jge
add
mov
mov
push
inc
xchg
xchg
xchg
xchg
iret
aaa
pop
dec
iret
lahf
and
cmp
push
call
negl
jae
outsl
das
jl
xchg
and
mov
fwait
iret
sbb
stos
fstps
xor
mov
sub
out
lcall
dec
add
pop
in
xor
pop
ds
mov
xchg
out
rorb
sbb
inc
pusha
test
pop
iret
mov
or
mov
xchg
out
incl
je
sub
pushf
call
jo
les
mov
repz
sub
xor
stos
outsb
in
out
lret
bound
inc
adc
dec
stos
inc
cmpsl
aas
aad
push
lahf
xchg
and
xchg
leave
adc
addl
push
lods
add
imul
psrad
fiaddl
std
mov
mov
dec
pusha
adc
and
dec
dec
popf
loopne
mov
add
addr16
dec
fsubs
cltd
test
sub
jle
mov
popa
in
mov
rol
cs
mov
or
jb
push
cltd
push
sti
and
sub
pop
jbe
jp
mov
je
add
xlat
mov
push
aad
fcoml
mov
lret
lret
scas
xorl
daa
gs
daa
imul
push
pop
push
sub
lea
lret
inc
inc
lock
fcmovb
lods
mov
movsb
cld
test
push
inc
out
shrl
mov
int3
xchg
lds
loopne
int3
mov
pop
std
addr16
ret
mov
lods
outsl
lret
dec
cmpsb
aam
ret
addr16
loop
sub
adc
daa
mov
imul
mov
and
cmc
mov
push
rolb
sbb
cmp
loopne
nop
adc
xchg
dec
sahf
nop
loope
jns
std
cmpsb
js
sbb
fistpll
out
jmp
fadds
pop
mov
daa
fisttpll
cmpsb
jecxz
pushl
cld
movsb
jmp
adc
and
inc
div
loopne
add
inc
les
test
ja
push
mov
xor
cmp
and
lcall
push
jo
ja
adc
repz
sarb
ja
xor
mov
out
push
sti
mov
xchg
pop
imul
cmc
test
cwtl
ret
cli
xorb
sahf
jg
mov
test
mov
jns
lods
pop
add
stos
cwtl
ja
outsl
imul
pushf
push
int3
mov
imul
fwait
ds
jge
aas
xlat
sahf
popf
mov
and
mov
push
mov
mov
pop
add
gs
roll
sti
out
cmp
mov
repz
dec
sub
rolb
jmp
mov
ret
sbb
xor
xchg
shl
push
jo
test
mov
cmp
int
jo
sub
lock
out
jmp
and
out
bound
cmp
xor
test
bound
mov
cmpsl
testl
jg
xor
addr16
dec
push
sti
bnd
out
rorb
pop
xchg
loopne
nop
push
aaa
test
lods
scas
inc
shrl
inc
icebp
les
xlat
into
or
push
and
dec
mov
les
jo
cmp
push
popf
or
rcl
dec
inc
and
sub
jbe
ret
je
sub
mov
mov
or
xchg
xor
dec
jb
in
mov
add
ret
jb
inc
jmp
mov
daa
adc
int3
xor
fidivrl
incb
aas
inc
sub
cmp
aaa
sub
sub
push
xor
lea
push
mov
lcall
loopne
je,pt
or
mov
mov
push
push
js
jg
std
outsl
stos
adc
push
sub
outsb
rorl
sahf
in
es
mov
popf
movsb
sbb
lock
mov
dec
es
sbb
mov
je
cmpsb
fdivrs
xchg
jp
and
xlat
pop
aaa
sbb
pop
daa
and
lret
jge
loope
add
les
fwait
aaa
rcpps
hlt
leave
sbbb
test
mov
add
pop
or
bound
jg
or
jp
jg
dec
fimull
mov
xchg
push
mov
out
leave
jmp
mov
xor
fsubrl
aaa
stc
jg
push
movsb
xor
dec
mov
call
scas
js
adc
lea
testl
aas
cmp
jno
inc
data16
inc
push
mov
dec
xchg
rclb
movb
sub
inc
pop
mov
ret
push
pop
int3
icebp
push
xor
xor
jmp
loop
xchg
mov
add
dec
push
sti
lahf
insl
lret
stos
jnp
lock
rcr
pop
insb
jle
cltd
imul
shrb
cmp
dec
push
cmpsb
loope
pop
fcoms
add
and
push
ror
sbbl
jp
filds
jg
sbb
dec
ret
pusha
in
sbb
jmp
aaa
cmp
sti
fs
cmpl
mov
jbe
fs
add
mov
push
push
cmp
rolb
sarl
out
mov
fidivrl
aad
jg
sar
fisttpl
lret
jg
mov
jb
fistpl
repz
mov
add
das
fstpt
repz
std
inc
call
test
or
out
add
add
imul
xchg
pop
mov
cmpsb
out
sahf
adc
pop
push
inc
push
mov
xchg
xchg
mov
or
pusha
mov
repnz
pushf
xor
sub
popa
and
enter
fisttpll
lret
stos
xor
adc
mov
dec
xor
aam
jnp
aam
push
out
fistps
in
pop
mov
rclb
aas
outsl
xchg
or
mov
cvttps2pi
sub
lret
into
subl
jne
mov
sub
mov
and
std
pop
xor
sub
popa
pop
jp
ljmp
mov
cmp
movsl
in
jge
jns
int
jb
rcrl
int3
or
jp
subb
pusha
lods
or
cmpsb
mov
fisubs
dec
push
shrb
icebp
push
std
pop
cmc
dec
fwait
jo
jae
imul
insb
fs
fidivrs
es
mulb
cmpl
dec
mov
push
loop
sbb
jecxz
jle
cs
sub
mov
rsm
lods
add
jne
bound
js
adc
iret
test
or
sub
cltd
cmp
in
lods
sbb
sahf
ss
inc
jbe
pop
sub
pushf
mov
lret
xor
jp
cmpsl
and
adc
push
sub
sbb
pop
insb
out
xchg
cmp
adc
mov
sub
push
shl
add
mov
aad
or
rol
ja
jmp
pop
in
mov
popa
je
xchg
fwait
jge
fiaddl
lods
xor
stos
retw
movsl
mov
aaa
pop
shlb
sub
pop
sub
movsl
jnp
insl
cli
insl
pop
sub
mov
repz
sbb
lods
out
cmp
das
out
hlt
xor
pop
jnp
incb
add
push
sbb
sub
adc
loopne
stos
pop
sub
mov
ret
sub
dec
cs
mov
sbb
js
lock
mov
push
jge
xor
jge
popf
inc
xor
in
es
dec
push
negb
cld
std
dec
ja
ljmp
push
mov
xor
jmp
jns
in
sub
orl
xchg
pop
imul
mov
mov
das
or
and
mov
push
mov
icebp
pop
popf
add
sub
std
fstpl
adc
loope
or
push
out
jg
sub
call
cmpsl
xchg
pop
mov
fildl
cmpsb
out
cld
dec
pop
mov
jecxz
cld
dec
xchg
push
inc
ret
pop
cli
dec
mov
sub
push
push
lods
xchg
inc
mov
les
hlt
push
add
mov
rcll
int
mov
inc
adc
sbb
ljmp
mov
xor
mov
pop
mov
inc
fcomp
mov
into
sbb
popa
adc
inc
jae
inc
cmp
insl
les
xchg
int
or
jo
scas
push
xchg
outsl
mov
into
fisttpll
loop
xor
dec
and
jb
loopne
fiadds
or
push
jno
jle
dec
ret
outsb
fs
push
clc
cwtl
daa
out
jmp
push
xchg
jg
mov
sub
and
add
cmpsl
in
aad
lods
ds
iret
or
lock
or
push
test
cmpsl
add
fadds
cmp
push
push
cltd
je
dec
cmpsb
sbb
sbb
inc
cltd
mov
mov
mov
add
jns
shrb
push
pop
dec
int3
bound
lcall
outsl
pop
in
andb
adc
mov
pop
or
pop
fsubr
in
dec
jp
ja
xchg
push
test
sbb
loopne
mov
test
stos
sub
lahf
xor
sbb
fwait
or
scas
sub
loope
ds
jne
push
add
pop
enter
sti
aam
and
jg
call
xchg
fidivl
inc
aas
inc
mov
in
xchg
dec
lock
in
daa
lahf
roll
jmp
mov
dec
cmp
hlt
aad
stos
lcall
out
push
pop
stos
cwtl
sbb
hlt
lahf
inc
mov
fld
pmaddwd
cmp
sti
add
mov
xor
cmp
rcrb
and
roll
inc
iret
aas
mov
int3
xor
mov
sbb
pusha
fists
popf
sahf
inc
cli
iret
mov
shlb
xchg
scas
fs
repnz
outsb
pop
add
jge
sub
sbb
movsl
pop
add
jno
mov
mov
aaa
sub
loope
xor
push
nop
dec
adc
lods
push
scas
loope
out
adc
fs
pushf
es
fwait
sub
cmpsb
xchg
repz
push
pop
leave
loopne
sarl
inc
pop
aad
popa
test
pop
xchg
xlat
pop
mov
pop
pushf
out
mov
xchg
hlt
loope
sub
stos
loop
and
sti
aam
ja
cwtl
dec
in
fisttpll
or
sub
aas
xchg
adc
movsb
pop
shl
shll
jg
movsl
jmp
jmp
fisubs
int
sub
push
cmc
pop
ret
mov
js
jne
dec
stos
add
jmp
cltd
xor
jo
pop
push
xchg
cmp
lods
pop
dec
xchg
mov
pop
add
push
fisttpl
inc
les
adc
push
pop
jle
imul
jmp
push
ljmp
mov
in
xorb
outsl
sub
cmp
ljmp
sub
fwait
ss
lret
lret
push
and
or
cmp
test
xchg
lock
addr16
mov
cmpsl
int
fwait
mov
mov
jmp
sbbl
xchg
xor
push
out
aam
sub
popf
out
repz
clc
push
in
add
shlb
pop
fmuls
mov
sbb
lcall
js
pop
pop
imull
jge
jo
inc
fcmove
cltd
insl
pop
lea
outsl
or
std
jmp
std
push
int
inc
std
es
rcrl
or
xor
xchg
stos
lcall
or
or
add
lods
mov
and
mov
inc
popa
out
ljmp
in
sub
push
mov
aam
push
xchg
push
sbb
mov
loop
stos
inc
push
mov
shlb
mov
pusha
xchg
loopne
sahf
lret
shll
sbb
pop
jle
shll
popl
dec
push
pop
jbe
repz
push
test
mov
and
pop
fwait
aad
cld
sbb
mov
ret
scas
repnz
fwait
jl
sub
in
xor
data16
ss
and
sub
jg
clc
sahf
jmp
popa
mov
repnz
cli
aam
mov
sti
stos
push
sub
mov
xchg
inc
xchg
mov
lock
lods
aam
sub
call
bound
and
xor
hlt
int3
and
sub
lock
ret
out
sbb
and
inc
pop
fndisi(8087
out
push
test
sbb
rcrb
jg
outsl
lds
xor
dec
mov
insl
sbb
testl
je
repz
jne
fucom
xchg
dec
jae
xchg
and
lret
gs
cld
pop
daa
sbb
jle
ljmp
orl
in
xlat
xor
aam
in
jl
lahf
xchg
or
aam
push
cmp
fwait
call
sarl
adc
rcrl
popa
jmp
adc
aas
es
loope
and
fbstp
fisttps
inc
mov
dec
out
in
push
ret
popa
lds
jne
test
movsl
addr16
mov
sahf
lcall
ds
mov
ss
mov
mov
pop
or
fnstenv
mov
add
ret
mov
pop
push
mov
pushf
xchg
mov
fdivs
fidivl
mov
adc
xchg
lret
mov
mov
subl
dec
inc
fstpt
add
sahf
push
enter
ret
clc
cmc
and
scas
loop
xor
ficomps
sti
lret
sti
dec
sti
cli
ss
sbb
cwtl
inc
popf
out
leave
ds
xchg
rol
stos
movsl
xor
jns
jp
push
sub
ficoms
cmp
scas
pop
and
dec
pop
add
in
das
scas
mov
insb
movsl
repnz
xor
add
or
std
or
lret
dec
shll
xchg
shll
xor
loopne
pop
pusha
in
cmp
dec
adc
fnstcw
fstl
xchg
in
mov
andb
inc
lcall
cld
lods
stos
cmp
mov
or
je
jecxz
int3
mov
xchg
pop
jno
cmp
xchg
adc
pop
xor
sti
lods
mov
cmp
test
in
mov
pop
in
adc
aam
jmp
sbb
mov
icebp
fcmovu
aam
push
xchg
rclb
icebp
das
adc
out
dec
push
rorb
and
int3
mov
dec
mov
sbb
jbe
xor
or
decb
imul
dec
imul
fs
pop
push
xor
xchg
js
sarl
dec
mov
out
jle
imul
xor
add
or
inc
cmp
mov
jne
sti
jno
subl
ja
mov
sbb
or
dec
push
cmp
adc
mov
add
xchg
push
scas
movsb
aad
pop
loop
push
into
push
clc
pop
int3
or
mov
cmp
xchg
mov
andb
repnz
sub
add
or
stc
div
lock
sti
ja
ret
cli
into
mov
stos
and
scas
hlt
iret
ficomps
shll
mov
sub
mov
push
sub
and
andb
lret
cmpsb
xchg
leave
mov
xorl
cmpb
mov
and
cli
push
sahf
cmp
stos
mov
jne
sbb
into
or
jnp
inc
inc
dec
pop
add
pusha
into
popf
ja
xlat
jne
inc
push
test
lods
cwtl
repnz
fsubs
js
cmp
adc
les
gs
mov
xor
lret
mov
lds
jg
dec
push
inc
mov
int3
test
cli
imulb
add
lds
inc
and
ss
fdivr
dec
mov
mov
iret
lock
pop
push
cmpsl
sub
pop
out
or
lret
pushl
inc
test
or
call
jbe
add
xor
sub
fdivr
adcl
popa
jne
or
sbb
or
mov
and
dec
icebp
cmpl
cmpsl
pop
dec
adc
jnp
sbb
stos
stos
stos
lcall
add
cmpsb
loop
or
xchg
pop
add
pusha
jmp
add
mov
inc
cmp
rcr
push
repz
aaa
cmpsb
scas
cmpsl
xchg
xor
jns
fdivrl
lds
fidivs
dec
je,pt
adc
pop
insl
mov
sub
push
jmp
daa
inc
dec
mov
imulb
fstpl
sub
jbe
mov
loop
lock
cmp
in
cs
xchg
cmp
nop
into
out
into
xchg
int3
faddp
and
push
ficoms
lret
adc
xor
inc
stos
jne
rcll
add
adc
lret
push
xor
jp
mov
inc
scas
xchg
lret
lods
pop
jecxz
mov
cwtl
pop
xchg
pop
mov
es
lahf
cmc
mov
icebp
lds
xchg
xlat
mov
int3
push
mov
test
xchg
movsb
aam
adc
mov
dec
mov
pop
dec
in
les
cmp
test
sbb
mov
mov
push
inc
sbb
ss
adc
push
inc
or
scas
fwait
es
or
dec
fucomip
js
inc
cmc
sbb
mov
dec
ds
sub
stos
push
jp
add
or
mov
lock
outsb
and
out
dec
jno
sbb
adc
fisubl
stos
jnp
and
in
lcall
lods
cwtl
stc
loope
dec
dec
mov
fdivr
rcr
push
cmp
in
xor
call
lcall
mov
rorb
push
std
add
ret
pusha
pop
add
leave
push
inc
inc
sub
ret
push
push
or
rorb
mov
mov
mov
and
pop
lret
daa
jg
aad
dec
ja
sarb
cmp
jge
negb
aad
testb
shl
testb
aas
scas
int3
push
pop
arpl
add
inc
rorl
sbb
mov
roll
inc
mov
das
aaa
sbb
mov
jp
or
push
sub
xor
mov
mov
out
mov
pop
pop
push
cmp
icebp
sub
jbe
cltd
cmp
scas
pusha
push
jp
fcompl
add
push
in
stos
js
call
in
or
cmp
and
push
outsb
notl
adc
xor
add
jg
int
test
popf
test
sub
loope
push
mov
or
pop
pop
test
dec
fnsave
nop
shlb
xor
cwtl
shll
fstpl
sarl
sbb
dec
or
jp
mov
push
outsl
jnp
ret
push
jg
call
and
rcrl
cs
sub
shrl
ss
mov
sub
add
into
lret
push
pushf
adcb
or
jae
cmp
sbb
stc
lret
xor
xor
outsl
and
es
jo
enter
jmp
and
rclb
sbb
mov
or
mov
mov
push
ja
mov
fmulp
mov
mov
push
enter
dec
mov
mov
mov
inc
mov
mov
sub
mov
or
xor
daa
leave
arpl
outsl
pop
cmp
cmc
test
sub
out
jae
lock
push
xorb
movsl
sub
sub
test
fldl
jecxz
inc
insb
cmp
outsb
lods
mov
insb
int3
lahf
push
stc
cmp
fimuls
cmp
mov
fbstp
sub
xchg
pop
lret
rclb
cmp
adc
sub
test
into
cli
add
movsb
mov
arpl
mov
jmp
add
mov
inc
js
in
fisubrs
mov
push
or
mov
in
dec
xchg
lea
push
mov
inc
ss
call
mov
and
stos
cmp
adc
mov
sbb
rcrl
push
cmp
jbe
cmp
adc
pushf
push
lcall
inc
subl
inc
mov
pop
xor
outsl
fldln2
mov
fisttps
adc
iret
push
push
add
sahf
test
roll
rorb
movsl
cmp
out
push
stc
cmp
frstor
jg
and
aam
mov
mov
hlt
aaa
push
mov
mov
loopne
mov
loope
xchg
dec
lods
les
dec
add
outsb
pop
pop
fisttpl
mov
fmull
scas
fwait
les
dec
imul
lret
mov
mov
xor
sub
cmp
sbb
sti
fmuls
sbb
test
sti
icebp
mov
push
lahf
insl
mov
sbb
lret
adc
mov
dec
imul
out
popf
dec
idivb
sub
movsb
cmp
sarb
in
sti
mov
je
mov
pop
jle
add
clc
cmp
mov
iret
jle
repnz
loope
xchg
rep
add
xchg
sub
sub
xchg
jl,pn
sbb
sbb
push
cmpl
call
stos
cmp
lret
inc
xor
mov
xor
test
subl
mov
gs
jns
mov
lods
js
mov
xchg
inc
lcall
pop
pop
test
jp
lds
pop
add
jmp
inc
fdivrs
mov
outsl
adc
aad
add
inc
ret
cwtl
repz
inc
insb
add
mov
fs
loopne
iret
sbb
push
data16
sub
cmp
mov
jo
and
sub
call
or
jns
ja
push
jnp
popa
dec
xlat
loop
lds
mov
push
or
mov
jnp
mov
stos
xchg
jmp
or
push
and
fistl
test
xor
adc
mov
pop
in
ficoml
andl
sub
fcoml
sub
push
dec
test
sahf
xchg
xor
add
and
ret
push
fisubrs
roll
xchg
sbb
mov
mov
aam
pusha
into
js
bound
cs
mov
sbb
xor
xor
add
incl
fucomip
xor
mov
xor
test
lret
test
inc
ret
adc
adc
je
clc
mov
test
ret
fcomip
sub
lcall
cmp
cwtl
mov
inc
outsb
mov
mov
push
out
call
sub
fwait
mov
sub
movsb
xor
push
test
jae
pop
pmulhuw
mov
push
mov
xchg
push
mov
rcrl
mov
dec
popa
inc
or
inc
push
xchg
int
xchg
cmp
lcall
mov
xor
out
mov
cltd
push
dec
mov
in
push
sti
mov
fisubrs
sub
std
dec
popf
ret
scas
mov
jmp
dec
sarb
lret
das
cmp
or
lods
in
repnz
dec
sahf
adc
sbb
repnz
imul
je
mov
cs
push
push
pop
xor
dec
in
rorb
call
sar
popa
and
add
insb
sbb
mov
add
fmull
jno
out
lds
mov
and
mov
cmpsl
xchg
jb
loopne
adc
inc
xchg
rcll
add
pusha
adc
shlb
inc
push
js
mov
pushf
fldl
stc
sbb
pop
bound
popa
dec
test
push
mov
or
sbb
xor
loop
fmulp
push
cmp
pusha
lea
gs
or
xor
repnz
mov
loopne
rorl
mov
pushf
mov
imul
mov
xchg
shlb
sub
lods
pop
xchg
loopne
and
cmc
in
fdiv
jno
in
jae
and
sub
rolb
test
test
jecxz
mov
leave
push
popa
jbe
js
sub
cmpsl
inc
dec
dec
push
inc
repz
pop
or
fwait
inc
insl
ficompl
cmp
push
in
jmp
dec
stos
imul
xchg
lret
jae
cmpsb
fsubrs
bound
sti
outsl
in
mov
hlt
repz
add
aam
mov
add
repnz
jae
rcrl
mov
ljmp
addl
lock
adc
mov
mov
bnd
xlat
inc
xchg
lcall
jae
xor
sbb
clc
arpl
fs
aad
scas
std
lods
test
pop
sbb
lock
xchg
shrb
pop
jmp
pop
add
sbb
jge
xchg
sub
jg
sbb
sub
push
and
insl
sub
in
mov
cs
sbb
jae
and
lahf
sub
outsb
stos
push
dec
loop
mov
mov
mov
leave
nop
push
pop
insb
test
pop
bnd
mov
ja
sbb
xchg
jge
adc
ss
push
pop
bound
xchg
mov
mov
lea
mov
push
inc
lds
mov
shll
inc
nop
dec
sbbb
inc
lock
insb
lret
mov
iret
shlb
pusha
inc
cmp
in
mov
mov
cmc
sbb
xchg
call
jmp
adc
mov
ljmp
adc
sbb
add
xchg
dec
mov
cmp
sub
mov
lahf
add
cltd
mov
test
push
and
and
pushl
les
push
jne
push
in
icebp
jp
inc
aaa
push
add
std
push
pop
and
push
or
xchg
fldenv
dec
cltd
cld
inc
add
imul
mov
jae
bound
cmp
into
dec
popl
mov
cmp
idivb
inc
and
js
push
dec
into
xchg
pop
insl
push
dec
out
pop
or
xchg
rcr
add
scas
push
test
movsb
xchg
fimuls
mov
jno
xchg
push
or
pshufw
mov
ds
mov
call
es
aas
push
mov
push
jnp
lret
mov
stc
and
sbb
add
pusha
jae
dec
push
pop
leave
lret
hlt
sbb
sti
ficomps
and
movsb
dec
sub
in
mov
mov
out
push
add
jle
in
push
mov
push
xchg
repnz
cmpb
and
pushl
pushf
stos
dec
out
neg
out
fmul
out
loopne
movsl
mov
jns
fs
subl
insb
mov
pop
jb
scas
push
enter
mov
nop
pop
inc
inc
mov
int
iret
adc
rclb
mov
nop
in
xchg
pop
ljmp
scas
lret
std
inc
je
pop
mov
ret
sub
mov
and
aas
cli
xor
lret
test
in
jp
mov
hlt
mov
and
add
inc
test
sub
jmp
and
in
pop
and
adc
stos
xor
je
mov
xchg
inc
and
test
sub
sbb
int
clc
mov
mov
dec
jo
mov
jecxz
push
sti
leave
sbb
fyl2xp1
sbb
popf
or
fnstsw
fstl
pop
sbb
mov
ffreep
in
ror
sbb
sbb
inc
nop
cmp
jle
daa
mov
scas
insl
push
cwtl
xchg
cmp
jg
pop
add
das
into
hlt
xor
pusha
loopne
cwtl
xchg
fisubrl
push
loope
sbb
insb
xorl
and
cltd
mov
stos
and
or
lcall
sbb
mov
or
cmp
xchg
adc
and
mov
dec
js
out
je
notb
jecxz
imul
scas
sarb
rcr
int3
dec
loopne
je
dec
inc
imul
or
int3
test
sub
lock
pop
sbb
imul
call
and
arpl
popa
rcrb
sbb
mov
push
and
stos
sbb
xchg
es
jle
enter
stos
fdivrs
test
sbb
cmp
rcrl
rcll
out
sahf
cmovge
in
ljmp
pop
ljmp
pop
sub
pop
je
push
movsb
call
es
mov
icebp
add
push
stos
mov
jo
or
sbb
xor
adc
cmp
andb
cmp
mov
pop
sbb
push
into
bound
push
xchg
push
aas
push
xor
mov
jbe
iret
aad
mov
lock
outsl
aad
aam
push
jns
icebp
out
mov
xchg
inc
test
in
mov
loopne
imul
arpl
cld
addr16
movsl
push
sti
cmp
ja
mov
fbld
sbb
jge
inc
push
push
or
push
inc
fcmove
fs
test
fsubr
ret
repz
dec
lods
nop
fildl
lret
inc
push
pusha
cmp
movsb
scas
pop
sub
popf
jmp
stc
cmp
sahf
pop
and
sbb
cmp
lods
add
out
xchg
psubb
hlt
fiadds
cmc
mov
cli
push
xchg
test
mov
jle
and
adc
icebp
stc
iret
jge
fisubrl
test
add
xor
and
imul
push
pop
fbstp
test
jo
cmpsb
movsb
out
jne
jmp
sub
mov
imul
and
and
gs
or
faddl
lea
cld
test
inc
call
cltd
xlat
xor
mov
shrd
pop
outsl
sbb
xchg
in
sbb
pop
shll
inc
jl
dec
mov
adc
jb
test
addb
mov
mov
mov
out
cltd
pop
out
mov
pop
or
dec
scas
cmp
push
out
mov
mov
jo
mov
cmc
in
jle
lret
dec
rclb
mov
ret
mov
out
and
inc
jbe
jmp
and
dec
fistl
inc
mov
adc
cli
mov
idiv
je
and
push
dec
ret
xchg
sub
pop
xchg
testl
pushf
jecxz
add
mov
inc
int3
sbb
aam
mov
and
or
shll
xchg
pop
pop
fwait
ja
adc
inc
pop
mov
xor
lcall
insl
adc
jmp
fists
aas
jecxz
xor
or
in
push
add
lods
sub
rorl
push
xchg
lret
test
std
xchg
lock
push
fld
lock
mov
popa
sbb
adc
cmpsb
icebp
cmp
adc
repz
mov
shlb
inc
outsb
xchg
iret
xchg
cs
or
mov
add
fmuls
mov
sbb
sbbl
dec
xchg
sub
orl
or
ficompl
ljmp
js
lea
sbb
jne
sub
add
je
bound
sarb
imul
out
movsb
test
mov
cmp
cmpsl
test
pop
out
aad
enter
sbbb
shl
sti
pushf
aas
jle
cmc
daa
pop
pop
adc
push
je
pop
fisttps
imul
mov
shlb
movsb
pop
shrb
inc
aaa
mov
fistpl
xor
imul
cs
mov
iret
lods
bswap
mov
push
cmp
dec
cmpsl
pop
pop
xchg
js
test
fldlg2
icebp
cmp
mov
in
iret
addr16
lea
scas
shl
inc
mov
pop
xchg
jae
filds
mov
mov
push
sbb
push
les
mov
sbb
lds
inc
cs
and
lret
adc
mov
cli
int
movsl
mov
int
idiv
sahf
aad
inc
stc
das
fdivrp
mov
lock
jl
test
mov
rclb
lods
add
inc
enter
dec
adc
cmp
pop
jge
xor
pusha
xlat
or
jns
loope
rcr
movhps
push
leave
sbb
lret
in
insb
or
jo
movsb
clc
scas
cmp
pusha
adc
mov
subl
rcrl
mov
popf
sbb
daa
cs
mov
jmp
stc
jle
not
jl
jl
scas
fwait
jle
jns
xor
push
sub
sarb
mov
dec
movb
add
jb
add
sub
mov
jg
dec
outsb
pop
xorb
hlt
and
pop
into
and
aam
add
pop
mov
push
cmp
sub
call
push
loope
or
xchg
push
fdivl
ret
pop
test
jb
pop
mov
adcl
and
fistps
pop
xor
mov
pop
dec
lea
pop
sahf
popa
jecxz
xchg
pushf
cmp
repz
sub
aaa
push
xor
neg
test
dec
pop
cmp
xor
pop
jp
lcall
nop
loop
fmul
cmpsl
in
xor
push
mov
imul
out
dec
fisttps
popf
sub
cmp
xor
les
pusha
add
fidivrs
xor
mov
cmpsb
adc
bound
leave
es
sub
js
inc
sbb
sbb
andb
loopne
mov
sub
ss
mov
dec
xchg
mov
or
dec
clc
into
and
lods
mov
sbb
int
mov
xor
xchg
xchg
dec
popf
xor
mov
out
pusha
or
sub
fsubrl
xorl
xchg
sbb
fbld
dec
lods
iret
pop
xchg
cs
testl
in
and
and
insl
mov
xchg
shll
xchg
cld
daa
clc
cwtl
jg
and
clc
jl
pop
imul
fsts
fisubrl
mov
insb
ljmp
mov
cmpsl
mov
cmc
pop
add
mov
adc
cmp
adc
nop
sbb
pusha
xchg
sbb
add
jnp
mov
jnp
sub
xchg
lcall
test
cmp
insb
scas
jmp
ds
cli
push
jmp
xor
xchg
sbb
clc
and
push
imul
xor
mov
lcall
dec
rorb
add
addr16
adc
fidivrl
imul
arpl
push
pop
push
cli
push
test
gs
push
mov
insl
arpl
fistpl
mov
gs
nop
push
adc
out
pop
mov
shr
sbb
cmp
xlat
push
push
dec
clc
push
mov
test
cmp
fsubs
xchg
xor
in
imul
int
xchg
ja
ds
sbb
cmp
pop
jbe
fsubs
subb
leavew
and
cmp
push
popa
mov
push
adc
mov
cmc
in
lcall
push
sbb
push
jb
xchg
negb
ljmp
mov
jno
js
movsb
stos
pop
jo
or
mov
sbb
popl
push
inc
cmp
fimull
jge
xor
test
shrl
xor
sub
rcrl
add
out
enter
pushf
lea
add
push
call
je
xchg
jb
outsb
popf
stc
xor
test
add
jg
lods
mov
dec
jmp
mov
loopne
or
inc
inc
add
cmpsb
jl
jl
mov
or
lea
sbb
cmp
int3
mov
orb
into
ss
ja
nop
dec
mov
jecxz
push
enter
mov
cmp
and
xchg
movl
dec
fistpll
aam
xlat
les
imul
mov
xor
cmp
pop
repnz
adc
sub
cmp
sub
nop
xchg
inc
mov
rcrb
aad
push
xor
push
cmpsl
nop
push
mov
jg
fisttpll
push
inc
test
imul
push
lock
add
xchg
rorl
push
lcall
lcall
dec
xor
lahf
out
or
or
jb
or
shl
push
popa
int
test
clc
sbb
inc
sub
xor
out
sahf
sbb
inc
dec
stc
cli
in
rorl
sahf
mov
xlat
es
xor
adc
jbe
jbe
or
rcll
loop
sbb
das
adc
fs
iret
mov
andb
out
pop
lock
jo
jbe
pop
push
dec
std
in
std
repnz
pop
repnz
jns
mov
cmpsl
inc
scas
xchg
stos
dec
mov
mul
cmpsb
shlb
xorl
add
inc
push
xchg
pop
mov
adc
mov
push
mov
ret
dec
xchg
into
lar
out
fistpll
xlat
sub
xchg
shlb
jb
add
arpl
cld
mov
push
insl
mov
mov
cld
adc
fs
faddl
ss
inc
push
xchg
scas
lock
fnstenv
xor
pop
mov
push
loop
cmp
or
lret
adc
sahf
mov
adc
dec
cwtl
subb
movsl
mov
sbbb
repnz
xorl
xor
or
hlt
mov
mov
lret
ficomps
outsb
inc
pop
ja
and
add
or
lcall
cmp
cmpsl
mov
xchg
insl
push
mov
sarb
sub
bound
mov
fdivr
pop
sub
test
divl
ss
rclb
imul
fwait
dec
sahf
dec
xchg
jo
lods
lcall
into
pop
in
fwait
mov
pop
or
popa
sbb
xlat
out
mov
pop
jp
ret
cmpb
fistpl
add
or
ljmp
loopne
adc
xchg
xchg
ret
imul
in
add
in
repnz
scas
test
out
pop
adc
xor
xchg
fbld
leave
or
lods
lea
sbb
mov
test
dec
aad
cmp
xlat
in
dec
xlat
mov
push
mov
incb
sbb
pop
je
jmp
cltd
jae
in
aas
gs
je
scas
or
out
imul
push
lods
subl
lods
lahf
mov
ss
test
lea
out
mov
loopne
push
mov
out
jge
jae
xor
mov
out
rcl
and
insb
scas
mov
push
in
movl
cmp
out
cmp
jno
adcl
xchg
scas
aad
arpl
xchg
xor
mov
mov
cmc
movsb
xchg
jcxz
rcl
and
enter
sbb
mov
add
dec
pop
sub
pop
in
bound
leave
dec
sbb
lods
lret
and
push
into
push
adc
lea
mov
fildl
cmp
pop
pop
fs
je
or
sbb
les
xchg
cmp
inc
cmp
es
lahf
jecxz
sti
movsl
or
dec
movsl
pop
lods
rcl
sarl
jns
or
arpl
ret
call
addl
gs
xor
jmp
adc
inc
mov
xlat
mov
scas
cmc
pushf
fldcw
mov
testl
jl
jo
mov
jg
push
mov
jae
fbld
sbb
das
xchg
mov
clc
inc
std
outsb
in
icebp
ret
pusha
int3
in
cmc
loop
sub
icebp
lcall
or
cmp
int3
lret
clc
xor
jmp
jbe
mov
into
adc
inc
aad
add
ds
jge
mov
jne
xchg
fstpl
lea
cmp
jg
mov
pop
mov
mov
push
jl
mov
push
sbb
jp
ficoml
fnstcw
jl
or
fidivs
mov
das
and
adc
jg
inc
cld
scas
jmp
sub
cmp
popf
fcomps
push
rorb
jbe
mov
dec
and
jne
lods
ds
and
inc
lea
dec
jnp
idivb
sahf
pushf
mov
xchg
sbb
mov
scas
fmull
fisttps
js
add
sbb
adc
push
arpl
xor
dec
jge
loopne
lds
add
fcmovne
push
in
aad
test
sbb
cmp
pop
cmpb
popa
movsb
jmp
and
pop
dec
mov
lahf
pop
decl
hlt
stos
dec
push
lahf
movsb
mov
mov
cmp
jb
and
mov
mov
nop
sub
mov
fstpl
insb
fcom
lahf
cmc
enter
dec
vmread
repnz
fisubrs
enter
pusha
xchg
ret
repz
incl
fsubs
pop
clc
mov
push
andb
cli
cli
les
mov
mov
mov
sub
js
lcall
add
inc
repnz
xchg
add
cmp
lcall
push
popa
xchg
ret
dec
xorl
add
sti
addl
xlat
mov
cmp
cld
mov
add
or
mov
jmp
lcall
mov
roll
sub
stc
pop
js
loop
mov
inc
andb
mov
cld
jo
je
xchg
cmp
push
jg
ja
xor
xor
cli
xchg
ret
and
push
repnz
mov
add
sbb
jmp
dec
lcall
jg
arpl
xor
jge
cs
jg
and
stc
and
mov
cmp
subb
cmp
out
mov
ljmp
js
das
test
mov
mov
and
pop
mov
ficoml
and
or
mov
ja
test
fwait
ret
js
loopne
testb
dec
int3
out
in
adc
inc
jo
push
xchg
fstpt
dec
outsb
wrmsr
push
cmpsb
cwtl
cmpsb
arpl
js
or
lods
ss
pop
dec
push
inc
idivl
mov
add
mov
jns
inc
ljmp
andb
lret
sub
daa
gs
add
lahf
adc
and
inc
jmp
sbb
pop
jb
shlb
pusha
push
mov
dec
out
lcall
cmp
adc
cmp
clc
mov
fiadds
or
xor
cmpsb
adc
jecxz
sub
int
sti
xor
iret
xor
sub
nop
adc
mov
das
jb
sbb
inc
sub
xor
ss
adc
ljmp
cli
sub
inc
int
lcall
mov
mov
inc
inc
inc
rcrb
add
sbb
stos
dec
cmp
cli
push
inc
jg
test
xor
cmp
push
and
inc
xchg
sub
movsb
mov
incl
mov
adc
ret
or
movsb
sbb
mov
cld
or
lock
push
inc
lods
add
mov
ljmp
add
mov
push
fildl
add
add
cmpsl
and
adc
insl
test
sbb
in
loop
mov
jg
dec
js
or
rorb
ljmp
lds
test
repz
mov
out
andl
sahf
loopne
mov
test
pusha
push
mov
sbb
popf
out
or
xchg
jge
add
add
or
bound
cld
lods
sub
mov
pushl
dec
and
addb
jmp
iret
pop
xchg
mov
ds
and
inc
bound
sbb
bound
xchg
ret
pop
pop
push
out
aad
rclb
mov
adc
incl
dec
shrb
inc
sub
mov
xchg
insl
test
adc
push
mov
jb
and
stos
jno
mov
lcall
fadd
jne
jmp
and
ljmp
dec
push
xor
stc
xor
xor
jg
or
scas
lods
jae
push
cli
cmp
enter
adc
je
cmpsl
js
xrelease
cmp
or
jl
fcmovnu
popa
repz
or
out
lock
push
jmp
mov
mov
enter
aas
mov
jmp
xchg
lcall
add
xchg
push
lods
loopne
js
dec
xchg
imul
pop
rclb
leave
push
push
addr16
sbb
inc
xchg
jmp
mov
test
mov
dec
add
pop
push
xchg
dec
jo
mov
bound
pushf
inc
cld
popf
inc
add
inc
and
nop
loopne
nop
xlat
sbb
cmp
and
out
and
xlat
mov
cltd
ret
adc
bound
cmp
push
cmp
inc
fiaddl
and
jne
sahf
imul
out
dec
scas
std
adc
mov
add
xor
lahf
and
mov
xchg
mov
jae
fcom
add
cmc
dec
inc
xchg
and
cmp
and
nop
in
test
ja
in
push
and
popf
pop
loope
xchg
push
mov
xchg
out
lods
push
pushf
cltd
and
dec
cmpsb
pop
mov
or
pop
jle
aam
fcmovnbe
pop
cltd
iret
mov
pop
xor
dec
mov
shlb
mov
enter
mov
inc
clc
mov
mov
or
lcall
scas
xlat
mov
int
push
sbb
mov
stc
xchg
insl
push
aad
mov
lcall
pusha
in
ja
jo
inc
push
popf
cmp
adc
repz
ljmp
mov
scas
xchg
in
jb
jmp
sbb
mov
mov
test
mov
test
mov
mov
std
fs
mov
inc
inc
adc
sub
ja
pop
andb
jbe
into
jo
fwait
sbb
inc
aaa
fisttps
decb
jno
mov
outsl
addl
pusha
ja
in
push
sbb
bound
jmp
push
jbe
int3
xor
jo
or
data16
inc
cmp
fwait
adc
jns
hlt
inc
mov
sbbl
xchg
popa
or
es
push
mov
add
jnp
insl
fs
mov
push
cmp
xchg
bound
xorl
or
js
xchg
inc
cmp
xor
repnz
out
daa
fidivrs
sbb
sub
or
xchg
stos
cwtl
or
jne
jl
fistl
mov
push
and
jg
xchg
mov
push
lahf
jl
outsl
mov
shll
jne
inc
imul
inc
push
xchg
pop
inc
insb
sbb
popa
push
add
out
and
dec
push
or
mov
mov
push
sbb
loope
mulb
mov
fildl
stos
loope
xchg
out
les
ficompl
sbb
pop
or
lcall
mov
mov
scas
inc
loopne
xchg
les
lcall
outsb
fidivrs
cmp
dec
inc
stc
lea
xchg
adc
mov
lret
daa
or
std
sarb
or
pshufw
ss
jns
mov
inc
and
lcall
or
mov
and
orb
popa
rol
in
jb
imul
xchg
mov
sub
xchg
dec
hlt
xor
rcrb
outsl
or
and
push
or
push
push
in
push
cli
mov
clc
nop
cmpsw
xchg
jo
adc
and
das
aas
adc
jno
sbb
cmp
mov
shll
in
xchg
fdivp
dec
adc
push
mov
test
sbb
pop
xchg
jb
sbb
mov
enter
xor
xchg
cmp
out
xchg
les
push
nop
pop
push
mov
push
cmp
cmc
xchg
or
lret
ja
jmp
cmp
or
mov
cmp
cld
cmpsb
jge
or
fildll
fnstcw
shr
mov
mov
and
movsl
pop
icebp
pop
mov
and
pop
sub
sahf
cmovne
sbb
add
pop
je
arpl
inc
mov
es
loope
ret
mov
daa
dec
stc
dec
pop
add
loope
inc
inc
adc
rolb
push
pop
mov
jl
es
es
hlt
cmc
imul
shlb
test
in
cmp
scas
xor
test
addr16
incl
mov
ljmp
xor
cmp
hlt
push
mov
in
pop
ret
call
and
mov
pop
mov
sbb
in
add
test
imul
dec
aaa
mov
pop
push
pop
cmp
pop
mov
cmpsb
mov
lea
rolb
fwait
cli
imul
movsb
ja
ljmp
daa
mov
jmp
push
fwait
inc
stos
int3
sub
mov
std
in
mov
mov
popa
push
mov
rorl
inc
inc
xchg
lea
into
mov
repnz
pop
fldl
sbb
sbb
cmp
stc
std
or
ljmp
test
lods
maxps
sub
ljmp
or
push
sbb
jns
pop
mov
iret
adc
insl
stc
enter
cli
ret
in
rcll
mov
lods
into
ja
popa
sub
scas
and
fbld
cmp
add
aam
inc
cld
movsb
into
and
pop
cmp
test
and
mov
mov
cmp
or
gs
sub
test
pop
mov
pop
jae
push
sub
jo
add
cwtl
cli
and
rcr
sub
sub
mov
flds
sub
mov
lea
pop
sbbb
int3
fcoms
popa
mov
jo
test
jns
sub
xor
and
mov
adc
fcompl
push
adc
ret
repz
sub
sti
push
sbb
mov
pop
test
pop
daa
jns
xchg
mov
cli
loopne
xchg
dec
mov
roll
push
xor
ljmp
or
dec
sbb
sbb
and
pop
scas
das
and
mov
ret
inc
clc
push
pop
push
insb
push
mov
pop
jbe
push
fstpt
pop
dec
adc
jnp
sti
mov
movsl
xor
adc
xchg
mov
xor
ret
mov
out
std
out
leave
add
jne
and
fnsave
lret
adc
sbb
sub
xchg
cwtl
cld
push
mov
in
lret
and
sbb
hlt
adc
lods
shll
or
xor
cmp
mov
push
lret
out
cmp
notl
dec
lret
std
sub
xlat
or
jo
push
lret
mov
lods
xchg
mov
movsb
or
ja
and
pop
or
imul
stc
dec
xchg
jb
inc
adc
bnd
pop
test
fisttpl
stos
sti
das
mov
ljmp
lods
movsl
push
cmpsl
daa
clc
or
sbb
jnp
jae
push
fwait
xor
repnz
xchg
gs
and
pop
or
xor
cltd
push
test
dec
leave
mov
sub
int3
out
pop
rcrb
lea
add
pop
add
mov
mov
sbb
leave
jno
bound
iret
scas
jnp
mov
mov
or
ret
xchg
lods
out
jl
xchg
outsl
push
xor
fcomp
shll
outsb
add
cmc
push
lret
fldenv
cmc
pop
mov
inc
mov
inc
inc
call
push
inc
cltd
aas
popf
or
pop
std
xchg
pop
inc
mov
xor
lret
push
fwait
lods
lds
push
dec
sub
fbstp
sub
and
pop
xchg
js
aam
lcall
fadds
mov
push
test
popa
outsl
iret
icebp
cmpsl
or
jno
cmova
je
mov
push
sub
call
repz
mov
int3
jg
adc
stos
cmp
push
cmc
push
jecxz
and
rol
rcl
out
dec
icebp
mov
mov
addb
push
xlat
lea
fmull
push
ja
and
mov
dec
xchg
xchg
sbb
push
fwait
in
and
icebp
add
sub
mov
cmp
mov
lret
mov
test
pop
lock
lods
outsl
imul
mov
mov
outsb
sub
imul
rolb
mov
mov
ffree
sbb
and
lcall
mov
stos
movsb
mov
and
test
pop
mov
sbb
jnp
adcb
xchg
inc
pushf
cwtl
xor
or
add
push
or
xchg
shrb
push
in
sti
mov
jl
cvttps2pi
mov
mov
mov
mov
lret
jae
subl
mov
sar
in
stc
sbbb
xchg
dec
ret
jle
call
les
hlt
clc
out
in
test
push
mov
cmp
cmp
cli
mov
mov
xchg
mov
outsb
and
dec
mov
inc
clc
lods
cmp
arpl
cmpl
inc
lret
mov
loopne
and
test
in
mov
jae
filds
adc
pop
sahf
cli
ljmp
rcr
dec
mov
push
mov
mov
leave
sti
dec
jnp
aaa
loope
inc
insl
sub
dec
les
ljmp
mov
xor
mov
cmp
das
cltd
inc
aas
sahf
xor
sahf
mov
test
jle
and
push
adc
push
xchg
xchg
test
std
jecxz
or
push
mov
xorb
cmp
ds
shrb
jno
add
dec
push
pusha
pushl
mov
and
adc
cmpsb
leave
movsl
in
sbb
ret
sbb
mov
sti
pusha
dec
mov
mov
push
push
std
aam
sbb
add
cmp
mov
xchg
sbb
jecxz
popf
mov
jmp
and
ljmp
test
push
testl
in
js
scas
mov
adc
cmc
or
jno
scas
call
ja
test
jmp
shll
outsb
cmp
cmp
movsb
and
int
cmp
int3
outsb
popa
test
cs
repnz
repnz
cli
nop
outsb
std
divl
into
lret
adc
pop
and
ljmp
mov
adc
dec
inc
clc
ss
pop
inc
push
pop
les
lods
mov
cmp
mov
cmpsl
sub
sub
mov
xchg
xchg
dec
es
and
xorl
mov
adc
inc
adc
fcomp
mov
jmp
mov
in
jnp
mov
mov
dec
popf
mov
jbe
ret
xchg
cmpsb
lea
mov
mov
icebp
pop
test
lea
add
arpl
mov
add
dec
cli
sbb
jne
jbe
stos
lock
loopne
pop
jbe
sbb
sbb
shl
pop
icebp
shlb
mov
adc
mov
mov
add
sub
xor
jmp
xchg
pop
sub
in
add
or
popa
or
xchg
enter
das
jle
mov
jle
sti
adcl
popf
cltd
inc
add
push
mov
cs
stc
ret
icebp
sub
inc
sbb
in
fsubs
int
fisubrl
loop
shlb
hlt
jno
jp
int
xor
jg
sbb
sahf
loope
cmp
lock
inc
push
ficompl
mov
inc
sub
mov
mov
loopne
lods
das
xor
popf
or
and
inc
and
movsl
enter
daa
ret
dec
dec
xchg
mov
push
push
imull
cltd
cli
add
fnstenv
mov
inc
movsb
repnz
pop
mov
mov
sub
in
jl
sbb
and
mov
jle
inc
dec
lret
inc
xor
nop
sbb
add
xor
cmp
pushf
inc
adc
lds
outsl
pop
fadds
pop
shr
inc
movsb
adc
push
leave
repnz
push
mov
pop
jae
dec
push
push
pop
mov
mov
rclb
fcoml
xlat
pop
xchg
mov
pop
add
sub
pop
cltd
xchg
jmp
mov
push
out
push
dec
loope
adc
psllq
add
insb
or
cmp
lock
mov
std
orl
mov
stos
out
mov
lods
dec
push
mov
in
and
mov
xor
gs
call
daa
scas
push
push
test
insb
inc
jbe
xchg
jmp
pop
in
jp
shll
xor
into
pop
xor
push
nop
dec
xor
stc
jl
fstl
mov
scas
add
test
push
xor
and
mov
add
pop
add
xchg
sub
sahf
and
pop
xor
jbe
fmuls
pusha
clc
dec
jb
out
lods
and
icebp
xor
lahf
cmp
pop
std
imul
dec
mov
cmpsl
inc
cmpsb
inc
mov
push
testl
out
adc
es
mov
pop
jp
inc
insl
pop
dec
daa
pop
es
sbb
dec
dec
in
xchg
aad
cwtl
mov
and
mov
add
mov
push
cmpsb
xchg
push
std
inc
jno
sti
inc
and
push
sti
rorb
mov
bound
fstpt
mov
mov
adc
call
roll
cmp
dec
mov
out
fs
daa
in
imul
or
scas
sub
sub
or
xor
jecxz
add
call
cmp
jne
dec
das
sub
out
dec
mov
inc
jbe
inc
xor
pop
shrl
imul
pop
pop
inc
adcl
clc
test
fimull
lea
ret
mov
pop
mov
push
dec
pusha
xor
dec
bound
add
push
or
inc
loop
xor
inc
add
xchg
xchg
mov
and
loopne
sbb
mov
jno
fadd
int3
das
mov
out
xchg
and
out
sub
les
dec
cmp
and
pusha
cs
xchg
or
sbb
xchg
push
int
fcmove
into
outsb
inc
lcall
cmp
outsb
lahf
pop
std
outsb
ss
movsl
xlat
add
add
cmp
sub
push
xchg
lahf
mov
mov
sub
repnz
mov
mov
addb
cmc
loop
or
mov
xchg
xlat
mov
stos
sti
int
aad
mov
mov
mov
bound
cwtl
inc
mov
cwtl
jg
sbb
dec
outsb
sbb
aaa
jno
icebp
mov
gs
jns
rcl
xchg
in
mov
xchg
loop
lds
lods
addr16
add
movsl
insb
pop
in
movsb
ljmp
scas
xchg
sbb
mov
sbb
scas
cmpsl
movsb
rolb
bnd
loope
jmp
fwait
rcrb
stos
mov
es
ficoms
sbb
leave
pop
pop
addr16
rclb
adcb
mov
mov
pop
jbe
xchg
jl
cli
lahf
inc
insl
mov
push
xchg
in
sub
das
ret
out
inc
int3
mov
inc
jb
imul
mov
mov
roll
cmc
cli
xor
push
push
mov
mov
dec
cmc
mov
dec
insb
insb
stos
cld
xlat
adc
imul
pushw
jle
xor
inc
sti
mov
and
push
insl
sub
iret
and
sbb
sbb
jmp
or
push
adc
add
xlat
xlat
pop
sub
push
inc
xor
cld
sub
adc
fcoml
jbe
xor
cmp
xorb
inc
adc
mov
pmovmskb
lods
rclb
jmp
ds
and
adc
addr16
mov
xchg
test
xor
out
inc
sarb
hlt
mov
lds
clc
rolb
fists
cmpsb
add
inc
cmc
in
jbe
dec
leave
jne
pop
dec
dec
mov
xchg
es
ret
mov
adc
jo
lods
mov
jb
sub
stos
int3
addb
jns
loopne
lret
clc
sbb
stos
int3
mov
xor
and
shrb
jge
sub
pop
movsb
add
ficomps
sbbb
test
or
in
loop
das
and
or
pop
cmp
pmaxub
stc
and
jns
or
mov
test
push
jecxz
xor
sbb
testl
repnz
push
sbb
add
and
dec
dec
stos
sahf
int3
cs
testb
or
es
les
pop
pop
fidivs
add
mov
jno
loop
hlt
loopne
movsb
fstpt
xchg
jno
repz
cld
sbb
fs
xlat
inc
sub
cs
sbb
inc
push
mov
sti
and
jmp
mov
jns
inc
fistpll
ja
add
xor
sbb
aaa
pop
push
jns
in
fstpt
test
push
adc
add
mov
xor
sub
and
out
mov
aam
insl
xchg
mov
jp
cmp
test
mov
arpl
ret
negb
hlt
sahf
loope
add
add
push
jbe
push
xor
sbb
jmp
and
idivb
cmp
push
adc
test
xor
dec
xchg
adc
sbb
mov
arpl
mov
lock
ret
push
fs
cmp
mov
cwtl
pop
lret
mov
repz
loopne
push
jns
mov
test
cli
ficoms
dec
xchg
repz
loopne
test
xchg
movsl
mov
ds
mov
sub
movsl
into
push
mov
jno
test
push
clc
or
adc
add
mov
push
push
sbb
xor
jnp
push
mov
mov
fxch
dec
xchg
xchg
jb
add
add
neg
xchg
pop
inc
xchg
int3
mov
mov
aaa
xor
jle
out
cmp
pop
repz
dec
push
and
mov
test
xchg
pusha
shrb
mov
sarb
loop
pop
cli
fsubs
and
lret
and
jmp
int
xchg
mov
or
jmp
jp
lahf
fistpll
outsb
fstpt
lods
mov
or
cwtl
mov
pusha
adc
mov
aam
dec
dec
push
sbb
xor
int3
xor
mov
mov
shufps
pop
push
dec
or
mov
pusha
les
movsl
pop
add
std
inc
cmp
inc
jae
xor
test
mov
inc
add
xchg
arpl
sbb
scas
push
int
lret
orl
mov
mov
fisubrl
jno
cli
jnp
fs
ret
test
outsl
cltd
imul
iret
cwtl
cs
leave
and
jnp
outsb
xor
imul
lret
fisubs
sub
dec
insl
pop
xor
sbb
and
pop
xlat
mov
xor
inc
pusha
dec
pop
cs
jne
sbb
mov
adc
sbb
insl
mov
sbb
in
or
aam
cmp
dec
int
ja
mov
xchg
dec
les
sub
lods
pusha
imul
jl
dec
nop
adc
fildll
sbb
mov
call
xchg
fdivrp
clc
sbb
sub
push
and
push
pop
mov
jo
mov
cmp
lret
fs
inc
inc
add
insl
push
loop
push
mov
imul
push
mov
inc
fstpt
int
clc
aam
es
push
insl
mov
fstps
aam
lret
xor
dec
pop
dec
roll
out
rcrl
aam
push
adc
js
cwtl
fstpt
xchg
xchg
xchg
pop
push
dec
push
xchg
popa
adc
xor
iret
cmpsb
xor
mov
in
mov
xor
mov
and
jbe
xor
lds
jle
bound
cmp
fs
test
add
push
cld
repnz
fisttpl
nop
jnp
mov
cmovs
mov
add
adc
ret
push
cmpsb
fists
orb
and
std
in
push
and
repz
addr16
xor
cmp
cmpsl
push
jg
mov
stos
in
loope
cs
bound
sbb
in
lahf
xor
push
lahf
xchg
cmpsl
lret
test
jmp
stc
dec
fcomps
js
sub
sub
mov
iret
pop
cmp
lahf
lret
movsl
mov
and
or
sub
jle
xchg
xor
incl
test
push
xchg
adc
int
fcoms
int
das
cmpsb
shlb
ret
ljmp
adc
push
scas
cmp
shrl
mov
mov
test
popa
fdivrp
aas
cli
sub
pop
cmp
ret
inc
orl
lahf
ret
cmp
pop
loopne
stos
loope
fcos
cmpsb
test
xchg
in
repz
pop
filds
jl
scas
je
xchg
adc
xchg
jae
jle
out
inc
cmp
push
rorb
xchg
ror
adc
push
jbe
xor
pop
mov
and
cwtl
sub
test
cmp
and
scas
xor
adc
jbe
insb
add
leave
mov
addr16
in
push
mov
data16
ljmp
cltd
lret
popf
les
mov
push
aaa
rcll
hlt
outsb
pop
push
jnp
jle
fsub
mov
test
mov
mov
imul
and
xchg
popf
xchg
inc
fbstp
mov
fmuls
cmpsl
leave
add
add
ss
jmp
add
dec
shl
mov
sbb
cmp
fcom
push
ljmp
outsb
cld
mov
xchg
hlt
push
loope
sub
loop
dec
xchg
sbb
push
call
sbb
nop
std
dec
push
in
pop
lea
and
add
shlb
out
xor
mov
testl
test
imul
stos
mov
les
mov
popf
sbb
enter
stc
sti
push
in
scas
adc
jne
lods
pop
xor
mov
mov
cmp
add
popa
shll
add
bound
or
test
inc
lret
in
pop
test
cmc
xor
into
xchg
daa
testl
int
fistl
xor
adc
dec
jge
cld
cmp
cmp
lock
out
push
bound
mov
out
cltd
addr16
icebp
fwait
je
push
js
arpl
and
dec
scas
xor
add
cs
lcall
push
inc
dec
dec
sbb
sub
test
adc
sub
jp
inc
sahf
or
inc
scas
sub
push
int3
adc
lahf
icebp
cmp
jnp
lahf
es
insb
movsb
mov
xor
sub
push
popa
sbbl
lods
sub
mov
and
mov
fisubrs
xlat
adc
jle
insb
lcall
jge
add
add
mov
jb
fcoms
cmp
mov
fbld
jo
cmp
test
inc
iret
sbb
xor
out
in
out
push
or
shlb
mov
popa
jp
insl
ss
adc
pop
call
call
cmp
fisubrl
pop
inc
pusha
adc
cmpsl
cld
or
jnp
adc
aas
sbbl
xor
ds
loope
dec
sbb
rorl
inc
sti
insb
adc
xchg
add
sub
icebp
mov
pop
cwtl
data16
into
ds
mov
in
cmc
cmpsb
or
pop
sbb
into
pushf
mov
jb
push
sub
mov
test
push
shrb
adc
out
push
bswap
inc
test
or
cli
mov
xlat
gs
pop
lret
ffreep
mov
stos
push
in
add
js
push
sub
in
xchg
sar
lds
jne
mov
push
adc
cld
lds
inc
adc
inc
xor
es
leave
xchg
pop
aas
adc
xor
push
fs
fisttpll
je
lahf
leave
dec
adcb
pushf
hlt
dec
inc
jle
pop
jo
fimull
out
repnz
add
rorl
ss
dec
cmp
cmp
loop
xor
cmpl
push
call
adc
inc
stc
xor
pop
mov
mov
pop
sarb
shll
jg
cltd
arpl
int
mov
fcoms
jo
mov
push
inc
std
lea
pop
jns
and
xchg
mov
test
inc
dec
ret
pop
gs
sub
xor
sbb
ss
adc
stc
sub
bound
dec
push
mov
fsubrp
jg
repnz
stos
roll
add
pushf
cmp
mov
mov
ret
sub
push
mov
insl
les
and
jbe
xor
or
gs
fsubl
ret
popa
pop
stc
inc
fstpt
mov
enter
jp
aam
push
ljmp
sbb
popa
xchg
fdivrs
push
incl
add
sbb
shlb
outsb
jns
push
push
adc
jnp
vhaddps
out
jecxz
dec
scas
xchg
ret
das
jg
cwtl
rorb
push
xchg
test
cmp
mov
sbb
popa
fwait
shll
pop
cmp
jo
mov
jp
ds
dec
xlat
test
xchg
xor
lock
lret
pop
insl
mov
dec
sub
jmp
cmc
dec
repnz
jae
dec
loop
push
ret
repnz
and
lahf
das
lahf
addr16
les
cmp
push
bound
jge
xorl
xorb
mov
mov
pop
int3
or
in
push
push
outsb
mov
lea
lods
xchg
sbb
dec
adc
and
dec
leave
aad
stc
lcall
jno
outsl
dec
inc
xchg
xchg
les
or
push
jnp
lock
iret
jne
loopne
push
gs
aas
adc
jo
xor
fwait
push
outsb
out
rorl
roll
adc
and
popa
xchg
arpl
fildll
cli
mov
mov
and
movsl
push
cmovnp
scas
bound
jae
push
xor
mov
mov
clc
xchg
out
cli
insl
imul
sub
rclb
jp
cmp
xchg
fisttpll
iret
sti
sub
das
cli
mov
cmp
xchg
mov
jmp
jle
add
dec
cs
mov
fiadds
xlat
sbbb
cmp
push
and
iret
pop
je
leave
lea
testl
mov
jl
mov
push
hlt
outsb
pop
sub
mov
scas
popf
push
xor
mov
jmp
ret
jb
push
cltd
inc
mov
push
adc
mov
test
out
ret
add
pop
xchg
fwait
lcall
push
int
icebp
int3
sbb
sub
xchg
jg
js
mov
cmp
out
cltd
shr
js
stc
std
add
fsubs
lret
lods
in
bound
mov
scas
mov
push
dec
or
push
or
cltd
pop
shlb
and
xor
lret
cltd
and
pop
rclb
mov
mov
nop
ja
push
mov
insl
pop
call
cld
mov
adc
test
mov
sub
mov
lock
mov
test
jne
mov
push
add
cli
ja
iret
pop
aas
jne
stc
cmp
cmpb
lfs
mov
xor
mov
sbbb
sar
push
sbb
push
cmpsl
push
arpl
cwtl
pushf
shl
jl
pop
sarb
cmp
jns
dec
push
outsb
xor
fcoml
stc
popa
les
dec
repz
setl
jno
jo
decl
mov
mov
cld
loopne
es
pop
loope
jo
mov
cmp
jno
xchg
dec
aaa
pop
inc
jne
pop
mov
xorb
les
out
adc
sub
ret
gs
int3
jg
es
mov
ds
lock
mov
jne
js
cmp
sub
push
movsl
pop
fcoml
sarb
cltd
loope
out
fstpt
call
pop
jno
add
outsl
cltd
scas
out
ljmp
mov
aad
je
dec
push
sub
fsubl
lcall
leave
sub
imul
shr
nop
xchg
fdivl
inc
mov
and
fldl
cld
fwait
movsl
adc
mov
stos
jo
jge
jg,pn
arpl
fcomip
xchg
fldt
mov
add
rorl
dec
stc
popf
jo
rclb
jo
push
cmp
inc
rolb
pusha
or
inc
popa
dec
mov
xchg
outsb
call
inc
insb
lods
pop
inc
hlt
dec
mov
push
jbe
xchg
cli
add
scas
push
mov
inc
sbbb
and
outsl
std
std
dec
outsb
inc
xor
dec
data16
enter
int
arpl
gs
push
jle
shlb
dec
push
mov
mov
cmp
loope
xor
gs
mov
es
sbb
shll
xlat
cmp
add
ret
cmp
aam
and
xor
jnp
mov
fstl
jno
cld
push
add
cmp
scas
fists
fbld
jp
dec
jne
push
mov
cmpsb
sbb
dec
lea
xchg
push
fsubrs
test
pop
inc
adc
dec
and
jno
sub
ljmp
push
push
push
lea
popf
aas
dec
jo
jle
aam
sbb
mov
inc
push
and
dec
sar
stc
hlt
cltd
les
pop
out
stos
loopne
rcll
cli
enter
ja
adc
ret
add
enter
cmc
add
push
push
sarb
in
lret
rcll
dec
lock
cmp
cmp
mov
cli
jle
ds
aam
cltd
inc
jg
pop
xchg
or
out
test
cwtl
mov
inc
sti
xlat
cmp
divl
xchg
xchg
test
test
xchg
leave
and
lret
mov
stos
daa
pushf
push
pop
pop
popf
pop
mov
dec
mov
jp
das
loope
mov
and
sbb
scas
xchg
leave
cld
xchg
ror
scas
and
jl
mov
cmp
out
pop
ret
xor
gs
jno
stos
sub
sub
mov
sbb
loope
clc
push
pop
inc
jecxz
xor
fwait
movsl
push
push
dec
mov
cmp
jp
dec
mov
dec
rol
jmp
push
mov
pop
add
jo
sbbb
mov
jae
pop
xchg
and
mov
pop
adc
js
inc
cwtl
int3
lahf
test
inc
clc
mov
mov
push
in
jbe
adc
pop
jb
call
dec
jnp
aad
call
imul
inc
and
cli
inc
jmp
and
pusha
push
sti
jbe
les
test
stos
in
lahf
jge
mov
fcomps
push
jmp
aas
test
popa
ret
outsb
movsb
jmp
shrl
jmp
add
pop
aad
adc
jp
cld
enter
fldcw
pop
jns
xchg
in
xor
push
fcmovne
xchg
fdiv
xchg
sbb
sub
push
aad
sbb
les
addl
aaa
pusha
mov
xor
xchg
dec
sub
daa
pop
and
mov
outsb
xchg
or
mov
mov
arpl
imul
sbb
and
cmp
xchg
idivl
xlat
xchg
hlt
lahf
int
sbb
push
outsl
subl
test
loopne
test
outsl
fs
mov
iret
lods
sti
push
pop
fsts
fisubrl
xchg
and
lods
pop
rcrl
aaa
jle
add
jmp
out
cmp
je
repnz
xor
push
shll
jne
mov
dec
stos
and
xorb
in
fcompl
push
push
or
xchg
xor
mov
xchg
mov
jmp
sub
cmpsb
mov
bound
ja
fistpll
ds
push
mov
loop
aam
inc
adc
test
xchg
jmp
in
loope
leave
hlt
or
pop
xchg
out
lds
fidivl
xlat
add
dec
cmp
stc
mov
into
ret
sarb
ret
mov
jno
data16
jnp
jl
or
jo
and
jno
imul
adcb
or
pop
adc
mov
shl
jo
lods
xor
sub
push
xor
call
and
addl
enter
icebp
pop
dec
test
xchg
and
addr16
add
pop
or
push
pop
mov
cmc
jg
push
fistpl
movsb
cmp
cmp
pop
push
imul
addl
imul
clc
pop
loop
das
jmp
stos
lds
jecxz
std
pusha
cmp
xchg
and
fwait
shrl
popf
mov
add
pop
out
fwait
andl
std
mov
test
cmpsl
dec
lahf
cltd
push
inc
mov
fildll
add
xor
lds
jg
mov
mov
aam
bound
push
mov
fimuls
cmp
jb
je
or
add
cmp
je
mov
sub
cmpb
adc
jo
and
pop
mov
mov
div
shrl
adc
ja
aas
mov
mov
dec
repnz
rclb
pop
mov
and
call
enter
push
pop
stc
bound
pop
jle
cmpl
sbb
mov
loope
sbbl
movsb
js
mov
inc
dec
out
jle
cmp
pop
mov
mov
sub
notl
filds
dec
arpl
aad
test
mov
mov
or
jl
aaa
add
sub
push
rcl
pop
std
sti
adc
mov
icebp
push
scas
fildl
and
xlat
inc
not
in
mov
out
aam
es
mov
cmpl
mov
sbb
jge
js
sub
sahf
out
fstps
and
or
mov
push
stos
movsl
or
or
mov
mov
test
or
mov
aas
mov
pop
xchg
mov
cmp
xchg
sub
or
insl
dec
xor
das
mov
push
xor
inc
bound
push
stc
jg
xor
push
loope
fiadds
cmp
mov
aam
jg
outsl
fnstcw
cmpsl
mov
inc
fsubr
rol
add
add
mov
fidivl
shrb
lahf
stc
mov
cmp
lahf
jg
outsb
out
test
sahf
inc
or
mov
xorb
mov
out
push
aas
adc
xchg
repnz
lret
mov
data16
cltd
mov
cmp
nop
sub
leave
mov
and
cwtl
push
movl
fbstp
outsl
pop
cmp
xchg
fdivr
scas
xor
repz
pop
scas
fldl
lds
out
shrl
cmp
cwtl
lods
cwtl
out
gs
adc
mov
pop
jnp
cmp
lret
jbe
jmp
xchg
sbb
or
cmp
and
iret
add
call
push
aam
lock
sub
aaa
sub
xor
mulb
faddl
xor
push
xchg
ss
push
lods
out
les
mov
inc
pop
pop
sub
mov
in
jg
adc
lds
aad
lret
jmp
mov
inc
mov
mov
jb
pop
add
aas
pop
repz
mov
xorb
dec
mov
insb
pop
jp
fldl
cmpsl
iret
cmp
aad
pop
lods
movsb
cmp
fcompl
mov
dec
out
lahf
pop
jnp
ds
cli
inc
jae
repz
adcl
sbb
mov
insb
mov
xchg
jno
sarb
or
cld
cmp
into
inc
push
pop
xor
or
jbe
andb
jno
test
sbb
lods
popa
cs
outsb
test
sub
dec
pop
mov
inc
out
hlt
cmp
xchg
mov
xchg
dec
xlat
ror
inc
inc
dec
cwtl
pop
or
aas
loop
data16
popa
stos
stc
pop
inc
popf
sub
cmp
fidivs
cmc
mov
popf
mov
clc
adc
sub
popf
cmp
jg
into
sub
cmp
cmc
mov
gs
movsb
mov
xor
cld
push
jl
dec
fidivrs
daa
jmp
inc
aaa
mov
and
mov
imul
inc
dec
adc
cmp
and
decb
xchg
scas
ret
mov
lods
mov
nop
push
adc
pop
dec
dec
mov
mov
loope
cmp
mov
inc
jg
sub
shll
fsubl
cltd
loopne
fucompp
mov
inc
mov
push
ljmp
mov
or
pop
and
jle
arpl
mov
mov
and
mov
in
cmpsb
dec
int
repz
pop
iret
add
or
jle
add
mull
xor
jl
mov
loope
or
dec
test
mov
add
mov
fsub
insb
mov
sti
dec
jb
or
lods
mov
and
into
les
add
cmc
aam
mov
es
imul
ror
inc
insb
and
pop
cmpsb
gs
push
btc
addr16
cmp
mov
mov
dec
test
jg
pop
xlat
fs
iret
and
pop
mov
ret
mov
add
jp
adc
mov
adc
enter
push
aam
mov
rcll
inc
daa
or
stc
outsb
push
js
inc
push
insl
dec
cltd
ret
inc
push
push
cmpsb
cmp
push
xorl
xor
call
mov
pop
cld
xor
mov
sti
sarb
xchg
in
xchg
adc
stos
test
mov
jo
aam
lods
cmp
mov
fwait
add
mov
push
dec
sar
pop
repnz
adc
mov
das
pop
scas
sub
mov
push
push
mov
sbb
inc
rcl
jnp
mov
out
out
mov
pop
xlat
ja
adc
sub
lret
rorb
cli
je
in
mov
sbb
lcall
and
aaa
outsl
mov
cmp
push
dec
and
inc
and
mov
and
pop
aad
leave
dec
popf
cmp
cmpsl
int
xor
cmp
dec
push
cmpsb
arpl
mov
jg
pop
test
pop
ret
and
ret
cld
lcall
sbb
loope
rcr
or
adc
fs
or
inc
fucomi
das
pop
shl
mov
pop
mov
fmul
inc
push
cwtl
cs
inc
shlb
cmp
aad
or
and
or
stos
jne
dec
loop
test
push
sarb
aad
out
xor
push
sub
sbb
scas
std
lock
jae
inc
into
lcall
push
out
lret
adc
fs
mov
mov
pop
inc
cmp
ficoms
and
inc
pop
mov
add
adc
xor
jo
dec
mov
loope
cwtl
mov
xor
mov
cmp
sub
adc
dec
inc
int3
scas
xor
inc
mov
mov
idivb
mov
int3
inc
xor
cwtl
pop
mov
cmp
and
fnop
jge
lods
jno
divl
outsb
xchg
rolb
aam
sub
push
les
ljmp
sub
add
rclb
aam
inc
iret
mov
mov
jmp
xchg
pop
sub
shll
cli
scas
adc
xchg
sbb
rcl
dec
test
dec
xchg
push
rcrb
push
mov
sub
jle
cmpsb
in
adc
sbb
icebp
push
aam
add
pop
aam
test
sarb
call
mov
pop
mov
xlat
mov
inc
adc
xchg
addr16
outsl
insb
pop
and
inc
loopne
jo
sbb
cmpsl
dec
sub
stc
cmp
mov
cmp
dec
hlt
xchg
ret
push
pop
adc
mov
push
stos
fwait
push
inc
sarl
scas
adc
and
jbe
push
and
dec
lock
gs
popf
add
push
testl
fldcw
jns
xchg
out
rcl
adc
pop
add
data16
mov
aaa
mov
andb
push
insb
add
rcll
mov
xor
mov
adc
loope
xor
xchg
mov
mov
sbb
adc
sahf
shrb
xor
push
aaa
insl
insb
add
test
add
xor
cmp
xor
xchg
dec
inc
push
adc
jg
cmc
xchg
inc
mov
xlat
sbb
sub
cs
repnz
sbb
push
insb
int
sub
inc
jb
out
cld
jge
das
in
out
mov
lock
lds
fwait
cltd
call
ficoms
adc
aad
daa
sbb
int3
icebp
or
cmp
push
mov
sbb
lret
pop
mov
stc
dec
out
inc
or
imul
sarl
mov
loope
push
int
scas
inc
sbb
pop
in
mov
cs
loopne
push
cld
andl
cs
imul
inc
hlt
jl
or
xchg
leave
test
stc
das
or
xchg
and
mov
mov
and
add
jmp
ss
repnz
ret
xchg
rorb
movsl
adc
pop
bound
xor
mov
aad
jae
repnz
out
cmp
arpl
pop
cmp
shll
xor
popf
mov
rolb
sub
jle
nop
test
pop
aad
add
dec
rorl
push
push
icebp
dec
xchg
push
iret
adc
int3
dec
xchg
or
xchg
xor
lcall
jnp
mov
xlat
mov
test
jl
clc
jb
adc
jl
in
pusha
push
lods
in
and
jg
aaa
sbb
aaa
mov
jno
test
add
and
lcall
jmp
mov
push
jb
stos
sbb
std
push
insl
data16
mov
push
arpl
pop
sbb
lret
shrl
test
imul
fstpt
pop
xorl
sbb
and
sarb
jo
aam
cmp
sub
mov
out
inc
iret
fcmovbe
adc
and
xor
loopne
cltd
inc
out
dec
or
adc
adc
xchg
into
sahf
pop
jecxz
outsb
cmp
outsl
ljmp
xor
mov
lahf
xlat
mov
xor
lods
inc
in
sub
addr16
jns
push
cmpsb
out
stc
enter
mulb
xorl
scas
push
repz
sbb
divps
xor
jg
inc
cli
lods
stos
mov
or
ja
mov
xorb
out
mov
aas
pop
dec
mov
push
shlb
rorl
mov
dec
insb
pop
movsb
pusha
rclb
test
sbb
xchg
and
push
js
pop
xor
pusha
orb
jmp
push
addr16
leave
add
test
xlat
push
xchg
mov
andb
sahf
dec
test
insl
sbb
fs
mov
cld
and
cld
cmp
je
add
aad
bound
pusha
pop
dec
cs
call
mov
addb
fcoml
pusha
cmc
and
leave
xor
ss
mov
jb
add
dec
aaa
dec
clc
leave
add
scas
fimuls
pop
in
aas
cltd
xchg
dec
cwtl
push
and
mov
mov
aas
mov
sbb
jg
xchg
outsl
aas
adc
sbb
fucomip
xor
xchg
push
pop
subps
xchg
into
xchg
inc
mov
stos
adc
mov
push
sub
and
xchg
sub
jg
mov
pop
sub
push
in
int
pop
adc
cwtl
fildll
dec
xlat
pop
stos
cld
and
lock
cmpsb
add
stos
sub
push
cltd
jae
pop
mov
dec
mov
std
adc
or
mov
test
mov
cbtw
dec
add
jne
or
shlb
push
aam
dec
cltd
fimuls
add
jno
xchg
shrb
and
add
addr16
pop
pushf
jns
or
pop
hlt
ljmp
mov
sub
gs
sbb
insl
push
test
pop
test
test
sbb
jb
dec
mov
pop
aad
imul
mov
xchg
aas
mov
stc
inc
jne
shlb
ficoml
ucomiss
cltd
outsl
mov
jo
lahf
cmc
and
dec
pop
jp
ret
push
test
repz
in
loop
dec
fcomps
data16
jae
aas
add
cmp
arpl
scas
jg
pop
out
sbb
mov
fimull
idivl
lods
push
rclb
cs
mov
ret
xchg
xchg
mov
mov
aas
push
in
push
push
repz
scas
mov
rolb
jl
loop
jg
sub
push
nop
push
push
daa
fmuls
fs
sbb
push
xchg
push
sub
pop
scas
mov
xchg
ljmp
inc
jl
fnstsw
inc
and
push
inc
stos
add
outsb
xchg
sti
inc
jle
push
fsubrl
ret
scas
xchg
mov
adc
xchg
out
hlt
mov
mov
repnz
stos
hlt
lea
into
mov
mov
mov
pop
xchg
jne
loope
mov
gs
adc
and
add
les
fstps
adc
outsb
mov
pusha
fsqrt
stos
fildll
mov
loope
repz
pop
mov
jne
into
xor
addr16
xchg
enter
insl
dec
mov
xchg
roll
pop
ret
mov
int3
ljmp
fs
dec
dec
imul
insl
mov
cwtl
sub
ds
cmpsb
sbb
popa
cmp
daa
test
inc
lahf
inc
es
icebp
jl
sub
gs
ss
jb
cwtl
lods
loopne
and
cli
insb
add
dec
pusha
les
addb
add
addr16
lahf
ds
insl
ficompl
lds
int
jl
pop
adc
fiaddl
sub
test
aam
ret
mov
das
cmp
jmp
cmp
arpl
jmp
sub
jge
repz
jl
fs
add
ret
outsl
ror
xchg
stos
mov
aaa
xor
imul
daa
mov
cld
repz
xor
enter
sbb
mov
mul
mov
repnz
cmpsb
dec
inc
lods
iret
in
pushf
adcb
inc
stc
pop
or
xchg
pop
sub
push
shll
adcb
sub
hlt
out
inc
imul
jnp
dec
add
mov
xchg
sbb
addr16
mov
repnz
inc
rcrl
inc
inc
or
test
inc
mov
cmp
pop
or
or
jns
cmp
lods
xor
sti
cmp
pop
imulb
mov
popa
nop
add
mov
in
lcall
ljmp
adc
cld
fst
mov
jne
shl
scas
add
push
add
jb
and
lret
stos
jnp
mov
sub
or
push
sbb
cmp
fadds
sbb
cmpsb
test
inc
stc
xchg
das
or
incl
packuswb
pop
pushf
jg
lea
popf
cmpl
adc
jle
sbb
mov
xchg
pushf
inc
insl
or
outsl
cwtl
test
loop
ds
push
clc
cmp
mov
pop
xlat
mov
aaa
ljmp
jns
pop
shll
cltd
sbb
gs
test
xchg
lcall
sbb
cs
push
popa
std
xor
scas
cmp
sbb
jne
outsb
popl
test
pop
or
push
sbb
xor
sbb
mov
jns
sbb
and
das
out
in
scas
or
mov
in
ss
jge
ja
or
jbe
out
cld
and
push
pop
stos
lret
pop
mov
mov
fsubrl
sub
loope
cli
addr16
cmpsl
cmp
ret
push
mov
popa
jecxz
pop
and
push
sub
mov
push
sarl
xor
lret
pop
adc
pop
jbe
mov
xor
aas
dec
or
in
jae
cltd
int3
dec
xchg
xor
fld
xchg
sub
sub
adc
std
mov
ljmp
shll
mov
add
adc
fldl
or
cmp
in
push
and
dec
xchg
aad
push
lea
ljmp
push
mov
out
pop
aas
add
push
test
lret
xor
cwtl
jmp
sbb
or
push
sub
int
into
mov
adc
push
pop
or
stos
dec
inc
aad
outsb
ljmp
push
dec
pop
ficompl
pop
push
cmp
in
aas
neg
xchg
xchg
dec
ja
sbb
in
jg
inc
imull
xor
cmp
stc
jl
mov
mov
lea
es
fbld
rol
scas
ljmp
jo
sbb
test
call
jno
loopne
aad
push
lods
loope
ret
xchg
cs
nop
rclb
jecxz
push
and
and
xchg
jo
inc
enter
dec
addr16
add
and
jecxz
fcomps
andps
xchg
push
call
das
sub
aam
shl
scas
lret
mov
pop
adc
dec
xchg
jns
add
adc
xchg
imul
jbe
sbb
and
in
or
int
insl
push
cmc
test
inc
jns
iret
xor
or
mov
sbb
push
mov
jbe
fdivs
aas
or
frstor
adc
push
mov
aas
rorb
jge
sti
lock
dec
dec
in
jl
xor
mov
mov
leave
mov
test
movsb
lock
leave
and
rcrl
or
int3
loopne
cmp
cmp
repnz
dec
outsb
inc
sarl
cld
rcl
rcrl
dec
aaa
cld
sbb
xchg
push
adc
sarl
push
ffreep
mov
outsl
movsl
and
sbb
imul
stos
push
dec
or
xchg
cs
ljmp
nop
loope
fsubrl
and
sbb
cmp
push
xor
xlat
lret
test
stos
sbbb
mov
sahf
adc
cmc
dec
sub
pop
xlat
mov
shlb
push
xchg
pop
dec
or
mov
call
sbb
hlt
mov
lods
cld
inc
pusha
mov
dec
mov
and
clc
mov
pop
inc
mov
cmp
fisttpll
adc
and
and
jno
mov
lods
push
lret
pop
in
push
adc
flds
daa
jmp
xlat
jbe
mov
mov
xchg
mov
xor
je
sbb
in
int
mov
pop
inc
sahf
js
sbb
cmp
xchg
aam
mov
dec
mov
idivl
cmp
les
pop
lea
pop
xchg
xchg
mov
loope
push
xchg
lods
pushf
fdivl
movsb
test
imul
xchg
cs
sar
fmuls
inc
lea
jp
scas
stos
into
cltd
rclb
xor
add
mov
fwait
pop
xor
imul
out
adc
andb
int
jg
dec
mov
pop
add
orb
fstps
xor
and
lock
bound
xor
movsl
addr16
ss
stos
jns
loopne
ja
lea
int
dec
popa
int3
cmp
test
shl
push
rcrl
jle
ljmp
es
aam
negb
push
cmp
mov
js
sahf
nop
aaa
lret
and
and
dec
adc
or
and
mov
ljmp
push
add
cmp
cwtl
ret
mov
sub
xchg
sub
push
loop
jne
lock
jns
aad
cmpb
arpl
popf
fildl
ljmp
sbb
fld
mov
imul
arpl
stos
arpl
xchg
shr
jno
sbb
mov
inc
movsl
orl
test
jne
ret
jg
or
jae
jbe
idivl
shl
aas
mov
inc
aas
outsl
shl
imul
insl
mov
and
inc
mov
lahf
pushf
adc
push
shl
hlt
jl
and
jmp
out
mov
fstps
dec
stos
outsb
aaa
data16
pop
or
in
cmp
xor
sub
aaa
add
xor
lret
xchg
adc
bound
fwait
sahf
mov
and
jb
dec
mov
outsl
inc
sahf
mov
pop
movsl
jl
in
pop
fildl
inc
jae
push
fs
ret
or
test
lods
jno
fwait
inc
sub
inc
pushf
jb
out
xor
arpl
out
pusha
sti
sbb
sub
pop
popa
inc
movsb
xor
loopne
pusha
andb
mov
ja
roll
ret
inc
shll
mov
pop
enter
jno
insl
sub
push
xchg
in
mov
xor
and
fistl
cmp
jno
adc
adc
inc
sbb
icebp
mov
rolb
lret
je
adc
in
ljmp
add
sub
dec
movsl
testb
call
test
pop
ret
xchg
mov
call
dec
jnp
mov
pop
je
cltd
mov
enter
jnp
add
or
xchg
xor
pushf
push
mov
ja
adc
jp
push
pop
pop
sub
push
xor
mov
inc
and
and
cmpsb
mov
movsl
scas
cmpsl
leave
xchg
popa
xor
sub
aad
fnsave
mov
pop
push
shll
popf
aad
mov
jns
pop
aas
movb
push
fidivs
and
nop
aas
xor
push
pop
cltd
cld
dec
clc
lds
pushf
sub
das
pop
dec
cmpb
xchg
pop
sub
inc
in
sbb
daa
jle
or
sbb
and
mov
nop
pop
sbb
pop
jp
xor
and
lods
in
adc
or
fisttpl
or
jb
leave
mov
sub
mov
mov
fwait
jp
leave
in
stos
dec
fistpll
scas
dec
sbb
mov
stc
or
adc
aam
aaa
inc
sub
xchg
add
sub
int3
dec
cmp
push
inc
aaa
lock
fwait
jb
inc
inc
pop
pop
enter
lret
ret
mov
inc
push
andl
jmp
mov
in
loopne
outsb
enter
dec
mov
pop
test
cmp
xchg
mov
gs
cmpb
jle
aas
fistpll
shl
inc
imul
call
sub
loop
jmp
imul
test
xchg
lods
push
mov
adc
mov
stos
xor
inc
ret
testb
jbe
stos
jl
ljmp
inc
mov
mov
mov
mov
or
add
aaa
call
and
jecxz
repz
je
fidivrl
hlt
sarb
jg
sbb
mov
add
fists
mov
adc
insl
dec
inc
in
fsubl
cmp
lock
psubsw
inc
mov
xor
mov
daa
inc
fistpll
in
jmp
jns
jbe
inc
dec
jno
inc
xchg
sub
xchg
xor
jnp
sub
jg
sbb
shr
mov
push
hlt
adc
ss
je
fwait
xor
mov
jecxz
je
push
xorb
xchg
subb
repz
ljmp
stos
and
mov
cmpsb
inc
fnstsw
push
hlt
leave
mov
out
cmpsb
fildl
push
mov
loop
sbbl
fistpll
js
mov
sub
add
xchg
dec
ss
sbbb
adc
mov
sub
mov
movsb
out
cld
lea
mov
int
jmp
pop
hlt
or
jp
jle
insb
ror
inc
repnz
cmpsb
mov
ret
hlt
sbb
out
test
cld
loopne
mov
sub
sub
popf
lock
xchg
fildll
mov
pop
lret
aad
pop
imul
call
push
jo
mov
mulb
and
jae
or
dec
sub
lcall
mov
and
push
je
adc
ja
fsub
xchg
xor
xchg
adc
jns
adc
lock
movsb
loopne
and
lock
pushf
mov
fsubrl
test
ret
stos
pop
sub
fdivl
div
int
daa
mov
ja
test
shll
rclb
xor
imul
jno
popa
jl
sbb
je
mov
mul
sahf
add
cmp
dec
mov
shrb
xchg
jno
push
int3
dec
les
mov
inc
cmpb
dec
outsb
dec
or
cwtl
or
imul
enter
inc
lret
sub
mov
mov
xor
imul
xor
pop
xchg
mov
pop
adcl
push
cltd
incl
jnp
test
cwtl
mov
mov
cmp
pop
xchg
imul
pop
mov
mov
fwait
push
bsf
and
sub
popa
inc
or
insl
fsubrl
or
aaa
or
push
adc
dec
mov
and
xor
in
jno
or
test
test
insb
std
pop
xchg
cmp
cmp
idivb
pop
lcall
cmpsb
mov
push
ljmp
sub
nop
lahf
test
das
jg
dec
push
fnstsw
xchg
fisubl
sbb
stc
shl
sub
sub
stos
jecxz
push
je
sbb
scas
push
jnp
jns
loope
in
mov
out
dec
popf
dec
cmp
scas
push
ficoms
jbe
lahf
js
loopne
cmp
ss
adc
or
scas
ret
or
adc
jg
lea
outsb
les
aad
cli
divl
dec
rol
hlt
ss
in
adc
icebp
int3
jmp
push
in
add
sbb
shll
xor
mov
inc
popf
lahf
andl
cmpsl
lahf
jle
jnp
subb
popa
push
cmp
lret
jno
inc
adc
hlt
sub
pushf
pop
movsb
sub
fwait
inc
push
xor
xchg
lea
lds
out
inc
push
in
jle
fwait
ds
imul
add
mov
lds
ja
in
jle
sbbl
rorb
insl
fisubs
arpl
sub
insl
jae
mov
and
loopne
fs
lods
ss
iret
mov
or
fucomip
xor
int3
inc
iret
ret
ljmp
xchg
fsub
stc
inc
lahf
fists
stc
sub
jl
shlb
add
sub
addr16
je
pop
push
aam
movsl
jg
loop
jl
mov
ror
cmpsb
pop
repz
push
andl
fsubs
rcll
fisttpll
cwtl
push
rcl
mov
pop
test
daa
test
push
push
leave
pop
push
add
aas
fiaddl
scas
push
pop
jmp
xorb
pop
mov
inc
jns
out
mov
daa
mov
in
cmp
sub
sarl
test
movsl
dec
add
test
dec
test
jae
aam
pop
jge
cmp
pusha
out
sti
and
jle
aaa
test
nop
push
fnstsw
sub
jle
xchg
push
fidivrs
sub
mov
dec
sub
fistpl
sti
adcb
jae
fwait
or
in
and
adc
sub
push
imul
shrl
aas
mov
incl
jns
bound
add
xchg
sub
cmp
dec
fwait
mov
jecxz
aas
int
fs
lret
add
shrb
sub
and
adc
int3
fsubl
jl
cmp
ret
pop
dec
fbld
xchg
pop
mov
mov
push
adc
fistpl
ret
mov
adc
popf
pushf
mov
scas
ds
jnp
adc
push
add
mov
jmp
js
scas
jl
add
mov
icebp
pop
add
jne
call
scas
sbb
xor
jb
pmulhw
daa
mov
sub
popa
je
and
sbb
out
cmpsb
add
mov
xchg
das
fnsave
aas
enter
daa
idiv
pop
and
fimull
lods
ljmp
mov
pop
test
jns
je
push
add
cwtl
out
jae
sub
fisubl
lods
scas
repz
hlt
aam
jg
test
into
stos
loope
and
mov
dec
xor
daa
shll
push
jmp
pop
into
mov
ds
push
imul
mov
cmc
dec
popf
pushf
out
outsb
jp
idivl
testb
ret
xchg
mov
nop
pop
shrb
xor
call
jge
xlat
xchg
mov
jne
lcall
stos
sub
xchg
inc
mov
sti
dec
dec
mov
cmp
icebp
mov
cmp
cs
and
mov
xor
jae
data16
xor
mov
or
pop
xor
popa
push
pop
daa
pop
in
pop
pop
ljmp
addl
pop
xor
popa
scas
rolb
mull
mov
and
mov
add
cli
pop
or
xor
push
loop
dec
sub
mov
out
fdivrl
addl
imul
outsb
and
cmp
andb
sub
inc
test
andb
test
mov
jnp
mov
nop
mov
out
shll
subl
repnz
cmpsl
icebp
jne
or
fsts
mul
xor
ljmp
loope
mov
inc
pop
adc
mov
in
das
test
jb
call
imul
or
cli
pop
test
aas
pop
addr16
cmp
push
jae
or
incb
jae
dec
ss
add
test
inc
jl
ljmp
adc
xchg
inc
sbb
or
and
incb
in
call
clc
rolb
movsl
in
mov
inc
data16
mov
lods
and
gs
lods
inc
repz
inc
push
and
or
js
mov
inc
mov
ret
mov
addr16
xchg
fsubr
mov
call
xlat
xlat
rol
mov
aam
repnz
cmpsb
pusha
sub
es
enter
ss
pop
dec
cmpsl
aad
pop
lahf
jmp
rcrl
cmpl
sbb
outsl
leave
popa
sbb
mov
or
out
mov
xchg
xor
ljmp
pop
bound
dec
or
aam
xchg
ret
arpl
jne
js
jne
xchg
cmpsl
insb
sbb
lret
xorb
jbe
xor
jo
mov
add
fsubl
test
fisttpll
sti
sub
xchg
xchg
testb
cmpsl
jb
xor
jne
or
xor
mov
push
fists
cmp
pop
or
sbb
loopne
retw
push
xor
jmp
and
ja
cmp
sbb
addr16
outsl
aas
jl
mov
cwtl
sahf
inc
sub
inc
lods
lcall
inc
add
in
out
mov
mov
jp
shl
pop
gs
jg
outsl
test
and
jecxz
jbe
jb
mov
mov
popf
or
cltd
out
mov
pop
pop
sbb
mov
xchg
dec
das
pop
popf
stc
push
aas
inc
inc
frstor
imul
dec
lock
lcall
js
mov
mov
fildll
pop
loopne
insb
xchg
pop
adc
lods
cmp
pop
and
push
xor
data16
mov
fisttps
add
mov
lcall
imul
pop
pop
pop
sbb
aaa
dec
or
push
int3
stos
mov
xor
add
adc
incl
lods
icebp
jo
sub
jne
push
dec
mov
xor
test
nop
ja
fwait
gs
push
std
adc
xchg
mov
xor
mov
repz
pop
adc
hlt
and
pop
fwait
dec
adc
notl
adc
dec
dec
jg
mov
push
xor
dec
jp
shll
dec
xor
push
mov
xor
cld
mov
scas
outsb
ret
jo
dec
add
iret
iret
cmp
mov
dec
dec
stc
push
mov
test
xchg
addb
dec
add
push
cmp
or
enter
sbbb
adc
xchg
or
scas
jno
and
xlat
pop
lea
in
xor
icebp
pop
push
mov
mov
leave
sub
inc
mov
sti
xchg
sbb
add
push
repz
cmp
xchg
loope
pop
fsubrl
clc
lods
cmp
sbb
fildl
xor
inc
jg
test
call
stos
cmp
cmp
sub
fs
outsl
mov
pusha
repnz
mov
out
push
loope
int
lahf
jecxz
xlat
pop
lcall
int
sub
mov
add
xchg
iret
bound
arpl
lret
xor
xor
mov
jae
pop
or
sti
dec
out
xchg
push
pop
shlb
pusha
sbb
mov
push
jnp
pushf
xorb
mov
popa
mov
xchg
sbb
xchg
std
dec
outsb
arpl
push
arpl
data16
push
pop
inc
pop
in
imul
insl
and
je
idivl
fxch
sbb
out
pop
fidivs
sub
mov
pop
mov
mov
mov
fstpt
mov
movsb
xlat
inc
mov
mov
or
arpl
jno
mov
in
and
repnz
pop
sti
mov
fsubs
ret
inc
inc
mov
arpl
fnclex
add
dec
xor
mov
lret
out
push
sub
int3
mov
add
sub
pusha
adc
cltd
xchg
pop
lahf
sbb
xor
push
add
aam
mov
inc
add
cld
dec
out
pop
or
xchg
adc
dec
popa
jns
sti
lgs
mov
lds
mov
bound
sbb
cmp
mov
aaa
cld
aaa
xor
aas
loop
sbb
sbb
ds
mov
outsb
adc
pop
mov
xchg
mov
xchg
notl
sbb
daa
xchg
cmpsl
xchg
lods
int
add
mov
repnz
push
in
dec
push
mov
int
nop
xor
adc
cmp
addl
mov
divb
cmpsb
pop
rcrb
out
add
dec
jmp
cmp
std
cld
mov
or
pushf
cmp
add
xchg
mov
lcall
ud1
lods
add
pop
dec
cli
push
popa
out
and
jnp
push
stos
adc
icebp
or
insb
fs
push
push
jno
inc
aad
and
cld
mov
leave
mov
repz
push
aaa
out
aam
dec
stc
imul
scas
add
pop
repz
xchg
pop
jne
in
xor
ret
daa
bound
aas
inc
lcall
sbb
fs
dec
xlat
popa
sbb
xchg
sub
push
fs
jnp
fimull
dec
cs
pop
loop
inc
gs
add
jge
push
out
cltd
jne
outsb
mov
mov
imul
in
clc
xor
and
mov
jp
and
push
cld
loop
xlat
push
in
lahf
fistpll
cmp
idivb
jo
inc
cs
setge
sub
orl
xor
fistl
je
imul
pop
xchg
xchg
test
lret
dec
cmp
test
in
lcall
sub
and
xor
movsl
mov
pusha
ds
adc
adc
mov
jecxz
das
add
ror
sbb
push
mov
jno
push
sub
push
add
addl
lods
bound
aas
lret
push
rcl
std
jl
xchg
dec
dec
and
addr16
xchg
pop
jno
data16
stos
or
mov
mov
and
mov
subl
std
cmp
mov
sbb
out
int
or
es
dec
je
pop
mov
xor
add
cltd
aad
pop
xchg
jbe
out
stos
bound
fisttpll
add
dec
in
cld
jae
mov
sub
push
int
lret
jne
mov
jns
dec
scas
or
sbb
push
adc
xchg
mov
aaa
jecxz
popa
rolb
call
jnp
cld
aaa
mov
movsl
inc
movsb
jge
or
imul
and
pop
xchg
dec
lea
lret
in
jge
das
fistpl
std
mov
mov
call
jmp
and
jns
les
mov
aas
add
fiadds
rolb
cwtl
popa
cmp
mov
dec
sti
inc
fisubrl
mov
push
outsb
and
stc
cmp
int
pop
lock
scas
sub
dec
push
push
mov
cmp
pop
push
xchg
sbb
add
mov
jl
mov
dec
out
inc
push
cmpl
cltd
fsubs
xchg
gs
sub
sub
and
xor
sbb
nop
pop
aas
xor
add
xchg
aam
xchg
imulb
xchg
mov
nop
and
movsl
mov
scas
dec
adc
sub
xor
rolb
jmp
add
fisubrl
movsb
mov
xchg
fwait
aad
neg
cltd
sub
adc
aad
in
xchg
std
add
xor
mov
sub
inc
mov
dec
and
es
daa
push
fadds
test
adc
flds
inc
jnp
out
into
jg
push
loope
aas
daa
jmp
dec
mov
cmp
das
aam
lds
iret
cwtl
jnp
mov
sub
std
dec
dec
ficoms
gs
push
inc
jle
and
mov
adc
aam
mov
fs
repz
mov
in
popf
test
repz
les
gs
add
jbe
cmp
fwait
leave
subl
pop
repz
pop
xchg
xchg
push
cld
in
jno
push
pop
test
mov
or
mov
pop
aaa
jge
mov
push
cmp
pop
lock
mov
push
dec
or
adcl
andb
sbb
icebp
jnp
inc
movsl
dec
loope
xor
lahf
push
jno
repnz
lret
call
mov
fisttps
adc
rcrb
loopne
repnz
mov
dec
add
dec
dec
xchg
loop
mov
repnz
testb
xor
aas
sbb
jae
orl
movb
shlb
mov
inc
add
pop
dec
in
mov
fildll
cmpsb
cmp
shll
push
pop
rolb
lea
xcrypt-cfb
cmpsl
arpl
pop
cmc
push
mov
clc
pop
icebp
sbb
das
mov
shlb
repz
adc
out
sbb
push
push
jp
repz
or
xchg
adc
mov
or
and
cmp
out
mov
sbb
dec
xor
or
ja
fists
add
scas
aas
js
daa
sbb
mov
xchg
out
mov
or
cmp
dec
xor
pop
ds
sbbl
out
fnstcw
add
popa
data16
leave
cmp
bound
aam
add
aaa
mov
in
jg
fnsave
mov
mov
pop
cmp
js
mov
lret
cli
int
xor
and
int
inc
xor
ret
testl
dec
in
cmp
ja
jo
lea
sbb
jecxz
dec
cmc
lahf
inc
imul
stos
mov
jns
movsl
push
pop
pusha
roll
fsubrs
add
xchg
push
stos
cltd
pop
dec
ret
dec
or
pop
or
in
jmp
mov
xchg
pop
scas
daa
jp
imul
inc
arpl
push
or
ret
shrl
sbb
iret
aad
mov
leave
ficomps
jnp
push
lds
cltd
aas
and
mov
xlat
xor
pop
fs
xchg
fdivrs
add
btc
mov
mov
scas
mov
loopne
push
mov
test
add
dec
xchg
xchg
push
outsl
add
test
lds
dec
data16
in
call
lods
aas
mov
pop
xchg
pop
jb
fildl
nop
popf
rcr
add
inc
dec
and
lcall
xchg
daa
adc
sbb
mov
dec
sbb
inc
jg
fptan
xchg
int
dec
mov
mov
jno
clc
fidivl
adc
jmp
cwtl
pop
repz
movsb
xor
xchg
mov
jp
movsb
mov
aaa
rcll
jb
enter
aaa
xor
add
insl
push
xor
scas
mov
aad
roll
and
out
add
cmp
jl
movsl
out
movsb
and
call
jle
mov
lds
test
sbb
aad
sbb
ds
adc
ds
push
js
inc
add
bnd
test
add
inc
fnstenv
fsubs
lret
popf
test
xor
ficoml
cmp
loope
stos
pusha
dec
add
adc
mov
shll
mov
jnp
int
jg
mov
iret
adc
xchg
clc
jmp
or
mov
movsl
mov
or
pop
jno
mov
xchg
fdiv
mov
inc
cmp
aaa
add
sti
push
jl
jno
mov
pop
hlt
cld
notb
push
and
pop
dec
sbb
ret
inc
out
scas
daa
jge
jb
xor
insl
dec
cs
mov
outsl
negl
leave
inc
sub
xor
push
dec
lret
outsb
sub
addb
jnp
es
sarl
pop
xchg
inc
lahf
cmpsb
and
jmp
xor
or
mov
lcall
cmp
lock
adc
mov
push
push
xchg
lods
cmpl
iret
push
dec
mov
subb
add
dec
cli
lret
push
jle
sti
out
inc
pop
xchg
mov
xlat
mov
inc
insb
pusha
in
push
add
data16
cmp
mov
push
adc
pop
jno
mov
or
loope
mov
add
inc
add
push
rolb
aad
ss
jle
push
dec
mov
dec
es
mov
push
mov
pop
sub
mov
xor
jp
fisubrl
stc
jge
adc
call
and
sub
shr
pushf
sub
sbb
xchg
cli
ret
stc
js
es
fistpll
ret
or
mov
mov
hlt
sub
mov
shlb
adc
shl
sub
xchg
loope
cmc
jnp
shrb
into
jg
xchg
shlb
and
and
dec
dec
mov
std
outsb
pop
adc
jno
dec
sub
and
sub
pop
xchg
ds
hlt
sub
daa
test
int3
lret
push
repnz
mov
lahf
lods
mov
mov
lret
lds
cmp
mov
nop
out
leave
dec
inc
mov
xchg
sarb
rol
mov
dec
out
jp
jp
inc
hlt
cld
inc
jbe
push
sahf
imul
cmp
adc
loopne
jnp
aaa
mov
and
out
sbb
hlt
pop
repnz
psraw
mov
fdivrs
fistps
jecxz
ss
imul
xor
ficoml
mov
adc
adc
or
cmc
add
sbb
xchg
dec
pop
jg
cltd
icebp
mov
leave
jae
sti
sarb
add
stos
icebp
lea
into
jb
or
mov
mov
imull
xor
fdivrs
jle
xchg
ss
push
popa
sbb
adc
in
add
stc
lods
paddsb
fnstenv
mov
sti
out
jno
jle
cs
stos
add
cs
sbb
jecxz
push
popf
insl
ds
mov
xchg
xchg
cmp
pop
xor
shl
cmp
xchg
dec
dec
cwtl
adc
repnz
ret
rcll
int3
pop
jbe
and
or
xchg
cmp
pop
mov
pop
out
out
push
or
xchg
aad
shll
imul
into
insl
xlat
ja
cs
adc
int
sub
dec
xchg
pop
add
push
int3
repz
scas
cmp
lret
repz
or
scas
idivl
pop
cwtl
mov
mov
test
imul
mov
stos
aas
push
pop
mov
pop
add
xchg
dec
fiaddl
add
cmp
fiadds
mov
mov
movsl
scas
movsb
enter
fildl
ja
cmp
popf
mov
cmp
mov
jne
into
and
cmpl
mov
mov
dec
lret
xchg
dec
mov
pushf
pop
aam
imul
ffree
add
das
out
mov
push
xor
push
sub
rorb
jecxz
loopne
loope
and
call
fs
xchg
push
hlt
clc
sub
jns
rcll
xchg
cmp
sbb
imul
rorb
out
in
xchg
addr16
hlt
lea
dec
mov
mov
mov
les
jb
xor
jge
ss
fcoml
test
ss
repz
pop
sbb
xor
outsl
mov
push
and
xlat
mov
idivb
or
lea
icebp
jae
les
lock
lods
dec
inc
xchg
dec
xor
or
repnz
lods
fists
fstl
mov
push
adc
subb
pop
loop
pusha
imul
or
jbe
notb
push
jle
lret
or
ss
push
in
xor
movsb
push
dec
jbe
and
cwtl
adc
aaa
push
lods
push
fmull
out
ret
mov
and
inc
insl
jp
mov
ror
adc
jl
jmp
push
aas
sub
aas
fadd
jecxz
fwait
xchg
popa
cmc
add
inc
pushf
jo
and
mov
and
and
mov
sahf
xor
fwait
xchg
jmp
dec
cmp
sarb
mov
push
mull
out
sub
jp
pop
mov
cmc
in
sbb
xor
ret
mov
or
jmp
popf
sub
and
xor
xchg
mov
pop
inc
fbld
mov
mov
cmpsl
repnz
sbb
aam
pop
in
pop
pop
xchg
mov
add
adc
mov
pop
repnz
loope
fcmovu
aad
xchg
test
notl
xlat
sub
popa
sbb
push
pop
xchg
xor
notl
adc
mov
pop
mov
shl
push
lcall
jns
cmp
cmp
pusha
repnz
xchg
mov
mov
xchg
into
add
xchg
jae
adc
lahf
mov
pop
mov
jge
mov
push
sahf
call
test
aam
loope
jb
dec
jb
orb
push
test
xchg
or
out
arpl
rcr
iret
jg
cmp
jbe
icebp
xchg
fbld
mov
jns
fsubrp
imul
and
push
or
fldt
cmpsl
es
aad
dec
cmpsl
dec
in
mov
sub
aad
iret
or
fucomi
lods
stos
out
xchg
xor
sub
dec
stc
cmpsb
cmp
arpl
jns
xor
jl
and
shlb
popa
out
les
pushf
mov
aaa
orl
ja
push
cmc
jg
jnp
cmp
lret
mov
repz
addl
bound
jge
fwait
cwtl
outsl
ljmp
loopne
ret
mov
and
sub
hlt
cmpsl
mov
xchg
xchg
adc
shr
push
sbb
mov
ljmp
jp
push
mov
pop
push
cmp
or
fbld
pop
fdivl
push
test
fidivrs
jecxz
adc
pop
xchg
dec
xchg
test
aas
ret
roll
imul
or
cmp
push
xchg
mov
or
xor
and
mov
adc
xchg
pop
repnz
movl
inc
call
add
cmc
clc
dec
push
dec
adc
inc
mov
sbb
ds
fisttpll
adc
mov
adc
push
loopne
xchg
dec
rorb
or
iret
mov
ficomps
fcoms
ret
nop
popf
mov
aaa
out
and
loope
push
pop
push
and
cmp
fucomi
arpl
pop
addr16
hlt
push
xchg
jg
sbb
dec
out
pop
popa
jl
xchg
inc
fcompl
negl
popf
xor
shr
fcompl
ja
leave
xchg
stos
xor
adc
call
sahf
scas
in
ret
or
rclb
outsl
scas
xorb
loope
push
jns
add
jge
mov
movsl
and
jp
jp
and
and
lods
cs
imul
pop
cld
add
test
aas
add
pusha
mov
and
ror
add
std
loopne
ljmp
xlat
dec
push
test
sub
sbb
es
iret
inc
jb
jnp
dec
bnd
push
in
push
out
jle
jp
shll
dec
push
lret
cmpsl
scas
pop
cmovne
arpl
pop
push
mov
inc
and
mov
mov
or
mov
mov
cmpsb
in
shrl
adc
cltd
jle
scas
jle
mov
data16
dec
popf
inc
xor
inc
xchg
jmp
enter
rcr
inc
mov
mov
insl
decb
sbb
sbb
dec
std
push
push
sbb
push
js
outsl
push
push
aaa
lock
sar
jle
call
gs
shrl
jae
adc
xor
orb
jp
lcall
xor
psadbw
cli
mov
push
movsb
jp
outsl
mov
mov
inc
dec
cmpsl
int
hlt
adc
rorb
dec
hlt
ljmp
jp
or
xchg
xchg
push
push
mov
addr16
orb
sub
inc
mov
xor
dec
or
jmp
xchg
stos
xchg
sbb
sbb
ret
mov
jno
std
lds
push
sub
lret
addr16
jle
dec
call
push
adc
dec
fmull
out
jne
lods
shl
stc
jb
mul
push
jbe
in
jne
sub
mov
outsb
cmc
in
dec
lea
xchg
lock
push
das
jecxz
stos
jne
test
jmp
pop
lret
sbb
cmpsl
xlat
jmp
and
sbb
lret
jle
inc
fs
jmp
inc
mov
and
shl
mov
mov
push
sbb
filds
lcall
clc
lcall
addr16
mov
sub
inc
das
mov
test
aam
in
cmp
adc
cs
push
fisttpll
rcll
mov
mov
or
fwait
jmp
push
mov
mov
gs
sti
int
inc
add
aam
xchg
cltd
shl
push
mov
std
pop
push
xlat
mov
enter
and
jae
xlat
repnz
adc
lahf
add
imul
in
inc
mov
in
pusha
aas
add
jb
jnp
mulb
mov
or
push
pop
inc
fwait
push
out
loope
lcall
fbld
and
add
push
mov
xchg
pop
sbb
dec
jmp
sahf
je
sbb
leave
add
orb
sti
and
inc
ljmp
mov
xchg
loopne
les
fmul
mov
ds
enter
pop
insb
cmpsb
out
out
repnz
lret
int3
leave
xchg
cs
xchg
das
add
jnp
imul
orl
jno
sub
sub
and
or
stos
xor
jno
add
idivb
movsl
in
dec
les
aas
scas
mov
cmp
stc
cltd
xchg
jmp
cli
xor
lock
inc
ss
mov
aam
sar
pop
icebp
push
ret
in
jo
cld
push
and
pop
int3
hlt
int3
inc
jnp
dec
adc
cmpsb
pushf
imul
and
insb
dec
adcl
popa
push
mov
lret
ja
or
mov
adc
sahf
push
out
dec
sub
inc
lcall
mov
or
xor
or
push
sbb
mov
aaa
pop
pushf
pop
addl
arpl
dec
out
test
filds
imul
cld
xor
dec
mov
mov
ljmp
pop
mov
testl
fisttpll
pop
lods
stos
push
push
inc
data16
mov
sub
cmp
sbbb
push
and
shl
lret
loop
int3
imul
lret
and
cs
pop
pop
xor
lahf
rorl
daa
mov
aam
in
mov
aas
xchg
pop
inc
and
pop
mov
out
mov
push
sub
mov
into
push
push
aas
pop
xchg
mov
xor
inc
in
popf
pop
mov
mov
xor
pop
imul
mov
xchg
mov
push
pop
pop
xchg
jecxz
push
jg
rcrb
lahf
movsb
insl
out
fiaddl
and
and
xor
sub
add
xchg
movsl
jecxz
sbb
sbb
imul
jge
or
scas
add
cmpb
stc
sub
xor
inc
push
mov
pop
and
sbb
jge
push
push
xor
xchg
out
push
enter
loopne
dec
fdivl
xchg
push
push
adcw
pop
and
add
iret
fidivrs
idivb
cmp
rcr
jge
rep
cs
jmp
inc
add
imulb
mov
jbe
sbb
pop
scas
jb
push
aaa
idivb
iret
int3
mov
outsl
cmp
shlw
adc
lea
sbb
xchg
pop
je
adc
scas
dec
popa
pop
leave
adc
xchg
mov
inc
bound
jl
pop
test
jbe
lock
mov
jecxz
pop
push
inc
mulb
inc
push
jle
das
push
add
es
pop
or
and
ret
xchg
icebp
mov
mov
fnstsw
loope
movb
bound
or
ljmp
push
in
lcall
push
ret
sub
pop
insl
dec
jo
lea
jge
jmp
stos
aad
sbb
int3
cmp
mov
inc
cmp
push
clc
mov
xlat
pop
addr16
add
add
xchg
mov
jb
shl
in
xchg
sbb
popa
stos
adc
adc
fwait
mov
jno
jbe
subl
xbegin
pop
outsl
cmp
mov
negb
push
jmp
xchg
pusha
scas
je
push
xor
in
testl
pop
pop
dec
sub
test
dec
out
scas
aaa
and
jp
lock
inc
int3
out
mov
mov
int
push
inc
cmp
scas
pop
out
in
in
out
das
fwait
adc
xchg
scas
dec
aam
in
dec
insb
pushf
sarl
sub
std
popf
sub
out
incb
add
pop
pop
fstpt
dec
pop
ja
fnstenv
mov
imul
push
cwtl
mov
or
mulb
rol
cmp
rorb
pop
shr
shlb
or
imul
loope
lods
add
jb
arpl
fs
add
testl
add
insb
jp
notb
fbld
xor
loope
mov
test
mov
jp
add
xorl
jmp
ret
push
movsl
scas
mov
push
mov
jmp
je
or
jge
stc
add
xor
arpl
add
clc
into
mov
jmp
or
cmp
adc
xchg
cmc
lea
pusha
mov
cltd
mov
out
inc
mov
in
icebp
stc
js
pop
andb
in
mov
mov
inc
frstor
push
mov
stos
dec
popf
test
fisubrs
and
pop
nop
lcall
sti
add
shl
sahf
fldcw
sbb
dec
fldl
mov
int3
test
push
iret
cld
push
stos
cli
loop
or
imulb
push
pop
clc
outsl
fdivrs
stc
fdiv
or
ss
imul
sub
cld
cli
sbb
and
push
jl
jbe,pt
pop
stos
xlat
jne
shlb
lcall
pop
lret
mov
jge
xchg
les
cmp
jae
dec
sahf
mov
mov
gs
jp
xchg
in
cmpsb
std
bound
mov
lea
mov
int
rorl
pop
push
lret
mov
lcall
push
es
dec
scas
stc
test
incb
bound
adc
cmpsb
xchg
pop
ja
pop
mov
dec
pop
shlb
push
mov
mov
out
xchg
jno
cmp
shl
loope
and
test
mov
pop
shlb
cmp
mov
icebp
das
push
xor
stos
xchg
outsl
push
pop
add
stos
mov
cmp
andb
mov
inc
std
sub
roll
mov
inc
jl
ret
mov
push
pop
mov
jo
aaa
add
cs
out
movsb
push
call
and
ret
and
or
js
std
push
inc
cmp
or
xlat
adc
push
mov
mov
mov
ja
mov
or
add
dec
stos
inc
adc
push
lock
std
jge
sbb
cmp
pop
fucomi
movsl
sub
or
mov
lcall
cmp
clc
popa
nop
mov
test
ret
pop
in
test
fbld
ret
sub
add
add
leave
xchg
mov
mov
dec
mov
mov
jge
in
mov
xchg
cmc
or
and
insl
cmp
mov
ljmp
push
fwait
mov
imul
lret
movsl
in
loope
mov
xchg
push
dec
cmc
cmp
mov
dec
mov
xor
mov
aaa
jo
dec
neg
jmp
pop
push
xor
cwtl
dec
sub
gs
pop
push
inc
fs
fisubrl
inc
xor
jns
icebp
fwait
sbb
xchg
push
add
fstpl
mov
push
mov
int
xorl
jp
in
add
adc
scas
push
add
sbb
and
jne
in
ret
shlb
int
push
outsl
andb
jg
fisubrl
pop
fidivrl
xchg
cmp
mov
ficomps
outsl
ja
mov
push
in
mov
dec
pop
jns
cmpsb
mov
das
mov
or
ss
push
iret
in
jne
mov
xor
mov
xor
mov
cmp
dec
aaa
mov
push
xchg
jmp
jbe
or
push
mov
cmc
sar
icebp
mov
xor
xlat
ss
imul
dec
insl
mov
clc
xchg
xchg
lea
jle
addr16
fdiv
lock
inc
add
and
fisttps
mov
push
xchg
neg
clc
test
or
test
je
loop
loop
daa
mov
inc
in
sti
or
dec
push
jge
mov
int3
pop
mov
lods
fadds
xor
add
push
gs
mov
or
mov
test
inc
iret
bnd
lods
add
dec
fwait
mov
mov
mov
mov
xor
inc
repz
in
inc
xchg
or
sbb
cld
pop
out
out
mov
adc
adc
and
pop
cmp
adcb
pop
mov
jne
repnz
sub
jo
mov
inc
dec
mov
jg
dec
cmpsl
jmp
subl
or
pop
es
movsl
xchg
imul
outsb
mov
es
test
mov
test
push
arpl
mov
inc
inc
xchg
imul
insl
fimuls
scas
push
pop
aam
pop
andl
xor
call
std
xchg
adc
invd
jae
addr16
and
push
fstpt
sbb
aaa
inc
or
xor
jns
jnp
out
xor
into
mov
inc
incl
xchg
fcmovnbe
orb
ret
ret
mov
adcb
mov
cmp
outsl
xchg
fisttpll
int
daa
cmp
stos
aam
add
push
test
xchg
xor
lock
popf
add
loope
sbb
push
into
mov
fcomps
mov
ja
pop
dec
lock
mov
or
or
hlt
dec
aad
adc
adc
cmc
pusha
mov
aas
pop
sub
mov
mov
test
inc
xchg
mov
jbe
mov
rolb
xchg
mov
movsl
bound
cwtl
mov
add
dec
dec
movsl
iret
mov
mov
sbb
scas
sahf
lret
pop
adc
dec
jb
test
pushf
jecxz
cmc
paddb
in
sar
stc
js
aaa
sub
sub
jg
fwait
xorb
cli
cld
fnstsw
pop
ret
jge
xor
xchg
mov
cmc
xchg
fs
test
mov
outsb
out
add
mov
or
xchg
push
mov
cmp
aaa
add
cmp
aam
jmp
pop
fsts
sub
loopne
pop
int3
mov
cltd
dec
pop
fdivs
xchg
lds
ret
sbb
pop
push
dec
mulb
push
jge
adc
lahf
or
call
roll
mov
sub
mov
aad
in
lock
addl
lods
pop
outsb
sub
imul
sti
movsl
pusha
les
mov
cltd
adc
sub
loop
pop
mov
test
jmp
sti
mov
adc
shll
sti
inc
lret
mov
mov
imul
pop
cltd
mov
rorl
sbb
call
ror
dec
sbb
test
imul
cmp
dec
and
inc
gs
lock
add
adcb
inc
xor
addr16
cmc
xor
dec
int
fstl
jl
mov
cmp
mov
out
mov
and
pop
add
je
or
jns
pushf
fnstenv
push
inc
aas
test
or
popf
sbb
adc
xor
iret
das
mov
jb
push
cmpsb
cwtl
popa
dec
sbbb
mov
xor
jb
xor
mov
addl
xlat
ret
rcrb
mov
outsb
pusha
add
fidivl
xchg
push
push
rep
in
ss
sahf
adc
sbb
scas
add
jo
cmc
sbb
scas
mov
sub
dec
inc
mov
das
pop
and
shlb
xorl
in
lods
out
mov
in
out
test
mov
addb
rcrb
repnz
mov
adc
cmp
out
inc
xor
popa
lret
push
mov
xor
pop
push
ret
xor
push
xchg
sbb
inc
push
xchg
lahf
cmp
dec
xchg
dec
mov
fdivrs
sub
xchg
push
mov
addr16
xor
xchg
mov
xchg
js
sarb
xchg
gs
xchg
lea
mov
adc
popa
cmp
pop
stos
js
in
orl
iret
and
jbe
and
adc
mov
push
jmp
jo
mov
xchg
subl
scas
and
cmpsb
notb
int3
push
cwtl
mov
stos
mov
push
into
add
sub
popa
fcoms
cmpsl
ljmp
xchg
or
push
and
sti
xchg
cmpsb
sbb
push
shlb
adc
stos
ss
test
and
rcr
sub
lea
or
push
mov
xchg
stos
cs
cltd
pop
fcompl
call
pop
pop
imul
mov
mov
ficoms
clc
push
mov
xchg
pop
dec
xchg
push
mov
js
sub
bound
mov
sti
ret
sahf
ljmp
ja
jl
or
loope
cltd
push
pop
pop
push
inc
pop
out
sub
jmp
xchg
push
mov
roll
and
int3
call
pop
fildl
ror
jg
xchg
daa
xchg
shr
imul
adc
popf
lods
ss
cmp
rcr
jl
fidivrl
ds
aaa
loope
push
push
sbb
loopne
bts
sub
push
shll
popa
lret
mov
mov
adc
int3
adcb
dec
sti
jl
int3
mov
cmp
pop
jae
testb
outsb
mov
jae
xchg
or
push
or
mov
add
jbe
mov
cltd
inc
loopne
dec
into
xchg
dec
popl
cmp
cmp
and
xchg
mov
mov
loope
addr16
mov
repnz
add
push
or
jo
or
push
inc
icebp
pop
cmc
inc
lea
out
cmpsl
inc
mov
bound
fbld
xor
jle
pushf
push
data16
xlat
cmp
xchg
sbb
xor
mov
add
js
popf
fdivl
int3
mov
ljmp
lock
call
push
sub
mov
adc
sbb
add
jl
push
icebp
test
aad
test
popf
dec
sbbl
movsb
dec
stos
xor
data16
dec
jg
imul
or
movsl
lcall
jns
lods
xchg
mov
bndstx
inc
xor
push
or
pop
jecxz,pt
jmp
cmp
push
gs
adc
fstpt
dec
jg
mov
mov
xchg
cmpl
pop
shll
in
adc
aas
icebp
xor
das
das
pushf
aad
adc
les
jns
add
test
pushf
out
xchg
mov
sti
cli
test
and
das
mov
xor
mov
stos
pop
in
cmp
mov
loop
icebp
cltd
inc
push
inc
and
adc
pop
pop
add
sub
rolb
sub
mull
mov
testb
mov
rcll
jmp
push
fdiv
push
mov
jmp
mov
incl
sbb
shr
add
iret
enter
pop
daa
test
jmp
pop
daa
repz
or
mov
mov
aad
cmp
push
outsb
popa
shr
dec
jle
lock
ja
movb
je
test
mov
out
xchg
aam
cmpsl
dec
pop
into
cmp
addr16
outsl
ret
stos
shlb
rcr
repz
mov
inc
lret
insb
les
jb
test
sub
popa
shll
cmp
jg
push
test
add
push
jnp
popa
clc
or
pop
mov
movsb
lea
in
sbb
int
fnsetpm(287
aaa
sbb
dec
inc
lret
cmp
cmp
or
dec
mov
cmp
xchg
repnz
mov
mov
mov
stc
inc
mov
cmp
jo
xchg
movsb
in
dec
addb
cmc
movsb
movsl
pop
nop
pop
fimull
fidivrs
or
cli
sub
pushf
ret
jmp
je
or
mov
or
mov
xor
cmp
es
leave
inc
jg
sub
fcoms
mov
sbb
ss
ret
push
xor
jno
fdiv
dec
bound
js
in
lock
das
sub
pop
popa
jecxz
and
cmpsl
stos
inc
xchg
add
xor
imul
lods
jno
mov
es
and
pop
mov
push
cli
daa
loopne
mov
leave
xor
cwtl
mov
and
imulb
ret
mov
mov
mulb
pop
ljmp
in
pop
shll
and
dec
push
sbb
xchg
push
adc
mov
jmp
cli
jp
push
adc
mov
push
mov
push
imul
push
push
in
dec
push
test
xlat
xchg
adc
scas
jge
loop
ret
and
pop
mov
movsb
test
arpl
jg
push
mov
mov
out
jnp
add
cmpsl
xchg
insl
add
or
test
and
jns
icebp
icebp
jno
insb
xor
sub
mov
mov
lret
xor
stos
adc
push
cltd
lret
adc
outsl
pusha
mov
jle
sbb
jmp
data16
dec
nop
stos
or
das
cmp
push
jbe
out
ret
dec
sub
shr
dec
inc
sub
popa
mov
mov
cwtl
push
sub
sub
mov
ljmp
mov
adcb
or
cld
pop
pop
out
sub
jecxz
xchg
cltd
insb
mov
enter
incl
ja
xor
mov
pop
pop
add
dec
pop
lcall
in
pop
test
xor
sbb
test
mov
daa
hlt
xchg
xchg
cmp
xlat
div
xchg
inc
sti
and
sbb
adc
sbb
sbb
pop
arpl
sbb
movsl
ret
adc
pushf
jle
loop
loopne
mov
ds
xchg
jnp
fs
jo
adc
outsb
nop
jl
sbb
scas
or
ret
or
push
in
push
push
in
shlb
xchg
xor
jp
scas
pop
xchg
out
dec
jl
mov
sbb
mov
add
js
into
mov
pop
mov
fisttps
aaa
push
pushw
lahf
xchg
aad
hlt
in
rorb
mov
add
jne
add
jge
mov
in
mov
jo
jle
xor
add
ss
jp
ja
adc
add
out
xchg
and
lret
sti
add
jne
mov
cmp
mov
sub
ror
dec
rcll
mov
fldenv
in
adc
sarb
xchg
push
xorb
cmp
pop
jbe
lahf
inc
and
test
sahf
iret
xchg
mov
rorb
xchg
pop
cmc
sarb
enter
bound
lcall
sahf
aaa
mov
filds
mov
sahf
sub
repnz
dec
mov
orb
cmp
cmp
push
movsl
cmp
sti
push
ret
into
xchg
hlt
stos
stos
adc
sub
stos
add
inc
test
inc
xor
sub
icebp
movsl
gs
push
mov
scas
int3
aam
test
pop
rcrb
jbe
lock
cwtl
shlb
stos
mov
push
enter
mov
sbb
push
stc
and
mov
push
cmp
cmp
jle
in
fsubp
sahf
sbb
dec
fsubl
mov
mov
cltd
fsubrl
shll
sbb
jg
mov
cmp
js
scas
dec
es
sti
das
enter
cmp
daa
out
stc
in
mov
sbb
scas
movsb
rcr
aas
cmp
mov
inc
jecxz
mov
in
jno
push
mov
adc
sbb
or
xchg
lahf
in
sbb
push
mov
pop
pusha
adc
push
test
jp
iret
fs
or
cs
dec
and
cli
sub
cmc
pop
or
jp
xchg
xchg
jmp
int
popa
lods
scas
aad
insb
movsl
out
iret
shll
scas
xor
popl
out
clc
arpl
sbbl
xchg
push
ljmp
lret
gs
add
mov
pop
aas
scas
dec
add
mov
push
or
cmp
cmc
sahf
xor
sub
push
pop
mov
pop
imull
out
xor
gs
rcr
pop
mulb
mov
sbb
pop
test
gs
movsb
xor
push
fcompl
xchg
addb
add
pop
ljmp
mov
fwait
loop
pop
pushf
cltd
inc
call
adcl
movsb
into
xor
icebp
fs
sahf
repnz
cwtl
jb
cmp
xchg
pop
popa
sbb
into
mov
test
inc
insb
jl
jb
adc
popf
cltd
inc
sbbl
push
sub
sbbl
lahf
mov
jle
gs
mov
sub
and
adc
sarl
mov
jmp
imul
fsub
mov
xlat
xchg
enter
mov
xorb
sbb
mov
std
pop
pop
push
loopne
adc
and
mov
cli
dec
inc
sub
and
dec
stos
stos
les
or
mov
cmc
stos
inc
sub
mov
stc
ja
push
dec
and
push
and
rolb
jg
shlb
les
shll
std
pop
call
ljmp
je
sbb
scas
xor
pop
pop
scas
cmc
add
push
fwait
cmp
mov
inc
mov
clc
jecxz
dec
xor
mov
pop
mov
out
in
shll
sub
imulb
mov
sub
imul
sbb
lcall
jno
and
ret
xor
mov
repz
push
cwtl
shrl
scas
and
std
out
dec
lret
inc
inc
cmp
sub
push
fs
mov
and
mov
or
jbe
daa
cmp
xchg
mov
cmpsb
mov
test
cmp
dec
and
mov
jae
xchg
jbe
and
rep
mov
sbb
shll
push
pushf
cld
jb
rcll
jl
cmp
xchg
fnsave
jbe
sbb
lret
xor
cmp
mov
std
pop
scas
adc
sbb
es
aas
add
and
or
pop
lods
jle
sarl
jl
dec
nop
in
sub
test
or
add
xor
movsl
xchg
in
pop
cmp
jnp
inc
xor
mov
mov
mov
jp
fimull
out
out
shrl
test
js
dec
scas
sub
loope
xchg
cmp
test
shlb
lcall
loope
pop
jg
fcomps
orl
inc
dec
add
add
adc
icebp
frstor
cmp
xor
fisubs
adc
pop
cmpsb
std
mov
clc
lock
fcmovnb
dec
jmp
imul
mov
xlat
mov
dec
mov
fstps
nop
sarl
testb
jo
cmp
popa
cli
cmp
sti
lds
out
mov
outsl
inc
xchg
enter
xchg
xchg
in
pop
movsl
out
fcmove
push
imul
rcrb
lcall
inc
xor
or
ret
mov
dec
sti
xchg
call
and
mov
daa
notl
pop
call
or
fadd
outsb
mov
lods
shlb
ss
push
jg
cmp
call
add
and
inc
jmp
cmpsb
mov
mov
mov
pop
pop
and
and
fwait
adc
pop
jns
mov
test
loopne
cmpsb
and
dec
mov
in
inc
push
push
ja
adc
dec
sbb
insl
jecxz
jecxz
mov
shll
sub
mov
das
lock
add
adc
mov
push
iret
inc
dec
adc
incb
in
pop
lds
inc
lea
jo
lcall
and
movsb
ss
push
push
cmpsl
fwait
and
shrb
mov
test
cltd
inc
jne
lret
icebp
nop
push
incb
dec
pop
imul
in
jmp
jle
jno
mov
and
cwtl
cmp
cli
mov
and
lods
nop
xchg
ljmp
jle
pop
push
ss
mov
nop
and
pop
adc
jle
movsb
test
pop
fs
jns
movsl
orb
push
xor
pop
push
test
mov
arpl
lea
gs
mov
push
in
or
mov
lods
push
icebp
aaa
adc
push
push
shlb
adc
imul
shl
add
insl
adcl
in
jp
insl
adc
iret
sbb
dec
rcrl
stos
add
test
sarl
sbb
push
mov
jp
imul
test
enter
adc
lcall
cwtl
xchg
xchg
das
and
mov
push
imul
pop
repnz
in
push
mov
sbbl
mov
or
inc
jae
jle
xor
aas
pop
rcll
gs
pop
mov
subl
push
lret
push
cwtl
pop
xlat
xchg
jmp
jbe
ret
sub
lahf
cmpsl
aad
jae
push
dec
imul
cmp
aas
popf
jmp
roll
add
or
mov
bound
stos
adc
movsb
sub
fistpl
cwtl
xor
push
xchg
add
shl
add
shlb
mov
pushf
xchg
imul
test
xor
sarb
cmc
xchg
mov
call
pop
into
outsl
sbbl
xchg
or
jl
xchg
roll
xchg
push
push
jae
data16
mov
cmp
mov
lret
cmp
adc
ficoml
lret
das
imul
into
jp
jo
jne
es
in
or
in
cld
push
add
fiaddl
pop
jne
cmp
mov
imul
pop
ret
or
rcrb
jmp
inc
xchg
or
mov
incb
fiadds
cmpsl
lods
and
leave
leave
outsl
arpl
imul
or
enter
dec
cld
fisttpl
daa
add
mov
mov
mov
pop
inc
daa
cs
adcl
stc
std
fildll
div
test
sbb
add
xor
mov
lds
inc
in
mov
dec
jno
or
jbe
cwtl
add
mov
dec
add
call
call
cmpsb
xorb
loopne
adc
push
adc
orb
sub
push
cmc
imul
pop
push
test
cmc
insb
ret
sub
fucom
xlat
rcrb
call
movsb
jb
out
lods
cmp
lahf
cwtl
andl
fists
aas
cs
negl
movl
mov
pop
rorb
adc
out
xchg
xor
pop
jb
das
pop
int3
push
inc
in
jecxz
loop
gs
out
shl
xchg
jle
out
cmp
push
daa
cmp
jge
mov
xorb
xlat
mov
divl
out
xchg
jp
adc
insb
ret
frstor
mov
mov
fs
dec
xchg
stos
mov
or
pop
in
and
push
stos
bound
lods
cs
stos
shrb
pop
ja
testl
jp
dec
test
cwtl
sbb
call
popa
sub
in
pop
jne
pop
fbld
mov
push
popa
mov
mov
lret
mov
popa
xchg
mov
mov
push
push
aaa
ret
out
xor
shll
ds
push
jns
shlb
daa
std
ficoml
mov
cmp
mov
cmp
call
pusha
jnp
mov
sbb
mov
jge
rclb
xor
addr16
mov
daa
add
mov
fistpll
adc
lret
mov
mov
outsl
cmp
aam
jp
loope
push
insl
fstpl
jne
lock
js
in
push
push
mov
cld
imul
mov
pop
fildl
push
push
stc
dec
mov
jmp
and
jg
cmp
cmpl
pop
mov
sub
lods
pop
test
cmp
push
sti
inc
inc
or
popl
push
cmp
push
pop
gs
or
lret
popf
stos
ljmp
cmp
fmulp
cltd
fsts
mov
mov
pop
and
cmpb
push
ss
lods
shrb
jecxz
lds
xor
and
inc
jnp
iret
loop
xchg
dec
icebp
and
lcall
fs
cmp
cs
adc
ud0
lcall
mov
dec
fcomps
push
mov
sub
repz
test
sahf
faddl
jmp
mov
scas
cltd
out
jmp
push
and
les
insl
xor
or
sbb
jecxz
ljmp
fistpl
test
xor
jg
mov
mov
test
arpl
js
cli
aad
add
mov
jns
mov
popa
mov
arpl
xchg
pop
fistl
out
dec
or
pop
sti
dec
lea
negb
dec
into
sbb
or
lds
fcom
sub
roll
dec
mov
add
sub
push
adc
fcmovnu
in
std
int3
push
hlt
cli
inc
rorl
pop
pushf
scas
push
xor
pop
icebp
cmp
ljmp
fsts
add
stos
push
pop
pop
test
or
imul
cmp
mov
out
cmp
cmp
cmp
sbb
cmpsl
out
push
push
addr16
cmp
fcoml
xor
nop
xchg
xchg
jno
mov
push
push
fadd
in
sti
lcall
ljmp
pop
jle
out
je
inc
mov
xor
lret
xchg
out
mov
cmp
add
nop
adc
sbb
gs
ljmp
push
push
loop
push
stc
imul
jge
xor
notl
test
xchg
jmp
inc
jnp
push
push
mov
and
lahf
push
xchg
push
fsts
pop
cmpsl
shlb
push
test
data16
add
push
adc
jns
pop
test
es
dec
mov
push
mov
mov
aas
scas
push
ret
leave
popf
mov
sbb
js
pop
stc
filds
cltd
rorl
sbb
aad
sub
sbb
add
das
dec
sbb
fdivrl
jne
ds
shl
and
adc
push
cmpsb
add
cld
and
dec
mov
mov
loopne
mov
icebp
dec
popa
rcl
pop
add
mov
fimull
out
pop
clc
or
xchg
shr
push
mov
mov
and
jb
movsl
mov
mov
lea
push
in
mov
inc
xlat
fidivs
data16
lea
xor
inc
jg
sti
dec
xor
lods
enter
arpl
insb
cmp
addr16
jmp
cmp
rcrl
push
and
add
xchg
pop
xchg
mov
jp
pop
adc
bound
add
dec
mov
inc
bound
pop
mov
push
aad
cld
xchg
sbb
popl
cli
pop
add
imul
jo
jo
pusha
ret
pop
mov
cltd
in
scas
and
sub
pushf
and
xchg
incb
dec
mov
aad
iret
sbb
inc
and
inc
mov
jbe
xchg
popf
jne
fwait
out
mov
mov
nop
in
mov
cmp
arpl
nop
xchg
inc
lcallw
fwait
jecxz
add
repnz
adcb
fldt
pusha
inc
xchg
call
cmpsb
cmpsl
mov
mov
dec
inc
mov
add
or
mov
orb
cmp
xchg
insb
test
push
push
inc
loop
mov
stc
cmp
xor
inc
fdivrl
xlat
inc
mov
jb
jle
mov
or
push
test
mov
jmp
pop
out
adc
push
pop
stos
sbb
sbb
inc
aam
ret
aam
jmp
outsb
add
push
xchg
imul
movsl
pop
mov
aaa
cld
cs
dec
xor
icebp
bound
enter
orl
or
stos
ja
push
js
sub
das
dec
cmpsl
in
insb
add
inc
fstpl
sbb
jo
inc
push
cs
xchg
push
aad
sbb
xchg
sub
movsl
pushf
daa
push
sbb
xor
ror
mov
enter
inc
jp
mov
shrb
loop
mov
jg
fisubl
jge
jl
dec
xor
xor
int3
jge
push
add
cmp
xchg
sahf
add
fs
push
and
sbb
fwait
mov
out
mov
cs
into
out
popf
cmp
jbe
adc
orl
cmp
ss
dec
mov
ret
adcb
popa
scas
repz
dec
push
jl
fwait
pop
adcb
ret
mov
lods
in
addr16
push
int3
and
or
inc
add
mov
add
adc
push
popa
in
jae
mov
adc
je
enter
jmp
sahf
jbe
in
push
pop
repnz
shrb
into
sbb
cmc
mov
and
mov
in
outsl
jmp
push
bound
jns
sti
xor
mov
daa
jo
push
enter
js
push
call
inc
lret
push
add
insl
data16
data16
add
xor
xor
cltd
sar
dec
sbb
jns
pinsrw
movsl
cmc
jnp
adc
ret
fcomps
loope
mov
xchg
shrb
fwait
testb
inc
dec
xchg
pop
sub
xchg
mov
sbb
jne
and
xor
inc
movsl
movb
or
cmpsl
jbe
mov
mov
repz
out
push
push
sti
in
sti
add
out
mov
pop
mov
outsb
incl
inc
cmp
cmpl
cmp
fs
sbb
negb
jno
add
setbe
sub
fistpl
mov
inc
pop
pop
leave
sub
cwtl
test
sbbl
leave
jg
mov
pop
stos
fdivs
shlb
pop
pop
xchg
fdivrl
popf
dec
aaa
pop
push
popf
xchg
mov
les
test
xor
pop
dec
jbe
adc
js
out
or
adc
leave
lds
dec
shll
pop
lahf
xor
sahf
out
mov
shrb
rcrl
fwait
icebp
out
pop
lods
mov
dec
popl
sub
pop
aaa
ljmp
hlt
jp
and
or
lods
imul
fisubs
sahf
roll
rol
or
pop
testl
and
and
sbb
mov
xor
gs
in
in
push
inc
fisubl
adc
cmpsb
inc
in
lds
in
pop
mov
por
or
rol
imul
outsl
dec
into
popa
mov
xchg
fildll
sub
cmpsb
add
mov
pushf
inc
dec
insb
push
sti
push
fsub
xchg
clc
mov
das
test
add
xor
mov
or
lret
fsubrl
xor
mov
inc
xchg
cli
mov
gs
sub
inc
fsubl
adc
mov
push
xchg
fdivl
clc
test
inc
ror
insb
and
xor
push
mov
mov
mov
cmp
aas
or
cli
decb
mov
cwtl
bound
je
or
jne
xchg
adc
and
call
lds
add
pop
jno
or
shlb
xchg
adc
and
testl
negl
in
sbb
inc
insl
mov
mov
lahf
out
xchg
mov
cltd
ljmp
push
popf
cmpsb
xor
insl
ljmp
jnp
mov
mov
fildl
in
pop
sti
in
fisubrs
xor
inc
fdivp
cmp
mov
mov
sbb
sbb
adcb
lahf
faddl
lcall
xor
pop
inc
mov
jae
mov
sub
aad
js
gs
les
mov
jmp
bound
iret
adc
adc
mov
ds
arpl
cli
jbe
sub
inc
imul
packssdw
pop
daa
scas
aas
filds
mov
loop
in
mov
std
xchg
inc
test
cmp
ja
jo
out
xchg
xor
mov
jge
sbb
inc
push
bound
lods
sub
sub
fst
mov
cmpsb
in
cmc
dec
xchg
push
and
pop
bound
adc
sbb
call
xchg
mov
loopne
mov
test
out
outsb
mov
or
push
push
xor
push
dec
jle
jns
xor
hlt
jns
imul
xchg
xchg
cmpsb
inc
mov
aad
inc
mov
rcrl
mov
pop
test
inc
xchg
or
into
push
enter
scas
loope
cwtl
jle
movsl
push
stos
cld
xor
lea
add
jne
jp
cmpsb
jno
call
xor
leave
sbb
sbb
jecxz
mov
push
ja
mov
inc
inc
dec
imul
or
ljmp
inc
mov
fldt
mov
test
clc
jle
fldl
push
push
dec
mov
stos
dec
mov
out
in
cli
roll
out
fists
jbe,pt
bound
dec
dec
cmp
test
sbb
mov
rcr
cs
mov
je
push
repnz
jmp
xchg
xchg
jle
mov
or
cli
gs
mov
daa
outsb
inc
mov
inc
fildl
rcrb
ret
ret
sub
int3
icebp
adc
inc
in
mov
and
mov
jnp
movsl
adc
pop
sbb
or
mov
mov
sahf
sbb
out
sbb
inc
test
fldcw
add
and
xor
inc
nop
out
sub
addl
mov
mov
mov
jecxz
mov
shl
adc
je
xchg
cmpsl
push
ror
inc
xchg
pop
repz
and
push
pop
aaa
ja
adc
arpl
cmp
leave
cmp
cmp
add
mov
mov
stc
jp
cmp
repz
jae
inc
cmp
add
xor
jle
or
xchg
mov
cmp
sub
mov
stc
cmp
xchg
jno
add
ss
shl
cmp
mov
sbb
fmull
xchg
adc
jecxz
movsb
outsb
push
xchg
adc
or
mov
jns
add
test
push
push
and
test
jno
lock
or
push
push
dec
and
in
loop
or
pop
and
jmp
pop
in
cmp
lods
push
dec
xchg
flds
add
adc
mov
out
lods
sbb
mov
push
clc
inc
xchg
sub
stos
adc
mov
lret
loope
scas
xor
cmpsl
cld
dec
jne
push
cmp
adc
insb
mov
mov
movsb
jl
fidivl
push
dec
or
push
call
bnd
pmulhw
push
cmp
dec
shll
outsb
xor
aaa
out
out
movsl
ss
out
int
pop
stos
arpl
xor
xor
enter
xor
push
xor
and
inc
mov
jno
into
mov
cld
jnp
jnp
dec
dec
mov
int3
mov
addb
adc
out
add
sti
add
cmc
sti
jo
inc
jns
push
roll
xchg
out
shr
fcom
dec
xor
push
mov
xor
xor
push
pop
push
or
mov
sbb
cmc
and
jp
hlt
xchg
and
out
xor
sub
sbb
lds
mov
jg
xor
call
pop
mov
in
push
mov
mov
insl
inc
mov
dec
push
mov
xor
mov
js
fwait
or
aam
lock
xlat
lcall
aad
fiaddl
outsl
gs
pop
jbe
pop
lods
mov
popa
imul
dec
imul
sub
sti
out
imul
xchg
mul
popa
push
cs
in
stc
mov
stc
jb
cmc
adc
scas
clc
or
mov
adc
mov
idivl
cmp
leave
aas
fisubrs
and
add
rol
sub
and
popf
push
in
inc
das
mov
jbe
mov
cmp
or
xchg
ss
sub
int
aas
or
sbb
imul
sbb
pop
cmp
cmpsb
les
cwtl
pusha
into
xor
repnz
xor
lock
mov
and
ja
test
push
ja
mov
subb
ljmp
fdivr
mov
in
js
jle
xor
mov
loope
or
push
jns
sahf
and
movsb
jecxz
scas
test
bound
out
jl
fbstp
je
mov
test
pushf
enter
jb
sub
ja
dec
jle
repz
js
cmp
pop
cs
data16
std
addb
ja
push
and
push
icebp
push
lahf
addr16
movzwl
repnz
mov
int
jl
ljmp
lds
mov
in
jle
inc
or
cmpsb
inc
or
iret
jo
popa
mov
icebp
xchg
int
lret
popf
xlat
xchg
out
jbe
ss
cmp
add
gs
mov
pusha
mov
insb
sbb
jbe
pop
sub
cmp
mov
inc
test
enter
inc
out
and
add
sub
testb
mov
dec
mov
sub
cmpsl
sub
mov
js
adc
iret
aaa
mov
push
fwait
adc
fucom
push
pop
inc
nop
adc
addr16
lds
pushf
mov
push
cmpsl
cmpsl
add
out
lcall
add
inc
adc
sbb
icebp
movhps
sbb
and
mov
pop
insl
xchg
inc
sub
cmc
fbstp
and
stc
scas
ret
lods
mov
dec
cli
cmp
mov
sbb
mov
movsb
inc
cld
pop
lret
push
test
jmp
adcl
push
sub
mov
in
gs
sti
push
pushf
sbb
push
and
cwtl
gs
push
jo
out
testb
sbb
sub
cmp
repnz
movq
pop
sahf
jne
les
inc
dec
stc
fidivrs
pop
ja
cmpsb
push
out
push
ret
adc
mov
outsl
popa
cs
jb
scas
imul
jle
xchg
xchg
add
cmp
add
gs
rol
inc
dec
adc
pop
mov
incb
jae
add
pop
mov
pop
fs
scas
mov
xchg
cmc
inc
cmpsb
clc
dec
shlb
scas
add
and
cmp
jae
xchg
in
or
shl
jae
sbb
sbb
adc
xlat
in
lcall
frstor
xor
mov
push
shlb
mov
test
jecxz
xor
lea
mov
dec
imul
jns
cld
imul
adc
mov
jle
mov
jbe
hlt
insl
stos
xor
insb
mov
mov
jmp
cmp
loopne
int
icebp
lock
stos
repnz
dec
and
int3
dec
scas
or
cmp
loopne
mov
mov
pop
lock
clc
out
adc
subl
xchg
xor
mov
jecxz
sub
pop
or
cmp
dec
daa
inc
pop
in
mov
fldt
fmuls
push
cld
and
xchg
in
push
nop
mov
pop
mov
pop
addb
stos
popf
sbb
rorl
inc
sbb
cmpsb
pop
mov
inc
xchg
rorl
in
nop
movsl
mov
pop
int
sbb
pusha
in
cmp
xchg
jne
mov
stc
sti
push
xchg
test
mov
popa
test
jns
adc
daa
sbb
daa
adc
cli
fbld
nop
aaa
jnp
jge
jne
xor
cltd
imul
ror
pushf
push
rolb
pop
mov
dec
jno
lds
clc
lods
and
sbb
cmp
shlb
sahf
or
push
aaa
clc
push
mov
movsb
xchg
js
testl
mov
jae
pop
pop
mov
mov
popf
outsl
push
dec
pop
jg
pop
lea
xor
mov
dec
ret
sbb
lret
stos
call
rcrl
daa
pusha
and
shll
mov
mov
cli
push
xorb
aam
scas
mov
add
xchg
stos
iret
bound
mov
into
fistps
insb
mov
gs
lret
push
dec
popa
mov
icebp
or
shl
rol
push
pop
test
xchg
call
xor
loopne
dec
or
mov
movsb
iret
or
movsl
pop
mov
data16
push
hlt
mov
adcb
cld
xchg
sbb
jp
mov
mov
jne
push
iret
hlt
inc
dec
jle
subl
jnp
sbb
mov
sti
jmp
cli
sub
add
call
out
and
jmp
imul
sbbl
ds
dec
sub
fadds
fwait
mov
push
add
jb
pusha
lods
rolb
lea
and
sbb
jbe
mov
and
or
lret
stos
mov
inc
adc
or
inc
repnz
dec
mov
scas
fsub
imul
sti
add
arpl
daa
imull
jecxz
adc
subb
incb
xchg
sbb
sub
jecxz
lret
cli
rclb
test
pop
vandps
push
mov
xchg
adc
inc
lds
sar
mov
sbb
enter
mov
subb
mov
adc
and
cld
cmp
sti
or
jecxz
in
movsb
mov
fisttpll
imul
loope
loope
movb
insl
adc
pop
int3
fbld
dec
or
fwait
dec
mov
fnstsw
xchg
mov
int
pushf
or
or
add
push
stos
sbb
push
xchg
mov
jl
mov
ret
dec
daa
xlat
pop
xchg
sub
je
out
cmc
std
push
je
sub
adc
dec
and
addl
in
orl
call
and
in
mov
cwtl
sub
adc
mov
scas
xchg
mov
sub
add
inc
arpl
add
and
repnz
lahf
lret
jo
jo
mov
and
sub
sbb
push
arpl
xchg
mov
dec
xchg
movsl
mov
push
fidivl
out
mov
ds
mov
mov
push
cmc
data16
repnz
sbb
dec
sbb
sub
movsb
sahf
cltd
movsl
pop
lods
jge
loop
jge
sub
lea
jno
mov
outsl
int3
hlt
xorb
xchg
repz
stos
pop
jl
cmp
outsl
pop
push
mov
push
xor
lahf
mov
mov
xor
leave
dec
cmc
sub
repnz
in
insb
int3
aas
jnp
push
inc
fisubrs
xchg
cmp
xchg
cmpsb
fcmovne
or
pusha
jmp
rol
dec
push
jg
and
data16
loopne
scas
loope
fld
pop
mov
add
push
bound
jmp
adc
lods
inc
dec
testb
inc
mov
xchg
xor
xchg
pop
pusha
iret
sbb
setnp
xor
xor
in
in
and
mov
mov
xchg
into
mov
adc
out
test
cmpsb
sub
testb
or
adc
jne
sbb
std
ficoml
adc
pushf
push
outsb
mov
test
mov
adc
mov
mov
xor
call
fcompl
sbb
into
push
and
and
xchg
inc
fcmovb
push
movsl
je
inc
pop
sub
pop
dec
jp
push
xor
out
xor
aad
cmpsb
movl
jno
bnd
in
repz
add
pop
or
leave
cltd
in
sub
mov
call
dec
jmp
xchg
sbb
gs
sbbb
xchg
ja
mov
or
push
sti
roll
sbb
sbb
mov
dec
xor
out
ljmp
xchg
or
test
js
addr16
mov
jp
mov
xchg
xchg
adc
roll
lret
or
mov
adc
mov
sbb
mov
jbe
jp
dec
add
ret
pop
mov
stc
mov
stos
sbb
mov
push
mov
ret
std
out
jns
pop
add
insl
sub
dec
adc
scas
push
repnz
lahf
add
sub
outsb
adc
cs
cld
movsb
aaa
fucomi
aad
mov
fmull
cmp
push
insb
adc
sti
ret
fwait
stos
push
push
mov
mov
cli
inc
xor
lcall
fs
cmp
out
out
iret
imul
es
mov
sbb
jno
push
push
lret
jge
or
inc
lea
aad
add
cmp
adc
out
fs
xor
mov
clc
orl
add
xor
cmc
mov
dec
sbbl
lret
jns
stc
jg
nop
loope
psrlw
xor
ret
pop
adc
jbe
jp
adc
pop
lods
je
mov
adc
leave
adc
xor
add
inc
repz
cmpsl
push
adc
pop
dec
mov
fmull
fsubrl
test
and
daa
test
decb
cmpl
mov
mov
pop
pushf
out
pop
push
push
ret
cmp
sbb
jb
sbb
fsubr
enter
lcall
mov
xchg
fsts
sub
jge
mov
jge
add
fwait
inc
mov
mov
fwait
aaa
orb
fs
aad
jmp
fistpll
inc
mov
pop
or
out
loop
shll
es
mov
aad
stos
mov
mov
fisubrs
and
rcll
enter
dec
mov
mov
cmpsb
loopne
cmp
insl
rcl
movsl
lret
add
push
jge
mov
push
int3
ljmp
out
mov
push
or
lcall
adc
ficomps
pop
inc
xor
popf
outsb
shl
inc
mov
repnz
mov
add
jg
leave
andnps
es
pop
dec
inc
push
repz
mov
dec
xor
enter
xchg
xchg
dec
inc
popf
cmp
std
push
inc
inc
cmp
or
sahf
decl
dec
aad
data16
mov
cmp
fwait
jecxz
cmp
pop
aam
out
push
add
jmp
sbb
nop
sbb
stc
sbb
into
mov
lret
fsubp
cmp
add
and
mov
cmc
ja
pop
cmp
jge
fimuls
in
jbe
outsb
stos
xchg
ficompl
push
lods
sbb
jo
jge
cmp
cmp
lods
repz
mov
sub
repnz
add
fwait
cld
mov
push
test
das
test
xchg
mov
adc
sbb
cmp
sbb
jecxz
js
outsb
stos
dec
sub
dec
pop
and
xor
dec
std
in
add
and
xchg
arpl
addr16
bound
xchg
mov
inc
push
daa
ret
mov
add
and
mov
mov
dec
data16
jno
leave
rclb
add
and
mov
lods
cwtl
mov
jo
pop
push
sbb
add
imul
outsl
ja
inc
or
push
mov
cmp
or
mov
inc
inc
inc
inc
dec
sti
cmp
or
adc
ret
fs
pop
xchg
xchg
cmp
out
outsb
shr
pop
lea
fs
sti
pop
xlat
xchg
scas
and
lahf
pop
push
jnp
aam
imul
pop
push
movsl
push
adc
cmp
dec
in
sahf
push
sti
shl
into
pushl
sub
stos
cmp
bound
in
bound
xor
jg
xor
or
cmpsb
int
xchg
mov
adc
imul
mov
inc
jg
daa
mov
mov
cld
cmpsl
xor
jge
pop
clc
iret
add
int3
mov
lcall
outsb
out
push
mov
mov
iret
aam
add
mov
xchg
and
mov
mov
insl
sub
dec
inc
add
sbb
xchg
jae
lahf
and
decl
arpl
mov
sub
ret
clc
mov
push
in
pop
mov
mov
ss
mov
into
sub
pop
mov
pop
into
dec
mov
mov
add
orb
mov
scas
rorb
jmp
enter
gs
xor
or
adc
fcoms
cmc
fcom
mov
push
out
ljmp
jl
out
fistps
mov
hlt
lea
inc
in
cld
popf
cmp
cmc
pop
sub
gs
fdivrl
adc
fldl
jecxz
dec
fimuls
jecxz
mov
jg
idiv
pusha
dec
jo
push
jno
cmpb
xchg
int
dec
addr16
mov
push
push
mov
or
sub
fwait
xchg
lcall
test
xchg
and
mov
ret
add
cmpsl
loopne
or
jae
call
cmpsb
insl
dec
aad
ja
test
cmp
cmp
outsl
ret
push
and
mov
lcall
loopne
xor
mov
mov
mov
xor
mov
adc
sahf
cmp
pop
sti
mov
outsb
fwait
aaa
pop
outsl
mov
test
add
lahf
jle
loopne
shlb
shrb
clc
jo
add
or
pop
repz
testl
jnp
aam
sub
mov
ss
sbb
les
mov
into
ret
test
insl
sub
pop
sbb
jmp
ret
stc
and
pop
jge
rolb
test
fsubr
mov
jne
ss
cmp
pop
lret
cmp
out
jb
ljmp
fdiv
andb
mov
in
in
cmc
cmpsl
enter
gs
push
sub
idivl
and
push
sbbb
leave
outsl
push
enter
repz
and
xor
loope
xchg
mov
aad
pop
xor
lods
and
cltd
adc
mov
loop
mov
mov
push
sbb
cmc
ret
and
sbbb
push
cmpsl
jmp
in
xor
cmp
cwtl
inc
jp
popf
and
mov
outsb
sti
dec
rol
push
add
dec
pop
adc
pop
mov
in
stc
arpl
lea
sahf
jb
mov
mov
or
nop
or
mov
push
mov
adc
and
pop
lea
mov
adc
or
or
push
mov
pop
mov
push
mov
daa
inc
pop
fs
fcoml
test
xchg
push
in
jmp
push
xor
xor
in
jnp
addr16
inc
scas
push
jmp
fstpt
sbb
sbb
cmp
sub
incb
cld
sbb
adcb
outsl
cli
cmc
es
arpl
ret
clc
jne
sbb
cmp
loop
lahf
idiv
jp
sbb
push
xor
stos
lcall
pop
pop
in
sbb
mov
adc
mov
cmp
cmpsb
repz
rcl
jb
fstl
icebp
mov
xchg
dec
lock
fsubs
xchg
aaa
js
inc
gs
ja
test
xchg
mov
cwtl
lock
cmp
rol
clc
mov
inc
and
mov
xchg
push
mov
lods
cs
pop
rorb
cmpsb
out
xorb
xorb
bound
or
jb
pop
dec
daa
mov
loope
mov
lods
into
push
pop
pushf
daa
xchg
dec
cwtl
arpl
fwait
inc
xchg
out
adc
add
mov
dec
push
sbb
add
roll
jae
fisubs
jbe
outsb
stos
pop
popf
negb
xor
repz
adc
movsl
adcl
aad
lahf
lcall
sub
dec
scas
xchg
cmc
lods
push
push
faddl
sysret
pop
sub
lds
push
fiaddl
in
sti
pop
jmp
lahf
xchg
test
fildl
ret
mov
test
in
lods
jno
aas
xchg
rorl
icebp
fcomp
idivb
lods
ds
inc
pop
mov
jle
mov
fdivrp
inc
mov
neg
mov
and
leave
inc
push
pop
cmp
scas
mov
push
mov
sub
aaa
inc
mov
pop
inc
test
jl
imul
xchg
xor
jle
test
iret
lcall
enter
mov
mov
sbb
pop
out
mov
or
xchg
imul
jno
js
push
xor
cmp
repnz
aaa
test
inc
sub
lahf
mov
std
sub
pop
arpl
push
push
lds
fisubrs
add
in
test
popf
sub
xchg
cmp
sbb
sbb
js
jnp
cmp
add
mov
push
lods
xchg
sbb
jmp
and
shll
xchg
pusha
int
and
mov
scas
in
cmpsl
mov
icebp
pop
mov
rcrl
insl
pop
jg
ret
cmc
mov
sub
and
mov
push
ljmp
cmc
rcl
gs
in
adc
and
sbb
ret
popf
jmp
jae
or
mov
cmp
lock
cli
and
aas
clc
push
sbb
test
mov
addb
data16
cmpsl
fisubrs
jmp
iret
xchg
jg
or
ljmp
fstpl
leave
xor
fldcw
pop
dec
mov
mov
jns
out
outsb
ds
loope
cmp
jecxz
hlt
add
into
add
mov
gs
push
fstpl
ss
adc
in
inc
add
pop
imul
cmp
outsl
cmp
mov
xor
mov
cmp
mov
mov
sbb
mov
xor
js
aad
xor
shll
dec
jl
mov
je
push
pop
sub
cmpsb
xor
sahf
jecxz
jg
pusha
cltd
push
xchg
mov
and
jl
push
fstps
add
mov
or
adc
fs
adc
adc
mov
pop
xchg
jge
dec
xchg
popf
add
or
int3
sbb
movsl
push
out
dec
stos
inc
pop
jno
inc
pop
out
sbb
sbb
aad
fdivs
mov
pop
push
push
cmp
dec
sbb
aaa
ficoml
xor
pop
fcmovnu
jmp
in
aad
pop
pushf
ficompl
mov
push
enter
jg
adc
inc
insb
mov
push
xor
mov
scas
adcl
repnz
js
sarb
icebp
cmp
pop
pop
sbb
inc
mov
pusha
add
cwtl
or
jmp
cltd
test
sbb
sbb
movsb
jmp
mov
or
in
dec
mov
out
jbe
and
mov
jmp
jg
sahf
pop
cmpsl
cmp
ds
dec
inc
dec
adc
or
pop
inc
mov
cmc
rcll
dec
add
inc
imul
outsb
gs
movb
or
jg
jne
and
pushf
mov
mov
mov
cmpsb
pop
pop
mov
cmpsl
outsl
fsubl
add
jge
scas
pop
mov
mov
aas
sbb
iret
mov
mul
and
sarl
cmpsb
movl
je
js
stc
cmp
lods
in
cmpsl
movaps
mov
jae
aam
push
or
lret
mov
ss
repnz
push
mov
inc
lahf
fcomps
insl
cmpsl
xor
add
call
fcompl
xchg
cmc
arpl
xor
cmc
enter
and
js
cld
out
mov
into
insl
cmp
dec
vcvtps2pd
mov
loop
jae
pop
cltd
mov
cltd
mov
ret
push
out
pop
dec
std
icebp
std
arpl
daa
aas
inc
fbstp
push
jle
xchg
rorb
push
inc
or
xchg
push
xchg
mov
addr16
inc
xor
xor
mov
xlat
pop
jnp
jmp
mov
pop
jae
insl
pop
xor
add
pop
or
push
mov
aam
mov
jle
mov
push
pop
mov
int3
push
sub
jle
jecxz
xlat
or
cmc
jmp
xchg
jnp
xor
and
in
cltd
fstp
mov
inc
aam
loop
sar
push
jg
sahf
sbb
xor
lods
jecxz
sarb
jle
xorb
or
sti
and
mov
mov
sub
fwait
and
in
popf
cmp
mov
mov
mov
js
or
iret
pushf
in
xchg
das
mov
cmp
cmp
les
push
dec
push
dec
enter
push
xor
scas
mov
scas
push
mov
ja
push
push
bound
add
mov
xchg
xor
popa
stos
adcb
fildl
mov
lods
movsl
lret
shrb
sub
hlt
sbb
sbbl
mov
aas
fs
dec
mov
and
pop
mov
or
insl
inc
push
mov
outsl
add
lret
push
imul
pop
cltd
and
ja
mov
sbb
mov
leave
pop
cltd
cmc
aam
jns
hlt
pop
pushl
push
jge
loope
jno
hlt
mov
out
cmp
sbb
add
inc
cmp
sub
in
pop
insb
pop
sbb
aad
push
repz
cmp
sub
into
xchg
push
test
jg
ret
std
xor
decb
loope
or
js
pusha
aam
inc
mov
push
xchg
rcl
outsb
insl
mov
int3
xchg
dec
setns
arpl
jne
push
adc
out
xchg
mov
int3
pop
add
out
jnp
stos
dec
rcrl
ja
scas
bound
pop
enter
and
in
adcl
inc
mov
sbb
mov
xor
xlat
jg
dec
je
mov
aad
hlt
outsb
std
lods
cmp
fildll
ret
lret
pop
int3
sub
repnz
pop
inc
dec
sti
cld
mull
mov
cmpsl
arpl
mov
adc
out
mov
add
andb
mov
cmp
and
loopne
add
mov
mov
je
mov
lahf
sub
outsl
sub
pop
mov
lods
sbb
dec
push
aad
enter
aam
movsl
xchg
sub
mov
adc
leave
mov
mov
outsb
xchg
xor
fdivrp
mov
neg
mov
push
popf
je
lods
jmp
sti
je
mov
adc
sub
mov
mov
lds
mov
test
test
or
or
adc
subl
xor
frstor
sub
dec
in
adc
mull
out
add
test
mov
cmp
push
add
ret
imull
rorl
in
adc
jmp
jae
and
and
sbb
push
mov
push
loopew
stos
sti
outsb
cmpsb
in
dec
jo
sti
cmpsl
and
enter
mov
mov
stc
xlat
push
jno
fwait
sbb
adcl
adc
push
daa
cli
shrb
lock
push
mov
aas
insl
pop
sbb
xchg
adc
mov
popa
mov
bound
ljmp
xor
or
xor
push
cmp
sbb
add
inc
push
out
cmp
imul
js
inc
fcoml
push
sar
enter
outsb
mov
mov
or
iret
das
sbb
outsb
xorb
subl
mov
js
sub
js
in
pop
lea
fcoms
push
lods
dec
push
scas
dec
mov
scas
and
stos
or
cmp
sub
adc
and
and
in
xor
pushl
xchg
pop
test
addb
pop
mov
mov
mov
cmp
and
lahf
jp,pt
ss
inc
in
andl
mov
and
leave
pushl
mov
sbb
mov
cld
popa
cmp
jp
das
mov
push
mov
add
push
jp
lods
loopne
cmp
fcomps
pop
loope
dec
and
fs
inc
rolb
push
inc
lret
insb
jo
nop
pusha
addl
shlb
dec
dec
push
adc
inc
push
push
xorb
mov
xchg
aad
push
cmpsl
and
sbb
cmc
adc
popa
fucom
pop
and
int
loop
scas
sbb
mov
push
imul
or
sahf
cld
push
ficoml
inc
es
mov
pop
mov
sbb
vmovaps
sarb
cltd
inc
stos
mov
pop
loopne
rclb
mov
cmp
or
or
mov
lds
mov
or
shlb
mov
mov
pop
orb
repnz
pusha
in
icebp
adc
jl
ret
add
mov
mov
mov
pushf
rolb
lret
ja
jnp
in
add
aam
mov
lcall
cmp
negl
pop
xchg
add
mov
out
push
out
fstl
mov
push
sub
lock
sbb
mov
mov
pusha
cmp
repz
jae
daa
cld
add
xchg
lds
push
inc
aaa
push
leave
push
mov
push
jmp
icebp
ficomps
aas
cmc
jno
lods
add
out
xor
add
pop
xlat
pushf
lcall
shrl
jge
daa
inc
aam
out
pusha
sbb
xchg
lcall
outsl
dec
sbb
dec
dec
icebp
xor
fwait
pop
add
lock
xchg
mov
pop
loopne
aam
jae
dec
mov
int3
push
dec
pop
dec
jno
add
xor
nop
lods
jo
mov
push
inc
in
pop
adc
popa
test
je
fidivl
jle
xorb
push
ja
repz
mov
jp
jbe
int
sbb
insb
rcrb
and
mov
pusha
stc
xor
xor
cmp
insb
push
xchg
je
inc
mov
repz
cmp
mov
cmp
push
cmp
and
popa
arpl
cmp
sub
mov
add
fwait
jbe
xchg
add
add
sahf
inc
popa
sub
pop
adc
sub
cmpsb
xor
gs
icebp
cmc
xchg
outsl
pop
fwait
push
mov
cmpsl
mov
lds
lods
push
mov
dec
ret
repnz
xchg
or
pop
xor
sbb
and
add
inc
pop
mov
pop
add
pop
movsl
adc
fnstcw
push
sti
xchg
daa
dec
inc
mov
mov
cmp
cld
xor
cwtl
sahf
lret
pop
lods
jle
into
cmp
push
adc
fidivl
pushf
daa
test
enter
femms
sbb
sub
fadd
popf
mov
jmp
sti
arpl
das
mov
or
iret
rcll
int
addr16
mov
mov
xchg
xchg
frstor
mov
filds
mov
stos
xor
xor
std
cmp
jmp
mov
pop
mov
adc
add
add
push
xor
in
sbb
icebp
push
mov
les
xchg
shrb
out
fisttpll
test
test
xchg
inc
mov
data16
adc
adc
xchg
mov
inc
in
sub
in
pop
adc
fs
in
aam
gs
leave
push
jp
imul
fnsaves
cmp
push
les
pop
lods
pop
xchg
dec
cmp
cmp
or
outsl
or
enter
or
orb
cmp
inc
cmp
cmc
les
sbb
in
enter
jmp
push
hlt
adc
pop
fbld
loopne
daa
mov
sub
sub
daa
inc
lock
subb
std
test
push
test
add
push
xchg
jno
repnz
push
fildl
or
sbb
xchg
pop
aam
jl
sub
out
mov
cld
add
mov
jo
sub
pusha
jmp
adc
xor
lret
mov
jmp
mov
in
outsl
jp
mov
hlt
inc
fs
inc
fdivp
xorl
xchg
repz
push
jb
cld
mov
and
xor
int
mov
pop
add
jg
hlt
fistpll
add
out
outsl
pop
mov
xor
pop
popa
gs
gs
enter
add
push
pushf
mov
dec
xor
les
outsb
lods
call
rorb
sub
push
ret
inc
pushf
mov
xor
lret
mov
bnd
cs
mov
leave
sti
push
xor
sbb
test
sahf
int
arpl
cmp
dec
andb
int3
out
jp
add
iret
adc
int
jnp
mov
es
push
and
out
jns
mov
dec
ret
in
fsubl
in
cld
mov
mov
loope
xor
jle
pop
movsl
ret
inc
jno
mov
sub
les
pop
push
pop
shlb
jg
dec
and
into
fcomps
fcompl
add
or
add
xchg
sub
hlt
stos
lahf
cs
scas
ret
and
fucomp
imul
mov
xchg
cltd
mov
pop
aad
lahf
loopne
sbb
or
hlt
in
addr16
mov
mov
mov
fnclex
jbe
push
fdiv
int
bound
mov
or
push
rorl
ret
fisttpl
out
outsb
push
mov
sub
nop
mov
add
stc
xchg
xchg
out
and
pop
pop
add
mov
cmp
stc
stos
jle
cli
sti
mov
scas
push
cmp
loop
in
push
jae
test
insb
test
mov
sub
cmp
mov
stos
lea
inc
iret
and
sahf
loop
adc
adc
fucomp
lea
jmp
adc
cli
cmp
into
pop
inc
ss
loope
out
sub
push
or
lea
or
fbld
sub
icebp
mov
mov
gs
push
ss
fadds
inc
pushf
fldcw
dec
mov
mov
mov
sub
adc
pusha
push
mov
cmpsb
stc
mov
lret
lret
fwait
pushf
mov
dec
and
cmpsb
xorb
cmp
mov
mov
jle
mov
jl
adc
sbb
cmc
mov
mov
or
into
mov
mov
sbb
loopne
inc
or
ds
xor
repnz
push
in
xor
sbb
out
xor
gs
ds
enter
xor
rcr
pop
jbe
push
dec
out
out
dec
pusha
jecxz
repnz
push
cwtl
loope
test
sar
inc
in
out
push
jle
nop
ss
ja
cmp
cmp
mov
mov
fnstsw
pushf
roll
ss
dec
fcomi
out
lea
mov
mov
test
lahf
nop
sub
mov
inc
xor
or
aad
insl
cs
sbb
dec
repz
cmp
pop
test
mov
or
addl
movsl
aam
js
inc
or
int3
push
push
ja
jb
hlt
inc
jbe
data16
addl
inc
xor
hlt
dec
lods
mov
clc
jg
ss
lret
nop
addb
cmpsb
mov
adc
jecxz
sbb
jne
outsl
vphaddwd
xor
xchg
js
fnsave
popa
pop
out
gs
out
or
cmc
sbb
lret
or
movsb
jbe
xchg
push
push
xchg
xor
test
adc
adc
jge
xchg
sbbb
or
sub
xor
pop
stc
dec
xchg
mov
enter
pop
cltd
push
mov
mov
inc
pop
jo
fnstsw
cmp
and
mov
pop
sub
bound
jecxz
lock
lcall
sub
fidivl
push
jo
inc
push
sahf
imul
xchg
xor
scas
inc
mov
and
lcall
xor
jbe
repnz
cmc
aaa
sbb
repz
out
cmpsl
dec
or
das
rcl
push
push
mov
mov
lods
sub
std
xorb
pop
xchg
and
out
jbe
nop
dec
pop
jbe
ljmp
test
test
jle
sbb
daa
cld
sarb
sub
sti
add
mov
scas
mov
mov
cli
cmc
popa
inc
iret
cmp
sub
loope
rcll
inc
rcrl
push
jle
fadds
mov
and
add
mov
mov
jno
jl
mov
mov
test
mov
aas
and
add
rcl
stos
cmp
pop
sub
mov
pop
test
pop
xchg
mov
mov
lcall
in
add
into
mov
sbb
push
ds
mulb
ds
ljmp
fcoml
push
loop
adc
cmpl
jne
mov
icebp
loope
imul
mov
pop
adc
dec
fsubs
adcb
jns
sti
mov
add
push
movsb
sub
test
pop
and
or
cmp
repnz
inc
and
cltd
or
lahf
lret
xor
aas
and
incb
push
cmpb
loop
jl
push
daa
push
mov
sbb
ret
sar
pop
cmp
mov
and
xor
push
cltd
and
dec
sbb
stos
inc
idiv
adc
xchg
or
imul
cltd
mov
xor
xchg
xor
push
dec
outsb
mov
inc
in
fmull
jns
mov
inc
repz
scas
jne
nop
inc
ret
jb
cmc
pop
mov
icebp
in
call
adc
ror
dec
imul
loop
fisttps
fldl2e
xchg
sbb
inc
mov
arpl
mov
inc
imul
call
jg
jne
xor
into
or
mov
loop
fstpl
scas
call
sub
adcb
cmp
adc
shr
cmp
dec
loop
xor
pop
mov
xchg
jbe
add
popa
jecxz
arpl
imul
cwtl
fucomi
jns
mov
rcl
cli
jmp
mov
arpl
jle
loop
xor
aad
sahf
unpckhps
add
jp
push
sbb
outsb
das
xor
xchg
lcall
mov
sbb
inc
push
mov
cltd
sti
mov
loop
pop
mov
flds
ret
jmp
out
addl
cmp
shlb
leave
fwait
pop
xor
dec
divl
push
jnp
push
mov
sub
ficomps
adcb
test
or
xchg
rcrb
imul
out
pop
out
je
test
inc
cmp
cmpsb
out
add
aas
and
cmpsb
xchg
cmp
in
or
sbb
enter
xchg
adc
movsl
rcll
cmp
enter
and
into
push
sub
push
pop
outsl
cmp
jecxz
pop
shll
xchg
mov
pop
movsl
call
mov
call
xor
push
jp
mov
iret
pop
jae
mov
cmp
cmpsl
add
rorb
inc
scas
mov
repz
fisubrl
push
push
xorb
aas
icebp
pop
addl
jnp
push
lods
outsl
jmp
scas
cmp
jle
lcall
pushf
xchg
cmp
push
or
cmpb
push
adc
mov
fmul
fwait
int3
or
xchg
mov
enter
mov
sbb
mov
mov
scas
rclb
cmc
xchg
push
sbb
data16
cwtl
sarb
cwtl
divl
or
das
ror
pop
into
lock
ss
cld
push
fildl
sarl
xchg
std
pushf
or
push
sar
rcrb
lcall
add
xor
push
sarl
mov
ja
xchg
sub
sub
in
inc
cwtl
idiv
inc
add
data16
mov
xchg
and
mov
jp
jbe
jmp
xor
jp
jle
and
dec
cld
nop
pop
hlt
push
in
rolb
loop
cld
movsb
outsl
mull
aas
mov
fxch
push
les
cmp
inc
test
mov
push
test
cmpsb
push
adc
movsl
pop
fs
pop
lds
dec
out
push
lcall
outsl
mov
data16
lods
ss
and
sub
outsl
sub
cli
jp
dec
ficoms
sub
cmpsl
push
push
cld
in
mov
mov
shlb
rclb
dec
int3
rep
xchg
ja
js
and
mov
jnp
mov
mov
insl
mov
popf
dec
xchg
sbb
push
int3
inc
sahf
out
test
fdivl
inc
jmp
add
cs
xor
mov
ss
inc
fwait
xchg
cmp
shr
ret
mov
nop
std
xchg
mov
sahf
mov
sbb
or
call
not
cmpsb
jns
in
repnz
sub
fiaddl
jecxz
movsb
inc
out
dec
repnz
xchg
shrb
test
cld
mov
dec
mov
mov
not
pop
and
mov
mov
pop
stc
or
and
mov
sbb
call
xchg
insb
movsl
xchg
jl
jne
adc
int
mov
sbb
inc
test
adc
jmp
jmp
repnz
sbb
mov
ds
pop
dec
loop
pop
sbb
call
mov
and
mov
sti
out
push
mov
stc
dec
jne
fimull
xchg
xchg
pop
adc
mov
jne
and
inc
cwtl
xchg
incb
lea
xor
or
mov
add
jmp
sbb
mov
pop
sbb
shlb
or
mov
addr16
repz
jno
pop
stc
les
mov
push
fcomps
sub
dec
daa
rorl
sbb
nop
clc
mov
xor
mov
add
imul
mov
adc
stc
aaa
sub
sub
ss
and
pop
int
cs
jl
repz
pop
jns
cs
push
cmp
jo
pop
jmp
fbld
inc
add
cmp
lock
xor
rorl
cmp
lea
and
and
and
movsl
sti
ljmp
rcll
aad
pushf
ds
in
pop
pop
sbb
or
push
cmp
adc
lods
mov
adc
or
push
insb
mov
int
test
sbb
lods
dec
dec
das
leave
mov
mov
or
pop
xor
xchg
and
test
push
ljmp
xchg
mov
inc
mov
and
lahf
mov
xchg
xor
xor
sbb
mov
mov
sub
mov
cs
mov
pop
jns
mov
cs
das
and
dec
adc
gs
add
je
inc
push
stos
ljmp
sti
mov
jl
pop
stos
ret
fimull
out
inc
adc
lds
addr16
adc
push
mov
ja
ljmp
mov
and
lea
sbb
out
and
lds
lret
call
push
daa
testb
icebp
push
insl
push
sub
mov
ss
mov
std
mov
sbb
loop
daa
add
stos
inc
xor
jmp
pop
push
inc
adc
scas
imul
xor
test
cld
and
dec
sbb
cmp
adc
mov
jl
jns
pop
icebp
clc
mov
add
jbe
es
cltd
jg
sbb
push
push
ss
adc
add
sub
in
pop
pop
ljmp
xchg
mov
mov
inc
push
add
sub
adc
jmp
or
cwtl
cs
shll
lahf
pop
lods
call
pusha
jb
sub
mov
addl
in
movsl
popf
cld
pop
dec
addr16
lods
push
aad
dec
fcmovbe
stos
repz
xor
mov
xchg
fs
scas
and
cmc
pop
dec
sbb
adc
cli
jmp
jne
dec
pop
cwtl
insl
jge
and
xchg
mov
divb
push
cmc
adc
xorl
testl
xor
in
xchg
adc
popa
loopne
cmp
mov
outsb
loopne
in
ja
addr16
sub
cmp
pop
in
shrb
fisubrl
sbb
xchg
call
cli
inc
pop
jb
faddl
scas
popa
lcall
push
ss
mov
ret
sub
stc
mov
fisttpll
mov
push
add
push
dec
cmpsl
xchg
dec
call
sub
mov
dec
inc
imul
mov
movsb
xchg
xchg
test
enter
push
mov
dec
shl
xor
jp
add
insl
push
rcrb
mov
insl
inc
inc
xchg
movsb
fstl
stos
or
imul
dec
add
daa
jmp
mov
pop
je
in
and
shlb
sbb
inc
outsl
fisubrs
sub
add
xchg
push
xor
add
dec
fists
int3
loop
lahf
mov
pop
mov
ljmp
std
or
jg
sti
movsl
js
fxch
inc
shrb
or
jbe
dec
add
mov
lods
roll
push
je
dec
test
cli
push
sti
inc
movsl
mov
rorl
sub
add
jne
push
pop
fnstcw
adc
jl
mov
ret
and
fnstcw
test
and
fdiv
insl
mov
or
out
clc
and
mov
lods
pop
xchg
cmpsl
sub
cmp
negb
add
imul
test
sbb
mov
push
or
adc
xor
or
lea
cmpsb
dec
fstpl
movsb
inc
or
mov
clc
dec
add
lret
in
mov
add
popa
fucom
lods
outsl
in
repz
adc
mov
sarb
xchg
pop
pop
aaa
pushf
ja
repnz
mov
dec
fldcw
and
mov
mov
shrl
in
pop
jnp
inc
sub
sub
push
es
lods
shlb
jne
outsb
mov
mov
je
imul
in
lods
add
repnz
or
adc
pop
mov
loop
bound
and
std
lret
xchg
outsb
js
jo
lret
cmpsb
fildl
mov
test
roll
pop
mov
pusha
lcall
adc
ret
mov
mov
xlat
jnp
mov
mov
aam
mov
adc
aaa
xchg
push
fbld
pop
and
scas
testl
je
or
add
adc
sub
push
pop
stos
out
mov
adcb
inc
xorb
cmp
cmpsb
movsb
dec
adc
jp
mov
cmp
push
test
aaa
xchg
pop
imul
shlb
stos
outsb
aad
sbb
fs
scas
incb
jno
inc
out
push
gs
mov
mov
mov
nop
push
loop
jle
pop
sbb
das
das
cs
lock
fcom
test
pop
fsubs
in
jo
cmp
xor
and
mov
xchg
cmpl
mov
jmp
aas
loopne
push
ficomps
gs
daa
out
clc
jb
orb
jle
mov
sbb
xor
mov
mov
shlb
cmp
pcmpeqb
fmul
push
adc
popf
inc
or
push
jg
arpl
shlb
test
mov
mov
iret
sbb
sub
mov
out
push
in
imul
in
pop
aam
and
inc
ljmp
mov
jae
idivb
test
add
imul
stos
sub
push
xor
fbld
mov
in
add
xchg
push
sub
sbb
ja
xchg
pop
lcall
jge
push
lods
nop
mov
loop
imul
mov
inc
test
push
hlt
scas
stos
or
jge
mov
mov
inc
xor
jp
xchg
ljmp
das
xor
push
sub
dec
sub
mov
in
pop
inc
fsincos
hlt
and
sbb
and
dec
cmp
jne
scas
adcl
hlt
call
pand
jg
mov
mov
and
push
pop
es
mov
sti
iret
sahf
jl
sub
test
xchg
pop
hlt
enter
xchg
and
call
je
movsl
mov
mov
or
iret
inc
inc
aam
mov
sarl
rcr
das
push
decb
inc
cmp
jae
adc
mov
rorl
jp
divb
gs
cmp
inc
mov
aam
sub
call
push
and
pop
mov
mov
inc
fimull
lods
ljmp
inc
hlt
xor
or
push
ficomps
sub
inc
test
lock
sbb
mov
xorl
aad
dec
fidivl
fs
scas
daa
lahf
jb
jl
mov
and
mov
bound
sub
xchg
sbb
mov
mov
and
mov
lcall
jmp
lods
es
cmp
test
mov
ficomps
sbb
mov
xchg
in
lds
adc
int3
mov
cmpsb
in
and
xchg
add
adc
push
outsb
dec
data16
shlb
cmp
jmp
roll
cmp
out
xor
jb
push
pop
into
inc
clc
in
ds
and
adc
pop
adc
adc
xchg
mov
push
in
test
mov
xor
fxch
sbb
out
in
adc
inc
push
xor
in
jmp
mov
aaa
or
sbb
inc
lds
fsubrs
cltd
xchg
int3
adc
lret
mov
aam
mov
add
sbb
lods
fxch
test
jbe
insb
lret
push
mov
orl
jbe
popl
sub
movsb
ret
mov
addr16
xchg
or
test
jecxz
jecxz
mov
fwait
jne
pop
aad
cmp
cld
mov
or
jp
shlb
in
shl
mov
in
or
repnz
pop
jns
lods
ret
mov
jmp
cs
in
movsl
push
popa
jmp
divl
int3
inc
jecxz
xchg
mov
xor
or
and
push
mov
inc
lds
scas
data16
jecxz
push
out
jo
xor
jne
jb
cmp
test
cs
cwtl
insl
imul
pop
xor
fcmovu
cs
sub
daa
sbb
dec
gs
push
movsl
dec
lret
xchg
jns
les
ret
cmpsb
arpl
xchg
daa
push
inc
push
repnz
pusha
xor
pop
sub
ffree
sub
xchg
mov
aas
and
push
shr
add
mov
sbb
fmul
bound
aad
sbb
fsubrl
mov
adc
psubusb
enter
mov
inc
xchg
xchg
aad
adc
arpl
cmpsb
pop
ret
lahf
cmp
push
ret
jp
in
mov
inc
push
pop
daa
jl
jmp
push
or
mov
mov
jecxz
or
xor
fistpl
in
out
jmp
mov
and
xchg
out
adc
lock
mov
nop
or
xor
jae
fldenv
aad
mov
mov
cmpsl
pop
out
aam
mov
push
test
sar
add
dec
inc
icebp
sub
push
jne
and
jmp
mov
gs
test
add
dec
pop
das
js
pop
mov
lods
pop
mov
xchg
jns
aaa
loope
mov
repnz
pop
insb
aas
popf
mov
mov
sbb
push
mov
jo
jge
aad
jg
repz
sbb
jmp
inc
mov
inc
xchg
cmp
sub
fyl2xp1
nop
jo
dec
insl
lock
ss
inc
inc
rclb
xor
sbb
dec
or
dec
xor
cmp
or
push
popa
in
pop
inc
hlt
xchg
sbb
push
arpl
dec
lahf
push
hlt
cs
inc
and
je
ffree
sub
sahf
jbe
cmpsl
shrb
xor
repz
int3
xchg
cmp
insl
cs
push
pop
adc
fcoms
pop
cmp
adc
inc
insb
push
cmp
dec
inc
ljmp
push
pop
lds
shll
and
xor
and
inc
add
push
mov
or
and
bound
add
xchg
mov
ljmp
ljmp
mov
pop
fsubs
enter
sub
test
xchg
das
inc
mov
jb
in
mov
mulb
xchg
dec
add
fwait
rorl
test
mov
sbb
sbb
push
add
xor
jmp
test
mov
xchg
clc
lahf
pushf
pop
add
xchg
sarb
loop
loopne
mov
or
sahf
clc
sahf
movsl
inc
adc
jne
loopne
fsubl
mov
je
inc
scas
orb
out
stc
inc
pop
sub
dec
sahf
jle
dec
mov
imul
jbe
adc
sbb
in
and
lods
fisttps
dec
fs
cmpsb
or
xor
sarl
push
mov
push
cmp
aaa
mov
push
les
repz
push
cmp
mov
mov
pusha
sub
shl
pop
loope
push
inc
aam
and
mov
sarl
jno
push
mov
fisubs
std
fcmovu
roll
pop
sbb
std
add
xchg
int3
mov
movsl
cmp
cmp
rcrb
mov
mov
cmp
iret
data16
pop
cmpsl
xchg
mov
in
cmp
mov
sub
repnz
sbb
es
stos
sub
loope
rcrl
leave
nop
call
cli
xchg
or
lock
popa
push
out
xor
aas
pop
ss
test
mov
aam
movsl
xchg
and
in
pop
and
ljmp
xchg
dec
and
mov
fdivr
pminsw
roll
daa
or
dec
pop
pushf
mov
lret
cmc
inc
fucomi
fsubs
xlat
sbb
insb
call
insl
test
adc
fstl
sub
pop
or
mov
pop
imul
jns
xor
les
insb
jl
push
xor
mull
add
inc
add
ret
in
popa
fidivs
mov
out
hlt
sarb
cld
mov
add
jg
aaa
adc
push
and
and
mov
push
pop
pop
dec
add
cli
and
ds
je
in
pop
out
dec
nop
and
movsl
sti
je
dec
fbld
loope
dec
mov
into
or
xor
xchg
sub
add
cmpsl
cmp
xor
mov
outsl
dec
loope
daa
mov
sub
lea
lahf
cmp
imul
out
and
jmp
test
sbb
into
shr
cmp
insl
fsubrl
nop
hlt
add
iret
mov
mov
inc
in
adc
xor
pop
das
dec
inc
xchg
inc
sub
mov
push
mov
mov
xchg
fidivrs
push
loope
dec
pop
insb
mov
pop
jns
sbb
xchg
and
lret
adc
mov
pushf
sub
mov
push
or
test
sub
daa
pushf
adc
nop
pusha
push
sub
js
fsubr
enter
jmp
push
inc
sbb
dec
psubw
mov
ret
pushf
icebp
xchg
push
stc
imul
mov
enter
pop
mov
xchg
shll
xchg
and
popa
or
ljmp
popf
cs
fisttps
dec
sbb
lahf
xor
add
js
jns
sarl
and
mov
ss
lds
dec
mov
or
enter
lds
bound
mov
inc
push
in
out
fcmovb
xchg
pop
loop
sub
xor
pop
and
loopne
loopne
dec
push
std
out
pusha
and
xchg
and
jo
adc
pop
cmp
mov
nop
xor
jp
adc
hlt
loope
rcrl
sbb
lds
mov
push
clc
mov
push
dec
mov
scas
mov
data16
or
pop
adc
cmpsb
scas
push
adc
stos
xlat
cmpsb
jbe
js
loop
ljmp
stos
scas
lds
xor
cmp
div
addr16
push
adc
mov
xchg
xchg
xchg
repz
push
mulb
mov
sub
dec
push
push
fistps
mov
pop
mov
add
mov
mov
mov
in
dec
jecxz
in
mov
pop
fldt
pop
fs
hlt
or
pop
xchg
mov
cmp
jns
jno
sbb
out
fmuls
xor
xor
mov
bound
bound
mov
jmp
sbb
dec
jge
jbe
jmp
jecxz
xchg
or
repz
lret
aas
movsb
inc
jb
push
subl
ljmp
jecxz
adc
xchg
scas
loop
dec
addr16
dec
mov
adc
test
subl
clc
or
aam
push
adc
int
imul
gs
out
int
mov
push
aaa
shl
mov
mov
xchg
mov
sbb
fwait
push
mov
mov
cmp
xchg
stos
sahf
sbb
push
cmc
fimuls
in
addr16
ja
imul
sbb
stos
add
cmc
lret
sti
sub
outsl
and
xchg
jg
fdivrl
xchg
mov
shrl
mov
mov
out
add
jge
pop
cmpsl
ret
ja
clc
ret
inc
or
lcall
xchg
dec
xor
test
lret
shlb
jmp
add
loope
rcll
loop
lock
loope
pop
xchg
mov
mov
jmp
xchg
pop
loopne
dec
lcall
loopne
lcall
pop
and
pop
aas
add
pop
sbb
bound
or
aad
sbb
adc
sbb
push
mov
push
jmp
lret
pop
loope
mov
and
aam
rcr
sbb
cmpsb
cli
loop
and
adc
cld
mov
push
adc
push
lea
mov
pop
insl
outsb
adc
sarl
sti
or
sub
in
int
call
jp
mov
adc
and
ds
fnstcw
idivb
jne
nop
loope
repz
mov
enter
popf
jns
inc
ret
cmp
sbbl
leave
dec
add
dec
mov
inc
mov
dec
cmp
adc
movsb
sbb
nop
dec
je
lcall
xchg
xchg
enter
mov
fldenv
add
sarb
popa
lahf
mov
push
add
in
insb
out
ret
xchg
sub
inc
dec
or
mov
and
pop
mov
leave
xlat
cmc
pushf
mov
pushl
lahf
mov
int
adc
sahf
dec
or
loope
out
test
or
xchg
repnz
jmp
adc
sub
inc
jnp
mov
sub
lcall
outsb
jp
lock
jp
push
pmuludq
movsb
sbb
jo
dec
stos
xor
cltd
fimuls
adc
mov
inc
pop
scas
jg
mov
inc
gs
out
lahf
cmpl
gs
call
orb
daa
out
insb
cmpsl
fsubrs
cwtl
mov
jmp
jg
out
sarl
jo
popl
xchg
mov
sbb
push
xor
or
pop
mov
and
movsb
out
dec
ret
stc
or
mov
mov
mov
add
arpl
cli
stc
pop
je
adc
lret
iret
aad
lcall
and
jecxz
js
sbb
mov
std
sbb
das
not
and
mov
icebp
cmp
cltd
adc
mov
sbb
bound
out
cs
sub
loopne
out
sub
jg
pop
shrb
sti
xchg
or
or
data16
dec
aad
fs
int
dec
das
std
mov
js
inc
imul
int
lahf
mov
xor
fisttpl
sbb
fptan
adc
sbb
addr16
sbb
mov
mov
add
into
or
shr
incb
call
out
mov
js
sub
mov
stos
and
int
jmp
mov
and
enter
imul
and
mov
fisubl
jo
cmp
xlat
fwait
ljmp
cmp
cmp
lds
add
cmp
sub
add
ret
sbb
outsb
ss
movsl
cwtl
sti
sbb
mov
bound
lret
js
lds
jmp
pop
jbe
pushf
in
fiadds
dec
cmp
sbb
push
insl
mov
jno
shlb
mov
fsubrs
cmpsl
jnp
push
push
out
sbb
in
stos
xchg
add
jns
cwtl
cmp
inc
mulb
push
psubsw
ret
lods
stos
mov
repz
and
xchg
dec
stos
mov
push
clc
jmp
in
test
movsl
imul
aad
inc
mov
mov
out
ljmp
rorb
mov
js
xchg
lret
cmpsb
jb
test
push
sbb
test
and
add
or
insl
pop
loop
sub
xchg
and
jp
mov
sbb
push
or
js
test
les
adc
sub
pushl
ret
pop
pop
insb
pop
lea
arpl
push
enter
pop
cwtl
leave
lcall
adc
mov
popf
mulb
out
stos
adc
sub
movsb
lea
arpl
loopne
push
push
jnp
outsl
xchg
lret
fcoml
dec
jb
fistpll
jae
xchg
notb
iret
stos
fisubs
mov
and
iret
inc
loop
mov
rcrb
cmpsb
arpl
xchg
jae
mov
lock
mov
push
movsb
and
push
xlat
mov
jge
sbb
ja
mov
loopne
push
mov
pop
rorl
cltd
dec
xchg
xchg
cwtl
push
pop
iret
icebp
hlt
cmp
insl
wbinvd
jecxz
les
jne
push
sub
movsb
xchg
les
movsb
mov
jl
adc
inc
jns
sbb
adc
mov
scas
add
dec
sahf
pop
lds
mov
jg
adc
bound
mov
adc
pop
xor
mov
jg
or
add
rorl
mov
pop
iret
imul
sbb
loopne
aam
mov
rolb
out
in
fists
pop
cmp
add
sbb
fwait
ret
or
cmp
mov
push
and
fiadds
inc
sbb
mov
cmp
cmp
sbb
push
jmp
push
xchg
cmpsb
xor
sbb
rcrl
or
dec
repnz
sub
sbb
jg
neg
jne
scas
mov
inc
adcb
inc
jl
cmp
cld
inc
inc
pop
mov
mov
fnstenv
xorb
dec
aad
cmp
xor
repz
test
xchg
add
sti
xchg
add
push
cmp
jl
cmp
addl
dec
xchg
shll
xor
int
stos
in
add
out
mov
rcrb
lods
int
lock
and
idiv
std
push
cmp
inc
cli
stc
repz
in
fstpt
xor
mov
push
adc
push
jle
out
mov
divl
lcall
xchg
inc
ss
dec
cltd
out
stos
fwait
inc
orl
out
push
cmp
pop
xchg
inc
lods
xor
lods
push
leave
mov
cmpsl
mov
or
jge
xchg
add
test
sti
enter
loope
dec
add
sbb
cmpsb
xorb
sbb
push
in
cmp
inc
std
iret
mov
idivb
loopne
out
cwtl
cwtl
cmpsl
inc
decb
mov
lock
cmp
dec
repnz
arpl
inc
stos
out
xor
jbe
out
not
sub
insl
xor
iret
jne
inc
xor
fistpl
in
pop
popf
jmp
adc
out
imul
lcall
movsb
cmpsb
mov
inc
jmp
sub
pop
adc
sbb
xor
inc
and
pop
jne
cmp
test
call
les
jbe
lods
and
jmp
and
xchg
or
das
inc
pop
out
cmp
shrl
sub
aas
push
mov
jb
jle
push
cmp
out
inc
adc
in
filds
rcl
out
pop
xchg
dec
adc
std
sti
push
xor
aaa
or
cmp
xchg
hlt
ss
cmp
sbb
dec
jo
adc
mov
in
sbb
fstl
mov
xchg
xchg
dec
and
cmpsl
in
and
flds
aas
repz
shrb
lods
fistl
xor
push
or
sub
lahf
lret
lahf
fbld
dec
push
cmc
aaa
add
inc
cli
pop
cmpsb
in
aad
mov
rolb
add
jno
jp
sarl
out
jb
sbb
pop
shrl
and
dec
idivb
stos
loop
les
adc
imul
or
mov
xchg
pop
fadds
push
and
hlt
xor
add
popf
sub
push
les
push
lods
add
shlb
xchg
jb
adc
jle
dec
sti
sub
push
out
cmp
scas
fdivl
adc
mov
lret
mov
xor
sub
test
adc
addr16
and
leave
sbb
xchg
popf
add
xor
clc
mov
cwtl
lahf
or
gs
cld
cmp
fs
jne
repnz
das
cld
orb
xor
sbb
into
outsl
sti
fwait
pop
dec
push
lcall
and
xchg
test
pop
pop
push
stos
inc
negl
pop
ja
push
and
loopne
rorb
add
add
gs
jno
sub
shl
ret
mov
adc
pushf
jmp
outsl
out
lret
das
sub
inc
ja
jge
mov
sbb
iret
sarb
test
xor
dec
into
xchg
add
pop
aas
mov
jecxz
fwait
scas
push
push
mov
add
inc
and
inc
out
push
xchg
jb
daa
mov
rolb
cmp
lret
js
vpcomq
loopne
sbb
jl
dec
inc
clc
and
xor
hlt
stos
inc
sbb
add
xchg
and
add
enter
add
xor
and
imul
out
mov
mov
mov
bound
ret
ret
lret
and
or
xchg
arpl
cmp
das
sbb
hlt
and
jl
lock
and
xor
pushf
adc
jb
test
push
mov
testl
aaa
ja
inc
xor
sti
push
fcomps
fwait
mov
xchg
dec
movsb
test
loop
aad
ja
xchg
adc
pushf
xchg
les
icebp
jo
fucomi
xchg
mov
rcr
pusha
xchg
ja
add
sbb
mov
ja
aaa
push
sub
mov
xorb
xrelease
popa
adc
jnp
clc
and
mov
dec
jg
mov
sub
rorl
adc
dec
xor
out
outsb
ds
adc
xchg
mov
test
push
imulb
adc
fnsave
ljmp
or
mov
outsl
pop
es
rolb
nop
add
jle
jp
repnz
pop
mov
aas
popf
leave
shlb
push
decl
xorl
andb
adc
dec
ss
push
mov
popf
xchg
lret
and
jecxz
pop
and
insb
rolb
div
cmpsb
cmove
shlb
aad
push
push
in
xor
push
cmpsb
fildl
xchg
cwtl
mov
push
pushf
jnp
dec
data16
mov
push
add
inc
shll
jnp
pop
mov
cmc
sbb
dec
lea
push
aaa
mov
dec
mov
cld
inc
int
sbb
pushf
sub
aam
ficoml
insb
aaa
cmp
pop
or
aas
xor
add
mov
xor
dec
test
inc
add
and
dec
dec
sbb
test
inc
ret
sub
jne
adc
ds
fistpl
inc
push
jo
jnp
add
inc
mov
mov
xor
pop
cmp
scas
cmp
ja
mov
stc
adc
add
pushf
movsb
cmc
adc
hlt
hlt
and
movsl
xchg
xchg
xor
daa
inc
inc
inc
call
repnz
call
imul
lock
ljmp
cmp
outsb
out
jne
mov
jbe
sbb
movsb
mov
das
in
clc
mov
push
add
mov
sub
and
push
and
test
clc
cwtl
mov
lret
lds
cltd
scas
pop
push
jle
mov
loop
popf
aad
testb
dec
push
pop
test
iret
insl
jne
repnz
ficomps
push
lea
pop
loop
sar
mov
push
dec
sbb
mov
mov
fisttpll
lahf
push
pop
les
test
jge
push
jl
add
and
and
xchg
in
dec
test
fists
or
in
fs
mov
mov
jecxz
xor
xchg
adc
sbb
add
pop
pop
inc
outsl
cld
xchg
inc
mov
fsubrs
dec
jne
xchg
in
push
cmp
fldcw
aad
xchg
addl
mov
inc
jge
add
cmpsb
jns
das
xchg
adc
sahf
jg,pt
inc
pop
push
xor
cs
mov
movsb
mov
xor
push
divl
jbe
shl
inc
fcmovnu
mov
mov
fstpt
jg
lret
jp
xor
daa
hlt
jp
jp
popa
shl
pop
scas
bound
sub
inc
stos
sbb
repnz
or
jb
and
sbb
ror
pop
jmp
insl
sub
and
xchg
push
rorb
jbe
nop
inc
cmp
cmc
inc
pop
je
sbb
push
pop
stos
mov
xchg
cmp
add
and
lds
subb
jl
cmpsb
mov
das
ds
scas
jnp
call
cwtl
addl
adcl
xor
mov
stos
faddl
test
ja
mov
popa
movsb
xor
divb
inc
mov
ss
add
add
cld
stc
popl
sahf
sarl
and
xchg
cmp
and
int
push
div
push
stos
mov
xchg
sti
std
mov
push
cmp
inc
pop
sbb
sub
or
sbb
jmp
subl
pop
out
adc
xor
movsl
mov
nop
dec
fxch
sahf
dec
outsb
xchg
adc
movsl
enter
sbb
ss
ljmp
fisubrs
inc
pop
pushf
shll
adc
mov
and
imul
xor
push
out
or
push
add
jp
push
dec
ss
lods
jl
jae
sub
dec
into
push
out
icebp
adc
dec
dec
jns
std
lock
dec
sbb
sbb
jp
sub
push
jmp
mov
negb
push
divl
or
out
daa
test
lds
aaa
out
outsb
and
dec
ss
test
out
stos
inc
lods
xchg
shrl
stc
fsubs
push
mov
cmc
fidivrs
loope
movd
ds
int3
mov
test
data16
or
fiaddl
sbb
popa
lds
sub
mov
xor
mov
test
cmpsb
jo
sbb
popa
sub
push
jecxz
loop
mov
insl
mov
test
scas
push
out
inc
adc
push
mov
rcrl
andb
fstpt
sub
push
inc
and
push
decb
jnp
sarl
jg
repnz
xchg
lahf
mov
or
jmp
jl
outsb
inc
cli
jmp
cmpsb
jno
and
xchg
lea
sti
inc
and
iret
out
or
dec
clc
test
lock
push
sar
insl
insl
add
xchg
sbb
xor
jle
ror
inc
stos
jge
lods
inc
lods
sub
stos
sar
bound
inc
inc
scas
std
ficoms
ljmp
push
dec
rcl
into
roll
mov
jb
or
inc
xor
push
ficoml
ja
push
add
aas
cwtl
sbb
test
push
test
adc
lret
fmul
lods
notb
scas
xchg
scas
xchg
push
push
mov
addr16
mov
pop
xor
cmc
or
adc
jle
mov
add
adc
jecxz
jno
jp
dec
xchg
sbb
push
bound
stos
sub
stc
sbb
out
pop
fildl
incl
clc
push
add
scas
and
or
cmp
ror
xor
cmove
test
out
xchg
push
lret
mov
cmp
sti
adc
pop
inc
pushf
leave
ret
push
xchg
mov
cmp
popa
scas
shlb
inc
fwait
push
and
aad
sar
sbb
in
insl
xor
adc
or
xchg
push
jnp
ja
mov
insl
jl
inc
mov
cmpsl
or
cmp
jns
lret
fcoms
hlt
je
fcompl
add
cmpsl
jns
add
leave
cmp
push
and
jge
shrl
bound
sbb
jo
int3
jns
cmpsb
or
xor
jle
pop
and
pop
addr16
pop
add
push
fcomip
pop
repnz
mov
dec
push
aas
push
cld
gs
mov
xchg
xchg
or
inc
jbe
inc
mov
ret
adc
cmp
jge
cld
push
loop
mov
arpl
add
mov
aaa
pop
xor
sar
xor
int
push
add
jb
fidivrl
lahf
dec
out
fimuls
mov
les
jnp
sub
sbbb
mov
xchg
adc
inc
loope
add
fcompl
subb
fs
out
arpl
jnp
xchg
pop
fmul
les
pop
daa
mov
leave
icebp
pushf
xchg
adc
xor
or
mov
adc
or
mov
mov
outsl
cltd
jnp
pop
int3
push
jle
push
in
mov
test
cmp
imul
mull
repz
xchg
jg
je
lea
das
fmul
inc
out
mov
std
test
sub
pop
popa
sub
jae
pushl
xlat
mov
and
xor
push
fidivs
push
adcl
adc
lods
sbb
cltd
xlat
ja
lahf
cld
es
push
or
pop
cld
stos
mov
push
cmpsl
in
repnz
jg
call
adcb
push
mov
mov
xor
icebp
shrb
mov
push
push
inc
jmp
pop
pop
push
push
arpl
or
out
mov
outsb
mov
pop
xor
lods
rcll
popa
cmpsb
add
pop
push
inc
sub
or
xchg
insl
mov
push
push
pop
aaa
sub
pop
dec
leave
push
fisttpl
cwtl
fs
aad
adc
test
stos
mov
sbb
push
iret
jp
jbe
lock
xlat
fstpl
orb
pop
xchg
sbb
int
mov
dec
inc
xchg
and
sub
ss
sar
fmuls
mov
negb
pop
sub
jg
scas
push
adc
xor
and
mov
lcall
es
iret
shlb
ds
jmp
decl
add
lcall
in
push
sub
loopne
xor
push
jbe
pop
stos
mov
pop
mov
jb
jle
sbb
push
sbb
fsubs
pop
mov
pop
push
adc
out
jb
or
pop
repnz
iret
fld1
loop
xor
outsb
adc
jg,pt
iret
out
mov
sarb
xor
in
and
psrlw
push
or
dec
push
mov
jge
dec
mov
mov
hlt
xchg
fdivr
jp
fbstp
loopne
sahf
mov
add
in
neg
or
and
pop
push
xchg
mov
jb
sar
in
sbb
shlb
dec
out
subl
inc
jmp
aas
or
cmpsl
push
cld
push
bound
es
aas
push
xchg
fdivl
cwtl
mov
lahf
jmp
jp
cmp
add
mov
rorl
pop
in
jbe
cmpsl
xor
sahf
shr
test
mov
xchg
sahf
aad
mov
and
push
inc
adc
lret
lock
lahf
stc
pushf
and
sarl
test
pop
in
mov
sbb
jle
and
and
lods
mov
std
mov
out
pop
jecxz
sub
push
xchg
icebp
shr
mov
aam
mov
xchg
xchg
adc
or
pop
imul
xchg
and
jne
or
sub
sub
dec
in
into
mov
jb
mov
and
mov
and
pop
adc
mov
js
aam
addl
cmp
fsubr
pusha
push
fcomps
mov
mov
test
es
pushf
xor
nop
sub
jae
push
out
scas
mov
jecxz
jns
cmc
aad
sti
inc
shrb
nop
mov
scas
sbb
dec
je
data16
in
outsl
mov
push
and
test
stc
push
inc
dec
cmp
sti
jno
stc
and
lahf
arpl
popa
jecxz
lods
sbb
cmp
push
sti
pop
imul
xor
jo
shll
mov
push
fwait
int
mov
in
and
push
daa
inc
stos
dec
out
cltd
inc
pusha
push
or
das
sarb
enter
hlt
adc
in
adc
sub
cmp
imul
jne
lret
fsubs
rorl
mov
int
cs
outsb
sbb
mov
fiaddl
fbstp
adc
sbb
and
sti
pop
pop
or
xor
xchg
lea
mov
addr16
clc
cs
mov
adc
jb
loopne
or
loope
arpl
push
aad
adc
xor
insl
dec
mov
clc
mov
push
outsl
xchg
sbb
jo
pop
xor
sbb
nop
mov
adc
or
mov
iret
adc
btc
mov
cmpsl
cmpl
sub
mov
test
pop
stc
testl
add
imul
outsl
dec
push
jae
test
jmp
push
ret
xor
outsb
pushf
dec
div
bnd
mov
icebp
adc
shlb
pop
daa
arpl
lods
shll
lret
movb
mov
inc
dec
push
fisubs
dec
push
outsb
fstpt
popa
sbbl
imul
lahf
mov
out
hlt
push
out
ret
js
inc
lret
stc
jo
push
addl
and
std
adcb
xor
add
mov
addr16
xor
loop
mov
dec
mov
lret
xchg
test
push
jnp
pop
mov
andl
jg
shrb
jae
add
sarb
xor
jmp
xor
xchg
cmpsl
xor
or
pop
gs
cmp
jmp
stc
mov
es
mov
and
add
mov
cltd
adc
sub
ja
decb
aaa
or
repz
mov
adc
fstp
scas
imul
pop
cmp
outsb
out
sub
les
jnp
movsb
push
push
fsubl
sbb
adc
push
pushw
xchg
sub
es
cli
cmp
movsl
mov
fildl
gs
aaa
mov
es
out
in
fisubs
test
mov
iret
xchg
pushf
shrl
push
in
sbb
fiaddl
xlat
push
hlt
jmp
mov
pop
sbbb
stc
or
test
or
xor
rcll
jno
mov
lidtl
rcll
nop
cltd
rcrb
mov
xlat
mov
dec
xor
stos
das
cmp
mov
leave
xchg
loope
lods
lcall
pop
add
and
and
loope
xchg
fbld
mov
push
dec
jmp
cwtl
clc
sbb
js,pt
sub
lahf
dec
dec
jns
jl
frstor
cld
xchg
fisubrl
mov
push
inc
xchg
es
cmpsb
out
lret
push
bound
clc
in
negl
decl
mov
dec
push
mov
dec
lea
cmp
mov
mov
xorl
and
test
sub
and
jno
mov
add
ja
ret
jecxz
cld
pop
mov
mov
addb
cmp
pushf
cmpsb
iret
cmp
inc
mov
mov
mov
scas
add
movsb
adc
imul
add
push
xor
ds
cmp
add
push
hlt
cmp
push
divl
dec
or
idivb
pop
jne
into
xchg
je
in
imul
push
js
dec
cmc
insl
into
outsl
popf
je
test
in
mov
mov
mov
pop
hlt
pop
pop
sbb
jno
mov
es
pop
cmp
inc
push
pushf
xor
and
jl
mov
stc
dec
outsl
scas
subl
mov
pop
sub
lret
pop
rorl
mov
ret
sub
stc
clc
mov
jmp
je
dec
dec
js,pt
inc
mov
jne
ljmp
add
mov
ret
outsl
pop
pop
sbb
int
pop
mov
insl
or
repnz
mov
mov
pop
sbb
test
lock
ss
sub
xor
inc
lahf
andl
pop
daa
pop
cwtl
and
test
popf
cmp
adc
jge
sbb
jmp
push
pop
push
xor
aas
mov
jge
mov
addl
stc
lahf
inc
lock
xor
mov
xchg
pop
add
jmp
pop
lret
mov
testl
lock
cmc
mov
insl
das
mov
dec
mov
iret
in
hlt
mov
adc
fndisi(8087
mov
sbb
loopne
lds
pop
dec
ret
jae
out
mov
aad
sbb
test
idiv
sub
mov
jne
rcr
push
dec
int3
mov
mov
push
fnstcw
mov
mov
hlt
add
xchg
int
out
lods
inc
xadd
ret
pusha
push
cmp
lea
scas
lret
int3
arpl
aas
and
fldl
xchg
adc
cmc
xchg
jnp
lds
lods
cltd
jno
nop
ljmp
fwait
sub
jne
xchg
das
sahf
pusha
sahf
dec
es
ret
sarl
out
sahf
push
jbe
lcall
data16
clc
ss
enter
test
divb
out
aaa
cld
mov
inc
push
sub
pop
pop
pop
xchg
iret
insb
push
sti
mov
scas
adc
jecxz
fbld
loopne
mov
pop
mov
out
push
push
pop
and
and
adc
mov
loope
inc
shlb
stos
lret
sti
mov
js
add
pop
xor
jne
pop
inc
or
adc
push
xchg
aaa
test
dec
vcvttpd2dqy
fstp
icebp
dec
call
inc
pop
in
pop
cmpsl
out
xchg
mov
or
dec
add
iret
jp
lcall
xlat
xchg
shlb
push
int3
into
or
into
shl
pop
add
test
mov
mov
adc
cmpb
sub
sbb
push
cs
out
loope
jo
outsb
stos
hlt
insb
lahf
xor
mov
int3
inc
pop
inc
aas
jp,pt
cld
mov
in
mov
cmp
outsb
mov
add
jne
clc
or
imul
push
dec
sub
push
mov
xchg
std
xchg
jmp
adc
sarl
add
out
into
cmp
mov
mov
shll
out
lret
pop
push
insl
ret
xchg
mov
jge
add
pop
clc
pop
push
cwtl
scas
insb
mov
adc
push
inc
mov
jp
movsb
pop
mov
and
loope
cmp
push
das
xchg
test
mov
xchg
jge
pop
push
xor
out
and
aad
andb
push
clc
iret
icebp
mov
xchg
mov
daa
adc
insb
testb
or
out
jae
xor
jl
dec
les
test
xlat
mov
mov
into
adc
lds
repz
pop
or
lcall
jno
fs
pushf
pop
inc
jg
arpl
mov
push
mov
mov
ffree
hlt
popa
inc
and
pusha
pop
add
inc
inc
or
mov
xor
add
std
sub
gs
dec
shrl
cwtl
cmp
push
cltd
jl
loope
test
loope
adc
mov
mov
sti
movsb
dec
scas
inc
adc
arpl
add
movsb
aam
int3
fmull
mov
lcall
pop
shll
pushf
push
jbe
dec
subl
mov
dec
inc
adc
or
out
cmp
into
fidivs
jne
ret
xor
popa
adc
std
cli
int3
test
dec
jmp
mov
adc
fldcw
sub
add
push
sbb
dec
lods
mov
xlat
loopne
shl
mov
rcr
aas
jnp
in
push
jb
xchg
adc
push
pop
stc
jnp
in
mov
jmp
nop
in
pop
aas
cwtl
adc
out
fadds
call
aam
imul
pop
inc
jns
clc
mov
repz
mov
movsl
xor
popf
cmp
enter
inc
stos
ret
mov
lcall
sub
mov
pop
add
out
lret
or
cs
lock
dec
imul
cltd
cmc
jecxz
iret
cmp
stos
inc
sub
fisubs
jae
movsl
cli
int
frstor
and
movsb
les
fwait
out
mov
lock
aas
rclb
in
pop
pop
push
pusha
cmp
fimuls
clc
dec
cmpsb
xchg
mov
fsubr
mov
dec
in
xor
adc
xchg
xor
in
jmp
push
jno
adc
out
stos
xchg
pop
incb
aam
jp
xlat
pop
ret
fcoml
adc
scas
jl
mov
ret
xor
fdivs
sahf
out
cmp
daa
xor
pop
pop
sarb
test
in
int3
dec
ficompl
and
idivl
dec
pop
test
fwait
bound
movsl
mov
imul
arpl
cwtl
jecxz
outsl
ror
pop
fwait
pop
in
aam
dec
lsl
std
jo
xchg
lahf
jmp
enter
rorl
leave
push
lret
jl
fwait
cmp
sbb
inc
loope
mov
inc
test
sbb
sbb
xlat
fwait
jno
add
pop
fnstcw
pop
popa
or
in
sbb
pop
pop
call
push
cltd
out
pop
mov
andb
sub
sbb
notl
push
mov
jle
addl
push
mov
add
mov
pop
and
aas
cmc
repz
xor
loopne
outsb
mov
cmp
xchg
enter
or
outsl
xor
dec
lods
jo
fldl
ds
std
cmp
cmp
inc
pop
mov
lea
hlt
fildll
stos
adc
mulb
push
loope
lds
and
and
pop
out
stc
nop
xchg
sub
inc
pushf
scas
insl
lahf
jl
push
xchg
xchg
xchg
int3
add
mov
out
inc
mov
and
aaa
inc
rol
xor
xchg
inc
aaa
test
aas
add
fistl
push
xor
xchg
sarl
mov
aad
scas
imul
adc
push
scas
int3
std
mov
pop
xor
divl
shll
cltd
fdivrl
fs
and
dec
lea
cltd
sub
cmp
les
jne
popf
xor
bound
outsb
popf
ja
ret
repnz
ret
or
adc
lods
mov
mov
lret
mov
lock
mov
xchg
add
aam
dec
in
xchg
sub
mov
data16
test
adc
mov
sbb
call
aam
jle
lods
fldenv
push
movsb
int
sbb
sub
or
sbb
ss
test
cwtl
xchg
sbb
mov
or
xchg
je
scas
inc
dec
jne
xor
js
std
popa
repz
push
ret
or
lods
ret
sub
scas
sarb
mov
push
xlat
aaa
lea
add
push
andb
ja
js
inc
cmpsb
jge
xchg
xor
insl
pop
adcb
pop
pop
cmpsl
rcl
ret
sbb
pop
pop
mov
lods
mov
in
xchg
fdivrp
dec
ret
das
rorl
pop
dec
pop
addl
push
jmp
test
or
mov
inc
pusha
adc
xor
fsubrl
fcmovu
or
xor
push
sahf
sbb
lret
jnp
push
push
mov
fisubrl
xchg
inc
clc
xchg
lcall
push
dec
test
lds
add
and
es
xor
sar
in
adc
les
rclb
sub
jno
stc
add
mov
inc
dec
bound
add
add
fbld
sbb
add
sub
daa
adc
cwtl
rorb
pop
xchg
mov
imul
jns
in
push
xchg
scas
push
jge
stc
or
mov
repnz
and
out
mov
mov
sbb
jl
xor
hlt
push
and
and
mov
bound
out
stos
pop
arpl
imul
xchg
rorl
cmpsb
testl
cli
cmc
aad
add
jae
hlt
inc
mov
loopne
mov
stos
inc
in
loop
and
jecxz
adc
test
fmull
daa
push
mov
sub
outsb
fwait
inc
pop
mov
sub
dec
inc
fnstsw
mov
sbb
mov
lods
pop
fisubrs
lcall
pop
pop
aam
call
mov
fdivrl
aas
and
out
sub
es
test
push
aad
ja
jp
inc
mov
ss
push
pop
push
mov
mov
xchg
sub
cmp
xorl
cmp
cmp
cmp
fcomps
inc
mov
jmp
mov
xchg
cwtl
hlt
jl
mov
mov
xor
clc
movl
jbe
dec
jle
pushf
xchg
xchg
jp
cwtl
sbbl
sub
pop
or
fists
pop
xchg
sbb
sbb
call
xchg
sbb
aaa
cmp
sub
inc
dec
mov
insl
add
insb
xor
bound
xchg
add
cmp
push
cmc
sub
insl
fists
mulb
push
ja
cli
movsl
cmpsb
adc
fxam
add
int3
adc
ss
out
ss
sub
inc
jbe
mov
pop
push
jbe
mov
push
hlt
pop
inc
ljmp
dec
push
or
adc
cs
test
add
lods
iret
cmp
or
aad
fisubrs
sbb
adc
mov
dec
rorb
dec
mov
cltd
in
pop
cmp
push
rol
sbb
sub
xor
into
mov
daa
dec
cld
jge
popf
pop
dec
mov
in
fisttpl
jl
mov
or
dec
out
sti
lds
fldl
testl
icebp
adc
outsl
or
lock
or
mov
cmpsl
jmp
lcall
cltd
hlt
das
mov
sbb
lods
testl
sub
lret
jb
ja
sbb
jg
stos
sub
aam
out
je
and
xor
xchg
es
adc
fiadds
ret
push
xor
push
lock
adc
cltd
stos
paddsw
jnp
dec
push
popa
cs
xor
scas
les
es
jbe
push
sbb
aad
add
gs
into
mov
jl
dec
mov
inc
outsb
iret
inc
subb
mov
test
xchg
addr16
out
jmp
sub
rorl
addr16
outsb
add
in
les
in
cmp
jmp
dec
lods
ret
dec
mov
adc
and
xlat
decb
pop
das
pop
icebp
add
jno
jnp
pushf
das
in
fcmovu
cmp
mov
js
lock
jle
js
mov
shl
lret
fidivrs
adc
and
leave
mov
lea
lret
pop
insb
pop
aam
inc
rol
sbb
movsl
cmp
pusha
jge
gs
and
pop
mov
push
mov
data16
cs
pop
adc
lods
rorl
pop
jp
jge
pop
and
or
fsubrl
adc
push
cld
sbb
test
aam
jne
sbb
dec
stos
mov
daa
sarb
push
cmp
xchg
inc
stc
push
scas
ss
decl
cld
aaa
jle
inc
mov
sbb
fldcw
mov
cld
inc
fs
push
adc
lret
sti
cmpsb
and
xchg
sbb
ret
sub
and
jo
inc
or
fwait
pusha
sti
and
xchg
jmp
jbe
xchg
inc
ficoml
jl
jno
xchg
aaa
mov
fadd
dec
loopne
dec
pop
mov
mov
cmp
addr16
repz
lock
repnz
dec
popa
enter
rcrb
adc
nopl
mov
lock
insl
jb
inc
mov
sbb
xchg
pusha
mov
mov
fists
xchg
sahf
adcb
dec
fdivl
rol
pop
lock
sub
out
mov
out
cmp
fldlg2
mov
std
fwait
mov
dec
jae
sub
and
js
jle
sbb
push
jle
pop
jne
popa
lret
inc
xor
jp
xor
jb
adc
xchg
sahf
out
inc
lds
icebp
and
pop
mov
inc
sbb
cltd
test
outsb
out
test
test
bound
pop
cmp
fdivrl
inc
pop
and
mov
add
outsb
push
lds
dec
pop
andl
imul
sub
add
dec
mov
push
insl
in
add
ds
mov
pushf
icebp
inc
push
aam
add
or
sarl
mov
dec
inc
dec
arpl
push
icebp
movsb
push
std
repnz
inc
xchg
mov
jae
stos
or
adc
inc
jmp
out
test
mov
ja
enter
mov
out
lret
int3
pushf
pushf
or
shlb
cmp
mov
jecxz
sbb
sub
cmp
mov
divl
adc
jmp
push
push
fmull
push
cmp
jne
adc
cs
fwait
aas
out
dec
cmp
lcall
mov
mov
scas
mov
repnz
lods
pushf
xchg
jp
cmp
mov
stos
fwait
dec
pop
data16
into
in
dec
scas
icebp
pop
aas
xor
or
jb,pn
pushf
in
mov
inc
mov
sar
iret
push
mov
mov
add
xchg
and
outsb
push
xor
fmuls
jl
cs
test
mov
add
ljmp
cmp
and
inc
jle
add
repz
xor
mov
das
int
jno
pop
adc
or
scas
cmp
enter
mov
and
test
loop
sbb
dec
cs
cli
pop
jge
inc
mov
test
jnp
mov
adc
insb
pushf
leave
dec
insl
sbb
xchg
cli
lahf
out
imul
fucomip
and
mov
testl
mov
pop
repz
push
sub
lea
inc
sub
or
dec
mov
mov
into
mov
xchg
xlat
xor
fdivl
xchg
dec
inc
cwtl
xchg
add
cltd
mov
cmp
mov
mov
jb
idiv
sub
pop
icebp
insl
leave
mov
aas
inc
sbb
dec
pop
xorl
xor
push
inc
pop
xor
sub
hlt
dec
iret
dec
fstpl
jge
cmpsl
fdiv
mov
out
js
fistpll
jbe
mul
iret
into
mov
sub
pushf
add
adc
rclb
lea
mov
sbb
inc
daa
dec
push
aam
out
shll
js
lret
addr16
mov
xchg
jle
mov
jl
lds
shrb
int3
mov
out
lcall
arpl
dec
lahf
imul
or
xchg
xchg
xor
js
stc
jecxz
sub
stc
jmp
or
gs
into
lret
out
lret
dec
jnp
loop
push
lods
jne
cmp
inc
data16
ficoms
xor
mov
neg
add
mov
adc
mov
nop
test
jp
out
in
cmp
xchg
ljmp
daa
pop
lcall
pop
sub
jecxz
aad
sti
sub
pop
imul
push
cmp
cmp
aam
in
mov
cltd
mov
lcall
fildll
movsl
mov
cmc
and
mov
fisttpl
movsl
inc
inc
cltd
sbb
repnz
test
add
int
mov
int3
xor
add
aas
add
mov
aaa
fnstcw
adc
jae
out
or
fadds
fwait
cltd
xor
pop
ret
cmp
adc
fstpt
test
scas
and
cmp
push
dec
adc
push
lods
out
mov
mov
cltd
mov
fdivs
cltd
and
mov
out
sbb
sbbb
idivl
ljmp
dec
ret
sahf
push
outsb
test
cmp
sarl
inc
push
popa
fidivrl
pop
adc
addr16
andb
hlt
xchg
pop
sub
adc
lds
add
popf
pop
js
pop
les
pusha
scas
pop
and
sti
stc
xor
jbe
jg
lret
pop
cmp
push
pop
xor
mov
mov
out
sbb
jb
or
push
cmc
and
testb
push
push
pop
dec
rcrb
or
imul
fistpl
aam
cmpsb
mov
int
out
aad
in
test
arpl
add
fistpll
lret
sub
lds
leave
or
in
fcomps
or
cmpsl
or
nop
enter
out
mov
inc
and
js
cmc
setns
push
fistpll
fsts
sub
repz
in
int3
xchg
mov
mov
mov
shlb
lret
push
jbe
mov
cmp
pop
test
sbb
les
add
fwait
rcl
outsl
lods
shrb
or
lods
adc
dec
iret
in
push
xlat
pop
bound
scas
mov
dec
mov
mov
mov
fnop
or
ret
inc
mov
mov
insb
lock
sub
cmpsb
mov
pop
negl
or
xor
pop
push
sbb
push
ret
lret
fnstsw
in
xlat
cmp
rcll
fsubrs
xor
jg
icebp
in
test
push
gs
cld
lds
imul
mov
iret
int3
mov
jg
sbb
pop
mov
push
ss
dec
insl
and
xchg
adc
and
mov
iret
fildl
xor
icebp
mov
jb
aas
pop
lock
sarb
cmp
or
push
call
cld
sbb
push
mov
test
adc
xlat
hlt
mov
shlb
bound
adc
sbb
cmp
cld
and
mulb
mov
call
iret
or
sub
mov
xchg
imul
rcrl
iret
aaa
popa
test
lcall
cmp
lods
sub
in
xchg
ljmp
es
mov
inc
std
lea
lcall
mov
push
xorb
ss
movsl
mov
es
jge
rorl
test
cmp
lods
fwait
je
lods
pop
mov
sub
dec
into
rcll
xchg
jbe
cmpsb
mov
push
dec
std
in
adc
imul
scas
or
in
dec
in
mov
sbb
mov
adc
jmp
out
or
mov
insl
add
and
into
insl
add
inc
jmp
int
push
rcrb
xchg
shl
cmp
cmp
out
int
mov
addr16
pop
xor
cwtl
punpcklbw
lahf
jae
mov
imul
cmp
sbb
jge
jbe
aam
popa
jbe
dec
push
enter
pop
add
sti
inc
cmp
dec
in
cmp
pop
cmpsb
mov
lret
push
daa
fsts
mov
adc
cmpsb
pop
mov
fstpt
inc
aaa
cltd
dec
ds
outsl
mov
or
ss
in
push
sbb
jno
ss
pop
add
jo
mov
cmp
in
cmp
sub
jge
sbb
mov
mov
push
xchg
inc
popa
mov
xlat
gs
add
rcrb
into
sbb
out
arpl
xor
fsubr
cmp
fmul
sub
jl
fsubs
lahf
jg
aad
mov
daa
shll
cmovns
bound
les
dec
or
sub
mov
mov
or
sub
jnp
sbb
inc
pop
push
push
rorl
test
int3
and
xchg
in
pushf
shlb
ljmp
jae
rcl
push
int3
test
add
add
push
int3
mov
jmp
aad
fnsave
pop
adc
shll
andl
out
sbb
jmp
inc
pop
negl
ficompl
xchg
into
sbb
push
pop
dec
jle
test
jo
dec
xor
lds
and
lock
lret
adc
lock
xor
mov
in
mov
sti
mov
lds
out
sti
mov
into
int3
or
popf
popf
rclb
mov
pop
repnz
jecxz
ret
adc
dec
sub
and
popf
mov
adc
cs
push
sti
gs
push
shrl
ja
inc
xor
xchg
jo
mov
jmp
sub
pop
lret
cld
xchg
pop
mov
cmp
sub
cmp
aam
sarb
ljmp
pop
shrb
xchg
lcall
outsb
cmp
and
fwait
out
push
movsl
sub
mov
mov
xchg
mov
cmp
inc
or
adc
addr16
aad
lods
inc
lods
or
test
mov
loope
xchg
cmpl
cmp
imul
rorb
jbe
out
icebp
shll
js
pop
mov
addr16
xor
pop
sub
lret
sub
push
fistl
xchg
das
stos
fs
or
dec
stos
xor
lret
dec
cmp
pop
scas
sub
mov
outsl
add
repz
inc
mov
fadds
pop
sti
xchg
mov
adc
loope
push
bound
shrl
inc
mov
insl
add
repz
test
outsb
jb
lahf
pop
pop
push
cld
testb
insb
dec
bound
push
adc
cmpsl
inc
ljmp
fnsave
ds
add
nop
jo
or
repnz
and
sub
cwtl
icebp
mov
mov
push
out
cld
imul
and
or
mov
imul
pop
fldt
push
cltd
sub
adc
cli
add
sbb
subb
aam
in
push
add
cmp
adc
scas
test
pop
movl
xor
dec
and
inc
jle
mov
icebp
or
pop
inc
mov
mov
test
mov
lds
mov
sub
jmp
push
aam
inc
dec
ljmp
dec
mov
lock
xor
faddl
and
add
cs
jb
test
mov
xchg
dec
cli
fs
push
rclb
push
push
jo
dec
les
inc
into
clc
add
fisubrs
sub
inc
mov
ljmp
or
or
adc
loopne
pop
inc
sysexit
in
xchg
jecxz
jno
mov
mov
pop
insl
sbb
and
cmp
imul
cwtl
or
xchg
jbe
mov
pop
xchg
movsb
pushf
xchg
in
sbb
pop
jo
cmpl
pushf
sbb
or
push
in
mov
sub
in
arpl
xchg
cmp
loop
fwait
mov
push
jp
out
das
loop
pop
push
and
sbb
cs
out
inc
rcll
add
rolb
xchg
pop
aas
xchg
xchg
dec
dec
ret
shll
sti
sub
push
out
iret
and
enter
aas
xchg
cmpsb
cltd
cmp
xorb
inc
aam
cmp
mov
in
imull
popa
sarl
dec
xchg
xchg
es
movsb
cmp
add
mov
out
loop
mov
shrb
push
cwtl
pop
sahf
and
mov
xchg
adc
jb
mov
or
pop
xor
mov
les
orl
ret
loopne
es
sbb
xchg
cwtl
or
push
cwtl
mov
add
enter
push
in
or
jno
leave
in
mov
jb,pn
out
decl
xchg
push
and
jns
lahf
stc
xchg
ror
mov
mov
sbb
gs
sarb
mov
mov
push
mov
sti
sbb
cmp
jge
or
scas
pop
or
add
sub
outsl
inc
mov
addl
sub
mov
lods
fcmovb
jle
int
movb
sbb
cltd
jp
cmpsb
xchg
xchg
sbb
nop
cmp
js
test
mov
mov
rorl
in
stos
mov
jl
inc
popa
repz
aad
dec
int
arpl
aaa
fdiv
cs
cltd
loope
fstpl
repnz
push
add
cmpsb
lret
sub
ljmp
dec
cltd
test
stos
push
insl
sbb
ljmp
dec
inc
sarl
jle
mov
xor
fstpt
mov
and
mov
iret
adc
add
aad
dec
add
inc
imul
cmp
add
cmpsl
sarb
cli
std
in
in
test
mov
cmp
data16
dec
shrb
adc
movsb
test
icebp
push
and
cmp
push
pop
jp
int3
or
and
push
cmpl
mov
jg
pop
add
lea
mov
adc
mov
push
push
cmpsl
cs
push
stc
cs
add
push
jno
jecxz
pop
iret
jbe
xchg
ds
cltd
jb
xor
in
add
lret
jb
test
mov
ret
ret
or
lds
cmp
xor
pushf
sti
js
sub
xchg
cmp
pop
mov
adc
vandnpd
pop
nop
or
das
sub
sbb
sbb
pop
xor
repz
and
clc
data16
and
mov
cmp
xchg
lock
loop
mov
mov
aad
xlat
pop
andb
sbb
adc
jecxz
or
ljmp
hlt
cmp
jmp
lods
mov
xor
stos
lock
or
add
paddd
icebp
nop
outsl
cwtl
dec
test
clc
inc
dec
sbb
sbb
mov
jno
pop
jno
lahf
add
inc
mov
jns
sub
outsb
mov
cli
inc
daa
movsl
fidivrs
push
push
inc
xor
xor
xchg
int3
mov
aam
sub
and
sub
jnp
sbb
insl
and
xor
dec
iret
adc
inc
cli
ss
hlt
pop
jge
cltd
add
bound
inc
mov
bnd
adc
cli
xor
bound
subb
lods
fmull
insl
lock
icebp
xor
cmpsb
aad
lret
ss
popf
fs
sbb
add
mov
ja
lds
mov
test
fs
movlps
out
push
jb
and
adc
int
nop
fildl
jp
push
lret
mov
add
test
bound
inc
cs
jne
movsl
pusha
dec
jg
dec
mov
sbb
dec
imul
sub
dec
dec
or
mov
js
mov
leave
fistl
in
sub
sbb
aam
mov
sahf
pop
fnstcw
pop
jle
clc
inc
loope
jbe
push
ja
lds
xlat
jnp
or
nop
shlb
add
jb
insl
push
mov
sahf
int
mov
lahf
jb
insl
mov
shlb
fimuls
addl
pop
dec
adc
lock
jne
arpl
in
rclb
mov
xor
pop
dec
inc
mov
sti
adc
aaa
ret
loope
xor
adc
push
jle
pop
sbb
ret
sub
decl
mov
aam
lods
jl
xchg
sub
add
repnz
pop
xchg
in
mov
add
cmp
pop
popf
clc
leave
lret
pushf
aaa
mov
sahf
inc
push
pop
cmpsb
sub
rcrl
sub
pop
rcr
mov
xchg
loopne
cmp
inc
pop
outsl
popa
pop
fwait
imul
mov
mov
lcall
sbb
xor
or
repnz
ret
cmpl
in
jp
and
pop
call
test
xchg
ret
inc
mov
sahf
jmp
cwtl
cmpsl
dec
and
in
cltd
adc
lods
push
inc
add
roll
or
rorl
xchg
clc
xchg
sbb
xor
fcmove
adc
dec
out
xor
loope
lea
iret
jp
push
inc
mov
inc
cli
lcall
adc
mov
sbb
pop
leave
add
nop
aam
mov
mov
jg
xorb
xor
in
xor
sbb
mov
repnz
fldlg2
xlat
in
iret
div
pop
push
in
xor
adc
or
mov
jae
mov
loope
sbb
or
cmp
out
rcll
inc
xchg
movsb
test
cmp
or
jo
in
sar
push
mov
jle
test
xchg
fs
dec
mov
test
mov
or
push
inc
lahf
pop
and
sahf
je
gs
fcomp
xchg
pop
mov
sti
cltd
in
jl
push
clc
mov
add
mov
sub
cmp
shrb
xor
xor
sti
jno
jne
aam
sbb
xor
inc
or
sub
int
popa
mov
inc
jbe
leave
mov
push
loopne
and
jmp
fsub
std
pusha
or
std
mov
pop
mov
sub
push
pop
jecxz
ret
cmp
sbb
lods
fldl
lock
cmpsb
pop
js
fisttps
cli
js
and
sbb
loop
mov
add
insl
aam
xor
jl
int
pop
aaa
push
or
mull
enter
and
sbb
ret
mov
test
leave
repz
lods
mov
dec
mov
dec
jb
xor
stos
daa
cmc
mov
mov
in
add
sub
or
add
push
dec
mov
pop
xor
xlat
in
mull
fsubrs
inc
sub
int3
or
subb
cmp
jno
cmp
add
xchg
xor
adc
repz
fldenv
andl
gs
adcl
incl
fwait
push
in
xor
adc
mov
jbe
cwtl
jle
jmp
mov
arpl
aas
mov
ret
cmpsl
pop
pcmpgtb
ud2
inc
and
int3
lds
mov
sahf
fimuls
sub
push
xor
insb
insb
in
xorl
cmpsl
xor
icebp
testb
fs
loop
push
jmp
mov
dec
iret
sub
xor
mov
mov
and
or
cltd
test
jae
xchg
idiv
dec
fs
push
test
pop
jmp
leave
fsubrs
mov
inc
push
movsl
pushf
lret
xchg
and
inc
nop
movsl
aad
addr16
xchg
notb
pop
repnz
aam
add
or
orb
mov
or
subb
mov
xchg
out
enter
cmp
addr16
stos
outsb
pushl
dec
jnp
ret
cli
icebp
push
pop
adc
or
ret
hlt
inc
add
mov
xchg
mov
mov
mov
stos
inc
lret
cmp
or
lea
imul
clc
in
movsb
and
push
xor
stc
imul
mov
insb
xchg
dec
cmp
sub
add
mov
pop
inc
rorb
mov
fisttps
sar
or
adc
in
sub
xor
js
jl
rep
fwait
push
push
ss
dec
pop
sti
adc
jne
stc
jmp
inc
mov
movsb
ljmp
dec
xchg
js
stc
xchg
ret
lods
loop
ret
xchg
pop
pop
icebp
mov
nop
cmp
xlat
stos
mov
sti
mov
and
push
mov
test
xor
adc
mov
pop
push
cmp
push
cltd
sub
insl
jo
push
or
clc
std
push
insb
dec
ss
fnsave
inc
dec
pop
iret
jle
or
mov
stos
movsb
xchg
outsl
pop
cs
push
dec
movsl
sbb
bound
popf
push
pop
mov
mov
or
pop
mov
mov
jne
out
test
cli
xchg
subl
fwait
cmc
loope
jo
xor
in
out
xchg
mov
popa
and
push
fldcw
inc
add
pop
or
ret
stos
mov
fwait
stos
int
xor
mov
mov
scas
out
jecxz
dec
xchg
xchg
sbb
or
cltd
popf
sub
pop
cmp
sarb
adc
and
add
mov
mov
adc
mov
xor
push
es
or
enter
mov
push
movsb
jge
pop
and
adcb
mov
xor
loopne
inc
and
add
out
loop
push
insb
in
mov
fsubr
adc
repnz
mov
inc
mov
mov
dec
push
dec
fidivl
mov
xor
or
inc
cwtl
lock
cltd
jge
andl
push
sub
enter
ficoms
stc
es
fmul
sbb
jnp
add
jle,pn
imul
push
imulb
push
pop
and
sbb
inc
ja
and
insb
stos
out
cmp
and
xor
fnstenv
sub
push
pushf
xor
lahf
iret
adc
jb
push
jp
hlt
or
inc
lea
daa
testl
outsb
mov
clc
test
adc
mov
dec
sbb
rcl
loopne
mov
clc
std
or
jbe
push
cld
in
movsl
jbe
lea
pop
pop
cltd
lock
push
jne
dec
pop
mov
popa
sub
sbb
dec
fmull
and
fimuls
pop
jbe,pt
std
mov
mov
aaa
lahf
pop
dec
sbb
out
outsl
into
lods
aam
jl
xchg
mov
loopne
dec
sub
push
xchg
xchg
inc
and
imul
xlat
dec
mov
in
dec
and
mov
mov
pop
cmc
push
jp
jo,pt
sub
orl
push
dec
pop
lret
mov
mov
shr
push
sahf
movsb
dec
icebp
mov
and
rep
shrl
jmp
fstpt
rcrl
adc
dec
mov
cmp
outsl
bound
push
pop
sub
xchg
jae
lret
insl
add
negb
fwait
add
clc
pusha
lahf
and
pop
adc
out
scas
mov
mov
push
add
imulb
xchg
subb
iret
mov
jnp
xchg
je
push
repz
in
scas
pop
jecxz
cmc
cli
std
xchg
xchg
or
pop
das
stos
scas
cmp
int3
mov
aas
cli
mov
daa
jg
adc
stos
lea
fisubrl
mov
jbe
fistps
jno
jg
mov
mov
mov
gs
lret
stc
pusha
xchg
mov
cmpsb
add
shll
pop
int
mov
setle
push
cmc
mov
fimull
lahf
scas
hlt
dec
pop
out
and
push
movsl
or
cmpsl
or
mov
dec
mov
and
repnz
out
cmpsl
mov
mov
xchg
orl
les
into
shll
out
out
xchg
adc
xchg
shll
cmp
push
or
js
scas
mov
sbb
aaa
add
lods
sub
dec
daa
pusha
mov
or
mov
out
popf
in
inc
xor
imul
daa
hlt
mov
pop
jle
ja
inc
fiaddl
xchg
push
in
or
sti
subl
mov
pop
sti
gs
sub
test
sbb
dec
and
lret
add
sbbl
xchg
jns
lret
mov
fildl
out
clc
aam
mov
cmc
fstpt
sub
xor
pop
inc
insl
fsubs
cmp
jae
ja
jp
scas
add
cmp
jmp
adc
fcoms
clc
push
das
push
and
shll
jl
icebp
sbb
or
dec
pop
cltd
xor
pop
fistpl
shll
stos
test
cltd
loope
cmp
fildll
and
fidivrs
lock
hlt
mov
aam
push
jns
shll
scas
in
pop
aaa
cli
andb
jnp
sub
test
nop
cmpsl
insb
cmp
or
push
daa
in
pop
cs
xor
jle
push
test
mov
jno
inc
cmpsb
pop
add
xchg
mov
in
pop
icebp
add
imul
ljmp
pusha
ret
mov
dec
jle
ret
int3
jmp
xchg
mov
cmpsb
es
repz
and
loop
mov
pop
lock
loop
das
testl
ret
ss
dec
cld
sbb
arpl
rolb
popa
pop
mov
scas
sub
mov
dec
lock
dec
out
repnz
nop
mov
mov
push
jnp
popf
sub
test
add
and
stos
xchg
jl
ret
pop
fucom
neg
push
jmp
aam
xchg
sub
negb
pop
mov
or
cld
in
lahf
and
fisubs
mov
incl
or
nop
jp
loop
aas
movsb
andl
out
sbb
xor
pop
inc
adc
mov
ss
nop
arpl
jo
lret
add
cltd
push
scas
dec
sbb
frstor
ret
inc
fldcw
aam
enter
cmp
das
outsl
popa
mov
jmp
push
cmp
xchg
inc
cmp
jge
lds
lds
or
fsubs
sub
inc
or
sbb
movb
pop
in
mov
push
mov
push
ss
pop
stc
and
scas
popa
sub
cmp
ss
sub
or
xor
cmp
scas
mov
mov
jp
repz
sub
repnz
clc
jnp
inc
cs
adc
std
popf
dec
idivl
xor
test
lret
addr16
add
inc
out
jno
adc
mov
adc
mov
add
jnp
out
dec
sbb
pop
pop
in
sbb
icebp
dec
aaa
gs
cmp
sbb
adc
jns
or
cld
mov
mov
xchg
in
unpckhps
jle
jbe
sub
xor
sbb
xchg
loopew
notb
lcall
push
in
push
sub
movsl
fdivrs
add
imull
test
hlt
sahf
and
lahf
bound
cmp
aaa
add
and
scas
mov
outsl
xchg
cmp
cmpsb
ljmp
les
out
adc
pop
std
xor
sarl
adc
lahf
popf
sbb
push
lods
dec
insl
ljmp
jle
sub
idivl
mov
jmp
pusha
xchg
sbb
test
xchg
pop
mov
pop
arpl
xor
pop
sub
enter
roll
or
cmpsl
cwtl
xchg
lcall
inc
mov
cmp
insb
sti
sbb
pop
rorb
jp
mov
mov
loop
xchg
xorb
jp
lock
cltd
sbb
pop
sub
push
jo
repnz
jae
add
fsub
xorl
out
xchg
xchg
sbb
jnp
cmp
pop
aad
cmc
pushf
stc
jle
pop
movsb
and
xlat
add
cmp
mov
ljmp
sub
dec
jo
pop
icebp
daa
add
inc
inc
mull
andl
fisttpll
fwait
sub
aam
stos
push
aaa
cld
xor
cltd
imul
jmp
arpl
push
push
lea
mov
push
lcall
pop
add
stos
mov
dec
adcb
lcall
mov
or
push
dec
xchg
or
push
cmp
dec
lcall
adc
jmp
mov
popa
inc
stos
add
cmc
data16
movsb
lods
ret
add
imul
xlat
mov
ret
push
dec
and
pop
cmpsb
jg
inc
xor
push
push
stos
shll
out
arpl
sub
test
mov
loope
repnz
mov
push
and
push
push
mov
stc
fidivs
insb
jge
mov
fs
add
jno
cs
jne
xchg
mov
dec
out
shll
sbb
jae
aad
incb
mov
inc
mov
mov
cmp
cmpsl
arpl
sbb
in
es
mov
and
cwtl
xchg
or
repnz
mov
jp
mov
mov
dec
and
pusha
mov
faddl
jp
imul
sub
cs
xlat
sbb
adc
jnp
bound
mov
loop
lods
cltd
test
outsl
popf
or
push
repz
inc
push
js
pop
adc
cmp
pop
lret
gs
adc
outsb
arpl
hlt
mov
dec
jno
push
aaa
push
lret
rolb
in
jo
int3
adc
int3
sub
test
pop
xchg
push
inc
out
dec
cmp
dec
jmp
fadds
js
xor
subl
das
push
imull
add
test
scas
xor
add
aam
bound
out
cmp
sub
das
ja
cmp
imul
rcrb
test
roll
cmp
sbb
inc
popa
and
mov
ret
outsl
or
pop
cmpsl
cmpsb
nop
adc
rorb
adc
test
dec
scas
imul
aam
inc
ret
test
push
arpl
je
icebp
fcoms
imul
push
jecxz
sbb
sbb
std
lcall
orb
enter
add
adc
lcall
cmp
add
xchg
rcrl
into
dec
mov
mov
xor
stos
dec
lret
pop
add
cmc
push
mov
ja
in
pop
sub
xor
mov
xchg
mov
xor
pop
and
sub
xor
call
or
dec
xchg
push
mov
inc
cs
push
pop
imul
pop
xor
jecxz
pop
mov
sbb
je
jno
add
and
shl
daa
adc
aas
or
movsb
ss
vmovlpd
in
push
jg
jl
std
mov
push
sub
sbb
mov
push
jne
cltd
jg
ss
icebp
jo
das
jmp
leave
outsb
shll
jmp
repz
push
js
pop
xor
jns
add
mov
inc
call
or
arpl
out
pop
mov
adc
cmp
add
loope
int3
icebp
adc
vpmacssdd
jb
test
mov
xor
fdiv
hlt
aaa
ret
ljmp
push
movsl
pop
nop
or
dec
into
mov
mov
sbb
sbb
loope
jecxz
adc
mov
mov
jb
rclb
aas
stc
sub
arpl
mov
pop
das
aad
or
dec
loope
pop
cmpl
loopne
add
out
cmp
movsb
mov
xchg
adc
fstpt
inc
xor
xor
aas
sti
sub
fisubrs
out
sti
pop
subl
push
pop
imul
arpl
push
mov
xor
aaa
dec
add
sub
push
mov
push
hlt
notl
pextrw
jae
icebp
mov
fwait
xchg
xchg
popa
push
stos
movsb
lret
cli
orl
movsb
andb
fdivrs
clc
push
call
int
mov
push
push
dec
popf
cmc
mov
cmp
mov
push
mov
stos
dec
push
divl
lea
adc
lds
or
push
dec
cli
push
sbb
jne
jmp
mov
cli
add
or
idivl
sbb
jnp
insb
sbb
dec
std
lea
insb
or
pusha
mov
cmpsb
mov
sbb
gs
dec
dec
repnz
fsubrl
mov
xlat
es
insl
stc
mov
arpl
add
push
adc
je
mov
imul
outsb
int
mov
mov
aam
fcomps
push
ds
shrb
jl
int
lret
std
inc
clc
mov
hlt
or
pop
nop
scas
shrl
jecxz
xchg
fidivrl
subl
inc
mov
movsb
push
outsb
jg
imul
pushf
into
mov
and
jno
lods
jg
imul
jmp
shlb
add
inc
cmp
xchg
jb
mov
xchg
push
jmp
nop
xor
mov
ret
xchg
push
adc
scas
xchg
fimuls
nop
fbstp
xchg
mov
xchg
lock
jl
or
push
xlat
adc
ret
int3
jg
push
movsb
cmpl
popf
cld
and
cmpsl
pop
and
mov
and
add
mov
jp
test
imul
dec
adc
in
push
pusha
mov
imul
pop
lcall
adc
ret
mov
sbb
pop
aad
mov
fst
xlat
pop
mov
dec
push
push
loope
adc
jae
shlb
push
jns
loopne
imul
push
pop
ja
aam
sub
jnp
inc
test
mov
jno
ret
sti
xchg
push
mov
cltd
adc
lss
in
repz
daa
aaa
xorl
inc
cmovb
nop
ja
rcr
shll
dec
or
sbb
je
adc
mov
jge
adc
arpl
xchg
jno
push
cld
shll
data16
nop
lock
stc
mov
pop
inc
mov
jl
mov
pop
mov
adc
sbb
fdivs
xor
or
dec
dec
testl
jg
lret
sbb
je
iret
mov
mov
dec
insb
cmc
pop
loop
aaa
jns
cmc
jl
mov
push
mov
fisubrs
fisttpl
adc
jno
or
sbb
sub
js
mov
mov
aam
mov
imul
mov
bound
dec
cmp
mov
mov
imul
call
ja
test
stos
xorl
daa
jae
xchg
sarl
jns
aad
adcl
mov
addl
add
push
jle
jp
xchg
mov
gs
bound
lcall
lret
pop
in
mov
clc
jbe
push
xchg
sbbb
cwtl
mov
negb
outsb
mov
fildl
sub
sbb
ljmp
shll
bound
inc
push
test
push
in
aaa
fstl
cli
jno
outsl
daa
pop
push
mov
mov
mov
mov
inc
test
mov
xorb
addr16
mov
add
lock
sub
fs
ss
fmulp
in
out
or
mov
jnp
cmp
pop
outsl
inc
cmpsl
lock
data16
lahf
push
pop
mov
xchg
popf
push
push
cmp
js
pop
fnstenv
imul
movsl
andl
push
outsb
mov
out
fidivrs
out
int3
loop
ret
stc
shll
dec
push
xchg
rcrb
push
ds
add
mov
outsl
daa
cltd
push
daa
fimuls
bound
scas
test
mov
and
xor
loope
cmp
or
pop
sub
shlb
jns
xor
rorl
mov
or
inc
sub
pop
sub
addr16
adc
push
rorb
fwait
add
js
jmp
fucomip
push
push
or
jne
loop
pushf
xor
jp
push
enter
and
mov
lea
or
into
fwait
shll
daa
lret
mov
sbb
loopne
fisubrs
adc
cmp
rol
mov
add
test
cld
cltd
fcmovnu
dec
std
mov
lret
cltd
cld
loope
sbb
je
das
hlt
loop
mov
iret
cli
fucomp
mov
or
jne
xor
add
mov
aam
mov
sub
rcll
cmp
push
inc
mov
lods
out
cmp
inc
loope
mov
dec
shll
into
add
xchg
and
hlt
jnp
pop
jmp
inc
push
ret
and
cmc
insb
std
and
mov
test
rcl
fsubrl
cli
fiaddl
ret
jge
sbb
fwait
scas
jg
cltd
leave
aas
or
faddl
and
inc
push
pop
mov
or
mov
shrl
imul
hlt
mov
pop
sbb
int
lret
dec
mov
push
pusha
and
add
cwtl
dec
dec
testb
push
xchg
loop,pn
jmp
iret
stc
dec
inc
push
add
sbbb
push
push
dec
enter
jge
cmp
mov
ljmp
add
ficompl
outsl
arpl
push
lods
and
cmc
or
cmc
and
sbb
or
fbstp
in
addb
mov
roll
rcrl
divb
xchg
inc
push
into
inc
dec
pusha
mov
ds
xor
stc
lret
sbb
fcoms
test
call
xchg
add
push
jb
sti
and
rcll
aam
pop
into
out
loopne
out
loopne
repz
mov
gs
cmpsb
enter
ds
inc
into
pop
push
test
jp
or
add
int3
cmc
fimull
adc
hlt
xchg
rorb
pop
lods
ret
mov
adc
hlt
xor
cltd
jge
imul
cmpsl
pop
fadds
daa
stc
std
hlt
jp
mov
sbb
pop
dec
lds
adcl
push
test
mov
int3
push
ja
pop
mov
xchg
cmc
mov
mov
push
out
inc
or
jle
fs
mov
mov
or
testl
aaa
jne
pop
add
add
sub
ljmp
adc
jge
in
pop
imul
xchg
or
push
pop
ffree
adc
lea
aas
cwtl
or
add
ret
pop
cmp
fimull
inc
aad
lea
xchg
lcall
inc
pusha
cmpsl
addl
pop
xchg
cli
ror
sub
sub
mov
xlat
jno
inc
inc
mov
xor
mov
call
aad
and
test
push
inc
pop
test
cmp
pusha
mov
and
xchg
sbb
stos
jnp
fiadds
sar
adc
jns
and
push
push
ret
dec
inc
xlat
inc
in
mov
lods
ds
push
test
scas
int3
push
add
aad
jecxz
add
ljmp
xchg
or
outsl
stc
call
dec
out
ret
movsl
mov
dec
adcl
mov
cmc
pop
stos
sub
inc
push
lds
roll
aas
push
adc
xchg
lcall
fs
std
imul
stc
imul
adc
enter
pop
push
enter
aaa
movsl
mov
add
jmp
int3
mov
and
sti
push
and
call
mov
push
jno
fldenv
popa
addl
mov
add
mov
jnp
sub
sbb
cmp
and
js
sub
loopne
stc
aaa
movsl
das
fadd
hlt
mov
cwtl
and
add
rol
mov
xchg
mov
jne
mov
cmp
or
xor
pop
pop
ret
arpl
repnz
mov
sbb
and
push
xor
and
pop
dec
ljmp
stos
xor
std
fsts
cmpl
mov
mov
lahf
pop
mov
rolb
cli
push
inc
pop
lea
lcall
push
mov
fcmovu
pushf
ror
fcmove
stos
cltd
sbb
repz
loop
add
push
imul
pop
idivb
add
pop
mov
add
mov
icebp
sub
pop
aas
push
add
fcomps
rcr
add
mov
mov
addb
pop
push
mov
cmp
sbb
pop
outsb
mov
and
ja
insb
pop
mov
aas
xlat
and
dec
fwait
lods
sub
scas
dec
adc
dec
jo
mov
in
or
push
cmp
int
in
sub
adc
adc
fisubrs
mov
cmp
rsm
ffreep
sub
es
push
aad
push
adc
js
mov
jb
xlat
inc
xchg
imul
cmc
add
and
aaa
ljmp
or
addl
js
je
clc
lahf
sbb
cmp
sahf
inc
xor
test
xlat
in
xor
add
mov
mov
fcoms
and
pop
push
int3
fsubrs
loop
cmpsl
shl
aaa
movsb
adc
jbe
jg
ljmp
jae
sbb
ret
mov
pop
sbb
das
jae
or
mov
adc
mov
dec
fsts
mov
xorl
stos
xor
lret
inc
mov
inc
and
push
and
addl
lods
loop
xchg
lods
cmp
and
mov
in
shlb
insl
addl
xor
xor
repz
sbb
jne
cmpb
mov
ret
pop
sbb
sbb
push
outsb
xor
lods
icebp
lods
pusha
cmpsb
add
adc
int3
fldl
mov
fistpl
or
mov
dec
add
lret
loope
jp
pop
mov
pusha
pop
cmp
ljmp
push
pushf
imul
icebp
xor
mov
jns
lds
repnz
mov
fs
xor
add
es
jno
cli
or
mov
repnz
or
ret
jle
push
mov
pop
popf
ror
lds
xlat
jne
test
loop
cmp
add
lock
push
loope
mov
sub
jmp
dec
pop
cmp
dec
in
imul
jmp
loop
jl
xlat
fcompl
and
subb
push
ret
clc
fs
popa
mov
or
xchg
and
or
sbb
hlt
arpl
ss
sub
jle
in
jge
imul
mov
dec
fabs
push
cmp
dec
fmull
jns
add
jp
hlt
aad
mov
bndstx
daa
fucom
xchg
pop
pop
cs
icebp
imul
data16
mov
add
fadds
mov
cmp
aaa
mov
cltd
adc
hlt
enter
out
mov
movsl
sbb
in
imul
gs
push
cmovns
sbb
lds
mov
or
cmp
xchg
in
xchg
testb
xchg
arpl
mov
dec
ja
cmp
sub
sti
xchg
dec
arpl
xor
sub
jno
jno
dec
dec
xchg
out
add
leave
and
mov
popa
inc
mov
push
or
ficoms
dec
ret
xchg
mov
js
jae
pop
mov
pop
roll
mov
in
pop
mov
mov
jno
or
jle
mov
loop
ljmp
ret
or
std
pop
mov
push
ljmp
cli
mov
sub
ds
push
adc
add
pop
lcall
je
adc
pushf
xchg
or
or
xor
cli
mov
pusha
pop
fsts
dec
push
out
mov
adc
and
push
fstpt
das
je
movsl
mov
xchg
and
lds
insl
add
call
add
fucomi
aaa
rorb
pop
pusha
cmp
cmpsl
jmp
cld
jecxz
adc
mov
rcl
xchg
and
xchg
lcall
adcb
add
fbstp
xchg
and
or
and
sub
cmp
mov
hlt
cmp
fildll
xchg
pop
cmp
or
or
sub
xlat
mov
pop
pop
mov
std
mov
ds
and
lds
shrb
insl
scas
les
inc
test
and
mov
push
hlt
aad
andb
sbb
addr16
jns
jo
jle
add
xor
fnstcw
cmp
add
jmp
add
out
subb
pop
mov
addr16
sub
jmp
imul
iret
jne
push
mov
jo
xlat
add
and
and
pop
adc
lcall
cmpsl
pop
cs
inc
xor
outsb
popa
stos
add
std
cmp
inc
pop
mov
adc
testl
jb
cwtl
or
dec
shlb
loop
or
jmp
xchg
cmp
dec
pop
clc
repnz
add
lret
rcr
xor
stc
cmpsb
inc
sub
and
mov
jle
pop
lods
cmpsl
adc
sub
and
sbb
fcmovnbe
jmp
out
enter
adc
jle
fisttps
push
aam
popl
outsl
mov
out
mov
pop
push
cs
cwtl
sbb
add
sub
sbb
rclb
loope
mov
ret
jmp
push
xor
outsb
rorl
stc
adcb
sbb
out
or
rclb
push
cmp
xchg
movsl
clc
insl
cmpsl
jo
je
subl
adc
add
or
aaa
fstpt
cmpsb
lds
test
and
leave
pusha
mov
mov
xchg
jecxz
lret
mov
xchg
mov
pop
or
cli
lahf
mov
or
movsl
imul
popa
push
adc
pop
test
sbb
add
inc
mov
mov
pusha
ret
add
scas
mov
cld
mov
pop
push
mov
lods
mov
cmp
xor
test
and
je
imulb
shll
sbb
pop
scas
ret
cmp
push
movsl
leave
test
ret
or
pop
lcall
mov
jnp
test
adc
das
cmpsb
aaa
test
jae
push
xor
nop
push
mov
cltd
add
xor
jb
pop
add
sahf
shll
push
das
jb
push
std
dec
xor
inc
sub
xchg
lahf
pop
test
mov
and
mull
or
test
sub
ljmp
xor
push
out
sbb
scas
jge
jl
rcrl
fldl
xchg
or
xchg
dec
daa
xchg
jge
jo
jne
xchg
add
pushf
fxch
push
daa
sbb
ret
sbb
sub
arpl
cltd
imul
outsb
mov
lcall
lahf
mov
pop
inc
stos
insb
adc
pop
pop
nop
nop
scas
add
pop
cmp
or
xor
loop
scas
es
lcall
xchg
data16
mov
dec
pop
inc
add
mov
mov
jne
sbb
mov
xor
jbe
adc
push
sub
daa
rcll
inc
icebp
jnp
clc
hlt
negb
stos
mov
xor
sub
and
dec
out
jae
pushf
mov
xchg
pop
cmp
jbe
add
jp
pusha
jbe
xor
cmp
mov
ljmp
in
rolb
cs
xchg
in
xor
adc
das
lret
out
sahf
aaa
adc
pop
push
insb
cmp
mov
mov
pushf
push
sbb
push
fwait
lret
or
or
mov
loop
pop
xchg
das
jbe
pop
btl
mov
pushf
pop
out
push
mov
into
jo
xchg
sub
mov
cmc
jge
mov
sub
cmp
push
int3
hlt
fsubrs
or
mov
repz
xchg
mov
jns
push
ret
in
mov
pop
sbb
mov
xchg
cwtl
xchg
gs
push
mov
sbb
add
lret
inc
push
pop
sbb
in
lahf
jle
mov
push
pop
pop
loope
mov
gs
mov
pop
cmp
ds
jns
inc
in
dec
sahf
mov
mov
inc
int3
cmp
jge
adc
loope
mov
sbb
cli
mov
leave
test
pop
xor
cmp
mov
sbb
leave
outsb
pop
add
pop
adc
mov
pusha
mov
imul
fmul
gs
aas
adc
mov
sbb
add
inc
fldenv
hlt
xchg
dec
mov
nop
sbb
xlat
mov
mov
jbe
xor
ret
fcomp
fcomip
sarb
insl
shlb
ja
in
popf
fcmovnu
leave
lods
xchg
xor
mov
mov
xchg
push
pop
push
inc
mov
lods
insl
jns
cmp
pushf
sub
outsl
daa
or
sbb
pop
out
je
xrelease
sub
add
cmp
and
jg
add
jns
ret
push
jl
mov
mov
popl
std
jbe
js
fwait
mov
xchg
push
sub
add
lea
or
test
test
inc
and
aad
push
or
arpl
int
out
mov
call
sub
mov
sbb
push
in
mov
adc
ret
add
xor
sbb
dec
mov
jb
push
and
loope
xchg
jo
enter
leave
jae
and
mov
mov
dec
xor
mov
sbb
pop
dec
push
xor
and
in
leave
add
sub
dec
xchg
pop
cmpsb
and
out
test
ret
rolb
insb
lret
mov
dec
rcl
in
ret
fwait
push
add
ljmp
xchg
sub
orl
push
mov
xor
push
cmpsb
xchg
inc
mov
lock
xchg
popf
daa
stos
fstpt
ret
sub
cltd
push
mov
push
addl
sti
xlat
repz
fisubrl
mov
pop
mov
mov
imul
in
jle
pop
fnstcw
push
sub
pop
push
lds
lock
insl
daa
aam
divb
jno
fsts
cmpsb
popa
push
mov
in
sub
push
ljmp
dec
sub
add
jo
cltd
mov
jp
cmpsb
pop
lods
enter
inc
shlb
daa
pop
or
add
and
pusha
xorb
aaa
jb
in
inc
push
dec
adc
xor
pop
jg
daa
jae
push
cmp
rcr
ret
fmull
roll
sbb
std
aaa
data16
push
mov
push
xlat
fcompl
bound
nop
jg
sub
jg
int
xchg
scas
outsb
xor
add
test
cmp
mov
cmp
sub
dec
insl
xchg
push
dec
cmc
enter
lods
ja
imul
imul
sti
sub
gs
xchg
sub
mov
movsl
js
sbb
iret
or
inc
dec
sti
gs
lret
inc
inc
je
pusha
shlb
int3
push
pop
repnz
mov
adc
push
jno
push
and
scas
mov
cli
push
js
stos
scas
dec
add
adc
int
call
int
pop
sbb
mov
lret
and
adc
sti
shr
pop
movsl
sahf
nopl
push
xchg
jno
dec
mov
ljmp
mov
adc
or
cmp
jne
shrb
repnz
and
ljmp
aam
movsb
out
repz
xchg
ret
test
push
test
and
outsb
mov
test
sbb
push
ficompl
dec
clc
xchg
js
pavgb
add
movsb
inc
mov
test
xor
out
xor
xchg
dec
fwait
push
fbstp
mov
leave
jbe
and
push
push
mov
fdivrs
icebp
lea
call
into
cmc
push
mov
test
in
pop
lret
shl
imul
jl
out
push
xchg
push
inc
in
jno
flds
int3
mov
rclb
fnstenv
aas
or
popf
call
inc
mov
leave
xchg
mov
add
aad
test
or
inc
jbe
and
or
aam
imul
jbe
xchg
arpl
ja
pop
push
sub
mov
adc
test
les
es
popf
xor
push
int
movl
pop
mov
add
ficoml
jnp,pn
push
mov
nop
lds
mov
push
sub
mov
inc
pop
or
in
icebp
pop
dec
jo
pop
push
inc
mov
mov
mov
push
push
jecxz
test
insb
inc
push
cltd
inc
ljmp
iret
fidivrl
popa
adc
xchg
mov
mov
mov
xchg
ds
cs
inc
push
repnz
xchg
insl
mov
lods
outsb
push
loop
xor
je
out
mov
jbe
jp
pop
dec
fs
push
aam
rcrl
iret
xlat
int3
fs
out
cwtl
aas
rorl
int3
push
xor
mov
imul
rclb
fs
lock
outsb
addr16
mov
mov
in
out
sbb
vunpckhps
cwtl
shll
jae
add
sub
jo
sub
pop
pop
add
bound
mov
jmp
cld
aas
sbb
js
fwait
loope
jle
sub
ljmp
mov
mov
pop
dec
jo
xor
inc
xchg
inc
mov
subb
pop
xchg
out
and
test
jmp
out
sub
cmp
lcall
stos
dec
mov
insl
into
lods
inc
xchg
add
incb
daa
jle
arpl
out
dec
call
in
js
cwtl
loop
sbb
add
add
aad
xchg
pop
aas
push
fbstp
jns
or
aam
mov
loope
cmp
jae
sbb
adc
fdivrl
mov
add
shrb
rorl
push
stos
scas
out
push
mov
int3
andl
inc
or
mov
mov
push
test
mov
push
rcll
sub
jb
test
sbb
dec
push
add
adc
mov
cmp
sub
jl
shll
scas
add
jle
lret
cmc
js
nop
pop
aad
push
dec
fldt
inc
jecxz
push
push
arpl
sbb
cmp
mov
mov
cld
pop
dec
dec
cli
scas
push
fs
inc
push
cli
iret
dec
jecxz
lds
add
lods
mov
mov
xchg
xor
mov
jp
add
repz
pop
push
aam
xchg
pushf
pop
jbe
dec
or
jp
loope
iret
cmp
push
pop
mov
mov
adc
ds
add
lret
push
cltd
cmp
jae
cmp
lea
add
mov
mov
ss
loop
push
lea
mov
inc
icebp
hlt
sbb
jne
mov
mov
push
sub
pop
jg
adc
jae
out
inc
repz
dec
mov
ljmp
mov
jge
jbe
mov
sti
xchg
out
in
in
jne
cmpsl
test
push
add
jle
xchg
lcall
adc
adcl
add
loope
ret
xor
fnsave
ror
cmp
xchg
push
testl
push
ljmp
xchg
mov
sti
fcoms
adc
cmp
and
into
fwait
test
frstor
mov
jmp
or
xlat
stc
adc
add
sub
jb
pop
push
mov
out
xchg
push
push
pop
cmp
negl
insl
jge
popf
mov
lods
mov
mov
adc
add
fsubrp
divb
lret
nop
roll
insl
inc
sahf
shll
dec
fistps
in
mov
xchg
sar
or
mov
sub
loope
push
mov
push
pop
cmp
push
cmpsl
cld
aas
jo
shll
les
call
mov
stc
mov
cmp
adc
repnz
outsb
inc
push
insb
sub
into
aas
mov
lret
cwtl
rclb
pushf
andl
ss
fs
cmpsl
hlt
jae
adc
jno
add
orl
gs
js
inc
xchg
mov
in
test
addl
xor
sbb
inc
fnsave
clc
cwtl
iret
shll
xchg
mov
fldl
lea
xchg
out
dec
andb
ljmp
pop
lret
jno
cmc
jo
ret
test
aad
or
nop
dec
es
inc
sti
mov
psrlw
and
pop
inc
je
scas
dec
ds
pop
idiv
pop
mov
jge
push
mov
stos
fistpl
add
in
scas
in
sub
and
aas
xor
jp
xlat
mov
ret
sti
mov
mov
cmp
mov
lret
inc
push
hlt
ljmp
ret
aaa
adc
in
sub
lcall
dec
in
jbe
icebp
out
lds
xchg
ja
pop
mov
pushf
repz
shr
dec
xchg
dec
jmp
mov
jmp
or
mov
movsb
test
sbb
xchg
imul
bound
imul
std
lret
test
test
negl
push
daa
inc
inc
adc
dec
sbbl
xchg
or
rcrl
add
pop
bound
xchg
pop
xor
xchg
icebp
ret
pop
xchg
jl
xor
xorl
mov
bound
ret
mov
and
shl
xor
in
into
pop
push
cld
fidivs
fisttpl
mov
out
sbb
mov
mov
push
aad
inc
mov
pushf
test
add
andl
fucomip
mov
mov
cs
or
cmp
jns
sbb
mov
jg
sbb
or
and
push
push
or
ja
mov
xchg
cmp
and
into
test
cmc
and
out
pop
int
cwtl
dec
int3
inc
ret
shll
mov
imul
pop
mov
mov
inc
lods
aaa
mov
test
aad
loopne
fidivs
xor
fisubrs
and
mov
into
cwtl
or
mov
out
pop
ret
lds
sub
jmp
jne
adc
mov
xlat
pop
mov
jne
add
adc
xor
mov
mov
inc
push
cmp
cmc
inc
fstps
fcomps
or
xchg
mov
adc
aas
clc
inc
ss
push
sub
lret
popl
mov
inc
jnp
sub
cltd
ret
mov
jl
adc
cmpsl
push
pop
and
push
mov
adc
pop
sbb
cmp
out
dec
sbb
arpl
and
sbb
adc
jmp
je
sub
aas
loop
xchg
mul
xchg
and
cli
jns
orb
fnstsw
out
mov
test
jmp
fiaddl
sahf
sub
daa
nop
int3
test
mov
xchg
fcomps
fstpt
mov
xchg
repnz
pop
mov
cmpsb
jl
dec
or
pushf
dec
sarl
subl
jnp
js
pop
sbb
jo
ja
and
sbb
movsb
bsr
sub
aas
mov
ja
test
jg
ficompl
cli
mov
aam
fbstp
aam
push
jb
cs
pop
mov
out
dec
sbb
xor
xchg
es
push
mov
in
aad
rol
les
pushf
adc
les
ljmp
inc
jp
les
xchg
sub
xor
push
inc
and
push
sbb
fisubs
out
clc
btr
sbb
sub
popa
imul
xor
adc
xor
shll
mov
mov
cmp
mov
add
popa
jne
mov
or
test
push
ds
push
xor
sbb
dec
jmp
dec
fbstp
imul
or
mov
mov
add
xchg
daa
cmc
dec
int3
insl
cmp
lods
imulb
loop
data16
pop
loope
lds
add
jecxz
inc
sub
fxch
push
xorl
imul
push
adc
jmp
mov
dec
inc
test
and
es
lock
push
in
popa
subl
insb
subb
jmp
sub
popa
push
and
ret
mov
xchg
call
sub
dec
outsb
in
cltd
sbb
jge
test
pop
pop
icebp
mov
xor
xor
jne
inc
loopne
mov
bound
enter
mov
xchg
filds
jae
add
jge
iret
dec
scas
push
pop
push
and
fildl
mov
push
xchg
push
mov
scas
mov
sub
ficompl
add
loope
cmp
pushl
adc
jecxz
xor
loop
dec
mov
lcall
test
dec
push
mov
stos
dec
popf
xor
out
insl
pop
into
in
pushf
notl
mov
sub
or
fs
mov
sbb
sbb
jl
icebp
mov
in
int
scas
xchg
lds
lret
sbb
dec
in
adc
out
inc
enter
movl
and
push
leave
and
inc
pop
ficoml
lret
xor
jecxz
xchg
lock
cmc
push
mov
and
fsubr
xor
ds
mov
push
mov
js
mov
dec
xchg
scas
xor
sahf
flds
and
lret
xchg
in
movsb
mov
mov
cld
out
adc
xor
fsubrl
lods
jp
xchg
lcall
in
lret
and
imul
adcl
outsl
jl
lock
cwtl
mov
fcoms
fstl
sub
adc
std
cmp
les
popf
jle
lds
fdivl
pop
test
xchg
adc
adcb
arpl
pop
gs
inc
xchg
add
shll
rclb
popa
in
sbb
fsubrs
test
aas
mov
mov
push
mov
bound
jl
add
add
das
repz
lods
push
pop
mov
and
and
sbb
movsl
pop
ss
mov
fnstcw
std
sbb
imul
sub
cmc
inc
cwtl
outsl
loopne
es
jecxz
rcll
inc
fwait
loope
out
test
fsubl
test
mov
movsl
repnz
sub
mov
rclb
lea
mov
notl
leave
sub
or
frstor
jge
stos
movsb
push
iret
add
in
mov
sbb
and
jb
enter
ljmp
mov
cmpsb
call
dec
mov
scas
call
xchg
js
test
sbb
add
aam
pop
loopne
dec
subb
loopne
cmp
and
or
add
mov
testb
pop
loope
ret
mov
xor
lock
sub
cmpb
sahf
sbb
adc
outsl
inc
fwait
push
pop
cmp
xchg
fsub
pop
ret
xchg
jp
hlt
sub
push
iret
out
sub
lret
cs
push
test
jns
out
xor
aam
stc
mov
test
jmp
and
xchg
push
std
stos
fisttpll
sub
addr16
xchg
xor
test
and
adc
ror
fcmovnu
mov
and
jo
sub
pop
dec
test
jnp
outsb
fs
lods
push
leave
jns
mov
in
sbb
mov
adc
mov
add
shr
mov
push
loope
ja
cmp
sahf
es
lret
jecxz
in
and
aas
out
push
ljmp
add
decb
ficompl
and
outsb
in
mov
jns
sti
lret
fisttpll
stos
ja
mov
jnp
jbe
and
mov
out
addl
orps
pop
out
cld
or
sahf
pop
dec
mov
popf
and
mov
mov
cmp
and
test
insb
pop
enter
push
xor
cmp
push
mov
int3
dec
dec
pusha
push
xor
fisubl
xchg
fdivrs
icebp
out
insb
push
jmp
xchg
and
cmp
in
insb
dec
das
inc
cmc
dec
test
sarl
sbb
jl
jge
cmpsl
sbb
mov
adc
decb
loope
repz
or
lret
push
lahf
stc
aam
mov
add
fs
sub
inc
into
pop
xchg
dec
mov
and
gs
std
ja
mov
pop
in
bound
daa
xor
lods
enter
addb
push
xor
cmp
jae
adc
aam
out
cmp
flds
fcomp
je
jnp
adcb
jns
mov
pop
mov
push
inc
ds
pusha
stos
push
inc
dec
mov
push
xor
sbb
or
stos
cld
arpl
sub
repnz
outsb
mov
in
mov
icebp
jge
and
bound
mov
sbb
sub
sbb
mov
xchg
cmp
or
fwait
sbb
es
inc
icebp
imull
flds
jg
jno
imul
mov
clc
mov
loopne
mov
outsl
sub
shlb
fsubrs
fwait
iret
mov
inc
or
addr16
dec
subb
pop
out
push
mov
mov
adc
arpl
inc
lret
stos
sbb
std
mov
lret
adc
inc
cmp
stos
mov
mov
mov
ds
data16
push
stc
loope
hlt
outsl
cmp
stos
adc
in
add
stos
mov
outsb
ret
cmpsl
fldcw
orl
lock
inc
notl
in
xor
test
push
jmp
mov
ss
sub
nop
incl
add
sbb
je
enter
leave
jbe
imul
adc
cmp
std
or
stos
and
push
mov
push
jp
outsl
sub
sub
test
cs
mov
jno
adc
jno
test
mov
loopne
xor
fwait
inc
jo
test
pop
int
aas
ja
ficompl
mov
test
dec
add
pop
lahf
ret
imul
insl
sbb
in
push
jb
sbb
jcxz
fidivrl
inc
rorl
scas
movntq
pop
ret
loope
aas
jb
push
sbb
call
rorb
rcrb
divl
xlat
jns
cmc
xor
imul
or
icebp
rcr
rorl
neg
out
add
sahf
inc
sbb
fstps
aad
mov
or
inc
movsl
aam
repnz
push
lock
nop
dec
inc
clc
pop
dec
into
inc
andb
cmc
test
outsl
icebp
outsl
jo
or
aad
sbbl
cli
mov
out
xchg
in
jno
inc
in
push
mov
cld
stc
jns
sub
in
stos
mov
dec
xor
inc
jle
dec
cld
fsubrl
inc
mov
iret
fwait
jle
xchg
icebp
adc
into
jmp
fnsave
push
stos
enter
cld
insl
mov
push
dec
lcall
int
xor
push
das
daa
lahf
inc
divb
fistl
je
mov
push
or
into
or
pop
mov
push
add
out
xchg
add
jge
rclb
test
call
mov
fistps
push
xchg
fidivs
mov
in
cmpsl
out
clc
out
fldenv
fldl2e
in
fldenv
inc
test
cli
scas
ljmp
sbb
jb
addr16
das
inc
lods
gs
ret
fistl
jl
out
jg
push
jns
mov
adc
mov
lret
clc
jns
sub
jp
xchg
mov
movsl
mov
mov
inc
pop
rcrl
es
mov
xchg
pushf
jnp
fmull
push
lret
cltd
or
addr16
outsl
jo
cmp
pop
jge
xor
movsl
mov
mov
sub
mov
loopne
sbb
sub
shrl
adc
ss
adc
in
and
or
and
cmc
adc
rcrl
pop
inc
dec
stos
push
fst
cmp
mov
arpl
mov
push
sarl
int3
subl
push
lods
cli
lret
imul
cwtl
negl
xchg
cmp
fsubrp
out
clc
mov
add
outsl
and
insb
out
hlt
mov
mov
ss
addr16
pop
outsl
or
loope
sbb
jg
xchg
xlat
xchg
mov
or
cmp
inc
fadd
adc
rcrb
xor
test
mov
call
xchg
shll
mov
fmuls
les
insl
jp
jo
outsl
lods
stos
imul
xchg
out
int
add
enter
dec
sub
orb
pop
or
adc
xor
inc
pop
ds
jno
xchg
testl
and
xor
xchg
lahf
sub
clc
insl
push
xor
and
jecxz
pop
es
xchg
out
out
loope
dec
push
xor
cmp
xor
decl
bound
inc
lea
mov
ja
xrelease
in
fs
add
fiaddl
decb
cmp
xchg
xor
mov
shl
js
sub
movsb
ficomps
leave
mov
lcall
cmp
xchg
ret
pop
jns
sti
xchg
add
test
fsubl
rcl
mov
rorb
mov
mov
mov
sbb
loopne
xchg
xor
or
xor
and
outsb
mov
rorb
test
mov
into
mov
inc
push
out
pop
cmpb
scas
pop
out
lea
movsb
insl
xor
outsl
subl
inc
cmp
or
inc
pop
cmp
add
sub
inc
inc
sarl
lea
aaa
into
cwtl
jecxz
hlt
ret
jns
pop
into
aad
mov
xchg
mov
notb
movlps
inc
xlat
mov
pop
jecxz
push
add
ja
pop
jmp
ss
std
dec
cltd
push
pop
push
test
mov
lea
mov
cli
fstp
imul
mov
push
mov
xlat
or
lock
das
sub
or
cld
cltd
pop
and
repz
push
fldenv
lret
pop
hlt
pop
jmp
cmc
sub
arpl
lods
sub
ret
inc
fmulp
cmpsb
push
pusha
loope
sub
mov
or
cmp
push
ljmp
pop
ret
adc
dec
loopne
xor
repnz
push
inc
inc
outsb
movsb
paddsw
faddl
test
cmp
aaa
lret
push
sub
xor
sti
in
jb
popf
xor
je
inc
jmp
movsb
in
mov
or
mov
inc
testl
cs
enter
mov
xchg
sbb
cmp
xchg
aaa
inc
jmp
jle
sbb
fdivrp
mov
push
sbb
mov
xor
dec
jno
jae
cmp
jecxz
call
div
inc
leave
mov
iret
cltd
dec
adc
jno
loopne
mov
es
fnstenv
movsb
stos
pop
insb
jo
sub
xor
loop
fiadds
daa
or
scas
push
xor
and
int
jbe
out
mov
pop
popf
xor
fwait
cmc
xor
cmpsb
push
fwait
jnp
or
adcl
sub
and
mov
aam
and
outsb
aam
fldl
pop
or
popa
cmp
inc
bound
push
or
jl
fnstsw
push
pop
out
and
push
cmp
jb
dec
loope
es
mov
jb
pop
inc
jne
mov
mov
pop
dec
push
lahf
out
fwait
xlat
xchg
pop
or
fbld
pop
mov
fbstp
out
ljmp
in
mov
mov
rorb
jmp
cmp
in
add
adc
out
mov
mov
mov
jp
add
jne
pop
inc
mov
sbb
les
out
pusha
cmpsl
imul
xchg
int3
lret
mov
mov
cmp
push
into
xor
cmpsl
and
fdivl
pop
clc
roll
leave
push
mov
inc
pop
mov
daa
fdivs
ss
divb
push
bound
push
jb
cmp
insl
pop
inc
hlt
in
jp
shr
or
in
inc
bound
fiaddl
pop
push
add
jno
mov
xchg
test
movsl
push
fsubr
loopne
out
aad
mov
ja
and
or
loopne
ds
and
adc
stos
ret
inc
jg
pushf
std
mov
sbb
in
pop
imul
gs
mov
rorb
jge
sahf
sub
fistl
ret
mov
in
pop
mov
stc
mov
cs
fsub
dec
xor
movhlps
cmp
sub
fcomps
inc
or
push
xchg
cli
or
xchg
or
adc
jmp
test
xor
mov
fwait
loopne
test
inc
sbb
les
dec
icebp
repz
aam
fcoms
sbb
mov
outsb
jns
adc
daa
push
mov
adc
xlat
cmpsl
or
fwait
inc
cmp
mov
popa
cmp
push
add
mov
or
sub
movsl
rolb
mov
push
movsb
icebp
pop
pop
in
push
lds
stos
mov
fidivrl
loop
cs
sbb
pusha
push
cmp
inc
ret
je
dec
lret
add
inc
adc
push
in
mov
movsb
xchg
jg
fs
aas
sbb
fadd
jno
dec
stos
push
cmp
sub
sarl
jne
push
mov
test
dec
inc
mov
cmp
jg
setae
sub
jne
je
insl
movsb
inc
popa
mov
movl
js
pushf
cld
cs
xor
sub
jmp
idivl
bound
dec
fcoml
adc
scas
xor
arpl
icebp
inc
xor
add
jg
jle
cli
dec
subl
jno
push
les
push
in
cmc
mov
mov
pop
pop
sbb
fcomip
cltd
push
xchg
cmp
dec
daa
inc
je
or
es
xlat
popa
jbe
idiv
or
in
sbb
into
mov
ret
sbb
cmp
outsb
fisttpll
push
mov
pop
mov
loope
sub
inc
aas
xor
mov
add
popa
sbb
mov
xor
adc
cmpsl
std
or
sahf
pop
imul
outsl
mov
xor
into
je
jmp
pop
cmp
mov
loope
decl
inc
lock
pusha
sub
pushf
pusha
imul
jns
cmp
mov
cld
fcomp
pop
mov
mov
mov
push
push
xchg
pop
dec
cmp
nop
dec
sub
addr16
js
scas
jb
xor
xor
cmp
adc
pop
arpl
hlt
adc
sub
ret
inc
mov
les
dec
mov
or
imull
adc
dec
jl
jge
xor
out
add
gs
pop
or
pop
lock
std
rorl
aas
popf
testl
xchg
mov
fwait
loopne
xchg
int
xchg
je
mov
vpaddsw
xor
loope
test
jg
test
dec
push
or
lods
pop
cmp
jl
aad
es
sbb
aam
ret
cmpsl
gs
bnd
cmp
dec
pop
test
xchg
pop
test
dec
shlb
inc
filds
mov
iret
call
sbbl
add
mov
mov
sbbl
and
imul
adc
jp
push
cmp
andb
mov
rorb
lahf
lods
outsb
push
and
sbbb
mov
lods
orl
cld
jb
cs
imul
in
inc
pop
stc
sbb
sbb
xchg
adc
cltd
sub
hlt
stos
addr16
or
sbb
in
dec
inc
subb
dec
mov
int3
mov
data16
cmp
push
adc
xchg
cltd
pop
sub
pop
and
shl
push
jmp
jg
out
inc
inc
fs
mov
ds
pop
push
mov
adc
cli
mov
inc
inc
call
leave
cltd
inc
fldcw
xor
out
imul
push
sar
sbb
out
inc
movsl
cwtd
or
ss
xchg
and
js
adc
scas
stc
dec
rcl
ds
clc
outsl
pop
daa
adc
lea
pop
or
add
and
js
das
in
inc
xor
inc
addr16
mov
loope
idivl
sbb
idiv
mov
je
and
mov
lahf
loope
push
inc
out
lret
mov
mov
mov
cmp
mov
cmpsb
pusha
cld
push
adc
xlat
inc
sub
sub
jp
das
in
mov
loop
pushf
xchg
test
push
adc
sarl
sarl
inc
addr16
push
ds
lcall
sub
push
int3
cmp
cltd
lock
mov
in
mov
fdiv
xchg
cmp
les
fsub
mov
jbe
call
fisttpl
scas
sub
stos
pop
adc
imul
jge
test
out
arpl
sub
push
xor
inc
jg
ret
out
xor
mov
arpl
add
imulb
test
imul
cltd
ficompl
movsl
jl
leave
pop
mov
pop
lret
test
or
mov
idiv
adc
ret
es
mov
push
test
cmp
xchg
leave
mov
aam
outsb
sbb
std
sub
lahf
shll
cmc
xchg
das
inc
xchg
jb
pusha
sub
iret
cmpsb
movsl
ret
jmp
mull
stc
add
pop
xlat
mov
imul
xor
pop
push
push
into
mov
push
test
mov
out
or
js
jecxz
jne
and
movsl
ret
push
jns
adc
jl
mov
sub
jnp
ja
mov
ljmp
jns
mov
xchg
insl
and
popa
or
jnp
fdivs
imul
pop
inc
sub
xchg
je
inc
jle
add
and
add
mov
jge
pop
push
leavew
insl
hlt
icebp
and
fists
cmpl
xor
mov
or
sbb
test
scas
sub
cli
lods
mov
cmp
inc
ret
inc
gs
clc
jecxz
mov
in
inc
out
loopne
mov
push
fcoml
iret
ret
aaa
rclb
mov
cld
in
pop
push
fcomp
stos
mov
mov
cmpsl
mov
or
mov
push
xchg
inc
out
xorl
addl
pushl
popf
cmp
lret
imul
pop
pop
adc
push
cmc
sub
mov
repz
out
in
mov
leave
pop
mov
xchg
testl
mov
mov
lea
aam
insl
loop
daa
iret
inc
cmpsl
imul
into
inc
in
jnp
ret
mov
outsb
in
pop
xchg
mov
loop
sbb
fiaddl
lea
cmp
sbb
sahf
call
mov
jns
lret
hlt
inc
add
jecxz
orb
dec
or
js
lods
xchg
dec
inc
sbb
outsb
push
mov
sbb
mov
imul
pop
pop
cmp
sbb
test
xorb
pop
shlb
and
scas
out
jp
movsb
jge
push
mov
loop
push
gs
and
mov
dec
lock
jo
in
les
icebp
fidivs
fs
push
shll
fistl
mov
repz
test
int
xchg
sub
cvtpi2ps
int
cmpl
inc
jbe
push
dec
daa
pop
mov
lret
out
ss
aaa
add
cmp
push
call
jmp
ljmp
movl
push
jecxz
adc
mov
push
dec
adc
fsubrl
adc
sub
str
data16
pop
or
pop
fcomps
hlt
or
int
xchg
pop
push
mov
push
rcl
pop
addr16
mov
mov
mov
xchg
insb
pop
xor
dec
push
js
ljmp
jecxz
loopne
xor
movsb
or
addr16
pop
lcall
add
pop
mov
jnp
cmp
in
int3
ret
fimull
mov
push
mov
sbb
aaa
xlat
inc
lods
ror
icebp
outsb
and
jp
adc
push
lods
pusha
xchg
push
mov
das
fsub
dec
ret
fwait
sti
cmp
mov
jp
inc
xchg
cs
insl
aas
bound
sbb
mov
jb
xchg
test
shlb
dec
dec
or
sub
inc
test
push
clc
jl
icebp
mov
add
xlat
cmp
jg
inc
adc
pop
xchg
ljmp
lahf
mov
hlt
sub
xorl
or
adc
mov
pop
and
xchg
jne
dec
nop
push
cmp
adc
inc
or
or
cmp
arpl
fldenv
inc
inc
push
mov
ja
or
rcrb
mov
jne
push
dec
mov
adc
push
pop
cltd
in
xchg
xchg
cmc
mov
dec
dec
push
out
insl
sub
jo
hlt
mov
nop
cmc
aad
leave
mov
cmpsl
stc
sbb
xchg
inc
in
daa
lret
cmp
cwtl
push
jp
jae
ja
call
ljmp
jae
sub
fimull
orb
sbb
pop
xor
imull
ds
outsb
mov
loop
sahf
and
enter
jb
push
adc
dec
mov
xlat
lea
inc
mov
push
jbe
hlt
outsb
inc
nop
xor
in
xor
imul
test
lods
mov
mov
pop
rcrl
jno
aam
fcmovu
test
das
addr16
and
dec
push
sub
aaa
jne
xchg
push
jp
xor
mov
xor
sbb
pop
loopne
lcall
xchg
cmp
addr16
fnstsw
lret
lretw
adc
lret
insb
fbstp
add
and
fists
jno
pop
xor
pushf
ret
rcrb
mov
insl
push
aam
cmp
ret
shll
fisubs
mov
xchg
hlt
jbe
cmp
xor
and
frstor
sbbb
in
pusha
inc
lret
mov
xchg
dec
shrd
dec
in
cmpb
lock
mov
int
pop
jnp
loop
scas
test
and
iret
cmp
out
sbb
repnz
test
popa
mov
int3
jp
popf
aas
pusha
mov
test
decb
loope
push
and
ja
fidivs
mov
imul
call
xchg
jg
add
or
inc
push
adc
stos
scas
pop
cmp
lods
xchg
cmp
add
pop
sub
dec
xchg
daa
sbb
jb
lahf
nop
and
mov
jecxz
daa
push
rcrb
std
dec
jno
stc
or
cmp
fwait
cmpsb
cld
sbb
fwait
sbb
jbe
imul
mov
in
add
jecxz
int3
sbb
jle
sub
das
sbbl
mov
jne
mov
data16
nop
jb
cmp
out
adc
add
ja
sti
mov
sub
cmp
popf
sbb
mov
mov
std
add
lods
orl
imul
cs
popa
push
popf
mov
jb
xchg
daa
ffreep
imul
dec
mov
test
push
mov
pop
sbb
xor
mov
ljmp
mov
jb
pop
cmpsb
ficompl
sub
sub
mov
shlb
push
inc
out
mov
pop
jnp
pop
cmpsl
rcll
scas
sub
push
jne
fistpl
mov
jle
outsb
push
in
and
iret
out
jle
orb
insl
jne
movsb
nop
mov
sub
nop
sbb
pop
sbb
loopne
push
mov
es
push
daa
insl
lds
add
mov
loopne
sbb
outsb
ds
ljmp
mov
lahf
xchg
cmc
jp
pop
lret
nop
movsb
aad
mov
mov
frstor
jno
shll
insb
pop
push
ficomps
roll
sub
icebp
pop
loop
test
mov
cmpsb
cmp
add
jl
push
cmp
adc
pop
jae
fwait
pop
js
jns
sbb
popf
int
leave
ljmp
cli
dec
sarl
std
neg
stos
sti
outsl
sbb
cmpsb
push
scas
loop
mov
movb
dec
fiadds
and
pop
dec
frstor
icebp
mov
pusha
icebp
adc
jno
jo
popf
aaa
mov
cmp
rclb
add
iret
daa
sub
roll
aaa
xchg
add
mov
or
sub
add
cmc
loop
js
icebp
in
add
pop
push
xor
push
lds
mov
mov
out
and
out
gs
mov
lds
pusha
xchg
inc
cmp
movsb
inc
icebp
adc
divl
pushf
dec
push
icebp
pop
scas
dec
push
ja
hlt
lret
push
in
mov
in
mov
les
scas
inc
push
inc
daa
mov
or
mov
pop
stc
cmp
outsl
aad
lods
into
int
aam
or
jle
arpl
sbb
dec
push
jge
push
dec
push
jno
pop
adc
fstps
out
dec
and
dec
insb
sbb
mov
cli
ljmp
sub
mov
dec
mov
gs
adc
or
push
insb
test
mov
inc
jp
int3
add
pop
or
and
pop
lret
into
jnp
stos
push
jo
jns
lds
mov
cs
dec
adcb
fs
cld
sahf
inc
push
cltd
mov
adcb
lahf
or
inc
shll
sub
dec
xor
dec
fnstenv
in
sahf
push
js
outsb
inc
rol
mov
inc
push
pop
adc
push
pop
sub
cmp
sub
aas
push
imul
int3
lods
cld
mov
inc
movsl
add
outsb
fwait
xchg
and
dec
jo
leave
movsl
pop
lahf
dec
mov
into
push
lods
dec
into
inc
fwait
pop
and
loop
adc
mov
mov
imul
int
jle
out
and
repnz
pushf
or
mov
sub
sbb
into
lcall
add
or
shr
lea
pop
mov
push
in
cmpsb
cs
insl
test
es
int3
mov
fdivr
hlt
add
scas
adc
sub
test
jecxz
ds
inc
inc
add
xor
pop
push
imul
jo
cmp
cmp
sub
inc
dec
adc
xchg
lret
pop
cmc
pop
and
mov
pop
mov
pop
cld
shrl
pop
or
mov
dec
lods
icebp
mov
loop
add
mov
out
push
daa
xchg
repnz
subl
aam
pushf
cld
divb
jbe
and
in
jmp
jg
adc
test
add
xor
sbb
add
jecxz
inc
xor
sbbb
pop
mov
adc
scas
xor
lret
xor
ds
sti
insl
mov
int3
ljmp
xor
xchg
mov
mov
sub
pop
test
lret
enter
inc
push
mov
sub
imul
mov
js
clc
fists
lds
cltd
das
jg
movb
addr16
cmp
sbb
jne
inc
enter
loopne
mov
dec
push
stos
xor
stos
sbb
mov
or
idivl
les
adc
mov
xchg
and
inc
pop
cmc
add
fistl
out
je
in
mov
jbe,pt
jno
ja
ja
sahf
rcll
pusha
adc
pop
fdivrs
mov
cmpsl
and
ja
and
xchg
testl
aas
and
dec
xchg
adc
sbb
xchg
mov
add
das
xor
cmp
subps
add
push
xchg
jle
jle,pn
ficomps
and
aas
sub
pop
in
adc
dec
dec
sub
repnz
dec
or
movsb
scas
pop
test
dec
imul
imul
cmp
xchg
data16
popf
xchg
lock
fsub
popf
adc
push
mov
sub
push
pop
mov
jne
fcomip
adc
push
push
rcl
aaa
jge
ret
xchg
aas
cld
mov
mov
add
jnp
fwait
mov
fmuls
inc
call
insl
or
add
pop
shll
and
push
sbb
jo
ret
cwtl
sub
andl
adc
pop
data16
xchg
inc
jle
ret
xchg
sub
adc
add
lahf
lods
mov
ret
mov
adc
jnp
movsb
call
negl
jp
mov
dec
loopne
mov
pop
hlt
push
lcall
or
push
popw
cmpsl
popf
daa
fwait
sbb
aad
dec
neg
sbb
into
pop
int
add
rorb
dec
jge
pop
mov
cmpxchg8b
sub
aam
xlat
repz
xor
xchg
mov
outsb
dec
pop
xchg
fcomp
enter
not
addr16
fwait
xchg
test
lea
push
mov
mov
dec
sub
test
mov
and
mov
xor
pop
mov
mov
pop
loopne
lret
out
add
jp
sub
insl
pop
mov
sub
mov
inc
int
lds
xchg
hlt
inc
in
pop
adc
lea
ficoml
inc
xchg
gs
cltd
popa
jg
scas
ja
push
sub
inc
lea
mov
cmpsb
mov
mov
daa
insb
daa
adc
and
add
push
addr16
or
popf
cmp
adc
fdivrl
and
ret
dec
jb
gs
loope
out
stos
adc
out
inc
leave
push
mov
dec
mov
dec
ja
cld
push
mov
cmp
cli
xchg
sbb
je
and
xchg
stos
jns
inc
jnp
xor
xchg
mov
mov
jb
jae
nop
bound
js
fdivr
mov
lcall
push
mov
sbb
addb
mov
push
dec
addr16
nop
loop
xchg
xchg
inc
pop
sub
lea
and
shrl
or
jbe
xchg
out
scas
mov
dec
inc
jp
in
and
dec
enter
cld
push
add
lods
adc
sbb
hlt
lcall
jge
inc
outsb
test
cmp
fcomip
out
add
mov
sbb
mov
push
xor
mov
mov
lcall
lret
sub
fcompp
lods
adc
cltd
mov
into
pop
xor
fnstcw
mov
ljmp
subb
xchg
shll
and
xchg
dec
or
outsb
sub
pop
xchg
xchg
shlb
arpl
dec
mov
or
cmp
pusha
ret
mov
imul
cltd
mov
xchg
data16
inc
inc
subb
scas
push
inc
aad
int3
inc
lea
jge
dec
sub
or
icebp
pop
iret
cli
or
mov
sub
inc
xchg
push
mov
lahf
data16
inc
mov
int3
cmpsl
sbb
shlb
xor
pop
add
in
out
lods
rolb
or
mov
test
mov
fs
sbb
js
arpl
movsl
jno
mov
mov
iret
addb
adc
movd
cld
or
push
mov
mov
dec
es
cli
in
push
lods
xchg
cmp
jecxz
mov
rorl
push
mov
fstl
out
push
scas
call
enter
rorb
cli
inc
pop
xchg
pop
ret
out
push
jns
pop
ljmp
jo
sub
inc
sub
scas
leave
gs
mov
push
jecxz
xor
outsl
xchg
fmull
psubusw
sub
jne
ljmp
ds
jns
loopne
mov
call
jnp
add
dec
xchg
sbb
push
push
out
ret
pop
and
rcrl
adc
pop
mov
pop
push
jnp
xchg
clc
xor
or
icebp
inc
and
sbb
es
or
mul
out
or
test
push
outsb
nop
adc
aaa
sahf
lcall
sbb
add
sbb
in
inc
ja
and
scas
dec
dec
pop
adc
cmp
pop
jge
popf
int
inc
xor
cltd
fs
rclb
inc
xor
inc
xorb
imul
lods
js
jnp
call
sbb
push
dec
popa
jbe
xchg
ja
dec
out
jl
stos
mov
orb
jb
cld
loop
lret
mov
adc
lods
or
shrl
lock
les
dec
or
push
call
test
push
sar
push
mov
jge
js
inc
mov
push
rcll
pusha
stos
pop
or
mov
lea
adc
icebp
mov
cmp
and
jns
mov
arpl
adc
fnsave
gs
mov
movsb
inc
mov
push
sti
xor
mov
mov
in
aad
daa
daa
jns
in
jbe
rcll
sub
and
push
lock
loopne
xchg
popf
popa
lea
fwait
xchg
je
xchg
cmp
xchg
hlt
add
loopne
mov
and
nop
je
xor
push
push
je
es
pop
mov
xchg
enter
into
push
out
adc
test
add
movsl
mov
xlat
je
add
push
push
sub
scas
add
popf
cmc
test
sbbb
fstpt
test
pop
mov
aaa
push
jae
mov
pop
int
loopne
daa
fdivrp
mov
subl
cs
push
rcrb
or
pop
xor
mov
jne
xor
hlt
sti
cwtl
add
test
xchg
les
push
mov
dec
pop
pushf
or
mov
mov
outsb
mov
sub
sub
fdivrl
sbb
data16
cmp
js
and
rcl
push
mov
ficomps
bound
std
mov
out
leave
ds
pop
push
xor
pop
test
push
xor
cmp
testl
inc
pop
xchg
push
mov
jae
sub
xor
insl
addl
lret
pop
mov
and
jmp
pop
mov
addr16
inc
pusha
cld
mov
nop
ret
in
pop
jae
fistps
in
or
mov
ds
out
test
pop
lcall
sti
pop
mov
and
mov
push
rcrb
or
xlat
jg
mov
pushf
mov
pop
pop
imul
cltd
sbb
sbb
dec
mov
aad
dec
push
aaa
xorl
push
push
push
call
push
cmp
outsl
das
xorb
sbbl
ljmp
out
fisubrs
pop
jmp
inc
pop
pop
sahf
cmc
sub
inc
fisttps
test
gs
push
enter
cld
and
push
sub
xlat
sbb
sbb
and
out
fld
fstpl
test
add
ret
jmp
stos
jge
xchg
testb
jbe
mov
and
mov
sub
ja
sub
int3
aas
mov
rcrl
in
xor
cmp
das
xor
mov
ljmp
dec
jecxz
cwtl
sarb
out
idiv
insb
mov
xchg
pop
fmuls
dec
addl
imul
pop
andb
mov
sbb
sahf
xchg
int
movsb
xor
mov
scas
je
test
cmp
cmp
dec
or
loope
mov
push
aas
lahf
dec
cmpsl
push
xor
mov
je
lret
pop
lods
push
ja
adc
flds
outsb
aad
jnp
jo
push
xchg
xor
js
xchg
cmc
es
fiaddl
lahf
mov
or
shrl
lea
adc
jle
lods
mov
xchg
mov
insl
int
jle
xchg
inc
mov
cli
in
out
xlat
lcall
jge
push
popa
aam
fldt
rcrl
pop
sbb
in
or
insb
test
xorl
pop
mov
dec
mull
vunpckhps
sub
sarl
jl
add
shll
outsb
sbb
push
out
fwait
testb
xor
outsb
ds
add
cmpsl
cld
mov
mov
test
and
xor
int
enter
lret
or
ficompl
xor
lcall
adc
daa
adc
or
sbb
sub
insb
js
cltd
push
add
mov
adc
add
xchg
mov
in
push
mov
mov
mov
imul
mov
cmp
mov
add
lock
adcl
push
push
shrb
push
or
sbb
in
pop
inc
inc
stc
shll
dec
inc
xchg
gs
lods
test
jo
mov
lds
aad
xchg
aad
imul
test
cmpsb
test
inc
xor
cmp
or
stos
xchg
fidivs
jne
xchg
push
adc
sti
scas
xor
out
add
pop
mov
sbb
enter
push
dec
daa
jne
js
adc
mov
ss
or
pop
call
jg
aas
cmp
enter
jge
sub
inc
mov
sub
cmpb
leave
lods
adc
aam
pop
pop
mov
add
dec
lods
ror
mov
jno
iret
inc
xlat
dec
xor
pop
xchg
out
lea
in
xchg
dec
mov
mov
mull
sub
loope
fs
jl
xchg
sub
xor
xchg
out
sub
icebp
dec
adc
xchg
cmpsb
xor
inc
sub
cltd
daa
and
orl
push
movsb
push
adc
loopne
mov
jbe
nop
mov
test
fimull
aas
xor
pop
dec
frstor
and
sub
insl
std
sbb
pop
pop
in
hlt
imul
add
ret
aam
or
je
and
jb
aas
and
stos
inc
push
push
sub
push
pop
mov
pusha
cs
rcl
adc
push
push
lgs
cld
pop
mov
jp
imul
pop
or
frstor
adc
dec
inc
sub
mov
mov
xor
flds
pop
sbb
jbe
mov
lahf
cmp
nop
mov
ret
add
insb
fadd
cld
push
aas
jno
sub
xchg
inc
mov
mov
out
fistpll
mov
sub
mov
xor
cmc
imulb
cmp
mov
fists
inc
jmp
or
es
aam
popa
clc
js
adc
inc
addr16
enter
or
mov
leave
cmp
inc
mov
out
mov
add
lds
data16
lock
xchg
das
or
sti
loop
popa
xor
xor
add
test
hlt
push
loopne
roll
mov
jp
hlt
xchg
addr16
pop
or
push
xchg
inc
lock
sbb
sti
hlt
dec
fidivrl
pop
or
imul
sahf
xchg
sti
jg
jg
xor
inc
bound
add
pop
aaa
and
push
xchg
fsubr
mov
xor
push
shll
adcl
mov
stos
jle
or
clc
mov
ficompl
push
jbe
xchg
dec
in
subb
popa
jmp
sti
out
mov
dec
or
xchg
push
aam
dec
mov
push
nop
inc
xor
pop
je
or
fcmovne
jo
or
cmpsb
test
pop
imulb
mov
in
fistpl
pop
std
pop
cwtl
lock
jg
xchg
and
popf
loop
loope
jge
rcrl
inc
push
mov
stc
inc
sub
mov
mov
arpl
inc
in
pop
adc
aas
xorl
jle
cmp
stc
cli
lahf
scas
dec
aaa
cmp
rorl
ficoms
fistps
push
jmp
lods
jmp
inc
inc
int3
dec
or
int
unpckhps
mov
dec
sub
mov
dec
cmpsl
pmulhw
in
xor
in
sbb
cmp
test
ja
lock
adc
mov
inc
and
and
cmpb
lods
dec
testl
in
xor
shll
push
adc
dec
enter
into
adc
or
test
repz
test
es
popf
cmp
lds
mov
ret
mov
mov
sub
leave
jae
mov
and
xchg
test
fucom
xchg
xchg
xor
sbb
in
pop
mov
inc
adc
gs
pop
push
pop
mov
pushf
subb
dec
aad
push
jo
cmc
xchg
mov
mov
push
and
adc
inc
mov
ret
mov
lret
dec
mov
pop
leave
jno
das
test
mov
adc
mov
jb
sub
shld
rol
sbb
and
xchg
cmp
mov
dec
push
lods
inc
aad
outsb
cmc
adc
pop
cwtl
mov
dec
jne
imul
dec
fsubp
ja
sbb
repz
cld
lock
jg
adc
pop
push
test
in
mov
clc
adc
mov
adc
lds
fbstp
push
cmp
sub
stos
sbb
pop
cmp
and
xor
xor
int
mov
jns
adc
mov
mov
in
xor
fsubp
cs
xchg
pop
mov
aad
add
repnz
dec
sti
cmp
mov
mov
fstl
jae
inc
imul
xor
xchg
sub
les
cld
and
jbe
add
daa
xor
push
mov
ljmp
push
les
sbb
std
lret
xchg
xlat
push
xor
sarb
lret
sti
rcl
cmpsl
mov
call
sti
fldt
shrb
dec
mov
fcomip
or
out
jb
fs
dec
sbb
cmpsl
xchg
out
mov
push
call
xor
rcrb
pop
test
inc
lcall
mov
xchg
mov
aad
cs
push
push
xor
lahf
mov
lods
and
fnstcw
test
mov
xchg
sub
jne
pop
inc
dec
pop
testb
push
xor
push
shrl
aad
fwait
xor
inc
fldt
daa
jo
xchg
fidivs
jecxz
dec
sbbb
mov
push
mov
jo
cmc
loope
jne
out
pop
lea
and
lret
mov
push
mov
inc
sub
push
icebp
sti
add
jmp
push
lahf
xchg
xchg
push
sbbl
jns
aas
and
mov
std
movsb
movsb
popf
add
pop
mov
xor
popa
push
in
xchg
cld
pop
jge
cld
fs
fucomip
sbb
les
xorl
loopne
mov
mov
fcmovnbe
add
fsubr
pop
hlt
mul
xor
in
aas
lahf
xor
fs
shlb
nop
add
jns
mov
push
sub
mov
in
es
pop
stc
sbb
loope
insl
mov
xchg
add
push
pop
pop
in
inc
pop
push
mov
xchg
cli
inc
fmull
inc
jns
lahf
fidivrs
inc
aas
xor
test
xor
stos
adc
xchg
int3
decl
add
xchg
std
aas
je
icebp
es
test
pop
push
mov
subb
in
lsl
movsb
push
push
out
negb
in
jp
xchg
jecxz
or
loopne
and
sbb
push
mov
xchg
cmpsb
out
jmp
jb
pusha
sub
int
xchg
cmp
fistpll
jne
jbe
fdivrl
das
jmp
sub
cmp
jge
push
jecxz
in
jno
fcoml
cmp
mov
or
inc
adc
loopne
cmp
lods
aad
push
xchg
test
out
push
fcoml
push
imul
jnp
mov
outsb
rclb
dec
ds
insb
jecxz
mov
mov
ss
lret
out
sub
inc
inc
mov
jle
mov
test
pop
xorl
sub
push
xor
gs
inc
js
mov
inc
adc
aam
imul
inc
pop
push
inc
xor
pusha
push
jl
sub
mov
mov
test
cmpl
mov
xor
stos
insb
movsl
cli
dec
jmp
push
or
negb
mov
fsubrs
cmp
mov
xchg
xchg
dec
imul
lock
decb
and
lods
sbbb
fdivrs
mov
push
bound
je
push
pop
fdivrs
cmpsb
ret
mov
popf
add
add
push
imul
popa
cmp
mov
popa
inc
test
and
imul
pushf
or
fstpt
mov
dec
fcomps
jecxz
xor
inc
loopne
mov
xchg
xchg
xor
sub
sti
pop
jno
out
lahf
pop
negl
adcl
shrb
lods
frstor
adc
test
jns
ret
daa
xor
mov
or
push
sahf
adc
and
xchg
jno
les
les
xor
mov
decl
xchg
xchg
xorl
idivl
pop
jo
mov
xchg
xorl
dec
xor
out
arpl
adc
xchg
adc
clc
aas
dec
pop
mov
fdivr
pop
iret
pop
daa
inc
lahf
shlb
pop
roll
xchg
push
loop
cmpsb
jns
pop
js
ret
jge
std
mov
popa
sbb
negl
cmpsb
fs
sub
popa
xchg
and
dec
pop
outsb
jle
mov
sub
sbb
dec
andl
inc
and
jmp
mov
outsl
dec
adc
add
cwtl
pop
vmptrld
xor
xor
icebp
fistps
xor
inc
xchg
in
sbb
cmp
lret
lea
imul
mov
cmpsl
scas
ja
xchg
pop
daa
pop
clc
adc
pop
sub
sahf
inc
sub
loope
outsl
inc
rcrl
and
fldt
mov
sbb
and
popf
mov
adc
das
int3
pop
xor
xor
js
aad
mov
stos
dec
mov
xor
sub
pop
or
mov
scas
cmp
xchg
stos
cmpsl
add
xchg
stos
je
push
int3
push
shl
ja
rorb
sub
cltd
imul
pop
pop
sub
loope
pusha
imul
rol
cld
dec
int
pop
jns
push
ret
daa
add
mov
imul
or
mov
jge
leave
mov
iret
and
or
testb
and
pop
dec
xchg
cltd
xchg
insb
jno
stos
xchg
and
dec
jge
int3
push
and
xchg
lret
lods
adc
std
pushf
jg
mov
ljmp
inc
mov
lahf
cmpsl
xor
dec
fadd
outsl
push
inc
lods
inc
enter
adc
arpl
cmp
fmuls
push
aad
cmp
orl
mov
dec
out
mov
js
mov
dec
data16
xchg
dec
mov
pusha
adc
adc
out
lret
lods
add
cmp
outsb
out
jne
je
aam
repnz
rcrl
test
push
jecxz
fldl2t
mov
notl
sbb
dec
aad
xor
lahf
push
xchg
mov
in
xor
stos
scas
icebp
lods
daa
pop
push
add
adc
sub
hlt
inc
push
xchg
mov
negl
into
jno
push
cli
cmp
jecxz
fstpl
ss
push
push
iret
iret
ljmp
dec
fcoml
leave
sti
mov
mov
out
jne
adc
dec
insl
pop
lods
add
pop
fidivrs
jo
lahf
or
inc
inc
nop
movsb
sub
mov
push
add
mov
inc
shlb
test
imul
dec
mov
jne
xchg
bound
mov
imul
aas
mov
cltd
xlat
divb
fidivrs
dec
stc
ret
cmc
push
cwtl
je
and
in
inc
es
sub
cwtl
xchg
lods
fistpll
rorl
xchg
push
aaa
fidivrl
mov
sbb
fnstsw
ror
pop
or
pop
or
cmp
sbb
insl
push
dec
dec
imul
repnz
test
push
push
mov
sub
and
dec
cwtl
lret
inc
dec
test
jo
sub
int3
cs
add
test
stos
lret
lret
rcrb
insb
xchg
movsl
repnz
xchg
and
lea
adc
jl
fsubl
mov
mov
aam
and
out
push
lret
hlt
mov
jecxz
mov
mov
or
aam
les
mov
gs
in
mov
popf
sub
pop
pop
lea
outsb
mov
mov
popf
sti
lea
add
cmp
cli
and
lcall
lahf
mov
cwtl
jl
repz
sbb
ret
into
into
mov
es
dec
je
xor
loopne
pusha
sbb
fdivrp
jle
jb
pop
flds
mov
mov
in
es
mov
jo
jns
ljmp
mov
cli
pop
xchg
xchg
aam
hlt
mov
lahf
and
sub
aaa
pop
imul
mov
les
out
je
leave
push
out
lea
stos
fs
sbb
in
jmp
and
mov
pop
and
sbb
ja
and
push
xor
sarb
cld
div
pusha
sahf
jle
xchg
push
rorb
ds
or
es
aaa
adc
sub
adc
icebp
les
sub
sub
xor
test
xchg
pop
scas
pusha
mov
pop
jae
sub
push
pushf
adc
ja
fcoml
int
inc
mov
mov
pop
fsubl
sbb
pop
push
pushf
in
les
xchg
xor
lods
std
movsb
sbb
shl
negl
ror
push
int3
dec
clc
mov
lret
mov
not
push
incl
push
enter
repz
jae
test
sar
ljmp
lds
lcall
mov
scas
pop
push
sub
jo
or
sub
inc
dec
and
xor
sahf
gs
in
pusha
pop
incl
add
sar
sbb
ss
push
es
mov
push
adc
iret
jmp
mov
in
sahf
cmc
adc
mov
enter
xchg
jecxz
mov
mov
aad
sbb
mov
enter
pusha
dec
es
push
jae
scas
icebp
ljmp
daa
ds
mov
lock
insb
fwait
call
ret
or
ret
in
pop
enter
mov
loop
pop
mov
out
jmp
xor
shll
push
or
dec
mov
out
mov
iret
aad
push
out
into
outsl
lods
xorb
imul
add
les
push
push
sbb
dec
cmp
sbb
mov
stos
fcomps
aaa
dec
mov
sbb
sbb
sub
rcr
rorb
cmpl
fdivrs
inc
or
call
mov
ret
aam
xorb
pop
mov
adc
jbe
cmp
pop
pop
push
sub
idivb
mov
and
inc
jge
jo
adc
dec
jb
dec
lret
dec
fdivl
insb
and
out
and
mov
mov
jns
jns
add
dec
lahf
ret
mov
push
cmp
xchg
inc
into
nop
cmp
jl
cmpb
in
movsb
lds
lahf
jb
mov
loope
sahf
mov
lods
in
ret
jae
mov
cmp
push
mov
rorl
mov
cmp
mov
cmp
and
outsl
lea
ret
xor
cmp
out
pop
mov
flds
xchg
lds
or
sub
inc
in
arpl
mov
popa
sbb
xor
aam
push
xchg
lods
mov
imul
gs
ss
mov
lock
fpatan
sarb
mov
adc
sub
mov
out
frndint
addb
mov
cmp
jp
cwtl
adc
push
insb
fwait
mov
ljmp
and
orb
inc
dec
push
shlb
inc
lods
mov
mov
mov
mov
fisttpl
sub
in
xor
out
popf
dec
loope
cmp
mov
xor
and
sub
test
in
iret
jbe
push
mov
inc
fmull
push
aad
sub
sub
xchg
push
sti
dec
dec
divb
mov
adc
dec
test
mov
inc
mov
insb
sub
mov
xor
js
out
sbb
lcall
xlat
cmpsl
rcl
stos
add
aas
scas
mov
iret
jbe
clc
cmp
jns
push
xor
lret
pop
mov
jns
mov
mov
je
ret
repnz
cltd
pop
rcr
hlt
xchg
rcl
sub
scas
pop
fwait
sub
mov
stc
or
fbld
addr16
and
push
fdivrl
or
lds
mov
push
add
mull
jae
popa
sbb
js
or
mov
mov
out
xchg
mov
or
cmpl
cmp
es
cld
dec
xor
divps
jp
rcrb
jne
cmpsl
std
rol
fisttpll
daa
push
xchg
pop
dec
cmp
pop
into
lret
test
xchg
jno
lea
pusha
in
mov
add
add
sti
movsb
outsb
mov
fcoml
mov
int3
mov
push
and
test
sarb
mov
inc
in
push
adc
sub
adc
inc
movsb
and
lods
fstpl
pop
in
push
daa
ror
mov
ja
fistps
or
inc
leave
push
dec
jmp
xchg
sub
fcomip
push
mov
sbb
loopne
push
out
lahf
mov
arpl
cmp
mov
aaa
test
outsl
loope
dec
pop
inc
out
pop
movsb
push
push
push
or
insb
scas
pop
cmp
mov
in
ds
rcr
sti
pushl
adcb
sub
inc
arpl
lods
inc
sbb
push
cmpl
pop
push
dec
cmpsb
je
out
mov
dec
bound
xchg
int3
or
inc
inc
popf
dec
vpmaxub
lock
xchg
mov
mov
jge
mov
and
mov
rcrb
lea
pop
and
push
ja
int
push
push
cli
in
add
push
data16
loope
add
dec
or
push
fsubrl
push
mov
push
dec
loopne
push
jl
lret
lods
mov
add
cmp
push
lea
dec
into
or
movsl
in
ds
or
push
fistpll
frstor
mov
mov
dec
mov
lahf
cmp
dec
add
mov
dec
pushf
inc
test
fcom
push
jg
jp
outsb
cmp
clc
push
imul
testb
stos
nop
jecxz
pop
out
jge
xor
cwtl
sbb
movsb
push
jno
or
mov
mov
push
mov
cmp
mov
stc
rcr
shrb
inc
xorb
test
das
les
dec
std
hlt
test
xorl
pusha
shrl
cmc
xchg
add
push
pop
imul
in
insb
or
dec
aam
call
jp
add
xchg
das
cmp
add
xchg
add
cmpsl
mov
fimull
push
add
jmp
repz
imul
dec
jno
mov
or
dec
xchg
outsl
jno
into
jb
test
xchg
pushf
cmpsb
outsb
inc
and
mov
or
mov
mov
mov
xor
xor
stc
xor
je
jge
add
mov
dec
ret
push
xchg
xorl
imul
push
jle
add
push
cmc
imul
lret
es
imul
psraw
xchg
add
sbb
rorl
ds
adcb
and
arpl
add
clc
mov
xlat
mov
dec
adc
lcall
cmp
iret
inc
sbb
pop
dec
popl
mov
mov
push
sarl
fwait
pop
enter
sub
popa
push
js
pop
sub
mov
int3
sub
jns
adc
aam
stos
lret
mov
xchg
or
loop
rorl
mov
mov
add
cmp
jbe
pop
xchg
sti
xor
shrl
xlat
das
cmp
dec
sub
adc
or
inc
mov
sub
jne
mov
rol
mov
movsb
jmp
jne
out
jns,pt
xlat
and
movsl
sub
push
sub
xchg
out
cli
lea
rcrl
vsqrtsd
jge
pop
ret
out
negb
adc
imul
mov
jmp
mov
push
cmp
lock
push
in
adc
push
imul
push
inc
fld
shl
dec
adc
aas
cmp
out
popf
cltd
mov
pop
xchg
pop
fbstp
popa
push
cld
xchg
jbe
jle
or
mov
push
pop
popf
adc
shll
xlat
push
jg
cltd
inc
mov
mov
cwtl
pop
push
xlat
dec
add
gs
daa
and
mov
jb
mov
frstor
rcll
jl
xchg
mov
and
repnz
lods
dec
aas
mov
scas
xchg
dec
lcall
gs
test
jae
testl
push
dec
cltd
push
je
in
and
rol
sub
mov
stos
jns
fstpl
mov
add
inc
dec
lea
aaa
add
int
mov
ret
dec
mov
push
lods
xor
inc
arpl
jmp
loope
jae
mov
aas
movsb
cwtl
jl
jns
fsub
shl
in
in
push
cltd
dec
loopne
lret
mov
aad
sbb
mov
mov
xchg
js
mov
push
movsb
pop
out
rorl
cmc
insl
filds
mov
jns
sahf
jo
std
imul
push
imul
aam
call
in
rcrl
fsubl
insb
test
push
loopne
stos
sub
pop
outsb
inc
out
ffree
loopne
mov
jne
cmp
pop
dec
shrl
mov
sarl
inc
or
adc
sbb
ljmp
jo
mov
pop
aas
push
imull
je
popa
push
jnp
popf
jns
and
sahf
pop
jno
xor
mov
push
fstl
adc
ja
iret
lret
dec
xor
add
add
repz
push
add
int3
gs
aas
shl
rorb
nop
lahf
jbe
pop
xor
fldz
inc
out
xchg
outsl
cmp
and
stos
ret
jbe
push
icebp
ja
rol
mov
cmpsl
mov
mov
scas
mov
mov
fcmovnbe
fsub
clts
mov
cmp
rcl
cld
dec
call
push
mov
dec
mov
add
out
dec
jle
shlb
mov
lds
sbb
out
mov
dec
mov
mov
pop
nop
dec
mov
jns
in
insb
cmpl
jecxz
mov
sub
outsl
jns
dec
xchg
lock
out
jns
test
sub
es
xchg
xchg
xchg
stc
mov
and
pop
cmp
insl
sarl
xor
fldz
add
inc
and
pop
jmp
push
out
dec
sub
push
inc
jmp
fstps
sub
add
movsb
and
nop
cmpsl
pop
push
aad
es
dec
xor
mov
ret
ret
xchg
add
imul
push
jae
and
mov
mov
dec
sbb
loopne
jnp
and
sub
pop
lret
movsb
mov
push
xchg
daa
xchg
sub
bts
cmpsb
iret
cmp
dec
sub
jmp
inc
xchg
fs
mov
mov
xorb
add
lds
sub
and
mov
mov
push
outsb
and
roll
dec
ss
adc
sbb
test
sub
mov
shrb
lods
outsb
ljmp
push
or
cmp
pop
ja
xchg
jns
push
test
push
cwtl
lds
push
hlt
mov
pop
cmp
clc
out
inc
lcall
xchg
daa
mov
and
cmc
fdivr
mov
xor
or
inc
mov
mov
pushf
repz
sub
roll
in
insb
mov
dec
or
les
dec
and
ss
rcrb
and
pop
mov
jp
jmp
mov
xchg
mov
sub
daa
into
rep
xlat
jle
daa
pop
dec
orl
ret
js
or
sbb
cs
sub
stc
mov
jb
xchg
xor
cs
jbe
aam
psrad
insb
jl
push
add
xchg
adc
add
cmpsb
outsb
xchg
cmp
pop
sub
pop
inc
out
or
lret
push
call
clc
sahf
shrb
ficoml
lds
mov
dec
pop
out
add
xor
popa
sbb
and
cli
xor
es
out
popf
loope
xchg
sub
xor
iret
div
xchg
lea
arpl
dec
int3
pop
incl
cmp
in
loopne
adc
dec
pop
dec
xchg
xor
cwtl
into
push
add
nop
inc
cmpsl
mov
xor
out
xor
pop
lea
fs
sti
or
lahf
xor
cli
push
in
inc
and
sub
or
imul
sbb
repz
in
push
and
pushf
jne
outsb
fadds
xor
fsubr
adc
jge
outsl
shll
inc
into
subl
movsb
push
in
mov
mov
scas
fildll
ret
ret
mov
gs
mov
cmp
pop
rcrl
nop
xor
imulb
imul
enter
jecxz
push
xchg
jle
and
xchg
sbb
fstl
mov
jmp
cmp
mov
sub
inc
jno
aas
pop
adc
or
in
mov
pop
dec
sbb
mov
mov
in
filds
xlat
sbb
clc
jmp
xchg
fcoms
pop
xchg
mov
mov
sbb
imul
cmp
cwtl
mov
xor
decb
out
aas
add
or
ret
into
nop
aad
aaa
dec
ret
out
stos
cltd
cmp
je
mov
cltd
push
jbe
mov
add
sbb
js
loope
push
mov
mov
push
stos
or
xchg
jl
fsubp
push
in
push
and
push
inc
lret
lahf
sbb
pop
inc
shr
xor
out
dec
mov
popl
jnp
sti
in
cmp
or
pop
xchg
push
add
dec
push
and
imul
xchg
pop
jl
pop
xchg
ficomps
sbb
mov
sahf
rclb
or
mov
mov
aas
add
jge
mov
lea
inc
xlat
insl
dec
lret
pop
movsb
mov
fbstp
lret
xchg
fidivl
js
sub
cmp
mov
or
loope
cld
cs
jns
inc
push
je
cmp
ret
mov
mov
addl
int
jne
adc
sub
mov
fidivrs
jnp
gs
dec
clc
pusha
idivl
mov
out
movl
repz
sti
and
inc
daa
inc
pusha
adc
jl
fnstenv
cld
or
nop
ret
mov
inc
xchg
inc
mov
and
adc
and
sub
adc
loopne
mov
add
jge
movsb
or
popa
push
or
pop
xor
and
popa
mov
sti
push
in
jmp
ret
mov
xor
popa
ror
shll
or
sti
loop
xor
movsl
xchg
jp
outsl
mov
lret
data16
aaa
mov
push
xor
mov
add
xchg
stos
xor
js
orb
xorl
add
jl
cmpsl
mov
test
lods
lea
push
pop
or
and
xchg
call
or
dec
call
aaa
int3
pop
sbb
and
pop
mov
out
adc
sub
jns
nop
repz
xchg
fdivr
push
inc
and
lcall
out
push
push
fs
sbb
mov
es
adc
mov
pop
mov
in
loope
adc
pop
xor
inc
push
rcrb
pop
loope
out
or
fiaddl
lods
addr16
lea
stos
xorb
sarb
lret
pop
imul
movsl
mov
fisubrl
push
mov
into
inc
pop
cwtl
enter
dec
rcrb
inc
or
fwait
out
push
and
iret
inc
pop
cli
insl
push
add
insb
adcb
pushf
mov
repz
hlt
mov
ja
dec
dec
call
xor
push
popl
adcl
rcrl
xchg
outsb
inc
inc
sub
ja
aas
pusha
mul
sub
xchg
shl
mov
push
sbb
xchg
call
sub
or
mov
cwtl
imul
loop
jbe
lods
mov
fdivrs
out
pop
pop
mov
jns
shlb
shlb
fsts
pusha
call
cmp
ret
cmp
ds
push
lcall
iret
mov
push
push
add
loope
bound
pop
icebp
mov
dec
pushf
jecxz
ss
and
add
test
es
push
test
mov
arpl
leave
aas
push
andb
inc
out
sub
ja
dec
jl
sbb
jg
sti
dec
xchg
xor
and
mov
mov
shll
xor
jecxz
pop
dec
mov
jnp
xlat
adc
mov
xchg
aam
cwtl
test
pop
es
ljmp
xor
in
andl
mov
or
ds
in
xchg
jb
arpl
push
push
cld
push
mov
adc
xchg
fistps
insl
pop
xchg
add
jg
ja
rorb
pop
imul
mov
or
int
cli
bound
pop
enter
mov
out
pop
lock
add
pop
xlat
mov
cmp
lcall
pushf
mov
rorb
and
idivl
and
add
mov
insl
fxtract
inc
fists
ret
in
push
pushf
xor
insb
adc
push
jmp
nop
pop
mov
repz
add
out
push
and
fwait
jmp
inc
pop
mov
push
clc
sub
outsb
inc
test
nop
jge
mov
cmp
push
inc
xchg
aaa
repnz
mov
mov
push
or
andb
addr16
sahf
pop
rcr
cmp
xchg
jle
inc
jg
jl
int
ss
stc
mov
loope
push
push
and
sub
inc
sub
pop
lahf
push
loope
xor
shrb
cmp
popf
add
out
add
xor
adc
and
arpl
scas
mov
push
in
stos
adc
push
dec
in
adc
lods
in
jle
call
test
mov
push
mov
xchg
push
push
adc
mov
loop
sbb
aad
mov
jb
push
clc
out
in
cwtl
xor
leave
dec
push
in
xor
mov
icebp
inc
scas
imul
sahf
mov
call
sahf
std
sbb
xor
adcl
inc
pop
push
cmp
xchg
pop
or
sbb
cli
adc
pop
and
into
lret
orl
movsl
ljmp
mov
xor
push
xor
repz
xchg
repnz
pop
mov
out
sahf
loop
xor
adc
adc
sahf
sahf
divl
shrl
fcoml
add
push
inc
in
push
cwtl
test
les
or
in
push
sti
lock
fbstp
mov
add
inc
clc
pushf
lret
push
jl
jp
dec
sbb
mov
xchg
jo
xor
mov
pop
dec
sub
or
fildl
mov
pop
inc
int3
jp
aas
mov
jne
fdivrs
insb
pop
push
dec
mov
sarl
push
call
xchg
xlat
fidivrs
lahf
push
jg
sub
sti
xchg
lret
pop
fcoml
adc
fst
aas
idivb
cmp
pushf
test
call
cmpl
paddsb
xorb
or
or
enter
adc
pushf
add
sub
pop
xchg
popa
cmp
sub
lcall
sub
test
adc
sub
and
sbb
sbb
arpl
loopne
repz
pop
sbb
pop
movsl
ljmp
repz
orl
push
and
or
jmp
and
dec
ljmp
xor
imul
pop
xchg
sbb
js
push
cmp
mov
xchg
outsl
mov
cmp
pop
lea
xchg
sbb
mov
call
scas
shlb
inc
cltd
push
scas
xchg
mov
jl
mov
lahf
out
mov
pushf
xor
mov
mov
addr16
sub
daa
das
and
xchg
rcrb
lods
mov
pop
add
xchg
jo
int
cmpl
and
scas
xchg
lret
mov
adc
push
lods
fdivrs
sub
lahf
pop
inc
dec
leave
lock
test
dec
test
das
scas
cwtl
ficomps
jno,pt
mov
sahf
ret
test
push
and
pop
jge
stos
pop
leave
push
adc
jle
fdivs
std
pop
mov
repz
jecxz
shrl
cld
movsb
iret
ja
cmp
push
js
loope
mov
fldt
andl
addr16
out
mov
mov
dec
out
lods
pop
cmpsb
js
rorl
xor
cmp
adc
mov
ret
shr
mov
fists
mov
pusha
shlb
aas
cmp
sub
addl
paddusb
mov
inc
stos
adc
push
jo
mov
mov
stc
mov
imul
fldt
inc
test
push
jns
call
xchg
cmpsl
mov
lahf
dec
aam
dec
cli
addr16
pop
dec
insl
into
sub
addl
test
pop
cmp
test
jnp
fsubrs
outsb
xchg
or
adc
sub
push
fisttps
xor
icebp
xor
icebp
jle
nop
insb
push
mov
lret
push
fwait
outsb
and
lret
call
xchg
or
cmc
loope
outsl
xchg
xchg
daa
jae
xor
lds
insl
mov
imul
fcmove
in
xor
gs
leave
ss
dec
popf
pop
test
and
xchg
js
fstpt
dec
dec
pushf
mov
test
add
xor
int3
xchg
sbb
pop
das
inc
out
fs
or
mov
cs
pushl
adc
jbe
bound
add
gs
pushf
jb
mov
pmaddwd
push
add
dec
fnstcw
pop
loop
insl
pop
mov
push
and
pop
jo
pop
mov
jns
sarb
bound
xchg
mov
inc
loopne
pop
out
lret
icebp
cmp
add
mov
sub
lahf
jp
sarb
xchg
pop
dec
and
jecxz
lahf
add
test
pop
rclb
cmp
repz
loop
mov
jmp
dec
xor
adc
aaa
mov
lods
cmp
rcrb
lea
mov
loop
gs
int3
rorb
cmp
pop
das
mov
shll
add
mov
mov
call
test
movsl
or
sbb
or
xchg
popa
xlat
je
mov
mov
dec
movsl
mov
js
jae
inc
push
addr16
int
adc
pop
pop
aam
into
push
ja
xlat
jnp
loopne
push
push
int3
dec
sbb
fistpll
test
mov
lret
leave
xor
mov
jmp
mov
cwtl
gs
shrl
jg
call
loope
cmp
insl
int
jle
push
jbe
mov
mov
jnp
dec
pop
popf
inc
inc
or
sbb
test
lcall
rcll
push
les
dec
shlb
sbb
loopne
rorb
mov
inc
div
push
mov
mov
fidivrl
sahf
test
imul
repz
mov
xor
fisttpll
add
imul
ds
pop
xchg
fcmove
pop
std
xchg
cmp
jns
xor
outsl
aad
xchg
adc
mull
dec
pop
lock
ds
out
clc
fwait
sub
inc
dec
pop
fnstenv
leave
leave
mov
fidivs
jecxz
test
inc
xchg
iret
popa
mov
dec
jecxz
sub
filds
or
jl
fwait
cmp
adc
add
jp
scas
js
test
pop
pop
xor
mov
cs
push
repz
out
shll
add
sbb
xor
inc
into
ss
pop
add
cmpsl
test
sarl
loope
xlat
cli
adc
icebp
xor
call
dec
mov
dec
lds
cltd
mov
and
movsb
mov
mov
pop
add
jns
push
stos
mov
mov
je
mov
xchg
dec
lods
cmp
xchg
rcrb
or
lods
movsb
sub
imul
mov
cmp
jl
mov
mov
jno
insl
mov
pop
hlt
push
out
ds
dec
fists
sbb
fimuls
aam
roll
cmp
scas
js
loopne
dec
add
dec
push
scas
shlb
xchg
jle
scas
mov
leave
inc
sub
sbb
pusha
out
out
cmp
test
jne
pop
popa
movsb
dec
pop
push
xor
pop
dec
and
mov
and
icebp
inc
mov
scas
cmp
outsb
cmpsl
sub
sub
adc
mov
gs
sub
jmp
nop
cmp
sti
xchg
push
or
shlb
outsl
std
adc
sbb
mov
xchg
and
ss
mov
dec
pushf
outsl
push
ret
mov
adc
pop
fbstp
or
dec
add
imul
add
or
or
push
or
sbb
or
int
aaa
es
jp
adc
xchg
pop
pop
sti
cltd
loop
fisttpll
push
pop
cmp
lea
xchg
xchg
xchg
xchg
xlat
iret
imul
mov
xor
out
and
dec
cli
lock
lahf
xchg
and
pusha
out
sub
xor
jbe
stos
xchg
pop
and
fldenv
int3
inc
jnp,pn
notl
dec
push
loop
xchg
and
mov
rcrl
addb
outsb
cmp
mov
jl
aad
xor
cmc
cmp
out
fidivl
aad
jae
sub
rcrb
dec
pop
jae
std
call
and
into
cwtl
ss
dec
out
ret
in
cmpsb
insb
fwait
test
pusha
inc
xor
inc
push
mov
add
pop
imul
cmpb
mov
dec
cmp
push
aad
or
dec
repnz
or
xlat
aad
or
imul
push
pop
mov
lret
bound
inc
xor
fwait
or
andl
inc
fnsave
nop
pop
sub
popf
dec
push
push
dec
inc
pop
aam
or
flds
negl
add
sbbb
mov
pop
mov
fs
sbb
add
mov
std
or
cmp
add
mov
insb
int
push
gs
punpcklwd
dec
lods
mov
and
mov
jle
ret
ds
sbb
push
mov
testb
push
clc
sub
or
shll
jno
xchg
ljmp
xor
cmp
and
test
cwtl
and
push
cli
shll
or
mov
pop
test
sub
stos
lret
mov
lea
xchg
jge
inc
test
xor
out
and
insl
adc
push
mov
inc
jb
imulb
insl
jmp
cmp
inc
mov
rorb
dec
into
jnp
sub
xchg
inc
repnz
hlt
incb
jnp
pop
nop
sbb
imul
call
cmp
std
xchg
fiaddl
sbb
ja
das
rcrb
mov
popa
pop
xor
out
mov
sti
mov
movhps
mov
dec
cwtl
leave
or
sub
ljmp
xchg
mov
xchg
rcrl
sahf
je
xchg
xor
push
dec
inc
popa
outsl
push
das
jno
repz
xlat
dec
inc
or
stc
lods
jmp
mov
push
mov
lret
lret
push
ljmp
outsl
popa
inc
cmpl
push
hlt
xchg
fwait
cwtl
jg
pop
rol
inc
cli
fstpl
dec
add
sbb
in
jae
test
inc
inc
ljmp
inc
int3
adc
pop
or
xchg
std
fwait
test
and
jno
dec
push
fstp
xchg
mov
shl
repnz
sub
enter
and
xchg
mov
imul
jecxz
adc
call
mov
jne
nopl
pop
arpl
outsl
jecxz
sahf
dec
repnz
popa
sahf
sub
jo
cmpsb
cwtl
clc
and
push
sbb
inc
das
inc
mov
sub
clc
mov
sub
or
and
imul
mov
sbb
inc
in
fmul
pop
ret
bound
ja
mov
and
cwtl
sub
sub
jmp
sbb
or
mov
fsubrs
jnp
cmp
xchg
mov
lret
jbe
sub
ror
xchg
js
sub
sbbl
inc
js
mov
loop
jecxz
and
or
dec
fmull
clc
mov
dec
pop
popf
arpl
push
addr16
or
pop
cld
xchg
repz
inc
js
pop
pop
inc
or
je
mov
add
es
mov
loope
les
xor
or
daa
pop
inc
dec
sbb
dec
mov
hlt
out
fidivl
iret
jbe
fiaddl
jge
push
lods
es
push
sub
repnz
xchg
bts
inc
jge
jg
mov
jmp
and
xchg
cld
imul
jno
fwait
sarb
inc
int
or
cmp
jne
xlat
sub
ja
addr16
loopne
ja
push
and
add
sbb
inc
push
cmp
cli
dec
sub
push
mov
mov
jb
scas
fistpll
aad
and
sahf
inc
dec
mov
xlat
push
xchg
pop
pop
pop
xchg
add
push
insb
xor
mov
inc
out
shll
jg
xor
inc
pop
jno
mov
xchg
daa
std
nop
test
aad
push
shrb
mov
gs
inc
mov
xchg
clc
sarb
xor
movzwl
push
inc
push
shrb
daa
popf
in
mov
movsb
and
int3
out
out
aas
push
adc
cmp
sbb
mov
dec
ljmp
jo
xchg
cs
cmpsb
mov
push
push
outsb
lods
roll
enter
pop
std
xor
push
in
mov
cmp
subl
pop
mov
into
sar
jno
adc
shrb
mov
jecxz
mov
outsb
and
stos
or
fstl
pop
fimuls
mov
adc
xchg
fs
inc
out
sub
movsb
xchg
and
mov
ret
cmp
loopne
pop
jno
jnp
stos
repnz
mov
sbb
les
hlt
int3
aad
pusha
push
sbb
xchg
movsb
in
mov
cmp
imull
jg
es
daa
dec
ret
mov
test
clc
loopne
push
ljmp
cmp
call
fdivs
mov
mov
push
in
push
lahf
xchg
jbe
sti
mov
xor
scas
adc
jo
rcrb
test
push
pop
daa
dec
push
pushf
das
daa
push
mov
mov
sub
cwtl
fbld
xor
mov
cmp
in
lcall
sbb
jmp
imulb
pop
out
and
and
mov
in
js
loopne
rclb
jae
ljmp
inc
cwtl
mov
pop
inc
or
mov
negb
mov
mov
pop
sti
push
sti
movsb
mov
sbb
dec
and
int3
out
pop
cmp
xchg
dec
cltd
sub
arpl
mov
xchg
jmp
or
adc
clc
fbstp
cmpsb
mov
jp
inc
pop
or
sub
dec
push
push
mov
add
sub
outsb
int3
gs
mov
mov
std
pop
cmp
shrb
and
fstpl
or
push
cs
add
in
rorb
push
rorl
xchg
aad
outsb
cmpsl
xor
xchg
loope
sub
adc
out
call
jne
inc
scas
mov
jge
out
stos
xchg
mov
lock
lock
loope
das
add
mov
outsl
cli
dec
jge
cmc
fs
cmpsl
into
mov
sti
fdivs
gs
sub
xchg
call
jle
test
cmpsb
pop
mov
sub
movsb
cmp
adc
out
push
cmp
sub
ljmp
cmpsl
xchg
outsl
dec
xor
addr16
pop
and
ljmp
movsb
xchg
and
jno
or
ljmp
sbb
fadd
inc
leave
xchg
push
fldl
fsubr
jo
and
in
inc
out
in
inc
cmpsl
xchg
pop
in
push
and
sbb
movb
test
pop
and
cli
loopne
pop
push
dec
out
sbb
and
pop
xor
outsl
int
or
scas
push
xchg
test
std
ja
pop
pop
pop
icebp
inc
xor
mul
in
xlat
lret
int3
stos
sahf
or
sbbb
sub
outsb
jno
lahf
inc
pop
or
adc
lods
inc
lds
ja
stos
les
lret
call
lret
add
es
lret
sub
push
sbbl
imul
cs
mov
icebp
repnz
inc
jbe
in
incl
mov
fs
xor
mov
clc
repnz
mov
cmpsb
xor
and
loope
xchg
repnz
jl
jle
mov
stos
jg
decl
dec
stos
sbb
jg
lcall
movsb
loope
insl
cmpsl
sub
xchg
es
std
push
inc
xchg
push
ja
andb
lahf
mov
jb
in
xchg
cltd
xchg
out
subl
not
dec
sbb
cmp
not
lret
xchg
fisttps
shlb
adc
mov
xchg
mov
nop
arpl
mov
lahf
fdivl
inc
mov
dec
sbb
and
out
xchg
dec
bound
dec
mov
mov
sarb
cmp
adc
ds
icebp
mov
cmp
push
or
or
sbb
fadds
jge
xcrypt-cbc
cmpsl
adc
mov
push
cld
add
xchg
mov
addr16
call
push
lret
fxch
jo
ljmp
inc
mov
mov
enter
or
pop
outsb
xor
dec
jno
mov
lock
push
jle
scas
icebp
cmp
or
or
pop
aaa
cmp
cmp
movsb
inc
xor
mov
jne
das
stos
add
add
jo
cmp
testb
inc
or
pop
adcb
and
push
add
push
sub
arpl
test
xor
popa
in
rorl
add
in
xlat
in
test
pop
addr16
jns
sbb
test
int3
scas
call
loope
pusha
fdivrp
pop
xchg
imul
insb
jmp
inc
xchg
sbbb
cmpsb
mov
lcall
lods
sbb
inc
sub
and
sbb
mov
mov
dec
fistl
mov
ljmp
cmp
cld
imul
mov
xchg
sub
mov
mov
adc
ss
and
or
adc
mov
lret
mov
xchg
sbb
sub
arpl
and
inc
shrb
mov
aam
movsl
icebp
movb
cld
inc
shll
test
xor
pusha
bound
push
xlat
fisubl
cmp
mov
pop
scas
mov
dec
push
into
dec
mov
dec
mov
in
inc
js
dec
add
adc
inc
sub
dec
xchg
mov
sub
mov
aad
push
sub
sbb
pushf
dec
xchg
xor
in
rcrb
push
xchg
sbb
bound
inc
mov
les
mov
mov
cmp
lods
lds
jnp
insl
test
mov
and
lret
pop
decl
mov
mov
rorb
daa
mov
lods
jno
cmpsb
in
pop
sbbl
sbb
out
jb
test
iret
aaa
scas
push
pandn
push
mov
mov
pusha
fisubrl
rcll
mov
inc
and
or
decl
xor
push
cmc
sub
outsb
sub
subl
xlat
and
cmp
cmp
sbb
inc
mov
add
sti
sti
pop
push
insl
faddl
adc
sub
repnz
stc
stc
pop
test
aam
dec
xor
and
push
fisttps
inc
add
sbb
lea
lods
ret
js
rolb
int
cmp
dec
pop
repnz
es
cmp
sti
mov
fsts
add
sarl
stos
cld
js
and
int
fcomps
rorl
push
insb
jmp
pusha
fdivrs
sbb
mov
inc
xorb
clc
mov
sbb
jecxz
sub
fidivl
inc
rorb
jno
pop
mov
popa
jno
mov
jg
mov
cs
jo
out
dec
cmp
sbb
test
sbb
negl
loopne
scas
push
test
jl,pn
mov
cmpb
dec
and
mov
mov
inc
dec
sahf
or
bound
pop
mov
mov
flds
pop
cmp
lret
int
jg
ds
xlat
jns
lret
movsl
ds
fs
inc
mov
cmp
cmpl
sbb
nop
or
xor
dec
mov
loopne
pop
insl
adc
iret
and
in
jge
lcall
fimuls
lcall
dec
js
sahf
pop
and
mov
loope
push
outsb
ret
jle
fidivl
pop
lret
push
iret
dec
mov
mov
scas
add
xchg
xchg
shr
and
sbb
js
fnstcw
lahf
rcrl
leave
rcl
xchg
loope
fistps
stos
inc
orl
push
sti
cwtl
jno
enter
mull
or
inc
out
sub
popa
push
jge
adc
sbb
movsb
xchg
lcall
xchg
xchg
sub
jle
sbb
and
outsb
movsl
dec
or
sub
push
movsb
sub
shl
dec
int3
cmp
sti
xchg
int3
test
ficompl
addb
ss
imul
repz
test
fimull
dec
ret
sub
subb
fisttpl
xor
jb
movsb
add
push
sbb
sbb
jbe
push
lds
add
or
pushf
adc
lret
cli
mov
pinsrw
jo
xchg
icebp
pop
push
nop
repz
mov
repnz
or
sub
push
pop
jo
cmp
mov
xor
sahf
ljmp
imul
daa
xor
int3
ds
push
mov
add
dec
ds
shl
mov
or
aas
int3
dec
testb
daa
popa
mov
mov
sbb
cmp
pop
add
fdivl
mov
hlt
pop
cmc
or
adc
movsl
xorb
mov
mov
mov
insb
push
ret
scas
jne
cli
mov
xor
fnstenv
and
imul
dec
lret
test
xor
xchg
in
fldcw
call
fs
mov
lods
dec
sbb
cmp
xor
ret
inc
cmpsl
xor
scas
ror
rcr
scas
cmp
push
mov
pop
push
fsubrs
testb
cmpsl
cmp
es
xlat
xchg
mov
mov
and
jl
cmp
push
xor
ds
dec
or
stos
ss
cmp
and
ja
xorl
pushf
clc
out
pushf
pop
js
mov
mov
lahf
stc
out
mov
mov
nop
das
aad
idivb
popa
jmp
cmpb
dec
out
fildll
inc
mov
pop
nop
sbb
out
cmp
or
cltd
je
lds
cmp
cmpsl
cmp
jbe
sbb
in
sbb
clc
push
cmp
lea
ds
test
repz
insl
adc
dec
add
and
mov
inc
insl
pop
jmp
jecxz
cmc
mov
pop
xor
lret
stc
add
cli
mov
repnz
jecxz
flds
sbbb
movsb
loopne
jnp
cmc
cli
mov
scas
pop
xchg
outsb
imul
inc
jae
nop
es
or
in
insl
jecxz
cltd
out
mov
bound
jmp
and
aaa
pop
sbb
xchg
subl
in
dec
in
or
outsl
cltd
push
jmp
inc
lret
repnz
addr16
loop
test
mov
out
push
adc
addb
cwtl
sub
pop
std
int
cltd
jnp
mov
scas
repz
pop
mov
loop
push
add
push
pop
pop
inc
sub
les
fsts
pop
add
std
es
or
leave
jmp
in
mov
jnp
jecxz
mov
fsubs
in
mov
mov
xchg
es
repnz
or
mov
insl
pusha
jne
repz
xchg
jo
scas
test
inc
aaa
rorl
ss
fisubrs
repz
xor
js
icebp
cmpsl
enter
mov
mov
idivl
jo
adc
lret
jno
cmp
das
inc
push
cwtl
ret
dec
les
pop
xchg
adc
jecxz
push
pop
adc
arpl
dec
mov
mov
out
es
aas
mov
push
ss
mov
js
in
fidivs
shrb
or
jmp
cld
mov
cwtl
sarb
outsl
stos
push
test
sbb
test
into
cltd
add
xchg
aam
cmp
sub
jae
or
repnz
popf
push
repz
pop
lock
jecxz
and
iret
mov
dec
adc
jnp
cmpsl
mov
sbb
adc
xchg
test
scas
push
xchg
sbbb
popf
dec
shr
sub
xor
sbb
cmp
cli
call
sahf
insb
andl
add
push
out
mov
ret
xchg
jne
sub
add
fsubr
scas
mov
lods
cwtl
push
push
leave
das
fistpll
push
sbb
dec
cmp
int3
leave
sti
iret
lea
dec
ss
lods
push
or
nop
pop
pop
sbb
in
sbb
cli
stos
pop
hlt
rcll
ss
jp
cmc
incl
rorl
inc
cmp
lret
push
nop
add
roll
lahf
int3
jle
into
popf
ja
ds
pop
lds
repz
inc
iret
cmc
ja
repz
xchg
cmp
add
or
in
and
rcr
and
fmulp
mov
lds
rorb
push
mov
mov
lahf
loope
lods
jg
pop
cli
add
aaa
ss
sbb
cmp
pop
loop
mov
mov
repnz
inc
je
xchg
mov
fsubr
dec
clc
sahf
sub
int3
jmp
enter
cmp
rcll
push
push
into
ljmp
in
stos
sbb
std
pop
enter
inc
xor
or
enter
pusha
inc
jl
jbe
sbb
ret
fistl
dec
ret
lret
ss
xchg
cmp
or
pop
jns
dec
fmull
cs
cmp
pop
loop
cltd
mov
adc
inc
mov
sub
jbe
adc
add
sti
jl
pop
xchg
jne
scas
out
dec
jecxz
inc
lods
xchg
fwait
add
mov
aad
jg
push
loope
sahf
cmp
cmpsl
jp
lahf
sbb
sbb
aam
pusha
shlb
fcompl
mov
daa
mov
sub
ljmp
xchg
jle
or
and
or
adc
xor
sbb
jle
test
or
jo
pop
cmp
jp
arpl
daa
notl
jmp
inc
adcl
outsb
mov
push
fmull
incl
stos
aad
in
dec
and
cmpsb
stos
addl
pop
xchg
das
lds
test
in
lock
jp,pt
test
fidivrl
or
sub
add
clc
ss
xor
mov
add
push
fs
test
mov
les
iret
jae
lcall
ljmp
cmp
or
ret
iret
dec
pxor
sub
or
daa
test
cmp
sahf
xchg
jb
xchg
andl
pop
jbe
lcall
outsl
test
insb
cmpsb
mov
adc
jae
jns
jl
mov
add
loop
or
xorb
lds
adc
mov
mov
rolb
adc
pushf
sbb
movsl
sub
xchg
es
repz
movsl
add
ficomps
out
inc
ss
sub
xchg
mov
xor
cmp
inc
and
mov
cmp
jno
or
imulb
inc
dec
or
test
adcl
and
xor
push
and
imulb
push
inc
mov
sbb
and
fstl
cmp
inc
adc
loop
orps
mov
add
adc
into
or
aam
mov
jg
cmp
or
enter
sub
jge
xchg
stc
lcall
pop
and
outsb
xchg
inc
mov
cltd
mov
cwtl
lods
scas
mov
xchg
or
aas
inc
and
pop
fsubl
add
cltd
push
push
push
xor
sti
sbb
loop
cwtl
sahf
repnz
push
mov
cmp
lea
mov
pop
lret
mov
je
repz
dec
pop
fsub
mov
xchg
js
pop
pusha
mov
sub
adc
dec
adc
or
pushf
jmp
stos
sub
lahf
xchg
sbbl
jne
cmp
mov
mov
sub
mov
mov
sbb
push
or
mov
sbb
mov
sti
icebp
in
dec
xor
das
adc
stos
mov
pop
negl
test
ret
jmp
das
pop
mov
adcb
cmp
dec
cmpsb
xorb
ljmp
scas
inc
out
ljmp
outsl
pop
out
sbb
xlat
js
cmpb
out
push
cmp
adc
dec
out
mov
fisttpll
shlb
xor
mov
js
repz
leave
mov
ja
sub
les
push
adc
call
push
out
call
add
sbb
leave
daa
xchg
xchg
mov
push
leave
push
dec
shlb
xchg
out
call
dec
dec
arpl
stc
jbe
gs
add
insb
test
mov
and
aaa
call
scas
inc
fidivl
fnstenv
jge
and
std
lods
mov
scas
test
insl
sahf
cmp
push
pop
loope
test
xchg
dec
and
pop
mov
xor
mov
outsb
jnp
jae
dec
xchg
pusha
pop
and
sbb
sbb
cmp
call
jbe
das
lods
hlt
push
ret
sbb
pop
hlt
mov
jno
out
and
pop
movsl
jg
insl
movsl
addr16
inc
lcall
data16
in
cli
mov
pop
pop
mov
pushf
inc
adc
fcmovbe
sbb
pop
cmpb
xor
push
jl
and
insl
pop
or
arpl
les
jnp
jp
pop
popf
sar
movsl
add
aas
loop
imull
pop
jo
sbb
dec
call
jmp
outsl
adc
insb
test
mov
jae
mov
or
mov
data16
or
test
outsl
mov
xchg
es
pop
insb
lret
movsl
sub
push
dec
fildl
mov
rcll
dec
jo
clc
pop
stos
mov
clc
jl
aas
xor
mov
dec
dec
je
inc
mov
imul
into
mov
std
loope
cmp
cwtl
cmp
in
mov
nop
inc
sti
pushf
mov
jge
or
icebp
pop
insb
inc
add
adc
mov
stos
and
popf
inc
mov
sub
aas
loop
xor
and
adc
dec
aaa
xchg
mov
lahf
imul
fmull
and
stos
rolb
rol
sub
scas
dec
or
adc
dec
repz
push
push
mov
dec
push
fists
fnstenv
fdivs
jg
or
es
xchg
mov
sbb
adc
mov
add
out
repnz
js
mov
jmp
iret
or
adc
push
pusha
jl
jp
push
sbb
ret
xor
cmp
cmpsl
ljmp
xchg
out
pop
xor
mov
lcall
mov
and
rcll
aas
ss
dec
sub
cmc
dec
rcrl
outsl
sub
cmp
ljmp
out
mov
dec
xchg
push
data16
dec
push
lret
jb
add
lret
add
mov
sahf
imul
and
cmpsl
push
ret
sub
sub
ss
adc
lock
addr16
mov
into
jb
push
je
lret
iret
arpl
inc
data16
xchg
mov
xchg
shll
xchg
mov
insl
hlt
or
cmp
stos
and
pop
mov
jmp
fsubs
pop
sub
mov
outsl
lods
add
xor
and
leave
shlb
mov
push
ljmp
cmc
pusha
xchg
adc
jg
mov
pop
repnz
les
fxch
xchg
mov
mov
inc
xchg
mov
in
add
nop
aaa
sahf
rorb
in
ret
movsb
test
xchg
pop
lcall
xchg
pop
int3
mov
and
cmp
jp
or
mov
push
dec
in
mov
mov
popf
addb
ljmp
and
add
stc
push
call
dec
mov
dec
push
and
jo
push
aad
shrl
sbb
je
add
jno
insl
mov
sbb
pop
cld
pop
pop
or
andl
or
pop
mov
mov
cltd
mov
lcall
adcl
jmp
in
push
mov
and
popf
popf
mov
fildl
jo
or
mov
mov
or
mov
fdivrp
dec
jb
in
repz
add
fucomip
xor
fbld
rcr
or
out
fstp
sub
je
adcl
cmovns
aad
nop
and
xchg
inc
dec
int
pop
fidivrs
xchg
lea
push
fldlg2
es
mov
sbb
pusha
jp
lcall
ljmp
mov
add
inc
dec
shrb
popf
add
cmp
pop
jecxz
push
push
sub
in
adc
pop
das
mov
jge
std
sbb
mov
idivl
out
scas
cmp
adc
dec
and
ja
push
push
pop
xchg
xor
jmp
nop
push
cld
fwait
cmpsb
cs
or
cmp
xor
inc
lds
xchg
sti
js
ja
fidivrl
jmp
inc
pop
aam
xchg
inc
mov
shl
cmp
shr
mov
shl
sti
jp
sub
mov
stos
cmc
mov
dec
lret
loopne
sbb
dec
cmp
mov
repnz
mov
push
icebp
jno
adc
inc
inc
and
push
std
pop
push
ljmp
loopne
jle
popf
sbb
push
int
divl
inc
mov
es
jle
cmp
push
and
pop
pop
rorl
stc
and
cmp
pushf
adc
arpl
adc
jg
fmuls
push
pushf
test
xchg
aas
sbbl
jne
pop
test
cmp
mov
add
cmp
pop
jne
jge
and
jno
jns
push
xchg
out
addb
xor
xchg
ss
nop
adc
adc
js
fsubrl
nop
pop
push
and
shll
sbb
sub
ret
movsl
lcall
in
popa
gs
sbb
aam
enter
xchg
inc
pop
stc
negl
jbe
pmulhw
mov
xchg
dec
mov
arpl
sbb
push
or
popa
cmp
mov
dec
shll
in
loope
ja,pn
dec
mov
xchg
mov
ret
fisubrs
inc
add
and
insl
pop
pop
adc
xchg
pop
in
repz
xlat
mov
mov
and
xor
imul
mov
jp
ja
aam
imul
mov
cmp
ret
f2xm1
push
fs
mov
inc
cmp
dec
pop
shrb
setge
rorb
lcall
stos
push
or
mov
andb
repnz
dec
inc
jmp
ret
sbb
mov
jp
jnp
xor
stos
dec
fbld
mov
inc
jg
inc
into
lock
stos
fwait
loop
jg
push
call
adc
jns
pop
mov
mov
mov
jnp
xlat
dec
xchg
cwtl
daa
cmp
and
mov
cmp
sbb
dec
sub
lods
ds
enter
xor
repnz
adc
jl
scas
mov
ret
cmp
lahf
xchg
adcb
daa
cmp
fmull
add
jb
pusha
inc
jge
loop
xlat
fsubr
lods
ds
dec
les
mov
fldt
pop
imul
ficoms
arpl
cmpsb
popa
jae
mov
scas
xchg
scas
pop
push
jo
sbb
pop
lret
pop
jb
and
pop
mov
movl
rcrl
add
fs
js
push
lret
jae
out
daa
imul
mov
cltd
mov
sub
or
mov
cld
and
nop
stos
shll
mov
fwait
test
pop
inc
push
fcomps
std
cmpsb
xchg
mov
dec
xchg
inc
ret
inc
mov
push
in
jnp,pn
cmp
insl
lods
sbb
fsubrs
cmp
jae
adc
pushf
loope
das
loope
cltd
ljmp
add
inc
xchg
sahf
test
fs
jecxz
iret
std
pop
testb
or
popf
and
dec
inc
hlt
mov
mov
push
inc
add
aam
pop
add
bnd
pop
stos
stc
add
mov
cli
add
aad
sbb
push
iret
out
sub
push
mov
mov
mov
xor
js
test
into
sahf
adc
xor
pop
mov
mov
push
jb
daa
cmp
in
sahf
aas
adc
sbb
jmp
or
test
arpl
push
stos
out
add
sub
mov
jp
cmpsl
mov
cmpsb
cmpl
clc
lods
test
das
adc
ljmp
push
sbbb
adc
andb
mov
dec
add
inc
lcall
jmp
sbb
orl
jl
dec
dec
xor
sub
fmulp
outsl
ljmp
sbb
jl
push
pop
fnstcw
push
aad
pop
pop
push
mov
out
out
popa
jge
mov
repz
out
es
out
add
push
clc
push
fists
imul
sub
pop
lods
jmp
and
mov
shll
mov
push
adc
test
or
jns
fistps
cmp
imul
stc
dec
cmc
xchg
jp
lret
pop
in
das
dec
xchg
ss
fstpl
pop
inc
push
inc
clc
pushf
call
lods
mov
or
ljmp
ret
bound
pop
js
push
cmp
pop
les
jno
inc
jmp
stc
or
xchg
lret
jbe
aam
adc
fbld
jmp
mov
cmc
sar
pushf
mov
cmpsb
and
les
mov
cmpsl
add
cmp
mov
jns
test
xchg
cmp
mov
out
fstl
movsl
sub
and
mov
out
loope
icebp
mov
and
inc
imulb
push
and
push
inc
push
cmp
fcomip
sbb
lahf
and
out
xorb
mov
sbb
sub
call
cmc
sti
repnz
xchg
cwtl
stc
xor
mov
sub
pop
mov
js
inc
cmpb
es
mov
add
jle
fwait
xlat
fisttpl
std
lret
sub
lods
popf
cli
out
repz
stos
jno
jno
sbb
xchg
sub
aam
mov
push
leave
les
or
int3
cltd
lret
aad
outsl
je
fldl
push
mov
rorb
adc
pop
insl
cld
test
xchg
xchg
jg
int
lods
pop
fildll
push
jecxz
ss
mov
pop
mov
inc
out
aam
mov
in
fs
ret
ret
pop
idivl
addl
lcall
mov
mov
add
rclb
lcall
scas
repz
adc
push
stc
addr16
repz
jbe
adc
mov
inc
into
and
enter
sahf
inc
not
movsl
xchg
out
xor
jbe
mov
cmp
push
les
sub
sub
arpl
dec
clc
rolb
xchg
or
sti
mov
sahf
dec
jne
cmp
push
ss
sti
pushf
adc
cmp
lds
cltd
lea
sahf
imul
and
loop
push
and
cmp
lret
adc
out
movsl
test
cmc
hlt
lock
std
pusha
sbb
scas
add
out
mov
push
mov
sbb
cli
out
int
aam
movsl
mov
mov
mov
mov
loopne
addr16
nop
jl
ret
hlt
xlat
mov
or
xchg
dec
inc
nop
mov
or
xor
inc
dec
pop
arpl
aam
ss
sub
cld
movsb
insl
fcmovnu
rcrl
dec
aam
movsl
movsb
dec
fdivrs
xor
scas
int
sub
loop
add
lret
mov
call
push
pop
mov
xor
and
and
lcall
lods
jns
fcmovnbe
jg
int
in
enter
sub
push
scas
and
das
mov
pop
add
loopne
cmpsb
pop
sub
dec
in
jmp
fs
pop
sbb
int
js
mov
scas
mov
jg
mov
xchg
cmp
pop
int
mov
cli
fmuls
imul
mov
adc
std
pop
jns
in
mov
dec
mov
add
push
divb
loop
movsl
xor
add
jo
inc
ljmp
fnsave
sbb
pop
mov
and
mov
es
sub
dec
add
fisubs
mov
lret
outsl
shll
cmp
int3
cmpsl
lock
std
mov
es
ja
dec
push
bound
std
cmp
pusha
inc
adc
push
pop
les
pushf
add
pop
gs
popa
call
jge
add
ret
cmpsb
insl
aas
push
aaa
push
mov
push
inc
test
pop
xchg
xchg
xchg
dec
inc
fldcw
mov
mov
xchg
fs
cmp
adc
and
cmp
lods
xor
in
jl
add
xorl
ljmp
xchg
xchg
xchg
mov
or
loopne
arpl
lcall
sbb
xor
push
ficoms
popf
test
cmp
push
out
cmp
stos
push
jecxz
mov
test
push
or
sarb
sar
push
add
cmpsb
dec
inc
jg
sbbb
sbb
scas
stc
pop
add
outsb
sahf
popf
mov
je
jmp
inc
add
inc
sbb
cli
dec
pusha
fldenv
ret
xor
cmp
cwtl
push
dec
pop
lret
mov
mov
sub
sub
test
fadds
push
inc
les
pushf
decb
or
xchg
ret
rorb
in
mov
das
es
and
xchg
sbb
add
mov
cli
xchg
in
fistpl
lods
jge
xchg
in
dec
loop
es
into
pusha
push
sbb
mov
int
mov
adc
popf
mov
loopne
inc
lret
sbb
sarb
fstpt
mov
adc
fidivrl
or
jge
jns
call
push
sbb
movsb
dec
aam
arpl
xchg
mov
das
out
subb
cmp
fiadds
xor
lods
mov
fst
or
sbb
pop
fldl
or
xchg
fsts
pop
jbe
and
test
fsubl
daa
mov
push
pmulhw
dec
push
sbb
jne
fs
mov
xor
incl
jp
inc
fldenv
cmp
xor
test
std
sbb
push
push
jle
testb
fcmovb
add
ja
icebp
mov
push
add
fwait
stc
adc
fwait
fs
mov
xchg
mov
ljmp
sub
adc
adcb
adc
dec
cmc
lock
arpl
cmp
and
int3
mov
adc
fisubl
mov
push
aas
add
rorl
xchg
rcrl
in
lret
sub
lods
mov
xlat
iret
inc
sub
shll
test
push
ret
push
insl
push
out
fwait
arpl
xchg
inc
push
mov
mov
aam
pop
mov
sub
cltd
pop
clc
xchg
cwtl
or
add
or
pop
mov
lahf
xor
pop
dec
pop
hlt
clc
sbb
and
fimull
mov
fcmovu
cmp
leave
push
movsl
xor
pusha
repz
cmp
das
inc
scas
lds
mov
sarl
shl
ja
outsl
or
insb
and
mov
xrelease
or
ret
in
or
and
sbb
jo
xchg
add
push
sbb
mov
cli
mov
and
lock
mov
and
cmp
pop
fsubs
jp
fistpll
cli
cmp
imul
xchg
imulb
xchg
inc
dec
mov
mov
test
mov
insb
mov
pop
fidivrl
mov
mov
mov
pop
inc
sub
dec
imul
or
mov
push
insb
xchg
repnz
mov
sarl
nop
ficompl
inc
jecxz
push
out
jo
lcall
pop
pop
shrb
jmp
ret
inc
into
lock
les
mov
push
rorl
cmp
cmp
shl
outsb
xor
cmp
gs
jb
dec
jnp
stc
lret
and
rclb
xor
push
aad
mov
cmc
cld
pushf
xor
in
nop
push
sub
fidivs
jg
popa
cmpsb
xor
pop
rorl
in
movsl
into
sbb
push
fistpll
mov
and
out
hlt
cmp
insb
or
ss
call
jp
mov
mov
icebp
and
cmp
sti
mulb
mov
xchg
rorl
sub
cld
pushf
sub
fnstsw
xchg
fsts
xchg
jb
aad
iret
loopne
push
sar
and
ret
fcompl
sub
ret
movsb
repz
lea
dec
lds
push
cltd
insb
push
lret
sbb
cmp
mov
in
inc
mov
fldcw
cmp
jp
xchg
add
push
xor
xor
xor
jmp
popf
fsubs
fisubrs
iret
int
cs
decb
iret
inc
aas
outsb
or
dec
xor
cs
xor
test
push
lret
pop
or
xchg
outsl
roll
rclb
push
mov
jno
imul
fimull
faddp
sbb
dec
jnp
imul
push
jns
or
and
or
pop
jne
adc
loopne
dec
mov
pushf
mov
loope
sbb
sbbb
xchg
stc
pop
aad
mov
pop
outsl
cmpsl
lcall
insl
fsubl
bound
negb
in
js
xchg
mov
xlat
xchg
fdivrp
add
leave
cwtl
cs
outsl
mov
dec
mov
mov
adc
in
adc
xchg
sbb
roll
repnz
cmp
sub
addb
or
hlt
imulb
mov
ficomps
and
add
mov
cmp
push
pusha
add
inc
and
std
adc
dec
mov
push
bound
les
and
adc
xlat
lahf
jp
dec
test
sbb
xchg
dec
xchg
mov
iret
cmpsb
lock
mov
fisubrl
dec
jmp
sub
sbb
mov
aad
outsl
icebp
in
xchg
loopne
mov
mov
cltd
shrl
dec
addl
and
push
sub
cmp
dec
inc
rclb
push
repnz
jae
push
jmp
test
clc
push
mov
or
outsl
or
inc
push
sbb
mov
pop
or
pop
cs
clc
xor
cs
clc
ret
xchg
mov
mov
sbb
dec
out
aaa
in
jge
xchg
cli
push
jecxz
int3
lods
repnz
sbb
add
ja
push
sub
xor
mov
repnz
xor
adc
mov
and
fld
xchg
int
enter
push
gs
and
mov
ret
ffreep
add
jbe
movsb
or
mov
pop
cvtps2pi
inc
and
add
pop
jl
jbe
ret
lcall
adc
mov
div
xchg
pop
in
cmpsl
mov
int
dec
daa
push
ljmp
push
fidivl
jl
out
popa
mov
pop
sub
movsb
data16
jl
insb
pop
aas
xchg
lret
dec
notl
sbb
mov
mov
xorb
sbb
cmpsb
icebp
mov
cwtl
rclb
adc
popa
rolb
popa
testl
sub
testb
pop
dec
sbb
adc
pop
fnstcw
imul
test
ljmp
fisubrs
sarb
mov
mov
jle
stc
xor
fsub
jl
or
pop
pop
out
sbb
mov
jbe
inc
out
shr
push
lea
and
mov
int3
roll
imul
jae
push
push
test
lcall
mov
fsubr
sub
cmp
mov
and
mov
mov
push
gs
mov
xor
les
cmp
xchg
pop
mov
mov
movsb
and
adc
cs
imul
and
fidivl
imul
xor
sti
es
sub
cltd
stos
sahf
pop
sub
ds
dec
stos
fwait
dec
sahf
adc
or
cltd
xchg
push
in
lcall
out
mov
mov
in
xchg
js
lret
mov
mov
aaa
loop
mov
xor
inc
fwait
scas
push
stc
mov
inc
sub
xchg
popa
stos
dec
je
int
mov
pop
xchg
mov
fiadds
xchg
hlt
adc
cmpl
enter
mov
mov
push
addr16
aam
sub
xchg
outsb
ss
das
mulb
pop
fcompl
cmpsl
fsts
xor
jmp
or
jns
jge
adc
lcall
ja
adc
mov
dec
pop
leave
sbbb
push
repnz
popa
loop
mov
out
mov
cmp
mov
inc
jnp
into
shl
std
jae
xchg
mov
fwait
dec
rcll
jge
lock
dec
movb
sub
add
shr
adc
icebp
js
cmp
outsb
sbb
or
inc
inc
movb
adc
jmp
call
sahf
test
sahf
and
cltd
outsl
ljmp
fucomp
mov
lea
inc
mov
mov
stc
cli
enter
cmp
jne
dec
xchg
loopne
std
dec
lret
mov
mov
sahf
dec
adc
add
jmp
cmc
repnz
adc
fistl
lcall
cld
orb
adcl
imull
nop
xchg
mov
sbb
sahf
es
jns
sub
addb
subl
jle
cwtl
mov
cltd
mov
es
test
sbb
jb
orl
iret
stc
xor
jecxz
aas
repnz
mulb
push
out
ret
jne
gs
cmp
pop
jp
or
mov
xor
inc
jl
or
sbb
and
mov
adc
xor
mov
or
xchg
cmpsb
repz
xlat
mov
incl
scas
xor
inc
outsb
pop
fcmovb
adc
adc
icebp
pushl
xor
push
pop
jnp
sub
inc
fisubl
addb
cmp
scas
idivl
pop
and
daa
repz
push
aam
bswap
lock
scas
hlt
in
rcll
mov
mov
push
scas
dec
call
ret
add
test
adc
or
cwtl
iret
es
add
inc
mov
aam
dec
jl
lds
ret
push
jge
cmc
out
stos
mov
adc
cmp
arpl
sub
test
shrb
dec
imul
inc
sbb
aas
addr16
push
dec
sbb
add
test
enter
jle
lret
jmp
sbb
jg
jnp
stc
and
jbe
xlat
cmpsb
popl
add
mov
xchg
icebp
mov
push
shll
cmp
fs
lock
add
and
jl
mov
ja
stos
imul
lret
imul
sbb
scas
mov
ret
bound
mov
pusha
aas
push
push
xchg
push
push
aam
cmp
aaa
and
out
sbb
roll
or
loopne
mov
mov
push
sarb
inc
pop
inc
sbb
xchg
fs
insb
mov
adc
sbb
xor
shll
dec
int
push
cmp
sbb
iret
add
adc
outsl
lock
xchg
cmp
in
nop
xchg
mov
arpl
popa
sahf
mov
and
iret
invd
sahf
sub
push
add
jmp
fistl
mov
add
sbb
pop
sub
int
xchg
add
mov
jb
mov
push
and
cmpsb
mov
sbb
inc
and
int3
pop
test
jo
or
xchg
xchg
mov
and
mov
xor
lea
repz
clc
dec
mov
popf
ja
ret
lods
imul
cmpsb
dec
mov
push
loope
mov
jmp
xchg
cmp
fcmovu
sub
cmc
pop
cli
ljmp
xchg
ret
fstpl
xchg
lock
push
or
in
sbb
adc
mov
dec
movsb
idivl
test
rcrb
loope
mov
mov
daa
jecxz
out
ja
xor
jne
hlt
imul
and
es
das
add
cmp
and
push
in
xor
imul
xchg
inc
stos
push
repz
jno
es
mov
and
add
jg
insl
pop
and
shl
mov
mov
pop
adc
cmp
popf
in
ret
cmpsb
mov
bound
popa
dec
test
pusha
hlt
aas
pop
push
cmp
test
xlat
loop
and
cltd
or
rcl
insl
push
loope
xor
frstor
pmulhw
cmpsl
jns
fidivs
ss
sbb
outsl
jge
inc
mov
lcall
rolb
loope
mov
push
gs
fwait
mov
mov
jmp
jo
adc
sarl
insl
es
jle
or
out
mov
dec
stos
pop
aam
mov
fwait
and
dec
es
jbe
imul
call
push
das
stc
xor
insl
addr16
bound
jl
test
sub
shll
pop
cmp
sbbl
jo
inc
xor
jno
icebp
aas
pop
rcll
mov
test
cmpsl
iret
pop
int
jnp
inc
xchg
xchg
inc
dec
dec
or
cmp
xchg
fdivrl
out
hlt
and
mov
mov
xor
adc
fmuls
test
xor
in
sbb
xchg
and
mov
push
ljmp
mov
hlt
sub
aam
cmp
popa
or
gs
and
stc
cmp
incl
movsb
hlt
pop
push
cli
lods
pop
repz
cwtl
testb
rorl
loop
pop
adc
cmpsl
cs
pop
sbb
pop
xchg
ja
mov
sbb
loopne
xchg
fistpl
mov
mov
decl
add
lcall
push
xorl
rol
sarl
sahf
sti
insl
into
inc
mov
sbb
std
mov
cmpb
mov
push
adc
imul
jmp
daa
or
test
xchg
pushl
sbb
shll
lret
fcompl
in
test
pop
sbb
out
cmp
mov
cwtl
imulb
fstpt
cs
outsb
and
out
adc
ret
imul
mov
cs
arpl
lods
ficoml
pop
mov
push
fcoml
inc
or
xorl
xor
andl
mov
mov
js
fnop
shl
xchg
add
xor
int
roll
cld
cmp
lret
inc
fs
pop
es
icebp
or
inc
daa
mov
ja
cmp
shll
jecxz
int3
cmc
pusha
mov
jp
push
cwtl
cmp
nop
fmuls
fidivrs
and
clc
rcrl
sub
inc
ds
cltd
pop
and
push
shll
sbb
push
movsl
xchg
sarb
and
mov
xor
mov
mov
test
adc
jbe
adc
repz
or
mov
sahf
xor
xor
sbb
sti
xor
sahf
je
cmp
mov
pop
dec
pop
xchg
addr16
cmp
addr16
sbb
orb
push
sub
aam
xchg
pop
insb
sbb
lea
inc
lahf
push
shlb
xor
in
cmp
call
scas
test
pop
mov
and
out
push
daa
rcll
icebp
adc
je
push
add
add
nop
sti
movsb
or
xor
mov
maxps
pusha
add
outsl
or
test
jb
push
shlb
cmc
in
and
jle
divl
xor
dec
jno
inc
push
jl
div
dec
push
dec
add
adc
pop
mov
pusha
fisttpll
ret
mov
in
jp
in
dec
mov
jmp
jo
fisubl
cmp
mov
jns
aad
clc
repnz
fwait
xchg
scas
leave
lds
shlb
or
lds
cwtl
lfs
or
xchg
push
dec
ss
ficomps
and
push
mov
in
aaa
sub
cli
leave
mov
out
in
das
enter
mov
jns
inc
fwait
rcrb
cli
or
or
mov
dec
clc
sti
aas
inc
dec
lret
adc
jmp
cwtl
mov
pop
adc
pop
mov
outsl
and
mov
mulb
bound
or
outsb
or
sbb
pop
pop
push
pop
xchg
xor
push
jo
pop
ret
lods
push
rep
cwtl
push
pmaxub
push
add
jmp
lods
test
jle
out
aas
xor
sbb
cmp
test
jns
loop
push
mov
cmp
ficoms
add
xchg
ret
icebp
test
insl
xor
aas
ljmp
std
daa
inc
dec
push
sahf
jl
cmp
pop
leave
dec
and
cmpsl
or
int3
lahf
ss
imul
cli
pop
push
mov
push
nop
std
stos
dec
inc
sbb
ret
jl
pop
fistps
and
lret
and
mov
das
sub
push
jb
pop
leave
xchg
xchg
jbe
popf
subl
lea
int3
jbe
sti
data16
cmc
in
mov
add
jae
sbb
cmpsl
adc
divb
xchg
or
shlb
test
adc
push
sbb
adc
movsb
xor
aas
mov
xchg
add
hlt
inc
clc
and
push
lods
jp
imul
mov
mov
adc
cmp
subl
cmpsb
push
stos
enter
outsl
add
fiaddl
sti
imul
rcrl
xor
add
out
cmp
push
mov
cs
cmc
mov
pop
ds
scas
push
int3
fidivrl
test
fadds
xchg
iret
sub
add
inc
adc
cmpb
cmp
mov
data16
push
stos
dec
cmp
in
out
and
cmpl
loopne
or
cmc
cmc
sbbb
inc
out
lahf
lock
jp
fidivs
sahf
push
or
xchg
je
das
lea
fnstcw
xlat
jp
push
mov
pop
cld
sub
and
pop
cmp
push
sbb
inc
lret
jecxz
push
insb
pop
gs
push
insl
sbb
jmp
mov
in
dec
jmp
repnz
in
lret
or
fwait
and
arpl
lret
sub
in
xor
and
xor
imul
imul
lret
jne
and
ret
incl
push
sub
rclb
movl
adc
gs
add
das
jnp
dec
roll
mov
jmp
xchg
push
jns
xchg
sbb
aaa
fnsave
addr16
sahf
aam
jnp
int
cmp
movsb
pop
push
sub
iret
adc
xchg
ret
add
and
mov
push
out
push
jp
mov
jbe
cmp
push
push
pop
daa
xor
fisubrl
sub
mov
lret
pop
jno
repnz
addl
inc
into
xor
push
popf
or
push
fisttps
mov
rcrl
popf
shrb
jae
adc
and
mov
ljmp
das
jle
mov
inc
lock
mov
add
dec
cld
mov
adc
mov
jns
mov
xchg
xor
mov
mov
mov
sub
xor
fistps
rcrl
jne
jp
mov
push
mov
mov
out
cmp
adc
sarl
mov
mov
mov
orb
test
mov
cltd
loopne
and
adc
bound
nop
aam
mov
cmp
push
inc
jg
xchg
lahf
in
clc
pop
into
jmp
inc
stos
pop
mov
out
cmp
pop
or
out
iret
mov
dec
in
ficoml
insb
push
mov
add
in
jecxz
sti
jns
inc
mov
cmpl
ja
mov
pushf
sahf
sub
xor
out
sub
rorl
cs
adc
stos
in
les
xchg
mov
mov
push
cld
jae
rolb
or
inc
dec
shll
xor
outsl
nop
mov
inc
xor
cmp
push
inc
push
jp
jbe
jne
out
add
sahf
adc
cltd
add
and
mov
xchg
inc
sbb
inc
pusha
inc
test
sub
inc
ficoml
popf
mov
jmp
mov
mov
dec
mov
adc
out
int
xor
lea
ret
ss
cs
and
jle
push
js
cmp
dec
inc
cmp
out
inc
ljmp
fsubrs
adc
cmpsb
add
icebp
xchg
fistps
cmp
lret
int
outsl
lret
popf
xchg
xchg
enter
lret
shrl
scas
mov
jae
flds
loopne
sub
fnsave
nop
and
dec
mov
loopne
adc
insb
loopne
sti
rcrl
cmp
addr16
dec
jecxz
mov
test
stos
and
shll
mov
mov
jne
jns
fidivs
push
mov
ret
cld
adcl
dec
aaa
movsb
jns
jge
pop
jb
daa
out
in
jae
sub
inc
scas
loope
mov
push
fwait
mov
out
mov
pushf
xchg
sub
adcb
jb
inc
xor
scas
ret
notl
addr16
cmp
outsl
in
sahf
js
enter
pop
icebp
fwait
mov
out
mov
inc
push
into
push
push
cmp
xor
repnz
inc
sbb
mov
imul
mov
shlb
inc
mov
in
shll
pop
fnsave
ret
push
out
mov
sbbb
lret
and
cmp
inc
rcl
outsl
aam
mov
xor
dec
mov
inc
loope
dec
fs
nop
sbb
cmc
rcrb
bound
push
gs
mov
call
clc
ljmp
sub
mov
dec
or
lret
mov
dec
dec
jmp
fsubrs
test
xchg
inc
add
aam
insb
dec
jle
mov
push
gs
lret
scas
jb
xchg
mov
cwtl
fcoml
pop
cmp
jg
inc
push
inc
push
lods
mov
ljmp
ret
adc
jecxz
mov
int
fmull
mov
dec
mov
popa
xorb
shll
lret
pop
adc
cld
nop
adc
push
and
mov
inc
sub
aas
stc
hlt
pop
adc
or
jmp
addr16
fstl
ret
inc
and
gs
jle
inc
std
das
imul
out
pop
sahf
xchg
pop
push
and
xor
mov
leave
cmp
out
cli
lahf
hlt
sub
xor
mov
mov
iret
push
in
sub
out
cmp
cs
idiv
test
pmaddwd
xchg
and
mov
ftst
sub
call
sbb
mov
std
test
rcrb
sarl
lahf
and
mov
lea
add
or
mov
test
test
jne
mov
fwait
scas
and
mov
adc
js
dec
mov
sbb
in
cmp
push
cmp
mov
jle
cmp
dec
mov
inc
push
scas
and
int
outsl
gs
jecxz
xorl
adc
dec
jbe
inc
cmc
outsb
fwait
and
outsb
adc
leave
mov
and
popa
lahf
icebp
dec
cmp
jle
cmp
dec
fistpll
aam
lds
lret
int3
add
lahf
mov
inc
sub
jnp
sub
icebp
inc
pop
mov
and
inc
adc
jecxz
add
and
mov
movsl
out
jmp
and
mov
dec
inc
stos
jecxz
fisubrl
mov
movsl
repz
push
mov
or
jb
cmp
fwait
pop
movsl
fisttps
or
shufps
mov
or
jnp
mov
js
fisttpl
inc
cmc
xchg
loope
outsl
adc
in
shl
cmpsl
xor
mov
daa
orb
or
ja
mov
pop
jnp
xchg
push
dec
adc
add
enter
or
fsts
xchg
mov
das
jne
es
push
movsl
push
xor
lods
repz
add
mov
mov
sbb
out
mov
xor
or
cmpsb
aad
rorl
xor
in
pop
es
lock
dec
adc
push
mov
or
iret
rorl
leave
pop
cmp
sti
sub
fs
pop
in
repnz
xchg
cli
push
and
jbe
je
loope
test
dec
adc
shll
fsubl
mov
ds
sub
sahf
cmpsl
and
jge
test
lret
cmpsl
lods
lods
sub
sahf
out
daa
mov
ret
mov
int3
subb
inc
add
js
jo
addb
dec
mov
mov
fwait
jae
pop
mov
or
in
mov
imul
dec
mov
jae
icebp
xor
or
push
rcr
and
stc
lcall
shrb
scas
mov
lahf
adc
inc
jmp
fcmovu
pop
das
sub
int
cs
mov
jp
and
movsb
and
out
test
mov
or
sbb
sbb
fadds
xadd
sub
dec
xor
leave
js
in
out
loopne
imul
adc
xor
shll
les
push
rcl
rclb
sahf
pop
mov
aad
int
popl
add
push
pop
sarb
add
stos
pop
mov
xor
jp
insb
out
mov
into
sti
jle
xchg
fidivs
fcmovb
nop
or
fwait
adc
jge
push
dec
mov
push
idivl
test
pop
outsl
push
sub
jo
jns
adcb
std
add
jl
ljmp
dec
clc
push
loopne
repz
dec
fsubrl
sub
fcomp
addr16
pop
inc
sub
dec
or
inc
xor
fucomp
imul
cld
ret
push
ja
arpl
xlat
jl
cmp
test
mov
cmp
data16
jle
sub
mov
loop
cli
test
jp
push
lods
mov
arpl
dec
cmp
scas
mov
sbb
xor
in
loopne
sar
into
int
lds
out
pop
push
or
xlat
xor
addb
inc
inc
out
or
sub
fildl
cwtl
clc
repz
fs
ds
sub
rep
cld
ret
xor
sub
add
jno
pushf
push
sbb
cmpb
jp
push
andl
mov
aam
fists
dec
inc
push
mov
cli
sub
push
decl
std
enter
lea
rolb
push
inc
repnz
sti
inc
inc
call
hlt
pusha
sti
mov
pop
inc
rorl
push
insl
insb
pop
and
mov
cli
pop
mov
in
sbb
je
int3
sarl
xchg
jg
arpl
sub
popf
mov
std
out
fstl
dec
xor
movsb
popf
cmp
sti
movsb
or
repnz
adc
mov
lock
xlat
mov
inc
adc
mov
xchg
sub
adc
repnz
in
lods
mov
icebp
in
add
dec
cltd
pop
repz
push
xchg
xor
repnz
cmp
test
aad
push
push
sbb
enter
inc
subb
and
ja
cmp
push
imull
cmp
push
mov
lods
inc
addl
into
cld
cld
enter
mov
lahf
fnsave
cmp
sti
or
mov
or
lods
outsb
ljmp
in
out
and
sbb
xchg
pop
in
jne
mov
lds
adc
and
sbb
pop
popf
popf
stc
cmp
jns
orl
add
or
sarb
fstps
aaa
sbb
push
sarl
cmp
mov
xchg
int
inc
adc
mov
in
sbb
pop
test
ret
cmc
inc
iret
popf
cmp
out
mov
sbb
jmp
mov
scas
inc
mov
adc
xchg
xchg
pop
ja
pop
cmpsl
mov
add
mov
pop
pop
fs
pop
or
cmp
popa
aaa
push
jnp
enter
pop
hlt
sbb
mul
notb
shrl
mov
loop
sbb
pop
sub
mov
rorb
push
out
or
in
add
xchg
cld
inc
int
out
mov
mov
mov
les
lcall
or
outsb
stos
inc
pushfw
into
sbb
dec
enter
jb
ret
sub
insl
aaa
leave
clc
adc
jnp
pop
or
inc
int3
ja
outsl
das
in
fcmovne
jecxz
out
scas
in
adc
xchg
ja
in
inc
nop
inc
aaa
dec
push
sbb
roll
xchg
xlat
lock
jle
in
xchg
add
dec
mov
push
xlat
rolb
lahf
fildll
repnz
hlt
mov
sub
push
dec
out
dec
iret
pusha
or
hlt
sub
xor
jmp
sbb
add
pushf
inc
aaa
pushw
jecxz
and
jl
int
mov
lret
pop
and
mov
cmp
cmc
mov
into
rcr
cmp
pop
out
bound
aam
fcmove
push
les
pushf
xchg
and
mov
inc
sbb
push
loop
push
xor
lods
sub
pop
incb
mov
mov
dec
movsb
fs
pop
lock
js
or
jbe
adc
test
jo
leave
dec
and
out
mov
fdivr
pop
sbb
stc
fldt
mov
jge
rorb
in
cmp
mov
mov
mov
insb
xlat
loope
dec
cmpsl
mov
arpl
clc
arpl
mov
push
lods
xor
xchg
inc
movsb
sahf
scas
leave
and
mov
mov
and
imul
sahf
cmp
push
test
cmpsb
pop
cmc
loop
pop
shrd
jno
inc
loope
mov
mov
int
jno
addr16
iret
mov
in
push
pop
jle
jecxz
shll
lock
shll
or
ret
sub
inc
data16
scas
pop
sub
inc
movsb
pop
cmp
aas
adc
in
mov
aam
sahf
aaa
cs
in
mov
cmc
or
jp
jne
inc
pop
cmp
sbb
dec
icebp
arpl
into
push
cmp
sbb
add
push
push
cli
ret
jne
ret
mov
xor
cmp
or
pop
add
addb
data16
fisttps
rorl
push
jmp
stc
sub
cmpsl
or
jno
shrb
popa
loop
or
jg
call
call
dec
xor
fildl
cmp
sbb
repnz
ret
mov
inc
dec
xchg
das
roll
fdivs
xor
enter
or
jae
jle
xchg
inc
in
jl
push
cmp
fsubl
xor
jbe
or
rcrl
cmc
or
orb
lea
or
and
das
adcb
sbb
out
push
lods
pop
pop
movsl
mov
push
fidivs
push
je
xorb
jg
cmpsb
pop
mov
enter
fidivrs
xchg
ds
pop
add
cld
xchg
test
and
fwait
rolb
and
dec
jg
popa
jmp
stos
mov
orl
lret
xchg
in
ds
pusha
les
or
push
and
insl
inc
loop
add
or
repnz
add
das
and
sub
xchg
fdivs
jp
pop
jno
fists
cmpsb
aaa
add
and
shll
jp
sar
repz
sahf
xor
add
xchg
js
subl
add
dec
xor
jnp
inc
mov
jecxz
mov
pop
adc
lcall
xor
mov
mov
fst
push
addr16
sbb
inc
jb
dec
cmp
cli
sarb
std
insb
shlb
mov
mov
jbe
mov
mov
into
jbe
pop
out
cmp
sbb
xchg
xchg
push
dec
xchg
sbb
xor
mov
ss
dec
addr16
dec
xor
or
testl
test
push
mov
jno
sbb
pop
pop
sub
and
mov
push
cmc
sub
dec
clc
mov
pushf
jg
xlat
inc
outsl
push
scas
insb
mov
push
jl
shlb
addr16
xchg
es
mull
pop
pop
add
mov
xorl
test
mov
or
daa
pop
scas
jmp
pop
dec
ja
sbb
or
aam
mov
xor
jl
dec
or
cs
stc
scas
div
imul
test
cmpsl
sbb
ss
dec
fs
cmp
add
or
nop
fwait
sbb
fistl
outsl
ss
ja
leave
lock
ss
dec
addr16
daa
lods
leave
sti
or
leave
dec
movsl
mov
cmp
in
cmpsl
stc
rep
add
xor
mov
sti
out
mov
in
inc
jg
rorl
ljmp
mov
cmpsl
outsl
lods
push
mov
mov
xor
stos
sub
xor
xorb
xor
in
dec
in
xlat
and
lock
adc
andl
repnz
loopne
ret
sahf
xchg
lea
xchg
in
daa
cmp
cltd
jmp
shr
les
adc
das
les
jno
cwtl
movsb
sub
pop
imul
sbb
cmpb
cmc
pop
rcrl
xor
loope
mov
rcr
push
in
out
in
xor
pop
mov
dec
pmuludq
push
outsl
outsl
popa
push
mov
shrb
xchg
adc
rorb
and
xor
lods
cli
dec
call
or
inc
ja
push
mov
mov
push
fwait
and
xchg
push
or
fdivr
roll
jno
sarl
add
push
pop
scas
popf
or
push
mov
fistpll
xor
movsb
test
leave
push
xchg
test
jae
inc
pop
ss
mov
and
nop
je
mov
shll
loop
inc
push
das
sub
xchg
pop
scas
add
fs
lcall
out
loop
mov
inc
pop
int3
jno
pop
add
fstp
xchg
xchg
xchg
jle
push
pop
repz
das
adc
pop
xor
xchg
lahf
in
scas
mov
int3
jecxz
jecxz
xchg
ljmp
dec
pop
in
and
mov
mov
fmull
movsb
out
arpl
in
lret
and
movsl
pop
xor
sub
push
in
and
jae
addl
and
mov
mov
xchg
xor
sub
ljmp
jmp
push
jb
push
jl
xor
ret
out
scas
repnz
adc
sub
imul
getsec
aam
je
push
stos
mov
mov
pop
test
jp
sbb
jne
outsb
mov
rolb
aaa
mov
lock
push
jo
cmpsl
push
scas
or
inc
push
sbb
es
fwait
push
xor
and
movsb
jmp
inc
addr16
xchg
je
leave
sahf
xor
lcall
in
inc
xchg
push
cmp
je
fiadds
pop
push
mov
inc
clc
shr
clc
ss
mov
adc
jge
lock
paddusw
daa
xor
scas
and
cmpsb
shrl
and
loopne
dec
shrl
je
xchg
cmp
aad
jns
test
mov
and
mov
inc
orl
cmp
pop
in
pop
pop
xchg
sti
dec
addb
mov
shrl
pushf
push
cld
sbbl
mov
iret
fstpl
call
jecxz
into
push
or
subl
lret
cmp
sbb
cmpsb
push
cli
leave
jge
leave
fs
test
cmp
rcr
push
jb
dec
in
add
or
int
jns
addr16
and
cmp
jle
and
jge
ficomps
daa
xchg
xlat
push
stc
xor
imull
cmpb
test
xor
pop
mov
inc
sbb
jae
ljmp
xor
push
sbb
sub
jo
xor
xchg
ljmp
shll
dec
loop
pop
sbb
xor
push
add
jo,pt
shl
cmp
push
dec
mov
sbb
bound
pushf
push
popf
inc
in
jecxz
jg
mov
cmc
ljmp
imul
int3
jmp
push
sub
jmp
or
mov
ss
jmp
xlat
jl
adc
int3
leave
rcll
ret
sahf
xchg
xchg
clc
adc
and
lret
add
addr16
int3
movsl
xor
cmc
sbb
pop
jo
cld
int3
inc
adc
push
dec
ljmp
add
addr16
cld
imul
xlat
xchg
fstpl
lar
mov
push
ja
clc
mov
xchg
int3
inc
mov
jb
insl
test
push
int3
shlb
cld
icebp
pop
aam
add
sbb
fcomp
fcmovu
mov
mov
arpl
and
dec
shll
xchg
jg
in
daa
sub
stc
lret
push
hlt
lock
dec
sub
sbb
nop
mov
or
dec
std
mov
mov
add
pushf
xchg
xchg
and
sbb
js
enter
dec
scas
push
cld
cmpb
sub
push
sbb
dec
sbb
out
xchg
xchg
aaa
pop
fsubl
and
push
fistpll
mov
sahf
ror
lcall
in
dec
sbb
xor
cmp
int3
movsl
dec
fwait
js
mov
pop
ficoml
mov
dec
push
rcl
movsb
in
adc
lea
mov
inc
cmp
jns
add
pop
fs
mov
test
stos
cmp
bound
lock
xchg
repnz
or
js
imul
mov
test
stos
xchg
dec
xor
daa
mov
mov
pop
and
jns
aas
popa
in
mov
es
pusha
jo
mov
or
cmp
pushf
xchg
add
fidivrs
lret
adc
mov
outsl
pusha
cmpsl
in
cltd
sub
mov
cli
adc
jnp
imul
sbb
pop
insb
xchg
test
push
adc
or
gs
jecxz
arpl
pop
push
or
pop
jp
clc
dec
insb
push
daa
cli
sbb
fiadds
or
sbb
dec
js
lea
sub
sbb
mov
sub
icebp
inc
icebp
add
aaa
or
jae
sbb
in
ret
push
shr
outsl
push
mov
inc
shr
add
insl
in
xor
enter
sbb
js
xchg
movsl
outsl
int3
lret
xor
dec
insl
inc
ret
loop
or
mov
mov
mov
jbe
lock
push
mov
and
mov
adc
insb
jns
inc
and
cmp
iret
mov
stos
call
psubb
mov
pop
xchg
cmp
cli
xchg
out
jae
mov
push
cltd
push
push
hlt
iret
jmp
lods
mov
push
mov
int
or
pop
and
xchg
jge
sbb
ret
pusha
sub
push
mov
lock
out
add
scas
cmp
mov
sub
test
cltd
js
mov
mov
pop
mov
sub
leave
inc
aas
out
arpl
pop
lahf
mov
movsb
adc
and
pop
loopne
inc
fsub
nop
call
ret
jge
xchg
out
push
aad
ret
lock
fsubl
and
sbb
mov
shrl
fldl
fstpl
mov
iret
ficoms
sub
jnp
xchg
sub
xor
and
inc
cmp
dec
imul
xlat
cs
sbb
pop
cmp
add
daa
jg
cmp
testb
popf
jnp
movsl
xchg
sti
adc
sub
loope
dec
in
insl
fisttpl
data16
xchg
repz
daa
xor
push
in
inc
das
mov
enter
mov
das
lret
cwtl
xchg
cmp
or
adc
and
dec
pop
in
cmp
add
cs
cmpsb
jnp
push
dec
inc
sub
xchg
or
push
mov
rorb
fildl
dec
pop
lret
mov
mov
and
aas
sub
fcomp
int3
mov
loopne
pusha
test
aad
and
xchg
or
pop
sbb
pop
ss
icebp
test
add
pop
insb
out
cmpsl
jmp
jne
push
mov
fdivr
jle
int3
test
call
mov
mov
in
fsubl
iret
or
jle
repz
clc
or
dec
movsl
or
and
js
movsl
mov
lret
lock
fisttpll
arpl
loope
shl
les
std
sbb
pop
xchg
xor
cmp
imul
dec
inc
xor
repnz
in
jbe
test
and
xchg
sub
mov
push
or
icebp
movsl
in
add
ds
push
fistps
jns
xor
pushf
jl
jmp
and
pop
xchg
ja
ja
rorb
call
fs
push
mov
pop
das
push
jp
jmp
sar
out
dec
pop
rorb
inc
outsb
insb
add
clc
in
aas
ret
sbb
xchg
fcoml
dec
sub
pop
sub
into
push
pop
lea
adc
popf
mov
aaa
push
push
bound
mov
xor
mov
mov
jnp
cli
gs
mov
push
sub
es
push
ljmp
out
jns
in
xorb
imul
dec
or
xor
rcll
aaa
jg
sub
decb
lds
mov
icebp
jno
or
sbb
pop
lods
std
out
test
fiadds
and
scas
adc
aam
in
gs
les
cli
pop
outsl
movsl
adc
nop
jmp
xchg
mov
pop
or
push
test
mov
adc
pop
jae
in
add
leave
insb
xor
lea
or
rcrb
popf
or
sub
cld
mov
push
in
test
cltd
jge
mov
adc
jb
into
clc
and
test
fcomps
data16
cmpsl
out
pushf
lahf
xor
sahf
out
inc
daa
xchg
pushf
push
inc
testl
mov
daa
imul
and
mov
std
sbb
jb
pop
xor
in
or
test
inc
sub
pop
xor
cmp
decb
lcall
add
mov
loop
out
cwtl
or
jnp
arpl
stc
cmp
scas
push
mov
mov
cmp
adc
pusha
xor
mov
sbb
pushf
hlt
jno
aad
shrl
push
mov
loope
and
jb
loop
repz
mov
fimuls
movsl
xlat
sub
loop
and
sub
sub
cld
sub
sbb
push
ficoml
pop
mov
gs
cmp
sub
add
iret
shlb
and
xchg
add
mov
pop
or
mov
add
sbb
mov
int
mov
sbb
ficoms
sahf
or
ljmp
ret
jle
daa
enter
sahf
rorl
das
sbb
mov
sarl
lods
mov
roll
pushf
xchg
add
repz
in
test
lahf
push
cld
adc
aam
mov
test
outsb
out
sub
inc
xchg
cli
mov
xchg
pop
ss
out
or
dec
adc
sbb
leave
lret
adc
cs
jns
push
push
js
xchg
ret
mov
mov
xor
clc
je
pop
dec
jns
insl
clc
test
pop
mov
or
pmulhw
inc
pop
icebp
sbb
inc
xchg
xor
fnstcw
mov
pop
xchg
push
cwtl
push
pop
out
fisttpl
movsb
test
xor
insl
cmp
mov
out
add
and
rolb
sbb
mov
mov
pop
in
push
sub
and
decl
in
into
push
scas
pop
xchg
sbbb
add
mov
add
scas
push
jmp
loop
cmp
cmp
mov
icebp
or
nop
cmpsl
add
ljmp
ljmp
out
xor
adc
jae
out
in
jno
repnz
gs
mov
out
lods
stos
inc
sbb
arpl
movsb
mov
mov
push
int
lock
mov
clc
into
inc
pushl
push
mov
sbbl
add
mov
cli
test
mov
fimull
jo
sub
xchg
mov
fwait
jg
or
outsb
xchg
sbb
inc
mov
cmp
mov
add
sub
sub
cmpb
xchg
and
movsl
addr16
sbb
divl
add
sub
pop
add
jb
xchg
dec
xchg
lret
out
das
pop
add
mov
jne
bound
sti
xchg
xor
sbb
pop
inc
jno
sub
xchg
fisubl
and
fbstp
jnp
outsb
test
stos
mov
test
mov
daa
adc
pop
imul
cmp
cmpsl
mov
cli
mov
sar
dec
aad
pop
lea
sahf
or
mov
ja
cld
push
cld
cmp
adc
popa
xchg
divl
sbb
dec
insb
mov
fldt
dec
cwtl
popa
sbb
push
fsubrp
cmpsb
mov
sar
and
ds
or
jno
dec
js
add
data16
adc
mov
in
andb
lock
xor
shl
pop
or
sbb
push
cli
mov
xchg
adc
cmp
mov
call
scas
lods
mov
xchg
xor
jns
int
fsubrl
and
insb
or
mov
sub
add
pop
js
or
pop
mov
pop
lcall
or
frstor
in
cmp
jno
fistpll
aas
fsubrp
push
in
or
int
std
mov
and
or
inc
das
xor
cmp
loopne
lret
shrl
dec
inc
or
sbb
cltd
mov
lcall
pop
cwtl
inc
icebp
mov
aam
cmp
and
ja
pop
icebp
loopne
or
ret
add
lahf
cmp
aad
xrelease
jno
cltd
push
xchg
push
cltd
pop
fmulp
inc
push
mov
or
or
adc
xchg
in
mov
aaa
dec
inc
aad
xchg
cmp
mov
pushf
push
arpl
xor
xchg
fisttpl
pop
aaa
jl
pop
fsub
sar
dec
cli
sbbb
rorl
sahf
daa
movsb
arpl
aaa
adcb
shrl
inc
pop
ljmp
add
add
inc
popf
pop
jp
sub
lock
scas
sbb
inc
xchg
sti
mov
ss
lds
xchg
adc
mov
adc
xchg
mov
jne
adc
cld
pushl
je
mov
and
in
push
mov
adc
js
pusha
int3
xchg
rorb
dec
lock
arpl
in
mov
inc
pop
orps
xor
fwait
jns
lcall
mov
or
xor
test
or
mov
lods
mov
je
dec
rorb
sbb
xor
loopne
popa
push
imul
adc
jbe
and
sbb
and
into
xor
push
pop
add
mov
push
and
jecxz
in
arpl
scas
cli
vorps
pop
jge
push
add
rcrl
in
clc
mov
sti
pop
sahf
or
mov
pop
dec
call
sbb
and
shl
mov
ja
push
push
out
sbb
repz
cmc
sbb
xchg
xchg
xor
sbb
pop
or
lods
sub
or
lret
cmp
pop
push
xor
mov
cmp
ljmp
lahf
pop
sbb
xor
mov
add
sar
pop
adc
dec
add
push
dec
stos
aas
xlat
xchg
sbb
inc
mov
data16
sbb
scas
mov
xor
mov
pop
inc
shll
pushf
jmp
ss
insl
inc
scas
push
test
and
lret
sbb
mov
lret
nop
and
add
stos
and
int
push
rolb
mov
xchg
jb
sub
or
cmp
dec
dec
jle
jecxz
loope
in
mov
sbb
aas
ret
bound
and
inc
imull
aad
hlt
std
js
xlat
push
rcrb
add
ret
push
aam
pusha
pop
mov
mov
jl
in
je
add
test
lds
insb
popf
shrb
fimull
in
dec
push
mov
fisubs
push
add
pop
popl
enter
inc
mov
pop
mov
mov
or
lret
in
int
je
pushf
jp
hlt
iret
bound
fstl
jb
xchg
dec
cmpsb
jae
sub
mov
lahf
adc
test
jl
mov
mov
or
test
idivl
bound
mov
outsb
lods
inc
xchg
mov
xchg
xchg
lcall
rclb
fstpl
inc
dec
test
jmp
jmp
fsts
outsb
call
mov
mov
adc
mov
loope
inc
ret
inc
outsl
inc
sarl
fdiv
pushf
inc
and
pop
fistl
insb
clc
rorb
fdivrs
pop
mov
mov
xor
cmpsl
js
mov
mov
shrl
push
push
adc
fdivr
insb
xchg
stos
push
and
mov
jecxz
les
pop
mov
xchg
jg
dec
adc
daa
xlat
clc
push
pushf
xor
sub
mov
outsb
adc
xchg
jge
std
mov
aaa
mov
jge
in
sti
pop
lcall
push
jbe
cmpb
insl
and
bound
inc
pop
fildl
lods
sub
mov
push
add
test
popa
es
test
test
out
shlb
sub
ja
es
hlt
andl
push
push
outsb
cs
pop
test
shlb
xor
jbe
xchg
or
or
sbb
jl
jl
call
sub
int3
js
and
rclb
daa
push
or
icebp
cmp
jecxz
push
cmp
js
mov
pop
mov
js
sbb
movsl
cmpl
cs
sub
adc
addl
loope
aaa
sbb
mov
sbb
sbb
enter
test
loope
je
sub
ja
repz
mov
jp
and
lea
fiadds
sbb
push
stos
dec
cltd
fsubr
cwtl
or
mov
dec
pop
jb
sub
mov
add
or
lea
mov
mov
lret
xor
inc
push
data16
mov
mov
xchg
push
push
cmp
jg
rcll
dec
jb
rcr
pop
sub
and
rcrl
scas
jge
add
and
xchg
push
inc
loope
mov
xchg
sub
imul
pop
sbb
scas
scas
add
pop
lods
jecxz
cltd
cmp
xchg
pop
jnp
cmp
out
sarl
lock
sti
xor
xchg
jmp
xor
push
sbb
mov
jecxz
cmp
ret
push
test
gs
xor
lea
sbb
mov
daa
mov
and
mov
orl
jl
cmpsl
fidivrs
cld
mov
repz
pop
mov
ja
clc
xchg
ds
icebp
pop
pop
mov
and
mov
add
xlat
or
out
popf
aad
pop
or
and
add
daa
fcmovnu
idiv
daa
sbb
jns
jg
movsl
cld
ja
mov
ret
jecxz
arpl
mov
test
ja
mov
imul
arpl
xor
call
loop
iret
mov
sti
xchg
mov
call
imul
js
js
leave
adc
mov
orl
lds
gs
jo
jo
lret
mov
sbb
test
xchg
fsubrs
xchg
pop
mov
xchg
pop
test
int3
cmpsl
pop
mov
nop
ret
lds
adc
push
and
jno
push
aad
xchg
js
mov
and
mov
aas
cmpb
mov
outsl
shlb
jmp
push
in
call
jbe
jmp
inc
fiaddl
stos
mov
pop
jl
and
gs
orb
jne
sub
mov
in
loope
ret
sahf
outsb
bound
pushf
movsb
nop
pop
sub
jne
xchg
loope
notl
fcoml
dec
cmp
pop
pop
std
gs
adc
mov
adc
or
lds
jb
adc
daa
or
xchg
xchg
jnp
inc
out
in
lret
add
jno
je
or
scas
enter
mov
mov
pusha
fistpl
jmp
xchg
cmpsb
mov
sti
decb
add
nop
jnp
and
stos
xchg
or
fldcw
lret
aas
mov
jl,pt
enter
cmp
test
imul
or
mov
imul
mov
and
dec
into
es
pop
cmc
jno
loop
test
icebp
ja
fnstsw
or
push
push
or
add
test
aas
scas
jmp
out
mov
test
adc
xchg
lret
jb
jecxz
arpl
pushf
popf
shll
fs
sahf
sub
xor
cs
es
mov
stos
push
lret
loope
cmc
push
mov
xchg
xchg
mov
cmc
xor
fcoml
and
push
pop
jns
sbb
and
in
mov
jge
iret
subl
jmp
or
bound
gs
add
sbb
mov
pusha
lods
and
lahf
and
pop
or
sub
xchg
cs
pop
jmp
lock
dec
cs
nop
push
add
decl
shlb
lcall
mov
jmp
ja
xor
mov
adc
std
dec
sub
xchg
mov
lods
and
stos
mov
inc
mov
pusha
aam
fisttpll
mov
mov
ljmp
xchg
xchg
nop
imul
fsubs
dec
pop
loop
out
jo
cmp
adc
mov
out
xor
xchg
lret
cmc
cs
aad
xor
pushf
in
cmc
xchg
push
iret
xchg
xchg
cwtl
js
fstps
outsb
push
cmp
lods
mov
and
rclb
dec
shlb
sub
pop
inc
jae
imul
rolb
and
orb
cltd
jbe
loope
push
xor
rcll
ret
and
jmp
pop
push
inc
jg
mov
pop
and
rol
jecxz
inc
in
sbb
xchg
xor
lds
mov
mov
ficompl
pop
push
test
jmp
pop
push
or
dec
testl
addr16
outsb
add
adc
addr16
pop
mov
push
jp
add
shl
jecxz
lcall
lcall
jmp
jo
stos
in
outsl
out
and
jbe
xchg
mov
loopne
addl
xchg
mulb
add
rorb
outsl
dec
loope
cmp
shl
sarb
lds
adc
leave
mov
mov
stc
pusha
pushf
jl
ljmp
pop
mov
cmc
jge
mov
and
scas
movsl
lock
mov
and
repz
adc
out
pop
sub
hlt
add
shrl
out
lea
insb
ror
je
cmpsb
insl
mov
das
cmpb
pop
js
xor
imulb
test
dec
xor
jo
les
add
add
leave
adc
nop
nop
mov
push
jecxz
inc
mov
fabs
or
cld
adc
pop
sti
stos
out
add
cmpsl
push
popf
mov
xor
fldl
push
lds
incb
inc
fistpll
jne
and
dec
ja
shl
cli
into
inc
daa
push
dec
cmpsb
rcl
shlb
mov
outsl
into
and
outsl
nop
aas
push
push
out
lret
inc
js
shll
jecxz
inc
push
les
xchg
fsubs
mov
or
cwtl
sub
shr
fisubl
dec
push
out
fnstenv
loopne
fstpt
mov
dec
popl
jne
inc
pushf
dec
and
fxtract
push
rorb
pop
dec
sub
adc
cmp
cmp
or
cmp
std
pop
icebp
mov
and
or
inc
je
push
lret
inc
xchg
cmp
mov
int3
insl
or
mov
cmp
sub
popf
icebp
cld
test
xchg
sub
pop
loopne
loopne
into
das
gs
adc
je
jno
repz
orl
mov
inc
fimuls
data16
out
adc
pop
fcmovnbe
divl
or
jecxz
mov
mov
pusha
push
pop
sbb
out
enter
cmp
jp
xor
inc
jmp
into
daa
pop
rep
pop
add
xor
lret
arpl
daa
push
loope
dec
adc
cmp
int
mov
jo
iret
mov
sbb
push
ret
nop
jmp
dec
mov
mov
mov
xlat
jae
jp
ljmp
repz
test
sahf
cld
sub
push
sbb
xchg
repnz
push
pop
jnp
jp
sub
ljmp
jnp
lahf
adc
inc
rep
aam
into
jno
in
dec
sbb
xchg
lahf
inc
and
mov
and
out
aas
mov
push
mov
xor
ficoml
das
sahf
mov
xchg
push
outsb
ljmp
sbb
cmp
and
sbb
add
push
ficomps
jle
divps
mov
jle
and
lock
sbb
fs
lret
je
mov
dec
xchg
mov
and
loope
clc
dec
pop
push
pop
jo
dec
jb
and
jno
dec
mov
pushf
pop
int
pop
pop
stos
xor
xchg
subl
xor
addb
mov
inc
push
push
jbe
mov
lds
mov
fimuls
repnz
jnp
push
pop
icebp
dec
mov
in
test
popf
bound
xor
call
in
dec
out
adc
sub
mov
pop
mov
dec
jge
cli
adc
jbe
hlt
lret
sub
add
popa
push
sbb
scas
gs
aam
push
scas
dec
lock
jb
pushf
repnz
push
sub
add
adc
dec
lds
xor
jmp
fistpl
test
or
and
pop
bound
mov
repz
push
mov
jae
push
and
sbb
pop
xchg
jge
push
cwtl
movsb
in
add
outsl
in
xchg
adc
enter
or
iret
and
in
or
lea
daa
add
scas
fidivrs
and
or
or
jne
stc
in
mov
outsb
adc
and
push
sbb
divl
add
rorb
xor
mov
lret
cwtl
outsl
sbb
adc
scas
and
fldt
dec
mov
mov
leave
and
stc
mov
mov
addr16
out
adc
pushf
ret
hlt
shlb
push
scas
push
sbb
pushf
fs
dec
cs
adc
scas
adc
jg
fisubl
dec
mov
leave
sub
add
addl
outsl
sbb
mov
stc
nop
push
jae
jg
imul
out
pop
inc
shrl
mov
popf
xchg
js
movsb
cmp
adc
push
or
jnp
lcall
shl
out
bound
or
mov
lret
xchg
jg
shr
add
fsts
in
pushf
fdivrl
xchg
cmp
jp
shl
sti
filds
push
adc
lahf
pop
xor
or
ror
and
push
pop
and
orl
xlat
rcll
in
push
in
dec
add
sbb
into
inc
fwait
lock
xchg
push
mov
filds
enter
pop
pop
insl
out
mov
int
lahf
xlat
enter
aad
xor
sti
rcll
js
pusha
jge
jne
mov
or
mov
pop
xor
cmp
mov
iret
fidivl
or
das
icebp
cmpsl
mov
jne
sbb
adc
cltd
mov
jmp
addl
and
xor
push
jbe
and
stos
fsubl
jl
popf
jae
js
fdivrs
adc
inc
add
lds
test
shll
dec
lcall
xor
or
jp
call
repnz
aas
gs
leave
cmpsb
aas
cmp
mov
pop
pop
mov
mov
lahf
and
xchg
xor
jno
jle
jbe
xlat
add
push
leave
das
cmp
mov
clc
jecxz
mov
cmp
in
fdivrs
dec
jae
sub
push
cld
cmp
cltd
jbe
push
dec
int
push
push
mov
sub
cli
out
cs
jns
add
je
or
ss
mov
xchg
jb
mov
pop
pop
popf
xlat
jge
outsb
sti
mov
xchg
add
mov
mov
sahf
sbb
repz
mov
test
mov
frstor
mov
pop
dec
mov
in
cmp
pop
jno
push
rcrl
fstl
mov
sub
mov
xchg
and
push
xchg
sbb
pop
or
xlat
rcll
push
xchg
mov
ss
sbb
xchg
xchg
outsl
xchg
nop
sbb
sbb
jnp
push
and
shrl
sub
add
pop
sub
or
pop
mov
lds
mov
icebp
stos
inc
filds
ret
out
fs
ret
xchg
fs
inc
fiadds
call
mov
repz
jo
cmc
jp
push
sar
adc
loope
leave
es
fsubrl
jg
imul
lret
inc
lahf
ja
push
mov
in
sbb
xchg
push
xor
lcall
hlt
dec
push
in
mov
pop
addl
daa
mov
andl
cmpsl
mov
xorl
into
mov
mov
push
mov
out
aad
nop
subb
fimull
xorl
mov
lock
dec
sub
loopne
inc
fs
aas
adc
xchg
stos
testb
pop
cli
fisubs
xchg
cmp
mov
mov
jmp
dec
adc
or
dec
sub
cmp
dec
dec
lds
pop
xchg
jo
mov
mov
push
xchg
lret
dec
mov
jge
pop
imul
sbb
xor
ds
push
push
mov
push
mov
lock
aas
sbbb
ret
cmp
cmp
repz
js
fdivr
fs
add
sbb
iret
lds
insb
mov
cli
inc
hlt
daa
mov
inc
jmp
cmp
loopne
insb
lods
lock
adc
stos
fst
xor
pop
outsb
sub
mov
iret
ret
sbb
xor
leave
out
mov
jp
xor
cmpsl
pop
sbb
sub
iret
or
lret
push
mov
fdivrl
xchg
cmc
push
sub
xor
mov
add
mov
lret
jecxz
cmpsl
in
xor
mov
test
adcb
mov
out
xchg
and
mov
sti
mov
enter
aad
push
xor
cmp
push
mov
cltd
imul
mov
daa
mov
imul
push
lret
or
xor
jns
or
cmp
and
sub
loope
repz
shrb
mov
sbb
repnz
fisttpl
ja
sbb
jno
mov
jno
int
cmc
adc
and
xchg
xlat
xchg
clc
mov
or
add
outsl
out
cmpsl
xchg
adc
sarl
stos
cmp
fsubs
rolb
mov
xchg
push
outsl
xchg
lahf
adc
imul
dec
xor
mov
dec
adc
xchg
jge
and
lcall
loope
ds
jmp
xchg
mov
xor
js
sub
mov
adcl
lods
nop
lret
sahf
mov
aaa
or
daa
jne
and
rclb
pop
leave
jle
or
add
add
adc
jg
imul
fsubrl
jg
push
sub
fs
or
jns
out
enter
in
mov
sbb
fidivl
movb
shl
push
sub
aaa
lods
rcll
xchg
and
cs
xor
enter
repz
cmp
jo
fcmovnu
lret
pop
xlat
and
jmp
test
xchg
jae
fildll
cwtl
mov
fnstenv
push
and
xchg
add
enter
mov
pop
inc
inc
add
mov
and
in
ja
aad
cmp
sarb
jnp
sbb
in
pop
lock
ljmp
sbb
jns
sbbb
jge
ss
pop
outsb
lods
fadds
leave
fldl
inc
ja
movsl
bound
xchg
sbb
mov
movsl
mov
daa
ss
les
adc
cmp
mov
sbb
or
pop
aas
sub
sub
pushf
repz
das
lds
scas
nop
mov
or
mov
bound
xchg
mov
mov
push
cmc
push
push
stc
std
sub
ss
test
xchg
cmp
stc
imul
data16
ret
testb
dec
push
jne
jg
xchg
cmpsl
dec
jle
adc
jb
sub
lret
dec
mov
mov
pop
daa
push
aas
xchg
mov
pop
cmp
aam
in
in
mov
fimuls
adc
and
arpl
or
daa
cmp
hlt
jae
ds
pop
dec
out
mov
negb
xchg
popa
insb
ret
adc
jns
stc
repz
sti
in
mov
sub
jl
int3
fwait
pop
cltd
sbbl
jne
fwait
lahf
fisubrl
ud0
and
or
cmp
and
push
push
jp
icebp
adc
jp
in
and
jg
xor
xchg
push
stc
dec
sub
sbb
pop
and
push
test
shll
jns
jmp
mov
scas
outsb
or
sbb
out
mov
xor
ret
push
xchg
sti
sub
fstp
fcmovu
mov
out
mov
or
int3
outsl
pop
dec
lret
inc
xor
jmp
xor
mov
mov
mov
nop
dec
add
leave
data16
adc
fstl
test
pop
fisttpll
daa
mov
xor
ja
scas
mov
movsl
mov
pushf
clc
popa
pavgw
pop
movsb
adc
pop
push
xchg
std
lret
pop
or
lahf
mov
lea
or
mov
pop
mov
insl
sbb
and
mov
in
pop
pop
push
sbb
cmp
das
out
sti
flds
std
push
leave
mov
ret
insb
xor
dec
sub
push
fistl
insl
jae
and
xchg
divl
fcmove
jmp
cmp
cmpsl
je
call
sbb
imul
push
bnd
xor
mov
stos
inc
outsb
ret
mov
jge
fmulp
in
push
sub
xchg
scas
push
sub
jp
fnstenv
add
dec
jle
mov
enter
xlat
adc
or
lock
std
leave
cmp
cmp
pop
or
icebp
lods
test
sbb
cmp
mov
xchg
or
pop
add
or
mov
xor
mov
pushf
sbb
outsb
outsb
push
fs
jp
in
hlt
jmp
into
lods
aam
icebp
mov
aas
or
fsubrs
cli
imul
pop
and
fcompl
loopne
insl
fdivs
int3
cltd
je
aad
std
mov
dec
scas
pop
push
add
adc
enter
mov
mov
popl
insb
mov
js
or
or
or
pop
inc
push
xchg
inc
mov
lods
inc
mov
nop
adcl
in
loop
hlt
pop
mov
inc
jp
mov
rcrl
lock
cli
inc
sub
nop
jmp
mov
es
dec
sbbl
mov
xchg
cmpsb
lret
daa
in
or
and
cmp
das
pop
sarb
lret
shlb
out
imul
inc
stos
nop
lcall
add
es
out
shl
lock
js
fbld
lret
cmpsb
mov
mov
movsl
mov
mov
fs
arpl
ret
mov
testl
fldenv
jbe
imul
int3
psubusb
cmpsb
adc
and
pop
push
mov
push
jecxz
jmp
jbe
pushf
fcoms
add
pusha
inc
testl
mov
shlb
xor
push
pop
mov
imul
popa
xchg
cld
xlat
mov
inc
inc
adc
pop
jo
mov
fcompl
dec
testb
push
fsubs
xchg
jb
inc
insb
add
scas
lcall
push
or
les
sbb
out
pop
lret
and
and
jbe
inc
push
in
jb
mov
shlb
jge
mov
hlt
cwtl
popf
fsubrp
mov
ss
iret
push
add
iret
das
cld
xor
push
hlt
clc
cmp
cld
push
fisttps
adc
and
xor
xchg
mov
mov
sbb
jecxz
in
cmp
lahf
mov
rolb
daa
sub
mov
push
push
outsl
sti
inc
mov
mov
fs
pop
mov
repnz
inc
inc
jecxz
sub
rcr
aaa
mov
and
in
add
lock
and
repz
dec
or
cmp
add
sub
adc
sub
int
inc
jno
adc
mov
jecxz
add
stos
xor
std
mov
gs
push
scas
mov
shl
mov
push
inc
insl
cmp
insb
push
lock
mov
pop
mov
stc
xor
mov
push
enter
cmc
lret
and
das
rcrw
xor
mov
dec
dec
iret
mov
cld
pop
and
lcall
inc
xor
xchg
popa
inc
lea
loope
movsl
aam
or
lahf
adc
addr16
mov
ja
and
arpl
and
das
push
xor
sbb
aam
cwtl
inc
or
stos
inc
repnz
stos
fstp
pop
test
stos
or
pop
pop
arpl
decb
sar
rolb
mov
xor
add
outsb
hlt
mov
jnp
addr16
push
inc
mov
cli
pop
mov
js
cld
dec
lret
cmp
repnz
sub
ja
aaa
fistpll
mov
mov
xor
and
insl
adc
add
add
cmp
add
mov
in
inc
add
cmp
and
daa
inc
jae
jns
cmp
xchg
sub
into
mov
xchg
clc
sub
outsb
inc
pcmpeqd
pop
jmp
dec
loop
cmp
fsts
loop
in
cld
stc
arpl
xor
aaa
shll
jne
ja
xor
cwtl
pushf
xor
fstl
cli
inc
push
insb
jne
mov
repz
mov
test
push
push
out
loope
mov
mov
out
int
icebp
int3
push
cmp
push
mov
fists
jo
shrl
enter
push
adc
push
test
test
das
pop
dec
clc
mov
inc
inc
pop
stos
cmp
lret
outsl
mov
add
lds
jbe
xchg
jle
push
pop
out
xchg
push
xor
imul
push
lods
dec
cmpsb
jl
movsl
adc
xchg
shll
cli
cltd
lods
or
fstp
sub
inc
fld
sbb
loope
pusha
pop
xchg
lea
outsb
mov
cwtl
fstps
mov
adc
xor
mov
pop
les
mov
out
push
testb
lds
mov
cld
scas
iret
mov
mov
sub
mov
adc
iret
call
adc
jp
pop
lret
mov
imul
iret
imul
mov
stos
sahf
mov
sbb
ret
sahf
xor
hlt
jns
and
or
xorl
sbb
insb
repz
push
insb
jl
hlt
hlt
xorl
or
jo
xor
out
dec
pop
cmp
testl
daa
lret
xor
mov
scas
mov
pop
imul
mov
shl
mov
fidivs
jp
nop
scas
ret
mov
cwtl
cmp
inc
cmp
jecxz
dec
loop,pn
add
mov
adc
sbb
jnp
jge
fstpt
mov
testl
ljmp
lods
sarb
enter
shrl
les
lock
out
mov
outsl
stc
loope
xor
mov
lahf
adc
hlt
push
push
iret
dec
mov
mov
cmp
mov
in
cmp
mov
xchg
out
jmp
lcall
lret
fldcw
fidivrl
xchg
insl
sub
or
xchg
xchg
cmp
in
inc
push
loop
adc
hlt
imul
sub
push
jl
testl
pushf
add
addl
jl
and
ljmp
xor
fdivrl
aad
and
push
cmp
out
xchg
xchg
dec
sub
jne
insb
mov
jmp
mov
icebp
adc
testl
insb
bound
lods
push
mov
xchg
rolb
adc
nop
jl
test
mov
push
xor
or
or
call
xchg
pop
pop
and
lea
inc
mov
push
sub
sub
add
lret
jle
hlt
ljmp
cmp
mov
int3
lea
gs
pop
aam
es
and
movsl
pop
pushf
fisubrl
sub
inc
pop
shlb
int3
inc
shll
jns
push
xor
sub
jb
repz
or
mov
push
sbb
adc
xchg
lea
arpl
jmp
jl
sbb
inc
enter
jl
arpl
adc
je
xor
pop
adc
jno
xchg
fcomps
dec
outsl
lods
mov
cmpsb
and
sub
mov
in
out
inc
idiv
adc
outsl
jl
movsb
mov
jb
dec
rcll
jp
outsl
pop
cmp
stos
xchg
dec
inc
mov
adcb
cmc
ss
aas
pop
or
cwtl
push
imul
leave
xor
fldcw
jmp
test
ds
bound
cmpsb
jae
lods
xchg
xchg
cmp
shlb
sbb
add
test
shll
xorb
inc
and
loopne
mov
ds
popf
in
mov
out
in
xchg
push
lcall
movsb
fwait
cmpl
loopne
stos
dec
push
dec
ror
pop
pushf
call
dec
clc
push
loopne
clc
cmp
dec
movsl
pop
popa
mov
shlb
clc
push
or
out
xor
push
jmp
aam
jmp
in
add
fwait
stos
mov
xor
jne
mov
mov
jle
inc
movl
dec
lcall
xor
movsl
add
std
incb
mov
sub
mov
imul
jb
or
mov
leave
call
pop
repnz
and
and
aas
sub
xor
jae
jge
pop
stos
pushf
or
jl
test
js
fwait
inc
xlat
push
push
std
fldl
lods
adc
cwtl
dec
int
in
dec
repnz
inc
dec
icebp
mov
aad
cmc
sbb
aas
push
mov
inc
add
pop
mov
xor
dec
out
inc
fildl
push
out
lahf
fbld
fidivs
dec
int
dec
lahf
ret
clc
dec
and
sub
lock
aad
or
aad
jge
sti
xchg
std
fnsave
xor
int
fdiv
call
xchg
mov
stc
inc
nop
adc
sub
scas
jl
mov
dec
dec
or
aaa
mov
fisttpl
cmpl
imul
cmp
sbb
xor
add
lock
xchg
push
incl
lcall
adc
push
push
ja
xchg
push
push
mov
add
jl
ja
jno
jmp
lahf
hlt
jg
adc
jno
icebp
pop
adc
sbb
pop
and
cli
push
sub
stos
loopne
jbe
repz
outsb
shrb
aas
inc
fdivrp
lock
push
loopne
mov
pusha
aas
and
sub
movsb
pop
xor
push
or
add
sahf
fnstenv
mov
leave
jb
clc
adc
out
mull
lods
test
popa
fcmove
sub
test
fwait
pushf
hlt
sahf
iret
rclb
mov
pusha
add
pop
jp
leave
stc
push
or
addr16
in
repnz
sub
pop
mov
out
sbb
ja
cmp
ret
sub
inc
cmp
push
pop
xor
int3
loope
scas
popa
icebp
xchg
sbb
icebp
aam
cmp
loopne
out
sbb
loopne
xchg
sbb
adc
adc
lcall
aam
leave
mov
push
sbb
mov
aas
mov
ja
mov
push
and
and
add
bound
rcrb
arpl
pop
add
dec
fld
xchg
sbb
cmc
pop
add
push
dec
stc
scas
lret
inc
cmpsl
loope
cmp
daa
cld
lea
push
scas
sub
repnz
inc
inc
fmul
ret
js
aaa
stc
mov
mov
mov
aam
sbb
xchg
jno
test
pushaw
push
addl
test
xor
cmpsb
mov
rol
or
add
jmp
fcomps
in
add
or
cli
adc
add
jp
loope
jmp
daa
push
mov
mov
popa
icebp
mov
sub
mov
sub
and
aas
mov
test
je
fstpt
clc
lcall
gs
or
mov
inc
pop
aas
or
in
jo
dec
mov
loop
jbe
call
popf
rcll
dec
stos
or
or
jne
jo
mov
mov
xchg
mov
xchg
ja
jno
repnz
mov
xor
push
mov
not
sarb
sti
ret
je
fists
lahf
or
push
xchg
dec
aaa
scas
arpl
pop
cmpb
xchg
mov
pushf
mov
ss
test
test
pop
sahf
xchg
xor
jecxz
loopne
out
xchg
xor
mov
in
aaa
stos
mov
roll
inc
scas
jmp
bound
xor
bound
push
pop
sbb
rcr
loopne
or
cli
nop
push
call
popa
int
loope
das
sbb
mov
ss
stos
and
mov
cmpsb
dec
add
sahf
cmp
xlat
orl
addl
notl
xor
mov
push
pop
loopne
js
imul
xor
or
adc
mov
sub
lahf
mov
test
push
out
rcll
and
icebp
push
sub
dec
repnz
sbb
sti
fwait
mov
xor
leave
mov
xor
cmp
sub
inc
pop
scas
movb
lods
insb
or
xchg
mov
insl
pop
pop
iret
lods
jb
xor
mov
insl
insb
test
pop
dec
lret
dec
cli
pop
and
jge
loope
and
push
loope
lods
ret
std
xchg
cmpsl
mov
jl
hlt
push
mov
add
xchg
push
sub
jmp
xor
aad
mov
int3
fstl
loope
bound
xchg
cmc
lods
xchg
in
test
sbb
pushf
cli
sti
mov
mov
cmpb
push
mov
in
push
xchg
add
cmpsl
cmp
push
mov
gs
scas
dec
fwait
int
aad
idivl
pop
fwait
jns
mov
and
push
push
push
outsl
test
inc
fs
jmp
mov
mov
push
fimull
sbb
pop
les
outsl
pop
aad
imul
adc
scas
sbbb
ljmp
ffree
mov
sub
add
jge
clc
or
or
dec
xchg
orl
lods
and
pushf
dec
dec
arpl
outsb
sub
inc
fwait
enter
scas
lock
or
sbb
dec
pop
xchg
cmp
nop
repnz
out
mov
addr16
push
add
std
xchg
int3
arpl
and
jle
in
sub
outsl
aas
jmp
jl
mulb
mov
cmpsl
pop
xor
aad
out
out
imul
cwtl
dec
rep
jnp
cmp
mov
mov
xchg
mov
js
cmpl
sub
jle
pop
cmpsb
imul
mov
xor
xor
rclb
jmp
lret
sub
jl
scas
xchg
pop
daa
xchg
test
out
adc
push
test
repz
adc
outsl
dec
rorb
dec
mov
mov
inc
push
fnstsw
cld
mov
jg
mov
lret
jmp
lcall
mov
mov
ret
mov
daa
test
sbb
cmp
into
loop
dec
lods
xor
inc
stc
mov
and
push
xchg
pushf
lahf
xor
jmp
adc
dec
jnp
xchg
loopne
pop
pop
or
clc
pop
add
nop
stos
or
jge
mov
je
mov
arpl
inc
andl
outsl
into
insb
rcr
mov
pop
loopne
xchg
test
inc
fcoml
sbb
or
xchg
mov
das
das
push
mov
mov
push
cmc
fcoms
sbb
mov
iret
loop
dec
cmc
js
or
cmp
dec
shl
scas
js
pushf
jno
lahf
dec
aaa
mov
mov
adcb
pop
bound
stos
ljmp
jge
inc
dec
sbb
mov
sbb
lret
rcll
mov
movsl
and
movsl
test
pop
loope
pop
cmp
jns
jge
repz
pushf
lea
pop
mov
insl
gs
mov
mov
nop
xchg
adc
mov
je
xchg
mov
aam
aad
gs
jb
sub
and
fnsave
aaa
repz
dec
and
fldenv
shll
std
inc
icebp
lds
pop
mov
lds
push
pop
sbb
xchg
sub
mov
mov
aam
add
and
pop
xchg
in
or
add
les
in
pop
cli
and
or
hlt
cltd
push
jecxz
and
jne
fcompp
popf
add
sub
insl
incb
sub
cs
jbe
inc
or
out
out
xchg
adcl
popf
insl
inc
inc
clc
jbe
push
enter
inc
jno
jmp
pop
mov
mov
jbe
addr16
ret
sbb
jp
cmpsl
popf
fstpl
or
pop
xchg
push
in
adc
xorl
dec
stos
mov
jmp
jb
xor
sbb
sbb
sbb
test
iret
iret
push
xchg
js
repnz
cmp
faddp
sub
inc
lahf
push
cmp
pop
cld
mov
jge
mov
jle
adc
sarb
sbb
xchg
mov
sbb
jecxz
xor
xchg
out
push
xchg
scas
insl
ret
inc
add
jle
cmp
add
and
push
mov
jae
pop
into
shl
sti
fmull
outsb
mov
adc
sbb
push
jmp
cli
add
cmp
imul
add
sub
push
jbe
dec
cs
pop
cmp
mull
lea
mov
xchg
in
dec
je
stc
add
mov
inc
jge
mul
es
out
loopne
jb
arpl
sub
mov
dec
lods
pop
cwtl
pusha
inc
cmp
jecxz
add
or
or
in
enter
add
jp
jno
push
sbb
sbb
mov
mov
dec
fs
adc
sbb
and
cld
cmpsl
add
les
mov
stos
imul
adc
mov
outsl
lea
push
repz
fwait
cmp
sbb
fisttpl
jge
add
mov
inc
shll
out
lret
sub
and
addr16
and
loop
xchg
gs
push
mov
push
popf
mov
cld
push
dec
push
or
sbb
dec
xor
sub
cld
aam
jmp
sbbl
lods
xchg
adc
xchg
or
aas
push
out
push
adc
scas
sarl
xchg
jns
lret
cmp
iret
fs
adc
test
mov
ret
dec
jne
mov
iret
cmp
jp
arpl
es
push
pop
add
add
cltd
add
call
fcoms
out
pop
mov
sahf
pop
fwait
aaa
mov
adc
or
fisubrs
add
imul
mov
ss
divl
cld
pop
cmp
lret
pop
icebp
test
pop
lds
cmp
push
dec
out
sub
jno
mov
push
nop
imul
iret
add
mov
mov
mov
xchg
out
es
dec
dec
daa
mov
jno
aas
jb
jecxz
idiv
nop
arpl
dec
mov
shr
mov
fwait
addr16
dec
jo
call
mov
notl
or
cld
subb
xor
call
cmpsb
hlt
mov
add
mov
push
orl
mov
in
inc
test
fwait
rolb
mov
hlt
jnp
pop
cli
ds
je
mov
pop
xchg
mov
jl
and
leave
movb
inc
jmp
add
std
das
adc
mov
dec
inc
or
test
popf
push
mov
push
in
cmpb
cmpsl
xor
ret
push
fwait
addb
fiaddl
xchg
test
rolb
pop
mov
lods
js
sub
ljmp
imul
mov
cmp
aas
push
gs
sbb
out
or
icebp
scas
movsb
bound
mov
shl
stos
and
mov
scas
roll
rcrb
or
dec
mov
shrl
ja
rcpps
pop
push
dec
xorl
mov
xor
ljmp
mov
dec
jge
xor
mov
pushf
cmp
fldt
mov
frstor
insl
and
and
dec
add
call
mov
jl
jle
cmp
test
nop
hlt
out
dec
mov
repz
inc
outsl
outsl
std
jo
lock
sahf
mov
aas
dec
inc
push
jnp
xchg
xchg
insb
repz
adc
mov
aas
outsl
push
sub
mov
dec
negb
jle
pop
ret
imul
push
test
lds
adc
mov
shlb
scas
lcall
data16
fsubrl
cld
mov
movzbl
cld
divb
decb
and
js
sbb
sbb
std
in
or
or
sub
sbb
pop
sbb
push
or
push
add
lret
mov
xlat
jae
shll
and
int3
sbb
fwait
lret
push
add
ret
lock
or
xchg
sbb
push
push
lahf
dec
les
fimuls
push
decb
in
lcall
jae
xlat
push
xlat
lea
cld
dec
outsl
cld
mov
lock
aad
pop
push
pop
adc
jo
lret
dec
jmp
inc
push
cmp
jne
inc
ret
cmpsb
mov
ja
out
pusha
ja
pop
sbb
add
push
dec
cmp
inc
out
pop
cmpsb
sbb
mov
pusha
push
xchg
sbb
in
es
jecxz
push
mov
stc
ljmp
popf
aas
pop
dec
rcrl
or
das
out
rorl
xlat
ret
lahf
pop
enter
dec
sbb
andb
xor
test
dec
fisubl
pop
sbb
fs
cmp
inc
popa
pop
mov
dec
cmp
add
clc
mov
stc
push
ret
pop
insl
jno
xor
ja
cwtl
xor
adc
sub
inc
jg
add
and
jle
loop
sbb
jns
jno
sub
jmp
mov
mov
pushf
mov
imul
test
xorb
xchg
fdivrs
cmp
mov
lcall
dec
shr
iret
popa
jmp
dec
mov
jne
xchg
les
cltd
push
jae
jo
pop
repz
stos
pop
out
aas
pusha
ljmp
add
ds
or
test
mov
cs
mov
dec
cwtl
sub
jmp
xchg
roll
lret
into
jne
data16
das
inc
mov
mov
inc
outsl
mov
jbe
mov
sbb
popa
sahf
shlb
mov
ss
fnstsw
mov
int3
xor
and
repz
fistps
test
iret
mov
mov
mov
inc
aas
scas
pop
lcall
cmp
imul
and
arpl
pop
mov
or
xor
mov
sub
xchg
sbb
push
adc
xchg
fs
mov
in
jb
outsl
pushf
sbb
mov
mov
cld
lret
sbbb
aaa
pop
loope
mov
repz
jae
mov
lods
xor
xchg
sets
or
mov
jno
push
xor
mov
pop
test
sti
popa
scas
jo
mov
add
pop
fistps
mov
inc
loopne
stos
mov
insb
and
ja
cmp
aam
pop
das
clc
mov
or
pop
mov
jle
ret
repz
not
clc
xor
cmpsl
imul
aas
mov
mov
pop
rcrb
insl
cmpsl
stos
jbe
adc
sbb
or
pushf
enter
mov
lcall
aad
pop
imul
mov
shl
test
xor
xchg
xchg
and
mov
inc
lcall
inc
jge
mov
and
into
loop
fdivl
loope
push
adc
shl
pop
lods
push
push
rorb
sub
xchg
icebp
popa
ds
out
jle
mov
xchg
cmc
pop
jae
sbb
pop
es
out
loop
xlat
xorw
inc
mov
jae
repnz
fisubl
enter
mov
jp
or
je
mov
fwait
push
loopne
neg
sbb
jns
imul
mov
add
je
imulb
mov
cmc
cli
or
adc
adc
push
sub
xor
outsb
addr16
bound
xor
subl
scas
mov
pop
or
rcl
push
pop
mov
imull
xor
pop
add
inc
imul
push
mov
pusha
push
jmp
xor
rclb
cmp
mov
stos
pop
lcall
mov
mov
sbb
jnp
mov
jns
daa
jns
leave
mov
xchg
mov
cmpl
push
nop
fwait
mov
xor
push
jae
or
cwtl
fcoms
repnz
fwait
push
jno
jge
adc
mov
adcl
xor
push
xchg
push
fs
push
pop
rorb
gs
fcompl
aaa
and
push
adc
mov
adc
mov
test
ret
in
jp
enter
jb
inc
scas
xchg
dec
jmp
sub
cmp
mov
sarb
ret
stc
sub
movsl
push
js
movsl
dec
inc
test
nop
push
movsl
fisubrs
xchg
mov
addr16
into
mov
rol
in
dec
and
mov
fcomps
dec
popf
jge
push
dec
jge
adc
inc
incl
mov
sub
mov
sbb
mov
xor
lods
fcomps
int
fsubr
je
shrl
stos
bound
cltd
aas
pop
jo
push
mov
ds
xchg
push
outsw
shr
inc
sub
xor
xor
xor
cltd
add
jae
inc
mov
push
sarl
adc
jo
ds
jge
fadds
cwtl
and
ret
pop
sbb
fsubrs
nop
dec
cwtl
imul
and
pushw
add
ja
sahf
pop
jb
sub
test
aaa
or
inc
jle
cmp
lock
pop
inc
adc
xor
sub
push
shrl
pop
inc
adc
and
hlt
gs
dec
mov
sub
and
gs
and
xor
les
mov
insl
test
pop
cmpsl
es
mov
pop
inc
ss
daa
aas
cmp
adc
jecxz
inc
aam
das
hlt
ljmp
sub
mov
lds
inc
cltd
lret
adc
cmp
mov
or
stos
or
mov
lret
sub
xchg
pusha
jg
or
inc
rcrl
stc
sbb
negb
dec
insl
jl
rcrb
sub
push
or
push
xchg
dec
sbbl
cmp
loop
dec
popf
sub
mov
in
add
fldt
cmpsb
mov
jle
popf
ret
dec
dec
pushf
nop
into
xor
lret
ret
and
mov
or
shll
mov
stc
push
sbb
data16
pop
add
std
sbb
sbb
into
loope
dec
incl
and
imul
addr16
dec
and
pop
add
aaa
dec
aas
mov
call
mov
mov
lods
mov
ja
nop
or
jle
sti
lods
cmc
dec
sub
ja
mov
sbb
loope
mov
adc
push
push
xchg
push
in
dec
in
jno
lahf
adc
inc
icebp
add
dec
addb
mov
add
dec
adc
aam
jl
into
int
bound
add
lret
imul
in
clc
mov
jne
sbb
into
inc
inc
inc
popa
outsb
push
addr16
das
lods
idivb
imul
les
pop
icebp
dec
in
sti
jecxz
movsl
adc
push
popf
testl
repnz
inc
lea
test
push
xor
mov
aaa
dec
ret
sbb
xor
adc
mov
iret
shl
je
and
imul
jl
xchg
vmread
xor
popf
mov
test
shll
sbb
fcompl
cwtl
jne
into
mov
add
mov
andl
push
popf
cmp
pop
and
cld
pop
outsl
xchg
mov
scas
gs
es
adc
push
add
dec
mov
sti
sub
fdivl
add
inc
ljmp
out
and
lea
jnp
sub
sub
push
out
popa
ss
push
dec
mov
cmp
push
xor
loopne
daa
adcl
fnsave
xor
jne
sbb
loopne
sbb
pop
adc
push
inc
lds
scas
push
mov
in
push
shll
ficoml
mov
push
gs
fldcw
jbe
insb
pop
inc
lock
xchg
outsl
and
outsb
aas
subl
ss
repz
into
xchg
jb
sub
xor
jb
bound
jl
sbb
and
enter
pop
jnp
pop
ret
push
ljmp
sbb
jle
push
add
inc
rolb
fwait
inc
repz
jecxz
loope
js
pop
out
mov
lea
jge
push
dec
test
push
imul
out
push
sar
mov
mov
inc
cmp
inc
mov
hlt
cmc
inc
in
inc
adc
mov
and
sbb
es
ret
cmpsl
push
mov
inc
roll
sarb
adc
sub
sub
or
dec
dec
xchg
and
sbb
cld
push
sub
pop
fmull
loopne
orl
fadd
scas
jle
ficomps
pushf
lock
arpl
outsl
dec
dec
adc
and
rcrb
fwait
jo
lcall
cltd
aas
adc
sub
xchg
mov
cli
in
mov
add
xor
fimuls
xor
int
ljmp
cld
gs
sub
outsb
mov
aam
jne
cwtl
ljmp
push
push
outsb
pushw
mov
xor
sbb
cmp
mov
loop
fnstcw
mov
out
adc
adc
aam
mov
sahf
dec
test
lcall
out
mov
pop
gs
pop
imul
mov
or
lcall
repnz
rcl
xchg
fisubrs
imul
push
xchg
xchg
lds
adc
jne
xlat
dec
push
fistpll
inc
mov
xchg
inc
stos
push
push
mov
out
push
jnp
mov
in
shl
scas
sub
mov
shll
dec
test
jnp
aas
fninit
mov
inc
daa
ds
or
shlb
stos
sub
sti
sub
dec
xlat
add
or
mov
cwtl
jns
shl
cmpsb
xchg
xchg
add
iret
movsl
xchg
das
or
fst
insl
adc
into
rorl
lret
repnz
or
adcl
hlt
ret
inc
bound
push
addb
out
adc
mov
mov
mov
scas
lret
inc
push
cmp
jmp
popf
jns
or
sti
xor
mov
dec
popa
hlt
cltd
mov
add
sub
lahf
jmp
test
sbbl
stos
stos
les
mov
out
es
or
test
in
mov
mov
nop
pop
xlat
jo
cmp
add
aam
or
stos
jne
stos
in
lcall
out
sarb
fimuls
outsb
lcall
push
adc
cmp
jecxz
mov
or
out
and
mov
mov
outsl
jo
push
lods
xchg
rcr
pop
jns
dec
xor
popf
repnz
stos
dec
mov
push
movsl
and
adc
test
adc
push
pop
inc
xchg
mov
ret
imul
fdivp
test
les
iret
aam
out
addl
pop
cmp
pop
dec
add
mov
repz
js
xchg
repz
int
xor
mov
shrb
mov
jl
mov
pop
xor
rolb
pop
imul
xor
inc
stos
notl
outsl
pop
jl
pusha
jb
insl
adc
gs
test
ret
or
mov
inc
dec
jg
dec
push
sahf
mov
push
lahf
imul
and
pusha
pop
jb
repnz
sub
std
ss
repz
sub
pop
adc
push
cmc
std
jmp
mov
outsl
hlt
loope
xor
lds
stos
pop
das
mov
or
test
xchg
mov
mov
outsb
movsb
insl
mov
mov
lcall
sbb
fnstcw
popa
and
or
adc
std
in
xor
mov
lock
sahf
movsl
aad
adc
push
nop
outsl
adcl
sub
roll
push
push
sbb
mov
push
add
ss
pusha
push
loope
stos
cmpsb
jmp
ficompl
mov
lods
outsl
mov
fcoms
jp
in
push
lret
add
dec
cmpsl
push
pop
aam
ja
sub
push
pop
add
test
cmp
and
fld
insb
stc
cmp
xchg
lds
ret
addr16
je
pop
or
inc
dec
mov
aaa
lods
dec
fistl
adc
push
cltd
js
fisttpl
insl
ret
add
call
adc
pop
dec
rol
mov
ss
sbb
cmc
jns
mov
std
out
xchg
ja
pop
inc
adc
rcrl
lods
sub
scas
out
test
sarb
lods
jmp
pop
inc
cmp
and
ret
int3
add
fisubrl
jg
iret
andb
lods
inc
add
cmp
mov
addl
ljmp
punpckhbw
push
jmp
testb
pop
fisubrl
mov
push
jle
inc
aad
jne
mov
call
or
sti
insl
pop
add
xchg
popf
or
out
mov
mov
cmc
xchg
dec
jp
xchg
aas
out
mov
addl
add
scas
inc
lds
fs
xorl
mov
aad
push
in
fdiv
mov
pop
xor
dec
les
std
or
adc
push
jnp
mov
mov
mov
lcall
sub
fiaddl
shl
xor
scas
mov
sbb
outsb
pushf
repnz
ret
cltd
cwtl
jb
addr16
pusha
and
enter
xlat
jp
cmovne
iret
sub
xchg
or
outsl
adc
cmp
popf
test
mov
ds
dec
scas
int3
les
in
loopne
or
add
jmp
lret
pushf
popa
jg
cli
mov
adc
icebp
arpl
jno
into
and
add
call
fwait
push
cmp
xor
lahf
cmovae
loopne
push
test
imul
sbb
add
outsb
stc
popa
cmp
sbb
aad
lret
mov
test
fst
xchg
dec
push
xchg
jno
or
gs
and
xor
cmpsb
into
pop
aaa
add
dec
pop
imul
cmp
dec
mov
std
xor
xchg
out
jle,pn
push
mov
push
mov
movsl
ret
cmpsb
push
stos
jp
out
rcll
sbb
shrb
xchg
mov
and
fidivrs
out
popf
sti
lods
and
mov
lea
fstps
jg
jo
addr16
sbb
mov
push
arpl
and
mov
pop
cs
sbb
cmpsl
dec
xchg
mov
add
push
cmp
test
ss
inc
lea
xorl
sub
mov
sub
aaa
xchg
scas
add
mov
stos
adc
hlt
xchg
pop
sar
cwtl
adc
jle
jp
sbb
sub
pop
test
sbb
mov
add
xlat
jge
mov
dec
lock
sub
rcrb
adc
sub
or
xchg
and
test
mov
lret
dec
movb
jl
jae
ss
or
int
adc
inc
push
jmp
xlat
jno
add
loopne
and
dec
push
dec
pop
sub
push
call
repnz
and
in
xchg
sarb
jb
inc
sbbb
and
stos
cli
push
adc
xor
inc
outsl
mov
insb
pop
bound
lea
das
push
loop
jmp
and
lret
mov
and
imulb
ret
pop
cwtl
mov
mov
data16
into
push
push
xchg
sub
jb
subb
shll
ds
jno
aaa
or
inc
or
js
sub
pop
repnz
lahf
add
inc
and
adc
pop
aaa
fmuls
scas
mov
popf
sbb
mov
lea
or
movsb
push
inc
sub
xchg
loopne
xchg
leave
cmp
cmp
push
in
ds
jae
dec
dec
popa
and
jbe
movsl
cmp
mov
sub
mov
or
lahf
inc
pop
fdivl
push
out
jne
and
movsb
div
in
movsl
pop
adc
add
std
inc
mov
sbb
and
int
in
test
pop
xchg
add
sub
dec
mov
arpl
jb
pop
xchg
vmwrite
cs
xchg
sahf
jle
mov
shr
xchg
loopne
or
mov
xor
push
sub
add
adc
hlt
xchg
cld
ret
sbbl
inc
or
aaa
popa
fmull
aad
aam
sub
shlb
sub
pop
sbb
pushf
pop
add
outsb
inc
leave
push
sub
cmpsl
loopne
jge
rclb
cli
cmpsl
jb
movsb
icebp
imul
mul
add
and
xchg
and
mov
add
les
mov
adc
or
push
xchg
imul
jo
mov
jmp
loope
pop
push
xchg
jp
or
and
xlat
fwait
push
inc
lahf
mov
mov
je
loope
add
pushf
ficompl
inc
mov
jecxz
in
arpl
insb
movsl
insl
pop
adc
pop
dec
mov
test
ds
repnz
out
cmc
pop
sub
int3
xchg
inc
leave
outsb
in
fwait
pop
out
add
fidivl
mov
fnstenv
push
cwtl
hlt
pop
fldcw
bound
and
test
out
andl
xor
jecxz
xchg
or
divb
pop
mov
cmp
sbb
mov
movsb
pop
nop
out
add
stc
xchg
mov
sub
push
pop
negl
adc
mov
cmpsl
cmp
fstpl
hlt
add
push
xor
mov
xor
xchg
sub
je
scas
loope
test
data16
js
push
insb
dec
pop
xor
dec
scas
xor
cld
or
insl
aaa
cmp
pop
push
in
shr
mov
mov
xchg
addr16
test
jb
mov
sahf
repz
pushf
lret
add
mov
cwtl
dec
push
inc
imul
lock
sbb
mov
out
mov
mov
cld
ja
mov
ss
dec
pop
sub
xor
jecxz
test
sub
mov
ljmp
xor
fbld
lods
notb
xchg
out
popl
frstor
xor
jge
fcmovbe
or
add
ljmp
outsb
mov
aad
repz
pop
lahf
fs
mov
mov
outsb
inc
mov
scas
shll
repnz
and
xor
sub
je
lds
push
insl
mov
dec
pop
in
mov
or
adc
push
fs
and
mov
clc
sarl
mov
push
jge
test
fdivl
cmp
push
aam
add
aam
das
pop
dec
jmp
jno
mov
xor
pop
cs
mov
push
sub
test
add
ret
jmp
jo
pop
scas
mov
insl
test
into
jmp
push
aaa
repnz
pop
pop
xlat
pushf
int3
jbe
je
push
js
fists
ss
jae
lcall
or
xor
or
popf
dec
daa
add
fcmove
popf
std
dec
dec
mov
flds
dec
sub
sbb
add
mov
pop
out
sub
cmpsl
dec
sub
roll
xchg
mov
inc
adc
mov
mov
cmp
std
xor
pop
sub
and
cmp
iret
add
xchg
jno
add
sbb
pushf
ret
push
pop
cmpsb
outsb
jl
out
arpl
in
test
stos
push
or
lret
movsl
enter
popa
pop
popf
in
sub
mov
xchg
xor
adc
pushf
fisubl
jne
pop
pop
stc
std
inc
daa
out
orb
rorl
in
dec
fisttps
jns
fdivl
bound
test
inc
out
pop
or
movsl
jmp
mov
imul
ds
mov
daa
add
sub
xor
fcmovbe
stc
jnp
outsl
cwtl
lret
jb
dec
push
mov
addl
cs
cmp
add
jmp
in
loope
cmc
negb
sub
xchg
xor
and
pop
mov
ret
jnp
and
sbb
mov
xor
add
push
mov
loop
sub
arpl
xchg
pop
nop
mov
and
jno
std
lret
mov
cmp
mov
sbb
push
xor
or
loopne
mov
out
jno
idiv
ja
push
mov
mov
dec
lret
pop
lahf
xchg
push
jno
jle
xchg
sub
inc
pop
mov
aaa
fsub
mov
sbb
xor
pop
rclb
dec
adc
shrl
ret
es
push
lods
cmp
test
sbb
ss
out
mov
xchg
inc
dec
cmp
mov
stos
or
daa
movsb
cwtl
push
mov
data16
mov
ja
and
jp
xchg
aaa
shl
andl
inc
ret
test
dec
push
sub
push
jbe
idivb
or
xchg
lds
popf
push
adc
cmpsl
mov
adc
pop
clc
xor
mov
cli
xor
add
jl
ja
cmp
mov
add
clc
mov
pop
jge
arpl
mov
hlt
orb
std
xchg
pop
mov
subb
push
ljmp
dec
je
cmp
mov
adc
into
mov
sub
cmpb
mov
mov
aaa
lock
lods
mov
test
inc
xchg
arpl
gs
aaa
and
xlat
jae
mov
push
or
nop
mov
xchg
cmp
adcb
aas
push
enter
push
mov
push
sub
mov
movsb
adc
dec
dec
pop
jmp
lock
mov
insl
lods
jbe
ret
test
sub
sbb
push
or
push
xor
jecxz
das
inc
movsb
push
pushf
mov
mov
adc
arpl
xchg
jecxz
mov
inc
inc
dec
test
mov
sub
imul
dec
loopne
dec
inc
in
sbb
test
push
cli
adc
dec
in
adc
push
jnp
sbb
shl
fsubs
fdivrl
push
pop
outsl
or
pushf
or
std
add
imul
or
cld
mov
ret
mov
dec
xor
stc
lock
lret
or
jl
std
aad
popa
pandn
aam
add
add
sub
popa
pop
mov
into
mov
sub
fistpll
int
dec
and
out
cmpl
dec
clc
adc
xchg
pop
inc
fisubrs
jmp
push
nop
xor
xor
sbb
fnstcw
scas
cli
push
emms
pop
jmp
cmp
adc
and
frstor
mov
jp
aam
or
jg
call
hlt
mov
not
iret
fistpll
push
add
or
lods
ret
ljmp
dec
aas
mov
sarw
add
wrmsr
sub
sti
stos
shlb
mov
sahf
xor
sar
sub
shll
xlat
test
sub
xor
dec
popl
adc
daa
fimuls
enter
sub
lea
in
mov
sbb
mov
pop
hlt
push
push
adc
xor
lahf
add
mov
sbb
pop
out
jnp
std
jne
lods
push
dec
jmp
lahf
and
cmp
pop
xchg
or
in
cmp
dec
xchg
and
shlb
call
and
inc
imul
inc
cmp
adc
sub
imul
repnz
lcall
cmpl
int3
dec
mov
mov
mov
ret
int3
xchg
loopne
adc
fnstsw
xchg
sub
push
ficoms
cli
inc
jne
cmp
mov
aas
sbb
insl
push
je
inc
cld
push
mov
sub
sahf
or
and
or
es
loope
mov
sbb
and
mov
adc
mov
jp
dec
aam
cld
push
sbb
movsl
test
cltd
fs
orl
pop
ret
clc
movsb
mov
pop
in
push
push
pop
inc
mov
add
sbb
sbb
in
or
xlat
or
icebp
int
and
sub
xchg
xchg
sub
push
scas
lret
sahf
shll
in
dec
push
dec
xchg
jno
inc
jle
js
notb
lret
mov
repz
and
jnp
fistps
mov
loopne
sti
and
add
call
jl
call
cmp
xor
in
jecxz
pop
loopne
xchg
scas
xor
mov
add
cmc
inc
adc
inc
fsubl
cmpsb
jg,pn
incl
inc
mov
rorl
ljmp
push
sbb
push
dec
and
xlat
loop
dec
jp
subb
insl
cmpsb
aad
gs
push
xor
int3
and
inc
push
dec
add
inc
ficompl
or
sahf
cmpsb
leave
add
or
mov
adc
jne
cmpsl
dec
and
rcr
or
filds
push
pushf
xlat
add
mov
loop
mov
mov
rolb
pop
jno
movsb
jge
mov
lcall
push
fucom
or
fnsave
testb
jae
arpl
dec
jb
ljmp
in
into
mov
int3
xchg
cs
and
push
xor
dec
mov
lods
xchg
loopne
cmp
test
jnp
mov
dec
cmp
add
sbb
mov
cld
sub
lds
fistpl
les
cmp
int
addr16
filds
pop
and
xor
jp
ss
movsb
ja
dec
mov
and
movsl
add
jle
mov
mov
fcmove
out
mov
popa
std
push
lds
addb
cmpsl
cmp
cld
xchg
push
cli
add
mov
cmp
jne
inc
les
mov
mov
lret
lcall
cwtl
lock
cmp
std
or
push
xor
or
xchg
push
dec
loop
and
lds
ljmp
fs
shll
data16
bound
mov
bound
mov
sub
scas
aas
fwait
in
xchg
push
stos
jo
push
sbb
adc
jecxz
das
mov
lahf
notb
fdiv
clc
sbb
jb
call
jle
adc
pop
test
les
mov
mov
mov
lcall
pop
cwtl
filds
aaa
pop
stc
mov
fwait
bound
xchg
cmp
cmp
xor
adcb
and
movsb
outsl
call
mov
and
pop
hlt
jne
mov
jge
outsl
and
inc
dec
mov
repz
xor
test
push
jmp
lret
leave
loop
lret
pop
mov
in
cli
mov
fistps
insl
lods
lock
sub
lods
push
fprem
sahf
cmp
in
adc
xor
xor
pop
jnp
les
push
sbb
frstor
or
fxch
or
or
push
das
aaa
inc
xorl
imul
cmp
xor
or
cmpl
dec
inc
fs
stc
fidivs
testb
rcrl
push
loope
cltd
inc
daa
lea
push
bound
out
dec
test
jmp
xchg
mov
pop
arpl
cwtl
popa
rclb
jge
mov
push
inc
or
or
push
add
mov
lock
stos
mov
mov
jno
lcall
xor
ds
fsubl
push
insl
aas
cli
enter
mov
jo
add
cmp
icebp
and
inc
mov
push
push
jo
shll
pop
aas
ror
sarl
jle
or
dec
push
test
push
and
mov
inc
fnstenv
and
mov
or
jnp
xlat
inc
cmc
pop
cltd
cmp
or
ljmp
mov
mov
cmp
stc
fdivrl
mul
sbb
cmp
sub
adc
popf
outsl
xor
imul
cltd
push
out
sbb
repnz
rcrb
xor
adc
lahf
lret
test
jae
popf
inc
sbb
mov
sub
cmp
iret
mov
nop
inc
sbb
mov
rorl
movsl
jns
xchg
xchg
push
cmp
push
xor
sbb
cmpsb
mov
mov
dec
jmp
and
lret
test
into
stos
or
xchg
cwtl
in
ljmp
cli
lods
pop
mov
enter
test
test
and
repnz
scas
xchg
mov
shrl
ret
shlb
js
add
aas
int3
mov
mov
and
sub
fbld
hlt
nopl
insl
xor
repnz
push
out
nop
mov
daa
add
xchg
sbb
and
mov
mov
xchg
test
fsubrs
test
mov
lcall
in
push
cmp
into
inc
ss
or
jle
outsb
cld
lods
lds
inc
enter
jg
addb
mov
mov
adc
subb
data16
mov
outsl
jecxz
push
xor
fwait
out
sbb
and
dec
repz
out
sbb
into
inc
or
js
push
mov
ljmp
orb
mov
mov
or
call
inc
mov
cmc
test
push
pop
xor
or
sub
in
push
fxtract
inc
sub
xchg
push
xchg
out
mov
push
mov
add
mov
jg
dec
cmpsl
push
and
sbb
fwait
cmp
in
lea
adc
mov
mov
sub
xchg
inc
in
popf
push
ds
int3
ret
loop
or
out
stos
mov
in
cld
inc
and
mov
pop
lahf
sub
sub
xor
incb
xchg
nop
repnz
jns
popa
sbb
les
jl
sbb
cmp
outsb
sbb
repz
lods
fstl
hlt
lods
movsb
shrl
repz
pop
or
pop
cltd
out
add
lret
lret
cmp
ss
loopne
push
dec
jmp
subl
movsl
aas
pop
out
xor
mov
push
ret
or
mov
ret
mov
fdivl
add
movl
call
push
mov
cmpps
pop
and
shrb
mov
cs
sub
sbb
jmp
jo
loope
jnp
dec
test
cmp
popf
mov
ja
dec
xor
cmp
aad
xlat
enter
or
and
mov
mov
cli
xchg
mov
lahf
rcrl
fwait
popf
sbb
mov
ds
xchg
mov
fcoms
jo
pop
inc
shrb
mov
dec
jge
lds
xchg
dec
jmp
mov
hlt
in
dec
adc
push
or
sbbl
add
addr16
int
cmp
loope
popa
mov
or
jae
orb
sbb
cwtl
imul
shll
cmp
dec
ljmp
xchg
int3
inc
pop
add
jmp
call
andb
jne
imul
mov
sbbl
inc
mov
inc
je
sbb
jbe
scas
or
xor
jns
dec
ja
iret
jmp
ds
sbb
push
loope
and
test
sbb
lods
outsb
out
push
into
sub
jmp
popf
cli
fwait
or
adc
hlt
and
testb
mov
ss
repz
test
add
or
fdivs
cmp
ss
cld
mov
sahf
aam
sarb
mov
int3
sub
jns
stos
loop
aam
add
ss
inc
xchg
insl
bnd
out
into
popf
daa
in
adc
lods
rol
or
xor
inc
xor
or
cmc
or
cmpsl
pusha
or
sahf
sub
push
add
dec
outsb
out
add
and
flds
mov
fidivrs
mov
mov
mov
hlt
stos
pop
and
add
mov
pusha
xor
outsb
test
sbb
mov
movsl
cld
test
loope
imul
or
push
ret
sbb
adc
into
clc
outsb
or
jg
fadd
jp
stc
pop
fs
jp
mov
push
aaa
das
imul
adc
frstor
mov
mov
push
push
ja
aad
xor
inc
notb
sub
add
xlat
pop
aad
xor
movsl
jl
dec
jne
lods
push
rol
in
enter
out
pop
jb
out
ficomps
lahf
sbb
dec
mov
fcomi
and
or
ret
mov
cmp
mov
lods
inc
xchg
inc
cli
dec
cmp
mov
jg
shrl
mov
cld
test
jle
out
cmp
cltd
cwtl
and
fcompl
push
push
push
outsl
ret
mov
call
std
cmpsb
adc
daa
aam
mov
mov
mov
bound
stos
fistl
cld
gs
push
fbld
int
movsb
out
jl
addl
mov
and
or
jbe
cmc
and
push
mov
mov
into
lea
movsb
jns
push
jg
xchg
mov
fwait
and
cmp
sti
xchg
cld
inc
leave
icebp
sbb
or
cs
push
lcall
and
mov
xchg
sub
sbb
movsb
sarb
add
mov
sbb
ret
std
sub
mov
sar
clc
clc
push
jmp
pop
sbb
push
dec
add
jo
repnz
push
insl
add
outsb
enter
shlb
fwait
inc
aad
icebp
popf
shr
adc
jo
pop
push
jns
adc
fisubrs
cmp
fdivp
ret
or
ja
jno
push
push
inc
lods
sbb
adc
loope
shll
jne
sub
xor
nop
andl
adc
lahf
cmp
add
je
cmp
out
mov
gs
and
xchg
iret
push
cmp
gs
ret
mov
movsb
push
push
cmp
loop
ss
mov
movsl
fwait
dec
sbb
lcall
jnp
outsb
out
lods
loop
or
add
push
fistpll
sub
ret
xchg
xlat
into
lret
or
dec
jno
mov
or
mov
jo,pn
pop
mov
lock
mov
jg
and
sub
inc
push
adcl
movsl
adc
xchg
mov
scas
insl
leave
outsl
or
sub
fs
cmpsb
pop
ret
cs
stc
dec
inc
add
fxtract
xchg
loop,pn
addr16
hlt
test
mov
jnp
ss
or
aam
pop
fucomip
dec
shrb
insl
push
dec
les
into
inc
je
shlb
arpl
arpl
cwtl
inc
mov
and
cld
sub
sub
aam
pushf
cwtl
std
popa
test
in
lock
sti
mov
bound
addr16
and
push
cmp
jo
pushf
repnz
loop
adc
std
subb
fst
sub
arpl
and
and
dec
fimuls
in
cmp
or
jp
andb
data16
push
add
pop
adc
nop
mov
into
lds
movsl
shll
pop
insl
fldcw
cmc
add
pop
lahf
addr16
hlt
dec
push
dec
jmp
mov
mov
jl
mov
xchg
push
pushf
arpl
dec
fnstsw
repnz
mul
dec
sub
lds
mov
mov
dec
mov
nop
push
inc
mov
sbb
std
and
lret
xchg
arpl
cmp
in
add
sub
jl
and
pop
js
sub
repnz
js
imul
daa
stos
out
out
divl
dec
dec
cmc
lods
lret
int
mov
in
mov
popf
inc
push
add
cld
ret
sub
scas
int
and
scas
nop
mov
vprotw
std
jae
mov
inc
mov
inc
sub
jle
xor
jle
test
inc
arpl
mov
sbb
mov
das
sbb
loop
sbb
dec
sti
out
and
dec
adc
mov
push
addr16
pop
stos
xlat
in
stos
cmp
inc
jecxz
je
nop
aam
arpl
inc
xchg
push
and
push
or
lock
xor
push
or
or
push
jmp
pop
fstl
in
xchg
mov
cmp
xchg
fisubl
dec
lcall
xor
inc
pop
and
mov
xchg
std
pusha
sbb
jge
sbb
cmp
js
fwait
inc
mov
pop
in
jmp
mov
inc
jae
dec
adc
shll
xor
loopne
cld
jge
xchg
pop
sti
sub
rclb
pop
xorl
hlt
aam
push
aas
push
movb
push
xchg
testl
arpl
jne
push
aaa
fisttpll
fsubs
test
outsl
scas
inc
dec
shrb
loopne
jae
loopne
push
mov
jne
repz
xchg
dec
xchg
mov
jmp
mov
sub
addl
out
adc
mov
leave
cmp
push
lods
pop
jmp
add
aas
pop
or
pop
xor
mov
mov
jne
shlb
es
mov
pop
mov
lock
int3
xor
xor
jnp
pop
enter
jbe
mov
leave
cmpb
fildll
xchg
cld
loope
pop
cli
jp
fdivrl
mov
adc
dec
pop
jp
test
push
sbb
int
in
xor
leave
in
mov
jmp
rcrb
push
nop
enter
push
aas
fstl
jle
inc
lcall
ljmp
psadbw
idivl
dec
xor
pop
add
rcrb
sub
sti
push
out
ret
mov
push
add
sbb
fsubs
dec
aas
aaa
push
cmpsb
lea
or
inc
or
lock
xchg
sub
mov
xchg
or
loope
lock
cmp
adc
xor
push
test
decl
xor
jae
adc
cli
mov
cmp
lcall
inc
xchg
adc
je
sub
mov
xor
arpl
test
push
in
stos
sahf
mov
adc
fs
popa
testl
add
adc
in
push
aad
rolb
sbb
adcb
add
out
in
outsl
pushf
pop
lock
lcall
push
movsl
dec
out
xchg
mov
or
mov
js
popf
mov
mov
push
insl
mov
negb
lea
stos
cmpsb
mov
or
xor
pushf
xor
push
or
push
mov
lahf
leave
jne
ljmp
enter
hlt
and
xor
je
in
insb
xlat
dec
mov
fdivl
push
mov
js
jb
jbe
inc
ret
push
mov
repnz
stc
lret
xchg
add
cmc
mov
dec
ljmp
mov
xchg
pop
and
xchg
pop
xor
cs
push
lahf
push
mulb
dec
lods
jle
fisttpll
popf
addr16
and
cld
pop
andb
sti
sbb
dec
addr16
popa
sbb
stc
lcall
mov
mov
mov
lret
fnstcw
outsl
inc
shrl
sub
xor
sti
mov
mov
add
jbe
loopne
test
pop
sub
divb
test
or
pop
sub
cmp
inc
xchg
xor
leave
rcll
adcl
xor
fcompl
filds
cwtl
and
outsl
mov
mov
inc
pop
xchg
int
pusha
mov
mov
cmp
or
sti
stos
jns
loopne
inc
js
into
push
roll
in
test
popa
cwtl
and
psubsb
inc
out
add
ds
push
int
pop
adc
movsl
or
pop
add
mov
fbstp
subb
fistpll
nop
dec
jecxz
jle
jl
faddp
mov
jo
pop
out
xor
dec
adc
in
mov
xchg
push
rclb
bound
cmpsb
mov
scas
jno
adc
mov
mov
pop
sub
mov
ljmp
subl
sub
insb
push
into
flds
cmp
sub
and
mov
pushf
inc
mov
adc
jno
bound
add
ljmp
or
cld
push
inc
and
or
mov
xor
decb
jbe
xor
mov
inc
lds
pop
push
add
and
js
sbb
insl
lret
aam
sahf
cmpsl
jb
pop
sub
pop
or
arpl
push
scas
cli
fcompl
xor
pop
ret
sub
push
les
push
cmp
pop
jb
inc
iret
pop
incl
jne
mov
and
ljmp
sbbb
dec
repnz
xchg
lds
mov
sbb
testb
xchg
fstl
and
into
ret
mov
jbe
std
fimull
jbe
clc
dec
ds
daa
ret
mov
pop
imulb
push
lea
mov
icebp
push
mov
clc
mov
neg
shll
dec
bound
adc
ret
clc
cwtl
imul
fwait
cld
ja
fdivl
arpl
inc
shll
addr16
push
xchg
inc
dec
pop
dec
inc
ds
iret
ja
push
jne
rorl
sbb
cmpb
inc
dec
jp
iret
test
pusha
jno
xchg
mov
retw
xlat
sub
out
int
cmp
sbb
push
mov
and
mov
rcrl
dec
nop
cmpsb
sub
sub
sbb
das
sbbl
ss
mov
pop
icebp
lods
push
push
or
in
out
push
dec
stos
pop
push
out
dec
loope
xchg
pushf
cs
dec
hlt
sbb
and
inc
mov
adc
jmp
pop
jo
fistps
cmp
cmp
mov
inc
lock
icebp
pop
jo
pop
fadd
mov
shl
aas
jg
mov
nop
cwtl
loopne
in
mov
ds
call
push
push
daa
jmp
sbb
les
shll
push
jo
or
sbbl
sbb
popa
jns
lcall
and
xchg
nop
dec
mov
shll
pop
fucomi
aas
repnz
nop
push
or
xchg
dec
nop
mov
push
test
insl
stos
mov
lret
movsb
lods
push
dec
xor
les
enter
testb
test
test
popa
mov
frstor
and
and
mov
cmc
xrelease
daa
aas
lcall
rorb
mov
cltd
shlb
lock
mov
or
xor
jg
mov
jo
push
dec
popf
push
fsubrl
jns
notl
daa
push
in
sub
cmc
pop
jge
out
call
ljmp
mov
rcll
xor
rcll
cmpsl
jb
into
std
hlt
aad
xor
jno
leave
push
pop
fsts
aad
sbb
jbe
inc
icebp
pop
adc
test
cmpsl
sub
mov
imul
inc
xchg
out
jb
dec
jnp
inc
add
xchg
lods
push
fsubrp
lret
sarb
jns
xchg
and
cs
adc
or
ret
adc
adc
pop
push
insl
out
jmp
imul
mov
push
jp
push
lahf
add
insb
xchg
into
out
in
in
mov
inc
int3
mov
cltd
xchg
xchg
add
loop
sbbb
out
cmpsb
jecxz
adc
int3
xchg
mov
mov
sbb
sbb
mov
repnz
hlt
cmp
fdivr
stc
mov
imul
out
fdivrs
imul
lock
sbb
mov
and
adc
repnz
mov
and
sbb
dec
outsl
push
xchg
aas
mov
pushf
jmp
scas
hlt
sbb
sub
insl
add
sti
cmpsb
aam
std
xchg
fildl
les
leave
lds
mov
fidivl
pop
xor
out
inc
mov
outsl
push
stos
icebp
mov
in
xchg
push
clc
or
jmp
or
pop
pop
push
jns
push
add
test
fwait
sbb
out
jp
rolb
filds
mov
mov
mov
mov
fstpt
jp
adc
repz
mov
test
push
clc
popa
pusha
mov
pop
xchg
loope
das
xchg
shrb
dec
in
cwtl
mov
stc
add
popf
repz
cmp
enter
gs
lock
dec
pop
lods
xchg
loopne
std
nop
movsl
sub
data16
insb
and
push
rcrb
test
pop
leave
xchg
sbb
pusha
outsb
dec
xor
xlat
insb
fldl
and
iret
ror
rcrb
frstor
scas
xor
mov
filds
cmp
shll
pop
std
mov
sub
mov
dec
cltd
loope
addr16
jb
sub
xchg
cmpsb
clc
pop
add
ja
das
addl
xchg
aas
jae
mov
cli
push
mov
mov
adc
push
sbb
xor
mov
orb
js
cwtl
sub
cmp
mov
popf
stc
push
or
mov
mov
xchg
loop
sbb
outsl
and
mov
icebp
repnz
enter
mov
push
and
cmp
push
std
or
scas
mov
aas
sub
mov
cwtl
scas
push
push
push
mov
pop
or
aas
movsl
push
xor
mov
mov
loopne
pop
xor
xor
pop
lock
xlat
adc
stc
mov
jle
jp
xchg
pop
fs
lret
ljmp
pop
dec
mov
pop
call
nop
ficoms
ljmp
mov
faddl
sub
inc
push
std
ljmp
leave
adc
pushf
xchg
gs
gs
aas
cmp
and
mov
jl
dec
shr
lock
pop
fidivrl
fisttpl
fbld
inc
imul
pop
mov
or
cmp
pop
popf
int
aas
push
in
in
fldl
mov
sahf
sub
leave
movsb
in
sbb
insl
insl
ljmp
xor
cmp
popl
sub
aaa
es
lahf
scas
jns
fwait
mov
cmp
xchg
add
mov
jne
movsb
push
nop
mov
push
sbb
inc
or
outsl
popa
fcmove
xchg
add
cwtl
loope
mov
pop
hlt
xor
xor
pop
jmp
xchg
and
ss
and
lds
scas
das
fs
mov
lds
and
lea
cltd
xor
lods
shlb
scas
fistpll
cmp
sbbl
xor
adc
add
clc
gs
rcrl
or
mov
loop
mov
xchg
sbb
inc
sbb
loope
shlb
stos
out
xchg
mov
pusha
les
dec
psrad
mov
sub
das
push
inc
fnsave
cli
movsb
arpl
scas
push
mov
and
inc
arpl
std
data16
xchg
cli
mov
js
xchg
push
call
inc
out
xor
imul
sub
inc
jnp
stos
aad
cmp
sbb
adc
aas
push
movsl
add
mov
cmp
test
repnz
mov
mov
js
mov
je
das
enter
jo
imul
inc
negl
inc
repnz
loopne
loopne
pop
lahf
mov
lcall
scas
hlt
lods
arpl
loopne
dec
addr16
and
adc
pusha
sub
orb
xor
lds
cmp
push
outsb
add
mov
inc
shll
jne
mov
insb
cmp
cld
cmp
mov
popf
pop
push
ja
jae
adc
addr16
fsubl
adc
sbb
mov
mov
mov
les
rcl
xrelease
jp
jp
je
movsl
stc
dec
nop
lcall
mov
xchg
cld
jo
ds
add
pushl
sbb
fsubp
mov
pop
pop
js
xlat
pop
dec
push
mov
xor
push
push
test
jecxz
or
push
clc
lret
adc
int
lret
xchg
mov
or
fsubrl
jns
xor
sub
ljmp
bound
mov
bound
push
cmp
call
push
fists
call
mov
fwait
hlt
ds
fwait
pop
adc
rcrl
dec
and
sub
mov
mov
and
jns
out
insl
bound
and
fcoml
adc
nop
inc
jle
fdiv
or
lock
pop
test
jae
fsubs
and
mov
pop
add
stc
add
out
shlb
cmc
cmp
mov
fs
jge
into
jg
popa
mov
jno
daa
icebp
scas
fildl
ret
in
cmp
mov
jg
sahf
sbb
sub
jae
je
inc
inc
fnsave
fadd
xchg
lea
push
out
jp
in
outsb
fsubl
cmc
lahf
lcall
ds
dec
xchg
fidivrl
ljmp
jo
in
jp
out
dec
pusha
data16
dec
jmp
rcr
and
and
push
roll
cmpsb
push
pop
sbb
xor
iret
cmpsl
jb
sbb
cmp
and
mov
sbb
sub
mov
cltd
sarl
adc
js
and
mov
ss
fldcw
gs
xor
cmp
sarl
orl
or
into
inc
popf
lcall
or
sub
xor
das
mov
xchg
fisubrl
leave
mov
push
dec
sub
movsb
mov
js
in
mov
fisubrs
sbb
jns
jg
jg,pt
xor
lock
sbb
cmp
outsl
pop
mov
push
outsl
push
or
shrl
sub
psubd
das
fdivr
mov
inc
call
or
xor
test
dec
pop
sub
imul
fistps
sbb
cli
pop
xor
pop
mov
aam
push
push
xor
and
repnz
xchg
inc
scas
mov
cmp
add
mov
mov
pop
sbb
xchg
loopne
rorb
sahf
mov
cmpsb
push
pop
inc
pop
mov
dec
sahf
and
jo
inc
mov
mov
aas
rclb
xchg
repnz
inc
jns
test
imul
mov
ljmp
xor
movsl
xor
inc
xchg
lods
xor
jmp
xchg
fistl
cmp
nop
rcrb
push
cmpsl
cltd
dec
xor
xchg
add
or
fistpl
adcb
sbb
leave
mov
test
fwait
push
mov
inc
out
or
pop
in
or
shlb
dec
jmp
imul
xor
shrb
dec
mov
jmp
xchg
aas
and
xchg
test
cmp
xor
dec
and
cmp
dec
jl
loop
fwait
mov
xor
cmp
mov
mov
loopne
sti
inc
bound
enter
in
mov
call
jmp
add
jb
lret
jmp
lods
repnz
mov
jb
inc
imul
adcb
xor
scas
rolb
jne
fs
inc
add
mov
fwait
mov
dec
lret
shrb
inc
hlt
frstor
pop
iret
divb
xor
movsl
leave
dec
lret
shr
fxch
xchg
mov
pop
pop
xchg
xchg
loopne
jp
lcall
mov
xor
aaa
lret
mov
cmp
cli
aas
mov
dec
cmp
gs
addl
xor
xchg
mov
dec
push
test
adc
mov
ja
shrl
mov
fimull
sti
lret
in
addr16
fsubrl
mov
clc
xchg
mov
std
inc
call
movsl
cmpsl
scas
rclb
push
jae
gs
cmc
mul
mov
test
insl
add
call
add
mov
dec
adc
pop
rorl
sub
or
cli
push
push
fisubrs
xor
xchg
je
cs
and
std
cld
js
sub
push
js
inc
cmc
cmp
stos
xchg
out
jo
cmp
pushf
sti
mov
add
jp
sub
jecxz
cmp
sub
mov
into
xor
xchg
add
iret
popf
ja
sarl
or
cmp
sub
pop
xchg
cmpsl
mov
sahf
add
mov
mov
ret
and
vmovaps
call
or
or
test
lea
daa
bound
std
cmp
xor
pusha
decl
popf
mov
nop
cmp
fmull
lcall
mov
lods
imul
movsb
mov
jno
repz
adc
cmp
jne
lds
inc
sbb
pushf
and
out
sbb
mov
rol
adc
nop
fildll
dec
test
or
in
dec
bound
out
adc
popf
xor
adc
mov
dec
sbb
fiaddl
insl
fildl
push
add
rclb
lods
js
pop
hlt
push
call
mov
mov
jne
sbb
dec
and
fdivs
ja
pushf
mov
insl
inc
sub
cmp
lea
cmp
sub
cmp
sbb
das
xor
xchg
fucomp
int3
xchg
cmp
dec
mov
lock
ss
pop
adc
pop
sub
ret
out
push
aad
movsb
arpl
movsb
dec
addr16
mov
dec
pop
mov
mov
stos
dec
out
jno
rcl
fbstp
stos
fimuls
fistpll
lods
jecxz,pt
dec
cmp
jo
lcall
push
xchg
mov
lret
mov
pop
ljmp
inc
stos
jecxz
cmp
cmpsb
sbb
ss
cmp
jb
mov
xchg
mov
iret
sub
popf
inc
out
pop
cmp
add
push
sbb
out
jmp
sbb
pop
pop
and
xor
cwtl
clc
cmpsl
xchg
loop
leave
adc
pop
das
mov
nop
push
adc
or
lds
add
xor
lahf
mov
jmp
xor
pop
lock
arpl
xor
cmp
insb
popa
inc
mov
pop
cmpl
test
lea
popa
or
mov
push
rorl
popa
popf
test
dec
or
and
xor
aam
pop
mov
xchg
ret
movb
push
fldl
jae
shlb
dec
mov
stos
jle
in
push
add
shlb
dec
lods
and
mov
stc
in
mov
dec
sahf
pushf
mov
inc
cmpsl
or
jns
mov
outsb
xchg
rolb
mov
add
rorb
mov
sbb
gs
bt
inc
imul
ret
movsl
xchg
xchg
add
mov
xchg
jmp
push
sbb
jmp
mov
dec
les
loope
mov
adc
outsb
ss
sahf
fnstcw
rcl
sub
lods
add
fsubr
out
xor
enter
jb
sub
mov
mov
fs
add
xor
adc
jnp
mov
ja
sub
mov
jl
jmp
test
sbb
mov
cmp
jae
mov
mov
jne
pop
test
cli
loop
lret
jp
cmp
jb
shlb
ds
mov
cld
sti
fs
rcrl
inc
cmpsl
sbb
loopne
sub
mov
aas
and
and
loope
xchg
lahf
mov
mov
imulb
cs
adc
push
jns
push
loop
adc
adc
icebp
cmp
loop
dec
rorb
int3
xchg
or
push
adc
leave
sbb
pop
xchg
fcompp
adc
jbe
mov
insl
mov
sbb
sahf
push
loop
orb
push
scas
syscall
outsl
jl
mov
mov
mov
push
cmp
rolb
push
xorl
fisubl
mov
inc
pop
pop
stc
popa
add
dec
stc
push
lcall
push
ret
ret
mov
add
pop
jns
mov
xchg
xlat
pop
adc
icebp
pop
movsl
push
and
rorl
popf
xchg
mov
clc
jnp
outsb
fidivrs
push
sub
push
popa
ror
andb
mov
pop
push
test
fwait
mov
cmp
xchg
out
ds
cwtl
push
jge
push
roll
pushf
lock
insl
mov
aam
sbb
out
xchg
jnp
shlb
cmp
mov
mov
add
cli
and
push
jp
pushf
add
xor
jmp
jae
xor
gs
and
mov
test
rolb
jae
mov
in
sbb
sahf
or
fildll
cmp
divl
div
pushf
sub
push
js
mov
imul
cmpsb
mov
xor
fdivrl
add
in
repz
rolb
lea
sahf
xchg
mov
pop
data16
add
lds
pop
cmpsl
stc
loopne
jmp
jns
in
push
imul
test
push
icebp
jge
ljmp
jmp
push
push
sub
inc
pop
push
sub
inc
sbb
clc
jmp
orl
cmp
xor
xor
jno
call
push
add
fisubrl
lahf
lret
xchg
ja
pop
adc
sub
push
rolb
out
shrb
nop
push
sar
icebp
cmp
ljmp
or
push
in
adc
cmpsl
clc
adc
dec
adc
es
loope
subb
in
jge
in
jge
je
sbb
sti
movsl
adc
mov
bound
mov
je
out
inc
fdivrs
idiv
push
add
and
jl
xchg
cmpsl
sub
xlat
cmpsb
sbb
es
jns
mov
fdivs
pop
mov
pop
dec
cmpsl
addr16
lea
in
mov
sbb
stos
mov
nop
add
pop
mov
aaa
inc
dec
cwtl
push
pop
lret
lods
pop
jne
mov
push
cli
aad
lret
arpl
mov
sbb
hlt
nop
jle
outsb
scas
inc
out
xlat
mov
mov
add
add
add
ljmp
push
insb
or
inc
stc
jecxz
les
scas
lcall
sar
pop
add
ljmp
sbb
sbbl
cmp
inc
jae
xchg
adc
fimuls
stos
hlt
add
sub
jns
cmp
dec
ss
push
fdivrs
ret
sbb
into
in
je
dec
and
rolb
mov
push
orl
inc
mov
dec
add
xchg
pop
xor
xor
movsl
add
push
leave
pop
add
adc
mov
ss
dec
fnclex
sbb
enter
mov
imul
stos
in
pop
xchg
xchg
cmp
in
arpl
bound
mov
mov
push
push
push
lret
mov
pop
cmpsb
leave
rcl
js
xchg
int
mov
push
into
stos
fidivs
xor
enter
push
rorb
mov
xchg
jecxz
insl
imul
mov
adc
push
mov
push
pop
leave
mov
sub
pop
mov
out
push
arpl
loopne
dec
adc
pop
push
sub
pop
outsl
cmp
dec
pop
out
mov
inc
pop
mov
test
inc
xchg
cmp
add
aam
out
and
pusha
mov
cmp
test
or
mov
dec
daa
cld
mov
pop
or
add
je
aad
sub
add
xchg
push
and
insl
sub
dec
stos
pand
fisttps
sbb
xchg
scas
scas
xchg
xor
push
enter
hlt
test
add
adc
mov
push
add
and
mov
daa
divl
int
enter
mov
push
and
gs
mov
pop
cmp
cmp
mov
inc
sbb
inc
mov
test
cmp
stc
lahf
movsl
inc
and
inc
jge
pop
mov
mov
xchg
lret
cmp
dec
mov
stos
cwtl
mov
jle
jo
cmp
cmpsl
aas
pop
mov
jns
sub
js
cmc
xchg
sbb
out
inc
test
xor
das
sbb
call
mov
insb
mov
out
sub
iret
loope
or
add
pop
mov
jns
je
jb
or
pop
xchg
outsl
xchg
inc
mov
in
sub
int3
jne
bound
pop
push
jnp
pop
lds
aas
jnp
es
movl
lcall
aas
iret
movsb
adc
push
das
sub
insl
ljmp
xchg
std
mov
adc
xor
call
clc
enter
inc
stos
fidivrl
icebp
adc
push
push
vsubss
mov
xor
mov
fs
pop
xchg
mov
dec
xchg
mov
addr16
int3
movsl
jl
sahf
push
sbb
cmp
cmp
notb
mov
cmc
add
les
mov
cmpsl
xlat
sub
ficoml
sbb
mov
inc
dec
jbe
rorl
loope
sbb
jb
dec
imul
jae
push
setno
aam
mov
call
dec
push
jl
lods
sbb
cmp
enter
and
cld
mov
loopne
or
mov
inc
pop
outsl
pop
add
roll
push
push
fcom
mov
loop
xchg
fidivs
inc
cmp
cmp
or
pop
xchg
mov
jge
das
pop
xor
add
sub
popa
sub
mov
loopne
in
lods
mov
xchg
jp
test
nop
mov
test
sti
cs
xchg
xor
pop
xchg
js
jb
cmp
andl
loopne
xor
pop
in
or
push
add
sub
jns
mov
jge
mov
lea
xchg
nop
call
jae
xchg
sahf
sbb
std
mov
pop
out
sarl
in
pop
out
nop
mov
dec
add
add
cmp
aam
fbstp
sub
jb
xlat
jne
std
arpl
mov
lahf
sahf
pop
negl
mov
aam
xchg
out
jge
mov
sbb
add
cli
negl
mov
icebp
dec
pop
and
cmp
movsl
ficoml
outsl
jne
mov
in
ret
mov
cltd
sti
icebp
ljmp
jecxz
out
lods
sti
popa
and
aam
mov
inc
inc
pop
aam
add
orb
inc
divb
cmp
inc
ror
sub
sbb
xor
out
fistl
adc
push
sbb
loopne
sub
xlat
nop
inc
sub
bound
fdivs
sbb
and
fcompl
scas
or
inc
mov
fcmovnu
stos
lods
dec
xchg
rolb
outsb
jns
push
jp
test
jp
add
mov
mov
sti
cltd
es
mov
ficomps
jmp
outsb
enter
leave
pop
dec
cltd
and
or
add
mov
inc
or
sahf
inc
test
cmp
rcll
xor
arpl
pushf
lock
mov
mov
jg
and
nop
mov
pminsw
cld
push
xor
and
sarb
push
int
lods
pop
repnz
and
cmp
lds
sbb
es
mov
shll
jge
push
jmp
in
mov
dec
std
mov
rol
nop
add
xor
mov
call
jge
les
add
mov
imul
inc
out
xchg
mov
roll
mov
int3
gs
inc
adc
mov
scas
lods
add
in
pop
pop
xor
cmc
ret
into
pop
pop
sbb
fwait
push
rorl
lea
fdivrs
push
negb
ret
fidivl
cmp
adc
jbe
inc
mov
mov
aaa
js
adcb
cld
sbb
addr16
fimuls
cwtl
inc
push
sbb
inc
into
in
scas
fsubs
mov
jmp
mov
pop
cs
pop
ljmp
add
gs
fs
inc
mov
sub
push
push
aad
or
lea
add
cmp
insl
in
mov
stos
pop
js
mov
and
sub
hlt
push
leave
jecxz
inc
jge
xor
fdivrs
and
sub
mov
mov
shr
loop
xchg
fwait
cmp
cmp
or
sub
mov
insb
adc
mov
test
sub
adc
add
shlb
mov
lock
in
stos
mov
scas
mov
add
sbb
adc
jnp
stc
pop
mov
push
inc
fs
rcr
xor
mov
or
cltd
cwtl
xor
in
pop
imul
cmp
cpuid
jmp
lret
lds
fucomip
xchg
cmp
push
into
aas
xchg
cli
call
mov
cltd
xor
out
scas
mov
pop
pop
lods
or
add
movsb
mov
call
insb
sub
mov
add
pushf
mov
dec
mov
aam
push
mov
mov
icebp
out
enter
outsb
dec
shlb
mov
pusha
sub
push
mov
jne
cs
sbb
mov
push
out
jbe
jns
mov
gs
push
sbb
sbb
xor
stc
sub
jne
pop
aad
fdivrp
aad
ljmp
sbb
loop
push
enter
outsl
cwtl
and
enter
lods
mov
test
mov
movsl
jl
sbbl
lods
bnd
or
cmp
jle
cmpsl
mov
xchg
data16
mov
adc
movsb
cmpl
cwtl
and
js
movsl
jg
pushf
shrb
cmp
pop
cmovno
cmpsb
and
mov
sbb
cmp
add
cli
or
xchg
cmp
outsl
mov
xor
xor
jge
and
inc
and
orb
jne
and
inc
mov
clc
outsb
or
jbe
sbb
push
mov
push
jnp
aad
inc
sbbb
mov
lock
sbb
jecxz
in
sahf
add
or
mov
jb
lret
mov
cltd
jmp
cmpsb
push
movsb
push
jo
mov
pusha
daa
cmp
mov
popf
add
sbb
ret
and
shrb
fldenv
stc
cli
inc
xchg
jb
inc
inc
sbb
daa
xchg
rolb
test
imul
inc
add
popf
jmp
sahf
mov
inc
incb
add
leave
aaa
jg
sbb
mov
std
and
imul
sbb
pop
inc
lret
mov
and
insb
xchg
in
push
test
inc
xlat
xchg
pop
adc
and
mov
jbe
sbbb
cmp
popa
aad
andb
push
leave
imul
mov
or
outsl
testl
cwtl
scas
movb
pushf
test
test
into
enter
paddusb
sbb
addr16
in
dec
jno
loop
daa
xchg
sub
inc
cmp
dec
out
xor
jmp
ljmp
sbb
or
xor
pop
push
ds
or
xchg
lds
insl
jle
cmp
mov
es
fldt
roll
hlt
xchg
push
out
push
pusha
mov
sbb
pop
sti
lret
add
ss
mov
test
dec
enter
sbb
mov
sbb
xchg
fistpl
out
jne
iret
std
out
lret
or
js
mov
scas
dec
mov
push
loop
xchg
push
sub
lods
repnz
js
inc
push
int
outsl
dec
mov
push
es
lea
jb
pop
mov
add
imul
or
clc
rorb
outsb
ja
add
repnz
mov
adc
xchg
inc
add
in
mov
mov
daa
jne
fdivrl
fs
jp
pop
jbe
jge
daa
ret
push
add
pop
lods
mov
mov
cli
xchg
pop
sbb
push
or
pop
in
popf
add
popa
out
shrb
xorb
xchg
nop
dec
inc
cmpsb
mov
or
cmc
aam
sub
pop
inc
adc
xacquire
jl
cmc
stc
jge
aad
iret
lods
push
xchg
cmp
rorl
inc
call
ljmp
aaa
dec
aam
and
xchg
and
and
enter
jge
shrb
je
mov
jmp
lods
jns
sbb
dec
pop
mov
int3
int
in
jmp
mov
iret
and
pop
pop
int
fidivrs
sbb
or
sbb
shl
push
push
bound
mov
sahf
add
lret
sub
repnz
stc
mov
push
jl
sbb
clc
test
lret
cs
scas
popf
data16
aam
mov
fidivrs
cmp
jo
pop
jae
jl
je
stos
dec
aam
push
fisubl
sub
mov
lahf
pop
shl
xor
in
hlt
test
cs
rol
fdivs
adc
addr16
mov
and
fwait
shl
and
outsl
inc
scas
mov
repnz
pusha
leave
sbb
cmp
test
stos
sub
jbe
in
fsubrs
imul
adc
or
or
cmovnp
je
es
push
daa
ds
shrl
sub
loope
bound
adc
push
lret
jl
or
inc
test
movsl
add
ljmp
inc
cmp
mov
rclb
rcr
inc
mov
movsl
jnp
jnp
stos
pop
mov
es
das
jbe
scas
or
pop
and
aam
aam
pop
inc
mov
mov
jge
push
aam
mov
aam
cli
lahf
das
arpl
test
inc
out
repz
aad
mov
call
fwait
cmp
mov
inc
xor
iret
aas
aam
mov
fisttpll
mov
cmc
aaa
adc
xchg
int
push
mov
jp
outsb
jb
rclb
push
lea
aad
jno
jns
ficompl
add
push
push
scas
test
add
dec
mov
shll
jae
mov
lods
add
scas
in
jp
ss
jne
enter
in
and
mov
test
jl
inc
shll
in
jae
mov
call
mov
jne
xor
or
pushf
cwtl
movsb
mov
mov
jbe
mov
inc
mov
mov
push
dec
sub
add
in
jecxz
shlb
mov
inc
xor
ja
daa
mov
insb
call
cmp
mov
xor
xchg
mov
rcrb
dec
insl
nop
mov
sub
das
xchg
sbb
fmul
cmpsl
or
add
cmp
cmp
add
mov
mov
xchg
std
pop
stos
rorb
test
push
pop
and
pop
data16
decl
leave
xchg
outsb
test
mov
cmc
lods
xor
xchg
xorb
cmp
aaa
or
fwait
popf
jg
mov
sbb
push
or
sub
cmp
sub
jge
lcall
sbb
mov
sbbb
pop
mov
enter
add
ret
movnti
sbbb
mov
test
jg
jbe
or
fstpt
pop
pop
jno
xchg
jnp
nop
push
jl
cli
pop
out
mov
fs
out
jbe
xchg
mov
std
out
cmpsl
das
adc
xchg
mov
xchg
js
add
mov
sbb
mov
push
shlb
dec
jo
mov
cmp
or
lock
sub
cmpps
or
jno
lret
adc
xchg
fcmovnb
repz
adc
das
fisubrs
insb
adc
rcrb
orb
movsl
in
dec
stc
dec
mov
inc
or
inc
mov
insl
les
jae
xor
sti
cwtl
sub
divb
add
mov
fcomps
sub
lret
mov
adc
leave
lret
jp
in
cmpl
and
lret
mov
test
cmp
out
mov
arpl
repz
sub
pop
imull
mov
fldcw
aas
mov
ja
add
inc
imul
xchg
push
imul
or
frstor
loop
xor
cli
mov
push
push
aam
rcr
inc
xor
jne
mov
imul
hlt
popa
loopne
adc
inc
jnp
mov
mov
out
cld
push
out
fdivrl
sub
lahf
sti
inc
cmp
push
repnz
cmc
dec
or
rol
xchg
je
mov
pop
leave
stc
icebp
cmp
inc
les
mov
fildl
lahf
mov
dec
hlt
or
imul
mov
add
jecxz
xchg
mov
pop
pop
push
in
mov
adc
clc
icebp
push
inc
and
daa
int3
cmpsl
rcrl
add
sbb
jno
inc
push
decb
pop
mov
mov
sbb
and
test
cmp
addr16
scas
push
into
loop
test
iret
mov
arpl
cmc
lock
xchg
cmc
scas
dec
or
push
scas
pop
xorb
rol
pop
sti
enter
in
jp
ja
pop
lret
cmc
repz
rolb
mov
mov
jl
pusha
vaddps
push
jb
jge
adc
stos
mov
pusha
stc
sub
dec
xor
pop
shlb
inc
mov
test
gs
into
xlat
inc
scas
pop
fs
repz
push
sbb
leave
jae
mov
enter
lock
call
xor
and
ret
mov
xchg
inc
or
sub
flds
clc
in
loope
roll
jge
dec
add
adc
in
cwtl
std
loopne
notb
cmp
pop
mov
xchg
cltd
pop
outsl
outsl
or
inc
rcl
inc
push
stos
push
and
in
arpl
jle
xchg
popa
addl
nop
cmpl
adc
jo
cmp
ret
push
cli
push
int
insl
add
pusha
jnp
fbld
add
push
jns
mov
fmuls
ja
inc
xchg
push
and
dec
pop
lret
test
xlat
pop
movsl
xor
sti
xchg
pushf
jo
pop
sub
add
test
dec
pop
sbb
jecxz
mov
pop
mov
and
fists
ds
je
lods
xor
or
jmp
lea
dec
rcl
hlt
pushf
jmp
inc
add
inc
mov
mov
leave
scas
mov
sarl
xchg
mov
subb
shll
pop
fldl
push
push
lret
fimull
sub
xor
cmp
shrl
rcrl
xchg
and
xlat
out
sub
push
mov
incl
sti
or
lds
in
sub
rcrl
lret
or
add
push
mov
and
sub
add
cmpsl
aam
add
pop
xchg
push
cmc
cmpl
jl
hlt
add
mov
ds
lahf
int3
aaa
mov
mov
insb
xchg
dec
inc
dec
xchg
pop
push
std
pop
or
in
push
fwait
ret
add
adc
and
adc
mov
or
push
jge
out
jo
mov
pop
xor
sti
and
aam
or
dec
je
dec
in
xor
data16
test
orl
adc
test
cs
clc
pushf
shl
jbe
sub
test
pop
out
mov
mov
adc
dec
test
cwtl
lret
push
movsl
dec
fs
adc
rorl
xchg
arpl
xlat
clc
xor
or
mov
aam
mov
insl
int
mov
sbb
ja
adc
mov
inc
mov
pop
iret
jecxz
and
rorl
fcoml
jmp
out
dec
cmova
adc
lahf
loopne
clc
int
cli
add
out
clc
ja
mov
lods
outsl
gs
sub
xor
out
in
rol
jnp
stc
cmpsb
push
ffree
xor
ret
fwait
xchg
iret
testl
pop
jb
cmpsl
pop
add
and
mov
in
mov
bnd
js
dec
inc
mov
xchg
or
xor
xchg
and
push
sti
sahf
ljmp
fisubl
sbb
push
sbb
movsl
es
mov
loop
lods
xor
lret
jbe
mov
mov
jne
inc
test
sub
mov
fcom
sbb
push
sbb
sub
lret
popa
push
int
mov
movsb
cmpsb
cmpsl
lret
shll
hlt
daa
mov
mov
out
lahf
out
aas
stos
xor
rorl
fdiv
jmp
lcall
arpl
ljmp
sub
je
inc
iret
ljmp
mov
repz
and
inc
sub
xor
or
cmp
lock
add
shr
inc
pop
in
xchg
leave
jecxz
dec
inc
push
adc
cmp
and
mov
es
xchg
mov
lret
ficompl
jae
mov
pop
inc
fistpll
std
cmpsb
sahf
push
aad
bound
fsts
push
loope
jge
outsb
shll
pop
and
outsb
in
push
cmp
shll
and
les
sbb
repz
arpl
pop
fistps
xchg
pop
xor
mov
pop
repnz
stos
sbb
pusha
push
decl
mov
rclb
inc
jno
sub
or
sti
dec
pop
dec
popa
xor
push
mov
mov
das
out
inc
loop
mov
call
add
call
xchg
mov
pop
jecxz
push
in
lcall
sbbb
push
test
xor
mov
mov
scas
add
and
int
aaa
add
mov
push
inc
mov
xchg
pop
aam
hlt
out
fstps
adc
mov
rcl
jg
jno
and
fsub
cmp
jbe
enter
lea
data16
dec
pop
aas
mov
push
cmpsl
xchg
ss
outsl
sar
out
test
mov
sarb
cmp
out
pop
dec
dec
shrl
xchg
push
shr
out
push
loope
xor
in
dec
mov
cs
notb
adc
push
pop
shrb
dec
jmp
adc
dec
xlat
jmp
divb
xchg
negl
mov
mov
out
imul
push
push
lods
xchg
pop
rolb
xchg
inc
push
and
xor
mov
dec
jne
loop
and
add
and
dec
ss
ljmp
mov
mov
gs
jle
lea
jbe
xchg
stos
push
mov
iret
push
pop
out
std
cmpsb
shl
sti
stc
or
out
xchg
stos
cmp
and
sarl
stc
cmpsb
push
jg
dec
mov
daa
jb
pop
add
movsb
repz
jno
pusha
mov
mov
ljmp
test
ja
hlt
out
push
mov
fildl
dec
int
ljmp
in
retw
test
push
lcall
cmc
out
lret
inc
int
sbb
jbe
ret
dec
jns
data16
jle
fdivr
and
call
xor
mov
push
push
xchg
sub
imul
lcall
sub
cs
jo
std
stos
cld
xchg
stos
xor
push
and
testb
call
jnp
ret
inc
out
shll
fimuls
clc
jae
loop
divl
test
jg
pusha
pop
sahf
dec
xchg
jbe,pn
add
push
xor
adc
push
and
mov
jns
push
movsl
sbb
cmc
cmp
xchg
mov
into
adcb
rcll
cltd
pop
outsl
sbb
jecxz
test
inc
xchg
xchg
pop
or
pop
push
ret
push
mov
sub
ss
and
mov
lods
je
xchg
insl
or
xor
push
fmul
jl
xor
ret
pop
jae
loope
xor
push
push
xchg
lock
in
dec
test
pop
xchg
pop
gs
rcll
inc
lock
jecxz
jns
add
or
xlat
js
adc
sub
cli
stc
add
movups
test
cmpsl
inc
test
testl
jno
adc
scas
scas
fnstenv
pop
xor
das
or
dec
jg
mov
dec
sar
notb
jb
lret
xor
dec
pop
inc
mov
lods
sub
test
pop
sti
cltd
fwait
xchg
mov
imulb
rcrl
or
pop
or
in
fs
shlb
cmpsl
out
adc
push
pop
or
lods
gs
add
xor
jnp
enter
mov
xchg
and
andl
and
inc
xor
mov
xor
push
xchg
das
into
cmpb
xlat
or
jne
sbb
out
inc
push
les
lgs
xchg
add
movsl
push
sub
in
add
stc
jmp
fcomps
fnstsw
push
insl
ret
iret
xor
jg
add
push
into
mov
xor
mov
xchg
and
or
lret
stc
movsb
inc
add
nop
icebp
sub
mov
xor
mov
das
xchg
sub
sub
stos
dec
xor
mov
mov
jns
sub
xor
fdivl
xchg
lock
daa
xchg
mov
scas
aam
shll
lcall
mov
dec
fsubrp
mov
sbb
ja
hlt
cmp
cmpsb
xchg
add
cmp
xchg
lds
lock
xchg
xchg
clc
mov
or
popf
rcrl
lods
sbb
mov
or
inc
fdivs
add
test
adc
lcall
inc
mov
ss
repz
dec
or
cli
aas
mov
stc
mov
jo
mov
pop
decl
mov
adc
jno
xchg
xchg
rclb
call
ljmp
incl
lahf
mov
std
cmpsl
in
movsb
add
cmc
shr
insb
cmp
scas
shll
push
dec
in
adc
dec
xor
pop
jmp
iret
sub
xchg
mov
roll
add
sub
push
inc
aaa
ds
iret
aaa
pop
sbb
jnp
and
in
ljmp
jp
mov
dec
pushf
push
or
lods
and
xchg
out
sbb
nop
inc
or
pop
cmp
clc
es
rcrb
cmovo
nop
ja
pop
popa
push
call
cpuid
out
adc
popf
ret
xchg
cmpsl
jg
adc
movsb
testl
in
xor
dec
and
push
or
icebp
sub
into
int
shl
mov
and
ds
mov
push
bound
xchg
adc
dec
or
xor
cmp
xor
and
xchg
jnp
add
addr16
in
cmc
test
dec
arpl
mov
sbb
flds
or
push
lods
adc
mov
dec
push
xchg
xor
jb
negl
lods
lods
bound
scas
push
sarb
out
xchg
xchg
lcall
push
out
mov
and
popf
imul
shrl
mov
xor
dec
stc
mov
dec
sbb
sub
mov
scas
sub
lods
arpl
or
push
sti
xchg
shlb
enter
out
loopne
icebp
jmp
push
xadd
rcrl
inc
insl
loope
inc
pop
mov
mov
sub
enter
daa
in
push
dec
inc
or
pop
aaa
cmp
std
int3
std
in
pushf
sub
andps
test
jecxz
mov
outsl
stc
pop
rorb
or
imul
sarl
push
mov
cmp
jbe
test
out
add
cs
jp
push
lret
push
xchg
sti
jl
push
mov
les
clc
lods
cli
sub
int3
rolb
adc
push
inc
jno
dec
cmpsb
pop
adc
jae
adc
pop
clc
add
sti
sub
mov
add
mov
mov
sbb
gs
fstpt
pop
jl
leave
ret
loop
loop
nop
icebp
cltd
decb
ja
out
fldt
fmul
adc
cmp
rcll
xchg
and
mov
fdivr
cmp
stos
arpl
in
or
aad
out
sub
les
ja
testl
call
enter
and
pop
inc
sbb
xor
mov
cwtl
jmp
shrl
xchg
xor
mov
call
xchg
xor
repz
or
call
push
ljmp
hlt
sahf
lods
daa
inc
movsb
das
push
fcomp
cmp
mov
movsl
add
lahf
cmpsl
push
stc
jg
xchg
pop
addr16
fidivl
push
bound
jecxz
cmp
scas
call
or
lcall
jmp
popf
cmpsl
lahf
in
lea
mov
sbb
and
jne
jb
mov
fldl
adc
int
jns
loope
lock
in
pop
int
in
loopne
mov
mov
add
mov
mov
adc
jne
js
inc
mov
cli
shlb
rolb
dec
leave
pop
sub
stos
mov
mov
inc
add
and
push
pop
lock
arpl
mov
popl
jle
sbb
int3
dec
jecxz
sub
mul
jbe
jnp
mov
jbe
in
dec
mov
adc
stos
inc
pushf
and
xor
sub
movsl
push
mov
dec
sub
sti
adc
sti
mov
ss
adc
jno
push
xor
daa
and
popf
arpl
dec
clc
cld
imul
mov
lock
adcb
out
adc
and
add
mov
mov
loopne
jmp
loope
insb
jns
mov
push
stos
jp
cltd
int
outsl
inc
fistps
adc
ljmp
data16
stc
push
mov
in
sbbl
aam
add
jmp
dec
daa
aad
arpl
sbb
cmpb
push
fcomi
mov
repnz
adc
inc
xor
xor
mov
mov
sbb
mov
adc
mov
pop
dec
mov
movsb
push
aam
mov
sub
mov
add
jne
mov
lret
mov
add
in
inc
int3
mov
adc
push
lret
mov
push
rclb
add
dec
push
cmp
leave
dec
es
and
out
add
out
sbb
lret
mov
cmp
jae
sub
daa
pop
movsl
push
scas
sub
sti
inc
pushf
jnp
fstp
xchg
push
xor
mov
sti
inc
mov
in
es
in
mov
pop
sarb
sbbl
test
out
test
mov
adc
aas
movsl
mov
xchg
rclb
cmp
subb
in
aad
cmc
cwtl
jb
in
add
inc
mov
scas
fidivrl
inc
sub
adc
or
mov
mov
jl
idivb
fadd
mov
jne
cmp
mov
bound
hlt
push
imul
pop
outsb
mov
sub
pop
pop
sub
xchg
sarb
xchg
outsl
cmpsl
enter
rcrb
notb
gs
in
ficomps
mov
push
mov
repnz
das
adc
stos
add
cmp
fstp
xchg
js
mov
je
dec
xchg
js
inc
out
inc
mov
sub
xchg
and
xor
adc
jae
push
sbb
add
mov
jbe
jp
mov
dec
add
add
test
mov
mov
mov
mov
jp
lcall
les
stc
adc
push
dec
unpcklps
xchg
mov
loopne
sbb
addr16
mov
outsb
leave
mov
and
mov
push
in
mov
jl
popf
testb
cmp
cmpsb
sub
sub
mov
jbe
rcll
dec
or
icebp
pop
mov
mov
push
cmp
movsl
bound
popf
dec
mov
dec
or
pop
lret
pop
mov
push
ja
or
mov
jp
pop
test
mov
push
arpl
popf
push
das
push
lods
mov
or
mov
mov
jo
sub
mov
and
dec
sub
imul
scas
fisttpl
mov
sub
sub
ljmp
cmpsl
mov
lds
test
add
nop
push
insb
in
cmpsl
xchg
pop
dec
icebp
rolb
rorl
test
inc
ret
mov
addr16
push
xchg
movsb
stos
push
mov
mov
test
stc
iret
jnp
xor
sbb
cmp
ds
je
jmp
xchg
or
fstps
cmpsb
jge
les
repnz
lahf
sub
cmp
cltd
or
dec
inc
insl
fisubrs
mov
pop
lahf
xor
xchg
clc
jmp
mov
xor
cmp
cmp
fldl
in
push
lcall
xchg
push
mov
imul
xchg
push
aad
stos
inc
add
imul
mov
push
loope
push
pop
daa
xor
in
add
cmpsw
push
mov
jb
or
insb
inc
cmpsb
add
jb
mov
rcl
push
into
rcr
push
pop
je
in
mov
fwait
not
jno
adc
out
cmp
sbb
push
jne
incl
sub
pop
mov
lock
or
iret
lds
jns
insl
mov
stc
add
mov
cmc
loope
in
scas
jmp
jb
sub
fs
push
lret
push
mov
mov
sub
call
arpl
mov
rcrb
jb
int3
aad
inc
add
sub
mov
pushf
cmp
lods
sub
push
repz
and
adc
sar
mov
movsl
adcb
push
jb
outsb
sbb
pop
ret
mov
ret
fwait
lea
addl
mov
cli
test
pusha
pop
pop
dec
dec
incl
mov
dec
nop
fmul
es
xorl
aad
pop
adc
pop
imul
cld
cmpsl
leave
push
sub
or
or
mov
dec
mov
clc
es
cmp
jle
subb
mov
subb
mov
xchg
std
ss
scas
sub
fdivrl
mov
cmp
mov
jne
repnz
mov
stc
in
js
lods
cmp
xchg
adc
mov
je
or
add
call
outsl
cmc
sarb
sahf
lret
out
pop
in
push
pop
les
pop
cltd
ljmp
hlt
push
mov
icebp
cltd
jge
jecxz
mov
lea
sbb
pushf
xorl
pop
inc
cli
add
xchg
pusha
hlt
loope
mov
nop
mov
xchg
repz
push
mov
lock
cli
xchg
inc
ja
mov
rorb
mov
cmc
adc
xchg
sahf
out
into
jo
add
sub
loop,pt
stos
push
fwait
and
mov
mov
lret
movsl
mov
sbb
dec
inc
mov
cmpsb
insl
mov
adc
sarl
jle
fsts
jo
cmpsb
mov
jne
push
lods
cmpb
and
std
int3
and
adc
mov
mov
mov
dec
insl
mov
fsqrt
mov
mov
call
jecxz
adc
dec
cltd
shr
xchg
test
jb
push
shr
shrl
mov
je
sti
jbe
push
push
jne
xor
xor
rcrl
loope
ret
xchg
jle
addr16
aas
int
mov
arpl
test
or
movswl
inc
or
mov
xchg
cmp
add
pop
jns
or
outsl
inc
ret
push
push
mov
mov
test
insb
fcoml
dec
in
xchg
push
pop
pop
aam
push
dec
icebp
popa
fwait
and
lcall
repz
aaa
stos
xchg
pop
push
push
mov
mov
pusha
xor
subb
aas
push
adc
push
shlb
arpl
and
cmpsb
push
cmp
inc
jl
jmp
pusha
and
and
ret
mov
test
mov
cs
inc
nop
repnz
inc
cs
sub
loope
repnz
xlat
in
bound
pop
cmp
scas
or
divb
push
jl
sbb
sti
or
xchg
and
xor
xor
mov
pop
sbb
adc
pushf
sbb
push
jmp
scas
lods
mov
jg
sbb
adc
outsl
jmp
lock
sahf
sbb
test
mov
mov
mov
dec
mov
ds
cmpb
jno
mov
stos
pushf
repz
xchg
int3
stos
loopne
fdivrs
mov
pop
xchg
pop
cmc
enter
sahf
std
mov
inc
sub
mov
ror
jmp
cwtl
addr16
les
outsl
es
rolb
sub
adc
ret
jg
push
jns
add
into
fcompl
pop
mov
jbe
jns
mov
ss
ret
leave
push
das
popf
mov
cmp
push
xchg
or
movsl
mov
call
pop
inc
mov
test
or
xor
ss
test
roll
out
lret
and
mov
out
xchg
test
stc
inc
sbb
std
xchg
mov
sub
dec
pop
mov
ja
sbb
movsb
out
sub
mov
ja
sub
jecxz
or
addr16
out
enter
inc
adc
fldenv
ret
xchg
lea
outsb
and
cmpb
jmp
aaa
aam
mov
dec
arpl
pop
scas
mov
adc
ret
mov
add
or
cmpsl
mov
push
in
mov
setno
scas
fucomp
or
push
call
sub
xchg
mov
stc
addl
into
cld
leave
cltd
fsub
jno
mov
pop
shld
mov
push
adc
addr16
cmp
push
daa
or
stos
in
dec
std
aam
aaa
movsl
mov
jbe
lea
mov
test
cli
xchg
dec
mov
nop
adc
jmp
mov
and
xor
sar
jb
data16
adc
xor
jmp
dec
cmpsl
cmp
mov
ror
and
iret
enter
enter
sub
imul
mov
mov
lcall
mov
sarl
sbb
adc
test
inc
lret
mov
dec
inc
es
pop
xchg
xchg
out
inc
nop
cmpsl
mov
mov
sbb
sub
sarl
test
xchg
test
mov
pop
loop
jne
idivl
je
sbb
jge
jmp
hlt
or
out
test
cld
jmp
inc
jae
lcall
ljmp
icebp
rolb
dec
decb
cmp
mov
mov
sub
andb
mov
jmp
pop
sbb
cmp
insb
adc
and
add
mov
push
cmp
mov
cs
cmpsl
je
add
jns
cmpb
cmp
and
cmp
loopne
inc
sub
jle
push
test
mov
sub
mov
inc
out
push
pop
ret
test
aam
loope
mov
adc
push
aad
sub
js
fiadds
inc
xor
ja
test
fidivs
loope
dec
das
stos
or
imul
lahf
movsl
or
rorb
stos
pop
push
negl
xchg
loopne
mov
cwtl
adc
shrl
jg
unpcklps
xchg
pop
sub
pop
jno
and
imul
rcrl
mov
adc
icebp
mov
mov
pop
xor
sub
pop
push
cmp
fstl
cmp
cmpsl
daa
pop
sub
test
fnstenv
xchg
iret
adc
js
jnp
lods
test
mov
in
dec
jne
jmp
dec
out
out
lock
int
sub
movsl
jae
cmp
pop
cmp
sarb
adc
fsubl
dec
inc
xor
jne
xchg
jmp
mull
inc
je
je
data16
push
xor
mov
loop
stos
in
repnz
and
loope
adc
push
xchg
mov
fcomps
lds
inc
aas
mov
and
fsts
cmp
cli
add
sbb
lret
xchg
stos
bound
sbb
test
jnp
cli
jns
adc
outsl
insb
mov
ds
arpl
jbe
xor
xchg
outsl
fmuls
je
into
jns
out
jnp
push
inc
popl
xchg
cmc
push
movsb
shrl
xor
add
outsl
insl
pusha
cmp
inc
jp
outsb
mov
or
div
add
fidivrs
test
cwtl
mov
xor
push
rolb
not
mov
test
mov
icebp
subl
inc
out
outsl
sub
cltd
std
and
aaa
hlt
cltd
cmp
les
and
sti
adc
or
push
mov
js
insb
xchg
arpl
mov
sbb
pop
aam
pop
mov
popf
push
leave
and
in
mov
xor
enter
in
aaa
lds
cmp
push
xchg
mov
daa
repz
pop
popa
xor
out
imul
out
add
xor
xchg
xor
sbb
sbb
pop
sbb
mov
mov
add
mov
rclb
mov
mov
insb
push
pslld
icebp
mov
iret
cmpsb
hlt
ficompl
dec
mov
dec
and
pop
dec
adc
sbb
rclb
push
pop
sub
jp
mov
lods
sbb
mov
mov
punpcklwd
sub
ljmp
mov
movsl
push
pop
xor
mov
mov
cmp
lds
xchg
fsubs
cmpsb
push
ljmp
fidivrl
fldl
cmp
hlt
ds
mov
and
sub
add
mov
jo
out
push
sub
mov
jne
fwait
xchg
stos
xor
stos
rclb
loop
fimuls
sbb
mov
mov
ret
addr16
fcom
pop
jbe
call
shll
add
cmp
or
mov
xchg
addl
xlat
sub
mov
push
popf
xchg
mov
cli
iret
nop
roll
mov
insb
std
popf
adc
insb
jnp
sub
xchg
shlb
jb
inc
cmc
xor
stos
movb
repz
inc
pop
xchg
mov
inc
jnp
test
dec
mov
das
or
mov
ds
jmp
xchg
loop
mov
rclb
cwtl
fldenv
lock
test
dec
add
jbe
sarl
add
lret
mov
mov
sti
push
imul
jg
jp
movsbl
add
pop
cmp
mov
jle
cmc
dec
lock
std
aad
fcmovb
xchg
ja
lahf
sahf
xor
in
dec
insl
mov
in
div
pop
pusha
inc
mov
mov
sbb
mov
cmp
push
stos
es
pushf
pop
fstpl
daa
enter
ret
mov
and
dec
fiaddl
cmp
push
and
mov
mov
push
std
loopne
dec
mov
xchg
jl
lock
in
xor
ja
mov
cmp
aaa
xlat
cmp
pop
jecxz
sbb
lret
jecxz
inc
xchg
mov
dec
sub
sbb
movsl
insb
mov
seta
sbb
shlb
incl
cltd
jl
or
shrl
imul
or
in
add
mov
out
push
or
insl
sub
push
lret
sbb
mov
push
pop
inc
sub
push
mov
mov
mov
cmp
sub
adc
lcall
test
mov
sbb
out
ja
lods
rolb
push
popf
adc
inc
popf
lret
bound
inc
mov
add
out
ret
in
adc
mov
int
aad
repnz
test
or
imul
enter
cltd
call
mov
fnstcw
or
loope
stc
leave
loop
inc
mov
mov
adc
shrb
mov
out
addr16
xchg
push
push
xlat
or
shr
jno
or
or
test
and
push
jecxz
lret
mov
pop
dec
adc
lds
pop
add
or
mov
mov
or
dec
dec
lea
ds
mov
repz
iret
lods
ja
mov
adc
xchg
push
adc
call
lahf
pop
mov
dec
call
fs
int3
in
rclw
aad
fwait
test
imul
inc
stos
mov
faddl
imul
test
std
pop
lcall
mov
movzbl
lret
mov
cmp
and
ljmp
lods
inc
mov
imul
jmp
testl
push
xor
push
fistpl
pop
inc
cltd
ds
insb
jg
addb
fadds
jae
test
sbb
push
cmp
das
sub
push
jbe
dec
stos
addr16
or
loop
or
inc
sub
inc
push
mov
outsl
stc
cltd
loope
testw
lret
scas
pushf
mov
repnz
std
xor
sub
jecxz
adc
dec
mov
xchg
ds
cmc
mov
fisubrl
test
mov
out
jmp
xor
jp
xchg
movsb
mov
jno
js
out
lods
testb
sahf
sbbl
fwait
ss
xor
std
popf
dec
ja
je
ds
scas
insl
pop
mov
push
mov
or
repz
jg
mov
jp
pop
outsl
pavgb
sub
or
mov
cvtdq2ps
mov
add
test
in
push
jne
insb
stc
push
add
push
mov
push
sahf
or
pusha
xor
inc
xor
dec
pushf
lds
test
adc
mov
inc
out
out
cltd
subl
inc
jecxz
test
adc
add
or
xor
sahf
sub
pop
imul
mov
mov
lock
js
call
xchg
ret
call
ss
or
aaa
lret
insl
push
mov
and
xor
mov
aaa
push
dec
add
inc
mov
mov
pop
adc
ds
cs
sbb
out
inc
xchg
mov
outsl
sbb
out
mov
gs
cmpsl
or
test
ljmp
dec
mov
add
fisubs
push
cwtl
cmp
cwtl
cltd
jl
push
mov
push
pop
add
in
out
cmp
jbe
cmp
mov
pushl
test
adc
in
mov
dec
cmp
enter
lock
mov
or
sub
cli
add
dec
adc
dec
stc
das
xlat
ja
adc
or
inc
push
jnp
test
sub
mov
push
imul
iret
dec
pop
sbb
scas
inc
imull
dec
adc
cmp
mov
jecxz
mov
cmc
ret
data16
ret
data16
daa
cmp
sub
cmp
xor
popa
push
push
in
in
fmull
mov
lahf
mov
adc
adc
mov
jg
sub
sub
adc
out
aas
lcall
das
adc
or
sub
jge
pop
divl
lea
pop
mov
jg
jmp
sbb
fidivs
cmp
dec
clc
enter
addl
popa
outsb
enter
pop
and
shrl
loop
jne
add
mov
and
mov
mov
sub
int
mov
in
out
int
push
push
add
rcr
push
jl
adc
xchg
in
out
cmp
pop
mov
add
fwait
fs
mov
sbb
cli
into
xor
ret
or
cmp
cmpsl
jb
cmpsb
imul
mov
popf
xchg
cmpsb
pusha
jge
xchg
jne
or
add
push
push
je
lcall
dec
in
mov
push
mov
pop
or
mov
push
cmpsl
pop
movsb
lods
lock
sbb
pop
adc
das
icebp
mov
bound
cmpsb
bound
adc
cld
mov
mov
popf
aaa
ds
shl
xor
or
pop
xor
mov
outsl
orl
cmpsl
and
push
push
mov
add
cwtl
dec
out
sbb
jge
jb
call
loopne
sahf
xchg
pop
or
sbb
in
mov
cmpsl
std
stos
loopne
or
flds
fnstenv
xchg
arpl
popa
mov
cmpsl
jecxz
jbe
push
push
cwtl
push
sub
jge
out
xchg
orl
data16
jmp
test
hlt
hlt
jne
scas
sub
jne
int3
push
stos
jae
outsl
stos
lea
cmpsb
cmp
or
pop
mov
cld
add
xchg
das
dec
lods
dec
add
and
fwait
jo
inc
xor
mull
xchg
add
lahf
arpl
xchg
dec
xchg
dec
mov
movsl
insl
xrelease
pushf
mov
fs
andb
fsubrs
xor
xchg
pop
pop
lahf
movl
ja
mov
cmp
xchg
aam
arpl
imul
or
jecxz
mov
add
xchg
jns
out
enter
mov
xor
movsl
psubusb
xorps
mov
imul
jb
fsubl
mov
sbb
mov
dec
lock
int
xor
inc
fsubrs
orb
inc
jle
ret
fsts
icebp
push
cmpsl
lods
into
fldt
orb
jge
mov
aaa
int
popa
add
mov
test
lea
sub
adc
sahf
aaa
cmpsb
and
test
call
movsl
jp
mov
into
adc
push
jl
test
std
pop
movl
pop
add
push
icebp
es
decb
in
cmp
scas
xor
dec
jmp
push
pop
jnp
inc
push
lcall
loop
mov
xor
mov
jp
mov
xchg
sbb
mov
jo
cwtl
lcall
or
push
and
add
sarb
xchg
fidivrl
xchg
dec
push
cmp
xor
sbb
cmp
dec
std
scas
outsb
aaa
out
test
lods
xchg
shr
xor
out
mov
out
mov
xchg
aad
and
pushf
cmpsb
lods
fldcw
jp
nop
icebp
push
sub
insb
push
sarl
out
sbb
dec
xchg
mov
mov
pushf
or
and
push
sub
and
dec
int
sub
inc
call
aas
test
xor
mov
cs
jmp
jl
xchg
xchg
or
push
cmpsb
test
movsl
dec
xchg
add
les
shlb
or
repz
cmp
mov
test
rolb
add
hlt
data16
daa
xchg
repnz
test
xor
or
or
mov
push
xchg
jg
repz
stos
and
pop
sbb
dec
fs
dec
das
inc
ja
add
mov
sub
xchg
clc
xor
push
dec
daa
adc
xchg
cmc
movsb
adc
inc
mov
dec
adc
mov
xor
dec
repz
push
pop
outsl
jecxz
pop
jg
aas
and
mov
std
jmp
clc
mov
lock
sti
movl
stos
or
shrb
cmpsb
xchg
mov
test
ret
pop
sahf
mov
add
pushf
pop
fsubrs
fimull
dec
jb
adc
les
pop
cs
movsl
mov
fcomps
or
lcall
push
dec
aad
popa
add
cmc
pop
xchg
addr16
mov
pushf
push
jp
cmp
inc
push
arpl
dec
pop
aaa
jecxz
mov
jl
lcall
or
xchg
je
shrl
mov
mov
inc
cmpsb
out
cmp
out
outsb
pop
push
mov
movsb
ret
mov
in
and
leave
lock
mov
cltd
sbb
sub
pushf
pop
push
stos
adc
loopne
dec
insb
mov
jmp
pop
and
int3
jecxz
outsb
or
stc
mov
stos
iret
sub
jne
mov
jnp
dec
dec
outsl
pop
jne
cmp
push
je,pt
jae
adc
or
mov
dec
cmp
and
adc
ss
sbb
das
in
mov
sub
pop
cmp
mov
cwtl
mov
and
xor
dec
sub
lods
cmpl
push
sbb
enter
push
dec
mov
das
lahf
in
call
lahf
mov
repnz
add
xchg
adc
shll
pop
mov
call
movsb
sbb
test
push
movsb
sub
shlb
dec
pop
jno
sbbl
pop
call
arpl
insl
push
xor
aaa
push
mov
push
xor
dec
jo
in
cmp
into
test
in
push
repz
push
fdivrl
dec
daa
inc
mov
or
dec
add
cmpsl
mov
push
dec
insb
and
fmull
jno
jo
das
push
mov
xlat
add
and
std
cmp
cld
aad
pop
xlat
cld
sub
xor
add
pop
pop
jnp
mov
mov
and
test
inc
je
inc
cmp
pop
ds
or
fists
push
and
pop
push
jno
pushf
divb
lcall
stos
nop
dec
out
cmc
push
jo
push
add
stc
or
mov
daa
gs
aaa
ret
call
dec
icebp
add
cmp
daa
jp
xchg
inc
sbb
mov
lds
mov
jl
and
hlt
xlat
test
xchg
or
bnd
or
push
dec
mov
inc
rorb
iret
outsb
sahf
fisttpll
fisttps
fidivrs
xchg
cmp
xchg
pop
sbb
mov
idivb
jae
nop
sbb
dec
or
mov
repnz
sub
jp
adc
mov
cmp
dec
xchg
into
sbb
in
jle
mov
or
out
aad
jp
pop
sti
and
xchg
adc
pop
adc
mov
push
add
lods
scas
xchg
outsl
popf
out
push
popf
cmpb
push
push
in
mov
rolb
or
in
pop
in
jns
jb
jl
sti
fimuls
or
imul
add
dec
outsb
ret
xchg
insl
fdivrs
sbb
mov
jb
mov
dec
xor
cmp
sub
cmp
popa
out
das
jp
pusha
or
mov
aaa
cmpsb
imul
adc
lahf
push
fidivl
push
cld
cmp
jne
enter
out
add
pop
aam
sarb
push
mov
cmp
inc
push
or
jne
in
inc
fildl
shr
mov
xchg
mov
js
xor
jecxz
lretw
push
mov
mov
adc
xor
repz
adc
pop
mov
outsl
out
xchg
in
sub
pop
es
sub
mov
or
sbb
insb
inc
sub
sub
sbb
mov
dec
in
mull
mov
je
or
add
aaa
popf
out
mov
jbe
lea
jae
stc
inc
nop
xchg
jbe
mov
cmc
cmp
cmc
popf
pop
cmp
pop
test
jmp
jae
push
sbb
mov
dec
int3
cmp
and
fs
push
hlt
mov
rorb
div
hlt
movsl
aas
shrl
xchg
loope
fwait
sbb
rclb
shll
test
xor
int
lock
in
stc
xchg
or
out
clc
sub
jle
push
jp
pop
pop
loop
cmc
repnz
dec
scas
jo
lods
cmp
aam
cmp
leave
repz
lds
fimull
xor
lea
movsl
pop
push
popf
hlt
gs
testb
and
in
pop
or
push
js
mov
dec
xchg
dec
insl
sub
jae
jbe
jb
shll
mov
jle
fs
jnp
fimuls
add
ljmp
sti
popf
cmp
mov
fcomp
mull
jle
jb
repz
loope
shl
shl
ss
pop
movsl
test
xlat
mov
lcall
lock
and
imul
mov
cs
movsl
sbb
sbb
test
out
push
sub
rcll
push
pop
pop
les
in
xchg
xchg
pop
cmp
push
ss
xchg
dec
loope
pushf
pop
ret
adc
xor
lcall
sbb
movsl
ret
sub
adc
ds
mov
sbb
and
mov
loopne
and
ror
rolb
mov
test
cwtl
push
dec
pushf
lret
test
test
jl
jnp
pop
sbb
pop
jg
ret
add
adc
repz
push
lea
dec
shll
int3
xlat
mov
jmp
and
mov
mov
push
push
pusha
mov
imul
dec
setb
loop
test
and
iret
ret
fldcw
jae
sbb
and
or
fs
cmc
sar
and
lods
pop
scas
mov
movsl
mov
mov
inc
movb
mov
dec
stos
int
lods
fwait
adc
dec
inc
fsubs
sub
out
mov
sbb
inc
sbb
daa
mov
or
sub
frstor
pusha
repz
dec
cli
dec
and
in
aas
push
fistl
cmp
ja
imul
shlb
jns
jecxz
sahf
xchg
imul
negl
stos
adc
lock
stos
movsb
xor
mov
xor
jp
fs
adc
les
outsb
xadd
sbb
out
adc
fs
stc
mov
push
lods
sub
cmpsl
les
lcall
insl
xchg
loopne
mov
xchg
dec
sub
adc
xlat
xchg
mov
sub
push
imul
xchg
ret
pushf
sub
punpckhwd
cmp
push
jmp
xchg
sub
lock
ja
mov
sub
inc
xlat
mulps
xchg
push
cwtl
add
add
popa
mov
clc
or
xchg
bound
jle
xchg
push
add
lret
add
bound
loope
push
negl
fdiv
or
mulb
pop
mov
imul
cmpsl
cltd
dec
subl
xor
fs
lock
cli
or
fbld
xor
mov
xor
jnp
out
sub
sbb
cmp
movaps
scas
and
call
sbb
and
push
and
push
or
mov
push
rcll
lret
sbb
add
mov
push
andl
ss
cli
mov
xchg
sbb
icebp
dec
mov
cmp
push
push
pop
mov
inc
repnz
js
test
or
imul
out
xchg
leave
in
mov
mulb
jl
pop
mov
push
jns
or
cld
and
movsl
icebp
jle
push
jne
mov
pop
inc
mov
mov
mov
or
add
ljmp
bound
or
inc
dec
adc
imul
lods
stos
lahf
sub
sbbb
lods
or
es
std
cli
fbstp
outsb
in
aaa
push
inc
mov
adc
mov
es
inc
js
sbb
orb
jmp
or
add
call
sahf
jl
add
cmp
mov
jle
mov
xchg
xor
cli
repz
icebp
stc
and
out
gs
mov
sub
jle
popf
add
stos
ds
movsb
adc
mov
ret
or
lock
movl
out
fneni(8087
push
add
cmp
jmp
stos
test
test
inc
fwait
and
shrl
sahf
sub
mov
pop
sahf
jmp
daa
out
sbb
ret
xor
icebp
cwtl
fldenv
pop
sti
xor
dec
dec
imul
and
jmp
mov
gs
or
jne
cmpsl
push
sahf
xchg
and
out
das
mov
les
loope
sbb
sub
jp
sbb
movsb
icebp
clc
scas
adc
cld
lahf
or
sbb
pop
push
xchg
cwtl
adc
adc
jno
out
add
into
adc
fstps
jns
pop
stos
mov
pop
sub
xchg
push
adc
push
jo
mov
clc
mov
cmp
or
pusha
push
push
imul
cmpsb
repnz
jg
div
xor
or
sbb
clc
lea
decb
mov
ret
shl
clc
jmp
add
push
adc
push
out
xor
mov
fidivs
add
in
fscale
je
add
les
push
arpl
addb
mov
fwait
jl
inc
lock
push
icebp
movsb
in
jnp
adc
xor
pop
rcrb
outsb
mov
xlat
imul
add
xchg
subl
jmp
daa
fadds
or
inc
jp
pusha
cmp
push
movsb
push
xor
data16
xor
xchg
cmp
mov
lods
jbe
mov
sbb
xchg
hlt
iret
mov
xchg
out
shll
sbb
mov
mov
in
dec
enter
inc
fmul
movsl
shrb
dec
xor
imul
imul
rolb
test
insl
sbb
xor
push
inc
cmp
dec
push
fprem1
mov
and
cmp
das
ja
mov
outsl
popf
cmovns
loop
jle
lods
out
push
mov
setae
adc
xchg
add
loop
filds
xor
inc
pushf
decl
lea
xor
outsl
mov
add
lea
adc
cmp
and
or
xor
mov
inc
or
fisttpll
insl
movsl
push
sbb
mov
out
lret
mov
cwtl
lods
sub
jl
lock
in
mov
dec
addr16
loop
jae
xor
or
out
push
dec
rcrb
and
inc
addr16
xor
and
mov
shl
xchg
addr16
andl
sbb
pop
push
xor
iret
sbb
fs
arpl
pop
lods
mov
lods
adc
test
inc
outsb
mov
or
sub
mov
jnp
xchg
jg
cmp
xchg
cmpsb
les
rcll
mov
sbb
jb
mov
lcall
dec
dec
cmp
shr
and
iret
mov
mov
lret
incb
loopne
add
push
push
ss
je
add
jmp
cmpb
xchg
push
jp
stos
jp
or
jo
jecxz
ljmp
stc
jmp
cs
outsl
xor
push
pop
lock
dec
scas
mov
pop
mov
mov
sub
mov
xor
fdivs
sub
sbb
aad
ret
inc
sub
aad
sahf
pop
jecxz
imul
data16
jnp
lock
inc
aam
cmc
jmp
lods
push
faddp
push
sbb
gs
adc
decl
or
inc
hlt
test
cld
aaa
add
jo
mov
aam
outsb
jno
in
and
dec
and
jl
jp
jl
push
fildll
adcb
loope
add
cmc
and
jle
repz
gs
fwait
xchg
add
cmpsb
mov
enter
pushf
repz
insl
lods
in
incb
in
sub
mov
xor
push
sbb
or
mov
cvtpi2ps
iret
js
inc
subb
mov
push
mov
adc
hlt
add
lret
inc
icebp
fdivl
pop
imul
fcmovnu
mov
add
cmpsb
lods
divb
mov
adc
mov
push
ret
push
int3
cli
shlb
fisttpll
adc
sub
jae
ljmp
xchg
in
test
pop
inc
mov
jnp
popa
lods
push
adc
cmp
cld
sub
dec
pop
sahf
sarl
ljmp
pop
test
sub
adc
test
test
or
cmp
cmpsb
push
popf
jle
or
inc
ja
dec
pushf
aas
cmp
xchg
fldt
cli
ljmp
inc
jmp
and
xchg
loopne
xchg
sbb
lods
cld
enter
sbb
mov
mov
movsb
jl
fistl
loopne
jl
sub
fwait
int
fistpll
inc
add
mov
cwtl
stos
push
enter
aam
inc
xor
pop
sub
lcall
es
mov
fildl
push
jl
xchg
push
dec
mov
rclb
mov
sbb
divb
add
cmp
movl
mov
test
pushw
js
xorl
in
jne
or
test
idiv
dec
push
sti
mov
lods
leave
popf
sbb
or
push
adc
sbb
stos
inc
jo
shll
fwait
cmp
cmp
xchg
adc
scas
jmp
into
and
mov
sbb
popl
pop
dec
cmp
out
stos
fs
cmc
ret
push
mov
xchg
ror
movsb
mov
push
pop
adc
xor
shl
stc
mov
or
lcall
ds
je
jb
sub
xchg
pop
call
scas
pop
push
cs
sub
push
lret
test
push
inc
push
add
jo
dec
mov
andb
test
iret
pop
jg
sub
cmp
mov
sbb
inc
cmp
xchg
outsb
ljmp
test
call
stc
mov
pop
shr
and
ret
jno
xchg
fistpll
sub
dec
mov
jle
push
mov
hlt
and
test
enter
jmp
adc
imul
xor
cli
call
xor
or
xchg
scas
les
ud0
inc
int3
pop
push
int
dec
test
and
jnp
loope
out
into
shrl
add
or
xchg
mov
in
sbb
int3
mov
fsubrl
ja
mov
out
mov
shlb
jnp
cwtl
lahf
push
fs
adc
adc
rorl
and
inc
mov
icebp
xchg
jns
movsb
dec
stos
fistpl
aam
into
das
push
xor
dec
jl
sub
incl
lea
and
test
popf
repz
push
add
dec
jae
in
mov
data16
outsb
cmp
js
mov
sbb
mov
ficompl
mov
jae
mov
loope
lea
mov
ss
or
imul
repnz
push
push
aaa
icebp
push
dec
in
adc
test
shlb
rcrb
push
jecxz
arpl
es
sbb
jecxz
fcoml
sbb
mov
inc
and
ficoms
div
add
xchg
shll
nop
test
out
add
out
cld
dec
lods
xor
push
jp
fidivrl
xchg
das
add
jle
push
xor
jecxz
lds
push
jne
test
test
mov
clc
into
push
aaa
push
mov
test
jno
cmp
sub
loopne
inc
mov
lods
and
imulb
pushf
mov
xchg
dec
mov
cld
inc
jne
insl
jnp
cltd
sub
mov
add
adc
mov
cmp
movsl
cmp
cmp
push
mov
and
cltd
sub
mov
push
inc
call
xchg
lds
pop
loop
call
adc
pop
loopne
pop
shl
into
test
movsl
dec
js
adc
mov
pop
lcall
jp
cs
imul
ja
imul
push
cli
out
daa
add
clc
add
mov
adc
aas
mov
repnz
fneni(8087
std
in
cmp
loop
insl
push
mov
dec
inc
xor
ss
jmp
mov
in
testl
fsubl
pushf
popa
adcb
jb
mov
lret
jnp
fists
aas
or
fucomp
in
cmp
jg
sub
push
xchg
sbb
xchg
dec
ret
sub
mov
sub
cmp
test
jae
das
int
push
lahf
out
mov
mov
lret
sbb
call
popa
jb
adc
pop
movsb
or
mov
enter
mov
jns
fs
stc
dec
mov
mov
repz
lock
pusha
dec
int3
and
push
adc
leave
cmc
jg
xor
or
rorl
xor
fldcw
mov
adc
das
cld
mov
jo
int
mov
push
and
pop
pop
mov
shll
fucomp
mov
fcmovbe
in
aam
fcmovbe
and
clc
cwtl
sub
jne
jns
push
mov
cmp
fimull
sub
adc
xor
sub
add
gs
leave
mov
mov
pusha
jmp
cmpsl
xor
mov
cmp
fisubrl
in
sub
inc
jnp
aas
mov
xor
cmp
inc
lret
jmp
push
jle
xlat
inc
int
adc
lock
cli
pop
inc
pop
cmp
push
rcl
dec
sub
lods
and
mov
sbb
jl
lods
dec
mov
addr16
add
sbb
pop
insb
movsl
lahf
pop
push
out
jnp
cmp
aad
adc
push
rorb
push
shll
mov
fidivs
mov
push
imul
leave
negb
cltd
sub
cmc
pop
or
push
and
mov
mov
cmp
and
and
lods
test
stos
jg
daa
pop
fcoml
and
shll
loope
cmpsl
adc
das
cmp
mov
jae
sbb
rcll
enter
pop
das
cld
out
loope
jl
cwtl
dec
add
dec
enter
adc
pop
or
jnp
xor
aad
xor
pause
mull
pop
mov
mov
adc
mov
xchg
jns
jmp
xorl
pop
push
mov
jne
adc
mov
imul
dec
ret
mov
sbb
mov
mov
pop
fistpl
sub
cs
aaa
testl
add
sahf
jmp
jb
orb
pop
cs
ljmp
out
roll
aam
mov
push
and
stc
sub
loop
mov
inc
and
mov
outsb
data16
fcomip
ljmp
xchg
mov
push
adc
ret
rorb
test
test
lret
adc
inc
out
mov
or
pop
mov
jae
lcall
xchg
aam
outsb
jl
imul
das
push
sahf
pop
pop
shl
test
repz
dec
mov
pop
dec
pop
xchg
movsb
and
sub
xchg
lcall
lcall
adc
and
subb
jmp
sub
ds
aas
test
xchg
loopne
xchg
iret
mov
mov
mov
aaa
xchg
mov
imul
dec
cli
in
ss
add
addr16
lods
lods
push
fcoms
shrb
cmp
movsb
mul
ljmp
lds
shll
imul
sub
push
insl
hlt
sub
outsb
rorl
dec
dec
and
in
loop
out
dec
lock
sub
aaa
rorl
inc
in
enter
dec
add
dec
mov
rcrl
pop
notl
mov
cs
shr
xlat
movd
add
dec
push
sub
out
out
inc
pop
movsb
jecxz
dec
lahf
and
mov
xchg
lea
scas
adc
xchg
sub
cwtl
test
repnz
sub
rorl
xchg
xor
inc
and
popa
pop
les
in
movsl
out
mov
arpl
lret
loopne
mov
mov
in
push
out
test
inc
sub
dec
data16
inc
xor
cmp
jbe
mov
pushf
xchg
mov
cwtl
fwait
pop
imul
lea
mov
bound
pop
jg
repz
icebp
xchg
in
in
add
and
int3
movsb
das
xchg
das
mov
pop
sub
outsb
in
sbb
and
pop
les
jo
push
popa
xchg
sub
sti
mov
movsl
dec
cmpb
sbb
add
cli
sbb
sbb
call
addr16
jp
insb
dec
push
inc
push
xchg
lcall
cltd
jns
cltd
out
clc
pop
sahf
push
sub
mov
in
sub
movsl
jmp
loop
ret
rolb
xor
loopne
movzbl
hlt
aad
push
jbe
in
aaa
mov
xchg
jge
pop
xor
mov
in
cmp
xchg
inc
subb
mov
xchg
scas
int
fucom
jle
sti
fisttpl
clc
jecxz
jp
fisubl
shrb
shlb
sub
hlt
xchg
cld
insb
rcrb
aas
mov
inc
bound
icebp
in
call
or
mov
adc
test
push
cli
pop
into
mov
out
xchg
pop
insl
das
xchg
imul
gs
leave
push
sbb
pop
gs
aam
pusha
adc
mov
mov
dec
adc
rorl
mov
imul
push
adc
pusha
sub
or
lret
std
adc
fwait
or
movsb
nop
ss
jmp
fsubl
cmp
sahf
or
or
fs
aam
pushf
fimull
sarb
mov
xor
pop
scas
fldt
xor
push
andb
lahf
scas
mov
data16
add
out
in
and
cmp
push
pop
mov
out
push
loop
das
pop
mov
test
repnz
stos
das
mov
sbb
or
lret
mov
dec
xchg
lds
pop
cmp
dec
jmp
lret
add
mov
daa
rcr
loope
sbb
mov
in
dec
mov
scas
pop
inc
and
xor
add
jbe
cs
insl
mov
lds
push
xor
ss
add
xchg
adc
mov
pop
add
fdivl
ror
cmp
inc
sbb
inc
sub
jo
or
mov
pop
jmp
add
lahf
xor
mov
xchg
test
cmp
jbe
mov
xchg
ret
popf
sub
inc
outsb
adc
push
push
mov
ja
or
jge
hlt
mov
mov
sbb
mov
cmpsl
repz
js
mov
lea
xchg
iret
sbb
mov
lock
divb
shl
jae
cmp
mov
inc
mov
fldcw
into
jmp
pop
flds
rcrl
or
shlb
cmp
bnd
hlt
push
pop
pop
lret
inc
fisttps
push
loop
pop
xchg
cmp
dec
fstl
lret
cmp
movsl
push
adc
push
and
pop
jae
inc
pop
iret
pop
or
cs
lods
cmpsl
rorl
or
test
xchg
push
dec
add
shr
and
mov
cmc
and
xchg
sbb
pusha
cmpsl
test
sub
lods
je
pop
mov
push
sbb
fnstenv
adc
xchg
shr
mov
sub
sbb
or
mov
out
iret
hlt
leave
jge
or
adc
lea
mov
fcoml
cwtl
popa
shl
fs
add
jno
or
stos
popa
in
stos
test
test
into
ret
aas
xchg
js
arpl
push
inc
push
pushf
sbb
push
sub
and
imulb
push
cmp
cmpsl
push
mov
mov
mov
add
dec
dec
imul
pop
cmpsb
nop
sbb
lret
shrb
inc
mov
inc
push
insb
sarl
icebp
dec
lret
lock
mov
pop
fisubrs
add
cld
and
push
pop
or
inc
pop
nop
pop
dec
daa
pop
fildll
jo
pop
pop
xor
or
cmp
jle
movsb
dec
jp
push
lea
sub
in
push
add
or
cli
mov
aam
and
dec
lea
pop
fwait
or
xchg
pop
out
imul
jbe
add
dec
scas
mov
xchg
enter
and
aas
mov
leave
push
adcb
dec
call
push
mov
jle
dec
push
and
adc
lods
mov
stos
add
sbb
mov
les
push
sbb
mov
out
push
jne
xor
lds
test
call
in
sti
pop
push
scas
out
and
fists
cmc
push
or
mull
cld
div
cmp
inc
mov
movsl
cmp
lcall
flds
sub
mov
cmp
imul
and
sti
cli
or
mov
lret
add
sti
shrl
imul
stc
jmp
pop
sahf
leave
insl
inc
cwtl
shrl
leave
add
inc
or
in
adc
and
rolb
out
pop
push
dec
mov
inc
xchg
add
pop
arpl
and
and
and
lret
and
bound
insb
cmc
cmc
int3
in
add
push
shrb
std
xor
mov
test
mov
add
pop
out
sbb
push
arpl
xor
mov
adc
and
xchg
movsb
imul
push
mov
xlat
cmp
fidivs
lahf
cli
neg
pop
push
cli
das
adcb
std
xor
sub
test
jl
ss
shlb
inc
sbb
ret
sbb
scas
stos
ja
mov
cld
scas
inc
xlat
aam
pop
push
stc
loopne
movsl
cltd
or
xchg
mov
dec
or
mov
pop
jb
xor
inc
ljmp
fcomps
xchg
scas
in
xchg
sub
subb
xor
icebp
movsl
push
cli
sbb
int
loope
jbe
nop
es
pop
rcrl
cld
icebp
adc
and
sbb
clc
sub
stos
sub
lods
inc
loope
outsl
xchg
mov
mov
dec
sbb
int3
les
aam
in
daa
fstps
daa
addr16
inc
fwait
add
sub
cltd
sbb
sbb
jle
add
push
cmp
iret
out
jecxz
mov
in
jno
mov
lret
pop
xor
or
sub
sub
pop
mov
jns
fs
dec
ds
push
scas
mov
xchg
push
stc
pop
add
int
dec
lahf
cmp
cmp
pop
lahf
aam
aas
lea
fwait
arpl
hlt
xor
das
sub
push
jle
js
ss
int
mov
jmp
call
adc
add
adc
push
xchg
ret
clc
and
lcall
idivl
push
je
add
mov
pop
xchg
mov
fwait
mov
outsl
aas
xchg
clc
lds
jne
add
sub
in
lds
xor
in
jg
pop
dec
addr16
and
jecxz
lods
or
movzbl
iret
jae
inc
sub
loopne,pn
push
jl
pop
call
cmp
sub
shl
mov
in
fwait
in
xchg
imul
das
push
pop
mov
test
xlat
sbb
enter
adc
icebp
movsb
push
imul
jns
or
js
aad
sub
push
mov
mov
jecxz,pt
mov
xchg
mov
pop
push
xor
outsl
adc
daa
je
or
xor
jno
or
rorb
shl
repz
mov
add
inc
or
pop
and
scas
jns
adcb
push
sbb
test
in
pop
jmp
mov
arpl
pop
jno
mov
jle
lret
sbb
cmp
inc
imul
push
cmp
clc
xor
loopne
inc
or
or
pop
cmp
xchg
movl
adc
push
push
and
pop
mov
shr
scas
dec
test
or
fsubp
xchg
push
pop
rol
ss
sbb
mov
jge
mov
idivl
popf
cmp
ljmp
stos
cmpsl
shll
test
jle
lahf
pushf
add
dec
mov
or
je
outsb
aam
push
in
jecxz
divl
fldenv
adc
out
push
push
popf
movq
jnp
fnsave
jp
rcrl
popa
xlat
sbb
adc
loopne
mov
repnz
arpl
jns
sub
push
imul
mov
push
imul
inc
cld
std
fmuls
int
mov
xlat
mov
orl
dec
lcall
pop
and
fisubl
xor
push
fisttps
xchg
lret
inc
pop
mov
lods
fbld
fadds
sbb
mov
pop
ret
and
push
into
popf
mov
pop
jne
cmpsb
outsb
xchg
xor
les
mov
lods
sub
lret
lods
jge
jmp
pusha
mov
into
mov
or
movsb
lock
push
pavgw
lret
gs
dec
insl
dec
sub
mov
inc
lret
lods
or
out
ljmp
scas
add
mov
or
lcall
sbb
pop
mov
adc
out
add
push
jae
lret
or
fisubl
scas
stos
xchg
xor
addb
bound
xchg
roll
loop
cmp
mov
shl
jecxz
or
xchg
add
sub
cltd
sub
sbb
mov
or
test
sub
dec
and
or
fwait
pop
cmp
mov
xor
xchg
mov
mov
xchg
mov
jb
pop
push
sbb
jl
inc
mov
stos
mov
mov
jl
gs
fcmovnu
inc
loopne
icebp
xorl
pop
clc
pop
or
cmc
popl
lock
or
xor
add
inc
or
addr16
jno
insb
hlt
push
mov
mov
mov
xor
repnz
cwtl
push
or
dec
and
mov
mov
and
inc
push
mov
mov
adc
sbb
lret
lahf
mov
inc
stc
xchg
lahf
push
jns
push
aas
sub
in
into
push
pop
mov
std
and
mov
pop
adc
mov
xchg
xor
dec
daa
in
cmp
daa
mov
or
mov
roll
adcl
in
dec
aam
mov
xchg
inc
sbb
push
push
jp
jecxz
pop
mov
xchg
mov
ss
mov
mov
enter
rolb
mov
push
orb
mov
xor
js
push
call
inc
fcmovnbe
mov
xchg
mov
aaa
outsb
sbb
notl
inc
cltd
les
shll
je
mov
xor
lahf
lcall
fstps
stos
ds
xchg
sbb
les
mov
xchg
jns
and
and
fistps
mov
mov
add
lea
adc
adc
mov
pop
lahf
jge
mov
mov
leave
jg
bound
rcll
lods
faddp
in
mov
or
or
jo
scas
push
je
jae
pop
repnz
subb
enter
xchg
push
out
aam
imul
imul
ds
cmp
scas
inc
mov
cmc
cmp
jnp
inc
jg
lock
push
and
push
sub
sub
imul
into
push
xchg
jp
ds
ficoms
jge
movsl
enter
xchg
jmp
sbb
fmuls
mov
or
xor
jne
jmp
cmp
pop
imul
pop
pop
mov
bound
lret
and
mov
add
pop
dec
lahf
xor
jp
enter
xor
xchg
scas
sbb
or
aad
fimull
aad
jo
fldl2t
sbb
push
inc
dec
enter
add
movsl
and
ja
cmp
fs
xchg
cmp
lcall
sbb
aam
add
ja
adc
dec
movsb
int
jno
jp
fsubr
loope
xchg
add
in
cli
test
xor
into
jle
popf
and
les
cmp
sbb
add
mov
aaa
jb
pop
arpl
mov
pop
cmpsb
jo
es
sahf
stos
insb
cmc
movb
mov
aaa
ljmp
or
mov
cmp
movsl
cli
loope
adc
mov
ljmp
lcall
push
or
xchg
push
xchg
xor
inc
mov
leave
sbb
mov
decb
cmpsl
dec
in
push
adc
loopne
imul
adc
mov
xor
sahf
dec
jae
sbb
pushaw
fcomi
mov
pop
aam
xchg
xchg
call
add
mov
rorl
cmpsb
mov
out
test
xchg
test
mov
push
lret
xorb
lock
lcall
js
push
mov
or
shll
clc
cmp
sbb
aad
mov
sbbl
sbb
clc
loope
shlb
fisttps
cmp
mov
test
mov
sub
or
mov
faddl
pushf
dec
cmc
mov
ds
daa
xchg
subl
adc
cmpb
sub
mov
pop
stos
push
jnp
xchg
sbb
fcmove
clc
add
fidivrs
mov
sbb
and
ret
or
or
fadds
jle
pop
sahf
leave
jle
bound
hlt
clc
sub
lret
movsl
push
js
scas
adc
cmpsl
xchg
imull
fsts
rep
mov
adc
jns
shrb
add
push
nop
cltd
inc
aaa
pop
je
pusha
sub
repnz
mov
mov
popa
popf
mov
lret
pushf
frstor
inc
testl
mov
cmc
enter
fdiv
imull
dec
fldt
mov
dec
cmp
fsubrs
add
add
xchg
int
lret
xlat
push
jno
add
outsb
pusha
pusha
pop
imul
movsl
fstl
inc
pop
jmp
mov
dec
test
mov
stos
icebp
inc
stos
xchg
xchg
xchg
jge
xor
mov
sub
int
mov
lods
std
jle
pop
icebp
cmp
xchg
xchg
sbb
clc
jno
jo
sub
jmp
cltd
jo
ja
je
mov
test
icebp
cli
lods
popfw
lds
push
bnd
jge
inc
imul
pop
sbb
outsl
pop
cld
pop
push
or
cmp
clc
subb
jge
or
mov
les
add
outsl
stos
and
push
lret
mov
testl
movsb
xchg
es
cmp
and
notl
mov
jle
and
add
xor
and
and
mov
push
pop
mov
sbb
jmp
pop
data16
inc
aaa
cmp
cmp
and
mov
loopne
or
pop
push
jmp
mov
sti
adc
shrb
mov
out
out
pop
ficoms
hlt
rorb
add
cmp
dec
lock
inc
cmc
sub
or
fstl
xchg
or
sbb
inc
push
push
add
leave
or
inc
in
fptan
or
in
lret
jp
or
xchg
sub
dec
dec
xacquire
mov
jp
outsb
test
mov
inc
aad
cmp
int3
mov
andb
clc
inc
and
sarl
out
test
int
repnz
lea
test
fldl
and
mov
sbb
jg
les
outsl
dec
fwait
js
add
clc
int3
sbb
subl
sub
add
sub
ret
dec
and
movsl
outsb
or
andb
pop
shll
into
loopne
scas
push
push
dec
dec
cmp
inc
sbb
ss
orl
leave
sbb
mov
xchg
and
leave
and
leave
je
lret
dec
mov
push
cmp
adc
cmc
cltd
cmc
pushf
ror
psubusb
daa
leave
fmuls
sub
aas
or
aaa
mov
call
dec
es
xor
jl
pop
cli
mov
xor
mov
frstor
out
mov
dec
lock
into
push
or
sbb
mov
ds
aam
sarb
insl
fs
sbb
cmpsl
jle
pop
or
mov
popf
sbb
cmp
or
dec
jnp
and
in
ret
enter
rcrb
fs
add
lcall
mov
dec
fsub
sbb
test
jb
out
lahf
loopne
ljmp
mov
nop
add
inc
enter
fdivrs
gs
aam
pop
lods
and
ret
cmc
push
pop
outsl
push
xor
cld
pop
insb
mov
pop
pop
imul
push
jb
nop
addr16
sbb
inc
repz
inc
sbb
fildll
fs
or
div
sbb
stos
xchg
dec
aam
pop
int3
sbb
jl
sbb
add
ja
xor
mov
inc
jbe
mov
cmpsb
inc
mov
mov
or
in
xchg
xchg
jl
mov
push
inc
jge
test
insl
mov
cltd
jle
lahf
xor
add
sbb
mov
sub
out
add
cmp
xchg
aad
pop
xchg
rcrl
addr16
nop
cld
fbld
lea
add
lcall
inc
sti
mov
add
cli
hlt
addr16
jge
sub
cwtl
cmp
xor
stc
cmp
mov
sbb
or
mov
pop
int3
push
jne
jg
movsl
loope
ljmp
mov
pop
ds
cmp
movsl
add
lock
iret
ljmp
mov
mov
int
fwait
or
push
lahf
cmpsl
popa
xlat
insb
inc
inc
aad
xor
lcall
jbe
cmp
stc
sub
mov
push
and
cmc
jmp
sbb
cmp
jecxz
stc
sub
sub
data16
mov
xchg
mov
inc
mov
jecxz
cld
iret
or
sbb
orb
push
jne
inc
outsl
scas
cmp
mov
call
call
addr16
xor
lods
outsb
test
and
bound
sub
dec
xor
or
pop
lds
mov
lcall
adc
push
mov
or
adcl
es
jne
mov
cmc
jmp
jg
pop
cmp
out
push
test
out
xor
bound
cmpsl
push
outsl
test
mov
mov
fstps
fcompl
push
jecxz
mov
lods
inc
or
rcll
test
call
sbbl
xchg
jle
loop
cmp
out
das
pop
enter
gs
mov
mov
cwtl
ds
or
sub
lahf
jecxz
cmpsb
cmc
or
popa
xchg
cmp
fwait
int
cmc
lods
add
scas
mov
sbb
loope
je
cmpsl
inc
movsl
insl
jmp
imul
xchg
cld
mov
push
and
dec
rolb
jecxz
idivb
xchg
pop
jp
cmpb
cmpsb
cmp
adc
insl
jl
push
dec
xchg
or
pop
cld
inc
dec
hlt
jbe
shlb
jne
and
cltd
outsl
or
mov
push
inc
ja
pop
lock
pop
test
ljmp
dec
repnz
mov
mov
inc
out
xchg
and
cmpsb
outsl
and
push
adc
mov
pop
push
fwait
mov
inc
fmuls
xor
jnp
cmc
aad
nop
stos
push
dec
stc
inc
mov
imul
cmp
loopne
push
out
xchg
aas
jmp
outsl
jge
test
addr16
push
sub
inc
add
pop
frstor
sub
xchg
fcompl
inc
stos
subb
jle
imul
dec
mov
cmp
sub
imul
inc
imull
test
jp
sbb
gs
inc
test
push
jno
scas
sbb
into
pop
sbb
scas
push
adc
rcl
dec
adc
popf
adc
push
mov
jmp
push
xor
fisubs
push
sbb
andl
stos
shrb
cs
cmp
gs
mov
sub
add
or
int3
lcall
ss
fisttps
xchg
jb
jmp
push
sub
push
mov
adcb
adc
mov
fdiv
and
test
adc
jne
sarb
fsubl
or
test
adc
cmp
outsb
fwait
xchg
adc
inc
fwait
out
int3
dec
pop
movsl
pusha
test
mov
bound
xchg
mov
cmp
xchg
cmc
add
outsl
aam
fists
pop
mov
sub
test
in
mov
out
jmp
lret
cs
loope
cmp
in
mov
les
nop
clc
cli
xor
pop
fidivrs
sbb
add
shll
mov
lret
cli
stos
shrb
xchg
sbb
fs
mov
mov
ret
call
add
inc
out
das
pusha
xchg
out
mov
push
idivl
xor
adc
outsl
inc
lahf
sti
adc
add
dec
jg
fadds
mov
ljmp
xchg
neg
xchg
sti
mov
dec
push
lea
cmp
outsb
es
test
lahf
add
mov
lahf
nop
inc
bound
sub
add
lea
mov
mov
in
loopne
les
mov
outsb
sbbl
out
cwtl
out
adcb
iret
lods
shll
insl
mov
int3
fidivs
or
mov
cmp
dec
inc
inc
mov
mov
xor
and
add
imul
xchg
fwait
sub
popf
and
adc
hlt
mov
mov
icebp
cmpsb
dec
adc
adc
xchg
lods
fs
cli
imul
sbb
xchg
or
dec
lods
sub
cmp
mov
subl
test
loopne
mov
sub
dec
sbb
dec
fisubrs
repnz
dec
xchg
dec
bnd
jbe
add
mov
jb
jne
mov
out
popf
jmp
sbb
call
cmp
ficoms
retw
pop
fdecstp
push
loop
das
pop
lea
jg
mov
push
lds
aas
sahf
mov
ret
addr16
rolb
insb
rol
das
sub
dec
xor
pop
pop
stos
mov
dec
scas
mov
cmc
mov
ret
lcall
mov
or
outsl
pop
test
xchg
fsubrl
jle
test
cwtl
fsubl
mov
dec
lods
or
xor
cmp
pop
add
loop
sub
cld
mov
adc
jp
enter
sbbb
int3
shlb
jp
lea
test
pop
pop
imul
in
mov
adc
or
std
cmp
lret
sarl
ja
enter
mov
lret
pop
push
aam
and
mov
xor
insl
stos
rolb
push
and
das
xchg
lds
push
les
push
movsl
cmp
inc
add
or
jmp
adcb
mov
fwait
addr16
aam
mov
add
jl
cmpb
jb
sub
popa
out
mov
imulb
mov
cmp
adcl
mov
xor
cmp
js
push
ja
mov
icebp
add
mov
mov
loopne
pop
ja
xor
test
dec
xchg
cs
cmpsb
lods
cltd
push
lret
imul
mov
fstpt
and
pop
xor
push
fdivrl
lret
insl
adc
psubsw
scas
inc
test
arpl
js
xor
sbb
inc
cld
outsl
jle
jno,pt
loop
xor
mov
popf
mov
fdivrl
shl
mov
test
pop
or
pop
sub
lcall
push
mov
push
das
test
pop
pusha
cmp
insl
pop
add
push
cmp
fstps
leave
outsl
jbe
xor
dec
loop
sbb
faddl
push
outsb
adc
push
xchg
ja
int
scas
lret
test
addr16
jns
es
cmp
pop
mov
sbb
xchg
pushf
sbb
stos
sub
mov
das
xchg
xor
aad
lcall
call
push
outsb
or
push
hlt
add
js
inc
dec
xor
jecxz
mov
in
das
testl
jp
lahf
test
stc
xorl
stos
jge
add
out
in
inc
pop
adc
and
sub
sti
jle
outsl
pusha
mov
leave
cmp
fdivr
jns
xchg
lods
bound
stos
adc
xor
std
out
in
pop
scas
jae
pop
adc
cmp
mov
lcall
repnz
dec
xchg
push
lods
add
aam
mov
in
jge
scas
jle
add
movsl
cmp
mov
push
stos
xor
jno
or
outsb
hlt
jns
xor
divl
mov
pop
dec
and
cmpsl
add
mov
inc
pop
pusha
int3
mov
push
loopne
jnp
pop
jb
xchg
mov
out
mov
cmpl
aaa
cs
pop
stc
sub
push
mov
jnp
fiaddl
les
shr
xchg
imul
data16
arpl
popf
mov
fcmovb
bound
fnsave
xor
jp
lods
incb
daa
dec
sahf
jbe
inc
or
jnp
adc
inc
cmp
jne
scas
dec
push
vpcomw
xor
cli
dec
inc
in
cmp
fnsave
inc
mov
cwtl
pop
decb
out
js
add
shrb
inc
pop
out
xchg
aam
cmpsl
je
into
scas
movsb
xchg
xor
cmc
xchg
dec
mov
inc
jae
es
dec
dec
pushf
push
imul
imulb
jo
adc
xchg
or
js
sub
mov
aaa
mov
sub
inc
sub
iret
dec
ret
fdivl
sub
sub
incl
cld
mov
call
gs
adc
pop
cltd
jp
push
mov
dec
sbb
jg
mov
sar
adcl
es
inc
pushf
jp
dec
fs
xchg
mov
repnz
fdivl
jg
sarb
mov
cltd
cmp
popa
imul
clc
mov
lret
in
jmp
jne
mov
adc
mov
xchg
data16
ror
mov
std
add
fwait
dec
sbb
in
adc
iret
int
inc
cmp
repz
push
nop
out
rolb
insb
push
mov
fldt
test
out
dec
sub
out
sbb
push
daa
bsf
dec
mov
push
pop
lcall
jmp
hlt
aas
cmp
mov
and
int3
pop
pop
in
insl
lret
and
pusha
or
and
es
hlt
xor
push
cmc
push
and
push
aam
lock
arpl
mov
sub
pop
jecxz
add
fwait
push
xchg
pop
test
daa
icebp
lds
rcrb
sbb
ret
fildl
dec
add
jl
sub
add
jp
lock
adc
adc
repz
mov
hlt
push
pop
rcrl
insb
or
jl
lods
pop
cs
daa
xor
scas
movsb
ds
out
fsubrl
cmpb
popa
mov
mov
xor
mov
dec
nop
imul
sbb
add
aam
mov
testl
cs
jmp
cli
mov
fisttpl
sbb
insb
and
mov
push
push
stc
lahf
sub
imul
pavgb
data16
mov
das
dec
rcll
sub
push
add
sbb
ret
jb
add
push
xchg
cmpsl
mov
or
sbb
lods
push
fs
sub
mov
pushf
stos
pop
stos
sahf
push
pop
mov
or
repz
push
push
shll
adc
addr16
cmpsb
imul
xchg
sahf
mov
pop
out
dec
add
jg
sub
fnstsw
pop
push
imul
jecxz
dec
lds
inc
dec
sbb
sti
dec
test
aam
add
jo
mov
inc
mov
sahf
test
mull
enter
xchg
inc
inc
and
xchg
stos
mov
mov
dec
dec
repz
andl
imul
add
test
mov
inc
adc
xchg
cmp
leave
pop
or
mov
stc
dec
mov
leave
mov
fimull
dec
pop
inc
pop
shlb
pop
sbb
push
xchg
bswap
pop
mov
dec
mov
test
or
xchg
mov
and
lcall
push
mov
imul
mov
int
push
jle
bound
test
dec
mov
sbb
in
loope
loop
daa
cld
fdivrl
sahf
or
or
cmp
inc
xchg
mov
cmpsl
nop
add
leave
push
mov
pop
in
push
mov
notl
gs
mov
mov
test
sti
mov
mov
sbb
xchg
xchg
cmp
sbb
jns
sar
ret
push
notb
stc
movsb
adc
mov
jp
dec
mov
shll
adc
testl
fld
sub
pop
imul
aam
xor
stos
addr16
mov
inc
es
mov
clc
pop
xor
orb
push
dec
daa
push
dec
in
sub
fs
mov
lea
std
lods
mov
adc
in
pop
jle
subl
xchg
lea
mov
push
cmc
cwtl
jecxz
in
or
nop
add
cmc
aas
ret
daa
inc
jl
mov
adc
and
adc
and
popa
ret
hlt
rolb
mov
das
cs
orl
aad
mov
lahf
ja
in
cmpb
aaa
fistps
sbb
popf
mov
subb
mov
push
sub
push
movlps
ret
in
add
nop
mov
and
int
sbb
and
je
addr16
popf
and
std
jne
out
stc
js
push
sub
xor
jle
ss
test
movsb
xor
ret
add
mov
adc
mov
int
xor
jp
mov
dec
mov
bound
pop
jecxz
mov
cld
imul
mov
add
fsub
jge
pop
ljmp
repz
scas
gs
jge
aam
lret
mov
jmp
fisubs
or
addr16
push
gs
mov
or
out
fucom
test
out
arpl
fwait
loopne
dec
xchg
xorb
dec
or
in
xchg
dec
mov
popf
xor
test
cmp
aam
adc
cltd
xchg
sbb
push
fwait
mov
or
fbstp
adc
out
inc
xor
frstor
jns
mov
fdivs
mov
adc
mov
pop
mov
mov
pop
add
stos
sub
dec
call
mov
xor
decl
je
add
movsb
mov
test
inc
push
popf
lods
xor
mov
cmpsl
xchg
mov
in
fcmovbe
cli
sbb
push
scas
int
in
fnstenv
jb
push
or
mov
imul
imul
call
pop
pop
int3
sbb
or
inc
and
mov
jecxz
xorl
jp
or
add
inc
jno
cs
scas
imul
xchg
das
loopne
pop
or
xchg
imul
jge
pushf
or
leave
mov
or
push
dec
mov
and
add
push
push
rcll
xor
loope
jge
jb
data16
xchg
inc
sub
sar
dec
mov
sbb
lock
or
ret
outsb
pop
mov
inc
and
bound
cltd
add
jmp
add
dec
les
cld
adc
es
bound
mov
dec
cmpsb
lcall
xchg
mov
pop
sub
mov
mov
lret
divb
fmul
shl
dec
sti
add
imul
mov
dec
jge
lret
inc
xchg
adc
sbb
in
adc
lea
outsb
ja
cmp
scas
loope
ret
push
xorl
lods
mov
push
adcb
xchg
mov
push
shr
jmp
fs
sub
add
jmp
out
dec
mov
jge
stos
sub
mov
adc
lcall
sub
loopne
and
push
xor
xchg
mov
loop
inc
repnz
call
mov
add
adc
dec
orl
xchg
aaa
test
jecxz
das
push
bound
gs
pop
aaa
cmp
dec
movsl
adc
stos
pop
jnp
push
rcrl
movsb
mov
dec
add
or
arpl
out
xor
cmp
mov
insb
mov
iret
adc
dec
push
mov
cltd
das
rcrl
ds
cwtl
dec
scas
inc
cwtl
xchg
out
dec
inc
rorb
mov
nop
cmc
xor
adc
mov
dec
ja
sbb
xchg
inc
dec
and
in
loope
jo
mov
shlb
lods
dec
bound
xchg
cld
bound
fwait
sbb
ja
sub
jle
ljmp
jns
mov
imul
popa
cmp
test
in
lods
add
push
mov
fwait
and
out
pop
xchg
nop
xchg
mov
or
call
xor
mov
call
add
scas
test
cmp
in
pop
das
xchg
in
sbb
push
mov
sbb
jp
ljmp
lea
mov
or
push
sti
jb
fcomp
add
sbb
xor
gs
arpl
aaa
xor
clc
push
jne
mov
aaa
xor
jp
inc
xchg
xor
lds
cmc
jmp
adc
das
lahf
mov
xor
ret
mov
mov
sub
popa
in
mov
inc
lods
inc
push
mov
pushf
aad
dec
outsb
dec
scas
xchg
sbb
xchg
pop
add
lock
cmp
int3
fcomps
cwtl
inc
test
push
mov
push
jb
push
xchg
popa
leave
movsb
jo
xchg
aad
addb
loopne
xchg
jno
popa
xchg
pop
aas
mov
jle
adc
sbb
xchg
xor
test
clc
js
sbb
or
fcmove
cmc
icebp
xchg
sbbb
iret
mov
shll
adc
loope
out
xchg
mov
mov
xor
dec
cmpsb
sub
nop
or
mov
idivb
test
mov
das
ja
and
test
jnp
cwtl
lds
pandn
mov
xor
sub
sub
jg
loope
stc
fisubl
jo
fstl
mov
sub
mov
mov
jp
int3
loopne
mul
fidivs
ljmp
and
out
jae
imul
push
insl
sbb
push
dec
inc
pushf
jne
fst
inc
mov
push
xchg
jns
xchg
mov
cmc
cmp
movsl
pop
test
mov
loopne
jae
out
ret
out
inc
or
shr
sahf
dec
lret
sarb
jmp
pop
add
not
loop
mov
pop
sub
pop
xchg
fwait
dec
cmp
and
add
mov
push
jns
hlt
or
shlb
jl
xor
sbb
xor
xchg
aam
pop
xchg
jp
test
pop
sbbb
dec
arpl
out
lods
lcall
inc
mov
sub
inc
cwtl
mov
pop
imul
mov
pop
mov
ret
mov
xor
xchg
insl
and
aad
adc
mov
adc
cmpb
dec
sbb
xchg
rcrb
inc
outsl
in
and
add
jp
mov
jg
and
jl
push
fistl
jle
mov
cmpb
xchg
pop
sti
movsl
sub
stc
jbe
outsl
mov
add
bound
sub
dec
fdivp
push
lahf
adc
fnstsw
push
fldt
flds
les
pop
in
inc
pop
sbb
mov
sbb
sar
adc
push
jnp
xor
and
cmp
sub
jecxz
jmp
add
cmpsl
pushf
and
aad
dec
push
das
mov
fisubrs
dec
pusha
mov
push
pop
xchg
pop
ds
sahf
aas
sub
push
outsb
pop
popa
fadd
ss
jp
jg
push
or
jno
push
in
inc
fxch
stos
and
sti
mov
mov
xchg
dec
sahf
ja
test
push
push
sub
inc
sahf
arpl
cmpl
out
sub
clc
out
sbb
fisubrl
sub
sub
inc
push
scas
sub
pop
mov
insb
mulb
cmp
jns
arpl
mov
xchg
fs
out
and
push
pop
vxorps
fwait
test
cli
sub
xchg
sti
pushf
mov
push
sub
add
ds
movsb
add
cmpsb
push
aas
lds
in
dec
xor
adc
popf
fisubrl
add
inc
jge
or
and
fwait
sahf
pop
icebp
mov
inc
adc
push
repz
mov
jnp
mov
cltd
jg
push
icebp
mov
push
adc
ja
int3
mov
test
push
cmp
pop
cwtl
inc
int3
mov
ds
xor
in
fiaddl
lods
inc
fld
fs
sbb
or
jp
cld
pop
xchg
jge
arpl
xchg
pop
mov
jb
imul
in
hlt
xor
and
repz
test
loopne,pn
sub
daa
sbb
ss
imul
cmp
add
xchg
bound
out
xor
cmp
fsubl
pop
push
inc
and
loop
in
push
stos
mov
sub
aaa
ret
lret
mov
stos
into
stos
sbb
mov
lret
leave
xlat
xchg
shrl
lahf
mov
add
negl
jp
movups
sarl
fs
mov
dec
or
xchg
bound
lods
jae
dec
jo
push
andl
cmp
or
push
enter
ret
jg
sbb
shl
jle
bnd
cmp
fcoms
rcr
xchg
inc
push
out
mov
addb
mov
cltd
cmpsl
mov
sub
notb
and
sbb
push
pusha
rorl
stos
mov
ret
mov
mov
cmp
cltd
jecxz
iret
cmp
scas
push
inc
pop
jnp
int3
test
icebp
sbb
xor
and
dec
sbb
pop
and
daa
pop
cmp
add
jp
movsb
aad
scas
movsb
ds
jae
cs
pop
aas
in
inc
mov
push
movsb
loop
jmp
and
xor
shr
mov
in
lods
in
add
add
rolb
sti
inc
jae
out
xchg
jae
lahf
xchg
mov
into
fwait
in
jns
pop
xor
push
sbbl
mov
data16
ljmp
cwtl
adcb
and
aas
lods
mov
sub
sub
pop
je
inc
and
pop
mov
adc
out
or
pop
mov
jmp
push
add
hlt
jno
push
sub
into
ret
and
bnd
enter
push
or
ja
sbb
fcmovu
test
pop
mov
pop
sbb
xor
bound
mov
roll
xchg
push
sbb
movsl
je
xchg
lods
leave
sub
or
cmpsl
movsb
lods
insb
fdivrl
cltd
mov
sbb
gs
mov
jecxz
add
lods
in
cld
mov
push
cmp
arpl
jg
decl
in
stc
xor
pop
sub
adc
adc
flds
dec
js
mov
mov
cmpsb
outsl
addr16
pop
rcll
or
lds
jp
cld
mov
scas
out
pusha
mov
cli
sarl
js
or
movb
fucom
mov
imul
sub
outsl
mov
testl
je
aad
ret
fidivs
adc
jle
sarb
sti
add
lret
xlat
movsb
cmpsl
sub
jge
rclb
mov
push
shll
and
orb
pop
sub
inc
decb
roll
fsubs
icebp
adc
sahf
es
dec
cltd
fs
subb
movsl
dec
mov
cmc
sbb
sbb
iret
push
shrb
add
and
xchg
adc
pop
and
aaa
aad
inc
div
lods
sbb
dec
fcmovnbe
bound
loop
daa
xchg
push
aam
test
subb
pop
sahf
push
jmp
inc
ljmp
and
cltd
xlat
fdivl
push
xchg
push
leave
or
fcoml
adc
pop
sbb
dec
jae
in
push
sub
push
or
call
pop
push
fisttpl
mov
or
xor
pushf
pop
jp
loopne
inc
loopne
fmul
popf
mov
loopne
insl
mov
outsl
jo
jle
lahf
pop
mov
sbb
sub
push
jle
pop
pop
dec
mov
sub
cmp
pop
bnd
cmpsl
fisttps
sti
enter
ror
test
or
insb
outsb
adc
mov
orl
bound
inc
in
in
adc
push
fcmovnu
test
add
sub
mov
or
sub
jmp
movsb
or
xchg
call
adc
xchg
mov
sub
test
das
pop
sbb
repnz
out
imul
inc
and
jecxz
add
neg
xchg
fsubl
shrb
jnp,pn
jge
imul
mov
push
jae
jbe
stc
stc
cmp
xchg
fnsetpm(287
mov
jae
pop
shrb
in
jne
js
syscall
incl
push
movsb
and
shl
add
adc
sarb
sub
dec
out
clc
pmaxsw
incb
pop
dec
dec
xchg
lret
xlat
enter
dec
cmp
pop
xchg
inc
fisubs
lds
push
lods
repz
test
dec
test
mov
aas
sub
push
iret
andl
hlt
pop
and
xor
mov
imul
cs
notb
sub
jle
jl
les
add
xor
out
jo
int3
mov
scas
pop
scas
and
push
add
test
xor
pop
push
lods
cmp
leave
adc
sub
sub
sti
ret
jmp
mov
orl
ss
mov
lods
nop
sbb
mov
push
jne
repz
scas
movsl
mov
jg
aaa
lods
pop
rorb
and
fcompl
sub
cmp
cmpsb
cwtl
add
mov
adc
dec
mov
ja
jne
andb
mov
outsb
mov
cwtl
mov
pop
cmpsb
loope
push
adc
fwait
jg
imul
sbb
loopne
inc
fs
test
int
test
mov
in
aam
push
cmc
mov
pop
mov
loopne
pop
jle
loope
or
xor
mov
out
mov
dec
adc
div
cmp
xor
testl
xchg
cld
fistpll
int
sbb
lods
and
fstps
pushf
mov
jl
out
lret
mov
push
xor
shll
cwtl
mov
jno
vphadddq
inc
icebp
bound
or
jecxz
xchg
jmp
das
test
mov
push
in
or
je
adc
out
addr16
int
or
in
adc
lea
lret
add
dec
fdivrl
hlt
roll
daa
pop
addb
and
popa
daa
pop
xchg
xchg
int
xor
sti
jae
sub
mov
cmp
cmp
iret
sub
lret
test
fimuls
stos
xlat
inc
and
dec
jle
pop
push
jns
push
inc
xchg
int3
arpl
bound
dec
cwtl
stc
inc
scas
sbb
outsl
stos
xchg
push
xchg
daa
cs
lahf
loopne
outsl
cwtl
mov
adc
int
push
daa
lcall
insb
jg
jo
mov
pop
test
daa
jecxz
push
xor
jge
aas
xchg
inc
out
aaa
jb
mov
inc
bound
sbb
ror
or
insl
std
sub
int
or
inc
lds
add
sub
mov
mov
stos
jns
lock
pop
stc
lds
xorb
rclb
mov
mov
aaa
or
jmp
pop
cmp
mov
divb
mov
push
roll
stos
popa
pushf
divb
inc
add
or
or
mov
daa
xor
and
sub
mov
dec
sub
aam
adc
std
ja
fstl
pop
imul
cmc
repnz
dec
sbb
insb
push
push
push
lahf
push
inc
sbb
and
xchg
hlt
pop
push
test
pop
hlt
sub
or
push
idiv
and
mov
mov
stos
adcb
dec
call
adc
push
stos
outsl
aad
mov
loopne
and
outsl
and
mov
pop
jl
js
addr16
cwtl
cmp
mov
loopne
mov
das
sub
dec
fldt
mov
cmc
adc
movsl
xchg
in
adc
cmpsl
adc
cmp
out
push
fdivr
imul
fcoml
and
add
ret
fs
push
push
or
jb
inc
push
mov
ucomiss
and
inc
adc
add
mov
das
pop
enter
push
inc
pop
inc
insl
jg
adc
insb
outsb
lock
xlat
xchg
ljmp
test
jae
or
cmp
pop
dec
lcall
add
jge
cmp
jns
jnp
inc
cmp
mov
cmp
mov
clc
lahf
push
mov
xorb
arpl
insl
or
add
pop
imul
jbe
and
in
lret
lea
dec
inc
and
outsb
lds
ja
aad
push
sbb
inc
dec
xor
mov
dec
insb
dec
inc
sbb
dec
nop
inc
xchg
mov
push
and
sti
inc
sahf
mov
jo
out
and
in
stos
ret
daa
inc
mov
ss
cmp
push
pop
in
push
aaa
sahf
shlb
mov
and
pushf
shrb
rorl
ret
outsl
repz
cmp
lds
dec
cmpsl
scas
push
hlt
repz
adc
daa
ret
push
sahf
movsb
roll
pop
popf
xorl
pusha
pusha
xchg
cmp
inc
cmp
push
and
stos
push
pop
mov
adc
or
cli
jo
inc
lds
es
sbb
adcl
loop
mov
xchg
jmp
sbb
pop
das
and
or
dec
and
pop
cmp
push
mov
dec
hlt
lds
mov
pop
inc
mov
sbbb
scas
push
clc
and
sarl
sub
movsl
mov
xor
or
push
fstps
scas
arpl
cmpl
out
push
push
bound
xchg
test
add
aas
insl
adc
int
mov
push
push
add
push
mov
in
insb
scas
mov
sbb
xchg
cltd
cmp
xor
xchg
repnz
fs
pop
and
ds
rcrl
sub
sbb
mov
pop
enter
pavgw
imul
and
push
add
mov
pop
aad
push
sahf
scas
dec
rcll
nop
xor
pop
popa
cs
mov
and
jmp
cmc
jmp
dec
sub
add
mov
and
mov
xlat
loope
cs
in
data16
sub
in
ja
iret
andb
adc
mov
mov
mov
orl
jne
push
push
out
push
pop
mov
sbb
dec
cmp
lods
int
ja
mov
dec
jnp
sbb
pop
rorb
xchg
jge
or
dec
mov
push
adc
addb
notb
jne
in
testl
jmp
xor
fstpt
dec
iret
sub
rcrl
es
jns
push
or
xchg
add
test
sbb
movsl
mov
int
fsubrl
jo
adc
mov
pop
or
pop
loope
nop
cmp
out
push
subl
test
jp
mov
dec
test
mov
hlt
inc
dec
pop
sub
xchg
lods
loope
or
and
pusha
shll
mov
into
pop
test
pusha
les
xchg
mov
lret
pop
sub
push
inc
adc
ss
cmp
adc
mov
orl
cmp
pusha
mov
mov
push
pop
mov
int
or
dec
fiaddl
dec
pop
outsl
pop
arpl
rcr
dec
insl
mov
pop
mov
shl
push
aas
dec
or
scas
pop
idivl
jle
rclb
fisttpll
sti
enter
push
jo
sbb
pop
dec
or
cmpsb
push
cmpsb
adc
xlat
sub
pop
into
or
loopne
adc
insl
divl
mov
push
in
jnp
inc
dec
icebp
shufps
dec
jl
out
pushf
sti
enter
pop
pop
mov
rcrb
inc
test
jl
mov
cmpsl
xchg
in
inc
push
das
lods
pop
xorb
sbb
adc
cltd
je,pn
int
dec
cmpsl
add
gs
jp
jp
pop
jl
sbb
cmpsb
jp
shld
lahf
icebp
fdivrs
lahf
and
lahf
call
cld
add
mov
adc
lret
scas
ror
rcrb
inc
sahf
stc
pushf
movsb
fwait
xor
jle
cmp
jae
cmp
test
sub
stc
je
dec
das
mov
es
xor
dec
xor
icebp
adc
mov
xchg
fidivl
data16
mov
sub
pop
and
les
sbb
and
pop
mov
clc
inc
enter
mov
sub
int3
xchg
or
imul
pop
movsb
push
stos
das
sahf
daa
in
out
adc
in
arpl
xor
xor
push
shl
mov
mov
inc
std
loop
loop
and
shl
pop
mov
stos
js
fs
mov
ret
sbb
lods
push
out
sub
sbbb
negb
aad
fwait
xchg
mov
sbb
push
cmpsb
fbld
bnd
cmp
bound
aad
cmp
ja
mov
adc
fmul
push
jne
xlat
cmpsl
sub
mov
push
test
mov
les
notb
mov
mov
call
inc
push
pop
pop
mov
mov
scas
jecxz
loop
dec
jnp
sbb
sub
in
movsb
icebp
mov
add
sahf
std
lcall
aam
and
addr16
or
pop
clc
int3
xchg
add
cld
xor
add
imul
ffree
test
jno
loop
out
jge
xchg
inc
push
out
sbbl
dec
push
cwtl
cs
lock
test
iret
xor
sbb
inc
lahf
shrb
sub
aas
push
or
jge
cmp
and
cmp
and
jno
nop
sbb
xchg
xor
push
push
scas
pop
pop
js
stos
popf
sarb
addr16
pop
inc
jg
cmp
pop
stos
stos
cmp
push
out
jo
out
add
push
push
or
imul
push
sbb
test
fs
shrl
stc
and
sbb
out
push
call
push
push
add
jmp
movsl
mov
mov
mov
cwtl
fs
push
xor
lods
mov
cmc
es
inc
mov
push
movsl
xchg
mov
orl
stos
cmp
daa
jbe
adc
orl
ret
scas
adc
sbb
std
xor
int
imul
jp
mov
data16
inc
repz
lds
inc
jns
mov
push
xor
test
mov
mov
or
xchg
lcall
lret
scas
fs
fwait
xchg
fmul
mov
shlb
pop
addb
sub
mov
inc
call
test
xchg
frstor
cmp
jg
pop
push
mov
bound
popa
push
std
lcall
jne
xchg
mov
popa
sbb
xchg
add
fcmovnbe
dec
xor
dec
lods
push
push
lret
int
mov
mov
push
movsl
inc
out
mov
mov
inc
jo
lea
fists
add
popa
and
je
mov
loope
sbb
lods
sbb
idivl
or
add
lds
ljmp
mov
fisttps
icebp
mov
jb
add
push
inc
mov
movsl
popf
sub
sub
mov
repnz
mov
int
and
adc
insl
cs
xchg
out
jnp
lds
jg
adc
inc
test
lret
lds
repnz
sahf
push
add
dec
inc
iret
fldenv
lea
sub
xchg
mov
mov
mov
mov
int
or
mov
sub
mov
cld
movsl
hlt
mov
test
pop
scas
xchg
outsb
xor
jle
popf
and
rcrb
mov
test
data16
fbstp
sti
mov
insl
aad
add
push
mov
test
lock
add
mov
xor
adc
or
push
cmpsl
mov
mov
xchg
dec
push
das
mul
ss
dec
mov
in
lods
addb
loop
or
popa
push
adc
or
mov
leave
sbb
sub
add
fldpi
mov
xchg
pop
push
leave
add
pop
fwait
mov
test
and
push
adc
nop
add
xlat
test
add
jge
les
adc
push
popf
pop
sbb
mov
jns
lret
out
lock
fstps
movsb
clc
jle
std
and
loopne
mov
stos
dec
push
and
sar
jne
mov
xor
rcl
lds
data16
dec
push
fwait
jno
and
push
dec
mov
mov
daa
adc
not
and
negl
and
push
xchg
js
xchg
cmp
pop
cli
add
inc
jmp
dec
ja
test
dec
jnp
jg
and
pop
lret
cs
sbb
setg
push
xchg
js
cwtl
aam
push
repz
pop
cmp
push
jp
clc
xchg
movsl
push
cmp
push
int3
stc
or
hlt
hlt
jle
adc
loopne
xlat
mov
cwtl
test
hlt
or
movsl
mov
jno
in
push
mov
cmp
cmc
fwait
pop
pop
lock
inc
xchg
jns
fidivrl
mov
mov
in
adc
ficomps
aad
roll
xchg
lcall
dec
inc
or
loope
nop
adc
push
sbb
insb
mulb
aad
movsl
test
gs
bswap
and
fcmove
xchg
sbb
mov
push
sbb
mov
ret
or
adcl
popf
roll
adc
lahf
divl
mov
into
jnp
mov
popl
rclb
in
add
aas
xchg
mov
imul
xor
mov
pop
adc
outsb
cs
push
js
ja
outsl
and
cmpsb
pop
dec
fisttpll
std
testb
imul
popf
dec
outsb
js
or
jns,pn
iret
xlat
mov
imul
jecxz
mov
test
bound
sbb
sbb
xchg
es
mov
add
mov
and
ja
mov
jle
xor
fiaddl
adc
loope
push
mov
ret
mov
mov
sub
aad
mov
sbb
hlt
sub
mov
gs
mov
pop
pop
jbe
fisubs
mov
push
or
add
and
xchg
jae
fbld
sbb
add
iret
jp
inc
add
pop
fxch
dec
xchg
cltd
pop
call
and
dec
fsts
nop
bound
mov
push
sahf
adc
sub
xchg
push
and
aad
jl
pop
fstl
cltd
jle
mov
stos
mov
shl
outsb
incb
cld
xchg
int3
cld
testl
daa
scas
sub
int
in
fld
iret
scas
shrl
and
xchg
pop
sahf
insb
repz
xor
ljmp
imul
dec
jno
mov
jge
bound
imul
pop
adc
xchg
lods
jo
aam
jge
sbb
mov
les
fisttpll
movsb
in
inc
inc
loope
stos
nop
sub
out
aad
push
test
mov
fwait
jp
jp
add
xlat
or
repz
insb
ss
xorl
subl
pop
dec
or
mov
mov
js
mov
fdiv
mov
mov
xchg
inc
in
cmpsl
in
push
xlat
addr16
les
push
xor
mov
cmpsb
xor
inc
xor
sub
lods
add
outsl
xchg
idivl
sbb
cmpsl
push
and
add
jno
mov
jl
xchg
inc
xor
in
cld
mov
int3
loopne
push
mov
orl
jle
es
push
pop
add
xor
xorw
test
mov
push
sub
cmp
xchg
jbe
arpl
dec
inc
outsl
testl
cmovg
cmp
fistps
fwait
addr16
cmc
lds
push
stc
xchg
mov
sahf
lods
and
inc
cwtl
test
and
fidivs
jp
mov
es
ljmp
lret
inc
push
and
sub
in
push
push
insl
dec
xchg
lods
mov
nop
xchg
xchg
divb
xor
sbb
call
js
or
ljmp
inc
mov
add
rclb
lods
jb
pop
cld
fs
push
clc
add
and
push
out
cwtl
lock
inc
arpl
push
sub
push
pop
push
mov
imul
jecxz
mov
test
xchg
or
sbb
sbb
aaa
pop
scas
push
aam
adcb
notb
fwait
cmpsb
test
scas
sub
fucomp
lock
sbb
or
cs
mov
push
pop
cmp
lcall
das
ret
mov
cld
fwait
add
dec
mov
push
sbb
pop
jge
stc
jo
lret
insl
insl
add
insb
inc
cmpsb
jbe
std
scas
cmc
neg
cmp
mov
faddp
addr16
mov
sahf
push
xor
sbbl
cmpsb
xchg
sub
or
jno
filds
mov
xor
jecxz
xchg
mov
mov
test
cmpl
aaa
fdivrp
in
jne
mov
jnp
popa
cmpb
push
jnp
scas
jb
dec
or
inc
ficoms
mov
std
xor
les
xor
add
adcl
andl
inc
rcrb
xor
jns
sub
int3
sbb
pop
mov
gs
popa
out
push
stos
lock
xor
fdivrp
inc
mov
dec
lods
cmpsl
pop
loopne
push
mov
fnstenv
jg
jns
xor
in
cmp
iret
mov
sub
sub
fbstp
aad
mov
call
outsl
stos
dec
jl
out
mov
dec
test
mov
and
xchg
adc
jg
repnz
xchg
push
xor
xchg
repnz
enter
cli
hlt
fisttpll
dec
arpl
cmpsb
mov
mov
or
mov
or
mov
lods
int
pop
mov
mov
or
mov
pop
jo
fcmovnbe
mov
pop
inc
and
jmp
arpl
mov
sbb
shll
setp
sbb
cmp
int
pop
fs
jns
mov
sub
jp
or
sbb
xor
shlb
push
jmp
and
les
mov
push
in
lds
adc
xchg
jnp
stc
mov
sbb
ja
rcrb
dec
cmp
push
or
mov
int3
cs
scas
mov
cmc
aaa
mov
sbb
popl
imul
push
fildl
sti
inc
mov
aaa
fcompl
mov
adc
inc
jl
mov
dec
jp
stos
scas
mov
push
and
lods
push
lcall
shrb
int3
sbb
xor
jmp
xchg
mov
clc
outsb
stos
pop
test
jmp
xchg
popa
xor
pop
jecxz
dec
cmp
jb
cli
daa
ss
mov
cmc
out
inc
aas
out
and
inc
sbb
negl
stc
mov
repz
idivl
mov
hlt
in
into
sbb
mov
xor
push
aam
mov
shrb
cmpsl
add
sbb
inc
sahf
loop
movsl
inc
xchg
xchg
iret
push
sub
xchg
fiadds
cmp
int3
pop
fnstcw
sub
xchg
push
cmpl
imul
jmp
fstpt
test
xchg
adc
jp
aas
int
add
out
int
sbb
cmpsb
cli
jb
stos
push
xor
mov
sbb
xchg
test
pop
scas
adc
jae
aas
stos
sbb
jb
aas
pusha
popa
pop
pop
cmpsl
adc
push
fiaddl
mov
mov
cmp
cltd
jg
lgdtl
cwtl
mov
or
inc
insb
aas
mov
xor
cli
dec
add
xchg
mov
push
sub
adc
scas
fldenv
psadbw
pop
lods
stc
test
push
cwtl
imul
xor
lods
sbb
pop
pop
push
ljmp
jnp
jb
cmp
loope
js
xlat
xor
mov
bound
dec
stc
std
xor
mov
ret
stos
adc
test
stos
cmp
movl
fwait
sbb
aaa
filds
pop
add
jbe
nop
bound
xchg
divl
sub
popf
and
shll
lods
xor
lods
pusha
xlat
xchg
enter
mov
lea
pop
aam
cmpsb
divl
ret
cmpsl
ret
mov
lea
bound
negb
scas
push
mov
dec
cmp
pop
idivb
shlb
jb
cwtl
push
push
dec
sarl
fwait
bound
lods
inc
movb
int
cmp
aam
push
call
filds
pop
add
das
out
jo
push
xchg
inc
adc
push
lahf
subb
mov
and
mov
push
adc
adc
dec
loope,pt
repz
test
dec
xor
fdivrl
push
movsb
test
in
icebp
mov
mov
lock
lret
fsubs
inc
pop
testl
leave
test
shrl
dec
loop
adc
lock
in
cwtl
cmp
push
xor
pop
mov
push
pop
subl
or
or
icebp
out
xchg
es
aaa
ljmp
pop
outsl
xorb
mov
mov
jl
mov
inc
bnd
jo
cmp
dec
cltd
jmp
xchg
push
mov
out
inc
push
hlt
push
xchg
out
ja
mov
enter
cltd
out
hlt
sub
push
shll
and
push
out
lea
xchg
cmp
or
add
xor
dec
lods
jns
aas
loope
das
fcomp
dec
lahf
mov
cmp
sbb
dec
rcll
outsl
push
insl
and
cmp
test
dec
mov
fidivrs
lods
inc
icebp
loop
push
xor
push
dec
add
cmpsl
inc
daa
pop
and
out
mov
popf
outsb
stc
scas
jle
jmp
inc
fidivrl
cmp
and
fcmovnu
jp
insl
push
add
mov
fildll
cmp
leave
inc
and
ficoms
sub
fimull
sub
push
das
sub
ret
test
mov
mov
cmp
adc
outsl
mov
les
notl
mov
and
push
nop
jg
push
mov
and
jbe
aaa
xor
sahf
mov
ds
mov
cmp
fdivrl
mov
scas
shlb
das
mov
sub
out
xchg
push
in
pop
xchg
mov
ljmp
mov
pop
test
movsl
hlt
sub
sbb
call
pop
in
cmpsb
fcomip
movsb
cmc
mov
inc
and
dec
push
sbb
jns
lods
lcall
adcl
sbb
cmpb
sarb
das
or
add
sahf
adc
mov
gs
push
cmp
cld
mov
dec
inc
mov
aas
and
and
pusha
pop
or
push
daa
inc
push
and
or
fwait
add
inc
xchg
stos
inc
mov
xchg
repz
lods
sub
icebp
ss
fs
bound
push
add
aas
mov
xchg
inc
cmp
add
shll
out
pushf
mov
dec
jnp
jae
je
clc
bnd
lds
ffree
mov
pop
jo
dec
in
mov
or
insl
xor
loop
loop
dec
add
imul
sbb
pop
gs
jo
das
adc
stos
jmp
outsl
fwait
daa
xor
adc
pop
iret
outsb
mov
fsubr
repnz
ds
pop
jge
inc
cmp
push
dec
inc
mov
decl
aaa
or
jno
push
enter
fiadds
inc
adc
sbb
mov
push
pop
mov
xchg
mov
mov
icebp
aam
jb
scas
add
test
out
cwtl
pop
or
fmuls
lock
loope
cmp
jo
mov
ss
xor
std
add
inc
jl
pop
repz
cmp
lcall
daa
mov
inc
dec
ret
cli
loop
cmc
mov
enter
jno
fiadds
sub
push
adc
sbb
leave
subps
dec
test
jp
and
pop
cmp
lods
call
xor
jg
cmp
ss
in
cmpsb
fdivs
dec
insl
adc
outsl
sbb
int3
rol
dec
hlt
mov
pop
js
stc
ss
mov
mov
inc
mov
jno
sbb
push
fwait
mov
mov
push
sub
sbb
lret
loop
mov
adc
add
add
and
pop
cwtl
fldt
test
xchg
xchg
fdivp
mov
pop
mov
push
pop
dec
push
inc
fs
and
mov
scas
lcall
inc
mov
ret
movsl
sub
or
or
fcomps
pop
rol
and
push
xlat
insl
popa
dec
es
out
lea
sbb
sbb
fadd
dec
daa
std
ret
cs
outsl
jmp
lret
dec
inc
push
sub
rol
cs
mov
iret
idivl
repnz
loop
insb
in
push
leave
xor
xor
fsubrl
push
bnd
mov
dec
push
clc
loop
mov
sti
jl
adc
aam
dec
dec
cmp
ja
jbe
mov
add
ss
out
adc
jg
jno
jmp
int3
ds
loopne
push
adc
nop
jo
fmull
es
push
push
xchg
sbb
jp,pn
sbb
fisubl
mov
fcmovu
testb
repz
shll
pushf
lock
fucomip
ja
out
cmp
mov
arpl
cmp
ljmp
cmpsl
pop
adcl
sub
jae
mov
cmpb
aam
xchg
mov
push
or
fwait
adc
es
dec
mov
data16
jg
out
rcrl
push
and
ja
sahf
add
add
fwait
cmc
arpl
scas
push
sarb
mov
push
mov
mov
add
xchg
dec
dec
push
hlt
int3
pop
or
jle
add
pop
jle
mov
jnp
pop
inc
and
jmp
out
xchg
xchg
inc
xor
pop
ss
inc
jo
jle
mov
lret
mov
mov
push
pushf
jbe
pusha
cmpsl
repnz
test
cmpsl
jns
or
xor
sub
push
shlb
mov
addl
fists
aam
cmp
push
pop
fiaddl
lock
lds
clc
fucomp
insl
xchg
mov
nop
pusha
and
add
push
addr16
inc
ljmp
mov
test
andb
pop
jne
or
adc
call
jne
mov
mov
pop
sti
pushf
add
fisubs
push
mov
repz
shll
xor
xor
mov
adc
xor
adc
icebp
mov
fmull
mov
insb
ljmp
popf
mov
cmp
pop
ret
int
fisubl
lods
or
pop
dec
jbe
jg
in
hlt
mov
sarb
test
das
test
sbb
dec
sarl
mov
sub
adc
push
adc
jno
fsub
pop
mov
or
xor
pusha
pusha
pop
movsb
or
out
in
cld
repz
pusha
stos
or
and
push
mov
inc
xor
movsl
pusha
mov
into
jbe
fcmovnb
daa
ret
xor
mov
mov
jns
cmp
movsb
stos
data16
cmp
inc
jb
xchg
or
into
ja
rorb
int
mov
bound
aas
pop
jbe
or
adc
ret
sbb
test
cmpsl
fsub
mov
xor
mov
popa
cmp
lods
sub
xchg
test
addr16
data16
repz
dec
cmp
aaa
lahf
or
mov
pop
jne
xchg
lods
push
imul
inc
sub
cmp
ret
xor
xchg
pusha
cmp
pop
xchg
shl
push
lcall
out
mov
xchg
xlat
test
into
jno
adc
dec
adc
mov
or
cmp
push
aad
mov
lahf
cld
fidivrl
push
lea
jno
push
mov
jmp
call
insl
pop
and
xchg
cmp
clc
dec
repz
xor
cli
fwait
adc
sahf
daa
jae
testw
stos
or
in
sbb
and
pop
or
add
insl
or
sbb
or
outsb
xlat
jb
add
shll
lret
in
fildll
adc
cwtl
aam
popa
outsl
pop
gs
and
pop
jae
cltd
inc
inc
clc
test
sub
movsl
repz
push
cmp
aas
rolb
clc
fildll
jo
xchg
mov
mov
xchg
fcomp
jg
or
aam
lret
push
sub
xchg
fnstsw
add
aam
insl
xchg
mov
lods
inc
insb
sarb
add
adc
cwtl
test
mov
dec
add
or
inc
mov
imul
inc
and
repnz
dec
cmp
je
mov
sbb
adc
sub
inc
pop
mov
dec
xchg
dec
sub
sub
outsb
pop
dec
push
popa
pop
add
mov
outsl
cmp
outsb
mov
or
sub
sub
xchg
icebp
hlt
pop
insl
xchg
xchg
dec
lahf
ret
test
ss
les
xor
mov
je
cmp
mov
jge
push
xor
movsb
pop
lds
aaa
dec
lahf
out
fsubrs
adc
xorl
les
xor
enter
push
and
dec
clc
xchg
loop
mov
cmp
sbb
orl
mov
mov
ds
pop
sub
std
push
scas
inc
hlt
aad
out
fs
push
scas
leave
mov
mov
mov
xchg
jne
das
sahf
rcrl
nop
add
mov
ss
sbb
ret
fbld
les
ljmp
mov
dec
cmp
mov
mov
pop
idivl
mov
inc
inc
popa
test
fisubs
and
xchg
xor
push
add
xor
das
lock
int3
push
cltd
lds
xor
and
mov
mov
mov
sub
fistpll
mov
cmp
pop
jo
push
fisubrs
in
or
cmp
jmp
xchg
dec
mov
inc
das
pop
xchg
mov
add
fidivrs
xor
add
or
rcrb
add
mov
outsl
and
fisttpll
add
es
test
mov
mov
jns
shrl
pop
jmp
mov
and
mov
movsl
ds
mov
nop
mov
jl
xor
dec
mov
cmp
fnstsw
outsb
adc
or
push
pusha
pop
add
aaa
jb
push
push
addr16
xor
mov
fnop
outsb
mov
cmpsl
packuswb
push
ljmp
add
inc
xor
push
mov
mov
dec
ljmp
pop
stos
jmp
jno
sub
js
gs
movsb
mov
maxps
inc
rcr
push
mov
sub
comiss
adc
or
pusha
add
sub
pop
xchg
adc
push
lods
je
cmpsl
andl
mov
in
cmp
popf
ja
fwait
loope
call
fadd
repnz
js
xor
cmpsb
cmp
lock
cmpsl
out
out
fdiv
in
pusha
and
and
sbb
dec
call
std
and
and
sub
mov
dec
inc
pop
lock
sbb
sbb
lret
add
mov
mov
shll
shrb
sarl
lock
pop
pushf
pusha
pop
rcrl
inc
cmc
jnp
mov
movsl
cmp
mov
outsb
call
sbb
cs
stos
mov
std
jg
pop
sub
out
shlb
call
add
popf
repnz
add
mov
jns
mov
ret
clc
mov
inc
fidivrs
inc
mov
xor
repnz
outsl
mov
jb
fnsave
dec
pop
mov
push
pop
push
xchg
dec
add
xor
insl
cld
cmp
sti
lds
test
jg
addr16
insb
push
jl
mov
mov
dec
test
stos
stos
adc
push
mov
jecxz
xchg
loop
xchg
leave
mov
sub
out
cli
jno
mov
lds
cmp
decl
jge
mov
mov
flds
data16
xchg
das
stos
adc
test
sub
nop
rcrl
orl
adc
ret
scas
adc
rcrb
mov
jp
pop
das
jne
sbb
pop
cmp
outsl
lret
mov
inc
gs
sub
cwtl
shrl
push
loop
lcall
adc
pop
lret
or
fwait
pop
push
scas
or
clc
js
dec
or
inc
mov
inc
cmpsb
iret
mov
sub
ss
mov
add
aaa
in
mov
xchg
aaa
jns
fidivs
inc
mov
daa
addr16
dec
jmp
jbe
imul
es
adc
dec
rclb
popa
sti
or
jno
push
std
aam
nop
mov
mov
push
movsl
push
js
dec
bound
les
aaa
repnz
lock
sub
repz
and
fnstenv
pop
lds
mov
out
mov
xor
insl
jl
cmp
sahf
push
rol
dec
divb
arpl
adc
mov
fbstp
xor
ret
inc
inc
movsb
lods
pop
jnp
repnz
aaa
jno
add
inc
popf
push
rclb
pop
or
or
mov
clc
mov
addr16
xor
bnd
out
jg
jle
cltd
sub
int
lret
pop
add
mov
dec
dec
aam
adc
and
out
jmp
je
cmpsb
ret
outsb
dec
shrl
aam
push
jecxz
shlb
mov
shll
sahf
popa
fsubs
mov
xor
mov
imul
jmp
jnp
int3
dec
add
push
xor
jg
ss
imul
sti
call
cli
add
xchg
or
dec
adc
xchg
sub
aaa
dec
enter
lea
xor
pop
sub
or
pop
adc
popa
inc
div
test
jae
ret
daa
loope
cmp
mov
mov
ds
and
aaa
pop
imul
test
lret
shrl
jle
rorl
and
sbb
mov
lock
sbb
cmp
jno
leave
xchg
dec
stc
xchg
jle
inc
dec
repz
hlt
lcall
xchg
ret
or
jecxz
sub
adc
jecxz
inc
pop
adc
scas
add
sub
scas
cs
pop
pop
sbb
inc
fwait
push
bound
dec
adc
sti
das
xchg
dec
xchg
pusha
ss
jge
and
out
cli
dec
pop
sub
xorb
aam
scas
inc
es
loopne
push
push
cltd
add
mov
push
jle
movsl
mov
mov
push
imul
insb
fnstenv
push
pop
push
nop
push
add
xchg
inc
pushf
int3
xor
xor
lock
cld
enter
rclb
xor
jge
leave
jecxz
cmp
in
dec
scas
jl
iret
test
jae
jl
cmp
sti
and
xor
out
cmp
push
cmp
push
fadds
js
mov
xor
sbb
testl
mov
aas
movsb
push
sub
syscall
cmp
shlb
icebp
test
nop
push
and
lahf
pop
mov
jns
addr16
es
decl
fcoms
repz
mov
out
mov
jl
loop
and
mov
nop
in
mov
ficoml
or
xchg
dec
inc
leave
cmpsb
insl
pop
aam
add
push
iret
data16
dec
into
mov
or
lss
data16
jl
inc
cmp
sbb
mov
addl
orb
lds
roll
jge
or
mov
or
cmp
add
or
dec
add
outsl
mov
push
aad
mov
add
lods
out
cmp
adc
repz
and
jnp
test
imul
push
add
adc
stos
aaa
xorl
adc
xchg
pop
jb
jmp
movsb
shlb
xchg
shr
gs
mov
fcmovu
inc
push
cmc
add
mov
daa
add
and
cltd
or
dec
pop
pushf
daa
cmp
nop
out
push
or
inc
mov
sbb
sub
sub
adc
sbb
data16
outsb
inc
insl
icebp
ret
add
dec
jns
in
popf
aam
push
loope
add
adc
xchg
mov
mov
inc
xorl
lret
add
cmpsl
xchg
cmc
mov
dec
scas
jns
andl
lahf
jb
pop
call
and
loopne
cmpl
fstpl
pushw
and
clc
dec
push
andb
std
shrb
sbb
jbe
xchg
out
outsl
push
in
stos
ss
pop
scas
clc
lret
ficomps
shrb
sub
mov
aas
leave
lock
xchg
inc
aas
cmp
add
icebp
mov
push
daa
or
pop
call
xor
mov
inc
push
sahf
insb
lcall
xor
rcr
sub
out
insl
or
and
inc
sbb
icebp
add
add
enter
cmp
sarb
pop
jns
push
mov
mov
lahf
xchg
loop
sub
shrb
jl
fbstp
push
movsl
push
xor
test
js
inc
stc
nop
je
sub
sbb
push
dec
movsl
shll
mov
pop
jns
mov
sbb
stc
bound
jmp
sbb
mov
add
and
loop
sbb
scas
xchg
ss
sbb
sbb
inc
ror
fsubrs
imul
add
cmpsb
adc
jmp
lahf
adc
pop
cli
xorl
loopne
lock
sbb
push
aam
or
cld
mov
ss
std
ss
ljmp
jns
aad
and
int3
and
outsb
into
mov
in
and
push
stc
jecxz
ds
jp
mov
sub
std
mov
imul
sahf
sub
out
cmp
addr16
divl
xchg
or
mov
push
subb
adc
mov
xchg
dec
adc
lds
in
aas
sub
es
loop
cltd
xchg
xchg
pushf
movb
inc
dec
cmp
arpl
adc
das
lods
xchg
cmc
xor
and
shll
mov
pop
inc
cwtl
rcrb
sub
dec
inc
mov
sarl
mov
arpl
stc
nop
jle
test
mov
jp
dec
xor
sahf
add
and
imul
fs
scas
dec
pusha
jnp
ljmp
sti
sbb
mov
sti
sbb
loopne
loope
mov
test
repnz
pop
xor
mov
jae
xchg
nop
dec
inc
push
xor
adc
pop
test
mov
sbbl
sub
add
aam
jbe
push
insb
push
pop
movsl
addr16
xchg
mov
mov
adc
lcall
test
mov
out
pop
dec
fldt
jo
cmp
xchg
mov
cld
push
xchg
mov
push
nop
jae
add
movsl
adc
mov
call
jno
dec
adc
mov
jnp
inc
mov
cmp
jno
adc
xchg
js,pt
mov
test
push
pop
or
dec
sbb
jns
repz
mov
ret
xor
rorl
adc
shl
sti
loopne
sbb
mov
mov
add
dec
mov
mov
cmp
inc
add
push
in
jnp
cmpsb
mov
sub
jge
iret
mov
aaa
je
inc
test
sbb
jmp
fldenv
fisttpll
cmc
divl
repnz
inc
fbstp
pop
daa
xor
cltd
stos
mov
push
call
pop
daa
ffreep
cmp
out
pusha
inc
or
jne
pusha
adc
push
loope
xchg
sub
inc
inc
dec
push
mov
sub
push
xchg
aaa
xor
in
das
push
popa
mov
and
jge
jae
push
or
mov
repnz
lahf
iret
in
outsl
cmpsl
inc
fstpl
pop
jle
sbb
fisttpll
out
dec
mov
or
push
ds
int
xor
cli
cwtl
adc
push
sbbl
pop
xchg
mov
movsb
sub
scas
and
scas
mov
cltd
or
pop
sub
jmp
sbb
cltd
mov
stc
add
inc
pop
mov
push
cmp
mov
inc
sub
or
decb
add
cmc
addb
dec
popf
out
xlat
aam
sbb
jnp
pop
cmp
pop
mov
sub
mov
lods
push
lret
dec
cli
test
and
lahf
pop
adc
sbb
stos
movsl
lret
fiaddl
and
mov
pop
xlat
je
push
add
jbe
jecxz
std
push
sub
fwait
lcall
xor
jmp
mov
sub
sbb
sbbb
mov
mov
jbe
jge
rcrl
push
insb
rolb
pop
jns
jmp
dec
dec
gs
loope
fdivs
sbb
cmp
adc
fs
lea
lods
ljmp
cmp
inc
sbb
loope
in
mov
shlb
or
pop
shl
mov
bound
inc
mov
pop
into
pop
sbb
add
pop
frstor
xchg
sbb
push
sti
cs
in
fdiv
jnp
push
xchg
xlat
xchg
stc
push
addr16
lds
adc
and
fildl
dec
xor
pop
insl
jg
ret
xor
aas
jo
ljmp
xor
int3
aaa
xor
inc
icebp
lds
jo
es
gs
rep
sub
push
and
jmp
imul
sub
int
xchg
cmp
ds
mov
sub
mov
mov
out
lock
mov
daa
xor
push
mov
cmp
xor
or
add
das
xchg
mov
clc
dec
into
jne
gs
sti
rorb
push
jge
jg
or
or
pop
fdivl
sub
movsb
cmp
pop
loope
pop
bound
loopne
cmp
mov
add
leave
frstor
xchg
lds
pop
aaa
pop
xchg
add
pop
inc
movsb
testl
fdivl
jmp
cmpl
jae
mov
shlb
in
lret
xor
inc
lahf
sub
loope
push
mov
je
mov
mov
lahf
sub
cld
or
stc
scas
cmp
bound
int3
push
mov
js
dec
fdivr
xor
and
jg
pop
js
mov
pop
push
mov
xchg
xor
scas
dec
lcall
xor
dec
mov
push
dec
mov
popf
iret
cli
out
sbb
push
nop
xor
sbb
xorb
xchg
stos
adc
lods
mov
dec
fsts
inc
aaa
and
xchg
and
gs
inc
adc
aaa
push
dec
inc
sbb
pop
int
std
mov
imul
xchg
std
das
cmpsl
dec
inc
jbe
hlt
xchg
rcr
gs
or
fistl
stos
add
push
cmp
inc
aad
das
les
sbb
mov
mov
cmpb
imul
mov
cld
fldt
in
xchg
arpl
mov
frstor
sub
pop
sbb
bound
orl
hlt
in
dec
faddl
lods
inc
sub
adc
insb
lret
add
push
mov
movsb
pop
add
inc
mov
sub
xor
jnp
cmp
ss
fidivs
ljmp
rcr
jne
std
out
test
mov
out
mov
nop
jnp
sub
xor
cmp
iret
adc
scas
lock
test
sub
add
imul
clc
adc
inc
mov
sarb
loop
xor
mov
cwtl
pop
les
repz
pop
inc
sub
nop
jae
outsb
inc
xchg
ret
int3
imul
roll
rcrl
pusha
adc
mov
push
fnstenv
adc
sub
out
cld
outsl
shl
pop
outsb
js
ja
in
mov
mov
jo
ja
lret
cmpl
or
and
lcall
adc
adc
or
div
jmp
jae
jnp
stc
or
jnp
push
pop
mov
repnz
scas
xchg
hlt
ret
ss
clc
xor
imul
mov
mov
sbb
xor
xchg
icebp
xchg
outsb
fsincos
es
clc
xchg
pop
mov
xchg
pop
xchg
mov
rorb
xor
je
repz
data16
fwait
and
daa
jne
cli
rcr
inc
arpl
leave
dec
ds
sbb
xchg
inc
adc
jge
dec
push
outsl
push
into
push
test
mov
ret
xor
push
push
lahf
pop
jbe
repz
fadd
mov
fsubp
or
xor
inc
lahf
sub
outsl
and
and
repnz
cli
and
and
mov
hlt
dec
lahf
punpcklwd
xor
arpl
xor
inc
sbb
or
mov
sbb
or
push
inc
lret
sti
jle
add
scas
xchg
inc
pop
sub
mov
xchg
dec
pop
cwtl
jae
and
lds
fistl
xchg
pusha
les
sbb
into
mov
jmp
push
aaa
int
jmp
dec
xchg
adc
inc
add
sbb
xchg
inc
leave
repnz
cltd
les
or
popa
and
xchg
add
mov
test
jo
pop
addr16
aad
inc
jae
lret
cmc
cld
fmul
insl
mov
je
std
cmp
and
ss
lret
inc
xor
lret
adcl
mov
sbbl
mov
xchg
cmp
xchg
test
aaa
jmp
jmp
shrl
call
popa
or
loop
cmp
push
inc
or
daa
pop
xchg
sub
add
mov
add
jge
cmp
int
test
pop
inc
ljmp
and
cmp
out
pop
stc
inc
jns
nop
xor
and
or
mov
cmp
pusha
fdivl
ljmp
ret
dec
xor
add
push
aaa
loope
shl
xchg
mov
mov
addr16
jb
mov
cmpsb
xchg
cmp
mov
nop
pop
cmp
mov
fisttps
ja
xor
mov
inc
enter
mov
push
outsb
lret
jle
cld
mov
dec
mov
mov
test
cmpl
cltd
sbb
jmp
mov
inc
stc
cmp
adc
sbb
dec
pop
aaa
push
or
adc
pushf
jnp
pop
rcr
jns
jnp
xchg
imul
pop
stos
push
mov
mov
dec
fs
sbb
mov
push
jns
imul
and
or
cmpsl
or
fstpt
adcb
into
scas
cmpsb
lcall
int
xchg
dec
cmp
jmp
cmpsl
enter
mov
xchg
mov
sti
in
fiadds
out
cmp
in
mov
pop
rorb
lret
scas
push
xchg
push
out
xor
jl
sub
in
push
addr16
pop
push
cmp
inc
add
mov
bound
mov
ss
popf
push
les
fs
outsl
cmc
add
xchg
pusha
int
mov
pop
jg
mov
sub
scas
mov
sbb
aad
xchg
sti
jae
push
sbb
pop
fsubrl
movsl
icebp
cmpb
mov
mov
sub
daa
push
push
xchg
jnp
bound
fs
adc
shlb
adcb
inc
mov
stos
insb
movsl
push
aaa
xchg
mov
fstp
cmp
push
cmp
xchg
inc
fisttpl
lods
xor
or
loop
adc
jne
movsl
xchg
fildll
lods
daa
bnd
notb
jo
ret
push
mull
xchg
sti
and
mov
ret
adc
push
cmc
lret
jo
cmp
ret
sub
mov
xchg
rolb
data16
es
jp
jmp
test
push
test
jl
dec
fwait
push
dec
xor
mov
int
gs
lret
xchg
cmp
rcll
or
rolb
mov
mov
out
pop
dec
cli
cmp
punpckhwd
clc
adc
ss
in
popf
andb
xchg
loope
out
inc
xchg
fdivrs
sarb
testb
movsl
sub
inc
jo
sti
pop
mov
adc
dec
outsb
in
jmp
cmpsl
ret
popa
fidivs
pop
jg
insb
flds
test
loopne
add
shll
lods
xor
andl
mov
add
push
xchg
ret
dec
clc
loope
or
and
sbb
into
and
std
dec
js
das
mov
jge
or
cmc
shl
cltd
les
inc
leave
push
cmpsl
enter
sar
xor
and
jp
inc
mov
pushf
das
adc
add
cld
add
imul
je
mov
push
jns
ja
jno
mov
adc
add
adc
aaa
xor
mov
jge
sti
jg
mov
pop
jmp
jmp
orps
pushf
xlat
orb
rcrl
adc
pop
lock
stos
cltd
ficoms
mov
shrl
outsl
pop
fists
cs
ljmp
xchg
test
stos
pop
fdivr
adc
xor
lds
stos
jne
mov
sbb
hlt
pop
sub
jge
lods
ds
lds
dec
testl
sbb
xchg
jmp
ret
xchg
movsl
aam
jge
push
shl
fists
call
fs
sub
xchg
pop
xchg
mov
mov
push
ret
or
ficompl
inc
inc
xor
stos
mov
adc
xchg
add
movsl
daa
loopne
roll
add
addl
outsl
cmp
adc
jge
jno
mov
adcb
add
mov
adc
divb
enter
lcall
jmp
dec
pop
clc
and
data16
pop
fists
nop
dec
sbb
adc
fst
mov
dec
inc
pop
xlat
ljmp
xchg
repnz
sub
or
lods
cmc
add
inc
movsl
incb
and
or
fidivrs
pop
movsl
xor
sub
mov
js
popf
cmpsl
fidivrs
xchg
jmp
dec
xor
pop
out
xchg
xor
jg
xchg
sarl
mov
in
pop
lods
inc
sbb
xchg
hlt
test
mov
push
jmp
loopne
jae
adc
pop
mov
nop
cmpsl
repnz
inc
pop
inc
loope
incb
rcrl
pop
pop
xchg
add
cmp
loop
out
push
call
mov
sbbl
xchg
iret
das
adc
insb
mov
lcall
fisttpl
fidivrl
inc
mov
arpl
pop
xchg
hlt
jmp
or
mov
push
xchg
dec
ljmp
outsb
ds
inc
dec
pop
add
push
insb
aad
cmp
out
rcl
mov
adc
sbb
inc
push
jbe
push
xlat
jae
rcrb
mov
je
je
aad
aas
mov
lods
mov
mov
jle
imulb
mov
mov
xorl
movsb
dec
mov
mov
mov
cmpsl
mov
and
testl
xorl
mov
sub
jp
push
mov
in
outsb
cltd
fprem1
inc
out
in
jge
std
dec
push
sub
xor
lds
popa
and
xchg
rcrb
xchg
test
dec
jge
gs
push
dec
fs
test
stc
xchg
inc
mov
or
push
fistpl
std
cli
pop
add
xor
rorl
and
mov
xchg
pop
jmp
fs
inc
adc
add
sti
loopne
adc
sub
sub
sub
cmp
pop
jge
xor
and
add
pop
adc
jbe
pushf
xlat
inc
or
and
addb
mov
mov
addr16
pop
je
lcall
pop
sahf
inc
inc
out
pop
fnsave
test
ljmp
sahf
jns
mov
and
mov
add
fcmovnb
movl
sbb
pop
aaa
xchg
adc
shrb
dec
imul
jle
test
in
mov
adc
into
aas
xor
pushf
jns
push
jnp
andb
repnz
fcom
ffreep
or
add
sbb
ret
xchg
dec
addb
or
push
mov
inc
call
inc
scas
inc
inc
hlt
cltd
pusha
mov
jne
lret
negb
ss
arpl
mov
stos
push
test
mov
dec
je
pop
push
mov
inc
mov
data16
fnstsw
outsl
push
rcr
outsb
cmp
es
adc
adc
fwait
xchg
and
cmp
push
movsb
inc
shlb
out
das
sti
lds
and
aad
xchg
sbb
loop
js
push
add
cltd
scas
sub
iret
aam
lods
push
les
mov
lret
sub
fwait
iret
cmp
xor
hlt
popa
push
insb
leave
loope
rclb
out
push
mov
es
addr16
jns
and
add
hlt
xorb
loope
sbb
cmpsb
js
faddl
stos
sub
xchg
cmp
out
outsb
or
insl
scas
mov
mov
addr16
mov
shrb
sub
popf
mov
fs
adc
sbb
jg
aad
push
out
xchg
outsl
mov
xchg
or
or
les
jmp
cmp
pop
fistps
and
sbb
mov
mov
enter
mov
xor
mov
dec
aas
pop
sub
jl
out
mov
xchg
outsb
out
pop
adc
or
push
pop
lahf
or
mov
int3
ja
fwait
mov
out
cld
push
or
inc
out
sbb
pushf
fisubrs
fwait
out
aad
imul
dec
sub
xor
dec
add
data16
jne
sbb
jno
out
scas
cmp
dec
lock
jbe
and
pop
icebp
cmp
jb
xchg
pop
fbstp
pop
divl
dec
imul
sub
jmp
xchg
or
mov
mov
xchg
xchg
mov
dec
push
and
mov
mov
or
ret
cmpsl
mov
mov
or
cwtl
sub
jle
ljmp
mov
fwait
mov
cmp
mov
pop
mov
les
cmp
sbb
or
add
push
xchg
outsl
repz
loope
xrelease
ret
aam
push
xor
add
arpl
sbb
jb
dec
ret
pop
pop
jge
pop
mov
fsubs
gs
mov
hlt
clc
js
mov
stc
and
scas
ljmp
ss
mov
pop
addr16
cmc
idivb
inc
out
mov
jg
scas
mov
fcomip
daa
sbb
hlt
sub
sti
insl
sbb
insl
call
roll
pop
inc
insl
je
adc
ljmp
mov
xchg
pop
fcomps
icebp
cld
sahf
mov
jecxz
inc
dec
xor
push
jp
mov
lret
rolb
cmp
adc
pushf
mov
xchg
push
pop
xor
cmp
push
sbb
xchg
cmp
push
jg
pop
mov
push
or
lret
icebp
and
xor
inc
movsl
fistps
push
aaa
lahf
ss
test
dec
fisubs
push
mov
adc
inc
add
push
mov
dec
mov
lds
or
iret
push
hlt
sub
cmpsl
test
push
daa
movsl
loopne
pusha
or
mov
fidivs
dec
into
jo
add
xor
mov
lret
clc
and
leave
jno
push
cmc
cli
stos
out
loop
ds
push
xchg
pop
jo
in
sub
push
bswap
fs
mov
add
pop
orl
mov
fmul
addr16
add
inc
push
and
arpl
clc
push
push
cmpsb
inc
and
lcall
pop
pop
xchg
movsl
in
pop
push
rol
adc
sbb
xor
or
hlt
pop
cltd
lahf
dec
mov
call
fwait
push
or
aam
push
sbb
push
add
cmp
hlt
add
push
pop
enter
sbb
insl
out
pusha
push
test
sub
mov
adc
push
jno
push
mov
dec
push
out
or
cmp
in
push
sub
mov
cli
dec
in
loopne
lret
sbb
je
lods
mov
ret
pushf
mov
popf
mov
incl
cwtl
mov
rcll
popf
sub
arpl
cmc
mov
pop
mov
xchg
cmp
jmp
pop
testl
pop
xchg
es
std
das
mov
imul
push
sub
mov
inc
mov
fmuls
xor
out
push
ljmp
mov
in
popf
repnz
mov
add
xchg
mov
pop
adc
insl
bound
dec
inc
lret
xchg
sarb
scas
push
push
into
and
lahf
mov
mov
jnp
enter
push
enter
mov
stos
inc
mov
dec
mov
outsl
jns
iret
aam
sub
push
inc
jne
push
inc
cmp
cmp
sub
cli
dec
pusha
cmpsb
mov
and
or
adc
mov
add
pushf
repnz
dec
mov
in
arpl
pop
lret
sub
mov
shrl
jb
and
jb
aad
hlt
lahf
rcl
mov
or
push
or
jae
mov
fstl
dec
sub
pop
es
jo
lret
in
and
inc
arpl
xchg
fs
xorb
leave
test
xchg
test
testb
mov
pop
dec
pop
add
push
sbb
xor
jno
fs
sbbl
adc
clc
mov
jl
into
fadds
rcl
shll
xchg
bound
add
jb
neg
sub
xlat
pop
adc
pop
add
mov
jmp
adc
sar
std
push
in
push
pop
test
mov
xor
jmp
dec
shrb
push
inc
adc
push
call
popa
inc
imul
rcl
mov
jle,pn
fistl
lret
into
in
xchg
stos
fsubl
or
sahf
mov
jle
orb
cmp
std
ljmp
ljmp
adc
xor
mov
mov
jg
xor
mov
and
insl
aas
mov
rorb
sbb
daa
leave
mov
mov
rolb
ss
adc
push
movsl
or
pop
testb
xor
or
lds
std
xor
mov
push
ret
loopne
data16
sbb
repz
adc
decl
das
pop
out
and
pop
push
xor
outsl
jmp
ficomps
xchg
push
testl
jmp
push
sbb
jle
jb
lret
sbb
mov
push
xchg
dec
and
idivl
cmp
xchg
data16
bound
rclb
add
sbb
pop
js,pt
das
sbb
in
push
fsubl
sbb
mov
xchg
fs
test
and
insl
dec
lahf
sub
xchg
lret
xchg
rorl
clc
inc
jecxz
pop
mov
cmpb
add
push
dec
mov
das
lahf
jmp
cmp
cld
arpl
test
test
data16
daa
pop
fcomps
fwait
adcb
dec
jmp
and
pop
int
adc
mov
mov
shrl
mov
or
jmp
cmc
scas
mov
jge
scas
push
mov
divl
inc
shl
jb
mov
ret
inc
or
insl
pop
lcall
daa
lret
xlat
sub
icebp
cli
inc
or
std
or
add
insb
jae
xchg
shrb
fucomip
int
or
pop
rcl
daa
sbb
xchg
cmp
das
push
movsl
int3
out
out
sbb
xor
xchg
jl,pn
dec
call
jmp
adc
popf
xchg
lahf
punpckhbw
pusha
sub
in
not
adc
stc
xor
pop
or
mov
adc
loope
or
xchg
popa
dec
cmp
mov
cmp
push
push
cmpsb
test
test
int
filds
fabs
push
pop
mov
lea
push
pop
pushf
xor
add
cli
sbb
out
jae
or
pop
ja
ja
lret
and
loop
out
push
enter
mov
push
loop
lret
enter
or
pop
and
bound
and
push
addb
fwait
mov
mov
jl
adc
mov
dec
cmp
call
leave
mov
scas
orb
xchg
pushf
xchg
push
fsubrs
pop
jne
and
xchg
in
jmp
ret
fnstsw
in
data16
call
push
ret
adc
hlt
xchg
call
call
pop
mov
mov
stos
aaa
ljmp
add
in
push
push
mov
outsl
pusha
fdiv
jecxz
xchg
sub
out
aam
je
ss
add
jecxz
cltd
arpl
sbb
data16
ljmp
sbb
in
mov
add
push
sbb
push
lods
inc
xorb
fdivrs
lea
rolb
inc
lret
xchg
and
inc
pop
ret
ror
mov
push
dec
sub
mov
dec
in
xor
mov
cwtl
jno
clc
jp
int
mov
push
pop
je
dec
cld
inc
loopne
inc
cli
cmpsb
sub
lods
adc
pusha
add
mov
bound
sub
add
daa
add
lods
sub
add
jne
loopne
insl
js
scas
in
scas
cwtl
enter
dec
incb
jp
in
fisubrs
mov
mov
mov
push
jl
add
lcall
inc
xchg
inc
aaa
xor
aad
jecxz
ja
xchg
push
mov
out
ficompl
and
lock
xor
andl
pop
xchg
dec
pop
arpl
push
enter
inc
add
les
dec
cmp
cwtl
cltd
cmpsb
mov
xchg
aaa
add
mov
out
negb
cmp
int
push
xor
divl
add
add
mov
cmp
mov
out
out
out
or
les
dec
popf
mov
loope
jl
mov
jge
cli
adc
or
out
test
sarb
cmp
dec
pop
pop
dec
adcl
pop
ss
push
inc
jne
orl
ret
pop
aad
out
cs
pop
or
cmpsl
lea
popa
aad
mov
daa
int
mov
in
sbb
divb
ja
pusha
cmp
je
lcall
in
cwtl
int
and
or
out
fsubr
fsin
test
scas
test
xchg
mov
sub
jne
mov
jg
addr16
loope
sbb
aad
jmp
int3
and
mov
or
scas
jge
and
addr16
cmpsb
push
cmp
xchg
arpl
xor
mov
js
mov
mov
int
pop
adc
mov
pusha
xor
aam
bound
pop
mov
cmpsl
into
cmp
inc
mov
rclb
subb
and
pop
ds
aam
lahf
movsl
sub
push
call
mov
add
mov
stos
or
cmp
mov
adc
out
rolb
and
mov
add
pop
xor
gs
pop
inc
or
lret
and
fwait
cmpsb
jb
je
mov
icebp
ljmp
jbe
ret
cltd
leave
add
dec
inc
mov
push
and
mov
push
inc
cmp
sub
xor
inc
push
adc
push
sbb
stos
adc
push
call
cmovae
dec
sbb
loop
outsb
fwait
insb
pusha
es
test
inc
jno
in
das
mov
sub
movsb
dec
jne
cmp
ret
add
pop
adc
mov
mov
xorl
xor
pop
shl
pcmpeqw
adc
fldcw
jbe
aaa
jnp
int3
pop
into
lock
jae
mov
push
pop
jecxz
pop
rolb
pop
out
and
push
insb
jmp
push
dec
enter
scas
aad
or
sarb
out
je
sbb
dec
mov
mov
test
fisttps
push
dec
adc
and
or
adc
pop
sbb
fwait
mov
fcoms
das
jge
sarl
cmc
xchg
clc
rcrl
test
shrl
mov
mov
fisubs
jg
sti
push
xlat
aaa
xchg
jecxz
shll
inc
xchg
add
out
adc
nop
jp
cld
fwait
cli
push
jp
roll
mov
sub
test
scas
lods
push
ja
and
lahf
mov
loopne
jnp
jae
aaa
push
dec
movsb
call
mov
mov
sahf
outsb
dec
ljmp
lock
cmp
scas
movsw
jbe,pt
xor
xor
jg
push
xor
daa
or
and
mov
push
std
pop
dec
cmp
ljmp
jge
push
lds
int
mov
test
in
mov
lods
test
mov
popf
pop
repnz
cmpsl
mov
movsb
mov
jl
and
push
mov
mov
jns
jae
lahf
pop
inc
push
rcll
js
jmp
mov
scas
xchg
scas
fldl
add
sbb
jno
inc
dec
mov
shll
cld
fisubrl
inc
jne
rcrl
and
pop
out
sbb
pop
cld
pop
mov
xor
in
or
pop
nop
mov
insl
loopne
dec
mov
xor
movsl
lret
in
repz
add
push
js
lds
adc
popf
popf
lea
push
iret
ljmp
push
mov
pop
loop
adc
cmp
jge
push
negb
fldt
shr
mov
inc
repz
xor
fcompl
cmpb
mov
mov
pop
scas
mov
jae
jge
adc
enter
mov
rcll
stc
rol
das
push
roll
rcll
or
pop
dec
jo
dec
push
outsb
fcom
jmp
inc
ds
push
lahf
out
pop
cmp
mov
and
and
fsubrl
xchg
xor
push
ret
mov
push
jno
outsb
fs
sbb
or
shll
ds
inc
lods
inc
cmpsb
es
push
add
shl
in
bound
add
stos
and
sbb
ljmp
cmp
sbb
mov
inc
push
sub
fs
mov
ficompl
ljmp
mov
call
jne
enter
jmp
aaa
mov
mov
mov
movb
push
jmp
jb
imul
push
ss
xor
insl
int
pop
fwait
popf
out
or
ss
outsb
int
pop
lret
ret
sbb
mov
movsl
push
pop
mov
popf
pop
mov
popa
pop
int3
push
out
es
data16
jae
lret
out
or
and
push
pop
sar
pop
inc
dec
inc
mov
mov
push
mov
movsb
xchg
jle
leave
sti
test
dec
push
inc
imul
mov
adc
adc
int3
push
or
mov
jmp
clc
loopne
roll
xor
out
pop
sbb
sbbb
sti
pop
jecxz
mov
xor
cmpsb
mov
sub
cs
sbb
mov
stc
pop
data16
inc
test
stos
jge
imul
sbb
and
jne
lods
dec
mov
push
jnp
add
stos
mov
pop
dec
xor
fdivs
mov
jmp
test
imul
push
nop
daa
jg
push
jns
js
pusha
aaa
mov
enter
icebp
nop
push
sub
jae
cltd
divb
add
out
cmp
pop
testb
mov
jno
gs
dec
icebp
adc
idivl
cmpsb
inc
aas
ficoml
icebp
ss
out
cmc
xchg
aad
inc
mov
fs
inc
in
mov
mov
sub
sub
addl
adcw
jl
push
dec
push
push
add
inc
lea
jne
test
nop
pop
fistpll
pop
sarb
bnd
inc
pop
push
addr16
jmp
cmp
lcall
fmull
test
popa
jmp
sti
bound
jns
add
mov
and
std
xor
mov
jecxz
sbb
cmp
inc
ja
sti
cmp
xchg
fs
pop
sub
xchg
into
test
cmpsb
scas
mov
test
iret
mov
mov
xchg
js
inc
rclb
testl
adc
sbb
cmpsl
mov
push
dec
or
std
lahf
lcall
popf
jbe
mov
jp
test
lods
movsb
adc
dec
js
dec
mov
mov
pop
mov
push
inc
sub
sbb
jo
cli
mov
inc
mov
push
or
cli
bound
xchg
cmp
std
rorb
ret
incb
push
dec
jbe
mov
gs
into
aad
ret
dec
mov
sbbb
push
pop
push
ret
push
mov
test
mov
push
cltd
sbb
mov
push
fucom
inc
test
push
jecxz
pop
add
or
mov
add
popa
lds
mov
fs
sub
mov
das
jg
push
mov
dec
mov
int
pop
js
sub
lods
dec
pop
mov
push
aad
add
lcall
out
incl
mov
or
add
ret
sbb
repnz
push
test
es
out
xchg
jle
movsb
or
mov
js
aaa
jmp
es
mov
sbb
lahf
shlb
mov
ret
mov
xor
pop
mov
jl
sbb
push
mov
pop
pop
inc
pop
sbb
pop
sti
pop
mov
es
cmpsl
jmp
pushl
daa
into
cmc
sbb
mul
push
lret
mov
or
out
ds
jl
lock
mov
xor
enter
adcb
movsl
or
or
xor
adc
out
push
scas
in
mov
daa
push
dec
call
fwait
lea
jnp
and
mov
jg
mov
cmp
in
adc
xor
cmpsl
xor
hlt
es
clc
or
shll
mov
cmovle
xlat
fsubl
sbb
sub
int3
sbb
dec
nop
add
xchg
push
mov
dec
xor
push
pushf
push
ds
shrl
data16
ss
mov
sub
int3
ficoml
cwtl
xor
lds
jb
loopne
xchg
cwtl
or
in
mov
adc
xchg
dec
testb
jb
pop
pop
sub
xchg
jo
pop
and
pop
out
imull
cmp
adc
mov
dec
push
scas
sbb
clc
imul
pop
rcr
add
imul
lret
cli
sub
icebp
mov
scas
sahf
sub
push
imul
xor
fs
jp
pop
das
je
ljmp
inc
jnp
and
mov
std
xchg
pusha
in
dec
sti
mov
jb
push
hlt
in
xor
cs
pop
rcrb
mov
fistpll
mov
fwait
shlb
leave
popf
fdivrs
repnz
idivl
roll
aas
daa
jns
dec
call
movsb
nop
pop
inc
loop
inc
out
push
jg
icebp
aas
cmpsl
lock
sub
fdivl
push
or
into
dec
jmp
sbb
fcomps
cmp
xor
stos
jmp
pop
dec
xchg
fcompl
nop
ret
stos
pop
mov
andl
inc
push
ss
cltd
rolb
movsl
les
mov
inc
dec
imul
insb
fistl
sti
and
out
dec
push
xchg
pop
test
into
and
mov
lods
jno
lret
das
jge
or
lret
pop
adc
movsb
cmc
mov
dec
cmp
xor
dec
pop
andl
mov
dec
add
out
out
test
ret
add
add
loopne
popfw
pop
fwait
call
addl
fiaddl
inc
lret
or
mov
push
lret
adc
or
and
loop
dec
pop
sub
sub
jnp
sbb
xor
inc
push
jge
sub
ret
xor
pop
jmp
in
out
shlb
inc
pusha
adc
sub
fnsave
pop
or
push
jo
ljmp
or
pop
rclb
pushf
cmp
inc
jbe
inc
cmp
fsubs
sti
fidivs
lahf
enter
jno
push
stc
jae
add
sub
push
out
mov
adc
rorb
sbb
push
enter
mov
fcomp
imul
xchg
xlat
mov
rcl
popw
sub
cli
push
pcmpgtd
aas
inc
sbb
jo
shl
pop
pushf
test
test
js
mov
jae
jb
addr16
xor
addb
lret
ficoms
sub
scas
xchg
sub
mov
jg
or
cmp
cmp
cmp
leave
mov
add
dec
xor
and
sbb
push
in
jae
popf
insb
es
in
adc
movsb
imul
cld
loopne
addr16
icebp
icebp
inc
lea
push
icebp
push
fsubp
jo
xor
jno
fisttps
lret
xor
nop
or
mov
fldl
pop
filds
popf
push
sbb
popa
iret
shlb
mov
mov
jo
mov
sti
or
vmovd
in
push
mov
push
cmpb
in
or
pushfw
jo
idivb
arpl
adc
jg
leave
adc
jnp
xor
fiadds
pop
xlat
filds
xor
mov
lahf
sarl
cmpsb
data16
xchg
adc
fldenv
js
mov
sahf
pop
in
iret
vpmacssdqh
jge
mov
mov
add
addb
and
push
xchg
addl
and
sbb
xchg
outsb
adc
into
dec
mov
mov
ret
mov
dec
cmp
jg
push
push
pop
inc
mov
xchg
xor
or
cmpsb
movsl
les
inc
mov
push
data16
iret
pop
jae
cmpsl
icebp
pop
repz
adc
push
mov
ret
scas
in
mov
or
popa
xchg
inc
jo
add
imul
fcomip
in
imul
jl
dec
push
aas
shufps
out
dec
ror
adc
shl
mov
sub
rcrl
adcb
mov
sub
out
scas
xchg
and
push
push
sub
cmp
xchg
pop
mov
js
fdivr
jb
sub
ret
or
adc
add
loop
push
mov
cmp
sub
out
cmp
mov
mov
imul
pop
dec
aam
sbb
xor
data16
or
cwtl
iret
dec
push
push
and
jecxz
test
pop
xchg
loopne
les
rcl
sbb
jg
pop
mov
fsubrl
cmc
fiaddl
mov
test
ljmp
inc
adc
dec
push
mov
and
int
fistpl
lds
lock
pop
insb
sti
push
rcll
mov
adc
or
je
mov
adc
xchg
adc
addb
repz
das
daa
in
or
nop
mov
lods
fldcw
mov
aas
mov
inc
cmp
mov
adc
and
push
shrb
iret
push
stos
lret
jmp
sub
inc
pop
lcall
push
mov
lret
push
and
call
dec
push
cs
xchg
repz
or
and
je
push
mov
adc
test
stos
push
repnz
add
mov
push
mov
mov
popa
rclb
outsb
xor
sbb
outsb
jg
loopne
sti
push
push
cltd
shlb
xor
cmp
test
jno
out
sbb
sub
xchg
aaa
rcrb
adc
clc
xchg
insl
scas
cmp
lea
sub
or
mov
les
popf
cmpsb
fnstenv
mov
mov
xchg
in
xor
adc
test
ja
popf
out
mov
fidivs
lcall
jo
jnp
shll
mov
cmp
mov
ds
push
cmp
sbb
test
dec
lock
into
jae
test
push
fcompl
push
mov
andb
push
shl
outsl
loopne
fistps
inc
xor
mov
aaa
insb
pop
imul
rorb
xor
dec
pop
aaa
xor
xor
mov
and
fdivl
int3
or
dec
mov
mov
mov
pop
es
inc
rcl
test
jnp
pop
out
push
mov
fdivr
les
lret
addl
push
jecxz
or
push
les
mov
and
pop
mov
int
jns
and
jns
pop
pop
and
sub
sbb
dec
pop
mov
cmovle
sti
or
daa
adc
loope
fsubs
sub
int3
xchg
cwtl
gs
aaa
ret
mov
or
pop
out
mov
jno
outsl
decb
loopne
cld
xlat
sahf
inc
outsl
mov
mov
ljmp
inc
or
lds
xchg
add
mov
mov
xchg
mov
add
jo
cli
mov
or
mov
mov
jle
mov
jne
in
les
and
pushl
inc
or
stos
mov
stos
in
dec
hlt
aaa
jge
push
and
inc
mov
ficoms
sbb
int3
push
test
xor
jns
and
push
cmp
cltd
clc
pusha
pop
and
pop
xchg
dec
adc
sbb
mov
loopne
cmp
es
jno
ficoms
push
inc
add
jle,pn
mov
rol
imul
clc
fidivs
xchg
xchg
dec
jg
icebp
inc
pop
adc
insb
aaa
and
sub
jp
cmc
mov
ss
pop
popa
mov
and
subl
sbb
inc
test
pop
rorl
xchg
pop
mov
popa
sbb
ret
sub
mov
xor
xchg
xchg
enter
fstpl
loopne
fiaddl
je
lcall
pop
xor
and
mov
jo
mov
pop
add
lods
sahf
es
sahf
pop
jns
lret
push
jne
xor
sbb
jg
test
fisttps
pop
aaa
and
fadds
mov
popf
adc
pop
scas
test
stc
add
cmc
push
mov
insb
jmp
int
loope
idivb
dec
insl
movsb
jg
jg
mov
repnz
les
and
push
int
jne
sbb
cmp
in
lret
sbb
popa
xchg
loop
mov
xchg
ljmp
pop
cmpsl
cmp
add
ret
pop
mov
std
jle
or
dec
vpcmpeqd
pushf
xor
daa
add
and
dec
mov
dec
in
fcoms
or
inc
rcrl
jmp
in
or
out
sub
icebp
push
cmpsb
ror
lret
sub
cmp
rcrl
cmp
pop
adc
imul
dec
lock
dec
loop
test
dec
mov
jo
and
sbb
sbb
fcoms
dec
data16
sbb
outsb
repnz
es
pop
add
fildl
jne
adc
aaa
iret
dec
das
add
pop
ljmp
dec
pop
test
movb
push
cmpsb
sbb
ss
sarb
scas
test
mov
daa
sti
inc
ss
push
jecxz
mov
aaa
fadds
aam
xor
mov
ret
or
adc
fists
pop
push
push
dec
inc
push
in
inc
aaa
mov
pop
bound
inc
mov
out
cmp
mov
lods
push
movsl
cmp
pop
inc
scas
inc
pop
jae
dec
fdivs
inc
lahf
add
fstpt
cmp
das
dec
pop
lret
lods
addl
repz
nop
scas
mov
push
xlat
fs
push
mov
jbe
arpl
cwtl
and
cmp
push
inc
arpl
jo
inc
fdivl
test
mov
out
jnp
mov
or
mov
inc
cmpsl
insb
pop
jo
jnp
in
divb
or
sbb
cmpsl
mov
ret
repz
inc
inc
xchg
mov
scas
pop
cmp
mov
push
ret
push
or
xchg
gs
inc
cmp
cltd
mov
sub
imul
xchg
insb
outsl
mov
jbe
inc
lods
cmc
sbb
imul
sub
push
aam
push
enter
js
pop
pop
lods
sub
std
into
mov
xchg
lret
outsb
shl
push
test
add
aam
in
test
mov
push
push
and
dec
lods
sub
jbe
cwtl
enter
and
pop
imull
filds
icebp
dec
jg
lahf
in
fdivl
shll
sti
insb
subl
push
and
mov
add
popf
sbb
shll
push
js
in
or
dec
loopne
notl
mov
sbb
lret
subb
jnp
and
stc
ds
xchg
jno
movsl
xor
jnp
jl
in
dec
push
pop
cmp
popa
add
push
mov
inc
lea
mov
adc
dec
hlt
or
jnp
push
movsb
mov
pop
and
cmp
js
xchg
sbb
bound
and
mov
xchg
sbb
hlt
out
mov
and
mov
mov
jg
stos
repz
test
mov
push
imul
loope
aam
cld
mov
je
sub
adc
sbb
rol
cmp
aas
xchg
aaa
fneni(8087
clc
xor
ret
andb
push
icebp
shlb
cmp
loope
add
shrl
inc
arpl
popf
cwtl
mov
adc
cld
and
inc
push
jle
js
fnstcw
aaa
jg
inc
rclb
mov
imul
fcomi
mov
orb
flds
loop
cwtl
aam
orl
stos
int
in
and
sub
pop
push
loop
sbb
mov
jno
xchg
iret
xchg
xchg
sub
pushf
cmpsb
rcrl
xchg
pop
xchg
adc
xchg
cmp
push
sbb
adc
shl
fwait
test
jg
push
outsl
enter
scas
aas
sti
sbb
sti
mov
imul
jecxz
push
addr16
sub
and
sbb
lods
mov
xor
cwtl
push
xchg
xor
shlb
nop
insl
mov
clc
sbbl
mov
outsl
push
mov
pop
leave
lahf
scas
stos
jae
jp
lock
shll
jg
ljmp
stos
adc
mov
fcmovbe
scas
test
sbb
inc
xchg
jl
push
bnd
mov
pop
lcall
jl
outsl
jb
jg
mov
ficomps
in
inc
cpuid
in
inc
push
cmc
mov
jbe,pn
xor
adc
je
dec
pop
push
sarb
xor
sti
out
mov
cs
loop
pop
testb
xchg
xor
cmp
pop
ficomps
jae
push
push
jbe
sti
mov
fsub
jo
out
shrd
mov
jnp
sub
dec
dec
imul
and
sbb
aas
xor
xor
outsb
xchg
add
mov
sub
jl
or
std
ret
xchg
add
fmull
dec
lahf
pop
pop
fisttpll
cld
mov
sub
jne
imul
lock
cs
pusha
lods
or
pusha
rcr
test
jns
cmp
xor
rolb
out
jl
cmp
imul
sbb
xor
sub
pushf
in
in
sub
orl
mov
adc
repz
xor
aad
jg
dec
xor
xchg
iret
mov
out
push
int
aaa
dec
pushf
and
lret
pop
mov
xor
adc
aaa
lcall
mov
xor
div
and
cmp
xlat
es
icebp
xchg
sbb
pop
inc
xchg
cltd
andb
movsl
xorb
test
push
fwait
sbb
xchg
test
sbb
push
outsb
insl
lea
lock
dec
pop
clc
dec
inc
inc
sub
aam
mov
mov
push
shlb
repnz
fcoml
xor
cmp
jno
jns
jge
inc
mov
pop
test
je
pop
inc
lret
push
scas
stc
push
mov
jle
jmp
lcall
sarb
cmp
mov
pop
inc
nop
mov
mov
aam
jne
lret
cmp
push
add
xchg
cmp
mov
mov
xor
mov
cmpsb
pop
fs
push
fisubrl
xor
movsl
and
or
sbb
std
scas
and
fists
shrb
xchg
dec
mov
and
and
inc
out
enter
clc
mov
push
pop
inc
pop
js
pop
mov
and
and
jmp
inc
inc
call
cltd
inc
cmp
aaa
fwait
sub
dec
daa
sbb
popa
push
pop
roll
add
jp
and
xchg
inc
jge
jnp
mov
pop
shll
outsl
dec
inc
jae
inc
and
inc
pop
inc
aaa
imul
xlat
adc
outsl
testb
sbb
scas
clc
push
mov
mov
repnz
adc
add
sbb
rorb
test
cmp
movsb
xchg
dec
aad
and
test
into
or
jle
das
loopne
inc
xor
sub
xchg
add
add
scas
xchg
loopne
sarb
cmc
out
rorl
sub
push
inc
sbb
lods
sub
xlat
lock
notb
repz
pop
in
inc
sub
sahf
clc
dec
mov
mov
out
aas
int3
stos
xor
sub
rolb
pusha
js
testb
pop
push
cmpsb
gs
sub
jbe
adc
rorb
xchg
dec
lret
fisubs
adc
into
shrl
push
mov
mov
es
shlb
pushf
push
mov
fsubrl
pop
mov
pusha
pusha
sub
jmp
mov
outsb
aad
xor
add
sbb
jp
std
xlat
lret
pop
sub
adc
jae
jle
jecxz
in
sti
and
lock
sub
and
daa
push
repnz
pop
xor
xor
cmp
inc
push
mov
fildll
mov
clc
mov
lock
pop
roll
cmc
bound
js
ret
rorl
mov
xor
jo
nop
fisttpl
out
inc
dec
and
push
mov
sub
pop
cmp
jne
xor
imulb
lcall
or
add
xor
dec
in
push
sbb
mov
cld
push
mov
and
sbb
xor
scas
xchg
daa
sti
sbb
out
add
shll
incb
dec
xlat
imull
mov
mov
jbe
pop
mov
push
mov
incb
movsb
decb
fwait
repz
mov
push
jecxz
fmuls
inc
stc
pop
loopne
shlb
out
inc
bound
push
insl
and
loope
mov
sub
adc
sub
mulb
and
fldl
je
lret
sbb
inc
adc
dec
and
out
shl
mov
inc
ja
pop
test
adc
jle
leave
call
test
push
stos
pop
mov
jnp
fs
jnp
pop
jge
pop
push
lea
stos
push
out
mov
add
xchg
into
cmpl
nop
or
idivb
mov
in
mov
stos
ljmp
jl
inc
or
fstl
lahf
and
lcall
xchg
ljmp
or
in
in
dec
pop
jg
push
imul
lea
dec
lcall
add
xlat
inc
and
rcll
cmp
ret
fimull
enter
adc
dec
in
loop
mov
adc
xchg
and
or
pop
loopne
sbb
xor
add
pop
cs
rolb
mov
ret
leave
jp
stos
rcrb
jecxz
stc
in
mov
inc
cmc
mov
pushf
je
cli
arpl
push
inc
push
push
xchg
xchg
cmp
xor
jp
pop
pop
jne
dec
test
hlt
insb
outsb
rol
mov
lds
or
and
ss
mov
es
iret
clc
pop
mov
cltd
pop
into
xor
mov
mov
sub
leave
out
xlat
bsr
pop
aaa
add
imul
enter
xchg
cmpsb
cmp
lds
dec
jmp
xor
mov
mov
scas
fs
iret
xchg
jmp
jle
mov
adcb
mov
test
hlt
push
insb
push
dec
sub
lds
push
cltd
loopne
sub
pop
iret
stc
xchg
jo
in
pop
xor
push
cli
push
and
pop
push
jg
stos
and
sub
mov
fnstenv
fildll
pusha
jmp
mov
adc
xchg
push
ljmp
or
pop
shrb
clc
mov
inc
and
add
scas
mov
or
daa
cmp
scas
aam
loopne
popf
cld
jp
loop
inc
pop
je
dec
lret
xchg
xchg
jbe
adc
push
sarb
sbbb
mov
jae
jp
test
and
sbb
xor
xor
bound
push
sbb
push
xchg
fucomip
fbld
mov
and
testb
jmp
inc
rcll
js
imul
repz
jns
aaa
cmp
repz
in
mov
cmp
inc
xor
int3
lea
or
aas
adc
inc
aad
cltd
cmp
fwait
cmp
mov
nop
dec
insl
sbbb
in
sbb
jns
lds
cld
xor
ficompl
dec
movsl
and
and
rorb
pop
fcompl
sarb
dec
lock
insl
fwait
in
les
and
push
jne
add
sub
dec
push
mov
insb
mov
fcompl
in
jbe
jb
fs
mov
xchg
cmp
out
pop
sub
outsb
fcomp
add
mov
push
daa
jbe
ss
cmc
jg
pusha
mov
call
xlat
xor
nop
push
mov
clc
lods
cmpsl
adc
jns
push
cmp
push
test
scas
add
fimull
lahf
xor
fdivr
xor
push
and
sub
lahf
pop
pusha
jnp
and
imul
rcll
cmpsb
out
dec
aam
call
in
mov
mov
push
lret
mov
pop
sahf
cmc
adc
mov
scas
aaa
insl
call
mov
mov
cwtl
lds
int
add
sub
jle
lcall
xor
nop
adc
or
test
mov
sub
cs
xor
or
cli
pop
pop
xor
cmc
aaa
rcrl
push
xorl
cmpsl
pop
mov
cmpsb
rorl
add
call
movsb
pop
sbb
pusha
popf
sbb
mov
adc
cli
and
sub
popf
inc
inc
mov
mov
jmp
int3
mov
mov
xor
shl
cmp
dec
add
ss
movsl
inc
imul
inc
and
aaa
sub
in
sbb
cmp
data16
ja
xor
test
fwait
test
lods
int
out
fdivs
iret
pusha
or
insl
dec
insl
sbb
ret
ljmp
dec
xor
sar
pop
and
test
sbb
outsb
lock
jl
adc
gs
sub
dec
xchg
ss
jge
icebp
pop
outsl
popf
sbb
push
xchg
les
fs
sub
push
mov
adc
repnz
xor
sub
cli
jge
sbb
inc
mov
daa
shll
pop
xor
out
mov
and
mov
and
add
dec
fnsave
pop
fsubl
dec
cmp
aam
arpl
mov
pop
cli
push
daa
imul
out
sub
fistl
mov
pop
pop
sbb
and
mov
mov
sbb
dec
jmp
insb
ss
and
sub
iret
in
hlt
pop
imul
push
cmc
mov
outsb
xor
ss
aaa
mov
push
add
pop
push
xchg
xchg
adc
sbbb
jecxz
imul
adc
push
lock
lds
mov
sbb
stos
fsub
and
pop
repz
loop
fisubs
jbe
lods
mov
mov
cmpsb
icebp
pusha
dec
ret
sub
pushf
sbb
aas
leave
iret
rcrb
mov
dec
adc
push
sbb
and
sbb
icebp
jbe
scas
cltd
stc
ljmp
test
cmp
or
in
cmp
mov
jmp
mov
hlt
into
loop
in
xchg
mov
out
pop
lahf
mov
push
insl
push
cwtl
jno
add
xor
call
xchg
cmp
loop
xchg
mov
cmc
mov
push
inc
xor
or
sbb
pop
pop
lret
sbb
popa
scas
test
stos
out
fldcw
inc
in
xor
mov
push
stos
xchg
sahf
lcall
mov
cmpsl
push
das
cltd
lcall
and
arpl
cltd
push
popa
add
add
movsl
mov
rcrb
pop
std
or
gs
repz
into
dec
or
mov
inc
cmp
sub
inc
ljmp
out
xchg
mov
or
mov
xchg
push
les
mov
mov
int3
cmc
imul
jbe
fdivrl
pop
xor
hlt
fistl
inc
in
jns
mov
popa
outsl
push
fs
jb
fdivp
inc
cli
imul
mov
push
add
dec
das
pop
adc
cmpsb
stos
es
mov
sub
ds
sub
mov
adc
rorl
out
mov
xor
mov
inc
out
sbb
xchg
dec
xor
imulb
jge
lock
gs
mov
and
cmp
mov
test
cli
es
out
rolb
cltd
mov
aas
pop
out
push
popf
sub
int3
jns
orl
insl
out
mov
insb
push
out
jecxz
xor
enter
std
jmp
rcrb
or
ljmp
lcall
outsb
add
clc
ret
pop
xchg
pop
aad
mov
mov
add
add
add
ja
mov
or
scas
mov
xchg
and
scas
dec
sub
mov
es
xor
lods
dec
push
jno
loop
into
add
bound
cmpsl
in
mov
cmp
hlt
jle
in
or
loope
jmp
aas
mov
jmp
adc
mov
lods
ret
lds
mov
cmp
push
out
xchg
fcmovnu
fisttpll
int
outsl
shll
int
lea
cmp
les
test
xorl
dec
jae
subb
fadds
lahf
sbb
je
mov
jp
popf
xchg
add
outsl
aad
mov
push
cmp
inc
push
adc
xor
sbb
int3
jmp
jg
aad
xchg
test
pop
bound
dec
push
mov
jae
dec
insl
out
ret
xor
enter
inc
das
mov
cmc
mov
lahf
mov
cmp
mull
adc
pop
aas
push
outsb
ja
inc
jecxz
jle
out
mov
popl
jb
sub
or
push
jae
rclw
mov
and
sbb
and
bnd
and
ss
das
leave
mov
cmpsb
cs
mov
and
std
sbb
xchg
and
xchg
fbld
sbb
and
pop
lea
mov
das
hlt
mov
fs
fs
insb
and
loop
mov
std
in
daa
jmp
or
add
mov
shrl
clc
pusha
and
xchg
leave
mov
ljmp
mov
lret
add
test
lret
mov
mov
fstps
movsb
jne
xlat
imul
mov
xor
ret
scas
aam
js
cltd
nop
mov
shlb
add
sbb
jmp
mov
push
filds
ds
in
jbe
sbb
insl
pop
insb
insb
jno
into
mov
hlt
leave
ljmp
stos
test
dec
mov
cwtl
pop
or
add
data16
ret
addb
jbe
call
adc
inc
fs
adc
sub
push
scas
sti
mov
mov
add
inc
dec
jl
enter
and
dec
xor
aaa
mov
jg
aad
shlb
sub
std
dec
inc
or
push
jnp
shl
xchg
nop
je
ret
aaa
out
sbb
adc
adc
jae
mov
jbe
ret
sarb
lods
xchg
rep
call
jo
testl
xchg
imul
enter
movsb
loopne
push
lds
mov
jmp
mov
jmp
add
push
or
add
clc
shl
loopne
xchg
dec
outsl
fstpl
jmp
not
add
daa
mov
sub
in
nop
sbb
loop
jp
aad
fildll
cli
out
cmp
add
or
add
cmp
repnz
mov
aaa
or
adc
and
mov
out
outsb
sbb
mov
outsb
lret
and
dec
fcomps
lahf
lods
test
and
dec
mov
sbb
dec
test
sub
xor
jo
fwait
std
sbb
mov
mov
mov
dec
mov
outsl
loope
jnp
mov
inc
stos
popf
sub
out
xorb
shl
sbb
adc
jge
test
fdivrl
sub
popf
mov
iret
sbb
push
loopne
inc
sub
std
adc
xchg
test
xchg
and
xchg
arpl
fildl
cmp
lret
lock
adc
jp
jo,pt
xor
jp
inc
cmp
outsl
inc
mov
add
jno
or
add
add
dec
push
shr
mov
nop
inc
dec
mov
jg
mov
icebp
dec
lahf
xchg
stos
movb
jg
shll
inc
cmp
dec
push
dec
das
or
jbe
mov
push
or
das
aaa
scas
jns
loop
loope
fs
andl
popa
mov
mov
in
dec
jb
movsb
fstl
out
pushf
out
iret
jb
adcb
mov
mov
inc
and
cmc
mov
jg
adc
ljmp
jnp,pt
mov
jne
fwait
loop
repz
push
mov
jo
int3
sub
mov
cmpsb
cltd
insl
sbb
lock
shrb
loope
and
lret
dec
mov
sbb
std
lret
movsb
cs
movsl
shlb
aam
pop
add
xchg
cmp
dec
lds
adc
aam
mov
nop
repz
iret
jno
mov
idivb
lahf
or
xchg
ja
stos
inc
mov
mov
ss
int3
scas
movsb
mov
and
lea
lods
or
dec
add
shlb
insb
loop
pushf
and
add
or
shrb
outsb
fcmovnbe
pop
ret
insb
mov
jecxz
jge
or
shr
xor
insl
aad
cltd
in
notb
dec
mov
sbb
xor
pop
adc
sbb
mov
insl
cmp
mov
clc
jo
outsb
in
test
cmpsl
pop
lock
and
aas
mov
push
clc
gs
int3
sti
insb
fnstcw
xlat
outsb
ret
push
je
add
push
pop
pushf
movsl
push
mov
push
jmp
popa
test
jp
mov
ss
sub
or
mov
jae
sar
int
xchg
ss
pop
mov
loope
sbb
fidivrs
fimull
loop
xchg
stc
push
xchg
aad
ja
lock
mov
iret
mov
add
fimull
push
cli
popa
sbb
std
rcr
adc
inc
movsb
adc
xor
js
add
mov
jae
pop
adc
jg
push
pusha
in
repnz
fildl
cmc
and
adc
adc
je
out
xchg
testb
push
and
jo
test
push
pusha
inc
pop
inc
mov
popf
aam
push
hlt
in
xchg
test
scas
mov
dec
mov
sub
in
mov
push
mov
lea
hlt
pop
out
iret
and
scas
mov
add
out
out
cmp
mov
push
inc
add
or
xchg
push
fs
int
pop
aas
js
jne
hlt
cs
jle
add
js
cmpb
into
lds
xor
push
jl
clc
add
or
mov
ror
mov
cmovno
das
inc
test
pop
push
xlat
popa
inc
aad
inc
movsb
jno
xchg
mov
mov
push
adcb
dec
pusha
and
sub
arpl
cs
mov
inc
out
push
gs
in
cmp
jecxz
fstpl
sub
jge
sbb
inc
jmp
ss
jg
out
sbb
xor
push
xchg
mov
jle
and
sbbl
lods
enter
pop
loope
enter
mov
fstps
mov
mov
popa
xchg
push
pop
clc
nop
in
mov
jl
and
jg
incb
cmp
push
mov
popa
push
std
icebp
adc
inc
jg
iret
lret
hlt
sub
or
mov
lds
outsb
dec
sbb
push
clc
dec
inc
fcoml
mov
xor
jle
je
lods
ljmp
mov
mov
in
cmp
int
pop
adc
inc
mov
gs
adc
pushf
ss
int
pop
add
testb
aad
sub
rcll
add
pop
add
scas
sbb
out
fldt
subb
mov
jmp
sub
mov
ss
in
test
pop
in
push
xor
push
jmp
stos
ja
lds
lods
mov
js
scas
stc
bound
lcall
push
cmpl
movsl
mov
inc
mov
dec
stos
ja
sub
mov
fisubl
ffreep
rcll
and
das
push
ds
jmp
dec
push
mov
jg
xchg
mov
fimull
ss
xchg
loopne
inc
popa
and
jbe
pop
pop
call
mov
les
out
cld
std
out
sbb
mov
cmp
clc
dec
movsb
movsb
push
fs
push
daa
sub
xchg
fisubrl
jb
xchg
push
mov
or
js
pusha
mov
pop
mov
add
je
pop
xchg
popf
push
sub
cltd
jne
xchg
adc
addr16
popa
addr16
nop
out
dec
ret
push
sub
stc
inc
mov
adc
jno
mov
popa
jecxz
xor
xor
pop
or
or
xor
enter
add
bound
dec
hlt
icebp
addl
xchg
filds
mov
cli
sub
aaa
dec
hlt
movsb
push
xchg
dec
pusha
xchg
sbb
add
ret
mov
rcl
sahf
fstps
dec
movsb
leave
out
mov
loop
adc
xchg
jmp
lret
les
mov
shrb
out
test
or
call
lahf
std
int
in
test
fwait
jle
add
inc
jno
pop
add
sahf
mov
jnp
loop
enter
fadd
shr
jb
dec
es
js
sub
or
movsl
inc
jnp
nop
inc
add
mov
push
push
aas
adc
inc
repz
add
pushf
out
shl
sahf
and
or
jne
adc
or
pop
inc
int3
loop
and
lahf
mov
mov
ret
dec
mov
ret
fimull
daa
inc
add
nop
ljmp
push
loope
xor
lret
dec
cmpl
inc
je
pop
es
push
cmp
clc
push
ret
or
xorl
cli
pop
dec
insl
pop
and
push
xor
cld
dec
mov
mov
call
mov
xor
sti
loopne
outsl
in
pop
fldt
lahf
push
add
and
mov
xlat
notb
fisttpl
xchg
push
sub
sbb
ds
lcall
fistpll
fmul
sbb
lods
inc
pusha
mov
and
cmp
enter
mov
cmp
insb
es
addr16
in
push
xlat
in
lcall
jl
leave
cmp
rolw
adcb
mov
add
sub
movsb
lea
cmp
pop
sbb
out
mov
movsl
hlt
scas
mov
ss
push
xchg
xchg
fstp
adc
imul
jno
mov
ds
push
add
in
rcr
xor
ret
sbb
cs
pop
or
jge
cli
insb
pop
jns
push
and
inc
mov
jle
xor
mov
ror
stos
mov
adc
fldenv
subl
sub
mov
pop
aam
mov
mov
xchg
bound
or
adc
icebp
cmp
popa
shl
ret
jbe
mov
scas
ret
out
inc
xchg
rcrl
fisttps
jp
scas
push
std
sbb
mov
mov
aam
push
icebp
jne
lret
test
jae
scas
popa
and
aas
ret
and
mov
lcall
dec
xchg
push
insl
mov
fs
xchg
inc
in
jae
cmpsb
filds
ds
stos
imul
mov
inc
xchg
mov
add
insb
sbbl
sub
nop
jnp
dec
jns
xor
stos
pop
lods
iret
enter
out
stc
sahf
adc
fcoms
into
dec
outsb
or
sub
test
xchg
adc
cltd
test
jb
xchg
add
test
outsb
loope
push
lahf
loopne
mov
push
xor
mov
mov
jecxz
push
ja
mov
imul
mov
cmpl
test
sub
push
jno
dec
dec
sbb
dec
or
out
cmp
or
testl
insb
jl
and
jge
out
cvttps2pi
cmp
sbb
add
addr16
xchg
loope
test
add
ret
jmp
insl
leave
sbb
addr16
push
js
push
aas
xor
movsl
and
xchg
outsb
adc
out
hlt
setp
and
mov
push
push
enter
xchg
dec
mov
mov
arpl
mov
sub
add
aaa
popf
or
mov
push
fdiv
cmp
sub
imull
into
insb
movsl
lds
ss
es
xor
xor
mov
shr
mov
popa
cmpl
mov
xchg
outsl
mov
aaa
mov
fcomp
popa
jb
jl
clc
sub
insb
rolb
push
cmp
pop
cmp
or
inc
iret
pop
out
jno
pop
jns
xchg
addl
inc
pop
fcomps
dec
loope
std
lcall
lret
imul
hlt
call
pusha
or
jbe
mov
cld
or
adcl
addr16
adc
cmc
cwtl
sub
aam
or
pop
sub
xchg
mov
add
cmp
add
and
es
jne
fldcw
fdivrl
jle
in
xor
pushf
mov
leave
popf
or
jo
mov
cvtpi2ps
idivb
push
stos
nop
push
add
jb
pop
jns
or
push
scas
jmp
int
xor
jbe
mov
or
lods
fstl
xchg
lds
and
xchg
js
sar
sub
and
jno
fwait
out
jl
shrl
adc
int
cmpsl
faddl
stc
sub
in
subl
aaa
dec
add
cmp
rorb
out
xchg
sub
cmp
pop
xchg
imul
xchg
pop
jg
xchg
add
dec
xor
mov
repnz
dec
ss
cmp
jg
sbb
std
adc
das
cmpsb
dec
push
test
fstl
in
shll
mov
jecxz
mov
ss
shll
mov
mov
ljmp
aad
push
xor
sbb
add
ds
adc
sbb
out
push
jle
sarl
sub
and
lods
inc
loopne
cmp
rol
push
lock
aam
in
in
dec
pop
cmp
lea
xchg
inc
pop
xchg
push
pop
pop
mov
lods
mov
ljmp
popl
fbld
and
or
das
icebp
test
sbb
in
jae
pmaxub
xchg
outsl
ljmp
or
scas
shlb
sbb
adc
mov
push
add
les
orl
shll
mov
mov
sub
xor
xor
jno
xchg
es
xchg
and
inc
stos
daa
sub
data16
sarb
push
push
inc
int3
xchg
pop
xchg
mov
data16
xor
dec
sarb
and
adc
mov
out
xchg
sub
add
ret
xor
aas
mov
xor
cmp
xchg
std
icebp
shll
mov
mov
ja
cs
aad
in
fcomps
sub
es
lock
pop
add
ljmp
jo
push
sub
cmp
jmp
mov
mov
add
cmpsb
cs
ret
dec
jg
roll
data16
add
inc
xor
out
out
sbbl
inc
shr
sbb
gs
mov
mov
incb
aas
call
mov
stos
mov
add
xor
fdivl
sbb
aas
test
push
aas
pop
push
std
sub
xlat
stc
imul
leave
mov
dec
add
cmp
xor
xchg
sahf
dec
adc
xchg
daa
movsb
fbld
clc
xchg
test
lret
stos
movsb
imull
int
repz
and
insb
cmp
xor
or
test
sbb
mov
jecxz
push
in
imul
or
and
dec
out
and
lods
scas
pop
insl
mov
sbb
pop
pop
or
or
scas
push
jg
or
jo
cmpsl
dec
push
mov
dec
xchg
lea
ds
lods
scas
xchg
sub
adc
lret
stc
sub
mov
imul
xchg
test
sarb
pop
insb
sbb
mov
adc
mov
xchg
inc
sarb
sbb
push
clc
pop
xchg
mov
hlt
add
mov
dec
pop
push
xchg
ficompl
test
lods
out
fs
xor
out
inc
cmp
mov
subl
cmpsb
adc
push
jg
cmpsl
ficomps
lahf
rol
jp
adc
jns
arpl
push
mov
push
jns
xor
sbbb
sahf
pop
ds
mov
rcrb
popf
jge
fwait
lods
out
clc
cli
mov
mov
fbld
adc
push
iret
lahf
inc
mov
push
inc
pop
les
scas
inc
call
cmp
lret
mov
push
movsb
call
and
xor
pop
cmp
lods
sub
ud0
jle
adc
scas
sahf
add
insb
clc
or
pusha
loop
mov
ja
hlt
inc
pop
into
and
sahf
bound
jl
std
addr16
push
fistps
adc
and
push
mov
or
inc
loope
mov
mov
es
sub
shll
lods
std
pop
adc
mov
imul
aad
jmp
sbb
ss
fimuls
das
loopne
ljmp
pop
sub
aad
adc
pop
pop
test
mov
movsb
cmp
jo
shrb
mov
rol
and
or
xor
addr16
ret
and
adc
mov
mov
inc
and
out
xchg
shrl
fbstp
jl
je
repnz
cmpl
cmp
mov
adc
and
out
stc
mov
outsl
pop
lds
dec
xchg
and
idivl
sbb
sub
pusha
std
inc
add
cli
pop
inc
lcall
imul
je
mov
cmc
das
sbb
or
sti
cwtl
push
loop
pusha
fistl
out
mov
test
pop
lahf
jo
in
ret
cmp
js
sub
cmp
outsl
rclb
mov
mov
cmpsl
xchg
lahf
call
xor
cmp
in
cmpsb
sbb
xchg
stc
hlt
sub
add
movswl
jns
xchg
fildll
mov
push
mov
out
popf
ljmp
rcrl
jle
scas
cmp
int3
rcrl
or
fistpll
and
lods
jle
in
jg
xlat
popf
lock
mov
and
ja
mov
outsb
scas
cltd
pop
and
fisubrl
dec
ret
je
lcall
testb
jae
sbb
in
popf
and
inc
dec
or
jg
inc
mov
xor
and
movsb
and
shrb
adc
xchg
mov
arpl
or
out
ja
bound
cwtl
sub
inc
push
add
mov
mov
adc
xchg
and
into
roll
daa
insb
addr16
cs
mov
cmpsl
or
dec
cmp
xchg
mov
decb
aas
jge
out
pop
aas
and
out
les
addr16
push
mov
xchg
lods
adc
push
popf
outsl
out
jge
les
and
shrb
xchg
inc
add
out
stos
and
jge
mov
push
scas
arpl
dec
mov
jo
xchg
cmp
negb
sub
or
addl
and
pop
pop
xor
cli
dec
xor
inc
push
mov
mov
frstor
push
dec
inc
and
sbbb
insl
aas
xchg
orb
sbbb
in
jne
xchg
rcll
cmp
rclb
jno
ret
int
rcr
dec
mov
ss
cmp
arpl
test
loopne
fisubrs
push
in
aad
or
test
stos
push
mull
jne
xor
adc
aaa
les
mov
ret
dec
in
out
int
mov
loope
sub
and
push
or
cli
xchg
pop
pop
lahf
sbb
jae
andl
insb
les
pop
rclb
push
fisttpll
insl
push
and
xchg
test
ljmp
and
cs
ret
ficoml
fstp
loop
xchg
repz
outsl
in
jnp
hlt
push
push
ret
mov
cld
push
sti
mov
testl
or
pop
mov
adc
and
mov
test
lods
dec
mov
or
test
jnp
adc
fmuls
popf
mov
cmp
mov
es
mov
sub
adc
xchg
xor
fcomi
and
push
and
aam
mov
sbb
orb
mov
sub
mov
push
mov
xor
xor
jl
lahf
leave
data16
sti
pop
adc
nop
pop
lret
or
xor
sbb
stc
popa
xor
push
mov
pop
cmp
movsb
popa
bound
sahf
push
imul
sbb
push
rcll
aaa
repz
jg
jecxz
aaa
push
dec
cmc
js
xlat
ret
xchg
sub
fs
je
xor
jnp
sahf
into
insb
and
sub
jp
ja
mov
push
das
fsub
or
rcll
push
aam
dec
and
xchg
or
pop
outsl
or
lret
clc
in
pop
sbb
or
and
insb
sarb
xor
stos
xchg
clc
mov
jbe
push
pop
mov
dec
sahf
xchg
jo
xchg
push
jecxz
mov
xor
aaa
dec
adc
js
cmp
arpl
clc
in
inc
mov
out
jne
xchg
scas
pop
imul
pop
adcb
repnz
and
imul
fcomps
pop
jns
xor
ds
jo
push
dec
add
aad
mov
push
or
add
mov
dec
sbb
ret
add
mov
xor
lods
test
cmp
hlt
sub
pop
seto
les
pushf
imul
mov
aam
jle
testl
xor
call
mov
jl
int
ret
or
loopne
jecxz
push
or
in
stos
add
rcll
lret
sahf
arpl
mov
push
xor
dec
out
movsl
mov
mov
das
pop
and
into
cmp
ret
mov
cmp
dec
outsl
fisubrl
push
scas
inc
mov
xchg
mov
mov
jp
add
xchg
mov
and
jb
jno
ds
jmp
mov
int3
cmpsb
shlb
jmp
sbb
push
dec
sub
mov
push
popf
mov
aas
add
mov
push
jnp
sbb
outsb
or
dec
cmpsb
push
dec
mov
fbstp
test
stc
sub
pop
in
mov
ja
jbe
inc
jl
cmp
mov
fisubs
xchg
outsb
sub
mov
xor
popa
js
add
add
push
inc
cmpsl
les
xchg
pop
pop
push
xchg
jnp
fadd
rcrl
out
das
pop
frstor
xor
and
je
mov
das
daa
out
push
mov
lret
push
push
popa
mov
mov
jae
mov
shrl
addr16
add
das
fistpll
add
dec
mov
fcompl
mov
and
sbb
fsubl
dec
inc
sub
and
es
popf
push
aam
mov
jge
inc
jge
and
add
jmp
xor
movsl
outsb
and
ds
mov
lds
sarl
mov
mov
sub
cltd
push
add
insb
cmc
pop
or
cltd
and
scas
ds
mov
outsb
scas
jb
dec
cwtl
pop
rcrb
push
int
and
sub
pop
scas
jp
fs
cwtl
les
xchg
push
das
inc
mov
sahf
mov
lock
mov
into
and
jo
xchg
outsb
dec
mov
in
jbe
pop
std
add
sub
mov
sbb
in
xchg
test
sub
or
inc
bound
push
into
repnz
cmpsl
mov
cwtl
sahf
cli
shll
mov
inc
adc
out
adc
mov
dec
adc
mov
jbe
adc
xorl
inc
sub
cmpl
or
lahf
lods
out
lds
pop
iret
or
mov
test
lret
xchg
psubsw
cwtl
pop
cmc
out
inc
mov
cmpsl
push
push
popf
inc
nop
add
inc
adc
stc
jnp
enter
mov
fadds
push
pop
nop
dec
sbb
into
push
jge
mov
clc
cwtl
loope
and
jns
pop
sarb
fistpll
push
hlt
or
imul
push
fimuls
cltd
leave
aaa
cltd
test
mov
pop
outsl
mov
call
adc
imul
fldl
fstps
fs
pop
dec
jl
data16
and
insl
arpl
inc
inc
pop
rcrb
inc
mov
repz
int3
dec
adc
pop
gs
fadd
rcll
lahf
dec
cmp
std
add
pop
xchg
push
in
jp
push
andb
xchg
stos
cmp
icebp
test
pop
mov
int3
test
adc
std
push
jae
pop
out
repnz
mov
pop
dec
mov
dec
fdivrs
xchg
outsl
xor
icebp
hlt
ret
mov
arpl
mov
xchg
mov
imul
xchg
rcrl
andl
xchg
inc
jmp
inc
mov
inc
pop
loopne
sbb
push
loopne
add
xchg
fucomip
xor
test
mov
lret
pop
je
enter
and
cmp
sub
mov
dec
shrl
pop
push
pop
jmp
add
ret
jne
es
push
push
loope
cltd
cmpsl
cmpsl
sub
cmp
mov
mov
repz
pop
out
std
xchg
insb
int3
pop
shll
outsl
cltd
sbb
or
inc
gs
mov
fwait
xchg
in
add
hlt
mov
and
fs
bound
jne
mov
and
sub
and
ficoml
sub
movsb
popf
mov
mov
ljmp
push
mov
fucomip
fidivrl
mov
shr
aam
sahf
iret
popa
and
jmp
dec
inc
pop
aam
cmpsl
ficompl
int3
pop
lea
adcb
idivl
sub
push
xorb
imul
xchg
mov
sub
cmp
cmpb
add
inc
push
fmull
xor
xchg
lcall
push
cs
lds
subl
aad
les
cmp
pop
test
cs
mov
out
rcrl
sahf
les
ror
inc
mov
jecxz
jae
pusha
test
mov
pop
insb
and
sahf
push
mov
or
jmp
dec
ss
jl
jae
inc
dec
and
sub
push
mov
ljmp
mov
idivl
cltd
mov
sub
xlat
cltd
leave
mov
cmp
lea
mov
adc
call
lock
fcomps
cmpsl
xor
jb
das
pop
dec
mov
jbe
in
xor
jno
mov
stos
lods
ja
xchg
jecxz
cld
mov
jecxz
repz
mov
jno
hlt
xchg
das
mov
stos
and
cmp
cmp
cs
sbb
mov
outsl
outsl
dec
shll
mov
cld
mov
inc
imul
pop
add
outsl
inc
popa
mov
sub
mov
mov
xchg
xchg
jmp
sarb
clc
mul
leave
cmpsl
aas
vpaddusb
in
jns
jb
push
popf
sub
cld
in
call
sbb
gs
jns
dec
mov
aas
xor
xor
push
ljmp
push
push
aam
rclb
hlt
xchg
push
mov
cli
cmp
fistpll
pop
mov
out
andb
stc
popf
adc
int
mov
pop
mov
lock
int3
adc
jle
jne
ffreep
sbb
cmp
jne
sub
insl
aam
xlat
sbb
and
outsb
jo
cmp
sbb
cmp
dec
push
notb
cmp
or
and
jae
inc
stc
in
xchg
daa
imul
push
mov
xchg
pop
mov
lahf
jle
ja
jg
dec
rcl
add
shll
sahf
cmpsb
negl
aas
movsb
clc
lods
dec
jmp
or
je
xlat
lods
stc
dec
shl
xchg
int3
lods
loopne
ret
dec
call
or
outsb
add
cmp
dec
aam
orb
movsb
xorb
fwait
mov
mov
dec
test
and
push
xor
cmpb
test
jmp
jmp
and
aaa
ljmp
mov
xor
push
sbb
scas
mulb
and
mov
repz
movsl
pop
sub
in
cmp
mov
mov
cmp
or
add
and
scas
or
mov
adc
sahf
cmp
lds
sub
xchg
mov
gs
cmp
pop
inc
cmc
pushf
push
pop
xlat
cmp
sub
xlat
or
xor
sub
sbb
in
fsubp
push
cs
not
mov
dec
mulb
jl
jmp
ljmp
lcall
xchg
pushl
jo
inc
shll
sbb
dec
and
dec
test
cmp
insl
adc
in
xor
inc
jno
and
adc
pop
rcrl
cmc
icebp
cmpsb
mov
and
pusha
lock
sbb
cmc
jecxz
jae
mov
xchg
mov
rolb
cmp
int
lcall
cmpsl
outsb
inc
inc
repnz
sbb
and
pop
add
div
pop
push
inc
push
mov
mov
mov
aaa
sub
addb
insb
in
push
loope
mov
pop
iret
fwait
jo
pop
push
jbe
xchg
sub
xor
in
mov
sub
or
sub
inc
sbb
mov
xchg
add
or
cmp
adc
sti
jb
jecxz
stos
cmp
mov
pop
push
mov
xchg
pop
aaa
clc
xlat
fwait
insb
lock
and
pop
push
mov
mov
aam
sub
arpl
nop
iret
sti
mov
inc
movsb
xchg
sub
mov
ss
mov
arpl
xchg
sbb
or
jl
dec
scas
out
jl
jne
ja
insb
in
mov
movsb
jg
arpl
cwtl
inc
cltd
push
fistps
rclb
pop
in
pop
mov
sbb
xchg
and
sub
pushf
cmp
shlb
decl
jno
push
mov
and
sbb
xchg
jbe
cmp
xchg
ja
sbb
cmpsb
pop
jp
and
out
daa
xchg
inc
xchg
leave
jecxz
ja
mov
mov
adcb
sbb
pop
dec
loop
mov
xor
aad
mov
hlt
sub
insb
sub
ja
popa
lcall
je
loop
je
cmpsb
je
xorb
pop
repz
or
cmpb
fdivrs
pop
fidivrl
shr
push
pop
and
cmp
and
xchg
sarb
fdivr
stos
in
cli
inc
mov
cmpsl
shll
in
add
xor
and
ljmp
cmpsb
or
cli
js
pop
out
enter
push
mov
inc
cmp
stc
rcrl
add
cmp
in
sbb
add
lahf
add
sbb
xchg
adc
dec
mov
imulb
insb
stos
fcomps
les
mov
mov
outsb
inc
cmp
push
lret
mov
inc
out
pop
popf
fisubl
arpl
adc
cwtl
push
pushf
xchg
sub
adc
lds
into
mov
push
movsb
mov
mov
fnstcw
sbbl
mov
lods
pop
xchg
xor
aas
mov
out
cmc
iret
cmpl
jl
cld
and
mov
int
mov
mov
add
jp
jmp
into
sub
inc
loope
xchg
stos
mov
xor
mov
out
inc
or
mov
aas
test
sbb
sbb
out
jecxz
pop
rcll
test
pop
cltd
iret
inc
xor
pop
push
mov
movsb
insb
xchg
mov
in
movsb
adc
mov
sbbl
push
adc
adc
jo
mov
mov
sub
leave
jp
loope
push
mov
push
imul
test
push
fsubrs
jae
cmp
mov
cmp
sub
adc
scas
pushf
testb
popf
dec
dec
sbb
pop
into
lock
out
test
and
aaa
dec
mov
mov
cmp
fisttps
popf
cmp
imul
xchg
cmpsl
fistpl
add
loope
rorl
add
fldenv
frstor
les
movsl
inc
or
ljmp
pop
sbb
movsb
cmp
loope
mov
xchg
movsl
xchg
scas
popa
sbb
jae
imul
sub
jne
negl
inc
cmpsb
mov
xor
sub
andl
fbstp
adc
xchg
mov
pushf
xchg
sub
nop
in
lcall
popa
fmul
adc
fistl
mov
data16
pop
sub
push
test
fmuls
inc
mov
xor
test
cmp
dec
push
cli
scas
mov
inc
and
int
ret
roll
jae
sbb
adcl
fcompl
aas
add
mov
and
nop
aad
mov
or
mul
stos
dec
or
in
or
js
push
lock
mov
inc
mov
or
mov
rol
inc
out
stos
mov
test
lcall
and
ret
xchg
inc
loopne
ss
insl
and
adc
sbb
jg
mov
pop
sti
in
and
lcall
inc
mov
loope
jae
push
sub
jge
mov
std
outsl
popf
negl
sub
insl
pop
cwtl
iret
and
out
dec
aam
shll
xchg
mov
dec
loope
icebp
sub
dec
cmp
jle
dec
mov
or
movsl
push
arpl
test
jb
ss
sbb
call
in
sbb
sbb
leave
outsb
mov
sub
les
sti
cld
mov
add
ret
mov
cs
testb
add
arpl
test
xchg
rcll
sbb
mov
mov
sbb
mov
or
jle
movsb
fcoms
cs
pop
jbe
or
cltd
test
test
adc
lret
mov
arpl
push
xchg
adc
dec
fildl
mov
sbb
inc
cmp
dec
push
pop
xor
adc
int3
fsubs
movb
jno
arpl
testb
mov
mov
pop
cmc
test
dec
subl
repz
mov
pop
pushf
adc
jg
inc
test
insl
dec
cmp
xor
jmp
lea
dec
push
sbb
and
jmp
pusha
movsb
adc
orb
pop
aad
roll
mov
fisttpll
or
lret
out
outsl
cmpsb
sub
loope
sbb
sub
inc
pushw
add
std
mov
fidivl
or
cmpsb
xor
loopne
mov
imul
xor
sahf
dec
push
call
in
xor
xor
lahf
jl
js
in
jno
clc
pop
loopne
in
mov
lock
pop
jns
or
out
mov
jae
dec
pop
gs
sti
sub
push
and
mov
ljmp
outsb
inc
jle
nop
int
fisubrl
jmp
int
fisubrl
jl
push
ret
int3
add
and
sub
repnz
and
inc
arpl
icebp
out
and
cwtl
jns
pop
fistps
xchg
movb
mov
dec
insl
push
push
loopne
add
or
or
adc
out
push
insl
pop
hlt
jg
icebp
ds
int
lea
fcmovu
or
or
sub
shrb
mov
mov
sub
cmp
imul
add
subl
push
imul
push
add
push
fldcw
jl
popa
stos
out
in
sub
xchg
imulb
lock
sbb
sbb
xlat
push
jp
cltd
or
mov
pop
and
out
fs
cmp
add
xchg
sti
mov
addr16
jmp
push
sub
lret
stos
rcrl
stc
lods
mov
mov
out
stos
cmp
pop
iret
sub
call
pop
stos
and
inc
pop
aad
negb
jb
bound
sbb
or
add
out
call
cmpl
xor
jle
test
xor
sarb
mov
jb
imul
das
movsl
std
ficompl
sti
int3
inc
scas
jae
inc
loop
subb
jo
xor
in
cmc
cld
pop
js
jbe
mov
and
mov
jo
mov
popf
xor
mov
loop
add
imul
xor
push
cmpl
push
push
sbb
scas
cltd
inc
mov
lcall
clc
std
outsb
push
push
mov
push
shl
loop
add
dec
dec
mov
sahf
cwtl
inc
jnp
dec
xor
push
fcomip
mov
push
in
fcoml
push
inc
and
cmp
fisubs
mov
mov
test
sub
rcll
rcl
repnz
shlb
xor
aam
aaa
mov
daa
sarl
cmp
sbb
inc
sbbl
loopne
popa
push
dec
mov
xchg
iret
ljmp
test
adc
aam
movsb
and
int
jbe
ret
scas
inc
xor
jg
lret
inc
lds
cmc
jge,pt
mov
push
push
pop
aas
xor
add
add
ss
hlt
push
mov
mov
fidivrs
xchg
jle
sub
pop
shl
jbe
pop
in
xor
mov
xor
xchg
cmp
push
cmp
rcrb
inc
adc
jnp
mov
adc
movsb
gs
pop
lret
pusha
pushw
hlt
cld
cmp
mov
add
int3
fwait
data16
xchg
fs
data16
repz
add
xchg
mov
inc
or
jl
js
xor
lds
jne
mov
or
hlt
jmp
add
aaa
pop
sar
xchg
adc
inc
pop
xchg
test
dec
icebp
hlt
xor
pop
pop
dec
add
sub
iret
pop
jns
clc
dec
inc
icebp
stc
out
xchg
jnp
pop
lods
xchg
in
jb
rcrb
lea
mov
fsubr
stos
jecxz
mov
inc
je
xchg
or
xor
rolb
jge
cmp
aad
or
aaa
pop
pushf
inc
movq
pop
mov
push
in
pusha
push
enter
loop
clc
sbb
inc
negl
sbbl
jge
push
or
arpl
fwait
int
subb
mov
or
arpl
into
or
fisubs
add
cmp
xlat
sbb
negb
jecxz
lods
mov
push
sub
fsubl
cmp
shrb
in
or
inc
stc
aas
jle
xchg
inc
or
xchg
clc
scas
rol
add
lcall
test
cmp
mov
adcb
shrl
or
stc
cs
cmpsl
inc
sbb
lds
mov
aaa
out
xor
xchg
jl
jns
shlb
xchg
or
xchg
jmp
sub
movsl
in
mov
mov
add
jns
and
and
idivl
xor
loope
outsb
es
pop
stc
out
xchg
popa
es
mov
pushl
cld
or
nop
lods
dec
scas
bound
push
pusha
add
push
push
mov
js
aam
cmp
jae
js
jo
jo
inc
fnstsw
mov
les
push
mov
mov
ret
in
jge
shll
out
dec
xchg
cmp
mov
cmc
add
dec
popa
scas
dec
outsl
mov
sahf
or
leave
jno
loopne
cli
cli
cmp
movsl
or
cmpsb
mov
and
xor
icebp
xchg
dec
js
in
pop
cmp
shlb
xchg
cmpsl
lret
jne
mov
loop
pop
jp
mov
inc
add
inc
mov
jns
nop
hlt
cmp
fstl
mov
jns
jg
ljmp
mov
add
in
sbb
scas
icebp
push
int3
aad
mov
xchg
push
adc
inc
test
xchg
xchg
adc
jae
inc
mov
shrl
aas
push
add
ljmp
sub
push
fs
sbb
xorb
movl
js,pn
in
pop
pop
inc
outsb
mov
cmp
pop
dec
push
sub
fildll
dec
mov
movsb
and
pop
iret
sub
out
push
lods
call
push
gs
notl
xchg
xchg
dec
inc
lock
mov
xchg
fwait
jae
movsl
mov
scas
out
int
inc
inc
cs
mov
push
mov
push
repz
push
jbe
andb
std
test
ljmp
into
jp
testl
frstor
inc
jno
dec
push
jmp
push
jnp
cmpsb
js
and
dec
and
imul
mov
pop
cld
jmp
in
cltd
inc
xchg
stos
sahf
lcall
xchg
cld
push
inc
scas
cmp
pop
jae
jge
push
addl
pop
jno
push
imul
push
insl
fidivs
repz
je
sbb
mov
sbb
fistpl
cld
cmp
jae
mov
into
loope
cwtl
mov
xchg
insb
xchg
adc
sbbb
cmpsl
arpl
sarl
test
adcb
mov
mov
mov
inc
aam
jl
mov
aaa
sbb
loope
enter
inc
sub
mov
add
pop
imul
lahf
sub
mov
push
sub
push
test
incl
dec
adc
xchg
fldl2e
sbb
jp
pop
xchg
ljmp
mov
pusha
mov
sub
inc
sub
call
mov
dec
jbe
pop
outsb
call
xor
dec
fwait
mov
push
insl
jmp
inc
pop
jg
int
in
mov
insl
int
mov
ss
cmp
pop
imul
outsl
push
mov
or
xor
fistpl
shrl
gs
dec
jae
imul
cli
mov
xor
dec
lret
mov
lcall
pop
jbe
jne
arpl
movsb
add
iret
and
xor
mov
push
add
inc
xlat
push
adc
bound
sbbl
pushf
sti
cmc
dec
sahf
xchg
sub
jecxz
out
mov
test
sbb
adc
xchg
rorl
and
mov
xorb
repnz
adc
sub
sbb
je
pop
jbe
xchg
or
cld
test
add
shr
callw
ret
mov
ret
mov
ja
scas
adc
sub
movsl
add
push
push
sbb
sahf
fadd
inc
push
icebp
or
dec
scas
mov
mov
mov
xchg
xchg
popf
cmp
idivb
xchg
push
push
fs
lods
bound
inc
ja
pop
ljmp
daa
push
sbb
inc
mov
ds
push
stos
cmpl
rclb
jge
xchg
shr
pop
shrb
inc
subl
sbb
mov
incb
daa
xorb
jo
inc
out
jle
mov
jb
mov
and
jns
inc
out
out
aaa
dec
and
cltd
dec
xchg
jns
addr16
sub
inc
out
push
icebp
inc
pop
jmp
inc
sbb
ja
subl
jo
pop
xlat
mov
in
movb
movsl
push
test
enter
jae
jns
lods
sbb
dec
lcall
dec
adc
mov
ja
ficoml
out
add
push
cmp
repz
fldt
sbbl
outsb
adc
sub
dec
and
and
xchg
out
test
lods
xchg
dec
cmp
movsl
cltd
outsb
jns
in
xchg
daa
ss
repnz
mov
jnp
call
imul
mov
test
int3
imul
lret
mov
ljmp
xchg
idivl
mov
cmp
xchg
or
pop
xchg
or
sub
ret
dec
adc
enter
pop
xor
mov
stos
cmp
shlb
insb
jg
std
push
mov
xchg
xchg
test
or
in
jno
jg
out
dec
push
dec
sub
shrb
mov
in
pop
mov
arpl
adc
sbb
push
mov
pop
arpl
test
inc
xchg
nop
out
mov
in
mov
enter
adc
and
lea
push
mov
dec
loope
or
std
test
add
xchg
and
inc
fwait
cld
ja
mov
sub
push
roll
mov
inc
frstor
shll
dec
cmp
sbb
aaa
or
add
pop
jo
and
or
xchg
fadd
mov
add
daa
sbb
insl
ljmp
mov
dec
pop
lds
jmp
je
out
xor
sahf
push
or
fsubrl
and
pop
jo
movsl
in
inc
movsb
aam
sub
pop
mov
out
sub
mov
jnp
add
push
jb,pt
mov
fcoms
push
popa
int3
test
loop
movsl
cmc
fwait
sbbl
pushf
sbbl
xchg
scas
fnsave
xchg
pop
std
mov
pop
imul
jge
nop
lds
pop
std
pop
mov
push
loop
sub
and
lock
mov
out
mov
sub
in
jge
inc
popf
pop
arpl
mov
xor
pop
outsl
inc
xchg
out
testl
cltd
jns
dec
das
sbb
mov
jp
adc
call
cs
or
mov
mov
inc
pop
ror
popa
and
stos
add
divb
sti
and
fistpll
cmp
dec
pusha
adc
jbe
mov
enter
cltd
test
mov
lods
xchg
mov
stos
je
popf
or
imul
lret
idivl
cmpsl
sub
stos
out
clc
xlat
mov
test
out
xchg
jnp
jne
lahf
xchg
mov
btr
les
out
lcall
std
rcl
scas
jmp
sub
jle
imul
into
fstl
jae
loope
mov
fcoms
mov
cmp
sub
outsl
sub
sbb
imul
test
and
push
cmp
imul
adc
pop
out
mov
enter
pusha
ret
pop
stos
mov
and
mov
jns
add
push
adc
adc
pop
push
ss
pusha
dec
stos
rorl
xchg
sub
adc
mov
push
cmp
mov
cmp
lret
dec
xchg
into
and
fisubrs
enter
movsl
sbb
xor
mov
stos
cld
inc
lcall
cmc
push
mov
cmp
arpl
imul
adc
lahf
push
pop
mov
cmp
addr16
adcl
jae
pop
nop
in
push
sbb
jecxz
lcall
shrb
rclb
repnz
add
aam
dec
lds
jnp
ret
ret
xor
int
lahf
shlb
cmp
add
jae
das
in
xchg
stos
fsubrs
ljmp
iret
and
and
and
test
fldl
cmp
imul
push
leave
adc
out
jmp
push
xlat
mov
ret
lods
mov
pop
lods
lret
stos
mov
push
jmp
sbb
clc
jge
aaa
dec
mov
or
je
icebp
in
xorl
cmpsl
jnp
add
or
mov
push
add
xor
popa
and
mov
mov
jl
aad
repz
loop
mov
loope
inc
dec
cwtl
or
pop
xchg
inc
inc
jne
jb
push
rclb
pushf
roll
and
in
push
or
mov
push
jecxz
or
adc
push
pushf
jle
popa
sarl
enter
xchg
rcrb
cmp
jmp
jo
push
push
iret
xlat
repz
js
xchg
call
jmp
push
adc
les
mov
fs
out
inc
inc
fidivl
inc
push
mov
mov
mov
arpl
sti
fnstenv
mov
inc
insb
das
or
mov
bound
repnz
hlt
pop
cmp
pop
jle
shlb
jecxz
or
mov
push
sti
xor
push
push
sbbb
and
in
in
icebp
mov
dec
pop
rcr
xlat
sbb
pop
pop
mov
sub
add
jecxz
dec
mov
movsl
subl
or
std
stos
icebp
dec
jb
xor
jbe
aam
xchg
inc
mov
xchg
in
iret
gs
fstl
sbb
and
data16
mov
aad
dec
jecxz
mov
hlt
mov
sub
xchg
ret
mov
ja
sti
fs
bound
repz
fs
fwait
ss
in
aam
pusha
into
lahf
je
ljmp
sub
repz
jmp
add
xchg
jmp
fs
pusha
cmp
dec
xor
jo
icebp
or
shl
mov
xchg
xor
sub
or
ds
mov
mov
jmp
gs
xchg
daa
loopne
insb
out
and
push
and
xor
dec
push
push
inc
fdivrs
data16
fistpll
into
jmp
cmp
push
or
add
jl
and
cmc
sbbb
mov
cmp
mov
inc
or
decb
mov
push
push
mov
sbb
lods
shld
mov
dec
mov
or
cs
out
mov
sub
cwtl
xchg
cmc
daa
push
js
cli
inc
dec
xor
adc
lret
pop
shlb
out
sub
sbb
loop
jmp
scas
cli
sub
jmp
xchg
outsb
cmpsb
pop
and
inc
xchg
dec
repnz
loopne
add
das
aad
sub
mov
addr16
lret
out
ficomps
je
inc
xor
stos
sub
add
push
cltd
out
movsl
popf
sti
add
out
mov
push
push
sbb
arpl
pop
cs
subb
dec
sbb
ret
std
dec
test
xchg
adc
test
in
sub
mov
in
mov
adc
pushf
subl
ljmp
pop
mov
stos
mov
outsb
shll
xor
adc
mov
rol
cli
adc
xchg
jmp
pop
adc
xchg
and
bsr
jg
mov
or
fdivs
fnstcw
add
or
jge
arpl
push
jns
js
inc
outsb
decb
hlt
int
jge
sub
sbb
lret
std
in
adcb
inc
pop
aaa
imull
cs
push
sub
sbb
sub
dec
add
jne
push
fsubl
aam
shl
xchg
lahf
cmpsl
jo
movsl
xchg
aas
jns
cmpsb
fcomi
add
cmp
mov
int
mov
or
dec
fs
adc
mov
jmp
lods
cmc
adc
push
push
dec
mov
jnp
js
test
aaa
dec
mov
xor
push
sub
int
sbb
xor
sti
adc
adc
fcoms
dec
in
inc
popa
jl
jle
lahf
mov
xchg
dec
push
jns
and
je
push
dec
repz
sbb
xor
cmpsb
mov
mov
pop
inc
dec
adc
ss
cmpsb
and
mov
cmp
shr
loopne
int3
sub
sarl
ret
or
sahf
mov
in
leave
pop
xchg
idivl
mov
cs
cmc
xor
clc
outsl
mov
dec
movsb
out
dec
or
inc
dec
push
mov
stos
pusha
lock
movsl
leave
adc
ret
cmp
sub
sbb
rep
popa
xchg
sub
xor
dec
ds
addr16
ljmp
ja
xchg
xlat
call
add
sbb
out
bound
xchg
sti
and
push
jae
insb
rcr
fstps
jne
xchg
ficomps
je
mov
mov
sub
add
in
mov
fsub
jnp
push
popa
xchg
cmpsl
xchg
lock
pop
inc
insl
insl
imul
add
lret
ja
jl
stos
push
clc
lods
popf
mov
int3
jge
xor
or
dec
movsb
shr
jo
jge
test
cmpsb
mov
out
lret
dec
movsl
inc
lret
sub
xchg
dec
repz
cmp
xlat
adc
rcr
push
dec
loopne
add
jge
adc
loope
pop
sub
gs
pop
pop
sbb
shrb
and
ret
push
cmp
ret
clc
cltd
sub
into
pop
cld
add
roll
inc
lods
sub
mov
and
push
loope
push
add
dec
movsb
dec
push
aas
xor
scas
cmp
pushf
push
outsb
hlt
cs
xchg
cld
sub
ljmp
or
aam
addr16
adc
mov
bound
test
mov
loope
fwait
jecxz
add
dec
inc
daa
jmp
movsb
into
sub
dec
push
cmp
sti
scas
add
cmp
add
outsl
xchg
xchg
aas
mov
push
sahf
mov
adc
pop
add
inc
jecxz
add
out
mov
in
xor
cmc
fcoml
in
div
popf
clc
call
mov
pop
xor
fsts
mov
mov
push
fs
dec
mov
push
movsb
lods
mov
push
int3
shll
pop
nop
adc
pop
frndint
fldl
test
lds
cli
xor
stos
adc
xchg
cmpsb
push
gs
pop
clc
pop
sbb
scas
jbe
pop
inc
push
dec
xchg
xor
push
movswl
in
push
mov
jl
push
or
rcll
movsb
pushf
dec
mov
repnz
mov
lcall
stos
pop
mov
sbb
insb
fstpt
test
xchg
add
dec
ret
sahf
lods
mov
pop
in
notl
or
mov
out
jae
and
mov
cmpl
icebp
gs
adc
fdivs
dec
mov
lcall
jbe
adc
popf
fs
jb
sbb
mov
scas
and
or
js
arpl
mov
enter
xor
sub
fwait
pop
adc
adc
dec
mov
inc
imul
outsb
mov
nop
iret
mov
popa
scas
rcll
jmp
arpl
fnstsw
fisubs
push
sub
dec
dec
jnp
cld
std
arpl
imul
je
jb
cmc
pushf
repz
mov
icebp
or
loop
and
mov
cmpb
jle
imul
pop
repnz
add
jns
fwait
inc
icebp
in
sub
mov
push
xchg
movsl
or
sbb
pop
or
test
mov
lret
push
ds
mov
and
push
fistpl
lret
pop
add
inc
outsb
les
add
inc
xor
test
shll
test
cmp
jb
cmpsb
ror
nop
sti
push
sbb
mov
xlat
ret
jno
mov
mov
fisttpl
xchg
out
mov
cmpsb
pop
lret
cmpsl
popa
mov
mov
jae
lcall
lds
jecxz
cmpl
mov
push
pop
jns
cmpsb
add
ds
pop
sbb
pop
repnz
push
leave
xor
ret
movb
mov
scas
idivb
and
jb
inc
popa
xor
sbb
test
jno
aam
hlt
aas
mov
push
mov
xor
stos
or
popa
and
out
stos
add
jl
inc
and
aas
addr16
pushf
jg
mov
inc
jo
mov
inc
pop
int3
lods
pushf
xlat
dec
dec
add
mov
leave
pop
loope
sub
nop
mov
subl
ret
lahf
push
xor
sbb
scas
sbb
sub
nop
jge
mov
and
mov
test
iret
adc
xor
rcr
sbb
add
pop
in
arpl
adc
cs
xchg
outsl
clc
xor
ret
nop
lret
adc
pop
mov
fidivs
in
js
rorl
xlat
and
mov
ret
mov
push
mov
pop
push
lahf
cwtl
int
ror
mov
jns
jl
popa
ret
sub
xor
push
sbb
int3
mov
and
sbb
movsl
daa
jecxz
mov
orl
pop
mov
mov
bnd
aam
or
cltd
lret
in
mov
xchg
daa
loopne
loopne
and
xor
icebp
loop
outsb
loope
stos
mov
cmc
cmp
mov
sbb
out
adc
loopne
mov
add
ret
subb
fwait
push
dec
mov
or
mov
imul
cmp
into
pop
cmp
mov
sbb
adc
scas
movsl
pop
mov
dec
out
mov
cmpsl
push
out
ds
fisttpl
xorb
pop
adc
jae
push
lods
mov
pop
xchg
jbe
sbb
int
mov
fxch
jae
cld
sub
fmuls
ret
pop
mov
dec
fbld
pop
and
fchs
aas
enter
xchg
jne
add
inc
mov
jp
gs
sar
rclb
sbb
cld
cmp
push
mov
mov
call
mov
sbb
cmp
jmp
lds
add
jg
imul
jle
inc
les
mov
into
jae
add
out
push
push
pop
push
push
mov
xchg
lock
cmp
and
xor
xchg
fldcw
jl
sar
and
mov
lret
add
add
aad
mov
roll
adc
mov
ljmp
or
mov
push
inc
sbb
inc
leave
aas
int
sub
push
inc
push
cwtl
mov
xchg
push
sub
icebp
fwait
pop
mul
jns
adc
out
addl
or
adc
mov
push
loope
mov
int
jp
add
mov
push
dec
push
sti
cmpsl
cmp
xor
mov
aaa
insl
repnz
out
xchg
xchg
test
pop
lods
or
iret
dec
js
jbe
loopne
push
pop
adc
inc
rol
loope
dec
testl
aad
ret
dec
loopne
leave
jb
rorb
pop
jmp
xchg
ret
xchg
popa
jns
mov
inc
and
push
push
insl
dec
push
icebp
popf
shrb
aad
xorb
cs
dec
or
mov
inc
in
xchg
dec
cmp
imulb
mov
xchg
fidivrs
xchg
in
adc
inc
xor
shl
lea
iret
jbe
sarb
aad
pop
push
pop
push
lds
arpl
cmp
icebp
push
mov
sbbb
stos
dec
sar
or
add
xor
lds
or
xlat
and
sub
mov
fs
stc
pop
xchg
popf
inc
cli
adc
jg,pt
aas
mov
pop
repz
dec
mov
stos
iret
fiadds
cmp
das
nop
ss
mov
add
in
std
ds
ss
cli
call
loopne
and
aas
jecxz
or
rorl
fbld
cmc
pop
out
push
movsb
sbb
mov
dec
mov
adc
insb
sub
arpl
dec
mov
repnz
fists
pop
scas
roll
rclb
nop
dec
push
rorl
fcmovnbe
jg
dec
mov
or
or
mov
cli
mov
sbb
lea
xchg
jp
ja
or
add
sub
into
mov
aaa
xchg
cld
dec
add
faddl
aad
jg
push
adc
test
mov
add
test
sahf
mov
shl
inc
and
pop
fsub
imul
out
dec
pop
cltd
or
orb
sbb
inc
sbb
into
cmpl
xchg
push
jns
xlat
cmp
lret
lods
inc
dec
fstl
in
ja
outsb
or
lahf
lahf
xor
jecxz
mov
iret
jge
fidivl
mov
cmpsb
inc
dec
xchg
fwait
movsl
pop
es
ja
mov
icebp
js
add
cmc
xlat
and
push
daa
das
mov
sarb
out
inc
or
sub
stos
push
outsl
into
or
data16
cmp
pushf
adc
and
sub
js
mov
mov
je
outsl
mov
stc
loopne
insl
jge
lock
or
loop,pt
out
and
ffreep
repnz
xchg
test
fbld
fistpll
test
adc
out
cmpsb
fs
test
lret
add
repz
sub
adc
int3
lock
sbbb
mov
push
mov
xlat
dec
or
xor
mov
std
es
popf
push
cmp
test
addr16
xor
sahf
imul
or
push
xor
dec
xor
aaa
push
test
or
add
aad
push
mov
jge
jl
int3
sub
mov
ds
push
outsb
loope
fildll
stos
bound
cmc
xor
mov
loop
repnz
je
rorl
push
aaa
inc
fdivs
push
add
aad
pusha
pop
test
pop
popf
jp
push
mov
mov
bound
outsb
pop
add
jbe
stos
test
ja
cmpsb
sub
jns
in
sub
out
or
push
lods
xchg
cmp
mov
jne
adc
adc
hlt
ja
sub
mov
add
cs
dec
jae
push
popa
cs
lods
and
sti
mov
pushf
jmp
pop
ss
out
cmc
jmp
arpl
pop
mov
ss
jge
cmpsb
push
mov
sbb
insb
fsubs
mov
mov
mov
sbb
imul
lds
jnp
call
les
das
push
test
ret
cli
inc
push
mov
addr16
dec
int3
nop
jp
fs
mov
test
stos
xor
orb
andl
test
push
dec
jns
inc
mov
sub
test
cmc
sub
dec
or
and
inc
lahf
dec
mov
testl
mov
push
adc
lods
gs
or
enter
add
push
and
adcb
sahf
mov
das
not
sub
cld
add
or
xor
push
es
dec
jp
orl
and
sub
mov
push
cmp
and
jg
std
mov
sub
neg
cmp
mov
dec
enter
out
fmull
xchg
rorb
arpl
mov
movsb
jg
pusha
repz
sahf
pop
jge
cmp
and
fsubrs
aam
lods
outsb
fdivp
cmp
or
shrl
mov
out
js
rcll
push
rcll
mov
lods
lahf
out
mov
gs
bound
inc
rcrb
fistl
icebp
push
pop
imul
sti
ljmp
cmp
fs
pop
xchg
inc
sub
loopne
cmp
jmp
mov
push
xor
jae
xchg
mov
ret
rcrl
and
in
and
pop
iret
adc
cmp
fstl
movsb
mov
add
fcompl
xor
fcoml
push
test
cmpsb
pop
inc
shrl
xchg
pop
dec
sub
mov
xchg
mov
jb
scas
xchg
aas
das
jae
stos
imull
in
jbe
lods
mov
add
cld
pop
or
scas
out
into
sbb
cwtl
and
sub
sti
push
fidivl
testl
jp
adc
aas
mov
clc
rorb
xor
dec
dec
rorb
sub
lcall
seta
dec
pushf
cmp
xlat
in
mov
loopne
loop
pop
stc
push
push
mov
insl
xchg
fildl
cmpsb
je
popf
push
xor
shrb
lds
lods
mov
jb
ret
push
andb
lock
mov
out
rol
cld
in
fimuls
dec
xchg
and
andb
mov
cmp
push
sbb
js
popa
in
div
daa
data16
enter
jae
push
rclb
pop
ss
addl
arpl
sub
mov
mov
daa
gs
hlt
lds
and
rclb
adc
mov
cmp
jns
sub
mov
mov
cmp
lds
lahf
mov
jle
outsl
add
lods
imul
outsb
stos
or
nop
fiadds
dec
inc
pop
test
repnz
adc
pop
int
mov
jg
and
jno
push
test
fmulp
and
sub
xchg
cld
out
adc
loopne
mov
nop
xchg
mov
mov
stc
xor
imul
mulb
mov
pop
cmp
inc
mov
add
inc
lea
fnstenv
sbb
daa
cltd
shrb
setnp
fwait
insb
adc
sub
daa
cld
push
mov
inc
fwait
cwtl
into
out
lods
xlat
pop
cmpsl
imul
filds
xor
dec
jg
jnp
scas
in
mov
xchg
adc
das
loope
mov
jmp
sub
xchg
and
add
sbb
push
inc
test
adc
xor
loope
and
rolb
dec
xor
mov
xor
int
rcll
mov
movsb
sti
jnp
add
push
push
or
scas
xchg
jecxz
xor
je
mov
out
mov
aaa
movsl
inc
das
scas
or
and
mov
xchg
gs
arpl
jns
test
dec
ja
dec
test
mov
psrld
sbb
adc
imul
and
jno
jbe
popf
xor
xchg
xchg
xlat
sub
imul
xor
or
stos
out
mov
push
mov
adc
xor
arpl
loop
js
aam
pop
stos
cli
and
bnd
pop
jae
je
mov
fwait
das
push
mov
test
xor
mov
mov
sahf
sub
add
dec
sbb
pusha
push
cmpsb
repnz
jle
push
aad
out
call
rolb
cmp
push
gs
repnz
sbb
enterw
shl
data16
js
jnp
xor
dec
shlb
subb
mov
push
mulb
nop
std
mov
scas
lea
mov
xor
cmp
shll
cmp
mov
dec
lahf
scas
pop
scas
or
daa
xchg
in
fwait
dec
sbb
out
ror
ja
xor
push
xchg
push
out
dec
mov
in
dec
sbb
xor
xchg
popa
sub
lret
nop
ss
cmp
mov
sbb
pusha
jnp
out
stos
sbb
jo
sbb
push
add
out
adc
jnp
lcall
imul
ja
stos
push
sub
sub
push
add
jmp
cmpsb
aad
mov
inc
movq
inc
cmp
lret
and
pop
pop
insb
loop
outsb
insl
movsb
repnz
call
mov
fldenv
pop
mov
stos
and
mov
aas
sbb
loopne
aam
dec
adc
stos
imul
mov
icebp
mov
sub
jne
adc
out
mov
insl
lcall
loopne
call
and
lods
mov
imul
jns
jecxz
sub
popa
sbb
test
xor
pusha
jne
cmpsb
sahf
test
mul
mov
push
mov
pop
out
inc
loopne
cmp
out
cmp
jp
out
cmpsb
shlb
lcall
dec
gs
adcl
inc
out
lods
push
jmp
jae,pn
sub
pop
sbb
push
aas
adc
mov
xchg
sarl
ficomps
dec
push
xchg
call
and
imulb
cmp
cmpsb
and
addr16
mov
mov
xor
add
sub
out
jnp
dec
jnp
popf
mov
mov
dec
jo
mov
loope
xchg
push
mov
xchg
sub
mov
sbb
adc
push
test
mov
cmp
mov
cld
stos
xchg
aam
filds
cli
mov
bound
dec
outsb
jnp
js
or
inc
repnz
iret
jne
cmp
mov
pop
dec
jecxz
das
int3
push
mov
jmp
xor
jp
mov
iret
test
mov
jle
add
jmp
lar
lock
adc
lret
mov
pop
aad
xchg
popa
mov
cmp
pop
cmp
dec
mov
xor
movsl
inc
jnp
jae
imul
cld
loope
xchg
inc
bound
mov
pop
fstpl
jle
pop
mov
dec
xor
push
jp
cld
mov
cmp
mov
decb
sets
mov
lret
xlat
ja
xchg
pop
data16
cli
nop
in
es
and
mov
dec
sbb
add
jb
lea
mov
ljmp
mov
xlat
jle
xor
inc
fmull
jp
push
cmpsb
xchg
jnp
mov
mov
fwait
xor
in
enter
inc
push
sarl
fidivrs
mov
pop
rorb
sbb
sarb
mov
jae
scas
nop
sbbl
mov
jbe
test
xor
test
mov
mov
das
adc
and
push
jmp
push
popf
cs
mov
xor
test
mov
mov
xchg
es
mov
jecxz
push
add
cld
adc
test
cmp
stos
enter
icebp
loop
rclb
loope
lret
xchg
push
aad
mov
addr16
movsb
cmp
push
add
pop
pop
ss
daa
mov
jae
shl
enter
loope
push
mov
pop
aaa
or
jmp
ja
ret
sub
negl
dec
sar
les
inc
aam
xchg
push
cli
shr
pusha
fwait
sub
adc
pop
outsl
and
sub
sub
inc
aaa
imul
fists
sub
push
jmp
and
andb
pusha
sbb
pop
movb
dec
sub
fists
sahf
jnp
rcl
or
rolb
repz
icebp
and
cs
icebp
stos
pop
fisubrs
call
adc
mov
jae
jge
dec
cmp
sti
cmpsb
dec
mov
call
mov
pusha
es
fisubrs
cmp
sub
sbb
mov
std
mov
lods
and
or
stos
imul
sub
and
xchg
rorl
sub
mov
xor
push
lods
loop
dec
push
jno
repnz
and
cltd
jae
into
shlb
out
mov
sbb
test
push
sub
adc
sbb
mov
out
dec
jge
mov
or
jns
sub
shll
scas
int
cmpsb
inc
iret
ja
fldenv
pop
leave
inc
add
ljmp
jecxz
jne
cmp
jg
xchg
sbb
mov
faddl
gs
leave
cmp
out
push
in
adc
xchg
out
hlt
movsb
or
je
hlt
cli
xor
jnp
ja
push
sub
prefetch
or
out
das
pop
mov
add
xor
ret
cmp
mov
int3
pop
sbb
jmp
xchg
cwtl
movsl
jno
dec
and
out
and
repz
adc
pop
xchg
sbb
mov
lods
push
cld
out
cmp
jae
add
iret
popf
jle
lock
lcall
popf
inc
popf
add
push
pop
jne
xchg
xor
dec
test
lods
mov
push
push
test
dec
outsl
jle
push
int
mov
push
inc
push
aaa
or
cs
sub
push
hlt
xlat
add
cmc
cmp
cwtl
or
mov
mov
mov
loop
test
fcomps
inc
xor
cltd
push
test
push
imul
cltd
add
xchg
jmp
push
icebp
je
in
and
js
fsts
addb
out
jmp
rcl
das
jecxz
daa
fcos
mulb
and
xchg
and
or
imul
mov
mov
sti
mov
std
cli
sti
or
dec
jns
mov
sbb
push
fwait
xchg
mov
xchg
rorb
pmullw
push
sub
jmp
je
xchg
jmp
movb
push
or
xchg
inc
repz
nop
nop
pop
decl
jmp
sbb
dec
je
mov
mov
mov
rcrl
mov
xor
cmp
ret
mov
cmp
div
push
mov
lock
sbb
das
pxor
pop
arpl
rcrl
sbb
fiadds
idivl
add
add
mov
lods
mov
int3
mov
sub
and
shll
test
pushf
jg
sub
in
xchg
pop
jae
xor
pushf
adc
mov
repz
jae
sub
cli
sub
std
and
fmull
lret
xorb
mov
sub
and
out
mov
lret
push
in
js
and
fs
pop
sahf
movd
pop
mov
dec
in
and
mov
push
sub
inc
ret
mov
jns
xchg
jns
and
mov
mov
pop
stos
popf
push
xor
enter
mov
aas
pop
pop
cmc
sub
and
fstps
mov
mov
lods
pop
loop
stos
cwtl
add
push
adc
push
and
and
test
js
and
xchg
xor
sbb
add
sub
pop
xchg
daa
imul
mov
sub
cmpsl
imul
inc
xor
add
test
mov
push
or
cwtl
cltd
add
jae
scas
lea
and
out
leave
je
mov
ja
sbb
dec
rcl
xchg
xchg
ljmp
dec
add
add
inc
nop
js
cmp
dec
xchg
mov
stc
fildll
adc
sub
xor
push
cmp
in
mov
xchg
cmp
push
js
cmp
inc
adc
push
cwtl
mov
scas
jmp
mov
lock
into
jecxz
mov
movsb
pop
mov
movsb
add
out
jge
outsl
jbe
jecxz
xlat
fidivrs
xchg
movsl
xchg
mov
movsb
mov
xor
es
gs
xor
and
xchg
sbb
inc
mov
cmp
or
push
jns
aas
adc
pop
push
je
jg,pn
insb
xor
cld
sbb
mov
aaa
leave
push
push
cmp
sub
fisubrs
test
push
icebp
iret
push
ss
jbe
addr16
and
arpl
sar
cmp
xor
lret
add
fmulp
test
aad
pop
xor
arpl
in
loop
sti
ja
out
scas
in
mov
xor
pop
cmpsl
mov
sar
cld
in
adc
enter
sub
mov
lret
pop
jmp
jle
jg
loope
je
std
mov
stos
lock
subb
and
mov
call
call
mov
pop
sbb
icebp
pusha
jl
mov
outsl
icebp
into
push
add
xchg
arpl
call
in
dec
lahf
movsb
inc
cmpb
ljmp
rcrb
or
fwait
stos
inc
push
js
test
lcall
clc
or
jne
insb
xor
call
cmpsb
adc
filds
lds
adc
xorl
sub
int3
xchg
cmpsb
mov
je
lcall
lret
loope
test
enter
jo
pop
dec
inc
in
jnp
les
inc
jg
dec
int3
jb
pop
lea
sub
call
inc
add
push
in
push
mov
daa
stos
fbld
imul
subb
sbb
ret
aas
mov
test
sub
out
stos
and
mov
arpl
notb
mov
or
dec
arpl
ds
dec
insl
push
sub
lret
ljmp
sub
jle
xchg
mov
jmp
das
ret
mov
pushf
fcmovnb
sbb
ljmp
pop
mov
sub
mov
xchg
and
hlt
dec
add
xchg
xchg
nop
jecxz
sti
dec
mov
sub
xor
mov
jge
ljmp
arpl
in
or
das
decb
jmp
mov
sbb
divss
ljmp
mov
mov
mov
stos
add
xchg
lret
sarl
xchg
or
and
bound
out
cmp
mov
mov
sahf
pushf
sub
imul
es
fldenv
loope
dec
xor
jle
int3
xchg
fldl2e
dec
popa
es
sahf
cmpsb
fwait
xor
pop
pop
ds
jmp
or
movb
test
stc
sti
imul
sub
push
mov
pop
xchg
inc
les
xchg
jnp
xor
jns
xchg
inc
stos
mov
call
dec
sbbl
mov
inc
xchg
inc
mov
dec
fnstcw
push
addr16
mov
push
mov
pusha
mov
in
outsl
push
mov
mul
xchg
pop
ret
stos
sub
xorl
repz
test
xorps
push
add
imul
mov
or
outsb
cltd
aaa
sub
es
rorl
xchg
mov
inc
bound
rorl
dec
pusha
repz
int3
sbb
lcall
mov
sub
leave
dec
aad
cwtl
dec
ret
daa
movsl
imul
add
std
push
mov
lods
jg
std
cmovle
popf
jecxz
mov
pop
clc
push
test
stos
ret
lret
xchg
xor
mov
push
negb
cmp
mov
jle
sbb
hlt
fsubl
lret
add
nop
mov
test
cs
imul
lea
dec
push
popf
xchg
jo
adcb
lock
or
test
jo
cmp
out
xchg
add
push
pop
out
insb
daa
test
arpl
cs
inc
pop
cmp
jb
insb
enter
pop
dec
sub
repz
testb
sahf
or
ja
or
mov
rcr
mov
aas
sbb
pop
jne
shr
insl
rcrl
sub
mov
push
xchg
sbb
adc
jecxz
jle
jp
scas
xchg
lods
dec
sbb
pop
hlt
add
mov
sbb
add
mov
dec
fsubrs
pop
lret
mov
mov
ss
cmpsl
hlt
bound
push
stos
jnp
and
mov
inc
inc
xchg
daa
test
xor
push
or
mov
ret
inc
stos
xor
adc
aaa
sub
or
xor
mov
inc
jb
pop
xchg
stc
fiadds
jge
mov
ficomps
mov
xor
daa
push
pop
push
or
mov
gs
mov
cmp
push
mov
xchg
or
dec
mov
in
adc
loope
xchg
mov
or
push
inc
cmp
mov
lds
inc
sbb
loop
ror
inc
inc
outsb
cld
in
mov
lret
hlt
enter
adc
stos
pop
mov
or
jmp
gs
or
push
sub
test
lock
inc
inc
enter
sub
popf
fidivl
mov
clc
mov
jbe
lea
cld
data16
rorl
pop
dec
xor
incl
sbb
adc
mov
pushf
cwtl
cs
cmp
cmp
push
movsl
push
mov
popa
test
out
or
inc
dec
roll
fiaddl
adc
test
clc
push
icebp
push
adc
inc
or
fcompl
sbb
or
dec
dec
inc
mov
lock
cmpl
mov
shl
mov
or
jns
outsl
xchg
push
cmp
add
ljmp
mov
or
call
ljmp
pushf
scas
xor
ret
cmpl
sbb
test
jo
pop
push
cmp
subb
int3
and
sti
push
aas
outsl
pusha
cld
stos
xor
xchg
sar
ja
xadd
mov
push
push
int
ficoms
add
cmp
xchg
jg
push
adcl
popf
xchg
movsb
pop
push
push
data16
test
sub
add
cmpsb
lods
mov
dec
add
rorl
adc
add
inc
imul
jl
cmp
cmc
call
rorl
and
mov
mov
mov
lret
in
insb
icebp
int3
pop
int
negl
jae
popa
add
nop
iret
xchg
push
pop
js
insl
shll
out
jno
inc
and
out
pop
sub
inc
jne
int3
shlb
dec
mov
or
jecxz
add
jns
sarl
sbb
pop
popf
add
pop
fcom
jno
or
sti
dec
mov
popa
repnz
xchg
cmp
mov
xor
cmp
mov
pop
fcmovne
movsl
xor
scas
add
jp
mov
pop
push
push
adc
jp
popa
or
mov
mov
and
push
out
sbb
dec
pop
popf
stos
sti
dec
pop
mov
and
jg
bound
movsl
mov
xchg
xor
cwtl
inc
lods
and
out
cmp
dec
pop
xchg
leave
add
ret
fnstcw
sahf
mov
lret
jbe
sub
jns
jne
jns
sub
lds
jp
push
loope
jne
loope
jae
das
cmp
outsl
xchg
aaa
push
fs
xchg
cwtl
xchg
in
pop
mov
mov
fcoms
call
std
mov
lea
cmpsb
fcmovnu
dec
leave
fdivr
sahf
mov
aad
dec
sub
mov
std
aas
push
xor
addr16
insb
push
gs
dec
sub
pop
sub
cld
and
xchg
pop
loopne
cmpsb
scas
aaa
pop
out
adc
imul
xchg
xchg
push
push
sub
and
pop
inc
enter
cltd
push
sbb
sbb
lods
sbbb
pop
aas
dec
stos
xorb
leave
dec
outsb
sub
in
jmp
rcl
sbb
jp
inc
andb
cs
data16
ffreep
sub
push
pop
insb
int3
testb
je
adc
jge
rorl
movsb
mov
xchg
jle
mov
mov
cmp
mov
xchg
and
dec
test
xchg
popf
imul
and
mov
sbbl
dec
jns
mov
cmpl
scas
xor
pop
push
in
enter
inc
lcall
jns
lahf
lahf
cmpl
sub
dec
or
icebp
cld
push
dec
popa
jmp
xchg
or
dec
jg
ret
dec
xchg
sub
pop
xchg
jbe
cld
inc
fsubrs
xor
outsb
cmp
mov
xor
lods
push
adc
rclb
mov
sbb
sbb
lock
jg
xchg
ret
mov
and
cmp
mov
adc
insb
jnp
ljmp
sub
scas
xchg
out
or
repnz
scas
cmp
stos
pop
push
add
push
mov
out
ss
cmp
xchg
iret
leave
or
pop
imul
push
dec
daa
dec
out
push
in
xchg
out
mov
jo
test
test
cmp
lea
cmp
and
daa
xor
in
pop
xchg
cwtl
cmc
sarb
or
orl
mov
xchg
mov
mov
push
sbb
nop
mov
mov
ret
leave
mov
hlt
dec
xchg
mov
jae
lahf
fmul
aaa
pop
xchg
jns
mov
push
arpl
test
pop
das
inc
push
test
inc
cmp
mov
jge
jno
push
leave
pop
sti
sbb
mov
inc
inc
mov
out
sbb
inc
push
mov
ljmp
add
dec
dec
out
xchg
mov
cmp
out
mov
cmp
fdiv
aaa
bound
mov
sub
int3
sbb
fimull
js
icebp
lods
cli
mov
sahf
ljmp
int
or
xchg
add
pop
in
iret
or
pop
mov
mov
jae
bound
cmp
pop
lods
jb
aad
push
jnp
adc
pop
push
cmp
cmp
iret
dec
adc
jge
ficoms
or
pop
jle
icebp
nop
lcall
jae
xor
and
dec
mov
aad
movsb
out
inc
push
popa
in
fld
inc
xchg
sub
pop
lds
jnp
push
dec
sub
jne
dec
mov
and
mov
aaa
and
jno
dec
mov
sub
idiv
mov
mov
js
mov
popf
mov
mov
scas
mov
subl
push
jl
xchg
push
fimull
pop
rcll
in
leave
mov
test
rcll
jne
outsb
jl
into
cmc
cmp
dec
cld
les
fidivl
add
jmp
leave
fcoms
arpl
sub
pop
mov
out
das
cmp
insl
mov
adc
inc
adc
aaa
arpl
hlt
or
add
adc
mov
inc
movsl
fisubl
sub
sub
fs
call
js
testb
ret
xor
loope
dec
xchg
out
mov
call
xor
movl
lds
jnp
icebp
push
fs
xchg
fcmovb
cmp
push
pop
add
pop
mov
or
adcl
jmp
mov
or
cmp
fcoml
sbb
dec
lea
pop
icebp
push
adc
rcrl
mov
test
lret
cli
int
pushf
in
jae
pop
shll
clc
mov
jp
ljmp
dec
lret
test
push
mov
dec
or
data16
pop
or
inc
pop
ljmp
into
xor
sbb
sub
lock
and
jno
pushf
inc
inc
jp
pop
jge
lretw
call
lcall
jne
fcomps
and
sbb
inc
pop
into
and
test
xchg
repz
push
lret
xor
adc
pop
mov
mov
in
addl
cld
dec
jns
daa
fmul
aas
repnz
and
call
cmp
pop
or
inc
jno
insl
mov
fs
mov
cmp
in
push
scas
fstpt
jne
or
in
jp
dec
sbb
adc
stos
mov
xor
enter
mov
pop
aam
mov
mov
push
push
or
fcoml
sbb
adc
out
negl
mov
or
shll
cld
sti
dec
adc
inc
push
pop
and
push
lret
pop
sbb
bnd
push
add
cs
bnd
jo
out
mov
mov
sbb
hlt
popf
scas
push
xor
mov
sarb
xor
pop
push
insl
cmp
fwait
pop
leave
or
inc
dec
xor
movsb
ss
cmp
nop
punpcklbw
and
mov
ja
loop
sub
push
cmpsb
and
jmp
dec
jns
pop
pop
aad
cli
xor
cwtl
mov
js
lret
adc
ret
xchg
inc
inc
adc
xor
int
hlt
mov
add
aaa
push
jp
fcmovbe
cwtl
xor
cwtl
xchg
lcall
nop
push
gs
andb
decb
inc
in
movsl
adc
pop
fwait
jo
cmpsl
mov
ljmp
out
cmpsb
loope
in
inc
inc
push
outsl
dec
mov
dec
xchg
aam
nop
in
dec
add
mov
imul
stos
push
dec
mov
sub
cltd
ljmp
stos
addr16
ja
insb
icebp
lods
pop
sub
mov
fdiv
push
lcall
xchg
popa
push
mov
in
stos
cld
mov
test
push
fsubrl
or
pop
aas
xchg
scas
loope
or
dec
ljmp
mov
shrb
xchg
lods
sbb
mov
push
ja
rolb
lahf
cmpsb
pop
add
add
sbb
lods
xlat
movsb
shrb
xor
adc
jo
shlb
aam
sub
es
bound
jo
sub
mov
push
into
dec
adc
mov
aaa
pop
sub
pusha
mov
test
jnp
adc
jo
xchg
or
test
pop
dec
shrb
mov
test
mov
push
test
jp
divl
dec
push
dec
sti
or
push
loop
jg
jp
imul
js
add
pop
xor
pop
insl
dec
add
arpl
cmp
lods
das
inc
aam
pop
sub
int3
popf
adc
movb
test
pop
fsts
aam
and
shr
push
mov
sahf
scas
lahf
dec
cmp
inc
repz
das
sub
es
decb
push
insb
mov
fucomip
jl
repnz
aad
lret
ds
fsubrp
mov
adc
lock
add
push
ds
fcmovnu
outsb
mov
sub
pop
mov
push
xchg
add
add
or
ss
in
and
pop
js,pn
push
movsl
repnz
cli
sbb
pushf
mov
aam
or
mov
imulb
sub
sahf
cs
add
fcmove
mov
inc
mov
jmp
in
push
dec
pop
xor
mov
pusha
jge
idivb
stc
jle
in
outsl
jge
mov
mov
xlat
in
mov
mov
push
leave
xchg
sbb
repz
adc
xor
add
repnz
popa
mov
push
packsswb
insb
loopne
jnp
inc
shrb
leave
xchg
sbb
sub
jp
cld
push
pushf
pop
pop
mov
enter
movsb
adc
inc
jnp
cmp
cmpsb
xchg
rorb
mov
push
out
ficomps
mov
stc
xchg
push
cmp
xor
xchg
cmpsl
push
mov
scas
ret
loop
sub
mov
xchg
sub
sbb
mov
add
insb
ja
push
mov
mov
dec
cld
sahf
js
cld
iret
call
sub
cmp
ret
ret
rcll
xor
popf
leave
inc
in
bound
loopne
fsts
xchg
aam
fcomps
scas
pop
mov
xor
cmpsb
stos
inc
xchg
lods
mov
or
add
push
jecxz
mov
mov
test
iret
inc
mov
cli
jecxz
icebp
push
test
outsb
mov
ret
out
mov
dec
adc
jle
inc
in
xchg
jo
fdivr
or
scas
cmp
mov
jne
enter
int3
aam
push
dec
js
shrl
je
cmp
test
push
adc
adc
xor
fisubrs
sahf
add
insl
and
ja
ret
mov
or
nop
xchg
xchg
lahf
mov
jno
sti
mov
and
xchg
jo
sbb
pop
fcmovu
fdiv
outsl
mov
icebp
mov
inc
aam
les
cmp
lret
lahf
inc
mov
push
jno
add
pop
cmc
pop
iret
das
mov
es
sub
mov
daa
push
hlt
mov
out
pop
jb
xor
incl
dec
outsb
mov
jp
mov
dec
dec
xchg
mov
in
es
xor
jae
inc
sar
daa
jl
insb
aad
cmpsl
cmpsl
scas
inc
pop
adc
push
jle
lds
jp
ret
filds
loop
fistpl
adc
mov
xlat
add
push
lods
sbb
loopne
popf
ret
mov
loopne
push
sbb
mov
out
mov
jns
xchg
xlat
loop
fs
lock
add
cltd
mov
sahf
ds
jg
or
cmp
test
sub
mov
fincstp
mov
rcll
cli
jne
pop
jmp
enter
mov
xorl
lcall
in
mov
cmp
or
lret
cmpsl
cltd
mov
inc
jle
pop
or
cmp
jmp
pop
pop
jo
fcomi
not
cltd
push
ficompl
mov
imull
aas
mov
adcb
stos
jbe
dec
out
incb
mov
fwait
mov
jle
loop
lods
push
ds
add
xchg
jg
xchg
pop
push
ss
push
mov
in
push
push
repnz
sbb
xlat
push
mov
shl
xor
sub
into
inc
mov
aas
fiaddl
or
shr
out
jge
test
xchg
sbb
scas
push
mov
mov
ja
mov
pop
or
lds
jle
repnz
cld
in
aaa
mov
mov
push
xor
decl
aas
rcr
std
into
sahf
push
mov
inc
xor
push
pop
dec
pop
inc
movsb
sub
xchg
lods
inc
daa
adc
dec
mov
stc
sti
mov
testb
mov
push
mov
mov
in
mov
jno
pop
pop
xchg
mov
cmpsl
into
mov
mov
mov
test
fildl
mov
inc
mov
jno
and
int3
and
sub
or
push
mov
out
in
and
nop
repz
cmpsl
mov
xchg
inc
push
roll
mov
dec
and
mov
mov
push
adc
lret
daa
test
sbb
sub
push
orb
and
shlb
sti
dec
cmp
adc
flds
sbbb
mov
push
rclb
dec
push
mov
and
mov
add
daa
leave
push
cmc
out
sub
push
cmpsl
push
xchg
sbb
call
push
aam
push
aam
push
or
mov
dec
push
cmc
adc
jbe
adc
fsts
pop
lret
int
mov
fs
test
insb
mov
daa
push
cmp
rcr
add
insl
movsb
gs
adc
mov
jnp
mov
out
out
lret
cmp
ja
inc
lds
push
out
int3
sbb
in
xchg
imul
jle
cmp
pop
or
push
pop
in
and
sbb
sbbl
adc
jle
cwtl
repz
mov
repz
xor
loop
movsb
outsb
or
mov
subl
jmp
push
lea
or
mov
fs
int
stos
loop
pop
dec
decb
add
adc
inc
cmp
add
out
sti
js
insl
bound
insl
shr
mov
jb
pop
jle
bound
cmpsl
out
test
mov
fiadds
mov
cmpsb
pop
mov
sub
xchg
mov
fmuls
imul
ret
dec
sub
inc
inc
push
int3
cmp
sbb
mov
xchg
fistl
jnp
rorl
out
mov
in
jge
cmpl
push
fcmovb
pop
int3
xchg
lods
rclb
dec
inc
xor
orb
sbb
scas
loop
pusha
andb
jb
mov
shl
cmp
aaa
xor
scas
mov
and
out
xchg
xchg
fadd
imul
hlt
push
adc
mov
mov
ja
loopne
jge
or
push
test
jle
pop
incb
popf
scas
add
stos
cmpb
inc
add
in
icebp
out
push
imul
cld
mov
mov
mov
xchg
test
out
insl
mov
pop
add
push
adc
mov
shll
ret
xor
jg
and
in
mov
ljmp
rcll
pop
and
xor
mov
push
jmp
cmp
je
xor
nop
cld
jl
es
xor
push
rcrl
sbb
push
shl
les
push
mov
pop
push
xchg
mov
fmull
dec
ja
jbe
push
outsl
mov
insb
jmp
lret
aam
fists
ss
sbb
mov
lods
push
jno
add
jmp
mov
adc
xchg
mov
leave
movl
jecxz
mov
ror
negl
repz
and
or
xchg
in
xchg
shlb
clc
push
adc
dec
push
insb
inc
push
jg
adc
jle
sbb
pusha
push
sti
out
stos
mov
cmp
aam
shll
jg
leave
add
mov
cmp
movsb
loope
popa
test
sahf
mov
sub
jmp
adc
jge
adc
push
cmpsb
adc
push
mov
xlat
pop
mov
or
test
test
jno
mov
push
and
xor
iret
or
jmp
push
test
rclb
js
iret
xor
dec
clc
imul
loope
mov
adc
data16
and
sub
cmp
fmull
jns
sbb
push
inc
daa
mov
mov
cmpsb
and
ror
adc
js
repnz
je
out
leave
dec
mov
pop
in
mov
bound
cmp
mov
adcb
loop
ds
mov
int3
mov
mov
sbb
bound
mov
push
mov
or
sahf
and
rcrb
fnsetpm(287
ret
mov
mov
outsl
mov
cld
xchg
inc
loopne
add
sar
and
cmpsb
js
push
lcall
in
push
add
dec
pop
and
mov
ja
js
mov
adc
mov
xchg
sbb
pop
xchg
sub
xchg
xchg
jmp
xor
jmp
dec
mov
mov
and
adc
repnz
out
push
imul
pop
xlat
mov
push
fisubrl
rcrb
bound
pop
push
lret
mov
cli
and
ret
push
fsubrs
mov
jmp
mov
jbe
aam
outsb
rcrl
adc
sub
addr16
daa
subl
sbb
lods
xchg
shrl
push
negl
jnp
jns
xchg
sub
lea
xlat
mov
inc
or
jl
pop
xor
pop
dec
orl
sbb
and
imul
sub
dec
xchg
fists
pop
or
mov
out
ja
movswl
adc
cli
cmc
jge
test
fisubl
rcr
adc
cmp
jle
sbb
or
hlt
push
adc
gs
pop
or
lahf
jns
adc
xor
or
or
push
popa
adc
test
insl
inc
jecxz
test
add
and
cmp
pop
hlt
nop
in
push
mov
stos
inc
jb
stos
addr16
in
dec
sahf
xchg
sub
pop
pop
cmp
ret
fnstenv
mov
cltd
pusha
pop
jmp
xchg
or
jns
xchg
xchg
into
add
inc
cmp
imul
addr16
stc
enter
mov
cmp
out
pop
andb
call
xchg
enter
bound
mov
fstpt
push
pop
test
in
sbb
jnp
push
call
or
push
and
jno
aas
repnz
daa
pmulhw
repnz
jle
xor
or
lahf
lods
mov
push
fwait
dec
imul
out
cli
movsl
sub
pusha
loopne
or
jo
adc
or
iret
xchg
bound
mov
fdivrp
xchg
adc
xor
pop
push
adc
mov
sub
mov
call
xor
jl
testb
xor
mov
int
cmpsb
jae
push
leave
mov
inc
sbb
daa
add
scas
out
jg
int3
push
pop
in
dec
inc
data16
lret
cld
insl
jnp
sbb
mov
jno
push
sub
mov
and
outsb
mov
or
dec
fistl
adc
clc
and
inc
jp
shl
sbb
es
rclb
loopne
cmp
dec
imul
push
js
and
mov
sub
sbb
adc
scas
orb
push
xchg
push
mov
ret
es
fdivs
sbb
xchg
das
adc
daa
clc
xor
sbbl
int3
popa
xor
fwait
ljmp
gs
insb
loopne
cli
sub
fsubs
cmp
add
aam
lods
add
pop
jns
adc
dec
dec
aam
xchg
mov
inc
dec
aam
cmp
rcl
dec
inc
sbb
les
ja
dec
adc
les
jne
shlb
divb
sbb
ficoml
fisubrl
lahf
mov
rcl
xchg
xchg
stos
xchg
jl
loope
mov
scas
test
pop
pop
jg
stos
jb
push
mov
xchg
mov
out
dec
mov
nop
and
mov
in
mov
loope
pusha
push
mov
xchg
sti
stc
mov
cmp
push
aad
mov
jns
out
xchg
in
imul
movsl
push
lock
pop
leave
jno
fwait
addr16
gs
out
jne
popa
int
out
fimull
dec
std
mov
mov
insl
int
push
mov
and
cltd
pop
mov
pushf
mov
mov
imul
mov
rcrb
stc
fmul
xchg
fisubrs
sbb
std
mov
jnp
das
add
xor
push
adc
movsb
adc
out
sbb
and
stc
jmp
sub
mov
jae
jp
xor
stc
out
push
xchg
mov
xchg
jne
mov
cmp
cltd
sub
xchg
mov
jno
inc
pop
out
fbstp
xchg
jnp
and
mov
inc
sub
or
cmp
test
invd
push
dec
cmpsb
dec
mov
bound
fdivr
call
ds
cwtl
iret
mov
testb
xchg
aaa
pop
ficoml
pop
pop
rcrl
mov
jb
lock
cld
adc
or
imull
leave
push
add
hlt
lock
les
jne
mov
pop
pop
outsb
loope
shll
adcl
jns
outsb
int
push
mov
mov
fsubrl
or
pop
push
sub
dec
or
add
sbb
shlb
cltd
ret
sti
sbb
call
push
arpl
ret
adc
movsl
rcrl
or
push
sbb
mov
pusha
xchg
jp
ja
pop
lock
lret
aas
pop
xor
ja
test
ja
xor
pop
mov
add
mov
repz
dec
mov
or
loope
loopne
mov
imul
into
pop
mov
push
xchg
jle
adc
stc
scas
mov
mov
cmp
ret
or
iret
and
out
cld
cwtl
loope
mov
hlt
mov
xlat
add
movsl
dec
xor
xchg
ljmp
sub
stos
int3
mov
jecxz
arpl
outsb
xchg
fdivrl
clc
lcall
cld
ret
inc
mov
mov
jle
or
ret
jne
in
cmc
int3
jle
or
fwait
push
ficoml
sub
mov
xchg
scas
cs
dec
fsub
push
pop
leave
fdivrl
out
enter
std
cmc
out
aas
je
jae
sub
push
jmp
pop
in
out
ret
adc
pusha
loop
push
cmp
jnp
adc
stos
adc
mov
sub
mov
mov
outsb
xor
mov
ret
pop
push
add
inc
arpl
inc
jo
fnstcw
and
mov
inc
mov
jo
jmp
mov
pushf
je
aad
xchg
jecxz
popf
cli
rcrl
cld
push
push
inc
out
xor
jecxz
xchg
add
add
data16
cmp
dec
cmc
outsb
xor
addl
adc
jns
call
fistpl
leave
cmp
imul
es
test
cmc
sahf
pushw
or
inc
mov
sarb
ljmpw
stc
rcr
xchg
push
dec
in
pop
jno
insb
es
stc
or
shlb
mov
lahf
or
push
in
xchg
aam
mov
lods
ficoml
add
cmp
inc
test
sarl
xorb
jge
dec
mov
incl
sbbl
fadds
psrld
les
dec
xor
push
insb
aad
aad
insl
push
and
lret
in
mov
xor
mov
enter
jle
push
or
pop
scas
dec
push
adc
shl
dec
inc
sub
inc
push
int
sub
lock
xchg
popf
jb,pn
iret
add
cmp
mov
gs
cmp
imul
inc
icebp
xchg
jg
pop
mov
cmpsl
jge
fldt
in
repz
or
cmp
or
insl
loopne
int
or
jae
out
call
pushf
rcr
jne
add
cwtl
pop
jle,pt
push
ljmp
rclb
push
push
js
lods
pop
aad
lds
or
and
arpl
pop
jne
cmp
mov
cmp
and
es
mov
hlt
loopne
sarb
lock
out
or
jmp
aad
inc
insb
js
inc
aad
test
add
jmp
fadd
inc
loopne
ja
mov
test
sbb
pop
int3
andb
jl
jmp
push
fwait
nop
mov
jecxz
inc
fildll
push
imul
add
fstps
sub
pop
aad
cmp
sbb
xor
popa
pusha
mov
add
cmp
mov
negb
test
ror
mov
adc
arpl
add
add
add
ja
sub
decl
jp
fcmovb
sbb
push
xor
dec
aad
adc
xor
jno
lock
enter
fcomip
adc
repz
js
inc
sub
popa
in
outsl
push
les
mov
xchg
xchg
sbb
sbb
inc
in
sub
dec
adcl
cmp
pop
cwtl
and
add
xchg
cmp
xlat
loopne
adcb
jbe
mov
jae
or
mov
xor
aad
loopne
cmp
jae
sub
leave
jns
xchg
cmp
and
lods
adcl
jecxz
pop
loopne
pop
push
shlb
pop
inc
jns
add
push
mov
ds
and
push
sbb
bswap
pop
shll
dec
test
ljmp
cmc
xchg
ret
idivl
lods
in
les
int3
insl
xorb
or
leave
insw
mov
push
mul
sub
pop
in
mov
ljmp
jnp
leave
push
pop
pop
shrl
mov
push
pop
movsb
cmp
push
xchg
outsb
repz
lods
movsb
test
pop
xor
push
icebp
movsb
arpl
sarl
mull
imul
mov
fsubrs
xor
cli
imul
lret
sbb
adc
and
movb
jmp
adc
mov
shll
in
mov
imul
gs
sar
push
mov
std
lods
idivb
mov
arpl
mov
decb
call
mov
cmpsb
adc
inc
into
cltd
mov
xchg
dec
lret
pop
loop
mov
xchg
jge
enter
fcoml
mov
sbb
push
pop
aaa
enter
sahf
arpl
mov
sarl
xor
adc
in
sbb
leave
sarl
xor
or
xchg
xor
daa
mov
lret
test
dec
xor
xor
lret
call
test
sbb
outsb
add
mov
fcmovnbe
sbb
xchg
add
pushf
pushf
sti
int3
sti
testb
xchg
pop
pop
mov
xchg
out
mov
or
sub
inc
jmp
loop
ja
xor
cmp
int3
jo
add
scas
rolb
inc
sbb
sub
shl
fisubrs
sbb
daa
jmp
rcrl
or
mov
jecxz
push
add
sub
fcomps
iret
icebp
and
push
sub
negl
repz
xorl
stos
jl
and
repz
cld
shr
push
pop
jle
xchg
mov
inc
mov
cli
inc
aas
fsubrs
lret
mov
rclb
push
or
push
leave
ljmp
xor
loopne
lcall
add
mov
test
mov
xor
push
pop
inc
lods
or
mov
mov
fucomp
outsb
dec
adc
or
fiadds
push
mov
in
ja
and
stc
ja
sub
sbb
xor
fcmovnu
pop
push
inc
xchg
fucomp
insl
test
and
mov
outsl
push
neg
mov
pop
mov
fidivl
test
sub
cld
cmpsl
pop
into
sub
dec
repnz
enter
dec
out
shrl
adc
xchg
repz
jno
mov
dec
mov
int3
or
pop
add
imulb
je
cmp
sahf
call
fisttpll
daa
cltd
test
jge
xor
fnsave
push
pop
jb
xor
add
nop
cld
inc
xorb
popf
sbb
cmp
pop
rorb
ficompl
xchg
jns
fistpl
jge
add
cltd
lods
in
add
out
dec
mov
push
js
mov
or
imul
idivb
inc
cmp
icebp
mov
bound
shll
sub
pop
xchg
fsubrl
sbb
push
lahf
mov
or
cmc
aam
ret
sub
das
cli
stos
leave
pop
xsavec
mov
dec
cmp
ja
maskmovq
call
adc
cmpsl
leave
loopne
jbe
pop
pushf
mulb
lock
mov
in
dec
sbb
cmp
test
add
add
inc
or
arpl
cmp
fisubrl
adc
scas
scas
call
xlat
sub
xchg
xchg
loopne
scas
push
and
add
test
iret
xchg
jns
and
cmc
or
mov
fs
xchg
sub
sub
pop
push
mov
jp
loopne
sbb
lcall
mov
fidivrl
ss
jne
movsb
cmp
rclb
sbb
push
aas
mov
jge
sbb
or
inc
mov
push
aas
dec
mov
cmp
cmp
pop
sub
mov
clc
push
scas
pop
adc
les
mov
adc
cs
and
adc
bound
dec
ret
mov
xor
rcrb
es
push
outsb
aad
adc
jne
jbe
jne
repz
add
cmp
cmc
jo
mov
dec
push
test
in
sub
sahf
std
sbb
dec
imul
stc
cmp
adc
dec
ss
jmp
mov
test
cmpsb
and
jle
fisttpl
or
aam
test
in
into
data16
enter
push
cli
push
mov
jns
shlb
pop
test
xor
sbb
loopne
icebp
pop
dec
cltd
int3
inc
cli
push
add
popf
paddsw
pusha
xor
sahf
mov
jb
fdivr
xchg
out
loop
pusha
pop
dec
sub
outsb
sbb
xchg
clc
leave
adc
lret
out
push
pop
arpl
cmp
cmp
je
in
or
into
mov
cmp
int3
popa
into
ret
adc
in
loope
sbb
cmp
xor
sbb
push
test
dec
insl
fildl
std
mov
sbb
push
xor
mov
adc
fs
xor
xchg
rcrb
add
sahf
nop
pop
js
xchg
pop
adc
stos
adc
adcb
cmp
mov
dec
sahf
add
jae
lock
mull
add
and
add
jb
add
stos
inc
xchg
jmp
test
orb
lds
adc
mov
rorl
cld
adc
xchg
ss
pop
cmp
xlat
jle
mov
lcall
mov
arpl
lock
in
mov
mov
rolb
push
sub
das
sub
jl
je
gs
push
outsl
andb
cmp
push
push
or
dec
lock
jl
out
stos
mov
fcoml
pop
mov
jns
and
shll
sbb
add
out
je
int
xchg
aad
ljmp
das
ja
and
cmp
loop
adc
shrb
stos
lock
dec
mov
dec
and
aaa
sub
or
lret
mov
xor
jbe
pop
add
out
cmpxchg
cli
mov
mov
adc
jle
pop
mov
shl
cld
rolb
xchg
xchg
rcr
push
ret
clc
push
or
and
inc
dec
cld
rcrb
das
rcr
int
xchg
pop
jmp
xchg
and
dec
dec
inc
popf
inc
lcall
js
popa
cmp
je
cmp
xchg
fstp
aas
mov
or
mov
in
jns
imul
sbb
sbb
sub
nop
test
pop
sbb
and
insb
bound
addr16
xchg
dec
sbb
mov
ret
out
xor
dec
and
lret
push
fisubs
arpl
push
aas
out
lcall
fdivrl
jb
xchg
mov
push
or
dec
bts
js
dec
stc
out
sbb
xchg
scas
push
dec
loopne
xchg
mov
fwait
js,pt
jno
cmpsb
or
shr
mov
mov
pop
dec
fiaddl
mov
jmp
out
test
or
mov
sbb
dec
loop
loopne
xor
sbb
xor
xchg
je
sub
jmp
and
dec
push
icebp
push
xchg
stc
xchg
outsl
or
add
and
pop
cmp
out
loope
es
scas
or
lahf
test
orb
insl
inc
rcr
push
xor
and
push
fmull
cmpsl
in
aas
mov
fmul
aad
sbb
xchg
or
into
hlt
iret
into
pop
jno
fisubrs
mov
inc
fists
jns
and
add
mov
push
ficoms
scas
inc
imul
push
jnp
rcrb
push
add
push
sub
sub
icebp
mov
pop
addr16
mov
push
adc
mov
mov
cwtl
pushf
or
clc
adc
jne
xor
jns
mov
xlat
sahf
xchg
lcall
std
cmp
ret
mov
pop
mov
sbb
inc
cmp
fdivl
out
adc
mov
xor
repnz
decl
aaa
jo
mov
mov
xor
mov
popf
es
shlb
subb
pusha
dec
mov
popa
ret
or
and
jle
mov
into
pop
pop
push
xor
bound
jno
xchg
mov
jecxz
jne
or
das
or
cmp
xchg
mov
cli
test
push
idivl
fwait
aad
sub
sbb
pop
bound
mov
and
iret
das
testl
js
jge
shlb
out
sub
sbb
mov
push
movsl
lods
jnp
fcmove
push
pop
xchg
stos
mov
out
dec
popf
pop
push
and
test
ret
int
sahf
xlat
out
add
xchg
jp
outsl
cmp
xor
lock
hlt
rcl
xchg
stos
lods
sbb
push
enter
repnz
sahf
lcall
xchg
or
or
popf
mov
int
fstpt
adc
inc
mov
mov
dec
in
mov
cmp
inc
repnz
xchg
data16
pop
lret
pop
jne
ljmp
xor
jo
and
into
out
pop
cmp
aam
sub
jns
and
adc
mov
cmp
push
pop
arpl
and
pop
push
sbb
pop
inc
std
jne
popa
in
cmp
inc
pop
xchg
and
jno
lds
ss
pusha
rorl
mov
xchg
out
mov
fcmovne
orb
inc
jg
jle
jbe
pushf
mov
and
icebp
xchg
mov
negl
mov
cmp
int3
inc
mov
aaa
cwtl
lods
daa
mov
inc
dec
push
ficomps
push
mov
fs
sbb
div
xor
pop
lahf
and
add
push
inc
mov
fwait
mov
pop
pushf
aaa
mulb
pop
dec
js
cwtl
std
xchg
std
lea
mulb
xor
sbb
inc
sub
ret
pop
xlat
pop
mov
sub
bound
mov
sbb
jecxz
dec
mov
xchg
mov
sub
mov
adc
inc
cld
std
icebp
das
ret
pop
push
inc
ljmp
jg
das
jo
addr16
add
jns
enter
mov
xor
cmp
jb
out
pop
adc
addr16
mov
and
cmp
push
das
cmp
mov
xchg
dec
jmp
xor
mov
clc
jle
sti
jae
cli
dec
lea
arpl
bound
xlat
popa
out
das
mov
jge
mov
sti
mov
or
adc
cmp
mov
ljmp
daa
push
popa
push
stos
cmpsb
xchg
outsb
mov
pop
ss
push
dec
data16
push
into
roll
push
adc
in
cwtl
fldl
sub
mov
pusha
and
dec
pop
aam
movsl
pop
stos
mov
jo
sub
rorb
cmpsl
out
shll
sbb
pop
mov
mov
decb
push
or
jbe
daa
int3
dec
pop
pop
les
dec
and
and
test
cmp
cmc
test
ljmp
xchg
adc
insl
xor
xchg
cmpsb
ret
inc
pop
add
adc
dec
pusha
cmp
cmp
pop
cmp
push
pop
sbb
fsub
push
aad
cld
pop
fcomi
add
popf
add
sub
ja
push
mov
enter
and
mov
and
addr16
aad
decb
fs
push
pop
cmp
push
xchg
outsl
fbld
shlb
lret
cmp
add
adc
push
mov
xor
sub
jmp
lds
or
mov
pop
fcmovne
xor
xchg
sbb
mov
xor
sbb
cmpsl
test
add
jns
cmp
jmp
sti
arpl
push
mov
andb
fidivrs
jecxz
pop
es
nop
push
jne
ds
push
push
inc
push
jo
cmp
jno
inc
fnstenv
lahf
movsb
movsl
mov
jge
mov
dec
xchg
mov
adc
mov
insl
pop
popa
shll
mov
dec
andl
jbe
rcll
int
cmpsb
bound
adc
mov
dec
lods
stc
out
popf
inc
popa
mov
mov
xchg
or
jmp
jnp
mov
push
push
cmp
lret
push
sub
mov
jg
fsubs
jmp
xchg
push
fnstcw
stc
mov
enterw
daa
inc
adc
dec
or
in
addl
mov
movsb
adcl
std
and
mov
fiadds
add
into
xor
shrl
addb
xchg
or
lcall
jne
mov
shl
insl
frstor
sbb
fldcw
xor
adc
mov
testb
in
mov
xchg
stc
je
dec
or
mov
aas
dec
mov
into
mov
cmpsl
in
inc
fwait
ss
les
adc
rolb
or
jl
mov
mov
cli
es
fildll
es
or
push
int3
negl
outsl
xor
sbb
not
ljmp
in
stos
shrl
repz
cmpsb
mov
jns
xor
cmc
dec
das
and
and
mov
xchg
mov
xchg
repz
mov
add
and
clc
ret
repnz
lock
pop
js
jp
push
rcrb
pop
push
out
das
loope
xor
andb
mov
jbe
repz
cmp
mov
popf
mov
jge
pushf
xchg
shll
sbb
cld
leave
loope
jnp
xchg
adc
cmpsb
mov
decl
sbb
lock
shrb
jmp
push
insb
xchg
push
jmp
ljmp
mov
cmc
pusha
pop
loop
cmpsb
or
mov
mov
in
sub
aaa
mov
jo
or
xor
push
sub
inc
arpl
repz
dec
aas
jae
push
lods
sbb
out
mov
gs
push
test
mov
jb
xchg
or
lods
lods
sbb
xchg
cmp
repnz
rolb
jge
fisttps
cli
leave
daa
mov
gs
aad
hlt
pop
xchg
dec
or
push
xchg
mov
inc
ret
push
or
aad
inc
int3
jmp
dec
out
inc
jg
jp
aad
push
inc
lods
cmc
adc
aaa
bound
or
inc
out
pop
pop
xchg
mov
fistpl
out
add
ljmp
jge
mov
push
cmpsb
stc
mov
imul
sahf
ja
sub
adcl
dec
es
sub
mov
dec
jb
mov
mov
pop
pop
popa
or
fbstp
aas
xor
sub
out
push
testb
adc
and
xchg
out
out
mov
outsl
sub
insl
clc
cmpsb
insl
les
fs
pushf
icebp
jb
movsb
pop
insb
jl
inc
push
imul
repz
mov
mov
push
je
and
into
in
loop
int
inc
jg
movsl
push
mov
and
inc
cld
pop
mov
adc
test
ds
mov
cmc
aaa
mov
sahf
mov
lock
mov
clc
stos
iret
cmc
in
mov
loopne
adc
aaa
and
testl
imul
subl
add
mov
gs
or
jecxz
jg
sbb
iret
xchg
mov
mov
mov
cltd
cmpsl
js
push
fnsaves
xor
fimull
ja
es
or
aam
push
ljmp
mov
in
loop
cmp
jno
xchg
sbb
and
push
test
adc
xlat
mov
aas
mov
idiv
jmp
pop
cmp
pop
lods
mov
sub
inc
sub
outsl
xchg
and
mov
and
out
rorb
pop
mov
test
adc
int3
push
pop
in
jle
call
fsubrs
ss
lret
jnp
add
sub
push
fcmovb
mov
mov
jmp
rcl
imul
sub
and
xor
ss
push
dec
addl
add
int3
push
aad
call
loopne
jb
ja
push
aam
test
sbb
test
push
sbb
add
imul
or
pusha
xchg
add
or
imul
inc
sti
sbb
adc
shr
gs
cmp
or
jbe
movb
push
push
cmp
inc
sub
mov
out
sbb
dec
repz
fcmovnb
aas
stos
dec
loope
out
add
inc
pushf
jecxz
adcl
push
cltd
push
push
mov
out
stos
sub
sbb
ficoms
fiadds
je
out
sahf
jnp
push
or
jnp
enter
jns
cltd
dec
mov
mov
in
jo
mov
stos
xchg
pop
stos
mov
test
jns
mov
mov
push
xlat
xor
xchg
stos
mov
sub
pop
xchg
leave
jg
jg
in
cld
rolb
aam
ficompl
rorl
repz
push
lret
fsubs
jp
jnp
or
lods
add
sbb
jle
fnsave
adc
fcomip
je
negl
dec
mov
mov
jle
out
das
outsb
and
dec
ds
lret
and
dec
inc
pushf
loop
mov
mov
pop
jo
or
push
sbb
cmpsb
cmp
ret
jp
pop
sub
sub
gs
mov
push
hlt
sub
int
xchg
lock
mov
or
fsubl
mov
xor
insb
push
cmp
and
and
xor
sarb
sub
pop
shlb
movsb
scas
scas
dec
ljmp
mov
daa
ja
cmpsl
imul
or
cmp
in
mov
xchg
notl
or
ret
mov
stc
inc
fcomps
andb
out
bound
jmp
adc
sti
andb
ss
or
das
pop
std
in
add
or
push
jge
call
lds
rorl
xchg
aad
sbb
insb
xor
push
lods
xchg
mov
int
dec
push
inc
sub
push
aaa
fistl
jno
loope
xchg
mov
aaa
mov
aas
mov
sti
sbb
loope
sbb
mov
in
push
mov
mov
push
or
scas
mov
jns
fisubl
sarb
popf
cld
or
fucom
jno
push
test
and
fnsave
xchg
cmp
in
mov
dec
sti
and
sub
pop
mov
lahf
test
dec
ret
push
mov
imul
stos
xchg
jb
push
inc
test
pop
jl
mov
push
punpcklwd
fstpt
dec
inc
adc
adc
insb
mov
fbld
loope
test
and
dec
cmc
dec
push
sarl
scas
dec
in
cmp
test
enter
mov
movsb
jmp
rclb
or
ljmp
mov
pop
pop
jecxz
fwait
lahf
cmp
and
aaa
popa
cmpsl
cltd
mov
insl
lret
mov
enter
cmp
add
sbb
test
jns
dec
cmp
adc
xlat
js
pop
mov
mov
test
mov
lcall
dec
repz
lret
inc
xchg
add
xor
lret
sub
in
fwait
push
fimull
and
enter
sbb
lcall
adc
aas
mov
and
les
adcl
and
dec
std
jp
pop
gs
inc
cmp
sbb
pop
and
sub
lock
jecxz
jge
dec
lods
in
pusha
push
push
pop
mov
rolb
mov
xchg
pushf
pop
imul
mov
sub
pop
call
mov
dec
das
pop
adc
xor
clc
push
add
push
push
mov
mov
mov
out
fidivs
shll
mov
and
add
repz
xor
inc
fisubl
fsts
jmp
popf
in
push
cmpsb
hlt
dec
inc
sub
inc
mov
test
inc
test
je
pop
jl
ds
hlt
adc
fs
in
les
dec
lock
hlt
fs
adcb
mov
xlat
out
test
test
cmp
sete
mov
gs
loopne
mov
fdivl
sub
pop
mov
dec
add
or
cmp
pop
bound
cwtl
dec
and
in
jp
cmp
mov
add
cs
jbe
movsb
or
cmpsl
addl
shl
jo
mov
jbe
jo
icebp
gs
sub
dec
in
add
in
js
test
inc
arpl
movsb
adc
pop
scas
cmp
in
mov
mov
adc
scas
add
aaa
add
out
fstpl
push
xor
test
jmp
dec
in
jno
dec
ret
mov
ret
inc
adc
and
push
je
lock
xor
or
es
jno
loope
call
test
jo
dec
add
lock
push
jecxz
pop
mov
lcall
inc
xchg
lods
pushf
insb
xchg
scas
or
jmp
dec
in
loopne
pop
sbb
adc
sbbl
jmp
pushf
testl
dec
xchg
lcall
imul
pusha
sbb
imul
imul
cmp
sti
out
cmp
in
ret
xchg
movsb
or
mov
popa
push
insb
cmpsl
sbb
mov
lds
add
pushf
sbb
not
cmp
push
jno
fsubl
outsl
cmp
sub
sti
pop
sub
pop
mov
and
pop
xchg
pop
and
push
mov
cld
test
into
jmp
decb
xchg
hlt
mov
sarb
repnz
cmp
pop
sbbb
pushf
in
adc
lret
xlat
pop
push
cmp
xor
jbe
adc
loop
pop
sub
icebp
or
or
loope
out
adc
sbb
add
notl
and
mov
outsb
push
add
rolb
lods
cmp
or
in
movd
sub
add
mov
mov
dec
ja
pop
sub
mov
fidivl
mov
into
lret
and
int3
jns
inc
jmp
jne
test
fldenv
push
mov
jmp
inc
xchg
xchg
or
mov
lret
lock
cmc
outsb
ja
sahf
loop
push
repz
andb
mov
mov
pop
fbld
jns
cmpsl
in
push
push
jge
xchg
loope
mov
pop
xlat
cmp
push
roll
stos
push
adc
sahf
dec
dec
push
test
pcmpgtd
ficomps
rolb
out
cmpsl
mov
repz
sub
out
rcrb
inc
fdivrs
sub
testl
lret
inc
add
je
mov
cmpb
sahf
or
pop
rorb
mov
add
push
out
jmp
into
xor
xor
mov
movsb
pop
dec
pop
jl
add
dec
sbb
cmpsb
xchg
sub
mov
pushf
loop
jno
test
fistps
mov
sbb
mov
shlb
jns
dec
push
cmp
mov
fldenv
sti
repz
push
pop
data16
sar
sub
add
aam
inc
cli
clc
icebp
cmp
mov
jbe
scas
push
imul
xchg
lret
add
int
dec
lods
dec
mov
dec
lret
insl
jns
jge
ret
sahf
add
scas
insb
idiv
mov
pop
lret
rorl
fmull
repnz
push
inc
shrl
mov
in
enter
adc
mov
scas
lds
xchg
aad
insb
and
xlat
and
stos
imul
movsl
popf
sti
mov
shrb
push
nop
pop
dec
jo
pop
insb
push
addr16
out
sbb
cmc
repz
xchg
sbb
ss
leave
push
cli
xchg
xlat
and
in
add
dec
add
add
bound
into
jmp
push
fwait
jns
mov
mov
insb
loop
sbb
cmpsb
sahf
adc
pushf
shll
mov
add
fdivs
aad
jge
and
enter
pusha
xchg
lcall
xor
or
in
icebp
xchg
or
xchg
push
adc
ljmp
inc
cmpsb
prefetch
or
lahf
outsb
or
xchg
or
cmpsb
push
add
adc
lahf
add
fisttpll
push
mov
push
shll
icebp
push
xchg
xor
repz
xchg
push
idivl
xor
xchg
sub
stos
lahf
adc
adc
sbbl
mov
mov
inc
adc
mov
adc
and
shr
push
arpl
pusha
xchg
jb
fdiv
test
out
mov
dec
pop
adcl
sub
int3
ljmp
sbbb
push
or
nop
cmp
xor
push
push
fcmovu
loope
mov
mov
jne
sub
push
pop
xchg
adc
nop
inc
sub
xor
ret
sbb
and
adc
rcrl
arpl
ds
fimull
jno
adc
cmp
cmp
int3
mov
or
mov
loope
lcall
push
dec
mov
into
jle
cld
pop
or
or
dec
mov
test
stos
jbe
rorb
hlt
movl
outsb
xor
jbe
xorl
loopne
fwait
call
push
in
jne
push
ss
out
cmp
rcrl
aas
sbb
xor
loope
into
data16
sbb
mov
ljmp
insl
popl
test
loope
add
pop
pop
popf
test
decl
outsl
inc
push
mov
mov
in
jns
imul
imul
dec
cmpsl
adc
jecxz
mov
xchg
pop
js
dec
cmc
mov
repz
lods
movsbl
mov
or
or
clc
scas
jno
sarl
adc
in
popa
or
mov
mov
xchg
jbe
pop
cltd
add
xchg
neg
inc
jp
popa
into
xchg
int3
or
pop
pop
aaa
js
inc
adcl
xchg
add
pushf
fcmovnu
pop
aam
jo
inc
bound
sub
add
mov
add
xchg
subb
rorb
inc
lods
sub
subb
fcomp
cmpl
inc
xor
mov
mov
or
sub
gs
cli
pop
dec
adc
lods
sub
push
cwtl
or
jp
js
sbb
aas
sti
dec
cld
xchg
imul
push
cmpl
adc
sbb
and
es
test
fbld
push
inc
add
outsl
add
in
xchg
je
sub
add
iret
pop
insb
inc
lds
xor
lcall
push
mov
mov
jne
int3
shlb
and
mov
push
or
subb
mov
push
mov
imul
push
fstpl
push
xor
and
fildll
stos
stos
cmp
cmp
cmp
jo
addr16
pop
in
mov
add
sbb
push
and
lds
inc
mov
mov
sub
jle
xor
adc
je
icebp
aas
sub
sbbb
sub
out
xchg
mov
fdiv
scas
out
jle
pop
jle
fldenv
bound
mov
ja
push
mov
xor
add
ss
hlt
sti
add
push
xor
cli
cmp
cmp
ss
add
cmp
std
mov
push
xchg
mov
inc
lock
mov
mov
mov
mov
mov
negl
dec
cmp
inc
xchg
scas
push
or
mov
sub
ja
inc
int3
lock
icebp
inc
ret
aad
addr16
in
add
cs
pop
je
or
cli
mov
dec
push
out
imul
call
sbb
gs
push
shr
in
mov
pushf
arpl
jne
mov
mov
sub
cwtl
ja
push
je
xor
in
imul
jae
int3
popf
xor
or
jp
es
sbb
pmullw
mov
and
loop
dec
lret
or
sbb
jae
sarb
dec
shrb
dec
in
sbb
mov
fidivrs
or
sahf
xor
addl
add
insl
jg
mov
dec
adc
lods
arpl
dec
ja
call
push
sbb
inc
cmpb
and
pop
mov
lock
adc
out
dec
pop
inc
shlb
push
sbb
xchg
lds
cld
pop
mov
aas
out
popa
inc
cmpsl
sbbl
xlat
aaa
mov
jge
jl
mov
cmpsl
movsl
lods
mov
repz
pop
sbb
or
and
insb
cs
fisubl
pop
mov
lock
call
test
sarl
outsb
and
es
ficompl
mov
hlt
or
push
pop
mov
fistl
push
mov
and
shrb
mov
inc
dec
inc
enter
fucomi
mov
xor
pop
inc
mov
jmp
jl
or
xchg
lods
lock
fisubl
rcrl
stos
icebp
mov
fistl
fists
movsl
xor
aas
int3
arpl
fldt
imul
mov
in
cmp
mov
enter
sub
add
push
add
cwtl
jl
ds
mov
icebp
jle
jmp
shl
call
loopne
or
and
imul
call
xor
lock
and
mov
fdivrs
xchg
clc
push
data16
bound
aaa
cmp
out
call
or
pop
inc
inc
bound
jno
stos
pop
adc
xlat
push
sbb
or
out
pop
mov
outsl
test
int3
mov
bound
sub
shrb
sub
jmp
fstps
imul
daa
addr16
andl
pop
push
mov
or
mov
scas
int
aaa
jno
fnstsw
dec
lret
xor
jo
adc
data16
dec
popl
sub
xor
lods
loop
jnp
or
shl
xchg
arpl
xchg
stos
mov
lods
call
stos
gs
xor
mov
mov
cmp
adc
sub
aad
lret
add
mov
lret
insl
es
aaa
leave
adc
lea
pusha
test
ljmp
xor
iret
mov
and
lock
mov
sbbb
fisubrl
xlat
loop
mov
mov
lds
jne
cmp
xchg
pop
popa
loopne
sub
sub
add
outsb
imul
mov
and
cmp
mov
push
adc
ss
mov
dec
fbstp
add
cwtl
aam
dec
gs
lods
je
pop
mov
jecxz
dec
repz
mov
and
mov
es
insl
push
iret
mov
xlat
ss
push
and
fcmovnb
cmp
push
ds
xchg
out
sub
decl
enter
jecxz
push
xor
inc
scas
jb
in
cld
and
jge
out
inc
stos
sarb
mov
xor
xchg
mov
dec
xchg
pop
cmp
mov
test
and
pop
sbb
clc
xor
mov
mov
and
mov
mov
pop
aas
stc
test
dec
inc
add
insl
insb
int3
test
push
xorl
and
jp
rorl
xlat
and
lea
shlb
jmp
pop
cwtl
inc
lcall
mov
nop
and
pop
test
push
cltd
mov
pop
push
aad
shrb
hlt
pop
idivb
jbe
xchg
jmp
sti
cmpsb
xchg
push
mov
sar
adc
sbb
leave
pusha
pop
add
les
icebp
gs
orb
lahf
data16
arpl
pop
subb
mov
pop
stos
push
mov
addr16
lret
sbb
fdivp
inc
jecxz
push
push
fwait
ret
mov
scas
test
jnp
mov
add
imul
shrl
out
shlb
sub
outsb
pop
iret
gs
push
or
dec
adc
mov
stos
imul
push
mov
loop
xor
lret
pop
and
mov
cli
mov
or
repnz
jg
jp
mul
rolb
xor
aaa
xlat
in
out
movsl
out
lds
adc
sbb
ds
test
pusha
flds
ret
fdivrl
mov
or
mov
pop
insb
shrb
test
mov
popf
mov
mov
sub
pushf
pusha
sahf
cmp
decl
xchg
stos
insl
shll
sub
imull
and
call
filds
ficompl
test
vscalefpd
cmp
and
inc
adc
and
aaa
xor
sub
pusha
push
in
dec
aad
leave
out
ds
mov
ljmp
rcrb
inc
push
and
and
adc
xchg
iret
adc
sbb
pop
or
mov
push
lret
int
dec
fs
pop
mov
mov
das
or
push
mov
movsl
mov
dec
sbb
fnstcw
test
cmpsl
icebp
fistpll
pop
pop
outsb
daa
scas
mov
test
call
imul
or
push
inc
addb
xchg
sub
je
adc
outsl
inc
aaa
out
push
daa
sbbb
nop
mov
dec
xchg
cmp
adc
pop
inc
imul
mov
pop
lds
cmpb
pushf
rcrb
adc
bnd
scas
xchg
adcl
jno
loop
mov
or
cld
sub
leave
es
mov
mov
cltd
xchg
outsb
mov
outsb
or
push
jae
mov
out
inc
lds
sbb
mov
xchg
jg
sbb
clc
std
push
bound
push
sub
mov
pop
out
mov
dec
imul
cltd
push
imul
in
pop
test
pop
lret
subl
mov
cmp
mov
cmp
xor
popa
sahf
jb
addb
sub
rolb
sahf
or
and
cmp
or
sub
mov
les
out
dec
or
lods
cwtl
shll
pop
jl
mov
dec
call
pop
inc
repz
div
mov
push
out
push
adcl
loopne
shl
xor
clc
xchg
xchg
fwait
loope
push
in
jbe
pop
mov
fiadds
mov
repnz
or
inc
fistps
out
xchg
shlb
pop
xchg
xchg
loope
jp
shlb
add
pop
jecxz
inc
pop
call
lds
das
lds
cltd
dec
pop
add
mov
rcll
je
or
in
jmp
movb
sbb
fistps
out
jecxz
inc
mov
pop
jmp
inc
push
push
jnp
push
cmpsb
lds
sub
ret
inc
in
cmc
mov
dec
add
loope
xchg
lock
test
pop
mov
push
xor
scas
inc
sub
add
neg
stos
cwtl
pushf
adc
adc
mov
ss
jmp
inc
xor
xchg
mov
ss
divl
xchg
xchg
push
das
icebp
adc
in
insl
jmp
test
gs
or
insl
in
adc
pop
mov
in
mov
cmp
push
sbb
rorb
adc
outsl
sbb
lods
and
add
subb
or
and
mov
pop
jmp
pusha
fistpl
push
lods
aam
mov
mov
xor
jno
scas
bswap
jecxz,pt
outsl
cmc
dec
incl
orl
clc
xor
iret
jge
pop
cs
cmc
stos
arpl
mov
out
and
fcmovu
into
mov
sti
loope
xor
xchg
dec
pop
add
into
inc
rorb
ret
inc
inc
add
push
je
pop
insl
mov
pop
mov
mov
inc
shll
mov
xchg
lea
pusha
mov
xchg
push
sti
hlt
mov
loop
pop
mov
push
mov
xchg
mov
add
jge
dec
jmp
fwait
cmp
jmp
mov
js
mull
pop
popa
pop
lret
xor
jb
cmp
mov
dec
in
loop
call
movsl
mov
jno
flds
cwtl
cld
cmp
sbb
repz
inc
cmp
out
sbb
push
fs
lea
add
jb
arpl
aam
adcl
shrl
pop
sub
jns
cltd
or
jecxz
jae
cwtl
js
cwtl
stos
inc
stc
cmp
jo
sbb
dec
icebp
cwtl
das
adc
cmp
xor
pop
jmp
cmp
xchg
and
xor
xchg
jmp
aam
notb
add
dec
pusha
inc
cld
call
in
xchg
adc
stos
inc
pop
clc
movsb
mov
repnz
out
push
cld
mov
mov
stos
adc
out
out
mov
dec
pushf
cmp
mov
loope
pusha
loope
cld
adc
add
jo
sbb
cmpsb
gs
sub
scas
sub
insl
pop
dec
sarl
les
repz
rcr
mov
adc
mov
add
insl
xchg
outsl
xchg
loope
imul
push
push
cmp
xor
and
arpl
jmp
sub
xchg
sbb
inc
inc
scas
int
dec
sub
testb
pop
adc
xchg
cld
sti
ljmp
shl
sbb
aad
or
cmp
sbb
xor
lods
xchg
sbb
push
stos
fmul
and
add
add
ds
test
add
jno
jmp
adcl
cmp
clc
out
out
push
lods
leave
cmp
ficoms
loop
leave
mov
inc
cmp
out
insb
addr16
repz
lcall
fidivs
js
jl
test
mov
xchg
cmp
dec
fldl
and
mov
mov
jl
mov
jb
test
xchg
xchg
lods
jae
js
data16
in
fdivrs
and
mov
jp
daa
push
or
popf
nop
in
jecxz
imulb
and
shrb
and
jg
loopne
xor
xchg
xchg
jl
cmp
lcall
or
adc
lcall
rorl
lret
jmp
jle
ja
stos
sbb
je
loope
mov
fsubl
sbb
mov
and
dec
out
jg
mov
add
mov
and
mov
mov
test
movsb
sbb
idiv
mov
int3
sub
mov
xor
sub
sub
mov
ds
out
sbb
mov
lock
mov
inc
imul
rcll
xchg
xlat
push
jge
sbb
xchg
fptan
or
aam
ret
fmul
push
jle
out
out
in
clc
xchg
xchg
xor
data16
mov
sbb
mov
jecxz
adcl
jae
adc
movsb
mov
lret
fldenv
in
ret
xchg
jns
jne
cld
loope
xor
insl
dec
cmp
lahf
jecxz
mov
mov
ds
mov
mov
sub
fnstcw
pop
sub
icebp
push
cmp
cmc
push
ljmp
cli
cmc
arpl
pop
xor
gs
movsl
iret
dec
mov
add
cmp
fstpl
sbb
stos
icebp
int
inc
mov
pop
add
sarl
ret
out
jecxz
rolb
cmp
mov
out
sbb
lods
mov
xchg
sarb
fistps
add
repz
out
movsl
cmc
ds
cmp
andb
adc
inc
mov
lahf
idivl
rol
rclb
add
sarl
pop
and
push
iret
popa
mov
adc
dec
sbb
mov
and
dec
sar
push
scas
daa
push
iret
push
sti
cmp
es
jmp
cmpsb
stos
clc
addb
lods
addb
pop
adc
out
out
sbb
push
sbb
inc
scas
push
pushf
mov
pushf
leave
cltd
sub
sbb
or
lea
mov
xor
jnp
inc
test
stc
push
mov
sub
dec
mov
mov
xlat
loop
push
mov
adc
sub
idivb
dec
sbb
inc
int
sbb
cmpl
loopne
in
in
adc
out
pop
test
shl
cli
sub
pop
cmpsb
lcall
xchg
ret
xor
inc
pop
dec
bound
and
mov
mov
loope
cmp
dec
out
adc
stc
inc
cmp
cmpsb
test
sti
xchg
sub
sub
adc
cmc
stos
mov
cmpsl
rolb
push
daa
lods
popl
jb
jbe
fisubrl
jmp
jnp
inc
fcmovnb
mov
sub
jle
pop
mov
filds
fldl
mov
xchg
inc
test
push
call
out
push
cmpl
mov
mov
lds
addr16
and
or
scas
pop
mov
jmp
cmp
pop
pop
js
push
push
leave
mov
outsb
sahf
mov
ja
add
push
dec
int
dec
fdivl
jl
movsl
pop
jl
arpl
jns
das
adc
sbb
call
je
xlat
fwait
jmp
fwait
out
je
inc
aad
mov
jecxz
xor
push
sub
outsb
repz
push
stos
std
fs
xchg
and
cltd
xchg
les
movl
decb
lret
dec
or
cmc
stc
pop
mov
sbb
add
popf
mov
jg
and
push
xchg
fwait
add
jmp
cwtl
imul
add
xor
sbb
jl
jecxz
mov
cmp
mov
mov
pop
jne
ret
adc
jno
fwait
stos
popa
in
pop
pop
ljmp
pop
push
and
sub
mov
call
call
cmpsl
loop
cs
in
xor
icebp
jo
ja
mov
loopne
xor
or
and
imul
fstl
test
aam
add
mov
cmpsb
add
push
loopne
das
sub
push
sbb
and
jmp
add
mov
out
dec
add
or
xchg
jg
jo
test
dec
xor
int
dec
mov
arpl
cli
xchg
aaa
mov
push
jae
lea
add
pop
xor
mov
lahf
aas
push
insl
and
xor
fiaddl
mov
nop
lcall
sub
decb
xor
test
dec
jne
mov
rol
mov
push
repnz
adc
sti
jnp
push
mov
call
jnp
and
test
inc
jo
sbb
xchg
xor
ret
jno
jg
jb
push
pushf
jp
cmp
and
fcomi
ds
cmp
jns
mov
pxor
jbe
addr16
push
mov
cmp
push
loop
out
dec
div
mov
jb
sub
inc
sarb
and
xchg
mov
dec
clc
cmp
xchg
ret
sub
cmp
insl
or
repz
lock
rcl
push
sub
lahf
push
cmpsb
outsb
lods
mov
xchg
movsl
add
cltd
test
mov
sub
fsubl
push
out
cwtl
hlt
adc
mov
jmp
stc
push
enter
push
hlt
daa
fldt
lods
dec
or
sbb
push
pop
mov
pop
xchg
push
imul
pop
data16
add
adc
jp
out
imul
xorl
push
sbb
xchg
outsb
push
push
sub
div
in
stos
add
jbe
fnstenv
cmp
lea
insb
or
dec
scas
xchg
frstor
mov
inc
inc
xor
xchg
xor
daa
ss
inc
xchg
mov
push
dec
test
add
push
pusha
hlt
mov
je
or
in
pop
loope
xchg
jecxz
ljmp
xchg
leave
fsubrs
jmp
dec
outsl
push
mov
and
insb
pop
test
cmpb
ss
mov
shlb
aad
push
xchg
inc
pop
xchg
or
test
mov
push
adc
lds
jno
negl
inc
lret
jne
into
psrlq
fldl
lods
aaa
add
insb
icebp
jns
pop
dec
out
jmp
sbb
xchg
adc
lcall
inc
dec
and
das
les
fldenv
xor
mov
xor
scas
enter
jae
je
in
scas
pop
dec
and
pushw
dec
jmp
lahf
mov
dec
call
dec
cwtl
cwtl
cmpsb
lret
mov
mov
cwtl
fdivs
js
xchg
mov
cmpsb
in
jo
ss
test
jmp
in
rcll
xchg
insl
ds
sub
hlt
inc
mov
or
xchg
add
pop
xchg
dec
ljmp
mov
std
ljmp
dec
mov
pop
mov
xchg
cltd
mov
mov
add
jo
pop
cmp
aas
pop
jno
out
sub
cmp
cmpb
dec
cmc
inc
es
cltd
inc
dec
in
pop
mov
popf
popf
or
push
and
inc
call
lret
mov
fisttpl
and
sbb
mov
dec
mov
in
pop
out
mov
or
rclb
lea
xchg
lods
loop
inc
sbb
or
lcall
mov
stc
mov
out
mov
fdivs
outsb
cmp
das
loopne
icebp
xorl
xlat
add
or
aas
dec
xchg
std
out
push
lahf
push
ret
jg
icebp
push
popf
jg
jb
rcrl
cmp
sub
sbb
call
or
fldt
je
repz
jge
push
mov
and
int
adc
xorb
outsl
inc
sbb
lahf
repz
into
jl
test
cmpsl
push
adc
orb
adc
adc
xchg
loope
jmp
loope
dec
dec
and
add
stos
cli
ret
jge
add
enter
mov
pop
add
add
stos
sbb
or
xlat
cwtl
jae
imul
dec
mov
lret
lea
dec
xchg
cmpsb
repz
pop
lods
dec
mov
ja
pop
out
test
push
jmp
dec
repnz
gs
dec
gs
and
add
push
add
ret
aam
pop
mov
add
ror
jmp
int
add
daa
test
add
mov
ja
pop
jecxz
cs
repz
mov
mulb
jl
dec
test
sbb
popa
rcrl
test
adc
in
shl
xchg
xchg
add
inc
push
into
scas
sarb
imulb
fwait
xchg
stc
or
aas
mov
cmp
ljmp
pop
insl
imul
xrelease
shrb
shll
mov
std
div
aad
inc
mov
and
iret
mov
std
lea
and
mov
fwait
js
fistpll
mov
mov
mov
lret
popa
add
xchg
test
cltd
add
ss
xchg
push
test
nop
pop
mov
sub
stc
imul
inc
popf
pop
adc
sbb
push
jp
scas
into
xor
pop
xor
mov
xchg
mov
stos
jp
mov
mov
dec
mov
in
sub
rorl
fildll
clc
loopne
ret
testl
inc
and
push
or
jg
add
sbb
insb
mov
adc
mov
mov
lock
xchg
mov
sub
sub
shl
in
and
sub
mov
lods
std
je
fldl
hlt
sub
les
inc
push
arpl
mov
push
cld
lret
pop
gs
je
push
fldt
dec
jmp
cmp
icebp
mov
lds
orl
dec
out
push
nop
cmpl
or
mov
push
push
pop
out
ljmp
out
incb
shlb
push
dec
xor
inc
jge
push
mov
frstor
bound
je
mov
sbb
add
cmp
scas
fnstsw
or
sub
or
pusha
ljmp
fwait
insl
cld
jecxz
lock
popa
rorb
mov
inc
mov
lock
xchg
add
jecxz
push
mov
ja
mov
clc
ss
test
lds
push
movd
aaa
push
cld
pop
and
fs
testl
fwait
inc
lock
push
mov
lds
inc
fstpt
add
js
push
inc
aam
out
in
bound
jl
and
cmp
add
mov
pop
mov
aas
push
push
ficompl
in
mov
loopne
inc
iret
inc
leave
mov
push
push
ror
bound
mov
int
push
xchg
and
xor
xchg
push
popa
sub
adc
push
push
lahf
rcrb
data16
mov
cwtl
scas
mov
test
gs
add
jg
inc
xor
add
test
mov
or
xor
das
clc
pop
sarl
jbe
sub
sbbb
mov
repnz
andb
daa
push
xchg
or
ret
jl
in
mov
imul
pop
adc
dec
sbb
inc
push
sub
dec
adc
cmpsl
ss
dec
data16
or
or
mov
mov
aad
movsb
out
and
test
inc
test
mov
in
adc
push
or
jl,pn
in
pop
stos
out
add
js
lcall
fcoml
inc
jg
push
insb
outsb
shll
mov
iret
mov
push
pusha
fldl
aaa
insb
mov
sti
ja
mov
xchg
pop
cmp
mov
andnps
xlat
xchg
jp
out
imul
sub
sub
pusha
mov
sub
sub
std
aaa
into
pop
inc
jno
and
mov
sbb
test
sub
rcrb
mov
jnp
fisttps
sbb
inc
sbb
sbb
xor
addr16
in
sbbb
jg
mov
adc
xchg
mov
sbb
out
dec
jmp
aas
mov
add
insl
lods
clc
int3
rcrb
into
jbe
mov
ret
loopne
leave
cmp
xlat
mov
xor
and
push
cmpsl
jo
lahf
loopne
sbbl
mov
clc
rcrl
lods
es
out
mov
mov
mov
jnp
in
shl
imul
add
mov
mov
out
clc
movsl
lahf
inc
push
subb
or
lea
inc
cmc
push
es
sub
dec
and
xchg
cmpsl
insl
inc
mov
jg
xchg
mov
pop
or
mov
mov
xor
data16
imul
sbb
sub
outsl
pop
mov
cwtl
sahf
pop
sub
cmpsb
mov
xchg
sti
sbbl
jb
mov
lea
lcall
dec
stos
cmp
cmp
inc
lcall
nop
aam
adc
inc
dec
lock
stos
cmpb
xchg
pop
in
dec
test
pop
out
mov
lea
fistpl
mov
mov
pusha
push
or
adc
sti
dec
mov
cmpsl
dec
push
and
imul
or
out
loop
jbe
sbb
leave
push
add
fildl
movsb
cmpsl
adcl
xchg
test
inc
subl
jb
fisubrs
jg
imul
jg
mov
hlt
push
lods
cmc
xlat
mov
jbe
fisubs
in
jno
cmp
mov
cli
jb
mov
mov
jnp
bound
mov
fstl
mov
sbb
ss
fildl
out
fimuls
or
and
dec
cmc
rolb
xor
xor
imul
xor
mov
lahf
pop
pop
xchg
loopne
mov
add
mov
dec
mov
pop
adc
in
mov
adcb
cmp
leave
or
lret
dec
pushf
decb
xchg
jecxz
stos
sub
test
and
cs
sub
fs
aas
out
mov
inc
push
cs
sub
push
data16
lods
jmp
xchg
in
popa
sahf
or
dec
pop
pop
out
and
loopne
mov
dec
add
jle
sti
jp
inc
hlt
jno
out
lock
pushf
mov
xor
sbb
movsb
and
mul
mov
arpl
lds
xor
inc
les
xchg
dec
out
pop
stos
insl
rcrb
add
sub
cld
sbb
popf
xchg
sub
adc
aad
scas
jp
pop
mov
orl
jmp
loop
lcall
inc
mov
outsb
jo
mov
sbbl
mov
cmp
push
sbb
xchg
lea
inc
jecxz
out
test
stos
lods
out
mov
negb
dec
add
ljmp
rcl
hlt
shlb
and
and
inc
popa
adc
lret
inc
ret
jmp
inc
insb
mov
xor
in
cli
mov
les
mov
cmpsl
inc
pop
add
pop
scas
mov
or
pop
sub
push
inc
pop
mov
icebp
sub
movsl
xchg
ret
cli
xchg
inc
sti
sub
pop
cmp
add
roll
jmp
mov
pop
mov
xchg
and
dec
adc
mov
scas
sbb
dec
cmpsb
xor
out
cmc
je
adcb
in
mov
out
adc
out
adc
insl
dec
aaa
pop
or
mov
iret
dec
ljmp
lds
mov
mov
mov
fwait
sub
xor
xchg
std
or
pop
xlat
mov
out
call
stos
popa
bnd
cmp
test
in
dec
xchg
stos
sbb
iret
hlt
add
loopne
mov
mov
adc
lret
test
push
ljmp
mov
mov
mov
fisubs
inc
inc
xchg
mov
fimull
dec
push
int
aas
test
les
sbb
lahf
xchg
sti
xor
imul
ds
sub
into
xchg
xor
lods
shrb
outsb
fmul
lcall
sahf
jb
inc
dec
sbb
ret
leave
dec
mov
dec
and
shlb
int
sbb
add
xor
ret
loop
sahf
inc
pop
gs
pop
mov
stos
jp
sub
dec
jno
enter
inc
inc
push
xchg
or
insl
iret
mov
bound
fsubs
aas
lods
jnp
jle
mov
sbb
in
pop
adc
cmp
pushf
ja
pop
adc
pop
sub
int3
cmpsb
cmc
insb
cmp
cmc
aam
negb
mov
out
ja
sbbl
shl
lds
movsb
sub
fldl
pop
in
sbb
sbb
in
or
mov
xchg
movsl
das
cltd
lret
cmp
aaa
shl
movsb
pop
loope
push
out
fs
rep
push
sub
sub
stos
sbb
scas
aaa
dec
mov
cmp
sbb
mov
sbb
cli
mov
in
jae
out
les
mov
mov
pop
push
cmp
pop
in
push
push
mov
push
adc
lods
in
cmp
mov
into
mov
ror
in
pop
pop
outsl
jmp
xchg
dec
cmp
push
xchg
xchg
movsb
scas
push
mov
cmpsl
ss
inc
cli
enter
addr16
jmp
lahf
sbb
adc
das
jae
jae
mov
mov
int
mov
jne
ret
movzwl
cmp
pop
rorl
jmp
or
push
xchg
pop
or
inc
fld
xchg
pop
lods
cs
scas
dec
pop
add
rcl
adc
iret
xchg
mov
mov
push
xorl
int3
dec
loop
dec
out
in
in
push
adc
mov
repnz
lcall
call
or
mov
jge
shl
sbb
iret
push
mov
jns
enter
pop
mov
aaa
insb
jmp
sbb
in
outsb
test
aam
mov
sub
mov
cld
mov
mov
lods
push
or
adc
testl
pop
and
adc
ret
xor
test
imul
sub
fsubrl
jo
movsb
mov
mov
cld
fstpl
stc
adc
subl
xor
stos
push
push
jae
cmpb
arpl
popf
push
outsl
ret
out
mov
or
pusha
mov
aas
mov
mov
testl
sahf
clc
adc
adc
out
add
imul
add
dec
lods
pop
arpl
mov
mov
mov
aas
pop
lret
ror
cmp
pushf
mov
enter
loop
xchg
adc
inc
loope
mov
pushf
jge
movsb
pop
mov
mov
repz
outsb
xor
push
inc
mov
mov
sbb
adc
sub
ds
out
mov
loopne
sub
xor
mov
dec
cs
repz
adc
push
mov
xchg
aas
push
jne
dec
mov
cmp
nop
mov
dec
or
adc
outsl
sub
xchg
cmp
dec
push
add
je
dec
jns
stos
jle
mov
inc
adc
sbb
jns
add
pushf
xchg
repnz
rorb
hlt
arpl
arpl
adc
loop
jmp
add
sbb
pop
cld
and
push
fwait
xchg
testl
adc
shlb
cmp
mov
aas
call
or
icebp
mov
aad
sub
int3
push
pop
inc
sbbb
mov
dec
cmp
mov
and
lcall
pop
out
addr16
fldl
dec
mov
test
dec
xchg
pop
jb
or
push
and
inc
xor
cmp
call
jae
lret
js
int
rorl
jne
out
imul
inc
test
jp
jp
mov
push
push
cmp
out
xchg
inc
decb
das
mov
mov
nop
ja
or
dec
adc
adc
or
repnz
and
xchg
icebp
xor
shrl
sbb
nop
leave
dec
nop
xor
and
in
push
int3
gs
aas
add
push
lock
add
es
xchg
cwtl
jae
adc
repnz
mov
out
jb
jns
loope
call
into
push
sbb
and
orb
lret
fisubl
dec
das
nop
scas
cmp
ss
stc
scas
je
dec
dec
jle
popa
xchg
and
mov
pushf
dec
mov
bound
insl
mov
outsb
sub
jno
rcl
stc
in
pop
nop
cltd
clc
fdivs
repz
test
es
ljmp
lods
mov
sub
inc
inc
mov
sub
adc
sar
pop
sahf
jmp
je
sti
std
push
ljmp
repnz
push
das
mov
pop
cmp
lret
fcmovb
xor
int
dec
push
xchg
dec
sbb
pop
xchg
insb
inc
mov
test
orb
or
aas
xor
dec
std
and
sub
add
movsb
sub
stc
into
push
dec
mov
lods
mov
nop
xor
or
pop
xchg
les
jnp
and
and
mov
jno
push
outsl
mov
cmp
fucomp
add
pop
xor
int
lock
out
lea
hlt
adc
sbb
xchg
int
stc
sub
addb
jb
jno
arpl
dec
enter
js
divl
daa
cli
dec
arpl
fdiv
and
and
sbb
xchg
mov
push
cmp
dec
and
sahf
mov
test
lret
mov
enter
mov
addb
aad
sbb
aam
or
inc
cmp
and
xchg
aaa
sub
test
mov
bound
loop
add
or
push
fmull
adc
cmpsl
cli
popa
dec
lods
sbb
ja
cmp
andl
inc
iret
dec
adc
push
popf
pop
add
adc
inc
sub
nop
sbb
inc
ja
cmp
rcll
add
movsl
push
jge
rclb
push
call
test
push
int
mov
push
dec
iret
cmp
fwait
pop
test
sbb
out
xor
das
lea
mov
sub
popa
inc
add
aas
cs
and
mov
push
jmp
pop
scas
jo
and
xchg
jl
xor
xlat
clc
cmp
leave
pop
dec
mov
pop
mov
adc
xor
jnp
in
pop
cli
mov
out
or
xor
fidivrs
sub
cmpsb
rolb
imul
push
sub
fcoml
andb
fsubl
mov
test
lods
or
xor
mov
cltd
and
loope
cmpl
mov
dec
xchg
jle
enter
xchg
inc
jbe
das
in
ja
pop
loop
pusha
into
arpl
mov
js
ret
sti
cmp
fadd
lods
or
push
push
mov
cmp
xorb
mov
sbb
outsl
and
cwtl
ficomps
jbe
jns
gs
clc
out
enter
gs
loop
add
sbb
cmpb
pop
pushw
mov
fs
jae
xor
sub
js
cld
inc
mov
jmp
lds
xor
stc
push
sbb
jns
mov
xor
mov
cmpsl
fstps
scas
push
fnstcw
into
mov
outsl
inc
fs
xchg
gs
imul
push
cld
xchg
imul
mov
scas
addl
pusha
xchg
xchg
mov
inc
ljmp
pop
shl
nop
mov
inc
xor
or
popf
cmp
xchg
movsb
lret
popa
sbbl
inc
lock
sub
imul
mov
icebp
aaa
enter
loop
repnz
cmc
data16
sub
sbb
inc
dec
je
adc
mov
adc
or
xlat
aas
push
dec
test
sub
or
dec
jmp
pop
xlat
inc
ja
enter
lock
clc
pop
mov
loopne
lret
movl
lock
pushf
xchg
bound
das
test
jne
stc
mov
mov
shlb
jne
xchg
xchg
lcall
mov
std
js
lock
inc
dec
enter
cmp
lods
mov
push
push
pop
or
adc
lret
dec
ficompl
stos
mov
ss
in
rep
xchg
lods
subl
add
xchg
lock
sub
cmpsb
mov
ja
push
cmp
scas
jnp
xor
fildll
insl
faddl
outsb
xor
and
jnp
stos
sub
aas
mov
cmp
pop
sub
test
cmp
icebp
xchg
mov
sub
ret
mov
adc
loope
jb
jecxz
cmp
rcr
sub
pop
pusha
xchg
xor
testl
push
stc
lock
add
lds
mov
add
arpl
jne
xchg
jne
mov
fists
in
cwtl
mov
arpl
jno
ljmp
jmp
jne
fmuls
push
leave
int
addr16
mov
popf
arpl
jo
aam
xorb
cli
adc
adc
jle
pushf
mov
out
jns
test
mov
notb
aaa
lock
cmp
push
mov
test
lea
pop
jecxz
cwtl
jbe
or
and
push
inc
push
shlb
push
sub
fadds
fstpl
and
mov
addr16
int
repz
lret
add
jl
inc
movsl
jge
arpl
hlt
mov
daa
or
fildll
xor
pop
jecxz
cmpsl
hlt
fwait
dec
mov
je
jae
outsb
jg
cli
rolb
test
sbb
push
mov
add
inc
std
dec
mov
and
push
cmp
pop
sbb
dec
movsl
shl
es
cmpsl
popf
cs
jg
aas
fcompl
jne
mov
cli
fsubl
mov
adc
fs
in
xor
aaa
xchg
push
pop
lret
inc
dec
push
fsubp
sar
dec
je
pop
jnp
aaa
push
sbb
scas
lea
mov
dec
dec
sbb
nop
pop
sbb
gs
mov
cld
test
lds
imul
pop
scas
push
lret
loope
push
std
dec
lea
int3
mov
sbb
xchg
or
into
ds
cli
pop
mov
notl
mov
and
stos
test
jmp
fmuls
cmp
dec
or
cltd
jmp
repnz
and
fcomip
sub
repz
mov
sbb
mov
clc
dec
test
ret
cld
sti
aas
add
mov
dec
cmpsb
mov
pusha
scas
popa
mov
addr16
jns
and
add
or
inc
sbb
sbb
and
in
mov
lret
sub
cmp
and
test
jecxz
sub
xor
addr16
or
add
sbb
add
pop
cmp
test
out
lock
or
mov
push
mov
lds
fnstcw
lods
sbb
xchg
xor
dec
es
jo
arpl
or
and
pop
mov
popa
outsb
fsubrl
and
jge
and
adc
pop
mov
aam
adc
and
cmp
lods
mov
pusha
clc
push
test
jns
enter
xor
test
cmpb
loope
and
ffree
xor
adc
xorl
adc
sub
mul
divb
push
fwait
jg
bnd
cmc
mov
push
out
inc
pop
xor
and
and
cmp
push
sub
pop
sbb
or
push
in
lods
stos
xor
sbb
mov
je
mov
std
scas
nop
fdivl
test
repz
pop
push
shl
xor
sub
jle
add
adc
mov
scas
ds
fcmovnbe
fidivrs
cmpsb
call
push
icebp
dec
dec
dec
sub
fs
inc
test
rclb
xchg
jnp
pop
addr16
test
jne
shll
call
pop
jg
xor
loopne
stos
cwtl
cld
or
ljmp
je
mov
test
xchg
out
sub
mov
xchg
jl
sub
dec
lds
mov
aad
cmp
shlb
lods
and
pop
orl
dec
jle
jge
mov
mov
fwait
inc
data16
jne
je
jbe
sti
mov
mov
adc
cli
adc
push
fndisi(8087
rcll
insb
ficoms
pop
mov
sub
jae
push
hlt
sarb
mov
repz
call
add
lock
inc
mov
pmaxsw
add
js
outsb
cmp
sub
popa
cld
inc
int
in
sbb
sbb
test
dec
add
or
mov
xchg
cmpsl
dec
fwait
mov
cmp
xlat
and
cmp
testb
pushf
pop
imul
adcl
gs
aam
xor
fwait
cmp
xchg
movsb
and
in
mov
pushf
ss
jb
test
mov
fiadds
or
clc
jge
sbb
les
movsl
xchg
fisttpll
push
xchg
outsl
mov
mov
sbb
jns
dec
jnp,pn
jbe
out
adc
jb
ret
mov
fldcw
lea
cld
pop
les
sub
sub
xchg
cmc
shlb
insl
add
xchg
lods
inc
mov
ficoms
mov
lea
fisubl
and
dec
mov
sbb
add
daa
mov
dec
mov
add
dec
mov
rorl
into
xor
loop
test
shlb
inc
xchg
in
cmc
addb
idivl
loopne
and
faddl
mov
and
cmp
out
pusha
mov
dec
lods
outsb
dec
test
mov
xacquire
and
rolb
mov
and
loope
sub
adc
xor
rorl
xor
roll
int3
or
pushf
fxrstor
fs
in
lret
in
sub
outsl
call
adc
pop
movsb
mov
sub
pop
xor
inc
outsl
loop
pusha
repz
jo
mov
adc
call
bound
fbstp
and
outsl
xchg
add
addr16
loope
xchg
lea
push
or
sbbl
in
xchg
out
mov
sbb
inc
outsl
jge
and
call
lret
xor
or
sub
and
addr16
dec
sub
sub
dec
inc
jge
rolb
mov
popa
mov
loop
inc
insl
jge
call
das
bound
loope
mov
xor
bswap
mov
sbb
cltd
lcall
fs
fs
or
in
push
ret
gs
jb
insb
sub
pushf
adc
jo
outsl
cld
scas
push
push
es
es
pop
pop
enter
je
mov
pop
mov
mov
cmp
xchg
add
test
sahf
xor
and
ljmp
mov
repz
icebp
mov
fdivrl
pop
es
mov
cld
rclb
sub
outsb
lods
or
push
pusha
idivl
cmp
divl
pop
movl
mov
or
dec
sub
add
into
mov
icebp
inc
stc
or
sbb
xlat
outsb
jmp
push
push
adc
mov
aas
adc
vmaxsd
jl
cmp
scas
sub
stos
lods
mov
or
fs
xchg
xor
enter
addr16
dec
fldl
push
fcoml
jge
cmp
xchg
cmpsb
mov
lods
imul
outsl
adc
add
sub
or
dec
aam
pop
push
ret
stc
push
xchg
mov
stc
or
and
xchg
sub
hlt
hlt
inc
iret
cwtl
jge
bound
lret
mov
mov
gs
shrl
push
mov
into
sti
sub
mov
cmp
lock
push
data16
and
xor
add
cmp
mov
mov
les
fcomps
scas
xchg
or
call
xchg
push
sub
dec
sarb
jge
sub
sub
cmp
add
push
sbb
mov
sarl
call
addr16
mov
out
mov
push
sbb
add
lea
test
or
popa
outsb
cli
das
add
fsubr
cld
dec
sub
cmp
fldcw
push
xchg
roll
jno
shr
pop
pop
cmpsl
pop
outsl
jge
cmp
ljmp
adc
mov
lds
adc
or
pop
lea
sahf
and
pop
and
cmc
push
test
pusha
hlt
jg
lods
inc
ss
fs
sbb
and
cmp
fcomps
fnstenv
icebp
jne
mov
cmpsb
hlt
test
xlat
inc
vcvtsd2ss
stc
and
adc
and
hlt
or
inc
pop
icebp
je
xor
mov
repz
fsubrs
push
lret
fistpl
mov
mov
fstl
jo
or
inc
pop
std
xor
mov
mov
in
ret
sbb
cmp
shrl
adc
mov
jp
xor
mov
jl
fwait
mov
mov
cmp
out
shrb
dec
pop
rol
add
xchg
addr16
jp
neg
loope
movsl
in
xchg
mov
mov
call
mov
mov
pop
mov
ret
xor
or
jmp
js
fldcw
jecxz
test
cli
sbbb
mov
sbb
jo
or
ret
int3
xchg
hlt
fimuls
pop
shl
movl
test
out
jmp
and
jno
mov
mov
sbb
xchg
lret
inc
mov
xlat
pop
pop
inc
leave
sub
add
cmp
push
and
scas
call
scas
xchg
mov
jnp
mov
std
test
js
scas
mov
add
mov
popa
cmp
dec
or
or
inc
sub
scas
dec
push
sti
je
push
incb
mov
and
mov
xchg
aaa
sbb
pop
test
out
in
outsb
cmc
das
xor
insl
loop
fbld
mov
aaa
loop
daa
push
and
pop
mov
lcall
jecxz
push
iret
push
sti
jle
mov
iret
iret
pushf
test
xor
gs
pop
sti
push
inc
xchg
pop
test
lret
das
std
pop
icebp
int
and
jns
pop
adc
loop
ljmp
sbb
pop
pop
bound
inc
cmp
mov
aad
inc
sub
and
jp
mov
mov
sbb
cmp
cmp
js
fldl
outsb
xchg
fdivs
pop
mov
xchg
adc
push
xchg
test
je
xor
sbb
add
movsl
jns
xchg
jo
jo
insb
pop
loopne
jns
and
test
jmp
test
out
push
jno
sub
iret
fs
push
daa
cwtl
dec
insb
or
int
mov
lahf
mov
rsqrtps
stos
dec
test
cld
mull
popa
sbb
pop
mov
gs
mov
xchg
inc
aad
dec
test
inc
rorb
ret
outsb
movsb
jbe
mov
mov
add
xlat
mov
and
test
mov
mov
mov
pushf
ret
xchg
mov
orl
pop
pop
inc
mov
pop
and
cwtl
lahf
clc
data16
push
shlb
mov
add
andb
dec
xchg
xor
orl
sub
mov
sti
sub
mov
shrl
pusha
lods
push
xchg
fwait
jp
cmp
xorl
fs
adc
and
dec
xchg
dec
loop
xor
mov
sub
stos
repz
sarl
dec
mov
out
jle
cs
mov
xchg
shll
sub
aaa
mov
mov
xchg
xor
arpl
adc
fistpl
mov
inc
mov
idivb
ret
mov
bound
add
and
jno
xor
loopne
push
in
scas
cmp
jl
mov
mov
cwtl
in
dec
cwtl
mov
call
dec
pop
lret
or
mov
cmp
jbe
popa
pusha
loopne
stos
rorl
sub
jne
xor
ret
aam
add
jmp
fdivl
idivl
fbld
cltd
sarl
dec
xchg
dec
arpl
and
and
fmuls
sarl
cmpsl
mov
push
insb
sub
jge
dec
dec
fsubl
aas
dec
xchg
je
add
sub
cs
movsl
ficoms
outsl
sar
sub
and
pop
js
or
sub
push
mov
dec
les
add
mov
getsec
aas
jno
inc
push
sbb
orl
sub
mov
shrb
mov
in
nop
daa
aaa
loop
pop
imul
aad
pop
lock
insb
loopne
xchg
mov
xor
out
arpl
aam
mov
mov
sarb
jbe
sbb
sub
ja
dec
out
js
and
push
cli
rorb
sti
sub
sbb
cmpsl
lret
loope
inc
push
test
push
cmpb
dec
data16
xchg
out
mov
test
dec
add
cmp
insb
sahf
add
int3
cmp
inc
lods
lods
inc
fistl
lcall
repnz
pusha
cmp
daa
pop
mov
inc
aas
ljmp
fcmovbe
jp
inc
push
or
es
sahf
inc
stos
lock
sbb
arpl
mov
jge
loop
inc
cwtl
jle
cmp
fisubl
mov
mov
cmp
in
inc
mov
or
dec
push
and
sahf
popa
jmp
int3
lret
push
and
fmull
lcall
inc
xchg
and
mov
and
add
arpl
or
int3
cmp
cmpsb
fstps
sub
pop
outsl
das
cli
adc
adc
push
arpl
add
xchg
adc
gs
mov
ljmp
push
lods
pop
push
repz
jnp
in
sbb
leave
adc
popf
mov
in
ret
das
cltd
fcmovb
cmp
icebp
aad
je
mov
fists
ret
fbstp
lahf
push
mov
cmp
push
cltd
mov
or
popa
jmp
inc
stos
les
cld
jg
bound
dec
mov
out
stc
and
jns
ficoml
addb
fadds
xor
stc
push
sub
lods
xchg
aam
jne
jecxz
bound
push
dec
sub
fisubrs
jge
sub
subl
add
movsl
daa
in
sbb
aam
jecxz
xchg
xchg
les
sub
je
movsb
or
jl
inc
insl
jecxz
xchg
and
mov
cmpsb
jp
jb
add
jge
fs
push
sbb
leave
adc
nop
in
loope
push
push
push
lahf
adc
or
fdivr
sbb
push
mov
iret
les
sub
popf
int3
repz
adc
scas
jbe
std
clc
or
add
dec
repz
js
outsb
lahf
and
or
mov
ljmp
hlt
sub
into
lods
push
sbb
inc
insb
adc
fstpt
dec
rorb
loopne
bound
orb
pop
xor
xchg
xor
jge
jmp
mulb
je
mov
jmp
test
iret
xor
lcall
ficompl
mov
mov
ds
cmpsl
in
inc
imul
mov
xor
outsb
loope
mov
mov
pop
mov
jl
push
jp
sub
adc
sbb
sbb
test
adc
out
mov
lahf
xchg
fdivrl
nopl
push
cmp
push
es
cmp
addl
or
adc
cmp
cmp
insl
fwait
push
dec
icebp
mov
into
inc
pop
mov
adc
icebp
decb
sub
pop
mov
es
jae
adc
ja
and
call
fcmovb
add
and
imul
jae
dec
cmp
adc
into
push
daa
add
add
scas
jmp
mov
or
movsb
popf
xchg
xchg
add
out
frstor
sub
loope
call
out
sbb
cwtl
es
dec
cmc
pop
and
test
mov
xorb
cld
xor
daa
lcall
jnp
nop
movsl
sbb
jle
push
idivb
xor
mov
jecxz
push
sub
loop
ds
inc
scas
aas
jle
stos
push
xchg
or
pop
imul
jb
sbb
push
mov
clc
in
add
jnp
jbe
movsl
std
xlat
xlat
sahf
cmpb
xor
sub
repnz
pushf
mov
out
xor
inc
xor
inc
imul
adc
cmp
mov
scas
lock
jecxz
dec
push
push
lea
cmpsl
in
inc
sub
jmp
cmp
repnz
inc
clc
aaa
add
mov
jge
push
pop
out
rcrl
mov
jp
popl
add
repnz
pop
xchg
sbbb
fnstenv
bound
mov
push
push
repnz
lds
pop
mov
push
sti
jno
mov
or
mov
ficomps
leave
xor
repz
dec
jmp
aaa
popa
aaa
test
data16
outsl
je
mov
cmpl
shl
mov
aad
mov
rcrl
jp
xor
repnz
fcoml
call
ret
dec
adc
jne
lods
push
lods
popa
pop
lock
xor
pop
push
scas
movsb
sti
push
out
enter
scas
lea
xor
and
push
and
scas
daa
popf
ss
pop
mov
les
push
adc
outsl
je
push
pop
call
mov
pop
or
stos
jne
addr16
inc
xor
cmp
sbb
je
dec
ljmp
in
lds
cmp
iret
pushf
daa
pop
test
lret
mov
push
cmp
aad
xorb
loop
lret
sub
aas
jns
scas
mov
xor
inc
jnp
mov
pop
push
sub
daa
fidivs
xor
dec
mov
in
dec
mov
add
inc
cmp
subw
imul
sbb
dec
cmp
lods
or
dec
pop
cmp
in
jle
push
mov
lods
shlb
movsb
out
sub
ret
pop
test
mov
jb
out
loopne
cmp
mov
fwait
push
mov
inc
insb
adc
fsubs
mov
or
mov
je
repnz
jns
sub
mov
pop
mov
sub
dec
nop
xor
and
and
std
inc
test
imul
scas
das
rolb
jl
mov
ds
cmpsb
mov
in
and
test
insb
add
gs
jbe
mov
sub
outsl
and
js
mov
leave
and
pushf
adc
cmc
daa
xor
sub
mov
and
mov
xchg
aaa
cmp
xchg
sub
push
mov
mov
or
push
in
xor
hlt
sti
jb
loop
test
and
mov
xor
in
xchg
in
shlb
lcall
xchg
inc
mov
pusha
push
inc
xor
jnp
pushf
insb
xchg
mov
arpl
inc
fcoml
and
push
aas
jge
ret
cmc
aaa
cltd
shrb
mov
xlat
test
aas
out
insl
mov
gs
scas
push
add
lock
scas
add
popa
or
movsl
jnp
add
jns
and
sbb
sbb
push
pusha
fistps
jb
sub
jge
test
add
cmp
jmp
daa
bound
aad
ret
xchg
gs
shll
xor
popa
xlat
dec
imul
imul
adc
pop
cmp
xor
ja
mov
in
push
xchg
fs
push
xor
xchg
jb
pop
ss
cmp
xchg
adc
cmp
lds
inc
add
sbb
mov
jecxz
cwtl
inc
ret
adc
mov
enter
lcall
gs
std
movsb
and
lcall
jne
adc
es
clc
mov
sub
and
jbe
scas
ljmp
mov
insb
jno
repnz
dec
pushf
push
mov
jp
pop
mov
aas
cmp
sub
push
loope
push
in
pusha
gs
movb
aas
int3
mov
outsb
faddl
push
pop
jo
stc
mov
xchg
ljmp
aad
xor
add
or
pop
out
adc
pop
mov
inc
xchg
rolb
and
ret
mov
ljmp
in
mov
add
xchg
pop
sub
std
sbbl
js
popf
dec
adc
rolb
or
lahf
stos
dec
add
cmp
push
fbld
jbe
mov
aaa
inc
dec
leave
clc
gs
add
add
xchg
fists
insb
mov
sbb
mov
add
pop
mov
in
pop
push
cmp
inc
scas
scas
cmpb
clc
cmp
cmp
xchg
mov
nop
xor
lcall
mov
scas
test
cmpsb
inc
cmp
out
cwtl
add
test
mov
arpl
or
pop
ret
clc
or
xor
sbb
inc
aad
add
adc
rorl
je
push
pushf
mov
popa
ret
gs
xchg
addb
xchg
mov
repz
imul
aas
push
imul
test
leave
jbe
adc
dec
stc
xchg
bound
cld
adc
mov
cwtl
xor
mov
jge
xor
inc
lcall
xor
jecxz
xor
sbb
int
movsl
cmpsl
sbb
imul
sbb
dec
fstps
jmp
dec
mov
call
xchg
popa
loope
fsubrl
or
mov
rcrb
jp
outsl
inc
xchg
jg
rcrl
fimull
push
scas
push
cmpb
sub
add
sbb
nop
bound
fdivs
ret
aas
fimull
and
in
push
dec
in
push
arpl
movsl
cs
pusha
cmp
or
mov
inc
imul
test
mov
cwtl
jns
xchg
mov
or
testw
xchg
int
cmp
lret
mov
and
pop
cmp
mov
mov
lahf
add
leave
outsb
les
push
scas
adc
xor
stc
mov
push
ja
std
aas
push
jo
dec
inc
dec
movsl
cmp
mov
cmpsl
push
int
xchg
add
jle
popa
outsl
pop
sar
inc
out
cmp
or
div
pop
jg
push
test
lods
mov
scas
cld
xor
or
sub
mov
pop
adc
loopne
test
popa
cmp
repz
into
sbb
and
xchg
fsubs
cmp
pop
mov
rclb
loop
aam
sub
cmp
dec
fdivs
repnz
xchg
repnz
jo
aam
push
data16
aaa
jb
add
jbe
cmpsl
lahf
fstpl
lds
push
sub
dec
dec
movsb
hlt
pop
movsb
pop
bnd
imulb
mov
adc
push
push
add
jo
cld
xlat
mov
scas
popa
cltd
pop
dec
jb
cmp
dec
lahf
mov
or
jp
addb
mov
inc
mov
adc
outsb
push
push
dec
int3
mov
inc
jno
clc
xchg
call
arpl
jge
notl
adc
popf
mov
mov
ja
clc
push
je
push
cmpsb
shll
dec
lods
add
pop
mov
les
pop
and
mov
push
shll
push
fisubrs
stc
test
xchg
out
cmp
xchg
add
push
sub
in
or
cmc
adc
jmp
stc
mov
sub
dec
mov
sub
lds
xlat
test
jecxz
push
mov
lods
xor
push
mov
stos
test
push
dec
pop
dec
in
mov
xchg
int3
into
sub
insb
push
cs
inc
pop
xchg
and
test
sbb
jnp
fwait
xor
popf
inc
movsl
leave
les
cltd
dec
xor
sub
pushf
dec
in
mov
sub
pushf
mov
cvtdq2ps
lret
movsl
aas
push
jnp
jecxz,pn
imul
ret
xor
mov
xchg
push
cmp
repz
mov
in
and
push
dec
xlat
sbb
fnstenv
mov
mov
inc
fcom
ja
sbb
out
pushf
or
cli
scas
pop
push
push
pop
mov
lods
add
dec
mov
adc
das
push
and
mov
shr
movhlps
pop
inc
fidivrs
aas
xchg
cltd
push
jg
rcrb
loopne
adc
and
outsb
sbb
mov
dec
xchg
mov
cwtl
mov
jmp
loopne
adc
mov
sarb
mov
mov
cmc
or
mov
scas
sbb
mov
pop
pop
push
call
adc
or
loope
cmp
xor
xor
mov
out
cmp
push
nop
push
aaa
sbb
push
sub
dec
mov
adc
cmc
jb
sbb
or
inc
jg
jnp
adc
adc
mov
add
pop
and
or
pop
mov
js
fstl
mov
xor
adc
scas
mov
mov
cmpb
jb
in
test
arpl
int3
sbb
jmp
roll
xchg
add
loop
jb
xor
xor
adc
cli
push
xchg
sbb
arpl
add
idiv
mov
xchg
adc
stc
pop
lahf
inc
inc
adcl
cmpsb
cli
ja
or
mov
lods
sbb
orl
push
movsb
or
sub
pusha
ja
xlat
roll
jge
sti
loopne
push
dec
sbb
subl
mov
icebp
mov
inc
xor
xor
add
inc
mov
rorl
sbb
push
mov
jbe
mov
aam
push
cmp
lret
jno
sub
jle
adc
jg
aam
sahf
movsl
test
leave
and
pop
cmp
push
dec
sahf
inc
leave
mov
ss
jae
xorb
shll
outsb
push
pop
out
sub
add
aaa
and
fcoml
leave
shlb
jl
repz
jbe
mov
out
out
loope
out
insb
push
cs
pop
xchg
pushf
adc
pushf
js
loope
mov
sarb
jle
dec
mov
inc
rorl
les
and
dec
lcall
inc
loopne
adc
rcrl
mov
dec
decl
test
xchg
xchg
call
mov
jb
stos
sbb
push
icebp
stos
jl
xchg
mov
cmp
out
daa
or
xor
mov
sbbl
cmp
cmpsb
mov
jmp
icebp
and
fs
add
jle
lahf
data16
pop
subl
jae
leave
loop
push
xchg
ja
xlat
call
dec
add
adc
es
sub
fcmovnu
mov
cwtl
in
ljmp
jns
dec
stc
mov
dec
dec
mov
ljmp
mov
aam
clc
pop
pop
imul
add
shlb
mov
sahf
stos
pop
mov
push
push
dec
int
lcall
icebp
fcompl
leave
les
das
leave
test
rclb
leave
mulb
xchg
out
inc
jl
and
pop
dec
sbb
sti
dec
dec
jmp
inc
sub
jae
or
xchg
dec
call
cwtl
jno
adc
pop
push
ds
mov
mov
test
adc
push
xchg
arpl
rorb
lret
ja
insb
ja
and
lret
idivb
xchg
mov
and
cmp
test
push
mov
sub
lds
ds
add
ja
mov
xchg
test
dec
pop
lret
out
sbb
paddusw
idivl
inc
mov
rorb
fld
cmp
push
ret
adc
sub
lret
fistps
cmc
vhaddpd
jo
lods
sbb
sti
pop
jle
mov
add
nop
adc
push
pushf
sub
imul
gs
cmc
mov
aas
int
push
divl
in
sub
jns
stos
das
sarb
orb
jae
sub
push
nop
jnp
mov
das
cmp
icebp
inc
push
test
dec
cltd
cmp
js
mov
addr16
cwtl
fsub
cmp
mov
cli
rcr
cmp
ds
sbb
insb
jb
test
push
ja
pop
gs
int3
fistl
cmp
mov
fcomp
sbb
sti
inc
icebp
loopne
mov
jp
lock
arpl
outsb
loop
bound
gs
mov
pusha
mov
mov
dec
lds
push
fcmovnu
add
int3
rol
push
nop
pop
cmp
adc
cmpsb
ret
xchg
in
and
mov
or
cmpsb
sub
jl
bound
xor
out
mov
jns
pop
daa
in
pusha
popa
add
inc
xor
push
pop
sarl
cld
test
sbb
adc
fnstsw
je
and
jl
xchg
dec
sub
mov
dec
fwait
xchg
shlb
push
aad
and
and
pop
mov
mov
pop
lcall
sub
fsub
hlt
xchg
push
test
dec
sub
dec
rclb
out
and
cmp
inc
sub
cmpb
sbb
sub
jbe
jmp
jg
hlt
pop
loopne
jb
mov
cmpsb
and
popf
outsl
xchg
ds
dec
inc
sahf
mov
jne
cmpsl
fldl
sti
push
int
inc
push
inc
ja
jae
push
inc
push
add
out
add
je
sub
or
into
fdivrl
pop
xchg
shlb
jg
mov
rcr
imul
insl
in
movb
fstpl
pop
testl
nop
inc
jns
fnsave
sub
push
jg
xor
jle
flds
push
push
movsl
mov
dec
call
adc
out
sub
repz
aam
xor
jbe
or
mov
fdivrl
mov
mov
inc
jno
push
in
adc
rclb
and
jo
mov
and
pushf
mov
mov
xchg
pop
push
daa
sub
pop
xchg
in
add
rol
mov
ja
popa
loop
fwait
dec
mov
mov
hlt
das
fimuls
push
in
testl
dec
fdivrs
jp
mov
and
test
je
add
xor
es
out
hlt
jp
xor
sub
xchg
test
jecxz
pop
and
fldpi
mov
pop
xor
mov
hlt
sbb
xchg
loope
sbb
cmp
rcrb
outsl
inc
and
pusha
cmpsl
add
xchg
notb
pop
xor
in
xlat
test
out
lea
stc
pop
sahf
orb
loop
add
inc
push
or
xchg
in
stos
roll
lea
pop
jmp
rclb
pop
cli
xlat
pop
lea
jbe
push
ljmp
lock
mull
dec
adc
outsb
clc
push
mov
sub
popf
dec
out
mov
stos
mov
adc
es
fdivrs
and
fldt
les
inc
xor
clc
jo
add
jo
xor
loopne
pop
jne
js
jge
stos
stos
and
xor
fwait
mov
dec
or
adc
mov
push
add
push
lods
inc
or
sbb
cmp
jg
sbb
add
sarb
cwtl
sub
dec
cmpsl
mov
mov
jne
xchg
mov
mov
fcoms
push
or
mov
fidivrs
or
js
pop
jo
mov
orl
clc
cmpsl
loopne
or
leave
or
pop
std
imul
popf
test
hlt
test
cmpsb
mov
mov
ret
mov
in
imulb
jns
int3
loop
xlat
inc
jo
jno
push
cltd
cmp
mov
mov
fld
cmp
popa
dec
pop
xchg
mov
jne
clc
mov
mov
sti
inc
aaa
mov
inc
lock
inc
aaa
daa
adc
sub
sahf
fcoms
test
inc
jmp
mov
add
xor
in
xor
and
jae
shll
fistpll
cmp
dec
cmp
test
cmp
adcb
aas
push
pop
leave
sub
jmp
js
ljmp
rorb
xchg
or
jmp
inc
stos
adc
mov
jae
sub
inc
and
push
add
pop
loopne
sub
pop
es
outsl
mov
mov
add
xchg
jl
in
pop
imul
sub
pusha
jns
mov
mov
adc
icebp
inc
shl
cld
inc
jle
sbb
popa
jae
fsubrl
leave
push
xchg
mov
add
adc
andb
cmp
scas
inc
mov
or
xchg
sub
mov
xchg
ljmp
out
xorl
ret
sar
sub
iret
add
push
fldt
cmp
daa
cmovg
add
lods
mov
icebp
jno
sbb
aam
inc
mov
xchg
fsub
jle
imul
daa
leave
test
mov
test
mov
lahf
pop
jns
xchg
jb
mov
inc
addb
ds
std
sbb
jns
xchg
lock
lret
mov
and
xchg
mov
lcall
mov
add
mov
adc
inc
cmp
jmp
jnp
pop
test
and
sub
lret
or
lcall
xchg
out
cmpb
pop
push
mull
fimull
jmp
push
mov
hlt
fbld
mov
dec
popa
icebp
mov
cmp
mov
repnz
xchg
lods
mov
mov
int3
pop
cld
pop
test
hlt
sbb
mov
xlat
je
xor
cmp
adc
popf
push
mov
and
push
mov
adc
mov
adc
add
repz
jnp
js
sub
cs
jg
push
call
nop
hlt
adc
into
xchg
jnp
mov
xor
mov
or
loope
mov
out
jecxz
dec
xlat
jecxz
mov
idiv
xor
mov
lahf
out
hlt
mov
rcrb
fildll
sub
jp
js
fs
mov
mov
rcrl
jg
mov
dec
arpl
js
into
or
pop
hlt
xchg
insb
mov
sahf
je
out
pop
jae
push
mov
in
sub
in
mov
dec
addr16
mov
pop
loope
push
push
xchg
xchg
mov
lods
push
mov
mov
cwtl
jecxz
loopne
loope
and
divl
pop
mov
lods
mov
pop
xor
test
sahf
cmp
mov
sub
nop
and
adc
lret
xor
cld
adcb
scas
cmp
mov
and
push
push
mov
add
lds
arpl
je
sbb
inc
mov
fsts
cmp
dec
je
stos
xor
inc
pop
es
jmp
mov
jne
adc
ret
not
sub
pop
cmpsl
dec
add
push
dec
sbb
mov
jl
out
mov
insl
pop
nop
rorl
sub
mov
movb
into
icebp
scas
aas
call
jecxz
sbbb
fldenv
mov
lret
sbb
fidivrs
aaa
insb
sub
shl
arpl
popa
adc
nop
jge
lcall
insb
and
cmpsb
outsb
test
fwait
leave
or
mov
sarl
adc
add
and
leave
pusha
and
ucomiss
mov
ficoms
rcrb
mov
adc
in
xchg
mov
inc
and
xchg
xchg
js
aaa
lea
test
movl
xor
int
ret
es
jb
dec
pop
jg
or
ljmp
ss
scas
push
inc
test
divl
ja
test
pop
xchg
enter
cltd
cmpsb
in
sbb
push
ds
fs
sub
aam
negb
test
and
shr
int
rcrl
push
ret
andb
and
leave
dec
popf
jo
lea
addb
adc
xor
dec
pop
mov
in
or
mov
jmp
cmp
roll
hlt
dec
insb
cmp
nop
ds
scas
ljmp
mov
enter
lcall
jbe
fwait
int
jbe
pushf
push
ss
stos
add
rcll
in
es
jg
pop
add
sub
int3
outsb
pop
and
mov
lods
inc
add
loopne
dec
das
outsb
xorl
test
mov
es
xor
pop
rcrb
lret
jns
pop
ljmp
jno
call
jae
xor
enter
push
stos
decl
pop
les
inc
out
or
mov
push
inc
mov
fcomps
sbbl
pushf
sarl
mov
or
sub
les
or
jge
scas
dec
movsb
je
pop
sub
loopne
mov
sub
cmp
inc
dec
stos
add
or
lods
mov
xchg
xchg
sbb
and
mov
outsl
xor
stos
mov
je
movsb
xor
jo
ficoms
adc
dec
mov
cs
fidivrl
addr16
or
dec
aad
dec
fbld
cld
mov
mov
pop
inc
pop
xchg
adc
aam
mov
mov
jo
pop
sbb
xlat
sti
lea
mov
xor
icebp
pop
pushf
aaa
out
sahf
clc
std
pop
xor
mov
xor
insb
add
xor
in
nop
inc
add
sbb
gs
insb
xchg
jo
xchg
outsl
fsubrl
inc
nop
test
push
pop
lret
add
mov
lods
lret
mov
bound
cmc
jo
add
cmpsl
jecxz
sbb
mov
cmp
fidivs
ja
jo
push
or
xchg
sub
mov
jecxz
jo
pop
or
push
pop
inc
jo
xor
mov
sub
mov
xor
add
sub
cld
into
popa
push
sub
sub
cmpsb
test
imul
insb
movsb
pop
jl
js
clc
adc
pop
repnz
shrd
imul
loope
adc
ds
xor
fiaddl
xlat
pop
mov
stos
or
call
sub
iret
cmp
cmovnp
cmp
dec
xor
sahf
scas
ror
cmp
add
cmpsb
and
mov
scas
orb
scas
sub
pop
or
cmp
inc
adc
jecxz
adc
cmp
aaa
or
push
mov
xchg
cltd
jns
push
decb
jmp
inc
arpl
scas
and
xor
jbe
add
cltd
sarl
sarl
xchg
add
cs
fcomps
data16
movsb
pop
mov
ljmp
sub
mov
ja
popa
mov
cli
mov
mov
mov
cmp
scas
mov
mov
push
mov
pusha
jno
cmp
inc
popa
and
cwtl
and
jne
xchg
mov
sub
jno
adc
push
mov
in
adc
pop
cmpsl
or
or
push
push
xlat
jb
loopne
xor
mov
ljmp
icebp
or
mov
push
jl
jecxz
pop
mov
bound
dec
sub
mov
int3
lds
addr16
das
repnz
push
mov
jg
scas
das
fsts
fwait
adc
and
jecxz
mov
pop
push
mov
int3
xor
jns
mov
xchg
fisttpll
mov
pusha
push
popa
mov
or
dec
cmp
imul
dec
pusha
push
pop
cs
jae
cmc
dec
sub
pop
icebp
and
fs
push
add
xlat
xor
outsl
inc
cmp
dec
cmp
jge
fcos
xor
push
leave
test
sub
fstl
ret
mov
ret
outsl
inc
cltd
push
jl
shlb
mov
roll
pop
das
fldt
adc
insb
cmp
inc
sub
jecxz
xor
insl
out
sbb
lret
mov
out
mov
popa
jg
iret
xchg
and
sbb
movsl
std
std
subl
xchg
int
aas
dec
adcb
hlt
movsb
loope
xorb
loope
or
pop
xor
or
push
ja
mov
sahf
xor
pusha
mov
divb
pushf
imull
pushf
out
mov
jns
mov
xor
sub
mov
bound
inc
popf
cmp
faddl
push
lret
push
popf
es
pop
pop
subb
lock
sahf
fnstcw
xchg
jmp
sbb
cmp
mov
xor
ljmp
test
sub
push
mov
sub
mov
push
xor
mov
adc
scas
sub
mov
cmp
or
mov
jb
mov
shrl
cltd
test
pop
ss
mov
mov
pop
xchg
dec
fs
fmull
xchg
sub
out
icebp
mov
mov
jge
insl
ret
sar
in
sar
jne
sahf
dec
aaa
fbstp
xchg
popa
ficomps
imul
rolb
std
cmp
das
hlt
stos
stos
or
adc
xchg
aas
mov
jbe
cmc
sahf
xchg
test
jl
or
mov
stc
fmul
sbb
adc
add
mov
jo
or
pushf
or
add
xchg
inc
ljmp
adc
and
push
sbb
orb
pop
mov
iret
je
cmp
sbb
stos
inc
inc
aad
movsb
mov
push
nop
mov
popf
iret
cltd
loop
cmp
rorb
add
jno
cwtl
fcoms
orl
adc
pop
pop
mov
add
xchg
daa
pusha
roll
mov
leave
mov
outsl
push
mov
and
loopne
dec
jle
sub
je
flds
jno
pusha
lcall
xlat
ss
xorb
cmp
outsb
sarb
xchg
or
adc
mov
mov
dec
aas
or
iret
push
shlb
sub
and
push
call
adc
xlat
stc
roll
mov
int3
inc
aam
movsb
push
rcll
inc
add
stos
bound
out
xchg
jl
xchg
jge
mov
push
cmp
mov
push
mov
mov
inc
xchg
lods
and
cmp
push
hlt
sbb
das
xchg
outsl
scas
out
neg
jge
dec
pop
push
dec
imul
cs
push
and
xchg
sbb
mov
sub
pop
push
roll
jb
xlat
mov
loopne
addr16
mov
repz
sbb
aad
rorl
xchg
jns
sub
pop
insl
pop
sbb
sub
sti
shl
js
add
sbbl
mov
ds
mov
cmp
cmp
xor
inc
cmp
mov
lods
jo
or
out
or
aas
cmc
icebp
sti
add
pop
add
int
pop
faddp
add
shlb
sarb
mov
lock
jl
mov
std
mov
adcl
mov
stos
fsubs
mov
add
cmpsl
lds
inc
bnd
lods
out
jo
push
sarb
leave
fcmovne
and
data16
scas
cld
sbb
inc
jno
loop,pn
in
and
push
push
push
push
inc
insl
sahf
mov
sub
lods
out
inc
shrb
ret
and
inc
es
sub
es
push
lahf
mov
xchg
popf
shll
shrb
sub
mov
xchg
enter
sub
mov
popl
and
pop
das
addr16
jp
xor
jns
push
jno
scas
loopne
or
cmp
push
mov
in
jo
xchg
shll
jle
jb
call
dec
jecxz
jne
mov
call
mov
fists
add
cmp
push
dec
inc
mov
in
xor
iret
xor
dec
dec
repnz
mov
mov
jns
mov
fucompp
popf
xor
sbb
mov
push
dec
jp
pop
movsb
stos
jb
add
ret
aaa
test
aaa
into
loopne
into
dec
out
mov
mov
jns
jne
xchg
mov
mov
cs
out
es
enter
sbbb
inc
jbe
enter
orl
jnp
sbb
dec
dec
outsb
bound
xor
imul
mov
push
add
jns
xchg
ljmp
mov
xchg
dec
aam
cmp
aad
pop
dec
int
adc
push
cmp
dec
xor
subb
adc
jno
mov
or
xor
pop
es
pushf
call
pop
cmp
mov
jns
popf
test
cmc
sub
add
or
pop
mov
jbe
and
mull
ljmp
jb
inc
dec
mov
repnz
mov
xchg
out
jno
inc
mov
xchg
fiaddl
clc
mov
pusha
out
xor
repnz
mov
dec
push
push
lret
xchg
pop
dec
out
flds
push
fwait
inc
inc
push
adcl
imul
jmp
xchg
aaa
sbb
mov
push
adc
push
push
ret
lret
hlt
ret
mov
out
ss
jl
sub
mov
cmp
jl
out
fcmovnb
addl
sbb
fstpt
fists
shl
xor
xor
xchg
and
and
xor
popa
jmp
jnp
push
or
frstor
pusha
jns
scas
stos
loopne
aam
incl
mov
jmp
test
leave
mov
adc
roll
sub
push
mov
pusha
stos
xchg
adc
push
and
incl
lea
jno
lcall
and
int3
dec
das
xchg
call
jl,pt
mov
fldl
pop
frstor
mov
aas
repnz
xchg
jle
cmpsb
int3
notb
and
pop
jmp
pop
push
dec
pop
xchg
mov
mov
in
jns
repz
mov
pop
out
enter
mov
push
rclb
std
xor
pop
leave
loopne
inc
xchg
cltd
dec
ret
mov
lcall
mov
ret
dec
dec
pusha
push
jno
add
rorl
notb
addr16
or
jns
jl
or
lock
mov
imull
fdivs
lds
sub
mov
mov
inc
push
inc
dec
xchg
mov
mov
mov
push
std
pop
inc
pop
mov
xor
imul
lret
fwait
mov
jle
or
repnz
adc
add
push
add
stos
and
popa
push
negb
outsb
test
mov
mov
dec
notb
cmp
sub
hlt
lods
sbb
outsb
loop
rcr
inc
dec
jns
test
in
xchg
dec
lods
pop
mov
xchg
sub
jge
sbb
and
insl
arpl
pop
negb
pop
mov
test
lahf
jae
sbb
add
mov
add
lods
xor
arpl
mov
adc
pop
cmp
shll
pop
inc
xchg
push
pop
ror
xchg
adc
dec
mov
mov
addr16
andb
aam
or
shlb
cmovne
inc
dec
pop
xor
bswap
fistps
sar
mov
lret
adc
stos
es
dec
and
gs
mov
decl
push
and
repnz
punpckhbw
xchg
mov
outsb
sti
and
dec
ret
sbb
aad
pop
dec
mov
xchg
cmp
lret
mov
shll
repnz
pop
push
dec
jno
pop
add
push
mov
aas
lods
into
pop
mov
loopne
add
mov
out
mov
cli
arpl
push
add
in
sub
inc
add
mov
ljmp
data16
dec
sub
jg
push
mov
xor
sub
outsb
cmpsb
jbe
sbb
rolb
loope
xor
fdivrs
sub
lods
fistpll
mov
rcrb
xchg
pop
xor
add
fidivrl
sbb
sbb
fisubl
insb
movsl
cmp
leave
and
ljmp
add
subb
dec
arpl
add
jl
js
xlat
adc
call
mov
notb
jmp
xor
pop
push
inc
mov
mov
inc
fsubs
lods
dec
add
std
stc
vaddsubps
in
inc
cs
es
sub
push
cld
xor
sbb
cwtl
add
mov
fdivrs
outsb
jecxz
or
repz
or
and
js
xchg
push
aaa
dec
or
and
cmpsb
push
std
imul
call
cltd
cmc
hlt
aam
sbb
xchg
jnp
adc
adc
inc
in
addr16
jae
insl
cltd
aad
or
lret
lret
jbe
sbb
dec
out
mov
pop
push
and
push
sbb
dec
out
cli
ja
adc
adc
pop
jb
das
push
mov
popl
sbb
mov
lret
cmpsb
lea
mov
xlat
insb
push
enter
dec
cmpl
mov
push
adc
aad
cmc
test
jno
inc
or
xor
inc
lret
into
add
lcall
adc
lods
jecxz
and
in
mov
rorl
iret
ss
adc
adc
lret
sbb
leave
pop
xor
pop
adc
lahf
cmpsb
pop
jmp
sub
push
bound
js
dec
mov
push
push
mov
inc
jmp
popa
or
push
pop
outsl
arpl
imul
enter
sbb
neg
pusha
out
xchg
push
ss
nop
mov
xchg
fwait
xchg
mov
rolb
push
mov
jae
jle
gs
xchg
mov
std
gs
mov
adc
pusha
inc
out
xchg
lea
push
push
pop
pusha
and
or
js
movd
stc
test
insl
repz
jle
stos
pushf
aam
outsl
fmull
xor
xor
rcrl
hlt
inc
add
inc
popf
pop
sub
pop
xor
lea
mov
es
or
sub
cmpsl
cmpl
xchg
scas
dec
add
in
xchg
subl
aas
push
sub
adc
add
loopne
pushf
aas
aaa
fcompl
jb
push
dec
lds
repz
add
cwtl
sub
xor
popa
test
or
fwait
xor
cmpsb
pusha
sarb
jge
scas
ret
mov
inc
xchg
xchg
out
cmp
pop
sub
cld
out
pop
jo
aam
outsl
out
nop
fmul
jle
iret
stos
mov
cmp
jne
or
xchg
shlb
enter
cmc
movsl
ja
iret
cmpsl
fistl
outsl
loop
imul
xor
cmp
ja
sub
inc
insb
icebp
adc
fisubrs
push
adcl
jg
call
dec
call
xor
popf
xor
insl
pushf
js
jmp
subl
push
fimull
add
lods
ljmp
sub
adc
shll
cmp
mov
cli
mov
rcrl
inc
push
outsl
or
adc
jp
xlat
and
pop
jmp
jne
out
inc
mul
xchg
cmp
and
js
lret
sbbl
jl
neg
sbb
or
dec
mov
mov
mov
and
mov
in
mov
dec
pop
or
loope
movsl
xor
xchg
lret
dec
cli
roll
sub
test
pop
dec
pusha
nop
cmc
stos
int3
mov
sub
sub
cmpsb
aaa
fwait
xchg
xchg
or
es
fwait
subb
dec
mov
jg
popf
sbb
data16
sub
addr16
sbb
ljmp
out
das
dec
shl
aas
out
mov
push
push
jge
daa
pop
lods
pop
popf
jge
cld
adc
imul
add
pop
idivb
sbb
pop
out
enter
jmp
leave
sub
xorl
mov
mov
mov
add
mov
outsb
movsb
insl
out
push
fadd
jo
adc
ss
push
or
adc
call
das
sbb
mov
out
leave
ja
xchg
vmread
mov
push
add
adc
pop
ss
inc
loopne
mov
clc
rcrb
insl
mov
rcll
sub
xlat
je
push
fsubl
sbb
push
push
mov
daa
jbe
sbb
dec
dec
push
or
popf
rcl
and
push
lds
and
subl
pop
push
enter
pop
pop
subl
enter
rcll
movsl
xchg
insb
dec
cld
jo
add
daa
mov
pop
popf
fildl
mov
ljmp
mov
and
outsl
ja
pop
bound
inc
dec
je
shrb
mov
jo
rol
hlt
fmull
je
loope
inc
arpl
push
pop
lock
aam
or
push
pop
sbb
fnstenv
aad
ljmp
movsb
stos
jl
xor
pop
cli
ret
xchg
lods
dec
xor
adc
mov
and
subb
push
mov
popa
daa
shlb
ret
mov
adc
dec
pop
insl
popf
adc
orl
mov
fwait
lds
pop
and
or
outsl
loope
push
inc
push
mov
out
xchg
pop
mov
punpckhdq
pop
xchg
arpl
inc
push
pop
fiaddl
cld
jnp
stc
andl
cs
aam
sbb
stc
pushf
jo
fisttpll
int
xchg
mov
out
pushf
sbb
jno
scas
test
jb
mov
or
rolb
push
add
mov
jle
js
push
pushf
loopne
cmpb
lds
push
js
jle
xchg
mov
popf
mov
pushf
int
fwait
mov
aad
and
inc
sbb
ss
ret
fsubrs
icebp
xchg
mov
sti
pusha
ljmp
cmpsb
mov
pushf
inc
cltd
rorb
pop
jle
mov
sub
xchg
cmc
sbb
jne
sbb
jnp
pop
dec
out
lds
mov
insb
call
in
pop
mov
or
hlt
rcrb
mov
mov
dec
push
add
push
cmpsl
out
adc
xchg
hlt
dec
pushf
mov
xor
mov
stc
sub
frstor
pop
xchg
inc
cli
pop
push
dec
scas
and
movsb
mov
roll
mov
hlt
rorl
xor
int3
xlat
aad
loopne
sbb
insb
daa
cmc
clc
xor
and
or
outsb
or
sub
fidivrs
mov
mov
in
sub
fbstp
jl
fwait
and
rep
aaa
div
cmpsb
outsl
outsb
dec
mov
inc
sbb
sti
and
sbb
jnp
mov
xor
fdivrl
dec
pop
push
cld
push
xchg
mov
fidivrl
bound
rcll
addl
mov
mov
push
std
test
popf
and
outsl
mov
pop
dec
incl
in
fs
sbb
fst
add
repz
inc
mov
xor
ret
test
fldcw
lret
ja
cmpsb
aas
or
rclb
dec
xor
iret
push
mov
adc
xchg
lods
sbb
mov
xchg
fwait
scas
and
mov
dec
or
or
mov
adc
xchg
xchg
orl
fcoms
cwtl
cmpb
sbb
pusha
or
cwtl
adc
out
insb
cmpsb
ficoml
loope
sbb
mov
int
sub
in
dec
jl
fsts
push
pop
xchg
jle
push
lahf
clc
je
dec
mov
inc
dec
and
ds
std
push
xor
jbe
aaa
cmp
push
mov
flds
dec
xchg
dec
nop
repz
push
scas
mov
dec
ja
test
inc
adc
out
fildl
pop
xchg
bound
dec
bound
mov
jnp
out
mov
xchg
inc
mov
adc
jecxz
push
into
cmc
test
cltd
xchg
in
sbb
mov
mov
mov
aad
rorl
xor
or
sarb
dec
in
scas
mov
lds
fwait
repnz
cmpsb
imul
daa
arpl
push
push
jb
mov
push
loope
jns
inc
push
and
mov
sub
mov
adcl
sar
sub
or
shll
stos
jns
xchg
aas
loop
push
jnp
cmovg
mov
out
das
mov
and
mov
add
adc
push
rclb
mov
sbb
hlt
add
push
sti
push
cwtl
cmp
iret
dec
or
mov
xchg
mov
mov
addr16
inc
test
nop
sbb
jbe
cmp
into
mov
mov
dec
add
out
jecxz
inc
and
lock
jecxz
call
ret
mov
push
test
dec
add
in
jge
into
sub
mov
roll
arpl
in
adc
or
push
rcrb
dec
outsb
add
aam
sbb
or
cmp
dec
cmp
push
dec
push
or
iret
outsb
fistpl
mov
rolb
push
inc
dec
or
daa
add
cld
int
fcoms
clc
jle
adc
test
sub
stos
mov
or
cwtl
cwtl
sub
movsl
cld
scas
xchg
fdivl
mov
pop
and
mov
push
pusha
xchg
ds
push
xor
mov
cmp
or
popa
out
jnp
lcall
adcb
out
jno
shll
add
mov
or
adc
repnz
insb
int
pop
sahf
popf
lcall
std
pop
pop
sbb
repz
insb
add
into
push
mov
sbb
js
outsl
dec
inc
add
pop
pushf
push
das
or
inc
push
aas
xchg
arpl
gs
insl
add
cmc
lea
sbb
cltd
aas
shlb
out
sti
xor
pop
leave
xchg
dec
adc
mov
arpl
cmp
test
out
sbb
jns
cmp
cmp
mov
mov
push
pushf
dec
and
cmp
or
aad
pop
pusha
daa
mov
sub
jnp
jmp
stos
inc
aaa
jl
cmp
pop
shll
sti
xchg
xor
outsl
dec
jne
pop
xor
add
out
sub
adc
jnp
adc
mov
and
or
push
je
mov
gs
jmp
std
mov
xchg
jne
cmc
cltd
fwait
adc
test
pop
cmp
repnz
add
into
jge
aad
mov
int3
popa
pop
jmp
cmpsb
or
dec
add
es
fisttpll
subb
add
fimull
jle
cltd
insl
mov
fdivrl
inc
and
int
xor
push
cld
sbb
outsl
in
xor
xor
insl
lds
inc
lret
scas
inc
jecxz
push
jb
leave
imul
scas
test
test
cwtl
pop
mov
sahf
or
sub
sahf
daa
rolb
sub
insl
in
out
rclb
scas
mov
xor
lea
ret
xchg
mov
nop
and
sbb
jne
clc
mov
dec
fcomi
inc
aaa
mov
jmp
data16
push
xorl
lret
shlb
lret
jae
inc
fs
inc
test
mov
sub
sbb
mov
push
xchg
sbb
dec
sahf
sub
idivb
hlt
jg
add
pop
add
daa
stos
shl
lcall
sti
hlt
inc
idivb
stos
or
in
in
push
sub
cmp
imul
xor
outsb
mov
mov
mov
jp
arpl
lahf
lahf
daa
das
push
sahf
push
cmp
scas
pop
js
push
sub
xlat
fnstenv
ds
xchg
pop
mov
pop
add
pop
xchg
xchg
xor
lock
and
sbb
sbb
pop
adc
js
dec
xchg
dec
add
mov
call
add
sub
jae
cmp
jne
lret
js
adc
cmpw
arpl
xor
lret
sub
shl
test
pop
int3
fisubrl
fadds
imul
inc
and
push
das
and
loopne
dec
sbbb
cld
inc
sbbl
add
clc
inc
adc
lock
mov
lret
jae
in
push
in
sub
aam
pop
filds
rep
sub
sbb
and
xchg
lret
outsb
dec
xchg
jno
xchg
scas
xchg
in
lods
mov
add
arpl
js
clc
cmp
push
push
imul
mull
xchg
inc
mov
push
mov
mov
dec
pop
test
mov
push
pop
int
scas
sbb
std
call
nop
jge
add
andl
cwtl
inc
popl
ret
es
jecxz
lods
sbbb
mov
shl
fimuls
loope
push
dec
out
pop
cmp
push
mov
popa
add
sub
mov
jle
pop
sub
xor
pop
push
mov
cmp
out
xlat
mov
mov
test
fidivrs
mov
cmovo
jge
mov
imul
jo
lds
stc
cli
xor
fcoms
lahf
cmp
pop
sbb
lcall
pop
icebp
aaa
aam
jne
xchg
outsb
dec
iret
sbb
mov
jg
imul
int
dec
sbb
dec
nop
push
push
sub
cmp
add
push
mov
mov
test
sti
je
xor
jecxz
js
and
pop
outsl
fs
iret
dec
mov
xlat
and
pop
mov
loop
lcall
lret
mov
ljmp
jb
pop
mov
movsb
shl
in
aas
lret
or
push
pop
push
div
push
cmpsl
xchg
outsb
mov
dec
shl
daa
rorl
xor
xchg
cmp
cmpsl
inc
or
icebp
adc
cmp
lea
xlat
pop
push
adc
inc
adc
jo
xlat
push
add
or
stc
mov
jnp
sbb
call
cmp
sbb
dec
inc
js
cmp
data16
movsb
xchg
xor
pushf
call
out
jl
sbb
mov
or
testl
clc
int3
insl
outsb
mov
scas
nop
xchg
cs
push
xchg
pop
sub
xchg
in
xchg
js
inc
and
cmp
call
inc
mov
inc
les
push
mov
xchg
xor
sub
pop
xlat
dec
ret
clc
jg
sub
cmp
stos
sbb
je
add
lea
xor
lcall
imul
sub
cli
andb
add
mov
roll
fs
repnz
fnstsw
pusha
mov
and
sbb
fcoms
pop
xchg
neg
fstpl
lret
fs
negb
cmp
or
inc
add
mov
test
inc
flds
sub
loopne
sub
lods
sub
sbb
cmpsl
cmp
inc
sti
call
rorl
fists
cli
add
xlat
test
xchg
je
rol
int
div
out
pop
stc
push
cmc
fwait
jge
pop
xor
iret
and
mov
inc
mov
nop
push
mov
jne
inc
xchg
sahf
clc
or
clc
cmc
inc
roll
mov
popf
mov
js
push
lods
lock
es
pop
xlat
sbb
fstps
dec
mov
jae
or
repnz
jno
add
pop
or
les
mov
scas
imul
mov
orb
fisubs
cmc
mov
and
xor
ret
divb
out
arpl
test
icebp
cmc
stos
sub
jp
imul
sub
jge
inc
addr16
xor
jo
divb
mov
dec
js
xor
mov
lcall
cmpsl
ret
mov
es
mov
add
sahf
test
jle
fdiv
cli
jl
cmp
pop
fldl
push
pop
and
sarb
mov
repnz
push
and
cmpb
addr16
push
rcrl
xorl
mov
inc
jl
adc
dec
add
lret
inc
cmp
arpl
mov
js
sub
nop
ret
mov
mov
dec
mov
push
xchg
pop
fwait
xchg
fs
rcr
sarb
sbb
iret
negb
or
in
imul
push
xchg
aad
mov
into
aam
sbb
arpl
mov
sbb
adc
adc
pushf
ret
and
icebp
mov
hlt
inc
mov
lahf
shrl
and
and
xchg
outsb
add
sub
add
xchg
add
or
mov
out
test
ja
sub
sub
and
je
cmpsb
fimull
sub
jle
fistl
push
jo
push
adc
aaa
mov
dec
inc
fidivrs
fwait
jge
inc
aad
roll
inc
test
lea
push
fnsave
mov
repnz
movsl
imul
ficomps
out
and
dec
dec
pop
mov
popa
in
ja
int
sbb
pop
or
add
and
stos
cmpsb
cmp
mov
push
inc
adc
das
lock
cli
mov
ficompl
adc
addl
push
das
sti
mov
or
js
nop
and
dec
lcall
enter
push
incb
inc
xor
sub
ret
pop
jbe
or
or
jns
push
insb
xor
sbb
mov
outsb
sbb
int
cltd
jno
xchg
call
lock
push
fwait
sbb
cmpsl
aaa
fs
inc
je
jle
dec
test
jle
aas
pop
mov
cmpb
push
test
stos
repz
add
fcomps
sar
pushf
xchg
fnsave
out
aas
call
pop
jns
ja
mov
sub
cmp
data16
cmp
addr16
xchg
out
jno
fbstp
sub
loop
cmp
sbb
lret
arpl
das
adc
jl
stos
out
lret
in
stos
fisttpll
push
xchg
popf
push
cmp
adc
ret
repnz
sbb
inc
dec
inc
mov
push
mov
rcll
inc
lcall
lods
inc
inc
cwtl
jmp
mov
xor
hlt
lods
adc
lcall
sbb
lods
mov
je
dec
adc
adc
push
dec
and
repz
jl
aad
out
pop
xor
jno
ja
repz
pop
or
push
add
sahf
push
lock
faddl
loopne
cs
arpl
cs
sub
push
xchg
cmovs
xchg
sub
call
xchg
add
repz
pop
or
repnz
cmp
push
xchg
in
or
ror
jbe
ss
aas
dec
push
fdiv
cld
cwtl
scas
cmp
mov
rcrb
ret
mov
mov
in
inc
dec
push
xor
out
xor
loopne
xchg
imul
out
mov
jl
adc
inc
and
cmp
jle
cmc
inc
mov
jl
adc
cmpb
shl
rcrl
push
xchg
xchg
dec
and
adc
mov
jge
or
ljmp
je
mov
dec
data16
jno
adc
test
out
adc
add
scas
xchg
jge
fildl
jnp
xchg
xor
mov
mov
filds
mov
test
mov
aas
dec
pop
cli
inc
scas
xor
pop
or
pop
mov
fidivl
jns
les
aam
rcrl
jle
cmp
xchg
lret
fcmovu
sbb
push
xchg
pop
cmc
orl
repz
mov
nop
xor
shl
nop
out
loope
jo
sub
push
lods
adc
jle
xchg
mov
push
scas
out
rorb
pop
das
orl
stos
ds
inc
pop
test
mov
adc
jnp
aad
add
xor
push
mov
mov
cwtl
in
xor
insl
jne
ret
or
cmc
jge
sbb
ret
pop
xchg
push
inc
into
into
sbb
jmp
popf
aad
mov
mov
xchg
push
mov
cmp
xchg
das
mov
sahf
jbe
inc
lock
push
sarl
pusha
dec
pop
test
and
jecxz
mov
cmp
das
dec
jns
fadds
test
push
cmpl
mov
dec
push
inc
pop
cli
sub
sbb
ret
imul
xchg
cmpsl
icebp
mov
clc
dec
mov
jecxz
aas
fidivs
cmp
shrl
pop
scas
scas
push
pushl
cmp
outsb
iret
in
xchg
xchg
xchg
cmp
in
neg
and
and
xor
adc
xor
add
or
or
outsb
aas
int3
cmp
jg
jle
into
xchg
out
adc
int3
test
jecxz
mov
xchg
call
arpl
movsl
call
mov
and
xor
adc
and
dec
dec
fiadds
sub
ljmp
push
data16
ret
fists
mov
jns
mov
in
lret
inc
mov
adc
das
push
test
sub
xorl
movsb
adc
sub
jge
add
fsubrl
dec
fstpl
fisttpll
lods
fisttpll
lcall
aas
mov
mov
jge
xchg
jle
add
mov
pop
jle
xchg
mov
jl
mov
aad
or
cmp
aam
or
jns
out
cs
ret
xchg
sbb
das
ds
xor
jo
daa
mov
cld
mov
ror
xchg
out
and
push
ja
cmc
inc
xor
xchg
adc
fidivl
lods
cmpsb
mov
std
pusha
sarb
xor
xchg
iret
rolb
scas
mov
jo
sahf
xchg
sbb
sub
lahf
sar
nop
imul
in
das
ret
mov
jge
outsb
xchg
pushf
sub
sbb
push
data16
adc
mov
outsb
pop
pop
jl
cmp
jns
mov
aad
faddp
and
add
in
sbb
ja
jne
dec
call
cwtl
or
ljmp
in
shlb
decb
in
jno
cmp
dec
imul
mov
mov
in
dec
xor
out
ret
leave
inc
inc
sub
mov
dec
xchg
and
cmpsl
dec
shlb
shr
pop
pop
aad
sar
sub
ficoml
inc
dec
lahf
dec
js
sahf
ret
loopne
lcall
xchg
leave
xchg
inc
cmp
mov
mov
push
fcompl
push
fwait
into
call
adc
cwtl
and
and
divb
outsb
dec
jmp
cli
mov
mov
jb
cmp
clc
and
dec
and
xor
shll
jmp
inc
divb
mov
aas
loope
pop
out
inc
in
mov
repnz
mov
jbe
mov
call
lds
repz
xor
xlat
mov
sbb
xor
mov
inc
leave
xchg
mov
icebp
lret
and
sbb
jg
movsb
xchg
nop
sahf
mov
lods
and
fcomps
mov
in
loop
sbb
jmp
or
pop
push
dec
mull
fnstsw
xor
sbb
mov
mov
xlat
daa
mov
dec
mov
lcall
mov
jnp
jno
xlat
mov
push
adc
cmp
fs
inc
fsubrs
ss
pop
sub
jmp
cmp
push
adc
jnp
mov
pop
loopne
add
pop
add
aas
and
sub
out
fsubrp
push
cwtl
cmc
inc
jg
nop
sbb
aad
xchg
lock
jecxz
adc
or
shrb
mov
or
mov
in
mov
mov
lods
fildl
rorb
adc
and
lods
or
xor
jo
push
adc
mov
insl
xchg
out
test
xor
or
mov
dec
clc
loop
test
jno
xchg
movsb
mov
int
jne
gs
ljmp
dec
sahf
in
mov
inc
test
cmp
subl
push
mov
imul
xchg
mov
add
pop
dec
dec
sub
test
loop
outsb
pushf
daa
mov
mov
out
repnz
testl
imul
pushf
inc
in
int3
xchg
fdivrp
dec
jb
aam
nop
in
sub
or
jo
nop
idivl
movsl
jbe
rcrb
iret
mov
lock
jae
jae
test
inc
cwtl
and
mov
mov
pop
mov
stos
add
leave
fisttpll
hlt
xchg
xchg
and
xchg
xchg
repnz
dec
outsl
xor
pushf
sbb
or
or
movsb
out
test
jle
cmpsb
mov
and
fs
add
inc
int3
icebp
lcall
cld
cmpsl
stc
adc
xorb
test
das
add
cmc
jne
dec
in
mov
adc
adc
aam
mov
mov
sbb
pop
cwtl
nop
mov
faddl
add
loopne
or
adc
pop
push
push
sarl
sub
fs
rorl
aaa
shll
jmp
scas
pop
push
sub
pop
es
jno
scas
in
pop
lret
fidivl
out
dec
inc
pop
stos
ficomps
xor
sub
jne
xchg
inc
sbb
sbb
data16
sahf
add
xchg
mov
jns
lds
iret
jle
dec
pop
mov
push
ror
mov
mov
std
pushf
stos
push
jmp
sub
dec
push
dec
cmp
jbe
into
les
pop
js
add
flds
ror
add
jbe
or
mov
leave
adc
inc
xchg
stc
repnz
sub
jne
mov
adc
dec
std
fucom
out
stc
mov
popf
mov
dec
push
fsubrs
pop
dec
xorb
fiadds
loop
cli
mov
inc
hlt
push
outsl
aaa
cmp
add
sbb
mov
jge
fwait
ret
outsb
fisttpl
divb
push
test
pusha
lea
pushf
into
stc
xor
dec
push
shl
ss
and
daa
mov
sbb
ret
das
fidivs
scas
je
fdivr
fiaddl
mov
add
or
jmp
addr16
sbbl
rclb
test
mov
or
and
int3
push
add
pop
pusha
add
stos
stos
mov
andl
lock
dec
test
or
or
in
sub
shll
dec
repnz
fstps
xchg
scas
pop
push
sti
dec
adc
aas
xchg
push
jno
popa
lds
ret
test
outsl
xlat
je
es
ficompl
inc
xchg
leave
cmp
sub
dec
das
test
fcmovnu
popf
test
push
add
ss
push
mov
in
and
out
int3
push
and
xor
mov
mov
sbb
aam
pop
pop
shll
test
cmp
pop
into
nop
or
fnstsw
in
xchg
out
xchg
sbb
je
jp
xor
icebp
negl
insb
rorb
mov
adc
push
dec
outsl
sarl
imul
lret
fwait
jle
push
jbe
pop
cmp
mov
nop
pop
sbbb
or
xor
arpl
aam
ret
pop
mov
xchg
xor
scas
js
popa
pop
aaa
jl
dec
mov
mov
add
sarl
mov
push
mov
in
pusha
pop
xor
xchg
lods
add
aas
xchg
rclb
lret
jno
imul
dec
in
pop
or
add
test
mov
sbb
dec
cmpsl
mov
cld
add
mov
mov
pusha
cmp
in
test
xor
out
push
imul
movsl
outsb
dec
mov
int
fstpl
or
xor
or
inc
test
pusha
out
std
or
scas
aas
and
lds
xor
add
push
enter
add
ret
fbld
xchg
and
fldl
loop
sbb
clc
jnp
jns
lods
out
cli
xchg
or
jge
popa
iret
cmp
cmp
and
jbe
or
out
fs
lahf
rcr
imul
push
xchg
mov
adc
mov
je
pop
icebp
lock
add
push
lods
sbb
sbb
cli
jbe
adc
xor
mov
xchg
jle
in
ljmp
pop
sbb
fisubrs
pop
test
cmovle
xchg
in
push
adc
sbb
loopne
mov
ja
mov
nop
xchg
sbb
jl
pop
fdivrl
loop
insb
sti
push
push
js
xchg
cmpsl
add
inc
aaa
pop
scas
mov
mov
fwait
xchg
xchg
lock
dec
mov
aad
leave
and
sbb
xor
jns
jg
mov
popa
lds
out
imul
test
negb
cs
dec
sub
decb
ljmp
or
inc
jb
push
xlat
jl
dec
xor
and
call
jae
sub
jnp
lahf
xor
cmp
in
inc
sub
aas
mov
cmp
loop
add
adc
das
gs
pop
out
and
cwtl
lock
iret
push
sti
arpl
cmpsb
mov
lret
inc
mov
inc
or
loop
sub
sub
add
mov
xchg
shrl
push
adc
mov
neg
icebp
mov
dec
dec
sub
mov
add
fwait
sarl
mov
xor
mov
push
scas
out
aas
icebp
add
pop
dec
test
int
ds
xor
inc
mov
sti
in
xlat
mov
xchg
leave
jns
ret
and
popa
imul
ja
jae
test
cmpsb
pop
les
adc
sub
out
cltd
loopne
dec
pop
xchg
ficoml
xchg
jns
sbb
stc
fwait
lock
repz
mov
push
aad
fimuls
lock
dec
mov
xor
hlt
lret
sbbb
or
adc
idivb
test
lea
fistps
push
out
sub
mov
push
xchg
js
mov
adc
jb
mov
pop
push
iret
dec
repz
jmp
xlat
divb
mov
mov
dec
pop
cltd
dec
mov
aad
jbe
and
pop
or
cwtl
bound
call
fidivrs
inc
gs
jg
jge
stos
xchg
sub
adc
lahf
and
xor
dec
shlb
dec
xchg
imul
add
xchg
das
push
dec
or
jbe
cmp
xchg
push
rcrl
test
mov
mov
mov
sar
iret
push
add
sub
or
and
fisubrs
mov
jno
or
stc
lods
sub
incl
fisubl
dec
pop
lahf
mov
xchg
jmp
jg
outsb
xor
outsl
or
add
sbbb
mov
mov
out
and
shl
push
or
dec
fists
test
bound
dec
add
jne
mov
mov
addr16
mov
lret
or
orl
adc
pop
push
or
insl
jns
xchg
jae
dec
call
sbb
out
lods
aam
push
outsl
out
clc
cltd
les
cmp
dec
add
outsb
sbb
mov
sub
in
dec
xchg
scas
lock
into
scas
push
pusha
pop
or
data16
add
les
add
in
std
add
xchg
mov
or
pop
add
and
mov
out
mov
outsb
daa
shr
pop
pop
in
xchg
jne
adc
dec
sbb
mov
pusha
mov
imulb
sahf
subl
add
jge
mov
call
test
pop
cmp
ret
cld
xor
ljmp
bound
daa
mov
in
inc
and
lods
cld
jne
sbb
jmp
popa
fisttpll
pusha
movsb
inc
adc
call
fnsave
insb
dec
adc
pop
scas
or
jl
sbb
dec
sub
fs
clc
and
lahf
sub
xchg
out
add
test
sbb
es
mov
mov
hlt
fwait
cld
push
test
mov
add
cmp
ret
idivl
sbb
sub
dec
mov
xor
shll
pusha
and
sbb
aas
sbb
test
fdivs
aas
cmp
loopne
inc
outsl
dec
cmc
or
aaa
lahf
cmp
enter
jle
sti
dec
lret
xor
jg
shl
pop
call
ficomps
mov
pop
xchg
fs
scas
dec
dec
shr
add
push
mov
sbb
out
js
out
dec
movsb
repz
pop
pop
dec
les
test
and
vpshufhw
mov
ljmp
pop
jne
stos
fs
mov
xchg
outsl
fiaddl
xchg
pop
and
mov
dec
bound
xchg
lea
shlb
and
sti
add
mov
shrl
loop
sub
xchg
sub
mov
pop
lret
in
or
xchg
dec
lret
lock
movsl
xchg
add
push
sbb
ja
in
scas
jp
mov
lret
xor
xchg
out
popa
xchg
sub
fsubl
inc
adc
and
adc
sbb
imul
frstor
mov
sub
pusha
sbb
or
pop
ficomps
mov
cs
adc
mov
popa
cli
insb
push
or
push
cli
imul
sub
fisttpll
add
cmp
mov
add
pop
mov
pop
push
fmuls
push
sbbl
cmp
les
testb
outsl
ret
aam
inc
jb
scas
sub
rcll
loope
cs
mov
sbb
cmc
or
mov
sub
lcall
out
sub
jmp
or
adc
imul
jp
test
mov
pushf
sub
cmpsb
cmp
jnp
ret
or
fisttpll
adc
ljmp
jl
jnp
pop
push
xchg
xchg
stc
mov
and
cmp
or
sub
leave
sub
negl
std
cmp
mov
fwait
jno
and
mov
adc
cmpb
mov
aaa
out
pop
enter
push
or
inc
call
popf
cmp
js
cmp
imul
pop
rcl
loope
orb
sbb
std
inc
je
sbb
xchg
imul
mov
xlat
push
movsl
push
xchg
fs
xlat
stos
jo
sarl
and
fxch
xchg
sahf
push
lea
cltd
add
sbb
xor
push
mov
cmc
inc
mov
int3
fnstcw
mulb
popf
lret
mov
repnz
add
sub
jns
shlb
dec
out
cs
dec
cmp
cmc
sub
adc
adc
push
and
das
das
push
push
pop
ljmp
jl
das
das
lock
adc
add
mov
xor
sub
fcomps
and
repnz
lock
sub
loopne
fstl
inc
jno
pushf
in
mov
xchg
mov
sub
pop
sub
pop
scas
adc
mov
fprem1
roll
jno
xor
repnz
mov
les
ret
sbb
cld
pop
testl
sub
lahf
and
xchg
xchg
sbb
push
jmp
cmp
cli
cmp
xor
imul
lea
stc
lret
shrl
pop
call
xlat
sub
inc
and
jne
pushf
pop
cmp
stos
jne
or
in
jno
pop
aam
cmpsb
xchg
ja
fisubrs
jle
les
jmp
lds
into
xorb
ss
lea
test
loopne,pn
loopne
mov
repnz
imul
jb
das
push
jb
nop
mov
sbb
mov
cmp
decl
dec
cmp
and
xchg
mov
sub
mov
adc
inc
fimuls
popf
icebp
in
adc
sub
mov
xchg
outsl
jno
into
enter
mov
shl
int3
loopne
mov
jp
js
rorl
sbbl
mov
scas
in
dec
inc
xchg
ds
dec
lock
mov
lahf
mov
stos
or
xchg
std
adc
stos
mov
gs
imul
aam
fsubs
mov
repnz
fidivs
push
jp
fbstp
das
mov
movsl
xchg
xor
inc
inc
xor
test
das
dec
je
lods
imul
mov
jae
jnp
rcrb
mov
stos
stc
gs
and
fdivs
mov
in
outsb
dec
push
pop
rcll
out
cld
adc
lahf
sub
ja
in
xor
movsl
mov
mov
add
hlt
sbb
cmpsl
xor
adcl
loope
inc
sbbl
sbb
mov
sub
mov
test
and
dec
insb
rcl
push
stos
sbb
sbb
int
jmp
pop
enter
testl
xchg
mov
lea
mov
xchg
inc
shlb
or
add
dec
pop
mov
or
das
xchg
mov
mov
add
xor
jne
mov
test
mov
and
pop
pop
mov
pop
sti
out
xchg
in
fnstsw
sahf
pusha
arpl
in
pinsrw
lds
rorl
mov
xor
mov
or
lods
pop
xor
xor
mov
and
xchg
jae
lods
addb
cld
mov
icebp
js
loope
xor
xchg
cmpb
mov
mov
push
out
and
xor
add
test
filds
mov
and
in
cmp
jge
ljmp
loopne
in
rorl
filds
adc
test
xor
cmpsl
mov
repnz
popa
loope
inc
rol
jno
fisubl
xor
pop
pushf
sub
lods
add
adc
xor
jp
mov
ljmp
scas
mov
aam
cmp
pop
xor
jmp
mov
mov
daa
sbbl
packuswb
sub
fwait
pop
jae
adc
or
push
fisubrl
inc
and
cmc
insb
dec
loope
dec
dec
xor
xor
loope
clc
subb
lds
dec
jg
jae
cltd
test
jmp
mov
add
pushf
jne
nop
or
jae
lahf
jecxz
mov
or
push
xchg
cwtl
adc
push
push
push
mov
insb
push
xchg
push
push
sub
sbb
insb
jp
inc
push
subl
popf
push
in
fwait
sub
push
adc
nop
out
mov
xlat
insb
std
xchg
mov
jo
sbb
iret
adc
add
cmp
and
paddw
aas
xchg
mov
mov
xor
jl
inc
xlat
dec
andb
adc
lret
in
addr16
test
aam
mov
in
data16
ror
add
les
lret
and
inc
push
ds
lret
ret
insl
fldl
jns
pmuludq
lock
jl
in
pop
xor
lods
cmpl
sbb
gs
push
xchg
jno
cmp
mov
in
inc
xchg
inc
pop
fnstcw
mov
push
das
push
jb
insb
addr16
push
sub
cmp
jne
inc
inc
cmp
das
lret
xchg
cmpsb
dec
ja
nop
adc
pop
notb
sarl
adc
sub
mov
lods
push
fs
sahf
and
pop
and
rclb
sub
jge
jmp
sub
repz
imul
mov
rol
and
fsubs
or
inc
mov
xchg
incl
sarl
aam
loope
and
aad
jmp
and
out
inc
pop
in
jmp
xor
aaa
lods
or
ret
push
jp
aad
xor
cmp
lds
pop
mov
push
shlb
cmp
sbb
cmp
adc
mov
out
les
push
add
sbb
add
lret
ds
push
ret
or
sbb
loopne
pop
mov
push
sbb
roll
into
sbb
or
scas
ja
arpl
jge
adc
sub
mov
or
shrl
iret
test
nop
or
jae
jno
and
loopne
cmpsl
test
xor
loopne
jp
ret
addb
push
fidivl
jl
shll
push
jl
mov
dec
loope
test
daa
jno
cwtl
pop
sbb
or
insl
dec
pop
int
xchg
leave
cli
mov
dec
cli
or
mov
mov
adc
cmp
push
addl
fcompl
sahf
fcoms
add
cli
js
insl
stos
mov
cltd
cmp
mull
sub
push
popl
addr16
lret
dec
dec
push
sbb
dec
outsl
push
nop
in
ffreep
adc
sub
test
sub
inc
push
repz
iret
lcall
mov
sub
jne
std
and
mov
add
xchg
pop
and
xorb
adc
popa
sti
pop
xchg
int3
movsl
jbe
jnp
mov
mov
sbb
lock
jb
jge
cmp
sub
fistpll
mov
add
and
cmp
mov
xor
inc
ret
int3
imul
add
jbe
cmpsb
test
movl
hlt
repnz
fcomp
mov
cli
push
fsts
adc
ror
shll
or
sub
int3
jl
jbe
test
jae
pushf
sbb
pushf
sti
lea
xchg
lods
fldl
dec
mov
adc
mov
push
ret
mov
mov
jne
iret
jo
sub
arpl
or
inc
pop
add
pop
jg
sub
cmp
mov
sub
adc
scas
mov
mov
inc
sti
adc
mov
cmp
hlt
and
aas
add
ja
or
or
es
in
push
jge
addb
stc
push
lea
mov
shl
xor
shlb
in
push
lret
icebp
in
xor
mov
addr16
add
nop
test
ljmp
and
push
adc
mov
xchg
sub
mov
bound
add
outsl
popf
mov
jae
xchg
loop
pop
fildll
lret
xor
sbb
push
pop
jge
pushf
test
xchg
jp
or
push
push
or
out
js
data16
cld
xor
out
enter
xchg
in
jo
dec
xorl
addr16
ljmp
mov
insl
push
rcll
loopne
dec
mov
repz
xor
cli
sbb
lcall
rcll
fistl
jp
mov
lock
xor
adc
pusha
mov
test
cli
loopne
in
call
xchg
xor
jnp
data16
repz
xchg
inc
out
mov
or
pusha
sub
std
fmull
repnz
pop
xchg
pop
cmp
push
shlb
add
pusha
mov
pop
jg
mov
enter
inc
aaa
enter
sbb
aaa
std
lods
push
cmp
in
xchg
cmpsb
dec
inc
lret
add
insb
imul
mov
xchg
into
ret
add
cmp
push
or
pop
sub
adc
aam
mov
mov
sub
adc
lret
out
mov
es
movsb
rcrl
negb
fs
add
xchg
xorl
sub
test
das
lock
or
add
daa
dec
pop
pushw
xchg
aad
xchg
cmpsl
out
sahf
adc
push
mov
dec
xor
into
int
adc
nop
sbb
mov
mov
rclb
dec
xor
and
mov
mov
adc
add
inc
cwtl
inc
add
fistl
inc
dec
clc
add
pop
push
pop
dec
repz
mov
or
loope
outsl
aas
jl
pop
rcrb
stc
push
mov
jmp
fldl
push
sbb
imul
leave
jns
ret
stc
push
sub
add
lcall
or
and
clc
adc
and
push
ret
lret
xor
push
test
dec
dec
xor
pop
aad
into
pop
repz
mov
and
mov
dec
jmp
sub
rorl
cmpb
fiaddl
mov
lcall
jno
outsb
push
or
jge
jo
into
cmp
add
sahf
sbb
jl
hlt
push
out
fsub
sbb
sbb
cmc
jp
lahf
fwait
lds
mov
pop
jl
in
lret
fcmovbe
and
sub
push
sub
repz
sbb
cwtl
xchg
xchg
mov
jno
and
mov
push
push
mov
mov
ss
xlat
xor
sarl
scas
xor
add
ret
ret
mov
pop
xchg
cli
lcall
in
pop
and
xor
rorb
sub
push
andb
fstl
mov
push
push
ret
sti
repz
cmp
adc
ret
mov
stos
inc
stc
pop
sub
dec
cmc
and
lcall
ljmp
mov
sbb
arpl
mov
adc
mov
lret
test
pop
jae
pusha
push
imul
mov
pop
icebp
mov
ds
inc
dec
cmp
popa
dec
mov
fisubrl
xchg
dec
nop
mov
inc
xlat
push
mov
xor
arpl
enter
push
push
mov
mov
addr16
pop
insb
popf
in
inc
inc
push
jne
jne
sbb
cmp
sbb
cmp
pop
out
pop
lahf
data16
lcall
ss
and
lods
ret
add
or
iret
jge
ret
dec
faddl
inc
das
xchg
cmpsl
fsubrl
shrb
sub
sub
adc
ret
sbb
push
rorl
and
push
js
push
push
loop
imul
es
xorl
fildl
and
or
jns
xlat
and
push
lret
push
push
pusha
cs
sar
or
sbb
push
inc
sbb
addb
andl
out
adc
dec
xor
outsl
xchg
push
out
and
fs
pop
sub
push
stos
cmp
fcomps
or
in
push
xlat
loopne
lods
or
xorb
xchg
insb
cmp
clc
xchg
mov
mov
add
push
sub
insb
mov
ficoml
shlb
jle
pop
xchg
adc
xlat
mov
movsb
test
sbb
mov
pop
mov
roll
jecxz
cld
rorl
add
ret
imul
aaa
mov
movsb
mov
lahf
dec
repnz
dec
dec
out
test
jo
rclb
iret
fildl
and
sbb
ss
insb
ret
add
in
push
outsb
adc
mov
cwtl
imulb
xchg
sub
push
jmp
cmc
add
adc
jo
imul
pop
addl
push
push
and
xchg
cmp
stos
jmp
sbb
adc
adc
add
cmp
mov
and
loop
cmp
cmpsl
sub
cwtl
jecxz
bound
je
cli
cwtl
out
pop
inc
push
ss
lock
jae
mov
cmp
pop
sahf
notl
sbb
fcomps
imul
fwait
xor
jg
sarl
out
adc
mov
xchg
jae
ja
ret
dec
mov
inc
lcall
movsb
push
lock
and
cmpsl
xchg
jp
in
or
fwait
add
test
lods
iret
fsubl
cmp
dec
stos
mov
push
adc
adc
fs
dec
cmp
lahf
or
rcrb
push
jecxz,pn
pop
out
out
or
stos
shlb
jmp
or
enter
mov
lea
push
xchg
add
test
sti
pop
nop
mov
or
rcrb
stos
jge
iret
aas
in
orl
popa
mov
jne
les
add
xchg
pushf
mov
push
inc
in
iret
xor
or
mov
and
sahf
pop
inc
xor
outsb
mov
push
shlb
adc
cld
scas
pop
enter
lea
xchg
jnp
int
sbb
repz
sbb
mov
in
arpl
adc
dec
orl
imul
insl
pop
jl
jno
adc
sbb
xchg
aaa
xchg
je
push
inc
adc
test
lahf
scas
push
or
adc
jno
dec
lds
push
mov
xchg
cmp
je
inc
or
mov
leave
xchg
gs
push
sub
fnstenv
bound
pop
adc
push
push
or
in
mov
int3
call
add
jmp
gs
pop
inc
in
mov
mov
cmpsb
adcl
sarl
sbb
inc
cmp
jecxz
adc
out
or
pop
mov
mov
xchg
adc
pop
sbb
test
movsb
cmp
mov
aas
loop
int3
lods
imul
mov
fiadds
inc
jb
cmc
mov
xchg
cmpps
mov
je
cmp
mov
test
add
dec
bswap
sbb
sbb
cmp
jo
adc
mov
mov
add
sub
adc
mov
jg
rcr
divb
push
repz
inc
xchg
fs
push
and
loopne
imul
sbb
push
mov
mov
adc
ret
jge
lods
sahf
incl
es
push
jne
loopne
cmp
aam
stos
push
cli
in
mov
mov
in
adc
lret
rorb
dec
jb
sbb
pushw
imul
dec
arpl
jae
iret
xchg
pop
stos
loope
mov
jl
std
jmp
jecxz
adc
push
push
aad
mov
icebp
mov
clc
mov
sub
bnd
jg
shlb
fnsave
or
push
fbld
jnp
mov
adc
mov
xor
mov
pop
adc
dec
sbb
nop
les
and
sub
sub
and
add
xor
lods
clc
popa
pop
dec
int3
jbe
add
lods
xchg
imul
jmp
insb
pop
stc
push
add
lahf
mov
leave
lock
sbb
xchg
pop
lahf
je
sub
repz
jb
lods
mov
je
shll
sub
dec
pop
cwtl
fisubl
mov
push
movsl
repz
jo
add
int3
fwait
popa
scas
adc
pop
sbb
lret
sub
cltd
in
sub
subb
sbb
test
arpl
shll
lahf
pop
pop
mov
fstl
inc
sub
dec
sti
push
jbe
sub
scas
mov
lea
and
mov
inc
movsb
jns
adc
adc
jp
test
mov
repz
rcll
inc
movsl
das
xchg
pop
or
dec
insb
lock
dec
fs
cli
pop
cli
xor
xlat
in
aas
lret
push
pop
mov
movsb
popf
push
shlb
lret
mov
pop
aas
xchg
xchg
fadd
cmp
mov
shll
xchg
fwait
jno
scas
cs
jmp
adc
and
popl
popf
pop
dec
orb
and
outsl
gs
cmp
cmp
dec
mov
cmp
notb
cmp
fwait
stos
mov
mov
inc
fildll
add
divl
sbb
popa
pop
lretw
jno
sbb
je
sahf
xor
inc
scas
sti
lcall
inc
xlat
shll
test
inc
sbb
sub
push
sbb
sbb
mov
pop
jne
pop
int3
mov
pop
mov
std
cmp
lea
fxch
dec
cmpsb
jp
and
ja
cmp
sbb
test
or
or
roll
cli
cld
pop
arpl
orl
int
int
das
jg
xchg
rorl
adc
or
push
xor
out
lds
in
push
and
arpl
repnz
sub
adc
pop
inc
sbb
push
outsl
aas
mov
sub
movsb
ja
sub
push
xor
xor
stos
or
cmp
outsl
jl
loopne
in
aad
cmpsb
xchg
stc
or
gs
out
and
pop
mov
out
std
mov
push
das
mov
sub
dec
dec
push
loope
fcmovne
fld
repnz
adc
test
jp
sub
dec
in
pop
ss
cli
and
in
xor
loop
mov
or
dec
dec
adc
pop
aaa
sbb
out
enter
lret
pushl
lock
jno
aad
inc
daa
or
mov
inc
mov
pop
scas
push
repz
inc
sub
rcrb
jecxz
mov
or
in
incb
sub
push
xlat
lods
shrl
out
mov
ret
jb
xchg
sub
cmp
scas
dec
mov
sub
sub
outsb
xlat
call
cmc
stos
pop
sbb
out
jno
inc
mov
mov
rolb
cmpsb
push
popf
dec
fisttpl
pop
cmp
sbb
sub
scas
nop
sarb
ret
loopne
in
lret
loope
lahf
aad
push
mov
in
cmp
xchg
filds
jns
stos
push
mov
test
les
mov
xchg
pop
xchg
add
fsubs
and
push
das
std
jmp
add
or
rorl
sub
jecxz
jb
lret
test
mov
and
stos
sarl
sbb
jp
inc
not
fildl
jns
push
stos
popf
popf
imul
ljmp
stos
or
mov
loopne
rcl
out
js
leave
inc
sbb
jmp
addr16
pop
jp
repz
mov
inc
stos
lret
pop
mov
cmp
mov
xchg
or
fcmove
repnz
xchg
mov
and
jge
xor
jbe
pop
data16
mov
pop
add
es
jmp
sub
scas
ljmp
fiadds
xor
pop
cmpb
pop
push
addb
rcr
inc
xchg
pop
shrb
sbb
sbb
adc
mov
or
and
in
dec
aad
xchg
dec
jne
imul
sbb
push
or
sub
pop
sub
mov
fistpll
jg
arpl
jp
mov
stc
addr16
inc
pop
xchg
rorl
divl
push
mov
push
call
dec
sahf
xchg
jecxz
dec
nop
movsl
dec
dec
leave
fcmovnu
jge
push
repnz
jg
aad
inc
dec
dec
iret
jno
dec
pop
scas
in
fidivs
call
scas
sbb
mov
popa
pop
in
push
mov
fsubrs
es
shlb
pop
mov
cmp
or
sti
cmp
cmp
fldenv
push
or
xchg
push
jnp
cli
dec
ss
xlat
xor
sub
sar
movsb
data16
lods
aas
nop
jmp
sbb
xchg
pop
stc
inc
jb
cwtd
outsl
mov
sahf
popf
out
mov
sbb
mov
ja
loopne
pop
pushf
mov
fs
jne
jne
add
and
aas
push
icebp
sub
cwtl
jne
loope
xchg
push
ljmp
ret
xlat
repz
addr16
das
sti
xor
pop
cmpsb
sub
pop
iret
mov
mov
inc
cmp
adc
cmp
xchg
xor
push
and
inc
xchg
pushl
dec
int3
loop
push
movsl
sub
filds
faddl
sub
or
mov
scas
dec
sub
xchg
movsl
pop
shll
insb
loopne
pop
push
inc
or
mov
and
test
sbb
out
ss
cmc
js
enter
jae
cmp
sbb
or
jbe
inc
out
xchg
cmp
adc
pop
pop
fsub
and
jecxz
push
mov
sub
jbe
dec
or
fcomi
adc
test
xor
jns
and
negl
inc
push
in
xorl
add
fists
out
mov
outsb
mov
fmul
pusha
mov
rdmsr
mov
jb
or
loope
out
scas
pop
cld
movsw
imul
inc
mov
inc
lock
xor
push
dec
adc
shl
mov
ffree
out
push
loopne
sub
mov
pop
cmpl
push
in
mov
mov
gs
ret
and
or
jnp
sbb
sahf
fisttps
ss
cmpl
adc
push
push
adc
test
and
es
sub
cwtl
mov
cmp
dec
dec
or
dec
fnstsw
jl
dec
mov
dec
out
mov
inc
scas
push
mov
sti
in
sub
adcb
je
push
pop
out
jno
dec
sti
cmp
lahf
jmp
les
sbb
mov
outsl
lret
lcall
mov
dec
adc
mov
dec
xor
mov
ret
das
adc
into
scas
outsb
and
mov
mov
push
sahf
pop
mov
iret
xchg
mov
not
cld
fmul
arpl
xor
add
sub
cmpl
insl
push
fcoml
push
xor
test
ljmp
jmp
fnstsw
and
mov
dec
pop
jnp
adc
test
setb
sahf
adc
aas
jbe
les
mov
aaa
sub
adc
push
jns
push
push
push
ds
lahf
and
stos
int
cmp
xor
daa
jmp
mov
iret
and
les
mov
xchg
les
xchg
cwtl
push
cmp
arpl
jl
notb
and
rcr
cmc
jno
mov
stc
incb
movsl
sub
imul
adc
shll
add
sbbl
shll
mov
pshufw
jae
push
push
iret
xchg
ja
mov
push
int
rolb
jl
mov
popf
lcall
ds
imul
jecxz
imull
cmp
push
sub
fbstp
cwtl
jnp
stos
sub
push
in
push
in
mov
ficomps
ss
pushf
jne
cmpsb
testb
repz
xchg
dec
push
outsl
sbbl
roll
mov
and
clc
push
not
xchg
inc
cmp
push
aas
and
xchg
inc
pop
push
xchg
add
pusha
ja,pn
sahf
stos
sti
lds
jp
mov
lcall
fistl
inc
repnz
add
imul
lret
push
xorl
pusha
or
sbb
push
sub
mov
adc
adc
sbb
mov
fbld
push
jp
in
hlt
jge
mov
cmpl
cli
fcomip
sub
or
in
push
lcall
mov
or
sbb
sbbl
movsl
ja
jp
xchg
aas
mov
popa
pop
int3
fisubrs
lahf
push
cltd
in
sub
push
scas
pop
pop
rclb
ret
jecxz
popa
cld
mov
xlat
push
mov
leave
sti
xchg
jp
mov
push
xor
lods
sub
and
mov
sbb
push
insl
stos
daa
lahf
mov
lock
ljmp
inc
rolb
pop
cmpsb
pop
add
jmp
jge
mov
cld
push
sbb
ret
je
ret
int3
or
sbb
iret
xor
dec
fdivrl
mov
sbb
inc
cmpsl
mov
adc
xor
dec
xlat
int
push
mov
orl
je
jg
call
mov
pop
mov
or
jp
push
or
sbb
sub
push
dec
adc
or
fnstsw
iret
dec
leave
cmp
push
call
leave
adc
stos
jnp
hlt
sbb
mov
inc
mov
in
mov
addr16
xchg
mov
cmp
pop
push
rolb
adc
mov
jnp
daa
xchg
pop
fnsave
movsl
pop
jge
shll
add
mov
or
stos
pop
repz
ja
mov
xor
xor
rcr
in
adc
xor
movsl
pushf
test
aaa
mov
mull
shrb
pop
fwait
int
testl
xchg
daa
xchg
inc
or
push
sbb
adc
es
popa
or
and
bound
mov
jge
call
stc
push
jp
mov
leave
or
and
movnti
or
cltd
jg
fs
jle
mov
mov
lods
push
lcall
dec
pop
mov
add
and
lods
scas
ljmp
inc
sub
and
and
or
shlb
es
hlt
jnp
inc
jecxz
cmp
jne
pop
stos
sub
sub
repz
leave
inc
into
mov
push
jne
insl
int3
orb
pop
sub
pop
inc
inc
aas
adc
into
movsb
mov
adc
inc
imul
cmp
add
lahf
or
cmc
or
add
inc
jbe
jl
stc
sbb
outsb
push
fcmovne
in
fistl
ss
xor
jg
or
mov
stos
xchg
or
lock
lret
lds
pop
cltd
sbb
pusha
orb
jbe
jb
in
out
mov
lahf
xor
cmp
and
push
add
sbb
jo
notl
xor
into
inc
popa
and
sbb
sub
xchg
dec
mov
push
mov
mov
add
pusha
pop
adc
and
insl
enter
and
out
cmp
sti
in
lds
ret
notb
mov
pop
mov
repnz
xlat
cmp
popl
and
adcb
adc
sar
fcmovnu
sub
into
cltd
pop
loopne
lcall
xchg
mov
adc
mov
andb
add
mov
jae
ficoml
lcall
mov
cltd
cwtl
cmp
and
bound
pop
adc
outsl
test
push
cmpsl
lahf
pusha
pop
notb
push
nop
stos
outsb
inc
inc
cs
aad
xor
mov
shrb
jmp
fidivl
sbbl
xchg
rorl
inc
pop
jb
and
mov
or
and
insb
lahf
push
ret
add
stos
call
push
lods
je
fidivs
stos
loop
sbb
loop
mov
inc
cmp
mov
and
lahf
int3
dec
test
push
mov
sahf
lahf
in
cmpsb
jne
sub
in
roll
push
popf
loop
popa
cltd
out
cmpb
fsubr
pusha
fs
sbb
std
leave
sbb
jae
adc
sub
out
and
fcmove
mov
test
mov
fwait
push
stos
mov
stc
test
iret
and
mov
mov
movsb
pushf
clc
push
mov
out
daa
or
nop
mov
out
adc
aas
daa
idivb
adc
mov
adc
cmpsb
out
mov
push
pop
inc
mov
lcall
adc
push
mov
icebp
aam
jecxz
les
pop
jb
jmp
dec
clc
adc
popa
push
push
inc
cmpsb
adc
add
int
leave
push
mov
pop
inc
mov
out
cmp
lods
mov
jno
es
inc
shrb
adc
sarl
fidivs
adc
and
lods
push
fs
mov
shl
js
and
cs
div
mov
or
jg
es
cmp
jg
xchg
test
or
mov
inc
lea
pop
fwait
push
jg
dec
in
mov
in
jns
mov
pusha
pop
jb
jne
jl
mov
jge
or
inc
mov
adc
or
cmp
lods
mov
in
push
mov
push
rcl
or
pushf
jb
fisubrs
inc
loop
xor
ret
push
loop
push
push
push
into
inc
pop
push
mov
mov
sti
and
int3
dec
pop
repz
shl
cmc
addr16
fnstsw
cmp
push
lods
sbb
xor
shll
pusha
gs
cmp
repz
ds
rorb
pop
mov
dec
daa
lcall
mov
dec
adc
dec
adc
shr
or
xchg
movsb
movsb
jbe
mov
cwtl
inc
inc
mov
jb
int3
subl
mov
cld
jg
fs
inc
fcom
in
pop
test
cli
bound
inc
lcall
pushf
fcomps
sbb
xorl
push
and
inc
arpl
fs
add
mov
mov
pop
push
mov
push
ret
cltd
addb
mov
divb
outsl
out
outsl
cmpsb
inc
xchg
xchg
in
jno
inc
push
leave
lock
xchg
pop
js
push
in
data16
rolb
jg
pop
and
pushf
jbe
pusha
ljmp
aas
jnp
adc
and
out
fsubp
push
inc
jmp
shlb
dec
stos
imul
aaa
repz
lods
out
xor
lahf
rcrl
xchg
into
mov
rcr
loopne
mov
xor
jp
mov
pop
cmp
imul
addr16
out
xchg
add
cmpl
movb
xlat
sbb
out
faddl
stos
cmpsb
push
jns
aad
stc
inc
repz
pop
lea
pop
fildl
and
mov
xor
insb
adc
jne
imul
pop
cmpsl
cli
xor
jb
stos
cmp
repz
add
adc
and
in
mov
std
cmp
xor
add
ja
cli
mov
sub
arpl
mov
stc
xchg
cmp
fs
push
push
inc
lret
push
push
sti
sbb
aaa
cmp
arpl
push
jle
pop
rorl
ljmp
fwait
jbe
add
fs
rclb
lock
ret
mov
push
pop
push
test
adc
cwtl
cmp
xor
cltd
movsb
rol
jg
addr16
xor
pop
into
sahf
cs
sub
int3
hlt
sub
sarl
dec
adc
and
jp
mov
test
aad
popf
inc
pop
xchg
mov
adc
jmp
jecxz
pop
push
pop
dec
push
fiadds
cmpsl
pop
adc
xchg
loopne
push
inc
xchg
mov
je
sub
cmp
inc
mov
repnz
into
push
mov
cld
clc
ljmp
mov
cmp
jp
xor
adc
adc
and
mov
xor
cltd
mov
or
movsb
stos
gs
mov
into
and
mov
xor
in
ja
loopne
push
sub
mov
adc
mov
into
or
sub
addl
dec
rcrl
pop
in
nop
inc
dec
int
adc
jno
push
mov
mov
fnstenv
or
cmp
adc
sbb
inc
or
jg
insb
cmc
pop
dec
dec
shr
push
test
push
repz
mov
filds
xchg
xchg
mov
inc
fs
psubq
pushf
sub
mov
pop
or
enter
scas
addl
faddl
mov
push
ss
push
lods
aad
sbb
jae
and
aaa
fcmovbe
neg
movsb
mov
rol
mov
data16
push
and
sub
add
and
lods
dec
pop
imul
cmpsl
shll
pop
fldenv
addr16
xchg
cld
adc
out
stc
adc
adc
movsb
xchg
movsb
xchg
pop
insb
cltd
mov
out
sub
scas
pusha
outsl
jp
add
pop
mov
inc
icebp
xor
xor
dec
scas
leave
push
mov
sub
pop
das
aaa
ds
push
mov
inc
shr
push
push
notb
xchg
in
lret
push
ss
pop
lahf
lods
pop
inc
popf
incb
rorb
pop
mov
outsl
aaa
add
outsb
mov
add
daa
or
or
leave
mov
orb
push
pop
out
test
arpl
sub
stc
es
out
jb
push
dec
sub
inc
add
out
imul
sti
jg
repnz
rcrl
dec
lahf
test
jge
add
dec
cwtl
popf
out
add
ss
out
ja
inc
adc
rclb
fstps
lret
bound
loope
jge
add
sub
or
xor
push
movsb
sub
dec
test
xchg
rorb
sbbl
jmp
call
je
test
push
or
arpl
fsubrl
adc
out
push
inc
and
scas
daa
je
jecxz
mov
pop
add
dec
loop
out
insb
js
scas
orl
mov
in
jno
push
sahf
testb
mov
mov
push
jmp
stc
lods
loop,pt
int3
sub
popf
jno
outsb
and
aaa
mov
adc
fwait
out
test
sub
int3
les
jbe
mov
and
stc
jmp
rcrb
pop
sbb
ds
push
test
push
add
shr
scas
push
not
add
mov
sub
xchg
aas
ljmp
mov
mov
cs
sub
fcoml
movsl
lods
and
loope
mov
aas
ss
daa
mov
idiv
ja
adc
inc
dec
in
dec
xchg
pop
jo
out
xchg
xor
ja
mov
pop
jl
push
sbb
es
jo
inc
sub
pushl
int3
sti
outsb
mov
add
movsl
in
aam
add
cwtl
sub
in
mov
aam
stos
outsb
cs
xlat
popa
shll
mov
xchg
push
pop
hlt
dec
in
add
xchg
shll
aaa
jb
xchg
loop
mov
dec
daa
mov
daa
inc
lods
xor
lds
lret
lds
xlat
pop
ja
icebp
push
add
and
push
mov
adcl
out
loop
lods
xchg
xor
mov
incl
movsl
stc
lret
or
test
jp
add
mov
pop
call
xor
push
xlat
inc
inc
cmpsb
in
pop
mov
loope
add
jmp
out
cmp
xorb
adc
xchg
xor
pop
ja
ds
add
inc
cltd
pusha
aas
push
mov
cmp
sbbb
push
xor
xor
nop
hlt
pop
scas
jg
fnstcw
das
lret
loopne
pop
ss
mov
jmp
push
stos
adc
std
les
sbb
jl
mov
xchg
int
in
and
xor
sbb
movsb
pop
je
mov
pop
push
cmp
hlt
inc
sbb
das
xor
sbb
stos
aaa
dec
outsl
ss
icebp
sub
pop
imul
cwtl
cs
cmp
repz
or
nop
lock
mov
cmp
out
pop
dec
jp
test
in
js
aas
pop
dec
cmp
jmp
in
sub
mov
stc
lods
insb
dec
adc
hlt
scas
cmpl
jnp
imul
mov
arpl
sub
ret
sub
int
push
outsb
xor
in
pop
in
aam
xor
dec
pop
xorb
pushf
int3
or
std
shll
fwait
or
lahf
xchg
nop
aam
cmp
iret
push
fwait
int
call
mov
mov
dec
repnz
cld
push
cmc
cmp
mov
insb
add
sbb
scas
pushf
inc
pop
jle,pt
repz
inc
inc
inc
test
lods
add
mov
rol
sbb
fadds
or
lods
outsb
je
aaa
and
xchg
mov
sbb
mov
stc
clc
cmp
mov
pop
sbb
ja
jg
and
sub
lea
mov
xlat
dec
arpl
popl
mov
xor
testb
xchg
sub
xlat
fnsave
sub
pop
subl
jge
sti
or
inc
mov
lea
outsb
add
cld
lds
push
pop
jg
test
cmp
movsl
push
into
and
arpl
sub
sti
dec
sbb
push
or
add
data16
das
add
out
dec
jae
cmp
and
cmp
and
xor
insl
push
repz
lock
and
dec
data16
or
sbb
sub
fsubp
out
pusha
insl
mov
jmp
in
clc
or
adcl
add
push
push
cld
orb
dec
adc
sti
fcomps
lds
in
cmpsb
sbb
shl
lea
scas
xlat
repz
lahf
mov
in
lret
lcall
and
movsb
add
lock
pusha
jbe
mov
roll
lds
sub
cmp
mov
mov
test
ds
sti
sahf
sub
int3
iret
stc
outsl
fsubrl
rorl
xor
add
notl
lret
into
dec
fbld
sbb
jmp
jecxz
xchg
jno
mov
das
mov
shl
fs
mov
mov
aas
jp
sti
lret
mov
mov
hlt
je
subb
xchg
sub
hlt
pusha
lret
ret
cld
jmp
fs
scas
jo
fldt
xor
mov
aas
ret
adcb
inc
fcoms
pop
jbe
test
pxor
mov
lock
int
push
pop
scas
pop
xor
cltd
leave
pop
imul
jbe
out
testb
jmp
dec
test
push
pushf
scas
jmp
dec
inc
fmul
and
fs
gs
inc
imul
leave
jmp
pop
lods
mov
xchg
mov
push
adc
jbe
movsb
mov
mov
xorb
xlat
xor
lods
mov
jmp
ss
movsb
scas
adc
cmp
inc
dec
outsl
xchg
add
insb
mov
and
pop
insb
mov
add
add
xchg
rorb
lock
jg
xor
lahf
cmp
mov
shlb
or
loope
scas
jecxz
or
adc
xchg
rcll
bound
cmp
pop
lea
cwtl
pop
lds
fsubl
test
or
dec
inc
inc
rcll
in
pop
cmp
fdiv
sub
xlat
pusha
inc
cli
in
hlt
sbb
aad
insl
mov
mov
call
icebp
pop
leave
and
outsb
out
mov
mov
test
aaa
dec
test
and
flds
xchg
jle
mov
lret
mov
pop
push
add
xor
cmp
add
mov
sbb
mov
or
out
lds
mov
sbb
cs
push
lods
and
scas
or
xchg
jp
aas
inc
popa
inc
sub
pop
movsb
mov
hlt
push
sub
cs
fbstp
jb
xor
in
mov
aad
push
sti
xor
mov
outsb
inc
std
push
add
pusha
cs
mov
inc
insl
fildll
sti
sahf
into
or
fcomp
int3
jb
mov
enter
mov
sbb
daa
sbb
mov
cltd
cld
mov
test
mov
or
insb
xchg
scas
dec
lcall
jo
xchg
adc
into
and
iret
adcl
dec
cmp
sbb
dec
test
subl
xor
out
jo
dec
test
test
clc
add
xchg
jbe
adc
push
pop
cli
lods
scas
dec
stos
lahf
xor
daa
fsubrl
cs
jnp
mov
mov
pop
in
add
xor
inc
pusha
iret
inc
cmpsl
adc
subl
arpl
fisubl
mov
sti
nop
sub
pop
dec
outsl
adc
xlat
in
cmp
inc
mov
push
add
jle
shrl
subl
xorb
cmpsb
mov
les
xchg
repz
lahf
in
inc
pop
cmp
push
dec
hlt
cmp
lea
pop
and
pop
mov
adc
sub
sbb
sub
mov
pop
push
cmpsl
lea
cs
push
adc
mov
mov
and
pop
mov
rcr
adc
mov
pop
aaa
push
in
loope
mov
mov
mov
adc
subl
in
mov
ret
mov
mov
cld
fnstenv
out
dec
dec
add
mov
enter
add
or
es
outsl
loop
jne
push
dec
or
adcb
mov
adcl
push
insl
test
cmp
loopne
sarl
xchg
mov
dec
rol
mov
lcall
iret
cli
sbb
clc
sti
mov
iret
movsb
pop
add
mov
add
xchg
dec
cmp
jmp
push
jmp
fisubs
cmp
cld
lea
jae
and
mov
and
call
daa
data16
out
jge
xchg
dec
aad
iret
cmp
push
in
lcall
cmp
sub
push
stos
and
cmp
mov
lock
xchg
adc
shl
jmp
sub
adc
or
int
aaa
add
mov
push
dec
and
loope
aam
test
mov
sbb
and
cld
push
push
adc
insl
cmc
ffreep
in
fiadds
jge
jno
add
addr16
addr16
jp
ds
push
xor
push
test
iret
js
fisubl
shrl
sahf
bound
shr
adc
into
movsl
shl
mov
in
push
imul
jge
into
xor
cmpsl
xchg
addb
movsb
clc
in
jle
mov
fbld
movl
outsb
mov
jns
sti
sub
icebp
or
outsb
popf
xchg
ds
add
push
dec
aaa
push
sub
std
xor
cwtl
push
xor
pop
roll
idiv
push
icebp
or
out
mov
and
mov
adcb
xor
je
aam
xchg
repnz
dec
xchg
mov
ret
inc
fistpl
lret
cmpsl
or
adc
dec
mov
add
inc
lcall
jecxz
hlt
mov
sub
push
iret
adc
imul
cld
ret
dec
les
cmp
xchg
lds
adc
mov
mov
les
lcall
iret
jecxz
out
es
pop
cmp
xor
push
into
sub
mov
adc
addr16
jmp
in
push
mov
or
mov
les
in
xchg
mov
into
or
push
jb
pop
xor
aas
scas
push
rorl
aad
iret
jo
adc
icebp
in
or
enter
lds
pop
enter
xor
push
push
std
mov
mov
rorl
fbld
lcall
sbb
mov
test
test
jns
rclb
dec
shr
pusha
push
sub
adcl
rclb
xor
xor
pop
pusha
test
mov
cmp
stos
rcll
fcom
popf
or
fistl
fs
xchg
stc
mov
xor
jnp
lret
cmp
push
outsb
nop
mov
aad
cltd
and
mov
jge
into
call
push
inc
ja
xor
dec
sub
cmpsl
mov
add
sub
inc
xlat
mov
gs
mov
push
xlat
fcomps
insl
push
call
adc
icebp
aaa
das
lock
mov
mov
xchg
mov
repnz
xchg
add
fmull
ret
adc
pop
das
out
jecxz
movsb
pusha
xchg
or
jmp
dec
jb
lds
sar
xchg
jne
cmovle
sub
push
aaa
out
mov
sbb
dec
icebp
pop
in
pop
sbb
pop
and
pop
cmp
and
lods
inc
xchg
dec
jge
repnz
push
or
aaa
imul
push
loope
xchg
nop
dec
ljmp
mov
jl
inc
hlt
cmp
dec
mov
and
add
xor
and
mov
push
inc
cmp
jne
in
dec
or
stc
cmp
pusha
inc
adc
jns
fnsave
inc
ds
or
xchg
jo
dec
mov
rcl
push
cmp
sub
lods
add
popf
push
or
enter
sbb
das
pop
jbe
cmpsl
lret
cmpsl
lcall
out
pusha
mov
add
push
pop
movsb
inc
add
ret
cmp
cmp
sub
dec
sbb
repz
lods
lahf
cmc
pop
ret
adc
repz
lods
sbbb
push
icebp
inc
sbb
mov
mov
pop
iret
into
push
inc
dec
sbb
inc
adc
push
stos
outsb
outsb
dec
adc
stos
scas
sbb
pop
in
ljmp
jle
or
into
out
xchg
mov
mov
dec
fs
jno
ljmp
cld
jnp
cmp
and
and
rclb
or
ljmp
pop
mov
adc
xor
loopne
call
dec
mov
xor
movsb
mov
inc
xor
push
cs
sub
adc
fisubrs
push
mov
sbb
sti
lret
cmp
rcrb
repnz
aad
clc
sti
stos
mov
mov
adc
test
aas
jns
push
jg
std
jecxz
cmp
xorb
mov
push
adc
push
or
in
pop
mov
mov
push
aaa
inc
sbbb
lods
repz
test
repz
push
hlt
lock
aaa
mov
das
mov
and
push
rclb
imul
push
inc
push
jno
test
pusha
adc
test
lods
inc
movsl
adc
push
and
les
xchg
insb
ss
notl
push
scas
mov
je
cmp
fisubrl
push
add
addl
loop
ss
sbb
xchg
jecxz
pop
aaa
jb
daa
mov
xchg
xchg
xchg
daa
aaa
jp
and
sbb
push
adc
dec
popf
xor
pop
fsubrl
lock
shll
jge
lret
sub
shlb
push
popa
fs
sbb
scas
nop
mov
in
pop
and
es
or
jge
push
dec
jg
lds
gs
gs
aas
ret
add
or
push
push
gs
cmpsl
aam
hlt
mov
mov
cmp
cmp
xchg
stos
mov
cmp
xchg
js
enter
imul
pop
cmp
xor
sub
data16
ret
lahf
xor
add
ficompl
sahf
push
popf
mov
sbb
repnz
div
mov
add
pop
jg
sub
scas
mov
jae
lods
cli
mov
cmp
sbb
popf
or
dec
push
and
nop
loop
sub
push
stc
aad
add
hlt
mov
xor
push
jl
inc
outsl
cmpsl
subl
add
push
push
lcall
inc
idivl
movsb
jnp
pop
mov
mov
fwait
sbbl
imul
push
insb
or
inc
sbb
and
aas
mov
lahf
xchg
ret
jae
lret
inc
mov
mov
pop
xor
jb
sbb
test
in
call
bound
insl
and
add
pop
dec
popa
xor
ret
fnstsw
in
xchg
sub
repz
imul
fwait
std
subl
adc
fimuls
in
dec
insl
test
cmc
adc
in
sub
and
shlb
jns
test
add
stc
mov
push
mov
pop
aaa
inc
test
jmp
pop
xor
sub
xor
lcall
sahf
xor
push
pop
dec
loope
mov
mov
mov
je
sbb
or
adc
fs
cmp
or
and
adc
mov
adc
movsb
push
stc
cltd
ss
xchg
sahf
push
repz
push
adc
mov
sbb
cmc
dec
and
adc
std
ja
hlt
xchg
mov
cli
dec
movsb
jle
mov
rorb
scas
push
rorb
push
xor
daa
dec
sbbb
call
xor
or
xor
pop
clc
sub
shr
pop
push
fcmove
mov
fsubrs
xchg
dec
xor
ja
fisttpll
lea
sbb
pop
ret
inc
push
cmp
jae
mov
push
aam
inc
lods
std
mov
stos
mov
adc
cmc
stc
or
jecxz
pop
lods
imul
add
in
das
cmpsb
lret
lds
jg
dec
push
lahf
aas
or
push
dec
jmp
ret
hlt
or
into
mov
mov
jg
push
xor
xchg
push
call
mov
cmpsb
ja
fisubrs
push
inc
lcall
mov
outsl
mov
mov
xor
jb
xlat
pop
insb
sbb
adc
mov
cmp
dec
or
push
xchg
lock
add
pushf
sub
fdivrs
adcl
push
dec
sub
mov
pop
adc
cmpsb
sub
sti
int3
mov
icebp
sbb
jb
aaa
jl
pop
jl
add
out
xchg
and
test
stc
push
rcl
repnz
xchg
lods
call
outsb
mov
aas
iret
aad
sub
xchg
adc
stos
xor
subl
fisubl
cltd
xchg
adc
pop
ret
or
push
les
andl
mov
mov
or
mov
gs
stc
adc
fadds
or
xor
rclb
push
push
mov
pop
clc
jae
daa
cwtl
clc
pop
sub
loopne
cmp
or
or
stos
mov
or
mov
sbb
inc
cmpsl
mov
enter
add
pushf
in
mov
mov
ljmp
popf
and
outsl
dec
in
mov
lock
push
in
mov
sarl
mov
stos
and
js
and
cmpsl
inc
into
push
pop
fdivs
imul
notb
xor
push
dec
mov
jmp
sbb
and
inc
or
cmp
or
out
popf
jp
xchg
test
cmp
cmp
sahf
and
jecxz
test
icebp
lods
sti
fiaddl
pop
and
xchg
push
aaa
lods
and
loop
mov
das
repz
ret
pop
fwait
lock
xchg
iret
nop
jnp
cmc
xchg
sbb
arpl
pop
push
leave
mov
or
sbb
and
cmp
in
push
cmc
divl
sbb
repz
in
pop
or
mov
dec
pop
lods
xchg
jge
test
ret
jae
dec
test
inc
cmp
xchg
pop
scas
push
data16
orl
adc
inc
hlt
xchg
push
test
mov
cli
pop
jecxz
xchg
cmc
mov
subl
dec
mov
cmpsb
add
inc
fstps
push
mov
mov
outsb
ds
int3
aam
das
cld
es
lds
test
push
adc
jno
popa
dec
sub
adc
sub
add
std
add
aam
lret
inc
pop
jnp
cmc
leave
add
es
scas
sub
js
test
fisttps
popf
xchg
xchg
and
cmp
sub
lds
pop
gs
ret
aaa
mov
lret
and
repnz
dec
les
jno
outsl
aas
insb
cmpsl
push
ret
or
cmp
inc
test
sub
pop
adc
mov
jl
adc
jno
mov
push
repz
in
pop
cld
shll
inc
sub
lcall
xchg
pop
loope
add
mov
mov
ucomiss
fildll
loop
dec
inc
push
jle
dec
adc
mov
mov
and
sub
addr16
mov
jle,pn
popa
inc
cld
cli
dec
out
xlat
cmpl
aad
cmp
cwtl
and
xor
inc
mov
fdivl
negb
pop
jbe
call
insl
shlb
std
jl
mov
add
inc
sub
sub
jmp
out
shll
cmp
insb
out
mov
xchg
push
push
mov
pop
popa
mov
xor
aad
ljmp
bound
jecxz
xlat
jno
sub
mov
adc
pop
pop
mov
xchg
in
fcmovu
adc
dec
xor
sahf
xor
test
mov
sub
fucomip
scas
adc
adc
push
xchg
sub
sbb
or
xor
fmulp
or
nop
leave
pop
pshufw
jo
push
in
daa
rorl
pushf
clc
rorl
lock
inc
mov
jmp
std
cwtl
clc
jbe
gs
xor
mov
push
sarb
sub
es
push
ret
push
test
push
and
imul
scas
mov
sbb
xchg
xchg
mov
ret
pop
pusha
insb
pusha
adc
std
or
fsubr
imul
mov
js
sub
ret
inc
in
sbb
stos
xchg
push
arpl
jecxz
testb
cli
adc
mov
mov
or
jmp
adc
test
std
repnz
sub
jg
xchg
and
sub
xchg
mov
mov
pop
ret
loopne
in
sar
sbb
clc
cmp
mov
jp
jmp
das
push
js
mov
mov
lcall
mov
pop
jno
mov
stos
shrb
sub
cmp
scas
out
pop
iret
stc
rorb
jo
and
cwtl
sahf
adc
mov
mov
lock
loope
cmp
dec
imul
scas
out
pusha
pop
or
cmp
scas
sahf
and
jno
jno
int3
es
dec
jecxz
int3
mov
pop
icebp
mov
imul
ret
or
pop
decb
repnz
lock
jns
jmp
dec
and
fsubrs
and
test
pusha
rcl
fstpl
es
movsb
scas
add
jge
mov
lods
sbb
mov
push
and
sbb
ljmp
jnp
push
mov
pop
lods
or
inc
sarl
or
sub
cmpl
enter
pop
add
adc
jge
insb
fiadds
cmpsb
push
shl
xchg
mov
lret
inc
fnstcw
jp
dec
lcall
mov
clc
mov
movsl
sub
mov
pop
cmp
ss
mov
adc
push
lods
xchg
xor
imul
in
psubq
add
or
rolb
clc
add
out
outsl
sub
mul
test
adc
add
add
mov
fs
xchg
jmp
pop
mov
test
out
adc
cmp
mov
pop
ret
jecxz
cld
jbe
mov
dec
cltd
jno
lahf
imul
mov
mov
xchg
xchg
xor
das
or
addb
stos
aaa
jg
xchg
mov
je
push
rolb
fstl
popf
xor
sub
sub
push
mov
or
pop
inc
andb
adc
xchg
data16
xor
xchg
sti
ror
cmp
mov
js
cmp
sub
aad
jmp
mov
push
sub
sbb
js
call
push
jns
lret
fidivs
test
mov
dec
cmc
inc
decl
inc
sub
fwait
pop
and
jmp
cmp
adc
lret
push
mov
arpl
lret
dec
nop
ret
icebp
mov
fsubrl
add
mov
scas
sub
xor
inc
lcall
std
adc
inc
loopne
aad
faddl
push
push
cld
push
pop
ja
push
adc
mov
out
mov
jae
pop
dec
cs
mov
jge
mov
sbb
add
push
ss
inc
push
pop
pop
enter
lcall
fst
or
outsb
insb
nop
lret
leave
inc
sub
sbb
fists
inc
es
std
pop
mov
popf
pop
std
xor
sub
out
sub
mov
fdivrl
lods
jp
sahf
cmp
repz
movsb
fwait
mov
or
insb
mov
data16
mov
bound
sub
pop
ja
xlat
dec
and
out
and
sbb
xchg
adc
fs
or
icebp
ficoml
push
shrw
jno
rcr
sub
adc
jae
mov
mov
pop
cmp
fadd
sbb
add
and
imul
icebp
mov
jae
sub
ja
ss
jne
mov
pop
add
push
ss
fsts
iret
mov
enter
pop
add
pop
mov
push
mov
jg
shll
movsb
out
cli
cltd
dec
jo
adc
xor
add
pop
shrb
sbb
mov
jne
nop
jmp
jo
xchg
mov
xor
cmp
imul
mov
adc
ja
leave
insl
pop
jp
push
xchg
ja
ljmp
push
xor
or
cmp
fcom
dec
jae
xor
sbb
or
je
cmp
mov
mov
sbb
ds
fdivs
sbb
stos
repz
icebp
enter
xchg
push
push
inc
mov
push
outsb
fsub
adc
das
mov
mov
sub
jns
mov
out
lods
fmull
aas
inc
data16
test
dec
ds
call
xlat
jnp
loopne
jmp
arpl
xchg
push
pop
icebp
scas
dec
jae
mov
test
cli
das
lret
push
adc
dec
mov
and
rolb
xchg
mov
imul
push
push
divl
pop
test
jno
in
rol
or
sub
cmp
push
repz
or
addr16
or
lahf
jg
cltd
mov
dec
fstpl
mov
ljmp
sub
enter
dec
imul
sub
dec
lahf
cltd
daa
cmpsl
repz
lahf
lods
jae
and
xchg
dec
xchg
sbb
sbb
repz
push
or
add
ror
insb
sub
ds
dec
mov
sbb
stc
and
out
in
or
ss
mov
fmul
lret
fisubrs
lock
fstl
subb
add
fnstcw
rcll
jle
repz
mov
mov
adc
mov
dec
xor
mov
mov
ret
jge
fildll
inc
or
bound
lret
xchg
adc
aam
jae
add
fucomip
out
pusha
cwtl
xchg
push
roll
mov
insb
lods
cmpsl
or
sbb
mov
adc
lahf
jg
pop
cs
push
insl
inc
sub
data16
repnz
dec
stos
push
fs
jns
fdivrp
xor
push
sbb
mov
xchg
aas
sub
mov
mov
xor
cmc
and
fs
sbb
dec
and
and
adc
pushf
mov
inc
dec
pop
xor
jl
jge
add
cmp
jno
icebp
xchg
push
pop
inc
mov
nop
pop
in
cs
icebp
adc
xchg
push
sahf
or
mov
test
push
outsb
vandpd
push
popf
js
xor
es
orb
adc
mov
loope
or
jnp
scas
push
push
pop
mov
cmp
cld
ja
push
imul
mov
ljmp
xchg
lods
push
jmp
pusha
in
negb
and
iret
ret
and
addr16
and
test
pop
cmpsl
or
sub
aam
xchg
je
enter
out
mov
push
pop
sub
imull
mov
add
sbbb
xchg
rcrb
aam
and
sub
jae
mov
cmpsl
mov
ret
and
or
cmp
out
sbb
mov
lea
or
lcall
fwait
xchg
adc
mov
dec
sub
fidivrl
push
or
push
ret
dec
in
mull
clc
out
mov
xchg
int3
cmpsb
test
mov
gs
or
sbb
hlt
cs
imul
mov
jle
lahf
repnz
movsb
scas
cltd
mov
cmp
sbb
sub
sti
jne
push
or
mov
daa
fistps
stos
js
rcrl
out
jns
loope
sbb
push
mov
testb
and
jg
mov
stc
mov
out
aas
add
les
sbb
jmp
pop
fmul
xchg
arpl
lea
cwtl
push
imul
adc
fucomip
test
jp
ficompl
xchg
mov
scas
push
mov
dec
sbb
mov
or
jno
adc
jae
xchg
call
add
mov
insl
es
fs
in
cmpsl
push
xor
lret
mov
push
and
cltd
incb
adc
lret
sbb
pop
mov
cmp
movsl
pusha
cs
testb
fcmovne
popf
fisttpl
add
pop
cld
mov
mov
out
sub
lahf
es
lea
mov
loopne
mov
dec
push
ret
and
mov
cmp
cmp
loopne
jae
cmp
or
sub
inc
cmp
jno
or
call
mov
and
fiadds
mov
outsb
dec
mov
pop
and
mov
or
mov
enter
add
jmp
out
ror
cmp
mov
repz
inc
aaa
mov
cli
outsl
jnp
jl
jge
pushf
nop
mov
mov
das
popf
sub
sub
call
popf
in
push
push
aam
pop
sbb
adc
push
jp
fnsave
pop
sbb
pop
mov
or
adc
cmp
icebp
insl
sbb
pushl
loopne
cmp
mov
push
fsubs
mov
in
je
mov
and
sub
fwait
push
mov
test
push
jle
mov
bound
xor
pop
leave
pop
outsb
fldl
push
add
xlat
or
in
call
mov
out
pop
and
stc
cld
and
sub
jmp
or
or
sub
xchg
je
lods
mov
pop
and
andl
push
or
inc
lret
push
pop
leave
stos
ds
jbe
push
jle
imul
mov
mov
leave
stos
icebp
cmp
mov
popa
rorl
movl
mov
int3
adc
pushf
push
pop
inc
jae
call
int
pop
ja
cmp
push
mov
stos
jle
jle
add
stos
sub
movsb
pop
dec
add
add
fmull
sti
mov
sbb
xchg
rcl
es
inc
shr
push
es
inc
xor
jb
jne
cwtl
int3
cmp
ret
jp
xchg
push
or
and
cmpsb
mov
ljmp
popf
outsb
cmpsl
or
iret
xlat
jb
movsb
and
mov
push
sbb
and
cmp
and
aas
pop
orl
mov
fldt
cli
adc
mov
das
lahf
in
sub
lods
pop
jecxz
and
ficomps
and
mov
mov
pop
adc
in
pop
mov
popl
adc
or
mov
ret
jg
or
mov
enter
imul
sahf
int
in
push
shrl
push
sub
les
sub
pop
adc
aad
mov
stos
les
lds
outsl
dec
loopne
insb
xor
fldcw
das
shlb
pop
enter
fwait
xor
sbbl
push
push
xor
gs
jp
mov
lea
jo
movsb
dec
mov
dec
xchg
jmp
mov
jg
pop
cmp
out
gs
cmp
pop
inc
sbb
fidivrl
ja
insl
jbe
adc
sbbl
mov
enter
idivb
push
or
pop
enter
inc
sar
ret
xlat
inc
insb
mov
push
mov
cmpsb
stos
jmp
pushf
in
dec
jge
mov
shr
sbb
mov
add
gs
pop
loop
enter
add
movsb
shlb
cmc
ret
add
scas
in
enter
outsb
or
lock
or
mov
in
rcrl
mov
imul
dec
pusha
sbbl
cs
ss
mov
lahf
aaa
and
or
lods
jbe
jo
cld
pop
inc
scas
leave
jbe
xchg
pop
mov
leave
mov
fdivr
pushf
push
add
push
pushf
leave
push
jne
shl
insl
call
insb
pop
dec
int3
mov
test
fdivrl
lods
test
in
pop
ljmp
fnsave
cld
js
shl
jae
test
jp
loope
imul
or
adc
xchg
adc
ret
test
bound
ja
lea
pop
iret
xchg
or
ja
mov
push
mov
in
adc
fistps
imul
or
xor
mov
enter
jns
insb
nop
add
and
test
jge
xchg
and
in
mov
push
mov
testb
lret
call
aad
das
jp
nop
pop
adc
fisubrl
dec
dec
mov
sub
lahf
test
fs
cmc
dec
add
pusha
and
push
imull
imul
ret
mov
xor
xor
into
adc
or
test
ljmp
out
jno
adc
les
in
ret
mulb
in
jns
add
ljmp
pop
lcall
loope
xor
rcll
jmp
stos
pop
xor
fldt
dec
mov
out
xlat
push
mov
and
xchg
adc
inc
mov
xchg
inc
sbb
arpl
call
fisubs
mulb
push
lea
xor
pop
cmp
sbb
aas
out
mov
notb
inc
in
pop
or
mov
xor
dec
loop
pop
and
mov
aas
faddl
daa
sbb
inc
fisubl
dec
push
fdivrs
data16
or
mov
mov
push
add
imul
and
mov
and
lea
inc
lock
add
xor
mov
cwtl
scas
mov
mov
fisubs
into
int3
push
sbb
cmp
ret
mov
xchg
js
scas
add
fadd
or
roll
lods
dec
gs
and
lret
cwtl
xorl
mov
dec
loope
cmp
or
lret
and
lahf
jp
outsb
lds
divl
dec
mov
enter
sub
prefetchnta
push
sub
xor
fmuls
sub
scas
notb
pop
scas
inc
gs
mov
shll
or
mov
lret
mov
pop
xchg
test
xchg
mov
lcall
sbb
sbb
das
lea
lds
cmpsb
mov
leave
movsb
mov
into
cwtl
out
mov
je
fcomps
and
add
leave
adc
pop
and
pusha
imul
ret
rorb
ret
pop
jne
and
leave
scas
loop
adc
dec
xor
sub
in
in
daa
jecxz
jno
push
and
add
inc
fcmovnbe
popf
scas
push
xor
test
mov
pop
addr16
insb
and
imul
ljmp
cs
push
mov
out
pop
cmp
and
pop
xor
pop
adc
xchg
inc
xor
mov
lock
mov
pop
in
cmp
mov
mov
mov
data16
jle
int3
pusha
data16
xchg
mov
addr16
or
bound
mov
xor
shl
incb
push
mov
lea
cmp
dec
pop
push
adc
pop
pop
xor
mov
ret
nop
fsubrp
gs
out
cmp
adc
addr16
movsb
fcmovbe
lcall
lods
pop
loope
cmc
jg
nop
add
pop
into
ds
cmp
sbb
movsl
sub
lea
push
fcmovnu
pop
pop
dec
sub
scas
jle
xorb
pop
ljmp
dec
jecxz
or
sub
stos
mov
jbe
cs
jno
out
shr
int
pop
push
in
jno
pop
mov
aam
lods
and
push
lods
push
test
adc
ss
jle
in
or
push
push
xor
sub
cmp
push
xor
mov
daa
mov
cwtl
je
movsl
rolb
test
pop
fdivl
bound
fdiv
or
mov
adc
inc
loope
adcl
lea
dec
and
lock
xor
stos
mov
imul
mov
jo
cmc
or
mov
add
push
and
mov
adc
mov
loopne
icebp
psllw
and
fdiv
sbb
push
inc
cwtl
and
sbbl
ljmp
iret
mov
popa
add
pop
push
cmp
inc
xchg
hlt
inc
sarl
pop
push
xchg
mov
testb
dec
cli
xor
ja
sub
jp
or
cwtl
sub
inc
xchg
shrl
shr
pop
cmp
mov
js
jb
lea
pop
inc
pop
pusha
in
addr16
pop
push
jle
jle
subl
inc
sbb
fists
pushf
or
js
xchg
in
pop
lock
sbb
hlt
jge
lods
and
test
out
repz
mov
movl
ret
inc
pop
xchg
cmp
push
fsubrs
and
mov
push
mov
sub
iret
push
or
jmp
mov
jns
lds
mov
das
inc
fwait
push
and
push
es
icebp
nop
lcall
push
repz
mov
icebp
add
std
cmp
push
out
push
shr
dec
pop
or
mov
in
add
mov
jae
add
xlat
dec
fnstsw
sbb
push
lea
push
lret
ds
fsub
imul
hlt
mov
pop
cld
bound
xchg
pop
sbb
lret
add
jmp
sahf
mov
stos
pop
add
add
popa
or
jg
jl
lods
push
jb
sbb
sbb
pop
add
mov
hlt
jno
mov
leave
gs
adc
ds
inc
fs
jle
adc
pusha
pop
es
out
in
pop
mov
or
mov
in
les
jae
cmc
jl
scas
cld
scas
mov
and
jle
jne
lcall
sub
push
aam
dec
shrl
pop
push
in
jb
cmp
test
out
repz
mov
cmp
pop
xchg
cwtl
insl
jecxz
sub
xor
push
pop
mov
push
xor
cwtl
ficoml
push
out
std
add
out
call
add
add
mov
or
xchg
jle
and
cs
pushf
lcall
push
in
hlt
pop
and
jecxz
xor
es
push
mov
and
gs
sbb
fisubrl
push
into
clc
xor
lcall
and
insl
pop
lahf
sub
cmp
mulb
mov
jge
stos
xorl
loop,pn
jbe
outsl
pop
cs
jo
mulb
sbb
pop
sub
aad
cmpl
stc
stc
hlt
pushf
lret
repnz
inc
imul
mov
repz
call
mov
ljmp
mov
fs
mov
cmp
scas
dec
mov
adc
mov
sti
and
das
rorl
pop
pop
sub
add
push
subb
pop
stos
jnp
mov
lcall
push
ds
push
cmp
cmp
sbb
pushf
mov
lret
xchg
and
or
call
into
ljmp
mov
cmp
cmp
out
repz
cmp
js
rcll
jo
jmp
sbb
daa
mov
daa
sub
lods
xor
rcrl
pop
lds
ss
xor
data16
dec
mov
jb
xchg
movsl
je
mov
insb
sub
addr16
cmpsb
push
pop
add
sti
pop
jmp
loop
jg
mov
rol
stos
enter
shrl
jae
stos
push
jo
jge
cmc
test
add
pop
das
orb
cmc
jmp
push
aas
or
pushf
mov
mov
mov
rolb
dec
stos
cmp
and
std
hlt
jns
cmp
inc
cltd
in
jle
popf
out
shlb
mov
push
add
add
dec
outsl
and
les
gs
xor
stos
bound
shrl
xchg
movsb
rclb
jmp
addr16
push
xor
jge
mov
xchg
pop
xchg
jbe
mov
jae
loopne
ret
lcall
ja
adc
lret
push
test
test
leave
jecxz
sbb
arpl
jp
in
fcoml
and
adc
fstpt
inc
jae
imul
cmp
leave
sub
iret
lods
mov
adcb
push
jg
mov
psllq
lret
lods
jp
cld
xor
int
dec
in
out
jmp
scas
cld
xor
mov
ds
ljmp
jecxz
int
pop
dec
test
sub
xchg
jns
pop
enter
fsubs
jns
subb
mov
pushf
int
call
stos
xchg
mov
xchg
mov
jecxz
mov
lcall
stos
push
stc
dec
test
into
push
push
sub
sbb
repz
das
test
jno
popf
cmp
js
int
sub
jbe
rolb
popf
incb
mov
mov
and
leave
call
js
dec
stos
into
add
popa
pop
aas
cwtl
xorl
jns
shr
scas
push
jecxz
jp
push
adc
mov
iret
mov
and
and
cmpsl
pop
push
icebp
dec
xor
in
loop
and
sbb
leave
call
dec
cmpsl
fnop
in
jb
mov
xchg
mov
aad
imul
sub
sub
cmpsb
in
lret
mov
pop
sub
leave
inc
rorl
sahf
cmp
cmp
test
outsl
sub
mov
jecxz
lahf
pop
adc
out
les
inc
cmp
push
stos
dec
inc
mov
mov
mov
fsubr
jp
loopne
xchg
jns
popa
roll
ljmp
gs
inc
leave
sti
les
mov
add
stc
ret
dec
fs
ror
movsl
aam
shr
enter
rcrb
pop
mov
jo
jb
loope
lret
xchg
pop
xlat
aad
cmp
and
push
pop
out
ds
sbb
fldcw
dec
mov
push
out
xor
hlt
pop
cmp
ss
dec
push
add
mov
adc
daa
jp
cmc
xor
movsl
inc
jg
mov
imul
adc
mov
ss
ds
cmp
cmp
je
mov
add
hlt
sbb
sbb
or
adc
shl
add
les
mov
out
and
mov
pop
jg
scas
or
stos
ds
xor
push
cld
ret
es
outsb
pusha
js
sbb
mov
cld
inc
ret
mov
adc
jmp
call
pop
add
jbe,pn
in
mov
jecxz
mov
and
rclb
ds
mov
jo
das
mov
mov
push
idivb
lods
addr16
loopne
daa
enter
in
push
cmp
in
pop
ljmp
lret
pop
or
add
outsb
mov
test
sbb
loopne
lret
fs
sub
ret
in
imul
out
xchg
dec
jp
rdtsc
cs
mov
mov
xsaves
add
xchg
sub
mov
mov
mov
xchg
imul
xchg
bound
in
pushf
sbb
sbbl
mov
insl
sbb
hlt
pop
pop
and
ss
jnp
mov
pushf
in
adc
cwtl
dec
adc
adc
dec
iret
aaa
pop
in
cmc
xor
dec
outsl
mov
in
clc
cli
lret
or
mov
xor
cmp
daa
cmpsb
adc
adc
or
jno
push
daa
stos
fimull
dec
popf
jbe
dec
test
nop
lret
out
fisttpl
repnz
jge
xchg
xchg
ljmp
jle
pop
aaa
jo
insb
jo
sbb
jg
sub
in
dec
xor
xor
pushw
pop
frndint
jecxz
xchg
enter
test
xchg
xchg
and
sbb
daa
call
jge
mull
mov
inc
es
bound
cld
in
mov
pusha
jno
bound
inc
movsb
xchg
test
call
inc
in
sti
push
in
jne
xchg
mov
ja
out
xchg
sub
mov
inc
loope
fnstcw
aam
jl
xchg
or
ja
inc
inc
xor
std
adc
cmpl
test
psubw
loopne
mov
add
inc
mov
mov
pop
cmc
les
jge
sub
or
out
push
jbe
dec
or
pop
push
jmp
and
addr16
pop
sbb
sub
or
shr
outsl
es
mov
stos
es
and
or
inc
inc
popf
dec
jmp
sahf
pop
mov
cmp
add
and
shrb
cwtl
push
push
and
jmp
cltd
aad
ficompl
add
sbb
push
adc
sbb
in
mov
xchg
mov
pop
frstor
cmp
in
dec
xchg
push
push
adcb
sbb
icebp
dec
dec
imul
dec
fidivrs
aam
lret
pop
test
scas
loope
mov
add
pushf
mov
jbe
pop
jae
shrb
js
lcall
jbe
xchg
mov
sbb
mov
jae
icebp
push
cmp
jmp
mov
lods
push
add
xlat
out
mov
pushw
std
push
add
lds
or
mov
outsb
in
cmp
xlat
mov
jbe
add
pop
xchg
push
pop
lcall
xchg
xor
rorl
mov
jae
adc
push
ljmp
push
call
sub
pop
daa
jmp
rcll
sbb
add
jo
int3
push
lea
pop
push
out
aaa
mov
cwtl
adc
jg
lods
pusha
fwait
inc
fldl
pop
fisubs
subps
or
xchg
nop
xor
mov
repnz
outsl
dec
insb
push
dec
mov
mov
and
or
mov
cmp
nop
aad
ds
push
loopne,pt
jbe
jecxz
sarb
push
mov
dec
data16
lds
cmp
in
cwtl
xor
in
mov
jno
pop
push
xchg
icebp
or
adc
sbb
rolb
fistpl
outsl
mov
xor
jne
mov
pusha
ret
cmpsl
insb
scas
nop
or
sbb
mov
mov
test
int
fptan
or
cmp
add
rcl
pop
jecxz
cmp
or
cli
dec
fisubs
push
jmp
sbb
add
mov
push
repz
enter
cmp
ljmp
and
xchg
es
mov
jbe
movsb
jmp
sbb
jmp
bound
mov
mov
pop
fs
mov
test
outsb
xchg
into
sub
and
xchg
adc
notl
jmp
xor
and
push
insb
add
or
call
pop
fistps
pop
fcoml
ja
call
in
shrb
mov
mov
sub
out
int3
sahf
or
adc
test
jecxz
pop
cmp
fisttps
fwait
arpl
add
clc
fnsave
add
fiaddl
push
pop
int
lahf
mov
sub
jg
out
adc
inc
loop
test
pushf
lea
sub
push
aad
jno
stos
mov
insb
dec
mov
mov
add
mov
sbb
jb
imul
add
or
fldt
imul
in
decl
jmp
dec
orl
clc
repnz
adc
dec
or
xor
inc
adc
xor
sub
js
lcall
addr16
xchg
pop
sub
je
in
in
popl
stos
js
int
dec
ffreep
sbb
inc
gs
cltd
sbb
mov
xor
fsubrs
mov
subb
dec
ret
mov
lods
cmp
dec
jp
repz
jbe
mov
in
lods
jnp
ret
adc
test
mov
lea
frstor
jae
cmp
mov
jle
gs
mov
xor
mov
gs
pop
into
jecxz
gs
cmp
mov
repz
jp
or
mov
call
adc
cmp
push
scas
mov
cs
mov
or
xchg
test
pop
push
mov
mov
repnz
inc
add
dec
cmc
cmp
mov
cmpsb
popw
movl
fcomp
aas
inc
ljmp
testl
sub
mov
jl
repz
clc
cmp
not
inc
loopne
sub
ss
out
shrl
mov
push
test
nop
inc
add
aas
fiaddl
or
add
test
imul
mov
mov
and
fcoml
stc
faddl
imul
add
leave
xchg
fildl
xchg
hlt
mov
mov
inc
fisubl
arpl
push
outsl
mov
mov
jnp
movsb
mov
aas
jne
ret
push
inc
sub
cmpsl
shll
and
clc
in
xchg
mov
mov
sbb
cmp
addr16
pop
flds
jmp
pop
adc
mov
mov
cli
mov
bound
cmc
pop
push
inc
add
dec
adc
xchg
cli
inc
in
sub
xor
out
pop
popa
adc
imul
cmc
cmp
mov
xchg
imul
ror
fadd
cs
lods
mov
aaa
bound
fisttpl
lds
dec
fidivl
fs
jp
test
push
or
pushf
sbb
mov
mov
sbb
xorb
out
push
in
xchg
sbbl
or
sarb
data16
xchg
push
das
xchg
cmp
inc
xchg
enter
shll
xor
ficoml
ja
pop
repnz
inc
dec
rcrb
inc
ljmp
mov
lea
movsb
fistps
mov
cld
cmp
mov
jg
outsl
pop
jg
pusha
pop
fildll
bound
jb,pn
cmp
inc
scas
int
add
xchg
mov
xchg
or
mov
xchg
push
outsb
adc
or
dec
mov
mov
dec
test
mov
sub
mov
shrl
sbb
xor
xchg
and
and
into
jno
inc
or
or
push
rorl
and
cmp
xchg
lods
fildll
and
in
imul
mov
in
nop
mov
pop
mov
les
jle
jge
cld
xchg
push
nop
test
dec
inc
lods
sti
xchg
fstpt
pop
lret
inc
ret
rcr
pop
mov
pop
pushf
add
pop
lods
jg
test
push
jbe
or
mov
cmp
cmp
mov
cmp
aam
mov
push
lods
js
fistps
arpl
stos
lret
mov
xchg
jo
xor
push
rorb
sub
add
movsl
leave
cltd
pop
push
mov
pop
pop
ret
test
pop
loop
mov
cmp
lods
popl
fs
int3
push
movsl
out
arpl
daa
in
sbb
xor
ljmp
jns
and
sbb
mov
cmovo
inc
in
jl
jge
scas
inc
test
push
push
cli
sarb
dec
mov
mov
adc
stos
out
and
xchg
cs
stos
rorb
rolb
sbb
and
push
outsb
push
lahf
cld
or
pop
xchg
inc
mov
loope
mov
adc
andb
sub
pop
jge
cmp
jecxz
fidivl
inc
jo
test
fiadds
mov
je
jbe
dec
mov
and
insb
adc
mov
pop
mov
mov
je
sub
sub
inc
xchg
in
lods
out
or
shlb
sub
rorl
jle
push
pop
push
sub
push
inc
jb
sahf
mov
daa
outsb
cld
in
xchg
pushf
jne
leave
or
sahf
in
cmpsl
cmp
das
stos
in
add
jl
repz
and
adc
jmp
dec
outsb
push
cmp
mov
add
mov
sub
or
push
xor
enter
or
cmp
clc
push
or
xor
lds
mov
cmc
mov
mov
mov
test
rcrl
outsb
jmp
insb
js
shrl
and
sbb
xchg
in
xor
aad
push
jp
fidivs
lods
into
loopne
test
xor
sbb
mov
mov
dec
push
add
in
scas
test
cmp
fdivs
divb
dec
mov
xor
jle
fdivrs
sub
out
push
sub
sub
aad
push
or
push
mov
jne
dec
cmp
inc
xchg
push
jp
adc
aaa
add
jle
inc
push
outsb
pop
xchg
xchg
js
mov
mov
movsb
inc
popf
xchg
mov
xor
lret
pop
xchg
sub
out
pop
leave
xchg
mov
pop
pop
xchg
pop
jne
mov
leave
or
into
cmp
dec
addr16
or
mov
jb
shll
ror
repz
stc
jmp
repz
fwait
and
out
dec
jmp
cmc
ja
enter
pop
popa
outsl
mov
dec
sub
shl
add
xchg
shrb
xor
jae
adc
push
mov
mov
xchg
sub
iret
loopne
xchg
test
add
push
mov
mov
out
leave
incb
loope
and
jle
xor
mov
cmp
xor
cmp
pop
ret
and
mov
sbbl
mov
sub
mov
ficomps
cs
loop
mov
dec
movsb
xor
ret
sub
cld
lock
jmp
imull
das
cmpb
cli
jp
sub
into
mov
cmp
mov
inc
jno
sub
pusha
jno
orb
or
cmp
imul
jo
mov
xchg
mov
adc
nop
cli
jmp
or
test
das
xchg
sbb
nop
into
popa
das
leave
call
imul
idiv
addr16
mov
jb
and
inc
popf
fsts
adc
mov
pop
icebp
fimuls
sub
into
xchg
clc
jae
jmp
adc
stos
divb
or
lods
cmp
sbb
push
adc
xor
or
add
sbb
pusha
or
xor
fstps
cli
dec
pushf
push
cmpsl
fwait
das
ror
dec
addb
pop
and
fsubrs
cmp
mov
nop
icebp
adc
sbb
pop
int3
or
in
int3
das
pop
jg
mov
rclb
pop
ret
cltd
lcall
popw
out
cs
popa
out
push
lds
pop
daa
mov
fnsave
xchg
in
mov
ds
ss
mov
xchg
sti
mov
adc
mov
xor
mov
pop
and
sub
pop
jle
mov
fs
add
jbe
daa
cmp
test
mov
repz
xchg
icebp
sub
sti
and
cwtl
or
out
dec
or
dec
jne
shlb
push
push
mov
push
test
push
jb
cld
outsl
push
and
push
fldenv
ds
ss
ds
sub
fsts
mov
cmp
and
xchg
insl
inc
lods
test
cmp
and
fwait
ds
fbstp
insb
divl
xchg
in
jae
test
cli
push
xor
or
xchg
pop
jns
test
movsl
dec
arpl
orl
sub
push
add
xchg
sub
fistpl
add
stc
mov
fcomps
pop
popa
in
test
xlat
stos
in
lret
int3
ret
sub
add
pop
sbb
add
inc
mov
in
fmuls
adc
xor
push
push
mov
fptan
js
lcall
jecxz
inc
pop
mov
and
fidivrs
and
sbb
or
adc
in
sbb
bound
mov
inc
pop
or
inc
test
xlat
and
movsl
pop
sbb
mov
xchg
sbb
fiaddl
es
gs
xchg
mov
xor
testb
add
dec
loop
fcmovnb
push
enter
lds
adc
adc
mov
shll
xor
out
fbstp
sti
or
sbb
adc
mov
xor
jp
rcrl
mov
add
pushf
adc
or
outsb
cmp
in
and
xor
push
sub
dec
gs
loope
fldenv
mov
lock
scas
mov
push
sahf
cmp
jg
mov
cmpsl
into
cmp
add
clc
scas
sub
into
cmp
and
out
shrl
and
out
nop
sbb
or
add
pop
mov
and
jns
pop
cmp
data16
arpl
clc
mov
sbb
cmc
xchg
dec
int3
cmp
out
enter
adc
sub
mov
orb
mov
movsb
adc
fldt
lcall
dec
fisubs
add
push
and
dec
push
mov
mov
jecxz
arpl
pop
jo
pop
bound
sbb
clc
and
inc
jecxz
mov
gs
fistpl
mov
jl
sarl
xchg
or
pop
sbb
movsb
push
out
data16
cs
sti
int3
xor
out
xchg
sti
scas
mov
testb
mov
jbe
add
dec
jmp
nop
xchg
rolb
cmp
cmp
lret
mov
rcrb
outsb
ret
sti
fsubrs
inc
pop
cli
cmpsb
fisubrl
mov
jmp
mov
loop
shr
aam
push
sub
cld
push
cmp
jle
imul
test
mov
and
push
aam
xchg
xor
xchg
jecxz,pt
add
jmp
out
sbb
xor
sahf
repz
mov
gs
dec
sbb
cli
dec
roll
ficoms
dec
insb
push
out
dec
lea
test
sbb
aam
mov
xor
cmp
sub
std
jp
mov
push
sub
xlat
incb
push
adc
mov
sbb
in
daa
dec
jbe
sub
movsb
sbb
pusha
adc
inc
das
fnstenv
ds
dec
imul
popf
fwait
shll
lods
ret
aaa
faddl
pop
scas
xchg
sbb
lods
enter
cmpsl
dec
fistps
inc
ret
mov
adc
test
mov
push
jl
xchg
add
sti
ficoml
sbb
cs
mov
push
notb
or
and
sbb
and
mov
cld
xchg
inc
push
fidivl
pop
aam
pop
or
je
lea
aad
inc
adc
dec
add
lods
sub
adc
jmp
pop
jnp
and
push
cli
loop
scas
lds
push
icebp
jns
ret
test
lds
cmc
xchg
adc
mov
dec
std
adc
cmc
cli
mov
push
js
daa
mov
xchg
xchg
lods
pop
loope
xchg
es
cmp
test
out
mov
pop
jl
push
insl
lds
mov
cltd
lods
push
xchg
fwait
mov
xchg
iret
push
or
lods
hlt
jbe
popa
dec
or
jnp
push
repz
rolb
int
xor
int
or
mov
mov
cmp
xchg
pop
rolb
and
fwait
xor
mov
xor
test
shrl
jbe
mov
insl
pop
or
xchg
xchg
mov
inc
mov
add
mov
mov
cmp
ret
stc
pop
or
pop
pop
xchg
add
mov
test
ljmp
popa
jecxz
push
inc
inc
adc
ret
fnsave
jecxz
dec
cld
sub
stos
movsl
xor
outsb
es
and
push
addl
jg
icebp
int
mov
clc
adc
lods
cmp
fs
cld
xlat
cli
mov
lods
aas
andb
push
ficoml
movsb
mov
or
adc
imul
int3
pop
push
xor
fisubl
mov
outsb
iret
push
and
xor
xchg
pop
add
popa
add
pop
mov
jnp
test
pop
mov
and
xchg
push
adc
imul
add
test
outsb
jbe
add
mov
push
gs
repz
imul
jg
repz
push
gs
add
add
jns
ja,pn
rclb
or
out
outsb
ror
je
or
inc
adc
iret
insb
mov
adc
cmc
jns
fwait
inc
movsb
sub
mov
cmp
pop
dec
jnp
sahf
dec
xor
cmp
out
pop
shll
cmpsb
adc
xchg
scas
sbb
adc
mov
adc
xchg
daa
push
jb
popf
data16
gs
xchg
mov
lock
aad
movsb
mov
daa
pop
mulb
cmp
or
jns
outsl
push
mov
mov
xchg
ja
pusha
push
notl
jge
aaa
inc
xchg
pop
addb
jecxz
fs
aad
pop
fadds
fsubs
movsb
jl
andl
jg
inc
jge
pop
in
pusha
popa
rcrl
repnz
xchg
add
out
out
adc
dec
and
cmp
int
jne
imul
ja
push
xchg
out
inc
jne
sbb
repz
mov
fdivl
mov
jae
push
int
sbb
fnstcw
adc
xor
lret
mov
dec
mov
pop
fbld
aas
mov
mov
call
xchg
lret
ss
xor
push
ss
push
mov
in
ret
mull
int
jmp
dec
dec
lds
es
xchg
cmp
popf
js
sbbb
jecxz
or
imul
xchg
jb
or
outsb
sub
pop
fucomip
fstpt
mov
out
ds
sti
xchg
xchg
fidivs
fistpll
sarl
int
cmp
loop
fwait
sub
and
sub
movsl
lcall
out
push
clc
sub
xchg
scas
mov
xchg
sub
bound
sub
es
xchg
data16
mov
insl
and
test
mov
lods
int
mov
imul
xchg
mov
adc
inc
push
adc
mov
int3
jb
push
push
movsb
fisttps
shlb
add
jge
inc
icebp
imul
cli
int3
imul
bsr
xlat
xchg
aas
cltd
jmp
jmp
xlat
sub
lcall
ds
incw
cvtpi2ps
int3
pop
test
out
jae
xor
xor
push
add
xor
or
adc
popa
gs
popa
add
cmp
mov
add
test
fists
sar
rcrb
pusha
inc
adc
mov
int
mov
cmp
stc
add
and
lea
push
in
into
mov
fwait
and
clc
clc
ud2
mov
loope
cld
sub
arpl
cmp
push
mov
loope
mov
sub
daa
xor
cmp
mov
or
xorb
rol
loop
mov
mov
and
xor
or
ficoml
icebp
inc
cli
sbb
sbb
sub
faddl
pop
flds
push
rclb
mov
adc
orb
js
unpcklps
and
xchg
je
jbe
dec
test
gs
inc
pusha
sub
add
rcll
mov
sub
lret
cmp
mov
and
xchg
fs
dec
add
bound
xor
adc
insb
mov
xchg
ret
mov
or
push
lret
fwait
jb
jne
sub
lahf
jbe
imul
add
mov
jb
int
in
test
inc
addl
outsb
inc
rcrb
rclb
or
mov
movsb
sbb
mov
cmp
pop
clc
pop
pop
add
add
fnstenv
jns
dec
or
sub
push
sbb
aaa
rcrl
adc
repnz
pop
rcl
inc
sahf
xchg
pop
dec
inc
lahf
outsl
cld
mov
in
shrb
shlb
dec
adc
cwtl
outsl
push
lds
adc
mov
xor
sbb
push
pop
in
cmp
mov
test
int3
mov
dec
ds
push
or
test
les
or
fisttpll
clc
adc
push
pushf
or
hlt
leave
dec
dec
pop
test
clc
dec
xor
or
cmpsl
pop
cmp
or
push
pop
mov
sbb
jp
dec
push
shll
clc
das
stc
push
jmp
scas
push
stos
adc
push
fcomps
dec
push
xor
or
testl
stc
test
xchg
aas
addl
lret
mov
jp
loop
inc
xchg
cwtl
inc
and
imul
insb
xchg
ja
mov
iret
push
mov
ud2
stc
mov
ljmp
jl
aad
xchg
dec
movsl
pop
adc
dec
add
lret
dec
int
add
or
dec
sub
popa
cmc
sbb
cwtl
aaa
js
xchg
mov
pop
movsb
fs
test
negb
xor
imul
in
adc
lea
in
cltd
sbb
out
test
test
push
adc
or
push
jb
hlt
add
out
stc
xchg
dec
cmpsl
lds
lahf
into
xchg
inc
sub
adc
lcall
jmp
add
mov
iret
xchg
clc
mov
dec
arpl
add
xchg
and
flds
inc
mov
rol
cmc
subl
mov
dec
movsb
pop
xor
jne
stos
shr
push
jge
int
inc
mov
mov
repz
scas
bound
scas
or
test
das
sbb
mov
inc
or
das
dec
inc
test
xchg
mov
xor
popa
clc
cmp
ficomps
sub
or
rcr
cld
jecxz
scas
pop
in
mov
pop
fidivs
testb
push
push
push
add
inc
mov
xor
adcb
mov
repnz
add
daa
cmp
or
jbe
call
loope
nop
jne
or
cmpsl
dec
cmp
fidivrl
lods
in
mov
iret
jbe
sub
push
imul
repz
add
repnz
ljmp
in
rorb
sbb
jmp
nop
test
xchg
repnz
xor
aam
shll
test
inc
cwtl
push
out
push
cs
sbb
sub
loop
sbb
or
xchg
in
insl
xchg
or
mov
and
das
punpckhbw
xchg
lock
nopl
cwtl
nop
movsb
jb
test
ficomps
adc
lret
dec
mov
or
imul
flds
enter
mov
jae
or
lock
dec
pusha
movsb
pop
jne
add
cltd
subb
inc
jecxz
dec
ds
addb
xor
cli
dec
pop
jge
lea
inc
adc
cltd
mov
xchg
adc
rcrb
cmc
pop
inc
and
call
inc
or
add
hlt
pop
je
mov
stc
loopne
out
and
dec
arpl
sub
lahf
vmwrite
test
mov
in
xchg
sub
sbb
sub
cmovge
sub
mov
fildll
fsubp
pop
ljmp
mov
cwtl
push
movsb
add
mov
push
cmp
sub
je
push
call
xchg
and
adc
cmp
push
fistps
mov
or
inc
cmp
out
aaa
int
fcomps
sbb
dec
lods
outsl
sbb
scas
sti
jg
mov
std
test
lcall
pushf
loope
adc
or
fwait
jne
cs
pusha
leave
idivb
pop
aas
rclb
dec
sbb
inc
add
xor
into
enter
mov
xlat
xor
fcoml
push
pop
xchg
cmc
or
fsubrp
mov
nop
cmc
jne
arpl
sub
cmp
loopne
ret
push
fcomi
addb
pop
xor
negb
dec
mov
mov
mov
and
xor
das
das
aas
out
aas
mov
rorl
enter
mov
mov
push
pop
pushf
rorl
lahf
fs
fsubp
ss
jmp
fwait
push
std
jns
test
test
stos
xor
insb
mov
or
mov
mov
outsl
std
hlt
dec
adc
mov
sbb
lods
xchg
cmp
mov
jnp
xor
push
inc
mov
sub
push
sbb
cmp
aad
repnz
sbb
movsb
sub
into
add
lahf
xchg
push
sub
das
inc
adc
push
and
push
sarl
js
in
fwait
and
das
stc
mov
cmp
and
hlt
aas
ret
into
xchg
daa
dec
mov
test
mov
les
jecxz
xchg
movb
xchg
in
sub
xchg
imul
dec
movsl
add
or
pop
enter
add
push
mov
sti
jno
out
out
pop
xchg
pushl
dec
push
xchg
xchg
ret
mov
iret
lods
mov
mov
testb
or
dec
out
cmp
or
fsin
divl
cld
ljmp
pushf
inc
pop
mov
sbb
cmp
sti
jecxz
je
jno
test
ja
mov
xlat
out
push
push
add
movsl
push
aas
lods
add
dec
pop
push
sub
jl
mov
in
outsl
mov
and
mov
pusha
fwait
or
fninit
pop
out
ds
jl
push
mov
pop
mov
xlat
and
adc
xchg
cmpsb
lcall
jmp
sub
xor
dec
iret
push
addb
scas
cmpsl
xor
fldcw
jl
addr16
dec
or
pop
imul
mov
mov
sahf
pop
pushf
sub
adc
xor
cmpsl
popf
xchg
cli
stc
pushw
outsb
inc
pop
xor
xchg
mov
insl
loop
sbb
dec
and
in
push
dec
into
push
movsb
inc
sbb
xor
repnz
push
enter
and
mov
arpl
pop
repz
xchg
bound
clc
cs
lret
out
imul
icebp
xchg
pop
xchg
rcrl
cmp
xlat
shll
mov
add
push
xchg
lret
sub
iret
arpl
jnp
aad
sbb
sbb
aas
cltd
clc
mov
lahf
js
dec
aas
repnz
in
sub
ficoml
cmp
std
sbb
mov
in
test
adc
cli
call
es
and
jo
mov
sub
clc
mov
cmp
xchg
int3
jnp
mov
and
testb
mov
mov
mov
pop
cs
icebp
aas
pop
mov
and
xor
dec
stos
arpl
or
inc
pop
sbb
adc
and
xchg
push
inc
or
jb
stc
ja
hlt
dec
jae
pop
push
push
adc
add
mov
arpl
cltd
sbb
bound
jns
cli
dec
jne
ret
test
push
mov
adc
add
dec
fs
inc
sbb
stos
dec
out
add
jnp
popf
into
cmp
ret
lahf
inc
andl
or
mov
inc
sbb
aad
and
test
sbb
push
xchg
xchg
pop
loopne
aas
ss
out
and
ret
lods
insl
or
inc
and
lret
push
or
test
pop
mov
outsb
and
test
stos
mov
pop
iret
pop
mov
cmc
mov
mov
ret
sub
test
gs
xchg
cmp
cmpsb
add
sub
jno
les
adc
cmpl
adc
test
in
jle
stos
addr16
jl
cs
mov
jne
mov
lods
dec
scas
fmuls
xor
add
xchg
add
add
push
rorl
lock
and
scas
out
add
mov
nop
lds
test
and
cwtl
flds
jbe
cmp
push
sarb
outsb
fs
mov
mov
adc
xchg
sub
popa
scas
or
repnz
repnz
loopne
pop
jecxz
sub
adc
xchg
dec
shll
clc
xchg
pushf
dec
xchg
stc
pushf
mov
mov
lock
xor
push
arpl
dec
jmp
insb
inc
jne
test
sub
pop
mov
mul
mov
jmp
xor
push
sbb
xchg
add
test
push
sub
sahf
repnz
cmp
int
adc
out
lcall
hlt
std
andl
pop
and
push
inc
jno
add
and
jns
es
mov
pop
adc
pushf
sbb
lcall
xor
aad
push
pop
or
or
lahf
cwtl
icebp
jo
adc
and
pop
or
inc
inc
insl
or
dec
push
push
stc
repnz
cmc
xchg
sbb
addl
mov
in
int
loope
mov
negl
fisubrs
rcrl
mov
pop
sbb
jno
pop
xor
sub
mov
pop
ficoml
mov
cmc
mov
call
sahf
or
or
fsubrs
js
repnz
or
cmp
ljmp
fbld
push
xchg
adc
mov
lods
xor
scas
fiaddl
dec
or
jecxz
xor
jno
xchg
pop
popf
adc
lret
push
aad
inc
sub
mov
dec
inc
mov
jno
dec
std
std
clc
andl
push
out
cmp
sub
call
xchg
hlt
cltd
dec
imul
in
addr16
aas
jb
push
cmp
lret
jo
pop
push
in
pop
mov
cmp
push
cmp
pusha
test
add
sub
jp
stos
mov
aaa
lds
scas
xchg
cmp
test
idivb
fnstcw
pushl
jle
sbb
mov
cs
pop
push
aam
ret
mov
movsl
push
jl
jmp
sahf
xor
call
rorl
push
jo
lods
lret
xchg
int3
test
sub
ss
cmpb
test
lret
inc
jno
shl
inc
adc
lds
sbb
test
cltd
sub
push
jl
pop
mov
and
xchg
insb
repz
xchg
int
je
xchg
xchg
mov
je
ret
hlt
pop
dec
cmp
test
jle
fwait
lcall
push
mov
into
push
xchg
cmc
xor
jmp
push
mov
out
inc
out
add
jo
nop
or
mov
and
and
shlb
imul
lods
xchg
xchg
fs
daa
movsl
lret
scas
dec
stc
int
xchg
mov
cmpsb
mov
movsb
add
test
test
xchg
push
or
enter
pop
in
mov
fs
xchg
add
sbb
dec
test
jbe
mov
add
mov
cld
in
push
nop
xchg
sbb
frstor
mov
lret
xchg
jle
shr
sbb
out
sbb
in
ds
push
insb
push
sbb
push
das
or
xchg
xchg
jnp
xchg
enter
out
insl
icebp
ret
push
cmp
jnp
jno
in
jge
pop
mov
pop
in
cmpsl
sbb
ss
pop
lea
rorl
inc
jnp
icebp
adc
cmp
adc
sbb
push
dec
fstpt
stos
xor
adc
imul
sbb
dec
outsl
fcompl
int
dec
or
loope
push
push
lods
rcll
je
fsubrs
xor
mov
inc
lret
push
ljmp
clc
xorl
das
pop
daa
rcll
ljmp
xor
out
leave
adc
and
push
mov
out
mov
es
lcall
subl
sub
fldenv
mov
sbbl
mov
shl
jp
and
dec
sub
es
leave
xchg
shlb
mov
mov
or
push
cmpb
mov
add
jns
or
jnp
dec
mov
push
test
sub
and
decl
xchg
add
aad
mov
sub
inc
fstl
sbb
lods
mov
jae
cmpsl
push
scas
sahf
jo
mov
cmp
lock
jb
xchg
adc
inc
lahf
adc
repz
push
imul
mov
add
sub
add
cli
dec
push
rcrl
aaa
push
aaa
xor
outsl
mov
imul
idivb
lret
push
inc
sub
hlt
mov
ljmp
insl
sahf
xor
xchg
stos
loop
push
cmp
or
sub
dec
mov
mov
push
push
in
xchg
pop
or
insb
insb
insb
pop
xchg
pop
dec
enter
or
cmp
push
cmpb
imull
test
pop
push
test
imul
cmp
sub
sbb
repnz
daa
in
cmp
adc
mov
fisttpl
jmp
sbb
test
es
rsm
je
and
xchg
pop
adc
mov
xlat
std
stc
stos
mov
inc
jle
mov
inc
xor
or
push
jo
std
jge
mov
cld
sbb
bound
fsub
loope
cmp
lods
sub
jns
pop
xor
popf
aaa
pop
daa
pop
sbb
movsl
sub
and
mov
xchg
jge
cmp
pop
mov
push
popf
aam
js
ficoms
dec
mov
sbbl
mov
mov
in
jle
inc
inc
jb
jle
je
out
cmp
lods
ss
movsb
sbb
repnz
add
ret
pop
inc
clc
inc
add
in
sub
call
jno
into
jmp
imul
nop
mov
pusha
or
inc
int
loopne
insl
xchg
adc
clc
sub
icebp
xor
leave
jns
ret
pop
subb
jge
jne
push
scas
ror
jne
in
lock
push
push
mov
mov
bound
push
cmc
pop
cmp
loope
adc
pop
sbb
out
pop
mov
mov
xchg
cmp
push
xchg
xor
jmp
sub
pop
and
or
pop
shlb
pop
fdivr
xchg
dec
adc
xlat
inc
adc
js
adc
in
bound
enter
je
outsb
fcoms
insb
addr16
cmpsb
inc
cmpl
sub
cmpsb
pushf
hlt
dec
aad
incb
dec
dec
push
int
lcall
mov
ljmp
xchg
cwtl
into
test
pop
mov
xchg
and
stos
loop
rcll
frstor
xchg
mov
sbb
pop
mov
rcrb
jnp
add
mov
aam
lahf
ja
into
mov
inc
and
xchg
test
nop
in
loopne
popa
sub
scas
call
inc
pop
jmp
or
adc
cwtl
xchg
jne
push
pop
icebp
sbb
mov
sub
aad
and
arpl
push
or
repnz
or
mov
movsl
insl
mov
dec
jae
jp
in
mov
je
test
sahf
xor
aad
pop
add
push
xor
iret
mov
gs
jge
jbe
or
mov
inc
dec
enter
cmp
test
popa
cld
push
mov
cs
stos
fcomps
adc
inc
jo
jbe
and
jl
imul
mov
out
rcr
leave
mov
sub
in
ficompl
dec
mov
out
sbb
lret
in
cs
jge
div
push
rclb
push
xor
cmc
xchg
fbstp
hlt
adc
sbb
push
sbb
sti
push
pop
sti
mov
cs
popa
jl
dec
into
jnp
jns
jle
xor
adc
fmuls
dec
dec
shll
insl
sbb
lret
xchg
filds
js
cmp
cmpsb
fbstp
add
or
repnz
pop
xchg
scas
and
inc
insb
clc
xchg
xor
cs
outsb
mov
mov
ret
dec
dec
sbb
data16
lret
or
jns
add
xor
fdivl
lods
insl
push
mov
push
test
xlat
sbb
pop
in
sbb
mov
mov
mov
pop
xor
andb
inc
jae
push
pop
dec
aad
lea
sbb
jbe,pn
pop
daa
pop
push
fwait
jo
xchg
ja
int
jae
enter
ficomps
in
addr16
in
xor
lds
out
mov
or
cmp
inc
or
xchg
ret
mov
and
push
adc
lahf
hlt
neg
movsl
xchg
cmp
dec
dec
jmp
icebp
jbe
pop
sub
sbb
sbb
rcl
test
bound
fsubr
fcompl
xor
ds
pop
dec
push
in
idivl
arpl
sub
imul
inc
test
push
xor
pop
cmc
push
mov
inc
mov
in
jns
in
cmp
mull
inc
in
enter
pop
test
adc
push
flds
jp
cltd
cmc
pop
jge
rcr
adc
inc
out
mov
cmova
sub
in
add
fisttpl
cwtl
aas
arpl
xchg
add
ret
jb
cwtl
fnstenv
je
jecxz,pt
adc
sbb
into
and
inc
dec
sahf
inc
into
movsb
fisttps
cld
adc
outsl
lea
adc
sub
popf
notb
fisttpll
sbb
lahf
bound
xchg
ja
sarb
sbb
stos
sbb
scas
or
les
cwtl
pop
inc
mov
sbbl
std
call
push
xchg
das
into
xchg
add
out
movsl
or
or
jl
lcall
dec
or
test
test
mov
outsl
cs
imul
jecxz
loop
outsb
push
bound
imul
aaa
and
lods
dec
ja
cmp
fidivs
cmc
xchg
mov
cmp
das
icebp
data16
movsb
or
sbb
dec
lods
xchg
xchg
insl
in
or
mov
rorl
or
dec
push
xor
mov
lods
pop
dec
lahf
dec
and
cmp
xor
mov
mov
mov
cmc
fcmovnb
lods
test
test
push
mov
xchg
pop
xchg
addr16
or
rorl
inc
push
dec
push
inc
andb
pushf
jge
nop
arpl
lods
enter
xor
ja
sbb
out
aad
fimull
cs
ds
add
ret
dec
add
xchg
mov
mov
cmp
xor
insb
incb
dec
andb
fistl
int
dec
or
lret
mov
or
mov
mov
lahf
push
sbb
daa
out
xchg
adc
in
cltd
xchg
out
repnz
adc
add
mov
frstor
aad
xor
cmp
iret
loopne
sub
push
cld
mov
mov
test
ljmp
adc
jecxz
test
xor
xorl
es
cmpsl
cmc
je
nop
push
scas
sarl
fists
xchg
lret
xchg
mov
lods
stos
movsl
imul
inc
ret
aam
andl
nop
into
ds
add
test
stos
cs
cld
and
jl
es
pop
cld
pop
jno
mov
sbb
cmp
mov
xchg
pop
adc
mov
mov
lret
imul
mov
jb
xchg
inc
dec
out
insw
add
rcrl
jb
test
scas
inc
mov
sub
sti
test
adc
aam
jp
mov
push
out
jg
or
sbb
cmp
pop
loopne
push
addb
rcrl
rcll
adc
mov
scas
cmp
clc
iret
push
shl
out
push
mov
inc
sub
jae
cmp
mov
ret
pop
ljmp
inc
divl
pop
notb
sbb
dec
fbstp
and
divl
dec
rcrl
aas
lcall
mov
outsl
adc
jo
xor
mov
push
mov
mov
loop
ljmp
cmp
orl
or
or
and
popa
push
ret
lods
gs
xchg
sahf
mov
call
or
add
adc
in
mov
jno
bound
leave
outsb
ret
out
adc
out
pop
outsl
inc
dec
sub
cmc
in
cld
adc
loope
cld
cmc
push
lea
jne
mov
and
mov
pop
sbb
sarb
fimuls
test
test
pop
cmp
jle
adc
lods
jge
sbb
mov
jmp
xchg
leave
mov
es
hlt
mov
mov
add
cld
test
das
stos
in
rorb
fs
lahf
cmpsl
jmp
bound
ss
cmpsb
int
cwtl
mov
mov
add
in
mov
call
subl
pop
push
ss
aas
push
bound
ret
movb
mov
scas
sub
dec
add
loope
sub
inc
mov
fildl
outsl
mov
push
mov
in
mov
adc
fisubrl
adc
pop
inc
jmp
std
sub
testb
rcr
dec
cmc
shrl
enter
ret
lea
push
mov
es
pop
mov
scas
stos
xor
sarb
jno
movsl
enter
mov
cli
popf
sarl
and
cmp
mov
xor
repnz
cld
cmc
lahf
sub
push
jmp
ds
adc
ficoml
jg
scas
ja
int
cmp
pop
mov
dec
ljmp
stos
dec
fdivs
mov
scas
jb,pt
cmp
pusha
in
addr16
testl
out
sahf
ret
adc
ljmp
pop
xchg
mov
adc
dec
inc
les
and
test
fwait
scas
xor
jns
lret
cmpsb
test
scas
xchg
movsb
lods
stc
pop
lret
dec
lods
subl
stc
jnp
js
and
nop
add
pop
mov
std
and
push
cld
xor
xor
shr
adc
lret
xchg
push
negb
fsts
mov
mov
cmp
fisubs
ds
lahf
mov
xchg
or
cmp
fldcw
lods
std
lea
outsb
inc
and
sub
jmp
push
pop
push
sub
inc
addl
mov
xchg
pop
in
nop
xchg
pop
mov
add
sub
movsl
pop
push
pop
mov
cmp
rcl
lea
pusha
xor
adc
jno
cmp
popa
lret
jmp
add
mov
xor
lcall
or
int3
out
test
fistl
sbb
mov
call
push
fisttps
int
roll
cmc
push
jmp
mov
ja
sbb
cmp
das
ficoml
in
pop
inc
mov
or
ret
mov
orl
mov
arpl
add
insb
cmpsb
leave
ret
cmp
nop
and
add
ds
jl
mov
insl
imul
xlat
or
les
xor
mov
xor
mov
jnp
dec
out
enter
push
popf
xchg
and
cwtl
lahf
cwtl
stos
cmp
adc
add
jle
xchg
inc
jmp
inc
mov
jo
sti
jne
notb
rcrl
jns
add
addw
out
in
bound
test
inc
scas
sbb
and
sub
rol
mov
xor
adc
mov
popl
add
pop
push
fnstenv
cmpsb
adc
or
fwait
dec
mov
mull
fldcw
jns
inc
xchg
pop
inc
ret
and
lds
mov
mov
push
repnz
xorl
ss
ljmp
das
loope
mov
cmp
mov
xchg
xor
fdivs
pop
xchg
cmp
fprem1
lds
stc
icebp
lods
iret
daa
pop
push
es
test
pop
pop
pop
mov
mov
pop
jg,pn
addr16
inc
repnz
data16
push
scas
test
stos
add
ss
adc
cmc
jl
push
sbb
jbe
cmpsl
dec
pop
lods
sbb
sbb
cmp
push
aam
mov
jae
ja
dec
cmp
cmp
mov
sbb
push
mov
cmpl
cmp
lods
jb
test
adc
push
xor
insl
mov
leave
movsb
pop
ljmp
mov
or
mov
pop
mov
or
dec
cmp
loop
jbe
mov
lods
xchg
pushf
int
inc
cs
in
js
sub
imul
mov
insl
jns
das
pop
ss
mov
push
sbb
clc
adc
cwtl
xor
out
sti
adc
mov
jbe
jmp
adc
dec
sub
pop
int3
pop
jecxz
or
loop
sti
lods
cwtl
xorps
into
dec
std
rorl
dec
push
mov
push
mov
jne
cltd
and
pop
or
push
mov
mov
icebp
je
fsubrs
or
sub
fiaddl
lret
pop
xor
or
jae
imul
xchg
jg
mov
rcrb
jecxz
mov
dec
or
cmp
adc
outsb
xchg
enter
push
add
fistl
sub
pop
divb
je
jge
mov
cli
repz
ret
stc
jge
fs
and
sti
push
and
cmc
push
dec
xlat
jmp
xchg
and
sbb
mov
ret
adcb
push
fldz
in
cmc
and
push
add
ffreep
repz
jl
dec
pop
mov
jmp
dec
mov
cmpsl
xor
jge
lods
lcall
fwait
push
lcall
pop
movsl
test
dec
mov
inc
jno
aam
xchg
rol
mov
add
sub
inc
dec
dec
or
ret
xor
mov
lahf
mov
pop
lds
or
pop
fcompl
cmp
jp
push
push
add
fmuls
and
pop
mov
inc
fbstp
push
faddl
dec
lods
push
fwait
jb
or
pop
mov
mov
pop
movsb
in
adc
lock
loopne
out
pop
repz
cmc
xor
jns
int3
mov
jnp
shll
outsb
xchg
fs
test
add
fiadds
roll
je
rcrb
sub
loop
outsb
aas
cmc
pop
fstpt
repnz
decl
daa
pop
aad
jo
cld
cmp
push
adc
mov
cmc
mov
xchg
bound
ss
jmp
sbb
or
add
pop
orb
inc
imul
aaa
cmc
adc
mov
pop
arpl
mov
pop
inc
adc
push
out
fbld
adcb
cs
push
icebp
inc
les
mov
add
enter
fistps
daa
fistpl
mov
adc
aad
pop
test
imul
pop
inc
or
cmp
in
in
ss
mov
pushl
je
push
fistl
out
lock
sub
lret
mov
jp
mov
ret
mov
xor
sub
xorb
test
shrb
dec
mov
mov
outsb
pop
push
and
popf
mov
in
push
mov
sbb
ja
jg
stos
lahf
sbbl
push
sub
push
jno
and
jnp
jae
cmp
insl
mov
cmp
jmp
xchg
dec
sub
mov
adc
push
loop
lea
sub
mov
enter
push
aam
outsl
decl
ss
nop
loop
aas
ds
dec
aas
faddl
pop
outsb
jbe
mov
int3
mov
inc
or
js
sub
repz
xchg
pop
pop
mov
aad
bnd
push
push
xchg
imul
jecxz
sbb
jmp
hlt
add
mov
push
and
cli
jmp
push
push
push
test
push
and
loopne
sbb
xor
jp
ljmp
push
pop
imul
sbb
cmc
adc
inc
mov
cli
xor
jmp
ljmp
xor
add
sbb
pop
jge
and
mov
cmp
pushl
ljmp
xchg
lock
push
mov
stos
scas
leave
push
xor
xor
dec
ret
sbb
and
sbb
jl
lock
push
dec
repz
in
leave
push
mov
sar
pop
rcrl
lods
sbb
rol
mov
or
ret
inc
stc
dec
add
xchg
subb
xchg
mov
xchg
outsl
lahf
add
sub
lods
scas
cs
cmp
popf
cwtl
iret
test
pop
insb
mov
pop
cwtl
mov
fdivrs
hlt
pushf
ret
loop
sbb
xchg
and
aas
int
mov
sti
data16
iret
stc
push
in
or
and
aad
data16
bound
xlat
and
stos
jne
cmp
jmp
outsb
mov
xchg
xchg
jnp
lahf
or
mov
dec
inc
int3
xchg
mov
mov
push
in
sbb
inc
cmp
sti
or
jne
xlat
jecxz
push
pop
jmp
lahf
ror
outsb
insb
inc
es
dec
pop
sahf
add
std
lods
stos
nop
outsb
xor
pop
xchg
or
test
pop
push
aam
sbb
enter
push
and
mov
imul
in
pusha
nop
out
sbb
in
ljmp
js
cmp
inc
shlb
push
pop
das
push
jnp
jmp
jbe
sti
push
repz
jnp
shrl
mov
add
js
adc
push
push
loope
hlt
lods
xchg
mov
inc
or
inc
aam
sbb
and
sbb
sub
out
sbbl
lods
sbb
adc
pusha
xor
xlat
and
ret
jmp
sbb
mov
dec
sub
int
lret
es
add
ja
pop
dec
or
push
rcrl
add
loope
xor
push
ror
es
mov
daa
jnp
push
jmp
imul
shlb
jno
js
lret
cmp
jae
push
push
scas
movsb
add
add
popa
pushf
pop
push
push
push
int3
xlat
jge
mov
repnz
or
es
sahf
clc
inc
iret
sbb
lds
pop
add
or
or
mov
sub
adc
add
jp
mov
xor
in
into
cmp
mov
dec
pop
call
dec
push
out
fsubl
xor
in
rcpps
sub
vlddqu
jae
test
xchg
mov
jne
xlat
inc
pop
es
sahf
faddp
out
mull
mov
push
mov
cmp
mov
push
fsubs
or
icebp
jnp
mov
xchg
pop
mov
sub
jle
lea
mov
cld
and
sti
and
mov
shl
aam
nop
sub
add
arpl
jle
push
cmp
lea
cmp
fists
push
xchg
nop
orb
fmuls
fistl
mov
daa
fidivs
pop
push
or
jp
repnz
sbb
jge
cli
adc
lea
add
inc
push
pop
mov
sub
add
nop
pop
inc
add
push
stc
fsubl
ss
mov
inc
xchg
mov
jge
xchg
xor
sbb
cmpsb
pop
repnz
or
lods
adc
aam
mov
push
jg
inc
negl
adc
inc
mov
ret
sub
add
xchg
cmp
mov
call
hlt
dec
adc
insl
pop
lock
push
in
nop
cmpsl
sbb
in
repnz
mov
test
lea
sar
and
aas
jg
mov
sub
loop
xchg
pop
inc
sbb
in
lock
lds
mov
pop
dec
in
add
xor
dec
xchg
mov
pop
sub
inc
aam
pushf
sbb
imulb
mov
mov
decb
jle
sbb
xchg
push
repnz
fdivrl
sbb
lods
inc
pop
test
ljmp
das
shrl
std
fnsave
aas
lds
sbb
lret
mov
mov
andl
xchg
in
stos
dec
in
aaa
cmpsl
xor
mov
jbe
scas
jns
jb
adc
dec
xchg
fstps
rcrb
sub
xor
xchg
jb
pushf
aad
inc
movsb
pop
test
sbb
rclb
std
enter
cmp
lods
ljmp
lcall
jae
loop
insb
mov
mov
jbe
mov
xchg
mov
push
mov
ret
mov
xchg
cltd
xlat
idivb
imul
xor
lret
stos
or
mov
or
add
hlt
lods
push
ret
mov
jne
std
aad
insl
stos
adc
mov
mov
pop
adc
xchg
stos
aas
sbbb
dec
in
push
test
mov
and
mov
in
push
in
addr16
js
test
jmp
push
in
mov
mov
and
xchg
and
or
mov
cmp
shrl
mov
push
clc
pop
cmp
pop
sub
dec
das
sbb
lret
jb
mov
push
scas
mov
scas
dec
add
mov
mov
and
add
arpl
push
cld
ret
je
xor
mov
adc
aam
dec
push
ds
outsl
jmp
aaa
mov
push
mov
pop
rcr
xchg
mov
jno
cmp
sbb
in
push
pop
jno
cmp
aas
xchg
cmpsl
inc
mov
in
jae
mov
mov
xor
insl
cmp
inc
in
iret
aad
sbb
mov
lret
stc
xor
sahf
ljmp
leave
aad
jecxz
mov
xor
mov
jp
add
decl
ljmp
mov
out
mov
pop
pop
sbb
mov
xchg
loop
sub
jo
push
jle
mov
fadds
sbb
or
mov
lods
sub
xor
mov
adc
mov
inc
push
shld
pop
stos
out
cvttps2pi
pop
rcrb
xchg
loope
test
jae
xor
outsb
cltd
and
sbb
rorb
iret
cmp
leave
fdivrp
jle
push
add
in
jmp
xor
ljmp
lret
xchg
gs
loop
jo
popa
adc
xor
pop
gs
xchg
jmp
and
js
lods
mov
icebp
sbb
fldt
xrelease
xchg
out
jmp
cmp
jl
outsb
jecxz
or
cmp
aam
pop
jp
mov
enter
push
mov
fildl
and
stos
pop
cmpsl
test
mov
jae
push
cmpsl
mov
xlat
mov
sub
test
iret
jl
aas
std
pop
and
jecxz
imul
in
and
or
inc
push
dec
rcrl
orb
mov
mov
mov
pop
mov
mov
push
sbbb
inc
aam
lods
lods
mov
mov
rcrl
stos
mov
jae
into
push
jp
add
cmp
jl
lods
sbb
mulb
in
repz
test
and
xchg
jnp
push
dec
aam
add
mov
shrb
xor
scas
stc
les
jnp
or
loope
data16
jp
vcvtss2si
add
in
push
lcall
or
inc
dec
add
imul
shll
sarb
pop
sarl
sub
push
jecxz
sahf
or
dec
jbe
into
xor
call
data16
xlat
rclb
inc
out
lret
daa
or
dec
cld
ljmp
xchg
add
je
stc
mov
sarb
lds
mov
push
outsl
or
xor
jb
and
sti
aaa
rcr
shrl
addb
in
ret
sbb
or
shll
and
mov
xchg
je
pop
mov
ret
faddp
sub
iret
xchg
mov
mov
or
fnsave
out
push
and
sub
inc
add
push
imul
scas
xchg
mov
mov
add
insb
mov
dec
xor
push
pop
xchg
nop
mov
idivb
loopne
dec
and
movsl
push
stc
divl
lret
rclb
cmp
jmp
repz
or
inc
push
cli
int3
xchg
lea
daa
mov
cld
xchg
in
mov
ljmp
test
dec
sub
adc
icebp
fdivrs
les
sti
gs
xchg
or
or
pop
and
rorl
out
xchg
flds
cltd
mov
inc
jp
daa
les
pop
mov
mov
mov
lret
add
pushf
jl
clc
lock
jae
loope
das
push
mov
out
lock
out
pop
add
arpl
push
cmp
or
sub
aad
sbbb
ffree
mov
aas
jae
xor
mov
and
fidivs
jmp
addr16
mov
jo
mov
jg
xor
mov
insb
xor
adc
jp
cmp
pop
idivb
cltd
pop
sub
inc
bound
and
or
sbb
mov
jbe
xor
adc
xor
mov
aas
jne
push
dec
xor
je
insb
cs
out
or
pop
pop
xor
jo
scas
pop
or
daa
mov
pop
mov
mov
push
mov
aam
jbe
xchg
jae
mov
rolb
xor
mov
pop
cmp
daa
mov
stos
and
mov
enter
adc
dec
or
jne
and
pop
adcl
mov
jg
jae
xor
cmc
addr16
sub
sahf
lods
pop
or
orl
push
sti
data16
daa
jecxz
mov
rcll
push
mov
add
push
movsb
jbe
xor
dec
idivb
test
pusha
mov
cmp
loop
mov
add
sbb
xchg
lds
movsb
jae
mov
pop
icebp
ret
nop/reserved
mov
sahf
push
into
movsl
mov
sahf
push
mov
pop
pop
lahf
icebp
adc
dec
lds
stos
outsb
dec
icebp
add
lcall
mov
addr16
xchg
aaa
ficoml
es
pop
scas
aas
mov
sbb
test
sub
cld
sub
xchg
push
or
inc
inc
push
pop
cmp
push
sbb
and
push
shll
and
outsb
sub
xor
adc
dec
mov
sbb
int3
mov
sbb
or
and
nop
push
or
pop
jo
push
or
push
or
frstor
dec
loop
add
inc
dec
push
and
adc
loop
sub
insb
xor
inc
sbb
decb
cli
push
ret
jmp
push
or
lret
inc
mov
dec
lahf
outsb
ljmp
jle
push
clc
fmull
pop
mov
xchg
mov
dec
mov
aad
push
xor
subb
imul
inc
mov
sub
push
popa
ljmp
mov
mov
popf
mov
xchg
jge
lods
mov
xchg
fwait
cmpsl
sub
inc
sahf
or
neg
insb
in
jecxz
mov
or
sub
mov
mov
ret
inc
pop
xlat
jl
test
ret
push
and
xchg
jns
fists
bound
inc
push
icebp
ficomps
or
outsl
stc
push
xchg
mov
jnp
into
lahf
cmp
mov
dec
leave
lahf
or
mov
cld
shl
stos
xchg
popf
xlat
jns
dec
lds
mov
lds
and
add
paddq
mov
mov
cmp
mov
orb
cmp
test
xor
out
in
cwtl
fstp
imul
sbb
sub
sub
jp
repnz
cli
insl
mov
sahf
xchg
pop
inc
and
into
sbb
push
aaa
test
pop
jle
pop
mov
aaa
es
ja
cmp
js
in
inc
jmp
push
test
aad
mov
repz
std
add
es
out
jp
sbb
jne
jns
xor
and
call
add
xchg
cmp
inc
push
push
out
ja
data16
jg
push
push
pop
clc
mov
push
lahf
inc
test
xchg
xchg
cmpsb
pusha
jnp
ljmp
sub
push
add
push
push
sub
sbb
daa
push
inc
sub
or
xor
pop
mov
push
push
and
adc
es
or
sub
cmp
je
mov
mov
dec
mov
test
jo
out
adc
adc
sbb
movsl
in
rorb
cmp
fistl
mov
imul
outsb
mov
inc
add
adc
mov
mov
and
sahf
push
cs
cmp
xchg
cmp
mov
fmuls
and
sub
inc
pushf
out
cmpsl
xchg
mov
cmp
and
out
xchg
sub
cld
popf
mov
dec
sub
xchg
sbb
stos
das
dec
add
and
dec
pop
cmp
repnz
inc
loopne
push
dec
push
inc
jae
aad
test
inc
stc
and
dec
mov
or
fildl
mov
cmp
out
hlt
fnsave
or
jle
cmp
js
adc
int
out
jae
sub
pop
pop
loop
inc
shll
popa
mov
fidivl
jo
out
xchg
insb
pop
and
leave
arpl
xchg
pop
data16
lods
or
mov
sahf
into
sbb
inc
pop
iret
xor
jns
leave
pop
sbb
cmp
mov
sbb
bound
popf
jl
add
rcrb
aas
xchg
data16
repnz
sub
xlat
xor
int3
mov
outsb
stos
xchg
jp
mov
mov
inc
pusha
shlb
fwait
cmc
loopne
cmp
mov
inc
sub
test
outsl
insb
dec
sahf
dec
pop
pop
sti
movsb
lcall
ss
lock
mov
push
das
pop
addr16
push
mov
stos
ljmp
dec
aaa
shl
aaa
pushf
mov
stos
in
rcrl
xchg
stos
rorw
loope
lds
outsl
shrl
inc
popf
inc
fnsave
adc
push
les
rorl
call
lahf
decw
push
shlb
adc
adc
addb
hlt
push
pop
stc
loope
movsb
imul
iret
xor
push
fcomps
shrb
jmp
loop
add
jnp
sub
aas
shr
je
cwtl
les
and
gs
or
pop
xchg
cmp
lcall
jecxz
in
and
icebp
scas
repz
pop
lcall
cmpsb
xor
jns
stos
or
sbb
cwtl
fs
mov
sub
mov
sub
addr16
fldcw
pushf
jp
or
add
push
aad
mov
rcrl
inc
jnp
sub
addl
inc
dec
fs
loope
xchg
xchg
into
mov
into
dec
or
into
into
or
or
push
push
arpl
sbb
sub
shll
aam
jne
mov
jo
sub
inc
mov
or
adc
outsb
pop
fmull
sbb
pop
test
outsb
sbb
stos
icebp
fdivrl
xchg
int
and
pop
cmpsl
mov
pusha
les
insl
aad
fbstp
push
lcall
repz
lret
cld
adc
sbb
repnz
aam
or
pop
pop
call
xchg
lret
addr16
movsl
bound
or
rorl
xor
ljmp
jne
pop
imull
mov
loopne
pop
jp
jbe
push
nop
ljmp
int
int3
mov
pop
fidivrl
clc
mov
or
adc
adc
jle
ds
ja
out
xor
mov
cld
sahf
ja
andb
push
inc
xchg
movsb
movsl
in
jno
push
sbb
mov
in
insb
subl
enter
sbbl
popw
pushf
aaa
repnz
or
jge
cmp
gs
test
adc
add
cmp
and
push
cmp
cld
insb
lods
pop
jmp
aaa
out
aas
sub
pop
aam
int
or
test
jns
xchg
cmpl
and
loope
jo
stos
jl
repnz
loope
cmp
popa
jnp
push
mov
or
jge
pop
aas
lods
sub
mov
ljmp
ss
and
cmp
sbb
jns
je
or
cld
cmp
mov
addr16
push
adc
fadds
jge
xor
xor
in
xorl
lcall
and
in
jno
ja
xchg
sbb
lahf
stc
outsl
xor
add
pop
xchg
mov
adc
xor
inc
xor
hlt
push
or
rcrl
js
es
iret
out
cld
icebp
lods
adc
add
bound
xlat
sti
mov
jae
sub
add
adc
sub
pop
sahf
cmp
sbb
mov
or
shrl
dec
aaa
mov
je
je
mov
popa
in
out
push
cmp
push
fstpt
std
data16
icebp
test
sbb
scas
push
orb
mov
mov
sbb
int
fimull
push
outsb
sub
adc
xchg
dec
mov
dec
ss
ja
push
test
sub
or
rcrl
sub
push
adc
lret
ja
insb
push
inc
sbb
push
xchg
add
loop
inc
and
inc
mov
jno
aas
fisubl
popf
loope
ficompl
imul
lret
sbb
jae
mov
aam
ljmp
out
loope
xor
je
pop
ret
sbb
loope
xchg
mov
fwait
dec
xabort
xchg
mov
andl
andl
fstpl
aaa
xorb
cmp
adcl
dec
mov
xor
jnp
mov
adc
xor
xchg
cmpsb
test
push
jne
mov
pushf
mov
xchg
sub
aas
in
pusha
fsubrp
outsb
test
pop
inc
cmp
adc
outsl
jo
xchg
out
sub
push
adc
and
jb
imul
push
or
sbb
inc
std
out
mov
xchg
mov
repz
jns
fs
mov
mov
rcrl
ljmp
dec
push
daa
sahf
jle
gs
lahf
fimull
sbb
pop
sub
popa
imul
out
xchg
test
dec
xlat
cwtl
push
sbb
loopne
jle
push
sahf
ds
xor
inc
movsl
push
push
repz
pop
cmp
ljmp
fcomps
mov
fstl
stos
xor
dec
repz
mov
mov
cbtw
xchg
jp
sub
jae
mov
clc
std
dec
movb
push
inc
into
out
cmpsb
mov
jns
movsb
insb
fstl
or
ret
mov
lea
adc
mov
adc
mov
sbb
or
dec
in
cmp
addr16
lods
jl
repz
cld
mov
mov
xchg
sbb
ljmp
inc
inc
xchg
out
inc
mov
xorl
mov
push
cmc
pop
push
mov
dec
sub
pop
xchg
push
aad
add
movsl
push
repnz
ja
inc
in
in
push
or
cli
sti
popf
dec
push
arpl
repz
js
cli
nop
fimuls
popa
mov
push
mov
pop
lods
lods
mov
mov
xchg
add
xchg
aaa
jns
cld
pop
aaa
sbbl
imul
adc
sub
test
dec
sub
iret
scas
jnp
xlat
push
cmp
mov
jmp
ss
dec
testl
pop
push
or
mov
adc
push
xorb
aas
cmp
push
xchg
sbb
cli
mov
insb
fstp
pop
pop
mov
loope
repz
mov
mov
xlat
dec
sbb
xor
lret
pop
mov
hlt
test
cwtl
dec
in
mov
std
push
and
and
jo
mov
mov
movsl
pop
inc
das
mov
mov
std
mov
sbb
or
dec
fisubrs
and
mov
mov
sub
sub
cmc
sti
push
inc
jns
jle
pop
dec
popa
sub
xchg
dec
lock
dec
xchg
lahf
fstps
mov
stos
sbb
jmp
orl
cld
xcrypt-ofb
cmpsl
lods
sub
lea
inc
sbb
aad
inc
iret
xchg
xchg
xchg
cli
cmp
and
test
fs
out
push
adc
test
mov
repnz
fwait
mov
push
ss
jecxz
mov
mov
ror
test
inc
cmpsl
inc
sarb
shr
xchg
pop
fstpl
fidivl
inc
nop
rolb
lea
gs
adc
sub
mov
test
sub
jno
adc
loopne
push
jbe
pushf
clc
inc
scas
mov
icebp
xchg
sbb
js
inc
adc
xor
sbb
and
icebp
call
popf
mov
lock
ret
mov
je
mov
dec
cld
jmp
movsl
lock
push
push
mov
gs
xor
inc
stc
mov
lret
xor
xor
cmp
popf
cmp
jo
daa
jbe
add
push
popa
outsb
push
dec
das
inc
mov
insl
dec
pop
sbb
add
push
inc
hlt
shrl
andb
stos
out
lcall
xchg
pop
stc
ja
lret
fwait
xchg
leave
and
mov
cmp
xchg
or
jns
data16
loopne
jbe
lds
cmp
xchg
out
js
pop
les
push
inc
push
cmpsl
std
adc
pushf
ja
ljmp
frstor
adc
scas
dec
mov
sub
push
jae
push
shrl
jns
sub
arpl
in
repnz
push
sub
addr16
aam
repnz
movsb
into
or
add
stc
mov
xor
outsb
mov
std
fildll
sbb
je
pop
jl
fsubrs
dec
cltd
mov
pop
lcall
sbb
inc
sahf
push
cli
push
shlb
das
jo
pop
dec
inc
out
or
mov
call
cmp
shrl
push
push
pop
jmp
jge
leave
das
stos
xchg
sbb
adc
shrl
mov
shlb
pop
or
mov
in
fdivrs
push
sub
add
adc
jmp
cmp
sub
cwtl
dec
mov
mov
mov
movsb
xchg
and
call
inc
fistps
fdiv
std
push
jns
rcr
pop
push
pop
sahf
xlat
insb
imulb
js
xchg
sub
add
cmpsl
in
out
lahf
imul
dec
jmp
xor
ss
addb
mov
lret
dec
xor
add
fwait
lret
sbb
mov
orl
sbb
mov
xchg
jge
cld
and
fsubs
sbb
xchg
mov
cld
decb
adc
sub
xchg
incl
aaa
fst
ljmp
mov
jno
xchg
adc
cmp
and
jbe
aad
int3
lock
pusha
cli
in
js
fcomps
mov
fxch
lds
xchg
cmp
mov
ret
cmpsb
dec
pop
mov
lods
stc
stos
fbld
hlt
inc
sahf
dec
rorb
dec
fwait
inc
or
push
add
cmpsb
add
popf
inc
jne
or
test
push
inc
jle
nop
cmpsb
mov
inc
movsl
cmp
dec
dec
lahf
addr16
add
stc
jnp
leave
xor
push
stos
mov
adc
mov
cwtl
jbe
lods
and
bound
shlb
out
and
inc
popa
pop
mov
insl
xorl
push
inc
vmread
outsl
cmp
inc
outsl
mov
hlt
xchg
ja
inc
outsb
push
or
mov
aaa
lcall
xor
push
and
lock
imul
mov
mov
xor
mov
cltd
inc
and
jo
inc
mov
jmp
or
mov
sub
cmp
sbb
js
popa
sar
jecxz
mov
out
cmp
lcall
scas
jb
out
cmp
or
jmp
lcall
mov
pushf
outsl
pop
inc
jne
cmpsb
ja
loope
sub
sar
call
sahf
in
dec
in
pushf
leave
dec
cmp
hlt
xor
insl
sub
stos
push
pushf
mov
jg
jne
jne
pop
pop
mov
sbb
pop
cmc
cs
inc
sub
pop
aaa
popa
xchg
rep
je
fisubrs
add
call
and
aas
sbb
in
fwait
or
adc
nop
push
cmpsb
icebp
in
push
sbb
push
mov
repnz
mov
sbb
aam
aaa
dec
int3
pop
mov
adc
xor
xor
cltd
cwtl
stos
sbb
and
aam
sub
xchg
inc
cld
fstps
rcrl
lods
stos
out
js
pop
cmp
shll
lret
cmovs
in
icebp
mov
sbb
lods
pop
dec
cmp
add
loope
outsl
or
cmpsb
and
xchg
fnstsw
xor
xchg
ja
dec
push
mov
outsb
cmc
rcr
aad
jae
lock
add
outsl
jbe
insl
cmp
xor
or
outsl
and
repz
cli
mov
add
lret
pop
cld
xchg
dec
int
shlb
clc
ds
mulb
stos
gs
lcall
jecxz
lods
rcl
notb
scas
push
xor
mov
or
mov
adc
shrb
push
ljmp
xor
xchg
inc
add
cwtl
xchg
sub
pop
mov
push
pop
push
jl
mov
cmp
das
dec
out
repz
call
mov
adc
ja
lret
rcl
jl
xchg
sub
inc
fistps
and
adc
popf
fwait
xor
and
dec
lods
sbb
loop
hlt
out
das
jmp
mov
addr16
outsb
nop
fld
add
push
jmp
incb
rol
lock
ljmp
scas
dec
mul
sahf
gs
stos
mov
lds
daa
outsb
add
test
ret
adc
lods
std
test
jne
dec
cli
insb
stos
push
dec
in
iret
xor
cmpsl
mov
adc
mov
movsb
sub
jo
sbb
cli
adc
popa
cmp
enter
adc
cmp
cmp
into
xor
mov
mov
jecxz
push
push
pop
push
insb
cltd
sub
iret
xorl
sti
aaa
shl
fistpll
pop
cmp
nop
sub
xchg
and
ljmp
mov
jno
les
push
mov
dec
jmp
add
pop
cmp
leave
pop
pop
push
and
cmp
sub
mov
adc
inc
xchg
pop
xchg
mov
ret
xor
add
mov
push
nop
lret
inc
jecxz
ficomps
adc
pop
mov
mov
mov
xchg
jae
xchg
rcrl
add
mov
ret
adc
xor
fcmovu
test
sbb
out
testb
lret
mov
imul
push
jmp
adc
stos
or
push
fnstsw
cmp
jmp
jecxz
xorl
lahf
mov
fadds
mov
jge
scas
sbb
xor
cmc
pop
in
int3
sub
mov
stos
insb
mov
mov
adc
stos
rcll
mov
or
nop/reserved
mov
and
rcr
pop
fdivp
mov
mov
daa
insl
sub
cmp
lds
mov
push
aam
fwait
pop
cmp
xor
out
xor
cmpsb
cmp
jae
mov
mov
test
cmp
cvtps2pd
enter
add
addr16
sbb
shlb
ss
xlat
or
mov
add
ficoml
lods
xlat
mov
loopne
stc
out
cld
and
or
adc
test
scas
mov
sbb
cld
ds
or
add
test
fistps
mov
mov
shlb
icebp
jbe
dec
in
sbb
fisttps
xchg
push
and
ss
or
mov
inc
pop
mov
mov
jmp
push
mov
js
add
iret
adc
jmp
adc
sbb
mov
arpl
xchg
xor
xchg
sub
mov
fwait
jmp
adc
das
fisttpl
xor
jp
aam
lret
cmpsl
jg
xchg
jb
or
pop
dec
dec
jne
imul
mov
xchg
xchg
lret
jg
test
cmpsb
fisttps
cs
je
shlb
cmp
test
dec
jbe
or
in
sti
xchg
push
jg
push
push
and
mov
out
mov
cmpsl
push
test
adc
cmp
int3
in
pop
mov
mov
orb
in
test
lock
xor
sbb
xor
test
push
vminps
inc
sti
aas
and
and
jge
das
inc
push
or
push
cmpsl
pop
in
xor
outsl
mov
int
cwtl
push
xchg
mov
fcomps
daa
aam
dec
repnz
int
out
xor
mov
pop
xor
sub
in
popa
jp
adc
inc
ret
stos
int3
xchg
lock
push
pop
pushf
jmp
cmp
testl
icebp
fdivrl
push
dec
jge
mov
repz
repnz
fdivrl
mov
jp
jb
xchg
cmp
fiaddl
mov
pop
ss
outsl
enter
sbb
mov
rclb
push
mov
mov
xor
aaa
in
out
std
mov
int3
in
cmp
xor
push
xor
xor
mov
push
xchg
mov
clc
sub
sbb
xor
mov
add
loop
icebp
pop
mov
fs
shrl
pop
mov
mov
shll
out
sub
testl
lods
aaa
mov
lock
pop
jl
aaa
or
add
jno
mov
push
sahf
mov
ja
fmull
gs
fcompl
mov
or
sub
fstpt
fmuls
insb
xor
add
cmpsl
out
ds
xchg
cmp
lret
xacquire
pop
xchg
icebp
lret
pop
pop
cld
xor
imulb
mov
and
jbe
out
mov
inc
out
or
cmp
pop
inc
lcall
aaa
inc
aam
rorl
xchg
push
pop
sahf
ret
sub
push
mov
xchg
mov
pop
incb
dec
push
stos
mov
loopne
ljmp
or
lcall
push
sbb
jmp
add
cmp
cmp
loop
xchg
jne
cmp
fwait
cmp
xchg
xor
mov
rcr
mov
test
or
sub
mov
mov
daa
pop
dec
adc
ficomps
inc
pop
popa
push
fsubrs
push
cmp
pop
in
je
lods
cmpl
loopne
in
sub
leave
mov
mov
into
jae
fnsave
ja
jl
shrl
notl
or
mov
dec
sub
test
mov
pop
sar
mov
jmp
adc
xchg
dec
sub
shrb
repnz
int3
sarb
mov
out
out
xlat
jb
incb
sbb
sub
mov
test
cmp
inc
lods
and
xor
sbb
xchg
pop
and
loopne
adc
sub
imul
push
pop
addr16
push
or
mov
test
xor
push
add
divb
dec
outsl
mov
ja
mov
out
bound
mov
cmp
loope
push
and
pop
push
clc
mov
cmpl
cld
mov
sbb
movsb
inc
andb
add
sbb
and
mov
int3
dec
arpl
divl
inc
shr
jecxz
sarl
pop
mov
inc
arpl
loop
ret
inc
dec
aas
fstpl
sub
mov
dec
mov
bound
push
shrb
jae
xor
cmp
test
mov
fwait
call
stc
inc
repz
adc
and
sbb
pushf
sbb
or
stc
mov
imul
jg
jno
mov
push
xchg
lahf
popf
iret
scas
or
in
scas
mov
sbbb
fiadds
cmc
fmuls
inc
xchg
fstpl
jns
fsubs
cmp
and
outsb
call
sbb
dec
and
mov
pop
add
addr16
add
mov
call
sub
icebp
push
sub
int
pop
jge
pop
jno
nop
in
bound
mov
and
sbb
fisttpl
inc
je
int
ss
pop
sbb
mov
or
daa
dec
push
sbb
test
mov
pop
mov
shrl
inc
filds
enter
gs
ds
push
adc
sbbl
dec
dec
js
je
test
fnstsw
jnp
cmc
pop
sub
sub
jbe
push
out
dec
push
mov
pop
ljmp
les
mov
mov
xor
scas
mov
pushl
sub
mov
ret
dec
dec
cli
and
push
jno
popa
test
cmp
add
inc
movsb
mov
aas
fs
shrl
xchg
add
popf
jmp
test
pop
mov
add
mov
xchg
ret
inc
idivb
lcall
filds
adc
lock
sti
in
dec
and
lods
pop
mov
outsl
outsb
cmpsl
fistl
xchg
in
mov
xchg
stos
jb
mov
out
cmp
insl
xor
mov
xchg
xorb
jl
pusha
lods
and
outsl
arpl
xlat
les
ffree
xchg
movsb
jmp
lea
pop
and
add
ret
mov
fs
mov
fwait
xor
push
icebp
enter
ficomps
or
inc
cmp
lret
and
lock
dec
xor
or
inc
iret
clc
push
stos
pushf
mov
pop
pusha
sahf
dec
and
lds
pop
decb
jg
cltd
cmp
push
cmp
xor
call
mov
movsb
push
mov
pusha
sub
xchg
fidivrs
fucomip
xrelease
test
lret
pushf
mov
test
call
sbb
pop
mov
mov
xorl
es
out
loope
jle
xor
sub
sub
push
pop
sub
jo
pop
fsubrp
dec
push
fimull
adc
lret
push
or
push
ret
cld
push
push
jmp
jge
repz
or
and
xchg
adc
popf
jne
inc
leave
add
jbe
stos
sub
push
mov
mov
cwtl
ja
cli
mov
jb
int3
test
jl
divb
jnp
mov
add
sbb
dec
mov
inc
aaa
in
dec
fucomp
mov
mov
jbe
dec
mov
mov
mov
jecxz
mov
sub
jp
sbb
and
sbb
shll
pushf
stos
repz
ficomps
iret
jle
aas
jo
adc
sbb
adc
scas
rcrl
call
out
das
lea
or
insl
repnz
sti
xchg
jecxz
mov
cmp
popf
rorb
sub
xlat
stos
sbb
push
es
fcmovne
mov
or
jns
mov
scas
mov
cli
adc
pop
mov
es
sub
pop
inc
fidivl
into
hlt
dec
adc
cmp
aad
pop
mov
test
les
stos
bnd
pop
inc
jecxz
js
cmp
dec
jb
dec
push
jmp
call
js
cwtl
push
push
mov
stc
aas
add
add
out
dec
cmp
pop
movsl
arpl
andl
xor
sub
cmc
push
jb
inc
iret
mov
das
mov
push
jecxz
out
and
shl
cli
adc
mov
cmc
iret
xor
xchg
adc
lahf
xchg
sar
addr16
adc
add
sti
adcb
jns
cld
sub
icebp
jb
xor
in
cwtl
xchg
into
add
js
insl
call
popa
inc
and
push
ja
mov
adc
inc
insb
cmp
sub
mov
out
andb
and
jo
and
pop
push
ret
rol
ljmp
jecxz
or
lret
mov
pusha
std
mov
push
xor
push
pop
test
pop
aam
sahf
outsl
cwtl
rcrb
pop
inc
push
sub
in
sbbl
adc
es
xor
dec
xor
mov
icebp
jne
pop
mov
fstl
xchg
mov
mov
inc
sbb
add
mov
jmp
je
movsb
les
ja
pop
jmp
in
jmp
cld
repnz
stos
sbb
dec
andl
into
cli
xchg
and
pop
push
ret
rcrl
xchg
ficoms
fildl
sbb
xor
ret
data16
arpl
add
and
jbe
xor
sub
fldl
jo
cmp
sbb
fnsetpm(287
ja
xchg
lahf
dec
cmp
cmp
rclb
insl
testl
fisttpll
sbb
jl
loop
dec
lcall
add
jno
int3
movsl
movsb
cli
add
cld
fcmovnbe
icebp
cmp
dec
shlb
sarb
or
mov
lods
pop
repnz
addl
out
sbb
and
xor
xchg
adc
push
adc
dec
ret
xor
inc
in
push
mov
push
dec
xlat
pop
aaa
xor
jmp
sub
mov
mov
jecxz
ss
loopne
cmp
insb
sub
hlt
addr16
sbb
loopne
mov
addr16
adc
ficoml
add
mov
loope
in
addb
clc
sub
sbb
adc
into
push
mov
adc
out
orb
sub
adc
and
xchg
leave
lahf
rol
inc
sbb
mov
cltd
adc
xchg
or
xchg
and
pop
adc
hlt
push
mov
int
movsb
mov
pop
iret
adc
hlt
or
adc
test
js
xor
xor
pop
push
sub
loopne
rolb
clc
negb
mov
adc
pop
xor
insl
add
adc
mov
stos
bound
mov
fbstp
test
addr16
stos
adc
out
test
push
aam
mov
cmp
push
test
enter
and
test
addr16
test
hlt
and
or
in
push
xchg
inc
bound
xor
sub
jb
int
mov
sub
ss
xor
enter
sbb
xchg
xor
push
xchg
push
loopne
ret
roll
inc
call
aas
mov
dec
fidivrl
add
stos
mov
je
mov
rorb
scas
xchg
mov
in
sarb
lds
dec
mov
in
mov
bound
ja
je
testb
arpl
cmp
testl
sti
repnz
mov
nop
std
jne
repz
dec
pusha
mov
cmp
ljmp
xchg
add
leave
in
outsb
cpuid
add
mov
fsubl
xor
cmp
push
xchg
push
outsl
arpl
jle
sbb
xchg
or
adc
lahf
mov
je
jb
rorb
inc
mov
adc
and
ds
aas
in
cmpsl
mov
jno
stc
fwait
rorb
shrb
les
adc
mov
dec
push
inc
ja
pop
dec
add
or
out
dec
adc
lock
adc
lar
repz
ds
lods
aaa
out
repz
enter
adc
clc
or
and
inc
movsl
sub
pop
mov
mov
fadds
cmp
test
std
stos
nop
jge
push
mov
dec
ja
xchg
aaa
fsubl
aas
lret
fisttpll
cwtl
or
xor
shrl
orb
call
iret
nop
jge
stc
mov
push
insb
dec
je
in
xor
hlt
jnp
mov
fwait
enter
jae
jg
adc
testl
lods
push
cmc
push
daa
xchg
cmpsb
mov
in
push
jmp
inc
push
pop
jle
outsb
popa
mov
xchg
movsl
das
add
dec
push
and
cltd
jae
mov
or
dec
repz
movsb
scas
andl
xor
xchg
mov
lret
jno
jge
rcr
cli
add
repnz
adc
arpl
lahf
pop
lret
cmp
mov
iret
pushf
mov
inc
icebp
test
bound
sbb
mov
jmp
sbb
xorl
jno
add
sbb
int
sbbl
mov
imulb
movsl
jecxz
pop
shll
cmpb
dec
dec
hlt
dec
out
mov
dec
lds
inc
xchg
test
pusha
xor
xchg
sub
mov
cmp
xchg
out
cltd
xor
inc
mov
leave
lret
cmc
out
addr16
lahf
jne
fldt
stos
sub
xor
cltd
adc
fistps
inc
push
pop
cmp
xor
aad
repnz
test
rcll
data16
outsl
push
adc
mov
in
fucom
stos
or
sbb
cmc
inc
xchg
enter
call
mov
push
or
aas
into
or
pop
inc
adc
xchg
sti
xor
pop
clc
mov
mov
cld
mov
jl
pusha
cs
or
push
pop
call
jmp
dec
mov
loope
aam
sub
mov
xchg
mov
dec
std
rolb
jg
dec
mov
fucom
imul
movsl
insb
insl
int3
shll
sbb
cld
push
dec
lret
cli
mov
push
faddl
std
xlat
adc
lcall
mov
lret
or
ret
mov
dec
jecxz
push
push
imul
cmpsl
arpl
xor
inc
outsl
cmp
xor
lock
ds
nop
pop
add
or
jo
out
flds
sub
out
stos
pop
insb
push
inc
sbb
add
jo
sbb
loop
pop
test
paddd
or
xchg
or
xor
incl
mov
out
jb
inc
xchg
fld
mov
jecxz
incb
cmp
int
rorb
cld
fimull
jg
dec
mov
lods
mov
xchg
popf
movsb
stos
add
pushw
inc
shlb
mov
lcall
mov
scas
ret
push
mov
sub
inc
ret
and
mov
movsb
sub
int3
add
lds
push
loopne
movsb
cmp
xchg
cmp
sbb
scas
mov
lret
in
pushf
sub
cmpsl
jne
out
push
pusha
mov
imul
add
das
ljmp
xor
cmpsl
pop
or
je
jle
push
out
mov
jge
out
mov
mov
arpl
jae
mov
rolb
or
call
mov
inc
cmc
scas
mov
add
ljmp
mov
sub
ds
and
inc
mov
pop
push
jp
testl
inc
cmpl
dec
mov
sti
push
fisttpl
mov
repz
dec
inc
pop
movb
inc
popf
ja
out
sbb
scas
adc
aaa
dec
cmp
ret
hlt
and
and
jl
icebp
mov
andl
imul
out
push
negl
jae
or
fs
mov
add
call
xor
sub
int
mov
jns
shlb
mov
cmp
je
or
xor
int
fcmovnu
add
sub
fdivl
mov
shrb
sbbl
dec
ficompl
test
hlt
xchg
fsub
xlat
arpl
adc
or
xlat
les
xor
add
cmp
mov
cwtl
sti
call
pop
pop
jns
inc
pop
inc
sbb
mov
jbe
divb
pusha
in
test
cwtl
mov
jp
cmp
pop
adc
mov
mov
or
shll
add
js
fstpt
adc
repz
sub
jp
sbb
dec
xchg
shll
test
jg
mov
inc
test
pop
mov
xor
or
xchg
xor
sbb
sbbl
mov
cltd
aas
lods
xor
fwait
jg
sbb
push
in
dec
or
scas
cmc
inc
push
std
add
clc
sbb
push
or
mov
mov
jmp
xchg
mov
mov
push
jo
xchg
cmp
xchg
inc
add
inc
lea
aam
sti
add
ret
sbb
and
mov
and
rcl
pop
out
xchg
add
mov
sti
add
xor
sub
dec
repz
xchg
nop
dec
jp
cmp
jne
out
push
mov
js
mov
pusha
std
mov
icebp
sbb
cmpsb
fucom
repz
dec
cmp
and
test
and
rcll
mov
test
or
fwait
sbb
xor
adc
stc
sub
mov
mov
push
int
xchg
shrb
xchg
adcb
rcl
enter
call
and
ds
bound
and
mov
frstor
repnz
or
inc
je
push
or
inc
inc
sub
ret
loope
mov
jne
mov
cwtl
inc
imul
dec
mov
loope
cwtl
addl
icebp
inc
enter
arpl
and
xor
aaa
adc
sbb
addl
stos
rorb
movsb
mov
and
sbb
push
stc
nop
lock
out
jae
xor
xchg
xor
sbb
stos
xchg
push
clc
sbb
xchg
dec
cmpsl
add
jo
test
sar
je
out
outsl
jo
mov
mov
sub
xlat
sbb
xor
cltd
mov
cs
int3
sbb
ret
cmc
and
imul
xchg
jne
sub
fwait
scas
dec
cmp
clc
or
cmpsb
xor
inc
test
sub
adc
add
movsl
fwait
loop
xchg
test
push
lcall
xor
mov
adc
sub
rorl
xchg
mov
leave
pop
cli
push
push
idivb
or
stos
push
ret
dec
and
andl
or
push
sti
mov
jl
cmp
test
sbb
mov
mov
aaa
fsub
adc
test
and
rcrl
push
xchg
insb
ss
ja
push
in
adc
push
xchg
mov
cmovge
imul
inc
sbb
lret
outsb
fiaddl
push
imul
adc
inc
cmp
cmp
and
cltd
sbb
data16
push
js
pop
jb
scas
and
xor
into
or
xchg
dec
scas
xchg
int3
jbe
jnp
and
ficomps
xchg
jmp
imul
adc
mov
fidivrl
rcrb
arpl
into
inc
clc
pop
in
and
std
data16
xchg
jmp
dec
pop
jl
mov
sub
or
fsubs
push
and
bound
shr
cmp
ds
popa
lahf
mov
push
sub
sbb
cmp
dec
repnz
test
and
dec
ret
jbe
cmpsl
ret
inc
ss
insl
jne
push
in
out
adc
addr16
dec
push
and
jbe
daa
xchg
mov
lods
subb
in
jge
jb
pop
mov
mov
push
mov
pop
adc
rcr
aam
lods
mov
faddp
lock
sbb
cmp
or
ljmp
mov
mov
nop
shl
ss
in
aaa
xchg
outsl
hlt
test
outsl
stos
and
mov
mov
lcall
xlat
jns
loopne
loop
or
cli
add
fcmove
sub
call
daa
scas
inc
dec
cmp
sbb
or
scas
mov
xor
jns
shlb
dec
scas
lret
inc
sub
dec
jg
lods
cmc
sub
pop
mov
pop
lahf
mov
repnz
sub
shlb
pop
xchg
or
lock
ret
push
jp
inc
xlat
push
in
movsl
dec
out
movsl
ret
insl
test
pop
stos
jmp
adc
xor
jmp
test
int
js
push
and
push
cltd
clc
push
pop
in
cmp
cwtl
loopne
mov
pop
xchg
int
lods
add
stos
mov
sbbl
in
fisubs
xor
dec
pop
mov
fsubrl
sti
push
xor
adc
mov
fldt
mov
enter
xor
jns
subl
cli
xchg
adc
insl
dec
cmc
cmpsl
jp
push
movsb
dec
push
dec
sub
inc
ficoms
pop
xchg
and
xchg
adc
pop
shll
repz
inc
test
dec
xchg
es
dec
lods
lahf
movsl
test
test
mov
mov
xor
in
inc
add
shll
jb
pushf
or
ds
int
cli
push
inc
test
movsb
add
xchg
sahf
movsl
sar
jo
adc
pop
jbe
push
push
dec
mov
fldcw
arpl
or
pop
fbld
push
cmp
mov
add
inc
sub
ret
mov
jecxz
dec
testl
xchg
notl
out
xchg
inc
fsubrl
loopne
stc
idivb
xchg
jb
and
sbb
fisttpl
mov
jp
ljmp
pusha
leave
mov
rorb
popf
inc
cld
insb
jl
imul
out
lret
mov
push
pop
jl
aam
mov
in
mov
mov
ss
fwait
lahf
test
xor
mov
cmp
int
push
inc
mov
sub
int3
icebp
nop
dec
push
repz
and
push
mov
add
mov
jne
xor
clc
mov
add
loope
add
inc
mov
mov
jae
add
fisubl
inc
lods
stos
pop
push
pop
fcoml
mov
pop
push
cli
cmp
pop
pop
ss
xchg
cmp
inc
cld
mov
stos
jp
iret
jmp
ja
dec
pop
push
imul
xchg
fwait
mov
cmovno
ret
xor
pop
mov
sub
pop
sub
dec
and
inc
loopne
push
or
or
dec
push
pop
insb
rolb
pop
nop
xchg
call
jge
incl
inc
rcrb
fs
mov
sbb
inc
push
jne
mov
sub
aad
mov
adc
orl
gs
in
mov
ljmp
test
push
mov
inc
fwait
jnp
and
push
mov
fcoml
aaa
xor
into
stos
test
sbb
push
testl
rcl
lret
mov
sub
inc
ds
cmp
push
pop
int3
leave
dec
fistl
xchg
and
mov
ja
lods
imul
fistps
dec
repnz
repz
add
divb
pop
jge
daa
sbbl
pop
cmc
lods
clc
std
mov
dec
xchg
xor
pop
xlat
xchg
or
push
sbb
or
aaa
and
sahf
mov
cltd
xor
mov
and
pop
inc
fnstcw
mov
and
push
cwtl
pop
pop
mov
push
and
loope
shlb
mov
xchg
mov
mov
fistpll
loopne
pop
xchg
push
ret
sbb
sub
and
inc
lahf
mov
mov
xor
int3
add
inc
xorb
mov
and
frndint
sub
cmpsl
shr
cli
inc
mov
test
mov
mov
jle
cmp
push
aaa
test
jne
jno
and
xor
shll
pop
push
xor
fsts
or
std
in
inc
into
inc
and
ret
negb
jmp
fsubrl
mov
jl
dec
push
cmc
sub
sbb
fcmovbe
je
push
cld
aaa
add
fld
push
aaa
inc
sub
jns
mov
xchg
fnstenv
adcb
push
dec
pop
aam
jmp
xor
or
adc
cmp
ficompl
nop
adc
add
out
outsl
mov
imul
gs
push
stos
jns
loopne
sub
push
pop
imul
fwait
cmpsl
ljmp
xor
xchg
pop
push
push
xor
lods
in
push
or
in
cltd
sbb
jmp
adc
cwtl
aas
sbb
pop
fbld
mov
jle
sub
fisttps
pop
sahf
dec
sub
pop
cmp
jo
clc
cmp
test
sbb
adc
stos
out
fldt
outsb
inc
scas
pop
or
cli
fnstcw
out
dec
fnstenv
xlat
int3
orb
xor
loopne
mov
out
cmpsl
scas
call
es
inc
mov
jg
int
stos
int3
test
rorl
mov
cmc
popa
push
into
jnp
rcrb
aas
faddl
mov
add
fimuls
pushf
das
test
mov
movsb
xchg
std
push
add
push
aad
notb
sbb
or
cmp
scas
icebp
cmc
add
loope
stc
sbb
xor
aad
int
adc
mov
or
cmp
mov
loop
cmp
sub
xchg
fsts
loope
jae
xor
mov
jge
call
pusha
xlat
cwtl
or
fdiv
sbb
hlt
pop
add
xchg
rcrl
pushf
movsb
jg
hlt
icebp
mov
jle
push
adc
sbb
and
es
mov
mov
xchg
out
sbb
mov
pop
push
fs
jp
mull
fdiv
outsb
gs
lahf
push
cmpsb
cmpsl
sti
cmp
aas
out
jo
dec
aas
in
mov
xchg
dec
mov
dec
repnz
dec
sarb
mov
int
jmp
mov
je
pop
push
fcom
ljmp
pop
aaa
in
push
arpl
movb
cmpsl
mov
sbb
ljmp
cwtl
mul
andb
mov
out
dec
mov
fildl
hlt
lret
repnz
mov
aad
adc
clc
pop
ja
test
dec
pop
jge
adc
add
add
mov
cmp
sarl
mov
xchg
push
shrl
inc
shl
out
mov
loop
icebp
movsl
inc
xchg
jle
test
pop
sub
call
and
outsb
xor
icebp
or
fstps
loope
shll
sahf
xchg
outsb
push
sti
jecxz
mov
fwait
nop
mov
ret
xor
inc
cmp
les
xchg
pop
cwtl
cmp
and
cwtl
xchg
pusha
adc
gs
dec
cmp
test
mov
icebp
mov
push
clc
jle
xor
mov
jo
dec
hlt
or
cli
popa
jb
mov
jns
fld
jnp
pop
lock
sbb
sbb
or
mov
adc
mov
or
shl
dec
in
fucomi
cltd
adc
mov
fldl
in
or
enter
dec
xchg
sbbl
adc
sbb
mov
lcall
sbb
daa
xor
pop
inc
insl
add
mov
xchg
movsl
test
dec
cmpsl
adc
in
jecxz
stc
repnz
mov
lock
dec
jge
xor
dec
or
add
jmp
push
mov
pop
cmp
fwait
out
mov
icebp
sub
and
aas
jecxz
test
mov
dec
loopne
repz
mov
dec
and
and
sub
mov
mov
adc
mov
mov
mov
xor
mov
and
das
add
lahf
sub
or
jmp
js
call
or
sbbl
sub
daa
cmp
jb
test
pop
xchg
or
test
cmc
shll
cmpsl
inc
enter
pushl
xor
les
cmc
adc
mov
in
fidivl
push
clc
nop
stos
xchg
cmp
sbb
hlt
adc
out
mov
mov
jecxz
fwait
and
pushf
push
fmul
pop
sbb
daa
push
pop
mov
push
ja
mov
cmpsl
lret
push
scas
test
movsl
lods
arpl
cmp
std
pusha
push
xor
clc
out
out
nop
scas
xorb
pop
or
push
lods
lea
push
icebp
movaps
xor
xorb
mov
sub
mov
test
and
js
and
lahf
rcrb
shl
push
and
cmp
push
adc
out
sahf
sahf
xor
sbb
jge
jp
std
js
les
scas
inc
jle
mov
xchg
je
fwait
jmp
ret
xchg
inc
cmp
sub
idiv
fisttpl
inc
mov
or
cmp
cmc
mov
cltd
lock
in
mov
push
sbb
inc
cwtl
lock
paddq
add
add
jle
aad
add
xchg
add
out
arpl
mov
sub
nop
subb
adc
mov
outsl
subb
mov
mov
lock
jle
sub
in
insl
pushf
call
mov
ja
mov
xchg
popf
pop
imul
add
sub
lret
cs
lock
sub
push
fisttpl
jae
push
cmpsl
data16
sub
push
out
subb
andl
add
push
mov
out
xor
add
push
jne
loope
add
call
mov
dec
jne
ret
mov
arpl
pop
test
je
stc
jmp
add
and
adc
xor
test
mov
das
movl
imul
in
pop
pop
push
and
inc
lock
mov
cmp
leave
xlat
es
neg
jne
movl
dec
clc
add
fistpl
sub
lock
popf
sbb
pop
add
pop
pop
mov
in
xor
pop
mov
iret
mov
rorb
xor
adc
push
cli
push
repnz
push
test
sub
jle
ljmp
dec
ljmp
inc
and
sahf
xor
arpl
test
aaa
push
mov
rorb
jo
addr16
pop
fisubrl
sarl
lock
xchg
inc
lret
sbb
std
mov
pop
inc
inc
lahf
outsl
push
addr16
lods
filds
sub
pop
push
cli
cwtl
jle
adc
push
or
or
fstp
sahf
sbb
jne
lret
mov
js
sbb
mov
dec
add
orb
stos
adc
cmova
inc
scas
cld
lea
sbb
and
mov
xchg
xorl
enter
dec
gs
stos
pop
push
jo
cwtl
mov
in
in
cmp
mov
fcompl
pop
xor
jmp
sbb
arpl
sub
jmp
jecxz
push
insb
cltd
xchg
and
shll
pop
out
cli
mov
scas
popf
xor
cld
dec
cs
js
inc
rcll
hlt
and
add
fs
sti
ret
scas
sub
push
lret
adc
push
pop
jne
shrb
lds
fs
icebp
xchg
rcrb
xchg
mov
mov
mov
hlt
sub
xchg
shrb
lcall
mov
flds
dec
int3
cmc
push
lds
lcall
sub
and
jb
inc
sbb
test
mov
push
lods
popf
mov
aas
inc
stc
lock
inc
inc
xor
fcompl
add
lea
cmc
cmpsl
fdivrl
sbb
scas
ret
mov
mov
cmp
sbb
mov
scas
mov
aam
lods
jl
dec
das
xor
movb
sbb
sbb
arpl
cli
in
fdivl
fsin
fs
sub
das
jae
mov
push
mov
stos
popa
jne
sti
pusha
test
push
mov
cmp
mov
mov
pop
mov
mov
inc
movsl
mov
fimull
xlat
in
and
mov
loop
jmp
addl
rclb
gs
mov
fs
push
adc
mov
aaa
js
mov
lcall
cmpsb
cmc
jne
pop
stos
mov
sti
popf
lock
in
adc
mov
imul
mov
enter
ja
xor
inc
mov
xchg
mov
lret
jno
xchg
push
imulb
js
push
jno
ja
sub
inc
sub
push
loope
pushw
xchg
jg
lock
inc
sahf
rcrb
enter
scas
pop
out
ret
rcrb
sub
cli
aas
and
outsl
fs
mov
popl
fisubrl
pop
aas
cmpsl
pop
loopne
test
cmpsl
pop
int
sub
inc
mov
push
rcl
aaa
scas
inc
mov
adc
inc
loope
or
xchg
and
mov
sub
sti
in
mov
mov
icebp
xchg
dec
fiadds
push
ja
lods
or
xor
and
mov
jns
int3
scas
fnstcw
fs
cmpsb
out
es
out
lods
fists
lahf
es
dec
inc
cmp
movsb
sbbb
sub
icebp
jbe
add
mov
push
stos
inc
in
cmp
mov
aam
xchg
xchg
push
push
jmp
hlt
test
in
ror
fisubs
stc
add
mov
lret
xchg
fwait
mov
mov
rol
xchg
jmp
cmp
rolb
dec
ja
mov
and
aaa
jecxz
rcll
test
lret
xor
jb
inc
lea
movsb
insl
and
xchg
iret
sbb
les
push
cmpsb
inc
mov
icebp
in
cmp
icebp
and
cmp
inc
stc
aad
xchg
shll
and
jne
test
sbb
pop
lods
insb
sbb
cmpsl
cltd
sub
dec
icebp
or
or
xlat
aas
and
fsubl
adc
cmp
sub
adc
sahf
in
mov
lahf
jno
push
scas
lret
mov
lds
inc
inc
fists
gs
and
pop
jp
pusha
fmul
inc
test
or
ret
fidivrs
and
pop
scas
lods
and
dec
test
loop
es
cmp
sub
lds
jmp
jl
sub
and
movsb
lea
ret
in
jb
dec
mov
mov
imul
jae
or
push
and
scas
out
push
push
cwtl
push
pop
dec
ja,pt
push
mov
push
pop
lret
addr16
into
adc
add
stos
bnd
xchg
mov
xor
rorl
aaa
mov
clc
cli
je
fnsave
popf
aam
mov
imul
std
lcall
mov
popa
xchg
aad
insb
fldl
mov
pop
and
loope
enter
dec
pop
incl
xchg
push
mov
mov
sbb
add
add
xchg
push
xchg
sub
xlat
and
and
xchg
ljmp
adc
inc
add
mov
add
pop
or
rorl
sbb
xchg
push
and
aaa
mov
test
jecxz
out
adc
or
jg
adc
cmp
divb
or
movsb
lahf
pop
hlt
dec
and
sbb
fs
cmp
andl
adc
test
inc
fld1
xchg
dec
jbe
out
iret
repnz
add
scas
ja
mov
out
loope
icebp
xchg
adcl
scas
push
repz
lret
xchg
xchg
lret
jne
mov
xor
mov
jbe
mov
lahf
jmp
pusha
add
lods
enter
sub
inc
scas
fidivrs
enter
popf
push
outsl
cmc
call
xchg
gs
popa
xor
jno
fbld
lods
add
sub
cmc
repz
push
pop
stos
xlat
xchg
stc
jo
test
cmp
dec
mov
sub
push
and
icebp
push
je
repnz
mov
int3
cmc
in
lock
lock
push
mov
rolb
stos
nop
sahf
xor
push
adc
fwait
paddusb
test
stc
shlb
cmp
mov
imul
aam
dec
push
fdivl
xor
jne
mov
cmpsb
aas
mov
or
lea
int
mov
mov
testb
insl
test
lods
jmp
sub
cmp
lcall
mov
inc
mov
sbb
add
int
add
sbb
bound
scas
outsb
adc
inc
ret
jns
imull
pop
jmp
jne
push
xor
pop
jbe
cltd
and
cmp
hlt
outsb
sbb
add
jae
out
in
dec
ret
dec
and
cld
cmpsl
xorl
stos
adc
repz
out
and
lock
add
inc
xor
mov
jbe
fs
loopne
jl
lods
movsb
mov
inc
popw
divb
lea
aas
scas
sub
cmp
push
shlb
test
pop
std
add
jmp
xchg
aad
xor
add
push
jp
xlat
or
dec
lods
mov
lock
popa
xor
mov
into
adc
cli
out
jmp
scas
pop
data16
sub
adc
inc
jge
adc
ljmp
mov
xor
pop
stos
lods
dec
leave
xor
dec
sub
sub
imul
jecxz
or
lea
cltd
mov
lret
loop
add
mov
add
out
xchg
xchg
lock
test
out
or
xchg
xchg
jle
sub
xlat
lahf
adcl
pop
cld
sti
and
clc
cmp
mov
pushf
xchg
lret
or
jno
sbb
cmp
loop
xchg
mov
scas
xor
dec
sub
sbb
mov
pop
cmp
incb
mov
and
inc
int
inc
push
int
ja
lcall
dec
push
movsl
push
clc
push
xor
test
popa
cs
arpl
int3
inc
push
mov
in
aad
xchg
ljmp
dec
sar
and
sarb
xor
pop
stos
pop
xor
es
sbb
push
jl
scas
mov
inc
rcr
xchg
lods
dec
pop
ret
push
inc
clc
pop
int
jl
sub
movsb
cmc
test
jle
sbb
pop
ljmp
aas
dec
sarb
cmp
jge
loopne
mov
in
xchg
les
xor
lea
mov
xor
fbld
mov
dec
shrb
fldt
mov
xchg
repnz
pop
and
jmp
lret
adc
and
mov
popa
movsl
mov
sub
loope
rcr
sub
fwait
inc
xchg
dec
lock
aaa
adc
xchg
jl
inc
mov
mov
xchg
insl
lds
push
adc
stc
sbb
scas
out
jle
repz
std
lods
rcrb
mov
lret
out
mov
add
lret
int
outsl
jecxz
mov
xchg
inc
mov
lea
pop
test
and
push
push
ret
or
mov
repnz
aad
ss
std
or
roll
scas
mov
mov
mov
jp
out
xchg
mov
mov
adc
pusha
cmp
inc
inc
movsb
xor
inc
outsl
pushf
mov
push
ss
flds
mov
and
pop
push
rcl
push
xchg
stos
adc
outsl
lea
cmc
sbb
adc
dec
shll
packssdw
jns
jl
jns
dec
cwtl
std
addr16
sub
dec
cmp
dec
mov
daa
lret
int3
stos
scas
mov
rol
cmp
sub
xor
lock
je
dec
int
fsubs
aam
xchg
mov
jg
mov
and
cmp
movsl
jp
or
rol
test
in
repz
or
mov
pop
push
je
cmp
insl
out
int
shll
jle
mov
xchg
ds
push
hlt
xchg
fmul
lret
je
jo
imul
cmp
pop
jle
test
shlb
add
pushf
jle
sub
daa
push
inc
cmp
popf
adc
movsb
iret
std
inc
test
ds
jbe
or
test
andl
and
or
rorl
adc
sub
loop
mov
out
inc
ljmp
loop
iret
mov
ret
mov
lahf
xchg
push
cmp
jge
jns
pop
faddl
cmc
sub
cs
mov
pop
xchg
sub
int3
jns
int3
mov
mov
and
add
push
xor
pop
push
xchg
and
jb
pop
cld
es
add
inc
pushf
push
lods
jle
jmp
mov
xchg
outsl
jno
out
cmp
push
outsl
jp
mov
push
push
xchg
popf
jae
shlb
stos
cld
xchg
ss
icebp
or
je
jecxz
xchg
mov
movsl
push
in
sub
cmp
mov
setns
mov
add
push
pop
jecxz
int
insl
test
sbb
lret
push
xchg
pop
ds
xchg
rorl
dec
mov
dec
lret
sub
dec
testl
mov
fidivrs
nop
sub
sarb
shll
push
shrb
cmpb
cltd
movsl
iret
cwtl
das
add
rcrb
popa
push
repnz
out
xor
pushf
mov
pop
daa
lret
fdivl
rcrl
dec
mov
push
dec
imul
cmpsl
nop
push
fs
int
pop
cs
pushf
adc
push
jge
cmc
rcl
std
outsl
pop
xor
mov
jne
pushl
sbb
xor
outsb
pop
add
inc
pusha
lds
daa
fisttps
and
frstor
movsb
cltd
adc
je
mov
dec
adc
mov
adc
push
jecxz
int
cmpb
inc
out
jmp
xor
cmp
add
sarb
dec
xor
xchg
popf
sub
mov
dec
or
mov
aam
pop
imul
add
lea
into
sahf
jmp
jnp
jmp
or
pop
int3
mov
dec
jmp
js
jp
out
pop
ljmp
repnz
push
mov
rclb
dec
mov
xor
ja
mov
sarb
add
repnz
xchg
sbb
daa
pusha
xchg
xlat
fnstcw
fldt
mov
nop
dec
addb
rcr
cli
or
cmpl
jmp
mov
rcrb
xchg
mov
test
xor
inc
out
fildll
mov
mov
mov
stos
sbb
out
xor
sbb
je
sbb
mov
leave
lahf
out
int
movsl
adc
lret
into
and
mov
sub
push
mov
sub
jbe
mov
repz
mov
rcrb
stc
xorl
inc
and
inc
inc
cmp
test
andl
adc
cmpsb
outsb
loope
dec
in
dec
insl
inc
rol
or
mov
xor
jge
mov
std
rorl
pop
pop
js
push
int
rolb
ss
add
pop
stc
jne
xorl
mov
xor
or
and
popf
in
jge
hlt
dec
loopne
movsb
pushf
sub
clc
sbb
out
pop
xchg
psrlw
mov
decl
pop
xor
inc
rorl
mov
cmp
sbb
add
adc
gs
xor
popa
cld
pushf
fisttpl
roll
jno
jnp
or
adc
daa
in
fcomps
imul
scas
test
push
jg
xor
bound
xchg
mov
adc
mov
xchg
inc
mov
jle
mov
in
rorb
into
jb
cmpsl
mov
mov
lock
pop
and
out
xchg
dec
jle
fldl
movsl
and
bound
sub
cltd
lea
pop
mov
andl
aam
push
repz
dec
pop
pushf
cmp
jg
sbb
push
arpl
jnp
mov
hlt
ds
push
leave
adc
sarl
iret
inc
dec
movsb
sbb
xchg
data16
add
insb
inc
cmp
pop
cmp
and
addb
inc
jb
int
fimull
jnp
ret
and
mov
cmc
xor
pop
pop
xlat
jno
ret
xor
rcrb
push
push
loop
mov
and
add
orps
lret
imull
test
sti
jo
mov
pop
jg
xchg
scas
f2xm1
jmp
lea
ss
mov
sub
or
pop
pop
pop
or
adc
cmp
push
adc
jbe
mov
xlat
out
out
xchg
sbb
les
pop
addr16
out
das
andl
shlb
xchg
mov
nop
leave
mov
add
push
add
xor
scas
enter
sbb
into
sbb
or
daa
xor
std
icebp
insb
aad
fildl
adc
push
lds
cmp
sbb
xor
sahf
pop
rol
inc
pop
inc
mov
jno
and
push
stos
loopne
xor
aas
push
insb
fldl
cmc
mov
popf
leave
xor
xchg
scas
adc
inc
lcall
movsb
xchg
shll
mov
scas
mov
sub
out
sbb
aam
push
shll
xchg
loopne
rcr
or
les
xor
mov
adcl
pop
out
in
add
divb
test
cmp
dec
add
cmp
or
inc
ret
movsl
daa
repz
add
das
cwtl
pop
mov
shlb
shld
pop
xor
xor
mov
test
cmp
jno
insb
repnz
sbb
inc
pop
fnsave
xorl
rcrb
and
mov
mov
xchg
xor
inc
sub
xchg
jbe
mov
mov
jmp
xor
cld
jle
pushf
sbb
sub
xor
outsb
pop
cmc
mov
outsl
xchg
sub
sti
sbb
roll
mov
and
push
scas
sbb
xchg
mov
inc
xchg
es
cwtl
add
movsl
inc
fmul
cmp
jecxz
inc
sahf
and
nop
mov
aad
push
ljmp
fsub
repz
in
test
je
imul
enter
dec
fldl
dec
cmc
jl
sub
into
lret
ss
lcall
insl
repz
ljmp
fbstp
int3
jge
xor
int3
nop
out
sub
push
insb
jecxz
jg
xor
and
shlb
cmp
xchg
subb
pop
jb
or
fisubl
stos
test
movsl
lcall
mov
push
mov
aad
jns
and
fidivl
add
rcll
adc
jecxz
adc
push
adc
xor
pop
add
dec
and
push
lea
loop
pop
clc
cmc
fwait
divb
jno
sub
sub
dec
outsb
mov
jmp
sub
pop
push
shl
jb
sub
shll
dec
xor
or
fdivl
adc
inc
mov
add
into
pop
incb
dec
fsubr
cli
jmp
mov
fisubs
outsl
xchg
jecxz
adc
adcl
add
sbb
and
and
leave
and
cwtl
or
sub
sbb
jb
iret
xchg
adc
add
cmpsb
dec
mov
test
add
xor
inc
push
movsl
pusha
cmp
cmpsl
mov
pop
and
pop
mov
int3
rorb
xor
repz
stos
xlat
adc
sahf
xor
xchg
adc
add
xchg
call
mov
repnz
stos
add
fnsave
lds
sub
sarl
sbb
adc
mov
aam
jmp
push
pusha
inc
in
pop
sbb
jae
pop
mov
das
ficompl
cmp
dec
fwait
hlt
enter
ret
ret
hlt
sarb
push
xor
push
fld1
jno
or
gs
xchg
outsb
popa
mov
sub
enter
push
flds
add
mov
es
pop
push
cmp
jg
je
add
pop
loope
popf
add
nop
rcl
sahf
xlat
jae
call
js
sbb
loope
inc
stos
gs
xchg
daa
xor
dec
mov
pop
inc
xor
movups
dec
fsubrl
jnp
jbe
xor
adc
leave
mov
fwait
add
push
pop
lods
fisubs
sti
xlat
imul
addr16
fdiv
pusha
aam
xchg
mov
cld
push
or
or
dec
popf
ss
and
mov
int
xor
xchg
imul
xchg
sbb
push
mov
pop
cmp
jb
imul
clc
pusha
cli
sbb
lea
into
lods
es
or
outsb
ret
or
cltd
push
fcoms
and
pop
aas
push
mov
pop
jb
addr16
lret
sub
in
mov
fsts
xchg
pop
pop
outsl
test
and
popf
dec
inc
sahf
dec
push
inc
xor
insl
inc
xchg
imul
stos
dec
xchg
mov
jp
xchg
das
sub
jmp
mov
xchg
imul
sbb
jmp
adc
dec
jae
mov
cmpsb
jl
lcall
movsl
mov
rorl
jno
mov
xchg
es
sbb
xor
push
aaa
inc
push
xlat
and
pop
sbb
js
dec
pushf
gs
push
adc
aam
adc
inc
dec
adc
ret
cmpsb
nop
or
and
leave
icebp
or
jg
and
cmp
mov
push
add
mov
incb
cmp
ja
sub
lcall
inc
fisttpll
lods
out
or
add
fidivrl
pusha
and
faddp
lret
sbb
sub
popa
out
in
jge
jl
inc
mov
iret
aam
ds
xchg
xchg
mov
in
xchg
and
mov
fcompl
add
push
pop
mov
jns
aas
scas
jne
cwtl
sahf
inc
cwtl
mov
or
sub
pop
aad
test
sti
out
loope
jle
or
out
out
popf
jge
jbe
lahf
imul
fidivs
push
in
push
sub
add
inc
adc
pop
cld
xchg
cvtpi2ps
gs
lret
pop
rcll
ljmp
test
xlat
sbb
mov
ret
pop
push
inc
pop
cli
xor
andb
or
lods
dec
out
in
dec
stos
fwait
push
loop
add
mov
jl
inc
cli
pop
leave
andl
mov
testl
aad
sub
outsb
jo
insl
mov
dec
sub
ljmp
pushf
jnp
outsl
and
xchg
lods
pop
pop
dec
lret
cmc
mov
ss
rcrb
add
jle
jmp
inc
xchg
lock
mov
lods
and
jno
scas
xor
sub
psrlw
sbb
pop
add
fwait
scas
aam
mov
movsb
push
cmc
xor
xchg
jmp
mov
aad
jecxz
mov
mov
dec
add
jle
das
adc
xchg
jmp
call
mov
outsb
jo
outsl
popa
rorl
add
mov
sub
jne
xlat
bnd
mov
or
push
lcall
xor
stos
ret
repz
lods
jmp
fbstp
inc
cmc
cmovns
outsl
mov
inc
jg
sub
in
int
int3
lret
jg
sbb
push
mov
add
mov
mov
in
lret
sar
mov
dec
and
popf
mov
adcb
xor
push
sahf
mov
rorb
mov
ss
jb
sbb
ret
imul
inc
xchg
push
mov
lahf
scas
mov
aas
mov
dec
out
inc
add
loope
jae
dec
mov
jle
inc
mov
gs
popa
dec
mov
pop
jmp
mov
fisttpll
sub
cmp
lahf
mov
xor
mov
pop
mov
ror
cltd
pop
jno
push
xchg
jp
jnp
sbb
pop
movsb
test
lock
sub
outsb
ja
fisubrs
ret
addr16
cmp
push
cmp
aad
push
pusha
iret
pop
dec
and
xchg
or
dec
stos
in
cltd
mov
jg
stos
stc
mov
sub
fiadds
dec
sbb
jg
cmovg
cwtl
lret
xchg
mov
mov
pop
dec
push
aas
mov
adc
sbb
fildll
inc
add
push
movsb
jnp
or
mov
or
into
push
in
dec
xor
mov
sub
fstpl
stos
into
jae
push
xor
inc
mov
jge
sti
mov
jl
out
inc
pop
sub
out
or
or
sbb
fstps
lcall
test
aad
inc
cwtl
mov
sub
xchg
mov
pop
mov
push
cmp
push
aas
test
je
lahf
or
adc
cli
mov
mov
mov
and
add
pop
and
fnstcw
mov
int
hlt
stc
test
shr
adc
call
or
je
sbb
lcall
pusha
cmp
sub
out
jne
sbb
and
xchg
xchg
ret
insl
and
cmp
ss
and
sub
cmpsb
mov
out
loop
inc
std
mov
pop
mov
sbb
inc
jae
imul
xchg
mov
insl
inc
jge
ja
mov
sbb
sub
push
inc
jo
pop
addb
pop
ljmp
or
sub
adc
addr16
jae
cs
pop
mov
jl
pop
push
jnp
cmp
ret
xor
jne
xor
sbbb
jge
imul
fadd
mov
sub
jae
subl
pop
loopne
insl
in
or
adc
xlat
sub
ja
inc
roll
jb
mov
movb
imul
gs
dec
fcoml
iret
sbb
enter
push
dec
scas
cwtl
push
and
repnz
or
lret
lahf
sub
dec
test
stos
jge
into
mov
stc
test
scas
call
outsb
jnp
jl
or
ret
cmp
adc
push
repz
push
or
aam
leave
lds
pop
rcrl
jbe
adc
push
mov
xchg
xchg
dec
loop
popa
mov
or
push
in
sar
ret
idivb
jo
aas
sub
dec
fidivl
loopne
mov
stos
or
lret
adc
mov
inc
pop
iret
stc
xchg
adc
int3
dec
outsb
mov
lcall
jb
or
stc
or
mov
pusha
roll
mov
adc
adc
dec
aaa
cwtl
add
aam
shll
mov
fwait
mov
push
xor
sbb
adc
adc
dec
imul
mov
push
push
aaa
push
add
and
int3
shlb
int3
incl
repnz
mov
orl
xchg
rcll
scas
ja
ja
fadds
inc
lahf
mov
outsb
add
pusha
ret
gs
repz
mov
idivb
lods
or
xchg
sub
arpl
mov
push
cwtl
lock
ret
out
dec
push
xchg
stc
sub
cli
xchg
mov
scas
mov
lret
ret
test
sub
or
xchg
sbb
push
outsl
std
or
mov
xchg
xor
stos
fcomps
nop
add
cwtl
dec
test
sub
or
data16
mov
in
mov
mov
cmp
dec
inc
cwtl
xor
scas
ror
nop
loop
xor
out
pop
enter
push
cmp
mov
fs
fidivs
inc
lahf
sbb
xchg
scas
test
and
adc
xchg
adc
lret
cltd
fldenv
and
bound
clc
subb
sub
xor
test
dec
lret
push
ljmp
mov
inc
loopne
jnp
movsb
call
outsb
and
adc
dec
ret
add
pop
push
sub
loope
add
rcll
or
fs
xor
mov
xchg
pop
inc
int3
shl
xor
int
shrl
fmull
out
mov
lock
jne
lahf
mov
mov
inc
inc
arpl
and
lea
icebp
mov
icebp
popa
pcmpeqd
pushf
lea
inc
xchg
adcb
repz
loop
shl
adc
and
dec
fadds
addr16
into
ds
inc
jno
add
sahf
cmpsl
out
adc
xchg
hlt
mov
push
xor
cmpsb
cs
repz
test
addr16
lahf
sub
imul
pop
mov
outsl
inc
mov
dec
movsl
sbb
push
lods
add
cmp
jle
out
das
sbb
mov
dec
faddl
test
call
sti
setae
inc
pop
or
cmpsl
out
out
mov
arpl
add
mov
dec
scas
rorb
outsb
aam
fiaddl
mov
ss
xchg
ljmp
scas
in
adc
sub
cmp
lea
sbb
fs
addl
xorb
fs
and
dec
inc
mov
in
cmp
add
mov
sub
ja
pusha
sub
cmc
jge
int
xor
imul
xor
mov
sub
jae
aaa
xor
and
cld
push
out
fildll
fstpt
aad
fists
dec
in
out
ljmp
xchg
hlt
mov
inc
stc
sahf
ja
cmp
pushf
push
dec
movsl
inc
cmpsb
or
bound
inc
clc
inc
ds
outsl
adc
and
adc
into
push
lret
or
xlat
xor
loop
out
lock
aam
data16
mov
mov
out
xchg
lock
push
outsb
jo
and
stos
adc
icebp
in
jp
daa
out
xchg
iret
xor
sbb
out
cld
dec
jns
sbb
and
mov
cmp
jge
cld
mov
iret
and
push
cs
fiadds
xchg
pop
inc
xchg
pop
xor
mov
pop
lcall
and
outsl
push
in
in
or
call
cld
cltd
xor
je
jp
in
and
dec
cwtl
sti
idivl
xchg
out
xor
sub
addr16
sbb
inc
xor
roll
cltd
sbb
ret
scas
cmp
aam
andl
push
ljmp
out
mov
push
adc
xchg
fnstenv
xchg
jae
inc
je
pop
mov
mov
js
xor
out
outsb
or
push
mov
call
pushf
lret
jnp
jne
aas
adc
out
flds
adc
or
popf
mov
adc
push
or
out
jg
ja
mov
sarb
fadds
outsl
cmp
xor
and
lret
ja
sub
cmc
push
popa
and
xor
repz
mov
pop
mov
mov
in
push
xchg
fmull
cmp
dec
cs
ret
insb
dec
pushf
cmpsl
dec
mov
scas
ficoms
jb
adc
fcompl
dec
andb
movsb
and
cmp
les
clc
sub
subl
aaa
push
jmp
mov
pusha
dec
sbb
loope
pop
fcompl
pop
xlat
sbb
pop
mov
addr16
xlat
cmp
mov
inc
pop
lret
xchg
into
cmp
push
outsb
les
or
cmpsb
insb
xchg
add
lods
jns
je
aam
dec
pushf
jns
push
adc
sahf
or
dec
fsubp
jno
inc
cmp
xchg
sahf
xchg
jns
sahf
cltd
mov
push
push
mov
fwait
and
jl
mov
pop
divl
inc
push
push
repz
mov
pop
push
outsl
into
mov
push
insl
or
cmc
dec
lods
cld
je
fs
adc
movsb
icebp
rclw
push
add
sbb
outsb
jne
popa
or
cmp
mov
call
subl
ss
lock
dec
jmp
mov
mov
jecxz
mov
subb
shl
ja
or
js
push
rol
lock
insl
xor
lods
sub
dec
inc
mov
ret
adc
repz
cmp
aas
daa
jmp
mov
into
aas
xchg
lods
jb
popf
mov
shrl
lahf
into
std
into
sti
sbb
sbb
lods
mov
andb
mov
push
xchg
adc
out
fnstsw
les
pop
fucomp
xchg
mov
jmp
ror
mov
ret
add
and
outsl
imul
lret
sbb
jno
add
or
jne
pop
jle
loopne
pop
scas
movsl
sbb
insl
lods
sbb
sbb
mov
xor
clc
lcall
cmp
mov
sub
xchg
stc
lods
fs
ljmp
dec
dec
push
jmp
dec
arpl
mov
pop
std
adc
jnp
or
adc
pop
mov
xchg
adc
cmp
in
cmpsb
shll
and
cmp
xor
inc
xchg
mov
scas
stos
push
stos
sub
popf
lds
ret
fimuls
fimuls
repz
sbbb
cmc
xchg
mov
sub
jecxz
into
inc
sbb
popf
mov
out
push
aad
loopne
push
dec
sti
jns
in
shll
cmpsl
inc
mov
mov
sbbl
lahf
iret
jge
inc
lods
xor
std
mov
lcall
pop
pop
mov
je
popa
xor
mov
popa
fcoms
or
call
lret
pusha
mull
jmp
test
mov
pop
leave
jl
cmpl
fisttpll
push
movsl
orb
add
rep
dec
pop
adc
add
push
xchg
sti
popf
addl
sub
lea
icebp
lret
gs
cmpsl
push
stos
jp
push
push
loop
pop
pop
adc
adc
mov
xlat
dec
aad
cmpsb
pop
dec
push
sbb
scas
lods
sbb
push
xor
mov
inc
jns
shll
adc
pushf
sub
fldl
cld
sbb
mull
adcb
icebp
xchg
lds
inc
iret
in
xchg
xchg
inc
sti
mov
sbb
mov
int
insb
xchg
cld
flds
imul
add
mov
lods
cmpsb
rorl
dec
adc
lea
into
fcmovb
sub
mov
lods
pop
js
lock
aas
out
cmp
aas
orb
mov
pop
iret
addl
xor
ds
mov
fistps
xchg
push
cmp
fcmovb
cmpsb
in
mov
sub
bound
test
sbb
mov
test
aad
insb
add
fcompl
sub
mov
cli
cs
syscall
mov
outsl
aam
lahf
fwait
pusha
js
out
or
or
cltd
shrl
mov
mov
mov
in
inc
xor
mov
mov
es
addr16
xchg
gs
xchg
jmp
xchg
hlt
pop
pop
repz
mov
sub
nop
or
ret
mull
mov
fdivs
fnstenv
jne
mov
repnz
inc
sbb
pop
dec
sbb
sub
xor
or
push
data16
movl
jmp
pop
push
mov
imul
addr16
push
push
inc
inc
add
out
xchg
mov
fbld
ret
pop
lock
and
dec
jmp
jecxz
xor
xchg
xlat
jo
pop
cmp
or
mov
jno
dec
pushf
shl
xchg
dec
fsts
fwait
pop
pop
test
xor
mov
shl
sahf
rcll
mov
cmp
ss
rcrl
sub
mov
xor
mov
or
adc
sub
cmp
mov
sahf
inc
scas
and
jp
ss
push
int
push
xchg
push
jb
mov
cli
out
sub
inc
lahf
pop
pop
lahf
clc
add
add
fiaddl
pop
mov
add
dec
inc
ret
scas
or
fstp
jmp
orb
mov
outsb
sub
orl
test
jmp
in
push
aad
mov
mov
sub
lods
push
adc
nop
imul
adc
ret
xchg
inc
shll
pusha
ret
mov
shl
mov
xor
movsl
cs
cs
in
inc
lcall
inc
fadds
sbb
outsl
add
pop
aaa
enter
pop
push
mov
mov
fldcw
aaa
adc
aaa
lock
push
adc
dec
jns
jnp
push
add
add
push
jmp
cwtl
repnz
mov
movb
xchg
dec
test
mov
or
adc
repnz
icebp
test
pusha
xor
ljmp
sub
xchg
fcom
jecxz
pop
jo
addb
leave
jle
in
xchg
push
jl
je
mov
jb
ss
and
nop
pop
push
sbb
and
jmp
xor
push
jne
jmp
movsl
push
push
jg
inc
xor
push
out
xor
nop
sti
push
mov
xor
fiadds
loope
pop
movsb
inc
cmpsb
mov
dec
push
xchg
jne
pop
gs
mov
push
stc
inc
push
or
inc
pop
push
aad
fs
xor
out
loopne
xchg
push
adc
xlat
mov
xor
sar
push
test
xor
and
xor
xor
scas
push
pop
mov
lock
push
lcall
fdiv
jmp
adc
je
and
call
mov
pop
inc
bound
xor
popa
incb
icebp
xor
shlb
sbb
sarb
inc
inc
cmpsl
jmp
js
cli
jno
inc
scas
and
adc
dec
xchg
std
std
mov
cmc
dec
mov
insl
sbb
addr16
cmp
jnp
cmp
hlt
cwtl
mov
paddsw
dec
sbb
pop
and
cmp
rol
mov
pop
insl
xor
decl
and
mov
imul
ret
dec
and
enter
jg
insl
mov
test
push
inc
xchg
cmp
jmp
mov
and
pop
jbe
sbb
mov
rcr
cli
ret
pop
fstl
dec
mov
mov
js
inc
or
imul
lret
mov
and
sahf
or
push
sarl
notl
push
xchg
push
sub
orl
jecxz
loop
js
fs
lcall
in
inc
push
jl
pop
mov
inc
inc
mov
add
shll
sbb
icebp
mov
popf
mov
pop
or
int3
sarb
ja
sbb
lcall
mov
mov
jo
dec
lock
lock
push
mov
lahf
sub
sub
cwtl
aaa
xchg
or
test
pop
fucom
fildl
pop
cwtl
fwait
jmp
mov
shl
adc
inc
sub
scas
inc
lcall
xorb
sahf
nop
xchg
or
das
rcl
repnz
mov
outsl
mov
or
clc
shrl
xchg
jno
cmpl
push
into
ds
nop
pusha
outsw
mov
out
sbb
inc
and
pop
adc
bound
aam
sbb
cmc
jecxz
cmp
add
orb
stos
and
sbb
andl
mov
cmp
into
inc
sub
repz
in
inc
cwtl
jo
jno
mov
in
pop
push
aad
or
xor
mov
scas
inc
fldlg2
sbbl
xorb
cmc
mov
push
xchg
cmp
mov
outsl
outsl
mov
stos
mov
ljmp
xchg
push
rolb
gs
andb
fcomps
es
cmp
add
cli
jmp
pop
fidivrl
int3
jno
and
xor
in
sbb
sbb
sbb
lahf
fmul
fstpl
xchg
aam
xchg
repz
ss
sub
repnz
addl
inc
nop
push
rcrl
jo
cmpsb
lret
mov
cmp
stos
xchg
mov
ret
cwtl
movntps
sbb
mov
cld
bound
or
ret
lods
xchg
sarl
and
xlat
aad
je
inc
imull
fisttps
jo
nop
das
cmp
jne
xchg
outsl
stc
inc
push
cmpxchg
add
xor
sbb
movsb
xchg
or
test
mov
in
add
mov
xor
jno
pop
arpl
inc
rcll
mov
lahf
out
xor
inc
out
jnp
test
cwtl
xchg
clc
xchg
jecxz
mov
shrl
push
fs
push
fs
pop
out
mov
mov
dec
rolb
clc
jo
fldcw
pop
xor
mov
sub
xchg
in
or
xor
mov
inc
sub
data16
xor
aaa
popa
push
scas
pop
std
pushf
mov
mov
mov
or
in
dec
adc
loop
lret
xchg
push
push
lret
iret
mov
out
inc
js
ljmp
mov
test
iret
in
testb
pop
pop
mov
add
mov
xchg
addr16
push
push
xchg
sbb
xlat
dec
out
and
mov
test
clc
repz
sub
inc
xchg
push
stc
jmp
aas
inc
leave
add
dec
and
jecxz
call
xor
xchg
mov
jns
jp
bound
jmp
das
fisubrs
mov
cld
add
sub
push
sub
xor
sbb
andb
mov
jg
xchg
push
pushl
dec
jne
sti
divl
dec
push
iret
mov
xlat
mov
push
stos
addl
xorb
stc
fsubrl
lret
and
pop
popf
lods
dec
rorl
out
pushf
sub
cmpsb
mov
xchg
jp
outsb
jecxz
cmp
lret
or
inc
dec
xchg
xchg
in
outsb
cmc
pop
pop
into
movsl
pop
lea
jbe
cmp
jnp
or
cltd
dec
aaa
sbb
cltd
push
test
or
dec
xor
push
loop
mov
fsubr
mov
lods
mov
push
push
push
and
aaa
cltd
std
lcall
arpl
pop
repnz
inc
push
dec
and
daa
pcmpeqd
xchg
adc
test
adc
fsts
shll
push
rclb
mov
xor
lret
mov
push
adc
adc
mov
aad
cli
dec
mov
rcl
mov
ja
pop
lret
in
xchg
pusha
pushf
out
inc
xchg
dec
stos
push
xchg
xchg
inc
test
mov
inc
mov
dec
mov
add
in
pop
imul
push
ja
pop
mov
das
adc
jge
test
jl
stc
push
scas
jl
rcll
sub
jnp
cwtl
shll
mov
sbb
xchg
sahf
mov
or
out
loope
dec
cmp
out
fstpt
xchg
pusha
into
fwait
dec
xchg
movsb
int3
dec
js
hlt
dec
jbe
add
xor
mov
mov
inc
push
mov
ljmp
xlat
out
rcll
xor
pusha
mov
or
sub
aaa
sbb
fxtract
jno
mov
shrb
jge
leave
push
iret
cli
mov
or
ja
je
insb
mov
jno
and
mov
mov
sub
out
shrl
sbb
inc
cmp
jb
pop
rorl
sub
fdivl
mov
push
lret
cmpsb
negl
mov
movsb
xchg
xor
and
sub
je
add
inc
iret
jb
jle
push
or
adc
scas
cmp
in
add
sbb
dec
mov
stos
fistl
repz
mov
inc
lods
mov
das
or
stos
sbb
xchg
sub
xchg
mov
inc
subl
inc
outsl
sub
push
push
sbb
popa
popa
rorb
and
lds
negl
loop
lea
lret
sbb
loopne
mov
nop
mov
push
outsl
jo
lds
in
xchg
arpl
push
js
insb
shll
lret
push
loopne
add
sbb
xchg
es
ret
mov
push
cmpb
std
sub
cmc
add
jbe
sub
nop
xor
xchg
push
imul
outsb
shr
pusha
push
ret
push
cmp
pop
ljmp
jo
stc
or
add
pushl
pushf
pop
push
rclb
test
or
in
cmp
frstor
xor
iret
subb
out
shrl
cwtl
fs
shlb
cmpsl
sti
mov
lods
testb
rorl
call
add
cmp
jnp
xorb
mov
ficompl
shl
fbstp
fwait
sarb
cli
sar
jnp
jae
sub
test
push
and
xor
sbb
xchg
scas
call
sbb
pop
ret
rcr
or
inc
xchg
test
xor
xor
sbb
aad
in
pop
jnp
dec
push
cmp
jae
ljmp
repnz
or
mov
test
ffreep
std
jg
inc
sub
dec
mov
xor
mov
mov
test
js
stos
loope
dec
add
sub
xchg
dec
jne
fsubrl
push
into
and
fwait
fs
push
int
push
dec
add
leave
sbb
incb
or
add
in
push
call
in
iret
pusha
aam
in
xlat
dec
repz
or
sub
arpl
and
cmpsb
cli
or
aas
pushf
jmp
mov
mov
scas
inc
int
xor
loopne
sub
aad
loope
in
ljmp
into
or
neg
mov
jbe
mov
lds
imul
jg
xor
sti
jno
sarl
scas
lock
jp
mov
cmp
xor
lcall
inc
outsl
adc
lcall
loope
sub
sub
sahf
lods
insb
test
subps
sbb
sub
cmpl
inc
outsl
jg
jmp
std
shlb
jns
sbb
push
inc
mov
pop
xchg
loope
cmc
or
lcall
das
sub
rol
push
push
ret
and
in
xor
aad
popf
mov
push
inc
iret
aam
popa
xchg
ficompl
add
sbb
sub
cmp
pop
push
cmp
inc
ds
roll
daa
jno
fcompl
fisubrs
rorb
bound
add
jmp
xchg
subb
and
mov
gs
fimuls
jb
in
icebp
and
mov
dec
mov
push
dec
lahf
fwait
into
das
into
leave
mov
pop
rclb
dec
fistl
in
pop
fld
test
xchg
out
addr16
or
pop
mov
scas
xor
mov
xchg
dec
add
cmpsl
xchg
cmpsl
sub
push
mov
lock
movsl
jae
or
loope
jbe
out
xchg
leave
mov
inc
jge
cmp
push
mov
int
xor
xchg
cmp
mov
movsl
lock
mov
fbld
sbb
in
dec
adc
test
les
mov
xchg
add
jo
cmp
jns
mov
push
cs
push
xchg
sbb
adc
fdivs
and
inc
mov
movsl
add
aad
lods
push
push
cmp
sbb
xchg
xlat
and
dec
jnp,pn
xor
pop
or
xchg
jb
inc
pop
loope
scas
dec
imul
roll
in
cwtl
pop
add
std
cmc
dec
ljmp
into
subl
cmc
sbb
mov
arpl
mov
mov
daa
inc
mov
fisubrs
xchg
jae
sbb
xlat
call
jo
je
ficoms
inc
les
push
mov
stos
test
push
icebp
mov
push
or
xorb
imul
idivb
loop
mull
push
mov
sbb
mov
mov
jmp
cmpsl
cmp
mov
dec
pop
jnp
imul
adc
out
daa
jb
or
test
pop
mov
out
mov
push
mov
push
sahf
scas
aad
icebp
addr16
mov
lcall
xor
popf
mov
dec
sti
mov
sbbl
cmpsl
je
lds
outsl
jp
insl
xchg
jae
xor
enter
inc
adc
pop
mov
fsts
test
sbb
sbb
and
xchg
and
pop
dec
adc
adc
fdiv
pusha
loopne
and
cmp
in
ret
mov
cmpb
stos
stc
int
mov
repz
mov
cmpsl
lea
pushl
xor
dec
or
test
push
adc
sbbl
sub
divl
loope
in
fistpll
and
push
push
inc
xor
push
rcll
shlb
inc
cld
jmp
pushf
add
adc
sti
sbb
pop
mov
xchg
cmp
sbb
pop
fsubr
outsl
mov
pusha
ljmp
cld
test
test
mov
inc
pop
stos
pop
sti
xor
je
scas
cmp
out
push
push
pushl
out
gs
sub
enter
test
mov
mov
loopne
imul
lcall
addr16
sahf
and
dec
insb
or
pop
cs
mov
movsl
in
scas
addb
sti
pop
lret
mov
or
in
movsb
jae
or
cmp
cmp
inc
shl
out
pop
lcall
xor
mov
loopne
cmpsb
scas
push
mov
es
lahf
cmpsl
add
mov
movsl
cld
mov
imul
pop
push
sbb
repnz
sti
add
xchg
jg
fadds
jle
mov
sub
movl
mov
jmp
jnp
iret
ja
inc
loop
pushf
adc
xchg
cmp
cmp
xor
pop
mov
lock
enter
ret
push
sub
sbb
mov
in
pop
movsb
clc
pop
out
or
cmp
adc
arpl
into
or
xchg
pop
mov
xlat
jmp
and
push
loopne
add
stos
lcall
in
cmp
bound
js
insl
shrb
ja
cmp
ret
mov
add
xor
push
fldl2e
cld
sti
inc
dec
ret
stos
imull
add
lret
repz
cmc
js
sub
rorb
mov
mov
adc
outsl
cmp
mov
fsubp
adc
sbb
jle
in
stos
popa
pop
push
leave
push
mov
fbstp
pop
js
rcl
test
pop
andb
shlb
cmp
xchg
dec
jp
push
ja
inc
hlt
or
or
insl
out
pop
jge
jns
mov
fs
jg
fsubp
sbb
jecxz
mov
fdiv
cvtdq2ps
lods
sub
sub
into
lds
cmc
push
sbb
icebp
out
cmp
mov
leave
lret
addb
out
repz
mov
mov
mov
inc
xor
and
cli
cmpl
sbb
jmp
mov
out
cmc
and
test
add
in
pop
std
cmp
dec
adc
insb
jp
rorb
cld
scas
stos
pushf
insb
inc
sub
push
mov
xor
xor
xchg
adc
outsl
lcall
pop
ss
int3
mov
enter
adc
bound
sti
int3
lret
in
daa
adc
inc
jbe
jae
push
dec
mov
mov
xor
stos
mov
mov
bound
push
pusha
mov
nop
cld
inc
inc
xor
sarb
jne
push
movsb
adc
scas
fnsave
push
adc
adc
add
lods
or
popf
inc
push
inc
in
incl
mov
dec
jo
or
lock
inc
mov
push
mov
jnp
test
mov
jb
jmp
test
push
xchg
test
fists
add
cltd
push
ficoml
nop
popa
sarl
mov
in
xor
mov
leave
push
bound
data16
or
clc
fwait
xor
pop
pop
or
mov
or
into
mov
orl
push
aas
or
je
sti
cltd
sub
mov
cmp
add
sub
xor
or
aaa
in
ret
mov
push
adc
lahf
mov
and
int3
in
pop
or
pop
add
aas
inc
jbe
setle
in
inc
adc
repz
cmp
ret
jb
jmp
jno
sbb
aaa
insl
or
scas
pop
and
dec
mov
rclb
pop
outsl
mov
dec
inc
js
push
scas
and
lock
sahf
out
dec
ljmp
test
sbb
lret
aaa
sarb
push
loop
icebp
fucomi
sbb
adc
xchg
aad
cwtl
scas
enter
push
mov
jle
dec
push
lods
shrb
adc
xor
cmpsb
xchg
cld
mov
pop
cltd
gs
jnp
or
mov
lods
push
or
insl
mov
pop
dec
shrl
aaa
nop
dec
fcomps
repz
jmp
test
arpl
in
and
daa
lods
cmp
sub
xchg
repnz
inc
lcall
cmp
push
pop
inc
fwait
inc
subb
cli
dec
addr16
out
mov
jns
ret
and
adc
in
sbb
cmc
scas
iret
mov
aad
jl
pop
clc
mov
xchg
mov
je
insl
and
fs
test
inc
movsb
cmpsb
push
mov
repnz
xchg
pop
stos
negl
xor
jp
hlt
popa
notl
and
jmp
rclb
push
xor
aaa
jl
arpl
pushf
jge
sub
mov
loop
stos
and
mov
xor
loop
sbb
mov
add
fisttps
cmp
comiss
nop
inc
mov
pop
aas
inc
mov
pusha
lret
push
scas
jns
dec
add
mov
add
jne
pop
xchg
roll
lahf
cmp
sbb
xchg
adc
cwtl
ret
add
mov
fdiv
sbb
inc
call
inc
aad
icebp
sarb
sbb
test
mov
notb
sbbl
sub
mov
xor
dec
testl
std
push
ret
inc
test
ret
sti
push
add
call
add
dec
mov
cmpsb
daa
mov
push
je
dec
adcb
pop
aaa
repz
int3
fidivs
std
shld
or
mov
mov
xchg
test
push
cli
fisubs
push
xor
cmp
in
inc
nop
sub
inc
rol
xchg
mov
mov
add
xor
rorl
mov
lcall
into
cmp
mov
pop
sbb
dec
daa
xor
or
shrl
ds
mov
bound
xchg
movsl
xlat
sub
in
loop
jb
push
jecxz
or
and
inc
add
frstor
dec
push
dec
pop
sub
cmp
xchg
dec
adc
shl
sbbl
orb
popf
aas
ljmp
sti
push
fs
in
shr
sub
xchg
sub
sti
outsb
in
pop
mov
fstl
or
repz
popf
jne
cmp
add
repnz
cld
sub
jnp
sbb
pavgw
data16
les
test
pop
jne
idivb
adc
loope
test
mov
mov
add
int
int3
movsl
gs
mov
xchg
mov
fistps
je
inc
or
mov
ds
loopne
inc
rclb
ret
js
pop
js
push
sbb
or
mov
sbb
rcrl
gs
sub
or
adc
dec
xchg
jbe
loopne
cmpsl
cmp
imul
jmp
xor
into
enter
sbb
cs
fldenv
lret
dec
adc
add
inc
jnp
mov
arpl
xchg
popf
mov
xor
pop
or
mov
aad
xchg
pop
pop
ror
add
xor
popf
push
jmp
pusha
out
inc
jl
xor
stos
mov
mov
sahf
aas
cmp
lret
mov
adc
jae
sarb
imul
je
pop
dec
jae
imul
mov
arpl
inc
mov
xchg
icebp
sbb
mov
es
dec
sub
mov
std
data16
pop
das
mov
push
cmp
scas
cmpb
push
xor
push
iret
jbe
ret
and
add
mov
addb
arpl
add
inc
pop
and
sub
repz
and
icebp
sub
jl
mov
pusha
jnp
cltd
xchg
jle
out
loopne
pop
cs
insb
sbb
out
adc
push
scas
insl
divl
repz
mov
add
pop
stc
js
push
xor
cli
mov
int
leave
mov
dec
aas
mov
xor
mov
mov
cwtl
mov
jne
cmc
xchg
ds
insl
push
xchg
shll
xor
mov
cmp
adc
insb
das
cwtl
sbb
xor
arpl
push
and
pop
std
push
push
fcmovnbe
and
jnp
cwtl
jl
mov
jmp
inc
cmp
lcall
dec
enter
xchg
mov
arpl
add
clc
inc
pop
shlb
xor
test
mov
fiaddl
pcmpgtb
cwtl
adc
push
or
jmp
lcall
xor
inc
push
icebp
or
imul
inc
ja
sahf
loopne
bound
pop
inc
and
xchg
pop
mov
cli
cwtl
dec
xchg
mov
mov
adc
insb
and
mov
es
shrl
cmp
inc
imul
subb
sbb
mov
and
sub
aas
push
xchg
pusha
xchg
adc
int3
inc
out
dec
inc
or
xchg
insl
mov
lret
dec
rep
cmp
jne
xchg
mov
fcos
or
subb
add
cmp
mulb
cmpsb
xchg
fisttpll
sahf
enter
jnp
das
push
dec
xchg
inc
mov
rclb
mov
das
rorl
push
add
scas
imul
pop
or
popf
test
inc
jns
mov
sub
sub
push
daa
call
sbb
icebp
jg
sbbb
jecxz
cmp
jl,pn
jo
popf
xorl
rcl
inc
shrl
pushf
test
mov
sub
std
out
push
fistpl
les
and
mov
and
cs
test
mov
push
stc
fiadds
and
jge
in
add
push
pushf
mov
pushf
and
lock
out
pop
mov
mov
or
mov
jl
mov
pusha
stc
js
fs
test
mov
lods
mov
jne
jno
cmpsl
scas
inc
pop
into
je
and
pusha
mov
repz
mov
dec
mov
inc
lds
mov
mov
movsb
and
sti
test
xor
push
lcall
insl
inc
addb
jno
inc
push
aad
push
push
jmp
dec
into
dec
sarb
xlat
xchg
or
leave
add
cmp
fimull
sahf
fs
lcall
nop
popa
inc
xchg
int
enter
out
and
and
sbb
add
push
xor
mov
cmp
inc
andb
ret
add
sub
xchg
sbb
repz
sbb
sub
mov
push
inc
lret
mov
mov
jl
dec
insl
xor
adc
inc
into
jmp
outsl
inc
pop
fimuls
sahf
xor
xor
ret
repnz
xor
dec
sub
test
sub
aaa
scas
dec
outsl
stc
lea
rorb
outsb
mov
sub
subb
add
scas
lods
rolb
xor
pop
lock
lock
scas
loop
fdivrl
cmpsb
push
je
popf
cltd
jp
movsl
xchg
push
pop
xor
mov
mov
divb
in
sbb
sbb
xchg
push
repnz
mov
xlat
jge
enter
cs
and
xor
xchg
adc
call
sbb
inc
jge
cmp
stc
adc
and
mov
fsubp
mov
call
into
outsl
fidivl
out
aas
imul
push
xchg
jnp
je
iret
movb
push
arpl
jp
or
sub
add
xchg
movsl
imul
pushf
pop
push
and
xchg
and
lock
sub
push
popa
jg
or
inc
daa
lods
leave
dec
fildl
dec
jp
add
mov
mov
lods
jnp
scas
imul
js
mov
jnp
sub
rcll
inc
out
mov
push
inc
push
outsb
jae
push
lock
dec
addr16
xor
adc
sar
or
lret
xor
sbb
cmpsl
jae
push
mov
push
cld
daa
mov
adc
sbb
sbb
sub
aaa
dec
pusha
push
jmp
dec
and
xor
fldenv
test
adc
fbstp
cwtl
in
and
into
mov
cltd
std
push
xchg
loop
jae
stos
cli
add
push
push
insl
push
cmc
in
jle
sub
inc
push
enter
pop
push
lods
dec
and
pushf
and
sbb
mov
clc
into
gs
xor
rep
das
push
mov
dec
gs
lret
rorb
xchg
sub
jbe
pusha
jnp
inc
adc
aaa
out
bound
jge
jle
push
shlb
jo
in
in
mov
add
fwait
mov
xor
xor
sbbl
mov
cld
add
ljmp
pop
push
push
outsb
or
adc
mov
sbb
pop
pusha
dec
pop
sub
push
test
out
outsl
test
ja
inc
push
dec
call
js
jg
icebp
ret
or
cwtl
push
std
pop
sbb
fiadds
cmp
cld
and
add
icebp
loop
sub
inc
gs
in
lea
add
fisttpll
sub
add
stos
cmp
ja
out
js
add
sbb
add
scas
in
cli
cwtl
inc
jp
dec
or
cmp
hlt
mov
fstl
roll
les
jae
insb
mov
fstpt
mov
mov
in
adc
sbb
or
lock
out
push
and
cmpsb
loop
rclb
sbb
sbb
mov
mov
test
inc
or
aas
mov
call
mov
outsl
xchg
sub
sub
cmpb
aad
gs
addb
std
loope
push
aaa
lods
cmpb
xor
out
les
pusha
iret
adc
loop
jle
jb
insb
fildl
jne
movsb
nop
xchg
inc
gs
jns
jl
xor
pop
mov
cmp
mov
js
xor
pop
mov
push
adc
sub
sahf
add
jmp
in
ret
xlat
sub
leave
sub
mov
sahf
or
inc
push
call
cmpl
mov
pop
leave
cmp
dec
les
or
mov
push
fcoml
sbb
push
aas
and
dec
fld
ficompl
inc
lock
adc
loope
cli
cmp
popf
outsl
xchg
in
cmp
add
add
fcoml
jb
int3
pop
cmpsl
sub
inc
ret
arpl
xor
dec
jns
loop
mov
lret
or
dec
mov
inc
inc
in
repnz
loop
data16
stc
out
sub
imul
mov
xchg
or
mov
or
push
mov
outsb
pusha
mov
push
movsl
xor
icebp
jecxz
mov
xor
rcl
in
leave
cmp
lret
inc
mov
mov
mov
mov
jne
push
inc
shll
test
mov
cmpsb
xchg
fnstcw
and
mov
mov
ss
cmp
inc
ljmp
in
push
cmpsl
insl
sub
orb
lret
mov
out
pusha
nop
jo
mov
or
sbb
xchg
dec
sub
jae
outsl
cmp
into
mov
cmp
add
jp
or
cmp
xchg
imul
sbb
mov
adc
push
lcall
mov
mov
mov
cltd
scas
mov
insl
loopne
std
test
ret
in
dec
mov
add
sub
mov
cmpsl
call
lods
add
into
mov
sub
call
fcomps
xchg
mov
push
sbb
mov
adc
repz
mov
or
xor
data16
inc
jge
imul
lahf
test
es
or
movsl
cmp
jp
and
stc
sbb
pop
inc
andb
mov
cmp
jae
cmp
mov
orb
dec
xchg
pop
mov
in
jae
lret
cmp
outsl
cmp
arpl
sbb
and
mov
mov
push
outsl
dec
rolb
cmp
stos
sahf
orb
inc
xor
fmuls
jl
mov
push
inc
push
jle
push
sub
ds
adc
leave
lods
xchg
cltd
mov
xor
sbb
add
outsl
bound
lods
fsts
idivl
fisubrl
gs
in
push
in
arpl
jecxz
jge
test
test
jno
in
xchg
pop
lods
ss
pop
dec
xchg
xchg
mov
jne
dec
insb
hlt
lahf
aas
movsb
or
xchg
xor
dec
je
stos
dec
and
rolb
pop
sub
xor
nop
jecxz
jns
mov
pop
mov
enter
inc
fisubl
jle
xor
add
xchg
sub
push
pop
pop
sbb
sub
sbb
je
mov
or
dec
push
ss
lock
sarb
rorb
int3
cltd
mov
mov
cld
sbb
jne
sbb
xor
or
mov
adc
int
loope
dec
mov
movsb
push
cmp
inc
xor
daa
mov
adcb
push
adc
push
xchg
ljmp
icebp
fisttps
repz
repz
mov
push
cs
dec
out
aad
mov
add
lret
add
sub
mov
adcl
sbb
jmp
fldenv
fs
jns
adc
scas
pop
loop
call
jo
jae
scas
mov
jo
dec
and
int3
rorb
ret
pushf
cmpsl
jb
xchg
mov
push
out
xor
pop
sub
pop
jecxz
pop
shlb
jge
pop
cmpb
out
iret
mov
lods
xchg
push
xor
pop
fildl
mov
lock
test
out
dec
jns
clc
push
repz
dec
xor
add
inc
jg
mov
test
xor
ror
cli
jne
faddl
out
js
dec
mov
jmp
loopne
adc
outsb
add
jl
lds
jnp
pop
clc
jae
loop
sub
pop
out
inc
jne
mov
ljmp
aad
push
xchg
fnstcw
cltd
mov
das
push
and
xorl
jmp
dec
cmp
fs
sbb
stc
inc
out
or
and
das
mov
mov
pop
mov
mov
nop
leave
and
sti
xchg
sahf
fcmovnu
stos
outsl
mov
bound
dec
lods
dec
jle
sub
inc
adc
lds
testl
mov
add
adc
push
xor
out
fstpl
pop
rol
out
test
mov
inc
fwait
popf
pop
mov
and
sbb
push
xor
cld
lret
outsb
add
mov
movsl
in
mov
jns
fsubs
pop
pop
xlat
hlt
xchg
jae
add
mov
imulb
sub
je
ljmp
hlt
pop
repnz
cld
mov
fcoml
movsl
jg
xor
xlat
jmp
jae
pop
icebp
movsl
mov
decb
in
jmp
mov
scas
addr16
aam
jg
mov
jno,pn
je
push
and
outsl
mov
nop
jl
movsl
mov
xchg
lret
fs
add
popa
inc
std
dec
xor
fsubrl
cli
push
stos
pushf
scas
fwait
subb
jnp
adc
scas
daa
inc
push
int3
mov
xchg
xor
pop
mov
xorb
mov
in
imul
cmp
adc
xorl
pop
cmp
decl
jg
and
loope
or
xorl
sub
sbb
in
inc
insb
add
jl
pop
cmp
imul
sbb
loopne
mov
ficompl
mov
fs
dec
fsts
jno
daa
dec
mov
leave
add
movlps
cmpsl
adc
mov
cmc
rol
sub
push
cwtl
iret
xchg
lret
lods
loop
xor
xchg
push
sub
fs
push
fdivp
add
adc
push
sub
mov
lret
mov
fmul
inc
testl
movb
xor
or
jae
mov
push
xchg
outsb
ror
icebp
and
out
loope
push
pop
inc
ficompl
test
lret
repz
jae
sti
pop
pop
adc
fsubl
jno
test
lds
mov
rclb
mov
divl
sub
test
ja
pop
xor
aad
andps
rorl
fists
out
pop
pop
mov
inc
roll
cld
adc
jg
jae
mov
or
inc
ja
push
sbb
les
pop
push
fldenv
cmp
loope
lock
jne
and
call
dec
or
jns
add
ljmp
xchg
xchg
stc
inc
pop
jle
push
lahf
test
fmul
cli
aaa
push
xchg
inc
pop
sub
adc
into
push
sbb
push
adc
stc
xor
xchg
mov
testl
in
loop
loopne
push
loopne
lcall
push
mov
sbb
into
gs
add
cmp
movsl
mov
mov
rcrl
leave
call
call
arpl
testb
call
push
aad
mov
xor
mov
lea
mov
xchg
mov
je
pop
imul
mov
xor
stc
and
and
cmc
je
cltd
cmp
push
dec
out
mov
jb
rol
and
outsb
and
rcl
and
adc
cs
and
mov
test
sub
push
out
cmp
cmp
inc
movsb
jno
ss
dec
fcmovnu
pop
xchg
cmc
and
bnd
stc
shr
out
call
pop
xor
outsl
pop
loope
mov
sub
aas
movsl
cmp
loop
adc
sbb
incb
shll
mov
cmp
and
lret
push
pushf
xchg
sub
movsb
add
and
jp
dec
mov
iret
lret
or
jbe
imul
xor
sbb
out
mov
fcomip
xor
adc
mov
lcall
dec
enter
ljmp
xchg
pop
cmpsb
inc
jp
sub
pop
mov
ljmp
jmp
in
popa
in
loope
adc
subl
aam
sub
rolb
mov
mov
lahf
lret
insb
loopne
iret
push
adc
or
js
inc
push
adc
xchg
test
xor
xchg
mov
fisttpll
inc
xchg
aam
push
aaa
vpsllq
adc
xor
or
shlb
push
mov
pop
xchg
mov
xchg
sbb
rcr
or
push
mov
cmc
inc
in
xchg
mov
xor
mov
outsl
sub
push
aaa
sbb
adc
out
xorl
and
out
cmp
cmc
in
inc
into
sub
pop
ffree
in
mov
jns
arpl
xabort
addr16
xchg
in
insl
fsubs
add
push
sahf
aam
ja
mov
inc
mov
rol
es
push
arpl
cmp
push
lock
inc
xchg
mov
push
popa
cmc
inc
mov
inc
js
jecxz
mov
pop
push
enter
mov
mov
pop
adc
sub
xor
pop
andb
xchg
adc
mov
push
dec
jb
imul
mov
or
jecxz
mov
mov
fstpl
push
cwtl
imul
pop
cmp
push
ljmp
xchg
xchg
or
xchg
loope
inc
push
xchg
fucomp
repz
dec
popf
xchg
sbb
mov
stos
sub
mov
mov
pop
cmpsb
sbb
push
push
jno
sub
lcall
push
push
xchg
inc
jae
rcl
gs
mov
out
pop
add
iret
xchg
xchg
rcr
mov
inc
and
icebp
hlt
push
push
out
fcmovnu
sbb
push
push
data16
mov
push
jl
push
add
inc
fidivrs
add
sbb
adc
lcall
dec
daa
dec
and
sbb
dec
cmpsb
sub
adc
add
fimull
push
cwtl
fs
mov
sbb
mov
pop
mov
sub
enter
cmpsl
sbb
adc
sbb
int
add
mov
mov
lcall
pop
or
jb
lret
or
push
inc
adc
xor
leave
lds
jp
adc
out
and
or
sbb
sbb
lods
mov
sbb
push
mov
pop
dec
in
jle
mov
xchg
repz
adc
mov
xor
mov
push
repnz
cwtl
pop
adc
and
fidivl
push
push
outsb
sub
aaa
push
je
jae
mov
stc
fs
inc
xchg
pushf
popf
repnz
pushf
or
dec
jne
mov
fnsave
repnz
jne
fwait
cmp
inc
jnp
or
iret
mov
repz
jle
add
or
sbb
push
mov
mov
dec
lods
incb
movsb
sbb
xchg
xor
cmp
imul
inc
dec
rorb
pop
into
fs
mov
or
mov
ret
xor
lret
fldt
and
sbb
int3
aaa
rorb
cmpsl
adc
mov
mov
sub
fiadds
aam
jbe
jbe
push
pop
hlt
and
pushf
bound
stos
mov
cmp
stc
push
and
xchg
lock
or
inc
insb
push
xor
das
in
and
dec
jae
fbstp
xchg
fwait
xchg
xchg
cs
int
adc
rolb
fwait
leave
or
sub
add
jne
imul
testb
pop
lock
inc
xchg
sarb
push
xchg
dec
dec
push
inc
orl
repnz
stos
lea
or
inc
popf
imul
push
stos
add
fwait
adc
hlt
ret
cmp
int
jl
sub
sub
jbe
in
xor
jo
fbstp
mov
imull
jmp
cmp
sarb
xor
outsb
loopne
xchg
mov
push
jmp
xchg
cs
add
das
arpl
outsl
sbb
adc
mov
clc
test
xchg
std
sub
jecxz
pop
lahf
inc
adc
fs
enter
leave
inc
mov
fmul
push
pop
adc
lret
sub
test
xor
and
int3
xor
das
popf
push
cmp
mov
mov
into
fimuls
aad
inc
mov
push
pop
inc
das
stc
push
or
or
ja
mov
jne
and
add
jge
pop
in
in
cltd
data16
mov
xlat
sub
sub
sub
out
in
xchg
rorl
bound
jmp
jb
aam
xchg
add
popf
icebp
sub
cli
push
push
fisubrl
dec
ficomps
mov
test
xor
fs
and
lret
mov
and
sbb
test
inc
shl
dec
lret
mov
fildll
mov
add
inc
sahf
aaa
mov
jge
lcall
shrb
and
jnp
enter
cmp
inc
sub
mov
mov
xchg
xchg
sbb
lock
or
pusha
jo
push
out
mov
dec
pop
loop
mov
arpl
dec
pop
add
pop
mov
mov
cld
test
aaa
xchg
jp
sti
push
fdivr
sbb
adc
inc
clc
push
push
pop
dec
movsl
jle
cmpsl
mov
clc
push
int3
xor
test
jmp
pushf
inc
push
sub
int
or
nop
ss
inc
and
loop
mov
std
out
xor
lahf
jmp
pusha
pop
cmp
nop
sbb
loope
inc
and
mov
cmpsl
cmp
sti
sub
scas
and
dec
cli
incb
add
sub
and
fmull
push
mov
in
jg
in
sub
inc
stos
je
imul
mov
adc
lret
repnz
add
mov
iret
xor
int
xchg
pusha
call
rorl
lds
js
out
imul
rcrl
jns
ret
mov
add
adc
xor
bound
lcall
lret
push
mov
and
jbe
ja
xorb
sbb
sbb
mov
daa
adc
test
es
mov
test
lret
addb
insl
pavgb
cltd
iret
int3
cmpsl
xchg
jl
mov
int
cmp
repnz
ror
sub
push
cmpsl
enter
test
ret
aas
push
pop
pop
sub
sti
lsl
jge
inc
mov
xor
jmp
ja
pop
out
pop
movsb
mov
and
add
lea
enter
and
je
xor
in
adc
je
sub
fidivl
ret
jg
jge
inc
mov
fcoms
fnsave
ret
in
mov
mov
iret
dec
pop
hlt
fwait
lods
iret
jns
dec
dec
idivb
mov
ja
jg
jb
pop
ja
cmpsb
in
inc
jmp
sbb
sbb
and
flds
cs
adcb
or
mov
jo
xchg
dec
int3
add
adc
popl
ret
cmc
mov
adc
push
adc
pop
add
ficoml
xor
pop
sub
pop
push
jnp
mov
cltd
std
ljmp
push
ficoml
dec
mov
xor
sub
pop
xchg
fisubs
fisttpll
xor
dec
add
xchg
ret
mov
xor
xchg
mov
xchg
mov
push
cmp
push
mov
inc
lods
cmpsl
das
sbb
aam
mov
loopne
xor
jge
xor
push
fsubs
inc
sbb
lahf
mov
stos
mov
mov
mov
mov
aas
or
fldcw
or
sbb
js
aam
xor
mov
dec
pusha
adcl
lock
dec
shl
mov
pop
lcall
xchg
div
xchg
lods
mov
sub
mov
pop
pop
das
movl
pop
pop
jae
lret
pop
or
out
pop
rcl
test
sub
nop
jne
dec
dec
xorl
sub
ret
fcmovne
lret
lret
fld
sbb
test
loope
popl
js
pop
push
adc
jge
in
stc
push
mov
out
dec
mov
in
mov
jge
cmc
sub
repz
mov
add
loope
movsl
pop
pop
xchg
movsl
dec
jle
in
mov
aaa
pop
jp
adc
sub
mov
shld
inc
pop
mov
je
out
adc
or
ror
xchg
fisttps
jb
sbbb
cltd
mov
daa
rol
lods
lock
aas
cmp
out
shr
push
or
or
sti
cmpsl
dec
dec
stos
add
jle
sub
outsl
jle
fldl
mov
add
ja
xor
stos
adc
out
fs
pop
mov
not
lea
xchg
arpl
push
out
cld
inc
jmp
adc
push
std
or
xchg
pop
jnp
in
pop
jbe
jecxz
add
xor
lods
sbb
ss
pop
movb
popa
pop
add
cmp
insl
push
push
dec
enter
lret
dec
and
adc
sub
inc
in
add
rcrb
out
out
je
jo
lods
adc
mov
pop
pop
int
repnz
sub
push
jmp
js
mov
jl
inc
xchg
jg
cltd
xchg
inc
adc
add
fistpll
fistpl
dec
pop
and
cs
dec
cmc
test
add
pop
stos
push
mov
mov
fs
rcrl
cmpsl
pmullw
mov
shll
jg
mov
mov
and
imul
push
clc
sub
adc
jge
bound
idivl
lea
and
incb
ja
aaa
push
cmpl
sub
in
dec
call
add
int
cld
mov
pop
xor
pop
sbb
repz
imul
push
xchg
mov
add
ss
mov
mov
fwait
jo
das
add
sub
jmp
mov
push
mov
sub
stc
into
mov
xor
pop
shl
mulb
mov
dec
and
repnz
bound
mov
cmp
push
or
xor
or
popf
push
lcall
out
inc
shll
xor
imull
jecxz
pop
cltd
add
icebp
xor
ds
sbb
push
adc
dec
rcrb
in
adc
mov
test
mov
idiv
mov
mov
jge
arpl
cld
leave
xchg
cli
int
jne
inc
dec
das
mov
out
ret
loopne
loope
test
cmp
cmpsl
mov
jno
popf
insb
pop
int3
daa
cmp
mov
mov
pusha
push
lret
dec
call
xchg
inc
adc
push
sahf
test
int3
add
jle,pn
pop
adc
push
mov
frstor
loop
xchg
inc
pop
push
insb
rcll
cmc
movsl
lcall
insb
arpl
mov
pop
jl
add
inc
pop
jno
cmp
lcall
stos
in
mov
test
iret
push
pop
inc
xchg
inc
xchg
sub
out
cmp
adc
xchg
outsl
enter
and
cld
push
adc
test
jecxz
lea
test
mov
jb
sahf
mov
fstpt
lret
js
sub
inc
ja
pop
aas
fmull
test
cmp
mov
cmp
xchg
in
push
jmp
mov
pop
idivl
shl
jg
addr16
xlat
lret
in
pop
mov
xchg
out
pop
xorb
cmp
jo
sub
mov
gs
rcl
shll
ficoml
xlat
push
cwtl
mov
les
push
mov
push
jle
mov
xor
lahf
aas
jle
or
adcl
mov
cli
adc
sub
sahf
mov
repz
jmp
stos
fdivl
insb
pop
mov
in
push
xchg
mov
mov
mov
pop
xchg
imul
adc
test
je
repnz
add
sahf
repnz
sub
lock
add
cmpsb
add
push
sbb
pop
movb
iret
sbb
push
add
adc
add
shlb
push
movsl
loop
addr16
adc
xor
jle
cltd
andl
out
or
jnp
mov
scas
push
outsl
mov
jbe
sbb
inc
pop
pop
sbb
xor
add
jnp
push
or
bnd
mov
pop
mov
or
iret
push
fsubrs
add
pop
fdiv
aas
shl
test
arpl
in
daa
sarl
mov
and
xchg
out
mov
hlt
loop
push
adc
fwait
mov
push
pop
sbb
insb
mov
push
and
push
push
and
and
jg
data16
and
jmp
stc
mov
pop
pop
push
enter
add
imul
repnz
sbb
cli
push
int3
movsl
pop
insb
cs
loopne
ja
insb
xchg
es
pop
cmp
or
inc
stos
sbb
mov
mov
mov
int3
mov
aam
push
cld
jb
jge
xchg
cwtl
xlat
cmp
cli
mov
and
mov
lods
xchg
out
push
mov
movsb
add
or
fists
ret
cwtl
lcall
rolb
mov
icebp
mov
sbb
xchg
imul
fnstcw
int
enter
mov
sbb
aad
inc
rcrl
in
loopne
icebp
in
les
loop
xchg
sbb
lahf
test
mov
sub
in
roll
or
jne
push
and
aam
adc
sub
das
xor
popf
xor
and
test
hlt
cltd
ss
lds
dec
stc
mov
jl
mov
lcall
movsl
mov
ds
flds
shll
xor
sub
cmp
rclb
arpl
js
int
sbb
arpl
es
jp
add
mov
dec
fs
push
jmp
fsts
decl
inc
out
push
bound
xor
dec
stc
inc
ret
add
clc
in
jae
and
fisubrs
xor
or
jmp
loopne
jge
xor
fisubl
pusha
dec
pushf
in
fnsave
jecxz
jbe
push
ljmp
lea
and
add
data16
mov
sub
aam
test
repnz
in
cltd
fs
sti
cmp
add
cmp
push
mov
push
mov
test
mov
xchg
xor
push
mov
sub
sub
mov
aam
pop
xchg
insl
jle
sbb
fwait
mov
xchg
sbb
xor
sub
push
xchg
sbb
pop
xchg
cwtl
pop
sbb
lretw
lods
and
mov
push
add
push
movl
gs
shlb
hlt
mov
imul
in
jmp
out
sbb
ss
sarl
into
repz
rorb
lret
sar
adc
push
adc
mov
call
pop
sub
outsl
js,pt
dec
fdivrs
mov
lahf
pop
xor
leave
cmp
sbbl
push
mov
movsl
ss
or
pop
sub
sub
cmpsl
mov
fisubrl
call
mov
mov
test
test
push
sub
pop
lods
and
sbb
les
movsl
cmp
negb
les
pop
push
ja
je
fsubrs
popf
pop
cmp
adc
pop
mov
in
loop
mov
cmp
fcomp
jmp
rcll
ss
push
mov
pop
pop
cmpsl
in
jge
ss
cmp
and
aad
inc
in
test
jno
rcrl
inc
or
jge
cmpl
inc
xchg
mov
repnz
stos
xlat
js
xchg
rorl
call
jo
sub
push
out
and
sbb
lods
jle
fbstp
and
xchg
jge
fcmovne
adc
sbb
iret
loop
jb
cmpsl
mov
dec
loop
pop
xchg
cmpsl
dec
nop
and
outsl
xchg
add
push
cmp
or
loope
fwait
jle
mov
bound
fldcw
push
test
jle
sti
add
pop
cmp
jl
push
inc
mov
movsl
push
dec
or
aas
xchg
xor
notl
stos
dec
push
dec
popf
mov
jae
repz
xor
in
fdivl
pop
sub
mov
jle
jne
dec
or
cmpsl
jb
shlb
dec
push
mov
flds
pop
xchg
sbb
mov
sarl
int3
add
jg
push
cs
xchg
bound
mov
sub
test
repz
scas
cwtl
jge
addr16
cmc
rcrb
push
mov
int
mov
inc
adc
or
or
fstps
imull
lahf
out
lods
dec
sub
ficoms
out
fdivs
sarb
cmp
xchg
testb
push
jb
int
sbb
pushl
and
mov
pusha
sahf
inc
mov
or
push
push
ret
jae
inc
adcl
adc
adc
es
dec
pop
pop
inc
or
ljmp
inc
jg
cmp
lods
cld
sti
imul
dec
std
sbb
cwtl
enter
loop
sub
lahf
clc
mov
push
add
int
mov
jp
cmp
mov
fbld
popf
lret
or
mov
insb
sbb
inc
std
mov
es
inc
mov
adc
jle
ret
sti
jp
dec
not
in
insb
inc
pop
int
pop
adcb
scas
lret
scas
mov
pusha
out
jno
sarl
sbb
fstp
fcomi
xchg
sbb
sahf
mov
sub
insb
mov
inc
mov
add
sub
pop
test
mov
or
jnp
in
mov
popa
nop
xor
adc
pop
xchg
addl
stc
dec
xor
sbb
xchg
xlat
pop
les
stos
std
pminsw
add
call
xor
xchg
cli
adc
insb
ficoml
xor
xchg
pop
xorl
inc
jl
aad
xor
insb
inc
jns
inc
je
int
push
sub
xchg
push
xor
je
mov
in
cmpsl
addr16
cmp
mov
adc
les
stos
shll
push
inc
xchg
ret
jle
sahf
fadds
adc
sub
daa
fcomip
int
shr
popf
fyl2xp1
sbb
aad
dec
xor
jecxz
or
pop
in
stos
nop
add
and
cmc
adc
insl
cwtl
arpl
rep
pop
rcrl
in
adc
sbb
test
decl
nop
and
shrl
and
lods
mov
or
sub
and
div
adc
inc
repz
add
sub
pop
push
cli
mov
scas
andl
push
and
mov
push
dec
inc
cmp
sub
lret
fisubrs
nop
iret
popf
dec
jb
push
popa
cmc
sti
jo
push
inc
out
clc
out
pop
cwtl
dec
shrb
sub
sub
sahf
jle
push
push
lods
ja
dec
mov
jg
in
push
and
inc
sub
outsl
scas
mov
data16
movl
fwait
call
mov
mov
sub
push
jecxz
mov
dec
mov
mov
dec
sbb
lahf
xchg
aad
jmp
mov
mov
fwait
test
mov
xchg
sbb
fidivs
cltd
pop
aaa
sarb
sub
jne
cwtl
mov
das
sub
dec
xchg
inc
mov
leave
mov
scas
cmp
arpl
dec
clc
je
outsl
dec
xor
ljmp
mov
push
cli
lock
or
add
xor
adcl
add
out
xchg
jge
stc
insl
xlat
dec
cli
mov
out
popf
andb
push
xor
jge
jle
rorl
xor
or
jae
enter
cmp
int3
jge
jecxz
dec
out
jnp
out
sbb
cmpb
mov
cmpsl
push
imul
jne
cmp
stc
inc
scas
insl
and
scas
nop
add
aas
push
adc
jnp
jle
and
sub
rolb
sub
daa
mov
cld
rcll
cmpb
cmc
in
push
int3
fsubs
pop
in
cmp
in
iret
mov
jno
mov
out
push
pusha
movsl
adc
or
ret
pushf
jmp
outsl
ret
nop
mov
inc
mov
adc
jbe
leave
jo
jns
aam
repnz
stos
pop
sub
lock
in
mov
inc
out
pop
or
out
fwait
mov
jne
xchg
mov
adc
imul
cmp
and
jb
mov
xchg
and
sub
pop
imul
jl
dec
mov
xchg
push
negl
cmp
cld
icebp
popa
shll
mov
mull
mov
out
jp
fistpl
sti
jo
inc
adc
cmp
adc
adc
xchg
es
stos
shrl
enter
cmp
pop
push
sahf
insl
inc
sbb
pusha
bound
add
into
push
push
int
xchg
loope
and
mov
push
mov
inc
loopne
outsb
cmc
test
in
mov
pop
stc
pop
enter
dec
lcall
adc
jge
pushf
sahf
inc
jns
loope
mov
clc
mov
jnp
mov
and
test
scas
jge
xor
add
jae
mov
adc
scas
mov
add
ja
lret
test
dec
xchg
imul
arpl
in
loope
push
ja
pop
stc
adc
ljmp
sub
addl
xchg
ret
dec
mov
push
lahf
or
sarl
test
pop
jae
ss
ss
mov
cmp
pop
bound
movsl
sbb
push
outsl
daa
fnstsw
push
xchg
lds
add
sbb
je
xor
cmpsb
je
dec
sub
popf
sub
pop
ja
or
js
dec
ret
rorb
fdivrl
xor
jmp
add
sbb
mov
sti
test
repnz
jae
or
mov
filds
frstor
mov
retw
cmp
xchg
repz
adc
andl
ret
add
dec
rorl
cmp
pop
subb
movq
inc
push
adc
and
das
je
jmp
sbb
fstps
xor
pop
pushf
lahf
cli
sahf
faddp
rcl
movsl
or
retw
adcl
and
sti
or
push
jmp
add
push
mov
pop
js
inc
daa
push
xlat
cmpsb
mov
jns
mov
loopne
xor
inc
xchg
ljmp
mov
cmp
sarl
jnp
or
pusha
sub
fistpl
jle
xchg
push
fcoml
mov
hlt
test
cmp
aam
mov
imul
mov
cli
mov
mov
stc
mov
outsb
dec
hlt
push
inc
out
out
mov
inc
sbb
out
pop
or
es
add
dec
fwait
sti
rorl
mov
outsl
mov
and
xor
cmp
mov
mov
mov
xor
imul
cmc
mov
jne
lcall
subl
push
fimuls
adc
shr
and
shlb
stc
and
xchg
jmp
mov
and
add
bound
push
fisubrs
std
frstor
sbbb
xchg
jl
push
fs
fdivrl
xor
aad
push
les
daa
gs
dec
mov
lds
insl
mov
push
cmp
adc
cmp
bound
jecxz
lods
pop
aas
aad
bound
adc
lock
cli
mov
into
int
es
dec
scas
dec
pusha
xor
push
lahf
test
enter
push
sbb
dec
add
out
mov
pop
or
xchg
lds
mov
lods
dec
rolb
imul
sub
filds
lock
push
jnp
fildl
push
push
dec
push
inc
rolb
mov
mov
jp
decb
add
jmp
in
aad
cmp
inc
incl
js
pop
xchg
push
cmp
cmp
lods
jmp
xor
jmp
inc
pop
repz
rorl
fs
test
pop
out
cmpsl
mov
jge
xor
inc
push
jge
inc
ds
dec
cmp
outsl
in
fiadds
repnz
sub
scas
mov
les
push
out
dec
in
jne
xchg
mov
or
cmp
sbb
pop
sub
icebp
shll
loop
je
dec
sub
sahf
cltd
movsl
adc
cmp
sbb
mov
shlb
mov
pop
fdivl
or
push
mov
bound
or
mov
popa
test
push
or
and
sub
xor
inc
lret
cmpsb
cmpsb
jmp
inc
outsl
out
or
jae
inc
or
add
rolb
insl
scas
cs
stos
adc
cmpsb
sub
and
adc
pop
push
inc
cmc
ret
ret
sbb
sahf
dec
lret
pop
add
dec
push
jae
mov
jns
mov
scas
out
cli
mov
pop
push
mov
jp
xchg
mov
out
lock
daa
and
cs
and
xchg
inc
or
fwait
xchg
jg
or
fistpl
mov
sbb
out
mov
xor
jae
cltd
out
ret
in
clc
sub
push
mov
rolb
cltd
sbb
lea
push
bound
lret
pushf
jmp
scas
out
mov
shll
jg
scas
push
push
xchg
xchg
idivb
std
std
cmc
repnz
mov
and
pop
xor
pop
xor
mov
or
pop
push
aaa
sub
js
cmpsl
pop
jecxz
mov
cld
aad
xor
pop
cwtl
mov
pop
or
andb
add
ds
leave
inc
dec
imul
inc
sti
pop
pop
and
bnd
sbb
pushf
popa
popa
dec
outsl
add
movsb
int
xor
push
ret
pop
cmp
jmp
lcall
sti
push
xchg
xchg
jno
hlt
mov
add
stos
xor
mulb
notb
push
aad
dec
testl
lods
and
pop
adc
imul
push
push
scas
and
inc
jns
and
incb
fists
shlb
pushf
push
dec
ficompl
movsb
test
or
or
push
sti
call
jecxz,pn
inc
cld
test
bound
out
fs
roll
cmc
repnz
stos
mov
mov
mov
mov
mov
int
adc
pop
popf
ss
jns
jecxz
mov
aaa
popa
cld
pop
mov
adc
lods
fwait
jo
je
inc
outsb
adc
call
test
sbb
ja
xor
in
jno
frstor
sub
and
or
sub
ret
shrb
adc
lea
push
mov
fstps
sbb
movhps
insl
inc
ja
data16
jns
pop
sbb
jg
int
movsb
pop
pop
push
push
daa
jbe
jecxz
mov
xchg
fdivr
dec
mov
pop
insl
sub
into
call
mov
and
adc
aad
pop
cmpsb
sbb
xor
jecxz
fwait
mov
ss
out
mov
rcll
les
push
pop
mov
mov
push
je
rol
mov
sti
lds
xchg
leave
sub
push
arpl
scas
push
loopne
push
inc
jbe
jmp
fs
mov
fisubrs
or
xchg
push
addb
adc
scas
shrl
adcl
xchg
mov
punpckldq
in
push
mov
add
jmp
das
arpl
add
fsub
mov
push
ljmp
aas
faddl
mov
dec
mov
in
out
adc
mov
mov
fidivl
and
imul
cmp
cmpsb
jg
dec
or
ret
mov
dec
pop
dec
mov
aad
add
mov
mov
lret
push
lret
sub
aaa
call
idivl
test
out
jp
add
shrb
ret
aas
cmp
leave
lret
sarl
and
mov
inc
sub
cmp
cmp
mov
cld
cld
mov
pop
insl
push
lea
daa
inc
fildl
xchg
sbbl
loope
lock
sub
sbb
daa
les
mov
ficompl
adc
sub
popa
mov
mov
pop
ljmp
sbb
sbb
inc
ds
sbb
mov
int3
push
add
inc
out
lahf
or
js
mov
loope
ret
dec
pop
mov
pop
popf
call
icebp
fs
or
insb
mov
stc
cwtl
out
xchg
fstps
aam
adc
add
insl
dec
stc
dec
sbb
imul
mov
ret
jl
lret
jmp
int3
add
lcall
jnp
and
test
mov
pop
inc
pop
dec
xor
dec
jle
fwait
inc
jno
insl
test
cs
mov
shlb
pop
jp
push
pop
mov
aad
pop
dec
data16
cmp
hlt
popa
loop
insb
push
addr16
addr16
push
cwtl
cs
cld
repz
sub
fists
addl
lahf
std
mov
lahf
jg
mov
repz
mov
mov
mov
out
mov
or
in
dec
arpl
push
ja
dec
outsb
sahf
shll
mov
mov
ljmp
std
incb
and
add
sahf
adc
aas
sub
into
sub
cltd
mov
movsb
imul
pushf
cmp
mov
ss
jo
inc
mov
and
rcrl
adc
lods
xor
mov
std
sub
lret
adc
inc
adc
mov
jp
mov
jnp
cmp
out
add
push
jmp
rcrb
in
fsubl
sbb
fwait
inc
in
fs
ror
pusha
xchg
jae
jecxz
je
fsts
cli
push
test
rcll
adc
sub
xor
or
rorl
sbb
or
and
pop
adc
testb
lods
iret
enter
push
and
adc
mov
sbb
inc
fldt
repz
xor
into
pop
mov
test
das
push
xor
mov
repz
jb
or
jg
loop
fstps
mov
mov
xchg
bound
sub
jo
movsb
insb
sbb
push
dec
ljmp
or
add
inc
mov
inc
mov
xor
pusha
idivb
lock
cmp
imul
jge
dec
iret
aaa
addl
mov
sti
pop
mov
insb
adc
sub
test
dec
sbb
iret
jae
dec
adc
fistpll
je
mov
les
imul
mov
jp
popf
out
mov
iret
test
cmp
sub
xor
test
push
imul
cmc
jae
mov
xor
fucomip
incl
in
outsb
out
gs
pop
jbe
nop
cld
dec
js
adc
mov
xor
aad
sub
lea
xchg
xor
mov
pop
jbe
adc
cli
mov
je
pop
ret
outsl
cwtl
cmp
jb
jmp
aad
iret
sahf
pop
sbb
imul
xchg
add
stos
sarb
arpl
cmp
xor
ss
fdivl
dec
ljmp
bound
cmc
and
and
pop
inc
adc
xchg
pop
lods
and
punpcklwd
stc
mov
jmp
jae
mov
test
jns
pop
stos
call
jmp
pop
stos
push
pop
loope
in
iret
fidivl
aad
pop
mov
movsb
cmp
movsl
sbb
rolb
test
and
xor
mov
jns
xor
xor
sub
rcr
mov
test
ret
pop
jle
sub
dec
mov
js
sbb
dec
jne
test
and
jae
lods
inc
inc
push
xchg
mov
mov
xchg
lcall
out
stos
jge
push
test
pop
popa
xchg
int3
inc
jo
sbb
xchg
addl
xchg
mov
pop
rep
fldt
cmp
mov
movsl
jge
and
int3
addr16
add
cmp
mov
sbb
stos
aaa
dec
mov
inc
jmp
pusha
xor
les
sub
mov
scas
push
bound
and
fstl
sub
arpl
cltd
jg
fs
sbb
jecxz
lret
je
mov
imul
ret
outsl
rorb
or
rorl
std
data16
hlt
cltd
jbe
cmp
jg
fs
clc
or
jg
xchg
stos
std
leave
nop
inc
repz
call
inc
push
test
mov
push
xchg
je
out
bound
fs
sbb
jp
mov
cmp
loope
inc
dec
push
ffree
xchg
sub
sub
arpl
movsw
xor
xchg
mov
shrl
in
cmovle
rolb
shlb
mov
inc
jp
mov
xchg
out
or
decl
cltd
push
popa
push
in
add
fisubs
aaa
incl
pop
pop
or
imul
call
mov
sub
rolb
jns
cmp
xchg
mov
inc
push
inc
jge
ja
push
outsb
outsb
movups
and
sbb
add
dec
test
cmc
addr16
fwait
push
jmp
mov
jecxz
mov
movl
mov
push
or
push
jo
rolb
rorl
into
inc
cmp
jo
stos
leave
pop
adc
jo
aad
jecxz
fcoms
mov
popa
push
mov
cmp
and
cltd
call
sbb
lcall
jbe
loop
mov
sbb
pop
mov
or
or
bound
scas
nop
jmp
fadds
movsb
xchg
dec
ret
rorl
rorl
decb
stc
mov
sub
das
push
mov
das
je
cld
test
dec
sub
cmpsb
call
add
inc
fldlg2
pop
insl
mov
sub
adc
mov
pop
pushf
pop
jmp
dec
daa
push
add
out
pop
cmpsb
test
es
es
lods
test
adc
lock
pop
fistpl
and
les
dec
nop
and
and
xchg
in
xor
adc
imul
mov
xchg
cld
dec
hlt
lock
sub
insb
out
arpl
lea
addr16
stos
je
mov
jmp
cmpb
rcr
mov
push
jl
jmp
xchg
xchg
lret
pop
push
stos
adc
ret
mov
pop
in
jle
idivb
push
nop
jnp
lea
jno
pop
ljmp
ret
lret
inc
in
add
adc
mov
cmp
jmp
jb
ss
add
sub
sbb
mov
aas
dec
inc
sbb
daa
fimull
add
dec
pop
mov
push
pop
jns
popa
inc
push
andb
hlt
push
jns
xchg
push
xor
adc
ret
rolb
sbb
pop
jns
pop
mov
dec
lock
xchg
lods
mov
push
sbb
lds
pushf
push
data16
pop
add
cmc
pusha
pushf
mov
cmp
mov
insb
cmp
cmp
mov
xlat
mov
in
mov
cwtl
mov
mov
shlb
aas
jns
data16
jg
cs
mov
aam
sub
hlt
int
xlat
enter
in
out
and
or
jecxz
cmpl
lods
mov
leave
adc
lods
and
push
push
jg
stos
arpl
ja
mov
hlt
ljmp
mov
aad
test
adc
dec
or
sub
fstpt
mov
inc
jno
outsl
xchg
or
lahf
rclb
jl
adc
sbb
mov
push
inc
jae
mov
loop
xor
mov
ljmp
cmpsb
outsb
push
cli
das
iret
dec
out
in
loopne
and
rcrb
inc
inc
sub
xchg
xlat
pop
ljmp
icebp
jecxz
ljmp
popf
jmp
pop
push
mov
repz
pop
dec
push
gs
cmp
jp
inc
icebp
sbb
jecxz
dec
and
pop
ljmp
push
jecxz
jno
scas
lods
add
xchg
ljmp
repnz
pop
mov
pop
mov
sbb
or
mov
pop
adc
adc
xor
fistpl
scas
cmp
les
les
xlat
pxor
sbb
and
xchg
cmp
sub
cmp
lcall
ret
repnz
shrb
adc
pushf
loopne
cwtl
mov
imul
mov
loop
lds
jns
mov
mov
add
push
mov
cmp
push
bound
arpl
mov
sub
decl
bnd
inc
test
inc
dec
sub
mov
jb
mov
data16
jnp
sbb
sbb
fidivrl
or
or
fs
jmp
and
mov
mov
xor
xchg
xchg
sahf
and
push
dec
xchg
lods
add
cmp
hlt
sub
or
mov
xchg
cmp
mov
in
inc
inc
push
sbb
jno
movsl
mov
jnp
xor
push
add
xchg
loope
loop
data16
mov
xor
push
cmpsb
fdivs
sbb
pop
mov
push
mov
pop
ficompl
std
mov
xchg
xchg
adc
push
sbb
jns
or
mov
pusha
std
push
inc
jp
imul
lods
xchg
xor
in
xchg
lods
or
cmc
clc
cli
adc
ds
ret
cmp
add
xor
xchg
lods
enter
mov
dec
pop
decb
cmp
add
inc
repnz
daa
repz
loope
ss
aas
data16
pop
pop
cmp
pop
jnp
stc
popa
sbb
and
lret
lods
or
std
or
cld
cmpsb
jecxz
mov
jg
dec
xor
sbb
inc
cltd
sbb
repnz
xor
sbb
pop
jo
nop
jg
in
bound
mov
xchg
pop
jp
gs
shll
cmp
insb
pop
das
adc
mov
mov
jb
data16
stc
js
fcoms
sbb
out
insl
mov
in
xchg
push
test
cmp
fstl
arpl
inc
add
jl
jns
loopne
jb
incb
and
std
jge
mov
call
popf
sbb
adc
in
mov
push
dec
sar
call
push
pushf
mov
or
mov
mov
xchg
shll
mov
push
mov
cmp
ret
out
lock
inc
in
rcrb
adc
jne
in
xor
pop
mov
jnp
mov
outsl
test
mov
in
push
mov
fs
movsl
push
mov
stc
pop
mov
js
sahf
pop
pusha
insl
sar
out
fisubrs
testl
jge
addr16
mov
push
jl
add
insb
adc
rclb
loope
lret
int
push
out
inc
daa
xchg
mov
lods
mov
add
cli
sbb
xchg
mov
ficompl
dec
imul
inc
repz
ret
pop
mov
in
jle
push
mov
lods
and
ret
xchg
sahf
lds
add
xor
adc
mov
or
push
jns
jns
mov
cltd
inc
fxch
sbb
mov
push
scas
enter
pusha
lods
cmpsb
jmp
test
addb
outsl
adc
cmpsl
sub
cmp
jl
test
lret
push
xor
repnz
stos
cld
sbb
in
mov
jbe
adc
dec
adc
mov
fnsave
mov
adc
add
aaa
mov
fidivs
mull
loop
jo
ds
xor
lahf
in
shr
add
xchg
ss
insb
push
inc
je
es
std
and
rcrl
stos
rcrl
jmp
mov
mov
filds
stos
stos
mov
sbb
frstor
jns
push
dec
xorb
jns
iret
mov
and
or
gs
adc
xchg
addb
lcall
and
push
daa
push
cli
xor
cli
cld
jnp
rorb
fldl
dec
sti
cwtl
jmp
movsl
push
xchg
test
test
mov
sbb
add
mov
sbb
ret
pop
std
outsl
insl
pop
inc
ret
gs
hlt
cmp
js
jne
or
dec
fwait
out
jg
xorl
and
out
cmp
sar
jne
sub
jno
sub
je
mov
pop
jbe
les
or
push
xchg
or
hlt
sub
and
test
andb
mov
scas
movsl
les
in
xchg
lea
sbb
les
pop
pop
stos
js
sbb
mov
xchg
ret
xadd
push
jns
inc
push
ret
xchg
xor
out
lods
pop
dec
lea
icebp
jmp
sahf
dec
je
xor
popa
inc
cmp
js
pop
and
pop
sbb
jmp
jmp
push
test
subb
jns
jbe
push
jmp
ret
sbb
nop
push
addr16
mov
pop
mov
rorl
shll
pop
rcll
arpl
or
in
mov
dec
stc
adc
or
dec
adc
mov
jno
sbb
mov
cmp
and
sbb
sub
adc
dec
int
repnz
sbb
test
ljmp
movsb
pop
pop
in
in
out
aas
dec
pop
mov
dec
fsubl
adc
jb,pt
xlat
gs
movsl
add
clc
sti
dec
data16
lea
out
pusha
cld
pushf
sbb
int
clc
or
cmp
xchg
mov
mov
add
cmp
xchg
gs
fisubrl
clc
fmuls
inc
mov
mov
sahf
in
pop
adc
xchg
and
pop
xor
sbb
jmp
add
ljmp
adc
lods
js
jb
stc
add
enter
jl
push
inc
mov
ja
fdivl
sub
add
loop
jmp
push
push
jmp
xor
inc
rcr
push
or
loopne
cld
dec
dec
mov
mov
fsubrl
add
ljmp
inc
idivb
loopne
dec
imul
xchg
das
or
jmp
mov
or
mov
outsb
and
std
push
cmp
cmp
dec
mov
clc
or
mov
jmp
sub
push
push
nop
movsl
xchg
ror
les
mov
dec
sub
int
or
push
out
dec
inc
dec
adc
repnz
ret
push
mov
inc
cmp
mov
ret
fldcw
xchg
mov
sub
cmp
pop
pop
aas
mov
das
stos
out
in
jmp
or
mov
pusha
frstor
gs
lahf
orl
ds
dec
sub
jge
xlat
loopne
push
cmpsb
adc
sbbl
mov
fistps
repnz
ret
pop
gs
mov
xchg
shlb
dec
repnz
dec
pop
int3
in
arpl
pop
call
sub
std
adc
inc
push
adc
xor
imul
add
cli
in
pushf
rcr
adc
fxch
inc
xor
xchg
xor
sbb
cli
clc
test
test
lock
push
inc
sbb
insb
sarb
push
push
cs
and
std
scas
pop
cltd
cli
add
pop
imul
imul
dec
jae
inc
lods
or
or
outsb
mov
lds
or
adc
fsubs
mov
cmpsl
icebp
mov
xorl
pop
adc
and
pop
cltd
cmpsb
loope
pop
call
or
aas
xor
in
cwtl
sub
and
sbbb
cs
leave
xchg
loop
fstpl
psubq
xchg
jmp
sub
clc
xor
add
jnp
jae
les
fidivrl
cmp
fwait
and
mov
cmc
cmp
jg
daa
loop
cmp
sti
fsubs
lods
pop
cmc
movsb
mov
ds
outsb
movsb
aas
push
cmpsb
aad
jmp
outsb
outsl
pop
testl
sarl
cmp
shll
loop
jmp
popa
sub
dec
jno
jae
bound
mov
dec
cmp
scas
mov
jo
add
mov
pop
movsl
insb
add
xor
mov
push
sbb
lds
hlt
mov
pop
or
mov
imull
adc
sub
jne
arpl
jecxz
sti
pop
imul
out
adc
loopne
xchg
mov
loope
lock
es
mov
btc
es
adc
outsb
fcomps
or
fbstp
insl
pop
pop
mov
push
lret
into
sub
pop
ret
mov
mov
popa
push
setp
popf
mov
sub
int3
mov
dec
xchg
inc
and
sbb
mov
enter
xchg
pop
add
mov
adc
jbe
pop
pushl
mov
in
lret
sbb
cmp
dec
dec
inc
sbb
nop
cmp
in
insl
inc
fnop
dec
xchg
int3
jb
jae
adc
jle
dec
mov
iret
dec
or
add
sbb
add
outsl
les
in
cmpsb
xor
push
sbb
sbb
ja
pop
jp
inc
cmp
jle
int3
subl
test
pushf
push
xor
jmp
cmp
mov
add
enter
adc
sbb
in
add
mov
xchg
push
dec
rcll
push
jae
push
lcall
xor
popf
sbb
pushf
push
or
icebp
mov
clc
fldcw
or
cmp
push
lea
fs
jbe
adc
jg
xchg
xchg
in
mov
mov
cmp
mov
ja
popa
leave
adc
incb
and
mov
sbb
sub
out
dec
repz
and
add
in
dec
dec
and
stos
outsb
mov
incb
push
adc
es
push
dec
add
fs
dec
test
scas
or
mov
gs
scas
xor
punpcklbw
out
arpl
dec
add
xchg
xor
mov
push
cmc
jg
pop
adc
xchg
es
jp
jecxz
mov
iret
or
sub
cli
xchg
and
add
stc
xor
mov
add
outsl
neg
cli
stos
mov
jae
cld
mov
cmp
inc
or
orb
pop
adc
out
mov
push
cltd
cltd
je
loop
mov
fsubs
mov
add
popa
enter
jbe
dec
pusha
lods
aam
data16
dec
push
frstor
and
pop
fstps
push
xchg
pop
mov
imul
pop
cmpsl
ret
inc
mov
andl
pushf
pop
adc
sub
inc
stos
xchg
cmpsb
mov
imul
add
push
rolb
das
xchg
movsb
jge
loopne
in
cmp
jge
xlat
test
xor
xchg
cmc
fs
dec
cld
jnp
and
pop
xor
fcomps
add
inc
fst
rclb
cltd
inc
sbb
jp
ja
or
jns
xchg
arpl
jns
push
js
adc
jb
cmp
dec
test
je
push
in
fsub
dec
sub
pop
sub
sub
jmp
cmpsb
push
test
xor
pop
jne
cmp
ljmp
dec
into
add
cmp
out
cmp
into
in
add
and
jo
gs
rcr
insb
fdivrs
cmp
cmc
cmp
movsl
cld
adc
cltd
mov
ret
mov
or
stos
ja
jg
hlt
cltd
stos
iret
inc
movsb
sbb
xor
push
xorl
sub
mov
and
add
scas
adc
xchg
lret
push
sbb
out
aad
roll
lret
pop
mov
mov
fcmovbe
roll
iret
push
jb
push
add
xchg
stos
and
push
ja
add
mov
sbb
rorl
testl
cmp
cmp
cmpsb
inc
and
ds
cmp
xlat
add
mov
and
and
scas
mov
out
lret
mov
jbe
jecxz
addb
inc
fsubrs
mov
push
mov
repz
shll
pop
xor
test
cmpsb
add
in
cmpb
imul
pusha
gs
mov
add
test
or
jo
push
lret
cmp
and
lods
cmp
in
mov
inc
stos
xchg
les
pop
sbb
lods
mov
insl
dec
fmuls
jo
sub
sbb
cltd
dec
cmp
and
fsub
adc
pop
es
ucomiss
lret
or
pusha
lret
pop
pusha
gs
cmp
xor
jnp
pop
xor
cmpsl
push
imul
mov
imul
sbb
subb
push
notb
scas
adc
adc
les
fimull
jmp
jbe
imul
out
sub
xchg
pop
sub
push
mov
pop
sahf
je
cld
add
pop
pop
fcmovbe
lods
pop
xchg
js
jmp
sub
add
sub
xor
inc
scas
pop
pop
cmpsb
stos
mov
mov
xor
add
or
jmp
or
dec
int3
inc
xchg
jle
sub
mov
mov
insl
adc
mov
adc
loop
lahf
test
hlt
ret
cmpl
bnd
scas
cmpsl
aad
popf
push
loopne
sbb
cld
cmp
mov
fxch
mov
mov
lcall
inc
jns
push
or
inc
in
cwtl
pop
repnz
jg
sbb
daa
mov
imul
imul
es
out
iret
popf
and
scas
inc
inc
push
add
fstps
inc
pop
addr16
push
or
cld
jp
sbb
mov
aas
mov
imul
mov
test
xchg
add
sub
or
mov
lock
inc
jne
sub
cmp
mov
popf
ud1
fsubrs
sub
dec
fisubl
insl
pop
add
je
jo
aaa
test
fsts
bound
outsb
or
mov
ds
in
call
popf
pop
loop
js
sti
and
pop
mov
add
cmovge
mov
mov
or
push
mov
and
test
cmc
jmp
cmp
in
mov
js
jae
test
and
push
pop
jns
loop
jg
les
pushf
fs
or
call
or
or
adc
xchg
stos
ret
sbb
sbb
test
and
add
les
adc
lcall
loope
es
xchg
js
adc
adc
aaa
xor
and
mov
fnop
adc
push
and
adc
inc
notb
fidivrs
inc
cmp
in
ficoml
out
insb
outsb
xor
out
xor
adc
xchg
frndint
cmp
pop
shll
inc
sub
mov
movsl
lds
mov
pushf
jae
cld
bound
dec
cmp
and
das
sti
bound
int3
addl
ds
push
lods
lcall
xchg
mov
mov
cli
lock
je
int3
loop
imul
jmp
cld
cmpsb
cs
adc
mov
lds
shl
shlb
push
add
or
test
jmp
or
xchg
dec
cmp
sbb
sbb
or
lods
and
mov
fidivrs
ret
cmp
and
into
out
movsl
mov
lret
dec
push
lods
dec
or
jge
xor
loopne
call
loope
scas
lret
cmp
bound
push
es
or
stos
jae
dec
adc
xchg
nop
jp
xchg
addl
push
xchg
cmp
icebp
xchg
push
mov
push
enter
imul
lods
ficompl
push
and
mov
mov
pop
xlat
negl
mov
push
jle
inc
mov
imul
add
fistpl
add
movsb
add
xchg
pushf
dec
stos
nop
mov
sub
std
mov
addr16
mov
sbb
pop
dec
mov
andl
outsl
out
inc
lods
scas
or
stc
out
jp
mov
push
mov
xchg
pusha
dec
jno
lcall
sbbl
test
test
lcall
imul
sbb
jbe
ror
lret
cmp
lahf
cld
xor
cld
and
shll
sub
and
pop
xorl
pop
xorl
dec
and
rcr
lret
pop
cmp
cmpsl
adc
push
cmp
push
or
pop
push
leave
rolb
xchg
je
adc
mov
inc
in
imul
xor
jo
fidivrl
jecxz
pop
mov
pop
pop
sub
add
jg
or
lods
mov
mov
push
rorb
cltd
fisubrl
shlb
in
xor
mov
out
push
jo
hlt
orl
push
adc
ds
xor
inc
ffreep
jecxz
sub
xchg
lcall
rcrb
imul
scas
test
jg
sbbl
cld
jae
aaa
bound
neg
sbb
in
mov
or
add
pop
jge
xor
xchg
fcom
cli
fstpl
xorl
adc
adc
scas
mov
mov
add
pop
sub
stc
dec
movsl
pop
or
lock
sub
mov
inc
outsb
push
ss
push
add
test
mov
xor
cmp
loop
xor
test
insl
cmpsl
leave
out
outsl
pop
gs
adc
insl
out
mov
dec
add
cmp
sti
cmp
adc
ljmp
xchg
aam
jnp
xchg
mov
push
test
push
cwtl
mov
loope
mov
bsf
call
xchg
mov
lea
cmp
and
cmpsb
roll
cmp
repnz
lock
bswap
cld
sbb
faddl
stc
outsl
repz
enter
dec
out
test
and
ds
test
xlat
or
out
mov
loopne
dec
insb
and
xchg
ss
bound
mov
cmpsl
incl
ljmp
das
fidivrs
sbb
fcmove
ljmp
in
mov
cmpsl
mov
in
mov
fwait
ja
jl
je
mov
outsb
fsts
aad
outsl
cmp
test
pop
and
cmp
xor
icebp
cmp
shrl
in
mov
mov
outsl
pop
lea
inc
movsl
push
repz
popa
notl
rcl
adc
mov
jns
in
cs
enter
sahf
cmp
lret
and
cmpl
pop
xchg
out
sarb
jbe
and
mov
movsb
adc
fs
xchg
outsl
insb
sbb
pusha
cmpsb
adc
jmp
cmc
sub
stos
and
dec
or
test
inc
cmp
sbb
mov
cmp
xchg
or
out
xchg
xchg
adc
imul
iret
fcomps
lods
xor
push
cmp
mov
and
jle
dec
add
aas
dec
mov
vpmacsdqh
fldenv
ss
adc
pop
xor
ss
mov
imul
fisubl
mov
xchg
arpl
idiv
inc
cld
pop
das
push
js
repnz
popa
pop
jb
push
mov
cmpsb
mov
push
xor
cltd
sbb
mov
push
push
cmp
add
addr16
cmp
adc
pop
hlt
lods
mov
mov
roll
pop
mov
data16
sbb
push
imul
bound
cmc
aas
cmpsl
mov
stos
ss
ja
sbb
bsf
lds
lcall
sbb
mov
mov
push
cmpsb
xchg
mov
push
sub
push
shlb
inc
pop
sub
mov
rcrb
and
decl
cmp
orl
pop
dec
adc
adc
mov
popf
pop
ds
inc
mov
aaa
jae
sub
xlat
pop
je
inc
and
nop
notb
push
xor
ds
xchg
je
fbstp
jmp
push
hlt
adc
gs
push
xchg
fimull
push
jl
outsl
scas
xor
leave
sahf
mov
lock
ljmp
inc
pop
clc
xor
jnp
outsb
dec
movsb
stos
inc
fadds
insb
lret
cmp
push
pop
pop
mov
cmpsb
jno
cwtl
xchg
mov
nop
push
cmp
inc
jmp
mov
mov
out
mov
rcl
lret
mov
push
hlt
mov
mov
jecxz
jle
fsubr
pop
xor
jnp
cs
mov
xor
stc
lds
outsb
cltd
and
out
lods
add
sub
mov
xor
mov
mov
icebp
jl
push
or
icebp
sbb
dec
and
add
inc
mov
std
jae
and
sub
xchg
pop
insb
subl
fnstenv
pop
mov
pop
jle
test
addr16
inc
cwtl
call
fistpl
jo
out
test
jnp
shl
mov
and
jb
xchg
push
lahf
and
sti
sub
push
mov
and
lcall
jae
imul
cli
and
icebp
fcmovb
jl
push
and
lret
sbb
fdivr
add
in
jp
rcll
pop
fs
subl
or
jnp
cmp
xlat
mov
leave
and
pop
jmp
sub
mov
add
adc
adc
sbb
adc
or
jae
aas
int
pop
fwait
shlb
loop
lods
push
rorb
in
and
pop
push
std
imul
mov
mov
mov
js
adc
sub
jns
leave
cli
les
rcr
outsb
dec
enter
ljmp
sarl
repnz
shrl
ret
popf
cwtl
leave
jmp
inc
cli
loope
pop
jmp
xor
aas
insl
and
icebp
out
out
cmp
and
inc
notb
lret
cmp
mov
dec
sahf
jmp
shll
dec
ja
sti
inc
jnp
ljmp
or
add
je
insl
cld
mov
out
lods
sbb
cmp
push
out
xor
addr16
pop
mov
xchg
imul
psubq
jno
ljmp
fs
pop
push
dec
sbb
dec
xchg
dec
es
inc
loopne
jl
cmpsl
mov
or
pop
fimull
pusha
adc
mov
cmp
sbb
clc
push
xlat
xor
mov
gs
adc
leave
outsb
adc
int3
cmpsb
sub
inc
into
pop
xor
stc
xchg
add
movsb
jp
icebp
push
popf
cmpsl
or
dec
call
sub
cmpsl
jae
cld
and
add
mov
jb
mov
repz
lret
inc
xor
inc
imul
in
mov
xor
insl
push
femms
pop
mov
dec
add
jle
das
dec
je
mov
leave
cmp
lds
incb
sbb
mov
push
hlt
lock
pop
dec
push
inc
sub
test
shr
div
icebp
mov
loopne
hlt
int3
repz
mov
add
lock
test
cwtl
push
cmp
adc
xchg
mov
cmc
rcrl
movsl
mov
js
rcr
dec
mov
stc
cmpsl
aas
xchg
mov
out
movsbl
mov
xor
push
mov
sbb
loop
xchg
pop
dec
and
int
in
xor
adc
adc
inc
pop
or
aam
repnz
dec
mov
dec
cld
shlb
xor
push
adc
mov
mov
adc
pop
mov
test
fldenv
push
call
nop
cmp
nop
out
std
imul
and
or
mov
xlat
or
fcmovu
in
sub
mov
stos
pop
stos
les
jns
jl
and
sub
jle
push
orl
lock
push
pop
xlat
movsb
jb
mov
pop
subb
jno
sub
push
inc
shrb
pop
clc
stos
jmp
and
mov
pop
repnz
call
inc
mov
mov
add
int3
popa
jb
sbb
in
iret
inc
push
cwtl
push
repz
add
dec
movsl
adc
jl
inc
lods
mov
out
mov
decb
icebp
leave
gs
xchg
pop
in
or
mov
movsl
jns
in
pop
mov
out
test
pop
adc
add
mov
je
cmpsb
sbb
xchg
out
mov
inc
mov
jnp
pop
ljmp
push
addb
xchg
fdivl
roll
adc
fdivl
mov
push
ss
adc
jecxz
lret
pop
xchg
pop
or
mov
mov
stc
mov
sub
loopne
sbb
lret
divb
sbb
pop
xor
dec
jbe
fcoml
sbb
mov
fwait
sbb
fildl
lahf
rcl
out
fmull
fwait
sahf
sub
scas
inc
scas
mov
or
cmpsb
in
int3
push
jbe
nop
mov
add
sbb
cli
mov
arpl
aad
dec
lods
and
out
push
mul
xchg
cmp
mov
jne
and
mov
ret
sbb
pushf
jmp
cmp
lock
scas
shll
leave
jns
mov
push
push
mov
sarl
pusha
mov
int3
pop
mov
loopne
cwtl
push
dec
mov
pushf
cmp
cli
push
mov
push
cmpsl
out
test
cmpsb
cli
inc
pop
cmpb
stc
dec
neg
arpl
scas
jp
in
insb
or
mov
add
add
xchg
xchg
pop
fcmovb
ljmp
dec
lods
in
xlat
xchg
and
fs
or
std
sub
fmull
lods
push
sbb
call
mov
aas
pusha
sbb
adc
mov
sti
or
pop
sarl
mov
in
stos
ss
cmp
adc
leave
push
stos
ss
mov
shll
lret
xchg
jbe
lret
xchg
cmp
cwtl
orb
adc
xchg
adc
adc
push
mov
int
mov
jg
sub
dec
jle
loope
loop
in
and
adc
dec
in
mov
test
inc
lods
push
mov
loope
out
dec
cmp
mov
push
jg
add
daa
sub
adc
xchg
cmp
pop
push
xor
xor
jmp
adc
inc
cmp
jne
clc
jae
ret
mov
subl
movsl
mov
xor
cmp
adc
sub
icebp
je
in
push
sub
fistps
mov
divb
lret
divw
mov
ret
inc
adc
dec
jge
mov
jnp
mov
punpcklwd
std
rorb
mov
push
push
popf
lea
hlt
push
imul
enter
mov
pop
popa
sub
inc
add
lock
mov
int3
mov
sti
xchg
mov
ficoms
cmp
and
adc
mov
xchg
dec
and
inc
pop
loope
jecxz
cmp
arpl
addr16
js
add
mov
test
fmulp
cmp
test
sub
sbb
mov
xor
cmp
pushf
add
loopne
inc
mov
cmpsl
fcompl
stos
jns
ds
lea
adc
pop
pop
aaa
mov
jge
int3
rcll
pushf
subb
lds
fstp
cli
lods
test
ss
stos
ljmp
xchg
mov
dec
xchg
xor
in
insb
add
ss
sub
jb
push
sbb
lret
neg
test
int3
aaa
pushf
insl
ret
push
insb
xor
leave
mov
fmull
enter
xor
mov
xor
inc
cmpsb
or
into
jecxz
repnz
sub
repz
dec
pop
out
push
out
xorb
xchg
clc
mov
add
jecxz
in
jecxz
add
jnp
lea
fidivrl
lret
push
jmp
cmp
fmull
dec
jmp
jb
shll
es
mov
xor
sub
xchg
xor
pushf
sub
add
in
int
cmp
lret
push
lods
jne
pop
loopne
mov
faddl
jnp
daa
inc
mov
jl
cld
clc
cs
cs
and
aam
mov
xchg
insb
mov
stos
xchg
mov
orl
mov
stos
jae
or
enter
pop
xchg
cmp
loop
lahf
xchg
je
jecxz
inc
aas
lcall
add
int
lret
mov
dec
pusha
dec
pop
cmp
dec
dec
adc
inc
xchg
shlb
fldcw
push
cmp
dec
iret
pop
cli
sbb
mov
out
aad
or
and
xchg
mov
ret
xlat
cmp
inc
je
cmc
stos
pop
fwait
xlat
jne
push
pop
push
jno
ds
pop
fs
andl
inc
in
das
lods
push
in
jg
addb
dec
rorl
cmp
in
jg
int
loopne
out
mov
cld
inc
int3
gs
je
mov
sti
mov
das
outsl
es
test
push
sbb
fnsave
nop
cmp
negb
mov
pop
cmp
add
mov
push
jns
and
lahf
out
and
das
cwtl
mov
ja
and
cwtl
push
loope
jne
adc
cmp
fstpt
negb
mov
cmp
adc
xchg
ret
pop
add
xor
mov
xor
iret
lods
fstpt
mov
sub
cmpsl
xchg
xlat
ret
out
mov
scas
pushf
cltd
jns
insb
scas
scas
jp
mov
cs
shll
mov
test
clc
pop
data16
pushf
sbb
std
into
dec
aad
clc
jae
movsb
adc
mov
jl
mov
outsl
loop
mov
into
into
enter
add
cmpsl
or
cmp
sbb
xor
jg
push
imul
add
sahf
xorl
sbb
lds
xchg
sbb
add
sub
xchg
nop
cmp
push
daa
aaa
fwait
jp
pop
out
adc
cmp
inc
je
fsubl
mov
or
mov
loope
out
push
adc
mov
inc
pusha
mov
call
push
push
dec
sbb
iret
mov
jge
nop
mov
pop
ret
and
out
in
pop
fcomip
dec
inc
pop
scas
xchg
push
call
ret
jp
idivb
adc
mov
cmc
add
mov
popa
scas
mov
imul
adc
mov
std
adc
adc
jl
nop
imul
je
rcr
nop
push
stos
scas
loopne
pushl
xlat
mov
jb
push
movsl
fdivs
scas
cwtl
push
inc
sbb
jnp
push
sub
les
push
inc
mov
jbe
sub
arpl
dec
inc
stc
mov
fnstenv
es
jno
stos
sub
lcall
xchg
ss
das
xor
xchg
add
mov
and
push
repnz
ja
test
jb
inc
shll
ds
and
pop
mov
xchg
scas
mov
xchg
cmp
test
outsb
lds
ret
mov
arpl
xor
loop
sbb
sbb
inc
push
es
imul
cmp
mov
fcoml
in
push
call
rcll
push
mov
stos
jnp
rcr
clc
test
jmp
popf
or
shrb
push
mov
cmp
sub
lahf
pop
imul
daa
icebp
dec
xor
lock
lea
mov
add
mov
and
fmuls
or
andb
push
icebp
mov
cltd
pop
adcl
ds
int
mov
pop
mov
pop
std
and
shlb
xchg
movsb
mov
pop
cli
jns
sub
sti
adcl
jg
mov
clc
pop
push
lret
jmp
mov
jnp
in
cmp
ret
fsts
rolb
in
adc
dec
sbb
daa
lcall
vmaxps
inc
fwait
inc
sbb
cmp
jae
shrb
jl
mov
orb
insl
repnz
xor
in
xchg
fisubs
cmc
fldt
inc
mov
mov
mov
xchg
mov
push
scas
adc
push
push
lods
dec
mov
loopne
fs
dec
sbb
rolb
cld
sub
push
pop
add
dec
jne
pop
lods
pop
outsl
les
lods
mov
xlat
in
xor
push
dec
in
adc
cwtl
inc
int
pop
push
repz
outsl
jne
sub
cltd
aaa
int
out
aas
jmp
push
lret
pusha
add
out
call
or
dec
inc
and
mov
fcmovb
insl
lock
inc
leave
mov
or
jmp
jge
jo
adc
dec
jl
inc
in
sti
test
push
insb
sub
adc
xchg
adc
cmp
cltd
cli
inc
jo
xor
loope
xor
and
sbb
cmpsl
aaa
mov
scas
movsb
imul
into
out
sbb
insl
jmp
cwtl
ret
scas
fildl
push
add
cltd
or
out
pop
repz
cmp
out
cwtl
arpl
pop
leave
scas
add
mov
shrl
jbe
cmpsl
pop
sub
js
and
xor
out
jae
data16
xchg
clc
addr16
mov
sub
or
orb
sub
mov
ficoml
mov
cmp
jne
lret
dec
loop
and
sbb
pusha
out
bound
call
in
push
cmp
dec
ret
out
jecxz
loop
mov
mov
pushf
sti
lret
push
mov
xchg
lock
popa
int
sbb
jp
cmpl
cwtl
mov
fistl
jg
ljmp
das
gs
and
and
mov
jns
inc
adc
inc
push
insl
shll
cmp
inc
in
lock
insb
lds
jp
cltd
or
jecxz
push
inc
xchg
add
test
inc
and
or
movsl
inc
ret
nop
cmp
sub
idiv
mov
outsl
loopne
aad
stos
mov
cmp
loope
sarb
add
mov
xchg
sbb
inc
outsl
jl
and
cmp
ja
es
loopne
cmp
outsb
insb
mov
cli
push
cltd
faddp
pushf
sahf
mov
mov
rorl
bound
or
adc
dec
lds
xchg
cli
adc
fnstsw
cmp
cs
or
add
mov
adcl
movsb
dec
test
hlt
adc
or
icebp
aam
fidivl
jecxz
xlat
xchg
mov
pop
fists
adc
jp
inc
xchg
pusha
insl
inc
push
lock
enter
shll
add
lcall
or
stos
outsb
mov
push
fidivrl
add
fiadds
pop
cmp
loop
or
or
xchg
jns
cmp
jecxz
add
cmp
sub
clc
inc
jl
sbb
adc
pop
iret
pop
lcall
push
sbb
stos
and
jnp
adc
or
lea
mov
lahf
ja
pop
in
sub
sbb
mov
adcb
dec
loope
inc
and
daa
lods
enter
cli
lahf
dec
ds
and
enter
and
leave
mov
fstl
pop
pop
inc
in
mov
jl
cs
rcrl
jns
inc
mov
test
fs
sub
and
push
add
jecxz
push
dec
clc
lds
mov
mov
cmpsl
xchg
push
test
or
inc
stos
test
xor
in
fstl
cli
dec
jmp
sbb
loopne,pt
mov
mov
xor
das
push
and
das
lods
enter
sub
mov
jle
xchg
push
aad
inc
xlat
add
or
inc
out
fwait
mov
test
adc
rcrb
inc
lock
adcl
xchg
xor
shlb
or
aam
shr
aam
insb
adc
les
mov
inc
jp
arpl
and
jbe
movq
add
leave
xor
push
les
or
jecxz
push
out
mov
sub
test
xor
xor
mov
enter
mov
sub
insl
add
ret
into
xchg
je
loopne
mov
das
test
inc
or
pop
cmp
xor
or
ret
inc
xor
in
fsts
pop
orl
fwait
stos
outsb
mov
sbb
xlat
test
imul
ds
in
push
je
int
adc
jle
out
ficoms
jne
decb
lock
push
mov
pop
into
dec
stos
test
push
subb
pop
xchg
xchg
add
aad
dec
aaa
lds
pushf
mov
loop
jl
jbe
dec
in
pop
pushf
test
push
lret
fldenv
or
cwtl
inc
loopne
fsubr
push
subb
cs
and
cmp
adc
sarl
adc
pop
pusha
dec
mov
fs
pusha
push
ljmp
outsl
out
mov
ljmp
inc
mov
mov
adc
mov
stc
ret
or
addr16
xorl
scas
orb
mov
lret
sbb
test
out
cmp
mov
mov
js
jecxz
lock
negb
lods
lret
in
in
out
sub
int
stc
push
mov
stos
jbe
push
lock
clc
xor
aam
fwait
inc
popf
cmp
mov
cmp
sti
cmovnp
loope
adc
test
sub
xchg
andb
sbb
push
and
insb
dec
arpl
cmc
enter
pop
and
push
fildll
add
clc
mov
lds
insb
lret
and
push
xchg
mov
outsl
pop
pop
es
dec
sub
pop
xor
loopne
adc
incl
jl
lcall
icebp
xor
cs
and
mov
or
xor
pushf
cmc
jnp
movsl
jnp
and
call
jp
sub
cmp
lods
pop
or
mov
clc
scas
push
add
cmp
sbb
add
dec
les
int
and
shlb
sbb
mov
icebp
xchg
jnp
nop
sbb
push
jecxz
cltd
arpl
shll
push
icebp
out
fs
stc
cmpsb
lock
std
clc
jnp
test
incb
jnp
out
adc
ja
dec
leave
addr16
sti
xor
insb
in
adc
or
movsl
cmpsb
arpl
int3
jp
mov
insl
inc
or
push
jl
and
outsb
xchg
xlat
outsb
adc
add
loopne,pn
or
aad
sub
mov
or
or
sbb
into
inc
sti
or
aam
xlat
cmp
cmpsb
or
xchg
mov
xor
sub
cs
xchg
pushf
arpl
adc
in
dec
sub
lods
fists
dec
insl
xor
fdivr
inc
loope
mov
ja
popa
addl
shrb
sub
loopne
jg
call
jae
or
test
out
call
mov
stos
push
and
adc
inc
push
xor
dec
imul
or
fadds
test
cmpsl
out
or
adc
inc
xor
mov
add
fmul
push
pop
repnz
and
ret
ja
pop
inc
clc
pop
mov
or
lret
push
je
mov
idiv
dec
push
pop
into
scas
cld
dec
mov
cmc
dec
inc
add
adc
xor
in
clc
inc
mov
sub
jae
stc
int3
and
mov
imul
add
push
fnstenv
xor
aas
mov
pusha
lock
push
in
mov
cmp
rorl
in
shlb
cmp
dec
mov
leave
lret
mov
jns
aaa
jecxz
shlb
ret
sub
dec
mov
sub
fistpll
rcrb
mov
fstpt
mov
loope
sarl
or
mov
cwtl
sub
daa
and
bound
dec
or
jnp
aas
lea
lahf
js
repnz
and
sbb
cld
arpl
jle
data16
imull
jnp
inc
mov
push
push
pop
movsb
data16
adc
dec
inc
pop
sub
xor
lods
arpl
pop
sbb
fcmovne
mov
inc
ljmp
add
sbb
outsb
mov
mov
xor
mov
fnsave
stc
or
cwtl
mov
adc
jmp
cmp
movsb
inc
mov
movsl
push
add
mov
sti
loopne
inc
cmpsl
push
lock
call
cmc
inc
pop
outsb
data16
xor
lcall
mov
add
loop
inc
xor
pop
stc
dec
push
sbb
fdivrp
and
pop
daa
ja
mov
sbb
xor
std
or
mov
inc
mov
int3
inc
shll
jb
stc
add
sbb
or
ljmp
rcrl
outsb
jbe
sub
xchg
es
mov
les
adc
mov
add
jmp
dec
lret
dec
lret
ror
arpl
test
clc
cmpsl
and
aas
lret
insb
les
jns
pop
xchg
sub
inc
push
mov
xchg
dec
dec
in
scas
sbb
cmp
aam
mov
sub
jmp
inc
clc
inc
and
stos
lds
or
or
jl
loop
pop
subb
scas
pushw
mov
dec
push
daa
jb
lods
mov
mov
andl
out
dec
sbb
sbb
clc
sub
sub
mov
jge
repz
inc
xchg
mov
popl
xchg
fadds
gs
xlat
fisubrl
jnp
sub
jbe
sub
div
addl
sbb
sub
fdivrs
xchg
pushf
push
scas
pop
or
sub
pop
enter
lods
mov
mov
push
shlb
xlat
jnp
inc
jge
or
mov
push
sub
shl
jge
data16
or
jp
lock
push
mov
ljmp
hlt
pop
popf
add
in
rol
js
shlb
fbstp
xchg
fucompp
pminsw
mov
pop
adc
cld
lods
call
lret
outsl
stos
jo
cli
push
dec
mov
loopne
adc
mov
jo
push
cmpsb
sarl
adc
dec
xchg
cmp
xor
outsl
or
outsl
cmp
loop
xchg
dec
rorb
xchg
dec
ja
push
dec
je
and
enter
lea
mov
dec
ljmp
inc
sbb
mov
mov
in
sti
lcall
push
mov
xchg
cmp
loopne
xor
mov
or
and
dec
mov
imul
mov
cmp
jecxz
pop
fcomp
in
xchg
cmp
xlat
movsb
mov
cli
add
jnp
pop
arpl
and
pop
fnstcw
repnz
notl
loop
xchg
mov
outsb
loope
cs
aad
push
mov
pusha
pushf
rolb
mov
cmp
mov
cli
std
popa
neg
pop
jne
pop
inc
pushf
les
movsl
repz
jnp
jmp
jno
sbb
ljmp
pusha
mov
sub
mov
in
dec
out
pop
jae
push
xchg
jecxz
xchg
ret
inc
mov
js
sbb
pop
or
xchg
addr16
lea
xchg
jl
cmp
xor
fstps
mov
push
pop
sub
mov
data16
in
mov
jno
push
outsb
sahf
clc
mov
lcall
nop
in
icebp
sarb
aam
cmp
insl
fisttps
or
mov
ss
mov
sub
add
push
inc
cmp
subb
sub
jbe
fwait
lahf
adc
loopne
sub
adc
or
mov
mov
push
cwtl
dec
or
lea
pop
sub
sahf
test
mov
cli
imul
inc
out
mov
dec
loopne
pop
std
cmp
int3
or
xor
mov
mov
add
in
movb
sub
sub
pop
sti
inc
lds
enter
pop
adc
nop
inc
adc
fidivrl
inc
ljmp
lock
mov
shl
jg
daa
int
out
jo
adcb
enter
and
pop
push
movsl
jp
inc
jne
xor
xchg
rorl
stc
and
push
cltd
mov
lcall
add
movsb
icebp
imul
leave
call
shl
ss
aaa
jle
lret
mov
xchg
fwait
mov
insb
sub
hlt
push
jnp
icebp
dec
mov
daa
outsb
inc
sub
add
iret
sbb
stc
test
shlb
xchg
adc
fsubr
out
sbb
out
push
enter
outsl
mov
sub
es
icebp
test
test
sub
ficomps
push
or
cmp
fmull
in
push
mov
shll
lret
movsl
pop
sahf
cld
sbb
jecxz
xchg
dec
cmpsb
loope
das
pop
jne
fisubs
sbb
das
jmp
jbe
fs
mov
dec
imul
jns
int3
inc
inc
fistpll
mov
pop
scas
ljmp
push
outsb
int3
lcall
fs
lock
and
lods
push
or
jbe
xchg
repnz
or
fcmove
subb
jg
ret
stos
iret
cld
sub
mov
icebp
ss
in
fdivs
std
fs
sbb
and
cmp
sbb
mov
cmp
imul
sbb
stc
out
addr16
inc
jnp
mov
leave
or
test
mov
mov
jbe
jl
cmp
adc
ret
mov
push
fnstsw
rorl
scas
inc
jb
outsb
test
and
xchg
mov
inc
icebp
mov
xor
cmovle
std
xor
aaa
xchg
jns
out
sti
popa
in
loope
cmpsb
mov
adc
rcrl
pushl
cli
jg
dec
jno
mov
dec
in
jl
in
dec
mov
fimull
mov
aaa
or
push
xchg
pop
popf
insl
jg
adc
test
sub
sub
push
xchg
pop
xor
je
pop
pusha
sub
std
push
mov
sub
push
mov
loope
inc
into
test
loop
bound
inc
repz
mov
xchg
mov
add
aad
cmp
outsb
lods
pop
fdivl
pop
mov
cwtl
in
push
mov
dec
sar
cmp
rcrb
pusha
jmp
mov
sbb
add
push
ja
repnz
mov
pop
push
pop
daa
adc
mov
shrb
pop
adc
push
popa
sub
inc
inc
xor
icebp
out
rcrb
xchg
and
pop
cmp
inc
add
jae
gs
les
gs
ror
mov
addb
pop
mov
lahf
mov
fdiv
and
lahf
sti
push
jecxz
ljmp
dec
or
shll
and
fimull
pop
rcrb
dec
mov
mov
pop
incl
fidivl
stos
sbb
into
mov
hlt
scas
insl
xor
cmp
cmpsb
lds
lock
adc
jecxz
or
out
in
mov
sbb
or
dec
fs
or
mov
fwait
adc
lds
mov
lret
je
adc
daa
xor
adc
mov
fstp
inc
xor
and
jns
aaa
pop
inc
sub
dec
xchg
cwtl
ret
test
stos
frstor
xlat
cmpsl
xchg
scas
jecxz
cld
decb
push
rcrb
adcb
cld
dec
mov
fwait
out
insl
jbe
data16
daa
sbb
cmp
mov
dec
repnz
jg
outsb
xchg
sti
mov
es
in
mov
or
xchg
in
mov
xchg
xor
push
cmp
xchg
xor
aaa
shll
clc
dec
push
inc
mov
int3
lret
mov
fcompl
imul
push
daa
cmc
testl
imul
pop
ret
xor
or
xchg
out
push
repnz
mov
inc
vcvtsi2ssl
lods
dec
or
sahf
jle
jmp
sub
sub
mov
xchg
push
lea
xchg
cld
pusha
bound
xchg
jno
sub
lods
loop
cwtl
xchg
in
inc
push
xchg
jne
fsubl
jp
aas
cmpsb
int3
dec
push
mov
pop
cmp
mov
xor
or
cwtl
cmpsb
dec
mov
pop
xchg
outsl
xchg
mov
sti
mov
sub
mov
pop
nop
into
std
into
sbb
cmp
jo
mov
xchg
jb
fwait
inc
pop
jecxz
stos
and
push
mov
daa
pop
aam
popf
lock
sbb
iret
loopne
pop
jbe
xchg
xor
inc
addr16
adc
imul
mov
gs
inc
pop
cli
cli
pop
cmp
pusha
mov
cmpsb
mov
pushf
jno
das
test
adc
icebp
daa
xor
sbb
popf
lcall
rclb
inc
cmp
shlb
hlt
xor
pop
mov
dec
arpl
inc
shll
movsb
xchg
rcrb
xchg
cmp
shlb
xchg
inc
sub
das
mov
imull
pop
insb
lods
sbb
test
ds
ljmp
or
imulb
fsubrs
jo
sub
inc
lahf
jae
jbe
pusha
mov
popf
and
outsl
add
sub
adc
mov
dec
or
jmp
aaa
adc
xchg
dec
jmp
push
scas
pop
inc
mov
jl
in
into
in
das
int
ljmp
mov
imul
movsl
notb
fbld
fistpll
cmp
push
add
jmp
movsl
repz
fucomi
cmp
push
jno
sub
xor
mov
fildl
movswl
je
dec
pop
cs
aas
or
sbb
and
push
test
add
mov
lods
mov
sti
jno
ss
xchg
ljmp
sbb
ds
xor
data16
dec
xor
adc
xchg
orb
loop
outsl
mov
add
jne
test
jne
add
das
xor
mov
xor
jecxz
or
cwtl
ss
jo
xchg
lods
inc
xchg
or
jne
jg
lds
mov
adc
add
dec
test
xchg
cld
mov
mov
mov
fsubrl
dec
inc
insb
pusha
mov
cmp
sti
fisttpll
xor
in
insb
js
repnz
push
mov
push
or
pop
leave
lcall
add
or
repnz
jb
imull
ljmp
cmc
cmpsb
jae
rcrb
dec
inc
out
decb
inc
hlt
sahf
and
addr16
push
mov
in
cli
xor
es
pop
cmp
add
aaa
mov
pop
fstp
fcompl
int3
pop
adc
and
jnp
dec
and
in
xchg
hlt
lock
bound
stc
add
cltd
add
xchg
ja
sub
ja
xor
test
loopne
negl
scas
aas
jae
inc
jo
inc
jne
enter
jle
popa
movsl
cmp
pop
jbe
hlt
inc
inc
pop
je
add
mov
int
add
cmpsl
mov
xor
shld
ja
xchg
lahf
fisttps
mov
adc
jmp
jns
jle
or
imul
dec
jnp
mov
cmp
push
sub
mov
mov
cmpsb
adc
sbb
shll
insb
arpl
out
cmp
mov
xchg
loopne
adc
jae
adc
iret
pop
scas
mov
inc
inc
mov
test
inc
iret
xchg
lcall
cmp
subl
mov
cmp
das
lret
push
popf
add
sbb
or
inc
arpl
jecxz
dec
daa
in
aas
cmpsl
test
jge
xchg
xor
sub
mov
iret
bound
push
mov
data16
loop
cmp
in
cwtl
or
shl
stc
adc
aad
cmpsb
mov
addr16
cmp
scas
popa
aaa
rorl
cmp
repnz
push
aas
sahf
imul
xchg
xchg
pop
dec
divb
andb
push
sub
cmp
cld
popa
lret
cmc
inc
lock
lds
ret
data16
adc
sbb
mov
add
jne
mov
inc
fwait
mov
sbb
sub
push
std
rcl
in
test
insb
test
cmpsb
jge
test
lea
push
mov
push
xlat
out
ljmp
mov
sbb
add
dec
mov
pop
in
xchg
push
push
jo
inc
out
push
shlb
pop
into
in
xchg
dec
mov
data16
cmp
jge
ds
rcl
xchg
sahf
fistpll
lcall
add
inc
imul
xor
mov
test
test
sub
stos
cmpsl
pop
test
movl
negl
dec
sub
push
pop
in
jo
dec
jnp
pop
out
enter
inc
pop
mov
stos
lcall
pop
out
mov
cs
sbb
lock
divb
test
cmpsl
and
je
loopne
ret
xchg
in
pop
push
lock
mov
je
cmp
jmp
xchg
xchg
mov
add
cmp
sbb
cmp
out
testb
imulb
mov
adc
xor
movsb
mov
jle
dec
lock
imul
nop
pop
push
and
jo
es
jb
cmp
bound
xchg
mov
repz
or
jne
ret
push
cld
std
dec
out
xor
loop
sub
mov
outsb
inc
cmpsb
mov
pxor
sub
shlb
push
mov
je
inc
or
jmp
sbb
xor
js
add
clc
repz
jae
mov
xchg
clc
adc
mov
cltd
lods
ds
pushl
fdivrl
sub
lea
mov
xor
in
mov
and
lret
incl
lcall
adc
stc
das
fstl
cmpl
xchg
add
push
or
cmpsb
mov
mov
jp
dec
filds
or
popf
xchg
xlat
sbb
fisubl
mov
add
insb
jae
pop
push
ficompl
sub
and
rcr
cltd
sbb
lock
inc
sbb
adc
push
push
in
into
jo
xor
jno
stos
div
aad
jg
addr16
add
push
jl
jbe
push
call
add
cli
and
cmp
into
sub
insb
mov
pushl
jno
push
xorl
mov
xor
jle
xchg
call
jb
jnp
outsb
cmp
push
inc
xchg
mov
fdivr
push
and
dec
test
xchg
xchg
jl
jp
push
add
stos
xchg
int3
pop
stos
mov
adc
or
or
pop
outsl
arpl
jge
xchg
cld
jne
push
adc
enter
js
push
int
xchg
les
hlt
shrl
add
xor
lahf
fisttpll
add
and
leave
pop
insl
mov
hlt
jno
mov
or
xor
mov
push
int3
out
incb
mov
out
dec
aad
mov
sub
hlt
stos
int
sub
inc
popa
sbb
mov
repz
cmp
xchg
jle
imul
movsb
out
call
sbb
sarl
lods
in
jae
cmc
pop
outsl
add
enter
fdivrp
mov
adc
sbb
stc
pop
pop
enter
jge
inc
mov
ljmp
out
arpl
cwtl
or
movsl
jnp
xchg
push
iret
rcll
push
fs
mov
and
push
js
loop
xor
push
out
insb
push
in
icebp
xchg
gs
das
jnp
lret
and
in
fbld
arpl
cmp
stc
fldcw
xchg
pop
notl
push
pop
scas
push
jae
fwait
jge
mov
cmp
in
aad
push
inc
loopne
or
and
xchg
pop
xor
lock
cmp
xlat
jge
ret
ja
cmp
mov
or
mov
sarb
dec
aad
in
push
jl
mov
mov
loop
icebp
subb
rcl
fsubl
rdtsc
adc
or
nop
ror
jo
dec
or
mov
insb
movsl
cmp
test
shlb
cli
add
jecxz
mov
mov
scas
xor
insb
jb
cmp
popa
jmp
inc
fnstcw
cmp
sub
push
mov
fwait
sbb
push
shll
enter
xor
pop
lret
jl
adc
lods
lcall
ficoms
fxch
test
repz
sbb
mov
cmp
mov
das
call
loop
dec
pop
mov
pushf
mov
test
mov
inc
push
jne
mov
push
adc
clc
dec
inc
mov
loope
icebp
jbe
insb
les
cld
add
out
mov
mov
push
mov
repnz
movsb
inc
loopne
movsb
add
inc
stc
push
add
imul
fsubrs
ds
pop
xchg
or
xor
add
mov
mov
int3
pop
adc
pop
xor
lret
repz
cwtl
mov
pop
fdivrl
mov
shlb
pop
int
popf
sbb
sub
mov
pop
sub
xor
dec
aad
in
mov
inc
stos
sbb
sub
aas
cmp
dec
stos
dec
push
lret
paddusb
sbb
sbb
arpl
or
lahf
out
int3
fsubr
or
mov
inc
push
sbb
sbb
mov
fmul
movsl
adc
out
mov
es
pop
xor
jae
or
xor
jle
faddl
inc
cmpsl
subl
xor
mov
fwait
push
xchg
sbb
sarl
mov
or
and
cmp
aas
popf
leave
jne
shl
fsubs
pop
cmp
gs
xchg
popa
jl
ds
repnz
push
fdivr
loopne
mov
xor
mov
cmp
jle
mov
xor
loop
pop
dec
sub
jnp
push
fwait
xchg
sub
imul
mov
inc
or
test
push
fistpll
cmp
fs
xchg
xchg
es
aad
stos
sub
or
enter
xor
dec
push
and
lret
sbb
cwtl
jb
xor
loopne
cmpsl
aas
push
sub
mov
mov
push
add
enter
cmp
xor
push
sarb
subb
out
or
add
xor
push
pop
cmpsl
mov
inc
mov
adc
scas
mov
sbb
js
inc
jo
dec
mov
cltd
insb
dec
add
pop
mov
inc
stos
scas
cmp
in
lds
es
cmpsl
testl
aas
push
shlb
or
call
into
insl
add
out
in
out
out
pop
xor
cwtl
pop
repnz
jb
add
je
inc
insb
dec
and
repnz
sbb
in
mov
pusha
xchg
rorb
push
clc
shll
rolb
mov
test
mov
ljmp
scas
add
xchg
nop
pop
loopne
mov
outsb
jno
or
je
jne
bound
aam
add
mov
and
pushf
jbe
adc
jb
jmp
mov
js
dec
and
mov
pop
sbb
stos
bound
mov
push
xchg
daa
xor
inc
aad
icebp
xchg
jae
addr16
incl
push
aad
mov
mov
mov
pop
stos
and
fists
arpl
jp
xchg
fisttpl
mov
lods
sbbl
xor
add
mov
jmp
ja
and
dec
in
sti
pop
shr
jb
push
dec
lds
jb
push
and
push
jecxz
pop
add
arpl
mov
addr16
mov
lret
insb
mov
dec
testl
int3
or
movsb
xchg
pop
test
aad
xchg
inc
add
mov
fldcw
fstps
adc
cmpsl
sti
adc
iret
inc
or
loope
ja
sbb
mov
enter
add
or
push
or
inc
orb
test
xchg
aas
movsb
inc
rcrl
pop
jbe
lds
or
cmc
pop
cs
dec
js
push
xor
es
bound
adc
imul
stc
inc
rol
test
xor
imul
out
jmp
mov
cmp
pop
mov
mov
mov
cmpsb
push
push
iret
jge
cli
fsub
sbb
cltd
aas
cmp
pop
dec
sub
pop
pop
je
sbb
into
dec
in
loopne
push
ja
das
xchg
pop
push
mov
xor
popf
test
push
mov
cmp
cmp
push
filds
out
je
jge
fisubrs
mov
xor
xlat
popa
mov
inc
fists
jp
shl
in
cmp
inc
data16
pop
jb
pushf
add
or
insl
cmp
pop
std
scas
fdivr
gs
negb
xchg
jbe
mov
push
jl
jmp
leave
xor
ret
pop
lods
mov
jg
subl
sahf
dec
rol
mov
ficoml
inc
sti
or
push
jmp
sti
notl
dec
aad
cmp
test
ficomps
movsb
gs
mov
testl
repz
fnstenv
xchg
out
mov
movsb
push
sbb
mov
push
nop
aad
jne
fldcw
jge
scas
subb
scas
cli
out
scas
xchg
and
sub
nop
cmp
in
fnstsw
adc
in
xor
inc
pop
repnz
testl
adc
pop
bound
jo
and
into
int
inc
and
xor
add
pop
mov
sbb
dec
xor
mov
pop
xchg
insl
mov
adc
or
into
lahf
shll
call
setae
insb
pusha
movsl
mov
shr
pusha
movl
cld
in
roll
ljmp
not
sbbl
or
jno
xchg
orb
pop
aas
or
sub
cmpsb
sahf
ror
insb
push
mov
dec
lods
scas
fists
lock
jp
pop
adc
data16
push
rolb
inc
test
loope
fsubp
cltd
aam
fcompl
or
scas
test
adc
subl
fwait
lret
sub
mov
dec
cmp
mov
jg
jo
ljmp
cltd
sub
sub
mov
mov
mov
mov
mov
sub
popf
or
rcll
lret
fwait
sub
xchg
jb
or
jne
js
xor
mov
pusha
dec
xor
jp
mov
pop
imul
and
adc
mov
mov
aad
pop
adcb
push
jno
cmpsl
and
pop
mov
pop
mov
cmp
lock
adc
sbb
imul
lods
pop
xchg
faddp
fucomp
xchg
hlt
jns
out
sub
jo
lcall
lret
xor
lock
mov
and
push
pop
jle
pusha
xchg
test
xor
cli
imull
ds
add
or
sbb
push
jmp
gs
hlt
pop
bound
or
jl
test
cmp
mov
push
sbb
out
pop
cld
sbb
xchg
rcr
push
or
call
sbb
mov
leave
cmpsl
jo
xchg
mov
mov
adc
sub
in
out
scas
push
pop
push
gs
bnd
test
aad
cli
mov
sbb
xchg
xchg
arpl
dec
mov
push
movsl
bound
xor
pop
adc
adc
add
call
movsb
sbb
repnz
ss
sbb
ret
mov
sbb
add
cld
dec
jg
lret
jecxz
pushf
loop
int
pushl
push
jmp
popa
int
or
fidivs
inc
push
dec
mov
insb
cwtl
push
lret
ret
outsb
inc
lods
mov
es
cmp
movsb
fsubrl
lcall
xor
cmp
mov
or
in
sub
mov
xchg
pushf
in
push
notb
pushf
cmp
adc
xor
push
mov
popf
int3
jnp
mov
cmp
pushf
pop
pop
sub
and
loop
pop
dec
popa
outsb
xchg
test
push
lret
push
xor
outsb
pop
repz
xchg
stos
push
jnp
loop
sbb
psubsb
fisubs
test
push
stc
adc
test
push
or
dec
in
clc
inc
lock
pop
jmp
push
pop
test
outsb
xchg
clc
jo
sbb
xchg
mov
push
sti
fcoms
ror
xor
xchg
and
scas
ret
xchg
pop
ss
test
xor
pusha
cld
fdivs
fsts
cmp
lock
js
imul
es
inc
inc
jecxz
cmp
add
dec
mov
ret
dec
mov
push
roll
jmp
out
jecxz
popa
arpl
inc
push
jne
imul
jo
pop
shlb
pop
mov
imul
inc
dec
lock
pop
add
and
push
or
imul
cmp
mov
call
jle
call
dec
push
pushf
call
jmp
push
ds
lock
mov
rorb
ja
outsl
movsl
int3
outsb
jns
pop
inc
shr
inc
dec
imul
xor
inc
addr16
push
mul
inc
pop
stos
lret
push
jo
jns
aad
int
stc
jl
in
inc
pop
jb
push
push
or
dec
aaa
lock
add
or
rclb
mov
leave
jp
inc
mov
sbb
adc
xchg
mov
or
out
add
loopne
fisttpl
push
arpl
mov
iret
xor
adc
mov
imul
xlat
rorl
mov
adc
aas
pop
sub
mov
dec
scas
incb
imull
sbb
mov
mov
es
stos
aas
mov
fdiv
divb
add
inc
lahf
push
dec
sbb
int3
xchg
das
sub
lds
stc
cmp
or
ret
scas
dec
mov
test
fsubrl
ja
push
dec
movsl
fstl
fwait
xchg
and
mov
mov
jno
or
xlat
jecxz
inc
mov
shrb
inc
push
and
xchg
addr16
shl
mov
jl
push
adc
inc
inc
mov
out
push
mov
test
cmpsl
push
or
iret
cld
and
enter
mov
jl
xchg
dec
lret
test
xor
int3
mov
test
mov
push
insb
xor
adc
in
cmp
inc
jo
mov
mov
icebp
mov
xor
mov
movsb
adc
std
add
xlat
lods
stos
xor
xor
loop
lea
shr
imul
jmp
jne
mov
and
cmp
pop
dec
sbb
int
push
dec
inc
sub
adc
inc
in
mov
stos
fistpll
mov
fcomps
cmp
jnp
inc
fstpt
sbb
mov
mov
jnp
push
cmpsb
lock
call
mov
pop
pop
pop
xor
inc
jns
aas
out
xchg
push
xchg
push
shr
jbe
into
cli
mov
dec
loopne
xorl
push
loop
ss
mov
sbb
jo
aaa
paddsw
insl
push
mov
out
lock
xor
push
push
sbb
xchg
xchg
mov
aaa
mov
mov
arpl
jle
jg
enter
mov
fstl
lods
outsl
xchg
in
movsb
fnstenv
dec
lret
out
push
mov
es
repz
and
push
mov
add
in
stc
add
cmp
arpl
sti
scas
jecxz
jae
add
mov
jno
iret
adc
add
dec
and
add
ljmp
mov
sbb
data16
dec
inc
test
push
js
mov
int
sbb
call
lds
in
cmp
jecxz
mov
jno
out
dec
mov
inc
and
lret
sub
jbe
leave
decb
into
cs
out
std
shll
loope
jmp
pop
mov
sti
mov
test
addr16
cmp
push
popf
mov
pslld
inc
sbb
in
repnz
push
fdivs
test
ja
gs
pop
xchg
mov
dec
inc
xor
adc
daa
or
mov
mov
xor
addr16
and
mov
mov
sub
add
sub
jl
test
sub
scas
nop
stos
test
stos
mov
ja
inc
js
inc
mov
sub
rolb
push
shlb
mov
pop
stc
test
xor
imul
mov
xlat
xor
mov
push
jae
fisubrs
or
add
std
mov
xchg
pop
push
xchg
les
inc
mov
js
and
ret
adcb
mov
sbb
add
fcoml
push
pusha
mov
jg
out
sub
int3
mov
xchg
jne
enter
push
popf
jmp
mov
idivl
mov
cmp
call
lret
push
adc
fs
push
sti
test
bound
int3
in
push
jp
arpl
inc
jecxz
mov
cmp
or
lret
mov
pop
addl
pop
mov
push
loop
and
xor
sbb
aam
popa
cmpsl
mov
push
lock
pop
imul
or
and
pop
ljmp
ljmp
ret
pop
cmpsl
rol
hlt
imulb
xor
popf
in
loop
sahf
xchg
inc
sub
ss
cli
xchg
xor
stc
addr16
jns
mov
mov
pop
dec
shrl
and
jb
jnp
cltd
scas
mov
dec
sub
lods
xchg
hlt
sar
jp
fst
aas
loopne
or
xor
fcmove
add
ror
icebp
in
dec
subl
shll
or
fstps
pop
das
enter
inc
sub
pop
aas
pop
clc
xor
push
xor
mov
and
xor
mulb
sbb
sub
insl
or
and
out
dec
ret
mov
test
dec
lods
pop
icebp
jle
and
out
roll
cmp
add
mov
pop
pop
lods
sub
pop
icebp
jp
adc
les
add
sub
push
loop
iret
push
testl
xor
pop
cwtl
mov
add
push
filds
add
fwait
and
ret
movsl
cmp
cmp
cmp
std
ret
mov
mov
mov
addr16
cwtl
mov
dec
cltd
jmp
cmpsl
lock
sbb
xchg
jae
and
mov
setge
imul
add
fildll
xchg
shlb
adc
out
adc
push
add
push
movsl
movsl
push
rorl
jge
fcoml
mov
cmp
mov
call
xchg
adc
inc
enter
jno
sbb
addr16
cmc
lahf
fidivl
cmpsb
mov
in
rorb
mov
movsl
pusha
xchg
cli
insl
int3
in
insl
sbb
mov
pop
lret
loopne
subl
ljmp
mov
movsb
aad
add
push
or
and
push
fdivl
or
repz
cmpsb
jo
mov
lods
pop
sarb
jo
xor
inc
mov
loope
sbb
sbbb
mov
mov
lret
cmc
out
movsl
into
xchg
ret
mov
scas
int3
mov
gs
push
dec
aad
jmp
push
push
test
inc
mov
in
fisubrs
xchg
inc
push
mov
pusha
sbb
cwtl
mov
stc
and
iret
in
jns
mov
xchg
dec
or
push
pop
mov
cmc
add
daa
jae
aam
outsl
xchg
cs
inc
xchg
push
pop
mov
lods
pop
mov
std
jl
in
mov
lds
test
loope
repnz
lret
in
mov
jno
les
or
jb
push
aad
adc
jge
loop
leave
jb
call
stos
lret
arpl
pop
lret
repnz
push
xchg
inc
mov
fiadds
ss
pushf
into
xor
scas
das
xchg
popf
movsl
cmp
fnsave
xchg
dec
dec
stc
cld
xchg
test
add
mov
add
xlat
in
adc
inc
notb
xor
or
int3
imul
test
jge
xor
xchg
call
scas
sub
mov
lea
pop
mov
push
mov
jns
mov
xor
push
add
pop
inc
fs
xor
out
mov
add
ret
test
xchg
add
cs
fcoms
data16
inc
add
arpl
popf
popa
jmp
push
or
add
jnp
in
lret
dec
and
stos
ss
or
out
jl
adc
adc
je
adc
jns
es
outsl
dec
and
into
push
mov
cmp
inc
movsl
adc
sub
stc
sbb
sbb
inc
cmc
mov
ret
cmp
aas
xchg
hlt
insl
ja
jmp
mov
in
clc
sub
insl
scas
jo
push
insb
jo
mov
pop
push
sbb
std
mov
sub
ds
loope
pop
cmp
and
in
inc
lods
xor
and
arpl
and
push
sbb
daa
mov
dec
jns
shl
cltd
enter
mov
cmp
inc
pop
mov
mov
mov
fwait
and
leave
inc
pop
pop
out
xchg
aaa
andl
jb
lcall
mov
das
jnp
in
push
sub
cmc
mov
scas
or
and
in
lods
sub
xchg
rorb
jne
aad
add
je
xorl
int3
mov
mov
hlt
std
shrb
outsb
outsl
xor
xchg
mov
out
push
shlb
pop
or
out
loop
lock
shll
test
mov
push
xor
orb
pop
xor
inc
cmp
dec
shl
push
cld
lock
sbbb
ficoml
inc
inc
movsb
mov
pop
or
xchg
inc
or
fsubrs
mov
pusha
adc
mov
adc
pop
pop
outsl
xchg
mov
cmpl
add
push
mov
mov
fnstsw
cmp
pushf
jno
and
cmp
ss
sbb
outsb
ja
adcb
push
mov
jb
adcl
inc
or
lods
or
sbb
sub
add
movsl
or
lcall
and
jl
mov
fldt
mov
push
je
jno
and
adcl
dec
adc
insl
dec
aad
add
lahf
pop
add
cmpsl
popf
addb
sar
cwtl
adc
xchg
ja
mov
mov
sub
fcoml
lahf
notb
xor
movsl
jbe
daa
xor
fcmove
testl
ja
jp
push
cmpsl
xor
aam
pushf
jno
jl
call
idivb
outsb
mov
xchg
adc
sbb
cld
and
inc
push
in
shlb
or
out
test
and
mov
das
sbb
stos
repnz
and
arpl
scas
sti
push
scas
sti
adc
cld
rol
mov
cmpsl
jecxz
jne
xchg
divl
mov
mov
xchg
sub
add
js
mov
repnz
cltd
imul
out
mov
hlt
mov
push
add
mov
pusha
mov
jbe
pop
mov
scas
stc
out
pop
cmpsb
aam
xor
push
pop
xor
jp
xchg
xchg
mov
jo
sahf
adc
cwtl
mov
das
mov
andb
cmc
addr16
mov
lret
sbb
jp
fsubr
hlt
mov
out
call
loope
mull
mov
ljmp
mov
adc
test
jbe
js
fidivl
shl
lods
popl
scas
adc
xor
aad
pop
aaa
pop
incl
push
pop
jg
sub
xchg
outsl
sub
push
or
shll
pop
or
push
call
ja
fwait
sbb
imul
in
xchg
inc
sbb
mov
stos
dec
add
xchg
dec
xchg
lea
cmc
xchg
mov
out
andl
xchg
ret
inc
js
lds
mov
or
shl
ds
dec
push
inc
or
pop
imul
add
mov
ja
pop
lock
xchg
mov
adc
scas
fisubrl
in
dec
std
gs
dec
lods
mov
mov
test
cmp
rcr
push
stos
dec
and
mov
sub
clc
jb
mulb
mov
xor
insb
sbb
popa
das
xchg
inc
dec
sbb
hlt
pushf
xchg
or
aam
and
or
sti
loop
inc
push
cmc
xor
aad
dec
xor
push
adc
adc
pop
ret
cmp
sbbl
jecxz
xchg
jne
push
icebp
je
dec
mov
loop
xchg
xchg
push
xchg
mov
cwtl
mov
aas
jae
adc
aaa
pop
scas
push
or
lds
push
mov
insb
pop
cmc
dec
sti
push
push
or
jp
mov
push
shll
mov
dec
mov
sbb
lret
stos
jbe
cld
pop
ret
insb
or
int3
stos
dec
and
stos
in
push
and
mov
fwait
mov
jns
sbb
xlat
fildl
pop
dec
loop
jae
sbb
jecxz
cmp
fnstcw
insl
mov
sbb
in
sti
test
test
mov
mov
mov
mov
add
sahf
xchg
cs
inc
andb
js
push
es
ljmp
popf
sbb
iret
orb
dec
pusha
push
jmp
pop
xor
jnp
lock
out
cmpl
rol
push
insb
cwtl
adcl
xchg
push
mov
pushf
mov
outsb
mov
and
dec
int3
xor
mov
jl
cwtl
movsb
fstpl
mov
push
cld
call
jmp
cwtl
and
daa
push
stos
aad
arpl
enter
repnz
mov
shl
push
lock
gs
fsubs
sub
fstpl
cmp
nop
sub
ret
mov
insl
inc
pop
les
mov
xchg
sbb
xor
sub
mov
mov
stc
add
les
adc
mov
insl
mov
clc
pop
push
push
int3
rclb
cmpsl
xorb
outsb
stos
addr16
stos
jp
enter
inc
test
sahf
into
xchg
into
pop
pop
lds
sbb
lock
jp
imul
imul
xchg
or
mov
test
and
jbe
sub
ss
xor
bound
inc
mov
in
cmp
sub
mov
sub
fstl
out
jl
jecxz
cltd
inc
je
lcall
mov
mov
jns
xchg
rcl
addr16
test
dec
mov
clc
pop
xor
insb
daa
dec
dec
pop
icebp
mov
hlt
push
movsl
sub
pop
nop
pusha
pop
ds
or
movsb
pushf
imul
nop
inc
xor
test
mov
dec
mov
jg
xor
mov
or
test
shrb
out
lcall
movsb
jo
fcmovu
dec
lods
adc
sub
pop
inc
cld
lcall
jecxz
es
and
cli
nop
ret
insl
and
cmpsl
repnz
jl
add
in
mov
mov
divl
call
stos
push
sub
out
sub
sub
cld
pop
sbb
and
out
iret
mov
pop
dec
sub
mov
aam
lods
add
mov
adc
ljmp
lret
leave
pop
xor
ficoms
dec
out
jg
mov
scas
arpl
addr16
pop
fcomi
pop
mov
mov
mov
add
mov
test
out
adc
push
ljmp
xchg
cmc
dec
in
adc
pop
arpl
rcrl
test
out
adc
cmp
cmp
inc
cmp
lahf
add
push
cli
sub
pop
dec
lods
loop
and
mov
and
clc
test
pop
lahf
push
sbb
int3
xorl
or
test
filds
fdivrl
lods
inc
aas
ret
out
and
jmp
test
lds
ret
inc
daa
sbbl
jns
jne
imul
loope
xchg
jge
fadds
rcll
pop
add
cwtl
and
jno
stc
push
sahf
rcrb
jle
mov
ds
xor
add
adc
mov
insl
movsl
ljmp
adc
in
mov
test
sub
mov
jbe
jbe
enter
repz
pop
jnp
sbb
mov
mov
int
dec
xchg
inc
and
add
xor
push
scas
sbb
pop
aad
movsl
insl
out
mov
rcrb
in
inc
popf
mov
aam
dec
ss
repz
and
mov
inc
pop
push
sub
in
mov
push
add
cmp
mov
mov
add
adc
adc
push
push
jns
xchg
cmc
popa
dec
sub
jl
pop
mov
fdivrl
push
mov
arpl
jnp
pop
and
pusha
push
repnz
xor
jns
mov
lcall
sbb
cmc
mov
pop
jb
mov
lea
xchg
cmp
jp
scas
clc
rcrl
xor
ficoml
scas
mov
in
cmp
pop
hlt
sbb
lods
mov
xchg
aas
lea
and
push
mov
ss
sbb
int
mov
lcall
push
pop
pop
int3
sub
lods
call
ret
lcall
dec
lods
jne
loop
mov
mov
shll
inc
xor
aam
or
pop
add
mov
inc
cmp
pop
gs
push
inc
loop
mov
xchg
or
xchg
adc
lock
mov
arpl
pop
sub
inc
inc
mov
push
and
clc
inc
pop
mov
mov
sub
pop
test
lods
jns
adc
mov
dec
loop
jp
push
xor
jns
lock
outsl
and
adc
jp
jno
loopne
sub
out
sub
clc
cli
jecxz
mov
inc
xlat
in
shlb
push
arpl
inc
dec
pop
outsb
lock
rolb
add
dec
lods
fcmovu
xorb
cli
adc
popf
lods
push
sbb
addb
jno
add
pop
roll
mov
daa
dec
or
daa
iret
jle
mov
xor
mov
dec
hlt
insl
sub
out
sbb
adc
call
inc
in
dec
mov
push
mov
outsb
aaa
mov
mov
les
lret
test
pop
lret
fdivrl
idivl
ljmp
rcrb
inc
and
xor
push
in
cmp
pusha
lret
cs
sbb
cmpsl
sahf
xchg
or
cmp
adc
repz
aad
push
stc
and
cwtl
jno
dec
xor
out
jle
xchg
mulb
pop
push
jmp
ja
xor
xchg
dec
rolb
fwait
xchg
xchg
std
mov
mov
lods
dec
cmp
jno
adc
iret
dec
in
je
pop
mov
and
xchg
or
mov
dec
lea
mov
jae
pop
pushf
movsl
cltd
jp
shrb
jnp
add
pop
repz
mov
sub
adc
push
cmp
test
shr
jge
pop
or
sbb
imul
fisttps
mov
rolb
dec
xor
push
pusha
pop
sbb
das
jnp
bound
int3
or
andl
mov
shlb
or
es
aas
mov
jl
lods
jns
ret
rcrl
es
cmp
fldt
mov
ja
int
xchg
fiaddl
sbb
or
or
sub
out
ljmp
popa
xor
add
cmpsl
dec
scas
pop
mov
jnp
pop
mov
mov
lret
pusha
test
sbbl
loopne
and
icebp
add
ret
xchg
stc
repnz
lahf
mov
movl
stos
xor
pop
shr
lods
sbb
sbb
clc
ret
out
ljmp
mov
out
pop
inc
das
add
push
xchg
fcomps
dec
stos
add
mov
mov
out
inc
test
cmp
mov
std
jge
je
mov
mov
xor
shrb
sbb
loope
push
addr16
jg
sub
or
push
cmpsb
or
rcrl
mov
dec
mov
loop
inc
sbb
xor
loop
test
sub
in
mov
outsl
sbb
pop
xchg
and
jne
jge
daa
dec
and
xchg
push
int
mov
cli
and
jne
cli
aad
icebp
mov
scas
icebp
xor
repz
out
mov
insb
jl
movsl
inc
cltd
cmp
jmp
in
sub
pop
clc
push
imul
and
push
add
mov
js
cwtl
cmp
add
call
mov
dec
into
jg
cmc
lret
sub
add
sub
pusha
inc
movsb
mov
outsb
mov
jp
push
rcrl
cmpsb
sub
fstps
adc
out
decl
xor
jno
xchg
das
push
test
jecxz
sbb
push
icebp
mov
movb
xchg
fstps
fcmovu
inc
fbstp
cmpsb
cltd
xchg
inc
in
test
loop
xchg
push
pop
out
fs
repz
sbb
mov
inc
loop
mov
lcall
mov
js
mov
loopne
xchg
int
dec
in
jle
repnz
lds
xchg
arpl
lret
dec
je
cmp
stos
lds
arpl
nop
adc
inc
test
push
jbe
jmp
push
xchg
add
fmull
adc
xchg
rolb
movsl
mov
adc
mov
fdiv
loope
lods
pop
pop
push
xchg
push
mov
icebp
mull
xchg
sub
inc
xor
test
mov
mov
cs
imul
hlt
push
popf
hlt
xchg
popa
xchg
mov
rorb
imul
insb
jo
enter
in
int
xor
repnz
or
mov
imul
jb
ret
sbb
jmp
ret
sbb
stos
cltd
push
mov
movb
pop
ds
and
mov
js
scas
mov
std
sbb
out
jb
pslld
fnsave
fstpt
adc
add
cli
jb
add
lret
std
inc
xchg
ret
scas
stc
ret
mov
ja
rcrb
sbb
rorl
push
and
adcb
sub
xchg
mov
push
iret
outsl
pop
clc
add
push
cmp
sti
xor
jnp
mov
fstpt
bound
scas
sti
or
popf
jbe
les
push
dec
pop
dec
inc
fidivs
test
adc
mov
jnp
int
mov
pop
icebp
or
xor
fwait
or
sbb
dec
push
ds
add
mov
fnsave
andb
test
out
jno
outsl
xchg
cmp
or
popf
je
push
sbb
xchg
mov
daa
cmpsb
push
insb
dec
and
in
leave
imul
mov
inc
pop
sarb
mov
dec
pop
xchg
pop
pop
jo
cltd
popa
scas
sub
sub
push
insl
mov
outsl
loopne
pop
cld
sbb
mov
pop
xchg
popf
int3
or
or
mov
sub
ljmp
setae
cs
sbb
fwait
add
push
lret
add
test
mov
mov
faddl
inc
sub
fnsave
sti
jg
jl
adcb
dec
aad
adc
jp
sbb
mov
mov
mov
loope
sarb
add
aad
mov
cmp
inc
mov
sbb
inc
repnz
push
outsb
and
mov
insb
mov
mov
mov
push
add
es
mov
jge
push
rorl
mov
cmp
cmp
inc
push
mov
jmp
mov
arpl
cld
pop
out
cs
mov
cwtl
test
addl
loope
enter
aaa
pop
push
and
add
jnp
xor
fisttps
cli
mov
test
jae
push
cmc
aas
jo
movsl
cmp
fmul
movsl
test
adc
sub
mov
pusha
xchg
sub
imul
adc
cmp
clc
pushfw
mov
jg
dec
push
jo
xchg
out
push
adcb
test
and
pusha
scas
cwtl
and
mov
xor
in
mov
mov
add
xlat
cmpsl
imul
mov
movsb
cld
push
cli
packuswb
mov
popa
cli
xor
inc
jns
sub
cmp
rorl
inc
cwtl
cmp
test
in
dec
jns
mov
sbb
cmp
imul
pop
xor
push
ret
and
dec
or
adc
cmp
mov
loop
sub
or
insl
mov
xchg
sbb
push
ljmp
mov
rcrb
jb
xor
cmp
cli
inc
es
imul
add
jge
or
and
sahf
add
popa
arpl
cs
shrl
xor
push
mov
xchg
jbe
ret
push
test
jne,pn
or
sub
fisubrl
popf
push
popf
xchg
xor
or
add
fidivs
rorl
cmp
cmpsl
or
xchg
testb
ficomps
sbb
jae
dec
cld
jnp
loopne
jbe
jae
leave
mov
sbb
iret
ret
adc
test
cmc
out
mov
rclb
sub
fidivrl
lahf
xor
pop
idivl
rcrl
push
mov
jbe
xor
shll
add
sub
popf
and
jg
lock
mov
adc
les
rol
movw
dec
push
mov
cmpsb
jl
mov
pop
push
enter
jle
dec
js
fidivl
fisubrl
aaa
pop
mov
lahf
outsl
decb
movsb
cs
int
pop
stos
or
ja
gs
out
nop
mov
mov
mov
in
sub
dec
clc
lock
xor
ds
loopne
xchg
inc
sbb
in
sbb
sbb
cmovb
adc
int
loopne
mov
in
cmp
push
into
jnp
icebp
outsb
sbb
scas
clc
mov
js
out
loopne
xor
fs
sbb
ja
repnz
lods
and
xchg
inc
int
aam
mov
mov
idiv
stos
pop
fbld
add
pop
cli
mov
mov
push
ds
sub
push
sar
repz
sub
dec
pop
loopne
shlb
adc
jl
inc
lcall
movsl
inc
aaa
mov
lret
fnstcw
hlt
shlb
mov
enter
sti
fdivp
sbb
cmc
outsb
int3
scas
xor
adc
aad
cmp
mov
cli
jns
scas
push
loopne
aaa
notb
jecxz
fwait
std
fcomps
faddl
cmp
mov
cmpsl
adcl
jns
wrmsr
cli
adc
addr16
lods
mov
stc
xchg
add
ss
fprem
pop
sub
out
mov
scas
ret
inc
stos
mov
jb
push
add
repnz
loope
cmc
xor
pop
stc
in
pusha
or
stos
xor
jo
mov
dec
mov
outsl
out
iret
out
xor
daa
add
xchg
repnz
jns
sub
outsb
pusha
mov
xlat
in
and
xchg
lcall
fistps
mov
xchg
dec
dec
pop
fcoms
cltd
pop
lea
fldt
jp
xor
stos
pushf
push
sub
mov
fsts
add
mov
sbb
dec
or
shl
push
je
imul
lods
mov
push
int3
icebp
test
rcrl
fmull
mov
lcall
push
add
cld
daa
dec
mov
notb
mov
lock
imul
mov
push
daa
les
mov
push
frstor
cmp
lods
xchg
cmp
fsubrs
shl
rorb
xlat
cmp
or
js
icebp
adc
sbb
cs
sbb
movsb
sub
jmp
shl
mov
out
add
mov
cmp
push
loopne
xor
outsb
icebp
xchg
orb
in
inc
xlat
xor
stos
andl
into
jmp
cltd
dec
sbb
jl
decb
es
leave
jecxz
pusha
out
adc
adc
cmp
dec
clc
ficoms
lret
cmp
subl
dec
mov
sbb
loope
jo
cmp
xchg
ljmp
mov
sbb
out
shrl
inc
or
sbb
cmp
add
mov
pop
sahf
and
aas
pop
out
inc
imul
cltd
cmp
add
rorl
sbb
shll
jmp
pop
fiadds
fdivrl
add
movsl
inc
fcmovu
mov
adc
jge
popa
jge
addr16
mov
cmp
xor
dec
jg
nop
add
jae
pop
mov
scas
or
mov
aad
inc
jp
imul
sbb
and
mov
clc
sti
test
fsub
repnz
mov
sub
insl
inc
shr
aam
mov
sahf
xchg
rep
adc
sub
dec
cmp
ret
inc
mov
das
mov
mov
hlt
or
push
mov
out
pop
daa
adc
jecxz
loopne
pusha
pushf
repnz
push
pop
repz
ret
push
shll
adc
mov
mov
ds
subb
subb
das
mov
stos
inc
and
out
stos
or
enter
inc
sub
repz
xchg
jb
fidivs
test
lret
jbe
call
jne
movsl
fistps
mov
cmc
cmp
mov
pop
pusha
std
xchg
pop
out
scas
aad
push
shl
jo
mov
roll
lret
mov
adc
mov
sub
sub
je
cld
xor
jecxz
pop
sub
mov
sbb
push
repnz
popa
shrb
cli
inc
cmc
sub
and
cmp
loop
mov
outsl
insb
iret
jno
hlt
fs
adc
mov
and
mov
adc
pusha
mov
dec
insb
add
clc
aaa
and
test
mov
mov
testl
xorb
fwait
test
fsubp
out
mov
mov
pop
pusha
jnp
mov
mov
or
repz
stos
dec
add
lea
add
mov
pop
sbb
pop
dec
xchg
push
sbb
shlb
push
stos
imul
inc
test
lahf
inc
ret
inc
rcrb
in
push
mov
push
jb
dec
test
mov
arpl
aaa
jo
popf
inc
add
bound
test
int3
andb
les
in
pop
shlb
cmpl
adc
jo
lds
stc
xchg
leave
fsubr
mov
leave
std
out
adc
and
add
test
cmp
and
in
cmc
jb
push
xchg
or
shll
mov
fdivp
outsb
pop
add
cs
test
sbb
fistpll
add
aaa
push
mov
in
jb
fsubrl
in
imul
shrb
dec
mov
pusha
adc
lcall
fsts
out
jl
xchg
lods
ror
and
cmp
xlat
test
xchg
scas
in
xchg
or
mov
pop
dec
movsl
bnd
cld
or
xchg
xor
enter
mov
dec
daa
stos
rcll
lods
aaa
aam
sbb
outsb
inc
loop
rorb
sub
daa
pop
mov
adc
insb
jne
and
out
pusha
jae
popf
add
imul
sub
sarl
push
test
xor
in
shll
mov
sahf
arpl
pushf
movsb
or
pop
ret
pop
inc
mov
rcl
out
pop
pushl
inc
cwtl
cs
mov
movsl
jne
lret
ljmp
or
imul
ljmp
mov
lea
daa
xchg
scas
and
hlt
push
inc
out
push
std
int3
sti
xchg
pop
sti
mov
adc
and
lea
das
into
mov
ficoms
movsb
hlt
mov
xor
xchg
in
xchg
push
test
sbb
sbb
or
fnstsw
cmpl
stos
or
nop
loop
mov
out
ficoml
lods
scas
lock
sub
jb
xor
jmp
add
sub
mov
pop
xchg
mov
lock
push
mov
inc
loop
jno
mov
jge
mov
mov
mov
push
inc
push
lea
add
sub
fcomi
sti
sbb
mov
cli
aaa
mov
pop
adc
insl
mov
or
cld
scas
fwait
mov
cmp
mulb
add
gs
in
mov
xchg
add
jl
sbb
jle
sbb
test
or
dec
inc
insl
insb
sub
insb
hlt
das
push
fidivrs
push
shrl
rcl
ficoms
sti
lret
test
inc
xchg
xchg
pop
xor
mov
ret
inc
mov
dec
jnp
push
outsb
shrl
cltd
mov
push
sub
notb
dec
orl
sbb
clc
xchg
test
jg
in
sbb
mov
mov
pop
imul
add
cwtl
jle
mov
es
and
popa
sbb
aas
fnstenv
push
in
syscall
dec
sbb
das
out
push
or
std
pop
repnz
lahf
dec
add
das
mov
dec
lods
jbe
mov
mov
cmp
inc
mov
es
xchg
lods
or
iret
xchg
sbb
or
xor
jne
in
dec
add
xor
adc
scas
add
popa
and
add
jns
xchg
addb
imul
or
sub
cmc
roll
addr16
cli
stos
adc
data16
push
lock
cmp
lret
pop
sahf
mov
cmp
sbb
mov
mov
jmp
cmp
cmp
mov
ss
std
ret
cmpl
adc
fsubl
mov
xchg
xchg
hlt
or
and
mov
out
test
aas
fisubl
jmp
enter
dec
shl
push
mov
pop
mov
push
rep
rcrb
inc
or
jge
pop
sbb
lret
cmp
push
mov
sub
lahf
push
jo
mov
out
loope
scas
leave
cli
inc
add
loope,pn
mov
xor
mov
sub
mov
cmp
dec
mov
daa
movl
movsb
cmovbe
aas
sub
loope
mov
lods
out
adc
push
loop
mov
mov
inc
arpl
and
stos
sti
icebp
adc
and
mov
xor
dec
cmp
imul
sti
sbb
fsub
js
out
addr16
loope
xchg
jmp
in
sbb
pop
popf
dec
inc
not
daa
fs
jmp
sbb
out
xorl
nop
pop
mov
inc
mov
daa
aaa
cmp
fwait
pop
inc
imul
xchg
ret
fisttpl
mov
mov
jg
adc
nop
sub
or
jmp
movsb
test
addr16
je
sbb
in
mov
pop
mov
inc
jae
mov
fcomi
repnz
mov
cld
data16
push
jg
rolb
popa
lahf
pop
pop
jne
shl
adc
nop
dec
mov
jns
push
mov
inc
in
mov
dec
mov
out
push
push
inc
aad
xchg
lock
or
and
jnp
popa
pusha
jg
sub
or
cmp
cmp
shrl
pop
adcb
jns
inc
clc
cli
adc
mov
repnz
inc
aas
push
and
adc
xor
nop
mov
movl
sub
insl
jnp
imul
rclb
aad
mov
mov
jmp
xor
mov
out
push
scas
pusha
mov
je
mov
adc
sub
stc
add
push
pusha
in
cltd
inc
ljmp
repz
pop
cwtl
push
pop
adc
add
pop
js
add
add
cli
repnz
insl
filds
rclb
xchg
aas
cli
inc
jo
lret
sarb
and
mov
loopne
push
hlt
lods
or
fisttps
stos
pusha
or
loop
insl
mov
addr16
ja
outsb
xor
and
fimull
loope
mov
pop
insl
mov
imul
sbb
nop
push
ds
aas
ret
shl
pushf
inc
movsl
jb
mov
rorb
movsl
imulb
cmp
mov
aad
insb
test
lahf
pushf
clc
push
clc
pop
inc
xchg
inc
dec
push
fsubp
inc
mov
jns
dec
out
jmp
test
lock
cs
push
fwait
pop
jp
lock
out
pop
dec
es
sbb
cmp
mov
cmp
mov
mov
fwait
cmp
mov
adc
cmpsl
test
sarl
xchg
mov
jnp
cmp
in
pop
xor
and
pop
je
push
sbb
sub
sbb
sub
stc
adc
aam
rclb
rorl
lcall
mov
test
jnp
cmp
mov
xor
ret
cs
lock
xor
cmp
jne
fisubl
cmp
pop
decl
addl
mov
enter
fnsave
pusha
divb
or
mov
mov
xor
lret
std
push
mov
jne
cmp
imul
mov
push
outsl
xor
sahf
push
shl
sub
jbe
pop
daa
and
xor
push
jnp
dec
pop
sub
mov
and
adc
mov
cmp
scas
mov
inc
mov
test
aas
lcall
adc
add
jmp
push
aaa
jne
sub
aam
sub
jo
popa
ret
sti
int
mov
mov
add
ret
lods
mov
mov
mov
inc
fwait
xor
fimull
cmp
push
xor
jo
jmp
mov
pop
push
leave
ficoml
dec
icebp
arpl
lods
mov
mov
inc
nop
insb
mov
lret
pop
and
and
loopne
pop
aad
mov
xor
loope
push
push
daa
int3
mov
movsl
mov
stos
ljmp
cmp
push
jg
xchg
pop
xor
scas
jno
mov
inc
hlt
xchg
push
ret
cltd
mov
ljmp
out
mov
les
jae
stos
test
dec
aaa
pop
xchg
cmp
push
lods
bswap
mov
and
les
push
subb
shrb
xchg
dec
and
add
xor
loope
cld
pop
enter
dec
movsb
xlat
scas
lcall
mov
fcmovu
fadds
or
xor
das
outsl
fwait
add
call
popf
jb
icebp
enter
and
push
and
add
and
adcl
das
xchg
hlt
ja
sub
add
xor
test
dec
lds
xchg
je
mov
xchg
ss
sbb
add
sbb
or
cs
xor
dec
mov
lcall
fisubl
les
pop
iret
fistps
scas
sti
push
ficoms
cmpsl
jge
in
data16
call
xor
es
jg
and
mov
adc
int
imul
mov
lock
add
inc
lods
xchg
pop
xchg
in
aad
ljmp
sbb
fwait
aas
jns
push
add
xlat
mov
mov
add
xchg
jecxz
das
sahf
jg
add
stos
sbb
icebp
hlt
dec
icebp
mov
sbb
ja
jmp
add
inc
or
cwtl
dec
clc
inc
mov
sub
insl
pop
xor
roll
mov
or
mov
adc
xchg
ljmp
stc
incl
sub
daa
cmp
and
and
iret
mov
pop
inc
fidivs
sub
out
add
lcall
aas
sub
nop
insb
inc
add
lea
xchg
lret
mov
mov
in
mov
push
divl
pop
sub
cmc
mov
aas
add
out
bound
adc
pop
test
cmpsb
cmp
adc
fisttpll
lahf
daa
mov
roll
push
mov
lds
lahf
push
fmul
out
sti
push
inc
movsl
imul
and
pop
dec
mov
xchg
pushf
add
sahf
loope
arpl
addb
daa
inc
inc
dec
dec
je
ret
mov
popf
popa
sub
mov
and
jno
sahf
cmp
pusha
pop
push
repz
pop
mov
mov
mov
fcoms
mov
or
and
cmp
sbb
push
gs
lock
popf
ret
inc
or
test
fstp
jno
movsb
push
iret
xchg
popf
inc
nop
push
inc
hlt
dec
outsb
sbb
cld
xor
pop
std
mov
in
mov
lahf
daa
xchg
lods
mov
lods
mov
cltd
xor
pusha
sbb
dec
cmp
mov
mov
int
lret
mov
add
fnstenv
xchg
pop
and
mov
leave
jle
adc
add
lret
adc
jno
dec
mov
mov
mov
aas
and
inc
dec
insl
push
into
ret
sub
lret
ja
pop
adc
add
mov
jl
mov
loop
mov
loope
inc
fisttpl
sub
add
call
pop
add
mov
js
xor
add
mov
cmp
dec
leave
mov
outsb
mov
push
cmp
jecxz
adc
filds
fwait
sbb
mov
sub
mov
push
sahf
jl
ljmp
add
jecxz
or
stc
add
aaa
negl
stos
cmp
mov
nop
clc
or
inc
loope
xchg
pop
addr16
pop
push
jle
sub
std
lods
and
jnp
adc
stos
imul
sbb
daa
iret
les
or
add
add
mov
dec
inc
adc
sbb
inc
mov
jmp
jecxz
aam
xchg
sub
xchg
sub
push
jns
fmull
fidivrs
sub
mov
cltd
mov
or
shrl
sub
mov
test
mov
mov
sti
pop
xchg
fisttpll
sub
push
xor
mov
cmp
leave
mov
push
xlat
sub
sbb
cmc
shr
loope
int
shrb
jle
scas
mov
mov
pop
push
jp
sbb
sub
out
xchg
shll
cmpsb
outsb
xor
jbe
jbe
jge,pt
cmp
fimuls
and
pop
mov
ss
loope
sahf
mov
push
lock
push
sub
fstpt
scas
sahf
je
rorb
aaa
push
mov
cmp
dec
cmp
jecxz
mov
cli
mov
fstps
inc
dec
cmp
jle
push
mov
ds
inc
in
fistl
pop
jb
pop
mov
dec
out
dec
add
les
dec
jecxz
sub
loop
mov
jbe
pop
neg
dec
sub
pop
push
mov
lcall
ficomps
inc
cltd
addb
pop
mov
or
imul
xchg
xor
push
frstor
xlat
adc
pushf
sti
loop
sub
inc
rolb
mov
or
sbb
mov
cmp
shl
pop
sub
push
jo
dec
xor
clc
dec
out
nop
inc
cmp
adc
push
call
les
fdivrs
andl
js
das
push
stc
popf
push
mov
xchg
mov
pop
sbb
xchg
mov
pop
pop
xchg
ret
data16
in
fcmovnb
loopne
inc
jae
mov
xchg
inc
mov
push
rclb
xchg
les
push
into
or
rolb
std
in
repz
and
adc
mov
mov
roll
test
mov
or
std
mov
jae
sbb
inc
ficoms
mov
fs
cmp
cmp
shr
fwait
fwait
ret
sbb
inc
lcall
mov
leave
ret
jmp
stc
xor
fmul
xchg
inc
cld
clc
sub
add
dec
stos
and
xchg
mov
cltd
addr16
imul
pop
dec
xor
dec
mov
adc
pop
xchg
bound
jmp
sarl
fisubrs
push
or
add
adc
je
sub
pop
mov
xchg
push
outsl
pop
cmp
loopne
test
push
mov
push
lods
jo
mov
mov
inc
sbb
into
lds
popa
ja
shlb
insb
jno
daa
cmc
out
and
out
mov
loop
inc
in
ds
add
push
sbb
ljmp
pop
cli
lds
push
sub
aam
pusha
dec
mov
aam
into
mov
sbbb
pushf
dec
in
lret
stos
sbb
jecxz
je
or
jg
outsb
and
stos
pop
jnp
int3
push
add
jnp
shrb
shll
pop
lock
jo
in
adc
mov
sbbl
movb
arpl
cs
push
movhps
push
cmc
lret
lea
add
sbb
fsubp
mov
or
repnz
mov
loopne
gs
es
movsl
stc
pop
pop
mov
dec
mov
or
movsl
push
pop
jno
jns
or
or
mov
test
add
xor
lea
mov
xor
jb
mov
mov
dec
mov
inc
stos
xor
cmovno
lcall
lcall
idivb
cmpsb
xchg
hlt
xchg
dec
fiaddl
cmpsl
or
mov
cmp
push
rolb
inc
leave
or
pop
fs
jns
push
push
mov
rol
sub
dec
rcrb
pushf
aaa
push
jp
fwait
pop
pop
push
mov
pop
jbe
lods
das
pop
xor
int
out
inc
rcl
and
add
add
push
dec
cmpsl
lock
cs
call
icebp
fdivs
add
push
jo
lahf
pop
cmc
and
loop
je
mov
pushf
jnp
mov
cmpsb
pop
push
jns
sbb
imul
and
jns
dec
mov
xchg
or
jne
mov
xor
and
inc
call
sbbb
loop
add
push
lods
aaa
mov
dec
push
cld
loop
add
mov
pop
mov
mov
add
pop
sub
in
inc
cmp
mov
add
jmp
in
sub
jno
push
mov
lods
movsb
xchg
pop
mov
mov
test
jo
push
push
mov
or
mov
sbb
pop
data16
jl
sub
fcoml
adc
mov
pop
xchg
fldcw
xorl
lock
mov
outsb
xor
adc
or
cmp
insl
dec
idivb
imul
or
pop
xchg
ja
dec
repnz
pop
loope
push
cmp
mov
dec
mov
rcr
dec
xchg
fs
mov
dec
sub
sbb
icebp
dec
mov
or
scas
jnp
dec
sbb
movsl
mov
push
insl
inc
fwait
and
sub
cmpsl
insb
pop
test
inc
lret
loopne
popa
loop
jmp
push
popa
sahf
mov
jo
not
lds
int3
cmc
mov
mov
ljmp
cmp
jg
add
jbe
xor
sbb
mov
test
test
xchg
sub
pop
lock
mov
in
rorl
mov
pop
test
xor
ds
sub
and
or
pushf
xor
lret
jg
add
inc
insl
mov
add
cmpsl
dec
add
mov
frstor
orl
pop
sub
cmp
sub
add
inc
jbe
rclb
pop
mov
xlat
in
pop
lahf
outsl
icebp
adc
jo
add
gs
call
xchg
add
push
das
aad
das
xchg
lcall
push
pop
and
js
jne
ret
inc
sub
push
ja
in
cmpsl
shrb
pop
movsb
dec
js
push
dec
pop
sbb
push
les
jl
cmpsl
cmp
xchg
pop
dec
fcomps
fwait
adc
jle
push
cmpsl
cmp
xlat
jecxz
jle,pn
pop
aad
std
push
cs
sti
xchg
pop
inc
out
aad
sbb
cmc
and
fistl
dec
shl
int3
inc
xchg
scas
jo
aas
cli
repnz
inc
icebp
jle
jl
push
lods
adc
pusha
push
lea
jg
mov
fdiv
sub
inc
xor
cmp
out
cmpsb
add
scas
std
add
sub
arpl
push
push
push
and
lcall
aaa
sub
mov
mov
call
fwait
loopne
mov
jmp
dec
ret
mov
jmp
scas
cmc
jle
xor
jle
cmp
jmp
cmovle
in
pop
cmp
mov
test
cltd
shrl
gs
lock
fiaddl
pop
aas
sahf
dec
lock
cmpsb
jecxz
sub
sti
js
shrl
cmp
mov
hlt
shlb
adc
movsl
mov
cld
mov
into
sti
inc
or
jbe
cmp
das
or
adc
dec
into
push
or
lret
insb
int
dec
stos
cmp
jl
add
adc
jmp
fidivrs
data16
jno
imul
mov
mov
mov
pushf
inc
sbbl
jns
mov
stc
sbb
lods
or
clc
dec
sbb
stc
test
add
shlb
sub
les
icebp
dec
inc
lea
or
cmp
aaa
ja
inc
imul
test
push
sub
lods
xchg
test
mov
xchg
jne
lret
adcl
loop
stc
out
cmp
mov
lds
in
fcoms
lea
mov
subl
shl
ljmp
cli
adc
or
sbb
roll
dec
pop
lret
mov
jmp
or
shrb
and
inc
mov
stc
and
sub
daa
adc
rcrl
mov
decb
mov
push
cmp
mov
cwtl
xchg
call
pop
push
push
xor
enter
int3
in
cs
xchg
push
dec
movsb
cmp
jne
xor
bound
sarb
test
loope
ficoms
dec
mov
cs
xchg
push
jp
mov
movsb
inc
or
mov
xor
movsb
push
fisubl
mov
insl
jnp
jge
int3
out
xlat
jno
loop
and
hlt
mov
sbb
popa
cmpsl
cwtl
addr16
and
mov
daa
leave
lock
sahf
test
sub
mov
popf
fadd
adc
out
sbb
mov
pop
push
inc
idivb
aam
pop
dec
hlt
nop
fbstp
mov
and
rorb
pop
enter
ja
lock
and
test
dec
pop
loope
push
sub
or
inc
test
xchg
je
leave
pop
outsl
adcb
jl
inc
adc
cmpsb
movsl
cmpsl
scas
in
cmp
mov
fsubrl
pushf
nop
loop
loopne
fmuls
mov
sbb
xor
cltd
push
out
shrl
sub
dec
xor
pop
jne
sbb
lcall
arpl
jl
cld
and
insb
mov
pushf
sub
movsb
arpl
sbb
and
lret
fldt
inc
fimull
xor
or
rcrb
jae
adc
inc
les
inc
jae
jle
outsl
call
cmp
pop
mov
movsb
aam
daa
cmp
or
fdivl
loop
and
or
and
hlt
xchg
ret
pusha
sub
pop
lods
push
mov
dec
imul
aam
ss
pop
out
push
cs
inc
cmpl
mov
dec
arpl
call
push
dec
jmp
pop
cmc
sbb
or
xchg
fimuls
scas
adc
push
inc
mov
je
popf
stc
pop
decl
lret
arpl
add
ja
cld
aas
lret
dec
and
out
cmp
hlt
cmp
jle
pop
cmp
movl
out
pop
enter
mov
jmp
in
call
cmpsb
add
gs
cli
xor
xor
cmp
mov
js
daa
or
movsb
jg
fadds
fidivrs
or
pop
ljmp
mov
ljmp
sub
mov
fcomps
mov
xlat
aad
cs
mov
inc
aad
scas
or
mov
sub
jo
push
cs
cmpsl
scas
inc
das
das
jmp
xor
dec
dec
fwait
mov
js
sbb
ja
gs
lods
push
jb
int3
or
pop
push
loop
test
cmp
shrl
jns
out
and
and
scas
jnp
mov
lods
jp
sarb
dec
cltd
cs
and
and
dec
cmp
outsl
imul
movsl
shlb
inc
fimull
iret
push
pop
fdivrl
add
adc
dec
ljmp
cmp
jns,pt
sub
inc
pushf
mov
pushf
testb
dec
repnz
movsl
push
jno
jnp
add
in
inc
lock
cmp
fsubrs
in
mov
loopne
jne,pn
and
popa
jmp
shrb
inc
imul
pop
dec
in
adc
mov
pop
push
test
data16
add
or
test
es
outsl
cmpsb
daa
xchg
je
fwait
mov
add
lods
sbb
into
mov
inc
mov
adc
dec
int3
out
xchg
pop
jle
mov
mov
sahf
stos
loopne
outsb
mov
jecxz
imul
mov
mov
inc
jae
xchg
popa
fsubl
mov
nop
jmp
dec
movsb
jecxz
arpl
mov
jb
into
loopne
cmpsb
push
lret
mov
fldenv
add
out
adc
jno
lret
popf
out
icebp
xor
sub
testl
xchg
xchg
in
subb
out
out
int
test
nop
xor
inc
pop
jnp
out
sar
fidivl
xchg
jns,pt
cmp
test
lock
ljmp
pop
xchg
xchg
int
icebp
repz
movsb
inc
pushf
sbb
fs
xchg
xchg
jne
cltd
clc
aad
notb
clc
lea
loop
mov
mov
adc
cltd
es
mov
out
sbb
inc
or
stos
adc
pushf
jg
or
jecxz
jb
inc
enter
flds
mov
clc
lds
add
add
hlt
add
repz
add
pop
sti
mov
xchg
sbb
or
incl
mov
adc
jmp
shrb
cmc
mov
rol
push
xchg
subb
dec
xlat
subb
xchg
cmpsb
ret
and
stc
bound
outsl
jbe
mov
dec
xchg
xor
aad
xchg
hlt
mov
das
pop
hlt
int3
xor
push
sbb
push
push
xor
mov
xchg
mov
dec
popf
mov
or
or
std
push
cmc
ja
lods
in
mov
jl
adc
je
sub
sbb
lcall
xor
push
cmp
pop
fisubrs
pop
dec
out
setbe
fsts
arpl
shll
cmp
and
xchg
dec
mov
inc
xchg
pop
cmp
pmulhuw
mov
lock
add
lret
in
cmp
jb
lcall
mov
and
adc
sbb
push
nop
dec
enter
mov
dec
sub
bound
test
fsubs
mov
sub
mov
jns
iret
stos
cmp
push
jmp
imul
stc
jecxz
mov
mov
push
lock
add
mov
and
out
jp
or
sarb
lret
fistps
inc
ss
xlat
or
movsl
mov
addb
insl
lahf
test
repnz
jmp
fmull
imul
fcomps
add
mov
fs
dec
fdivrp
popf
pop
call
xchg
call
gs
mov
bnd
fisttpl
aam
sahf
aam
push
mov
jnp
adc
pusha
mov
inc
mov
mov
xchg
pop
jbe
out
pop
int3
mov
lds
sbb
and
sbb
sbb
ja
leave
out
add
push
cmp
xor
fldcw
inc
pop
fmul
orb
xchg
jnp
or
and
flds
divb
inc
push
xor
arpl
addr16
bound
icebp
mov
mov
popf
jo
jge
adc
jmp
popa
cmp
cmp
mov
in
cld
xchg
dec
push
jl
add
add
data16
nop
lods
or
xor
cmc
ret
inc
push
xor
fwait
pop
adc
fs
shll
insb
or
mov
sahf
xchg
insb
xchg
dec
jge
push
int3
xlat
add
mov
lods
loop
pop
cmp
jnp
mov
cmpsl
mov
or
inc
cltd
and
sbb
fcmovb
out
imul
sbb
sub
pop
fstps
dec
dec
jl
push
rclb
push
push
cmc
jb
push
insb
pop
loop
mov
sbb
push
or
imul
fwait
push
mov
notl
mov
in
xchg
and
mov
sbb
sti
or
je
or
imul
jmp
mov
pop
mov
nop
emms
add
jecxz
jecxz
xor
popf
or
or
jno
leave
insb
adc
scas
icebp
and
jmp
adc
in
add
jge
mov
xor
inc
loope
or
ss
jecxz
gs
push
scas
dec
mov
push
push
jl
push
imul
ret
sti
into
push
stos
dec
jns
adc
push
addb
pop
addr16
rolb
mov
jb
shl
push
daa
fidivl
add
add
shll
add
jmp
jl
adc
imul
fstpl
add
mov
imul
pop
push
out
orb
pushf
pop
xor
mov
push
ficomps
orb
stos
inc
push
and
push
push
lcall
cmpsb
scas
test
mov
int
push
pop
in
pop
mov
cmc
sbb
xchg
xor
xor
lahf
xor
dec
mov
fidivl
test
pop
dec
shll
mov
ja
mov
fdivr
jp
das
popf
leave
add
cmp
mov
paddsb
xchg
lea
out
fwait
xor
loopne
jno
pushf
jl
fs
or
mov
ss
sbb
in
mov
out
idivb
jae
lods
repnz
aaa
mov
iret
add
das
add
cwtl
xchg
sbb
fwait
cli
repnz
fs
dec
xor
mov
xor
outsl
mov
cli
lcall
lock
add
daa
outsb
aaa
jle
jecxz
push
push
out
movsb
fcomip
pop
inc
xorl
mov
scas
or
mov
sbb
jno
mov
or
decl
adc
ss
mov
addr16
pop
add
loopne
int
jge
xor
mov
xchg
les
and
fbld
repnz
mov
push
iret
jne
adc
add
lret
sbb
dec
repnz
or
mov
lock
lods
js
xchg
adc
icebp
outsb
out
xor
sbb
pop
push
and
dec
xor
decb
or
mov
xchg
out
mov
add
mov
outsl
sub
out
scas
fisttpll
aam
into
cmp
das
aaa
out
pop
enter
sub
mov
cli
repz
fsubs
add
out
mov
mov
mov
enter
xchg
push
sbb
fwait
adc
int3
jbe
and
outsl
pop
fimull
dec
mov
pop
out
movsb
mov
leave
xor
add
add
lods
stc
pop
pop
icebp
dec
hlt
aas
mov
jg
in
into
pop
clc
dec
lea
fwait
sbb
rcr
test
out
outsb
xchg
or
xchg
fisubs
ror
cs
das
inc
mov
xor
lods
or
add
ret
push
dec
fmuls
xchg
lea
mov
sbb
xchg
mov
pop
push
sbb
pop
movsl
fcmovbe
mov
sbbl
cltd
fbld
hlt
and
cmpsl
ljmp
fistpl
xor
in
cltd
push
sub
sarb
lds
dec
cmp
mov
add
sub
leave
lcall
mov
ror
cmp
outsl
loop
push
rclb
cmc
push
push
push
imul
and
popf
rolb
add
pop
or
or
mov
sub
or
in
hlt
outsb
xor
pushf
xor
mov
lods
ds
push
sub
enter
sbb
push
push
cmpsl
sbb
add
fwait
insb
das
iret
pusha
pop
rorl
xlat
loope
stc
gs
pop
roll
aam
cld
cmp
fnstcw
outsl
mov
lds
dec
lea
pop
xor
mov
notb
jmp
fldl
test
push
sbb
cltd
mov
fdiv
lcall
pop
es
je
push
out
into
jmp
lods
fchs
loopne
or
inc
or
and
jb
push
pop
push
jl
add
test
mov
rorl
shlb
push
pusha
sub
push
int
stos
xchg
in
dec
push
xor
cld
insl
int3
adc
ja
aas
dec
xchg
mov
sub
test
push
sbb
rolb
js
insl
test
mov
andl
inc
mov
pushf
dec
imul
ljmp
loopne
mov
in
pop
popa
adc
push
xlat
adc
js
dec
add
add
loope
test
or
and
pop
mov
aam
xchg
inc
jecxz
pop
fs
imul
loopne
cmp
rolb
icebp
stc
or
inc
mov
gs
shrl
sahf
add
fwait
inc
mov
cmp
ds
jnp
cli
adc
inc
fcmove
inc
shlb
mov
out
xor
in
mov
cld
lock
pop
xchg
aam
inc
andb
jmp
jg
test
mov
pop
pop
mov
inc
or
add
xor
mov
xor
sarb
aaa
sub
lret
pop
incb
add
add
xchg
mov
sahf
mov
adc
and
mov
ljmp
lods
in
xor
sbb
addl
adc
and
sbbb
mov
xchg
in
sti
mov
or
popf
insb
adc
push
push
push
icebp
inc
pop
addb
sar
int
stos
or
in
es
add
dec
stos
pop
sub
out
adc
call
test
jne
mov
jp
pop
test
inc
outsb
cmp
sbb
aaa
mov
test
cwtl
pushf
cmc
add
jmp
aaa
iret
mov
xor
cmc
push
mov
outsl
bound
cltd
hlt
call
in
push
cwtl
mov
insl
adc
jne
mov
cmp
imul
push
add
adc
or
fimull
push
das
jno
les
inc
add
inc
xchg
inc
loop
mov
cs
xchg
jg
lods
jbe
lock
inc
fsubl
xchg
out
pop
pop
push
mov
pop
mov
scas
push
pop
rcrb
jb
or
cmpsb
push
dec
packuswb
adc
test
leave
ljmp
cmc
loopne
dec
jo
jp
jg
clc
push
xor
popf
jp
notb
push
dec
outsb
das
jg
enter
test
fstpl
mov
mov
fadds
outsb
sti
int
pusha
jl
int
gs
jecxz
stc
push
and
push
lods
jge
push
dec
sbb
aam
test
ljmp
mov
bound
movsb
in
mov
rcrl
movsl
lock
mov
ret
lahf
jno
xor
out
mov
ficomps
push
imul
sub
gs
scas
add
pusha
jge
inc
mov
and
cs
es
dec
out
xchg
das
dec
in
dec
xchg
lods
cltd
adc
push
mov
cmc
test
jmp
test
pop
sbb
popf
lahf
cli
daa
or
sub
mov
in
dec
pop
sub
ja
pop
jae
int3
push
imul
cmp
mov
idivb
dec
mov
and
push
xchg
std
outsb
sbb
leave
cmp
push
push
mov
ret
aas
jmp
leave
inc
pop
xlat
cmp
ss
add
fsubrs
jl
mov
xor
mov
adcl
adcl
pop
push
movsl
out
cmp
popf
scas
pop
in
sbb
lea
adc
adcb
sbb
push
ds
or
orl
lcall
jl
sub
xor
call
shlb
jns
cs
cli
pop
cmp
adc
subl
xor
cs
mov
xor
add
jnp
xor
pop
rcrl
add
dec
faddp
nop
lods
cmp
lea
pop
adcl
aam
mov
cmpsl
cmc
push
mov
sbb
xchg
sbb
lods
cltd
jae
cs
xchg
nop
push
lret
cwtl
xor
mov
outsb
cmpsb
scas
cmpsb
fwait
add
mov
xchg
dec
les
dec
orl
sti
dec
xor
outsb
cmp
push
adc
xchg
jp
adc
inc
xchg
push
jp
jb
xchg
cmp
xchg
bound
jmp
psrld
jge
sti
aam
int
and
xor
cld
sbb
xor
call
add
sbbb
rorb
pusha
sbb
pusha
jbe
fdivrs
adc
aaa
enter
mov
xor
xor
push
cmp
ljmp
hlt
pusha
mov
cwtl
add
jbe
call
cmp
jo
and
shll
shlb
and
mov
inc
sbb
cs
sahf
flds
mov
xorl
loopne
outsl
daa
lods
sub
mov
adc
movsb
stos
or
add
mov
xchg
or
sbb
das
cmp
sub
ss
mov
sbb
cmp
xchg
sbb
and
adc
adc
adc
ljmpw
inc
pop
das
or
mov
add
das
aas
pop
pop
pop
add
js
lret
stos
push
mov
aaa
pushf
mov
push
xchg
outsl
or
call
cmc
add
and
xchg
pop
adc
mov
icebp
lret
pop
sbb
pop
movsl
sbb
mov
lds
rorb
subb
jge
mov
cmp
adc
sub
or
dec
xchg
jp
sbb
or
mov
adc
sbb
push
pop
xor
and
dec
push
pusha
icebp
mov
mov
out
movsb
jo
jecxz
out
imul
pop
ror
inc
lcall
pusha
hlt
je
rcl
sbb
shll
scas
jne
clc
mov
lret
and
subl
icebp
or
xchg
in
mov
out
sti
pop
cld
clc
subb
fucomi
jmp
ljmp
js
adc
dec
fsubrp
inc
sbb
cmp
mov
nop
es
jle
and
push
fcoms
jno
cmp
jge
pop
mov
mov
cltd
lock
cwtl
ljmp
mov
stos
insl
jge
mov
mov
add
fcoml
leave
test
movsb
call
mov
test
push
lcall
fldt
cmp
mov
pop
rolb
xor
call
cmp
mov
mov
clc
jns
mov
in
mov
inc
inc
jl,pn
inc
sub
push
and
cmp
or
cs
fdivrl
andl
jmp
lcall
xchg
mov
lods
subl
fdivl
in
pusha
push
lret
and
mov
aas
jns
mov
xor
xlat
stos
jbe
ja
outsb
fildl
psubsb
int
pop
sub
out
mov
popf
sub
and
rol
cli
call
pop
inc
push
aaa
jle
lcall
ret
mov
cmp
push
mov
inc
xchg
test
movsl
imul
sbbl
aaa
leave
pop
adc
cmp
xlat
sbb
jg
inc
mov
dec
xor
or
in
outsb
dec
mov
jp
cmp
aas
mov
push
inc
in
in
jbe
jle
or
sti
and
pop
jo
and
lock
test
push
cmp
dec
adc
mull
cmpsb
push
adc
aaa
ret
sarl
cmp
dec
sub
xor
nop
insb
insb
movsl
mov
pop
pop
add
ljmp
mov
sbb
or
dec
xor
mov
push
popf
repz
jae
fsts
lea
xlat
or
sub
jmp
or
leave
cs
pop
xor
cmpl
mov
dec
loope
mov
js
and
stos
nop
mov
sub
or
push
cld
mov
cmpsl
aas
lret
ror
push
xor
outsl
hlt
jnp
and
call
lds
xor
gs
out
mov
push
or
imul
fwait
add
fucomi
cli
push
mov
flds
pop
mov
shrl
pop
dec
jae
sbb
repnz
pushf
stos
sti
cmp
pushf
sub
sarb
dec
pop
ficomps
push
inc
es
call
add
xchg
lret
outsb
mov
dec
mov
or
lods
pop
xchg
leave
push
inc
insb
mov
scas
sbb
inc
lahf
gs
push
add
loopne
int
jg
rol
xchg
xchg
mov
sub
fists
lods
mov
imul
mov
inc
and
dec
not
cltd
push
addr16
loopne
dec
lods
xor
add
nop
dec
cmp
dec
inc
dec
push
inc
add
cld
pop
dec
xchg
inc
and
addb
cmpsb
fs
xchg
ror
mov
adc
or
fnstenv
sbb
pusha
or
rcrb
cmpsb
js
mov
test
mov
sbb
pop
mov
jnp
roll
cmp
inc
push
loop
add
push
and
jge
fsubl
mov
je,pt
jne
push
fsubs
pop
xchg
mov
inc
scas
fisubs
out
pop
cmc
xchg
loopne
push
lret
adc
loopne
or
pop
mov
fisttps
inc
jne
cld
test
mov
inc
ljmp
push
adc
push
pop
or
lcall
or
jge
xchg
mov
cmpsb
pop
push
sbb
pop
adc
add
adc
lods
inc
pop
pop
mov
inc
push
fwait
inc
or
insl
ds
arpl
cmp
push
jae
scas
jmp
arpl
add
mov
jb
lds
addr16
jp
mov
icebp
icebp
push
ficompl
pop
fisubrs
je
test
lret
and
jno
mov
imul
or
xchg
push
outsl
inc
inc
pop
loopne
loope
lea
insl
cmp
pop
test
out
cmp
mov
pushf
inc
cli
xor
or
inc
out
pop
mov
mov
jnp
and
lcall
or
inc
xor
dec
jbe
or
mov
pop
mov
pop
cmc
iret
pop
mov
inc
out
mov
adc
pand
sarb
mov
cmpb
repz
ret
rcll
adc
jg
adc
cmc
stc
xor
xchg
inc
call
sbb
shr
das
pusha
jg
mov
clc
das
leave
mov
adc
testl
mov
sub
pop
ss
es
mov
outsl
aaa
btc
mov
adc
or
mov
repnz
dec
ret
shlb
xchg
xchg
xor
jmp
ljmp
dec
sbb
push
repnz
call
jmp
ss
test
ja
into
fidivrl
fwait
outsl
inc
push
cmp
movsl
into
inc
out
loope
les
dec
sbb
stc
sub
enter
inc
inc
aam
int
ss
cmc
dec
lods
rcll
push
aad
mov
pusha
aaa
out
add
mov
scas
movb
loope
sbb
xor
xor
mov
into
jae
lret
out
sbb
inc
jbe
jo
mov
jae
push
mov
jb
pop
jmp
jb
bound
test
pusha
pop
adc
stos
stos
xchg
or
ficomps
fidivl
adc
pop
jne
lret
stos
push
and
out
out
lock
repz
cmp
cmp
movsb
adc
insb
jo
outsb
push
mov
push
mov
fstps
imul
cld
movsb
sahf
xchg
sbb
xor
xchg
das
leave
cmpsb
cli
insb
outsb
push
xchg
mov
sarb
frstor
ds
sbb
sub
inc
sub
lds
sbb
sub
lods
adc
xor
jp
sti
call
xchg
mov
add
divb
rcrb
dec
or
or
xchg
pop
mov
mov
outsb
stos
mov
imul
xor
or
push
mov
sbb
and
xchg
flds
lea
and
mov
push
mov
fdivl
xor
inc
cmp
into
arpl
jns
lods
sub
jp
stos
out
sahf
iret
cli
cli
sbb
mov
pop
dec
rolb
mov
std
cmpsl
roll
cmp
add
les
in
loope
cmp
sub
mov
pusha
pop
imul
jnp
leave
push
shrl
and
gs
movl
insl
das
mov
popa
lret
fs
mov
xchg
xor
and
push
mov
push
push
cs
lea
xchg
int3
dec
lods
mov
xor
fisubl
mov
out
push
or
pop
in
fs
test
mov
dec
cmpsb
or
inc
adc
cvtdq2ps
or
daa
loop
mov
or
popf
imul
in
pop
in
ror
sub
dec
cs
adc
mov
rolb
insb
sub
lret
push
fdivl
fwait
add
sbb
sub
mov
div
cmp
pop
dec
lods
or
inc
mov
mov
repz
cmpsb
hlt
dec
adc
dec
sub
dec
in
out
mov
pop
and
shrb
jecxz
mov
add
adc
outsl
clc
out
jno
mov
aas
add
cmpsb
mov
pop
sbb
push
pop
int
andb
cld
adc
mov
mov
or
loopne
mov
jmp
and
xor
pop
pop
cmp
add
sti
scas
sbb
sub
fcmove
inc
pop
imul
movsb
or
lea
pop
sahf
das
mov
fstpt
cmp
ds
push
dec
jl
outsb
xor
mov
int3
lea
out
lods
adc
sbb
sbb
cmp
sub
fwait
ss
xor
daa
pop
dec
or
subb
mov
std
jmp
and
add
jae
sub
lret
mov
stos
lea
pop
push
mov
mov
add
mov
mov
and
ret
cmp
mov
rorb
cmp
sub
push
arpl
jle
pop
in
cmpl
pmullw
ficomps
jne
gs
arpl
icebp
xor
roll
add
sub
loope
repz
push
adc
fldcw
aad
jge
sub
jb
loope
loop
addr16
std
clc
neg
je
out
scas
sbb
je
imul
and
outsl
jno
add
loopne
inc
stos
addr16
sarb
sub
or
out
add
mov
add
mov
or
and
packsswb
cmp
xor
outsl
xchg
test
mov
and
pop
lret
mov
ja
sub
test
xor
cmp
lret
fnstsw
mov
sbb
ljmp
inc
imul
stos
jno
jo
push
ss
lods
pop
xor
and
or
cmp
test
mov
je
dec
pcmpeqd
pop
sbb
sarb
imul
divb
stc
fcmove
out
clc
daa
inc
mov
loopne
xchg
dec
sbbb
cs
mov
cmp
in
insl
pop
icebp
mov
push
jne
fnsave
push
imul
and
or
sbb
lds
inc
xchg
sbb
push
lds
jecxz
pop
sti
or
lock
out
sub
subl
int
int3
es
xor
adcb
lahf
fidivl
pop
ss
ret
lea
ljmp
mov
iret
inc
sub
push
mov
fstpt
hlt
push
ds
jns
pusha
ror
or
and
inc
ret
movnti
lret
jb
adc
push
stc
mov
cli
loop
fisttpll
fiaddl
dec
xchg
sub
rcr
cwtl
dec
jbe
fsubr
sub
lds
jmp
and
repz
pop
add
pushf
adc
in
cmp
sub
mov
imulb
mov
jbe
sbb
int
pop
cmp
or
jl
scas
rep
mov
sub
adc
sbbb
add
dec
dec
mov
jne
jae
out
cmpsl
add
xchg
neg
icebp
sub
add
xchg
sub
mov
xchg
or
mov
cmp
or
sub
add
xor
cmp
xor
push
mov
bound
std
decl
jbe
adc
rorl
popa
pop
inc
push
aas
sub
mov
mov
mov
aam
fcmove
pop
inc
movsb
int
dec
add
imul
ljmp
mov
imul
sub
sahf
sahf
ret
mov
mov
inc
mov
dec
ds
pop
xchg
push
movsl
iret
out
xlat
imul
fwait
and
cmp
dec
lock
or
mov
pop
dec
test
fcmovne
xor
lret
icebp
xchg
sbb
dec
xor
not
and
jmp
in
pushl
jns
xor
mov
mov
dec
push
pop
push
in
aad
mov
sbb
pop
aaa
sub
into
daa
pavgw
sub
rclb
pusha
hlt
test
dec
push
adc
aad
dec
push
pop
fs
insl
daa
jl
frstor
push
in
ss
test
cli
push
fcompl
jo
loope
faddl
inc
popa
jbe
sarb
fsubs
stc
inc
xor
dec
vmulps
mov
fnstenv
mov
xchg
dec
push
clc
fwait
cmc
push
pop
movsb
xor
pushf
dec
and
mov
xchg
or
sub
xor
les
or
rclb
cwtl
inc
fdiv
jecxz
mov
mov
dec
scas
mov
cltd
clc
ret
mov
jbe
ljmp
insl
add
iret
xchg
call
pop
mov
mov
sbb
aad
jno
cmpsb
test
out
xchg
lret
fistl
push
insb
imul
cltd
xchg
push
xchg
mov
adc
iret
daa
push
cli
insb
pop
out
jb
cmpsl
ljmp
insb
ret
mov
cmp
sub
repz
bound
dec
mov
xchg
cld
xor
dec
test
es
fidivrl
aaa
inc
jno
jmp
fisttpl
lds
mov
and
push
imul
xor
jl
mov
xchg
and
inc
jae
cmp
sbb
cwtl
sub
dec
jb
inc
lds
and
pop
shlb
xor
mov
inc
or
mov
sahf
and
jae,pn
ljmp
ror
push
lcall
in
lea
int
jecxz
xchg
jp
int
scas
nop
mov
fwait
dec
xchg
mov
sub
insb
mov
cmpsb
lea
xor
mov
rcrb
sub
daa
mov
outsb
and
arpl
enter
andl
xchg
or
pop
fisubrl
scas
insl
aaa
rclb
sub
and
mov
lock
rorl
push
fldt
adc
icebp
ds
jnp
mov
jns
scas
stos
shrl
lock
ljmp
addr16
jp
sbb
sub
outsb
pop
mov
popf
fisubl
xlat
xchg
data16
sub
push
mov
cmpsb
sahf
mov
pop
lods
stc
mov
xchg
push
jle
aas
fstl
pop
mov
jmp
add
push
movsl
add
jecxz
push
push
fcoms
imul
mov
cmp
push
xchg
adc
sub
les
data16
mov
pop
push
nop
outsl
rol
jbe
add
adc
or
test
add
ljmp
and
push
daa
fidivs
mov
or
frstor
iret
test
and
movsl
xchg
mov
call
push
into
aaa
data16
xchg
lret
mov
mov
outsl
pop
insb
sbb
loop
iret
call
aaa
and
pop
jmp
mov
xor
push
or
or
xlat
lock
sub
adc
adc
ss
push
mov
icebp
fsubr
add
mov
stos
data16
inc
scas
cmp
push
push
daa
shrb
push
inc
inc
sbb
outsb
mov
add
addb
adc
lock
pop
cli
ljmp
cltd
inc
inc
adc
pop
adcl
pop
call
test
je
aaa
shll
add
lcall
sbb
mov
mov
and
dec
das
jl
stos
jbe
popa
into
daa
int
cmpsl
push
mov
or
andb
push
adc
lahf
lock
inc
push
mov
jg
clc
mov
test
movsb
push
xor
push
sub
outsb
sti
inc
sub
rolb
or
dec
hlt
mov
xorl
sbb
xchg
inc
xchg
mov
mov
push
repnz
push
mov
jns
test
xchg
cmp
pop
sti
sub
inc
or
or
or
sbb
and
cs
loope
jmp
arpl
jp
push
pop
mov
stos
repnz
mov
dec
int
stc
sbb
adc
or
loop
lods
leave
push
lods
mov
sub
stos
cmp
xchg
jb
mov
lds
dec
adc
sbb
insb
stos
sub
xchg
ds
pop
aam
push
scas
sti
mov
lock
mov
je
aas
or
xor
mov
cmp
inc
and
cmp
jbe
pushf
xchg
xchg
jo
es
dec
jmp
setl
adc
add
xor
cmc
je
lahf
mov
cmp
iret
xchg
imul
inc
in
push
inc
jmp
sbb
mov
or
push
adc
sbb
nop
sub
push
sbb
push
lret
jne
inc
outsl
push
jg
lock
push
mov
sbb
push
ret
cmp
mov
cmp
mov
jo
or
fistpl
lds
or
call
inc
adc
lahf
xor
enter
ret
in
mov
stc
add
mov
xor
jge
mov
jno
mov
into
shlb
repnz
enter
xchg
mov
pxor
push
sbb
sbb
nop
jno
gs
mov
iret
fucom
outsb
inc
shl
push
sub
mov
arpl
xor
mov
rcrb
out
pop
jg
ffree
xchg
nopl
mov
mulb
lea
add
sub
dec
add
testl
imul
aas
mov
pushf
mov
scas
leave
mov
cltd
shrb
push
or
adc
outsl
cs
xor
jmp
or
xor
outsb
cmp
outsb
lods
dec
mov
sub
pop
pop
cmp
pop
loopne
dec
push
adcb
mov
pop
jmp
mov
mov
or
and
lret
roll
fscale
in
notl
fsubr
sbb
jo
ret
xor
fsubrl
xchg
push
testb
inc
lds
xor
roll
test
xchg
inc
scas
ss
and
lcall
mov
pusha
mov
inc
pop
pop
stc
shrl
mov
enter
cmp
pusha
inc
jg
js
lahf
push
insl
dec
mov
pop
pop
ss
sub
adcl
lea
mov
add
pop
popa
lock
push
aaa
xor
or
popa
pop
dec
ds
mov
dec
dec
movzbl
lcall
out
dec
jbe
cmp
xchg
and
gs
in
int3
xor
mov
or
pop
mov
cmp
sbb
mov
cwtl
or
out
dec
dec
xchg
jae
aas
xchg
aad
lock
xchg
push
lret
rcrb
fdivrp
negb
and
into
dec
jbe
les
mov
test
aad
pop
ljmp
inc
sbb
jle
mov
xchg
inc
rolb
sahf
push
bound
ss
lahf
cmc
jmp
xchg
adc
mov
xchg
aaa
or
bound
push
push
xor
adc
or
divl
lods
ss
push
inc
mov
test
in
fldlg2
mov
sarl
xlat
movl
xor
imul
mov
sbb
inc
mov
jns
pop
xchg
jl
aaa
inc
insb
push
xchg
js
daa
aas
out
in
jo
pusha
out
arpl
fstps
push
aad
arpl
mov
inc
ljmp
and
mov
sbb
mov
jl
cmp
int
add
inc
add
outsl
sbb
cld
outsl
sub
pop
mov
lcall
mov
daa
jge
mov
sahf
aaa
scas
ljmp
lods
sub
inc
lods
lds
mov
leave
cmp
mov
cs
adc
cltd
shrb
fidivl
push
sub
pop
push
push
arpl
and
xchg
mov
outsb
add
outsb
negb
push
test
cli
push
lds
jge
loop
pop
xor
and
call
leave
adc
mov
xchg
fnstsw
aad
mov
test
test
mov
bound
stc
inc
sbb
aas
repz
loopne
and
mov
fwait
aam
pop
outsb
scas
or
mov
adc
mov
mov
xchg
and
fmuls
test
je
sbb
push
in
stos
and
jecxz
mov
insb
cmp
dec
lret
pop
and
in
jg
mov
popa
add
dec
lret
sub
mov
shll
sbb
adc
and
popf
jbe
sub
adc
sub
jae
cmp
lods
test
ljmp
mov
and
mov
push
and
or
fs
xlat
int3
xor
fidivrl
pop
vandnpd
xchg
in
jge
call
xchg
ljmp
or
push
dec
fld1
mov
nop
ljmp
lahf
incb
dec
xchg
scas
addr16
dec
adc
std
sub
sub
in
pusha
in
lods
ror
mov
lods
sbb
mov
mov
or
lock
or
fsubs
dec
xor
rcl
int
cmp
pop
mov
add
sub
out
or
mov
push
arpl
rcr
lahf
and
sbbl
xchg
dec
push
cmc
inc
popa
add
jg
loopne
out
fisttps
inc
rorl
push
in
push
mov
lea
dec
or
mov
lret
and
ja
ret
jecxz
cli
sub
mov
xor
sbb
jnp
rorb
mov
arpl
pop
mov
xchg
add
arpl
cld
aam
mov
fistpll
mov
xlat
popa
jmp
dec
cmp
jg
int
fadds
mov
add
dec
inc
mov
push
fsubs
out
xchg
out
ljmp
icebp
arpl
sbb
and
arpl
js
push
popa
and
out
cld
xor
jecxz
xchg
sbb
mov
or
lods
mov
dec
pop
lods
jno
filds
sti
xor
stc
stos
inc
xor
out
mov
jmp
pop
sub
mov
test
arpl
gs
rcrb
pop
xchg
xchg
adc
and
dec
fisubrs
push
mov
push
inc
out
jl
je
movsl
stc
dec
inc
mov
mov
and
adc
and
mov
mov
push
xchg
mov
loop
insb
sbb
inc
in
rorb
pop
sub
or
pop
dec
cmp
cltd
sub
add
mov
jecxz
xchg
pop
inc
ja
into
adc
push
sub
push
and
pop
add
clc
or
inc
mov
jb
cmpsb
xchg
stos
popa
adc
jp
mov
mov
and
ds
js
das
rorb
sarl
push
mov
push
push
mov
subl
mov
adc
dec
call
std
cmp
xlat
jp
hlt
adc
cmpsl
sub
dec
repnz
lret
rcrb
pop
push
je
repnz
push
stos
fbstp
xchg
push
loope
shlb
cmp
aas
cli
push
popa
out
sahf
push
pop
test
sahf
sbb
push
test
mov
pop
and
mov
rcrb
pop
sub
jbe
stos
adc
add
stos
mov
and
inc
test
xchg
add
jecxz
dec
or
cmpl
int
xor
je
sub
loope
pop
xchg
enter
in
sub
outsb
pop
adc
mov
call
lds
rcl
cmp
sub
inc
jle
push
or
jae
out
xorl
xor
jno
mov
push
fistps
sub
cmpsl
jecxz
cmpb
iret
dec
and
imul
sti
add
fcmovnb
mov
cltd
pushf
cli
pop
or
jb
int3
sarb
leave
mov
mov
test
jle
lret
pop
sbb
push
pop
push
sub
into
cmc
das
sbb
test
jae
lret
push
sub
mov
xor
inc
inc
jl
ljmp
into
inc
cmc
sub
dec
and
pop
jecxz
pushf
xor
fsubs
outsb
and
push
xchg
fdiv
enter
in
xor
inc
ljmp
repz
dec
jp
mov
sahf
mov
stc
imul
mov
ret
lods
pop
xor
lods
scas
clc
frstpm(287
mov
dec
xchg
lret
jmp
or
xor
cmp
jmp
in
std
push
xor
scas
in
dec
lahf
ror
push
jge
xchg
aam
leave
mov
inc
ja
ss
dec
push
mov
outsl
xor
test
adc
test
xor
lret
mov
sub
xchg
mov
xor
mov
xchg
mov
and
add
call
sub
gs
adcb
cmpsb
popa
mov
adc
add
add
cld
aad
stos
in
sbb
cmp
or
push
cs
jbe
push
mov
sub
cld
mov
scas
jle
inc
imul
mov
addr16
lea
test
mov
add
cltd
subl
pop
mov
or
sbb
aam
push
sub
std
jnp
jp
lcall
shlb
sub
cld
pop
ja
pop
movsl
pop
stos
mov
lods
mov
mov
into
inc
mov
cmp
inc
or
add
je
rolb
jno
mov
fsub
push
daa
inc
mov
pushf
in
add
cmp
test
and
pop
gs
mov
shll
jmp
xor
inc
cli
adc
add
lret
scas
adc
clc
push
lcall
mov
repz
js
imul
jns
rorb
jae
adc
loopne
inc
mov
ljmp
sbb
call
or
movsl
test
fcompl
lahf
pop
pop
mov
arpl
xor
xchg
jge
mov
outsb
cmp
cmpb
xchg
dec
add
rorl
nop
mov
scas
das
cld
and
lcall
cltd
push
mov
ljmp
xchg
jns
mov
mov
mov
into
mov
test
xchg
mov
decb
in
mov
aas
hlt
arpl
out
mul
std
xchg
mov
mov
hlt
rcrb
adc
pop
or
leave
cmp
testl
jle
sbb
push
out
pop
sub
jecxz
repnz
pop
inc
mov
sub
mov
dec
out
out
adc
mov
pop
int3
mov
aad
sbb
or
inc
fcoml
rolb
aas
rol
lea
test
sub
dec
hlt
in
notl
int3
cmp
mull
in
lcall
jl
leave
cmpb
push
pop
lret
push
push
xchg
mov
push
cmp
outsb
mov
movsl
jp
adc
icebp
jnp
cmp
jno
add
rcr
xchg
shrl
cmp
shll
loope
dec
push
out
sbb
cmpsl
xor
adc
lret
insb
pop
movsl
lcall
xchg
adc
subb
add
xchg
pop
sbb
jo
dec
adc
mov
and
and
hlt
jnp
mov
adc
mov
ljmp
cmp
xchg
pushf
ret
mov
cmp
mov
and
das
fxch
cmpsb
lods
stc
dec
xchg
aam
leave
xchg
jae
pop
mov
lods
adc
dec
dec
dec
test
sub
aaa
test
push
hlt
pop
jnp
inc
insl
leave
test
and
pop
push
cmp
xor
loope
decl
cli
push
loopne
cmp
xlat
pop
push
rorl
mov
mov
call
dec
cmpsl
std
in
cmp
xchg
sub
scas
hlt
mov
lds
mov
out
sahf
int
pop
push
addr16
popa
push
adc
movsl
sbb
fwait
imul
shrb
and
iret
adc
ss
mov
mov
mov
repz
sbb
fmul
sbb
test
mov
mov
mov
mov
test
add
push
cmp
mov
mov
mov
cmp
sahf
rolb
inc
adc
sbb
sbb
in
stos
ret
insb
dec
mov
sbb
mov
or
ret
movsb
aaa
pcmpeqd
mov
pop
hlt
mov
dec
or
lcall
call
adc
sbbl
out
inc
sub
mov
dec
stc
negl
dec
test
inc
stos
xchg
lds
es
pop
aas
mov
insb
dec
adc
mov
in
sbb
pop
sarl
imul
stos
cld
or
fistps
pop
inc
cmpsl
cs
inc
lret
adc
loopne
lock
xor
xchg
sub
mov
sahf
loope
add
mov
push
sbb
ljmp
sbb
or
js
and
cmp
test
rcl
sub
addr16
xor
mov
fstps
fistpll
inc
pop
lcall
sbb
ret
or
loopne
stc
sahf
cmp
addb
cmp
shrb
or
add
call
dec
mov
daa
popf
decl
test
jg
xchg
testb
mov
or
fnsave
inc
xchg
sub
mov
call
sub
imul
cmp
rcrl
cli
pop
iret
in
les
or
mov
sub
inc
out
jl
mov
inc
xor
inc
cmp
fcmovu
mov
xor
shrl
cltd
sub
push
andb
pop
dec
sub
or
dec
stc
and
movsb
and
out
loop
shrl
and
les
xor
push
ret
adc
repnz
adc
out
ljmp
subb
cld
incl
mov
sbb
lock
sbb
movsl
mov
movsb
stos
les
mov
andb
mov
popf
jbe
mov
fcomps
ja
int
dec
dec
stos
test
jmp
subb
loop
into
clc
add
imul
sarl
les
test
adc
loopne
out
jecxz
sub
adc
fstpl
fistpll
rcrl
ss
xchg
inc
push
sti
dec
mov
mov
mov
fcomi
stc
jge
das
pop
daa
dec
dec
adc
adc
dec
cmc
or
adcl
cmp
sub
mov
mov
es
sub
push
ret
shll
dec
stos
je
sbb
sti
and
stos
xor
ror
lods
aaa
popf
cmp
add
sbb
push
add
mov
repnz
mov
cli
push
mov
lret
mov
lods
xchg
jg
xlat
mov
dec
jb
xchg
lods
cli
movsl
in
nop
mov
cmp
enter
or
cmpsb
ret
fdivp
rolb
xorl
js
mov
push
or
adc
and
and
test
add
orb
mov
cmp
and
pop
mov
sbb
roll
repnz
dec
and
or
dec
les
addr16
mov
call
pop
addr16
mov
test
cmp
sub
rolb
xchg
in
xchg
sbb
cmpsl
out
mov
lods
jecxz
mov
xchg
mov
sub
aaa
mov
jo
pop
pop
leave
aam
leave
xor
jb
leave
movsb
cmpsl
rcrb
mov
insl
gs
iret
and
cmpsb
pop
pop
inc
inc
cmc
add
mov
mov
movsl
out
imul
enter
add
fldenv
cmp
in
ds
je
jb
jb
mov
lret
jg
inc
pop
xchg
or
mov
cmp
jg
xchg
jp
jb
pop
std
mov
mov
sbb
test
movsb
out
mov
push
mov
jno
push
mov
pop
les
push
js
mov
mov
lret
imul
xchg
imul
mov
test
iret
xchg
cmp
lret
or
scas
inc
sbb
cwtl
outsb
prefetchw
push
push
sbb
dec
mov
mov
mov
aas
dec
sub
cmpl
dec
or
xchg
push
lea
mov
ss
stc
stc
sti
xor
inc
adc
mov
or
or
stc
or
das
aad
pop
aaa
das
arpl
or
and
out
adc
out
lahf
lds
es
jmp
insl
sbb
in
enter
gs
cmp
subl
mov
jp
lret
sub
clc
es
stc
dec
imul
mov
arpl
xchg
in
push
sub
ret
clc
repz
sbb
insb
mov
pushf
mov
cmp
jb
add
and
and
daa
hlt
xchg
ljmp
xchg
mov
and
fs
cwtl
jecxz
pusha
andb
jb
in
shll
call
stos
stos
jl
data16
pop
dec
mov
outsl
movsl
mov
clc
push
popa
xchg
in
outsb
dec
pop
add
jno
fistl
lea
add
add
xchg
leave
stc
int3
in
dec
sub
xor
out
mov
inc
mov
adc
test
dec
mov
filds
cmp
adc
cmp
dec
push
fidivl
aad
mov
lret
fwait
ljmp
fdivrl
in
sub
gs
ret
neg
pop
jg
in
jb
push
push
mov
fs
sbb
mov
je
sbb
adc
out
and
push
and
pushf
jge
dec
lods
clc
lds
mov
dec
xor
stc
jl
push
cmp
or
adc
sbb
cmc
jp
jg
shl
xchg
adcb
fistps
add
or
cmpsb
out
andl
ret
xor
out
adc
push
and
push
pop
or
fldt
inc
leave
inc
mov
jae
push
movsl
add
stos
test
test
int3
addr16
fisubrl
push
fadd
cmc
idivb
inc
cli
lahf
jo
lods
mov
jb
shr
jl
call
in
out
sub
and
lock
lret
in
sub
cs
icebp
xor
xor
arpl
aam
mov
out
dec
add
jg
popf
cmc
mov
xor
jbe
push
pop
adc
imulb
xor
mov
jg
pop
mov
and
mov
xchg
filds
loopne
js
mov
scas
es
jp
sarb
mov
and
test
fs
pop
shlb
pop
seto
adc
int3
mov
inc
inc
mov
add
xchg
lods
mov
lret
mov
fcomps
add
push
xor
xor
pushl
xchg
jmp
add
mov
movsb
lea
test
mov
push
fwait
mov
jns
imul
rcrb
push
mov
in
mov
mov
mov
je
lds
jo
inc
rorb
in
arpl
daa
pop
pop
push
fstpt
dec
push
xchg
jge
aad
scas
fbstp
mov
xchg
loop
movsl
cld
cmp
jl
iret
std
out
subb
jno
dec
cmpsl
pop
pop
adc
jno
pop
jnp
stos
lcall
or
enter
xlat
popa
push
iret
out
fstps
mov
mov
js
adc
pop
sbb
repz
pop
cs
sub
push
fcoml
test
cli
fsts
sub
addr16
xor
sub
push
out
inc
addb
pop
int3
daa
dec
lea
ficoms
xchg
decb
addr16
out
test
and
mov
pop
subl
out
lcall
mov
or
xchg
pop
cwtl
in
rorl
test
popf
enter
mov
xor
jns
idivl
fidivl
addl
pop
iret
jne
repz
sub
cmpsl
std
aam
in
in
les
leave
xorb
fcoml
data16
out
cmpsl
mov
loope
ljmp
sarl
mov
adc
add
cld
scas
je
cmpsb
xor
shll
jle
cmp
fwait
mov
lea
insl
xor
sbb
push
inc
outsb
and
xchg
test
pop
or
movq
das
inc
jnp
add
dec
and
xor
repnz
and
ret
mov
div
add
out
xchg
stos
lcall
fnstsw
push
mov
faddl
adc
test
das
insl
scas
gs
pop
sbb
ja
arpl
mov
sbbb
sub
mov
mov
aad
stos
gs
loop
lods
out
sub
push
out
push
pmaddwd
adcb
xor
push
jno
fsubl
xor
mov
addr16
sub
dec
pop
cmp
push
in
adc
adc
fistpl
ds
add
enter
or
push
jnp
out
jne
movsl
cmc
mov
mov
add
in
testl
pop
call
lods
aad
cltd
cmp
pop
pushf
cwtl
ret
popl
fidivs
mov
pusha
mov
stos
dec
mov
sbb
in
dec
out
out
cmp
pop
inc
or
lods
shll
adc
adc
and
int3
movsl
lret
push
outsb
push
mov
dec
xor
movsl
std
inc
cmpsl
xchg
mov
jge
shufps
adc
jae
nop
movsb
filds
es
ljmp
xor
pop
cltd
cld
sub
cmp
xor
je
adc
in
loope
mov
ret
and
mov
mov
add
or
adc
pop
or
mov
xor
inc
jmp
sahf
or
jbe
imul
movsl
fisttpll
fcoms
sahf
lret
lahf
int
or
in
mov
lret
jg
and
ret
cmpsl
iret
add
outsl
jnp
scas
cmp
cmp
xchg
jp
xchg
iret
jnp
jle
add
cs
dec
bound
push
mov
xchg
push
pop
dec
out
push
cmp
out
push
fmul
mov
jnp
cmp
mov
fbld
jns
xor
es
mov
cwtl
rcrl
jmp
js
repnz
lods
sahf
cld
rcrl
jmp
fstpl
ficoms
xor
das
jbe
mov
rcll
sbb
adc
inc
inc
push
dec
das
jns
xchg
cmp
xchg
lds
xor
push
pop
dec
xchg
stos
adc
sbbb
cwtl
mov
push
faddl
mov
loop
test
fnstenv
sbb
sbb
test
cmpl
dec
sub
fisttpll
sti
pop
fwait
adc
or
mov
mov
mov
add
jmp
cltd
or
imul
leave
mov
dec
test
mov
jge
dec
push
pushf
jl
js
xor
aad
ds
adc
mov
icebp
mov
out
iret
cld
fldt
mov
jns
and
adc
pop
in
xchg
lahf
adc
in
outsl
or
mov
into
mov
dec
dec
push
inc
adc
push
jns
mov
in
mov
sub
lock
ss
jmp
lock
aaa
mov
into
andl
pushf
out
scas
sub
jge
jne
pop
dec
push
loopne
or
ljmp
push
and
fsubl
bound
divl
into
ffreep
lahf
xchg
inc
mov
loop
movsl
jne
sub
push
std
repz
xorl
fwait
inc
push
jns
cmp
aad
xchg
insb
loop
lock
test
nop
cld
sti
fwait
jo
jne
or
push
mov
cmpsl
mov
cltd
scas
xchg
add
lret
aaa
dec
sub
and
xor
mov
push
fld
xchg
rolb
outsb
push
cmc
int
jnp
xchg
repz
add
repnz
or
push
and
sub
pop
jge
inc
mov
adc
cmc
movsl
movsl
lds
dec
sub
jecxz
bound
and
mov
or
inc
in
cmpsl
cmp
rclb
scas
lahf
push
in
or
pop
faddl
loope
mov
mov
into
push
hlt
aam
aad
mov
pop
sbb
movsb
fldenv
sub
xor
rcll
jb
add
iret
bound
popf
leave
dec
or
xchg
pop
lods
lods
arpl
fimull
mov
mov
insl
outsl
fldt
xchg
dec
add
loop
cld
adc
inc
movsb
jbe
fisttpl
cmp
add
dec
jb
lods
mov
lea
push
sbb
ret
fstpl
and
das
ja
pushf
pusha
or
xchg
cmp
cvtps2pi
pusha
xchg
xchg
mov
pushl
imul
filds
jmp
jbe
push
sub
dec
stc
cmpsl
ss
pop
orl
mov
sahf
and
pushf
mov
jle
adc
das
in
call
and
movsb
jnp
jns
cld
ret
or
mov
xor
nop
adcl
adc
dec
jns
lahf
xchg
inc
sbb
sbb
dec
dec
out
sub
lret
jo
adc
fwait
repz
and
dec
insb
mul
push
sarl
adc
jmp
mov
pop
imul
xchg
in
sub
pushf
lahf
mov
jecxz
cmpsb
lcall
xchg
enter
sub
sbbb
lods
addr16
xor
cmp
mov
shl
xor
jge
pop
sarl
sub
testb
mov
sub
es
pop
jnp
and
lea
rolb
mov
test
dec
int3
nop
ret
sub
push
hlt
jae
fsubl
int
xchg
idivb
pop
and
rcrb
mov
mov
xchg
mov
mov
push
xchg
mov
xor
repz
mulb
lods
sahf
out
je
xchg
mov
dec
xor
pop
cld
push
cli
ds
jno
or
inc
sub
adc
ljmp
fcmovbe
int3
push
scas
and
mov
int3
cmc
and
pop
rorl
mov
jo
push
shll
xchg
jle
sub
ja
out
mov
ljmp
in
and
xchg
out
mov
mov
jo
inc
ja
lds
jp
mov
push
push
loopne
mov
fdivr
mov
adc
pop
inc
adc
icebp
xchg
add
push
inc
in
jle
dec
cmp
in
cmc
sbb
mov
mov
jbe
and
jb
lods
lds
popa
mov
xchg
dec
test
push
mov
mov
sub
jecxz
push
adc
stc
fdivl
cmpsl
sub
das
pop
mov
popa
or
and
xchg
faddl
mov
xchg
je
dec
jne
cmp
xor
cmp
dec
jb
std
add
sub
jmp
inc
insb
pop
or
adc
and
or
adcb
daa
mov
inc
test
mov
jle
outsl
push
sub
ljmp
dec
sbb
cltd
out
stos
mov
push
es
pushf
fmulp
notb
in
pop
not
dec
xor
inc
inc
stos
jo
insl
cmp
lds
cmpsl
push
dec
add
sub
fildll
dec
or
and
out
push
or
inc
in
and
inc
clc
mov
inc
cli
cmpsl
rcrb
jmp
xor
aas
or
rorl
and
jp
xchg
jns
out
xchg
fisttpll
fdivrs
and
push
push
cmp
aam
fsubrp
xchg
mov
gs
mov
and
daa
fcmovu
or
fsubr
cmp
jg
rorl
jge
lea
repnz
cmp
xchg
rol
sub
sar
push
mov
mov
pop
jl
pop
sub
ds
mov
pop
ja
jg
imul
add
xchg
lret
pushl
cmpsl
sub
pop
add
fwait
adc
pop
movsl
pop
sub
xchg
lret
imul
cmp
inc
shl
cmpsl
mov
lock
mov
lahf
leave
ss
xor
insb
jno
mov
mov
mov
cmp
or
jae
pop
in
push
outsl
cs
xchg
and
jmp
jmp
sbb
fidivl
fisubrl
adcb
inc
sbb
outsl
sub
add
std
nop
xchg
pop
add
xchg
mov
mov
xlat
scas
dec
fwait
and
pop
lea
repz
fisubl
dec
sub
or
sub
mov
and
out
and
imul
aas
lods
xchg
ret
ds
pushf
sub
adc
sub
add
dec
out
jmp
push
dec
adc
cmp
imull
roll
aad
adc
cltd
sbb
adc
push
inc
test
xor
adc
dec
mov
nop
iret
cmp
fbstp
push
xor
or
rclb
sbb
stos
int
lcall
mov
and
mov
ss
bswap
push
leave
sar
test
push
ss
lcall
xchg
test
mov
scas
xor
or
sbb
sbb
scas
or
xchg
add
cmp
inc
ljmp
fildll
jnp
adc
subl
ljmp
int
add
insb
and
jbe
pop
test
sarb
sbb
or
pusha
in
lahf
cmp
pop
lahf
cmpsb
das
repz
loope
mov
test
pcmpgtd
repnz
lods
in
test
push
mov
mov
mov
aad
mov
jp,pt
sub
mov
pop
adc
outsb
pop
push
js
ror
jmp
sub
repnz
mov
jmp
mov
int3
pop
roll
mov
mov
jbe
outsl
add
lret
mov
cmp
bound
lea
rcrb
sub
xchg
push
pop
orl
sbb
adc
pop
rorb
sbb
push
ja
hlt
out
push
fnstsw
mov
lods
addb
push
push
imul
jecxz
pop
repz
flds
repz
fadds
insl
dec
mov
pop
push
xor
rcrl
popa
xchg
dec
sub
iret
sahf
sub
popa
and
pop
aam
pop
jnp
cmpsb
inc
sbb
dec
loope
inc
testl
cmp
jle
adc
movsl
push
push
icebp
test
add
mov
xor
xchg
jge
xchg
xchg
data16
push
dec
add
or
pop
imul
xor
or
mov
cs
data16
loop
outsb
cli
adc
testb
lret
iret
lcall
aad
fiadds
dec
mov
xor
insb
or
fwait
lret
xor
sbb
mov
ljmp
adc
mov
push
mov
mov
cli
das
jl
xchg
xor
sbb
xchg
addr16
stos
lret
scas
adc
jle
or
jb
add
mov
fstpt
rcll
mov
dec
sti
je
daa
out
and
or
stos
lahf
es
movsb
dec
fs
mov
mov
rcrl
rcr
sbb
mov
movsb
les
cmpsl
fwait
je
lea
scas
je
out
pop
popf
xchg
cs
mov
arpl
aad
out
inc
inc
and
mov
outsb
xor
stc
cmp
jge
or
lahf
loope
nop
xchg
sahf
mov
mov
xchg
mov
jecxz
lahf
push
ret
shll
test
div
aam
jo
iret
adcb
aas
and
rsqrtps
ljmp
mov
or
pop
idivl
or
pop
mov
test
inc
call
repnz
in
repz
subb
mov
popa
mov
call
jne
fistl
sbb
in
lock
mov
sbb
out
rcrl
mov
icebp
mov
outsl
ljmp
cmp
inc
adc
sbb
push
push
scas
rorl
movsb
stos
es
or
or
sahf
push
xor
enter
repnz
pop
dec
pop
addr16
mov
cltd
mov
mov
aad
sub
jecxz
fwait
sbb
add
cmp
sub
jae
jo
ljmp
sbb
pop
int3
add
cmpsb
sbb
cli
or
scas
or
pop
cwtl
xor
test
shl
jo
rorl
xchg
test
insl
mov
adc
cmpsl
cmp
cli
mov
fs
loop
pop
shlb
dec
mov
jnp
ss
pushf
sbb
xchg
mov
fildll
sub
mov
shrl
adc
ja
jnp
aam
movsl
ret
sbb
pusha
hlt
iret
fmuls
stc
in
lret
fiadds
es
std
fdivs
testl
dec
mov
jle
cmp
and
add
in
or
dec
xchg
push
test
mov
or
jle
cmc
sbb
xor
mov
testl
cmp
or
adc
xor
push
adc
cmp
sbb
rcpps
adc
andl
insl
xor
inc
repnz
pop
imul
mov
pop
mov
call
pop
xor
push
pop
loopne
adc
lods
lcall
dec
je
mov
cmc
ds
inc
subb
repnz
call
rcrb
stos
popa
imul
push
xor
enter
or
jge
pop
mov
and
stos
test
icebp
sti
inc
pop
leave
xlat
mov
aam
dec
icebp
xchg
bound
mov
enter
jne
dec
xor
push
mov
sbb
push
inc
cmc
cwtl
fnstsw
fnstsw
pop
or
inc
push
dec
pop
inc
sub
lods
fnsave
and
dec
das
and
jmp
adc
shrl
xchg
dec
fcomps
sub
out
std
mov
decb
gs
adc
jo
enter
test
cs
inc
pop
mov
fisubrl
rclb
lods
pop
mov
or
mov
push
xor
roll
mov
cmp
roll
pop
sub
outsb
push
mov
xor
adc
aam
test
pop
es
dec
ja
out
aas
repz
rorb
add
outsl
dec
jmp
mov
mov
push
cmpsb
push
fsubl
ja
cmp
leave
jns
xchg
incl
inc
or
sbb
fsubrs
sbb
jno
cmc
jb
call
push
imul
xor
xchg
loope
jge
mov
decl
in
ret
add
cmpsb
std
sbb
insb
mov
mov
cmpsb
pop
out
cmpl
jns
adcl
sub
jns
push
push
lret
xchg
fucomp
or
pop
addb
aaa
loopne
inc
push
xchg
xor
stc
scas
sahf
cmpsb
sahf
movq
jb
dec
sbb
scas
dec
aas
cmpsl
rcll
inc
and
and
ljmp
inc
sti
pop
mov
mov
test
dec
icebp
outsl
inc
out
sbb
jnp
sti
imul
jp
cmpsb
mov
inc
adc
mov
cmpb
xchg
fdivs
cmpsb
pop
cmp
jae
or
mov
test
or
mov
test
mov
or
jo
mov
lods
xchg
push
popa
adc
mov
data16
sbbb
jg
jo
data16
fcos
scas
fildl
xchg
dec
test
push
rorb
loopne
insl
mov
push
mov
arpl
lret
js
push
and
fldenv
sub
xor
test
imul
push
fistps
xor
sbb
lcall
xchg
pop
stos
scas
xor
es
ja
stos
xchg
pop
cmp
mov
call
gs
pop
int3
repnz
dec
outsl
outsl
fs
jb
jne
int3
orb
stc
jns
sub
out
inc
fists
test
mov
mov
dec
dec
ss
push
push
or
inc
lret
lds
inc
dec
jnp
jp
imul
xor
mov
cmp
aaa
sti
jo
nop
xor
lcall
decb
xchg
pushf
arpl
push
jb
mov
push
jmp
int3
mov
shlb
pop
adc
enter
mov
scas
int
dec
shlb
mov
lock
mov
imul
cwtl
shl
shll
loop
lods
out
sbb
fisubs
pop
cmpsl
cltd
mov
lods
int3
push
adc
arpl
movsb
fwait
adc
lcall
push
fcom
lods
pushf
enter
cmp
leave
test
xchg
and
jno
movsl
xor
mov
push
filds
mov
mov
ret
xchg
pop
xchg
pop
jle
jo
push
gs
push
subb
aad
mov
in
stos
and
and
mov
mov
sub
fucomp
cmp
cmpsb
mov
int
cmp
out
mov
push
and
push
repz
negl
pop
push
cmp
rcll
je
stc
shl
cmc
shlb
cmc
rcrl
cltd
int3
fisubs
js
aas
inc
jo
iret
outsl
mov
dec
lds
hlt
sub
or
cmpl
xor
sbb
mov
ds
mov
mov
and
xor
mov
icebp
jp
dec
cmp
mov
mov
ja
jae
or
flds
jbe
mov
dec
mov
fldl
aas
ret
jnp
pop
clc
popa
inc
cmpsb
mov
cmp
inc
add
pop
and
rcrb
std
rclb
dec
jbe
jno
addb
jg
add
je
mov
cmp
shll
and
fbstp
test
insl
mov
lods
fs
cmp
sbb
cmpsb
mov
movsl
xlat
push
xor
leave
cmp
mov
cld
lods
xor
decb
mov
push
sahf
cmp
add
test
adc
cmc
arpl
cwtl
loopne
dec
test
inc
inc
clc
add
popf
rcrb
xor
fbld
or
inc
or
cltd
xchg
xchg
scas
mov
jle
push
lret
pop
add
jns
xlat
aas
push
mov
inc
mov
xchg
cmp
xchg
aas
wrmsr
das
test
addr16
jo
pop
in
mov
mov
mov
push
iret
mov
and
xor
push
pop
clc
mov
jb
sub
lods
pop
inc
pop
xchg
popf
mov
ret
mov
nop
bound
xchg
xor
xorl
cwtl
jg
pusha
sti
icebp
fmul
inc
mov
cltd
jg
movsl
adc
pop
xchg
das
and
dec
sbb
mov
lock
and
jmp
jmp
hlt
out
shll
rcr
xchg
mov
je
or
in
add
push
dec
lods
pusha
cli
shrl
dec
iret
fs
or
popf
inc
and
in
xchg
shl
inc
adc
out
mov
inc
xchg
loope
test
mov
push
sbb
data16
pop
iret
add
sub
inc
fstpt
lods
mov
cwtl
shlb
push
fnstenv
ss
call
sbb
jl
mov
orl
stc
xchg
mov
and
pop
sub
je
bound
cli
loope
clc
sub
lods
jnp
cltd
pop
dec
repz
jno
xchg
adc
fistps
pop
ret
stos
xor
leave
lcall
push
pop
ret
fmuls
gs
sbb
clc
movsl
repz
addr16
inc
pop
xchg
or
stos
push
cmpsl
lock
mov
dec
mov
dec
dec
int
sarb
dec
stos
fisubl
js
in
cmp
sti
pop
or
sbb
lea
and
ja
sahf
adc
xor
lods
jns
adc
out
call
pop
js
sub
cmp
pop
sub
sub
xacquire
out
push
mov
pop
cmp
mov
jno
shll
loope
insl
inc
cli
sbb
stos
sub
aam
push
push
fistl
imul
outsb
fists
clc
mov
mov
iret
cld
cltd
add
jno
push
ret
xor
ljmp
stc
sub
cld
imul
dec
testl
sbb
inc
lods
jge
hlt
mov
pop
lea
into
mov
inc
jmp
dec
push
jns
pop
mov
data16
mull
int
rcrl
aad
xchg
cmp
mov
sbb
fcomp
insb
cmp
imul
aad
clc
xorb
mov
jl
and
clc
cs
stos
lret
mov
xchg
jecxz
jbe
mov
mov
jmp
cmpb
inc
cmp
pop
iret
out
cmp
jmp
push
and
std
mov
adc
inc
sbb
sub
jbe
ror
pop
or
lods
lock
sbbl
xchg
add
ret
adc
mov
cmc
or
aas
inc
lods
scas
mov
jecxz
jo
dec
in
fnstsw
xor
sub
js
sarb
cmp
je
or
sbb
fmuls
int
test
scas
xlat
ss
cld
add
jnp
outsl
mov
mov
testl
pop
ljmp
fwait
movsb
push
mov
xchg
mov
aam
loope
sub
cld
sahf
out
nop
stos
mov
inc
cmp
test
popf
dec
and
inc
add
sti
insb
mov
fs
cmp
pusha
dec
xchg
and
push
js
mov
sub
call
mov
dec
nop
dec
ficoms
xlat
iret
outsb
insl
gs
rorb
ss
arpl
mov
add
cs
shll
jg
js
int3
movsl
test
push
push
into
xor
pop
out
jnp
arpl
sbbb
add
inc
cmpsl
inc
xor
ficoms
in
arpl
cltd
dec
push
sbb
push
lock
in
xlat
add
pop
dec
dec
mov
ja
lods
push
sub
mov
arpl
mov
arpl
push
mov
imul
mov
lret
fdivs
repnz
cmpsl
lcall
or
inc
cs
mov
mov
enter
clc
test
xchg
xchg
addr16
outsl
int3
inc
push
mov
insb
nop
lret
xchg
and
jno
push
enter
fwait
dec
push
jae
cmovs
loop
jp
inc
adcb
lods
dec
adc
stc
outsb
stos
test
mov
mov
xor
dec
lods
imulb
aaa
fprem1
cmp
sbb
aaa
movsl
inc
xchg
and
push
lcall
movsb
das
test
and
pop
adc
leave
mov
mov
add
rorl
hlt
push
bound
je
push
ja
mov
xchg
out
cmpsl
mov
inc
hlt
or
sub
mov
jb
lods
adcb
icebp
jecxz
clc
adc
jmp
orl
add
jb
xor
in
cli
cmc
orl
jbe
push
mov
test
dec
lahf
adc
dec
daa
mov
adc
jb
loopne
xchg
inc
inc
lea
std
push
cltd
pop
inc
lea
add
or
loop
ja
push
xchg
clc
ret
incl
stos
cmp
add
pushf
adc
fcomip
pop
dec
inc
dec
out
cs
sbb
jo
xchg
sbbb
sbb
fldt
fs
mov
fisubl
push
mov
sbb
push
stos
and
push
into
notl
aaa
sbb
push
pop
aad
outsl
std
insl
aaa
mov
sub
dec
pop
xlat
and
rcr
ficoms
imul
loopne
mov
mov
sti
or
push
jp
fnstsw
scas
add
mov
xchg
dec
jle
push
fstps
xchg
nop
popf
test
add
xor
or
ficomps
sti
adc
cwtl
jp
pop
or
in
push
jne
outsl
cmp
mov
and
inc
sbb
cs
filds
mov
jno
cmp
inc
les
loope
push
sbb
das
testl
outsl
mov
test
imul
mov
xor
sti
push
insl
mov
jbe
lahf
push
cltd
push
mov
stc
ret
fisubrl
les
mov
xchg
push
ficompl
sbb
std
dec
rcl
xor
sbb
sub
loopne
cmp
mov
lock
inc
addr16
outsb
jg
jnp
jb
mov
dec
push
and
dec
pop
sbb
es
sbb
cmc
adc
cmc
pop
movsl
clc
adc
xchg
push
cli
sub
clc
mov
push
das
popa
dec
dec
mov
frstor
jns
loop
sbb
mov
lret
leave
mov
mov
pmulhw
sub
dec
les
std
movsb
negl
push
rcll
cwtl
push
push
pushf
push
sbb
pop
sbb
lods
fsubrs
push
stos
es
xchg
movsb
sbb
subl
mov
mov
jle
into
in
lds
push
jmp
sbb
int
fsubrp
mov
mov
cmp
mov
out
xor
cmp
std
xor
jg
loope
jbe
mov
mov
divl
cmp
jbe
or
arpl
xchg
in
lret
push
push
ret
ss
aaa
cmp
xchg
mov
popf
push
ds
mov
or
add
ljmp
lcall
ror
adc
push
clc
mov
pushf
bound
lcall
outsb
stc
jecxz
clc
jmp
fnstsw
or
jmp
push
xchg
sbb
sahf
mov
push
dec
xor
sub
inc
xor
lods
jnp
sub
dec
cmp
sub
mov
ret
imul
adc
push
loopne
sbb
jmp
outsl
sbb
adc
dec
adc
mov
mov
ret
xchg
xorb
add
movsl
cmp
mov
daa
cltd
xchg
pop
or
mov
mov
push
inc
fstp
push
and
cmc
push
sbb
sub
lcall
and
sbb
mov
sti
mov
jbe
sbb
adc
fdivl
sbb
cmp
xchg
jl
cltd
cmpsl
or
iret
lcall
mov
push
mov
imul
imul
xor
movsb
and
pop
repz
jb
inc
popl
inc
push
or
or
xchg
cltd
stc
cld
fcomps
or
loope
cli
sbb
cltd
or
sbb
aam
mov
mov
call
add
xor
xor
mov
sub
cs
shlb
adc
shlb
push
pop
ret
sub
stc
jae
rorb
lahf
push
dec
ret
pop
jp
sbb
mov
push
push
cld
sti
add
iret
dec
push
cwtl
push
mov
pushw
mov
inc
jl
jno
frstor
mov
addr16
jno
mov
stc
cmpsl
add
add
mov
dec
clc
dec
mov
jge
roll
shl
adc
add
sub
jg
int3
mov
add
or
sbb
data16
movsl
ljmp
ljmp
sbb
gs
scas
sbb
in
cmpsl
xchg
int3
dec
pop
sbb
sub
cmp
out
hlt
movsb
push
test
adc
cmc
push
scas
pop
icebp
xchg
ss
add
loop
stos
mov
pop
cmc
inc
sub
mov
mov
mov
cli
fisubrs
dec
pop
jg
push
test
nop
cmpsb
ja
adc
shl
xchg
cmp
and
mov
aad
imulb
or
mov
xor
ljmp
push
inc
push
rorl
dec
lea
xchg
stos
fcmovbe
push
imul
call
enter
in
push
lret
dec
cmp
xorb
xchg
popa
js
push
xchg
adc
mov
xchg
mov
cmp
xchg
arpl
test
call
push
jl
jg
shrb
adcl
inc
ret
outsb
sbb
jno
imul
mov
sbb
arpl
jno
mov
stos
loope
add
add
data16
cmc
inc
mov
in
movsl
loope
jo
xor
lock
and
mov
faddl
les
mov
add
subb
clc
cmp
sub
ror
icebp
mov
cmp
dec
xchg
mov
xor
call
add
push
bnd
test
lds
dec
data16
xchg
mov
inc
push
daa
aas
mov
in
cmp
movsl
jle
cmc
xchg
imul
loop
icebp
jg
or
fsub
push
jmp
and
jge
dec
push
ret
out
pop
mov
mov
cmpb
xchg
pop
stos
cmp
lock
or
mov
xor
mov
sbb
dec
cmp
cltd
mov
inc
pop
mov
jo
les
pop
cltd
mov
xchg
dec
jo
add
icebp
repz
cmpsb
pop
movsb
inc
push
stos
inc
pop
add
int
jo
jle
loopne
dec
test
jns
divb
jb
jle
popa
mov
xor
lock
mov
testl
sbb
or
insb
ret
je
lahf
sbb
loopne
nop
in
mov
clc
or
andl
movsb
rcr
ret
jne
adc
inc
xchg
mov
cs
int3
mov
push
mov
fwait
adc
and
sub
adc
jmp
test
pop
insb
jecxz
outsl
rorl
ss
jnp
cmpb
sub
dec
cltd
cld
mov
jbe
das
sbb
call
hlt
out
repnz
outsb
or
data16
sub
jp
cld
push
arpl
cltd
repz
cmp
push
shlb
mov
mov
pop
xchg
lcall
xchg
dec
fiadds
mov
icebp
adc
les
insb
pop
frstor
mov
or
lea
pop
outsb
add
sub
loopne
clc
lock
inc
inc
mov
pop
int3
sbb
movsl
xchg
sub
mov
mulb
jnp
pop
sub
leave
pop
xlat
and
dec
pushf
sbb
imul
hlt
sbb
pop
insb
xchg
inc
xchg
rep
jmp
aam
testb
inc
repnz
xchg
cmc
stos
jmp
or
cld
js
mov
sti
cmp
push
sbb
hlt
pop
xor
push
inc
push
mov
mov
stos
xchg
cmp
int3
fnstcw
stos
lock
es
fs
jae
xchg
scas
cmp
mov
push
frstor
les
xor
push
aad
lods
jbe,pn
ror
jmp
fmul
rclb
sbb
sub
les
jl
scas
bound
xchg
fstp
add
xlat
movsb
shrb
mulb
enter
ret
add
cltd
sti
dec
cmpsb
daa
outsl
cltd
loope
xchg
jmp
outsl
lcall
adcl
std
jecxz
loop
cmpsl
fwait
iret
addr16
out
add
jae
test
mov
gs
mov
jb
cmp
test
adc
lcall
std
or
cmp
xchg
jge
xchg
sbb
xor
xor
sbb
fdivrl
outsl
bound
jnp
push
enter
and
xor
mov
out
adc
test
popf
mov
scas
ljmp
adc
imul
out
sbb
mov
adc
add
pop
cmp
inc
jb
mov
pop
cs
inc
lahf
das
adc
adc
dec
movsb
stos
mov
jecxz
dec
xchg
fs
lret
mov
in
xchg
mov
sub
mov
cmp
jae
cmpsl
mov
or
arpl
pop
pop
cld
sbb
popf
jp
in
xchg
aaa
xchg
dec
push
in
leave
fbld
stc
insl
adc
mov
lea
movsl
int
or
sub
ror
add
aam
test
mov
jno
adc
push
adc
data16
push
in
mov
fstpt
jle
xchg
int3
mov
outsb
mov
clc
xor
fcomps
sub
xor
pop
icebp
mov
aas
sbb
and
insb
pop
xchg
jns
inc
sbb
and
call
fidivrl
xor
jge
pop
sub
pop
in
sub
lds
sub
lret
sti
mov
outsb
adc
mov
test
ret
shrl
push
fsubrs
and
jg
orb
dec
mov
inc
test
test
es
icebp
mov
adc
sbb
in
js
out
jbe
mov
push
cmc
push
add
xorl
scas
dec
sub
sub
xor
mov
ds
test
pop
lea
xchg
and
push
mov
ret
or
imull
xor
mov
pop
push
add
or
rol
aam
sub
xlat
push
out
adc
or
test
push
scas
repnz
gs
es
xor
adc
aaa
test
shlb
add
adc
btr
mov
mov
pop
out
lcall
vpackuswb
cli
outsl
repz
mov
pop
std
mov
xor
cmp
adc
outsl
ja
sub
lods
imul
mov
in
cmp
or
adc
cld
or
push
rep
xchg
ss
jo
sbb
mov
push
jne
sub
jecxz
fcmovnbe
mov
jne
aaa
xor
jae
jb
test
insb
clc
jp
iret
mov
jg
aas
iret
xchg
mov
pusha
int
js
xchg
pop
not
add
push
sub
cmovnp
fiadds
fs
lahf
sub
adc
or
adc
lock
gs
fucomip
push
mov
test
pop
sub
or
aam
push
rcr
and
dec
sub
std
push
in
fstl
jbe
inc
into
aad
push
inc
rcrl
in
notb
dec
mov
loopnew
pop
xor
aad
divl
shll
hlt
xor
or
mov
jns
je
out
movsl
fsubr
sub
outsb
popf
das
mov
ljmp
push
cmp
rclb
mov
pop
gs
ljmp
mov
jp
xor
test
test
fidivrl
test
cli
cs
ljmp
xor
dec
add
mov
push
cltd
fsubl
nop
cmc
or
ja
ja
mov
push
and
jg
push
scas
jl
imul
call
push
test
sub
sti
jmp
test
inc
xchg
jmp
push
fistpl
std
pop
jae
repz
cwtl
and
sub
lods
jnp
or
jae
mov
test
and
loopne
add
push
gs
shrl
pop
adc
mov
into
xor
inc
outsb
jne
in
pop
movsb
or
xor
jae
fstpl
cli
mov
dec
stos
or
xor
stos
add
aas
mulb
mov
jne
in
push
push
add
inc
fcmove
testl
shlb
les
ret
mov
push
subl
dec
jbe
push
push
xchg
or
stos
movsb
cmp
mov
in
shlb
cmp
sbb
ja
ficoms
cmpsb
mov
push
cltd
leave
pop
dec
cs
lea
push
jmp
adc
imul
cli
cmpsl
or
jo
inc
inc
lock
ss
ss
sar
fidivs
dec
js
inc
iret
rcr
mov
xor
mov
stos
inc
fmull
jae
sub
es
xchg
int
mov
test
or
add
mov
fadds
push
es
mov
mov
or
fildll
pop
out
test
mov
push
or
xor
pop
inc
push
xor
out
or
or
pop
fcompl
or
insb
jmp
lret
inc
repnz
cmc
jmp
jp
ljmp
jne
xlat
loopne
adc
mov
bound
and
push
jbe
inc
inc
dec
jp
cmp
in
jge
mov
lret
cmp
mov
mov
cmp
and
pop
push
lea
inc
push
mov
cmpb
jo
imul
pop
xchg
pop
jbe
mov
adc
pop
mov
xchg
pop
jp
xchg
mov
adcb
or
jp
mov
repz
lock
lret
xchg
lret
mov
add
mov
adc
jo
mov
loop
cmp
repnz
add
outsl
fwait
jmp
dec
in
xor
in
sti
sub
loop
testl
add
aaa
xor
ja
cmovge
sbb
dec
stc
mov
and
imul
push
imul
mov
enter
mov
add
push
fadd
jg
std
cltd
push
mov
push
repz
xor
xlat
lods
jg
mov
mov
loope
inc
jns
add
es
mov
pop
lods
inc
lock
cltd
add
pop
outsb
adc
mov
into
aad
jg
nop
mov
mov
add
and
pop
cmp
fcoms
mov
xchg
ret
fisttpll
push
icebp
rclb
cmp
int3
decl
cld
cmpsl
jnp
addr16
sub
mov
inc
xchg
lds
dec
dec
jbe
sub
icebp
pop
stos
icebp
test
dec
into
add
pop
shlb
fisubrl
dec
adc
jb
fdivp
scas
enter
insl
jg
or
jno
add
lods
lcall
insl
inc
jne
xchg
sbb
push
pop
add
or
inc
shrb
outsl
push
icebp
cwtl
lods
inc
push
jne
dec
inc
mov
jmp
push
push
sbb
lock
imul
dec
mov
rcr
add
adc
outsl
ss
lods
mov
fdivs
mov
xlat
ljmp
xchg
add
or
and
cmp
sar
jb
cmpsl
rcl
lcall
jbe
test
mov
add
adc
mov
rcrb
fs
test
sti
xchg
ficoms
addr16
sbb
jb
loopne
xor
lds
test
xchg
cmpsb
and
inc
mov
jl
add
and
das
dec
lret
data16
inc
mov
sti
and
jbe
pop
insl
jmp
cmp
or
add
sahf
ret
dec
and
pop
xchg
mov
xchg
jge
in
stc
jb
xchg
cmpsb
add
cli
insl
jle
xchg
push
sti
fstpt
dec
dec
sub
int
and
inc
jl
or
jbe
es
and
sbb
insl
cmpsl
sub
mov
ficompl
xchg
cmpl
xchg
sub
out
push
cmp
in
movsl
fildl
popf
gs
adc
pusha
mov
inc
sbb
ja
xchg
mov
inc
mov
jle
mov
dec
cmc
test
jns
mov
bound
push
mov
add
pusha
insb
mov
fcom
inc
fadd
loope
or
dec
cmp
dec
cli
inc
xlat
mov
fildl
subl
or
push
pop
cmp
popa
xlat
jnp
jno
push
mov
insb
add
inc
popf
mov
mov
lea
cmc
fcmove
lahf
in
ror
sahf
pop
mov
out
and
std
mov
shl
or
fwait
bswap
adc
loope
popf
pop
in
xchg
add
fmul
xchg
data16
lods
pop
xor
repnz
lds
int3
mov
jae
arpl
mov
sub
pop
mov
cld
subb
dec
mov
int3
aam
ficomps
mov
sub
sbb
xchg
push
and
sbb
adc
pop
ret
pop
push
xchg
jmp
xor
adc
das
add
dec
data16
push
jne
insl
xor
scas
or
jp
in
xor
insb
call
fistps
clc
test
fdivrl
sub
sub
sub
in
loopne
push
add
mov
imul
sub
push
xor
fstp
cmp
inc
stc
movsl
es
cld
jge
mov
mov
mulb
data16
call
or
push
fcomp
fnstenv
xor
dec
jae
cmp
adcb
insl
xchg
pop
stos
inc
je
ds
adc
jecxz
jno
and
and
aam
sub
add
pop
push
pop
in
lahf
popf
push
fdivr
pop
push
stos
not
dec
mov
jno
cltd
push
stos
loope
mov
and
push
inc
hlt
mov
cmp
sub
cld
pop
push
mov
ljmp
les
fildll
push
imul
rcll
xor
and
negb
add
sub
fldt
inc
push
cld
dec
filds
sub
xor
push
ja
das
sti
xchg
loop
add
in
push
arpl
push
sbb
inc
pop
jl
xchg
xchg
pop
jb
cmp
mov
sub
push
js
lock
movswl
push
dec
pop
jle
pop
les
xor
ss
fcomi
ret
pushf
xchg
cmp
dec
sbbl
insb
outsb
in
fucomp
dec
addr16
sub
cs
pushf
adc
ljmp
mulb
stc
jmp
mov
lret
mov
pop
popf
adc
clc
dec
jb
ljmp
pop
out
cmp
sub
insl
jno
push
repz
gs
cmpsl
xor
push
int3
cmpsl
pop
sub
loopne
loopne
ror
int
mov
push
lret
xchg
dec
stos
test
cs
dec
fimuls
lcall
test
fiaddl
cmpsl
or
aaa
cli
fistps
mov
push
mov
test
loope
xor
test
clc
outsb
rolb
and
mov
xor
mov
cltd
pusha
dec
clc
pusha
aas
fwait
jg
addr16
imul
lret
insb
shll
inc
pop
popa
and
or
nop
inc
cwtl
xchg
cmp
imul
adc
mov
inc
cs
sbb
leave
loope
or
jge
stc
mov
adcb
pop
jmp
out
dec
test
push
lods
mov
cs
lret
loop
jg
jmp
stc
fwait
je
adc
adc
lret
ja
pop
test
decl
sub
int3
mov
push
xchg
je
addb
sbb
or
stos
fnsave
popa
xor
addr16
ficoml
leave
jno
out
xchg
mov
cmp
cltd
push
push
pop
pushl
adc
mov
pop
mov
lods
pop
jo
mov
imul
sti
in
mov
adc
lahf
mov
xchg
ja
mov
fs
dec
mov
push
and
push
cmp
sbb
sti
sub
mov
test
jne
jg
inc
sub
and
and
sahf
inc
adc
les
dec
fsubl
or
push
lret
popf
addl
and
sbb
push
dec
cmp
jb
xor
mov
xchg
cmc
jp
push
lret
cmc
dec
xor
xor
inc
popa
daa
xchg
and
xchg
cmpsb
mov
sub
stc
outsl
sbb
sbb
sbb
xlat
pop
pminub
push
sub
data16
mov
xor
pop
sub
xor
xor
movsl
pop
fidivs
pop
mov
in
dec
xorl
ss
movsl
jb
dec
xchg
mov
lods
aam
fildll
mov
or
add
jne
xchg
je
dec
cmc
pop
loopne
mov
ljmp
push
mov
andw
mov
sub
ret
cli
lds
stos
inc
icebp
cmc
mov
int
jle
iret
push
add
js
mov
cmp
test
mov
imul
cld
mov
dec
jge
call
jl
out
jne
lret
inc
inc
jg
dec
loopne
mov
inc
add
lret
outsb
pop
mov
xor
mov
bound
mov
mov
in
add
in
jg
push
pop
xchg
and
das
outsl
jg
adc
push
xor
int
cmc
and
xchg
jmp
loop
cli
or
adcb
push
jne
mov
je
jmp
adc
cmpsb
mov
test
fildl
lods
push
shlb
sbb
mov
push
fisubl
lds
lret
sbb
cli
mov
xor
xchg
lods
add
enter
repz
std
aam
sub
test
jecxz
mov
outsb
jnp
orb
subl
sbb
add
mov
into
pop
and
jae
or
sbb
fst
cli
sub
dec
daa
stos
xchg
and
arpl
lods
pop
xlat
out
adc
lods
jp
fsubrl
sbb
fcompl
vpsubsw
je
fidivrl
push
gs
mov
pop
mov
lret
dec
bound
adc
and
sti
dec
addr16
int3
out
mov
cmc
cmp
push
fmuls
outsb
jecxz
rcrl
cs
push
shll
out
cltd
outsb
lcall
and
icebp
subb
pop
push
dec
mov
xor
gs
sbb
xlat
mov
test
adc
ja
push
cmp
jnp
repnz
dec
sub
sub
sub
outsl
aaa
pop
daa
mov
imulb
enter
lock
gs
movsl
ret
imul
fs
pop
add
and
and
cmp
mov
push
fs
rol
stos
sti
xor
xchg
sti
xlat
dec
dec
je
outsl
lcall
xchg
push
cltd
js
sbb
pop
loopne
cmp
scas
adc
outsb
dec
ret
sbb
or
out
mov
mov
mov
mov
mov
push
push
pop
add
lcall
xchg
idivl
jbe
rcrb
pop
xchg
fs
jl
or
adc
aas
mov
mov
imul
jae
jl
lret
lahf
mov
cmpsb
mov
sbb
or
aam
rclb
stos
cmp
inc
add
mov
add
pop
into
rorl
cmp
push
sub
ret
inc
pop
mov
jae
cmc
add
add
pop
out
mov
fmulp
outsl
addr16
jmp
mov
gs
scas
mov
leave
lods
fdivl
leave
cmpsl
in
jle
add
in
cwtl
outsb
in
movsb
mov
sbb
fsubrs
pop
adc
je
inc
js
sbb
cmpsb
stos
outsl
fidivs
cli
jae
call
pop
adc
jg
mov
sbb
rorb
or
clc
sti
mov
js
mov
mov
cmp
gs
mov
lds
inc
mov
jbe
test
sbb
aad
es
xor
popa
add
fistps
adc
fdiv
ja
push
jl
lahf
push
push
jl
fists
or
mov
mov
lahf
dec
out
cs
daa
nop
cmp
pop
xorb
jnp
flds
gs
jmp
xchg
sbb
sbbb
shlb
lods
fs
sub
pop
stos
aad
cmpsb
pushf
adc
pop
test
std
and
jo
xor
into
push
sbb
outsl
xor
dec
cmp
pushf
xor
dec
jecxz
cmpsl
and
mov
test
mov
jge
push
fisubrl
fistl
shrb
mov
ljmp
jb
mov
sti
jmp
add
inc
nop
fiaddl
sub
push
mov
push
add
aam
pop
dec
es
pop
cmp
cwtl
sbb
sub
mov
leave
mov
ja
repz
pop
inc
outsb
dec
sub
add
jmp
jbe
jle
mov
in
lods
imul
data16
hlt
dec
stos
cmpl
pop
lods
mov
pop
mov
xchg
jp
cli
int3
jns
jb
sub
ljmp
call
inc
jl
repz
or
xchg
sbb
unpckhps
ljmp
mov
mov
jg
sub
push
dec
scas
cli
or
out
iret
cwtl
fimull
inc
jo
dec
js
out
mov
cmp
jb
pusha
inc
jns
das
sub
add
lcall
mov
fadd
and
test
mul
pop
xchg
negl
and
mov
xorb
ja
call
mov
lret
lret
js
lock
and
sub
ja
shrl
shlb
xchg
lea
push
mov
pop
je
mov
cmp
nop
adc
add
push
pusha
icebp
jnp
notb
pop
dec
int
repnz
fwait
sub
js
adc
push
xor
mov
dec
std
or
cmp
xchg
js
in
add
dec
xor
mov
mov
popa
xor
xchg
dec
out
and
sub
shr
ja
fsubr
dec
aam
xchg
mov
mov
mul
lods
xchg
mov
stos
in
sti
cwtl
popf
push
lock
jmp
xor
jmp
and
out
and
mov
cmp
dec
rorb
into
int3
rol
out
in
addr16
jb
mov
sbb
repz
pop
push
iret
pop
dec
enter
dec
movsb
adc
inc
push
cmp
inc
push
mov
push
shlb
mov
fldt
cmpsl
pop
shll
and
pop
mov
ss
mov
je
in
pop
arpl
pop
xor
es
in
addr16
add
push
test
xor
xor
add
dec
mov
addr16
xor
loope
adc
incb
int
jnp
sub
cli
vpxord
cli
fs
gs
pop
mov
stos
xchg
jge
add
popa
fsin
mov
ja
add
cmpsl
iret
sub
fidivl
lahf
and
jecxz
mov
dec
out
mov
pop
jle
dec
mov
push
scas
xchg
pop
das
adcl
addr16
lahf
enter
mov
popa
loopne
sub
pop
cs
jl
in
xchg
lds
jmp
hlt
xor
movsb
sub
mov
insb
je
add
icebp
mov
mov
pop
xchg
loop
test
ljmp
mov
cmp
std
dec
and
sub
cmp
ret
sbb
xchg
les
in
dec
jnp
jp
cld
div
mov
jno
push
push
stos
pop
sub
sub
jno
sub
or
and
lret
in
movsl
sbb
in
lods
or
scas
dec
jo
out
out
dec
gs
test
sub
sbb
push
shrb
pushl
mov
jno
mov
push
jae
mov
xlat
sbb
cs
mov
sbb
dec
adc
jge
add
jmp
sub
dec
lahf
sarl
inc
lcall
mov
cmpsl
lods
je
fldenv
xchg
iret
and
xchg
in
inc
xchg
fldcw
cli
jb
lcall
leave
push
insb
cmc
arpl
xchg
mov
shrl
int
push
jg
inc
cmp
mov
or
adcl
jg
mov
sbb
fmulp
push
ret
adc
xchg
mov
rcll
sub
scas
fidivl
mov
mov
jge
clc
std
pushf
inc
loopne
aad
daa
out
repz
lea
add
mov
sub
shlb
jb
push
sub
adc
call
mov
add
and
lcall
nop
inc
aam
cmc
sbb
bound
aad
add
lds
icebp
inc
jp
popf
sahf
xlat
dec
dec
jmp
adc
aas
pusha
dec
xchg
ret
push
adc
sub
ss
or
cmp
mov
mov
jp
pop
lcall
or
mov
loop
loop
bound
cmp
daa
push
mov
ds
enter
dec
cld
lcall
xchg
iret
cld
clc
sbb
ficomps
cmpsl
pop
sub
jne
ret
push
add
jg
movsl
outsl
push
mov
pop
mov
lahf
jne
push
push
cs
xchg
xchg
nop
sbb
sub
inc
lret
mov
mov
mov
aad
fistps
sbbb
xchg
mov
movsl
sub
fimull
adc
out
in
push
pop
int
and
adc
insb
mov
arpl
into
scas
popa
xor
mov
push
pop
rorl
es
fnstenv
orb
stos
fdivl
aad
jmp
loope
loope
and
outsb
jae
roll
in
outsb
push
and
shll
sub
daa
ja
andb
ss
lret
mov
loope
ljmp
or
mov
fisubrs
add
rorl
xor
push
lcall
xchg
inc
adcl
jne
cltd
addr16
inc
lahf
dec
sbb
stos
enter
fidivs
outsb
inc
adc
cmp
pop
dec
xchg
adc
cmp
pop
cmp
dec
out
or
lret
ljmp
mov
fildll
out
imul
pop
out
fisttpl
adc
dec
data16
and
in
mov
cs
lock
aam
mov
andb
xchg
aaa
neg
ja
sub
lret
mul
out
call
add
push
rcl
xor
enter
lock
hlt
arpl
adc
in
cmp
ret
subb
or
jg
push
sub
or
test
jp
fucom
cltd
mov
pusha
dec
enter
cmp
aaa
test
push
mov
dec
pop
je
jnp
icebp
lods
jmp
jae
into
movsl
out
and
push
movsl
les
xchg
mov
imul
pop
jp
cmp
add
lcall
and
fdivrl
pop
out
fdivrl
push
scas
lds
pop
mov
mov
mov
or
out
pop
or
jnp
lahf
mov
fs
cmp
dec
jmp
sbbb
sub
jle
lock
faddl
inc
out
mov
sbbb
call
cmp
push
xchg
cmc
in
stc
je
mov
adc
js
cmpsl
fwait
mov
push
bound
mov
iret
cmpsl
jae
mov
pop
jmp
push
movsl
mov
sarb
xchg
adc
icebp
sbb
andb
mov
push
mov
ret
and
push
sub
adc
jmp
scas
cld
loopne
cmpsl
sbb
shlb
js
xor
mov
add
mov
aad
sbb
dec
xchg
mov
push
in
addr16
int3
stos
jae
ss
bound
adc
icebp
push
cmpsl
xchg
scas
pop
cmpsb
sbb
dec
pop
jbe
inc
inc
jae
sbb
andl
outsl
jmp
adc
cmp
mov
xchg
leave
adc
outsb
adc
jecxz
dec
arpl
xor
shll
or
lcall
dec
add
mov
or
xchg
sbb
das
mov
cmp
sub
adc
repnz
or
pop
or
push
dec
mulb
jb
and
xchg
movl
lock
xchg
and
out
test
sub
mov
stc
xlat
and
daa
fcmovnu
cmp
dec
add
ljmp
push
xchg
inc
jmp
into
decl
movsl
mov
push
and
cmc
ret
sahf
loope
xor
mov
lea
xchg
int
fldcw
jp
mov
or
pop
fisubrl
xchg
adc
adc
or
sub
pushf
js
fbstp
adc
shl
daa
test
mov
sub
lret
add
icebp
scas
std
mov
sub
fcoml
and
mov
mov
xchg
or
xchg
cmpsl
test
cwtl
mov
fstpl
mov
mov
xchg
aas
add
lcall
sub
sbb
sub
pop
jns
ret
in
xchg
jecxz
sahf
push
add
ret
je
out
cmp
mov
fcoml
push
cld
dec
xchg
lret
push
sidtl
in
ja
std
mov
xchg
stos
push
pop
ja
mov
fwait
jnp
pop
fdivs
addr16
fbld
loope
push
out
sub
stc
fldl
pop
and
or
rcrb
cmpsl
popa
fisttpll
pop
or
aam
dec
notb
les
sbb
cld
std
in
insb
and
push
add
iret
dec
push
push
nop
xchg
clc
jmp
jbe
mov
cmpsb
mov
in
adc
lods
mov
add
or
call
punpcklbw
in
nop
xchg
or
ss
lea
adc
loope
lods
sbb
roll
dec
push
inc
jb
lahf
add
aaa
mov
aaa
nop
mov
xchg
popf
mov
divb
cs
cwtl
pop
adc
mov
xor
pop
jmp
movsl
mov
xchg
ret
bound
sub
xor
push
sbb
movsl
and
mov
repnz
xchg
sbb
dec
mov
nop
mov
inc
add
lock
into
ss
xor
cmpsl
mov
and
sbb
inc
pusha
lcall
gs
scas
out
sbb
fidivs
pop
neg
call
jl
mov
pop
sbb
pop
leave
cmp
or
jnp
stos
mov
mov
mov
mov
pop
push
xor
jl
push
push
cmpsl
rcl
stc
pop
sbb
rclb
pop
movsl
int3
and
call
or
in
jbe
cmpsb
lcall
popa
add
push
jge
mov
lahf
pop
xchg
cmp
imul
fstps
pop
xor
aas
add
mov
scas
lods
cmp
inc
pop
daa
mov
mov
mov
pop
mov
pop
pop
in
add
fildl
push
lret
xchg
adc
in
sbb
and
and
add
fcoml
inc
stos
call
inc
test
or
addr16
pop
jns
in
mov
jge
negl
lahf
pop
cmpsb
push
mov
into
fcmovne
cmp
or
jecxz
mov
popl
fstp
xor
jge
xchg
sbb
and
jno
flds
mov
mov
jl
cwtl
sahf
adc
imull
outsb
int
faddl
or
call
imul
cmpb
repnz
inc
sub
fstpl
loopne
call
xor
mov
aam
aaa
lahf
and
sub
mov
aaa
lock
sar
aam
ret
outsb
testb
inc
data16
movsl
mov
mov
xchg
sbb
cltd
lret
mov
fs
sub
jbe
sub
addb
jmp
pop
and
insl
push
jae
iret
fsubrs
sub
pop
or
or
and
test
jnp
std
add
xchg
adc
dec
aaa
rorb
in
ljmp
andb
pusha
cmpsb
lods
sbb
lock
jae
out
dec
rsm
inc
cs
inc
push
ret
es
adc
rolb
jge
rolb
divb
outsl
leave
push
jecxz
cltd
adc
mov
int
mov
mov
lret
lea
ret
cwtl
lahf
push
and
cld
dec
jecxz
rcr
sti
and
push
imul
lods
popa
imul
pop
fstp
xchg
fisubl
xchg
imul
and
dec
jp
jp
push
nop
pop
rcl
mov
pop
sti
pushf
mov
stos
test
sbb
cmp
jb
mov
add
cmp
mov
negb
xlat
xchg
adc
jbe
inc
add
jae
les
mov
adc
or
dec
mov
jo
call
ljmp
and
aas
adc
or
adc
je
jno
icebp
mov
int
push
inc
popf
movnti
out
and
sub
bound
loopne
std
push
lods
orl
push
fcmovb
mov
xor
dec
xchg
pusha
insb
push
jb
ret
xor
sbb
ja
push
cmc
sub
dec
into
fs
data16
mov
push
sub
fcompl
push
cmp
xchg
rcrb
xor
out
call
jnp
adc
ja
into
stos
add
mov
sub
rcll
sbbl
addb
daa
xchg
lret
cld
adc
data16
addr16
rcl
out
xor
or
std
into
fsubs
mov
sub
jno
jg
push
shll
push
push
jmp
sbb
xor
jae
adc
movsl
xor
sub
cmp
adc
adc
jle
cmpsb
jb
mov
cld
sbb
sbb
cmc
inc
lods
cwtl
scas
movsb
adc
add
mov
test
push
mov
mov
sbb
inc
mov
mov
xor
mov
mov
imul
aad
popa
xchg
lcall
lods
lret
iret
sahf
xor
ret
and
add
dec
push
lret
add
push
xchg
sbb
mov
out
iret
sub
push
jns
jmp
sbbb
mov
test
push
cwtl
lods
stos
sbb
push
scas
xlat
cld
push
or
pop
dec
call
enter
ret
sbbb
jl
stos
pusha
pusha
inc
inc
fsubp
lahf
or
out
out
data16
and
pop
mov
and
or
mov
roll
mov
jb
xchg
sub
aad
and
movd
inc
fsubrs
xchg
out
adc
clc
fadds
jb
scas
shrl
fisubrl
dec
cmp
icebp
mov
or
cltd
sti
imul
xor
loope
pusha
or
jnp
push
cmpsb
xor
dec
inc
jo
and
jge
cwtl
imul
cli
mov
jge
pop
push
jbe
leave
mov
sysret
lods
fs
popa
arpl
repnz
les
outsb
ss
ret
sub
dec
test
cmp
xchg
test
mov
xor
jmp
jae
fimuls
cmc
cli
mov
outsl
cmp
xchg
rcrb
jge
ja
out
inc
jecxz
mov
arpl
lods
push
es
mov
int
pop
iret
mov
mov
enter
dec
pop
xor
adc
xchg
cmp
xor
enter
or
inc
aam
mov
inc
and
in
add
shr
dec
jmp
icebp
and
and
cmp
sub
xchg
stc
imul
subb
xchg
jp
icebp
cmp
clc
loopne
jne
movsb
mov
loopne
inc
lods
in
or
movsl
cs
dec
das
lea
or
fcomip
lods
imul
fbstp
sub
sbb
or
out
sbb
inc
in
sbb
adc
mov
lcall
jle
imul
add
sub
adc
pop
dec
pop
in
insl
xlat
xor
pushf
idiv
push
mov
and
sti
loop
jl
lods
xor
cmp
lea
xor
adc
and
inc
or
dec
push
js
rcrl
sti
xchg
push
add
and
pusha
sbb
lret
xchg
adc
test
sbb
mov
int
lea
arpl
pop
pop
sbb
sbb
push
mov
hlt
sub
aas
fnsave
mov
sub
xor
arpl
add
mov
pop
push
mov
test
movsb
pop
or
mov
shll
into
xlat
test
mov
test
mov
test
push
scas
xchg
xchg
nop
mov
jb
pop
xor
dec
jl
in
call
jg
sbb
mov
jmp
cmpsb
das
fisttpll
mov
leave
and
ss
add
stc
adc
pop
jge
sbb
das
cs
into
sti
or
inc
push
and
xchg
jno
inc
scas
fwait
insb
push
dec
adc
sbb
cmp
inc
or
lcall
pop
and
testl
dec
rorl
jg
mov
test
mov
sub
mov
dec
int
les
hlt
bnd
clc
xchg
out
xor
jp
mov
scas
xchg
xchg
arpl
cs
mov
and
js
jmp
mov
loop
push
dec
cmp
mov
test
mov
cmp
clc
jb
xor
mov
fstpt
out
std
out
ret
repnz
bound
adc
sbb
sub
ja
jl
call
mov
das
stc
mov
mov
in
outsl
jo
pop
fs
cmc
int3
pop
ds
xchg
stos
aas
mov
je
out
mov
cmp
mov
xor
testb
cmp
sbbb
dec
shlb
add
dec
sub
mov
push
and
sbb
dec
dec
test
addl
int3
sbb
bound
and
cli
mov
in
pop
push
or
pop
call
cmp
sub
add
jge
aam
jle
mov
sbb
loope
insb
test
jp
mov
cmp
jb
cmp
dec
jmp
push
mov
or
inc
int3
mov
inc
scas
lcall
xchg
jns
xchg
idivb
xchg
xlat
arpl
lret
push
inc
push
or
jge
int3
clc
cmp
cmp
mov
xchg
xor
push
imul
xor
xchg
insl
insl
cwtl
test
xchg
out
fdivs
xchg
out
pusha
das
fndisi(8087
pop
inc
pop
push
jne
mov
xor
pop
lret
xchg
mov
inc
push
fidivrl
add
lods
add
aam
mov
pop
pop
xchg
add
inc
fistps
scas
mov
idivl
je
movsb
loope
nop
sub
cwtl
popw
ret
adc
in
outsb
je
ds
pop
fmul
sub
imul
inc
dec
sbb
loopne
cmp
adc
stos
xchg
loopne
mov
jge
leave
mov
cltd
mov
cmp
lds
pop
adc
dec
adc
push
push
pop
or
lret
mov
out
dec
push
adc
jecxz
cli
jmp
cmc
mov
sbb
incb
fnsave
scas
xor
repnz
sbb
js
pushf
inc
inc
repnz
sbb
mov
aas
push
push
jno
hlt
pop
sbbl
aad
inc
clc
pop
hlt
mov
push
sti
aaa
add
scas
mov
add
sarl
jl
jbe
pop
data16
cmpsl
lret
jg
scas
aam
adc
mov
mov
pop
inc
jle
adc
ds
and
add
daa
stc
inc
inc
and
lahf
dec
jg
jmp
jo
int3
sbbl
xor
mov
cmpsl
inc
jbe
xchg
daa
arpl
shll
or
sub
jg
insl
leave
leave
pop
add
dec
mov
icebp
fistpl
js
or
inc
push
gs
sbb
imul
sbb
shlb
js
pop
push
xchg
xchg
mov
mov
test
enter
sub
stos
dec
ret
dec
pop
jne
test
gs
neg
icebp
into
cmp
icebp
clc
lds
jg
mov
dec
ss
xor
cmc
out
adc
push
test
mov
popa
stos
mov
push
jne
xor
bound
shr
xorb
mov
adc
inc
mov
xchg
cmp
jb
stos
insl
pop
adc
insb
ljmp
or
std
lret
lods
sbb
adc
mov
add
adc
jnp
mov
mov
pushf
in
mov
add
gs
data16
push
loop
pushf
int
push
mov
inc
cltd
xchg
push
push
icebp
adc
imul
mov
stc
xchg
mov
lret
push
dec
lret
push
or
mov
cmp
jge
mov
loope
ret
mov
push
sub
jecxz
wbinvd
and
addr16
into
mov
inc
adc
cwtl
inc
dec
aas
or
pop
inc
add
cmpsb
mov
xchg
adc
test
jge
push
lcall
push
sub
test
mov
pop
lds
adc
lea
and
xchg
add
or
dec
test
push
out
jmp
loop
cmpsl
pop
or
test
jl
cmp
or
pop
imul
pop
in
push
cli
mov
jmp
pop
add
jbe
bswap
sub
fs
pop
cmp
cmp
sbb
jb
ja
mov
cmp
mov
pop
int3
push
pusha
je
fldenv
inc
les
loopne
sub
call
and
fnstenv
cmpsb
mov
lods
xchg
loop
stc
clc
dec
lret
out
out
lret
dec
cltd
nop
ja
mov
mov
jg
add
jp
pop
jae
xor
or
dec
cmp
ficomps
mov
mov
lret
sbb
mov
sub
fdivs
es
repz
fs
popa
mov
lea
jge
sbb
pop
dec
mov
test
pop
mov
push
loopne
pop
inc
cmp
arpl
inc
test
mov
loopne
xchg
inc
popf
je
outsl
inc
roll
dec
xchg
dec
pop
jl
outsl
movb
ret
mov
gs
call
push
and
push
xchg
test
adc
int
aas
std
loope
shll
sbb
call
inc
aaa
jnp
adc
std
jnp
push
inc
bound
in
sub
movsb
cltd
push
or
es
cmp
push
jg,pt
pop
push
ljmp
mov
lods
fsubrp
pop
lods
scas
sub
add
and
subb
out
mov
mov
dec
add
pushf
adc
test
and
push
jg
incb
adc
mov
and
push
xlat
jmp
inc
dec
and
push
or
outsb
jo
sbb
jnp
mov
data16
ret
pop
idivl
loop
pusha
cs
push
inc
outsl
mov
jbe
and
cs
loope
inc
cli
je
mov
lods
push
sbbl
adc
lods
stos
push
mov
mov
jg
dec
sbbl
out
mov
sub
mov
cmp
mov
lods
mov
push
mov
adc
int
xchg
dec
cmp
jle
pop
test
cld
shrl
xlat
push
iret
mov
xchg
lods
popa
sub
pop
xchg
inc
dec
fnstenv
jnp
hlt
pop
ficomps
adc
jns
rclb
movb
in
mov
lret
adc
jge
mov
test
or
cmc
popa
push
mov
jae
jg
mov
dec
in
sbb
ljmp
xchg
out
or
icebp
cli
sbb
jae
shlb
shlb
mov
mov
scas
cmp
js
cmp
repnz
out
leave
imul
shrl
mov
movsl
adc
pop
push
nop
cmpsb
mov
insb
add
inc
sub
or
xlat
add
xchg
fadds
fs
push
cmp
mov
sub
push
and
enter
jl
das
int
pop
cmp
mov
pop
jae
pusha
xchg
xor
jb
pop
bound
cwtl
ficomps
std
repz
mov
cmp
test
andl
cs
cmpsl
xlat
and
xor
hlt
push
push
aad
loop
fisubrs
out
jb
ret
inc
out
cmp
or
and
mov
lods
add
or
fdiv
pop
imul
push
je
orl
inc
cwtl
mov
pop
addr16
ja
fbld
xchg
cmc
and
jae
fwait
xchg
jle
jnp
leave
sbb
ljmp
pusha
and
das
sbb
dec
in
or
adc
into
add
jne
cmp
mov
inc
in
in
aad
add
sbb
add
or
addl
sub
gs
sbb
or
icebp
cmp
fldl
inc
push
push
imul
or
pop
fnstsw
pop
loopne
rcl
and
movsb
sub
into
mov
inc
loop
mov
aaa
lahf
cld
hlt
dec
dec
xor
int3
scas
jns
nop
mov
add
dec
xor
and
xor
inc
adc
dec
gs
jne
cmc
mov
ja
repnz
push
arpl
insl
not
sub
sub
out
stos
or
stos
cmp
shlb
addr16
jle
mov
lock
mov
imul
push
adc
mov
ret
and
inc
mov
mov
adc
dec
movsb
and
inc
add
push
sarl
pop
std
pop
xchg
pop
cli
push
repz
imul
repz
dec
inc
jmp
mov
mov
jne
push
pop
arpl
push
inc
pop
jae
aas
adc
cmp
mov
jp
sbb
aam
aam
orb
sbb
push
addl
test
jl
sbb
cmp
mov
mov
mov
mov
lea
es
ret
xchg
inc
divb
cmp
jne
loope
push
fcmove
push
nop
push
jnp
fdivs
add
xchg
pushl
insl
popf
mov
dec
sbb
dec
and
xor
dec
cmpsb
jmp
mov
xchg
mov
sbb
pop
invlpg
add
pop
dec
pop
dec
lds
stos
pop
jl
mov
fisttpl
mov
add
add
roll
pushf
xchg
inc
jecxz
int
ss
mov
movsl
jnp
mov
mov
pop
cmp
adc
outsb
loope
ja
les
pop
pusha
or
cmc
repnz
mov
lahf
outsb
pop
adc
xchg
imul
pop
jecxz
in
pop
daa
sti
sbb
dec
mov
sub
mov
shl
xchg
cmp
sbb
sar
stc
mov
in
cld
sub
cmc
clc
xchg
add
jbe
adc
xor
cmovbe
repnz
pop
ss
insl
in
iret
movsb
xor
cmp
shl
cmp
pop
inc
dec
adc
sbb
and
add
loopne
sbb
adc
or
lods
sbb
mov
lahf
or
jae
repz
push
inc
mov
mov
pop
das
outsb
mov
dec
ljmp
add
cwtl
test
inc
fwait
sbb
cltd
movsl
scas
mov
pusha
and
sub
test
icebp
test
mov
dec
nop
das
mov
ds
jb
aaa
pop
and
fsubp
pop
cli
pop
sub
push
gs
mov
pop
rcll
push
test
jmp
pop
push
dec
addr16
and
pop
inc
rcl
jmp
in
xor
dec
jno
sub
mov
mov
bound
push
jne
ret
iret
lock
fildl
mov
iret
repnz
mov
rorl
jno
nop
push
imul
int
fdiv
bound
insb
mov
fisttps
clc
clc
mov
and
dec
mov
pop
aas
lret
or
int
mov
pop
notb
sub
loop
sub
cs
sbb
inc
mov
lods
inc
jno,pn
inc
cmp
inc
popa
lock
test
dec
pop
jmp
out
xor
movd
add
xor
and
movsl
into
mov
dec
push
mov
jecxz
xor
shlb
mov
pop
repz
or
or
addl
or
ds
inc
xchg
sub
dec
mov
jbe
inc
xlat
mov
and
inc
mov
ret
repnz
sub
pcmpgtd
mov
pop
xorb
dec
lock
and
push
aam
je
out
rcll
jge
popa
stos
pop
mov
inc
sahf
and
out
adc
sub
add
pop
mov
or
xor
aad
mov
fwait
out
lods
lret
shl
mov
mov
or
out
sub
jne
or
lret
mov
dec
call
xchg
leave
insb
dec
sbb
xorl
outsb
sub
lds
inc
icebp
mov
lahf
rcl
std
stos
mov
test
loop
fsubrl
das
and
in
dec
mov
or
lods
pop
mov
sub
fistl
inc
sbb
hlt
inc
cli
std
in
inc
pop
jno
mov
lahf
xor
dec
xchg
inc
add
ficomps
subb
rclb
mov
mov
hlt
and
jns
and
ret
hlt
xlat
arpl
cli
cltd
movsb
notb
adc
jnp
test
cmp
dec
out
aaa
orl
out
mov
faddl
mov
jae
incb
jmp
loop
and
outsb
cmpsb
pushf
lret
fcmovne
and
push
jle
jae
xor
stc
cs
cmp
sub
sbb
mov
sbb
out
inc
stos
dec
outsb
insb
push
scas
or
add
ja
sub
cs
cwtl
ds
sbb
movsb
sub
pop
sub
cmpsl
leave
ficomps
push
jnp
adc
xchg
cld
inc
out
mov
pop
aas
mov
mov
push
or
scas
pop
in
cmp
mov
add
xchg
dec
rcrb
dec
xor
cltd
fstps
cld
pop
mov
jo,pn
cmp
shlb
test
rolb
test
call
cmp
xchg
xlat
mov
push
lcall
movsl
fcomps
mov
mov
aaa
ret
fwait
scas
nop
fisttps
in
push
pop
arpl
xor
jg
or
mov
jp
push
mov
pusha
fs
bound
fprem1
in
sbb
inc
dec
mov
out
xor
and
or
push
xchg
repnz
lret
arpl
push
xchg
pop
daa
lcall
or
subb
je
mov
push
movsb
mov
xchg
sbb
inc
or
mov
arpl
movsl
stc
pop
orb
mov
cmp
sub
jb
in
imulb
sti
lods
push
adc
and
jnp
sub
test
xor
mov
test
mov
clc
mov
mov
add
mov
jp
mov
or
loope
ljmp
mov
adc
jmp
scas
or
dec
subl
mov
adc
add
mov
ret
movsb
insl
fiaddl
mov
icebp
in
adcb
push
ja
movsl
fldt
inc
cli
fdivrs
xor
jge
jo
cmpb
jecxz
andl
push
test
mov
movsl
sub
mov
movsb
insl
or
dec
jo
cld
loope
jecxz
xlat
fsubrp
out
mov
push
mov
js
dec
imul
negb
stos
outsl
test
insb
int
fildll
pop
fwait
repz
loop
adc
int3
cmp
or
mov
xchg
js
jle
in
cwtl
cmp
sub
mov
dec
push
xchg
push
jp
int3
and
xor
push
and
pop
or
cmpsl
out
inc
adc
outsl
adcl
loop
or
fstpl
cmp
add
jbe
cli
stc
mov
insl
mov
arpl
js
rcl
cmpsl
xor
sbb
sub
jp
mov
testl
pusha
xor
inc
xchg
stos
xchg
pop
lret
and
push
sti
jmp
or
jo
test
mov
push
in
jb
nop
and
icebp
fwait
sub
es
add
das
pop
cwtl
arpl
sbb
ret
dec
push
sub
enter
xchg
outsl
push
fdivr
scas
xlat
stos
inc
cmp
sub
fwait
push
mov
push
repz
fsubl
jns
out
push
push
cld
cmp
mov
add
mov
jb
jne
push
in
loopne
cmp
rorb
das
loopne
adc
jae
push
xchg
insl
test
iret
out
arpl
cli
lods
lock
mov
in
sbb
fldl
pop
fldl
aas
js
mov
push
je
aad
lea
stc
imul
lods
lret
ret
jecxz
je
mov
sub
ret
push
push
fptan
fsubl
xchg
movsl
cld
scas
adc
mov
and
test
es
loopne
es
imul
sbb
sbb
sbb
popf
pop
xchg
sbb
daa
cwtl
leave
sub
pop
adc
ss
adc
or
xor
addb
xorl
pushw
mov
xchg
ljmp
shl
fldcw
std
in
rclb
clc
cmpsl
clc
pop
jns
shlb
push
xchg
mov
push
sbb
jns
jno
mov
scas
push
mov
lahf
push
xchg
loopne
test
mov
xor
ja
add
fnstcw
stos
in
inc
cmpsb
adc
pop
cmp
push
and
fisttpl
xor
call
inc
xchg
add
cmp
les
sub
lock
test
std
sti
ljmp
arpl
push
ficompl
inc
stc
fwait
pop
fwait
mov
aam
sarb
test
aas
adc
or
cmc
adc
iret
push
mov
outsl
inc
fmull
popa
inc
imul
dec
fiaddl
sti
inc
cmp
cmp
ja
sbb
push
push
mov
in
aas
adc
push
or
or
cmp
sbb
outsb
push
push
mov
test
jle
stos
mov
rcrb
call
repz
xchg
pop
imul
and
imul
scas
mov
hlt
push
pop
pop
shlb
mov
ja
xor
scas
cmc
cli
mov
nop
sub
in
inc
out
and
push
jl
ret
jl
pop
repnz
adc
insb
lret
fidivl
fisubs
mov
cld
js
sarb
jnp
insl
aad
sarl
push
pop
or
push
dec
sub
test
inc
int
ds
cltd
cltd
adc
pop
jb
push
inc
je
sub
mov
mov
mov
mov
into
clc
xor
outsl
jbe
and
cmp
mov
pop
xchg
sbb
stos
xchg
jnp
push
push
lret
hlt
jg
sub
inc
add
push
das
mov
and
sub
je
mov
push
add
jmp
lock
mov
mov
pop
mov
test
mov
enter
int
and
cmp
scas
inc
xor
jecxz
jle
dec
gs
sub
fldt
sbb
fcmovb
adc
lock
cltd
test
jo
mov
das
jno
test
subl
sub
push
add
xor
xchg
xlat
pushf
adc
fnstcw
mov
aaa
repnz
or
fs
mov
inc
cmpsl
inc
and
adc
mov
push
pop
mov
xchg
test
xchg
mov
loope
adc
and
loope
lcall
imul
and
jp
adc
addr16
pop
xchg
daa
fnsave
test
repz
xor
mov
add
aad
push
adc
dec
add
mov
push
sbb
xor
lds
imul
repnz
mov
sub
sub
adc
xor
xlat
fs
jg
mov
lea
loopne
dec
outsl
in
rcr
sub
scas
pop
cmpl
add
push
ljmp
pop
lods
ja
adc
sbbl
and
mov
aam
pop
divl
sub
jp
and
xor
lea
mov
and
cmc
mov
cmpsl
jno
daa
xor
jp
mov
subl
push
push
imul
lods
in
aad
mov
pop
hlt
pop
outsb
pop
lods
addr16
jp
add
dec
sbb
in
test
lock
loopne
movsl
push
lock
popa
cmp
pop
jno
push
mov
fsubrp
jl
xlat
lods
clc
cmp
cmpsb
fsubrs
jecxz
stos
xor
or
xchg
dec
jbe
and
rcrb
inc
mov
enter
or
loop
mov
mov
sbb
cs
std
call
sub
test
mov
sub
jnp
icebp
lea
in
sub
and
inc
adc
lret
aam
and
push
and
shrl
xchg
inc
cmp
lods
fwait
xchg
mov
mov
inc
shl
inc
push
xor
dec
ret
fwait
mov
dec
data16
aad
add
cmc
lock
xchg
jns
das
push
ret
inc
xchg
pop
lods
cld
sub
lcall
lock
ret
xor
mov
xchg
aas
imul
jmp
mov
frstor
add
xchg
mov
es
adc
pop
icebp
add
dec
mov
push
jne
sub
xchg
xlat
fidivl
sbb
push
push
mov
dec
fwait
xchg
mov
fdivrs
pusha
jnp
pop
dec
movsl
pop
xor
lcall
icebp
andl
adc
mov
idivb
fildll
cmp
test
lret
ret
out
lahf
sub
fiadds
push
adc
inc
add
pop
pop
and
stos
lds
fmul
push
cmpb
imul
test
xor
mov
dec
test
fnstcw
bound
ret
dec
sar
lock
adc
scas
lcall
inc
mov
movsl
cmp
xor
sub
cwtl
sbb
jmp
repnz
inc
pop
cmp
int3
enter
adc
lea
stos
and
pop
orl
dec
sbbl
insb
test
cltd
and
xor
decb
stos
daa
cmpsb
stos
cmp
mov
dec
dec
mov
sbb
into
mov
inc
cltd
xchg
adc
ret
addr16
push
sbb
iret
lahf
pop
sub
sbb
or
or
ljmp
inc
xor
inc
mov
pop
js
jns
frstor
ret
lds
jge
sahf
out
outsl
adc
aam
test
or
cmp
or
mov
cmp
add
ja
or
ljmp
test
mov
daa
mov
or
insl
js
cmpsb
call
sbb
sbb
jo
sub
adc
cltd
adc
in
out
in
stos
inc
adc
pop
insl
shlb
sbb
jg
pop
adc
leave
xchg
xor
ljmp
mov
fucomip
aad
lahf
jle
push
popw
xchg
adc
jmp
clc
mov
in
mov
test
stos
mov
mov
or
mov
xchg
xchg
incl
pop
and
movsl
add
div
incb
fsubp
adc
jge
test
out
xchg
pop
sbbb
inc
xchg
push
stos
roll
push
sbb
mov
sub
cmp
pop
inc
and
add
aad
mov
and
mov
filds
cltd
stc
fistps
mov
out
pop
adc
scas
jbe
idiv
and
mov
xlat
inc
popf
inc
lcall
out
stc
push
sub
sbb
pop
jb
mov
pop
loop
jo
cld
push
jnp
enter
lods
mov
int3
ja
mov
sbb
std
cmp
dec
or
repnz
or
jl
fnsave
in
pop
test
xchg
mov
outsl
subb
add
cmpsl
clc
and
jle
xchg
jl
lea
fwait
push
adc
lahf
iret
in
mov
pop
cmp
leave
insb
mov
scas
mov
test
mov
ret
mov
std
push
lcall
sbb
dec
jne
inc
add
idiv
icebp
and
push
or
leave
dec
add
or
int
insl
in
and
add
xchg
dec
push
out
mov
inc
out
xor
mov
pop
pushw
adc
mov
ficompl
loope
jmp
fistpll
psubusb
sub
mov
test
call
xor
fs
adc
pop
fmuls
mov
daa
jo
push
js
sbb
int3
dec
loopne
xchg
ds
iret
xchg
mov
jnp
js
sub
mov
dec
pop
loope
xchg
outsl
ljmp
mov
ret
cld
pop
sbb
addr16
xor
dec
into
adc
dec
xor
shll
inc
jecxz
out
mov
enter
adc
lcall
jl
jb
ljmp
sub
add
in
push
scas
iret
repz
mov
mov
ret
ret
int
pop
cmc
pop
lea
inc
pop
xchg
sbb
test
xchg
cwtl
rorb
sub
in
data16
fcmovb
xchg
mov
lahf
sahf
rclb
push
cmp
xchg
cmc
xchg
movsb
pop
mov
push
or
out
push
mov
fiaddl
fnstsw
xchg
pushf
jle
fidivs
xchg
xchg
pop
push
xchg
lret
cmc
or
jp
popf
add
cmp
iret
gs
addr16
popf
and
push
cltd
cmpl
mov
movsb
fucomp
aam
rorb
jmp
es
mov
add
push
adc
adc
jp
add
popa
outsb
aam
lea
xchg
es
out
and
jnp
sarb
cmp
mov
cmp
push
mov
cli
insb
aas
mov
and
popf
xchg
mov
fwait
xor
pop
mov
iret
stc
out
enter
push
inc
cmp
pop
sarb
cmp
sarb
push
xchg
int3
mov
mov
push
or
push
nop
sahf
pop
out
repz
mov
add
rorl
inc
and
movsb
pusha
jne
and
mov
adc
push
in
mov
inc
scas
mov
loop
pusha
xor
mov
out
loope
pusha
mov
sti
hlt
jbe
dec
lea
inc
mov
adc
mov
pop
push
dec
lret
stc
and
enter
in
mov
adc
lds
out
xor
pop
pop
insl
inc
sbb
movsb
ljmp
popa
cmp
jmp
jecxz
cmp
dec
int3
adc
ljmp
add
mov
push
pop
and
dec
cmp
stc
movsb
test
mov
iret
imul
inc
daa
jae
push
mov
movsl
push
shl
jne
in
adc
ljmp
sbb
mov
push
push
mov
les
fsubs
add
in
xchg
and
mov
lods
dec
add
cvtdq2ps
add
fwait
inc
xchg
fdivl
sub
inc
lcall
inc
add
out
xchg
mull
js
or
inc
sar
movsb
add
testl
daa
sub
cmp
fld
xor
adc
and
jmp
rcll
jg
sub
pop
mov
mov
inc
cmc
or
mov
pushf
mov
or
sub
sbb
inc
inc
dec
and
push
push
mov
xchg
sub
aas
faddp
cmp
daa
or
cmp
and
daa
loop
popa
dec
xor
hlt
sbbl
and
dec
mov
iret
rol
cmp
stos
outsb
xchg
fcomp
das
mov
sbb
jg
xorl
mov
jbe
je
test
jo
push
pushf
pop
lret
push
push
add
push
mov
aad
cmp
fs
sbb
cs
or
jecxz
sarl
sbb
sbb
dec
popf
stos
ss
out
aaa
insl
shlb
add
jne
daa
mov
adc
xchg
cmc
dec
xchg
scas
int
rcl
aam
push
repz
sbb
sbb
sub
repnz
dec
test
dec
dec
stos
ds
punpcklwd
xchg
stos
ret
push
or
or
add
cmc
lret
jp
ljmp
stc
stos
pop
sarl
out
jp
jno
jno
cmp
fisttps
stos
pop
sti
pop
push
fs
pusha
sbb
lods
push
fcmovnu
fstpt
daa
gs
imul
inc
dec
loopne
notb
push
adc
jne
fldl
test
outsb
out
popa
in
aad
jge
popa
out
sbb
testb
xchg
jl
data16
inc
ret
in
push
inc
sbb
cld
adc
pop
lods
or
cmp
fwait
dec
es
mov
mov
cmpsl
fwait
mov
push
jle
pusha
test
mov
or
mov
aad
add
idivb
fadds
stc
push
inc
add
aam
push
or
stos
and
sub
scas
adc
mov
mov
mov
leave
jo
cmp
cmp
pop
xorl
out
mov
and
cld
mov
outsl
cwtl
ret
lcall
idiv
enter
xchg
push
das
rcl
pop
push
xor
std
mov
ds
orl
add
nop
jp
repnz
mov
jle
inc
test
les
pop
jg
incl
es
dec
sbb
cwtl
pop
ljmp
push
jmp
movsl
pop
mov
movb
aaa
cmpsl
sub
int
pop
xor
pop
mov
dec
cmpsl
sbb
fs
movsl
rorl
lds
pop
adc
dec
adc
insl
mov
mov
inc
movsb
mov
stos
in
popa
shll
shll
adc
mov
dec
add
std
push
stc
out
jbe
inc
xchg
jl
sbb
fisttpl
sub
call
cs
push
repz
mov
inc
sti
mov
adc
push
sub
lret
mov
xchg
insl
pop
pop
jnp
push
jle
cmp
or
insb
mov
add
in
cli
mov
add
xchg
out
jle
fdivr
shll
sub
jle
push
ficoml
out
rcll
dec
icebp
ret
mov
push
shrb
cmp
pusha
dec
sub
std
mov
add
xor
fmull
add
nop
mov
jp
sub
add
pop
lods
test
push
xor
in
cwtl
in
or
mov
pop
mov
test
inc
and
jno
incl
push
mov
cs
add
aaa
fwait
test
jecxz
mov
hlt
sti
dec
frstor
icebp
aas
sbb
pop
outsb
call
jbe
mov
dec
repz
popa
adc
pop
adc
clc
or
sub
mov
stc
or
push
sbb
daa
pushf
mov
adc
xlat
inc
outsb
cld
dec
jp
adc
lds
dec
aas
ret
pop
pop
cld
sbb
test
fimuls
mov
or
dec
enter
xchg
mov
jnp
or
push
mov
out
sbbl
and
imul
mov
or
push
dec
add
inc
out
sbbl
sub
cmp
js
and
pop
push
adc
inc
sbb
mov
cmc
push
adc
jno
sub
add
imul
gs
test
jns
sbb
or
movsb
pop
dec
aas
cmc
imul
sub
xorl
sub
fs
hlt
jb
mov
mov
mov
dec
mov
shll
ja
mov
dec
xchg
add
xchg
or
sbb
sub
lahf
fadds
mov
cmp
icebp
in
movsb
outsl
inc
subb
mov
mov
fildll
push
orl
sub
mov
mov
aam
sar
adc
testb
das
mov
mov
mov
icebp
jnp
xor
pop
lock
mov
rorl
mov
sub
cmp
xor
inc
push
dec
jno
dec
jne
cs
sbb
mov
push
adc
subl
mov
mov
lret
hlt
lret
aam
mov
sbb
jl
lahf
cmp
push
lret
mov
fwait
sub
outsb
pushl
lcall
jno
mov
mov
pop
xor
shl
jge
repz
test
mov
cld
jo
adc
jbe
test
sti
mov
stos
or
add
cli
aas
leave
push
inc
mov
jecxz
dec
or
xchg
dec
ds
xor
pop
sti
fsub
lret
xchg
jp
mov
cmp
frstor
xchg
mov
cwtl
adc
inc
cmp
sbb
cmp
xor
xchg
nop
push
outsl
popf
jl
mov
nop
in
adc
sub
dec
jno
out
push
pusha
into
pop
cwtl
push
bound
xchg
sub
mov
outsb
fwait
loope
inc
es
mov
out
add
out
clc
mov
ret
push
je
sub
mov
or
mov
fwait
jno
dec
sub
int
jbe
cwtl
jb
loop
mov
or
fildll
push
add
adc
sahf
popa
std
cmpb
and
sar
insb
push
adc
sti
inc
imul
xchg
mov
nop
popa
pop
dec
adc
fstpl
js
xchg
push
xchg
mov
mov
subl
xor
jb
outsb
mov
push
dec
sti
cmp
pop
lcall
jmp
orb
jno
test
nop
sbb
insl
dec
push
incl
push
push
sti
scas
adc
jmp
js
adc
loope
aaa
rorl
shlb
cmp
in
push
std
loopnew
mov
xor
mov
es
jno
test
call
sti
push
dec
lea
sub
ficoml
mov
mov
add
adc
inc
test
dec
or
push
push
bound
fwait
jo
fstpt
cmp
inc
addb
les
adc
cli
adc
mulb
insb
push
jne
fstpl
inc
adc
lock
cmp
pop
dec
lea
sub
cmp
mov
lds
fldenv
adc
daa
sarb
push
mov
push
and
in
sar
xor
push
jns
pop
cltd
cmp
jb
xchg
pop
adc
ss
jne
pop
xchg
pop
jno
add
lods
cltd
xchg
mov
ss
pushf
push
push
inc
pop
sub
out
mov
dec
pop
jne
mov
pop
xchg
add
and
sbb
sub
pop
and
test
std
add
xchg
jle
ficomps
cmp
pop
cltd
sbb
in
shl
ficomps
adc
push
shl
in
lcall
inc
cmpsl
nop
push
test
popf
mov
jecxz
mov
mov
arpl
aas
imul
xor
mov
repz
jno
adc
cmp
or
push
loope
fidivl
and
and
dec
inc
inc
rcll
jl
ja
mov
jecxz
dec
push
js
lahf
jbe
xchg
test
dec
insl
inc
ss
lret
insl
arpl
je
mov
push
jmp
pop
sub
shrb
shlb
and
adc
jmp
cmp
notl
popa
dec
add
das
cs
cwtl
or
mov
movl
sub
pop
pop
mov
push
add
xchg
jecxz
inc
push
xor
ret
xor
sub
jb
cli
sbb
jecxz
xlat
adc
and
cltd
mov
std
out
sub
test
test
repz
ret
cmpsb
in
and
xchg
test
xor
inc
sub
fimull
fmull
data16
rorb
cld
lock
add
popf
push
mov
popf
loope
rcrl
inc
adc
lock
in
in
inc
aam
mov
jp
icebp
test
fldt
mov
sub
fmull
xchg
mov
imul
mov
jno
inc
mov
mov
adc
insl
movsb
jo
cld
sbb
out
addr16
lds
out
sahf
mov
cltd
mov
lods
push
scas
mov
cmpsb
mov
call
or
sbb
cwtl
jbe
mov
ret
mov
jle
push
lods
imul
nop
mov
aam
ret
dec
xlat
cld
and
test
out
minps
lea
hlt
movsb
xor
sbb
pop
mov
sub
inc
inc
push
in
cmc
and
lea
shlb
or
mov
mov
cmp
lret
mov
mov
adc
mov
sub
push
imul
ja
lods
jbe
sbb
xchg
jge
mov
cwtl
aam
dec
cmp
jbe
dec
dec
push
shl
jbe
pop
stos
lods
sbb
or
ret
mov
sub
cmp
sbb
stc
jne
cmp
jmp
cmp
popa
loopne
data16
sub
lock
sub
fldl
dec
stos
shll
das
fadd
pop
in
icebp
outsb
ret
inc
shll
push
jno
rcrb
sti
aas
mov
cmp
jnp
fcomps
mov
lret
jmp
outsb
fs
iret
jg
jmp
test
fisttpl
inc
out
lahf
mov
mov
pushf
sbb
mov
shrb
stos
dec
test
aam
sub
push
gs
sti
cmpsb
bndldx
pop
mov
filds
sbb
jne
push
jno
xchg
dec
mov
insb
daa
push
push
mov
lods
or
jmp
pop
fildll
xchg
movsb
stos
mov
test
add
outsb
out
pushf
daa
clc
fldlg2
jne
or
vmread
outsl
adc
inc
xchg
mov
xor
xor
mov
stc
fistl
in
xchg
adc
jo
mov
push
jecxz
sahf
scas
daa
roll
lea
mov
pop
push
mov
jbe
cmp
jecxz
movsl
nop
push
and
inc
pop
rolb
mov
pop
testb
sub
mov
aad
pop
rcrl
xor
outsb
mov
je
jbe
xchg
loop
data16
test
pop
stc
aad
push
loope
int
ljmp
add
ss
das
inc
fcoml
nop
in
cmp
loopne
xor
push
gs
out
pop
mov
fidivl
sub
inc
fwait
xor
mov
xor
cmp
leave
aad
sbb
push
sub
dec
arpl
cmpb
repnz
jl
outsb
cmp
sbbb
imul
mov
xlat
rorl
xchg
pop
ja
cmpl
inc
inc
iret
sbbl
sarl
dec
or
sub
lods
jnp
push
loopne
mov
xchg
in
lds
add
ja
mov
inc
sahf
add
and
mov
push
sbb
xchg
lahf
xor
mov
in
mov
ds
xchg
daa
daa
inc
and
mov
adcl
cmc
pop
outsb
sbb
push
scas
lret
mov
jge
mov
sarb
ja
inc
je
xchg
jae
pop
sar
stc
mov
rcrb
gs
ljmp
movsl
ljmp
add
sbb
lea
cmp
mov
push
mov
xchg
les
je
pop
scas
shr
sbb
add
and
bound
lahf
scas
cld
clc
push
sub
xchg
push
inc
or
push
ret
hlt
dec
cwtl
sub
xor
mov
jmp
or
cmp
push
cmp
mov
dec
dec
sbb
rorb
push
sub
cltd
adc
xchg
stos
adc
lcall
inc
mov
push
stc
jbe
push
or
inc
into
add
int
in
in
mov
mov
bound
gs
mov
pop
inc
lods
les
mov
ds
in
cmpsl
dec
xchg
xor
gs
jae
sub
test
in
imul
addr16
dec
push
enter
cmp
cmp
sub
cmpsl
push
mov
jo
inc
lods
stos
or
popl
aam
and
mov
arpl
cmp
jmp
pop
iret
call
cmp
push
aam
je
sbb
fdivp
cmp
fwait
mov
xlat
jae
push
into
cmp
das
jb
das
jns
out
jecxz
adc
int
jmp
jp
shll
push
jb
inc
mov
mov
cwtl
jae
lock
add
call
popf
aas
ljmp
mov
push
dec
mov
std
mov
jecxz
push
aam
add
sub
popa
int
add
push
xlat
aas
pop
inc
mov
mov
rcl
fildl
push
xchg
addr16
or
mov
pop
into
dec
sub
xor
xchg
cmp
mov
pop
in
scas
lods
test
inc
cmp
xchg
cmp
mov
fstps
loopne
pusha
mov
stos
call
adc
insb
lock
add
mov
gs
pop
int
lea
movsl
adcb
pop
into
bound
test
test
test
and
inc
mov
inc
ss
and
push
dec
fistps
arpl
mov
orl
cmp
stos
or
cli
adc
adc
stc
lahf
or
inc
pop
sub
inc
and
pushf
sub
dec
das
je
clc
lret
xor
out
cpuid
mov
clc
fcoms
cmp
mulb
jg
dec
xor
and
lods
xor
xlat
stos
jl
fildll
sahf
ret
icebp
lcall
loope
pop
jecxz
add
push
xchg
addr16
test
ret
stos
aaa
fstl
fnstenv
cmpsb
adc
or
jne
cmc
fsubl
ficomps
adc
cmp
xor
cmp
push
sub
fs
jns
mov
icebp
and
inc
sahf
dec
cmpsb
rolb
pop
cld
mov
jl
outsl
inc
pop
in
mov
add
sbb
xchg
das
xor
or
in
fldl
out
xchg
jge
mov
jle
sbb
sub
cmp
stos
pop
aad
adcb
hlt
pop
enter
adc
das
xchg
lods
rcl
xchg
sbbb
adc
jmp
dec
and
imul
mulb
dec
pop
lret
pop
dec
mov
lret
or
xor
or
not
jmp
push
xchg
mov
int
mov
insl
out
push
push
push
adc
imul
sbb
xlat
call
jb
mov
fs
test
ret
testb
divb
ret
dec
mov
add
sub
in
pushf
test
leave
and
pop
sbb
push
and
push
jg
pop
rclb
mov
dec
stos
mov
adc
scas
lret
adc
add
rcl
pop
movsl
and
pop
mov
mov
push
es
mov
dec
in
push
cli
cld
outsb
pop
xchg
rcr
subl
in
das
roll
shlb
mov
call
ds
push
bound
xor
add
push
adc
pop
fs
inc
fucomi
jo
jo
popf
cmp
xchg
xor
shlb
cld
cmp
not
int3
lods
jb
mov
dec
add
inc
cmp
sub
cs
pop
mov
pop
repz
mov
jecxz
fldt
mov
pop
cmp
jns
subb
insl
adc
movsl
dec
dec
add
xchg
jb
mov
lock
cltd
and
add
push
adc
adc
cmpsl
push
mov
insl
ss
mov
fsubs
adc
adc
into
aaa
shlb
xchg
ljmp
test
and
xchg
mov
push
aas
cmp
sub
sahf
mov
or
mov
add
xor
bound
incl
es
mov
adc
nop
leave
add
cmpsl
cmp
pop
push
cmpb
mov
sbb
and
hlt
mov
adc
les
inc
daa
pop
jl
mov
mov
flds
into
movsb
mov
add
movb
inc
call
std
adcl
outsb
mov
xor
sbb
rclb
sbbb
cmp
jo
xchg
arpl
popa
jge
cmpsl
pop
lcallw
jecxz
push
jmp
xchg
out
js
xor
test
pop
repnz
mov
int3
insl
jle
ljmp
sub
cmp
test
mov
cmp
sub
dec
add
dec
cmpb
fcmovnbe
mov
loope
sub
xchg
xchg
dec
inc
add
pushf
jns
orl
jmp
cwtl
mov
or
insb
xor
pop
aam
cmp
int
insb
popf
das
in
jo
movsl
mov
fistpll
loope
adc
lret
xchg
inc
inc
jge
push
cmp
cmpb
push
hlt
movsl
sbb
movsl
and
repnz
shlb
in
and
aad
fistpll
or
jbe
rcrb
or
push
shr
push
dec
imul
cmp
out
test
hlt
fdivs
pop
arpl
sub
sbb
subb
inc
les
and
or
incb
and
mov
lods
mul
fdivl
arpl
fcoml
pop
xchg
push
inc
sbb
pop
js
cmp
nop
jne
notb
pushf
mov
and
mov
mov
fucom
cli
idivb
mov
dec
xor
adcl
push
sarl
in
push
scas
mov
jbe
mov
dec
mov
cmp
sbb
outsb
dec
cmp
inc
and
sti
cmp
lea
nop
repnz
loopne
mov
scas
addr16
mov
ds
jne
ljmp
push
jg
sub
adc
adc
lret
fists
mov
gs
inc
and
mov
shrl
inc
popa
addr16
sbb
loopne
push
out
mov
cmc
mov
shrb
int
clc
xor
pop
add
sbb
loope
sub
orl
in
or
mov
mov
in
xlat
dec
dec
mov
or
sbbl
mov
and
push
jbe
pop
sbb
xor
jecxz
lret
sbb
inc
pop
and
fistl
xor
xchg
dec
pop
adc
sarl
lock
hlt
or
mov
cltd
and
mov
in
fnstenv
into
in
imul
lock
dec
int
lcall
mov
push
inc
les
gs
ss
mov
mov
lods
ss
aad
or
add
mov
mov
adc
cltd
ret
xor
jnp
mov
es
shlb
xchg
cmp
lea
pop
and
inc
movsb
insb
or
lods
pop
xchg
leave
ud2
aas
arpl
inc
lods
xchg
pushl
inc
push
fwait
push
push
pop
sahf
stos
shl
push
cmc
mov
std
nop
lds
loop
cwtl
cmc
int3
pop
mov
sub
aaa
jbe
test
je
dec
mov
call
addb
loope,pn
mov
and
fcomi
iret
adc
add
movsl
xlat
push
sbb
mov
jecxz
pop
mov
mov
inc
movsb
sub
repnz
incl
push
imul
ja
pop
push
js
insl
dec
xor
loope
bound
push
inc
mov
mov
ljmp
cmpsl
orb
stos
incb
lds
xor
dec
mov
sub
cltd
fmul
aam
push
pop
adc
or
es
insb
cmp
mov
and
or
pop
dec
scas
sub
mov
rorb
loope
push
and
mov
mov
movsb
mov
jge
add
dec
push
loop
popf
sub
lahf
cmc
push
jo
mov
xor
hlt
jno
xchg
sub
inc
jno
lahf
mov
shrl
decl
aam
cmp
cmp
add
inc
stc
orb
dec
or
adc
xor
sbb
outsb
je
and
adc
mov
data16
mov
andb
xlat
rclb
mov
mov
sarl
push
js
mov
pop
dec
cmpl
pop
add
cmp
jo
mov
jo
ljmp
loope
pop
adc
jp
or
dec
mov
sub
sti
push
mov
pop
sbb
sahf
xchg
lret
and
dec
sahf
jbe
xlat
adc
mov
sbb
lock
push
pop
pop
fldl
mov
pop
stos
or
mov
inc
cmp
out
cmp
cmp
roll
fimull
lods
add
movsb
xor
je
push
inc
std
and
mov
mov
sbb
sub
insl
test
jns
mov
cmp
js
inc
sar
mov
arpl
xchg
lods
push
test
sub
adc
jne
dec
mov
movsb
adc
shr
incl
sub
cld
sbb
jp
stc
jb
lods
push
inc
fiaddl
frstor
ds
push
jb
lahf
out
mov
pop
outsl
or
addr16
in
enter
mov
mov
or
xor
xor
inc
cld
dec
mov
add
and
ds
or
insb
jl
push
sarl
lret
fidivrs
cmp
cmc
ss
xor
and
adc
xchg
pop
push
shlb
bound
rorb
cmp
xchg
mov
mov
icebp
or
and
dec
test
popa
test
xchg
ret
cwtl
test
stos
scas
fucomip
lods
dec
xchg
pop
inc
push
dec
orl
ret
push
jl
imul
sahf
mov
aam
pop
jns
mov
push
and
mov
inc
dec
jg
sti
add
push
jnp
std
out
add
push
pusha
inc
cltd
mov
and
scas
data16
jmp
add
push
or
leave
mov
subb
insl
arpl
addr16
enter
cs
jmp
jle
xchg
pop
int
pop
into
andb
rorl
ja
or
dec
popa
cmpsb
mov
clc
push
in
push
jns
andl
das
mov
jl
dec
xchg
inc
sbb
lods
out
nop
jo
test
pop
and
movsb
stos
xchg
pushf
adc
push
iret
in
les
mov
mov
mov
std
push
ds
das
inc
addl
out
pop
int3
mov
xor
aad
xchg
xor
pop
and
mov
mov
loope
sbb
mov
int
sarb
adcb
cmp
call
cli
incb
mov
mov
lock
push
jno
add
rolb
dec
cmp
or
add
add
inc
jnp
loope
lock
xor
and
adc
pop
shll
jmp
or
and
adc
call
add
fs
add
pusha
add
fldl2e
adc
jbe
xor
cmc
enter
inc
jl
call
xor
imul
popa
cmp
jb
or
and
xchg
rolb
sahf
lret
out
div
mov
jmp
outsl
int3
aad
lock
stos
rorb
adc
dec
jno
mov
jg
pop
push
loope
pop
sbb
xchg
sub
mov
ljmp
or
stos
aas
sahf
dec
aaa
loope
mov
push
dec
push
gs
pop
aas
loope
adc
adc
scas
aam
and
lret
sub
mov
jecxz
stos
rolb
cmpsb
xchg
test
repz
fisubs
inc
pop
dec
xor
push
jg
mov
cmp
sub
fsts
roll
ss
pop
mov
jecxz
test
pop
lea
out
ljmp
fxch
push
and
pop
or
cmp
mov
sbb
push
sbb
das
lods
push
mov
adc
aad
sarl
pushf
sub
daa
ficompl
sub
and
jmp
out
push
decl
bnd
jno
push
lret
test
pop
lea
push
dec
lock
scas
mov
jne
ret
out
adc
lds
out
ds
xchg
stos
stos
and
xlat
cmp
fwait
pop
inc
mov
dec
push
mov
or
lahf
jge
loop
mov
insl
pop
jg
das
dec
out
mov
call
mov
leave
mov
ret
aad
or
ljmp
mov
test
sti
ss
push
sbb
je
stos
sbb
or
fwait
cmp
out
mov
pop
cmp
jb
mov
mov
lods
inc
add
mov
or
mov
fisubrs
xor
xchg
inc
gs
adc
in
icebp
xchg
cli
test
push
sbb
sbb
jo
fcoml
cmc
std
add
mov
sbb
and
icebp
pop
das
cmpsb
out
xlat
js
fs
sbb
enter
and
arpl
outsl
push
popf
in
bswap
int
lahf
out
sbbb
inc
sbb
fimuls
push
cmp
es
lret
loop
cli
shlb
dec
push
add
mov
daa
fbld
xchg
adc
sub
fmull
addr16
xor
mov
xlat
ss
shrb
pop
mov
lret
mov
ss
call
cmp
jnp
jb
addb
add
inc
out
adc
dec
sti
outsl
or
dec
xor
xor
sub
mov
outsl
imul
cmp
jecxz
mov
shll
dec
decb
out
dec
cwtl
mov
push
jmp
sbb
adc
aas
push
sar
sarl
movsl
lret
lahf
cmpsb
sub
pop
xor
imul
sub
das
lds
rorb
dec
jge
xchg
adcl
cmp
and
xchg
fs
sbb
fstpt
sub
inc
push
arpl
incb
dec
dec
arpl
cmp
ljmp
add
cli
mov
cmpsb
sahf
inc
push
jp
inc
mov
push
dec
adc
xor
dec
das
add
rorl
cmpsl
cmp
cmc
mov
ja
jne
std
xchg
mov
and
xor
xor
mov
sub
xchg
fimull
andb
xchg
into
shll
jl
aam
clc
sub
xor
pusha
imul
repz
inc
shrb
in
jmp
jecxz
outsb
xor
andb
add
out
pop
test
jge
imul
xchg
into
push
fmuls
xor
add
jb
sbb
movsl
bound
dec
fnstenv
mov
mov
popf
mov
xor
cmp
stos
arpl
push
bound
lcall
loopne
adc
imul
or
add
mov
fnstenv
cltd
loopne
sub
or
lods
inc
cmp
xchg
push
inc
popa
push
cmp
push
mov
mov
aad
pop
xor
loop
je
mov
mov
inc
leave
sahf
pop
sub
adc
or
out
pushw
cli
clc
xchg
jo
add
lods
loopne
xor
repnz
and
cli
movl
mov
stc
pop
scas
mov
mov
das
sti
pop
pop
loope
in
pop
lret
lods
repz
and
shl
pop
mov
pop
fwait
in
xchg
iret
push
dec
pop
pop
out
adc
lods
pop
xchg
dec
stos
test
mov
or
in
pop
jecxz
sub
add
mov
adc
lahf
and
pop
iret
mov
dec
addl
add
sub
ret
ret
int
dec
mov
test
sub
xor
test
pop
mov
lahf
jae
pop
cmpsl
cmp
insb
jle
and
aas
dec
int
rclb
out
pop
dec
pop
fcomps
or
xchg
es
dec
sub
dec
dec
push
jbe
jne
pop
sbb
fistpll
xor
cmpsb
push
in
test
shll
arpl
sarl
inc
jae
mov
js
add
push
icebp
xchg
xchg
arpl
xor
mov
imulb
ds
lcall
add
ffree
xchg
mov
insb
mov
push
mov
mov
mov
dec
sbb
repnz
test
in
fldenv
mov
xor
loope
mov
sub
bound
shlb
jmp
mov
arpl
and
aad
pop
jl
cwtl
cmpsl
cmp
int3
lcall
repz
sub
repnz
sub
cmp
dec
add
pop
jns
lahf
loop
mov
pop
nop
xor
push
and
repz
sbb
cmp
call
jmp
and
dec
add
mov
push
stos
shrb
bound
push
rorl
pop
test
sarb
pop
jne
dec
pop
sub
mov
push
pushf
negb
adc
dec
mov
adc
mov
add
inc
pop
repz
lock
sbb
jb
mov
dec
xor
imull
dec
xor
cmpsb
repz
jg
mov
pop
pop
repz
lock
divl
nop
jb
lret
lret
out
push
aad
cmp
jmp
and
subb
cmp
outsl
lret
iret
inc
rcr
mov
inc
add
and
sub
jge
lods
jne
jns
sbb
adc
sbb
into
cmp
add
cmp
cld
les
or
add
cmp
sbb
out
das
lret
inc
mov
shlb
push
stos
cmp
call
sbb
xchg
rclb
stos
shrb
popa
roll
xchg
sbb
sbb
jg
mov
add
add
in
pop
ret
ja
cmp
lods
ljmp
jl
mov
jge
in
cmpsl
enter
insb
addl
dec
outsb
add
or
xchg
into
mov
aam
imul
and
stos
lahf
cltd
xor
pop
and
add
mov
sub
icebp
out
fsubrl
jmp
dec
add
jl
inc
out
fbstp
pop
fiadds
jb
push
xchg
dec
inc
jg
inc
stc
jne
and
or
lods
xor
scas
cmc
mov
insl
leave
ljmp
xor
sub
into
mov
sub
inc
jae
sub
fsubrs
arpl
cmp
add
and
mov
dec
les
mov
push
or
sub
push
int
out
dec
sbb
inc
jbe
cmp
add
add
jmp
inc
dec
rep
jecxz
shll
out
enter
call
leave
mov
and
fcomp
cld
in
push
xor
pop
int3
jp
iret
jmp
pop
pshufw
in
mov
jl
test
fcompl
cmp
mov
jo
addr16
ficomps
js
inc
daa
imul
add
dec
shll
rorl
jns
push
dec
je
daa
mov
push
enter
mov
addr16
or
mov
jmp
movsb
fisubrs
jae
ja
or
cli
idivl
pop
mov
jl
aam
push
adc
outsl
fnstsw
int3
hlt
push
fwait
lea
lret
cltd
rolb
push
mov
add
jo
pop
mov
les
adc
mov
inc
adc
int3
data16
cmpsl
pop
jge
add
arpl
lea
and
imul
mov
cmp
cmp
push
ds
icebp
jb
clc
fistl
dec
fdivrs
mov
push
dec
test
lahf
xor
fldt
sti
jo
and
aad
xorb
test
int3
push
inc
movsl
pop
and
add
iret
dec
push
xchg
mov
shrb
fnstcw
daa
mov
scas
xor
xchg
ret
mov
and
sbb
mov
test
iret
rcll
aad
cmc
jle
loopne
mov
jecxz
push
jno
scas
and
cmp
xchg
out
xor
pop
je
sti
out
subb
mov
pop
and
ljmp
mov
aam
stos
add
cmp
aas
mov
push
dec
enter
push
scas
sbb
fdiv
sbb
imul
or
pop
lcall
dec
add
sbb
cmp
or
rcl
jnp
int3
mov
shll
and
inc
insb
jg
push
icebp
and
cmp
sub
dec
add
rclb
dec
mov
fnsave
stos
int3
aas
push
sub
sub
jge
dec
push
pusha
jmp
xchg
inc
push
jecxz
movsl
out
jbe
mov
les
repz
imul
and
cltd
jne
xchg
or
push
pop
stos
push
fcmovb
inc
cli
movsb
imul
nop
cs
jae
mov
rol
stos
mov
push
imul
stos
fs
sti
add
xor
test
shll
push
rcll
inc
mov
sbb
pop
jo
and
js
jns
in
add
mov
add
lods
cmp
mov
and
lret
pop
shl
pop
mov
push
cld
mov
daa
andb
push
jbe
xchg
adc
jecxz
mov
cmc
data16
je
leave
js
adc
fnstsw
mov
loope
sub
push
bound
out
rcr
lret
scas
ficompl
jle
in
pop
xchg
cmpsb
cmp
fnstsw
imull
xchg
jge,pt
jecxz
jecxz
sub
jp
cmp
bound
repz
push
lea
and
pop
dec
xchg
ret
fwait
mov
mov
mov
push
xchg
ds
in
clc
push
push
ja
mov
and
jo
bound
mov
ja
pop
mov
add
ret
mov
mov
push
add
xor
push
jo
repnz
inc
lods
jnp
enter
sti
jecxz
cli
adc
stos
fisttpll
jb
jl
fldcw
mov
cli
mov
jbe
and
adc
ret
nop
or
xor
cmp
push
divb
jbe
push
xchg
pop
cmpsb
add
flds
negl
mov
cs
jae
pushf
in
add
mov
jne
scas
xchg
ret
sbb
icebp
ja
sub
pusha
rcl
xlat
xchg
inc
leave
pop
xor
jp
jbe
popf
loope
movsl
popa
xor
lcall
ja
icebp
push
leave
inc
inc
adc
lods
cwtl
mov
mov
adc
test
icebp
frstor
fsubrs
cltd
jp
mov
ds
add
mov
cltd
test
fldenv
ret
xor
int
sbb
pop
clc
push
ljmp
nop
xchg
cmp
jns
lcall
cmovg
fwait
mov
cmpsl
xchg
data16
fisubl
mov
sbb
jb
mov
inc
cmpsl
cld
cmp
aad
push
mov
mov
inc
pop
sub
lret
mov
push
sbb
imulb
out
repz
stos
or
pop
push
pusha
jecxz
mov
inc
jns
test
imul
pop
adc
jmp
out
popa
xor
stos
aam
and
cld
jle
dec
pop
sub
scas
adc
or
xchg
pusha
lret
push
xchg
mov
filds
out
push
ror
repnz
aas
sbb
test
jl
mov
pop
pop
pop
cmp
push
leave
mov
ja
mov
cmpl
sbb
cmpsb
scas
jae,pn
bound
mov
popf
or
test
fiadds
push
ror
sbb
roll
je
mov
cmp
data16
je
popf
jne
jne
pop
sub
pop
pop
fsubs
fidivs
mov
mov
push
dec
jg
sbb
test
stos
xor
adc
xor
cmp
decl
mov
xor
and
pop
int3
xor
xchg
inc
adc
mov
cld
repz
push
mov
mulb
dec
in
mov
imul
movsl
pop
sub
je
inc
add
int
scas
idivb
mov
enter
push
cmp
pop
mov
movsl
aam
test
lock
or
xchg
movsb
xor
leave
add
sub
mov
mov
lods
mov
adc
in
jg
mov
ds
ja
cmpsb
push
mov
mov
or
xchg
mov
mov
fs
cmpsb
sbb
jbe
and
xchg
pop
cmpsb
adc
push
sbb
mull
icebp
icebp
push
bound
cmp
jnp
inc
mov
aas
adc
pop
xor
push
add
adcb
sbb
cmpsl
popf
or
pushf
xchg
add
pusha
xor
mov
dec
cld
pusha
xor
movsb
je
push
jg
in
cmp
data16
mov
and
cs
jnp
mov
adc
push
cmp
xchg
daa
inc
sub
imul
outsb
add
jnp
cvtpi2ps
imull
lcall
stos
and
xorl
xchg
inc
int3
add
loope
mov
inc
pushf
repz
xchg
add
sub
in
mov
dec
leave
in
jo
popa
hlt
xor
aas
or
xlat
sub
add
cmpsb
outsb
xor
xchg
js
mov
clc
jae
sub
inc
xchg
in
movsb
jmp
inc
sub
ret
leave
push
or
inc
xorl
ret
fs
cmp
clc
ret
in
in
adc
and
fstl
dec
mov
mov
xor
add
push
and
push
testl
jp
js
movsb
lcall
or
dec
stos
jb
call
mov
jnp
movsb
into
jmp
mov
pop
jecxz
push
imul
adc
cmp
cmpsb
in
xchg
sti
mov
lea
out
or
cmpsb
add
cmp
insb
pop
mov
mov
out
inc
pop
mov
jmp
out
push
fmuls
inc
pop
sbb
ja
test
xor
cmp
mov
jno
xor
ficompl
add
adc
js
sbb
arpl
in
and
lret
std
icebp
sti
stos
jb
xor
xchg
js
adc
out
and
adc
dec
movsl
das
sub
lret
pusha
jmp
stos
cmp
cmp
inc
ret
lea
in
ss
push
sti
stos
jne
repz
jge
addr16
sahf
repnz
and
aam
ffree
fmul
cltd
xor
xchg
and
cli
scas
fwait
dec
cmpxchg
pop
add
jne
jne
pop
lods
pop
add
adcb
push
int
cld
nop
lods
jmp
or
inc
mov
in
add
jmp
mov
lcall
pop
mov
mov
sub
xchg
mov
ret
pop
fsqrt
cmp
outsl
or
push
jae
roll
jae
pop
fs
dec
sub
push
add
lods
out
push
mov
syscall
orb
jmp
jge
clc
sahf
insl
sub
lods
mov
in
popf
clc
hlt
roll
pop
jge
icebp
mov
or
pushf
inc
mov
and
cwtl
and
adc
je
repnz
add
test
stc
rcll
push
jle
mov
add
mov
sbb
mov
push
loop
and
sub
mov
leave
pop
sbb
ret
mov
xchg
jmp
into
cmpsl
lods
ja
push
adc
jle
sub
fs
mov
out
idivb
dec
mov
aaa
mov
sbb
push
insb
jne
add
fwait
sub
fimuls
sarb
stos
xor
push
jp
and
dec
inc
xlat
sbb
xchg
notrack
adc
xlat
and
pop
popf
push
fcmovbe
adc
cli
inc
xor
mov
das
jle
xchg
sbb
cmp
mov
shr
xchg
pop
cmp
mov
mov
andb
push
fisttpll
cmp
pop
adc
lods
out
push
bts
fwait
xorb
fistpll
loopne
mov
aaa
les
xchg
sub
stc
and
in
dec
cmp
ja
rcrl
push
clc
lcall
xlat
sarl
dec
popf
lret
testb
or
popf
push
sbb
mov
push
fstps
pop
push
cmc
sub
pushf
adcb
iret
mov
test
sub
xor
or
and
pop
lret
jne
fwait
pop
dec
or
es
push
push
xchg
lods
outsb
xchg
adc
add
lods
sub
mov
mov
cmp
cmp
stc
mov
nop
clc
es
insl
add
mov
fucomi
insb
lods
shl
test
mov
pop
push
in
dec
xor
mov
pop
sub
repnz
out
lahf
mov
sarl
mov
enter
loope
dec
adc
adc
lcall
dec
mov
pop
outsb
cmp
rclb
push
xlat
fcmovne
adc
cmpsb
cltd
lock
sub
scas
inc
dec
mov
mov
push
cmpsb
dec
pop
mov
popa
and
sbb
mov
insl
xor
jns
insl
pushf
lods
lcall
sbb
arpl
mov
cmp
std
std
xchg
in
dec
xchg
enter
test
cmp
push
jno
rol
outsl
push
sub
ljmp
xchg
xor
pop
mov
sbb
jne
test
fs
push
and
jbe
or
std
sahf
arpl
daa
cmp
imul
fistl
ds
pop
testb
pop
lock
pop
test
mov
lock
mov
add
xor
dec
push
sbb
pop
lods
mov
in
stos
push
movsb
inc
mov
adc
lret
mull
bound
mov
ljmp
mov
xor
sub
pushf
mov
imul
call
testb
dec
mov
bound
enter
add
hlt
mov
inc
mov
xor
lock
xor
xchg
loop
cli
fdivrs
aad
pop
jae
cmc
jb
lock
repz
test
loope
lret
in
dec
push
imul
repnz
mul
in
mov
ljmp
jle
lds
sbb
adc
sub
mov
popa
push
int
jmp
lret
in
scas
or
inc
or
lret
std
lea
test
mov
iret
jg
xor
mov
icebp
call
jae
mov
mov
int
rcrl
out
ss
sbb
xchg
cmp
adc
or
jo
jno
clc
inc
imul
and
pop
and
out
call
cld
daa
inc
test
popa
and
fidivrl
jbe
mov
in
sarb
and
aaa
xchg
push
lods
in
out
dec
stos
jns
cmp
dec
dec
das
jno
imul
mov
add
mov
fwait
mov
loope
and
inc
outsb
mov
lret
addr16
cmpsl
inc
scas
push
outsb
in
cltd
mov
cmp
lock
out
adc
mov
cmp
xor
dec
pop
jne
pop
in
mov
sub
jnp
mov
lcall
cmpsb
cmpl
ja
pop
into
adc
negl
lret
mov
imul
das
fsubs
js
loop
mov
icebp
out
cmp
xor
and
pop
xchg
daa
mov
inc
lods
xchg
push
inc
fs
mov
push
cmp
inc
out
dec
jb
sbbl
cs
xchg
pop
and
and
mov
stos
dec
cwtl
mov
aam
jp
jb
xchg
mov
paddusw
xor
aaa
adc
add
adc
jo
inc
inc
and
xchg
dec
adc
fbstp
rep
rcrb
lds
ror
fsubs
xor
cmp
push
fistl
out
lret
imull
shlb
xor
xchg
sub
mov
mov
jmp
stos
lods
xchg
shlb
push
insb
movsl
pop
test
cmpsl
adc
xchg
insb
adc
sbb
jb
pop
dec
rcr
mov
imul
je
lods
fwait
int
fidivl
in
loopne
stos
scas
xor
std
add
xchg
mov
jmp
outsb
push
mov
aam
movsl
adc
push
mov
shlb
jg
popa
lods
push
imulb
cltd
mov
shr
dec
imul
push
call
sub
mov
pop
xor
inc
and
test
sub
int
mov
xlat
int
cs
int
cs
clc
add
sbb
xor
roll
cwtl
add
mov
mov
push
or
call
cmpsb
cld
xchg
jnp
xor
jno
mov
xchg
adc
dec
out
cmp
lods
jb
pop
lret
or
or
push
das
loop
lea
jnp
sub
sbb
hlt
call
xchg
adc
dec
int
jnp
out
dec
add
call
add
adc
mov
pop
sub
das
mov
test
scas
popf
dec
and
stos
popf
das
and
or
or
adc
mov
insl
repz
jne
xor
ret
adc
sarl
lods
and
daa
xchg
mov
sub
dec
mov
adc
mov
pop
sbb
pop
outsb
orl
leave
in
mov
xor
or
push
xor
repz
out
popl
cs
dec
stos
hlt
adc
sti
js
jbe
lea
movsl
pop
je
jne
push
inc
or
xchg
test
popa
loope
ja
pop
pop
dec
sbb
subl
mov
pusha
xchg
push
inc
imul
push
push
das
mov
fs
cmp
push
out
std
movsb
rol
out
test
lahf
leave
fcomps
in
cli
inc
shlb
pop
lods
aaa
scas
or
jg
push
and
jne
and
insb
pop
jns
cmpb
and
mov
call
gs
in
fistps
sbb
negl
je
dec
mov
cwtl
fs
inc
lahf
add
movsb
or
shll
mov
fsub
or
sti
mov
adc
or
negb
inc
cmp
dec
ds
inc
mov
or
or
pop
loope
mov
test
pop
push
int3
out
mov
cltd
fsubp
test
lret
sub
loope
clc
mov
sub
push
adc
sbb
inc
mov
shl
rorb
mov
pop
in
outsl
fsubrp
mov
xor
imulb
cmp
cmp
xchg
push
test
loopne
xchg
inc
stos
xchg
pop
in
dec
and
jo
pop
enter
pop
cmpb
notb
or
sub
mov
imul
cmp
aam
mov
lcall
add
xchg
addl
mov
ja
mov
push
cld
das
out
sub
sub
adc
mov
xchg
mov
add
jnp
scas
jae
and
sbb
sbbl
imul
shrl
lock
jbe
movsl
adc
pushl
out
loop
into
test
cmp
jl
hlt
jbe
and
pushf
cmp
jno
adc
repnz
push
sbbl
xchg
xchg
lods
movsl
and
movsb
cmpsb
push
inc
adc
sub
lcall
sahf
iret
popf
fadds
add
mov
sahf
mov
jp
jb
loopne
jne
mov
imul
pop
lods
nop
and
xor
imul
mov
jmp
gs
push
jge
das
push
jp
shrl
mov
mov
mov
jno
dec
jae
push
scas
xchg
pushf
fwait
sub
sbb
stc
aaa
sbb
cmp
cmc
inc
inc
aaa
test
lods
inc
inc
xchg
sub
xor
xor
mov
jnp
and
cmpsb
jp
iret
pop
bswap
jnp
pop
sarl
add
pop
and
nop
popa
outsb
jae
popa
mov
faddl
shlb
pop
and
xor
pop
cmp
loope
mov
jge
mov
das
inc
es
flds
js
loopne
pop
mov
inc
popf
mov
pop
adc
and
xchg
sar
mov
js,pt
pop
scas
and
movsl
push
mov
sub
or
adc
aad
testl
pop
cwtl
pop
std
repz
outsl
mov
fistps
or
sbb
data16
mov
sub
cmp
popa
loopne
sub
mov
ljmp
push
jecxz
mov
nop
add
es
insl
mov
lods
aas
int
into
xor
mov
bnd
mov
movsb
test
push
adcb
pop
ds
jae
sbbl
dec
rcrb
outsb
les
out
icebp
inc
add
xor
movsb
pop
jne
pop
and
mov
sub
pop
mov
lock
mov
mov
push
xchg
mov
xchg
sub
dec
and
add
jae
sbb
add
imul
adc
pop
inc
or
jge
xor
fcmovnbe
scas
mov
mov
insb
icebp
loopne
or
rcll
mov
notb
jae
cmp
out
add
mov
inc
test
pop
fdivrp
ss
sbb
xor
mov
sbb
mov
mov
cmpsb
das
mov
int3
bound
mov
sbb
icebp
shl
out
mov
and
sbb
mov
orl
pop
jbe
js
cs
push
std
mov
lea
add
addb
outsb
mov
cmp
xchg
ret
cmp
arpl
les
adcl
lock
lock
pop
sbb
add
and
and
lock
outsb
jno
sar
repnz
add
clc
pop
pop
rorl
add
lds
jge
cmpsl
cmovs
mov
in
ljmp
lret
ss
aad
nop
or
imul
stos
sbb
xchg
cmp
xchg
push
push
cmpsb
fstl
xor
lds
movsl
stos
sub
fsubrp
fldt
lcall
je
gs
or
xchg
je
into
mov
mov
pop
fcoms
or
xor
cmp
addr16
add
sub
sub
dec
mov
add
jge
ret
hlt
inc
movsb
imul
leave
nop
push
mov
sub
pop
repnz
loope
fbld
xchg
mov
add
subb
and
ret
insb
paddsw
mov
rorb
push
jge
or
push
xlat
dec
push
xor
adc
dec
aaa
das
xchg
pop
ret
enter
jbe
add
jmp
jge
jecxz
pop
jp
adc
stos
or
xchg
ret
sbbb
loopne
sbb
or
mov
popf
adc
sbb
xchg
xor
add
inc
repz
es
outsl
das
dec
xchg
cmpsl
fwait
jne
pushf
or
push
mov
loope
sub
or
and
or
addr16
jne
add
add
fidivl
scas
in
les
xlat
dec
pop
in
fucomip
push
cltd
ret
pop
xor
add
test
mov
frstor
fnstenv
dec
xor
lcall
pushf
loopne
cmova
mov
adc
cltd
adc
push
lahf
lods
push
int
dec
add
adc
inc
cmpsb
and
sahf
aaa
push
jbe
repnz
imul
es
clc
inc
orl
in
pop
mov
fdivs
scas
push
add
pusha
mov
mov
xchg
clc
push
jbe
xchg
jne
mov
movsb
outsb
pop
or
inc
mov
adc
scas
sar
pop
out
pushf
xchg
inc
dec
xor
mov
imul
lahf
shr
jnp
out
in
outsl
pop
shrb
rcrl
sub
lea
inc
fimull
sbb
push
or
dec
mov
pop
mov
add
call
clc
mov
pop
adc
mov
mov
dec
popf
sub
mov
add
mov
ret
sub
inc
test
adc
sub
xchg
xchg
jmp
into
fs
das
in
adcl
mov
pusha
pop
out
test
daa
sbb
insb
inc
or
inc
pop
mov
fisttpll
aam
sti
add
or
lret
scas
ret
enter
repnz
xchg
lret
loopne
xor
call
cld
mov
jns
adc
fimull
pop
add
outsl
jo
roll
push
and
in
and
xchg
dec
jo
je
inc
inc
jle
rcr
dec
sbb
xor
into
xchg
or
mov
popf
int3
adc
mov
scas
imul
or
cltd
jmp
mov
test
fstpt
mov
dec
in
or
repnz
push
ret
mov
jecxz
roll
shrb
pop
nop
pop
aaa
test
dec
lahf
mov
cwtl
fldenv
dec
movsb
mov
ss
mov
or
dec
dec
nop
xchg
mov
xlat
cld
das
out
nop
sbb
inc
pop
mov
repz
les
stos
insl
adc
repz
pop
lods
fmuls
sub
gs
divl
push
lret
push
int3
into
jp
int3
sbb
lock
icebp
push
fistl
ja
cmc
adc
add
pusha
cmp
or
or
aaa
and
dec
dec
jb
ss
aas
inc
loope
fisttpll
pop
in
pop
lock
jmp
mov
xchg
popa
mov
sbb
jb
xor
ror
inc
cmpsb
gs
icebp
xchg
cmp
in
arpl
mov
cmp
loopne
inc
pop
test
adc
pop
and
push
jnp
outsb
ret
adc
int3
push
repz
out
mov
sbb
cwtl
test
and
sub
and
rolb
add
dec
mov
adc
mov
dec
mov
loopne
cmpb
hlt
mov
inc
icebp
sbbl
dec
aad
mov
cmc
rcr
fisubrl
aaa
cmp
cmp
mov
rolb
test
test
std
mov
sti
xchg
jp
popa
dec
iret
pop
pop
out
pop
int
or
inc
cmp
cltd
enter
je
cltd
pop
outsl
lret
push
lcall
sub
mov
mov
cmp
jmp
stos
int3
mov
adc
fists
out
sbb
movsb
jne
mov
clc
dec
inc
sbb
aad
adcl
daa
pop
mov
cs
pop
mov
push
int3
add
aaa
mov
cpuid
adc
or
jl
dec
pushf
enter
scas
addr16
or
pop
loope
inc
out
clc
mov
or
mov
xchg
adc
cwtl
xchg
push
jo
add
xchg
sub
jnp
das
push
fdivr
add
fwait
mov
adc
ret
dec
mov
pop
gs
arpl
mov
negb
mov
mov
or
mov
stc
out
into
jmp
inc
adc
push
das
xor
mov
cmpsb
aaa
add
ss
dec
insb
push
xchg
gs
pop
cmp
inc
in
rcll
push
insb
or
cs
ds
test
xchg
dec
adc
sti
jmp
insl
insl
shrb
mov
outsl
jbe
cmp
xor
push
mov
loop
xchg
mov
movl
repz
dec
jno
sub
mov
cmp
addl
rorb
in
jnp
out
das
lret
mov
adc
dec
sbb
movsb
orl
add
dec
mov
sub
xchg
or
mov
imul
test
dec
inc
andl
scas
into
fimuls
dec
jle
pusha
xchg
fwait
leave
cmp
pop
int
out
or
cmp
jne,pt
jg
mov
repz
dec
xchg
sbb
fdivr
sahf
addb
sub
inc
cmp
test
mov
inc
sub
mov
sbbb
mov
push
push
pushf
cmp
jecxz
or
xchg
fidivrl
xchg
mov
andl
mov
jmp
sbb
lds
add
sub
aaa
sahf
lcall
push
cmp
imul
enter
lods
ja
cli
aad
add
mov
daa
outsl
ret
and
call
sbb
cmp
mov
lds
sub
adc
ret
outsl
add
cmp
jge
adc
in
xor
ds
pop
or
cmp
xchg
adc
and
jge
scas
pop
popa
outsl
lret
mov
fwait
dec
cmp
xchg
xor
and
and
shlb
div
sti
add
xor
jno
lret
rcr
loop
push
sarl
jge
inc
jae
movsl
jbe
push
xchg
arpl
push
stc
pop
xor
mov
test
orl
and
sti
dec
lds
cmp
lcall
cmp
xor
movsl
sahf
push
inc
sub
decb
icebp
andl
rclb
in
out
sub
pop
mov
jl
out
cmp
xchg
jo
hlt
lret
dec
dec
repz
adc
outsl
fnstenv
xchg
ja
inc
pop
and
int3
loop
rclb
in
jecxz
test
dec
out
test
cmpsb
sub
nop
leave
sbb
pop
bound
cmp
scas
insb
aaa
push
loopne
sub
jecxz
dec
and
aad
inc
in
cmp
lea
daa
scas
cli
lods
pop
pushf
mov
jbe
scas
add
cmp
pushf
add
int3
push
cli
mov
int3
fildl
sub
inc
pop
cwtl
idivb
test
loop
dec
sbb
lret
jle
sub
les
js
movsl
cmp
sbb
test
push
mov
mov
jne
sub
cmpsl
into
cmpsb
sbb
inc
adc
negl
and
mov
lret
das
inc
inc
in
addr16
adc
gs
adc
mov
imul
ja
ss
adc
pop
mov
push
mov
cmp
dec
dec
xor
lds
xchg
stos
out
and
insb
lcall
cs
xchg
into
xorb
and
or
push
das
aas
mov
inc
mov
xchg
pop
out
testb
add
xchg
stos
cltd
xchg
sub
or
xchg
pop
jnp
adc
cmp
faddl
out
cltd
xor
shrb
int
inc
jl
jb
inc
xchg
inc
js
std
jge
test
sti
mov
ja
xchg
pop
pop
dec
xchg
pop
in
add
pusha
lock
push
jp
jge
clc
jb
push
and
out
mov
mov
nop
adc
mov
in
xor
imul
push
movsl
in
inc
mov
sarb
into
xchg
aas
aad
aam
lcall
push
std
filds
shll
shrb
test
in
cmc
nop
inc
enter
pop
leave
lds
lcall
sarl
add
cmp
lods
fistps
sar
push
fldenv
jmp
pop
push
xchg
insb
loopne
std
dec
mov
cmc
insl
add
jmp
mov
inc
lahf
jg
popa
test
xor
out
push
and
rcrb
repnz
sub
rcl
scas
adc
call
in
xchg
push
cmp
jnp
mov
xchg
and
and
mov
or
test
xor
sbb
push
sbb
inc
and
jae
or
enter
sub
sbb
test
fistl
jnp
mov
pop
cmpsb
mov
mov
jb
mov
das
dec
das
jbe
ret
push
cld
mov
fstps
hlt
push
les
scas
in
cmp
inc
loop
loopne
rcrl
aad
and
aam
inc
dec
ret
hlt
sub
cmc
arpl
push
xor
sbb
out
lret
inc
lahf
cmovb
push
cmc
mov
jo
popa
jl
xor
dec
mov
lahf
sub
and
inc
or
mov
pop
jbe
stc
dec
ret
mov
push
push
fsubr
push
mov
xor
nop
sub
xor
stos
inc
gs
out
mov
mov
sub
fstpt
fs
pusha
ds
aas
mov
xchg
loop
lods
arpl
push
repnz
je
sbb
add
pop
cmc
movsb
dec
jo
cltd
adc
adc
inc
mov
mov
jp
mov
test
inc
cmpsl
leave
jae
scas
ret
sbb
inc
xchg
mov
push
mov
enter
test
jo
lahf
in
lea
fnstcw
out
mov
ljmp
mov
pop
cmp
aaa
fstpl
loop
mov
orl
mov
inc
je
sbb
and
cmpsb
push
imul
rorb
jmp
and
adc
decb
je
aas
xor
adc
xchg
cmp
and
popf
dec
xchg
mov
test
mov
lds
inc
mulb
mov
add
push
sub
dec
cs
scas
andl
icebp
xor
test
jle
jno
mov
cs
jecxz
mov
push
pop
idivb
inc
test
sbb
mov
jle
mov
cmp
pushf
insb
das
shll
testl
jg
sbb
add
ja
push
sarl
mov
inc
jmp
addr16
xor
pop
sub
stos
data16
clc
cltd
stc
xchg
repz
push
fwait
icebp
jb
imul
pop
jnp
and
jbe
fisubrl
movsb
cmpb
mov
popf
scas
inc
imul
xor
dec
dec
cs
cmpsb
cmpsb
das
out
lock
xor
stc
data16
mov
jg
cmp
data16
mov
push
and
dec
cmp
mov
dec
ds
cs
cmp
popf
and
and
jno
lea
jle
mov
dec
pop
xchg
cmpsb
sub
negb
mov
fwait
xchg
stc
xor
fsubr
outsb
mov
push
shlb
popf
pop
add
ljmp
cmp
imul
divl
add
mov
iret
jmp
gs
sahf
cltd
xchg
xor
mov
jns
in
hlt
mov
dec
mov
jb
int3
cmp
adc
and
testl
fcoml
div
mov
int
or
inc
mov
xchg
mov
mov
testl
jmp
xor
mov
andl
fldl
or
or
mov
xchg
mov
xchg
movsb
adc
insl
add
out
or
mov
bound
mov
std
jle
sbb
push
pop
pop
xor
jmp
in
pop
imul
fnsave
pop
lods
mov
push
inc
icebp
adc
sbb
push
pop
jecxz
cmp
jg
push
and
sti
sahf
fnstsw
int
sub
pop
enter
xchg
pop
mov
daa
push
pop
and
jle
add
xor
mov
jmp
pop
fldl
jo
cmpsb
cmp
jno
add
jmp
rolb
push
sbb
aas
in
dec
inc
lods
daa
test
push
mov
ja
push
fstps
mov
das
mov
cmpsl
sbb
mov
shl
inc
rcrb
sbb
test
in
adc
inc
test
and
mov
pushf
or
call
pusha
adc
sbb
fscale
pusha
adc
lret
decl
sub
mov
aam
xor
aas
outsb
popa
mov
cwtl
dec
sbb
ret
ss
loopne
fistpll
pop
sbb
sbb
pcmpgtb
xor
daa
mov
and
xchg
fcmovb
ljmp
rolb
xchg
negl
mov
sahf
imul
mov
cmpl
out
jb
xor
pusha
scas
lret
sti
jecxz
je
push
rcrl
jg
ja
add
mov
mov
loop
jge
fdiv
std
or
outsb
push
sbb
dec
adc
fs
fidivrl
jle
mov
test
call
xlat
mov
and
popf
jae
loope
push
mov
xor
inc
cmc
mov
jp
subb
xchg
adc
pop
scas
cmp
fwait
push
mov
dec
or
mov
test
jecxz
scas
aas
ja
lret
sub
loop
pop
xchg
push
into
repz
jmp
inc
sbb
in
enter
cltd
or
add
mov
in
iret
adc
dec
fsubrp
push
popa
xchg
andb
iret
push
outsl
jne
xor
leave
call
out
cld
bnd
fwait
pop
mov
push
cmp
inc
ss
lea
or
push
xor
jmp
andb
and
jno
add
jne
addr16
andb
xor
push
popa
filds
xor
jno
js
pop
rolb
popa
jg
jl
sub
xchg
dec
dec
push
or
lret
repz
pop
shl
mov
fwait
into
pavgw
frstor
std
outsl
data16
xor
sbb
int
pop
mov
icebp
out
addr16
aas
sub
jmp
xchg
inc
fiadds
pop
pushf
in
cmp
jg
cld
es
sarl
lret
mov
xor
dec
popf
into
out
or
jp
and
xor
mov
cmp
dec
pushf
shl
adc
mov
cmpb
sub
hlt
fs
in
xchg
test
mov
into
or
pusha
push
xchg
movsl
dec
xor
xchg
fisttpll
inc
mov
repnz
jbe
mov
leave
dec
mov
ds
repnz
ret
inc
mov
mov
mov
scas
push
dec
repnz
fmul
mov
outsl
jno
sub
mov
mov
les
filds
ds
adc
cmc
shll
xor
mov
xor
scas
mov
jecxz
jno
and
sbb
shrb
mov
pop
dec
mov
dec
dec
repz
leave
stos
in
xor
aaa
mov
adc
mov
stc
add
and
fsubrl
or
mov
movsb
fwait
xlat
sub
sbb
cmp
cmp
mov
fwait
jmp
mov
pop
and
in
ds
pop
cmp
fs
sub
xlat
ret
mov
inc
fnstenv
pushf
xchg
mov
mov
jno
jne
out
repnz
jb
addl
mov
out
cmp
pop
das
out
movsl
sub
sbb
push
ret
push
ja
or
subl
mov
adc
cli
arpl
sbb
pop
sub
mov
outsb
lret
mov
pop
inc
mov
push
stos
imul
movsb
aad
mov
jns
or
test
pop
push
xchg
subl
inc
mov
inc
shlb
sbb
bound
shrl
cwtl
or
outsb
ss
test
mov
loopne
sub
movsb
inc
test
inc
fndisi(8087
and
dec
jecxz
mov
jecxz
push
inc
rorb
ja
inc
push
pop
pop
mov
jo
retw
enter
sub
repnz
pop
mov
ljmp
ror
add
cltd
inc
popa
and
hlt
rorl
lahf
sub
aad
add
sub
push
xor
cmp
in
push
mov
hlt
lret
push
loope
mov
out
inc
shll
mov
push
cli
dec
adc
jns
dec
push
cmc
repnz
mov
xchg
inc
mov
add
nop
or
ss
in
mov
sbb
jg
push
inc
jb,pt
xchg
test
imul
lea
in
mov
xor
outsl
add
hlt
jns
sub
fs
add
lds
mov
mov
push
push
ss
or
imull
stos
sbb
xchg
fs
stc
dec
jle
cwtl
dec
popf
int
mov
inc
enter
jp
or
push
out
xor
pop
lea
dec
jecxz
sahf
in
loopne
cmpsb
sbb
push
aam
jecxz
testl
inc
pop
sub
xchg
fildl
cmp
xorl
or
jle
mov
fidivs
and
fnstenv
or
jg
cwtl
mov
aas
sub
out
stc
mov
push
xor
push
or
jp
aad
xor
pop
mov
mov
movsl
in
pop
dec
test
mov
pop
rcl
lods
fst
push
cmpsl
or
or
adc
and
push
mov
ficomps
cmp
sub
push
imul
mov
cmp
push
subl
sub
dec
adc
clc
lods
idivl
dec
dec
dec
lret
jmp
and
and
push
imulb
mov
mov
es
mov
xchg
jo
and
lock
sub
lock
or
test
or
add
push
or
sub
aam
push
lods
adc
scas
xorl
push
inc
imul
xor
cmp
mov
cmp
dec
stc
fcmovnbe
out
jne
outsl
cmovnp
sub
int3
sbb
in
sbb
enter
loopne
adc
pushf
in
or
insl
or
stos
or
loopne
mov
out
scas
cli
lods
mov
sub
fwait
dec
mov
test
jns
repnz
popf
call
push
mov
cmp
pop
stc
ljmp
pop
fdiv
out
mov
mov
lock
xor
icebp
push
adc
sub
insl
push
mov
sar
lods
in
cmp
paddusb
or
push
mov
xchg
sbb
and
sbb
sbbb
ret
insb
aam
mov
or
mov
xlat
daa
fcmovu
movsl
lea
add
sbb
dec
call
or
inc
and
flds
adc
hlt
and
add
xchg
xor
push
mov
cli
mov
ret
mov
mov
hlt
and
push
lret
mov
inc
jbe
jmp
xchg
pop
pop
inc
sbb
mov
inc
pop
stc
jp
mov
hlt
xor
lock
jmp
adc
and
not
pushf
fcoms
xor
pop
ja
adc
aaa
xlat
sbb
sub
loope
loope
outsl
mov
cltd
jns
inc
fxch
pop
mov
stos
pop
sub
jmp
ror
and
call
and
insl
rep
out
jae
out
imul
add
mov
fwait
out
icebp
les
cmp
cmpsb
inc
insb
jge
call
lcall
or
loop
je
cltd
mov
ret
jb
ret
adc
lods
cwtl
into
fsubrs
pop
cmc
sub
sub
addb
xchg
cmp
jns
push
mov
stc
outsb
dec
int
fwait
xor
or
jb
push
ljmp
or
xchg
bswap
imul
pop
add
aaa
lret
nop
jae
sub
dec
jb
das
scas
pop
sub
loop
or
fwait
mov
scas
sub
sti
mov
xlat
jl
imul
aas
dec
sub
stc
mov
imul
or
lea
jl
sub
xor
orl
lds
xor
xchg
cmpsb
out
mull
icebp
pop
mov
and
mov
fmul
cmp
adc
sbbl
or
sub
mulb
sarb
ds
pop
out
cmp
shll
ja
sahf
push
xchg
pop
int3
ret
sbb
inc
sbb
scas
dec
loop
mov
push
mov
dec
rcl
into
cmp
movsl
mov
in
in
movsb
mov
sbb
and
lahf
adc
pop
cmp
aaa
in
push
pushf
push
mov
inc
out
jns
push
push
imul
xor
lahf
sbb
in
imul
fsubrs
mov
adc
mov
insb
lcall
sar
repz
jp
jno
lea
cli
xor
out
jb
cmp
aad
sub
shrl
dec
inc
ja
cmc
mov
cmpsl
and
arpl
mov
cmpl
dec
adc
leave
int3
pop
lcall
data16
hlt
and
out
mov
ss
xchg
xor
sbb
mov
pop
fisubrs
fimull
popl
mov
out
pop
cmp
subb
dec
push
test
mov
jns
nop
sbb
insl
call
adc
xchg
xchg
jmp
ret
gs
xchg
mov
jp
mov
pop
movsb
sbb
jge
leave
adc
xor
cwtl
cmp
ja
jmp
mov
fs
adc
stc
pop
xchg
rcll
ds
lret
daa
dec
call
scas
out
enter
sbb
push
fmul
lret
in
jg
sbb
scas
inc
popa
in
pop
ficoml
mov
mov
cmp
lcall
int
add
xchg
insb
mov
or
bound
xchg
xchg
lcall
test
mov
cmp
ret
imul
inc
xlat
dec
outsb
lcall
call
and
fildl
js
nop
lds
outsb
testl
sub
inc
in
adc
cmp
rcrb
andl
or
and
pop
xor
rcl
shr
in
sbb
sbbb
cli
rorl
out
push
push
out
test
jo
mov
je
add
cmpsl
mov
dec
rorl
hlt
sbb
sub
cli
push
das
jl
push
incb
lahf
in
push
clc
out
or
and
or
push
xor
lret
lret
push
cmp
mov
jle
js
aad
inc
fisttpl
jne
pop
xor
loopne
xchg
subb
inc
mov
jne
mov
pop
repnz
cmp
add
in
pop
cmp
mov
xchg
sbb
adc
cmp
add
lcall
call
sbb
popa
push
add
testb
sub
jb
int
push
push
pusha
aas
cmp
xchg
mov
mov
inc
jns
jmp
jg
adcb
mov
sbbl
dec
adc
adc
bound
cs
xchg
mov
mov
lret
sahf
lret
pusha
push
aaa
pop
fidivs
call
out
xor
pop
insb
xchg
std
and
popl
xchg
mov
push
insl
mov
filds
mov
movsb
xor
adc
popf
lods
xchg
pushf
aaa
daa
loopne
inc
movsl
cmpsl
movsl
lret
mov
sub
inc
mov
sub
rcr
inc
or
inc
aas
add
pusha
inc
outsl
or
mov
xor
mov
mulb
sub
xchg
inc
jbe
fnstcw
cmp
lock
int3
adc
push
es
push
rcrl
xor
pushf
cmpsl
flds
mov
lock
pop
pop
jp
jo
jl
test
in
aaa
adc
and
add
push
jnp
mov
lods
fisubrl
push
add
test
dec
adc
mov
in
cmpsl
repz
neg
ret
popa
scas
pop
ficoml
lock
jbe
cwtl
inc
and
ljmp
aam
cli
mov
loopne
je
shrl
cwtl
xchg
mov
loope
jne
xor
add
dec
int3
mov
out
xor
andl
fmuls
test
fcmovb
mov
xchg
test
ror
rorb
or
xchg
mov
push
std
cs
stc
scas
lods
inc
out
xlat
movsl
in
sbb
push
jae
stos
push
loop
dec
xchg
or
test
fldl
inc
test
addr16
mov
rclb
xchg
push
xor
mov
mov
int3
jmp
and
jge
das
pop
fisttpll
repz
stos
out
add
push
in
das
jno
dec
fcoms
jmp
push
jnp
je
repz
pop
dec
cmp
jo
pop
fsubs
pop
sub
lret
jno
testb
pop
push
negl
insb
aam
pop
mov
int
sub
sbb
mov
xchg
inc
fcoms
pop
jno
sub
rolb
jns
clc
insb
jp
negb
pop
mov
and
jbe
enter
movsb
cmc
andb
andb
xchg
xchg
mov
fcomps
adc
xor
sahf
sbbl
lcall
movsb
ja
xor
sub
mov
stos
ss
dec
push
cmp
add
xchg
mov
fsubr
add
add
clc
cltd
mov
or
mov
movsb
std
jl
pop
xor
inc
xor
push
cwtl
repnz
push
sbb
loope
add
cmp
dec
inc
cmp
scas
movl
ljmp
jae
test
dec
punpckhwd
iret
pop
popf
sti
adc
lock
sbb
dec
lea
xor
fbld
lods
add
mov
aam
push
mov
sub
pop
push
and
shrl
dec
xor
nop
add
std
jge
jge
push
inc
add
repnz
dec
mov
mov
sub
inc
and
sti
inc
outsb
dec
mov
cmp
xor
lea
xor
mov
sbb
arpl
call
sbb
sarl
rcr
cmpsl
adc
push
and
inc
in
out
push
and
pop
jne
stos
inc
xchg
push
push
sub
mov
outsb
jne
jo
sbb
out
js
clc
outsb
loopne
insb
cltd
mov
pop
add
fdivrs
testl
mov
jae
arpl
sub
outsl
scas
outsl
pop
scas
push
pop
les
jg
mov
pop
adc
jp
pushf
lods
pop
xor
pop
adc
adc
xor
outsb
es
imul
mov
ljmp
aas
das
add
in
push
dec
xchg
cmpsl
hlt
inc
pop
out
lods
adc
adc
or
jg
mov
sub
mov
mov
mov
leave
lods
repnz
and
add
adc
mov
jmp
subb
mov
or
xchg
sarb
movq
lcall
or
lret
lret
cmpsl
inc
adc
mov
sub
add
repz
sbb
stc
call
jo
jmp
enter
mov
mov
les
push
andb
pop
dec
cwtl
inc
jae
jae
sbb
add
shl
cmpsl
xlat
push
pop
enter
mov
cmpsl
or
jge
sub
sbb
aas
inc
jg
pop
cmpsl
xor
mov
ss
ss
icebp
enter
jle
addr16
in
icebp
js
hlt
cmpsb
push
sti
jns
pop
sub
stos
xchg
clc
inc
fmull
mov
aas
test
enter
mov
xor
sbb
push
adc
and
in
int3
sub
xchg
test
sub
les
inc
and
outsb
inc
inc
push
cmp
push
cwtl
aaa
ret
xchg
insb
sub
or
movsb
jmp
jl
out
loope
loope
popa
movsl
xor
ds
je
stos
jecxz
rcrl
dec
fnsave
cs
push
inc
xchg
mov
icebp
cmc
mov
ss
aad
mov
and
lock
inc
push
jne
mov
cmp
rclb
mov
cli
inc
int3
addr16
adc
gs
test
cltd
pop
arpl
out
mov
in
cmp
aaa
inc
mov
push
adc
lds
ljmp
stc
fstps
xchg
xchg
dec
out
mov
jb
mov
idivb
rorl
or
push
adc
sub
lcall
lahf
pop
sub
cmpsb
divl
dec
fsubrs
insb
cmp
mov
stc
cmp
mov
xchg
mov
xchg
xchg
cwtl
add
jnp
mov
or
mov
pop
sbb
cwtl
je
fimull
adc
sbb
negl
mov
mov
aas
cmp
mov
mov
mov
popf
jle
fisttps
insl
repz
fidivrs
lods
cmc
shll
pop
dec
or
sub
mull
add
push
jl
test
outsl
and
dec
les
or
xchg
inc
sbb
mov
sub
bound
jno
xchg
loopne
xor
sub
push
std
sub
test
fwait
mov
call
lds
jge
out
jb
notb
inc
sbb
xchg
pop
lcall
out
mov
jp
cwtl
mov
jle
lds
jl
in
and
in
cmp
loop
push
dec
xor
outsb
das
rorb
mov
stos
setno
movsl
fwait
pop
js
dec
jmp
push
xchg
jg
subl
leave
xchg
int3
jl
mov
adc
fstl
movsb
nop
aas
test
out
clc
mov
es
mov
icebp
ds
cwtl
pop
cmp
pop
int3
jg
mov
ljmp
mov
inc
adc
rcr
mov
dec
lret
cmp
mov
push
int
adc
jae
push
mov
mov
pop
cmp
mov
loop
iret
insb
out
daa
insl
out
cmpsb
inc
jmp
fwait
test
xchg
cwtl
pop
call
lcall
push
xchg
out
int3
mov
sub
push
sbbl
roll
jge
dec
sahf
aaa
push
inc
popa
or
mov
push
test
shr
pop
mov
jmp
add
dec
xchg
icebp
pop
out
and
and
addr16
cwtl
sbbb
test
int
push
daa
inc
aam
and
mov
cmp
mov
push
cmpsl
test
mov
sub
data16
push
bound
mov
enter
push
loop
mov
iret
jge
fisubs
jo
dec
add
icebp
push
mov
insb
cltd
push
push
pop
sti
jl
lahf
jno
mov
xchg
fidivrs
jb
test
cmp
out
cli
adc
mov
les
jb
jp
dec
test
jecxz
cli
ljmp
maxps
mov
push
arpl
mov
movb
xchg
and
push
sub
lock
das
vmwrite
xor
roll
nop
cltd
or
mov
lods
pop
sbb
cs
or
cmpb
inc
lods
out
mov
incb
nop
hlt
leave
dec
pop
inc
into
sbb
mov
adc
adc
xor
scas
test
gs
jle
test
lret
pop
sub
negb
lcall
xlat
shrl
outsb
sub
mov
addr16
inc
js
neg
insl
inc
mov
fsubrs
mov
push
out
sbb
xchg
mov
aas
ficompl
and
xor
cmp
fcoms
or
sti
xchg
push
xor
loopne
stos
adc
fildl
dec
dec
pop
push
cmpsb
popf
add
pop
fidivs
pop
sub
and
nop
mov
gs
push
xchg
and
lahf
mov
push
ljmp
aas
popf
xchg
movsb
fadds
adc
inc
adc
mov
inc
adc
ljmp
loopne
clc
and
dec
ret
nop
and
lret
inc
aas
push
inc
lds
mov
xor
or
jp
stc
aaa
sub
enter
add
fst
adc
out
fs
push
dec
dec
ret
sbb
ja
leave
mov
adc
xor
mov
stos
movb
pushf
sahf
insl
push
les
sahf
fstpt
test
les
add
into
test
jmp
push
lret
inc
call
iret
push
aam
outsb
adc
call
adc
and
fnstenv
insl
adc
jbe
sti
fsub
fs
bound
out
pop
jmp
mov
test
pop
pusha
test
das
lea
mov
sub
mov
fldcw
sahf
push
test
es
sub
and
movaps
mov
fidivs
dec
scas
loopne
leave
add
cs
int
xor
popf
add
mov
xor
int3
sub
fs
shrb
or
lret
out
dec
cmp
fisttpll
push
shll
push
push
loope
out
xor
mov
mov
inc
sahf
insl
and
dec
xchg
jns
xchg
rolb
in
add
adc
ret
popf
jl
ss
inc
xor
mov
push
sbb
shr
push
mov
xchg
and
xchg
loop
sbb
hlt
push
and
das
adc
mov
sbb
sub
int3
insl
xor
cmp
sub
fldenv
and
cmc
scas
faddl
jmp
mov
dec
iret
ret
sti
add
aas
data16
bound
sub
mov
pop
cmp
inc
mov
jae
sbb
out
repnz
dec
mov
push
mov
inc
or
mov
leave
xchg
ds
nopl
cmc
add
mov
push
loop
inc
xlat
mov
ret
lds
add
fnstenv
mov
sti
and
inc
out
hlt
pop
and
inc
test
rol
bound
mov
and
and
xor
sbb
sbbb
movsl
cmp
rcrl
nop
cmpb
push
fs
dec
ja
dec
cmpsl
out
fidivrl
inc
adc
push
jbe
pop
xor
mov
jecxz
xchg
fcmovne
mov
mov
mov
pop
lret
ss
adc
ja
out
push
testb
dec
and
mov
movsb
mov
loope
cmp
push
lret
or
arpl
jns
cmp
mov
pop
mov
je
mov
popa
or
bound
jno
mov
dec
jge
pop
out
xor
movsb
xlat
adc
mov
xor
or
xchg
mov
stos
call
mov
rcrb
xlat
mov
stos
mov
insl
pushf
jno
inc
push
dec
leave
pop
in
mov
test
cmp
cmp
jb
cwtl
hlt
scas
sub
push
jb
sub
in
cmp
lcall
mov
lret
mov
scas
dec
xor
adc
push
push
pop
faddl
mov
leave
xchg
jle
inc
and
xchg
out
sti
in
cs
mov
imul
shlb
lods
idiv
jp
add
or
scas
stos
jmp
cltd
mov
js
xchg
and
ss
inc
dec
arpl
enter
inc
in
push
sbb
dec
pop
fs
cli
jnp
jle
hlt
sbb
icebp
xchg
movsb
lea
insb
movsb
mov
mov
outsl
test
mov
testl
call
es
adc
mov
inc
lds
rorb
xchg
cli
push
hlt
mov
mov
mov
ret
and
das
cmp
mov
repnz
pusha
xchg
xchg
adc
pop
dec
inc
enter
and
add
repnz
xlat
mov
icebp
pop
jbe
xchg
and
lret
inc
inc
jp
fmull
pusha
pop
hlt
aas
jne
adc
mov
movsb
sti
sahf
cmpsl
add
lret
lret
adc
test
inc
or
cmpsb
mov
lock
clc
scas
cltd
add
or
push
loopne
sub
push
push
jnp
sub
std
popa
lcall
xchg
cmc
mov
xchg
cmp
addb
inc
fldenv
sub
imul
xor
cwtl
jmp
pop
cmpl
xchg
xchg
jecxz
mov
fcomps
cmpsb
sbb
lds
adc
push
jle
pop
jmp
pop
mov
lret
sbb
ds
sbbb
push
push
fs
add
inc
nop
clc
insb
add
fnstcw
aas
outsl
jg
insl
sahf
and
cltd
or
inc
inc
lock
jbe
fnstsw
add
pop
jae
cwtl
nop
pop
lret
imul
mov
aaa
icebp
scas
sub
ror
push
int3
push
incl
xor
and
cmpb
adc
jmp
shlb
push
ljmp
in
gs
jb
xchg
jmp
popa
pop
cmp
icebp
outsb
test
jo
add
das
jo
in
jle
jp
mov
dec
cmp
lret
xor
push
jb
jbe
scas
pop
mov
je
inc
or
ss
inc
rcrb
adc
dec
enter
lret
into
es
sbbb
xor
dec
icebp
sti
cmp
xchg
push
mov
shl
mov
cmp
aas
subb
pushf
mov
ror
test
stos
sbb
mov
xor
jb
dec
enter
int
push
or
cmp
xchg
loopne
lcall
iret
popf
dec
jae
jecxz
std
mov
push
clc
subb
sbb
int3
lcall
repz
jl
xor
mov
ret
cmp
and
mov
rcr
lret
aas
jbe
and
enter
sbb
dec
dec
adc
adc
cltd
mov
loop,pn
mov
fdivrl
jae
ljmp
and
test
loop
cltd
cmc
or
jno
fdivl
in
lea
fidivl
push
sbb
mov
int
bound
dec
jne
dec
dec
xor
fistps
pop
dec
inc
cmp
js
push
mov
mov
or
inc
xchg
ja
lcall
bound
pop
cmp
mov
rcl
xchg
push
fidivl
stc
test
xchg
mov
dec
pop
mov
jno
adc
push
nop
sti
or
push
scas
mov
sub
scas
push
stc
cmpsl
in
insb
cmpsb
jo
push
and
and
push
push
push
hlt
cmc
out
imul
pop
sbb
out
pop
loope
fmulp
in
push
fdivrl
jnp
aam
add
cmp
lahf
mov
fcmove
arpl
push
out
or
inc
pop
sbb
lods
out
mov
shlb
cs
add
into
inc
pop
pop
imulb
test
mov
testl
inc
add
jae
mov
xor
lret
popf
cmp
shr
loope
inc
jl
fcmovnb
pop
test
jge
into
fildll
fmull
push
sub
jnp
mov
sti
jecxz
push
mov
jne
cli
dec
test
icebp
xchg
test
subb
adc
push
jns
out
divb
push
ret
mov
add
adc
mov
aam
xor
sbb
imul
scas
and
punpckhbw
insb
test
dec
jb
pop
out
in
push
jmp
ljmp
cli
fbstp
ss
pop
and
pop
mov
lock
filds
push
dec
mov
ret
mov
out
out
fcmovu
hlt
loopne
push
stc
loopne
popa
jmp
xchg
fucomp
xchg
inc
lods
mov
lahf
pop
push
sbb
mov
dec
test
xor
pop
dec
cli
inc
push
xchg
add
test
int3
pop
jl
inc
je
out
cs
in
imul
sbb
mov
hlt
push
mov
fcompl
scas
mov
dec
sahf
addl
mov
mov
loopne
jp
sub
out
pop
cld
jg
and
mov
loop
xchg
shrb
loop
lahf
js
sub
or
cmp
in
lret
or
jecxz
pop
rolb
lds
xor
or
out
or
out
dec
dec
mov
cmp
xchg
or
daa
pop
inc
xor
aam
mov
dec
jbe
fadd
fnstenv
call
sbb
mov
xor
outsl
cmp
popf
ret
adc
xor
int
subb
jns
icebp
add
fs
imul
or
dec
push
in
sbb
cmp
scas
pop
lods
xor
mov
mov
test
addb
orb
mov
xor
cmpsl
or
jmp
arpl
push
xchg
adc
cmpsb
stos
mov
dec
cmp
std
wrmsr
mov
adc
test
cmp
insb
in
pushf
test
out
arpl
ljmp
dec
leave
ret
or
fldt
dec
xchg
data16
lds
and
mov
push
ss
sbb
dec
or
rolb
mov
aaa
xor
jno
push
fstpl
cmp
and
adc
xor
mov
ja
sub
les
stos
push
aas
and
or
sarb
inc
xchg
mov
or
add
xor
je
or
push
or
mov
adc
cwtl
sub
pop
pusha
mov
jle
fcoms
dec
mov
dec
fnstsw
lock
dec
add
inc
pop
cs
and
mov
ds
jl
push
sti
sub
lcall
scas
adc
cltd
cmpsl
sbb
add
jmp
and
adc
pop
fldcw
shll
cmpsl
rcl
je
pop
aaa
je
inc
xchg
imul
mov
test
loopne
push
aam
icebp
or
dec
xor
jp
mov
mov
imul
jno
scas
mov
mov
inc
outsl
fdivl
insb
mov
rcrb
inc
arpl
test
push
dec
jp
movsb
mov
in
jle
sti
sbb
xchg
jmp
cmp
rcll
les
push
arpl
dec
jge
ret
adc
adc
sub
fistpl
push
in
test
push
jmp
push
cld
inc
and
jge
pop
and
inc
push
add
shl
sbb
xchg
jnp
jmp
inc
or
cltd
push
popf
and
xor
push
and
sbb
ret
push
sub
or
sbb
cwtl
scas
pop
lods
fdivl
out
mov
push
xor
mov
adc
mov
fisubrl
insl
pop
push
aas
rep
filds
inc
stos
add
xor
cmp
outsb
mov
lods
sub
rcrb
inc
xchg
in
push
out
loopne
test
arpl
bound
ljmp
push
jg
pop
mov
loopne
pop
cs
out
adc
test
daa
sub
dec
xchg
in
rdmsr
scas
pop
je
mov
hlt
jo
jl
push
pushf
push
jg
push
pop
ljmp
pop
jge
mov
aam
fists
mov
adc
jg
mov
mov
cltd
inc
push
outsl
leave
xchg
mov
ja
gs
mov
ficoml
iret
jle
orb
call
and
cltd
pop
test
push
sub
mov
idiv
cli
push
cmp
lods
sub
shlb
aas
mov
dec
push
add
in
cld
imul
repnz
loop
out
rcl
jne
data16
scas
aad
outsl
adc
loopne
jb
ja
push
rorl
sbb
cwtl
push
fwait
or
cmc
push
cmpsl
add
in
popl
stc
test
jge
mov
es
mov
mov
xor
dec
or
pop
sub
dec
xchg
daa
aaa
or
shr
aam
mov
sbb
add
scas
loop
jle
pop
push
sarl
iret
shll
bound
lds
popa
clc
jb
aas
inc
in
sbb
mov
pop
and
gs
jge
sub
in
stc
aaa
cmp
cmp
jbe
ljmp
inc
mov
mov
mov
xor
mov
inc
out
cmpl
push
int3
xchg
cmpsb
push
lods
in
xchg
xchg
push
pop
mov
adc
sbb
mov
cmp
mov
dec
rol
lods
arpl
fiaddl
repz
into
push
cmp
ret
movsb
notb
fisttps
add
leave
int3
jns
dec
xchg
mov
dec
sbb
repnz
out
stos
pop
mov
cmp
cmp
lods
dec
mov
pop
test
mov
aam
pusha
dec
in
dec
xlat
adc
cltd
xor
jmp
loopne
sub
add
push
pop
inc
or
adc
xchg
jbe
sub
fadd
test
addr16
enter
jae
jge
fcoml
and
inc
and
rcrl
jb
cmp
jbe
icebp
int3
xchg
std
fs
inc
jg
aam
fwait
and
pop
mov
or
xchg
popf
mov
xlat
add
jl
mov
push
aam
push
sub
jns
lret
nop
enter
cwtl
inc
mov
aas
xchg
mov
mov
inc
pop
dec
adc
jge
insb
in
dec
fiadds
cmp
mov
mov
imul
cmp
repnz
add
push
ljmp
imul
jne
jb
mov
inc
fldcw
mov
mov
test
into
ret
ja
and
mov
arpl
xlat
icebp
push
aad
mov
xchg
int3
push
lock
jo
pop
push
pop
lcall
sub
push
pop
rol
es
sbb
mov
ret
mov
xchg
enter
dec
in
cmpsb
addr16
mov
and
shl
sub
sbb
mov
out
xchg
and
jge
cmp
scas
fadd
mov
pop
imul
sbb
sub
sub
hlt
das
or
or
shlb
test
hlt
sti
push
mov
ficoms
out
mov
jne
pop
sbb
clc
pop
mov
inc
stc
cmc
add
insb
mov
push
pop
ljmp
inc
stos
inc
movsb
push
pop
lods
or
xlat
dec
fisttps
daa
gs
push
and
and
cmpsl
pop
sbb
xchg
pop
jp
test
in
mov
sub
clc
cli
cmp
stc
aas
dec
fldcw
sub
mov
shl
imul
ja
dec
inc
outsb
or
push
sub
imul
xchg
xchg
jae
pop
out
mov
cwtl
sbb
xchg
shll
inc
sahf
fsubl
insl
inc
xor
test
and
test
dec
sbb
pop
addr16
cmpsl
fsubrl
inc
push
cltd
popw
mov
mov
ja
lock
or
repnz
inc
jmp
hlt
std
push
xchg
sbb
in
insl
std
xlat
lret
mov
jecxz
aas
stos
mov
jb
xchg
mov
adc
inc
je
sar
ret
mov
sbb
sub
mov
adc
stos
xchg
cli
testl
push
imul
dec
jae
std
fistpl
cmpb
adc
xor
sahf
into
scas
fidivrs
out
daa
adc
push
push
jae
int3
sti
out
mov
loop
pushf
cmpsb
cwtl
stc
in
sbb
sub
adc
or
xchg
jmp
insb
imull
lahf
pop
inc
enter
stos
jge
xchg
inc
lahf
rcl
hlt
mov
andl
or
push
cld
loope
jno
imul
xrelease
or
or
and
loope
jecxz
push
inc
sub
mov
push
mov
test
nop
and
test
ds
pop
ret
adc
xchg
sub
and
or
xor
dec
sub
xchg
xchg
xchg
xchg
dec
and
or
jecxz
adc
push
mov
cmp
adc
xor
jnp
mov
lds
jbe
fadd
push
fidivrs
push
adc
out
fs
pop
and
jp
nop
jecxz
lea
jle
fs
stc
sub
mov
sbb
ss
add
lods
xor
jg
and
cmc
inc
sbb
add
or
out
adc
lahf
push
test
inc
enter
jb
mov
ja
mov
pop
jecxz
mov
xchg
cmp
addr16
movsl
iret
cmp
scas
arpl
mov
sbb
clc
xlat
cmp
data16
into
cwtl
out
jge
test
lds
sbb
gs
mov
insb
mov
mov
out
popa
imul
and
fsubl
cmp
jae
dec
insb
ja
pop
out
sub
rolb
loopne
push
mov
ss
xchg
and
jb
cmp
adc
clc
std
jns
sarb
aas
or
out
add
fistl
inc
jp
sbb
jne
lods
fs
cwtl
pop
stc
add
test
int
cmc
lea
nop
decb
cmp
fists
ja
sbb
mov
call
add
push
adc
pop
lret
and
inc
fs
xor
adc
imul
stos
jb
lcall
sbb
xor
aam
vpaddd
mov
pop
clc
or
shlb
cmp
pop
jb
das
sti
in
and
test
inc
addr16
repz
xchg
push
lea
ret
lcall
notb
lcall
or
or
mov
sti
jmp
sbb
loop
add
jb
adc
sti
sub
pop
orb
outsb
push
mov
lods
ret
testl
dec
out
test
pop
cmp
and
push
dec
hlt
mov
mov
data16
pop
xor
jle
jl
pop
mov
aad
stos
push
and
outsl
xor
and
nop
sbbb
adc
popa
addb
add
push
mov
push
lea
mov
adc
add
fcmove
int3
or
mov
mov
lahf
in
call
mov
push
cltd
or
les
scas
popf
xchg
lret
scas
sbb
dec
lods
lods
fmul
mov
loope
adc
push
xlat
jmp
push
xchg
xor
fildl
dec
mov
lret
icebp
stos
jge
outsb
xor
pop
adc
adc
mov
jmp
mov
not
xchg
mov
jae
popa
lods
aad
shll
and
cli
jno
repz
imul
sub
sbb
insl
jmp
adc
sub
test
push
rorb
mov
and
inc
or
mov
sub
adc
cmp
xchg
daa
xchg
in
sti
mov
out
fucomi
in
sub
in
insl
sub
imul
mov
mov
inc
int
pop
inc
xchg
popf
clc
out
rclb
scas
aad
push
call
aad
repnz
lock
push
push
xor
jne
imul
cmp
or
xchg
adc
sbbl
or
nop
jno
lea
lahf
push
test
jge
xchg
or
or
lods
cli
mov
push
sub
add
or
cmp
test
js
jle
data16
js
loop
sbb
xor
imul
pop
lods
jae
cmp
jae
xchg
push
adc
mov
outsb
out
inc
fstpl
mov
push
dec
push
push
icebp
push
cld
sahf
int3
sti
daa
movsl
cmp
dec
sbb
mov
mov
or
jle
mov
lea
add
adc
lea
push
shlb
mov
push
incl
and
fists
loopne
cmp
cmpsl
mov
inc
mov
mov
sub
mov
xor
shlb
fcmovnbe
cmp
mov
cmp
xor
jbe
push
movsl
imul
push
xor
sub
push
pusha
xchg
sbb
mov
fsubrs
aad
xor
imul
loop
les
add
sbb
cmp
addr16
dec
pop
jecxz
out
xor
dec
push
je
mov
out
lods
xchg
sub
out
sbb
jb
aad
enter
stos
mov
sbb
popf
jns
push
push
call
shlb
sbb
lock
or
ja
cli
xor
push
dec
fld
fwait
mov
inc
daa
adc
inc
pop
in
lds
popf
jnp
push
pop
adc
push
cmp
push
push
es
call
mov
adc
in
cwtl
or
jno
dec
icebp
mov
pop
fwait
jg
cmp
jge
mov
cld
aas
mov
cmp
loopne
in
iret
sub
sub
pop
jmp
test
inc
jae
inc
movsb
inc
or
cmpsl
xchg
dec
mov
stos
sbb
cmpsb
test
frstor
jmp
popa
dec
sbbb
xor
jle
fsts
das
mov
popa
ja
fiadds
jno
ja
push
aaa
add
dec
shr
test
jno
cmp
sti
add
push
xor
loopne
xchg
xorl
xorb
in
add
out
adc
mov
mov
cmp
je
cwtl
in
xor
ret
jbe
insb
adc
xchg
add
xor
into
aaa
mov
out
push
stos
cmc
mov
sub
lcall
vmread
push
xchg
das
add
push
mov
push
popa
dec
stc
cld
fisubrs
js
inc
adc
sbb
mov
fs
cmp
scas
insl
mov
jmp
rol
and
faddl
fmull
xor
jg
insl
jl
int
in
add
les
xor
xchg
xchg
lods
aam
enter
pop
xchg
aaa
sbb
cmpsb
mov
ljmp
mov
insb
push
mov
mov
pushw
shlb
dec
outsl
icebp
and
shrl
inc
arpl
out
jno
outsb
dec
lods
inc
loop
or
repnz
int3
inc
mov
mov
jns
mov
rcrb
addl
mulb
jmp
int3
ljmp
mov
jg
add
ja
xchg
test
push
inc
mov
xlat
mov
sbb
arpl
iret
insl
call
xchg
mov
mov
repnz
scas
jne
mov
scas
and
aad
sub
cltd
mov
loop
push
in
xor
insl
xor
sbbl
add
pop
cmp
adcb
adc
aas
mov
pop
emms
mov
in
inc
cmp
lock
adc
sub
inc
jp
test
sti
fadds
in
push
pop
in
cmpsl
fdivrl
push
mov
xchg
outsl
insl
xor
ss
mov
lock
int3
push
add
cmp
or
js
es
les
mov
adc
out
mov
shlb
push
pusha
cmpsb
mov
sbb
jae
imul
xchg
int3
inc
popf
cmp
jae
push
cmc
adc
or
clc
je
jle
push
mov
daa
rol
mov
sbb
shr
fcomps
mov
xor
rcr
jecxz
jg
cmpsl
ret
lahf
jnp
pxor
in
cmc
mov
lcall
inc
pop
sbb
xchg
inc
mov
mov
adc
repnz
aas
rclb
cmpsb
mov
pushf
icebp
xchg
lcall
lods
fnstsw
jle
dec
out
lods
btr
fdivrl
nop
jns
pop
jecxz
add
sti
push
pushf
ret
repnz
test
js
into
gs
pusha
lret
adc
dec
dec
sub
cmp
add
or
xchg
cmp
std
shlb
std
daa
mov
and
loopne
push
inc
rol
ret
or
insl
rcrl
push
call
add
idivb
scas
in
pop
fnstsw
or
jne
adcb
mov
pop
xchg
push
out
scas
aaa
dec
std
and
cwtl
daa
std
fcomps
sbb
jmp
cld
std
pushf
lods
insb
fcmove
out
orb
push
cmpb
int
jae
adc
push
jge
inc
push
push
inc
mov
inc
fcomps
pop
cmp
ljmp
adcl
mov
arpl
inc
mov
lods
pop
cmpsb
xlat
daa
jmp
fdivl
jnp
sub
adc
popf
sbb
xor
movsl
loop
jle
lods
movsb
fiaddl
xchg
push
push
mov
cmp
sub
push
iret
inc
imul
mov
jl
lahf
push
dec
mov
xchg
out
imul
and
pop
les
repnz
dec
pop
fsubr
push
mov
movsl
push
pop
cld
add
mov
incb
mov
stc
or
insb
jmp
dec
push
pusha
cmp
shll
adc
add
mov
lods
ja
xor
xchg
leave
es
cmpb
jne
aam
pop
maxps
mov
add
idivl
pop
push
add
or
jle
movsbl
mov
or
pop
arpl
sahf
call
movsb
popl
out
and
outsb
mov
add
arpl
push
fistpl
scas
sbb
ficompl
pop
cmc
cmp
cltd
xor
mov
lods
ljmp
pop
xor
xor
ret
push
lods
nop
mov
dec
xchg
mov
xor
ds
push
inc
sbb
jmp
xor
ljmp
cmp
lea
icebp
xchg
lock
xor
call
push
push
add
shll
repnz
cmp
sbb
leave
push
adc
cmp
mov
cmp
jb
stc
cmp
and
lods
stos
sub
xchg
ja
test
into
repnz
xor
aas
ds
aam
jb
popa
dec
cmp
mov
ret
ret
jl
push
ja
sbb
jno
inc
push
mov
pop
mov
push
test
push
mov
bound
inc
xlat
call
push
and
pop
dec
clc
mov
lds
nop
inc
pop
or
push
cmp
xor
fstpl
push
div
cmpsb
jmp
or
xchg
sub
inc
hlt
inc
pusha
sbb
adc
arpl
aaa
xchg
pop
bound
xchg
roll
xchg
rorb
push
movups
mov
sub
jmp
jmp
inc
sahf
fimuls
icebp
arpl
movsl
stos
fnstenv
cmp
ret
insl
pop
or
mov
sbb
scas
dec
movb
jmp
pop
pop
ret
notb
push
cmp
and
mov
jmp
sbb
stos
and
cmc
cli
iret
xor
add
sub
push
sbb
lods
mov
into
jns
nop
mov
sub
sub
jns
cli
test
std
in
dec
loop
fwait
add
repnz
add
mov
sub
add
sub
aad
ret
mov
cmpsb
sahf
or
out
pop
inc
or
and
das
sbb
push
dec
das
rcl
sbb
mov
stc
addl
sub
xor
into
inc
enter
lods
mull
push
into
mov
mov
ss
arpl
pop
push
adc
adc
ljmp
push
out
xorb
insl
cltd
hlt
stc
mov
js
daa
jl
lods
or
jp
push
push
add
adc
out
loope
xchg
ja
sbb
outsl
jb
mov
push
test
dec
popf
and
sbbl
xor
cmp
push
xor
jb
push
jno
nop
cwtl
sub
xor
insl
addr16
sbb
lahf
daa
jbe
sbb
mov
jno
adc
test
sbb
shr
and
mov
xchg
pop
sub
add
rcr
push
pop
cld
mov
in
insl
aaa
sar
xor
sub
and
sub
ljmp
aad
ret
outsb
fsubrs
gs
adc
sbb
test
mov
cltd
mov
pop
pop
xor
shlb
adc
push
hlt
std
imul
mov
sub
sbb
roll
dec
jb
cmp
jg
jge
lret
mov
sbb
inc
jo
outsb
rcrl
jo
sbb
mov
imul
ds
repz
adcl
lret
cmp
push
mov
mov
mov
push
ficompl
popf
scas
cmpsb
or
popa
inc
or
push
adc
ss
bound
movsl
pop
idiv
push
sbb
loopne
mov
shll
test
jnp
mov
fdiv
xchg
pop
inc
and
sbb
loop
sub
sub
pop
inc
popf
sub
add
mov
int3
push
lods
gs
test
dec
jmp
icebp
jne
mov
lret
shrl
je
adc
insb
pop
cmp
int3
push
mov
push
out
xchg
js
and
clc
cmpsb
inc
lds
sub
into
add
cmp
mov
loop
decb
sbbb
arpl
inc
jg
dec
daa
cmp
inc
mov
adc
add
sahf
inc
in
out
mov
and
add
shrl
cmp
xor
mov
lahf
cs
adc
sub
push
out
jecxz
cmp
xor
stos
test
fnstsw
daa
add
ljmp
inc
pop
sub
push
sub
mov
sti
scas
cmp
mov
cmp
xchg
cmpsb
ret
mov
xchg
sbb
gs
rcl
mov
nop
jnp
shrb
push
cs
mov
sub
mov
pusha
pop
enter
pop
or
sbb
mov
fisubl
xor
sti
xor
adc
pop
lcall
dec
jb
nop
out
xchg
mov
jl
mov
mov
xchg
dec
cmp
or
idivb
cld
jp
cmpsb
inc
mov
das
xchg
xchg
xor
sub
dec
sbb
adc
outsl
or
scas
in
xchg
push
push
ss
scas
xchg
adc
popa
adc
mov
xlat
dec
roll
pop
gs
mov
negl
lods
add
xchg
inc
jns
jae
loop
push
pop
or
jb
jecxz
js
dec
in
xchg
aaa
mov
mov
mov
roll
or
das
fwait
jbe
and
shll
push
jns
sbb
sub
cmp
adc
jns
push
or
dec
sbb
and
lea
pop
outsb
dec
inc
jge
into
out
mov
mov
jp
mov
pop
imul
sub
addb
aas
add
sti
sbb
das
xor
fldl
push
xchg
dec
stos
cmp
movsb
dec
or
dec
ror
out
dec
clc
sbb
cmovno
loop
inc
icebp
rorb
pop
add
ljmp
ds
sbb
pop
rorb
dec
cmp
mov
in
aas
mov
add
xor
jae
pop
mov
mov
inc
inc
add
or
jmp
stos
out
sub
testb
fisubrl
pop
lock
and
or
and
aad
loope
das
mov
test
imull
xchg
mov
loop
test
loope
adc
loopne
out
sub
adc
out
push
cmp
adc
js
inc
push
xlat
daa
xchg
cmp
inc
mov
sbb
int3
push
aas
aaa
fwait
jno
jo
xchg
jno
ljmp
cmp
inc
in
cs
mov
mov
in
pop
sbb
stos
xor
mov
mov
out
fdivs
sbb
adc
push
ret
ja
push
lea
addr16
adc
psubsw
pop
data16
test
enter
mov
cmp
movsl
inc
pop
int
stos
mov
push
dec
inc
sub
mov
dec
ret
pusha
jne
push
shll
push
mov
cld
pop
push
mov
lcall
test
addr16
movsl
sahf
cmp
stos
xor
sub
enter
sti
cltd
pop
sbb
std
pop
cmp
fwait
jne
mov
sti
cmpsl
xchg
cwtl
clc
lods
imul
scas
and
and
test
pavgb
int
pop
sbb
in
jge
sub
loop
fcompl
adc
jge
jl
mov
subl
mov
sti
cmp
jnp
mov
jmp
cmpsb
inc
add
and
sbb
adc
mov
push
pop
xor
sub
ds
nop
bound
aad
mov
xchg
cmp
fucomi
cmc
lods
adcl
lds
xchg
das
mov
add
in
icebp
cmpsb
pop
fcompl
xorl
lds
scas
popf
into
sub
test
push
fucompp
imul
ret
fs
mov
inc
aam
iret
sbb
add
popf
leave
pop
cmp
lds
mov
jl
dec
sub
sub
shr
lahf
xchg
int3
outsl
lds
icebp
xor
adc
sub
pop
lret
push
sub
xor
test
es
nop
lods
mov
pop
push
popa
shl
daa
fmull
push
mov
pop
lds
or
inc
movsl
std
cmc
and
dec
insl
mov
lret
jb
xor
mov
mov
mov
out
and
mov
test
scas
adc
pusha
mov
in
xchg
imul
jp
call
push
push
aaa
loope
or
int
lock
lock
adc
popa
div
ljmp
inc
and
adc
in
mov
mov
popf
add
push
rcrb
fildl
cmc
mov
jo
push
fs
jge
dec
int3
or
stc
xchg
cmp
jno
pop
cltd
clc
repnz
stos
sbb
sub
or
out
cld
or
pop
mov
jle
or
mov
aaa
dec
push
fnstcw
sbb
adc
xchg
or
jge
sahf
pop
sub
sub
sbb
orl
sub
subb
adc
ret
mov
push
cmpsb
sti
add
test
jbe
xchg
iret
movsb
fxtract
insw
sarb
lods
cmp
in
xor
iret
scas
stos
leave
mov
gs
add
add
cmpsb
subb
mov
test
pop
subb
add
out
or
into
fstps
sbb
adc
ss
push
enter
sub
sbb
and
test
test
push
mov
xchg
cltd
pop
xchg
mov
lret
jbe
mov
in
js
cli
cltd
js
pop
mov
cmpsl
call
mov
pop
xchg
dec
popf
lods
push
jmp
pushf
push
mov
xchg
pop
mov
sbbb
fs
inc
adc
idiv
jp
movsb
daa
mov
xchg
addr16
adc
or
and
dec
icebp
aas
adc
ja
rcrb
out
popf
sub
push
cmp
xlat
jle
std
movsb
js
hlt
js
push
pop
or
push
jmp
sub
ja
add
add
fcomi
cmp
or
hlt
xor
jp
out
inc
call
test
jmp
sub
adc
mov
cmp
mov
cmp
or
push
ss
notb
xor
jne
pop
adc
sub
mov
pop
push
add
xor
dec
popf
jae
push
jl
fwait
stos
sub
push
fldl
cmp
sub
adc
lods
das
test
sbb
push
testl
ds
add
repz
mov
xor
sahf
mov
pavgw
enter
jb
adc
rcl
sub
or
ljmp
xchg
or
scas
jecxz
pop
and
and
mov
cs
cmp
pusha
ljmp
aaa
and
outsl
inc
in
push
mov
ss
ljmp
fisttps
pop
cmpsl
mov
pop
cmpsl
xchg
fsubrs
and
shrl
inc
inc
jg
imul
shrl
mov
loopne
les
sub
jne
repnz
std
inc
lret
lods
rcrl
inc
or
rolb
push
mov
jbe
mov
inc
push
sti
push
movsl
test
arpl
add
or
adc
fisttpll
insl
sbb
out
sub
inc
pop
int
in
loop
pop
xor
push
inc
mov
sub
add
fcmovne
sbb
leave
push
and
fs
add
lods
pushf
sbb
mov
pop
mov
sub
dec
mov
ljmp
mov
mov
pop
mov
jl
mov
sarb
movsl
fbstp
add
into
scas
jle
sub
dec
data16
ret
mov
and
xchg
cmp
cli
pop
cli
test
data16
out
mov
add
sarl
and
imul
mov
testb
and
mov
pop
mov
inc
stc
adc
test
lods
out
mov
repz
xchg
ja
sbb
push
cli
fwait
and
sub
add
fsubrs
xchg
add
ret
sub
fistpl
add
and
cmp
mov
jp
stos
jnp
lods
jp
loope
push
in
pusha
xor
push
orb
call
sub
rorl
pop
jb
pop
mov
movsb
inc
repnz
and
in
iret
ds
pop
imul
dec
jnp
stos
mov
sub
icebp
test
cmp
xchg
dec
out
push
mov
or
movsb
sbb
jno
loopne
and
int
int
or
pop
xor
test
dec
fmuls
dec
push
mov
xor
or
lret
inc
add
mov
lea
test
adc
pop
stc
jbe
dec
dec
adc
insl
add
and
adc
lea
rcrb
rclb
in
and
int
addr16
mov
inc
aas
and
cmp
fstps
incl
mov
gs
je
andb
ret
lods
adc
leave
fdivrs
pop
hlt
push
jmp
xchg
inc
cmp
add
dec
pop
or
loop
ficoml
push
data16
mov
mov
mov
and
mov
in
mov
shrl
dec
adc
outsl
jns
test
mov
push
or
jg
mov
hlt
mov
mov
std
nop
ss
mov
mov
pop
fidivs
xchg
sbb
ljmp
mov
mov
shl
sahf
aaa
pusha
imul
inc
ret
jo
fists
test
mov
xor
mov
stc
add
push
lods
aaa
sub
push
stos
push
mov
jns
std
xlat
lock
inc
mov
jae
pop
scas
push
jl
inc
cmp
insl
sbb
pushf
dec
xor
outsl
fildll
xor
clc
mov
ret
aam
fisubrs
push
dec
mov
sub
std
outsb
mov
dec
push
xchg
pop
inc
lret
mov
insl
divb
fiaddl
addl
imul
xchg
into
std
or
cmp
and
sub
jnp
push
adc
push
xor
stos
in
iret
dec
arpl
sti
cmpsb
or
cmc
fsubrp
dec
sub
xchg
inc
fistl
fisubrl
push
adc
and
pop
mov
cwtl
pop
stos
mov
mov
mov
sbb
push
int
out
pop
push
jecxz
lcall
filds
ja
nop
mull
push
push
jbe
sti
mov
pusha
lock
mov
jb
aad
cmp
loop
aam
add
fwait
test
pop
add
push
adc
sbb
pusha
mov
fst
push
jmp
inc
inc
sbbb
pushl
out
cmpsb
lods
cmp
daa
out
lret
pop
and
ss
xor
jbe
cmpsb
pusha
add
stos
pushf
nop
cmp
lods
fwait
fildll
sbb
fldenv
pop
cmc
jle
mov
mov
push
fildll
shll
sbb
fisttpll
pop
es
push
lods
mov
jl
dec
repnz
lock
int3
mov
aam
orl
push
cmpsb
fcoms
inc
out
es
add
sbb
into
xor
pushf
inc
xchg
dec
fistpll
xchg
xchg
dec
subb
daa
push
loope
bnd
adc
aam
mov
dec
nop
xchg
mov
mov
xchg
testb
sti
pop
xor
data16
in
outsl
fbstp
pop
mov
push
xchg
sub
ret
cmp
adc
cmp
sti
fcom
aad
jl
ljmp
sti
loopne
pop
dec
add
cs
jns
inc
sbb
fstpl
lret
dec
movsb
ds
insl
dec
ja
movsl
push
mov
adc
mov
data16
ret
stc
jge
sbb
mov
stos
test
and
mov
arpl
jb
and
orl
and
push
sub
mov
dec
stc
shll
sub
sub
mov
das
jl
push
push
int3
push
out
push
dec
mov
imul
pop
in
push
push
dec
inc
or
aad
pop
daa
mov
addl
int
xchg
sbb
push
enter
mov
cmpsl
cmp
mov
mov
jecxz
pop
fwait
lcall
xlat
and
mov
sub
xchg
les
test
xlat
push
fnstcw
mov
or
jo
xor
sbb
fwait
sbb
push
xchg
lock
sahf
jmp
mov
jno
notb
or
int
inc
jnp
jae
test
xor
dec
xchg
ret
adc
jge
call
cmc
pop
or
jmp
subb
xchg
adc
in
aad
leave
addr16
iret
push
mov
cmp
pop
aaa
icebp
and
mov
rcrb
dec
sahf
call
arpl
add
fcmovb
arpl
pop
push
or
addl
fistpl
mov
inc
lret
jnp,pn
stos
fstps
aam
into
rolb
lods
ss
dec
mov
ret
add
push
loop
xchg
adc
bound
fs
adc
xchg
test
cltd
nop
jecxz
xor
dec
cmp
cmp
shll
pop
push
es
ss
insb
fisttpll
dec
test
inc
popa
repz
lret
mov
dec
pop
sbb
les
loope
sbb
pusha
mov
nop
dec
inc
sub
or
or
mov
or
xlat
push
mov
lods
pop
and
adc
out
sub
mov
sbb
decl
xor
test
lock
or
jmp
xor
mov
orl
insb
dec
sti
xor
push
pop
add
sti
and
test
gs
push
mov
mov
and
fnstcw
lcall
inc
push
push
imul
hlt
and
into
and
pop
cwtl
mov
sbb
and
test
mov
nop
cs
pop
mov
jae
icebp
je
mov
mov
add
adc
pop
rolb
les
mov
push
push
jg
push
addr16
arpl
fnsave
js
cmpsb
jae
je
scas
arpl
outsl
leave
pushf
je
in
jg
loop
jo
add
xor
and
sub
and
pop
inc
push
clc
mov
ficoml
push
xchg
mov
cli
and
cltd
pushf
fistps
shrl
pop
out
rcrl
or
xor
imul
mov
pop
outsb
mov
cmp
or
dec
inc
inc
es
mov
push
add
addl
aad
fmull
bswap
hlt
sbb
pushf
push
push
push
loop
mov
fimull
nop
lods
out
mov
aam
enter
imul
push
adc
daa
ror
dec
sbb
inc
lcall
mov
cld
xchg
dec
lret
sbb
sbb
mov
cli
mov
jecxz
xlat
shr
leave
sub
sbb
xchg
jge
pop
stos
dec
sub
sub
fst
mov
pop
aad
inc
aam
inc
arpl
xor
jp
lahf
push
div
outsl
mov
fisttpl
lds
pop
and
leave
add
push
mov
aas
mov
dec
jae
ja
nop
mov
daa
divl
jno
dec
inc
sbb
and
in
inc
mov
ljmp
mov
loop
sbb
btr
jmp
xchg
cmp
andl
jne
or
dec
and
outsl
movsb
ds
lahf
push
push
pop
add
mov
addr16
xchg
repnz
mov
pusha
adc
or
cmp
lods
jno
loop
pop
xchg
adc
arpl
sub
xorb
insb
outsb
in
sbb
leave
repz
pop
adc
dec
repz
mov
xor
lock
dec
push
test
add
mov
retw
push
stos
inc
add
pop
ds
push
mov
xchg
call
jno
cs
mov
add
mov
sbb
bound
pushf
sub
cli
addb
add
dec
insb
and
mov
lcall
fidivs
jg
push
scas
mov
add
lock
aam
outsb
jbe
jns
fwait
inc
das
ljmp
cs
adc
mov
cltd
jne
loopne
add
xchg
inc
movsb
adc
in
push
mov
jb
popf
sub
rcrb
xor
minps
imul
mov
xor
cmp
mov
dec
or
call
push
cmpsb
fadds
lahf
xchg
mov
loope
cld
cli
cmp
shll
daa
sbb
icebp
aas
imul
bound
xchg
add
cmp
xor
nop
loopne
jp
xor
outsb
std
lea
andl
test
andl
jecxz
cmp
repnz
ficomps
cmp
jne
xchg
leave
leave
in
jp
mov
dec
fbstp
push
adc
add
mov
sbb
sar
push
cmc
int
addb
movsl
push
and
insb
shlb
mov
fists
mov
mov
into
mov
data16
sbb
xchg
inc
sbb
in
add
and
shrb
jo
cmpsb
push
js
data16
fdivrp
pop
push
dec
mov
pop
push
sti
dec
fldenv
jge
sub
and
lea
xchg
jl
fcmovb
test
mov
pop
subb
mov
std
shll
or
inc
outsl
int
mov
xchg
jecxz
pop
mov
test
stc
dec
cld
add
notl
jns
inc
incb
dec
das
dec
push
popf
arpl
mov
popa
stos
pusha
js
ret
gs
test
iret
lea
mov
cmpsb
jg
addr16
sahf
decb
pusha
in
mov
int3
jae
popa
aas
fisttpll
mov
out
xchg
or
hlt
mov
mov
xor
lea
out
xor
aad
shr
fcmove
in
and
push
sub
adc
xchg
popa
pusha
mov
mov
out
cltd
test
sub
sub
lret
and
in
push
enter
pop
test
into
and
rclb
jge,pn
lock
in
xchg
sti
push
sbb
pop
mov
sbb
jl
jbe
or
sub
outsl
outsl
nop
fs
push
fistpll
inc
push
adc
leave
scas
aam
xchg
sbb
sbb
pop
cmc
ret
lret
movl
ret
mov
frstor
jge
mov
div
lds
iret
pop
ljmp
pop
pop
xchg
mov
lcall
mov
test
ret
movsl
in
push
push
push
inc
pop
inc
test
outsb
out
ss
pop
push
sbb
jge
xor
or
fbstp
cmp
out
mov
mov
ret
or
imull
ficoms
jle
adc
lea
bound
pop
inc
mov
push
lods
cmp
ret
ret
push
sbb
xchg
sbb
mov
popa
push
inc
mov
cmpsl
pop
dec
mov
in
fsts
int
jno
or
rcr
test
cmc
outsb
mov
leave
sub
ljmp
sbb
sahf
or
push
pop
cld
or
jbe
repnz
leave
subl
bound
mov
rorl
jnp
and
cmc
dec
mov
mov
push
hlt
andb
and
lret
inc
mov
or
daa
test
ljmp
fdivrl
pop
inc
inc
aaa
or
dec
cmpsl
sub
dec
mov
in
addr16
or
sub
jmp
push
mov
enter
sbb
jmp
pop
cmp
sbbl
xor
cmpsb
test
add
xchg
dec
shll
jmp
jne
inc
and
clc
pop
sub
inc
stc
pop
jg
push
xchg
mov
mov
cmp
and
mov
xor
loope
mov
gs
jns
sbb
sbb
clc
dec
adcl
xor
outsb
fwait
in
fists
dec
cmp
xchg
hlt
fmull
sub
test
sub
push
or
imul
dec
pop
lds
mov
jb
movsb
and
push
scas
int3
xor
inc
and
xchg
adc
sbbb
push
fiaddl
add
int
fcomip
lods
bound
dec
cli
or
xchg
lds
sub
xchg
out
sub
lret
add
in
jg
adc
or
jbe
inc
jle
cmp
xchg
mov
sarl
adc
push
cli
push
sbb
jno
icebp
int
arpl
or
dec
or
gs
sbb
cmpsl
popa
or
push
adc
iret
and
xchg
movsl
nop
dec
pusha
push
pop
and
or
fcomp
pop
popf
cmp
cmpsb
aaa
add
inc
negb
imul
add
jo
rclb
test
jns
pop
int3
add
pop
or
addr16
aam
out
cmp
jle
test
movsl
test
push
sub
fdivl
push
adc
insb
and
mov
adc
gs
rorw
push
cmp
mov
cwtl
push
adc
sahf
mov
push
orb
xlat
rcr
add
fidivs
out
stos
fnsave
fnstcw
shl
mov
and
loop
push
lret
fld
ret
rclb
in
inc
mov
dec
clc
push
inc
mov
dec
sbbl
fistl
jmp
mov
loope
aad
adc
ss
mov
cli
lods
sbb
adc
aaa
cwtl
outsl
loop
enter
pop
sub
mov
cmp
dec
loop
mov
xor
dec
cmc
outsl
testb
jle
jle
out
add
add
pop
xchg
fadds
xor
repz
or
fiaddl
cs
sub
insb
leave
into
mov
ret
jae
test
in
mov
or
into
ss
int3
mov
fs
mov
sbb
aas
sbb
outsl
inc
int
stc
mov
loope
xor
sbb
xchg
fidivrs
aam
and
pop
fs
out
push
pop
xchg
icebp
jl
add
push
mov
mov
sbb
mov
inc
jo
sbb
test
mov
pushf
inc
xchg
xorb
jle
nop
mov
imull
push
mov
jge
cltd
cmp
inc
mov
mov
xor
sbb
mov
cld
push
jp
pop
pop
add
faddl
ja
repz
cmp
out
add
imul
mov
pop
int3
int
pop
call
sbb
rcrb
push
sti
add
adc
adc
mov
scas
test
stc
fs
daa
lcall
leave
xchg
mov
outsl
cwtl
mull
and
cmp
sarb
mov
sub
adc
enter
or
fimull
ljmp
inc
or
lahf
mov
je
mov
mov
shlb
xor
and
jne
adc
aad
stc
leave
adc
adc
clc
ficompl
xchg
daa
inc
in
nop
adc
sbb
sub
insl
xchg
lds
or
pop
and
jg
in
popa
mov
push
sub
aam
sub
and
in
xchg
add
bound
dec
sti
dec
in
shlb
hlt
fidivs
addr16
in
push
inc
pop
adcb
sahf
inc
jnp
repz
or
loope
inc
scas
xor
lods
loop
shlb
imul
jecxz
jbe
pop
fs
lds
mov
je
pop
imul
ror
repnz
ret
out
xchg
cmp
adc
mov
fs
inc
das
push
insb
cmp
and
mov
mov
test
xchg
or
ja
mov
mov
je
loope
shl
out
push
testl
mov
jb
jge
pop
or
cmp
in
push
test
mov
adc
jae
xchg
push
leave
or
mov
jg
or
addr16
cld
cmp
ljmp
repz
pop
inc
sbb
sahf
mov
xchg
repz
hlt
sbb
cmp
mov
nop
lods
pop
jo
xor
mov
xchg
je
or
enter
pop
fimuls
jne
inc
pop
fcomp
push
das
pop
sub
cmp
pop
arpl
mov
or
mov
pop
dec
jns
and
push
jnp
dec
inc
rcl
aam
sarb
icebp
lods
sarl
ljmp
aaa
leave
mov
icebp
filds
dec
xor
push
push
movsl
xor
lods
dec
imull
std
adc
jbe
bound
mov
xchg
loopne
rcrl
inc
testb
inc
lcall
fimuls
outsl
imulb
xchg
pop
arpl
testl
sar
scas
xchg
adc
fcmovb
xchg
test
push
dec
dec
push
leave
test
jle
stos
add
and
ljmp
repnz
mov
fbld
xchg
mov
idivl
fdivrs
mov
mov
dec
sahf
add
mov
gs
andb
jns
mov
lods
mov
sub
stos
jnp
dec
xlat
repz
adc
ja
adc
xchg
ja
loop
pop
inc
sbb
mov
pop
insb
lods
mov
adc
fs
push
xor
adc
dec
aas
sti
andl
or
vcvttss2si
adc
mov
scas
jno
in
cmp
pop
lea
mov
lret
sbb
int
icebp
ss
add
adc
bound
jp
lret
mov
mov
and
or
hlt
pusha
fs
test
aad
mov
or
cmp
or
sti
mov
clc
mov
and
sahf
mov
mov
sub
les
sarb
mov
lods
pop
inc
lcall
dec
or
es
dec
cmpsb
or
testl
jnp
cmpsb
std
push
pusha
ret
pop
sbb
aad
and
loop
iret
sub
adc
hlt
ljmp
dec
adc
inc
fcmovnu
cmc
adc
fadds
addr16
sub
mov
push
mov
mov
fs
inc
xchg
fwait
pop
add
sti
mov
push
sbb
pop
mov
pop
cld
jle
adc
or
in
cmp
xchg
aam
or
xorl
push
sub
in
adc
dec
push
mov
push
repnz
and
xor
cltd
shll
jne
jg
mov
das
lock
ljmp
push
outsl
xlat
sub
in
scas
stos
lods
das
js
ret
cmp
notb
and
xchg
mov
push
sbb
xor
sub
sub
aaa
fimuls
xor
pushf
mov
add
cli
stos
xor
jg
insb
ret
popf
hlt
push
xchg
test
xchg
icebp
cmpsl
faddl
push
adc
in
out
lock
mov
andl
mov
push
pushl
add
rorl
int
mov
mov
mov
incl
sbb
sub
pop
movsb
fstl
insb
mov
cwtl
mov
cmpsl
xchg
xchg
push
xchg
outsb
sub
ret
outsl
add
cld
mov
fsub
add
clc
cltd
pop
hlt
mov
mov
inc
push
jbe
iret
dec
loop
xchg
xchg
add
fs
repnz
xlat
adc
lret
pop
mov
cmpsl
addr16
add
addl
nopl
andl
inc
sub
in
int
mov
loopne
push
fisubrl
sarb
jo
and
cmp
pop
or
cmc
repz
sub
imul
sbb
xchg
adc
lcall
and
dec
rcl
jb
pop
mov
outsb
push
pop
adc
sub
pushf
int3
cmpl
or
jbe
cmp
ficoml
fisubs
movsl
mov
pusha
jns
push
insl
repnz
lds
pop
push
mov
mov
push
fcomps
lcall
dec
jnp
xor
nop
and
inc
lods
sub
jecxz
out
jns
movsb
pusha
xchg
out
mov
push
int3
sar
lock
mov
les
sbbb
movsl
sub
xlat
imul
mov
mov
sbb
ja
imul
dec
mov
cmpsl
inc
add
stc
dec
nop
pusha
jne
or
or
xchg
out
jl
lret
sub
jmp
aam
cmpsb
xor
jg
cmp
es
fcmovnu
addl
addl
fimuls
lret
push
and
dec
and
stos
inc
inc
pushf
jmp
loopne
dec
pop
lods
inc
shrl
andb
or
push
sbb
clc
hlt
add
pop
ret
pop
fwait
out
jg
fdivrl
icebp
push
outsl
mov
jne
das
xlat
xor
cli
xor
add
jle
xchg
rorl
and
jmp
cmp
xchg
dec
clc
push
shll
cmp
aas
pushf
inc
sub
mov
lahf
fwait
mov
aam
jns
mov
stc
xchg
ret
dec
lcall
xorb
inc
pushl
cld
in
in
inc
pop
test
movsb
ja
les
lods
popa
xchg
insb
aas
jp
ds
test
lods
flds
and
jmp
add
stc
mov
ret
mov
int3
cmpsb
scas
rcrl
lds
fidivrs
cmp
int
es
lret
add
bound
jno
cmp
cmp
xchg
test
fldl
aaa
jae
push
add
ja
test
mov
push
adc
jecxz
sbb
push
mov
negl
lds
loope
fdivrs
das
jp
mov
jno
orl
cs
dec
xor
cmp
xchg
pop
xchg
cli
push
mov
mov
incb
sub
stos
das
jg
imul
or
imul
lds
out
nop
adc
repnz
jns
out
xor
xchg
pop
stos
sub
push
pop
mov
pop
cmpsl
push
cli
jl
inc
aam
lret
cwtl
push
dec
pop
shl
add
imul
mov
into
push
xor
popa
rorb
xchg
xlat
enter
lret
dec
and
sti
jge
leave
bound
adc
scas
cmp
mov
xchg
adc
sti
rcrb
xchg
jle
lods
push
lcall
push
mov
xchg
cmp
test
jp
lea
lds
add
add
dec
lods
int
sbb
stos
dec
push
cmp
add
adc
loopne
inc
mov
outsb
test
sub
cmpsl
into
rol
pop
out
shrb
fcomps
push
iret
lcall
sbb
es
out
push
add
push
or
xlat
xchg
add
arpl
push
xchg
inc
lret
add
or
mov
pop
enter
jns
inc
bnd
sub
jno
adc
push
push
and
jno
shl
stc
and
cltd
xchg
rolb
or
adc
pusha
dec
imull
pop
bound
push
rcl
hlt
mov
mov
cli
inc
rep
mov
push
into
mov
popf
add
fdivrl
add
es
or
insl
ds
cld
xor
mov
add
test
test
orl
inc
mov
jb
push
jp
gs
lret
fs
or
stc
add
cmp
icebp
mov
mov
loope
mov
or
jp
ret
aas
cmp
in
jnp
fsub
mov
fimuls
inc
daa
sbb
jno
mov
aaa
add
jmp
push
call
repnz
rol
xchg
lds
test
adc
and
xorb
jmp
jmp
hlt
lock
or
push
push
stc
pop
andl
rcr
fldl
out
mov
push
aad
sbb
xchg
fwait
sub
rcll
das
xor
inc
mov
dec
fdivp
data16
push
out
popf
cwtl
mov
mov
push
inc
fsubs
outsb
cmp
inc
sahf
mov
mov
int3
inc
shlb
pop
cs
ds
loopne
push
mov
xchg
adc
sahf
mov
fcoml
pop
filds
fdecstp
into
cmp
push
push
rcll
pop
mov
pusha
int
xchg
mov
inc
or
sbb
sub
aam
add
sarb
sub
adc
int3
shll
shlb
mov
xchg
push
dec
pop
cwtl
ficompl
dec
lcall
aad
jo
or
add
fs
mov
mov
mov
inc
test
adcl
out
push
roll
test
repz
jb
pop
pop
rcrl
sbb
cmpsl
sbb
testl
or
cli
inc
and
mov
push
dec
cmp
hlt
adc
in
ja
loopne
rclb
mov
enter
fidivs
xchg
dec
fists
xchg
mov
imul
es
scas
pop
fildll
xchg
mov
jg
jecxz
jne
test
fldenv
bound
movsl
stos
xchg
aam
push
rcll
dec
mov
inc
lods
shl
dec
pop
dec
push
das
fiadds
cli
push
xlat
or
mov
lret
jp
clc
and
pop
xchg
cmpsb
mov
cmp
add
int3
inc
inc
repnz
fs
pusha
out
daa
inc
push
add
cmp
pop
xchg
std
stos
stc
fcoms
lea
in
cmp
lods
adc
or
cmpsb
or
xor
xor
out
pop
mov
iret
fistpl
das
imul
push
imul
push
sbbb
or
fisubs
and
shrb
daa
insl
call
cmp
push
cmc
mov
call
scas
out
pop
popa
int
cltd
rorl
sub
sahf
mov
sub
push
das
gs
test
push
sbb
push
jnp
cmpsl
and
dec
sub
fadds
mov
mov
and
xlat
clc
in
inc
jno
ret
cli
push
int3
xor
std
jmp
sub
mov
mov
btc
push
xchg
test
mov
shll
fistpll
enter
fwait
push
gs
scas
test
out
sbb
jbe,pn
push
inc
add
repnz
mov
rcl
lods
pop
cmp
hlt
gs
scas
xor
or
outsb
inc
insb
mov
testl
ljmp
adc
inc
mov
jl
add
lea
std
cmpsb
xchg
lahf
popa
lcall
dec
pop
clc
push
jle
dec
add
popl
add
fwait
lods
loopne
xchg
sub
push
sbb
xchg
sub
outsb
and
jmp
insl
stos
sub
mov
sbb
idivl
inc
aas
or
pop
xchg
ljmp
fsts
sbb
mov
cwtl
push
sbb
cmp
jne
test
mov
add
insl
adcb
out
fs
jge
sub
dec
jns
mov
and
adc
test
pop
loop
mov
inc
inc
sub
into
mov
shrl
out
or
push
push
add
mov
dec
popa
adcl
icebp
pop
xor
pop
inc
pop
jge
cmp
pop
les
pop
scas
enter
je
roll
xchg
dec
and
xchg
call
cmp
loopne
inc
xchg
in
cmp
mov
dec
xor
mov
inc
xor
push
dec
popl
mov
and
jecxz
imul
repnz
xchg
outsl
loop
xor
sti
adc
pop
mov
movsb
pop
cmp
xor
in
add
sbb
mov
push
inc
enter
mov
pop
mov
mov
sbb
int
add
and
rolb
adc
mov
insb
or
jbe
sub
lret
mov
sbb
xlat
fdivrs
pop
push
lret
int3
pop
mov
jnp
inc
add
mov
sub
or
pop
repnz
mov
lods
cmp
aas
mov
lret
insb
dec
add
mov
lods
xchg
addr16
fidivrs
jp
outsl
into
push
mov
leave
inc
test
and
hlt
pop
xchg
jae
jno
arpl
jp
push
popf
jae
or
xor
mov
xorl
mov
pusha
mov
cmp
scas
lods
std
scas
addr16
pop
aas
mov
shrb
sarl
and
mov
push
cmpsb
ljmp
lcall
pop
jg
ds
int
pop
or
push
pop
imul
adc
mov
fdivp
mov
rclb
dec
and
fmull
insb
mov
pop
lods
cmpsb
sub
into
cmp
aaa
dec
xchg
jne
shll
addr16
mov
aam
mov
cmp
dec
int
scas
add
loopne
xor
test
add
outsl
mov
or
repnz
lea
push
mov
adc
rcrb
fwait
jb
xor
cmc
xor
es
test
aas
test
shll
test
jne
in
ret
insl
lock
pop
dec
xor
sub
and
roll
mov
outsb
add
in
mov
or
jge,pn
cltd
out
pusha
js
call
roll
repz
xor
stc
mov
call
sub
xorl
or
mov
pop
loop
inc
or
jle
jle
push
mov
fwait
and
lahf
movsl
xor
aas
std
cmpsb
dec
xchg
sti
cmp
or
adc
les
jno
pop
int
rorl
leave
adc
insl
cld
mov
xor
jp
lods
call
or
int
ret
mov
fiaddl
mov
das
shrb
cmc
lds
fs
dec
mov
je
pop
dec
mov
pop
nop
xchg
adc
movsl
xlat
sahf
pop
pushf
cmp
lods
stc
dec
pop
movsl
lods
xchg
test
rorl
subl
imul
dec
shl
mov
inc
ljmp
sub
or
push
add
and
iret
dec
aaa
lods
imul
push
pop
lods
jnp
in
daa
int3
push
or
loop
fwait
in
fcmovnbe
xchg
xlat
imul
cmp
pop
dec
push
loope
adc
or
ret
pop
jge
out
xlat
and
mov
adc
and
jecxz
pop
int3
inc
es
and
cli
loop
sbb
xchg
cmpsb
xchg
add
sbb
or
dec
das
inc
xor
sub
pop
push
add
dec
cwtl
addb
xchg
sbb
pop
adc
add
out
push
dec
sti
jbe
sahf
nop
push
pop
dec
xchg
push
scas
lret
cmp
push
int3
or
dec
mov
stos
dec
cmpsl
imul
mov
int3
mov
mov
gs
jno
dec
mov
cwtl
sbb
add
enter
adc
xchg
ret
dec
sahf
push
neg
test
outsb
cltd
push
push
inc
dec
xor
test
adc
xor
cmpsb
mov
xor
gs
aas
mov
mov
mov
arpl
dec
inc
push
pop
loopne
or
hlt
fwait
aad
cmp
dec
jns
data16
stos
cmp
push
aaa
ja
popf
lret
mov
jae
pop
sbb
xchg
mov
xchg
fistps
popf
or
xchg
orb
insb
and
data16
fcos
das
test
mov
test
cmp
pop
sub
cmp
jge
das
enter
sub
adc
in
dec
pop
mov
xor
dec
shr
pop
repnz
inc
imul
pop
lret
out
inc
ja
sub
movsl
lods
dec
lcall
dec
in
lret
xchg
jne
ja
cwtl
sti
stos
out
scas
test
push
cwtl
jecxz
sti
sbb
pop
sbb
xchg
sti
cmp
ljmp
test
mov
andb
popf
xlat
outsb
mov
and
jne
rcrl
mov
xorl
loopne
sbb
movl
mov
fnstenv
xor
add
int3
dec
rcll
mov
lret
push
bound
outsl
add
sub
scas
nop
das
test
mov
mov
dec
mov
decb
fmul
xchg
sub
dec
sbb
dec
mov
lock
loopne
stos
inc
inc
out
jo
lret
and
xchg
bound
dec
and
movsb
arpl
dec
and
dec
lret
xchg
lds
fwait
test
pop
gs
mov
or
mov
in
dec
xlat
ficoms
xchg
mov
sbb
stos
inc
test
test
jecxz
into
adc
out
inc
push
sbb
xor
sti
and
cmp
or
mov
pop
daa
jno
xchg
insb
adc
pushf
mov
pop
adc
jne
cmpsl
mov
mov
das
sbb
jp
in
pop
cmc
xor
sar
clc
cmp
mov
rcrb
arpl
pop
and
test
xchg
xchg
loop
push
popa
in
fldcw
cld
jge
aas
testl
ja
insb
dec
mov
sbb
sub
mov
aam
jmp
xchg
jb
push
pop
lcall
outsl
xchg
in
or
add
mov
mov
scas
ljmp
mov
fcomip
pop
mov
stos
mov
pushf
lea
sarl
mov
jbe
pop
repnz
cmpsb
int
in
stos
rcrl
in
mov
loopne
dec
xchg
dec
mov
add
xchg
loop
sub
in
idivl
mov
xorl
aad
stc
divl
xchg
xchg
addb
call
pop
loopne
dec
xor
push
pop
repnz
and
dec
push
enter
cmp
add
inc
sarb
adc
inc
pop
aam
in
cmp
mov
mov
or
testl
cwtl
cli
repnz
das
ret
popa
mov
test
push
sbb
xor
add
xchg
stc
dec
pop
inc
push
fildl
cmp
fists
leave
xchg
out
adc
lds
cwtl
jno
lahf
lret
sub
aam
sbb
adc
or
mov
add
push
xor
ds
imul
mov
mov
jmp
adc
jne
dec
adc
comiss
rorb
push
mov
dec
xor
mov
stc
pop
out
test
xor
push
dec
filds
inc
addr16
or
jbe
lcall
adc
mov
scas
xlat
inc
cltd
mov
out
inc
adc
mov
jns
add
test
sub
sti
push
pop
in
sub
ja
xchg
test
rcr
pop
jg
bound
jle
int
dec
push
jne
std
inc
jns
and
stc
dec
insl
xchg
sbb
add
cld
inc
mov
imul
loopne
pop
xlat
shl
int3
into
cli
push
shrb
mov
sti
xor
and
mov
rcr
test
sbb
test
scas
mov
test
mov
std
test
xchg
inc
jbe
ror
sbb
mov
fsubl
cmp
lret
mov
dec
xchg
pop
mov
add
dec
cld
dec
scas
popf
andl
ret
xchg
sbb
xchg
mov
cmc
push
mov
jne
andl
jl
push
mov
mov
shl
jnp
mov
inc
xorl
and
in
scas
push
jmp
nop
sub
addb
outsl
cmpl
leave
dec
lahf
push
in
roll
adc
mov
xchg
clc
fisttpll
inc
cmp
rolb
lds
inc
bound
mov
jmp
outsl
push
cmp
or
ret
in
lods
inc
js
cmp
cmc
xchg
shl
popf
push
jne
shl
adcl
lret
inc
cmp
stos
adc
sbb
cwtl
xchg
cmp
mov
dec
push
sar
sub
jmp
push
mov
jnp
or
lea
jno,pt
inc
mov
cmp
hlt
outsb
push
std
fistpll
int
pop
cltd
mov
adc
cmovp
icebp
call
loope
dec
xchg
lea
adc
movsb
add
push
outsl
lock
in
out
movsb
scas
cmp
fmuls
and
lret
add
into
pop
dec
add
mov
notb
inc
sbb
or
in
pop
xor
push
fisttps
jmp
loop
dec
je
nop
or
ret
mov
iret
in
insl
sub
in
xor
aaa
cwtl
push
dec
add
add
repnz
xlat
flds
add
test
xor
xchg
jnp
cltd
sub
rorl
fdivrl
mov
mov
jl
xor
mov
inc
sub
push
or
sarl
subl
dec
mov
ja
fxch
xchg
cmc
jb
repnz
ljmp
mov
cmc
mov
sarb
adc
rcl
scas
das
cmpb
sub
pop
and
dec
in
pop
enter
loope
or
sbb
daa
fnstcw
jno
adc
jmp
sti
fwait
call
push
mov
xchg
xor
pop
nop
xchg
iret
or
xchg
push
push
mov
lea
icebp
nop
bound
pop
imul
jecxz
jg
imul
mov
jp
stos
inc
add
negl
xchg
dec
hlt
cs
add
scas
push
ret
push
lret
nop
ds
xchg
ss
iret
lret
arpl
xor
jp
pshufw
mov
mov
or
imulb
add
jl
mov
icebp
sub
pop
cltd
xchg
push
pop
es
mov
int3
roll
dec
mov
add
movsl
adc
out
imul
aaa
ret
fstl
or
mov
scas
push
loop
dec
xchg
cmp
rcll
cmp
int3
into
stos
sbb
call
inc
adc
pop
sbb
lock
mov
mov
inc
push
pop
jb
inc
cmpsb
push
loopne
lret
enter
arpl
xchg
or
ficompl
leave
dec
ds
push
and
into
jg
cmp
pop
jmp
jns
test
imul
add
pop
popa
pop
pop
pop
in
mov
or
dec
movl
out
pop
sbb
xchg
mov
sbb
or
pop
sub
add
mov
pop
xchg
movsb
inc
xor
xchg
mov
loopne
sbb
leave
mov
repz
pop
adc
mov
stos
bound
mov
mov
cmp
inc
pop
inc
mov
push
mov
pushf
ret
push
cmp
pop
jge
and
push
insb
pop
dec
xchg
or
in
insb
stos
aas
shufps
sbb
mov
cmpb
fs
aad
sbb
xchg
std
fxch
mov
pop
addr16
decb
jle
fstps
sub
push
int
arpl
pop
dec
jle
aad
adc
sub
jl
loopne
inc
aad
xor
nop
gs
xor
cmp
gs
xlat
test
cmp
xor
outsl
loop
dec
and
cmpsb
cmp
xor
test
inc
jge
in
leave
xor
lahf
enter
lea
inc
std
je
mov
xor
xchg
pop
sti
pop
push
bound
jns
push
mov
push
les
adc
jo
push
fs
pushf
cmc
fdivs
xor
dec
ja
into
push
mov
stos
sahf
outsl
dec
xor
mov
loopne
mov
jae
cmp
fldcw
aaa
xchg
outsl
mov
fisubs
scas
loope
cmp
jnp
sub
mov
push
icebp
push
push
push
xlat
ret
and
add
pushf
jno
leave
in
je
imull
mov
adc
jno
sbb
xor
shll
aas
cmpsb
cli
fidivrs
xchg
pop
int3
cmp
mov
test
imul
leave
cmp
or
xor
xor
mov
mov
jns
xchg
mov
add
inc
sarl
stos
shr
xlat
jmp
arpl
int3
mov
xor
shl
sbb
inc
sti
jb
scas
adc
loope
mov
dec
fstl
inc
call
cmpsb
sahf
inc
adc
lods
dec
fisubs
sbb
dec
in
add
into
jle
jne
lds
arpl
mov
cwtl
imul
test
pop
lcall
mov
loope
dec
jmp
out
cmpsl
push
push
fiaddl
dec
inc
pop
int3
insb
mul
or
rcll
fisubrs
bound
stc
mov
adc
pop
std
dec
out
stos
xor
mov
or
and
pop
nop
stos
aas
aad
bnd
fildl
jg
mov
loope
ds
data16
orl
mov
mov
idivl
xchg
jle
jnp
pop
imul
roll
mov
sahf
sbb
test
sub
mov
les
fwait
jecxz
in
aas
xchg
mov
mov
xchg
sbb
lea
or
fimuls
xchg
jp
hlt
adc
push
push
jo
outsl
lret
or
sbb
fwait
sub
das
mov
add
nop
call
jbe
xchg
cld
fsubs
adc
xor
xchg
stc
add
jno
sub
add
lcall
int
or
mov
rorl
dec
nop
negb
pop
test
stc
mov
push
xor
fnsave
icebp
in
adc
jno
mulb
cwtl
ret
dec
sahf
jmp
or
push
xlat
xchg
imul
loop
insl
sbb
add
dec
jb
in
add
jae
jl
fwait
pop
pop
jnp
cmp
adc
mov
mov
or
orb
and
dec
jg
loopne
stc
push
dec
cmpsl
xor
push
push
jno
and
insl
mov
dec
add
cwtl
pop
or
or
cwtl
loop
sub
inc
lret
ficoms
push
lahf
push
lock
sbb
mov
push
sahf
jno
mov
enter
jmp
insb
sub
rolb
ret
push
xchg
int3
fnstcw
loope
insb
idivb
adc
adc
xchg
mov
and
adc
push
subl
adc
jge
push
fwait
or
test
xchg
push
xor
in
sbb
aad
adc
es
xlat
repz
inc
pandn
mov
loope
out
sbbl
mov
xchg
das
jne
mov
imul
int3
sti
scas
jo
jbe
pop
out
out
test
pop
insb
push
dec
dec
lods
loopne
test
push
push
jg
xchg
fists
shll
test
xor
xor
add
mov
push
call
adc
mov
adc
jne
xchg
push
cmp
mov
jo
sub
mov
jmp
pop
mov
add
jge
mov
aas
movsb
sub
cmp
add
pushf
sub
shrl
jl
ret
push
xchg
jne
or
lods
ljmp
das
subl
mov
mov
xor
add
sub
sbb
push
dec
cmpsl
sub
lds
test
imul
push
inc
frstor
pop
shll
das
insl
fisubrs
movl
stos
sub
test
cmp
inc
mov
lahf
cmpsl
and
pop
arpl
sub
cmp
jns
pop
jo
xor
movsb
scas
xchg
sti
ds
stos
jo
add
dec
sbbl
sub
fidivrl
mov
movsl
aam
pop
and
lea
xchg
orb
testb
xchg
nop
dec
cmp
mov
insb
dec
cmpsl
dec
loopne
pop
mov
dec
ss
jp
xchg
pop
fisubrs
sahf
pop
repnz
push
sub
inc
push
adc
add
cmp
aad
rcrb
mov
loopne
fwait
inc
push
bound
testl
or
lahf
mov
fidivs
xor
jmp
bound
xchg
std
fildll
push
insb
xor
inc
mov
repnz
popf
out
push
or
test
mov
mov
mov
popa
dec
insb
xor
jne
fidivl
test
sub
xchg
mov
cmpsb
pop
pushf
pop
hlt
pop
push
mov
dec
cli
cltd
adc
mov
in
aas
or
movw
rcl
cltd
out
stc
es
in
push
jns
cmpsb
pop
mov
pop
add
xchg
lock
out
dec
sub
lahf
out
popa
xchg
rolb
mov
imul
mov
outsb
cmp
popf
or
push
mov
aam
das
outsl
push
test
push
mov
cmp
or
mov
add
sbb
outsl
movsb
fistl
sub
push
sub
stos
add
fcmove
inc
xor
mov
or
fs
cmp
dec
test
push
jmp
mov
iret
xchg
inc
stos
loope
jo
cli
xor
out
adcl
inc
mov
dec
into
jmp
sbb
add
ljmp
out
xchg
pop
mov
cmp
out
imul
jle
cwtl
xchg
stc
inc
add
insb
and
inc
mov
jne
cmp
mov
jns
xor
fidivrs
test
xor
mov
pop
cli
and
cltd
jle
cmp
repnz
mov
xchg
movsb
or
dec
xor
loop
test
or
xor
push
push
sbb
mov
popf
push
insb
out
pop
mov
lods
mov
imul
jns
insl
cmp
imul
test
popa
aad
movsl
cmp
pop
loopne
bnd
or
stc
adc
rcrb
repz
xchg
ret
jecxz
imul
push
dec
jae
in
out
and
mov
push
push
xchg
or
add
jb
pop
mov
push
stos
out
mov
aaa
mov
and
subb
pop
mov
fdivrl
loop
push
loope
mov
or
mul
inc
mov
fldcw
daa
mov
cmpsb
ss
dec
js
jae
pushf
sbb
pop
fincstp
adc
mov
dec
or
fldz
lret
pop
fcmove
mov
movsb
mov
test
mov
stos
popf
mov
add
inc
mov
gs
push
loopne
jecxz
add
sub
mov
pushf
fidivrs
xor
push
out
mov
enter
inc
movsl
stos
xchg
negl
jne
stos
jp
push
cmp
scas
mov
imul
dec
add
xchg
jne
stos
and
xor
imul
push
cld
test
lods
push
int3
jae
and
mov
add
sbb
adc
xchg
mov
dec
imul
sbb
fwait
cmp
inc
pop
out
push
in
mov
mov
mov
dec
push
out
xchg
adc
mov
pop
imul
push
dec
jl
sbb
mulb
mov
loopne
mov
lret
lea
mov
gs
add
adc
gs
test
mov
inc
lea
jp
movsl
jne
push
les
outsb
add
jmp
fdiv
fcomi
incb
es
pop
mov
out
push
mov
inc
imul
or
call
mov
jl
repnz
rorb
cli
stc
cmc
jmp
pop
sbb
jo
out
popa
xorps
mov
mov
loopne
test
jl
xchg
dec
xchg
lea
jbe
mov
inc
cmp
sub
mov
scas
ss
pop
test
jb
xchg
mov
jmp
pop
std
insb
movsb
adc
mov
xor
mov
cmpsb
push
sahf
pop
xchg
xor
cmp
imul
add
jmp
cltd
dec
mov
into
into
cmp
jl
gs
add
fs
outsl
push
dec
sbb
fisttpll
insb
dec
pop
jge
pushf
idivl
mov
cmp
lods
sbb
or
dec
addr16
sbb
dec
pop
mov
mov
mov
push
add
xchg
les
dec
jnp
jae
sbb
adc
pop
cmp
jmp
cld
stc
daa
scas
mov
stos
in
out
xor
jnp
cmpsl
pop
inc
sub
lods
ljmp
sti
cltd
int3
ja
es
jge
xor
cs
jnp
cmp
lret
fimull
xchg
xor
sub
cmovo
fs
pop
gs
pop
sbb
push
aas
mov
arpl
jp
pop
nop
mov
mov
jmp
iret
jb
mov
std
aad
lcall
lock
sahf
std
lcall
ja
inc
jnp
adc
pop
xchg
pop
xchg
sbb
notl
mov
add
sti
jge
xor
mov
rcll
gs
push
push
push
faddl
gs
jl
xor
inc
loope
sub
ja
sub
xchg
or
pop
cwtl
ss
pop
sub
clc
cltd
arpl
scas
add
sub
and
cmpsb
xchg
cmpsb
scas
or
or
test
add
fwait
scas
add
arpl
lods
push
aas
mov
sub
mov
cli
sahf
ja
adc
scas
jmp
frstor
inc
mov
popf
jle
stos
adc
js
out
repz
movsb
mov
xchg
addl
sbb
mov
pop
js
dec
jnp
adc
aaa
hlt
mov
test
cli
sub
push
bound
inc
add
fstpt
pop
mov
fistpl
lods
pushf
andb
mov
mov
fcoml
jg
xorl
mov
push
pop
jne
lcall
sub
outsb
lock
lcall
sub
push
and
dec
stos
dec
in
iret
jge
addl
cmp
xchg
f2xm1
sub
lds
adc
add
hlt
aam
pop
mov
xchg
jb
and
mov
jno
test
sbb
add
ret
daa
push
or
sub
xchg
jmp
fnstsw
and
mov
outsl
out
push
stos
cld
imul
sub
xor
cmp
cs
lods
add
and
adc
jne
stos
cmp
pop
inc
dec
decb
fdivl
sub
inc
or
inc
cmpsl
mov
push
das
mov
pmaxsw
cmpl
cmc
xor
outsl
jp
cmc
clc
push
cmp
popf
pop
das
mov
mov
xchg
push
sub
test
sub
or
lahf
sub
adc
inc
ret
aam
xchg
lret
jns
mov
jge
xchg
xor
test
or
jmp
out
int3
ret
cmp
pop
cwtl
mov
pop
dec
push
adc
enter
insl
rolb
pop
dec
cli
xor
mov
pop
pushf
jbe
sub
mov
inc
loope
cmp
sub
mov
dec
leave
call
push
mov
mov
sub
call
sub
xchg
mov
sbb
xchg
add
xor
popa
push
out
sub
hlt
clc
fdivs
jne
js
push
into
mov
enter
pushf
clc
lahf
loope
jle
mov
and
mov
lods
adc
jb
cmp
std
cmc
xchg
pop
repz
push
mov
pop
mov
xlat
jle
in
cmpb
jo
pusha
pop
cmp
aad
in
xchg
mov
mov
cmpxchg
bound
test
push
mov
sbb
pop
loopne
jecxz
cld
sub
fst
sbb
jecxz
aad
aas
sbb
sub
in
and
adc
out
sub
pushf
fbstp
shll
lret
push
or
jnp
push
push
mov
ret
jge
xchg
adc
daa
pusha
in
pop
push
lret
lcall
aad
adc
jp
jp
les
fisttpl
jno
std
sub
xor
push
and
xor
test
dec
and
shl
mov
lcall
ret
adc
sahf
dec
xchg
adc
jl,pn
lods
loop
cmp
sbb
and
loop
jo
data16
push
outsb
frstor
add
jae
lret
les
or
in
cmpb
ds
lods
stos
cmp
pop
mov
mov
dec
stc
pushw
jno
or
jne
or
or
or
jl
shrb
lods
xchg
gs
xlat
push
je
cmc
and
int3
ja
aaa
lea
stos
pop
into
mov
mov
jo
fdiv
mov
outsb
rcl
fucomi
out
inc
push
mov
outsl
push
xor
lahf
or
jecxz
mov
out
inc
dec
fisttps
nop
sarl
or
push
fists
jbe
lods
jno
push
xchg
and
mov
insl
stos
roll
in
fidivl
sub
sub
mov
popl
or
daa
jp
add
dec
out
inc
or
cmp
test
lock
dec
cs
or
xor
mov
repnz
jmp
jb
fnsave
movsl
imul
xor
mov
out
jno
mov
push
js
sub
test
push
int3
jl
lret
ja
aam
gs
int3
mov
push
sub
divb
in
sbb
xchg
jecxz
pop
pop
mov
jne
or
fwait
or
jo
jg
mov
popf
frstor
sub
pop
aaa
aam
stc
fcomip
repnz
das
cld
cmp
test
lea
ret
jmp
gs
jno
ja
clc
xor
cmp
lahf
jo
jmp
ds
stos
dec
adc
ja
xor
stos
xchg
xchg
stos
imul
mov
or
inc
outsl
jge
stos
cli
mov
xor
mov
cmpl
xor
push
insl
in
inc
cmp
lds
pop
movsb
cltd
aam
dec
jl
push
cld
lods
sbb
je
test
jmp
enter
ficomps
addr16
mul
add
mov
lret
inc
push
sbb
jmp
imul
add
ljmp
repnz
pop
dec
lods
jne
lret
scas
sbb
addr16
push
add
xchg
mov
adc
and
pusha
scas
xchg
lret
out
daa
mov
push
cmp
insb
jo
mov
mov
mov
cltd
cmpsl
xor
negl
enter
and
popf
rolb
jp
mov
cli
adc
insl
mov
in
sahf
out
bound
xchg
std
sbb
jmp
jge
in
jg
push
popf
push
push
pop
inc
xor
cli
aaa
push
push
repz
stos
xchg
std
mov
xlat
jg
mov
fwait
addr16
ret
push
inc
gs
inc
adc
add
inc
or
xorl
out
adc
jge
dec
mov
and
mov
rcll
fdivs
rcrb
mov
dec
sbb
ljmp
outsl
jno
std
and
xchg
insl
adc
pop
jp
or
aad
lea
xchg
xchg
out
mov
push
xor
jne
das
push
bound
std
icebp
out
notb
push
sbb
cmp
addr16
lds
xor
xchg
insb
fs
call
testl
dec
hlt
loope
addr16
out
flds
jbe
mov
in
adc
push
shll
xchg
sub
jae
lock
in
inc
pop
jecxz
jl
lret
dec
sti
es
test
popa
sahf
in
mov
mov
orl
pop
or
mov
adc
cmp
scas
mov
ret
mov
pop
popa
mov
cmp
pushf
fstpt
in
sub
mov
dec
into
sub
in
fwait
stos
xlat
sbb
pop
sahf
xchg
jns
jno
jg
mov
call
rcrl
push
sbb
mov
test
rcrl
sbbl
mov
sbb
pop
and
mov
mov
ja
mov
aad
push
sub
xlat
in
xchg
dec
push
icebp
pop
pushf
imul
push
mov
pop
jg
mov
xchg
inc
push
shlb
mov
add
pushf
je
or
add
mov
imul
jnp
pop
pop
insb
mov
test
pop
rorl
jecxz
data16
cmpsb
hlt
cld
mov
jmp
pushf
outsl
push
in
pop
mov
jmp
sbb
mov
inc
shr
xor
mov
sbb
lret
and
or
lods
inc
mov
cmp
sub
icebp
stc
mov
push
clc
sbb
sarb
push
pusha
pop
push
inc
lods
shlb
mov
insb
push
mov
subb
dec
push
adc
mov
ret
scas
shrl
sub
push
scas
xchg
and
imul
cwtl
sbb
and
data16
inc
loopew
xor
lods
pop
jle
jo
jnp
fwait
inc
sbb
jmp
ss
xorl
push
push
cmp
sub
aas
ret
iret
enter
and
push
sub
push
sbbl
inc
add
jae
outsl
add
jp
xor
add
xchg
nop
movsb
push
mov
sbb
imul
pushl
rcrl
add
imulb
or
jns
jns
movsb
cmp
test
mov
push
pusha
fsub
xchg
lret
orl
lret
push
popa
xchg
or
pop
push
push
faddp
push
test
cs
es
mov
inc
sub
imul
test
mov
inc
loop
imul
fidivrl
or
aas
ret
pushf
nop
xchg
mov
mov
nop
loopne
sub
push
pop
jae
and
into
push
dec
daa
jmp
mov
das
mov
in
fsubrs
mov
xchg
adc
mov
and
or
mov
inc
sub
push
pop
mov
jnp
mov
ret
out
data16
and
scas
sub
mov
in
popf
je
mov
pop
je
cltd
ljmp
fs
out
dec
push
mov
mov
xorl
push
push
dec
jbe
push
mov
pop
fistpll
xlat
fs
in
lea
mov
mov
xchg
cld
dec
jg,pt
xor
sbb
xchg
outsb
mov
pop
jmp
mov
sbbl
pop
clc
hlt
jns
fwait
mov
stos
mov
cmp
xchg
or
pop
int
push
addr16
cmpsl
push
cli
clc
mov
dec
sbb
fimuls
or
ret
mov
insl
daa
test
inc
inc
sub
jp
add
cmp
jno
adc
fbld
ja
push
sub
xchg
dec
test
in
shr
dec
and
adc
inc
dec
inc
dec
insl
es
pop
hlt
or
fwait
adc
sub
xchg
mov
loop
jmp
test
lods
lods
sbbb
xor
fists
dec
ret
and
jp
iret
sbb
pop
out
aad
lcall
popa
xchg
fistpl
sub
xchg
sti
int3
dec
pop
cld
xor
stc
mov
push
int
mov
sub
pop
fcomi
imul
data16
mov
dec
lahf
insb
mov
xchg
xorl
ret
lods
mov
mov
pop
mov
testl
sbb
ss
lods
insb
mov
mov
and
adc
mov
jmp
xor
inc
clc
stos
arpl
sbb
test
dec
lds
cmp
mov
push
dec
dec
pop
insb
push
jnp
shll
jecxz
lcall
insl
insl
scas
adc
sub
xchg
sub
xchg
clc
dec
push
and
mov
mov
lock
push
aam
shlb
test
shrl
inc
mov
ljmp
xor
adc
pushf
cmp
mov
mov
push
lods
or
lods
test
adc
jmp
aas
xor
popf
pop
loopne
dec
lahf
adc
push
xchg
imul
fs
pusha
jecxz
xor
mov
pop
jne
push
imul
jp
inc
xchg
lret
popf
icebp
nop
jne
orl
push
cmp
mov
lret
testb
ds
es
hlt
mov
gs
loope
sub
dec
icebp
add
cmpsl
test
xchg
nop
jne
sahf
mov
js
rcrb
jl
jmp
mov
stc
aaa
push
sbb
jno
in
or
je
cs
fdivr
push
mov
xchg
sti
inc
xor
add
xchg
fs
lea
and
int
stc
sbb
loope
xchg
jge
adc
jns
xchg
dec
jns
inc
movsb
xchg
outsb
and
cmp
sbbl
jmp
push
leave
push
mov
push
sub
mov
pop
sahf
jmp
mov
mov
pop
nop
lds
cmp
dec
fimull
int3
rclb
jg
cmp
xor
mov
nop
xchg
or
mov
das
or
or
pop
cmp
adc
push
adcl
stos
sub
pop
mov
in
or
sti
sbbb
pop
test
popa
fsubrs
mov
jno
xlat
push
push
enter
lds
sahf
mov
subb
push
jae
in
lret
cmp
push
sbb
mov
xchg
fstpt
xlat
les
fs
push
aaa
scas
cwtl
bound
cmp
mov
mov
mov
adc
repz
in
gs
ljmp
cltd
lods
cld
dec
cmp
pop
or
mov
out
or
push
sti
out
xchg
cmp
sbb
leave
ret
frstor
lcall
ds
cwtl
xor
mov
out
push
xchg
popa
jle
outsb
fwait
stos
movsb
cmp
push
movsb
sbb
pusha
hlt
jp
mov
add
xchg
xor
lcall
sub
loope
and
or
push
stc
cmp
sbb
data16
ret
jnp
mov
loop
js
xor
jne
push
mov
fwait
inc
shlb
enter
adc
call
jnp
call
in
js
lods
mov
out
xor
xlat
dec
mov
push
sbb
lods
cltd
adc
mov
add
or
jne
out
lcall
add
push
cmp
or
into
jecxz
mov
insb
faddp
rorb
mov
loop
jp
cwtl
mov
fidivs
xor
out
repnz
dec
push
add
mov
lock
jne
dec
leave
xchg
sub
mov
mov
jno
test
cmpsb
mov
dec
dec
js
mov
cwtl
mov
mov
jg
repz
sub
jle
cmp
mov
test
add
mov
filds
addr16
js
lock
push
icebp
iret
out
rcrb
cltd
cli
push
sbb
lods
dec
dec
movsl
inc
cmpl
mov
mov
cmp
xor
jge
or
push
aam
jl
pusha
imul
adc
pushf
lock
xchg
notl
add
cmpsb
adc
stos
mov
ss
orl
and
dec
dec
pop
nop
push
and
inc
mov
pop
sbb
aaa
add
mov
in
aas
rorl
mov
dec
shll
add
cwtl
in
out
cmp
jne
in
pop
sub
push
pop
cmp
xchg
fucomip
fisttpll
fildll
jae
xchg
jl
fldcw
mov
and
fwait
cmpb
lahf
jecxz
xchg
or
loope
mov
out
push
push
mov
mov
pop
movsl
cmp
fcoml
sub
outsl
fdivs
das
test
cmpsl
andl
jle
xchg
mov
int
pop
das
aam
movsl
lcall
dec
je
jecxz
add
test
imul
outsb
fwait
mov
inc
sbb
sarl
insb
ret
xlat
in
jl
and
rorl
adc
es
adc
mov
mov
mov
mov
dec
sbbl
adc
mov
cmpsb
call
inc
xor
xchg
inc
pop
dec
mov
jg
cmp
shll
out
sub
sub
lds
in
add
xor
jb
cli
cmp
in
scas
adc
clc
or
mov
push
jb
stc
mov
pop
jecxz
add
aam
daa
pop
xor
pop
clc
pop
push
xor
pop
xor
clc
rcl
sub
movl
loop
movsb
and
bnd
scas
sub
mov
shrb
rclb
push
daa
cmp
nop
mov
jmp
arpl
xchg
inc
pop
popa
and
pop
imul
add
and
dec
in
sarl
repz
pop
pop
lcall
fidivs
ret
cmp
dec
stos
leave
fsubs
cmpsl
mov
fcmovnbe
int3
adc
add
xchg
fisubrl
add
and
xchg
movsl
and
pusha
cmp
or
pop
mov
xchg
push
add
sub
sub
mov
xchg
cltd
mov
shlb
and
enter
pushf
fstp
inc
fstpt
data16
test
aaa
scas
mov
jnp
push
into
mov
lods
daa
mov
jnp
data16
icebp
pop
clc
push
cmpsl
repz
sbb
or
jle
mov
lret
push
repz
mov
mov
or
outsb
pop
jp
jnp
inc
dec
loopne
add
bnd
sti
dec
inc
dec
mov
icebp
scas
mov
test
ret
fsubrl
cmp
loop
cmp
shlb
xor
movsb
mov
dec
pop
out
cmp
jmp
sti
mov
dec
mov
movsl
adc
pop
bound
in
leave
fistpll
aad
cmp
repnz
or
dec
test
pushl
adc
sarl
repz
and
out
mov
add
or
js
aas
jo
and
cld
mov
push
sar
stos
inc
dec
dec
dec
cwtl
jbe
pop
dec
push
jno
add
dec
nop
lds
pop
dec
cmp
jns
loopne
cmpps
ret
sbb
xchg
jae
xor
jns
xlat
push
sub
mov
mov
out
push
rcr
js
and
sti
aas
adc
jnp
fdivrl
scas
clc
scas
sbb
jnp
mov
lret
iret
lods
sarl
cmpb
mov
pop
push
inc
jnp
subb
sub
and
icebp
cmc
inc
xor
cltd
arpl
in
push
dec
jg
jbe
rorl
lods
adc
les
cli
dec
outsb
sub
push
std
xor
add
fisttpll
sub
js
fisttps
sub
and
xchg
inc
pop
jge
or
sahf
lods
sub
adc
stos
rcll
xlat
or
decb
out
nop
xor
scas
push
cmp
test
cmc
fsubr
cmp
outsb
adc
call
or
data16
mov
mov
dec
inc
add
sub
mov
pop
rcl
inc
lea
in
push
mov
add
ljmp
mov
pop
iret
pop
imul
fnsave
aas
aam
cld
pop
jb
mov
std
mov
decb
jne
nop
sub
pop
inc
sarl
push
or
insb
lahf
xor
mov
mov
sti
in
repz
cmp
push
mov
mov
dec
xor
inc
in
mov
idivb
in
sahf
int
int
sti
or
lcall
mov
cmpsb
ja
push
xor
fidivrl
pop
mov
jno
test
mov
pop
sub
pop
sbb
push
shlb
sbb
push
xchg
aad
pop
jnp
sbb
out
pop
stc
mov
inc
mov
sti
jae
lods
addr16
fadds
cmp
pop
sub
insl
bound
into
xchg
jg
jae
and
rorl
fsubs
les
fwait
icebp
movsb
pop
sti
add
push
insl
cltd
fiaddl
fsubrs
dec
mov
icebp
xor
test
cli
scas
ds
inc
fildl
iret
mov
mov
roll
jge
mov
dec
pop
push
gs
mov
pushf
mov
push
sub
mov
sub
jnp
pop
in
inc
pop
dec
mov
push
fcmovu
movsl
pop
pop
fists
pop
sbb
cmp
rcr
xchg
and
les
call
test
add
jp
out
jmp
lret
stos
bound
loop
lds
sbb
cmp
test
outsl
jno
movsl
int3
out
cli
les
pop
inc
ret
mov
decb
cmc
insl
fwait
lods
xor
jne
clc
or
lods
stos
je
mov
xchg
repnz
imul
outsl
cmp
push
sti
pop
andl
push
imul
jae
mov
out
gs
sti
mov
dec
sub
push
pop
pop
test
push
mov
shr
pop
jg
in
push
lods
movsl
xorb
mov
stos
lods
jecxz
sub
push
cld
dec
mov
ds
jg
cld
mov
or
sub
fildll
fiaddl
addb
popa
lahf
stos
stc
ret
inc
mov
ljmp
add
out
mov
scas
test
je
and
inc
push
fadds
in
and
insl
sti
jmp
orl
std
mov
jne
mov
mull
sqrtps
xchg
cltd
mov
pushf
mov
stc
lret
and
shll
xchg
inc
sub
mov
inc
xchg
pop
xor
xor
les
cltd
imul
mov
mov
push
push
jnp
adc
mov
xchg
popw
dec
jecxz
add
or
stos
enter
xor
or
je
pop
cmp
fcomip
adc
inc
sub
mov
sbb
fmull
mov
mov
push
call
lret
arpl
xor
les
xchg
ds
fildll
push
xor
scas
loop
decb
inc
dec
jecxz,pn
call
ja
pusha
les
pop
ds
lcall
outsb
or
movl
out
in
xchg
pop
in
mov
sub
fbld
ret
mov
jle
loope
sbb
movsb
sbb
fwait
iret
imul
int3
rorb
mov
push
int
mov
adc
repnz
sar
cwtl
ja
sbb
sbb
fmulp
sbb
sbb
dec
push
or
lods
bound
shl
fsubrp
lock
std
loope
dec
dec
lock
std
pop
popf
pop
aaa
pop
lcall
add
add
stc
sbb
push
xchg
pop
xchg
sub
popa
mov
enter
repz
pop
push
ficoms
fcoml
adc
mov
and
mov
inc
cmp
lods
std
cmpsb
mov
and
pop
flds
cmp
mov
adc
cld
adc
push
push
sbb
movsl
fstps
sub
push
pop
fisubrs
adc
inc
pushf
data16
jmp
xor
and
test
or
xor
pop
jns
adc
inc
sub
das
arpl
sbb
jnp
add
jmp
and
add
jae
jle
lods
mov
adc
lahf
add
xor
insl
dec
mov
sub
add
je
cmp
popl
xor
js
jge
insb
or
gs
int
push
jle
sbb
ficoml
push
aad
mov
nop
ret
sub
cwtl
xchg
mov
ljmp
push
loop
inc
mov
mov
scas
sbb
sbb
or
push
test
ja
sbb
rclb
inc
lods
or
add
dec
inc
push
add
movsb
sub
cmp
clc
loop
and
mov
loope
aas
sbb
cmp
pop
out
pop
lahf
pop
mov
fstp
xchg
stc
das
or
fistpl
adc
cmp
aas
decb
mov
mov
pop
pop
inc
sub
add
inc
jecxz
mov
clc
repnz
sub
pop
jno
jno
mov
inc
xchg
mov
dec
dec
sti
mov
inc
shll
callw
jge
cltd
imul
inc
jae
mov
mov
gs
inc
pop
sti
pop
addr16
movsl
push
rcrl
fisubrl
lock
and
xor
mov
in
aam
out
sti
test
out
mov
inc
or
je
loope
lods
or
cmp
xchg
aad
sub
push
lret
push
mov
xchg
inc
sub
lods
jb
in
push
mov
jae
in
xchg
je
add
pop
inc
push
sahf
dec
push
or
pop
test
test
adc
icebp
push
mov
xorl
and
nop
xorb
loop
aaa
aam
cmpsb
push
shll
lea
addr16
or
std
lret
imul
lcall
sub
mov
in
cs
test
or
sbb
mov
idivl
pop
in
jne
out
xor
xchg
cmp
fs
inc
test
dec
out
aas
adc
push
enter
jb
and
inc
les
aad
pop
push
lret
outsl
push
cmp
and
inc
inc
test
fwait
mov
sub
mov
outsb
daa
nop
and
daa
call
cwtl
getsec
or
mov
js
cmp
sub
push
fcomps
xchg
mov
xor
jp
outsb
nop
hlt
je
cmc
ss
daa
push
hlt
jecxz
test
popl
rcr
and
cmp
cld
ds
out
jl
add
fsubr
cmp
shl
fstp
jo
push
push
pop
and
fs
pop
sbb
and
je
xor
inc
lea
out
mov
add
repnz
push
jns
xor
jbe
incl
sbb
dec
xchg
ds
xchg
push
or
repz
adc
mov
imul
test
jae
pop
mov
push
popf
inc
pop
call
push
push
mov
out
test
mov
inc
shrb
mov
outsl
dec
push
out
mov
pop
xor
dec
scas
add
xchg
lods
jge
addl
sbb
cwtl
adc
jge
js
adc
pop
pop
sbb
mov
push
es
pop
push
cmp
loopne
add
jmp
sbb
lods
cs
imul
loop
cmp
mov
repnz
mov
or
inc
mov
mov
cmp
push
out
sahf
mov
int
dec
mov
cmp
jge
sbb
xlat
lahf
mov
sub
xchg
outsb
mov
ss
mov
cmp
mov
jg
push
pushf
mov
mov
gs
lret
mov
enter
add
cmpl
push
lods
aad
sub
stc
test
shll
pop
sbb
xchg
int
scas
iret
aam
adc
add
mov
mov
orb
cli
repnz
and
dec
sahf
nop
out
xor
orb
mov
cmp
pop
inc
lahf
repz
hlt
mov
movsl
add
push
or
mov
cmp
lock
push
roll
dec
arpl
std
fadds
pop
ss
jno
push
ret
pop
cmp
jge
mov
adc
loop
lret
inc
lahf
out
lock
test
leave
cmp
cmovl
adc
orl
xchg
out
loop
dec
xor
pop
pop
jecxz
dec
dec
hlt
or
mov
mov
dec
mov
push
imulb
addb
pop
mov
cwtl
jp
mov
xchg
pop
data16
negb
jecxz
sbb
aad
inc
aam
rcrl
adc
jmp
sbb
ds
jno
mov
jecxz
push
inc
aam
stos
pop
loope
mov
adc
mov
insl
and
jg
push
add
imul
lods
xor
jnp
imul
sbb
sbb
popl
push
mov
fadd
sbb
adc
sbb
pop
loopne
cli
push
gs
push
sub
cmp
mov
sti
in
mov
popa
outsl
and
imul
in
xchg
jne
int
add
and
fldenv
push
test
xchg
mov
nop
dec
and
cmp
out
sub
sub
xchg
int
and
jne
in
ret
ds
frstor
pop
push
fisttpll
jno
mov
adc
sub
jno
clc
pop
sarl
clc
add
leave
mov
xor
sbb
cs
cmp
mov
and
push
sarl
insl
cmc
cwtl
mov
cmp
shll
add
adcb
mov
je
movsl
dec
mov
cld
popf
sub
leave
xchg
lods
outsl
cmp
mov
jno
mov
movsb
or
pop
mov
push
fiaddl
stc
or
aam
rcr
jg
pop
adc
nop
stos
aaa
fs
fbstp
ud1
jns
sub
jecxz
gs
mov
mov
stos
sbb
jmp
pop
adc
xchg
rcr
lods
rcr
jbe
and
es
in
daa
negl
std
mov
out
stc
xor
sbb
es
xchg
cmp
flds
call
mov
mov
in
sub
pop
xchg
cmp
mov
jl
cmpsb
adc
leave
shlb
inc
push
push
lods
xchg
shll
subb
ljmp
test
lods
pop
inc
mov
sub
cld
dec
xor
negl
push
inc
or
xlat
or
push
mov
outsl
inc
repz
adc
sti
xchg
or
pop
mov
adc
les
sbb
xchg
adc
sbb
dec
or
push
test
jo
fbstp
pop
call
sbb
jbe
mov
mov
std
stos
lret
std
dec
lea
mov
inc
frstor
lock
dec
add
xchg
js
add
cwtl
dec
sub
bound
ret
adc
dec
xchg
in
pop
sarl
scas
cmpsb
xchg
mov
orl
or
iret
push
cmp
jl
push
sbb
sbb
lea
icebp
adc
lock
std
cld
shl
rorl
fcomip
mov
inc
ret
pop
xchg
sbb
pop
cmp
mov
sbb
xor
pushw
dec
lsl
push
mov
adc
xchg
pop
add
add
shr
push
cmpsl
pop
clc
xor
fisttpll
pop
push
int
sub
and
nop
or
push
jo
pop
and
inc
dec
mov
cld
or
jo
call
pop
pop
sti
jle
leave
in
inc
mov
or
push
orl
mov
movl
mov
je
cld
mov
jo
cli
add
dec
mov
rol
rcl
pop
xor
fpatan
add
popa
aaa
mov
stc
adc
jl
cmpsl
inc
test
push
sbb
mov
jno
mov
lods
outsl
ret
mov
ficomps
jns
imul
and
daa
lret
fcmovnu
scas
lret
xor
inc
xlat
dec
inc
divb
add
scas
sti
adc
leave
cltd
mov
push
loope
inc
loop
rcrl
jmp
push
jno
inc
pop
neg
aaa
cwtl
xor
adc
lods
mov
ljmp
movsl
mov
mov
sub
mov
repnz
inc
mov
jnp
sbb
out
mov
lods
fistps
dec
addb
jg
and
dec
inc
mov
int
dec
lea
faddl
scas
mov
data16
xorl
pop
aaa
fmul
xchg
add
ja
movsl
mov
shll
jno
xchg
sbb
bound
push
mov
addr16
lods
add
pop
hlt
sti
cmc
fwait
mov
inc
shl
push
adc
xlat
sbb
jmp
mov
dec
cltd
cmpsl
imul
cmp
inc
mov
sbb
dec
jo
movsb
aas
clc
push
roll
pusha
cmpsb
mov
ljmp
loope
mov
xchg
cmp
dec
cltd
mov
or
or
mov
cmp
mov
sub
in
in
xlat
and
enter
jmp
mov
sbb
popa
arpl
push
push
xor
fisubrl
push
mov
sahf
jle
pop
cmp
cld
sbb
aas
jg
ja
dec
jbe
scas
lods
sti
lahf
es
in
mov
push
sahf
mov
int
mov
and
in
jns
fs
cmpl
movsl
inc
sub
push
in
insb
push
lcall
sbb
lods
pushf
mov
bound
lods
mov
pop
mov
insb
insb
xchg
mov
daa
sbb
insb
adc
loopne
mov
stos
mov
cltd
sbb
sbb
test
pop
add
sub
fnstenv
pop
cmp
mov
or
xor
add
mov
xchg
mov
xchg
vfrczsd
mov
sbb
sub
push
mov
jne
add
add
mov
movl
mov
call
mov
in
inc
mov
ja
int3
or
xor
daa
dec
testb
stos
decl
push
outsl
push
pop
mov
and
movsl
cmp
imul
jecxz
cmpsb
shlb
push
xor
sub
into
pop
inc
outsb
data16
arpl
out
test
inc
std
cmp
sar
sahf
mov
mov
in
icebp
mov
dec
clc
insl
aam
dec
stos
adc
aas
testb
mov
jae
mov
das
xor
inc
icebp
and
data16
popf
xchg
cmc
imul
out
rcr
push
jp
imul
mov
push
rorl
dec
inc
stos
test
jg
xchg
imul
jns
push
and
mov
js
push
pop
daa
cmp
jnp
lods
pop
enter
cmp
das
iret
imul
jp
xchg
or
push
and
xchg
repz
pusha
orl
pop
mov
push
data16
nop
ss
lea
addr16
lret
clc
and
aam
jecxz
sub
inc
mov
imulb
clc
cmp
pop
adc
dec
loop
push
insl
les
jecxz
mov
dec
add
jle
inc
mov
loope
inc
ds
out
mov
sbb
lret
pop
dec
sbb
scas
and
sbb
into
sbb
mov
jp
push
lock
pop
inc
xor
fimull
mov
cmc
inc
iret
call
outsl
insb
mov
out
xchg
aas
xor
pop
mov
xlat
or
dec
mov
adc
inc
xor
push
add
push
jnp
je,pn
mov
xchg
mov
jae
or
mov
push
inc
mov
xchg
xor
sub
sub
pop
mov
imul
es
pop
add
or
inc
test
push
sbb
loopne
js
mov
cmp
pop
cmp
fwait
loope
dec
or
sbb
mov
dec
cmp
xchg
pop
and
dec
out
cmp
sbb
cmc
jnp
ja
dec
or
in
mov
outsb
add
nop
es
dec
pxor
or
sbb
gs
dec
jbe
int
sub
std
dec
cmovnp
aaa
insb
and
jg
inc
dec
inc
fadds
jae
cs
inc
add
inc
stc
dec
xor
inc
add
ss
ret
jo
jne
and
loop
bound
lahf
pop
or
inc
add
mov
mov
add
pop
jg
and
out
or
movsb
div
pop
clc
arpl
cmpsb
pusha
les
jns
fsts
frstor
inc
dec
dec
xchg
sub
fwait
mov
movsl
mov
mov
dec
sub
mov
scas
or
fisubs
movsl
lcall
jl
sub
cli
and
out
xor
outsl
repnz
gs
cmp
mov
sub
lea
or
fs
jmp
jle
stos
add
push
push
movsb
loop
mov
dec
repz
lahf
xchg
or
push
xor
cmp
int
iret
call
and
pop
test
aad
mov
adc
inc
pop
ret
ja
ret
lock
cmc
pop
mov
int
or
in
clc
leave
test
jno
aam
js
jae
and
enter
repz
mov
fcoml
stc
out
in
or
int3
pop
cld
pop
insl
aaa
fldenv
cmp
push
outsl
popa
xlat
mov
sbb
cmp
jae
fdivr
inc
add
and
sbb
bound
rolb
ljmp
and
fbld
xchg
icebp
icebp
xor
mov
test
sbb
aaa
loopne
sbb
xor
mov
mov
push
std
and
push
mov
pop
ret
pop
daa
movd
mov
insb
cs
scas
incb
push
shrl
int3
inc
adc
mov
push
xor
lret
ljmp
and
fcoms
xchg
or
xchg
les
mov
pop
cmpsl
adc
sub
mov
pop
data16
aas
adc
xchg
dec
out
sbb
sbb
jns
mov
xor
in
adc
jmp
inc
sbb
lock
mov
jle
sub
mov
adc
lahf
jmp
out
xchg
cmp
js
add
je
les
add
inc
xor
xchg
jae
scas
call
sbbl
aam
pop
jbe
or
inc
cmpsl
dec
mov
ja
pusha
cmp
or
test
clc
les
hlt
and
adc
jl
inc
ret
iret
in
imull
pop
mov
pop
adc
sub
insb
outsl
and
cmp
xor
test
lds
adc
xor
lea
subb
repz
mov
mov
dec
cmp
lret
lock
or
jle
add
dec
jb
dec
mov
or
mov
cmp
bound
bound
aaa
daa
fistps
arpl
outsb
orl
aam
mov
popf
push
rorl
add
bound
repnz
and
daa
lahf
hlt
add
cld
xlat
and
fdivr
jne
ja
out
add
in
adc
dec
scas
gs
aas
cli
mov
in
loop
lods
dec
lds
enter
push
xchg
es
adc
mov
test
je
outsl
es
loopne
mov
insl
xchg
out
in
or
fstpl
sub
xor
hlt
xchg
sbb
or
pop
jge
idivb
cmp
push
pop
lock
test
cld
mov
fldl2e
es
push
inc
shrl
mov
addr16
xchg
adc
lods
adcb
in
mov
lds
in
out
jo
outsb
jo
sub
jae
push
or
adc
es
test
jne
ljmp
fs
daa
xor
call
pop
jmp
bound
iret
pop
jno
cwtl
movsl
pushf
nop
lcall
loope
ret
jg
sbb
inc
inc
punpckhbw
mov
mull
adc
cmc
sub
push
iret
adc
test
jle
xlat
xchg
bound
push
shrl
int
pop
ret
cs
test
aad
dec
dec
shrb
int3
adcb
dec
xchg
decl
inc
jmp
dec
ret
jmp
adc
pop
in
adcb
xchg
rorb
cwtl
or
fbld
jl
or
cmp
fiadds
sbb
aad
or
ret
mov
inc
xchg
inc
and
push
jo
orl
pusha
xchg
push
testl
lcall
fs
or
aam
cmp
push
pushf
mov
xor
adc
sbbl
inc
mov
test
test
cmp
xchg
std
shll
xor
sub
jle
mov
push
jg
cmp
fdiv
xchg
cmp
in
repnz
mov
lea
sahf
leave
ljmp
sahf
imul
gs
inc
or
or
jbe
pop
pop
xor
push
ljmp
jb
dec
icebp
jnp
push
mov
inc
les
xorl
xchg
jl
pop
inc
mov
gs
pop
xchg
call
xchg
push
adcl
jg
cmpsb
int
mov
dec
pop
in
dec
test
push
pop
add
hlt
inc
jg
xchg
jbe
xor
fcomps
cmp
sbb
cmp
int3
stc
push
daa
mov
imul
mov
add
xchg
std
es
or
in
fisubrl
cli
loopne
inc
imul
fsubrs
lods
push
int
jl
cmp
cltd
push
and
loope
int3
dec
pushf
sbb
xor
push
jne
dec
pop
fs
dec
xchg
fs
push
jge
jbe
es
cs
or
fstpl
or
jne
mov
add
in
xchg
mov
not
inc
hlt
cmp
sar
sbb
outsl
cmp
std
add
sti
mov
popa
add
arpl
cmp
cltd
push
cmp
inc
inc
jg
mov
add
data16
and
mov
add
push
rcll
dec
adc
sbb
push
out
sbb
push
sbb
je
in
popf
popa
cmpl
push
sbb
nop
sub
jae
inc
jg
xor
sub
xchg
sbb
dec
js
sbb
xchg
aam
jmp
test
fistps
inc
test
cmp
push
test
dec
dec
cmp
jne
push
add
or
inc
adc
scas
mov
rorb
jbe
mov
and
add
jno
mov
mov
sbb
adc
push
idiv
es
cltd
in
push
cmc
mov
ss
cltd
sub
mov
sbb
mov
andl
or
nop
mov
mov
mov
xor
rcrb
pop
fcmovb
in
ljmp
or
mov
mov
adc
jmp
insb
jmp
fisubrs
xor
sbb
add
mov
imul
int3
ljmp
jne
pop
mov
ret
imul
push
add
stos
or
loopne
cmp
sub
out
jo
inc
cmp
int3
aas
mov
cmc
cltd
rcrl
in
cmp
dec
out
pop
jmp
or
dec
mov
outsl
push
in
jmp
clc
pop
inc
cmp
shrl
out
cmp
and
icebp
dec
mov
sub
jecxz
incl
dec
repnz
xchg
dec
std
rcll
push
mov
aad
mov
mov
repnz
mov
or
push
insl
cwtl
imul
lods
lock
repnz
jne
cwtl
xchg
bound
adc
fidivl
sahf
repz
ror
or
push
daa
sub
mov
lods
push
pop
inc
push
sub
negl
and
xor
ficoml
fldcw
fisttpl
pushf
addr16
xchg
push
int
mov
mov
popa
push
movsl
mov
in
cmp
xchg
pop
fisttpll
sti
aas
add
mov
scas
sbb
mov
rol
push
test
lret
mov
les
inc
push
scas
leave
jg
mov
lds
movsb
daa
js
xchg
sub
test
sub
out
loope
add
fistps
adc
hlt
cmc
pusha
sar
popa
push
push
rol
mov
inc
add
adc
mov
ss
adc
add
loopne
je
call
jecxz
sbb
or
mov
and
out
sbb
mov
fstps
cmp
ja
cmp
repz
inc
push
imulb
adc
or
inc
arpl
jl
mov
jnp
dec
push
cmp
fwait
in
in
jne
fcoms
xchg
push
lahf
and
inc
xor
mov
rcrl
popf
ret
mov
push
ds
cmp
andb
cld
mov
bswap
in
test
adc
jmp
stos
mov
cmp
flds
mov
call
adc
nop
xchg
xor
fnstcw
movsb
ret
mov
lds
push
lcall
mov
and
loopne
hlt
mov
xchg
test
or
pop
orl
or
dec
jo
pop
sbb
cmpsl
das
add
sub
mov
vpsubsw
inc
lcall
push
cld
xchg
idivb
jmp
xor
out
jle
jle
in
cltd
lcall
popf
push
fs
aas
xor
test
stc
aam
jecxz
push
pop
pushf
lret
pop
jl
lret
push
pop
or
andl
and
repnz
xor
sahf
cmp
daa
aas
es
outsb
test
add
or
ret
mov
movsb
xchg
sbb
push
sbb
dec
pop
jg
inc
mov
js
outsb
loopne
int
fnsave
inc
mov
push
or
dec
fst
lods
xchg
rorb
aaa
ja
add
inc
adc
lock
jg
mov
test
fidivrs
arpl
es
jle
inc
shlb
fmull
jl
mov
mov
lock
insl
into
adc
bound
outsb
lcall
imul
cmp
xor
outsl
cltd
fldenv
pop
cmovbe
shlb
push
sub
inc
pushf
xor
push
loopne
dec
adc
fisttps
mov
cmp
sub
mov
jp
xor
jp
jge
add
xor
mov
jecxz
and
mov
and
fnsave
push
dec
pop
fwait
jnp
out
lock
and
ja
mov
jmp
dec
mov
xor
sub
xchg
pop
hlt
mov
or
fiadds
dec
and
and
les
das
fistps
add
sub
imul
dec
xchg
or
push
add
aad
popf
and
mov
in
lock
gs
outsb
pop
and
xor
call
dec
add
mov
adc
stos
xchg
pusha
sbb
out
outsl
js
lock
icebp
or
mov
int3
cltd
cmp
sub
scas
in
or
push
push
arpl
lahf
or
inc
addr16
xlat
repnz
aam
and
sub
push
cwtl
jno
test
mov
mov
push
pop
pminub
adc
inc
mov
inc
xchg
push
pop
in
cmp
test
scas
adcb
imul
rclb
jmp
ds
iret
mov
xchg
pushf
bts
inc
popa
arpl
pop
or
xchg
lods
and
stc
loop
sub
add
mov
pop
dec
lahf
pop
pop
inc
mov
fsubp
mov
jecxz
cmp
mov
sub
or
cmpl
or
push
sar
sbb
xor
enter
sti
ljmp
outsl
call
pop
movsl
add
sbb
data16
xchg
mov
mov
or
out
pushf
adc
outsl
sub
dec
pop
out
or
mov
arpl
fs
scas
hlt
cmp
popa
mov
stc
sub
bound
repz
fistps
gs
test
cmp
mov
jle
add
bound
pop
aaa
and
adc
inc
mov
mov
stos
mov
mov
insl
das
ret
cmp
add
push
icebp
lods
test
lock
mov
sub
and
fwait
push
lods
ja
sbb
jnp
or
push
insb
stc
scas
push
push
sahf
xchg
adc
jp
ja
jb
xor
mov
sbb
ficoml
cltd
mov
dec
fidivrl
sub
or
jmp
jae
out
mov
pop
push
sub
add
mov
loopne
mov
and
sbb
adc
mov
pop
xor
cmc
jno
iret
aad
or
jne
fidivs
mov
lods
sahf
sbb
fisubs
test
mov
inc
add
rclb
in
xor
push
aaa
stc
sub
insb
jecxz
pop
pop
icebp
pop
push
add
cmp
xor
cmp
cli
ja
add
data16
pop
inc
and
scas
sub
xlat
dec
push
ds
fs
test
mov
sbb
inc
cld
imul
cmpsl
sbb
fistl
idivl
aad
jne
jbe
jno
pop
das
sub
push
mov
inc
jbe
negl
aas
or
pusha
jb
pop
cltd
xor
cmp
es
mov
popa
pop
daa
ss
ds
and
push
dec
mov
cmpsb
sub
or
jo
push
pop
stos
test
sbb
pop
inc
negl
pop
push
mov
bound
ljmp
xor
push
pushf
mov
js
andl
xchg
jg
stos
leave
adc
cmp
mov
stos
and
psrlw
pop
jge
stos
xor
les
xchg
daa
xchg
stos
push
and
inc
dec
and
mov
dec
sbb
cmpl
repnz
mov
pop
push
mov
rorl
sub
jl
jmp
stc
mov
test
cmp
jg
dec
popa
fsts
notb
add
fdiv
js
mov
stos
or
mov
out
test
add
loope
iret
jg
push
xchg
pop
dec
cld
jne
adc
jbe
pop
rcll
neg
lret
push
push
cmp
insb
push
dec
out
pop
cmp
xor
pushf
aaa
pop
scas
pop
sbb
movl
loop
enter
and
mov
cmp
or
lock
sub
pusha
push
add
stc
cld
ret
outsb
scas
fwait
cmp
dec
and
and
lret
lods
push
xorl
and
xchg
icebp
ret
ret
inc
mov
mov
decb
push
testb
mov
das
mov
je
das
fimuls
xorb
cmp
or
clc
xor
cmp
xlat
inc
add
pop
push
aad
xchg
sbb
mov
push
outsl
or
push
in
out
ljmp
mov
adc
stos
outsb
jp
mov
dec
push
mov
clc
cmp
aas
scas
cmc
cmp
loop
push
xchg
cli
stos
jae
jnp
bound
fiadds
cmp
shll
dec
or
xchg
push
xor
sbb
addr16
xor
push
dec
add
cmp
sbb
xor
cmp
in
into
lcall
mov
mov
cwtl
mov
or
lret
push
fldt
mov
in
pop
cmp
int
lods
mov
xchg
push
out
fs
and
pop
lock
adc
mov
rcl
shrb
cld
sarb
repnz
aas
add
add
jae
popa
pop
cmp
imul
idivl
push
bnd
jae
lcall
imul
xchg
mov
push
jo
nop
dec
fnstenv
jmp
lea
inc
sahf
or
fisttpll
adc
push
or
mov
push
into
add
cvtpi2ps
pop
jl
aas
test
lock
inc
loopne
mov
mov
add
sbb
adc
lods
imul
outsb
inc
inc
shlb
xchg
add
dec
movsl
mov
mov
andl
dec
mov
cmp
imul
ljmp
pop
movhps
fwait
cmc
hlt
ret
stos
push
lock
movsl
adc
frstor
and
repnz
jp
shll
sub
outsb
xor
out
and
sar
cltd
imul
jno
xchg
dec
std
sub
repz
xor
xor
sbb
call
sub
je
add
loope
ds
mov
mov
fldl
mov
cmp
or
xchg
cwtl
xchg
lret
push
jne
orb
mov
sti
xor
or
mov
add
xchg
adc
mov
lods
xchg
cmp
in
mov
fs
adc
sbbl
xor
xorl
arpl
pop
mov
pop
jnp
outsb
push
cld
testb
jnp
ljmp
test
push
sbb
loope
cli
pusha
cmp
sub
add
into
test
mov
pop
mov
leave
sub
jne
xlat
xchg
cmp
push
call
sahf
pop
jb
out
mov
sti
mov
ret
xchg
jmp
lods
xchg
cmp
pop
or
sbb
pop
int3
sti
shll
pusha
pop
test
or
gs
mov
paddw
cmp
mov
adc
pop
enter
jle
pop
and
mov
roll
push
loope
fstpl
aas
cmpsb
fwait
shl
push
orb
shll
addr16
cmp
leave
jbe
mov
jp
push
jg
cli
mov
jg
loopne
xor
pop
and
sarl
psubw
cltd
push
and
adc
in
mov
aad
cmp
dec
dec
pop
pop
cmpsb
sub
pop
movsl
mov
and
mov
fadds
imul
mov
sub
mov
jb
adc
adc
and
jbe
jl
jp
insb
in
mov
and
jbe
in
sub
mov
clc
dec
inc
sti
leave
sbb
lea
rcrb
aad
pop
mov
mov
lcall
pop
cmp
imulb
insb
push
cmpsb
add
xchg
jnp
sub
in
ljmp
and
ficoms
out
mov
mov
cmp
sub
lret
enter
push
jno
ficompl
dec
out
mov
ficompl
enter
add
adc
fcmovnb
jmp
bound
mov
js
hlt
jmp
mov
mov
arpl
push
adc
fistps
add
or
fmuls
push
jb
rcrb
push
lahf
jle
push
push
cmp
push
push
or
mov
mulb
sub
sub
and
aad
lods
fidivs
lods
cmpsl
sub
jge
insb
xchg
push
jle
xchg
negb
jae
iret
ret
adc
lret
add
shrb
repnz
pop
out
int
out
adc
pop
inc
mov
cmc
or
faddl
jne
mov
mov
aad
repnz
mov
andb
dec
shl
sbb
fwait
mov
xchg
mov
sahf
fcmove
pop
xchg
scas
inc
dec
cmp
nop
xor
ljmp
out
mov
jmp
hlt
into
and
cmp
push
mulb
mov
arpl
adc
in
xchg
xor
movsb
xor
cmp
mov
aas
mov
cmp
lods
adc
loope
add
xchg
cmc
mov
pop
pop
fmulp
ds
notl
imul
js
imul
ret
andl
push
or
call
push
shl
rcr
mov
add
xchg
inc
adc
ljmp
lret
in
pop
ret
pop
mov
loop
call
sar
movsb
movsl
xchg
cmp
lret
jecxz
cwtl
scas
mov
pop
xchg
push
in
addr16
adc
sbb
fisttpll
and
stos
pop
xchg
push
mov
in
scas
loope
jae
jp
mov
push
mov
and
fcompl
mov
cli
movsl
sbb
mov
and
sbb
mov
jmp
pop
ret
xchg
xchg
pop
add
shlb
shlb
dec
outsl
or
fimull
xchg
jl
pop
cmp
insb
cmpsb
jle
insl
imul
mov
orb
mov
pop
xchg
movsb
ljmp
repnz
or
mov
ljmp
shlb
lahf
sub
pushf
jnp
lea
xchg
fnstenv
dec
xchg
fnsave
push
sbb
mov
scas
lods
cwtl
inc
jne
insl
sti
in
out
lcall
jecxz
movntps
pop
in
repz
push
fwait
dec
in
mov
push
inc
jne
push
push
mov
or
inc
cwtl
pop
test
arpl
fimull
fs
mov
sub
xchg
dec
jp
int
fs
xchg
adc
shrb
mov
sub
data16
inc
movsb
sub
sub
adc
inc
in
scas
jmp
sti
xor
pop
sbb
pop
out
lods
mov
cs
nop
stos
jne
outsb
push
cmp
fst
aad
cmp
ficoms
push
sub
sbb
push
cmp
and
xor
test
mov
pop
mov
and
push
js
sub
jmp
mov
pushf
sub
or
mov
xchg
sub
xchg
les
ljmp
pop
cmc
mov
jb
test
aad
aaa
cmp
je
mov
pop
lret
pop
or
sar
mov
insb
and
inc
daa
imul
mov
jb
mov
daa
std
out
jne
lock
pop
sub
push
cmc
push
jnp
mov
ds
fistl
stc
cmpsl
sbb
push
rcl
rcll
and
loop
daa
ds
sbb
dec
adc
ficomps
add
gs
pop
in
test
lret
jmp
push
push
movmskps
mov
xorl
pop
jl
or
dec
test
jl
aam
pop
enter
shrb
jle
aas
xor
fdivrs
fwait
add
jnp
pop
insb
repnz
stos
xlat
and
push
adc
inc
push
inc
mov
rcrb
in
cs
cld
xchg
mov
add
adc
or
pushf
or
inc
lcall
data16
mov
test
push
sbb
repnz
int
jo
fisttpll
mov
push
cld
pop
inc
pop
jge
lcall
movsb
sbb
sbb
and
inc
mov
mov
pop
pop
mov
xchg
jnp
mov
pop
jp
lds
fiaddl
cmp
jle
sub
test
sbb
cmpsb
lret
mov
or
jl
adc
mov
mov
jecxz
push
inc
dec
xchg
lahf
mov
fisubrl
repz
aam
stos
mov
ret
cld
test
neg
push
inc
popa
loope
out
in
daa
push
sarl
add
insl
sbb
les
outsl
je
jno
sti
mov
mov
or
xchg
push
dec
mov
pop
pop
push
imul
popf
sbb
push
xchg
aaa
pop
mov
fcmovne
push
sahf
icebp
cmp
mov
push
ja
xor
inc
xchg
mov
roll
insb
push
hlt
dec
inc
sbb
scas
jge
loop
test
mov
xchg
fcmovnbe
sbb
fnsave
roll
int3
push
mov
mov
cmp
stos
mov
dec
or
leave
sbb
jbe
fstpl
aas
or
adc
inc
pop
xorb
xor
fcmove
xchg
pop
dec
mov
je
jne
ljmp
je
sub
aad
test
inc
pop
fisubrl
jl
pop
into
mov
dec
or
rclb
test
es
jae
rcrl
rcll
outsl
in
mov
jmp
mov
and
or
sub
lret
ja
mov
xlat
cmp
inc
iret
ja
jmp
inc
xchg
push
jbe
ds
jns
and
mov
cmp
xor
aaa
xor
xchg
cmp
add
loopne
push
cmpsb
or
sub
std
ret
mov
xor
data16
dec
mov
cmp
dec
test
xchg
sti
xchg
dec
insl
imulb
insb
ja
jno
mov
stc
fst
fmuls
cltd
and
arpl
je
mov
push
jbe
jle
mov
mov
and
sbb
xchg
ss
mov
inc
test
adc
cli
jmp
jne
lahf
lret
inc
mov
or
xor
and
xor
pusha
mov
push
mov
ret
js
in
cmovp
or
mov
outsl
jp
mov
in
cmpsb
mov
adc
stos
cmc
cltd
fimuls
xchg
test
and
jae
push
xchg
or
cmp
cmp
shl
sbb
rclb
xchg
idivb
loop
js
fidivrl
call
fmull
jo
mov
sub
jnp
icebp
gs
testl
jne
or
cs
dec
les
mov
pop
pop
sub
cs
sti
mov
clc
cltd
dec
pop
fsubr
pop
xlat
fbstp
fs
or
pop
xor
js
adc
push
cmp
fsubrl
pop
jecxz
jbe
or
in
mov
sti
addb
jl
sbb
aaa
cld
idivl
stc
sahf
out
jo
inc
int
push
mov
cmpsb
ss
or
stos
mov
lock
lret
pop
xchg
xchg
das
loopne
jl
pop
andl
mov
sbb
sub
mov
lret
push
int3
arpl
sbb
insl
mov
outsb
loop
cmc
add
rcr
cli
fsubrl
pop
xor
xchg
ljmp
insb
mov
jo
mov
xor
mov
mov
or
mov
in
ror
xchg
out
lods
out
add
sbb
sbb
xor
ds
ds
pop
leave
lcall
fldt
add
xchg
pop
cmp
sub
loope
aaa
cmp
jecxz
outsl
stos
and
repz
xlat
inc
fstl
mov
pop
cmp
inc
add
pop
iret
mov
xor
push
xchg
sub
xor
in
in
lea
in
mov
fildl
test
aaa
dec
xor
in
push
mov
jno
mov
imul
leave
out
daa
sbb
adc
push
bswap
fsts
addr16
cmpsl
arpl
negb
sbb
sti
jb
subb
into
dec
lea
add
aaa
push
outsl
dec
add
stos
mov
test
rcll
jae
mov
xor
xor
outsl
jae
int
xor
add
repz
mov
pusha
popf
bound
adc
push
out
packssdw
ljmp
jl
jge
xor
stc
ficomps
push
cmp
popa
pop
sahf
dec
sub
pop
fucomip
cld
xchg
mov
es
cmpsl
pop
addr16
push
and
enter
fcmovne
xchg
pop
add
or
fbld
jmp
stc
cmp
sub
imul
stc
push
dec
loop
std
or
in
lcall
insl
pop
aad
push
loope
mov
sbb
push
lret
fcoml
mov
imull
mov
mov
mov
shlb
add
imul
and
addr16
enter
stos
lea
int
push
push
fldenv
push
mov
jo
aam
mov
movsb
pusha
out
pop
bound
cmp
mov
mov
js
pop
int
dec
aas
sbb
cltd
push
mov
sarb
lock
ret
xchg
push
mov
addr16
pop
lret
xchg
ja
inc
xchg
sub
pop
insb
xchg
out
sbb
inc
insl
pop
dec
cmp
add
inc
jecxz
popf
jp
sbb
mov
inc
or
stos
shll
or
aad
mov
aas
mov
das
fidivrs
push
std
repnz
pop
fdivrs
xchg
pop
imul
mov
jecxz
sbb
add
call
loope
pop
cmpsl
add
adc
jge
xor
lret
daa
push
pop
push
orb
push
popa
loopne
pop
add
shl
mov
iret
outsb
dec
add
dec
add
jmp
jle
in
jnp
add
std
cmp
xor
and
push
data16
mov
cmp
mov
movsl
mov
in
pop
ret
push
mov
cmp
insb
dec
sbb
jno
and
shrl
or
into
addr16
lret
adc
ret
call
popf
pop
xchg
mov
cs
xor
sbb
mov
fs
push
mov
xlat
xlat
imul
dec
pop
scas
dec
pop
mov
lcall
jbe
mov
dec
lds
repnz
shl
jge
cmc
pop
inc
jl
or
or
lods
pop
stos
pop
cmc
mov
pop
mov
or
in
pop
xchg
cmpb
scas
inc
cmp
insb
aas
push
mov
and
mov
sar
test
cmp
aaa
nop
push
xor
cwtl
stos
dec
cmp
xor
out
mov
add
inc
leave
leave
shlb
and
insb
movsl
add
add
push
xchg
jbe
sbb
in
sub
mull
popa
xor
mov
imul
and
mov
imul
xlat
mov
jle
lret
popa
push
push
sub
adc
xlat
or
jne
cmc
adc
mov
cmp
sub
sub
dec
imul
sub
cmpsl
and
les
dec
int
fistpll
cmp
test
jecxz
pop
aam
dec
sbb
jg
jne
sbb
into
fs
jbe
rcll
cmp
cltd
fstl
rolb
ret
lahf
rcrb
jnp
pop
push
sbb
outsb
jl
gs
push
mov
mov
or
jae
xchg
adc
cmpsb
ljmp
sbb
cmpsb
pop
add
inc
ss
or
xchg
mov
push
push
add
inc
faddl
add
jo
fdivp
add
repnz
adc
dec
ja
jno
xor
pop
jb
mov
add
sbb
lods
pop
lahf
mov
mov
xlat
and
jl
inc
adc
or
add
movsl
stc
pop
mov
push
rcl
inc
add
ljmp
outsb
repz
imul
sub
aaa
fistpl
jae
out
dec
nop
pop
mov
mov
inc
jne
mov
push
or
loop
sub
mov
mov
popa
cmp
jns
xchg
orl
cmp
gs
dec
outsb
ljmp
incb
cwtl
mov
mov
or
mov
cld
decb
pop
aam
aam
push
cmc
or
std
sub
out
cwtl
inc
ror
test
xlat
sub
cs
jns
mov
arpl
or
xchg
and
pop
mov
mov
mov
push
mov
mov
add
imul
je
test
test
ja
lock
shrl
clc
cmc
inc
pop
jae,pt
nop
cwtl
int
push
dec
mov
stos
pushf
sub
jbe
cmp
es
fisubrl
or
sub
dec
jns
add
push
test
mov
imul
push
mov
pop
and
dec
and
add
sbb
mov
dec
xor
dec
std
lret
fsubs
movsl
mov
jmp
addr16
mov
jo
loopne
inc
dec
adc
mov
jae
enter
sub
push
jo
cltd
or
push
xchg
adc
inc
addr16
stos
and
jb
xchg
mull
pop
push
dec
pop
mov
cmpsb
jno
hlt
push
and
pop
jmp
lret
fimull
stos
or
movsb
cli
sub
adc
mov
add
loopne
fiaddl
hlt
sub
push
push
pop
or
into
stc
push
das
pop
adc
jge
sub
hlt
test
jecxz
adc
fsts
jge
add
inc
pushl
adc
pop
xchg
lahf
cmp
pop
repz
mov
and
dec
ret
inc
imul
sbbb
shll
loopne
jmp
sub
popa
xor
pop
fldenv
inc
into
pop
aaa
fsubrs
popa
cwtl
pop
icebp
clc
jecxz
pop
dec
xor
xor
dec
push
and
mov
sbb
jmp
icebp
mov
or
mov
and
ja
lahf
movsl
mov
cmc
add
test
scas
fwait
idivl
jbe
cmp
inc
push
sbb
inc
mov
test
vpcomub
xor
adc
xchg
ja
icebp
in
mov
stc
cmp
int
jae
mov
and
ds
sbb
xlat
sub
int3
loop
mov
lret
movsb
jne
lods
movsl
shr
lret
push
sbb
loopne
mov
mov
jae
sub
test
xor
and
outsb
push
shlb
subl
adc
sub
and
cmpsl
sbb
outsl
or
dec
mov
jmp
pop
in
jbe
add
jecxz
sbb
push
xchg
mov
add
clc
dec
xor
cmpsb
mov
movb
dec
xor
sbb
test
loop
pop
lock
jo
jo
and
jl
cmp
ss
dec
pop
jae
fisttpll
push
jl
clc
sbb
xchg
hlt
or
imul
adc
cmp
jle
xor
cmp
push
ret
aas
hlt
dec
scas
push
jge
pop
das
lock
cmpsb
mov
dec
lcall
or
dec
je
mov
cltd
push
fwait
xor
shlb
fistpll
hlt
push
icebp
sbb
xchg
mov
stos
mov
jno
sub
add
cli
cli
xchg
xchg
mov
or
aaa
adc
gs
inc
dec
enter
sbb
outsb
ds
pop
ret
mov
mov
ljmp
and
add
test
mov
dec
fsubs
pop
inc
dec
jle
ret
nop
push
iret
stos
xor
jge
or
inc
insl
sbb
sub
pop
sbb
into
adc
cltd
xchg
sub
enter
sbb
add
mov
leave
xchg
fsubrs
orl
sub
mov
rclb
xchg
push
pop
mov
shl
xlat
and
push
loopne
push
roll
daa
call
cmc
and
fs
add
out
xor
inc
mov
xchg
incl
sbb
inc
pop
inc
aad
fsubl
test
pop
jge
fcomps
les
lret
pop
fisubrl
mov
sti
fwait
xlat
add
clc
add
dec
push
push
sub
in
lahf
icebp
jle
iret
popl
cmp
sub
vpshaw
iret
pop
cmpsb
pop
and
shl
pop
bound
jo
rorb
adc
sub
ficomps
push
add
jno
mov
mov
lret
dec
xor
idivb
into
inc
push
xor
mov
fbld
mov
sahf
push
dec
adc
inc
scas
push
out
push
xor
cmp
pop
sub
imul
in
jns
or
cmp
outsl
add
and
mov
idiv
or
sub
or
mov
data16
pop
mull
pop
outsl
fimull
adc
xchg
test
or
out
and
mov
stos
sti
test
iret
xchg
cmp
int
jmp
arpl
lea
xor
insl
push
jmp
fdivs
push
inc
inc
push
pop
ljmp
leave
sbbb
jns
ret
xchg
jle
in
pop
ds
jmp
jg
jbe
pop
pop
iret
sub
fnstenv
aas
cmp
push
cwtl
cwtl
sub
rorl
out
add
jo
scas
xor
mov
stc
pusha
aad
mov
daa
lret
and
sub
lock
sahf
jge
addb
push
adc
in
ljmp
and
and
xor
mov
sub
or
or
fisubrs
inc
inc
mov
mov
push
mov
ja
sahf
lret
or
cmp
mov
mov
lods
imul
test
cmc
fwait
dec
xchg
mov
pop
jb
std
inc
aas
jno
and
xor
push
imul
lcall
dec
xor
and
int3
lret
icebp
in
lea
inc
insl
jne
rorl
add
in
jnp
mov
sahf
inc
pushf
les
jno
lea
mov
mov
fisubs
sbb
sub
aaa
dec
xchg
sti
or
adc
fcomps
push
pop
mov
lods
xor
into
out
inc
xor
pop
mov
jle
es
mov
add
ficoms
pop
sub
add
stc
ret
arpl
fstpl
xchg
repz
inc
dec
das
sub
ds
pop
push
push
or
es
adc
gs
int
push
into
rep
xchg
cmp
sub
push
push
xor
in
sbb
mov
or
sub
mov
inc
inc
add
stos
dec
gs
mov
xor
jecxz
jae
push
or
mov
cmp
clc
gs
idiv
mov
icebp
dec
test
sub
ret
and
xchg
cmp
add
ljmp
sbb
or
test
mov
addr16
pushf
test
subl
inc
xor
push
jne
xor
jp
subb
jae
jmp
pop
mov
daa
sbb
sarb
sbb
mov
inc
fadds
or
lahf
mov
in
cmpsb
cmpsb
mov
stos
pop
adc
ficompl
jb
out
push
in
push
lahf
jne
cmp
adc
adc
test
xor
mov
or
xchg
xchg
shrb
cli
xchg
filds
xchg
fdivs
jmp
repnz
jp
fucomip
out
push
push
ss
cmp
sub
mov
je
addl
js
sbbb
lock
mov
roll
popa
mov
sub
inc
add
cmp
dec
pop
fcomip
aas
fstpt
push
cmp
mov
test
adc
sub
lods
test
pop
sbb
in
mov
push
push
sbb
and
mov
adc
mov
rorl
sbb
shll
test
jns
mov
fmuls
mov
jecxz
imul
loopne
popf
scas
inc
inc
mov
mov
cmp
jno
dec
sub
adc
push
negl
lods
popf
jnp
mov
sbb
mov
imul
mov
ljmp
lea
frstor
arpl
ljmp
and
loope
ficompl
mov
mov
loope
or
sahf
mov
push
pop
push
cmpsb
mov
fcompl
in
ret
aad
fsubrl
push
and
les
xorl
adc
js
sub
pop
or
mov
inc
ja
cmp
pop
xor
pop
and
push
mov
cld
ret
mov
and
jecxz
push
mov
pop
push
push
adc
xchg
dec
xor
mov
js
lock
leave
push
dec
and
sub
les
outsb
fs
sti
xor
add
fcomip
lods
icebp
popf
xchg
inc
cld
dec
dec
stos
cmp
enter
pusha
gs
ds
xchg
mov
push
xchg
in
repz
sbb
jle
mov
jae
bound
mov
push
lods
xchg
push
movsl
xor
lods
ljmp
xor
mov
icebp
sbb
inc
mov
decl
int3
les
mov
push
mov
push
sti
sub
aam
cmp
sub
jne
xchg
cld
or
sub
icebp
add
adc
movsb
push
xor
dec
call
cmp
push
mov
cmc
push
and
pusha
es
movsb
or
adc
xchg
test
imul
mov
enter
lock
mov
cmp
pop
sub
in
or
jno
mov
rclb
movsl
ljmp
jno
mov
adc
dec
cmp
lds
insl
test
xchg
hlt
cmp
iret
fsubl
pop
divl
testl
pop
dec
stc
mov
cs
sti
pop
aaa
xchg
aam
mov
in
sbb
sbb
sti
sahf
sub
mov
stos
mov
xchg
sub
loope
mov
js
in
das
xor
push
ss
or
rcrl
mov
bound
push
push
cwtl
and
andb
scas
jb
jnp
in
inc
mov
push
fmuls
pushf
mov
lock
popf
add
and
mov
popf
incb
adc
adc
stc
pop
sbbl
out
mov
repnz
out
push
sbb
add
lret
sub
jae
rclb
sbb
xor
dec
stos
fwait
lock
andb
adc
push
xchg
shrl
push
sub
sub
jecxz
cltd
pop
lods
jge
lods
push
sar
jg
pushf
jae
lods
jnp
jo
add
cli
push
mov
push
xor
sbb
test
inc
and
pusha
imul
cmc
push
out
outsb
mov
jnp
jp
inc
sub
lods
jle
sub
fsubs
std
fwait
sbb
add
push
in
jo
xor
fwait
xor
bound
cmpsl
jb
hlt
fmull
lret
enter
ds
xchg
shll
popa
scas
pop
ss
std
or
lods
or
call
mov
mov
sbb
sub
xchg
je
cmp
jle
jg
std
dec
push
sahf
lahf
inc
jp
or
xor
je
sar
iret
lcall
fwait
data16
in
clc
stos
or
inc
push
and
push
jle
in
loopne
sbb
mov
icebp
jae
sarl
or
ja
outsl
adc
inc
fidivs
mov
sahf
leave
stos
cmc
sbb
cli
xchg
shrb
int3
mov
aaa
pop
repz
jmp
imul
ss
nop
arpl
fucomip
ret
push
fnstcw
mov
push
and
loopne
outsb
aam
xor
add
cmc
repnz
mov
sbb
inc
dec
je
shlb
repz
js
lret
in
dec
gs
leave
adcb
dec
addl
adc
cmp
xlat
push
pop
cmp
test
int
adc
ljmp
pushf
loop
dec
mov
mov
loopne
add
mov
mov
insb
sarb
cmpsb
cmpsl
jg
aas
mov
and
fadds
pushf
hlt
in
sub
inc
insb
sbb
lea
mov
inc
fcoms
or
xchg
aam
stc
movsb
das
xchg
fiadds
das
sub
xchg
arpl
rcrl
scas
stos
clc
fsubl
inc
imul
cmc
push
daa
int3
adc
add
sub
mov
jmp
jecxz
stos
addr16
cmpsb
ficompl
xchg
fwait
in
xchg
daa
test
xor
mulb
cmc
fmuls
popf
sub
pop
jb
clc
mov
add
cmp
js
push
sbb
mov
push
mov
mov
lahf
xchg
mov
cmp
jb
movsl
dec
loopne
xchg
xchg
shrb
push
jmp
mov
insb
dec
call
mov
mov
scas
dec
mov
inc
inc
xor
and
fsubrp
cmpsb
out
sub
cmp
cmp
xchg
cmpsl
or
ja
adc
shll
dec
sbb
mov
mov
pop
inc
push
loopne
cwtl
pop
aaa
ds
xchg
sub
xchg
mov
xchg
repz
xor
nop
mov
push
mov
push
mov
insb
int3
data16
xlat
loop
mov
sbb
cs
jo
dec
xchg
and
lcall
mov
enter
call
jecxz
lcall
and
sub
cmpsb
sub
ret
dec
mov
stc
xchg
int3
sti
cltd
mov
test
or
adc
lods
xor
test
dec
push
out
mov
insl
sub
mov
scas
jo
or
inc
bound
ret
mov
mov
out
shlb
sbb
pop
ficomps
pop
dec
dec
fwait
stos
mov
shrb
add
mov
cmp
sbb
jle
sub
repz
lds
enter
dec
xchg
data16
notb
dec
mov
mov
adc
pop
outsb
pop
lods
mov
jo
pop
mov
mov
js
adc
mov
lods
add
mov
jecxz
or
out
mov
ds
mov
pop
mov
jae
outsl
mov
sbb
pop
insl
sbb
sahf
and
mov
mov
cmpsb
sbb
pop
out
hlt
push
pop
scas
repnz
sub
mov
jp
mov
int
fwait
in
dec
xchg
into
push
mov
roll
pop
push
jne
dec
mov
dec
dec
jp
sub
mov
aad
arpl
adcl
aas
insb
push
or
je
inc
fldenv
outsl
stos
mov
mov
inc
jg
mov
push
sub
test
mov
pop
sbb
add
mov
add
in
std
cli
jle
out
sti
push
add
jecxz
xchg
pop
push
or
cs
ret
mov
arpl
ss
mov
adc
jae
inc
add
lcall
clc
rcrl
push
adc
mov
add
scas
pop
lret
jle
and
clts
xor
das
scas
cltd
in
arpl
xor
mov
orb
push
loop
not
mov
inc
adc
outsb
jo
je
adc
jno
mov
iret
mov
jmp
mov
push
cld
jle
aas
sbb
mov
xchg
push
pop
sti
lock
lock
imull
pop
imul
cmc
cmp
insb
arpl
and
insl
xor
into
les
inc
loope
pusha
int3
or
jae
jns
and
mov
pop
sub
and
sbb
mov
xchg
cmp
arpl
stc
add
gs
and
jns
xor
jns
andb
rclb
sub
fnop
add
pushf
jbe
jb
pop
xlat
pop
mov
ret
or
imul
shlb
and
mov
add
outsb
popl
call
cmpsl
sarl
or
xchg
pop
jmp
cmp
repnz
and
push
and
sbb
in
fstpt
stc
mov
jne
mov
mov
mov
movsb
push
ja
shlb
int3
mov
filds
popf
js
test
cli
in
cli
or
pop
cmp
fidivs
mov
adc
dec
repz
mov
jl
xchg
jnp
insb
jne
mov
push
dec
xchg
into
pop
dec
add
pop
popa
test
sbb
mov
jg
push
add
mov
in
lods
arpl
imul
es
scas
inc
push
xor
and
rorl
sub
mov
fdivrs
movsb
dec
xchg
cwtl
cli
mov
stos
sub
pop
ljmp
in
inc
add
ljmp
divb
aas
mov
icebp
repz
xor
jl
adc
mov
adc
gs
in
mov
mov
iret
jns
mov
adcb
repz
sbb
xor
loopne
das
xchg
adcl
inc
pop
fistps
jns
ret
pop
sbb
mov
ja
shl
je
es
adc
cmp
stos
sahf
sbb
lret
repnz
mov
sub
jmp
push
xchg
pop
lcall
or
mov
mov
inc
dec
xchg
and
in
fstpl
cmc
loop
and
add
movsb
lods
cmp
jbe
mov
mov
push
incb
pop
jne
les
inc
and
xor
int
dec
das
mov
adc
jno
out
ds
lcall
jle
stos
shll
into
pop
sbb
arpl
mov
mov
pop
mov
xor
push
sbb
ds
sub
insl
arpl
hlt
sbb
mulb
shrl
cmpl
adc
ss
repz
mov
sub
ljmp
call
xor
lods
dec
movsl
pushf
push
in
push
inc
gs
ds
in
add
adc
and
or
inc
add
xchg
push
fmull
shlb
push
push
xchg
push
ss
mov
je
and
xchg
mov
jp
lcall
insb
loope
mov
pop
nop
mov
mov
dec
jae
lock
dec
inc
in
js
bound
add
pop
mov
mov
lahf
hlt
jg
outsl
add
and
jae
pop
std
jo
ljmp
xchg
addr16
mul
sbb
shl
mov
xchg
je
mov
pop
mov
dec
jnp
mov
push
out
dec
cmp
and
adc
mov
sti
imul
rcr
add
sbb
adc
sti
sarb
lods
jle
sub
xor
int
jecxz
mov
je
mov
push
add
iret
xchg
and
sbb
add
movsl
sub
add
inc
and
daa
imul
fdivl
sbb
xchg
mov
lea
jmp
or
jg
insl
xchg
cld
jb
add
cli
rcrl
das
or
pop
add
fadd
scas
xchg
test
repz
in
and
in
xor
jns
adc
or
mov
dec
mov
lea
ret
fcompl
adcb
repz
jl
mov
rcr
sti
pop
mov
and
rcll
dec
cltd
andb
jbe
inc
push
in
xchg
aam
pop
movsl
daa
rcrl
push
aam
call
cmpb
data16
lcall
and
outsb
lahf
sbb
repnz
or
sbb
imul
jbe
xchg
cmc
mov
into
sahf
std
sub
inc
addr16
adc
in
shlb
dec
add
sarl
clc
mov
shlb
mov
or
outsl
cmp
ror
cmp
mov
sub
and
adc
mov
test
andl
outsl
and
inc
scas
xchg
and
arpl
add
data16
cmp
jge
addb
fwait
ret
push
sbb
je
push
pop
ljmp
das
imul
mov
sti
or
in
popf
or
cmp
pop
jle
or
push
mov
and
cwtl
push
stos
pusha
jno
push
loope
in
out
imul
int
push
inc
cmp
cs
xchg
sti
or
mov
cld
test
nop
mov
add
ret
cmp
xchg
test
pushf
cltd
shll
cmp
stos
imul
stos
pop
andb
mov
out
fwait
push
mov
inc
cli
push
gs
xor
sub
fistpll
arpl
dec
jmp
add
mov
adc
add
lahf
jo
shll
outsb
push
mov
mov
or
cmp
enter
insb
rolb
xor
mov
int3
movsl
sbb
out
mov
fldpi
and
pop
fdivrs
mov
fdivp
push
sti
sub
add
mov
add
inc
lea
mov
pop
jno
fcompl
jne
xlat
mov
loopne
inc
jmp
xor
call
mov
sub
out
pop
jo
sbb
pop
adcl
inc
pop
mov
mov
lret
test
loopne
in
pop
dec
mov
sahf
dec
frstor
sbb
mov
outsl
out
and
mov
adc
mov
mov
fnstcw
inc
push
jecxz
adc
jl
cmpsl
xor
int3
lock
or
out
shl
out
sbb
sub
push
jb
cld
jne
out
inc
pop
cltd
sub
pop
or
add
pop
pop
adc
add
mov
mov
push
pop
dec
cmp
mov
sub
pop
test
pop
xchg
outsl
cmc
les
dec
fadds
push
jae
dec
int
int3
pop
shl
ja
mov
repnz
fcomps
or
add
xlat
jns
outsb
mov
dec
xor
aam
xor
push
nop
mov
xchg
bnd
add
aad
add
pop
pop
hlt
test
shrb
dec
sub
stc
jno
jnp
xchg
jb
leave
cs
dec
movsl
insl
addr16
cmp
es
or
out
gs
nop
pop
or
or
mov
cmpsl
jbe
mov
push
pop
stc
mov
scas
lcall
cmc
and
test
leave
pop
push
mov
inc
cmc
mov
cli
and
inc
dec
pop
fwait
pusha
pusha
out
popf
fnsave
adc
dec
xchg
dec
xchg
jge
add
fbstp
xchg
fs
insl
xchg
sbbb
inc
xor
and
in
dec
cmpsb
push
sahf
xor
cmp
cmp
jg
xchg
adc
mov
jp
xor
cmp
aaa
sbb
insl
data16
adc
jmp
push
sub
jmp
adc
fs
inc
les
lcall
jmp
mov
jb
out
cltd
test
ret
jecxz
push
cltd
shl
ret
popl
fdivl
mov
addr16
adc
sub
sbb
add
popf
push
jae
psubsb
sbb
inc
into
cwtl
sub
nop
xlat
ret
cmp
xchg
mov
xor
sbb
arpl
pop
clc
or
addl
dec
mov
pop
xchg
movsb
mov
xor
pop
xor
xor
sbb
lods
dec
push
movb
mov
dec
fisubs
pop
inc
sub
jle
cwtl
add
cmpsl
sbb
fisubrl
inc
outsb
dec
fdiv
push
and
and
jg
jo
movsl
cmpsb
dec
mov
jp
adc
outsb
xor
xchg
mov
xchg
pop
adc
sub
ljmp
fnstenv
xor
imul
lret
cmp
lods
aas
lcall
xor
icebp
xlat
std
mov
add
xor
das
rcpps
jl
outsb
imul
push
bound
xor
cmp
pop
cltd
imul
fisubl
sbb
jo
jl
cmpsl
ja
push
lea
shl
inc
lods
lods
insb
sub
adc
les
subl
outsl
mov
xchg
mov
pushf
push
dec
push
lds
dec
ret
dec
mov
or
or
add
pop
and
mov
notb
xchg
lcall
push
cmpsb
pop
stos
and
xchg
and
jo
scas
arpl
push
or
or
hlt
sbb
jmp
jo
sbbl
or
inc
mov
ds
jmp
pop
jae
mov
xchg
mov
xor
and
fwait
jne
jp
out
adc
pop
lcall
stos
push
cmp
mov
mov
lods
and
inc
cs
fadds
adc
fs
out
adc
sets
dec
call
out
popw
clc
mov
out
fldcw
add
call
or
ret
ss
jo
mov
mov
addr16
inc
mov
insl
sarl
jns
nop
into
mov
mov
popa
ljmp
pop
sub
jecxz
mov
jb
pop
mov
inc
add
and
mov
jmp
les
sub
dec
scas
and
dec
test
les
outsb
loop
push
out
fimuls
cwtl
mov
ja
daa
stc
mov
inc
cmp
sub
daa
std
mov
int
add
sub
push
xor
test
movsl
cmp
lock
cmpsb
imul
pop
rcl
adc
mov
xchg
fdivl
insb
sti
push
sub
add
sbb
push
or
aam
push
sbb
fisttpl
fmull
xor
in
fmuls
cmc
xor
dec
shlb
dec
sbb
mov
xor
cmp
or
lea
xor
xchg
add
cmp
jge
dec
into
push
daa
shlb
sbb
inc
pop
mov
es
jmp
pop
pop
mov
cmp
push
sub
leave
popf
ja
fisubrs
out
sub
lods
ja
imul
mov
sbb
loopne
jo
or
cwtl
and
retw
add
fwait
mov
xchg
add
inc
repnz
bound
dec
xchg
dec
aas
pop
fs
xor
shld
scas
outsl
ficoml
cmp
pop
mov
je
mov
js
add
rcr
fcmovu
ja
add
mull
clc
inc
adc
mov
leave
jb
pop
loopne
xor
sbbl
push
mov
pop
pop
cmp
xchg
jnp,pn
dec
dec
xlat
add
ljmp
mov
imul
movl
aam
mov
xchg
cmp
cs
ret
cmpsb
stc
mov
inc
lock
jae
out
lahf
adc
cmp
adc
mov
push
mov
add
jl
adc
subb
sti
jo
shlb
pextrw
nop
cld
xchg
sub
xchg
lcall
xchg
add
sub
pop
cmc
test
mov
out
nop
mov
popf
inc
lcall
push
lcall
fwait
dec
test
fildll
dec
or
push
fs
mov
sub
mov
xchg
adc
scas
push
lret
ja
mov
ss
aad
mov
in
clc
sbb
daa
xchg
aam
lret
cmp
cmp
into
fwait
mov
flds
jmp
pushl
incb
adc
jns
aad
mov
out
ja
mov
movsb
cmc
xchg
notl
test
push
out
cmp
inc
jle
pop
cmp
adc
sarl
aas
daa
dec
mov
fcomps
jge
sub
push
int
sti
pop
scas
pusha
xor
xor
in
xchg
call
test
fidivs
push
das
pop
imul
mov
add
jne
inc
les
pushf
jae
aad
push
es
dec
lock
repz
xchg
ja
and
mov
mov
xor
sahf
aad
jne
mov
jg
lds
push
jg
and
or
sbb
iret
outsl
fisubrs
loopne
je
jae
dec
shl
fiadds
test
cmp
sbb
xchg
add
dec
pop
sbb
ljmp
mov
rcrl
pop
push
xchg
ljmp
xor
stos
or
sbb
mov
stos
imul
xchg
iret
cmp
sbb
cltd
rorl
mov
sbb
jbe
sbb
sti
lods
mov
addl
sbb
stos
lds
xor
adcl
mov
das
xchg
hlt
or
xchg
mov
cmp
pop
ds
aad
push
inc
adc
lret
clc
adc
in
loopne
scas
pop
fwait
xchg
in
cmpsl
and
sbb
subl
inc
push
or
stos
and
addl
xor
adc
cmp
rclb
mov
aas
rcr
xchg
sbb
xorl
inc
lods
cli
pusha
loop
sub
in
out
cmc
movsl
inc
lahf
negl
dec
sub
test
mov
outsl
aaa
int3
pop
jg
xor
mov
dec
mov
push
or
insl
xor
stos
dec
xchg
add
insb
xlat
test
std
loopne
ficoml
addr16
out
sbb
aam
jecxz
imul
jnp
sti
or
sub
aaa
int3
andb
inc
scas
pop
cmp
out
mov
mov
jge
into
mov
jo
adc
test
rorl
xorl
jg
sbb
mov
lea
or
aad
fidivs
lahf
js
dec
push
push
aad
mov
or
cld
cld
sbbb
daa
dec
scas
cltd
aad
sub
sub
mov
push
cltd
ret
popa
lods
mov
pushf
jne
push
dec
adc
mov
aad
jecxz
jae
push
orb
mov
sbb
inc
and
shlb
inc
dec
lcall
adc
loop
xchg
int3
xlat
mov
arpl
repnz
movsl
add
push
mov
leave
xchg
jne
xchg
cmc
sbb
fcoms
lcall
mov
add
aas
xchg
jb
bound
xor
sbb
pop
repnz
outsb
mov
cld
cmpsb
add
xor
cmp
adc
fsubr
cld
ss
dec
mov
test
fistpll
jg
rorb
sbb
xor
sahf
sbb
leave
jg
addr16
leave
sti
int3
call
das
push
pusha
pop
rolb
jl
ds
jmp
adc
lcall
hlt
stos
adc
adc
pop
test
int3
ja
dec
and
int
lods
xor
lods
outsw
jg
loop
scas
dec
adc
cmpsl
aaa
scas
insl
pop
cmpsl
fwait
xchg
out
mov
cwtl
jne
decl
sub
cmpsb
shlb
xor
fcompl
dec
sahf
out
fs
outsl
add
sbb
add
inc
or
mov
das
sbb
xchg
fbld
addr16
sbb
mov
in
jecxz
leave
leave
les
xor
lret
or
xchg
daa
mov
adc
jns
sbb
xchg
ja
sub
push
jbe
loopne
jl
sbb
push
cmp
out
pushf
sub
in
cmp
mov
mov
push
into
add
repz
jecxz
movsb
mov
cmp
add
jb
data16
fisttpll
mov
into
lods
pop
fldcw
fstl
push
jmp
sbb
clc
adc
mov
mulb
mov
jns
push
out
and
pop
add
or
rorb
mov
or
xchg
insb
cmp
out
rclb
jo
rcrl
mov
sub
or
dec
sub
add
je
cltd
xchg
popa
push
push
and
mov
or
imul
xchg
or
sub
addb
int
sbb
arpl
dec
cmp
es
sti
test
push
loope
xchg
mov
xchg
pop
and
mov
sahf
add
jae
xor
jae
xchg
mov
add
or
sub
and
xor
jmp
cltd
arpl
loop
jmp
cld
cs
in
jmp
mov
xor
mov
inc
sbb
in
xchg
pusha
cli
aad
sub
jne
jmp
inc
jne
jo
mov
into
push
fsubrs
pop
or
or
adc
jnp
dec
iret
das
xchg
cmp
cmc
add
pmuludq
imul
out
stos
es
idivl
adc
sbb
push
filds
add
test
adc
sbb
gs
push
aas
std
inc
xlat
sti
jg
inc
dec
sub
jmp
ja
pop
rcrb
cltd
lahf
push
jns
ja
sbb
incb
jb
stos
jo
pushf
push
mov
cli
push
imul
inc
mov
in
mov
nop
mov
and
movsl
rclb
lods
inc
jl
mov
mov
xor
and
daa
fldenv
mov
inc
and
cmpsb
pop
stc
rcr
inc
lods
push
in
push
mov
cmpsl
mov
aam
push
lahf
cmp
inc
out
dec
mov
cli
mov
dec
fimull
xor
out
jmp
in
jle
xchg
incb
mov
test
daa
xchg
nop
insb
subb
outsb
stos
inc
inc
xchg
push
enter
sub
cmp
test
inc
xchg
jmp
adc
pop
fistl
adc
pop
sbb
scas
cmp
inc
test
nop
orb
test
ds
jbe
pop
sub
lahf
clc
pop
sub
cs
mov
adc
je
xchg
xchg
adc
jae
xchg
outsb
nop
nop
lock
push
push
into
sbb
fdecstp
inc
adc
add
andb
jecxz
push
mov
pusha
cmpsb
hlt
push
add
jecxz
loopne
movsb
out
lcall
enter
sub
mov
es
mov
sub
push
cmc
fwait
mov
mov
imul
stos
loope
out
bound
and
test
adc
xchg
cltd
or
inc
adc
sub
adc
cmp
cmc
ret
sarl
lock
ljmp
mov
xor
or
shlb
arpl
add
sbb
enter
sub
sbb
sbb
fidivrs
movsb
inc
xor
cs
xor
fs
adcb
sub
daa
mov
jnp
xlat
mov
movb
jg
arpl
leave
jmp
in
xchg
jae
stos
mov
ja
xor
sub
push
cld
jae
ss
clc
fsubrs
push
sbb
les
cwtl
mov
xchg
mov
cmp
leave
and
aas
nop
add
dec
add
dec
inc
lcall
popa
icebp
ljmp
je
jns
lea
fdivr
lcall
je
xchg
aad
movsl
pusha
js
mov
fmuls
call
cmp
scas
testb
outsl
sahf
jbe
xorb
out
lcall
mov
push
int3
sbb
mov
lock
cwtl
or
cwtl
fcomi
clc
ret
outsl
cli
inc
sbb
or
sahf
ss
cld
jno
int
adc
iret
xchg
das
jge
sub
outsl
and
test
aad
pop
cmpsb
stos
inc
push
sub
inc
mov
xor
jecxz
dec
bound
popf
lret
gs
sub
mov
pop
mov
int
xchg
loopne
jle
ret
outsl
add
add
inc
jno
fimuls
loop
loop
fmul
jno
push
mulb
sbb
sbb
mov
xchg
lcall
popa
ficoms
sbb
pop
ljmp
jecxz
dec
push
mov
loop
mov
add
dec
sub
std
dec
repz
rolb
mov
cmp
call
addr16
fisubrs
ret
mov
jne
dec
fisubrs
lock
popa
rcrl
sub
cmpsb
jp
in
push
fisttps
lcall
pop
shlb
call
lds
sbb
sbb
outsb
cmp
sub
push
movb
pushf
push
pop
orl
and
clc
inc
in
int
dec
sub
sbb
int3
inc
lea
mov
mov
aas
sub
out
bound
xchg
push
or
sub
fisttps
push
mov
stos
push
inc
jne
xor
xchg
dec
adc
les
jo
lret
mov
icebp
jo
and
jmp
xor
loopne
cmc
scas
popf
int
pushf
hlt
insl
mov
add
aas
int3
sub
int
fmul
mov
adc
into
je
in
sub
mov
and
xor
fcoml
loope
mov
xchg
repz
clc
cmp
pop
add
shll
aas
js
inc
cmp
mov
and
cmp
cltd
mov
xor
clc
push
mul
sbb
mov
fsubs
push
and
pop
pop
cmp
pusha
ss
adc
sbb
call
dec
xchg
jmp
dec
shlb
movsl
rcl
ficompl
xchg
rcll
push
rolb
lcall
pop
mov
cmp
lret
dec
mov
mov
mov
or
jg
add
and
adc
jo
sub
jns
fdivl
lret
repz
mov
jl
or
jae
cs
test
push
xor
mov
push
pop
xchg
out
xor
loopne
sub
ret
adc
scas
push
jns
cltd
aam
movsb
inc
mov
adc
sbb
lret
push
adc
dec
cmp
sub
inc
cmp
stos
int
and
imul
stos
bound
iret
mov
shlb
outsl
out
mov
fs
insb
ficompl
and
addr16
push
shll
fnstsw
mov
lock
aas
pop
dec
daa
pop
xor
sbb
les
sub
cmp
add
lret
dec
stos
divb
mov
cltd
mov
cmc
cld
xchg
insl
lock
pop
lods
loop
pop
jae
scas
pop
sub
loopne
test
and
enter
int
mov
outsl
ret
push
jp
jns
mov
jb
mov
test
and
rclb
pop
scas
jno
lods
pop
xchg
popf
mov
sub
mov
addr16
pop
ds
xchg
cmp
pop
sbb
sbb
lea
mov
sbb
adc
inc
or
lret
sbbb
lcall
outsl
fists
loop
aam
inc
fmuls
sahf
mov
pop
arpl
or
sbb
or
ljmp
jecxz
in
xor
in
jg
xchg
add
test
mov
dec
inc
lods
mov
jp
lret
mov
fs
xchg
fsts
push
xchg
das
add
sti
xchg
es
pop
lahf
push
in
push
bound
ret
mov
push
mov
xchg
dec
in
out
xchg
or
xchg
mov
jb
xor
pop
push
lea
cli
ss
leave
out
fldcw
or
push
pop
in
push
outsb
leave
jp
lret
aad
test
xor
pusha
loop
xor
xor
out
and
ss
or
int3
jmp
jecxz
lods
dec
cmp
jp
jmp
clc
shr
leave
fsubrs
and
clc
jbe
cmp
xor
or
shlb
and
inc
and
aas
cmp
cwtl
xchg
fwait
add
stos
push
je
aad
test
cltd
in
mov
sub
add
aaa
mov
out
outsl
repnz
lcall
sbb
or
int3
addr16
and
pop
dec
cmp
jb
aam
sbb
mov
mov
push
dec
pop
movups
je
sarl
and
fisubrs
xor
testb
sub
sbb
das
repz
pop
xor
mov
cmpsb
outsl
sbb
aaa
inc
ja
inc
in
pop
xor
neg
stos
cli
insb
imul
push
add
addr16
iret
mov
das
jbe
add
int
cmpsl
cmp
scas
sbb
enter
push
add
push
push
pop
out
cmp
nop
xor
dec
jle
stos
fcmove
lret
xchg
rorl
push
jne
cli
pushf
ljmp
pushf
push
cmp
lret
out
cmp
and
lods
movsl
lea
xor
xchg
jne
pop
int
xor
dec
cwtl
enter
sbb
adcb
cwtl
js
bound
outsl
sbb
mov
push
jle
mov
jp
adc
xor
stc
pusha
ds
leave
cld
add
xchg
fisttpll
mov
mov
mov
xor
or
xchg
mov
in
vphaddbw
mov
out
add
mov
inc
and
sbbb
int
sar
inc
scas
cwtl
cmp
mov
stos
test
filds
je
cltd
sub
xor
mov
push
fstpl
out
cmp
jge
xchg
pop
sub
mov
mov
adc
scas
pop
dec
jnp
mov
cmpsb
mov
jg
in
xchg
loop
pushl
dec
sub
push
fsubrl
pusha
jecxz
mov
std
xchg
mov
add
cmc
xlat
mov
add
lods
adc
cmpsb
dec
cmp
cld
hlt
jmp
scas
addr16
orb
mov
sahf
ret
or
sub
pop
outsb
adc
dec
sahf
cwtl
jnp
and
aaa
imul
xor
pusha
cmpsb
inc
cmp
pop
push
mov
test
stos
lcall
rcrb
xlat
shlb
mov
dec
or
aaa
mov
hlt
inc
push
in
mov
mov
cmp
push
call
and
ja
sbb
hlt
test
sti
ret
inc
addl
ds
and
cmpsl
sub
les
clc
das
sar
mov
sub
xor
arpl
andb
adc
out
jae
popa
xchg
cmpsl
jne
xor
bound
rorb
icebp
push
push
jb
mov
sub
fcmove
andl
push
enter
aaa
jmp
push
and
mov
and
rcrl
and
and
mov
sbb
mov
fsubs
xchg
test
paddb
push
mov
cmpsb
fs
mov
and
cwtl
mov
lods
daa
inc
in
scas
popf
lcall
ds
nop
xchg
sub
shr
sub
xchg
dec
ret
inc
mov
dec
fwait
or
push
testb
pop
inc
ja
jp
stos
repz
lahf
sahf
dec
pop
fst
adc
loopne
pop
addr16
fbld
lret
jbe
push
pop
mov
adc
mull
rclb
pushf
dec
loop
sub
int3
movsb
test
cmp
cmp
jns,pn
mov
stos
sub
sarb
dec
xchg
mov
lods
scas
out
mov
mov
mov
inc
sub
daa
push
out
or
jge
add
mov
dec
mov
xorl
sub
sbb
inc
add
sub
aas
mov
adc
out
sti
cld
loopne
inc
xor
or
jle
jae
mulb
test
stc
adc
sub
enter
and
pop
lea
insl
sbb
adcb
mov
ret
std
dec
or
mov
sub
out
cmp
mov
shlb
push
sbb
loop
aaa
pusha
cmc
push
sbb
dec
aam
mov
inc
or
or
mov
adc
xlat
leave
fsubs
jno
les
std
cmp
push
arpl
rorl
xchg
sub
jns
incl
fisubrl
cmp
aam
rcll
ret
and
out
lods
repz
ud1
sbb
xchg
xor
lea
jle
sbb
fistl
and
sbb
fdivrs
mov
addl
sbb
push
popa
push
movsl
movsl
pop
out
lods
jne
xchg
xor
cmc
shl
adc
ja
xchg
fsubs
sbb
std
xor
cs
mov
sahf
jnp
jns
arpl
fsub
inc
pop
cmp
icebp
and
cmc
and
leave
mov
push
mov
adc
int3
push
nop
adcl
adc
jbe
fs
and
xchg
mov
mov
stos
dec
fsubrp
in
test
mov
push
cmp
andl
roll
mov
adc
and
movsl
pop
xchg
loopne
repz
push
sbb
nop
sbb
in
xor
lea
shrl
mov
cld
aas
or
in
jge
mov
push
loop
repnz
ret
push
mov
push
sti
inc
push
aam
dec
icebp
orl
pop
fldenv
rolb
push
add
jb
mov
sub
mov
add
cmc
movsb
adc
frstor
dec
xor
inc
enter
jge
nop
push
xor
cmc
inc
mov
or
dec
enter
dec
rorl
xchg
sbb
pop
out
mov
mov
jnp
dec
aaa
ja
dec
xchg
repnz
popf
mov
pop
sahf
mov
repz
nop
adc
mov
cmp
cmp
mov
and
shl
pop
mov
add
out
xchg
cmp
push
push
cmpsl
insb
paddb
ljmp
imul
scas
outsb
adc
adc
clc
insb
sub
sub
jae
nop
cwtl
sbb
jp
sub
jb
lea
mov
mulb
adc
inc
jae
adc
jge
leave
adc
pop
in
xor
sti
xchg
lods
lds
xor
add
mov
mov
nop
sub
lcall
sbb
add
add
mov
fcom
das
test
xlat
nop
and
or
jl
lds
lds
orb
xlat
mov
xchg
fwait
push
out
stc
xor
inc
shl
xchg
das
adc
lahf
stos
cmpsb
dec
setnp
lret
pop
cld
adc
push
mov
cld
out
outsl
movsl
in
stos
addb
xchg
insl
and
arpl
or
mov
clc
rclb
ret
fs
mov
push
rorb
pop
inc
xchg
lret
rorb
xchg
arpl
cwtl
jle
andl
fisttps
cmp
mov
push
out
insb
iret
movsb
hlt
outsb
cmc
xor
dec
stos
cmpl
daa
loopne
movsb
inc
ret
jecxz
push
out
pop
xlat
stos
mov
mov
and
xchg
in
adc
mov
cld
push
aas
fidivrs
cmp
jnp
mov
nop
stc
mov
cmpsl
push
mov
daa
mov
pop
xchg
arpl
mov
ja
mov
sub
ret
pop
and
sub
shlb
popa
int
test
xor
or
pop
pop
jmp
loop
dec
out
mov
cs
dec
lock
push
cmp
add
shrl
adc
mov
iret
repz
sbb
mov
cmp
inc
lds
fcomi
push
daa
je
push
fs
mov
xor
lahf
dec
jle
or
push
xor
jo
sbbb
add
rolb
jnp
pushf
pop
test
je
push
push
dec
pusha
movsb
js
push
xchg
adc
mov
inc
xchg
mov
jno
shll
das
pop
mov
mov
gs
fwait
pop
xor
sub
leave
fs
lcall
xlat
sub
sti
push
xchg
test
stos
xchg
cmp
jbe
lea
icebp
scas
std
jp
push
sbb
inc
xchg
test
xlat
sub
aad
rorl
aad
jns
ret
call
sub
stc
std
sub
xor
loop
cld
aad
mov
and
test
jae
push
cltd
mov
mov
inc
roll
std
add
fnstsw
mov
lock
sub
xchg
push
mov
adc
movsb
xor
xor
sub
dec
ret
mov
pop
adc
pop
sbb
inc
lds
jo
mov
sti
ja
aaa
pop
jnp
add
inc
jnp
sbb
clc
fnstenv
in
cmp
dec
lods
xchg
les
dec
stos
jne
add
aas
lea
push
jno
out
mov
mov
mov
adc
movsb
sbb
xchg
sub
pop
xchg
jmp
pushf
shll
cli
cs
add
fdivrl
jns
pop
cmc
xchg
push
nop
jo
add
jmp
push
xchg
jns
and
jge
adc
jmp
pop
shrl
testl
jecxz
xor
mov
add
pop
enter
add
stc
adc
sub
clc
out
test
sbb
and
inc
js
cmp
outsl
cltd
jno
in
push
xor
xor
dec
sub
fiadds
pop
addr16
mov
sahf
sti
scas
in
jge
cmpsl
mov
popf
push
outsb
mov
aam
push
mov
sbb
movsb
hlt
enter
mov
sbb
mov
jae
dec
packsswb
repz
repz
scas
pusha
jnp
divl
inc
push
outsl
iret
and
mov
pushf
inc
ds
sbb
iret
ret
leave
shll
fisttpl
xchg
pop
bound
cmp
inc
stos
xchg
ljmp
pop
lahf
out
iret
sbb
lahf
adc
pusha
sbb
and
pop
pop
aas
fucom
in
and
mov
mov
xchg
xchg
jb
lock
movsl
fldt
aas
inc
push
add
jge
mov
sub
pop
xadd
clc
out
jb
mulb
mov
mov
sti
jae
insb
popf
inc
or
stos
dec
xchg
test
inc
test
push
pop
addr16
mov
mov
mov
or
clc
pop
or
repz
cli
inc
or
mov
and
xchg
pop
xor
aas
sbb
arpl
faddl
adc
psubb
sahf
aad
adc
rep
xchg
insl
testb
dec
cltd
sub
daa
jge
pop
sbb
pop
add
clc
scas
in
add
adc
clc
movsl
fwait
dec
xchg
jle
dec
lret
mov
sti
xchg
or
push
cmp
das
arpl
fisttpl
int
ljmp
andb
adc
scas
push
fmuls
push
sahf
pop
mov
hlt
jns
xlat
in
mov
rol
mov
shlb
pop
in
lahf
push
cmp
sbb
cld
sub
mov
test
mov
fstp
dec
jnp
cmp
inc
test
xchg
aad
xchg
adc
or
inc
cltd
pop
aad
popa
sbb
nop
imul
std
xchg
ja
psrad
call
pop
stos
cmpsl
daa
sbb
jmp
loop
in
sbb
jb
adc
dec
sbb
insb
push
and
icebp
mov
movsl
pop
jbe
jmp
xchg
mov
jl
lds
les
push
loope,pn
test
jo
xchg
daa
test
and
lea
xchg
cld
sbb
mov
mov
push
nop
xor
sbb
stc
jb
mov
out
cld
mov
xchg
popa
inc
adc
fsubs
sbb
add
pop
fwait
jge
push
cwtl
icebp
inc
xchg
loope
in
je
xorl
cld
sub
add
sub
cmp
pop
xor
adc
cltd
data16
test
push
jle
and
mov
out
addr16
xor
out
cmpsb
adc
push
in
mov
imul
xchg
ja
ds
cmp
ljmp
insb
pop
cmp
xchg
cwtl
adc
es
jne
push
out
dec
pop
nop
lret
sar
scas
inc
lahf
jmp
adc
ret
je
pop
pop
jmp
movsl
fs
daa
int3
or
loopne
cmp
sbb
pop
jnp
dec
pop
scas
push
push
iret
adc
inc
out
mov
ficomps
imul
hlt
out
clc
loopne
jb
test
fimull
and
fiaddl
aad
lcall
xor
mov
shlb
inc
mov
aad
cld
adcb
inc
xchg
es
fs
loope
lret
fwait
xchg
sahf
xchg
mov
shrl
ss
and
inc
sbb
outsl
inc
fdivs
mov
jb
arpl
pop
int
mov
mov
push
lea
or
mov
loop
test
add
aad
iret
in
mov
push
ljmp
pop
je
adc
fadds
scas
adc
push
add
div
fmul
jg
mov
inc
popa
fisubrs
into
cmpsl
sbb
into
gs
add
lock
stos
xchg
hlt
cmp
test
repz
arpl
fsts
jns
push
adc
adc
je
in
or
add
mov
mov
add
dec
or
fnstcw
js
pop
cs
cli
movsb
sub
or
aad
outsb
fmulp
mov
imul
idivb
sub
adc
shll
insb
adc
inc
sub
idivl
add
aad
stos
mov
jne
lcall
cltd
pop
pushf
cmp
sahf
daa
addr16
or
stos
jno
fisubl
ds
push
add
mov
xor
ret
aas
movsl
sbbb
rcll
jnp
jnp
or
scas
dec
in
and
js
and
repnz
mov
sbb
cmpsl
movl
xchg
lods
fcomps
cmp
adc
adc
rcl
and
sub
sub
adc
dec
xor
mov
clc
push
push
gs
dec
mov
mov
cwtl
scas
dec
in
rolb
pop
sbb
xchg
fldenv
push
repz
int3
mov
sbbl
xlat
sub
imul
and
lods
dec
push
mov
xchg
rorb
lods
arpl
push
jg
mov
add
jnp
call
xor
and
ret
imul
sbb
cmp
mov
sub
pop
jmp
std
test
sahf
bound
mov
mov
xchg
addr16
mov
ret
dec
xchg
jns
pop
rorl
stos
dec
mov
xor
mov
adc
fisubl
push
daa
jae
insb
les
and
ret
imul
jmp
std
dec
pop
imul
hlt
mov
push
mov
mov
xchg
inc
stc
pop
pop
aad
or
sub
rcr
mov
and
jge
lcall
mov
mov
mov
aad
push
jo
setge
enter
imul
mov
roll
xchg
add
lds
mov
adc
or
mov
or
rcl
lea
aaa
movsb
imul
jo,pt
inc
xchg
int
cmp
mov
lcall
loop
sarb
dec
mov
js
popf
xchg
pop
lcall
jae
adc
movsl
leave
fs
add
loop
rcl
push
jp
jl
mov
notb
mov
mov
lods
sub
lods
ficoml
cltd
cmp
push
repnz
loopne
outsb
inc
lods
sbb
les
adc
jmp
stos
sbb
xor
mov
into
mulb
jb
sbb
or
loop
mov
and
dec
inc
adc
and
dec
movsb
inc
movsb
int
dec
adc
cli
inc
std
sbb
inc
repz
push
out
mov
cmpsl
push
mov
xorb
sarl
fcmovnbe
in
lcall
mov
in
addr16
mov
dec
push
adc
cmp
pop
cmp
into
mov
inc
xlat
std
mov
mov
or
loopne
lock
jno
push
pop
jle
mov
loopne
dec
mov
ja
jecxz
or
add
fsubs
cmc
jo
xor
xor
psrlw
mov
sahf
scas
into
xlat
out
add
iret
lock
jbe
sub
cmp
mov
xchg
arpl
xchg
loopne
sarb
addr16
arpl
fdiv
add
push
add
rcll
sbb
lret
sahf
inc
mov
xchg
inc
dec
lahf
cmpsb
cmp
aam
aam
pop
lahf
dec
std
cmp
dec
ret
mov
mov
aaa
push
mov
js
xchg
out
psrad
pop
rcr
fmul
out
icebp
or
dec
repz
pop
xchg
imul
or
add
aaa
std
pop
mov
mov
lcall
repnz
or
into
add
mov
test
add
adcb
insl
outsb
cmp
ror
xchg
mov
jge
cmp
jbe
dec
imul
and
lock
fisttps
cli
hlt
push
sub
std
lret
rorl
or
mov
fwait
popf
adc
arpl
aas
sbb
inc
xchg
push
ljmp
cmpsl
mov
pop
inc
stos
test
dec
cmp
popf
jbe
push
cmp
inc
into
sbb
mov
das
pop
and
push
pop
adc
sbb
jmp
jmp
int3
out
cmp
xor
mov
std
es
mov
xor
xor
adc
xchg
lret
or
insb
or
xorb
mov
stos
mov
sar
sub
sbb
popf
lret
mov
aaa
arpl
mov
cli
mov
xchg
arpl
sbb
mov
cmpsl
push
lods
addr16
sahf
scas
in
mov
test
cmp
inc
inc
push
inc
sbbb
test
push
xor
das
push
cmp
xor
mov
fbstp
xor
cmp
bound
cmp
sub
jmp
insl
sar
je
and
jb
adc
repnz
mov
dec
or
mov
adc
test
loopne
jnp
mov
adc
or
cmpsb
adc
mov
xchg
call
or
js
cltd
arpl
fdivs
sbb
dec
xor
inc
fistps
lock
xor
fistps
out
mov
cli
mov
int
xor
flds
mov
dec
pop
in
pusha
lret
sbb
pop
and
fucom
out
in
dec
jno
xchg
stos
lret
fdivrs
sbb
adc
add
mov
dec
into
fstpl
cltd
sbb
push
arpl
mov
xchg
add
pop
inc
arpl
stos
test
insl
cltd
xchg
lret
mov
jbe
gs
aam
inc
or
cmc
fistpll
jbe
pop
arpl
imul
or
scas
xor
lret
add
push
outsl
pop
sbb
daa
bound
xlat
outsb
lret
and
scas
sbb
mov
cltd
ljmp
sbb
loopne
cmp
sub
loope
ljmp
xor
and
in
lods
mov
xchg
jne
fisubl
cmp
sti
mov
inc
lcall
movsl
xlat
mov
mov
frstpm(287
insb
pop
pop
subb
imulb
and
cmp
xlat
sahf
push
cmp
and
sub
xchg
popl
sbb
clc
jl
stos
loop
push
sti
dec
jo
enter
jp
add
cld
aaa
sbb
mov
stos
xorb
hlt
inc
lahf
push
add
aas
adc
outsl
dec
imul
cli
das
inc
addr16
jo
mov
jb
xlat
mov
clc
out
arpl
sub
int3
out
pop
jne
fninit
pop
xor
and
mov
mov
fimuls
xor
pop
sub
mov
iret
sbb
pop
xchg
lock
xchg
mov
icebp
imul
insb
decl
out
and
or
or
or
iret
cld
out
inc
shrl
mov
out
sbb
stos
loopne
negl
pushf
push
jp
test
jns
mulb
dec
sub
jecxz
imulb
out
stos
xorl
adc
sbbl
iret
and
mov
and
mov
pop
test
push
pop
sub
xor
jl
push
dec
add
xchg
dec
outsb
dec
in
shl
and
daa
adcl
lcall
jecxz
pop
pushf
dec
xchg
dec
rorl
aad
lock
daa
hlt
jnp
fildll
testb
cltd
lods
jno
das
out
mov
jns
pusha
mov
sub
pop
packssdw
push
out
mov
popa
aas
in
mov
xor
adc
insl
sarb
mov
jge
scas
xchg
int3
rolb
pusha
add
pop
pushf
inc
popa
mov
js
mov
pop
jg
pop
lods
xchg
mov
out
push
inc
xchg
push
adc
fdivr
mov
in
add
mov
or
jae
mov
std
scas
out
inc
stc
aam
pushf
cltd
ss
or
xchg
fisubrs
pop
js
fwait
dec
mov
and
push
xor
dec
outsb
push
inc
push
or
dec
addb
push
ficompl
les
mov
ds
adc
subl
mov
cld
out
inc
sub
jl
xchg
cwtl
and
fdiv
push
dec
fmul
jmp
sub
xor
dec
pop
inc
lahf
xchg
mov
xor
xchg
or
inc
push
inc
addr16
sbb
loope
dec
lea
outsw
fmuls
rcl
sub
jp
es
and
pushl
sahf
fidivrl
jne
std
adc
jecxz
add
gs
add
pop
add
and
pop
xor
sbb
pop
insl
pop
sub
sub
push
mov
mov
mov
pop
push
mov
rorl
js
popf
popa
pop
les
loopne
cli
out
xor
out
lods
xchg
mov
mov
loope
fucomi
cli
ss
dec
mov
mov
lcall
int
pop
test
aas
xchg
mov
xor
pop
std
hlt
out
out
insb
loope
xor
loop
ss
mov
and
pop
push
nopl
push
dec
stc
cmp
cli
inc
push
and
sub
cmp
and
call
outsl
add
leave
daa
and
lods
fsts
outsb
pop
lahf
lods
loop
pop
aaa
inc
in
mov
shrl
dec
cwtl
adc
les
or
cmp
aaa
xor
or
in
cmp
sub
jl
addr16
roll
das
in
add
pop
xchg
xchg
cmpsl
mov
add
aad
fidivrs
in
and
test
push
pusha
push
int3
jmp
loop
mov
push
mov
inc
repz
xchg
sub
test
mov
cld
inc
mov
adc
dec
pop
mov
aaa
lods
pop
in
lea
add
jns
lret
pop
cltd
fs
stos
mov
and
xor
jmp
stos
add
icebp
mov
mov
inc
dec
scas
arpl
mov
aas
jge
mov
pop
jp
fcompl
sbb
lret
or
loop
mov
sub
cmpsb
jmp
mov
aam
ja
mov
lods
inc
fld
or
dec
in
fsubrl
xor
scas
mov
cmc
add
test
std
xchg
in
lods
and
loopne
test
cli
dec
and
sbb
mov
repnz
lahf
aad
lret
ljmp
popf
sbb
hlt
je
cmp
add
push
add
mov
inc
jmp
xchg
adc
mov
shll
xchg
nop
ret
incl
aad
mov
or
loopne
pop
sbb
nop
inc
pcmpgtb
cmp
aas
push
jnp
mov
loope
xchg
jne
lods
lds
fimull
add
dec
pop
outsl
jo
sub
jb
jo
sub
out
insb
jae
das
out
lods
mov
adc
in
lcall
loopne
clc
mov
mov
sahf
incb
or
das
mov
inc
mov
sub
cld
notb
loopne
and
lcall
js
fstps
xchg
sub
mov
push
cwtl
adc
addl
pop
push
and
jmp
adc
or
inc
jecxz
icebp
xchg
cld
movsb
add
daa
insl
cld
dec
mov
fcmovu
push
pop
push
fwait
inc
cli
xor
unpckhps
mov
push
cmp
jnp
and
sbb
icebp
add
hlt
push
sub
sub
popf
dec
int
or
ret
scas
mov
pushf
mov
or
mov
rep
stos
cltd
int
or
and
out
jno
pusha
int3
aad
push
fucomp
shlb
cmp
test
jbe
lods
popa
mov
xor
adc
outsl
cltd
pop
push
pop
adc
pop
or
in
xchg
push
loope
sbb
gs
in
mov
xchg
imull
sub
lea
mov
mov
sbb
adc
scas
mov
ret
shl
mov
push
repz
stos
or
mov
movsl
in
scas
test
jo
mov
nop
mov
mov
out
sbb
je
xchg
mov
cmp
mov
xchg
loopne
cmp
jbe
popa
xor
jo
push
add
in
sub
add
imul
lods
mov
repnz
xchg
xchg
push
pop
lret
sti
je
dec
fs
fsubrp
out
jg
mul
in
outsb
std
jb
xchg
lds
cmpsl
pusha
mov
dec
lods
pop
out
inc
xor
sub
movsl
inc
leave
stos
pop
js
lds
push
js
int
popa
addb
pusha
into
cs
hlt
or
pop
mov
push
mov
pushf
mov
jne,pt
iret
mov
xchg
mov
mov
out
subl
clc
xor
cld
mov
jnp
jo
push
inc
sbb
xchg
mov
adcl
stos
in
cwtl
adc
pop
add
mov
push
rep
mov
das
mov
dec
fistps
filds
popf
pusha
sbb
push
cmc
inc
sti
xor
and
mov
pushf
push
bound
movsl
jl
jp
pusha
jne
mov
cmp
jp
lods
ficomps
sbb
stos
fcoml
mov
stc
push
mov
push
fcoml
scas
mov
addr16
pushf
popa
inc
pop
jmp
pop
dec
dec
xlat
pop
sub
and
mov
mov
sub
lods
test
hlt
dec
inc
mov
push
mov
stc
mov
cmpsl
jecxz
push
xchg
imul
cmp
movsl
ret
movsl
push
inc
add
mov
ret
xor
imul
mov
push
mov
lods
test
insb
mov
lcall
add
mov
and
loope
pop
in
and
scas
lock
inc
push
lret
gs
jp
jne
push
lea
mov
movsl
sbb
ss
testb
fwait
mov
hlt
add
fisttpll
mov
pop
add
ljmp
and
xor
popf
mov
and
adc
popf
pusha
cmp
data16
mov
cmp
nop
out
mov
loopne
dec
repz
cmp
and
pusha
adc
push
test
mov
in
pop
stos
int3
sub
ret
mov
imulb
mov
pop
or
repnz
lret
repz
dec
pop
xchg
rcrb
xor
adc
jge
cs
aaa
fxch
mov
jecxz
shll
leave
jge
sbb
inc
xchg
pop
xchg
cld
mov
cmp
int3
nop
das
inc
mov
or
xlat
data16
repz
ret
pushf
cmp
hlt
sub
shufps
and
dec
popf
lahf
cld
sbb
sub
pusha
inc
cmpsl
pop
lret
inc
into
repz
scas
iret
sahf
in
sti
sub
and
xor
pop
int3
popa
sub
roll
imul
lods
rorl
in
cmc
sti
stos
sub
arpl
in
and
sub
daa
scas
aad
cmpsl
pop
mov
icebp
cmc
ja
sub
sub
sub
cmc
rolb
add
shrb
xchg
ret
inc
pop
mov
andl
clc
cwtl
xor
dec
lahf
into
adc
xor
mov
rcrb
mov
fmulp
int3
xor
popa
insb
jno
pop
jmp
push
adc
stos
pop
and
pop
sahf
test
push
sub
lahf
bound
inc
sub
call
xchg
mov
ljmp
adc
test
mov
dec
jbe
hlt
mov
xchg
sbb
mov
lret
mov
pop
clc
jbe
xlat
xor
mov
ss
lods
jecxz
mov
mov
or
outsb
push
test
push
ret
repnz
pop
cli
and
dec
call
mov
xchg
mov
mov
stos
not
insb
jnp
sahf
and
daa
pop
les
pop
popf
rep
xor
loopne
jle
lahf
movsb
jg
sbb
jnp
loop
shlb
out
push
lret
rolb
xchg
and
sub
or
cmp
mov
mov
icebp
push
and
scas
and
sub
iret
les
movl
int
sub
add
in
int
movsl
jmp
xchg
pop
add
mov
cs
lea
pop
pop
scas
sti
push
sbb
xchg
popa
push
lods
scas
add
lods
mov
push
imul
mov
out
sub
push
jmp
les
sbbl
xchg
sub
dec
rol
lds
das
stc
lods
or
cmpsl
jecxz
add
adc
mov
xor
xor
add
push
lds
lahf
cmpl
filds
dec
jle
mov
lods
scas
gs
int
out
movsl
mov
pop
mov
dec
inc
push
and
mov
scas
je
jns
push
mov
and
repnz
fdivr
aad
cmp
int3
sbb
adc
repz
jbe
or
fsts
divb
dec
jne
and
mov
test
mov
pop
inc
xor
cmp
mov
sbbb
fidivrl
adc
stc
imul
mov
outsb
out
loop
mov
and
lock
in
test
ret
cmp
jb
pop
xlat
dec
mov
jno
je
xchg
and
pop
xor
lea
fwait
push
cmp
mov
push
mov
daa
adc
and
cmp
inc
inc
push
sarl
add
jmp
dec
jl
adc
rolb
and
mov
test
push
inc
mov
push
push
jae
cmpsl
adc
add
in
mov
rcll
shl
sbb
push
test
lret
mov
mov
sarl
mov
add
inc
fwait
call
popf
out
fsubrp
insb
inc
ret
dec
scas
jne
add
push
out
sar
or
fsub
cmp
jbe
jp
movsl
shr
movsb
mov
sarl
cmp
and
out
pusha
out
aas
xchg
ficompl
in
add
pop
sbb
pop
out
out
les
lock
push
ljmp
adc
in
push
sub
inc
push
pop
jle
popa
and
pusha
out
lods
add
pop
shlb
lret
pop
xchg
mov
fcomps
cltd
mov
aas
subl
imul
and
daa
cmp
adc
lds
outsb
mov
push
push
popa
mov
xchg
pop
fsubl
cltd
jecxz
xchg
pop
fwait
dec
sub
sub
and
aad
sub
inc
mov
dec
inc
pop
ret
andl
addr16
mov
out
test
lahf
sub
push
scas
xchg
mov
pop
or
cmpsb
dec
sub
adc
sbb
jg
dec
pop
jno
xor
movsb
adc
xchg
mov
mov
add
dec
cmp
or
jnp
fdivr
jnp
in
pop
aaa
push
in
adc
mov
pop
iret
in
sub
adc
or
je
test
mov
repnz
xchg
jp
dec
pop
jg
add
into
push
and
call
pop
in
jl
push
sbb
fsts
adc
mov
add
cmc
push
jge
fnstenv
icebp
mov
mov
push
mov
add
push
inc
std
orl
cmp
cmp
mov
ja
stc
inc
cmp
shlb
or
shl
aam
arpl
sub
cld
push
xchg
cmc
mov
jmp
call
mov
js
bound
fistl
movsl
loope
inc
push
lahf
cwtl
pushf
pusha
cmp
fisubl
and
aam
sbb
mov
stos
dec
mov
adc
pop
shl
insb
dec
dec
and
xor
xor
push
or
mov
xor
xlat
or
fdivs
popl
dec
sub
jmp
sbb
push
dec
lock
insb
xor
xlat
xchg
mov
or
jns
aam
cmc
repz
add
std
dec
ds
xchg
push
mov
cltd
into
mov
xchg
mov
add
pushf
mov
aaa
inc
add
fdivrs
sbb
addr16
cmp
inc
jecxz
fisttpll
xlat
pop
scas
arpl
enter
mov
dec
out
push
adc
insb
add
xchg
in
push
pop
pop
jbe
insl
fisttps
das
in
sub
int3
dec
inc
dec
inc
divl
mov
mov
mov
popa
sub
or
fimull
cltd
je
jne
in
in
test
imul
push
sub
push
xchg
mov
mov
ja
fwait
jg
mov
push
mov
insl
stos
dec
das
cld
in
push
inc
lcall
cmp
aaa
hlt
jo
push
sahf
add
ja
lock
adc
inc
adc
lods
inc
enter
pop
mov
rcrb
mov
dec
add
aas
sub
jbe
das
leave
mov
arpl
and
int3
iret
cmc
mov
cltd
arpl
rcrb
jp
xor
adc
inc
adc
cmp
hlt
push
mov
sbb
mov
adc
xchg
in
mov
or
fidivl
ljmp
sub
and
sbb
add
rorl
pop
push
inc
mov
dec
cmp
in
cmpsb
stc
sub
cmp
scas
sbb
jnp
fdivl
lods
pop
call
call
push
bound
and
dec
adc
sbb
xchg
imul
nop
xchg
dec
ret
jl
cli
mov
andl
insl
into
lds
leave
inc
mov
rorl
testb
inc
outsl
scas
std
fadds
sbb
ss
adc
xchg
and
push
repz
pop
pop
sub
rcr
add
mov
lock
movsl
in
or
mov
mov
aad
xchg
lds
das
sbb
hlt
inc
jl
decb
sub
fisubrl
sbb
fbld
lock
cwtl
iret
in
cmp
xchg
push
gs
xor
aaa
outsl
adc
push
adc
rclb
js
sbb
in
sub
fistpll
dec
lret
jns
pop
bound
cs
test
cmp
jo
mov
les
jo
cmp
lea
mov
test
jmp
jne
pop
in
jl
sbb
cmp
push
jp
mov
stos
test
sbb
and
inc
test
out
cmp
adc
mov
outsl
xor
int
std
loop
xchg
das
mov
cli
ret
ja
repnz
xlat
inc
rorl
inc
jg
mov
jb
cmp
pop
movsl
sub
push
adc
jecxz
rorl
xor
xchg
xor
sbb
mov
hlt
jae
sub
sbb
xor
popa
push
sbb
mov
mov
scas
loope
jb
daa
ss
push
mov
and
dec
adc
cmp
rcrb
mov
and
scas
cmp
lods
push
xorb
and
cmp
fwait
inc
jbe
pop
out
stc
jne
ds
fadds
repnz
fadds
mov
xor
or
rclb
cwtd
inc
fisubrs
push
fdivs
push
cmc
xchg
outsb
xlat
lock
int3
fildl
xchg
shrl
pop
sbb
push
addr16
xchg
movsb
orl
push
out
imul
lds
fistpl
fnsave
leave
icebp
pushf
push
xchg
or
adc
das
js
xchg
pop
dec
addb
lods
and
les
ret
inc
test
jne
jns
xlat
push
aas
adc
jl
xlat
jge
mov
dec
sub
xor
adc
mov
daa
pop
push
int3
inc
icebp
xor
jns
and
sub
fwait
inc
mov
gs
pop
fistpll
jg
mov
adc
push
pop
jnp
ss
leave
imul
mov
ficoml
xor
lcall
cli
sub
mov
push
mov
xor
sbb
cmp
pop
stc
push
es
jl
arpl
in
testl
fs
dec
repz
subb
mov
xor
cmp
push
lods
xchg
das
test
cld
test
xchg
push
shll
adc
or
push
jle
and
push
sub
inc
outsl
lock
mov
mov
in
add
lods
aas
sbb
repnz
jl
mov
fwait
inc
rcl
leave
into
jne
bound
cld
imul
imul
jno
rclb
inc
and
xchg
push
ret
icebp
jno
pop
inc
and
shll
and
cld
dec
dec
scas
and
push
paddq
push
mov
repnz
repnz
or
shrb
dec
addl
dec
lret
fisttps
enter
pop
pop
in
cld
stos
or
xchg
cmpb
mov
jbe
push
xchg
dec
jb
lds
adc
cmp
shlb
arpl
cwtl
and
movl
aas
lds
push
test
jmp
mov
or
test
sbb
mov
and
cwtl
pusha
mov
dec
pusha
mov
jl
push
mov
sti
cmp
or
sub
xchg
sub
scas
out
mov
incl
xchg
scas
mov
and
std
pusha
out
lock
jo
xor
int3
adc
ret
xlat
lcall
jp
lock
andl
ds
inc
dec
imul
xor
ljmp
into
mov
xor
dec
shrl
dec
loop
inc
aas
gs
cmpsb
arpl
movsb
mov
insb
push
xchg
add
or
scas
loope
cli
jecxz
jp
and
and
ds
cmpl
fldcw
fidivs
clc
pop
daa
ficompl
pop
les
xor
jge
clc
shll
mov
add
out
arpl
cmp
push
xchg
int3
jl
adc
sbb
dec
iret
sti
dec
push
rcl
adc
add
sbb
cmp
dec
mov
std
sar
lds
jo
stos
or
pushf
pop
dec
pop
rcr
cmpsb
fisttpl
add
add
jl
cmp
sbb
mov
addr16
lods
insb
cs
std
ficoml
pop
jb
outsb
lret
xchg
vcomiss
and
mov
cmp
mov
pusha
push
push
shrl
cmpsb
test
jl
lock
push
sub
lret
xchg
lods
push
pop
jge
imull
repnz
arpl
pop
sub
or
stos
fisttpl
aaa
subb
fs
mov
dec
aas
cmpsl
loopne
sub
push
pushl
stc
xor
popa
mov
outsl
push
outsb
les
lcall
dec
jge
stos
or
and
fnstenv
cmpsl
push
pop
sub
in
xchg
repnz
leave
dec
jnp
loop
aas
mov
rorb
int
mov
gs
aaa
pop
xchg
fwait
and
mov
xchg
in
out
fsqrt
hlt
and
test
push
and
xchg
in
popl
mov
and
jae
inc
fwait
jge
jns
xchg
xchg
add
mov
in
aam
cmp
cmp
int3
idiv
shr
ss
stos
jl
mov
call
pop
cmpl
iret
xlat
or
or
dec
pushf
ret
xor
daa
stos
dec
in
scas
aaa
dec
xor
sti
fcomi
and
push
in
pusha
mov
aad
pusha
mov
pop
xchg
mov
sahf
stos
icebp
inc
mov
daa
or
test
popa
rcrb
add
and
cmpsl
adc
insl
cmpb
or
repnz
nop
jl
addr16
enter
sbb
mov
movsb
xchg
or
pop
sub
xlat
adc
mov
jae
dec
mov
lods
inc
mov
or
mov
mov
dec
in
ret
pushf
cmpsb
out
xchg
xchg
cmpsl
sbb
pop
sbb
mov
in
jg
xchg
and
jo,pn
mov
push
mov
lods
testl
in
pop
subb
clc
fisttpl
in
cmp
aaa
push
sbb
lcall
and
and
xchg
and
dec
or
imul
inc
push
xchg
jmp
mov
rcl
js
dec
cmp
lahf
out
sbb
scas
pop
cmpsl
sub
stc
ror
mov
aas
aam
mov
and
cltd
insb
repnz
scas
mov
and
loopne
insl
inc
in
sahf
aas
sub
loop
js
xchg
enter
push
movsl
jmp
xchg
mov
xchg
sub
jge
cli
adc
std
mov
stos
sbb
aad
and
sbb
sbb
mov
mov
mov
add
nop
push
ror
loop
outsl
mov
sbb
jmp
xor
pop
sub
mov
test
in
and
or
movsb
mov
jl
and
das
add
out
adc
adc
repz
mov
stos
xchg
aaa
adcl
xor
iret
inc
sub
pop
iret
push
test
icebp
push
shl
std
pusha
mov
pop
sub
push
push
addb
gs
fildl
sbb
stc
ret
cmpsb
mulb
std
cmpsl
sub
or
pop
inc
leave
ftst
pop
in
jmp
mov
mov
lret
cli
mov
mov
out
dec
add
ret
add
push
cmp
call
sbb
add
xor
inc
lock
loopne
mov
mov
and
inc
pop
sub
xchg
jmp
jne
jle
gs
push
pop
cmp
pop
inc
pop
jns
sbb
sub
inc
enter
test
lret
sub
inc
pop
mov
sarb
insl
int3
fcompl
sahf
xor
cli
inc
jge
aaa
pop
ficompl
cld
mov
jmp
into
dec
xchg
iret
cltd
shlb
mov
add
lods
lea
sub
sbb
pop
dec
in
mov
pop
push
mov
cmp
fstpl
scas
sub
adc
cmp
popf
jno,pn
es
hlt
in
sbb
or
out
fisubrl
ja
sbb
daa
inc
sub
rcl
bound
sbb
inc
enter
sbb
popf
ja
insb
pop
mov
xor
mov
inc
rcrb
inc
pop
sub
movsb
push
ret
dec
pop
loope
xchg
cmp
mov
mov
push
xchg
repz
sbb
dec
outsl
jmp
xchg
jmp
sbb
cltd
dec
jg
sbb
mov
sarl
push
testb
ret
cmp
adc
icebp
mov
outsb
sbb
mov
mov
cmp
adc
iret
sub
leave
jns
cli
mov
out
lds
ja
mov
daa
lods
loopne
and
out
xchg
divb
push
and
shl
sbb
insb
sub
aaa
stc
mov
cmp
pop
dec
test
cmp
js
mov
out
pop
insl
aam
scas
leave
pop
lahf
movsl
adcb
aas
sub
cmpsl
or
mov
sahf
jns
out
pop
jl
jo
xchg
mov
sbb
adc
test
outsb
push
pop
shll
fsubrs
insl
test
push
pop
std
cmp
in
data16
int
out
jle
cmp
cmpsb
jp
aad
dec
aas
out
jle
or
insl
xor
daa
xor
sub
mov
or
inc
pop
push
push
orb
and
sub
inc
test
shrl
jecxz
xor
je
mov
pop
movsb
jmp
xchg
jecxz
push
sub
in
mov
inc
clc
pop
leave
inc
mov
pop
push
pop
stc
fwait
mov
movsb
and
xchg
mov
and
ja
imul
add
in
leave
push
inc
inc
popa
lods
inc
in
aam
adc
inc
lds
pop
cld
aaa
or
or
mov
xchg
mov
push
repnz
and
ret
mov
incl
std
insl
push
xchg
cmc
pop
test
and
dec
stos
aad
fcoml
adc
das
mov
cli
dec
xor
push
inc
mov
mov
mov
add
aas
xorb
repnz
icebp
into
ret
mov
xorb
addr16
xchg
mov
ja
or
ja
push
mov
dec
leave
adc
jns
out
fisttpll
sub
inc
aad
jp
mov
lea
add
std
pop
dec
sbb
ret
ror
sbb
dec
adc
mov
cli
nop
jle
push
sbb
inc
and
icebp
cltd
sbb
loopne
fwait
je
loop
sub
shl
stc
out
jno
push
outsl
mov
xchg
or
cmc
lea
push
push
fisttpll
fbstp
pushf
mov
pop
rcrb
scas
fs
movsb
aad
je
pop
loopne
xor
sarb
addl
sub
call
jnp
lock
push
push
and
scas
stos
gs
addr16
in
ror
ja
pop
lahf
test
cmp
and
xchg
lock
or
mov
cmp
adcl
call
mov
loope
out
xchg
and
aas
inc
ret
jg
xchg
add
sbb
mov
fsubrp
xchg
jmp
sahf
in
mov
fcomps
popa
paddusb
cmpsl
pop
in
ja
adc
push
mov
imul
std
repnz
inc
int
cwtl
dec
dec
rcrb
cmp
add
and
mov
jnp
push
cmpb
adc
or
rcl
test
leave
and
inc
stc
add
jecxz
cmpsl
ret
mov
lods
xchg
and
in
xchg
insl
push
mov
sti
stos
aam
les
es
jo
mov
cwtl
outsb
icebp
mov
sarb
sub
add
pusha
bound
mov
gs
pop
jmp
push
stos
test
int
mov
or
decb
and
xchg
loop
repnz
adc
add
mov
lds
pop
enter
inc
nop
imul
insl
enter
push
movsb
dec
dec
call
xchg
xor
idivb
sbb
rcll
sbb
sbb
sti
jae
fisttpll
inc
fcoms
xchg
cmp
xchg
inc
iret
mov
movsb
cs
push
or
outsl
mov
mov
movsl
cmp
push
cwtl
mov
adc
add
hlt
jae
pop
inc
sub
push
pop
inc
icebp
mov
mov
cmpsb
jl
outsb
adc
ljmp
sub
mov
dec
sub
mov
lods
inc
das
lret
lods
stc
ja
popf
or
rorl
call
fcoms
fstl
mov
xor
add
test
lcall
or
xor
icebp
scas
mov
adc
into
jae
adc
rcrl
pushf
xchg
fs
lret
mov
imul
scas
xchg
es
mov
dec
jecxz
hlt
mov
enter
jle
xor
cmp
sub
out
aas
xchg
jno
cmpsl
test
add
outsb
scas
pop
mov
mov
sahf
sub
mov
mov
out
or
xchg
push
mov
les
cmpsb
sarl
or
data16
mov
push
pop
shll
or
jge
cld
in
data16
cmp
pop
outsl
inc
inc
cmc
dec
leave
in
adc
push
out
and
sti
dec
mov
adc
scas
mov
add
insb
fstpt
clc
cmp
in
scas
add
aaa
lahf
mov
push
dec
mov
stos
fs
sbb
mov
fcompl
das
leave
push
dec
jne
test
shll
jns
or
inc
push
fstl
push
cmpb
mov
in
imul
insl
mov
and
sar
pushl
adc
mov
dec
pop
mov
jnp
mov
adc
ja
cmp
fcmovbe
data16
jbe
imul
mov
sbb
andb
outsb
sub
imul
sbb
nop
xor
push
jmp
jge
rorl
add
jno
cmp
jbe
inc
push
sbb
sub
push
sub
cltd
push
mov
mov
jge
xchg
jle
in
sbb
loop
sbb
pop
ja
xchg
cld
scas
push
loop
in
mov
sbb
fwait
movsl
gs
roll
mov
stos
adcl
dec
add
and
aaa
roll
or
dec
push
icebp
daa
sbb
inc
in
jmp
cmpsl
push
cmp
push
xchg
xchg
mov
inc
pop
pop
nop
nop
cmpl
mov
aam
xchg
jne
or
mov
fimuls
dec
les
push
movhps
movsl
lea
mov
jmp
mov
and
inc
scas
insl
scas
and
jno
xchg
add
popf
add
mov
inc
jnp
cmp
sbb
xor
mov
into
fcmovbe
jb
sub
mov
loop
xor
out
add
mov
mov
mov
inc
mov
popf
fmuls
mov
mov
push
push
shrl
gs
insb
pop
testl
sbb
std
add
shll
add
xchg
adc
rclb
pop
addr16
xchg
mov
rcrl
push
mov
inc
icebp
add
cmpsl
jg
mov
in
outsb
pop
adc
adc
adc
xor
and
orb
mov
addr16
or
sub
ljmp
jl
not
push
adc
test
jle
xchg
les
mov
gs
addr16
fidivrl
stos
add
mov
push
inc
call
mov
cmpsb
pop
mov
sahf
push
add
aad
subb
popf
inc
sbb
jg
mov
sti
cmp
mov
xor
mov
in
cmp
add
dec
scas
sahf
shlb
rcr
fildll
mov
adc
mov
ljmp
ret
push
or
loopne
jecxz
sbb
je
sub
test
hlt
or
inc
cmp
mov
push
popf
shl
lds
and
adc
pushf
pop
mov
in
cmp
lahf
and
sbb
cmp
int3
push
addr16
mov
pmovmskb
pushf
lret
push
aaa
loop
cmp
cld
in
mov
adc
lcall
adc
and
loope
leave
jb
xchg
adc
mov
mov
add
outsl
pusha
sbbb
push
pop
pop
cmpsb
lahf
adc
cmp
pop
xlat
jnp
adcl
je
cld
sbb
inc
mov
sub
inc
out
add
mov
pop
push
imul
movsb
dec
fisubs
loop
notb
add
leave
lcall
hlt
or
jae
and
in
leave
cmp
cwtl
inc
lret
cwtl
ficomps
fnstsw
ds
aam
xchg
xchg
and
add
pop
insb
repnz
add
mov
add
out
inc
push
and
sbb
xchg
rorl
sub
lea
xchg
pop
clc
inc
adc
daa
and
pop
je
dec
negb
push
dec
pop
and
cld
stc
sub
in
cmc
push
cmp
jne
sub
out
inc
in
and
push
sub
clc
cld
rclb
pop
xchg
icebp
mov
vpmacswd
adc
mov
cs
stc
scas
cld
or
mov
and
mov
cwtl
mul
subb
dec
leave
adc
cmp
std
dec
sbb
xor
loop
jo
sub
scas
sti
xor
mov
or
dec
push
mov
xor
push
cmc
pop
in
xchg
test
ret
dec
push
dec
jg
in
mov
xor
pop
add
cmp
lret
repnz
cmp
test
fdivrs
add
inc
into
fcmovu
mov
flds
jecxz
subl
mov
or
and
cmp
mov
fisttpll
push
xor
cli
sub
rolb
inc
xchg
xchg
aam
push
and
sub
adcb
mov
sub
pop
int
sub
and
rcrb
push
mov
out
dec
dec
fnsave
test
dec
inc
mov
mov
sub
fiaddl
jge
pusha
pop
fcmovb
or
sahf
call
push
inc
fcmovne
cmp
inc
xor
push
add
mov
xchg
das
aad
pop
jle
jge
idivl
ja
sub
push
js
cmpsb
pop
cmp
add
test
dec
lahf
cs
adc
lea
sub
push
dec
popa
ljmp
sub
xchg
xor
cld
aaa
xchg
jo
in
mov
pop
int
mov
or
int3
sbb
sub
movsl
xor
pushf
dec
addb
push
outsb
lcall
lret
sbb
inc
mov
notl
cmc
hlt
outsl
mov
pop
cmpsl
ret
xchg
rclb
sub
push
leave
xor
mov
jecxz
cmp
adc
mov
and
mov
jb
or
mov
repz
or
fmulp
faddl
or
sbb
outsl
mov
inc
inc
push
xchg
fldl
test
cmpsb
xlat
ljmp
std
or
add
sub
sti
mov
jbe
pop
insb
xchg
shrb
scas
cs
sbb
call
mov
out
arpl
mov
pop
aam
lods
js
inc
push
and
mov
adc
int3
sub
out
fmull
mov
mov
mov
pushf
fistpll
aas
sbb
andb
cs
xchg
pop
fdivr
dec
xchg
add
es
ret
mov
jb
xor
repnz
add
es
xchg
outsl
mov
std
shll
pop
imul
es
or
cmp
dec
push
cmp
pop
int3
in
lock
test
jno
mov
nop
inc
push
int3
pop
push
je
cmp
or
pop
cmp
dec
xchg
mov
hlt
sbb
js,pt
cwtl
xchg
imul
hlt
out
repz
enter
rcrb
xchg
repz
xor
mov
sbb
sub
and
mov
inc
mov
call
jg
mov
fs
cmpsl
fs
mov
pop
xchg
mov
insb
xor
pushf
push
push
movb
mov
xor
in
fsts
pusha
adc
sub
mov
aad
popa
insl
add
cltd
cmp
sarl
mov
mov
out
sti
fmuls
lods
mov
jne
idivl
xchg
jl
mov
adc
lcall
adc
jbe
sbb
fsubl
movsb
xchg
xor
mov
xchg
push
dec
cmp
push
stos
cmp
imul
adc
dec
pop
push
push
int
sbb
lret
out
push
insl
mov
mov
pop
divl
dec
leave
and
sbb
into
sti
inc
rcll
int3
jae
xchg
jnp
loope
adc
ds
repnz
out
imul
xchg
mov
or
repnz
mov
xlat
sub
movsb
stc
mov
out
xor
adc
imul
enter
cmp
mov
popa
cs
pop
repz
push
add
pop
add
dec
adc
mov
dec
xchg
cld
add
push
push
mov
in
cmp
dec
or
inc
or
cmp
pop
rcrl
shl
sbb
leave
adc
ret
push
sbb
cmp
insl
xor
push
nop
add
jmp
lods
sub
ror
ss
pop
push
sbb
lods
sub
sbb
pop
dec
nop
xor
movsb
sub
pop
and
xchg
shl
sbb
pop
push
imul
sti
lods
int3
jge
popf
jno
push
xchg
lock
cmpsb
sbb
jge
xchg
xchg
orl
repnz
jl
inc
cmp
addb
lds
ds
jne
int3
mov
addb
push
jo
pop
rclb
lds
xor
mov
movsl
mov
mov
mov
and
insb
or
mov
daa
fidivs
ret
jmp
inc
add
dec
jns
sbb
dec
cld
rcrb
std
inc
or
mov
and
push
aam
repnz
push
jne
pop
xchg
add
subl
xchg
jg
and
lahf
mov
fsubrl
stos
jno
es
or
popa
rolb
inc
xchg
loopne
ja
lods
ds
insb
xor
js
mov
mov
cld
inc
xor
cmc
pushf
inc
jecxz
mov
ret
push
pop
outsl
or
push
and
add
xchg
adc
repnz
and
dec
xchg
adc
jmp
stos
popa
imul
jns
out
jbe
cld
dec
mov
pusha
jl
clc
push
xor
mov
lcall
int
lret
das
push
nop
outsb
popa
testb
gs
push
shrl
fstpt
jle
jae
inc
dec
mov
scas
xchg
call
jl
dec
dec
sbb
adc
lret
outsb
push
dec
push
jl
fidivrl
mov
push
dec
fdivrs
sub
cmp
mov
mov
xor
adc
inc
out
movsl
xchg
das
mov
insb
into
mov
sub
pop
mov
lea
enter
jmp
js
mov
fidivl
stos
cmpl
test
imul
cmpsb
fnstenv
mov
xchg
fldenv
pop
insb
jo
mov
lds
cmp
adcb
and
icebp
repnz
or
inc
lcall
and
mov
fldt
outsl
or
dec
inc
insb
push
nop
mov
cwtl
mov
inc
out
push
loop
inc
xor
mov
loopne
adc
mov
ljmp
mov
xchg
pop
daa
out
lods
pop
int
add
mov
pushf
mov
je
stos
push
cvtps2pd
gs
jmp
mov
repnz
add
je
lds
jno
mov
xchg
push
fldt
in
sbb
addl
jns
push
push
loope
push
ljmp
mov
add
insb
lahf
sub
push
shrb
stos
mov
xlat
and
out
movsl
sti
adc
fsubrl
xchg
or
mov
mov
xchg
mov
adc
int
sbb
pop
push
mov
dec
push
sbb
or
icebp
loope
pop
or
sub
cmp
xchg
lahf
addr16
cmpl
lods
jle
xchg
cmp
or
ds
adc
test
aad
imul
sbb
dec
ficompl
fsubrl
xorl
xlat
lcall
xor
inc
push
pop
loopne
pop
mov
cmpsl
loop
inc
outsb
xor
sub
adc
dec
loopne
repnz
xchg
jno
sub
and
rol
emms
push
cmp
jae
scas
loop
icebp
jmp
push
fwait
and
pop
pop
adc
into
sbb
je
dec
mov
dec
and
in
push
pop
xor
or
bound
call
dec
lcall
cmp
repz
xchg
sub
sbb
test
push
pop
clc
imul
add
sarl
daa
push
adc
in
ss
jg
es
subl
sub
sbb
mov
push
or
stos
cli
pop
dec
les
divb
or
dec
out
inc
xchg
dec
mov
nop
push
je
enter
xchg
mov
or
push
aas
mov
cmpsb
ds
negl
mov
arpl
jno
jae
push
cmpsl
inc
sub
sbb
jmp
bound
jge
xor
inc
call
test
repz
cmp
adc
fisttps
mov
or
aas
test
sub
stc
push
in
sbb
cli
aad
js
sbb
js
insl
lods
lods
cltd
stos
lods
mov
cmp
dec
sahf
pop
call
daa
sub
arpl
bound
sub
insl
xrelease
clc
cltd
arpl
pop
xchg
xor
xchg
or
pop
inc
mov
test
lret
sbb
stos
add
mov
pop
sbb
sbb
xor
pop
arpl
push
and
jbe
rorb
out
sarl
pop
ds
push
cmpsl
cmp
dec
rorl
jae
ja
mov
jns
sbb
jecxz
jl
repnz
insb
repz
jecxz
scas
repz
ja
test
test
sbb
and
ss
add
xor
mov
js
cmp
mov
add
mov
mov
mov
insb
mov
dec
dec
and
ret
xchg
shlb
pushf
out
or
fwait
mov
clc
call
addl
cmpsb
ret
lods
mov
xchg
jnp
sahf
mov
int3
xchg
aaa
rorl
mov
imul
push
xchg
fidivl
out
cmp
inc
xchg
xchg
ja
sbb
test
dec
in
adcb
orb
mov
pop
out
xchg
jne
adc
jno
ja
leave
push
xchg
push
call
pop
cmp
sbb
jb
mov
pop
cmp
imul
and
out
cmp
xchg
std
xchg
scas
enter
in
mov
xchg
icebp
mov
hlt
xchg
mov
mov
adc
cltd
push
cmp
xor
and
out
mov
sbb
ficompl
mov
xchg
push
mov
or
inc
inc
cmp
jmp
test
pop
out
out
fisubrl
imul
or
jge
mov
pop
frstor
movsl
outsl
call
cli
hlt
cld
cld
std
roll
dec
sub
lock
mov
sbb
jbe
fimull
aas
and
lds
int3
sti
shr
push
mov
jg
pop
xor
in
mov
stos
push
cmp
insb
sti
repz
ret
loop
push
sahf
xchg
jne
push
pop
push
movsl
xor
jnp
push
push
mov
pop
push
stc
push
cmp
or
sbb
icebp
int3
mov
push
pop
push
clc
insl
pop
push
fisubrs
jle
mov
sbb
jmp
aas
mov
mov
cmpsb
mov
pop
gs
aas
pop
fisubrs
sub
inc
shll
push
xchg
cmp
lods
les
inc
rcrl
push
dec
cmp
je
fimull
inc
test
jecxz
sbbl
dec
mov
mov
fdivr
aaa
mov
int3
sbb
pusha
movsl
iret
loopne
adc
xchg
mov
aad
dec
xchg
test
cmp
inc
mov
data16
mov
push
fldpi
lret
mov
enter
mov
es
sarb
mov
mov
xlat
jp
jecxz
add
jae
imul
lahf
out
pop
xor
rolb
cmpsb
or
xor
cltd
leave
mov
dec
xor
jle
fisubl
add
pop
pushf
sub
rcr
xchg
pop
push
push
adc
mov
sub
call
pop
mov
xchg
push
iret
cmp
inc
out
fwait
test
orb
stos
or
jb
enter
roll
push
xchg
lcall
dec
ret
std
test
data16
push
jle
push
sbb
mov
xchg
stc
pop
pop
out
ja
mov
jnp
add
add
sub
imul
das
push
adc
bsf
enter
dec
repnz
mov
stos
out
mov
add
sarl
dec
mov
pop
inc
mov
push
filds
push
enter
loopne
insl
iret
call
mov
lods
cltd
inc
bound
pop
xor
fstpt
ftst
std
aaa
rcrl
imul
icebp
mov
inc
pop
mov
add
dec
in
mov
adc
aad
xchg
cmc
cmpsl
icebp
jge
mov
or
jno
fmuls
ljmp
jne
adc
mov
ret
xorl
or
xchg
ss
push
jge
inc
imul
jno
sti
inc
push
in
sbb
pop
int3
cmc
sbb
dec
jae
cltd
push
call
xor
stos
mov
mov
lock
jp
sbb
mov
mov
nop
ss
pop
ljmp
inc
daa
jmp
int3
pushf
inc
in
add
pop
mov
insb
xchg
adc
ss
jp
imul
shl
add
jge
or
int3
out
shr
add
dec
sbb
pop
push
call
mov
outsb
dec
cmc
lds
test
sub
pop
lret
roll
and
cmpsb
push
lcall
xchg
and
test
cmp
fildl
lds
push
xchg
xchg
jnp
cmp
nop
mov
lods
or
push
and
test
mov
jge
int
movsb
loope
xchg
mov
mov
int3
cmc
int
lret
mov
sub
sub
cmp
cmp
add
shl
or
add
mov
bound
es
addr16
incb
divb
js
mov
jb
add
mov
les
jge
push
or
sbb
mov
aad
sahf
pop
hlt
xlat
adc
mov
outsl
adc
mov
outsb
lds
inc
inc
push
daa
hlt
inc
loope
fcmovnbe
enter
shrl
rclb
mov
pop
nop
in
xchg
xchg
mov
lret
leave
dec
jns
jg
mov
je
mov
in
xor
inc
cmp
rclb
popf
jp
pop
mov
lea
cmpsl
and
add
push
lret
sub
imul
xchg
dec
mov
inc
jecxz
push
stc
std
das
mov
imul
imul
clts
or
xchg
pop
pusha
das
nop
cmp
xor
test
imul
pop
cmp
in
sub
xchg
out
pop
shrl
std
push
sub
in
imul
fnstcw
aas
insb
or
cmp
cld
nop
fucomip
push
sti
sub
mov
ljmp
inc
aas
data16
and
cmp
mov
cmp
xchg
mov
adc
fs
movsb
mov
stos
popa
cmp
movsb
sbb
dec
sub
idivb
xor
mov
bound
je
jmp
inc
outsl
cli
fisubl
call
inc
clc
cmp
lds
shlb
not
outsl
ja
dec
orl
hlt
in
or
cmp
jl
std
add
jle
sti
push
pop
mul
andb
addr16
jg
bsr
mov
pop
test
sbbl
or
pop
rcrb
xchg
cmp
mov
inc
movsb
enter
iret
sbb
mov
add
pop
jb
call
repnz
cmp
mulb
add
mov
add
clc
pushf
stos
movl
and
incb
cmp
int3
addr16
mov
xor
jmp
rol
cli
sbbl
je
pushf
cmp
pop
fisubrl
inc
add
push
xor
cmp
dec
scas
inc
fwait
bound
cwtl
stc
add
fs
loop
pusha
inc
ret
pop
fisubs
mov
clc
fldenv
mov
jg
dec
stc
cmpsb
add
dec
add
popf
mov
sub
and
mov
dec
xor
adc
mov
orl
inc
xchg
dec
sub
in
push
or
cmp
repnz
orl
jae
jno
and
mov
int3
repz
stc
or
xor
ja
pop
cli
hlt
mov
dec
and
in
xor
hlt
sahf
ds
pop
test
fimull
mov
add
div
in
bound
subb
add
adc
push
insl
inc
inc
inc
add
push
lock
stos
int
out
add
int3
orl
mov
mov
fndisi(8087
dec
pop
rorl
jmp
cltd
ja
lea
push
mov
pusha
out
lock
cwtl
sub
lea
push
rcll
cmp
lock
mov
jae
loope
pop
lahf
sub
inc
or
adc
in
cmp
movsb
inc
pop
std
and
popa
daa
sbb
imul
nop
in
bound
xchg
xchg
push
lods
es
popf
add
inc
cmp
daa
int
jae
daa
enter
mov
inc
mov
cmp
mov
pop
push
mov
jno
cmp
popf
xchg
adc
movsl
sub
addr16
or
jle
out
xchg
sbb
push
lret
cmp
pop
int3
pop
push
shrb
add
mov
sbb
xor
sub
mov
rclb
std
sub
cs
jbe
mov
cmp
in
cmpsl
mov
fstpl
scas
pop
mov
test
xor
sbb
push
scas
ret
push
int
idivl
pop
leave
push
or
mov
adc
and
arpl
movsl
scas
addr16
in
fistpll
xor
cld
sti
iret
mov
add
rorb
sub
ja
mov
gs
cmp
fs
enter
adc
cwtl
test
fstpl
inc
scas
dec
or
mov
jne
fisubrs
scas
push
jecxz
scas
xor
aas
mov
pusha
cmp
mov
jns
arpl
pusha
xchg
add
adc
shl
sti
dec
mov
arpl
sub
mov
cmp
pop
push
out
cmpsb
aam
lret
in
xor
filds
mov
cld
mov
daa
pop
push
sub
or
mov
int
rcrl
pop
lret
mov
add
and
adc
inc
loopne
out
add
add
sbb
dec
add
mov
mov
data16
mov
nop
push
cmpsl
frstor
inc
in
flds
in
lea
push
outsl
sub
leave
aad
inc
or
lret
fnstsw
mov
int
mov
mov
inc
mov
test
sub
lret
xchg
out
in
mov
arpl
ficoms
out
cmpsb
inc
movsb
pop
push
fwait
sub
inc
stc
lahf
fwait
scas
les
add
push
cli
popf
aas
gs
dec
mov
das
sbbb
lret
dec
andb
nop
mov
loop
dec
cs
ljmp
dec
or
mov
push
hlt
test
imul
scas
push
lds
dec
push
sahf
std
add
push
or
push
mov
es
mov
mov
aad
mov
call
pop
push
aaa
ss
mov
pop
mov
adc
insb
xor
fldenv
stos
je
jp
gs
sbb
cmc
aas
pop
jg
pusha
jns
dec
adc
sbb
dec
pusha
inc
movsb
lea
aaa
aam
sub
pop
cmp
int3
sbb
lret
push
adc
push
dec
jmp
ljmp
cmp
stos
into
add
xor
mov
adc
into
lds
subl
xchg
pop
stos
jecxz,pt
lret
add
inc
lret
xor
sub
mov
push
ss
je
rclb
sub
jge
ret
lret
adc
in
adc
mov
cmp
adc
sub
sbb
ss
adc
pop
jo
cmp
xchg
pushf
out
xor
push
pop
out
jo
mov
lahf
xor
dec
mov
imul
sub
ret
pop
cmp
lahf
dec
push
add
loope
inc
mov
fcmove
sub
sarl
scas
sub
jle
push
adc
sub
inc
icebp
cmp
push
mov
inc
and
adc
jg
pop
mov
movsl
pusha
mov
pop
bound
repnz
inc
jbe
jp
mov
test
out
popl
mov
aas
push
jno
add
das
lea
push
xor
add
popf
mov
cmp
jmp
or
mov
mov
jbe
loope
xor
outsl
push
icebp
fidivs
aad
sahf
dec
dec
inc
mov
jge
ret
aad
rolb
pop
enter
out
push
sbb
cmp
mov
cmp
mov
jmp
xchg
xchg
xor
add
push
xchg
jl
jle
test
scas
jne
addb
in
in
cmp
or
lock
cltd
jnp
and
ret
int3
cli
pusha
aaa
and
pop
pop
push
sub
ret
inc
xchg
mov
jno
lret
jle
xchg
dec
jbe
icebp
inc
in
lahf
sbb
xor
popa
or
xchg
int
imul
mov
jb
xor
xor
les
into
dec
mov
fdivrs
repnz
mov
clc
ss
pop
shll
sbb
adc
push
lahf
adc
xor
push
addb
push
jno
inc
mov
ja
rclb
mov
inc
xchg
push
jmp
mov
cmc
stos
sub
inc
aam
mov
mov
xchg
data16
xchg
ja
mov
push
outsl
pop
mov
inc
or
aam
cmpsb
les
sahf
into
insl
jae
hlt
and
mov
sub
fisubl
int3
mov
xor
outsb
and
sub
sub
lcall
add
std
das
pushf
inc
mov
movsb
dec
test
jno
movsb
mov
jne
stc
dec
cmp
dec
icebp
mov
dec
sarl
scas
or
inc
mov
loope
mov
dec
fsts
inc
ret
adc
jns
shlb
lds
outsl
jecxz
in
mov
in
stos
and
fldenv
cmp
fwait
mov
js
mov
dec
cmp
sub
mov
cld
fisubrs
or
pop
outsl
addb
lahf
lcall
aas
adc
pop
aas
fisttps
push
mov
push
aad
mov
fs
xchg
gs
pop
xchg
in
ss
lret
movsb
pushf
fisubl
add
addr16
sbb
fisttpll
cmovne
rcrb
gs
add
mov
mov
rcl
pop
jnp
inc
pusha
sahf
dec
aad
ljmp
push
push
mov
adc
push
ds
xchg
and
stos
mov
fs
lock
push
scas
rol
and
cld
fiaddl
outsb
sahf
mov
lcall
clc
inc
fcompl
bound
push
xchg
inc
dec
call
push
rorb
lcall
out
adcb
sbb
jmp
cmp
inc
xchg
fisttpl
sub
xchg
and
mov
xchg
push
jno
out
cmp
iret
inc
stos
mov
pop
adc
mov
cmpsl
in
std
dec
sarb
xchg
pushf
and
mov
int
pop
dec
clc
aas
mov
sarb
aaa
fprem
ret
roll
jo
sbb
out
repz
pop
add
in
pushf
lds
push
jmp
and
pushf
push
inc
jl
jo
xor
push
je
cld
push
roll
jg
movsb
xchg
rcrb
mov
fsubrl
inc
push
xor
daa
cmpsb
lret
lcall
das
sub
push
fsubl
mov
xor
in
or
mov
mov
mov
push
mov
xor
sti
cmc
cs
cs
push
xchg
xchg
sub
push
and
pop
loop
mov
push
iret
jae
gs
les
mov
jne
adc
lret
mov
push
cwtl
dec
andb
test
and
ss
das
mov
in
and
imul
in
lea
sbb
add
ret
jle
mov
mov
add
lahf
imul
aam
shl
inc
pop
pop
xor
cli
rclb
fs
das
out
js
stos
xchg
and
or
inc
adc
ljmp
mov
daa
loope
fisttpl
pop
push
cs
das
inc
dec
jmp
pop
inc
xor
or
adc
lds
sbb
xor
xchg
mov
pop
popf
mov
dec
je
mov
dec
or
jmp
inc
ret
sbb
loopne
xor
ss
cld
fnstenv
popa
add
sbbb
subl
pop
push
outsb
jg
cmp
ret
pop
mov
xchg
dec
jmp
and
mov
movsl
sbb
data16
lret
je
mov
das
dec
test
lret
mov
xchg
lcall
in
xor
ja
lret
mov
cmpsl
sarb
xchg
stos
int
mov
insb
cmpsb
loopne
fiaddl
or
sub
popf
dec
mov
mov
sbb
jno
std
xchg
or
fwait
movsl
sbb
add
popf
push
repz
xor
xchg
call
test
push
push
add
xlat
movsb
das
inc
insl
rcrl
aad
fildll
adc
ds
inc
in
or
test
jle
mov
or
inc
aam
mov
lahf
mov
icebp
jb
repz
les
aam
mov
ficompl
jne
filds
stc
jnp
dec
adc
mov
jbe
jecxz
lret
ds
mov
in
push
jl
int3
pop
sbb
mov
push
adc
fistl
push
mov
push
bound
mov
jg
lods
outsl
push
pusha
nop
loopne
mov
dec
jae
add
or
sbb
mov
iret
add
aaa
test
jbe
jmp
call
pop
mov
sbbl
jmp
pop
pop
call
addr16
pop
push
stc
test
mov
pop
push
addr16
nop
xor
ljmp
ret
shll
mov
pushf
jl
xor
or
lcall
insb
mov
xchg
cmpsb
or
scas
xor
ds
cld
std
jecxz
xchg
jmp
pop
sbb
sbb
and
push
into
jg
push
xchg
sub
jns
stos
cmp
inc
xor
sahf
and
test
fninit
stc
enter
popf
pop
cmpsl
jg
ret
js
sti
jo
inc
cmp
rclb
cmp
incl
pop
cmp
fisubl
test
rcl
stos
mov
not
xor
insl
and
mov
push
add
xchg
mov
in
mov
xor
jns
dec
iret
jl
jo
int3
test
in
or
aam
xchg
push
iret
xchg
xchg
adc
mov
jle
sub
xchg
lock
lahf
test
xlat
popf
outsl
lret
mov
mov
sub
cld
sub
adc
popf
les
movq
stos
lcall
sub
out
fucomi
add
adc
popf
jge
cmp
jo
es
fs
sti
out
xchg
mov
pusha
xchg
add
lahf
stos
mov
inc
sbb
popa
and
mov
lock
mov
mov
shlb
dec
pop
pop
movsl
andl
and
testb
sbb
inc
add
popf
rol
or
arpl
jecxz
pusha
xor
movsl
mov
test
dec
xchg
and
lds
pop
fcomps
aam
or
insb
cmpsl
mov
adc
aam
call
lods
sub
pop
and
and
add
outsl
lcall
pop
lcallw
jnp
adc
xchg
push
cmpb
test
mov
aad
mov
lods
lea
idivb
and
jno
out
scas
ss
push
pop
mov
mov
push
fidivrs
mov
push
mov
js
mov
xlat
jae
and
add
scas
mov
adc
lcall
mov
pusha
aad
add
mov
and
mov
addb
aaa
xorb
push
movsb
xchg
mov
mov
popf
jae
adc
cli
mov
in
and
cwtl
roll
icebp
int3
mov
in
test
out
add
cs
ficoms
shl
sbb
iret
push
bound
adc
incl
mov
mov
adc
rorb
loopne
sbb
sub
sbb
sub
clc
pop
and
add
lods
subl
push
scas
sbb
pushf
pop
xchg
xchg
and
ret
mov
lahf
lds
ror
mov
cmp
push
sahf
mov
sbb
in
cmpsb
imul
and
push
fwait
sub
lahf
js
test
mov
cmp
imul
adc
xor
imul
in
pop
stos
fisubrs
jns
jge
fcmovnbe
or
adc
leave
inc
jns
mov
sbb
std
repnz
mov
out
addb
imul
imul
cmp
add
outsl
fdivs
pop
jp
push
shll
xchg
gs
loopne
pop
add
mov
push
pop
stc
idivl
cmp
xchg
in
lcall
movsl
je
mov
push
sbb
lret
jae
lret
and
test
les
sub
pusha
jb
jns
test
dec
stc
orb
jg
sbb
adc
add
sarb
dec
repnz
aad
dec
jns
outsl
lret
push
mov
insl
leave
shrb
aam
mov
aad
jge
mov
loope
adc
cmp
iret
and
xchg
lret
mov
xor
cmp
cli
cmp
or
hlt
in
and
xchg
les
sbb
ret
pushl
lret
les
mov
test
ret
mov
out
pop
dec
cld
scas
cmp
icebp
sbb
push
loop
sub
les
insb
insb
fistpll
into
sub
pop
fstpl
mov
out
or
into
pop
sub
popa
jo
add
popf
sbb
inc
mov
mov
pop
inc
dec
mov
call
jo
arpl
cs
out
dec
mov
pusha
daa
cwtl
pop
push
jmp
sbb
repz
dec
push
add
stos
loope,pn
xchg
into
lahf
pusha
aas
jae
mov
out
faddl
js
sub
sub
mov
daa
xor
push
mov
mov
ror
sbb
repz
les
mov
mull
pop
sub
les
xchg
pop
adc
mov
dec
mov
enter
xor
xor
jge
test
add
ret
jbe
fcmovbe
sbb
rcrl
ss
clc
test
enter
mov
add
cmp
cmpsb
push
inc
push
aam
lret
push
aam
pop
add
data16
add
or
push
inc
ja
fisubrs
nop
cmp
andb
in
test
and
iret
pop
mov
cmpsb
int
jmp
fiaddl
dec
pusha
mov
push
cli
mov
into
ljmp
mov
std
cs
bound
movsb
cs
pop
ds
xchg
push
into
ds
push
mov
push
mov
mov
dec
cwtl
xor
xor
inc
jp
mov
jo
dec
subb
add
pop
imul
or
jge
into
subl
paddsw
mov
loop
imul
mov
repz
andl
jno
pop
in
xor
shlb
ja
sub
cmp
push
int3
sbb
xor
js
mov
dec
xor
lret
xchg
mov
rorb
mov
lret
pop
inc
aaa
adc
push
nop
and
push
sbb
mov
mov
repz
push
push
iret
dec
je
fdivp
mov
loopne
add
ret
lcall
mov
enter
pop
add
popa
daa
lahf
lea
cmp
scas
movsl
jmp
xchg
mov
icebp
loopne
int3
int
mov
sahf
cmp
enter
jnp
aam
mov
scas
cmp
push
ficompl
enter
xchg
fdivl
shrl
hlt
add
push
xor
out
stos
repnz
push
call
sub
cmpsl
ljmp
inc
popf
mov
xor
inc
pop
adc
in
mov
aad
pop
sub
mov
xor
jne
lea
mov
hlt
push
inc
or
dec
shl
lods
xor
dec
pop
out
add
jecxz
repz
add
imul
cmc
adc
aam
mov
fs
out
orl
mov
pop
pop
lea
pop
xor
outsb
imul
inc
xchg
jbe
ja
dec
sub
ret
daa
sti
pop
cltd
dec
loope
pop
popa
aad
sbbb
jle
out
pop
xchg
shrb
addr16
sti
sbb
lahf
pushf
sbb
jne
pop
xchg
imul
jne
or
mov
shrl
push
or
mov
lcall
jnp
and
mov
out
and
sbb
lea
repnz
mov
inc
js
mov
popa
mov
data16
sub
cmc
repz
insb
cmp
sub
sbb
ret
pop
xchg
and
fdivrl
lcall
das
push
push
lods
push
mov
pop
mov
xor
das
repnz
loope
sub
mov
call
pop
inc
js
lods
sub
inc
pusha
ja
pushf
movups
dec
mov
repz
jg
xor
jo
add
adc
and
jmp
sbb
addb
sti
in
push
test
and
cmp
jne
pop
leave
xor
inc
xchg
push
subb
insb
mov
imul
lret
lahf
add
in
enter
test
mov
push
out
jnp
cmp
cmpsl
xor
xorl
sarl
stos
or
jo
jb
jae
insl
fsubl
shrl
aad
sub
dec
cmpl
insl
mov
fidivrl
xchg
stc
and
test
fidivrs
ss
sub
xor
int3
jecxz
loopne
dec
push
fldl
xchg
js
pusha
lret
mov
popa
rorl
adc
sbb
mov
in
sub
sti
xorb
pop
aas
imul
mov
scas
in
adc
push
sbb
sub
in
dec
xchg
aam
dec
mov
inc
dec
sahf
push
loopne
push
and
out
sbb
cwtl
mov
ljmp
mul
mov
popa
push
fisubs
jg
lret
push
decl
loop
xchg
movups
gs
outsl
shlb
jmp
std
jae
adc
into
pop
jl
xchg
add
mov
add
ret
inc
cltd
fmul
jmp
jbe
mov
mov
jno
outsb
xchg
jno
pop
inc
xor
lret
xor
mov
xor
fwait
lods
fcompl
lods
std
lods
in
mov
push
or
add
movsb
cmpsl
dec
ljmp
xlat
mov
or
pop
inc
inc
fldl
clc
or
fwait
xchg
adc
in
sub
inc
sbb
pop
mov
inc
sub
jbe
test
mov
cmp
or
mov
pop
hlt
inc
inc
pop
data16
mov
mov
mov
outsb
dec
fwait
sbb
mov
push
loopne
out
mov
sub
push
mov
or
pop
lcall
cmp
sub
sbb
mov
pop
inc
jmp
fstp
leave
xor
adc
pop
outsb
jle
int
add
scas
stos
ret
nop
cmp
xor
loope
xchg
add
add
cmp
shl
pop
mov
dec
xor
adc
inc
push
pusha
and
mov
xchg
dec
es
mov
push
push
mov
pop
sub
push
mov
mov
xchg
jle
aad
mov
outsl
adc
les
addb
push
xchg
mov
cmpsl
testl
sbb
ss
add
addr16
inc
jmp
lret
dec
lea
xor
aam
sbb
es
adc
or
gs
or
movsl
jl
repnz
inc
sub
sbb
outsb
inc
mov
push
div
dec
inc
jb
icebp
pop
mov
pushf
js
xchg
mov
movsl
aaa
ljmp
add
dec
add
inc
or
mov
out
xor
mov
lcall
std
test
sbb
sub
or
push
ror
mov
xchg
mov
jecxz,pn
xchg
and
call
push
lahf
push
mov
pop
jge
clc
add
jbe
sub
pop
mov
pop
lret
jmp
cmc
mov
xorb
add
inc
xchg
jge
inc
test
mov
push
sbb
aad
fimull
jge
jns
dec
adc
cmp
movsb
fnstenv
daa
popa
imul
cmp
pop
data16
fisubs
es
mov
loop
mov
xorl
insb
mov
repz
stc
xor
push
jns
enter
adc
mov
or
xchg
or
fdivrp
push
mov
push
mov
and
loopne
push
jmp
shrl
cmp
ret
push
mov
ja
imul
shlb
test
dec
inc
push
cmp
scas
mov
sub
test
and
xorb
dec
testl
test
sarl
loopne
aad
cmc
andb
fwait
sbb
int3
and
scas
mov
jno
out
mov
hlt
fnsave
pushf
pushf
sbb
fldenv
stc
out
cmp
mov
cmp
sbb
std
jo
and
mov
es
add
aad
cmpsb
repnz
repz
lcall
nop
std
rcll
out
fidivs
xor
jo
rol
cltd
test
jecxz
add
push
filds
ss
cmpsb
fsub
icebp
sbb
sbb
add
jne
movsl
sarb
cmp
jnp
push
cli
push
insb
xchg
pop
insb
dec
popf
jg
test
sahf
mov
mov
push
and
dec
dec
mov
ja
aaa
popf
sbb
mov
jbe
jle
inc
dec
mov
xchg
movsb
std
xlat
sbb
adc
lahf
inc
leave
int
push
fimuls
xor
push
gs
push
movl
mov
cld
cmpsb
pop
add
push
dec
sahf
jp
sbb
inc
jp
ja
push
pop
cltd
sub
aaa
dec
push
xor
sarb
push
daa
hlt
jle
pop
adc
fildll
ficoms
stc
icebp
movsl
pop
xchg
int
cwtl
push
pop
cmp
loopne
in
adc
cmp
mov
pop
push
mov
mov
ja
push
das
pop
push
mov
or
in
xor
mov
fiadds
xchg
cmp
jo
and
inc
cld
and
hlt
xchg
mov
aam
aas
mov
jge
ficoml
into
pop
popf
mov
mov
loope
or
jb
mov
xchg
push
imul
cltd
push
sbbl
xchg
sbb
xor
xchg
pop
mov
cltd
int
and
ss
data16
add
out
cmp
mov
add
adc
rorl
int3
xor
or
xor
clc
push
rcl
push
add
and
sbb
and
popf
jnp
xor
dec
addr16
test
push
jge
mov
out
lcall
fucomp
fwait
inc
popa
mov
aam
mov
sub
test
divl
ja
mov
mov
dec
test
xor
xchg
cltd
hlt
jnp
cli
mov
enter
adc
add
stc
jg
mov
lods
mov
adc
xchg
add
pop
out
out
inc
outsl
adc
cmp
push
movsl
jo
vorps
ss
aas
imul
sub
push
ja
xchg
xchg
jbe
outsb
add
aas
fistl
pushf
mov
data16
mov
out
add
pop
lea
dec
lahf
sub
imull
icebp
xchg
jmp
loope
cmpsb
popa
shl
stc
inc
dec
js
int
mov
pop
das
cmpsb
inc
and
sub
push
stc
sti
mov
sbb
aas
adc
inc
jbe
xor
sub
mov
xchg
or
repz
lods
aad
enter
test
push
lcall
pop
rcll
xor
inc
dec
lds
ret
adc
mov
daa
insb
pop
cmpsb
sbb
and
push
dec
or
xchg
movl
out
mov
aas
push
repz
jl
sahf
sub
add
jg
sub
lret
pmullw
cltd
sar
sub
mov
idiv
adc
rcl
mov
pushf
xchg
gs
or
sbb
inc
push
paddsb
repnz
cltd
xor
mov
cmp
and
iret
stos
popa
popf
loop
addl
adc
mov
push
push
call
push
push
mov
loope
lret
sbb
arpl
lahf
cmp
loope
sub
flds
pop
sbb
and
andb
mov
xor
push
xchg
movb
nopl
mov
je
into
mov
mov
loope
sub
in
roll
adc
repz
adc
fnstenv
jo
ljmp
call
fisttpll
pop
xor
adc
js
and
cmp
and
adc
scas
out
out
addb
jae
nop
std
lret
mov
test
pop
mov
iret
lcall
dec
mov
popa
jecxz
jbe
push
pop
cmpsb
push
test
js
sbb
dec
es
adc
call
lods
push
in
xchg
jp
ud1
fcoml
and
stos
and
pop
scas
fs
gs
roll
mov
mov
jno
cmp
lcall
aas
int3
push
fs
or
mov
pusha
iret
inc
push
lods
or
push
sub
pusha
subb
bound
dec
sbb
sbb
xchg
gs
or
cmp
sbb
jne
jbe
loop
jns
xor
fidivrl
pop
push
inc
inc
test
push
inc
popf
loope
ret
shrl
mov
in
loope
test
inc
and
or
mov
jecxz
inc
stc
mov
call
mov
fcmovnu
mov
pusha
xor
mov
ljmp
inc
xor
fwait
sub
xor
mov
or
jg
mov
sbb
xchg
mov
push
ret
movsb
movb
pop
ds
push
out
inc
add
fadds
fnsave
mov
add
push
pop
fwait
push
call
pop
mov
les
sti
sbb
lods
lret
xorl
inc
dec
xchg
in
and
sbb
jle
out
push
aas
cmp
scas
or
sahf
stos
popa
dec
inc
adc
or
sti
aas
pop
popa
sahf
lods
ljmp
and
sti
inc
xchg
ja
cmc
mov
out
jmp
into
mov
sub
arpl
jle
push
mov
add
dec
pop
fsubl
aad
mov
mov
sub
sub
or
pop
mov
dec
or
mov
loop
punpckhbw
xchg
jle
out
push
pop
dec
mov
adc
add
aad
dec
jg
add
adc
xchg
insl
mov
add
lret
shll
dec
sub
cmpsl
adc
lret
int
cmpsb
scas
xchg
loop
popf
leave
jne
movsb
out
dec
ja,pt
push
or
xchg
ficoml
and
xchg
xchg
push
or
jl
in
pop
jmp
aam
xchg
mov
sbb
pop
mov
push
cmpsl
in
mov
test
ret
cmp
dec
movsb
sbb
mov
mov
pop
mov
lea
push
sbb
push
cmp
fidivrs
sbb
fmull
nop
mov
inc
push
lret
test
mov
imul
jge
popf
jle
and
cwtl
divl
push
sub
ss
cmp
mov
dec
sar
mov
pop
adc
lds
rcrb
dec
test
cltd
out
out
xchg
mov
rorb
daa
fs
or
test
push
shl
js
push
in
inc
xor
pusha
lods
leave
cmpsb
xchg
pop
push
mov
stc
xchg
movb
mov
inc
sub
pop
or
and
pop
in
inc
lock
sbb
jmp
dec
push
lds
jge
int
movsb
jecxz
mov
fnstsw
sub
and
vpsllvw
jmp
outsl
fisttpll
push
push
inc
lods
or
dec
dec
sarb
or
inc
xchg
xchg
mov
movsl
jp
dec
push
push
dec
fisttpl
jecxz
arpl
add
cwtl
icebp
je
ds
xchg
mov
movsb
sbb
shll
mov
repz
enter
jp
inc
stos
push
pop
jbe
pop
arpl
xchg
jbe
nop
dec
movsb
mov
or
mov
ds
mov
dec
int
pop
out
xchg
push
cli
mov
adc
jecxz
cmp
pop
mov
mov
pop
mov
xchg
mov
pop
jb
fistpll
mov
sub
xor
cmc
into
sub
lret
in
xchg
cli
xlat
fistpll
test
sahf
leave
daa
daa
mov
into
mov
adc
or
inc
filds
dec
rep
lods
mov
xchg
dec
lret
mov
and
inc
sarl
setno
out
adc
cli
not
dec
inc
xchg
movsb
imul
jge
out
dec
inc
jp
push
je
cwtl
xor
jecxz
das
repnz
pushf
loope
push
divb
es
sbb
inc
adc
fxch
add
cmp
rclb
fsubrp
lds
in
or
inc
jae
rdtsc
inc
jp
aas
icebp
push
mov
fstps
cmp
jmp
pop
jmp
hlt
imul
cmp
repz
insl
jmp
inc
subw
fildl
nop
xor
mov
shll
cwtl
test
jns
sub
xchg
bound
repz
ja
mov
sbb
aas
pop
jne
sbb
cmp
and
fstps
fistpll
cmp
test
std
xlat
mov
faddl
pop
ret
push
sbb
into
daa
mov
cmp
repz
sub
repz
loop,pn
insb
sub
dec
xor
cli
or
pusha
adc
xchg
add
shrd
in
les
test
js
int
out
ljmp
inc
daa
insl
lcall
rclb
cltd
jp
jg
adc
inc
pop
ret
popf
pop
mov
adcb
jo
and
cli
inc
lahf
rcl
pop
pop
fisubrl
mov
ret
mov
outsl
mov
xor
neg
mov
sbb
ljmp
in
lds
cli
mov
jnp
rclb
or
imul
mov
nop
push
or
or
pop
pop
jb
pop
into
iret
pop
test
or
mov
mov
int3
push
fucomp
das
and
popa
movsl
mov
push
mov
push
dec
jge
push
push
idivb
sbb
je
roll
mov
adc
sbb
out
push
out
aaa
cld
gs
jno
push
mov
sbb
push
stos
xor
cli
sbb
gs
adc
push
ret
push
movsl
xor
loope
out
or
cmp
xor
xchg
jae
mov
add
stc
ljmp
arpl
mov
insl
call
das
popa
popa
adc
adc
inc
inc
cmpsl
mov
or
call
les
leave
cmp
push
sbb
cmp
ds
inc
mov
aaa
fiaddl
add
call
push
shlb
or
jne
arpl
add
loop
cmc
ficompl
insb
stos
cmpsb
shlb
movsl
pusha
xor
fcompl
lret
add
bound
add
popa
and
xchg
inc
std
jge
xor
das
cmp
jp
lock
fs
in
loopne
mov
imul
push
into
jbe
jo
xor
jecxz
jl
adc
inc
inc
lret
movaps
mov
cmp
cs
xor
out
add
icebp
shll
xchg
lret
loopne
in
and
shrl
test
push
out
push
dec
xor
loopne
cmp
mov
sbb
aaa
outsl
lods
xchg
add
orl
sbb
iret
rclb
jno
sbb
mov
xor
pop
or
cmc
and
mov
sub
xor
pop
mov
arpl
aas
xlat
dec
lret
xor
cmp
ss
lea
jle
mov
mov
push
dec
fsubr
sub
sarl
lea
xchg
lods
ret
dec
cmp
nop
push
out
jns
jno
sbb
cmpsb
and
inc
dec
mov
xor
xlat
push
xor
mov
sahf
push
lahf
arpl
jb
push
lods
inc
jecxz
aad
inc
push
cmpsl
add
xchg
mov
jg
xchg
fwait
cmp
or
sbb
popf
pop
sub
xor
mov
pusha
xchg
or
xchg
inc
mov
xchg
and
adc
loop
cltd
lahf
push
cli
jle
push
mov
sbbb
sbb
int3
pop
cmc
ljmp
xchg
xchg
dec
inc
pushf
push
sbb
stos
scas
nop
adc
fildl
mov
sbb
je
das
fimull
mov
or
mov
popa
mov
sbbl
cld
insl
push
stos
xlat
mov
lods
inc
mov
test
gs
ds
pushf
xor
aaa
mov
stos
push
dec
test
data16
js
pop
scas
push
sbb
or
popf
sub
fistpl
adc
cli
jle
movsl
adc
aad
and
fnstsw
mov
int3
mov
cmc
pop
mov
pusha
mov
jmp
mov
ljmp
jb
in
mov
xchg
adc
sahf
jns
mov
leave
dec
mov
arpl
bound
movsl
mov
stos
mov
xchg
rcll
push
cli
in
dec
cld
and
ret
or
cmp
push
or
daa
cmp
ret
shlb
lock
mov
xorl
xor
push
adc
or
add
inc
jae
imul
sti
imul
shlb
pop
pusha
scas
call
cwtl
adc
cs
adcb
sbb
stc
data16
fnsave
out
outsl
mov
add
mov
jbe
lret
mov
shll
aad
subl
inc
push
add
imul
mov
pop
pop
daa
add
lret
mov
inc
sbb
dec
mov
lods
loop
loopne
popa
mov
add
addr16
push
pushf
xor
popa
mov
inc
fisttpll
test
movsb
xchg
add
xchg
mov
sub
in
les
repnz
mov
dec
jp
imul
call
mov
repz
sahf
pop
jp
fs
pop
out
subb
insl
movsb
jae
mov
sarb
ljmp
inc
sub
sbb
and
frstor
rcrl
sub
jae,pn
xor
adc
or
cmp
or
add
cmpsl
fxch
pop
sub
lods
mov
vphadduwd
jle
hlt
insb
mov
std
fsubrl
clc
divl
out
pusha
loope
icebp
cmp
ret
dec
or
xchg
js
sbb
add
push
xor
pop
test
data16
cmc
cmp
inc
nop
shrl
lret
push
add
mov
call
inc
nop
adc
adc
rcrb
sbb
add
fisubl
and
cs
out
dec
scas
and
test
int3
and
lahf
cltd
movsl
dec
jae
inc
lret
jae
xlat
push
pop
int
jmp
aaa
lds
xor
dec
xor
sahf
test
leave
and
leave
mov
cwtl
jno
dec
jns
adc
pop
cld
enter
mov
int
inc
jg
imul
stos
loope
push
pop
sbb
jg
sub
mov
or
sub
xor
xor
and
push
icebp
dec
mov
stos
outsl
cli
dec
incl
scas
push
shll
subb
inc
mov
sbb
push
mov
inc
jle
jns
negb
je
jg
xchg
inc
data16
insl
cmc
ret
push
or
in
mov
ja
dec
pop
shlb
repnz
ja
lret
mov
das
pop
les
int3
mov
xlat
pusha
add
aaa
cmpsb
mov
and
incb
lods
daa
enter
scas
push
add
dec
cmp
sub
jne
mov
insl
adc
and
dec
int3
rcrb
pop
out
jge
xor
bound
popa
jne
sub
adc
dec
cmc
ret
push
mov
into
cmpsb
xor
mov
push
xchg
xor
lds
rorb
inc
push
push
fs
in
repz
sbb
and
dec
test
push
adc
shl
mov
sbb
jge
dec
mov
lock
or
stc
or
or
xchg
repz
pop
jmp
stos
sub
nop
push
lds
adc
fwait
fs
pop
fisttps
and
hlt
push
mov
test
outsb
sarl
dec
xor
xchg
leave
pop
ss
lds
mov
push
pop
and
test
repz
es
out
sbb
jnp
mov
fcoms
aas
jecxz
sbb
cli
mov
in
mov
imul
mov
inc
mov
sbb
inc
fimull
test
sbb
adc
xor
jb
push
pop
enter
mov
arpl
jnp
out
outsb
jmp
cmc
out
cmp
in
test
or
sahf
into
push
int3
jle
xor
cs
jne
inc
sub
mov
cltd
mov
stc
jns
arpl
test
xchg
ljmp
jno
in
pusha
mov
xor
sub
xchg
add
push
gs
aad
push
jbe
imul
aad
imul
rcr
cmp
cmc
adc
push
fwait
push
sbb
stos
jno
dec
push
loop
into
pcmpeqd
or
popa
xchg
je
mov
mov
push
mov
popa
mov
jle
repnz
into
ja
stc
test
mov
leave
mov
sbb
mov
popa
shll
rcll
push
and
icebp
xchg
fisttpl
sbb
jp
and
aaa
mov
mov
pop
ljmp
int3
stc
cmp
push
inc
jecxz
adc
outsl
inc
repz
lock
iret
jg
mov
leave
stos
adc
clc
fmuls
insb
gs
fcomip
pop
xchg
sbb
aas
mov
mov
pop
jns
push
ja
adc
enter
add
inc
cmp
mov
jg
cmp
and
lods
mov
xor
sub
xor
test
jmp
pop
scas
add
sti
ret
aad
push
sbb
pop
std
cs
mov
mov
mov
fs
in
xchg
enter
mov
int
movd
stos
int
dec
xchg
ds
xor
leave
cmp
push
inc
fsubrl
mov
fildll
adc
cmpsb
push
ss
int
xlat
pop
call
dec
ja
and
fbstp
add
and
lcall
mov
and
or
jle
pop
pop
ljmp
jae
icebp
out
mov
lods
loopne
sbb
sbb
mov
push
in
shll
test
xor
test
pusha
mov
sti
je
and
cmp
lahf
xchg
xor
iret
leave
ss
in
addr16
push
cmp
je
cmp
xchg
add
stos
push
inc
sbb
push
inc
adc
test
ficompl
lods
adc
data16
mov
out
cwtl
mov
js
xchg
call
pusha
add
dec
loop
cmc
cs
mov
mov
repz
xor
mov
xchg
or
or
jmp
hlt
mov
out
mov
aaa
mov
mov
arpl
xchg
sub
testb
mov
xor
lods
dec
sti
fdivs
inc
es
loop
mov
jg
jg
cmp
push
jae
jb
enter
xchg
lahf
pextrw
pushf
adcl
int
mov
mov
cmp
mov
push
cmc
lods
mov
data16
push
setno
dec
cli
lea
mov
mov
xor
cwtl
dec
mov
push
add
add
inc
mov
cli
push
inc
mov
outsb
sbb
and
outsb
aaa
xchg
mov
ret
pop
xchg
rcr
scas
notb
les
scas
stos
add
sub
sahf
mov
push
xor
in
xchg
and
push
mov
inc
aaa
mov
dec
pushf
pushf
es
xchg
movsl
push
aas
cmp
imulb
jg
inc
push
lods
mov
xchg
pop
xchg
cmp
imul
addr16
sub
mov
repnz
out
cmp
and
add
mov
mov
repz
mov
ja
sbb
or
mov
lcall
bound
sahf
xchg
lahf
cltd
jge
roll
shrb
scas
xchg
icebp
pushf
mov
add
cmpb
pop
pop
mov
dec
pop
pop
in
popf
adcl
and
daa
es
pop
adc
insb
test
sti
lahf
inc
xchg
xchg
push
pop
adc
xbegin
mov
pop
sub
je
pop
imul
lea
push
mov
inc
sub
nop
push
add
into
mov
mov
push
clc
mov
cmp
jns
sbb
popf
jnp
xchg
dec
sbb
mov
movsb
push
aaa
pop
dec
pop
or
xchg
push
jo
lahf
scas
jmp
mov
mov
cltd
aaa
fisttpll
ret
pusha
daa
adc
fisttpl
lock
cmpsb
adc
or
sbb
enter
push
mov
xor
je
sbb
add
jge
popa
and
jbe
out
and
fisttpll
cltd
stos
push
popf
inc
clc
pop
into
popa
pop
insl
xor
pop
or
inc
insl
sti
in
nop
test
loopne
pop
shlb
cli
bound
dec
js
loopne
stos
jg
pop
adcb
cs
sbb
neg
fstl
xor
fnstcw
add
lds
fwait
loop
inc
inc
outsb
adc
cmp
stos
lret
inc
xchg
test
xor
les
fwait
or
sbb
hlt
pushf
dec
jae
out
aas
sahf
push
push
out
data16
test
sub
sub
jns
das
pop
ret
adc
mov
std
pop
xchg
inc
push
push
stc
cmp
lock
movsl
inc
xor
mov
imul
pusha
and
rcrb
push
add
xor
fistl
inc
push
int3
js
mov
jns
lds
mov
iret
jge
mov
aam
lcall
jecxz
test
repnz
dec
xor
adc
jb
pop
xorb
or
adc
adcl
sbb
xor
pop
sahf
mov
mov
loope
inc
inc
ss
cld
mov
pushf
push
jg
repnz
ret
pusha
pop
xchg
jl
push
jp
loopne
icebp
xor
sub
add
out
testb
mov
mov
leave
push
movsb
xor
push
or
jecxz
pop
fcmovnbe
jns
inc
jp
mov
mov
inc
jo
aaa
test
mov
frndint
and
fwait
lret
push
jecxz
cmpsl
lock
in
adc
in
xchg
fsts
js
jge
insb
mov
add
mov
pop
lret
repnz
shll
push
lea
sub
xchg
mov
inc
push
and
pop
pop
pop
push
mov
sub
cs
and
daa
jl
sbb
sbbl
scas
aam
inc
cmp
jnp
sub
push
cmp
int
sbb
unpcklps
mov
pop
into
andl
fucomip
jae
movsb
cmpsl
leave
lds
or
sbb
loopne
dec
mov
out
fwait
xchg
int3
aad
dec
jg
xchg
dec
lcall
cmpsb
pop
mov
cmp
loop
incb
loope
add
push
cli
movsl
jp
adc
lea
dec
decb
push
or
sbb
bound
mov
ret
xchg
pop
lods
movsb
fst
cmpsl
and
mov
cmpsl
leave
in
js
pop
mov
enter
cmp
hlt
int3
jge
daa
lods
or
lods
or
xchg
cltd
push
mov
or
sbb
xchg
mov
imul
jno
popf
stos
lock
movsb
cmp
sbb
sbb
cmp
cs
sti
lods
movsb
js
addr16
sbb
fldt
xchg
mov
jmp
stc
sahf
jbe
int3
mov
mov
dec
push
mov
fdivrl
movsl
push
outsl
cltd
arpl
add
and
cli
dec
sbb
cmp
lds
dec
sub
shl
add
or
dec
vpor
dec
loopne
jmp
sbb
cmp
push
and
les
sbbb
inc
push
jnp
movb
add
adc
dec
stos
xchg
and
movsl
imul
jnp
jno
ja
repz
xchg
imul
andl
xorl
adc
outsb
lds
xor
fdivl
leave
scas
push
adc
adc
rcrl
fldz
stos
ret
ja
dec
sbb
shlb
xor
sbb
ja
out
fsubrs
cmp
das
stc
pop
lahf
add
mov
xchg
mov
push
rcrl
int3
jmp
add
shl
pushf
adc
push
mov
mov
sbb
jp
jae
cmpl
xchg
ja
vpsubsw
lods
mov
pop
std
sub
orb
add
scas
sub
inc
pop
iret
mov
icebp
and
inc
cltd
mov
sti
mov
adc
mov
add
or
mov
and
fidivrs
addr16
inc
out
mov
or
mov
int3
cmp
repz
and
ret
mov
inc
test
dec
outsb
push
div
xchg
push
and
iret
fwait
mov
push
je
sub
dec
add
imul
push
movsl
xchg
xor
xchg
sahf
xchg
test
aam
sbb
add
add
out
add
lods
sub
xor
cwtl
cmpsl
les
or
es
addr16
inc
test
mov
xor
loopne
jne
cmpsb
lahf
in
ss
popf
idivb
push
je
inc
and
or
push
xlat
adc
pop
ljmp
addr16
mov
xsaveopt
scas
add
loop
fdivl
sub
or
cmpsl
adc
and
int3
xor
jae
cli
lret
gs
or
js
push
cmc
fiaddl
push
in
call
jae
scas
jecxz
fnstenv
adc
inc
xlat
xchg
cmpsl
push
movups
and
mov
rolb
inc
out
inc
shll
inc
ljmp
jle
lock
clc
mov
xor
xor
and
div
mov
andb
add
sarb
sub
in
or
outsl
xchg
cmp
stc
xchg
add
test
dec
mov
stos
adc
lahf
sub
jmp
rolb
shrb
mov
pop
mov
das
mov
out
push
sarb
adc
add
aad
test
add
ja
ljmp
push
test
stos
jb
loopne
div
pushf
arpl
adc
mov
ficomps
and
test
ljmp
lahf
xchg
xchg
mov
addr16
rclb
rcr
fstpt
adc
pop
xchg
les
repnz
dec
insl
pop
loop
scas
std
mov
xor
sub
jb
push
fdivrl
jecxz
push
movsb
and
lea
and
add
ret
xchg
push
in
and
sahf
lods
clc
fwait
sbb
mov
dec
fwait
subb
pop
mov
cmc
std
lret
jno
aas
lret
orl
and
stos
int
dec
sbb
jp
aad
adc
inc
fs
lea
xor
mov
fistpll
mov
pop
mov
iret
or
pusha
test
insl
jns
cli
mov
pop
aas
jmp
test
cmp
mov
sub
push
pop
pushl
mov
imul
pop
cmp
lcall
sbb
xchg
in
mov
fdivrs
sub
adc
xchg
add
stos
movsb
xor
dec
inc
mov
bound
cmp
aaa
test
leave
dec
add
stos
add
xchg
or
cli
push
pop
cmp
cmpsb
mov
sbb
push
mov
xor
scas
jg
addl
stc
push
jb
sbb
inc
mov
aam
or
jecxz
inc
jmp
out
mov
fiadds
mov
xchg
cmpsl
xchg
test
popf
outsl
jb
fwait
jg
pop
je
testb
cmpsl
fwait
cmp
xor
mov
cwtl
test
js
mov
subl
push
xchg
ss
dec
rolb
sarb
push
mov
jb
inc
xorl
test
adc
mov
pop
andb
and
inc
std
mov
mov
mov
and
in
negb
fsts
arpl
negb
fmuls
push
pop
inc
popa
xchg
test
jl
xchg
jmp
sub
out
leave
outsb
hlt
dec
and
sbb
jl
fstpl
mov
sbb
in
inc
xchg
xor
js
jb
into
jae
std
push
mov
sbb
out
enter
nop
pop
into
xchg
push
testl
jns
pusha
movsl
cltd
fiadds
mov
aad
scas
push
jne
icebp
mov
push
mov
push
cmpsl
cmp
xor
xchg
outsb
xchg
ljmp
repz
aad
lds
dec
std
lods
aaa
cmp
adc
inc
dec
lods
clc
into
repnz
in
jae
mov
ds
popa
cmp
popf
addl
sub
lret
sbb
xor
movl
pop
jmp
shrl
std
idiv
push
adc
in
mov
xchg
cmpsl
ss
pop
xor
jo
ret
daa
cmp
cwtl
jge
bound
clc
movsb
jg
ljmp
pop
mov
inc
insl
and
leave
inc
shl
ficoml
daa
push
xor
iret
and
call
fcmovnbe
and
push
fistps
ret
pop
and
arpl
mov
push
addl
fs
xor
or
xor
insb
sbb
out
jbe
jne
clc
addr16
popf
cld
jmp
and
call
dec
pop
int3
add
cwtl
sbb
movsb
es
mov
mov
in
stos
dec
subl
or
xor
add
addl
add
pop
int
sbb
cmp
shll
shll
mov
mov
nop
jl
or
mov
lods
xchg
pushf
daa
push
idiv
or
jae
jmp
sbb
pop
mov
pop
fstl
adc
mov
fsub
inc
push
xor
ljmp
xchg
sbb
xchg
filds
fildll
lea
gs
out
mov
stos
jne
aas
push
dec
clc
add
repz
ljmp
pusha
sub
sub
push
sbb
sti
mov
jne
mov
and
lds
imul
mov
push
cmp
hlt
cltd
and
loopne
fadds
movsb
enter
stos
fisubrs
icebp
jne
mov
sub
clc
fwait
adc
shlb
cmp
dec
inc
lds
dec
xchg
mov
fs
inc
std
loopne
iret
and
ret
pop
xchg
pop
popa
loope
sub
xchg
and
or
sub
out
and
insb
push
cmp
xor
jb
ljmp
mov
mov
sub
dec
mov
in
cmp
cmp
in
inc
jb
arpl
push
xchg
mov
inc
insl
pop
icebp
mov
mov
dec
mov
cltd
sub
inc
fistpl
push
ffreep
mov
in
lret
jge
or
lcall
mov
mov
daa
sbb
cmpsl
in
add
cmp
in
inc
push
jmp
and
clc
adc
xor
cmp
je
sbbl
test
test
pop
push
and
out
mov
inc
in
push
in
jno
pop
stos
mov
or
sub
lds
xchg
dec
jnp
cwtl
or
dec
sub
insb
mov
mov
std
cmp
loop
loop
pop
mov
aaa
out
push
out
das
cwtl
repz
pandn
add
adc
cld
mov
rol
sti
iret
mov
sbb
sub
sbb
int3
es
sbb
mov
mov
sbb
out
xchg
or
lcall
leave
inc
jle
cmpsl
lea
or
mov
pop
lods
push
outsl
xchg
adc
jns
fldt
cmp
inc
aaa
fxch
insl
jp
jl
ja
movsl
cmp
and
movsb
movsb
xchg
cmc
xor
adc
leave
out
mov
rcrl
pop
subl
outsl
loope
test
bound
inc
hlt
fsts
lcall
xor
inc
adc
clc
pop
add
xchg
sub
push
mov
imul
out
dec
xchg
push
jecxz
fsubl
daa
loop
sarl
cmovno
idivl
sbb
dec
lods
loop
orb
mov
dec
inc
dec
std
push
sbb
push
divl
mov
cmp
cmp
shld
sbb
or
cmpsl
jp
jp
mov
test
icebp
xor
sub
nop
ds
jo
sti
adc
ficompl
sbb
add
scas
cmp
dec
cltd
mov
fadds
add
cmp
call
xchg
mov
jae
loop
imul
mov
mov
inc
dec
cld
arpl
arpl
test
mov
ficompl
xor
sub
adc
push
jbe
mov
out
xor
sbb
xchg
dec
daa
xor
mov
popf
mov
gs
inc
divb
lea
inc
fists
xchg
popa
jge
add
out
enter
cs
and
cld
imul
les
mov
jae
ljmp
xchg
adc
xchg
or
iret
lcall
sbb
jge
les
sbb
mov
cwtl
andl
mov
xchg
outsb
hlt
mov
in
push
test
pop
dec
jmp
fnstcw
sbb
mov
dec
xor
icebp
imul
push
mov
sbb
adcl
inc
cmp
inc
mov
test
cwtl
push
es
sub
loope
sub
repnz
add
add
fldt
aam
leave
subb
in
dec
hlt
out
ja
cmc
xchg
or
inc
xchg
mov
pop
push
cmpsl
stos
add
fs
nop
lret
jbe
fisttps
insb
out
xchg
mov
pop
add
test
stos
pop
pop
addl
pop
cmp
lret
fldl
frstor
call
dec
orb
or
stos
pop
into
jns
or
scas
pop
adc
leave
ljmp
adc
push
xor
notl
push
aas
out
outsl
and
sbb
shrb
xor
in
jno
xchg
dec
lcall
testb
sbb
mov
je
shrb
xor
push
xor
lret
mov
insb
adc
stc
into
repz
push
push
test
and
in
sub
push
fdivl
pop
jns
rcll
xor
pop
in
push
shl
sub
xchg
jno
arpl
out
daa
sbb
lods
int
dec
fldlg2
mov
push
aam
movsl
and
pop
int
lea
fldcw
flds
sbb
mov
test
ds
mov
and
push
mov
mov
cmp
xchg
push
push
jmp
aam
cmpsb
call
add
sbb
xor
push
orb
mov
shl
daa
inc
or
sub
lret
mov
movsb
test
xor
inc
outsb
dec
xchg
pop
int
mov
push
loope
inc
xor
sub
mov
scas
mov
dec
stc
int
mov
xor
ja
jno
fcoml
push
aas
and
and
sbb
cld
cli
mov
aaa
scas
pop
push
push
xlat
arpl
aaa
mov
loopne
loope
jg
lret
add
popf
imul
aam
orl
stos
mov
jo
cwtl
cmp
stos
test
scas
std
adc
sub
roll
cmp
cld
int
lcall
cmpsl
mov
mov
cmpsb
and
negb
repz
fsubrs
fimull
int3
adc
jbe
push
ljmp
dec
sbb
icebp
pop
aam
push
mov
mov
and
aad
jo
andb
dec
xor
mov
fwait
ret
leave
movsb
jne
fiadds
mov
pop
mov
xor
push
aas
and
cwtl
rorb
pop
js
outsb
mov
jmp
sbb
add
push
aam
ret
mov
inc
or
sbb
dec
sbb
dec
pop
stos
adc
add
jl
jp
xchg
out
jle
push
add
mov
push
push
rcrb
into
jbe
or
test
fimull
or
nop
dec
sub
rol
xchg
notl
mov
sahf
call
pop
cmpsl
fistps
ret
popa
scas
adc
jmp
test
push
mov
add
xchg
push
sbbl
pop
pusha
lret
mov
out
mov
adc
mov
xchg
pop
xchg
loopne
lea
xchg
pop
addr16
sti
xor
xchg
mulb
jae
sarl
push
push
xchg
stc
jnp
jmp
pop
sbb
in
and
pusha
icebp
xchg
fstp
lahf
pushf
test
pop
mov
ds
dec
insb
shlb
fistl
jle
bnd
adc
int3
add
xchg
mov
adc
jne
stos
inc
push
fdivrl
daa
sbb
inc
paddb
call
pop
test
fucomp
sti
test
jge
pop
push
insb
and
jns
mov
sub
mov
scas
insl
push
icebp
mov
leave
in
les
cmpsl
sub
cmp
mov
lods
scas
insl
ljmp
push
push
sub
jle
ljmp
dec
dec
push
pop
sbb
mov
dec
hlt
mov
push
inc
aam
sub
cli
mov
pop
gs
outsb
jg
push
adc
xor
outsb
pop
inc
jmp
lret
dec
push
jne
enter
stc
fmul
inc
in
jmp
mov
into
xor
sbb
push
mov
call
sbb
xchg
leave
inc
jmp
sbb
iret
call
xchg
repz
loope
cmpsl
mov
and
sbb
ds
das
push
std
mov
xchg
cmp
cmp
sahf
aas
adc
mov
mov
pop
fidivrs
jge
sub
push
enter
rcrl
pop
loope
imulb
fcmovbe
xchg
std
clc
shlb
xor
jns
dec
popa
outsl
insl
xchg
mov
call
cmpsb
sti
push
push
sub
mov
pop
movsl
fst
test
xor
pop
and
mov
xchg
imul
loope
dec
mov
and
add
ret
out
mov
inc
shrl
xor
sub
ja
sbb
adc
sbb
xor
sti
test
out
mov
jno
scas
or
inc
mov
int3
divb
jae
dec
mov
mov
pop
mov
dec
or
lods
cli
or
andb
test
shlb
mov
pop
sbb
sbb
jb
jmp
sub
fistl
or
stc
cs
iret
aas
sbb
jmp
pop
pushf
ljmp
push
mov
lea
in
add
adc
mov
leave
stos
push
gs
push
push
adcb
imul
ss
enter
aaa
add
imull
push
or
dec
aad
pop
inc
jne
les
call
es
jbe
mov
loope
aas
pop
xlat
loope
dec
pop
dec
pop
or
jo
faddl
loop
cs
mov
mulb
sbb
aad
repnz
fimull
rol
lock
mov
imul
push
loopne
out
pop
inc
addl
insl
push
movsb
or
dec
lds
ja
jns
mov
call
lock
jne
mov
std
push
add
dec
shl
jmp
insb
mov
fs
add
aas
jmp
pop
or
cmp
push
mov
jae
cmp
lock
cmp
in
je
jmp
dec
mov
outsb
pop
scas
mov
add
lret
data16
icebp
bound
cmc
hlt
xor
jl
scas
clc
fcoms
jl
pop
push
and
adc
pop
xor
pop
jp
add
mov
fadd
push
test
xchg
stos
rclb
lahf
jae
out
mov
sarl
push
mov
xor
outsl
popf
push
fs
cmpsl
imul
lods
mov
sub
pop
push
icebp
imulb
jns
aas
xchg
mov
fsts
testb
push
jge
push
imull
xchg
add
lds
fwait
in
lds
sbb
push
xchg
mov
bound
sbb
into
scas
les
mov
adc
mov
into
lret
pop
adc
dec
mov
inc
xor
popa
xor
mov
add
call
les
dec
pop
pop
fisubs
sub
in
insl
mov
jbe
xlat
pop
adc
ljmp
mov
data16
ret
mov
mov
push
sar
int
sub
test
add
sub
sub
jns
mov
mov
stos
int
movsw
jnp
je
lret
or
aad
mov
sub
mov
push
outsl
sbb
add
or
mov
lods
out
pop
hlt
push
outsl
adc
pop
dec
test
or
popf
hlt
aaa
stc
pop
add
mov
repnz
stos
mov
test
push
and
bnd
mov
and
popa
pop
pop
jmp
pop
scas
pushf
cltd
jae
mov
pop
adc
repz
lods
cmpb
adc
sti
add
test
mov
iret
sahf
cmp
jle
inc
xchg
stos
and
loop
xor
mov
xor
sahf
adc
inc
push
cmp
or
mov
ss
fs
ja
scas
pop
out
dec
sub
arpl
pop
lahf
xchg
sbb
mov
lds
and
lret
push
add
add
das
mov
iret
mov
inc
or
cmp
adc
sarb
mov
das
shll
movsl
mov
fiaddl
repnz
xor
sbb
es
jnp
adc
sbb
jl
cmp
add
and
push
test
adc
pop
lds
mov
xor
dec
in
sarl
or
add
cmpsb
sbb
mov
cltd
sbb
dec
loopne
cmp
jge
scas
cli
jo
mov
xor
mov
cltd
jo
sub
aas
pushl
mov
jecxz
and
adc
shlb
sbb
xchg
into
and
adc
cli
push
add
jl
roll
daa
pop
inc
inc
shrb
fwait
mov
ja
stos
sub
mov
lea
cmp
dec
dec
fs
dec
mov
enter
jmp
xor
mov
push
cmp
push
in
scas
sub
cmp
mov
psrlw
pop
xchg
sahf
andb
lcall
insb
dec
repnz
ja
out
inc
dec
add
daa
push
pop
divl
inc
bound
imul
xor
or
jne
lds
in
call
fildll
sub
jmp
pusha
mov
mov
cli
mov
addb
cmp
scas
test
enter
dec
and
adc
mov
lret
cmp
sub
mov
scas
in
nop
daa
sbb
lods
lret
jne
ja
lcall
dec
les
inc
ret
sbb
and
mov
jecxz
scas
insl
es
push
lock
xchg
mov
lret
mov
mov
gs
push
cmp
push
pop
outsb
test
xor
and
ror
bound
mov
adc
sahf
mov
lahf
mov
fsubp
movsl
repz
mov
fldl
dec
mov
sub
xor
clc
cmp
jge
mov
out
loopne
in
dec
xor
cmp
jg
dec
loope
dec
mov
sbb
jecxz
pop
rclb
es
or
push
aam
or
adc
push
aam
jno
mov
inc
into
mov
scas
lea
dec
dec
sbb
das
daa
cli
scas
adc
mov
arpl
cld
aaa
jl
test
sub
icebp
stc
dec
ret
popf
in
int
cmpsl
push
and
aas
push
rorl
aam
jns
xchg
lock
jbe
fildll
lcall
fsubrs
xor
jae
loopne
arpl
adc
push
aad
enter
mov
or
or
dec
push
inc
dec
cwtl
xchg
lcall
add
clc
and
in
es
clc
dec
repnz
xchg
push
sub
pushf
js
jne
adc
jns
jno
shll
popa
cmp
mov
jno
add
std
inc
loopne
shl
or
sbb
stos
mov
data16
fcom
fwait
sbb
or
icebp
imul
and
popf
shll
push
sub
dec
push
or
inc
adc
aas
jnp
cmpsb
scas
sbb
xor
pop
xor
adcl
mov
sbb
gs
dec
add
shll
xchg
aas
mov
gs
add
fcmovne
add
sub
jnp
mov
xchg
dec
cmpsb
adc
sbb
fwait
cmp
mov
add
jne
fistpll
or
mov
stos
pop
je
cltd
cmp
mov
stc
lahf
push
loopne
inc
filds
cmpsb
mov
jb
dec
adc
dec
pop
cmpsb
les
pop
sub
jp
xchg
adc
pop
js
or
add
lock
pop
push
jb
roll
cmp
xchg
gs
jno
xor
es
cmp
mov
jl
adc
in
add
mov
lea
ljmp
stos
into
fcomps
aas
jae
push
outsb
or
movsb
bound
jg
sti
sbb
lahf
push
popf
int
ret
push
stos
ds
test
mov
outsb
jns
iret
mov
adcb
jecxz
pop
pop
pop
out
lahf
xchg
pushf
mov
mov
mov
mov
dec
cmp
int
push
inc
jne
stos
scas
add
aam
fcmovnbe
stos
pop
push
ficompl
add
adc
addr16
popf
fimull
mov
inc
insb
pop
lea
cmp
ljmp
stos
in
out
push
or
mov
lock
pop
pusha
push
out
xlat
insb
mov
leave
mov
inc
in
jb
into
xor
lock
ja
insb
inc
scas
mov
sahf
cmpsb
out
hlt
cmc
inc
jle
lods
addr16
test
adc
push
jae
push
cmp
lahf
pop
repnz
cmp
in
in
fs
jnp
sbb
xor
and
iret
adc
mov
jmp
gs
xchg
test
sbb
rcrl
jge
push
or
mov
movsb
jns
ja
add
jmp
rcrb
mov
repnz
or
lcall
imul
sbb
cld
or
inc
mov
bound
mov
repnz
cltd
loop
aaa
pop
sbb
cmp
xor
or
aaa
gs
xchg
jmp
cli
sbbl
nop
es
in
inc
ds
sarl
sbb
addb
cmpsl
push
iret
or
pusha
iret
pop
scas
sub
scas
repnz
out
out
xchg
les
sbb
sahf
dec
rolb
dec
addr16
push
fs
jmp
rorl
push
cmp
and
lock
jb
jb
pop
jno
call
lcall
ret
pop
mov
and
fdivrs
enter
push
stc
lock
inc
jno
inc
xchg
fnstcw
lret
std
dec
out
jno
adc
add
sbb
mov
sub
adc
sbb
pop
cmp
scas
adc
xchg
loope
xchg
in
ret
sbb
daa
rcrl
or
ds
cmp
jecxz
jnp
xchg
jmp
or
jle
sbb
test
cmpsl
std
jns
lret
and
les
inc
div
movsl
lods
xchg
sbb
shll
sarl
xor
addr16
mov
cmpb
loopne
adc
dec
xchg
test
adcb
scas
xchg
icebp
ds
sub
les
movsb
lods
pop
lock
std
imul
and
loop
xchg
ret
movsl
add
outsl
push
cmp
dec
pop
dec
popf
mov
and
pop
sar
cmp
movsb
pusha
cltd
dec
pop
pop
sub
or
or
sub
imull
jae
loop
out
mov
testb
lret
adc
and
cmp
sub
inc
lret
imul
cwtl
xchg
sub
jo
xchg
jmp
jecxz
or
mov
fcompl
cmp
xchg
mov
aas
shlb
pop
movl
adc
mov
push
push
mov
fidivrl
mov
mov
mov
stos
xchg
in
jb
xchg
outsb
and
sub
cmp
outsl
dec
imulb
push
cs
adc
insl
outsb
xor
cmp
sub
cmpsb
mov
xor
sbb
imul
insb
aas
inc
mov
cmp
inc
cld
pop
mov
xor
mov
mov
cmp
rclb
add
movsb
jb
cltd
dec
ret
in
out
fstpl
mov
cmp
mov
test
dec
shrb
and
rorl
mov
push
cmpsb
xchg
inc
lock
test
mov
lods
xchg
cs
push
arpl
cmp
mov
pop
add
xor
lds
cmpsl
or
jo
add
rclb
inc
push
mov
je
ja
inc
add
aad
fs
cmp
xor
mov
mov
xchg
lret
incl
sbb
ffree
cwtl
adc
subb
sbb
rcll
xorb
cmp
movsl
cmp
add
inc
aam
add
push
xchg
popf
popa
adc
mov
push
inc
movl
lods
inc
fdivrl
fldt
xchg
pop
movsb
push
jmp
adc
cmp
jno
in
nop
xchg
lret
or
enter
jge
cwtl
xor
mov
in
arpl
jne
inc
je
xchg
push
and
inc
inc
divl
faddp
repnz
jae
and
and
mov
and
xchg
pop
or
xor
xchg
mov
inc
cld
and
stos
out
and
addb
enter
fdivl
inc
mov
or
jge
jecxz
pop
sahf
insb
hlt
xchg
push
mov
fnstenv
jb
xchg
aaa
int
pop
es
fs
push
jmp
adc
es
jnp
mov
jg
sbb
ret
cltd
and
out
ficomps
ljmp
sbb
inc
outsb
jmp
xchg
lea
xchg
add
cmp
shl
jno
jg
in
imul
imul
sub
repz
jp
fnsave
sbb
lahf
add
fs
add
jg
sub
xor
add
int
jmp
movsl
add
insb
idivb
outsl
sub
sahf
xchg
pop
mov
dec
push
xchg
enter
mov
mov
scas
int3
sub
inc
and
fnstcw
pop
jno
nop
orps
shlb
cs
jne
out
sub
shll
ficoml
inc
sbb
jle
movsb
xchg
stos
cltd
repz
leave
dec
inc
inc
push
pop
jmp
pop
aaa
push
cmp
add
ret
cmp
imul
das
mov
push
mov
mov
testl
cltd
mov
mov
inc
test
dec
popl
pop
icebp
cwtl
sbb
dec
dec
or
sbb
mov
mov
outsb
movsb
jg
pushf
push
dec
call
ficoms
test
mov
xor
inc
lods
fcoml
jp
ljmp
into
xor
jno
dec
adc
aam
sub
push
ljmp
mov
add
scas
loop
daa
jns
rorl
stc
mov
inc
sahf
outsl
cmp
int3
push
jp
or
mov
ret
add
cmpsl
test
lods
call
stc
jo
mov
mull
pusha
outsl
mov
faddl
aad
mov
jns
pop
fsubrs
xchg
aas
add
sbb
and
fdivl
pop
cwtl
decl
jno
cld
fwait
or
add
jne
or
xchg
pop
lods
dec
jl
add
scas
jnp
push
ja
push
inc
aad
fdiv
adc
stc
test
push
mov
int
jg
enter
cmp
shl
push
xchg
vmovddup
mov
pop
xchg
lods
dec
adc
cltd
cmp
in
loope
fsubr
jo
and
inc
adc
nop
mov
add
and
inc
push
imul
outsl
add
std
push
enter
in
add
cwtl
adc
lea
into
dec
clc
out
pusha
imul
jmp
jb
aam
sbb
aad
mov
mov
adc
neg
iret
sub
cmp
cli
jno
dec
mov
sub
jl
scas
add
mov
out
jecxz
mov
fstp
rol
jns
test
push
hlt
cs
negb
sbb
mov
test
sub
mov
mov
arpl
inc
popf
sarb
jp
push
repnz
jae
mov
into
scas
fisubrl
sub
push
xor
xchg
or
cld
lahf
outsb
aas
cmpsl
jmp
push
out
inc
out
and
mov
mov
iret
adc
pushf
xchg
lahf
stos
xchg
inc
inc
sub
xchg
movsb
call
out
inc
out
cmp
cwtl
sub
xchg
mov
mov
sarl
mov
in
cmpsl
fcompl
cltd
das
into
add
inc
and
out
xchg
cmp
cli
lock
sbb
jo
xchg
jl
adc
or
mov
or
shrb
fs
xor
xor
fdivs
les
out
xchg
lahf
pop
mov
idivb
lcall
push
lods
dec
xor
pop
pop
jno
ret
test
mov
in
test
jge
mov
addb
fwait
outsl
sub
jg
pop
orl
jle
leave
lock
shlb
add
repnz
jmp
xchg
rorb
push
leave
ss
push
jge
pop
jbe
jnp
cmp
out
fisttpll
jge
xchg
add
xlat
cmp
and
cmp
sbb
daa
movsb
push
in
aas
adc
lods
notl
dec
xor
mov
pusha
movsb
insl
dec
je
stos
add
sahf
sub
adc
inc
pop
cmp
in
xchg
ss
fnstenv
negb
mov
xor
in
inc
scas
adc
rcrl
int3
aas
hlt
or
mov
ljmp
sbb
sub
mov
lods
and
push
sbbl
inc
sbb
push
jmp
data16
mov
pop
cmp
sbb
test
xchg
cmc
inc
add
cmp
dec
cmp
movsb
dec
out
nop
popf
xor
std
add
jne
and
add
dec
imul
jbe
pop
shrl
iret
xchg
les
inc
testb
repnz
xchg
cmc
adc
jbe
loope
pop
dec
adc
ret
cs
gs
inc
mov
dec
jno
jmp
nop
jbe
push
xchg
and
out
ja
ljmp
icebp
push
mov
push
jne
lahf
lret
push
repnz
cmp
in
mov
mov
jno
movsl
scas
or
ret
fwait
fwait
lret
mov
jecxz
mov
mov
pushf
push
fs
pop
enter
jmp
mov
mov
mov
and
mov
pop
xchg
sub
ret
negl
leave
test
mov
cmp
out
push
ret
cmpsl
cmpsl
cltd
out
movsb
out
movsb
or
inc
xor
mov
sbb
jo
sbb
enter
jle
push
roll
imul
xor
add
inc
vfmsub132pd
shrb
dec
xor
shlb
push
inc
push
div
lea
or
cmp
sarl
insl
push
inc
aaa
rcll
or
cmp
scas
dec
sub
loop
cmpsl
testl
push
push
addr16
jle
mov
out
out
xor
xor
ss
fstl
ja
push
add
mov
or
fmuls
insl
int
cmpsb
mov
out
mov
lahf
push
cmp
cmc
jp
cmp
cmp
in
pop
jge
sbb
add
jecxz
lcall
mov
or
xchg
mov
pop
cld
mov
push
jecxz
es
or
orb
pop
out
xchg
mov
inc
gs
cmp
dec
negb
daa
in
fildll
nop
ficomps
les
xor
pop
pop
sub
jns
mov
sub
jae
pop
pop
iret
jmp
icebp
js
dec
das
xchg
cltd
outsb
xor
pop
fnsave
jno
loopne
xchg
rcll
cmc
mov
fs
adc
ja
mov
xchg
sahf
sbb
push
nop
push
loop
mov
mov
xor
cmpl
insl
imul
mov
inc
xlat
popf
sub
in
inc
jmp
mov
popf
adcb
in
mov
test
cmp
xlat
outsl
cmp
xor
lcall
data16
cmp
pop
cli
push
fmull
aad
fistps
cmp
test
lcall
jge
sahf
inc
dec
mov
test
jae
mov
stc
out
hlt
lcall
sub
mov
inc
aam
aaa
adc
xor
mov
enter
imul
xorl
sbb
cld
sub
or
cmpsb
xchg
mov
subb
mov
test
out
out
lret
xchg
push
pop
pop
lcallw
pusha
cmc
cmp
xchg
add
jl
dec
sahf
sbbl
sub
push
movsb
mov
shlb
pop
adc
movsb
nop
push
and
out
jle
xor
out
test
imul
fnstcw
out
and
mov
pop
pushf
ds
and
es
mov
xor
fcmovb
ret
test
pop
inc
pop
sbb
and
push
lahf
mov
cwtl
xchg
push
xor
xchg
sub
rol
xchg
insl
push
lods
and
adc
std
shlb
mov
pop
or
push
push
lcall
jnp,pn
lret
scas
cmp
mov
outsb
lods
test
mov
orb
cmpsl
add
inc
arpl
out
jae
xchg
loopne
es
mov
into
shrb
dec
mov
stos
xor
sbb
imul
push
cmpsl
pop
aad
mov
pop
adc
push
pushf
iret
cmp
adc
and
clc
pushf
call
cmpl
cld
nop
push
push
lock
dec
sbb
ret
scas
aad
cmpl
mov
pop
lcall
rclb
mov
mov
lods
xor
push
xor
neg
jbe
add
pop
mov
adc
xor
icebp
das
das
mov
xor
imul
push
mov
cmp
sbbb
and
popl
int
lds
xchg
sarl
repz
jns
mov
imul
fcompl
mov
sbb
fcoml
stc
imul
pop
xor
stos
mov
jnp
outsl
lods
cmp
test
jbe
sbb
ljmp
fisubl
sub
cmp
dec
cmp
pushf
cmp
ja
test
sti
or
cmp
jmp
mov
in
outsl
push
add
outsl
jge
mov
jmp
gs
mov
icebp
jne
insb
in
dec
sub
mov
sbb
mov
je
xchg
sub
and
push
lret
in
cmp
rorl
inc
in
xor
xchg
fbstp
push
xchg
ja
cwtl
cbtw
mov
adc
mov
or
ss
lods
icebp
cwtl
add
adc
daa
cli
xchg
daa
adcb
mov
push
out
dec
xor
mov
add
insb
mul
loopne
mov
outsb
insb
inc
add
in
cmp
dec
pop
add
sub
pushf
pop
das
mov
orb
cltd
pop
stos
jo
add
mov
xchg
mov
outsb
sub
jns
jne
xor
stc
xor
push
cmpsl
push
mov
pop
mov
jo
mov
xchg
pop
dec
fldt
add
sbb
mov
ret
sbb
insl
lods
xchg
in
inc
sbb
mov
sub
fs
jae
call
lret
stos
dec
mov
dec
dec
scas
cmp
ret
mov
add
je
mov
push
in
int3
sbb
rorl
in
aam
push
push
xchg
bound
jns
mov
sbb
xchg
lahf
fstpl
leave
test
xchg
push
iret
push
jp
or
fs
mov
lock
xor
push
call
out
ret
and
ret
sbb
ds
sbb
adc
sbb
das
add
jmp
pop
mov
push
in
lea
icebp
incb
popf
add
fldl
ja
pop
sub
jbe
stos
sbb
outsl
inc
sbb
sub
fs
es
xor
mov
inc
inc
aas
mov
dec
jg
xor
movsl
out
pop
jp
mov
pop
sub
stos
xchg
cli
inc
push
mov
jns
pop
add
and
xor
hlt
inc
sarl
pushf
fsubl
pusha
mov
test
jnp
and
fists
xchg
push
in
pop
jnp
jmp
push
popf
enter
jge
or
shll
mov
dec
xchg
mov
lods
and
and
jo
sbb
sbb
outsl
test
stos
xor
mov
fucomp
push
into
inc
into
dec
push
jg
mov
sub
clc
int
xor
mov
shrb
out
das
leave
or
push
and
repz
xlat
stc
sahf
and
sbb
sbb
xor
fldlg2
jns
aam
sahf
jg
dec
push
fsub
dec
hlt
jnp
mov
mov
jl
cmp
inc
in
je
mov
lret
jo
test
cmp
shll
sub
out
lcall
ss
popf
scas
cmp
jmp
fnstenv
mov
and
ja
and
outsl
xchg
pusha
fnsetpm(287
add
mov
pushf
mov
fcompl
stos
ds
sti
dec
sub
outsl
enter
mov
test
or
call
int3
xchg
outsl
out
sbb
fdivp
sbb
mov
xor
scas
je
pop
xchg
push
rclb
pop
mov
sarl
mov
es
mov
out
loop
mov
into
out
ret
xor
sub
adc
inc
bound
mov
inc
test
es
and
addl
dec
mov
fwait
mov
cwtl
cli
xorl
mov
dec
test
push
xor
jl
or
mov
push
inc
call
jp
xor
loop
mov
xor
push
jmp
mov
xrelease
repnz
popf
js
pop
mov
mov
push
mov
add
loopne
xchg
sahf
inc
ja
pop
dec
pop
jge
loop
inc
mov
xor
adc
xchg
test
outsb
sbb
inc
mov
dec
xchg
outsl
shlb
test
mov
je
dec
mov
mov
and
subb
jo
lcall
inc
sbb
add
add
cmp
hlt
ret
fcoml
icebp
sbb
fs
mov
popf
call
lret
jno
fadds
cmp
or
sbb
scas
adc
call
faddl
add
xchg
pop
push
push
loopne
clc
fidivrl
mov
ret
hlt
pop
push
mov
or
daa
add
jl
sbb
enter
jb
shll
mov
jno
xchg
and
and
das
pop
sub
xchg
xor
ret
stos
dec
nop
outsl
add
jno
sbb
pop
sub
or
clc
sub
outsb
dec
push
or
or
sbb
inc
cmp
js
shll
outsl
push
add
and
dec
xchg
inc
push
in
jge
mov
ret
jbe
test
add
xlat
push
inc
enter
xchg
push
bound
pop
add
pop
cs
pop
cmp
or
in
mov
ret
adc
test
rcrb
mov
test
test
aad
sbb
pop
jb
jmp
or
xchg
pop
cltd
in
push
push
cmpsl
icebp
mov
cmpsb
bound
cmpb
xchg
rcrl
jge
hlt
mov
dec
cltd
mov
push
lock
mov
mov
inc
sub
cmp
and
push
fldenv
push
mov
mov
cmp
mov
jo
sti
and
or
scas
fbld
inc
inc
aad
insb
mov
sbb
lahf
fwait
test
cs
stos
and
int3
push
jmp
in
ljmp
insb
sahf
test
in
call
outsl
popf
mov
xor
xchg
data16
imul
roll
pop
add
jg
inc
mov
sar
pop
xlat
add
mov
sbb
jge
sbb
fstps
adc
xor
pop
cmp
fnstcw
jo
das
js
pop
icebp
fwait
loope
and
sbb
shl
xchg
xchg
sahf
pop
cmp
ja
out
adc
test
sub
mov
enter
call
sahf
nop
loopne
xchg
xchg
das
jnp
push
jae
xlat
cmp
lahf
xchg
rorl
jecxz
jno
aam
ja,pn
ds
aaa
xor
nop
fcmovnu
out
inc
jecxz
jl
push
pop
fmulp
or
pop
insl
jae
or
outsl
sub
pop
movsb
xchg
pushf
negl
lods
clc
jo
or
sub
sub
je
mov
rol
dec
aad
push
sbb
std
fsubr
scas
push
mov
dec
cwtl
inc
gs
sub
pop
insl
rorb
nop
xchg
mov
jmp
dec
repnz
fistpll
add
xorl
ret
push
arpl
inc
fwait
inc
fldcw
insb
popa
add
xchg
and
pusha
insl
pop
inc
sti
icebp
cmpsl
pop
xor
cmpsb
pop
and
cmpsl
xchg
out
loope
mov
rorl
scas
subb
xchg
pop
mov
or
xor
cltd
push
lret
aam
pop
mov
out
cld
aas
push
je
lds
cmp
xchg
rcr
addr16
sub
sbb
leave
xchg
pop
mull
adc
rorl
repz
loope
xor
mov
xor
lock
repz
shrb
add
xor
mov
imul
mov
push
sbb
dec
dec
xchg
adc
adc
jns
fistpl
inc
lahf
call
aad
popa
sub
jo
jmp
lcall
pop
lahf
movsl
or
add
sbb
xor
xor
data16
sbb
xor
setge
mov
rdmsr
stos
jp
dec
sbb
ds
aaa
nop
pop
adc
push
stos
sub
pushf
mov
clc
es
aas
sub
xchg
enter
jge
cmpsl
push
jne
push
push
pop
aaa
outsb
and
xlat
mov
push
mov
pop
outsl
xchg
push
lock
mov
aaa
mov
xchg
std
add
adc
test
pop
pop
cmp
inc
lret
jbe
hlt
xchg
ret
in
xchg
cmp
push
mov
mov
pop
ljmp
mov
mov
das
xor
leave
fdivrp
int3
mov
xchg
mov
mov
cltd
test
testl
in
jo
scas
mov
movsb
sub
mov
ret
jmp
out
push
jno
bound
test
cmpl
gs
lret
inc
pop
pop
sbb
sbb
dec
or
movsb
cld
adc
mov
and
or
mov
in
lods
lods
loopne
xorl
test
and
jg
ljmp
shll
jbe
loope
sub
mov
lret
xchg
repnz
or
fdivrs
jns
repz
add
out
pop
aad
pop
push
fs
rorb
cli
add
in
mov
out
das
push
mov
daa
shrl
cs
push
xorl
cmp
lea
mov
pop
jle
cmp
insb
xor
push
cmp
mov
lahf
sub
or
imul
paddb
pop
inc
push
inc
xchg
sbb
push
sub
sub
leave
sub
jmp
scas
xchg
push
sub
pop
xchg
mov
xchg
push
or
daa
push
inc
jns
data16
push
xor
mov
and
push
lock
orb
mov
fmuls
xchg
mov
data16
nop
jge
nop
pop
cmp
pop
sub
adc
mov
int
roll
loope
out
leave
rcll
out
inc
stc
sets
filds
in
dec
xor
sbb
jp
adc
out
lcall
mov
arpl
fmull
mull
xor
stos
dec
sarl
push
out
icebp
dec
jnp
filds
mov
loop
inc
and
inc
lcall
popf
addr16
div
xchg
test
cltd
cld
mov
xor
in
xlat
sub
adc
mov
out
cmp
xchg
adc
ret
jno
cmp
shl
mov
adc
and
xorl
movsb
jg
outsl
xor
fldcw
cli
pop
add
repnz
dec
mov
lret
daa
mov
popf
imul
xor
popa
push
adc
xchg
sbb
sub
popa
pusha
gs
sub
mov
mov
sbb
push
pop
xchg
loope
push
repnz
dec
dec
inc
stos
dec
mov
xor
xor
test
mov
in
push
push
cmpsl
jmp
shll
fimull
cmpsl
mov
rorl
mov
and
test
arpl
dec
fs
push
jns
push
insl
je
int
mov
mov
pop
ret
push
in
dec
and
cwtl
in
inc
dec
out
inc
sub
fdivrs
leave
into
adc
push
push
or
pop
mov
jp
out
or
roll
sti
in
mov
in
stos
fisubrs
dec
outsb
iret
std
mov
sub
jge
adc
lods
loop
gs
add
popf
cld
xchg
orl
loopne
jns
enter
xor
push
decl
jge
and
cmp
std
cmp
dec
jb
mov
rclb
adc
and
das
push
andb
fisubl
sub
out
cld
fimull
sbb
jo
xor
sub
push
test
popf
cmpsl
mov
mov
lds
jg
test
mov
cld
dec
cmp
add
hlt
mov
jns,pn
xchg
aaa
sub
xchg
mov
rorl
push
dec
nop
and
inc
mov
rcr
jbe
ljmp
push
and
add
aas
daa
not
ficompl
scas
or
cmp
xchg
mulb
xchg
or
sbb
loopne
outsb
push
cld
ret
cmp
sub
rol
test
test
data16
in
js
mov
push
loop
jne
call
pop
push
negb
aam
daa
aaa
xlat
stc
pop
movsb
xchg
fsqrt
push
push
cmp
cltd
loopne
lahf
mov
mov
xor
xchg
xor
das
in
dec
dec
push
inc
xchg
dec
icebp
inc
lcall
pop
ret
sub
das
jl
pop
xor
push
sbb
nop
ds
lcall
insb
cli
jl
stc
cmp
int
jge
pop
aas
aad
or
dec
jge
push
fcmovnb
jbe
les
pop
xorl
jp
dec
std
leave
xorb
ss
and
push
xchg
mov
and
jo
cmp
lcall
mov
adc
out
es
pop
xchg
inc
jo
lret
dec
leave
cmpsb
lods
insl
lods
sub
and
or
and
inc
repz
movsb
mov
lcall
loop
jb
pop
je
cmc
hlt
mov
sar
arpl
outsb
repnz
out
jecxz
inc
inc
fnstenv
pop
loop
aam
or
push
insl
fstpl
daa
sub
movsl
push
addr16
pop
addr16
xchg
mov
mov
jg
cmc
int3
mov
stos
scas
push
pop
pushl
jb
popf
das
outsl
lahf
and
shll
outsl
test
movsb
push
mov
subl
mov
push
sbb
xchg
mov
sub
sub
fnstenv
adc
fldenv
jle
in
and
xchg
sub
mov
mov
ljmp
or
cmp
cmp
iret
test
aaa
cmp
fdivr
inc
push
jne
or
adc
adc
push
cmp
leave
es
cli
xchg
xchg
mov
in
test
das
xor
in
dec
jns
pop
pusha
xor
inc
sti
push
repz
mov
mov
lcall
push
mov
sub
decl
loope
adc
push
sarb
cmp
cmc
add
xchg
cwtl
cmpsl
cmp
test
push
filds
dec
loopne
sbb
mov
sub
ljmp
mov
fadd
adc
add
loopne
and
adc
mov
inc
cmc
xchg
push
lds
mov
lea
dec
pusha
into
outsl
mov
fidivrl
aas
sbb
sub
xchg
mov
inc
pop
adc
add
loopne
std
imul
imul
jge
mov
lds
iret
push
fcoms
jne
iret
out
pop
add
ret
es
stos
dec
push
jnp
xchg
adc
xchg
out
das
std
jmp
arpl
mov
add
sub
jns
xchg
adc
lock
push
mov
mov
out
push
sti
adc
add
add
ja
arpl
or
shll
pop
call
jp
arpl
sti
je
int3
rol
sarb
hlt
mov
in
mov
js
mov
int
pusha
in
sub
pop
inc
sbb
sub
sub
or
jge
jg
movb
lock
dec
test
aas
std
sub
loop
inc
sub
movsl
movsl
aas
mov
pop
push
adc
cmp
ret
and
rcrl
test
add
push
mov
cmp
ja
sbb
and
ficompl
push
loopne,pt
fwait
imul
sbb
in
test
dec
cltd
push
loop
pop
adc
call
pop
mov
pop
xchg
push
fldcw
push
jne
js
cmp
movsb
mov
add
fadd
fcoml
jge
xchg
mov
sub
out
in
jmp
jns
xchg
scas
pop
call
cmp
lods
cmc
aaa
add
shr
lahf
xchg
shrl
sub
mov
rcl
rcll
jae
mov
shlb
fsubr
xchg
jecxz
fst
rorl
fstps
jl
mov
out
call
mov
cmp
js
or
xor
scas
sub
das
jl
fwait
xchg
jg
cmpb
sub
outsb
xchg
popa
dec
loope
sub
inc
test
icebp
jge
inc
mov
push
out
lar
aam
cld
add
ss
test
adc
push
pop
movsl
ljmp
xchg
or
sti
scas
mov
fnstcw
jbe
inc
dec
sub
pop
push
and
add
insb
call
cmp
or
mov
ret
test
sub
pop
pop
or
mov
aad
imull
arpl
js
rcr
ja
int
xchg
fcoms
call
leave
xchg
xchg
pushf
outsl
fidivrl
jnp
cmp
call
faddl
sbb
xchg
nop
adc
pushf
aam
movsl
loopne
js
adc
inc
adc
das
loop
insl
or
in
cmp
lds
inc
pop
xchg
xor
cmpsb
out
sub
gs
add
pop
cmpsl
imul
ljmp
jae
ret
ret
mov
cmp
sti
decl
clc
mov
int3
adc
mov
icebp
cmp
aas
subb
adcl
push
xchg
inc
jbe
add
and
mov
addr16
movsl
mov
mov
aam
inc
enter
cmp
add
xchg
xor
sbb
or
mov
dec
icebp
or
into
add
pop
mov
shl
std
jp
les
addl
lret
cmp
xchg
push
dec
adc
jnp
jecxz
cmp
and
enter
mov
push
or
mov
cltd
pop
mov
jnp
mov
jl
and
outsb
cmc
out
test
iret
inc
mov
std
cld
cmpsb
push
in
sub
push
xchg
pusha
loop
xchg
mov
in
push
out
es
push
sbb
test
mov
insl
xchg
xor
jl
xor
lret
leave
sub
scas
xor
loopne
lods
mov
push
cltd
cs
popf
inc
inc
test
add
add
xor
scas
outsl
xor
daa
push
push
arpl
jecxz
popf
lods
in
xor
cmp
jmp
pop
je
inc
jle
pop
sub
out
mov
xchg
or
dec
pop
idiv
pop
push
js
adc
sub
xchg
xchg
add
movsl
inc
push
add
sub
mov
jae
xor
lcall
stos
and
mov
out
jg
lret
fnsave
sahf
push
push
jle
mov
mov
xor
lcall
shlb
rclb
jmp
fsub
out
sbb
mov
scas
xchg
ss
shll
sub
mov
test
ret
jo
push
dec
cmp
mov
adc
int3
rcl
ljmp
aam
mov
sbb
pusha
xchg
cmp
subb
jb
into
fadd
cmpsb
or
mov
mov
sub
ja
sub
ljmp
sahf
mov
cmp
xchg
jl
in
out
add
inc
pop
adc
bound
sub
out
shlb
xchg
dec
xchg
push
mov
js
test
scas
sub
shrb
pusha
lods
outsb
imul
std
jbe
mov
push
jb
and
xor
dec
mov
push
push
lds
outsb
or
repz
xor
call
inc
or
lahf
int3
adc
and
pop
jns
shll
rcrb
and
dec
or
incl
and
outsb
in
push
adc
sub
xor
lahf
mov
sub
dec
sbb
pop
sbb
or
mov
pop
push
cmp
hlt
dec
xchg
in
add
or
scas
cmp
aam
in
in
es
cmpsb
clc
xor
ds
cwtl
femms
inc
mov
jno
jne
jbe
lds
inc
mov
xor
mov
lea
ja
insb
xlat
in
sbb
fcomip
sti
jle
or
nop
cli
xor
sbb
scas
pop
mov
in
shll
loope
xchg
jg
popf
mov
mov
dec
push
xchg
pop
in
pushf
adc
pop
sahf
loop
cmp
sar
xchg
mov
iret
cld
add
test
sbbl
cmp
lret
mov
xor
mov
repz
leave
xchg
lea
hlt
push
hlt
and
sbb
lahf
or
and
popa
stc
arpl
mov
icebp
push
dec
push
pop
cmc
imul
sti
pusha
lahf
mov
cli
jge
add
push
mov
out
pop
das
pop
push
push
xchg
xor
add
and
sub
add
mov
mov
movsb
pop
inc
fisubrs
sub
mov
out
xchg
pushf
daa
addr16
shlb
fldenv
popa
aas
test
mov
mov
shlb
add
or
loopne
sti
push
bound
je
push
pop
adc
sub
js
dec
push
xchg
rcr
sub
je
sub
dec
and
inc
mov
inc
stos
jns
mov
push
addr16
loopne
inc
adcb
xchg
xor
mov
jnp
xchg
std
xchg
mov
dec
out
push
fistpl
das
and
repz
popf
cmpb
mov
jno
ss
imul
jle
jno
push
nop
cltd
mov
test
pop
mov
loopne
lcall
sti
outsb
ror
mov
jne
ss
hlt
and
idiv
and
adc
push
ret
mov
pop
jp
mov
inc
inc
cmp
mulb
add
addr16
inc
adc
adc
pop
aam
jl
lds
xchg
or
aad
imul
lods
mov
mov
shll
lds
xor
pop
aam
addr16
dec
lret
imul
sti
test
mov
lea
movb
cmc
repnz
pop
add
js
es
sub
gs
popf
gs
mov
mov
cmp
int
xchg
adc
cltd
test
mov
xchg
dec
sti
push
outsb
xor
das
sub
mov
in
sbbb
push
shrb
leave
sub
cltd
dec
mov
test
mov
mov
insl
ret
pop
rcr
fwait
bswap
rolb
inc
jmp
push
pop
push
rcrl
insb
push
imul
inc
adc
ficomps
push
dec
push
pop
repz
or
lret
pcmpeqd
mov
shl
xor
cmp
or
xor
lahf
out
ds
or
mov
and
repnz
cmpsb
mov
sub
loope
push
or
fbstp
js
pop
sub
push
sub
addr16
mov
hlt
out
jb
xlat
lds
adc
leave
cltd
loopne
pop
fmuls
rorl
or
or
push
roll
mov
mov
and
mov
rcll
jp
cpuid
dec
sub
mov
data16
lahf
and
fs
jl
inc
aad
in
fiadds
daa
push
fistl
loopne
dec
dec
out
adc
xchg
and
fimuls
sub
sub
sbb
push
push
jbe
cmp
data16
outsl
pop
call
xchg
mov
fnsave
jnp
cltd
pop
dec
mov
sub
jp
and
imul
jecxz
jl
rcrl
sbbl
jb
cmp
fidivs
or
pop
xor
call
add
js
je
add
scas
jp
mov
push
lahf
outsb
stos
imul
xorb
sub
fistpl
pop
fldcw
xchg
sarb
add
mov
cli
pop
sub
sub
mov
dec
mov
ret
icebp
mulb
push
xchg
inc
add
push
sub
xchg
stc
or
add
outsl
push
sub
cli
fwait
adc
jo
lahf
adc
and
ljmp
test
pop
aaa
jne
gs
jb
fs
add
in
clc
lods
or
push
out
stc
adc
into
pop
mov
enter
mov
jmp
loop
pushf
sub
das
loopne
push
sar
movsl
pusha
or
imul
out
dec
push
sub
data16
cmp
jbe
pop
pushf
xlat
jecxz
or
push
dec
cmp
outsb
dec
sbb
xlat
and
mov
dec
rcrl
inc
out
fistpl
stos
and
rcl
or
outsb
mov
pop
pop
shrl
lods
cmp
loope
int3
clc
xor
arpl
push
std
pop
sbb
aaa
adcb
cmp
test
int3
jg
sbb
xchg
sbb
in
or
aad
sbb
mov
adc
pop
or
mov
inc
mov
stos
and
out
mov
xchg
mov
aad
cmpsb
ffreep
lods
cwtl
push
pop
daa
push
stc
sbb
movb
add
cmp
insb
imul
inc
cmpsb
pop
pop
xchg
jle
into
mov
outsb
leave
divl
lahf
cmpsb
addb
call
loope
sti
loopne
rcll
fs
in
fld
cmp
lock
pushf
pusha
pop
movsl
inc
lea
pop
int
test
and
lods
jnp
repz
xchg
icebp
push
and
add
sbb
fmul
in
add
lods
xchg
jge
imul
fcmovnb
rorl
adc
push
lret
in
push
repz
xchg
imul
xor
pop
testb
sub
pop
daa
enter
xchg
insl
jecxz
push
int
xchg
sub
or
aad
mov
fildl
hlt
pop
lret
cmpl
shll
lds
test
arpl
mov
shrb
subb
xchg
push
sbb
sbb
inc
add
push
xchg
addr16
aam
rorl
xchg
js
imul
sbb
daa
out
pushf
and
pop
and
les
test
in
mov
fisubrs
adc
mov
mov
add
lods
push
rcr
mov
in
mov
inc
popa
test
data16
jl
adc
jecxz
js
sahf
pop
ljmp
mov
push
pop
in
fiaddl
jnp
dec
ret
shrb
hlt
outsb
in
adc
sub
leave
mov
imul
xchg
std
ret
jecxz
lock
add
stos
dec
add
outsb
push
xor
incb
cmpsl
icebp
and
xchg
ja
cmp
ja
mov
sbb
aaa
xchg
icebp
call
gs
mov
rclb
sbb
xor
scas
pop
jnp
movsb
jecxz
shrl
mov
adc
dec
jmp
cmc
in
orl
lods
out
inc
psubsw
or
sub
repz
fnsave
repz
xchg
lods
pop
lcall
gs
lret
push
dec
adc
shlb
and
popl
xor
je
mov
ror
inc
test
in
arpl
xor
nop
pop
outsl
test
adc
xchg
pushf
icebp
in
jle
les
cli
sub
xchg
xchg
lcall
pop
cmc
mov
insb
ret
into
ret
fistpll
test
gs
imul
testb
in
mov
mov
cmpsl
and
or
movsl
and
or
xor
mov
push
or
insl
mov
or
std
jo
imul
xor
hlt
xor
xor
fadds
enter
sbb
enter
ret
nop
inc
mov
notl
clc
lcall
repz
arpl
xor
xor
leave
dec
sbb
fsubrs
in
loop
sub
inc
xchg
into
rorb
mov
int
mov
out
imul
and
fimull
pop
inc
shlb
popf
push
or
mov
mov
imul
jno
or
or
sbb
mov
inc
dec
std
sub
int3
fs
leave
loope
mov
imul
imull
shr
aas
mov
jne
les
fdivs
sahf
jns
add
push
fimuls
call
scas
cmpsb
jns
mov
mov
loop
jp
rcrl
jno
xor
mov
aas
jae
out
cmp
fisubrl
cwtl
mov
cmp
fadd
mov
jae
cltd
and
mov
rcl
fcomps
jl
jbe
push
in
test
test
and
clc
inc
push
je
xor
out
mov
xchg
mov
aam
fwait
mov
lahf
into
and
imul
cmp
mov
xchg
addr16
xor
mov
int3
sbb
push
test
addr16
je
lock
and
push
out
xchg
cltd
in
xchg
popf
xchg
xlat
push
push
lea
push
mov
xorb
in
mov
sub
shlb
pop
jae
dec
jg
movsl
jno
test
push
aaa
push
push
in
cmpsb
jo
cltd
push
adc
xor
pop
dec
mov
cs
pop
xchg
data16
fcmovu
out
popf
shl
sbb
sbb
in
inc
int3
mov
inc
xor
popa
jne
push
sbb
sub
sub
cmpsb
mov
mov
lret
jg
adc
leave
icebp
mov
imul
adc
xlat
xlat
cmp
xor
cmp
add
std
cmp
fstl
sti
push
adc
xchg
ss
stos
dec
mov
addb
mov
xor
and
ljmp
add
ret
or
div
hlt
sub
cli
rcl
sti
stos
repz
dec
add
cltd
pop
pop
adc
int
sub
bound
movsb
dec
or
jle
in
xor
mov
sub
or
sbb
flds
sahf
add
xor
xchg
test
data16
out
ja
or
mov
lret
ja
fucomi
scas
xor
and
mov
xchg
lea
add
movsl
jo
test
lret
xchg
aaa
cmp
jge
sbb
sbb
push
inc
pushw
cs
mov
mov
or
xchg
inc
dec
push
leave
cltd
push
iret
test
xor
push
in
xlat
pop
fnstsw
outsb
pop
shll
out
pushf
outsb
add
outsl
jmp
cmpsb
out
xchg
loop
fsubr
pop
xchg
cmp
and
aas
inc
pushf
test
mov
imull
or
movsl
imul
test
mov
mov
test
cli
test
loopne
test
fmull
mov
mov
decl
sub
mov
nop
push
lock
jge
lret
mov
pop
rcrl
and
arpl
mov
lret
or
fwait
popf
pop
mov
outsb
inc
push
or
pop
mov
ficoms
shl
inc
lcall
pop
xlat
mov
daa
aad
xor
mov
xchg
mov
loop
pop
push
adc
add
mov
in
mov
int3
popa
aas
adc
push
or
jmp
or
mov
movsl
mov
or
das
dec
push
call
addl
jo
sar
in
scas
fmuls
pop
xor
xor
sub
sbb
or
mov
cli
jae
sbb
pop
or
nop
jp
mov
mov
sub
outsb
dec
and
mov
bound
sub
add
in
sahf
push
data16
mov
ss
mov
hlt
mov
lods
iret
lret
std
test
sbb
int3
xchg
mov
jg
fwait
pop
cltd
add
sub
aad
add
mull
and
dec
or
pop
and
sbb
ja
jo
pop
aaa
sar
xchg
dec
sub
push
fisttpll
ret
dec
aaa
push
fisubs
lock
push
pop
or
pop
xor
xor
pop
rcrb
pushf
aaa
xor
loope
inc
add
int3
scas
and
mov
mov
xor
and
add
cmpsb
sub
jb
adc
sbb
out
pop
daa
repz
xor
jmp
push
movsl
sub
inc
xor
push
andl
or
push
call
aas
pop
jg
nop
xor
add
repz
out
je
mov
dec
or
jnp
test
cs
in
sbb
push
outsl
cmc
mov
bound
lods
or
xchg
js
adc
insb
xor
cmp
shrl
sbb
push
add
orb
push
cli
mov
add
nop
xchg
enter
movsl
pop
pop
aas
rcrl
fstp
mov
add
add
test
mov
mov
in
push
or
and
pusha
nop
andl
mov
outsl
sub
mov
cmp
pop
jne
sub
jmp
aaa
in
fistl
sub
imul
jae
pusha
mov
fwait
shrl
lahf
out
sbb
cmc
out
mov
mov
xchg
mov
aas
xlat
adc
dec
and
mov
rorl
sbb
pop
or
push
fimull
or
jmp
sub
movb
lds
jecxz
aas
push
mov
cmpsl
sar
mov
pop
cmc
dec
or
xchg
into
inc
mov
push
scas
rcrb
cli
stc
mov
jae
int
mov
cmp
sbb
dec
xchg
mov
cmp
pop
xchg
lods
insb
gs
and
xchg
clc
inc
push
cmpsb
sti
fstl
xor
inc
xlat
shrb
adc
push
jae
dec
inc
jmp
test
sahf
cmc
mov
pop
sbb
sbb
sbb
fidivrs
arpl
jl
inc
dec
pop
bnd
xorb
xor
imul
sub
mov
sbb
push
pop
inc
cmpsb
int3
push
add
in
ret
xor
out
mov
incb
sbb
movsb
xor
orl
inc
xor
test
jg
les
aas
daa
xchg
xor
lock
adc
test
xor
icebp
adc
add
push
xor
in
pushf
outsb
js
jne
insb
stos
inc
lock
push
push
es
dec
cs
add
inc
pop
or
push
dec
les
imul
fnstenv
mov
fldz
lea
fstl
fdivp
ss
or
test
rcrl
push
shl
in
mov
cmp
sub
cmp
stos
das
sub
mov
fnsave
and
ds
mov
xor
dec
leave
mov
lea
xor
into
int3
mov
hlt
cmpb
std
sub
rorl
scas
xchg
xchg
xor
xor
je
rorl
and
xchg
rcll
pushf
cmpsb
inc
scas
jnp
xchg
fnsave
mov
mov
arpl
pop
call
clc
inc
gs
add
sbb
scas
or
lahf
fcoms
loope
daa
cmp
leave
sub
in
add
in
clc
add
movsb
sub
notl
xor
sbb
cmp
test
in
push
inc
sub
mov
xor
cmpsb
bound
sub
cmpsb
fdiv
daa
inc
cmp
out
cwtl
push
pop
sar
fwait
and
dec
iret
cmc
repnz
push
adc
jle
shrb
xchg
fiaddl
adc
into
cmp
in
rorl
daa
push
pop
inc
inc
addr16
dec
dec
pop
out
pop
xchg
mov
popa
pop
pop
or
rcrl
mov
sub
iret
sub
mov
xchg
xor
int
jne
cmp
jl
push
add
jns
scas
mov
dec
push
in
arpl
dec
cmp
cmc
into
jecxz
aam
mov
mov
ljmp
lea
xor
mov
pop
inc
sbb
jl
imul
add
xchg
dec
mov
mov
add
inc
pushf
cld
jo
inc
pop
push
test
jne
sub
hlt
lret
scas
sub
arpl
mov
cmpsl
jo
xor
jno
data16
pushf
mov
cmpsb
sarl
mov
ds
in
add
push
pop
jo
dec
mov
xchg
rcr
mov
jne
lds
sbb
inc
cmc
mov
xchg
test
ret
clc
hlt
lret
and
or
int3
loop
int
push
inc
jmp
jno
sbb
cmp
les
fcmovnb
or
movb
push
sub
pop
popf
in
icebp
stos
leave
jae
mov
cmc
addr16
jae
lods
test
add
lahf
add
mov
adc
adc
jno
sahf
or
pushf
xlat
sbb
jecxz
ss
add
and
xchg
sub
mov
lahf
inc
and
mov
mov
inc
frndint
jnp
ret
mov
jg
adc
inc
xor
and
ret
js
xchg
arpl
dec
and
insb
xchg
sbb
mov
jne
adc
add
xchg
push
mov
fmul
cltd
testb
or
ss
sti
in
lahf
xchg
fcompl
cmp
outsl
dec
mov
in
jge
push
in
lret
push
sub
mov
mov
add
pop
mov
outsb
add
lods
dec
cli
pop
mov
out
icebp
xor
pop
dec
lahf
add
lock
shrl
js
daa
and
push
push
sub
flds
iret
xchg
add
imul
mov
and
push
jge
push
or
inc
inc
adc
pop
es
and
shlb
cmp
sahf
xor
daa
jae
daa
push
or
inc
add
pop
mov
aaa
and
jg
inc
dec
loope
lea
add
ljmp
imul
push
or
test
stc
out
adcl
fistpl
das
jge
xchg
scas
cmp
or
add
mov
inc
lea
push
mov
in
jg
xchg
pop
hlt
cmpsb
sahf
pop
add
out
push
bswap
jmp
test
adc
and
cmp
cmp
js
fsts
add
mov
icebp
jbe
stos
xor
into
pop
mov
jo
call
cmpsl
in
xchg
bound
test
out
sbb
push
in
cmp
jo
mov
cli
imul
mov
sbb
cmp
mov
push
xor
mov
pop
maxps
inc
nop
call
push
in
push
sbb
pop
push
cli
cmp
mov
mov
xchg
jle
loopne
aaa
ja
fs
and
jmp
jo
or
dec
hlt
xchg
jmp
inc
std
mov
jns
and
ljmp
aam
test
pop
xor
pop
pop
or
aam
popa
or
leave
sahf
sub
or
addr16
in
cmc
movsl
inc
pop
fwait
cmpsb
pop
add
inc
inc
add
clc
dec
fdivl
test
add
imul
fwait
shlb
mov
das
xor
out
add
lea
jb
pop
out
sub
arpl
lahf
popw
sub
pop
test
enter
add
fwait
or
mov
cmc
or
mov
ss
push
test
outsl
lahf
cmp
cmpsl
jb
sub
pop
pop
ret
out
xlat
fsubrl
call
dec
xor
out
pop
xchg
pop
fs
xlat
stos
out
mov
and
orb
sub
mov
icebp
cld
xchg
adcl
insb
aaa
or
or
test
dec
dec
or
jne
fdivr
jmp
ja
jl
sbb
jb
gs
aam
add
add
or
call
incb
push
inc
lret
or
loopne
xor
icebp
push
adc
xor
cs
das
push
jae
out
dec
xchg
cmp
aad
cmpsl
cmp
xchg
shll
mov
imul
mov
jecxz
inc
popf
lret
cmp
fildll
cltd
sbb
adc
mov
cs
stos
mov
mov
xchg
push
icebp
xor
faddp
insl
lods
dec
inc
push
adc
push
rclb
stos
jno
pop
cmp
mov
or
and
push
das
orl
movsl
mov
sub
or
add
jne
lea
bound
jmp
sbb
xchg
je
xchg
addr16
jge
repz
sub
xor
pushf
aas
add
scas
hlt
xchg
popf
fsubl
int
loope
ja
mov
mov
mov
repnz
add
enter
jo
stos
insb
andb
pop
mov
jle
xor
jge
insb
mov
cmp
xchg
testl
aas
and
push
add
pop
add
je
mov
dec
inc
push
xchg
lret
xor
lds
daa
les
push
test
js
lods
addr16
cmp
jbe
adc
or
rep
les
lods
test
sbb
push
mov
aam
int
xchg
lret
sbb
jle
jne
add
ret
pop
mov
aas
xlat
andw
mov
mov
cmpsl
enter
push
dec
push
xor
int3
cmp
lods
pop
mulb
pop
ret
xor
fildl
xchg
pusha
fldt
xorb
adc
mov
pop
pop
shl
mov
add
cmp
rcll
mov
jbe
inc
pop
cltd
mov
stc
movsl
rclb
sbb
cmp
ja
dec
jbe
pusha
pop
adc
scas
cmp
daa
push
and
dec
xchg
pop
bound
mov
inc
push
pop
out
nop
daa
inc
insb
fnstcw
jnp
imul
mov
lods
outsb
int
movsb
sub
cs
hlt
int3
mov
pop
in
push
inc
outsb
or
setno
mov
daa
xchg
cli
shl
mov
flds
out
mov
out
or
or
mov
add
cwtl
pop
rolb
push
xor
ja
je
js
gs
cmc
xchg
xchg
fwait
and
jae
pop
pop
test
cli
push
adc
cmp
mov
sub
sub
idivl
bound
clc
mov
lret
add
sub
cli
bswap
jge
inc
xor
std
xor
ss
xor
popf
or
xor
sahf
mov
xchg
push
testb
add
adc
adc
cmc
addr16
inc
movsl
sbb
data16
and
push
lock
add
cmp
divl
pop
shrb
xor
sbb
addr16
adc
lods
out
or
mov
jge
lcall
xchg
ficoml
jecxz
out
pop
das
pop
ljmp
ficomps
add
in
fnsave
sbb
fcompl
push
xchg
cld
dec
pop
adc
in
fucomp
mov
pop
int3
pop
inc
gs
mov
ljmp
sub
bound
imul
sub
repnz
nop
inc
jnp
mov
std
cmp
into
mov
dec
cmpsl
jb
cwtl
mov
jle
arpl
ss
add
xchg
push
add
jns
push
sub
andb
or
mov
add
ds
adc
mov
cmc
cmp
sar
lods
stc
push
andl
incl
or
out
jns
xor
push
dec
xchg
sbb
cmc
fistpl
or
lcall
xorb
mov
scas
out
push
dec
jnp
ljmp
mov
bound
pop
imull
mov
xchg
xchg
push
xchg
icebp
outsb
jo
xor
jbe
cld
addr16
fadds
loopne
dec
into
push
aaa
inc
xchg
and
aaa
subl
shll
lahf
cmpsl
xchg
inc
ss
rcrl
fsub
xor
mov
cli
pushf
lods
in
rolb
inc
cvtdq2ps
int
xchg
adc
pop
mov
dec
js
pop
jne
ljmp
mov
mov
dec
pop
pop
pop
bnd
sub
jge
sub
scas
xor
int
fucom
xor
in
jo
or
cmp
fisubl
arpl
pop
int3
je
pop
jae
hlt
or
ror
push
adc
mov
pop
lcall
cmp
imul
mov
ljmp
mov
lea
decb
mov
dec
decb
inc
lcall
lcall
push
dec
mov
pop
or
xchg
and
and
sbb
iret
shll
mov
xchg
xchg
xchg
sbb
js
mov
loopne
test
cwtl
adc
jle
ror
sub
outsl
out
push
or
xchg
xor
das
hlt
imul
lcall
fbld
adc
pop
jmp
inc
fdivp
fdivs
xor
jne
mov
jns
call
lods
out
rorl
ja
adc
fisubrs
pusha
or
inc
xchg
jo
dec
sbb
cmp
dec
mov
inc
std
inc
in
movhlps
mov
xchg
in
dec
xchg
sub
mov
jmp
ds
aas
cvttps2pi
out
mov
or
add
pusha
in
mov
mov
dec
add
enter
cmp
xchg
xor
in
cmp
mov
clc
dec
sbb
add
scas
out
push
cmp
lods
rorl
imul
mov
or
or
hlt
in
loopne
fiaddl
and
addr16
out
out
daa
and
in
cmp
or
pop
push
or
pop
setg
fistpl
int3
enter
or
stc
outsl
scas
push
repz
cmp
ds
mov
cmp
push
cmpsl
xchg
add
stc
sub
push
std
idivl
sbb
ret
fwait
movsb
popa
pop
repnz
fdivrs
ret
xlat
cmpsb
inc
push
mov
dec
add
push
adc
fistpl
js
imul
pop
add
insl
insb
fcompl
pushf
loopne
out
add
sti
movsb
cmpb
ja
imul
popf
adc
test
je
in
mov
les
mov
data16
push
test
ljmp
stc
incl
rclb
or
push
adc
fcomip
popl
insl
sti
pop
ret
adc
out
rcrb
mov
cwtl
pushf
xchg
jge
sbb
push
je
inc
call
sahf
aaa
icebp
ror
xor
scas
je
in
or
fbstp
fsubrs
inc
jecxz
add
add
mov
fisttpl
pop
inc
sub
or
jo
mov
xchg
iret
std
std
nop
inc
outsb
mov
inc
je
sub
mov
jae
repnz
mov
mov
dec
mov
or
loope
lcall
xlat
sarl
xchg
cmp
outsl
fistl
cmp
push
out
out
add
sahf
pushf
les
stos
sub
mov
inc
in
adc
mov
scas
and
pop
push
fsts
data16
ret
lods
xor
call
inc
call
xchg
popf
mov
jg
imul
jg
jae
das
scas
test
jae
pop
loopne
xor
mov
mov
subb
xchg
es
popa
int
lods
repz
push
cwtl
or
mov
mov
dec
cs
sbb
lret
xlat
push
insb
jne
fs
push
sub
push
repz
pop
push
mov
scas
out
nop
rclb
add
popf
adc
outsb
and
leave
stos
lea
shl
push
jae
pusha
push
loopne
dec
add
jbe
insb
add
adc
pop
mov
push
mov
cli
mov
popa
pop
adc
mov
movsb
shl
jo
push
stos
mov
sbb
loope
mov
add
jl
sbb
push
es
subl
xchg
sbb
jbe
sbb
inc
cmpsb
rclb
aad
xchg
out
cmpsb
and
xor
jecxz
outsb
push
fmuls
cld
dec
dec
sahf
dec
arpl
cltd
add
sar
jb
decl
mov
in
fdivs
stos
push
pop
xchg
xlat
xchg
jle
scas
popf
and
pop
das
mov
xor
inc
sbb
int
std
push
adc
sub
aas
dec
push
xchg
xchg
nop
cld
cmp
sub
cwtl
in
push
aaa
cmc
sub
push
push
lahf
je
push
jo
bound
cmp
cmp
repz
test
ret
dec
cmpsb
shlb
enter
sarl
testb
jo
shrb
jb
or
pop
or
pop
pop
xor
xchg
stos
dec
pop
mov
pop
enter
outsb
sti
mov
jge
xlat
xor
pop
scas
xchg
inc
jle
pop
scas
pop
mov
out
lcall
jg
or
cmc
lods
mov
adc
fwait
imul
add
fisubrl
mov
aad
das
inc
xchg
adc
hlt
mov
xor
jns
xor
xor
pop
rorb
arpl
mov
jl
mov
test
xorl
imul
mov
and
pop
int3
sub
xchg
inc
sar
data16
push
mov
mov
fistl
loop
add
adc
xor
cld
jno
xchg
test
pop
adc
xchg
push
clc
jp
test
popf
addl
hlt
dec
stos
jle
pushf
nop
cmp
push
sub
roll
imul
inc
push
ds
dec
fmuls
sahf
repnz
insb
sbb
out
mov
sub
mov
mov
mov
sti
push
cmpsl
cmp
push
and
or
sub
lcall
mov
add
xchg
dec
leave
xor
call
dec
sbb
mov
inc
aam
rol
dec
and
sbb
pop
inc
ljmp
cmp
sbb
jmp
add
jo
loopne
xor
icebp
jne
loopne
sub
cmp
inc
xchg
jno
xor
sub
ja
mov
cmp
cmp
imul
scas
add
sbb
pop
ret
fs
add
mov
adc
mov
or
push
jle
pop
push
in
mov
xchg
shl
pop
inc
insb
fmul
aas
jge
mov
repz
push
dec
jae
mov
or
jne,pt
mov
gs
std
imulb
inc
repz
jbe
jnp
ret
push
shll
idiv
mov
sub
jnp
dec
cmp
pop
jge
xchg
aad
addr16
sub
push
jne
xchg
push
es
jae
arpl
xlat
repz
pop
fucomp
xchg
cmp
in
pop
pop
mov
and
and
xchg
mov
mov
or
mov
push
addr16
push
addl
dec
sub
test
xlat
out
sbb
insl
and
dec
mov
fistps
ljmp
cmp
dec
push
jecxz
pop
add
push
aas
sbb
repnz
mov
push
push
loope
call
xor
ss
adc
push
outsb
push
repz
lods
pop
mov
test
xchg
xchg
lret
xor
or
outsb
cmpsl
xor
aaa
nop
jne
lock
mov
leave
mov
mov
sub
pop
cltd
fcompl
into
fcoms
scas
jp
int
xor
jno
push
inc
daa
jecxz
cmp
xor
out
iret
push
cmc
or
jns
ror
popa
nop
clc
repnz
aas
fwait
push
out
loope
das
cmp
enter
fbstp
gs
dec
ds
pop
fnstcw
mov
inc
dec
mov
cmp
aaa
sti
leave
das
dec
jne
push
ja
cmp
cwtl
cmpl
adc
lcall
cmp
insb
jg
cld
enter
sub
or
mov
pop
jns
xchg
das
jle
push
dec
mov
ret
jp
loop
lahf
or
sbb
mulb
mov
mov
add
out
pop
pushf
xchg
call
pop
lock
mov
add
into
sbb
pop
mov
jo
jo
mov
mov
test
testb
aam
ja
lahf
jae
mov
bound
sarl
jb
sub
mov
outsl
popa
loopne
mov
js
dec
stos
loope
mov
les
fnstsw
test
insl
test
rclb
and
mov
int
jmp
add
mov
hlt
push
das
pop
cmpsb
shrb
scas
jecxz
sti
daa
pop
ljmp
sbb
add
mov
loop
pop
push
fisttps
mov
push
iret
aam
push
shrb
pushf
adc
push
mov
add
movsb
mov
or
push
fcoms
mov
inc
mov
and
add
in
sbb
and
call
std
dec
ds
jb
jle
sarl
or
pop
mov
and
inc
mov
fidivrl
cltd
sub
sti
jae
in
insl
inc
inc
out
pop
inc
lret
insb
shr
dec
jnp
jae
inc
cmp
and
pop
push
pop
add
sub
ds
fwait
xchg
push
sarl
dec
mov
pop
adc
sub
inc
push
fistl
mov
aam
mov
lods
sbb
in
pop
hlt
or
push
mov
pop
xchg
insb
jbe
shrb
pop
mov
cmpsl
out
fiadds
mov
xchg
stos
stos
xor
stos
mov
pop
mov
loop
inc
sbb
ds
cmpsl
lea
fdiv
bsr
adc
jg
movsl
aam
xchg
sub
push
push
and
or
push
mov
lods
add
cmp
sub
dec
insl
mov
xchg
std
mov
cltd
imul
jae
pop
das
mov
daa
push
mov
sti
icebp
int3
repz
dec
inc
xor
int3
pop
push
int
es
lock
pop
inc
test
fists
cmp
push
mov
xor
mov
not
mov
aam
xorl
dec
add
cmpsb
pushf
loope
xor
adc
fistl
xor
addr16
xor
mov
and
mov
icebp
cmp
fists
push
xlat
cmp
sub
repz
sub
xor
bound
adc
mov
and
jnp
push
pop
dec
cmp
repz
jp
fstl
jmp
dec
leave
ret
shll
cmp
xor
xor
ret
ret
inc
in
pushf
and
in
sti
add
mov
sarl
pop
xchg
cmc
dec
clc
pop
lcall
insl
jo
shl
mov
cmp
mov
loopne
mov
push
mov
aam
imul
add
xor
arpl
lcall
test
add
mov
sbb
mov
jbe
jp
pop
out
dec
pusha
cmc
mov
mov
js
rorl
call
mov
aam
stc
and
pop
and
repz
jbe
mov
cwtl
cmp
mov
lahf
cmp
loope
sarl
orl
ucomiss
lret
dec
cmp
mov
xchg
movsb
cmpsb
jmp
in
pop
test
inc
shlb
add
push
fisubrs
fdivrs
add
xchg
rcrl
adc
loope
incb
repnz
mov
push
or
jle
or
data16
add
insl
scas
lock
repz
sbb
mov
adc
push
std
push
arpl
adc
rol
mov
jg
cmp
sub
stos
pop
lret
aam
jne
pop
lret
mov
xor
testl
mov
push
int
push
jno,pt
and
fsubp
popf
and
daa
cmp
xor
mov
jle
repnz
lods
xchg
stos
gs
push
mov
shrl
mov
rcl
pop
or
xor
add
cld
ja
inc
jle
cld
in
xlat
loopne
push
xor
movsb
into
push
sbb
add
popa
lea
jbe
repz
fidivl
stc
fwait
push
outsb
nop
and
ret
push
xchg
xchg
mov
mov
xorl
aad
cld
xor
bound
jbe
addr16
push
lds
xor
mov
sbb
xor
inc
scas
sbb
bound
inc
and
and
add
mul
out
sub
cmp
mov
push
in
pop
jp
loopne
push
loope
cs
dec
push
and
sub
sbb
daa
pop
or
test
xor
xchg
cwtl
addr16
in
mov
cltd
scas
cmc
mov
push
jo
ds
xchg
mov
jae
xchg
pop
xor
cmpsb
leave
sub
inc
fistl
xchg
repnz
add
jno
xchg
fildll
imul
cmpb
jae
imul
insb
lahf
incl
fidivl
jle
add
xchg
add
iret
lds
scas
hlt
cmp
iret
inc
jl
pushf
cmp
push
adc
aas
xor
push
adc
aam
push
pop
cmpsb
popa
xorb
rclb
aam
cs
fbstp
adc
inc
movsl
fsub
inc
dec
sub
dec
xor
mov
aaa
xlat
lret
mov
mov
imul
andb
and
adc
cmp
sbb
lea
sub
enter
aas
jmp
mov
xchg
mov
lock
inc
or
mov
mov
add
fwait
in
mov
sbb
inc
sti
lea
loope
insl
cld
cmpb
inc
jae
xor
aam
mov
jnp
cmp
daa
xchg
pop
aas
in
or
lock
pop
mov
xchg
pop
mov
add
mov
inc
and
add
into
sub
int3
sbb
push
lods
jl
pusha
mov
pop
dec
dec
test
dec
xor
mov
imul
cwtl
jge
mov
inc
pop
in
cli
sbb
mov
cmpsl
jmp
or
xor
sbb
xor
xor
push
sbb
test
jns
hlt
push
fwait
xchg
movb
out
mov
jns
dec
xchg
popf
lods
xchg
mov
mov
jae
dec
or
fstpl
cmp
dec
inc
pop
inc
ret
xor
mov
ficompl
imul
push
sub
daa
sti
mov
das
add
movsb
and
cmp
jl
out
xchg
repz
jbe
jmp
push
aas
lret
in
mov
mov
ljmp
test
or
push
mov
mov
mov
xchg
fidivrs
fldl
mov
sub
mov
jno
push
mov
and
mov
pusha
add
and
not
pop
popf
hlt
jne
cli
mov
mov
add
jno
mov
out
xor
mov
fwait
push
sbb
scas
dec
stos
mov
fdivrs
add
mov
imulb
std
pop
xor
inc
std
pop
sub
xchg
fnstenv
mov
fwait
jmp
fistpl
in
mov
pop
into
or
mul
stos
jnp
daa
dec
cmp
mov
and
pop
mov
jb
and
mov
shll
movl
sbb
stc
and
mov
das
add
mov
arpl
xchg
mov
stos
sbb
hlt
out
push
cmc
stc
call
push
adc
mov
add
pop
mov
inc
test
push
icebp
pop
sti
pop
add
aam
mov
mov
andb
sbb
mov
insb
mov
mov
add
xchg
and
adc
inc
in
inc
stos
and
daa
stc
shlb
pushf
cmp
jg
jmp
stc
pop
not
xchg
insl
or
xchg
inc
and
cmp
mov
sbb
outsb
int
pop
addb
push
xchg
adc
mov
and
sbb
and
cmc
lahf
xchg
jns
xchg
mov
aam
popf
fsts
mov
pushf
pop
cmp
push
sbb
jae
jno
iret
addl
je
cltd
aad
xlat
mov
movntq
pop
xor
inc
and
pop
jbe
jmp
sbb
mov
frstor
mov
mov
xchg
test
or
addl
add
sub
dec
add
dec
xchg
push
fnstcw
clc
pop
sbb
cmp
into
sarl
and
push
jae
add
add
or
dec
pop
das
jno
dec
cmc
out
mov
dec
add
push
mov
nop
jmp
lahf
mov
push
mov
fwait
mov
inc
pop
pop
adc
fdiv
pop
loop
and
lock
xchg
mov
cmp
dec
xchg
sub
sbb
push
push
push
mov
int
or
lahf
and
dec
hlt
dec
daa
rorb
lods
push
out
adc
aam
sbb
test
xor
ficoml
cmp
fistl
shll
das
test
cli
mov
mov
mov
mov
cld
fildl
jmp
sar
bound
or
popf
mov
in
xor
fldpi
in
loope
and
daa
mov
sahf
push
lea
mov
push
jge
push
ja
in
sbb
movl
fdivs
xchg
lahf
fldenv
pop
cmp
jo
ss
ja
imul
xchg
adc
xchg
addl
subb
and
in
ret
push
aaa
fidivs
add
mov
push
sbb
push
pop
movb
lds
dec
mov
sti
or
sub
mov
incb
movsl
mov
mov
mov
xchg
dec
es
push
sub
mov
mov
dec
pop
mov
ror
or
test
sbb
icebp
pushf
jns
in
mov
pop
fdivr
mov
inc
and
out
adc
mov
movsl
in
jne
sbb
icebp
cmp
mov
lret
push
je
fcompl
inc
pop
jge
mov
pop
test
stc
pop
jbe
jecxz
adc
mov
ljmp
icebp
iret
icebp
dec
rcrb
mov
mov
cmpsl
lods
pushf
dec
dec
xor
sahf
and
sub
mov
jge
and
pop
ficompl
mov
lret
xor
ja
mov
jno
mov
mov
or
stc
mov
sbb
sub
push
dec
pop
or
mov
orb
sub
jae
mov
xor
outsb
cmc
pop
push
fcomip
or
xchg
pop
dec
lds
aaa
inc
add
cs
mov
dec
mov
lret
sub
pop
pop
xor
dec
inc
pop
mov
sub
test
adc
movmskps
out
xor
mov
xchg
or
in
divb
icebp
jmp
add
arpl
out
xchg
sbb
mov
sub
mov
mov
inc
mov
insl
pop
sub
cmp
daa
inc
mov
and
loop
or
outsl
cmpsl
out
stos
jno
cwtl
and
mov
jle
fistl
push
dec
xchg
push
sub
push
inc
adc
test
nop
out
sarb
std
sub
enter
add
jmp
stos
sbb
jae
ds
add
loope
aaa
jmp
cltd
jmp
popa
push
ret
int
sbb
hlt
dec
lods
sub
pop
xor
jmp
xor
popa
out
imul
xor
std
xchg
add
fistpll
sub
adc
mov
sbb
aaa
cmp
scas
xor
dec
push
sbb
shr
in
xchg
mov
ljmp
imul
fnstsw
popa
leave
out
dec
mov
lds
std
int
aaa
jecxz
pop
adc
dec
mov
mov
fdivrl
xchg
test
daa
push
sar
pop
test
fdivl
std
stos
jl
and
mov
movsl
cmp
mov
or
jnp
push
dec
pusha
cwtl
mov
sub
insl
arpl
jle
jg
hlt
shrl
dec
nop
fscale
pmulhw
repz
fwait
and
push
aaa
pop
out
cmp
aad
ljmp
xchg
mov
fists
test
ljmp
pop
mov
push
js
inc
mov
add
xor
inc
movsl
gs
ds
aaa
ret
daa
rcll
leave
pop
sub
jl
repz
jno
mov
idivl
push
in
in
lock
icebp
lods
iret
ror
mov
repnz
ret
movsl
jns
xchg
addr16
pop
inc
and
push
ret
mov
jl
or
xchg
fnstsw
inc
mov
loop
cld
fidivrs
enter
nop
lock
jno
lds
sbb
mov
fistl
push
xchg
icebp
jo
mov
push
add
jg
dec
lock
out
sbb
in
mov
in
jb
out
mov
and
push
stos
xchg
js
movsl
cmp
lret
dec
push
mov
es
fwait
sub
sbb
fwait
fs
mov
mov
cmp
mov
call
nop
pop
lock
aas
mov
jmp
fcomps
shlb
xor
in
hlt
es
xchg
divl
mov
xor
out
mov
xchg
and
cmp
ret
cmp
test
shlb
out
in
cmp
or
stos
loopne
in
mov
popa
mov
das
imul
rcl
inc
pop
aaa
jo
xchg
mov
pop
xor
das
test
jnp
mov
xlat
xchg
or
jb
iret
cs
stos
xchg
icebp
jo
adc
lea
or
xchg
push
mov
cmp
sub
subb
cmp
or
movsl
int3
dec
cmp
mov
cmp
in
push
popf
stos
cmp
sub
cmp
xchg
jle
popf
pop
adc
mov
jl
lret
stos
dec
int
push
xchg
sbb
lock
mov
jmp
int3
and
add
xchg
pushf
test
or
clc
test
hlt
and
sbb
jbe
leave
in
fists
inc
add
push
pop
idivl
jp
or
mov
push
jge
jb
pop
int
movsl
js
pop
and
mov
cmp
jbe
aam
shll
jmp
push
sti
or
std
cltd
add
mov
outsb
ds
jo
jge
mov
fnstcw
mov
orb
mov
cs
fwait
cltd
sub
pop
lret
jbe
or
push
pop
push
xchg
push
mov
fisubrl
sahf
sbb
lahf
adc
scas
out
mov
lods
jle
push
test
and
call
sbb
lcall
mov
xor
cmp
outsb
and
xor
popa
xor
push
or
pop
in
cmp
cwtl
incl
js
jmp
call
adc
pop
gs
stos
sbbb
mov
jl
out
aam
scas
jne
clc
dec
mov
push
hlt
sti
leave
mov
ljmp
add
sahf
daa
imulb
fpatan
sub
and
lahf
xor
aaa
push
mov
bound
mov
sbb
push
push
lds
and
int
push
mov
inc
adc
push
aas
cwtl
notl
movhps
mov
add
jge
outsb
ret
in
rorb
sbb
xchg
xlat
and
hlt
enter
out
push
xchg
mov
and
addl
mov
mov
popf
ret
sbb
sbb
aas
mov
push
mov
dec
jns
jo
pop
lods
xchg
inc
or
adc
pop
aas
pop
jge
sbb
xlat
add
popa
cld
push
daa
mov
arpl
jle
repz
nop
test
or
lcall
add
loopne
sbbl
push
fsubl
imul
ss
pop
in
mov
ja
adc
ss
out
mov
cmp
cmp
cmp
sub
rolb
mov
inc
add
std
rorb
sub
xor
push
and
mov
dec
je
sbb
lods
call
sub
mov
sbb
scas
clc
sbb
sahf
icebp
cwtl
leave
inc
sbb
mov
rolb
jnp
imul
inc
mov
leave
mov
adc
out
test
bound
jecxz
push
mov
nop
hlt
scas
mov
mov
pop
insl
daa
pop
cmpl
push
adc
adc
enter
xor
xor
jne
rorb
inc
cwtl
inc
lahf
aad
xchg
lret
xchg
cltd
jns
sub
int3
rolb
in
stos
jae
in
sbb
xchg
shrb
sub
adc
shrb
mov
daa
movsl
vpsubsw
and
cs
mov
out
mov
dec
mov
mov
gs
in
add
dec
push
in
jle
test
daa
aaa
adc
and
push
ds
dec
gs
lcall
adc
subb
add
stos
xchg
add
adc
das
shl
dec
pop
xchg
push
or
push
into
jecxz
jge
pop
imul
or
add
jo
and
ljmp
sub
mov
cmp
idivb
aad
and
mov
cmp
pop
pop
daa
and
add
sub
cmpsb
ja
mov
mov
sbb
mov
jns
hlt
jge
aaa
jp
js
cmp
push
rol
cltd
inc
xchg
jle
sbb
push
and
aam
jl
mov
out
mov
pop
mov
movsl
pusha
adc
imul
push
into
cltd
push
out
xor
pop
mov
dec
push
xor
push
xchg
hlt
and
cli
jg
not
je
inc
in
xchg
dec
lret
xor
ja
xor
xchg
push
xchg
lds
push
nop
sub
aam
push
cli
aas
ljmp
or
sbb
lret
jne
push
cltd
pop
test
and
sahf
pushf
ss
outsb
and
mov
xlat
jbe
in
pushf
cli
or
stc
xchg
adcb
jle
ja
add
sub
pop
lods
jg
frstor
push
or
push
mov
push
and
adc
mov
jle
pop
push
popa
movsb
inc
pop
scas
aam
xor
ja
or
xor
xchg
adcb
stos
fdivrl
or
je
adc
jp
cmp
aas
jno
test
std
pop
push
icebp
inc
adc
fistpll
dec
lods
pusha
pusha
lods
xchg
push
jne
add
xchg
subl
cmc
dec
ret
cld
fxch
ret
adc
js
js
sbb
bound
push
and
pop
fcoms
jge
fimull
pop
push
rorb
rorl
xchg
mov
mov
add
lea
aaa
push
xor
cmp
loope
sub
lea
jge
nop
insb
in
mov
jl
pop
mov
mov
idivb
cmp
jmp
enter
subl
add
jge
dec
xor
add
add
jg
add
adc
mov
sahf
aas
mov
xlat
sub
outsb
inc
mov
add
and
jg
adc
sbb
mov
aam
mov
in
popa
mov
ja
cmp
dec
outsl
call
xlat
xlat
xor
fidivs
cld
fstps
push
push
push
aaa
loope
daa
jae
aaa
mov
int
out
inc
add
mov
andb
jnp
jae
and
test
iret
push
lret
js
add
test
jae
daa
add
jae
inc
and
xor
xor
aas
outsl
sub
dec
out
loopne
das
or
out
rolb
popf
test
xchg
in
call
adc
xchg
mov
mov
idiv
mov
mov
xlat
push
cmpsb
push
addl
mov
mov
loope
sar
les
fwait
mov
not
loopne
leave
stc
addr16
movsb
sbb
jecxz
adc
mov
pop
sti
jne
xchg
cmpsl
mov
adc
mov
pop
ret
mov
add
and
cmpsb
std
dec
ljmpw
adc
sub
sarl
and
cmp
adc
and
pop
push
pushf
xor
xor
push
sub
pop
stos
jne
sahf
subl
xchg
clc
inc
out
popf
mov
push
das
or
outsb
dec
jbe
loopne
fld
test
vpsraw
pop
and
loope
cld
sbb
fwait
mov
mov
pop
cli
mov
add
adc
lret
mov
push
push
mov
jge
rcrl
xchg
dec
aas
push
outsb
xor
leave
pop
iret
rcrl
jg
jne
mov
stos
dec
loope
sbb
shll
push
hlt
dec
addr16
out
cmp
outsl
xchg
pop
imulb
add
mov
cmpsb
adc
das
pop
pop
push
lcall
and
fcmovbe
popa
loopne
adc
and
add
stc
mov
out
loop
cwtl
mov
adc
addr16
xor
shrb
mov
loop
sub
adc
int
shl
push
dec
push
orl
pop
daa
push
ss
jnp
dec
or
and
and
jbe
in
mov
or
mov
int
dec
cmpsb
out
test
lea
ljmp
mov
push
pop
insb
add
in
jle
push
test
fidivl
out
dec
icebp
mov
fwait
jmp
imul
je
cmp
jno
stc
xchg
pop
jmp
cmc
ret
push
xchg
movsb
bound
pop
push
adc
bound
jl
mov
mov
loop
push
cmpsl
mov
inc
jmp
push
jecxz
mov
out
ljmp
cmp
cmp
clc
ss
mov
loop
sub
or
add
leave
mov
push
cmp
notl
pop
sub
mov
jl
pop
icebp
test
hlt
cmp
xchg
jecxz
inc
incl
sti
xchg
lahf
popl
sub
int3
and
inc
mov
loop
xor
pop
xchg
push
push
jge
into
stos
fsubs
inc
jo
or
mov
jl
jle
cs
lahf
fwait
jno
ljmp
int3
sub
mov
inc
rclb
xchg
push
mov
bnd
or
clc
xlat
lods
or
pop
lret
mov
enter
jnp
das
add
dec
div
cmp
inc
cli
jbe
lret
add
sub
lds
jmp
jno
xor
cmp
push
jns
xchg
je
xor
in
pop
dec
xchg
ret
jp
push
pop
addr16
push
rol
daa
data16
fdivrl
daa
loope
dec
mov
add
lahf
jne
mov
sti
std
push
sub
and
sub
shlb
es
test
cmp
sahf
adc
shlb
ret
jne
jecxz
lahf
jnp
cmove
add
sbb
or
jb
dec
sub
call
jp
xchg
push
in
out
ret
add
jb
jg
aam
lods
sahf
frstor
mov
and
ret
cwtl
mov
pop
popa
sub
mov
push
iret
mov
pop
test
idivb
inc
stos
sbb
inc
call
hlt
xchg
and
ret
xor
mov
sub
icebp
and
cli
dec
jno
incb
loopne
shr
cmp
das
or
sbb
add
cmp
push
jne
and
push
cmp
sarb
adc
pusha
xchg
xchg
mov
mov
fisubrs
mov
mov
push
add
leave
jne
adc
mov
ret
sub
jno
in
push
sti
clc
cmp
mov
jb
outsl
sahf
pushf
inc
jmp
or
xor
aad
or
or
mov
pop
lcall
jmp
dec
jne
test
sbb
add
xchg
lock
pop
insb
popa
jle
inc
iret
neg
pop
insb
inc
jb
rcrb
daa
jo
lock
enter
cltd
adc
xchg
icebp
popf
bnd
add
inc
ds
jp
cmp
add
outsb
scas
jne
out
add
jo
out
enter
insb
scas
scas
mov
dec
push
int3
out
pop
dec
shl
pop
pop
dec
loopne
sbb
hlt
push
mov
imul
mov
jns
stos
enter
loop,pt
ss
push
scas
sti
rorb
and
adc
sahf
bound
pushf
sbb
cmp
fisttpl
dec
scas
push
scas
mov
and
jns
rorb
iret
or
cltd
popa
jp
clc
test
cmp
mov
fistpll
adc
xchg
sub
pop
repnz
jl
rolb
push
cltd
mov
cmp
aaa
lcall
lds
pop
inc
push
cmpl
stos
jnp
adc
sar
fidivrs
inc
sbb
jecxz
sub
call
es
pop
xchg
push
pop
adc
xchg
mov
ja
test
hlt
push
rclb
orb
js
stos
insl
lret
out
outsb
and
pop
ficomps
jmp
ja
sub
or
mov
push
cmp
into
mov
sbb
sub
pushf
insb
dec
inc
cmp
fistl
cmp
jecxz
cmp
mov
out
sahf
in
xchg
pop
jb
jb
push
daa
in
mov
xor
dec
pop
shl
jo
pusha
cmc
push
mov
inc
push
rclb
mulb
jp
cmpsl
xor
out
call
stc
mov
test
jg
pop
test
xor
push
insb
and
mov
add
mov
or
and
mov
xlat
xlat
pop
add
fdivr
sub
mov
das
mov
outsb
mov
mov
scas
repnz
add
push
loop
jne
sahf
push
mov
mov
loop
adc
pop
ss
pop
inc
nop
inc
ja
es
jbe
cmp
sbb
out
cmpsb
fsubrs
sti
or
js
dec
jne
mov
ret
cmp
mov
xor
stos
test
scas
jae
xor
push
cmp
call
mov
out
int3
mov
cli
orl
add
mov
sbb
mov
xchg
mov
sub
xor
cmp
pop
adc
inc
xchg
add
outsl
shr
sbb
insl
cmc
out
loopne
fs
in
pop
ja
xchg
fcomps
ljmp
adc
mov
and
jmp
test
in
insl
lret
push
xchg
int3
or
test
enter
jecxz
loopne
cmpsb
lret
into
notl
aad
push
movsl
or
sbb
mov
fisubrl
xchg
inc
dec
mov
mov
bound
fiadds
push
adc
xor
hlt
testb
mov
fwait
and
xchg
jne
xchg
pop
orb
adc
ss
push
jge
sbb
cmp
cmc
enter
les
dec
sbbl
int
bnd
insl
xlat
mov
dec
dec
fdiv
push
stc
jne
mov
fidivrs
insl
sbb
out
add
rcl
adc
testb
lods
lret
aas
test
out
xchg
push
inc
in
outsl
inc
dec
mov
test
cmpsl
inc
insb
sbb
xor
jnp
icebp
mov
mov
cmp
dec
out
push
aaa
cmpsl
cmpl
data16
nop
sbb
in
mov
andb
xor
sbb
dec
pop
imul
rorl
pop
ret
andps
sbbb
dec
cmc
loop
es
mov
pop
xor
mov
pop
sti
rcrl
xor
lahf
or
stos
xor
pop
mov
testl
mov
or
xchg
inc
mov
jecxz
mov
xchg
test
shlb
decl
jne
loopne
outsl
popa
pop
dec
scas
sarb
inc
fstpt
mov
scas
pop
inc
mov
mov
dec
or
dec
loopne
jae
push
xor
fstl
adc
mov
stc
cmp
imul
gs
sbbl
dec
inc
ficoms
negl
push
int
loopne
or
sbb
add
in
shll
adc
ss
mov
js
mov
mov
jae
stos
xchg
orl
or
push
or
sbb
push
pusha
pop
sbb
pop
adc
inc
popa
xor
xor
arpl
fs
fs
inc
push
insb
test
and
pop
cmp
rcrb
push
mov
js
in
nop
insb
and
jno
out
mov
lods
push
adc
lods
fwait
aas
loop
insb
jbe
fwait
mov
fsts
stc
call
xlat
lods
push
jecxz
data16
push
lcall
sarl
in
pushf
push
cli
xchg
fmuls
fadd
xlat
xor
pop
sti
dec
inc
mov
xchg
imul
mov
push
int3
add
shrb
cmp
into
in
pop
lcall
inc
push
add
mov
inc
les
dec
and
xor
push
sbb
mov
add
and
rclb
inc
pushf
aas
cwtl
add
int3
push
testl
xchg
sarb
test
pop
push
imul
fists
jl
or
stc
out
sub
sbb
push
pop
add
ret
dec
add
ja
enter
repz
sahf
insl
mov
sub
fadd
jb
lret
jl
inc
mov
mov
or
loopne
popa
xor
test
ds
in
sub
or
sub
in
lods
jg
in
push
repnz
outsl
test
arpl
in
popa
xor
push
xchg
mov
lea
mov
add
shr
into
mov
ret
dec
outsl
xor
rorl
stc
sub
jo
mov
sahf
adcb
jns
add
outsb
int3
fisubrs
mov
jmp
fisttpll
pushl
insl
imul
pop
in
js
push
jecxz
roll
push
cmp
dec
data16
cltd
loop
lret
mov
cmp
xchg
xlat
jb
mov
dec
mov
imul
add
jae
cmp
cmp
adc
xor
and
jecxz
movsl
in
cmpl
out
sbb
lods
mov
daa
ror
inc
loop
outsb
test
lods
aam
aaa
jp
ljmp
js
lret
dec
lods
mov
fwait
mov
xchg
jg
test
mov
add
loope
in
mov
shll
sahf
sbb
in
aas
adc
iret
movsb
jbe
test
adcl
push
bound
dec
pop
into
cmpsb
cmpl
jne
lahf
movsb
or
xor
push
jmp
push
inc
jg
inc
adc
rcrl
sub
pop
insl
aaa
das
jae
aam
popf
adc
jmp
lahf
add
sahf
mov
add
fbld
loopne
test
jb
push
mov
loop
iret
sbb
add
push
dec
mov
sub
adc
movsb
jmp
sbb
mov
mov
jnp
mov
mov
aas
clc
cmp
imul
andb
push
das
dec
cwtl
lods
add
test
inc
jle
or
pushw
adc
xchg
ja
pop
cli
cs
repnz
cmp
sub
lea
scas
jecxz
lock
add
jb
aam
jle
icebp
movsl
push
add
out
outsb
xor
dec
adc
and
out
lods
int
xchg
or
adc
xchg
pop
in
push
sbb
adc
jge
jmp
hlt
pop
jge
movsb
jnp
cmp
add
aaa
lret
inc
fldl
aam
test
cmp
stos
push
shr
call
ljmp
int3
sub
ja
add
and
aaa
gs
xor
sbb
icebp
popa
stos
movsl
mov
mov
jnp
out
test
mov
mov
mov
mov
xor
pop
xchg
sbb
and
mov
mov
cmpsb
cs
cld
sahf
dec
or
inc
xor
jno
outsl
xchg
enter
or
lock
push
mov
sub
mov
into
das
negb
outsb
jnp
adc
in
out
pop
loopne
movsb
cmp
sbbl
dec
mov
push
mov
or
fisttpll
pop
mov
inc
bound
rcll
cltd
cmp
dec
shlb
orl
jle
inc
inc
or
jb
jmp
imul
mov
ja
nop
imul
pop
mov
cmp
pop
popa
rorl
shlb
mov
push
scas
mov
loop
mov
cmp
pop
push
inc
push
sub
ds
ret
scas
mov
sub
dec
dec
jmp
mov
adc
out
xchg
pop
cmc
fwait
jbe
dec
push
cmp
push
dec
push
dec
iret
xchg
leave
test
lahf
fwait
and
push
lds
lea
jmp
lret
adc
subb
mov
leave
cmpsl
xchg
bound
jl
jo
xor
mov
xor
rcll
cmp
popa
dec
out
ds
xchg
roll
in
cs
es
mov
int
cs
mov
lods
mov
xor
aaa
add
mov
push
testl
gs
stos
jmp
leave
xchg
popf
adc
dec
and
sub
cs
in
pop
movsl
jl
shll
movsb
cli
ret
mov
mov
rcll
inc
lock
hlt
sbb
test
sti
aam
push
test
sbb
push
scas
aaa
negb
scas
jg
testl
dec
pop
aaa
insb
cmp
jecxz
xchg
mov
popa
mov
adc
jb
sbb
jmp
xchg
adc
shll
out
fiadds
jmp
push
mov
mov
popa
mov
xchg
lret
add
cmp
inc
xchg
jl
sti
push
sub
mov
push
insl
out
cs
loop
popf
mov
testb
dec
dec
mov
mov
xor
cltd
jmp
inc
call
in
and
in
addr16
adcl
cmp
xor
mov
mov
sub
and
and
fldl
aad
out
xor
xor
gs
inc
cmp
cmp
xchg
pop
stos
push
in
cmp
or
or
jo
out
dec
movsb
jge
or
or
dec
jmp
cmp
xlat
mov
dec
or
mov
leave
pop
jp
mov
fsubrl
pusha
in
clc
andb
and
inc
nop
pop
xchg
test
adc
cltd
addr16
jo
inc
sub
or
xchg
mov
cmp
xchg
lea
xchg
jbe
pop
adc
pop
jge
jo
stos
repz
icebp
jmp
xor
mov
jno
jbe
dec
xor
and
sub
adc
add
cmp
mov
inc
pop
cmp
mov
popf
sahf
test
sbb
imul
mov
jnp
dec
iret
fldl
enter
mov
inc
pop
sti
inc
movb
and
xorb
cld
cmp
cltd
jno
shlb
test
xchg
iret
inc
xor
cli
lock
nop
popa
fucom
int3
bound
inc
xor
lahf
lret
clc
loop
jbe
pop
xchg
or
sahf
movsl
outsb
or
loope
movb
test
dec
jg
mov
lret
movb
dec
jae
test
subb
fnstenv
outsl
in
les
and
stc
sahf
gs
sbb
cmp
ss
sahf
sbb
das
cmp
jecxz
pop
mov
mov
stc
cltd
dec
outsb
pop
sti
ja
inc
dec
lret
and
sbb
add
fldcw
cmp
cmc
inc
add
sbb
popf
idivl
dec
das
dec
or
pop
mov
fbld
loope
in
fstp
js
lahf
ljmp
pop
rcll
inc
sbb
push
mov
push
aas
pop
inc
mov
sbb
xor
inc
dec
adc
sbb
jo
or
mov
out
lcall
es
in
mov
dec
push
stc
cmc
cmp
cmp
mov
sbb
push
push
shrb
jae
out
test
sbb
jno
pushl
cmc
fcmovu
cmp
pop
mull
xor
xchg
push
dec
mov
jmp
xor
pop
pop
jbe
cwtl
enter
scas
push
insb
xchg
out
pop
add
gs
inc
inc
scas
pushf
add
int3
lock
xor
xor
inc
jne,pn
sub
repz
ljmp
mov
ss
ds
mov
xor
ja
pop
fisubrs
push
pusha
and
mov
jnp
fcmovb
add
mov
sub
ret
lahf
sbb
mov
sbb
xchg
mov
mov
imul
pop
repz
mov
sbb
faddl
sub
lret
stos
jb
mov
in
sbb
push
dec
sub
lcall
dec
sbb
sub
loopne
hlt
shll
xlat
loopne
or
decl
jecxz
xor
pop
cltd
shl
xchg
outsb
out
aas
in
jns
jg
push
repnz
nop
jb
ficomps
test
ss
mov
push
mov
cli
jbe
inc
fsts
mov
fisubl
inc
pop
push
iret
ljmp
hlt
leave
enter
ret
bound
xchg
ret
mov
mov
stos
movb
or
lret
shll
cmp
shlb
push
in
pop
pop
lds
ja
add
loope
sub
dec
lret
enter
dec
orb
pop
xor
lods
addr16
xchg
lret
aas
mov
sbb
push
fmul
lret
xchg
out
or
cld
mov
adc
xchg
mov
add
imul
and
stos
popa
js
or
xor
dec
xchg
js
movsl
shlb
push
int3
jge
cwtl
out
mov
xchg
shll
in
push
inc
sbb
dec
movsl
xor
test
and
inc
enter
cmpsl
mov
fwait
jbe
aad
dec
sub
add
mov
pusha
mov
xlat
cmpsb
jl
cmp
pop
jae
sub
shrb
imul
sbb
popf
lahf
shlb
addb
sbb
adc
and
aaa
inc
ds
xchg
in
movsl
cs
lret
adc
test
repnz
or
mov
popf
xchg
int3
jg
sbb
fwait
movsl
mov
cmp
negl
cld
daa
pop
andl
cmp
movsb
mov
pop
mov
jae
mov
dec
cmp
inc
testl
or
je
cmp
es
mov
or
inc
dec
sbb
push
mov
ja
mov
lahf
ja
dec
test
sahf
dec
out
mov
mov
insl
rclb
adc
aas
aaa
es
cli
mov
rclb
xor
or
xor
push
push
pop
inc
lahf
jb
inc
idivb
aas
cld
mov
adc
and
inc
pushl
or
sbb
mov
ret
mov
adc
das
xlat
adc
int
lea
dec
ret
inc
jmp
push
pop
aaa
xor
cmp
jecxz
xchg
add
pop
fstl
sbb
mov
pop
xor
mov
mov
sub
scas
cmp
fwait
in
inc
fiadds
add
lods
jge
mov
mov
shrl
sahf
jbe
adc
push
int
mov
btr
subl
aam
cmp
sbb
lret
lcall
jmp
push
add
dec
inc
cwtl
bound
pop
test
inc
add
mov
or
pop
mov
loopne
popa
xor
jne
das
jns
mov
mov
mov
mov
lods
and
fisttpll
xlat
ss
sbb
cld
in
in
sbb
jg
xor
lods
pushw
xor
pop
jae
imul
test
jnp
pushf
mov
cs
and
out
aam
popa
add
mov
or
pop
cld
cmp
and
sahf
cmp
xchg
add
sub
jns
jge,pt
jge
mov
nop
and
inc
or
jp
mov
xor
jecxz
jb
pop
cmpl
sub
arpl
dec
sub
ret
sub
ficompl
div
sarl
inc
and
mov
enterw
out
insl
ss
xor
dec
mov
ret
pop
sti
stos
cmp
lahf
sarl
dec
mov
rclb
call
fsubs
ja
jnp
lea
dec
out
mov
mov
mov
pop
das
lods
in
imul
adc
xor
rcrl
iret
fs
and
mov
inc
push
jnp
cmp
movsb
cmc
ja
xchg
xchg
mov
iret
test
int
in
cwtl
adc
inc
pop
xchg
out
loope
and
sub
test
test
add
mov
xchg
mov
test
jmp
sbb
insb
inc
loopne
or
into
addr16
fstpt
lahf
aaa
add
inc
mov
cmp
mov
mov
add
shlb
dec
jno
mov
add
xor
cmc
mov
das
fistpll
and
pop
or
shrb
dec
jmp
add
xor
xchg
add
push
cmp
xchg
popf
jb
pusha
decb
xchg
cmp
inc
pop
out
pop
xchg
lret
enter
pop
es
sub
ss
ds
push
mov
cwtl
sub
xchg
inc
movsl
push
mov
pop
lods
dec
pop
or
jecxz
xorb
lahf
mov
inc
jg
mov
fcmovnu
scas
hlt
add
repz
arpl
dec
xchg
inc
testb
cld
or
int3
pop
scas
sti
cmp
cmpsb
sbbl
shll
lahf
pop
push
mov
push
pop
mov
pop
mov
cmpsl
xchg
scas
dec
ss
popa
scas
iret
pop
out
adc
xor
pusha
and
sbb
xchg
scas
je
add
lahf
push
out
popf
adc
xor
loopne
sbb
mov
mov
aas
and
mov
andl
hlt
inc
add
add
sub
mov
mov
jae
arpl
cmp
test
jecxz
adc
movsb
sbb
xchg
shrb
nop
subb
mov
aas
push
sti
xchg
lcall
lds
pop
call
cmp
jns
cmp
and
xor
dec
or
inc
dec
ds
out
fs
icebp
push
stos
out
mov
movsb
jle
xchg
mov
stos
inc
inc
or
pop
sub
add
loop
into
push
out
adc
pop
jmp
aaa
ror
adc
xchg
add
movsl
sbb
inc
test
and
or
inc
loopne
mov
jmp
cmp
inc
lds
mov
mov
or
xchg
push
mov
cmc
mov
mov
mov
inc
in
fidivrs
jo
les
into
into
ljmp
dec
insb
sbb
push
sub
rorl
and
dec
mov
in
gs
sbb
sbb
fsqrt
mov
sub
mov
roll
adc
mov
cltd
xorb
jbe
inc
loopne
daa
sub
or
mov
or
mov
std
inc
mov
push
aas
mov
fs
pushf
jle
cmp
lock
out
lret
and
xchg
sub
movsl
push
je
mov
lock
and
imul
enter
push
adc
orl
mov
loope
cmp
cmpb
and
push
and
int3
sub
push
pop
and
inc
das
jmp
sub
insl
inc
addr16
cmp
movsb
and
loope
cmp
mov
ret
iret
sbb
adc
push
mov
aad
dec
or
cmc
inc
cmc
out
xchg
jb
sahf
sbb
pop
xlat
outsb
dec
aad
clc
inc
xchg
pushl
std
out
das
fdivl
cmp
outsl
lahf
or
sub
jo
inc
jecxz
dec
jp
push
jmp
test
dec
test
iret
repnz
mov
push
pop
pop
push
outsl
push
insl
xorb
jmp
sub
mov
mov
fstpl
and
add
and
pop
jnp
push
pop
lds
jg
sub
pop
pop
pop
mov
ret
lods
sub
lret
inc
popf
push
ss
jns
lahf
dec
sbb
movsl
cli
mov
jb
pop
fimull
in
push
dec
lea
pop
sub
pop
sub
js
les
add
movsb
int3
pop
jmp
data16
lahf
ja
ret
das
add
roll
cwtl
sbb
mov
jb
loopne
cld
aad
movsl
cmp
xchg
pop
fmuls
cmc
push
push
sbb
sub
xor
adc
dec
gs
in
out
mov
xor
and
sbb
xor
mov
aas
cmpsb
or
test
ret
int3
test
lretw
fsubrp
adc
mov
shlb
test
or
push
jge
mov
push
mov
dec
in
and
imul
mov
sbb
pmaxsw
adc
push
sti
pop
cld
jmp
inc
pop
mov
hlt
jno
stos
fistpl
lock
mov
push
daa
shr
pop
popf
jnp
sub
stos
std
and
sbbb
aam
mov
cmp
push
test
lret
lock
mov
repz
or
into
sbb
das
arpl
jp
outsl
mov
imul
lea
xchg
fwait
jae
das
aaa
jns
and
roll
xor
mov
decb
or
push
or
push
cmp
lahf
mov
mov
fs
dec
push
jae
aam
sub
mov
and
mov
inc
pop
jg
call
aas
daa
jns
addr16
sub
shll
and
cmpsl
lods
sahf
cmp
cs
sbb
jmp
lea
iret
scas
jg
les
lods
and
xchg
add
lods
pop
xchg
inc
mov
adc
pushf
mov
xchg
imul
xor
inc
push
sbb
lods
push
inc
add
push
cmp
dec
pusha
mov
pop
std
and
ja
icebp
ret
in
jg
xchg
out
inc
cmp
repz
jo
and
push
fwait
add
and
sbb
pusha
out
mov
ret
ficompl
or
jbe
add
jnp
cli
inc
frstor
call
mov
or
pop
outsb
dec
inc
inc
enter
inc
mov
inc
push
dec
dec
sbb
clc
loop
and
xor
xchg
xor
ja
enter
mov
and
push
inc
iret
std
inc
bound
cmc
jle
movl
outsb
call
mov
mov
aam
add
mov
les
xchg
popf
xor
cmp
and
jmp
adc
mov
ljmp
jmp
fbstp
and
pop
xor
enter
dec
inc
sti
cmp
adc
and
cwtl
cmpsl
es
and
push
inc
jl
adc
add
mull
cmp
ds
pop
iret
gs
testl
movsb
xchg
into
inc
ds
iret
and
gs
lcall
xchg
inc
add
hlt
movsb
add
jno
and
and
mov
lds
movsl
and
fsts
cmpsb
jecxz
mov
mov
add
mov
das
pop
popf
mov
cmp
iret
add
xchg
add
cmpsb
and
rcll
pop
sbb
cmc
jle
lret
inc
push
and
push
out
and
loop
inc
ljmp
das
mov
lock
dec
out
cmp
fucom
es
xor
loope
pop
cmp
leave
push
inc
loopne
adc
das
or
ja
dec
pop
inc
stc
push
out
mov
fsubs
mov
dec
sbb
mov
loop
ret
mov
stos
jo
scas
dec
cli
outsb
sbb
sti
movsb
call
xchg
jo
fldl
scas
lahf
pop
loop
imul
jl
dec
ucomiss
fisubs
cltd
inc
mov
fucomp
push
mov
sub
lcall
es
cmpsl
jno
pop
lea
push
stos
pop
push
xchg
scas
mov
inc
mov
les
or
mov
adc
jne
inc
aam
pop
push
cmp
in
mov
push
daa
mov
gs
mov
dec
add
cmp
add
nop
shlw
int3
push
mov
mov
repz
inc
mov
cmp
cmc
sbb
ljmp
clc
jnp
push
inc
push
push
out
rclb
sti
jge
push
movsl
movb
mov
pop
lods
mov
mov
cmp
or
mull
sub
mov
mov
or
push
push
and
scas
cmp
dec
mov
in
insl
cs
out
push
subb
pop
push
adc
inc
stos
fwait
or
repnz
stos
ljmp
pop
push
or
push
fisubrs
push
minps
sbb
inc
mov
imulb
das
arpl
ljmp
ror
in
lock
jb
pop
inc
ss
xor
repz
dec
fcoml
fiaddl
lea
or
out
stos
in
dec
arpl
pop
and
or
std
sub
iret
sub
push
pop
cwtl
addr16
lods
pop
dec
lods
xchg
adc
imul
pop
xor
popf
pusha
mov
xor
dec
sub
xor
and
xor
or
adc
push
cmp
sbbl
mov
add
pop
cli
push
leave
jnp
and
fisttpll
dec
push
int
mov
bound
xor
in
pop
jp
push
les
xor
idivb
cli
lret
test
fbstp
jbe
sub
push
push
bound
insb
cli
ss
and
scas
rorb
push
xchg
push
mov
loopne
into
inc
add
push
sbb
lret
test
popf
test
inc
in
cmpsb
insb
dec
in
jb
pop
xchg
dec
cli
inc
adc
lahf
test
lods
out
xor
pop
pusha
out
jo
sbb
cld
sbb
mov
and
loopne
in
xorb
lahf
in
inc
cmc
inc
out
adc
hlt
les
lock
adcb
fnstenv
repnz
in
test
xchg
xor
jae
cmp
jecxz
xchg
testb
xor
bound
inc
ja
dec
mov
leave
mov
in
or
mov
sub
ret
cmp
xor
jne
ja
hlt
adc
test
icebp
mov
push
mov
outsl
out
and
mov
cli
bound
cmp
or
inc
sbb
scas
mov
sub
inc
mov
lret
xchg
push
dec
jl
dec
sub
mov
adc
sbb
mov
sarl
jle
adc
xor
mov
adc
fcmovnu
movsl
or
dec
xor
ss
xchg
jns
or
arpl
jae
pop
sub
scas
rcll
mov
scas
rcll
mov
mov
inc
adc
sbb
sti
jl
test
mov
in
jle
and
dec
mov
add
mov
xlat
push
in
sbb
add
fcoms
cli
pop
test
cs
sub
leave
out
mov
in
test
cmp
repz
pushf
ds
dec
pop
fwait
and
iret
in
sub
aad
inc
cmp
mov
xlat
sbb
jmp
out
dec
sahf
shrb
fcompl
outsl
notb
mov
sub
std
lcall
jae
clc
pop
psllw
xchg
push
repnz
xchg
orl
ja
daa
lods
push
xor
mov
aaa
lea
adc
mov
loop
popf
mov
loop
inc
lret
fs
aad
sub
pop
sbb
shl
xchg
xor
out
pop
inc
pop
jecxz
subl
add
jo
xor
xchg
sbb
cmp
or
test
pop
cmc
mov
testl
jbe
scas
cltd
jmp
std
sahf
sub
mov
pop
imul
scas
push
jle
scas
pushf
lods
dec
xlat
adcl
push
adc
insl
ret
das
lock
jge
inc
repnz
add
xor
sub
in
addr16
dec
fldt
xchg
arpl
inc
call
jo
sahf
dec
js
pop
das
in
rorb
dec
push
xchg
dec
loop
jno
mov
mov
imul
pop
shr
filds
ficompl
jae
mov
loopne
mov
ljmp
scas
bound
jne
jecxz
insl
cmc
test
fistps
mov
mull
les
scas
jl
or
push
jmp
daa
mov
cmp
and
insb
cmp
aaa
scas
arpl
in
and
fdivrp
jg
add
iret
addr16
pop
mov
clc
pop
cli
ret
dec
mov
add
pop
mov
cmp
fnstenv
scas
ret
mov
or
sub
cmp
xchg
or
sbb
sbb
aas
lahf
mov
push
mov
je
subb
add
idivl
das
jns
lods
push
shrl
scas
ficomps
std
mov
pop
adc
sub
into
mov
mov
jmp
orl
les
scas
fnstenv
cmp
rcrb
iret
aam
push
push
mov
aad
mov
and
cmp
scas
mov
mov
imul
fdivrs
xchg
adc
bound
aaa
insl
int
popf
shrl
sub
int
pop
icebp
push
mov
mov
inc
insb
pop
mov
or
dec
mov
fcmovnbe
aam
fistps
aaa
pop
data16
push
fsubl
mov
xor
mov
mov
adc
xchg
sub
dec
adc
mov
aas
jge
mov
or
push
lahf
sub
and
in
pop
stos
imul
xchg
fsubl
push
setns
mov
and
out
push
in
sti
outsb
out
movsb
aas
mov
int
mov
sti
sbb
and
mov
mov
in
fwait
call
dec
je
mov
mov
pushf
lds
mov
notb
mov
loopne
sarb
mov
mov
repnz
test
out
xrelease
cmp
outsl
jg
sarb
push
or
and
or
fiaddl
int
pusha
push
push
push
adc
mov
xor
dec
subl
xchg
and
jb
fsubl
or
ret
leave
loopne
and
stc
mov
adc
ret
loopne
in
mov
daa
int
sbb
mov
rcll
inc
push
popa
sub
in
mov
pop
movd
ja
inc
stos
inc
mov
punpckhwd
shlb
popf
jne
outsl
pop
sarl
lret
and
or
cmc
popa
mov
roll
or
xchg
pop
sbb
fnstcw
bound
sbb
cli
cltd
pop
mov
flds
cmpb
inc
xor
shll
xchg
cmpsb
shll
dec
lcall
xor
ljmp
push
lods
inc
cmc
hlt
cmc
inc
rcl
mov
inc
pcmpeqw
sbb
scas
rclb
add
es
sbb
jge
pushf
cmp
xor
aam
pop
or
loop
jg
stos
pop
pushf
xor
cmp
ljmp
scas
inc
add
movsl
pop
pop
call
fdivl
in
adc
push
insb
mov
push
dec
or
cmpsl
jns
cmovl
inc
fldenv
cmp
mov
repz
or
lods
mov
sbb
add
imul
inc
push
add
std
fs
lds
test
mov
cmp
aad
stc
ret
and
outsl
jnp
insb
insl
adc
gs
test
mov
sub
sarl
push
sahf
adc
leave
sub
nop
aam
mov
adc
ja
pop
sbb
bound
ds
add
cld
inc
xchg
stos
cli
rcll
xor
scas
sahf
scas
or
sbb
adc
sub
aaa
adc
inc
xor
or
cmpsl
sahf
cmp
jecxz
inc
stc
pop
out
out
mov
jmp
dec
cmp
mov
inc
and
repnz
insl
dec
jmp
pop
fcomps
aam
in
mov
imul
lods
push
mov
add
xchg
in
jmp
dec
stc
rol
pop
out
mov
and
cmp
in
dec
testl
sbb
inc
loope
pusha
ljmp
and
repnz
mov
xor
push
cmp
pop
mov
push
dec
stc
xchg
xchg
sbbl
cmp
adc
add
bound
cmp
mov
scas
cltd
rorl
adc
cmp
in
adc
inc
jle
cmp
push
and
bound
cmp
insl
sub
inc
sbb
pop
add
fcompl
bound
push
cmp
dec
rcrb
cwtl
dec
pop
pop
in
fwait
cmc
push
dec
xor
dec
sahf
xor
sbb
stc
cli
and
ljmp
push
xor
or
in
dec
ds
mov
xor
jg
into
inc
iret
lahf
mov
arpl
inc
test
adc
in
mov
sbb
lahf
pop
jnp
les
inc
cmc
insl
aad
out
pusha
jecxz
xchg
and
sub
movl
push
or
sbb
pop
gs
aam
mov
pop
cmp
xor
mov
or
das
movq
sahf
and
popa
out
dec
add
xchg
mov
fsubrs
dec
xchg
sbb
filds
insl
mov
fists
inc
outsl
xchg
lret
sub
push
jecxz
mov
pop
xchg
outsb
out
ret
pop
inc
cs
jecxz
arpl
xor
in
mov
movsb
adc
lea
inc
sbb
sub
cs
mov
ficompl
add
mov
push
mov
out
loope
sbbl
xchg
pop
mov
movsb
mov
loop
push
add
mov
dec
pop
int3
imul
push
xor
push
push
xlat
jno
insl
mov
mov
mov
filds
mov
and
xchg
daa
add
lcall
push
sahf
push
xchg
dec
push
push
xor
push
dec
mov
add
mov
sbb
jno
sub
and
inc
rsm
mov
mov
mov
jns
add
add
repz
sub
and
xchg
pop
sub
rol
repz
fcoml
or
jno
xchg
ja
aas
cmp
int3
fbstp
add
jmp
and
mov
mov
jno
test
sub
mov
mov
dec
jns
loop
jp
jge
push
push
enter
loop
movsb
dec
mov
xchg
cs
aaa
or
xchg
mov
fistl
ljmp
xor
rclb
sbb
jo
rcll
aam
ds
mov
pop
cltd
out
add
loope
hlt
dec
dec
aas
out
adc
pop
push
pushf
loop
cmp
mov
clc
movsb
jl
mov
jle
mov
sub
in
mov
mov
cmpsl
cmpsl
mov
cmpsl
gs
xor
jg
and
div
xchg
mov
cmc
sub
icebp
cld
push
jb
xchg
xchg
stos
cmp
jnp
ds
in
rorl
data16
mov
mov
dec
and
fnstenv
xchg
push
inc
in
pop
repnz
mov
adc
adc
mov
mov
out
shl
sbb
or
mov
or
push
jge
into
cltd
xor
xor
mov
subl
nop
outsb
and
dec
xchg
push
or
cmpsl
mov
pop
jle
cmovno
push
jmp
xchg
or
inc
mov
test
sbb
cmp
out
xchg
xchg
mov
aad
ljmp
xor
xchg
mov
add
aad
mov
jno
xor
stos
jae
shrb
inc
mov
push
ja
cmp
xchg
adc
sbb
inc
mov
add
mov
xchg
loop
std
xchg
pop
push
clc
mov
sahf
xor
imul
pop
test
sbb
sbb
dec
inc
aas
mov
xchg
cmp
imulb
jp
push
xor
jl
pop
sbb
sub
out
fisttpll
loopne
pop
cld
loop
shlb
jo
cmc
xor
cld
jecxz
call
inc
inc
mov
adc
mov
jl
and
in
roll
ret
cs
or
gs
push
enter
push
xchg
stos
pop
pop
mov
xor
jg
jl
jl
xchg
adc
pop
negl
adc
sub
jmp
lret
loop
sbb
data16
inc
xchg
jno
adc
jb
lods
test
adc
stos
mov
xchg
mov
es
imul
es
repnz
jmp
jno
or
pop
sbb
or
icebp
cmpsb
lea
cs
pop
add
sti
cli
stos
fucomip
xchg
cmp
pop
jno
into
icebp
ds
adc
gs
pop
pop
je
bound
jnp
jg
lahf
dec
out
divb
insl
inc
dec
out
inc
shlb
jg
and
dec
xor
ret
mov
test
enter
test
inc
xor
lock
mov
mov
loop
add
dec
xor
insb
xor
sbb
imul
mov
aaa
es
leave
mov
mov
dec
push
pop
push
and
sbb
mov
mov
pop
or
xchg
xchg
sti
sahf
in
fbld
inc
mov
imul
dec
cmp
lds
push
mov
fisttps
leave
jnp
sbb
adc
jmp
mov
pop
fnstenv
dec
or
sbb
cmp
jno
rcrl
inc
sub
ja
andb
cmp
xor
lds
and
jns
repnz
push
and
std
xor
pop
daa
ds
cmpsb
or
mov
dec
lods
push
in
fcmove
lods
gs
jbe
orb
pop
mov
add
inc
or
out
addr16
xchg
loop
pop
sub
push
in
jp
lea
int3
add
sti
push
sub
inc
out
mov
adc
sbb
dec
xchg
lcall
and
cmpsb
pop
push
dec
in
icebp
cmc
xchg
das
fdivl
inc
lret
jg
aad
pop
ficompl
sbb
pop
fdivl
jl
fs
leave
stc
shrb
cmp
jmp
cld
mov
into
and
imul
mov
cmp
push
push
out
push
or
lods
jbe
jge
xchg
jmp
negb
mov
cmpsb
hlt
les
in
sti
cli
pushf
cs
test
and
shlb
movsb
or
add
les
push
out
sub
xor
fdivl
jbe
sub
push
push
pop
cmp
mov
sbb
fdivp
daa
fwait
adc
jae
jp
sbbb
rol
pop
cmpsb
xchg
dec
or
out
jb
adc
out
shlb
lods
adcb
jl
jbe
test
inc
sti
pop
mov
add
arpl
cmc
loop
lds
push
scas
frstor
cmp
jo
pop
push
jb
push
adc
sbb
xchg
cmp
movsl
push
aas
fidivl
call
hlt
mov
es
xor
mov
lahf
hlt
call
test
inc
adc
or
adc
jg
mov
fdivs
pop
and
pop
cwtl
outsb
pop
loopne
dec
fistps
mov
mov
and
in
push
les
or
fwait
pop
jae
adc
pop
and
pop
inc
xlat
mov
sub
mov
test
sar
mov
and
adc
push
mov
mov
mov
sub
test
pop
into
fcom
stos
cmp
add
lahf
jb
dec
lret
stc
or
fisubs
popa
rcrl
imul
jnp
mull
xchg
sub
dec
pop
gs
in
push
orb
and
rep
int3
enter
xchg
idivb
cmp
sbb
test
stos
lea
je
inc
pop
imul
fwait
pop
xor
jg
inc
push
stos
out
insb
js
sub
dec
jnp
sbb
sub
incb
test
fidivrl
jno
pop
stc
jnp
pop
test
iret
mov
cwtl
outsl
inc
addb
cs
push
xchg
leave
in
jp
cmp
data16
gs
das
push
sbbl
pop
notb
outsb
scas
xchg
cld
sbb
and
sahf
aad
push
push
lret
rorl
jge
test
decl
into
into
bnd
mov
insl
repnz
sub
dec
aas
in
decl
sbb
jno
mov
pop
shl
jb
jle
adc
loopne
sbb
adc
repnz
out
test
jns
loope
cmp
movsb
int3
jmp
enter
clc
shlb
insl
movsl
scas
xchg
adcw
subb
scas
cwtl
jae
push
mov
cmpsb
xchg
pop
outsb
lds
aaa
daa
fimuls
push
or
insl
frstor
dec
rcrb
push
pop
dec
shlb
or
sub
rcll
arpl
fnstenv
xchg
out
add
adc
movsl
and
cmp
call
hlt
jecxz
loopne
enter
inc
fcmovb
cwtl
repnz
adc
sysret
in
jge
cmp
xchg
cld
pop
aaa
xor
jns
in
mov
mov
mov
pop
jo
or
mov
adc
fwait
push
aas
add
rcrl
xchg
es
and
jns
mov
hlt
and
jo
shrb
fistpll
mov
jae
inc
inc
add
cmp
addr16
and
sbb
inc
scas
test
scas
or
inc
inc
test
cmp
pop
fwait
mov
sar
pop
fmull
push
into
inc
lret
roll
mov
push
gs
push
aaa
mov
mov
pop
out
ret
ljmp
pop
push
mov
adc
push
lds
inc
inc
lahf
sbb
ljmp
lcall
jp
push
imul
sbb
push
mov
cwtl
mov
es
adc
pop
add
aam
jnp
jb
inc
fiadds
jp
pop
mov
cmp
pop
and
hlt
dec
xor
testl
jl
shll
push
loopne
sbb
fwait
mov
je
xchg
mov
sub
push
scas
fsts
hlt
mov
xchg
cmp
jnp
and
cmc
push
inc
mov
push
into
jae
and
sti
xor
inc
sbb
and
fmul
test
fdivrp
push
xor
inc
mull
xor
sub
scas
push
xchg
pop
and
cmp
lock
dec
jne
sub
cmp
sub
cmp
rorb
jl
mov
pop
sub
add
mov
loopne
dec
dec
inc
sbbl
nop
dec
ss
xchg
add
adc
cmp
in
test
sbb
pop
mov
mov
xor
lods
mov
jnp
mov
sbb
sahf
lock
push
test
int
cltd
test
ljmp
fldl
mov
jbe
adc
dec
and
jecxz
mov
cli
cld
aaa
mov
sub
mov
sub
mov
cmp
fs
xchg
mov
inc
inc
loopne
jne
jmp
fmulp
pop
call
mov
test
in
out
dec
out
test
push
mov
add
jns
out
pop
adc
mov
lret
sbb
mov
ja
icebp
inc
les
jp
dec
lock
fidivrs
adc
sar
pop
shlb
pop
mov
ret
jae
lea
sbbl
lea
dec
or
mov
mov
lahf
cmp
jg
movsl
aam
sahf
or
lea
mov
fs
jecxz
stc
or
push
pop
lret
sti
faddl
mov
xor
lock
xor
lea
hlt
jp
js
iret
push
adc
xor
rolb
inc
xchg
xor
stos
xlat
mov
pop
dec
ret
jge
icebp
xchg
int3
dec
push
lods
cmpsb
fimull
icebp
adc
inc
jae
xchg
scas
in
movsb
pop
ret
scas
jecxz
in
dec
mov
int
enter
leave
es
in
loop
sub
or
fs
push
xchg
or
inc
int3
ss
into
cmp
das
ss
clc
xchg
add
fldl
inc
sti
pop
pop
test
jmp
adc
cmpl
jb
pop
sub
out
push
or
lret
test
cmpb
push
dec
loop
push
or
adc
xor
fldenv
mov
movsb
sub
loope
push
or
inc
cmp
repz
or
pop
mov
jp
pusha
jecxz
les
es
nop
cmc
or
out
or
cwtl
scas
push
jno
in
dec
lcall
movq
or
mov
test
jno
pop
dec
sub
sbb
stos
enter
rolb
or
mov
and
cmp
out
lret
lods
sub
mov
cmp
clc
ds
aam
rclb
insl
mov
push
pop
sub
adc
mov
cmp
movsb
pusha
add
fmull
and
insb
hlt
mov
mov
and
lods
aas
jnp
xchg
mov
jae
add
sbb
xor
lret
dec
xlat
je
ret
jnp
xor
mov
cmp
xchg
cmpsl
stc
lret
call
test
in
ss
lds
nop
int
push
push
mov
jg
or
jnp
mov
lret
mov
fwait
hlt
adc
and
or
sti
and
jne
cmp
dec
popa
or
mov
adc
stos
out
mov
inc
pop
pop
jbe
xchg
popf
fidivl
jp
fdiv
mov
add
xor
xor
out
jmp
cltd
lcall
adc
cmp
pop
adc
rcll
mov
cltd
or
sahf
addl
inc
mov
repz
mov
cli
jmp
mov
into
jbe
test
divl
push
in
jp
fs
pop
mov
mov
inc
lds
xor
sub
in
andb
push
pop
add
adc
dec
lcall
cld
insb
sub
add
adc
sbb
pop
mov
cli
adc
pushf
add
clc
xchg
loopne
mov
mov
mov
sub
pop
divl
cmp
rcrb
lds
cmp
mov
jno
js
into
cwtl
xchg
shrl
fistpl
fsubl
and
adc
fdivp
daa
cmp
jge
mov
pop
imul
sub
cmp
aas
fidivrs
sub
xor
xchg
adc
dec
rcrb
add
xor
sbb
mov
negb
ret
add
xor
out
sub
xorb
and
shrb
push
xchg
out
cmpsb
fdivrs
adc
push
imul
outsb
pop
fisttpll
jp
aas
roll
sbb
inc
adc
outsl
or
lock
test
mov
jl
repz
mov
cmc
ja
cld
cmpsb
pop
ljmp
mov
mov
xchg
xor
push
jo
jecxz
xchg
cmp
shll
jns
mov
in
mov
imul
inc
cmp
or
xchg
add
sub
inc
xor
popf
sbb
add
pop
scas
xchg
and
leave
sub
push
and
aaa
jbe
fcompl
cmp
fwait
push
test
sbb
repnz
les
aas
xchg
mov
xchg
pop
xchg
push
mov
sub
xor
add
add
fld
xor
xor
jge
inc
jp
mov
mov
fildll
inc
sub
test
dec
shl
fadds
cmc
lahf
jnp
sbb
bound
ret
jecxz
xor
push
ficoms
addr16
mov
jno
push
inc
aaa
lock
cmp
push
jno
pop
repnz
add
sub
inc
stos
testb
cmp
cld
dec
mov
scas
jp
adc
lahf
aam
leave
cmovnp
js
bound
sub
popf
into
dec
adc
lea
mov
pop
jle
sbb
sbb
inc
jmp
outsb
enter
stc
xchg
pop
push
push
pop
sbb
jg
fmul
nop
in
mov
insl
and
or
fwait
mov
sub
call
mov
push
js
fnstcw
out
stos
and
add
mov
xchg
jnp
mov
mov
mov
addr16
stc
pop
jbe
mov
loope
mov
inc
out
fldcw
rcrb
lahf
push
enter
imul
leave
or
adc
sti
ss
loope
mov
xchg
into
xchg
testl
mov
divb
or
pop
out
push
mov
lahf
pusha
out
pop
fldenv
fbld
push
fwait
movsb
mov
and
push
and
jle
leave
daa
nop
jp
xor
push
stos
jl
stos
inc
jb
lret
bound
cs
cltd
inc
dec
jne
js
jns
mov
sub
jns
jge
imul
inc
pop
out
dec
ficompl
xchg
lea
call
dec
and
sbb
dec
nop
push
xor
xor
jp
dec
xchg
les
dec
cs
xor
or
lahf
pop
pop
js
rorb
clc
pop
fidivrs
js
mov
mov
test
adc
dec
adc
mov
loope
mov
lds
add
sub
xor
out
stc
pop
xor
mov
out
pop
aaa
sbb
push
sarl
add
dec
insl
xor
pop
jmp
xchg
in
jo
addb
subb
cmp
lds
ftst
mov
cmp
sbb
mov
sub
cli
jnp
fmuls
pop
insl
mov
mov
popa
mov
cmp
stos
jae
xchg
orb
sbb
out
subb
or
push
jmp
out
pop
fmul
jp
aaa
cld
clc
lock
pop
insl
or
push
mov
xchg
insb
mov
inc
cmp
sti
das
sahf
rcl
cmpsl
dec
mov
jo
dec
roll
or
hlt
nop
test
scas
inc
sbb
mull
inc
sub
movsb
xor
and
pop
in
add
lea
xchg
push
cmp
push
adc
push
insl
inc
arpl
xor
jae
inc
test
adc
loop
push
mov
push
cli
cli
xchg
loope
pop
sahf
xor
je
xchg
mov
fnstcw
sub
mov
dec
loop
jecxz
mov
leave
pusha
mov
ret
xchg
and
into
jmp
out
inc
push
mov
push
sbb
cmp
pop
rcrb
movsl
and
pop
aaa
mov
loop
out
or
mov
pop
inc
pop
loopne
sbb
jl
push
push
pop
cmp
cmc
inc
xchg
lds
iret
fildll
loop
movsl
sbb
pop
insl
in
dec
cmp
adc
insl
jecxz
xor
dec
bound
test
and
fmuls
pop
push
sub
int3
outsl
adc
repz
sbb
inc
shlb
ss
outsb
jl
cmp
test
dec
dec
sub
or
int3
sarl
add
subl
jle
aas
sub
push
cwtl
dec
push
fcmovne
lahf
mov
jge
sub
lods
push
daa
pop
lds
test
push
mov
mov
cld
pop
cmp
stos
jmp
inc
pop
orl
dec
imul
in
sar
push
pushf
sahf
sbb
lcall
insb
xchg
in
out
lret
xchg
cmp
pushf
imul
fwait
scas
inc
xchg
subl
insb
cmp
ss
test
inc
in
xor
mov
push
cs
cld
cmp
dec
pop
mov
rclb
sub
sbb
cmp
leave
cs
sub
dec
xor
push
xchg
pushf
je
in
ljmp
shlb
into
sbb
mov
leave
jbe
mov
addr16
inc
js
in
in
xchg
ss
or
addr16
jb
int
push
popa
push
daa
xchg
into
nop
gs
daa
add
push
scas
or
fbld
jns
or
xchg
in
push
shl
push
fs
xor
test
dec
adcb
arpl
jge
and
mov
sub
fldcw
cmc
in
pop
scas
or
add
push
stc
cli
das
shrl
test
mov
mov
out
addr16
in
mov
sbb
push
nop
fdivl
ret
shrb
fdivl
mov
jmp
aad
pop
lret
jns
jno
jecxz
js
pop
mov
out
js
jns
jbe
mov
push
push
in
and
aas
sti
cmp
outsb
inc
mov
clc
fsts
and
dec
mov
orb
sysexit
cmp
hlt
pop
cmp
out
dec
xchg
fidivrs
lcall
dec
clc
jge
cmpsl
lcall
in
das
mov
inc
fisttps
xchg
mov
sbb
orb
arpl
or
adc
sbb
or
sub
in
dec
cs
loop
in
cmp
add
or
dec
in
fistpll
int3
add
push
mov
pushf
popf
repz
dec
mov
add
pop
mov
ss
jg
sti
fdivrp
out
jp
stos
xchg
push
push
inc
mov
orl
hlt
mov
call
int
leave
loopne
lcall
or
mov
mov
xlat
inc
jno
fistpll
jecxz
mov
mov
inc
cld
xchg
pop
test
mov
pop
lahf
insb
out
jecxz
imul
sbb
dec
pop
bound
and
dec
fstpl
push
lahf
jne
jae
hlt
in
cmc
int
sahf
js
adc
dec
and
mov
cmp
addl
fsubl
cmpl
fdivs
ljmp
add
sarb
jle
je
sahf
out
or
cli
loop
outsl
icebp
scas
and
cmpsb
xchg
mov
push
dec
jo
and
stc
fstpt
ffreep
mov
movsb
cli
ror
aas
jae
mov
in
jb
sub
mov
adc
mov
push
cld
adc
xchg
lcall
add
cmpsl
cs
push
push
addl
out
pop
testb
pop
hlt
lret
cmp
pop
test
stos
mov
and
push
inc
lods
ljmp
xchg
jo
cmp
jl
leave
mov
in
daa
adcl
cmp
mov
pop
or
stos
and
push
push
stos
cmp
pop
jg
jo
sbb
mov
ret
popf
or
call
push
fldenv
xlat
fsubl
int
int3
and
mov
into
lcall
xor
push
push
mov
stos
repnz
xor
ret
mov
rolb
stc
cmp
mov
xchg
xchg
jns
adc
imul
imul
or
or
sbb
divl
lret
xor
outsl
es
insl
push
cmp
popa
sub
cli
xchg
ror
or
jnp
lods
xchg
adc
xor
into
push
fisttps
popa
pop
mov
mov
adc
jnp
and
inc
jecxz
ror
jecxz
dec
mov
mov
mov
mov
adc
insl
call
rorb
fsts
push
jnp
in
pop
std
pop
pop
lret
mov
nop
stos
or
mov
loopne
mov
cmp
movsb
sahf
daa
push
lods
shl
xchg
and
ret
cmpsb
bound
jmp
pop
test
stc
enter
es
movsl
addr16
test
ds
sub
out
and
int3
in
pop
mov
cmp
or
sbb
pop
testl
push
cmovae
stos
int3
mov
pop
imul
pop
push
ds
lock
dec
into
bound
fnsave
aas
and
in
call
cmp
aas
jne
fsubl
mov
sub
int
cld
call
dec
xchg
cmp
movzwl
push
adc
das
pop
mov
mov
add
add
push
cmp
pop
ljmp
mov
push
mov
mov
insl
dec
pop
out
push
mov
fld
xchg
jns
fwait
ds
pop
dec
pop
mov
and
pop
push
idivl
mov
rcrb
lods
lods
pop
cmp
mov
mov
jno
stc
loope
lea
icebp
inc
orb
xchg
cmp
lods
fstpt
push
dec
fidivrs
jo
in
faddl
mov
in
inc
pop
test
fstl
mov
or
leave
clc
nop
push
shr
cmp
cmp
and
inc
movsl
imul
mov
and
mov
sahf
mov
add
iret
or
mov
mov
mov
fists
jo
adc
push
jno
loop
push
std
push
pop
les
push
xchg
jo
dec
adc
xchg
ficoml
fmull
adc
or
clc
sub
mov
adc
fwait
push
repz
inc
inc
xchg
into
fimull
mov
loopne
rcr
fs
loopne
cmc
xchg
pusha
push
jmp
repnz
push
mov
jo
adc
loope
pop
pop
push
pop
stos
loopne
enter
int3
xchg
or
fbld
xchg
add
outsb
mov
mull
fwait
aas
ror
pop
hlt
cmpsl
into
mov
or
into
aaa
sub
or
push
push
add
cmp
out
push
rorl
mov
out
fstpt
loopne
xor
mov
jg
lcall
add
mov
jno
sbb
fucomi
lds
int
sub
mov
or
ljmp
insb
movsb
es
rcl
in
jne
sbbb
mov
sbb
insl
cli
in
lcall
sub
xchg
pop
mov
aad
lods
jg
int
add
mov
mov
es
mov
shlb
arpl
cmpsb
xlat
xchg
fwait
jb
les
aad
mov
pop
xchg
enter
xchg
mov
ret
stos
inc
jecxz
fadds
jge
std
mulb
dec
jo
push
add
dec
arpl
cltd
inc
xor
jo
jb
subb
clc
ret
jp
jb
push
sub
je
xor
sbb
cwtl
test
mov
sahf
sbb
sub
dec
pop
dec
repz
jb
in
ljmp
call
jecxz
aam
fndisi(8087
js
add
into
ljmp
push
adc
inc
loop
and
push
push
lahf
imul
sbb
mov
sbb
dec
fdivr
lods
dec
dec
out
or
pop
xor
mov
sub
sbb
or
jge
cmp
in
pusha
lcall
push
xor
bound
mul
cmp
inc
pop
fdivr
rcrb
and
or
xchg
lds
iret
cmpsb
adc
mov
xor
in
movsb
loope
into
dec
jne
mov
in
stos
push
pop
pop
mov
and
and
stc
mov
sahf
aaa
fistpl
xchg
push
and
and
xor
mov
insl
cmp
mov
jnp
add
push
push
sbb
push
rorl
xchg
int
dec
fwait
mov
mov
or
and
imul
fbld
jno
cwtl
cmp
inc
ljmp
sub
mov
xchg
cmpsb
xchg
in
scas
xchg
mov
xor
stos
jmp
enter
inc
test
dec
inc
mov
stos
xchg
sbb
add
sub
mov
mov
mov
jo
ss
and
cmpsl
jl
add
push
cmp
inc
lcall
jns
je
jp
data16
std
adc
pop
xchg
test
fstpl
aad
popf
and
jno
hlt
adc
outsl
dec
testb
dec
shrb
adc
test
cld
repnz
mov
sub
adcb
adc
in
out
outsb
pop
inc
cmp
jp
imul
sbb
pop
add
sarl
sbb
xor
imul
pop
pop
or
mov
cmp
popf
out
dec
loopne
mov
cmp
out
pop
and
outsl
cmpsb
cmp
shrb
cmpsb
jge
xor
lcall
lods
sbb
mov
in
stos
cmpsb
sub
xchg
push
adc
mov
mov
mov
xor
push
xchg
out
mov
daa
mov
cmpsl
jl
fisttpll
sub
out
add
jp
cltd
push
mov
sbb
mov
ds
enter
mov
xchg
dec
mov
dec
adc
pop
popf
mov
xchg
ja
or
loope
xor
ljmp
mov
icebp
cmp
push
jnp
ret
jg
jae
jo
and
loope
sahf
xor
pop
mov
out
notb
jno
push
xor
xchg
enter
ja
adc
adc
repnz
sbb
xchg
gs
jle
push
xchg
and
lcall
jnp
aas
mov
fbstp
lret
lahf
fisubrs
sub
jmp
cld
adc
pop
fucom
sbb
ret
cld
aaa
andl
jb
pop
test
pop
call
push
mov
xchg
jae
in
push
shll
and
mov
repnz
in
xor
dec
iret
repz
shll
pop
jecxz
cmpsb
sbb
insl
mov
and
aad
dec
and
cli
sub
dec
cmp
jl
ret
gs
mov
jle
mov
jne
int
mov
mov
sbb
stos
decl
xor
clc
loop
jge
sbb
inc
and
stos
std
insl
jnp
clc
sub
xchg
fmuls
dec
ficoms
sbb
es
test
push
adc
call
rol
add
inc
pop
push
pop
dec
jmp
int
icebp
pop
leave
xor
push
fucom
dec
repz
inc
jp
movsl
or
xchg
fs
and
pop
mov
jmp
jbe
jl
std
lods
push
fdivl
in
rcrb
orb
scas
inc
sbb
pop
mov
pop
call
jge
jbe,pn
jb
add
mov
ds
fbstp
pop
add
test
mov
jmp
and
fadd
pop
ret
pop
mov
jg
mov
jge
dec
scas
imul
pop
add
or
add
add
test
mov
in
in
mov
cli
or
dec
adc
arpl
mov
mov
push
jg
iret
push
cmp
push
and
push
hlt
xor
dec
mov
ss
jne
mov
test
leave
xchg
xchg
movsb
sbb
out
mov
cmpl
or
stos
or
fcmovbe
sahf
in
cmpsl
out
leave
gs
mov
repnz
inc
inc
xchg
fs
mov
outsl
adc
cmp
dec
jmp
rorb
ss
roll
int
lcall
adc
jae
pop
jl
loop
iret
daa
scas
push
enter
jbe
aas
dec
pushf
and
jns
mov
mov
xchg
dec
lock
push
inc
mov
add
rcll
mov
xor
fdivr
push
jl
pop
push
jne
mov
enter
or
sbb
xor
insl
test
nop
or
cmp
stos
mov
xchg
subb
les
mov
cld
mov
test
fbstp
jo
dec
pop
jg
or
jne
adc
mov
xchg
xchg
push
icebp
push
js
fsubl
inc
stos
dec
fcomps
pop
lock
adc
dec
movsb
mov
jge
push
repz
pop
ljmp
lret
sub
mov
pop
outsl
fwait
aam
and
test
jg
scas
sarl
imul
comiss
push
mov
adc
sub
sti
and
ds
shrl
xor
jmp
and
insb
jmp
xchg
adc
xchg
stos
jg
in
push
mov
mov
es
xor
fsubrs
clc
or
sbb
loope
icebp
fistl
mov
push
jmp
nop
repnz
push
or
jae
add
adc
cli
cmc
mov
adc
sub
pop
stos
fldcw
dec
xor
lret
pop
xchg
inc
cmpsl
int3
andb
dec
mov
iret
mov
ret
inc
mull
lock
sar
popf
addr16
shlb
xchg
and
xchg
jbe
or
mov
cmp
out
inc
test
out
out
push
ljmp
in
ss
inc
fdivs
test
imul
adc
inc
xchg
rorl
imull
sub
call
cmp
gs
mov
mov
ja
cmp
mov
mov
dec
inc
int
jo
push
bound
neg
push
cmp
xchg
mov
in
mov
jge
adc
pushf
or
jp
sbb
aas
enter
aaa
add
mov
pushf
sti
enter
out
inc
adc
mov
ds
jg
add
test
lods
add
int3
arpl
inc
push
adc
das
rcrb
pop
mov
test
data16
sbb
out
add
bound
ret
inc
mov
cmp
inc
xchg
es
pop
pop
ret
adc
cld
gs
stos
cmp
mov
sbb
notb
xchg
mov
lcall
test
or
fs
fs
mov
cmp
or
adc
aas
mov
xor
adc
cmc
ljmp
mov
iret
pushf
sbb
outsb
scas
outsb
cmp
dec
mov
out
ret
dec
outsl
add
and
popa
fdivrs
cli
or
lcall
inc
gs
das
push
ret
and
jo
xchg
sarl
jbe
fdivrs
lahf
ljmp
hlt
xchg
jnp
mov
dec
call
mov
pusha
mul
fwait
mov
idivl
xchg
push
std
jne
out
outsl
shl
sbbl
jg
cmp
or
add
push
outsb
xlat
jbe
sbb
sti
shrl
out
pop
jnp
pop
jo
iret
pop
cmpsb
xchg
test
arpl
pop
lds
adc
aaa
cmpsl
cmp
bound
xchg
push
incb
lcall
sbb
std
xchg
dec
sub
cmpsb
cmpsb
mov
ret
div
sahf
rolb
data16
cmpsl
dec
cmp
sbbb
push
xor
cmpsb
xor
mov
mov
rclb
hlt
xchg
clc
cmp
push
cwtl
or
insb
pop
lock
arpl
lods
dec
push
cmp
sahf
out
pop
pop
adc
inc
sub
int
xlat
cmp
and
xchg
sub
jg
call
scas
lret
push
ficomps
push
push
lcall
loopne
pop
shll
cmpsl
call
pop
fcoms
int3
pop
dec
dec
stos
lock
cmp
loope
ret
jo
mov
pop
dec
xchg
mov
inc
shll
push
rorl
push
ds
push
pop
push
add
fistps
std
test
out
fdivs
jae
add
jb
adc
push
add
aad
sub
jg
enter
jl
popa
test
shll
add
cltd
cmp
mov
test
das
sub
in
sub
adc
decb
add
sub
sarb
mov
mov
test
cmp
jge
xor
xlat
jp
xbegin
in
mov
lods
insl
pusha
add
test
mov
movb
aas
inc
aas
imul
bt
adcb
outsl
xchg
mov
sbb
sub
cmpsb
lock
data16
or
scas
pop
dec
aad
jg
or
jp
mov
push
jg
push
sub
xor
jmp
sbbb
or
adc
cmpsl
push
jae
pop
test
je
pop
add
int
bound
dec
jecxz
or
push
ss
fwait
xor
jnp
xchg
dec
push
bnd
mov
sbb
or
mov
dec
daa
pop
test
ffree
shll
xor
in
mov
lret
fs
dec
jns
lods
push
ljmp
pop
cli
lret
inc
lahf
mov
popa
xchg
lds
aaa
mov
sbb
ret
pop
sbb
add
ja
inc
jae
mov
int3
sbb
fists
out
mov
mov
sub
ret
scas
mov
lret
sbb
mov
mov
cmpsl
xchg
aam
movsl
inc
cmp
pop
sbb
push
or
aas
lea
inc
xor
push
call
cmpsl
xchg
je
sbb
or
pop
cmp
fs
adc
lea
sti
push
scas
shll
loop
dec
jecxz
test
repz
mov
insb
mov
aad
movsb
push
es
les
mov
mov
sub
inc
jne
ss
pop
fisttpl
or
sbb
pop
cs
xchg
lods
mov
ret
es
cmp
jle
pop
push
jl
xor
xlat
xlat
test
icebp
xor
mov
jo
mov
cmpsb
lahf
aas
lcall
inc
rol
inc
mov
js
inc
dec
jbe
loopne
push
rcrl
ljmp
adc
add
scas
sbbl
xor
mov
pop
xchg
sub
scas
xor
or
cli
int
inc
gs
out
push
and
jnp
lcall
sub
das
jle
mov
sub
xchg
pop
lock
sub
or
adc
sbb
adc
mov
in
xor
push
ljmp
dec
add
pop
add
iret
lods
xchg
out
sahf
cmp
cmp
push
ss
loop
dec
cmpsl
ss
cli
jne
loopne
mov
xchg
repz
pop
push
cmp
adc
dec
cmp
aad
ljmp
clc
cmc
push
and
pushf
mov
movsl
lds
ret
das
test
add
or
inc
push
pop
add
push
int3
jnp
push
call
xor
jg
pop
or
mov
mov
mov
xor
imul
in
xlat
inc
and
jb
or
shlb
sub
arpl
sarb
fldenv
aaa
out
fisubs
xlat
pop
push
in
push
xor
aaa
das
and
xor
ljmp
and
inc
testl
mov
iret
mov
jbe
jb
dec
jp
je
cmpsb
negb
das
add
sub
icebp
xchg
popa
stc
or
into
sarb
cmp
or
into
sub
push
sbb
xor
or
rcrb
scas
sbbl
es
rclb
movsb
jge
sub
jnp
adc
jnp
test
hlt
add
cmpsb
fwait
add
in
lcall
or
lds
push
or
xor
hlt
and
inc
cmp
int3
mov
add
cmp
pusha
les
arpl
inc
and
movsb
inc
push
xor
xor
loope
call
jl
daa
aaa
adc
sbb
pcmpeqd
push
inc
in
cs
add
dec
rcll
mov
inc
aam
lret
decl
mov
les
adc
testl
test
nop
es
add
pop
sbb
dec
test
shl
and
jbe
jne
aas
inc
outsb
adcb
stos
mov
pop
cmpsb
imul
arpl
dec
or
inc
pop
and
cmpsl
stc
mov
scas
fdivl
sub
sub
xchg
lods
mov
outsl
fucomp
sbbl
jo
insl
cmpsb
rcrl
xchg
rol
mov
push
iret
pusha
mov
cld
mov
popa
adcb
sbb
loopne
bound
ds
mov
sub
stos
movsl
lret
jmp
call
cmp
addr16
lds
test
mov
out
sub
mov
fstl
mov
adc
adcb
xchg
ds
imul
nop
mov
lret
mov
bound
xchg
outsl
fwait
lcall
test
add
adc
dec
fbld
into
and
mulb
jl
pop
push
xlat
das
or
cmpsl
stc
shlb
jno
push
ljmp
pusha
aad
aad
dec
xchg
and
ret
mov
and
lret
es
cmpsl
push
xor
pusha
sub
fidivl
push
inc
test
inc
adc
shlb
daa
push
scas
mov
aas
xchg
test
hlt
std
or
adc
add
jle
push
mov
cli
sub
lods
inc
in
jo
xchg
inc
cmp
repz
jo
and
add
push
rorb
arpl
cmp
push
jl
pop
rcrl
int
mov
notl
test
testl
sub
and
std
pusha
and
mov
daa
sub
mov
sub
popa
dec
xchg
ret
shlb
add
fdivs
cli
bound
sbb
push
cmp
adc
nop
es
jmp
push
fmull
in
pusha
and
enter
shl
and
fbstp
lds
jo
lock
push
ja
add
inc
mov
or
int
addl
ret
lret
push
lds
andb
dec
jnp
push
cmpsl
inc
xor
orl
scas
pop
gs
inc
sbb
push
add
jecxz
mov
pop
aas
sbb
sbb
push
jmp
nop
and
fcmovnu
pop
repz
mov
or
xor
pop
push
call
fstpt
mov
jmp
cmpsb
dec
mov
mov
cltd
push
mov
stos
mov
ljmp
vpunpckldq
rolb
sarl
and
cwtl
dec
mov
shlb
mov
mov
stos
cmp
ret
jge
xchg
xor
jecxz
cmp
int
push
rorl
arpl
leave
inc
ja
fnstsw
mov
jnp
and
sub
adc
pop
fstps
pop
jmp
sub
or
mov
jg
aaa
mov
pop
sub
fdivl
test
add
test
push
test
mov
inc
sub
fsub
mov
int3
jecxz
push
movsl
pushf
out
rcrl
xor
shlb
jbe
adc
loopne
ljmp
iret
movsl
mov
pusha
imul
outsl
push
les
dec
fnstsw
pop
xor
mov
das
and
subb
xchg
cmp
out
outsl
xor
mov
jl
in
push
cmpl
adc
adc
pop
push
cli
popa
mov
cld
xchg
push
scas
cmp
pop
and
lcall
push
pop
insb
or
jge
push
add
sub
rorl
jecxz
lea
push
and
test
push
xor
movntq
test
jne
push
sbb
loop
sub
out
out
inc
nop
push
and
fwait
pusha
test
inc
shr
shrl
enter
and
push
or
cmc
push
jp
sbb
xor
dec
fidivrl
lods
ds
sbb
pop
nop
fisubrl
test
leave
dec
addr16
inc
mov
mov
test
sbb
movsb
or
int
fucomip
pop
dec
sub
mov
cmpsl
lret
jb
out
out
dec
sbbl
jg
push
push
shll
and
enter
scas
inc
mov
xor
sbb
mov
inc
inc
js
jl
mov
mov
fcoms
inc
cmp
sbbb
out
mov
pop
lcall
outsl
mov
in
out
nop
cltd
lahf
loop
cmpl
pop
aaa
sar
into
test
lds
and
pop
fdiv
push
adc
std
es
or
adc
data16
inc
push
inc
lret
pop
pop
out
pop
nop
cmp
aam
push
addr16
mov
push
push
add
imul
ja
inc
push
xor
pop
inc
pop
out
xor
jne
sbb
sub
aam
shlb
mov
jbe
push
jp
add
xchg
add
jnp
add
mov
repnz
movsb
sbb
sarl
jns
rcl
dec
adc
adc
inc
data16
in
mov
push
jnp
data16
mov
cltd
add
jne
lret
mov
fsubrs
shlb
dec
xor
sub
js
and
fcompl
mov
stos
push
sbb
jbe
hlt
out
inc
divb
fldenv
out
mov
movsl
jbe
push
push
out
xor
add
jmp
mov
hlt
out
aam
insl
xlat
ret
and
mov
iret
xchg
int
pop
pusha
std
mov
insb
xor
adc
rorb
inc
ret
mov
jne
xchg
jge
das
jecxz
push
dec
and
mov
js
test
pop
adc
and
cwtl
pop
hlt
cmp
dec
data16
hlt
les
pop
cs
xor
cli
out
pop
and
arpl
and
gs
sub
faddl
dec
mov
stc
cmc
xchg
nop
fs
lcall
inc
sub
dec
inc
ljmp
adc
int
mov
mov
jns
callw
sub
cmp
lock
pop
inc
push
jle
fildl
jg
repnz
xlat
jne
into
inc
incb
cwtl
mov
ja
shl
add
in
cs
sub
mov
lahf
repnz
pop
movsl
jbe
push
inc
sub
or
das
in
adc
inc
mov
jle
pop
push
ljmp
xchg
inc
in
repz
js
add
scas
pop
call
adc
out
je
cmp
cmp
mov
xlat
ja
dec
ljmp
cmp
mov
or
push
sub
lret
add
cwtl
inc
jge
jle
xor
bnd
fldcw
add
inc
adc
and
decb
cwtl
loop
xor
shl
cmp
insl
cltd
and
stc
add
test
cmp
or
push
add
cmp
push
fs
lcall
fildll
mov
push
xchg
and
cwtl
mov
xor
xor
inc
test
sub
sbb
pop
in
add
inc
sub
lods
mov
push
mov
jne
xchg
jne
fists
inc
loope
jg
ss
and
mov
imulb
dec
sub
daa
bound
inc
jle
mov
jl
push
xchg
pop
push
sahf
push
mov
lods
push
jmp
xchg
mov
incb
daa
sar
jns
cmpsb
fdivs
ds
lods
adc
idivb
mov
push
and
cli
add
or
sahf
div
push
je
and
push
inc
fsubrs
xchg
mov
out
andb
push
inc
push
cli
mov
mov
fnsave
fwait
inc
fnstsw
aad
dec
test
add
adc
sti
jl
aam
mov
arpl
je
das
sbb
in
out
mov
cmp
cmc
xor
stc
lret
dec
add
int3
adc
pop
xor
dec
jbe
inc
cmp
lods
fistl
std
push
adc
push
repnz
in
dec
pop
cmp
aad
movsb
das
jne
mov
sub
pop
jl
adc
dec
cli
mov
ror
push
pusha
pop
rorb
dec
push
inc
add
sarb
sub
data16
scas
loope
loop
sti
stos
cld
loopne
loopne
clc
inc
push
pop
mov
stc
mov
call
out
outsl
and
in
call
lahf
mov
push
mov
mov
xchg
outsl
cmpsl
bound
xor
mov
push
mov
test
daa
aaa
icebp
subl
mov
adc
dec
cltd
jne
ja
leave
xchg
int3
xchg
jns
insb
cmp
pop
stc
js
mov
mov
cld
pushf
sti
cmp
movsl
outsl
xchg
jne
pop
xchg
shll
jg
imul
inc
or
jno
fisttps
es
shlb
pcmpeqd
repz
mov
sbb
mov
mov
or
jno
loop
xchg
iret
mov
lds
int3
xchg
rcrb
mov
mov
scas
or
out
fsubrl
aaa
scas
cmp
fwait
sub
inc
int3
adc
cmp
add
adc
add
sbb
leave
xchg
jo
cmpsl
arpl
inc
jno
rcrb
hlt
jecxz
inc
xchg
lods
gs
addr16
sub
add
daa
into
mov
iret
cmp
imul
dec
imul
ror
xchg
jmp
rclb
in
xchg
dec
jg
aas
dec
pop
int3
aam
in
cmp
jns
sub
jmp
pop
add
lds
jbe
and
jb
ds
cmp
rcl
jg
and
sub
mov
jne
mov
in
outsl
es
arpl
data16
or
sbb
adc
jl
in
mov
xlat
shlb
push
mov
mov
mov
mov
pop
and
adc
mov
out
xchg
in
dec
xchg
cmpsl
dec
and
and
lea
cmp
jp
jle
adc
cli
imul
sub
paddusw
insl
mov
ja
dec
pushf
shrb
inc
das
fdivrs
jg
out
push
jle
in
testb
fidivrl
ja
mov
jno
inc
xor
hlt
out
mov
jl
out
shll
xchg
in
cltd
pop
adc
push
scas
xor
mov
inc
and
je
sbbb
ret
loope
repnz
dec
cwtl
pop
das
add
sub
pop
insl
rol
test
stc
sub
pop
and
sub
mov
sbb
rcl
sbb
orb
ret
jmp
lock
push
sbb
inc
or
js
mov
iret
add
out
inc
icebp
shll
daa
push
mov
test
adc
cmp
pop
mov
pop
lods
pusha
and
mov
pop
std
inc
and
add
mov
mov
xchg
ljmp
or
push
add
out
inc
mov
in
mov
xor
decb
in
out
sahf
push
lock
xchg
sbb
mov
xchg
das
lock
gs
pop
mov
and
sbb
sub
aad
push
sbb
int3
fwait
sub
xor
push
gs
mov
push
std
out
cmp
out
stc
shrb
pop
xor
movsl
sub
xlat
in
sub
pop
fwait
mov
inc
sub
outsb
cld
loope
ja
sub
es
aaa
mov
data16
jmp
repnz
pop
sbb
lods
sbb
xchg
outsb
jle
int3
dec
cld
push
adc
jbe
lret
add
and
addl
roll
inc
sub
imul
jl
push
xor
loopne
fiaddl
shrb
outsl
mov
mov
lock
cmp
dec
jle
orb
mov
dec
xchg
mov
add
push
es
sub
jb
cld
cmp
stos
sti
ds
lods
xchg
xorb
fistl
bound
scas
out
fldenv
sbb
jle
add
jne
lcall
mov
jno
cmp
inc
sub
mov
mov
inc
aam
jnp
jne
addl
gs
jb
stc
pop
out
pop
sbb
xor
cwtl
pop
fildl
imul
rcll
push
into
and
jmp
ljmp
cmpsl
test
std
mov
popf
int3
imul
mov
cmpsb
cmp
ret
test
pop
mulb
xchg
into
les
adc
xor
pop
push
gs
adc
jae
fcomps
cmp
nop
sub
xlat
lea
je,pn
ret
jp
jge
sub
cmc
push
or
lods
xchg
sbb
loope
rolb
mov
sub
push
dec
jae
jecxz
es
insb
xor
adc
mov
stos
jl
mov
outsb
mov
and
jnp
add
cmp
sub
ljmp
mov
out
push
pop
inc
mov
cli
or
in
jecxz
ret
rorl
add
xor
ficoml
test
push
mov
mov
outsl
mov
aad
in
sahf
cmp
jae
out
add
add
push
push
test
mov
sti
imul
cmp
push
orb
in
push
mov
or
mov
fnstcw
inc
repnz
cmp
outsl
pop
pop
ss
movsb
jnp
shrl
stos
pop
add
push
or
dec
pop
rcrb
xchg
mov
pop
xor
mov
jns
push
jns
data16
shrb
out
sub
in
dec
out
inc
fsts
push
sub
pop
xchg
cmp
insb
mov
fistpll
sti
imul
pop
pop
cmpsb
stc
popl
inc
arpl
jecxz
sahf
jle
leave
mov
je
and
test
adc
cmpsb
pusha
mov
cs
test
leave
scas
icebp
hlt
subb
lea
insl
jle
fs
lock
or
popf
daa
mov
imul
jmp
pop
mov
dec
or
mov
or
mov
ljmp
sub
scas
xchg
dec
pusha
or
add
out
mov
xchg
push
lahf
imul
roll
mov
jp
xchg
or
cwtl
cmc
jecxz
jge
es
cltd
jmp
ret
jns
xchg
or
jno
ljmp
inc
bound
xor
or
pop
stc
jnp
cmpsb
sub
cs
insb
jo
dec
popa
enter
ss
inc
rep
shrl
mov
mov
scas
divl
cwtl
xchg
bound
jmp
mov
sbbb
orb
xchg
jl
out
pop
es
mov
mov
push
cs
push
cmp
sarb
push
mov
add
push
mov
mov
push
sbb
pop
stos
std
pop
fs
mov
push
adc
es
sti
mov
hlt
inc
mull
movsl
rcrb
inc
adc
or
je
pop
sbb
lea
popa
ret
sahf
and
sar
push
sahf
imul
nop
iret
lock
adc
jnp
mov
mov
xchg
into
xor
lahf
icebp
jp
bound
and
or
inc
push
hlt
adc
les
lcall
repnz
movsl
mov
jmp
sarl
repz
push
push
cmp
xchg
sub
testb
imul
cmpsl
call
mov
mov
xor
jl
int3
jle
sub
addr16
std
loope
inc
dec
sbb
pop
aam
popa
add
clc
and
xor
mov
bswap
pop
and
pop
aad
mov
addr16
pop
xchg
mov
cmpsb
arpl
push
sbbb
and
sbb
ficompl
mov
cmpsb
outsl
loop
les
cli
sarb
ret
xor
lret
mov
add
cmp
mov
iret
xlat
xchg
dec
push
fisubrl
push
sbb
adc
mov
jb
xchg
popa
sub
out
inc
jmp
test
shrl
ljmp
lds
jmp
sub
cmp
cmpsl
xchg
out
dec
rcll
aam
dec
nop
js
pop
cltd
hlt
mov
lods
cs
add
stos
add
sub
push
jne
xchg
idivb
dec
into
scas
adc
push
lea
test
sub
push
push
hlt
xor
sarl
gs
daa
cmp
fcoms
or
push
aam
inc
negl
jl
jnp
jb
sbb
push
jno
fmuls
dec
add
cmpsl
pandn
popf
xchg
jb
sub
cli
pop
loop
flds
xor
and
pop
adc
push
imul
xchg
movb
popf
enter
into
mov
pop
cwtl
cmp
cltd
xor
test
xor
fnsave
pop
fs
dec
fidivl
outsb
aad
xchg
and
push
aas
pop
sbb
iret
lods
in
mov
jmp
pop
nop
adc
sahf
daa
sbb
mov
insl
pop
pop
cmpsb
cmp
push
mov
mov
xchg
sbb
loope
xor
lcall
jmp
sbb
mov
sbb
idivl
mov
imull
outsl
push
xchg
adc
rcr
cmp
movsl
add
fcmovne
push
js
imul
xor
adc
in
xorl
pop
cmp
cmpsl
fisubl
scas
jns
jb
push
stos
loopne
call
mov
sahf
cs
dec
ljmp
sahf
int3
movsb
mov
sub
push
jns
imul
inc
insb
push
lcall
and
sub
cmp
xchg
addr16
aad
cld
lods
incl
cmp
mov
dec
jns
sbb
sub
xchg
outsl
pop
imull
jge
or
mov
cmc
jle
aas
pop
out
out
mov
aam
adc
xchg
sub
out
push
mov
and
sub
insb
xchg
push
stc
sub
jmp
outsb
push
out
sub
mov
push
lcall
sub
shlb
xchg
mov
jns
mov
nop
jno
jbe
aam
out
sbb
popf
xor
loopne
jnp
lret
sbb
and
xor
bound
mov
rol
push
cld
aaa
pop
in
clc
daa
in
std
aas
bnd
das
or
mov
mov
fdivrs
mov
pop
gs
das
sub
int
dec
stos
cmpl
mov
lods
and
xchg
stos
adcb
lds
adc
cltd
pop
jbe,pt
lock
aam
jge
pop
adc
mov
push
jno
and
push
test
int3
cmp
test
jmp
pop
pusha
je
shr
jle
jbe
and
add
lea
sub
fs
repnz
pop
mov
shlb
add
or
ret
jmp
xor
cmp
sbb
xor
rorb
push
scas
aad
xchg
and
xlat
dec
les
stos
popa
out
cmpsl
mov
cmpsl
mov
dec
dec
xor
int
xlat
leave
pop
mov
sbb
jecxz
pop
adc
shlb
or
aam
dec
fsubl
stos
push
cmpsl
enter
cmp
xchg
enter
inc
aaa
and
sub
dec
inc
addl
pusha
repz
mov
cmp
sub
mov
or
jge
push
notb
push
outsb
or
mov
leave
cmp
cmp
repz
push
ret
mov
repz
or
rorl
dec
add
xor
or
je
jecxz
rolb
xor
mov
add
jns
inc
test
dec
add
inc
aas
adc
sub
or
scas
pop
jge
pop
push
cmpsb
cmp
sub
jae
cmp
add
mov
rolb
int
inc
hlt
mov
sbb
pusha
mov
int
bound
push
adc
sub
xchg
cmp
les
insb
add
lcall
outsl
stos
sub
mov
loop
pusha
sbb
jae
dec
mov
sbb
mov
cwtl
cmpsb
jle
ljmp
push
daa
dec
sbb
out
xchg
mov
mov
loop
or
adc
jg
fimuls
movsb
pusha
clc
or
in
lret
int3
mov
in
adc
subb
sub
pop
dec
adc
or
fidivrs
pusha
sbb
jmp
gs
jae
cli
jb
fldenv
and
gs
lea
sbb
dec
mov
in
ret
pop
cs
imull
aas
imulb
je
stc
cmpsb
in
das
dec
xchg
adc
mov
jmp
mov
jbe
mov
gs
inc
movsl
les
fwait
out
sahf
arpl
addr16
scas
sub
clc
xor
movsb
dec
enter
dec
test
test
sbb
push
xor
add
add
jbe
out
leave
inc
sahf
jns
out
add
dec
js
leave
aas
mov
and
adc
push
aad
xchg
cwtl
cwtl
pop
cs
addl
loop
sub
xchg
imul
nop
inc
imul
incl
cmpl
mov
push
adc
inc
addr16
mov
dec
mov
add
mov
xchg
mov
xchg
gs
sub
cmpsb
imul
or
dec
push
sbb
cmpb
jmp
xlat
or
xchg
cmc
lcall
lret
je
xchg
or
mov
or
and
out
dec
cmp
sub
sub
out
lahf
mov
fs
xchg
sub
cmp
inc
push
push
add
mov
ficompl
jecxz
repz
ljmp
rcl
xor
add
in
fs
mov
mov
arpl
negb
adc
loopne
dec
lret
sub
jmp
and
stos
unpckhps
and
fwait
sbb
addr16
jno
aaa
sbb
sub
sbb
cmpsb
imul
imul
imul
testl
scas
out
cmp
jge
xchg
or
mov
ss
aam
adc
push
ljmp
xchg
lahf
mov
sar
icebp
cld
data16
aad
push
jl
jae
push
adc
cmp
test
cmp
std
negl
jne
xchg
mov
stos
ficompl
mov
aaa
js
add
jne
xor
loope
shll
mov
adc
test
in
outsb
mov
sbb
addr16
pop
jae
clc
filds
js
leave
cli
scas
add
pop
dec
das
mov
mov
adc
ret
insb
sbb
sbb
adc
pop
lods
cmp
lcall
push
jg
sbb
clc
push
sub
push
insb
push
lahf
test
jb
inc
push
mov
cmpsl
adc
sbb
jle
mov
cltd
pop
sbb
loop
add
xorb
test
xchg
inc
orl
imul
sub
mov
mov
mov
and
and
sbb
xor
pop
or
pop
es
sahf
and
push
in
in
sbb
movsb
cld
mov
stos
and
xchg
pop
stos
mov
or
test
adc
out
jae
clc
mov
fisubl
push
lds
out
incb
inc
in
scas
xchg
pushf
push
xchg
push
jp
sbb
ja
shlb
outsl
xor
dec
out
jne
sbb
mov
icebp
dec
xchg
mov
push
cmp
or
xchg
pushf
jge
sbb
je
jb
int
cmovns
lea
cs
mov
fcomip
push
icebp
or
jo
cld
fisubs
push
sub
stc
or
inc
test
and
push
adc
sub
dec
fsubs
dec
xchg
jg
mov
xlat
push
shlb
or
mov
cld
mov
xchg
sub
or
sub
insl
and
cmpsl
cli
adc
lcall
and
pusha
mov
xbegin
aam
hlt
lea
dec
push
in
ret
jle
jecxz
pop
inc
sbb
xchg
cwtl
push
popa
das
sbb
stos
stos
sbbl
lds
dec
inc
fisttpl
orb
cli
pop
adc
and
mov
jo
cli
jbe
cmp
xchg
repnz
cmp
xchg
or
xchg
jp
add
lcall
jl
mov
cmp
adc
imul
mov
fbstp
sub
fs
xor
ja
inc
leave
lods
shll
jbe
ss
daa
mov
push
mov
lea
jg
sbb
cmp
sub
cmpsb
pop
add
inc
out
iret
je
jmp
cli
aad
sbb
xorl
movsb
ja
ljmp
sbb
sub
fsubs
jno
ds
fcoms
mov
mov
mov
cmpsb
fstps
xor
inc
sub
cmp
jno
sub
aad
imul
inc
and
cmp
add
pop
repnz
mov
scas
inc
aam
dec
mov
xchg
stos
xchg
out
add
jo
jno
cwtl
out
clc
ljmp
stc
mov
add
divl
fcoml
stos
mov
cmp
dec
das
fisubl
stc
jmp
iret
mov
add
pop
pop
mov
mov
adc
mov
enter
jbe
mov
lds
mov
fstpt
js
jecxz
outsl
div
fldt
push
mov
and
fwait
push
nop
imul
xor
pop
xor
daa
push
pusha
xchg
inc
xchg
les
pop
push
mov
enter
in
sub
imul
mov
incl
in
shrl
arpl
xor
mov
or
ja
das
adc
fists
stos
lods
popf
pop
fstps
fwait
xor
movsb
leave
or
and
dec
ss
jp
xchg
jbe
push
mov
faddl
pop
sbb
cmp
add
sbbb
in
testb
xor
call
jg
ja
jmp
push
test
add
insb
lods
fwait
cmp
dec
loop
adc
push
nop
in
cmp
cmpsl
cmc
sahf
pop
jl
cld
or
jns
xchg
jnp
ret
pop
ds
dec
and
sbb
jns
add
addr16
rcrb
rcrl
and
lea
and
and
repnz
xchg
into
frstor
sub
repnz
popf
pop
jae
int3
lods
sbb
test
push
dec
nop
or
lcall
jg
cmp
jp
push
rcrb
sbb
movsb
add
mov
push
int3
mov
movsb
testl
stos
mov
and
cli
ficoms
pop
or
pop
rcrl
mov
jp
jb
rolb
mov
arpl
lcall
pop
xchg
xor
iret
cld
mov
or
push
mov
das
dec
mov
fs
cmp
mov
divl
loope
arpl
push
jae
push
xchg
cmp
dec
jl
pop
movl
pop
loopne
xchg
movntq
out
nop
mov
jno
mov
iret
loop
add
sub
cli
das
stos
xchg
cmpsl
xchg
jae
and
pop
and
cmp
cmc
ja
xchg
and
mov
cmc
sbb
ljmp
in
or
sub
mov
jnp
icebp
nop
cmpsl
inc
inc
mov
xchg
int3
pop
push
adc
sbb
xchg
pop
gs
pop
sub
xchg
sbb
mov
arpl
lock
sti
pop
push
mov
cmp
jge
pop
jp
lcall
or
pop
sbb
inc
jmp
data16
pop
and
mov
inc
pop
fisttpl
fiadds
mov
push
pop
mov
fwait
sbb
sbb
insb
mov
repz
pusha
movsl
fs
mov
adc
and
xchg
dec
enter
pop
pop
insl
insl
mov
push
push
cmp
adc
sbb
xchg
and
push
les
nop
lahf
adc
sbb
fdiv
pop
xor
scas
xor
sti
xchg
dec
jge
or
gs
call
sahf
int3
push
ss
dec
cli
push
dec
shrl
ss
xchg
xchg
push
sti
sub
dec
jp
inc
fnstsw
cld
inc
aam
mov
loop
ss
aam
das
ds
test
lea
adc
test
sbb
aam
jp
and
shl
imul
cli
stc
shl
push
notl
jno
leave
popf
js
xor
cmp
xchg
xor
dec
leave
ja
or
xchg
roll
push
xchg
mov
xchg
ds
sarl
jbe
mov
dec
sub
mov
test
mov
inc
icebp
push
stc
and
mov
xlat
mov
or
mov
and
out
sbb
jle
mov
jae
and
mov
stc
hlt
cwtl
shr
lds
mov
loop
push
int3
out
test
adc
sub
cmc
sub
shl
push
jecxz
xchg
enter
mov
andl
incb
shlb
cs
xchg
inc
mov
addr16
xchg
inc
mov
test
jno
push
jne
jns
mov
add
test
jp
mov
lcall
pop
rolb
nop
scas
pop
jns
nop
leave
popf
or
add
enter
push
icebp
sub
cmc
jo
imul
jnp
mov
daa
jae
sbb
lods
imul
pop
orb
mov
adc
pushf
mov
inc
sarl
dec
lds
jle
mov
dec
push
test
dec
stos
mov
cld
mov
scas
xchg
sub
inc
enter
adc
dec
mov
repnz
ja
pop
movl
outsl
mov
aas
fidivrs
pop
inc
push
inc
stos
push
insl
jo
cmp
outsl
cmp
dec
in
dec
cmp
jg
mov
or
ja
pop
cmpsl
inc
shrb
xor
rcrb
ror
scas
aaa
inc
cmp
ds
or
push
cmovno
xor
fisubrs
outsl
jne
mov
mov
adc
push
push
shll
addl
jae
daa
push
imul
mov
adc
bound
stc
stos
shrb
sub
push
aam
sbb
cmp
popf
mov
in
mul
scas
sbb
neg
push
in
ja
push
add
aaa
jae
aaa
cwtl
fcomps
ja
bound
xchg
xor
cld
add
or
inc
test
jmp
lods
mov
arpl
mov
mov
enter
jp
fmull
cmpsb
or
adc
bnd
insl
sub
test
pop
ja
inc
ror
fcomi
mov
mov
sub
cmpsb
addb
cmp
into
sub
bound
add
mov
xchg
lret
outsb
pop
adc
stc
sub
leave
jb
rcll
lret
xor
pop
in
mov
iret
and
add
movsl
hlt
jns
ja
add
sbb
sbb
sub
adc
out
in
xchg
ret
in
jp
sbb
mov
or
or
lahf
jecxz
sub
mov
cmpl
sar
rcrb
push
add
sub
or
pop
jmp
pop
popf
sub
imul
or
mov
sub
testl
jecxz
in
das
push
lcall
fsts
cmp
cmp
xlat
and
inc
or
inc
pop
testb
push
or
mov
incb
add
jge
ljmp
pop
in
aaa
dec
mov
inc
push
in
push
aad
and
jnp
xchg
cs
shlb
xor
cltd
cli
xchg
out
xchg
pop
mov
stos
imul
dec
hlt
mov
or
pop
addr16
mov
xor
add
inc
push
popl
into
fimull
cmp
xchg
jge
adc
xchg
mov
xchg
adc
pop
adc
adc
add
sbb
aas
cmp
add
xchg
dec
adc
inc
mov
fimull
mov
cwtl
out
and
sbbb
jmp
jge
sub
add
mov
scas
clc
jmp
push
pop
mov
test
xchg
pop
pop
loopne
ljmp
jge
lods
mov
gs
push
mov
inc
add
enter
les
les
sub
lock
push
loopne
stos
and
adc
pop
or
push
inc
push
jp
jns
sbb
imul
and
jbe
cld
sub
dec
iret
clc
pop
dec
fwait
push
push
xor
mov
xchg
rol
mov
or
std
sbb
test
or
pushf
shlb
test
push
jb
pop
and
mov
sub
pop
sub
testl
mov
dec
push
imul
rcrl
pop
add
outsb
push
sbb
inc
lret
dec
shlb
cli
testl
push
xchg
mov
mov
leave
pusha
pop
add
pop
mov
sbb
xchg
lret
ret
pusha
jb
shlb
out
jmp
fsubp
fisttpl
and
nop
pop
enter
dec
xchg
jp
xchg
andb
sub
stos
pop
test
xchg
out
sbb
test
nop
lcall
push
xchg
adc
addl
in
into
leave
or
test
inc
xor
decb
ljmp
cltd
lret
xchg
push
cmpsb
fst
adc
negl
divb
xor
push
jae
xor
test
xchg
fsubrl
jp
cmc
pop
mov
mov
pop
loopne
pop
and
sbb
popf
ret
fstl
add
add
pop
inc
sahf
inc
dec
iret
rorl
mov
add
fs
leave
in
or
fucomi
scas
jmp
add
mov
in
add
lcall
pushf
and
or
lahf
jecxz
loop
loope
sbb
cmp
mov
loope
fiaddl
pop
lods
push
cmpl
xchg
lea
xchg
movsb
imul
outsl
shll
lock
imul
xlat
into
cmp
jae
jle
js
mov
stc
shlb
rcrb
sub
mov
movsb
insb
push
negb
dec
out
xchg
mov
into
add
and
test
push
or
inc
data16
add
push
dec
push
ret
mov
mov
adcb
jno
pop
jp
ja
jle
jnp
pop
popl
inc
adc
je
mov
cli
inc
scas
adc
outsl
xor
inc
imul
cs
push
xor
pop
sbb
fadds
mov
push
pop
outsb
inc
jae
mov
inc
adcb
loopne
bound
ja
xchg
insb
xor
xchg
mov
int3
jecxz
rcrb
inc
cwtl
mov
fcmove
pop
adc
ja
js
int
or
jle
int
in
ret
notb
xor
icebp
andl
fistpl
stos
psubw
pop
xchg
shlb
bound
adc
sti
repz
add
lret
adc
clc
jecxz
adcb
add
pop
lret
adc
test
pop
xor
and
mov
and
lock
les
sbb
fs
rcll
xchg
pop
dec
movsl
adc
push
mov
test
adc
jge
andb
xor
je
jle
push
add
daa
xchg
ds
sub
loope
pop
in
jg
minps
adc
pushf
mov
lahf
lret
and
out
cmpsl
pushf
in
inc
cmpsb
add
aad
mov
cmp
mov
aam
loope
test
cmpsl
out
mov
leave
pop
ljmp
sti
fimuls
xchg
xlat
mov
sti
jmp
jl
in
sub
iret
cmc
mov
push
push
or
shrl
ss
pop
mov
adc
jecxz
pop
ret
cmp
rcrb
inc
dec
out
pop
jb
inc
sbb
inc
fildl
push
xor
pop
aam
lcall
nop
rcrb
mov
scas
aad
and
adc
cs
jecxz
clc
leave
fisttps
mov
add
pop
push
insl
aaa
aam
scas
mov
mov
hlt
add
out
jae
xor
repnz
push
push
icebp
movsl
mov
jns
aaa
shlb
shl
mov
sarl
xor
mov
or
inc
sarl
fildll
push
nop
imul
add
inc
int
test
nop
icebp
je
popa
cmova
add
test
fidivs
ficompl
fdivrl
lods
dec
and
bound
mov
mov
in
inc
jp
iret
xor
xchg
mov
clc
add
fstp
insb
pop
cmovp
loopne
xor
or
jnp
mov
lds
mov
adc
push
cmpsl
ja
incb
jne
xchg
lret
outsl
clc
test
hlt
andl
lods
and
lock
lock
addr16
dec
test
addr16
aam
faddl
test
or
jb
or
xchg
cmpsb
jns
lret
push
ljmp
and
ja
aas
cmp
cmp
in
xchg
ret
sub
movl
stos
pop
jmp
xchg
fbld
fsub
daa
xor
out
mov
shr
mov
push
cmp
pusha
jge
subb
cld
inc
mov
push
movsl
fstpt
mov
addr16
xchg
and
dec
loope
insl
nop
repz
test
fwait
inc
lods
push
mov
cltd
cmp
jg
add
sbb
jae
or
divb
and
int3
lods
mov
rorb
add
cmp
or
cmp
sub
push
adc
fadd
push
dec
popa
loope
mov
lahf
inc
xchg
sub
aas
pop
mov
add
push
xorl
nop
outsl
mov
rcrl
mov
ret
mov
cmp
sti
ret
adc
icebp
jno
ljmp
ror
pop
scas
cld
ret
popa
inc
lret
lods
jno
vhsubpd
rol
arpl
js
add
xor
jg
arpl
fsubrs
cltd
repz
mov
or
fwait
shl
or
dec
xchg
xor
pop
and
fcomi
idivb
mov
and
out
cltd
mov
mov
mov
mov
mov
fs
sbb
jnp
push
add
xchg
inc
mov
push
mov
inc
mov
fdivrs
ds
cmc
in
pushfw
loopne
cmp
roll
stc
jg
or
mov
les
jns
aaa
les
setne
je
adc
into
pop
xchg
push
mov
shlb
hlt
inc
sahf
push
inc
std
imul
pop
mov
xchg
inc
dec
test
out
or
push
pop
dec
lea
js
xchg
jle
pop
sbb
aam
cmpsl
jae
mov
les
inc
mov
mov
mov
sbb
inc
gs
ret
pop
sbb
in
mov
andl
or
xchg
dec
orl
pushf
xor
dec
adc
rcr
mov
scas
rol
repnz
sub
loop
mov
gs
push
add
mov
inc
call
loopne
popa
shrl
rorl
push
mov
xor
jmp
test
pushf
sub
jbe
fldl
stos
and
sbb
push
rclb
je
inc
pop
pop
xchg
mov
cwtl
mov
out
and
lea
or
cmp
movb
or
jnp
mov
sub
jle
stos
test
sub
mov
xor
mov
sbb
add
fstpl
fwait
mov
dec
repz
les
cmc
mov
pop
inc
xor
ficoml
fdivr
insb
inc
mov
cmp
push
sbb
rcrb
std
mov
and
cltd
ret
mov
movsl
lea
xchg
push
pop
daa
fldenv
decb
xchg
adc
xchg
jb
adc
outsl
shll
mov
cmp
in
mov
std
loope
sti
sahf
rorl
mov
mov
lock
movsl
sbb
sub
pushf
mov
jb
adc
dec
or
dec
xor
pop
clc
xchg
add
loopne
push
cld
pop
popa
mov
inc
xchg
jnp
mov
mov
xchg
iret
inc
test
ret
les
xchg
and
cmp
outsl
and
xchg
mov
pop
dec
mov
mov
jp
or
jp
enter
lods
iret
outsb
nop
jnp
mov
pop
gs
clc
mov
xchg
inc
aas
ficoms
je
inc
jle
dec
push
sub
mov
inc
pop
fsubrs
repnz
sub
das
in
pop
sbb
movsb
lret
sbb
ret
mov
jle
add
nop
xor
imul
add
sbb
pop
push
lret
fwait
dec
adc
adc
sub
clc
das
jns
pop
popa
adc
int3
scas
push
and
or
shll
mov
fwait
push
pop
xlat
std
pop
inc
test
test
clc
jne
stos
push
sti
fucom
lret
test
icebp
lods
mulb
in
push
in
cwtl
ds
lods
aas
add
fisubrl
mov
lret
xchg
xor
mov
jns
adc
push
xchg
mov
mov
xor
mov
mov
setne
lret
or
adc
in
imul
sub
dec
clc
adc
shl
dec
es
mov
stos
fsubs
mov
daa
aam
sub
pop
xchg
jno
sub
add
xor
sub
or
add
xchg
mov
mov
adc
jbe
in
pop
ss
fs
mov
add
fwait
das
cmp
shlb
xchg
insl
mov
dec
or
push
cltd
sub
dec
outsl
stos
js
call
addr16
push
dec
roll
out
pushf
es
mov
pop
hlt
jnp
shrl
push
repnz
mulb
ja
xor
iret
lahf
je
dec
mov
pop
jmp
and
inc
dec
movsl
jg
fwait
mov
jo
mov
idivb
cmpsb
cmp
inc
das
into
pop
adc
dec
mov
inc
or
push
sbb
std
imul
pop
cmpsl
ret
mov
or
repnz
test
frstor
dec
add
lahf
jge
mov
lods
cmp
fisttps
sbb
push
adc
fwait
dec
ret
rorb
or
jb
fmuls
mov
imul
notl
add
popa
fisubrs
loopne
push
test
je
sahf
jae
ds
rcll
ljmp
mov
pop
movsb
mov
int
in
mov
mov
cmp
mov
push
cmp
mov
in
fsubl
fisttpll
and
push
adc
rcrl
jg
pop
daa
push
cmpsb
add
inc
dec
and
push
pop
cmp
cmp
adc
mov
lahf
pop
out
jp
es
enter
push
mov
mov
lods
sub
lods
pop
mov
lods
loop
add
sbb
lcall
out
or
js
jp
test
mov
mov
jecxz
sub
cmc
out
fdivrl
add
mov
dec
dec
lcall
sahf
cmp
andb
xadd
je
in
shll
inc
test
push
push
fwait
call
jmp
xor
inc
xchg
mov
sarl
inc
fsin
dec
xlat
pushaw
loop
push
mov
je
orl
push
fsubs
add
push
push
daa
xchg
xchg
add
in
cmpsb
mov
pop
xchg
ss
jne
in
jmp
clc
lahf
mov
and
xchg
push
les
fists
lcall
dec
pushf
lret
jge
adc
adc
test
lods
xlat
cmp
test
mov
cmp
mov
cmpsl
or
repz
push
jg
xchg
dec
pop
lret
out
pop
push
cmp
andb
xlat
addr16
sub
mov
xchg
sbb
stos
mov
adc
jmp
mov
enter
jp
mov
pushf
mov
inc
jb
pop
inc
push
stc
leave
popa
popa
mov
int
shlb
cmp
mov
les
out
xor
test
pushf
roll
sti
shr
lret
xchg
push
sub
popf
mov
push
xor
outsb
xchg
das
lret
add
jbe
jbe
lock
rcl
js
push
mov
ss
sub
adc
mov
push
mov
xor
add
out
out
and
sub
das
jnp
and
and
imul
js
repz
in
inc
push
dec
daa
push
inc
sub
jnp
mov
icebp
add
sub
push
fmul
adc
stc
jne
adcl
cwtl
cltd
fnstsw
push
repz
xor
mov
bound
inc
ret
lret
bound
imul
imul
mov
pusha
pop
lret
inc
lcall
push
adc
int3
mov
dec
aam
jle
out
loop
ret
jne
jl
fisubrl
lock
cmp
mov
add
daa
jbe
movsb
xchg
shrb
ror
or
aam
ret
jno
pop
imul
jp
jo
rcr
lods
push
cmp
sub
jne
mov
arpl
xor
in
in
dec
mov
dec
xchg
and
push
stc
out
xor
sub
mov
inc
mov
and
sbb
pop
sbb
xchg
add
into
cmp
mov
movsb
mov
neg
dec
mov
push
iret
push
inc
jno
fisubrs
push
fldl
icebp
cmp
push
cs
leave
es
push
les
outsl
out
xchg
push
fldt
sar
xchg
cmc
add
fcoml
test
stc
xor
popf
mov
inc
sbbb
cli
xor
dec
mov
cmc
ret
jle
xor
ficoms
out
lcall
adc
aas
mov
std
aaa
lock
iret
and
dec
loopne
sub
cmp
xor
sbb
jmp
daa
pop
pop
dec
sub
sub
vpackssdw
movsl
mov
mov
loope
rcrl
mov
pop
dec
lahf
and
aas
fisttpll
imulb
aas
jle
xor
jmp
mov
jne
mov
loop
xor
push
movsl
push
or
ret
iret
pop
mov
adc
sbb
mov
push
test
cmp
jo
or
sub
mov
pop
int3
jge
inc
outsb
sub
iret
mov
cmpsl
clc
shlb
movsl
cmp
or
lret
xlat
movsb
in
push
rcrb
mov
lret
or
bound
dec
add
out
inc
xor
push
mov
test
sbb
mov
shrl
xchg
cmp
scas
jl
sub
dec
stos
jb
sar
mov
jle
sbb
pop
and
sbbl
stc
jp
mov
mov
xchg
xchg
std
stos
cmp
loop
mov
jnp
mov
stos
jns
mov
bound
movsb
cmc
mov
jge
cmc
aam
dec
cwtl
loope
andl
inc
stos
mov
out
ljmp
xchg
push
clc
icebp
adc
adc
adc
xchg
sbb
dec
arpl
adc
sub
push
mov
outsl
inc
into
or
or
lods
mov
add
mov
cmp
out
push
mov
jle
and
xor
aas
jne
pop
fcoml
fnsave
mov
pushf
push
loope
mov
jg
scas
push
mov
sbb
movsl
dec
fisubl
dec
xor
push
outsb
out
jle
cmp
pop
xchg
nop
or
gs
mov
jecxz
mov
out
mov
sbb
imul
addr16
jno
or
cmp
jmp
fnstcw
sub
mov
jg
icebp
ret
xchg
in
rclb
repz
adc
dec
and
xlat
shlb
fcompl
fwait
jmp
loope
or
addr16
or
pop
jno
cmp
mov
adc
aaa
jb
xchg
mov
or
mov
shll
cltd
data16
or
dec
lea
jl
sub
pusha
mov
mov
int3
mov
lcall
stos
inc
mov
mov
rcrb
mov
mov
add
sbb
std
sahf
ss
push
inc
add
or
icebp
test
andl
insw
bound
push
insl
lahf
and
dec
xor
stc
iret
jne
inc
lds
in
add
es
das
int
xchg
lea
sub
pop
and
cmp
push
adc
scas
ljmp
push
cmp
sbb
add
push
dec
inc
and
cmp
mov
inc
inc
sub
int
sbb
pop
mov
les
inc
rcll
adc
scas
pop
ljmp
scas
xchg
mov
fiaddl
adc
nop
xor
adc
sub
push
lret
fwait
in
repz
inc
in
xchg
lret
in
in
cmpsl
mov
je
jbe
lds
adc
outsb
gs
lret
jbe
ret
in
cmpsl
sbb
mov
jo
mov
aam
and
xchg
add
cs
and
lahf
pop
pop
cmc
jo
sub
xor
js
jmp
jno
orb
xchg
sbb
adc
sbb
jnp
mov
adc
nop
cmpsb
das
adc
jae
cmp
lahf
inc
stos
jno
hlt
je
and
dec
jge
cld
loope
cmpsl
leave
xchg
cmpsl
icebp
dec
push
and
jp
mov
lods
mov
xor
jmp
lcall
push
aaa
mov
xchg
adc
lods
xor
push
cmp
xor
ret
frstor
jecxz
mov
bound
add
aas
dec
popa
test
fsts
jne
shl
pusha
mov
test
cmp
cwtl
push
aam
inc
movsb
mov
sbbl
insl
insl
adc
mov
or
scas
ja
pop
aaa
mov
xchg
fimuls
lea
popa
sub
es
les
aam
es
mov
cli
test
imul
xchg
int
scas
sti
inc
xchg
mov
shl
shrb
cli
popa
jge
fidivl
sahf
dec
and
clc
xchg
inc
sbb
jmp
in
lahf
inc
cmp
loopne
cltd
faddl
movsl
add
scas
dec
xchg
popa
cmp
jecxz
mov
cmc
add
mov
loopne
addr16
xor
push
pop
cwtl
xor
and
fcomi
lods
xchg
in
sub
out
test
and
mul
cmpsb
icebp
inc
dec
adc
xchg
or
mov
push
xor
sbb
lods
pusha
mov
adc
inc
fnstenv
jb
cs
cli
cwtl
adc
lcall
sbb
add
clc
cmp
stos
daa
jb
pop
or
cmp
dec
les
loope
cmc
xchg
ljmp
ret
inc
jo
rorb
sub
cld
pop
in
sbb
in
jns
pop
insb
mov
lock
fwait
jbe
std
ljmp
sub
or
mov
xchg
or
in
mov
xor
arpl
test
jmp
enter
mov
out
repnz
mov
mov
fcmovu
dec
sub
mov
stos
push
sarl
inc
pop
pop
enter
jno,pn
jb
mov
push
sub
ja
adc
scas
lahf
pushf
ja
mov
out
imulb
int3
gs
and
test
and
and
fists
add
push
loopne
cli
das
adc
mov
and
xor
sbb
mov
aam
nop
sti
jg
cltd
les
push
adc
jmp
adc
insb
hlt
jnp
push
and
inc
mov
xchg
int
sbb
shll
inc
inc
push
enter
bnd
mov
xor
insl
mov
xor
mov
insl
add
sbb
lds
mov
mov
push
jl
cmp
push
out
push
test
les
fs
daa
scas
sbb
loope
sbb
pop
ret
mov
xchg
test
in
xchg
stos
mov
pop
out
fldl
ss
hlt
push
push
pop
scas
mov
pop
jmp
push
inc
add
cmp
ret
pop
mov
cltd
adc
dec
inc
and
mov
cmp
sahf
out
scas
jo
push
loope
sar
fnstcw
inc
nop
roll
push
sar
mov
pop
out
ffree
push
push
push
mov
enter
shll
pop
inc
pushl
sbb
lahf
shlb
aaa
int
add
inc
and
out
mov
lahf
test
add
inc
jmp
xor
out
fcompl
outsb
gs
test
pop
adc
push
test
xchg
iret
mov
dec
xor
jo
add
add
inc
les
lcall
cmp
mov
ja
xchg
push
sbb
mov
or
outsb
ds
sub
rcll
dec
cmp
mov
loopne
add
mov
pop
xor
out
jle
loope
andl
mov
pusha
movsb
movsb
xchg
inc
outsl
data16
pop
dec
cli
out
aad
out
int
adc
lcall
xchg
scas
cli
mov
sbb
fst
jg
lods
mov
dec
adc
ja
mov
fsts
cmp
xchg
and
out
mov
addr16
arpl
inc
lock
into
nop
mov
shl
test
aaa
es
stos
stc
and
popa
and
mov
adc
dec
cmp
mov
aad
xor
enter
in
xor
jo
xchg
cmpb
dec
push
or
xchg
and
push
rcrb
jnp
xchg
popf
lock
mov
mov
gs
out
loopne
lods
divb
loopne
adc
mov
mov
mov
or
test
arpl
xchg
jnp
mov
scas
cmpsl
arpl
aas
orl
imul
jle
or
dec
sub
xadd
lods
lcall
les
lcall
lcall
repz
pop
mov
sbb
sub
adc
popa
inc
cmp
xchg
xor
jae
js
and
jb
pop
mov
adc
in
dec
sub
cmp
ljmp
stc
sar
ljmp
fldenv
and
pop
std
xchg
divb
cmp
and
cmp
and
addr16
xor
jo
aaa
cmp
shrb
push
adc
repnz
inc
fwait
mov
les
in
cld
enter
ljmp
push
cmp
sahf
ja
out
scas
fcom
mov
mov
sbb
lods
mov
mov
mov
sub
mov
jb
dec
pop
ret
jo
push
xor
sub
mull
in
lcall
adc
sahf
jno
clc
mov
mov
fisttpl
out
stos
jae
mov
fcmovbe
cmp
int3
pop
jb
loope
jne
cmc
xchg
loopne
jecxz
fwait
inc
cmp
outsb
dec
jae
outsb
push
out
stc
sub
loopne
cmc
mov
mov
or
push
fld
xor
push
and
repz
in
sbb
xchg
sbb
lock
movsb
xchg
rclb
lock
xchg
add
lock
insb
movsb
xor
and
pop
mov
cs
mov
push
testl
lods
jno
xor
mov
pusha
shll
stc
sahf
fcoms
jg
pop
and
sbb
push
mov
adc
out
scas
inc
jo
pop
mov
cwtl
in
mov
lods
loop
push
sub
js
iret
addb
sbb
lods
sub
out
xor
inc
inc
dec
adc
mov
mov
jmp
lahf
or
pop
adc
cmp
inc
inc
mov
xchg
icebp
in
fs
sub
xchg
inc
push
xchg
pop
xchg
dec
and
mov
leave
ret
mov
cmpsl
shl
inc
jb
adc
sbb
fcomps
sub
push
rcll
push
addr16
loop
sbb
lret
mov
lea
ljmp
test
add
fildl
pop
sub
push
pop
or
out
or
arpl
js
test
rcl
xchg
cmp
int
aad
pushf
sub
and
and
jp
and
repnz
iret
vorps
das
ds
lea
bound
pushf
inc
cmp
jge
fimull
movsl
xchg
jno
adc
jle
xlat
in
cmp
sbb
das
lods
inc
mov
dec
ret
cmp
inc
outsl
dec
mov
enter
ret
xchg
add
cmp
int
add
jb
scas
cwtl
pop
dec
push
ja
cmpsb
mov
mov
inc
or
mov
in
jo
and
pushf
dec
jnp
stc
ja
imul
jl
add
or
dec
lret
clc
adc
fisubl
hlt
cmp
dec
aam
sub
xchg
jnp
call
dec
addl
out
dec
cmpsl
loop
sub
pop
in
repz
int
loop
hlt
daa
jmp
mov
hlt
push
dec
push
mov
mov
leave
leave
ret
rcl
mov
sbb
lock
sbb
lods
xchg
nop
xor
inc
inc
mov
bound
fidivl
in
lds
stos
packuswb
jbe
cmp
fcoml
div
cs
or
aam
pusha
jle
push
jge
test
hlt
add
clc
push
negb
out
out
mov
lret
outsb
repnz
push
pop
mov
xchg
jle
and
add
pop
jecxz
lods
and
sub
pushf
icebp
push
adcb
aas
jno
movb
dec
dec
cmp
in
jae
push
cmc
push
imul
cmp
cmpsl
xor
ret
and
mov
mov
insb
outsl
lret
in
sub
push
scas
mov
sub
sbb
xchg
mov
dec
cwtl
dec
sbb
adc
or
out
fsubrs
jle
sub
test
ficoms
add
push
push
testl
rcl
loop
ja
dec
push
out
jl
pop
xor
test
push
sub
xor
add
repnz
fs
scas
sbb
lods
dec
mov
dec
int3
fadds
jge
add
scas
test
cmc
cmp
filds
or
and
and
cmp
inc
add
cmp
adc
adc
inc
fwait
cmp
push
dec
cwtl
adcl
test
cmp
or
je
shrb
and
cmp
and
mov
dec
push
jno
aas
movsl
pop
cmc
cmp
mov
fisttps
xchg
sahf
fs
flds
jg
cmp
mov
ret
mov
mov
xchg
inc
mov
mov
jo
pop
flds
in
test
xlat
add
nop
adc
adc
mov
lret
movq
add
or
push
in
fldt
test
pop
mov
ss
and
push
push
or
aad
mov
fwait
or
out
es
movsb
lock
aas
fbld
adc
call
xchg
int
imul
pop
fldcw
out
mov
push
mov
xchg
adc
dec
les
lret
and
mov
insl
orb
iret
xchg
xor
mov
push
lods
adc
jle
jle
cmp
rcrl
out
shlb
notb
fcomps
cltd
js
ljmp
xchg
xchg
mov
test
sub
and
fs
sub
enter
mov
xorl
das
mov
fs
popf
push
xor
mov
negl
push
repnz
inc
dec
prefetchwt1
xor
jb
add
adc
out
cmp
push
mov
icebp
push
sub
lcall
xor
lret
lahf
lret
add
dec
xchg
out
jae
push
xchg
lcall
lret
sub
in
das
pusha
shrl
push
outsb
fs
ret
pop
mov
xchg
ficompl
int3
and
push
jo
dec
jne
and
xchg
jne
arpl
inc
vsubpd
ret
fwait
sbb
mov
and
and
xchg
fistpll
test
mov
jl
jl
sti
cmp
fdiv
push
mov
push
rcll
and
sbbb
pop
adc
add
inc
imull
stc
and
jno
cmp
xor
ficoms
xchg
cltd
test
jmp
arpl
push
xchg
inc
inc
xchg
repz
repnz
and
arpl
pop
mov
xor
or
lret
add
mov
add
es
lds
jae
pushw
xor
dec
mov
or
sti
mov
sub
sub
xorb
push
or
out
addb
or
pusha
rolb
push
adc
sahf
inc
dec
mov
dec
rol
inc
pop
out
cs
cmp
jmp
and
push
stos
loop
adc
scas
iret
out
mov
add
push
mov
adc
sub
sbb
in
dec
cmp
sub
popa
push
out
dec
mov
push
sti
movsb
jo
cli
bound
adc
dec
pop
sub
push
das
xchg
inc
mov
fldcw
notb
mov
into
in
cli
fldenv
insl
loope
out
mov
cld
or
dec
or
or
mov
cwtl
mov
cmpsb
xor
inc
fstpt
push
dec
or
clc
in
add
cmp
div
mov
daa
popf
push
mov
cltd
ja,pn
insb
cli
test
jecxz
push
popa
mov
xchg
loopne
adcb
xor
dec
xchg
xchg
cmp
nop
test
xorb
dec
je
das
sub
fldenv
xchg
mov
sbb
cmc
lcall
pushl
lret
mov
push
add
adc
and
jno
mov
dec
pop
xor
out
and
push
adc
add
adcb
or
xchg
add
mull
adcb
ja
jno
rolb
mov
mov
hlt
dec
jg
hlt
push
add
jno
lcall
faddl
cmpsb
mov
stos
pop
fwait
mov
push
pop
fnstenv
lret
mov
cmpsl
cmpsb
mov
cli
loop
jge
and
fidivrs
pop
mov
mov
mov
adc
or
mov
pop
insb
push
shlb
adc
xor
sub
mov
mov
dec
push
aas
mov
and
pop
mov
addb
or
ljmp
add
xchg
fiaddl
push
jp
jbe
jbe
lret
adc
lahf
push
lea
lret
pop
insb
dec
imul
lods
inc
jp
ficoms
and
add
loopne
xchg
sbb
mov
push
sub
movsb
cmpsl
int
cmp
aas
and
adc
mov
pop
mov
negl
lret
xchg
xor
mov
pop
hlt
push
subl
in
cmc
rcr
mov
sub
rcr
out
loope
lret
rorl
dec
inc
stos
lea
sbb
sbb
pushf
cmp
sub
xchg
es
inc
test
jp
pop
loope
pop
cmp
push
mov
mov
adc
mov
daa
and
inc
shr
dec
push
leave
sbb
cmp
inc
sbb
notl
xchg
dec
jge
das
subb
ret
sbb
clc
jno
adc
dec
xchg
outsb
out
test
dec
and
je
incl
mov
or
mov
aad
cmp
pushf
xchg
repnz
add
inc
lock
add
sbb
fimuls
push
sbb
jae
negl
dec
mov
or
inc
shlb
push
jnp
dec
jnp
aas
mov
adc
mov
jb
inc
jbe
sbb
fcompl
clc
testl
cmp
and
sub
push
push
lods
pop
add
mul
cmp
xchg
lret
mov
arpl
ss
or
pop
mov
inc
jge
imul
popf
out
mov
sub
fcmovb
mov
fdiv
mov
xor
mov
pusha
mov
pop
repz
daa
je
cmpb
or
or
adc
pop
adc
push
cmp
fwait
movsb
aam
clc
js
test
inc
dec
lahf
fcomp
jae
test
sub
popf
xor
aas
inc
iret
movsl
xchg
adc
jecxz
add
sbb
nop
jno
pop
outsb
lret
dec
xchg
sbb
add
cltd
std
gs
in
rorl
sti
repz
jo
mov
xchg
cmp
in
mov
enter
xchg
mov
mov
aaa
dec
push
xchg
pushf
imul
jmp
leave
dec
dec
stc
mov
dec
mov
sbb
jp
mov
sub
pop
cmc
cmp
jp
es
cs
jg
dec
pop
add
fildl
icebp
lds
inc
lods
jg
xchg
and
mov
out
mov
stos
sbb
inc
rclb
rorl
sahf
cmp
lods
mov
decb
enter
in
jae
add
arpl
add
and
mov
mov
cli
xchg
ds
in
in
leave
pusha
adc
mov
dec
or
cmpsb
dec
inc
lret
inc
out
pushf
dec
mov
jge
dec
sub
pop
sub
je
mov
push
dec
lods
jb
insl
mov
into
push
call
dec
les
fs
std
lods
rol
outsb
leave
adc
xlat
outsl
add
repnz
movsb
jnp
jbe
es
mov
aam
scas
and
ret
and
ret
lods
mov
out
sub
in
dec
jb
lods
rcll
popa
movsb
mov
cwtl
add
and
in
mov
jbe
inc
in
mov
adc
inc
sbb
jmp
sub
sbb
ds
lret
jb
inc
js
nop
pop
jl
mov
lcall
shll
pop
iret
jne
je
pusha
lock
jecxz
into
push
daa
negl
or
dec
push
pop
lds
sahf
loopne
add
mov
or
xchg
shlb
xor
mov
out
dec
cmp
out
stc
dec
pop
cmp
cmc
dec
and
and
pop
fdivrl
pushf
gs
mov
fistpl
or
push
aam
bound
nop
sub
mov
cld
pusha
mov
push
in
jmp
jp
nop
imul
adc
pop
lret
popf
mov
addr16
mov
es
fs
lret
sbb
mov
adc
mov
addr16
adc
lret
jecxz
scas
int
and
pop
add
stos
lock
pushf
aas
sbb
aaa
lahf
out
fildll
xchg
call
xor
xchg
xchg
xor
rcrl
jl,pt
das
subb
rcrl
jmp
sub
xchg
pop
fidivs
push
cmp
add
or
mov
lret
mov
outsb
push
push
cltd
xchg
inc
iret
push
mov
lcall
aaa
jg
jp
push
sub
and
xor
sub
inc
lods
cmpsl
cli
andb
mov
nop
lahf
jae
sub
add
cs
dec
xor
mov
repz
scas
pop
fldl
jne
and
inc
fisubrs
jl
aaa
je
sbb
and
mov
sub
xchg
aad
xor
and
mov
adc
je
xchg
xchg
mov
pop
cmp
decl
add
fistl
jbe
std
in
enter
sbb
cmpsl
es
hlt
jne
dec
shr
repnz
jo
out
push
pop
xor
loope
add
in
mov
int3
or
inc
jnp
dec
add
das
xchg
mov
or
xor
lods
fdivrl
xor
push
inc
vaddpd
loop
ret
test
xchg
shl
test
adc
jae
adc
sahf
and
mov
xchg
mov
cmc
aaa
sbb
outsb
and
shr
outsb
mov
cmp
aaa
inc
cwtl
mov
jmp
inc
mov
fdivr
pop
sbbl
pop
pop
push
xor
or
pushf
shlb
iret
push
scas
aad
insl
xor
in
jle
mov
hlt
out
mov
data16
adc
mov
pop
bound
add
popf
add
rclb
push
mov
ret
xchg
xchg
dec
push
dec
add
outsl
xchg
inc
dec
sub
jmp
sbb
cwtl
sti
cmpsb
inc
xor
out
lds
mov
shlb
sub
add
mov
pop
bound
adcl
push
sbb
xlat
add
mov
add
shlb
cmc
call
mov
lea
inc
push
faddl
mov
andl
pop
push
lds
cmp
cmp
push
mov
xacquire
lock
cmp
popf
pop
push
mov
mov
movsl
sti
enter
nop
stc
out
jmp
adc
xchg
stc
icebp
jl
cmp
xor
sbb
fistpl
leave
mov
sub
inc
shll
test
jb
sbb
idivl
sbb
pop
emms
hlt
lods
sahf
pushf
sub
jl
sbb
ret
sti
mov
out
add
lock
mov
int3
jecxz
or
insb
hlt
xor
adc
pusha
and
lea
jb
jmp
popf
fwait
inc
mov
test
lret
aaa
mov
shl
insb
mov
arpl
pop
mov
mov
push
addr16
or
into
push
mov
inc
cmp
mov
add
dec
push
dec
stc
sub
mov
jle
lods
ror
dec
adc
jg
xor
repz
mov
sarl
xchg
mov
lods
dec
sbb
arpl
push
adc
xchg
movsl
pop
xchg
push
daa
push
iret
ss
pushf
ret
xchg
or
leave
xchg
bt
jae
xor
add
mulb
sub
push
xor
fcompl
push
pop
mov
push
out
bound
clc
ficoms
xchg
test
dec
call
xchg
sub
mov
les
mov
dec
divb
fdivrl
in
in
pop
mov
test
arpl
int
cmc
in
fisubrl
ficoml
pop
push
sub
call
loop
loope
pushl
mov
test
scas
scas
mov
into
sti
and
repz
sub
dec
inc
adc
popf
test
dec
out
out
sahf
adc
popf
or
cmp
mov
mov
icebp
decl
daa
sbb
sbbl
push
pop
sub
push
cli
mov
lahf
add
inc
insl
sbbl
arpl
push
push
insb
push
push
and
movsb
inc
sbb
sbb
xchg
test
and
push
sbb
mov
adc
jae
pop
fbstp
data16
adc
dec
push
push
dec
jae
loope
jo
test
repz
mov
cld
xor
leave
clc
mov
lock
jns
stos
jnp
lahf
lods
sbb
jp
insl
xor
jns
push
sbb
mov
mov
pop
pop
ficompl
fcoml
sub
mov
push
ljmp
out
icebp
mov
add
mov
movsl
push
in
scas
in
fwait
es
push
fisubs
fists
mov
enter
and
ret
jecxz
popa
pop
adcl
sub
pushf
xor
inc
push
add
jmp
out
add
shrb
dec
push
or
cltd
dec
jnp
xor
notb
nop
cli
pop
fmuls
aam
mov
ret
icebp
xor
test
pop
jl
test
adc
lret
sti
dec
cmp
xor
dec
in
lods
adc
dec
push
bound
mov
mov
daa
psubq
icebp
adc
mov
cmp
cmp
adc
mov
xchg
sahf
dec
sub
add
mov
stos
in
inc
xlat
ret
cmp
add
jb
lea
loop
jg
sub
dec
push
pop
daa
mov
loope
in
fwait
cli
push
jo
mov
mov
mov
xor
sbb
mov
mov
mov
loop
movsl
pop
inc
mov
xchg
xorb
xchg
xor
pop
movsb
stos
pop
inc
push
ret
mov
insb
push
in
gs
sahf
fimull
inc
add
xor
pop
mov
in
psubw
ljmp
jmp
xlat
icebp
push
adcl
mov
stos
test
lcall
mov
scas
out
jb
dec
and
out
or
pushf
popa
mov
hlt
les
pop
fidivrl
push
jns
aas
pop
jecxz
int3
mov
inc
xor
dec
cltd
mov
xchg
inc
and
pop
and
fisubs
xchg
pop
push
or
or
jmp
xchg
dec
out
cmc
sbb
mov
lds
mov
adc
sarb
mov
arpl
mov
or
push
clc
cmpsl
clc
mov
cmp
sbb
mov
rol
or
ret
pop
mov
leave
roll
test
push
ds
mov
mov
outsl
cli
sarb
inc
popa
pop
dec
inc
mov
cltd
arpl
or
sbb
lcall
jne
mov
gs
imul
rol
inc
mov
movsl
mov
shrl
jecxz
jb
mov
push
and
jbe
adc
cmp
adc
cmp
and
jne
daa
in
mov
cmp
into
fistpll
inc
mov
mov
arpl
cmpsb
fcmovb
mov
add
bound
sti
popa
cmp
lret
mov
xchg
aam
jmp
xor
mov
lods
mov
popa
cmp
lret
mov
mov
mov
adc
inc
mov
mov
and
lret
int3
ljmp
cmp
aas
fisubrl
out
nop
sub
sub
idiv
mov
loop
cmp
shlb
pop
lods
xor
dec
xlat
test
es
cmp
aaa
inc
sti
pushf
mov
cmp
mov
cmp
roll
pop
stos
gs
pop
push
sub
inc
fldcw
jae
addr16
mov
adcl
cs
lods
dec
xorb
mov
cli
iret
fcompl
sub
inc
pusha
fnstcw
ss
pop
jle
push
and
popa
int3
dec
jbe
pop
mov
xchg
mov
mov
js
ror
andl
sbb
jmp
aad
fildl
and
push
insb
mov
cmc
sbb
lods
ds
ret
ss
push
lcall
data16
loopne
pop
pusha
scas
push
inc
cmp
and
fbstp
jb
stos
push
dec
adc
daa
mov
add
pop
mov
inc
pop
inc
sbb
call
push
lahf
fiadds
jbe
or
jnp
cld
mov
add
je
shlb
mov
cmc
je
es
and
adc
test
push
addr16
aaa
aad
das
jmp
fwait
push
sub
cmpsl
ljmp
mov
fiadds
addr16
ss
lea
mov
lcall
mov
test
insb
push
mov
call
cld
fcmovnu
add
push
cld
push
pop
adc
push
ret
mov
cltd
jl
push
push
lea
mov
mov
pop
dec
cmpl
repz
push
xor
sbb
aam
into
pop
andb
imul
test
rcll
iret
xchg
outsl
and
mov
pop
push
sub
mov
ficoms
out
and
xchg
addb
rclw
push
pop
inc
popl
fisubrs
dec
std
lock
add
cs
les
mov
or
ror
push
mov
aad
push
jge
cmp
int
insb
shl
jecxz
out
mov
sbb
adc
mov
shlb
xor
aad
filds
xlat
xchg
pop
out
cmp
scas
xchg
fnstenv
fildl
ljmp
test
fidivrs
xchg
pop
int3
sbb
scas
sub
xlat
flds
jbe
fdivrl
pop
push
lea
js
mov
pop
sbb
mov
mov
sub
rorb
lret
mov
fisubrs
repz
jmp
cmpsb
xchg
iret
xchg
pop
push
pop
adc
popf
adc
leave
add
sbb
and
xor
sbbb
mov
lds
aaa
repz
ss
into
out
shlb
push
inc
and
shrb
pop
and
push
in
xchg
mov
pop
mov
jo
xchg
sub
in
xchg
mov
cmp
mov
loope
js
gs
add
mov
mov
inc
mov
testb
mov
mov
jecxz
lods
into
push
lock
push
in
pop
loope
inc
push
inc
dec
mov
push
aad
test
pop
shll
jb
out
mov
fwait
leave
push
int
push
sti
mov
xchg
rorl
test
fcmovnbe
subl
adc
push
es
mov
adc
cmc
push
mov
lret
imul
sbb
mov
js
push
dec
cmp
bound
in
jle
xchg
adc
lcall
and
loopne
leave
push
in
inc
out
idiv
shlb
int
ss
cmp
xchg
mov
sub
sbb
loopne
lret
movb
out
jae
push
xor
or
and
es
fidivs
push
xor
or
pop
repz
adc
nop
sub
stc
dec
stos
addr16
mov
sub
dec
in
push
pop
mov
jns
arpl
cltd
push
test
cmpl
cmpb
dec
jne
pop
lea
fsts
push
adc
jl
pusha
push
mov
fs
push
outsl
movsl
pop
repz
into
sub
test
je
test
or
lds
dec
mov
mov
nop
ret
push
and
cwtl
imul
popa
xlat
hlt
out
inc
es
out
or
aad
arpl
insl
mov
sbb
xor
mov
push
mov
nop
leave
jae
mov
jbe
es
sbb
aad
push
xlat
mov
push
sub
gs
push
xor
pop
rorl
jmp
insb
pop
mov
ljmp
dec
mov
xchg
inc
sbb
movsb
mov
and
adc
cmpsb
call
lds
hlt
lret
push
dec
icebp
mov
add
aam
sahf
add
fisubl
jmp
clc
mov
add
lock
push
jle
ficoml
dec
xor
aad
mov
insl
mov
push
sahf
mov
or
push
inc
int
out
mov
adc
iret
lahf
xchg
cmp
insb
xchg
jg
lds
std
mov
inc
add
rorb
mov
sub
insb
neg
pop
push
imul
fidivrs
sti
mov
mov
xor
add
sbb
das
hlt
imul
pop
mov
and
rol
jl
inc
add
mov
icebp
xchg
mov
adcb
icebp
nop
cwtl
fwait
jbe
push
les
sub
jle
adc
stos
or
jecxz
mov
into
xchg
add
rcrl
js
mov
adc
cmp
pop
sub
adc
mov
add
inc
mov
data16
push
daa
or
sub
xor
cmp
xor
add
jns
adc
xor
jno
mov
mov
dec
push
xor
or
xor
pop
inc
push
xor
cmc
push
dec
pop
cmpsl
mov
jo
adc
or
jl,pt
rol
lcall
jns
pop
jns
das
jge
adc
loopne
orb
lcall
data16
inc
test
xchg
push
sub
add
add
cltd
idiv
aam
lret
lahf
repz
jecxz
dec
gs
in
lods
mov
lahf
scas
pop
or
xchg
pop
sbbb
scas
fldl
cli
ss
or
outsb
mov
cmp
js
je
jns
and
jl
xor
mov
sub
addr16
loope
jmp
sbb
pusha
fwait
dec
pop
outsb
aas
loope
cmp
aas
stc
xor
outsb
mov
or
xlat
pop
and
add
popf
inc
call
fnop
rorl
mov
in
xchg
in
cwtl
sbb
bound
repnz
loope
and
push
or
rolb
lods
adc
loopne
out
xchg
dec
mov
stc
lahf
mov
jg
jge
loopne
dec
pushf
mov
add
push
xchg
jmp
das
mov
add
mov
sub
xor
mov
outsl
sub
shll
sbb
icebp
addr16
addr16
not
xchg
inc
dec
sub
mov
fcmove
sti
les
inc
imul
movsb
xor
or
cs
lret
movsl
push
pop
in
sub
push
inc
cmp
icebp
jmp
fldl
mov
push
xchg
cwtl
outsl
in
rcr
fs
iret
dec
sbb
fs
lret
addr16
popf
ss
loope
adc
sub
jbe
adc
mov
pop
test
xchg
adc
cmp
jb
loope
mov
int3
sbb
push
adc
ret
sbb
lods
fsubrs
mov
fcompl
pop
out
inc
lret
dec
js
or
jo
jecxz
jmp
adc
movsb
lds
dec
and
fstpt
not
je
in
roll
daa
inc
push
dec
scas
loopne
imul
mov
adc
dec
pop
popa
jmp
push
sti
lds
sti
and
jmp
jmp
push
jo
aam
jb
mov
push
add
sub
jae
test
or
mov
fwait
outsb
xchg
icebp
cli
sti
or
adc
xchg
push
add
test
outsl
mov
ja
sub
icebp
jg
into
xor
jecxz
pop
sbb
xlat
pop
mov
jns
xor
mov
push
or
orb
test
cli
xchg
test
sub
cmp
inc
and
lret
outsl
int
pop
dec
outsb
or
outsl
xchg
test
lahf
subl
std
std
mov
jle
fwait
pop
test
in
cmp
inc
filds
pop
fdivrp
mov
movsb
mov
jo
shrl
mov
cld
cwtl
testb
cmp
sub
or
xchg
imul
pop
fwait
mov
enter
fcoml
cmpsb
push
mov
and
mov
out
xchg
fistpl
shll
inc
sub
lock
mov
clc
shl
ds
add
lods
fs
movsb
das
loope
ficoms
mov
pop
fimuls
push
pusha
loopne
in
out
lds
jl
movsb
mov
adc
push
mov
xchg
pop
out
out
xor
cld
imul
inc
sbb
push
xor
fdiv
and
fcompl
sbb
mov
and
hlt
add
jg
jnp
fcmovb
or
jmp
sbb
sbb
and
pushf
push
aas
push
xor
sub
jp
mov
fisubrs
push
cmp
lahf
mov
add
xor
xchg
push
hlt
inc
das
les
mov
insb
in
scas
push
int
xchg
aad
cli
test
adc
xlat
daa
test
add
push
push
je
inc
and
imul
repnz
scas
outsl
ret
test
or
inc
pop
iret
mov
fistpl
or
push
adc
xchg
aam
pop
ja
jbe
sbb
add
jmp
adc
jg
xor
add
aad
push
in
jno
call
in
jmp
int
and
leave
jmp
test
jns
inc
dec
aad
mov
rcrb
jle
sbb
push
inc
sub
add
out
aas
rolb
sbb
xlat
icebp
dec
inc
and
inc
dec
or
mov
mov
xchg
add
pop
push
sub
push
dec
xchg
pop
cmpsb
cltd
mov
sub
sti
push
push
pop
scas
xchg
daa
jmp
in
loope
lds
sub
mov
push
lods
cwtl
jns
in
mov
aad
inc
repz
sub
dec
sbb
or
xor
lahf
mov
sbb
cli
pop
jle
push
scas
rcr
inc
mov
outsb
loope
call
and
pop
out
or
add
cmc
bound
jne
add
sbb
xor
cmpsb
movsl
or
imul
jp
hlt
and
cmp
mov
iret
xchg
fsubs
sarb
cmp
scas
shlb
add
inc
ss
rorl
jne
jg
movsb
bound
push
xor
pusha
cld
adc
cmc
stos
pop
xchg
sbb
inc
test
xor
push
inc
shl
pop
pop
adc
jmp
adc
push
das
push
insl
sub
jle
movsb
sbb
push
or
pop
rcrb
mov
lret
mov
shlb
pop
xchg
out
outsl
stos
mov
je
sbbb
int
xchg
mov
ja
data16
loop
cmp
sahf
mov
mov
imul
xlat
dec
pop
es
mov
cli
imul
add
cli
imul
xchg
scas
fsubl
les
sahf
pop
cs
pop
pop
scas
imul
or
dec
imul
sahf
sahf
cli
test
mov
mov
fucomip
inc
ror
inc
inc
into
sarl
arpl
xchg
loopne
cmp
cs
pop
fidivs
cli
cltd
dec
inc
jb
mov
dec
int3
mov
sbb
xorl
lret
adc
in
xor
std
sub
mov
xor
loop
dec
push
pop
out
stos
rolb
dec
testl
lahf
push
inc
mov
jae
in
icebp
sub
pop
xchg
dec
insb
repz
adcb
xor
mov
jae
sahf
mov
push
dec
popa
fnstenv
sbb
js
xlat
fnstenv
pop
das
push
sbb
xchg
mov
cs
es
dec
sahf
mov
fprem1
mov
fists
sbb
push
dec
ds
sti
mov
jnp
ficomps
cmp
cmp
ljmp
jno
int3
sub
shl
stos
sub
sbb
int
pop
cmp
addb
inc
jnp
stos
push
data16
xchg
aas
and
xchg
xchg
or
sub
adc
xor
dec
lahf
sahf
dec
push
int3
rol
arpl
pop
push
inc
lods
cmp
lds
outsl
sbb
jp
movsb
jge
daa
mov
adc
loop
dec
adc
dec
dec
adc
or
icebp
xchg
mov
xor
ljmp
jnp
inc
or
dec
xchg
adc
rolb
lcall
ljmp
add
loopne
push
push
lret
cmc
and
xchg
sub
cmp
adc
sub
mov
std
push
orl
rclb
cwtl
or
push
gs
lea
push
aad
cmp
cwtl
addr16
dec
cmp
dec
mov
in
jns
mov
sub
loopne
lret
or
lock
jnp
sahf
pop
dec
pop
ret
jle
jo
xor
mov
or
push
inc
nop
add
adc
push
or
jb
outsb
or
nop
jle
push
int
mov
mov
sbb
ret
add
movl
lds
or
fsts
jmp
and
mov
dec
jb
cmp
or
cwtl
hlt
pop
lret
fwait
out
insl
xchg
popf
jb
ds
mov
cmp
xchg
pop
insl
jg
push
add
test
dec
push
je
mov
xchg
and
and
sbb
les
fcomps
sbb
test
jmp
enter
fimull
or
mov
cltd
lea
pushf
test
xor
movsb
loope
mov
clc
push
cmp
push
in
cmc
pop
jns
sbb
test
dec
jb
push
ss
lods
lret
inc
mov
icebp
scas
pop
call
add
pop
sbb
mov
sub
or
movsb
aaa
pushl
test
sbb
loopne
sub
nop
pop
adc
mov
push
push
add
popa
xchg
xchg
sbb
mov
mov
and
cwtl
adc
mov
shr
ss
es
push
sub
into
jp
lods
mov
adc
add
mov
pop
jp
out
imul
shl
fsubrs
push
dec
lret
shl
xchg
jg
jecxz
pop
xor
xor
outsl
shl
xor
fcomps
jl
sbb
mov
add
fs
push
mov
clc
fcoml
fistps
loop
inc
cmpsl
push
dec
inc
inc
mov
das
ret
outsl
sbb
jb
clc
xchg
andl
out
mov
pusha
cmp
insb
lahf
cmp
inc
pop
repz
imul
jp
add
jno
cmp
mov
aad
cmp
std
and
scas
mov
gs
test
pop
pop
aaa
and
xchg
std
inc
jns
scas
adc
mov
std
adc
insb
fisttpll
jae
sbb
dec
mov
adc
and
mov
jne
rol
jae
icebp
vpsraw
ljmp
inc
add
clc
xor
pop
xchg
inc
xor
pop
mov
and
adc
cs
ret
sbb
xchg
push
push
xor
cmp
rorb
shlb
cmp
cmp
iret
mov
out
ljmp
push
xchg
fs
imul
fcoml
imul
stc
arpl
add
in
xor
or
leave
cmp
mov
adc
sub
add
outsb
adc
test
ljmp
dec
movsl
xchg
or
cmp
dec
lret
jle
cmp
sub
lret
and
ja
data16
add
ss
cmp
sub
cmp
push
push
ja
mov
scas
in
or
js
movsb
cmpsb
cmpsb
add
xchg
xor
ret
xor
loope
ljmp
xchg
cmp
icebp
push
nop
repz
pop
out
jnp
sbb
cmp
cltd
stos
mov
and
mov
mov
repz
dec
fdivr
loop
ja
xlat
repnz
testl
add
jo
jl
cmp
dec
loopne
or
sbb
mov
test
push
push
popa
sbb
jbe
enter
dec
sahf
pop
sbb
test
push
xor
jbe
add
mov
cmp
mov
lods
or
xor
daa
clc
jecxz
cli
mov
in
imul
sub
insl
loope
in
lds
adc
jl
cmpsb
xor
jne
int3
outsb
mul
xor
lods
imul
sub
test
mov
inc
adc
in
js
pop
or
cltd
mov
fcomps
aam
cmp
dec
movsb
loope
ja
sbb
std
jge
push
jb
mov
jo
pusha
inc
mov
loope
outsb
adc
pop
rcr
fstl
sarl
mov
jge
scas
dec
sbb
dec
inc
shll
jp
lcall
push
into
add
int
sub
mov
shl
sub
sbb
mov
mov
pop
out
out
sbb
stos
inc
pop
or
and
inc
inc
enter
aaa
fs
cmpl
out
pop
fsubl
sub
fisubl
call
sbb
push
in
push
xchg
dec
or
add
jns
xor
cli
js
aas
or
lock
adc
jp
daa
sub
js
dec
sub
lea
mov
outsl
jecxz
les
out
aad
fsubrs
je
push
add
add
aad
ret
jecxz
sbb
lods
pop
and
adc
idivl
jne
xor
in
sub
pusha
lock
adc
mov
sti
push
ror
and
or
jno
imulb
push
roll
mov
sub
xlat
repnz
hlt
aaa
fidivs
lea
adcl
sub
test
dec
mov
popa
mov
jne
scas
mov
orl
scas
pop
stos
jmp
mov
sbb
or
jbe
mov
push
loopne
jl
or
hlt
push
adc
aaa
test
push
cmp
int
lods
sti
push
lods
notl
xchg
sbb
jb
in
and
outsl
jb
adc
inc
and
mov
xchg
gs
iret
adc
jns
pop
into
xor
push
inc
push
sbb
xor
xor
jmp
int3
in
pop
and
inc
jmp
shr
or
pop
mov
pop
mov
pop
pop
mov
lcall
scas
mov
dec
pop
loopne
insb
push
pop
push
xor
or
aad
sbb
adc
push
sti
inc
sub
mov
mov
popf
sub
pop
xchg
pcmpeqb
das
cmp
lret
jnp
dec
dec
or
das
or
or
inc
mov
iret
nop
in
dec
sbb
shr
and
outsl
pop
dec
sbb
out
call
mov
pusha
shlb
mov
xor
adc
jno
push
and
jne
dec
pop
faddp
mov
jp
pop
je
out
sahf
pop
push
es
add
cli
imul
dec
in
pop
into
jo
enter
or
daa
je
dec
rolb
iret
sti
jns
mov
inc
insl
dec
inc
loopne
mov
xchg
inc
daa
jl
iret
lods
bound
pop
leave
dec
pop
xchg
push
popf
jae
add
lahf
aad
add
xor
jne
xchg
rcrl
or
add
out
nopl
mov
bound
sbb
push
xchg
adc
mov
cmpsl
lea
push
int3
mov
iret
je
std
add
lds
push
add
sbbb
cmpsb
cmp
in
and
mov
insl
pop
jns
out
fiaddl
fildl
inc
push
xor
mov
rorb
jge
and
pushf
mov
sub
sub
pop
xchg
mov
add
xchg
repnz
ss
sub
mov
rcl
pop
add
dec
jecxz
nop
push
adc
out
bound
xchg
mov
lock
dec
xchg
mov
push
jnp
push
dec
roll
push
sbb
push
push
pop
outsl
adc
daa
sbb
rcrl
jmp
insl
inc
cmp
mov
fidivrl
repnz
mov
stos
sub
mov
mov
aaa
iret
or
xchg
or
xchg
ja
fucomp
push
and
xchg
cmpsb
sub
pop
icebp
popf
push
dec
and
stos
stc
adc
push
adc
cld
int
daa
xchg
lret
jnp
mov
stos
and
pop
mov
adc
inc
jecxz
cmc
addr16
and
sbb
pop
lods
stos
repnz
loopne
icebp
xor
cmpsl
inc
pushf
movsb
push
push
addr16
pop
fprem1
sti
outsl
out
inc
outsb
jo
fisttpl
outsl
inc
loope
mov
scas
int3
dec
pop
add
loop
add
pop
mov
shr
jnp
stos
inc
jl
sub
and
arpl
xor
cli
push
loop
addr16
mov
incl
cmp
mov
aas
fbstp
lea
mov
push
push
lea
xor
fistl
pop
lock
jge
lret
inc
dec
ret
out
int
jmp
fmul
jo
popa
sub
dec
lret
dec
into
and
out
or
outsl
test
scas
and
xor
mov
inc
clc
push
in
hlt
inc
sbb
cmp
inc
inc
cmp
repz
xor
sbb
jle
xor
cmp
xchg
movsl
sub
xchg
pop
inc
cld
mov
repnz
sub
xchg
stc
outsb
fnstsw
mov
shlb
cmp
mov
lea
pop
dec
sbbb
fiadds
out
loop
repnz
push
lock
loopne
fcomip
sbb
xchg
mov
push
push
lret
fmull
in
mov
jg
not
fisttps
pop
and
dec
ds
push
movsl
pusha
movsb
pop
mov
adc
cmpsl
cmp
fdivrl
sahf
repz
cmpl
das
jg
cmp
add
pop
push
and
and
js
cmp
mov
in
mov
push
imul
lea
dec
std
lea
in
stc
sub
xor
lods
out
shrb
inc
fbstp
aam
pop
add
insl
xor
test
inc
inc
movl
add
minps
xor
pusha
push
xor
int3
sarb
push
mov
hlt
insb
lret
js
imul
or
or
xor
push
xchg
dec
faddl
mov
dec
xchg
xor
dec
add
out
sub
icebp
xor
sub
add
or
or
cs
das
dec
mov
dec
jg
lcall
test
push
cmp
out
pop
pop
inc
pop
cs
aaa
inc
sbb
inc
bound
pop
sbbl
dec
xchg
cmpsl
loopne
sarl
daa
cmpsl
pop
inc
shlb
test
call
jmp
aad
je
sbb
rclb
sub
lods
or
arpl
mov
fistpl
sbb
mov
jmp
mov
mov
loop
mov
imul
lods
or
mov
xchg
lea
or
xchg
mov
push
xor
test
mov
mov
nop
pop
arpl
fisttpll
fcomps
mov
adc
mov
in
popa
cmc
out
jp
mov
mov
push
sti
push
test
arpl
sbb
gs
inc
in
jbe
stos
adc
rcll
pusha
adc
out
cltd
xchg
and
or
mov
inc
cmp
fistps
mov
sub
pop
in
xchg
cmp
ss
aad
movsb
imul
mov
mov
frstor
push
cs
sbb
mov
jb
cmp
push
test
cld
cmp
divb
xor
cld
into
jl
stos
lock
stc
jle
dec
fs
pop
mov
lods
adc
xor
outsb
xchg
mov
mov
dec
leave
pop
mov
mov
and
mov
xor
jns
mov
cmp
and
testb
mov
dec
mov
stos
das
dec
test
mov
adc
cmpb
rcrb
sub
sub
popa
fisttps
movsb
add
lds
insl
inc
and
nop
xchg
outsb
xchg
out
movsb
roll
and
sub
xor
fwait
jns
imul
mov
pop
dec
outsl
and
stos
cltd
shl
fcomps
dec
sbb
add
ret
xor
and
and
sub
iret
gs
les
hlt
mov
cmp
mov
and
xor
mov
andb
out
push
inc
scas
hlt
sub
out
mov
out
sub
ss
or
xchg
js
jg
xchg
sbb
popa
add
popw
int3
or
add
push
jg
push
mov
shll
sub
fwait
hlt
push
clc
jl
xchg
inc
out
cmp
mov
icebp
jbe
lahf
or
jecxz
jp
add
mov
adc
push
xchg
add
lret
inc
out
jp
loopne
ss
scas
push
test
or
out
arpl
xchg
adc
xchg
mov
outsb
add
test
mov
mov
mov
jnp
inc
or
add
sub
xchg
leave
lret
lds
cmpsl
dec
jl
je
jge
sti
and
adc
or
iret
cmp
pop
jl
addr16
mov
lods
mov
cmc
imul
add
ds
sbb
and
sub
adc
imul
mov
pushf
mov
mov
jge
xchg
das
int
sub
popf
adc
mov
mov
insl
mov
pop
jmp
int3
sbb
ret
decb
mov
inc
push
sahf
jp
sahf
loope
movsl
push
fs
jae
ret
and
or
add
sar
imul
int3
fwait
mov
sbb
movsb
add
iret
xchg
push
repz
lods
pusha
dec
mov
sub
sub
decb
xchg
mov
in
outsb
xchg
inc
inc
fldcw
test
fstpt
xor
adc
xchg
js
sbb
test
out
jae
mov
xchg
push
aad
scas
adc
sarl
rorb
fs
int
add
out
pop
cmpsl
xchg
mov
jnp
jg
mov
sbbb
repnz
mov
outsb
xchg
nop
mov
dec
scas
xor
dec
and
std
leave
jg
rcl
cmp
outsl
and
sbb
or
cmp
xor
stc
loop
mov
mov
mov
icebp
setle
loope
sbb
fstps
jecxz
imul
xor
xor
mov
pop
lcall
xchg
sbb
movsb
les
fsubrl
in
repnz
pop
sub
push
das
inc
inc
xor
adc
push
mov
cmp
adc
pop
pushf
pop
aaa
inc
insl
inc
adc
jnp
adc
jecxz
enter
inc
mov
ss
outsb
and
sarl
push
fistpll
xchg
or
or
add
sbb
add
inc
jg
pop
or
lcall
iret
pop
mov
addr16
jne
mov
mov
cld
std
dec
dec
hlt
mov
cmp
ja
aaa
push
xchg
test
loopne
jecxz
xchg
mov
mov
add
shll
sbb
pushf
mov
mov
xor
gs
mov
adc
js
fnstcw
pushf
mov
xor
jl
stos
in
nop
dec
test
fnstenv
andb
cmc
das
jle
and
loop
push
sahf
pop
inc
xchg
mov
inc
and
hlt
sub
push
jmp
jno
hlt
mov
sbb
loopne
loopne
inc
dec
cmpsb
aam
or
lcall
cmp
mov
mov
jl
cmp
sub
hlt
nop
xorb
jbe
cld
or
xor
dec
jl
xor
sahf
les
mov
jg
pop
not
mov
or
dec
mov
cmpl
loope
outsl
das
js
or
lock
mov
insb
hlt
mov
lods
test
sub
pusha
call
test
jae
scas
dec
ror
into
mov
push
jb
mov
dec
lahf
cmp
inc
gs
out
mov
inc
cld
pop
add
sahf
jge
mov
mov
sbb
iret
adc
cli
mov
andl
clc
mov
push
push
lock
xorl
cmp
dec
mov
testl
push
mov
int3
jbe
mull
sbb
bound
pop
mov
push
shll
ret
enter
gs
ja
and
pop
jb
mov
addr16
inc
test
pushf
cs
mov
xor
pop
in
arpl
jb
in
cmpsl
and
outsb
jns
dec
sahf
cmp
jnp
cmp
aad
xchg
sub
xchg
imul
pop
lret
test
mov
out
dec
rolb
inc
loope
cwtl
in
jecxz
push
add
inc
xor
sti
push
jae
mov
in
aad
xchg
out
pop
add
push
ficoms
arpl
adcb
push
sbb
xchg
mov
pop
ja
push
testl
aas
roll
cmp
jl
or
pop
push
in
inc
outsb
fwait
xchg
incb
dec
out
xchg
shlb
cmp
loope
sbb
aad
dec
mov
fnstcw
pop
cmc
push
mov
jb
adc
mov
shrb
cmp
test
sbb
jle
mov
ds
sub
mov
cmp
xor
subb
enter
and
shrb
fcomi
mov
mov
mov
inc
xchg
insl
ljmp
sbb
test
mov
jp
pop
cmp
in
xchg
mov
leave
fcoms
mov
or
bnd
mov
fwait
cmp
add
sub
jnp,pn
push
dec
inc
test
mov
jbe
pop
arpl
push
stos
jno
sahf
shlb
stc
test
push
shll
lods
lret
mov
push
std
inc
and
xchg
daa
adc
cld
fwait
icebp
mov
test
mov
filds
mov
rcrl
ss
jb
idivl
or
push
jl
flds
inc
sbb
cmc
aaa
stc
mov
scas
iret
push
js
jno
lcall
lcall
out
xchg
repnz
aas
cmp
dec
movsl
test
fmull
pop
or
hlt
clc
cli
pop
fcoms
dec
aas
sete
test
aam
sbb
or
push
arpl
cmpsb
inc
cmp
aas
ret
aas
lcall
push
imulb
add
out
xor
pop
sahf
das
inc
std
lea
sbb
adc
fidivs
push
leave
fwait
sti
jbe
mov
in
out
and
pop
cmpsl
cmp
bound
and
sub
and
cs
or
dec
mov
aas
mov
lea
jb
ja
xchg
dec
in
loop
stos
jmp
dec
inc
je
lods
mov
ret
icebp
insb
or
hlt
call
ja
push
mov
dec
je
iret
xchg
ds
and
sub
jl
sbb
insl
jg
in
lds
pusha
sahf
push
and
pop
xchg
scas
adc
pop
rorl
popa
loop
jae
int
push
pop
xchg
xor
cmp
cmp
inc
pushf
add
or
cmp
add
cmpsb
pop
push
jecxz
jne
xor
lea
adc
lcall
fsubl
ret
cmpl
or
pop
mov
jl
jb
mov
add
popf
fadds
mov
jg
pushf
sub
dec
or
pop
dec
insb
mov
testb
pop
jne
inc
adc
jecxz
dec
call
cmpsb
inc
cmp
inc
and
outsl
jbe
sub
xor
bound
xchg
cmp
sti
xor
test
pop
xchg
ds
jb
loop
xor
sbb
sub
xchg
jmp
and
in
pop
repz
xchg
repz
xchg
aas
jnp
push
roll
adc
pop
rorb
push
xor
dec
es
fbld
jp
mov
ret
mov
mov
movsb
mov
adc
xor
arpl
movsb
pop
cmp
subb
push
jmp
or
lahf
push
xchg
push
add
mov
inc
jns
dec
and
jge
jb
mov
in
mov
dec
adc
insl
or
lcall
rclb
xor
add
out
lods
dec
sbb
out
jb
jne
push
push
xor
popa
ret
out
lock
call
in
jmp
fistpll
mov
fistpll
push
outsb
xor
test
xchg
movsl
je
or
std
xchg
add
ret
fnsave
jp
pop
sarl
movsl
push
xor
loope
mov
jmp
sub
mov
daa
ficomps
xchg
shrl
xchg
cs
js
mov
scas
push
mov
lcall
movsb
daa
lods
mov
mulb
jb
ret
pop
js
vpmacswd
rcrl
sbb
in
test
aad
jmp
inc
xor
sbb
xchg
out
lds
lcall
pop
outsb
call
adc
pop
rclb
jle
push
jg
dec
mov
movsl
adc
cmp
pop
lods
xchg
hlt
dec
pop
cmpsb
cmp
cmp
lahf
jo
fsubr
cmp
pop
pop
test
and
pop
adc
adc
daa
jl
add
push
xor
test
pushf
xchg
mov
or
jge
adc
push
out
dec
inc
sarb
insl
hlt
sub
shrb
xchg
pop
movsb
pop
imul
out
dec
test
mov
xchg
jl
stos
lods
hlt
and
fisubrs
dec
and
and
sub
arpl
sub
mov
dec
dec
push
rcr
es
sbb
adc
dec
lahf
lret
mov
xor
mov
inc
pop
xor
repz
mov
and
shrb
sbb
cli
pop
lret
mov
lds
dec
aaa
ljmp
xchg
addl
mov
sub
mov
aad
addr16
ret
sub
loop
enter
ss
jl
lods
push
xor
dec
pop
jle
pop
stc
mov
test
sbb
xor
scas
dec
mov
pop
ficompl
cmp
jecxz
xor
pop
lock
test
or
adc
fimuls
xchg
mov
lret
xor
cmp
or
cltd
inc
inc
inc
ds
repz
pop
jmp
and
and
and
lds
pusha
adc
in
test
jmp
or
pop
mov
pop
mov
adc
out
pop
xor
xchg
imul
add
sti
test
je
lds
xchg
and
inc
inc
daa
out
in
ds
dec
mov
and
test
pop
mov
jecxz
mov
or
push
inc
cltd
cwtl
push
adc
cmpsb
dec
das
mov
lods
mov
sub
push
pushw
ret
jle
adc
scas
shl
jg
sub
xchg
cmp
mov
add
sbb
pop
sbb
sbb
cmp
movsb
and
sub
cs
shll
or
mov
hlt
add
add
mov
repz
testb
loopne
cwtl
and
clc
aaa
test
and
jae
push
fistpll
into
cmp
and
xor
and
sbbl
pop
addl
lock
call
out
inc
add
cmp
dec
bound
frstor
jo
sub
and
or
mov
std
dec
data16
or
push
jg
jno
pop
jge
pop
aad
stos
or
sbb
pop
push
ljmp
addr16
call
inc
pop
in
push
in
dec
sbb
leave
inc
adc
sbb
push
addb
adc
xchg
mov
shl
adc
push
push
mov
faddl
sbb
mov
mov
paddw
add
enter
mov
cli
fnstcw
jbe
insl
fld
out
jg
adc
inc
out
out
jl
sbb
in
dec
mov
sbb
xlat
lret
fistl
xor
and
fidivrl
inc
xor
hlt
js
dec
add
xchg
ljmp
sub
xchg
cmp
loop
dec
nop
xchg
jns
cs
roll
inc
mov
mov
sarb
push
lods
inc
and
aas
push
or
movsl
js
mov
cmp
dec
pop
popf
jmp
enter
pop
out
mov
xlat
int
xor
repz
cmp
mov
push
or
sub
iret
bndstx
sbb
lock
push
clc
jmp
icebp
in
mov
lret
dec
ja
or
aaa
addl
sbb
adc
mov
cltd
dec
je
mov
jo
jo
adc
aam
xchg
and
xor
add
sbbl
sti
jnp
push
xchg
adc
sahf
pop
lar
repz
sub
das
test
inc
cli
inc
call
stos
xchg
push
pop
cmpsl
jg
mov
and
shll
push
popf
aaa
xchg
cmp
and
cltd
or
push
jmp
pop
or
repz
mov
dec
push
mov
rol
rcrl
cmp
vcvtpd2psy
bound
imul
call
mov
cld
shlb
sarb
sbb
and
imul
lret
mov
ds
imul
int
and
inc
or
pop
jo
ja
stos
pop
fisubrs
ret
jo
leave
cmp
adcl
daa
shrb
fcmovnu
pop
push
out
sbb
ror
jmp
lret
js
call
jnp
and
test
aam
push
mov
cwtl
in
fsts
jecxz
xor
xchg
push
and
dec
inc
lods
add
loope
inc
add
cmp
cli
ret
subb
and
rorl
das
inc
rolb
out
sub
push
daa
push
and
sbb
int
sub
sbb
popa
xor
mov
std
mov
push
testb
pop
sbbl
xor
sbbb
aas
dec
sbb
cmp
scas
dec
dec
fiaddl
in
das
adc
cmp
mov
test
loope
out
test
rep
loope
lcall
aaa
add
adc
pop
dec
imulb
push
addr16
lea
pop
pop
xor
sub
stos
les
aas
js
xor
test
rcll
push
sbb
scas
mov
add
push
test
out
outsl
movsb
in
sbb
mov
adc
mov
fcomi
add
lcall
xchg
jmp
mov
loopnew
das
rcrb
xor
and
data16
repz
jge
dec
mov
mov
push
mov
mov
lods
push
jecxz
mov
jp
xchg
rorl
iret
inc
loope
les
sub
adc
cmp
addr16
sub
leave
mov
test
call
jae
bound
lea
movsb
sub
lods
lret
into
dec
push
lahf
or
cld
repz
mov
jg
sbb
ss
sbb
incl
or
jp
jg
ds
fwait
mov
jg
mov
pop
icebp
and
fists
xor
orb
xchg
push
ret
loope
movsb
repz
jg
inc
mov
outsl
push
std
iret
mov
lods
insb
stc
sub
divb
repz
mov
pop
mov
mov
jo
loopne
bound
add
or
shlb
mov
xchg
test
pop
pop
xchg
inc
hlt
inc
mov
pop
mov
lods
xchg
inc
outsb
pop
add
outsl
jbe
int
xor
lock
add
xchg
or
xor
lahf
mov
adc
cmpsb
dec
add
hlt
xor
cmp
push
cmp
movsl
push
jno
popf
pop
cmp
fidivrl
hlt
xlat
mov
mov
dec
push
lcall
pushf
scas
lcall
shrb
repnz
incl
push
cltd
loope
imul
sub
pusha
fucom
leave
pop
ljmp
pop
js
push
shr
jb
ss
sbb
outsl
sbbb
jb
aad
jle
inc
inc
bsf
lds
sbb
int3
push
or
pop
dec
ror
gs
fisubs
iret
adc
das
sar
xor
dec
iret
nop
mov
lds
hlt
aas
push
push
popf
call
mov
sub
sbb
pop
testl
sub
inc
xchg
rorl
jns
ljmp
mov
gs
push
pop
popa
sub
fstpt
out
adc
out
aam
jge
fs
daa
je
mov
push
cmpsb
xchg
push
push
jno
adc
iret
fiadds
addr16
inc
push
addb
out
pop
out
adc
mov
mov
scas
mov
scas
ficoms
pop
sbb
xchg
pop
or
cmp
test
mov
inc
out
repz
je
dec
fiaddl
jmp
mov
test
jle
push
sbb
sar
iret
mov
ficompl
cltd
dec
jbe
lahf
pop
js
or
xorl
jae
and
outsl
rclb
sahf
sbb
pop
mov
dec
and
inc
dec
aas
arpl
adc
mov
xchg
mov
fnsave
cmp
cwtl
cs
sbb
jge
pop
pushf
js
lods
jbe
mov
mov
cs
sbb
jbe
push
mov
js
sbb
popf
xor
imul
mov
sub
in
dec
shr
scas
scas
mov
jmp
lock
sub
jmp
or
add
bound
es
popa
cmp
addr16
mov
jne
lret
sbb
lods
inc
xchg
addr16
cmp
shll
or
cmp
inc
sub
adc
cmpsb
sbb
pusha
test
sub
or
mov
fnstenv
mov
dec
loopne
sbb
cltd
push
inc
cmp
add
push
push
int3
clc
or
into
pop
sub
mov
pop
push
stos
jmp
inc
insl
or
shlb
mov
cmpsb
ljmp
movsl
cmp
add
jb
dec
lods
inc
mov
lods
out
scas
sbb
mov
and
cmp
and
aam
add
or
inc
jno
cmp
push
jo
ficomps
cmp
mov
xor
rep
mov
pop
fs
fistpl
and
loope
out
imul
push
push
nop
sbb
dec
mov
xchg
cpuid
aam
stos
inc
push
mov
pop
inc
data16
lods
and
pop
shlb
mov
add
daa
repnz
jb
cmpsl
in
in
sar
fidivrl
pop
daa
adc
or
aaa
in
mov
adcb
mov
mov
nop
roll
dec
inc
hlt
popf
aad
in
js
clc
aaa
add
addr16
mov
test
cwtl
fisubrl
jp,pn
cmp
dec
es
cwtl
outsl
fst
loop
push
loop
mov
arpl
in
and
test
pop
push
sub
jne
push
repnz
jmp
ljmp
mov
jne
in
jnp
je
mov
enter
or
jecxz
jae
mov
insl
adc
xchg
icebp
sbb
push
sbb
js
or
outsb
pop
cmp
nop
imul
adc
cmp
in
into
pop
sbb
jle
mov
insb
jmp
xchg
test
mov
xchg
push
cmp
adc
jecxz
lds
hlt
outsl
adcl
or
pop
xchg
fs
and
mov
clc
dec
cmpsb
pop
pushf
dec
in
or
pop
push
nop
loope
out
xchg
jne
jne
mov
pop
sub
lds
xchg
lock
call
repz
push
sub
test
fdivl
ret
add
cmp
int3
xor
mov
push
jg
xchg
lret
cs
int
ljmp
jmp
xor
mov
popf
xlat
jg
jecxz
pusha
nop
arpl
cmp
mov
sbb
dec
xchg
rolb
repz
xor
mov
lods
jne
mov
lods
std
or
out
dec
call
sbbl
cmp
stos
stc
mov
add
mov
or
xchg
adc
enter
dec
pop
jne
sbb
iret
or
mov
test
pop
mov
sbbl
decl
out
std
scas
push
or
mov
jno
xor
inc
or
xchg
inc
dec
ja
mov
push
xlat
lret
jno
into
mov
scas
fs
icebp
arpl
mov
jno
lods
shrb
ret
sbb
mov
stos
cmp
cli
push
cli
and
scas
jbe
jmp
mov
sbb
jecxz
xor
push
and
popf
leave
rclb
sbb
das
xchg
inc
stos
mov
test
sbb
sbbb
inc
daa
inc
loopne
cltd
xchg
repnz
loopne
int
out
stc
pop
or
ss
mov
dec
pop
ret
add
pusha
pop
inc
sbb
lahf
adc
cltd
sbb
in
inc
mov
dec
std
scas
lods
sbb
add
xchg
sbb
cmpl
push
push
cmpsb
imul
and
inc
pop
dec
adc
lahf
popa
std
sbb
sub
mull
sub
pushf
mov
cs
shlb
xor
les
inc
mov
lods
jecxz
ds
pop
push
sbb
adc
sbb
aaa
pop
fsubrl
imul
notb
outsb
add
xchg
dec
jo
aas
ljmp
xchg
rcr
mov
xchg
cmp
inc
mov
daa
out
icebp
and
add
cli
addr16
xor
xchg
mov
daa
jmp
jg
cmp
out
lods
pop
pop
pop
cmp
pop
test
inc
xchg
push
add
sbb
enter
scas
mov
sbb
dec
ja
daa
mov
or
fldcw
aam
mov
imul
repz
mov
jb
mov
mov
dec
les
xor
nop
pop
mov
es
lods
cmp
jno
push
imul
jmp
cmp
cmp
cli
or
mov
fnsave
add
pop
sub
inc
push
dec
xchg
adc
js
stos
push
inc
out
mov
and
dec
sbb
js
mov
add
repnz
jecxz
or
sub
adc
dec
pushf
inc
stos
loope
xchg
decb
aaa
pop
loopne
fstl
adc
sub
mov
pop
sub
hlt
jge
hlt
adc
into
mov
jbe
faddl
adc
push
xchg
lock
js
lea
or
jle
cld
fs
daa
jne
xor
adc
aad
pop
imul
popf
xchg
jb
ljmp
outsl
xchg
mov
inc
fs
nop
add
in
add
adc
orps
jl
jecxz
mov
add
xorb
int3
daa
push
xor
inc
jmp
ret
pop
jge
pop
ret
ficoml
jg
sbb
adc
cmp
push
pusha
mov
mov
sub
adc
sub
xor
jb
fistps
movsb
out
jecxz
mov
or
sub
xchg
sahf
imul
mov
pop
out
ret
decl
mov
xor
jg
arpl
in
or
push
sbb
cs
push
inc
sbb
les
rcrb
add
lcall
cmpsb
dec
sub
addb
or
addl
jo
loope
jmp
je
mov
hlt
outsb
jb
es
pop
pop
popa
mov
filds
shl
cmpsl
sbb
int
jne
and
push
and
cli
mul
mov
aaa
jne
jbe
mov
divl
cmc
lret
pushf
outsb
adcb
insb
aaa
stos
fcomi
rorl
call
mov
aas
rolb
decl
stc
fiaddl
pop
sbb
mov
gs
fcmovu
or
jae
lcall
mov
out
ret
cld
mov
lods
fidivrl
dec
lods
aaa
xchg
lods
andb
test
loope
mov
push
xchg
clc
mov
iret
xchg
xchg
sub
movl
orl
fucom
arpl
xchg
dec
mov
jae
stc
or
arpl
xchg
xchg
lock
mov
hlt
dec
aaa
or
push
lods
dec
mov
pop
and
stos
and
adc
fsubrl
in
and
push
sbb
xchg
inc
mov
cmp
test
or
xchg
push
sarw
mov
or
data16
hlt
push
or
cmpsl
loopne
nop
pop
std
adc
inc
fwait
dec
out
shll
lock
inc
xchg
adcb
in
mov
pop
scas
push
cmc
push
jbe
sub
mov
push
jno
mov
cltd
clc
inc
mov
test
mov
imull
and
mov
sarl
std
lcall
pop
xchg
in
imul
icebp
xor
out
inc
jb
pushf
imul
test
mov
adc
jbe
mov
ljmp
cmp
push
ja
push
add
mov
and
xchg
lret
mov
add
push
dec
out
gs
orb
mov
addl
xor
push
rcl
ja
es
popa
lahf
shlb
sub
sbb
notb
inc
xor
stos
testl
fstpl
adc
inc
cmp
scas
pop
scas
aas
in
clc
clc
inc
jae
inc
pop
pop
lahf
rsm
ret
pusha
fsubrl
lret
cli
jle
rorl
dec
aaa
icebp
adc
sbb
cmpsl
or
inc
dec
inc
std
sub
rolb
andl
mov
cmp
fmul
jg
dec
test
adc
sbb
mov
xchg
mov
or
popf
cltd
dec
sub
add
inc
xlat
or
pop
hlt
repz
shrl
das
fisubl
pop
push
out
cmp
mov
mov
lret
arpl
pop
xchg
push
movsb
adc
push
jl
or
stos
aaa
adc
push
ret
loope
cmp
push
mov
mov
mov
inc
or
xchg
stos
loope
out
out
test
push
cwtl
jmp
mov
dec
movsb
xchg
xchg
push
inc
std
pushf
jae
or
pop
int3
aam
and
pushf
pop
push
mov
dec
mov
xchg
aaa
and
in
fwait
jp
inc
outsb
cmp
mov
sar
add
clc
setnp
mov
nop
and
jp
mov
push
sub
cmpsl
arpl
sub
jp
lahf
mov
negb
push
imul
in
lods
push
ja
loope
dec
jg
fistps
and
jnp
xor
jl
mov
and
jae
test
jle,pt
mov
pand
jp
xchg
dec
mov
loopne
iret
push
cltd
pop
cmp
stc
lahf
movsb
inc
sub
pop
stos
mov
push
test
repz
or
rcrb
cmpsl
daa
sub
push
push
push
iret
push
inc
dec
cmpsb
mov
or
stos
push
push
adc
sahf
inc
testb
lods
ljmp
xchg
stos
sbb
insb
je
rcr
cmp
adc
push
fst
sbb
test
dec
xchg
test
jnp
xchg
cs
movsl
inc
xchg
pop
popa
clc
daa
addb
sub
mov
add
push
mov
jno
addr16
sub
add
pop
movsl
add
cwtl
xchg
addr16
mov
xchg
addl
push
lahf
ss
pop
mov
jno
lcall
imul
jl
insb
xor
adc
stc
add
push
and
stc
pop
bound
call
jne
repnz
andl
cmp
ja
sub
pop
sahf
pop
dec
sub
aam
fistpll
mov
aas
fucom
mov
add
mov
cmpsl
xor
aaa
pop
push
loope
fsubl
and
mov
in
shl
add
sarb
mov
pop
mov
dec
sbb
lret
jnp
push
adc
test
lods
mov
test
jmp
adc
pop
idivb
mov
push
push
inc
cmp
in
inc
dec
sbb
arpl
fcomps
repnz
jl
mov
nop
jp
sbb
xchg
dec
push
data16
jb
jl
push
stc
ss
sbb
xchg
pusha
mov
movsl
adc
jne
loope
aas
sarb
adc
ja
sbb
sbb
pusha
int3
int
lock
test
sar
mov
fildl
shrb
add
fwait
lock
mov
lahf
lods
mov
lods
bound
dec
mov
and
mov
mov
test
out
mov
mov
pop
mov
adc
ret
mov
and
cmp
aas
aam
iret
mov
or
mov
xchg
adc
data16
add
inc
out
test
adc
das
sarb
jne
inc
lret
xor
out
dec
inc
xchg
and
pop
xchg
cli
stc
dec
mov
inc
mov
leave
fs
pop
inc
mov
xor
inc
jno
pop
mov
push
test
aas
int3
int
xorl
adc
gs
out
jle
cmp
aad
mov
dec
ret
push
xlat
addr16
sub
shlb
js
out
lret
xor
sbb
enter
mov
in
xchg
adc
std
shlb
iret
or
movsl
xor
loop
mov
add
and
adc
test
repnz
xchg
iret
pop
sbb
addr16
fadds
xor
adc
add
push
loope
mov
decl
sti
add
cmp
out
push
repnz
repnz
jb
mov
mov
loopne
sub
push
or
mov
mov
or
dec
les
dec
addl
dec
outsl
je
aas
add
mov
inc
out
iret
mov
rcrl
sbb
adcl
push
sub
std
fidivs
jmp
pop
sub
sub
ds
popa
pop
mov
shrb
pop
mov
dec
pop
cld
mov
in
dec
stc
lods
add
sbb
sub
not
fsubs
xchg
aam
add
mov
and
repz
push
out
mov
mov
sahf
dec
rorb
lock
data16
cmc
shll
xorl
out
lock
fidivl
push
or
jno
mov
adc
jb
shl
fwait
out
cmp
ss
sti
inc
add
test
mov
push
cli
jg
or
das
xor
xchg
imul
daa
xor
pop
and
xchg
adc
js
mov
jnp
jge
push
je
and
adc
push
xchg
and
je
mov
test
cmp
movsl
repz
pushf
mov
scas
mov
inc
out
mov
inc
mov
fldl
loop
pop
push
enter
pop
mov
aas
or
ficoms
and
lods
jmp
pop
fdivl
jg
popa
lods
je
dec
outsl
sbb
sbb
js
test
jb
xchg
jmp
jnp
dec
adc
sahf
push
pop
mov
cmp
aaa
mov
aas
xchg
pusha
fsub
test
dec
xor
mov
aad
mov
loope
int3
aas
push
push
fwait
pop
sub
mov
jmp
clc
cmpsb
scas
mov
into
push
dec
imul
sbb
call
push
add
jbe
dec
dec
stos
sub
divl
cwtl
dec
sbb
decb
in
inc
into
jo
or
mov
in
nop
sub
mov
pop
out
fadd
jmp
lahf
hlt
jle
and
pop
mov
sbb
or
dec
scas
insl
dec
jecxz
pop
jns
pushf
xchg
mov
sub
cltd
es
cmp
vmovdqu
sarb
dec
aad
lret
std
push
and
nop
xor
rol
jmp
sub
adc
insl
loopne
push
add
mov
jbe
cmp
push
cld
aaa
loop
jb
outsl
sub
stos
in
cmp
addb
cmp
ja
xchg
sub
or
adcl
mov
push
add
mov
push
xor
arpl
push
sub
jecxz
loopne
mov
jge
or
add
dec
repnz
lcall
mov
inc
xchg
dec
lret
xchg
add
icebp
adcl
addr16
fisubrl
fmul
ficoms
arpl
adc
rcrb
adc
repz
xchg
lret
stos
neg
bound
dec
or
push
out
dec
jns
mov
dec
pop
sbb
jbe
les
cltd
dec
into
test
adc
out
pop
or
test
jns
leave
adc
and
cwtl
pop
in
es
insb
imul
mov
lret
pop
sbb
mov
sbb
ret
sub
jnp
xchg
icebp
or
adc
adc
outsl
ja
sbb
mov
cmp
sub
lock
pop
xor
dec
popa
popa
cmc
sbb
leave
pop
aam
or
xor
mov
fnstsw
inc
movsl
pop
jb
lock
bound
xchg
les
inc
and
adc
pop
sub
mov
and
bound
mov
data16
add
add
ja
jnp
movsb
clc
mov
push
enter
push
sub
push
ljmp
and
stc
sub
fisttpll
xor
dec
inc
in
or
xchg
xchg
pop
mov
or
dec
cmp
jl
sbb
sbb
adc
jp
xchg
xor
pop
pop
mov
cwtl
jae
nop
in
adc
bnd
add
sub
popf
movsl
les
jl
xor
or
clc
stc
lods
daa
les
insb
stc
pop
out
jmp
xchg
or
push
jle
adc
aaa
inc
rolb
sub
in
adc
int
xchg
sub
pop
rorl
fsubr
xor
and
and
out
test
xchg
adcl
shrl
push
inc
xor
test
and
or
dec
inc
dec
movsb
mov
repnz
xor
shrl
dec
negb
mov
cmp
call
ret
mov
pop
stos
pop
mov
mov
mov
fildll
and
dec
push
aas
mov
sbb
clc
inc
orb
push
divl
pushf
jle
pop
movsb
mov
out
incb
jecxz
jnp
ljmp
mulb
cmpsb
fbld
int
or
mov
inc
dec
push
push
orb
daa
outsl
loope
jge
cmp
popl
testl
pop
addr16
or
push
cwtl
mov
out
jp
test
in
and
mov
lcall
lods
push
repnz
gs
jmp
mov
push
mov
xor
inc
movsl
adc
sub
mov
and
mov
frstor
push
xor
imul
or
mov
xchg
movsl
lret
enter
sub
xor
push
addr16
sbb
mov
dec
adc
jb
push
loopne
daa
fnsave
ret
addr16
mov
add
mov
adc
fidivrs
dec
adc
sub
clc
pop
sbb
ror
sbb
pop
cmp
jno
cmpsl
bswap
inc
jecxz
out
ret
mov
mov
dec
fst
xchg
and
nop
dec
lock
push
outsb
fidivrs
mov
in
das
insb
sub
bound
sub
js
stos
inc
repz
es
add
mov
cld
test
insl
dec
addr16
push
dec
adc
and
fadds
fwait
in
adc
sub
jecxz
pop
bound
inc
mov
lds
dec
ss
cltd
mov
jns
mov
sbb
out
pop
movsb
ret
xchg
xor
jo
into
test
scas
jmp
sub
push
and
scas
loopne
in
push
sbb
mov
cli
cmpsl
out
arpl
std
call
cli
jae
insb
decb
mov
daa
xchg
and
mov
inc
and
lcall
or
xchg
repz
and
adc
in
mov
addr16
adc
adc
stos
or
cs
xor
outsb
repnz
nop
mov
sbb
cmp
andl
lock
mov
ret
mov
shrl
dec
fisttps
cmp
icebp
xor
ret
imul
dec
dec
jmp
aas
mov
into
jl
je
and
mov
sub
rorl
inc
out
scas
loope
movsl
sbb
or
adc
pop
pop
mov
xchg
jns
inc
inc
dec
cmp
cmp
cmpsb
ljmp
cmp
adc
std
sbb
into
js
jmp
mov
mov
hlt
mov
out
push
pop
push
or
and
sub
repz
js
outsb
out
xor
jne
lock
or
xor
call
movsl
and
test
sahf
rcll
push
sbb
mov
jge
ljmp
insl
mov
psrld
stos
xchg
and
add
lcall
jl
xchg
shll
mov
aad
scas
rcr
lret
int
pop
push
pop
mov
push
xor
pop
mov
or
sbb
scas
mov
lret
arpl
cmp
lock
mov
pop
mov
jne
fcom
adc
idiv
mov
arpl
push
sahf
adc
jbe
mov
push
ret
or
and
xchg
pop
rclb
mov
mov
push
sti
loope
das
push
jmp
mov
notb
xor
js
enter
in
jmp
push
xchg
out
pop
xchg
jmp
push
mov
ret
jge
xlat
mov
jmp
shlb
push
jg
mov
out
aas
or
xor
push
popa
inc
pushl
pop
push
and
mov
scas
out
adc
jg
js
sbb
pushf
rclb
pop
lds
imul
cmc
mov
out
dec
pop
push
rcrb
sahf
pop
ret
mov
lods
sub
pop
jnp
fisttpll
das
cwtl
pop
lret
sbb
sub
or
idivl
sti
repnz
lods
push
idivb
cltd
and
mov
scas
in
and
xor
dec
xchg
jae
inc
stc
jns
cmp
mov
lods
inc
pop
testl
aaa
inc
xor
sub
cmp
addl
rorb
testl
mov
mov
ds
enter
jge
push
pop
imul
lahf
dec
clc
push
dec
mov
daa
das
jno
popa
lahf
and
pushf
jp
and
js
mov
inc
pop
daa
jg
imul
aam
lea
xor
popa
lea
nop
mov
fisttps
mov
mov
mov
lahf
fcomps
push
mov
cmp
out
mov
scas
into
cmpsb
mov
jle
mov
inc
sub
and
and
mov
sbbl
rcll
jmp
jp
pusha
enter
test
jge
outsb
mov
xor
adc
add
mov
imul
enter
aam
jo
mov
or
in
ret
das
xlat
add
add
repz
rorb
scas
jns
push
ret
and
ret
mov
or
aas
xor
xor
mov
sub
jle
sbb
stc
adc
scas
sub
cli
out
popf
xor
aad
or
dec
mov
addr16
inc
repnz
movsl
call
mov
cmp
testl
iret
adc
mov
inc
push
pop
lcall
cld
int3
jne
popf
xchg
dec
cltd
imul
cltd
fwait
lahf
popa
push
sub
into
push
stos
jg
js
add
sbb
js
ja
dec
xor
dec
mov
cltd
aad
leave
mov
xchg
and
and
lret
push
movsb
jno
lcall
out
xor
push
shr
daa
movsb
fdivl
xorb
xchg
es
lret
sahf
scas
mov
scas
cmpsl
sarb
cmp
sub
into
stc
outsl
movl
repz
sbb
mov
cld
xor
and
inc
lret
lods
sti
add
xor
pop
and
xchg
cli
add
imul
aaa
mov
test
inc
sbb
mov
loop
push
shll
mov
mov
xchg
out
xchg
and
pop
mov
shrl
enter
mov
aam
cltd
and
div
mov
cmp
iret
rol
aas
jnp,pt
dec
mov
icebp
push
sbb
std
and
lea
and
sbb
and
cli
insb
pushf
shlb
hlt
mov
add
test
ja
jp
inc
rolb
jns
aas
cmpsl
xchg
mov
decl
loopne
lea
adc
adc
mov
loope
sbb
cmc
or
dec
mov
enter
jle
sub
jns
mul
cld
fs
cmpsb
mov
lcall
fsubs
and
cmc
movsl
mov
cmp
jp
shll
and
mov
cmp
xchg
add
fistl
mov
dec
fcmovb
loop
jl
std
insl
data16
mov
jmp
dec
repnz
inc
xchg
mov
xchg
scas
xchg
dec
call
pop
data16
push
lods
and
pop
mov
dec
push
cmp
push
or
adc
out
push
jne
xor
insl
ljmp
xor
add
cmpsl
sbb
hlt
mov
dec
imul
sbb
rcr
mov
dec
mov
aad
cwtl
and
jecxz
mov
ss
ret
cmc
outsl
pop
mov
pushf
roll
xchg
mov
std
fwait
sub
xchg
xchg
pop
fs
scas
mov
in
enter
xor
inc
add
adcb
aas
sub
movsl
or
inc
int3
mov
call
out
dec
mov
sti
mov
insl
push
ja
and
mov
sub
jecxz
sbbl
push
andl
enter
sub
sahf
jae
jns
mov
push
xor
ss
outsl
mov
sub
push
test
test
inc
xchg
jge
dec
xor
sub
jo
dec
mov
mov
dec
leave
sbbl
pop
leave
movsl
out
dec
cmp
sar
pop
mov
scas
sub
int
clc
repz
push
jmp
adc
cltd
xchg
faddl
or
lahf
or
sbb
xlat
das
cmc
in
cmc
jle
xor
pop
in
fildl
ss
dec
or
and
jns
pop
sbb
cmp
lret
out
xchg
rcrb
sbbl
je
add
inc
pop
mov
dec
dec
daa
push
data16
stos
scas
orb
lods
mov
retw
ret
pop
dec
neg
stc
or
add
dec
mov
mov
push
out
mov
jmp
jb
stos
push
mov
bound
sbb
stc
lock
lods
in
sbb
sub
dec
shl
test
sbb
daa
loope
fisttpll
movsl
pop
mov
mov
imul
sbb
pusha
add
scas
add
xor
ljmp
dec
fldl
bound
inc
das
xor
fcomp
mov
lcall
pop
sub
xor
xchg
nop
sti
pop
adc
lock
lods
insb
in
cmc
jl
out
js
add
scas
loop
in
cld
pop
jbe
push
mov
das
add
cmp
mov
outsb
js
leave
and
cmp
les
jmp
mov
out
negb
or
mov
cli
cmpsb
int3
roll
out
inc
aad
movsb
loopne
outsb
adc
popf
sbb
pop
xor
mov
jge
fxch
add
rorl
xchg
mov
mov
jnp
xor
nop
push
sub
in
jmp
ficoms
aas
das
lods
inc
sahf
pop
outsb
sbb
mov
lret
push
imul
cld
rclb
imul
fstl
movsl
andb
or
nop
ror
loope
mov
aad
mov
dec
mov
das
stc
test
adcb
mov
and
fcmovu
fwait
test
js
lods
shll
hlt
lds
std
addr16
mov
lds
loope
sbb
and
mov
sbb
pop
mov
faddl
iret
push
js
push
icebp
pusha
cld
movsb
sahf
dec
repz
jg
xor
cs
jl
arpl
popa
cmpsl
sahf
lds
nop
and
stc
jns
cmp
or
push
movsl
leave
sub
lcall
aad
pop
and
adc
fiaddl
xchg
sti
inc
shll
sub
lods
jne
xlat
xor
mov
and
push
fidivrl
test
xor
xorl
loopne
repz
add
sbb
push
inc
loope
int3
hlt
jg
test
jns
lret
lcall
or
in
push
xchg
cltd
push
lcall
lcall
aaa
mov
sub
out
mov
repz
pop
or
mov
addr16
shr
mov
pop
leave
mov
sahf
fcmovnb
ficomps
jb
sbb
loop
sub
adc
and
outsb
mov
insl
add
sti
sbb
enter
jae
pop
or
cmp
loope
mov
daa
or
mov
mov
stos
adc
and
xchg
jae
out
aam
adc
imul
pop
xchg
sahf
clc
andl
mov
xchg
mov
inc
cmp
loopne
xchg
psubusb
cwtl
jo
dec
add
mov
and
je
jmp
push
mov
stos
push
loopne
imul
lods
int
cld
les
dec
fcmovnu
jne
or
add
fstp
ret
daa
xchg
les
inc
in
xchg
mov
shlb
dec
mov
fdivl
clc
dec
mov
cmc
push
jae
mov
dec
out
imul
sbb
shrl
mov
outsl
mov
xchg
je
cwtl
scas
push
pop
repz
add
leave
or
cmp
mov
adc
fisttps
xchg
test
add
push
lea
mov
shl
sub
or
mov
jne
mov
rorb
jnp
mulb
sbb
stos
nop
and
add
daa
sub
pop
test
or
in
stos
push
les
push
sbb
movsb
push
fisttpll
adc
push
insb
aad
mov
push
out
mov
push
into
nop
ja
mov
xorl
mov
jle
jmp
inc
xchg
jne
push
adc
and
xor
lock
jp
outsl
xchg
cmp
shrb
es
and
xor
lahf
sub
fwait
lds
out
loopne
adc
push
mov
mov
jnp
mov
sar
jne
nop
in
adc
imulb
or
loopne
adc
jle
dec
dec
call
dec
push
movsb
xor
mov
lret
std
arpl
loopne
lret
cltd
xchg
cmpsb
lds
inc
decb
scas
aaa
in
sub
xchg
jbe
cltd
xchg
sti
push
mov
nop
jo
xchg
int
clc
int3
cmc
out
push
jo
cli
call
out
xlat
insb
push
dec
lret
lods
mov
inc
or
add
add
jmp
lret
inc
ljmp
mov
pop
call
std
test
pop
xchg
sub
sbb
lds
pop
pop
movsb
push
pusha
test
jns
aad
cmp
aad
dec
nop
push
jae
out
add
stos
sbb
jmp
out
sbb
dec
test
add
mov
jg
daa
mov
fsqrt
cli
mov
decb
mov
sub
jbe
adc
and
lret
out
cmpsb
fsubr
mov
les
scas
movsl
icebp
subl
aaa
scas
hlt
mov
movsl
dec
aaa
into
sbb
sbb
inc
jle
test
jp
dec
std
mov
push
add
ret
adc
les
jg
mov
jecxz
mov
add
lds
push
aam
jle
in
or
and
cli
or
es
bound
aad
std
call
push
out
sbb
cmp
push
movl
lcall
mov
mov
add
lahf
imull
or
mov
lcall
mov
cmp
lods
add
inc
or
push
rorb
jg
push
add
add
and
pminsw
imul
jae
jp
mov
mov
mov
sub
aaa
xchg
sub
in
mov
insl
mov
int
popf
into
mov
ss
jns
pop
ds
xchg
data16
out
cmc
addb
push
dec
ret
pop
mov
sub
jmp
cli
xchg
jge
mov
lcall
xchg
add
mov
data16
adc
inc
pop
add
ret
add
stc
fcomps
lds
loopne
pop
cmc
mov
jl
push
cmp
xchg
aaa
pop
push
std
or
sarb
mov
xlat
mov
into
sbb
sub
inc
push
je
jns
insl
pop
stos
aas
jo
mov
ret
and
pop
sub
arpl
cwtl
pusha
and
scas
jmp
jge
ljmp
cmpsl
add
adc
cmpsl
lahf
push
loope
inc
jnp
addr16
inc
xor
leave
inc
fcoml
cs
xor
pop
aaa
mov
pusha
inc
int3
sub
jle
mov
xchg
movsb
dec
fidivrs
movsl
and
loope
xor
push
lret
xor
fdivl
push
cmp
nop
shll
out
inc
jae
clc
mov
jp
xor
cmp
or
fcoml
inc
mov
xor
and
mov
mov
dec
dec
cmp
rorl
lea
or
jo
mov
faddl
mov
push
fsubrl
sub
mov
cmp
gs
dec
mov
outsl
sahf
pop
fnstenv
aam
sar
or
int
fisttpll
lds
aad
fs
hlt
stos
adcb
test
gs
mov
in
sbb
imul
mov
and
pop
enter
mov
xchg
fstpl
lods
in
cwtl
andl
jge
test
pop
inc
xchg
push
int
out
push
xchg
push
dec
push
mov
out
xor
and
cwtl
pcmpeqd
xor
mov
cmp
cmp
repnz
out
popl
push
sbb
mov
lcall
pop
xchg
inc
xchg
dec
cmp
scas
int3
pop
pop
ds
or
cwtl
adc
daa
mov
dec
outsb
ja
ror
loop
jb
push
ret
lret
cwtl
add
add
shl
fdivl
sub
loopne
pop
fmull
dec
shll
xchg
and
mov
out
mov
push
jp,pt
add
adc
xor
jns
jle
cmc
dec
ja
inc
sbb
decb
pop
cmp
jno
dec
loope
sub
cwtl
clc
cmpsb
or
and
test
or
stc
or
push
loope
mov
sbb
cli
test
dec
sahf
inc
inc
dec
dec
push
ljmp
dec
in
mov
xchg
mov
jnp
fwait
pop
push
and
cmp
ficoms
push
push
out
push
inc
gs
imul
or
fcomi
push
clc
imul
inc
insl
insb
xchg
cltd
or
sbb
fstpl
aas
jb
pop
mov
addr16
js
insl
push
mov
mov
mov
add
sarb
std
mov
sar
insl
cli
fld
pop
inc
sub
je
xlat
or
fwait
push
jnp
pop
xchg
repnz
ret
mov
sarl
mov
fs
mov
lret
inc
aaa
cmpb
fistpl
imul
xor
jnp
or
xchg
popf
mov
je
mov
and
xlat
hlt
pop
push
ret
ret
dec
jge
stos
fists
in
loope
shlb
push
mov
cwtl
lret
adc
jae
xor
shrl
cli
mov
dec
sub
pop
stos
adc
outsl
aad
ss
into
xor
push
fyl2xp1
sbb
stos
mov
test
dec
cmpsb
aaa
mov
pop
mov
mov
outsl
mov
mov
xchg
stos
add
outsb
jae
mov
and
popf
cmp
test
mov
pop
scas
rorl
scas
and
jne
mov
adc
add
jg
das
out
xchg
xor
add
and
out
call
and
insl
lods
inc
cmp
sub
rorb
pusha
mov
push
addl
lcall
in
and
mov
xor
mov
dec
inc
ret
xor
jmp
mov
out
test
fisubrs
in
ror
test
loopne
pop
or
outsl
sub
outsl
xor
rolb
dec
pop
push
popa
int
ds
jecxz
mov
pop
scas
inc
dec
mov
cmp
cmp
lret
call
xor
pop
add
jbe
sbb
imul
in
imul
mov
and
out
roll
rorl
inc
arpl
pop
jbe
fs
add
sub
cmc
ret
or
sti
push
out
popf
pop
xchg
pop
mov
ficomps
push
adc
push
mov
mov
cwtl
jmp
pop
push
cmp
outsb
movb
add
cvtdq2ps
mov
xchg
or
repz
shlb
sbb
sbb
ljmp
mov
add
adc
lldt
mov
daa
push
loop
popa
dec
cmp
push
in
adc
stos
rorl
add
or
ficoms
push
es
pusha
repz
xor
lods
in
cmp
out
pop
test
dec
mov
jl
push
test
std
ret
mov
imul
cmp
fdivs
inc
xchg
push
or
push
popa
or
fnstenv
aas
or
xchg
push
cmp
lret
jmp
pop
loopne
jmp
jge
sbb
outsl
daa
ss
call
aas
xchg
int3
xchg
mov
in
lea
fildll
mov
sti
adc
pop
mov
data16
insb
js
xorb
loope
xor
adc
imul
ss
gs
jg
jl
inc
rclb
shr
popa
rclb
pop
lds
lods
pop
pop
subb
dec
andl
lcall
out
pop
pxor
lea
mov
adc
pop
adc
adc
rcrl
lret
cmp
pop
sub
out
sub
or
lret
xchg
cmc
cmc
sbb
inc
xlat
pushf
cmp
enter
jl
mov
xor
decb
xor
movsb
pusha
xchg
sbb
rclb
dec
mov
mov
movsb
push
mov
and
jp
cltd
pop
loop
dec
in
stos
lcall
sub
sub
mov
stc
push
imul
xchg
stc
jne
cmp
bound
adc
xchg
adc
inc
mov
sbb
dec
outsl
or
sub
sti
sub
pop
nop
mov
adc
cmp
inc
inc
mov
pop
int3
movsb
push
pop
sbb
enter
lret
mov
pusha
and
shll
mov
dec
pop
adc
popl
popa
push
ja
ret
push
or
jno
jae
xchg
and
fcoml
out
divb
cwtl
out
push
add
pusha
icebp
es
jb
loopne
fldenv
in
insl
jecxz
outsb
xor
adc
test
ja
inc
pop
xor
lcall
and
xor
add
das
fstps
sbb
mov
ds
jp
mov
rol
dec
nop
sub
pusha
test
jge
data16
jo
mov
int
xlat
cmp
popf
add
fimull
enter
insl
shlb
lahf
mov
out
call
mov
jmp
inc
jb
ret
xchg
outsl
jp
pop
pop
andl
std
adc
mov
addl
js
dec
in
mov
or
xor
pop
sbb
jae
fs
lcall
std
xor
dec
notb
cmp
cmpsl
scas
inc
add
sub
mov
rclb
mov
mov
or
mov
mov
cmpsb
addr16
adc
add
or
fdivrp
jmp
inc
cmc
add
movl
adc
and
loopne
cmp
mov
fmulp
lcall
test
jne
mov
pop
stos
lea
dec
pop
sub
and
data16
xor
dec
je
shrl
mov
data16
daa
mov
nop
and
dec
sub
sub
mov
cmpsb
inc
scas
fsubrl
in
push
leave
sarl
aad
dec
pop
mov
nop
sub
ret
pop
push
push
push
scas
ss
data16
pop
dec
pop
jmp
pop
push
xsha256
cmpsb
push
add
scas
xor
ljmp
and
in
dec
sbb
jmp
jmp
mov
icebp
xor
pop
enter
popa
and
inc
pushf
lahf
pop
insl
mov
es
les
jecxz
int3
leave
dec
jl
outsb
aad
bound
mov
push
pop
jae
xor
out
roll
lahf
mov
mov
mov
in
test
mov
loope
add
cmp
mov
or
push
sub
dec
call
shrl
dec
gs
ror
call
fwait
addr16
mov
cltd
ljmp
loope
jb
cmpsb
push
mov
mov
cwtl
lcall
mov
out
sbb
and
loopne
dec
stc
test
push
push
push
out
sbb
inc
or
push
adc
inc
sbb
lock
std
xlat
jl
push
mov
iret
movsl
jge
inc
fsts
sbb
enter
pop
enter
insl
rolb
push
sahf
aas
mov
lds
and
jp
sub
push
scas
dec
push
sbb
dec
flds
mov
adc
or
pop
dec
sbb
lea
addr16
mov
stos
mov
sbb
adc
add
shlb
add
cs
rorb
in
fisttps
in
sarl
dec
pop
dec
add
mov
xor
inc
push
das
cld
mov
rcr
mov
xchg
dec
cmp
cmp
fistl
movsb
sbb
push
pop
pop
cli
mov
shlb
bound
repz
sub
dec
mov
pop
mov
or
mov
and
cltd
out
cmp
add
movsb
subl
push
subl
jno
test
jp
xor
sub
push
sub
ret
mov
dec
shl
das
push
sbb
or
push
mov
cmp
rclb
mov
pushf
pop
aam
sbbw
test
pop
add
iret
pop
push
loop
cmp
dec
mov
cld
in
cld
out
push
jae
repnz
add
mov
test
repnz
inc
icebp
jg
sbb
in
cltd
dec
cmp
ret
dec
adc
xor
loope
cmp
xchg
imul
sub
cwtl
gs
sub
and
bound
jg
jbe
mov
or
xorb
dec
loopne
dec
mov
jge
cmp
outsl
shlb
sbb
movl
add
sub
aad
mov
cltd
or
jmp
pusha
and
inc
pop
into
push
or
daa
clc
test
dec
mov
mov
addl
dec
into
mov
ss
lea
lcall
inc
push
bound
sub
cltd
add
fnstsw
inc
adc
insb
lods
mov
popf
cmp
int3
movsb
insb
xchg
sti
fbstp
ret
shrl
dec
xchg
cwtl
nop
sub
dec
lret
mov
jae
jbe
pop
sub
lret
fnsave
int
pop
mov
int3
lret
loopne
or
inc
or
jne
adc
xchg
mov
cmpsl
fcoml
icebp
pop
jmp
xor
fs
gs
ds
sbb
jp
xor
mov
or
cmp
out
loopne
loopne
fisttpll
cs
pop
dec
jo
mov
shrb
fs
pop
leave
inc
enter
js
sar
or
pop
cmp
out
shr
andl
stos
dec
jb
mov
cwtl
xor
push
lds
daa
mov
xor
adc
fcompl
adc
into
pop
and
daa
add
int
gs
shll
add
add
into
movsl
xor
outsb
and
cli
fadd
add
push
incb
sub
mov
dec
inc
lods
add
inc
adc
test
sbb
pop
cmp
jae
inc
xlat
lods
push
jno
inc
inc
cmp
icebp
stos
sbb
inc
ja
and
xchg
mov
xchg
out
int
lds
in
jge
sbb
dec
mov
xchg
xchg
lcall
lcall
call
jbe
xlat
bound
and
jnp
sbb
dec
adc
mov
xor
dec
and
ret
lock
jno
out
pushw
sbb
pop
jo
insb
jnp
call
roll
cltd
mov
cmpsb
aas
jae
leavew
leave
dec
sbb
popf
lods
push
test
sub
dec
arpl
mov
ss
popf
xor
push
movsb
mov
std
add
out
inc
jecxz
xor
mov
xor
xchg
clc
inc
test
lret
lods
sub
lock
inc
movsl
jecxz
jecxz
dec
mov
and
icebp
insb
inc
out
xchg
mov
aam
and
mov
sarl
shr
push
fstl
daa
mov
mov
insl
fisttps
mov
xor
aad
mov
sub
sub
mov
lock
rorl
or
or
push
dec
je
inc
addr16
sbb
lahf
adc
xchg
iret
nop
hlt
cmpsl
call
aam
lea
adc
pop
lods
into
push
xchg
outsb
into
mov
and
and
aad
inc
adc
jecxz
in
pop
xor
fnstenv
movsb
and
xchg
or
mov
mov
sbb
lret
andb
cmpl
pop
xchg
mov
and
hlt
inc
push
sbb
das
mov
ret
lods
cmp
dec
mov
aas
test
jp
je
repz
push
pop
adc
je
stc
sarb
pop
sbb
mov
and
xor
test
dec
arpl
ficomps
cltd
mov
sub
dec
add
cmp
dec
loope
xchg
cmpb
out
dec
add
pop
sub
and
lcall
ljmp
adc
pusha
sbb
sbb
les
sub
mov
xor
inc
loope
sub
xchg
inc
push
xor
pop
ljmp
push
adc
pusha
adc
xchg
dec
mov
ljmp
pop
cmp
sbb
jge
scas
data16
jo
sbb
xchg
rol
xor
out
pop
lods
movsb
out
push
call
pop
dec
lret
into
sub
jbe
in
ds
call
add
scas
mov
scas
pop
xlat
mov
clc
test
repz
dec
fwait
sti
ds
faddl
cmp
std
icebp
dec
inc
cmp
shlb
ja
add
fwait
ds
push
dec
setge
add
push
ja
inc
dec
stos
outsb
add
imul
push
mov
push
and
and
push
inc
inc
call
dec
and
jae
arpl
enter
push
or
cltd
mov
call
dec
xchg
adc
dec
inc
cmp
aad
ret
imul
jle
aad
fstps
ljmp
clc
pop
and
ret
adc
xor
and
pop
ja
insb
adc
rcrl
mov
fistpl
or
xchg
mov
mov
dec
or
inc
jmp
cmpsl
pop
ret
int3
jae
pop
mov
pop
lds
sbb
movsl
mov
cmp
cld
sbb
negl
push
push
pop
dec
stos
sahf
inc
jno,pn
pusha
loope
bound
stos
cmp
sahf
and
ret
or
bound
and
sbb
pop
subb
cltd
cld
and
mov
inc
lds
pop
imul
fs
pusha
mov
add
sub
xor
popa
mov
ret
sub
aas
aaa
mov
shll
lods
jp
popa
ja
ja
fisttps
mov
xor
loopne
loop
cwtl
in
mov
testl
cs
outsl
scas
dec
xor
shr
mov
xor
dec
push
inc
jno
clc
jno
test
push
push
or
fcmove
push
jnp
pop
lret
lret
xchg
loop
int
into
call
gs
bnd
fcmovb
jecxz
dec
inc
jg
mov
ret
mov
out
xchg
in
in
aas
stos
insb
xor
addr16
mov
paddw
xchg
call
jg
inc
xchg
adc
ret
addr16
xor
fisubrs
cmpsb
or
jns
mov
jle
mov
jmp
mov
xchg
jae
add
mov
cltd
or
xchg
movsl
push
adc
mov
sub
lcall
xor
pop
mov
xchg
or
sub
decl
enter
popa
out
sbb
pop
xchg
cmp
out
data16
add
mov
shrb
sbb
mov
mov
popf
xchg
xor
or
jno
mov
fiadds
jo
lock
iret
es
idivb
call
clc
and
or
ficomps
out
test
mov
mov
shlb
int
call
sbb
push
cmp
das
ds
dec
push
ja
hlt
xor
push
fsubr
mov
outsl
pushf
or
push
and
cli
mov
es
leave
mov
push
shl
adc
jg
mov
dec
out
xor
mov
mov
mov
in
es
repz
lret
rolb
test
ja
push
push
out
sbb
imul
scas
int
or
in
je
rcl
mov
add
add
mov
std
inc
jl,pn
jbe
jno
out
std
add
jnp
mov
mov
or
add
call
sbb
in
nop
pop
iret
xlat
mov
in
pop
and
cmp
push
arpl
stos
popa
into
out
and
mov
xor
adc
gs
cmp
mov
mov
stos
js
jae
stc
fldcw
pushf
imul
mov
ss
cmp
jp
xor
push
in
in
cwtl
sbb
repz
push
cmc
xchg
loope
cltd
fisttpll
sbb
mov
in
push
sbb
bound
mov
sar
sbb
loopne
aad
imul
bound
push
mov
movsb
sarl
dec
mov
mov
movsl
sub
fwait
repnz
pop
leave
lret
adc
inc
push
bound
cmp
pusha
adc
inc
add
fcompl
or
in
imul
fs
ficomps
push
in
mov
movsb
pop
adc
imul
orb
out
xorl
xorb
xchg
push
jge
pop
pop
daa
pop
and
subb
loopne
addr16
jecxz
mov
or
cmpsb
fnsave
sbbb
push
mov
dec
rolb
cli
or
mov
or
repz
movl
push
inc
inc
call
fistpl
xor
mov
cmp
dec
enter
sbb
repnz
loopne
push
xchg
cmpl
pop
xchg
mov
jb
test
mov
push
xchg
ret
jns
add
ret
or
add
jle
test
or
dec
or
mov
sub
stos
xchg
in
jno
lret
sub
xorl
mov
and
or
cltd
sbb
xchg
popa
mov
xchg
lcall
ds
sti
pop
pop
icebp
repz
or
mov
es
jnp
hlt
andl
push
adc
jge
sub
hlt
jg
clc
sbb
loope
pop
aaa
fdivl
pop
sti
ret
pop
sarb
nop
adc
aam
int3
mov
loop
cmc
mov
mov
xor
pop
pop
mov
stos
add
push
les
cld
popa
test
out
dec
xchg
test
cmp
mov
in
test
gs
or
mov
sub
ret
push
push
dec
push
pop
popa
pop
sub
inc
stc
jnp
mov
pop
cld
popf
mov
push
in
jbe
jnp
fdivr
cld
hlt
xchg
sub
movsb
sbb
add
xchg
and
xchg
jae
xchg
imul
das
mov
inc
sbb
fidivl
add
mov
add
cmp
js
jb
pop
sbb
xor
jne
jno
addb
fnclex
mov
out
inc
mov
pop
lods
inc
iret
xor
dec
iret
pop
popa
mov
cmpsb
xchg
popf
inc
dec
cmpps
lods
popf
add
enter
fisubrl
xorb
dec
mov
mov
mov
ret
jo
or
test
aad
xor
or
fwait
cwtl
cmp
pop
leave
or
loop
cmc
cmp
jbe
jns
scas
lea
sbb
sbb
das
mov
jo
lock
adcl
notb
jnp
out
pusha
xor
xchg
out
outsl
mov
or
ja
mov
sub
mov
daa
push
scas
xchg
xchg
ret
daa
xor
mov
gs
sarl
sti
inc
mov
sbb
mov
cmc
or
mov
ret
cld
push
jmp
popf
shl
sub
adc
sub
in
in
jns
imul
scas
movsl
inc
dec
pop
dec
jl
test
cltd
xchg
jns
jbe
pop
add
push
sub
xlat
xor
cmp
inc
cli
sti
outsl
xchg
push
xor
dec
jge
dec
jb
push
push
pop
add
xchg
mov
fmull
test
sti
push
imul
add
pusha
mov
adc
mov
lahf
les
lcall
mov
outsb
addb
leave
in
movsl
or
dec
ljmp
push
cmc
xchg
mov
push
cmp
leave
jae
aam
adc
dec
daa
movsb
inc
xchg
jae
in
inc
mov
popf
arpl
fsubrs
xchg
fxam
rclb
fs
repz
aaa
jnp
bnd
and
jl
push
inc
push
ljmp
mov
hlt
iret
scas
jg
push
xchg
jecxz
test
cmpsb
push
out
dec
inc
insl
test
sub
aad
xchg
popf
or
shll
sub
lods
imul
fstpl
out
push
std
jbe
aas
aaa
jae
pushf
adc
in
and
insl
ror
add
pusha
mov
sbb
xchg
nop
sbb
out
ds
insb
aam
cmpsb
or
stos
mov
jnp
bound
mov
dec
add
pop
mov
lods
setg
fildl
or
cmp
cwtl
adc
mov
ss
dec
cld
sub
xor
lds
inc
in
imul
sub
shlb
sub
sub
push
adc
mov
jne
cs
fldt
mov
cmpsb
dec
and
cmp
cmpb
and
mov
in
loop
pop
xor
dec
jb
mov
movsl
sub
loope
or
shl
push
inc
or
lcall
push
cmp
pop
cli
mov
imul
daa
pushf
insb
repz
dec
mov
inc
sbb
xchg
scas
pop
outsl
adc
ret
push
sbbl
enter
dec
xor
pushf
scas
add
jno
and
rcll
outsb
sbb
int3
add
imul
and
daa
pop
std
jbe
xor
adc
cwtl
xchg
gs
out
pushl
mov
lods
sub
leave
inc
aad
or
cltd
jb
shrl
mov
mov
xchg
popf
or
lret
jns
testb
sbb
gs
cmpsl
fcom
mov
push
pop
mov
cli
cld
xchg
cli
loop
sbb
jne
push
xor
por
lret
idivb
data16
xor
ljmp
xor
jno
das
sub
sbb
out
cmpsb
and
cmp
dec
dec
push
mov
or
mov
lahf
loopne
pusha
mov
hlt
adcb
ret
imull
adc
or
movsl
inc
outsb
repnz
rolb
and
xor
inc
aaa
jbe
xchg
sub
push
mov
add
mov
mov
inc
cmp
add
cwtl
loopne
push
adc
into
data16
cld
insb
idivl
inc
mov
jbe
cmp
dec
or
pop
mov
rolb
push
pop
lods
sub
push
mov
fadd
xlat
stos
mov
fidivl
shll
je
cmpsb
xor
jmp
pop
jmp
jns
inc
cmp
bound
add
mov
popa
inc
pop
push
dec
inc
in
xchg
push
cmpsl
jns
sub
jno
ds
and
add
pop
pop
test
jo
inc
or
cmpsl
std
insl
loope
sahf
inc
lock
sub
loop
out
icebp
test
je
clc
cmp
jnp
push
push
fldenv
add
mov
sub
sti
fsubrs
push
mov
xchg
add
or
push
je
out
mov
fdivrl
pop
xchg
jg
fadds
stos
bound
xchg
into
and
and
adcb
movsl
mov
jb
lds
cmp
cmpb
cmp
and
scas
mov
pop
test
adc
xchg
je
lds
adc
leave
aam
sub
inc
test
aaa
mov
int3
test
inc
mov
stc
adc
fnsave
stc
pop
xchg
pop
push
jecxz
inc
fiadds
mov
push
imul
es
mov
xor
inc
in
cltd
push
pop
mov
xor
inc
sarb
daa
mov
movsb
fcom
repz
cmp
push
sarb
aad
xor
into
mov
xor
mov
jae
mov
or
add
das
popf
outsl
je
add
pop
mov
mov
aaa
frstor
sub
test
xor
cmp
add
pop
push
mov
shlb
sbb
lcall
aad
push
fistps
sub
adc
andl
adc
or
cmp
out
ss
wrmsr
in
clc
lahf
xchg
dec
mov
pop
adc
mov
push
movsl
inc
mov
in
or
push
or
and
xchg
loop
cmpsb
fidivs
ds
mov
adc
fsubs
mov
fs
adc
mov
or
cltd
out
pop
std
pop
in
push
es
out
loope
setns
aaa
mov
out
loop
mov
daa
ss
pop
push
or
adc
imul
int
push
push
jo
cmp
leave
in
cwtl
or
add
stos
jmp
out
lcall
pop
dec
push
xorl
sub
and
data16
roll
in
xchg
scas
xor
into
frstor
or
mov
sbb
aaa
xor
jne
ret
leave
inc
nop
icebp
xchg
nop
nop
jae
jne
testb
stc
mov
lock
add
sbb
dec
insb
jb
mov
imul
mov
jge
pop
lods
sbb
shll
xor
cwtl
ret
es
and
nop
outsb
mov
inc
push
xchg
imulb
xchg
pusha
inc
test
cli
push
dec
push
leave
cs
or
pop
and
push
cmc
cld
pop
sbb
cltd
mov
jmp
cwtl
test
xor
xlat
and
mov
scas
mov
daa
sub
mov
jmp
mov
hlt
ds
xorl
mov
cmp
insl
xor
mull
jb
fldt
mov
xchg
inc
jb
sub
leave
in
fmuls
push
push
jecxz
imul
dec
scas
jmp
dec
xchg
int3
es
adc
or
mov
call
inc
movsb
xchg
inc
push
iret
inc
jo
inc
add
pop
rol
mov
sub
sbb
orb
ljmp
xchg
and
push
adcl
in
push
das
inc
lret
mov
mov
xlat
sbb
push
xor
or
cltd
loope
iret
xor
rolb
out
fcmovu
push
je
fcoml
push
xlat
cld
mov
xchg
xchg
adc
cmp
rorb
cltd
mov
jp
add
push
jg
bound
addr16
mov
into
pop
add
test
cwtl
pushf
xchg
and
test
out
dec
sub
push
popa
fdiv
mov
adc
mov
shll
mov
jecxz
lds
jo
jge
in
mov
cmp
or
dec
test
lods
in
jecxz
push
push
pushf
push
lahf
and
lret
dec
idivb
std
push
lret
mov
enter
add
data16
call
sarl
mov
add
pushf
cmpsl
pop
jl
jp
jno
test
sbb
and
mov
mov
mov
add
addr16
sub
mov
add
mov
push
xchg
lods
push
aam
outsl
fisubrs
ret
mov
jle
sub
fsub
and
shll
jne
sub
mov
mov
divb
stos
loopne
sub
sub
sbb
dec
xor
and
mov
aaa
cltd
daa
pop
sti
int3
div
and
sub
insb
xor
cs
mov
add
xchg
xchg
cs
lods
cs
mov
fcomp
out
test
aaa
xchg
mov
mov
inc
jle
mov
mov
daa
clc
adc
add
and
in
or
add
fisubrs
mov
push
int3
daa
or
insb
push
leave
xchg
cmpsb
mov
icebp
or
sub
outsb
push
lret
adc
sbb
xor
cmp
add
and
adc
mov
inc
and
js
push
imul
xor
pusha
jns
xacquire
stc
scas
jnp
jae
xlat
fisubs
cld
ss
inc
cwtl
sbb
loopne
cmp
ret
cmp
inc
rorl
jo
repz
dec
lahf
xlat
mul
incb
cli
add
mov
ret
and
ja
into
xor
into
ret
mov
mov
iret
les
mov
dec
fstps
in
outsb
in
into
mov
repnz
call
sub
add
cmp
xor
test
loop
mov
add
pushf
push
push
mov
push
inc
mov
inc
adc
cmp
dec
sub
xchg
sub
mov
in
aaa
int
add
pop
loopne
push
test
xor
cwtl
dec
adc
lcall
ja
mov
cmpsl
cmp
mov
inc
sbb
add
or
daa
bound
daa
fnstsw
int3
repz
xchg
nop
das
lea
cli
into
push
dec
test
les
mov
xchg
inc
testb
add
jns
cli
aas
dec
sbb
rcll
shl
jg
aam
mov
jge
movsl
dec
adc
movb
mov
mov
scas
out
jge
xor
jge
or
or
mov
xchg
jb
in
cwtl
inc
inc
pushf
mov
mov
mov
pop
pushf
pop
mov
sbb
arpl
enter
arpl
sbb
insb
xchg
hlt
dec
pop
xor
sahf
dec
push
xor
mov
xbegin
and
test
hlt
adc
pop
cli
test
mov
mov
gs
scas
ds
leave
lret
pop
sub
jmp
cmc
ret
repz
imul
push
in
cmp
in
add
repz
jecxz
adc
sbb
and
dec
imul
inc
test
aas
rcrl
dec
cmc
dec
dec
jbe
leave
pop
jbe
lret
in
insl
inc
and
push
ljmp
andl
pop
sbb
jg
mov
cld
mov
out
pop
push
xchg
lcall
into
xchg
cwtl
and
jecxz
jp
das
test
push
call
in
repnz
mov
lret
push
add
push
jne
mov
rcl
mov
cwtl
pop
jmp
pop
pop
andb
rorb
outsb
fsts
add
sbbb
lds
nop
pop
adc
stc
imul
xor
int3
hlt
and
cmp
std
sti
lds
dec
dec
jecxz
sbb
out
sub
mov
dec
mov
es
jmp
add
sub
ljmp
push
movsb
jp
stos
movsl
push
mov
shll
adc
mov
test
mov
andb
shll
aam
lds
sbb
xchg
add
fsubl
xor
jne
jmp
xchg
lock
in
dec
test
mov
and
pop
mov
fwait
rcrl
cmp
lea
cmovb
pop
popa
jne
jno
and
out
dec
dec
lds
mov
dec
cwtl
and
insb
or
push
fwait
nop
into
mov
push
aad
lea
and
inc
movsb
xor
fisubrs
pushf
mov
fcomps
in
pop
sbb
add
push
sbb
pop
repz
clc
add
or
stc
or
lds
aas
sarl
xchg
inc
imul
mov
cmpsl
mov
je
cmpsb
mov
iret
xor
and
push
pop
shlb
nop
mov
xlat
enter
sub
inc
xchg
sub
fdivrl
xor
mov
and
jecxz
out
push
add
mov
insl
jnp
dec
gs
push
pop
pminub
cmp
shl
pop
push
mov
jp
push
xor
push
xor
fbstp
inc
push
fwait
mov
lds
iret
repnz
adc
add
cmp
daa
pop
lods
pop
add
cmpl
xor
sahf
xor
adc
xchg
push
outsl
and
shl
nop
aam
dec
loopne
mov
fadds
xchg
enter
adc
xchg
and
mov
cmp
jae
fwait
mov
icebp
movsb
add
test
addr16
push
stc
cli
cld
imul
jb
sti
sbb
lcall
clc
in
and
and
rol
and
jb
xlat
cmp
aad
in
push
adc
outsl
and
or
lock
popa
pop
add
and
mov
aam
pop
xchg
push
addl
inc
lret
outsb
enter
jo
lods
pop
divb
cli
inc
out
push
test
sub
xor
neg
in
or
pusha
aad
sahf
mov
mov
arpl
pop
aas
or
sbb
mov
pushf
repnz
int
in
pop
or
jo
cmp
iret
mov
jl
rolb
pop
and
cmp
dec
sbb
test
pop
pop
fidivs
jne
mov
lea
out
jbe
out
xor
lahf
push
ljmp
loopne
test
xchg
aaa
sbb
xchg
enter
sbb
jp
movsb
cli
icebp
hlt
xor
xor
mov
add
pop
iret
sbb
dec
test
add
test
cmp
jbe
push
xchg
pop
push
into
in
in
xlat
dec
movsb
inc
cli
jl
adc
icebp
sub
mov
loope
mov
cs
mov
cwtl
aas
lods
dec
xor
addl
sbb
xor
jmp
imul
dec
icebp
test
sbb
mov
sub
mov
pushf
jp
and
inc
fstpl
call
xor
mov
scas
dec
in
aaa
and
mov
pop
inc
sub
xchg
pop
repz
out
loope
adc
popf
xor
loop
clc
test
xchg
jmp
insb
rcrb
dec
movsl
lds
fmulp
sub
add
pop
dec
xchg
fwait
xchg
dec
inc
test
cmp
sbb
mov
sahf
in
sarb
fcmovnbe
aad
push
mov
mov
dec
arpl
fistpl
sti
test
in
adc
xchg
mov
fbld
out
lret
ljmp
mov
out
mov
xchg
lds
and
jae
add
clc
jp
or
xchg
push
xchg
sub
aaa
sub
jns
out
ret
jbe
btc
fiaddl
pop
stc
clc
push
cmp
jbe
xchg
std
in
push
test
cs
mov
xor
mov
inc
cli
repnz
lea
sub
test
mov
cwtl
scas
adc
mov
shlw
mov
mov
add
or
xchg
lret
xchg
push
ficoms
jne
scas
lret
pop
mov
rorb
cmp
pop
add
push
in
or
or
sarl
inc
movsb
aam
aam
mov
mov
mov
pop
or
sarb
cmpsl
add
ficomps
repz
ficoms
dec
mov
out
jecxz
xchg
mov
insb
rclb
lret
xor
pop
cs
pushf
in
push
adc
xor
jl
and
mov
mov
push
andl
out
sub
sti
dec
out
iret
push
push
xor
in
aas
mov
sahf
push
mov
imul
sbb
dec
movl
and
mov
sub
xchg
fwait
mov
int
scas
sbb
pushf
imulb
rorb
in
pop
cmp
pop
mov
scas
jmp
int3
xor
push
jecxz
jbe
shrl
pop
cs
mov
out
and
adc
cmp
inc
arpl
pop
add
ljmp
xchg
fildll
mov
sbbl
sub
sub
mov
adc
mov
fcomip
out
xor
aam
xor
and
lea
ljmp
lods
xchg
jnp
adc
leave
and
add
icebp
dec
or
jp
daa
lcall
mul
pop
js
pop
cmp
insb
pop
mov
cmpxchg8b
push
out
xchg
push
pop
fidivs
repnz
dec
aaa
stos
insb
addr16
push
imul
je
stos
imul
mov
call
or
call
scas
dec
sti
push
das
mov
mov
jl
mov
or
into
lret
mov
mov
add
add
xchg
jo
cmp
mov
jl
loop
ss
jp
addr16
xchg
mov
aam
pop
push
dec
inc
pushf
jno
push
outsb
jge
lcall
mov
cmp
xor
scas
bound
lcall
mov
dec
lock
mov
mov
aas
dec
dec
movsb
adc
flds
xchg
mov
testb
jge
insb
push
pop
mov
inc
test
adc
dec
ja
or
adc
fcoms
out
pop
cltd
shrd
cmp
jns
dec
and
imul
add
paddusw
test
pushl
mov
jg
push
xor
push
jne
or
jmp
scas
mov
pop
xchg
mov
sub
sbb
jl
xor
dec
sbb
mov
popf
push
and
stos
aaa
push
out
dec
mov
dec
cmc
lods
outsb
xchg
sbb
test
clc
jmp
adcl
bound
ss
add
dec
inc
pop
xor
pop
mov
cmp
in
stc
adc
fidivs
push
sar
push
xor
cmp
in
sbb
sbb
lahf
fsts
sahf
push
pop
lock
adc
lret
daa
inc
pop
and
xchg
mov
jecxz
in
or
mov
out
add
pusha
push
out
pop
test
pop
xor
mov
lods
add
movb
stos
xchg
xchg
imul
movsb
shl
push
icebp
xchg
lret
in
jno
enter
movb
scas
jae
add
or
adc
lock
loop
jecxz
iret
jp
dec
repnz
push
out
jmp
das
jno
insb
cmpsb
jecxz
lret
outsl
mov
and
dec
scas
mov
in
jae,pt
cs
aaa
xchg
mov
push
out
add
int3
sbb
push
sub
out
sub
push
std
imul
xchg
in
jg
push
neg
aas
sub
imull
ljmp
mov
repnz
int3
jo
sub
outsb
or
push
cltd
out
mov
std
xor
mov
pop
lds
test
jecxz
sahf
btr
pop
lahf
add
fwait
clc
lret
ljmp
jae
sub
pop
dec
adc
scas
cmpsl
inc
and
inc
xor
insl
cwtl
mov
sub
xchg
and
mov
loopne
mov
jbe
jno
xchg
xor
cwtl
outsl
lret
or
cmp
fsubrs
test
xchg
xchg
cwtl
sbb
movsl
fcmovnbe
xchg
sti
jmp
loopne
repnz
cmp
dec
gs
and
ret
iret
scas
pop
jbe
fbstp
push
sub
push
in
or
mov
sbb
cwtl
pop
sub
ret
test
rolb
pop
mov
adc
hlt
fbld
imul
add
aas
sub
fisubrl
jl
outsb
push
add
adc
dec
mov
xchg
jl
add
popf
hlt
fnsave
mov
sub
popl
pop
jae
out
pop
adc
in
js,pt
test
imul
pushf
sbb
popa
int3
enter
mov
stc
cld
movsl
and
enter
ror
pop
lds
rol
xchg
pop
jg
xchg
divb
mov
inc
jmp
stc
xchg
cs
scas
add
push
pop
pop
addr16
xorb
pop
adc
int3
ja
cli
setbe
stc
inc
xchg
jecxz
cmp
in
fsubrp
imul
lds
or
stos
xor
shrb
sti
add
and
push
jo
out
add
cmc
and
adc
inc
dec
pop
mov
dec
in
mov
adc
divl
inc
cmp
sub
inc
test
sub
das
mov
mov
sub
data16
shrb
out
ds
add
xlat
push
mov
and
es
mov
or
mov
add
sub
or
fiaddl
fmull
shll
incb
pop
loope
aam
xlat
cltd
js
pushf
es
mov
lock
sarb
andb
int3
pop
inc
xchg
xor
mov
pop
out
loope
and
insb
out
pop
imul
loopne
mov
out
add
and
push
jo
push
jno
mov
fs
movsb
or
cmpsl
idivl
orb
lods
int3
arpl
push
popl
jbe
outsb
xchg
dec
dec
scas
stc
push
dec
and
orb
fsubr
ss
or
and
imul
cmp
sub
rcr
int
sub
pop
lods
lods
js
daa
xor
pop
fs
roll
jb
cmp
pop
movsl
out
aas
test
ret
pop
mov
adc
dec
aas
loop
aas
adc
or
cmp
lock
xor
or
stos
jmp
out
adc
mov
xchg
sub
lock
mov
push
xchg
mov
outsl
cwtl
out
add
cmpsb
dec
pop
out
out
sub
inc
lea
fstpl
push
cmp
ret
mov
jmp
rorb
dec
jo
lods
xor
sub
pop
xchg
adc
push
add
mov
loop
in
icebp
mov
movsb
xchg
mov
xchg
out
in
cmp
cs
sarb
or
xchg
aad
lds
sub
subb
or
pop
add
adc
cmpsl
aad
int
xor
lret
mov
sbb
fistpl
mov
add
out
or
inc
nop
icebp
lock
aam
cmp
jl
loope
mov
mov
cmovge
push
mov
cli
nop
lcall
imul
jmp
dec
cmp
mov
ja
push
add
clc
jne
adc
divl
stos
dec
xchg
ret
jg
arpl
lods
shrl
xchg
or
cmpl
lret
int
inc
dec
les
repnz
ret
push
push
adc
sub
adc
pop
rcll
icebp
and
or
lea
inc
pop
and
sub
lahf
and
sti
jno
or
add
mov
mov
and
dec
rcl
lock
sbb
cmp
hlt
enter
rcrb
out
mov
xor
jnp
in
mov
fstps
and
xor
push
push
push
repz
mov
dec
nop
mov
daa
outsb
jb
xor
ds
push
mov
loope
in
add
int
add
out
sahf
mov
fsubs
in
jge
lds
scas
imul
or
sti
dec
jne
lret
data16
imul
jge
mov
fistl
xchg
aam
std
sub
jno
pop
leave
add
add
and
mov
jnp
cmpsb
popf
or
daa
int3
fdivrl
fsubr
pop
xchg
dec
lea
sub
enter
add
mov
cmpsl
in
mov
addr16
jecxz
and
out
test
push
insl
jmp
jo
push
cmp
fcmove
and
aaa
pop
sub
pushl
and
xor
adc
push
int3
fbstp
imul
adc
sti
jg
pop
mov
insl
add
cmp
leave
jbe
jbe
clc
pop
cli
jp
and
pop
sahf
push
cmp
fidivrs
nop
les
jb
xchg
fmuls
call
int3
add
pop
ljmp
mov
out
xor
mov
push
mov
shr
test
in
fiadds
mov
hlt
lcall
xor
sub
xlat
outsl
mov
jge
add
xchg
inc
test
jmp
adc
sub
testl
clc
dec
jnp
inc
addb
int3
call
adc
or
pop
adc
les
sbb
jo
andb
mov
jne
push
shrb
test
test
push
stos
lock
cmp
cmc
rclb
pop
cmp
mov
sub
enter
adc
push
adcb
testl
inc
pop
outsb
adc
sbb
push
std
mov
mov
sarl
sub
les
xchg
xchg
mov
loop
addr16
jns
popa
or
push
popa
stos
push
nop
pop
mov
imul
jmp
repz
lock
imul
inc
xor
sti
in
in
das
mov
xchg
xor
dec
pop
mov
divb
fwait
jae
cmp
call
sbb
lods
inc
and
fs
lock
jge
mov
jno
or
push
push
ja
xchg
mov
mov
dec
das
mov
out
and
sbb
decb
adc
neg
sbb
cmpb
enter
jg
mov
test
or
pop
pop
jle
loopne
repnz
jno
push
and
and
mov
ret
mov
sbb
jb
shll
sbb
inc
lods
les
and
xchg
jno
push
sub
cmp
cmpsl
cmp
jne
jns
idiv
jb
cmpsb
imul
or
push
dec
rol
ret
xor
test
pop
int3
mov
inc
sub
sbb
mov
scas
shr
pop
repz
imul
lock
pop
and
mov
push
arpl
mov
pop
sub
ror
mov
mov
js
add
push
pusha
pop
mov
pushf
cmpsl
and
dec
lahf
mov
add
test
cmpsl
sub
pop
mov
hlt
mov
sti
shlb
rcr
ret
sti
sub
cmc
or
mov
movsl
adc
mov
sbbl
stos
push
fs
xor
mov
sbb
sbb
and
mov
sbb
jmp
mov
or
xor
mov
xchg
mov
mov
jns
pop
scas
mov
xor
test
jno
jecxz
jns
xchg
mov
je
sbb
data16
clc
push
js
sub
and
ret
test
ds
mov
repz
dec
test
xlat
mov
aas
lods
cmp
lret
add
outsb
sti
clc
and
movsb
lock
cmp
cmp
dec
je
sbb
stos
xchg
sti
pop
data16
sti
cld
inc
and
add
dec
mov
les
loopne
dec
cmpsl
imul
movsb
mov
add
xor
imul
test
xchg
pop
imul
in
ljmp
fwait
pop
xor
jge
xor
mov
sti
imul
push
push
ja
lds
in
retw
imul
jbe
int3
lods
sbb
popa
fwait
lods
jns
cmc
dec
movsb
jae
sub
addr16
sbb
ret
dec
push
mov
cli
xor
test
xlat
idivl
sub
xchg
and
and
neg
shlb
es
subb
dec
dec
mov
xor
jbe
fadd
jmp
in
adc
rorb
xchg
movsb
cmp
inc
mov
inc
inc
add
loopne
inc
mov
cwtl
loop
push
sbb
mov
pop
pop
inc
push
sub
iret
ja
or
cmp
das
xchg
add
inc
jmp
push
cmp
cmp
jns
call
xor
jns
jl
xchg
mov
int
dec
popf
out
lock
imul
pop
sbb
sbb
iret
fprem
lcall
rcrl
push
andl
mov
push
arpl
stos
ja
inc
or
jecxz
lcall
and
scas
insb
movzwl
dec
movsb
mov
dec
mov
jl
fiaddl
xchg
xchg
enter
divb
adc
gs
cli
pop
adc
dec
subl
clc
or
mov
ror
pop
xchg
sub
mov
sbb
cwtl
mov
or
mov
xor
ljmp
dec
xchg
arpl
test
sti
inc
add
xorb
insl
adc
fldl2t
loopne
push
pop
in
rcll
cmp
outsb
mov
aad
or
push
mov
mov
or
pop
sub
cwtl
test
cmp
jp
and
mov
inc
pop
push
lock
mov
jl
mov
cli
insl
aam
ja
cmpsb
arpl
js
sbb
dec
jl
cs
repnz
inc
loope
incl
nop
dec
subl
jno
hlt
push
lret
into
cmp
outsb
sub
sbb
push
into
faddl
stc
cltd
jmp
add
jg
sbb
je
fisttpll
lret
int
cld
aam
stos
mov
push
inc
sub
jecxz
roll
pop
ja
clc
or
inc
jb
push
sub
cld
or
xor
scas
mov
test
xlat
xchg
adc
or
out
xor
cmpl
fnstcw
test
stos
and
nop
jno
dec
inc
dec
inc
aam
dec
jle
movsb
mov
xchg
insl
sahf
cmpsb
mov
dec
adc
es
insl
jno
mov
ds
jl
sbb
sbb
mov
mov
aaa
or
outsl
jo
das
adc
fdivs
and
mov
mov
out
push
mov
cmpsb
mov
ficomps
sbb
mov
xchg
add
pop
cmp
shrb
cmp
xchg
mov
xchg
inc
cmp
sub
add
and
lods
adc
mov
je
adc
test
les
mov
sar
xchg
or
inc
dec
ja
pop
lcall
cmp
outsb
mov
mov
addl
mov
dec
xchg
push
mov
mov
cld
aam
push
sub
mov
mov
mov
fwait
sbbb
inc
sub
std
ja
sub
mov
xor
pop
cmp
sub
mov
dec
push
fs
inc
pop
rorl
shr
sbb
int3
mov
mov
frstor
mov
cs
dec
out
push
clc
call
lds
cmpsl
jle
std
aaa
scas
shll
sub
fstl
cltd
or
mov
out
xchg
daa
mov
adc
gs
int3
fistps
clc
cltd
imul
ljmp
dec
jb
ffreep
popf
int3
andl
dec
cmp
dec
and
xor
mov
inc
lds
add
mov
dec
repnz
mov
push
and
push
add
cmp
cmc
sbb
stc
xchg
xchg
jo
dec
rol
dec
xor
dec
and
mov
std
rclb
dec
movsb
and
pop
or
adc
push
fisttps
jmp
jmp
fdivrs
or
out
xor
add
inc
jbe
inc
mov
add
mov
cmpsb
sub
out
rcl
rcrb
clc
jmp
inc
inc
mov
enter
jno
imul
inc
mov
hlt
mov
mov
cs
and
in
in
sub
add
cmpsb
and
in
push
lds
sub
out
dec
inc
xchg
test
scas
fstpl
xchg
xor
lcall
and
insb
jmp
dec
pusha
dec
sbb
or
xchg
insb
shrl
mov
xor
jne
call
adc
out
jae
aas
mov
daa
dec
mov
sub
js
mov
nop
mov
mov
hlt
or
das
xchg
sti
nop
lock
cwtl
mov
cmp
mov
in
dec
adc
add
lcall
dec
or
or
fld
pop
arpl
push
mov
leave
cmp
push
xor
jae
ss
push
out
out
jecxz
in
pop
movsl
and
pop
mov
inc
mov
mov
jbe
fstpl
lods
adc
mov
pop
and
and
sarb
imul
xchg
andb
jo
or
mov
and
lret
stos
xchg
pop
xor
xorb
aad
inc
aad
inc
mov
pextrw
mov
lret
shlb
lret
cmc
popf
sar
lock
xor
jecxz
jge
push
mov
jno
shrb
sti
sub
jne
out
pop
in
int
and
stc
bound
rolb
push
mov
cmpl
cs
mov
and
dec
push
je
cwtl
lret
fiaddl
jno
jmp
fidivs
jb
mov
pop
pop
pop
mov
lcall
inc
in
jg
ja
sbb
xchg
insb
xor
rorl
mov
mov
inc
xor
dec
cmpsl
gs
decl
iret
sahf
push
xor
mov
movsl
shll
add
push
dec
and
xor
subb
loopne
sbb
add
out
call
pop
adc
adc
inc
cwtl
lds
and
mov
adc
cmpsl
pop
adc
pop
inc
mov
in
ret
xchg
ret
lret
push
out
inc
lods
outsb
mov
cmp
jnp
add
sbb
and
jle
xchg
mov
dec
aaa
pop
mov
push
sub
ljmp
popf
lods
dec
add
scas
mov
push
das
mov
idivl
pop
insb
mov
and
jne
ret
xor
mov
xor
adc
mov
out
and
cmp
mov
sub
or
jns
mov
cmp
ret
mov
xchg
or
call
outsl
lods
push
or
pop
mov
iret
imul
loopne
lock
nop
mov
mov
jl
iret
idivl
call
sub
push
sar
mov
push
mov
scas
and
cmp
pop
fwait
sbb
and
fwait
inc
call
scas
sub
into
out
pop
sbbl
repz
mov
mov
sub
and
adc
sbbl
adc
jg
adc
push
popf
sahf
mov
fwait
xor
mov
xchg
add
lret
jne
or
pop
cmp
in
mov
andb
cltd
flds
icebp
rorb
dec
test
cld
add
push
dec
xchg
sbb
popa
xchg
test
mov
xor
outsl
jb
add
cwtl
test
sbb
and
sub
lea
sub
je
adc
pusha
add
int3
sbb
ret
pxor
rol
sub
test
jg
mov
sbb
cli
pop
push
hlt
movsl
in
fs
dec
js
pop
nop
mov
mov
jbe
push
cld
fldl
loopne
mov
jb
mov
add
cmc
scas
jns
nop
dec
data16
enter
jae
jnp
cld
ljmp
mov
mov
and
add
popl
pop
jo
add
ret
push
mov
aas
xor
xor
in
add
jno
fisubl
add
iret
xlat
aad
lock
sub
in
xchg
and
sbb
ret
pop
inc
pop
stos
lret
out
rorl
xchg
test
xchg
mov
arpl
mov
imul
inc
add
insb
xchg
pop
scas
pop
pop
loopne
inc
nop
xchg
xchg
mov
pop
cltd
or
outsl
movsl
lds
int
and
jmp
inc
fs
adcl
cmp
dec
sahf
int3
jae
inc
clc
outsl
mov
lret
mov
repz
mov
jp
add
jecxz
push
out
movb
cltd
hlt
dec
loope
inc
ljmp
jl
xchg
push
inc
mov
jg
xchg
outsb
jmp
sub
jl
xor
lds
adc
and
xor
cld
xlat
xor
mov
push
sub
cmp
inc
iret
jno
pop
xchg
das
cmp
xchg
or
jbe
cwtl
sbb
aas
ljmp
pop
inc
sub
mov
dec
cmp
in
sahf
mov
dec
lcall
out
push
in
rorl
je
orl
outsb
enter
lcall
inc
mov
sbb
xchg
shlb
cmp
shll
outsl
fsubl
mov
adc
js
mov
fiadds
insl
dec
mov
mov
stc
enter
lahf
xchg
arpl
xchg
test
call
sbb
cmp
ss
pop
adcb
sahf
pop
sbb
xor
loope
xchg
js
lods
in
mov
outsb
or
xor
faddl
inc
cmp
imul
or
mov
dec
ret
xchg
push
aas
mov
pop
or
rcrb
push
push
push
test
cmp
jg
fldcw
test
vxorps
stc
cld
test
mov
xor
aad
fbstp
inc
sbb
cmc
pop
xchg
xchg
lea
sbb
jb
cmp
xor
pop
xor
mov
ss
nop
cli
adc
lcall
je
loopne
daa
cmp
push
xor
cmp
inc
fmull
pop
or
leave
ds
mov
jl
xlat
mov
es
in
or
test
dec
sbb
and
jnp
test
and
test
movsl
mov
push
push
push
mov
inc
pop
decb
mov
cmp
cmp
negb
sbb
sbb
xchg
sbb
nop
ror
jge
dec
addr16
jno
xor
sahf
pop
mov
es
test
xor
stos
or
and
icebp
or
push
inc
inc
xchg
pop
fwait
imul
fmuls
loop
rdpmc
sub
mov
mov
and
pop
fiadds
mov
stos
xor
mov
dec
aam
in
sbb
lds
pop
in
mov
mov
outsl
sub
std
cmp
in
mov
aad
arpl
les
pusha
lcall
add
js
jmp
cmpsb
push
mov
loop
test
cs
incl
lods
shll
fisubrs
cmp
das
xor
outsb
jl
adc
movsb
pop
mov
or
xchg
adc
push
xchg
xlat
cmpsl
cltd
mov
in
pop
in
sbb
push
cld
push
js
push
push
ja
cmp
xor
je
lret
pop
add
cmp
pop
test
cmc
enter
xchg
xchg
pop
mov
aas
lods
sbb
shll
aaa
out
pop
out
aam
cltd
adc
dec
cli
imul
mov
xlat
lcall
ja
loope
outsb
mov
and
inc
and
jnp
imul
push
push
shll
cmp
cmc
sti
cli
jmp
outsl
ret
pop
jne
sub
jo
arpl
and
pop
xchg
adc
and
mov
add
and
fbstp
push
add
lret
data16
lds
sbb
or
adc
insl
fidivs
mov
lods
mov
orl
nop
aaa
jb
adc
mov
and
ljmp
test
add
push
or
movb
add
mov
cmp
aad
mov
movsl
mov
mov
sti
dec
jne
dec
cmpsb
xor
idivl
insb
inc
insb
je
push
cmpsl
add
push
pop
mov
out
xor
xchg
or
mov
mov
xchg
and
mov
mov
and
mov
daa
inc
fwait
fs
ficoms
cli
or
std
test
inc
test
loopne
jno
ds
insb
push
add
test
scas
cld
pusha
mov
in
repz
dec
enter
sbbb
movb
fstl
xor
repnz
xor
pop
fmulp
mov
cmp
or
inc
std
dec
int3
aam
inc
pop
fsubl
jle
data16
ret
sub
pop
sti
push
sar
aas
out
cli
rcll
es
sub
xchg
test
ds
sahf
sahf
stos
sub
test
push
dec
cltd
dec
or
les
add
mov
mov
je
popa
mov
loope
mov
xor
call
dec
cmpsl
adc
mov
mov
mov
sub
lods
mov
xchg
adc
push
popf
imul
dec
fdivs
mov
roll
mov
lahf
ss
das
push
and
rcrb
mov
cmp
lahf
shll
gs
and
or
decl
adc
add
xor
bound
incb
out
rorl
inc
inc
mov
xor
mov
add
outsb
sbb
fsubl
in
mov
cmpsb
jnp
es
lock
lcall
xlat
scas
lds
mov
add
or
and
cmp
shll
fisubrl
inc
cmpb
orb
aam
mov
add
adc
lret
pop
mov
adc
ljmp
test
ret
int
pusha
push
addr16
popa
add
jmp
mov
dec
push
xorl
mov
ret
pop
and
and
xor
pop
xlat
push
sbb
inc
mov
xchg
loope
insl
clc
pop
das
jmp
in
es
pop
mov
dec
xchg
xchg
call
popf
mov
jle
adc
dec
fnstcw
icebp
add
push
repz
inc
movsl
in
xor
mov
and
push
aas
mov
mov
into
addr16
pop
in
or
loop
fidivrs
cmp
roll
scas
or
jmp
aad
das
xor
cmpsb
in
mov
push
iret
and
ja
aaa
fstpl
adc
jmp
jno
push
loop
mov
jmp
add
pop
push
in
mov
push
and
mov
push
hlt
inc
das
popf
stos
std
mov
lcall
clc
mov
orl
loope
add
cwtl
inc
jae
jecxz
icebp
incl
sbb
cmp
sbbb
mov
loop
rcll
ret
xor
or
xchg
jnp
xchg
push
clc
stc
shll
daa
mov
rcrl
jg
push
lret
pop
nop
movsb
lret
xchg
pop
sbb
hlt
cmc
loop
sub
push
bound
insb
sbb
mov
push
sub
pop
adc
out
add
mov
inc
divb
rcrl
ret
pop
dec
mov
xchg
push
jbe
gs
fidivl
cwtl
sar
xchg
lea
in
sub
dec
jae
add
mov
cmpsb
or
mov
mov
insl
sarb
repz
jmp
fstps
fnstsw
ss
aas
mov
sbb
fbstp
cmpsl
jno
dec
inc
mov
pusha
jbe
pop
or
push
xchg
das
inc
xor
lods
out
mov
imul
mov
add
fcmovnb
stc
cmp
bound
pop
repz
insl
pop
cltd
push
xchg
inc
jg
lret
insl
fwait
imul
cmp
in
and
xchg
add
pop
xchg
jae
or
jae
in
jmp
jns
mov
dec
mov
dec
push
in
fwait
dec
cmp
sbb
cmc
or
inc
pop
jnp
cmp
pop
cmp
add
pop
out
in
inc
fs
xchg
sub
push
icebp
int3
cs
ret
out
cwtl
mov
das
ss
sub
test
sbb
cli
dec
jl
and
push
push
mov
jbe
rorl
cmp
das
ljmp
sbb
loope
stc
rcrb
dec
push
mov
adc
inc
and
aad
rcll
jno
pusha
mov
hlt
insb
mov
lcall
in
loopne
lret
in
xchg
roll
stos
dec
add
mov
xchg
jns
lret
dec
in
je
dec
rcrb
jg
xchg
and
xchg
outsl
xor
push
jo
push
repnz
or
es
push
dec
and
xor
dec
mov
pop
xchg
sub
add
pop
je
imul
enter
pop
es
jge
ds
inc
pop
mov
cmpsb
adc
addr16
sbb
insb
pusha
mov
stos
mov
cmp
loope
lahf
mov
data16
movsb
in
dec
xor
dec
or
jno
xchg
and
mov
push
mov
push
scas
mov
dec
ficoml
sbb
lea
push
adc
scas
push
sub
rolb
pop
cmp
das
stc
xchg
jecxz
or
in
push
mov
mov
pop
fcmovb
lods
call
cmc
push
outsb
out
mov
and
pop
clc
or
cmp
push
add
out
mov
pop
sub
push
sbb
mov
mov
lods
fistpl
xchg
in
cmp
stos
push
or
or
push
pop
cmpsb
mov
shrb
adc
jno
add
fdivrs
int3
pop
sbb
cwtl
mov
sub
int3
mov
pusha
fs
push
or
popa
cmc
or
mov
or
mov
jne
imul
pop
adc
rcrb
ljmp
pop
je
push
js
and
dec
add
mov
sti
popf
and
ds
cmp
dec
lods
lods
push
out
cmp
adc
gs
cmp
push
test
or
std
fdivr
and
imul
dec
fisubrl
push
push
xchg
in
mov
data16
sbb
pop
push
dec
insb
xor
cmp
out
inc
into
das
or
sub
in
mov
mov
dec
dec
pop
xor
fistl
xor
push
add
rcll
mov
fs
mov
in
nop
mov
add
sub
push
sahf
cmp
enter
loopne
fwait
jecxz
repz
adc
aaa
imul
sbb
imul
and
xchg
repnz
mov
lcall
andl
pop
jmp
xor
lods
or
cs
mov
push
jg
fldl
push
imul
dec
repz
out
fucomp
xor
sbb
and
fdivs
push
hlt
sbb
int3
or
call
or
fbstp
pop
push
inc
pop
je
movsl
mov
fdivrl
rol
push
movsl
mov
cld
jne
dec
das
sahf
pop
xor
dec
inc
scas
jp
imul
test
inc
mov
aas
pop
hlt
iret
out
mov
inc
mov
mov
sub
in
xchg
jge
pop
stc
mov
mov
jl
jge
xlat
dec
sub
inc
out
add
mov
lcall
jne
movsb
push
sti
xchg
pushf
sub
xchg
aas
dec
dec
inc
jb
add
cs
aaa
cmp
inc
inc
xor
cmp
cmpsl
xchg
shl
into
out
or
pusha
mov
or
xchg
das
cmp
dec
mov
jns
lcall
aas
scas
cmc
sti
cmpsl
lahf
std
ljmp
and
xchg
mov
stos
sbb
insl
daa
pop
mov
mov
inc
xor
or
std
cmc
fucom
cmp
mov
dec
icebp
push
inc
dec
ret
jae
dec
outsb
fs
mov
mov
mov
push
mov
jne
les
xor
iret
or
test
lcall
andnps
sbb
or
push
cmp
jb
scas
mov
imul
sbb
xchg
pop
rorb
jne
push
push
cmp
rclb
pop
insb
dec
lea
pop
movsl
fidivrl
xlat
push
dec
or
inc
cmp
cltd
jmp
jge
inc
pop
pop
xor
push
das
in
testb
movsb
shrb
stos
pop
daa
out
fwait
ret
fbld
scas
mov
sbb
sub
popf
arpl
mov
or
fists
or
test
into
add
dec
add
add
aad
jge
loop
jmp
xor
pop
adc
adc
inc
js
jae
gs
jle
pop
enter
mov
pop
fbld
pop
out
add
fs
cld
inc
js
pop
lock
mov
sar
push
cmc
cmp
lods
lods
cmp
out
mov
inc
or
jle
and
sahf
push
stc
sub
mov
pop
and
sarl
mov
push
fdivl
sbb
or
and
sub
mov
lcall
loopne
or
xchg
ftst
jg
sarb
mov
js
or
mov
je
push
rorb
shll
push
in
mov
pop
or
repz
loope
adc
frstor
xor
adc
orl
push
xor
adc
cmc
inc
aad
pop
push
out
scas
and
dec
fstpl
mov
cmpb
push
mov
push
and
jmp
add
scas
cs
lcall
jp
xor
sub
ret
inc
push
cmp
add
cmpsb
loop
pop
lock
jl
jbe
pop
sub
xor
jne
stc
and
insl
in
jns
mov
lcall
stc
cwtl
outsl
nop
mov
add
dec
or
mov
xlat
mov
or
cmp
push
sarb
ret
adc
mov
inc
mov
mov
cmp
movsb
sub
arpl
orb
fwait
sub
add
xchg
hlt
imul
inc
jno
shl
jne
xorb
cmp
push
fimuls
mov
rcl
dec
mov
test
movb
pop
data16
or
loopne
add
jg
loopw
cmp
or
in
add
imul
or
push
cmpsb
sub
fistps
or
dec
fs
dec
lret
hlt
mov
negb
inc
lret
dec
movsb
pop
inc
cmp
inc
and
or
fcmovnb
pop
jmp
xor
xchg
xor
inc
push
hlt
sti
cli
cmp
icebp
add
push
hlt
xor
clc
xchg
sbb
rolb
loopne
mov
aas
data16
or
imull
sub
lea
sub
dec
pop
lcall
call
cmp
mov
scas
or
inc
xchg
pop
cmp
add
mov
sarl
fdivp
pop
xor
orb
int3
sub
out
adc
xor
mov
and
frstor
and
sbb
jl
sbb
sbb
pop
add
push
cmpsb
cmpb
fcmovnb
xchg
fwait
or
cmp
addr16
add
sub
lahf
into
fistps
cs
sub
mov
loope
out
sahf
ss
push
cmovle
pop
xor
into
mov
inc
xchg
pop
push
sub
mov
push
je
mov
mov
sbb
inc
pop
xchg
in
leave
mov
fcmovnu
jnp
std
out
xchg
insb
test
js
pop
jle
sbb
popf
sbb
push
sbb
mov
lret
mov
xor
lds
jo
add
cwtl
xchg
adc
and
pop
rcrl
dec
repnz
mov
das
fdivrl
bound
sub
jg
outsb
jns
cltd
leave
out
fpatan
pushf
mov
jmp
mov
push
sarb
cmp
ljmp
xlat
lea
dec
mov
jno,pn
movsl
test
andl
int
push
ret
push
test
xchg
push
mull
fbstp
fcomps
addr16
pop
dec
test
jbe
mov
test
imul
addb
popf
jmp
push
xchg
in
lret
fildll
xchg
cmp
xchg
cmp
les
in
mov
cmpl
lds
mov
lea
mov
hlt
cmp
and
inc
fnsave
jecxz
ljmp
add
leave
test
call
xchg
aam
fldt
pmullw
dec
jle
or
roll
pop
xchg
push
aam
cmp
ljmp
xor
sub
pusha
xor
icebp
dec
push
inc
push
in
xchg
add
scas
push
xchg
rcr
jge
pushf
fdivl
movsl
imul
sub
in
out
daa
adc
jmp
xor
lahf
cmp
pushf
inc
pop
gs
lock
in
xchg
sub
test
cmpsl
sbb
mov
and
xor
fsubrs
sub
dec
inc
inc
fsub
stos
clc
inc
call
loope
adc
mov
lahf
into
movsl
mov
cld
push
stos
orb
mov
sbb
push
insb
insb
enter
data16
sbb
test
mov
icebp
xchg
fistpl
xchg
int3
test
aas
xchg
pop
dec
cmp
fs
js
int
adc
shrb
mov
mov
xchg
sbbb
lret
adcl
push
xlat
mov
int3
lock
aad
iret
sti
pop
sbb
ss
mov
cld
cmpsl
fwait
lock
jae
fcom
add
les
scas
daa
movsb
adc
pop
ljmp
notl
pop
and
push
pop
sub
inc
dec
stos
rcll
inc
mov
add
sbb
jmp
mov
jae
push
and
in
dec
mov
nop
insl
and
or
push
addl
push
data16
pop
jecxz
jo
xor
pop
fimuls
cmpl
clc
or
iret
insl
xchg
test
or
jae
mov
dec
adc
into
cmpsb
ficomps
xchg
insb
mull
mov
adc
dec
dec
int3
inc
arpl
jecxz
sub
inc
adc
cmc
sbb
roll
mov
or
int3
insl
push
sarl
cmp
jns
rcll
sub
sbbb
pop
sbb
or
sbb
dec
pop
cmp
lods
sti
push
test
and
adc
pop
pop
push
push
pushf
jno
mov
jne
mov
popf
into
loop
fwait
dec
in
fwait
xchg
inc
icebp
jno
iret
fdivl
or
jno
ret
mov
push
out
jno
pop
or
imul
push
and
popa
cmp
and
fstpt
mov
sbb
mov
ss
adc
mov
mov
cmp
outsl
ret
mov
aam
sbb
mov
outsl
mov
add
cli
lahf
outsl
sti
adc
cmp
add
sbb
aam
inc
add
xchg
xor
mull
mov
rclb
stc
dec
clc
fsubrl
jns
xor
mov
ss
jb
rep
test
add
pcmpeqd
bound
out
and
daa
das
pop
stc
pop
fstpt
mov
loope
jo
jl
movsl
push
pop
movsb
push
out
fcompl
imull
ljmp
inc
push
jle
add
or
ss
fcomip
in
in
push
mov
rclb
cmpl
rcll
sub
ds
mov
xchg
repnz
pop
dec
fidivs
pop
fbstp
int3
fs
push
jae
lcall
mov
xlat
andb
es
push
andb
mov
add
sub
dec
cmc
popa
dec
aaa
imul
dec
es
roll
or
mov
mov
int
repnz
jmp
or
add
push
push
loopne,pt
mov
cmp
xor
adc
xor
movsl
lahf
sarb
pop
fisttpl
cmp
add
cmp
ficomps
mov
xchg
jmp
inc
pusha
clc
or
lret
inc
sub
mov
inc
cs
mov
dec
pusha
popa
leave
and
sub
lahf
dec
sbb
sub
xchg
and
jp
cmp
and
adc
xchg
int3
xor
push
mov
xor
sti
in
cld
xor
movsb
nop
test
lret
into
push
lahf
arpl
or
lcall
fsts
lds
fistpll
push
and
xchg
lds
lcall
and
or
push
inc
add
aad
cmp
stos
push
outsb
test
sub
jp
test
inc
xor
fsubrl
fisubrs
mov
mov
repz
js
add
lods
lea
mov
sub
push
inc
cli
add
jo
test
sub
cli
pusha
jle
xchg
dec
mov
movsb
fs
mov
sahf
jl
adc
or
loopne
in
lods
jge
xchg
pop
sub
lock
mov
push
int3
add
dec
xchg
jo
fcomps
pusha
shlb
ret
xchg
lahf
stos
mov
js
or
and
add
pop
rcl
orb
mov
lds
dec
cltd
mov
ss
sbb
cmpsl
cli
adc
test
adc
mov
arpl
lock
mulb
push
sti
insl
shll
js
mov
sbb
aas
adc
int
lret
call
jp
adc
test
fadds
mov
cmp
jmp
repz
sti
in
dec
cld
xor
jl
sarl
push
sub
hlt
add
push
push
push
aas
cltd
fdiv
scas
and
orl
cmp
xor
pop
or
repnz
ret
movsb
nop
leave
jno
jge
jnp
rclb
les
sub
hlt
cmp
cwtl
arpl
outsl
cmp
push
cmp
je
loop
add
xor
fwait
cmpsb
lcall
xorb
in
sarl
mov
je
mov
faddl
dec
and
adc
mov
jp
sbb
rcrb
jmp
negb
or
aas
out
jmp
cltd
rcrb
les
mov
sub
repnz
add
shld
cli
pop
enter
pop
pop
aas
jae
negl
clc
pushf
movsb
lock
xchg
jg
dec
dec
mov
in
dec
out
mov
cmpsl
imulb
sub
fxch
leave
dec
cmpsl
mov
out
pop
push
in
shlb
adc
and
cmpsl
pop
sbb
fdivs
insb
test
fwait
sub
hlt
mov
and
test
stos
lods
scas
jne
or
enter
jo
sarb
repz
sub
dec
and
ret
sbb
push
ja
xchg
sbb
pmaxub
push
fnsave
aad
aaa
movsl
popa
loope
mov
daa
push
dec
push
mov
int
push
add
cmp
orb
push
stos
mov
test
dec
pop
push
mov
movsb
adc
jge
js
dec
inc
rcrl
lds
test
frstor
int3
ret
mov
xchg
loopne
cmp
mov
lock
and
inc
stos
scas
sub
push
jbe
push
orb
clc
dec
mov
arpl
pop
daa
std
popf
cmpsb
loope
lahf
ret
out
cmpsl
aad
add
mov
push
stc
cltd
add
inc
cmp
stos
mov
scas
adc
mov
mov
dec
sbb
or
ds
inc
jecxz
xchg
repnz
sbb
dec
pop
test
adc
pop
pusha
or
es
cmp
movsb
js
cltd
xorl
pop
vlddqu
cwtl
es
sub
add
fs
int3
and
mov
aas
dec
addr16
cwtl
out
mov
test
test
fxch
fidivrl
xlat
sub
inc
mov
jle
jge
cmp
btc
call
add
xlat
and
fidivl
imul
jmp
xchg
ret
dec
mov
jo
dec
inc
out
lcall
mov
push
jns
inc
ja
sahf
xchg
sub
pop
lods
rcrb
mov
adc
sbb
test
frndint
test
cmp
dec
addr16
fldl
sbb
xchg
pop
pop
insl
mov
into
test
pop
mov
arpl
dec
fisttps
or
jnp
xor
sbb
adc
hlt
add
sub
imul
cmp
fwait
repz
shl
mov
adc
fcmovne
data16
imul
das
stos
xor
add
push
or
arpl
pop
adc
cltd
cld
or
add
mov
adc
mov
inc
ja
stos
mov
and
mov
xchg
mov
mov
out
out
add
add
adc
clc
cwtl
lds
lods
jl
push
inc
mov
fwait
mov
push
hlt
arpl
testb
idivb
ja
mov
xchg
out
pop
std
xchg
lcall
out
test
out
mov
insl
mov
sahf
daa
ror
jg
aas
add
rcrb
pop
dec
test
ljmp
dec
sarb
es
lods
cwtl
inc
inc
lret
fucomip
mov
loope
xor
pop
in
test
arpl
mov
lea
and
push
xor
ja
and
repz
push
sub
insl
jge
cmp
mov
fists
pusha
mov
mov
xchg
mov
add
and
jl
jae
int3
leave
push
xchg
push
xor
mov
pop
ret
xor
mov
jns
aaa
jo
cld
adc
sar
bound
push
pop
push
out
xchg
ja
cmpsb
jb
cli
jmp
adc
scas
sub
aas
adc
push
xor
push
ret
mov
gs
push
jb
repnz
and
imul
loopne
rcrl
inc
into
stos
movsb
ljmp
sub
sarb
xor
or
mov
fcoml
or
xchg
push
mov
aaa
aaa
loop
fidivrl
push
jp
mov
dec
sbb
in
std
lcall
les
mov
xor
mov
insl
pop
add
out
mov
insb
sub
cwtl
js
mov
push
fwait
xchg
push
mov
repz
push
in
lods
pextrw
push
dec
push
ret
in
sub
scas
xor
sub
jo
inc
bound
pop
lret
jne
xor
pop
mov
push
pop
mov
mov
push
xor
adc
shll
arpl
out
sub
xchg
loope
out
inc
int3
pushf
mov
addl
sbb
cwtl
push
or
into
sub
xor
adc
aas
adc
jnp
sbb
xchg
sti
pop
mov
push
fldl
shr
push
int
mov
in
pop
add
fdivrl
outsb
add
fwait
sarb
imul
dec
rcl
jno
or
inc
add
out
cmpsb
xor
cmp
mov
cmp
mov
and
test
insl
fcoml
outsl
xchg
leave
mov
lahf
ret
sub
push
jecxz
neg
arpl
push
adc
mov
idivl
aam
nop
in
mov
adc
cmp
push
xchg
icebp
call
push
xchg
cmp
jno
jns
call
xor
dec
popa
repnz
jmp
addr16
push
loopne
mov
mov
les
and
lods
jle
std
fildl
icebp
iret
mov
jle
lahf
cmp
and
ret
push
movl
sbb
sub
mov
std
and
popw
cmc
mov
or
sbb
xchg
push
and
adc
into
out
popf
mov
xor
enter
test
cbtw
and
pop
push
xor
imul
jo
xor
lret
pop
dec
int3
jne
int
pop
lock
scas
jecxz
jne
mov
lock
js
aaa
cwtl
and
mov
testb
jecxz
mov
xchg
fs
loopne
push
jno
fildll
cs
idiv
rcrb
mov
movsb
call
aaa
pop
cmp
lea
and
shlb
cld
daa
push
cmp
pop
sarb
push
mov
adc
mov
sarb
outsl
es
bound
xor
push
xchg
loop
xchg
push
lods
add
fimull
fcomps
sti
inc
sub
jg
incb
add
dec
mov
repnz
dec
xchg
ret
or
pop
mov
mov
push
cmp
and
aaa
adcl
cwtl
dec
inc
pop
mov
ficoml
sahf
xor
adc
out
out
fldcw
popf
inc
push
jne
jge
sbb
jb
push
test
mov
jns
dec
fwait
sbb
xor
paddsb
jge
rorl
mov
xchg
loopne
not
cld
or
pop
push
pusha
in
scas
mov
movsl
pop
stos
jb
insl
outsb
scas
imul
fs
stos
push
cmp
xlat
xor
jae
addr16
pop
or
in
sub
fwait
enter
push
leave
fcoms
mov
stos
push
sub
jne
int3
out
push
adc
ret
icebp
mov
add
std
andb
insb
out
fisttpll
mov
and
add
ss
inc
ja
fstpt
xlat
xchg
fs
mov
jne
or
aas
xchg
sbb
and
dec
or
fsubs
leave
or
enter
daa
pusha
les
jg
pop
mov
sbb
mov
das
push
jg
test
cld
inc
pop
inc
push
adc
mov
cmp
sahf
outsl
pop
inc
scas
mov
mov
mov
sbb
cmp
jo
cld
sbb
adc
add
inc
js
xor
cmp
adc
es
xor
mov
aaa
cmpsl
sub
insl
getsec
stos
dec
jg
push
or
mov
call
xchg
mov
cltd
ja
pop
add
aaa
mov
incb
sbb
insb
movsl
jecxz
sti
jae
jp
jge
pop
lea
je
xor
sbb
adc
inc
xchg
sub
or
sub
mov
cmpsl
lds
loope
mov
or
sahf
sbb
push
cmp
xor
push
dec
sub
fwait
pop
subb
add
arpl
jno
cmp
jae
imul
rclb
xchg
pop
popa
xchg
cs
adc
pop
fcoml
jns
arpl
mov
scas
rcr
mov
out
cmpsb
pop
adc
inc
insb
out
sub
out
cmp
es
xor
out
or
add
jmp
add
int
stos
jo
or
jge
dec
pop
loope
adc
cmp
out
fstpl
adc
fadds
cmpsl
or
xor
orb
pop
fcmovnu
test
xor
imul
arpl
dec
or
adc
cmp
into
leave
sbb
shlb
and
sub
ret
pop
repnz
test
or
jo
pop
lcall
nop
test
mov
nop
add
int
adc
mov
push
hlt
push
mov
add
shl
fsubs
mov
mov
movsl
push
popa
scas
pop
mov
sahf
sub
adc
sub
test
sbb
push
ret
xor
arpl
add
adc
push
gs
sbb
rcr
mov
and
arpl
push
mov
xchg
sbb
lea
sub
clc
mov
loopne
incb
xchg
outsl
sub
sbb
sahf
sbb
dec
adc
outsb
bound
dec
outsl
int
sbb
rclb
and
or
shll
ja
pop
cmp
scas
dec
sbb
sub
data16
sbb
jno
cwtl
movsl
mov
cmpsb
cs
mov
repnz
stos
in
push
imul
rol
mov
out
add
xchg
xchg
stc
sarl
hlt
leave
popf
ror
cmpsl
ja,pn
and
scas
pop
shr
inc
sub
push
pushl
xor
xchg
xchg
mov
mov
fucom
and
and
lret
inc
add
xor
test
pop
and
out
clc
xor
insl
arpl
decb
mov
aas
loop
pop
arpl
scas
in
adc
add
movsb
adc
sahf
outsl
shrl
movsl
loopne
icebp
or
in
jne
xchg
jbe
mov
mov
mov
or
mov
dec
jne
mov
xchg
sbb
push
fucomp
sub
fwait
imul
mov
cmpsl
dec
fs
push
jg
pop
or
bound
add
iret
pop
xchg
jmp
cmp
inc
mov
jg
lret
sahf
ljmp
jl
jns
sbbb
mov
inc
mov
mov
mov
jbe
pop
add
add
cmp
fwait
dec
mov
int3
add
jno
mov
popa
pushf
mov
daa
test
xor
roll
xor
push
xorl
sub
xchg
push
sub
cmp
mov
mov
jnp
cld
dec
je
mov
cmp
xchg
add
xchg
shlb
mov
aad
fwait
jp
pop
adc
xor
cs
shrb
jnp
dec
movlps
sbb
testb
dec
outsb
clc
decl
mov
pop
dec
lea
dec
lret
push
jg
cld
sbb
pop
dec
xchg
fsts
sub
xor
and
inc
in
jo
rcr
xor
out
push
pop
in
dec
cmp
insb
dec
ds
mov
ljmp
jl
dec
xlat
adc
adc
mov
outsb
cmp
jp
sub
jecxz
xchg
jb
pop
sbb
inc
xchg
sub
lds
nop
xchg
adc
add
mov
or
push
loop
lock
shll
arpl
ljmp
inc
pop
outsb
and
test
mov
adc
cmc
cmp
xchg
cmp
push
push
sti
adc
aaa
ss
test
int3
fildll
cmpsl
add
dec
ret
pushf
mov
mov
loop
in
imul
xchg
out
imul
dec
in
ret
xchg
cmpsb
jmp
sbb
lret
xchg
push
icebp
pop
aaa
sbb
aam
test
loop
sub
jo
and
test
ja
scas
dec
cmc
mov
nop
pushf
mov
stc
jne
lods
mov
lcall
mov
cmovs
test
movsl
pusha
call
rol
and
cli
sbb
arpl
fwait
std
or
sub
and
lods
sahf
push
push
sub
call
or
xchg
cld
in
xchg
loop
fnstcw
data16
or
push
aam
inc
jne
rorl
cmp
sti
pop
xor
rcrb
arpl
es
stos
sbb
jae
sub
mov
out
sbbl
jl
mov
fmull
aad
ljmp
enter
out
xchg
or
popf
push
aaa
out
xchg
test
imul
sbb
adc
inc
loop
jno
fcmovne
push
sti
or
enter
xchg
sbb
in
lea
or
iret
adc
and
iret
je
or
pop
int
dec
out
mov
fimull
xchg
pop
movsb
mov
sub
mov
sbb
lods
gs
xchg
mov
pop
or
loope
ss
mov
test
pop
mov
mov
pop
xor
mov
lret
xor
js
iret
andl
xchg
jp
out
sub
jge,pt
pusha
shrl
mov
mov
in
mov
xchg
xchg
imul
rcll
cmp
ret
push
xchg
std
jo
cmp
into
xchg
pusha
inc
inc
inc
pop
stos
sahf
xor
xchg
inc
fcomps
sbb
cltd
push
bswap
adc
xchg
mov
cmc
cmp
mov
aam
dec
pop
and
mov
out
outsb
scas
mov
fdivs
mov
push
outsl
in
mov
jecxz
mov
rcrl
lds
lret
cmpsl
xchg
adc
dec
int
xchg
js
add
clc
push
outsb
mov
je
das
or
adc
dec
jne
cmp
inc
mulb
xchg
pop
add
or
pushf
adc
nop
dec
imul
push
pop
rclb
lock
jmp
sbb
es
xchg
in
dec
stos
fs
push
xor
mov
inc
push
cmp
mov
mov
lods
fisubrl
lret
inc
push
push
fistl
mov
pushf
mov
mov
je
push
or
push
scas
xchg
xorb
push
pop
jno
enter
gs
sbbb
mov
xchg
sahf
ja
cmp
js
std
fnsave
sahf
rcrl
lret
cmpsb
or
cli
outsl
jns
xchg
mov
jle
jge
mov
out
mov
jl
push
sbb
push
addr16
mov
popa
call
loopne
lods
fdivr
push
mov
shll
sbb
std
sahf
or
sub
jne
mov
mov
push
xor
and
repz
adc
push
sub
data16
push
add
subb
sub
addr16
mov
loopne
out
imul
cmp
pop
fildl
or
lret
dec
sbb
inc
test
mulb
cmpb
mov
xor
test
jns
jb
add
xor
cli
fildl
cmp
inc
sub
lahf
les
cmpsl
mull
mov
jmp
mov
and
stos
outsl
push
or
or
in
sti
inc
out
jle
nop
rcr
adc
ret
por
sbb
std
jp
mov
adc
gs
cmpsl
dec
pop
mov
or
push
cmpsb
out
fimull
inc
dec
or
cmp
pushf
pop
pop
push
dec
rorl
push
adc
rorb
bound
iret
mov
out
mov
xchg
adc
test
pop
lret
cmp
or
xor
xchg
add
adc
or
aam
jb
movsb
mov
pop
sbb
fstpt
jg
cmc
pop
leave
imul
pop
jnp
mov
dec
add
jecxz
nop
popf
sbb
add
aas
ret
mov
insl
and
rclb
jae
cmpsl
idivb
out
movsl
shll
mov
push
push
iret
ja
shrl
inc
push
cwtl
cs
mov
mov
sbb
push
jnp
inc
xor
insl
scas
add
push
mov
and
dec
fidivl
divl
cwtl
es
std
inc
dec
cmp
loop
dec
push
test
lock
mov
mov
pop
add
sub
xchg
mov
int3
mov
sbb
pusha
test
mov
js
fs
mov
push
fldenv
jnp
adc
xchg
jle
mov
pop
xor
pop
add
cmp
movsl
iret
loope
fsubrl
aas
push
mov
mov
push
scas
ret
scas
jno
mov
sbb
cmp
inc
adc
cld
add
mov
out
mov
scas
pop
jb
or
gs
into
dec
loope
cld
xor
addr16
leave
cmpsl
or
xchg
jns
jns
xchg
jmp
jmp
faddl
fs
aad
dec
lock
aam
mov
jbe
cmp
inc
pop
inc
mov
out
jge
or
rol
push
test
mov
pop
je
lahf
xor
arpl
pusha
testb
cmp
pop
jns
cmp
nop
mov
xchg
enter
sbb
push
pushf
xchg
xchg
mov
and
inc
enter
inc
mov
mov
sbbb
xchg
outsb
inc
leave
sub
aad
shrb
in
and
inc
push
inc
aad
mov
add
sbb
mov
push
out
lock
xchg
inc
lea
movsb
mov
mov
outsl
mov
lahf
add
jae
jo
inc
nop
push
fldl
aas
xchg
pop
adc
roll
insl
pop
stos
mov
adc
pop
jno
in
sbb
and
fnstenv
mov
or
xlat
xor
mov
lods
mov
fs
push
in
push
stos
ljmp
fidivrl
lods
sub
inc
es
cmp
sbb
out
jecxz
cmp
enter
sahf
ja
out
lea
jne
popa
ret
xchg
adc
jmp
and
xchg
add
jge
mov
or
mov
xchg
dec
lcall
in
sub
in
or
aaa
inc
ds
adc
xor
add
and
push
push
xor
push
sbb
xchg
loopne
mov
shl
lods
jbe
add
xor
scas
xor
and
cld
push
xchg
adc
inc
repnz
outsb
jno
fcoml
dec
mov
add
sub
xchg
aaa
or
or
lods
xor
lods
ds
insl
jmp
imul
cmp
aam
jbe
popa
aas
cld
and
mov
sbb
mov
pop
adc
in
jl
mov
int
frstor
test
add
mov
inc
add
daa
lcall
push
dec
cmp
ficoms
sub
sbb
dec
sub
sahf
addr16
int3
aas
jp
ficoml
fnstsw
mov
jbe
xor
mov
fistps
push
mov
movsl
push
ss
arpl
mov
inc
cmp
je
inc
ja
sub
xchg
sbb
push
pop
and
mov
test
iret
mov
jp
pop
rcll
sbb
les
cld
icebp
xchg
in
js
inc
mov
mov
adc
sbb
lea
shrb
out
lds
jnp
cmp
mov
test
xor
sbb
xchg
int
ds
cmp
push
xor
shlb
lods
or
xchg
mov
add
mov
addb
xlat
xchg
mov
scas
test
dec
jp
xlat
xor
adc
popa
fmul
cmpb
rolb
lret
inc
mov
mov
xor
add
sbb
add
repz
add
pop
or
or
xchg
mov
mov
int3
mov
int3
leave
push
pop
xchg
ret
add
shlb
ds
ja
push
leave
fs
insl
shlb
pop
inc
or
stos
movsb
incb
ljmp
subps
mov
inc
push
sbb
pop
movsb
and
mov
mov
call
cmp
dec
xchg
sbbb
mov
inc
mov
push
test
aam
neg
jbe
std
adc
enter
xor
lea
test
inc
sbb
inc
mov
outsl
lahf
stos
lahf
or
jbe
xor
jg
ficomps
aaa
lds
scas
adc
jnp
adc
pusha
std
mov
into
xlat
inc
cmp
test
lods
jno
add
cmpsl
testl
clc
or
fdiv
fbstp
xchg
sub
sbb
stc
jae
divl
push
sub
jle
xor
mov
fcmovu
push
sub
mov
jb
xchg
fwait
lods
mov
push
xchg
and
jg
inc
loop
cmp
imul
xchg
jns
cmp
cmp
push
mov
dec
jmp
jmp
or
xor
movsb
pop
xchg
xchg
popa
add
jne
xchg
dec
mov
mov
push
cmpb
pop
into
imull
lahf
and
dec
mov
sar
enter
mov
popf
mov
push
out
shrb
ss
aaa
mov
xlat
add
mov
lahf
orl
in
xchg
sbb
fbld
lret
jp
out
es
mov
test
add
imul
jne
dec
mov
push
mov
call
mov
jae
fs
mov
jecxz
xlat
inc
js
shrb
sbb
loop
xor
jne
mov
sarl
in
setge
lret
pushf
addr16
es
push
lods
mov
sub
or
out
cmp
push
mov
cmp
shlb
pop
dec
inc
ret
xlat
movsb
sub
xchg
pop
mov
stc
adc
call
add
sahf
jno
lea
fdivs
cwtl
and
sbb
ljmp
cmpsb
fs
sub
jl
push
pop
cltd
mov
dec
cmp
mov
mov
adc
cld
imul
in
aam
xlat
or
cli
lods
pusha
adc
nop
setp
in
out
jge
aas
pop
in
dec
lahf
inc
int3
nop
clc
jne
adc
pop
add
jge
movsb
cmpsl
adc
add
shlb
cmpsl
sbbl
pop
xchg
into
test
add
out
insl
shlb
jno
adc
add
xchg
pop
lock
cmp
insl
push
add
insl
loope
mov
push
fs
sahf
add
js
dec
pop
out
pop
xlat
push
dec
lcall
mov
sub
sub
mov
divb
int
idivl
inc
scas
inc
stos
dec
movsb
inc
packuswb
mov
dec
fistpll
in
adc
add
adc
loopne
out
imul
push
movsb
cli
cmpsb
es
in
stc
jns
fwait
push
daa
and
mov
pop
scas
or
fstps
out
lcall
jge
or
adc
xchg
pop
loope
ret
rolb
sub
fstpl
mul
push
push
mov
jmp
loope
inc
sub
adc
aad
mov
dec
and
js
add
push
push
push
push
in
pop
push
sub
fs
icebp
mov
shrb
out
jae
stc
xor
add
inc
cmp
push
mov
test
or
push
popa
test
sbb
and
cwtl
mov
dec
mov
test
mov
mov
cli
add
fdivrp
sbb
jo
dec
loope
sub
xor
or
es
mov
addr16
js
pop
arpl
popf
mov
adc
in
aam
push
fists
xor
adc
scas
std
std
sbb
cli
cwtl
mov
inc
mov
or
push
cwtl
in
test
inc
fcmovb
call
shrd
movsb
cwtl
inc
mov
das
pop
orb
mov
pop
xchg
arpl
xchg
mov
das
leave
ret
pop
addr16
cwtl
mov
lret
aad
scas
push
sub
fwait
insl
mov
jl
movsl
ret
neg
enter
cld
icebp
jp
cmp
mov
push
out
sub
sarb
xor
dec
lahf
cwtl
sbb
testb
lcall
es
scas
fucom
jo
std
jb
or
sbb
mov
inc
mov
out
sarb
xchg
mov
lods
icebp
stc
dec
cs
mov
pop
ja
movsl
popl
shll
xor
call
xor
cli
les
lea
xor
pop
adc
add
lea
in
add
jge
or
es
ss
stos
jbe
and
out
inc
adcl
lds
outsb
iret
popf
jae
imul
xor
lea
test
xchg
ret
ss
adc
sub
dec
add
imul
xchg
or
pop
sub
dec
push
fsubrs
fisttps
push
push
xor
test
xchg
push
ret
lcall
add
mov
negl
jae
fisttps
pop
jne
mov
in
ja
jae
into
popa
cmpb
ja
loopne
xchg
jae
outsl
mov
pop
sarl
push
adc
cmp
cltd
mov
mov
mov
jae
pop
mov
jno
sbb
je
jns
fmul
sbb
cmp
xor
jp
ficoms
pop
stos
lea
adc
inc
inc
ffreep
fisubrl
out
adc
jbe
cmovne
leave
std
outsb
data16
jg
push
jge
mov
cld
or
jp
js
xchg
int
adc
adc
addb
cs
lock
add
lret
mov
xlat
call
stos
xor
test
sahf
push
adc
add
and
mov
fimull
enter
fists
loope
jae
out
ret
mov
or
lcall
aaa
movsb
test
aad
xor
push
ret
add
stc
data16
xor
sub
add
inc
cli
je
into
rclb
sub
das
ljmp
adc
cmpsb
repz
sub
mov
lock
ja
sub
jecxz
fdivrs
push
pop
push
pop
ret
test
fsubrp
jne
inc
or
ja
cltd
fstpl
rdpmc
lret
pushf
inc
pushf
jecxz
cmpb
fstl
hlt
mov
cli
outsb
test
adc
popa
test
in
push
xchg
pop
dec
shlb
dec
and
je
and
or
pushf
movl
stc
gs
lds
cmpsb
scas
insl
inc
clc
lods
icebp
and
fucomip
negl
call
imul
mov
bound
add
call
icebp
mov
sbb
sbb
ffree
jle
adc
xchg
std
cmp
mov
mov
dec
lahf
jecxz
dec
mov
xchg
push
test
xlat
sbb
lret
imul
push
out
jl
stos
jo
xor
cmpsl
dec
inc
loopne
fstpl
dec
outsb
out
mov
scas
push
lods
sahf
dec
adc
add
jns
cmp
repnz
and
cmp
in
xor
lds
mov
inc
hlt
stos
xchg
popf
or
divb
mov
mov
sub
fstpl
add
adc
push
jns
jmp
ret
or
iret
xchg
scas
jne
arpl
data16
mov
mov
jo
and
outsl
pop
xor
mov
popa
mov
push
outsl
xorb
sub
push
ret
dec
loopne
push
faddl
pop
pop
inc
xor
insb
xchg
loop
adc
test
cli
cwtl
jg
push
loope
mov
jecxz
orl
xor
inc
xchg
lcall
scas
test
sbb
inc
pop
and
jle
xor
test
lahf
pop
cwtl
cltd
stos
cmp
xor
push
stos
imul
insl
jmp
xlat
and
xchg
lahf
in
add
mov
pushf
or
add
data16
pop
jns
int3
stos
stos
add
jge
aaa
sti
sub
in
jl
pop
cmpb
adc
bound
push
inc
jnp
jle,pt
dec
repz
xchg
inc
xchg
mov
idivb
faddp
ret
lret
daa
adc
imul
mov
stc
pop
pop
mov
mov
add
fidivrs
jle
cwtl
and
daa
mov
invd
or
mov
test
pop
add
lods
rcrb
cmpb
in
jle
sub
pop
lret
sti
arpl
cwtl
outsb
call
or
leave
fmull
filds
repnz
add
mov
mov
test
mov
add
in
out
cli
scas
in
jb
scas
push
mov
fsubrs
in
jns
repnz
lret
mov
adc
dec
aaa
aaa
push
mov
mov
add
in
fistps
pushf
leave
pop
adc
sti
rcll
pushf
inc
mull
movsl
add
pop
jbe
jne
adcl
adc
xchg
inc
and
dec
rcl
mov
mov
inc
imul
in
loopne
lods
mov
xor
cmp
cmp
and
stos
arpl
incl
test
fstpt
add
dec
push
xor
aad
sbb
sub
aaa
idivl
and
push
stc
aas
iret
sub
push
imul
and
js
mov
or
subl
sbb
ss
push
jno
sub
pushf
pushf
int3
dec
pop
sub
dec
loope
push
push
mov
imul
and
add
rorb
xor
inc
dec
cmc
sbb
hlt
jl
mov
fwait
into
arpl
flds
mov
jo
mov
in
mov
push
insb
sub
xchg
xchg
mov
xchg
mov
add
cmp
cmp
jmp
sbb
jmp
addr16
mov
sub
cmp
rorb
pop
fsubl
nop
std
jecxz
cmp
or
add
push
stos
mov
jb
cli
dec
pop
out
outsb
fildl
pop
sub
pop
jb
pop
sti
test
bswap
pop
lods
xor
xchg
iret
pushf
test
popa
aad
xchg
adc
sub
adc
cmp
mov
insb
fistpll
sbb
push
aad
mov
daa
lods
gs
jns
das
in
or
inc
jno
push
inc
into
mov
aas
jbe
lods
cmpsb
or
in
xor
ja
push
in
adc
xor
xor
pop
sbb
dec
cmc
xchg
sub
lcall
push
imul
xchg
notl
lods
sbb
aaa
jg
shlb
push
xchg
repnz
test
mov
cmpsb
clc
outsb
cmp
fs
repnz
out
cmc
sahf
xlat
sub
movsl
repnz
testl
out
rorl
stos
aaa
inc
or
rolb
cmc
mov
adc
aam
aas
xor
adc
xchg
pop
or
jnp
aad
rorl
movsb
sbb
jmp
testl
loop
call
pop
mov
bound
cmc
and
or
add
dec
cmp
mov
cmp
lret
cmpsl
in
les
dec
push
ret
push
sahf
xchg
shlb
cmpsb
adc
js
outsb
mov
jmp
mov
inc
fdivrs
mov
nop
bound
add
and
pop
push
out
and
jno
xor
popf
lahf
xchg
add
icebp
sbbl
sti
dec
gs
and
out
sbb
jle
push
lret
jmp
xlat
out
pop
mov
jns
sarb
lods
fwait
aaa
stos
mov
lret
xor
lahf
fdivs
leave
mov
movsl
out
ljmp
hlt
and
adc
xchg
inc
push
mov
pop
fidivs
sbb
pop
lock
decb
cmpsb
jbe
cmp
imul
adc
jns
and
cmp
mov
mov
bnd
mov
sub
scas
mov
cmc
jecxz
orb
xchg
fnstenv
inc
pop
add
jg
lods
jmp
and
dec
or
xlat
addr16
mov
adc
leave
imul
lods
addl
lea
sahf
adc
adcb
inc
dec
lahf
mov
or
push
scas
pop
push
cli
fadds
lret
push
xchg
out
pop
inc
sub
fsts
les
jb
in
and
pusha
stc
notl
ljmp
loope
int3
xchg
pop
pop
cmp
cmpsl
pusha
or
mov
loope
push
jbe
fwait
loope
and
lods
lds
inc
insl
add
sbb
sbb
sbb
fbstp
and
lds
dec
pop
les
loope
sahf
mov
aam
jae
xchg
lock
addr16
sahf
sbb
sarl
inc
pop
push
jmp
xchg
sarl
mov
pop
mov
mov
fnstcw
xor
lcall
mov
push
lods
arpl
sub
loopne
xor
std
push
push
scas
outsb
xchg
or
xchg
cmp
in
loopne
cmp
fisubrs
mov
mov
mov
jnp
inc
sbb
out
cmpsl
sbb
add
push
adc
aas
ja
addr16
cli
jmp
lea
fldenv
jle
pushf
xorb
mov
adc
fsubp
xlat
fincstp
outsl
jno
test
dec
cmp
pusha
hlt
lret
cmp
cmp
mov
outsl
xchg
lods
xor
stc
fmul
and
adc
add
scas
pop
or
dec
dec
mov
jae
jae
push
pop
add
les
or
xchg
pop
scas
loop
jmp
in
ret
jle
ret
popf
mov
jo
out
push
push
inc
and
stos
cld
fwait
lahf
aam
jmp
sbb
aad
jg
mov
nop
jl
sbb
scas
xchg
dec
push
mov
hlt
mov
jb
repnz
adc
xchg
xor
jae
inc
push
icebp
ss
mov
enter
aam
loop
and
test
incl
and
push
xchg
fsubrl
mov
add
pusha
ljmp
lock
and
sbb
push
loope
jo
fdivl
dec
xchg
xor
stos
jo
inc
and
adc
stos
add
icebp
aad
lods
leave
inc
enter
dec
xor
mov
loopne
jbe
mov
js
stos
jp
cltd
test
xchg
mov
out
cwtl
dec
mov
cmp
xor
mov
mov
aaa
std
jb
mov
jne
ljmp
das
xchg
and
pop
lods
ret
inc
lea
jbe
push
loop
stc
mov
outsl
push
jp
jp
jecxz
cmpl
inc
mov
mov
xor
jns
movsl
adc
add
cmp
movsb
in
mov
ljmp
dec
aaa
lods
mov
test
push
xor
bound
mov
xchg
mov
js
adc
xor
idiv
fcomi
and
bnd
mov
jb
enter
ja
movaps
fcmove
daa
sub
lods
push
jae
jno
icebp
faddl
and
sbb
and
shlb
xchg
cmpsl
int3
push
rorl
mov
cmpsb
push
cmp
test
mov
cld
imul
jecxz
inc
pop
out
dec
cmp
out
jle
lock
clc
xlat
push
xchg
lods
testb
mov
sub
jnp
or
pop
mov
leave
pop
pop
dec
stos
lret
cwtl
pop
lods
shrb
cmp
hlt
jns
pop
jecxz
out
pop
jle
adc
mov
mov
dec
xor
sub
inc
lret
mov
sub
mov
das
and
stos
lret
fmul
sahf
nop
and
negl
cli
les
test
roll
ds
scas
jne
out
xchg
into
lods
adc
push
fldenv
sbb
daa
push
outsb
pop
pop
mov
adc
lret
popf
xchg
push
dec
jg
mov
ss
and
xchg
push
lret
jne,pt
fnstsw
jne
and
push
mov
fs
jl
dec
inc
aaa
fcmovbe
jns
out
aam
and
loopne
mov
daa
inc
inc
inc
pop
loopne
sub
dec
xor
mov
leave
call
jge
test
or
gs
iret
xchg
sarb
pop
rcll
iret
jbe
fcoms
sbb
mov
fcmovne
mov
dec
in
push
jne
repz
adc
cmpb
cwtl
add
lea
mov
push
aas
frstor
xor
fsubrl
inc
cmpsb
inc
xchg
aas
insb
cmc
inc
jge
sub
mov
in
push
leave
cmp
stc
in
jnp
xchg
rorl
lds
int
mov
xor
stc
pop
dec
test
jne
ds
dec
aaa
and
mov
gs
lret
xchg
mov
daa
popa
jno
ret
xchg
dec
and
push
push
test
out
rolb
add
inc
mov
cltd
dec
js
dec
mov
notb
xchg
sbb
insl
jmp
movsl
add
xor
repz
mov
jmp
pop
adc
sub
pop
rcll
and
call
sahf
mov
xor
mov
add
fwait
pop
shlb
mul
ret
jmp
inc
das
mov
popf
push
out
and
xor
fdivrl
mov
mov
mov
mov
mov
mov
xor
movsl
pop
fwait
adc
mov
adc
ret
std
dec
fwait
dec
cmp
push
imul
add
and
daa
xchg
sub
mov
test
pop
les
jns
xor
dec
les
cld
rorb
jecxz
idivb
sub
xchg
mov
xchg
mov
out
out
jge
test
sub
push
sub
in
xor
sbb
fiaddl
cmp
cmpsl
and
shll
outsl
push
lods
fwait
add
inc
xor
enter
call
xor
dec
pop
iret
jbe
lds
call
xor
push
dec
cmp
icebp
adc
add
xor
sub
cmc
mov
inc
xor
jge
xor
ds
sub
mov
lea
adc
shlb
jl
out
push
adc
jb
push
call
jne
data16
div
sbb
cmp
inc
fstp
enter
fsts
pop
xchg
fwait
xor
shlb
dec
cli
insl
push
ret
and
rolb
mov
and
add
jmp
nop
outsb
cld
loopne
add
int3
or
mov
mov
sub
lcall
cs
inc
sbb
cmp
mov
or
aam
add
xor
nop
mov
xlat
add
pop
add
mov
inc
and
or
test
mov
clc
lds
fsubl
out
sbb
sbb
push
inc
mov
xchg
pop
divb
mov
mov
jmp
sub
lcall
loop
cmpl
insl
push
push
add
les
into
add
mov
xor
lds
jmp
push
pusha
jecxz
out
cmp
dec
mov
add
das
xor
mov
add
outsl
mov
push
or
negl
lds
fcmovnu
inc
shrd
mov
std
mov
aaa
mov
stos
pop
adc
pop
adc
sahf
sub
add
rcll
mov
gs
mov
dec
sub
jae
inc
pop
outsl
mov
pop
pop
aam
xchg
xor
outsl
stc
mov
test
inc
cmp
std
mov
sbb
jno
mov
in
and
jl
test
loopne
pop
or
and
mov
rep
pop
xchg
pushf
fisubs
rolb
lret
or
aaa
pop
lods
inc
fwait
pop
aam
adc
fistps
out
dec
daa
loope
cmc
ss
stos
push
sub
fisttps
stos
fdivrl
popa
or
int3
jg
das
mov
loopne
cwtl
pop
dec
andl
int
pop
mov
xchg
xor
mov
mov
in
mov
push
icebp
js
push
dec
and
or
call
les
push
or
sub
aaa
dec
xchg
jb
adc
popf
cli
mov
adc
xchg
clc
push
sub
shl
push
dec
sub
or
outsl
cmp
mov
xchg
mov
in
data16
out
inc
repz
xchg
pop
or
call
jge
ljmp
pop
lods
loop
inc
sti
jge
sub
push
outsb
scas
addr16
adc
lcall
in
cmp
sbb
loop
pop
ret
pop
lods
xor
repz
dec
loopne
cs
fisubrl
pop
pop
push
rcr
stos
dec
jnp
lahf
pop
xor
mov
jg
jbe
cmp
lret
mov
js
push
out
xor
and
xchg
popa
push
addps
inc
pop
sub
ds
push
repz
pop
sub
andl
xor
or
hlt
gs
add
fdivs
mov
imul
and
popa
jo
cmc
lods
sbb
push
or
pop
push
rcrb
xor
mov
rcrl
enter
fstpl
inc
add
push
pop
adc
dec
movsl
mov
fdivr
sahf
shll
mov
pop
jge
or
xchg
test
data16
inc
push
push
pop
outsl
jb
aam
fildll
xchg
sub
mov
xor
xchg
shrl
outsb
xchg
test
std
out
xchg
je
and
jbe
outsb
add
outsb
sbb
push
nop
out
test
andb
fmuls
pop
jo
xchg
xchg
mov
or
cltd
pop
mov
imul
fsubp
mov
xor
test
push
or
cmc
test
add
pushf
add
jl
jb
movsb
in
jecxz
and
push
loop
daa
push
sub
fs
mov
int
pop
sub
sub
xor
pushf
loope
sbb
sub
cmp
ret
pop
sub
push
push
sti
pop
movsb
imul
imul
mov
jnp
fstps
mov
fildl
pop
adc
mov
or
out
xchg
repz
lock
stos
xlat
js
inc
icebp
hlt
pop
test
mov
out
adc
lods
jge
aad
jmp
daa
and
pop
jne
or
int
jmp
stc
lock
mov
outsb
jg
nop
pop
jne
inc
dec
mov
pop
lock
out
popa
sahf
sahf
push
std
sbb
push
js
frstor
ljmp
push
adc
push
cmpsl
mov
daa
and
xchg
or
pop
iret
dec
sbb
inc
rep
lds
imul
out
dec
maskmovq
fstl
pop
ljmp
or
sbb
xchg
inc
xor
mov
int
xchg
push
dec
fildl
adc
or
inc
mov
aas
xchg
jno
xchg
jae
push
adc
jle
mov
mov
aad
lock
and
xchg
or
ljmp
aas
xlat
cmp
nop
jo
add
xor
push
adc
adc
fisubs
cmp
and
xchg
adc
lcall
fwait
cmpsb
popa
mov
decb
jbe
cli
or
fwait
leave
add
loop
es
mov
test
in
inc
pop
pop
xchg
ret
hlt
popf
lods
xchg
mov
jl
and
or
movsl
pop
add
xor
or
push
stc
adc
lret
js
xchg
cmp
mov
sub
cmp
push
dec
repz
sub
jg
pop
lcall
lock
and
cmpsb
popf
push
sbb
out
popf
lock
stos
orl
jb
lods
aam
adc
bound
push
shll
js
sub
sbb
dec
inc
sar
jp
push
in
pop
push
pop
addr16
mov
idivb
adc
cli
and
stos
adc
int
lahf
xor
xor
xchg
pop
push
out
xchg
les
mov
add
jb
inc
and
sbb
rcl
push
inc
mov
rclb
mov
icebp
inc
sbb
sub
push
push
dec
out
cmp
mov
lock
leave
dec
mov
lahf
or
cs
cwtl
push
jmp
xchg
bound
lcall
jo
pop
fsubrs
scas
neg
add
maskmovq
testl
stos
sub
push
test
xchg
xor
test
jl
mov
fidivl
rcll
push
adc
popf
sbb
adc
inc
hlt
push
nop
aaa
xchg
add
cmp
xlat
jge
lahf
push
ror
mov
mov
addr16
gs
std
push
dec
mov
mov
stc
sbb
add
or
push
enter
fs
pusha
ficompl
inc
sub
sbb
xchg
iret
stos
mov
mov
mov
xchg
dec
dec
xchg
sbb
repz
fcoms
jmp
cltd
jmp
adc
fnstcw
daa
das
fsubrs
std
jle
adc
clc
mov
ret
add
ss
xchg
call
pusha
cli
jne
xor
stos
enterw
xchg
ret
sarl
ja
mov
ljmp
xchg
xchg
ss
cltd
pop
adc
jne
mov
xchg
or
xchg
mov
mov
or
sbb
adcb
mov
hlt
loope
ja
leave
mov
lds
rolb
jle
and
mov
xorb
push
mov
lods
ja
ret
push
jb
test
leave
bound
push
hlt
mov
pop
lret
das
dec
stos
into
dec
fs
push
dec
mov
ljmp
arpl
xchg
sti
xor
jge
pop
xchg
dec
inc
push
vmovss
loope
jnp
jne
add
adc
aad
inc
cmp
popa
aam
push
mov
push
pop
xchg
xchg
movsl
vucomisd
push
xor
lods
inc
xor
sbb
out
aas
pop
nop
std
xor
dec
push
pushf
fdivp
and
mov
push
sbb
lds
pop
jp
lahf
loope
wrmsr
and
aaa
add
negb
add
cmp
test
xor
xchg
outsl
or
lds
xchg
jae
out
arpl
lret
movsb
sbb
cltd
cmp
or
fs
repz
xchg
arpl
cmp
aam
loopne
pushl
je
dec
in
sub
adc
lret
fstpt
add
jbe
sub
mov
jp
out
in
cmp
clc
mov
nop
sbb
ja
xchg
cmp
ja
mov
mov
lret
cmpb
xchg
xchg
je
push
leave
pop
xchg
jecxz
fisubrl
aad
inc
xchg
aam
movsb
mov
fsubl
repnz
xor
xchg
cltd
lahf
aaa
dec
rcrl
pop
push
push
or
cld
pop
cli
adc
shrl
ljmp
xor
sub
dec
cld
insl
push
imul
push
xchg
out
loope
add
mov
repnz
xor
outsb
sarl
cmpsl
mov
xchg
aad
xchg
ljmp
adc
push
or
sbb
mov
push
cmp
aaa
mov
or
mov
or
cmc
test
or
xor
xchg
fisttps
add
test
daa
popa
mov
pusha
push
sarb
dec
lds
mov
xchg
fsubrs
outsl
mov
mov
fwait
mov
loopne
int
loope
jmp
sahf
fcmove
adc
das
scas
and
sub
adc
jg
xchg
mov
aaa
push
std
stos
gs
testl
mov
and
popa
xchg
sbbl
mov
mov
jl
or
fstps
and
into
cmp
inc
dec
push
xlat
xchg
popf
sub
loope
rcl
xchg
dec
in
cld
clc
inc
fldt
mov
jecxz
sbb
ds
xchg
pop
in
ret
orl
jle
ja
add
push
out
mov
push
sbb
xor
inc
inc
sub
jl
call
shl
popf
pop
rcrb
cltd
pop
sahf
popa
cmpsl
out
mov
add
jnp
pusha
pop
cwtl
pushf
mov
sti
dec
repz
mov
aaa
push
gs
lea
ss
aaa
jnp
and
cmp
mov
mov
idivl
movsl
int
popa
sarb
cmpsb
dec
adc
xchg
and
cmpsb
push
or
sbb
mov
push
adc
sti
push
sub
add
inc
sarb
shlb
mov
jge
push
xchg
jle,pt
add
int3
add
pop
lret
sbb
movsl
jns
mov
outsb
mov
out
scas
inc
xor
pop
cmpsl
jnp
adc
arpl
faddl
negb
push
arpl
adc
and
push
cmp
and
pop
loop
xor
pushf
inc
shrl
jne
shlb
incb
mov
mov
add
or
aad
aaa
inc
lods
jo
mov
shrb
push
ret
push
adc
xchg
and
mov
cmp
jno
mov
and
xchg
imul
imulb
cmp
jae
mov
popf
mov
cmp
adc
aad
das
xchg
scas
movsb
sub
pop
sub
or
popa
inc
mov
in
lcall
sbb
sub
imul
xchg
pop
js
pushf
lea
push
pop
mov
push
add
stos
cmp
ret
sub
cli
fimuls
mov
es
shrl
fmuls
push
cmp
cwtl
out
test
daa
lods
adc
fwait
mov
test
xchg
in
call
repnz
inc
in
add
sbb
movsl
imul
push
pop
sbb
rcll
and
pusha
sub
test
xlat
mov
xchg
dec
jle
inc
out
cwtl
das
mov
sub
loop
ljmp
dec
andl
mov
repz
inc
mov
jmp
sbb
in
and
mov
mov
xlat
jmp
loopne
lcall
scas
add
push
mov
mov
dec
pop
sub
jmp
ja
cmpsl
mov
and
es
popa
out
jle
repnz
push
std
insb
pop
out
mov
adc
movsb
jmp
shld
dec
pop
push
fistpl
add
sbb
ficomps
pop
pop
mov
mov
inc
dec
ror
adc
lds
push
add
loop
or
dec
iret
adc
adc
mov
frstor
outsl
jle
mov
lcall
repnz
rolb
jge
cmp
xchg
loopne
sub
lret
xor
inc
xchg
addr16
cmpsl
arpl
lea
and
aas
mov
ret
out
testb
lds
stos
mov
lahf
leave
pop
outsb
xchg
outsl
mov
mov
pop
and
cmp
pop
shrb
lds
and
cmp
aas
xor
cltd
int3
lea
xchg
dec
pushf
pop
pop
xchg
jmp
mov
sub
sub
mov
shlb
jo
push
sbb
xchg
mov
js
test
cmp
nop
fisttps
insl
jl
push
clc
pop
mov
adc
out
pop
push
mov
cmc
jecxz
xor
jne
mov
test
sti
rcr
fucompp
imul
repnz
mov
mov
shrb
pop
fistl
dec
xchg
add
shlb
jecxz,pn
inc
mov
or
dec
dec
dec
divb
mov
pop
pop
push
dec
aaa
push
or
mov
mov
pop
loope
inc
lds
or
cmp
mov
je
xor
cs
inc
lcall
popa
jne
mov
in
mov
push
loope
and
shll
inc
jmp
lahf
mov
or
lcall
xorl
and
sbb
sub
lea
xchg
xor
push
ja
pop
arpl
adcb
mov
sarb
out
mov
xor
or
cmp
lods
inc
xchg
fisubrs
jo
xchg
fwait
cmpsb
xchg
inc
ficoml
cltd
push
xor
sbb
lret
and
mov
insl
mov
or
mov
and
dec
les
lcall
mov
push
sub
mov
or
sahf
mov
sub
sbb
xchg
pop
add
and
xchg
sbb
ds
sarl
js
xchg
sbb
nop
inc
js
shrl
add
add
out
xchg
cmc
mov
mov
insl
aaa
fnstenv
sahf
add
cwtl
push
js
mov
push
leave
push
xchg
add
lods
pop
aas
cmc
xrelease
fisubrs
mov
sub
mov
xchg
mov
out
cmc
add
and
test
movb
xor
in
sbb
call
loop
mov
add
xor
icebp
dec
mov
inc
and
jbe
ljmp
push
pop
dec
cmp
cmp
in
clc
stc
insl
xchg
adc
dec
shrl
inc
push
mov
jp
int3
ljmp
in
lods
jecxz
push
into
rcll
xor
xchg
jl
xchg
pop
loope
jnp
cs
adc
mov
int3
aaa
sahf
push
sahf
fucomi
adc
lock
sti
lock
loop
or
movsl
es
or
je
mov
fiadds
xor
outsl
dec
bound
popa
mov
jmp
cmp
cld
cmp
int3
jp
in
mov
add
mov
dec
mov
aas
jo
sub
repnz
jmp
mov
outsl
xchg
mull
das
sbb
ret
fwait
sahf
pusha
mov
mov
mov
pop
pop
fdivl
test
arpl
int3
or
ficomps
push
pop
ror
jp
sub
loop
and
ret
lock
inc
cmpsb
push
pop
int
imul
pusha
fstps
push
inc
lock
mov
in
sahf
push
and
xor
int
jg
stc
rol
jmp
jmp
sbb
inc
lock
mov
sbb
in
out
dec
or
adc
inc
fcmovnbe
or
sarl
xor
dec
mov
push
sbb
inc
leave
sahf
and
or
sub
sahf
rolb
pop
in
mov
xchg
lods
cmp
scas
dec
test
scas
rcrb
pushl
xchg
ds
aaa
cmp
mul
lret
fld
jle
inc
dec
jb
inc
push
xor
and
and
aam
or
and
cld
adc
push
cmpsb
sub
sbb
mov
jle
lahf
push
adc
outsl
xchg
mov
sahf
popa
mov
push
inc
adc
out
in
dec
pushf
test
testl
sarb
jmp
mov
icebp
push
sarb
mov
mov
lock
cli
out
xor
fldcw
sahf
and
xorl
addr16
inc
repz
mov
jg
jo
jae
idiv
out
cs
push
xor
out
xor
dec
popf
setge
add
icebp
xchg
adc
pushf
push
repnz
xlat
daa
hlt
enter
popf
pop
pop
ret
or
jno
mov
mov
cmpxchg
cmpb
dec
loopne
sub
cmpsl
mov
lods
in
rcll
sub
aam
mov
and
pop
fcom
sti
imul
push
or
dec
adc
or
mov
insl
and
adc
pop
and
in
xchg
pop
xchg
sti
inc
xchg
mov
bound
and
clc
mov
or
sbb
imul
lcall
cmp
sub
clc
inc
cmpb
loope
cmp
aad
dec
add
push
inc
arpl
adc
movsl
add
add
imul
pop
jge
adc
jb
add
shlb
fistpl
cmp
repz
dec
jle
scas
add
shrl
in
sub
filds
cmp
pop
pusha
mov
popa
or
lock
add
mov
mov
push
repnz
dec
mov
push
mov
dec
pop
push
inc
imul
lret
inc
loopne
pop
mov
mov
or
push
daa
mov
fildl
dec
inc
sub
negb
adc
jp
ret
das
push
mov
adcl
adc
adc
bound
xchg
sti
fwait
and
pop
mov
dec
mov
mov
insl
mov
in
inc
jge
dec
jae
data16
daa
dec
notrack
and
cli
mov
and
out
jp
push
jp
cmpsl
cmpb
push
sbb
int3
lahf
pusha
cmpsb
stc
mov
xor
or
mov
mov
shlb
push
push
pop
es
jno
cltd
mov
rcrb
bound
iret
mov
inc
sarl
bound
jmp
mov
adc
sbb
sbb
and
scas
mov
lods
icebp
jb
ret
mov
mov
xchg
sbb
cmpsl
flds
mov
loopne
enter
out
and
cmp
pop
push
jl
adc
pusha
xchg
dec
outsl
sbb
pop
aam
lods
jns
enter
dec
lods
lods
sub
dec
subb
mov
pushf
stos
mov
adc
adc
pop
and
jno
add
and
pop
cmp
or
mov
aaa
jecxz
cwtl
gs
mov
std
xchg
sbb
ljmp
rorb
adc
sbb
jecxz
lods
xchg
jb
lret
out
clc
mov
cld
jns
sbb
xor
xchg
out
aad
dec
inc
dec
sbb
add
jb
mov
push
dec
jmp
outsl
repz
mov
popl
addr16
push
pop
and
sub
roll
mov
adc
stos
push
pop
jo
push
push
cs
or
in
pop
dec
and
dec
adc
mov
in
or
sahf
mov
sti
rcl
mov
ss
in
dec
loope
je
cld
fidivrs
mov
cmc
lea
mov
mov
mov
xlat
cmp
arpl
test
cwtl
sbb
push
in
ja
sub
mov
xor
mov
imul
push
dec
add
inc
mov
and
cmp
sarl
lret
repz
inc
or
std
sahf
lret
add
mov
jmp
adc
iret
fdivr
mov
imul
xor
xchg
subl
stos
jo
fstps
ret
imul
pop
jle
clc
cli
xchg
into
out
stos
mov
push
lret
roll
lahf
shll
jp
push
and
adc
cmp
jmp
push
add
insl
popf
cmpsl
rclb
or
dec
popf
pop
pop
mov
pop
and
test
mov
bound
xchg
outsl
daa
mov
frstor
pop
pop
xchg
mov
lock
xchg
es
xor
push
sarl
sbb
ficomps
sbb
xchg
or
push
pop
inc
or
sbb
cmp
arpl
leave
jl
mov
dec
scas
mov
outsb
ss
sbb
in
sub
inc
push
xchg
stos
xchg
mov
icebp
cwtl
fisubrs
ds
js
pop
cs
push
cmpsl
cwtl
jg
movsb
ja
cmp
dec
jnp
lods
shll
rol
jle
add
jmp
loop
das
xlat
or
fmul
jp
ja
lcall
mov
mov
mov
jecxz
push
mov
push
push
mov
mov
pop
test
dec
fdivrl
add
xchg
out
iret
je
ja
in
dec
out
loopne
popa
mov
inc
pop
jns
enter
or
idivl
fiadds
cmp
push
dec
inc
lods
dec
pop
lods
sbb
add
fbld
fs
push
adc
arpl
inc
mov
imul
and
mov
dec
jmp
inc
pop
imul
mov
es
test
std
clc
xchg
push
fisttps
popaw
je
sar
loop
nop
lds
and
dec
dec
jmp
xchg
jmp
or
pop
daa
ret
xchg
mov
rol
insb
outsl
sub
push
loopne
pop
iret
inc
pop
mov
or
aam
and
mov
test
or
xor
test
xor
cmpl
scas
cwtl
adc
push
js
mov
insb
inc
or
mov
ja
call
inc
repz
or
sub
pop
mov
jo
mov
outsb
cmp
mov
mov
scas
fwait
lock
in
mov
pop
pop
push
bound
ret
add
sbb
aas
out
xchg
mov
jno
lock
or
out
sub
addr16
jae
negb
and
mov
fsubrs
daa
addr16
addr16
xchg
cmpsl
add
jo
ljmp
lahf
mov
pushf
pop
popa
test
int3
dec
outsl
scas
push
out
mov
inc
out
dec
and
scas
fs
jp
jae
pop
pop
hlt
rcrb
jnp
xor
fstl
fildl
mov
in
push
jecxz
xor
mov
add
cmpl
mov
mov
or
mov
int
adc
inc
or
pop
mov
sbb
and
popa
into
inc
and
lods
out
stos
cmp
mov
sbb
xlat
cs
pop
mov
jle
sub
out
jo
std
call
pop
ljmp
je
aad
cmp
pop
fdivrs
mov
jns
nop
mov
mov
inc
in
pusha
addr16
sbb
sahf
jge
cs
adc
cmc
outsl
push
lahf
cmc
adc
std
testb
dec
sub
cmp
add
adc
data16
adc
mov
ret
popa
aas
sub
push
add
int
test
xchg
jmp
xor
mov
xchg
fstp
mov
leave
mov
dec
into
inc
mov
mov
orb
in
jp
dec
fidivs
out
sbb
mov
lds
mov
add
sbb
cmp
sbb
loop
adc
cmp
xchg
dec
rcll
cmp
pop
rolb
pusha
cltd
or
cli
lret
xchg
dec
fs
lret
jmp
pop
aaa
jg
xchg
mov
adc
jo
add
push
sar
push
lea
icebp
mov
fwait
xor
jnp
mov
or
push
cmp
pop
sub
mov
xor
lods
adc
mov
lods
mov
sbb
push
insb
xchg
xchg
clc
adc
mov
cli
stc
loope
sub
cmp
dec
pushf
add
jl
fildll
sbb
or
inc
in
cltd
cmp
xchg
push
mov
mov
outsb
push
fwait
mov
mov
lcall
sub
mov
insb
sbb
adc
insb
sub
test
repz
int3
mov
cmp
stc
fucom
cmp
or
push
fcoms
je
cmp
push
jb
pop
stos
inc
aam
loopne
cmp
jmp
or
fisubl
hlt
ss
fldenv
inc
negb
movsl
mov
mov
cmp
add
and
and
lock
jne
mov
cmp
push
xor
xor
cmc
mov
lock
add
ljmp
call
lods
out
aam
push
push
lock
or
cli
repnz
dec
aas
repz
xchg
xchg
and
xlat
cli
nop
or
jo
cmp
leave
in
xor
or
fildl
scas
inc
ja
push
xchg
into
popa
arpl
adc
xchg
mov
out
mov
push
xchg
aaa
fidivl
jae
sbb
test
pop
jo
ds
in
mov
movsl
ja
in
lods
or
cmpsb
jmp
add
insb
ljmp
and
pop
xchg
lcall
pushf
lea
push
ds
cmp
mov
imul
mov
hlt
sub
loopne
jmp
xchg
ss
mov
icebp
add
addr16
sbb
mov
cwtl
jl
jne
inc
sbbb
pop
sbb
mov
sar
mov
andb
dec
lahf
scas
add
mov
cmpsb
das
lods
xor
lds
pop
arpl
or
imul
in
push
jns
sub
jg
scas
mov
pushf
mov
inc
dec
mov
les
mov
in
lea
adc
insl
mov
mov
mov
ud2
adc
mov
leave
cvtps2pi
repnz
adc
sahf
shl
mov
enter
lock
mov
add
je
inc
pusha
pop
lds
mov
cmp
fisttpl
flds
int
pop
add
leave
pop
sub
je
dec
imul
out
push
fnsave
push
mov
xchg
mov
or
push
jne
adc
lcall
pushf
lahf
mov
inc
inc
xor
mov
imul
mulb
mov
or
movb
jae
sti
or
or
push
test
notl
xor
jnp
pushf
xchg
cmp
dec
mov
adc
inc
jge
loope
mov
rcl
cmp
fwait
stc
jge
fcmovnbe
in
cmp
subb
jae
sti
cmc
std
mov
xor
cli
add
rcll
adc
lret
add
adc
aad
roll
sub
xchg
jnp
sbb
jb
hlt
dec
xor
ficomps
ss
out
xor
in
xchg
lods
pop
test
lcall
or
out
pop
cmc
call
repnz
inc
add
sub
aaa
mov
pop
sub
pop
movsl
outsl
or
add
out
xor
int3
xlat
xchg
pusha
and
call
add
add
ja
nop
daa
jge
push
neg
js
in
mov
push
add
add
xlat
repz
mov
adc
mov
sub
lds
ljmp
mov
jb
adc
cmp
sbb
inc
push
xchg
lods
fxam
pop
xor
mov
sub
xchg
mov
icebp
push
add
imul
ljmp
mov
fwait
enter
push
loop
pop
pop
sti
int
loope
hlt
pop
pop
pop
out
jl
in
outsl
cmp
xchg
mov
adc
rolb
sub
mov
mov
sbbl
inc
cmp
adc
popf
and
lret
push
adc
and
repnz
cmpsb
sbb
jno
or
adc
inc
push
cmp
pop
or
or
pop
aaa
xchg
loopne
andb
mov
jns
cmp
insl
shll
cmpsb
test
jle
xchg
inc
dec
decl
ret
lcall
mov
aam
fisubs
loope
cmpsl
mov
shll
xchg
jp
xor
and
push
add
shll
lock
enter
dec
jg
and
mov
and
pop
rorb
mov
cwtl
mov
cmp
cltd
lcall
lock
pop
lods
mov
dec
mov
in
enter
inc
insb
cmp
or
sbb
scas
push
mov
std
inc
cmp
imul
popa
daa
add
mov
push
sub
pop
push
mov
mov
outsl
sbb
test
mov
pop
scas
sub
cmp
jg
push
sahf
xor
cs
pop
sub
sub
jbe
fildl
adc
ret
cmp
mov
adc
push
andb
jl
leave
shll
mov
pop
scas
stc
sub
cmp
mov
dec
sub
mov
fidivs
adc
lds
jns
test
inc
jno
sbbl
sub
push
pusha
cmp
addr16
jae
lcall
cmpsl
repnz
test
xlat
dec
stc
add
test
or
mull
shrl
lret
dec
arpl
fldl2t
add
mov
inc
push
mov
test
cli
lods
xlat
lea
cld
int3
cmp
rcll
dec
mov
inc
call
repnz
dec
cwtl
les
aad
ffreep
add
inc
movd
mov
jg
add
and
stos
jne
add
cld
outsb
jg
xchg
sbb
gs
int
push
jne
and
xsaves
bound
test
ss
cmpsb
inc
aad
bound
push
push
push
sti
fldt
xchg
sbb
sarb
fwait
xor
inc
loopne
xchg
data16
xorl
dec
xor
shll
cmp
fstl
icebp
jbe
mov
pop
push
mov
mov
jne
loopne
mulb
push
js
out
sub
sbb
mov
arpl
push
cmp
js
int
shrl
mov
lods
ss
nop
sub
test
pop
clc
dec
jmp
fisttpll
movsl
subb
js
shr
lret
sti
sub
aas
lock
jns
dec
aas
mov
maskmovq
mull
and
adc
push
xor
mov
int
mov
movsb
lret
cltd
out
ja
movsl
add
xchg
sbb
xor
pop
loop
popf
sbb
adc
and
jge
lea
jnp
insl
push
test
xchg
inc
sub
cmpsb
repnz
aaa
cs
insl
arpl
adc
test
lock
sub
scas
iret
mov
and
pop
mov
lock
dec
add
scas
aam
aas
mov
xchg
push
loop
xor
jecxz
ja
call
pop
pop
out
pop
xchg
sub
mov
xchg
inc
add
pop
pop
push
pop
cmp
mov
mov
into
push
pop
mov
adc
lret
lret
insb
scas
lds
stc
pop
mov
pop
jle
jae
lods
dec
out
and
sub
mov
out
pop
aas
scas
call
xchg
sub
in
jb
aam
cs
lret
clc
loop
fcoms
xor
xchg
xchg
add
push
outsb
and
add
xchg
sbb
sbb
cmpsb
icebp
leave
jmp
aam
xchg
out
jb
fcoms
out
push
xchg
fwait
in
mov
dec
and
push
or
fiaddl
sahf
dec
dec
out
fstpl
mov
pop
jnp
inc
push
ljmp
popf
daa
sarb
mov
xlat
dec
or
adc
testb
imulb
pop
mov
sub
xorb
push
mov
mov
mov
outsl
negb
cmp
in
movsb
jne
mov
inc
orb
or
jns
and
cmp
pop
add
icebp
add
pop
adc
lcall
mov
push
inc
out
sub
repz
scas
stos
loop
movsb
push
in
jecxz
sbb
sub
mov
ret
pop
xchg
and
std
adc
out
stos
call
sub
pop
mov
push
into
mov
fs
je
pushf
imul
add
inc
lret
jp
add
sti
xchg
mov
jmp
and
pop
jge
cmpsb
ds
out
xchg
pop
or
outsl
or
divl
sub
iret
movsb
shlb
icebp
je
fiadds
mov
pop
cmp
popa
cmp
mov
sahf
popa
dec
adc
or
mov
ja
xchg
das
ljmp
mov
rcll
hlt
sbb
lods
mov
subl
out
stc
jge
and
inc
add
or
lods
add
testl
shlb
mov
pop
sti
int3
jmp
movsb
push
jecxz
xchg
mov
and
fstpl
adc
mov
sub
add
xchg
xchg
sbb
lea
fwait
mov
ja
movsb
adc
cld
mov
int3
int3
pop
xlat
aas
les
pusha
push
or
mov
cmp
dec
push
movb
xchg
add
iret
cmc
mov
shrb
dec
js
pop
fldenv
lds
mov
sbbl
adc
add
or
push
out
add
inc
adc
int
mov
out
jbe
dec
pushl
movsl
repz
xchg
scas
popf
cmpsl
icebp
lea
movl
mov
cmpsb
push
mov
sub
or
rorl
stos
mov
ret
cwtl
or
hlt
lds
stc
in
insl
pop
fs
fwait
stos
mov
rolb
xchg
outsb
inc
lods
lret
pop
lods
daa
lret
ret
fst
cmp
es
or
das
adc
fldenv
and
mov
test
daa
icebp
jecxz,pn
push
xchg
idivb
add
xlat
xchg
test
je
pop
and
xor
or
add
daa
and
aaa
fs
and
pop
inc
mov
rcrb
not
aad
xor
rcrb
inc
mov
pusha
mov
inc
data16
and
jg
sub
jnp
xchg
xchg
in
pop
and
mov
test
add
cld
jo
add
sbb
pop
mov
pop
pop
stos
and
cs
aam
lcall
sub
and
or
jecxz
dec
xor
push
es
pop
insb
cltd
popf
lock
xchg
mov
mov
jno
fsubl
jnp
adc
mov
jge
jo
mov
or
orb
scas
mov
jecxz
mov
out
xlat
sbbl
pop
cmp
pop
and
aaa
lret
mov
shrl
fwait
jl
mov
adc
push
lods
fcoms
lock
andl
cli
push
jecxz
or
movsl
cmp
lea
pushf
mov
fcmove
mov
clc
lods
pop
mov
cmp
push
xor
fisubrl
or
js
push
sti
mov
rclb
sbb
xor
pushf
sbb
lret
inc
sub
pop
out
faddl
jne
test
jnp
sub
push
mov
ret
stos
jmp
push
cs
adc
outsl
and
in
xchg
addr16
out
movb
int3
fidivl
popf
jle
jnp
or
outsl
loopne
dec
sub
sbb
and
xchg
adc
fnstcw
dec
jle
mov
xchg
enter
fnstenv
arpl
jbe
rcrb
cmp
jb
mov
mov
mov
aad
mov
add
int3
pop
or
pushf
xorl
lahf
pop
xor
or
mov
gs
mov
das
adc
data16
out
mov
out
fs
ja
fiaddl
aas
addl
cmc
lea
cmpsl
cmp
cmpsb
add
data16
lret
xlat
in
inc
mov
rcrl
mov
mov
xorb
lret
inc
ja
cmc
cmp
xchg
push
pop
ds
push
call
lds
lock
mov
mov
orb
xchg
scas
adc
stos
clc
out
stos
add
and
mov
or
pop
push
je
mov
out
push
movsb
mov
adc
cwtl
and
or
xorl
in
add
sbb
in
lret
insl
aam
mov
cli
repz
jmp
and
mov
cwtl
loopne
or
fs
xor
add
scas
mov
or
repnz
push
cmp
stc
sar
frstor
adc
fidivs
scas
inc
lods
push
mov
enter
dec
xor
lcall
out
cmc
cmp
and
sub
xchg
in
out
pop
mov
jno
test
push
addb
dec
outsl
data16
data16
push
pushl
clc
std
pop
mov
lea
loope
sarb
movsb
je
cs
pop
dec
pop
sub
popa
loopne
add
xor
mov
fidivrl
cmp
sbb
cmp
xchg
cmova
sub
adc
scas
lcall
and
and
test
ds
test
cltd
je
cmp
addr16
inc
in
fcmove
cmp
xchg
push
sarl
pop
andl
inc
and
jbe
mov
fcmovu
cmp
or
adc
xor
sbb
add
inc
cs
insl
les
jae
pop
sub
jecxz
out
xchg
cmpsl
inc
jb
jne
rcl
push
outsl
mov
sti
fwait
sub
mov
into
in
ret
cmp
mov
cmp
inc
testb
dec
push
lods
mov
sub
push
inc
mov
movsb
cs
jbe
test
mov
push
packssdw
push
negb
cmc
test
scas
pop
js
shlb
or
add
push
cmpsl
or
push
jns
mov
mov
shrl
xlat
out
jmp
out
xchg
out
nop
imul
lahf
and
fldpi
repnz
and
das
xchg
movsb
stos
jb
loop
lods
adcl
or
pop
pusha
sub
mov
ret
or
adc
xor
imul
mov
fisubrl
adc
and
in
push
cli
inc
jp
orb
sub
or
mov
mov
mov
cld
in
out
mov
int3
test
pop
pop
notl
pusha
xor
or
fisttps
pop
ds
aad
call
mov
xorb
jmp
in
or
mov
aaa
add
jae
sbb
imul
rorl
dec
scas
popa
movl
xchg
sbb
ljmp
adc
xorl
adc
adc
mov
jecxz
scas
mov
cmp
pop
test
arpl
mov
add
lahf
in
xlat
push
mov
xor
mov
mov
xor
push
movsl
push
aad
mov
stos
inc
xlat
xlat
adc
sbbb
insb
lcall
and
cs
insl
nop
hlt
adc
inc
inc
repz
pop
insl
or
jno
aas
repz
mov
push
call
pusha
int3
push
add
imul
data16
inc
xchg
cwtl
shrb
pop
subb
jmp
push
inc
popa
daa
add
push
scas
fwait
fwait
inc
jne
arpl
xor
push
lahf
cwtl
inc
sub
test
push
jle
fwait
pop
fcoml
cltd
cmp
faddl
popf
sahf
push
sti
int3
mov
lods
int3
mov
or
rorl
pop
shl
pop
stc
ss
std
pop
mov
out
dec
mov
or
rorl
dec
push
es
pop
popf
hlt
cmp
negb
and
in
jg
xor
sbb
lea
xchg
pop
in
hlt
sbb
ret
pop
je
fldt
inc
das
inc
fsub
mov
outsl
add
inc
xor
push
shl
pop
inc
roll
jne
sahf
xor
popf
jmp
popa
mov
scas
aad
jbe
cld
rorb
push
data16
mov
inc
popf
fisttpl
cmc
cmp
pusha
adc
cmp
fisttpl
adc
push
add
sub
or
mov
insl
cwtl
call
stos
inc
and
fnstsw
popf
in
mov
and
fwait
rcl
fstpl
int3
sbb
lret
out
ret
test
inc
sub
xor
add
fimull
lock
inc
jb
icebp
fdivl
lods
mov
sbb
subb
hlt
das
and
cmp
inc
shll
sbbb
xchg
sbbb
xlat
mov
lods
push
sub
xor
imul
and
ror
insb
or
dec
inc
add
pop
dec
shlb
into
test
es
je
mov
fstps
mov
or
push
ja
mov
inc
mov
jo
mov
out
movsb
add
xchg
cmp
mov
repz
popl
push
movb
push
sub
movsl
adc
sti
adc
in
or
aad
mov
jne
stos
stos
adc
jne
dec
pop
sub
jge
imul
and
out
inc
shrb
inc
mov
adc
popa
cld
mov
xchg
cltd
outsl
mov
and
push
xor
stc
mov
mov
dec
xchg
mov
je
mov
sti
scas
test
mov
scas
cmp
cld
push
dec
test
fstp
inc
sub
js
or
rol
mov
adc
repz
sahf
add
jbe
dec
push
fisubs
cmpsl
inc
push
stos
inc
mov
mov
jns
out
out
xchg
xor
fwait
aam
mov
pop
insb
jl
push
jo
clc
hlt
sub
clc
fidivl
inc
mov
popf
mov
or
loop
xor
mov
data16
test
repnz
out
push
dec
lock
adcb
imul
fstps
jno
fdivrl
push
ss
mov
addb
out
push
gs
xchg
lret
mov
adc
in
xlat
cmpsl
adc
insl
fildll
cmpsl
lds
lcall
jo
and
das
lods
and
xchg
ja
sbb
jns
jg
int
test
fdivrs
mov
mov
mov
mov
push
inc
or
sub
out
movsb
xor
movsl
cld
jecxz
jbe
mov
pop
mov
int3
inc
clc
add
imul
mov
lods
jecxz
sub
pop
test
stos
sbb
mov
jno
sub
add
arpl
add
xor
sbb
inc
dec
inc
out
cli
gs
mov
or
pop
cmp
jl
push
adc
repnz
cmpsb
out
sub
clc
xor
mov
aaa
scas
dec
push
pop
and
imul
jnp
into
push
jmp
inc
jns
pop
iret
and
cmpsb
sahf
push
cli
push
cmc
mov
popf
in
mov
xchg
imulb
mov
sbb
mov
add
lds
adc
int
iret
inc
cmp
in
ja
fs
add
movsl
sbb
sbb
std
xchg
xchg
bound
push
shrl
jp
gs
movsl
sbb
mov
xlat
mov
jno
xor
cld
mov
jecxz
mov
icebp
push
iret
dec
or
xor
and
aad
jns
cmpsl
insb
les
mov
dec
pop
pushl
sbb
xor
add
aam
inc
sub
test
fists
shlb
loop
aad
adcb
and
lea
jno
jno
push
add
lahf
mov
fbstp
and
jge
inc
loope
push
push
cmp
vminsd
ljmp
lret
and
in
fisubrs
aad
xor
imul
test
test
mov
insb
dec
mov
pop
daa
pop
xchg
push
or
inc
adc
fnsave
in
popl
sbbl
push
out
in
mov
in
cltd
scas
imul
cltd
nop
mov
outsl
add
rolb
int3
cmp
rcrl
jns
stos
fstpl
and
push
mov
cmp
call
outsl
jle
les
std
stc
or
arpl
sub
call
leave
lret
and
je
aam
pop
in
jle
xchg
loopne
mov
out
int
aaa
ret
mov
xchg
mov
out
inc
test
jns
test
and
add
movsb
sub
out
and
ss
ja
into
xchg
jnp
inc
icebp
mov
sarb
mov
loope
dec
loopne
icebp
xor
xchg
sti
out
aad
mov
ljmp
cmp
call
loopne
xor
clc
hlt
mov
add
dec
lret
xor
adc
add
or
cltd
ror
xchg
mov
fsub
mov
push
jle
pop
adc
fnstsw
sub
push
fstl
jle
sub
jae
dec
sbb
push
mov
mov
inc
sub
push
ror
xor
sbb
sub
mov
sbb
pusha
ja
xchg
js
cmpsl
push
adc
xchg
mov
xor
rcrl
out
pop
sbb
push
scas
pop
mov
stos
ja
inc
jnp
and
mov
add
popf
add
sbb
int3
sub
and
jp
cmp
popa
add
push
rcll
test
ret
xchg
repnz
xchg
sti
lahf
lret
sub
mov
daa
aaa
add
dec
jmp
loop
scas
addr16
fcmovbe
mov
rolb
dec
mov
rorl
loopne
nop
jno
ss
lret
xorl
scas
push
in
call
sbb
cmpsb
add
out
shll
mov
mov
cmp
bound
push
in
pop
push
out
push
sbb
xchg
shll
mov
sbb
int3
jae,pt
lods
mov
mov
push
mov
std
in
xlat
lret
mov
faddl
jae
mov
push
cmp
add
sub
jge
xchg
and
cmp
aaa
dec
and
lret
xlat
into
out
xchg
cwtl
lods
dec
add
jb
or
sti
ds
jg
sub
pop
mov
adc
cmc
dec
in
cli
lret
mov
lcall
xchg
cmp
xor
test
ljmp
in
ss
hlt
test
lret
mov
and
mov
mov
xchg
inc
leave
xchg
pop
fimull
sar
insb
mov
in
insb
in
test
psrld
inc
jbe
dec
lret
bound
jge
cmp
push
xchg
xor
mov
mov
sbb
push
lret
ficompl
fwait
push
dec
add
xchg
arpl
movsb
in
fs
and
cmp
fdivr
std
rcr
jo
test
mov
xor
into
fimull
cltd
repnz
notl
shl
cmpsb
pop
jge
or
mov
push
stos
cwtl
imul
pop
pop
sbb
adc
inc
les
mov
pop
scas
jne
mov
fidivs
rclb
inc
sbb
testb
cmp
mov
cmc
jmp
mov
in
cmp
jmp
andb
pop
icebp
mov
mov
faddl
and
mov
out
add
insb
adc
jns
cmpsb
fld
sub
lods
loop
xchg
cmp
add
orb
jle
stos
insl
mov
mov
repnz
push
adc
iret
mov
pusha
pop
mov
mov
movups
mov
loopne
xlat
or
ret
cmpsl
fsubrs
xor
cmp
add
aam
and
repnz
mov
imul
insl
xor
lock
jnp
insb
lcall
cmpsb
subl
xorb
inc
push
jne
pushf
cmp
sahf
dec
mov
jg
jl
fwait
clc
loope
cmc
mov
notb
fwait
sbb
jecxz
mov
adc
fwait
and
ljmp
lret
pop
pushf
in
js,pt
ret
mov
stc
cmpsl
in
xlat
adc
int3
jecxz
and
adc
cli
fdivl
shrl
dec
and
sarl
out
cmp
xchg
loope
mov
clc
int
adcl
sbb
and
test
mov
aas
sub
inc
loop
andl
cld
aaa
sbb
or
and
fidivl
add
mov
xor
adc
sahf
dec
ja
iret
xlat
add
push
ret
sbb
lock
sti
jb
testb
add
idivl
jle
stc
dec
int3
shrb
addr16
jp
out
in
test
xchg
push
mov
jecxz
out
lods
cmp
clc
sbb
push
xlat
push
and
mov
adc
ret
or
pop
and
jae
jae
sub
test
xchg
pop
sahf
or
xor
pop
cmp
test
fmull
leave
test
mov
jno
out
cmpsl
test
mov
push
mov
cmp
dec
jp
lret
call
imul
jns
push
cwtl
cmp
or
sbb
add
cmpb
jmp
pop
loope
enter
push
insl
lods
and
or
mov
and
mov
iret
push
in
in
cs
dec
sbb
cli
adc
les
loopne
dec
mov
mov
jo
lret
lods
and
pusha
pusha
jbe
cmp
sbb
xor
lahf
pop
cwtl
mov
in
sub
dec
jb
negl
pop
bnd
mov
xchg
or
outsl
cltd
pushf
icebp
inc
scas
inc
cmp
and
andl
sbb
jmp
cmpsl
xchg
adc
xchg
fists
ja
and
imul
bts
mov
cwtl
std
xchg
jns
int3
mov
ds
mov
push
jns
rclb
xchg
or
jl
inc
adc
lock
jmp
loop
gs
jge
ljmp
imul
mov
lcall
and
sar
adc
insl
insl
push
stos
lahf
stos
stos
sub
and
push
sub
gs
dec
jae
jo
push
jae
add
test
and
inc
sbb
pop
sahf
pop
sbb
pop
pop
add
and
in
ljmp
out
pop
cli
pop
insl
mov
sbb
jnp
lods
sbb
push
mov
dec
mov
data16
pusha
push
sbb
jmp
ret
xorl
mov
in
mov
add
xchg
xchg
xlat
int3
aad
mov
clc
in
dec
imul
adc
xor
divl
inc
sbb
incl
outsl
sbb
ret
pusha
outsb
or
shlb
test
push
clc
sbb
in
mov
test
aam
scas
bound
enter
inc
mov
pop
cvtps2pi
adc
lret
mov
pop
test
and
pop
mov
loop
notb
add
mov
imul
xor
inc
test
rcr
pop
hlt
dec
cmp
jno
scas
and
inc
lcall
fadd
js
cmpl
mov
dec
xchg
push
out
jb
sbb
lds
outsb
dec
xchg
xchg
jle
sbb
rcrl
mov
or
enter
push
movsl
mov
sub
sbb
ljmp
sub
and
jbe
or
mov
push
adc
and
negl
xlat
push
xchg
ja
dec
sub
mov
and
xchg
sahf
mov
mov
jae
and
and
xchg
and
pop
pop
cmp
mov
push
fwait
mov
jmp
pop
lret
xchg
adc
sbb
loop
adc
push
mov
cmp
xchg
mov
leave
lret
shll
mov
mov
mov
sti
fsubr
cmpsl
push
cmp
xor
mov
das
mov
pop
adc
jl
movsl
nop
mov
in
cmpsb
dec
insl
lcall
sbb
xchg
adc
inc
mov
lret
fwait
mov
cmpsl
notl
pop
mov
xchg
clc
dec
jo
das
xchg
cld
xchg
mov
mov
call
mov
hlt
stos
mov
jne
out
adc
in
scas
or
iret
xor
imul
xchg
adc
push
push
sbb
cmp
xorl
cltd
aam
push
or
jne
mov
nop
or
shll
dec
mov
roll
test
setbe
adc
repnz
cmp
sbb
sbb
dec
jbe
push
xor
xchg
icebp
clc
mov
xchg
cs
daa
jmp
mov
lock
repnz
cltd
shlb
in
sub
inc
pop
ret
fdiv
mov
mov
sbbl
pop
loopne
push
stos
or
dec
and
mov
xchg
cwtl
sarl
xchg
inc
jmp
or
mov
inc
push
pop
out
std
cmp
dec
int3
shlb
xchg
dec
sub
or
jl
pop
jne
scas
jg
movsl
imul
xchg
shlb
pop
mov
cmp
push
push
adc
adc
cmpsb
sub
adc
aad
inc
cli
dec
in
pusha
push
in
jge
bound
push
xchg
loop
hlt
xchg
idiv
in
inc
cmc
xchg
jns
pusha
xor
xchg
repnz
pop
add
inc
jg
push
jl
in
pop
inc
sbb
sub
jb,pn
rcr
mov
je
std
dec
aas
push
sub
mov
sbb
arpl
xchg
fnstsw
jl
leave
data16
mov
leave
mov
pop
into
lods
cmc
pop
jg
sub
inc
loop
loope
pop
mov
push
sbb
lcall
jb
fildll
mov
sbb
loopne
movsl
stc
or
jnp
mov
cmp
insb
and
fisttpll
into
lock
sub
inc
adc
and
jbe
mov
mov
sub
mov
pop
or
cld
lods
add
int3
pop
pop
imull
loop
xlat
jns
sbbl
inc
jmp
lret
xchg
pop
jp
lcall
xor
cwtl
sub
lock
outsl
in
into
mov
cmp
in
mov
test
adc
adc
stos
shrb
add
insb
sbb
jmp
div
sub
std
scas
lret
mov
jne
lds
dec
cmc
mov
lods
add
ds
cmp
sahf
fwait
loop
fwait
inc
hlt
loop
pop
jp
adc
jns
loopne
and
rcrb
cmp
gs
mov
lcall
adc
sbb
ja
mov
sub
xchg
sub
int
mov
pop
mov
jb
push
int
mov
adc
pop
cmc
icebp
in
mov
dec
pop
stos
push
inc
adc
xchg
shl
mov
push
decb
jnp
out
fisttpl
addb
add
ljmp
cli
arpl
inc
inc
loope
sbbl
pushl
push
push
sbb
std
sbb
jno
shl
inc
pop
adc
pop
frstor
and
out
mov
mov
push
in
sub
mov
sub
dec
es
xchg
xchg
ss
push
je
push
ss
mov
loope
ret
add
sbb
enter
cvtps2pd
jl
nop
sbb
push
std
aas
mov
aas
jmp
mov
cmpsb
les
hlt
ret
push
push
sub
inc
lods
push
hlt
jmp
leave
xchg
sub
std
xchg
or
xchg
xlat
mov
jmp
fnstenv
add
clc
popf
add
rorl
jns
sub
pusha
cs
hlt
and
ror
in
std
xchg
jb
xor
test
and
cltd
sub
pop
adc
sbb
or
pop
out
mov
scas
xor
jae
sbb
aam
mov
xchg
ret
andl
lods
std
lcall
insl
scas
dec
stos
xchg
mov
es
or
pushf
les
mov
aad
negb
negl
in
cli
fcomp
push
lods
lret
jmp
cmp
aas
mov
xor
das
xor
lods
jb
mov
orb
or
mov
bound
xchg
mov
test
int
cwtl
adc
xchg
cmpl
xchg
xchg
mov
dec
fistps
jns
sub
cs
jge
mov
fcoml
cmp
jnp
push
bound
scas
mov
stos
adc
dec
repnz
xor
nop
loope
movsb
inc
xor
mov
xorl
inc
inc
dec
push
jnp
lahf
ret
pop
repz
jo
lods
adc
outsb
cmp
jp
lock
jbe
arpl
inc
dec
call
cmpsl
adc
movsl
imul
daa
lods
pop
jg
jo
imul
xchg
call
out
inc
mov
mov
lds
daa
mov
add
stos
sahf
nop
sub
jecxz
jmp
lea
movsb
xchg
cli
arpl
mov
mov
in
pop
sbb
or
and
addb
aas
imul
dec
movsb
outsb
popa
sahf
xchg
mov
mov
mov
lock
jl
test
aaa
pop
lcall
jae
addr16
pop
enter
adc
sub
pop
int
sub
imul
mov
stos
mov
addl
mov
sbb
push
or
xchg
sub
inc
adc
loopne
pop
sar
das
add
in
stos
pop
popf
ja
and
mov
mov
fcoml
scas
or
adc
int
xchg
lock
loopne
jae
mov
imul
push
push
in
ja
pop
int3
mov
mov
js
cmp
arpl
nop
sub
adc
and
jnp
addr16
mov
insl
addr16
mov
sarl
inc
dec
int
sub
push
jbe
lret
and
jb
ret
inc
mov
pushf
push
mov
push
es
cld
fcoms
lods
xlat
cs
dec
cmp
int
lret
repz
lcall
jge
mov
xchg
outsb
push
das
jmp
cmp
adc
cmp
fidivs
out
mov
mov
and
jmp
aas
jne
aad
popa
mov
sub
mov
jns
and
gs
aaa
insb
and
add
sbb
adc
push
sub
imulb
cld
subb
nop
add
cmpsb
adc
adc
inc
in
js
cmp
xor
in
sbb
mov
add
stos
arpl
sub
xchg
mov
imul
sti
dec
mov
das
or
addr16
sbb
out
pop
add
xor
jmp
pop
jecxz
jbe
push
dec
mov
leave
sub
cmp
sub
xchg
pop
jmp
daa
mov
pop
add
ja
adc
mov
mov
jge
ds
outsb
adc
into
push
pop
push
xchg
js
xor
jo
push
test
stos
arpl
xor
pop
lret
jl
lods
jae
lea
push
mov
add
test
adc
hlt
mov
jge
jb
leave
sub
dec
bound
cmp
add
lret
sbb
fwait
std
decl
lea
sahf
cwtl
rcll
push
or
js
xor
mov
push
lea
lcall
pop
sub
and
jae
jne
cmp
adc
in
jb
mov
xchg
push
lcall
pop
int
sbbb
stos
test
fnsave
fs
ret
ret
cmp
mov
sarb
inc
lahf
add
jns
push
jbe
das
jmp
andl
or
data16
inc
or
xchg
cmp
jnp
mov
sub
stos
popa
mov
popf
dec
ljmp
add
inc
divl
lods
jmp
mov
xor
add
add
push
dec
adc
in
es
pop
iret
mov
pushf
ret
mov
cli
dec
pop
adc
les
daa
dec
dec
xor
fnstsw
jne
repz
xchg
xchg
jbe
into
outsl
daa
test
and
sahf
cmp
adc
push
cli
or
or
int3
push
push
test
sbb
xor
push
add
shlb
sub
dec
pop
mov
cli
loop
fwait
mov
mov
pop
add
xor
int3
ds
inc
test
pop
stos
es
dec
push
scas
repz
test
xor
add
stos
nop
sti
outsl
lods
pop
popf
je
sbb
testb
or
jmp
outsb
ds
adc
adcl
aaa
repnz
aam
imul
add
je
inc
shlb
sbb
arpl
rclb
sub
sahf
add
ljmp
push
mov
int3
in
out
pusha
dec
push
outsl
sbb
mov
icebp
fstp
aad
dec
negb
sbb
pop
mov
cs
xchg
jecxz
popf
sbb
push
pop
int
loopne
sahf
into
jmp
aaa
scas
jno
mov
movsl
jb
push
inc
xor
lea
test
jns
jp
jecxz
jne
ror
js
gs
cltd
xor
fisubl
mov
in
mov
ficompl
xchg
out
incl
out
sbb
xchg
add
mov
lods
and
test
fwait
test
movsb
or
jmp
dec
and
xchg
jnp
cmp
test
out
xchg
jb
in
sbb
sbb
sub
push
mov
lret
push
idivb
bsr
mov
jo
mov
ds
lret
mov
dec
fstps
push
sub
outsl
out
das
mov
jb
ja
jg
sbb
scas
mov
xor
icebp
subb
out
test
js
enter
xchg
xchg
scas
xor
fisubrs
and
and
lods
inc
icebp
inc
out
inc
lods
aam
imul
test
lret
mov
clc
test
scas
ja
rolb
push
inc
out
fwait
xchg
xchg
movsb
out
ret
or
loope
xchg
or
or
mov
orl
push
xchg
xor
dec
cmp
jnp
lcall
adc
es
insb
fnsave
test
aaa
jae
mov
sti
inc
mov
push
xchg
push
ret
adc
fdivs
and
lret
mov
leave
cld
pop
push
pushf
ds
popa
pop
cmpsb
int
dec
sti
cli
mov
stc
push
cmp
in
and
cli
mov
cltd
aam
cmp
dec
push
add
dec
jns
repnz
xchg
and
icebp
lock
ret
in
sub
mov
xchg
shll
mov
lods
in
or
and
mov
jge
ss
jbe
into
mov
lds
shll
aam
and
sbbb
cmp
movsb
and
aas
fsubrs
lods
inc
xor
xor
jmp
or
loopne
shlb
jmp
xchg
lret
inc
call
mov
imul
es
pop
in
dec
out
fcompl
jo
ds
loopne
inc
ljmp
jle
mov
out
mov
cmc
adc
leave
fs
nop
cmpsl
sbb
ljmp
push
imulb
fsubrl
jmp
out
add
out
ror
addr16
pop
xlat
jbe
adc
sahf
adc
ds
gs
xchg
add
insl
ret
aam
sbbb
je
int
mov
out
sub
out
pop
push
icebp
pop
sbb
iret
push
clc
sbb
mov
bound
cmc
repnz
sbb
xor
cmp
or
push
lahf
cs
jo
aam
test
ss
push
jo
mov
mov
sub
subb
mov
adc
push
xchg
xor
jo
dec
das
sub
push
dec
pushl
arpl
fiaddl
mov
sbb
jnp
mov
ljmp
sub
mov
call
roll
scas
cltd
cmp
lods
int
out
enter
adc
cli
aas
jne
arpl
push
sbb
xor
sub
xchg
xchg
into
ret
es
loopne
add
cmp
movsl
lcall
mov
fucom
or
or
jb
cmpsb
jae
je
pop
fidivl
and
pop
hlt
movsl
sub
lods
aaa
jle
shll
fisubl
insb
enter
and
jne
mov
jb
out
adc
inc
addr16
sub
imul
sbb
xchg
pop
ds
or
xchg
addr16
rclb
sub
fidivs
shlb
hlt
addr16
xchg
and
xchg
inc
test
cmp
push
int
rol
pop
clc
notb
dec
mov
lcall
outsl
mov
push
add
test
sub
aaa
pop
sbb
imul
cmp
insl
hlt
and
jns
jo
loop
mov
cli
gs
lock
add
add
add
jecxz
insb
push
jl
add
mov
adcb
inc
push
inc
mov
cld
cmp
mov
push
and
xchg
cltd
jge
int
into
jo
mov
rolb
mov
outsb
cmp
jb
popf
sbb
imul
cmp
inc
andb
sub
adc
push
mov
mov
cwtl
sbb
or
stos
pop
scas
test
cmpsl
xor
cmp
cltd
jp
int
lock
cs
or
in
mov
mov
sbb
mov
sbb
jl
pusha
fstp
cmpsb
adc
mov
cli
shlb
sbb
in
xchg
add
incb
cmp
push
out
icebp
popa
jl
mov
mov
les
and
aaa
testb
mov
mov
sbb
std
add
adc
ljmp
orl
xchg
popf
sbbl
repnz
sub
adc
push
testl
jl
mov
cmp
mov
mov
mov
xor
add
inc
js
mov
add
test
subb
dec
mov
mov
dec
stc
add
movsb
insb
insb
mov
push
psubusw
fwait
shl
cwtl
xchg
movsl
and
mov
mov
negb
lods
pop
xor
lock
xor
dec
pop
fisubrl
xchg
mov
mov
xchg
adc
jmp
push
scas
jl
in
cltd
push
push
push
aas
push
addr16
out
outsb
inc
inc
sarb
pop
in
sti
test
adcb
lahf
jmp
rcll
in
shl
imul
cmp
test
push
fwait
or
dec
ds
jl
in
daa
jge
sarl
or
bound
imul
dec
xchg
jno
mov
dec
xchg
mov
aaa
addr16
jae
arpl
inc
cmp
sbb
stos
cli
jo
mov
xorl
aad
jle
fsubrs
sbb
mov
cmpsb
dec
push
xchg
gs
xor
push
push
cltd
push
lret
xchg
adc
leave
data16
mov
cmp
int
jae
ja
movsb
scas
push
cld
sub
rclb
jae
cmpsb
test
imul
int
or
lcall
mov
or
or
dec
sub
pop
mov
cmp
xorl
mov
bound
pop
inc
icebp
mov
testb
sti
jns
sub
sahf
inc
mov
add
mov
jecxz
fidivl
lea
pusha
and
add
lock
jae
and
inc
pop
jl
lret
mov
loopne
roll
popa
jae
fcmovne
or
push
jle
les
addr16
out
and
lret
loop
lods
rcll
adc
xchg
push
fistps
sub
push
test
push
mov
fsub
mov
mov
mov
fwait
popa
pop
lods
jne
mov
fmull
sti
jne
je
bound
std
add
rorl
lahf
shrl
daa
push
xor
add
inc
mov
jp
aam
and
test
arpl
pushf
stos
mov
push
inc
pushf
fs
sub
mov
cwtl
inc
in
repnz
mov
ds
stos
pop
call
dec
sub
jmp
ror
pop
and
lret
cmc
pop
push
sub
inc
addr16
ret
das
mov
mov
out
aaa
jle
cld
iret
aam
popf
in
iret
sbb
adc
out
arpl
cmp
mov
add
xchg
sub
mov
add
rolb
xchg
lock
mov
roll
lahf
lahf
and
push
stc
lods
insb
bswap
or
lods
adc
icebp
sbb
sub
std
mov
mov
adc
xchg
mov
mov
cmpsb
mov
xchg
testb
rorl
inc
fiaddl
xorl
mov
dec
cld
imul
fiaddl
rcrb
jnp
nop
popf
aaa
cmp
lahf
jp
or
cmp
sub
cltd
aad
lcall
loope
push
mov
lods
rolb
sarl
lcall
je
and
fstpt
jb
test
push
iret
in
pop
je
stc
sbb
xlat
push
mov
loope
les
jl
je
dec
cmpsb
push
inc
adc
mov
cli
pusha
or
xchg
push
or
mov
ror
lret
or
cmp
fcmovnbe
stos
stos
test
xlat
or
shll
xchg
movsb
rol
imul
in
mov
stos
cmpsb
xchg
loop
mov
leave
inc
pop
orl
inc
jge
pusha
out
es
out
bound
mov
pop
mov
in
jmp
daa
pop
inc
insb
jl
sbb
inc
cmp
pushfw
push
test
outsl
jns
mov
sub
and
mov
fstps
movsl
pop
push
ret
in
dec
test
dec
test
out
push
or
xchg
xchg
ja
mov
test
jg
adc
lcall
mov
stc
in
cmp
lret
dec
sti
es
xchg
sbb
inc
mov
mov
loopne
and
lahf
xchg
xchg
pop
outsb
std
xor
cld
cwtl
jnp
sbb
je
sub
dec
fs
xor
test
enter
testb
push
xor
push
xchg
les
fxch
pop
lds
push
test
pop
dec
out
xor
test
les
pop
mov
ljmp
xchg
sti
xor
xor
adc
movsl
aas
sbb
ds
sbb
shlb
loopne
add
ret
dec
pusha
add
and
adc
ret
ror
loop
fdivl
mov
call
arpl
nop
orb
inc
or
mov
scas
push
sar
fadds
nop
push
dec
test
cmpsl
dec
sub
imul
inc
data16
stos
addr16
push
xor
pop
push
popf
into
rcl
or
orl
sbb
push
xor
push
shll
inc
jmp
cmovl
xchg
jns
push
les
adc
out
movsb
add
fsubs
cmp
pop
in
lcall
or
in
pop
inc
jbe
push
jmp
loop
push
sahf
int
cli
insb
cli
inc
add
or
int
sbb
and
fld
sbb
out
lahf
arpl
push
sub
jnp
pop
dec
mov
mov
push
cmc
loop
sub
pusha
cmpsl
je
addr16
and
ret
dec
movsb
jl
out
mov
cmp
rclb
imul
and
fidivrl
push
ja
dec
leave
xchg
js
or
fnstenv
inc
adc
lahf
xchg
mov
cmp
push
mov
pop
mov
stos
mov
mov
aad
call
xchg
lret
xor
mov
add
xchg
cmpsb
pop
and
sti
adc
jle
cmc
out
sbb
xor
xchg
dec
cmpsb
xchg
js
test
and
jbe
jge
aaa
icebp
adc
or
jle
or
imul
adc
jg
jae
and
aam
cwtl
inc
int3
test
js
rclb
mov
xchg
out
movsb
scas
cmp
hlt
and
sahf
scas
pop
and
out
out
mov
rcrl
data16
sub
call
xor
lcall
cmc
les
mov
cmpsb
add
mov
mov
enter
sti
mov
inc
push
xchg
mov
push
and
jg
push
and
inc
sub
inc
sub
inc
add
or
setns
repz
int
loop
and
xor
cmp
sbb
add
sub
mov
xchg
xchg
ss
dec
pop
sbb
mov
das
jmp
pop
adc
adcl
in
sbb
pop
imul
sbbl
stos
nop
insb
xchg
or
mov
jecxz
scas
mov
out
fistpll
fldl2e
and
sbb
pop
pop
int3
pop
xlat
popl
pusha
mov
inc
repnz
and
dec
xor
sbb
into
loopne
es
insl
sbb
loop
push
jno
jbe
add
pop
jb
jg
fdivl
add
mov
test
sub
xchg
ror
cmc
rcrl
movsl
push
pop
push
sub
push
mov
repnz
movl
sbb
fcompp
sbb
push
cmpb
xor
lcall
rcrl
and
cltd
je
faddl
xchg
lock
in
ret
xor
repnz
sbbl
lret
in
ficoms
sbb
clc
push
ret
jecxz
add
sbb
inc
mov
and
pop
loope
cmp
mov
mov
notl
pusha
out
sbb
std
andl
jl
sub
loopne
addb
sbbl
popf
mov
sbb
sub
inc
jp
cmpsl
rolb
loopne
dec
cltd
pusha
out
shrb
fs
cmp
arpl
popa
push
hlt
jae
mov
loopne
mov
cmp
push
add
mov
out
sbb
imul
in
jbe
cmpb
popl
cli
xchg
ss
outsb
mov
imul
filds
lods
fmuls
imul
ret
pop
cmp
mov
fldcw
scas
add
add
inc
arpl
rcll
mov
sub
push
mov
mov
ret
dec
jno
fldl
push
andl
stc
ficoms
mov
dec
sbb
int
pop
and
fwait
bound
push
mov
inc
jl
iret
sub
fdivrs
mov
pop
in
pop
push
lds
das
mov
addl
jno
testl
and
mul
inc
sub
push
insb
mov
mov
xor
enter
jl
xorb
andb
cmp
std
xor
mov
iret
xchg
daa
ds
stc
iret
jne
cmp
sub
cmp
lret
leave
test
push
sub
xchg
push
mov
jmp
add
dec
and
push
mov
pop
dec
pop
shl
dec
xor
mov
cmp
pop
int3
xor
push
dec
movsb
pop
aam
jo
pop
stos
push
popf
inc
mov
stos
nop
jmpw
cmpsl
mov
popa
in
jo
or
mov
je
pop
cmp
xor
rolb
or
loop
push
sbb
in
jg
mov
push
cmp
mov
dec
out
inc
int3
aaa
in
pusha
nop
sbb
lods
stos
call
paddsb
les
jg
ja
iret
jns
repnz
push
and
testl
jno
sarl
add
adc
add
ljmp
imul
and
push
fucom
ljmp
add
in
daa
lds
inc
cld
hlt
mov
inc
popf
pop
out
testl
fs
mov
mov
imul
push
cmp
xchg
and
push
ljmp
int3
fcoms
in
sbb
or
jl
fisttps
sub
rclb
mov
js
or
inc
mov
in
pop
push
cmp
fisubrs
flds
xor
xor
jg
pushf
mov
imul
jg
add
sbb
sub
fisubs
shll
scas
mov
stc
loope
clc
flds
scas
push
xor
roll
jbe
jbe
pop
and
imul
inc
jge
xor
sbb
std
out
stc
call
cmp
sbb
sbb
subl
aaa
pop
aas
insb
icebp
xchg
pop
stc
jnp
xlat
pop
inc
lret
lret
aam
lock
push
out
test
push
fmuls
out
pop
jns
mov
mov
push
cwtl
jnp
mov
jnp
mov
dec
inc
xchg
mov
pushf
xchg
mov
shll
mov
call
adc
xchg
sbb
dec
cmp
inc
lock
mov
push
sbbb
pop
mov
dec
inc
and
push
add
xor
mov
inc
mov
mov
dec
inc
ds
syscall
push
mov
lods
ret
jecxz
dec
push
mov
lea
sub
lods
xchg
leave
icebp
stos
cwtl
cmc
loope
test
cmp
lret
xchg
les
or
aam
divb
inc
mov
in
lcall
ljmp
aas
push
jns
pop
mov
in
test
cmp
sbb
add
xchg
jg
or
adc
ror
mov
mov
mov
and
dec
xor
or
or
roll
adc
push
movsb
lock
in
mov
mov
int
cmpsl
mov
aad
cli
adc
jo
pop
in
out
es
inc
pop
outsb
sbb
cld
pushf
mov
xchg
int
je
cmp
mov
xor
xchg
sbb
shl
das
push
and
inc
out
clc
test
cmc
push
xchg
aad
mov
fdivrl
insb
push
mov
mov
aam
sub
adc
or
addr16
scas
hlt
insb
or
daa
cmp
das
push
mov
push
mov
cmpb
add
xchg
cli
inc
cmp
ficoms
and
cmpb
in
loopne
test
cmp
mov
inc
mov
lods
add
ja
rorl
lea
sub
mov
dec
jo
rolb
fistps
sbb
cmp
pushf
cmp
scas
jle
cmp
push
add
inc
orb
jbe
add
sbb
push
loop
fnstenv
lock
ds
cltd
movsl
sarb
inc
data16
fdivs
xchg
add
jp
mov
add
mov
gs
mov
call
push
mov
xchg
pop
icebp
jae
push
mov
sub
js
pop
fmul
fdivr
iret
sub
mov
scas
adc
xorl
aas
loope
mov
in
outsl
xchg
std
aas
dec
daa
xor
sub
sub
inc
push
mov
xchg
clc
rclb
lret
mov
ret
imul
out
fstps
cwtl
adc
mov
add
inc
out
cmp
push
mov
les
lret
insb
pop
popf
push
in
push
iret
rolb
scas
idivb
je
imul
popa
add
sbb
jp
cmp
cmp
sbb
sbb
ss
test
pop
adc
lods
and
dec
cwtl
inc
dec
lds
aad
mov
sbb
mov
dec
cli
stos
out
and
push
push
mov
sub
lock
or
hlt
in
or
mov
cmp
sub
jnp
add
loopne
push
out
adc
pop
test
push
pop
push
and
push
popf
bnd
push
lahf
gs
inc
data16
and
pusha
lods
add
jg
dec
xor
xor
cmpsb
das
pop
cmpsl
mov
daa
mov
into
das
out
xor
in
or
aas
cmc
xor
into
jmp
frstpm(287
stos
fidivl
inc
ds
mov
or
jns
scas
jg
les
shrb
mov
adc
mov
test
pop
cwtl
inc
sbb
insb
shll
pop
sbb
push
pop
arpl
add
mov
mov
adc
fwait
hlt
add
pushf
dec
push
roll
shlb
jnp
adc
cmp
cmc
enter
sub
sbb
pop
pop
cmc
test
in
adc
in
cmc
repnz
or
or
sbb
push
xchg
mov
add
sbb
lods
loopne
mov
xorl
rorb
daa
sti
call
loopne
frstor
fucomi
dec
pop
das
fidivrs
test
dec
dec
push
mov
pop
mov
jle
mov
out
aam
push
mov
aaa
out
hlt
xchg
inc
mov
pop
jle
jo
outsb
sbb
push
icebp
int
sub
push
data16
mov
insl
push
mov
into
sbb
cmp
lods
mov
movsb
out
test
adc
sbb
js
cli
popf
push
push
movsb
cli
sarl
jg,pn
mov
push
add
lods
movsb
lcall
cmp
cmp
sub
mov
pop
bound
jnp
mov
xchg
ret
sub
mov
pusha
pop
scas
arpl
int
and
pop
cld
out
subb
xchg
imul
lods
sbb
push
cmpsb
into
adc
or
mov
mov
notb
sbb
push
mov
dec
add
stos
std
cmpsl
test
jb
mov
lret
add
sbb
negl
lahf
push
push
jmp
lret
or
dec
fldenv
ljmp
arpl
movsb
mov
fsubrs
dec
sbb
xchg
lcall
push
dec
sbb
fwait
or
jp
xlat
addr16
dec
fsub
aam
pop
pop
xchg
jle
inc
insb
repnz
xchg
xchg
jbe
ljmp
fists
je
mov
cmp
out
add
or
jbe
divl
mov
cmp
cld
add
fsubl
inc
mov
or
xchg
mov
fisttps
xrelease
aad
sub
mov
jmp
addl
pop
xor
daa
nop
pcmpgtd
sbb
sub
xor
push
adc
sbb
sbb
jl
ljmp
xchg
mov
cmp
testl
and
jno
mov
test
aas
out
xchg
hlt
adc
or
push
lock
int
sbb
fmull
sahf
jl
loop
dec
int3
and
mov
pushf
dec
movsb
aas
xlat
into
sbb
jbe
mov
lock
inc
insl
fistpl
add
push
leave
lret
mov
jbe
imul
push
mov
les
xlat
cmp
add
out
arpl
xchg
dec
cmp
testb
mov
and
stos
mov
pop
mov
jno
mov
mov
push
cwtl
push
test
push
adc
test
cmp
xor
je
cmp
inc
out
push
xor
xor
mov
mov
adc
jne
xor
enter
imul
push
clc
shll
int3
xchg
pop
andb
scas
mov
sbb
mov
ret
mov
in
add
psubsw
mov
fcmovne
les
dec
xchg
or
movsl
xchg
sahf
jmp
mov
add
xor
mov
xor
in
jp
test
push
mov
push
cmp
pop
jb
dec
xchg
aaa
cs
mov
cld
icebp
rep
sbb
stc
test
mov
loope
and
sub
dec
dec
enter
xchg
ds
jp
push
fmul
xchg
inc
cwtl
xchg
mov
push
ret
test
out
les
mov
jl
add
mov
jae
and
rcl
push
popa
das
mov
and
mov
sub
imul
sbb
hlt
cmp
and
enter
sti
sbb
jo
int3
sbb
addb
sbbl
cmpsb
sbb
push
mov
cltd
inc
mov
cli
sbb
cmc
idiv
xor
xorb
pop
cmpsl
xchg
fwait
mov
loopne
xor
loop
cmp
shrl
sbb
scas
test
insb
dec
out
pop
imul
leave
and
mov
lods
xor
push
push
xor
rolb
pop
cmpsb
repnz
xchg
mov
outsb
mov
pop
jmp
inc
and
ljmp
aad
call
lock
mov
xlat
test
in
sub
in
scas
pop
fucomip
stos
push
pop
dec
sbb
sbb
mov
push
push
pop
shlb
jmp
ret
popa
push
ljmp
pushf
lahf
adc
je
push
adc
sar
loopne
aas
xor
popf
es
sbbb
inc
and
stc
test
jmp
sti
mov
in
inc
dec
inc
push
jne
xor
pusha
mov
mov
xor
pop
in
movsb
xchg
arpl
xor
inc
inc
adc
loopne
mov
jmp
add
cmp
aaa
or
inc
sbb
cmp
outsb
imul
add
push
inc
dec
popa
repnz
adc
insb
and
cmp
inc
xchg
xchg
aad
ret
cmp
adc
jg
das
nop/reserved
dec
mov
sbb
sub
pushf
enter
mov
scas
cmp
cmp
mov
inc
xor
dec
mov
cmpsl
movsb
in
push
add
cmp
or
out
inc
and
cmp
and
pop
inc
pop
leave
cltd
adc
push
iret
sahf
inc
xchg
test
faddl
mov
mov
mov
out
lret
int3
or
mov
mov
ss
pushf
in
xchg
movsl
insb
subb
sub
ljmp
outsl
ror
orl
add
and
xchg
aam
xchg
add
ret
adc
mov
dec
adc
sub
or
test
inc
cmp
in
mov
xchg
sbb
push
xor
pop
or
dec
pushf
xchg
push
adc
in
cltd
rcl
in
ret
jmp
jle
sub
out
xchg
dec
add
push
and
pop
nop
ja
movsl
jecxz
loope
in
out
mov
bnd
mov
fnsave
fisubs
fisttps
jmp
into
sbb
jmp
fwait
cmp
xor
push
add
lret
pop
fwait
xchg
add
jge
mov
add
inc
out
fbld
mov
sti
ret
jp
xchg
sub
sub
dec
pusha
or
mov
rcrl
mov
das
icebp
push
adc
leave
cld
cltd
pop
and
mov
jmp
mov
pop
leave
aam
fs
push
xlat
out
mov
fidivrl
mov
jb
cmpsl
or
mov
scas
pop
dec
repz
xor
loopne
stos
xor
pop
push
lock
fcoms
ljmp
mov
ret
out
sahf
jp
lret
stos
or
mov
int
xchg
sub
xor
shlb
iret
loop
mov
pop
push
pop
push
and
xchg
mov
push
ds
testb
arpl
push
xor
or
jbe
or
xchg
mov
fwait
push
push
push
fs
test
xor
shr
cli
out
mov
pop
inc
dec
lods
scas
mov
xchg
shl
loopne
leave
mov
icebp
fisubs
pop
int
mov
loopne
push
push
inc
lret
fcmove
or
ds
cwtl
mov
jle
fcos
jg
fildl
pusha
aas
shlb
mov
int3
mov
ja
pop
inc
sarl
mov
rol
shlb
jbe
push
xor
loopne
in
cmpsb
gs
jge
inc
sahf
sarl
scas
pop
scas
aaa
adc
imul
fcompl
xor
cmp
pop
xchg
and
movsl
iret
sub
shll
or
fstl
rcrl
cmp
lea
notl
fsubl
xor
dec
negb
adc
dec
sbb
lock
outsl
fst
jecxz
add
aad
ja
popf
mov
xor
cld
sub
jmp
jmp
cmc
push
sbb
jnp
js
push
or
out
cmp
push
adc
push
cltd
mov
mov
cmpsb
fadds
mov
dec
daa
xlat
shrl
cmp
jle
sbb
sbb
mov
in
stos
push
hlt
or
add
xchg
mov
inc
jl
xchg
adc
stos
repnz
pop
test
fdivp
sub
and
cmc
xchg
push
insb
cmp
mov
cmpsl
jns
ja
stos
xchg
arpl
pop
stos
aad
sub
stos
jmp
cmp
mov
xchg
mov
inc
jb
bound
leave
data16
icebp
pop
inc
ss
test
popf
pusha
fimull
cwtl
jo
sbb
loop
cltd
mov
pop
movsl
scas
fxtract
idivb
jns
fsubrs
mov
and
xchg
data16
faddl
out
xorb
sub
dec
sub
call
pop
mov
or
scas
or
adc
lea
cmp
push
and
es
rcrb
mov
sahf
bound
push
mov
jb
pop
fisubs
push
jp
push
gs
sub
das
enter
xor
inc
push
adc
das
in
aas
xor
or
cmpb
fistl
jle
icebp
cmc
mov
xchg
pop
ret
int3
mov
test
sbb
inc
outsl
push
xchg
int
dec
push
push
cli
sbb
mov
das
and
ret
dec
into
jno
adc
cs
les
sub
and
xchg
jnp
mov
lcall
movsl
les
jg
enter
and
push
xor
xchg
add
arpl
movsb
pop
mov
frstor
mov
test
xchg
idivl
loop
wbinvd
jnp
sub
insl
notb
test
lcall
bswap
xor
sti
test
push
jg
stos
pop
stos
dec
stos
inc
inc
les
sbbl
aam
mov
outsb
inc
aad
fmuls
mov
mul
mov
pop
in
xor
xchg
dec
cmp
movsb
cmpsb
sbb
cs
inc
insb
ds
mov
jae
cwtl
arpl
scas
pop
push
in
cmpsl
sbb
out
dec
mov
repnz
pop
fdivrl
adc
adc
fstl
mov
fincstp
push
leave
stc
cmpsb
mov
repz
xor
inc
mov
in
xor
shll
repz
test
cmp
adc
cld
outsl
push
in
push
scas
jns
stos
movsl
in
notl
cltd
sub
stc
pop
adc
sahf
loop
pop
faddp
testl
dec
scas
xor
dec
xchg
jg
jl
push
dec
mov
mov
ljmp
cwtl
lea
cmp
mov
and
daa
test
xor
rorb
mov
je
or
rcl
add
subb
dec
push
adc
test
jmp
icebp
out
adc
cmpsb
clc
push
cli
push
xlat
mov
sub
cs
shl
add
rorl
inc
adc
into
clc
les
lret
sub
aaa
push
adc
cmpsl
mov
xchg
jmp
dec
fimull
xor
rorb
mov
mov
adc
rol
fdivrs
cwtl
mov
pushf
push
sti
xchg
jnp
and
push
adc
mov
xchg
pop
or
rep
ret
xor
xchg
jecxz
divl
or
push
dec
push
rorb
fucompp
add
es
xchg
lds
gs
xorb
hlt
dec
jb
xchg
sub
hlt
outsl
outsl
testl
sti
xorb
popf
aas
loope
aam
jg
aaa
inc
cmpsb
mov
out
bound
mov
cmc
loope
dec
scas
jnp
mov
movsl
std
imul
not
aas
pop
sub
idivl
push
popf
jb
or
shll
imul
lock
and
rcll
xchg
jmp
cmp
jle
pop
mov
insl
daa
or
xor
nop
lahf
call
xor
pop
rcl
outsb
mov
add
imul
hlt
sbb
jp
arpl
data16
mov
lds
xor
lret
imul
cmp
imul
stos
dec
xor
notb
and
testl
mov
jmp
lret
bswap
std
negb
pop
push
inc
or
xchg
jmp
xchg
pop
popa
sbbl
out
notb
pop
sbb
mov
jbe
cwtl
jecxz
inc
ljmp
in
fnstsw
sub
xchg
fcmovb
mov
mov
xchg
mov
imul
xchg
int
and
sbb
daa
jge
pop
insb
fsincos
inc
xchg
and
outsb
aam
mov
daa
jbe
push
lds
fwait
repz
mov
mov
pop
cmp
das
lcall
dec
iret
mov
loope
jne,pn
loope
dec
push
mov
in
sbb
push
xchg
gs
add
jo
fucom
cmpsb
dec
lods
push
mov
pop
sahf
movsl
mov
xor
outsl
push
mov
enter
inc
lock
movsb
hlt
arpl
aad
mov
dec
bound
xchg
lock
aam
xor
imul
xor
loop
aad
in
pusha
push
lds
jnp
sub
adc
xor
popl
add
dec
pop
lret
mul
in
das
decl
adc
dec
adc
rorl
pop
test
mov
adc
in
xchg
addb
pop
rorb
iret
push
push
mov
fistpll
and
pop
ret
sti
loopne
jge
push
sbb
in
iret
seto
mov
in
cmpb
cli
push
mov
movsb
and
repz
mov
lahf
movsl
cmp
adc
push
and
shll
lods
aam
mov
and
imul
cmpsb
push
dec
cmp
and
xchg
insb
mov
lods
das
jge
dec
jmp
es
leave
stos
add
and
loope
hlt
mov
stc
shlb
mov
mov
out
mov
push
mov
stos
dec
sarb
lods
mov
imul
push
mov
gs
sbb
imul
fmulp
xchg
in
mov
xchg
xchg
and
sub
loop
jg
jnp
repz
xor
cmp
scas
in
loopne
mov
fadds
pop
outsb
cmp
mov
jb
inc
adc
xchg
and
les
notb
jle
add
loop
addr16
pop
cvtps2pi
ss
cwtl
int3
int3
mov
xchg
inc
inc
mov
outsl
cltd
add
movsl
mov
lea
add
mov
stos
pop
sbb
mov
popf
loopnew
adc
shrb
pop
mov
sbb
xor
or
rolb
nop
pop
std
push
mov
jge
dec
cmp
mov
xor
icebp
pop
ds
inc
xchg
xchg
inc
inc
mov
sub
or
sub
ljmp
outsl
mov
sbb
sti
das
fwait
and
jmp
lods
push
xchg
test
testl
cld
mov
adc
push
cwtl
sahf
or
stos
pop
int
xor
insb
stc
xor
mov
test
lds
lret
rorl
sub
popf
stos
mov
mov
in
jl
insb
inc
int3
pop
xchg
push
mull
aam
mov
loop
mov
or
pushf
fwait
sahf
jne
insl
lods
sti
bound
cmpsl
sbb
push
fistl
xor
les
dec
sbb
adc
adc
add
jge
mov
xlat
mov
loope
pop
and
jne
jnp
dec
inc
stos
pop
imul
adcl
stos
scas
dec
lcall
gs
in
add
ret
ds
std
scas
lea
and
addr16
ret
sti
mov
out
das
ljmp
xor
orl
cmp
test
shrl
or
es
inc
and
scas
sub
adc
ja
lock
jne
add
sub
gs
mov
jge
lcall
push
movsl
jmp
mov
outsl
xchg
les
xor
jg
mov
xor
mov
or
mov
lods
je
mov
out
jecxz
cmp
xor
or
cmp
aad
add
pop
call
adcb
xchg
push
fdivrl
mov
bound
inc
enter
aad
mov
imul
pop
insb
push
rcll
sub
mov
mov
insl
pop
inc
sbb
cmp
ljmp
ror
adc
adc
sahf
test
rorl
popa
sar
lock
ds
mov
ret
pop
cmp
jbe
test
mov
sbb
or
loopne
inc
add
xor
jnp
mov
push
push
lods
lret
imul
mov
call
mov
repnz
mov
jb
mov
sahf
fstpt
xlat
pop
pop
leave
cmp
xor
push
xor
xlat
cmp
fisttps
ss
add
add
js
mov
mov
or
das
xchg
hlt
fcom
shrl
daa
psraw
sub
lods
push
jo
fisubs
mov
pop
neg
int3
lock
xchg
push
rcll
xchg
mov
mov
xchg
pusha
das
daa
push
inc
in
pop
inc
jae
pushf
data16
cmp
push
rolb
sub
and
testl
hlt
cmc
dec
sbb
mov
fcmove
or
notl
mov
fnstsw
fwait
test
sbb
xchg
inc
repnz
pop
jb
scas
xchg
cmpsl
loope
testb
push
jnp
out
fidivl
mov
mov
sub
mov
out
and
sbb
popf
stos
dec
fcmove
sahf
dec
fimuls
push
xor
add
test
sub
pusha
test
mov
pop
inc
or
cmp
mov
add
adc
test
lds
add
cmp
mov
stos
cmpsb
je
mov
xchg
xchg
mov
cmp
adc
pushf
movsl
cmc
dec
cmp
rcll
in
mov
sub
push
adc
or
cmp
jae
cmp
xchg
xchg
insl
push
lcall
scas
loope
pop
pop
idivb
mov
sub
insb
inc
loop
add
ljmp
adc
and
aam
testl
pop
mov
xor
scas
sbb
mov
cmp
adc
dec
fwait
inc
fs
push
aad
cmp
test
mov
scas
push
std
inc
jne
scas
push
ret
shr
mov
mov
cmpb
popl
dec
mov
lods
idivb
add
movsb
and
aad
jge
test
mov
fadds
in
and
pop
add
loope
imul
out
mov
notb
out
outsb
lret
mov
mov
and
scas
mov
movsl
fdivrs
les
and
mov
inc
lods
test
test
fcmovne
jl
leave
pop
or
fdivrs
shrl
cmp
ss
sub
dec
mov
adc
or
subps
insl
js
mov
test
and
imul
stos
fs
popa
cmpsb
in
testl
dec
scas
addl
push
jecxz
jp
push
jns
pop
rolb
std
sbb
xchg
aam
test
push
bound
into
or
push
outsl
jecxz
pop
cs
arpl
dec
ss
jns
add
pop
add
sub
cmp
pop
and
es
push
popa
stc
jecxz
add
dec
xor
sub
inc
in
int3
push
or
jnp
xchg
jl
in
sub
hlt
mov
mov
mov
mov
adc
sbb
ret
cli
jg
je
lock
mov
sub
mov
icebp
jmp
dec
mov
and
and
sahf
jae
xchg
xchg
pop
add
repnz
imul
dec
enter
jmp
pop
sub
jp
shll
clc
xlat
mov
and
je
in
lock
mov
mov
pop
push
dec
sub
aaa
lds
add
negl
aam
ret
pavgb
pusha
mov
and
and
cld
add
shll
imul
xchg
push
inc
insb
xor
add
les
bswap
mov
ljmp
sub
sbb
pop
lods
xchg
cmp
in
dec
adc
xchg
rcrb
repnz
or
jnp
sbb
cmp
out
adc
sub
in
test
and
mov
repz
adc
push
dec
pushf
dec
or
fwait
adc
add
out
sbb
mov
insb
int
push
adc
xor
fnstsw
lret
adc
sbb
cmp
iret
jb
imul
mov
push
je
cmp
ljmp
sarl
aaa
out
mov
xchg
jbe
insl
push
cmp
lret
push
xor
mov
sti
movsl
aad
push
icebp
cltd
dec
cli
leave
inc
test
mov
mov
das
push
popa
mov
or
and
mov
adc
push
test
hlt
xor
mov
xor
add
dec
add
pop
xchg
sbb
pop
cmpsb
mov
popf
stos
shll
sbb
ljmp
mov
or
scas
ret
inc
push
dec
int
mov
addb
mov
scas
cwtl
js
jle
sbb
inc
inc
sti
mov
mov
jne
inc
pusha
movsl
shlb
jp
stc
mov
and
pop
or
lret
adc
sub
cmpsb
int3
or
add
mov
ror
pushf
test
cmpl
jmp
push
lahf
fsub
insb
insb
xchg
adc
jnp
adc
xor
test
inc
sub
lds
mov
mov
jne
and
mov
pop
ss
cmpsl
lret
mov
test
mov
leave
sub
mov
push
sbb
pusha
sbb
xchg
add
cmp
push
scas
rep
push
cmp
sbb
repz
pop
call
pushf
das
sub
mov
out
push
jo
stc
add
scas
lods
neg
xchg
gs
sub
imul
ja
fdivrl
in
fsubl
jbe
andb
sahf
mov
sbbl
mov
sbb
fsubr
rorl
in
push
add
inc
dec
dec
pop
xchg
jmp
loopne
icebp
jnp
mov
ljmp
or
bound
mov
jae
test
xchg
into
xor
repz
sbb
add
mov
fnstenv
cmp
push
mov
inc
jle
insb
pusha
js
stos
call
test
xchg
in
int
fcomps
stc
lret
jbe
inc
pop
push
out
and
out
bound
ss
out
mov
mov
sbb
mov
pop
jle
leave
mov
rcrb
lock
or
push
mov
test
movsl
in
xchg
inc
mov
push
pop
xor
rcr
fsubl
pushf
jb
fcomps
les
out
cwtl
js
pop
icebp
ret
into
call
push
movsl
and
aaa
popa
or
mov
out
lock
inc
xchg
or
push
ja
xor
std
pop
mov
or
jl
jns
rorl
sbb
pop
pop
mov
push
cmpsl
stos
xchg
sbb
cmp
movl
test
mov
adc
loop
jmp
cwtl
xor
xchg
ret
aas
cmp
pushf
test
insl
adc
add
mov
rcrb
popa
sar
sub
ds
dec
mov
dec
dec
mov
fucomp
ss
das
inc
xchg
pop
adc
dec
push
lret
addr16
push
scas
outsb
mov
and
ret
xor
xchg
clc
dec
ja
into
xchg
stc
mov
sub
sub
jge
cli
jge
inc
xchg
jo
sub
loopne
mov
mov
addr16
rcr
cmp
shl
jge
imul
adc
add
dec
fnsave
lock
or
ror
lock
mov
arpl
lods
sbb
pop
lds
mov
mov
imulb
cmp
jp
lock
push
repz
lods
mov
cmp
call
shlb
sti
sbb
jb
movsl
stos
scas
stos
mov
or
xchg
leave
in
loopne
lret
pop
cwtl
insb
pop
popa
dec
mov
mov
xchg
jo
sarl
or
xchg
xor
xchg
inc
sub
insl
jg
faddl
push
or
mov
pop
sbb
mov
xor
out
rorb
lods
cli
mov
test
sub
cmpsb
add
shr
aaa
fld
jne
scas
cs
pushf
or
dec
cmp
inc
mov
push
inc
ret
push
in
stos
mov
mov
sbb
stos
cmpsb
xor
gs
pop
pop
test
sbb
popa
adc
push
mov
sti
push
mov
ljmp
dec
xlat
inc
lret
std
call
mov
xchg
clc
lret
sub
mov
dec
out
int
iret
xchg
aam
push
addr16
cmp
or
xor
pop
push
cld
dec
movsb
dec
adc
lahf
and
jmp
jge
and
out
aad
pop
cltd
cmp
dec
add
bound
mov
stos
jbe
mov
jp
add
cmpsb
xor
cli
out
jnp
jae
add
fistpl
dec
ss
je
sbb
jo
inc
pop
std
push
sub
adc
inc
mov
mov
into
pop
jae
jb
fisttps
sahf
lea
pop
dec
sub
pop
shld
and
push
cmpb
jnp
movsb
adc
inc
in
pop
aaa
xchg
popa
aad
fwait
mov
jnp
adc
cmpsl
ss
fcoms
popa
xor
lret
cmp
inc
addr16
add
add
add
inc
jg
push
femms
sahf
inc
add
lods
sub
sub
and
xor
fdivr
notb
and
and
pop
fdivr
bound
add
test
shll
andb
movsl
xchg
adc
js
jg
int3
add
js
pop
push
sarl
in
cmp
jo
sbb
add
adc
mov
dec
pop
inc
mov
sbb
pop
push
jmp
inc
shll
mov
fnstsw
xorl
push
xchg
out
test
xor
push
stos
push
ds
loop
mov
jl
sarb
daa
call
jmp
jnp
sub
mov
push
xchg
pushf
ds
push
into
jb
pop
jecxz
inc
fimuls
mov
or
add
cmp
push
cltd
sbb
int
and
sbb
push
pop
add
negb
push
daa
mov
lods
push
jbe
outsb
loopne,pn
shll
sbb
rcll
mov
inc
push
icebp
xchg
in
mov
das
dec
cmpsl
or
mov
cmp
lock
adc
insb
rcrl
jmp
cmp
cmpsl
or
pop
ret
adc
adc
push
test
int
hlt
aas
dec
adc
mov
or
sub
xchg
cmp
sbb
mov
movsb
xor
add
cmpsb
mov
imul
xchg
dec
dec
stos
in
addb
xor
jo
inc
pop
iret
pop
cmp
pop
mov
inc
mov
or
push
sub
jmp
inc
das
jmp
mov
cmp
out
adc
xlat
push
popf
imul
movsl
imul
test
cmp
into
mov
ret
and
test
imul
xchg
repnz
daa
jmp
repnz
call
dec
scas
adc
insb
addr16
mulb
mov
adc
movsb
jg
sarb
leave
push
hlt
icebp
xchg
jo
mov
ja
pop
cmp
dec
jno
lods
sub
lcall
in
add
fdivrl
xor
sub
inc
rcr
addr16
jge
push
idivb
pop
cltd
inc
pop
cmc
ljmp
jns
fbld
mov
xorl
pop
dec
push
mov
pop
cli
inc
cltd
xchg
aad
dec
idivl
sub
dec
push
and
jb
and
xor
stos
push
aas
out
out
rcl
je
adc
ljmp
jl
ret
cwtl
push
popa
xchg
in
sub
call
mov
enter
jb
aad
lret
jl
xor
or
shlb
into
dec
popaw
outsl
lea
adc
or
push
js
cmp
cmp
jo
lods
mov
clc
mov
pop
or
popf
into
fs
hlt
dec
jl
mov
mov
ret
xchg
movsl
repz
cwtl
call
outsb
pop
decb
push
add
cmp
fisubrl
test
fs
std
out
iret
arpl
call
leave
subb
inc
mov
xor
mov
pusha
inc
aam
sub
vpshlq
outsb
mov
push
mov
repz
pushf
add
jo
lcall
insb
test
aad
cmp
adc
xchg
mov
das
pop
xor
mov
int3
jmp
add
into
pop
push
dec
dec
adc
add
mov
sbb
sub
aaa
in
pushf
in
jecxz
movsl
data16
add
cmp
mov
cmpsl
movb
mov
mov
mov
push
test
or
in
jae
mov
cwtl
pop
call
stc
aaa
or
test
pop
mov
mov
dec
out
add
outsl
out
mov
mov
add
push
xchg
out
xor
stos
lock
das
andb
or
adc
fimuls
inc
inc
daa
out
out
mov
fmuls
dec
cld
lock
pop
lock
mov
or
inc
imul
cwtl
inc
clc
leave
cmpsb
dec
arpl
fcoml
out
mov
dec
rol
outsl
out
mov
inc
push
cs
pop
sti
mov
or
xor
inc
xchg
xor
insl
aad
cmpsb
in
sti
or
add
pop
rcrb
jae
pushl
add
mov
xchg
inc
jecxz
out
mov
lods
mov
aaa
je
fistl
stos
bnd
xchg
inc
xor
mov
aad
xor
mov
cmpsb
dec
lret
adc
cmp
cld
pop
outsl
int3
js
jmp
je
std
ss
or
mov
into
jle
sub
xchg
mov
rcrb
daa
pushf
subb
shrl
cmpsb
stc
pusha
or
mov
push
dec
xor
push
lret
adc
negb
pop
jmp
xor
aaa
pop
imulb
push
fld
lgs
insl
jle
fs
add
iret
pop
sbb
inc
xchg
pop
push
xor
push
pop
adc
jl
mov
pop
xlat
out
jns
cmp
clc
cli
pop
mov
lret
or
adc
and
sub
jbe
sub
gs
in
lods
hlt
mov
popf
xlat
xor
push
ja
jmp
ret
xchg
in
fldenv
pop
or
inc
mov
mov
test
dec
jg
adc
cli
mov
stos
push
mov
mov
mov
and
push
aam
xchg
cs
scas
aas
pop
sub
sub
push
in
imul
push
call
mov
mov
and
xchg
adc
pop
sarl
mov
jle
adcl
sub
sbb
and
les
in
pop
jge
jg
fldenv
sbbb
or
and
mov
add
push
adc
and
out
stos
idivl
mov
mov
adc
adc
imul
jb
sub
scas
sbb
push
jne
push
jo
pop
outsb
push
movsl
mov
jae
adc
lock
lea
sbbb
lret
lods
xlat
das
lea
add
cs
cld
xor
pushl
lods
lds
aas
in
adc
dec
add
jne
fwait
das
add
gs
jge
dec
pop
mov
ss
outsb
fs
subb
sbb
pop
out
and
add
push
jb
pop
xchg
lret
test
jp
jnp
js
and
mov
loope
pop
repnz
and
cmp
idivl
inc
pushf
icebp
mov
pop
bnd
and
arpl
test
aam
test
xor
xlat
adc
repz
mov
xor
sbb
push
rcrl
ljmp
gs
jb
imul
mov
add
push
std
and
push
pop
andb
popa
pop
sub
ret
loop
lahf
lock
adcb
and
jno
push
subb
xchg
jle
sar
adc
outsl
cs
sub
jge
mov
adc
mov
mov
out
jmp
es
lret
fidivrl
daa
and
pop
enter
jb
addr16
push
iret
int
ljmp
aas
int
inc
mov
mov
std
sub
jbe
pop
ljmp
imul
aas
cwtl
aaa
add
mov
test
outsl
jle
inc
mov
idivb
jecxz
push
fildl
pop
push
fs
test
lods
inc
stos
mov
dec
outsl
movsl
pop
xchg
sbb
pop
sub
dec
inc
xor
mov
sbb
in
sbb
mov
addr16
or
bound
dec
adc
imul
test
xor
xor
pop
enter
adc
stos
out
rol
jbe
repz
int3
sub
in
mov
mov
mov
nop
int3
movsl
out
jp
arpl
es
mov
add
jnp
outsl
inc
rolb
xor
jbe
sbb
ljmp
inc
inc
xchg
movsb
push
and
test
lods
leave
sub
ja
bound
inc
pop
insl
or
ret
ja
cmp
arpl
or
out
daa
mov
or
test
fdivrs
cmp
pop
mov
inc
lock
leave
pminub
mov
out
jo
push
roll
xor
dec
mov
test
popf
xor
mov
inc
mov
sahf
stc
pop
push
jo
and
ja
addb
movsl
jl
gs
jl
mov
das
imull
outsb
dec
push
xchg
and
in
scas
push
das
ret
jb
mov
jne
dec
push
flds
enter
incl
js
out
call
lcall
or
rcr
mov
and
mov
fucomp
jb
mov
push
mov
mov
into
mov
sub
adc
test
push
enter
fs
lds
jb
stc
mov
fsubl
sahf
pop
out
aad
popf
dec
cmp
xor
xchg
or
and
stos
push
adc
or
pop
adc
lock
stos
pop
mov
aaa
mov
mov
xor
sub
add
mov
push
iret
shr
and
xchg
cmp
mov
mov
arpl
inc
push
or
cmp
loop
pushf
out
inc
scas
aaa
jae
pop
sub
add
xchg
popf
movsb
sbb
pop
adc
xlat
scas
cmp
cmp
les
ret
leave
pop
mov
push
insl
mov
or
fbld
xor
jl
sub
xchg
mov
dec
out
inc
lcall
add
lahf
out
push
inc
push
out
or
sub
and
out
int3
xchg
testb
aam
cwtl
push
adc
sarl
shrd
adc
inc
push
push
mov
iret
bound
or
sub
and
dec
inc
sub
or
push
jno
add
cmp
test
pusha
cwtl
pop
xchg
leave
sub
or
jo
push
and
js
cmp
hlt
loop
add
and
fildl
pushf
mov
je
sub
pop
ret
je
test
iret
dec
xor
imul
das
xor
or
mov
mov
fisttps
add
xchg
mov
mov
rolb
dec
inc
push
xchg
mov
lahf
jmp
adc
dec
mov
fimull
or
mov
push
jns
sbb
jmp
popa
cltd
mov
ficompl
sbb
mov
jmp
ja
mov
pop
xor
data16
pop
cmpsl
jo
inc
pop
pop
in
jnp
insl
dec
cmp
loope
push
push
jge
mov
ret
ja
jge
pop
jb
and
mov
rorl
lahf
xor
fldt
xor
add
sub
jl
jno
pop
cmpsb
inc
and
pop
sahf
jne
aas
push
shll
js
ret
or
mov
mov
jae
pop
xor
shl
fisubl
inc
sahf
out
pop
mov
mov
mov
fbstp
stc
popa
addr16
jecxz
xor
es
lret
dec
ficoms
rolb
pop
es
outsb
rol
and
cmp
test
int3
inc
add
insl
mov
mov
mov
cld
addl
fimull
insl
sub
mov
mov
cltd
outsl
insb
push
int3
inc
sub
mov
ret
int
stos
dec
test
scas
pop
stc
adc
hlt
mov
mov
loopne
add
into
or
out
mov
mov
inc
add
shr
or
add
repz
stc
mov
subb
mov
outsb
adc
cmp
mov
mov
addr16
ljmp
outsb
mov
mov
xchg
inc
iret
sbb
pop
xor
dec
pop
je
jae
imul
aas
imul
xchg
fs
movsl
mov
outsb
aas
jecxz
xchg
imull
mov
popa
cmpsb
xchg
mov
mov
xor
dec
sub
add
inc
fcoml
xchg
lahf
or
mov
sub
inc
xor
push
mov
inc
gs
lret
cltd
lods
jp
add
cmp
mov
jns
enter
push
sbb
xor
cmp
mov
test
pop
sbb
inc
mov
lds
cmp
and
call
rcrb
pop
pop
pop
mov
loop
lret
out
xchg
xchg
xor
jg
cwtl
scas
xchg
addr16
sbb
add
inc
pop
stos
clts
dec
push
jns
outsb
inc
lret
cmp
pop
sarb
pop
push
in
sub
mov
sbb
je
sarb
sub
jle
jb
mov
popf
jbe
pop
mov
inc
test
test
sub
in
lret
mov
add
xchg
mov
icebp
jl
outsl
stos
cltd
jbe
cmp
nop
cld
adc
push
xchg
data16
adc
roll
inc
cld
jo
decl
scas
cmpsb
hlt
add
clc
test
or
mov
mov
mov
inc
shlb
test
ljmp
xchg
cmp
or
inc
mov
lcall
mov
xlat
inc
jns
pop
ja
testb
xor
mov
xor
dec
sti
and
add
cmc
nop
xchg
cmp
in
inc
cwtl
test
test
call
in
das
cmc
sbb
mov
jle
jmp
repnz
testl
out
add
dec
loop
fcmovb
push
aam
mov
iret
sub
push
dec
xchg
or
mov
inc
popa
xchg
push
repz
add
inc
icebp
enter
jge
sahf
or
xchg
mov
loopne
mov
inc
sub
cmp
mov
xor
cld
gs
insb
mov
push
jg
fidivrl
and
test
ljmp
movsb
js
xor
pop
adc
insb
leave
enter
mov
and
pop
sti
sbb
adc
cmp
repnz
inc
pop
mov
daa
inc
pusha
shll
aad
mov
cmp
call
andb
and
fs
jae
and
rolb
rcll
pop
sbb
insb
dec
mov
push
jo
subl
push
xor
push
mov
cmp
mov
insb
popa
inc
xchg
mov
shll
insb
adc
bound
dec
sbb
cmp
ds
dec
movsb
adc
sub
xchg
dec
inc
jg
xchg
mov
shrb
jns
clc
mov
sahf
je
jle
mov
fisttps
or
fsubr
sbb
or
cmpsb
dec
test
jmp
xor
sub
cmp
push
cmpsb
cmp
loop
inc
out
pop
inc
dec
insb
pop
mov
shll
in
andb
add
popf
dec
ficoml
mov
xchg
hlt
lods
imul
dec
adc
pushf
shll
dec
fcompl
xlat
xchg
pop
jbe
cmp
lea
dec
jne
fnstenv
ret
testl
dec
lds
sbb
js
shll
dec
scas
fcoms
and
pop
xorb
mov
rclb
lret
fildl
jo
in
enter
rorl
int3
int3
arpl
mov
add
or
fisttps
dec
push
out
ljmp
test
in
push
aaa
mov
inc
add
lods
push
std
mov
jbe
mov
push
shlb
cmp
inc
cmp
pop
cld
fisubrs
ss
dec
jno
mov
std
stos
and
stos
movsl
cltd
lock
or
mov
call
fstpl
jecxz
mov
divl
mov
and
hlt
xlat
lcall
xchg
inc
mov
les
xorl
out
pop
jp
xchg
adc
lahf
xchg
sub
pop
dec
icebp
dec
sbb
push
nop
cmp
dec
add
ljmp
mov
test
inc
pop
enter
jmp
clc
jns
pop
in
cmp
pop
divb
fsubr
mov
jge
xor
pushf
dec
push
lcall
inc
xor
xchg
jae
add
or
ficomps
out
mov
mov
test
pop
mov
xorb
mov
cwtl
test
in
add
sub
sahf
sub
notb
fimuls
aad
cmc
xchg
or
test
adc
int3
out
jo
pop
inc
in
jg
adc
add
or
addb
cmp
jae
out
mov
cmpsl
sub
sub
mov
sti
xchg
jmp
pushf
sub
dec
xor
imul
cmc
push
int
mov
jmp
popf
ljmp
or
mov
and
pop
int3
ds
bound
insb
mov
sub
out
xchg
push
dec
ja
jl
aas
leave
lea
scas
dec
icebp
xchg
loopne
fisubrl
stos
add
lods
int3
testl
xchg
pusha
xor
mov
movsb
jle
arpl
and
jae
shl
jl
jl
enter
hlt
jg
dec
aad
es
scas
cmp
cmp
sbb
sub
sbb
push
dec
outsl
insb
dec
xor
les
fsts
push
test
jge
mov
scas
sti
test
push
jb
cmp
mov
jg
sbb
jb
pop
ret
sbb
pop
cmp
xor
xchg
push
loope
movb
pop
mov
pop
or
push
into
cmp
inc
mov
xor
fstp
jp
cmp
xor
aas
push
repnz
jl
jg
pop
pushf
cmp
jecxz
shrl
and
adc
popf
pop
gs
cs
sbb
sub
enter
js
mov
sbb
mov
dec
push
push
push
add
xchg
inc
mov
lcall
jmp
mov
fwait
test
mov
test
xor
test
aam
sub
movsb
in
xchg
mov
lods
imul
pop
mull
add
mov
cmp
mov
test
xorl
insl
sbb
insl
push
cmp
sar
pop
jno
popa
cmp
out
push
fbld
mov
test
xor
mov
mov
mov
mov
aas
mov
xchg
pop
cmp
push
push
add
gs
lret
addr16
and
push
sub
arpl
xor
dec
inc
stos
push
mov
nop
and
jp
cld
jns
cmp
cs
and
cmpsb
push
jg
je
scas
dec
adc
test
adc
xchg
clc
mov
icebp
bound
aaa
mov
cmpsb
aam
int3
iret
addl
subl
fdivl
loopne
flds
push
sbb
fs
int3
pop
adc
xchg
clc
push
jmp
xchg
dec
je
xchg
dec
imul
into
cmpsl
adc
imul
aam
cmp
dec
jl
loopne
call
std
pop
shll
loop
adc
jbe
sub
jnp
adc
pusha
jmp
stc
hlt
or
pop
cmpsl
inc
in
in
sbb
pop
in
inc
add
mov
sar
xlat
fcompl
dec
loopne
xchg
aas
loop
mov
adc
lods
int3
mov
xor
movsb
cltd
pusha
push
mov
or
jle
cmpl
cmp
into
mov
enter
test
or
mov
dec
out
push
push
je
out
shrl
shlb
lcall
sbb
aam
mov
inc
ficompl
sub
add
sbb
jmp
cmp
inc
mul
int3
data16
xchg
xchg
xchg
and
shrl
repz
sahf
jg
pop
mov
cmp
gs
xor
mov
push
rcr
bound
test
loop
push
jae
sbb
stc
jb
aam
xchg
mov
iret
lods
mov
mov
fiadds
mov
imul
and
fwait
stc
add
enter
ret
cmp
std
mov
cwtl
pop
mov
jle
xor
lahf
pop
daa
je
dec
rcl
dec
mov
push
mov
scas
in
sub
sahf
sub
dec
mov
mov
or
xor
ja
out
ljmp
dec
xor
dec
cs
loop
daa
fldcw
mov
outsb
aam
dec
push
jo
pushf
inc
mov
pop
pop
mov
out
mov
dec
pop
mov
sub
fists
pop
push
in
jo
push
or
or
pushf
jb
push
test
out
sar
mov
mov
notb
dec
and
add
sahf
imul
lods
movsl
mov
mov
add
fucom
sub
dec
sub
xchg
inc
mov
lods
jg
fcmovu
out
xor
jmp
or
jp
xchg
sbb
cmp
xchg
cmp
cltd
dec
xchg
jl
lds
push
cmpsl
adc
fistpl
loope
in
push
pop
bound
lods
xchg
xor
cs
aas
icebp
movsl
sbb
mov
xor
mov
addb
jnp
je
dec
roll
fmull
enter
xorb
push
aas
aaa
hlt
in
mov
idiv
stos
mov
imul
jno
mov
sbb
repnz
cmp
cmpsb
xor
jb
add
test
pop
addb
std
or
mov
mov
cli
addr16
repz
inc
lcall
add
mov
or
push
mov
je
push
and
mov
pop
push
push
test
dec
pop
into
push
mov
cwtl
and
push
stc
push
cld
mov
pop
icebp
lods
iret
push
jmp
lock
push
test
fistps
mov
pop
push
int3
je
xchg
test
cmp
jmp
insl
sbb
add
jbe
shll
cwtl
push
scas
outsl
fldt
bound
pop
in
xchg
add
jg
push
es
cmp
dec
icebp
jle
outsb
clc
dec
mov
push
ljmp
insb
clc
push
pop
fistps
mov
mov
scas
and
pop
jnp
clc
cld
inc
in
in
popa
xchg
mul
sbb
mov
sub
add
jbe
inc
lock
jne
rcll
nop
mov
jmp
fsubrs
xchg
out
inc
imull
dec
adc
push
mov
pop
push
and
push
mov
mov
scas
push
dec
fdivrl
xor
sbb
add
test
and
add
pop
mov
dec
inc
mov
fistl
gs
shrd
pop
out
dec
sbbb
cmpl
in
mov
fdivrl
out
xlat
notrack
fstpt
inc
jp
xor
sbb
mov
dec
cmc
pop
lock
cld
cmp
mov
icebp
js
add
xor
mov
aam
in
mov
stos
js
stos
mov
js
popa
sub
dec
mov
mov
jo
xor
outsl
test
mov
mov
mov
mov
push
daa
and
test
or
lahf
imull
and
push
pop
mov
xor
sbbl
mov
cmp
lret
dec
adc
inc
in
push
jle
pop
imul
clc
cmpsl
push
xchg
enter
stos
insl
ret
rcrl
fildll
sub
jle
jo
jp
jmp
mov
inc
mov
aad
sti
into
sub
outsl
cmpsl
xor
into
test
jno
xor
imul
mov
sub
int3
pushl
jecxz
sbb
cmp
cs
shrb
mov
or
sti
aas
pop
xor
push
aas
cli
cli
xchg
enter
jae
ret
cli
or
cmp
sub
lods
nop
xchg
jmp
rol
rorb
lods
pop
daa
jno
mov
push
xor
loop
fcoml
fwait
pop
cld
push
call
out
fmul
leave
mov
or
jbe
cmpsl
xor
and
xor
jb
insb
xlat
cmp
or
shl
xchg
fldenv
in
mov
movsl
fldenv
mov
int3
dec
int
and
shll
scas
mov
sub
fdivrl
dec
push
xchg
movsl
xchg
add
cmp
lret
shrl
or
cmp
pushf
sti
sahf
int3
ret
push
pop
push
xor
std
call
and
lods
mov
mov
icebp
dec
cwtl
ds
nop
pusha
cmp
mov
bound
ret
fwait
and
inc
arpl
add
push
stos
fs
cld
dec
sbb
xor
ds
add
mov
sub
sahf
movsl
push
ror
cwtl
mov
sti
cmp
les
mov
dec
shrb
push
mov
lods
inc
dec
sub
mov
aam
inc
and
dec
int3
pop
outsb
sbb
pop
xor
into
sub
jecxz
mov
mov
fdivrl
mov
sbb
stos
outsl
fwait
popa
pop
mov
sbb
jmp
cwtl
jae
xor
gs
mov
mov
xor
repnz
xchg
sub
mov
push
sbb
mov
adc
ret
sbbl
xorl
das
cmp
jo
js
iret
fwait
sub
outsl
and
jns
mov
cmc
dec
lret
push
xlat
xchg
adc
mov
jnp
pop
or
push
stos
mov
dec
pop
adc
outsl
adc
movsb
adc
xor
shrl
and
mov
icebp
push
add
int3
and
pop
or
sbb
push
or
jno
lods
push
mov
nop
push
pop
mov
arpl
lret
add
movl
jp
mov
orb
push
es
xor
daa
jecxz
xchg
push
aaa
xchg
imul
sbb
cwtl
jl
movsb
pop
movsl
insb
jne
and
xor
dec
inc
jne
xorl
test
sub
rcrb
arpl
sbb
addr16
cwtl
mov
shlb
js
xlat
cmpsb
add
mov
cwtl
leave
mov
mov
outsl
in
pop
iret
push
push
mov
test
outsl
or
dec
pop
and
out
in
and
or
xchg
ret
je
xor
xor
mov
test
es
popf
add
and
cmp
std
popf
cld
scas
test
jno
xchg
push
and
andl
scas
std
subb
mov
ja
push
vandnpd
je
dec
das
test
mov
mov
mov
popf
adc
push
clc
add
pop
cmp
psllw
add
lock
dec
xchg
xor
stc
or
xchg
push
inc
test
sahf
sub
aas
repz
loop
mov
mov
adcb
mov
and
cltd
daa
out
cmp
or
cmc
mov
push
call
outsb
fwait
pop
or
into
fmulp
cmp
nop
mov
mov
or
idivl
jle
xor
test
push
inc
fisubl
test
xlat
adc
fsubrl
push
jbe
dec
jp
imull
cmc
frstor
dec
sub
rcrb
mov
push
fcoml
test
imulb
fwait
mov
xor
mov
sub
scas
xchg
push
arpl
notl
movsb
pop
mov
mov
fs
or
push
testl
adc
and
xchg
test
and
adc
xor
cmc
jle
add
or
jns
sti
adc
or
aaa
xchg
sbb
stos
test
ret
mov
jno
aad
cmpsb
adc
cmp
cmp
icebp
pop
xchg
and
outsl
xor
stc
pop
in
mov
xor
mov
adc
lahf
testl
cmp
enter
enter
mov
je
mov
loopne
mov
mov
jo
lods
inc
mov
movsl
sub
cltd
pop
shll
test
or
sbb
insb
ds
mov
pop
cmc
mov
loop
mov
inc
test
and
jle
jl
xchg
add
pop
pusha
insb
in
ret
adc
aad
jmp
int
outsl
cmp
and
jecxz
jb
outsb
pop
mov
sbb
cwtl
out
orl
int3
inc
cmp
lods
mov
lret
mov
mov
gs
add
ja
dec
add
inc
adc
add
arpl
fadd
jmp
cs
rep
mov
mov
pop
xor
notb
std
mov
xchg
pop
push
addr16
jae
sub
repnz
fdivrp
cmc
cmp
dec
inc
mov
iret
mov
fmull
pop
dec
iret
mov
div
mov
push
stos
add
lock
mov
int
jmp
xor
mov
xlat
mov
xchg
push
stc
fiaddl
sub
lods
repnz
xchg
repz
jle
cmp
jmp
cld
out
adc
addr16
mov
mov
out
setnp
xchg
rcll
scas
dec
xor
sahf
jne
cmp
push
lock
and
push
int
jo
rol
mov
test
adc
scas
jmp
jns
sub
hlt
iret
cmp
xor
push
cvtps2pd
sbbl
cli
adc
mov
popf
pop
bound
mov
dec
pop
call
aam
mov
sbb
adc
mov
mov
dec
out
add
and
and
hlt
cmp
jge
cltd
dec
inc
out
mov
add
inc
rorb
shr
jae
mov
jno
stos
aam
sub
imul
add
jecxz
xchg
pop
xchg
rcrb
movsb
sbb
shll
scas
xchg
add
xorb
ret
inc
mov
sbb
daa
cmc
ret
into
pop
or
mov
dec
lods
push
cmp
scas
idivl
sbb
dec
loope
add
push
dec
test
adc
insb
jae
xor
cmpsl
sub
xchg
aas
xchg
xchg
xchg
pusha
lds
adc
shl
daa
xchg
fnstenv
mov
mov
adc
dec
push
push
nop
rclb
pop
test
fisubrs
mov
roll
cwtl
mov
mov
fmuls
jnp
out
jmp
mov
out
xorb
aad
mov
dec
in
push
jns
mov
add
mov
outsb
sahf
mov
push
cs
rolb
push
add
mov
jg
mov
lahf
jl
int3
movsb
sub
mov
jl
lea
mov
push
xor
jnp
loop
jae
sub
push
pusha
mov
stos
dec
xchg
mov
mov
xchg
leave
pop
cmpsl
dec
inc
mov
clc
inc
sbb
subb
push
mov
sahf
dec
aaa
inc
or
mov
xchg
fmul
aad
xor
ret
adc
sub
shll
pop
cld
pop
push
fnstsw
repz
pop
xchg
unpckhps
pop
out
mov
pop
mov
mov
pop
inc
in
mov
mov
jno
dec
xchg
mov
xchg
movsl
cmp
jb
push
bound
cmpsl
mov
iret
ss
cs
dec
lcall
cmp
add
cmpsl
or
xor
xchg
jns
push
add
popf
add
pop
xchg
mov
sahf
leave
mov
cmp
imul
stc
lea
add
mov
sub
mov
xchg
jp
push
repz
clc
pop
sbb
jo
dec
mov
addb
mov
xchg
or
sub
fstpl
mov
push
push
pop
and
das
and
repz
mov
pusha
mov
or
or
mov
ret
aam
and
pop
adc
repnz
loopne
jmp
jb
mov
pushf
cs
bound
rclb
pop
out
bndldx
and
fdivl
aam
jno
or
data16
outsb
cltd
mov
das
push
add
xchg
cmp
sub
adc
mulb
femms
ret
imul
cwtl
ret
lcall
negl
and
int
mov
dec
push
xor
or
or
pop
dec
pop
xor
insb
into
rsm
repnz
jb,pn
cmpsb
xchg
xor
daa
pop
and
pop
cmp
xor
xorb
fcmovbe
add
imul
out
ret
jnp
aaa
xor
push
sub
pop
out
adc
xor
popf
push
xor
jb
inc
xchg
jbe
ficoml
push
xor
repz
movsl
loop
add
sarb
aam
pop
cmp
mov
mov
icebp
mov
or
cwtl
mov
push
push
cmpsb
popa
fwait
int3
dec
neg
cltd
xor
mov
arpl
std
xchg
nop
mov
outsl
in
mov
lcall
push
loop
call
jp
dec
and
inc
pop
aad
movsl
fnstcw
lds
sbb
mov
bound
cmp
pop
jne
out
push
imul
imul
push
dec
xchg
jns
hlt
movsb
mov
mov
or
xchg
sbb
cld
mov
mov
mov
and
pop
pushf
out
pop
xchg
in
push
sbbb
xor
fisubs
mov
test
push
leave
fwait
test
xlat
aam
jno
mov
dec
cmp
push
pop
xchg
ficoms
aad
push
adc
pop
arpl
xchg
and
fdivs
rcr
sub
sbb
lret
mov
or
xchg
mov
call
loop
jae
push
mov
adc
sarb
repz
and
push
mov
dec
nop
jle
sub
push
xor
xor
pop
xchg
aaa
data16
push
int
mov
inc
dec
mov
jecxz
mov
mov
out
dec
inc
ja
cmp
je
fidivrs
sub
aam
xlat
rolb
pop
xor
sbb
inc
imul
psrld
push
mov
xchg
push
les
mov
sub
xchg
pop
and
mov
mov
mov
sub
add
cld
add
fcomps
jne
stos
repz
popa
mov
in
inc
lods
aad
mov
sbb
sbb
or
xchg
adc
cmp
hlt
jecxz
jno
insl
mov
cmp
pop
fnstenv
mov
les
mov
mov
cmp
dec
add
dec
mov
lds
or
addr16
ret
xor
icebp
mov
jge
jo
rcr
daa
mov
lahf
jle
xor
lods
int
xchg
or
addr16
add
xor
adc
pop
popa
xor
lods
jno
ror
test
xor
xchg
sbb
add
mov
lods
jecxz
mov
insl
cmp
ds
ja
jg
movsl
adc
clc
fwait
repz
xlat
movsb
dec
adc
lods
pop
ror
fwait
pmaxub
mov
xchg
sub
sub
dec
adc
aas
fucompp
mov
icebp
mov
fs
adc
xchg
subb
enter
ret
and
mov
inc
leave
push
mov
push
mov
pop
and
sbb
sub
mov
mov
lret
add
je
mov
adc
cmp
inc
push
jmp
imul
sub
push
idiv
in
iret
outsl
sub
cmc
and
sti
mov
rorl
shll
and
inc
movswl
xchg
fisubl
pop
data16
insl
pop
cwtl
data16
pop
sbb
loope
sbb
push
jo
inc
in
pop
fucomp
or
out
mov
mov
sti
sbb
and
and
rorl
imulb
in
mov
in
leave
mov
shl
insb
push
je
lock
xchg
adc
daa
cltd
push
pop
jbe
mov
mov
ss
mov
push
imul
mov
pop
mov
lea
sbb
cmp
mov
mov
arpl
mov
loope
mov
andl
out
adc
add
mov
pop
pop
ja
xchg
xchg
daa
push
movsb
fbstp
or
sar
insl
cmp
mov
mov
imul
sub
ljmp
mov
rcll
jns
pop
mov
xchg
mov
or
xor
cmp
pop
xchg
dec
and
mov
fucomp
into
data16
sub
in
xchg
mov
fisttps
enter
test
ficompl
pusha
nop
aam
mov
pop
pop
or
mov
sbb
cli
dec
jbe
lcall
mov
ret
or
lods
scas
add
popa
push
xor
jne
aad
cmpsb
sbb
inc
cmp
jecxz
or
jl
jne
jmp
jl
lds
lods
push
pop
xor
mov
or
fmuls
jle
xlat
add
inc
dec
xchg
js
lret
push
jp
xlat
dec
ret
addr16
push
and
jle
xchg
dec
outsb
mov
mov
lods
inc
aad
rorb
xchg
and
aaa
pop
sbb
mov
dec
inc
pop
or
push
push
sbb
sbb
or
div
xchg
mov
roll
mov
add
mov
pop
mov
sarb
xchg
std
lahf
push
in
pop
out
aam
and
pop
jns
js
push
lret
mov
jae
pop
push
ret
xchg
cmp
aam
in
pop
out
xor
adc
fistpl
mov
push
pusha
xor
js
pop
je
je
in
mov
std
push
insb
sarl
faddl
jp
jge
pushf
xor
outsl
les
dec
outsl
add
jns
add
hlt
aad
mov
push
adc
sbb
add
lret
xchg
lret
popf
insb
and
data16
push
popf
jl
mov
outsb
jg
stos
pop
hlt
shrb
sub
arpl
xchg
in
mov
cmc
inc
aam
icebp
push
jecxz
mov
jb
xchg
or
das
and
bound
pop
aad
mov
pop
mov
jge
test
fisubrl
add
lret
subl
xchg
jge
cmp
pop
insl
xchg
push
test
and
cmp
sbb
cmp
jp
mov
loopne
frstor
push
add
inc
jp
adc
xor
push
jle
out
and
push
repnz
mov
jne
pop
push
les
loope
xchg
out
jae
inc
mov
jmp
inc
int
les
push
push
inc
movsl
xorb
ret
fwait
inc
cwtl
in
pop
imul
pop
fnstenv
scas
scas
test
mov
mov
orb
in
sbb
jge
xor
pop
movsb
or
mov
stos
outsb
mov
stc
xor
add
dec
xor
test
fnsave
sub
test
xchg
gs
data16
xchg
iret
cmp
aas
sbbl
inc
lods
mov
lods
loopne
lods
gs
xchg
and
mov
shr
and
fisttpll
data16
popa
push
loop
sahf
or
insb
and
pop
inc
aaa
lods
mov
xchg
ja
imul
mov
sbbl
pop
adc
ja
int3
nop
fcomps
cmpsl
insb
incl
adc
add
imul
mov
and
cli
lods
push
mov
cmp
or
imul
or
lea
dec
push
insl
icebp
movsb
xor
imul
clc
push
rol
in
shll
sub
sbb
imul
xchg
lahf
dec
add
mov
arpl
popa
fidivrs
sub
lcall
mul
pop
imulb
aam
popf
pop
jl
rcrl
cmpsl
jmp
mov
inc
jo
lret
mov
jno
push
aad
daa
jp
shll
std
cmp
in
cmpb
xchg
or
mov
adc
xchg
in
enter
or
mov
fisubs
lea
mov
and
aaa
in
lods
xchg
inc
or
pop
add
imul
xchg
cwtl
repz
subb
push
stos
sub
adc
leave
or
push
cli
outsl
aaa
dec
xchg
xor
cltd
mov
aad
inc
mov
in
mov
fidivs
int
xchg
stos
push
mov
add
push
sti
jnp
repz
notl
add
dec
sahf
adc
inc
sub
pop
jne
jmp
out
lcall
xchg
cmpsb
fiaddl
mov
fwait
cwtl
xor
jmp
int3
out
pusha
in
sub
adc
and
push
lcall
xchg
sub
dec
test
fwait
iret
xor
cmc
add
roll
xor
xor
xor
sbb
gs
ja
jb
adc
dec
adc
enter
dec
push
push
push
repz
or
fnstcw
rorl
and
or
inc
cmp
lods
dec
ds
rorb
xchg
dec
mulb
push
jns
aaa
decb
sbb
push
xor
pop
xchg
push
sbb
mov
inc
scas
xchg
iret
negb
cmp
xor
aam
mov
xchg
mov
leave
add
sahf
push
sub
hlt
imul
sub
pop
pop
inc
js
mov
shrl
push
daa
mov
mov
aam
xor
notb
scas
lock
and
push
dec
lahf
push
fdivs
cmp
repz
fadds
cmpsb
addr16
mov
outsl
inc
and
pusha
mov
test
inc
push
pop
sub
sub
js
xchg
cmp
cwtl
aam
jno
repnz
sub
sub
inc
mov
das
in
pop
cltd
or
lahf
adc
add
sub
push
test
dec
xchg
mov
pop
insb
dec
pop
mov
dec
in
inc
jns
push
dec
fidivrl
pop
or
mov
push
ss
xchg
out
adc
sahf
mov
std
es
outsb
ret
xchg
jne
push
test
mov
aad
xor
fs
frstor
cmpsb
mov
ret
dec
rol
cmp
mov
lahf
push
inc
out
push
add
jns
ljmp
mov
cld
dec
fmull
shll
or
sub
jb
or
add
and
xchg
les
lock
jge
aas
inc
jns
push
add
pop
adc
lods
out
imul
inc
lea
out
fistpll
jmp
xchg
mov
bound
enter
and
lahf
jo
dec
imul
pop
lret
lcall
insb
aad
pop
add
sub
leave
sub
xchg
leave
pop
leave
stc
cmp
mov
gs
lcall
mov
sub
mov
aaa
jne
xlat
xorl
lcall
cmp
add
adc
xor
dec
xlat
ret
pop
inc
pop
dec
aam
popa
xchg
add
push
jbe
push
jmp
ffree
xor
shll
and
cmp
out
xchg
mov
inc
or
adc
lret
insb
add
mov
dec
faddl
push
and
loopne
lea
int
pusha
xchg
push
sbb
cmpsb
call
mov
das
adc
push
mov
subl
jg
xchg
sbb
enter
sbb
push
jp
hlt
pop
mov
sub
lea
push
shr
pop
adc
cld
cmp
mov
xor
rcll
es
pop
out
adc
mov
xchg
mov
mov
dec
add
enter
and
pop
repnz
jg
inc
and
mov
dec
leave
stos
add
jl
inc
mov
sub
loope
mov
xorl
popf
scas
faddl
fs
lret
push
jbe
mov
mov
dec
jmp
inc
sbb
mov
xchg
fnop
adc
inc
movsb
xchg
mov
out
jb
inc
in
inc
push
mov
sbb
push
rcl
and
insb
daa
jne
sbb
mov
push
inc
cmp
insl
push
dec
out
sarl
ss
push
sub
xchg
mov
cld
or
and
test
data16
shrl
mov
mov
aas
in
mov
je
mov
pop
jbe
test
cmp
lahf
fs
int
push
jge
mov
jmp
mov
and
push
mov
mov
jo
pop
into
ljmp
in
cwtl
cmpsb
push
jbe
stc
packuswb
test
and
sbb
sti
pop
mov
insb
jg
test
mov
sub
jbe
shlb
fdivl
push
aad
fiaddl
pop
dec
mov
and
push
jmp
test
cmp
pop
iret
nop
ds
jp
daa
lcall
xchg
sub
cmpsb
mov
push
mov
xor
lret
adc
insl
mov
loop
mov
or
in
ljmp
sbb
pop
xchg
loop
cmp
jne
rolb
mov
push
shl
dec
fisubrs
jl
es
test
lock
pop
insl
push
adc
adc
xor
and
adc
aad
jb
mov
ret
mulb
and
repz
add
push
sub
imul
or
dec
inc
ljmp
stos
add
sbb
xchg
in
add
mov
add
inc
cmp
leave
movsl
cli
scas
popf
pushl
or
imul
inc
lret
shll
out
sti
jg
stos
jmp
int
or
mov
cmp
cmp
push
pusha
dec
aam
mov
js
mov
jge
repz
push
in
push
and
push
ja
insl
fimuls
jmp
push
repnz
leave
test
stos
repnz
sbb
cs
scas
inc
loopne
mov
jmp
loopne
or
lods
sti
cmpsb
scas
and
mov
fistpl
pop
push
and
push
pop
jl
jle
xor
cmpsl
mov
jmp
adc
sbb
cli
mov
sarb
push
leave
lods
xlat
sub
testb
mov
pop
les
push
outsb
in
loop
in
xor
aam
movsl
fcmovb
frstor
adc
inc
fs
iret
mov
add
sbb
test
dec
cwtl
cli
dec
mov
sub
xchg
outsb
push
push
movsl
xor
jg
pop
out
sahf
pop
ds
jle
lret
inc
daa
mov
mov
pop
inc
fwait
inc
aas
mov
mov
and
cmp
or
add
push
push
mov
add
ja
mov
es
aas
in
fiaddl
loope
jb
adc
pop
add
jae
sbb
xchg
sbb
mov
xchg
and
xchg
fcmovnbe
inc
mov
fst
je
xchg
cs
orb
bound
nop
push
out
xchg
jbe
xor
pop
out
or
arpl
pop
mov
fistpl
push
xor
xchg
ds
loopne
cmp
mov
sub
rolb
cli
aaa
or
push
inc
add
mov
jg
nop
stos
sbb
push
out
rorl
mov
decb
sub
push
mov
fisttpll
aad
mov
or
fcoml
jl
add
jecxz
xchg
in
movb
adc
sub
movsl
cmc
push
jne
daa
or
mov
cs
mov
dec
mov
push
lods
aaa
fldt
aas
lds
push
inc
jmp
test
arpl
lret
push
movsb
rorb
sbb
xor
inc
outsl
push
mov
xor
cmp
cmp
je
mov
dec
mov
jns
add
fadd
data16
and
xor
test
fstps
stos
ret
mov
int
shll
or
xchg
mov
sbb
cmp
mov
jle
cmp
adc
scas
ficoms
mov
clc
data16
fwait
iret
push
or
add
data16
push
xor
mov
pop
lret
mov
xchg
cmpsb
jg
dec
aad
daa
inc
mov
fstps
adcl
xor
daa
clc
cmpsl
out
push
fisubrs
xchg
pop
addr16
shr
mov
add
lcall
scas
in
inc
add
in
add
shlb
inc
cmpsb
sbb
mov
lahf
add
scas
mov
in
mov
and
xchg
popf
fsubr
xchg
and
pop
out
inc
sbb
adc
pop
lcall
jo
lahf
cli
mov
inc
fstl
dec
add
cmp
push
dec
aaa
pop
lds
cmp
and
or
push
xor
in
push
push
shrl
stc
inc
repnz
mov
or
sahf
fnstenv
outsl
ret
rcrl
shr
sub
pop
lahf
popa
push
dec
lcall
loop
or
pushf
xlat
fwait
stos
out
adcl
fdiv
loop
call
je
dec
scas
fbstp
jge
movl
arpl
insb
in
fidivrs
xchg
js
clc
adc
jb
lahf
sub
std
sub
outsb
sbb
movb
stos
jo
cmp
mov
sahf
or
cmpsl
lds
dec
and
mov
and
sub
mov
mov
xor
lea
pop
cmp
pop
push
dec
daa
mov
pushf
mov
xor
je
jb
mov
scas
push
ljmp
add
lods
push
out
out
push
pop
mov
push
inc
jp
jnp
cmp
adc
repnz
cmp
inc
sbb
into
adc
sub
adc
push
xlat
sahf
pop
fcomps
mov
fwait
xchg
push
cmc
mov
push
cs
insb
les
push
inc
push
popf
addr16
test
sub
imul
push
fcoml
add
pusha
lods
cmpsb
mov
lods
inc
xor
cmp
repnz
leave
jmp
mov
sub
sbb
ds
inc
aad
cltd
mov
loope
sti
out
aaa
cltd
or
stos
inc
lret
arpl
xlat
mov
cmp
add
fwait
jl
jne
push
fldenv
int
add
jmp
repz
adc
cmp
sub
stos
icebp
mov
xor
sub
xchg
movsl
add
add
push
jno
jg
mov
cmpsl
xorb
mov
lods
add
lods
xchg
out
mov
or
cmp
mov
push
mov
mov
push
adc
adc
mov
and
sbb
jo
out
push
xor
jns
ret
jle
stos
stos
gs
mov
sub
pop
inc
lret
push
cmp
or
sti
push
stos
cmpb
adc
das
add
mov
adc
or
pop
xchg
dec
or
xchg
lea
or
or
insl
sbb
aam
sbb
jne
pop
sbb
sbb
adc
mov
adc
adc
jnp
push
inc
add
xchg
inc
sbb
mov
scas
shrl
mov
into
aas
lahf
xchg
cmp
ja
mov
cmp
int3
arpl
movsl
stc
je
scas
push
cmpsl
dec
movsl
fcmovnu
mov
jg
imull
loopne
and
cmp
shlb
cs
cmpsb
xorb
fsubrp
popf
cs
popa
mov
repnz
insb
jge
es
adc
push
and
mov
add
mov
sbb
mov
rcll
std
jmp
mov
js
mov
xchg
cmp
jp
lret
repz
mov
jb
cmc
arpl
cmp
in
dec
mov
pop
jb
jns
push
pop
mov
iret
lcall
les
push
adc
push
icebp
nop
in
add
pop
ds
fdivr
mov
or
push
insb
cmp
clc
sbb
pop
push
fdivrs
mov
imulb
mov
rorl
shlb
lret
mov
jmp
xchg
fadds
mov
incl
loope
into
std
jnp
scas
mov
out
enter
push
shl
lods
mov
cld
fisubs
inc
cli
mov
outsb
fwait
push
imul
cltd
mov
imul
pop
pop
jg
mov
xchg
pop
aaa
pop
jb
add
pop
cld
mov
roll
dec
mov
je
call
mov
imul
push
iret
loopne
ja
pop
in
add
push
cmp
or
or
sub
xor
in
pop
adc
gs
imulb
test
cmp
pop
inc
pop
inc
jae
mov
fs
ret
dec
mov
jg
xchg
push
sbb
inc
sahf
xlat
adcb
dec
add
call
std
push
jle
and
jle
push
rol
in
lcall
sub
movb
mov
pop
jns
mov
jl
shrl
lods
fnstcw
jmp
int3
fmul
enter
sbb
outsl
xlat
or
notb
lds
test
aas
or
pop
mov
pop
fdivr
cmp
test
aas
mov
mov
sub
pop
mov
lret
xor
xchg
imul
cmp
dec
cmpsb
jge
ds
inc
movsb
cmp
andl
fistl
popf
mov
imulb
les
shrl
pop
movsl
jecxz
cmp
sti
jg
inc
adc
push
mov
cmp
aaa
push
mov
mov
cmpsb
fcoml
arpl
nop
mov
jae
mov
or
jno
and
jge
outsb
mov
cltd
in
popa
mov
dec
xchg
and
and
mov
dec
aas
rol
jl
pushf
outsb
xlat
aas
adc
jbe
cmp
daa
xchg
popa
adc
aam
test
addr16
in
sub
inc
xchg
jle
pop
push
mov
push
jmp
push
popa
add
fsubrl
in
pop
rorb
insb
jbe
mov
jp
sti
xchg
mov
jns
das
xlat
inc
jle
add
ret
cwtl
ss
ljmp
sub
cmp
out
mov
sbb
mov
add
sub
sbb
adc
cmpsb
ljmp
pop
clc
dec
insl
test
orl
sub
adcb
pop
pop
jae
push
mov
inc
mov
enter
sbb
mov
inc
adc
mov
mov
jb
jo
aad
mov
mov
imul
xlat
and
inc
sarb
aas
push
jne
test
out
out
popa
rep
nop
and
aad
mov
insl
mov
xor
fstps
adc
mov
test
js
icebp
outsl
les
mov
adc
das
nop
test
and
aaa
push
shl
lahf
jmp
scas
test
sub
xor
pop
js
mov
fnsave
push
lods
jnp
xchg
inc
and
stos
ds
iret
cmp
loope
testb
mov
pop
xchg
fiadds
mov
cmc
xor
jae
jp
int3
lds
add
es
jo
daa
cmc
popf
mov
jae
push
repnz
out
cltd
cmp
test
xchg
divb
jl
repz
jge
fwait
nop
shl
insb
cltd
inc
push
dec
adc
stc
rolb
jle
fs
push
pmuludq
push
les
int
mov
fisttpll
pop
mov
mov
das
xchg
imul
dec
and
mov
mov
mov
mov
mov
leave
pop
cmpl
mov
pop
dec
xor
jno
xchg
add
aaa
mov
dec
lods
jae
push
jle
cmp
sahf
mov
dec
insl
or
jecxz
sub
xchg
icebp
test
cltd
cmp
fidivrs
sbbb
into
or
cltd
adc
cmpsl
pushf
loope
pop
jns
ja
shrl
cmp
in
jl
push
ds
xchg
fdivrl
inc
mov
add
jae
out
lock
push
pop
mov
int3
push
popa
xchg
dec
shlb
xchg
in
ret
and
in
sub
clc
push
pop
cwtl
movsb
mov
clc
enter
stos
addr16
shl
push
test
dec
jl
pop
call
pop
mov
es
or
xchg
add
repnz
pop
stc
or
mov
jns
fs
cmp
int
out
icebp
test
inc
rcll
mov
dec
leave
pusha
pop
sub
sub
fs
cmp
in
adc
mov
xlat
sub
xchg
push
pop
aam
inc
les
and
cmp
out
sub
mov
test
adc
lret
or
mov
mov
cmp
cmpsl
clc
push
mov
mul
lret
jecxz
cmp
lds
leave
jnp
add
inc
div
xchg
pushf
addr16
lret
mov
mov
enter
pop
sti
and
fidivrl
add
pusha
pop
mov
lds
mov
sub
sub
jg
add
int3
pop
dec
mov
adc
xor
dec
xor
test
adc
mov
or
stos
es
out
int
lock
cmp
filds
lds
hlt
sub
push
fcoms
out
cmp
test
cmp
mov
push
out
jp
xorb
lret
mov
jne
or
mov
pop
add
mov
test
sub
jmp
arpl
mov
jns
in
ljmp
jg
mov
les
shl
cld
outsl
add
push
cmp
xor
mov
push
jo
sub
xchg
cmp
inc
adc
dec
sbb
cmp
cmp
repz
call
outsb
or
push
add
sbb
arpl
jl
sub
outsl
pop
or
lcall
mov
je
jo
fldt
stos
iret
scas
orb
xor
cmp
scas
pop
loopne
xor
push
xchg
xchg
cmp
imul
stos
jb
loope
insb
adc
scas
idivb
aam
cmpb
shll
mov
popf
rcll
inc
push
inc
adc
fnsave
cli
rclb
sbb
and
out
test
bound
fistl
xchg
aas
lret
fwait
inc
mov
add
fwait
jbe
pop
xlat
nop
mov
dec
in
arpl
test
mov
adc
dec
mov
addr16
pop
ret
int3
mov
jae
jmp
fucom
out
popf
sbb
inc
ss
gs
pop
mov
int3
stos
pop
lock
bound
mov
dec
lods
sahf
aam
out
push
cmp
in
mov
jmp
push
out
ficoms
xchg
sbb
andl
inc
pop
repnz
xchg
popf
jl
cmc
push
or
jg
scas
adc
or
cmc
lea
dec
dec
push
inc
dec
mov
jno
push
fadds
cmp
jae
out
cs
push
mov
inc
ja
out
jecxz
sub
sub
sub
mov
nop
repz
push
fistps
jge
xchg
pop
loop
jl
inc
adc
test
jl
lret
cmp
cmpl
out
in
fdivl
aad
add
cli
xor
das
pushf
loop
fldl
sub
jmp
es
jecxz
add
or
cmpb
arpl
lea
adc
mov
jge
or
cmc
arpl
arpl
cmp
push
mov
push
push
pop
mov
sbb
inc
jle
and
fwait
dec
pop
loope
addr16
sub
sbb
in
popa
test
mov
adc
orb
xchg
push
ffreep
repnz
icebp
out
fists
sub
adc
dec
push
das
xchg
mov
jecxz
jno
aas
sub
mov
sbb
xchg
mov
movsb
cmp
aas
pop
xor
lahf
mov
adc
fistpll
push
push
add
rcll
mov
mov
sbb
dec
jl
aas
xor
repz
ret
xor
cmc
lea
mov
or
jl
push
shrl
jg
enter
mov
int
ret
sbb
push
mov
dec
int
adc
addb
loopne
mov
jmp
test
xor
enter
push
test
es
cmp
lds
subl
or
xchg
into
jno
xchg
xchg
ljmp
ds
inc
push
ljmp
inc
and
push
mov
lret
adc
arpl
jmp
inc
stos
lret
mov
insl
ljmp
inc
xchg
into
fstpl
add
jg
pop
inc
pusha
and
add
sbb
cli
xor
lea
mov
inc
mov
xor
sbb
pop
das
popf
and
jge
clc
adc
out
sbb
push
out
into
loop
daa
xchg
and
je
stc
orl
fldcw
dec
push
mov
imul
adc
jo
addr16
xchg
xchg
adcl
das
lock
loop
inc
ds
jo
inc
or
add
adc
stc
mov
mov
idivl
sbb
hlt
cmp
push
out
sub
dec
ja
mov
cmpb
sahf
ret
add
push
je
mov
lock
loop
dec
xor
push
jne
cmp
sbb
scas
mov
arpl
mov
lcall
pushf
rcl
enter
out
mov
imul
adc
shlb
xchg
xor
out
setle
loope
jb
fildll
or
push
je
fdivl
or
jne
in
hlt
jg
iret
mov
mov
notb
shll
test
adc
dec
ret
in
adc
mov
out
add
or
out
jle
xor
daa
lds
xor
into
test
iret
pop
call
push
or
xchg
jbe
xchg
pusha
shrb
pop
or
push
xor
sbb
fwait
dec
hlt
jae
ret
jns
jno
ror
in
inc
add
or
das
jae
xor
movsl
lock
fsub
fabs
mov
mov
ficomps
fildl
xlat
in
aas
cmp
adcb
loope
testw
lea
pop
or
test
add
into
ret
ret
xor
fnstenv
outsb
imul
sbb
adc
cmp
xor
add
arpl
popf
aad
mov
xchg
push
hlt
xchg
adc
add
or
pop
push
stos
sub
lds
popf
notb
sbb
dec
cmc
test
or
fwait
sbb
xor
cmp
xchg
es
and
add
inc
mov
xchg
stc
fninit
jno
mov
insl
pop
adc
pop
fwait
jecxz
jecxz
jae
dec
inc
and
jmp
pop
addb
mov
iret
mov
inc
lods
ret
dec
add
rclb
call
vphsubdq
pop
ljmp
in
sub
lds
jns
push
cmp
pop
xchg
xor
loope
aad
mov
push
mov
sbb
mov
out
dec
ja
push
inc
add
pop
cmpsb
jp
mov
jb
lods
push
ds
jnp
shrb
stc
in
jge
out
push
dec
mov
leave
popf
repnz
test
sbb
mov
pop
not
xor
push
ljmp
mov
fwait
aaa
mov
pop
add
jno
sahf
imul
mov
idivb
pop
xor
int3
dec
mov
gs
sbb
adc
loope
loope
push
mov
push
scas
fldl
testl
push
sub
mov
stos
xor
mov
je
pop
dec
xchg
sbbl
insb
pushf
fcompl
in
out
cs
dec
xchg
outsl
outsb
test
lahf
sub
push
aas
stos
and
mov
mov
push
or
mull
subb
call
jbe
dec
cmc
inc
loop
aad
or
std
incl
pop
je
push
xor
cmpsb
out
push
and
mov
repz
imul
inc
mov
mov
mov
xchg
popf
sarb
in
mov
repnz
daa
mov
cli
rcll
inc
popf
nop
int
leave
in
loop
rol
push
jp
xchg
jnp
loope
xchg
cltd
rcr
mov
test
out
out
mov
jne
adc
push
addr16
mov
and
cwtl
cmp
stc
or
aas
cmpsb
int
push
fwait
adc
hlt
sub
add
hlt
mov
or
push
jle
loop
test
pusha
fldcw
mov
iret
xchg
cli
lahf
fimull
stos
mov
pop
movsb
outsl
das
jl
sub
cmpsl
call
push
cmp
or
push
lods
cmp
pop
cmp
push
xchg
or
jmp
adc
adc
mov
xchg
cs
es
iret
mov
gs
arpl
shll
adc
outsl
fisubrs
xchg
sbb
in
pop
pop
call
test
gs
sub
xor
aas
in
pop
arpl
and
push
nop
cmp
mov
sub
test
aad
je
mov
adc
xchg
xlat
xor
fimull
rcl
in
mov
outsl
and
xor
or
mov
insb
xorb
std
mov
lcall
jnp
mov
ret
jb
push
out
pop
shrb
int3
adc
and
sbbl
pop
cld
call
mov
and
mov
clc
ret
clc
ss
xchg
outsl
loop
and
mov
mov
xor
sti
shlb
daa
loopne
mov
and
iret
dec
loopne
jne
out
mov
in
fisubrl
fisubrl
add
jns
mov
xchg
or
jae
shrl
xchg
test
stos
dec
cmp
push
or
pop
sbb
and
and
in
leave
jmp
cmp
cmp
mov
cmp
nop
repnz
and
cltd
mov
mov
inc
mov
popf
add
les
test
pusha
stos
cmp
xchg
mov
xor
mov
dec
fsubr
imul
aam
out
push
scas
xchg
xchg
mov
inc
je
jne
test
inc
fcmovu
adcb
cmp
das
or
addl
xor
bound
jae
rcrb
sbb
test
adc
rcr
rcrl
aaa
sbb
lahf
sbb
imul
icebp
pop
sub
xchg
mov
lods
xchg
movsl
adc
test
adc
push
sbb
jmp
outsl
stos
shlb
sbb
jmp
xchg
xchg
sbb
cltd
ficomps
pop
lahf
mov
aaa
es
inc
pusha
sbb
sub
loope,pn
sbb
xchg
add
mov
xor
test
xor
iret
mov
in
xor
lea
adc
mov
adc
shrb
pop
pop
test
mov
lock
sub
push
pop
push
sbb
scas
sbb
jecxz
scas
mov
lret
test
sbb
xor
stos
test
xchg
push
jmp
test
ds
xchg
lods
je
out
jns
xchg
addr16
jge
lahf
in
repz
jmp
jne
fmuls
sti
or
ss
xor
sub
test
notb
sub
inc
call
icebp
out
addb
int
cwtl
lret
test
repnz
dec
ljmp
scas
fcmovnb
pushf
popf
repnz
icebp
in
popl
dec
and
lcall
inc
rdmsr
inc
movsb
xor
pop
jge
loope
inc
in
out
ja
aas
dec
imul
jne
imul
sub
lahf
xchg
adc
in
ret
shlb
ss
mov
scas
push
fcomip
in
subb
imul
jmp
sbb
mov
into
lcall
sub
mov
xor
xlat
jnp
sbb
dec
pusha
pop
clc
cmpsb
jno
outsl
inc
lds
loopne
mov
cltd
in
fnstenv
movsl
sti
pushf
insb
pushf
gs
out
mov
pop
and
mov
xchg
enter
fbstp
aad
adc
cmp
dec
adc
daa
push
arpl
les
mov
or
pop
push
callw
ja
fistps
outsb
and
ficomps
mov
mov
mov
sbb
fst
sti
pop
inc
jle
adcb
mov
into
jno
jg
loopne
jae
es
adc
pop
jb
fmulp
aaa
mov
xor
repz
dec
xchg
mov
ja
mov
aas
mov
rcll
add
cwtl
jg
xor
cmp
inc
mov
add
stc
jp
jae
inc
jmp
in
mov
out
pop
mov
fldenv
fmuls
lret
gs
lea
dec
xchg
in
lcall
sub
inc
xchg
movsl
hlt
and
xchg
dec
and
pop
sbb
and
and
inc
sub
cmp
mov
movd
jo
ss
in
sbb
cmp
mov
clc
mov
inc
sbb
sbb
call
mov
lcall
add
hlt
mov
add
bnd
cmp
idiv
sti
int3
movsb
pop
xor
or
in
mov
incb
fwait
jg
repz
and
cmpl
ljmp
sub
push
dec
call
pop
pop
or
shl
sbb
jnp
and
loope
aam
loope
sarb
aam
js
in
xor
out
mov
dec
or
adc
inc
add
shll
add
inc
scas
stc
fs
mov
jbe
adc
adc
iret
sahf
pusha
je
add
pop
frstor
enter
cli
pop
mov
push
test
loopne
loope
js
pop
lret
aad
adc
push
mov
das
add
sub
and
pop
repz
dec
mov
xor
mov
xchg
ja
movsb
cmp
pop
fwait
movsl
cwtl
add
adcl
xor
ret
fstpt
test
dec
adc
pusha
das
cmpsl
dec
aam
out
mov
lahf
ss
incb
xchg
out
mov
js
lret
mov
out
leave
inc
pop
and
in
inc
scas
cltd
cltd
sbb
sbb
outsb
aam
bound
outsl
lods
cli
xlat
pop
add
pushf
test
pop
push
or
fcmovne
ja
gs
je
inc
test
pusha
or
sub
lods
or
in
iret
lods
adc
ret
add
xchg
inc
dec
movsl
mov
iret
sbb
popf
mov
jl
in
or
adc
pop
add
pop
psubd
adc
les
adc
push
mov
jb
push
jge
loope
sbbl
mov
enter
xlat
lret
ss
mov
push
ret
repz
movsb
xchg
lea
aaa
or
aam
shrb
mov
notb
shll
add
icebp
les
push
sarb
lret
cmp
mov
xchg
and
test
or
lea
cmpsb
xchg
ss
mov
ret
test
divl
imul
xchg
lahf
ljmp
lcall
mov
clc
sub
pop
call
sub
clc
dec
ja
cmp
sub
xchg
xchg
cwtl
fcoml
out
ss
mov
sbb
push
add
les
xor
divb
xor
je
scas
adc
or
dec
adc
clc
xor
popa
jmp
mov
mov
mov
xchg
sbb
mov
ja
inc
es
fstpt
xor
sti
sbb
xchg
imul
es
shll
xchg
push
xchg
jge
and
inc
cmpsl
xlat
mov
lahf
sbb
or
addr16
jg
xor
jle
xchg
sub
ja
rorb
movsb
or
push
jecxz
std
inc
sub
int3
mov
xor
int3
pop
jbe
repnz
cmp
add
cmp
adc
js
bound
fisubl
scas
add
push
negl
mov
sbb
adc
adc
fistl
outsl
push
and
iret
ret
add
jle
je
cmc
xchg
push
mov
out
lret
inc
pop
inc
mov
or
scas
imul
jnp
dec
cmp
fsubl
in
pop
in
cmp
adc
xchg
insl
mov
dec
movsl
lret
movsl
pop
fisttps
aaa
clc
xchg
mov
test
sbb
scas
stos
aad
mov
lret
push
std
xchg
add
push
push
insb
jg
or
cmpsb
outsl
pop
jecxz
pop
cmpsl
rcr
add
mov
sbb
or
jg
adc
and
pop
das
idiv
sub
ljmp
rol
es
aas
je
decb
imul
jns
mov
cmc
xchg
lret
repnz
cmp
loopne
ljmp
jmp
in
scas
or
jg
xchg
lock
sub
addr16
adc
mov
pop
mov
adc
dec
or
inc
cmc
lcall
jbe
fcomip
xchg
add
jae
jae
cmp
loop
mov
pop
test
int
call
clc
into
xor
cwtl
insb
push
xor
cmpl
dec
sub
int3
in
fwait
xor
imul
aaa
mov
push
mov
xchg
cmp
popf
add
adc
out
sarb
scas
fwait
push
enter
jg
dec
incb
sbbb
mov
push
das
mov
sarl
in
pop
mov
add
bound
popf
pop
test
mov
mov
sub
dec
or
insl
jp
mov
push
xchg
push
rcr
push
lcall
adc
out
xor
mov
lcall
fbstp
fwait
pop
je
aam
pop
jbe
call
push
insl
add
imul
adc
addr16
ja
mov
leave
mov
sub
push
xchg
pminub
pop
fmull
pop
xchg
fcmovu
jnp
fcomps
or
insb
pusha
xor
mov
cwtl
js
cltd
sbb
inc
jle
in
mov
fistpll
test
push
inc
pop
pusha
popl
xor
loope
and
je
and
inc
mov
mov
mov
dec
mov
jo
or
pop
xchg
sbb
icebp
inc
into
mov
cmpsb
bound
pop
dec
cs
stc
lock
inc
mov
fs
test
in
and
sub
mov
xchg
adc
mov
in
push
jecxz
addr16
pop
xchg
adc
pusha
outsl
cmp
lods
jmp
push
inc
adc
dec
into
cmp
aas
mov
push
jb
and
and
dec
aaa
mov
shlb
push
pusha
jmp
sbb
cmc
insl
add
shrl
cmp
shr
sar
push
sub
sub
xchg
jg
push
xor
call
decb
scas
sub
ja
and
ljmp
or
pop
scas
sub
inc
jns
repz
cmpl
and
lcall
mov
int3
out
jle
repz
out
sub
pop
loop
cmp
mov
or
hlt
mov
mov
aad
fs
mov
pop
pop
sub
jnp
mov
mov
in
ja
inc
subb
mov
outsl
movsl
std
jo
imul
mov
push
das
scas
aad
outsb
dec
mov
sub
pop
cmpsl
fwait
push
lods
pop
arpl
cwtl
adc
sbb
lods
mov
movsb
jl
test
in
rolb
sarb
ret
loope
pop
jne
dec
push
mov
adc
push
jmp
lea
or
out
mov
push
fsubrl
jp
ljmp
mov
sub
push
jp
mov
xchg
test
clc
std
inc
sub
sub
call
pop
mov
into
push
jp
pop
pusha
pushf
add
jae
fstpt
stos
out
sub
or
xor
dec
fs
mov
mov
mov
pop
add
mov
jnp
push
inc
sub
lea
cmp
rorb
mov
rolb
jno
std
repnz
clc
insb
rol
xor
sbb
push
lret
push
mov
sbb
stc
add
ret
in
jp
xchg
mov
or
add
incb
ljmp
ljmp
sub
mov
mov
add
cmp
fisubrs
loopne
test
cmc
icebp
bound
jnp
mov
insl
stos
in
cltd
mov
rcll
sub
ror
sbb
push
mov
pop
push
jmp
out
mov
mov
add
adc
dec
sti
jle
inc
dec
sub
mov
sbb
lret
fcomps
sub
pop
fldt
dec
mov
push
jecxz
jmp
and
out
out
sbb
cmp
loopne
clc
inc
arpl
adc
ret
imul
cld
sahf
test
xchg
mov
xor
ljmp
mov
arpl
lods
adc
inc
outsb
fidivl
mov
jp
sbb
pop
adc
shlb
mov
sub
jg
or
mov
pop
mov
dec
xor
mov
mov
jp
loope
dec
repz
xor
or
jmp
mov
addr16
pop
hlt
pop
rclb
subl
pop
imul
jns
je
hlt
stos
sti
jg,pn
dec
mov
mov
call
mov
inc
inc
or
pop
xchg
dec
push
sbb
mov
test
mov
lock
leave
hlt
xchg
and
inc
int
test
dec
iret
dec
ffree
jo
xor
loope
add
add
jae
insl
mov
dec
lret
lahf
dec
pop
push
push
xor
sbb
lcall
lret
or
dec
scas
pushf
cmp
xchg
jp
icebp
push
lcall
mov
adc
cwtl
int
jne
or
rcl
xor
dec
mov
mov
sub
andb
fdivs
loopne
out
xlat
outsl
lods
popf
out
rcl
aas
loop
lahf
je
or
fistpll
cwtl
or
aam
inc
jne
adc
popl
sub
xor
mov
int3
pop
test
push
je
mov
das
cmp
lock
sub
out
in
jecxz
xor
leave
or
inc
cmp
pop
mov
inc
fbld
xlat
and
xchg
mov
jecxz
sahf
sbb
pushf
inc
data16
sub
in
cmp
xlat
cli
adc
mov
jb
fwait
pop
cs
repz
mov
pop
mov
cltd
or
aas
inc
adc
into
inc
out
add
fldt
and
repz
aaa
or
push
push
adc
sbb
rolb
cmc
pop
fnsave
jne
sub
aad
or
or
das
xlat
sbb
pusha
mov
arpl
inc
inc
xchg
daa
jle
cmp
or
in
insb
xchg
ret
pop
mov
xor
stc
lahf
jp
dec
xor
movl
je
add
sbb
jae
dec
push
scas
in
push
test
je
call
lret
test
insl
jns
mov
mov
mov
cltd
xor
sbbl
push
rcl
xlat
aad
or
sbb
and
out
xchg
fldt
lcall
jp
fwait
ljmp
mov
inc
fcmovu
pop
cmc
jne
aas
imul
vmwrite
pop
dec
inc
pop
xchg
dec
or
sahf
jo
cs
sub
adc
cmp
loope
out
mov
in
sub
scas
push
hlt
mov
rcrl
xor
and
dec
add
repnz
and
mov
pop
jecxz
inc
add
outsb
cmp
bound
fs
negb
fsts
mov
popf
or
popf
sub
leave
mov
cmp
push
jo
outsb
push
cltd
test
inc
pop
out
xor
nop
push
cmp
ds
xchg
or
jo
call
add
push
hlt
xor
fidivrs
pop
mov
scas
das
cli
insl
imul
and
test
repnz
pop
mov
cmc
dec
add
pop
sub
inc
ret
cmpsb
ljmp
ljmp
cmpsb
out
jp
jnp
mov
pop
or
inc
stos
cmc
jne
mov
mov
testb
in
shll
insl
lods
pop
sub
inc
std
push
scas
ljmp
inc
sbbb
sbb
and
or
lahf
rcll
add
cmpsb
inc
or
hlt
and
ret
and
dec
jp
and
fbstp
mov
insb
ret
dec
pop
test
sbb
shl
mov
test
adc
cmpsl
test
add
rol
mov
or
push
inc
inc
adc
cmp
or
add
or
mov
pop
jbe
jg
xchg
data16
loope
ja
fstpt
sbb
mov
mov
ffree
test
push
iret
xor
call
dec
mov
jo
scas
mov
push
lcall
test
out
mov
iret
or
pop
pop
lcall
push
mov
jno
ret
push
sbb
test
movsl
jnp
rcl
or
xchg
jns
jecxz
xor
scas
cmp
cmp
rcr
fldl
mov
sub
sub
push
dec
or
ret
mov
icebp
pop
inc
cs
imul
int3
scas
jge
jl
and
mov
aad
divb
add
and
push
sub
fs
enter
dec
push
test
jns
popf
popa
adc
clc
pop
sbb
push
cmpsl
cmpsl
movsb
jp
sbb
es
rcrl
xor
mov
cmp
outsl
cmp
cmp
fwait
das
xor
mov
mov
subl
push
mov
adc
fs
jo
int3
je
movsl
cmc
stc
stos
test
les
lods
int
out
lea
xchg
push
fistps
shll
xor
xorb
push
aaa
fistpll
dec
cmp
dec
sahf
sbb
movsl
jno
xchg
dec
int3
mov
testl
mov
popa
mov
pop
mov
inc
push
mov
xorb
icebp
jae
leave
movsb
and
inc
ret
mov
es
add
js
mov
xor
xor
jecxz
mov
out
nop
loop
pushf
shll
pop
push
repz
push
and
mov
dec
push
fisttpll
and
push
adc
xchg
xchg
sub
pop
push
test
ss
add
sbb
jecxz
mov
pop
movsl
shll
pop
pushf
iret
push
sbbb
sbb
sahf
push
les
inc
cltd
jg
push
add
lds
mov
xor
jmp
test
or
clc
adc
int3
int3
jns
jmp
xchg
cltd
stos
cmp
nop
and
inc
xlat
int
sbb
bound
ret
sub
pop
in
inc
ss
ja
ret
out
mov
insb
mov
sub
push
adc
mov
jecxz
in
xlat
mov
pop
fidivrl
pop
jns
sub
and
lret
ljmp
xlat
cmp
leave
stos
fcoml
sarl
inc
pusha
aam
xchg
add
sysret
movsb
adc
cmc
cmc
fisubl
jge
adc
dec
aam
mov
adcb
dec
lcall
xchg
movsl
aas
mov
lcall
fs
xor
daa
subb
shlb
mov
jl
jmp
dec
dec
jnp
and
cld
stos
lahf
loopne
push
dec
mov
fs
repnz
aad
cmp
push
inc
adc
sbb
das
pushf
les
loop
pusha
xor
jae
testl
jbe
jge
into
ret
add
mov
pusha
add
lods
and
xlat
mov
add
icebp
js
cld
mov
add
mov
ds
push
mov
push
ja
out
lret
out
roll
jbe
xchg
popa
push
mov
aam
and
andl
insl
pushf
imul
mov
dec
clc
loop
adc
and
fisttps
jbe
pop
inc
push
pushf
xchg
in
insb
fisubl
push
loop
add
mov
iret
lret
xchg
adc
shlb
mov
inc
bnd
mov
mov
sbb
in
repnz
aas
inc
mov
pop
dec
mov
insb
pop
loopne
outsl
mov
jl
xor
mov
inc
sbb
lea
test
int3
outsb
cwtl
sub
ret
imul
pop
push
std
scas
inc
sub
sub
fstpt
sub
lret
decb
mov
jb
int3
sbb
negl
out
inc
mov
clc
fisubrs
mov
sub
repz
mov
gs
push
jecxz
sub
test
cli
clc
adc
out
or
sub
cld
not
mov
sub
or
pusha
movsl
lods
xor
aam
iret
es
lock
mov
enter
cld
insb
sub
jne
inc
in
mov
in
arpl
jbe
fs
adc
lahf
dec
xor
popf
into
xor
inc
pop
mov
xchg
inc
enter
cltd
push
sub
cmp
out
lea
shl
push
stc
sub
adc
aam
lcall
and
jmp
mov
cmp
xor
pop
xor
imul
movsl
negl
or
xchg
push
sbb
scas
mov
hlt
sbb
jae
and
adc
in
pop
or
cs
lea
or
scas
sti
pushf
insl
jg
movsb
outsb
and
sub
lret
cmp
adcb
test
cmp
call
dec
scas
sbb
ret
pop
push
cld
adc
cmpsb
and
or
add
xchg
fld
je
arpl
imul
sub
scas
ret
outsb
add
jp
sbb
fidivrs
jg
lods
out
outsb
rolb
xor
out
test
cmp
icebp
test
mov
cmp
cld
inc
les
xchg
lock
enter
nop
and
stos
push
insl
jecxz
pop
mov
sbb
daa
sub
shrl
in
imul
xchg
pop
pop
mov
mov
bound
dec
cmp
sbb
or
ja
stos
cmp
push
outsl
pop
mov
test
cwtl
pop
pop
les
pop
leave
hlt
push
in
shll
cmpsl
stc
enter
aam
mov
cwtl
adc
and
pop
ljmp
push
dec
sbb
iret
push
test
cmp
popa
in
xchg
mov
int3
cmc
lret
or
out
mov
sub
int3
shrl
arpl
xchg
mov
dec
sbb
fimuls
and
lds
out
cmp
cmpsb
sub
adc
fdivl
pop
pop
nop
sbb
out
call
test
es
add
jge
pop
cmp
mov
jle
or
popf
push
clc
jp
add
test
mov
dec
sub
pop
lret
and
xor
push
das
pcmpgtw
pop
xchg
cli
add
cmp
mulb
sbb
enter
repnz
xchg
dec
and
pop
push
xchg
negl
in
test
scas
out
pop
xor
pop
je
sub
popf
arpl
add
popl
roll
jae
add
jp
dec
pop
ret
nop
cmp
je
cmc
xchg
pop
sub
cmpsl
ficomps
push
inc
out
jle
xor
sbb
sarb
movsb
jecxz
jmp
mov
iret
hlt
sbb
int
imul
test
mov
jle
fildll
inc
div
jg
int3
mov
xchg
cmp
stos
aad
jo
xor
jecxz
push
clc
sub
adc
pop
icebp
add
pop
popa
aad
daa
or
jo
mov
test
mov
out
sbb
les
sbbl
cmpsb
dec
xchg
sahf
jno
pop
jle
fwait
aad
add
int
xor
adc
push
in
test
fistpl
mov
xchg
lods
cmp
addb
in
ds
xlat
lret
push
xchg
repz
xchg
jno
jne
and
sbb
mov
bound
sub
adc
fs
pop
lcall
fdivrl
pop
sbb
sbb
dec
dec
call
out
call
sub
and
bnd
pop
jecxz
aaa
xor
adc
inc
stos
stc
lret
jno
pop
or
pop
inc
repz
sti
mov
bound
pop
fdivs
pop
and
push
fisttpll
add
and
pop
ds
rcrl
mov
ret
cmpsb
scas
push
mov
mov
inc
jmp
sbb
xor
push
add
or
push
gs
sub
or
cmp
pushf
hlt
cmovbe
std
sub
push
lret
mov
adc
cmp
fistpll
mov
push
pop
movsl
jmp
inc
mov
push
push
in
dec
and
stc
xorl
call
jge
sbb
test
mov
xchg
ljmp
shl
jmp
dec
or
lods
pop
cmpsl
cmp
mov
xchg
lock
mov
dec
sti
clc
stos
push
mov
imul
cmp
mov
ror
outsb
cld
pop
push
jbe
jg
lea
mov
lock
or
mov
mov
in
ljmp
mov
sbb
and
mov
fsubs
mov
xchg
jmp
sub
cli
fisubrl
in
mov
jmp
add
hlt
and
or
lods
sub
add
aam
aad
insb
xor
fld
rclb
loope
movsb
stos
lcall
xor
push
push
bound
push
xor
aas
inc
mov
loope
jle
mov
cs
fwait
and
loopne
and
mov
pop
lods
jg
bnd
sub
inc
jbe
mov
test
popf
pop
rclb
xor
dec
mov
cmp
or
mov
mov
vandpd
les
cmpb
shr
inc
and
xor
call
push
daa
stc
and
jo
ret
mov
sbb
int3
xor
fdiv
jo
xor
push
mov
dec
sbb
icebp
jo
sti
into
xor
add
dec
jo
mov
pop
push
in
bndstx
adc
in
outsb
scas
cwtl
sub
cmp
jle
dec
sbb
lret
push
idivl
add
lods
mov
pop
inc
lds
dec
dec
pop
dec
jecxz
jno
loope
or
or
lcall
pop
in
sbb
adc
xor
mov
sub
sahf
scas
push
fcoms
in
pushf
scas
sbb
and
xor
mov
push
lods
fs
pushf
cmpsb
fdiv
cmpb
fcmovne
cmp
fisubrl
mov
loope
push
jbe
nop
xchg
or
pop
cmp
push
mov
and
push
push
push
hlt
sub
dec
out
push
mov
inc
push
mov
mov
les
push
mov
popa
mov
lock
xor
jmp
adc
negb
sbb
xor
adc
nop
ffreep
push
mov
jecxz
test
jmp
pop
inc
movl
lock
sbb
insb
decb
ds
sbb
fsubl
popa
mov
leave
push
or
movaps
push
insb
ds
fiaddl
sub
je
ficoml
sbb
mov
inc
mov
stos
cmp
and
sub
xchg
xlat
orb
adc
hlt
push
pop
aam
push
cwtl
jno
ds
sub
popf
sahf
pushf
push
adc
adc
aad
das
sti
sarl
cmp
and
cwtl
mov
mov
cltd
clc
and
cld
sbb
es
ss
add
pushf
lcall
mov
lods
jb
xchg
cmc
test
jnp
pop
mov
jbe
test
add
pop
jae
adcb
jbe
sub
dec
mov
xchg
pop
mov
sti
add
fistpl
in
mov
stos
sub
cmp
inc
out
maxps
jo
mov
imul
lret
add
mov
cmp
data16
pushl
and
push
sbb
addr16
les
jo
popa
int
loope
inc
int3
add
jg
push
sub
cmp
in
xor
stos
mov
mov
pop
ljmp
adc
int3
cltd
add
jae
ja
pop
mov
movsl
mov
sahf
lods
mov
or
leave
sub
dec
xchg
mov
loope
ljmp
call
imul
xchg
test
sub
xor
into
sbb
mov
fmuls
fisttpl
mov
stos
sti
int
or
cltd
cmp
outsb
lcall
xchg
add
repnz
adc
jb
ds
pop
and
push
and
std
inc
xchg
pop
cltd
cmc
in
mov
cmp
bswap
lcall
mov
call
mov
bound
dec
repnz
test
jae
clc
movsw
xchg
scas
rclb
and
not
iret
ljmp
mov
fcmovbe
fcmovnbe
or
cmp
clc
aad
test
cmc
add
xchg
push
fldl
stos
and
or
cmc
fdivl
sbb
leave
ljmp
cmp
ja
addr16
outsb
pop
adc
ficoml
lods
js
sub
add
arpl
fwait
pop
stc
mov
mov
push
jb
xchg
xchg
cmpsl
les
test
popf
leave
lock
lret
jo
fs
mov
push
cmpsl
add
adc
hlt
mov
ret
cmp
mov
movsb
jbe
iret
mov
cwtl
xchg
es
daa
outsb
jo
and
dec
push
mov
xor
das
push
cmp
mov
sbb
fstl
leave
leave
jmp
lods
mov
cmp
or
adc
movsb
cld
test
add
les
fwait
pop
push
mov
jb
aad
mov
cld
or
push
repz
mov
fwait
push
mov
sbb
mov
mov
sub
aam
out
lods
jbe
sahf
xchg
enter
mov
aaa
cmp
and
add
insl
mov
and
cmp
push
out
jl
push
lds
inc
mov
outsb
sub
mov
pushf
sub
pop
or
jno
js
mov
pushf
xor
cwtl
and
cld
xchg
sub
cld
add
xor
shlb
subb
hlt
cli
stc
cmp
js
sbb
movsl
fisubrs
lret
call
xchg
bound
int
icebp
cmp
aas
push
clc
das
mov
out
lods
in
cmp
push
or
lds
sahf
xchg
hlt
jle
daa
inc
fsts
repz
jb
add
ftst
in
pusha
adc
lahf
push
cmp
arpl
cmpsb
or
sahf
sbb
jo
add
test
sbb
xchg
mov
repz
or
cltd
and
mov
movsl
mov
lret
scas
cmp
sti
jmp
repnz
jno
es
xorl
or
cmp
add
mov
cmp
and
push
int3
sbb
cmp
jnp
pop
jl
cmpsb
mov
mov
test
mov
outsb
bswap
bnd
cmp
cmp
pop
imul
dec
das
rcrl
stc
jbe
aas
test
dec
xor
inc
mov
andl
or
rolb
in
jge
dec
repnz
insl
xor
repz
test
xor
mov
iret
loope
or
add
mov
mov
lock
push
pop
lahf
mov
dec
std
or
call
iret
fs
sti
mov
popf
mov
lds
or
jns
out
mov
popa
adc
in
pop
aam
and
push
cmp
pop
hlt
dec
xor
lret
jae
jp
insl
jnp
pusha
xor
jo
jno
dec
push
lea
ja
sbb
mov
mov
jle
mov
sti
xlat
sbb
jle
pushf
adc
mov
dec
ja
cmp
mov
push
enter
pop
popf
scas
cltd
xor
scas
cmpsb
jle
cmp
xchg
mov
js
lcall
rcll
or
mov
insb
sbb
jns
jmp
mov
ja
lret
xor
sbb
sbb
in
hlt
xor
stos
mov
scas
adc
xchg
icebp
fsubrs
lock
sbb
rcrb
lea
mov
mov
cmpsl
fisttpll
push
mov
fnstenv
outsl
lret
sub
jmp
cs
hlt
pop
vmwrite
cs
xchg
push
sbb
mov
dec
push
adc
ja
jne
icebp
sbb
xorl
jo
movsl
ss
fcom
add
add
sbb
call
xor
fidivs
es
shl
add
movsl
cli
adc
sub
lds
sbb
pop
in
clc
dec
ss
or
mov
mov
sahf
add
call
out
lea
pop
loopne
adc
lcall
mov
mov
popa
je
and
push
call
mov
jns
xchg
je
or
sbb
jbe
sbb
mov
test
xor
out
ja
mov
mov
cmp
stos
sbb
sbbl
dec
in
shrl
out
popa
push
mov
pop
jle
fs
lcall
pop
mov
xor
push
mov
or
stos
rorl
inc
push
mov
dec
adcl
inc
jmp
xchg
lods
mov
roll
in
cmp
xor
cmpsb
imulb
into
mov
lods
cmpsl
out
jbe
dec
jge
xchg
sub
and
testb
lret
dec
fnsave
xchg
das
iret
fdivrs
push
les
movsl
xchg
add
ss
inc
mov
out
adc
xchg
cwtl
sbb
inc
pop
and
inc
jecxz
and
xor
cmp
icebp
ss
pop
addr16
arpl
stos
pop
or
lret
cwtl
push
adc
sub
jns
out
sti
xchg
xor
or
push
fdivl
and
subb
es
popf
gs
sbb
inc
and
and
mov
jle
push
mov
sub
push
out
imul
xor
ret
scas
test
loop
cli
les
pop
imul
and
mov
lods
xorl
les
sbb
inc
mov
jmp
sub
jle
inc
jle
jecxz
xor
dec
test
lcall
cld
sahf
sub
sub
test
inc
push
push
nop
in
ret
fcoml
dec
sub
lcall
ret
out
imul
popf
jecxz
mov
iret
or
sub
testl
cmpsl
imulb
aam
add
inc
bound
call
jl
scas
jl
xchg
xchg
mov
daa
jo
hlt
add
jae
rclb
mov
and
cmpsl
mov
aaa
je
and
fildll
xlat
push
xor
jns
sarl
pop
ret
js
mov
xor
shrb
pop
dec
sub
inc
sbb
xor
mov
ret
leave
gs
data16
jns
out
mov
xor
adc
sub
xor
push
fsubl
fimuls
aad
cmc
loope
shll
adc
push
xchg
xor
adc
lds
or
pushf
andb
mov
sbb
cmp
pop
insl
sar
pop
in
out
jl
cmpl
leave
andl
xchg
das
ja
cmp
mov
mov
lods
popf
test
movl
lret
push
add
int
sub
pop
in
jge
ds
les
sub
out
cmp
inc
das
or
data16
call
in
leave
and
sbb
dec
orb
jl
sbb
jae
stos
and
push
push
pusha
outsb
ret
fs
lods
dec
ret
dec
adc
dec
xchg
push
lods
lcall
sti
dec
fs
jl
inc
mov
ret
cmpl
mov
jo
dec
sbb
mov
in
xchg
add
cs
push
aaa
xchg
pop
in
pop
in
lret
imul
cmp
jle
int
sahf
imul
fnstenv
das
gs
xlat
insb
mov
sub
sbb
int
adc
rcrl
jne
cmp
fs
sbb
js
cmp
inc
cmpb
push
jmp
in
addr16
rcll
es
je
mov
test
mov
popf
hlt
dec
inc
sub
cmp
cltd
cs
rclb
cmpsl
es
or
iret
pop
cmc
in
dec
lock
xchg
dec
in
push
aad
fcmovne
enter
loopne
movsb
rclb
mov
jo
mov
outsb
xchg
push
scas
inc
mov
int
insb
pop
mov
lret
ds
pop
pop
cmp
sbb
push
xchg
shr
sbb
gs
es
ja
pop
aam
pop
int
ljmp
and
fadds
adc
xor
sbb
jl
loop
outsl
imul
jl
lock
push
ljmp
xor
inc
adc
add
xchg
xor
in
sub
mov
sbb
lcall
cmpsl
mov
inc
mov
jb
and
add
xor
jo
cmp
or
out
iret
push
and
mov
ja
sbb
mov
cmp
ljmp
inc
pop
and
dec
xchg
sarl
insl
push
lods
push
mov
repz
dec
add
mov
push
push
sbb
push
cmpl
popa
stos
jns
cmp
cltd
daa
and
xor
add
ljmp
dec
mov
orb
outsb
sti
shll
pop
jg
adc
pop
mov
push
in
cmp
sbb
jae
sub
dec
dec
sub
pop
ret
jnp
mov
ret
cmp
lret
ret
xorb
pop
and
or
xor
dec
pusha
fildl
mov
call
xor
movsl
xchg
ds
mov
out
adc
repz
stos
mov
cmp
xchg
sti
and
push
int3
pop
and
dec
divps
push
dec
xor
ror
dec
xchg
or
xchg
mov
in
sarb
xor
sbb
aas
add
das
xchg
jns
sahf
ds
adc
mov
std
adc
outsl
xor
xchg
fwait
loope
bound
rolb
sub
jns
cli
pop
inc
not
lret
xchg
pop
int3
js
mov
das
insl
push
xor
adc
cmpsb
jnp
out
iret
stos
dec
ds
int3
sub
sbb
push
xchg
push
shrb
jo
sbb
mov
xor
push
xor
loopne
dec
pop
jecxz
cmpsl
fucomi
rsm
sahf
adc
xchg
in
arpl
jp
fsubrp
push
mov
xchg
fsts
cmp
add
arpl
popa
pusha
das
dec
shrl
incl
fwait
cmpsl
int
femms
mov
call
ljmp
fcmovne
jae
enter
testb
xchg
or
nop
ja
dec
cmpsl
stos
add
repnz
mov
push
sti
pop
cmpsb
sarl
aad
xchg
xchg
loopne
loopne
dec
mov
je
xchg
sbb
dec
sbbb
shll
cltd
call
inc
xchg
pushf
ja
xchg
cmp
lahf
cmp
fs
frstor
loope
cs
das
aad
mov
mov
adc
add
fcompl
out
jnp
push
xchg
dec
xor
testb
mov
jg
lret
mov
push
andb
xor
testl
je
pop
sub
imul
shr
push
sub
mov
lods
out
and
ljmp
xchg
cltd
push
dec
and
icebp
es
add
or
fsub
rclb
add
pop
or
out
dec
pusha
enter
pop
inc
sub
or
movb
mov
jmp
data16
out
sub
pop
lods
or
shll
aad
insl
fldenv
loopne
scas
fcoml
jle
add
xor
in
jae
in
in
inc
and
push
xor
jo
popa
hlt
push
sbb
test
ss
enter
mov
add
jge
add
push
jae
mov
mov
xor
jbe
stos
mov
inc
aam
ret
mov
es
sub
inc
ja
xchg
sbb
outsl
xchg
push
pop
je
in
inc
lahf
aad
cmpsb
pop
jp
push
enter
loope
cmpsb
cmpsl
sahf
fbstp
push
mov
or
lahf
inc
jae
test
xchg
mov
xor
dec
xor
pop
dec
aas
xchg
bound
fisubrl
sbb
test
ljmp
jp
mov
fidivl
rolb
push
das
sub
imul
xlat
jg
lods
int3
mov
mov
cmp
jb
or
xor
outsl
mov
ficomps
mov
cld
insl
dec
js
outsb
inc
or
out
mov
mov
jae
jno
movsl
loope
xchg
xchg
scas
fdivl
xchg
stc
cltd
fdivl
mov
scas
pushw
cmp
popa
mulb
popf
loop
mov
lret
mov
push
ljmp
xchg
add
mov
fmull
je
jns
jbe
imul
outsb
mov
mov
rcr
mov
fisubl
rcrb
sub
jbe
ret
add
lods
fisttpl
out
dec
cs
pop
push
mov
jg
lret
mov
jnp
jl
adc
inc
cltd
mov
sub
add
jp,pt
and
push
inc
sub
and
and
push
mov
xchg
xor
inc
push
adc
jg
scas
mulb
jo
inc
mov
lods
sar
xor
jnp
stc
out
loop
inc
int3
inc
rorb
mov
xor
popa
stos
xchg
in
out
cs
jg,pn
jle
pop
insb
adc
dec
test
push
mov
and
mov
gs
jb
adcl
clc
std
or
jge
incl
jle
loope
cwtl
test
in
popl
sub
jmp
ficoml
or
insb
add
xrelease
out
mov
mov
jecxz
sahf
cmc
cmp
test
add
cli
jle
mov
mov
cmpsb
mov
aaa
gs
pusha
into
jg
jecxz
rclb
push
jnp
daa
stos
roll
mov
sahf
pop
push
add
xchg
cmp
mov
pop
iret
shl
cmp
jmp
pop
in
cmovns
pop
inc
pop
jmp
adc
sbb
fs
insl
dec
xchg
and
addr16
ds
lret
nop
loop
push
inc
nop
jnp
insb
outsl
repz
pop
mov
dec
fnstenv
movsb
xchg
mov
sub
mov
mov
aam
cs
stos
lret
mov
dec
cmp
adc
jbe
cmp
iret
push
frstor
dec
mov
cmp
mov
sub
push
out
jo
les
aas
jne
push
mov
mov
mov
xchg
outsb
push
add
sbb
pop
pop
and
inc
push
adc
mov
dec
out
shlb
jo
xlat
rcr
push
iret
cmp
bound
mov
add
inc
jle
mov
or
scas
mov
inc
lcall
push
jge
sti
pop
jp
ror
adcl
sbb
flds
mov
jecxz
push
ljmp
lods
ja
dec
fdivrl
sub
test
dec
and
push
js
das
mov
pop
repnz
or
mov
ret
push
adc
subb
loop
or
xchg
adc
pushf
imul
cltd
inc
push
push
xchg
pop
jl
sarb
jae
mov
enter
movsb
cli
int3
pushf
pop
pop
jmp
jmp
push
inc
mov
push
push
jl
jno
call
pop
out
iret
clc
pop
lea
imul
mov
clc
add
jecxz
pop
gs
add
or
rolb
add
mov
adc
in
inc
call
mov
imul
loopne
mov
inc
jecxz
lds
sti
sub
fstpl
xchg
test
leave
test
call
mov
cwtl
jbe
adc
sub
xchg
insl
or
xor
ror
add
mov
push
adc
xchg
scas
xchg
mov
xor
xor
test
xchg
add
sahf
mov
fidivrl
popa
xchg
gs
jb
loop
mov
pop
cmc
pop
loope
fsubrs
jns
fsubl
rcl
mov
push
jae
and
cmp
sub
popf
fyl2xp1
sti
pop
or
unpcklps
loope
mov
adc
mov
repnz
mov
popa
inc
cmpsl
sbb
mov
dec
mov
fisttps
push
rcl
cmp
xchg
ja
cmp
dec
ljmp
je
push
out
adc
fdiv
inc
cmp
mov
pop
fwait
fwait
mov
lcall
mov
idivb
inc
jbe
mov
test
adc
fistpl
dec
rcrb
jmp
or
and
ljmp
cltd
mov
mov
xchg
sahf
cmp
sarb
fdiv
and
cli
into
push
lahf
pop
cmpsl
call
or
mov
fistpl
femms
or
jno
xor
add
and
nop
dec
inc
pop
push
fucomi
jns
xor
test
add
cld
fldcw
add
jp
subl
into
jp
or
lock
lahf
or
int3
movsb
aad
pop
push
or
sbb
fs
inc
test
mov
out
sub
int
in
xor
and
cmpsb
mov
lea
out
nop
push
mov
dec
sub
sub
and
push
shrl
cmc
out
or
and
push
xor
test
and
or
ss
push
jns
or
popf
xchg
jg
sub
inc
sub
inc
mov
jp
pop
or
pop
and
dec
pop
inc
cmpsb
cmp
jns
nop
push
fistl
inc
popf
int3
jmp
stos
std
add
stc
insl
push
push
flds
xchg
lods
and
cld
push
and
jg
call
or
icebp
xor
push
test
nop
in
adc
std
bound
imul
cmp
loope
sbb
les
mov
xchg
sbb
mov
sahf
inc
out
test
iret
dec
jl
lea
cmpsb
enter
lods
xchg
ret
ffree
mov
adc
pop
pavgb
out
cmp
popf
cmp
or
inc
movb
aaa
nop
inc
cmp
sti
frstor
push
jge
dec
dec
cld
ljmp
std
mov
jae
push
inc
jnp
popf
mov
mov
mov
sarl
jp
int
xchg
xchg
test
dec
lds
shl
enter
add
cmp
add
les
push
cmp
repnz
out
mov
test
dec
jns
or
mov
popf
test
inc
loop
mov
adc
rcll
sbb
inc
fs
jae
stos
ja
andl
ret
mov
pop
sahf
inc
cld
push
ret
inc
fdivl
sbb
add
add
cmpsb
push
or
dec
and
ss
push
inc
pop
sbb
lock
fists
shrl
push
js
inc
cmp
jmp
fisttpll
mov
jmp
in
vpmaxsw
repnz
notl
sarb
test
daa
mov
xchg
and
movsb
and
je
fsub
mov
icebp
das
std
push
addl
enter
pusha
inc
loopne
aas
pop
mov
fldt
popa
sbb
scas
fdivl
pop
inc
sahf
add
insl
pop
lea
mov
jns,pn
mov
jle
out
xor
sbb
int3
insl
xchg
jb
pop
fiaddl
mov
jbe
loope
dec
cmc
or
xor
loop
aam
and
cmpl
inc
push
mov
leave
jno
xor
fisttpll
sbb
addr16
arpl
lret
pop
mov
out
cmovb
push
push
jnp
and
or
pop
dec
flds
std
cmp
loopne
stc
insl
push
pop
ret
jae
cli
cwtl
adc
mov
pop
jge
mulb
jbe
lods
jecxz
ror
outsl
lret
pop
movsb
pop
or
cmp
pop
cltd
xor
jne
out
xchg
dec
mov
lock
jb
fprem1
insb
jb
out
fldt
or
inc
icebp
lret
in
cmp
lahf
and
sub
push
pop
add
pushf
stos
pop
loope
stc
mov
jbe
mov
xor
inc
out
movsb
cmp
lods
call
mov
jl
mov
sbb
addb
and
mov
repz
lea
push
jg
mov
push
jbe
push
jp
and
xchg
outsl
and
pop
cmp
sub
cmpsl
xor
mov
sub
inc
mov
outsb
test
cmp
cmpsl
jne
sbb
pop
call
clc
adc
adcl
pop
push
xor
cmp
test
fs
push
aam
or
and
lock
mov
ror
cli
adc
test
fwait
adcb
clc
cmpsl
mov
and
pop
loopne
ds
xchg
inc
rorl
sarb
iret
push
sti
lret
and
roll
and
cmc
adc
cmp
xchg
ret
add
inc
mov
lahf
subl
sub
insl
cli
repz
jmp
dec
sub
mov
call
xchg
jae
mov
cs
mov
and
scas
in
jl
pop
and
sub
or
and
stos
inc
jno
mov
or
sbb
cmpsb
cli
loopne
jecxz
test
repnz
sub
nop
xor
pop
addr16
and
rorb
xchg
jo
adc
pop
xor
push
pop
push
mov
inc
and
cs
outsl
mov
adc
cld
insb
sbb
sar
cmp
ja
mov
sub
out
cld
pop
mov
pop
clc
jp
inc
mov
call
push
push
and
lcall
adc
sub
sbb
cmp
hlt
jl
lock
xchg
mov
jne
mov
cltd
push
xor
mov
pop
mov
popf
test
inc
sarl
lods
testl
cmp
imul
dec
add
xchg
add
sar
mov
dec
sahf
pop
je
lds
jb
nop
xchg
cli
jp
dec
cmp
mov
sub
pop
xchg
or
std
test
cltd
movb
aad
dec
sub
xlat
inc
pop
mov
push
sub
jb
adc
sahf
mov
rcr
xchg
ret
out
sbb
jp
stos
fsubl
or
repz
or
jecxz
inc
xor
loop
cpuid
dec
fcoml
sbb
sub
mov
push
test
fildll
cmpsb
inc
je
mov
cmp
add
xchg
push
inc
icebp
rol
mov
and
inc
pushf
jge
xchg
fmull
cmpsb
jp
dec
sbb
dec
sarl
push
das
adc
movsl
scas
rclb
inc
dec
lret
sbb
pop
and
loope
cld
flds
cmp
cmc
add
jmp
inc
push
jg
int3
push
repz
dec
fcmovbe
add
push
je
fprem1
mov
sbb
icebp
js
sbb
je
mov
out
pop
push
jns
shl
ret
lahf
push
call
sarl
je
fdivr
xchg
and
lods
sbb
movsl
jbe
and
test
insb
dec
xor
pushf
mov
test
cld
dec
repnz
clc
jl
and
cmovp
imul
loopne
and
mov
into
jge
cld
jl
cmc
mov
cld
adc
xchg
or
xchg
mov
loopne
imul
scas
mov
xchg
cmp
jmp
data16
xchg
dec
jmp
lret
dec
pop
scas
stos
xor
repz
repnz
and
hlt
not
sti
and
mov
ss
repz
stc
push
rcrb
movsb
icebp
cmp
pop
outsl
add
jmp
ds
rcrb
cmp
subps
xchg
sbb
in
push
jle
mov
xlat
inc
shlb
pop
fdivrp
cld
dec
dec
add
xchg
xchg
pop
cmp
jp
jbe
stc
loop
inc
cmpsb
pop
in
push
pop
fsubs
enter
lahf
imul
fimuls
xor
lods
jle
mov
inc
cltd
pop
nop
enter
or
outsl
xor
inc
rorb
cmpb
idivl
inc
mov
mov
jne
mov
fwait
test
jne
ja
test
imul
sbbb
cmp
sub
aad
ret
push
add
loopne
les
sbb
bound
push
lcall
sub
pushf
cmp
adc
outsl
inc
pop
sub
ret
xor
enter
std
bnd
cmp
repz
fdecstp
pop
mov
int3
iret
add
mov
xchg
ror
xorb
stc
outsb
or
pop
add
addl
mov
std
mov
mov
cmp
jle
cmp
or
lds
nop
std
dec
leave
and
xchg
mov
dec
cwtl
inc
xlat
xchg
shlb
mov
and
int3
push
xor
rorb
sbb
mov
movsb
jmp
insb
arpl
ds
aaa
ss
pop
cwtl
sbb
out
repz
and
sbb
stos
xchg
and
outsb
lahf
or
insb
sub
les
nop
and
or
nop
les
inc
cmp
mov
mov
jle
pop
fwait
out
retw
aad
cmp
or
cwtl
and
in
pop
dec
mov
mov
or
xor
mov
sbb
jo
ss
roll
fistl
inc
into
or
lret
pop
ficompl
and
stos
rcll
lahf
push
dec
roll
mov
jb
ja
adc
iret
cmc
dec
test
adc
or
out
jecxz
arpl
mov
scas
jl
loope
clc
mov
mov
inc
and
popf
jg
sbb
push
sub
outsl
inc
add
ds
xor
in
inc
ret
jns
es
repnz
loop
popf
lds
mov
repnz
in
sub
int3
out
cmpsl
aam
faddp
jo
lret
ljmp
and
push
jne
or
xlat
lahf
cli
sti
and
sbb
cli
int
jno
push
sbb
add
push
mov
cmp
push
sub
pop
mov
movb
int
cmp
add
pop
int3
cmc
test
das
daa
sub
pusha
jecxz
lods
mov
cmp
pop
stos
mov
test
add
inc
mov
loope
cmp
loope
jle
add
cli
cmp
das
dec
pop
pop
lret
mov
fcoml
testb
sbb
push
mov
movsb
scas
fs
mov
xor
pop
mov
lds
xchg
inc
pop
push
dec
jns
xchg
xor
xor
ja
shrb
dec
mov
dec
sub
mov
int
fildll
rol
xchg
adc
inc
loope
in
leave
test
call
andb
xchg
jnp
sub
sbb
sahf
pop
imul
pop
mov
fcompl
ret
mov
lods
shlb
pop
lock
mov
loope
insl
push
inc
jne
icebp
mov
jecxz
and
mov
dec
into
sarb
stc
shlb
loop
mov
mov
sbb
inc
mov
push
rcrl
popf
sub
pushf
sbb
js
mov
pop
lods
pop
cmc
cltd
pop
out
mov
adc
mov
inc
push
icebp
ds
pop
jo
mov
dec
popf
mov
or
jns
jo
outsb
lahf
cmpsl
sti
std
cld
sti
loopne
outsl
jge
push
fldcw
jo
cmpsb
ret
dec
insb
cmp
pop
fisubs
add
inc
and
xor
cwtl
out
push
sub
xchg
pop
jnp
pushf
imul
cmpsb
negb
jno
icebp
dec
loope
xchg
sti
idivb
imul
push
ja
cmc
sbb
shlb
pop
movsl
sub
mov
lds
popf
xor
jmp
les
mov
mov
pop
mov
shl
pushf
aas
outsl
out
stos
leave
mov
sub
clc
and
mov
mov
push
in
pushf
mov
mov
sub
popa
ret
subb
pop
movsl
and
jnp
mov
sbbl
in
in
inc
fldl
mov
xchg
mov
xchg
popa
push
ljmp
decb
dec
pop
loopne
std
ja
mov
and
push
xor
add
inc
insb
dec
iret
fucom
pushf
jle
jno
sbb
sub
add
inc
stc
push
lahf
mov
popa
mov
adc
xchg
insl
xor
xor
or
mov
into
out
mov
jbe
push
sub
push
stc
daa
jne
shl
bound
outsl
add
inc
mov
mov
mov
pop
add
aam
ss
or
sub
mov
jmp
mov
pop
push
mov
dec
inc
mov
push
sahf
jg
cltd
xor
daa
scas
movsl
dec
in
mov
pop
lods
inc
xchg
add
std
sub
lock
jg
ljmp
jo
dec
fidivrl
xchg
rcrb
mov
pop
aam
adc
mov
cwtl
outsb
les
jno
dec
nop
pop
aam
sti
jge
inc
loop
int3
rcrb
addr16
loopne
dec
cli
adc
add
mov
movsb
ret
xor
rep
jnp
in
stos
imul
xor
daa
push
sub
jg
loopne
cmpl
mov
lods
scas
fdivrl
mov
sbb
adc
jne
jnp
xchg
fsubrs
mov
and
aad
mov
repnz
fdivrs
push
dec
mov
jno
mov
add
inc
xor
fdivp
mov
pop
push
ficoms
cmp
dec
lods
ds
aaa
push
or
pop
adc
in
push
xor
pop
add
sbb
xchg
icebp
push
pop
add
jle
addr16
adc
ljmp
shll
xlat
std
rolb
sbb
clc
test
pop
ds
cmp
push
hlt
fcoml
sub
popa
outsl
iret
mov
or
sbb
mov
out
cmpsb
call
jns
xchg
dec
pushl
dec
fdiv
adc
popf
orb
dec
xchg
xor
into
cs
mov
std
jnp
js
sbb
dec
push
push
push
dec
pusha
pop
sub
inc
inc
mov
dec
lret
loopne
daa
dec
inc
fsubs
ret
push
ret
dec
fistpl
out
sub
inc
lea
adc
mov
adc
stos
dec
jmp
mov
sub
jns
cmpsb
imul
fs
loope
pushf
dec
int
je
lcall
jle
pop
push
mov
dec
movsb
cs
mov
andl
mov
ds
sbb
test
enter
mov
sub
clc
les
mov
dec
jae
repz
fcomps
jbe
in
outsl
cli
xor
je
pop
hlt
or
daa
mov
mov
cmp
mov
outsl
sbb
xor
cmp
roll
sbb
or
test
cwtl
int
in
inc
cld
jb
jmp
inc
out
imul
xchg
sbb
cmc
into
das
adc
clc
pop
push
pop
and
roll
inc
cmc
lret
cmp
dec
fwait
stos
call
orl
cmp
xchg
mov
pop
inc
mov
or
sbb
out
adc
repnz
test
aas
push
dec
sbb
mov
ret
dec
inc
jns
mov
fiaddl
daa
lahf
ret
mov
dec
outsb
outsl
jb
outsl
out
pop
sbb
ret
inc
aad
in
pushf
insb
pop
jmp
sbb
inc
push
or
xchg
test
mov
jmp
xor
mov
pop
and
dec
into
xor
mov
sub
daa
inc
xor
and
inc
jmp
jns
and
cs
jmp
fildl
mov
pop
and
xor
cli
jmp
sbb
js
ret
cs
lcall
test
in
or
mov
xchg
lock
aas
adc
mov
push
rclb
dec
and
ja
inc
ret
loop
out
imul
pop
dec
lret
mov
sub
loop
icebp
std
ret
cmpsb
dec
add
idivl
mov
mov
cmp
cmpsb
mov
ja
mov
ds
fcoml
addr16
add
mov
in
in
out
adc
arpl
pop
movsl
xor
push
scas
repnz
pop
je
cmp
cli
inc
or
ss
mov
nop
stos
in
daa
je
fxch
out
in
aam
fbld
mov
xchg
scas
add
repnz
jns
jne
mov
lods
dec
dec
dec
cli
loop
adcl
lds
and
mov
adc
lea
mov
jo
pusha
enter
xor
pop
cmp
pop
add
jge
or
lds
and
add
inc
push
mov
outsb
aas
mov
lcall
jne
pop
pusha
hlt
movsl
mov
lock
mov
cmp
sub
jne
jns
insb
fwait
int
xchg
push
mov
mov
xchg
lods
pushf
add
adc
push
xchg
push
or
daa
xor
lret
cmpsl
cmpsb
mov
frstor
es
mov
pop
call
lea
lret
outsl
sub
into
mov
xor
adc
decl
jmp
ret
mov
and
cmp
add
fstpt
pop
shrb
pop
rcll
scas
sarl
rcrb
sub
sub
frstor
pushf
aad
mov
inc
movsl
lods
xlat
push
stos
lahf
iret
jne
mov
ljmp
push
lds
jecxz
and
cmp
add
xchg
xchg
in
pop
jbe
mov
stos
popf
jo
test
stc
out
ret
ja
cmp
cli
push
sub
pusha
xchg
push
or
cmpsl
ja
sbbb
das
xchg
push
mov
lahf
loope
add
lahf
daa
jo,pn
cmc
lahf
dec
dec
scas
int
loopne
fisttpl
adc
call
int3
xchg
ret
dec
xchg
lea
lahf
sarl
aad
into
push
divb
pop
call
xchg
dec
dec
lahf
bound
mov
inc
aas
mov
fisubs
cmp
sbb
mov
mov
lret
or
fstps
stc
loop
add
outsl
jl
fmuls
add
lcall
inc
xor
xchg
fstps
stc
xchg
mov
adc
mov
bnd
clc
sbb
xchg
adc
shll
xchg
pop
test
add
mov
scas
in
sub
pop
lret
jmp
mov
mov
jmp
adc
mov
inc
sub
insb
cmp
or
xor
repz
test
inc
adc
add
xchg
mov
loopne
outsb
into
imul
scas
mov
xchg
xlat
add
xchg
mov
stos
in
or
loopne
imul
jmp
xlat
popf
inc
jle
je
lret
xchg
repnz
popa
adc
dec
adc
aaa
repnz
pop
mov
out
fstpt
popa
shrb
fistpl
stc
lea
push
test
mov
jne
popf
outsl
mov
mov
and
add
sub
cs
adc
dec
push
or
sbb
xchg
cmpsl
mov
push
out
loopne
sbb
sbbb
xor
push
ss
add
aaa
push
sbb
fisubs
mov
test
mov
mov
xor
lea
into
cmp
lcall
pop
test
xchg
xor
pop
pop
pop
mov
shll
inc
mov
insl
fs
mov
sahf
inc
or
insl
and
dec
xlat
mov
insb
mov
and
fisttpll
pop
data16
fwait
dec
sbb
sub
sbb
scas
cmp
mov
int3
mov
cmp
mov
ja
jns
add
imul
pop
cmpl
cmp
inc
andb
lods
jge
shll
xchg
insl
mov
xlat
fsubs
jge
iret
not
sub
hlt
jp
dec
push
pop
lock
outsb
fisubs
daa
cmp
sbb
jno
in
sti
clc
lods
mov
rorb
jb
rcrb
mov
xchg
xor
sub
or
add
sbb
nop
sbb
sti
adc
xchg
adc
push
cmp
arpl
xchg
ficoms
cmp
setnp
or
add
or
pusha
out
lret
inc
sub
or
lods
ret
roll
xchg
enter
mov
pop
mov
cmp
pushf
add
fists
lret
call
dec
scas
stos
cmp
lods
jecxz
push
fsubrl
xor
fs
leave
mov
xor
mov
daa
xchg
add
pop
aaa
xchg
ljmp
clc
dec
cmp
clc
in
dec
add
cmp
das
imul
aam
dec
jecxz
push
pop
stos
ja
mov
jmp
sbb
mov
jl
xchg
push
movsb
sub
lock
aaa
jp
out
pop
adc
xchg
or
cmp
mov
repnz
outsb
dec
mov
sub
fisttpl
push
pop
mov
sub
jno
scas
stos
ret
fmulp
scas
mov
das
mov
jno
je
mov
in
les
push
neg
mov
out
cmpsl
dec
xor
jnp
sub
mov
adc
sub
or
mov
or
out
mov
push
push
cmpsl
push
inc
push
shlb
pushf
lcall
rol
cltd
rcll
sub
sbb
dec
lea
or
out
int
nop
and
dec
mov
xchg
cmp
or
xor
insb
les
mov
cmp
idivb
sahf
imulb
aad
push
and
inc
add
adcl
push
mov
mov
mov
cs
adc
jno
dec
stc
idivl
call
scas
mov
rorb
sub
ss
addl
ja
hlt
test
in
lea
or
xchg
int3
xchg
lret
jno
andb
sbb
cmc
fwait
add
cltd
and
iret
xlat
jg
push
insl
cmp
mov
fsubrl
and
mov
arpl
sub
aaa
inc
mov
lods
xor
icebp
xor
inc
shl
jo
fcomps
movsl
sbb
ljmp
mov
cmp
mov
xor
out
icebp
jmp
sarb
shlb
jecxz
mov
push
or
sbb
jnp
push
sbb
pop
pop
lcall
cltd
mov
jp
sub
cli
xor
lods
sub
push
cmp
fldcw
xchg
xchg
iret
mov
xbegin
pop
pop
xor
popf
push
lods
gs
sbb
mov
add
je
xchg
inc
ljmp
and
fsts
push
dec
scas
clc
mov
or
xchg
inc
xor
cwtl
aad
jecxz
out
stos
sbb
fistpl
adc
sub
lods
xor
add
ss
std
gs
das
pandn
mov
mov
xchg
pop
cmpsl
fadds
in
add
lds
mov
mov
mov
mov
mov
mov
pop
xchg
pop
sahf
push
xchg
sub
and
mov
sub
adc
lahf
mov
scas
lahf
dec
mov
lea
dec
call
or
cmp
adc
jae
imul
outsb
repnz
dec
in
lret
mov
push
mov
adc
cmp
jnp
lahf
pop
jge
pop
test
test
xchg
test
xchg
stc
xchg
cltd
cltd
or
imulb
pop
fs
in
pusha
xchg
ret
pop
push
push
clc
inc
popa
imul
push
jp
sub
lds
mov
push
xlat
cmp
xchg
pop
jge
push
push
aam
test
sub
adc
rcll
nop
into
lock
loopne
push
in
jmp
jbe
insl
repnz
in
outsb
push
add
pop
clc
and
cmc
lock
push
leave
xor
sahf
lods
mov
sbb
adc
mov
dec
sub
xchg
in
jo
mov
jl
inc
mov
pop
in
sub
mov
fiadds
pop
and
adc
cmp
mov
push
cmpsl
and
pusha
out
hlt
inc
jb,pn
and
in
outsb
xchg
cltd
and
inc
imul
les
and
andb
and
push
add
xchg
test
push
mov
push
lods
cwtl
mov
cli
je
and
cmp
mov
repz
es
mov
lcall
ss
mov
testl
scas
icebp
add
pop
jb
push
push
xor
push
out
push
sti
and
stos
pushf
inc
xchg
mov
sarl
movsb
int
cld
lock
test
bound
mov
fmul
and
push
pop
ficompl
xchg
loope
or
inc
loope
mov
movsb
dec
pop
mov
lret
pop
adc
adc
cs
stc
mov
iret
mov
mov
adc
dec
jne
pop
fisttpl
cli
and
ficoml
idiv
and
ds
int3
pop
dec
cmc
mov
mov
sbb
cmp
fldt
sbb
add
cmpsl
mov
cmp
dec
or
stos
sahf
sub
xchg
imulb
mov
clc
popf
push
lcall
cltd
sbb
lock
inc
adc
cmp
nop
mov
insb
dec
jnp
fimull
push
inc
jns
dec
scas
pushf
out
dec
sbb
stos
sbb
push
out
stc
sbb
add
std
enter
xor
sbb
std
int
push
sub
lods
push
insl
jnp
xchg
mov
dec
sbb
mov
js
inc
daa
loop
push
sahf
dec
xchg
inc
cmpsl
adc
jp
pop
xchg
push
jae
dec
add
repnz
insb
sbb
adc
std
fs
je
inc
jl
roll
repz
mov
sub
sti
mov
loopne
neg
adc
outsb
push
cltd
dec
lret
cli
push
push
pop
fiaddl
dec
or
push
cmp
or
mov
enter
xor
enter
xchg
repz
pop
sbb
stos
pop
addr16
mov
lds
jp
dec
call
jo
xor
jmp
out
ja
xchg
cmp
int
aaa
lret
rdmsr
push
jbe
add
divl
loope
cwtl
lcall
mov
and
mov
mov
nop
adcl
lds
inc
push
xchg
jnp
dec
pop
stos
adc
or
dec
ficompl
loop
cwtl
es
cmpsl
push
pop
push
xchg
stos
sub
mov
scas
jae
out
xchg
mov
fsub
in
sbb
lret
mov
xchg
ljmp
mov
ljmp
popl
push
cmp
lahf
cmp
aas
mov
insl
and
pusha
mov
nop
cmpsl
clc
dec
iret
push
hlt
fimuls
adc
mov
jnp
add
call
mov
movsl
mov
paddsw
cltd
das
adc
sbb
sahf
jmp
push
jnp
dec
mov
adc
int
rolb
pop
mov
sti
xchg
xchg
pusha
stos
dec
loop
adc
jne
sarb
push
ja
rclb
popa
sub
das
dec
mov
into
xor
scas
pop
fnstsw
mov
negl
int
adc
int
cmp
xchg
fwait
daa
inc
jns
sahf
test
inc
and
ret
inc
imul
repz
mov
in
pop
fsubp
stos
es
loope
cmp
pop
mov
dec
jg
cmp
sub
test
add
xor
insl
push
xorb
dec
stos
xchg
rolb
lods
js
fisubs
lret
mov
lock
jmp
mov
xchg
mov
je
xchg
icebp
push
push
jno
xor
fidivl
stos
rorb
and
push
jg
daa
jmp
icebp
pop
fistl
cmp
jp
in
jle
dec
jp
dec
sbb
sub
push
test
mov
add
sub
ret
sbb
sub
bound
shll
xchg
mov
or
cli
incl
je
or
out
push
in
idivl
ljmp
mov
scas
movsl
leave
lds
cmp
fsubrs
roll
xchg
xchg
push
dec
push
dec
std
shlb
out
add
cmp
test
pop
rolb
notl
ljmp
icebp
dec
ljmp
pop
cmp
enter
dec
sub
loop
lahf
stc
adc
movsb
in
cmc
addr16
lods
xor
lret
jmp
mov
or
fs
lret
cmp
xchg
aas
lea
lds
or
adc
or
jge
push
mov
test
mov
xor
xchg
idivb
push
rolb
mov
xor
test
aaa
jp
addr16
adc
int3
inc
xchg
shlb
mov
and
ret
pop
mov
cs
add
add
aas
imul
mov
xlat
cmp
xor
ret
mov
rclb
xor
xor
sub
inc
subb
cmpsl
or
fstps
test
pop
in
sbb
mov
ljmp
fisubl
push
mov
loope
fistps
pop
pop
mov
movsb
dec
movsl
lcall
or
cs
inc
insl
test
xlat
notl
xor
ljmp
dec
mov
dec
xchg
inc
mov
dec
shll
fnstcw
mov
mov
mov
je
jno
jmp
in
add
aam
push
xchg
pop
cmp
ffree
fwait
pop
rorb
outsb
out
dec
lods
shl
lods
out
cli
subb
cmp
aas
mov
or
adc
neg
cwtl
cltd
bound
int
or
sub
call
mov
lret
xchg
hlt
test
outsl
cmp
mov
mov
sub
in
inc
push
xor
insb
or
push
fcmovbe
and
jo
pop
jnp
mov
or
pop
rcr
and
cltd
mov
sbbl
adcb
imul
fwait
cltd
adc
loopne
mov
adc
mov
nop
xchg
cmp
mov
sbb
mov
pop
mov
pop
sbb
pop
imull
cwtl
ret
pop
lcall
sub
pop
imull
dec
dec
push
out
sub
dec
aaa
xor
in
pop
jbe
mov
out
inc
adc
adc
jb
xor
sbb
ja
icebp
bound
adc
pop
stos
decl
jle
pop
xchg
scas
lahf
mov
jle
ret
mov
xor
in
xor
loopne
in
dec
sbb
out
sahf
jg
or
jle
mov
mov
rorl
stos
andb
jmp
push
cs
mov
mov
cmpsb
idivb
or
pop
xor
inc
or
popf
push
jb
inc
fnop
xchg
ljmp
xor
or
shll
pop
shr
sbbl
sbb
push
sub
adc
lahf
sbb
mov
dec
cld
xor
push
pop
xchg
xor
rcll
cmc
int3
inc
pop
imull
pop
test
test
sbb
into
jl
sub
adc
add
push
leavew
psrld
outsl
dec
int
pop
pop
ja
shl
loope
push
cmc
dec
add
push
shrl
sbb
jle
sbb
pop
addl
xor
fnsave
leave
sahf
out
mov
inc
inc
les
xchg
iret
adc
sbb
adc
jge
fisubrs
gs
das
call
mov
add
stc
pop
ret
movsb
std
pop
sub
sub
dec
enter
mov
insb
repnz
xchg
dec
ja
mov
sbb
loopne
int3
mov
aaa
sbb
inc
in
add
rcr
sbbl
pop
ss
cmp
fs
pop
or
leave
jl
mul
and
mov
pop
inc
xchg
cmp
pop
mov
jp
pop
es
insb
in
pop
mulb
stc
daa
push
mov
aad
add
out
cmp
insl
jae
repnz
sbb
nop
mov
jae
jmp
sbb
fiadds
addr16
icebp
in
ror
mov
cld
mov
movsl
addb
arpl
sbb
outsb
aas
test
outsb
dec
push
pop
mov
movsl
jae
pop
dec
addr16
mov
inc
and
test
into
mov
inc
mov
sbb
add
sub
pop
fcoml
xor
sub
mov
imul
cltd
cmpsb
out
jge
push
test
ret
adc
adc
lea
push
popf
test
push
xchg
mov
fucom
je
jae
mov
fiadds
movsb
xchg
movsb
or
dec
add
mov
imul
mov
loope
sub
mov
mov
mov
shll
push
test
and
cwtl
xchg
sbb
addl
movsb
arpl
fiadds
pop
adc
push
jbe
jge
jmp
mov
sbb
out
xor
xor
or
push
and
out
push
and
negl
adc
stc
pop
adc
pop
add
cmp
cmp
jae
das
outsb
jae
inc
jp
pushf
jo
mov
and
adc
mov
jg
dec
jl
xchg
cmc
aaa
xor
scas
inc
adc
adc
xor
xchg
push
fidivl
and
mov
sbb
lcall
test
pop
inc
aas
out
bound
mov
mov
dec
arpl
ds
test
mov
xchg
lods
push
jle
adc
sub
mov
mov
jae
jp
lea
cmp
les
inc
sbb
outsl
and
dec
or
ja
xchg
iret
xor
fisttps
and
inc
mov
jmp
adc
fidivrs
jb
cmp
out
sub
lods
mov
gs
xchg
flds
mov
mov
cmp
out
xor
or
push
or
push
and
sbb
cmp
ljmp
insw
or
shl
cmp
sbb
cmp
sbb
out
out
xchg
scas
mov
sub
pusha
outsb
dec
js
jnp
fsubr
fldl
gs
jo
mov
cmpsb
shlb
iret
dec
jge
aad
xor
jne
mov
push
or
ret
jne
mov
hlt
addr16
sbb
dec
fidivrl
loope
fisubs
mov
mov
pop
fcoml
fstps
ds
and
mov
cmpsl
and
sbb
sbbb
test
cmp
mov
movsb
jecxz
nop
push
add
cltd
out
stos
fmul
andb
ljmp
pop
hlt
shrl
stc
adc
iret
clc
fwait
inc
std
int3
inc
pop
in
inc
dec
lock
xchg
out
lcall
bnd
jne
pop
outsb
dec
es
cmp
jl
sub
sahf
fs
mov
jb
adc
js
fisttpl
push
repz
dec
cmp
loope
and
lcall
adc
jge
adc
lahf
add
je
ret
shlb
dec
data16
rep
stos
shll
movsl
mov
rolb
and
and
jns
hlt
in
fs
push
push
jp
dec
jns
sbb
insl
add
ss
or
cmp
xor
xchg
repz
lods
mov
xlat
push
leave
test
mov
cmp
aad
lret
pop
scas
xor
inc
pop
dec
add
ss
jl
xor
arpl
ss
pop
push
pop
test
scas
int
loop
subb
pop
mov
mov
mov
into
stos
or
push
jmp
aam
inc
repz
sub
mov
or
push
dec
jmp
pop
jmp
xlat
cmp
cmpb
dec
xchg
jb
pop
cmp
push
shl
movsb
inc
arpl
mov
adc
push
lahf
sahf
out
sbb
push
movsb
push
adc
pavgb
push
or
cs
adc
xchg
inc
inc
mov
and
xchg
dec
dec
mov
or
subl
dec
xchg
inc
jle
push
lret
daa
mov
cmpl
ror
push
scas
sbb
cmpb
jns
cmp
mov
hlt
fsubrs
or
cmp
enter
jl
mov
lret
push
mov
pop
jne
fldenv
sbb
mov
lea
filds
and
jns
xchg
imul
stos
push
push
sbb
jl
jecxz
push
repz
add
cli
fwait
sub
enter
mov
movsb
and
into
aam
jge,pt
dec
push
out
mov
insb
lods
push
sbb
call
mov
jmp
cmc
orb
or
dec
clc
mov
stos
mov
movsl
dec
cli
lods
lea
ja
inc
outsb
mov
psubusb
int
and
mov
mov
fldt
rorl
jae
sbb
adc
add
nop
cltd
sbb
into
ljmp
arpl
sub
mov
sub
scas
ret
dec
push
jae
scas
pusha
push
stos
lret
hlt
jnp
jne
add
in
lret
pop
scas
imul
in
sbb
gs
jl
stos
add
adc
ss
xor
mov
xor
ds
adc
mov
inc
sahf
cmp
xchg
cltd
outsl
jle
ja
dec
cld
in
dec
push
jbe
pusha
push
add
movb
push
jmp
mov
jmp
imul
adc
inc
xor
rcrb
mov
rorb
aad
iret
dec
inc
mov
or
jl
sbb
jg
das
jp
sub
jb
jecxz
cld
inc
or
sub
subl
cmp
sti
mov
and
lea
and
das
pop
inc
jp
inc
ja
cwtl
out
mov
fdivl
inc
enter
cmp
xchg
push
jecxz
add
imul
cmp
mov
cmp
mov
test
roll
icebp
ret
fdiv
dec
jge
or
mov
or
popf
and
sbb
dec
push
addr16
shr
lea
mov
insb
sub
sub
sbb
movsb
cld
stc
out
test
cmpsl
jae
sub
push
std
cmpsl
enter
sbb
inc
fs
sbb
add
stc
scas
push
loope
ss
mov
ljmp
sub
push
xchg
sbb
mov
add
push
push
test
add
fistps
mov
pop
jecxz
xor
lods
shll
adc
adc
in
add
and
lret
movsb
cmp
je
cmp
or
and
dec
jg
pop
sub
xchg
cmc
pop
or
jle
stc
and
jmp
mov
mov
xchg
arpl
cli
dec
or
ss
movsb
sbb
or
imul
jl
xlat
adc
jmp
out
sbb
negl
sbb
cmp
push
sbb
sahf
lret
into
cmp
sbb
lahf
dec
mov
ror
fucom
lret
mov
testl
bound
cli
xor
jo
shl
xchg
imul
movsb
jle
int3
fisubs
push
inc
ret
xchg
inc
sahf
rclb
fadds
cmp
sbbb
add
call
lods
xor
aam
push
jb
inc
add
pop
jo
dec
and
fsts
mov
add
pop
mov
leave
gs
adc
adc
mov
mov
inc
mov
jbe
inc
hlt
push
push
dec
sbb
and
stos
dec
mov
sahf
test
js
push
xor
sbb
inc
pop
mov
or
popf
push
xor
xor
xchg
jne
nop
std
xchg
xor
test
pop
rcll
xor
push
jns
xchg
pop
aas
out
mov
add
xchg
gs
xor
ljmp
icebp
pusha
ja
or
ljmp
imul
inc
out
cli
inc
push
pop
mov
ret
movsl
xchg
fisttpll
iret
mov
mov
dec
rcl
jl
xchg
pop
cmp
stos
jg
xor
cwtl
test
jnp
cmc
stos
jl
and
add
out
sub
test
cmp
adc
mov
mov
and
pop
mov
int3
xchg
inc
pushf
in
adc
dec
in
pop
movb
add
add
jmp
aas
adc
inc
adc
insl
cmpb
pop
pop
popa
xchg
or
xchg
jnp
mov
sbbl
loope
ljmp
mov
mov
test
fdivs
add
les
or
scas
scas
push
lods
sub
push
inc
test
inc
push
ret
cmp
fistpl
push
shrb
lock
fcoms
mov
jae
push
cmc
pop
das
xchg
jno
adc
pop
add
sub
jns
fwait
js
push
imul
xchg
int3
mov
push
rorb
pop
inc
push
xchg
hlt
and
pop
es
ds
xor
imul
pop
jmp
jecxz
insl
jmp
pop
andl
inc
mov
or
push
add
sbb
enter
jecxz
pop
and
pop
cmp
adc
mul
mov
jl
cmpsb
cmc
arpl
mov
push
clc
nop
imul
xlat
adc
add
shrb
neg
xchg
dec
shlb
push
mov
loopne
fdivr
add
fs
loopne
icebp
add
sbb
mov
clc
pop
jmp
push
jnp
and
repnz
mov
aaa
add
pop
scas
add
loop
cmp
and
push
adc
divl
imul
lods
mov
push
adc
insb
dec
inc
xchg
test
pop
push
sbb
invd
fcmovnu
cmc
push
dec
aas
in
push
xchg
ja
mov
cmc
popf
mov
jno
inc
test
mov
pop
pop
mov
lcall
ljmp
adc
inc
in
push
jecxz
mov
and
mov
and
out
das
xchg
add
stos
test
adc
mov
lock
movsl
cmp
pop
and
sub
popf
or
push
and
imul
mov
inc
xorb
or
dec
jne
push
cmp
mov
lds
add
inc
add
mov
push
leave
sarb
mov
sub
inc
cmp
adc
fs
mulb
pop
fsubl
jno
dec
clc
cmp
mov
stc
sub
cltd
in
push
mov
mov
pop
call
add
jecxz
xchg
rcrl
cs
pop
xor
imul
xchg
testb
adc
jle
ret
mov
fwait
push
push
inc
data16
div
xchg
xlat
loopne
pushw
pop
dec
aaa
test
push
fcmovnb
lea
cmc
xor
prefetch
das
lcall
push
xchg
mov
and
xchg
pop
sub
push
dec
movsb
or
test
mov
inc
mov
inc
fsubr
addb
ret
sahf
outsl
insl
push
je
mov
inc
movsl
sub
push
enter
jle
sbb
xor
add
mull
bound
scas
ja
push
sub
lcall
jb
jl
mov
push
inc
push
push
mov
sahf
jl
out
jmp
lret
pop
test
push
jne
push
pop
test
loope
lds
aas
add
xchg
repz
test
int
das
or
xchg
and
test
subb
pop
jb
jle
pop
mov
mov
jb
scas
jae
fs
lret
mov
rcl
outsl
mov
xchg
rcrb
mov
je
and
add
mov
dec
fnstcw
jne
shll
leave
push
sbb
inc
push
inc
pop
sub
outsb
mov
fnstsw
sbb
mov
pop
xchg
sbb
lds
sti
xor
push
pop
or
loopne
dec
cs
pop
xabort
mov
fnstenv
pop
pop
dec
js
dec
pop
push
popa
inc
cmpsl
mov
dec
test
scas
push
mov
je
mov
lret
rorb
movsl
cmp
sub
cmp
sbb
movsb
sbb
add
mov
imul
mov
push
xor
jmp
inc
mov
shlb
bound
out
movsb
rcll
push
outsl
lock
lahf
mov
or
inc
cmp
mov
out
jbe
pusha
mov
popf
into
push
xchg
xchg
inc
ja
data16
stos
add
test
mov
or
xchg
mov
push
jnp
mov
xor
mov
sbb
mov
insb
mov
in
mov
fistps
mov
mov
cli
and
jg
dec
scas
mov
icebp
sub
js
push
add
cmc
xchg
lds
add
adc
sbb
xchg
js
inc
sbb
sub
inc
add
inc
ja
lea
pop
sti
ljmp
cmp
xor
mov
pop
leave
testb
mov
push
jae
xchg
insb
loop
aam
shrb
inc
push
hlt
or
adcl
mov
into
idiv
jmp
fnsave
cmp
mov
das
insb
mov
das
out
lea
mov
repz
outsl
pushf
sbb
cwtl
ds
test
fistpll
pop
insl
push
out
mov
mov
out
mov
pop
xchg
test
aam
bound
decb
das
lcall
pop
sbb
adc
xchg
dec
xchg
out
and
pop
and
or
mov
pop
test
cmp
cmp
jmp
repz
cmp
fidivrs
jns
adc
pop
scas
push
test
add
bound
leave
adc
jbe
and
pushl
mov
cmc
jmp
cwtl
dec
jg
aas
ror
pop
aaa
rorl
notb
pushf
sub
inc
mov
cwtl
adcl
jno
shrl
sub
mov
jnp
shr
add
scas
fldcw
mov
mov
pop
cmp
sahf
push
ret
enter
sti
or
mov
std
fists
jmp
cmp
ds
xor
movsl
mov
lea
mov
or
jae
lahf
ja
in
sub
mov
xor
pop
jg
or
mov
mov
testb
lods
sub
jnp
mov
aaa
push
xor
loop
mov
les
repz
jecxz
repz
add
and
adc
mov
mov
cmp
mov
mov
sbb
pop
arpl
ljmp
movsl
lcall
or
dec
xor
les
cld
enter
mov
imul
pop
scas
hlt
add
jecxz
xchg
mov
mov
mov
add
pop
dec
mov
scas
roll
dec
fcmovnu
lods
xchg
xchg
imul
fldcw
sbb
ds
pop
ret
ficoms
cmpsl
xor
test
mov
mov
dec
cmp
jns
cwtl
push
add
ljmp
cmp
jecxz
adc
daa
sti
or
cmpsl
adcl
les
dec
add
addr16
adc
int
cmp
pop
adc
or
xor
or
movsb
mov
xor
int
mov
mov
test
sbbb
inc
js
in
cld
mov
lahf
or
adc
fs
decb
dec
jnp
in
dec
shlb
mov
aad
ljmp
nop
cmp
cmp
jmp
mov
inc
cmpsb
mov
mov
cmp
mov
cmp
and
hlt
adc
pop
outsl
inc
sbb
cmp
xlat
push
inc
ljmp
int
rcrb
addr16
ret
and
push
movsb
pusha
cmp
inc
test
push
jo
fsubs
lahf
pop
sahf
xchg
xor
ljmp
sbbl
daa
out
mov
cs
dec
mov
mov
push
cli
leave
inc
cmpsl
lods
inc
mov
shr
gs
sub
inc
lods
pop
xor
jge
push
fnstenv
dec
inc
mov
xlat
jns
and
imul
dec
jb
push
mov
push
push
and
jne
adc
or
jb
cwtl
test
fcmovnbe
cmp
or
test
sub
lahf
in
stos
mov
nop
mov
xor
xchg
popa
out
hlt
mov
mov
mov
subb
sub
inc
mov
cltd
sub
or
outsb
ds
outsb
and
xor
cmp
in
mov
pop
iret
mov
mov
push
or
lret
popa
adc
in
dec
push
inc
leave
xchg
inc
mov
xchg
rolb
pop
cmpsl
mov
pushl
mov
mov
paddd
mov
dec
out
scas
popa
xor
or
lret
pop
fimull
insl
outsl
mov
fiadds
cmpxchg
ljmp
mov
adc
addl
push
dec
sub
mov
mov
xchg
mov
es
ficomps
pop
out
fstpl
in
scas
mov
xchg
jo
shrb
and
mov
cmp
fsubp
add
testb
mov
or
xchg
add
pavgb
xchg
cs
and
mov
fucom
clc
scas
xor
cltd
jne
jle
push
or
xchg
ffreep
push
leave
lcall
xor
xor
int
cmp
lea
sub
add
jl
mov
jnp
hlt
fisubrl
lock
hlt
mov
fsubr
cli
sahf
mov
fstpl
xor
mov
test
psllw
shl
pop
push
push
xchg
sbb
xchg
inc
pop
jb
dec
xchg
lcall
dec
clc
test
shlb
inc
stc
fdivl
fisttpll
pop
inc
pop
mov
outsb
inc
mov
loope
pop
mov
rclb
mov
dec
rcl
aam
cmpsb
sbb
push
ret
pop
mov
dec
dec
fistpl
aam
es
or
push
mov
lret
sub
or
dec
daa
mov
lods
inc
test
lods
clc
and
jnp
push
xor
setb
ljmp
jo
dec
ffreep
mov
arpl
and
mov
jnp
push
cld
movsl
js
or
scas
or
mov
icebp
lahf
xor
pop
push
adc
inc
push
mov
fwait
addr16
std
adc
dec
jge
das
inc
add
aam
dec
mov
add
icebp
ror
mov
mov
xchg
cld
or
cmp
lea
xor
mov
repz
dec
jae
dec
push
jle
xchg
or
xor
or
lret
das
imul
add
les
fldenv
push
mov
inc
mov
or
mov
ror
adc
cmp
test
sub
loope
add
dec
in
insb
out
xchg
int3
out
jl
push
push
lock
inc
loope
sti
test
xor
adc
test
dec
or
mov
lods
test
adc
jmp
es
dec
imul
dec
pop
in
xchg
mov
sub
mov
leave
icebp
or
xchg
mov
ja
repnz
and
add
jno
cmp
scas
add
xchg
xchg
and
rorb
or
addl
nop
icebp
mov
in
or
cmp
mov
ffreep
inc
addr16
mov
cmc
mov
in
iret
dec
dec
dec
dec
or
pushf
sbb
test
nop
and
mov
lahf
imul
cmp
fcmove
lahf
jecxz
ss
cli
pop
dec
ja
cs
mov
lcall
stc
xor
aam
lods
sub
mov
daa
cmp
lea
sbb
add
das
fcoms
dec
repz
addr16
cli
sbb
rorb
sub
push
mov
mov
xchg
mov
jnp
adc
xchg
inc
lret
sub
mov
int3
test
in
push
std
les
xorl
addb
dec
lds
inc
xchg
mov
loope
push
addr16
rorl
mov
dec
xor
loop
int3
es
es
aas
push
xor
ds
mov
mov
es
shll
je
xchg
xchg
into
push
in
cmp
dec
cmc
xchg
scas
aad
sarl
stos
or
dec
jecxz
fcoml
sbb
in
add
mov
jg
sub
or
testl
adc
sub
jl
shrb
gs
imul
lcall
ret
adc
dec
lcall
int3
xchg
and
movsl
fbstp
xchg
inc
in
mov
mov
adc
xor
pop
jmp
push
xchg
sub
mov
mov
test
pop
mov
enter
fwait
xchg
hlt
std
je
jge
sub
arpl
mov
mov
sbb
out
mov
gs
sti
jae
stos
in
stos
data16
cmp
pop
mov
hlt
inc
imul
std
daa
mov
jbe
cmpsb
ret
insb
daa
fsubl
add
jmp
add
int3
lock
mov
jecxz
cmpsb
sub
out
fldl
cmpps
into
sbbb
mov
call
cmp
sub
dec
scas
ja
inc
ret
mov
push
nop
dec
loope
stos
mov
jns
int
push
imul
xor
out
test
leave
or
add
pop
sti
mov
int
stos
cmp
clc
jl
push
mov
stos
dec
pop
movsl
out
mov
sbb
cmc
sub
cmc
pop
lods
push
shlb
pop
pop
mov
cmpsb
dec
add
inc
repz
add
xor
sbb
xorb
mov
nop
jnp
pop
xor
shll
mov
and
or
adc
out
push
cs
xor
dec
arpl
shl
inc
mov
mov
testb
dec
sbb
mov
outsl
hlt
seto
or
adc
xor
pop
dec
pop
pop
data16
mov
cli
hlt
mov
loope
sub
mov
movsb
sarb
iret
or
ljmp
jge
mov
fwait
mov
mov
notl
inc
lcall
cmp
rcrl
mov
sub
dec
push
int
lds
fmull
pop
cld
push
ja
push
xor
in
adc
push
inc
addr16
adc
js
dec
xchg
xchg
das
fcompl
mov
sub
push
pop
push
mov
xor
and
push
loop
aas
lds
pop
cs
and
gs
cmp
sbb
lret
cmp
push
imul
iret
into
inc
ljmp
sbb
sub
icebp
fsubs
add
out
xchg
call
clc
scas
or
inc
sub
nop
pop
inc
push
fsts
ljmp
insb
add
stc
xor
lahf
xor
aas
adc
insb
xchg
and
xlat
adc
icebp
test
sti
xchg
rcr
nop
adc
bound
mov
jb
out
mov
push
pop
ds
or
stos
sub
push
jbe
int
roll
in
in
push
jl
mov
push
xlat
repnz
fwait
sub
xchg
imul
adc
aam
jecxz
cld
ror
ret
pop
dec
pop
xor
jb
stos
out
add
addr16
nop
inc
mov
cltd
jmp
pop
push
gs
dec
mov
pmaddwd
rcll
jg
aad
adc
mov
notb
cmp
fdivrs
lds
or
ja
jne
jns
fdivl
and
xor
je
inc
cmp
mov
jg
ret
or
std
loope
xor
popf
pop
dec
mov
scas
jnp
cmp
mov
dec
lock
loopne
or
into
mov
lock
mov
pop
outsb
ret
pushw
mov
jbe
filds
sti
pop
mov
enter
mov
mov
std
test
and
mov
mov
sarb
scas
lods
xor
mov
sbb
js
mov
cmp
leave
idivl
xchg
sahf
loope
pushf
add
stos
mov
and
lret
das
inc
outsl
cmp
aas
sub
mov
push
outsb
loope
repnz
jge
cmp
fwait
dec
mov
hlt
pop
sarl
lcall
loope
pop
dec
sbb
pop
stos
xor
adc
hlt
or
test
jp
inc
sub
bound
ja
jle
hlt
mov
jbe
pushf
push
sub
pop
aaa
adc
mov
xor
pop
shrb
sbb
jns
test
gs
movb
jns
pop
mov
mov
jbe
ret
scas
mov
divl
sti
negl
cmp
loop
in
push
insb
out
fs
ret
pop
dec
xchg
adc
sbb
xlat
mov
ss
mov
push
sbb
mov
ret
stos
lds
inc
sbb
mov
ss
inc
out
push
int3
sub
pop
mov
cmp
rolb
scas
cld
lret
stos
cmp
sub
das
add
pop
mov
iret
pop
arpl
lods
stos
mov
lcall
fs
xchg
mov
lock
imul
sbb
sub
pop
std
push
stc
push
lods
pop
mov
into
add
loopne
lcall
pop
movsl
and
adc
mov
fcmovne
pushf
mov
bound
pop
insl
pop
xchg
enter
repnz
inc
out
rclb
pop
imul
dec
fdivr
push
cmp
imul
xor
inc
pop
inc
in
pusha
sub
inc
xor
clc
cld
jmp
pop
xchg
add
sub
xor
cmp
add
inc
push
aad
out
mov
loop
mov
mov
adc
dec
push
sti
ret
push
sti
in
in
push
insb
stos
js
loop
scas
adc
fiaddl
ret
push
das
mov
mov
inc
out
testl
cmpsb
add
xor
xor
inc
call
xchg
out
jge
and
or
jmp
xor
lock
dec
in
adc
stos
jno
aam
jl
xlat
jmp
out
and
xchg
idivl
insb
loope
xchg
mov
gs
sbb
test
jns
int
xchg
or
sub
jl
aad
adc
in
mov
popa
sub
cmpsb
in
je
push
jnp
clc
dec
add
and
test
pop
dec
adc
pop
notl
mov
ret
dec
call
cmp
movsl
lods
rcll
push
pop
pop
sbb
das
gs
or
cmp
cmp
test
sub
lock
loopne
xchg
stc
or
bound
outsb
xor
les
pop
es
std
xor
pop
ja
dec
fdivrl
imul
testl
sub
jne
fwait
inc
cmc
add
and
outsl
xor
xlat
insb
scas
adc
dec
leave
or
add
das
bound
sahf
sub
push
mov
cmc
movsb
cmc
ror
sub
aam
pusha
fwait
into
leave
xchg
test
push
mov
pop
popf
mov
mov
sub
mov
pusha
or
stc
xor
aam
lods
inc
stos
push
pop
push
jmp
lcall
cwtl
sahf
push
xor
lock
fadd
cmpsl
pop
mov
dec
push
bound
jae
xchg
and
and
mov
jmp
inc
cmpsl
or
xchg
repz
mov
fxch
jl
in
lods
mov
rcl
add
dec
addr16
shrl
sub
sar
pop
mov
add
push
add
inc
mov
inc
popa
fs
fsubl
pop
lea
icebp
and
sub
lcall
sbb
out
popf
inc
inc
cmpsl
fstpt
push
out
arpl
push
sbb
sbb
xchg
sub
jne
mov
inc
xor
movsl
addb
mov
xor
addr16
pop
enter
pop
nop
test
sbb
nop
jge
dec
ja
adc
ret
rcr
mov
fiaddl
adc
into
dec
and
sbb
mov
repz
and
shll
push
pop
adc
sub
lcall
fs
jbe
inc
test
xchg
add
es
push
mov
sub
inc
fldln2
pushf
stc
pop
inc
xor
and
or
jb
jnp
xchg
imul
ds
adc
xchg
xchg
mov
and
xchg
in
inc
fimull
xchg
mov
mov
into
push
push
lret
pusha
xlat
rcl
outsl
jmp
cmp
or
movsb
xchg
enter
or
sub
jmp
and
icebp
xor
insb
sub
pusha
mov
cmpb
mov
pop
stos
sahf
sbb
leave
dec
jmp
inc
fdivrp
lds
pushf
cwtl
in
pop
insl
enter
and
ss
lods
inc
das
daa
loop
fldt
clc
inc
ret
out
movntq
daa
ds
xor
popf
xchg
cmpl
sbb
pop
lds
stos
jge
and
ds
dec
pusha
cwtl
xor
jo
add
and
in
jne
movsl
mov
mov
fnstsw
mov
mov
and
pop
mov
mov
push
cmpsb
xchg
daa
lret
pop
sar
test
jecxz
xor
jae
es
push
in
ja
jbe
lods
dec
push
mov
sbb
lahf
and
scas
xor
insb
jl
pushf
into
jae
mov
loope
add
rcl
and
cld
dec
fiaddl
jbe
out
jle
jp
aaa
ret
rolb
in
hlt
dec
sahf
test
sbb
pusha
add
xor
inc
popa
in
and
movsb
arpl
lea
cmpsb
xchg
lods
or
xlat
loope
data16
mov
adc
adc
or
pop
sbb
dec
jge
sti
dec
sti
shl
xor
push
test
test
mov
cmp
in
ret
negl
sub
cmp
leave
push
stos
jp
cmc
mov
mov
lods
fdiv
inc
xor
idivb
and
adc
aam
les
stc
js
sbb
stos
ret
dec
cmpsl
jne
lahf
jg
inc
fsubl
push
mov
mov
cli
jle
push
cmp
pushf
ret
mov
jne
out
pop
stc
loope
xor
and
test
jge
rol
in
aad
call
lahf
ss
cmp
push
or
mov
push
pop
dec
pop
insb
push
dec
mov
add
ljmpw
mov
fstpt
lock
push
jne
mov
dec
cltd
xor
stc
arpl
dec
popa
ja
mov
xchg
dec
cld
popf
std
testl
or
and
cltd
mov
or
sub
jle
or
mov
pop
cli
ljmp
or
adc
inc
inc
ficomps
loopne
or
addl
dec
jmp
dec
movb
addb
jo
nop
test
das
pop
pop
repz
cwtl
data16
pop
shl
push
jecxz
fs
leave
mov
push
aad
js
cmp
pop
loopne
aam
push
call
jno
xor
por
negl
sahf
push
pop
iret
sbbb
add
iret
sti
hlt
add
xor
adc
inc
push
cli
or
loopne
pop
sbb
mov
fiadds
or
push
mov
dec
mov
popa
not
notl
pop
leave
scas
or
les
fwait
mov
and
pop
adc
xchg
dec
into
imul
hlt
cmpsl
in
sub
push
jl
jmp
adc
or
or
je
xchg
push
inc
popa
and
mov
sti
icebp
stc
lods
xchg
pop
jmp
mov
cmp
sub
pop
push
inc
test
pop
cmp
adc
jnp
dec
mov
std
ljmp
jl
inc
mov
loopne
add
sub
lds
xchg
popa
cltd
dec
insb
sub
ja
dec
push
mov
ror
outsl
sub
arpl
in
mov
cwtl
xor
xchg
ret
xchg
mov
and
aas
xchg
sbb
jbe
mov
jge
fcmove
jb
xorb
push
sub
sbb
ret
lahf
lea
inc
aaa
andb
test
add
shll
mov
call
xor
pop
rol
xchg
enter
subl
mov
loope
mov
push
pop
xor
cmc
and
test
mov
ljmp
jecxz
jnp
imul
jbe
jecxz
ret
inc
cld
adc
test
dec
imul
cld
mov
or
out
mov
jmp
adc
and
mov
ret
repz
jae
jns
cli
pop
cli
push
push
rorb
sahf
ss
dec
loop
and
jl
or
lea
test
jecxz
addr16
pop
add
insl
sahf
stos
push
mov
lcall
addr16
jb
in
pushl
cmp
xchg
fidivl
add
lcall
sub
cmp
mov
mov
sti
and
jge
lea
add
fadds
aas
outsb
ret
mov
mov
fxch
int3
xchg
notl
cmp
das
sbb
mov
loopne
test
fisubrs
push
fists
icebp
adc
in
dec
cmp
outsl
daa
pop
sahf
jecxz
shll
int
gs
inc
out
fcmove
inc
test
notb
jl
xor
ljmp
fwait
adc
stos
pop
daa
arpl
aam
ret
shrl
add
cmc
imul
out
inc
or
out
decl
cmpsl
iret
xchg
aaa
lods
sub
jns
cwtl
sti
pop
out
sarl
push
cmp
mov
push
cli
xchg
dec
cltd
out
dec
psubusw
push
xchg
fimuls
mov
mov
jmp
mov
outsl
inc
push
jne
cltd
and
pop
ds
cmpsl
sti
int
mov
dec
gs
and
data16
adc
sti
lret
mov
test
dec
cmp
add
mov
loope
fcmovu
push
js
inc
inc
jg
xor
jecxz
dec
out
pop
push
add
hlt
cmpsb
dec
xchg
inc
mov
push
cmp
insb
cld
inc
or
imul
into
insb
inc
xchg
jmp
adc
jg
outsl
and
fnstenv
nop
sbb
dec
add
xchg
pop
mov
fisubl
addb
dec
xor
cmp
ss
mov
popf
in
mov
push
aaa
test
imul
lds
sahf
pop
pop
dec
adc
fcomip
rcll
mov
mov
js
pop
idivl
test
dec
mov
add
xchg
xlat
in
xchg
aas
add
cmp
jne
push
ljmp
mov
mov
shlb
push
jecxz
aaa
dec
adcl
mov
addl
lods
push
jecxz
sbb
in
dec
xchg
int3
lods
scas
inc
fisttpl
mov
mov
adc
daa
loopne
adc
out
je
add
xchg
and
jo
or
push
cmc
mov
mov
push
sahf
cmpsb
in
insl
jb
push
repz
shlb
mov
and
stos
inc
addr16
testl
int3
xchg
leave
xor
xor
jmp
sub
dec
xchg
push
js
pop
pushf
push
pop
push
addr16
pop
das
sub
jo
aam
sub
sar
sarb
es
mov
mov
or
lea
addl
or
nop
ret
and
or
or
push
xchg
mov
inc
dec
or
add
pop
in
aas
lret
lods
lds
mov
inc
pop
pop
stos
dec
and
sub
mov
push
fsts
ljmp
ja
mov
xchg
cmpsl
mov
cld
mov
xor
mov
dec
mov
lcall
pop
dec
mov
aad
testl
sbb
sahf
out
je
enter
pop
and
rolb
sub
imul
movsb
cmpsb
push
push
lock
or
in
pop
bound
setno
lods
jns
pop
fdiv
popf
dec
test
xchg
insl
clc
dec
clc
inc
xchg
mov
mov
or
stos
adc
lret
adc
sbb
clc
sbb
jb
push
pop
adc
push
pop
mov
test
mov
iret
jmp
adc
cmpb
jg
loopne
pop
lock
cld
popf
or
push
and
inc
ds
stc
dec
jbe
popf
xor
es
push
dec
ljmp
xchg
add
inc
adcl
loope
push
push
inc
sub
mov
decb
push
dec
pushf
repnz
xor
daa
mov
inc
in
pusha
pshufw
dec
stos
ljmp
add
add
out
stc
clc
cmpsb
adc
sbb
test
sarl
test
jle
jecxz
popf
push
lods
or
stos
inc
push
sbb
inc
ss
add
pop
xchg
push
inc
mov
jl
leave
mov
adc
adc
xchg
sub
inc
jmp
sbb
imulb
push
dec
imul
inc
cmpsl
push
jp
loope
popf
adc
pusha
int
js
jnp
fwait
loop
loopne
sub
xchg
mov
fs
dec
fnsave
dec
jecxz
loop
dec
lahf
jmp
dec
mov
test
xor
pushl
pop
mov
sub
xchg
adc
push
out
mov
movsb
stos
stos
push
sbb
lods
test
dec
xor
cli
aaa
hlt
mov
ret
sti
mov
or
mov
ljmp
push
test
xor
cltd
sbb
jo
mov
fs
fsubl
jg
outsl
or
data16
mov
cmpsb
stos
out
fidivrl
mov
cmc
jns
cwtl
loop
movsb
push
pop
andl
push
jbe
and
addr16
fcoms
xchg
push
lock
push
or
jb
popf
lahf
mov
sub
rorb
in
sub
loop
arpl
adc
or
loop
test
shrb
cmp
dec
rcll
jle
cs
pop
dec
cmp
pop
push
rcrb
mov
lock
sub
outsl
imul
lea
and
bound
sub
leave
pop
or
jno
sarb
jnp
push
arpl
cmpsb
dec
in
cmc
inc
inc
nop
dec
movb
adc
adc
cmp
xlat
cmc
dec
icebp
push
cmp
or
sti
test
jmp
mov
lods
flds
pop
jae
std
xchg
lahf
inc
lret
cmpsb
nop
aaa
int
jnp
jmp
add
jmp
push
mov
dec
frstor
ror
les
mov
xchg
push
sbb
stc
mov
call
xor
lock
xchg
mov
rcrb
js
mov
and
pop
mov
jne
sbb
lcall
or
jae
sub
iret
rolb
and
adc
jae
inc
or
lahf
jae
push
mov
std
out
mov
inc
mov
push
lea
cmp
stos
jae
and
roll
je
push
in
ja
fidivl
xchg
packssdw
mov
push
mov
pop
pop
insb
inc
xor
clc
inc
popf
xchg
into
xchg
out
sub
ja
sbb
pop
lcall
loopne
sbb
leave
mov
fcoms
mov
and
arpl
mov
fisubs
xor
jp
fstps
jge
out
mov
popa
iret
adc
ret
pop
clc
outsb
outsb
fldt
add
xchg
imul
xchg
xorb
das
ljmp
scas
add
mov
ja
or
mov
dec
xlat
loop
mov
divb
loope
clc
and
es
inc
data16
das
mov
jae
loop
and
adc
sbb
pop
dec
enter
inc
mov
pop
jmp
and
into
insb
fists
cmpsb
mov
or
sub
jecxz
and
sub
and
jl
in
lret
push
arpl
pop
outsb
pop
mov
mov
add
pop
mov
bound
out
add
lret
inc
dec
inc
andb
aas
loope
in
mov
gs
ja
dec
movsl
jno
fwait
add
orb
adc
cmp
std
rcr
add
pushl
cmp
ret
loopne
sbb
clc
out
pop
inc
mov
aas
js
cmc
fidivl
int
insl
jne
subps
jne
daa
iret
jnp
fcoml
popf
mov
xchg
adc
lods
in
dec
stos
dec
subb
push
dec
out
xor
adc
stos
mov
insl
add
clc
add
jo
and
fldenv
inc
leave
mov
inc
loop
pop
rol
jo
les
ret
in
out
jl
rolb
xchg
incb
adc
les
insl
inc
add
cmp
lea
sub
in
mov
es
mov
js
add
call
cmp
loop
outsb
cmpl
mov
and
incb
mov
fstl
pop
xor
mov
popa
sbb
adc
cmp
in
inc
dec
mov
dec
push
inc
inc
das
pop
push
mov
pop
mov
push
sub
push
xchg
xchg
mov
inc
xor
frstor
or
addr16
mov
shll
fwait
aaa
jg
mov
ret
lret
arpl
mov
xchg
sbb
dec
scas
sarb
icebp
pop
and
test
or
ret
xchg
lock
popa
dec
push
push
jae
stc
shll
push
scas
push
shlb
movsb
push
mov
add
adc
gs
push
mov
sub
mov
fld
cmp
sbb
aas
jmp
loop
adc
dec
cltd
lret
cmp
lea
adc
mov
jge
add
or
repnz
ret
gs
cltd
aam
add
inc
pop
pop
sbb
int
jle
das
add
cltd
push
dec
push
das
sbb
and
inc
jno
mov
ljmp
gs
xor
iret
jg
adc
dec
call
add
xor
jnp
cmp
mov
out
in
cmp
xor
and
inc
js
fcomip
sub
imulb
pop
push
dec
movsl
inc
or
sahf
lcall
cmp
call
popa
fiadds
popa
add
mov
pop
out
xlat
dec
push
inc
cmp
pop
call
pop
jecxz
dec
inc
dec
mov
bound
cmp
in
fiadds
movsl
sub
mov
inc
aas
push
sub
cmp
stc
cmpsb
lcall
sub
fnstsw
push
mov
mov
xor
xorl
jb
jge
andl
lret
pop
bnd
mov
xchg
xlat
sub
iret
push
xor
mov
addl
cmp
mov
test
jne
mov
or
jle
and
repnz
es
hlt
jns
dec
data16
mov
popa
xor
mov
push
arpl
jbe
hlt
ja,pt
push
xchg
nop
xchg
jp
in
out
inc
pop
lods
fs
or
in
sahf
add
xchg
inc
push
out
addb
xchg
out
and
orl
fstpt
lcall
jp
jp
push
ss
shl
jl
cmpsl
or
push
jg
lds
mov
push
lcall
lods
push
fnsave
inc
pop
clc
cltd
lret
data16
je
mov
shrb
xchg
sub
and
fs
or
ss
push
std
add
mov
movsb
or
cmp
rcl
mov
push
les
pop
outsl
inc
cs
rorb
cli
xchg
push
pop
add
les
add
inc
dec
je
lret
enter
xor
xchg
cmc
testb
jns
fistpl
cmp
je
jae
lea
mov
fldcw
rcrl
sbb
in
test
flds
push
mov
cmp
xchg
pusha
mov
pop
imul
scas
xor
jns
jne
jbe
test
cmp
daa
push
xchg
jb,pn
dec
jae
xor
lods
xor
std
insl
pop
xchg
and
xor
insl
test
jecxz
inc
jnp
std
mov
xchg
adc
jae
mov
stos
arpl
pop
push
shr
jns
push
or
jmp
mov
push
xor
add
test
mov
xor
mov
jbe
mov
cs
and
jl
xlat
je
or
push
leave
cmp
lret
jl
lods
fs
adc
xchg
ret
pop
jo
movhps
adc
mov
rclb
jp
mov
sub
or
inc
test
push
and
lods
cs
rcrl
fwait
pop
out
frstor
mov
dec
cmp
and
outsl
adc
pop
or
add
lds
sti
sbb
push
ficoml
adc
inc
lods
pop
push
inc
cmp
pushf
sub
lods
test
shr
mov
repnz
mov
addr16
in
cmp
pop
mov
scas
nop
cmp
repnz
dec
stos
andl
push
inc
mov
sub
adc
inc
cmpsb
repz
and
cmpsb
nop
sbb
fdivrl
shl
pusha
adc
mov
repnz
popf
aam
mov
fbld
bound
mov
push
push
mov
mov
mov
pop
inc
mov
int
fld
outsb
mov
pop
mov
fucomip
dec
jo
movsl
cmp
aaa
pushf
jecxz
xlat
push
dec
test
push
pop
mov
es
xchg
mov
fiadds
test
inc
mov
movsb
xorb
xlat
decb
dec
cltd
mov
aaa
jle
inc
sub
pop
leave
iret
subl
jp
or
adcb
or
fmull
adc
sbb
pop
add
enter
sbb
rol
pop
jne
shll
sub
cmpsl
out
loop
ret
or
xchg
lea
daa
mov
xor
lock
lea
or
or
jo
lret
cmp
pop
jecxz
cmp
es
xchg
pop
das
xchg
cmp
fidivrl
dec
pop
outsb
aas
jo
adc
ficoml
xor
popa
xor
int3
test
mov
xchg
jl
lds
mov
daa
mov
arpl
in
mov
mov
aaa
mov
data16
xchg
test
xchg
sub
adc
sbb
loop
das
in
xchg
push
inc
sbb
aam
mov
hlt
cmp
lahf
sub
mov
test
push
adc
into
data16
scas
and
jae
test
aas
add
xchg
fcmovbe
ret
add
test
sbb
mov
shr
gs
or
cmovbe
outsl
push
mov
pop
fldln2
or
fwait
add
xchg
shlb
fwait
std
into
aam
cmp
or
std
dec
arpl
pop
cmp
in
nop
int3
ret
mov
ja
inc
aaa
je
test
cmc
pushf
pushf
int3
mov
fists
xor
int3
cmp
loopne
scas
cltd
nop
ja
mov
mov
pop
pushf
cltd
stc
sbb
sbb
enter
add
out
mov
cmp
test
mov
push
iret
idivl
scas
push
adc
out
mov
test
sbb
adc
push
pop
aam
cmp
add
loope
inc
push
out
cmpsb
aas
xchg
or
xor
sbbb
xchg
hlt
fs
mov
in
dec
shlb
push
scas
jnp
push
jg
pop
outsl
xchg
xchg
inc
mov
mov
out
daa
test
jne
outsb
in
stos
sarb
stos
aaa
cmp
jns
push
les
mov
mov
js
cmpsl
scas
xchg
xor
in
faddp
sbb
leave
mov
js
mov
clc
test
push
das
shl
movsb
mov
inc
pop
push
test
in
sbb
jo
nop
lods
in
lods
push
lcall
jae
pop
jmp
dec
pop
into
pop
jnp
pushf
push
mov
xchg
dec
mov
daa
xor
push
cmpsl
mov
addr16
dec
dec
iret
ss
dec
or
or
gs
pop
push
xor
scas
mov
out
test
jp
call
xchg
je
push
sub
pop
jbe
inc
mov
imul
inc
xor
pop
in
sbb
out
scas
ret
das
dec
ss
pusha
dec
ror
notl
or
xor
fwait
das
mov
sub
cmpsb
fucomi
xchg
push
lahf
xor
add
cld
js
lods
pop
jge
jle
scas
lahf
cmc
movsl
cmc
cmp
and
fistpl
and
repnz
popf
xchg
and
lret
mov
push
pop
test
sub
mov
or
jmp
les
dec
inc
lea
push
push
mov
imul
nop
xchg
dec
out
out
pop
imul
xchg
inc
outsb
inc
addb
enter
mov
sbb
stos
sub
xchg
mov
mov
ja
push
lcall
mov
stos
cmp
or
xor
mov
and
aad
jo
dec
push
xor
xchg
pop
xchg
mov
mov
push
sti
pop
fisubs
mov
sub
mov
jnp
mov
stos
hlt
outsl
out
or
mov
pop
push
mov
adc
out
xchg
xor
loop
and
movsl
imulb
gs
mov
and
cmc
mov
enter
mov
ret
jns
fwait
xchg
shrl
jecxz
pop
aaa
nop
call
mov
gs
pop
hlt
pop
out
xchg
leave
push
cmp
test
dec
cmc
fstps
nop
fldt
ss
pusha
cltd
and
in
lock
sub
fwait
jg
and
movsb
dec
push
dec
jge
call
dec
mov
aaa
mov
mov
into
push
movsl
mov
imul
shll
aaa
in
lret
adc
pusha
jmp
insl
jo
lds
mov
bound
sub
or
mov
dec
jae
inc
jb
adc
xor
push
xor
ror
sbb
mov
dec
scas
data16
fmul
call
js
das
lds
jp
jge
popf
stos
nop
sti
dec
sub
aad
mov
aad
xor
fwait
fdivs
pop
mov
push
jg
adc
mov
xchg
sbb
xor
adc
mov
gs
negl
fdivrs
sarl
lds
fisttpl
lahf
cmp
push
mov
dec
dec
xor
sub
and
arpl
xchg
es
mov
fwait
and
inc
cli
je
outsl
insb
addr16
or
pop
add
jno
mov
outsb
cwtl
push
lods
dec
orl
lcall
cmp
cmpsl
lock
jp
mull
or
sbb
stos
addr16
sbb
push
bound
outsl
or
arpl
push
add
es
sbb
repnz
mov
cmp
jmp
xor
lds
pop
mov
sarb
lock
repz
add
outsl
cmp
cmpsb
mov
loope
push
iret
jp
mov
sub
cld
jg
ljmp
pusha
pop
pop
xor
and
and
ljmp
fs
xor
scas
adc
mov
add
into
repz
cld
mov
mov
add
mov
push
xor
repnz
lock
dec
dec
cwtl
sub
lock
lea
xchg
adc
out
jmp
cmpsb
loope
leave
and
adc
flds
xchg
lods
lods
mov
or
fildll
dec
out
and
jl
jae
sar
addb
xor
cmp
mov
fsubrs
adc
adc
sub
mov
jle
hlt
push
cmp
movsb
fisttps
ficoms
out
rcrl
xchg
mov
jae
dec
in
aaa
inc
out
mov
insb
ss
loopne
mov
mov
xor
mov
sub
imul
int
cmc
loop
je
clc
pop
xchg
pop
pop
sub
push
inc
mov
ja
repz
adc
pusha
movsb
mov
adc
push
dec
and
lea
dec
pop
jecxz
jbe
cld
mov
insb
std
outsb
cltd
push
cmp
lret
jb
cld
push
push
xor
hlt
dec
mov
cmp
leave
mov
icebp
ja
pop
lds
inc
jecxz
mov
adcl
dec
jno
in
lods
inc
dec
pop
nop
dec
test
mov
cmpsb
outsb
loope
xlat
test
mov
or
shrb
addr16
int
inc
divb
xor
xchg
mov
push
pop
in
lahf
push
cltd
pop
dec
lahf
sub
imul
mov
jae
jb
sub
mov
jg
push
test
sahf
popf
inc
push
js
dec
mov
add
pop
inc
in
inc
fldt
sub
test
cli
pop
ja
aad
aas
xor
cmpb
fcmovnb
jae
repz
inc
std
dec
aad
sub
repz
aas
dec
loope
and
xor
mov
faddp
cld
jnp
pop
das
addr16
jecxz
lods
test
movsb
out
mov
sub
js
into
iret
les
aas
das
ret
xchg
xor
xor
push
push
int3
jl
roll
jnp
sbb
sti
leave
bound
dec
aaa
sbb
inc
adc
cmp
insb
jmp
xchg
mov
int3
cld
xchg
cwtl
js
mov
dec
fdivrp
lahf
xchg
ja
xchg
loope
in
mov
shl
add
inc
pshufw
inc
or
xchg
popa
dec
test
ficompl
addb
mov
pop
cmp
pusha
and
push
aaa
mov
add
cmpsl
cmp
jmp
into
dec
pop
sbb
lods
in
cmp
xchg
shlb
dec
pop
enter
push
out
out
enter
loop
push
mov
test
jg
dec
mov
push
fimull
inc
or
sub
ja
test
sbb
push
dec
into
adc
scas
ds
jp
leave
dec
into
pop
bswap
int3
cmovp
mov
nop
pop
sbb
xor
fcomip
add
xchg
and
push
fldenv
adc
push
pop
divb
mov
lock
xchg
mov
mov
rclb
aad
out
divb
xor
push
in
int
or
cld
daa
mov
ss
inc
lock
ja
pop
andl
jl
gs
cwtl
push
movsl
mov
and
es
test
out
and
rorl
daa
add
sbbb
dec
xor
sahf
push
imul
or
cmp
cltd
xchg
jnp
push
inc
sbb
mov
test
lcall
add
lods
cld
je
push
icebp
bound
rclb
sbbl
mov
xchg
ret
mov
lods
mov
mov
and
jae
xor
pusha
clc
mov
and
add
or
sub
and
clc
test
cmp
ficomps
std
mull
jbe
push
lcall
adc
aad
or
mov
js
jmp
scas
pop
jmp
jg
sub
hlt
inc
xchg
lea
jp
gs
jmp
testb
xchg
in
add
les
cltd
xlat
pop
lret
imul
les
fs
int3
cmp
pop
aas
mov
jae
mov
mov
dec
int3
fiaddl
pushf
popf
hlt
outsl
inc
stos
fisubrs
adc
sbb
jbe
push
mov
cmp
xlat
mov
je
adc
jns
xchg
push
cmc
test
jle
sti
lcall
imul
add
into
xchg
xor
pusha
in
lds
mov
mov
push
jno
and
push
mov
mov
movsl
inc
adc
fwait
cwtl
jge
bound
rcrl
adc
aas
mov
xor
je
jmp
in
sub
notb
sahf
add
imul
and
fistpll
popf
test
pop
mov
rclb
cmp
dec
xlat
pop
add
jecxz
adc
rcr
mov
mov
int3
inc
mov
xchg
dec
in
mull
inc
stc
mov
pop
mov
jo
jge
xchg
jns
cmp
stc
int
stos
cmp
sub
ret
sahf
cmp
mov
mov
arpl
insb
orb
stos
ja
and
nop
cmp
stos
sub
inc
or
decl
enter
scas
push
and
int3
icebp
scas
add
sub
enter
loopne
or
int3
and
adc
add
jmp
mov
dec
into
test
cli
daa
add
add
shrl
add
rol
xchg
in
into
jp
mov
stos
add
add
sub
test
outsb
xchg
cltd
fwait
xchg
cmp
push
sbb
adc
rcll
lods
fildl
push
cs
ret
sahf
mov
cltd
sbb
adc
fs
sub
sbb
ret
out
sub
test
in
testb
out
rorb
divl
mov
shlb
pop
cmp
sub
mov
es
aam
sbb
out
addr16
xchg
lcall
push
mov
fidivs
pop
xchg
mov
orl
sub
es
lret
test
dec
jle
std
in
mov
mov
and
xor
inc
aam
ja
inc
ret
pop
mov
iret
popf
outsb
repz
popf
cmp
sbb
movsl
bound
in
mov
daa
aam
push
push
cld
lret
rorl
gs
ja
pop
sbb
add
jae
in
dec
push
pop
push
dec
push
mov
fiadds
mov
push
lods
ja
dec
push
dec
fsubl
cmp
iret
sub
imul
push
lods
xchg
addl
lods
mov
in
cmp
aad
jl
adc
mov
add
push
imul
aad
mov
mov
pusha
test
rorb
es
sbb
rcrb
fwait
cmpsb
dec
int3
movsl
dec
orps
xlat
imul
and
adc
pop
push
pop
sbbb
xchg
js
add
clc
mov
leave
mov
pop
aas
out
cmp
mov
push
push
insl
xchg
nop
arpl
push
pop
arpl
push
dec
fldcw
mov
jo
push
cmpsb
mov
stos
ror
cs
out
jne
enter
fs
sbb
add
mov
xorb
sub
adc
mov
or
int
fists
mov
xor
mov
xchg
sbb
loope
int3
call
in
jle
or
in
push
xor
je
dec
pop
popf
push
cld
xor
sub
sarb
stos
push
sub
cmpb
das
mov
mov
icebp
sbb
cmp
mulb
dec
cs
xchg
mov
pusha
mov
pop
add
insl
push
dec
cmp
lcall
add
mov
dec
loopne
push
and
xor
xchg
xor
pop
sub
mov
stos
lods
mov
jo
int3
popl
out
add
ja
sub
cmpsb
repz
inc
xchg
mov
out
lods
imul
ss
popf
adc
pop
and
jmp
dec
testb
push
fiadds
xchg
sub
outsl
cmp
scas
add
int3
cmp
imul
rolb
data16
dec
xor
scas
je
iret
xor
sti
jg
cld
cmp
jbe
sub
xchg
push
lret
stos
int3
push
jns
cmp
in
ret
xchg
dec
repz
mov
pushf
add
xor
mov
xchg
enter
cld
pop
xchg
stos
sbb
dec
jecxz
pop
addr16
scas
or
cmp
decb
mov
xchg
test
daa
jb
mov
cmp
aam
cmp
jp
inc
jb
mov
jns
sarb
js
mov
pop
sarb
sahf
fwait
cmp
mov
mov
popf
repz
rclb
adc
push
out
mov
inc
dec
cltd
sarl
push
or
cmp
negb
jge
or
xchg
jge
fstpt
imul
and
mov
aam
loop
daa
and
xchg
mov
cmp
pop
mov
stc
pop
jnp
roll
popf
sub
loope
lcall
iret
fs
ret
repnz
fidivl
fs
clc
mov
sbb
jo
jecxz
jl
stc
lcall
test
stos
rcrb
out
test
aaa
loop
xor
push
cmpsb
xor
push
call
mov
xchg
int
repz
lret
aad
ss
pusha
mov
cmp
frstor
pop
pushf
ror
pop
add
in
outsb
jnp
clc
pop
pop
sub
push
and
jmp
sahf
nop
lret
dec
nop
xchg
push
inc
rcrl
fwait
iret
xchg
call
gs
adc
insb
adc
mov
xor
stos
cs
leave
cmp
stc
clc
mov
or
inc
test
mov
jle
pop
push
jl
or
push
ljmp
mov
adcl
test
enter
stc
js
inc
les
ds
push
xchg
cld
adc
fdivs
in
jle
sbb
insl
mov
inc
xchg
pop
movb
or
fidivrs
fisubl
push
leave
or
mov
fmuls
scas
divl
std
mov
cmpsb
sub
lcall
loopne
lret
add
in
jbe
xchg
adc
or
shl
dec
in
out
out
sub
out
push
int3
xchg
lods
int
adc
sahf
fadds
mov
repz
movsl
in
test
and
sub
repz
in
movsl
lock
cmpsl
sahf
les
mov
bound
jns
cmp
mov
ds
adc
clc
dec
or
push
mov
cmp
or
fildll
xchg
pop
leave
pop
pop
or
sub
les
cmp
insl
sub
repnz
mov
inc
push
dec
xchg
xor
xchg
push
test
insl
int
push
call
test
mov
mov
pop
sbbb
xchg
sbb
fdivrs
jg
out
into
and
nop
paddusb
es
popf
xor
pusha
es
pop
xor
cltd
inc
aad
pop
popf
repz
insb
sbb
cld
fs
and
fcompl
sahf
inc
imul
sbb
mov
movsb
pop
movsl
dec
aaa
xor
enter
mov
mov
stos
xchg
pop
mov
xchg
fwait
push
rcl
std
mov
mov
cmp
jmp
jne
shr
hlt
jge
stc
stos
mov
test
testb
popa
mov
sbb
jg
outsl
ret
add
insl
mov
or
dec
je
mov
cld
fstpt
dec
sti
sub
in
jne
pop
movsb
push
cmc
mov
fdivr
mov
sub
add
out
pop
into
aaa
push
cmp
xchg
hlt
mov
out
add
data16
aas
mov
mov
and
hlt
xchg
push
fcompl
outsl
add
cmp
cmpsl
fs
xlat
fwait
cmp
dec
sahf
xorl
xchg
dec
adc
idivl
mov
test
loop
dec
jno
out
mov
xchg
dec
dec
push
adc
shlb
dec
and
pop
adc
add
push
and
inc
jb
fs
jmp
and
movl
cmp
lods
mov
pop
xchg
arpl
mov
shl
inc
outsb
dec
mov
jmp
inc
push
idivb
rcrl
dec
shll
xchg
xchg
jl
daa
out
xchg
dec
push
and
mov
lret
ljmp
ja
sub
iret
push
aad
fsubl
call
mov
cmc
test
inc
icebp
repz
push
pop
jne
ss
sub
mov
xchg
inc
add
sub
pop
les
cmp
jg
mov
cmp
popf
and
lcall
jbe
dec
rolb
in
adc
fisubl
xor
in
test
pop
pop
idivb
jge
add
test
lahf
stos
rcrl
idivb
inc
mov
and
fstp
mov
addb
sbb
ret
inc
pushf
inc
imul
dec
test
in
lea
fs
pop
adc
and
jnp
xchg
and
jnp
imul
aad
jl
mov
push
or
stc
add
pop
in
jecxz
mov
enter
jle
ljmp
xor
aam
push
stc
test
mov
add
lahf
fwait
or
outsl
jne
cmpxchg
jo
push
pop
mov
stos
jp
mov
imul
arpl
dec
popa
push
fisttps
in
dec
imul
loope,pn
jnp
push
lods
repz
sti
pop
mov
sbb
lock
xchg
dec
inc
andl
add
xchg
fidivs
sub
ret
lahf
mov
stos
aas
adc
add
repz
mov
imul
push
xor
jp
mov
pop
and
jmp
push
test
cltd
or
mov
es
jae
mull
bound
xor
popf
jbe
int3
imul
jmp
sub
roll
mov
hlt
pop
push
or
xor
lahf
push
rcrl
stos
leave
fs
mov
push
mov
mov
xchg
lret
push
xor
xchg
jb
push
and
sbb
mov
pop
fnsave
frstor
jne
clc
int
aaa
fcompl
test
std
xor
fsub
pop
push
jg
iret
aaa
add
and
popw
sbb
mov
xchg
inc
out
lods
movsl
mov
cmp
sbb
stc
cmp
gs
mov
nop
xlat
dec
enter
cli
pop
push
mov
enter
jne
or
jnp
data16
stos
sbb
je,pt
mov
inc
addr16
mov
push
jne
out
and
addr16
hlt
movsb
mov
push
cld
je
ficomps
jae
cmpsb
inc
and
lret
sbb
xchg
inc
push
mov
add
outsl
sub
ja
xor
das
or
lds
inc
push
jno
das
cltd
add
cmpsl
in
icebp
mov
out
fs
push
nop
mov
dec
push
cmp
and
loope
mov
mov
test
mov
pop
fwait
xor
xchg
lahf
jne
pop
pop
mov
lds
out
jl
loopne
les
mov
rcr
push
push
ds
cmpsl
scas
jle
stos
imul
rorb
and
call
push
push
shl
add
inc
xchg
sbb
push
jg
call
test
cli
xor
xchg
push
push
enter
orb
stos
aad
push
pop
sbb
pop
popf
push
mov
das
adc
ret
cli
into
test
sub
sub
xchg
adc
ret
fistps
pop
push
pop
adc
fistps
push
mov
jecxz
mov
dec
neg
xor
outsb
scas
aad
test
mov
cltd
adc
xchg
adc
in
cmp
sbb
adc
sub
xchg
pop
out
xchg
repz
mov
scas
mov
mov
xchg
aad
push
add
fisubs
pop
lea
mov
hlt
inc
lahf
es
dec
push
xchg
jns
scas
or
sub
repz
fcompl
into
and
dec
sbb
inc
lret
push
ds
xchg
dec
jmp
jp
lcall
test
enter
cs
jmp
shrl
leave
movsl
push
cmpsb
mov
out
std
mov
mov
pop
mov
xchg
sub
movsb
jmp
inc
dec
pop
jl
call
and
add
or
inc
push
inc
popa
ret
inc
xchg
xchg
mov
inc
out
data16
adc
icebp
ss
incl
cmpsb
orl
cmpb
mov
push
jmp
mov
movl
or
out
add
lret
add
sbb
or
pushf
fdivrs
test
pop
pop
stos
pop
insl
call
push
jns
arpl
xchg
popf
or
dec
cwtl
cmp
dec
test
dec
jbe
test
mov
mov
repz
push
mov
jbe
into
call
push
insb
xlat
outsb
xor
adc
adc
mov
jp
sub
lahf
test
mov
insl
sbb
cltd
aaa
push
pop
mov
push
addb
sbb
jbe
aaa
mov
dec
stos
movsl
and
mov
push
repnz
mov
mov
mov
xchg
cs
mov
loop
push
xchg
jle
bound
jp
or
cmpsl
mov
or
push
in
dec
adc
sub
pop
xchg
mov
mov
push
pop
push
iret
sub
mov
les
aam
pop
stos
test
stc
xchg
aad
jb
sbb
jle
in
stc
sub
je
daa
scas
es
mov
arpl
pop
xor
sub
repnz
je
pop
hlt
aas
inc
inc
sub
pop
mov
lcall
jo
fwait
imul
mov
sbb
addb
jle
jecxz
dec
fidivl
sbbl
pop
push
mov
insl
repz
inc
fdivp
push
fwait
or
ret
mov
inc
cmp
mov
xlat
movsl
xor
sub
push
sbb
mov
inc
sbb
test
jb
out
icebp
dec
mov
push
mov
in
out
inc
fldl
jb
imul
mov
shrl
or
mov
sub
shrl
scas
stc
mov
cmpsl
sbb
xor
out
std
xor
pop
and
orb
in
ljmp
or
leave
dec
repnz
ret
and
roll
fs
and
jg
fnstcw
inc
leave
push
subl
lahf
ja
jns
push
in
sti
push
pop
pop
loop
or
jg
or
inc
and
inc
mov
jge
rorl
cli
orb
adc
inc
dec
movsl
xchg
fidivrs
pop
push
adc
pushf
sub
xchg
scas
or
sbb
in
outsb
cmp
ror
out
in
xor
jecxz
fistps
xchg
cmp
test
adc
es
jb
cmp
test
clc
xor
or
int
int3
push
repnz
jnp
fldcw
mov
adc
pusha
and
push
or
push
jno
sahf
in
mov
push
imul
cld
in
xchg
cmc
push
push
ss
sbb
cmp
jle
mov
push
push
in
daa
repnz
inc
xchg
pop
cltd
lock
push
cmp
fwait
cmpsl
or
out
daa
fiadds
add
cmp
cmp
mov
jle
sbb
cltd
jbe
mov
mov
jo
pop
dec
stc
cmp
lret
push
test
test
push
push
dec
idivl
out
mov
dec
cmp
xchg
jbe
bound
mov
sbb
int
setbe
inc
das
sbb
dec
or
mov
addr16
subl
dec
jmp
sahf
je
inc
shlb
jno
or
mov
push
inc
or
lcall
mov
fdiv
shrb
sar
arpl
dec
jmp
xor
rcr
jg
inc
iret
adc
cld
cs
inc
movsl
or
cli
inc
mov
pop
js
rclb
jbe
jns
mov
jnp
orb
cmpsl
pushf
nop
cli
adcb
jb
inc
xor
adc
outsb
add
dec
sub
push
jb
fsubs
loopne
add
cltd
push
push
bound
sahf
push
insb
push
lea
pop
mov
push
enter
xchg
xchg
lcall
xchg
dec
aas
pusha
into
mov
cld
cmp
jo
xchg
es
and
mov
lret
iret
and
daa
inc
gs
sbb
push
push
repnz
jecxz
xchg
mov
hlt
mov
cmc
or
jl
mov
push
movsl
ret
jg
jle
pop
inc
jge
incb
push
ds
jle
adc
jnp
push
sub
push
in
jb
inc
xchg
fnop
xlat
adc
pop
cs
pop
dec
cmp
xchg
out
cwtl
dec
fs
xchg
in
sub
dec
xchg
js
jle
mov
push
jmp
leave
movsl
aaa
divl
int
xor
cmp
cmpsl
and
inc
fdivs
jge
arpl
jge
leave
pop
in
repz
mov
aam
jl
outsb
sbb
shr
aam
mov
push
test
mov
and
push
dec
and
xlat
xchg
les
mov
testl
out
data16
and
push
mov
push
cs
mov
or
sub
sbb
rcrb
in
adc
mov
dec
daa
push
jno
idivb
aad
movsb
popf
movsb
xchg
push
mov
adc
stos
scas
test
ljmp
imul
push
lahf
popa
icebp
in
sahf
cmp
lock
add
mov
cmp
data16
sti
lret
mov
pop
dec
int
orb
insb
aam
dec
mov
shrl
fadds
xchg
bound
mov
loope
jno
cmp
dec
cld
pop
ficoml
sbb
xchg
call
imull
push
fsubrl
jp
sub
xlat
idiv
push
std
jb
mov
jne
aaa
filds
pop
add
or
xor
outsl
xchg
sub
leave
dec
pop
cmp
mov
mov
cmp
cli
sbbl
mov
push
shlb
mov
jae
jmp
and
cltd
nop
push
sbb
lods
movsl
cmp
loop
pop
xchg
and
int3
adc
jns
xor
cwtl
test
fsubr
orl
xor
fs
inc
or
jecxz
js
ss
call
outsl
mov
jp
mov
sub
fimull
sbb
or
rcrb
mov
ja
in
sub
sub
and
and
cmpsl
xor
push
push
sub
das
adc
cwtl
fisubrl
lock
into
and
movsb
or
das
push
int3
addr16
arpl
push
leave
sbb
out
into
ljmp
pop
sbb
scas
sbb
pop
mov
loopne
push
sub
ficomps
pop
iret
aam
dec
ja,pn
fldenv
ja
fsts
jg
testb
loopne
fcmovnu
or
adcb
inc
repnz
mov
loop
xchg
sahf
push
dec
xchg
pop
dec
mov
mov
xor
lahf
mov
xor
mov
sti
outsl
dec
shrl
insb
sbb
pop
cmp
mov
insb
sbb
lcall
pop
xorl
aam
mov
cli
pushf
cmp
jge
ret
decl
cld
xchg
addr16
mov
test
mov
repnz
fisubl
jg
das
das
or
nop
lret
jbe
out
pop
adc
push
or
or
cwtl
jle
pop
jg
shrb
rcl
xchg
jg
push
js
rcr
inc
and
mov
cmp
nop
push
pop
inc
sbb
xchg
out
dec
or
jb
rol
fdivrl
lret
movsb
pop
and
adc
add
mov
negb
adc
jns
dec
out
adcl
orb
mov
add
daa
xor
ret
fnstsw
mov
lahf
mov
xchg
push
negb
jge
sbbb
in
mov
insb
sar
adc
inc
or
js
dec
fstps
fstl
pop
jge
pop
xor
dec
iret
sub
lods
xor
enter
pop
jae
shrb
sbb
mov
inc
lea
bound
mov
adcb
push
cmp
sub
pop
pusha
xchg
jge
dec
push
adc
jno
daa
daa
in
in
aas
or
popf
jg
nop
into
mov
js
outsl
cmc
cwtl
xor
mov
mov
or
and
rcl
fwait
das
icebp
sub
push
pop
in
cmp
sahf
cmp
leave
test
inc
push
mov
or
aaa
dec
movl
out
mov
mov
pop
cltd
cwtl
pop
dec
insb
adc
testb
add
lahf
mov
iret
into
mov
xchg
insl
out
mov
jb
repnz
xor
repnz
cli
inc
add
pop
out
pusha
pop
lahf
inc
jo
lahf
int3
ljmp
jnp
out
mov
cmp
mov
sbb
popa
into
mov
or
test
pop
push
std
xor
rorb
xor
pop
adc
pop
xchg
aad
xchg
cmc
xlat
je
mov
push
pop
loopne
scas
insl
arpl
jp
mov
jb
decb
stos
mov
sbb
lods
inc
mov
push
mov
or
sub
mov
jl
popf
cs
jle
sahf
popa
jmp
testb
cs
sub
dec
clc
cmp
and
lods
pop
push
xor
scas
mov
inc
pop
jns
dec
cmp
outsl
cltd
xchg
push
adc
mov
lods
leave
mov
or
xchg
lods
push
or
inc
mov
sub
mov
add
stos
xchg
push
add
std
lret
xor
cld
pop
clc
pop
dec
mov
mov
or
push
pop
stc
bound
push
popa
shr
cmp
lods
ljmp
and
xor
sub
icebp
dec
arpl
xchg
push
and
loope
mov
data16
into
mov
in
cmpl
shrb
dec
inc
push
jo
loop
add
mov
cmpsl
nop
jbe
ret
adc
adc
dec
and
outsl
stos
stos
mov
add
stc
into
cltd
lds
leave
ljmp
mov
iret
mov
imul
mov
ret
pusha
xor
and
mov
and
repz
inc
cmpsb
mov
faddl
leave
in
clc
pop
xchg
pop
orl
out
mov
and
cmp
or
xor
push
addr16
mov
dec
pop
dec
icebp
mov
add
push
dec
dec
fcompl
mov
int3
hlt
stos
jnp
jnp
pop
outsb
fbstp
iret
xor
inc
xor
jae
mov
hlt
cmp
icebp
xchg
std
cwtl
jbe
push
and
add
pop
xor
jne
data16
push
jo
cmpsl
jbe
idivb
arpl
mov
dec
in
xlat
sti
adcl
hlt
xlat
and
mov
and
mov
into
fs
sti
daa
testb
and
push
mov
int
add
jge
adc
mov
adc
jmp
xchg
loopne
lcall
jns
popa
repnz
dec
daa
inc
insb
dec
in
call
inc
imul
lahf
subl
jbe
push
addr16
mov
data16
inc
xchg
inc
xchg
cmpsb
pop
popf
pop
loope
in
inc
dec
jp
adc
dec
push
pop
mov
insl
bound
out
std
sbb
int3
cmpsl
out
aaa
loope
cmp
and
push
lds
mov
daa
cmc
sub
jecxz
mov
sbb
cmp
mov
jge
or
cltd
pop
xor
ror
pop
repz
push
vpsadbw
inc
mov
lds
mov
dec
cltd
add
mov
loop
push
cmpsl
bound
adc
mov
call
push
mov
xchg
jl
ljmp
mov
sub
das
aam
testb
into
call
in
stos
stos
outsb
sbb
cltd
out
or
addb
js
test
shlb
mov
das
xchg
ret
or
inc
test
notl
fstps
in
inc
push
arpl
jb
adc
or
mov
jns
adc
lret
xor
gs
adc
and
mov
nop
sbb
xchg
fstpt
in
push
xchg
sti
pop
loop
sub
inc
sbb
out
jge
aas
inc
add
and
jle
inc
test
xor
or
scas
sub
pop
test
mov
sub
xchg
dec
jmp
and
int
pop
adc
add
and
pop
jae
mov
xor
cld
in
leave
cmp
or
stos
mov
pmaxub
sbb
addr16
pop
inc
dec
cmp
and
jp
jae
xor
test
into
cmp
xor
loop
jae
xor
push
pop
mov
mov
mov
jle
ret
adcb
mov
je
test
out
out
sub
push
aaa
push
ja
in
push
xor
test
push
sbb
pop
mov
rcl
pop
jmp
cli
jmp
cmc
cmp
iret
cli
mov
sub
insb
dec
push
and
mov
add
fcomps
call
hlt
iret
sub
inc
pop
jge
loop
lret
jae
sbb
mov
push
movsl
int3
and
cmp
push
lock
fcoml
jge
jo
outsl
cwtl
jbe
pop
repnz
call
imul
mov
es
jno
dec
mov
je
jle
inc
shll
sbb
inc
jge
ret
aas
jecxz
mov
or
jp
and
addr16
sbb
fidivrs
cwtl
jbe
jp
jp
xor
xor
pop
and
inc
ja
loope
sub
faddl
loopne
clc
ja
andb
shr
inc
scas
mov
aad
mov
enter
dec
popa
cmc
push
imul
in
jle
cmp
loope
into
filds
or
jae
cld
jne
mov
lods
cli
mov
pop
lds
or
ret
pop
pop
xchg
leave
hlt
mov
and
jnp
ret
movsb
fsts
xchg
inc
inc
sahf
dec
popf
mov
add
xor
insb
mov
jp
ljmp
mov
pop
test
mov
and
xor
fnstenv
mov
outsl
cmp
mov
mov
xor
adc
gs
ret
push
push
repz
mov
out
movsl
mov
jbe
sti
bound
repnz
aas
stos
js
dec
and
pop
imul
xchg
dec
lahf
repnz
jae
dec
outsl
push
ds
jae
push
scas
xor
add
lods
xchg
push
mov
mov
repnz
pop
pop
and
sbb
cmp
push
jo
mov
pushf
add
and
dec
aad
mov
pop
jnp
cmpb
xchg
inc
xorl
inc
cmpsb
jne
dec
popf
je
jle
fwait
adc
in
aam
add
mov
jl
imull
in
aad
fisubrs
pop
mov
jecxz
push
sbbb
xor
ret
dec
pop
dec
aad
lret
mov
cs
cmc
ja
sbb
idiv
loopne
cltd
sub
push
lods
dec
adc
xchg
xchg
dec
mov
inc
rorb
rcrl
inc
sarb
mov
lods
cmp
mov
dec
xor
mov
cmpsb
push
mov
add
cli
sbb
fisubrs
xor
das
mov
jbe
xchg
sbb
lods
push
sbb
test
cmpsl
cmp
mov
movsl
ss
shrb
aad
xor
in
xchg
inc
adc
test
cmp
enter
add
adc
stc
mov
data16
aas
lahf
and
xchg
mov
fdivs
mov
daa
inc
and
jno
mov
out
xchg
sub
add
dec
hlt
mov
cmc
mov
dec
sub
adc
fadd
lods
dec
aam
loopne
xor
adc
dec
arpl
stos
hlt
sti
and
and
and
push
loope
bound
std
ret
push
addb
inc
enter
or
insb
imul
int3
adc
mov
sub
mov
sbb
mov
pop
xor
xor
xor
or
cmp
pop
lcall
push
jo
cwtl
roll
jae
dec
xor
push
repnz
mov
icebp
inc
jmp
xor
mov
dec
mov
repnz
fwait
rcrl
jmp
jne
pminub
dec
scas
jae,pn
adc
xor
xchg
mov
orl
dec
out
jle
xor
rcll
dec
add
mov
add
negl
jo
push
outsb
aas
jne,pn
xor
add
shrb
fs
mov
add
fmull
imul
mov
cmp
aas
clc
fsubl
fisubl
bound
sub
sbb
xchg
int3
adc
mov
cltd
inc
roll
arpl
cmpsl
mov
cwtl
sub
loop
mov
imul
repnz
daa
xor
adc
cmp
stc
add
and
pop
jnp
xchg
add
add
stc
dec
aaa
pop
pop
and
xor
and
mov
push
pop
xchg
les
fidivrs
cwtl
jp
lods
out
push
pop
in
dec
cmpsl
repnz
push
jecxz
xor
int3
test
movsb
pop
sti
inc
ss
stos
out
add
pop
mov
or
outsl
adc
or
enter
in
xor
and
sbb
adc
mov
xorl
lahf
lds
std
xchg
mov
incl
imul
movsb
cmp
pop
or
pop
sbb
in
cmp
sahf
push
cltd
mov
add
mov
out
pop
sub
test
shlb
sub
xor
dec
and
push
in
addr16
sti
mov
cmp
jg
dec
dec
push
cmp
fsts
loopne
mov
adc
addr16
fistps
sub
aaa
rcrl
sub
repz
adc
dec
and
repnz
xchg
stos
mov
xchg
fdivs
jl
stos
xchg
pop
test
notl
add
pop
add
jb
pop
mov
jl
into
xor
jecxz
jle
jle
push
stos
and
nop
iret
lret
adc
push
in
sub
push
dec
iret
repnz
mov
add
push
sti
fwait
mull
jle
rol
cs
lods
in
out
pop
test
sar
inc
popa
fwait
stos
xor
xlat
insb
cltd
jne
or
jecxz
and
jg
adc
dec
lret
and
cmp
outsl
mov
mov
lock
subb
pop
rcll
int
inc
add
cmpsb
jbe
stos
sub
mov
xor
pop
int
xchg
cmp
shrb
cmpsb
pop
mov
les
xchg
add
mov
aaa
popa
negb
push
sub
int
lea
sbb
inc
pusha
imul
jb
shrd
xor
jnp
mov
sbb
mov
into
sub
mov
adc
imul
in
enter
add
and
dec
dec
push
shrl
xchg
sbb
sbb
int3
push
scas
sub
insb
xor
cltd
push
fildll
insl
subl
xchg
push
sahf
fldl2e
cmp
mov
dec
jbe
push
sbb
cmp
nop
jp
xchg
stos
cmpb
or
cs
or
mov
fildl
aas
mov
xlat
and
cmp
gs
je
cmp
push
dec
outsl
push
dec
jo
enter
mov
lcall
mov
mov
add
pmaddwd
sbb
and
mov
stos
lods
dec
xor
mov
daa
test
jecxz
fldenv
fistpl
jmp
jne
jg
sub
sarl
outsb
inc
stos
mov
cltd
xchg
dec
xor
xchg
mov
jge
insl
rclb
insl
aad
xchg
out
int3
cmp
inc
sti
push
xchg
add
stc
cltd
push
scas
adc
fnstcw
negl
push
bound
and
dec
arpl
mov
mov
mov
inc
pop
mov
cmp
icebp
sub
mov
lock
inc
adc
jb
not
jne
aad
fdivrl
fistl
cwtl
mov
push
ds
sub
mov
std
pusha
mov
inc
lahf
aad
xor
or
cmpsl
pop
hlt
daa
mov
cmp
shr
pop
insl
add
jbe
and
dec
sub
add
cli
add
lahf
jl
inc
adc
jbe
add
iret
rcll
dec
inc
jb
xchg
lret
sub
lods
fidivrl
repz
jne
cmpsl
bound
push
out
aaa
and
test
lods
or
fldcw
mov
pushl
inc
lods
in
xchg
jno,pn
leave
cmp
or
shlb
pop
repz
decb
mov
xchg
pop
mov
xchg
pop
div
dec
int3
jae
sbb
sub
nopl
push
int
call
int3
ret
pop
pop
ja
jle
mov
js
shlb
push
test
cmpsb
xchg
push
ret
cld
xor
mov
sbb
fcomps
out
push
aas
mov
or
dec
or
sub
lret
mov
jle
int
lds
mov
and
arpl
and
scas
xor
mov
rcrl
xor
out
dec
in
mov
push
push
loop
or
xor
outsb
jp
call
add
fidivl
push
pop
stos
mov
iret
in
lahf
pop
mov
pushf
cmp
mov
loop
aaa
or
stos
dec
lret
popf
pop
aaa
lods
int
into
rcl
adc
mov
sub
aad
jns
andb
xchg
jne
cmpl
std
scas
insl
pop
cmpsl
mov
jp
enter
cltd
scas
or
ret
jno
xchg
inc
adc
pop
bound
or
mov
scas
insl
jo
leave
push
shlb
push
or
jo
mov
out
outsb
and
or
push
aaa
aas
stos
out
int
repz
push
adc
or
ret
mov
inc
fwait
xchg
daa
xor
ss
cmc
xlat
sub
jae
push
rclb
lds
dec
imul
push
or
hlt
xchg
fs
push
sub
xchg
lea
mov
inc
cltd
jecxz
sbb
shrl
jns
jns
mov
inc
mov
jmp
pop
jne
call
sahf
mov
cmp
mov
dec
xchg
adc
sub
je
gs
js
mov
in
test
addr16
faddl
ljmp
pop
jns
push
test
jge
inc
fadd
sub
push
add
push
fldenv
jg
jns
add
cs
cmpsb
gs
jp
pop
and
push
jle
popf
repnz
dec
lret
xchg
add
xor
or
adc
idivl
cmp
stos
adcb
std
call
in
xor
arpl
adc
clc
movsl
test
push
loope
adc
pop
sbb
or
hlt
xchg
xorb
sub
mov
mov
sbb
fiadds
pushf
push
pusha
adc
cld
jg
mov
mov
cmp
push
out
in
sub
mov
sub
lods
jns
jp
add
mov
xor
jae
mov
add
xorl
dec
adc
inc
pushf
jbe
jo
ja
stos
sbbl
lods
mov
xchg
jp
movsb
shll
add
pusha
pop
xor
push
jo
es
pushf
pop
stos
insb
fisubl
in
xchg
clc
xchg
xchg
mov
das
xchg
and
xchg
adc
inc
mov
addl
mov
jns
mov
inc
pop
lock
sbbb
or
mov
adcb
sub
es
dec
xor
scas
jb
or
int
mov
repz
icebp
loope
sub
adc
fidivrl
sbb
iret
cld
test
jecxz
inc
test
push
int
dec
in
adc
mov
into
and
jno
dec
sub
les
sbb
in
push
cmpsb
ret
repz
fisubs
xor
or
loop
fucom
icebp
push
aaa
dec
js
pop
lret
decb
shlb
andl
lcall
testl
xchg
fimull
push
adcb
or
xor
jg
fwait
cmpsb
jns
out
gs
sub
out
nop
movsl
js
scas
inc
clc
ja
xchg
adc
iret
cmp
xor
mov
imul
mov
pop
dec
add
inc
mov
bound
rcrb
pushf
in
push
push
push
push
sub
pop
call
xchg
add
pop
jo
adc
lock
pushf
test
pop
aad
cmp
inc
call
xlat
sti
aaa
lea
and
dec
jge
in
ja
cmp
add
add
ljmp
subb
repz
xchg
inc
pop
jae
imul
lods
xchg
cmp
leave
push
rolb
add
dec
outsl
les
imul
ficompl
push
xchg
lret
subb
bound
outsb
sarb
sub
sub
mov
sahf
in
nop
scas
adcl
jp
mov
rorl
cmc
out
shll
outsl
or
sub
sbb
push
mov
cli
pop
mov
lock
mov
mov
fucomip
insb
and
xor
popf
xchg
xchg
xchg
mov
mov
xor
jnp
aam
pop
pop
addr16
jne
shll
mov
and
mov
fcmovu
stos
jecxz
icebp
stos
xchg
pop
lods
idivb
cmp
jb
test
imul
scas
lods
testb
cmp
enter
test
add
add
psllq
cmp
push
lcall
fists
pop
jne
xlat
mov
cltd
cmc
in
fs
pop
testl
push
mov
repnz
adc
loop
sbb
loop
xlat
cmp
jbe
or
cmpsl
pop
or
shrl
xor
push
out
dec
aad
cld
xlat
or
and
dec
jg
stos
xchg
xchg
add
ja
enter
adc
mov
mov
xchg
imull
stos
xchg
fstl
movsl
scas
xchg
push
adc
out
repz
pop
dec
adc
dec
int3
sbbl
in
movsl
ljmp
daa
push
mov
mov
adc
pop
lods
mov
mov
add
push
std
sbb
sbb
or
mov
mov
rcrb
inc
bound
mov
xchg
pop
ret
popa
cmp
cld
or
adc
movsb
xor
clc
adc
sarb
add
mov
call
xchg
in
fwait
shll
ret
xchg
mov
les
ret
xchg
lock
call
test
addl
xchg
pushf
int
mov
inc
insl
lds
mov
mov
nop
add
test
push
sbb
jno
mov
lock
jb
addl
cmp
sub
repz
inc
dec
and
jne
adc
push
imul
ljmp
sti
and
das
fstpt
movsl
pop
jge
andl
jmp
adcb
daa
imul
dec
cmc
xor
popf
int3
mov
dec
pop
cwtl
fs
lcall
mov
sbbl
xchg
icebp
cmp
adc
out
scas
inc
jne
and
inc
pusha
clc
inc
cmp
cmp
dec
hlt
pop
mov
inc
pop
hlt
jns
cli
pop
jne
add
fldl
or
sbb
rorb
popa
fstp
out
sub
ss
mov
int3
or
scas
sbb
mov
iret
cltd
sub
idivb
lea
jmp
jmp
or
mov
test
hlt
mov
xchg
sub
lret
int3
enter
inc
push
loope
movsl
call
int
inc
popf
adc
add
ret
add
cmp
push
imul
mov
loopne
lret
pop
pop
jae
mov
xorl
mov
shrb
push
inc
mov
mov
cmp
out
xchg
stos
add
sbb
int
jp
xchg
push
cmp
sbb
xor
imul
and
sub
aad
imul
roll
xchg
sub
add
mov
push
jp
mov
xor
pop
pusha
insl
dec
leave
fiadds
mov
mov
ss
inc
sti
dec
lret
fisttpl
mov
leave
fidivrl
ficompl
int3
xchg
mov
outsb
dec
addl
test
push
xchg
push
pop
dec
mov
jae
loope
in
add
adc
jp
xor
pushf
nop
test
into
dec
lock
mov
or
mov
lds
sub
aaa
cmp
or
arpl
stos
repz
dec
cmpb
fs
or
cwtl
mov
or
out
jl
push
test
stc
test
inc
adc
xchg
lahf
mov
cmp
in
push
in
rcr
je
mov
adcb
mov
lods
push
cld
jnp
enter
jge
mov
mov
push
mov
pop
lcall
out
xchg
int
in
ret
cmp
jecxz
movsl
shll
xorb
call
ficompl
add
xor
lahf
fst
jecxz
scas
out
xchg
fcmovu
add
repz
fldenv
rcll
sbb
mov
push
mov
xchg
inc
lods
mov
call
fcoms
xlat
push
aam
fldenv
xchg
sahf
cmp
pushf
mov
mov
adc
mov
adc
cld
mov
test
or
fcmovbe
jle
mov
inc
mov
jo
out
pop
sti
or
push
or
sahf
enter
arpl
stos
fnstsw
mov
adc
out
xor
fwait
or
dec
pop
cmpb
aaa
pop
add
push
addb
mov
or
shrb
js
pop
lock
and
push
lds
int
xchg
sbb
xlat
pop
out
fnstsw
add
pop
push
jmp
cwtl
icebp
mov
mov
fwait
xchg
aaa
data16
int3
jbe
and
mov
in
or
in
xor
fwait
cmp
and
jge
xor
mov
or
mov
test
push
daa
pop
sbb
in
adc
jno
movb
sub
mov
inc
enter
sub
insl
adc
addr16
pop
sahf
ret
test
xchg
mov
test
lock
jecxz
pop
fmul
dec
popf
mov
xchg
lds
rorb
inc
jo
add
lret
outsb
jae
fsubrl
push
jae
jle
dec
test
xchg
inc
std
inc
sub
jp
data16
dec
rcr
xchg
scas
aad
aam
cmp
pushf
loope
adc
xor
daa
ret
popa
or
dec
adc
push
adc
inc
mov
mov
adcb
inc
cs
mov
clc
fimuls
adcb
ret
imulb
test
shrl
test
shll
pop
repnz
shrl
std
xor
fwait
dec
xchg
xchg
mov
movsb
dec
jno
pop
push
push
xor
cmp
sbb
push
jl
jns
ss
decl
shrb
in
pop
mov
inc
fldl
je
mov
vpcmpgtb
jbe
aas
ja
add
pop
or
inc
adc
lret
pushf
jae
jecxz
jae
repz
imul
xchg
push
pop
fsubp
dec
rcrl
jo
ja
arpl
xchg
aaa
les
sub
adc
clc
jbe
or
sti
xor
ficompl
sti
scas
lock
and
jg
pop
negl
xchg
enter
or
test
testl
inc
mov
xchg
sbb
push
movsb
sbb
ret
dec
pop
inc
pop
inc
jl
lahf
add
or
jmp
push
out
xchg
mov
lods
xor
mov
cmc
enter
jle
push
les
ja
mov
ret
adc
out
cmp
mov
dec
fidivs
movsl
and
lods
rcrb
inc
das
push
repz
es
leave
cmp
or
fs
xchg
dec
std
bound
adc
aad
xor
cmp
add
mov
in
insl
arpl
push
fnsave
fwait
dec
loop
dec
or
mov
pushf
imul
xchg
dec
add
popf
add
or
aas
rorl
filds
fwait
jb
mov
or
push
fistl
cmp
push
push
scas
dec
jnp
xchg
or
mov
sbb
pop
jecxz
lods
out
sub
jmp
fidivl
inc
dec
mov
loope
cmp
sub
mov
imul
sarl
push
rorb
clc
mov
add
pop
xor
push
xor
stos
and
mov
mov
pop
inc
push
or
loop
fildll
jns
lahf
daa
xchg
int3
ret
pop
cmp
xchg
jmp
lret
int3
mov
dec
loop
pop
cmpl
sbb
idiv
inc
and
mov
outsb
fnstenv
cmpsb
movsb
fcmovbe
and
hlt
sbb
insl
adc
daa
jbe
cli
jge
loop
shlb
shr
rcrb
bound
xchg
test
ljmp
pop
je
hlt
dec
dec
ret
aam
lods
push
mov
or
loop
mov
push
add
ds
out
sub
cs
aad
push
jb
xchg
in
pop
sub
je
mov
out
add
inc
movsl
mov
scas
mov
sub
mov
sbb
xor
xchg
xchg
mov
sbb
push
std
or
jg
cmp
push
rep
nop
cmp
addb
xor
dec
fildll
sbb
and
or
or
out
and
scas
xchg
add
mov
std
movsl
fidivrs
pushf
insb
mov
push
clc
faddp
hlt
sbb
pop
clc
pop
xor
repz
jne
dec
cmp
cmc
shll
adc
jae
push
test
movl
imul
xchg
jecxz
fcompl
mov
lods
cmpsb
and
and
mov
in
fcomps
adc
cmc
mov
jecxz
daa
arpl
or
sub
das
cmp
dec
mov
cmc
dec
popa
dec
sbb
ja
arpl
mov
pop
jae
aad
test
andl
andb
mov
sbb
movsb
cmp
fbstp
imul
divl
add
pop
in
nop
decl
pop
in
pop
testb
dec
icebp
hlt
mov
lret
icebp
repnz
sbb
enter
lock
test
icebp
cmpsb
shlb
xchg
hlt
dec
mov
adc
call
mov
lahf
cld
push
pop
movsb
andb
push
fwait
inc
pop
dec
inc
movsb
inc
mov
or
setae
add
test
fcomps
sub
inc
shll
hlt
ret
in
mov
test
roll
add
mov
adc
sti
jno
xchg
pop
push
sbb
lea
test
lret
push
sub
mov
std
jno
push
pop
jge
or
ja
xchg
sti
inc
lret
inc
mov
push
aam
in
xor
or
pop
mov
cmp
adc
inc
ret
movsb
dec
std
sub
mov
scas
outsb
sbb
arpl
repz
mov
jl
gs
pop
sub
clc
sbb
cmp
leave
pop
in
test
nop
ljmp
das
pop
adc
xchg
notb
mov
ret
shlb
lods
add
pop
pop
or
or
notl
jle
test
xor
cmp
pop
sar
xchg
pop
jne
mov
add
addr16
dec
pop
add
rorb
fcomp
add
xchg
pop
mov
pop
aaa
jb
sbb
ja
adc
pop
in
mov
imul
pop
push
xchg
adc
sbb
cmp
cmp
pop
cwtl
hlt
sub
incb
dec
lea
push
jo
jmp
les
aad
add
mov
or
xlat
inc
xlat
jae
scas
push
add
push
jne
lcall
push
inc
shrb
sbbl
or
cmp
data16
in
fisttpl
xchg
mov
sarl
fldenv
outsl
repz
call
es
in
push
add
xor
mov
lret
les
sarl
xor
cmp
add
aad
rcrl
add
aam
in
pop
mov
jae
movb
xchg
rorb
cmp
pop
loopne
daa
out
pop
and
adc
shl
pop
jns
and
scas
sar
adc
call
mov
mov
jecxz
pop
popa
pop
sti
or
leave
mov
loop
jns
cwtl
xchg
push
push
sahf
aaa
sbb
dec
inc
aam
clc
cmpsl
dec
iret
aaa
cltd
jp
pop
ljmp
add
fistpll
push
stc
lcall
pop
mov
adc
xchg
push
fistpl
andnps
cmc
cmc
mov
in
outsb
mov
dec
ret
inc
cmp
out
ret
and
loope
pop
sbb
adc
pushf
mov
pop
in
mov
cmpsl
mov
or
push
imul
jno
icebp
pop
add
lret
stos
or
js
xchg
loopne
ret
xlat
mov
cld
xchg
inc
mov
xlat
scas
iret
mov
cmp
xor
mov
push
jo
cld
lahf
push
stc
out
fimuls
aas
xchg
mov
imul
cmp
jbe
or
stos
and
ficompl
add
jbe
sbb
push
enter
fwait
hlt
call
fcomps
xchg
jbe
jnp
add
cmp
jae
add
jmp
mov
xchg
and
xchg
cmc
mov
sti
or
jmp
gs
or
dec
mov
mov
adc
xchg
pushf
cmp
and
inc
cs
daa
jbe
pop
sbb
and
adc
push
and
lods
sti
cmp
xchg
and
add
outsl
mov
push
inc
iret
cltd
xchg
cltd
pop
emms
mov
cmpb
jl
int
pop
lret
jecxz
or
push
xor
pop
sub
cwtl
jecxz
std
lods
mov
leave
adc
sbb
insl
call
lods
in
push
inc
cmp
hlt
push
mov
aas
lret
jl
inc
adc
or
lahf
jmp
pop
mov
std
xchg
out
jae
bswap
scas
fildll
int
add
jl
or
in
jl
mov
loope
mov
adc
das
js
test
jp
pop
pop
negb
adc
mov
xor
lret
imul
aam
adc
xchg
mov
cmp
lods
cmp
out
lcall
adc
pushw
rorb
loop
std
clc
popf
jno
pop
lds
stc
mov
pop
pop
sbb
sarb
inc
mov
push
cltd
in
test
sub
lcall
cli
add
lret
jnp
push
aas
cld
enter
cmpsl
adc
pop
sahf
pop
xchg
aaa
mov
or
jge
lahf
cmp
pop
and
add
shrl
mov
xchg
jae
stos
out
xor
cmp
push
popf
in
push
mov
mov
cmp
sbb
adc
popf
out
xor
sbb
and
mov
mov
jecxz
std
pop
or
add
out
xchg
mov
xor
cmpsl
mov
xchg
push
ds
sbb
adc
mov
dec
dec
test
test
stos
add
fistl
adc
out
or
xor
mov
enter
mov
jbe
push
push
outsl
das
mov
dec
je
sub
data16
add
sbb
cmpsb
scas
aaa
cmpsb
aam
add
mov
ljmp
sub
jne
push
dec
lods
sbb
lods
iret
adc
jno
js
loopne
jmp
ss
sahf
lods
adc
push
xlat
movsb
fstpl
imul
popa
idiv
mov
pusha
jne
les
jne
iret
xor
dec
mov
std
pop
lods
xchg
or
push
push
out
decl
cmpsl
inc
pop
mov
mov
jmp
int3
xor
cmpsl
bound
jl
push
fs
add
nop
mov
ja
dec
dec
inc
iret
adc
pop
ficompl
insl
add
jle
jle
pop
add
xor
stc
add
test
mov
push
jb
test
outsl
pushf
adc
sub
insl
mov
xchg
pushf
aam
and
jecxz
jno
jno
or
push
shrl
imul
inc
fwait
mov
and
pop
sub
lret
sbb
rcrb
dec
movsl
sub
sbb
push
cld
into
push
lds
adc
in
mov
out
or
js
pop
jbe
sahf
leave
sub
scas
xchg
int3
lcall
testl
jbe
add
add
push
cmc
lods
scas
mov
push
sbb
aad
dec
loop
icebp
xlat
scas
loope
adc
and
add
fucomip
add
mov
insl
sbb
add
and
fwait
addl
and
rcr
shll
ja
mov
xchg
mov
mov
rclb
mov
and
imul
pop
jg
stos
or
mov
lcall
je
mov
fisubs
pop
mov
adcl
bound
pop
or
mov
fistps
xchg
data16
xchg
pop
jp
push
and
add
cmc
addr16
dec
dec
push
movsb
add
pop
loopne
dec
imul
jb
push
sbb
cli
hlt
scas
xor
popa
jl
ljmp
xlat
arpl
adc
pop
je
rcrl
imul
xchg
inc
test
cmp
lcall
add
movsb
mov
pop
inc
sub
es
mov
test
imul
pop
lods
xor
popa
and
or
popa
push
jno
out
bound
int
loopne
pushf
scas
adc
push
and
mov
dec
push
leave
jl
lock
mov
pop
sbb
or
jl
movsb
or
pop
xor
and
xlat
shrb
ss
and
aas
cwtl
adc
inc
pop
xlat
or
and
and
adc
jb
imul
ljmp
sti
sbb
or
cmp
cwtl
dec
rcrb
test
push
aas
not
test
std
cmp
inc
pop
fisubl
mov
xchg
jnp
mov
adc
add
xchg
loop
movsb
loopne
mov
sar
xchg
mov
mov
jae
orl
xchg
not
or
mov
pop
dec
xor
sub
jnp
in
push
aas
jmp
mov
lods
shl
cltd
sbb
lret
out
sub
xchg
ljmp
sbb
das
xchg
push
mov
es
ret
add
mov
mov
bound
mov
fnsave
data16
xor
pop
xchg
ret
jae
test
cmp
mov
add
push
jae
iret
mov
ds
clc
cld
sbb
lock
mov
mov
out
adc
or
or
mov
dec
shrb
scas
jmp
in
mov
xchg
push
add
ljmp
lock
in
and
js
and
insl
mov
jle
or
mov
in
jnp
lea
or
jl
aad
scas
and
in
test
sbb
cmp
jp
inc
sub
xchg
pop
xchg
lsl
add
pop
pusha
pop
mov
dec
loop
mov
fnstenv
xor
es
fisubrs
and
cmpsl
rolb
dec
pop
pop
mov
and
push
mov
bound
je
rorb
enter
cwtl
pop
and
jp
aam
mov
jae
push
push
aad
loopne
push
frndint
push
sub
or
and
out
cmpsl
ja
sub
dec
cmpsl
cmc
mov
mov
dec
pop
push
pop
outsb
ffreep
hlt
pop
dec
fistps
lds
andl
in
cmp
pop
fisubs
sbb
or
movsb
mov
jne
mov
push
mov
push
mov
clc
ljmp
fists
dec
sti
mov
leave
dec
cmp
mov
lret
adc
mov
jg
nop
jnp
mov
mov
gs
gs
sub
in
addr16
xor
pop
lods
sub
sbb
mov
adc
add
sub
inc
scas
pop
popf
imul
shlb
rcr
cmc
jge,pn
lcall
push
shrw
add
test
cmp
test
mov
out
jge
pop
je
repnz
pop
push
adc
adc
add
push
bound
lcall
dec
pop
add
jnp
mov
outsb
enter
add
push
mov
lock
xchg
jb
mov
sub
mov
pop
cwtl
int
cltd
jle
push
rcr
jg,pt
cmp
je
push
mov
add
test
pop
out
jae
sbb
lods
cmp
in
stos
cs
sti
daa
sahf
sti
es
and
test
mov
scas
ret
test
int3
hlt
sahf
cmp
loope
mov
in
lods
movsb
or
push
dec
es
jo
loop
cltd
sbb
mov
jle
add
fs
jmp
cs
pop
mov
mov
enter
lret
mov
sbb
hlt
jnp
adc
test
imul
div
clc
mov
jne
dec
ficompl
push
sti
jp
ja
push
mov
lcall
cwtl
inc
mov
int
popa
shrd
inc
push
cwtl
sahf
dec
or
sub
add
movsb
loope
adc
idiv
push
mov
in
imul
aad
sub
rcrl
stos
subl
fsubrs
push
js
adc
mov
clc
inc
fwait
lods
cwtl
lods
xor
aaa
mov
fbstp
xchg
pop
nop
jbe
dec
loop
sub
ljmp
mov
pop
scas
inc
sub
dec
jae
cmpsl
shll
lods
cmpsb
push
outsb
cwtl
adc
pop
jecxz
mov
xor
push
inc
out
jg
test
data16
mov
or
cltd
pop
jl
dec
xchg
adc
sub
dec
add
andl
xchg
ljmp
dec
push
into
push
movsb
xchg
mov
and
jl
enter
lahf
and
or
das
and
sub
dec
orl
cli
mov
jg
sbb
xchg
repz
cltd
mov
xorb
adcb
mov
fnstcw
dec
push
ficomps
add
mov
pop
jo
arpl
cmp
loopne
dec
cltd
out
sbb
xor
popf
xlat
cmp
arpl
cmp
daa
je
fs
and
or
cmp
int
test
sub
xchg
xor
movsb
mov
lods
std
add
jb
mov
inc
mov
push
js
enter
mov
jecxz
inc
fidivl
xor
mov
lods
js
xor
mov
cmp
push
mov
cwtl
adc
jae
cltd
sub
int
dec
mov
fs
rcr
imul
lods
dec
into
mov
push
pop
xchg
js
scas
dec
scas
insb
cmp
mov
lods
es
mov
pop
or
mov
push
cmp
and
push
mov
pop
mov
pop
inc
cmpsl
fisubl
and
data16
dec
in
cltd
sbb
in
movb
nop
jmp
sbb
pushf
xchg
cmc
insb
and
mov
out
add
cmc
add
insl
es
cld
jo
mov
jae
arpl
cltd
mov
jnp
inc
inc
imul
push
or
into
and
stos
decb
inc
jmp
add
decl
and
xchg
push
lock
shll
subl
gs
mov
sarb
int
inc
movsl
aas
add
mov
pop
fwait
loope
sub
and
inc
lock
lcall
in
xor
mov
movsb
ss
mov
jecxz
pop
and
nop
test
sbb
pop
sbbb
pop
out
add
jb
fwait
insb
pop
imul
out
dec
sbb
mov
push
jnp
or
jnp
es
add
jns
popl
mov
out
mov
pop
scas
xor
out
mov
arpl
mov
pop
ret
push
scas
stos
or
xor
or
outsl
or
xchg
inc
je
lds
jmp
lret
add
mov
mov
daa
dec
les
call
jne
lods
aad
aad
ror
into
mov
repnz
out
sti
jae
push
lods
inc
fisubrs
inc
js
pop
pop
add
xor
mov
jl
ds
xchg
fcmovnu
ffree
popa
jno
stos
out
std
push
or
mov
pop
out
je
dec
out
stos
or
out
gs
mov
xor
inc
rolb
xchg
shl
adc
push
sbb
mov
hlt
mov
sbb
lods
test
mov
add
dec
movsl
jmp
jae
pop
mov
in
xor
shll
sub
jne
dec
icebp
push
dec
xor
fmuls
lahf
dec
add
dec
pop
mov
mov
or
out
dec
adc
insb
repz
jno
sbb
filds
xor
loopne
push
xchg
adc
popa
jo
xlat
clc
inc
test
mov
push
push
or
mov
push
pop
adc
mov
inc
sub
jo
mov
xchg
rcrl
mov
mov
or
shll
push
pop
or
sub
xchg
pop
xor
push
mov
negl
idiv
sub
out
jbe
push
data16
fwait
mov
sub
lea
test
jl
jge
cmpsb
fwait
or
or
scas
out
mov
adc
inc
subb
or
subl
imul
pop
jmp
das
inc
nop
div
dec
ret
aam
repnz
dec
or
push
cmp
sahf
call
mov
dec
in
shlb
jp
xchg
mov
dec
xchg
popf
mov
sub
xchg
push
inc
jl
or
in
pop
fcomp
jns
loopne
push
cmc
cmp
cmpsb
and
xchg
lret
fcomip
jmp
in
and
jecxz
je
cmp
jbe,pt
aas
inc
push
es
push
cmpsl
add
mov
mov
jecxz
mov
add
aas
in
lods
pop
push
push
jmp
test
imul
cmp
lock
mov
mov
xor
mov
ja
andl
adc
cmpsl
scas
daa
jmp
insb
std
popf
aas
add
inc
sub
sbbl
xor
mov
ret
sahf
fimull
mov
add
cmpsl
pop
cwtl
aas
lcall
lods
ret
dec
nop
into
jge
jns
rorb
shlb
push
push
and
inc
cmpsl
mov
add
aad
and
mov
and
ficompl
icebp
cmp
xor
imul
fisubl
icebp
sbb
jno
fists
inc
jnp
fidivrl
or
scas
and
out
call
mov
out
subl
pop
ja
sub
sbb
push
cmp
mov
jp
xchg
movsl
cmp
push
inc
mov
pop
stos
xchg
fildl
xor
stos
jae
mov
sbb
fnstcw
add
xor
xor
xchg
jg
mov
scas
and
lea
loope
in
loope
mov
std
sub
loope
nop
pop
add
fbstp
sbb
xchg
and
lods
inc
mov
jns
xchg
rdpmc
xor
adc
dec
xchg
xchg
xor
lea
inc
inc
and
insb
cmp
pop
dec
push
xor
outsb
mul
mov
sbb
outsl
cwtl
std
out
imul
sub
das
adcb
shll
fiaddl
test
xchg
or
lret
mov
cmp
les
or
xor
scas
inc
xor
lock
subl
cmp
and
test
xchg
repz
mov
dec
std
cmc
stc
lret
push
lcall
and
sub
jle
in
jp
insb
inc
arpl
gs
jns
lock
scas
xor
xor
cmp
shrb
add
aaa
inc
mov
and
push
in
sbb
fidivrs
clc
pop
pop
std
int
dec
ss
add
testb
mov
add
push
clc
scas
cmovo
call
dec
push
cmp
pushf
xor
inc
or
xchg
mov
mov
int
addr16
jo
or
mov
stos
jo
jb
add
rcrl
test
aad
daa
ret
inc
je
sti
lahf
clc
out
ret
mov
jp
and
pop
repz
roll
std
xor
arpl
inc
pop
in
out
push
adc
cmpb
popf
lcall
pop
adc
lcall
shrl
push
and
imul
fidivs
jge
cmp
pop
sbb
pushf
stc
ja
in
imul
push
dec
dec
orl
cmp
into
adc
scas
mov
movsb
mov
xlat
ret
sahf
outsl
dec
jge
pop
pop
in
dec
push
fisttpl
jnp,pn
mov
out
dec
xor
dec
xor
xchg
and
push
dec
push
ja
push
sbb
sub
data16
cmp
jecxz
jmp
mov
pop
imul
subb
iret
pop
iret
enter
sbb
fsubs
outsb
scas
mov
or
xchg
aaa
pop
adc
daa
ljmp
pop
into
sub
or
popf
mov
xor
mov
mov
jns
adc
add
xchg
sbb
add
xchg
jmp
jb
mov
mov
stos
mov
add
data16
inc
out
sub
jle
aam
int
aas
shl
ret
jmp
test
push
sub
add
and
mov
sti
mov
cs
push
adc
xchg
mov
in
test
inc
in
imul
pop
inc
lds
inc
or
daa
out
mov
out
fbstp
stc
les
shlb
xorb
ljmp
fildll
mov
jp
mov
or
mov
pop
jne
xchg
mov
adc
loope
cltd
das
mov
xlat
lock
imulb
mov
adc
cmp
add
out
cld
sbb
dec
ja
sbb
ficoms
push
gs
test
addl
or
inc
adc
loopne
dec
jl
add
pop
pusha
lods
test
cmp
outsl
es
outsb
cld
inc
int3
xchg
pop
push
xor
fcmovne
outsb
cmc
xchg
pop
mov
cs
inc
fistpll
iret
mov
add
jge
testl
jae
lods
cmp
jecxz
mov
imul
iret
lret
jno
cmp
repnz
mov
pop
or
push
or
gs
jne
sub
ret
iret
jp
mov
xchg
jge
int
fldcw
clc
repz
pop
mov
aaa
sub
xlat
fwait
jle
dec
in
jg
sti
sti
xor
push
in
sbb
daa
cwtl
js
sub
xor
mov
dec
mov
iret
cwtl
sti
xor
or
jno
inc
adc
dec
shr
addr16
sarl
aam
lods
mov
cmpsl
xor
dec
stos
pop
fsubl
enter
out
cmpsb
rcrb
popw
inc
daa
and
dec
mov
je
pop
pavgb
out
inc
and
cmc
enter
xchg
bound
lret
mov
lret
nop
mov
or
ret
pop
fisubrl
add
jo
mov
imul
dec
xor
jle
inc
add
sti
mov
push
or
inc
pop
or
ss
std
pop
stos
addr16
inc
and
pusha
not
xor
scas
fdivrs
adc
sbb
jne
push
int
push
jnp
lret
inc
adc
lcall
les
mov
or
repnz
mov
lret
out
bound
mov
jg
imul
push
out
js
mov
fnstenv
xchg
outsl
enter
inc
cmpsb
mov
test
and
add
xchg
lret
ret
in
in
xor
xlat
dec
test
sbb
out
pop
daa
push
xchg
pop
xor
sub
sbb
xor
xchg
stos
inc
outsl
dec
or
sub
lahf
call
mov
add
in
mov
mulb
cmpb
cmp
ret
mov
lods
add
stos
out
dec
or
and
cltd
in
push
xchg
lock
adc
lods
xchg
addr16
push
cmp
aam
xchg
in
xor
mov
je
inc
and
push
rorb
inc
stos
xchg
not
mov
sbb
xor
dec
mov
pop
lahf
cli
push
movl
jne
pop
popa
cld
push
push
jmp
popa
repnz
icebp
fbstp
inc
dec
stos
mov
pop
xor
jmp
xchg
and
mov
push
mov
push
add
lods
inc
cmp
inc
andb
add
lock
adc
adc
and
cmp
cmc
pop
mov
pop
mov
mov
jno
xchg
loop
add
repnz
jp
xor
push
aaa
xor
sub
imul
lret
sahf
mov
rcrl
cld
cmp
es
pusha
jg
cld
mov
sub
hlt
pop
mov
ffreep
nop
xlat
nop
fmull
hlt
je
push
fidivrl
add
mov
in
repnz
push
mov
repz
xchg
hlt
jns
inc
xchg
rcrl
jmp
testl
sbb
call
xchg
lods
adc
nop
shl
sub
test
mov
pop
icebp
iret
cmc
dec
lock
push
out
pop
insl
inc
data16
dec
sub
pop
xchg
cli
cwtl
sbb
push
shl
push
aad
adcl
jl
stc
outsb
imul
bound
xchg
addb
pop
lds
mov
sahf
cld
xchg
sbb
inc
filds
rorl
push
imul
cwtl
std
lret
jns
xchg
jmp
xor
and
insl
jmp
push
outsb
push
inc
ljmp
rorl
mov
mov
or
and
jecxz
pop
pusha
dec
imul
or
popf
ja
jp
ljmp
push
sarb
ja
xchg
fs
sbb
push
inc
mov
iret
pop
jle
jb
cmpsl
mov
lcall
stc
xchg
xor
and
in
and
pop
jo
insb
into
sub
gs
and
aam
test
jecxz
sbb
adc
in
sbb
rcrb
sbb
mov
out
jo
jnp
fmuls
pop
ret
icebp
xor
mov
ret
imul
add
dec
lahf
je
jecxz
mov
sqrtps
sub
mov
xor
insb
pop
out
cmp
jmp
add
fidivl
jmp
add
and
ret
inc
mov
mov
push
jbe
jmp
data16
cmp
mov
nop
xchg
pusha
mov
lret
enter
call
or
cmp
xor
xchg
lods
or
xchg
repnz
sbb
mov
inc
and
roll
xor
cmp
and
jno
mov
mov
jae
lret
mov
mov
out
push
pop
cmpsl
ret
jne
mov
mov
cmp
and
sub
icebp
imul
push
cmp
addr16
mov
cli
scas
je
les
sbb
outsl
sahf
lret
jb
jnp
repz
out
mov
sub
lahf
ret
push
cwtl
loop
push
loope
outsl
jmp
mov
push
inc
imul
stos
out
sbb
and
gs
mov
add
ljmp
stc
fs
pop
lods
add
jb
cmpsb
mov
jle
pop
or
xchg
imul
repz
call
lds
or
inc
sarb
repnz
mov
rclb
enter
jle
aas
fnstsw
jno
fs
in
arpl
mov
cmc
mov
movsb
fsubr
cmp
test
into
jg
mov
push
aas
mov
fnstcw
add
pop
pop
in
lea
aad
push
adc
adc
sti
cmp
mov
fmuls
sbb
sub
es
push
in
sub
call
aad
mov
sti
rcrl
inc
jg
sub
scas
jne
mov
pop
lret
push
sbbb
insb
imul
mov
pop
cmp
outsl
sbb
shlb
adc
pop
xor
mov
lcall
shll
iret
or
pop
in
and
outsb
int3
insb
or
insb
cli
popa
bound
pushf
xor
gs
ljmp
adc
mov
sub
mov
sub
ja
fstpt
ret
cmpsb
cs
int
out
in
popa
les
mov
scas
arpl
mov
ret
movups
jae
das
sub
lahf
push
popf
or
testl
dec
shl
scas
cmp
add
add
ljmp
pop
mov
dec
lea
pop
rorl
out
cmp
pop
nop
push
jb
imul
adc
mov
out
xor
cmp
test
push
fcomps
or
jae
cltd
dec
inc
daa
inc
xchg
cwtl
sti
sti
sbbb
mov
jecxz
push
or
repz
mov
xchg
gs
es
popa
loop
sbb
pop
cwtl
mov
mov
ret
fdivrs
or
lret
sbb
pushf
push
sbb
dec
jl
js
cmp
lds
dec
sub
add
shl
push
fs
cmp
call
std
cmp
adc
mov
aam
fwait
push
cmp
les
imul
ja
into
fstpt
movsb
add
cmp
mov
cmp
add
maskmovq
divl
test
add
scas
xlat
iret
mov
lock
dec
sti
mov
fwait
stos
inc
mov
cmp
clc
sti
xor
xor
fistps
push
call
mov
in
xorb
xor
lds
sub
xlat
mov
pop
push
in
fdivrl
xchg
fidivs
test
es
lock
push
fwait
dec
scas
sahf
jo
pop
dec
push
stc
sbb
pop
and
outsl
mov
lret
cs
aad
out
stc
adc
jbe
add
pop
and
push
mov
jg
add
aaa
aad
pop
bound
inc
sbb
rorl
mov
sub
jmp
sarl
adc
xor
push
adc
push
ds
push
clc
push
aam
mov
iret
rorb
cmp
add
add
or
mov
aam
and
mov
mov
mov
addb
fsubrs
jno
xchg
dec
add
or
push
test
ljmp
push
dec
test
cwtl
push
movsl
add
insb
xlat
adc
shrl
shlb
mov
xor
into
rcll
test
fstps
in
ljmp
mov
rolb
jbe
mov
jno
lret
cwtl
in
sbb
push
fdivl
daa
xlat
cwtl
sbb
pop
in
pop
cmp
lahf
cld
mov
pusha
or
push
aas
loop
jae
rclb
ss
aad
jns
fbld
xchg
mov
cmp
cltd
mov
fldenv
mov
int3
icebp
sbb
pop
cmp
imul
out
adc
loop
mov
mov
mov
dec
dec
push
lock
imul
pop
out
ljmp
jmp
cmp
cmp
pop
xor
xorb
sbb
scas
ja
daa
mov
out
push
mov
or
sbb
xchg
sarb
jmp
pop
icebp
jg
das
out
fwait
adc
jnp
in
add
dec
cmp
es
push
stos
incl
jbe
nop
adc
xor
mov
test
ret
cmp
fists
cltd
std
sbb
mov
inc
cmp
mov
sar
fwait
lahf
and
stc
and
cmpsl
or
mov
mov
jmp
xchg
je
xor
push
popa
sub
out
popa
mov
mov
jne
xchg
gs
aas
leave
push
ror
negl
outsb
push
push
cmp
out
sbb
ds
cmp
push
pop
popf
cwtl
lret
imul
lcall
xchg
adc
stos
hlt
jb
pop
or
filds
sahf
stc
jecxz
loope
in
das
imul
imul
pop
test
ficompl
ja
mov
pop
xchg
push
push
scas
popa
addr16
jge
and
imul
jcxz
push
outsl
and
sub
or
out
enter
mov
into
rcll
imul
cmp
fwait
pop
cmp
cld
xor
mov
int3
push
dec
jnp
test
in
fldcw
sbb
lods
aad
pop
cli
sbb
add
inc
sbb
in
in
ljmp
push
das
fmuls
outsl
mov
dec
mov
popa
add
pop
dec
bnd
sbb
cmp
cmpl
cmp
sbb
jo
and
xchg
push
jb
xchg
xor
aam
loope
outsb
daa
popa
mov
push
ficoml
ret
add
or
lock
dec
fbstp
jbe
jns
subb
mov
fimuls
xchg
mov
dec
addl
xchg
sbb
rol
sbb
lock
mov
in
push
sahf
dec
jne
rcr
in
push
sub
insl
mov
inc
mov
mov
popa
das
inc
into
fidivrs
dec
inc
pop
stos
and
addl
int
add
dec
sahf
inc
out
sub
and
lods
push
stc
pop
loope
bound
xor
lods
jmp
or
ja
dec
push
add
mov
xor
push
mov
imul
or
repnz
add
mov
jae
in
xchg
mov
jp
scas
adc
pop
inc
divb
mov
fmull
lods
scas
shll
and
sbb
dec
movsl
pop
dec
mov
and
pop
lea
and
fstl
sub
jp
dec
jp
out
sarb
int3
lahf
in
jo
ficomps
mov
and
arpl
xchg
mov
cmp
mov
push
or
sub
out
adc
push
dec
stos
mov
xchg
jl
mov
mov
pop
push
inc
xchg
adc
push
rcr
movsl
cli
scas
clc
jbe
fnsave
and
xor
mov
sbb
out
inc
add
push
shrb
xor
iret
push
pop
mov
add
mov
in
cs
mov
sub
leave
movsb
cmp
xchg
inc
leave
or
push
clc
or
int3
dec
cmpsb
adc
out
imul
frstor
inc
or
mov
out
shll
add
ss
loop
je
pop
aaa
clc
dec
add
pop
adc
push
iret
test
imul
rolb
jecxz
cmp
fdivl
xchg
pop
sbb
cmp
cwtl
es
sub
out
or
inc
lock
adc
insl
dec
pop
adc
or
mov
ja
fstpt
pushf
push
dec
lret
push
mov
std
cmpsb
sub
cmp
pop
jo
mov
loopne
xchg
cld
mov
cmp
sar
les
cmp
jp
je
imul
cmp
add
push
rcrl
inc
popf
les
insl
or
mov
setb
mov
sub
cli
pop
out
addb
lds
rcrl
dec
fdivr
pusha
imul
sbb
pusha
cmp
dec
pusha
xchg
lcall
adc
sub
pusha
arpl
mov
mov
int
xor
repz
cmp
imul
xchg
inc
add
xchg
mov
in
cwtl
xor
bound
jae
jmp
xor
add
into
lret
dec
xchg
push
bound
data16
fisubs
and
or
int
cltd
cs
ljmp
mov
push
xor
js
cli
dec
lock
sti
iret
jle
mov
jns
pop
pop
in
outsl
aam
ja
xchg
jle
movsb
out
mov
insb
mov
pop
dec
cmpsl
or
xor
xor
mov
shrl
out
xor
add
repnz
xchg
jmp
sbb
adc
and
dec
pop
clc
cmp
add
bound
mov
sbb
cmp
hlt
add
mov
add
mov
and
jecxz
in
jmp
loop
enter
and
inc
inc
outsb
jno
out
int
loop
mov
insl
push
adc
sti
dec
scas
rcll
aaa
jns
or
jge
inc
clc
iret
addr16
popa
sti
or
xchg
mov
ljmp
rdtsc
sbb
mov
ja
imul
xchg
imul
nop
lret
daa
jecxz
inc
mov
in
fstl
xor
outsb
adc
cmp
jmp
or
adc
or
test
cmp
cld
sbb
loop
sub
dec
jo
fcoms
or
inc
outsl
xchg
loope
stos
or
lret
mov
test
xor
inc
inc
mov
add
shlb
loopne
jns
push
xor
movsl
call
adcl
sub
cwtl
sbb
fdivrs
scas
xor
jnp
subb
mov
imul
adc
sub
adc
jl
ja
shll
ja
mov
sti
setb
or
jb
pop
fstl
xchg
and
lcall
jae
insl
dec
int3
pop
pop
mov
fsub
cmp
jp
cmp
test
sbb
sub
mov
or
mov
int
pop
mov
dec
mov
xor
mov
cld
js
int3
or
iret
fldenv
mov
add
lret
leave
std
movsl
inc
ds
aad
mov
mov
ss
into
adc
dec
jmp
xchg
sbb
adc
dec
sti
dec
je
dec
inc
add
movsl
ds
fistps
cld
std
dec
cmpsb
mov
repz
lock
fs
xor
fnstenv
aas
cmp
lods
push
or
sub
out
dec
mov
mov
daa
lds
cmp
dec
mov
lea
xchg
jae
mov
dec
sub
sbb
rol
xchg
repnz
cmp
xchg
sbb
sti
mov
mov
outsb
pop
mov
mov
mov
xchg
cltd
push
push
and
jae
cmpl
fwait
jo
sarl
leave
cs
xchg
shll
sbb
add
xchg
mov
cltd
pop
les
movsb
and
imul
mov
addr16
adc
pop
pop
jp
insb
test
sti
xlat
cmp
addr16
clc
and
fwait
jae
jg
pusha
mov
xor
or
xor
lahf
mov
repnz
and
mov
xchg
repnz
popf
pushf
or
clc
insl
mov
enter
and
cld
jae
lret
mov
pop
movsl
inc
movsl
shlb
and
aas
das
movsb
push
add
jmp
fimuls
jbe
sub
repz
mov
leave
mov
rorl
sar
adc
xor
js
ficoms
jns
in
sub
ret
pop
add
dec
inc
int3
test
cmp
test
aam
xchg
xor
mov
inc
sbb
loopne
pushf
dec
addr16
mov
push
lret
cmc
add
and
pop
sarb
xor
dec
addr16
add
adc
ficompl
sub
and
aad
inc
addr16
push
jbe
sub
std
sub
inc
leave
dec
outsl
rcrb
xlat
sarl
dec
enter
incl
jg
mov
dec
icebp
js
adc
dec
push
out
int3
mov
mov
fistpl
popa
cmpsl
bound
inc
xor
bound
jns
movsb
xor
jno
push
into
out
das
loope
cld
cmpsl
lock
daa
repz
cmp
out
and
in
adc
bnd
ss
das
mov
xor
loope
nop
ds
adc
xchg
xorb
in
in
pop
cmpsb
ss
scas
in
out
andb
data16
push
movsl
in
jno
push
aas
pop
jbe
ds
je
lds
xor
sarl
std
adc
pop
cmp
dec
mov
scas
data16
mov
cli
stos
addl
xor
push
mov
jmp
pop
pusha
outsl
repnz
xlat
fcoms
inc
stos
jg
fwait
mov
dec
ror
sub
mov
imul
cwtl
mov
jle
inc
out
pop
outsl
shlb
mov
inc
xchg
lret
je
arpl
xchg
xchg
inc
fnstenv
xchg
xor
add
idivl
in
mov
mov
jb
ja
sbb
xlat
popa
rol
pop
imul
pop
leave
rolb
or
push
jne
popa
loope
xchg
add
jbe
stos
xchg
mov
insb
mov
xchg
pop
in
insb
or
pusha
mov
in
sub
mov
mov
addr16
or
jo
popa
mov
stos
add
out
xchg
aad
sub
push
sarb
fcompl
inc
cmpl
adc
push
cmp
sbb
mov
and
sub
mov
mov
shl
mov
fnstenv
or
adc
lret
xlat
cmc
mov
lods
mov
push
add
flds
xchg
mov
js
ret
mov
sbb
xor
inc
ja
pop
jns
adc
and
xchg
sahf
jp
movsl
lea
inc
sub
out
mov
jbe
or
cmp
mov
push
sbb
sbb
clc
mov
call
gs
sub
push
pop
mov
lods
pop
add
fistpll
xor
add
cmp
clc
out
in
lret
jge
mov
lods
clts
push
inc
pushf
fstps
idivb
xlat
push
dec
test
std
inc
lcall
dec
mov
sub
shr
inc
add
loopne
lods
ljmp
cmc
add
fistpll
leave
dec
stc
scas
mov
lods
cmp
mov
leave
mov
pop
incl
imul
mov
les
and
inc
lods
mov
jae
jp
inc
fs
das
and
xor
inc
mov
mov
lods
ror
fldenv
xchg
mov
or
pushf
jne
add
rolb
frstor
insb
insb
push
test
test
test
sbb
pop
dec
clc
in
pop
push
outsl
loope
movsb
sbb
inc
or
pop
decl
sbb
imul
jno
int3
adc
test
push
testb
mov
mov
adc
imul
enter
in
popl
mov
jmp
and
jnp
imulb
cmp
pop
add
inc
sub
inc
cmp
loop
aaa
cmp
pusha
add
pop
push
dec
jo
fildll
or
gs
shrb
mov
mov
insb
cmc
ret
xor
lret
cld
shl
xor
sbb
mov
sub
add
mov
xchg
mov
jl
push
lret
mov
cmpb
xor
lahf
repnz
ds
mov
rcl
in
mov
into
orl
nop
lret
imul
mov
gs
adc
push
mov
lret
fdivs
dec
call
push
subb
insb
mov
sub
iret
mov
jecxz
andb
aad
cwtl
dec
jmp
xor
and
and
xor
inc
shrl
push
or
ja
and
mov
pop
fsubr
xchg
mov
xlat
push
mov
into
loope
decl
mov
adc
jmp
frstor
dec
inc
mov
mov
inc
popf
xor
into
js
mov
lahf
into
int3
cmc
jle
sub
or
sub
xlat
das
sbb
iret
push
push
xor
gs
jle
aam
sbb
mov
in
lret
xchg
push
testl
lcall
test
test
lcall
arpl
pusha
adc
mov
hlt
mov
inc
sbb
movl
jb
cld
sub
push
jmp
pop
add
sbb
mov
fiadds
pop
jmp
or
xchg
jnp
loop
cltd
lods
push
push
lods
mov
mov
xor
sbb
test
push
push
repnz
jns
ja
mov
inc
or
cwtl
ss
nopl
or
dec
add
lret
insb
mov
popa
jb
cli
lods
fstl
adcl
andl
imul
unpcklps
test
cs
pop
mov
leave
add
push
int
cmp
dec
call
and
rclb
adc
push
sbb
sahf
jae
call
jl
imull
mov
jmp
inc
jmp
sahf
xchg
lret
xchg
xlat
push
scas
jb
lock
mov
outsl
jno
inc
in
stos
cmp
cmp
xchg
dec
outsb
clc
lret
xchg
outsb
in
add
jnp
cld
jle
xlat
shl
test
pop
xchg
js
outsl
test
jae
subl
lds
lods
or
sub
fcoms
cs
or
leave
jg
int
movsb
cltd
adc
mov
mov
mov
or
xor
lock
and
in
jae
imul
push
lcall
hlt
repz
jmp
stos
or
mov
cs
xchg
enter
in
xor
in
sub
lods
add
ljmp
sti
xor
sub
xchg
dec
and
dec
adc
mov
in
sbb
into
cmp
adc
pop
daa
dec
setae
hlt
into
outsl
pop
mov
test
push
sub
lahf
test
inc
bound
mov
lahf
test
scas
push
sub
in
loopne
adc
xor
mov
test
arpl
lock
xchg
fcmovb
inc
push
adc
mov
xchg
inc
fwait
sbb
test
mov
call
mov
dec
jge
cmc
jno
mov
mov
cmp
mov
dec
cmp
enter
jno
jg
iret
push
xchg
dec
mov
inc
lret
xor
jbe
xchg
pop
pop
mov
mov
outsl
cs
lret
sbb
mov
add
rcr
mov
arpl
rcrb
adc
push
jno
cltd
lret
out
scas
jmp
mov
insb
insl
popa
outsb
aaa
pop
out
add
mov
imul
add
aam
xchg
scas
ja
sahf
xor
xchg
cli
xchg
pop
mov
in
ds
aas
sub
cs
mov
or
push
push
subl
lret
ret
jne
cmp
arpl
stos
cmp
inc
test
sbb
xchg
loopne
cltd
je
ljmp
scas
ret
xor
xchg
lods
pop
cmp
ss
jge
xchg
mov
clc
ss
mov
nop
jno
imul
sarb
aas
sti
pushf
pop
push
je
ror
cwtl
push
add
and
jmp
int3
add
cld
push
mov
adc
test
mov
gs
fsubrl
fsubs
xor
loope
xor
addb
dec
sahf
nop
orl
adc
leave
or
scas
inc
adc
fisubrs
or
test
pop
dec
popa
test
add
lea
xor
inc
mull
xchg
sarb
scas
sbb
test
daa
dec
les
movsb
sub
push
jmp
sbb
pop
jo
aas
cmp
insl
aas
dec
dec
and
pmuludq
fidivrs
xlat
leave
sbb
mov
ja
mov
pop
inc
inc
hlt
std
mov
sub
mov
fstl
enter
lock
or
dec
jnp
fisttpl
int
popa
inc
roll
adc
repnz
dec
mov
into
div
fsubrs
push
mov
into
jne
lcall
cmp
loope
push
icebp
lods
cmp
mov
sub
and
mov
jecxz
pop
push
fidivrl
iret
adc
pop
push
gs
in
or
and
adc
mov
sbb
sub
imul
xor
mov
les
add
cli
cli
fldt
enter
and
fstl
pushf
fcmovb
cmp
lds
cltd
repz
add
jne
fsubp
sub
pop
or
xchg
cmp
cmp
rcrl
iret
outsb
call
cmc
call
scas
jp
adc
in
push
inc
js
xor
mov
incb
inc
cli
insb
pusha
mov
xor
mov
pop
test
mov
push
xor
mov
push
pop
imul
mov
adc
mov
mov
clc
add
sub
fcomip
enter
push
xchg
add
xchg
cmp
push
pop
aam
and
pop
dec
xchg
loopne
xchg
scas
aas
inc
add
ficoml
jp
sahf
cmp
sahf
xchg
enter
xor
lods
cs
cmpsl
push
inc
sub
mov
aam
jnp
cmp
cli
push
movsl
dec
lods
add
mov
inc
pop
jle
aam
clc
cli
lods
pushf
mov
sbb
cmpsl
push
or
xchg
rorb
inc
cmp
dec
fiadds
dec
repnz
fimull
xlat
xor
sbb
lret
das
or
cmp
push
push
inc
in
scas
dec
test
std
imul
pop
pop
movsb
cwtl
sarl
popf
clc
jno
push
sti
std
xchg
dec
or
xor
push
xor
jle
in
insb
fwait
cld
bound
adc
mov
ret
xor
mov
std
and
scas
iret
xorl
jge
fstpl
arpl
and
ljmp
pop
lock
call
inc
cmc
int
dec
andb
add
repnz
prefetch
pop
adc
test
sub
aas
push
sarb
cwtl
push
cmc
add
jnp
mov
push
mov
push
movsb
lret
iret
mov
push
sub
in
pop
shrl
pop
in
jle
mov
mov
mov
xchg
sbb
test
imul
sub
and
xchg
testl
addr16
ficomps
mov
sub
lods
scas
mov
outsb
sub
jo
imul
pusha
sub
adc
dec
sbb
push
mov
xchg
and
sbb
das
sub
out
sub
jbe
pop
push
aaa
xchg
in
mov
adc
cli
cmpsb
push
sbb
jae
lcall
lcall
xchg
inc
mov
aaa
loopne
or
jno
lods
pop
in
cmc
add
lret
ljmp
adc
fwait
or
into
pop
xchg
add
in
or
daa
in
pusha
or
sub
test
cmp
push
je
push
or
hlt
mov
aas
pop
fs
cmpsl
in
sahf
push
nop
xchg
mov
sub
mov
into
test
call
sub
testl
repnz
gs
scas
mov
pop
inc
fiadds
sti
xor
fiadds
jne
or
lret
sarl
lods
sub
adc
sarb
add
ljmp
jo
popa
aaa
aaa
sti
xchg
dec
outsb
adc
xchg
add
push
cld
repnz
repnz
jnp
int3
test
fs
mov
pop
inc
test
mov
xor
mov
or
inc
push
or
insl
ret
jbe
in
push
out
push
rcll
mov
push
sahf
iret
imul
dec
mov
mov
scas
xchg
pop
add
sbbl
cmp
mov
mov
sbb
out
lahf
mov
dec
mov
xor
test
xor
xchg
cltd
jmp
push
sub
insb
lret
adc
adc
cmc
adc
cmp
mov
push
xchg
xlat
test
test
mov
into
push
push
shlb
inc
mov
jne
mov
mov
xchg
test
hlt
sub
cs
cli
shrb
xor
mov
pop
test
push
roll
mov
clc
and
jp
rcrb
shr
repz
dec
cmpsl
add
sbb
push
sbb
adc
cltd
inc
sbb
jne
xor
lods
xchg
inc
xor
jmp
ror
push
sub
xor
xchg
pop
orb
ljmp
stc
jle
mov
outsb
cld
add
es
mov
int
fwait
cld
jae
arpl
aaa
mov
sub
int
loop
xchg
popf
xor
cmp
mov
pop
adc
mov
clc
push
jbe
clc
sbb
inc
push
stos
mov
sub
fst
add
cwtl
or
sti
sub
or
mov
negb
dec
mov
pop
int3
lock
lds
mov
pop
push
push
ret
sub
sub
nop
imul
push
imul
jecxz
rcl
mov
cmc
jmp
pop
dec
jo
ficompl
in
add
or
fwait
sbbb
dec
je
shlb
leave
jp
jle
pop
push
dec
add
cmpsl
sar
imul
pmulhuw
xchg
pushf
mov
call
and
and
xchg
jno
mov
mov
mov
pop
sbb
subb
jg
jge
scas
add
mov
jmp
incb
ljmp
scas
dec
add
gs
push
mov
jae
mov
push
push
xchg
sub
loopne
js
cmp
ret
movl
dec
std
mov
xor
mov
fnstenv
sub
loopne
les
dec
cmc
push
cs
adc
pop
aam
inc
lea
in
push
push
sbb
cld
mov
mov
push
dec
es
aam
mov
sahf
cmp
mov
addl
mov
iret
mov
push
adcb
and
popf
pop
adc
sbbl
cmp
cltd
fdivl
jb
adc
repz
mov
nop
lea
daa
int3
push
push
pushfw
mov
ss
jb
cli
dec
fnstcw
stc
imul
inc
test
std
sarb
adc
sbb
daa
pop
jne
lret
outsb
sti
lret
mov
xchg
xor
push
cmpsb
xchg
lret
ljmp
pop
add
add
dec
dec
jo
jbe
or
jae
movsl
xchg
in
cwtl
testl
ja
insb
scas
jl
push
sbb
sti
pop
jne
fbstp
pop
rolb
xchg
popf
or
sub
jl
cmp
or
rclb
fucom
or
outsb
jmp
fmuls
dec
and
push
xchg
aas
cmp
push
lods
adc
xchg
push
fs
jbe
sbb
jmp
fwait
insl
pop
push
scas
xor
call
fstpt
in
or
mov
dec
out
pop
and
dec
clc
fistpll
add
pop
inc
add
mov
sbb
test
inc
outsb
dec
leave
jg
mov
sbb
mov
xchg
ret
xchg
lds
cmp
cs
imul
inc
jnp
inc
ja
xor
lret
adc
adc
cmpsb
lods
xor
in
mov
cltd
call
fmuls
mov
clc
rclb
insb
cmc
ljmp
lds
push
or
mov
xchg
fwait
iret
out
jnp
outsb
pop
fs
fidivs
mov
cmp
push
mov
stc
cli
and
imul
push
sahf
addb
xchg
sub
addr16
mov
mov
push
in
jge
and
push
jae
ret
mov
inc
mov
cld
mov
inc
mov
movq
push
inc
jg
popf
mov
int3
inc
lret
mov
jmp
mov
sbb
inc
push
push
dec
cli
bound
xchg
jno
dec
fdivrs
sub
movsb
cli
add
cwtl
and
dec
mov
cmp
jne
push
mov
pop
jno
push
adc
mov
sbb
mov
xor
test
lods
test
subl
cmp
rcrl
add
roll
jae
cmc
cld
scas
sbb
jmp
leave
or
jmp
pushf
mov
jecxz
dec
mul
bound
jl
arpl
cs
adc
jno
mov
adc
stos
sbbb
xchg
inc
add
xchg
inc
mov
adc
or
lcall
cmp
out
mov
xchg
test
data16
loopne
mov
insl
add
pop
iret
jge
push
popf
int
jno
xchg
push
fst
incb
fwait
int3
outsl
int
mov
pop
adc
lahf
loope
xor
bound
mov
int3
mov
out
sub
push
mov
fptan
mov
ja
pusha
sar
adc
add
insl
dec
repnz
stos
dec
inc
aaa
xor
mov
push
mov
ds
cmp
scas
std
cmp
sub
enter
pop
enter
dec
mov
xchg
popa
mov
lds
outsl
mov
incb
or
lahf
jge
lahf
pusha
push
or
lds
xor
pushf
or
mov
ljmp
or
pop
and
cmpsb
and
ljmp
pop
divb
lods
rcr
arpl
pusha
mov
ss
movsl
pop
movb
cmpsb
xor
fiaddl
enter
pop
inc
std
ficomps
adc
adc
xor
loopne
out
inc
adc
sarl
subb
es
push
imul
jecxz
mov
pop
pop
add
std
sarb
sbb
rclb
push
xchg
sbb
pop
or
pop
and
push
sub
cs
cli
nop
sbb
mov
xchg
pop
aam
jmp
int3
adc
jl
test
jnp
sbb
fildll
add
enter
sbb
xchg
adcl
add
jl
loope
shlb
xchg
lock
in
push
push
sub
imul
mov
repz
sub
push
push
lods
loope
mov
std
pop
lds
sbbl
add
push
nop
cmp
divb
add
push
mov
pop
xor
pop
imul
xor
repnz
push
es
rcrl
repz
lock
dec
fisubs
xchg
insb
insb
jg
pop
cwtl
pop
outsb
or
mov
mov
idivb
lods
shrl
sub
pushf
xor
and
cs
mov
xchg
out
int3
sbbb
sub
jmp
icebp
ja
fwait
push
fwait
aaa
pop
inc
imul
sbb
lcall
data16
gs
xor
xchg
ret
data16
fnstcw
stos
jge
fbld
xor
sub
push
adc
mov
inc
adc
inc
pop
addr16
sti
sti
xor
scas
movsb
mov
add
pushf
pop
movsb
lea
int
mov
mov
mov
in
jge
rcr
push
test
mov
cld
and
and
clc
loopew
cmc
test
arpl
in
rcl
xchg
popa
push
add
cli
fiaddl
mov
rolb
ret
in
and
cmp
cs
mov
ret
jle
cltd
and
pop
mov
cmp
pop
pop
and
xchg
imul
or
popf
add
mov
inc
jnp
arpl
stos
out
cmp
popa
cmp
in
pushf
push
fdiv
mov
push
arpl
xor
pop
xor
stos
and
lret
inc
sub
fldpi
or
fwait
imul
adc
xchg
imul
stos
lds
mull
sub
fwait
push
loope
push
pop
sub
and
aam
ljmp
pop
sub
rcr
sbb
rol
mov
pop
xor
addb
inc
xor
inc
push
jl
inc
xchg
add
fwait
bound
ljmp
test
inc
mov
test
fs
int
push
ljmp
and
mov
leave
mov
addr16
sub
leave
lcall
ret
jae
insl
mov
mov
pop
xchg
dec
jmp
mov
jle
je
cli
dec
arpl
data16
pop
pop
out
fisubs
fnsave
mov
inc
jno
and
arpl
mov
mov
adc
adc
xchg
sti
sbb
cmp
clc
mov
add
mov
aad
inc
movsb
sub
adc
iret
andb
sbb
inc
outsl
out
dec
arpl
lds
xor
adc
inc
scas
ss
imul
dec
inc
or
dec
mov
add
add
imul
scas
mov
fwait
adc
decl
fucomip
pusha
inc
xchg
xchg
scas
jo
aam
test
pop
icebp
pop
mov
gs
icebp
and
sbb
test
jmp
push
mov
lret
imull
or
jb
negl
mov
test
in
sub
sbb
mov
xchg
test
mov
into
fstl
sahf
xor
xor
jne
mov
jnp
es
inc
cmpsl
and
int
mov
dec
ja,pn
add
push
cs
mov
es
sbb
orb
inc
pop
fs
push
mov
nop
or
or
xchg
setae
loop
cltd
dec
adc
pusha
pop
fidivrs
jmp
add
pop
outsb
outsl
scas
jmp
mov
sbb
imul
pop
cmp
aam
adcl
push
sbb
and
or
cmp
jnp
das
outsl
enter
mov
and
xor
orb
mov
pop
bound
fwait
in
pusha
fistpll
js
pop
test
push
adcb
or
push
cmp
dec
push
aaa
cld
adc
inc
mov
int3
aas
mov
out
pop
and
je
xor
or
cmc
sarl
xchg
fidivs
bound
mov
mov
pop
cmp
jne
or
aas
add
cld
and
inc
push
popa
out
jno
into
cmp
xor
cmc
lret
pop
add
jno
sub
mov
or
dec
pushf
aam
stos
cltd
in
jmp
in
add
addb
add
mov
push
jbe
jecxz
pop
sahf
jp
inc
ret
jle
gs
stc
inc
xchg
lds
leave
mov
xor
dec
add
cmp
sbb
xor
lea
frstor
fidivrl
xchg
ss
test
mov
or
mov
mov
jo
adc
lods
jecxz
add
scas
aam
pop
xor
addr16
sub
pushf
push
adc
dec
outsb
cmp
ret
sar
jmp
xchg
enter
xor
loop
fstps
jle
mov
pushf
xchg
loopne
call
repz
inc
inc
jne
std
cmpsl
xchg
test
xchg
sbb
je
movsb
sbb
pop
mov
rclb
adc
push
ss
out
mov
mov
in
mov
rorb
in
and
inc
scas
push
push
push
negb
test
cmp
inc
js
push
pop
mov
jl
dec
cmpsl
xor
mov
adc
xor
or
arpl
fmul
shll
lahf
cmpsb
stos
mov
call
mov
fiadds
enter
dec
jb
mov
adc
jp
ret
sahf
sbb
jp
mov
mov
mov
rol
xchg
mov
pop
mov
and
dec
mov
arpl
andb
enter
mov
fnstsw
dec
faddl
add
sbb
popf
repz
lds
push
mov
mov
fadds
cmpb
dec
jae
xor
bound
out
xchg
sub
sbb
push
in
call
push
aam
xchg
push
mov
jle
int
push
popf
ds
jmp
mov
das
fmul
fcom
inc
loopne
jbe
mov
push
push
inc
jp
sti
push
test
and
mov
mov
dec
or
notb
daa
push
pop
jb
adc
shl
mov
push
lret
ucomiss
mov
jbe
lods
and
cld
aas
mov
jge
scas
mov
add
push
push
shlb
ljmp
leave
jnp
xor
test
scas
mov
xor
sbb
leave
push
iret
lret
jns
sbb
xchg
mov
push
je
and
bound
lcall
int3
ja
daa
mov
dec
dec
scas
out
stos
push
hlt
dec
repz
ja
arpl
inc
ret
xchg
pop
jo
idiv
add
aas
popf
push
fistl
xchg
fs
js
dec
test
and
mov
jo
popf
into
dec
xlat
icebp
shlb
mov
xchg
mov
fidivrl
sbb
xlat
fdivr
or
lcall
js
push
adc
jmp
mov
cmc
mov
addr16
sbb
jg
jb
js
aad
cmc
sub
cmpsl
dec
pop
mov
dec
mov
push
ret
divl
fs
or
pop
inc
dec
rcrl
xchg
xchg
adc
loope
and
insl
or
pop
push
mov
pop
andl
out
das
ror
dec
scas
pop
xchg
jecxz
inc
inc
mov
lea
cmp
mov
push
push
mov
sub
loopne
bound
pop
xor
setg
leave
jo
into
stos
daa
outsb
lret
test
mov
adc
inc
cmp
notl
dec
sbb
dec
lods
jns
mov
jae
cmc
gs
imul
stos
xchg
adc
insb
push
push
mov
mov
mov
negl
fs
gs
xlat
xor
rolb
ficoms
loop
or
mov
imul
jge
in
xor
fimull
mov
sub
push
adc
daa
scas
or
xor
insl
lock
xchg
or
mov
bound
pop
les
test
jne
sbb
cmp
jge
hlt
xchg
addr16
jl
push
sbb
jb
sbb
daa
outsb
lea
in
bound
aad
ljmp
call
iret
add
pop
xor
out
add
les
cmp
push
lret
int3
sti
fucom
fdivr
mov
push
sub
leave
xchg
mov
xchg
insb
pop
movsb
out
loop
mov
sbbl
fistl
mull
sbbb
mulb
mov
out
outsl
sbb
sbb
js
and
jb
jno
cmp
xchg
adc
es
out
sub
mov
add
push
stc
loopne
sbbl
mov
inc
lds
test
test
mov
iret
aaa
rolb
push
scas
mov
xor
loope
dec
inc
sub
data16
jns
cld
xchg
or
in
mov
jg
fildll
xor
inc
sbb
sahf
fs
out
loopne
inc
insl
aas
fsub
mov
lock
rclb
push
aam
arpl
and
pop
mov
jno
std
inc
ljmp
test
pushf
pop
dec
and
push
idivb
js
out
lret
mov
daa
adc
cwtl
mov
fisubrs
stc
pop
scas
int
outsl
dec
mov
push
jg
mov
aas
add
mov
icebp
repnz
sub
push
inc
xor
xor
xor
adc
and
les
and
lret
rcrl
inc
rorb
adc
jae
jne
xor
cmpsb
and
imul
decl
popa
and
pop
int
iret
jns
int3
fstl
cwtl
mov
mov
subb
xchg
cmp
and
cmp
jbe
sub
xchg
ficoml
imul
xor
testl
xchg
pop
pop
jmp
addr16
jmp
jns
xchg
inc
push
push
mov
mov
inc
and
icebp
adc
lods
lahf
pop
dec
cwtl
fwait
add
pop
dec
mov
es
inc
leave
jl
sahf
call
jns
sub
xchg
jmp
jmp
sbb
divb
jnp
mov
stc
mov
imul
out
fsubrl
push
insl
cmp
lret
pusha
xor
stos
or
or
push
cmp
fcomps
mov
fcmovnu
stos
jnp
sbbb
dec
adc
push
mov
jns
repnz
int
xchg
lret
jle
sub
pusha
shr
push
and
mov
icebp
adc
outsl
fstpt
loopne
dec
add
or
push
into
push
or
call
xchg
xchg
xchg
or
in
xor
push
cmp
add
mov
lods
fidivrs
cwtl
push
dec
add
frstor
fnstcw
fistps
lahf
push
pushf
sarb
clc
mov
pop
sbb
push
fwait
into
test
sahf
cmp
enter
int
jno
jp
lcall
aam
icebp
pop
dec
mov
mov
les
dec
push
ja
in
ljmp
xchg
jae
inc
int3
je
lcall
pop
clts
popf
jmp
and
jp
aaa
ds
loopne
add
dec
out
and
mov
cmp
test
mov
dec
cmpsb
jmp
cmp
mov
dec
in
dec
push
push
xor
push
add
aaa
mov
outsb
inc
es
mov
sbb
xchg
mov
jne
les
negl
int3
inc
nop
mov
pop
cmc
and
pop
add
in
fiadds
mov
sub
and
cmpsl
pop
fwait
xlat
adc
adcb
jb
inc
xchg
inc
icebp
leave
not
mov
or
push
subb
mov
xchg
lret
xchg
pop
pop
jo
xchg
lods
mov
xor
hlt
and
adc
mov
pushf
idivl
test
xchg
xorb
lahf
dec
movsl
jno
mov
aam
or
pop
add
dec
mov
xor
inc
pop
test
fimuls
jmp
mov
or
lret
cwtl
xchg
xchg
imul
out
mov
popa
push
shl
mov
pusha
data16
movb
jbe
addb
jmp
xchg
repz
loop
add
aam
daa
hlt
sbb
and
repz
mov
movsl
gs
jnp
jnp
movsb
ss
dec
cltd
add
arpl
push
cmp
in
or
aad
or
fimuls
and
inc
xchg
daa
adc
out
mov
fmull
dec
rclb
inc
push
push
xchg
scas
fcoms
pop
mov
imul
jle
push
or
out
shlb
outsl
xchg
xchg
push
aaa
lods
in
xor
idiv
mov
test
movsl
shl
sahf
daa
xor
xlat
fcmove
add
les
lret
jmp
mov
clc
push
into
cmpsl
cmp
jno
dec
andl
repnz
movsb
xor
movsb
je
pop
ds
cs
std
sub
lods
mov
cmpsb
cli
mov
mov
xchg
das
outsl
jle
jmp
fcoml
adc
dec
jb
mov
stos
jp
arpl
ret
xor
pop
sub
dec
jo
lock
inc
pop
insl
xor
push
aas
mov
add
test
jge
inc
and
loope
and
cmpsb
or
xor
jb
xchg
in
and
jmp
push
pop
push
push
push
push
or
push
dec
pop
fiadds
inc
clc
mov
or
insl
outsl
push
dec
cltd
imul
imul
cltd
push
xchg
pop
push
sbb
add
cmc
and
mov
cwtl
insb
outsl
insl
jnp
movhps
mov
mov
inc
adc
and
add
push
jp
hlt
or
movsl
mov
sbb
sbb
daa
out
hlt
sbb
and
mov
addr16
andb
inc
xor
push
push
mov
xor
data16
outsl
dec
dec
into
and
out
or
mov
xchg
iret
add
xchg
adc
shrl
mov
ds
movsl
iret
jbe
mov
lret
lods
sti
sub
and
jno
adc
xor
imul
popa
mov
mov
push
mov
pop
jge
call
mov
pop
aam
fsubr
jbe
jl
cmp
sub
jle
mov
push
inc
jle
ds
push
cmpsb
aad
and
dec
test
mov
add
or
mov
arpl
sub
sbb
xor
cmp
cmc
dec
loop,pt
or
aam
ja
enter
jb
adc
in
int3
les
lcall
leave
push
hlt
in
and
adc
pop
xchg
or
cli
mov
rorb
xchg
fnclex
stos
shlb
xor
arpl
pushf
jnp
gs
daa
mov
in
pop
and
rcrb
push
cmpl
jmp
ljmp
sub
dec
jns
sbb
js
push
daa
enter
dec
mov
insl
add
cmp
push
in
jmp
mulb
pop
jae
test
mov
fbstp
cltd
shrl
inc
in
push
imul
mov
or
in
and
inc
adc
jmp
or
nop
outsb
fwait
or
mov
push
lods
xchg
mov
xorb
lods
sub
add
push
in
jle
xchg
and
ret
mov
insb
inc
push
iret
in
dec
and
jge
aam
fs
lret
cmp
pusha
xchg
call
daa
mov
add
cmp
popa
loope
out
insl
xor
sbb
int
dec
and
push
fisubrs
lcall
insl
xor
dec
cltd
dec
inc
cwtl
mov
and
dec
dec
pop
add
rcrl
stos
or
add
jp
push
xchg
aaa
hlt
xor
es
addr16
insb
out
fwait
aas
into
and
into
popf
inc
imul
jno
bound
mov
mov
mov
push
out
jp
mov
dec
mov
jge
mov
inc
jne
jb
sti
fwait
xor
pop
xchg
popa
aam
dec
mov
je
sub
ss
sahf
mov
mov
cmp
sahf
rclb
ljmp
fisubl
mov
push
jne
les
shlb
xchg
les
aad
xchg
rcrl
push
bound
int
inc
in
repz
test
adc
pop
push
lcall
int
ss
ret
xor
and
add
add
cltd
daa
imul
sbb
loope
movsl
stos
repz
xchg
cwtl
imul
inc
inc
mov
mov
jmp
adc
les
clc
jbe
mov
cmp
push
pushf
and
sahf
out
fs
rcrb
mov
xchg
inc
repz
dec
adc
ret
das
dec
call
ret
push
xchg
push
or
or
sahf
jecxz
test
fsts
jp
and
andl
pusha
mov
mov
dec
imul
fcmovnu
nop
xlat
push
outsb
rolb
in
mov
ja
push
ljmp
sbb
loope
stos
loopne
scas
pop
jp
inc
popa
icebp
lahf
push
and
mov
sbb
dec
cmp
aam
outsl
lods
adc
pop
adc
addb
dec
arpl
push
sub
test
scas
push
out
pop
jecxz
insb
sub
xchg
or
xchg
pusha
jbe
jnp
bound
mov
pop
stos
outsl
jbe
inc
sub
and
cmp
std
jns
fcoms
int
and
int
in
cmp
pop
adc
out
fsubs
push
scas
sbb
mov
movsl
insb
inc
ret
sahf
mov
icebp
icebp
in
push
push
xchg
pop
push
lret
jmp
dec
inc
popf
push
jmp
pop
jns
test
jne
loop
mov
add
fs
mov
adc
adc
ret
cs
pushf
lds
pop
insl
pop
xor
mov
sarl
push
sbb
sbb
add
ds
adc
enter
shr
std
fsubrs
sub
icebp
notb
and
and
iret
test
or
push
xchg
out
and
jecxz
xchg
add
shll
pop
push
and
sbb
repnz
cmp
inc
push
insb
adc
mov
fcmove
pop
mov
push
push
ret
adc
jp
cmp
or
push
dec
add
mov
rcr
outsl
mov
dec
aaa
add
sti
add
dec
test
adc
shlb
cmp
outsl
sti
mov
dec
xlat
cltd
xor
and
ljmp
adc
mov
sbb
adc
inc
xchg
jae
cmc
aas
jns
repz
cmp
pop
push
leave
cmpsb
lods
pop
test
out
cmc
push
push
jmp
push
and
adcl
xchg
jb
int3
jp
rclb
sub
mov
std
pushf
sbb
add
push
roll
adc
adc
lahf
mov
jmp
jbe
add
and
in
or
aaa
pop
shrb
pop
jo
cli
mov
pushf
int3
ret
dec
mov
in
dec
add
ja
mov
jecxz
sbb
imul
icebp
iret
pop
test
das
addr16
mov
fsubrl
add
sbbl
sti
aam
mov
mov
cmc
scas
inc
cmp
xor
lock
enter
pop
pop
push
dec
jl
int
fimuls
and
and
add
mov
jo
inc
repnz
gs
or
jno
xchg
fidivs
les
dec
test
dec
ficoml
push
adc
inc
xor
scas
ljmp
mov
or
pop
pop
inc
lds
push
imul
cmp
mov
icebp
leave
add
and
jg
jmp
mov
into
dec
popf
sub
push
outsb
mov
and
lret
cmc
ljmp
pusha
push
iret
decl
idivl
iret
jb
movsl
sub
call
mov
ficoml
call
add
sub
das
insb
pop
ja
xor
cmp
or
jbe
xor
dec
mov
and
inc
movsb
repz
jg
lods
cmp
xor
inc
jns
xchg
add
jmp
aad
stos
inc
movsl
in
pop
sub
fwait
add
aaa
pop
movsb
inc
jle
out
sbb
adc
mov
scas
or
test
outsl
push
test
xor
cmp
sbb
inc
lret
in
fbstp
adc
shl
add
cmp
jecxz
xor
sub
jae
inc
rol
xor
nop
push
lods
repz
sbb
cld
cmp
shll
stc
test
or
cmc
dec
jecxz
clc
cld
pop
cli
sub
insl
mov
orb
mov
fadds
sub
cmp
enter
jmp
pop
arpl
adc
lods
jmp
mov
or
arpl
dec
sub
pusha
fwait
je,pt
fdivs
lock
and
mov
insb
repz
mov
rcrl
add
ljmp
adc
jbe
or
cli
pop
orl
xchg
js
mov
in
pop
add
repnz
push
movsb
inc
push
xchg
inc
dec
push
ljmp
faddl
add
dec
cmp
scas
int3
lcall
or
mov
das
push
out
pop
sbb
fbstp
rclb
push
cmp
add
sbb
call
sub
add
repnz
loop
push
pop
jl
jb
jnp
mov
add
sub
out
pop
call
lcall
dec
cmpsb
jb
lods
arpl
pop
shl
call
cmp
out
inc
or
mov
adc
mov
insl
xchg
pop
bound
andb
xchg
mov
lods
stos
pop
mov
test
aad
mov
lock
pop
cli
or
mov
enter
pop
lods
sbb
outsl
loopne
push
and
sub
mov
scas
pushf
shll
add
mov
lea
popa
jle
add
or
sarb
filds
cmpsl
mov
and
xchg
jo
ss
jae
jg
cwtl
xor
mov
jmp
mov
ret
rclb
ljmp
xchg
mov
xorl
adc
pop
in
jecxz
jg
mov
add
adc
xlat
clc
xchg
jb
sub
aaa
adc
mov
sbb
gs
imul
mov
shl
mov
arpl
mov
xchg
jnp
test
scas
xorl
mov
mov
fdiv
inc
dec
xor
push
adc
or
push
inc
dec
loopne
push
add
jo
push
pop
ljmp
mov
or
jl
sti
out
inc
push
nop
stos
movsl
lahf
push
filds
les
in
jmp
popa
cmp
imul
fdivl
fnsave
cs
fildll
decb
stos
scas
pop
sbb
push
dec
iret
mov
gs
fdivs
xor
scas
shll
sbb
in
pop
ret
call
jns
mov
inc
cmp
lahf
or
sbb
lods
ficomps
es
jecxz
dec
sub
push
xchg
andb
inc
or
out
mov
jecxz
mov
adc
cmp
sub
arpl
mov
call
inc
lods
mov
sbb
dec
cmc
push
and
dec
pop
sbbl
push
xchg
in
pop
add
sbb
repnz
inc
pop
rol
mov
cmp
lret
scas
pop
leave
xor
mov
shrb
rorl
push
data16
imul
sarb
test
jge
inc
jl
sbbl
jae
fs
jecxz
mov
ja
mov
mov
cltd
ljmp
scas
sbb
fidivl
sub
push
xor
test
jl
mov
lods
int3
xchg
pushf
cs
insl
daa
push
dec
fildll
pop
cmpsl
mov
add
rclb
pop
mov
andb
push
mov
cs
ljmp
mov
fmuls
adc
out
lds
mov
add
jle
sbb
rcl
adc
push
jmp
daa
pop
orl
in
dec
jp
mov
in
mov
add
or
cli
jge
fsubrs
or
jbe
in
or
push
movsl
xchg
insb
mov
mov
data16
xchg
xlat
cmp
jg
sbb
push
mov
movsb
add
cwtl
cmp
push
in
xor
jo
pop
mov
inc
push
mov
loope
xchg
sub
adc
adc
fstps
out
loope
mov
les
cltd
loope
mov
cmc
jp
sahf
pushf
xchg
inc
ss
sub
mov
mov
int
cmp
mov
stos
sbb
cmpsl
add
push
pop
ret
lock
cld
xchg
cs
push
outsl
inc
imul
push
sub
stos
fistpl
popf
inc
dec
adc
or
xchg
ljmp
lahf
push
cmp
aaa
lret
jmp
and
push
add
bnd
mov
mov
lds
mov
imul
sbbb
gs
xchg
iret
addr16
inc
add
push
imul
dec
test
jbe
lods
inc
pop
test
dec
js
scas
sub
and
mov
loop
fdivr
or
or
xchg
mov
and
enter
aaa
sub
push
pushw
call
js
or
push
je
ss
cmp
inc
cmpsb
push
das
jecxz
std
add
inc
and
adc
or
hlt
sbb
pop
xchg
test
add
xchg
jbe
xchg
and
inc
adc
sbb
pusha
outsb
mov
out
or
leave
cmpsl
push
lock
mov
cltd
sbb
pop
mov
cwtl
xchg
jl
cwtl
push
add
cmp
std
fildll
adc
loopne
inc
fstpt
xor
into
popf
lahf
adc
jbe
idiv
dec
mov
daa
cmp
call
sub
cmp
ja
les
pop
sub
popf
xchg
ljmp
sbb
pop
jnp
push
fnstcw
incb
mov
dec
jg
enter
into
aaa
mov
cmp
ja
les
icebp
imul
add
ljmp
sub
cwtl
out
mov
jp
mov
or
loop
jnp
dec
push
cmp
sbbl
clc
and
jnp
jmp
mov
jge
subb
insl
mov
les
mov
jns
sbb
sub
out
dec
cli
push
ret
add
call
xchg
out
cltd
insb
outsb
inc
pop
sti
cmpsb
into
xlat
xor
fiaddl
pop
stos
dec
mov
cli
xor
and
mov
jae
mov
and
jp
test
and
mov
push
push
dec
imul
jl
push
xchg
iret
gs
fists
sti
xchg
fcoms
insb
subl
jle
call
dec
shlb
notl
ret
mov
push
bswap
ds
jne
test
pop
in
sbb
xchg
mov
push
push
and
dec
pop
rcrl
inc
jge
dec
punpcklwd
filds
in
inc
mov
dec
jb
test
jmp
mul
int3
nop
sub
xlat
jecxz
out
clc
pop
pop
movsb
ss
adc
stos
push
imul
xchg
xchg
cmpsl
pop
pusha
dec
sub
push
dec
adc
imul
scas
mov
push
mov
cmovge
jmp
mov
imul
jmp
jo
xor
fistpll
dec
push
iret
cmp
test
cmp
in
sub
cmp
repz
jne
jl
lods
mov
cmp
sbbl
subb
mov
dec
out
lock
addl
mov
xor
call
les
jmp
stos
sbb
aaa
and
orb
in
add
ja
imul
mov
xor
dec
sti
jp
iret
and
rol
mov
mov
jmp
push
mov
dec
adc
stos
jmp
dec
fidivrl
es
mov
mov
add
out
pop
mov
lock
pop
mov
test
scas
addr16
rolb
pop
adc
sbb
pushl
cmpsb
lret
and
xor
insl
xchg
aas
or
shlb
das
or
ret
repnz
pop
sahf
inc
je
and
or
insl
jecxz
scas
or
movsl
mov
jg
or
cmp
adc
cmp
scas
inc
mov
and
cmpsb
add
mov
add
cwtl
xchg
loope
test
cmp
xor
jecxz
mov
cmp
mov
mov
mov
out
divl
mov
testl
xor
mov
jae
pop
stos
push
cli
adc
adc
movsb
jg
push
pop
int3
sub
in
add
addr16
lea
lret
pop
jbe
jne
xchg
clc
jg
jnp
xlat
std
and
pushf
lea
gs
mov
sub
call
repz
daa
call
jl
loope
std
jecxz
pop
fldcw
mov
dec
xlat
mov
pushf
dec
or
scas
dec
lods
mov
and
mov
in
pop
cmp
int3
jnp
jl
aam
idivl
lods
stos
push
sbb
jmp
xchg
xor
ja
stc
ds
cltd
pop
cmp
ljmp
mov
inc
divb
iret
pop
leave
jle
lret
clc
roll
pop
mov
xchg
insb
pop
cs
icebp
les
lahf
in
xchg
dec
fcomps
outsl
xor
xchg
dec
push
pop
js
mov
push
mov
or
adc
xchg
cmp
incl
loopne
sub
push
out
add
mov
pop
adc
add
stos
sub
sbb
xor
in
inc
shl
loopne
movsl
outsb
mov
adc
jno
repnz
fisubrs
data16
aam
scas
mov
mov
or
jmp
jb
jle
dec
add
xchg
push
fwait
and
xchg
mov
dec
ret
add
lds
testl
pop
cmpsl
sub
clc
sub
mov
loopne
mov
xor
dec
adc
or
mov
ds
xor
mov
and
imull
sub
sahf
ss
adc
cmp
jmp
mov
xchg
aad
stos
pop
and
xorb
fwait
or
into
inc
dec
lret
popa
inc
pop
ljmp
sbb
hlt
dec
or
dec
incl
mov
mov
mov
in
inc
pusha
adc
imul
imul
lcall
push
pop
movsl
dec
outsl
mov
pop
je
nop
ljmp
mov
in
lret
into
into
sub
data16
mov
or
aam
popf
sub
loop
ds
cmp
sahf
pop
andl
pusha
ds
mul
xorl
imul
add
or
dec
cmc
ret
mov
add
adc
sub
push
leave
add
loope
or
es
dec
aam
cltd
cwtl
or
and
cmpsb
mov
sarl
add
push
sub
gs
adc
cs
pusha
std
jge
mov
push
jg
movsl
jmp
jecxz
and
mov
cmpsl
push
test
pop
mov
jg
and
sbb
outsb
sub
clc
mov
pop
mov
bound
push
push
shl
aaa
mov
mov
mov
pop
imull
das
into
inc
push
xor
sbb
lock
gs
adc
and
fldl
and
iret
xchg
add
push
aam
pushf
sub
pop
jg
insb
push
popl
adc
dec
mov
bound
mov
push
push
jbe
mov
push
sbb
arpl
daa
movsb
sub
jl
and
rolb
mov
xchg
rclb
pop
xchg
je
testl
adc
mov
sbb
sbb
fldl
scas
sbb
lcall
insl
adc
push
inc
and
iret
dec
scas
cmpsb
adc
sub
pusha
inc
sahf
test
pusha
push
iret
jge
fsub
adc
shrb
cmp
fimull
fidivrs
xor
sti
mov
or
je
mov
enter
bswap
cmpl
mov
dec
adc
dec
fisubs
roll
xor
jl
nop
push
pop
adcb
out
imul
pushf
push
mov
and
dec
xchg
mov
mov
cbtw
loopne
fisttpll
pusha
push
in
jae
iret
or
sub
mov
lcall
push
cmp
jecxz
push
mov
dec
lcall
outsb
mov
loop
jnp
jae
aas
in
movsb
leave
mov
cwtl
pop
out
sub
mov
fsubl
mov
cmp
das
xchg
xlat
sub
into
mov
add
mov
adc
xor
hlt
arpl
mov
push
jns
scas
sahf
imul
sbb
add
pop
jle
cmp
or
nop
mov
mov
jl
popf
add
sahf
test
or
rorl
gs
xchg
mov
decb
and
lea
lods
jae
loopne
cmp
cmp
test
test
pushl
bound
lret
pop
leave
popa
hlt
sbb
out
jbe
mov
out
ss
mov
js
mov
cmp
xchg
pop
sti
cmp
xchg
push
push
movsb
cmp
mov
cmp
and
imull
add
ret
jmp
xlat
pop
sub
mov
mov
mov
mov
mov
and
dec
inc
outsb
or
dec
sub
add
mov
enter
push
lcall
dec
std
xor
js
xchg
in
fldt
aad
test
xor
fucomi
xor
les
cwtl
jo
stos
bound
leave
sti
out
test
cli
jl
xor
adc
xor
popf
cmpsl
dec
jb
shl
push
insl
mov
in
rol
jbe
pop
or
jne,pt
or
adc
xor
not
out
cmp
cmc
sub
mov
icebp
inc
cld
jb
pop
sbb
imul
cld
jmp
push
push
push
std
xlat
lahf
inc
imul
lret
cmp
pushf
sub
xor
lock
xchg
arpl
mov
mov
pop
push
cmp
addr16
inc
subb
jno
loope
dec
aaa
push
push
push
std
test
and
gs
push
pop
fstl
adc
shr
add
cmp
cmpsb
ret
rolb
cmp
lock
stos
mov
pop
movsl
leave
sbb
push
sbbl
adc
xor
lret
cmpsb
pusha
sbb
mov
insl
pop
das
adc
cmpb
mov
dec
mov
jl
orb
aad
lahf
test
shl
out
xor
ret
fistps
out
sbb
aas
mov
xchg
pop
cmpsl
out
adc
adc
ficoms
adc
cmp
cmp
mov
jo
xchg
lock
js
mov
mov
cmp
stos
xchg
jmp
pop
and
mov
popf
sbb
stos
out
in
jnp
add
inc
fmull
xor
push
mov
and
xor
mov
mov
divl
out
xchg
or
pop
jns
xor
imul
mov
test
outsl
ret
leave
pop
dec
pushf
push
pop
or
movsb
loopne
sub
add
and
rorl
insb
js
and
xchg
push
push
adc
fwait
movsb
add
xor
pop
xor
xchg
jg
test
rorl
and
xlat
adc
xlat
dec
add
cmpsl
out
out
xchg
stos
pusha
sarl
sbb
or
xchg
xchg
mov
and
jmp
pop
mov
inc
inc
loopne
sbb
xor
or
push
adc
fimull
stos
mov
arpl
mov
fldenv
es
out
mov
pop
mov
and
mov
leave
mov
mov
push
test
ret
loopne
leave
sahf
test
imul
cmp
fxch
add
je
xchg
push
enter
push
ret
imul
cltd
int3
addl
out
test
jo
add
iret
jne
xchg
cmp
mov
insb
mov
idivl
push
cmc
add
stos
inc
xchg
addr16
clc
dec
cltd
mov
or
pop
in
pop
mov
ret
jno
sub
sbb
pop
push
cmp
cmp
xor
pusha
or
lock
notl
or
shlb
lcall
inc
or
test
sub
test
xor
jg
jbe
sbb
adc
mov
dec
fwait
in
test
cmpsl
stc
xchg
cmp
mov
or
add
sbb
jmp
add
fwait
jne
push
int
aam
rolb
cmp
stc
adc
sub
mov
roll
cli
pop
fucomp
xchg
sub
outsb
cmp
mov
xchg
mov
pop
mov
lcall
jbe
stos
sbb
push
and
pop
out
sub
add
cli
es
pop
mov
pminub
pminsw
outsl
scas
mov
mov
out
test
imul
pop
aaa
jecxz
stos
ja
aas
and
dec
pushf
xor
push
hlt
sbb
popf
cwtl
out
or
ds
in
lods
pop
sbb
call
aas
jle
arpl
or
lea
imul
jo
movsb
cmc
les
push
incb
lahf
sub
add
mov
xor
or
push
andb
popf
out
jns
test
test
icebp
cmpsb
clc
xor
icebp
mov
xor
je
inc
inc
enter
rep
push
inc
mov
mov
inc
fistpll
or
cltd
das
inc
jecxz
std
cld
in
jecxz
in
jne
sbb
mov
sub
dec
int
mov
dec
mov
jecxz
jge
pop
pop
test
push
in
mov
stc
out
daa
fiaddl
in
add
es
jl
xchg
mov
adc
lock
jno
jmp
fidivrl
sti
xchg
push
add
jae
cmp
fisubs
jbe
mov
dec
inc
fstpt
in
jp
push
int
inc
es
sbb
mov
jmp
mov
imul
jg
ja
aam
stc
push
js
lds
mov
fnsave
cmpsl
ret
jmp
inc
or
cmp
orps
popf
dec
adc
add
test
and
ja
pushl
inc
and
mov
inc
insb
fistps
dec
insl
je
cmp
sbb
pop
xor
mov
xor
rcll
pop
lret
fstpl
aad
stos
push
or
inc
xor
sub
gs
outsl
sub
jge
stos
sbb
ret
inc
movsl
scas
xorb
insl
clc
inc
xchg
jecxz
add
cmc
cmp
ret
xchg
xchg
mul
cmp
leave
mov
repnz
leave
rcrb
sbb
aam
pop
mov
popf
mov
sub
je
mov
cmp
lods
mov
add
pop
outsb
cmp
fidivrs
xchg
inc
jle
jmp
adc
cmp
ror
or
mov
and
shl
inc
push
push
enter
pop
mov
test
sub
and
popa
add
add
fs
or
xor
jne
inc
xor
ljmp
mov
pop
xchg
pop
sbb
mov
js
das
mov
test
xor
adc
test
xchg
sbb
cmp
out
mov
mov
jl
inc
es
int
dec
fldenv
iret
mov
dec
xorb
xor
cmp
outsb
mov
sub
bound
adc
out
cltd
push
inc
test
imul
mov
push
cmp
lods
xchg
es
sub
add
aad
loopne
popf
sbb
push
mov
scas
lret
popf
inc
call
movsl
pop
cmp
push
fiadds
and
rcrl
mov
lret
mov
in
subl
loopne
mov
ljmp
mov
mov
call
jb
sbbl
loopne
andl
or
jbe
jl
dec
sbb
inc
addr16
test
jns
sbb
outsb
sub
test
insl
push
add
mov
inc
and
pop
push
cmc
icebp
test
in
pusha
out
test
cmp
mov
stc
loopne
mov
mov
movsl
and
fadd
cmpsb
shlb
inc
pop
cmpsb
out
push
sub
iret
aam
xchg
push
xchg
sbbl
aaa
xlat
cmp
sub
lret
xchg
lods
inc
cmp
inc
inc
int3
cmpsb
andl
rcl
push
jmp
jle
les
mov
data16
cmpsb
sbb
movsl
mov
enter
cmp
xor
sbb
jnp
lret
push
dec
imul
loop
loopne
jae
add
cmc
xchg
mov
and
and
ja
test
mov
pop
test
je
ja
lock
mulb
scas
dec
ja
cmp
add
adc
dec
xchg
inc
push
jmp
xchg
xchg
js
roll
cmpsl
outsl
cmp
cmpsl
stos
dec
jmp
sbb
cld
push
loope
aaa
push
div
mov
nop
mov
push
cmpsl
lock
aam
pop
mov
popf
dec
add
mov
sti
mov
into
leave
mov
sti
test
shll
ss
mov
enter
shr
mov
popf
cmpsb
lret
adc
call
mov
jecxz
xchg
pop
add
inc
or
movsb
mov
mov
ror
mov
jo
or
mov
adc
cmp
pop
ret
cmp
or
pop
iretw
test
and
or
pop
in
rcll
dec
jno
outsl
stos
bnd
cs
and
or
rorl
out
in
dec
push
mov
dec
sbb
adc
inc
cmpsb
cmp
dec
adc
pop
pop
cmp
je
sub
enter
push
mov
fcoms
pop
loopne
mov
lods
pop
adc
mov
xchg
pop
sbb
das
or
cmpsl
leave
or
xchg
jecxz
cli
xor
xchg
movsl
mov
rolb
push
or
push
stos
stos
adc
push
roll
mov
cmp
xchg
cmp
or
dec
and
xor
inc
int3
push
lods
and
divl
xor
fmull
jae
jne
and
test
fimull
mov
loopne
fiaddl
mov
inc
jbe
mov
in
sbb
faddl
popa
jl
in
pop
fstl
fmuls
adc
add
lea
popa
xor
rolb
cmc
dec
sbb
imul
push
xchg
adc
push
add
outsb
sub
stos
stc
test
adc
bound
jae
xor
inc
cmp
or
jle
mov
call
scas
mov
mov
cld
and
test
fiaddl
fdivrs
jnp
xor
mov
insl
pop
cwtl
mov
and
call
mov
testb
imul
adc
push
xchg
ja
movb
push
jbe
sti
daa
add
ljmp
mov
push
jmp
xchg
xchg
cmp
fiaddl
jno,pn
inc
sbb
pop
cmpsl
or
aaa
in
mov
mov
aas
sbb
adcl
sbb
sbb
cmp
insw
bound
lea
in
aas
daa
mov
imul
jae
aad
mov
pop
mov
lds
mov
dec
nop
cmp
pop
push
rcll
adc
sbb
scas
cmp
repz
sub
addb
cwtl
dec
add
or
iret
imul
add
fcmovu
clc
dec
cmpsl
add
inc
sub
inc
mov
negb
cld
cltd
push
int
push
cwtl
loopne
dec
mov
or
mov
jp
pushf
lds
sbb
add
lahf
pop
pop
xchg
jmp
mov
add
xor
sahf
es
sbb
cmc
xor
cs
mov
lcall
dec
mov
xor
mov
adc
arpl
and
dec
insb
test
loop
std
jmp
sbb
in
pop
mov
test
lcall
inc
jp
cmpsl
inc
pop
nop
lods
gs
push
pop
push
movsb
pop
sub
mov
xchg
jmp
aam
call
and
fiadds
aas
in
leave
sub
or
outsl
push
push
push
adc
in
mov
xor
cmc
pop
lret
stos
lea
nop
push
fisttpll
cmp
inc
aaa
jmp
nop
cltd
test
paddsb
dec
stos
mov
xor
ud2
test
shr
sub
pop
lock
dec
pop
movl
bound
and
insl
cli
mov
std
int3
mov
pop
loopne
xor
sub
or
mov
push
cs
mov
testl
xchg
nop
dec
fs
jns
jge
cmpsb
std
adc
xor
sbb
imulb
popf
sbb
insb
jg
popl
fstp
mov
dec
cmp
lret
jmp
xchg
inc
ljmp
ss
sub
call
loopne
jg
inc
push
jecxz
cmpsl
into
scas
mov
jae
mov
push
cli
sbb
or
mov
xlat
lds
jns
testb
inc
leave
jle
pop
call
pop
inc
sub
mov
mov
popl
imul
std
push
decb
inc
xchg
out
and
or
mov
cltd
inc
sbb
dec
mov
inc
inc
pop
adc
lret
mov
add
leave
jbe
and
pop
ret
inc
pop
iret
push
dec
js
sub
sub
and
mov
add
sub
xor
mov
xchg
iret
out
mov
adc
dec
xor
jmp
pop
dec
ds
push
mov
cmp
jl
pushf
xlat
fdivrl
mov
das
test
jl
scas
inc
scas
sub
mov
inc
xchg
aam
inc
mov
push
movd
addr16
ret
push
jmp
or
sbb
cli
movb
test
or
orb
data16
repnz
adc
jmp
pushf
jge
outsb
pop
stos
sub
add
iret
test
aas
cmp
mov
popa
dec
xchg
adcb
or
jo
movsb
mov
pop
push
dec
add
cmpsl
push
outsb
xchg
xlat
cmpsl
pop
mov
mov
rcl
adcb
jns
push
mov
xor
enter
jecxz
cmpsb
cmp
arpl
ljmp
sbb
jmp
pop
std
pop
sbb
int
pusha
ss
cmpsl
mov
stos
mov
rol
and
pushf
xor
mov
and
jmp
adc
jbe
in
sbb
dec
stos
mov
pusha
test
pop
scas
add
mov
mov
pop
outsl
mov
mov
jns
jl
xchg
lret
es
js
and
sahf
mov
cmp
out
sub
and
out
and
fstl
ljmp
addr16
stos
movsb
sbbl
stos
lock
inc
test
in
add
jne
sahf
cmp
imul
loopne
fprem
aad
inc
adc
pop
stos
leave
insb
daa
lock
ss
mov
bswap
int
jbe
pop
stos
pop
adc
js
cmp
pop
ja
lcall
dec
fwait
scas
test
push
les
mov
movsl
lods
mov
aas
and
out
cmpl
dec
stos
inc
mov
ret
mov
add
lret
ss
mov
sub
jnp
sbb
testb
xchg
xchg
arpl
sbb
xor
adc
mov
sbb
xor
lret
inc
inc
pusha
or
or
pop
xor
cwtl
test
ljmp
mov
adc
mov
cmpl
sub
leave
cmp
cmp
lcall
int3
and
sub
push
push
ret
mov
adcb
fldenv
scas
cli
sbb
dec
fmul
adc
loopne
dec
ss
lret
pop
test
push
mov
mov
fs
mov
cltd
repz
mov
mov
fsubrl
imul
cmpl
lret
arpl
pop
test
mov
push
imul
into
shlb
xchg
cmc
in
mov
pop
int
cmp
mov
mov
js
jnp
lcall
leave
cmp
pop
ret
push
or
and
insb
outsl
push
stc
pop
clc
sbb
mov
ds
jb
push
sbbl
or
jne
cmc
mov
dec
std
movsl
mov
fimuls
popf
or
scas
mov
cmpsl
xchg
xchg
icebp
mov
sbb
scas
or
jl
sub
mov
mov
mov
mov
je
rep
xor
push
jae
xor
icebp
incb
enter
dec
cmpsl
je
das
psubw
lcall
xchg
or
lahf
push
cli
pop
out
pushf
mov
out
mov
push
pop
dec
or
psllw
adcb
fwait
adc
pop
scas
push
out
imul
stos
pop
out
inc
push
fstpt
push
mov
fsubs
pop
mov
js
and
sub
mov
sub
push
lret
divb
mov
cmc
stos
ror
sub
loopne
cmpb
inc
ljmp
fiaddl
mov
sbb
jl
mov
sbb
jp
pop
xlat
or
fdivrs
sbb
mov
and
mov
adc
jnp
movsb
jp
fsubrs
popf
jp
bound
xchg
sbb
jbe,pn
inc
cmp
sbb
imul
push
fildl
nop
mov
sub
mov
outsl
dec
sbb
sbb
mov
jge
xor
aaa
andps
or
mov
or
mov
push
dec
sti
fcoml
mov
push
ret
mov
inc
xchg
sbb
xchg
adc
add
add
cwtl
in
negl
cli
adc
andb
repz
mov
xchg
insl
insb
fwait
push
cmp
out
popa
mov
cmp
insl
pusha
adc
fisubl
push
adc
ret
mov
sub
fcmovbe
daa
ret
sub
shr
sub
fcmovu
dec
add
rclb
mov
mov
mov
lret
push
out
outsl
addr16
mov
xor
dec
dec
lahf
aas
das
xor
aaa
cli
push
add
sbb
push
sbb
add
cwtl
mov
jecxz
lods
sarb
inc
inc
push
into
sub
call
lret
push
test
mov
lock
aas
sub
in
rorb
out
stos
ds
sub
cmp
ficompl
pop
cmp
daa
adc
xchg
inc
insl
xor
mov
sbb
sub
insl
cmpsb
lock
aam
dec
push
std
xor
add
jmp
xchg
pop
das
push
mov
xchg
retw
jle
jg
sub
sarl
sbb
sub
mov
mov
cld
push
push
add
mov
rclb
mov
or
mov
pop
aaa
cltd
int
and
sbb
adc
les
add
fdivl
xorl
jo
push
aam
jmp
cmpb
pop
jns
sbb
imul
pop
sbb
and
les
push
adc
stos
add
ficoms
sbb
xor
sbb
mov
adc
lcall
lahf
outsb
negl
arpl
out
pushf
pop
xchg
ret
inc
xchg
jbe
mov
xor
xchg
or
std
fwait
ds
mov
pushf
pop
dec
jp
loop
or
ss
imul
push
pop
test
call
cmp
and
decl
fnstcw
xchg
mov
fsubl
test
and
je
fs
std
jle
pushf
iret
repz
lods
sub
jae
jl
inc
loopne
scas
xchg
in
dec
insb
sbb
cmp
pop
cmp
fstl
in
neg
adc
and
push
pop
and
adc
adc
rcrl
scas
or
push
mov
and
js
or
xor
jbe
icebp
fucomip
sarb
push
jmp
dec
sub
call
jae
aas
xor
nop
out
dec
lret
cmpsl
aaa
data16
jbe
repnz
movsb
pop
adc
jecxz
mov
xor
inc
pop
enter
sub
xchg
cmp
mov
mov
xor
jbe
iret
test
or
fcompl
xor
scas
jae
inc
movsb
sub
ret
cmp
dec
pusha
test
push
loop
xor
fs
pop
jp
test
lea
xchg
add
cmp
fsubrs
loop
mov
mov
jle
pop
out
jb
add
mov
les
roll
fisubl
jbe
xchg
lea
sub
out
xchg
xor
adc
ds
ficoml
xchg
leave
sbb
xor
cld
inc
fwait
and
xchg
sbb
or
mov
icebp
ret
ret
lcall
cmp
shlb
sbb
dec
push
int3
push
pop
push
rolb
sub
enter
push
pop
ljmp
or
gs
xchg
jg
pusha
aam
scas
mov
xchg
pop
dec
xor
mov
xchg
and
mov
push
mov
adc
icebp
push
test
mov
jnp
into
pop
xchg
mov
cmp
mov
pushf
ds
mov
inc
xor
dec
lock
cmpsb
dec
xchg
push
cmp
nop
sub
je
outsl
enter
mov
movsl
sahf
push
xchg
shr
out
in
scas
test
mov
adc
out
push
decb
cltd
es
pop
xchg
outsb
mov
insb
inc
or
ljmp
cmp
sbb
out
les
fdiv
dec
sub
push
sbb
shl
scas
mov
popa
stos
jns
bnd
outsl
sub
mov
mov
mov
dec
add
gs
out
push
mov
pop
dec
jne
xchg
inc
fistpll
outsl
ret
cmpsl
push
ja
out
fs
ljmp
sub
insl
ror
mov
mov
lcall
jb
push
dec
dec
push
cs
add
aaa
push
xor
call
adc
adc
js
mov
inc
fwait
push
push
insl
dec
xchg
lods
fisubrl
lret
js
jno
ds
xchg
sbb
icebp
popf
push
sub
sub
ret
lea
ljmp
fwait
das
addr16
add
inc
cmp
inc
pop
xchg
in
pushf
xchg
lret
mov
mov
push
movsl
inc
add
movsl
das
mov
push
mov
mov
insb
sbb
sbb
push
daa
push
pusha
arpl
jmp
das
push
stc
fildll
mov
jg
inc
inc
ljmp
sub
jne
xor
fwait
lock
mov
imul
jo
inc
fdivr
mov
cmp
lea
mov
lret
pop
or
push
inc
mov
xchg
mov
xlat
cmpsb
out
loope
lcall
and
and
ljmp
enter
insl
or
add
xchg
jmp
inc
adc
adc
xor
dec
arpl
add
mov
jge
js
cmpl
cmp
pop
clc
pop
cwtl
cwtl
inc
lds
sbbb
mov
insl
out
and
ret
daa
outsl
ficompl
xor
or
and
add
pop
jecxz
xor
push
mov
xchg
es
dec
lret
stos
test
mov
push
daa
xchg
stos
add
push
cmpsb
outsb
mov
mov
mov
shlb
mov
inc
popa
insl
data16
mov
fs
xchg
xor
pop
ljmp
sbb
mov
stc
iret
mov
je
dec
mov
jl
stos
mov
jp
aad
fstp
mov
adc
cld
pusha
fucomip
fcom
shlb
cmp
xor
loop
fstpl
inc
cmpsb
hlt
movsl
int
jb
sub
leave
pusha
fidivrs
adc
aas
int
and
iret
add
sub
lcall
inc
les
arpl
pop
lret
gs
mov
push
in
dec
dec
jns
stos
lahf
rcr
mov
add
repnz
push
cmp
int3
jp
mov
add
mov
jle
mov
roll
mov
pop
jle
or
sahf
mov
inc
shll
sub
or
fsubrp
jp
dec
mov
mov
add
test
cmp
gs
xchg
mov
loope
test
xor
in
movsb
push
xchg
push
ja
repz
push
loope
xor
cmc
ror
cmp
loope
jmp
xor
aas
fcomps
jp
enter
inc
jae
mov
je
or
xchg
mov
cli
push
push
inc
xchg
insl
cs
push
sub
inc
fnstsw
jg
add
test
fisttps
pop
xor
jae
cmpb
in
dec
outsl
and
mov
pop
jno
call
pop
out
cmp
mov
jp
pop
insb
inc
cmp
sbb
mov
or
fidivs
xchg
xchg
mov
cwtl
in
dec
dec
mov
ret
test
add
ds
lret
jne
lret
cmpsl
sbbl
mov
xchg
mov
and
mov
xchg
lock
inc
cmc
stos
pop
mov
out
jbe
pushl
mov
es
or
popa
andl
mov
je
sahf
jle
or
test
imul
pop
sbb
push
mov
mov
insb
sub
sub
xor
mov
daa
jno
jnp
pop
aaa
enter
test
ljmp
adc
outsl
popaw
mov
mov
nop
adc
pop
xchg
sbb
mov
fs
cmovno
xabort
push
pop
ljmp
aas
pop
mov
je
cs
rolb
xchg
add
lock
jg
mov
push
or
lock
and
clc
jns
int
sub
jbe
dec
out
pop
mov
or
and
leave
filds
push
cmpb
push
aad
imul
cmc
mov
aad
in
dec
mov
adc
aam
cld
idivb
ljmp
push
repz
xchg
pop
addr16
rcr
jl
addr16
mov
repz
dec
in
popf
int3
daa
enter
mov
push
inc
inc
imul
xor
push
mov
jno
sbbb
in
loopne
int3
rcrl
sbb
or
loopne
and
mulb
jnp
ja
pop
mov
adc
movsb
inc
pop
bound
orb
cmp
mov
xor
mov
push
adc
inc
mov
arpl
mov
les
push
xchg
int
cmpsb
mov
sbb
loop
clc
mov
rol
fadds
xor
adc
cltd
mov
cmp
add
sbb
in
stc
stos
cmp
mov
mov
aad
xor
sbb
mov
shlb
push
int3
cltd
add
cld
scas
adc
xchg
loope
fldcw
push
adc
mov
test
and
cld
arpl
pop
inc
in
sbb
dec
lret
inc
push
jl
push
inc
sbbb
stos
push
fsubs
ret
dec
mov
xor
rcl
push
aad
les
icebp
pop
add
and
cmp
push
pop
or
cld
xlat
mov
test
es
movsb
into
fstps
loop
sub
pop
or
hlt
test
pop
dec
xor
add
rolb
jbe
pop
xor
mov
push
adc
jae
push
loop
sbb
sti
push
lahf
and
mov
push
adc
adc
imul
xor
scas
aad
outsb
das
dec
ja
out
push
cmp
push
stos
push
sbb
sbb
outsl
bound
mov
mov
cmp
out
inc
rcll
cs
out
fisttpl
and
and
inc
mov
mov
mov
std
inc
sub
jp
test
mov
fistl
mov
fsubp
inc
imul
inc
out
dec
pop
add
mov
push
int
inc
sar
add
jmp
push
xor
push
fdivr
sub
sbb
jl
cmp
stc
mov
xor
add
fcmovu
in
pop
popa
mov
or
push
test
aaa
daa
cltd
fadds
mov
push
loope
arpl
xchg
mov
in
sbb
repz
xor
pop
push
fdivp
mov
je
and
dec
mov
xor
iret
xor
or
and
add
jl
mov
clc
fisttpll
cs
sbb
aad
aaa
or
push
icebp
sub
and
jmp
fs
push
adc
jg
dec
dec
push
mov
and
icebp
cld
fwait
or
fmul
in
rorl
hlt
xchg
cld
in
lcall
dec
jg
daa
cmp
lea
cmp
adc
das
sub
sahf
adc
cmp
mov
mov
addb
sbb
sbb
fadd
mov
sbb
andb
xor
mov
mov
shl
loop
dec
xor
addl
adcl
and
arpl
iret
jmp
lea
ljmp
push
repz
pop
iret
inc
push
xor
lret
outsb
jp
cmp
pop
fcompl
jge
aaa
jle
jno
dec
daa
pop
xchg
mov
add
jae
hlt
pushf
and
imul
popa
xchg
jle
jecxz
hlt
leave
subl
iret
nop
movsl
fildll
inc
dec
rcr
mov
jae
pushf
sub
sub
mov
dec
cmpsl
pop
mov
popa
and
and
cmovs
imul
jle
test
not
leave
mov
fisttps
fisubl
pusha
push
dec
sbb
cmp
sub
inc
mov
test
push
ret
adc
pop
out
mov
add
and
inc
mov
fwait
xchg
cwtl
fucomip
inc
cmp
nop
pop
ficoml
cltd
lret
dec
cmc
roll
ss
dec
movl
jmp
insb
divl
adc
jmp
adc
movsb
jge
add
push
in
pop
js
fistpll
mov
xchg
mov
jmp
and
jle
xlat
cmp
inc
lock
lds
in
xchg
jmp
xor
pop
dec
daa
fwait
cld
dec
fldl
adc
in
fs
xor
ljmp
jne
lahf
pop
movsl
ljmp
pop
push
fs
push
mov
jb
das
push
dec
xchg
push
test
sub
dec
repnz
cmpsb
outsl
jle
xchg
sbb
inc
pop
popa
mov
pop
imul
lret
lret
es
dec
xor
mov
xor
nop
pop
mov
cs
xor
jae
loopne
sub
mov
cmpsb
imul
dec
cmp
mov
mov
ss
loopne
mov
dec
test
adc
xor
shlb
mov
mov
add
cmpsl
stc
leave
popf
jg
vpxor
pop
hlt
sub
or
mov
add
testb
lret
cmp
cmp
xor
daa
push
mov
pushf
and
outsl
insb
rcl
dec
fadds
inc
xchg
mov
add
push
loopne
fs
pop
ss
push
jmp
sbb
jo
fnstenv
jmp
mov
mov
jb
and
fadd
sbb
das
dec
or
jmp
fiaddl
lret
sub
lods
push
divl
pushf
out
xor
jg
xor
sub
cmp
js
hlt
lahf
push
aaa
push
xor
stos
adc
dec
adc
imulb
pop
and
lahf
jb
cwtl
mov
in
mov
addb
pop
imul
negl
sar
sub
test
inc
sub
stos
pop
sti
jle
int
mov
xor
and
popa
push
lret
mov
cld
push
mulb
test
mov
fcom
mov
mov
ljmp
js
repz
addr16
psubd
cmp
sub
push
adc
mov
sub
and
subl
sbb
cmp
cld
cmp
mov
or
dec
imul
movsl
sub
decb
or
xor
jecxz
or
inc
shl
movsb
fucomi
sub
scas
inc
jmp
mov
xchg
cmpsl
xlat
adc
mov
sub
test
lcall
daa
pop
cmp
jnp
jnp
insb
jb
adc
mov
sbb
aaa
sub
inc
adc
ret
jno
adc
fisubrs
xchg
fs
das
addl
inc
sti
and
cwtl
jnp
inc
orb
inc
mov
sbb
in
iret
lcall
repnz
pop
xchg
test
xchg
or
jge
mov
int
clc
stc
inc
xor
xchg
jle
nop
inc
dec
mov
dec
movsl
hlt
sbb
daa
xchg
xor
call
bound
pop
loopne
lods
insb
cmp
inc
jp
ret
fwait
or
fdiv
xchg
mov
jmp
sub
and
or
and
lahf
mov
movsl
sbb
xor
inc
pop
enter
lret
inc
dec
lahf
push
pop
push
add
inc
shl
arpl
ficompl
cld
push
add
lds
xor
insb
out
xlat
jb
testb
nop
mov
cmp
cmc
dec
xor
and
jl
icebp
jl
inc
xchg
mov
loope
movsb
sbb
fldt
repnz
int
loope
mov
mov
das
push
shll
cld
dec
xor
sub
jmp
shlb
popf
xchg
dec
inc
xchg
cld
lea
add
frstor
push
test
in
jb
repz
cmp
addr16
jns
jnp
push
push
add
pop
lea
fistpl
and
xchg
fildll
sub
pushf
inc
les
push
pop
xor
xchg
stos
mov
imul
pop
cmp
movsb
inc
xchg
xor
add
and
jmp
or
outsb
mov
sbb
in
jle
popf
dec
inc
cmp
jne
adc
stos
pop
xor
dec
sti
adc
insb
mov
mov
sbb
xlat
ljmp
pop
mov
push
test
inc
jns
imul
in
test
fisttpl
test
mov
pop
nop
xorb
repnz
push
xchg
mov
dec
int3
and
adc
sub
push
xor
mov
jns
shl
ret
out
mov
nop
mov
pop
imull
shlb
lods
and
xor
lods
dec
mov
mov
and
inc
mov
push
adc
enter
push
into
lock
ljmp
and
xlat
xchg
test
and
fs
add
xor
imul
icebp
into
mov
lcall
adc
xor
mov
sub
in
xor
inc
aam
stos
xchg
ret
sbbl
inc
xchg
ss
aad
test
xchg
ret
mov
lcall
jnp
mov
shl
add
push
out
mov
mov
and
jp
iret
add
xlat
xchg
loopne
lret
daa
inc
ja
movsb
mov
sub
inc
add
lahf
ret
ret
pop
hlt
push
push
movsl
mov
push
jb
jmp
cmp
push
shlb
xlat
sub
outsl
add
clc
fstl
insb
imul
and
mov
insb
mov
lea
sub
out
lds
pop
dec
push
gs
push
lcall
aas
jecxz
add
out
or
xchg
enter
mov
jp
out
xchg
loope
ljmp
in
les
in
push
mov
pop
sti
mov
imull
fbld
aam
xor
aaa
movsl
xchg
scas
andl
pop
pop
add
mov
data16
icebp
ret
insb
fnstcw
shlb
xchg
inc
adc
mov
dec
pop
bound
pushf
lret
iret
fwait
nop
jp
sbb
nop
in
xchg
int
add
jl
gs
mov
loopne
mov
inc
or
pop
out
and
mov
xor
mov
fimull
lock
jmp
inc
das
cmpsb
outsl
rcll
daa
outsb
or
hlt
mov
clc
pop
lods
pushf
ja
test
inc
in
jne
out
inc
dec
adc
call
dec
cs
adc
sub
nop
jae
ja
lcall
mov
xchg
cmc
sub
nop
push
sub
imul
insb
out
sbb
aam
daa
push
push
mov
sub
adc
xor
lea
addr16
lret
loope
mov
out
jbe
cmp
jp
fmuls
cwtl
sbb
int
mov
aam
pop
xchg
pop
enter
dec
xchg
cmpsl
fiadds
inc
es
addr16
xor
int
jnp
and
icebp
lcall
mov
loope
cmp
adc
aam
sarb
stos
push
shl
cmp
adc
push
hlt
jnp
sub
xchg
in
push
repnz
jne
fs
mov
pop
fs
push
or
sbb
movsb
sub
or
mov
mov
mov
or
loope
xchg
fnstenv
insb
mov
xor
inc
nop
xchg
push
add
shrb
sti
imul
push
inc
in
idivb
cltd
cmpl
incb
mov
out
or
arpl
cmpsb
call
sbb
add
imul
dec
sbb
mov
pusha
push
pushf
loop
jae
cld
mov
repnz
in
aad
dec
cmp
or
mov
jo
test
es
mov
xchg
adc
mov
dec
jns
cmc
xor
jns
sub
jecxz
mov
sahf
sti
adc
inc
and
cmpsb
dec
xor
loop
xchg
popa
sub
pop
inc
in
mov
fdivs
ljmp
cmc
or
mov
out
or
cmpsl
jl
aad
into
lock
sub
cli
and
ret
push
mov
push
out
das
sarl
ss
es
insl
push
in
cmp
ljmp
leave
ja
add
pushf
sub
cmp
movsl
aam
je
loopne
ficoms
or
add
jge
cmp
push
adc
adc
add
jb
inc
inc
jge
sub
pop
pop
adc
ds
sahf
pushf
push
xor
leave
and
xchg
and
les
mov
pop
int3
pop
ja
sbb
sub
pop
mov
call
mov
aam
and
loope
push
je
jno
aas
fs
dec
je
jge
cmc
sbb
jb
dec
imul
test
push
push
stc
sahf
or
ficomps
dec
add
lret
sbb
fimull
cli
scas
rcl
xor
xor
add
sar
aam
xchg
sti
push
mov
mov
shrl
fistps
hlt
mov
push
cld
imul
adc
xor
and
or
cmc
pusha
fucom
adc
movsb
mov
sub
mov
sti
sbb
mov
loopne
adc
test
das
shlb
adc
mov
call
repz
roll
call
xchg
mov
and
jge
sbb
mov
fwait
dec
loope
scas
cmpsb
rcrl
fwait
mov
out
mov
sahf
cmpsl
cmp
sbb
pop
imul
movsb
cmp
lret
or
dec
xchg
sarl
inc
push
jge
clc
popa
and
outsb
sub
xor
in
mov
cli
jge
adc
pop
xor
push
ds
aad
popa
xor
out
jo
fsts
cmpsl
jb
lds
fisttpl
fs
test
sub
mov
insb
or
mov
mov
xchg
sub
addr16
pushf
ret
mov
popf
jbe
or
lret
daa
mov
adc
data16
arpl
imul
fisttpl
mov
adc
into
ja
rolb
pop
fisubs
aas
mov
mov
sti
jl
dec
xor
push
mov
orb
test
jb
or
inc
pop
aad
mov
pop
xor
fldl
cmc
or
or
notl
mov
pop
mov
popa
adc
lods
xchg
lds
dec
in
add
sub
push
inc
addb
jecxz
imul
xor
or
jbe
mov
stos
inc
mov
mov
push
cltd
adc
mov
mov
pop
in
sbb
mov
and
xchg
data16
test
popl
add
aam
jbe
pop
div
hlt
push
insb
call
insl
inc
lock
or
jo
sub
add
fcmovnbe
mov
dec
ss
push
out
cmp
imul
shr
outsl
xchg
push
roll
data16
aam
pushf
inc
icebp
sbb
incl
loop
rcll
sub
arpl
scas
inc
lock
mov
scas
xlat
ljmp
popf
rcrb
pop
negl
mov
sbb
xchg
pusha
cs
dec
and
push
jno
repnz
push
inc
mov
test
mov
sahf
int3
insl
xor
cmp
psubusw
jp
es
mov
and
or
xchg
imul
mov
fisubrl
lds
mov
jbe
cld
scas
movsb
and
dec
mov
xchg
andl
jo
lods
pop
mov
es
popf
xlat
add
pop
cs
push
inc
fcoml
mov
mov
cltd
inc
inc
into
js
fildl
mov
int
xorb
mov
scas
cwtl
les
mov
neg
mov
adc
add
sub
arpl
jge
pop
lcall
xchg
jae
pop
in
mov
lods
cmp
xchg
sbb
mov
dec
dec
daa
leave
lea
cmp
sbb
fdivrp
push
bound
jp
inc
stc
or
mov
int3
inc
fxch
rorb
pusha
cmp
pop
jl
fcmove
cmp
loope
jmp
jbe
xchg
loop
out
push
xor
iret
popf
fidivs
xchg
add
out
fldenv
sti
mov
divl
out
add
call
rorb
dec
xchg
out
int3
ss
lds
aad
xchg
sti
push
out
mov
xchg
push
sbb
pop
push
jbe
push
mov
call
adc
mov
sahf
add
xlat
loop
dec
fcmovbe
adc
jmp
xchg
and
or
xchg
cmp
mov
add
cltd
sub
jne
pusha
shrl
push
iret
mov
sbbb
pusha
cs
push
aas
adc
inc
lods
adc
fmul
es
and
mov
sub
lcall
sub
xor
push
in
dec
mov
jne
test
arpl
sbb
lret
mov
jp
sub
fwait
mov
cld
shll
push
pop
jmp
mov
out
mov
je
cmp
negb
xor
mov
jnp
adc
dec
sub
icebp
sarl
dec
push
lock
negl
sbb
inc
cmp
lahf
cmp
mov
cltd
in
movsb
es
out
jp
mov
mov
stos
jl
mov
rorb
add
cs
es
call
popf
push
mov
inc
inc
sub
pusha
std
pop
mov
push
cmp
pusha
ror
and
adc
arpl
cs
stc
movsl
loope
test
in
xchg
xchg
push
or
jmp
jecxz
dec
inc
jmp
ljmp
notl
fucomip
xor
mov
jmp
out
scas
movsb
push
scas
fwait
nop
mov
in
jae
sbb
in
adc
mov
hlt
xchg
push
test
insb
pop
nop
ljmp
mov
sub
adc
fnstcw
adc
mov
cmp
test
add
shl
xor
dec
xor
or
jae
cltd
aas
xor
aas
or
mov
fs
movsl
dec
or
jge
subl
loope
xor
sbb
dec
xchg
pop
pop
movsl
dec
das
sbb
lods
repz
mov
in
imul
inc
sti
sbb
mov
test
cmpsl
xor
ja
jg,pt
dec
sub
outsl
ljmp
adc
gs
push
xchg
stos
roll
out
aaa
cmp
std
enter
leave
aaa
cmp
dec
cmpl
lock
add
add
ret
xchg
xor
mov
sub
mov
mov
sbbl
push
pop
pop
mov
mov
rcr
push
mov
fisubl
mov
mov
jnp
sub
xor
or
mov
and
pop
stos
js
ret
pushf
or
pop
test
mov
popa
loope
dec
stos
aad
icebp
add
sub
fxch
xchg
sub
arpl
sahf
xchg
pop
roll
push
into
lods
stos
test
mov
daa
aam
ret
xor
push
mov
pop
fdivl
int
dec
pop
ret
sub
in
fyl2xp1
ret
imul
jne
jge
inc
outsl
and
and
pop
jnp
xchg
push
sub
add
sbb
scas
loope
into
cmpl
repz
fldl
ljmp
lds
movsb
pop
aam
in
adc
loopne
push
rcl
sub
push
xor
stos
jecxz
push
inc
js
std
cmpsl
push
aam
jne
popa
mov
mov
or
cmp
idivl
cmp
stos
xor
imul
and
test
outsb
dec
stc
and
pop
incb
mov
aam
add
movsl
push
xchg
pop
rcl
mov
mov
outsb
repnz
jnp
idivl
xor
jae
rorl
cwtl
xchg
gs
fwait
popf
sbb
imul
es
clc
adc
dec
rcll
mov
and
roll
jne
add
dec
lret
outsb
cmpsb
mov
mov
xchg
aam
push
gs
sub
xorb
push
lea
fs
pop
pop
rcrl
jge
cmp
ret
add
xchg
cmp
xor
stc
imul
stc
int
add
jp
mov
sarb
popa
or
sub
jo
into
imul
mov
sar
lock
inc
ror
aam
push
pop
jmp
shl
addr16
push
xchg
pop
dec
inc
pop
sub
cs
lahf
cmpsl
adc
inc
icebp
loop
sbb
dec
daa
mov
pop
mov
lds
cmp
andl
xchg
dec
add
jmp
sahf
mov
cmp
inc
jbe
cmp
dec
mov
lret
fisubrs
dec
out
enter
call
inc
flds
xor
push
cli
xchg
shrl
push
ret
cmp
into
and
cld
jo
jne
push
or
fs
clc
arpl
mov
push
inc
aam
test
je
call
mov
xor
roll
pop
lea
push
sbb
ljmp
lcall
cmpsb
cmc
dec
adc
push
pop
sub
rclb
test
les
in
mov
push
leave
arpl
in
and
pop
push
mov
add
jmp
xchg
fwait
std
mov
pop
bnd
jo
cwtl
movsl
lret
jnp
push
dec
rcl
fldt
cmpsb
out
xor
in
aad
sbb
pop
mov
das
in
xchg
hlt
mov
and
mov
iret
xor
xchg
sbb
xchg
orb
dec
call
push
lds
mov
icebp
jl
les
fadds
pushf
mov
pop
stos
lea
mov
into
pop
lcall
decl
mov
test
add
push
pop
dec
popa
adc
testl
add
shl
mov
inc
push
push
setns
mov
xchg
xor
mov
in
cli
pop
or
mov
and
jge
rcll
add
cs
xor
cmp
pop
fistl
call
xor
adc
jle
push
mov
mov
icebp
cmpsb
cmpsl
pushf
and
loopne
mov
pushf
bound
pop
ss
loop
jae
ret
cmp
push
push
sahf
ret
push
and
inc
mov
sbb
cmp
rclb
enter
cmp
cmp
js
hlt
jb
inc
pop
es
bswap
sub
dec
adc
int3
cmp
jae
cs
enter
mov
rclb
pop
pop
fidivs
std
les
dec
and
mov
ret
sbb
icebp
sub
lock
lret
mov
pop
mov
in
in
movsl
push
push
cmpsl
inc
cmpb
lret
mov
test
negb
jbe
fisubrs
and
pop
inc
jne
xchg
inc
jne
mov
jo
xorl
xor
xchg
push
fisubs
stos
sbb
mov
arpl
insl
addr16
push
add
in
mov
dec
xchg
jle
jo
dec
push
scas
lcall
clc
pop
or
lcall
and
in
in
stos
adc
imul
cmpsl
xchg
fsubrs
adcb
sbb
and
push
adc
das
xchg
add
mov
jo
mov
std
adc
dec
mov
int3
pop
mov
xor
mov
dec
lods
mov
out
shrl
mov
sbb
cmpsb
inc
dec
fnsave
xor
imul
xchg
xchg
fwait
stos
gs
test
les
pop
insl
push
cmp
loopne
ret
inc
xchg
shll
cmc
jae
and
loopne
rcrb
lret
pop
mov
ljmp
mov
into
fildl
insl
repnz
mov
inc
aaa
jne
jg
sub
inc
sub
push
pop
rorb
push
sbb
cmp
inc
and
aam
andb
loopne
in
cs
movsl
or
inc
aas
mov
cld
cmp
xor
fistps
cs
inc
cmp
and
std
mov
mov
nop
mov
rep
cmp
les
stos
movsb
xchg
xor
push
fistl
inc
fimuls
fdivp
cmp
lock
mov
xor
out
test
add
add
scas
push
aad
sbb
fdivp
dec
pop
pop
mov
int3
or
sti
push
jns
dec
ja
jge
outsb
cmpsb
sbb
bound
dec
scas
sub
ret
and
push
outsl
int
xor
push
xchg
movsb
cltd
iret
and
ja
das
or
xchg
dec
and
mov
dec
xchg
rdmsr
frstor
out
or
test
je
mov
jle
push
xchg
ja
pop
push
xor
scas
and
bound
frstpm(287
data16
jns
lea
lods
rcrl
xor
jge
pop
mov
push
cmp
adc
cmp
dec
cmp
aas
mov
les
fstpt
inc
and
jl
nop
xor
and
mov
inc
in
ret
scas
lods
ss
rcll
les
and
xchg
inc
mov
fsts
mov
jle
scas
mov
scas
aam
jns
adc
nop
dec
xchg
mov
xchg
pop
xchg
xchg
scas
jne
adc
xchg
imul
mov
inc
xchg
lods
mov
push
xchg
imul
jmp
cs
lcall
push
push
cli
movsl
push
enter
or
test
jle
mov
push
pop
ja
inc
push
shrl
out
arpl
cli
and
xchg
jb
dec
das
mov
fwait
inc
imul
daa
push
push
std
push
ds
adc
pop
cmc
xchg
cmp
push
mov
xor
pop
cmp
loope
ret
lea
movsl
push
and
lds
mov
jb
out
mov
sbb
aam
jb
xor
test
sub
jmp
loopne
xchg
in
roll
bound
loopne
std
adc
push
ja
inc
das
pop
mov
stos
nop
dec
sbb
push
xchg
leave
in
adc
scas
repnz
pusha
in
hlt
stos
mov
mov
js
imul
mov
jle
addr16
add
ret
pop
xchg
cmp
rol
rclb
in
fsts
adcl
jo
push
mov
stc
mov
mov
and
mov
imul
adc
dec
push
push
cmc
mov
xchg
insl
repnz
or
mov
stos
mov
lcall
ja
xor
sbb
scas
sti
hlt
inc
arpl
stc
pop
pop
pushf
inc
dec
push
jnp
inc
lcall
out
inc
push
lea
js
or
xlat
inc
xor
popf
pop
jno
sub
mov
lds
int3
fcoms
pop
fdivr
mov
cmpsl
jbe
jmp
gs
negl
js
hlt
rol
mov
cmp
push
lea
mov
mov
push
dec
xchg
jl
sbb
das
pusha
insl
cltd
lds
jge
int3
hlt
jmp
mov
jp
ss
rclb
outsb
cwtl
xor
out
push
mov
pop
aam
clc
ret
cld
loop
mov
insb
rolb
pop
andb
lock
sub
xor
cltd
inc
sub
iret
lahf
sbb
pusha
clc
inc
and
mov
mov
imul
mov
mov
sarb
or
insb
push
shl
pop
add
rcl
insb
mulb
push
push
test
in
sarb
adc
popf
icebp
iret
mov
pop
sub
push
pop
loope
rorl
sbb
pop
jo
inc
ljmp
ds
dec
lea
lahf
in
adc
mov
insb
cltd
pop
pop
xlat
sub
adc
rcrl
mov
aas
mov
mov
sarb
int3
push
fdivr
enter
and
dec
xor
outsl
jbe
mov
jmp
hlt
pushf
leave
jae
mov
adc
sbb
xchg
xchg
stos
push
and
dec
xchg
push
sbb
scas
jg
push
orl
ds
cwtl
inc
inc
push
cwtl
jne
jbe
iret
adc
lret
popf
sbb
fisttps
fdivrs
loop
add
dec
clc
aad
push
xlat
out
add
dec
lods
movsb
pushf
shlb
aad
mov
cmpsl
dec
lret
or
xor
mov
jl
sahf
repnz
mov
mov
aad
in
call
mov
or
cmpb
imul
jae
inc
rcl
addr16
adc
cmp
jnp
pop
inc
pop
popa
movsl
imul
cmc
inc
xor
dec
and
nop
lcall
sub
mov
insb
cmc
xchg
arpl
testb
mov
pop
jbe
cli
mov
mov
test
dec
cmpsb
arpl
mov
inc
and
push
mov
lret
js
mov
mov
mov
ret
adc
cmp
ret
cli
add
jge
clc
sti
leave
icebp
jne
sahf
cmp
loope
mov
xchg
movsl
faddp
loop
cwtl
add
lods
xchg
and
hlt
xor
jo
outsl
in
lret
shll
aaa
xchg
into
push
loope
dec
sarl
cs
push
xchg
fwait
hlt
mov
in
adc
mov
rcrb
adc
inc
inc
or
cmp
push
pop
mov
adc
adcb
mov
push
mov
cwtl
xor
xchg
aad
out
sub
arpl
xor
and
sub
pop
or
nop
bound
or
and
adc
jbe
mov
dec
push
adc
fldenv
add
orb
scas
imul
xlat
ja
stc
out
cmp
nop
in
das
insl
inc
out
jmp
adc
sahf
adc
stos
fnstenv
pop
sbb
xor
iret
push
imulb
lods
cmc
call
inc
jge
mov
jp
mov
mov
push
arpl
xchg
sub
pop
jmp
xchg
xor
dec
push
cmp
xor
test
cli
mov
add
sbb
mov
or
xchg
cs
xchg
int3
push
mov
mov
pusha
pop
and
testb
je
cmp
sbb
push
adc
or
push
int
lea
fisubrs
mov
ja
push
popa
mov
jle
leave
stc
xor
movsl
call
xchg
add
leave
and
fwait
pushf
add
cs
dec
rcl
dec
ret
cli
clc
adc
push
pop
daa
cmp
out
dec
mov
fcoms
lock
push
xor
mov
inc
loop
daa
mov
or
adc
mov
mov
jl,pn
out
testb
fadds
or
sbb
inc
into
imul
pop
je
das
push
jae
shll
jge,pt
scas
loopne
inc
sbb
dec
inc
pusha
ret
aam
jp
and
popf
outsl
mov
lcall
jo
add
and
mov
in
mov
test
gs
lcall
inc
out
inc
jge
mov
cmp
and
mov
in
mov
mov
dec
fs
adc
lds
push
lret
arpl
sbb
cwtl
inc
movb
adcl
and
cmp
dec
scas
fdivrl
sahf
cwtl
out
rclb
fldt
xchg
mov
insb
sahf
push
push
ljmp
insb
neg
scas
xchg
fidivrl
pusha
inc
cmp
loope
loopne
inc
lock
repnz
dec
cmpsb
cmp
mov
addr16
leave
pop
test
fs
dec
fs
fwait
mov
repnz
rcrl
sub
sbb
add
iret
test
pop
xchg
and
gs
mov
dec
push
outsb
nop
ja
xor
lods
loop
mov
cmp
sti
in
inc
call
inc
mov
call
inc
fidivl
push
push
or
les
inc
in
rcrl
sti
lcall
pop
mov
cld
outsb
pop
xor
mov
ret
arpl
cwtl
arpl
test
test
cli
ret
xor
test
imul
das
data16
cmpl
or
enter
and
inc
push
pusha
sub
add
pop
push
test
lahf
dec
xor
lahf
jno
test
xchg
inc
das
sbb
das
ja
imul
out
dec
iret
sub
lods
jecxz
test
shlw
subb
scas
mov
ds
jle
cltd
in
movsl
xchg
popa
sbb
leave
clc
push
xorl
stos
or
adc
fsubs
out
ljmp
add
mov
das
xchg
jbe
xor
pusha
inc
xchg
xorl
cmpsb
fcmovne
iret
mov
in
mov
cmpb
sub
xorb
aaa
imul
pop
dec
mov
pop
cmpb
mov
out
roll
add
out
bound
fs
adc
or
mov
pop
adc
lcall
inc
mov
or
and
stos
pop
dec
push
cmp
mov
pop
std
cwtl
loopne
outsb
not
rol
ljmp
repz
pop
jo
out
mov
js
popa
pop
push
cmc
dec
pop
jmp
es
js
cmp
mov
xorb
jae
push
xor
loope
in
dec
in
loopne
pop
lahf
pusha
bound
mov
cld
jp
push
std
shlb
dec
pop
das
iret
stos
pop
aas
sbb
inc
jne
add
test
es
aad
popa
int
xlat
mov
inc
fwait
mov
es
fbstp
cld
and
sub
dec
or
out
and
add
or
and
dec
mov
inc
push
arpl
fs
call
popf
je
and
jl
jmp
mov
xor
fwait
adc
cmc
fisubs
arpl
sbbb
rclb
xor
inc
mov
mov
lret
call
and
in
imulb
jl
fsubl
mov
mov
loope
push
mov
adc
xor
xchg
gs
dec
xor
enter
xchg
fstl
add
out
pop
xor
ret
bound
push
out
mov
cmc
xor
cltd
inc
dec
jmp
mov
popa
sbb
xor
cmp
cmp
adc
dec
mov
xchg
jns
jecxz
pop
enter
mov
sub
inc
out
adc
xchg
lret
fiaddl
cs
shll
std
add
sbb
loope
cmpsl
int
pop
addl
mov
sub
fbstp
pusha
push
mov
dec
xlat
pop
out
sub
es
fdiv
mov
nop
ja
aam
in
fdivrl
sahf
aam
int
cmpl
cli
pop
dec
das
adc
scas
imul
sbb
cld
andl
mov
sbb
aas
add
ljmp
orb
fisttps
xchg
adc
xor
stc
xchg
sub
arpl
fs
pusha
stos
add
adc
lret
popf
shrb
icebp
mov
mov
inc
rorl
ret
lock
shrl
mov
ret
icebp
jecxz
or
lea
popa
scas
push
sbb
cmp
fcmove
test
movsb
cmc
dec
sbb
stos
xchg
and
mov
pop
sbb
js
push
xlat
xor
and
loopne
out
jmp
add
xchg
aas
out
mov
lea
lods
sbb
jge
sub
dec
int3
in
test
pop
xchg
add
lock
mov
stos
scas
adc
xchg
or
jb
xor
adc
sti
popl
aad
std
ja
and
sub
mov
fwait
mov
jae
es
icebp
movsb
cmp
xchg
imul
mov
imulb
sub
xchg
mov
inc
cmp
sub
lret
jbe
cmp
sub
fnstsw
add
es
les
lds
dec
sub
test
insb
outsb
sub
jbe
je
mov
sbb
stc
pop
and
inc
inc
push
jl
repnz
add
cmpsb
dec
push
push
in
jmp
imul
outsb
mov
fwait
cltd
mov
mov
cmp
cmp
ret
push
add
inc
hlt
outsl
ljmp
sub
mov
dec
add
fbld
das
in
xor
and
xchg
xchg
jo
imul
insb
stos
add
jp
inc
inc
inc
insl
jne
push
xchg
lods
mov
or
mov
mov
sti
xor
xchg
sbb
in
adc
or
xchg
outsl
mov
std
ret
outsl
rcrb
xchg
test
repnz
mov
push
inc
mov
int3
xor
mov
xor
ds
insb
pop
pop
xor
je
or
inc
incl
pop
mov
mov
dec
test
in
xorb
mov
orb
ret
xchg
push
sbb
mov
xchg
mov
pop
xchg
ljmp
stc
outsb
inc
adc
cmpsb
jle
mov
jae
imul
and
push
and
cmp
pushf
lret
out
adc
popf
dec
lds
sbb
call
cmp
sbb
jg
sbb
sahf
push
xchg
jmp
repnz
lods
in
cli
xchg
scas
mov
aaa
shlb
lods
movsb
ja
dec
sahf
das
out
enter
incl
out
jmp
xchg
inc
repnz
pop
inc
rorb
pop
push
inc
pop
inc
sub
cmp
push
out
pushf
addb
xor
cs
jnp
xorb
cmc
xchg
sbb
fwait
or
pushf
loope
mov
cmc
push
stos
idivb
inc
push
hlt
inc
xchg
test
xchg
add
xor
pushf
cwtl
rorl
imul
xchg
test
movsb
int3
sub
cwtl
ja
inc
dec
sub
mov
adc
pop
and
pop
and
push
sub
andb
mov
gs
sbb
arpl
add
jge
fists
xchg
loopne
mov
ss
lret
push
lahf
pop
jbe
jo
push
jns
adc
xchg
push
repz
inc
jl
std
mov
or
ss
lods
xor
ss
mov
inc
add
ds
inc
push
enter
fcompp
adc
pop
add
idiv
jbe
mov
leave
add
out
lock
stos
fs
jae
jns
aas
cs
mov
mov
add
ds
pushf
stc
lods
push
inc
dec
xor
sub
mov
std
fcomip
lods
lea
pop
es
cltd
push
imul
nop
cltd
js
andl
add
mov
jnp
addl
cmp
in
mov
cmc
ret
setnp
sarl
mov
shrl
jb
push
lods
popa
movsb
and
out
and
movsl
in
adc
lret
dec
repz
lret
jecxz
cmp
push
inc
lea
adc
and
movsl
inc
mov
pop
test
and
out
inc
cmp
mov
je
cli
mov
repz
pop
mov
in
sar
mov
cld
xchg
mov
out
xchg
aad
mov
lods
test
pop
cmp
jb
int
push
in
mov
std
push
or
cmp
movsb
push
mov
lcall
rcrb
push
cmp
in
cltd
out
test
push
push
inc
sbb
mov
shl
add
cmp
cmp
lret
cmp
adc
sub
and
push
sub
scas
push
jmp
add
mov
dec
pop
outsl
inc
sarl
or
add
and
cmpsb
aad
jmp
inc
xor
sarb
cmp
jmp
icebp
popa
scas
addl
orb
mov
push
sbb
out
les
sbb
les
pop
mov
sti
jo
cmp
fnstenv
arpl
sub
xchg
pop
cmp
shlb
xor
sub
leave
xchg
sub
aam
cmp
push
insl
sub
iret
nop
push
popf
ja
rclb
xlat
pop
push
ficompl
pop
inc
mov
mov
cs
mov
lret
dec
push
lods
ds
push
ja
setnp
rclb
jmp
mov
fs
xchg
clc
jne,pn
xchg
cld
push
mov
dec
mov
or
cmp
dec
lret
fnsave
addr16
mov
out
arpl
and
push
call
rolb
jp
and
inc
es
inc
mov
addl
add
xor
add
xor
clc
js
add
mov
and
jp
ret
arpl
cmpsb
adc
out
test
xchg
mov
cwtl
lods
lahf
clc
jp
jo
or
shll
lock
popf
or
add
mov
mov
aas
leave
fnstsw
data16
mulb
cmpl
sbb
xchg
dec
sbb
nop
or
cmp
fcmovnbe
mov
lret
std
push
cmp
mov
mov
push
inc
mov
xchg
or
loop
shlb
ljmp
int3
imul
fstl
arpl
xchg
int3
sarl
sbb
and
push
inc
jb
shl
movsb
cs
and
dec
jge
scas
lret
or
xchg
jne
std
sbb
rcr
mov
shl
stc
outsb
repz
jbe
imul
mov
in
ljmp
and
mov
push
jecxz
sbb
fidivs
sbb
inc
jno
xor
das
aaa
mov
pop
nop
in
cmc
dec
popf
test
out
mov
test
cmc
out
and
jmp
lock
xor
cwtl
push
stc
in
adc
addr16
cmpsb
insb
xchg
jae
xchg
and
pop
test
neg
pop
lahf
js
jg
jp
sub
sbb
sar
movsl
push
xchg
sbb
out
cmpsl
cmp
into
or
xlat
shlb
or
push
insl
mov
lods
movsl
mov
sbb
insb
jl
pop
pop
jnp
mov
pop
test
ret
cmp
hlt
in
xorb
je
dec
jmp
and
data16
mov
out
fstl
sarl
enter
dec
pushf
sbb
adc
adc
dec
mov
mov
es
aam
pavgw
sub
fidivrs
test
aad
dec
adc
xor
test
xor
fldl
arpl
mov
mov
xchg
mov
adc
pop
mov
xchg
movsb
cmpl
and
xchg
scas
fs
push
lods
cld
inc
mov
ret
test
mov
mov
aas
insb
push
mov
push
adc
and
and
mov
pusha
ret
sub
add
mov
popa
or
aas
nop
pop
rcll
arpl
add
inc
jecxz
sub
fisubs
aaa
cmc
adc
sbb
cld
testb
leave
shlb
out
hlt
aaa
roll
jns
xor
mov
xor
lcall
mov
adc
fmull
fneni(8087
das
fidivrs
jle
pushf
mov
dec
cmp
sub
xor
xor
add
xchg
jle
sbb
lea
mov
and
movsb
aas
jnp
adc
mov
push
adc
and
int
sub
inc
loope
cld
ret
out
push
mov
xor
rcr
into
shll
imul
fisttpl
aaa
pop
mov
lret
aad
sub
outsb
les
jl
mov
adc
sahf
sbb
stos
pop
and
cmp
bound
jg
lcall
outsl
jmp
les
fildll
int3
mov
popa
add
mov
aam
jb
cld
jecxz
int
aam
or
lds
push
jmp
sti
sub
and
sub
ficoml
test
push
ficomps
mov
movsl
and
jne
hlt
pusha
imull
and
dec
frstor
lret
and
test
test
idivl
mov
xor
iret
adc
jmp
mov
fs
in
cmpsl
insb
sbb
jnp
add
xchg
and
repnz
fsub
pop
enter
pop
add
push
les
cmp
push
cmpl
mov
lahf
repz
push
mov
je
or
inc
mov
pop
pushf
repz
add
push
add
sti
loop
dec
std
mov
aam
fld
mov
jge
hlt
sub
in
cmp
lock
mov
mov
mov
inc
in
xchg
adc
call
adc
fimuls
shlb
pop
push
and
cmpsb
push
repnz
pop
jns
sub
jle
fcmovnu
and
add
pop
adc
cmp
rclb
aad
lods
jge
push
test
cmc
dec
movntss
mov
loopne
mov
adc
loop
mov
inc
lds
dec
mov
out
jl
push
add
int3
xor
pusha
adc
mov
fsubs
gs
leave
sub
xor
fs
clc
data16
icebp
jns
fisubs
xor
in
icebp
mov
cld
enter
sub
pop
lods
pop
sbb
notb
sarb
jb
xor
je
iret
in
push
test
mov
loope
fidivrl
or
les
test
stos
and
mov
popf
sti
aaa
aaa
test
jl
or
push
jae
dec
repz
cmpsb
inc
push
insl
xchg
push
sahf
mov
aaa
pop
insb
push
sbb
mov
fistl
inc
lds
push
std
cmp
inc
dec
popl
xor
xchg
stc
and
aaa
out
outsl
loopne
mov
loop
test
into
repnz
cmp
arpl
shr
push
jp
pop
add
scas
je
adc
pop
add
mov
mov
rolb
nop
cmpsb
leave
jle
sub
push
lock
out
mov
pushf
mov
jbe
lret
pusha
test
les
das
sub
pop
ja
xchg
xchg
fcomps
push
std
loopne
dec
cmp
mov
stos
rclb
adc
into
mov
lock
push
mov
xor
pop
rcrl
lcall
sahf
and
test
sbb
fisubrs
pop
jecxz
mov
out
es
test
xchg
xchg
outsb
lods
push
icebp
cmc
imul
jmp
ljmp
orl
sub
out
clc
and
jno
dec
ds
rclb
jmp
shlb
aad
cs
js
inc
sbb
mov
sub
adc
adcl
add
test
addr16
nop
pop
aad
dec
popf
inc
inc
inc
mov
call
inc
rclb
fdivp
cmpsl
adc
mov
fnsave
ljmp
out
mov
pop
cmpsl
xor
sti
cs
fcoml
call
sarl
sbb
out
xor
mull
add
fistpll
lds
jb
pop
aad
lods
sarb
movb
pusha
push
arpl
jge
lcall
out
bound
pop
pop
stc
pop
xchg
inc
xchg
jp
xchg
mov
add
clc
mov
call
mov
test
mov
ljmp
add
sbb
xchg
fstl
mov
repnz
jae
add
mov
out
cmpsb
lea
mov
js
out
and
jmp
out
add
stos
bound
inc
in
adc
mov
out
repnz
inc
es
dec
or
cmp
cmp
les
lahf
rol
and
sti
jnp
es
mov
int
int
xchg
jo
xlat
pop
stc
fadd
cmp
xor
pop
cmp
rolb
mov
rclb
and
clc
mov
enter
mov
mov
arpl
dec
lea
xchg
push
data16
fisubrs
or
test
adc
aam
ret
mov
mov
xor
push
fcomp
and
xchg
dec
sahf
sub
into
and
popa
push
int
jb,pt
sub
or
or
es
fstpt
cmpsl
gs
mov
js
push
enter
popa
daa
test
mov
push
lock
pop
insl
xor
and
jmp
and
fstpt
or
adc
adc
pop
jb
and
mov
mov
xor
ljmp
mov
inc
insb
ja
jp
ljmp
addr16
mov
pop
mov
std
add
push
int3
ds
lods
sub
mov
jns
dec
mov
cmp
icebp
outsb
stos
in
popf
adc
insb
shrl
dec
shlb
fwait
adc
icebp
loop
or
popa
dec
test
mov
into
pushf
shrb
lock
or
outsb
movsl
xor
pop
dec
and
test
push
int
loopne
insb
pop
lock
cmp
cmp
cmp
jb
xchg
sahf
lds
sbb
xlat
loope
fiadds
jmp
inc
inc
cs
out
or
pop
xchg
xorb
repz
pop
jl
pusha
cwtl
sbb
adc
movsb
lret
and
jno
inc
pop
mov
rcrb
jnp
das
mov
roll
scas
test
aad
xchg
jle
fptan
not
mov
loopne
stc
lods
into
push
test
or
into
cli
jns
out
lahf
lret
dec
dec
lret
jo
xor
cs
mov
xlat
cmp
fisttpl
mov
test
mov
mov
push
fs
repz
inc
insb
push
sbb
adc
jecxz
pop
rcrb
mov
stc
push
cmpb
mov
cwtl
jle
xchg
leave
call
sub
icebp
xor
fistpll
imul
adc
push
ret
orb
cmp
andl
nop
sbb
or
movsb
bound
int
sub
cld
popa
in
pop
lock
ja
sti
adc
call
sub
inc
add
cmpsl
lahf
int3
dec
jbe
jo
in
xchg
xor
cmc
icebp
mov
idivb
cmc
push
mov
dec
je
push
sbb
lods
pop
or
js
movsb
dec
xchg
neg
les
sbb
in
fwait
repnz
movsb
jle
bound
xchg
adc
push
mov
clc
leave
dec
xchg
inc
mov
inc
jp
sub
lret
std
and
inc
hlt
mov
xchg
popf
mov
sbb
pop
adc
ja
imul
pop
jbe
fdivr
cmp
leave
mov
fwait
leave
jp
xchg
and
shrl
js
daa
add
dec
daa
out
arpl
fldt
incl
adc
mov
or
jne
pop
iret
push
pop
lock
loop
mov
mov
sub
cmpsb
push
sbb
dec
adc
mov
push
adc
mov
jno
mov
rclb
jno
fsubl
movsl
stc
ljmp
cld
cmovp
push
xor
xchg
mov
xor
in
stc
sbb
aas
ss
sub
inc
pop
out
repnz
jmp
dec
dec
fdivs
xchg
mov
add
int3
ficomps
std
jmp
and
or
mov
outsb
pop
inc
loop
shrl
mov
add
rorl
cltd
cs
test
popf
inc
xlat
mov
dec
icebp
inc
aaa
frstors
and
add
js
repnz
cmp
or
in
jp
rcll
icebp
call
and
jp
iret
xchg
add
xor
cmp
pop
sub
shlb
mov
pop
bound
cmp
insl
pop
test
xor
daa
repnz
jnp
add
inc
bnd
cld
fbld
mov
xchg
jbe
add
out
inc
hlt
xchg
test
xchg
push
js
jmp
jp
and
push
cmp
insb
xchg
ljmp
push
ret
jp
and
lock
shll
je
jle
outsb
mov
lcall
scas
das
shlb
into
sahf
mov
sub
js
call
ja
data16
pop
dec
sbb
push
and
mov
pop
addr16
cmp
mov
mov
or
xor
cmp
add
jl
mov
sbbl
test
bound
das
orl
fisttpl
sarb
gs
sbb
stos
imul
popa
adc
out
dec
push
or
dec
sahf
pop
push
stos
jmp
dec
andb
bound
call
mov
add
jp
xor
hlt
sub
xchg
int
push
mov
push
dec
je
mov
cmp
into
loope
cmp
lahf
xchg
push
cmp
jo
sbb
add
sub
scas
mov
repnz
and
mov
enter
imul
iret
adc
xor
inc
es
jmp
sbb
jmp
out
dec
js
call
lea
cmc
push
lret
int3
mov
add
hlt
repnz
std
lods
jb
aam
pop
jle
adc
adc
sbb
cmc
ss
test
aaa
ficoms
loope
or
cltd
jmp
sbb
popf
loopne
out
or
jns
ja
mov
jmp
sub
popa
or
or
jg
add
pop
cmp
outsb
xor
cmp
dec
popa
xchg
xor
jecxz
adc
or
mov
arpl
or
nop
imul
call
mov
sbb
les
pop
lcall
sbb
mov
xlat
int
mov
lret
cmpsb
jmp
pop
es
inc
mov
bound
cs
in
adc
rorl
loop
gs
roll
mov
xchg
les
aad
adc
fidivl
push
jns
sub
mov
into
sbb
xchg
imul
dec
ja
sub
jle
lds
adc
adc
test
and
ljmp
movsl
repz
inc
in
adc
jb
mov
rcll
pop
stc
loopne
sub
xor
sbb
addb
mov
cmp
sarb
mov
jnp
xchg
idivl
sub
xchg
add
add
push
or
xor
rep
xorb
jge
shll
xchg
outsl
insb
cmp
subps
xchg
pop
fsubrs
out
mov
push
sbb
or
or
addr16
mov
pop
dec
into
cwtl
jle
icebp
mov
push
movsl
and
jp
push
jne
xor
mov
push
and
int
inc
subl
add
add
cltd
shrb
mov
xchg
cmp
leave
sub
mov
ss
mov
push
test
mov
mov
xor
add
cs
cs
xchg
pop
test
push
lret
sub
in
jp
aaa
jno
stos
cmpsb
pop
xchg
stc
push
scas
ds
xchg
call
push
push
adc
int3
push
xchg
out
xchg
jmp
pusha
jecxz
iret
rclb
push
add
push
add
push
je
fldenv
jae
cmp
cmpb
adc
insb
sarl
adc
mov
orl
dec
or
enter
push
hlt
std
imul
inc
and
lret
cwtl
lea
mov
fdivs
arpl
pop
xchg
push
pop
subl
fnstenv
push
dec
push
ret
je
pop
popl
xor
loop
enter
sub
testb
fs
jmp
jg
mov
xchg
lret
adc
icebp
dec
xchg
mov
bound
insl
ficoml
xchg
mov
lock
adc
mov
decl
xchg
xchg
mov
dec
scas
jbe
mov
xor
in
push
cmp
pop
sbb
add
xchg
aas
xchg
jb
stc
jge
mov
ljmp
add
sub
jno
lret
cld
scas
cmp
aas
fsubs
adc
inc
dec
inc
pop
aad
jg
cltd
mulb
arpl
mov
sub
outsl
aaa
xor
mov
or
bound
call
sub
dec
push
mov
call
out
cwtl
jecxz
mov
push
pop
repnz
push
cmpsl
aam
inc
push
pop
pop
fwait
outsl
inc
push
or
sbb
sub
scas
sarb
push
cmpb
adc
mov
out
repnz
stos
into
arpl
fidivrs
loop
mov
xchg
leave
or
push
cmp
jg
sarb
loope
inc
cmpsl
xlat
sahf
movl
sub
lods
hlt
push
dec
sbb
leave
adc
in
test
subl
pop
popf
popa
cmp
in
dec
jecxz
xchg
ja
xor
xlat
pop
shll
cwtl
mov
int3
xor
jns
add
add
sbb
call
pop
test
clc
movsb
cmpsb
and
mov
data16
in
and
in
fst
sub
and
xlat
loop
data16
xor
addr16
addr16
xchg
addr16
sbb
or
add
lds
orb
xchg
inc
xor
pop
cs
outsl
pop
cmc
sbb
inc
xorl
or
inc
sahf
mov
xchg
lea
jle
rolb
add
pop
inc
rorb
xchg
cwtl
and
xor
in
cli
push
mov
xor
mov
rcll
xor
sbb
fstps
sbb
sub
adc
aam
jmp
adc
enter
sbb
stos
mov
xchg
pop
inc
in
stc
xchg
es
mov
sbb
sbb
pop
inc
aam
jae
mov
jmp
xor
mov
addr16
nop
mov
lods
pop
xlat
fadd
inc
aam
idivb
inc
out
sahf
leave
ret
dec
jae
test
add
sbb
add
imul
ja
sub
and
jno
jb
pop
or
lods
adcl
adc
ret
inc
mov
stos
stos
dec
pop
fnsave
inc
inc
cli
jne
clc
sbb
loopne
jecxz
xchg
mov
inc
xchg
jle
push
pop
dec
ror
jmp
shll
adc
jg
jmp
outsl
mov
cmpsl
push
add
mov
and
repz
lcall
or
fcmove
cld
adc
lret
testl
cmp
cld
outsl
mov
in
adc
cmp
in
cmp
push
lods
out
xchg
loope
ret
test
test
or
and
jb
test
cmc
cmpsb
or
outsb
pop
lock
clc
outsb
add
aad
sbb
scas
inc
xor
pop
fisttpl
xchg
sub
icebp
sbb
fnsave
fisubl
jmp
cmp
ljmp
sub
pop
inc
in
scas
pop
cmp
push
mov
jecxz
fcmovnu
mov
mov
push
popa
jb
es
pop
mov
in
add
lods
int3
push
and
stos
loopne
cmp
sbb
lahf
repz
pushf
mov
sti
rcr
sbb
push
jmp
lock
repz
inc
push
push
jp
cmc
jmp
cmpsl
jp
add
arpl
imul
jecxz
mov
xor
sub
pop
mov
sub
ljmp
xchg
ret
xor
mov
sbb
in
xlat
out
popa
cmp
pop
cli
push
add
js
icebp
add
ret
and
mov
mov
das
and
sarl
fisubl
popf
adc
sahf
cmc
lds
outsb
daa
test
push
sub
lcall
sub
in
lcall
push
stos
sahf
adc
lcall
sbb
movsb
add
sbb
mov
inc
je
pop
lcall
cmp
sub
in
aad
xor
leave
cmp
sbb
mov
inc
dec
lds
ror
shrl
sub
in
pop
mov
rclb
mov
cmp
push
xor
pop
idiv
push
or
jp
femms
jns
lods
jl
lea
pop
mov
push
pop
cmp
ds
xor
push
test
mov
jno
adc
add
xchg
pop
xor
loopne
rcrb
mov
stos
mov
push
ds
push
xchg
js
movhps
lahf
in
data16
jb
popf
divl
pop
fs
jmp
dec
sti
push
mov
jbe
mov
xchg
mov
iret
push
or
enter
das
add
or
testl
cltd
adc
xor
cmp
sbb
and
fucom
subl
or
test
mov
dec
pop
adc
mov
sahf
cmpsl
imul
insl
popa
ret
xlat
mov
jp,pt
mov
aam
in
hlt
sahf
mov
sbb
jmp
add
sti
push
lock
mov
fdivrs
popf
adc
test
mov
jmp
adc
iret
ljmp
xor
test
imull
jg
mov
int
cmp
lods
addl
xor
pop
and
lods
jne
imul
mov
imul
pop
adcb
pop
repz
and
push
pop
push
popf
imul
mov
andl
sbbl
push
repnz
jnp
dec
mov
in
sbb
jnp
sti
movsb
dec
cmp
test
ja
inc
rcrl
push
dec
popa
ljmp
inc
xchg
mov
and
cwtl
les
ret
mov
mov
cmp
loop
mov
in
inc
add
push
pop
mov
jle
andb
fldenv
arpl
inc
aam
fstps
mov
and
leave
into
stos
and
js
cmp
fisttps
jle
fucom
push
ror
adc
adc
inc
arpl
mov
into
call
call
jle
xor
pushw
adc
cmpsb
loopne
xchg
mov
cmp
lcall
adc
jbe
adc
xorl
int
cli
sub
push
mov
xchg
imul
mov
mov
mov
sbb
aaa
inc
mov
cmpsl
mov
insl
xchg
dec
mov
sub
cmp
xlat
aas
jno
in
jbe
xor
out
jecxz
lahf
cmp
std
jbe
insl
idivb
popa
sahf
icebp
test
mov
sub
shl
lret
jmp
xor
mov
push
dec
sarb
pop
fimuls
in
xchg
iret
into
jmp
leave
xor
sub
or
std
pushw
push
jmp
or
fisttpl
xchg
pop
fiaddl
or
iret
gs
fsts
shl
mov
pop
cli
int
insb
pop
repnz
fbstp
sub
push
scas
ret
mov
js
mov
add
fwait
pop
add
push
and
push
dec
out
aas
jp
cmp
cs
shrl
mov
pop
push
xchg
mov
lcall
xchg
mov
daa
push
cmpsb
leave
push
inc
out
icebp
xchg
test
adc
cmp
repz
es
xor
aam
jne
repnz
daa
mov
out
je,pt
ds
shr
jle
es
mov
insb
mov
ret
xlat
lcall
jmp
dec
call
fmul
inc
cwtl
pop
push
add
push
in
pop
hlt
cmp
xor
out
jnp
stos
adc
xchg
and
inc
pop
sbb
insb
mov
pop
mov
std
adc
xchg
sub
jle
mov
lock
jnp
xor
aad
jne
add
xchg
sub
imul
addl
push
jb
xchg
xchg
outsl
sub
xchg
mov
rorl
add
fstp
add
insl
cmpsb
mov
aad
adc
cmp
outsb
jge
adc
int3
ret
orl
push
clc
mov
in
inc
out
sub
inc
inc
aas
push
in
mov
loopne
push
mov
repnz
ret
lcall
xlat
mov
mull
cmpsb
jge
pop
sub
rolb
popf
fistpll
mov
xorl
push
push
add
std
mov
movb
mov
mov
mov
xor
mov
aaa
out
pop
rcl
mov
sub
lds
inc
sub
or
add
jge
out
daa
cmp
test
fucomp
add
repnz
push
and
dec
lret
pop
sub
push
push
cmpsl
add
push
negl
mov
repnz
loopne
mov
inc
dec
repnz
push
loope
ja
imul
pop
sub
rclb
jae
fcmovu
sbbl
cmpsb
jo
insb
gs
repnz
mov
call
mov
jmp
addl
inc
mov
dec
fisttpl
insl
jo
cmp
push
bound
ja
xchg
inc
pop
xor
or
or
es
ds
call
je
add
fcmovb
mov
aaa
ret
out
ret
dec
adc
mov
xchg
test
cmp
mov
fildl
sub
cs
mov
mov
jecxz
adc
cmc
ficomps
sub
jmp
and
dec
and
pop
adc
inc
stos
and
sub
repz
jl
pop
or
dec
xchg
cmp
loop
cli
jae
shrl
cmp
mov
mov
mov
jmp
pavgb
nop
cld
inc
loope
lds
data16
xlat
and
stos
je
pop
stos
fnstsw
movsb
out
hlt
sub
arpl
insb
cmp
cli
lods
in
mov
mov
mov
das
bound
mov
mov
pop
push
adc
inc
rcrl
dec
push
adc
dec
xchg
push
mov
or
subb
popa
xlat
xchg
adcb
ljmp
pop
fildl
scas
cmc
add
popf
mov
xchg
and
icebp
xorb
inc
gs
xlat
insl
sbb
sub
out
xchg
nop
out
aas
rcl
inc
aaa
insl
pop
shlb
icebp
mov
out
popa
ja
addr16
pop
seta
dec
imul
mov
sbb
out
aad
repz
jg
shrb
lods
lds
jg
mov
movsb
rclb
mov
fmull
addr16
jge
push
dec
dec
movsb
lcall
push
in
push
arpl
fbstp
mov
pop
inc
mov
ljmp
cmp
aaa
lret
xchg
xchg
pop
hlt
shl
test
mov
add
inc
arpl
push
gs
pop
pop
jnp
fimull
adc
scas
int3
sub
scas
std
fisttpl
or
mov
outsb
mov
or
or
imul
insb
rcrl
cmc
xlat
sub
cld
cmp
jno
pop
xlat
std
iret
sbb
inc
mov
sub
jno
xlat
xor
xchg
xorb
jae
pop
nopl
xorl
cltd
cmpsb
jmp
sbbb
clc
xchg
xor
cmp
jno
aad
es
mov
or
xor
sbb
and
fwait
push
mov
jecxz
jnp
cmp
sbb
adc
jl
push
jle
push
xchg
push
rorb
mov
adc
lcall
jecxz
pop
pop
ss
inc
mov
fisubs
repnz
cmp
test
mov
test
mov
movsl
sub
inc
jmp
add
mov
mov
ret
fcomip
jo
inc
in
movsl
sahf
loop
push
cmpsl
sbb
cmp
aaa
out
or
xor
data16
addr16
mov
imul
movsl
mov
repz
rorb
fcmovu
fsubl
xor
inc
sub
imul
push
roll
inc
out
pushf
fcoms
jns
push
pop
mov
inc
push
dec
cmpsb
push
ficoml
and
push
cmp
jne
mov
loope
insb
xchg
out
outsb
add
xor
pop
ret
imul
push
or
out
out
mov
outsb
cmpsb
pop
outsb
outsl
out
mov
push
mov
mov
aaa
ds
cmc
xchg
test
bound
mov
adc
xlat
mov
stos
add
insb
addr16
xlat
dec
pop
in
xchg
and
add
mov
mov
test
pop
pop
inc
aad
pop
push
nop
aad
pop
add
jno
mov
imul
dec
dec
imul
mov
les
or
pop
in
pushf
mov
jns
fwait
out
add
push
add
mov
lahf
sbb
or
aad
mov
push
xor
rcll
das
inc
or
xchg
daa
sub
movsb
popf
inc
jno
icebp
jno
ret
xor
cwtl
in
popa
stos
arpl
mov
mov
pop
pop
jecxz
mov
ret
loope
stos
add
xor
xchg
inc
jno
adc
jne
ret
fcmove
mov
add
stos
or
repz
mov
jecxz
mov
nop
dec
and
vmovdqa
jecxz
ja
fsubrs
xchg
mov
xchg
nop
popa
outsb
xchg
ficomps
xor
adc
inc
cltd
push
lea
arpl
jl
pop
sbb
pushf
mov
xchg
xchg
scas
pop
inc
and
mov
xchg
lcall
repz
push
cmpsb
pop
clc
xchg
test
in
cmc
mov
add
jp
cs
xchg
mov
shlb
pop
cli
xchg
lods
ja
rcrl
push
or
fwait
cli
mov
lahf
mov
cmpsl
int3
pop
pop
cmp
pop
call
push
inc
inc
pop
and
pop
adcb
inc
mov
jae
fiadds
push
pop
push
subb
mov
adc
push
push
dec
ret
pop
cmp
inc
add
dec
pop
repz
lret
clc
cmpsb
cld
pop
out
mov
test
inc
mov
xchg
mov
add
sub
addl
out
addr16
fiaddl
pop
movsl
dec
vpslld
mov
aas
sbb
std
fdivs
test
scas
mov
push
mov
fs
arpl
xor
xor
mov
scas
in
pop
test
test
push
rorb
inc
shrl
mov
cld
pop
js
jne
sub
jbe
js
in
mov
dec
mov
add
push
lds
add
xlat
jmp
mov
mov
adc
and
sbb
cmp
inc
cmp
inc
ja
test
int3
stc
cmp
rolb
out
incl
xchg
lret
outsl
mov
cmp
and
int
add
insb
and
pop
lods
mov
cmova
push
xor
shll
or
sbb
rcl
loop
bound
sub
imulb
jb
mov
mov
int
repz
xor
push
inc
subb
in
sbb
inc
gs
jl
mov
xor
ret
enter
push
ret
mov
sub
mov
xlat
sbb
data16
lock
jl
inc
ficoml
jl
clc
lock
test
hlt
jb
add
cs
ficomps
mov
sbb
xor
popf
xor
dec
jne
mov
ja
sub
enter
sbb
scas
int3
push
ret
ss
fs
into
xchg
fnsave
mov
or
mov
mov
aam
in
mov
mov
mov
add
push
jmp
or
bound
call
pop
or
mov
adc
iret
arpl
shlb
sub
or
mov
fdivr
sbb
mov
lret
cmp
mov
dec
add
and
jp
lret
push
dec
lret
fbld
add
xchg
push
jmp
leave
xchg
stos
push
push
out
pusha
xor
insb
arpl
test
hlt
mov
repz
cli
scas
cmc
arpl
das
xor
cs
mov
std
movsb
push
jg
jge
xor
das
ljmp
les
fs
add
sbb
test
hlt
jecxz
push
mov
jmp
inc
sbb
dec
dec
pop
pop
push
cs
test
add
outsl
cwtl
xor
pop
ja
or
mov
mov
and
lret
hlt
ds
sbb
stc
outsb
and
call
cmp
jecxz
inc
mov
in
ret
pop
jo
pop
js
sbb
push
mov
push
js
or
ds
test
js
and
inc
adc
fucom
mov
outsl
adc
bound
pusha
stos
fidivl
add
inc
mov
inc
ja
ret
and
dec
test
stos
fstpt
fsub
notl
mov
fsubs
xor
fisubl
out
xchg
mov
std
dec
xchg
test
adcb
mov
call
xchg
jmp
ret
sbb
jnp
aad
inc
cmp
sbb
jle
call
xchg
cmp
xchg
int
adc
aam
outsl
mov
jl
pop
inc
jnp
stos
lret
adcb
cwtl
test
aaa
aas
xlat
imul
and
imulb
loop
jge
lock
jbe
mov
inc
dec
stos
pusha
cs
fwait
sbbl
add
inc
jo
push
dec
int3
jo
lahf
cmp
cld
xor
dec
iret
adc
fidivl
push
mov
push
mov
pusha
imull
shrl
lcall
xor
hlt
jg
pop
mov
mov
movsw
movsb
lret
mov
push
dec
jnp
pop
notb
mov
mov
or
pushf
jo
mov
ljmp
rcr
xchg
push
cmp
gs
out
or
cs
cld
daa
xor
jns
roll
pop
and
add
add
jae
cs
bound
adc
inc
ja
stc
pop
dec
xorb
mov
test
and
dec
fildll
jno
fisubrl
mov
mov
xchg
sub
ss
sub
pop
ficoms
mov
inc
or
xor
ret
sub
inc
and
xchg
imul
rclb
xchg
xchg
xor
or
call
mul
mov
adc
in
lock
dec
cld
adc
test
pop
dec
cmp
sarl
xor
mov
sub
cmp
out
ret
xchg
cwtl
pop
xchg
dec
jno
fwait
popf
es
imul
js
sbb
and
push
data16
dec
mov
and
xchg
das
mov
jmp
std
stc
lret
enter
push
mov
adc
pop
rcrl
cwtl
add
and
std
cwtl
sub
pop
test
mov
loop
push
lods
ljmp
fbstp
setnp
adc
mov
sbb
pop
pop
push
adc
push
xor
cmp
cwtl
mov
mov
out
or
jns
push
push
jge
cwtl
pop
inc
out
mov
cltd
popa
cs
imul
adc
fwait
push
hlt
mov
add
sub
add
pop
mov
pop
test
inc
scas
pop
jle
mov
andl
aam
xor
inc
mov
sbb
scas
scas
gs
pop
mov
test
and
xchg
jmp
bound
push
add
lea
es
pop
add
scas
ja
xchg
inc
add
xor
add
insl
mov
dec
push
out
aas
xchg
and
aaa
cltd
or
or
das
mov
inc
push
sahf
fistpl
gs
outsl
push
mov
repnz
pop
jae
pop
outsb
pop
xchg
push
push
repz
dec
xorl
push
add
std
daa
pop
loope
leave
ret
jo
insb
xor
sbb
cmpsl
inc
mov
psrld
ds
xor
into
jecxz
ds
pop
mull
sbb
xchg
into
and
pop
sub
je
insb
sub
mov
call
jno
xrelease
icebp
hlt
cmp
das
jecxz
and
dec
dec
fcomp
dec
mov
push
stos
push
cmp
sub
dec
ja
fisttpl
sahf
dec
loope
add
out
inc
xor
jg
jg
test
aas
sti
roll
adc
xchg
shrb
jnp
inc
push
adc
enter
pushf
mov
push
popf
sbb
dec
jo
push
cli
inc
cmp
push
inc
pop
stos
ret
xor
jge
mov
lods
lretw
sahf
and
stc
xchg
loope
cs
cld
pop
out
gs
ret
xchg
enter
test
ret
in
jmp
in
xchg
pop
stos
or
gs
movl
adc
jo
xchg
inc
fsubs
into
int
jbe
mov
dec
and
test
int
popa
aaa
xor
cwtl
sub
shll
or
lret
pushf
sub
or
int3
lss
popa
push
mov
stc
cmp
imul
inc
and
or
out
adc
lea
out
jge
hlt
test
or
in
mov
cs
sti
scas
sbbb
and
ret
jp
clc
adcb
mov
cwtl
and
xor
dec
jl
orb
pop
or
fcmovnbe
mov
lds
movsb
subb
sbb
add
mov
add
movsl
dec
ja
push
aaa
xchg
movsb
mov
or
xchg
xchg
jae
int3
outsl
push
pop
sub
xor
les
movsl
fwait
in
jecxz
pop
fwait
add
je
fsubrs
mov
push
xor
jg
cmc
push
pop
cmp
jo
imul
shrl
loop
sub
aas
popf
adc
shll
test
sarl
pop
inc
test
scas
movb
sub
mov
inc
into
or
cmpsb
xorl
mul
cld
mov
mov
ret
mov
mov
add
ret
xlat
cmc
jno
xchg
jae
jns
push
or
mov
nop
stc
cmpsl
stos
in
cmpsl
push
in
and
jle
xlat
jge
push
inc
xor
pop
arpl
iret
jle
lock
call
mov
mov
stos
mov
pop
cmp
jns
ss
fsubrl
pop
sbb
mov
data16
nop
enter
sub
inc
sbb
cli
xchg
les
int3
jmp
stc
jbe
or
lods
and
adc
adc
inc
or
fsubs
mov
jp
arpl
sub
mov
loope
xor
pop
into
shlb
and
lods
xor
dec
mov
int3
and
cwtl
xorb
cmp
fs
add
sub
leave
ljmp
pop
ljmp
or
cs
call
cltd
mov
test
sub
pop
add
dec
mov
mov
sub
mov
adc
ficompl
lahf
loope
lahf
push
add
mov
js
nop
cmpb
ds
lret
and
ficompl
leave
ret
divl
inc
std
js
mov
pop
dec
movsl
xlat
testb
adc
and
jns
cmp
lods
xor
popa
inc
jmp
push
push
and
push
fldlg2
pop
icebp
or
and
cmp
sub
sub
addr16
pushf
adc
movsl
jbe
mov
fisubl
push
lock
test
je
loope
std
mov
and
sahf
mov
jns
in
ror
test
add
ljmp
out
imul
and
push
mov
mov
fsubrs
ja
xor
fiaddl
jp
and
push
and
sub
rcll
cmp
mov
adc
xchg
add
lret
jns
pop
sub
mov
movsl
dec
push
add
outsb
mov
pop
push
or
add
jne
pop
push
cs
push
sub
pop
mov
sub
push
ja
xor
hlt
mov
adc
arpl
cmp
outsb
add
add
insb
or
push
push
jge
or
mov
mov
xlat
add
ret
push
mov
arpl
sbb
add
xor
jb
call
push
xchg
jmp
orb
mov
xor
mov
pop
or
scas
or
mov
xor
cmp
mov
mov
sub
add
dec
movsl
jle
aad
pop
pop
pop
mov
jp
fcompl
mov
lea
xor
out
lret
push
xor
push
int
xor
mov
lret
repnz
sarb
in
pop
repnz
adcb
and
psubw
lcall
pop
shl
push
xchg
data16
scas
and
stc
or
nop
pop
mov
push
clc
in
imul
scas
xchg
and
repz
fwait
adc
pop
xchg
dec
and
lock
and
stc
xor
lea
cmpl
stos
and
sarl
adc
test
xor
xor
lahf
pop
cmp
daa
sarl
pop
push
sub
cmp
stos
iret
mov
xor
xor
or
xorl
fisubs
in
jmp
jne
and
call
mov
stos
add
movsl
mov
or
arpl
push
stos
or
imul
rcr
js
or
cmpsl
mov
fcoms
inc
sbb
fnstsw
mov
dec
or
jmp
ficompl
mov
sbb
or
cs
cmp
cmp
xchg
mov
fldl
daa
xchg
testb
dec
dec
and
jmp
and
xor
push
jge
inc
mov
sbbl
sti
insl
dec
test
faddp
add
int
inc
clc
jne
out
inc
out
sub
pop
hlt
mov
or
orb
jecxz
add
sbb
imul
xchg
pusha
or
mov
push
shl
testl
lods
push
call
outsb
mov
dec
into
sub
dec
cs
add
fidivrl
cmpsb
rcr
fcoms
inc
gs
ljmp
outsb
xchg
outsb
andb
xchg
push
or
stc
jge
xor
rcrb
fs
xor
mov
mov
lock
mov
and
ret
mov
das
sbb
xchg
adc
repnz
sbb
and
jo
enter
mov
jecxz
jl
jecxz
jnp
das
or
push
cmp
mov
mov
xorl
popf
stos
or
xchg
add
out
mov
dec
pop
mov
push
in
dec
mov
and
and
pop
inc
push
filds
mov
xchg
shlb
cmc
xor
fisttpll
sbb
repnz
cmp
cmpsl
out
in
iret
sub
or
mov
and
lock
repz
pop
stos
insb
cmp
jae
sahf
pushf
adc
outsl
ret
add
mov
fldt
cmc
int
stos
and
cmp
xchg
xchg
mov
lock
jp
xchg
aas
pushf
sbbb
cmp
sub
cli
cli
cmpsl
pop
fimull
jmp
icebp
mov
scas
sbb
out
hlt
fidivrl
jno
add
and
inc
mov
repnz
es
loopne
jecxz
aam
mov
jb
aad
or
jbe
aas
xor
popa
jle
in
xchg
adc
xor
push
shlb
jl
cmpl
dec
pop
add
data16
jbe
xchg
out
add
push
in
imul
xchg
jg
or
push
stc
add
call
sub
jne
out
divb
sub
fistl
test
xor
mov
addr16
or
xchg
and
bound
pop
jbe
sbb
xlat
cmp
ret
jmp
xchg
int3
hlt
jp
sarl
or
cmpl
sub
fmul
ror
cmp
mov
cmp
movsl
lods
scas
iret
dec
jle
mov
and
orb
mov
or
push
test
cli
cli
lds
xor
cs
inc
jb
test
lock
test
inc
out
cmpl
add
jg
pop
decl
cmp
test
dec
and
xor
xchg
sti
in
data16
gs
add
push
fs
dec
in
jno
pop
mov
and
out
sbb
lret
sti
xlat
es
insl
inc
mov
les
fmull
faddl
sbb
pop
cmp
mov
hlt
dec
in
mov
movsl
mov
in
mov
push
jge
adc
cmp
ja
scas
loopne
cld
out
or
daa
mov
fldt
xchg
push
rcl
mov
xchg
mov
inc
sub
es
adc
xchg
add
cmp
in
subl
push
out
xchg
je
js
loopne
mov
clc
out
into
mov
jno
ret
loopne
and
cmpsb
dec
push
adc
mov
inc
lret
jecxz
js
xchg
and
dec
and
sbb
test
push
ljmp
pop
adc
rorl
lret
lea
pop
pop
push
push
sbb
xor
and
mov
adc
pop
aam
arpl
loope
shl
lds
mov
mov
pop
push
and
cmp
jmp
sbb
add
popl
mov
aam
and
fdivrp
imul
nop
mov
dec
lcall
int
popf
mov
jle
test
dec
mov
aaa
inc
test
addr16
sbb
aad
or
xchg
pop
gs
shrb
jg
push
lcall
pop
or
addr16
scas
inc
mov
data16
lds
test
cmpsb
ljmp
push
cmp
test
icebp
pop
add
xchg
and
enter
je
mov
adc
push
mov
dec
divl
mov
ds
or
lahf
icebp
int3
lahf
mov
fstpl
push
lds
mov
mov
in
arpl
mov
adc
mov
adcb
or
cs
mov
jmp
int3
push
jg
jnp
cwtl
jbe
adc
add
shll
enter
push
inc
sti
mov
in
cmc
xor
shr
rcr
imul
popa
push
ret
add
das
pop
js
or
in
jno
adc
push
ss
in
scas
mov
mov
or
push
adc
imul
fisttpl
sbbl
xchg
fisubrl
and
and
test
into
jg
aas
lods
mov
rcr
lret
inc
dec
add
pop
and
xor
nop
loopne
stos
into
push
movsb
or
fadds
jb
jle
sti
fdivr
sbb
aaa
sbb
cld
call
xchg
sub
dec
push
loopne
add
aas
dec
pop
rcrb
cld
or
hlt
mov
add
add
mov
outsb
iret
in
cli
loope
cmpsl
fdivrl
jmp
ret
and
icebp
mov
mov
shll
jle
into
test
mov
mov
fnstsw
ss
adc
or
dec
clc
xor
cld
movsb
insb
loop
aas
icebp
push
popf
sbb
push
mov
ficompl
imul
out
pop
dec
test
lds
ljmp
dec
sbb
xor
inc
mov
fs
mov
mov
test
and
cwtl
and
std
popf
jecxz
cmp
lds
fwait
out
sbb
lahf
loop
stc
popa
pop
mov
js
mov
dec
inc
lods
pop
adc
adc
pop
rorl
outsl
xor
das
mov
mov
adcl
adc
and
cmp
xor
dec
sbb
mov
xchg
aam
pop
jmp
jmp
decb
pop
push
sbb
lock
shrb
cltd
mov
cmp
inc
pushl
clc
test
adc
cltd
mov
call
sahf
divb
pop
pop
cmp
lret
push
cltd
cmpsl
sbb
out
lret
pushf
loopne
sub
lods
jo
pusha
jle
push
sbb
in
fs
cmpb
lret
je
push
test
jl
movsl
loopne
adc
cmpsb
mov
push
xor
out
adc
cmc
repnz
ja
rcll
and
mov
lds
imul
scas
fisttps
sbb
mov
popf
dec
clc
mov
dec
jne
icebp
push
lahf
fsubs
sbb
dec
pusha
lcall
lds
popa
out
or
inc
jb
mov
mov
out
popa
sti
lret
inc
jae
lret
xor
stos
xor
mov
fsub
fadds
fwait
sti
loope
sbb
ret
repz
jnp
xor
test
add
andb
inc
js
xlat
fwait
push
fiaddl
lods
fincstp
das
sub
sbb
sbb
xor
xchg
sbb
sbb
mov
push
cmp
outsl
cmpsw
xchg
lcall
xor
push
iret
out
mov
add
sbb
cs
popf
push
pop
jmp
push
xchg
in
fnstsw
mov
xchg
mov
add
mov
xor
imul
stos
mov
jp,pt
aad
add
xor
or
mov
xor
aas
mov
test
enter
push
es
xor
sahf
out
sti
dec
mov
pop
push
popa
xor
mov
push
rcrb
hlt
std
sti
fcmovnu
enter
mov
dec
stos
das
aaa
inc
nop
fs
mov
into
and
mov
testb
dec
rcrb
jns
jl
sub
push
dec
ds
pop
ror
repz
inc
dec
lcall
pop
or
nop
ret
push
outsl
shrl
and
jle
push
sbb
lock
lods
or
repz
bound
ret
mov
je
leave
aam
mov
adc
loope
lahf
mov
rorb
pop
insb
icebp
sub
loop
enter
or
and
cld
sarl
adc
xchg
mov
xor
mov
gs
mov
pop
pop
ja
je
xor
cltd
stos
repnz
popl
shlb
aas
push
cli
or
mov
dec
sbb
jg
enter
pushf
jg
sub
out
add
ljmp
xchg
mov
test
add
mov
push
cltd
mov
mov
mov
lea
jecxz
je
mov
mov
cli
sub
or
mov
je
movsb
enter
cmpsb
xchg
into
cmp
inc
loope
sar
or
and
mov
add
or
pop
cwtl
add
das
sub
mov
std
dec
stos
and
out
pusha
push
movsb
mov
data16
push
aad
push
repz
pop
sti
les
lods
inc
lret
and
pop
pop
scas
fs
clc
mov
dec
jo
inc
mov
loopne
imulb
and
xor
insl
sub
inc
fnstenv
push
jns
sti
cmp
push
scas
mov
sbb
popf
push
repz
in
mov
shrl
jno
lds
jg
daa
lds
inc
scas
add
adc
jnp
mov
shll
call
push
inc
jne
add
jnp
push
mov
and
lahf
sub
repz
lahf
jmp
and
pop
xor
jle
pop
in
pop
lret
jno
and
scas
cmp
outsl
add
insb
lret
cmc
ljmp
movsb
pusha
movsl
sahf
jge
int3
repz
clc
ffree
movsb
mov
cmp
ja
adc
xor
jnp
inc
jnp
sbb
jbe
sub
repnz
xchg
imul
add
cmp
out
jbe
cltd
lret
addb
jno
mov
pop
xchg
test
push
xchg
test
pop
dec
mov
fimuls
and
clc
sbb
into
js
sub
ret
pop
mov
aad
scas
add
cmp
sti
cld
adc
incb
out
sbb
mov
imul
es
mov
andl
add
sbbl
push
or
or
add
fbstp
jnp
jnp
jmp
neg
fdivrs
imul
jo
xor
mov
dec
into
stos
mov
ret
jl
int
in
call
inc
loopne
or
and
loop
sub
cltd
icebp
mov
lock
pushf
sbb
mov
push
in
xor
shlb
mov
lcall
fldenv
cmp
push
xchg
inc
jae
movsl
pop
loop
sti
mov
jge
cs
movsl
jo
iret
roll
arpl
inc
pop
jno
and
loopne
mov
mov
aam
mov
dec
frstor
imul
lock
mov
lcall
or
sar
fwait
mov
rorl
addr16
and
mov
add
add
pop
icebp
enter
xor
outsb
clc
data16
ja
xchg
mov
fsubrl
addb
hlt
inc
shl
pop
push
icebp
daa
mov
inc
push
cld
cs
fcomi
cmp
scas
ljmp
or
push
fimull
dec
adc
xor
pop
mov
pop
fdiv
lock
or
mov
sbb
mov
xlat
daa
repnz
lock
into
stos
xchg
inc
addr16
or
popa
xor
ds
lea
lret
mov
dec
sub
jno
or
push
sbb
jo
std
mov
push
cld
lahf
inc
adc
data16
adc
adc
mov
popf
aad
out
sub
dec
mov
and
add
fstl
enter
push
sahf
mov
xor
and
ss
shrl
mov
push
orl
adc
pop
ret
ret
adc
std
push
mov
mov
adc
ret
imul
fildl
sti
pop
in
lock
mov
jge
adc
or
mov
popa
inc
dec
rorb
mov
notb
or
add
mov
popa
xchg
daa
mov
fisttpl
pop
sbb
sub
mov
jmp
sub
bound
pop
pop
xor
ret
cmpsl
sbb
jge
sub
aas
cltd
mov
xchg
inc
mov
sub
mov
int3
push
xchg
adc
fadd
notb
sub
pushf
mov
mov
dec
inc
jno
add
dec
shll
xchg
and
pop
pop
in
fisttpll
dec
fistl
lret
in
and
stos
popa
mov
pop
mov
enter
leave
mov
hlt
ret
push
xor
dec
xor
insl
mov
sub
inc
mov
mov
cltd
gs
cltd
jecxz
cmpb
outsb
test
lret
mov
scas
mov
imul
mov
stos
add
pop
test
jp
adc
and
pop
adc
test
mov
xlat
jecxz
or
cmc
test
push
mov
ja
sub
xlat
daa
shlb
push
scas
mov
cmp
test
or
cmpsl
and
push
and
popa
loopne
mov
mov
loop
sub
xor
flds
inc
jb
je
fs
popf
xor
sbb
lahf
add
and
add
mov
fsubs
sbb
lea
lret
mov
and
xchg
mov
mov
mov
xor
int3
arpl
cmpsl
out
repnz
jbe
jns
and
mov
push
push
outsb
or
adc
xor
movups
pop
pop
cmp
shll
fidivl
fbstp
cmovae
inc
lods
ret
dec
repnz
andl
jbe
pop
cmc
push
ss
bound
xchg
adc
sub
add
and
incb
cli
pop
pop
das
mov
rolb
adc
fs
cmp
cmp
insb
sti
out
sarl
push
jmp
cmp
cmp
jb
std
inc
daa
sti
gs
mov
sbbb
jle
xor
idiv
in
inc
add
cmpsb
ret
mov
mov
lods
sti
loopne
mov
jmp
lcall
shlb
loope
push
xor
push
xor
subb
mov
out
fstpt
or
cmpb
mov
mov
jbe
mov
xchg
sbb
xchg
roll
add
xchg
jmp
inc
pop
cmc
pop
xchg
adc
repz
xor
dec
loopne
jne
cld
imul
sbb
sub
adc
mov
push
insl
sbb
ficoml
or
repz
ja
out
sub
hlt
ret
popf
push
outsb
lea
sahf
xor
pop
les
jbe
pop
push
fnstenv
rcll
dec
or
cmp
pop
xor
or
es
mov
bound
inc
jne
sub
and
or
ret
xchg
jo
xor
mov
pop
xor
mull
aad
int3
cld
add
dec
arpl
aas
push
dec
xchg
int
lcall
shlb
xor
ret
mov
jmp
adc
out
pushf
sbb
rcr
sarb
mov
and
mov
sahf
enter
xor
inc
dec
or
test
insb
add
outsb
mov
jle
pop
dec
pop
add
fwait
rclb
rcrb
mov
jo
test
xchg
or
sbb
leave
add
push
jl
inc
mov
out
int3
fwait
aaa
add
inc
loope
testl
and
push
mov
sbb
lods
sti
ja
push
cmp
sbb
fstl
pusha
adc
jne
scas
cmp
cmp
test
inc
lret
ja
add
sbb
lret
loop
add
sahf
xchg
mov
mov
mov
add
xchg
lcall
dec
push
aam
lods
lret
or
jne
cmp
pop
hlt
in
and
add
stos
dec
scas
xchg
stos
mov
sub
in
daa
or
cmp
inc
cld
cmc
sub
add
stos
jg
rorl
adc
sbb
jns
mov
push
std
fsubrl
sub
mov
rcrl
arpl
or
scas
add
test
xor
add
mov
aad
jo
mov
mov
mov
les
sub
insb
sub
loop
outsb
sub
pusha
ljmp
repz
cmp
aas
jnp
mov
psubd
cmp
cld
adc
cs
out
sahf
cmp
mov
cmp
sbb
iret
cmp
out
xchg
sub
cwtl
jo
dec
rolb
jnp
lret
ret
in
sahf
or
jnp
xor
jb
sbb
mov
icebp
and
in
jg
jp
push
pop
mov
scas
inc
in
dec
cli
pusha
cs
repnz
dec
or
and
sub
xchg
cmp
leave
push
mov
jecxz
dec
and
dec
fistps
xchg
mov
pusha
outsb
loop
in
mov
dec
jo
lods
in
daa
imul
dec
mov
and
sbb
mov
loop
push
pushf
mov
jge
ljmp
aam
cwtl
mov
das
popf
out
dec
dec
test
mov
popa
jle
push
aas
push
in
in
ret
cmp
cmp
mov
pop
fsubs
loope
sub
xchg
cltd
pop
shlb
adc
jl
mov
mov
add
das
popa
icebp
or
mov
mov
xor
pusha
push
int3
shlb
outsl
mov
mov
push
int3
in
lds
sub
jns
pop
clc
mov
add
popa
fcomip
dec
andb
jge
ficoml
mov
bound
sbb
or
stos
add
shll
inc
mov
lahf
out
jg
xor
mov
fidivl
pusha
jnp
pop
xlat
js
dec
dec
cmp
call
aaa
inc
jp
pop
icebp
shll
shlb
sub
in
and
cmp
xor
dec
dec
add
or
jp
test
mov
cmp
inc
insl
cmp
xchg
sahf
nop
fdivl
inc
jg
es
mov
leave
push
xchg
data16
in
js
mov
in
mov
lret
fisttpl
cs
fcomps
inc
lock
xchg
dec
inc
pop
mov
les
jno
ja
outsl
push
cltd
scas
aam
adc
mov
bound
or
mov
mov
lret
lods
pop
testb
fwait
jp
vmwrite
lahf
mov
addb
ljmp
xchg
out
jbe
add
xchg
negl
xor
mov
pop
xorl
add
int
gs
mov
aad
and
push
inc
arpl
adc
lret
stos
test
xlat
addr16
cli
mov
into
push
and
lcall
pop
lcall
icebp
pop
mov
or
into
dec
sbb
and
pop
es
adc
data16
or
enter
lods
push
popf
movsb
std
hlt
bound
push
scas
cmp
lcall
push
cmp
dec
scas
dec
lods
test
add
movsb
and
js
rcrl
inc
mov
push
and
dec
xchg
adc
jb,pt
inc
pushl
mov
jns
insb
mov
out
xchg
pop
scas
sbb
cmp
hlt
jno
jmp
dec
cmp
out
or
mov
xchg
adc
data16
insb
xor
jl
pop
fsubs
movsl
add
repz
into
fs
inc
fsubr
xor
loop
int
mov
sub
dec
jb
std
mov
inc
adc
jnp
out
xchg
adc
cwtl
add
sbb
and
push
push
mov
cmpsb
fucomip
rorb
mov
sbb
imul
cmp
lret
jl
in
xchg
ret
ja
lods
mov
aad
add
inc
xchg
mov
sbb
dec
mov
xor
cmp
inc
lods
pop
jae
in
or
jl
ret
sub
fiadds
fnsave
in
pop
jg
jp
xor
shld
ja
pop
out
call
negl
stc
jns
push
jno
add
sbb
inc
in
sarb
jnp
test
loop
inc
lret
adc
aad
pop
inc
jno
fsub
daa
jae
bound
imul
imul
sub
mov
cmp
std
cld
inc
ficomps
mov
mov
loop
fildll
inc
mov
and
imul
inc
xchg
fs
cltd
push
add
jnp
out
outsl
mov
imul
xor
fcmovne
sub
mov
leave
or
add
sbb
mov
pop
mov
jge
xchg
xchg
xor
push
xor
mov
xor
cmpsl
es
pop
push
sti
push
bound
mov
test
dec
xlat
and
test
jmp
xor
dec
add
add
pop
push
enter
push
stos
stos
push
ljmp
test
into
pop
xchg
sbb
leave
inc
pop
lahf
lcall
fsubrs
pop
or
add
aas
or
movsl
rol
stos
push
mov
icebp
insb
push
mov
adc
lret
daa
mov
movsb
fildl
icebp
push
sub
movsl
test
aaa
ret
pop
fs
push
daa
dec
or
outsl
mov
jae
mov
ret
or
jae
jge
mov
divb
mov
lahf
cmpsb
push
xchg
repnz
in
ret
or
sbb
aaa
and
aas
bts
xchg
dec
scas
int3
repnz
jo
jbe
stos
cmp
cld
sbb
lret
xor
roll
out
incl
aas
xchg
dec
cli
lock
or
or
mov
jp
jecxz
adc
les
mov
ljmp
adc
push
insl
and
sub
xlat
sbb
sub
ljmp
mov
test
mov
inc
push
or
jns
jbe
xor
cli
loop
jbe
je
loopne
sbb
cmp
xchg
cltd
adc
add
leave
add
int3
mov
enter
das
ljmp
into
shll
jnp
jno
jo
adc
outsl
and
nop
int
xor
stos
sub
mov
jo
mov
aaa
push
inc
and
cmp
outsb
sub
mov
xchg
inc
es
xchg
jle
sbb
stos
jl
adcb
push
aas
jp
pushf
or
ja
call
jecxz
dec
jnp
mov
subw
pop
cli
mov
pop
fnstenv
adc
xor
xlat
mov
lret
into
pushf
out
sub
iret
lcall
jno
test
call
ret
icebp
in
rorb
sub
xchg
push
cltd
shrb
dec
mov
push
lret
test
scas
xor
or
or
rorl
push
rcrb
adc
cli
and
add
rcll
inc
push
dec
outsl
xor
inc
aaa
or
shr
ds
lods
mov
xor
jne
push
add
adc
jns
push
xlat
test
jne
ret
ss
scas
outsl
pop
fs
decb
dec
shrb
fnsave
xchg
mulb
popa
inc
xchg
repnz
pop
loope
and
outsl
add
out
test
push
imul
cs
push
xchg
mov
jne
test
pop
adc
mov
test
dec
and
jb
pop
xor
push
xchg
push
out
fwait
lea
add
or
lds
mov
outsl
xor
in
les
inc
outsl
arpl
and
lret
sub
lret
mov
xchg
out
lret
mov
imul
stc
pushf
ret
inc
mov
jo
int
je
sub
ja
mov
sub
adc
jmp
test
sbb
sbb
mov
dec
sbb
xchg
mov
loop
xor
inc
pop
fcomi
pusha
jg
and
xor
mov
dec
xchg
testl
ret
enter
outsl
je
cld
lods
xchg
cmp
sub
shl
xchg
aaa
inc
pop
bound
in
out
test
loop
cmpsl
shlb
sbb
or
outsb
in
mov
mov
jle
repz
cmp
push
xchg
dec
test
dec
push
loope
jp
lea
rcrl
mov
ds
and
add
mov
fidivl
mov
xchg
lahf
pop
fisubs
inc
adc
dec
aad
mov
ret
ds
dec
fidivrs
dec
mov
fbstp
sub
insb
andl
arpl
daa
fmul
xchg
movsb
jl
dec
icebp
iret
scas
sbb
fidivrl
cmp
inc
mov
fsts
mov
add
cld
mov
push
sbb
stos
pop
pop
mov
adc
popf
push
lods
or
leave
ljmp
inc
popf
dec
push
inc
add
jbe
push
popa
cmpsb
pop
push
fnstenv
hlt
sub
lods
lods
jmp
add
cld
dec
icebp
pop
mov
jns
les
push
out
jecxz
xchg
xchg
adc
lcall
jno
mov
or
xor
dec
pop
mov
jecxz
add
ret
hlt
mov
loopne
mov
mov
mov
and
add
mov
aas
push
pop
xchg
lret
or
pop
idivl
in
push
jb
ret
enter
inc
leave
adc
mov
push
data16
cmp
and
std
cmpsb
mov
jmp
cmp
cmp
fmuls
daa
cli
xchg
adc
fimuls
xor
mov
mov
mov
xor
mov
mulb
sub
adc
xor
jle
filds
lahf
cmp
loopne
cmp
ret
insb
vpmacsdd
jb
sub
ficompl
inc
push
lds
idivb
inc
std
loopne
jo
sub
ret
push
aad
inc
hlt
je
xor
inc
mov
and
pop
xor
loopne
mov
dec
mov
or
adc
mov
imul
enter
std
out
push
mov
xor
iret
aaa
cmp
adc
mov
sub
lea
lods
cmpsl
daa
icebp
daa
add
clc
cs
test
imulb
inc
in
mov
xorl
mov
mov
gs
jae
dec
shrb
out
icebp
stos
lahf
popa
cwtl
or
cmp
inc
bnd
or
imul
gs
cmpsb
mov
xor
cwtl
movaps
repz
mov
add
sahf
and
loope
adc
xchg
push
subl
sub
fnstcw
inc
in
aad
jns
jbe
jp
adc
adc
test
frstor
stos
faddl
and
cmp
inc
popf
mov
and
cmp
xchg
dec
add
jmp
pop
fldl
sar
insl
clc
push
jecxz
mov
jo
test
lods
add
fwait
mov
mov
outsb
fisttpl
lds
and
stc
jno
jb
xchg
popf
pop
int
fstps
pop
aam
sbb
in
xor
xor
stc
jne
repz
outsl
mov
fnstenv
lcall
imul
and
dec
shlb
cltd
xchg
pop
mov
mov
mov
fisttpll
js
push
int
push
stos
mov
and
cmp
daa
fcmovb
pushf
add
neg
shr
xor
pusha
inc
push
mov
into
or
xchg
nop
cltd
xchg
pop
in
mull
lcall
mov
mov
arpl
in
clc
xor
pop
jns
pop
lods
out
into
and
mov
fstpl
add
lret
je
xorb
sbb
lods
sahf
jns
repnz
fsubrp
push
xor
push
xlat
dec
mov
push
in
and
ss
loopne
cmp
scas
jbe
pop
in
ret
sub
mov
inc
lds
mov
es
fldlg2
xchg
adc
arpl
inc
outsb
mov
hlt
fucom
ja
lock
iret
or
lahf
push
ds
fcmove
dec
cltd
ljmp
in
adc
add
sahf
sub
scas
pop
movsb
and
scas
imulb
add
fisttpl
lds
jnp
orl
repnz
icebp
aam
xchg
insl
adc
jmp
sar
mov
mov
mov
stc
inc
lcall
xchg
xchg
loop
repz
fnstsw
pop
call
ljmp
inc
test
aad
jg
cmp
or
mov
and
push
dec
pop
dec
mov
mov
in
test
xchg
decb
push
mulb
in
sub
out
iret
cs
inc
sarl
or
mov
out
test
add
fucomp
sub
sub
das
push
imul
mov
sbb
mov
das
add
imul
call
gs
lret
mov
stos
cmp
push
pop
jmp
movsl
add
add
add
push
pop
mov
enter
mov
cmp
sub
notl
dec
xor
rcr
dec
mov
mov
mov
gs
fdivr
mov
xchg
outsb
jmp
inc
xor
lods
jne
aam
cmp
dec
mov
in
aas
repz
rolb
je
inc
dec
jno
lds
test
jo
js
cmpsl
xchg
test
hlt
adc
popa
mov
mov
inc
inc
les
insl
push
int3
mov
mov
andl
hlt
push
xor
xor
adc
mov
aaa
in
in
mov
rcrb
mov
xlat
xchg
icebp
out
scas
shlb
jns
xor
jle
pop
pop
addb
or
mov
sarl
add
addl
dec
sbb
dec
fmuls
xchg
faddl
call
aad
leave
js
cli
mov
mov
lahf
int
push
and
xchg
in
adc
jg
adc
lcall
pop
and
adc
or
arpl
js
ret
dec
rclb
pop
out
cld
pmaxub
adc
gs
lret
inc
push
in
in
int
decb
and
enter
inc
out
testl
pusha
out
xor
cltd
pop
pop
inc
xor
mov
pop
addb
ret
out
xor
xor
mov
int
push
adc
xchg
mov
mov
add
mov
mov
call
fisttps
pop
enter
in
stos
arpl
ret
int3
int
jg
pusha
push
dec
ds
inc
lea
stc
pop
mov
jp
mov
bound
inc
rclb
sti
or
test
add
in
push
sbb
stos
or
xchg
and
arpl
clc
jmp
and
adc
push
inc
scas
mov
inc
sub
stos
bound
bound
dec
in
inc
jecxz
outsl
loop
pusha
dec
fwait
pop
movsb
subl
aad
mov
lahf
dec
mov
scas
cld
inc
and
dec
decb
cmpsb
push
repz
rcl
arpl
fiadds
sub
adc
and
adc
jnp
leave
std
in
iret
jmp
dec
daa
lds
cmp
leave
testb
xchg
rcr
jecxz
jae
loope
mov
gs
pop
cmpsb
xchg
mov
lahf
adc
loopne
std
shl
scas
xlat
mov
aad
xchg
jl
and
sbb
aad
xchg
push
test
inc
inc
pop
lahf
push
mov
lahf
jb
dec
mov
inc
iret
aas
or
sbb
dec
lds
mov
xchg
je
mov
xchg
jg
sub
enter
or
subl
xor
inc
jg
mov
mov
das
cltd
pop
or
lahf
push
add
idivb
mov
insl
adc
xlat
jmp
out
xor
xchg
add
push
lods
sti
dec
sub
loope
insl
push
adc
mov
mov
push
in
sbb
dec
inc
scas
push
add
mov
fists
inc
xchg
cmp
in
lret
mov
mov
xor
jae
js
into
fdivr
adcl
cmp
sbb
cmp
call
imul
ret
pusha
dec
jl
ret
rorb
add
out
inc
ret
jmp
loopne
add
xor
pop
sbb
mov
cli
inc
loopne
push
mov
mov
mov
imul
ror
stos
insl
mov
pushf
cmp
test
add
mov
xchg
in
in
cmpsb
add
call
cvtps2pi
mov
adc
stos
in
or
lahf
push
popf
xchg
aam
outsb
push
mov
in
sbb
aad
popa
push
push
lea
popa
fs
adc
cwtl
sub
cmp
add
inc
sub
adc
ror
je
movsb
imul
das
les
andl
imul
loope
flds
and
adc
mov
mov
jmp
fs
cli
imul
jmp
mov
cwtl
xor
jbe
mov
rorl
cmpsb
ss
stc
push
testl
cmp
into
test
sub
lcall
or
sub
pushf
mov
and
push
cld
mov
jp
call
stos
jl
lods
rcrl
add
mov
jge
jecxz
sbb
fnstcw
dec
inc
push
and
mov
stos
jne
mov
dec
dec
std
lods
iret
insl
stos
and
sbb
data16
sub
jae
add
inc
pop
cmp
cmp
mov
jbe
and
inc
jb
les
imul
loopne
sbb
mov
std
inc
sub
sub
lret
and
xor
xchg
pop
cli
or
dec
pop
jne
movsb
jge
jmp
or
mov
outsl
xchg
inc
aam
adc
mov
popa
iret
jne
dec
mov
ret
sub
sub
push
jl
inc
sbb
in
call
jmp
adc
cwtl
mov
pop
stos
movsl
jle
mov
dec
sbb
out
mov
into
mov
xchg
add
mov
nop
push
push
out
ret
and
hlt
mov
sbb
popl
jg
and
sbb
mov
std
jo
sbb
sub
mov
adc
jnp
add
pop
inc
pop
mov
jno
les
cwtl
std
aas
pushf
add
dec
repz
adc
test
subb
sbb
pop
scas
ret
xor
lods
je
pop
push
leave
cmp
adc
jo
insb
shll
movsl
call
mov
fdivrs
sub
loope
pop
xchg
lods
push
or
icebp
jo
movsb
fimull
pop
pop
adc
mov
xchg
mov
jle
fisubrs
dec
aas
sub
shrb
sbb
sub
mov
sbb
popf
andl
jge
xor
push
xchg
push
mov
sbb
add
repnz
fsubrl
aaa
cld
push
test
or
pop
call
popf
sbb
adc
lret
mov
cmp
and
or
sbbb
xchg
test
sahf
int3
sbb
mov
push
cmp
cmp
jge
push
mov
push
arpl
and
sbb
out
add
mov
mov
shlb
xchg
jne
mov
mov
enter
mov
fwait
rorl
divl
pushf
sbb
pusha
int3
in
inc
adc
sub
rorb
dec
pop
cmp
in
and
sub
or
stc
ljmp
shlb
jecxz
mov
fmul
paddb
cmp
fsts
jmp
mulb
scas
out
shrl
dec
sahf
push
cld
or
dec
pop
call
jp
xchg
pop
inc
lds
push
shlb
rcrb
mov
fmulp
data16
repnz
or
and
stos
aaa
xchg
insl
adc
imul
push
sub
mov
imulb
jbe
mov
fcmovnb
lahf
and
cltd
stc
aas
inc
leave
dec
xchg
push
cmc
mov
add
das
fs
pop
xchg
mov
mov
arpl
or
inc
xor
dec
loope
cmpsl
daa
cmp
int
std
movsb
xchg
cmp
ja
shl
mov
adc
psllw
int
stc
cmp
pop
mov
shr
fs
xor
xor
sub
roll
icebp
adc
and
sti
into
and
lret
jl
dec
cmp
xchg
sbb
mov
sahf
cmp
mov
fwait
leave
jbe
push
imul
xor
jmp
andl
or
hlt
push
lahf
push
xchg
and
stos
jmp
loop
mov
ss
pop
ja
fildl
ja
xor
cmc
in
popa
ja
lock
jmp
push
adc
ljmp
sti
pop
sub
jl
inc
dec
cmp
test
lcall
mov
mov
sbb
mov
jns
inc
fmulp
test
pop
mov
pop
fisubl
in
push
scas
loopne
mov
int
inc
add
add
mov
cmpsl
lret
sti
push
jbe
cld
mov
shl
mov
jle
popf
xchg
mov
int3
pop
jl
cmp
scas
mov
inc
inc
int
ret
movsb
mov
popa
cmpsl
mov
pop
jno
push
mov
xor
pop
xchg
mov
add
mov
lods
xchg
stos
test
or
daa
xchg
lret
test
cmp
push
stos
mov
outsb
and
incl
and
aam
js
push
mov
movsl
es
in
jno
push
mov
mov
loop
sbb
inc
mov
mov
jnp
add
inc
repnz
test
or
mov
cmp
push
pop
mov
push
shlb
cmpsl
in
cmp
xchg
icebp
loopne
test
mov
clc
jnp
and
fistpl
or
inc
cltd
adc
inc
ret
adc
fbstp
hlt
pop
out
cwtl
mov
pop
sbb
push
dec
inc
pop
mov
aam
lock
jl
sbb
leave
cmp
aam
inc
and
mov
dec
push
mov
aam
dec
sub
adc
repz
je
stc
imul
add
aad
adc
loopne
daa
add
andb
loope
and
xor
mov
gs
roll
mov
dec
push
pushf
mov
add
fistps
lods
mov
enter
in
mov
movsb
xor
fidivrs
ss
scas
xor
xorl
mov
sub
rolb
das
stc
pop
out
xchg
xchg
cmpsb
negb
inc
dec
aaa
inc
add
sbb
icebp
ss
insl
cmp
repnz
jbe
sbb
or
loope
mov
es
and
in
test
pop
fwait
inc
sbb
add
pusha
imul
sbb
xchg
jge
xlat
push
inc
mov
add
push
mov
xchg
pusha
push
jnp
jnp
pop
mulb
mov
lahf
mov
lcall
cmp
jne
loopne
lret
repnz
addl
mov
stc
adc
adc
mov
mov
mov
sub
mov
inc
shrb
je
fwait
dec
cmp
xchg
imul
aam
insl
xchg
cmp
cmp
fnstcw
pop
add
cmpsl
mov
xchg
jbe
adc
iret
mulb
test
out
adc
into
mov
push
lfs
mov
jno
push
loop
ror
mov
dec
cmp
clc
jecxz
fildll
mov
pop
les
sub
add
or
push
icebp
sarl
mov
popf
pop
xor
inc
adc
int
pop
mov
shlb
mov
inc
int3
pop
notl
sbb
push
adc
sahf
fldcw
sar
mov
in
iret
adc
dec
push
push
lock
ja
xlat
mov
mov
pop
mov
pop
or
orl
inc
xor
mov
imul
pop
sti
aas
inc
movsl
or
movsb
xchg
push
inc
dec
into
sbb
push
xchg
test
fidivs
pop
std
push
adc
inc
adc
or
sub
dec
out
stos
fnsave
sbb
cltd
gs
inc
push
imul
pop
xor
ds
inc
stos
mov
jp
shlb
das
mov
mov
push
and
and
push
pop
cld
outsl
adc
pop
pop
movsl
arpl
mov
and
mov
cmp
test
fs
pop
sub
inc
xchg
aad
ret
loop
or
incb
outsl
aad
gs
fwait
mov
add
and
rcl
scas
rcll
and
or
xchg
xchg
and
cltd
es
mov
push
fcompl
repnz
or
xchg
mov
cmp
aad
adc
mov
mov
mov
js
sub
jmp
adc
js
aam
jno
out
cmpsl
ret
arpl
jae
outsl
xor
and
pop
out
scas
dec
xchg
mov
jge
comiss
or
mov
test
inc
aam
in
push
ror
mov
mov
icebp
aas
imul
ret
aam
lds
cmp
loopne
or
pop
fs
out
popa
jno
std
mov
and
xor
xchg
sub
mov
jae
mov
pop
jns
aaa
bound
cmp
mov
mov
movsb
ljmp
mov
sbb
fdivrp
inc
nop
push
add
imulb
nop
cltd
add
aam
xlat
lods
shll
xor
aam
cmc
int3
inc
sbb
ds
ss
or
in
sub
fs
insl
mov
sub
mov
subl
lock
stc
mov
add
lret
repnz
sub
jns
dec
test
sahf
enter
add
dec
sub
je
mov
adc
aaa
sub
adc
jno
and
jb
mov
pop
pop
sub
mov
add
or
js
xchg
mov
xchg
decl
sbb
xchg
in
fwait
pop
mov
jbe
dec
repnz
jne
push
sub
cmp
mov
jl
dec
fidivl
mov
sub
dec
je
lret
or
mov
xor
mov
mov
test
loope
or
xchg
aam
and
xchg
rcl
dec
cli
aaa
insl
cmp
repz
nop
push
jmp
repnz
cmc
lahf
fnstsw
push
xlat
int3
out
jbe
mov
push
int
ljmp
pop
and
icebp
mov
cmp
lret
push
sub
mov
push
fnstcw
in
and
dec
cmp
xor
xchg
stos
xchg
cltd
or
and
cmpl
mov
fstl
sbb
es
adc
test
xchg
pop
pop
fcmovu
add
lahf
repnz
mov
sub
xor
fistps
jns
cmp
adc
xchg
inc
mov
test
fmuls
inc
xorl
jmp
pop
dec
pop
sti
push
enter
repnz
andl
std
fcoml
adc
cmpsb
jnp
cwtl
jbe
pop
push
pusha
cmp
push
mov
jge
xor
pop
jo
pop
in
in
aam
xchg
mov
ja
mov
xor
les
movsb
clc
jae
cmp
mov
mov
adc
or
das
xchg
movsb
inc
lret
cmp
or
dec
xor
ljmp
dec
ds
stos
mov
dec
cmp
sub
stc
dec
lods
cmc
ds
shll
imul
dec
pop
inc
cmp
out
lcall
das
adc
mov
inc
ror
clc
sub
push
mov
or
sub
call
popf
scas
jle
mov
mov
xchg
xor
jno
xchg
mov
in
mov
pop
jge
leave
dec
push
push
jecxz
in
shlb
push
sub
mov
push
pop
enter
iret
inc
aad
inc
xor
fsubr
sub
push
lret
cs
xchg
and
rcrb
repnz
push
mov
sub
xchg
cld
out
mov
xchg
jno
sub
in
and
push
push
xchg
rorb
repz
das
sarl
jecxz
out
std
sub
repz
xchg
jg
pop
gs
or
cmp
pop
fisttpl
push
mov
push
adc
add
cmp
jns
jle
int
mov
dec
add
sub
inc
cmp
lds
mov
test
xchg
lret
sahf
mov
rcll
fwait
inc
jbe
or
cmpsb
xchg
pop
pop
and
jmp
mov
enter
jp
xlat
out
xchg
stos
dec
es
fistps
push
fwait
pop
lds
mov
stos
xlat
leave
xchg
pop
scas
cmp
filds
popf
sbb
ret
push
lods
loope
in
clc
aam
dec
imul
outsb
insb
addr16
xchg
into
xor
mov
sub
out
leave
je
inc
popa
and
and
xchg
xchg
inc
add
or
div
xlat
sub
out
in
psubw
aad
ret
adc
aam
jbe
dec
rorl
bound
mov
adcl
in
add
mul
movsl
sti
xor
out
mov
icebp
mov
dec
gs
mov
cmp
call
push
push
pop
mov
jle
test
rcll
js
repz
xchg
addr16
sbb
inc
xor
xchg
cmp
lds
cmpsb
mov
loopne
add
sbb
lcall
sub
rclb
fdiv
test
cmpsl
push
sbb
repnz
bound
mov
cld
repz
lcall
sbb
mov
pop
lcall
jl
push
mov
push
decl
or
addr16
and
fldl
cs
xchg
aaa
xchg
and
pop
sub
lret
les
sub
out
jae
scas
push
and
mov
mov
mov
mov
sbb
subb
push
inc
fdivrl
fdivs
pop
pop
sti
jge
xor
jo
push
mov
sbb
mov
cmp
xchg
imul
scas
roll
mov
mov
jo
push
add
inc
add
mov
pop
outsl
mov
in
lods
mov
mov
cwtl
inc
aas
orb
shlb
xchg
sahf
sbb
sub
jle
or
add
loopne
sbb
les
dec
ficomps
ret
out
add
cmpsl
fcmovb
icebp
mov
jp
div
call
dec
sarb
and
fdivrs
pop
or
sarb
xor
jbe
lcall
mov
adc
arpl
cli
stos
mov
adc
aas
xchg
rorb
xor
or
aad
cmp
mov
ret
in
push
push
imul
sbb
bound
cmp
adc
add
arpl
shlb
aas
push
aam
jae
xchg
ds
stos
bswap
dec
dec
jmp
xor
cmpsl
sbb
jae
or
xor
insb
jp
or
adc
ss
and
cmc
into
adc
dec
and
cmp
nopl
imul
xor
cmp
add
cltd
lds
sub
fistpl
dec
rcrl
sbb
sbb
push
or
push
daa
cmpsb
xchg
fstps
push
jg
xlat
fs
test
mulb
push
fwait
rcrb
push
or
std
dec
push
fadds
lods
into
pop
fisubrl
mov
push
mov
cmp
fisubrl
int
jp
lds
or
addr16
jge
sahf
or
bswap
inc
imul
in
xor
jno
aaa
les
inc
dec
inc
in
movsl
pop
jle
lret
gs
into
ds
mov
sbb
loopw
mov
outsb
cmp
hlt
bound
enter
aas
shl
sbb
mov
xchg
aam
ss
lcall
aam
xchg
dec
sbb
sub
push
xor
xchg
mov
cmp
in
fiaddl
aaa
int3
scas
and
xchg
cmp
and
adc
cltd
sbb
push
in
adc
lods
xor
fstl
mov
stos
out
loop
inc
and
mov
out
and
mov
pop
fdivrp
pop
cmp
sub
mov
push
lret
out
fistl
es
mov
cmp
push
cwtl
and
ss
jae
xchg
cwtl
pop
sbb
cli
out
cmpsl
fdivrl
ljmp
lret
xor
lea
mov
sub
stc
aaa
sbb
pop
push
cli
sbb
stos
mov
mov
sti
mov
push
nop
cmp
mov
test
or
inc
mov
lock
subl
lret
push
incb
lods
xchg
xchg
in
xor
aam
xor
mov
stc
dec
lret
sub
jne
imul
sahf
mov
out
insl
daa
pop
das
sub
xlat
dec
mov
jle
subb
rolb
fiadds
sbb
int
fiaddl
cmp
sbb
push
jbe
clc
addl
sub
lret
repz
sub
jno
xchg
dec
aad
imul
fwait
pop
jecxz
jnp
jne
cmp
das
mov
in
aam
jge
xchg
cmp
lret
jmp
inc
dec
xor
lahf
test
xchg
push
dec
sbb
popf
mov
imul
or
sub
popf
popa
lds
lret
adc
jmp
outsb
mov
roll
pop
pusha
pop
lods
xor
orl
insb
lods
mov
cld
aad
insb
mov
mov
in
repz
xlat
fs
gs
aas
mov
shrb
cmp
lret
outsb
sbb
and
xchg
inc
jo
pop
js
lahf
lret
inc
jle
arpl
cwtl
push
subb
imul
test
mov
lcall
xchg
stos
dec
icebp
push
loopne
out
fdivrs
pop
pop
mov
mov
jge
popa
aad
sbb
pop
jb
xor
jns
inc
pop
dec
xor
jo
pop
push
xchg
mov
push
mov
dec
cmc
outsl
xchg
stos
jle
mov
roll
push
dec
jecxz
sti
cld
fstpl
hlt
cmpsl
pop
jne
frstor
cmpsb
clc
push
push
sbb
jmp
int
fstpt
cld
mov
jae
stos
and
pop
movsb
or
xor
jl
mov
mov
xchg
mov
push
jbe
jg
imul
ret
and
test
out
add
xor
outsb
int3
xchg
daa
jmp
mov
inc
mov
scas
jecxz
mov
jnp
sbb
pop
inc
cwtl
pop
push
cmp
and
popa
mov
or
repz
mov
push
rorb
fmull
inc
xor
jns
test
addr16
pushf
adc
pop
hlt
jp
imul
pop
sahf
add
dec
imul
xchg
inc
fadds
nop
insl
mov
popf
or
fldcw
lcall
dec
clc
loopne
pusha
jo
stos
or
xchg
inc
mov
cltd
std
outsb
push
mov
push
fwait
mov
jns
subl
pusha
lods
add
xorb
lea
enter
mov
enter
andb
lahf
xchg
jno
cld
sub
stos
idivl
or
bound
lret
unpcklps
sub
jnp
xchg
sbb
cmpsb
jb
xorb
clc
jmp
repz
test
cmp
cmp
rcrl
stos
cmp
out
dec
shl
test
sar
xchg
fsub
popf
mov
mov
mov
in
pop
xchg
pop
sbb
int
mov
jno
push
rorb
aam
in
mov
pusha
sub
cmp
mov
out
das
popa
cmp
mov
icebp
scas
adc
jbe
jge
mov
push
mov
fiaddl
test
push
pop
pop
dec
into
cli
fwait
cmp
in
xchg
stc
es
push
cwtl
push
jp
nop
rclb
sbb
jl
sahf
xor
out
or
xchg
mov
iret
scas
aas
jecxz
cmp
popa
dec
std
xchg
in
icebp
out
addr16
fisttpll
inc
js
or
mov
pop
mov
rcrl
pop
jle
testl
ds
jge
in
adc
movsb
popf
fsub
icebp
and
and
dec
mov
call
movsb
jbe
push
addr16
dec
imul
push
mov
push
into
pop
mul
shr
xchg
orl
adc
push
loopne
mov
pusha
mov
sub
xchg
push
sub
mov
rol
lock
cli
sti
aam
stos
jnp
dec
pop
jns
aad
add
mov
in
jmp
mov
xchg
pop
lds
mov
pop
aas
add
dec
pop
push
dec
mov
push
cmpsb
scas
add
cmpsb
jmp
cmpsb
cs
je
push
mov
sti
test
pushl
jecxz
jl
addl
mov
jp
stos
and
lea
jo
aas
aaa
sarb
fs
movsl
push
add
add
push
mov
pop
scas
mov
loope
aas
push
xchg
jno
in
stos
aam
sbb
icebp
push
js
scas
sub
mov
xchg
popf
lret
in
sub
inc
and
outsb
jmp
mov
xchg
das
cwtl
dec
test
aad
mov
mov
jae
sub
outsb
mov
mov
inc
and
mov
jge
dec
adc
aam
cmp
lcall
les
fstps
lods
aaa
pop
sbbb
lds
and
outsb
and
xchg
out
bound
lods
push
sbb
jo
sub
test
into
or
cmpb
sub
xlat
cmp
jecxz
faddl
mov
cmpsb
pop
orb
inc
mov
fs
outsb
mov
xor
xchg
inc
lcall
inc
add
in
mov
lods
xor
adc
mov
mov
and
push
imul
iret
push
outsl
mov
lahf
push
cmc
push
mov
and
stos
mov
lods
faddp
xchg
jecxz
fwait
jge
shrb
xor
aam
mulb
adc
in
pop
cmpsl
testb
test
jle
fcoms
ljmp
push
mov
cltd
test
arpl
dec
xchg
mov
inc
mov
or
inc
push
lea
inc
add
loopne
cmp
pop
inc
dec
pop
sbb
ljmp
xchg
jno
xchg
xor
into
ret
or
lods
mov
jl
inc
mov
jmp
jecxz
xor
mov
inc
movl
or
jae
mov
jns
cmp
sbb
sbb
add
push
dec
mov
clc
test
out
pop
inc
jecxz
and
adc
jno
lret
repz
jg
sub
stos
test
push
sub
or
lods
bound
xchg
hlt
dec
pop
out
lods
imull
push
xlat
sbb
sbb
fsubp
adc
sub
cmp
ds
arpl
inc
loopnew
sbb
out
push
dec
pop
and
icebp
cmpsb
push
sub
lea
sub
jno
rorb
mov
icebp
sub
sub
or
jno
inc
test
and
adcl
jo
cli
cmc
repz
loope
lods
cwtl
dec
mov
lcall
push
lret
lret
hlt
repnz
outsl
adc
push
dec
xor
add
mov
xor
pop
mov
movsl
mov
rcrl
test
xor
and
adc
aaa
add
adc
push
sbb
and
jge
ffreep
adc
jno
push
xchg
sub
mov
lods
jo
dec
sahf
adc
dec
ss
jb
and
adc
mov
aas
cltd
out
dec
jb
cmp
sbbb
mov
jb
cmpsb
loop
rcrb
test
fdivrl
cmp
call
sbb
aad
cmp
adc
dec
lret
add
or
sub
rcrb
mov
pushf
pusha
in
clc
mov
data16
lds
adc
and
fistpl
jb
xlat
sbb
cmc
mov
aad
dec
add
sbb
push
mov
fcomip
movsb
inc
sahf
int
lea
rcrl
lcall
pop
sbb
push
out
pop
push
mov
adc
outsl
fst
adc
cmp
xchg
jae
test
test
pop
stos
shll
jl
push
or
arpl
mov
inc
mov
push
je
stc
repz
adc
hlt
mov
pushf
stc
fistpl
mov
data16
pop
in
inc
push
imul
fisubs
jbe
xor
fsubs
scas
rclb
xlat
testl
lock
hlt
cli
outsl
mov
pop
mov
cmp
pop
ret
mov
or
adc
addr16
and
mov
mov
aam
xchg
gs
fwait
xchg
jg
push
in
mov
xchg
sbb
addl
mov
xchg
adcl
lcall
in
movsl
test
dec
push
lahf
xchg
mov
adc
xchg
out
pop
xchg
inc
inc
sbb
xchg
in
cmpsl
xor
fmul
jp
pop
ret
jp
pop
idiv
jo
je
jno
std
scas
inc
push
adc
mov
jne
leave
test
push
and
and
les
rolb
inc
and
dec
and
inc
and
loopne
jne
mov
mov
jae
into
pushf
and
pop
adc
push
adc
xchg
push
lds
xchg
stos
ljmp
fidivl
insb
cmp
insl
jnp
sbb
pusha
jno
pop
adc
in
mov
ljmp
and
jnp
test
cli
xchg
pusha
adcb
mov
repnz
daa
dec
xchg
aas
repz
ret
jmp
sub
mov
xor
jecxz
add
inc
lret
mov
push
scas
aaa
iret
in
cmpsl
and
lock
jmp
jno
xchg
out
fmuls
jno
addr16
add
ljmp
stos
imul
cs
jge
leave
jns
add
sti
pop
inc
sbb
mov
fidivrl
cmp
mulb
out
enter
mov
mov
jno
test
rolb
lods
das
lcall
pop
test
cltd
or
pop
dec
pop
pop
lret
push
filds
mov
sub
rcrb
xchg
mov
xchg
xlat
sub
pop
into
fsubrp
jl
lods
outsb
mov
inc
jbe
les
mov
or
jne
ljmp
xorb
pop
arpl
mov
cmc
add
pop
bound
out
pop
filds
mov
inc
hlt
jbe
mov
mov
mov
lods
fistpll
jl
mov
or
dec
push
xchg
out
sbb
icebp
jnp
shlb
jg
dec
out
out
mov
jp
mov
rorl
das
and
jle
ljmp
jge
cmp
dec
arpl
std
cmp
mov
pop
or
xor
aad
les
loope
scas
adc
add
pop
adc
movsl
push
loope
insl
cmp
repz
push
lock
xor
out
and
sti
xchg
test
mov
rcrl
repz
cmp
inc
dec
roll
movsl
xchg
fcoms
push
adc
imul
fwait
or
lea
out
jnp
inc
pusha
scas
and
xor
xchg
loop
mov
cmp
add
loop
mov
in
dec
dec
ja
xchg
int3
cmc
cltd
or
pop
jo
mov
xchg
stos
loop
xchg
lods
or
mov
xchg
test
outsl
inc
insb
jle
mov
mov
and
stos
or
adc
in
adc
stc
mov
or
jl
sub
outsl
or
push
test
negl
cmp
enter
and
adc
mov
jns
scas
lcall
lods
xchg
outsl
xor
imul
mov
lds
int3
dec
pop
and
mov
push
inc
hlt
int
daa
mov
push
rol
mov
add
negb
mov
fistl
lods
jg
lea
cmova
lcall
fildll
xor
inc
jbe
pop
mov
das
int3
pop
in
lahf
sbb
sub
int
cmp
push
mov
addl
enter
icebp
jb
xchg
dec
aas
xor
mov
cmp
fst
jnp
inc
add
sbb
iret
cmp
daa
cld
mov
fmull
and
popf
int3
hlt
sahf
mov
pop
filds
cmc
rclb
je
dec
cld
cmc
inc
test
lods
or
test
ret
and
fwait
movsb
rcrb
mov
fs
dec
scas
push
add
push
xchg
es
dec
ss
sbb
lock
xor
add
sbb
xor
lock
cmp
movsl
test
inc
mov
cmp
insb
adc
and
push
call
add
cmp
lock
ds
pop
push
inc
inc
daa
pop
cs
mov
jecxz
add
test
push
fwait
lods
cmp
xchg
popf
out
jl
pop
inc
inc
jecxz
mov
daa
xchg
cmp
es
push
xchg
mov
adc
jb
lret
mov
mov
jnp
xchg
adc
adc
jecxz
mov
cmp
ja
dec
jae
popf
popf
loop
lret
in
fs
jp
aas
adc
dec
xor
push
test
and
sbbb
mov
test
cld
cli
adc
xlat
into
and
pop
push
add
pop
xchg
movsl
leave
cmpsb
leave
sti
lock
xchg
adc
adc
sahf
fidivl
cld
sti
testl
push
out
mov
pop
or
cmp
mov
and
and
inc
fldl
jge
in
xchg
shll
pop
xor
test
sbb
inc
icebp
loop
mov
or
pop
loop
sbb
mov
pop
jns
inc
nop
ljmp
out
pop
push
ret
test
popf
jb
or
cmp
jg
sub
mov
pop
mov
ja
into
in
mov
popa
push
lods
loope
dec
cli
mov
ficoms
ljmp
and
fbstp
inc
out
rcrb
add
cwtl
inc
ret
popf
xchg
insl
push
ret
jae
mov
add
lahf
inc
insl
mov
pop
and
fcoms
xchg
outsl
pop
xchg
das
out
sub
cmp
daa
fsubrs
pop
imul
jp
sub
jne
jbe
lret
pop
sbb
mov
mov
push
inc
dec
inc
jmp
or
mov
mov
xor
add
mov
scas
cld
push
ja
mov
fldl
xor
hlt
aam
dec
sbb
push
mov
inc
mov
pop
dec
xchg
mov
xor
inc
jae
adcl
pop
aas
jo
scas
dec
xchg
xlat
je
cmp
nop
and
testl
in
xor
jmp
cmc
mov
pusha
jns
repnz
inc
xor
and
out
data16
lock
add
movsl
into
loop
cmc
and
out
movsl
addr16
sub
ljmp
sti
stc
ror
imul
pop
push
xchg
sbb
in
shl
mov
lea
push
xor
pop
nop
mov
mov
frstor
xchg
lret
jb,pn
mov
cmp
xor
xlat
in
xchg
out
xchg
lock
or
dec
dec
scas
imul
sbb
mov
mov
ror
pop
lods
fndisi(8087
stc
repnz
mov
aas
gs
sti
jg
in
arpl
test
mov
das
std
shrb
in
movsl
mov
jl
inc
in
stos
mov
push
add
scas
mov
xchg
inc
pop
and
popf
inc
sti
negl
mov
mov
mov
and
fists
fcmovnu
test
enter
scas
mov
or
xor
pop
lret
daa
sbb
jge
outsb
test
rcr
cld
or
mov
mov
push
lock
and
roll
je
jbe
push
and
add
leave
hlt
loop
int3
push
add
std
push
pop
pop
popa
das
insb
cmp
or
movsb
pushf
pop
xchg
mov
lahf
movsl
cmpsl
cltd
test
lods
fs
lds
in
mov
pop
mov
in
push
cvtps2pd
shl
jns
jle
or
push
and
fs
cmpsl
push
mov
push
xchg
push
add
xorb
mov
add
daa
push
lahf
imul
sarb
arpl
sti
stos
sbb
loopne
dec
add
cmp
sub
sbb
inc
jle
clc
loopne
stc
cli
fmull
cltd
insl
outsl
jno
cmp
out
rclb
pop
fdivrs
hlt
xlat
arpl
roll
mov
dec
cmp
in
jnp
cli
data16
les
cmp
pop
rolb
dec
and
dec
sbb
shr
stos
dec
sub
inc
jle
cmp
mov
test
mov
pop
jne,pt
mov
add
jle
xor
sbb
ret
js
mov
outsl
mov
pushf
and
mov
and
push
jmp
and
mov
mov
fsubs
cmc
jae
xchg
sbb
adc
jle
in
pusha
cmp
mov
add
jbe
push
cwtl
popa
cmp
mov
sbb
pop
push
xor
lcall
dec
cmp
jne
mov
bound
pop
dec
mov
or
pop
add
and
iret
repnz
test
sbb
ss
and
jl
fsubrl
mov
in
dec
or
jne
pop
xor
je
dec
mov
mov
sti
adc
ss
mov
in
sbb
jp
xor
movsl
push
xor
dec
mov
cmp
push
push
cltd
mov
sysenter
jbe
pop
adc
ja
pop
pop
fidivl
ss
mov
aaa
call
fcoml
fwait
cmp
notb
leave
pop
enter
loopne
push
adc
ret
or
dec
dec
xchg
sbb
lea
cmp
pop
mov
push
push
cmp
das
jp
adc
popa
fiaddl
mov
repnz
jb
ss
or
mov
mov
cmp
lahf
jg
aaa
mov
fidivl
mov
imul
lods
cmpsl
jno
and
dec
nop
sbb
jne
ds
add
in
out
loope,pt
push
psubq
mov
push
pop
inc
inc
push
pop
icebp
in
inc
movsb
pop
xchg
dec
mov
cmp
inc
test
or
enter
es
popw
add
pop
pop
sbb
fcomi
sahf
bound
aad
xorb
lahf
or
push
inc
stos
cli
mov
dec
push
scas
sbb
imul
loope
push
leave
test
je
repz
cs
xor
cmp
js
add
xor
mov
fidivrs
pop
sbb
fisubrl
xchg
lds
in
cmp
adc
jg
inc
mov
jmp
lcall
cmc
stos
movsb
jno
pop
mov
insl
loop
cli
and
movsl
xor
mov
mov
jne
adc
xchg
inc
jp
out
pop
leave
pop
inc
mov
repnz
shll
mov
fmuls
loop
and
cmp
cmpsl
add
push
mov
pop
or
mov
and
lds
mov
pop
jnp
mov
adc
js
xadd
fwait
sahf
and
mov
adc
cs
push
jl
push
jp
add
dec
pop
mov
pusha
mov
inc
loopne
adc
and
sub
int
pop
int3
lock
out
mov
and
into
inc
ja
cmp
mov
dec
movsb
xchg
push
jo
xchg
pop
ss
fs
mov
push
test
insl
aaa
ret
in
in
ja
jmp
xchg
push
loope
mov
stc
jmp
cmp
pop
cmp
sahf
insb
ret
adc
cmp
cmp
addr16
lds
and
out
test
sarl
repnz
icebp
int
cld
add
and
pop
mov
sbb
gs
negl
push
in
mov
lods
pop
adc
outsb
repnz
pop
das
cmp
xor
push
add
shll
repz
dec
repz
mov
iret
or
and
scas
adc
inc
scas
imul
jge
xchg
xchg
and
mov
imul
mov
xchg
daa
xor
xchg
lds
jne
and
sahf
pop
xchg
imul
mov
sbb
xchg
jge
mov
mulb
and
out
js
pop
loopne
xlat
shrb
je
pop
cmp
cmpsb
dec
xchg
xlat
gs
ffree
sbb
icebp
rcr
jo
pop
dec
sbb
fnsave
inc
and
mov
and
cmpsb
sub
in
int3
dec
pop
push
push
jae
ds
and
sub
add
fiadds
pop
xchg
xor
mov
notl
mov
or
test
jns
test
mov
std
in
xor
pop
cmp
mov
mov
lcall
add
inc
pop
push
shr
jns
sar
xchg
sub
cmp
fdivr
outsb
daa
lods
pop
adc
dec
and
sub
mov
cmc
push
or
mov
fbld
or
les
inc
fidivs
cmp
pop
mov
push
movsl
adc
stos
testl
push
data16
ljmp
dec
lcall
xor
sbb
cmp
inc
pop
mov
pop
xchg
pop
adc
lret
outsb
enter
mov
adc
jg
mov
cmpsl
movsb
pop
dec
add
loope
mov
jnp
repz
gs
int3
outsl
lods
add
out
inc
add
jl
push
frstor
sar
mov
insl
dec
les
and
js
sbb
lret
daa
inc
mov
add
sub
loopne
pop
push
jg
dec
nop
sarl
xlat
inc
stos
fiaddl
fstl
xchg
or
cwtl
ss
divb
daa
test
mov
add
pop
or
mov
xor
scas
lods
sub
int
jnp
pushf
cmp
jge
movl
pop
add
push
sahf
nop
nop
rorb
sub
mov
mov
cli
insb
push
inc
call
gs
out
lret
push
mov
rcl
jae
mov
andb
jnp
repz
xchg
and
imul
dec
cmp
loope
ja
iret
mov
imul
out
cwtl
jle
cmpsb
sbb
pop
or
mov
out
aaa
pop
lahf
sbb
cmc
js
or
lods
lea
mov
dec
shll
leave
cmp
adc
call
popa
adc
in
dec
lret
mov
sub
sbb
jecxz
fildl
mov
inc
xor
stos
out
jmp
fcomip
cmp
test
fidivs
icebp
sbb
fists
lcall
adc
mov
and
sahf
aad
ret
mov
cmpsb
repnz
jne
jbe
aam
jl
insb
sub
es
scas
lret
popa
sahf
cmp
repnz
mov
mov
push
mov
insl
xchg
push
outsb
jnp
ds
popa
loop
icebp
xchg
aaa
icebp
mov
les
add
dec
gs
push
fnstcw
iret
and
shll
cmpsb
pop
pop
repz
mov
fsubl
sbb
int
test
xchg
js
push
jbe
add
imul
roll
shrb
jg
mov
leave
add
mov
movsb
push
xchg
movsb
mov
cwtl
mov
xor
loop
in
repnz
xchg
push
xor
fwait
data16
jae
add
fdiv
add
call
mov
out
xchg
mov
in
jo
inc
dec
int
bound
lods
lds
fdivrp
mov
pop
outsl
addl
mov
mov
test
fwait
cld
add
fucomip
mov
fcomip
cmp
push
loop
or
jg
leave
jb
nop
rcrb
andl
sub
in
inc
cmpsb
dec
aaa
push
push
xchg
sbb
gs
lock
test
and
jmp
popf
scas
arpl
adc
jnp
mov
xchg
cmp
or
pop
xchg
pop
mov
arpl
jns
jo
pushf
arpl
imul
push
mov
lcall
adc
sbb
pop
jecxz
loop
cld
push
push
xchg
mov
out
jmp
dec
xchg
mov
push
add
iret
test
and
jle
xchg
mov
push
mov
cwtl
fldenv
sti
scas
enter
fwait
cli
cwtl
hlt
sbb
lods
test
inc
or
adc
out
cmp
popa
add
sbb
cmp
and
lea
xor
inc
iret
xlat
nop
adcl
xor
inc
sbb
add
iret
add
fs
imul
movsb
pop
call
test
dec
out
loope
fucomp
push
inc
xor
dec
insb
cld
xchg
fcom
leave
repz
rcr
jg
in
push
out
jmp
mov
int3
es
cmpsb
mov
lahf
adc
inc
lret
jb
pop
sbb
inc
test
incb
out
xchg
int
sub
mov
adc
and
add
in
lret
test
ret
and
les
sbb
mov
adc
popa
in
sbb
push
add
or
rcrl
sahf
cmpsl
push
int3
mov
imul
fistpl
xchg
test
mov
push
fabs
mov
es
ljmp
dec
or
xor
jmp
jp
push
push
pop
repz
inc
imul
add
pushf
push
movsl
mov
xchg
cli
das
jge
aas
xchg
mov
mov
sub
xor
aaa
sbb
lds
mov
cmp
popf
sub
hlt
out
call
fwait
out
inc
mov
jne
cmp
fcoms
fldenv
push
popf
out
xchg
push
adc
out
adcl
jecxz
lds
imul
sub
add
mov
or
xchg
mov
fucomp
pop
pop
movsl
les
sbb
negl
adc
outsb
je
mov
repz
js
jnp
dec
dec
dec
arpl
adc
cmp
xchg
inc
negb
sub
lods
cwtl
or
xor
sbb
cmp
gs
xchg
mov
add
lcall
or
iret
aaa
dec
mov
xor
jg
int
mov
cmp
mov
mov
pop
ss
jle
mulb
jecxz
mov
jmp
iret
daa
inc
ja
js
loop
repnz
sbb
jne
mov
sub
aaa
sub
lock
mov
int
popa
shl
dec
clc
mov
out
jnp
aaa
dec
cmp
cmp
in
push
add
fnstenv
gs
jae
adc
cmc
js
xor
add
lds
pushf
and
push
pop
lret
clc
or
ss
cmp
stos
mov
sub
mov
add
sbb
in
cwtl
pushl
push
and
push
push
mov
adc
dec
addr16
orl
pop
add
pop
daa
insl
adc
inc
jno
cmp
jle
nop
and
add
std
pop
lret
outsb
inc
jns
xor
loope
fwait
aam
and
pop
imull
lods
das
mov
dec
int3
fistpl
xor
and
lret
into
mov
rolb
dec
or
mov
and
and
clc
sbb
mov
mov
lock
cwtl
icebp
sbb
mov
inc
in
cmp
fwait
xchg
mov
cmpsl
mov
xchg
in
std
jno
and
sbb
push
xor
mov
mov
lahf
js
jp
inc
push
mov
loop
popa
pop
adc
adc
mov
jns
push
xor
cmp
xor
iret
and
outsb
cmpsl
add
xchg
fildl
xchg
or
lods
enter
pop
jbe
pop
push
bound
cmp
ret
jle
mov
xor
insb
sub
stc
outsl
gs
mov
xchg
sbb
mov
shlb
shr
movsl
or
daa
adc
data16
xchg
lret
stos
out
adc
cwtl
mov
mov
repz
xor
leave
lahf
pop
lret
add
inc
ds
xor
push
nop
repnz
mov
test
fs
lea
jecxz
leave
pusha
xchg
cld
out
or
pop
daa
dec
into
mov
popf
xor
pop
or
loopne
pusha
jge
repnz
sbb
push
xchg
loope
xchg
leave
mov
push
roll
pushf
adc
movsl
test
mov
imul
push
outsl
cmp
pop
sbb
dec
push
les
jmp
sahf
int
jecxz
lret
testl
mov
arpl
lock
mov
js
psrlw
mov
xor
and
and
jge
and
jecxz
stos
and
mov
lsl
xorl
daa
push
loope
out
xor
out
sahf
xchg
in
jle
iret
bnd
insb
xchg
inc
popf
lds
add
xchg
sub
adc
add
xchg
test
sub
push
in
dec
cmp
cmp
iret
xchg
lret
pushf
and
sub
sbb
in
es
aad
leave
stos
dec
dec
daa
mov
imul
scas
mov
xlat
pop
adc
cld
sbb
adc
lcall
xor
mov
stos
cld
dec
jb
es
int
ss
pop
push
mov
incb
daa
hlt
push
cwtl
movsl
int3
adc
or
clc
sar
js
jg
cltd
cmp
outsb
sbb
int3
add
imul
xlat
xchg
lahf
pop
lock
es
sbbl
xor
int
adc
and
ljmp
xor
mov
movsl
sbb
stos
lods
inc
ds
jl
lock
out
cmp
add
mov
cmp
lret
xor
loope
fdivrs
roll
and
sbb
mov
xor
xor
mov
pop
xlat
cmc
popf
add
cmc
or
insb
adc
or
xrelease
jbe
scas
xchg
fdivrl
push
movsl
jb
cmpl
es
mov
popa
ret
and
adc
push
xor
shlb
add
mov
add
pop
jns
stos
and
lods
jne
int
sub
inc
inc
leave
outsl
adc
sub
mov
cmpsb
cmpl
or
or
cmc
push
mov
cmpb
mov
inc
jns
and
jo
test
xor
jl
dec
jne
cmp
mov
adc
cmp
enter
outsl
mov
add
adcb
xor
sub
mov
push
and
adc
cmp
cmp
mov
rorl
dec
adc
adc
fwait
lret
cmp
inc
mov
lea
pop
add
stos
xchg
repz
test
test
dec
sub
popf
jns
cmp
popa
jnp
data16
cld
adc
pop
aaa
int3
ret
lret
scas
cltd
push
and
jb
jnp
pop
outsl
mov
shll
or
xchg
and
sbbb
adc
add
mov
sar
add
xchg
add
sbbl
push
cld
adc
or
and
sbb
mov
int
sub
and
fcomip
inc
xorb
xor
insb
ljmp
xchg
adc
ret
cmp
in
hlt
aaa
cmp
xorl
sbb
jno
mov
lcall
adc
jg
fistl
ljmp
int3
cmp
ss
test
jl
gs
das
out
xchg
adcb
dec
outsb
dec
pushf
push
lods
jne
out
mov
dec
and
or
and
les
cmp
vmwrite
adc
test
cwtl
mov
iret
subl
and
mov
pop
data16
sub
gs
pushl
out
dec
xchg
insb
stos
jns
scas
arpl
pusha
sysret
cmp
ss
lahf
lock
je
insl
inc
popa
jge
and
and
mov
cli
je
scas
into
inc
jae
or
rolb
jo
push
adc
cmpsb
sbb
ds
cmp
adc
push
pop
fs
mov
dec
xor
sbb
jns
dec
jg
push
push
shll
test
popa
add
push
les
jle
jle
jns
cwtl
xor
inc
sbb
repnz
dec
ss
mov
lods
mov
decl
daa
mov
popa
xor
int
sahf
cltd
insl
jns
mov
dec
mov
mov
cmpsb
icebp
mov
sbbb
ss
add
sarb
xchg
popa
cmp
pop
push
mov
repnz
mov
sbb
hlt
add
clc
mov
addr16
add
es
cs
popf
std
xor
pop
fs
dec
jb
imul
jle
out
jmp
jo
clc
outsl
inc
ret
movsb
push
jmp
and
dec
cld
adc
ret
jnp
subb
jp
mov
loope
shrl
or
lret
jb
sub
adc
adc
mov
and
je
mov
mov
loope
jmp
jne
push
data16
rorl
xor
out
and
xchg
lret
jae
sub
mulb
fsts
popf
in
outsb
cmp
in
pop
mov
mov
mov
andb
les
mov
mov
mov
aas
push
out
adc
push
or
jle
jle
adc
arpl
sbb
cmp
icebp
ficomps
jno
test
call
sbb
xchg
pop
jbe
pop
sti
cs
mov
or
out
dec
mov
sbb
sub
pop
push
push
out
xchg
cwtl
ja
mov
pop
test
mov
mov
mov
mov
ljmp
sarl
cmp
xchg
and
add
decb
fistl
outsb
xorl
pop
int3
fidivs
dec
ja
mov
pop
sarl
cmp
cmp
mov
pushf
std
pop
and
xchg
shrb
pusha
xor
mov
mov
into
or
negb
push
adc
fnsave
inc
movsl
mov
outsl
and
fisttps
fst
push
in
ret
xchg
jb
mov
scas
out
sub
jno
mov
pushf
fcoms
dec
push
adc
sub
pop
je
sub
rorb
push
pop
pop
outsl
mov
or
inc
xor
roll
out
push
and
decl
adc
mov
mov
pop
icebp
mov
and
dec
stc
fidivs
cld
xadd
ret
mov
rorl
mov
push
lahf
and
push
mov
adc
aas
test
dec
clc
and
stc
cmc
push
sub
jl
adc
lock
sub
bound
mov
in
iret
arpl
pop
cli
pop
cmp
jne
inc
sub
dec
cld
in
rorl
or
lea
test
xor
mulb
xor
push
aas
push
roll
scas
xchg
pop
mov
or
xchg
xchg
pop
outsb
adc
movsl
pop
mov
jl
push
pop
push
mulb
enter
addr16
add
mov
mov
dec
cwtl
xchg
shll
and
in
xlat
daa
iret
sbb
call
ret
in
push
jnp
and
xor
cmp
cld
leave
cmp
test
cmp
sub
dec
test
ds
pop
stc
out
es
push
jae
in
xor
xchg
pop
cs
xchg
stos
dec
sbb
inc
inc
adc
jl
pop
mov
mov
and
xor
xchg
cmc
dec
les
in
xchg
push
push
mov
sbb
inc
ljmp
or
inc
scas
and
pop
mov
jg
in
dec
subl
jns
movsb
fimuls
push
adc
adc
add
pop
xor
sbb
test
pop
jae
shl
inc
lock
scas
ficomps
adc
dec
adc
cmp
sbb
enter
mov
cwtl
add
and
mov
push
jae
push
cs
ja
inc
mov
jb
xor
mov
adc
cmp
jae
adcb
scas
pop
repnz
aas
sub
cmp
sarb
movsl
dec
lret
sbb
in
or
or
adc
add
push
pusha
rorb
insl
pop
mov
add
clc
jmp
xor
push
sub
push
stos
js
push
push
sub
fimuls
dec
ds
mov
sbb
xchg
outsl
sbb
jle
pop
jbe
push
shll
xor
xchg
mov
jge
dec
add
pop
and
rolb
or
and
push
movsl
pop
loope
les
jne
add
pop
sub
mov
andb
xchg
jne
jbe
xchg
sub
popa
test
pop
pop
dec
pop
lods
adcl
push
add
je
pop
xchg
sbb
inc
pop
push
and
scas
adc
sbbl
mov
shlb
iret
lahf
out
sar
and
adc
ja
push
or
inc
mov
aaa
cmpl
or
insb
mov
hlt
and
leave
ficompl
sahf
add
or
loop
movsl
xchg
int3
popa
xor
lds
push
cmp
int3
out
push
xor
cmp
dec
ja
sub
pop
pop
push
mov
mov
pop
add
xchg
sub
fildll
out
pop
xor
adc
andl
adc
mov
les
sub
mov
out
stc
imul
jbe
mov
popf
ljmp
add
mov
dec
int3
inc
incl
jle
es
xchg
xchg
or
les
fisubrs
sbb
fldt
push
js
fcmovbe
loopne
push
sub
push
or
ljmp
mov
lcall
shlb
pop
in
adc
mov
mov
xor
dec
icebp
pop
or
ret
jo
pop
and
fisubrl
push
popf
push
inc
imul
lods
fisubl
repz
and
jne
fcomps
lret
dec
or
cmp
rcl
mov
mov
push
sbb
push
insb
int3
aam
push
aas
jge
pushf
push
xor
adc
mov
pop
test
xor
rcl
or
mov
xor
sub
mov
pop
cmp
into
dec
sub
mov
jb
test
inc
push
imul
pop
les
enter
in
push
shr
push
mov
jl
adc
loop
subl
scas
stc
xor
jge
jae
lods
dec
ljmp
imul
out
scas
and
mov
cld
into
xchg
enter
lahf
sub
loopne
mov
lahf
fnstenv
add
in
gs
push
clc
popa
mov
adc
xchg
adcl
ret
mov
mov
xor
add
add
add
jge
and
mov
lock
into
push
cmc
mov
fadds
sub
into
or
mov
shrb
or
lcall
pushf
inc
lea
mov
jp
fwait
sub
fnstsw
cld
add
js
mov
lret
push
pusha
sub
out
push
out
or
sub
sub
rcl
inc
rorl
sub
es
mov
mov
ss
cld
rdmsr
js
bound
inc
sbb
xsaves
rcr
out
hlt
mov
mov
mov
mov
jne
sub
jge
nop
mov
or
insb
outsl
fdivl
or
xchg
fiadds
push
xchg
mov
push
frstor
out
adc
jl
je
mov
test
insl
and
movsb
mov
cmc
pushl
pop
dec
cmp
imul
push
ds
stc
and
adc
xchg
sbbb
lods
lret
pop
addr16
cmp
push
cmc
cmp
sub
into
sub
daa
pop
mov
pop
aas
sub
cmpsb
cmp
add
pop
sarb
imul
insb
adc
sbb
dec
incb
movsb
cmpsl
and
xchg
mov
insb
pop
dec
orb
decl
pop
sahf
mov
cmp
mov
jmp
lods
rorl
mov
or
xchg
clc
jns
aaa
and
push
daa
jmp
dec
sub
xor
mov
cmc
mov
out
sahf
imul
sbb
popf
out
jmp
adc
mov
mov
push
cbtw
out
repz
not
sbb
push
mov
add
or
xor
popf
mov
mov
jl
shr
sbb
sahf
sbb
stos
and
fidivl
scas
jp
cld
lds
hlt
inc
call
mov
push
cmc
xor
and
popf
in
push
mov
stos
lods
mov
xor
xchg
adc
out
cmc
iret
mov
daa
dec
test
pop
mov
mov
out
pusha
rcr
mov
push
shrl
rcrl
sbb
test
cmp
aad
daa
sbb
hlt
sbbb
jp
xor
mov
repz
cmpsl
mov
xchg
je
ret
sbb
lsl
cmpsl
mov
add
jbe
push
mov
jmp
shrb
hlt
popa
mov
and
leave
and
lahf
jp
daa
dec
mov
in
xchg
mov
in
in
decl
icebp
cmp
insl
and
mov
les
loopne
jecxz
rorl
lock
in
adc
mov
jb
in
in
push
push
mov
cwtl
mov
ficoml
outsb
or
mov
inc
movsb
cmpsb
push
cmc
sbbl
xchg
xchg
inc
push
and
call
inc
xorl
bound
dec
jnp
pop
mov
clc
jae
aam
jnp
call
cmp
test
dec
pop
pop
jb
repz
add
stos
mov
insb
icebp
movsl
mov
mov
inc
sub
or
test
popa
idivl
stos
pop
cmp
test
push
addr16
ret
sub
lods
loope
jne
xchg
adc
mov
int3
sub
sub
out
fwait
lcall
mov
dec
xor
xor
in
jae
mov
sub
pop
or
mulb
scas
xchg
add
xor
call
add
dec
adc
push
dec
pop
sbb
sbb
xchg
xor
icebp
stc
stos
pop
adc
jmp
dec
shl
fnsave
fcoml
fstps
out
cmc
ret
pop
movsl
add
push
push
inc
cmp
or
mov
mov
push
outsb
inc
icebp
fwait
test
jo
aad
or
jge
sbb
add
insb
ret
xor
cmp
pop
ds
pusha
out
dec
iret
outsb
gs
sbb
lds
adc
lock
add
pop
xor
mov
les
jo
and
test
inc
and
pop
ss
daa
push
into
adc
call
sub
loope
adc
int3
mov
test
movsl
xchg
mov
dec
jnp
xchg
and
out
sub
inc
popa
je
cmp
pop
leave
dec
mov
std
fdivl
loopne
je
cmp
ficomps
pop
ja
leave
shll
pop
repnz
aam
add
pop
mov
mov
nop
adc
cmpsb
std
lret
incb
scas
mov
mov
ret
mov
inc
mov
and
lret
pop
mov
mov
test
dec
daa
jo
dec
add
es
push
popf
xchg
jle
pop
iret
sub
push
xor
dec
xchg
or
scas
sub
fwait
sub
or
or
jp
mov
popf
test
push
jl
push
xor
jns
xchg
mov
icebp
outsb
mov
movsb
stos
outsl
jmp
cmp
push
dec
stc
sbb
pop
mov
mov
mov
mov
fldcw
out
loope
mov
data16
cmp
inc
add
xor
push
shll
fucom
jns
and
inc
dec
jns
mov
and
popa
xorl
mov
iret
cli
xor
sbb
repz
inc
mov
int3
sarl
gs
mov
xchg
setno
pusha
jnp
mov
pop
mov
add
movaps
inc
add
mov
mov
negb
jl
add
cmpsb
lock
push
mov
iret
sub
adc
mov
adc
mov
mov
push
jle
and
sti
sbb
outsl
mov
mov
jge
lcall
in
jnp
and
sti
inc
ja
jl
pusha
dec
jnp
jl
repz
in
fnsetpm(287
push
jb
push
in
pop
lret
push
mov
testl
jno
jge
and
sahf
mov
jge
or
sbb
test
call
xchg
aas
addr16
fstpt
pop
push
push
adc
xor
in
mov
mov
daa
inc
xlat
sahf
loopne
gs
mov
pop
popf
and
cltd
cmp
adc
mov
je
fcos
jno
leave
dec
in
mov
cmpsl
mov
push
xor
scas
outsl
dec
pop
pop
push
popf
jno
sti
jo
daa
leave
push
mov
sti
sbb
pop
push
dec
mov
xchg
test
fdivr
push
fidivrs
mov
mov
out
push
shlb
sbb
xor
repnz
jmp
adc
jp
frstor
daa
sti
sbb
std
inc
jae
in
test
sbb
loope
addr16
adc
dec
sub
div
pop
std
stc
lret
jmp
pop
flds
push
popa
sub
cs
or
mov
push
into
mov
shll
cs
inc
adc
lods
xor
or
jne
outsl
test
orb
sbb
or
inc
loope
xor
xchg
jae
popa
sub
fisttps
subl
add
iret
daa
add
pusha
int
arpl
jae
frstor
nop
ror
ror
jecxz
sub
pop
jns
lahf
inc
pusha
mov
pushf
push
cmc
cmp
cmpl
enter
inc
cli
or
sahf
lds
jo
mov
cmp
xchg
movsl
cmpsl
pop
mov
xchg
add
insl
mov
sbb
mov
cmpsb
into
mov
rcrl
jp
dec
call
out
mov
mov
loopne
movsl
pop
enter
call
popa
orl
jge
icebp
daa
sbb
lods
dec
pop
xchg
fstpl
repz
mov
movq
fisttps
int
xor
pop
mov
data16
cli
js
bound
fwait
and
jge
mov
adc
inc
nop
out
clc
mov
daa
or
add
sar
movsl
lods
xor
lock
fcompl
mov
std
sarb
mov
movl
repnz
test
cmp
mov
lret
aad
cli
mov
cmp
jmp
mov
adc
xorb
stc
mov
sahf
fnstcw
xlat
je
add
or
jmp
dec
lods
in
lahf
pushf
out
notb
sti
inc
cmc
pop
mov
jae
push
sub
sub
mov
xchg
dec
test
pop
xor
aam
inc
xchg
out
jle
imul
cwtl
loopne
je
mov
sbb
or
jl
cltd
shrb
scas
popa
movsl
cmp
pop
push
loope
push
mov
subb
shrl
jmp
xor
mov
fcmovb
adc
test
jns
mov
or
adc
xchg
dec
add
repz
jmp
add
fsubs
mov
mov
jae
cs
xchg
mov
cmp
adc
cmpsl
xlat
add
pusha
mov
xor
jle
sub
leave
fwait
add
pop
pop
sub
nop
inc
xchg
lea
popa
aas
xchg
int
lea
subl
add
xchg
les
dec
insl
shl
inc
jbe
pop
mov
jmp
dec
in
in
or
gs
test
mov
cbtw
not
iret
dec
jle
cmc
mov
add
push
int
or
out
ljmp
add
outsb
and
cmp
out
xchg
daa
clc
mov
test
push
inc
ret
xchg
jne
lods
das
addr16
push
push
fisubs
arpl
ret
in
dec
inc
adc
adc
and
cmpsb
mov
cmpsl
cmpsl
in
add
gs
jae
insl
inc
das
sbb
or
sahf
push
cmp
pushf
fsubrl
mov
mov
or
adc
sub
push
xor
jle
mov
jge
push
mov
je
cltd
pop
inc
cli
xor
les
mov
pusha
ja
jo
jle
lods
sahf
xor
push
fisttpl
cs
push
into
sbb
js
out
inc
jbe
fsubl
push
jge
add
mov
out
rcrb
xchg
loopne
add
std
stc
call
enter
xchg
leave
xor
inc
hlt
mov
sub
int3
popf
inc
inc
jl
pop
xchg
and
dec
jmp
mov
ss
dec
push
xor
repnz
imul
add
pop
mov
jnp
mov
inc
insb
push
outsl
xor
test
lret
or
imul
inc
outsb
in
rol
nop
lret
sbb
inc
jnp
xchg
xchg
dec
add
inc
xchg
xor
in
push
pop
fisttps
jo
mov
stos
mov
pop
dec
lea
sbb
pop
loope
ret
mov
cld
add
popf
jg
jle
mov
mov
jnp
jge
data16
cmc
pusha
mov
xchg
shll
dec
int3
stc
scas
je
adc
std
fimuls
mov
repz
pop
in
jg
sbb
push
fnstsw
jo
inc
insb
jae,pt
shlb
jmp
mov
je
ljmp
testb
stos
ja
xor
adc
sub
insb
je
popa
dec
lods
ljmp
pushf
decl
xor
add
xor
in
mov
cmp
xchg
movsl
mov
daa
xchg
pushf
jle
dec
and
adc
in
mov
sub
adc
imul
test
into
jb
jb
outsb
mov
xor
loop
push
insb
das
mov
jle
pop
bound
inc
movsl
xchg
fwait
or
sub
sbb
out
iret
leave
mov
sub
pop
dec
xor
mov
mov
daa
jne
jp
rorb
imul
aas
aaa
xor
popa
inc
lock
xorb
dec
repz
xchg
push
inc
push
fisttpl
inc
xor
aam
cld
cmp
int
dec
insl
adc
inc
insb
fs
mulb
dec
add
rcl
jae
add
jl
or
xor
xchg
and
bound
pushf
inc
xchg
mov
mov
mov
jl
stos
inc
mov
test
lcall
push
push
jb
or
jo
lock
inc
cmpsb
jnp
inc
idivb
fsubrp
dec
aad
in
pusha
shrl
sbbb
cmp
push
push
into
lret
or
dec
cltd
mov
add
setne
daa
pop
adcl
imul
fidivl
jle
and
lcall
mov
fst
mov
push
inc
mov
lahf
or
jl
sti
inc
into
cwtl
mov
xchg
stos
ficoms
js
mov
xor
inc
push
movsl
ljmp
mov
js
je
repnz
xchg
shr
std
sub
xor
dec
or
cs
sbb
push
out
jne
adc
jge
ret
pop
cli
push
pop
or
or
add
and
js
fxch
push
stos
fs
pop
lods
adc
jecxz
push
lods
sbb
push
xchg
xorb
pushf
lcall
iret
fs
or
roll
xor
jno
cmp
mov
jno
lahf
jbe
push
dec
mov
ss
sub
jge
imul
jmp
out
inc
outsl
push
jp
fisubrs
xor
inc
push
mov
pop
sbb
jae
cmpsl
int3
or
es
sti
std
pop
mov
mov
mov
mov
fstpt
add
xchg
lods
in
jns
xchg
xchg
mov
jg
scas
xchg
aad
mov
pushf
xlat
sub
xlat
movsl
or
out
mov
dec
mov
stos
aaa
loope
add
popa
dec
daa
stos
and
or
xchg
sbb
or
mov
add
sub
lock
push
movsl
and
lods
xchg
sti
fiaddl
idivb
insb
repnz
aam
or
imul
push
test
mov
bound
add
repnz
sbb
sub
in
into
fcoms
adc
cmc
pop
nop
fsts
mov
mov
fistps
fs
iret
mov
rolb
dec
adc
mov
pop
sbb
jo
cs
stos
std
addr16
add
inc
jmp
mov
cmp
add
iret
push
jecxz
jno
filds
test
inc
lods
mov
int
outsb
push
stos
aam
lock
inc
pushf
dec
rcll
cwtl
test
sub
sbb
xchg
pslld
jne
xchg
shlb
push
jmp
fldl
and
mov
jg
std
jno
and
mov
xor
or
sbb
and
addl
jge
js
rcll
pop
bnd
pop
pop
mov
mov
int3
mov
cwtl
sbb
adc
repnz
inc
fldt
xchg
mov
leave
push
sub
shll
insl
mov
push
mov
cld
adc
sbb
test
icebp
mov
adc
fsubr
ja
lods
cmp
sbb
push
rorb
xchg
add
xor
lahf
imul
push
and
lock
xchg
call
xchg
xchg
sbb
or
aad
mov
pop
movsl
test
in
fcomps
shrl
aaa
push
in
xor
ret
push
orl
sbb
addr16
jmp
leave
ljmp
pop
or
lods
mov
int3
leave
jmp
sub
fs
fnstenv
xchg
mov
mov
jb
fbld
imul
icebp
adc
pop
bound
pop
inc
cmp
pop
int3
dec
adc
stos
iret
test
ljmp
or
cmp
out
mov
cmp
and
lcall
dec
pop
lock
push
fadds
mov
inc
or
adc
aad
lahf
jecxz
inc
insl
aad
les
jno
mov
fldcw
adc
mov
dec
push
les
push
adc
or
inc
jle
sbb
es
and
or
mov
sahf
lcall
rorl
outsb
cmpsl
jne
add
repnz
xor
dec
mov
mov
test
mov
jmp
aaa
or
scas
outsl
adc
dec
add
mov
shlb
cmp
cld
cwtl
les
inc
sub
sub
lea
stos
jo
fstpt
aad
jbe
out
push
out
scas
movsb
in
push
or
aaa
pop
cmc
es
inc
or
stos
fld
rcll
icebp
test
call
jae
in
sbb
outsb
repnz
sub
or
sub
cmp
in
imul
outsb
mov
fcoml
inc
mov
test
adc
std
js
hlt
mov
rcr
xor
push
cmp
mov
fildl
add
shll
cmp
mov
push
scas
add
cmp
push
in
stos
pop
pop
mov
pop
adc
push
sbb
test
in
mov
negl
mov
loope
jp
jg
or
stos
test
scas
xchg
lret
pusha
inc
sub
lret
rorb
frstor
cld
sbb
sub
cmpsl
aas
test
push
jmp
int
or
aam
mov
jmp
adc
gs
sub
pop
lret
cmp
clc
sbb
adc
sar
aaa
pop
test
xchg
cmpsl
pop
inc
dec
out
daa
cmp
cwtl
adc
mov
sub
in
in
mov
xorb
dec
in
outsb
out
lods
push
xchg
jmp
lret
mov
ja
shrl
mov
popa
lea
test
outsb
jnp
or
and
movsl
aam
mov
and
shlb
cld
es
iret
pop
sbb
xchg
ret
leave
xor
aas
scas
push
scas
mov
sbbl
inc
dec
ret
pop
arpl
dec
push
fstps
std
mul
mov
sbb
ljmp
or
je
add
or
cmp
xchg
outsb
jmp
and
fcomi
mov
push
lahf
pop
ret
sbb
mov
ljmp
outsb
and
rorb
xlat
out
adc
and
xchg
in
sbb
inc
add
pushf
lods
and
jb
das
xor
add
nop
je
mov
fs
out
sub
pop
sbb
inc
cltd
add
repz
insb
test
inc
push
int
ja
push
sbb
pop
inc
jge
or
jle
data16
xor
inc
daa
shlb
pop
push
add
cmpsb
icebp
shl
std
movsl
mov
inc
outsl
mov
popl
lods
jmp
xchg
stc
pop
es
adc
sub
ja
cmpsb
add
lret
jno
pop
xchg
loop
ljmp
mov
mov
daa
push
add
pop
mov
xlat
idivl
and
adc
outsb
mull
into
orb
cmp
cmp
pop
xchg
xchg
cli
cwtl
sti
add
push
mov
lcall
stos
pop
cwtl
jno
pop
movsb
cwtl
ret
pop
mov
mov
inc
es
jecxz
andb
ljmp
leave
pop
push
popa
mov
scas
popa
or
jmp
add
mov
dec
mov
inc
mov
or
mov
inc
pop
mov
cmpsb
pop
aam
jmp
movsb
cmp
mov
dec
jne
fdivrs
adc
jmp
inc
xchg
in
in
or
cmp
cltd
or
xchg
sub
jg
push
ja
push
push
push
mov
pop
insb
pop
xchg
popa
imul
cli
stos
and
sti
pop
pop
fsubrs
loop
mov
pop
ljmp
das
inc
inc
jl
bound
das
push
aad
sub
pop
cmpsl
stc
dec
lods
icebp
outsb
leave
aam
movsb
pop
push
sub
mov
mov
sub
push
cltd
mov
ja
leave
push
adc
mov
roll
inc
fstpl
sbb
hlt
push
dec
xchg
sub
pop
clc
subb
mov
mov
hlt
mov
lret
xchg
pop
in
scas
push
mov
call
testl
rcrl
fisubs
bound
orb
pop
xor
sbb
outsb
and
pop
icebp
mov
jmp
movsl
aad
jns
or
mov
xchg
adc
stos
mov
lcall
call
subps
jle
int3
mov
push
sbbb
jg
movsl
jbe
cmc
fcomp
mov
ds
aas
mov
xor
data16
adc
xchg
inc
repnz
jbe
popa
into
inc
jmp
xchg
dec
cmpsl
jo
and
pushf
std
fcmovbe
clc
xor
lods
mov
nop
adc
addr16
popa
inc
push
push
jns
and
push
push
enter
cltd
cmpsl
mov
or
dec
mov
jmp
sahf
sahf
sar
mov
mov
dec
jg
cld
scas
loopne
lock
cmp
out
or
jae
jecxz
scas
loop
shl
mov
repz
and
stc
sbb
ret
cmp
imul
scas
icebp
repz
fbstp
xchg
xchg
inc
mov
xor
sub
cmp
lret
fstpl
addl
adc
jecxz
insl
adc
pop
lock
and
sahf
jmp
lahf
cmp
sbb
mulb
cmp
ljmp
loop
fldl
leave
cmp
mov
in
mov
inc
or
or
in
sub
movsb
cmp
pop
stc
repz
dec
rol
fcoms
negl
xlat
shr
xchg
outsl
pop
xor
jns
and
stos
lea
jle
ficomps
mov
sbbl
in
cmp
out
lods
add
rorl
inc
xchg
xchg
add
cmp
sbb
lods
inc
cli
in
inc
rclb
jne
dec
add
test
or
push
mov
push
xchg
mov
push
and
cld
jb
data16
mov
mov
je
test
data16
out
cmpsl
xor
mov
daa
movsl
xor
loop
push
fmuls
adc
add
rolb
sub
cmp
sbb
adc
xchg
cmp
pusha
jo
movsl
aas
inc
jnp
mov
xchg
xor
xlat
cmpb
or
jbe
sub
adc
jecxz
jne
inc
inc
push
fdiv
aaa
jbe
jmp
inc
test
lds
sbb
inc
and
push
ss
rol
jbe
subl
or
stc
mov
fcmovne
dec
setno
outsb
jne
cmpsb
push
je
and
lret
js
popf
test
xor
mov
std
xor
int
mov
test
ja
mov
inc
jg
mov
mov
aaa
jns
dec
cmp
inc
lret
jb
comiss
push
mov
and
into
mov
xchg
sub
cmpsb
in
adc
rcll
pop
add
cmp
test
xchg
sub
jecxz
push
ds
dec
jno
jecxz
jecxz
mov
mov
pop
cmpsl
mov
mov
gs
dec
mov
test
aaa
es
loopne
mov
std
pop
push
jb
sub
and
movsl
inc
in
stos
fisttps
cltd
mov
leave
pop
bound
outsb
jno
jo
mov
repz
jbe
arpl
jb
jg
pop
popa
pop
xchg
inc
sbb
xor
fcomip
insb
rcrl
jae
insl
push
mov
insb
out
inc
jg
pop
sub
push
imull
or
sbb
imul
and
fwait
pop
inc
or
pushf
cmp
sti
sub
dec
push
xchg
adc
pop
and
jnp
loopne
repnz
test
pop
push
repnz
pop
jp
repz
mov
cltd
dec
inc
stos
cmpsl
andl
cmpsb
and
push
in
hlt
mov
and
out
pop
aad
inc
jecxz
out
fwait
pop
and
jno
out
adc
hlt
fs
pop
mov
mov
fldenv
in
xchg
fistpll
pop
add
push
add
out
push
mov
xchg
sarb
xchg
dec
aaa
das
dec
fs
rclb
mull
cmovns
fbstp
sub
mov
adc
data16
aaa
mov
push
adc
adc
add
es
out
aad
xor
mov
fcoml
pop
insl
adc
leave
push
xor
push
mov
mov
out
add
dec
imul
sbb
call
and
and
popf
ret
mov
push
negb
aas
sub
sub
pop
aas
xor
cmpsb
jae
cmp
in
sar
sbb
adc
jmp
mov
mov
pop
mov
shrl
in
pop
bound
push
dec
adc
fldenv
mov
xor
movsb
sub
sub
shl
ds
jl
jno
rcll
outsb
dec
mov
test
cltd
in
inc
popf
std
xchg
jecxz
pushf
es
aad
inc
sahf
xor
leave
ds
stc
pop
inc
pop
out
notb
cmp
or
lcall
inc
inc
mov
cmp
mov
push
clc
test
movsl
mov
ljmp
xor
fcompl
mov
cmc
mov
mov
sub
ljmp
cwtl
mov
mov
adc
js
xor
lret
insl
mov
sub
and
pop
sti
or
fstpt
jge
enter
and
scas
out
xchg
pusha
dec
mov
push
cmpsb
and
int
cmp
cmpsl
cmp
jg
jbe
aas
sub
mov
or
mov
inc
js
xor
adcl
jg
dec
not
lcall
xchg
pop
sub
std
stos
bound
pop
mov
inc
and
lret
jno
rorb
cmpsl
out
sbbb
ljmp
pandn
pop
test
mov
scas
mov
xchg
push
push
int
dec
aas
popa
insl
dec
jl
push
pusha
fs
pop
lds
mov
and
adc
and
inc
mov
inc
lea
lcall
lods
sbb
andl
xchg
sub
push
mov
nop
or
push
mov
imulb
repz
xchg
push
std
outsl
xchg
bound
push
push
loope
add
mov
fstps
mov
in
rcrb
mov
mov
or
ss
cmp
mov
mov
mov
pop
mov
jae
and
jge
mov
int
xchg
jae
popf
leave
stos
mov
xlat
xor
pop
push
pushf
aam
xchg
out
andb
pop
es
enter
push
mov
fstps
lods
pop
out
xchg
and
pop
movsb
inc
xchg
jmp
cltd
cltd
enter
movsb
sti
cli
cwtl
movsl
xor
sbb
movsl
pushf
add
int3
lock
pusha
dec
push
bound
push
cmpsb
cltd
mov
js
push
xchg
pop
pushf
int3
mov
rorb
lds
ja
es
push
pop
xor
adc
pop
cmpsb
xchg
clc
pop
mov
and
icebp
cmp
xchg
popf
inc
pop
push
jg
jb
fiadds
push
push
inc
pushl
test
push
inc
mov
mov
mov
fnsave
lock
into
xor
push
mov
xor
xchg
daa
jg
jns
mov
mov
not
loop
inc
pushf
pop
lret
das
push
jno
lcall
pop
mov
imull
push
push
xchg
lret
ds
pushl
inc
pop
mov
in
adc
shlb
insb
or
mov
mov
push
jp
xor
fnop
leave
jno
cmp
pop
das
push
xchg
fisubs
push
xor
mov
inc
cmp
dec
jg
adc
fucom
cmp
adc
test
push
mov
fs
cli
stos
icebp
mov
add
sbb
inc
leave
dec
cld
mov
inc
ss
sahf
cld
pop
mov
or
pop
shrl
pushf
jle
fcomps
test
xchg
xor
adc
hlt
pop
mov
cmp
call
jmp
add
cmpsl
jl
jl
adc
or
pushf
or
push
fsubrl
fistpl
outsl
daa
pop
sub
add
mov
jno
jne,pt
ja
cmc
call
pop
pop
fdivs
sub
and
push
xor
arpl
popl
in
dec
push
push
nop
mov
enter
jg
fisttpl
lods
sbb
ret
sbb
cmp
cld
pop
in
push
or
adc
jae
std
add
jmp
jnp
jns
rcrb
or
lret
imul
xor
mov
out
test
loope
xchg
xchg
lock
pushf
mov
test
fnstsw
sti
call
test
test
mov
aas
mov
add
jnp
mov
inc
test
jno
cs
into
pop
push
xchg
mov
cmc
xor
mov
idivl
cmp
daa
xor
pushf
lods
mov
add
mov
jp
inc
pusha
addl
nop
xchg
stc
cmc
sahf
out
test
clc
imul
mul
cmpsl
add
ja
movsl
aas
movl
cltd
xor
xchg
ret
xor
sarb
fdivrl
sbb
xchg
sub
js
shld
rcll
scas
rorl
xchg
aas
cmp
nop
mov
lret
insb
js
decb
mov
xchg
adc
sub
inc
dec
inc
mov
cmp
jle
dec
sbb
sti
cltd
stos
or
icebp
mov
movsl
subl
fisubrs
pusha
mov
cmp
sbb
stc
iret
pop
mov
push
push
cmp
ss
outsb
sub
cld
pop
and
push
mov
stos
push
inc
leave
enter
js
in
xor
int3
jns
loope
cmp
data16
dec
addr16
jg
xchg
mov
popf
movsb
shlb
sbb
dec
loopne
lea
inc
push
test
ror
or
pop
hlt
xlat
test
sub
jb
ret
test
mov
cmpsl
rcrl
push
xor
js
lods
xor
inc
jno
lret
out
popa
jmp
aad
pop
loope
cld
test
sub
stc
shl
cltd
dec
sub
imul
mov
cmp
stc
sub
jmp
ret
ret
push
pop
xor
or
lret
mov
std
lret
xchg
imul
cmp
lret
pop
pop
mov
xchg
popf
sbb
insl
ja
xor
lods
xor
mov
mov
push
cmp
dec
enter
sub
push
pop
data16
cltd
jge
push
test
push
loopne
or
adc
aas
sub
xor
jb
pop
call
jb
xchg
popf
add
repz
add
jg
xor
cli
loop
nop
mov
sbb
gs
std
jno
push
pushf
mov
scas
pop
lods
repnz
xchg
mov
loopne
push
mov
out
fmuls
lcall
in
aam
int
or
imul
test
jp
add
cli
daa
ret
or
sub
loop
into
call
cltd
adc
gs
stos
xor
popl
jae
test
mov
xchg
mov
shrl
or
cli
mov
aaa
inc
addb
xor
fisubl
mov
mov
adc
add
and
imul
movsb
in
sub
lods
mov
adc
enter
cmpsb
xchg
outsl
mov
push
into
mov
leave
shlb
xchg
mov
in
cmpsb
mov
xor
mov
stos
and
mov
xor
dec
out
idivl
je
mov
and
jb
call
pop
push
addps
lcall
lock
loop
and
mov
xchg
int3
push
push
push
popa
dec
xchg
mov
push
fcoms
mov
into
dec
andb
inc
rorb
sbbl
divl
lods
sbb
fwait
mov
iret
popf
dec
sbb
mov
adc
push
jp
fst
pop
pop
cmp
xor
xchg
pop
adc
cld
das
pop
pushf
xor
xor
incb
adc
xor
add
js
sahf
iret
jmp
sub
mov
mov
cmpsb
adc
sbb
pop
stos
subl
ljmp
mov
fdivrs
popa
shlb
dec
pop
dec
daa
sbb
dec
cmc
ror
mov
fildll
and
jp
cli
dec
int
add
mov
loopne
filds
or
adc
xchg
mov
out
pop
push
push
into
shld
adcb
adc
insb
add
ret
push
adc
cmp
sub
loope
adc
cs
xor
lods
and
or
push
pop
out
xor
pop
insb
xchg
stos
and
lcall
xor
mov
clc
cmp
sub
cmp
sub
cmpsl
ds
jge
fs
andl
push
shr
ljmp
cmp
add
inc
aam
push
lret
fnstenv
nop
rorl
mov
mov
inc
dec
dec
dec
pop
xor
repnz
pushf
sbbb
mov
lods
mov
add
xor
pop
aam
lods
sbb
into
push
push
ljmp
pop
das
push
adc
xchg
sbb
or
mov
cmp
sub
icebp
insb
xor
push
into
gs
test
rcrb
shrl
lahf
sarl
and
xchg
pop
ja
xchg
or
and
fstps
jno
out
pusha
inc
push
mov
clc
xchg
xchg
pop
test
mov
jle
dec
sbb
shll
ja
sti
jmp
push
ja
xor
fs
sub
lret
pop
or
jg
js
loop
sub
imulb
fbstp
scas
add
repnz
or
jbe
testb
shrb
dec
in
fists
or
xor
mov
repz
add
push
add
mov
dec
cs
add
pop
inc
dec
imul
xchg
insb
xchg
dec
jmp
xchg
sub
aas
pop
popl
xchg
cltd
loope
shlb
and
mov
add
push
push
or
pushf
into
mov
or
inc
jb
aas
std
das
sbb
cmp
xor
inc
xor
mov
insl
add
jg
sbb
nop
cltd
sub
pop
leave
cmp
rcrl
mov
push
and
sahf
push
pop
mov
aaa
test
sbb
in
sti
fstl
adc
lret
lods
sbb
cmp
js
out
les
stos
iret
push
cmp
fnstsw
pop
dec
in
sub
jne
mov
push
push
fimuls
outsb
mov
test
movl
mov
sub
nop
jb
cmp
iret
shll
cld
adc
or
adc
dec
jb
dec
inc
mov
fcoms
push
data16
call
and
push
mov
lock
push
ds
test
mov
jge
xchg
movsb
les
subl
std
lock
push
loope
mov
add
dec
push
andb
mov
and
cltd
fs
loopne
cmp
cmp
enter
mov
and
ja
hlt
and
pop
jmp
push
sub
sahf
adc
in
dec
mov
jl
or
js
add
in
xor
push
jmp
and
dec
xchg
cli
jge
ret
dec
jns
stc
ret
mov
ds
add
repnz
je
aad
and
jbe
lods
lea
cmc
pop
loope
sbb
inc
mov
frstpm(287
lock
and
lahf
lds
cmp
pushf
xchg
push
bsr
dec
rorl
cmp
mov
sbb
pushf
mov
stos
pushf
pop
aas
xor
enter
fistpl
es
jecxz
add
daa
int
push
xor
inc
sbb
xchg
test
ret
adc
push
and
dec
ret
scas
adc
push
bound
lods
pop
or
jbe
test
mov
jl
jmp
mov
loopne
and
add
and
lods
sub
or
in
gs
jl
test
sbb
ret
mov
add
lods
test
cmp
sub
arpl
jge
mov
mov
or
xchg
and
out
dec
in
imul
sbb
out
pop
lock
sar
pop
mov
and
mov
enter
jl
sub
and
imul
data16
mov
or
into
jge
leave
mov
jne
fistl
call
add
or
push
insb
sbbb
hlt
jno
lea
mov
inc
inc
xor
cmp
adc
xorl
lea
mov
sti
or
xor
pop
int3
jecxz
int
inc
mov
test
cwtl
in
outsb
into
sar
adc
xchg
or
aam
punpckhbw
mov
xchg
xor
and
mov
xchg
rorl
and
das
imul
pop
cwtl
std
enter
repnz
daa
pop
dec
and
cmpsb
imul
mov
test
inc
jg
arpl
adc
mov
outsl
dec
clc
into
scas
xchg
mov
push
movsb
xchg
and
mull
fsubrl
popa
or
enter
outsb
pop
in
jmp
jmp
pop
loopne
test
jnp
mov
sbb
pop
inc
repnz
pusha
jmp
in
jns
fmull
or
or
hlt
push
cmp
sbb
adc
xchg
xor
dec
xchg
in
cmp
addr16
mov
loope
cmpsl
push
xchg
lahf
in
mov
ror
dec
fadds
lret
in
mov
xchg
daa
rorl
dec
nop
divb
adc
ljmp
push
aas
inc
lcall
mov
int
ljmp
mov
js
stc
jecxz
sbb
or
and
dec
les
into
or
sbb
sbb
dec
dec
fbld
test
pop
dec
ja
xor
stos
adc
xchg
sub
mov
xor
xlat
ss
dec
out
leave
in
mov
add
cmp
jmp
jo
mov
jmp
cmpb
adc
xchg
xchg
pop
fldl
movsl
mov
mov
lret
dec
jbe
xor
cltd
imul
pop
lds
shll
pop
xor
out
js
cmc
pop
mov
or
mov
mov
lods
test
movb
popa
cmc
and
insl
or
lret
loope
dec
xchg
cmp
pop
or
xchg
mov
test
cmp
pop
and
pop
sbb
pcmpgtd
push
mov
fwait
push
mov
into
filds
and
sbb
inc
adc
add
sub
std
mov
pop
dec
js
and
cmp
test
sbb
pop
pop
pop
loopne
fnstcw
nop
sbb
and
lcall
cmp
jo
push
gs
out
ror
jle
mov
lcall
sbb
lret
icebp
mov
cmp
iret
cmp
fwait
jne
xchg
arpl
mov
in
xchg
das
push
icebp
and
and
or
mov
insl
hlt
and
push
cltd
dec
inc
sbb
movsl
ds
cltd
push
mov
mov
push
ret
xchg
pop
fistps
jecxz
inc
pop
pop
mov
lahf
lcall
shl
cmp
js
dec
addb
pushf
xchg
push
mov
mov
push
sbb
pop
ss
push
pushf
and
jmp
insl
pop
and
jne
out
mov
adc
xlat
mov
jbe
arpl
xor
ret
out
inc
loopne
gs
ds
xchg
insb
push
mov
icebp
cld
cmp
push
ss
ss
leave
lods
xchg
sbb
sbb
loop
push
push
lods
xchg
push
pop
out
addl
add
cli
cmc
push
test
fwait
cmp
pop
stc
insl
ja
or
pop
jl
aaa
pop
jns
push
mov
cmpl
ljmp
dec
jg
shll
mov
stc
adc
or
orb
movsb
mov
in
xchg
fdivrs
inc
enter
or
ret
daa
add
cmpsb
xlat
xchg
decl
roll
into
mulb
or
aad
adc
repz
and
ds
and
pop
loop
sti
in
pop
or
mov
pop
add
into
dec
xchg
and
cmc
xor
sbb
loop
aas
xor
cmp
xchg
mov
mov
dec
dec
ss
aaa
iret
lock
jo
jo
pop
ja
xchg
dec
adc
into
sti
push
mov
xchg
rcrl
xchg
dec
arpl
xor
aam
push
test
jg
lea
pop
push
test
pop
cmp
dec
mov
jnp
iret
push
push
addl
add
repnz
scas
push
inc
push
add
rclb
rolb
or
pop
and
inc
stos
cmp
pushf
int
xor
pop
and
pop
out
cmpsl
pushf
icebp
sbb
mov
lods
inc
jp
scas
jg
jno
or
cmpsl
insl
jmp
inc
adc
negb
and
test
adc
lock
mov
lock
insb
sbb
mov
xlat
daa
mov
xor
shll
das
cltd
lret
or
xor
int
iret
inc
cltd
std
and
jl
stos
sbb
leave
inc
jmp
xchg
or
or
iret
pusha
call
sahf
ret
inc
sbb
jp
lods
ds
jbe
add
lock
cmp
repnz
nop
mov
xchg
in
test
mov
xor
icebp
pop
mov
add
mov
icebp
hlt
xlat
mov
mov
xchg
lock
pop
adc
jbe
inc
inc
add
