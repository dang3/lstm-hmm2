sbb
add
xchg
inc
movsb
repz
xor
pop
movsb
jmp
push
mov
repz
test
dec
mov
xchg
sahf
add
shll
test
outsb
dec
or
dec
es
je
pop
or
in
and
mov
into
push
test
jns
mov
add
aas
jmp
pop
popa
fs
mov
std
pop
mov
icebp
lds
das
push
icebp
pop
dec
lcall
shrl
mov
out
add
or
sbb
or
jns
fcoms
fldt
adcl
fdivrp
mov
adc
sub
cmp
cmp
xor
adc
adc
jae
ds
and
addb
push
sub
movsb
xor
je
push
repnz
loop
jecxz
mov
lret
clc
arpl
insb
cmp
out
inc
testl
add
lock
push
inc
fcoml
testb
jmp
cwtl
xchg
int
sbb
imull
clc
pop
push
popf
rclb
inc
inc
cmp
dec
cmp
add
mov
push
sub
push
aas
xchg
xchg
mov
cld
cmp
inc
pop
and
addr16
shlb
inc
ljmp
js
fimull
pop
enter
shlw
movb
inc
push
test
sub
add
jl
adc
ficoms
add
jg
je
add
sbb
outsl
cltd
mov
subl
sbb
insb
xchg
in
in
rolb
stc
cltd
push
mov
ret
jo
mov
mov
leave
not
pop
int
or
lock
sub
jno
lahf
xchg
inc
push
add
fwait
mov
js
xchg
aas
ljmp
fwait
sahf
mov
xor
call
or
dec
ret
xor
xchg
mov
incb
pop
or
shl
cmp
sub
adc
ja
je
sub
test
jge
sbb
mov
sbb
and
jae
pop
and
cli
mov
lahf
jg
add
xor
sbb
push
mov
mov
mov
sub
mov
shl
into
pop
push
jbe
jo
stos
dec
or
adc
xlat
out
data16
out
lods
mov
inc
clc
loope
and
xlat
jl
jae
lret
fnstenv
leave
mov
es
insl
or
mov
push
shll
iret
lods
addr16
ret
test
int
mov
scas
pusha
lahf
mov
pop
xchg
cmpsb
lea
sub
and
xor
push
fwait
dec
icebp
loop
mov
push
sbb
rcr
ss
scas
call
mov
xchg
into
mov
shll
nop
pop
and
add
aaa
cmp
movsl
cltd
out
or
sbbl
call
mov
mov
xchg
xor
jecxz
mov
push
ds
xor
enter
push
ficoml
xor
sahf
std
jae
cmp
mov
std
jge
scas
mov
enter
loopne
mov
repz
mov
mov
repz
std
dec
xor
cltd
sti
shlb
lea
fidivs
xchg
jle
mov
stc
insw
fst
xor
sbb
out
dec
xchg
insb
fs
out
sub
mov
scas
iret
loop
mov
jbe
je
js
repz
jno
gs
and
sarb
ret
add
nop
mov
jno
sbb
dec
sub
mov
stc
mov
mov
cld
loope
push
inc
push
jg
push
inc
mov
dec
clc
jecxz
ds
in
dec
mov
mov
fadds
in
xlat
mov
push
mov
add
mov
lret
adcb
mov
push
cmp
xchg
icebp
adc
xlat
and
insb
pop
stos
aaa
inc
int
leave
fsubs
aas
cmp
or
dec
stos
mov
jae
jo
mov
mov
dec
les
push
mov
insb
and
xor
mov
cmp
rorl
mov
jle
jmp
ds
inc
test
xor
fdivrl
jno
pop
fsubrl
das
stc
adc
lcall
mov
aad
push
adc
jbe
ret
mov
repz
sub
imul
scas
xchg
les
fstpl
add
ret
repnz
popa
inc
pop
pusha
sbb
test
dec
jecxz
lret
mov
mulb
scas
sbb
mov
in
hlt
mov
shl
andb
mov
mov
mov
loopne
ljmp
shl
cwtl
mov
fwait
lahf
cmc
xchg
test
in
jbe
xor
aam
dec
cld
jg
xchg
pop
xchg
fpatan
pop
push
out
je
cmpsl
xchg
inc
jp
insb
mov
inc
les
inc
loop
pop
mov
mov
mov
xchg
out
in
stos
mov
dec
mov
and
or
loopne
shll
leave
outsb
aad
lret
cmp
into
popl
fs
push
cwtl
sub
pop
mov
lret
sbb
mov
das
jno
jne
addr16
push
add
stc
inc
mov
mov
or
inc
in
mov
out
jecxz
je
sti
add
add
pop
sbb
in
out
jg
scas
test
xor
fs
cwtl
imul
pop
mov
iret
jnp
insl
repnz
jnp
xchg
pop
dec
insl
in
mov
clc
inc
jmp
pop
aas
push
mov
add
mov
push
sbb
sahf
inc
adc
sbb
aaa
scas
divb
adc
test
xchg
and
pop
sti
cmp
lret
pop
sub
sbb
push
pop
or
cmp
int
push
dec
pop
packsswb
leave
int
test
sti
adc
bound
aam
pop
push
popa
pushf
lcall
cmp
ljmp
dec
fs
leave
cld
imul
rorb
cmp
negb
mov
lret
inc
inc
insb
mov
fcmovbe
cli
jnp
add
leave
pop
mov
je
cmp
cmp
jg
mov
mov
lods
xchg
sub
jnp
sbb
push
add
xchg
mov
mov
and
inc
call
cmp
jmp
out
aas
sbb
mov
mov
test
cwtl
pop
and
test
xor
lret
mov
xchg
adc
mov
sbb
int
aaa
cmp
pop
dec
and
dec
jb
mov
pushw
out
sbb
push
fstpl
mov
cwtl
scas
out
inc
bound
xchg
mov
sub
adc
mov
iret
mov
cmp
add
mov
inc
pop
cmp
sub
sti
cmp
mov
push
jns
adc
fimuls
repnz
aad
shll
push
mov
aas
xor
xorl
aad
loope
rclb
fcmovnu
inc
sub
stc
pop
mov
add
into
xchg
data16
mov
pop
xchg
bound
stos
fsubr
push
data16
test
push
jmp
insb
aam
out
in
cmpsl
clc
fisubs
inc
mov
aad
in
or
fwait
jns
xlat
cmpsb
pop
and
adc
cmp
jecxz
insb
jecxz
sahf
cmp
adc
push
add
dec
inc
adc
out
sbb
int
push
or
xchg
cmp
mov
mov
sbb
adc
call
inc
adc
imul
sbb
sarb
scas
mov
dec
xor
xor
mov
mov
lods
and
iret
or
and
xchg
xlat
int
arpl
outsb
sbb
imul
mov
pop
push
jg
mov
mov
jmp
xchg
push
outsb
push
popf
loop
jecxz
ret
push
xor
rclb
mov
xchg
pop
push
ja
in
xchg
pop
mov
xor
rcll
mov
push
pop
cmpb
push
inc
mov
cltd
xor
push
ja
jl
mov
inc
in
pushf
ss
loopne
xor
and
sub
loope
scas
daa
lret
hlt
pop
out
mov
lock
rcrl
mov
jae
xchg
addr16
call
lods
cmpsb
mov
imul
push
repz
test
dec
stos
fisttpll
xor
and
data16
cwtl
mov
aam
subb
in
loop
xlat
inc
or
lret
inc
jmp
hlt
xor
push
jmp
cld
roll
mov
add
add
pop
addr16
adc
cmp
scas
xor
inc
or
insl
push
cmp
ret
test
sbb
popa
sbb
ja
outsl
fs
pop
out
jnp
and
call
into
mov
xchg
lods
push
fwait
mov
push
out
xchg
mov
filds
out
jle
jb
lahf
loopne
ds
das
ret
pop
xchg
ds
inc
sahf
outsb
lret
inc
or
ljmp
sub
mov
iret
ret
push
adc
pushf
cwtl
nop
fcomi
fimull
mov
test
movsl
jnp
inc
stos
loop
mov
xchg
lds
jbe
jg
jo
lods
imul
iret
push
xchg
stos
cli
mov
mov
sub
and
andb
jge
jae
or
pop
jbe
cli
mov
int
push
in
insb
sbb
dec
push
pusha
leave
jmp
jb
pop
push
cmpsb
stos
stos
outsb
mov
cmc
pop
out
lret
sub
out
push
lahf
notl
or
bound
xchg
aad
mov
dec
mov
xchg
jmp
inc
xchg
les
sbb
in
imul
sub
xchg
out
mov
subl
repz
mov
fnstenv
or
pop
xor
pop
lret
pop
shlb
lock
sub
call
std
scas
jg
cli
cmp
fidivl
pop
movsb
lret
xchg
cmp
lock
repz
jecxz
icebp
arpl
jg
out
dec
outsb
sbb
shll
testb
sbb
inc
test
or
xchg
cmp
mov
outsl
push
icebp
dec
mov
repz
xor
rcl
mov
out
push
cli
psubusb
mov
mov
add
pop
mov
int3
fcomip
xor
test
out
jne,pn
pop
cmp
stos
mul
add
xor
push
fsubrl
daa
dec
jbe
in
xchg
scas
mov
outsb
jne
repnz
out
lods
movsb
jle
and
adcl
jo
aad
xor
shlb
sub
stos
cwtl
mov
mov
pop
sti
in
jo
lea
jge
jmp
mov
and
ljmp
ss
loop
cmp
js
jo
jae
xchg
cmp
dec
stos
mov
mov
pusha
mov
xor
mov
dec
sbb
adcb
dec
cmp
stos
rolb
insb
push
rolb
orb
loope
or
cmp
pop
sti
dec
jno
pop
cmp
cmp
jle
bound
stos
andb
and
or
cmp
imul
dec
jecxz
lea
jbe
arpl
or
mov
ljmp
pop
xor
sti
es
shrb
xor
inc
das
pop
out
in
xor
pop
inc
push
and
xor
jo
shll
fs
xchg
mov
sub
andb
xchg
jp
mov
sub
in
mov
lods
and
ljmp
jp
and
addb
adc
lret
cmp
cltd
outsb
fmul
mov
jno
in
fdivrp
je
jae
out
aaa
lcall
adc
inc
fldl
movb
leave
fdivp
rep
xchg
mov
pushf
movsb
lock
and
mov
xchg
subl
adc
xchg
sub
in
out
insl
ds
inc
addb
jmp
pushf
mov
addb
inc
dec
lods
inc
stos
jns
and
stos
cmp
sub
xchg
sub
xlat
les
cmc
mov
dec
mov
mov
aam
xor
stc
push
mov
mov
jp
lods
mov
xchg
mov
int3
ret
int3
mov
cld
sub
cmpl
push
mov
push
enter
cmpsb
xor
cmp
jecxz
and
imul
cmc
or
xor
and
orb
sub
in
call
cmp
push
pushf
dec
ds
rcrl
add
adcb
or
jbe
imul
shrb
imul
mov
xorl
mov
mov
jo
mov
iret
xor
leave
push
sahf
inc
mov
or
dec
test
jp
pushl
push
insl
adc
or
aaa
jnp
mov
leave
and
arpl
dec
ss
mov
dec
adc
push
xor
jmp
mov
cltd
in
cmp
xor
sbb
sbb
jnp
je
ret
cmp
adc
mov
adc
pop
push
addr16
frstor
fstps
adc
insb
clc
cmp
sti
stos
sub
ficompl
leave
mov
jp
sbb
pop
test
xor
clc
ds
jecxz
jle
dec
jne
lock
ret
pop
push
js
je
or
add
fs
mov
fidivs
cmpsb
cmp
mov
addb
insl
push
aas
out
mov
xor
push
lds
dec
out
ficoml
cwtl
jge
fistpll
or
or
orb
xchg
push
fdivs
jp
icebp
sar
es
loope
add
push
aas
mov
test
shlb
call
enter
out
mov
and
mov
push
jge
jnp
ja
lret
nop
movsl
xchg
pop
pop
cld
jge
and
sub
das
sahf
mulb
lahf
lret
or
lds
fwait
sub
fwait
dec
or
fnstsw
jo
cmp
andl
mov
cmp
mov
push
xor
push
pop
mov
mov
mov
jmp
mov
sub
sbb
inc
cmc
mov
dec
shll
xlat
sbb
js
call
jnp
pusha
fimull
mov
xchg
pop
ret
and
inc
xchg
push
xchg
fiaddl
lret
icebp
push
mov
inc
adc
popf
scas
jb
mov
mov
lock
add
outsb
sarl
loope
xchg
mov
add
out
inc
jge
fs
xchg
sbb
jg
push
xchg
cmp
pop
ffreep
cld
sbb
adc
jecxz
lods
in
mov
clc
and
popf
pop
iret
pop
add
or
call
ss
xor
inc
lods
mov
andl
or
push
test
lods
push
xchg
xchg
pop
fxch
jnp
push
push
sub
mov
add
jg
push
imul
insl
testb
push
ret
loope
lock
fcompl
push
imul
jp
out
inc
in
push
inc
scas
rolb
and
mov
lock
js
std
les
push
ret
je
pop
pop
repnz
bound
pop
test
xor
push
ja
outsl
pop
xchg
dec
scas
iret
fbstp
sbb
mov
push
dec
std
test
add
push
rorl
jae
push
or
add
mov
or
stc
mov
cmc
aaa
stos
out
out
fs
mov
xlat
xchg
jg
je
mov
div
dec
adc
repnz
jbe
xor
insl
repnz
js
mov
xorb
out
fistps
lods
outsl
cmp
addr16
fwait
mov
jle
push
cmp
mov
daa
lret
mov
lds
loope
add
xlat
push
sbb
out
sub
leave
cmp
arpl
les
adc
shll
insl
pop
xchg
push
ret
bound
pop
les
xorl
enter
hlt
aam
cmp
adc
sub
dec
incl
insl
adc
xlat
xor
mov
mov
aad
call
add
jbe
xchg
add
negl
je
hlt
fistpl
sar
sbb
xchg
adc
mov
xor
xchg
les
into
lods
fbld
cli
hlt
push
adc
jno
mov
push
sbb
cmp
js
xchg
movsb
rol
xor
or
jo
inc
les
sub
add
pop
icebp
dec
xchg
xchg
pushf
mov
cwtl
and
sub
insl
push
mov
pop
jp
ss
jmp
push
nop
cmp
push
insl
cwtl
dec
addr16
sarb
xchg
mov
test
or
jmp
arpl
in
mov
cmp
movsl
inc
mov
in
dec
cmpsb
push
fstps
insl
adc
loope
iret
jne
or
xchg
mov
rcr
add
scas
stc
repnz
xchg
cmp
lret
inc
movsb
jmp
in
scas
cmp
stc
lods
popf
mov
fcoms
aas
add
push
jmp
aaa
shll
sbb
sub
jmp
sub
dec
sbb
fstl
inc
ljmp
movsl
pop
jae
jmp
or
loopne
sub
aad
cmpsb
xchg
mov
jnp
test
jecxz
std
shl
lods
sbb
jns
addl
jbe
mov
xor
or
pop
iret
mov
sub
imul
xchg
xchg
add
xor
sub
inc
lret
push
call
pop
mov
mov
das
xor
test
pushf
fadd
popf
incl
movsb
loopne
fld
aas
or
in
faddp
mov
sbb
pop
int3
jmp
push
adc
out
pop
testl
outsl
pop
dec
aas
aam
fdivrs
or
mov
and
subb
sbb
es
test
rcll
outsl
pop
loopne
xor
les
sbb
push
adc
cmp
data16
fdiv
lds
cmp
repnz
mov
fwait
jns
fcmovnu
addr16
pop
lock
ljmp
fucomip
xchg
in
pop
aaa
and
push
clc
mov
leave
jb
fimull
adc
push
std
sbb
push
int
and
pop
into
cld
fld
daa
dec
mov
adc
mov
xchg
mov
mov
in
lds
ret
sahf
scas
adc
sbb
jp
cmpb
loopne
cmpl
or
sub
ja
cltd
and
cltd
insb
or
call
icebp
mov
fmuls
inc
cwtl
adc
xchg
or
adc
ds
int
cmpsb
in
pusha
hlt
outsl
push
in
bnd
shrb
jg
movsl
and
sarl
xchg
mov
and
test
push
push
push
fcmovnb
mov
scas
cmp
mov
aam
fcos
shlb
in
repz
mov
in
mov
dec
jno
sarb
test
dec
adc
pop
in
das
inc
sbb
adc
lahf
insl
sbb
mov
pop
test
or
fbstp
push
push
dec
mov
test
mov
lods
mov
sbb
xchg
mov
rcr
add
push
and
repnz
mov
add
jg
jnp
mov
js
dec
cmc
test
add
je
dec
pop
fistl
add
sub
xor
add
iret
xor
inc
shr
sti
adc
sbb
pop
rcrl
adc
and
jmp
movsb
ljmp
push
in
add
or
inc
mov
daa
out
movsl
iret
inc
mov
ss
outsl
das
shlb
icebp
nop
loopne
push
or
scas
cltd
outsl
pop
sbb
ror
mov
or
scas
xchg
mov
in
call
into
xlat
jb
pop
cmp
stc
or
mov
int
jge
sbb
adc
inc
or
dec
mov
enter
dec
mov
fcom
mov
xchg
ds
loop
ljmp
cmp
inc
jg
addl
into
scas
test
mov
push
dec
push
xchg
xor
in
xchg
pop
mov
lret
lds
ds
and
fadd
add
lods
add
ror
mov
lock
lock
sub
jae
loope
jecxz
xor
push
mov
mov
fwait
pusha
cmp
mov
cltd
push
dec
mov
inc
pop
xchg
jno
mov
mov
aas
adc
jp
mov
mov
xor
pop
pop
sbb
call
or
cmp
ljmp
pinsrw
fsubrs
xchg
sti
dec
mov
push
sbb
stos
and
daa
imull
pop
repnz
std
repnz
adc
call
dec
outsb
icebp
mov
cld
cmp
mov
and
xchg
mov
pop
stc
xchg
sti
push
sbb
sub
mov
push
fisubrl
mov
int3
mov
mov
jnp
lods
outsb
add
dec
int
sbb
sbb
jno
xchg
insb
sahf
lock
cmp
dec
pop
sub
repz
jns
rorb
add
fcomip
out
call
pop
sub
pop
fists
push
ja
xlat
push
bound
jmp
out
out
rolb
mov
out
movsl
inc
mov
pushf
xorb
je
out
rorb
xor
enter
std
shll
xchg
lods
arpl
cli
add
popa
shll
and
or
xchg
lds
pop
cmp
pop
in
test
sti
jg
cmp
xchg
sbb
push
pop
shlb
pushf
lret
lods
sar
icebp
ret
push
sti
pop
ja
into
add
fprem1
push
addb
in
adc
pop
add
dec
mov
gs
dec
push
dec
popa
add
jecxz
jp
fs
push
mov
iret
cld
inc
jns
mov
ret
and
cmp
aaa
sti
aam
mov
cmp
data16
push
loop
outsb
test
movsb
insb
mov
push
outsl
scas
loopne
mov
lds
push
adc
int
add
inc
cld
xchg
stos
push
xor
movsb
fstpt
mov
jge
xchg
test
cmp
lea
je
and
aam
dec
addb
sub
test
or
push
pop
je
fistl
xchg
cmp
fwait
ja
aas
sbb
xchg
adc
sub
pop
xchg
loope
sub
ret
push
xchg
dec
out
cmp
fcoms
jae
aaa
rcl
xlat
xor
xchg
int
xor
xchg
adc
adc
jne
xorb
jo
push
out
lcall
iret
mov
pop
xchg
fstpl
addr16
sub
orl
xchg
rcrb
dec
push
dec
aam
stc
lods
repz
in
testb
push
mov
test
pushf
fs
lret
test
inc
iret
shll
mov
addl
stos
pop
pop
inc
xor
clc
pushf
cld
test
add
data16
xchg
lcall
mov
sahf
sarl
mov
fwait
scas
mov
rcrl
xchg
mov
inc
pushf
and
aam
rorl
jg
inc
jp
cltd
sub
mov
mov
and
push
and
cli
dec
and
xchg
jg
mov
ds
subb
lods
popf
lea
int3
inc
sub
cmp
or
imul
fstl
mov
out
mov
sarl
bswap
xor
jns
sbb
jne
lcall
outsb
loop
mov
add
cwtl
xchg
les
jns
jg
jb
jg
mov
or
repnz
fprem1
add
pop
repz
test
inc
sub
mov
pushf
pop
jecxz
aam
loop
fsubrp
push
pusha
mov
insl
mov
sahf
js
and
push
push
xor
pop
adcb
mov
pop
add
pushf
fsts
pushf
test
inc
xor
sub
popf
push
call
scas
out
dec
adc
loopne
push
lods
mov
pop
jle
mov
sbb
mov
sbb
inc
cli
in
cmpsb
or
xor
xor
cmp
pop
mov
mov
lock
pop
cmpsb
jecxz
jo
jge
xchg
cmp
out
daa
jecxz
lea
mov
sbb
dec
or
pop
push
mov
dec
push
iret
jg
or
es
imul
adc
jmp
outsb
mov
les
xchg
dec
jae
mov
and
test
js
scas
add
jl
adc
dec
or
rolb
mov
push
fcomps
mov
jo
add
dec
adc
jns
dec
push
mov
in
scas
xchg
jmp
shld
aas
mov
add
lahf
mov
adc
popa
adc
ss
cltd
repnz
mov
xor
push
jmp
inc
jmp
mov
aad
pushf
add
push
push
movb
roll
pop
call
sbb
bound
mov
fcoms
lods
inc
fisubrs
dec
mov
jno
cmpsl
xor
fiadds
lock
xor
int3
sbb
iret
mov
add
rcr
lahf
or
icebp
shlb
lds
cmpsl
fcomip
jne
loop
insl
dec
lret
cmp
mov
rcl
or
inc
dec
lods
shlb
mov
mov
dec
sub
push
add
adc
outsl
js
cmp
roll
push
ret
lcall
pushf
test
jge
jmp
xchg
aaa
jg
das
push
mov
pop
les
loopne
sub
rolb
icebp
xchg
jmp
adc
addr16
in
mov
clc
fildll
jp
or
adcb
fdiv
je
stos
mov
and
jns
stos
repz
dec
push
or
xchg
push
fcomps
xchg
mov
mov
mov
mov
sbb
add
push
dec
xor
cmc
incl
dec
lods
inc
pop
push
mov
ss
cmc
addr16
sub
adc
in
pop
xor
mov
mov
mov
shrl
jmp
mov
xor
sub
loope
es
or
dec
adc
lahf
lahf
subb
cmp
sub
adc
push
mov
cltd
sub
aaa
dec
out
jne
lret
inc
sub
jae
fld
pop
xchg
setae
ljmp
and
cli
push
popf
lods
sub
aas
pop
hlt
add
fwait
clc
mov
scas
popa
stos
pop
inc
jns
lahf
lds
aad
mov
inc
divl
movsl
aaa
sbb
int
fcompl
loop
cmp
mov
mov
push
xchg
add
pushf
test
push
ljmp
dec
adc
mov
stos
shlb
push
loop
sub
ja
loope
mov
sub
out
mov
dec
sbb
xchg
mov
mov
cltd
dec
out
jl
cmp
inc
push
repz
hlt
sbb
cli
add
ljmp
sbb
je
push
gs
in
daa
int
inc
cmp
sti
jbe
xchg
shll
dec
lret
in
push
add
jecxz
fildll
push
jns
dec
aaa
jae
cmp
fs
mov
cmp
addl
jnp
lret
lahf
and
ret
bound
and
mov
lods
lcall
jmp
jb
repz
mov
outsl
cmp
xorl
mov
or
push
or
stc
jl
fstps
jmp
fcom
data16
stos
mov
and
in
ljmp
pop
and
mov
test
push
pop
jl
mov
xchg
imul
fcmovnbe
lods
jmp
scas
outsl
fldcw
xlat
fwait
pushf
dec
pop
out
adc
dec
cmp
arpl
movsb
mov
add
negb
inc
jnp
addb
sub
xchg
inc
push
xor
sub
pop
jns
stos
or
testl
ret
and
push
arpl
std
loope
xlat
mov
and
mov
xor
jmp
xchg
jae
add
adc
or
jl
enter
movsb
sbb
jb
nop
frstor
sarb
mov
scas
inc
outsl
jp
dec
mov
sub
je
and
sub
adc
iret
std
pusha
jg
push
loopne
lods
lock
test
inc
inc
mov
stos
pop
ja
mov
outsb
mov
jecxz
add
mov
nop
out
jbe
add
xor
aas
mov
pop
xor
xchg
stc
jp
jle
jns
pop
mov
pop
imul
lret
adc
xchg
cltd
fstps
pop
xor
in
pop
daa
push
data16
into
out
sub
adc
mov
divl
cltd
out
jns
daa
push
or
add
repnz
nop
push
adc
adc
mov
sbb
adc
mov
xorb
push
jnp
jo
jp
xlat
into
push
ss
pop
xchg
jb
jg
jbe
xor
incb
pusha
cmp
jmp
movsb
daa
rcrb
and
subb
lods
push
fnstsw
mov
pusha
add
pop
adc
lods
push
movsl
inc
dec
iret
inc
xor
inc
dec
scas
xchg
daa
enter
mov
roll
aam
outsb
xchg
lcall
faddl
push
not
pop
mov
mov
pop
dec
add
jg
repnz
mov
xchg
mov
mov
inc
cltd
outsl
xor
jge
dec
mov
inc
sub
addr16
jecxz
pusha
test
cwtl
int3
fs
push
inc
push
mov
mov
adc
insl
xchg
dec
pop
adc
sub
sar
mulb
pusha
mov
xchg
pop
add
lods
jge
lock
sub
push
loop
mov
xlat
ret
pop
and
cs
or
test
aaa
mov
xchg
cltd
mov
outsb
mov
push
ret
adc
xchg
and
cmp
xchg
adc
push
mov
jle
dec
sub
dec
out
add
mov
std
nop
dec
push
popf
pop
in
ret
imul
jne
add
inc
push
sahf
lea
inc
xor
add
mov
data16
xor
leave
add
jge
out
daa
xor
repnz
add
pop
mov
mov
mov
repnz
pop
xchg
arpl
ss
cld
lods
mov
fistpl
and
in
inc
adc
dec
adc
jecxz
jne
mov
test
jl
shl
jle
xchg
jl
jns
fdivrl
jge
dec
adc
xor
inc
sti
movb
enter
xor
negl
adc
mov
cltd
out
cmp
hlt
push
mov
rcr
popa
loop
lret
stos
fcmovne
mov
aas
cld
in
mov
sbb
daa
xchg
jae
mov
mov
jb
cmp
fldenv
fsqrt
mov
mov
jb
pusha
jno
int3
sub
xor
sbb
jp
ret
ljmp
movsl
popa
cmpsl
xchg
rorb
ret
nop
mov
jp
hlt
xorb
aam
cmc
jmp
lahf
fidivrl
mov
mov
pop
dec
mov
push
or
mov
jp
dec
fcomip
adc
out
int3
pop
jno
mov
subb
inc
and
scas
aam
lahf
xchg
mov
lahf
les
and
lods
mov
xchg
enter
push
and
cmpl
les
hlt
cmp
cs
push
mov
ret
rorl
pop
inc
dec
test
aaa
call
xor
mov
in
mov
repz
inc
rorl
std
jmp
adc
lods
add
or
outsl
mov
pop
mov
mov
dec
mov
outsb
pop
jmp
cld
inc
mov
push
adc
dec
jle
lcall
jle
loop
insl
xor
dec
sbb
or
and
add
in
out
mov
mov
es
cltd
pop
or
dec
ficoms
fwait
xchg
xchg
in
inc
insb
adc
insb
stos
loop
adc
sub
sbb
iret
sub
filds
sub
out
lret
cmpsb
inc
pop
notb
mov
jecxz
cmp
jo
mov
stc
or
cmp
pop
xchg
scas
outsl
add
jge
xor
lea
rcr
ljmp
mov
cmp
or
lds
jp
cld
lcall
cmp
jns
xchg
add
je
sbb
cmp
inc
imul
dec
out
adc
pop
pushf
aam
mov
jecxz
pop
cmp
cmp
fistps
in
aaa
pop
data16
dec
sahf
les
mov
loop
mov
loope
or
cld
mov
sbb
test
imul
stos
push
sbb
into
cmpsb
stc
fcoml
dec
call
test
fwait
push
push
aas
xor
or
add
xchg
fwait
sub
mov
jb
arpl
cs
xchg
sbb
dec
xorl
jo
pop
mov
mov
adc
aam
push
mov
mov
in
dec
jp
hlt
insb
dec
pop
xlat
rcrb
dec
mov
cmp
aam
movsb
sub
sbb
mov
inc
hlt
push
add
clc
cbtw
cs
mov
xchg
add
mov
dec
jno
shl
cltd
fildll
fistpl
faddl
popa
mov
and
and
lock
mov
xor
sbb
into
aam
and
and
xor
lock
xrelease
pop
xchg
and
dec
sbb
int
mull
lds
cld
faddl
ss
cs
and
jge
xchg
ds
xchg
aas
daa
scas
and
push
sbb
xlat
push
mov
fsubrs
fwait
jne
jg
pop
mov
test
inc
mov
inc
adc
xchg
cmp
dec
cltd
lock
xchg
daa
pop
jns
mov
add
shlb
test
std
test
pop
mov
test
and
clc
aas
cmp
or
mov
inc
push
cmp
in
repz
insl
in
cmpsb
push
sub
lods
shrl
lret
mov
je
and
dec
inc
push
fs
fmull
sub
jle
repz
popf
outsb
enter
mov
push
push
push
sub
mov
loope
sbb
xor
gs
fwait
iret
repz
or
aad
xchg
cmc
jg
mov
pop
sbb
jg
insl
leave
and
out
push
mov
stos
leave
or
in
lock
mov
in
lret
ret
dec
cmp
outsl
xchg
jne
push
cmp
into
mov
mov
stc
and
fisubrl
adc
inc
add
mov
test
cmp
sbb
neg
jp
jmp
bnd
outsl
push
push
ficoml
rcrl
lret
jnp
inc
dec
lahf
mov
and
sub
sarb
sub
ret
jno
movsb
jecxz
mov
xor
sbb
arpl
loop
addl
sub
xor
sbb
mov
mov
out
movsb
addb
fdivrs
push
jmp
scas
mov
adc
in
mov
imul
sbb
add
addl
and
lret
cmpsl
xorb
add
xchg
dec
xor
mov
xor
in
ds
mov
pushf
in
aas
popa
incl
aaa
fists
rcl
mov
bound
frstor
das
out
mov
imul
inc
push
fildl
cmp
fcoml
adc
cs
sahf
outsl
mov
fstpl
push
call
lahf
in
fdivs
rorl
std
and
or
mov
sti
push
imul
mov
push
pusha
xor
jp
or
sarl
lret
fadd
outsb
movsl
add
or
pop
and
enter
js
jge
pop
add
pop
lods
inc
lds
imul
add
adc
fidivs
fmull
push
je
out
pop
sti
or
adc
pop
and
xchg
adc
sub
and
adc
jno
iret
int3
push
push
xchg
or
sbb
fs
icebp
adc
add
sbb
mov
cmpsb
repz
cmp
outsl
mov
mov
add
enter
sbb
aas
sub
and
shll
mov
add
aad
sub
dec
and
pop
cmp
mov
mov
push
push
mov
int
inc
cmc
and
dec
loopne
adc
dec
push
xchg
insl
sbb
gs
mov
cmp
add
out
sub
sub
mov
cmc
push
or
das
mov
adc
mov
xchg
push
mov
cld
lock
mov
add
dec
push
enter
jge
mov
xchg
call
sbb
test
lods
lret
cmpsb
push
ds
in
push
or
mov
adcl
push
dec
fcomps
push
xor
xor
out
fadds
inc
jp
icebp
or
push
sahf
ja
addl
mov
adc
mov
fnstenv
pop
jg
push
mov
outsb
js
cld
test
cmp
jns
test
inc
lahf
inc
lret
negb
pop
cltd
fisubrl
into
dec
cltd
fnstcw
cmpsl
lea
out
call
push
mov
adc
popa
sub
sub
scas
repz
jl
add
cmp
fnstsw
lea
dec
xchg
xor
loope
xchg
mov
lods
jle
icebp
and
push
adc
imul
inc
aam
mov
push
aad
inc
adc
out
rcr
imul
or
adc
ds
mov
das
mov
sbb
mov
sub
rorl
ret
jl
test
aam
pop
in
popa
icebp
cmp
sub
mul
imul
or
cmp
sbb
bound
xchg
aaa
mov
lock
dec
and
add
movsb
mov
out
sbb
xor
cmp
add
xchg
cmp
bound
pop
mov
jge
add
popa
sti
xchg
insb
notl
dec
cmp
or
out
in
push
push
push
cmp
or
idivb
imul
cmpl
bound
stos
imul
aad
xor
leave
push
mov
dec
dec
je
mov
and
and
push
ljmp
divb
loopne
pop
in
mov
roll
adc
test
sbb
or
adc
mov
rorl
test
popf
out
faddl
dec
int3
push
sbb
cmp
sub
jmp
out
es
or
movsb
xor
popa
dec
clc
loope
xchg
divl
jne
lcall
test
ds
jns
mov
addb
lods
popl
pop
mov
xlat
loope
fiadds
pop
ss
dec
cmp
inc
mov
cmp
xchg
sahf
roll
subb
cmp
mov
lods
push
push
add
pop
push
xor
shr
mov
fst
in
les
call
mov
cmp
push
xor
arpl
adc
adc
xchg
outsb
cs
or
lods
hlt
mov
test
or
cmpsb
enter
notb
into
shlb
addr16
xchg
and
push
iret
xchg
cmp
pop
imul
sub
push
fdivl
or
fcoml
in
xchg
or
mov
test
mov
push
insl
outsl
and
cmpl
ss
cmp
popa
sub
jge
dec
adc
sub
lcall
push
shlb
out
or
ss
lock
arpl
push
xor
test
cmp
jg
int
mov
or
cmp
xchg
push
cmpsl
push
mov
into
sbb
push
mov
jmp
xor
jl
push
loop
ss
das
std
ja
jne
test
dec
add
mov
push
or
test
cmp
cmpsl
mov
jno
in
out
pop
sbb
mov
jns
and
shll
pop
xor
mov
pusha
out
pop
test
insb
fnstcw
cmp
and
xor
lods
ret
xchg
cmc
sbbl
add
sbb
cmp
test
inc
std
jae
xlat
int
outsb
cmp
cld
or
sub
fisttpl
fwait
pusha
push
test
mov
rcll
cli
xchg
imul
les
loopne
dec
xlat
dec
mov
fdivl
push
and
mov
test
scas
push
xchg
ds
loope
jmp
mov
nop
fldt
fdivr
mov
mov
mov
cmp
iret
cli
mov
jno
jge
and
aad
mov
push
inc
lds
cmpsl
in
cmp
stc
sbb
mov
or
sbb
adc
xchg
mov
cmp
sub
dec
mov
mov
mov
xchg
mov
out
jb
ljmp
jae
out
addr16
rcll
push
sti
fdivrs
cmp
pop
je
sti
inc
pop
xchg
test
mov
lcall
sbb
jge
inc
jbe
jg
add
mov
in
cmp
cmpsl
mov
sub
jmp
sub
sub
clc
sub
leave
push
xchg
or
das
or
lock
push
and
xchg
sub
iret
lock
mov
adc
fiaddl
ss
shr
pop
sub
adc
jb
lds
xchg
lea
add
dec
int3
das
loop
mov
dec
adc
push
jb
and
dec
xor
sbb
outsb
iret
pop
into
dec
enter
mov
sub
sub
adc
sahf
inc
pop
pop
push
fcmove
pushl
pop
and
fsubr
cs
je
insb
hlt
jge
pop
out
adc
stos
push
push
out
or
and
sub
mov
loope
adc
lea
dec
fisttps
lds
cli
mov
aad
js
or
cmp
insb
inc
nop
add
xchg
mov
adc
add
jecxz
mov
add
xchg
ja
clc
test
cmp
jecxz
and
mov
movsl
lock
leave
test
sbb
xchg
insl
pmullw
fldl2e
out
adc
mov
mov
shrl
inc
rolb
test
push
lock
lods
mov
lahf
or
jmp
stc
sbb
inc
mov
rcr
sub
xor
sbb
sub
adc
sub
xchg
xor
xchg
xor
fidivs
cmp
aad
movsl
dec
inc
xchg
push
mov
imul
mov
push
push
testl
cmp
neg
inc
mov
and
jmp
xor
scas
pop
mov
jecxz
sbb
xor
sub
js
dec
push
pusha
nop
repnz
xor
into
sub
cltd
jnp
or
jno
inc
mov
ret
push
sbb
lcall
sbb
jecxz
movsl
mov
inc
pop
mov
sub
ds
inc
add
inc
fistpl
jnp
daa
and
out
push
pop
in
popf
lods
sarb
xchg
shlb
xor
test
lods
xor
push
mov
stc
dec
add
popf
incb
imul
pop
repz
sub
pushf
push
js
jno
xor
aaa
jecxz
clc
rcrl
push
das
scas
out
inc
cmp
adc
push
subb
stc
mov
or
inc
and
mov
push
fs
inc
mov
sti
insb
mov
in
in
jne
into
jbe
push
xor
es
xchg
lahf
jle
lret
inc
outsl
lods
jo
sub
in
inc
out
or
jl
jge
mov
je
mov
xor
sub
mov
push
xchg
push
mov
movsb
ficoms
push
pop
add
outsb
jnp
in
pop
pushl
cli
pop
ret
dec
std
jecxz
scas
adc
and
mov
add
mov
jbe
pop
push
sub
dec
xchg
loope
repnz
hlt
cld
lcall
enter
out
mov
enter
mov
mov
mov
push
dec
mov
or
icebp
in
out
ficoms
test
mov
jg
adc
pusha
daa
pop
repnz
jecxz,pn
cmp
xlat
inc
mov
inc
js
outsl
xlat
jl
inc
dec
sub
pop
out
mov
jne
insl
ret
inc
outsb
sub
xchg
filds
push
aas
adc
and
ds
adc
mov
sahf
clc
jae
cmp
ljmp
ss
sahf
push
or
inc
les
inc
popf
xor
push
outsl
ret
out
cmc
loope
pop
mov
fwait
mov
pusha
jno
mov
dec
lea
insl
scas
dec
push
inc
mov
and
add
imul
stc
cltd
or
or
outsb
cmp
xor
push
gs
fstpl
jo
decb
jle
je
sti
addl
and
cmp
fsubrl
or
cltd
mov
ja
jmp
mov
push
or
push
das
test
cltd
iret
shlb
pop
aas
pop
mov
outsl
daa
jecxz
lock
or
push
in
pushf
scas
pop
jmp
idivb
sub
jb
add
adc
push
jo
mov
dec
out
xchg
add
mov
cmpsb
inc
or
stos
add
sub
sbb
into
push
cli
lods
lods
mov
adc
lahf
mov
push
aaa
sub
mov
mov
stos
bound
mov
ficoms
dec
xor
aam
mov
dec
dec
pop
popa
adc
dec
pop
mov
fsubrs
fs
decb
aam
xlat
imull
sbb
lret
gs
daa
cmpl
add
shlb
icebp
ret
push
int
shll
ljmp
inc
cltd
mov
cltd
loopne
mov
lock
jb
sub
jmp
push
jb
es
push
mov
mov
outsl
add
inc
and
pop
xchg
ficompl
lods
mov
jb
addr16
orb
and
or
insl
pop
in
aas
mov
popf
cmp
xor
pop
mov
dec
mov
cmp
cmova
sub
mov
mov
rsqrtps
cmp
push
push
ja
fcompl
rorb
xchg
sub
inc
mov
mov
push
add
aaa
push
inc
dec
fildl
add
in
mov
dec
icebp
push
test
repz
mov
shlb
popf
mov
jae
adc
push
sub
js
xchg
jecxz
add
leave
mov
clc
js
setge
push
int
dec
fisubrl
xchg
jle
fwait
data16
lock
jl
out
ja
std
lods
sbb
daa
xor
dec
pop
push
loop
jbe
insl
or
add
rolb
cld
push
jnp
dec
fwait
mov
push
into
dec
dec
lds
call
imul
sub
popf
push
fmull
ja
and
mov
dec
adc
loopne
test
mov
jg
push
mov
dec
ficoms
jno
sub
rcrb
mov
int3
pop
jecxz
jl
ss
and
push
or
xchg
mov
getsec
loop
mov
pop
ret
mov
adc
je
fisubl
out
data16
in
or
mov
mov
mov
inc
xchg
scas
pop
inc
and
jns
cld
arpl
rclb
push
jp
scas
push
xchg
cld
pop
xlat
push
cltd
sub
mov
mov
push
out
jbe
mov
outsl
rep
mov
ret
inc
inc
divb
sub
mov
fdivrs
movsb
fidivrl
mov
xchg
ljmp
cmp
jl
fld
cld
lods
mov
fidivrl
aaa
test
inc
dec
mov
sahf
add
add
ret
dec
and
xchg
sbb
and
pusha
fmull
imulb
sbb
push
adc
loop
loopne
das
jecxz
fnsave
xor
shrb
or
adc
in
mov
cltd
add
sub
adc
xchg
push
mov
pop
cmp
xchg
lret
rorl
jp
cmp
or
or
mov
lods
leave
mov
pop
mov
bnd
sbb
sar
scas
push
sbb
movsl
out
add
ret
adc
das
pop
loopne
adc
and
add
cmp
stc
xchg
sub
pop
aaa
or
pop
test
mov
mov
ds
lds
ud1
or
add
jb
outsl
sub
inc
jns
mov
xchg
jmp
pop
sub
movmskps
imull
jb
jns
sbb
push
lahf
aas
xor
mov
xchg
xchg
scas
cmp
mov
xchg
repnz
mov
pop
mov
call
xlat
lock
lcall
iret
orb
add
hlt
dec
mov
mov
nop
dec
jge
mov
push
scas
in
test
and
lods
cmpsb
in
jecxz
add
inc
hlt
cmp
and
lret
cmp
pushf
and
movb
push
adc
or
repnz
pop
push
push
adc
lods
add
mov
push
cmc
arpl
scas
out
mov
pop
lock
jl
mov
js
cltd
call
outsb
mov
aaa
xor
imul
insb
xchg
xchg
cs
cmp
lods
iret
sub
cmpsb
push
popf
push
mov
jecxz
pop
cmpsb
pop
push
dec
jbe
xor
jb
pop
ret
push
std
aas
xor
popa
mov
in
xchg
imul
sbb
inc
mov
jp
out
or
imul
insb
jle
lods
cmc
outsb
test
xlat
push
enter
push
dec
imul
adc
cltd
fwait
insb
pop
bnd
mov
loopne
inc
push
gs
lret
xchg
insl
outsb
push
push
push
sahf
std
mov
or
or
dec
mov
xchg
decb
xchg
dec
icebp
mov
xor
rolb
repz
movsl
inc
xor
imul
push
xchg
adc
add
scas
stos
sub
lods
mov
add
mov
js
or
int
daa
inc
and
sbb
and
push
lcall
adc
vsubss
push
or
mov
push
inc
test
mov
out
aam
jp
xchg
push
cmp
ret
jae
xlat
jg
sarb
cmp
jnp
lret
shll
push
pop
fldl
out
xchg
add
into
push
outsl
xchg
rcr
cltd
dec
mov
mov
enter
add
sarb
addr16
sti
lcall
test
xchg
cwtl
cmp
adc
cmp
cli
jae
loop
mov
out
addr16
xchg
jnp
dec
imul
out
mov
int3
out
push
push
scas
dec
sub
mov
cmp
dec
in
lods
add
cmpsl
pop
jb
cmpsb
cwtl
out
jno
xor
cltd
dec
sub
nop
popf
inc
mov
xchg
inc
add
in
xchg
sbb
jae
fs
jecxz
push
repnz
add
outsb
fwait
push
jl
adc
out
cld
push
sbb
aam
aam
lret
cmp
dec
pop
adcl
leave
mov
gs
or
inc
jne
mov
imul
or
or
loop
cmpsl
sbb
and
addb
sbb
mov
jne
jae
enter
jb
arpl
outsb
jbe
and
cltd
jbe
mov
and
xchg
icebp
inc
outsl
pop
adcb
mov
test
xchg
mov
and
sbb
add
scas
cwtl
outsb
in
xchg
gs
pop
in
int
push
cmp
jb
fisubrs
pop
idivl
sbb
mov
nop
cs
add
sub
and
sti
mov
jns
mov
inc
pop
mov
fcoms
dec
fcoml
xor
jb
sub
out
inc
xor
rclb
sub
shrb
sarb
mov
push
mov
xor
jl
jmp
add
js
shrl
shl
sahf
rcr
test
push
idivl
and
mov
lret
mov
repnz
xchg
jbe
faddl
mov
pop
dec
cld
out
fisttpl
push
jo
push
jg
mov
sub
movsb
fwait
sub
shr
adc
mov
mov
mov
insl
aad
iret
push
jg
mov
mov
pushf
add
test
dec
dec
fsubl
add
fisubrs
lret
sbb
in
jo
cltd
shlb
scas
aas
pop
sbb
iret
out
and
adc
push
cld
dec
sub
jns
xchg
rorb
out
fmuls
sarl
xchg
sti
imul
sub
mov
mov
mov
xor
sub
adc
cmp
dec
lods
bound
imul
push
lods
push
jbe
outsl
test
fsub
cmp
xchg
pop
imul
pop
ret
lds
pop
imul
pop
xor
popa
daa
sub
mov
lret
jo
daa
out
mov
test
jl
jge
mov
xor
movsl
inc
repnz
popa
cmp
xchg
test
mov
xor
xor
lret
jge
sarl
jbe
xlat
test
enter
jge
mov
xchg
pop
stc
add
jecxz
or
pop
cmpsl
xor
insl
sahf
xor
scas
mov
daa
xor
iret
add
ficompl
data16
xor
sbb
iret
lcall
rclb
mov
or
in
cmpsl
jmp
addr16
das
jae
shlb
cmpb
sbb
or
pop
stos
sti
mov
leave
gs
mov
imul
insl
mov
lea
jl
xchg
sahf
mov
bound
inc
fisttpll
mov
mov
push
adc
sub
mov
stos
xor
sbb
inc
lret
sub
cmp
xlat
cld
dec
outsb
test
jo
inc
xor
dec
cmp
andl
mov
out
jb
or
mov
out
pop
lret
loop
mov
sbb
out
xor
stos
jge
enter
xor
lds
lret
cs
arpl
sarl
enter
add
out
test
bound
repz
aad
nop
das
int
xchg
sub
addr16
ret
filds
mov
push
sub
add
lods
pop
stos
stos
add
or
sub
outsb
out
scas
mov
rorb
test
lea
inc
xor
push
lahf
push
out
pop
hlt
mov
jl
ret
adc
mov
mov
icebp
sub
sub
bound
aad
fwait
pop
pop
mov
cli
jno
cmp
push
popa
push
mov
frstor
jbe
jns
mov
jae
cmp
leave
in
pop
mov
fwait
maskmovq
mull
cwtl
sbb
xchg
sahf
movsb
in
sub
call
in
xor
cltd
mov
enter
cmp
inc
repz
popf
in
iret
rolb
fdivrs
fisttpl
pop
in
xchg
add
int3
xor
daa
sbb
xchg
dec
sbb
dec
lock
adc
loope
imul
ret
imul
pop
xor
mov
rolb
lcall
or
in
pop
dec
test
in
cli
or
sahf
aas
sub
cmp
mov
xchg
test
sub
mov
ja
out
cmp
add
push
xchg
dec
push
or
jb
jmp
add
pop
cmp
jo
out
mov
sahf
cmp
pop
into
subl
scas
insl
jmp
mov
loop
push
mov
inc
jne
out
fs
add
repnz
jbe
je
ja
pusha
in
xchg
dec
xchg
xchg
loope
pushf
jmp
scas
out
fwait
inc
inc
pop
repnz
dec
mov
and
subb
sub
xchg
pop
aad
repnz
or
sti
push
jecxz
ja
ret
fidivrs
notb
adc
lret
inc
testl
sbb
sbb
jbe
push
xor
and
cmp
and
xor
mov
inc
sahf
out
scas
mov
add
xchg
ljmp
divb
jbe
arpl
cs
jnp
shlb
sub
fildll
rol
cld
mov
xchg
and
pop
push
dec
data16
lahf
sub
push
pop
mov
addr16
fistl
cmp
mov
mov
and
add
imul
jo
arpl
mov
dec
je
pop
cmp
and
mov
pop
call
pop
xchg
rorb
cltd
mov
shlb
xor
rcr
bound
std
push
lcall
mov
sbb
push
and
gs
xor
mov
sub
rcr
adc
sub
xor
imul
enter
into
rcrb
mov
lods
clc
or
lcall
push
mov
divl
add
sbb
pop
mulb
ljmp
loop
cmc
enter
add
pop
test
aad
sbb
stos
test
fsubs
add
bound
xchg
into
xchg
xlat
or
loopne
dec
stos
js
test
movsl
sbb
and
xor
fdivrl
push
xchg
loopne
push
and
mov
clc
fisttpll
daa
inc
dec
push
popf
fucomip
mov
jb
cwtl
ljmp
shll
push
lcall
cld
xor
sbb
jge
mov
aas
test
insl
sahf
and
ds
in
rclb
imulb
cmp
xchg
fimuls
aad
mov
mov
les
xlat
sbb
cmp
sbb
xor
repz
jnp
iret
mov
loopne
insl
add
and
add
popf
or
xchg
push
push
or
call
stc
push
push
imul
xor
repnz
fcmovbe
inc
add
and
jnp
mov
cld
adc
push
jne
push
mov
push
xchg
cmpsb
mov
jp
pop
rorb
xchg
out
push
outsb
and
cld
aaa
sub
jecxz
mov
ror
pop
rol
mov
out
cmp
jnp
adc
out
ljmp
mov
cmp
add
cwtl
fcoms
roll
repz
call
insb
fcoms
push
adc
sbb
mov
shrb
shrb
call
stos
adc
lock
data16
aad
flds
push
mov
es
ret
cmc
push
mov
iret
popa
cwtl
add
cltd
mov
sub
push
in
cltd
add
adc
loop
xor
sbbl
adc
nop
xor
cltd
add
push
lea
sbb
test
push
hlt
add
pop
dec
mov
dec
fidivrs
ret
fisubrl
or
out
sub
xor
sub
test
outsb
fsts
aas
pushf
popf
loop
aas
ja
cld
std
or
lea
jecxz
out
pop
inc
sub
rorb
ss
inc
push
or
cmpsb
es
jge
outsl
pop
dec
jl
repnz
mov
lret
pop
mov
ficoms
jbe
aam
xor
push
mov
in
jmp
clc
mov
dec
jle
adc
aaa
js
stos
jle
add
mov
inc
sbb
js
jns
dec
mov
push
push
fidivrs
push
xchg
jnp
cwtl
std
xor
sbb
jo
jbe
outsb
xchg
mov
ja
addr16
pop
mov
roll
outsb
iret
shr
or
and
ds
inc
pusha
movsl
js
fwait
je
sbb
xchg
sbb
mov
movsb
ja
cltd
subb
sub
or
jmp
jp
inc
push
dec
int
and
int
je
push
mov
fldcw
pop
sbb
mov
fdivs
inc
and
mov
push
out
push
xchg
inc
jns
test
test
push
hlt
cmp
xor
or
fdivr
sbb
leave
ret
adc
lods
test
push
lea
stos
xor
pushf
xchg
aas
loope
fwait
mov
out
bound
or
mov
jp
jle
sti
outsl
and
jb
rclb
ljmp
aaa
push
repz
pop
jbe
out
aaa
inc
test
lock
mov
psrlq
or
mov
gs
out
pop
sbb
ja
lea
orl
out
xor
fwait
repz
ss
cmpsl
sub
xlat
je
out
in
dec
push
fisubrs
mov
xchg
dec
aas
pop
push
jb
jecxz
rorl
stos
dec
jg
xchg
xchg
ret
or
in
pop
mov
imul
push
jne
sbb
out
ljmp
pop
aad
and
in
inc
test
xorl
mov
in
push
pushf
sbb
mov
jmp
xor
aam
mov
fadd
xchg
out
fimull
xor
insb
shrl
adc
push
and
enter
jle
add
cmp
inc
imul
loope
jg
mov
in
mov
push
push
test
add
and
mov
dec
or
push
mov
icebp
ja
sbb
add
or
jae
xchg
in
nop
les
lods
sbb
xorl
sub
mov
sbb
adc
jae
pop
xchg
repz
fwait
xor
sbb
mov
ss
mov
mov
mov
test
cmp
fnstcw
mov
cmp
std
test
es
ret
push
decb
test
int
push
int
hlt
je
mov
rcrl
xchg
int
xorl
pop
mov
stos
xor
pop
call
fwait
stc
lock
pushf
mov
mov
mov
outsb
xor
dec
adc
push
repz
movsb
jl
inc
or
leave
xchg
or
mov
pandn
dec
xchg
adc
jmp
data16
fstps
mov
mov
pop
mov
stos
in
movsl
scas
fs
mov
pop
test
fbstp
into
daa
lret
loop
xor
popa
shlb
and
mov
xor
mov
jae
jmp
into
test
js
les
ret
and
push
mov
pop
ds
and
jae
xchg
or
xchg
not
test
mov
insl
out
arpl
lahf
inc
mov
mov
and
or
in
cmpb
inc
mov
roll
sbb
stos
rcrl
pop
sbb
and
icebp
testl
nop
lods
mov
add
mov
insb
arpl
jmp
mov
sub
sbb
and
jno
adc
lret
dec
stos
or
pop
test
push
in
subb
xor
mov
inc
push
pusha
int3
iret
imul
std
jmp
aaa
call
push
add
mov
cwtl
rol
in
push
push
ds
jb
out
into
xchg
stos
stos
data16
mov
sbb
sub
iret
scas
push
fcmove
or
out
xchg
enter
lock
inc
and
popf
jecxz
je
sbbb
mov
jg
jle
or
enter
lock
sarl
int
out
cmp
lahf
dec
xchg
lcall
mov
xchg
fimuls
pop
jns
xchg
pop
jg
das
sub
xor
pushf
inc
outsl
cmc
scas
repnz
sub
xor
imul
adc
xchg
jns
nop
icebp
sbb
or
sub
inc
hlt
sub
loopne
lea
cmp
add
icebp
dec
mov
fwait
dec
and
mov
pusha
inc
xor
repnz
push
call
push
ficoms
dec
mov
xchg
idivl
sub
testl
es
dec
jno
gs
mov
or
pop
mov
mov
iret
rcrl
pusha
mov
cli
mov
lds
addr16
scas
cmp
or
aam
mov
cmpsl
lahf
icebp
out
mov
dec
clc
pop
hlt
data16
xor
jb
fldenv
fisttpll
add
shrl
das
xor
sbb
adcl
mov
sub
mov
neg
shll
push
test
movsl
adc
jle
jmp
xchg
and
jle
dec
push
test
mov
sbb
push
or
xchg
addr16
test
pusha
mov
xchg
dec
inc
mov
mov
mov
fldenv
dec
push
fsubrl
mov
test
hlt
fwait
gs
repnz
sarb
push
push
fstp
popa
push
xor
sti
mov
pop
call
xor
jmp
pop
idivl
dec
push
int3
flds
aam
add
mov
and
adc
push
pop
and
add
add
sbb
or
outsb
and
adc
inc
jb
dec
mov
fisubrs
push
je
iret
cmp
mov
cli
xchg
aas
lock
leave
xor
int
lods
mov
and
insl
bound
scas
sbb
outsb
lcall
sti
sbb
mov
and
and
mov
sbb
lcall
jbe
mov
cmp
xchg
xor
ss
movsl
cmp
jmp
cmp
pop
loope
ja
scas
add
adc
cmp
arpl
and
movsl
dec
dec
xor
jge
inc
jg
sbb
insb
push
lods
lds
shll
daa
inc
ds
pop
lret
mov
jmp
xchg
xchg
or
clc
dec
inc
sub
xchg
push
push
cltd
xchg
xchg
bound
mov
sahf
and
mov
pop
insl
cmpsl
jg
in
inc
dec
stos
out
movsb
sbb
js
sbb
mov
or
adc
in
or
and
ss
mov
dec
bound
push
jle
lods
add
leave
in
outsb
xor
adc
sbb
lock
sub
pop
lret
cs
stos
add
xchg
sub
ljmp
iret
pushf
sub
inc
and
and
iret
fldt
data16
ja
push
je
sbb
cmp
ret
arpl
jmp
rol
adc
sbb
xchg
cltd
fildl
push
mov
daa
mov
and
mov
pusha
js
fadds
mov
xor
and
add
pop
or
cli
pop
inc
in
insb
adc
repz
aaa
sub
mov
or
out
cltd
pop
sbb
push
out
xor
lods
lods
out
jecxz
pop
sbb
mov
adc
clc
inc
mov
mov
lcall
or
sbb
adc
add
aad
rorw
ret
popf
cmpsb
fmuls
or
pop
sub
lret
jecxz
into
fiadds
pop
and
pop
lcall
xchg
sub
xchg
fwait
ja
inc
test
in
inc
pusha
push
shl
les
leave
sub
aaa
mov
out
mov
dec
xor
ffreep
rcrb
xor
push
mov
sbb
cmp
push
cmp
insb
nop
sti
push
dec
out
mov
faddp
xchg
testl
into
xchg
pushf
fnstcw
add
shrb
sbb
xor
sub
es
mov
dec
aad
jl
sub
add
sub
jno
insb
fcoml
rcr
notl
sbb
push
mov
in
les
popa
sub
inc
push
and
jmp
and
shll
fnstenv
ss
add
fstps
sub
out
xor
jp
or
xchg
bound
jno
daa
inc
pop
jo
sbb
pop
jbe
jnp
fistpll
mov
fsts
cmp
outsl
pop
nop
in
cs
jecxz
pop
jno
xor
pop
jp
mov
push
mov
push
cli
push
cmpsl
test
addb
push
les
test
add
xor
movsl
pop
lea
sbb
test
insl
icebp
cld
dec
cmpb
mov
iret
inc
and
stos
data16
daa
pop
dec
in
adc
cltd
roll
in
adc
shrl
ret
les
std
test
fcompl
incb
pop
cmp
rcl
and
sub
and
lock
ss
adc
lods
mov
dec
rcrl
mov
adc
xor
in
js
push
ds
xchg
xchg
mov
lea
gs
jo
arpl
pop
aas
ficoms
inc
test
xchg
xlat
fildll
or
das
push
add
pop
aas
insb
xchg
cmp
cwtl
adc
iret
push
loope
xor
jo
push
int
cmpsl
inc
je
nop
jecxz
jecxz
lods
int
shr
xchg
jbe
xchg
sub
loope
sbb
loope
loope
ja
dec
shlb
xor
sahf
mov
xchg
lds
dec
and
cmp
mov
cmp
dec
mov
xchg
xchg
iret
sub
stc
lods
pop
mov
out
sti
ljmp
add
push
pop
mov
shll
loop
or
sbb
push
movsb
iret
insl
mov
std
mov
rcrb
aaa
ss
push
test
test
jecxz
das
hlt
repnz
mov
ds
iret
xor
mov
leave
sbb
pop
out
mov
add
ja
jb
std
adc
inc
or
rcrb
aad
inc
cld
push
data16
jl
push
je
adc
dec
mov
cwtl
mov
sub
divb
stos
daa
pusha
addr16
dec
ds
cmp
pop
inc
inc
addr16
sahf
test
imul
push
or
xor
je
dec
pop
or
jne
js
sbb
push
daa
xchg
mov
imul
add
push
xchg
sti
dec
test
dec
cld
xchg
inc
push
adc
jae
mov
jbe
mov
ss
jge
pop
jmp
jecxz
arpl
cmc
vmovntdq
mov
stc
ret
pop
jg
adc
shl
jecxz
dec
pop
cmpb
jae
leave
xor
pop
jnp
addr16
cmp
pop
popa
push
lea
xchg
adc
pushf
addb
scas
jp
sub
pop
in
cmp
out
and
lcall
sub
push
aad
movsl
xchg
jp
outsb
test
dec
cwtl
stos
enter
pop
adc
sbb
push
stc
xor
pop
sbbb
cmp
imul
movsl
and
mov
dec
rcr
push
in
out
adc
cltd
mov
je
lock
ret
jae
andb
dec
jno
adc
adc
enter
cltd
pushf
bound
aas
imul
ss
stos
arpl
mov
and
cmp
ret
out
cmp
xlat
xor
mov
lods
test
adc
xchg
add
add
outsb
clc
xor
dec
stos
cmpb
inc
lds
add
or
mov
testl
jns
pop
test
xchg
mov
xor
ljmp
jp
add
fstl
jle
add
mov
lcall
inc
icebp
cmp
sbb
xchg
test
jmp
xchg
mov
es
mov
pop
ljmp
ljmp
jno
sub
mov
sarb
xchg
aam
lahf
imul
negb
xor
jle
xlat
mov
aam
fmul
in
out
lock
and
add
inc
in
fcmovnbe
cwtl
lahf
jb
push
add
xchg
inc
mov
cmp
hlt
fidivrl
int
jmp
leave
jae
loop
divl
into
subb
jg
fs
ret
dec
pop
jo
dec
xchg
jge
or
sbb
push
xchg
jo
sbb
mov
lcall
xor
sbb
adc
lea
rcrb
out
aas
inc
jno
insb
pop
push
push
int3
mov
dec
bound
lcall
or
mov
xorb
arpl
cmpsl
and
sahf
adc
loopne
add
test
adc
dec
push
scas
pop
pop
push
ss
ja
push
or
cmp
pop
cs
mov
dec
push
out
fdivrp
xchg
xchg
jp
out
xchg
mov
ret
shlb
jecxz
adc
imull
push
cwtl
mov
imul
ja
xor
mov
push
cmc
sub
js
sub
popa
push
jnp
sub
test
cli
fs
push
cmc
ret
dec
mov
arpl
sub
push
mov
jmp
xchg
dec
xor
dec
lock
sti
jecxz
jns
mov
pop
adc
js
mov
or
js
pusha
in
mov
add
arpl
adc
jmp
dec
add
sub
jb
jne
cmpsb
lahf
scas
or
out
cli
mov
jb
cmp
pop
imul
cmp
mov
and
ds
or
icebp
lahf
aaa
cmp
cld
sbb
sub
das
xchg
push
popf
in
inc
test
repnz
mov
mov
jge
lahf
xchg
test
pop
mov
std
xor
imul
js
sbb
test
aam
mov
lahf
jle
loop
adc
dec
out
lea
test
mov
cmp
push
cmpsl
outsb
xor
es
mov
test
sub
pop
dec
pop
shl
cmpsl
mov
dec
mov
lahf
cmp
push
test
jecxz
and
jo
adc
aad
jae
das
aam
imul
int
cmc
sahf
aad
adc
add
je
bnd
push
push
aas
out
push
loop
mov
test
inc
pop
mov
lret
cwtl
das
mov
lcall
jl
xchg
aas
pop
jb
mov
sti
nop
xchg
daa
mov
icebp
test
pop
adc
mov
pop
adc
fcoms
popa
test
in
xchg
sbb
push
mov
push
xor
mov
lods
xchg
js
mov
jo
testl
mov
out
mov
repz
sub
gs
loop
cli
std
call
dec
jge
push
js
adc
dec
ret
add
mov
cld
and
pop
dec
aaa
dec
or
sti
xchg
ss
push
out
jns
mov
pop
and
inc
sub
cmp
ret
loopne
sub
dec
fmull
psllq
pop
lock
ds
pop
jg
jg
iret
lods
iret
out
pop
loopne
push
rolb
test
add
mov
jecxz
aad
or
or
sarb
and
mov
adc
mov
cld
cli
push
pushf
ret
jecxz
flds
cmp
js
mov
push
lods
aas
jle
xchg
and
push
fsub
inc
xchg
lock
gs
jnp
inc
mov
sbb
js
sahf
mov
xor
arpl
call
inc
jbe
movsb
push
inc
jmp
outsb
shrl
jb
insb
xor
cmp
inc
mov
pusha
test
arpl
stos
jns
jb
ret
sbb
jnp
inc
cmpsb
nop
sbbl
or
xlat
fistpl
cltd
cmp
jns
fiaddl
cmc
lea
cmp
mov
sarb
push
pop
repnz
data16
push
sti
adc
fsts
iret
lds
scas
mov
lods
pusha
sbb
sbb
xchg
mov
cmpsl
jl
int
push
movsl
movsb
repnz
scas
sbb
pop
xor
xchg
ret
push
mull
mov
jmp
scas
inc
add
outsl
pop
stos
pop
mov
cmp
fs
loop
out
push
xchg
adc
inc
xor
mov
push
mov
add
and
fs
push
mov
jmp
lret
cli
push
mov
subb
xor
pop
add
cmp
imul
insl
and
xor
xchg
mov
cld
stos
cmp
sbb
ljmp
clc
cmp
or
shl
ja
loop
iret
dec
ljmp
and
sbb
inc
mov
fnstcw
mov
dec
lea
outsb
inc
repz
sti
stos
inc
or
cld
adc
shlb
sub
xchg
pop
mov
ja
sub
xchg
mov
mov
jmp
mov
dec
outsl
in
ss
and
jb
pop
cmp
shl
cltd
xor
rcrl
xchg
insl
jnp
and
xchg
stc
imul
jb,pn
add
xchg
test
push
aas
arpl
jecxz
jg
jo
loope
cmpsl
arpl
mov
ret
popa
outsb
jecxz
sti
in
ss
add
lahf
jle
jp
push
outsl
mov
sbb
push
add
adc
jbe
stos
call
cmp
dec
cs
jmp
mov
xchg
mov
cmpsb
sarb
out
sbb
stos
sbb
push
mov
sahf
jp
and
nop
pop
in
mov
adc
and
pop
mov
lret
add
aas
add
ret
xchg
sahf
inc
mov
rol
sub
and
xchg
xchg
dec
inc
daa
jp
push
jmp
into
mov
lock
lods
out
leave
inc
pop
inc
cmpsb
leave
ficompl
pop
bound
adc
cmp
push
mov
mov
jle
sub
sbb
ljmp
push
out
mov
xchg
mov
jge
jo
pop
push
daa
adc
faddp
loopne
mov
push
or
and
mov
daa
adc
inc
mov
mov
idivl
jp
pop
imul
adc
xchg
arpl
sbb
mov
movsl
cmpl
filds
sub
lds
std
das
add
sbb
and
xor
mov
sub
leave
mov
mov
push
inc
pop
sub
in
sbb
dec
bound
dec
add
js
add
loopne
push
xor
pop
mov
push
popa
addl
je
dec
out
adc
mov
sti
xchg
jl
xchg
jae
out
jg
xor
cmp
jne
push
xor
iret
pop
pushf
cld
push
push
fdivrs
fistl
fildll
fidivl
aaa
arpl
fmul
inc
aam
sub
jno
or
and
xchg
sub
mov
loop,pt
fnsave
out
jns
orb
in
outsb
pop
bswap
adc
push
pextrw
add
sub
mov
lods
pushf
mov
inc
or
rorb
iret
aaa
mov
cmpsl
inc
mov
xchg
loopne
mov
pop
aas
enter
shll
push
std
es
fwait
dec
adc
jno
out
sub
enter
sub
mov
pop
add
icebp
lds
push
xchg
jge
repnz
lret
ja
sti
push
xor
pop
negl
xor
mov
add
xlat
mov
sub
jg
or
jge
dec
sub
inc
aas
imul
and
jmp
fucomp
sbb
xor
or
push
repnz
push
loope
jb
mov
test
in
add
test
loopne
mov
mov
jl
sub
mov
sbb
out
in
test
mov
imul
sbb
lea
pop
sub
addb
jno
rcr
in
int
imul
aam
aaa
lret
mov
sarl
mov
xor
mov
ret
mov
ljmp
mov
stos
aas
jmp
jp
sub
push
repz
sub
or
push
xchg
lcall
insb
in
mov
lods
iret
nop
pop
adc
stos
mov
push
js
arpl
dec
or
ljmp
inc
cwtl
xchg
sbb
and
outsl
sar
add
in
cmp
inc
fimuls
repz
jg
cwtl
or
repz
outsl
cmc
push
hlt
mov
dec
cmp
mov
lcall
idivl
dec
sub
fcmove
mov
cmpsb
pop
sub
lret
pushf
xchg
jae
loope
ficomps
jno
push
add
in
add
and
mov
rorb
adc
pop
imul
out
cmp
insl
pop
std
push
mov
cmp
scas
les
cmp
xchg
loopne
jmp
pop
call
jmp
jnp
push
movsl
dec
cmpsb
inc
in
iret
inc
push
push
repz
mov
or
push
mov
rclb
lds
arpl
out
and
pusha
popf
dec
push
nop
jle
in
clc
jbe
stc
lock
cmpsb
push
ret
pusha
nop
mov
cmp
std
push
xchg
insl
popf
mov
sbb
mov
add
inc
jb
inc
lods
xchg
jns
cli
jp
and
lods
mov
mov
sbb
in
daa
jno
xchg
mov
dec
out
insl
cs
fcomps
sbb
stos
mov
mov
cmpsb
xchg
mov
adc
lahf
dec
add
in
ljmp
fbstp
loope
xor
cmc
and
fnstsw
call
clc
dec
imul
inc
dec
aad
cmp
mov
pop
or
mov
inc
cmp
aaa
jge
fwait
xor
fwait
pop
mov
pushf
push
lcall
aas
in
push
mov
bnd
dec
clc
jb
ss
out
push
fldenv
push
or
xchg
cltd
jmp
aam
mov
cmp
bound
jae
mov
das
pop
dec
cmp
cld
lahf
loope
mov
addr16
hlt
push
jbe
daa
add
add
mov
push
push
adc
sub
imul
bound
jne
sti
mov
shlb
stos
in
in
shrb
hlt
pop
cmpsl
nop
sbb
push
aad
jnp
testb
mov
mov
push
mov
push
mov
jg
les
inc
xor
stc
push
mov
sub
mov
push
inc
sub
push
ljmp
push
cmpsl
jno
xor
jns
iret
or
popa
in
sub
lods
je
sahf
int3
push
pop
sub
stos
dec
or
lock
pop
stc
ret
pop
in
sbb
xchg
sub
stos
cmc
popf
xchg
add
enter
push
mov
mov
xor
pop
cmc
sub
andb
mov
in
iret
and
adc
pushf
imul
jg
jecxz
shlb
push
rorl
and
sub
outsl
int3
jnp
xchg
pop
iret
call
test
ljmp
cltd
push
into
call
cmp
fwait
mov
das
js
dec
mov
inc
insb
cmp
rolb
mov
addr16
and
lods
outsl
xchg
jmp
push
mov
lcall
test
mov
cmp
mov
rorl
pop
mov
pop
dec
adc
sub
outsb
push
stos
or
or
cmp
repnz
lods
in
jle
cmpsl
mov
das
mov
lods
mov
shrl
pushf
out
push
ds
in
stos
lock
cmp
fstpt
ficoms
repnz
add
mov
ja
jne
xor
and
int3
or
fcomps
pop
dec
jle
loop
aam
popa
inc
inc
loope
jae
cmp
push
xchg
mov
or
pop
jg
adc
shl
dec
scas
jmp
pop
enter
popa
mov
dec
test
addr16
sub
les
scas
lcall
jg
add
aaa
jno
mov
in
outsl
int3
add
aas
jge
and
js
cmp
aaa
in
dec
sbb
mov
cltd
xor
sbb
jae
pop
scas
lods
mov
movsl
mov
mov
mov
lret
in
into
hlt
arpl
lds
aad
pop
pop
cmp
rolb
mov
addr16
dec
fs
push
sub
es
mov
mov
pop
push
inc
mov
fwait
or
xchg
mov
sbb
call
xchg
push
shll
dec
bswap
lods
lock
rorl
sbb
jmp
das
lret
stos
cmc
pop
and
insl
mov
movsl
jo
adc
imul
mov
fs
xlat
test
inc
pop
dec
mov
xor
test
cmp
in
sbb
test
daa
int
insb
jns
push
rcrb
inc
and
and
jg
jp
cmp
cld
cld
out
cmp
jns
adcl
out
adcb
stos
mov
mov
shrl
ds
dec
imul
or
pushf
jb
sahf
imul
lahf
inc
popa
paddsw
jo
js
out
addl
outsb
cmp
push
mov
xchg
popa
gs
and
xor
and
sbb
es
shrl
mov
dec
xor
cmp
xchg
dec
mov
fisubl
xlat
and
push
or
mov
and
and
push
xchg
stos
pop
mov
ficoml
xor
popa
shll
inc
std
pop
loopne
scas
repnz
and
jg
add
dec
pop
fsubl
push
das
mov
js
cmp
scas
add
inc
add
popf
aam
jnp
std
or
add
lds
jmp
jmp
lahf
inc
nop
push
lret
xor
in
mov
adc
imul
nop
ret
inc
push
sub
popa
dec
lods
mov
ror
hlt
mov
xor
mov
cltd
sub
xor
inc
sub
mov
sbb
mov
xchg
frstor
push
cmpsb
adc
xchg
imul
in
xchg
push
in
and
sub
hlt
data16
push
pop
or
jo
xchg
inc
cmpl
mov
dec
dec
nop
cmp
adc
ss
push
bound
loop
lcall
mul
and
xchg
cmp
inc
mov
mov
fimull
add
daa
in
adc
push
jae
subl
loopne
sbb
out
es
pmaxsw
mov
dec
decb
and
fbld
inc
sub
mov
add
rcrb
scas
add
mov
bound
adc
scas
push
or
xchg
mov
cmc
jae
pusha
fstpt
mov
outsb
xor
mov
imul
std
dec
insl
mov
xor
sbbb
je
xor
or
inc
cli
stos
xlat
fnstcw
outsb
push
push
and
imul
mov
mov
outsl
ja
or
mov
loopne
scas
out
adc
pop
push
cmp
cmpsb
test
stc
in
and
stos
pop
pop
sahf
cmp
xchg
cmp
adc
jecxz
or
arpl
aam
int
sbb
push
aam
dec
add
fwait
xchg
rorb
and
adc
cmp
pop
movsb
sub
inc
jge
cwtl
push
push
jb
pop
dec
pop
popf
jo
cmp
mov
inc
stc
sarb
jge
int3
into
jb
mov
ret
fsubrp
lahf
and
in
enter
test
into
cmp
clc
and
sbb
and
pusha
mov
cltd
cmp
ficompl
xor
push
add
out
push
mov
xchg
pop
pop
push
out
sub
aam
nop
pop
jb
in
xchg
dec
cwtl
xchg
pop
dec
in
pushf
jecxz
mov
inc
test
ret
push
xchg
cli
neg
scas
jmp
inc
pop
test
mov
xlat
ret
sahf
stc
rcrb
daa
pushf
inc
or
lods
and
das
xchg
addr16
lret
dec
ljmp
fnsave
rorb
out
add
fnstsw
inc
andb
loope
sub
mov
dec
sub
pop
cmp
ret
push
jb
or
mov
in
push
sahf
pop
fcomi
test
lret
and
jge
adc
arpl
pop
lds
je
gs
clc
add
sub
xchg
inc
mov
insl
add
pop
fs
push
call
loopne
outsb
icebp
sarl
sti
lods
ds
fisttpll
sub
imul
inc
sub
rcr
or
sahf
loopne
je
test
divb
jne
cld
push
jp
int3
or
icebp
mov
jge
test
push
adc
out
into
jne
adc
stc
jnp
dec
inc
sbb
jp
into
in
mov
or
inc
sub
add
pop
xor
pushf
fdivrp
out
pushf
je
mov
mov
jecxz
adc
gs
movsb
jbe
sbb
xchg
mov
repnz
je
lret
insb
and
adc
mov
outsb
inc
cltd
adcl
arpl
hlt
adc
jp
add
jmp
fdivrl
push
pushf
push
aam
mov
je
inc
insb
stos
adc
lcall
xchg
mov
sbb
push
fwait
gs
rorb
xor
bound
dec
scas
xchg
push
xchg
out
jo
popl
mov
clc
jge
sub
cs
pushf
adc
xor
insl
aam
jge
mov
loope
shlb
stc
push
iret
ljmp
dec
andl
inc
test
imul
fdivl
loope
xchg
insl
ja
adc
mov
stos
pop
push
sbb
lods
ficoml
mov
lcall
sbb
lds
or
sbb
sbb
or
push
lods
fisubrl
dec
mov
xlat
nop
pop
xor
fsubs
rol
mov
sbb
fcmove
mov
jnp
loope
push
sub
or
test
xchg
leave
cmp
sub
in
nop
clc
mov
sbb
lea
jno
mov
pop
icebp
inc
ja
ljmp
ja
repz
xchg
mov
sti
xor
mov
sbb
sti
pop
cwtl
nop
js
sarb
mov
insb
sub
push
inc
mov
cmpsb
test
cltd
xor
push
rorb
insb
lock
push
mov
repz
mov
les
sub
push
push
inc
aaa
push
rolb
cs
popf
cmpsl
fs
push
jb
sbb
and
sbb
push
or
cltd
inc
and
cltd
push
je
pop
in
mov
sbbl
dec
fcoms
push
xlat
addr16
ss
mov
mov
test
adc
lds
fucomip
lret
fucomip
gs
les
xchg
int
lcall
inc
out
cmpsb
repnz
cli
dec
nop
lds
int3
xor
fldl
lret
sub
imull
pop
in
sub
mov
lahf
out
mov
mov
jmp
mov
into
lock
or
insb
dec
mov
xchg
out
cltd
out
jo
out
pop
push
arpl
or
or
inc
push
fistl
je
clc
pop
adc
imul
shl
add
and
aaa
jmp
scas
in
stos
loop
insl
xchg
adc
pop
mov
inc
sbb
xor
ds
int3
jmp
add
repz
clc
mov
test
mov
jge
jo
jo
cli
or
pushf
test
outsl
aaa
sbb
adc
out
mov
fsubs
test
mov
negl
aas
sbb
dec
mov
jp
push
sbb
pop
lcall
mov
and
mov
push
sbb
dec
aaa
mov
and
int
jmp
bound
ret
lods
out
lea
sub
iret
mov
mull
out
subb
dec
loope
jne
inc
mov
roll
fst
pusha
insb
int3
mov
cmpsb
inc
cld
mov
aam
shrb
stc
loope
js
inc
adc
adc
mov
outsb
mov
xor
sbb
jl
movsb
dec
adc
jmp
arpl
and
dec
mov
mov
xor
clc
cmp
imull
adc
imul
lds
lret
mov
sbb
or
nop
ret
mov
loop
sub
clc
jo
imul
xchg
pusha
fbstp
jae
dec
jnp
xor
js
pop
fstps
les
std
aaa
adc
pop
stos
add
lods
aam
and
jmp
mov
clc
dec
dec
repz
testl
pop
pushf
jecxz
add
arpl
mov
or
outsl
jne
or
stos
fistps
cwtl
pop
roll
outsl
loopne
push
sub
sub
add
lea
imul
out
add
mov
ret
sub
or
or
fcmovnb
cmp
lret
jp
push
in
lret
out
or
pop
mov
mov
gs
mov
mov
adc
out
sub
int
pop
xchg
lahf
inc
and
adc
push
inc
loop
stos
pop
xor
sub
outsl
sub
cwtl
clc
jnp
fisubrl
mov
sub
pop
icebp
lret
into
mov
into
mov
push
add
mov
sbbl
fdivrl
add
inc
mov
popa
dec
rcrl
fisubrl
mov
test
sbb
mov
xchg
stos
xor
pop
rolb
xor
push
test
xchg
xlat
xchg
je
push
pop
ret
push
cmp
enter
into
sub
dec
jnp
mov
outsb
mov
mov
ficoms
jle
cli
mov
xchg
mov
int
cmp
cmp
roll
jae
jnp
mov
sbbl
jae
inc
mov
icebp
addr16
adc
int3
jle
add
inc
and
icebp
cli
lret
mov
sbb
push
push
mov
dec
in
pop
lret
icebp
rolb
jo
popa
in
sbb
les
adc
shll
movsb
daa
pop
in
mov
cmp
pop
inc
add
push
loop
cmp
fs
out
imul
xor
push
push
cwtl
in
push
outsl
cmpsb
pop
jl
cmc
insl
mov
ljmp
jle
push
jbe
out
popa
fadds
push
sub
addr16
mov
mov
cmp
pop
pop
stos
mov
fdivrs
outsb
iret
inc
aam
iret
mov
dec
cli
cli
loope
pop
mov
inc
in
xor
cmp
inc
xchg
ret
ret
rorl
mov
dec
dec
pop
add
xchg
pop
push
addr16
pop
mov
xchg
add
jmp
lcall
cmp
lret
xor
ds
in
push
dec
sub
fidivrs
cmovne
push
mov
push
out
add
movsl
imul
xchg
cmp
cs
jns
xor
dec
jp
jae
adc
fdivrl
mov
ja
xchg
and
jnp
adc
add
and
aad
adcl
inc
push
repnz
rclb
or
cmpsb
out
popa
cmpsl
push
es
or
push
adc
mov
mov
jnp
dec
pop
push
sbb
sub
cs
sbb
lret
stos
jb
cs
out
xchg
add
cltd
xorb
xor
stos
loop
ret
dec
stos
fwait
loopne
in
mov
mov
push
mov
inc
test
mov
pushf
enter
aam
mov
les
movsl
inc
icebp
jle
jle
push
mov
push
sbb
push
sub
dec
mov
dec
jge
mov
sbb
mov
int
xchg
std
sahf
adc
dec
sbb
sbb
js
mov
jo
daa
jbe
mov
jb
adc
pop
imul
push
ret
or
hlt
in
adc
inc
lahf
mov
repz
stc
cli
iret
cli
nop
addb
movb
loopne
add
xchg
nop
enter
movsl
ret
sbb
push
dec
sarl
xchg
pop
aas
push
int3
adc
sbb
mov
pop
jmp
fbstp
movsl
mov
loop
mov
dec
push
sbb
loop
or
fnstcw
jb
fisttps
jo
roll
notb
stc
push
call
push
popa
fs
rcl
mov
push
or
es
lock
sti
cmpl
es
inc
push
and
repz
mov
in
cltd
dec
int
pop
test
or
add
jb
mov
cmc
and
ja
adc
ret
bound
in
loop
fucomp
gs
cltd
jmp
jg
jecxz
push
inc
adc
dec
mov
xor
mov
xlat
es
enter
loopne
bound
jge
scas
pop
lods
les
leave
cmpsl
jne
inc
mov
leave
daa
and
adc
in
outsl
inc
mov
dec
test
and
adc
dec
cmp
mov
mov
dec
inc
inc
lods
pop
std
jne
mov
cmp
add
cmpsb
inc
inc
push
lods
sbb
idivb
sub
inc
push
mov
or
xchg
or
sub
adc
aad
mov
pop
lods
or
iret
push
cmpl
in
in
insb
les
les
mov
imull
push
sti
test
and
mov
mov
jb
jle
movsb
sbb
das
xlat
dec
lods
cld
pop
adc
insl
mov
sub
xchg
mov
sbb
orl
sbb
aaa
fldcw
imul
jmp
push
ret
push
pop
push
scas
xor
add
pop
imulb
xor
roll
push
xchg
mov
imul
das
outsb
push
sti
mov
inc
repnz
fcmove
add
ja
rolb
out
xor
jg
sbb
insl
adc
int
sbb
sbb
into
cmp
sarb
and
fildll
iret
lock
xchg
push
leave
lods
xchg
xchg
mov
mov
es
dec
es
xor
out
fidivl
xlat
loopne
popl
or
fs
jl
lret
das
push
xor
cmp
dec
hlt
mov
add
and
xor
adc
jno
orl
fmull
movsb
push
or
xchg
xchg
mov
movsl
mov
mov
dec
jo
inc
or
out
sub
pop
call
mov
or
cmpsl
add
loope
movsl
mov
adc
cmp
sbb
in
inc
mov
inc
ret
stos
add
or
std
jecxz
mov
or
jle
insb
loope
test
mov
xchg
add
mov
mov
pop
push
mov
les
das
int
cmpsl
cmp
stos
xchg
push
pop
enter
mov
sarl
scas
out
jns
inc
leave
or
push
mov
rcll
out
mov
xor
andl
in
xorb
dec
mov
icebp
lds
int3
in
jge
push
cmp
jle
iret
ds
mov
mov
mov
int3
adc
cltd
add
arpl
mov
and
stc
mov
mov
inc
fcomi
xor
pop
or
stos
jge
int
out
pop
in
cmp
sbb
and
dec
adc
mov
mov
pusha
outsl
popl
push
push
clc
mov
jge
inc
or
mov
add
mov
pop
shrb
mov
xor
pop
jle
stc
cmp
int
sbb
scas
outsb
and
and
fldt
iret
mov
jnp
cld
mov
mov
mov
leave
scas
pop
push
test
xchg
push
mov
out
shr
sub
lods
jl
jp
pop
and
and
add
ret
dec
xchg
in
ret
dec
push
jge
repz
fisubrs
or
push
and
rolb
and
movb
or
dec
mov
aad
or
xor
push
fcmovne
inc
or
imul
ss
lods
andl
inc
shll
addr16
push
sub
orl
popa
pop
fdivr
jmp
lcall
aam
fidivs
rclb
ret
inc
cmp
popa
loope
iret
mov
clc
sbb
cmp
sahf
shll
loop
es
and
jno
adc
mov
push
test
pop
stos
int
lods
inc
das
push
sbb
push
cmc
xchg
test
bound
cmp
stc
jns
mov
xor
jp
fsubr
mov
sbb
sahf
mov
and
outsb
test
cmc
bnd
adc
mov
cltd
outsb
movb
push
pusha
mov
xor
push
pop
mov
xchg
xor
add
mov
mov
jg
or
mov
jge
das
inc
sbb
mov
cmpb
inc
in
imulb
pop
test
jl
pop
repz
jne
lods
sbb
insl
pop
cmpsl
mov
and
push
pop
push
enter
xor
loope
mov
pop
rorl
inc
inc
push
scas
out
cwtl
pop
sbb
dec
mov
adc
dec
lret
cmpl
int3
repz
xor
inc
outsl
shl
xor
outsb
lock
lahf
inc
ret
xchg
add
xchg
cli
popa
loope
imul
jnp
shlb
sbb
push
cli
mov
dec
jecxz
mov
pop
cmp
push
mov
sarl
in
test
mov
inc
aad
add
push
xchg
popl
lret
jbe
jmp
int
mov
pop
sub
rep
sbb
push
pop
xchg
fisubl
in
bnd
rclb
push
cmp
jge
adc
testl
push
bound
cmpsl
ss
or
dec
mov
add
and
inc
add
add
shlb
lods
sub
inc
cmp
inc
cld
sub
push
jmp
sub
push
mov
das
and
jo
or
push
pop
stos
in
push
xlat
xor
pop
push
sub
mov
push
divl
pop
mov
mov
inc
dec
mov
add
push
enter
cld
pushf
pop
inc
dec
loope
lods
or
sub
mov
xchg
rorl
dec
jge
ja
stc
andb
mov
cmp
lods
cwtl
es
push
and
hlt
repnz
lret
cmp
push
pushf
cld
mov
jo
push
imul
jnp
xor
out
addb
xchg
les
mov
sbb
sahf
js
xchg
scas
inc
xchg
xchg
adcb
das
lods
mov
std
xor
imul
call
call
jbe
inc
and
aam
jmp
push
dec
mov
stos
sbb
and
lods
cli
scas
mov
jge
shrb
push
and
dec
negb
scas
mov
in
xchg
loopne
inc
jmp
fstl
ja
push
or
in
pop
xchg
test
mov
iret
bnd
xor
cs
push
es
cmp
sub
fdivrs
cs
loopne
mov
adc
test
icebp
mov
sbb
pop
sbb
xchg
sbb
gs
mov
push
ret
mov
pop
push
aaa
shrb
sub
lret
nop
adc
in
adc
dec
or
mov
cs
lret
xchg
mov
loop
dec
filds
jo
sbb
fidivrl
sbb
enter
pop
dec
fmull
inc
cmpsb
shll
loop
incb
je
pushf
cld
in
inc
ss
andl
and
popa
stos
sar
pop
mov
sub
dec
cs
jecxz
push
jp
and
das
xchg
imul
gs
pop
add
hlt
or
xchg
pop
sub
cltd
xchg
xor
ds
mov
fnsave
jg
add
in
lea
outsb
pop
pop
xor
xor
xor
outsl
inc
adc
paddsw
cli
jb
dec
xlat
test
repnz
lcall
in
xor
ss
push
add
or
or
and
add
mov
stos
xchg
push
fsubs
pop
xor
ljmp
shrl
clc
aam
in
fnstcw
dec
and
pusha
xchg
push
cwtl
xchg
scas
push
popa
ds
inc
fsts
add
bound
lods
popa
dec
xchg
push
cli
pop
mov
lods
dec
mov
lret
nop
out
jo
pop
pop
insl
push
repz
sub
push
push
cmc
lds
sti
pop
out
jns
lea
ret
out
jno
test
or
lock
cmp
inc
mov
movsl
andl
dec
sbb
inc
int
ds
jge
out
and
lahf
pusha
add
xlat
ss
inc
fistpl
push
and
inc
inc
or
imul
mov
mov
mov
flds
sbb
gs
lret
test
movsb
add
xchg
sbb
movsl
je
outsb
lods
mov
repnz
nop
jo
or
xchg
push
xchg
xor
or
sbb
loope
or
daa
in
fisubs
mov
xor
jg
push
out
repnz
clc
mov
fsubl
je
mov
cmp
adc
ficoml
jle
jecxz
incb
fdivrp
flds
pusha
std
outsl
out
add
inc
mov
arpl
push
cmp
and
out
imul
inc
lahf
jnp
ret
sbb
jb
inc
outsl
inc
inc
adc
popa
pop
sbb
outsb
mov
xor
in
add
add
push
add
push
lret
pop
jle
xlat
fistl
or
push
lahf
cmp
jecxz
push
sub
je
ja
pushf
clc
inc
pushf
cld
dec
ficoms
and
iret
adc
ficompl
jae
stc
mov
add
ficompl
pop
inc
sbb
dec
push
loop
add
xchg
lods
xchg
push
xchg
lock
cli
cmp
test
orl
xchg
ret
sbb
call
mov
jnp
std
sub
std
adc
push
fbld
cmp
movb
mov
sti
insb
clc
loopne
inc
jmp
setle
iret
inc
and
loope
mov
aas
pop
or
fildll
rcll
pop
push
xchg
aas
cmp
jg
sbb
and
dec
rcl
xor
das
mov
mov
decb
and
adc
int3
stc
into
sti
out
ss
mov
scas
mov
sbb
mov
std
int3
push
mov
xchg
push
xchg
mov
popa
inc
imul
pop
icebp
add
aas
mov
fmul
pop
fbstp
inc
adc
movsl
popf
sti
adc
call
fdivs
lret
push
rorl
pop
dec
movsb
jmp
ja
mov
cmpl
sbb
cwtl
out
hlt
xchg
or
mov
add
and
jb
jg
jne
or
addr16
adc
enter
xchg
sub
stc
dec
jbe
je
aas
fiadds
leave
jl
leave
pop
cmpsl
sub
xchg
or
lods
or
or
stc
add
xchg
dec
into
dec
jbe
sarb
jmp
out
pop
mov
push
movl
int3
and
inc
cmp
xor
jb
lcall
ss
and
hlt
adc
mov
insb
test
mov
mov
dec
and
jno
lods
push
and
xchg
push
jecxz
sbb
sbb
imul
lea
and
fwait
jg
das
cmpb
jp
in
or
repz
fwait
mov
aad
lcall
sub
cmp
or
loop
int
xchg
pop
lret
rcrb
insb
aad
jp
sbb
and
adc
cmc
mov
lret
jns
sar
aaa
lret
mov
sub
fstl
xor
pop
inc
sbb
fcoml
imul
daa
lods
lods
ret
ljmp
mov
outsl
add
sbb
ds
insl
and
sbb
clc
and
ljmp
cmc
shlb
mov
pusha
scas
cwtl
add
gs
sub
imull
sub
mov
pusha
jnp
imul
aaa
mov
shrb
mov
and
pusha
push
sbb
loope
jae
dec
shl
adcb
jl
nop
mov
dec
adc
cltd
mov
test
xor
cld
es
shrb
imul
push
sbb
fsubrs
lret
pop
fisttps
mov
xchg
jo
cmc
das
cli
out
or
push
test
test
xchg
lods
jp
xor
repz
insl
jb
arpl
push
adc
or
xchg
out
test
icebp
subl
sbb
lcall
addr16
push
sub
sti
and
push
inc
stos
mov
mov
and
pop
xchg
sarl
nop
xor
clc
inc
test
js
cld
xchg
add
pop
push
inc
hlt
shrl
mov
daa
push
sbb
stc
sti
push
push
sbb
pop
sbb
inc
hlt
mov
inc
enter
ss
cmp
test
fiaddl
mov
or
bound
push
loop
adc
lods
insb
xor
mov
cmp
scas
sbb
add
pop
sub
xor
popf
js
sub
dec
pop
xchg
cld
add
popa
jne
xchg
mov
push
pusha
mov
jecxz
movsb
add
mov
xor
inc
andl
fucom
adc
test
and
rclb
je
xchg
cmc
adc
mov
lret
aaa
jb
or
imul
ficoml
push
int3
sub
jg
test
fs
sbb
jb
xor
push
lret
das
push
push
push
or
mov
scas
je
mov
mov
scas
ds
mov
loop
adc
jno
lods
push
sbbb
clc
das
call
popa
or
cmp
and
fidivs
mov
shl
jbe
aaa
loopne
mov
cmpsb
jecxz
test
jbe,pt
mov
mov
sbb
stos
mov
or
sub
test
and
jg
fbld
jge
xchg
xchg
loope
sub
fstpl
pop
popa
sub
push
outsl
inc
shlb
scas
test
pop
insb
loop
sahf
add
scas
inc
mov
and
or
cmc
insl
dec
dec
jp
bound
sub
int
shl
or
out
subb
in
add
sti
sub
negb
push
jns
movsl
ss
out
xchg
mov
xor
xchg
popa
sbb
adc
popa
rep
adc
pop
mov
dec
xchg
into
pop
add
cmc
aad
test
adc
into
jg
push
arpl
fdivrs
adc
imul
xchg
insl
or
dec
fdivp
fcomi
push
out
adc
pop
je
push
xchg
xchg
jp
clc
jg
jb
xor
and
icebp
add
jno
sbb
ss
cmp
push
mov
jg
xor
rol
insb
jge
xlat
mov
mov
movsl
ret
push
aam
mov
testl
jb
or
jbe
or
mov
sbb
sbbb
jns
inc
sbbl
push
scas
xor
fidivrs
or
jl
rclb
in
dec
cmp
pop
dec
and
test
push
jg
nop
push
mov
fwait
aas
push
jl
loop
cmp
sbb
aas
jo
stos
mov
adc
je
imul
and
cwtl
mov
mov
je
roll
clc
call
adc
repz
mov
out
xchg
jnp
jnp
dec
ja
add
push
imul
orb
into
mov
mov
or
and
in
adc
xchg
jnp
or
cmp
pop
mov
sbb
sbb
push
into
mov
dec
ret
fst
mov
push
push
aaa
and
js
mov
and
jne
and
in
out
dec
shrb
into
dec
scas
cld
push
je
xor
and
loop
inc
mov
aad
das
mov
cmp
call
fninit
mov
cmc
mov
aam
outsb
out
xor
mov
push
mov
lret
dec
sahf
pushf
push
pusha
rol
sbb
aam
cmpsb
ficoms
sbb
dec
test
in
xchg
lock
pop
dec
dec
pop
ds
xchg
out
sbb
dec
mov
push
flds
adc
inc
cwtl
ljmp
fucom
sbb
mov
out
lods
xchg
ret
xor
ss
xchg
lcall
aad
sub
mov
ret
cmpsl
int3
push
iret
and
cmp
xor
ljmp
push
pusha
mov
xor
shlb
add
icebp
jb
push
sbb
xor
cwtl
data16
dec
pop
mov
mov
mov
fisubrl
cmp
push
inc
or
inc
faddp
mov
jnp
test
lods
push
ds
xchg
jg
addr16
or
jg
loop
clc
mov
add
shlb
dec
cmp
add
ret
stos
divb
lea
loop
out
mov
mov
sarb
and
xor
add
pop
sbb
mov
call
xchg
stc
in
int
shr
jo
adc
out
data16
mov
push
pop
fdivl
repnz
pop
push
mov
inc
in
jbe
stc
xchg
adcl
adc
ficoml
xchg
and
xchg
insb
pop
fmul
out
call
or
cld
es
daa
std
pop
xchg
sbb
cmpsb
imul
adc
cltd
lods
and
inc
les
mov
dec
test
mov
push
or
xchg
mov
aaa
sub
loop
movswl
stos
imul
lods
or
adc
add
popf
add
sub
in
xchg
je
scas
dec
popf
push
and
inc
sbb
fisttpll
imul
gs
int3
in
add
dec
popa
lret
pop
mov
push
int
icebp
mov
mov
aas
mov
enter
or
adc
andl
mov
mov
inc
icebp
and
sbb
inc
sbb
popa
add
dec
andb
aas
xchg
and
inc
mov
inc
adc
mov
add
xchg
aad
pop
addr16
mov
aam
jecxz
mov
xor
es
in
fwait
xchg
jnp
xchg
daa
mov
add
push
insl
mov
js
add
jae
push
sbb
ljmp
inc
rorl
push
rorl
pop
add
mov
nop
mov
in
loop
or
mov
inc
repnz
fsubrs
fcomps
insl
test
cwtl
cmp
out
lret
les
pop
stos
and
rcrl
pop
adc
xchg
mov
scas
cmpsb
paddusb
jge
es
jg
int
movsl
push
pop
xchg
test
cmpsl
mov
stc
cmc
fidivs
cli
adc
add
jne
int3
les
add
xor
aad
mov
fistpll
mov
dec
mov
xor
pusha
test
push
and
les
clc
inc
mov
jo
adc
ret
fsubl
xchg
push
pop
push
or
decl
fstps
and
push
mov
sub
dec
ja
clc
out
ret
mov
shrb
loopnew
mov
pop
fistl
addr16
insl
lea
lods
inc
mov
iret
sub
sbb
push
loopnew
filds
mov
inc
mov
fidivrl
mov
cmp
loopne
int
je
add
mov
pop
cmp
enter
jecxz
adc
jmp
xchg
xchg
lahf
call
pop
push
in
xlat
jmp
mov
mov
add
js
mov
faddp
daa
movsl
pop
pop
ss
push
inc
pop
sub
je
insb
xchg
fmuls
jecxz
ret
lcall
jl
insl
push
push
jp
lock
pop
out
mov
repz
call
cmp
lahf
pushf
jo
pop
jb
xor
rclb
xor
pop
shll
leave
pop
sti
push
mov
aas
lods
les
insl
pushf
xor
clc
jne
icebp
sbb
adc
sbb
scas
addr16
test
arpl
jle
push
adc
adc
sahf
pusha
stos
or
insb
mov
xchg
nop
pop
inc
mov
test
sbb
or
cli
aaa
dec
mov
daa
push
pop
xor
mov
xor
fstps
pop
cmp
xchg
pushf
mov
cmpsb
fnsaves
cmp
outsb
shlb
mov
xchg
add
lods
xor
repnz
cwtl
push
and
mov
jo
lret
outsl
ja
jl
frstor
daa
adc
jns
or
scas
clc
mov
or
outsb
cltd
std
gs
loope
aam
mov
movsb
int3
or
int3
mov
jno
mov
outsb
daa
cltd
outsb
loop
jle
scas
xor
imul
rcrl
pop
notl
rolb
clc
insb
inc
lock
into
or
jns
mov
jns
xchg
mov
icebp
and
stos
out
lret
push
or
or
outsb
xchg
mov
pavgb
rcll
sub
mov
dec
xchg
call
mov
xor
fsubl
xchg
pop
incl
movsl
mov
sub
pushf
mov
out
inc
sar
mov
dec
pop
sub
icebp
dec
cwtl
sbbl
jbe
mov
inc
leave
xor
std
or
push
and
and
jb
add
pop
sbb
mov
fidivrl
insb
mov
je
xor
roll
bnd
loope
je
xor
and
cmpb
mov
and
sub
pop
fmul
cmpsb
mov
push
cmpsl
xlat
push
into
rcll
mov
lea
movsb
jno
cli
jge
dec
fisttpl
mov
sub
xor
inc
mov
out
push
pop
cmc
test
xchg
cmovb
mov
shl
push
xor
sbb
pop
push
xor
nop
sub
fdivs
and
inc
fs
imul
repz
dec
adc
xchg
fs
adc
fsubrl
ja
fisubrl
les
lret
and
enter
pushf
xchg
xchg
jns
imull
lcall
sub
mov
mov
dec
rorl
lea
loope
push
stos
jmp
addr16
test
sub
lock
icebp
clc
cmp
hlt
adcl
icebp
leave
sbb
addr16
fwait
lret
stos
bound
pop
idivb
and
ret
adc
ret
mov
push
aad
fs
xor
and
push
out
lret
ret
outsb
sub
leave
jmp
lods
pop
dec
or
gs
xor
fstps
addl
ret
cmp
or
cmp
jge
xor
pop
inc
push
pop
sbb
mov
xlat
inc
stos
hlt
in
lods
shrl
push
or
and
mov
jns
add
rcr
jecxz
sub
ret
stc
xchg
xor
xchg
mov
mov
flds
movsl
in
push
outsl
pop
test
adc
or
movsb
in
mov
mov
cs
jns
shrb
js
ret
jb
repz
xor
xchg
jg
jnp
rclb
cmc
out
cmp
xor
sbbl
aas
lcall
pop
std
push
mov
jmp
jecxz
or
jg
out
pop
sbb
flds
dec
icebp
and
loopne
sub
loope
xchg
int3
dec
xchg
cmp
xlat
gs
cs
rcl
xor
mov
inc
dec
mov
test
ja
xchg
mov
mov
je
mov
or
mov
sahf
test
xor
xor
mov
mov
dec
pusha
lcall
or
mov
mov
xlat
or
ss
ss
dec
inc
adc
aam
cmp
insb
adc
data16
in
mov
dec
aam
xor
out
mov
mov
inc
cmc
fs
movsl
les
aaa
jp
or
daa
jo
dec
notl
imul
push
adc
jge
iret
outsb
inc
jnp
popf
into
cmpsb
orl
mov
sub
jnp
jge
pop
ss
push
dec
into
loope
les
ficompl
pop
inc
dec
shrb
mov
int3
jp
insb
loop
inc
push
pop
insb
out
in
mov
popf
lret
in
call
xchg
ljmp
es
jnp
sbb
fidivs
aad
push
sbb
push
test
lret
inc
pop
fcmovne
push
xchg
outsb
repz
lods
mov
sub
and
imul
sub
push
fisttps
mov
adc
ds
push
out
sbb
fwait
dec
fistps
nop
jns
lret
mov
push
mov
ljmp
xor
andb
adc
xchg
fimull
sahf
and
xchg
jl
loopne
adc
xchg
jmp
lcall
add
mov
mov
and
das
fisttpl
icebp
ret
lcall
in
popa
cmp
cs
fidivl
mov
cmp
push
push
in
daa
mov
push
aam
jp
scas
xor
inc
out
sbb
adc
push
clc
insl
jge
fadds
push
mov
ffree
sbb
xor
push
dec
in
pop
push
push
push
iret
dec
inc
sub
sub
add
ja
pop
or
dec
int
daa
in
mov
insb
shl
cmp
call
mov
xchg
out
pop
cmpsb
clc
scas
outsl
jbe
repz
cmpsb
push
add
aad
xchg
or
lea
xorl
test
int
les
cmp
inc
inc
adc
in
out
pusha
push
xor
xor
ljmp
xchg
fnsave
aas
sti
test
dec
dec
scas
call
push
repz
pop
clc
push
shrl
das
xchg
into
adc
xor
or
jbe
sbb
mov
aas
cwtl
inc
and
sub
xchg
xorl
jns
or
loope
jne
lods
add
pop
jg
fisubs
jg
dec
lret
stos
ret
mov
loope
js
mov
data16
inc
fisubrs
outsb
mov
inc
mov
data16
daa
shl
pop
sbb
rcr
aaa
xchg
mov
xlat
test
std
pusha
decl
aaa
dec
aaa
mov
incb
mov
sbb
xchg
fistl
cmpsb
mov
adc
inc
cmp
inc
sub
and
xor
mov
fldcw
outsl
sub
pop
dec
jmp
shll
bound
movsbl
orb
scas
sbb
cld
test
shll
mov
into
mov
les
enter
add
mov
testl
imul
aas
push
jle
dec
aad
ds
ret
popa
sahf
std
stc
cld
and
and
aaa
xchg
ljmp
arpl
decb
cmp
xchg
or
jmp
rcrb
dec
xchg
xor
jmp
cmpsl
inc
cmp
mov
or
mov
jp
jbe
jl
adc
push
xchg
sbb
push
inc
mov
push
test
ret
mov
imul
ret
sub
fisubl
lret
test
lock
jmp
into
pop
mov
inc
push
loopne
pop
push
mov
aam
bound
xor
jl
cld
mov
xchg
outsl
fstps
lahf
in
mov
cmp
stos
stc
js
movsl
pop
jp
mov
daa
pop
inc
test
lock
orl
imull
fiaddl
pop
jmp
xchg
stos
xchg
mov
jno
mov
mov
imul
iret
and
fmull
shlb
scas
in
xchg
jo
fsubl
jge
bound
clc
xchg
loop
outsb
in
iret
sbbb
ja
pop
xlat
xchg
aam
or
cli
mov
pop
add
or
dec
inc
mov
mov
dec
add
mov
mov
aad
adc
mov
cmp
loopne
lods
pop
pop
push
jo
incl
xor
aas
test
xchg
arpl
insb
cmp
scas
cwtl
xor
daa
fwait
jmp
daa
inc
popa
imul
sbb
jmp
lahf
and
mov
ljmp
inc
add
inc
aas
scas
jle
xchg
push
stc
and
arpl
insl
addr16
dec
fstp
outsb
mov
cmp
inc
loopne
sbbb
cld
ljmp
inc
jbe
jae
sti
clc
mov
pop
cld
and
imull
jo
subb
mov
test
and
pcmpgtd
loopne
loopne
push
orl
sub
enter
cltd
adc
daa
pop
imul
andl
sbb
add
roll
mov
sub
in
iret
mov
in
ret
testl
mov
pop
xchg
scas
xchg
call
add
dec
jne
xchg
xor
jg
or
data16
or
sbb
lret
sbbl
xor
shl
xlat
rcll
and
push
fnstsw
daa
outsb
dec
add
cmpsb
outsb
lret
int
push
sub
sahf
adc
popf
out
in
xchg
jle
xchg
lods
jge
push
inc
inc
push
imul
sub
in
ss
push
pop
push
sub
ja
insl
pop
daa
fdiv
nop
movsl
sbb
sbb
iret
mov
mov
xchg
sub
and
cmc
arpl
fisttpl
inc
int
push
fidivs
push
mov
das
add
int3
cltd
add
xor
xor
xchg
mov
orl
scas
lods
push
inc
fsubl
inc
stos
add
sbb
push
jno
inc
push
sbb
sub
mov
lcall
rolb
addr16
aam
inc
mov
test
stos
sbb
mov
pop
push
rcrb
in
bswap
int
sub
cwtl
adc
fstpl
stos
mov
mov
in
jno
jl
jle
jno
xlat
inc
jle
out
xor
cmp
ss
mov
adc
fsubs
fidivrl
jns
lcall
cmpsl
pop
sub
sbb
lea
and
adc
jo
push
orb
pop
aam
test
lret
inc
pop
movsl
lds
stos
jne
xor
jp
rcrb
or
mov
pop
das
cmp
dec
int
sahf
cmp
callw
mov
push
test
ret
fmull
pop
lock
js,pt
pusha
and
lods
or
add
add
gs
test
repnz
dec
stc
push
push
mov
dec
fistl
cli
testb
test
pmulhw
xchg
cmp
jmp
adc
iret
sarb
stos
lret
ret
dec
xorl
mov
sbb
adc
mov
sar
xchg
mov
sub
inc
jmp
add
push
lret
rcrl
scas
scas
ss
dec
push
pop
mov
pop
xor
mov
mull
push
mov
ret
scas
and
xchg
pop
popf
mov
fldcw
or
dec
xor
pop
xor
dec
xchg
lahf
adc
add
and
mov
push
imul
test
sbb
daa
std
ljmp
sahf
fsubl
lods
dec
sbb
mov
test
xorb
adc
add
push
sahf
jle
ds
xchg
aaa
push
popf
aad
push
std
in
lods
dec
enter
pop
jb
jg
imul
adc
push
pop
lcall
cs
lea
in
gs
fsubrl
ja
sub
inc
xchg
orl
cltd
loopne
push
fs
xchg
rorl
mov
out
inc
cmp
or
mov
pusha
repnz
scas
insb
mov
sar
lods
out
dec
lcall
push
sbb
bound
imul
mov
clc
mov
dec
mov
mov
inc
aas
mov
rorb
xchg
into
inc
out
fcomp
movsl
adc
fildll
mov
lcall
icebp
std
mov
aad
pop
mov
loop
call
mov
test
cmpsl
pop
subl
inc
mov
movb
xor
stc
insl
popa
xlat
jbe
xor
inc
and
dec
add
test
enter
in
or
dec
pusha
insb
jmp
test
push
or
dec
es
dec
jb
xchg
mov
sahf
mov
scas
loopne
cmpsb
addl
rcl
and
dec
push
mov
mov
adc
add
cmp
pusha
lret
add
mov
bound
add
push
sbb
scas
jp
fwait
rcrl
iret
push
pusha
js
aas
xchg
xlat
and
dec
jns
xor
inc
lea
fwait
aam
shrl
mov
mov
sub
xor
shll
imul
xchg
xor
jnp
lds
mov
dec
int
out
pop
insb
xchg
shl
push
pop
pusha
mov
pop
push
dec
xchg
popf
xchg
mov
fsubs
push
and
push
dec
jns
xchg
add
push
test
adc
fcmovne
sbb
push
fstpl
out
push
xor
inc
ljmp
shld
mov
cltd
mov
test
sub
lcall
loope
pop
int3
cmpsl
mov
call
inc
das
jge
or
jge
push
pushl
mov
into
adc
jp
stos
inc
sbb
push
inc
in
add
jmp
and
dec
icebp
mov
pop
adc
or
fdivrs
sbb
and
dec
shrl
push
sub
aam
mov
push
into
je
fstpt
insb
and
rorb
jl
xchg
out
dec
pop
loopne
sbb
insb
xchg
cmpsb
hlt
call
xchg
outsl
xor
lret
cmpl
sub
xor
call
mov
rolb
test
xor
adc
cmp
push
xchg
fsts
es
or
in
jb
subb
fisubl
or
push
dec
stos
sbb
sbb
stos
ret
test
cmpsb
pusha
push
lcall
xor
pop
mov
mov
lahf
testb
das
outsb
or
test
not
add
lea
test
sbb
gs
lea
mov
xchg
iret
sub
xor
cld
fbld
leave
stos
cmp
adc
lea
sbb
jae
inc
cmp
jno
sub
and
sbb
mov
push
inc
pop
adcb
iret
mov
push
xlat
mov
inc
cmpsb
sbb
in
fistl
addl
clc
stos
scas
fdivr
mov
hlt
sub
jmp
cmp
les
inc
sbb
jne
arpl
out
mov
test
jns
push
mov
popf
outsb
gs
in
mov
mov
loop
je
push
or
fldenv
aaa
out
add
inc
cld
icebp
scas
jne
adc
sbb
sbb
sub
fistpll
push
hlt
pop
je
dec
scas
cmp
call
pop
adc
pop
in
lock
adc
into
in
mov
push
pop
push
into
sub
insl
mov
stc
push
scas
ss
imull
sarl
fdivs
push
pop
bound
lock
fstps
xchg
je
sbb
lret
mov
cli
into
inc
imul
mov
les
cltd
jns
stos
inc
sub
jmp
xor
cmpsl
fsubr
in
lods
dec
push
push
sub
jp
push
hlt
adc
scas
stos
pop
dec
insl
fstp
jge
pusha
aas
loopne
push
xor
pop
adc
cmp
dec
sub
fwait
mov
cwtl
cmp
jmp
adc
or
and
mov
ror
cmp
add
fisttpl
dec
inc
icebp
xor
mov
inc
out
in
sbb
inc
pop
cmp
imul
test
dec
das
imul
dec
adc
mov
add
insl
stos
add
jmp
pop
test
add
movsb
cs
lahf
mov
subb
test
sub
push
jg
movsb
jnp
mov
push
jg
add
into
pop
shll
cwtl
add
inc
mov
shr
lea
imul
xchg
dec
add
mov
xor
mov
xchg
xchg
les
fisttps
shll
push
push
adc
nop
pop
xchg
ds
bound
mov
inc
pop
out
cmp
add
aaa
std
arpl
insb
aaa
mov
xor
mov
jno
sub
ss
cmp
sbb
xchg
pop
adc
fwait
pop
sti
dec
outsl
dec
popa
cmpsl
cwtl
lahf
sbb
xor
leave
fwait
xorl
dec
movsb
mov
loop
aas
addr16
dec
enter
pop
sahf
sbb
xchg
cltd
lock
int
and
xchg
xor
shrb
inc
xlat
mov
stos
push
sub
lahf
jbe
fldenv
mov
xchg
and
cmpl
mov
inc
ljmp
and
lds
push
push
repnz
inc
ss
cld
push
test
ja
inc
popf
mov
cmp
test
add
fimull
dec
sti
pop
rolb
mov
xor
sbbb
push
mov
lret
mov
pop
lods
lahf
aas
lods
fists
test
or
aaa
hlt
inc
adc
sub
jnp
cmpb
movntps
add
in
or
fstps
loop
fs
lods
or
rorl
xchg
mov
push
loop
lret
inc
cmp
test
adc
inc
fiadds
dec
mov
dec
andb
fs
movsb
xor
cmp
adc
cmp
sub
call
sbb
inc
dec
faddl
cmpsl
adc
jg
scas
add
and
mov
push
pop
sbb
xor
std
push
jg
push
jae
daa
xchg
outsl
stc
push
stos
cli
das
stc
in
nop
push
out
test
pop
iret
andb
addb
pop
jecxz
dec
scas
add
xlat
push
jbe
sub
cmp
lcall
cmp
test
dec
pop
stos
jae
jecxz
jo
and
sarb
out
cmp
pushf
jle
xchg
fld
in
inc
push
mov
or
cmpb
or
fsubrs
es
mov
or
sbb
test
data16
lds
mov
pop
sti
mov
and
pop
adc
add
int3
xchg
pop
repz
jno
inc
fwait
in
and
in
xchg
or
jge
mov
pop
mov
test
mov
outsl
cmp
std
adc
lds
testb
and
fisubs
es
and
xchg
aas
into
imul
add
js
test
outsl
push
xchg
cmp
xchg
cmpsb
cmpsb
in
cmpsb
fldenv
mov
mov
pop
push
jmp
xlat
das
lock
cmc
jge
pop
gs
jo
sbb
or
xchg
int3
jbe
jo
lcall
fisttpll
cmpb
leave
cs
push
aaa
sahf
push
xchg
inc
dec
in
dec
loopne
daa
xlat
inc
push
lcall
jp
dec
fstp
idivb
shlb
and
lea
pop
test
sub
jl
mov
and
imul
push
dec
dec
mov
psubd
cwtl
les
push
xor
pop
popf
aad
sbbl
leave
jmp
pop
xchg
sub
xchg
repnz
and
loop
adc
jb
mov
insb
sub
jle
in
movl
add
mov
mov
pop
pop
ljmp
pop
out
sar
in
loop
dec
mov
outsl
std
out
pop
popf
roll
xor
test
mov
xchg
int
jnp
pusha
das
mov
stos
fstpt
mov
or
andl
fildll
push
out
out
fbld
testb
clc
popa
add
jl
into
mov
les
cld
test
jns
in
jb
or
add
out
hlt
pop
sub
jecxz
repnz
dec
and
icebp
nop
push
or
mov
push
xchg
mov
vorpd
jle
into
test
inc
push
push
scas
or
pop
fs
or
sti
mov
mov
and
push
outsl
stos
lcall
iret
popl
lret
and
jnp
jb
lret
scas
lcall
sarb
push
leave
jbe
cs
enter
dec
imul
mov
clc
cmp
mov
mov
mov
adc
and
in
push
loope
rcrl
and
inc
jg
cmp
mov
jb
insl
loope
add
jp
cmp
lods
jg
mov
mov
call
cmp
pusha
in
pop
paddq
shl
out
outsb
jne
push
pop
cs
jae
out
or
add
xchg
jno
jns
sub
push
movsb
pop
test
jo
xor
pop
shll
pop
mov
ficompl
adc
fbld
cmp
pop
lock
and
mov
jae
popa
lahf
popa
lret
dec
cmpsb
popf
lahf
pop
cmc
dec
jl
andl
cmp
jmp
loopne
das
test
push
out
mov
fisttpll
loope
into
pop
data16
adc
movsl
subl
push
lea
aaa
stos
lods
dec
in
pop
jns
sbb
test
imul
insb
rcl
mov
jle
jbe
jmp
repz
test
sbb
xchg
rcll
cmp
cs
sbb
dec
fstpl
das
popa
push
out
xor
or
mov
clc
lock
jp
sbb
sarb
push
dec
inc
dec
adc
add
jp
sbb
sbb
aas
fsubr
out
jbe
add
sysret
or
stos
shlb
push
cmpsb
cmp
loopne
and
jl
cs
dec
mov
shrb
and
daa
pop
cmpsl
les
push
stc
or
mov
not
sbb
int
aam
iret
dec
movsb
stos
xor
pop
jle
jnp
test
jb
mov
adc
sub
and
lret
fwait
dec
add
add
nop
mov
pop
leave
and
cmp
daa
fdiv
sbbl
mov
test
mov
mov
das
std
and
push
cmp
faddl
notl
mov
xchg
flds
imul
add
sbb
fucomp
adc
cmpsb
sti
mov
jb
call
mov
out
pop
and
rcrb
subb
and
fbld
stos
adc
pushf
sbb
out
loope
xchg
clc
stos
rcll
fcompl
push
mov
adc
inc
jns
add
xor
jg
mov
aad
jbe
cmp
cmp
fidivrl
dec
rolb
xchg
pop
pop
aam
mov
jmp
scas
add
imul
push
sub
sub
into
loopne
add
addr16
sbb
or
imulb
mov
sarl
fmul
or
cmc
push
sbb
das
loope
int3
cmp
pop
stc
and
jo
rol
dec
pop
xor
inc
jmp
popf
je
xchg
rcl
push
push
push
nop
mov
dec
mov
xor
dec
lods
gs
cmp
pushf
push
and
out
and
inc
or
lret
adc
or
inc
add
xchg
leave
sub
jnp
pop
push
loopne
add
and
cmc
adc
sbb
jns
rorb
xor
pop
enter
jae
sahf
lods
dec
fildl
imul
clc
fistpl
ljmp
sbb
xor
cmp
adc
or
test
je
or
add
push
xchg
xchg
add
pop
fcmovb
pop
dec
ret
jno
mov
clc
add
cmp
shll
inc
xor
iret
mov
sub
cwtl
adc
xor
adc
ror
test
sub
pop
lret
call
xchg
or
stc
out
sub
out
push
inc
insb
pushf
out
scas
mov
fildl
sbb
xchg
das
les
cmp
sub
push
xchg
xor
push
lods
and
dec
stc
outsb
sub
dec
mov
in
mov
fwait
jbe
or
loop
jnp
mov
or
sub
or
push
inc
test
fwait
div
xchg
aas
adc
pop
das
test
sub
pop
pop
add
imul
jae
mov
sar
inc
int3
mov
inc
les
xor
xorl
out
xor
sub
fcmovnb
fidivl
inc
int
int
popa
sahf
pop
jns
xchg
hlt
jecxz
sti
mov
sub
mov
in
xlat
xor
mov
mov
lcall
dec
lahf
int3
mov
mov
and
or
fnstcw
pop
push
aaa
or
orl
sbb
adc
push
cld
xchg
dec
jp
adc
mov
xchg
mov
push
lds
pop
in
nop
aaa
punpcklbw
pop
lahf
lds
fists
outsb
inc
adc
push
js
fcmovnbe
dec
mulb
sahf
xchg
out
jle
loop
adc
push
and
in
pop
sbb
add
jae
xchg
mov
ret
test
push
fwait
jbe
and
xor
mov
cmp
fsub
daa
inc
insl
jecxz
cmc
call
jae
or
cmp
sbb
mov
lock
pop
push
or
adc
rcr
popf
ljmp
dec
mov
pusha
out
rcr
add
or
mov
pop
test
insb
pop
aaa
pop
and
mov
sbb
and
into
cltd
mov
into
or
loop
fsubrs
cmp
mov
stc
lods
cmp
and
sbb
mov
sbb
out
push
aas
gs
sub
cmpsb
lock
cmp
lods
test
test
in
pop
sarb
les
fisttpll
or
mov
test
mov
iret
int3
dec
sbb
movsl
cmp
mov
fistpll
jne
sbb
arpl
sbb
mov
lahf
data16
xor
jle
clc
fimull
and
adc
icebp
fs
xchg
and
xlat
push
rolb
sbb
add
lahf
jno
add
lcall
inc
rclb
lds
les
push
sarl
xor
inc
sub
cli
arpl
cmp
std
and
add
test
mov
pop
lret
sub
and
pop
loop
or
mov
andb
mov
sub
cmp
or
or
or
lods
sub
mov
inc
mov
mov
add
imul
sub
bound
xor
dec
sarb
inc
inc
xchg
sarb
inc
lahf
icebp
fcoml
mov
decl
shlb
repnz
sarl
pop
and
sbb
ret
mov
ret
gs
inc
cmc
push
sbb
cld
loope
jge
dec
rcrl
lahf
mov
adc
cmpsb
xor
dec
stc
cmp
imul
adc
xor
popf
cmp
pop
sub
shll
lods
testl
aad
lock
push
jmp
fsubrs
xor
xchg
add
lcall
jo
out
cmp
or
test
fldenv
movsb
pop
dec
inc
dec
paddusw
les
cld
nop
push
insl
push
ficoms
ret
clc
in
in
mov
in
imul
loope
orl
add
loopne
jg
dec
loopne
test
pop
mov
rcrb
mov
pop
pop
add
sbb
sub
adc
pop
dec
xchg
adc
mov
sbb
in
pop
decl
fucom
adc
popf
jns
aam
sbb
sbbb
jb
push
enter
sub
jns
jo
mov
stos
nop
mov
sbb
lahf
ss
fneni(8087
mov
in
cld
adc
xchg
gs
add
xor
aam
and
lahf
jle
aas
nop
clc
jae
pop
daa
stos
jle
sub
and
in
mov
mov
mov
pop
and
shl
inc
hlt
jns
jno
aaa
stc
cmpl
pushw
or
das
inc
fmuls
xor
jnp
lea
jo
aas
stc
xchg
cld
imul
inc
scas
lods
fwait
jns
sahf
ljmp
ret
pop
stos
sub
pop
jb
arpl
adc
movsb
inc
aad
adc
jae
push
lods
xchg
iret
es
outsl
jg
fdivs
xor
or
sub
adc
dec
xchg
jmp
sbb
pop
dec
sub
mov
xchg
jge
adc
sbb
fdivl
test
mov
adc
mov
leave
call
das
push
mov
mov
loopne
sbbl
jnp
dec
ret
sbbb
pop
xchg
js
mov
dec
mov
cmp
jg
daa
into
lret
adc
jns
mov
andl
cs
jne
jo
mov
jno
add
fstps
arpl
push
scas
aam
test
addr16
sub
scas
mov
roll
and
cwtl
lock
js
sarl
movsb
pop
inc
or
xchg
mov
xor
stos
jmp
mov
or
in
xchg
jns
cmp
dec
mov
inc
test
movsl
rcrb
adc
xor
jbe
mov
xchg
sbb
fidivs
mov
pop
mov
xchg
mov
pop
cs
imul
mov
or
les
mov
pop
xchg
add
xor
clc
movsb
cs
sbb
iret
mov
or
lret
sbb
inc
or
aaa
inc
jbe
mov
and
loope
pop
popl
dec
jg
lret
jnp
inc
and
out
or
cltd
insb
pop
rcrb
mov
test
out
sahf
cwtl
push
out
mov
xor
inc
and
jp
or
and
cwtl
loope
mov
sti
out
dec
clc
cltd
std
sbb
sub
lods
mov
lahf
xchg
fdivrl
notl
or
loop
lock
ds
adc
sub
iret
jne
faddl
out
pop
shl
inc
xchg
push
rolb
jo
das
test
inc
inc
xor
add
cmp
mov
sti
lods
gs
sub
sbb
bound
stos
sbb
mov
jle
scas
add
out
jge
cmpb
mov
push
sub
jge
lahf
mov
lea
out
hlt
adc
xchg
xor
push
adc
arpl
xchg
mov
and
stc
pop
int3
xor
mov
mov
push
and
jecxz
sar
pop
xchg
iret
cmp
gs
inc
or
fcomip
and
int
gs
loope
test
divb
jle
lcall
add
out
push
test
sub
adc
mov
inc
cmp
mov
test
orl
lods
jns
pop
sbb
pop
outsb
subb
popf
or
adc
push
mov
into
dec
daa
icebp
pop
nop
push
pop
test
in
leave
xor
mov
in
mov
out
ficompl
jo
data16
out
xlat
sbb
sub
test
or
out
sbb
push
out
inc
jae
daa
pop
ss
mov
cmp
adcl
cmp
scas
mov
pop
stos
jmp
pop
cmp
pop
add
or
call
lret
cmp
dec
int3
neg
mov
mov
add
adc
in
push
mov
mov
mov
roll
adc
cltd
icebp
popf
mov
push
lds
sbb
and
lcall
loopne
lods
lahf
mov
pop
rol
ja
add
jmp
mov
adc
outsb
mulb
mov
aad
cmp
sbb
push
hlt
jle
jb
outsl
int
sbb
or
and
mov
in
lret
ja
xchg
mov
pop
mov
mov
jns
aad
push
cmp
or
inc
out
sbbb
pop
aas
and
lret
dec
imul
test
inc
in
cmp
mov
repnz
sub
fisttpl
xchg
repnz
pop
insb
xor
gs
mov
ss
addb
cmp
sub
pop
cmpsl
mov
push
mov
pusha
pop
leave
sbb
mov
pusha
iret
push
mov
frstor
popf
lods
in
in
nop
mov
dec
dec
cld
pusha
adc
je
adc
loopne
push
jge
pmaxub
pop
or
imull
mov
out
es
sbb
leave
or
shrl
xorl
rorl
aaa
cmp
int
sbb
dec
cli
outsl
push
dec
ficompl
jnp
cld
fs
xchg
test
out
jp
jecxz
cmpsl
push
lock
lea
adc
nop
jl
repnz
jns
xchg
adc
xchg
mov
fisttpll
jb
sub
cmp
bound
repnz
inc
or
add
imul
and
sbb
or
mov
mov
sbb
and
ret
in
lods
repnz
cmp
xchg
in
fistpl
in
out
call
pop
mov
adc
jmp
cmp
mov
cmpsl
loop
xchg
jne
mov
lret
lods
aas
xor
jo
arpl
test
dec
jne
cs
ja
in
js
test
aaa
xor
aam
jnp
jmp
sub
jae
pop
cmpsb
add
gs
enter
arpl
std
sbb
fs
or
pushf
lds
jp
test
sbb
subl
sahf
out
in
sbb
dec
sub
sub
stc
inc
roll
mov
out
add
sub
pop
xlat
jb
dec
nop
mov
inc
xchg
pop
cs
push
cmp
bound
ret
mov
dec
push
test
sti
inc
push
mov
add
xor
mov
icebp
xchg
push
dec
scas
mov
or
push
loope
pop
jmp
mov
xchg
sub
add
dec
dec
pusha
icebp
mov
faddp
xchg
push
mov
aam
jo
std
gs
in
mov
jne
divl
mov
mov
cmc
lds
stos
push
int3
stos
sub
push
push
xchg
in
hlt
fsts
ss
inc
fldcw
movsb
sbb
ljmp
js
testl
cltd
rorb
enter
jbe
and
sub
icebp
mov
adc
inc
cmp
in
cltd
push
sahf
and
mov
ja
xchg
ss
nop
bound
sub
pop
mov
jmp
hlt
lahf
dec
and
jno
aam
aaa
outsb
insb
cmp
sti
dec
xor
test
movsl
aas
aam
jb
idivb
jne
je
ret
pop
mov
push
rolb
js
adc
icebp
std
push
mov
jp
mov
loop
scas
clc
call
std
mov
xchg
or
or
push
pop
and
cwtl
out
or
add
xor
out
imul
lods
dec
ficomps
loope
ret
gs
xchg
sbb
fisubs
mov
out
pop
scas
cmp
xchg
in
pop
mov
xchg
repnz
sub
push
dec
push
or
xlat
pushf
inc
or
test
and
jbe
adc
inc
push
in
insb
cmpl
inc
or
loop
xor
sub
in
add
scas
ret
inc
mov
adc
es
cwtl
add
shlb
ds
xor
push
fsincos
mov
lcall
into
push
lcall
lea
fcmove
and
test
mov
add
mov
data16
shl
mov
pop
fnsave
mov
xchg
xchg
sbb
mov
add
lock
insl
mov
jnp
lret
imul
mov
adc
popa
stc
pop
jle
xor
adc
lock
test
cmpsl
fstpl
jl
lock
lods
cltd
jnp
insl
pop
test
xchg
nop
popf
mov
xchg
pushf
push
inc
scas
push
xor
sub
divl
jmp
dec
fisubs
jmp
out
test
std
lret
mov
into
lcall
imul
xchg
push
in
mov
and
ret
xor
jno
bound
sbb
sbb
dec
sub
cld
loope
cmpsl
stos
xor
lock
ss
cmp
insb
xor
gs
and
xchg
test
mov
mov
sbb
pop
add
or
jmp
imul
or
mov
loopne
jp
push
xor
loope
push
pop
xor
mov
stos
cmc
pop
idivb
cmp
sbb
jmp
cmp
lea
ret
mov
aaa
insl
mov
pop
jns
jnp
cld
lret
mov
and
jae
pusha
orb
xchg
test
stos
das
psrlw
cld
mov
fwait
and
test
xor
xchg
fcoms
shl
es
mov
add
shll
and
cmc
inc
sbb
shl
push
insl
push
push
add
mov
or
dec
jmp
jle
and
inc
rcr
inc
cmovbe
sbb
sub
mov
jmp
mov
dec
sub
pop
repnz
jle
cld
push
and
clc
clc
in
sbb
push
das
loopne
cmp
add
cmp
stos
lret
add
in
cmc
adc
arpl
pop
mov
mov
ja
inc
push
in
out
repnz
das
shrb
mov
lea
dec
hlt
sbb
idiv
xor
or
aam
mov
inc
mov
xor
mov
jns
pop
push
or
push
scas
fnstcw
add
adc
je
es
fsubrs
aad
xchg
shl
xor
adc
inc
mov
lret
lods
fwait
mov
out
int3
adc
pop
icebp
and
clc
test
sub
orl
aam
mov
adc
out
ret
ja
inc
lds
jge
cli
add
push
dec
pop
mov
call
dec
scas
push
lock
sub
sti
bound
sub
mov
aad
mov
mov
mov
gs
or
or
mov
mov
mov
mov
test
daa
es
or
pusha
sbb
sub
push
mov
push
xor
fildl
cmp
cmp
lret
sbb
dec
push
fs
push
inc
dec
or
shlb
jbe
sub
cltd
mov
clc
sbb
cmp
fcoml
mov
lds
imul
mov
clc
add
call
fcompp
das
push
lahf
mov
add
inc
idivb
scas
inc
sbb
mov
data16
dec
insl
jns
xor
lcall
ficoml
sbb
stc
fidivs
pusha
xorb
aaa
sub
push
adc
and
and
fiaddl
xchg
fcomps
imul
lahf
and
sti
dec
pusha
pop
leave
ja
jne
cmp
aam
stos
xor
or
roll
or
cld
add
sti
push
cwtl
cmp
stos
sahf
popf
xor
in
ret
aaa
cli
cmp
mov
xchg
jo
sbb
cs
xor
imul
loope
add
ss
pop
loope
lahf
xor
scas
bound
ds
aas
add
mov
pop
and
cwtl
xchg
dec
iret
out
push
inc
inc
dec
aas
outsb
arpl
inc
in
xchg
sub
fwait
std
xor
push
daa
and
sahf
pushw
jmp
adc
jl
mov
ffreep
daa
cwtl
adc
call
adc
inc
dec
push
cmp
enter
scas
xchg
inc
xchg
fmuls
sahf
sub
push
aam
imul
test
mov
mov
enter
xchg
adc
mov
ficomps
popa
sub
sarl
cwtl
rclb
les
mov
dec
add
fdivs
stos
mov
stos
or
test
test
fcompl
xchg
shl
sub
jecxz
lahf
jo
jno
call
push
jp
or
xchg
jae
mov
int
push
and
inc
xchg
push
or
jge
sbb
clc
imul
jle
fucompp
cmp
add
daa
lds
dec
xor
mov
inc
stos
dec
push
loop
inc
xchg
cli
scas
insb
out
xor
call
add
filds
ljmp
jle
popf
insl
cmp
popa
jne
das
cmpsl
mov
sbb
jp
into
out
clc
cmpsl
scas
neg
sub
cmc
mov
popa
fcomps
mov
ljmp
cmc
mov
and
pop
push
inc
or
popa
sub
stos
ret
mov
inc
mov
mov
xchg
lods
test
in
mov
std
out
mov
out
cmp
lret
xor
jne
xor
popa
xchg
fcmovu
sub
je
js
inc
mov
mull
ds
pop
inc
ret
call
jge
inc
in
xchg
lds
stos
pop
iret
frstpm(287
mov
leave
into
insb
adc
and
mov
cltd
paddw
xor
inc
mov
test
es
leave
inc
int
sub
outsb
mov
mov
or
add
test
push
cmp
push
inc
das
or
imull
insl
adc
out
bound
push
mov
daa
jnp
cmc
in
jg
ljmp
lcall
inc
xchg
loop
xor
int
test
xchg
ret
fnstenv
mov
adc
mov
fistps
jp
lahf
loope
es
add
jne
mov
rclb
cmpsb
insl
arpl
pushf
sbbb
and
pop
mov
cmp
add
mov
cmp
cltd
and
out
adc
movsb
add
xchg
stos
aas
and
loopne
dec
ss
adc
add
test
jmp
addr16
inc
jmp
lcall
rcrb
cli
add
inc
dec
cmpsl
ret
mov
ret
sti
push
xor
push
mov
lret
mov
test
push
imul
jne
pop
push
jns
adc
in
inc
mov
jmp
pop
clc
push
mov
dec
mov
mov
clc
aad
aad
outsb
mov
and
cld
inc
jo
xchg
enter
cwtl
mov
les
xchg
cmp
loope
loop
stos
clc
xor
or
push
outsb
rcrb
push
insl
not
xchg
push
notl
jecxz
mov
mov
sbbb
shl
shll
inc
sbb
jg
xor
cli
mov
xchg
push
sub
clc
clc
stos
in
push
andb
lods
loop
mov
ret
push
xchg
xor
adc
lahf
xlat
dec
js
push
roll
jb
adc
mov
fs
mov
ljmp
cmp
clc
pop
inc
pop
jno
iret
mov
mov
or
lds
imul
jge
and
dec
add
ljmp
pop
or
mov
jmp
inc
push
lret
fwait
sbb
dec
inc
dec
insb
jb
inc
fwait
jl
sti
imul
test
nop
testb
movsb
lock
sbb
in
jmp
sub
mov
in
stc
icebp
push
imul
jns
mov
inc
pushf
fildl
jmp
mov
loop
shll
sbb
jge
cmp
rol
dec
sbb
xor
pop
int3
cwtl
sub
dec
ss
aaa
or
cmp
push
jp
push
iret
ror
or
pop
into
test
lahf
xor
mov
cli
mov
mov
mov
loopne
cmp
out
test
pop
and
test
repnz
push
ds
mov
dec
cmpsb
repz
or
xchg
lcall
icebp
pusha
push
inc
sbb
stc
pop
or
fsts
inc
mov
int
pop
xchg
movsl
and
adc
pop
xor
gs
dec
lcall
push
push
sti
xor
pop
push
inc
fprem1
fidivrl
loope
arpl
push
push
add
lods
jbe
xchg
sub
bound
shrb
cltd
dec
jmp
lock
addr16
adc
out
push
and
and
add
sbb
dec
sbb
xchg
loopne
mov
stos
cmp
jle
cmp
mov
adc
mov
hlt
fiadds
and
cmp
add
int
fwait
add
inc
loopne
out
cmp
or
pop
cmp
iret
test
add
fnsave
dec
sub
xor
or
into
xchg
lock
xchg
xchg
dec
cmpsl
dec
shll
jne
sbb
adc
adc
jne
push
sbb
mov
sahf
out
jg
push
push
mov
mov
jae,pt
or
pop
out
adc
sub
aad
mov
sub
test
imul
dec
jo
jmp
adc
jmp
test
mov
xchg
pop
add
lahf
icebp
out
pop
mov
sub
lods
daa
into
test
filds
loope
movsl
rolb
xor
in
sbb
dec
xchg
xor
das
lods
sub
inc
cwtl
movsl
pushf
lcall
mov
sbb
outsl
adc
lret
dec
sub
adc
and
inc
ficomps
testb
jbe
sbb
leave
stos
movsb
ljmp
adc
jnp
xor
bnd
jle
xchg
shrb
cmp
popa
cmp
cwtl
cmp
outsb
psubw
add
and
cmp
adc
pop
add
lods
jbe
push
pop
mov
jae
adc
lcall
cld
pusha
leave
js
outsb
pop
cmp
sub
in
repnz
cltd
mov
lcall
jle
or
aad
push
or
push
addr16
and
sti
test
mov
push
in
pop
shlb
cmp
jl
out
stos
les
push
dec
adc
push
leave
sbb
xchg
cmp
test
and
dec
add
sub
xchg
int3
mov
stos
ror
aad
cmpl
mov
cmp
iret
mov
inc
loop
and
sbb
pop
or
cli
loope
stos
pop
add
out
xor
lea
out
aaa
push
les
cmp
add
or
add
sarl
cld
loopne
mov
add
push
xchg
mov
popa
and
xchg
fcom
jns
ja
sbb
lods
mov
cs
movsl
call
leave
dec
dec
cmpsb
cltd
xor
jbe
cltd
sbb
popa
faddl
lock
xlat
sub
inc
xchg
cmp
adc
shlb
mov
sbb
or
cmp
sbb
repz
or
dec
call
leave
aad
lds
les
push
cmp
dec
in
fs
mov
xchg
arpl
mov
xchg
cmp
xlat
lock
dec
push
mov
in
or
push
adc
sbb
out
sbb
xorb
outsb
mov
ret
jo
nop
loop
dec
icebp
xorb
and
cltd
call
pusha
cmp
mov
mov
cmp
xchg
or
in
lret
rcr
xchg
out
cmp
dec
dec
or
cli
jecxz
xchg
mov
dec
imul
adc
lods
jns
cmp
movsl
pop
cmp
test
dec
enter
mov
push
call
push
insb
fidivrs
mov
adc
icebp
pop
pushl
mov
cmp
punpcklwd
mov
sbb
cmpsb
inc
ds
shlb
decb
movsl
mov
dec
movsb
int
and
sahf
add
adc
cltd
add
aam
sahf
mov
and
int3
cld
pop
push
mov
in
inc
pop
xchg
or
lret
push
and
je
pop
clc
mov
or
inc
xchg
adc
inc
inc
xor
lret
subl
lret
xor
pusha
jae
shll
fs
and
test
cmp
xor
mov
movsl
loop,pn
es
sub
jae
out
or
cmpsb
push
pusha
push
outsb
dec
mov
xchg
mov
dec
ljmp
mov
jns
int3
or
push
int3
mov
negl
fistps
arpl
scas
adc
pop
loop
lods
xor
loope
adc
ja
push
call
jnp
and
xchg
arpl
pop
ror
mov
outsb
xor
xor
sarl
fisubl
test
jle
repz
cmp
sub
stos
push
adc
pop
loope
fnsave
pop
mov
sub
mov
fs
or
stc
mov
outsb
insl
cmp
lock
mov
mov
lret
dec
inc
mov
push
adc
lcall
pusha
lock
adc
cmp
sub
and
in
push
jecxz
push
test
daa
pop
daa
dec
pop
leave
int3
push
scas
and
inc
xchg
push
jg
xchg
sub
dec
and
out
iret
fs
lret
aas
xor
mov
pushf
xchg
dec
mov
push
pop
scas
dec
push
and
add
add
daa
fldl
mov
aam
popa
adc
or
add
sub
int3
add
inc
mov
xor
scas
lods
adc
push
repz
pop
adc
sub
lcall
sub
sub
sahf
inc
loope
lahf
cltd
jmp
fstpl
mov
mov
cmp
xor
loopne
jle
mov
adc
xor
stc
loope
int
dec
and
repz
fisubrl
popa
jo
cli
in
xor
jo
ficomps
pop
into
pop
pushf
jecxz
shrl
and
mov
mov
dec
pop
mov
xor
mov
jns
fcom
fldl
jns
lea
scas
out
jp
push
mov
int3
xchg
jno
mov
or
and
or
lds
sub
inc
mov
xor
sbb
outsb
push
cmpsl
inc
cmp
lds
inc
cltd
ds
add
popa
cwtl
scas
add
mov
mov
call
insb
xchg
add
and
addr16
push
fcmove
daa
pop
cmp
push
mov
push
mov
adc
stos
cmp
int3
sbb
in
pop
cmp
pop
fisubs
xchg
mov
dec
mov
mov
xchg
mov
movsb
fidivl
cmp
ret
sub
adc
cmp
sub
popa
mov
or
cmp
ja
adc
lods
fists
in
test
mov
lret
cld
xchg
lds
int
dec
and
mov
push
scas
roll
gs
or
push
into
addl
in
repnz
call
data16
inc
aas
push
lods
xor
inc
adc
iret
add
in
test
cmc
iret
test
ret
cmp
in
inc
call
lahf
pushf
sbb
sbb
lea
jl
repz
xchg
lret
jl
stc
dec
mov
pop
add
outsb
imul
inc
inc
out
inc
lret
jl
adc
jl
push
out
lea
fistps
or
fidivrl
out
cmp
das
jnp
clc
lret
insb
call
pushf
inc
adc
scas
in
cmpsl
mov
loope
or
push
mov
inc
mov
mov
pop
lock
xchg
mov
inc
call
add
fs
cmpsb
adc
imul
int
cmp
bound
ja
lret
incl
xor
xorb
push
scas
mov
ljmp
or
in
in
or
loope
mov
sbb
dec
push
pop
test
data16
dec
out
pop
push
cwtl
mov
pop
jecxz
mov
outsl
int3
sub
into
orb
jmp
jnp
push
notl
mov
mov
inc
jb
xlat
cmp
mov
subl
sar
pushf
mov
inc
out
mov
adc
je
jae
sbb
shll
dec
sti
cmp
les
jge
in
sub
inc
add
adc
mov
xchg
shll
test
mov
mov
movsl
aaa
or
mov
pusha
out
movsl
pop
push
ja
rcrb
cmp
aas
sub
xor
jbe
add
fcmove
sub
push
adc
in
mov
lahf
mov
inc
mov
notl
dec
pop
icebp
ret
out
cwtl
mov
inc
mov
pop
inc
call
dec
inc
jle
cmp
fsts
sub
or
loope
fistpl
mov
hlt
out
push
adc
fyl2x
xor
inc
int3
lods
push
mov
out
iret
jnp
mov
or
xchg
imul
pop
cld
mov
add
enter
or
sbb
push
xchg
stos
xchg
hlt
jne
sahf
sahf
in
popa
stos
cmpsb
add
or
fcmovu
dec
mov
lahf
push
mov
sub
or
pop
or
int3
in
cmp
ja
jmp
jmp
hlt
jmp
popa
fdivs
lock
std
cmp
adc
dec
adc
jle
fndisi(8087
xlat
daa
imul
add
jns
ja
nop
inc
cltd
lret
ljmp
adc
or
je
add
pop
dec
or
push
ljmp
xchg
hlt
xchg
sub
sub
sub
jge
jecxz
push
adc
jns
xchg
repz
pop
das
add
je
call
clc
xchg
in
loopne
int3
cmp
dec
in
add
cmp
mov
push
push
lods
mov
cmp
and
xlat
outsb
cmp
mov
push
scas
xor
dec
xchg
daa
dec
push
xchg
mov
outsb
and
bound
dec
add
xchg
xchg
add
and
mov
mov
xor
pmovmskb
mov
push
stos
daa
pop
imulb
sub
sub
xor
cli
or
inc
or
cmp
pop
pop
shr
in
mov
test
outsl
cmpsb
inc
cli
push
pop
mov
xchg
loop
mov
push
mov
push
orb
add
lret
loop
push
aam
jb
nop
lahf
icebp
add
inc
jne
in
lret
xor
add
std
fwait
dec
pop
xlat
xchg
xchg
jns
loopne
dec
ret
push
fbstp
pushl
aaa
add
jns
pop
pop
pop
loop
fdivrl
ret
sub
outsl
sub
rolb
cmp
xchg
rcrl
xchg
jp
and
adc
lcall
mov
mov
adc
add
push
jge
sbb
push
shrl
stos
pushfw
jge
enter
dec
out
add
inc
mov
js
outsl
mov
cs
insb
scas
inc
push
call
and
xchg
outsl
ret
dec
push
and
dec
rcrl
insl
sbb
arpl
push
xor
mov
mov
adc
addr16
outsl
enter
fld
or
lods
xor
sub
pop
mov
xor
xor
pusha
les
out
push
ja
adc
loopne
mov
mov
in
inc
mov
sub
push
mov
adc
addb
sub
mov
mov
int3
xchg
cld
iret
ljmp
mov
jg
bound
out
bound
jae
cmp
cmp
repz
pop
test
push
pop
sub
xchg
add
insl
test
lret
fcomps
rol
mov
fnstsw
mov
int3
add
fdiv
mov
pop
adc
ret
push
dec
cs
inc
xchg
mov
fwait
jmp
das
in
lret
stos
cmp
imul
mov
data16
xchg
xchg
adc
jl
mov
fistl
test
mov
in
mov
fcomps
dec
xlat
ja
jae
pop
add
mov
les
cmpsl
fidivs
iret
cltd
orl
cmpsb
mov
adc
sbb
testb
pop
dec
std
and
jl
test
andb
ljmp
imul
pop
in
test
or
fst
or
daa
rclb
push
cmp
cmp
push
jae
leave
ret
push
pop
jns
mov
pop
add
cmp
mov
rolb
or
mov
test
ret
into
adc
iret
fnstenv
and
ds
mov
push
pop
pop
clc
sub
repnz
or
jg
mov
cmp
mov
dec
stos
cmp
in
sub
in
jo
and
lcall
xchg
xchg
pop
mov
xor
aas
cld
rcrl
cmp
jne
pop
addl
push
lods
jecxz
out
jo
xlat
and
adc
adc
mov
add
in
pop
lret
lock
stos
call
jl
stos
mov
cmp
sahf
in
mov
test
cmc
idivl
cmpsl
xorb
xor
and
lret
xchg
and
xchg
daa
xchg
and
mov
adc
aaa
in
xchg
pushf
test
clc
lcall
mov
pop
mov
mov
xor
mov
sub
xor
cmp
mov
xor
push
clc
jb
cld
xchg
push
movsl
pop
xchg
hlt
mov
ret
inc
push
jne
xchg
movsl
jg
in
push
test
jle
imul
ljmp
outsb
pop
mov
jmp
fadds
pop
out
fwait
stos
push
mov
je
xchg
ljmp
movb
imul
pushw
xorb
mov
mov
and
cmp
stc
andl
dec
jmp
push
aas
add
mov
sahf
and
bound
dec
movb
lret
mov
lahf
orl
sti
cmpb
dec
dec
inc
mov
mov
jae
or
cltd
adc
loopne
in
clc
adc
cmp
pop
jecxz
sbb
ja
rolb
test
sahf
aam
pmulhw
dec
sbb
and
loop
sbb
sub
clc
push
pop
cltd
mov
outsl
mov
add
loopne
je
mov
xchg
pushf
add
js
inc
out
sete
jmp
aad
mov
ds
lret
loop
add
lcall
sbb
lcall
mov
sbb
std
ret
ret
push
push
push
out
jbe
cs
pop
test
lea
cmp
push
orb
repz
movsl
sbb
sbb
inc
sti
add
decb
fisttps
out
lock
repnz
int3
or
insb
shl
pop
xor
sbb
sub
push
cmc
into
or
sbb
inc
xchg
mov
pop
fisttps
sub
arpl
inc
sbb
or
add
cltd
fcmovnbe
aas
stc
idivb
add
in
lcall
ret
sbb
dec
mov
inc
fscale
fwait
or
lret
out
dec
not
mov
es
in
sub
push
repnz
sub
ret
inc
repz
test
pop
fisttpl
add
mov
in
pop
iret
fptan
pop
daa
sbb
add
cs
outsb
leave
movsl
sti
lock
into
std
cs
add
push
mov
in
arpl
add
adc
xchg
xchg
or
jb
push
mov
sbb
xchg
pop
cs
fs
leave
dec
push
xor
and
mov
mov
aam
mov
imul
sti
orb
xchg
mov
cmpl
fisttpll
lods
out
mov
push
jno
mov
mov
enter
dec
xlat
push
xor
or
lods
aad
adc
jmp
pop
pop
hlt
xchg
js
shlb
push
dec
sbb
nop
loope
and
scas
loope
leave
push
push
pop
faddl
sbb
into
ss
push
sub
rcl
xchg
jecxz
fisttpl
lahf
sbb
imulb
xchg
push
xor
ljmp
es
hlt
and
sub
mov
lods
xor
jne
addb
aad
in
jl
push
jbe
pushf
inc
shlb
cmp
mov
jbe
pop
cmp
xchg
stos
loopne
repnz
xchg
loop
mov
jge
out
xchg
inc
cmpb
fcompl
testb
mov
out
jo
inc
cmp
push
sti
icebp
xlat
sub
push
push
and
sbb
and
out
jae
jne
test
sbb
pop
push
and
cltd
ltr
adc
inc
jae
out
cmp
jg
xchg
push
fcmovu
xchg
dec
testb
jge
fmull
stos
fmul
adc
push
lods
cmp
out
jecxz
jecxz
sbb
cmc
repz
cmp
xor
cltd
cmp
shrb
shl
adc
data16
imul
pop
icebp
call
add
cltd
sbb
or
dec
xchg
and
push
mov
das
scas
pop
sbb
mov
inc
dec
sbbl
test
push
bound
jle
clc
push
pop
xchg
mov
lods
add
inc
jnp
cld
fcmovnu
push
nop
xor
in
into
xor
sti
insb
popf
pop
lea
mov
dec
sbb
jl
xchg
jb
sbb
xor
xor
dec
cmp
lds
aaa
outsb
out
adc
bound
mov
cmp
lret
xchg
jl
sub
sbb
out
fsubrl
aam
dec
pop
jne
and
js
jae
out
dec
dec
and
movsb
test
cmc
test
imul
mov
sub
mov
sbb
lret
fldcw
loope
mov
lods
into
lret
stc
xchg
ret
and
pop
push
out
scas
sbb
call
inc
push
ja
mov
cmpsl
into
fdivs
push
nop
hlt
dec
stos
scas
cmp
mull
jbe
xchg
dec
adc
sarl
and
cwtl
dec
insb
cwtl
inc
mov
mov
push
xchg
gs
add
cmp
fwait
lds
cmp
cmpb
movzbl
and
das
cmp
stos
cmp
inc
adc
icebp
fiaddl
jne
jb
sbb
mov
mov
and
test
stos
push
sbb
imul
mov
rorl
jmp
pop
lcall
cmp
pop
xchg
mov
adcb
ret
mov
or
daa
out
jns
mov
sbb
call
xchg
dec
bound
adc
cmc
pop
addr16
inc
xchg
and
ja
xor
into
lods
std
mov
stos
outsb
push
cmp
mov
xor
fsubrs
enter
jecxz
and
cmpsl
pusha
push
and
pop
fdivs
add
aad
push
sarl
es
ljmp
mov
stc
mov
bound
push
cmp
pop
mov
ret
push
mov
xor
add
adc
adc
stos
outsl
mov
sub
cmp
and
xchg
inc
mov
push
jbe
movsl
in
mov
and
sbb
ds
mov
xchg
popf
mov
xchg
sbb
adc
mov
outsl
out
int3
ja
out
cmp
inc
aaa
dec
clc
xor
ljmp
xchg
mov
fwait
es
repz
add
out
leave
lods
lret
mov
mov
imul
mov
xchg
shr
or
or
dec
adc
or
mov
test
push
int
hlt
std
pcmpgtw
imul
mov
pushf
std
cli
lcall
sub
jp
mov
aam
pop
repz
xor
repz
scas
xchg
popf
mov
mov
stos
fistpll
shll
mov
jne
lock
sbb
push
mov
in
jnp
sbb
cmp
cli
dec
arpl
inc
in
jle
mov
aas
and
adc
aaa
mov
fcom
outsb
stos
dec
cmpl
cmp
sub
inc
xchg
or
mov
pop
jecxz
into
insb
xchg
lcall
cli
sub
mov
jecxz
mov
mov
negl
inc
movsb
lods
aad
ljmp
repnz
aas
sub
mov
lods
xchg
sbb
push
add
cmp
lcall
jae
jecxz
cmp
mov
inc
xchg
shl
sub
jmp
xchg
and
arpl
les
adc
sub
pop
inc
lcall
mov
pop
in
push
mov
and
lahf
dec
lea
lock
jge
cltd
nop
xchg
stos
sbbb
lahf
lock
sbb
mov
call
push
jns
sbb
cli
push
insl
sub
sbb
int3
pop
push
mov
fcmovb
pop
pop
lcall
dec
lock
add
push
loope
xchg
out
lods
pusha
test
push
mov
call
push
shrl
cmp
movsl
push
mov
cmp
inc
loopne
std
in
scas
xor
cmp
rcrl
add
xchg
pop
test
pop
xchg
testb
dec
mov
pop
sbb
xchg
push
push
out
mov
imul
sbb
jno
fistl
jb
xchg
jge
mov
push
add
adc
jge
cmp
cld
push
or
xor
testl
mov
fsubrs
cmp
inc
lcall
sub
mov
scas
cmpsb
sub
sub
std
adc
insl
push
les
pusha
stos
ds
pusha
repnz
cmpl
fcmovnu
sahf
xchg
repz
xchg
icebp
sbb
inc
inc
call
adc
sti
lret
stos
arpl
push
pop
pop
sti
es
add
outsb
pop
or
enter
push
cmp
mov
repnz
mov
xchg
shll
mov
pop
aaa
dec
xchg
mov
insb
push
movsl
mov
jo
imul
dec
cmpsb
push
mov
fcoml
sub
mov
stc
dec
lahf
scas
fwait
mov
add
mov
fnsave
std
icebp
pop
outsb
pop
addl
pop
dec
ljmp
data16
test
mov
mov
sti
sub
in
aas
stc
stc
xchg
sti
pop
adc
hlt
lcall
sub
ret
or
cmpl
cmpsb
into
pushf
das
push
adc
inc
scas
or
stos
divl
fdivrs
loope
nop
sub
clc
adc
adc
in
add
dec
push
fdivr
sub
cmp
aam
and
sbb
or
cmp
inc
jge
in
movsb
and
xchg
inc
xor
push
dec
pop
add
pop
sbb
das
and
cmp
insw
clc
sub
jp
mov
adc
addr16
sbb
scas
cmp
sub
nopl
lds
jmp
push
mov
and
xchg
pop
in
ret
push
mov
cmp
fadd
pusha
add
rorl
and
adc
add
xor
jbe
out
lahf
jns
std
push
lock
jae
inc
pop
and
cmp
inc
sbb
ffree
add
pop
stos
in
xor
pop
das
aam
cmp
or
cli
add
mov
rcll
clc
push
scas
dec
shrb
into
jmp
inc
jl
lret
repz
aam
in
push
mov
data16
jmp
xchg
pushf
cmp
repnz
aaa
jnp
test
mov
add
add
inc
cli
mov
mov
jnp
xchg
ja
mov
sbb
cmpsl
jo
repnz
xchg
sbb
test
push
cmp
mov
inc
and
mov
adc
lret
bound
cwtl
mov
ja
les
jg
and
jne
jns
std
repnz
ja
loopne
xchg
and
insb
dec
adc
jg
sub
std
ror
aaa
pop
add
inc
inc
dec
fwait
mov
shr
mov
inc
mov
add
jp
mov
mov
cmp
ja
lahf
out
fwait
loope
sbb
inc
inc
out
popf
and
mov
cmp
jl
pushf
fisubrs
aam
mov
pop
cmpsb
push
rcl
inc
or
jb
in
incb
rclb
int
mov
mov
int3
lcall
mov
dec
out
xchg
sub
xor
sub
mov
push
push
js
sub
ja
sub
mov
popf
xchg
adc
outsl
mov
in
outsb
addl
pop
data16
or
cmc
fidivs
xchg
mov
loop
jae
test
xor
ljmp
imul
movsb
outsl
adc
push
mov
sub
lods
cmp
neg
xchg
and
or
cli
popa
inc
das
xor
jo
and
jle
in
fmul
flds
push
aam
and
inc
fs
out
xor
sahf
sbb
lods
dec
rorb
xchg
pop
mov
mov
xlat
adc
ret
popa
push
icebp
repz
mov
xor
sbb
subl
fimuls
pop
sbb
jg
mov
or
pop
adc
mov
in
in
adc
cmc
rclb
jge
adc
or
push
test
and
aas
xor
pop
mov
bound
jl
popa
jo
xchg
cmp
mov
jnp
into
repnz
je
sbb
sar
push
pop
jae
es
insb
jecxz
fldt
bound
shlb
xor
push
xchg
aas
sarb
rcrl
jge
ljmp
imul
adc
repz
pop
test
sub
sbb
repz
idivl
ja
test
xor
mov
lcall
fisubrl
jmp
shll
ljmp
ret
inc
movsb
into
mov
pop
cs
outsb
xlat
sbb
int3
mov
insb
lock
repz
fsubl
stos
xor
add
mov
cmp
pop
adc
loop
xchg
inc
das
or
movsl
inc
pop
cmp
lahf
cmp
andb
in
cltd
push
cmc
cmp
aad
add
outsb
sbb
xchg
xlat
xchg
daa
and
out
add
movsl
sbb
pop
add
or
cltd
pop
and
cmp
push
hlt
movsb
rcrl
push
imul
inc
outsl
inc
les
ljmp
sub
sub
je
sarl
jge
mov
mov
mov
les
aad
daa
push
jle
leave
jnp
jl
or
out
adc
pop
mov
in
xchg
pop
push
jno
push
mov
orl
add
arpl
std
pop
push
dec
fwait
cs
in
pop
mov
sbbb
das
dec
std
sarb
jge
nop
in
push
inc
mov
and
jae
cld
ss
add
hlt
jo
je
cmpsb
and
dec
test
jnp
sub
test
sbbl
sbb
mov
imul
jno
mov
or
shlb
adc
cmp
cmp
gs
je
clc
pop
pushf
test
and
cmp
mov
call
lahf
nop
push
iret
push
sub
cwtl
imul
add
hlt
das
mov
add
jmp
sti
dec
aam
scas
divb
lds
xor
jae
push
enter
push
sbb
sahf
xor
pop
lret
or
outsb
jne
xor
cmp
cld
xlat
pop
repz
push
mov
dec
loop
or
mov
sub
loope
fwait
push
add
fisttps
out
xorb
pop
xchg
cld
adc
in
rorl
adc
fistpl
cmp
cli
fisttps
pop
aam
shll
push
or
sbb
xchg
xchg
and
pop
lods
clc
mov
jp
inc
mov
xor
or
jb
daa
xor
mov
fistl
pop
sbb
in
mov
dec
adc
jmp
xchg
fdivrl
repnz
pop
push
lds
cmp
stc
xor
or
jmp
push
inc
jbe
mov
into
lods
jo
aam
aas
xor
mov
mov
aad
sbb
xchg
xchg
outsl
pop
adc
add
insb
iret
xchg
dec
rorb
jnp
push
cwtl
loope
push
ficoml
sti
dec
push
icebp
aaa
add
hlt
popa
pop
rcrl
adc
mov
dec
aas
out
push
imul
mov
adc
icebp
dec
loopne
testb
mov
xor
aam
adc
shrl
das
mov
lea
andb
inc
or
cmovle
int
jae
data16
mov
jbe
out
inc
imul
adc
sbb
pop
cs
popf
and
imul
jg
pop
jno
scas
sti
lock
or
shl
leave
mov
xor
adc
jle
in
or
arpl
mov
or
into
push
jo
jns
mov
pusha
and
mov
lea
and
into
jg
push
faddl
int
jnp
push
mov
call
lods
lcall
fcmovnbe
iret
jg
xchg
fsubs
je
in
sti
test
mov
sahf
stos
scas
outsb
or
push
push
or
fcmovnb
ficomps
pop
jmp
add
andl
add
ret
call
cwtl
cmp
jnp
jnp
dec
dec
ss
stos
cs
pop
test
jmp
mov
scas
daa
pop
sbbl
repz
mov
xor
push
in
add
into
push
or
sti
rcrl
inc
ret
test
jbe
mov
mov
add
cmp
sub
sbb
push
push
ja
stc
or
stc
in
sub
fists
xchg
test
rorb
dec
outsb
test
out
repz
xor
pusha
sub
dec
add
mov
push
push
pop
sbb
mov
les
dec
push
out
leave
cmpsb
mov
in
push
hlt
mov
fstl
adc
pop
nop
pop
jmp
pop
sub
pusha
ret
jnp
stos
inc
inc
inc
test
jne
cmp
mov
icebp
test
pop
cmc
push
pop
scas
int3
enter
adc
jecxz
push
lahf
cmc
fistps
fcmovb
add
add
cmp
sub
jns
add
pop
dec
inc
test
mov
mov
or
adc
sub
mov
into
cmpb
lcall
jb
cmpl
pop
mov
rcrl
loop
dec
jb
icebp
inc
xchg
push
mov
pop
popf
and
xor
inc
imul
leave
jno
xor
inc
add
enter
adc
mov
stos
add
push
cs
sbb
movsl
sbb
scas
add
xor
popa
or
cld
stos
dec
mov
dec
mov
nop
lcall
mov
sub
xor
test
dec
aaa
add
dec
mov
into
mov
or
mov
adc
ljmp
mov
sub
jo
out
dec
mov
xchg
mov
leave
xchg
clc
cmp
add
call
into
mov
movsb
xchg
inc
push
and
test
data16
loopne
xchg
in
movsb
sbb
and
add
cmp
add
sbb
mov
test
mov
mov
ja
inc
mov
fidivrl
pushl
outsb
lcall
xchg
in
cmp
popa
mov
cmp
jbe
mov
push
bound
jbe
push
and
popf
inc
nop
jecxz
rol
xchg
pop
in
mov
int
and
sbb
adc
lea
loope
stos
adc
add
dec
inc
test
xchg
push
xchg
xor
imul
add
fldl
aam
ss
rcrb
paddd
mov
pusha
ds
jne
or
push
sub
mov
inc
insb
cmpsb
subb
cmpsl
ja
icebp
sbb
mov
insb
add
mov
fsubrp
jo
imul
loope
jmp
dec
fidivl
push
mov
imul
iret
das
ljmp
fwait
mov
push
jg
mov
pop
cmp
sbb
or
mov
mov
dec
pop
lods
push
jne
std
mov
dec
ret
js
je
in
xchg
insb
push
add
std
popf
in
stos
shl
fwait
in
loope
insb
jo
adc
scas
mov
mov
mov
inc
mov
sbb
daa
js
xlat
outsb
outsl
dec
shl
mov
add
mov
sbb
repz
dec
loope
xchg
jno
xchg
call
add
in
sarl
jmp
mov
aad
mov
xor
dec
jnp
mov
adc
gs
xchg
fdivrs
dec
xchg
inc
sbb
jnp
xchg
je
inc
int
fcmovbe
lahf
mov
or
mov
leave
sub
sbb
adc
cmp
out
sub
adc
jae
ds
jno
sub
clc
mov
xor
out
mov
pop
stos
int3
sbb
fisubrl
aas
fs
rcll
add
jecxz
jb
xchg
notb
das
rcrl
mov
xchg
sbb
xor
xchg
inc
xchg
and
gs
dec
pop
ret
sub
sbb
dec
push
inc
stos
cmc
sbb
imul
cld
outsl
loopne
lds
xchg
xchg
pop
arpl
dec
adc
ja
xor
aad
stos
xchg
xlat
fidivrs
repz
sub
in
jmp
inc
pop
jge
xor
dec
mov
add
clc
sbb
jecxz
adc
mov
mov
shrl
pop
or
push
enter
lds
xor
pop
gs
jp
push
jp
arpl
jmp
sub
int3
jne
dec
aaa
pop
iret
add
jb
mov
orb
or
mov
aaa
scas
cmc
fdivrs
jg
mov
or
mov
stos
repz
fs
movsl
jae
add
mov
incb
jb
lea
sub
xchg
cmp
mov
xor
jl
shll
pusha
dec
jecxz
jp
adc
scas
mov
add
mov
jne
aam
lods
dec
sub
outsl
outsl
inc
push
sti
mov
cmc
jns
cmp
cmpsb
and
mov
adc
insb
lret
out
in
xchg
mov
ret
inc
adc
cmpsb
out
ret
iret
add
pop
inc
pusha
fmull
add
aad
mov
ja
ret
dec
cli
clc
sub
sbb
push
ret
movsl
cmp
out
push
aam
push
jbe
lret
outsb
mov
inc
jo
add
pop
jg
push
pop
leave
sub
xor
loop
dec
fsubs
outsb
ja
dec
inc
lret
cld
xchg
and
push
adc
adc
inc
mov
add
jp
mov
jae
xor
or
les
pop
loope
mov
mov
fmull
stc
jg
mov
mov
jno
movb
testl
not
jle
mov
dec
pusha
mov
sub
bound
aam
out
std
sub
sub
fxch
mov
xor
mov
leave
jae
shlb
mov
dec
roll
adcl
lret
mov
incb
dec
sti
rclb
add
outsl
dec
dec
jp
mov
adc
sub
mov
out
fs
add
sub
adcb
add
fucomi
and
stc
xor
xlat
xchg
mov
or
incb
mov
dec
imul
or
sub
je
cmpsb
mov
and
mov
lcall
aad
adc
adc
xlat
cld
call
mov
push
mov
push
loope
xor
sbb
jecxz
dec
inc
rorl
mov
mov
pop
imul
nop
inc
lea
rorl
stc
push
xlat
and
mov
xchg
or
or
ror
inc
pop
mov
iret
jecxz
xchg
sbb
sub
pop
mov
cltd
cmp
fwait
mov
sbb
xchg
repz
lea
add
stc
push
out
sub
push
ljmp
and
mov
sti
mov
fmulp
lds
dec
xchg
mov
ja
popf
xlat
cmp
hlt
loopne
sarl
cmp
jl
mov
fs
mov
mov
cmp
pop
mov
lahf
and
jecxz
cmp
fwait
loopne
adc
adc
and
xchg
sub
lret
hlt
scas
mov
jecxz
sbb
gs
jae
xor
xchg
fmuls
mov
sub
push
insl
cmovns
das
rolb
aas
cs
fwait
jp
fiadds
loopne
aad
loop,pn
addb
test
stos
jg
jne
jo
ds
push
pop
aam
aaa
or
in
iret
aas
test
loop
mov
fildl
mov
scas
mov
pop
sub
test
add
rcl
pop
xlat
mov
scas
rolb
pop
jns
mov
mov
divl
aam
push
lock
jae
mov
jp
addr16
int3
dec
lret
inc
popa
imul
imul
jo
ljmp
dec
jns
jns
mov
sbb
outsb
lock
popa
lock
push
cmc
add
inc
push
lods
daa
cld
sub
scas
adc
dec
gs
das
int
call
jg
inc
aad
loop
pusha
add
xchg
andl
sub
push
mov
mov
cmp
add
ret
pop
pop
xchg
negb
mov
xchg
sbb
mov
xchg
cmc
push
or
xor
repnz
inc
fcomps
lret
test
push
stos
outsl
dec
push
jne
cmp
mov
mov
negb
movsb
rcrl
rorb
lods
pop
pop
cmpsl
aaa
pop
and
popf
and
or
int
lods
mov
jno
mov
int
out
fs
or
addr16
mov
pusha
mov
je
mov
mov
jb
dec
xor
pop
mov
testl
mulb
rclb
pushf
jno
pop
filds
adc
xlat
jo
fucom
push
loopne
std
or
and
sub
mov
push
movsb
push
dec
cmpsl
fadds
cmp
in
subb
sub
lea
clc
mov
push
mov
mov
fisttpl
mov
jmp
ret
nop
pop
add
adc
insl
clc
incl
hlt
or
fnstsw
mov
adc
icebp
cmp
movsl
movq
mov
aad
mov
out
lock
sarl
clc
sub
mov
jbe
rcrl
sbb
jb
jne
xchg
scas
fwait
pop
sarl
out
and
inc
leave
pusha
lods
scas
outsb
add
rorl
das
lcall
xchg
sbb
pop
orl
outsl
scas
rcr
inc
jbe
mov
mov
xchg
pop
sahf
loope
xor
push
fmuls
pushf
scas
or
mov
and
xor
les
lods
fcmovnb
out
mov
out
aas
scas
fcmove
or
dec
int3
mov
fstpt
adc
js
hlt
push
fsubrl
out
nop
gs
add
xor
sub
adcb
and
add
stc
sbb
mov
mov
adc
repnz
sbb
mov
imul
jmp
sbb
xchg
in
mov
icebp
or
or
mul
mov
cmp
outsl
shrl
std
sub
inc
iret
hlt
outsb
out
xchg
clc
adc
cmp
push
add
rcr
imul
lock
fdivs
in
pop
xor
mov
jo
fsubrl
jle
push
fldcw
fidivs
ds
pop
xchg
testb
pop
aam
in
stos
push
out
addr16
xor
pop
rcl
mov
mov
sub
dec
jg
cs
stos
lret
sbb
jno
repz
dec
dec
lock
ficomps
push
and
or
mov
scas
es
movsb
mov
lret
addr16
out
adc
or
sahf
pop
push
mov
das
insl
stos
lcall
adc
fisubrs
adc
dec
mov
sub
mov
sub
mov
pop
or
mov
cli
pusha
sbb
bound
iret
cmpsb
mov
stos
jecxz
sub
jmp
pusha
jne
jp
pushf
and
jns
mov
call
lods
test
mov
mov
fisubs
mov
cmovbe
jl
jno
dec
mov
xchg
lahf
cmpxchg
mov
push
xor
xlat
enter
mov
icebp
jae
pop
mov
sahf
push
or
fsubs
inc
cwtl
push
mov
push
dec
adc
inc
pop
adc
inc
repz
push
mov
cmp
les
add
sahf
addl
popf
pushf
and
sbb
mov
and
push
mov
jmp
mov
enter
lahf
insl
pop
mov
js
sbb
fcompl
xchg
push
pop
lea
sahf
jle
gs
test
cmpsl
daa
dec
jmp
xchg
aaa
xor
data16
jo
xcrypt-ctr
cmpsl
pop
insb
push
sbb
xchg
sahf
or
popf
fs
test
jl
mov
pop
jg
out
lahf
jp
cmp
movsl
sbb
psubusb
lods
xor
in
sub
xchg
add
cwtl
sub
popf
add
xchg
js
add
lahf
mov
nop
clc
sbb
pop
xchg
decb
sub
jl
dec
repnz
fidivl
stc
sbb
notb
or
test
jp
pop
and
mov
sub
cmc
lea
sarb
or
test
stos
push
cs
mov
mov
iret
sbb
stos
scas
bound
lcall
jnp
mov
out
inc
add
xlat
iret
clc
nop
inc
lods
jns
xchg
xor
loope
adc
lcall
cld
test
sahf
in
scas
inc
ds
and
int3
dec
or
aas
xchg
mov
cwtl
xchg
add
and
sahf
ret
pop
push
cmp
repz
cpuid
clc
push
outsl
cmp
or
push
adc
mov
mov
shrl
cltd
push
inc
adc
mov
push
cli
sub
mov
rclb
pop
jl
mov
xchg
push
adc
mov
adc
pop
fbstp
out
outsb
pop
insl
stos
jle
lods
pop
dec
out
xchg
adc
mov
fcomp
mov
sti
fsubrl
xor
mov
ljmp
and
sahf
js
aas
xor
pop
sahf
int3
and
push
adc
mov
xor
fldt
adc
mov
inc
mov
stos
pusha
stc
dec
push
sub
in
mov
push
push
add
mov
popa
adc
and
jge
dec
push
int3
aam
xchg
hlt
outsl
jge
ret
and
mov
and
cwtl
call
adc
mov
insl
mov
fstps
mov
sbb
adc
mov
les
push
jge
jnp
pop
mov
dec
cltd
rol
in
jge
clc
inc
outsb
or
fidivrl
push
sbb
pop
sub
dec
pop
scas
test
mov
push
or
adcb
cmp
push
xchg
das
aad
das
xchg
scas
les
mov
es
push
xchg
loop
mov
adc
cmp
mov
imul
out
test
mov
mov
xchg
inc
loope
mov
jle
movsl
sar
test
js
sbb
push
out
mov
sahf
out
xorb
stos
mov
mov
scas
imul
mov
pop
sbb
adc
daa
outsl
outsb
mov
add
and
mov
add
sub
out
adc
or
loope
ret
xchg
inc
leave
cmp
dec
or
mov
pop
pop
mov
sub
insb
cwtl
fcompl
cli
pop
aas
outsl
push
fwait
shll
xchg
es
add
push
push
cmp
out
clc
cmp
jb
sbb
aam
mov
jnp
loopne
push
js
pop
xor
ss
stos
mov
shll
jnp
mov
and
mov
sbb
jp
sbb
or
mov
fists
xor
dec
cltd
imul
ficoml
int3
add
jae
dec
loop
inc
sub
adc
jl
pop
movsb
out
insl
jns
dec
add
or
inc
sbb
out
cltd
add
sarb
mov
mov
sub
decl
mov
xor
into
push
xor
sub
outsl
mov
imul
mov
pop
cmp
sbb
dec
std
push
fnstsw
fs
pop
aam
jl
fdivr
daa
jb
or
xor
cmp
repz
mov
movsb
int3
out
xor
aas
push
push
mov
inc
rorl
ljmp
add
push
aam
xor
add
lret
into
jmp
xchg
xchg
fisttps
push
ljmp
jl
dec
popf
push
divb
inc
pushf
dec
pop
inc
jp
addb
call
leave
xlat
fisubs
mov
mov
lret
mov
sub
stc
mov
cs
sub
iret
push
adc
xor
lds
inc
imul
test
mov
outsb
je
jns
pop
adc
add
and
cmp
lahf
jp
add
jp
lods
fcomps
sbb
stc
in
or
cvtpd2ps
xchg
out
xlat
xchg
in
imul
inc
xchg
rorl
and
pop
outsl
adc
add
imull
pop
mov
cmpl
jle
xor
xor
insb
mov
in
loope
adc
std
inc
mov
jne
stc
insl
cmpsb
gs
cmpsb
es
and
xchg
stos
and
stc
fistpll
jno
fcomi
fs
fucomp
ds
adc
fcmove
test
repnz
lods
movsl
jp
ret
aas
jae
mov
adc
jl
or
data16
in
inc
sbb
call
sahf
mov
js
and
mov
mov
push
and
cmp
jle
jno
mov
adc
jne
ss
test
pop
xchg
lods
loope
stos
insb
iret
fldpi
push
xchg
mov
cmc
pop
jne
in
inc
push
add
incb
inc
dec
xchg
xchg
sub
or
lock
mov
push
insl
mov
scas
jge
inc
cmpsb
and
iret
mov
lods
shll
inc
pop
dec
and
imul
mov
fisubs
int3
sub
dec
pop
push
sub
lcall
dec
into
jecxz
push
outsb
push
push
dec
fstpl
add
out
inc
in
lods
shrl
add
stc
sbb
jecxz
aam
test
sub
daa
loop
outsb
outsl
aas
aam
ss
inc
inc
and
inc
lret
cwtl
or
jbe
xchg
cmp
mov
dec
movsl
push
fdivrl
test
scas
mov
inc
mov
cmc
xor
cs
stos
xor
cld
or
xchg
adc
add
or
icebp
loopne
clc
lea
add
in
adcb
adc
jo
jne
pop
cmp
mov
add
lcall
xchg
dec
pop
and
jns
add
mov
imul
lret
int3
mov
cs
push
out
cli
divb
retw
js
pop
jo
lock
cmp
into
lcall
jb
xor
xchg
in
mov
les
jns
ds
test
sub
mov
xor
xchg
leave
fs
dec
mov
shl
pop
xchg
mov
jmp
ds
inc
daa
cmpsb
xchg
ss
and
mov
dec
xchg
sbb
cli
gs
loopne
aas
test
inc
lods
dec
inc
in
xlat
sbbb
es
subb
out
adc
scas
out
cli
and
in
dec
add
cli
loop
pusha
add
into
pop
out
out
dec
push
call
mov
test
pop
enter
inc
int
xor
fadds
dec
fildl
ret
cwtl
cmp
in
sub
ljmp
popa
xchg
iret
jb
jp
fucomp
mov
sub
dec
mov
lret
in
repz
lods
pop
lds
cmpsl
push
cmp
in
cmp
xchg
mov
mov
or
sti
adc
faddp
popa
out
sub
xchg
icebp
loope
leave
mov
cmp
mov
aad
adc
sahf
pmaxsw
pushf
in
stos
adc
sub
hlt
in
jl
ret
rol
sbb
dec
push
adc
popf
inc
lods
movsb
push
mov
pop
mov
lret
mov
addl
inc
pop
jge
popa
subb
sahf
fidivl
jns
jg
jnp
gs
outsb
pop
fists
pop
xchg
cmp
pushf
push
aad
adcb
xor
cmc
jl
mov
push
lds
mov
mov
int
push
negb
jb
dec
subl
mov
lds
cwtl
pop
pop
cmp
mov
add
inc
loopne
pop
mov
cs
test
inc
imul
jle
je
cs
cmp
sub
sub
adc
xor
xchg
xchg
jbe
lahf
or
xchg
sbb
push
mov
jae
stc
xor
xor
and
stos
sbb
push
inc
and
stos
imul
and
loop
testb
aas
pushf
fcos
lahf
inc
sbb
ret
movsl
inc
shr
push
pop
jge
xchg
jge
sbb
pusha
cs
and
sbb
cmp
pusha
xor
mov
xchg
jg
push
pop
sub
divb
adc
pushf
fadds
insb
aaa
lcall
fwait
cmp
mov
cmp
push
lods
dec
sub
push
pop
xchg
int
inc
insb
rorl
cmp
mov
adc
loop
or
xor
inc
pop
or
sahf
aaa
add
rcll
sub
dec
insb
cmp
xchg
cmpb
scas
add
push
xchg
scas
aaa
dec
lods
and
int3
lahf
push
pop
mov
subb
sti
hlt
push
xorl
xor
lods
fldenv
and
lds
or
ficoml
ret
mov
or
scas
js
xchg
clc
add
gs
ret
adc
js
dec
iret
dec
cs
movsl
xlat
int3
imul
pop
loopne
lea
clc
test
aaa
data16
stc
sub
or
inc
push
repz
rorb
inc
mov
aaa
mov
pop
clc
or
pop
push
or
xchg
jo
adc
dec
push
mov
scas
xlat
pop
xor
mov
push
cmp
adc
out
rcrb
mov
insl
das
pop
sahf
mov
push
rcrl
call
push
jecxz
pop
test
sub
test
push
jo
sbb
adc
add
mov
cs
or
sahf
inc
xor
adc
inc
mov
mov
pop
clc
ss
jge
movsb
sar
xchg
mov
xor
leave
cmc
lock
aad
pop
add
pop
cmp
xor
lret
lea
int
mull
cmp
sbb
hlt
xchg
sbb
jns
outsb
cld
prefetch
dec
orl
cld
pop
stos
pop
dec
outsb
dec
sub
fbld
sbb
add
arpl
enter
cmc
testl
mov
pop
sbb
xor
xchg
sbb
insl
lahf
jb
inc
push
ror
lea
test
rcrb
push
stos
xor
in
roll
sar
hlt
cwtl
xor
xor
cltd
dec
jnp
cld
cmc
in
test
pushf
loop
pop
test
adc
lods
jmp
cs
outsb
push
cmp
in
sbb
add
clc
or
push
push
dec
cld
popa
push
shll
insb
jp
addl
xlat
stos
jle
lea
sahf
loop
les
mov
dec
icebp
fldpi
jbe
mov
shlb
or
addl
pop
js
mov
outsl
or
pop
xor
mov
clc
mov
mov
fs
push
sub
mov
int
jb
xchg
xlat
bound
mov
lret
insb
pushf
out
dec
pop
xor
out
jbe
xchg
outsl
int
mov
jno
xor
bound
or
nop
movsb
ret
aas
call
insb
dec
leave
fwait
addr16
popf
lods
in
jo
out
xchg
cmp
fisttps
in
or
ret
sbb
cmp
sbb
int
jne
sub
mov
or
mov
and
xor
outsl
roll
inc
inc
add
dec
pop
enter
loopne
xchg
sbb
into
cmp
rcl
imul
xchg
dec
mov
xor
mov
je
inc
dec
inc
sahf
gs
popa
in
in
and
mov
scas
das
lea
popa
jae
incl
sbb
mov
mov
lds
or
dec
and
cmpsb
pop
mov
xchg
mov
and
into
inc
into
cmp
jmp
and
mov
les
imul
push
iret
inc
sub
xlat
sub
lret
jns
int3
cltd
inc
mov
cmc
adc
es
xchg
rcrb
add
adc
dec
mov
dec
int3
fimull
dec
jo
adc
jne
ljmp
push
das
movsb
and
inc
pop
mov
jns
dec
mov
ret
enter
inc
sbb
nop
mov
inc
xchg
rcrl
xchg
clc
jg
jo
lcall
aaa
std
xor
sbb
jno
jnp
or
jo
jns
xorl
and
into
xor
and
and
sti
adc
int3
sahf
in
fnsave
faddl
and
xor
leave
and
aad
xchg
inc
or
insb
cs
test
into
sbb
sub
imul
cmc
es
dec
and
les
pop
sarb
cmpsl
sbb
hlt
xor
cmp
sbb
sub
fcoml
ljmp
fdivrl
sub
sbb
gs
mov
es
ds
jne
mov
cmp
mov
dec
fdivs
loope
mov
or
cmp
pop
pop
jo
jp
mov
imul
sub
sti
ret
inc
mov
pop
jb
daa
sub
mov
pop
mov
sbb
add
xor
sahf
addr16
add
xor
cmp
shr
dec
add
pop
sub
dec
sub
sub
repz
pop
mov
pop
and
mov
fdivrl
dec
or
xchg
rolb
hlt
pop
in
add
dec
mov
test
test
stos
icebp
or
inc
aad
jno
outsb
add
push
xor
subl
cld
stos
jns
add
icebp
lock
mov
pushf
jns
bound
rcl
mov
xor
sbb
lds
jge
mov
cltd
inc
repz
leave
lods
cmpl
es
imul
dec
mov
fisubrs
ret
aaa
pusha
adc
dec
sub
lock
pop
movsb
xchg
mov
ja
dec
insb
pop
out
outsl
pop
fwait
rcrb
sbb
adc
mov
aaa
push
mov
call
mov
fwait
in
divb
mov
rol
ja
adc
inc
leave
add
stc
jmp
scas
mov
stc
mov
leave
sahf
imul
push
and
push
leave
xchg
jno
and
popf
add
inc
daa
fbstp
add
inc
mov
inc
mov
jne
fwait
dec
sbb
ja
sub
sub
hlt
test
cltd
mov
or
xor
dec
or
mov
adc
fcomi
cmp
pop
xchg
ds
xchg
mov
sub
sub
sub
add
imull
sub
iret
inc
test
xchg
jl
pop
bound
enter
mov
gs
inc
jnp
fisubrs
jl
mov
adc
push
cmp
iret
push
sti
stc
mov
push
sahf
fidivs
inc
icebp
push
les
popa
inc
sahf
scas
incb
add
shlb
cmpsb
jmp
mov
adcb
in
orb
sub
jns
fmul
imul
mov
into
sbb
pop
and
fdivrs
sub
push
push
xchg
aad
mov
daa
daa
subb
push
jae
inc
callw
in
enter
dec
test
pop
int3
inc
xchg
mov
pop
sub
ret
mov
imul
enter
sti
and
xchg
daa
or
sahf
out
jge
sbb
mov
mov
vpcmpeqw
sarb
and
addr16
jne
test
les
and
mov
aad
adc
enter
adc
sub
pop
inc
xchg
divb
pop
ror
adc
int3
pop
fs
sbb
test
mov
fstpl
in
mov
push
fstps
ret
mov
xor
in
cmp
xchg
es
mov
rcll
fdivrl
adc
sub
jo
cmp
xchg
bound
movsl
popa
xchg
loop
push
loopne
popf
cmc
pop
mov
sti
cltd
and
and
mov
loope
or
into
push
and
xchg
ljmp
sub
rcll
dec
fucomp
or
je
push
pop
mov
and
sub
stos
xchg
jne
or
out
sub
rorl
sarb
inc
mov
test
dec
or
cmp
mov
mov
lock
pop
jo
out
movl
cmpsb
testb
and
and
xor
lahf
bound
push
lret
js
mov
add
cli
dec
jnp
and
dec
fstl
dec
pop
in
inc
je
cmp
push
aaa
mov
push
push
xchg
movsl
dec
movsb
sbb
lock
mov
mov
imul
insb
mov
into
cmp
cmpsl
int3
inc
ret
pop
dec
icebp
and
push
sbb
sbb
adc
sbb
jmp
pop
mov
and
adc
iret
inc
mov
push
push
fstpl
dec
pop
pop
ret
inc
divl
xchg
cmp
adc
push
jge
mov
jecxz
mov
dec
cwtl
cmp
sbb
pop
jg
dec
leave
mov
jecxz
or
decl
daa
iret
leave
popw
cld
mov
push
shr
inc
int
std
bsf
inc
sti
sub
or
shll
pop
xchg
cmp
mov
or
jl
les
pop
enter
dec
mov
jmp
pushf
fsubrl
gs
jl
outsb
sub
stc
jecxz
mov
jmp
push
xor
dec
mov
xchg
subl
xchg
push
adc
mov
ret
incl
call
dec
gs
mov
sub
cld
sbb
adc
cmp
aas
lea
jns
lret
imul
mov
movsl
stc
into
lods
pop
mov
xlat
out
test
xchg
repz
dec
add
sbb
add
cmp
dec
and
adc
into
inc
jae
in
stc
lret
ds
and
or
test
shlb
xor
sbb
shl
clc
add
xorl
mov
xchg
mov
fs
je
cwtl
imul
das
dec
push
not
mov
jbe
outsb
iret
or
pop
stc
cmovge
pusha
in
cmp
pop
daa
or
fisubrs
iret
pop
mov
stc
out
dec
jno
pop
cwtl
cld
scas
jg
outsl
xor
push
pop
pop
fbstp
pop
dec
and
sub
add
push
mov
scas
xchg
out
test
push
sti
sbb
mov
out
jns,pn
mov
jl
jmp
cltd
inc
out
mov
stc
sbb
jne
xlat
inc
jg
in
pop
mov
lcall
insl
xchg
aad
jnp
and
inc
iret
std
dec
clc
outsl
repnz
pop
or
cmp
cmpsb
jno
rolb
jbe
sub
mov
or
test
fs
movsb
sub
sub
cmc
loopne
sbb
push
inc
daa
movsl
sarb
shrl
jo
enter
shrb
add
sub
mov
and
lcall
mov
adc
adc
or
lea
inc
push
cmc
ret
push
dec
push
or
add
xchg
out
mov
mov
enter
imul
sub
jnp
nop
adc
imul
add
add
xchg
or
outsb
pop
nop
aad
sbb
add
cmp
push
pop
pop
cmpsl
ds
sub
rep
jge
clc
ret
dec
pop
add
and
mov
inc
fistpll
jge
testb
jno
inc
test
shlb
add
xchg
mov
xchg
sub
ds
jmp
fisubl
movsl
gs
xchg
push
xchg
sub
pop
nop
js
cmp
push
xor
adc
sub
sahf
jl
imul
push
out
inc
cli
push
or
cmp
movsb
push
mov
shll
aas
xor
xchg
jg
rcrl
incb
out
or
sub
xchg
cmc
mov
mov
cli
xchg
push
repnz
jg
xchg
into
popf
fnsave
ret
roll
dec
dec
cmpsb
inc
jle
push
sub
mov
enter
push
insl
inc
shl
idivl
movl
ret
jo
push
lret
in
mov
mov
fcoml
mov
inc
mov
jp
push
mov
dec
push
or
adc
mov
xor
push
ficomps
js
push
dec
dec
mov
sub
mov
pop
aam
push
pop
fnstenv
sub
dec
stc
stos
jbe
xchg
in
nop
aad
adcb
scas
jnp
arpl
xchg
lock
add
inc
or
adc
cmp
icebp
lret
push
jne
cmp
cmp
stos
test
out
loope
pusha
sar
or
dec
and
fisttps
sub
int3
xor
or
push
mov
push
pop
sub
cwtl
inc
xchg
push
js
and
cld
jecxz
repnz
cmp
adc
mov
mov
in
xor
adc
dec
inc
adc
xchg
in
ds
fidivs
xor
outsb
test
mov
and
and
sti
mov
hlt
xchg
xchg
insl
orl
mov
pop
arpl
mov
mov
sbb
cmp
sub
enter
xor
addb
daa
into
cli
fsubp
test
xchg
mov
adc
jmp
mov
and
iret
call
pop
or
cld
fildl
sub
xchg
inc
cld
sub
sub
lods
adc
dec
sub
inc
ficoms
paddb
enter
stos
ds
test
sub
mov
push
mov
push
push
mov
aas
rclb
sub
inc
jno
outsb
aas
mov
dec
ret
add
or
popf
push
in
andl
clc
mov
pop
ljmp
xchg
sub
lea
nop
out
mov
push
insl
xchg
repnz
arpl
jns
lds
push
add
mov
test
adc
hlt
jae
mov
sub
push
xor
and
ljmp
nop
inc
cmp
xchg
cmpsl
int
fsubr
mov
push
je
fdivrs
lods
jle
dec
jp
jmp
cmp
cmpb
in
inc
sbb
mov
sub
push
cmpsl
mov
int3
fcoms
sbb
jb
lahf
rclb
mov
mov
les
push
clc
cs
adc
mov
adc
fucom
inc
or
loop
ret
sub
pop
int3
xlat
scas
xchg
lock
mov
fs
ja
push
imul
push
xor
sbb
ss
les
les
in
cmp
loope
push
xor
jae
sti
xchg
arpl
or
mov
aam
repz
or
sub
popa
cmp
pop
mov
ror
ret
insb
xchg
sub
or
xlat
outsb
dec
cs
outsl
inc
jo
ds
mov
aam
adc
inc
cmp
jge
add
adc
push
lret
sub
mov
lcall
insl
pop
xchg
mov
nop
pop
jmp
cmpsl
add
and
jb
pop
sbb
add
cmpsb
outsb
loop
add
repnz
mov
fimull
rcrb
sbb
imul
adc
in
and
enter
inc
cmc
add
push
stc
lcall
arpl
in
cltd
sbb
into
push
arpl
sbb
repnz
test
and
or
int3
movsl
add
inc
mov
push
iret
inc
jle
push
lea
sub
sbb
inc
dec
xchg
leave
repz
fbld
push
stc
or
cmpsl
into
push
cmp
mov
dec
mov
ljmp
pushf
jbe
pusha
mull
popf
shll
cmc
pop
lods
fidivrs
test
jnp
xchg
aam
mov
sbb
lahf
jns
dec
jns
xchg
mov
jnp
arpl
pop
ret
incl
mov
rclb
mov
xchg
push
scas
jbe
jo
das
push
test
lahf
xor
mov
or
loope
ja
inc
cmp
cmp
nop
mov
or
imulb
cvtps2pi
push
stc
daa
leave
jns
idivl
sbb
jmp
and
std
pop
xchg
jle
sub
sbb
sbb
sbb
xchg
jb
shl
jnp
mov
pop
cs
adc
cli
nop
lahf
add
pusha
mov
arpl
pop
push
pop
aaa
testl
jo
mov
je
scas
stc
or
xchg
mov
dec
mov
sahf
push
or
popa
lock
dec
adc
sahf
mov
add
out
test
and
aam
ficomps
pop
ds
arpl
dec
aaa
mov
dec
test
or
cmpsb
mov
mov
mov
les
lret
imul
adcb
mov
add
jge
fdivl
dec
jl
push
outsb
icebp
xor
jns
cld
scas
jae
jg
arpl
add
jl
cmp
mov
add
jnp
movsb
test
pop
icebp
jo
add
int3
stos
call
mov
out
in
push
push
aad
dec
ret
outsb
fbld
lahf
ret
and
jl
stos
rcrl
insb
mov
stos
add
mov
pop
jmp
xchg
imul
sub
notb
ret
fsub
jle
outsb
arpl
mov
mov
je
dec
dec
lock
pop
cwtl
aad
adc
adc
std
cld
and
push
inc
es
ret
mov
jp
cmp
dec
pop
jl
add
popf
dec
ud1
outsl
loopne
pop
repz
jb
fidivl
push
xchg
stos
mov
es
imul
and
sub
mov
jae
xor
stos
xchg
or
jecxz
mov
adc
inc
sub
movsb
dec
neg
sar
insb
mov
push
jge
aad
or
lret
es
mov
rcrl
or
push
test
fstpl
cmp
shl
push
outsl
icebp
into
lcall
inc
dec
pop
add
or
out
xchg
pusha
sub
fldenv
dec
mov
cmp
dec
push
cmpsb
push
sbb
jbe
and
or
xor
xlat
insb
cmp
adc
int
daa
aas
pop
push
ljmp
cmp
mov
push
jb
dec
aas
frstor
mov
into
imul
les
roll
or
icebp
push
cltd
mov
xchg
andl
push
pop
in
icebp
sub
cmp
jmp
push
into
cmp
mov
aaa
inc
mov
cwtl
fisttps
xchg
outsb
mov
jmp
xchg
in
mov
dec
mov
lahf
jb
inc
xor
jb
cmp
call
inc
mov
sbb
inc
inc
scas
bound
mov
and
mov
xor
xlat
shll
shll
sar
mov
jnp
jecxz
mov
les
or
sbb
into
pop
or
loopne
mov
movsb
lods
clc
loopne
fdivrl
cmp
push
dec
and
bound
outsw
addl
push
mov
insb
dec
push
int
stos
andb
lea
push
daa
inc
enter
shl
lea
pop
out
insl
sahf
adc
sbb
sbb
pop
mov
mov
cmpsl
mov
and
lds
cmp
in
pop
mov
or
or
scas
bound
cltd
adc
sbb
jmp
add
push
push
out
aam
test
pop
mov
jecxz
ljmp
insl
sub
cmpsl
js
popa
repz
dec
lea
fs
dec
decb
lret
insb
sbb
mov
mov
or
sbb
scas
outsb
shr
mov
cmp
xorl
sub
add
xchg
pushf
std
popf
outsb
push
es
inc
sti
push
cmpsl
loop
imul
test
js
inc
inc
add
jle
jb
and
jecxz
cmp
add
mov
push
sahf
dec
xchg
mov
push
mov
inc
jle
mov
out
push
sbb
rcr
scas
dec
xor
dec
mov
lcall
pop
dec
pop
pop
stc
gs
mov
mov
mov
je
rcrl
addr16
sbb
fstpl
shrl
aam
cld
repz
xchg
cmp
mov
movsl
daa
int
xchg
mov
dec
pusha
fs
xchg
sbb
outsl
sbb
data16
sbb
or
int
mov
jb
push
mov
lahf
inc
addr16
mov
push
cmc
add
scas
das
imul
dec
cmp
icebp
lret
pop
icebp
cmpsl
dec
sbb
stos
xchg
test
inc
jnp
mov
jle
por
loope
imul
lret
pop
dec
pushf
xorb
sbb
rcl
push
xor
push
shrb
cmc
psubsb
fildll
push
pop
movsl
lock
mov
mov
xlat
pop
lock
inc
cmpsb
dec
pop
and
ja
push
push
inc
xor
int
inc
mov
pusha
add
imul
je
test
loope
and
fdivrl
pop
ja
mov
faddl
stos
pop
fbld
xchg
adc
push
sbb
and
loopne
lock
push
iret
ljmp
xchg
pop
outsl
lcall
clc
fistps
cmc
or
xor
loop
clc
test
pop
push
adc
scas
inc
and
sub
mov
nop
mov
xchg
dec
cmp
cmp
pop
out
cmp
lods
cld
mov
push
insb
xchg
mov
jo
int3
aad
js
push
and
push
add
sub
mov
or
fwait
push
mov
xchg
fwait
lahf
test
popa
lcall
stc
scas
dec
shrb
jge
jno
scas
sbb
push
icebp
adc
arpl
dec
jne
jns
mov
mov
sbb
dec
outsb
push
sub
popf
lods
pop
cltd
pop
xchg
jle
add
into
mov
mov
fwait
rolb
lahf
xchg
dec
es
push
icebp
mov
jbe
shrl
xchg
mov
jle
into
push
dec
sbb
push
insb
mov
or
inc
int3
fcmovb
add
sub
icebp
mov
mov
fbld
int
mov
or
cld
dec
cli
push
aaa
pushf
and
add
pop
or
or
or
push
push
ja
push
aaa
and
mov
or
idivb
pusha
fcoms
xor
faddp
jb
xchg
outsb
xor
rcll
stos
leave
jecxz
aad
jns
push
jo
pop
imul
mov
cld
in
jo
jnp
mov
ret
cwtl
cmp
jo
sahf
andl
mov
shl
add
repnz
shrb
cli
aas
mov
aaa
aas
cmp
lahf
loope
loopne
pop
sbb
jnp
mov
mov
sub
dec
or
jmp
mov
pop
sysret
mov
dec
xchg
notb
xor
cwtl
lods
lods
push
scas
xchg
imul
iret
mov
js
imul
lods
mov
mov
pop
sbbl
xchg
test
out
sbb
or
push
sbb
loop
out
adc
adc
std
dec
das
lock
add
pop
leave
out
int3
push
push
xchg
mov
repnz
ficoms
mov
lret
pop
ljmp
iret
push
xchg
mov
dec
sub
xchg
jnp
out
or
test
adc
insb
cmc
adc
pusha
add
pop
mov
and
shrb
cmpsl
xor
ficoms
dec
xor
mov
mov
xchg
jmp
loop
jge
out
sub
pop
mov
test
cwtl
and
xor
jl
lret
jo
and
in
push
dec
lea
std
scas
stc
imulb
pop
movsl
mov
cwtl
es
sub
lea
out
mov
add
aas
insb
push
in
xchg
movsb
insl
rol
cmc
cmpsl
sub
int
push
cmp
dec
mov
push
cmp
sbb
in
push
inc
lock
pop
adc
mov
pop
ljmp
mov
andl
cmpl
or
fwait
jge
pop
pop
pusha
xchg
leave
dec
dec
nop
ret
mov
and
push
cmc
and
les
iret
test
jo
and
sub
mov
inc
or
mov
xchg
dec
addb
mov
pop
mov
push
icebp
ja
int
cmp
dec
xchg
ret
lret
das
loope
sub
in
ljmp
and
test
push
pop
sbb
jecxz
lret
mov
stc
inc
mov
mov
ret
add
repz
mov
lahf
cmpsl
in
ja
push
mov
fs
pop
test
scas
mov
lret
mov
ss
icebp
hlt
adc
dec
outsl
adc
pop
or
xor
xchg
popa
subb
or
out
stos
jl
pop
xor
cmp
das
pop
mov
mov
lahf
int3
rorl
fxch
mov
xchg
jae
dec
mov
or
add
int
rcrb
dec
dec
insl
adc
pop
mov
jb
dec
push
mov
lret
cmovno
pop
adc
les
ret
sub
or
enter
add
leave
cltd
mov
out
ror
fidivs
movsl
int3
xchg
or
into
sahf
xchg
pushl
ja
into
pop
push
inc
cltd
xchg
push
divl
imul
pop
add
loope
lds
les
mov
cld
xor
call
adc
daa
imul
cmp
aad
lret
inc
fiaddl
out
lea
sbb
inc
inc
sbb
and
enter
or
scas
mov
jno
xor
pop
dec
pop
sub
and
adc
mov
cmp
insl
push
jecxz
rorb
push
pop
gs
test
imul
inc
inc
pop
fisttps
xor
shll
or
xchg
enter
sbb
ret
icebp
jnp
sub
lock
movsl
aaa
jl
inc
add
inc
cmp
or
arpl
lahf
repz
subb
je
sbb
mov
das
or
push
loopne
loopne
inc
in
mov
dec
dec
pop
xor
mov
push
cmpsb
mov
and
mov
jae
icebp
mov
or
add
popl
js
out
and
or
add
les
movsb
pop
xor
lret
in
dec
pop
pop
sub
fwait
pusha
xor
divl
test
outsl
sti
sbb
and
pop
and
test
insb
sub
sbb
fsubs
lea
inc
jo
roll
push
cld
js
scas
aas
adc
lret
imul
inc
and
cmp
mov
cmpsb
push
out
adc
das
jbe
or
pusha
jg
fcmovnu
test
pop
cmp
repz
clc
in
xlat
jle
sbb
mov
out
jle
stc
xor
scas
lret
inc
lret
ficoms
push
and
outsl
adc
sbb
inc
insb
mov
jne
popf
xchg
xchg
jbe
lods
sbb
stos
fisubl
xor
cmc
dec
repnz
outsl
sub
adc
ss
xor
out
jmp
dec
xchg
jb
sub
xor
loop
dec
das
loop
ret
push
xor
call
pop
pop
fcompl
pusha
lock
xchg
cwtl
pop
pop
xchg
push
out
cli
enter
push
mov
int
jmp
mov
lds
jo
dec
mov
mov
mov
or
xchg
rcrl
sahf
mov
ficompl
test
jmp
mov
xchg
adc
iret
fistpl
push
adc
fnstenv
inc
sahf
lret
cmpsl
push
xor
xchg
fdivs
pop
fs
push
add
pop
inc
sub
lret
pop
xchg
iret
xor
gs
mov
sbb
icebp
xchg
cmp
lahf
xor
imul
fisttpl
loopne
dec
sub
loope
sub
std
in
adc
subb
push
test
cs
mov
sub
mov
lahf
xchg
dec
pop
sbb
rorl
orb
mov
aad
inc
fcompl
push
insl
adc
sbb
mov
aaa
sahf
mov
adc
rcrl
pop
adc
daa
jge
xor
out
test
adc
cs
jg
into
pop
xchg
lods
cmpsb
insb
lods
and
mov
add
inc
xor
outsl
mov
dec
adc
jns
and
xchg
push
pusha
jp
mov
mov
loopne
lret
mov
rcl
dec
ja
or
orl
in
dec
testl
ret
mov
sub
dec
bsr
gs
jae
dec
stos
sbbl
orl
movsb
cmpsb
icebp
adc
inc
into
sarl
mov
jmp
pop
jne
adc
fmul
push
jnp
test
repz
ret
aaa
mov
addr16
push
je
movb
je
sbb
jmp
or
jns
lea
int
fs
test
or
sub
mov
add
cmp
xor
gs
mov
nop
ja
mov
mov
xor
pop
les
ret
test
call
push
pop
fwait
fwait
pavgw
ja
jbe
shll
rolb
xchg
mov
sub
push
hlt
fs
mov
sub
pop
adc
jne
cmp
xor
and
push
scas
jl
popf
or
sub
outsl
outsb
mov
subb
xchg
lods
and
pop
mov
xlat
or
xchg
inc
lods
mov
dec
dec
mov
aam
les
int
orb
push
js
ds
cwtl
inc
pop
or
sbb
mov
clc
mov
sbb
ss
fsubrl
sbb
sbb
mov
icebp
je
mov
cmp
shll
cli
sbb
mov
cmp
push
pop
jle
mov
mov
std
pop
rcr
mov
arpl
cmp
in
je
negb
push
push
lods
and
jnp
mov
dec
nop
add
and
int
pusha
dec
mov
aam
es
fs
dec
and
inc
pop
std
jne
mov
and
fisubl
insb
push
xchg
aas
rol
mov
subb
push
or
xchg
gs
cmc
fwait
test
es
ret
jg
push
pushf
lret
mov
or
fnstenv
loope
scas
popf
cltd
inc
insb
clc
mov
loop,pn
fsubrl
xchg
lret
mov
jmp
push
mov
into
or
jno
shr
push
mov
rolb
lcall
jno
pop
sbb
mov
loopne
xorb
pusha
jns
xchg
sti
into
fmull
jg
inc
cltd
les
mov
add
stos
shlb
jnp
sahf
mov
mov
mov
push
pop
in
or
inc
cmpsb
sub
push
mov
cmp
outsl
aam
xchg
cmpl
popa
mov
push
pop
lock
xor
add
jo
pusha
mov
scas
fwait
push
mov
push
xor
xchg
mov
fcompl
xchg
or
frstor
jge
cmp
jnp
jns
mov
inc
outsl
and
pushl
stos
iret
push
or
popa
pusha
pop
cmc
push
ds
arpl
jl
stc
sbb
xor
jbe
sti
jae
sub
aam
pop
and
xchg
mov
fwait
outsb
or
imul
int3
aad
cmp
test
or
inc
xlat
push
add
and
pop
fbld
xchg
inc
fwait
and
pusha
xchg
das
pop
xchg
loop
stos
fidivrs
add
push
jnp
sub
pop
stos
mov
daa
es
adc
std
xchg
xchg
fisubs
les
mull
leave
repnz
sbb
mov
push
addb
aam
cmp
jns
int
jmp
mov
sbb
cmpsb
add
js
std
int3
xsha256
cmpsb
push
cmp
es
ss
jo
inc
scas
jecxz
and
xor
icebp
pop
pop
int3
pop
aad
inc
mov
pushaw
arpl
mov
pop
adc
fsts
adc
pop
ljmp
ljmp
outsl
mov
jbe
sbb
adc
mov
mov
fst
push
jp
popf
dec
mov
xchg
cmp
xchg
inc
lea
xchg
mov
mov
imul
or
sahf
in
pop
fwait
xchg
sarl
data16
pop
inc
stc
psrld
fldl
push
xor
das
cmpsb
add
loopne
test
mov
adc
jp
and
stos
icebp
dec
push
mov
pop
fidivrl
sub
mov
cli
je
jge
inc
fbstp
push
and
dec
les
loopne
jg
leave
scas
xor
int
push
mov
scas
sti
mov
shll
scas
mov
mov
aaa
sub
xlat
cmp
sbb
loopne
xorb
adc
flds
jl
jne
dec
out
mov
popf
sbb
mov
and
push
les
mov
test
insb
mov
loope
test
mov
int
push
xchg
mov
dec
cmp
push
insb
jae
sarb
popa
and
fdivr
xchg
pop
aam
pop
dec
pop
lcall
aad
scas
inc
adc
pop
cmpsl
xor
cmp
arpl
push
jp
cmpsb
gs
shll
xor
je
mov
pop
dec
mov
imul
pop
mov
das
mov
ja
sar
int3
push
push
push
pusha
cmp
and
add
in
xor
pop
sahf
mov
add
je
movsb
jno
or
inc
add
push
lea
sbb
jo
mov
das
repnz
xor
jge
ror
in
iret
cmp
xor
cwtl
jge
xchg
aas
dec
jp
pop
cmp
xchg
aaa
popf
rolb
xor
in
mov
sbb
movsl
notl
jo
pop
jp
mov
inc
mov
inc
adc
pop
imul
in
lret
mov
jl
mov
sarl
pmaddwd
fwait
stc
subl
loop
mov
fstpt
sub
orb
mov
sbb
mov
int
sbb
cwtl
repnz
cmc
fs
stc
dec
call
lahf
pop
stos
mov
mov
cmp
daa
outsb
xchg
sbb
lret
fwait
popf
lcall
jne
add
adc
out
dec
xchg
push
clc
fs
sub
mov
cwtl
aaa
dec
enter
imul
inc
notb
insb
pop
test
ret
in
ja
outsb
repz
cmp
addb
mov
mov
popa
gs
fdivs
adc
insl
mov
jmp
test
lret
cmp
mov
mov
sbb
adc
js
fsubl
mov
mov
imul
mov
jmp
or
popf
pushf
out
or
xchg
or
xchg
dec
mov
loopne
pop
stos
or
push
js
addr16
push
pop
dec
inc
in
pushf
out
cmp
push
lods
ret
pushf
mov
or
leave
lahf
inc
cmp
push
es
in
mov
xchg
pop
nop
popa
icebp
or
test
mov
cmp
xchg
sbb
sahf
xchg
mov
les
inc
mov
sti
jns
inc
inc
das
les
ja
cmp
lret
jbe
cli
pop
jae
pop
imul
jecxz
adcl
xchg
or
pop
mov
sub
and
out
dec
lods
pop
popf
aad
popa
jnp
lret
adc
hlt
shrb
popa
sub
cmp
mov
xchg
or
jae
pop
lods
sarb
adc
scas
cld
add
ret
push
inc
adc
mov
jl
xchg
loop
test
inc
rclb
pop
lahf
test
and
aam
out
insl
xchg
jl
lods
jecxz
test
sbb
jmp
or
lret
or
dec
mov
repnz
mov
icebp
rolb
dec
cltd
pop
mov
leave
insl
xchg
jne
push
push
sub
mov
sarl
int
inc
fs
mov
mov
mov
pop
jbe
jbe
loopne
insb
call
pop
rcr
xchg
imull
ss
pushf
arpl
pop
lock
bound
scas
in
sbb
in
sub
in
mov
jnp
sub
xchg
into
scas
mov
je
les
pop
call
into
mov
iret
leave
pop
xor
mov
imul
mov
ret
push
test
cmp
pusha
out
out
pop
sbb
aad
imul
push
pop
pop
rol
faddl
lock
pushf
inc
iret
push
mov
cwtl
popa
push
fnstenv
movsb
mov
dec
push
mov
xchg
enter
xchg
stc
sbb
or
xor
add
addl
or
jne
jge
test
xchg
adc
jmp
aad
cmp
stos
xorl
out
push
ret
imul
loopne
test
push
push
pop
mov
dec
call
cli
adc
cs
movsb
cmc
add
aaa
adc
mov
adc
mov
lea
popa
call
in
fmuls
fnstcw
dec
mov
xchg
shl
jle
pop
es
add
das
sti
mov
lds
mull
stos
cmpsb
loopne
imul
mov
movsb
and
xchg
jecxz
std
lods
loopne
leave
lods
add
pop
xchg
lock
xlat
je
dec
loopne
push
rol
cli
fs
fucomip
adc
cli
mov
jbe
scas
sub
out
inc
dec
in
lret
clc
pop
cmc
inc
lea
fstpl
dec
call
mov
fsts
cld
fidivs
push
jae
aaa
dec
movsb
addr16
mov
out
loope
push
pop
repnz
jmp
stos
stos
out
lahf
pop
lock
lret
cmp
sbb
mov
shll
mov
imul
lret
push
and
adc
and
mov
out
sbb
insb
cld
test
in
cmc
lcall
sub
push
pop
xor
subb
rorl
ja
mov
dec
mov
gs
mov
sbb
jmp
rcr
ret
xchg
fdivs
mov
data16
mov
lret
sub
cmc
lods
lcall
jecxz
xchg
push
xlat
jae
mov
js
cmp
jl
add
popf
mov
pop
pushf
js
cmp
mov
pop
mov
and
mov
lods
mov
jnp
add
das
jbe
inc
divl
scas
push
jb
jns
sbb
insl
push
mov
sub
ljmp
jge
pop
and
icebp
add
aam
mov
jnp
xor
push
loope
xchg
adc
ret
cmp
daa
js
xchg
adc
jns
jecxz
adc
test
movl
mov
test
bnd
sbb
addr16
dec
fcomp
cmpsl
and
pop
mov
inc
dec
mov
sbb
clc
gs
cld
jo
sbb
dec
mov
iret
stos
pop
and
test
push
mov
pop
xchg
push
cmp
lock
ja
sahf
mov
pop
mov
andl
sub
mov
add
or
mov
incl
pop
leave
stc
or
insl
mov
add
std
or
jle
scas
mov
cmp
push
fldt
or
mov
lods
cld
xchg
notl
mov
sti
sub
push
sub
gs
shll
fmull
es
inc
sub
jle
stos
dec
jp
pop
xlat
sub
dec
push
mov
in
cmc
inc
sahf
jmp
jb
and
fs
xor
lret
int
jns
sbbl
je
iret
extrq
rcrl
test
gs
cmp
in
sub
scas
inc
dec
popa
pop
insl
ret
loopne
das
in
fwait
mov
dec
aas
out
add
jmp
xchg
dec
mov
sbb
xor
cmp
shrb
jmp
shlb
sbb
idiv
inc
and
mov
pop
scas
dec
add
inc
out
mov
mov
xchg
lcall
setb
xor
sti
enter
into
xchg
adc
ss
mov
sbb
mov
jns
movsb
addb
pop
xor
sbb
sub
adc
sbb
aas
adc
andb
mov
cmp
cmp
mov
data16
stos
fsub
orb
mov
pop
mov
scas
imul
lock
ja
in
mov
ljmp
cs
dec
mov
cltd
xor
dec
push
xor
sub
clc
xchg
xlat
fistpl
out
pop
in
add
in
popa
outsl
cmp
xchg
adc
sbb
xchg
jmp
jne
xor
fbld
fstpt
add
mov
jl
aam
loopne
push
cmp
inc
mov
jge
stos
rcll
inc
outsl
xor
shlb
inc
mov
aad
pop
xchg
aam
fwait
push
jns
sbb
add
add
rcr
cmp
cli
adc
test
fdivrs
xchg
orl
call
mov
jge
ljmp
insb
shll
xchg
xchg
adc
popf
add
ss
xor
sahf
fildll
cmpb
loop
mov
pop
loop
mov
jecxz
pushl
fildl
mov
push
push
lods
leave
gs
movsl
lock
push
in
mov
fsts
sub
inc
or
lock
adc
jbe
xchg
stos
mov
xchg
add
in
mov
cmp
loopne
sub
mov
xchg
cmpsl
or
xchg
ret
push
sbb
adc
js
push
jge
xchg
dec
cmp
fcmovb
jbe
inc
mov
mov
pop
sub
sbb
xor
out
sbb
je
mov
js
sub
hlt
dec
test
pop
mov
push
sbb
lcall
andl
into
push
mov
test
imul
hlt
push
sub
subl
inc
mov
in
fimuls
dec
add
fisubl
cmpsb
sub
cmp
xor
jp
mov
push
outsb
pop
lock
pmullw
movsb
outsb
gs
add
cmp
adc
mov
call
cmpb
ret
fistl
cmpsb
pop
ss
inc
es
cmpsl
dec
push
mov
mov
insl
pop
cmp
push
cs
pushfw
call
imul
add
cmpsl
fcomp
adc
mov
inc
or
push
je
mov
fcom
jmp
nop
xchg
push
dec
sbb
pop
sbb
adc
fst
jne
hlt
test
rcrl
mov
or
and
int3
fistpll
mov
adc
sub
data16
mov
jae
pop
xor
mov
pushf
cmpsl
leave
jne
loop
xlat
jle
dec
sar
mov
inc
cli
jecxz
pop
adc
xchg
fmull
cmovnp
jae
aad
mov
jg
add
cli
fwait
mov
rolb
add
hlt
and
ficomps
ficoml
inc
dec
iret
cmp
xor
lea
cmp
ficoms
std
push
sub
notl
add
repnz
sub
push
inc
cmc
or
aad
fs
push
cli
test
mov
cmp
sbb
adc
lcall
adc
xchg
lahf
imul
das
mov
sub
sub
cmpsl
out
clc
add
jl
out
dec
sbb
test
fstpt
popf
lock
outsb
dec
jae
push
or
sbb
push
imul
sbb
ret
out
lcall
mov
pusha
ficoms
xor
mov
jp
aas
xchg
push
sbb
or
pop
imul
xlat
jecxz
pop
das
push
sbb
xchg
notb
jns
or
shrl
fbstp
jmp
cmpsb
or
data16
pop
iret
xlat
and
insl
insb
insb
out
adc
stc
movsl
xchg
inc
imul
jo
popaw
in
stc
repnz
xchg
cmpsb
adc
cmp
fbstp
xorb
xor
cs
mov
pop
jbe
addr16
shl
pop
sahf
int3
mov
les
cmpsb
aas
cli
clc
push
mov
jecxz
inc
sub
rorl
sub
clc
lahf
pop
fildl
ja
in
aas
ja
cmp
fstpt
xor
cmp
sbb
fs
dec
and
lcall
enter
aas
inc
popf
sub
cmp
xchg
xor
add
lret
fs
aam
jp
js
add
mov
loopne
js
add
cmp
fadd
stos
test
subb
sub
out
mov
repnz
jae
mov
jb
mov
jecxz
rcll
in
mov
sbb
push
sbb
in
repnz
subb
testl
xor
ret
mov
sbb
xorl
fimull
inc
push
dec
bnd
stos
dec
mov
clc
xchg
cmpsl
or
lret
adc
sahf
insb
ss
jno
jecxz
imul
fpatan
add
lea
jmp
daa
jge
sbb
push
push
fnstcw
inc
xchg
stc
lods
fidivs
jb
and
int3
fidivs
aad
mov
fisubrl
outsl
xor
imul
cmp
insl
push
jp
out
jp
fsubl
test
adc
mov
mov
test
sub
icebp
pop
push
mov
in
inc
fsts
out
js
cmp
cmp
push
cld
xor
mov
push
rcll
pop
iret
mov
or
iret
mov
cs
addr16
or
cmp
pop
daa
arpl
pop
push
jmp
jmp
mov
movsl
inc
pop
aas
dec
std
mov
cmp
daa
movsb
pop
add
stos
pop
pop
add
mov
ljmp
add
xchg
lcall
sub
mov
mov
jno
push
int3
dec
jne
test
adc
or
sbb
cmp
in
jbe
insl
jns
mov
jb
or
jo
mov
pop
adc
std
xchg
rcl
ja
iret
dec
jp
sbb
sub
leave
notb
fdivrp
repnz
jmp
rcl
out
out
and
mov
sahf
mov
movsb
cmp
and
add
cmp
adc
rolb
and
xor
jecxz
daa
cmp
ret
sbb
scas
pop
popa
or
nop
fidivl
daa
jmp
dec
clc
icebp
push
mov
icebp
stos
jmp
in
aas
insl
fisttpl
ffreep
out
xor
addr16
lcall
adcl
sbbl
test
xchg
inc
jb
xor
mov
repz
dec
push
insb
cltd
movsl
cmp
daa
jecxz
lods
lock
mov
mov
sbb
cmp
cmp
add
in
jl
jle
loope
test
popf
imul
pop
pop
out
push
xor
ret
xchg
in
daa
lret
mov
pop
out
repz
fcomi
cmp
int3
pushf
adc
fiadds
fwait
mov
cmp
ja
stos
jo
xchg
arpl
pop
ss
cmpsb
iret
cld
jnp
push
mov
imul
adc
and
divl
sub
lods
or
insl
mov
setle
aaa
jg
fldcw
mov
int3
gs
movl
std
push
push
mov
das
and
push
aad
cmp
sub
add
jnp
jae
fidivrl
and
ret
in
pop
xlat
aas
inc
xlat
sub
fistpl
dec
andb
dec
out
pop
ret
pop
mov
movsl
push
xchg
out
fisttpll
push
push
xchg
add
push
cwtl
mov
cli
mov
inc
dec
mov
in
daa
int3
sbb
dec
add
adc
jmp
push
jae
xchg
xor
das
outsl
repnz
in
iret
pop
inc
fwait
or
mov
sub
sub
dec
push
andb
out
or
sbbl
sarb
in
inc
cmp
addb
jecxz
stos
movsl
mov
jecxz
mov
pusha
lcall
ret
push
std
imul
or
xchg
cmp
xor
addr16
scas
jbe
push
jmp
or
scas
push
lock
pop
sbb
ja
ret
sub
test
cld
in
sti
jbe
test
push
xchg
scas
rorb
sbb
pop
ja
fbstp
xor
or
lods
xchg
push
sub
inc
mov
sbb
pop
mov
test
gs
sarl
mov
scas
xchg
je
test
sub
inc
call
xor
mov
adc
in
mov
xor
ss
dec
pop
or
mov
mov
sarl
jno
sub
aad
fwait
sbb
xor
inc
push
jecxz
les
sbb
jne
jp
fistps
stos
in
dec
pop
out
fimuls
fcoml
movsl
push
scas
hlt
pop
mov
cmp
js
into
leave
in
or
or
lcall
outsl
xor
or
dec
push
push
shr
pusha
or
cmp
xchg
in
pop
xchg
sbb
push
out
in
lret
or
outsb
cmp
xchg
adc
sub
lret
sbb
push
mov
imul
push
jg
push
xor
xchg
xchg
pop
and
jmp
sbb
pop
adc
sti
cmc
cmp
adcl
and
fsubrs
outsb
shlb
and
push
mov
xchg
dec
lcall
lds
testl
inc
rcll
in
xlat
sbb
outsl
loopne
or
lret
stos
push
ds
jno
loopw
or
mov
cmp
movsb
je
mov
xor
and
addr16
sbb
mov
and
add
out
aam
repz
icebp
dec
lahf
repnz
out
dec
or
repz
test
hlt
xlat
aaa
xor
xor
outsb
in
sub
mov
sbb
popa
mov
ja
pop
js
test
pop
gs
push
lea
pop
icebp
pop
addl
test
lds
out
lds
add
cmp
xor
cmpsb
jmp
ss
push
mov
iret
sbb
and
lret
add
mov
addl
fistpl
cwtl
and
inc
outsl
insl
ret
xchg
sub
dec
test
dec
js
inc
iret
das
arpl
or
test
repz
rclb
sarl
clc
rcrb
les
and
out
and
int
sbb
pop
dec
fldl
jl
and
sbbl
cmc
icebp
in
sub
repnz
push
jp
inc
out
sbb
push
push
inc
pop
mov
mov
dec
lret
sbb
fstps
stc
mov
dec
popf
subl
dec
lock
inc
jno
add
ret
das
shll
pop
rorb
mov
mov
mov
rorl
popa
leave
add
fwait
cmp
sbb
mov
jmp
sub
mov
into
outsl
arpl
out
dec
imul
xor
sbb
arpl
cmp
clc
cmc
pop
push
out
mov
inc
sub
and
fs
pop
push
je,pt
out
push
in
dec
je
xor
dec
mov
xor
sub
aas
mov
pop
lock
repnz
xor
cld
mov
sub
lock
inc
pop
push
sahf
pop
pop
xchg
pop
loope
push
fcompp
rcrb
push
jg
shrb
leave
inc
addl
adc
mov
data16
cmp
out
pop
push
push
mov
push
lds
iret
push
insl
push
into
shrl
mov
ja
popf
cmp
xchg
enter
jle
dec
add
xchg
xor
test
pop
xchg
mov
push
pop
repz
orl
aas
bound
adc
popa
fistpl
add
push
sub
ret
aam
xlat
add
cwtl
mov
ds
cmpsb
out
repz
enter
mov
cs
adc
imul
mov
jb
ljmp
add
test
repnz
cmp
pusha
fs
mov
in
mov
loop
mov
jge
xchg
sbb
jo
addr16
jg
addb
push
sub
rclb
loope
insb
pop
outsw
out
cwtl
mov
mov
jno
test
xchg
lret
stc
cli
jp
sahf
cs
push
imul
inc
addr16
xchg
jnp
imul
mov
or
inc
in
stos
stos
mov
sub
inc
stos
jbe
jp
mov
xchg
pusha
push
test
add
stc
sbb
mov
jns
std
and
or
lcall
sbb
xchg
xchg
xor
xchg
out
jns
sub
mov
mov
xchg
mov
jb
add
mov
dec
push
push
sub
addr16
or
sub
arpl
mov
lret
adc
repz
lret
xchg
fwait
adc
sub
aam
and
inc
sub
push
test
fwait
jg
mov
fcoml
mov
sub
adc
daa
inc
sub
icebp
pop
cmp
xchg
repz
adc
pushf
shlb
pop
pusha
mov
in
fisubrl
jbe
dec
and
insb
mov
mov
sub
pop
dec
lds
push
mov
xor
and
ret
sub
or
cmp
fisttps
push
cmc
xchg
xchg
pop
aas
sti
mov
and
in
dec
test
mov
pop
jg
pop
sbbb
push
lods
xor
mov
aaa
popf
mov
fs
sub
pop
xor
ret
pop
out
rcrb
sbb
adc
and
addl
das
cmp
inc
and
pop
sub
filds
es
out
inc
dec
cld
out
pop
sarb
xchg
xor
nop
jbe
push
push
adc
sub
int
fisubl
mov
cs
push
sbb
mov
cmpl
and
dec
push
out
test
cmpsb
stc
push
add
hlt
lea
notl
mov
pop
cmp
cwtl
shll
fldl
imul
lahf
add
lock
and
jge
pop
cmp
lret
sbb
sub
sti
sub
mov
and
cli
inc
idiv
ficomps
daa
xchg
ljmp
cltd
movsl
test
insl
insb
jb
xchg
push
mov
and
or
xor
das
sbbl
pop
cld
scas
aas
aam
dec
cmp
cli
icebp
push
ror
popf
pop
dec
dec
stos
std
jg
leave
test
ficomps
sbb
xor
cmp
in
int
push
lahf
push
cmpl
cmp
lret
clc
xor
jb
pushf
xlat
fisttpll
cmp
lock
lea
bound
cmp
mov
adc
push
xor
cmp
ljmp
jne
dec
push
adc
push
adc
pusha
imul
mov
ds
shlb
sub
es
dec
stos
int3
repz
xor
inc
cmp
cmp
cmp
lret
out
lahf
aam
xorb
mov
icebp
ret
loop
cmp
xor
fnstcw
mov
dec
es
andl
mov
mov
stc
cld
xlat
rcrb
daa
fs
mov
cwtl
fwait
sub
lds
aaa
push
jnp
pop
divb
bound
push
add
movsb
pop
scas
nop
es
sub
mov
xlat
and
repz
pop
xchg
je
aam
cs
stos
leave
xchg
or
jno
subb
pushf
clc
or
mov
xlat
lock
cmpsl
inc
inc
or
shll
pop
pop
cltd
mov
in
shlb
stos
mov
fstpl
stos
or
push
into
js
xchg
mov
aam
fmuls
out
ss
int3
cmp
add
push
arpl
xor
das
lret
xor
stos
or
inc
pop
inc
and
jmp
pop
shll
jnp
inc
xchg
add
movsl
sub
xchg
mov
sub
test
xchg
jmp
movsb
xor
adc
test
fldenv
mov
bnd
shll
stos
add
jp
mov
leave
cmp
add
inc
add
fadds
sbb
mov
add
fistps
mov
pop
ret
mov
push
idiv
dec
push
ljmp
cmc
iret
jbe
pop
andl
or
jbe
cli
mov
adc
aaa
fs
rorb
add
arpl
test
adc
fldcw
mov
cld
mov
dec
push
and
inc
pop
add
imul
and
mov
pusha
out
mov
pop
mov
inc
fnstcw
sub
outsl
mov
outsl
cmp
pop
adcl
mov
push
in
int
out
in
add
shll
pop
outsb
popf
lcall
cld
lret
cli
add
push
subl
jb
mov
fstpt
lcall
repz
push
cmpsl
dec
jnp
repnz
mov
xchg
inc
mov
shrl
out
out
mov
arpl
pop
adcl
or
fidivrs
cmp
cwtl
sbb
sbb
enter
cmp
ljmp
movsl
or
fsubrs
inc
dec
xor
sbb
sub
popf
stc
lret
inc
cmp
xchg
fnstcw
ja
xchg
sub
test
mov
les
push
aaa
and
jmp
dec
xchg
mov
adc
pushl
add
lret
movsb
or
outsl
leave
fsubrl
pushw
push
int
js
sub
mov
addr16
lods
cmpsb
loop
adc
push
push
lds
ljmp
pusha
xor
in
xor
cmpsl
or
inc
pop
and
and
leave
into
fidivl
movsl
pusha
aas
add
popa
jb
pop
pop
ss
cmp
stos
test
adc
adc
xchg
in
pop
in
test
int
or
mov
add
mov
jl
sbb
lcall
ds
pusha
fnstsw
stc
jb
sbb
inc
cltd
inc
clc
fwait
movsb
push
mov
aaa
in
sbbl
lahf
test
int3
inc
adc
mov
and
push
je
shll
js
mov
xchg
push
adc
and
jbe
fcompl
mov
mov
test
movsl
lahf
or
xor
mov
xor
mov
mov
or
inc
push
push
add
mov
pushf
dec
popf
dec
rep
daa
int
in
xchg
dec
cltd
sub
dec
outsb
mov
int3
stos
ss
in
cmpsl
scas
mov
fstpt
pop
aas
pop
dec
hlt
sub
pop
mov
cmp
je
push
jecxz
in
dec
pop
dec
sbb
and
test
in
inc
dec
adcb
hlt
adc
add
xchg
lret
push
jae
out
push
sbb
sarb
pusha
divb
cltd
addb
mov
ret
mov
jb
xchg
ret
cmpsl
pop
test
bound
lret
je
pushf
mov
sub
pop
or
push
cmp
xlat
cmpsl
or
inc
in
mov
or
sti
cld
mov
inc
mov
test
sub
push
inc
lea
out
popa
mov
inc
adc
loope
push
push
sub
fs
and
inc
jne
cmp
aam
hlt
loopne
shlb
les
mov
in
mov
out
dec
cmp
mov
loope
xchg
jbe
or
pop
mov
push
lret
or
cmp
inc
dec
xchg
mov
xchg
pop
jne
cmpb
inc
pop
ss
out
stc
loopne
out
repz
xchg
iret
xor
mov
mov
jle
data16
jl
cltd
addr16
push
lods
and
xor
or
in
push
lea
test
cmpsb
pusha
hlt
popf
mov
mov
in
xlat
add
loopne
push
fistpl
stos
jo
pusha
test
adc
pop
xchg
pcmpgtb
jno
movsb
and
loop
cmpsl
mov
stc
xor
sub
arpl
mov
sub
add
cmpsb
iret
inc
dec
fmulp
xchg
aas
into
fsubl
xchg
test
jle
test
pop
jnp
fidivl
popa
and
mov
jecxz
xor
or
cltd
xchg
jg
dec
gs
testl
mov
enter
iret
cmp
enter
jne
div
mov
jecxz
add
xchg
rol
and
lds
mov
shrb
pop
rcrb
addr16
push
sub
andb
jne
ret
push
gs
imul
imul
fs
mov
popf
in
jl
ja
lea
notb
lret
das
out
push
add
das
ror
or
fnstenv
and
add
sbb
pop
int3
aam
xchg
cltd
cli
ja
inc
mov
inc
cmp
lds
xor
push
repz
cmpsb
mov
das
mov
mov
pop
mov
test
cli
jp
jmp
xor
xchg
jecxz
shrl
dec
shll
cmpl
jb
adc
adc
pop
imul
shll
outsb
notb
push
and
cltd
or
mov
outsl
xor
mov
mov
adc
sub
aam
in
xadd
pop
inc
roll
adc
arpl
mov
xor
cmpb
sub
jno
movsl
xor
inc
mov
and
es
inc
arpl
out
xchg
arpl
movsl
push
cmp
sub
xor
add
gs
imul
jmp
lods
push
sti
xchg
shlb
jb
notl
inc
adc
mov
cltd
test
data16
xor
or
test
in
add
xchg
jo
shrb
or
dec
sbb
and
outsb
dec
loop
add
sbbb
out
notl
mov
cltd
int3
out
aaa
sub
cwtl
add
fsubrs
pop
pop
lods
mov
shrb
xchg
dec
sbb
inc
mov
hlt
je
scas
mov
sub
cmpsb
pop
into
aas
imul
aaa
cmp
das
xchg
stos
cmp
mov
fsts
sarl
negl
xor
jmp
ret
pop
stos
shlb
jbe
enter
data16
xor
repz
in
mov
jge
ret
fnsave
lods
cmc
dec
push
inc
imul
je
cmpsb
leave
add
stos
inc
sub
sbbl
lock
and
int3
adc
inc
loopne
inc
pop
out
or
into
add
pop
and
pop
sub
and
hlt
push
cmp
scas
cmpsb
adc
sub
lock
cmpsb
hlt
repz
dec
aas
pop
and
popf
out
inc
xor
ret
sub
sub
mov
aad
sub
mov
rclb
mov
scas
sub
or
les
and
push
jns
sti
pop
adc
enter
or
push
sbb
cmp
insl
dec
fildll
shrl
aam
push
icebp
lret
das
mov
xchg
and
pop
js
mov
scas
xchg
pop
push
fucomi
lock
sub
pop
mov
mov
dec
sub
cltd
mov
andb
in
ljmp
cmpsl
cmpsl
mov
lods
or
popf
mov
or
insl
push
jo
shll
insl
cmpsb
push
ljmp
mov
stc
in
test
cli
std
pop
shl
mov
jb
mov
stos
into
inc
dec
mov
shlb
imul
jp
push
shrl
pop
andb
jno
pop
test
ss
cmc
ret
aam
mov
sbb
dec
insb
adc
shlb
sbbb
test
or
mov
pusha
cmp
sub
xor
popf
mov
pop
mov
fists
popf
jno
xchg
aad
in
mov
jno
fstpt
rcll
stc
mov
insl
lea
pop
fistpll
mov
ret
test
cmp
addr16
jge
or
xor
jmp
mov
push
sbb
cmp
adcl
mov
pop
cmp
dec
jp
lahf
and
push
stos
imul
dec
out
imul
lcall
pop
adc
std
ret
sub
test
push
mov
xchg
mov
int3
loope
in
xor
rcrl
adc
xor
mov
scas
pop
pop
hlt
add
loop
mov
xchg
mov
aam
or
nop
addr16
loopne
inc
out
cmpb
fst
mov
mov
decl
dec
lcall
pop
pushl
mov
test
push
popa
mov
add
and
sub
stos
xchg
or
sahf
mov
cltd
adc
stos
mov
xchg
xor
lods
inc
ss
mov
shll
push
fistpll
sbb
or
pushf
shl
xor
stc
cmpsl
repz
repz
dec
sub
cmc
rclb
cmpsb
shll
mov
popa
leave
xchg
inc
and
adc
sbb
decl
add
sub
or
cmc
mov
xchg
dec
jg
ds
fmuls
lods
rcrb
sbb
inc
js
sub
pop
iret
ret
xchg
xchg
fwait
mov
popf
jp
sbb
push
pop
pop
aad
orl
cmpsb
mov
fsubrl
push
and
shll
int3
cmp
pusha
mov
mov
push
cmp
pop
xlat
mov
dec
push
hlt
ds
ret
fisubs
pop
dec
clc
push
pushf
rclb
jg
cmc
xchg
or
in
pop
adc
jnp
push
fcmovne
cli
xlat
in
pop
sahf
iret
cmp
push
scas
adc
pshufw
jmp
xchg
movsl
mov
cmp
xor
stos
jne
adc
and
in
mov
dec
call
push
and
pop
sub
adc
adc
and
out
ss
clc
idivl
lds
mov
add
sub
repz
rclb
es
and
rorl
pusha
ficoml
xor
or
pusha
jnp
add
cmp
adc
es
mov
call
pop
in
insb
cmp
outsb
and
nop
xor
inc
jno
jo
sub
xchg
outsb
popf
js
mov
fs
call
mov
fs
inc
xor
ja
cmc
lds
neg
cld
rorb
popf
jo
xor
jle
jg
and
pop
jl
das
loop
push
add
notb
mov
lods
push
mov
mov
inc
es
dec
insl
adc
enter
inc
cwtl
and
das
sbb
ficomps
lret
or
aam
test
add
jp
or
xor
push
lock
int
int
sbb
flds
xor
pop
jne
das
push
mov
scas
mov
je
xor
movsb
mov
test
mov
inc
shlb
js
repnz
and
lods
shrl
inc
lret
xor
sub
test
pop
mov
xor
adc
inc
movsb
and
test
addr16
sub
sub
ljmp
jmp
lcall
sub
and
mov
std
sub
ja
in
pop
or
and
push
shrl
mov
push
mov
out
xchg
jb
jle
pop
enter
cmp
push
mov
push
popf
pop
or
mov
sbb
and
dec
into
mov
scas
push
mov
add
enter
or
out
mov
jg
dec
and
pushf
jno
pop
inc
call
imul
jg
cmpsl
mov
sbb
mov
jge
pop
pop
cmp
xchg
mov
inc
mov
dec
lods
adc
mov
iret
jmp
loopne
aaa
push
add
cmovns
je
xchg
pop
dec
imul
lea
shll
divb
push
shl
inc
xlat
sub
ret
adc
lods
sub
dec
adc
pop
cmp
cmp
mov
sahf
jmp
cmp
or
mov
jbe
xchg
xchg
rolb
dec
into
rorl
mov
add
jbe
clc
fmulp
sub
sbb
stc
push
fisttpll
xor
push
adc
lds
jo
outsb
ljmp
loopne
push
bound
cmpsl
jecxz
cmp
jecxz
jg
inc
xor
imul
mov
insb
push
and
lret
push
scas
mov
add
and
scas
sbb
mov
dec
xchg
testl
mov
and
lret
sub
cmp
test
adc
xchg
xor
lret
mov
pop
mov
dec
adc
inc
xchg
jae
inc
push
cmpsl
lods
out
sub
mov
loope
int3
les
add
jnp
movsb
adc
shl
sbb
and
mov
cmp
mov
xchg
inc
sub
aam
jno
and
sub
stos
mov
in
roll
mov
lods
sub
mov
cld
leave
sbb
lcall
adc
jnp
sbb
xor
add
pushf
scas
sahf
lret
cli
mov
mov
fprem1
jae
sbb
inc
xchg
dec
sub
sti
pop
dec
ss
pop
test
inc
adc
pusha
insb
pop
add
jnp
push
icebp
mov
mov
push
xchg
call
loope
mov
stos
mov
cmc
mov
sub
push
hlt
aas
sub
dec
adc
xchg
loop
arpl
fsts
sbb
adcl
mov
ss
mov
jae
js
xchg
fwait
xchg
xchg
incb
jmp
iret
pop
divb
mov
sub
hlt
sahf
dec
add
call
ja
cmp
push
pop
addr16
jecxz
aaa
testb
movsl
lahf
pop
aad
out
in
nop
xor
mov
push
pop
pop
ss
ja
and
aam
inc
sbb
mov
iret
stc
pop
xor
lds
sbb
movsb
add
xor
pop
push
lret
inc
jmp
popa
fwait
mov
jmp
and
xor
or
popf
loope
fidivrs
pop
repz
fwait
lods
mov
mov
mov
dec
jns
mov
fisttps
jle
arpl
stc
imul
adc
mov
mov
movsl
shlb
js
mov
fwait
add
mov
cmp
ret
test
aam
scas
mov
lods
in
jne
sti
cmp
xchg
sbb
scas
jecxz
ret
mov
xor
out
jecxz
sub
test
mov
hlt
push
ss
stos
dec
or
jne
aam
dec
out
and
lea
out
cmp
lret
sarb
sbb
lea
mov
push
sbb
cmp
mov
movsl
loop
fs
insl
cmp
in
das
insb
xchg
sbb
in
lds
mov
loopne
add
push
sahf
push
pop
lcall
inc
rcrb
xchg
faddp
dec
pop
jns
jns
lods
cli
add
pop
add
jge
gs
jl
push
cwtl
lods
roll
jnp
pop
stos
jns
cmc
jne
xchg
xchg
cmp
fdivl
ss
push
cmc
mov
aaa
out
xchg
jns
popa
xor
dec
rol
or
fldenv
das
push
ret
lock
rcrl
movntps
cmp
add
jnp
aam
shr
mov
and
and
fiadds
das
icebp
call
jle
xchg
mov
mov
xor
dec
je
jle
in
andb
inc
ljmp
jnp
and
cmpsb
mov
ss
push
aaa
add
pop
add
cld
push
es
dec
cmp
dec
cmp
mov
loopne
cld
push
repnz
negb
push
push
sbb
push
sahf
sub
test
out
or
mov
xchg
sbb
int3
cmpsl
jns
orb
je
lds
jb
addr16
adc
outsl
sub
aas
sbb
jle
loop
and
jge
insb
cld
lods
test
xchg
mov
push
cmpb
or
or
inc
sub
fstpt
push
mov
cmpsl
pop
push
sub
cmp
mov
add
and
mov
xchg
and
ficomps
mov
ljmp
hlt
subl
cmpsl
cmc
outsb
add
and
ret
lahf
call
gs
leave
ljmp
addr16
push
mov
pop
out
mov
pop
cmp
outsl
aam
lods
dec
idivl
movsb
mov
fisttpl
cmpsl
mov
icebp
je
js
mov
lret
mov
fdiv
add
lahf
mov
mov
lock
mov
and
sub
stos
inc
sbb
dec
mov
add
sahf
sbb
aaa
into
xor
mov
loopne
pop
dec
cmp
mov
mov
setae
loope
mov
add
add
mov
cmpsb
daa
popf
outsb
inc
aad
adc
adc
push
iret
hlt
cmp
ret
leave
sub
test
pop
jbe
popf
dec
aaa
mov
xchg
loope
leave
iret
aaa
jno
mov
lds
rcrb
scas
call
repz
popf
adc
mov
mov
cmpsl
jb
into
mov
pusha
inc
cltd
in
pop
dec
mov
sub
mov
sub
cmc
test
shll
jle
stos
and
cli
sbb
sub
jnp
push
mov
mov
xchg
pop
lret
shll
inc
cmp
iret
pop
xchg
jg
subb
add
shlb
sbb
mov
dec
mov
lea
xor
test
mov
and
pop
cld
pop
dec
loope
jae
mov
aad
lea
mov
insl
aad
sbb
outsl
data16
and
mov
mov
testb
jnp
mov
pusha
push
repnz
push
nop
xlat
and
mov
lock
xor
and
and
mov
repnz
cli
xchg
hlt
cmp
lock
leave
daa
push
sti
and
test
stos
fisttpll
and
inc
out
popa
addr16
iret
xor
enter
xor
push
dec
out
jae
call
out
xlat
pushl
or
ja
cmc
sahf
xchg
push
subl
movsl
pop
adc
mov
pushf
mov
stos
adc
sub
icebp
push
mov
lods
xchg
or
push
inc
mov
push
out
jo
inc
pop
sti
enter
repz
push
and
cld
insl
cmpsb
pop
xchg
pushf
sahf
imul
lock
orb
jnp
dec
lock
pop
inc
mov
jmp
lock
ljmp
lret
push
insl
mov
cltd
jle
dec
xchg
jp
inc
test
ss
mov
push
mov
push
dec
das
inc
daa
adc
xor
mov
out
mov
xchg
js
outsb
daa
push
enter
js
loopne
sbb
iret
cs
inc
das
jmp
adc
mov
jp
repnz
iret
clc
mov
test
dec
dec
pop
push
adc
fidivs
mov
pushf
adc
and
or
mov
jle
cmpsb
push
pop
sahf
add
js
inc
add
cmp
mov
daa
jbe
test
in
pop
xor
lahf
sub
ja
mov
imul
jp
pusha
icebp
enter
pop
flds
jecxz
cmp
xchg
int3
aam
imul
inc
push
sub
in
stc
push
inc
inc
xchg
insl
sbb
adc
std
mov
sub
push
push
dec
scas
jg
xor
adc
in
xchg
jl
or
mov
push
je
js
jmp
inc
sahf
repnz
cmpsl
jnp
rcrl
adc
rcl
fnsave
and
out
lods
cmpsl
add
mov
fcmovne
push
es
imulb
push
outsb
push
sbb
lahf
data16
leave
loop
rorl
dec
inc
jnp
xchg
mov
out
or
repz
call
cmp
sbb
les
pop
xchg
push
test
es
pop
bound
push
mov
pop
xchg
adc
jb
xchg
inc
in
jmp
mov
or
das
sbb
fcomps
rcrl
and
inc
mov
cmp
std
test
mov
mov
clc
fwait
push
int
mov
stos
imul
sub
or
bound
jle
out
xchg
loope
mov
dec
sbb
fadds
push
je
sar
rorl
sub
mov
enter
xchg
push
shll
cmp
notb
mov
sbb
sbb
daa
xchg
cmc
xchg
ror
pushf
dec
daa
jp
stos
xchg
cmc
cs
enter
or
repz
int
mov
jge
ds
push
inc
inc
jle
push
in
sub
fcom
jne
clc
xlat
cltd
xor
test
imul
pusha
mov
and
cmpl
or
popf
jbe
xchg
or
mov
cmp
adc
lock
or
push
icebp
repz
ret
std
in
adc
xor
str
mov
bound
xchg
mov
and
and
enter
and
js
xor
fistpll
in
xchg
sbb
cmp
dec
mov
ja
adc
ljmp
mov
jne
sarb
push
jns
sub
icebp
aam
add
test
mov
shrl
cmc
cmc
xchg
xchg
jecxz
rcrb
jmp
test
or
lret
cmpsb
push
sbb
imul
orl
mov
mov
mov
lods
push
jg
or
or
xlat
adcb
rorl
fadds
dec
mov
and
jns
lea
test
xchg
mov
mov
jae
mov
add
and
int3
les
cmp
rorb
jo
das
gs
push
and
pop
and
xor
shrb
cmp
cld
dec
inc
sbb
pop
pop
scas
mov
test
lods
ljmp
dec
dec
aad
sbb
lahf
ret
cmp
cs
scas
inc
xchg
dec
stc
xchg
stos
mov
push
and
xchg
jno
rcrl
dec
pop
or
iret
mov
fdivrs
pop
or
or
cmp
jne
or
sub
cmc
mov
lods
jg
in
jnp
popf
idivl
daa
add
xor
pop
mov
inc
sbb
jae
dec
sbb
lret
sub
icebp
addr16
les
loopne
sbb
mov
rolb
in
ret
dec
fistpl
arpl
divb
out
lods
mov
pop
movsl
lret
sti
icebp
dec
pushf
stos
call
xchg
mov
ficoml
mov
dec
shrl
mov
fcmovne
pop
lahf
nop
ret
lea
or
out
sahf
fsqrt
and
pop
cmc
and
mov
mov
lods
xlat
dec
inc
stos
add
mov
dec
sti
in
xchg
jne
sbb
or
jg
leave
pop
in
int
pop
shlb
cmp
cmp
push
out
ret
inc
out
lahf
out
out
xor
insl
addb
jmp
jns
rcr
pop
lock
hlt
cld
ss
xor
push
inc
inc
shll
add
push
jmp
push
adc
subb
mov
xchg
sahf
test
lret
test
call
sub
sub
mov
add
out
cmpsb
in
outsb
xchg
in
jmp
cmpsb
pop
cld
and
fnstcw
test
pop
mov
cld
push
and
imul
outsl
rcll
hlt
sbb
or
cmp
inc
push
dec
add
or
or
adc
lds
or
mov
xor
mov
and
lahf
out
xchg
scas
cmpsl
pop
repnz
mov
rep
add
stc
sbb
out
xor
pop
or
insb
jmp
test
lock
movsb
xor
mov
jbe
cmp
cmpsl
mov
xor
mov
add
jbe
sbb
cmp
push
sbb
jl
mov
in
inc
mov
ja
int3
cmpsb
js
mov
rolb
xor
test
fisubrs
fsincos
fidivrl
inc
or
pop
add
fsts
test
cmpsb
pop
xchg
aas
lds
das
push
cmpsb
sbb
pop
ss
mov
mov
fs
sbb
sbb
popa
mov
icebp
cld
mov
pop
push
lock
xchg
test
dec
out
cmpsl
andl
nop
pop
add
jge
movsl
jb
and
outsb
xchg
popa
fcomps
mov
xchg
fistl
cld
jg
imul
xor
fimuls
pushl
lahf
adc
pop
jo
lcall
jae
rcrb
xchg
sbb
and
jbe
incb
repnz
mov
push
jl
mov
mov
pushf
add
imul
nop
mov
cs
mov
clc
es
xor
cld
push
jns
and
push
cmp
jae
aaa
mov
adc
movsl
mov
inc
xchg
jp
sbb
xchg
pop
aas
ficoml
jmp
out
pop
aam
dec
hlt
ds
ljmp
jno
test
gs
or
mov
fisubs
in
mov
add
adc
dec
inc
fisttpll
push
jo
or
fsubl
inc
cmp
sahf
jno
or
rcll
xor
push
dec
imul
xchg
adc
pushl
sub
into
jecxz
cs
xor
stc
addr16
jge
mov
dec
add
pop
jmp
aam
pop
setb
lret
std
aaa
adc
ja
sub
stos
out
push
arpl
and
scas
adc
cwtl
je
xchg
mov
inc
hlt
mov
mov
ja
jmp
loope
pop
sbb
fsubr
jge
push
mov
and
sbb
aad
cltd
movsl
mov
fldt
or
pcmpgtd
ds
add
popa
jae
and
jb
mov
adc
mov
das
or
cmpsb
inc
loopne
jecxz
mov
pop
cmp
cmpsl
lahf
pop
sbb
xor
nop
sbb
xchg
mov
test
jmp
pop
insb
lock
xchg
pop
inc
mov
stos
dec
fcmovnu
in
push
insl
jl
jp
test
nop
sub
push
lods
call
pop
cmp
lods
sbb
mov
aas
int
std
mov
mov
push
out
dec
mov
push
and
sub
imul
enter
jae
push
sahf
mov
xchg
push
arpl
inc
leave
mov
lea
dec
mov
jbe
lods
or
popf
aad
enter
mov
adc
push
popa
fmuls
addr16
pop
adc
in
lahf
mov
jl
out
gs
lock
addr16
out
mov
sbb
cs
shll
scas
into
fst
fcmovb
mov
test
inc
push
mov
adc
movsl
and
test
adc
cmp
xchg
js
je
frstor
loop
fcomp
test
or
lcall
push
add
mov
daa
mov
daa
or
dec
cmpsl
jae
push
ret
xor
push
filds
inc
lds
sub
lods
lahf
add
sub
int
out
and
cmp
sub
or
inc
ret
movsl
jns
jmp
outsb
cltd
push
dec
sbb
adc
mov
pop
dec
mov
stos
aad
cmp
aam
test
jmp
jno
adc
push
imul
sbb
outsb
push
mov
sbb
mov
dec
enter
stc
in
hlt
aam
add
roll
push
pop
sarb
or
mov
ret
jns
into
sub
lret
mov
lods
push
addl
push
push
outsl
push
jb
jl
pop
dec
test
jns
pop
sbb
jge
sbb
cs
or
test
icebp
iret
les
inc
jno
pushf
jmp
push
push
push
loop
dec
sbb
test
test
sub
aam
xchg
add
xor
inc
xchg
das
enter
jae
sar
sbbl
jg
sarl
nop
xor
andl
inc
bsf
push
xor
fldl
repnz
sub
sbb
in
lret
push
notl
push
notl
mov
js
addb
inc
add
sbb
repz
push
and
or
dec
imul
push
inc
push
pusha
inc
mov
aas
or
push
in
gs
cltd
pop
mov
sub
jp
and
sub
inc
sub
loop
or
sub
mov
jp
and
out
in
dec
mov
psubusb
enter
and
ja
repnz
data16
call
hlt
cwtl
jns
push
leave
out
cmp
dec
sahf
xor
sbb
mov
mov
lods
fmuls
es
sarl
inc
jnp
int
pushf
arpl
mov
dec
push
cmpsb
xchg
add
in
push
or
jmp
mov
out
leave
fcmovnb
mov
adc
mov
cmp
out
in
or
mov
xor
jno
dec
dec
leave
movsl
ret
sub
inc
ret
sub
sar
cmpb
aad
cwtl
xchg
cmp
xorl
adc
inc
add
cmc
ja
js
scas
xor
sahf
pop
mov
xchg
sub
lods
and
add
std
mov
xor
lcall
and
test
and
inc
jmp
fs
movsl
jae
out
int
cmc
dec
inc
adc
and
nop
nop
sub
dec
ret
ffreep
lcall
out
and
xchg
jg
sub
pushf
cmp
orps
in
int
scas
loop
lahf
push
sbb
push
mov
pop
movsl
int
mov
mov
mov
pop
or
fwait
and
outsb
cmp
jb
push
out
movsb
xor
jae
shlb
mov
lahf
leave
test
push
and
cmp
lds
cld
arpl
mov
scas
xor
pop
ljmp
cmpsb
and
shrl
adc
or
push
das
div
sbb
cli
or
aas
pop
xor
mov
and
mov
rclb
jbe
jnp
insl
or
push
mov
fadds
sub
sti
cmpsl
lock
mov
mov
jle
and
jno
push
aam
out
in
lcall
enter
in
xor
dec
mov
and
adc
cmpsb
inc
mov
adc
mov
cwtl
stos
xchg
jmp
push
in
out
pop
or
mov
jae
aaa
sub
dec
ss
mov
repz
and
fstpl
popa
jo
sahf
out
in
into
xchg
dec
fwait
call
sbb
dec
gs
dec
loop
sbb
shrb
dec
dec
cmpsl
sbb
or
lds
je
in
cs
lret
adc
dec
jp
sbb
mul
and
gs
mov
adc
inc
xlat
sub
jge
and
test
mov
lods
leave
mov
popf
psadbw
insl
mov
aaa
pop
and
mov
imul
adc
imul
sub
aad
sub
out
or
add
lahf
push
iret
sub
mov
mov
jmp
scas
lea
dec
inc
xchg
pop
lock
xor
arpl
sar
enter
shrb
inc
or
inc
out
fisubrs
mov
pusha
inc
fldl
mov
pop
inc
addr16
out
cli
test
sub
pop
movsb
adc
ljmp
mov
ret
add
xor
mov
jbe
sub
jecxz
outsb
divl
sbb
jae
pop
imul
stc
mov
cmpsb
mov
mov
inc
lcall
scas
push
cld
test
push
dec
cmpsb
in
test
adc
sahf
loope
jb
mov
scas
or
mov
call
test
mov
aas
mov
out
les
cmp
fcoml
pop
xor
das
out
lock
cld
imull
or
add
pop
xorl
sub
ss
cmp
movsb
std
push
sub
push
pop
ficoml
aaa
cmpl
out
in
jp
fdivr
mov
jle
insb
in
in
int
gs
dec
dec
cmp
push
sbb
fadd
call
xchg
xchg
xchg
pop
cmpl
xor
mov
and
mov
jne
dec
mov
sbb
xor
xor
out
pop
mov
and
mov
lods
cmp
ficoms
pop
xchg
jle
dec
xchg
inc
in
lods
pop
adc
pop
xchg
aam
inc
aad
cmpsl
scas
dec
leave
jns
cmp
sub
push
cld
inc
popf
int
inc
lods
inc
xchg
xchg
loopne
xor
cmp
lret
sbb
dec
pushf
mov
test
and
xchg
mov
mov
xor
fs
loopne
mov
rcll
add
or
dec
jno
dec
outsl
mov
lds
into
adc
test
cmp
and
dec
movsb
push
cli
dec
out
mov
xchg
out
fimuls
int3
cmc
inc
cmp
sub
insb
sarl
imull
leave
inc
or
cmp
sub
inc
xlat
jp
mov
mov
fnstcw
adc
out
out
ret
lods
sbb
scas
sbb
and
inc
add
pop
jg
dec
mov
pusha
gs
xchg
les
xor
shrb
push
movsl
popa
jno
in
in
cld
jno
add
out
lods
xchg
das
lock
dec
mov
fidivs
insl
sub
iret
mov
and
lea
rorl
push
cmp
lds
sub
pop
dec
cmc
or
adcl
loopne
fisttps
imul
mov
cmc
testb
aaa
fildl
inc
adc
test
or
in
lcall
hlt
push
loopne
std
jmp
cmp
push
clc
test
sub
dec
mov
jge
pop
add
or
or
xorb
or
lods
pop
call
xchg
out
in
adc
test
les
insl
loopne
fbld
xchg
cli
mov
ret
mov
shl
loopne
clc
push
mov
push
ret
movsl
mov
and
mov
fwait
mov
or
xchg
xor
dec
add
ljmp
shl
shll
lcall
jp
jge
aad
out
mov
bswap
xchg
sub
outsl
rclb
cltd
cmpsb
mov
mov
setns
mov
pop
inc
adc
mov
std
adc
hlt
pop
cltd
xor
inc
cmp
mov
pop
inc
pushf
into
fbstp
mov
and
or
mov
out
js
add
push
sub
push
std
movsl
fwait
mov
out
xchg
les
dec
xchg
and
inc
push
incl
xlat
push
cld
scas
imul
adc
or
pop
nop
jno
or
dec
sub
into
and
xchg
in
aam
shl
pusha
push
daa
lahf
cltd
inc
inc
icebp
jns
mov
jne
fsubrl
movsb
mov
repnz
lret
push
inc
dec
pusha
stos
mov
cli
sbb
and
decl
iret
adc
cmp
adc
jg
mov
stc
ljmp
mov
out
addr16
mov
adc
pop
clc
in
cmp
sub
add
adc
into
jo
mov
xor
adc
lea
jo
clc
jnp
jbe
les
push
mov
mov
dec
fsubrs
outsb
insl
pop
cmp
mov
nop
xor
inc
pushf
fldcw
std
lahf
xor
and
pop
mov
xchg
xchg
stos
cwtl
xchg
lea
cmpsl
subb
aas
cmp
sub
fwait
cmp
in
dec
mov
and
cmpsl
push
dec
ds
xchg
cmp
cmpsl
arpl
xor
sbbl
pop
dec
pop
movsl
hlt
push
stc
ds
inc
push
bound
add
adc
les
adc
js
jae
add
xor
int
pop
jge
jle
push
popf
xchg
mov
fildl
and
push
in
fnsave
cmc
out
mov
ret
insb
add
jns
jecxz
lret
or
sarl
ja
add
ss
adc
jnp
pop
add
push
xchg
daa
inc
mov
sahf
sub
movsl
js
sub
push
pop
inc
cmc
fistl
xchg
dec
ja
mov
fisubl
arpl
aad
fidivrs
test
out
and
mov
bound
hlt
aaa
sbb
ret
jnp
mov
jae
sub
decl
dec
in
scas
inc
imul
pop
addr16
cmp
bound
sub
mov
stos
stos
adc
pop
lahf
test
adc
dec
mov
sbb
jg
fldcw
pop
push
add
int3
jecxz
pop
xor
pop
and
orl
pop
int
jp
es
mov
scas
cltd
pop
clc
xchg
push
jne
mov
fs
or
push
leave
out
cli
aad
fs
xchg
push
mov
das
dec
add
cmp
mov
imul
sub
cmp
leave
sub
mov
ja
sbb
cli
mov
cmp
scas
cs
iret
mov
pop
movb
and
xchg
mov
pusha
push
in
dec
lret
jge
lock
adc
es
sbb
xlat
lock
out
outsb
inc
push
movl
leave
movsb
imul
inc
xor
adc
mov
sti
lods
lock
mov
jle
jae
or
sbb
and
ffreep
rcl
fwait
inc
jnp
xor
negb
pushf
out
xchg
jge
jmp
xor
cwtl
lock
scas
sub
adc
mov
bound
rcl
icebp
test
shlb
xor
rcll
aaa
aas
shlb
repnz
cmp
sbb
imul
push
dec
mov
sub
jmp
and
lods
loope
dec
testb
adc
cmp
mov
mov
xor
xchg
call
xor
pop
sti
or
mov
xchg
jge
loop
mov
outsb
mov
xchg
mov
jg
pop
repnz
dec
call
aad
cltd
pop
sbb
and
lret
pop
stc
mov
inc
test
mov
cmpsl
outsb
ficompl
out
aas
xor
outsb
ss
jns
loop
insb
lahf
mov
push
push
in
fwait
movsb
jb
ss
sbb
or
pop
clc
xlat
cmp
dec
mov
xor
mov
mov
fistps
aaa
insb
pop
stos
mov
pushf
pushf
es
in
stc
adcb
subl
movsl
adcl
jne
jecxz
and
sub
mov
dec
fbstp
ds
mov
pusha
pop
xor
pop
sub
pop
jmp
repnz
jle
cmp
pop
out
pop
add
mov
in
lret
ret
daa
sbb
int3
leave
inc
dec
dec
jecxz
and
ds
jno
int
sti
cltd
pop
iret
lods
inc
or
mov
rcll
leave
sbbb
lds
xchg
adc
das
mov
int3
stc
xchg
xchg
pop
sarb
int
lods
iret
out
sub
repz
pushf
iret
sub
aad
mov
ds
js
in
or
push
pop
sub
addr16
lcall
shrb
sbb
cmc
xchg
sub
sbb
fistpl
sub
cmp
and
xchg
or
xor
inc
sbb
sbb
push
aaa
mov
or
push
jne
jno
sbb
mov
jp
pop
scas
dec
lods
addr16
ljmp
stos
pop
xor
insl
mov
and
lds
xlat
jecxz
inc
mov
mov
sub
inc
fwait
adc
sti
pop
xor
pop
and
add
pop
imul
push
out
cmp
jg
jae
mov
inc
inc
add
sti
shll
rorb
jle
sahf
or
xchg
pop
lahf
mov
push
mov
and
sbb
xor
sub
add
pop
je
cwtl
push
push
subb
dec
push
test
push
push
xchg
sbb
icebp
push
inc
dec
out
dec
push
cmpsb
push
div
sbb
sub
je
cmp
inc
pop
sbb
jmp
ret
dec
dec
jne
bound
cli
dec
fisttpll
loopne
jp
dec
loope
mov
stc
shll
out
mov
std
divb
cmp
mov
mov
xor
aas
pop
flds
ljmp
mov
gs
dec
popf
dec
je
lds
and
inc
imul
popa
and
pop
pop
mov
xlat
out
mov
push
in
xlat
and
mov
mov
stos
lret
pop
add
lret
xchg
sbb
ret
pop
ljmp
xor
cwtl
repz
jl
jo
add
lret
stos
pop
movsb
push
xchg
mov
sub
sub
add
inc
out
int
fnsave
sbb
mov
add
pop
adc
cmp
daa
xlat
adc
mov
movsl
mov
cmp
mov
adcb
inc
jmp
and
imul
adc
jmp
addr16
dec
sbb
mov
xchg
fdivp
mov
aas
adc
xchg
mov
adc
adc
movsb
stc
jns
mov
mov
mov
es
jge
sahf
and
mov
pop
sar
pop
xor
or
addr16
push
add
in
cmp
lcall
repz
gs
mov
cmp
out
out
or
xor
imul
push
and
outsl
inc
dec
push
inc
movsl
jecxz
out
inc
sbb
imul
fldcw
xchg
repnz
leave
out
fisubrs
add
inc
gs
das
lcall
lret
mov
pop
cmpsb
dec
xchg
out
es
mov
dec
out
mov
stc
jnp
ret
dec
call
iret
sahf
andl
cmpsl
pop
xor
leave
ficomps
ret
filds
stos
mov
imul
stos
push
das
aaa
loop
nop
mov
lahf
pop
adc
cwtl
dec
aas
stos
loop
es
adc
xor
std
sbb
sbb
inc
jp
xchg
pop
adc
pop
dec
jg
mov
fs
loopne
sti
das
fcmovnb
je
jo
lahf
xor
mov
sub
shll
addr16
jae
daa
mov
jmp
xchg
inc
xchg
stos
dec
lea
mulb
div
es
xchg
jb
sbb
mov
adc
mov
or
ds
mov
cmp
aas
fiadds
xchg
mov
push
adc
xchg
stos
add
in
push
push
pushl
aaa
pop
jecxz
iret
inc
fnstsw
bsf
test
hlt
xchg
out
jp
pop
stos
sub
ja
outsl
insl
pop
test
leave
iret
push
and
push
pop
add
xlat
cmc
jnp
scas
push
sbb
mov
push
sub
add
cmpsb
xor
subl
dec
enter
mov
pop
adc
push
xor
or
push
sub
adc
nop
and
cmp
mov
icebp
es
pop
adc
cmpb
and
pop
pushf
sub
sbb
ss
cmp
ret
mov
decb
mov
mov
sbb
fadds
outsl
cmp
pop
orb
bound
or
lcall
mov
sbb
dec
mov
stos
mov
pop
scas
inc
leave
fidivl
push
push
lahf
sbbb
pop
test
mov
fidivl
mov
inc
mov
or
jecxz
insl
lahf
mov
lcall
and
jp
fmull
push
jae
add
cld
addr16
xchg
int
mov
pop
ljmp
sbb
cmp
jp
mov
out
xchg
jae
xchg
nop
sub
daa
xchg
les
mov
sbb
sbb
mov
and
mov
pop
inc
add
cld
dec
mov
imul
scas
rcrl
mov
xchg
lds
jp
divl
mov
push
jecxz
nop
test
mov
or
fsubs
or
int
std
jmp
cs
mov
pushf
adc
in
imul
rcrl
push
jbe
adc
mov
aas
push
lods
insl
sarl
aad
aad
cmp
into
fidivrl
in
mov
iret
es
mov
in
mov
clc
xorb
and
jl
ss
fwait
fs
and
stos
jge
addb
es
popa
jecxz
xor
fwait
cmp
rorb
sbb
xchg
cmc
inc
lods
lret
jmp
xor
jne
insl
loop
cltd
mov
sbb
fstl
repnz
jecxz
add
clc
stos
inc
popf
pop
movsb
ds
cmc
mov
jno
pop
mov
sbb
mov
das
jae
test
ds
imul
data16
stos
mov
fwait
jmp
jmp
das
fisttps
push
hlt
xor
pop
add
call
jmp
mov
std
sbbl
lahf
push
push
sub
xor
rcl
dec
shlb
daa
int3
dec
lock
roll
sub
loopne
ret
gs
fidivrl
mov
enter
cmp
ds
mov
repz
jecxz
pop
lds
dec
dec
jl
lahf
sub
pop
fbld
popa
sbb
movsb
nopl
ret
pop
fcoml
mov
sbb
in
sub
inc
lds
enter
pop
test
les
xor
mov
pop
clc
aam
repz
cwtl
mov
jno
jge
cmp
nop
push
jne
cwtl
shll
sbbl
jecxz
push
shlb
sbb
jg
xchg
fldt
jns
or
cwtl
xchg
addl
sub
movb
mov
pop
mov
out
ret
out
adc
mov
imul
and
imul
push
mov
mov
cld
cli
dec
dec
jo
add
stos
mov
jp
outsb
sbb
cwtl
lods
in
frstpm(287
pop
call
sbb
inc
clc
loop
lret
and
adc
mov
divl
dec
xchg
out
mov
aam
leave
scas
ret
or
push
ss
dec
mov
mov
mov
lods
mov
mov
inc
js
fldt
jl
fcmovnbe
enter
jbe
pushf
push
sub
shlb
lcall
je
mov
sbb
repz
mov
mov
fiaddl
sbb
mov
shrb
ret
cli
mov
cmp
cmp
cmp
and
cmc
sbb
int
add
inc
dec
gs
out
mov
js
popf
pop
out
dec
nop
insl
ret
test
test
mov
daa
loop
in
es
hlt
or
mov
lcall
movsb
rclb
push
jne
xchg
es
sub
int3
cs
ja
xor
insl
jmp
fdivrl
aaa
icebp
aaa
mov
dec
inc
dec
xor
aaa
sarb
pushf
adc
pop
jbe
in
stos
mov
adc
push
pop
test
mov
mov
cmp
mov
cli
inc
mov
adc
jbe
fwait
adc
push
sbbb
push
mov
sbb
pop
rep
mov
add
push
xlat
cmpsb
je
inc
and
out
int
mov
pop
inc
inc
pop
jg
inc
fcom
or
xchg
and
pop
mov
pop
gs
cli
pop
insb
push
ret
jno
mov
aaa
dec
pop
rol
clc
xor
adc
sbb
gs
out
cmp
pushf
mov
fidivrl
outsl
int
mov
inc
xchg
decl
pop
push
pop
mov
push
sbb
cmc
shlb
das
stos
aas
pop
pop
lock
scas
inc
mov
pop
and
adc
fisttpll
movl
adc
sub
pop
call
pop
mov
and
jnp
mov
mov
repz
and
aam
xor
enter
scas
lcall
fwait
mov
add
imulb
addr16
inc
jp
push
inc
lcall
fdiv
sbb
shr
push
loope
fstps
cwtl
pushl
stos
outsl
popa
mov
jl
movl
sub
jno,pn
in
popf
add
inc
pop
mov
add
and
into
dec
cli
cmp
in
fwait
jno
adc
adc
mov
repz
shlb
clc
pop
pop
jo
sub
pop
add
fstp
clc
movsl
and
adc
push
test
test
mov
sub
mov
test
movsb
adc
pusha
xor
cmp
sub
push
fcos
jl
pop
inc
dec
loope
test
pushl
cs
stos
addr16
adc
and
dec
lods
fs
sub
sti
in
enter
mov
push
push
adc
cmp
mov
addr16
sahf
xchg
jo
adc
pop
lock
mov
inc
fsubr
xor
in
xor
fisttps
and
ret
shrl
xor
xor
icebp
fstps
mov
fcomp
jl
sub
jecxz
mov
adc
sub
out
fisubrs
cmp
add
cmp
arpl
dec
imul
negb
stc
sahf
xchg
sahf
std
aaa
je
lret
gs
mov
or
adc
lret
jo
jne
inc
mov
lds
sub
hlt
pop
fldl
dec
xchg
add
lcall
outsb
inc
mov
dec
andb
inc
xchg
pop
das
push
clc
mov
in
ds
cld
xor
and
cwtl
jge
fdivl
dec
mov
jl
lcall
xlat
xor
test
and
lock
rolb
cmp
cmpsb
jp
add
nop
int3
js
aaa
lods
ds
jecxz
add
jmp
loopne
push
mov
lcall
xchg
sbb
xlat
idiv
jecxz
in
scas
dec
sub
les
cmp
dec
mov
ja
mov
dec
dec
mov
call
jae
stos
xchg
lock
xchg
fimuls
lea
xor
xlat
test
dec
in
dec
dec
xorl
mov
mov
add
mov
cmpsl
loope
lret
mov
imul
xor
mov
fucomip
enter
inc
icebp
mov
mov
sub
je
test
jg
daa
or
xchg
mov
push
arpl
jnp
jo
xor
in
pop
fbld
push
mov
loope
jg
adcb
dec
ret
aam
mov
lods
mov
and
xor
mov
sar
loop
xor
movsl
addb
icebp
xor
shlb
dec
inc
faddl
sub
push
mov
sti
cmp
in
adc
mov
mov
fcomi
mov
push
add
inc
or
jg
addr16
clc
data16
ss
cmp
ja
mov
inc
stos
cmp
mov
adc
scas
testb
jns
and
mov
ret
or
fistpl
in
ja
pop
xchg
and
sbb
loope
inc
cmc
push
xchg
jl
jnp
mov
out
lret
pusha
sub
inc
dec
xchg
inc
push
out
or
imul
pop
shl
inc
popf
push
loop
jmp
fisubl
in
stos
mov
pop
sub
jne
xchg
rcll
clc
imul
cmc
inc
ret
stos
sbb
or
adc
scas
fcmovbe
mov
das
push
sahf
cmpb
mov
jmp
test
push
jmp
in
xchg
lods
inc
mov
sbb
clc
imul
jle
xor
ss
and
cwtl
rcl
sub
arpl
sarb
add
shlb
inc
lds
sub
ja
or
fsubl
and
push
jnp
push
lods
jne
mov
adc
andl
fwait
push
rorb
mov
addr16
arpl
sub
xor
xor
movsl
mov
push
jbe
mov
add
mov
xor
add
sub
cmc
mov
mov
jl
xor
out
push
pop
pop
in
cmp
lret
test
sbb
mov
daa
push
xor
xor
or
jbe
mov
or
push
fs
out
rcll
imul
xchg
nop
adc
and
test
imul
xor
int3
mov
cmp
mov
xchg
push
out
xchg
or
repz
stc
leave
aaa
xchg
fwait
xchg
movsb
xor
inc
movsl
pminsw
pop
ss
movsl
pop
xchg
and
inc
push
jmp
dec
inc
mov
fnsave
pop
xor
sub
cld
inc
dec
nop
jnp
mov
inc
sub
cltd
sahf
inc
jecxz
popf
loopne
mov
push
daa
je
xchg
jnp
in
or
sub
addr16
adc
or
fcoml
stos
dec
sti
gs
mov
sbb
bound
lods
fnstcw
shl
sahf
and
and
inc
imul
mov
test
dec
aam
cmp
xchg
jbe
out
dec
or
jg
outsb
or
mov
das
cmc
cmp
mov
jne
jp
rclb
iret
cmp
and
pop
adc
jo
pushf
ja
jle
sub
jmp
push
inc
mov
data16
xchg
into
subb
cmp
out
cmpsb
pop
xchg
iret
mov
cltd
or
dec
push
fstpl
stos
lods
out
mov
mov
int3
fimull
and
push
jmp
add
or
xchg
negb
enter
stos
inc
and
loope
dec
sbb
mov
push
jg
or
lods
int
fadd
das
mov
mov
mov
sbb
dec
jne
xchg
scas
and
test
cli
out
cltd
mov
cmp
scas
sub
repz
test
jae
scas
repz
call
pushf
mov
iret
scas
pushf
and
inc
inc
fs
sbb
daa
xchg
leave
add
push
mov
aam
mov
in
sub
jmp
in
xor
xorl
push
jecxz
mov
loope
mov
push
sbb
sbb
lcall
call
jbe
xor
inc
dec
jg
fs
inc
xchg
dec
dec
inc
cmp
jne
jecxz
fidivrl
push
xchg
push
mov
popf
cmp
fucomip
sub
sub
popa
xor
les
popf
jo
cmp
cmp
xchg
or
aam
outsl
imulb
and
lods
icebp
cmp
adcl
jo
outsb
jmp
stc
mov
das
mov
icebp
adc
loop
pop
fsubrs
add
ds
push
push
gs
jbe
aad
in
pop
mov
and
and
mov
xor
subb
push
loop
cld
out
lret
lock
jo
lcall
mov
cmp
in
lea
mov
xorb
rcrb
push
sbb
jge
mov
das
out
mov
out
adc
dec
rcr
lret
lea
inc
sub
shll
movsb
movsl
mov
and
pushf
and
xchg
mov
pop
packuswb
pop
mov
pop
mov
jge
xchg
fsts
cmpb
push
stos
fisubs
add
and
and
push
aas
dec
pushf
xor
push
mov
shr
add
mov
addb
jge
scas
stos
ss
xchg
sub
arpl
lods
mov
dec
lahf
mov
xor
loop
inc
ret
pop
ret
inc
in
and
lcall
mov
fwait
push
inc
aas
fdivl
shrl
addr16
outsb
daa
cmpsb
lcall
mov
mov
jo
scas
cmp
inc
rol
sub
loop
pushf
inc
dec
jae
shl
out
fdivr
in
in
lahf
push
data16
sbb
test
and
das
dec
out
jns
test
adc
inc
pmaxsw
push
shrl
xchg
ret
pop
data16
js
jmp
jmp
data16
aas
ret
add
mov
mov
call
test
push
outsl
add
jmp
mov
int
ja
xchg
jmp
dec
add
iret
push
sub
stc
vpackuswb
aam
loope
inc
popf
loope
mov
jg
mov
sbb
out
inc
lret
xchg
xchg
lods
add
idivb
test
mov
pop
adc
sub
and
pop
push
sub
in
push
sub
cli
mov
inc
sub
sti
leave
movsl
hlt
lahf
jbe
xchg
mov
add
sub
xchg
out
dec
cltd
or
mov
fnstsw
data16
add
or
lds
test
mov
scas
inc
fcmovu
aad
push
rcrb
sbb
pop
mov
cmp
mov
das
pusha
mov
insl
out
cmp
push
jnp
lods
popfw
mov
aas
pop
xor
xchg
xchg
pop
fs
mov
or
inc
cmc
pop
lcall
xor
icebp
call
push
inc
in
dec
fs
mov
add
sbb
xchg
subb
dec
lock
and
rcll
jnp
hlt
ss
push
adc
ss
dec
scas
in
insb
jmp
and
and
adc
or
inc
cmp
into
add
or
push
pop
data16
je
orl
inc
mov
add
scas
inc
out
sub
and
fstpt
sub
jp
shlw
push
mov
fsubrs
test
sbb
push
jmp
inc
subl
jecxz
add
in
loopne
inc
bound
push
or
mov
adc
pop
sbb
jbe
jmp
inc
sbb
das
clc
jbe
cmc
in
add
jno
mov
movsb
pop
push
and
push
mov
xchg
scas
in
loope
call
pop
pop
inc
loop
ja
dec
mov
cmp
test
out
in
sub
bound
pushw
pop
inc
and
insb
push
divb
and
cmp
cmp
outsb
addb
ret
mov
das
push
fildl
popa
daa
hlt
or
dec
cmpps
in
sar
insl
xor
cmpsl
cmpb
jp
jns
cmp
sbb
es
fsubs
cs
jge
pusha
lret
jno
dec
fwait
into
call
sbb
sub
add
xor
inc
rcrb
mov
sahf
std
jne
shll
repnz
sbb
rorb
mov
lock
repnz
jp
xchg
mov
rcrb
and
pop
jno
adc
hlt
sub
cmpsl
imul
outsl
test
push
push
ds
out
add
movsl
vpsrad
movsl
imulb
adc
add
int
stos
cmpsb
mov
push
mov
gs
imul
mov
mov
cs
insl
cmpsl
push
outsl
mov
sbb
dec
pop
inc
cmpsl
jns
sub
test
test
subb
sti
fdiv
cld
mov
cmp
xchg
inc
aas
orl
push
aas
aam
cld
sub
dec
and
loope
lea
dec
adc
outsb
movsb
aad
push
in
xor
mov
add
fmuls
insb
push
sbb
lcall
stos
dec
and
inc
xchg
xchg
or
adc
jle
loope
inc
mov
add
in
mov
sbb
iret
ret
subb
adc
cs
jmp
fwait
and
test
aas
jnp
mov
rorb
jmp
xchg
sbb
subl
call
pop
add
and
cmp
hlt
jmp
pop
push
add
test
out
add
fidivl
dec
test
lods
jge
push
mov
insl
rcrl
lret
or
mov
mov
gs
adc
or
xor
xchg
xlat
bnd
mov
ja
arpl
lock
push
out
imul
jb
sbb
push
pop
lret
cwtl
xor
jp
pop
mov
aam
jo
mov
les
and
mov
roll
and
outsb
mov
test
arpl
filds
push
out
push
in
loop
inc
xchg
movsb
dec
cmpsl
xchg
movsb
dec
test
xor
scas
xor
cld
mov
add
insb
mov
int3
inc
cmc
sub
xchg
push
ja
lds
or
mov
sbbl
lret
movsb
xchg
sub
imul
faddl
dec
lods
or
mov
test
lock
cltd
sahf
add
cmp
inc
mov
les
mov
aam
leave
ret
xchg
shlb
push
pop
xchg
fstps
ret
add
popf
test
adc
in
push
mov
mov
xor
cs
lock
arpl
mov
in
out
push
in
popa
or
mov
jns
pop
stos
mulb
loopne
inc
int3
stos
inc
mov
push
xlat
xor
mov
jne,pt
or
or
adc
nop
repnz
dec
fstpl
mov
sub
adc
andl
nop
fcomps
loop
divl
mov
jmp
jecxz
xchg
into
mov
fcmovnu
insb
in
fistl
pop
fxam
and
push
add
dec
test
lret
mov
test
or
shll
xchg
cmpl
dec
test
inc
pushf
mov
shrl
jl
pusha
fstl
adc
outsb
out
dec
sbb
fs
cmp
daa
push
xorl
pusha
out
xchg
xchg
in
jb
cmp
ffreep
or
push
scas
stos
push
shrb
sub
push
push
sbb
pusha
jecxz
inc
out
jno
inc
xor
pmuludq
lretw
and
mov
enter
jns
shll
stos
jl
int3
inc
out
mov
ja
jecxz
int
iret
fists
rclb
dec
xchg
xchg
jge
add
shll
stos
mov
jns
mov
push
js
mov
ljmp
in
scas
xchg
sbb
out
dec
insb
jge
pop
repz
mov
pop
add
repz
adc
movsb
popf
pop
pop
pushf
jl
arpl
imul
jae
les
ja
inc
sbb
pop
and
pop
into
mov
lods
int
cld
pop
icebp
pop
or
scas
rcll
xor
cwtl
sti
andl
out
mov
dec
aad
adc
aas
rol
popf
and
adc
add
mov
stc
and
jae
das
ljmp
jnp
cmc
fldcw
sbb
jne
mov
jge
js
bound
out
pop
iret
loopne
cmp
xor
sbbb
test
andb
addr16
bound
in
mov
lahf
dec
lock
cmp
out
cld
adc
inc
js
mov
sbb
popf
adc
push
lea
cmp
jg
dec
sub
cmp
js
fadd
push
int
sub
push
push
aaa
fsubrs
neg
xchg
in
addr16
mov
add
sbb
std
popfw
icebp
fwait
rcrl
jne
and
roll
int
xor
das
jo
mov
nop
jp
fiaddl
repz
ss
xchg
mov
adc
xor
adc
aaa
fwait
mov
stos
xor
ficompl
push
or
jae
push
mov
jo
lods
jecxz
pop
cmp
push
std
jge
xor
cs
icebp
mov
out
cmpl
fisubs
sar
scas
push
mov
push
xchg
loope
pop
jl
sbb
mov
in
or
subb
adc
call
ljmp
mov
repz
pop
cmc
adc
aad
xchg
cld
lahf
inc
loope
add
sub
pusha
aas
dec
cmpsb
out
adc
sub
test
negl
test
or
jge
stc
popa
rcll
scas
pop
fdiv
in
bound
outsb
ds
mov
flds
and
sahf
push
sub
out
sub
cmp
dec
or
xor
movsl
rol
dec
fadd
cmpsb
push
sti
sbb
jmp
xlat
insb
inc
sbb
sbb
movsb
hlt
or
rorl
mov
jnp
aad
hlt
sbb
and
mov
xchg
jnp
adc
out
push
aaa
push
outsl
pop
icebp
add
js
idiv
popa
outsb
push
push
jmp
cmp
sbb
jl
push
dec
jge
fidivs
aam
lods
jl
pop
loop
cmp
or
rcll
je
cmpsl
imull
enter
push
adc
mov
lods
mov
or
jno
add
and
or
cmp
cmpsb
out
sub
jb
imul
dec
sbb
and
inc
loope
loopne
rcrl
sub
clc
push
and
data16
call
pop
xchg
mov
imul
mov
test
lds
or
sarl
or
push
int
xorl
clc
sub
push
dec
hlt
enter
push
and
fwait
pop
jo
sub
inc
icebp
ja
mov
out
hlt
add
mov
push
fucomp
pop
das
loop
cmp
add
arpl
adc
pop
mov
aam
sub
cmp
mov
lret
lret
es
xor
cs
push
lods
lcall
jp
mov
jle
cld
inc
iret
cmc
adc
shlb
cwtl
or
sbb
cld
inc
push
jns
and
inc
dec
je
add
repz
pusha
mov
fcmovnu
stos
fucomp
mov
ss
mov
add
das
lods
dec
enter
rolb
hlt
or
sub
xlat
std
fidivrs
lcall
lret
sbb
fwait
call
dec
shl
mov
mov
mov
add
push
and
xchg
popf
or
pop
push
aaa
adc
sar
and
push
sbbb
and
cmc
int3
pop
seto
pop
adc
sarl
fists
in
mov
testl
sti
pushf
popf
and
out
xchg
xchg
faddl
and
add
icebp
nop
dec
lock
aaa
adc
mov
xchg
cltd
pop
out
sub
sbb
sub
stc
mov
int3
test
jg
imul
sub
mov
std
addr16
mov
inc
lret
jp
ret
aas
cmp
fld
pop
push
loop
add
in
movsb
push
push
mov
std
dec
es
je
pop
xchg
mov
push
dec
push
push
and
pop
repz
cmc
sbb
push
fucomip
adc
push
mov
aad
xchg
aas
pop
adc
pop
push
mov
inc
enter
add
add
fistpl
decb
adc
mov
clc
dec
leave
jo
mov
xchg
cmpsl
arpl
leave
pop
adc
mov
ljmp
xchg
out
pop
arpl
xchg
cmc
push
xchg
push
pop
repnz
scas
nop
cmpsl
out
xchg
or
dec
push
mov
add
inc
push
mov
add
cmp
iret
pop
push
int3
out
sti
mov
lcall
jns
mov
cwtl
pop
jp
fs
xor
jmp
jo
div
dec
adc
jle
mov
sbb
xor
cld
pushf
mov
xor
ret
cmpsb
stc
test
inc
xchg
stos
daa
lods
cs
clc
test
nop
cmc
out
and
out
xchg
inc
sbb
movsl
cmpsl
sub
testb
out
subl
loop
incb
sub
fwait
mov
mov
push
xchg
sub
add
hlt
ret
pop
lods
jg
cmp
sub
je
cmp
and
fistl
fidivs
cmp
int3
adc
mov
test
stos
xchg
popf
fistps
outsl
jns
mov
push
arpl
sbb
xor
jno
jno
push
xchg
pop
pop
outsb
lods
push
loop
ss
outsb
fwait
aaa
jp
movsl
notb
fimull
mov
inc
jne
sub
mov
fisubl
test
inc
das
jge
pop
inc
push
jecxz
in
lret
aaa
scas
enter
sar
into
xorb
mov
sub
out
enter
aad
jmp
enter
in
jno
cmp
push
addr16
mov
sub
pop
xchg
mov
dec
mov
daa
pop
ja
sub
jbe
rcrl
mov
xor
mov
fadd
and
lret
pop
hlt
lret
les
xor
mov
xor
sti
out
aaa
push
rol
cltd
dec
ljmp
icebp
mov
fistpll
cld
inc
push
xor
jmp
xor
adc
aas
repz
push
jmp
mov
mov
add
lea
idivl
mov
jno
or
fmul
adc
je
push
mov
adcl
aaa
and
or
stc
int3
jb
mov
rclb
out
cli
jns
rcrb
out
lods
jns
sbbb
xor
lods
fiadds
ret
rolb
cltd
dec
xor
aaa
cwtl
add
push
outsb
movsl
sbb
aas
cltd
leave
lock
into
leave
pop
fsubrs
sbb
and
stos
lahf
pop
adc
mov
dec
cmpsl
mov
xchg
mov
and
fists
stos
cmp
data16
sub
enter
hlt
loopne
cmp
loopne
shll
or
in
xchg
addr16
cli
loop
test
xchg
in
fisubrs
pop
fs
iret
into
rclb
add
rcr
shr
insb
popa
fsubrs
jnp
out
into
loop
cmp
into
aam
mov
cmp
sbb
cmpsb
mov
mov
xor
or
mov
push
cltd
enter
cmp
adcl
add
dec
insl
mov
jb
inc
pop
mov
push
mov
fldt
loopne
sbb
dec
xor
mov
mov
mov
sarb
and
xchg
rolb
mov
ffree
mov
push
inc
dec
jmp
enter
test
popa
mov
repnz
cwtl
xchg
fucomip
icebp
push
out
and
arpl
pop
cmpsb
cmc
xchg
add
iret
enter
daa
in
adc
cmpsl
std
jno
adc
sarl
call
cltd
das
mov
cwtl
andl
dec
mov
popa
cltd
fistpll
test
xchg
push
cs
icebp
dec
and
lcall
pop
jae
test
dec
pusha
mov
clc
bound
jmp
scas
inc
pop
stc
sub
clc
jg
stc
fisttps
xor
push
sahf
inc
push
inc
and
sbb
mov
pop
rep
movsb
push
flds
cmp
mov
sbb
enter
xor
int3
cmp
adc
popa
push
inc
cmp
mov
xor
mov
sbbl
mov
insb
adc
jno
push
sbb
dec
pusha
sub
ss
imul
addr16
call
adc
sbb
cmp
sub
push
and
sub
sub
sbb
jb
pushf
and
add
cmp
out
stos
icebp
pop
movl
xchg
popf
out
cli
inc
xor
in
and
xchg
push
dec
inc
scas
shr
push
push
push
add
lods
mov
push
cmpsl
test
call
push
movsl
mov
or
test
and
cmpsl
cmp
jb
sbb
and
mov
dec
lods
mov
movsl
into
push
jo
ja
inc
call
testl
and
dec
push
xor
pop
iret
loopne
scas
hlt
sbb
loope
and
push
pop
mov
add
out
pop
daa
lret
mov
add
shll
mull
call
test
sub
cmp
and
mov
pop
pop
enter
in
int3
sti
dec
stos
xor
push
jl
or
adc
jnp
paddsb
sbb
psubd
call
push
and
add
subl
sar
insb
mov
jbe
cwtl
push
es
mulb
dec
nop
test
data16
mov
js
div
arpl
sbb
or
mov
data16
pop
icebp
popa
dec
mov
cmp
mov
mov
sub
les
inc
lret
int
or
xchg
mov
sbb
int
sbb
int3
cmpsl
and
cmp
fcmovnb
xor
push
xor
ret
inc
ss
cmp
dec
fwait
or
jnp
stos
inc
nop
mov
xor
in
out
mov
aas
popf
outsb
mov
push
sbbb
test
xchg
inc
popa
jo
shll
inc
scas
cmpsb
ja
dec
pop
cmp
fcompl
cmp
lret
in
and
adc
icebp
jle
jg
fisubrl
ja
aaa
xor
lahf
jge
mov
xor
sti
or
outsl
out
jl
lods
bound
movsb
mov
rcr
push
jg
xchg
pop
mov
add
and
ja
ljmp
daa
cmpsl
dec
cld
xlat
in
das
imul
adc
fisubs
adc
inc
xchg
pop
xchg
inc
lcall
gs
xor
in
xchg
mul
test
sub
roll
neg
int
sub
jg
pop
and
cmp
es
pop
aad
pop
insl
mov
sbb
rcr
push
xor
loopne
sbb
mov
clc
out
jne
ror
cmpsb
mov
sarl
mov
ret
push
inc
test
inc
mov
ficompl
or
and
bound
sbb
pop
movsl
cmp
push
rcrb
in
push
outsb
add
jecxz
in
add
or
xor
mov
push
xor
mov
sub
rcrl
loop
mov
cmp
pusha
stc
call
inc
inc
xchg
mov
out
dec
push
movsb
fmull
lods
test
in
test
addr16
jg
dec
in
push
pusha
cs
jl
jae
pushf
lahf
sbb
mov
or
xor
aas
loope
in
cmp
adc
push
xor
movsb
sti
incl
cmp
iret
outsl
mov
dec
stos
add
sub
push
inc
add
cmp
cmpsl
jo
and
mov
int3
push
xchg
icebp
or
fnsave
jo
inc
adc
add
int3
push
cmp
pop
xlat
sub
gs
push
push
dec
and
inc
mov
jbe
add
push
outsl
ds
mov
jnp
test
pop
pusha
shl
fldcw
movsl
xchg
xchg
popf
push
into
sub
mov
pusha
in
cmc
pusha
and
dec
xchg
lea
fdivrp
shlb
pop
imul
mull
loop
fldl
rcll
cmc
mov
xchg
loop
mov
adc
pop
nop
hlt
sub
jecxz
icebp
aas
pop
push
jp
dec
push
aas
ljmp
pop
or
cmp
adc
loope
ds
sub
icebp
addr16
pop
fistps
leave
mov
lret
in
xchg
cs
imul
push
out
push
cmpsl
les
nop
pop
xchg
ljmp
sbb
sbb
sub
xor
ret
inc
cmp
into
and
cs
outsl
test
pusha
push
adc
add
movsl
fidivrl
jecxz
add
adc
mov
pop
mov
adc
xchg
dec
movsl
fnsave
aaa
repz
jp
xchg
add
dec
xor
aas
xchg
jecxz
sbb
int3
in
cwtl
pusha
cli
jle
ret
xor
dec
mov
insl
lret
in
pop
jp
nop
lret
dec
shll
cmc
jae
xchg
sub
xor
stos
popl
or
das
xchg
pop
sti
cltd
and
negl
aam
sub
std
scas
adc
mov
sbb
xor
add
mov
cs
aam
outsl
les
aam
cmpl
mov
xor
loope
fs
cmc
sarl
leave
xchg
and
out
test
outsb
cmp
or
arpl
xchg
sub
sub
or
cmp
test
push
out
adc
jb
xchg
push
inc
inc
jl
mov
mov
shll
shl
into
into
cli
outsb
cmp
loopne
imul
call
lret
jp
pop
dec
add
sbb
pop
or
inc
push
and
pop
les
dec
dec
scas
nop
pop
or
insl
insb
mov
repnz
dec
and
out
xchg
pop
out
xor
movsb
adcb
test
sub
mov
daa
add
mov
imul
or
add
ret
sti
jecxz
cmp
dec
dec
mov
or
jnp
dec
cmp
cmc
pop
repz
and
pushf
dec
jno
cli
jnp
ss
mov
adc
push
adc
out
sub
jnp
sbb
jo
fldt
aam
data16
xchg
in
sub
hlt
jno
rcrl
push
ljmp
or
sahf
imul
mov
clc
mov
add
nop
ret
jno
sar
in
shl
dec
sbb
mov
xor
fistl
push
and
popa
sub
out
sti
xchg
adc
jp
mov
movsl
xor
bound
xor
pop
icebp
pop
aaa
dec
pop
out
pop
daa
jns
cmp
pop
jl
and
push
clc
repz
lods
add
xchg
push
or
aas
push
push
pop
mov
lcall
fnstcw
insb
and
loopne
int
test
jne
adc
out
xlat
sbb
jae
jb
add
aas
add
rorb
cmp
cmp
adc
popa
add
pop
stc
sub
sti
cltd
cmp
out
sub
loop
rcll
add
xor
sbb
pop
dec
mov
inc
daa
rcr
aas
adc
mov
adc
es
fnstsw
jo
icebp
and
add
cmp
mov
jns
mov
pmovmskb
hlt
les
push
cmp
push
dec
sahf
movsb
orb
dec
pushf
int3
sbb
xchg
repnz
push
stc
in
cmpsb
mov
inc
xchg
test
and
outsb
xchg
pop
mov
sub
stc
xchg
dec
leave
inc
insb
pop
xlat
cmp
inc
xchg
pcmpeqb
cmpsb
out
decl
insl
popf
les
xchg
xchg
push
adc
pop
loop
insl
xchg
add
movups
push
cmpsl
mov
inc
ror
mov
orl
mov
stos
cs
outsl
hlt
jecxz
aas
ss
push
lret
xor
push
js
inc
movsl
addl
sbb
movsl
in
jnp
inc
sub
and
rcrl
pop
in
lcall
je
in
rcrb
addb
loope
insb
jo
aam
xor
jne
lcall
and
mov
adc
frstor
fs
xchg
and
xchg
dec
outsl
push
sub
ffree
and
inc
inc
int3
pop
push
mov
lea
mov
insl
shr
addr16
outsl
add
add
es
cwtl
cltd
rcr
mov
scas
push
mov
dec
into
sbb
dec
ds
out
pop
push
or
out
inc
xchg
das
push
add
add
pushl
add
jnp
inc
aad
mov
push
lock
movsl
stos
mov
pop
sti
xchg
js
insb
adc
pop
push
clc
mov
push
mov
iret
mov
cmp
push
lds
pop
lea
cmpsl
ret
dec
loope
leave
xchg
or
xchg
adc
inc
ret
pop
mov
inc
push
sbb
sbb
sahf
push
xchg
sbb
rol
lods
push
pop
test
sbb
cltd
mov
pop
int
xchg
xchg
addb
test
xlat
pop
nop
fildl
sbb
pop
sub
ret
xor
gs
fsub
hlt
mov
aad
mov
sbb
lds
repz
inc
lods
dec
mov
cmpsl
in
mov
into
rol
std
shlb
adc
mov
dec
std
sahf
cmp
into
stos
mov
mov
rorb
testl
repnz
ret
not
fcoms
xchg
fnstcw
in
out
aaa
push
adc
xchg
push
mov
fdiv
shll
inc
lods
xchg
pop
sarl
fs
xchg
out
lods
lods
fildl
mov
es
rclb
insb
dec
fstpt
pop
imul
adc
cltd
push
andl
pop
loopne
aaa
movsl
lcall
fisubs
xchg
xchg
dec
sub
push
mov
cs
inc
aad
fcomi
jae
push
xchg
adc
in
test
decb
and
fbstp
dec
dec
jnp
lret
mov
sbb
outsl
jmp
xorl
mov
sub
fdivs
movd
outsl
pop
hlt
iret
pop
jbe
and
add
mov
icebp
cmp
in
or
or
xor
mov
cmpsb
je
jnp
cmpsb
mov
cmpsl
cltd
xchg
cmpsb
xchg
not
push
into
jl
sbb
je
ret
in
xchg
and
adc
sbb
adc
add
lret
lahf
repnz
and
push
xlat
jns
faddl
dec
mov
arpl
dec
adc
jns
xchg
xlat
mov
cmpsb
or
movsl
sti
or
fcmovbe
int3
push
cmp
inc
add
out
insb
push
std
imul
lahf
dec
and
and
fstpt
inc
cltd
lcall
mov
mov
cmp
imul
xor
push
push
call
fsubrl
xchg
test
jp
push
rorl
push
xchg
lds
cmp
stc
mov
es
in
hlt
iret
sub
jl
loope
shr
dec
out
nop
dec
addr16
dec
in
cwtl
ffreep
push
add
cld
push
ret
out
sbbl
pop
push
lahf
jg
lock
inc
lea
stos
inc
repnz
incl
xlat
push
sahf
cli
mull
rcll
xor
cltd
xchg
out
mov
push
scas
dec
adc
cmp
mov
xor
bound
xor
mov
pop
fsubrs
lcall
enter
or
clc
mov
xchg
popa
sbb
pop
and
inc
sbb
xor
mov
push
lcall
in
inc
xor
mov
aaa
cltd
and
jle
es
pop
or
sbb
int
adc
adc
clc
psubsb
xlat
xor
aad
push
or
and
jno
xor
mov
mov
addr16
movq
das
stos
mov
stos
mov
negl
aas
and
push
sbb
cmpl
rolb
dec
xchg
dec
in
inc
dec
mov
dec
or
je
pop
sbb
popf
out
aam
out
std
rcrl
stc
mov
xorl
pop
mov
inc
xchg
sub
jl
mov
pop
jne
lahf
fs
or
stos
loopne
mov
pop
mov
dec
mov
push
or
lret
repnz
or
out
shll
out
xchg
mov
jge
mov
outsb
bound
push
jo
jns
fiadds
jle
aaa
subb
shlb
push
jmp
int3
dec
push
fistl
inc
les
mov
inc
add
pop
push
sub
popf
sbb
xor
loopne
xchg
lock
push
fdiv
fwait
xor
sub
jp
int
jnp
pop
fwait
gs
mov
fwait
movl
lcall
mov
das
enter
mov
stos
mov
push
lods
repnz
add
or
stos
dec
jno
jg
in
mov
data16
sbb
mov
out
int3
cmc
gs
cmp
cmp
add
fnstcw
and
pop
repz
push
jno
mov
mov
jp
adc
add
in
mov
push
test
push
push
or
outsl
push
aad
arpl
in
test
mov
mov
jbe
dec
fwait
xor
lods
insl
aas
lock
das
insb
adc
mov
xchg
ret
dec
push
mov
jo
imul
je
fldenv
xor
out
pop
into
bound
push
push
dec
push
and
fldenv
out
fidivrs
push
outsb
test
shlb
repz
jns
test
es
fidivs
aas
cmpsl
in
adc
and
jbe
loop
push
pop
out
xchg
imul
mov
je
sti
loopne
xchg
les
sbb
shll
and
xlat
js
iret
in
pop
jae
mov
fisttps
cmp
xor
jbe
sub
mov
pushf
fs
outsl
scas
sahf
add
jns
xchg
or
cmp
jecxz
clc
mov
loop
push
adc
in
xor
jg
or
or
inc
imull
adc
leave
mov
int
mov
in
inc
mov
dec
push
cmpsl
mov
mov
push
sub
daa
mov
test
mov
cmp
andb
cmc
push
cmp
movsl
out
divl
pop
pop
inc
and
fs
cmp
arpl
mov
push
orb
sti
inc
call
out
push
sub
test
inc
fsts
dec
and
dec
pop
pusha
sbb
test
aad
lahf
dec
into
jp
fwait
les
cmc
cli
dec
xchg
lcall
and
mov
hlt
and
or
or
xchg
xchg
sbb
lahf
add
cli
cmp
out
gs
push
out
ss
ficoms
jb
pop
filds
sbb
adc
inc
leave
lods
gs
lock
jmp
mov
or
cli
xchg
cmp
loopnew
fimull
sar
or
cltd
cmp
push
clc
rclb
adc
sub
lock
push
divb
lods
mov
jl
mulb
mov
sub
or
sbb
arpl
add
popa
ds
test
mov
ret
pop
test
les
fdivr
daa
nop
mov
mov
xchg
pushf
mov
in
cmp
sub
or
pop
cmp
mov
mov
xchg
xchg
inc
pop
into
bound
dec
lods
or
lds
fiaddl
call
inc
dec
rcll
mov
pop
sbb
scas
test
cmc
bound
sbb
repz
inc
fcoml
stos
arpl
push
jnp
popf
jbe
cmpsl
push
dec
and
enter
or
cmp
pop
sub
add
mov
movsl
leave
mov
movsl
sti
mov
adc
outsb
movsb
movsl
rcl
inc
jmp
pop
or
outsb
mov
in
shlb
cmp
sub
sbb
stos
imul
cmp
int
xchg
xlat
jecxz
lahf
testl
aas
push
js
xchg
int
dec
out
mov
mov
mov
ret
addr16
ret
push
in
mov
push
jl
data16
lahf
pop
scas
xor
adc
into
imul
cs
out
cmp
dec
bound
out
stos
and
idiv
mov
xchg
add
or
sbb
xchg
bound
adc
cmp
das
adc
int
and
cmpb
cs
enter
mov
rcrl
das
adc
xchg
scas
lock
mov
xor
xor
test
and
test
fadd
scas
inc
inc
xor
cmc
addb
sbb
out
xchg
xor
cmp
and
pop
pop
pop
push
xchg
sub
movsl
stc
pop
and
leave
dec
jl
mov
rolb
hlt
cmp
mov
pop
push
subb
mov
in
xchg
mov
adc
mov
xchg
scas
mov
stc
negl
and
cwtl
scas
mov
or
pop
cltd
mov
cmp
push
or
outsl
push
and
pop
cmp
dec
adc
inc
inc
cmovl
mov
push
fildll
xlat
mov
sub
cmp
mov
ret
sub
mov
fsubs
test
adc
sahf
push
mov
icebp
fnsave
jmp
stos
rcll
xchg
dec
jl
sbb
xor
outsb
fwait
popf
data16
cmp
mov
cmp
pop
out
mov
and
sti
imul
int3
and
lahf
fsubs
push
mov
dec
mov
xchg
cwtl
mov
jle
dec
add
pop
cmp
jnp
mov
mov
mov
cmc
sbbl
xchg
push
in
leave
mov
cmc
xchg
cltd
mov
mov
rcr
pop
cmpsb
testl
test
js
jecxz
cmp
mov
jnp
mov
jp
mov
push
outsb
sbb
and
push
cmp
dec
js
inc
xchg
test
sahf
lret
fst
gs
cld
cli
xlat
push
decl
and
xchg
in
pop
fimuls
xor
dec
pop
test
shlb
mov
xchg
mov
jb
add
sbbb
fisubrl
inc
cmc
out
push
clc
adc
repz
or
pop
mov
mov
pop
iret
xchg
jb
or
and
pop
lock
jo
cmp
mov
rcll
fsubr
into
mov
xchg
xor
ss
pop
cli
insb
daa
inc
mov
xor
jb
out
or
xchg
sbb
xchg
in
sbb
pop
xchg
int
jecxz
xchg
out
mov
int
lds
lea
sub
add
mov
or
xchg
push
adc
rorb
push
xchg
loopne
sub
iret
lea
out
pop
clc
popf
cli
mov
not
mov
leave
pop
pop
and
enter
xchg
pop
cmp
in
add
mov
repz
jge
pop
outsb
lret
or
ja
and
fstps
dec
cmp
jge
add
and
xchg
sbb
lods
sbb
sahf
fisttps
adc
pop
mov
aam
push
mov
cmp
inc
jle
loope
mov
mov
loop
sbb
mov
sbb
cmpsl
std
repnz
loopne
jle
fs
add
dec
cmp
imul
movb
xchg
lahf
shrl
stc
sti
jne
loop
mov
icebp
lcall
aam
sbb
out
stos
scas
lods
pop
mov
adc
insb
jmp
mov
ja
adc
mov
shl
lock
scas
fyl2x
add
push
add
es
icebp
push
stc
in
xchg
sbb
cmp
fstpl
inc
pop
xchg
xor
mov
mov
testl
or
xchg
mov
daa
inc
gs
ja
mov
shlb
adc
iret
inc
iret
or
std
pop
adc
sbb
sub
call
dec
jae
aam
mov
mov
add
in
mov
jnp
mov
jmp
vlddqu
jecxz
fnop
xchg
loopne
adc
dec
push
pop
inc
testl
add
or
push
mov
loop,pt
or
sahf
popf
xchg
loop
add
pop
ret
fstpl
fwait
in
pusha
sbb
mov
xchg
add
out
cli
inc
push
sbb
sub
add
and
sub
fdivrs
test
adc
push
icebp
push
pusha
push
cmc
inc
repz
push
cmpsl
pop
dec
xor
sti
push
stos
cmc
xchg
sub
movsb
sub
or
fs
call
imul
jmp
push
hlt
sbb
push
addr16
inc
inc
inc
jge
out
mov
xor
jns
mov
or
and
xchg
cmp
xchg
jno
je
cmp
in
push
lcall
sub
dec
andl
cld
lcall
push
jg
fisubl
ret
xor
js
les
push
js
rcrl
mov
push
xchg
pop
pop
dec
add
cltd
sbb
cs
test
inc
into
movsb
xchg
cmpsl
adc
and
int
pop
les
fstps
test
jle
enter
add
mov
sarl
fcoms
mov
add
ret
repnz
xchg
mov
push
fistpl
sub
mov
lret
aad
cmp
insl
testl
lea
sahf
test
and
das
cmp
jge
jno
nop
sarb
sub
add
mov
stc
stos
loop
jo
inc
pop
jmp
inc
dec
dec
xchg
xchg
lods
out
arpl
movsw
fildl
push
push
dec
out
xchg
lods
push
and
ds
pop
enter
xor
dec
inc
aaa
push
mov
imul
scas
gs
lcall
mov
sub
push
mov
xchg
and
stc
fists
mov
jo
mov
mov
mov
push
lods
fiaddl
loop
lods
clc
inc
scas
loope
xchg
sar
outsb
xchg
xor
mov
mov
push
nop
mov
dec
jp
cli
into
insb
xor
mov
fnstcw
xchg
loop
test
jp
cltd
add
fistpll
sbb
adc
dec
xchg
adc
adc
inc
jns
int
mov
adcl
repnz
jns
cld
jge
stos
mov
mov
lock
xlat
or
adc
js
fcomps
add
clc
mov
xchg
xlat
mov
pslld
mov
daa
lcall
cmc
lods
jge
andl
dec
mov
loop
mov
pop
jns
fdivrs
decb
add
sbb
insl
pop
push
xchg
loopne
in
mov
aaa
cmp
out
jl
mov
mov
or
fwait
loope
insl
imul
imul
mov
sbb
mov
xchg
push
push
iret
mov
mov
scas
fnstcw
aaa
mov
push
sbb
mov
mov
pop
push
in
lcall
sar
adc
insb
notb
dec
jno
mov
lods
lahf
loope
daa
xchg
les
add
mov
lcall
mov
rcrl
scas
lret
add
movsb
xchg
test
push
repnz
xor
adc
or
fldcw
idivb
or
cmc
inc
adc
in
sub
adc
cmp
xchg
xor
movsl
pop
std
out
mov
adc
pop
or
cld
and
popf
and
int3
iret
mov
fistps
out
mov
cmp
jae
or
mov
pop
jo
jbe
ja
lcall
inc
add
fdivr
test
sbb
mov
adc
xchg
sarl
xchg
xchg
mov
popf
push
pop
out
push
inc
pop
ret
sub
cs
lds
fwait
pop
pop
or
arpl
xor
test
enterw
dec
xchg
fs
jp
jno
sub
jmp
loopne
pusha
push
icebp
out
mov
mov
mov
add
mov
les
out
push
mov
mov
gs
dec
sub
push
cmp
negb
fwait
into
sbb
sahf
imul
xchg
adc
jecxz
pusha
dec
jae
mov
in
inc
add
sub
fwait
mov
shl
iret
pop
pop
aam
das
inc
mov
nop
jg
imul
fidivl
xor
jne
dec
mov
les
es
cli
jp
das
jmp
sub
pop
int
into
loopne
and
or
sub
push
mov
add
cmp
cld
push
adc
std
loopne
clc
stos
xor
cmp
rclb
sbb
insl
fisubrs
lods
sub
test
call
push
ljmp
fsubl
mov
sbb
jg
xchg
or
push
xchg
cmpsb
xacquire
and
and
xor
and
cmp
cmpsb
pop
sbbb
cmc
insl
push
int
lret
outsb
insl
jo
mov
sti
sbb
ficoml
loop
stos
iret
aad
pop
xchg
xor
cmp
xlat
cmp
ret
add
fidivrs
jno
mov
and
mov
push
jne
outsl
outsb
mov
cmpsl
adc
jge
jae
ja
outsb
mov
out
clc
sbb
sub
add
mov
leave
sbb
or
shll
arpl
mov
pop
mov
and
rclb
mov
imul
stc
es
loop
aad
aaa
mov
inc
das
loopne
repz
inc
mov
icebp
je
push
cld
testb
sbb
pop
icebp
pop
dec
mov
out
stc
popf
test
fidivl
rclb
mov
insl
cmp
nop
cli
test
push
insl
sub
loopne
lds
dec
dec
xor
push
xchg
scas
jg
call
andb
sti
push
xchg
popa
cmp
xchg
insl
orl
mov
out
mov
mov
dec
add
adc
ret
push
pop
addr16
outsb
call
mov
sahf
adc
addl
mov
sub
fstps
rorl
lods
aaa
pop
sub
jecxz
adc
dec
inc
xor
mov
not
xchg
adc
popa
sbb
cmp
pop
xchg
dec
test
outsl
movsb
fsubs
inc
cmp
leave
insb
fcomp
repz
mov
pop
mov
xor
inc
imulb
pop
dec
dec
sbb
cmovns
js
arpl
adc
or
dec
fstpt
iret
into
cmc
pop
mov
push
jns
popa
lods
push
sub
sub
or
dec
popf
push
adc
in
push
popa
cmp
mov
mov
inc
add
addl
inc
in
fsubrs
sub
xchg
jnp
xchg
dec
imul
fs
ljmp
shll
iret
shrb
sbb
or
shrl
xorl
hlt
and
pop
ficomps
lcall
mov
push
sbb
pop
dec
sub
iret
das
sbbl
ljmp
xchg
jp
sbb
ret
test
dec
outsl
in
imul
lcall
mov
lret
shll
add
cmp
test
popa
dec
jo
xor
cmp
xchg
and
jp
fmull
stos
arpl
jmp
ss
inc
jmp
popf
inc
in
xchg
lea
cmp
insl
sub
test
dec
andl
xlat
int
or
mov
jb
and
fldt
dec
mov
cli
out
or
and
pop
pop
repz
subl
lods
sub
sub
mov
loopne
mov
clc
dec
mov
in
lea
ret
dec
pop
adc
icebp
lods
hlt
je
neg
pop
mov
test
ljmp
mov
jne
repnz
nop
outsl
sbb
or
mov
sbb
imul
cmp
bound
testl
enter
push
dec
sub
scas
std
cmpsl
sub
repz
stc
inc
int
bound
hlt
rcrb
pop
loop
mov
aam
roll
mov
cmp
stc
incb
mov
scas
bound
jecxz
sbb
sarb
pop
repz
ds
adc
add
xchg
js
or
rorb
xor
imul
les
mov
rorl
jmp
pop
das
cmp
dec
adc
pusha
sbb
fs
xchg
adc
cmp
daa
into
inc
jno
push
shll
popa
xchg
mov
push
sub
mov
mov
hlt
cmp
mov
or
add
data16
test
call
aaa
sti
sbb
sub
cmpsb
jle
stos
mov
jnp
xor
pusha
mov
mov
pop
mov
mov
test
rclb
pop
xlat
subb
fisttpll
nop
dec
in
fstl
inc
mov
lds
sbb
pop
dec
inc
xor
pop
bound
pop
sahf
jecxz
sti
cmp
movsl
or
bnd
scas
dec
jg
test
cmpsl
icebp
aam
into
in
andl
fldcw
das
add
fisubl
push
lea
push
add
cmp
out
es
pop
test
cwtl
stos
jo
scas
xchg
or
add
adcl
call
std
leave
sbb
adc
mov
sbb
jmp
cltd
popf
xor
or
xor
mov
lret
aad
les
pop
jge
sub
movsb
or
leave
testl
inc
push
pusha
push
pop
pop
outsl
pop
mov
ja
subb
cmpb
int
addr16
sub
dec
mov
mov
nop
sbb
sbb
stos
cmpsl
xor
rolb
insb
cmp
push
add
dec
and
das
push
into
add
rcrb
mov
xchg
pushf
lcall
shll
jmp
daa
hlt
mulb
aam
jp
js
and
insl
insl
lret
inc
sahf
sbb
add
xchg
enter
int
in
pop
jne
mov
jo
cltd
push
pop
in
dec
jne
xchg
inc
mov
rcr
addr16
fsts
mov
sbb
or
inc
jne
in
adc
and
daa
mov
xchg
lds
pop
or
fdivrl
dec
fdivrs
outsb
xchg
cmp
sub
or
sbb
je
icebp
ret
sahf
loope
inc
mov
mov
and
push
mov
or
mov
sub
test
pop
enter
lahf
adc
daa
in
lock
int3
pop
xorb
xchg
sbb
add
fldz
mov
lret
push
adc
cmp
out
and
inc
into
dec
mov
cvtps2pi
xchg
stc
push
mov
cmpsl
pop
ret
or
inc
dec
shrl
adc
pusha
cld
cmp
sbb
jne
ja
rcll
mov
lea
add
sub
cwtl
push
roll
vmread
imul
dec
in
outsb
mov
outsl
mov
stc
adc
nop
nop
mov
and
dec
push
xchg
xor
in
dec
and
push
pop
rcrb
push
push
add
lcall
fwait
push
mov
xchg
xlat
mov
inc
into
aas
nop
push
int3
into
nop
dec
mov
or
inc
jne
into
in
add
fucomp
jno
outsl
inc
xchg
adc
mov
int
aas
insl
push
dec
fcmovne
loopne
pop
jbe
mov
fldt
xchg
cmp
sbb
and
jl
xor
in
add
push
sbb
push
mov
jo
es
push
adc
xchg
test
scas
dec
and
popa
adc
pop
roll
lahf
push
addb
incl
cmpb
pop
add
inc
fidivrl
xor
test
imul
outsl
cmc
imul
or
sbb
dec
jns
cmp
outsl
push
and
inc
shr
cmpsl
cmpsb
faddl
rcrb
shlb
ss
repz
leave
outsb
cmp
dec
cs
loop
lret
in
sbb
mov
stos
sbb
loop
jae
xchg
adc
mov
rcrl
fs
sbb
popf
pop
pop
dec
push
and
mov
out
pop
out
insb
int3
clc
jns
jb
nop
ret
ret
or
insb
cmp
ret
imul
call
jp
pop
push
and
ror
subl
sti
mov
inc
cwtl
fwait
loopne
fucomi
addr16
dec
dec
adc
cltd
imul
or
and
idivb
add
insl
cmc
stos
dec
jl
out
adc
pop
movsb
insb
imul
dec
addr16
cld
clc
xchg
stc
fistps
xchg
mov
dec
cli
es
ds
sbb
jnp
xchg
das
mov
jns
pop
pushf
and
das
lods
push
mov
dec
in
into
pop
dec
mov
arpl
movsb
fimuls
jnp
out
push
movb
push
add
call
sbb
xchg
fisttpll
cmpsb
clc
sub
stc
in
sbb
inc
cwtl
push
jne
xor
pop
and
mov
pop
jnp
mov
repz
fistpll
outsb
mov
shl
mov
pushl
test
std
inc
icebp
decb
jae
clc
add
lret
push
dec
mov
nop
cltd
into
jne
push
sbb
or
jae
push
test
push
aam
jge
int
imull
jae
pop
push
nop
jns
or
cmp
xchg
loopne
daa
add
sub
rclb
cmc
fs
mov
mov
out
sbb
xor
aam
out
xor
daa
mulb
inc
sub
adc
adc
push
ss
cld
fcoml
inc
adc
pop
fucomi
jge
lret
addr16
cmp
xchg
bound
imull
outsl
aaa
rol
jp
pop
scas
sbb
aas
dec
jnp
sti
cmpsl
xchg
aaa
pop
les
hlt
ret
cmpsl
out
neg
dec
daa
xor
jnp
pusha
dec
xchg
sti
push
imul
ljmp
sbb
test
push
ljmp
mov
dec
xlat
nop
fdiv
gs
out
sti
out
call
dec
sub
sub
or
scas
xchg
xor
and
mov
mov
mov
lods
call
shlb
xlat
cmp
out
mov
adc
mov
adcl
test
insb
mov
and
test
call
mov
cld
sbb
jo
out
mov
pop
push
enter
in
fwait
movsb
inc
sub
pop
add
cmpb
outsb
mov
jmp
ficoms
mov
je
scas
inc
sub
mov
out
test
gs
mov
sub
lea
ja
aas
push
icebp
mov
push
push
andl
dec
mov
scas
push
ficoml
aas
imul
mov
xchg
xlat
addb
imul
mov
sbb
arpl
xor
mov
jns
or
cmpb
mov
xchg
xchg
push
mov
insl
repz
cmp
jno
lcall
out
push
fisubrs
sbb
cmp
inc
cmp
in
adc
cmp
out
add
scas
add
mov
in
jnp
pushf
push
sets
cmpsb
jmp
sbb
out
or
ss
cmp
sbb
mov
cmp
out
pop
pop
sub
jbe
jl
rcrb
in
pop
nop
or
pop
sarb
xchg
jl
mov
ret
imul
sbb
cmp
pop
test
xchg
jo
aaa
clc
or
imul
sub
xor
jecxz
sbb
xchg
jp
pop
pop
xor
sbb
mov
inc
mov
jbe
push
nop
shll
cli
add
pop
lods
ss
loope
xchg
std
lahf
pop
xor
mov
jg
mov
and
es
mov
xchg
test
xchg
pusha
out
xchg
jb
movsl
dec
in
shl
inc
ss
not
sub
insb
shlb
bound
ljmp
xor
and
sbb
or
xor
nop
push
and
jnp
fisubrs
pop
rol
pop
mov
je
mov
adc
cs
lods
add
and
inc
or
gs
in
cwtl
pop
sbb
out
lret
adc
pop
fisubrs
push
ret
mov
pop
inc
ret
xor
imul
or
jmp
mov
inc
sbb
xchg
fisubrs
idivb
xchg
fisubrl
push
pusha
jo
sub
push
jae
int
popf
adc
cld
addr16
add
sti
jmp
clc
mov
jle
movsb
pop
scas
sbb
sbb
lahf
adc
or
inc
jmp
or
or
push
jmp
insl
cmp
outsl
mov
clc
xorb
xor
lods
jl
insb
cmpsb
mov
divb
out
cltd
outsl
stos
jnp
inc
or
xchg
cmpsb
mov
pop
cmpsl
cmpsb
aas
repz
mov
stc
fs
mov
or
sub
add
test
xchg
xor
cld
int
loopne
cmp
mov
in
cmpsb
lods
dec
and
fs
out
mov
ja
mov
in
push
add
rclb
add
lods
test
stos
pop
pop
pop
or
dec
mov
sbb
cmpb
mov
mov
scas
cmpsl
aam
out
icebp
mov
das
insb
xorb
outsb
inc
push
jmp
jg
inc
and
xor
mov
xor
sub
into
sahf
test
jmp
inc
mov
mov
or
hlt
ret
push
sbb
test
lea
or
pop
xorl
pop
les
mov
inc
xchg
dec
push
aad
xor
xor
jecxz
jnp
sbb
push
adc
xor
jmp
push
pop
xor
rorb
mov
fstpt
mov
jbe
test
stos
inc
cmpsb
std
in
cli
andb
jb
ljmp
xchg
adc
push
and
fdivr
sbb
add
inc
xor
sub
pop
cltd
xor
xchg
sub
loopne
popa
mov
scas
push
jg
int
pop
adc
pop
push
mov
xchg
xchg
pop
inc
cli
shll
pop
adc
sbb
and
ret
popf
jg
daa
xlat
xchg
shl
sub
in
pop
in
mov
inc
mov
int3
fnstsw
popf
fdivs
loop
pop
cmp
xchg
hlt
cmp
popf
pop
and
xchg
add
inc
mov
gs
rcrb
in
pop
xor
cli
jo
addb
rorl
rcr
cmpsb
adc
stos
loopne
and
pop
ret
jb
dec
cmp
popf
mov
fs
bound
sti
or
das
mov
ret
inc
mov
mov
arpl
xor
jecxz
pop
sbb
push
sbb
mov
push
sbb
mov
xor
xor
jae
push
je
std
ret
std
in
cmpsb
jmp
mov
jns
mov
out
pop
dec
hlt
xchg
sbbb
mov
pop
xchg
pop
lcall
sbb
jg
xor
xlat
je
in
jo
pop
xlat
mov
sub
cs
frstor
inc
mov
jb
shrb
data16
mov
push
iret
pushf
out
sar
xor
movsl
out
push
insl
cs
adc
push
mov
enter
sbb
xchg
push
mov
dec
push
cmc
imul
sub
inc
xchg
shlb
xchg
mov
popf
leave
fcmovnbe
std
loop
inc
jne
add
nop
fnsave
jge
mov
pop
es
lahf
mov
loop
adc
mov
lret
push
or
push
fbld
mov
fistpll
push
cmp
mov
out
xchg
pop
rcrb
sub
cld
leave
lock
jns
jb
insl
and
loopne
and
fs
mov
mov
sbb
sbb
and
repz
hlt
idivl
shlb
jge
movsb
mov
pop
sub
jns
pop
pop
push
int
call
push
cmp
pushf
or
bound
scas
lea
stc
loop
mov
loopne
and
xchg
mov
data16
push
inc
bound
jp
cld
xchg
in
std
es
ftst
and
jg
xlat
lret
xchg
pop
mov
dec
sahf
pop
lret
mov
sahf
movsb
cmpsl
pop
jnp
xor
mov
dec
jl
movsb
xchg
popa
mov
add
cltd
jae
imul
jns
nop
das
cmp
sbb
jns
xchg
leave
mov
xlat
popa
push
mov
or
jae
sbb
enter
call
mov
xorb
cmp
xlat
out
adc
mov
mov
dec
inc
xchg
dec
jmp
xchg
hlt
in
adc
push
push
sbb
xchg
sarb
dec
ljmp
xor
ja
push
xor
sbb
cmc
jmp
cmp
mov
mov
inc
jno
lods
adc
ret
mov
dec
cmpb
adcl
fisttps
lea
push
stc
clc
mov
leave
mov
into
sarl
mov
aaa
xor
adc
cmpsl
mov
mov
mov
inc
pop
hlt
iret
push
push
lea
dec
jl
sar
push
jecxz
ret
out
dec
mov
fsincos
pusha
pushf
cs
aas
lock
push
dec
xchg
lods
inc
cltd
sub
nopl
pop
ja
in
push
test
mov
mov
or
xchg
add
or
xchg
cmp
cmp
imul
dec
jns
int3
clc
or
cltd
xor
cs
xor
enter
in
jae
add
pop
sbb
dec
sti
out
pusha
dec
add
mov
push
addr16
fxch
out
push
test
cmp
addr16
xchg
adc
aad
in
add
mov
cmc
aad
nop
rorl
sbb
movsb
mov
push
mov
and
jno
pop
popa
fsts
dec
inc
jmp
sub
ret
lahf
in
out
outsl
sarb
rorb
mov
sti
cmp
adc
aaa
dec
push
adc
pop
and
mov
dec
int3
dec
push
xchg
mov
xlat
lret
pop
lret
xchg
fldcw
nop
jl
cs
or
push
mov
ja
add
ja
cmpsl
pop
sub
movntq
out
xchg
pop
imul
inc
test
scas
cwtl
int
push
xchg
jp
call
stos
cmp
inc
push
push
into
cmpsb
cltd
fstps
hlt
sbb
mov
movsb
mov
push
ljmp
ljmp
cmp
pop
aaa
mov
add
inc
adc
or
add
aad
jl
xchg
mov
mov
das
add
inc
xor
jge
sbb
mov
cli
cltd
stc
mov
fwait
and
jb
xchg
xchg
jge
add
lock
xor
iret
push
repnz
sub
mov
inc
imull
jns
push
leave
out
add
sbbb
in
mov
jbe
pop
stos
ja
in
ret
int
and
push
xor
adc
in
scas
push
fsts
mov
negb
ss
mov
xchg
adcl
pusha
filds
adc
movsb
mov
scas
je
daa
test
popf
mov
jecxz
mov
std
stc
shl
cmpl
pop
les
cltd
mov
xchg
adc
push
in
scas
inc
frstor
cmpsb
scas
out
les
popf
dec
ret
jecxz
adc
imul
std
outsl
inc
stos
pop
stc
xchg
jb
js
mov
outsb
rorb
sbb
roll
inc
mov
fmuls
pop
lahf
lret
adc
fnstsw
xor
out
in
sub
jno
sub
adc
imul
xchg
call
scas
cli
mov
adc
mov
addb
rcrl
xchg
fisttps
fiadds
cmp
popa
mov
mov
pusha
adc
xchg
icebp
pop
pusha
addr16
jns
gs
pop
inc
and
add
arpl
pop
add
dec
imull
fiaddl
xor
xor
push
xchg
icebp
push
mov
es
xor
cmpsl
sbb
inc
push
jl
sbb
jp
pop
lret
mov
pop
sub
movsb
xchg
loope
pop
push
int
rorl
mov
mov
or
xor
imul
movsl
aad
ret
xorb
out
xchg
or
ret
adc
inc
push
jle
xchg
push
lods
and
scas
inc
out
stos
push
dec
nop
cld
dec
cmpl
push
fldenv
jl
je
add
hlt
cmc
popf
or
sbb
rol
fstpl
push
bound
or
xchg
pop
xlat
sub
test
or
cmp
xchg
xor
push
enter
xlat
fnstenv
or
jb
les
and
mov
stc
jo
leave
mov
mov
xchg
negb
inc
add
repnz
push
outsb
mov
and
scas
push
and
mov
fcoml
fisubrs
and
sbb
inc
adc
sti
push
or
jmp
ljmp
fcmovb
sbb
fistps
pop
pop
lcall
stc
shl
mov
sbb
lcall
loopne
mov
je
cs
shlb
rcrl
test
out
mov
ss
nop
xchg
sub
test
sti
push
xchg
fildl
cmp
out
aam
fwait
or
stos
push
cmpsb
and
mulb
push
xchg
lret
repnz
cld
add
rorb
push
mov
sarl
mov
mov
loopne
pop
sarl
mov
dec
mov
cld
cmp
test
mov
cs
scas
xlat
je
fsubr
fsub
mov
std
mov
dec
push
adc
and
dec
repnz
lods
xchg
adc
mov
outsb
arpl
jp
pop
cld
cmp
cmp
jo
mov
std
daa
pop
pop
xchg
in
and
adc
pusha
push
xor
imul
mov
aam
stos
and
lea
out
add
sub
xchg
xchg
inc
outsl
sbb
popa
push
pop
adc
cmp
and
mov
sub
jo
cmp
dec
cmpsl
jecxz
sbb
cmpl
inc
into
lret
es
and
lods
mov
aam
jae
loop
test
push
shll
cmp
inc
repnz
cld
lcall
test
hlt
in
add
cmp
iret
sub
popa
cmpsb
and
or
lret
inc
inc
jb
mov
dec
aas
jmp
dec
mov
cmp
gs
inc
jae
or
pop
lret
push
fists
adc
mov
pop
stos
cld
ror
jno
mov
jmp
shl
les
sahf
stc
xor
aam
dec
fcos
mov
clc
pop
out
adc
mov
test
iret
outsb
mov
aad
xchg
push
add
ja
jnp
rcrb
inc
in
adc
jge
sbb
call
cmpsb
inc
push
jmp
lds
in
sub
ja
mov
sahf
imulb
andb
in
and
cmp
xchg
mov
cmpsb
pop
lods
mov
mov
cmc
nop
ret
cwtl
fists
ljmp
fidivl
sbb
rol
jmp
push
popa
leave
aaa
movsb
cld
lock
outsl
sub
insl
out
lods
xor
fcmovu
mov
sub
pop
cli
xchg
dec
stos
sub
sub
in
push
aad
or
das
scas
fldl
jl
fs
or
js
dec
insb
inc
fnstsw
rorl
call
leave
jg
xor
ret
cmc
fsubrl
lea
cmp
mov
cs
jge
dec
mov
mov
jb
dec
aam
sub
or
int3
pop
cmp
mov
mov
sub
scas
dec
inc
call
lock
jnp
pusha
push
popf
shlb
inc
add
out
jne
xchg
and
test
and
xchg
mov
adc
pop
cwtl
mov
inc
test
push
lock
gs
mov
test
in
lea
orl
xor
jnp
movsb
jno
into
rorb
cmpsb
sub
jmp
ffree
popf
jp
or
xor
sbb
xor
adc
or
mov
dec
out
shlb
int3
enter
jle
dec
jp
in
pop
ds
arpl
out
xor
dec
mov
dec
aas
loopne
ret
in
jge
cwtl
cld
aad
sub
lahf
pop
and
fcoml
mov
jb
imul
dec
jae
or
pop
addl
sub
inc
je
outsl
daa
and
std
fisubl
stc
test
pop
subb
bnd
icebp
fisubrl
jl
test
mov
lock
test
aam
out
sub
push
adc
or
in
mov
mov
arpl
jne
das
inc
mov
rol
cmovb
xchg
addr16
cmp
and
repz
movsb
mov
std
inc
rsm
outsl
mov
xor
aad
adc
add
mov
push
push
add
push
or
cld
pop
jns
cli
mov
mov
scas
sub
pop
or
push
cmp
sub
xchg
pushf
xchg
sahf
and
lahf
rcrb
or
insb
cmp
push
daa
loopne
xlat
mov
or
pop
mov
push
xlat
imul
clc
imul
daa
and
pop
stos
cmc
xchg
arpl
rcrl
cmc
pop
lret
xor
xchg
xchg
je
or
rcr
pusha
xchg
sti
ljmp
out
out
popf
lret
cmp
fildl
inc
xor
or
pop
mov
addr16
rol
pop
add
gs
mov
mov
lods
addr16
push
stos
ret
les
push
xchg
outsb
popf
jno
popa
dec
in
lret
mov
ret
mov
jge
stos
shlb
insl
dec
push
es
pusha
out
mov
xchg
decl
mov
pop
ret
loope
lea
sahf
pop
pop
push
scas
push
enter
out
sar
sbb
push
mov
inc
insb
jb
ja
fidivl
ja
imul
js
mov
mov
out
xor
and
negb
inc
fcmovne
repz
and
dec
cmp
cmpsb
je
inc
push
mov
inc
aas
pop
imul
inc
outsl
mov
repnz
sub
inc
sub
xchg
nop
aam
jnp
stc
jb
pop
hlt
mov
std
fmulp
loope
adc
ds
dec
fistl
int3
mov
push
add
push
in
add
and
and
mov
push
push
ret
pop
aaa
ss
fwait
mov
add
outsb
and
pop
stos
mov
mov
scas
inc
jno
mov
pusha
cwtl
adc
frstor
loop
push
sub
mov
repnz
rcrb
xor
es
or
movsl
stos
xchg
and
add
pop
leave
and
mov
cltd
push
xchg
and
mov
or
rcrb
sub
jo
jo
popf
or
pusha
jns
xchg
aaa
jl
mov
fs
out
movsl
add
adc
jle
jge
cmc
scas
cmp
and
sti
movl
inc
in
adc
fsubrl
js
jne
mov
lcall
ffree
mov
inc
push
jno
mov
xor
mov
sub
inc
push
mov
push
iret
sti
pop
push
push
sub
cmp
inc
mov
inc
imul
xchg
sbb
fsubl
sub
out
clc
xchg
fisubl
in
jl
mov
aad
repnz
inc
es
sub
add
or
push
dec
pop
dec
pusha
lret
movntps
addl
das
xor
or
cmp
repz
rcl
lret
popf
bound
inc
adc
xchg
cmp
push
push
mov
imul
daa
iretw
test
outsl
pop
jle
and
inc
fstp
les
loope
loop
add
les
sub
les
cmp
in
xor
push
rorb
mov
sub
xor
mov
enter
mov
or
dec
in
iret
and
xorl
sub
sahf
cmp
push
loop
xchg
fwait
mov
dec
subl
xchg
daa
incb
out
cmpsl
add
mov
loop
fistl
mov
lods
sub
xor
enter
lock
hlt
enter
xchg
or
xorb
rolb
lret
negl
lock
jae
push
and
insl
add
xchg
mov
dec
out
pop
frstor
loop
test
cmpsl
mov
adc
daa
add
or
jmp
or
bound
adc
xchg
xor
sub
inc
ja
in
sub
cmc
dec
es
mov
sub
rorb
int3
and
int
xchg
push
leave
in
push
xlat
das
sbb
call
sub
push
inc
pop
lret
pop
mov
xor
mov
dec
lret
add
outsl
xor
cmc
cltd
cmp
or
and
adc
mov
loopne
scas
mov
add
jmp
test
jbe
xor
lea
mov
push
adc
int
mov
cmp
xchg
push
cld
push
inc
mov
mov
and
pop
push
scas
xchg
sub
xchg
sbb
mov
xchg
shll
sti
js
data16
inc
mov
sbb
jg
out
dec
sbb
mov
lock
xchg
in
jp
lahf
in
sti
mov
test
sub
xor
ret
in
lret
jbe
sti
push
or
sub
loopne
clc
rclb
pop
xchg
shr
fdivl
arpl
jle
push
fisttps
aas
sbb
test
fistpl
xchg
cmpsl
push
pop
je
xor
sub
aaa
sbb
mov
cmp
mov
or
lcall
mov
push
and
jge
mov
nop
lock
roll
es
jmp
add
mov
jp
mov
iret
leave
shrb
scas
mov
dec
jecxz
fisubrs
push
ficoms
idivb
ret
les
out
leave
inc
push
test
dec
outsb
fnstcw
pop
pop
popa
or
out
sti
adc
xchg
mov
xchg
cmc
lea
out
repnz
insl
pop
add
mov
fistpll
mov
push
xchg
inc
add
dec
jnp
int3
shll
cmc
inc
int3
xor
xchg
mov
mov
daa
sbb
xchg
jp
jp
bound
push
add
mov
inc
gs
sub
fwait
popf
repz
mov
jge
cmp
xchg
aaa
add
mov
lret
and
inc
rorb
add
and
call
cmp
test
inc
mov
addb
iret
clc
cmp
mov
lret
je
and
fldenv
sbb
shll
mov
into
out
out
mov
mov
jp
xlat
dec
stc
out
negb
sub
stos
jmp
inc
mov
stos
or
mov
sbb
xchg
and
ss
popf
mov
cs
push
clc
bnd
sub
fildll
sbb
loop
das
cli
out
mov
pop
dec
dec
mov
and
xchg
out
repnz
jbe
nop
mov
xchg
into
adc
jb
push
leave
xchg
bound
mov
out
cs
lods
es
cmpsb
lds
dec
mov
scas
divb
inc
insb
std
shrl
cwtl
mov
jle
ds
cmp
cmp
shrb
shr
es
adc
jno
fistpl
jmp
les
add
xorb
cmp
adc
push
ret
xchg
lea
ret
jns
sti
lds
pop
cmp
jle
mov
push
mov
cmp
hlt
bound
dec
outsl
ljmp
in
add
lds
cmp
addr16
push
shll
pop
mov
xor
clc
out
mov
imul
shlb
and
add
pop
or
mov
mov
mov
scas
inc
ret
sbb
mov
into
loope
es
mov
test
loope
adc
je
jb
jb
push
sti
clc
sti
enter
pop
jmp
jae
push
ret
in
xlat
les
jmp
js
sbb
loopne
fstl
xor
sar
test
int3
stos
pushf
out
addb
imul
stos
sbb
cs
add
sahf
jae
imul
movswl
pop
push
xlat
ret
outsb
lret
add
aas
dec
cmp
shrb
sbb
popa
jae
xchg
out
vpshufd
js
xor
jge
mov
stos
arpl
aad
icebp
rorl
bound
rcr
js
mov
mov
lcall
fwait
inc
stc
push
cmp
cmp
movsb
mov
mov
insb
test
movsl
and
mov
push
leave
mov
pop
cs
fdivs
rolb
ss
call
adc
shlb
js
lods
xor
xchg
sbb
int
testl
pop
repnz
dec
sbb
test
inc
xor
lock
cmp
aad
dec
xchg
in
mov
mov
jns
xchg
scas
aaa
sub
add
addr16
out
xchg
jp
push
push
pop
adc
pop
mov
and
fisttpll
lods
sbb
mov
xor
daa
pop
scas
movsb
scas
popa
lods
test
mov
jne
dec
xor
mov
mov
cmc
inc
hlt
aad
fcoml
adc
dec
out
fistpll
sbb
and
popf
flds
aam
outsl
cmp
addl
mov
and
xchg
xchg
lret
fldenv
flds
push
mov
pushf
cmpsb
pop
fcomp
sbb
xchg
lret
push
sbb
pop
and
dec
jbe
mov
jp
rcll
adc
mov
je
psrlq
and
rol
xchg
out
loope
pop
aas
int
xchg
pop
mov
push
pop
mov
mov
lods
cmp
mov
jge
dec
inc
and
and
push
sub
cmp
stc
push
iret
bound
mov
jg
mov
mov
mov
mov
outsl
popf
inc
rolb
arpl
clc
shll
test
mov
dec
jo
xchg
cs
pop
lcall
mov
sub
insb
cwtl
dec
adc
jp
rolb
xchg
pop
adc
mov
mov
or
es
cltd
pop
out
popa
fstps
outsl
mov
sbb
ja
xchg
pop
cmp
lods
adc
dec
dec
mov
cltd
xchg
inc
and
mov
out
fdivp
mov
insb
and
dec
push
pop
aas
xchg
insl
shl
aam
repnz
add
push
xchg
in
xchg
and
std
mov
ret
jl
mov
push
lock
lock
jp
data16
pop
xor
orb
lds
jns
nop
ja
mov
scas
outsb
daa
jns
pop
xchg
mov
push
or
xor
je
inc
in
adc
pop
mov
pop
or
adc
jae
test
sbb
pop
repz
shll
xchg
movsb
lcall
jae
xchg
repnz
jns
jne
inc
mov
jg
pop
fcmovbe
das
sub
sbb
cmp
mov
push
mov
out
loope
int
in
lods
inc
and
es
mov
adc
jnp
jno
sbb
or
mov
xchg
popf
movl
stos
mov
jmp
mov
push
movsl
jl
cmpl
imul
mov
insl
jo
fwait
mov
pop
sub
lret
loope
push
add
or
mov
sub
in
fnsave
xchg
lret
mov
test
push
lcall
mov
and
fptan
dec
jbe
repnz
mov
xor
xchg
loop
fwait
mov
sub
aad
mov
mov
pop
jge
negl
pop
pusha
iret
push
lods
in
sub
xor
pop
mov
dec
lds
dec
xor
ret
pop
fidivrl
hlt
jge
stc
cmp
mov
pusha
add
lahf
pop
loop
cmp
ret
ret
fldl
stc
movsb
jmp
mov
mov
mov
icebp
les
ss
lods
es
aas
mov
xchg
pop
pop
ja
mov
out
std
sbb
or
shlb
push
test
and
adc
xchg
xor
sub
jo
icebp
sarb
cmp
xchg
cli
xchg
and
mov
orb
add
xor
int
mov
ret
repnz
mov
mov
mov
lds
and
cwtl
insl
mov
dec
shl
stc
and
push
push
movsl
mov
cwtl
jns
add
aad
jno
pusha
jl
rclb
adc
xchg
push
cld
std
test
xlat
insb
popa
pop
daa
stos
jle
xchg
mov
mov
fisttpll
lods
leave
lods
in
test
pop
inc
popf
mov
mov
inc
lret
in
xor
data16
rcll
aaa
mov
inc
dec
add
inc
xor
fiaddl
or
data16
mov
add
xchg
insb
pop
xchg
mov
or
jle
xor
push
and
jb
aas
lds
js
and
out
jecxz
stos
sub
push
hlt
out
xchg
ret
sub
sahf
test
sub
mov
lea
mov
or
xchg
mov
test
mov
cmpsb
push
cmp
push
arpl
push
aaa
mov
cld
cmp
adc
test
ja
jl
fldl
push
jno
mov
lea
add
sahf
ljmp
xchg
xor
jno
adc
xor
push
inc
ja
pop
inc
push
adc
ret
and
std
stos
pop
aad
mov
lret
rcrl
xchg
nop
out
rcrl
lret
or
mov
adc
shlb
xor
iret
and
mov
fsts
addl
aas
sarl
mov
pop
in
aaa
aad
and
pop
pop
cltd
mov
jne
fistpl
mov
lcall
or
inc
jb
pop
dec
cmp
jle
lcall
fsubl
adc
jmp
push
pushf
mov
mov
inc
jge
jb
pop
xor
lds
cmp
xor
xor
gs
cltd
mov
xor
lds
imul
andb
cmp
xor
adc
xchg
cwtl
data16
call
cmp
lcall
jge
push
cmp
or
dec
adc
movsb
rcl
inc
add
mov
lret
xor
and
movl
jno
fwait
mov
sbb
push
decl
xchg
arpl
fisubs
movsb
into
add
cmpsl
inc
sub
mov
mov
sub
or
xchg
mov
hlt
inc
cmp
adc
je
repnz
xchg
sbbb
jne
mov
push
stc
stos
lea
faddl
clc
sbb
xor
arpl
lret
cwtl
loopne
jecxz
test
lds
inc
pop
jmp
pop
xchg
imul
imul
test
adc
cmp
insl
pop
xchg
mov
push
or
and
sti
outsl
pop
xor
add
addr16
repnz
ljmp
aam
adc
arpl
in
sub
mov
repnz
mov
push
mov
lods
dec
and
lcall
jl
lods
mov
cmpsb
add
mov
stc
out
divb
fmuls
sbb
jmp
ja
in
xchg
xchg
int
fstp
inc
jno
sti
push
das
and
sub
and
lock
mov
hlt
ljmp
aam
mov
in
ficoms
push
cli
fistpll
add
popa
into
icebp
push
popa
xor
cmp
and
add
dec
adc
xor
aaa
call
ret
dec
lds
and
ja
aam
xchg
pushf
out
and
imul
fsts
ja
sbb
repz
ja
add
sub
ficoms
jae
pop
mov
out
jle
sub
bound
sbb
icebp
sub
loope
sbb
xchg
imul
lock
cmpb
call
arpl
fisubrs
and
leave
nop
push
out
cmp
dec
ficoml
inc
jnp
lods
pop
xor
hlt
fwait
mov
jl
inc
addb
lock
push
or
pop
lahf
rcrb
les
sub
mov
addr16
aas
mov
or
mov
mov
mov
mov
mov
mov
push
jne
out
adc
test
cmp
bound
pop
clc
in
add
popf
add
lock
and
das
pop
sbb
mov
jge
insb
push
cwtl
ja
mov
sbb
ss
pop
loope
mull
dec
cmp
sbb
mov
and
nop
inc
or
dec
add
jg
fimull
dec
scas
and
sbb
repnz
dec
test
mov
mov
pop
insl
in
jg
imul
push
add
dec
mov
fstpl
and
jnp
push
jne
mov
mov
test
pop
jp
xchg
mov
fisubl
pop
fisubrl
mov
not
mov
std
data16
mov
inc
sbbl
jne
rcrb
mov
sub
ss
jno
inc
popf
pop
nop
jbe
daa
scas
vmulsd
insl
test
sub
add
rcrl
aas
mov
into
jmp
lret
add
inc
jge
jmp
rorl
adc
pop
mov
xor
xchg
test
nop
shrl
adc
shrl
stc
jecxz
mov
jle
std
pop
push
popf
hlt
addr16
add
outsl
lock
pop
push
cmp
lcall
jbe
sahf
leave
mov
mov
push
sti
dec
mov
mov
jnp
adc
jecxz
and
aam
in
xor
int
sahf
push
jns
xor
nop
fldenv
stos
movl
test
pop
mov
pusha
cmp
add
push
adc
test
mov
orl
pop
imul
xor
test
push
stc
push
mov
lret
inc
and
cwtl
pop
les
inc
or
and
fwait
loop
xchg
lret
mov
jne
cmp
mov
pop
stc
sbb
imul
or
les
push
sub
adc
cld
push
push
and
sbb
mov
jmp
daa
and
rolb
dec
xchg
out
pop
cmpsb
adc
sbb
in
push
and
push
nop
lret
arpl
jns
add
std
cmp
and
xlat
js
repz
mov
mov
mov
loope
fbstp
push
sub
add
inc
in
daa
mov
jg
fldenv
cld
jo
repnz
sub
sub
push
in
xchg
jb
insl
and
mov
test
out
enter
sub
cmp
add
jg
sbb
mov
jp
cmp
enter
add
cmpsl
scas
push
lahf
mov
test
sbb
jnp
std
jg
mov
xchg
inc
lret
inc
filds
mov
fs
or
xlat
cld
in
sbb
aas
and
repnz
or
push
jg
mov
xor
pushf
bnd
clc
mov
enter
xchg
sub
inc
and
pop
adc
xchg
xchg
outsl
inc
pop
sub
popf
mov
ror
clc
out
push
imulb
lahf
repz
roll
lods
neg
test
mov
shlb
jle
mov
ss
pop
mov
cmp
cld
out
in
dec
xor
pop
push
rcrb
hlt
add
ds
mov
decl
adc
pop
test
movsl
mov
dec
mov
popa
sub
push
addr16
ret
push
arpl
notb
or
incb
movsb
pop
into
push
mov
pop
mov
add
sbb
sbb
ret
test
dec
lret
sbb
ret
lret
aad
std
cmpsl
cwtl
mov
xchg
testb
sub
lea
inc
add
imulb
jae
adc
in
sub
cmp
pop
in
jnp
inc
out
imul
imul
xchg
mov
xchg
and
jp
dec
std
gs
inc
jle
pop
adc
lret
add
and
stos
xor
outsl
xchg
sahf
in
adc
clc
dec
push
fcoml
inc
and
lds
scas
lods
xchg
sbb
repnz
sbb
add
jo
push
dec
outsb
es
loop
addr16
mov
xor
pop
imull
fdivl
test
jp
mov
sbb
mov
adc
cmpl
out
or
les
mov
int3
jmp
repz
stos
test
ja
inc
inc
outsb
adc
xchg
add
out
jns
jae
sbb
or
loop
dec
mov
arpl
dec
push
imul
fwait
insb
lds
cs
cmp
lods
and
shlb
sbbb
dec
adcl
fimull
push
rorb
cmpb
or
imul
test
mov
or
sbb
sbb
xor
and
insb
stos
add
out
inc
mov
xchg
mov
pushf
into
lahf
xor
push
and
in
stos
mov
or
repz
aaa
cld
shrd
lret
cmp
mov
pop
pop
ja
xor
and
lcall
fwait
out
lea
dec
push
cmpsb
test
lcall
inc
push
sbb
mov
mov
xlat
xchg
push
jb
cs
and
ret
sbb
push
out
stos
stos
cmc
mov
cmc
repnz
fidivrl
push
mov
sub
stc
push
enter
and
xchg
push
sbbl
cmpsl
xchg
out
adc
and
add
mov
mov
int
xor
dec
dec
test
mov
jge
idiv
inc
insl
idivb
xchg
dec
aaa
mov
das
and
rorl
cmp
loope
dec
clc
adc
push
out
xchg
pop
nop
mov
fiaddl
jp
push
ret
mov
xchg
push
jns
and
ret
jmp
shl
lcall
xor
mov
mov
and
loopne
cltd
mov
in
add
out
repnz
fldl
mov
mov
dec
push
rorb
cmp
mov
or
mov
mov
mov
pop
adc
pop
jns
xlat
punpckhwd
insl
fs
repnz
or
inc
mov
sub
sub
lea
mov
mov
sbb
icebp
clc
clc
mov
xor
sbb
fstl
scas
or
adcb
mov
fwait
and
loop
push
outsl
pop
sbb
pusha
aam
xchg
dec
sbb
xor
movsl
notl
adcb
adc
dec
sahf
cmp
les
and
sub
add
stc
test
out
loop
xor
sub
iret
dec
clc
movsb
and
test
es
pop
popa
sbb
loopne
push
enter
shlb
jecxz
gs
dec
cmp
and
cmp
xchg
leave
xor
mov
push
rol
loope
div
pop
ret
pop
xor
mov
test
add
ss
ljmp
inc
jmp
mov
psubsw
push
lcall
adc
in
sub
mov
push
or
push
imulb
repz
mov
xor
jmp
and
in
add
out
dec
jle
scas
pop
inc
aas
jno
dec
push
sarl
mov
imul
shlb
adcl
aad
or
pop
push
lret
jge
out
shrl
pop
xchg
push
jmp
std
icebp
mov
cmpsl
jge
mov
pop
hlt
jp
or
es
jno
mov
add
pop
xor
inc
sub
xchg
mov
out
nop
cmpsl
or
ljmp
and
or
push
in
pop
pop
mov
cmpsl
adc
adc
cld
movsb
stos
adc
rol
sub
mov
test
loop
scas
das
and
inc
jne
sbb
push
test
cwtl
sahf
mov
mov
or
icebp
sub
je
mov
push
popa
cmp
lcall
aam
jmp
mov
clc
pop
inc
sahf
and
inc
inc
into
adc
icebp
jmp
loopne
mov
push
inc
sbb
hlt
lahf
dec
pop
dec
dec
pop
mov
stos
sbb
pop
jns
mov
daa
loopne
in
push
ljmp
xchg
iret
lea
xchg
scas
xchg
pop
ror
mov
in
in
stos
pop
js
fwait
mov
fwait
xor
adc
fwait
icebp
jae
stos
add
inc
hlt
jbe
scas
das
lret
aas
stos
mov
push
pop
xchg
inc
ja
mov
lock
lahf
cld
sbb
lahf
fsubl
outsb
xchg
mov
nop
data16
dec
loopne
notl
cltd
je
movsl
mov
cld
mov
add
icebp
dec
stc
pop
push
pop
ss
or
sub
cmp
xchg
fistps
out
and
push
ss
pop
aad
aas
mov
jns
mov
loopne
dec
or
push
lcall
xchg
jns
shr
mov
pop
mov
pop
lds
fcmovu
mov
dec
das
imulb
mov
sub
and
call
mov
adc
insb
add
and
mov
pop
xor
inc
mov
stos
sub
push
push
ret
xor
cmpsb
cmp
mov
jecxz
ja
jp
mov
jle
push
push
push
popa
xchg
jbe
imul
cmc
adcb
cld
loop
fcoml
mov
mov
insb
mov
test
hlt
loope
jae
sbb
es
cmp
dec
xchg
in
add
xchg
scas
insb
nop
cld
inc
mov
dec
pop
aad
sbb
addl
adc
enter
add
int
out
xchg
or
cmpsl
inc
std
outsb
shrl
mov
ljmp
adc
in
inc
add
lahf
dec
push
ja
add
sbb
xchg
lods
pop
jo
adc
lret
sbb
vmovntps
mov
and
test
mov
test
jae
mov
arpl
movsl
fdivrl
in
inc
ja
pop
fnstenv
mov
dec
rcl
hlt
sarb
push
daa
mov
jne
mov
inc
fmul
pop
adc
and
add
xlat
leave
cmp
fstps
push
pusha
stos
pushf
cmpsl
imull
pop
xor
push
mov
mov
shrb
push
jl
mov
cmp
dec
frstor
and
jo
flds
rorb
ja
xor
jae
loopne
or
jne
add
cs
sub
mov
xor
dec
cli
ds
cs
jnp
xchg
dec
daa
in
cmp
testl
in
mov
inc
popf
lock
sahf
loopne
pop
push
pop
movsl
lods
xor
inc
pop
xchg
xor
pop
iret
icebp
mov
sarl
mov
test
xchg
pop
dec
push
je
std
cld
cld
mov
pop
testl
add
pop
arpl
or
aad
mov
mov
aad
xor
ret
mov
or
stos
push
mov
push
mov
fbstp
sbb
mov
cwtl
mulb
aaa
mov
rcrb
sbb
xchg
dec
stos
addr16
mov
lret
idivb
xchg
jne
add
fsubrl
decb
arpl
adc
push
fcmovnb
nop
loop
lods
dec
jae
cmc
xchg
lcall
rorl
and
test
lea
and
xor
scas
idiv
cmpsl
pop
mov
mov
orl
sbb
call
cmp
mov
dec
ljmp
hlt
pop
pop
lock
xchg
or
mov
jle
xor
orl
mov
mov
adc
mov
jnp
gs
ja
or
add
in
or
shl
and
pop
sbb
jle
xchg
popa
or
adc
outsl
loope
push
xchg
xor
out
pop
xchg
jg
out
dec
out
sahf
add
xchg
cwtl
scas
std
cmpsb
mov
fld
xor
pop
loopne
dec
ss
les
pop
mov
subb
mov
shrl
cwtl
cmp
pop
sbb
add
cld
subb
aam
lods
ret
in
add
out
mov
push
pop
pushf
dec
jbe
imul
aam
adc
mov
or
test
cmpsl
xor
mov
out
fwait
hlt
adc
push
iret
insl
lret
dec
pop
pop
mov
dec
push
jbe
sti
inc
xor
mov
sbb
lods
orb
fs
lret
adc
rcll
mov
or
adc
push
cmp
push
lock
aad
out
inc
adc
cli
xchg
test
inc
aad
inc
push
adc
mov
sbb
cmp
mov
mov
cmpsl
fsts
out
or
cmp
push
pop
inc
test
pop
int
push
cld
add
sbb
mov
or
and
adc
and
push
ljmp
or
jmp
jno
int
jae
fnsave
loop
ficoms
lods
sbb
xchg
dec
lea
pop
icebp
mov
xor
insb
daa
jne
push
loopne
lret
das
rorl
cmpsl
sbb
out
xchg
enter
pop
or
repz
jbe
push
cs
adc
cmpsb
add
rcrb
out
popf
stos
sahf
shlb
or
pop
xchg
mov
pop
imul
jge
ds
xchg
jle
sahf
aaa
and
cmp
lret
adc
inc
jno
or
orl
icebp
loopne
addl
adc
int
mov
dec
jmp
adc
inc
mov
mov
int3
outsb
shll
stc
jae
fbstp
dec
jne
fcmovbe
movsb
adc
dec
addb
pop
pop
in
daa
cmp
je
xor
or
sbb
jbe
mov
and
add
cwtl
orb
jne
sub
sub
xlat
test
jmp
in
mov
out
mov
divl
push
jmp
ja
mov
and
sub
push
shll
cmpsl
adc
or
mov
mov
scas
cmpsl
bound
arpl
addr16
clc
pop
popa
and
out
cwtl
xchg
xchg
jg
lcall
call
inc
mov
adc
mov
popa
add
mov
jb
xchg
pushf
cmp
and
mov
lret
dec
jge
mov
mov
dec
jecxz
leave
cli
je
ds
sub
daa
inc
push
sbb
cmp
mov
add
nop
inc
sbb
scas
sbb
inc
daa
ja
pop
push
ret
mov
dec
repnz
xchg
lods
imul
add
in
dec
lods
hlt
sbb
cmp
push
outsl
sub
mov
mov
mov
xchg
mov
insl
jl
scas
stos
add
out
pop
adc
pop
sbb
insl
scas
popa
or
cmpsb
or
mov
sub
xchg
dec
imul
push
xor
dec
xlat
jp
in
jle
xchg
int
pushf
add
lret
mov
pop
ljmp
jl
fildll
mov
push
push
out
addr16
lock
cmp
testb
push
jg
cmp
insb
xchg
shlb
dec
stos
xor
pop
sti
adc
mov
jge
stos
jno
and
mov
jge
sub
mov
in
jecxz
or
cmp
ror
dec
push
and
imulb
lahf
adc
sbb
cmp
ret
mov
or
inc
pop
daa
inc
sub
setge
pop
or
out
jecxz
xor
insb
inc
or
cmp
jb
jl
push
call
push
lar
enter
pushf
addr16
rolb
fisttpll
icebp
test
movsb
dec
adc
pop
repz
hlt
shl
lret
push
mov
adc
fimull
xlat
or
insl
test
fmull
jecxz
inc
or
pop
and
jne
push
push
fcmove
arpl
sbb
fstl
aaa
outsl
xchg
mov
mov
fwait
jmp
add
xor
jecxz
lock
fnstsw
sar
mov
jl
arpl
sub
add
roll
mov
or
pmaddwd
int
lods
adc
lds
mov
sub
push
push
inc
inc
push
repz
cmpsl
cmp
leave
or
roll
je
pop
pop
shll
lds
jbe
pop
cmp
cli
cmp
fldl
dec
mov
loope
xchg
das
dec
inc
cmp
cmp
scas
dec
and
jle
push
in
stos
dec
jl
in
call
mov
mov
lea
sub
xchg
data16
push
and
mov
out
xchg
and
insl
lcall
dec
movsl
lcall
aad
es
fwait
mov
mov
ss
fcoml
fs
inc
jecxz
xor
mov
jmp
dec
out
test
dec
pop
das
cmp
ficomps
ja
add
lds
lds
enter
pusha
push
inc
rorl
inc
pop
aad
loopne
pop
add
inc
jo
out
pushw
pop
dec
mov
sub
and
adc
xor
adc
mov
push
icebp
mov
fbstp
cwtl
ljmp
aas
sti
in
lahf
cwtl
out
xchg
inc
jb
mov
cmc
int
call
or
icebp
sbb
dec
add
sbb
cwtl
push
push
inc
ja
leave
inc
push
gs
imul
out
lret
movsl
fidivl
push
mov
bnd
cwtl
hlt
xor
data16
loope
mov
lcall
andl
cmp
pop
sub
pop
fnstenv
stos
shl
cli
xor
les
imul
aaa
scas
and
fld
sbb
cmp
cmpb
jne
fdivr
mov
icebp
mov
xlat
xchg
addr16
in
jle
cmp
mov
mov
sbb
out
inc
insl
mov
push
fwait
lods
and
fisubrs
xor
insl
out
test
je
dec
enter
mov
enter
push
cs
xor
popf
cld
jns
and
fisttpll
mov
sub
mov
xor
lret
jae
fcompl
mov
fildll
push
nop
ret
arpl
push
jge
dec
cmp
scas
jo
roll
add
test
push
lods
mov
enter
xor
push
jmp
fcmovnbe
sbb
mov
mov
jnp
mov
mov
insl
fs
sbb
add
nop
fs
mov
inc
aas
aad
cmp
lods
adc
mov
pop
mov
ss
stc
mov
cltd
daa
jae
mov
mov
pop
pop
test
add
or
cli
stos
rorb
aaa
mov
icebp
jmp
pop
fdivr
lcall
pusha
mov
fadds
or
xlat
outsl
jge
mov
adcb
rcrl
adc
popa
gs
lds
out
stos
adc
fsubrs
jb
mov
in
fsts
test
dec
push
fdivrs
rclb
pop
adc
insb
and
cmp
cmp
mov
je
adcl
aaa
lods
mov
push
cmp
sti
pop
pop
ja
sub
push
cmpsb
mov
lahf
or
push
sbb
add
or
aad
cmp
fucomp
adc
pop
int
xor
aas
arpl
outsb
fldenv
scas
test
dec
pop
mov
mov
inc
xchg
icebp
cmp
bound
aaa
es
jb
es
out
in
pop
pop
xchg
mov
lods
aad
es
xor
roll
icebp
fstpt
jg
outsl
adc
gs
nop
sub
nop
dec
les
and
add
jge
fstl
push
sub
movsb
sar
mov
stc
fimull
pop
ds
cwtl
out
std
jb,pn
jnp
sbb
movsl
lods
adc
push
subl
rcll
outsl
jmp
mov
mov
ja
pop
mov
mov
int3
inc
mov
lret
das
ljmp
mov
mov
jg
test
mov
mov
mov
jmp
ret
ljmp
scas
es
lds
xor
lcall
mov
ret
test
push
xchg
jae
sbb
ljmp
pop
xlat
mov
icebp
ljmp
inc
sbb
sbb
into
adc
pop
in
xchg
xchg
mov
hlt
outsl
and
test
sub
inc
lea
fstpl
mov
loopne
mov
mov
dec
and
hlt
lods
adc
pop
pushf
int
jge
sbb
mov
cs
push
xor
or
out
mov
dec
mov
pop
and
insl
sbb
jne
pop
into
sbb
cmp
rolb
ss
or
jle
daa
rcrl
jmp
ljmp
test
rcr
cmpb
ret
fwait
jno
aaa
out
jecxz
mov
pop
mov
xchg
push
fxam
sbb
or
jb
mov
aas
push
mov
int
imul
scas
shr
repz
pop
dec
fistpll
mov
lret
jae
mov
stos
mov
dec
mov
movsb
lods
shrl
aas
shll
fisubs
ljmp
dec
xchg
add
mov
xor
mov
mov
rorb
nop
testb
loopne
mov
movsb
stos
mov
lret
lret
xor
fwait
sahf
push
fiaddl
mov
icebp
mov
loopne
cs
add
xchg
mov
cmp
inc
iret
shlb
movsl
fnstcw
call
xchg
iret
adc
jae
dec
xchg
hlt
lahf
cmp
xchg
arpl
push
adc
sbb
ret
and
mov
xchg
xor
sub
enter
daa
or
sbb
adc
dec
cwtl
pop
mov
scas
scas
jg
jnp
aam
fisttpl
xor
push
and
fdiv
xchg
mov
push
xchg
hlt
and
rorl
add
adc
ret
and
enter
add
lock
loop
sti
enter
dec
dec
adc
mov
inc
inc
in
out
sub
imulb
ficomps
incb
insl
lret
stos
and
sbb
pop
lods
int3
pop
pop
cmpsb
xor
ror
cmp
mov
cmc
xor
xor
loope
out
fdivrl
mov
call
aam
dec
adc
daa
subl
vmwrite
loopne
test
jmp
ds
pop
and
and
adcl
imul
mulb
lcall
adc
stos
dec
inc
push
inc
sbb
jbe
mov
xorb
push
mov
aad
or
loope
loope
and
ret
inc
push
sub
nop
ret
jno
lret
js
adc
mov
pop
pop
popa
outsb
insb
cmp
std
stos
mov
inc
and
popf
sahf
les
cmp
mov
ds
pop
mov
mov
leave
fucomip
dec
adcb
and
bound
or
mov
les
jp
jbe
and
das
rcrl
fldl
dec
outsb
sbb
xchg
ja
sub
sbb
inc
lods
cwtl
lret
lds
mov
sbb
push
sub
pop
ljmp
xchg
xor
sbb
mov
je
dec
mov
movsl
push
les
fnstenv
fs
loop
lods
pop
sti
popa
mov
outsl
lods
js
icebp
out
stc
xlat
sbb
push
sti
fwait
mov
mov
popf
xchg
repnz
jns
sub
sub
jecxz
dec
xor
ret
sahf
mov
pushf
xor
xor
ja
inc
nop
push
xchg
mov
mov
mov
dec
xor
std
ds
push
pop
adc
xor
mov
loope
mov
mov
jge
pop
shll
lods
lea
jp
subl
dec
adc
jb
cmpsl
mov
lods
sbbb
inc
hlt
and
add
sbb
mov
jp
call
pop
pop
xor
shr
mov
pusha
aas
or
rorl
out
stos
jno
mov
mov
call
lds
iret
sub
and
xchg
repz
sbb
push
es
xor
fidivrs
sub
mov
cmp
inc
adc
jp
in
jno
in
and
popf
or
ds
jge
or
popf
popa
and
xor
mov
sbb
jge
pusha
pop
mov
xor
rcrb
daa
and
dec
rolb
pop
test
test
outsb
ficoml
xor
lahf
and
jae
test
or
inc
sbb
or
lahf
ret
lret
dec
xor
pop
mov
inc
xor
xor
push
lret
cwtl
mov
gs
movsl
ds
mov
loopne
lock
pusha
popf
icebp
dec
or
xchg
sbb
push
mov
clc
mov
sbb
pop
out
pop
jp
adc
cmp
and
mov
pop
inc
cmpsl
xchg
dec
fwait
ss
movsb
rolb
in
adc
jnp
call
lahf
mov
dec
push
mov
sbb
clc
push
pop
stos
aad
and
mov
mov
cmpsb
scas
push
hlt
cmp
rcrb
jnp
popa
leave
mov
xor
push
add
or
inc
cltd
imul
stc
and
into
and
xchg
es
jae
in
ljmp
xlat
dec
xchg
xchg
in
scas
ss
pop
pop
and
sub
jb
adc
std
xchg
add
rcll
test
ud0
andl
push
je
into
out
add
testb
mov
dec
lock
sub
lcall
lds
dec
fwait
in
jns
loop
call
into
sti
cmp
aad
movsb
xor
int
pop
push
les
xchg
das
sub
jl
and
xchg
out
lret
adc
ja
pushl
cmp
dec
pop
push
jmp
in
and
inc
jns
mov
jp
gs
inc
dec
dec
xor
inc
pop
cltd
repnz
rep
aam
jo
add
mov
mov
pushl
sbb
fs
mov
push
xchg
hlt
push
cwtl
js
cmp
jns
test
dec
xchg
in
mov
iret
stos
cmp
rcrl
aaa
mov
lcall
xor
mov
pusha
mov
out
fnstenv
das
lret
loop
pushf
shl
mov
incl
ds
adcl
test
sahf
mov
or
inc
in
sti
xchg
cmc
lock
pop
fdiv
push
mov
scas
jbe
mov
fs
xor
xor
xlat
mov
lods
mov
lods
out
cmc
add
cmp
adc
imul
xchg
in
stos
adc
sbb
mov
cs
cs
out
inc
mov
mov
jmp
push
ret
and
addr16
xchg
dec
es
test
jnp
movsb
dec
or
arpl
addr16
pop
loope
add
pop
test
into
popf
xor
rcll
and
add
test
sti
mov
sbb
jmp
dec
movsl
mov
hlt
push
jg
xchg
sbb
sub
lds
iret
pop
push
pop
bound
push
push
mov
pop
mov
pop
xor
fbstp
cmpsl
cmp
cmp
leave
mov
ss
mov
jo
and
sub
inc
lock
fwait
out
mov
nop
cmpsl
icebp
xor
ficompl
mov
jmp
movsl
sbb
pop
inc
pop
jbe
jp
sbb
imul
push
add
cmp
pop
cmc
sbb
jo
psraw
fucomp
cmp
pop
or
dec
jmp
imul
fcomp
cmp
aam
sub
push
es
lahf
sbb
mov
xchg
clc
rcll
es
incb
test
lcall
xor
pop
sub
ret
jne
mov
xchg
pop
jg
jecxz
je
pop
pop
mov
inc
jo
sub
fdivrp
mov
jo
insl
push
fstl
mov
rorl
pusha
mov
cs
mov
dec
pop
mov
pushf
adc
sbb
pop
test
xchg
add
test
int3
xor
push
inc
stos
hlt
jns
icebp
incb
std
subb
in
daa
xlat
vpsubusb
popa
push
xor
into
mov
bound
xchg
adc
gs
faddp
jno
mov
lcall
mov
lcall
lahf
lods
adc
cwtl
cmpps
push
insl
in
cmp
mov
clc
cmp
je
aaa
fsubl
out
sub
movsb
test
popf
adc
popf
mov
mov
push
popa
fildll
xor
xchg
bound
and
pushf
lds
sub
sahf
pop
inc
dec
int
cmp
sub
mov
fdivrl
or
loope
jl
aad
dec
int3
or
cltd
sub
sbb
xchg
push
mov
sbb
inc
and
push
xchg
dec
add
pop
inc
xchg
cld
add
pop
fninit
cmp
xor
inc
test
jge
stos
jno
jg
jae
push
and
or
add
mov
fimull
adcl
leave
es
mov
xchg
data16
insl
jmp
mov
gs
mov
sbb
xchg
xchg
push
mov
sbb
dec
rorl
cmp
fisttpll
add
lock
push
cmpb
fwait
push
cmp
pop
dec
sub
out
sbb
xor
decl
and
push
sub
sti
lret
xor
add
sub
cs
dec
arpl
sbb
daa
clc
dec
flds
ljmp
mov
push
xlat
or
clc
js
arpl
stos
enter
add
dec
mov
std
sub
adc
pop
push
jmp
ja
jmp
cmp
pop
adc
xor
call
rolb
push
mov
lahf
shl
ja
adc
xor
rclb
mov
int
mov
pop
std
sub
call
sub
mov
push
xor
mov
xchg
mov
inc
loope
inc
movsl
sbb
jecxz
sbbb
pop
adc
add
mov
movsb
mul
scas
mov
inc
test
mov
push
testb
mov
jge
inc
mov
mov
call
add
inc
inc
push
std
mov
jo
adc
gs
jl
inc
mov
xchg
xor
xor
dec
clc
repnz
sub
push
xor
mov
push
sarb
xor
shr
int
imul
cmp
mov
out
dec
cmpsl
adc
test
in
mov
or
aad
push
jne
sbb
jle
jbe
inc
mov
cmp
or
enter
add
arpl
push
mov
repz
inc
xor
dec
fnstcw
mov
subb
push
dec
repnz
and
dec
outsb
sbb
outsl
dec
in
mov
adc
sahf
scas
mov
mov
call
insb
sar
aas
aam
aas
mov
add
mov
aam
in
xchg
in
jbe
test
jl
jge
es
cli
scas
fwait
rolb
or
cld
push
sub
test
js
leave
mov
inc
push
out
inc
jg
pop
xchg
dec
cwtl
faddl
popf
sti
nop
mov
sbb
xchg
movb
mov
or
fwait
adc
cmp
xchg
dec
inc
mov
jno
fs
inc
sub
mov
sbbl
ror
stos
sub
mov
xchg
lods
add
adc
lcall
xchg
cs
shll
mov
xchg
hlt
fsubp
movsb
mov
movsl
jo
add
add
pop
call
repz
xchg
xor
stc
cs
scas
jge
dec
ja
and
mov
es
nop
lret
jg
xlat
stc
mov
sub
and
lods
add
and
inc
stos
xchg
ret
adc
lret
adc
roll
test
and
mov
shll
add
insl
ret
test
mov
xchg
daa
mov
dec
mov
lds
lret
mov
insb
add
aas
mov
xor
scas
ret
lds
lods
add
leave
inc
mov
lcall
repz
xor
lods
inc
mov
jne
xor
in
dec
xchg
inc
lcall
dec
outsl
aas
test
push
stos
roll
into
fs
sarb
adc
xchg
fmull
idivb
add
xor
popa
fcmovnb
addl
imul
fnsave
push
in
jg
sub
pop
enter
fisttpll
ret
jns
dec
cmp
lret
nop
js
add
call
push
arpl
mov
jae
adc
ja
push
jl
sub
sub
mov
push
cli
pop
scas
fcoml
shrl
fists
sbb
inc
pop
mov
xorb
fcompl
lods
insl
arpl
mov
sbb
inc
inc
ret
pop
lahf
xor
jg
mov
insl
fisttpl
sub
jno
and
aam
stos
jb
xchg
in
in
xor
and
daa
pushf
dec
mov
cmc
imul
lock
or
shrb
inc
roll
lret
aad
mov
mov
jbe
sub
mov
movsb
stc
gs
push
jge
xor
scas
sahf
test
loop
nop
into
xorl
ljmp
rcll
inc
test
add
movsb
jecxz
dec
das
cmp
dec
lds
insl
iret
sbb
test
loopne
adc
cmp
lret
xchg
mov
pop
cmpsb
push
sbb
mov
cmpsb
sub
repz
popa
adcl
sbb
ret
mov
or
adcb
int
sahf
add
add
jmp
test
rorl
cltd
mov
jb
stos
push
push
cld
push
or
test
ja
cld
or
jb
xchg
aas
cwtl
ja
add
js
clc
cmpsb
jl
and
sub
dec
inc
enter
push
daa
lds
subl
sub
pop
mov
adc
gs
incb
or
mov
ret
sbb
inc
insl
notb
sub
add
add
sub
dec
or
mov
aad
cmp
or
and
jae
iret
icebp
test
idivb
mov
addr16
adcl
and
push
sub
test
mov
cmp
mov
fistl
dec
mov
scas
push
stos
push
into
loopne
sti
popa
sub
cwtl
jo
adc
push
mov
push
movsl
push
stos
sub
jecxz
cmp
mov
ss
sti
fdivrl
mull
xchg
sahf
mov
out
inc
int
popf
push
push
mov
in
lea
jns
cmc
sbb
xor
std
mov
lods
mov
fidivrs
rcrb
sbb
cmpsb
movsb
push
shlb
add
ds
xchg
cmp
xchg
push
sbbl
xchg
cmpsl
jne
fimuls
add
sub
inc
sti
int
xorl
idivl
stc
adc
jae
test
xor
jo
les
sub
and
out
mov
mov
mov
mov
sarl
mov
cmp
out
mov
mov
xor
fistpll
jnp
out
push
mov
stos
cmp
out
pop
dec
leave
cmc
sbb
cmp
adc
jno
mov
fnstcw
xorb
xor
xchg
aas
aaa
push
outsb
push
add
dec
inc
cmpsl
and
push
fs
mov
rcrb
test
test
xorb
cmp
and
or
lods
inc
mov
aad
in
dec
pusha
pop
call
push
mov
fidivrs
add
in
mov
xchg
clc
loop
lret
jg
mov
test
mov
push
pop
dec
cltd
sub
mov
sbb
insl
stos
rcll
les
jmp
cs
xchg
and
mov
pop
inc
dec
fs
test
pop
shll
dec
int3
inc
out
jecxz
or
leave
mov
cmp
daa
mov
in
mov
pop
jb
imul
push
loopne
aam
adc
xchg
shl
xchg
jge
or
pop
push
pop
mov
lds
scas
inc
jl
pop
push
xchg
fs
xchg
push
or
mov
mov
arpl
vsubpd
sub
xor
mov
popf
pop
pop
sbb
lret
cmpsb
jge
testl
sbb
cld
add
mov
xchg
testl
pushf
mov
xor
mov
cmpsl
mov
mov
ja
cmp
pushf
mov
add
iret
add
mov
cs
push
adc
mov
mov
push
movsb
or
stos
xchg
nop
mov
decb
les
out
jge
dec
pop
pop
sarl
daa
jne
cmpsl
cmp
ss
movsl
imul
push
leave
data16
sbb
mov
inc
push
ljmp
imul
jle
shlb
and
pop
cmc
pop
mov
mov
pop
inc
adc
sahf
sub
fwait
fs
in
pop
sti
adc
inc
and
inc
and
inc
add
mov
fnstcw
mov
inc
mov
add
test
mov
lods
pop
out
fdivrp
mov
pushf
fs
mulb
jle
icebp
mov
test
hlt
cltd
push
push
jb
jle
test
xchg
adc
psllw
pop
lds
xor
xor
gs
fwait
je
push
sub
das
sbb
lret
ret
out
xor
insb
mov
mov
sti
add
pop
push
lods
pop
dec
mov
imul
out
pop
jnp
mov
adc
ja
and
inc
jmp
leave
jne
sbb
call
int
out
push
cs
mov
add
in
pop
lahf
bound
fistpll
or
lods
ret
or
or
insl
ja
mov
ds
frstor
fwait
clc
sub
push
mov
cmp
jns
fdivrl
inc
daa
fadds
push
ss
sbb
ret
imulb
cs
cmp
lods
repz
push
mov
sbb
mov
pushf
push
test
popf
aad
sbb
xor
jle
lret
mov
pop
pop
je
lock
jne
add
rcl
aas
insb
jne
pop
push
add
cmp
jae
in
dec
dec
gs
cmp
sub
aad
fs
xlat
test
cmp
loope
int3
mov
inc
gs
lret
call
pop
outsb
arpl
outsl
jns
adc
repz
jmp
pop
je
mov
es
sahf
or
and
jl,pt
mov
pmaxub
int3
lods
lcall
add
sub
mov
jns
and
mov
pusha
xchg
icebp
das
repz
adc
push
or
insb
pop
xchg
xchg
cmpb
pop
push
stos
jp
push
jmp
inc
ljmp
je
pushf
inc
pusha
push
in
xchg
or
cwtl
scas
sub
inc
pop
decl
lods
inc
fbstp
add
loopne
shll
shll
mov
adc
pop
pop
imul
fdivrs
flds
std
push
rorb
mov
xor
adc
scas
jmp
mov
daa
das
lret
mov
sub
dec
mov
dec
jb
xchg
pop
mov
jo
mov
ret
inc
fbld
xor
push
gs
jecxz
or
repz
add
add
mov
pushf
mov
lcall
mov
fmulp
xor
hlt
mov
push
jecxz
out
aam
sbb
scas
pop
jns
jg
jg
scas
add
push
js
mov
jne
cmp
mov
enter
mov
popa
push
out
sub
out
jp
in
movsl
xor
xchg
xchg
or
icebp
cld
test
cmc
xchg
cmpsb
cltd
mov
inc
loop
inc
adc
sbb
inc
rsm
lret
imul
sub
mov
jl
lds
pop
xchg
inc
mov
lods
sbb
mov
mov
mov
sub
cwtl
sbb
push
loopne
imull
lahf
push
rorl
ja
inc
cmp
push
xor
testb
xchg
jecxz
pusha
and
inc
in
inc
test
mov
scas
xor
push
out
sbb
into
nop
scas
leave
incl
or
cltd
adc
mov
test
sub
stc
loop
ror
mov
ja
rclb
jb
lret
inc
popf
mov
xor
test
and
je
stc
popa
stos
mov
int3
mov
dec
cs
pop
aad
xchg
jecxz
sbb
inc
cmp
in
pop
cmp
shlb
sbb
jne
sbb
mov
cwtl
mov
inc
loop
lock
add
fnstsw
cmp
cli
icebp
aaa
pop
cltd
hlt
in
test
cld
cmp
jmp
imul
scas
mov
scas
mov
inc
std
push
ucomiss
inc
test
fldt
sub
scas
sub
xchg
sub
loope
mov
push
sbb
xchg
in
aad
push
popf
sub
and
shl
jge
jle
loopne
aas
cli
cmp
mov
xchg
push
sbb
cmp
inc
repnz
dec
xchg
mov
xchg
sub
sub
cmp
rcr
push
cmpb
shlb
xchg
popa
cmp
and
ja
pusha
or
mov
or
testl
das
add
mov
leave
jnp
mov
jo
push
dec
hlt
push
push
stos
sbb
cli
jbe
sti
xchg
push
inc
out
xor
inc
shrb
scas
es
cld
lock
push
sub
je
mov
inc
stos
or
cld
movsl
add
fs
fisttpll
adc
leave
push
pusha
mov
xor
mov
adc
pop
outsl
pop
push
add
roll
sub
int
lods
mov
push
mov
test
ret
or
adc
or
and
dec
pop
pop
mov
fldenv
stos
sahf
movsl
lret
shl
sbb
mov
loop
inc
xor
xchg
jb
cmp
data16
es
popa
movsl
sub
jno
and
jnp
daa
adc
pop
xor
cmpsl
lret
daa
incb
push
add
xor
cmp
cwtl
cld
jle
mov
push
push
mov
popf
mov
les
fcomps
dec
mov
mov
add
ljmp
jne
push
test
sub
inc
push
popf
mov
js
iret
jb
data16
add
pop
arpl
xchg
or
and
add
inc
and
dec
pop
sub
dec
int3
cmp
sbb
ds
outsl
cmc
adc
and
lcall
cmpsl
mov
or
inc
cld
aad
push
push
xchg
lea
xchg
jo
sbb
lcall
xchg
faddl
rcl
pop
daa
xchg
sub
or
add
add
mov
sahf
mov
sti
sbb
add
incb
adc
pop
mov
adc
mov
das
fistpl
mulb
or
sub
push
ficoms
mov
xchg
dec
cmc
in
imul
or
aad
mov
shl
ret
jecxz
xor
or
inc
dec
push
test
dec
popf
or
ret
xchg
or
fnsave
or
mov
sub
test
mov
idivb
adc
aas
mov
stos
or
imul
jo
loope
fbld
stc
pop
or
mov
fstpl
push
imul
enter
and
scas
sbb
cwtl
pmulhuw
aaa
push
pop
fdivl
rcrb
mov
cmpsb
int
or
mov
fwait
push
mov
dec
adc
push
addr16
mov
add
dec
test
pop
aaa
rorl
or
mov
dec
repnz
mov
xchg
mov
sbb
movsl
or
inc
xlat
jge
mov
xlat
lods
aas
cmp
jns
push
idivl
pop
jecxz
xchg
jp
dec
jge
sbb
sbb
ja
imul
xchg
ficompl
push
xchg
leave
pusha
aad
cmpsb
xchg
shr
mov
dec
xchg
movl
in
shlb
stos
pop
inc
add
out
insb
xor
lcall
or
andb
jae
je
mov
mov
and
inc
and
mov
push
mov
repnz
testl
or
int
imul
jb
sbb
ljmp
inc
fcmovnb
int3
scas
fldt
movsb
xchg
push
pop
adc
ds
neg
lods
movsb
hlt
scas
cmpsl
mov
lods
fidivrl
pop
jg
fcoms
mov
divl
int3
sbb
push
enter
rorb
inc
fucom
ljmp
outsb
dec
add
nop
pop
push
pop
pop
cmp
jnp
clc
push
in
movsb
hlt
cmp
push
lea
sbb
sub
lcall
hlt
icebp
inc
push
xor
bound
loope
cmp
mov
jl
mov
sbb
xchg
cwtl
inc
test
xchg
or
lock
xor
mov
cmp
int3
pop
mov
sbb
mov
ret
mov
inc
enter
sub
jb
mov
nop
out
xchg
scas
shrb
aaa
mov
dec
xchg
cltd
test
mov
data16
ja
fistpl
es
xor
xchg
xchg
mov
fildl
mov
popa
adc
mov
jmp
xchg
cmp
cmc
sbb
push
pop
lahf
mov
fidivrs
jae
inc
jae
or
fwait
mull
cltd
dec
cmp
sbb
sub
cmp
jle
sub
ja
test
or
mov
iret
outsl
and
jp
orb
push
jp
cmc
scas
xchg
pop
into
sub
push
cmpb
inc
sbb
add
insb
test
test
movsb
jl
lods
mov
ret
dec
js
and
push
mov
dec
ljmp
inc
mov
mov
jb
fsub
xchg
sti
mov
sub
dec
add
or
jno
mov
loopne
scas
les
out
fmul
insl
fcoml
lods
sub
jo
in
jbe
arpl
add
neg
cmp
or
pmaxsw
aad
icebp
sti
mov
leave
xchg
and
andb
jl
xchg
ret
cmp
mov
out
sbb
add
pop
push
clc
cs
and
aas
ss
inc
mov
call
jp
add
mov
cwtl
mov
push
push
fldenv
mov
out
pushf
jne
call
xor
cs
inc
cmp
mov
pop
add
popa
pop
int3
jmp
push
xchg
es
add
xor
xchg
popa
jno
xor
push
inc
add
leave
mov
lods
js
push
xchg
popa
movsb
lea
adcl
mov
shl
mov
xor
loop
sbb
in
inc
stos
pop
cmp
out
hlt
aas
cld
les
movb
lahf
xlat
lahf
fdivrs
add
cmpsl
xchg
pop
andl
jns
sbb
nop
aaa
push
sub
stos
popa
mov
out
lret
sub
jns
lods
cmc
loopne
cmp
mov
cltd
mov
les
mov
dec
mov
push
push
mov
mov
sti
jae
test
sbb
out
jg
cmpsl
addr16
mov
adc
test
testb
sti
loopne
adc
outsb
fdivrl
cmp
pop
jmp
mov
add
pop
sahf
fnstenv
cld
out
sbb
fiadds
mov
xorl
mov
outsb
xor
mov
loope
mov
lahf
mov
lods
sbb
xchg
mov
out
pop
clc
cmp
pop
cmp
lods
pop
sbb
xchg
pop
divl
clc
addr16
jae
dec
pop
rcrb
cmp
pop
xlat
push
jno
sub
add
add
push
shll
mov
mov
out
ficomps
call
movsl
enter
ret
and
mov
cmp
mov
pminub
dec
xchg
test
push
loopne
inc
icebp
out
std
cmp
and
cmp
mov
mov
add
push
fcmovnu
sarb
jecxz
adc
enter
dec
addb
inc
enter
addr16
xchg
or
loope
sbb
in
and
mov
and
jnp
add
jo
int3
jg
jl
cmp
or
xchg
outsb
gs
sahf
sahf
mov
xchg
sub
sub
xor
push
call
mov
pop
xchg
inc
test
push
lcall
cmpsl
xchg
outsb
test
cli
out
lds
flds
mov
pop
iret
adc
stos
into
fdiv
in
mov
jle
lds
popa
add
xchg
or
adc
adc
sbb
jne
jae
mov
add
cmpsl
inc
add
or
testb
outsl
sbbb
lods
in
ss
push
je
dec
xchg
call
mov
push
fwait
cwtl
jne
jmp
int3
jecxz
faddp
test
xor
imul
ja
push
and
or
cmpsl
dec
cmp
cmp
mov
and
jl
add
pop
test
dec
loope
adc
push
and
adcl
and
in
inc
popf
xorb
mov
imul
stc
lods
les
out
aam
or
js
xchg
mov
iret
pop
das
iret
fwait
call
mov
outsb
mov
dec
aad
out
and
jo
mov
mov
lods
rcrl
lea
or
iret
dec
and
nop
sbb
xor
inc
pop
xchg
mov
push
xorb
push
xor
mov
fnstcw
or
mov
fsubrs
dec
cs
sub
xchg
mov
out
scas
fucomi
adc
and
popf
push
stc
adc
loopne
xchg
loop
imul
pop
imul
or
cmovp
outsl
adc
fs
rorl
stc
fldl
pop
repz
inc
adc
add
scas
pop
mov
push
cmpsb
cli
loope
xchg
inc
push
mov
pop
sub
movsl
pop
sbb
mov
test
sub
push
out
mov
dec
insl
sbb
sub
adc
add
xchg
pop
pop
loop
repz
fstps
jo
jnp
jmp
push
inc
pop
icebp
jle
pop
sub
xlat
je
insl
pop
out
out
subl
popf
in
test
call
add
sbb
ja
jge
aad
jae
push
fstpt
pop
jmp
or
leave
push
into
xchg
lock
movsb
inc
sub
aam
popf
rcr
rclb
add
aaa
stos
cld
addr16
xchg
repnz
sub
das
test
sbb
inc
mov
inc
push
lods
test
sbb
dec
mov
jmp
call
inc
out
or
sbb
mov
fimuls
inc
cmp
adc
add
jp
mov
pop
sub
repz
andb
roll
mov
subl
and
fidivrl
inc
jle
repnz
jb
aas
inc
sub
hlt
mull
mov
pop
dec
pop
xchg
popf
pushl
push
mov
jne
stos
fmull
stos
push
sub
addr16
in
xchg
leave
notl
or
jo
in
and
xor
jne
xchg
xchg
sub
xor
mov
sbb
sti
and
int
test
je
jp
stc
xlat
xchg
mov
mov
fsubl
and
cmp
sarb
cmp
cmp
adc
mov
mov
insl
push
outsb
push
jno
pusha
das
push
cmpsl
sbb
jo
lret
mov
sbb
sbbb
mov
mov
les
xor
cmp
and
leave
cltd
dec
cld
out
mov
out
lock
les
imul
in
outsb
icebp
add
hlt
jae
fmull
fcmovbe
mov
add
mov
sub
call
cmp
mov
ret
cmp
dec
daa
mov
fnsave
or
mov
leave
xchg
popa
xor
jnp
outsb
jmp
in
and
adc
inc
in
push
imul
push
add
stos
popl
adc
shll
rcll
sbb
inc
and
adc
fstpl
sbb
into
jge
jecxz
pop
ret
rcrl
or
mov
cli
xor
dec
jl
test
mov
in
jb
ret
int3
pop
imul
jecxz
push
sbb
cmp
push
inc
adc
mov
scas
dec
jecxz
insb
xchg
inc
xchg
movsl
pop
pop
xlat
dec
jle
stc
mov
push
addr16
cli
xlat
sbb
pushf
outsb
jae
pop
outsb
int3
sub
xor
push
in
cmc
jg
inc
cmp
mov
rorl
pop
dec
mov
push
mov
sub
in
mov
stos
inc
sub
daa
aaa
leave
pop
stc
adc
mov
mov
inc
push
or
pop
mov
jbe
and
adc
xor
fwait
jmp
in
push
into
pop
std
stc
or
fwait
xchg
and
cmpsb
pop
je
cmp
xor
jle
mov
xchg
fistps
mov
push
and
sub
andl
repz
mov
pop
popa
outsl
or
arpl
add
dec
xchg
int
movsl
xor
push
jns
pushf
push
fsts
cs
or
inc
jge
xor
sbb
stc
lret
fstl
mov
push
testb
cmp
pop
push
mov
mov
pop
addr16
dec
and
jle
fsubr
int3
mov
ret
cli
aaa
add
xchg
loope
in
dec
mov
and
insb
push
cmp
gs
jno
test
in
adc
inc
loop
xchg
xor
xchg
pop
sti
insb
mov
dec
mov
mov
in
cltd
or
dec
loopne
es
and
loope
or
loop
inc
loope
jb
fistl
lea
sub
inc
enter
aad
dec
or
mov
mov
cltd
sub
mov
or
ja
dec
filds
ret
ljmp
add
adc
mov
in
lret
xor
jle
stc
rcll
inc
in
mov
xchg
jp
xor
xchg
push
gs
mov
data16
imul
ret
xlat
adc
adc
andb
and
push
lahf
inc
ret
cld
xchg
shll
inc
mov
sub
inc
stc
cmp
cmpsb
push
cmpsl
mov
add
mov
cwtl
cmp
adc
adc
pop
mov
push
cld
pop
std
mov
in
js
jb
dec
into
xor
adc
jg
stos
cwtl
mov
jmp
mov
jae
ljmp
jmp
pop
and
clc
cmp
xchg
hlt
pop
push
shll
rcr
leave
jo
hlt
lds
push
cmpsb
insb
insl
xor
jge
sarb
mov
insb
sti
imul
sahf
dec
cmp
arpl
jo
push
adc
adc
dec
addr16
xor
movl
cwtl
mov
fists
repnz
ss
popa
loopne
and
sub
ret
ror
jne
lcall
mov
cmovp
sub
pop
enter
mov
std
jmp
jns
cmp
insb
mov
call
mov
adc
push
sbb
ja
or
mov
mov
inc
dec
sbb
push
out
mov
pop
mov
pushf
stos
insl
add
dec
arpl
out
add
lret
lds
gs
and
fnsave
mov
js
or
insb
or
dec
pop
or
cmp
mov
add
scas
fistpl
mov
leave
cmc
and
and
jo
stc
and
dec
sahf
jne
cmp
xchg
scas
int
push
cmp
cli
lret
hlt
js
xlat
in
sub
popf
arpl
pushf
fwait
ret
cli
mov
data16
sarb
hlt
dec
jmp
adc
fwait
repz
jmp
bound
popf
outsb
lds
xchg
mov
repnz
punpcklbw
sub
sub
push
jge
pop
adc
xchg
test
test
cmpb
es
loop
test
pop
shll
jno
mov
loop
mov
add
adc
dec
mov
add
ljmp
mov
pop
pop
sbb
sbb
adc
sbb
repnz
imul
sub
xchg
iret
into
pop
mov
jne
push
pop
jnp
xor
push
loope
sub
mov
xor
insb
dec
sub
pmullw
xor
mov
out
stc
call
or
jmp
xor
sbb
mov
or
sbbb
xchg
sbbb
cmpsl
xor
and
mov
bound
push
out
xchg
imul
jne
and
jo
ret
dec
add
xchg
mov
pop
ljmp
jl
dec
fbld
cmpsl
sbb
cld
cmc
and
loop
out
xchg
les
pop
add
mov
inc
pushf
cltd
add
cmp
data16
test
data16
cmp
xchg
pop
sub
enter
jmp
adc
xchg
sahf
push
jecxz
inc
negb
jge
add
movsb
push
sbbl
add
out
sbb
push
test
incl
dec
mov
cwtl
mov
popf
mov
lret
imul
int3
test
inc
sahf
push
les
and
dec
fs
or
repnz
movsl
jmp
add
icebp
scas
and
mov
sub
xchg
dec
sub
ja
stos
gs
and
dec
add
mov
pop
movsl
mov
dec
nop
and
ja
pop
ficoml
testb
ret
inc
icebp
pop
jo
pop
lock
rcr
sbb
xor
mov
cmpsl
into
or
in
mov
sahf
inc
pop
out
push
aas
insl
or
pop
mov
pop
jne
dec
cmp
imul
aas
ljmp
mov
mov
add
ljmp
xor
outsl
popf
jno
jae
popa
sbb
sub
sub
inc
outsb
into
mov
mov
test
xor
push
out
dec
outsb
pop
arpl
jg
add
and
jmp
jmp
les
mov
and
add
adc
sbb
fs
mov
mov
pop
icebp
xor
sbb
xor
dec
jb
ja
dec
jg
add
fnstenv
mov
arpl
sbb
jl
xchg
push
loope
push
jge
adc
dec
xchg
out
fmull
daa
mov
lret
xchg
add
stc
dec
outsb
arpl
sbb
arpl
add
mov
rorb
imulb
int3
sbb
inc
add
add
popa
jne
test
xorb
shl
ds
js
jg
gs
in
sub
ret
push
cmc
repnz
adc
xchg
scas
cmp
cmp
insl
add
lretw
pushf
sub
outsb
shlb
push
scas
mov
sbb
pop
jg
xor
popa
mov
popf
das
jp
sbb
xorl
outsl
inc
or
insb
test
ljmp
mov
js
mov
mov
test
fnstenv
or
lahf
adc
mov
pop
aad
loope
jbe
mov
xor
push
lods
rclb
es
les
mov
in
inc
xor
sub
sbb
cmp
xor
es
sub
stos
pop
push
repnz
test
lret
sarb
jb
scas
mov
dec
push
repz
mov
sub
rcrl
xor
cmp
aam
imul
notl
arpl
jecxz
mov
movb
movsl
xor
jecxz
mov
and
in
cmpsb
or
dec
inc
stos
pop
sub
into
shrl
adc
mov
jecxz
sahf
int
fcomps
fdivrs
ja
inc
adc
cmp
cltd
push
repz
push
rol
and
loopne
sahf
mov
or
mov
sahf
dec
pop
mov
add
mov
jp
popf
or
fmuls
mov
pop
hlt
insb
mov
lods
mov
int
stc
and
subl
sbb
pop
mov
sub
iret
mov
lret
jmp
fcomi
dec
shlb
cmp
xlat
sub
xchg
scas
mov
dec
inc
push
xchg
fcompl
popf
jle
insb
roll
ret
out
loope
in
repnz
leave
xor
add
sbb
loope
or
movsb
push
fwait
mov
pusha
ret
pop
fucom
clc
fs
shll
jnp
inc
xor
bnd
mov
or
std
imulb
cmpsl
movb
xchg
push
mov
orl
movsl
pop
in
nop
adc
mov
stc
cmp
pop
mov
cmc
mov
xlat
inc
imul
ss
aas
jae
adc
mov
cmp
insb
mov
movsb
mov
push
push
jbe
cld
jmp
push
jmp
inc
sub
cmp
dec
test
sub
sbb
xchg
push
aas
incl
stos
mov
push
mov
addr16
bound
stc
xchg
shll
add
lret
xor
mov
and
inc
loopne
jl
or
movsl
xchg
mov
mov
xor
lret
jle
xchg
dec
xlat
cmp
jmp
pop
in
inc
xor
call
pop
mov
dec
out
insb
out
sub
inc
sub
stc
negl
inc
cmpsl
testb
sbb
fwait
lahf
cmp
addr16
push
xchg
and
add
sbb
dec
mov
push
stos
xchg
insl
pusha
aam
mov
daa
sbb
mov
dec
shlb
orb
mov
add
sbb
notb
push
sub
dec
test
cmc
sub
fldl
ss
jl
icebp
das
call
adc
push
enter
xor
or
xchg
int3
int3
call
mov
andl
fisubrl
mulb
mov
adc
sbb
xor
loopne
add
xchg
sahf
jns
out
fisubrl
jecxz
aad
xchg
jns
mov
jmp
negb
pop
add
jb
dec
aas
mov
repz
std
call
lahf
lret
mov
jecxz
popf
mov
sbbl
idivl
pop
das
jne
mov
insl
push
and
xor
in
fidivl
dec
cmp
cmp
xor
sti
movl
add
inc
lock
mov
in
cmp
out
cltd
daa
xchg
les
std
pop
and
pop
and
mov
cmp
lds
cmp
in
dec
or
repnz
loope
mov
mov
inc
pushf
cltd
sub
mov
outsl
or
test
lea
inc
xor
insl
sub
inc
stos
push
shl
sub
int
inc
dec
scas
shr
adc
inc
xlat
stc
adc
inc
jne
test
jo
and
popa
jle
jnp
xchg
test
fcmovnu
jl
cmp
testb
dec
xchg
mov
scas
dec
das
add
inc
dec
ds
add
dec
sub
xchg
gs
inc
cmpsl
sbb
xor
ss
mov
dec
or
sti
jo,pn
mov
add
ret
and
in
cltd
push
loop
cmp
and
addr16
aam
hlt
out
aad
mov
jbe
xlat
rcrb
subb
and
in
nopl
inc
pushf
inc
and
cld
iret
inc
iret
sahf
xor
pop
mov
pop
call
lods
or
dec
outsl
sbb
xchg
outsl
pop
mov
add
aad
or
and
adc
push
and
mov
scas
nop
sub
adc
in
mov
lret
inc
xor
loop
sub
aaa
cmp
test
pushf
into
stc
mov
and
aas
shlb
dec
and
rcrb
jmp
dec
fadds
xchg
mov
dec
jp
dec
das
lcall
std
cmp
pop
mov
xchg
sbb
movsb
adc
dec
cs
ja
jge
adc
sub
outsb
out
mov
or
push
bnd
mov
ret
jmp
aad
test
mov
mov
mov
test
or
les
rcll
cmpsl
cmp
adc
inc
xchg
dec
sub
inc
lds
sti
cmpsl
arpl
ljmp
ljmp
rcrb
mov
xchg
ret
fidivl
fnstsw
push
push
fdivrp
out
jecxz
jp
sub
xor
cmp
and
ret
fiadds
jge
xlat
ljmp
mov
lods
xlat
scas
adc
jl
mov
pop
push
repz
fidivrl
mov
xchg
aas
mov
xchg
ret
pop
lods
lcall
or
btcl
pop
leave
and
in
icebp
rcrb
push
das
xlat
sbb
dec
dec
stc
scas
xchg
jmp
movsl
aam
mov
mov
mov
insb
dec
dec
shl
mov
sub
sbb
test
cli
cmp
insb
xor
mov
cs
push
test
ret
push
mov
dec
cmpl
lahf
add
icebp
mov
aaa
or
sbb
fcmovnb
add
gs
dec
xorb
lahf
les
xlat
mov
sub
pushf
xchg
hlt
and
dec
sbb
inc
xor
cs
xor
mov
nop
cmc
xchg
xchg
in
imul
iret
jmp
mov
das
cmpsl
orl
sahf
push
ret
push
fs
addl
cmpsl
mov
xchg
push
cmp
mov
pop
jecxz
lcall
lret
adc
mov
or
loopne
addr16
mov
xchg
jae
cltd
adc
xchg
jb
lods
or
fsts
sub
fwait
jle
mov
sub
pushf
testl
ret
mov
jbe
lahf
push
xchg
ret
les
mov
je
push
cmp
jbe
movsb
stc
mov
movsb
push
push
jecxz
ret
jp
mov
insl
push
in
or
test
int3
jbe
xlat
lea
jnp
jecxz
and
inc
jo
clc
fmul
sub
mov
push
addr16
imul
lock
nop
imul
ret
addl
cli
xor
aam
loope
inc
and
jnp
mov
shll
or
add
pop
int3
xchg
test
mov
mov
mov
adc
rolb
or
pusha
mov
rcrb
mov
mov
js
fimuls
rolb
jle
xorb
adc
inc
sbb
cmp
cmp
clc
mov
enter
fmul
pop
push
cmp
lcall
pusha
movsb
push
xchg
xchg
xchg
rcll
das
mov
adc
int3
xchg
aam
pop
es
outsb
inc
leave
fwait
jg
test
scas
lret
pop
pop
mov
fwait
inc
test
mov
leave
int3
lcall
dec
mov
jecxz
xlat
or
scas
jmp
xor
std
out
mov
aam
or
test
jmp
ds
in
shlb
mov
adc
inc
and
add
test
popf
xor
pushf
iret
xor
lea
and
std
mov
mov
rcrl
mov
ds
push
mov
test
or
bound
cmp
je
ljmp
aad
xor
jbe
cmp
pushf
and
cs
mov
adc
cmp
fildl
cmp
dec
cmp
mov
out
mov
fidivrl
jnp
cmp
hlt
mov
lret
add
sub
sub
add
test
jae
adc
mov
hlt
cs
push
jbe
mov
mov
pusha
sbb
xor
or
cmp
into
push
sbb
add
mov
push
lret
mov
ret
dec
inc
fists
sbb
push
lcall
in
push
cmpsb
mov
adc
addr16
pop
insb
iret
fbld
adc
out
pop
pop
scas
into
scas
inc
jle
lea
or
daa
stos
pop
into
add
and
jnp
mov
das
sbb
adc
mov
cmp
jno
push
jg
mov
test
sahf
sub
jge
movntq
sub
and
orl
xchg
negl
out
xor
dec
sub
xor
xor
pop
pushf
push
push
ds
sub
jle
in
repnz
in
inc
add
dec
lahf
mov
push
adc
bound
mov
addr16
aaa
pop
xor
jg
stc
scas
aam
mov
sbb
sahf
pop
sub
cmp
jns
push
pop
loopne
adc
lret
sub
mov
iret
gs
xchg
movsb
cmp
mov
outsl
data16
iret
pop
cli
pop
mov
inc
lret
call
dec
cmp
dec
cwtl
mov
sbb
jecxz
pop
mov
sarb
in
stc
add
adc
out
jne
aad
mov
jno
cmp
rolb
daa
add
arpl
pusha
movsl
scas
pop
push
sub
testb
xchg
cmpsb
mov
mov
xorps
int
loopne
popf
clc
or
sbb
je
fistpll
jb
pop
sub
sets
scas
add
enter
lods
lret
test
daa
es
mov
adc
or
xchg
lret
arpl
test
lods
sub
leave
mov
popa
xchg
outsl
int3
add
cmpsl
enter
mov
es
dec
pop
mov
es
in
jge
cs
mov
insb
jge
jecxz
mov
adc
mov
lods
lods
mov
jne
and
daa
ffree
dec
fwait
les
cmp
cmp
inc
pop
xlat
mov
imulb
mov
cmp
mov
iret
dec
jl
jne
lcall
iret
stc
xorl
je
repz
pop
jl
add
jno
in
cld
outsb
cmp
jnp
out
xlat
rcll
test
sbb
add
jp
cld
inc
adc
mov
xchg
pop
scas
or
lret
push
or
insl
jnp
clc
xlat
bound
movsb
mov
rolb
call
rcrb
pmullw
lods
or
xchg
push
fst
jne
sbb
outsb
cmpb
fidivrl
lret
rolb
jae
sbb
loope
lock
push
sub
mov
shlb
out
lds
mov
cltd
out
mov
sahf
cs
and
cwtl
into
mov
push
in
cmp
movsb
jns
fwait
movsb
mov
insl
lret
mov
pop
fstpt
cltd
out
cld
scas
cmc
mov
pop
sub
cs
rolb
jp
mov
add
mov
sub
add
cltd
fs
inc
in
insl
cmp
mov
fsubp
xor
dec
mov
stc
mov
aam
mov
sub
enter
mov
jae
and
cmpsb
fwait
imul
in
iret
pusha
cmp
sbb
jge
gs
ljmp
cmp
dec
sarl
iret
lock
inc
imul
sub
sbb
and
push
clc
jge
inc
out
bound
sahf
push
out
xchg
lods
inc
jb
out
cmp
stc
bound
jl
add
sub
imul
sbb
bnd
ljmp
out
ss
cmp
mulb
in
add
mov
movl
mov
jo
and
fdiv
cmp
sti
ja
mov
dec
and
pop
ret
sub
jle
sub
dec
cmp
adc
push
sbb
cmpsb
loope
sbb
add
ljmp
cmpsb
push
stos
icebp
fadd
lret
testl
pop
cmc
dec
mov
and
add
cmp
mov
mov
or
pop
inc
shll
nop
sub
xor
dec
cltd
jge
mov
push
mov
dec
push
mov
inc
sbb
test
aaa
movsl
inc
pop
cmp
test
outsl
xor
nop
push
mov
push
fs
push
dec
roll
jb
inc
jbe
pop
dec
adc
cltd
movsl
adc
je
push
aaa
jmp
jmp
loop
sub
mov
jnp
out
inc
push
out
mov
fldenv
stos
cmpsb
cmc
sub
outsl
xchg
mov
cmpsl
dec
jo
mov
mov
or
xor
mov
lret
mov
out
jns
jne
or
push
mov
and
dec
dec
and
mov
or
sbb
loope
push
dec
fs
int3
imul
in
stc
lock
add
xchg
stos
fsubl
push
insb
xchg
mov
pop
pop
xor
xor
repnz
cmp
aaa
stos
xchg
in
xor
jne
xchg
pop
xor
hlt
dec
loopne
and
jge
stos
push
mov
sub
jle
mov
jae
dec
pop
sbb
lret
out
cmpsb
xor
xchg
js
add
add
lock
lock
cmc
cmovbe
cmp
mov
outsl
sti
js
inc
ss
int
std
pop
jnp
dec
hlt
scas
ret
push
cmp
cwtl
jb
add
inc
sub
adc
ss
or
sarb
xchg
nop
xchg
adc
cld
add
push
dec
repnz
test
pop
xor
xor
das
mov
mov
out
adc
test
psllq
sub
mov
test
pop
xor
push
test
je
lods
mov
dec
jnp
repnz
and
aaa
or
add
cmpsl
leave
sbb
repnz
es
pop
out
jns
imul
cmp
ljmp
add
mov
xchg
or
xchg
xor
leave
pop
add
jp
pop
add
call
adc
ret
add
lds
roll
ds
lcall
leave
icebp
popf
ds
out
push
mov
lahf
xor
loop
dec
adc
inc
and
in
fidivrl
dec
and
rcr
mov
push
jge
ss
push
mov
fs
scas
or
pop
test
jge
rcrl
stc
mov
inc
cmpsb
push
mov
adcb
jns
je
test
xchg
adc
or
sub
ret
push
lods
addl
stos
jne
outsl
mov
adc
jb
push
ror
les
addr16
and
imul
repz
lock
int
dec
or
push
mov
mov
fs
xchg
pusha
fs
call
pop
xor
fwait
inc
dec
insb
add
arpl
xchg
cmp
testl
lret
dec
repz
or
icebp
test
mov
jle
jg
daa
in
lods
xor
xchg
push
nop
rcrb
adc
add
jg
aas
xor
das
loopne
and
mov
sub
sbb
jb
fimuls
cmp
cmp
sahf
jp
add
mov
adcl
fldl
in
xor
sub
das
ja
lcall
inc
and
out
mov
xlat
xor
inc
inc
push
test
pop
loope
rcrb
mov
or
mov
jmp
xchg
dec
mov
lcall
push
imul
int3
pusha
incl
test
hlt
cltd
xchg
sbb
xchg
fcmovbe
jnp
or
popa
jae
push
sbb
call
jecxz
push
inc
test
cmp
pop
dec
jp
fildll
pop
ret
imul
xor
inc
cwtl
test
clc
stos
pop
mov
adc
dec
mov
lea
xchg
std
dec
rorb
mov
and
sahf
mov
mov
sub
imul
pop
inc
xor
mov
sarl
mov
or
cmpsl
xchg
push
int3
ret
lods
inc
in
sbb
imul
out
xchg
xchg
rorl
in
movsl
push
mov
cmp
xchg
movsb
dec
popf
mov
jp
push
mov
loop
dec
loop
push
fisubrl
cmp
inc
lret
xchg
je
jle
lcall
or
ss
inc
cmp
or
pop
sbb
hlt
test
lods
push
cmp
fs
dec
xchg
inc
sbb
mov
adc
push
inc
mov
mov
dec
cwtl
push
mov
or
jle
sbb
fistpl
bound
and
and
shll
cmpsl
rol
add
aas
add
mov
xor
push
pop
stos
fwait
test
cmp
cltd
or
jo
sti
jle
adc
add
xor
pop
add
xchg
test
push
jns
inc
dec
cmp
int3
popf
xchg
inc
test
mov
inc
fwait
jne
adc
and
test
inc
fcompl
pop
stos
pusha
mov
add
or
sbb
test
add
incl
cmpl
and
cld
mov
and
push
cltd
sub
call
andl
pop
jl
in
xchg
mov
negl
sarb
fisubrl
jb
les
add
xchg
xchg
insb
mov
stos
sti
aam
lcall
mov
iret
xor
sbb
ljmp
push
push
les
movsb
int
sub
dec
sbb
push
js
gs
add
stos
loop
sub
sbb
mov
push
mov
ja
shlb
push
cmc
and
cmpsb
scas
jnp
push
aad
aaa
inc
jle
cli
dec
jg
jb
mov
jae
mov
call
sbb
push
rclb
int3
xor
xor
jg
fnsave
jnp
lods
cmpsb
mov
mov
cltd
and
mov
cmp
les
pop
hlt
movsb
sti
test
fs
mov
mov
add
push
mov
lret
call
add
pop
fstl
jne
test
xchg
jecxz
loopne
mov
in
mov
aaa
mov
sbb
cmpsl
inc
roll
addb
mov
adc
sti
sbb
sbbb
mov
inc
adc
sub
push
cmp
sub
daa
repnz
sbb
popf
andb
ret
jo
adc
mov
pop
cmp
cmp
data16
imul
mov
cmp
int3
loope
fucom
dec
cmp
pop
rolb
xchg
rorl
iret
hlt
cmp
loopne
add
adc
sar
loop
pop
xchg
jbe
test
mov
pop
mov
iret
and
lods
popf
in
clc
bound
cmp
push
iret
jo
jnp
stos
cld
negl
cmc
jnp
loope
dec
push
roll
shl
xchg
mov
test
fstpl
test
out
sub
dec
add
and
addr16
xor
popa
push
test
lea
call
sbb
out
orb
inc
fcoml
int
test
xchg
sti
push
or
mov
icebp
pop
jno
inc
xchg
cmp
leave
pop
mov
sbb
mov
bound
cmc
imul
imul
int
xchg
and
int
pop
fidivrs
sub
roll
jp
imul
adc
cld
int3
dec
aaa
jmp
adc
enter
js
lds
enter
rep
fidivrl
imul
mov
loopne
sub
lock
cmp
in
xchg
cmp
pop
out
sbb
fidivrl
adc
dec
sbb
shrb
mov
sub
idivb
mov
mov
inc
xor
sbb
add
sub
mov
fs
pop
pop
xor
sahf
or
and
pop
push
ficoml
mov
inc
cmp
and
jg
not
mov
pop
mov
out
lock
mov
xor
mov
cmpsl
pop
ljmp
test
xor
or
addl
ja
push
xchg
adc
js
xlat
dec
xchg
sbb
mov
mov
xchg
mov
push
or
icebp
push
pop
mov
mov
lods
add
int3
insl
jb
push
leave
push
gs
add
or
dec
rol
mov
jnp
mov
xchg
subb
dec
aas
mov
fisttps
mov
cmc
push
cmpsb
out
rcr
lea
in
jb
dec
adc
mov
sub
or
movsb
jecxz
xor
inc
repz
loop
cmp
adc
aam
and
in
and
push
and
cmp
xor
lahf
hlt
loopew
popa
lret
xor
push
mov
mov
dec
jg
sbb
shll
dec
or
adc
cmpb
adc
mov
sarl
add
das
data16
nop
call
xor
divb
inc
mov
pop
out
pop
fucomp
dec
sbb
ljmp
mov
mov
sarl
lea
dec
mov
add
push
push
cli
sub
fsubrs
inc
sub
test
and
inc
dec
add
pop
popf
xor
push
jnp
pushf
or
push
fucomp
cmp
jns
pusha
imul
ljmp
inc
es
mov
or
mov
imul
popa
push
mov
lds
jbe
loopne
in
and
or
addl
mov
aad
stos
js
call
in
js
stc
cwtl
lea
popf
int3
dec
ss
nop
jle
ror
jle
shrd
fisubl
mov
xor
lock
xchg
je
test
popf
sub
ljmp
dec
es
xchg
push
imul
add
cs
out
mov
ja
inc
into
xor
or
daa
rcll
fiaddl
push
jp
jnp
mov
sbb
inc
imul
imul
adc
dec
dec
sub
or
dec
ret
push
mov
and
movsb
leave
test
daa
and
repz
jmp
mov
adc
sub
cmp
and
pop
cmc
mov
xor
mov
das
movsl
call
xchg
inc
or
insb
sub
lahf
lods
insl
sub
xor
repnz
push
je
rcl
xorl
mov
xchg
fimull
loopne
rorl
cmp
fisubs
addr16
out
scas
pushl
mov
xor
sub
leave
rol
inc
adc
fucomp
movb
or
shrb
lahf
fst
xorb
es
add
mov
jnp
aam
daa
or
lock
inc
lret
add
add
flds
push
out
jecxz
aaa
xchg
es
lea
aam
iret
xor
call
out
dec
iret
int3
out
sub
push
sbb
cmp
repz
test
shl
mov
mov
out
popa
outsl
cld
or
sub
xchg
pop
push
push
xchg
iret
dec
inc
xchg
xchg
sub
dec
jno
call
pop
mov
in
cli
jecxz
sub
mov
movsl
mov
and
not
push
in
mov
mov
fcmovu
push
in
std
cmp
insb
inc
std
push
xchg
sahf
xorb
imul
out
xor
xchg
cs
bound
dec
ret
out
stos
and
cmp
xor
lcall
sub
cmp
ret
popf
ret
icebp
xchg
imul
mov
dec
dec
sbb
iret
aad
pushf
add
sub
cmp
adc
jge
or
pop
shl
push
and
movsl
out
clc
ret
push
mov
in
stos
scas
jae
mov
mov
std
rcrb
pop
mov
xor
mov
adcb
aam
cmp
jno,pn
scas
gs
into
push
mov
rcr
les
subl
push
in
or
scas
popf
ljmp
cbtw
loopne
cmc
inc
ret
xor
xor
out
mov
fstpl
pop
jecxz
nop
xlat
js
mov
xor
dec
push
inc
jnp
jg
fsubrs
inc
dec
push
and
push
movsb
or
mulb
addr16
stos
out
dec
rclb
xchg
rcr
popf
pop
lods
lret
push
pop
add
stos
mov
sbb
test
icebp
mov
mov
loopne
pop
lret
jns
fildl
lcall
cmc
fiadds
mov
push
jnp
lahf
cli
subl
sub
sub
in
rol
cltd
es
jno
pusha
mov
cli
xor
arpl
or
test
jb
fisttps
test
and
xchg
mov
in
popf
jecxz
enter
imul
fs
cli
loope
sub
mov
cvtps2pd
add
int3
movl
mov
gs
push
cltd
cld
cmp
cmpsl
dec
adc
lods
sbb
mov
pop
cmpsb
popf
repz
adc
add
cs
sbb
scas
push
jl
aas
lahf
jmp
pushf
repnz
shl
and
fldcw
dec
stc
int3
mov
cs
sbb
jg
xor
add
mov
out
mov
inc
call
push
cltd
cmp
arpl
ret
popa
xchg
lcall
loope
xchg
xchg
push
stc
lds
scas
inc
xchg
test
adc
sub
add
sbb
add
aad
xchg
xor
sbb
push
sub
sbb
sub
push
fildl
rcrl
dec
loop
inc
adc
mov
pop
fistps
or
ret
aam
sub
lods
test
push
out
rol
dec
push
mov
inc
rcr
repnz
pop
scas
pop
es
and
mov
xor
add
out
or
or
out
sbb
dec
mov
mov
ret
mov
jle
ja
ror
mov
mov
xor
loopne
dec
jbe
cwtl
mov
mov
pushf
sbb
mov
aaa
cmc
call
push
bound
adc
adc
mov
xor
clc
push
aaa
repnz
sub
imul
outsl
dec
andb
and
int3
xor
dec
push
mov
xchg
inc
mov
and
leave
nop
in
dec
cmp
pop
dec
mov
or
scas
mov
lahf
jns
pusha
mov
imul
xchg
ficompl
jb
rorl
xlat
sbb
push
mov
push
adc
inc
imul
cltd
cwtl
lods
stos
out
sbb
push
pop
je
int
push
test
out
mov
jns
fs
rol
ljmp
mov
jecxz
sub
into
push
push
std
and
mov
xor
or
cmp
fs
xor
fldt
jnp
test
lahf
xlat
push
flds
imul
mov
or
inc
mov
mov
fstps
ret
xchg
ljmp
out
pop
loope
pop
mov
adc
or
cwtl
in
xchg
cmp
mov
jb
and
sti
pop
inc
insb
ficompl
mov
add
cmp
pusha
ret
call
jg
dec
sub
jl
mov
mov
imul
xor
ja
aas
adc
xor
lds
sbb
push
mov
outsl
insb
pop
js
or
stos
test
jnp
lcall
cmp
sub
add
sbb
cmp
clc
add
adc
adc
lcall
xchg
adc
push
sbb
sbb
push
lods
cmp
xchg
in
rorl
push
jmp
mul
sarl
cmp
mov
adc
fs
jne
pop
mov
fwait
mov
fwait
imul
sub
jg
sbb
subl
test
lcall
cmp
xor
mov
stos
sub
push
js
cmp
imul
out
cld
shlb
xchg
mov
stos
xor
stos
sub
imul
push
cmp
mov
dec
arpl
mov
mov
xor
pop
sti
adcb
mov
addb
out
cmc
dec
arpl
loop
mov
ret
push
push
lock
aad
or
stc
loopne
xchg
frstor
test
outsl
xor
movsb
cmpsb
dec
in
test
nop
sbb
nop
cmp
xchg
mov
mov
vdivss
andl
js
ds
jb
pop
sub
mov
jae
or
fcomps
or
cmp
xchg
sub
jno
or
push
xchg
push
jl
cmp
inc
mov
ljmp
push
or
mov
mov
jbe
imul
out
add
lds
sbb
cmp
das
or
imul
pop
dec
dec
sbb
jp
sub
pop
out
inc
mov
xor
inc
hlt
insb
insb
add
loopne
aam
mov
or
loopne
orl
dec
pop
test
mov
or
lods
gs
cmp
pop
xor
mov
int3
insl
test
out
fcoml
jb
stos
addl
xor
fs
ret
or
sub
icebp
or
das
push
pop
push
xchg
icebp
pop
xlat
fs
cmp
xlat
addr16
aam
jmp
mov
mov
push
sub
add
mov
imul
cmp
push
jl
add
xchg
aam
sbb
testl
and
loop
lahf
lret
jp
icebp
sbb
xchg
xlat
out
mov
inc
inc
sbb
ret
or
out
push
faddl
mov
fisubrl
test
jnp
mov
dec
sbb
or
sbb
and
repz
es
add
dec
mov
orb
notl
cmpsl
and
dec
rorl
pushf
cli
mov
lods
pop
divb
out
loop
adc
pop
mov
sub
shll
in
adc
adc
mov
pushf
push
mov
fmull
dec
leave
pop
push
jb
jmp
lahf
mov
inc
jmp
gs
sbb
inc
mov
adcl
or
imull
push
daa
mov
push
or
pusha
nop
push
dec
ror
lods
mov
cs
sbb
das
xor
out
push
ret
mov
popf
pop
outsl
mov
add
sub
sub
out
pop
movsw
jp
je
mov
insl
mov
xchg
mulb
xor
sbb
pusha
call
mulb
repnz
sbb
sub
xlat
pop
stc
dec
mov
cmc
fldcw
out
bound
aad
cmp
scas
clc
cwtl
cmpsl
mov
sub
jns
fdivp
out
push
xor
loope
movsl
push
and
sub
push
push
ss
xor
mov
fistps
jmp
xor
fxch
pusha
int
mov
dec
das
or
xchg
mov
sub
cld
imul
ficoms
jo
jmp
push
adc
insl
xchg
and
adc
lcall
mov
add
dec
les
fistl
repnz
pop
sub
cltd
loope
shrl
int3
mov
sahf
scas
insl
leave
and
mov
mov
arpl
cmc
or
xor
or
sbb
insl
outsb
loope
jns
into
or
mov
and
mov
mov
sbb
jg
xorl
fiaddl
or
dec
xchg
cs
cmpsb
sbb
sbb
in
xor
cmp
repz
shl
and
mov
inc
ljmp
mov
fwait
xchg
cmpsb
daa
adc
lcall
ja
data16
icebp
outsl
addr16
sahf
pop
dec
fsubr
ret
adc
sbb
leave
inc
cld
push
arpl
mov
push
cmp
lret
icebp
stos
lcall
popf
push
adc
push
into
sub
push
mov
jbe
adc
adc
stos
xchg
xchg
ljmp
dec
cs
and
out
jp
cmpxchg
adc
jne
ror
xor
sarl
mov
jo
in
mov
cs
lcall
mov
ficoms
push
mov
xor
adc
rorl
call
cs
out
out
xchg
sti
mov
xor
add
stc
pop
fdivr
mov
xor
mov
jo,pn
outsb
fwait
cmp
ds
push
mov
imul
outsb
sbb
adc
shl
loope
mov
fldt
ljmp
fisubrs
incl
sub
or
addr16
rorl
lea
and
divl
dec
adc
ret
push
sub
jne
fstps
cvtps2pd
or
loopne
pop
jno
in
sub
ds
mull
divb
sbb
jge
rcrb
mov
sahf
jle
and
outsb
pop
scas
add
xor
adc
int
push
pop
push
adc
or
xor
gs
and
pop
mov
inc
bnd
stos
sub
icebp
pop
mov
mov
xor
test
mov
stos
xchg
and
test
std
xor
sbb
call
push
adc
lods
jge
or
incb
decb
xchg
jne
mov
sbb
mov
mov
push
outsl
arpl
std
cmp
divb
push
pop
mov
push
cmp
inc
adc
andl
jae
lcall
mov
call
xchg
leave
out
cmp
jmp
pop
fnstenv
nop
xchg
rcll
push
lahf
mov
dec
lock
or
add
push
mov
call
pop
shl
fwait
in
outsl
lock
pushf
or
push
xchg
inc
lock
and
dec
or
or
xlat
test
lds
jne
dec
fstl
nop
loop
xchg
add
stos
jno
pop
mulb
js
or
std
sub
mov
jl
lahf
loop
cmp
xlat
cmpsl
push
add
aad
icebp
xchg
pop
mov
ds
lcall
leave
jl
stos
iret
les
int3
rolb
mov
pop
nop
inc
lcall
or
aad
sub
jmp
es
pop
cmp
xor
sbb
and
xor
imul
imul
sub
jo
imul
and
adc
xor
inc
stos
push
outsb
psubusb
push
das
jae
notl
loope
pop
sub
xor
cs
mov
and
push
das
add
and
loope
out
int
xchg
dec
fnsave
sub
aaa
pop
scas
sbb
jp
jnp
mov
jb
mov
xor
inc
push
or
ds
cld
mov
dec
shll
push
or
or
int3
mov
outsb
jmp
jg
in
mov
lcall
adc
daa
pushf
push
lock
sub
mov
inc
and
bnd
cs
outsb
mov
mov
and
and
lret
jo
loop
shl
loope
ss
loop
gs
jp
notl
jg
xchg
pusha
jnp
lahf
je
movsb
test
dec
shll
cwtl
xor
loopne
lahf
jp
ss
xor
out
leave
jnp
cmp
cmp
pusha
cwtl
xchg
xor
bound
sbb
jno
xor
jae
pop
int
dec
push
ret
add
jb
in
aaa
adc
lods
jecxz
addb
testl
inc
add
ror
dec
sbb
test
lods
adc
aad
mov
adc
in
iret
in
fildll
or
mov
imull
cs
leave
push
mov
lret
pop
xor
lret
int3
jo
inc
outsb
dec
or
sbb
data16
cmp
jmp
ficompl
dec
sti
mov
pop
shlb
push
movsb
iret
cmp
bnd
or
sbb
repnz
repz
mov
or
jle
rolb
int
leave
das
pop
xlat
int3
aaa
sub
fs
dec
and
pop
jo
push
dec
cld
cmp
jnp
inc
mov
mov
xchg
push
dec
out
mov
adc
sahf
lds
mov
arpl
push
inc
dec
scas
mov
mov
fwait
mov
rolb
xor
add
sbb
out
pop
es
cmp
in
or
mov
inc
or
test
movsl
popf
mov
rolb
xchg
lahf
popf
adc
int
loopne
mov
jmp
sub
lods
xchg
mov
ljmp
mov
jmp
or
fwait
mulb
mov
cmp
repnz
sahf
pop
loop
cmp
add
dec
in
xchg
repz
jae
lds
inc
ja
or
hlt
pop
or
xor
dec
mov
pop
dec
or
stos
mov
lods
ret
inc
cmp
cmc
sbb
dec
out
xor
pop
adc
clc
es
fs
sbb
lcall
ljmp
adc
insl
mov
repz
cmp
sub
mov
xchg
negl
adc
cmc
sub
mov
aaa
mov
mov
pop
clc
xchg
inc
stos
inc
mov
pusha
iret
aaa
shl
xchg
cmp
and
aam
xchg
imul
adc
push
popa
scas
mov
filds
pusha
lahf
dec
add
adc
cli
or
mov
xor
mov
fs
or
popa
ret
sahf
pop
lods
adc
in
std
mov
inc
pop
xchg
lock
pop
mov
sub
mov
xor
fstpl
mov
in
hlt
mov
mov
jg
pop
mov
add
sub
or
mov
pop
mov
jecxz
lea
ja
dec
repnz
fiadds
jge
cmp
and
push
sarl
lret
sub
jb
mov
jg
lahf
movsl
lahf
pop
push
jne
dec
mov
xlat
jl
and
or
aam
lcall
cwtl
out
loop
nop
dec
roll
aam
pushf
in
fstp
sub
imul
bound
lds
leave
jmp
pop
repz
mov
add
mov
pop
or
mov
bound
mov
scas
in
xchg
in
test
lret
and
xor
sarl
in
sub
and
xchg
iret
repnz
imul
sub
push
xchg
mov
sub
cmpsl
mov
mov
adc
and
xchg
test
jg
icebp
es
outsb
imul
popf
adc
int
into
sub
aas
enter
jg
xor
pop
xchg
cmp
cltd
outsw
rorl
dec
lret
popf
lods
stos
sbb
insl
push
or
cmp
leave
out
lahf
cli
fidivs
and
sti
lret
and
ss
fdivs
ja
jno
mov
push
push
and
xor
rorl
cmp
lds
add
scas
mov
popa
adc
and
divb
mov
cmc
leave
push
sbb
ss
xorl
mov
mov
popf
cltd
xchg
add
jmp
arpl
cmpsl
and
mov
push
lea
add
inc
mov
jne
xor
into
outsb
or
ljmp
test
push
and
push
adc
dec
je
movsb
mov
and
icebp
fimull
jge
mov
ljmp
jb
mov
or
jle
push
gs
test
inc
dec
xor
dec
inc
dec
xchg
divl
push
cmp
xchg
rolb
push
jbe
mov
inc
cmp
rol
pop
subb
out
cmpl
decl
cld
sarl
adc
stc
cmp
lods
xchg
arpl
xchg
lcall
sbb
cmp
gs
addr16
ja
cmpsb
jne
xorl
jge
jne
inc
mov
aad
movsb
out
sub
jg
sub
insb
xchg
push
arpl
das
in
and
pop
out
adc
or
inc
push
add
pop
in
sarl
jb
pop
test
lcall
adc
lcall
cltd
push
add
inc
xor
fidivl
nop
xchg
leave
js
mov
xor
mov
ss
test
and
rorb
sahf
jl
mov
fmuls
movsb
popf
cmp
in
mov
int3
lods
cli
mov
inc
add
sti
mov
scas
arpl
pop
or
mov
loope
ljmp
mov
cmc
and
mov
int3
test
mov
pop
xor
popf
dec
rsm
cmp
cmp
dec
jmp
add
push
pop
stos
mov
mov
and
add
xor
xor
ret
mov
loopne
hlt
fisubl
ret
cmc
push
cltd
imul
lds
push
lcall
push
test
cmp
jae
mov
sbb
adc
es
and
pop
loope
fnsave
lret
jle
jmp
mov
mov
push
jno
scas
adc
mov
test
test
push
dec
xor
xchg
mov
mov
adc
or
stc
push
or
scas
hlt
testb
stos
sub
cmpsb
xor
mov
cmp
add
fiadds
outsb
call
push
jae
sbb
sbb
inc
add
jb
jae
bound
pop
push
or
mov
adc
aad
jae
out
jecxz
inc
addb
adc
xor
xchg
loopne
jecxz
push
lock
aaa
and
mov
sub
push
adc
movsl
pop
enter
ret
cmp
mov
lcall
inc
cmp
sub
xor
jns
or
cs
mov
sub
sti
int3
or
pop
jmp
sub
and
pop
jg
ds
fisttps
in
jl
movsb
sub
or
cmp
mov
dec
xor
flds
mov
sbb
movsb
mov
mov
push
inc
dec
insl
push
xchg
mov
loope
fwait
push
fwait
mov
xor
outsl
and
das
adc
jnp
iret
or
push
stos
sbb
and
mov
imul
cs
push
xchg
sbb
pop
test
sti
push
sub
mov
sbb
pop
in
cmp
insl
xlat
push
and
push
mov
inc
mov
push
jecxz
pop
xor
ja
outsl
adc
enter
lods
sti
dec
sub
mov
adc
out
mov
mov
je
aam
sub
lds
aaa
nop
popa
js
xor
sub
xchg
cwtl
cmpsb
lds
rcrl
je
sbb
test
cmpsb
mov
out
mov
hlt
ret
outsl
dec
pop
mov
sub
xor
ljmp
or
fwait
dec
pop
call
fwait
jle
fwait
push
lods
std
sbb
call
in
out
loopne
nop
xor
sbb
outsb
mov
pop
mov
cmpsl
lcall
test
loopne
mov
sub
dec
mov
fdivrl
inc
xchg
xchg
mov
cwtl
leave
test
xor
pop
sbb
rcll
dec
cwtl
sbbb
adc
mov
nop
loope
and
jae
push
mov
pushf
cli
je
inc
adc
mov
out
sbb
xor
xlat
jns
fisubrs
leave
sarb
imul
inc
in
sub
adc
movsb
jb
mov
addr16
jne
arpl
xor
add
gs
lret
lds
mov
or
xor
sar
fstp
or
pusha
jbe
xor
enter
jmp
dec
mov
pop
mov
sbb
dec
lahf
sbb
in
nop
stos
cwtl
sbb
stc
push
test
mov
or
pusha
loope
sub
test
aad
xchg
mulb
dec
sbb
add
loope
in
mov
cltd
or
mov
cmp
mov
lcall
std
push
jl
sub
loop
mov
in
lret
data16
jl
xchg
adc
push
rcr
mov
ret
loopne
out
out
negb
cwtl
xchg
popa
fsubs
stos
inc
inc
and
add
sbb
bnd
mov
outsb
popf
cmp
xor
movsb
xchg
scas
xchg
stc
lret
push
int
call
stc
cmp
xor
stos
rorb
adc
int3
and
sub
pushf
sarl
andb
mov
stos
daa
out
iret
or
loop
push
cmp
xchg
outsb
jb
bsf
rcrb
add
pop
push
jecxz
adc
ret
sahf
rcrb
push
mov
mov
stc
and
mov
xchg
add
mov
mov
ds
sbb
pusha
movsl
mov
popa
inc
shrb
shrl
cltd
push
pushf
push
adc
je
cmp
ucomiss
adcl
mov
xor
outsl
hlt
mov
fdivrp
xor
xor
jnp
movsb
addl
sbbb
mov
sub
nop
mov
pusha
and
push
push
jno
xor
fsubs
xor
jb
mov
cmp
fnstenv
add
stos
in
mov
fs
push
or
inc
and
and
mov
jmp
xlat
test
mov
shr
sahf
ja
test
int3
es
aam
xor
pop
inc
out
repnz
roll
jnp
inc
mov
or
icebp
xchg
pusha
arpl
mov
fsincos
add
inc
xlat
shll
push
movsl
mov
or
push
roll
mov
or
mov
mov
mov
dec
jbe
pop
cld
jmp
inc
movsl
xchg
jns
popa
sbb
push
cmp
adc
cs
clc
adcl
ds
fimull
shlb
and
pop
out
clc
lret
push
push
xor
jle
pusha
push
or
pop
das
xchg
shll
or
call
nop
inc
cltd
xor
ror
nop
mov
call
outsl
scas
dec
cmp
cltd
or
adc
mov
lods
aas
sub
sahf
inc
jne
mov
aas
fwait
ljmp
sbb
bound
stos
aad
add
aaa
push
pop
outsb
dec
int3
cs
push
mov
mov
push
mov
push
and
inc
lods
imul
mov
out
cmc
ja
and
aad
dec
testl
mov
cmpsl
jae
das
outsb
pushf
out
repnz
dec
movsb
les
sub
inc
ficoml
and
mov
or
fildll
rclb
outsb
adc
enter
xor
enter
mov
cltd
xchg
cmc
sti
ret
dec
add
sti
jne
cmp
roll
add
out
shll
pop
push
add
jbe
mov
lea
stc
jmp
mov
xor
lret
push
call
scas
ljmp
fnsave
mov
inc
push
aad
lock
xor
lahf
and
fwait
pop
lahf
dec
in
sub
js
jmp
sbb
jae
mov
cli
repz
and
das
xchg
jo
daa
mov
fiadds
mov
or
out
ficoms
lret
and
jge
or
lea
push
jle
je
xchg
sti
stc
sbb
inc
cmp
je
mov
iret
pop
sti
push
movsb
mov
jnp
ljmp
mov
push
xchg
jmp
ljmp
ror
fiadds
jae
lea
push
mov
testl
xchg
and
ja
dec
sbb
push
push
aas
ficoml
or
imul
ds
dec
les
push
daa
jp
pop
cmpsb
inc
mov
lret
scas
imul
mov
addr16
and
jns
mov
scas
repnz
mov
negb
int
loopne
mov
das
push
or
xchg
dec
jl
call
sbb
mov
fcomps
lret
fbld
jne
mov
cmp
lcall
push
add
xchg
or
cmp
call
add
jmp
aam
enter
std
pop
xor
in
aam
jg
cld
sahf
jmp
mov
mov
cs
push
test
jae
inc
adc
lret
enter
inc
inc
pop
call
xchg
mov
push
sti
lds
jb
jmp
mov
stos
cmpsl
dec
cmp
mov
jmp
cmpsl
mov
mov
xor
sbb
ja
cltd
jae
xchg
push
adc
cmp
mov
mull
push
imul
je
call
lods
inc
cmc
neg
shlb
inc
dec
cmp
daa
adc
stos
in
popf
mov
shlb
in
inc
mov
call
pop
jns
mov
mov
jle
xchg
packssdw
lahf
dec
pop
fidivrl
mov
xchg
pop
xchg
cmpsl
adc
stos
mov
and
es
push
lods
dec
stc
mov
add
pop
lds
jmp
add
aaa
lret
sbb
subl
jno
jno
xchg
stos
jge
mov
dec
cltd
fwait
cmp
jbe
inc
push
aad
iret
call
adc
das
addr16
xor
cld
xor
add
mov
or
add
or
retw
lcall
sbb
mov
int3
or
out
daa
push
cltd
scas
adc
cmpsb
ret
jb
sub
inc
mov
mull
lods
add
std
cli
inc
xchg
test
and
dec
pushf
cmp
or
xchg
mov
movsl
pop
icebp
lahf
jmp
frstor
dec
outsl
cli
sbb
mov
mov
sbb
mov
cmp
imul
and
test
cli
push
lret
fisubs
jbe
inc
jge
dec
sbb
sbb
sti
fisubrl
in
idiv
adc
xlat
cli
rcll
inc
outsl
sar
out
push
mov
pop
jecxz
adc
lock
outsl
ret
pop
lahf
mov
push
jg
inc
push
mov
or
sahf
adc
jl
push
daa
mov
dec
ljmp
jmp
popf
pusha
rclb
jne
mov
test
push
addr16
dec
mov
mov
sub
xchg
test
imul
adc
es
int3
outsb
xor
cmp
push
and
das
dec
popf
cli
data16
xor
add
add
xor
out
xchg
dec
jg
and
jnp
xor
inc
xor
jns
pop
or
push
dec
mov
andl
icebp
add
fwait
cld
xchg
out
pop
jmp
mul
sbb
mov
adc
and
dec
pop
cmp
cmp
sarb
jge
pop
das
jp
int
icebp
daa
fistpl
cmp
out
xchg
es
and
xchg
jnp
mov
pop
repz
sbb
xchg
js
in
rcll
fisubs
jge
dec
cmp
dec
inc
aad
dec
mov
dec
loope
dec
xor
or
push
fistpl
or
pop
sbb
push
pop
sbb
hlt
stc
xor
mov
add
jnp
ficomps
mov
sbb
mov
insl
dec
out
jecxz
xchg
or
nop
jae
dec
aad
pop
mov
pop
scas
pop
lret
fs
dec
rorb
lock
frstor
cmp
jmp
sub
xor
dec
push
movsb
cmp
xor
mov
adc
or
in
imul
mov
imulb
and
ret
dec
into
and
sahf
icebp
pop
or
lret
out
ja
test
xchg
scas
add
ret
in
mov
mov
filds
pop
enter
mov
inc
xchg
aas
xchg
and
jne
inc
stos
dec
out
jp
pop
dec
add
dec
push
jg
dec
push
sbb
in
push
pushf
shlb
fidivs
push
dec
and
lds
sbb
decl
xchg
mov
mov
mov
adc
cmp
call
or
sti
fcoms
adc
dec
push
cmpl
mov
ret
pop
dec
xor
inc
mov
mov
adc
ficompl
pop
pop
rorb
dec
mov
mov
jno
aad
mov
orl
xor
mov
in
mov
xchg
out
and
mov
xor
add
and
movsl
adc
pop
and
jl
dec
mov
add
cmp
xchg
rcl
ffree
imul
fwait
notl
hlt
cwtl
out
nop
inc
les
loopne
in
mov
pop
fucom
adc
inc
jb
mov
shlb
pop
xchg
jg
mov
xor
xchg
ds
pop
cmp
dec
mov
shll
push
sbb
aas
or
dec
adc
mov
loope
lea
jg
pop
les
pop
xlat
testb
shlb
xor
xor
insb
sbbb
test
adc
xorl
sahf
xor
dec
xchg
inc
and
in
stos
mov
test
rcll
fucomip
cltd
cmc
aas
add
int
push
or
add
inc
ds
and
repnz
arpl
mov
cmp
cmpl
and
push
adc
sub
popa
mov
xchg
xchg
fdivrl
adc
adc
mov
test
pop
xchg
mov
push
mov
andl
adc
sahf
cmp
and
adcb
lea
cmp
lock
std
xchg
jae
cvtps2pd
lahf
add
out
jmp
gs
out
push
ret
lahf
mov
xor
fimull
fstps
cmpsb
jb
out
cmp
ret
mov
data16
cld
mov
cltd
jge
xchg
in
in
cmp
and
xchg
inc
lds
cmpsb
cmpsl
pop
sub
fsubrl
ret
fwait
inc
daa
mov
cmpsb
jg
lds
xor
push
sarb
ljmp
jo
xchg
mov
adc
imul
lcall
push
dec
lea
pcmpgtb
shlb
int
pop
inc
jne
sbb
or
mov
mov
jo
cmpsb
push
xlat
popf
pop
daa
pop
push
enter
add
sti
xchg
ss
and
pop
movsl
out
cs
dec
dec
and
in
fcoml
pop
adc
sbb
xor
lcall
fistpll
push
mov
test
scas
sar
jnp
pop
xorb
addr16
cmc
ficoml
ljmp
test
adc
or
fidivrl
mov
sahf
jbe
movsb
ret
movsl
pop
mov
adc
div
pop
adc
mov
mov
pop
xchg
int
or
addr16
jecxz
xchg
and
lods
orb
pop
insb
nop
gs
fnsave
xor
imul
sub
add
mov
cmpsl
pop
fcmovne
inc
mov
cmp
shrb
cltd
ret
aaa
stos
or
and
loope
loope
scas
ss
jns
sarb
fmulp
sub
push
pop
pop
sbb
jge
add
mov
inc
mov
movsl
rcr
packsswb
fs
adc
xor
push
out
adc
mov
xor
js
das
adc
daa
mov
cwtl
pusha
or
outsl
sbb
sub
and
lahf
scas
aaa
and
aad
out
pop
je
push
or
jl
jbe
out
jg
xor
nop
shr
not
hlt
les
adc
mov
js
jno
adc
inc
icebp
movsl
test
ja
inc
push
dec
imul
mov
adc
xor
mov
je
push
inc
push
cmpb
dec
jmp
xchg
push
mov
notb
out
push
adc
and
or
cmpsb
sbb
cmp
fbstp
mov
pop
xchg
lret
or
mov
shll
ja
mov
pushf
mov
popa
int3
lods
js
lock
dec
cwtl
loopne
insl
out
or
les
jmp
mov
shr
xlat
cmp
adc
rcrl
hlt
mov
jne
test
movsl
adc
call
stos
shr
xchg
ror
lds
addr16
and
ret
filds
movsl
in
jo
cmpsl
pop
inc
or
iret
cltd
sbbb
mov
push
dec
das
xor
or
mov
dec
sub
aad
add
daa
shr
adc
xchg
aad
lret
shr
jns
stc
out
loopne
mov
xchg
cltd
hlt
xlat
jns
fsubp
es
iret
mov
add
mov
ljmp
xchg
pop
ds
les
popa
insl
sarl
push
xchg
pusha
add
movsl
jo
cmp
call
lahf
jmp
out
dec
popf
fidivs
sub
or
push
adc
or
out
lret
jmp
mov
jge
sub
jle
adcb
or
aas
mov
ja
aam
adc
and
or
in
shll
in
dec
cs
lret
xchg
mov
clc
mov
sbb
inc
shrl
loop
fisttpll
inc
out
cmpsl
test
xchg
je
cmp
cmp
lcall
jno
imul
sbb
popa
sub
lret
dec
mov
lds
inc
sar
pop
rol
xchg
mov
xor
cmp
jnp
inc
inc
xor
mov
data16
and
sbb
popa
dec
xchg
int
in
jne
inc
push
mov
or
daa
sahf
js
shrl
mov
xor
jns
pop
mov
cbtw
es
imul
outsl
mov
je
jp
imul
push
enter
mov
mul
repnz
jecxz
sbb
scas
pop
xchg
sarb
addb
scas
mov
lock
test
sub
in
scas
cmp
outsl
mov
jo
rcll
push
inc
in
cmp
clc
lds
outsl
xchg
or
lcall
mov
iret
sarb
outsl
xchg
popa
sbb
sbb
movb
sbb
sbb
ffreep
jp
testl
adc
in
dec
inc
jg
outsb
dec
testl
stos
add
daa
push
mov
mov
popa
jb
test
les
mov
push
dec
cmp
out
pushf
stc
rolb
lret
outsb
xchg
pop
fprem
subl
xor
stos
inc
sti
inc
gs
sbb
dec
js
ljmp
cmp
fldcw
jge
insb
inc
aad
mov
sub
mov
gs
pop
mov
shlb
test
sahf
mov
adc
scas
push
cwtl
xchg
dec
cmp
xor
xor
xchg
inc
pop
test
xchg
inc
jmp
add
leave
cli
pop
xchg
adc
popf
mov
fidivl
in
add
mov
bound
sar
mov
push
xor
xor
leave
fildll
jge
sub
add
ret
out
xor
push
push
fyl2xp1
loope
and
ret
call
push
xchg
int3
shll
call
shlb
loope
dec
rolb
xor
jae
adc
lcall
or
in
xor
arpl
fisubrl
xchg
lret
mov
outsb
push
aaa
lea
cmpsl
push
jge
pop
cmpsl
dec
lret
jge
pop
mov
or
mov
icebp
icebp
and
inc
je
inc
jo
outsl
mov
je
inc
dec
jns
ljmp
orw
out
ss
popa
inc
add
out
ja
jp
dec
xlat
lret
and
jo
int
aas
push
mov
xchg
lea
in
and
pop
jmp
js
and
icebp
adc
or
stos
sub
rcrb
js
or
xchg
and
outsl
push
push
subl
inc
negb
subl
mov
frstor
inc
fidivrs
sub
xchg
das
mov
fstpt
and
sub
and
mov
mov
pop
jns
mov
sub
loope
and
cmp
imul
mov
ja
push
mov
or
or
addb
decb
lcall
or
xchg
outsb
mov
es
and
ja
push
fs
lret
rclb
mov
adc
outsl
xor
insl
test
movsl
mulb
dec
aam
xor
popa
adc
push
shlb
icebp
dec
cmc
shlb
clc
or
loopne
mov
out
lock
xor
sub
scas
mov
imul
cmp
popa
es
jnp
mov
xchg
jl
adc
xchg
sbb
mov
std
lcall
pop
adc
clc
cld
xor
dec
ror
int
out
dec
cmp
inc
scas
int3
icebp
xor
imul
push
mov
inc
mov
jp
adc
sbb
xchg
xlat
xchg
add
jl
inc
ret
leave
shrl
pop
or
dec
jo
or
cmpsl
dec
xor
xchg
flds
adcb
mov
shl
cli
mov
inc
or
add
dec
lret
sti
out
fcomps
pop
arpl
mov
in
jbe
inc
stc
sub
adc
sbb
push
cmp
sti
add
cmp
out
loop
sub
sahf
fisttpll
call
cs
loop
imul
rcl
sti
imul
sbb
dec
aam
xchg
out
mov
pop
or
popa
mov
pop
sub
gs
push
inc
pop
fnstenv
push
fsubl
fisttpll
test
mov
pop
adc
into
mov
repnz
adc
dec
inc
cmp
mov
mov
dec
adcl
add
and
push
xor
js
outsl
clc
push
xchg
mov
mov
push
cltd
or
mov
mov
cld
jecxz
loop
pop
sbb
int3
xor
lret
lahf
out
std
mov
pop
jge
gs
stc
pop
inc
test
jnp
push
lret
nop
mov
push
je
lret
jl
pop
in
push
adc
cmp
sub
mov
cltd
ret
mov
pop
popf
mov
adc
adc
lds
inc
xor
adc
ret
xor
cmp
inc
movsb
rol
and
pop
cmp
mov
mov
pop
push
jo
lret
jmp
add
adc
fiaddl
sub
and
nop
lea
and
pop
cltd
cmp
jl
leave
push
jbe
ds
cwtl
xchg
insl
push
lcall
jmp
sbb
es
aad
mov
sub
jecxz
psrld
sbb
je
daa
mull
fmul
in
add
or
mov
mov
mov
inc
pop
jmp
mov
popf
outsl
xchg
inc
popa
out
bound
pushf
mov
push
cmp
cmpsl
psubsb
add
cmp
mov
and
xchg
or
stos
xchg
xor
outsl
sbb
jl
loop
test
mov
jg
and
add
fldenv
cmpsb
mov
and
jno,pn
ja
pop
sbb
push
or
xchg
icebp
lea
jb
xor
pushf
cli
add
sbb
into
out
sar
cmpsl
push
fldl
imul
jo
fyl2xp1
in
lds
shlb
std
sbb
test
in
shl
and
enter
mov
cmc
pop
stos
mov
push
dec
rcr
je
cmpsb
ficomps
adc
cmpsl
clc
scas
and
stc
pushf
push
mov
test
imul
icebp
jg
xchg
jle
sbb
lret
imul
add
mov
mov
sbb
loopne
insw
mov
shr
loope
jecxz
cmp
dec
rcll
ss
mov
jne
adc
fdivrs
pop
jp
xor
pushf
xor
fbld
addr16
mov
in
pusha
xorl
lret
xchg
loop
pop
mov
mov
cli
add
call
pop
test
sbb
and
xchg
mov
inc
adcl
add
std
dec
and
mov
cmp
mov
decb
mov
mov
add
push
mov
mov
mov
and
mov
aas
add
mov
xor
sub
and
mov
mov
enter
ret
mov
pop
or
sub
dec
enter
outsb
movsl
je
push
int
push
js
cmpsb
in
enter
mov
stos
inc
addr16
stos
insb
test
pop
fdivs
or
cwtl
loopne
lods
mov
std
into
stc
cmc
mov
and
jns
xchg
pop
aad
inc
cwtl
sub
dec
sub
adc
andl
lcall
hlt
xlat
insb
stos
aas
mov
divl
cmpsb
inc
lods
push
push
push
pop
mov
jecxz
aad
mov
jge,pt
xchg
fsubrs
or
out
std
and
or
pop
popa
pop
test
bound
or
xor
js
mov
dec
fcmovu
mov
jp
das
popa
fs
jns
or
cmpsl
pop
mov
xchg
jae
add
in
push
push
inc
into
sub
mov
leave
subb
add
jecxz
test
and
xchg
lock
bound
jge
shr
jmp
jne
andl
adc
xchg
cmp
sbb
int
cld
and
xchg
xchg
iret
xchg
push
xlat
and
hlt
jmp
add
inc
addr16
mov
lock
pop
stc
outsl
adc
cmp
xor
push
in
pop
lods
pushf
mov
pop
add
movl
imul
adc
mov
test
sbb
leave
pushf
jg
ss
inc
fsubl
stos
add
insb
push
sub
sahf
test
sar
aas
add
iret
enter
cmc
push
mov
out
std
ret
pop
aas
adc
in
in
sbb
push
add
pop
int
lret
jns
and
push
cltd
sbb
mov
jp
ficomps
pop
cmp
lods
in
shlb
pop
into
jbe
cltd
insb
jp
stc
adc
icebp
inc
dec
adc
stc
pop
pop
clc
clc
inc
roll
pop
jns
pop
outsl
fisubl
loopne
add
and
pop
cmp
icebp
cmp
cmpsb
cltd
lea
jne
in
testl
inc
jge
jmp
cmp
add
fisubs
xchg
and
scas
and
ja
xor
stos
pop
les
aad
jnp
push
or
mov
xor
addl
fmuls
lods
push
sbb
inc
cmp
jle
nop
ljmp
dec
clc
data16
lahf
pop
or
ret
adc
lea
push
mov
bound
ja
sarb
adc
sbb
and
adc
inc
outsb
loopne
inc
and
jecxz
std
push
test
int3
jae
adcb
out
or
mov
cmc
stc
or
push
shll
mov
lods
dec
fadd
mov
xor
and
sahf
push
jno
dec
sbb
fsubr
dec
out
pushf
andl
ret
movsb
add
xchg
and
cmp
repnz
xchg
pop
cltd
imul
jbe
or
inc
push
fwait
sub
xor
mov
adc
adc
mov
ret
loopne
jecxz
xchg
stos
or
cmpsb
and
jl
cmp
and
fstpt
pop
cmpsb
pushf
mov
mov
mov
sbbl
out
test
dec
cmp
mov
pushf
lret
mov
movsl
xor
jg
loopne,pt
in
out
fistpl
cltd
aad
leave
incl
xor
jb
sbb
repz
xchg
adc
in
ja
fdivs
out
sbb
xchg
loop
sbb
inc
ja
cli
out
mov
push
push
jb
mov
test
mov
or
dec
cmp
movsl
and
js
cmp
cld
ror
xorb
mov
sbbb
pushf
fisttpl
adcl
subb
clc
mov
jp
pop
mov
add
mov
jnp
stc
ret
scas
test
dec
push
cmpsb
fwait
pop
outsb
aas
in
mov
jns,pn
or
sbb
mov
and
adc
stc
out
push
enter
and
push
xchg
in
dec
lea
adc
lods
xor
pop
fdivrs
aam
test
test
sbb
das
nop
shl
rorb
cmp
rcrl
sub
cmp
xor
sub
push
jo
or
mov
in
add
lods
rclb
pop
cwtl
sub
inc
adc
or
xchg
xchg
or
or
xor
and
pop
pop
notb
push
fsubrl
popf
lods
sbb
add
je
test
sbb
sti
xchg
imul
xor
push
negl
out
xor
cmp
fimull
mov
rcr
ss
push
popa
dec
push
pushf
repz
hlt
xor
icebp
push
aaa
dec
stos
xlat
inc
pop
loope
in
mov
pop
xlat
rcrl
pop
xchg
adc
mov
inc
insb
roll
mov
dec
mov
mov
loopne
iret
cmp
outsb
xchg
stos
push
fstp
or
fcoml
dec
mov
test
test
inc
in
inc
ret
push
insb
inc
cmpsl
lds
adc
clc
ds
jge
mov
push
divl
push
jl
aad
lahf
dec
insl
fcom
in
mov
loop
popa
dec
sbb
mov
xor
popaw
push
and
xchg
adc
or
mov
les
ss
jp
ret
fs
xchg
jge
inc
mov
adc
pop
setl
shl
fsubrl
dec
sub
cmp
cld
ljmp
mov
or
adc
add
jnp
pop
and
mov
or
call
cltd
sub
and
call
hlt
mov
hlt
inc
cmpsl
push
mov
mov
push
inc
jo
push
jnp
mov
adc
sahf
int
cltd
xor
and
aaa
shll
adc
adc
push
jecxz
adc
int
dec
sub
js
sub
xchg
adc
incl
sub
cmp
or
pushf
fcmovbe
and
jae
xchg
arpl
insb
data16
or
cmp
insb
scas
mov
cmp
jns
jg
es
aaa
out
rcrb
inc
movb
jge
test
pop
jo
ja
shlb
fnstsw
rorl
jmp
push
mov
icebp
adc
js
push
imul
and
mov
push
push
sbb
fisttpl
sbb
ds
mov
adc
out
iret
xchg
dec
push
dec
std
or
xchg
push
lock
mov
or
stos
test
push
cwtl
in
loopne
dec
stos
push
xor
insl
xlat
std
jecxz
bound
cmp
cmp
adc
lahf
stos
mov
cmp
fnstsw
mov
or
leave
movsb
pop
mov
or
mov
ret
cmpsl
bound
fwait
mov
sbb
jbe
into
sbb
adc
lods
mov
in
and
mov
or
jge
jo
out
nop
js
mov
js
push
stos
or
mov
in
sub
sub
fisttpl
jmp
cli
sub
dec
jbe
adc
in
pusha
aas
sahf
das
popf
enter
call
sbb
test
add
pop
or
xor
call
insb
cmp
insl
pushf
inc
xchg
xor
insl
cs
xchg
pop
aaa
mov
out
mov
mov
sbb
mov
jnp
mov
sub
stc
and
icebp
aam
mov
out
add
test
loop
inc
repnz
test
adc
mov
nop
inc
or
lods
and
mov
mov
test
bound
mov
fnstcw
or
jg
rorb
pop
sub
mov
xor
jnp
mov
das
xlat
xlat
loope
xchg
jge
add
cmp
scas
jg
push
insb
sub
jecxz
iret
xor
xchg
push
aas
cmp
xchg
jnp
xor
ret
jnp
mov
and
inc
icebp
mov
mov
add
dec
clc
xchg
cmp
push
mov
and
pusha
imul
pusha
shl
in
dec
int3
lahf
shll
lahf
or
xchg
adc
ljmp
dec
lods
jae
mov
outsb
divl
push
icebp
or
dec
dec
aas
pop
nop
cmc
xor
les
in
out
or
lahf
fstps
jg
and
dec
test
imul
inc
mov
add
jl
sbb
mov
sub
ds
repnz
aaa
mov
stos
mov
or
inc
mov
mov
push
neg
mov
shll
xor
add
cmovle
lock
fidivrl
sbb
in
add
outsb
les
jle
add
out
mov
pop
loopne
aas
sub
dec
shlb
push
aaa
or
xchg
inc
hlt
mov
push
xchg
ljmp
clc
pushf
jp
arpl
test
xlat
adc
out
lret
mov
scas
mov
inc
xor
inc
leave
mov
sub
jecxz
ds
jb
jne
ret
sub
pop
pop
or
filds
jae
imul
push
and
add
cmp
lds
gs
test
cmp
fcmovnb
mov
adc
leave
adc
push
cmp
dec
sbb
sub
popf
stos
cmpsl
adc
cmc
pop
adc
mov
xor
decb
and
lahf
add
popa
cli
inc
inc
daa
fmull
sub
pop
movsb
cmp
fisubl
rclb
cmp
pop
xor
or
dec
sub
aas
ficomps
shlb
shlb
es
dec
ret
out
repnz
inc
and
or
rclb
or
mov
hlt
jb
push
iret
xor
xor
jle
mov
adc
enter
rcll
movsl
jne
xchg
mov
out
jbe
popl
test
xor
cmp
test
push
add
adc
test
std
outsb
and
inc
xor
aaa
pushf
test
lea
jb
adc
push
test
push
sub
adc
mov
pop
mov
add
sbb
inc
imul
shlb
testb
pop
notb
in
je
cltd
mov
mov
dec
in
inc
mov
and
or
push
add
adc
scas
pop
push
mov
xchg
jne
dec
xor
fdivl
pop
jge
sbb
add
icebp
adcl
sub
repnz
imul
push
or
mov
push
jp
imul
data16
repz
cmp
popa
in
pop
xor
out
shll
insb
xlat
adc
mov
movsl
fstpt
inc
iret
mulb
xlat
test
das
inc
mov
ja
fcomps
fs
add
lea
and
xchg
rdmsr
je
cltd
sbb
or
cmpsb
sbb
sti
inc
cmp
cs
jne
out
rorl
call
aad
inc
test
inc
clc
pusha
pop
and
gs
dec
inc
repnz
cmp
xchg
xor
mov
sbb
outsb
sahf
std
xchg
stc
mov
xor
sub
stos
cmp
in
cmp
aas
or
leave
sub
fwait
mov
xchg
add
jmp
mov
mov
fistps
es
daa
sbb
imul
outsl
push
pop
jne
mov
stos
cli
mov
dec
std
neg
or
xor
movsb
in
aam
adc
adc
inc
or
test
enter
test
jns
xchg
fwait
popf
jl
aam
mov
ss
pop
dec
faddl
mov
sub
cwtl
mov
lods
sub
mov
sbb
adcb
insl
inc
inc
mov
jp
push
xchg
cld
xor
jne
mov
daa
or
sub
mov
inc
ss
and
sbb
push
rdpmc
mov
lahf
outsb
jge
pop
jne
push
jg
sub
xlat
mov
mov
cmp
aam
stos
xor
subl
adc
andl
cli
jnp
mov
mov
push
adc
pop
mov
ja
sub
pop
mov
faddl
pusha
inc
idivb
pop
hlt
ja
mov
ret
push
je
int3
repnz
js
push
add
insb
push
aad
jecxz
movsb
sub
mov
jge
and
pop
push
and
lods
or
xchg
add
xlat
jl
push
ds
insb
sbb
adc
out
repz
or
outsb
jns
mov
push
dec
fsts
out
loop
ljmp
jg
jmp
lea
lcall
stos
ja
outsl
lcall
mov
inc
push
cmc
mov
test
js
rcrl
cmp
ret
popf
mov
mov
nop
das
cmp
mov
loopne
add
lock
addl
dec
xor
jae
xor
mov
inc
xchg
pop
jp
repz
mov
out
inc
or
std
mov
ret
jb
mov
lods
icebp
sbb
repnz
ret
push
shl
rol
pop
add
sub
nop
lahf
test
and
lahf
sahf
lea
dec
or
jecxz
xchg
lds
jb
imul
jbe
cltd
xchg
push
dec
js
and
dec
xor
fnstcw
pop
adc
das
dec
divl
call
pusha
mov
stos
sbb
push
stc
loop
std
movb
sbb
jo
pusha
das
je
jno
xor
cltd
cmpsl
mov
mov
lcall
xor
pop
xchg
push
add
mov
mov
inc
sbb
sub
out
call
jg
cmpsb
add
adc
mov
addb
sub
lret
rcl
pop
lods
mov
sub
imul
xor
inc
add
clc
mov
fs
insb
add
fidivl
adc
icebp
sub
cmp
push
pop
lea
adc
cmp
and
pushf
mov
xor
hlt
pop
lods
arpl
xor
inc
in
aad
into
ficompl
inc
xchg
aad
jle
cmpb
inc
fildll
bound
popa
pop
mov
mov
cmp
pushf
dec
fistps
xchg
data16
loopne
std
mov
insl
les
repz
imul
xlat
incl
clc
mov
sbb
mov
fnstenv
and
add
push
pop
loopne
mov
add
sub
mov
mov
imul
outsl
or
jne
pop
mov
xor
jae
mov
and
or
outsb
pop
arpl
stos
das
sub
pop
mov
sti
push
mov
mov
jno
xor
divl
sbb
mov
pop
mov
cmp
loop
shlb
int3
mov
dec
mov
ljmp
sbb
inc
or
inc
outsb
and
adc
fs
mov
mov
jmp
jp
xchg
cmp
sub
in
jp
add
cmpb
dec
xor
mov
inc
jb
dec
ror
mov
ror
andl
movsl
in
mov
scas
dec
cmp
sbb
pop
sub
int3
into
inc
in
inc
xlat
mov
cwtl
aam
mov
add
movl
fmull
daa
push
inc
xor
push
or
adc
scas
lea
cltd
fcomps
call
test
gs
lods
add
cli
negl
dec
xchg
sub
and
adc
outsl
jae
inc
fldcw
push
or
adc
call
dec
leave
xlat
lea
inc
push
adc
pop
stos
iret
dec
out
hlt
mov
add
adc
mov
inc
test
enter
mov
dec
xchg
mov
addb
xchg
add
stos
aas
sub
lret
sbb
pop
adc
mov
push
push
jb
fnsave
and
das
in
cmpsb
stc
and
inc
rcrb
packssdw
fsubrs
cltd
jae
test
shlb
cmp
out
test
fidivrl
insb
mov
mov
jnp
jbe
js
mov
mull
decl
inc
pop
ffree
inc
std
mov
push
bound
leave
mov
cmp
jg
push
sbb
fcoml
cs
jg
dec
xchg
adc
dec
sbb
fldcw
jp
dec
push
lret
fistpll
push
icebp
push
xor
lock
in
push
out
out
sub
cmp
nop
pop
sbb
or
ljmp
mov
shrl
inc
sbb
outsb
repnz
test
lret
dec
pop
ss
mov
nop
cltd
lahf
shr
cmc
pop
nop
shlb
adcb
nop
stos
adc
cmp
lds
imul
dec
or
xchg
test
cmp
cld
sub
xchg
pop
mov
and
out
cmc
repz
mov
ret
mov
ror
lret
cmp
js
scas
scas
cmp
push
lods
mov
lock
js
fnstsw
bound
or
ret
lods
dec
pop
int
mov
xchg
mov
test
cmc
ret
ret
push
mov
gs
lea
pop
sub
push
jge
xor
push
fs
pusha
sbb
jmp
xchg
fwait
mov
xor
sbb
jns
jecxz
mov
popa
push
jbe
cmp
lods
or
push
push
fwait
or
inc
les
mov
negb
or
fimull
mov
sti
jmp
mov
cmp
cli
pop
orl
adc
stc
inc
push
mov
or
jp
mov
out
xchg
call
sbb
test
fldl
sub
push
or
ss
push
xchg
out
outsb
adc
insb
cs
scas
inc
mov
sub
cmp
jmp
into
movb
cmp
and
mov
mov
xchg
js
ljmp
out
mov
stos
call
sti
jbe
lahf
stos
pop
rol
push
dec
adc
xor
cli
and
mov
int
jo
test
push
adc
shl
testl
xchg
popa
xlat
push
push
push
cmp
add
mov
in
aad
rorb
out
and
fsubs
out
lock
dec
mov
or
xchg
das
or
pop
dec
movsb
push
test
push
cmp
sub
popf
fsubrl
cmp
je
arpl
sub
ret
lcall
std
xor
sub
cwtl
orl
mov
xchg
mov
popf
jge
fdivr
pop
rolb
dec
shrl
push
in
icebp
xor
add
jp
cwtl
mov
push
dec
push
pop
mov
fisubrl
pop
gs
imul
push
js
or
push
adc
xchg
and
fs
jecxz
popf
dec
lea
and
push
sbb
inc
repz
mov
push
mov
aaa
mov
stc
testl
add
xchg
dec
and
jbe
mov
mov
jns
int
sub
or
imul
psrad
jg
mov
dec
xchg
jecxz
test
dec
jnp
jo
inc
dec
int
es
push
mov
sub
pusha
fidivs
imul
adc
cli
sbb
subb
and
popf
adc
xchg
jl
cmpsb
dec
pusha
test
inc
daa
popf
clc
sub
mov
sub
jb
add
cmp
xchg
or
enter
mov
mov
fstpt
pop
inc
push
push
addl
mov
push
sub
mov
enter
fstpt
push
daa
and
jmp
mov
jmp
push
cmp
adc
cmpl
dec
mov
mov
jge
xorl
mov
ror
and
lcall
addl
leave
xor
adc
imul
cmp
jp
notl
in
pop
jecxz
cs
ja
pushf
cmp
rcrb
imul
mov
mov
adc
jo
rolb
mulb
fsub
mov
fsubr
nop
out
or
or
push
cmp
mov
add
or
or
sbb
stos
mov
sti
mov
rorl
in
pop
xor
ret
mov
mov
sub
std
rorl
mov
jno
and
shrl
sub
pop
in
or
fisubrs
or
lret
into
sub
imul
mov
mov
mov
pop
push
and
out
xchg
xchg
sub
out
cmc
aas
push
push
jge
xchg
nop
lock
xchg
call
mov
jns
push
lods
jo
mov
push
add
rcrb
mov
xchg
inc
aam
sbb
out
or
jp
mov
lahf
test
imul
les
test
mov
sbb
or
repnz
inc
int
dec
fcomp
pop
pushf
xor
add
movsl
movsl
jbe
repz
push
cltd
roll
push
jmp
shrl
ss
sub
cmp
lret
int
adc
sbb
or
inc
push
repz
jle
mov
mov
pop
pop
loop
mov
cwtl
inc
inc
enter
pushf
pop
fsubrl
popa
cmc
mov
push
jge
pop
es
jb
cli
xor
pop
ja
mov
aad
ds
out
mov
mov
or
push
xchg
test
and
jb
cmc
mov
cmp
test
xchg
xchg
xor
cmpsb
fmul
mov
lcall
iret
mov
mov
push
stos
js
pop
arpl
aad
mov
jb
jns
ljmp
or
gs
mov
adc
or
ret
pusha
ljmp
adc
mov
pusha
mov
cs
fwait
ja
mov
outsl
lock
loopne
mov
ljmp
icebp
ret
test
mov
or
xchg
popa
jmp
cwtl
sub
lret
das
adc
and
fwait
nop
cmpsb
push
xor
pop
loope
cmpsb
daa
fwait
pop
dec
pop
and
in
movsl
mov
rol
test
rorl
dec
jae
mov
orb
push
cmc
mov
jle
enter
jecxz
incb
xor
or
push
mov
push
jecxz
jne
leave
cwtl
stos
jle
les
dec
adc
mov
add
mov
xor
add
dec
fcomps
dec
mov
out
inc
lahf
jecxz
pop
push
ds
pop
mov
add
mov
stos
loope
jns
jge
scas
and
insb
mov
mov
or
dec
fistps
test
xchg
jae
idivb
fidivs
pop
fsts
sar
mull
pop
and
movsl
and
mov
rcrl
daa
notb
jae
mov
inc
outsb
mov
cmc
rcrl
repz
adc
gs
jno
jecxz
leave
xor
hlt
mov
std
dec
ljmp
sbb
mov
addr16
aad
mov
js
or
stos
adc
push
adc
pop
mov
jbe
push
ljmp
xchg
xchg
sbb
jo
mov
aas
dec
ret
lods
popa
lods
das
xor
sub
fldenv
repz
mov
out
dec
lea
xchg
dec
cwtl
inc
sbb
iret
adc
xchg
retw
add
push
les
test
movsl
lahf
idiv
add
pushw
bound
push
lock
adc
and
lahf
jge
bnd
lcall
add
pushf
pop
sub
fadd
std
mov
sbb
in
push
dec
loopne
sbb
pop
sbb
mov
xchg
ds
test
mov
or
js
mov
adc
bound
sbb
dec
in
inc
stos
mov
cmp
mov
repz
inc
xor
push
fldt
scas
adcb
shlb
loop
pop
inc
roll
xchg
jnp
xchg
jnp
adc
sub
jle
in
outsb
push
dec
mov
xchg
xorl
fdivs
cmp
inc
call
lret
push
leave
ret
in
xchg
leave
cs
mov
xchg
cmc
stos
mov
pop
pop
hlt
sti
push
mov
fwait
push
push
jmp
xor
push
adc
dec
xor
insl
xchg
pushf
gs
mov
dec
cmpsl
cmc
pop
ljmp
mov
je
addr16
daa
sub
mov
shl
jae
rcl
mov
add
sti
inc
pop
mov
add
pop
add
fwait
pop
test
push
xchg
adc
xchg
xor
push
cmp
fisubl
or
sbb
sbb
mov
add
mov
fdivr
mov
cmp
inc
or
std
ret
dec
bound
fwait
sub
jb
aaa
ds
das
loope
sub
mov
dec
pop
add
imul
sbbl
sahf
stc
add
loopne
andb
xor
sub
aas
jno
jb
jl
push
push
inc
aad
cmp
mov
mov
rorl
xchg
xor
cld
pop
cmc
lds
sbb
push
shrb
sar
xchg
xchg
fdivrs
push
rorb
ss
outsl
dec
jno
jbe
sbb
lcall
scas
insb
syscall
out
loopne
stc
cmpsl
jg
icebp
adc
daa
sub
addr16
outsl
and
out
addb
stc
dec
fmull
jp
jecxz
cmp
stc
push
pop
popl
fnsave
add
data16
icebp
mov
scas
popf
jo
icebp
push
pop
dec
js
stc
ret
xchg
cli
cmp
pop
test
notl
xchg
xchg
dec
mov
out
outsl
or
sahf
mov
xchg
push
insb
xor
push
repz
and
sbb
push
cmp
stc
and
adc
loop
cli
arpl
mov
push
int
js
or
jmp
inc
repz
int
aam
mov
add
data16
ljmp
pop
pop
mov
push
scas
cmp
xchg
fwait
shr
lret
dec
and
cs
cmp
ss
mov
test
leave
add
dec
dec
add
or
outsl
mov
popf
pop
dec
les
push
in
repz
sbb
pop
aam
cld
xor
out
xor
push
movsb
cmc
adc
xchg
loope
ja
push
in
loopne
adc
data16
ljmp
incb
adc
jp
pop
cmp
sub
or
add
sbb
mov
leave
add
sub
add
daa
push
push
and
mov
pop
outsb
cmpsb
scas
xor
lock
movsb
sub
mov
jge
ss
test
inc
out
xor
jle
jo
daa
jle
cwtl
cmc
shll
sub
sub
mov
ret
pop
mov
jge
sti
sbb
movsl
ucomiss
mov
sti
dec
jae
bound
sbb
dec
negb
jge
aaa
sti
inc
xchg
pushf
js
in
pop
sahf
shrl
cli
xor
pop
sub
pop
dec
mov
add
lea
jmp
xchg
mov
addl
dec
push
data16
adc
push
sbb
mov
fsub
ret
add
test
mov
lods
mov
mov
repz
into
dec
fimuls
fadds
test
inc
mov
ror
cld
xor
popf
cmp
mov
sbb
loop
ss
mov
cld
xchg
or
dec
inc
movb
mov
js
pusha
pop
jg
mov
cmc
aas
adc
adc
fcomps
and
and
or
jbe
das
xchg
popa
out
xchg
das
mov
xchg
ds
gs
fprem1
lret
mov
mov
popa
movsl
insl
pop
in
call
xchg
fildll
scas
dec
pop
push
shrb
outsl
lds
call
pop
xchg
or
cmpsb
arpl
push
pop
stc
pop
rcrb
enter
js
incl
popf
mov
push
dec
inc
mov
fdivs
adc
adc
shlb
shlb
pop
add
mov
inc
negl
sub
adc
jb
sub
test
imull
adc
dec
inc
xchg
addr16
jmp
and
aad
stos
sbb
icebp
out
mov
icebp
clc
std
imul
xchg
or
fistps
jg
ret
xchg
cmp
mov
jbe
dec
leave
mov
pop
dec
scas
cmp
adc
adc
mov
adc
mov
bound
out
addr16
jne
cmp
cli
adc
aam
xchg
lahf
out
mov
arpl
test
ss
icebp
aaa
ret
les
mov
daa
push
jo
dec
adc
cmp
out
sbb
popf
mov
fbstp
movsb
aad
inc
ljmp
inc
shll
scas
mov
add
inc
call
mov
cld
aad
pop
fdivl
lods
andb
adc
out
mov
insb
pop
pop
out
lahf
mov
xchg
push
cwtl
mov
mov
jno
scas
mov
cld
nop
movsb
stos
mov
and
aas
xchg
scas
lds
popa
in
lret
mov
pop
lods
mov
sbb
or
stos
sbbl
xchg
mov
scas
cwtl
gs
lret
lret
add
aas
xor
outsb
jge
aad
popf
pop
inc
xchg
hlt
adcb
lock
adc
aam
mov
pop
push
inc
inc
rolb
fcomps
movsb
lods
mov
ret
arpl
mov
lretw
hlt
aad
inc
dec
xchg
in
or
ja
cli
add
push
mov
ljmp
aaa
vcvtss2sd
in
enter
and
aas
sub
adc
mov
pop
jle
in
mov
stc
int
shll
push
in
add
lcall
mov
pop
nop
insb
daa
loopne
xor
lret
rorl
adc
add
xor
push
push
mov
scas
sarb
fstps
pushl
dec
rcrb
clc
popf
pop
xchg
add
push
pop
jns
sbb
aad
fwait
leave
loope
sbb
sub
negl
jnp
cmp
ljmp
xchg
add
jmp
lret
mov
into
std
add
cmc
pop
loope
pop
adc
in
pushf
fsubrs
sbb
jns
add
or
std
cmp
lods
jecxz
xor
xchg
or
sbb
adc
push
pop
in
setnp
sbb
jecxz
stos
sahf
mov
sbb
or
jecxz
jmp
cmp
xchg
xchg
xchg
pop
xor
add
xor
das
dec
xor
jo
shlb
mov
or
ss
jg
cltd
int3
adc
fs
div
xchg
aaa
rclb
jge
sbb
mov
sbb
popf
jns
adc
sahf
adc
adc
inc
xchg
mov
adc
cli
daa
ret
lcall
adcl
jge
xor
bound
add
fwait
gs
sbb
out
add
or
dec
mov
push
xchg
mov
add
test
lock
lods
jle
xchg
push
movsb
pop
and
push
mov
xor
mov
xor
mov
mov
sub
fcomp
lock
xor
xchg
lods
xor
xchg
adc
out
pop
adc
or
hlt
and
mov
or
inc
mov
pop
lods
mov
pop
fwait
shl
push
jmp
pop
outsb
fistpl
mov
stos
fxam
pop
cmp
aad
in
pusha
out
or
int3
das
sub
jg
sbb
push
adc
mov
pop
jnp
popa
and
and
add
mov
or
or
push
pusha
sbb
xor
das
sti
dec
loop
and
push
int3
sbb
xchg
jg
sub
fbld
cmp
leave
xor
jb
dec
xor
or
sbb
add
mov
out
pop
xchg
test
dec
and
add
subb
call
pop
mov
lods
or
dec
cmp
jge
pop
leave
sub
inc
push
out
pushf
mov
sub
dec
inc
inc
fs
lcall
xchg
gs
cltd
in
aas
add
ret
mov
loop
fldenv
xchg
test
adc
inc
dec
int3
sub
sti
lods
push
loop
cltd
adc
or
pusha
fcomps
movsl
leave
sub
stos
sahf
jo
std
lods
fldcw
test
loope
je
mov
pop
or
add
and
leave
out
bound
jo
nop
jne
mov
mov
jb
in
fdivr
add
lcall
cmp
sbb
int3
cs
push
stos
into
push
adc
insl
daa
xchg
sti
jae
push
add
and
sahf
inc
cld
inc
das
sbb
pop
shlb
insb
mov
push
int3
in
xor
cld
push
ja
sbb
xor
stos
imul
jecxz
push
add
std
xor
and
mov
ret
movsb
xor
mov
add
in
dec
fldcw
add
out
jg
or
cmpsl
xor
fs
mov
data16
and
add
imul
push
out
xor
das
mov
cmp
pop
jmp
pusha
jle
aas
adc
xchg
scas
rep
int
mov
int3
push
push
outsb
lret
shl
pushf
inc
jo
cmp
sbb
push
dec
gs
insl
fstl
iret
inc
movsl
push
lcall
iret
out
xor
and
fisubs
pop
inc
jl
pop
xchg
notb
add
das
enter
dec
js
shrl
iret
pop
imul
cmp
xchg
lahf
and
rorl
cs
xchg
loope
popf
jno
divl
cli
or
mov
xchg
ret
xabort
xor
and
mov
repz
pop
and
aaa
lcall
sti
mov
insl
pop
enter
nop
cmp
xchg
es
cmpl
pop
mov
cltd
cmpsl
subl
sub
adc
cwtl
adc
jecxz
mov
jae
aad
dec
add
pop
cmp
push
fmul
movsl
xor
pop
and
mov
aad
cmp
push
enter
add
jb
adc
dec
lcall
sub
inc
adc
cmpsl
sbb
js,pn
pop
daa
lcall
push
dec
out
jl
sub
mov
mov
cmc
pushf
daa
mov
or
adc
add
xchg
pop
sub
mov
sub
mov
movsb
jmp
cmp
out
in
pushf
adc
cmp
jecxz
mov
pop
dec
push
test
dec
icebp
rclb
fnstsw
xor
pop
adc
push
sub
jge
std
hlt
and
mov
rcll
inc
xor
xor
ret
mov
sti
mov
loopne
insb
push
pushf
test
xchg
and
rorb
daa
scas
xchg
shll
mov
aad
imul
loope
fwait
test
add
adc
loop
jbe
lea
hlt
push
mov
enter
fisttps
sbb
push
std
ret
mov
cwtl
xchg
mov
hlt
outsb
je,pn
add
mov
cmpsl
inc
cmpsb
xor
out
out
enter
mov
and
test
orl
xchg
adc
sub
pop
aad
xchg
int3
jge
jl
es
pop
movsb
aad
and
jne
mov
inc
mov
jae
out
rcll
lcall
pushf
adc
fldl2t
inc
jnp
je
or
pop
mov
mov
cld
stos
add
inc
pop
pop
sti
fistl
test
lret
adc
cli
sar
adc
push
fwait
rclb
mov
push
and
inc
pop
mov
inc
push
jg
add
shl
loope
mov
pop
mov
in
xor
enter
stos
je
sarb
jne
push
ss
cmp
mov
out
xor
add
xor
insb
pop
data16
lods
push
jecxz
cld
cmp
inc
out
adc
loopne
ds
push
lods
jecxz
mov
mov
je
fimuls
in
sub
mov
pop
xor
outsl
push
dec
and
jns
dec
jecxz
popf
mov
jno
je
incl
xchg
mov
mov
sbbb
aam
xor
fisubrl
mov
incb
stc
enter
das
push
inc
xor
in
pop
mov
add
lods
mov
xchg
test
adc
fdivrp
repz
dec
pop
cmc
fidivs
outsb
pop
and
lea
daa
lret
lods
push
cltd
pushf
pop
dec
jbe
pop
stos
sub
push
adc
cmp
hlt
push
fimuls
jns
or
xchg
mov
cli
or
lock
sub
push
push
sub
add
inc
mov
push
ror
sahf
xchg
jno
xchg
push
rcr
pushf
pop
or
arpl
call
lods
lods
gs
jbe
jp
std
push
dec
adc
mov
xchg
ret
pop
fiaddl
sbb
outsl
in
lahf
rcll
xchg
cltd
testl
shl
xor
sub
xor
test
and
or
cmp
ja
test
cmp
cmpsl
jl
stos
ror
xor
jo
inc
stos
popf
lcall
lods
imul
jno
xor
int3
mov
inc
arpl
fbld
adc
xchg
les
xchg
cltd
dec
or
cmp
and
loopne
dec
ror
sahf
mov
add
jnp
xor
cmp
lahf
mov
add
jnp
fldenv
loop
test
cmp
in
fwait
inc
shll
dec
lods
sahf
sbb
std
scas
add
mov
lret
cmp
cld
lds
dec
xor
and
dec
pop
gs
aad
xor
mov
imul
ret
mov
aas
loop
dec
mov
xchg
movsb
xor
call
xchg
fdivrp
cltd
outsb
in
cli
xchg
ds
add
pop
xorl
inc
mov
mov
lock
push
icebp
push
arpl
pop
icebp
lds
addr16
cmp
invd
or
adc
cmp
xchg
jge
por
dec
push
adc
xor
insl
jmp
fs
and
xchg
fldt
jl
ds
call
jno
int
jg
rcrb
adcl
lock
xchg
cmc
xchg
dec
daa
add
inc
and
je
sub
subb
imul
jecxz
mov
addl
adc
rcll
lds
mov
call
mov
outsl
insb
xor
inc
jnp
and
pop
and
orb
sbb
rorb
xchg
rcr
repnz
lods
pop
lret
push
mov
popa
das
int3
mov
xchg
rcr
out
fdivrl
outsb
lea
mov
std
test
mov
push
aad
cmp
ja
fadd
dec
fcompl
xor
cli
aad
jo
lahf
xchg
pop
lds
fwait
mov
xchg
js
fwait
inc
sbbl
dec
aaa
fists
mov
in
repnz
dec
mov
mov
imul
iret
lds
roll
mov
pop
or
sub
mov
aad
imul
jnp
push
outsb
jge
ret
jb
fstpt
pushf
jae
sbb
adc
lcall
add
mov
aad
mov
hlt
ja
cs
mov
sbb
mov
jo
hlt
out
mov
ret
fs
arpl
lea
sub
inc
popa
pop
mov
fsubrs
adc
daa
and
fdivr
pop
cmpsl
hlt
pop
adc
xchg
mov
inc
jo
jae
jne
lods
fcmovnb
mov
mov
jge
and
fmuls
cmpsb
jnp
imul
test
nopl
rcr
lods
xchg
xor
call
popa
pop
adc
or
xchg
lahf
jmp
jb
arpl
andl
cmp
xor
push
jl
xchg
hlt
and
xchg
xchg
mov
jno
push
xchg
test
inc
jg
pop
jle
dec
fdivrs
xor
sbb
pop
jmp
and
ss
cmpsl
out
mov
mov
cmp
lcall
enter
pop
lcall
ret
iret
xchg
pusha
xor
jnp
or
sub
notb
or
outsb
inc
dec
sbb
push
mov
cwtl
popa
mov
sub
pusha
or
push
insb
cmp
in
out
in
lcall
gs
and
les
xchg
push
dec
mulb
mov
adc
inc
dec
cmp
jecxz
or
mov
enter
insl
xor
arpl
inc
pop
or
int3
out
mov
and
bswap
icebp
mov
je
call
mov
push
pop
and
pusha
pusha
xchg
xchg
out
scas
daa
cmp
dec
in
lods
pop
jb
jae
sub
addr16
imul
scas
aas
shrl
imul
push
shrl
pop
ljmp
dec
sub
in
sub
jle
movsl
dec
mov
mov
sbb
inc
es
inc
push
jg
mov
mov
rcl
ljmp
gs
cs
lcall
cmpsb
pop
xchg
push
cmp
in
imul
or
push
dec
push
adc
jbe
lock
arpl
xchg
inc
mov
or
adc
add
adcl
sbb
daa
ljmp
mov
fs
sub
xor
push
sub
inc
test
cli
push
les
push
xchg
fisubrs
lcall
ret
jl
add
mov
das
sbb
mov
pop
fstps
icebp
or
mov
push
inc
cld
outsb
mov
xchg
test
xor
or
pop
fsubrs
nop
inc
cmp
mov
int
xchg
mov
das
icebp
cwtl
pop
cmpsb
mov
push
add
jo
sub
imul
mov
cltd
jg
rcrl
out
pop
repz
xchg
les
arpl
les
sub
fists
into
mov
sti
loop
cli
jp
push
lods
xchg
in
lret
cmpsl
mov
pop
cli
lret
mov
mov
cmp
push
cld
jo
add
inc
pop
scas
cmp
cmp
sbb
sahf
push
rclb
lea
sub
dec
push
push
or
in
jl
cmp
and
xor
cmp
xchg
cmc
push
insb
inc
mov
out
sub
jl
shlb
fcompl
xor
and
xchg
adc
popa
ja
adc
inc
leave
sbb
pop
add
js
ljmp
push
jecxz
lret
lods
jae
pop
arpl
mov
jae
js
push
adc
bound
pop
movsb
lea
in
cmp
pop
inc
and
and
out
xchg
iret
sub
std
jno
jge
fcomp
add
cmpsb
mov
push
int
jp
test
aam
cmp
push
xchg
cmpsl
jne
mov
std
loope
imul
and
repnz
and
mov
lods
sub
mov
in
xor
or
dec
dec
ret
ret
test
mov
and
aas
stos
test
xchg
and
pop
xchg
sub
adc
gs
xor
xor
push
mov
dec
shlb
notl
mov
sbb
jl
inc
int3
test
xor
inc
in
ret
push
sub
pop
sarl
repnz
repnz
gs
push
or
mov
ucomiss
jbe
or
in
or
loop
xchg
jne
jmp
scas
or
xchg
movsl
loope
lahf
xchg
jp
inc
push
sbb
adc
imul
cld
mov
outsb
mov
jmp
add
jle
mov
cmp
sbb
sti
ficoms
fnsave
das
push
mov
xchg
inc
mov
cld
and
insb
loope
push
lock
cld
gs
leave
mov
inc
push
mov
lds
out
movsb
xor
push
sbb
jns
add
xor
add
sub
xchg
dec
mov
sub
int3
dec
cwtl
adcb
loop
jp
hlt
pop
fwait
xor
std
xchg
mov
pop
aam
mov
ds
jecxz
rcll
jp
scas
inc
sub
mov
in
fldcw
xor
add
cmp
sbb
push
fwait
cmp
cmp
mov
sub
lock
adc
adc
aam
fisttps
push
dec
lret
mov
jae
and
xor
roll
pop
loopne
hlt
es
addr16
fstps
loopne
stos
popf
data16
gs
shrl
jno
mov
cs
sub
test
imul
in
jmp
mov
ja
push
push
test
sti
adc
lock
popa
sub
fsubrl
pop
xchg
inc
leave
mov
leave
data16
dec
mov
push
negb
enter
push
je
cmp
dec
das
aad
push
xor
xor
in
nop
jns
push
adc
jns
mov
and
mov
or
cmc
push
adc
push
imul
or
inc
ret
out
adc
mov
fwait
xor
mov
movsl
subl
lret
add
stc
pop
icebp
cmp
and
sub
sub
or
imul
cmc
xor
dec
lock
repz
bound
jl
sub
sbb
movsb
jns
dec
in
add
push
test
xchg
adc
sbb
push
arpl
xchg
aam
jl
cltd
jae
fmuls
pop
iret
pop
adc
pop
pop
mov
dec
cmp
imul
cwtl
sbb
xchg
push
jecxz
xchg
iret
popa
or
push
pop
mov
subl
aam
pop
sbb
repz
std
pop
in
ds
inc
xchg
notl
imul
lods
jge
or
jmp
lds
mov
lret
or
popa
rolb
outsl
jns
pop
push
cmpsb
dec
add
iret
scas
es
or
lods
xchg
cwtl
sbb
clc
shrl
dec
mov
xchg
test
fs
imul
fistps
lods
aam
addr16
jl
ss
jb
out
les
rdtscp
jae
jmp
pop
add
xchg
shr
sbb
popa
and
loopne
data16
fwait
dec
xchg
dec
mov
and
pop
push
ds
lock
sbb
rorb
jecxz
sbb
clc
mov
jmp
cmpsb
jmp
arpl
sbb
dec
mov
shlb
xor
xor
add
and
adc
xchg
dec
bound
bound
out
jae
mov
pop
inc
jmp
sbb
sbb
xor
jge
lcall
dec
ss
or
xchg
or
popa
cmc
and
ret
scas
ja
fcomp
daa
xor
or
lcall
pusha
jmp
mov
sbb
lret
push
dec
mov
lds
or
notl
mov
mov
mov
push
xor
add
leave
lcall
add
int3
inc
test
scas
lcall
movsl
add
ds
or
int3
sub
gs
push
popa
dec
or
or
pop
cld
xor
sub
rclb
imul
or
cmp
dec
rcrl
jmp
mov
dec
test
xor
inc
lret
xorl
shl
test
inc
dec
push
dec
int3
stos
nop
pop
xor
rcrl
xchg
push
and
mov
movb
mov
jb
mov
incb
mov
orb
cs
lret
pop
cltd
and
psubsb
mov
filds
aam
cmpl
push
mov
jbe
decl
out
or
push
xor
int
loop
popf
jb
and
frndint
jl
daa
xchg
sqrtps
lock
lcall
adc
xor
insb
lahf
mov
xorb
addr16
gs
add
test
inc
cmpl
aaa
cli
fptan
test
cmp
or
mov
stos
popa
aam
lock
xor
nop
jne
adc
movsb
nop
arpl
push
sub
xchg
mov
mov
out
stc
cmp
cmp
int
test
popf
stos
into
cmp
and
push
and
daa
lcall
mov
and
adc
push
mov
loop
xor
data16
imul
mov
mov
fldpi
adc
std
scas
iret
popa
xor
sbb
jbe
or
mov
hlt
ds
add
fdiv
mov
push
cwtl
cmp
pop
lahf
ja
push
je
mov
sub
cmp
imul
mov
pop
aam
aaa
daa
pop
js
adc
xchg
adc
nop
nop
or
add
mov
les
sbb
rorl
shrb
dec
xchg
inc
cmc
in
mov
xchg
inc
add
jecxz
mov
shl
aad
xor
mov
push
push
fldcw
jns
and
fisubs
lahf
shll
cmp
and
fdivrp
adc
cltd
daa
gs
cmp
ds
mov
adc
pop
jl
lret
imul
push
sahf
or
cltd
sub
adc
mov
out
das
pop
inc
adc
adc
mov
pop
xchg
adc
pop
rolb
int3
sub
pop
adc
insl
std
xchg
pop
lds
adc
push
sbbl
movsb
cmp
addr16
push
xor
push
push
mov
ja
cmpps
xor
icebp
fistl
xor
sbb
cwtl
in
test
mov
adc
scas
sbb
jbe
inc
addl
xor
leave
push
fiadds
mov
scas
sbb
in
dec
cmp
repnz
popf
ret
sahf
sbb
mov
jns
add
test
pop
cmp
pushw
mov
insb
cmp
mov
cmp
pop
pop
mov
fucomp
cltd
gs
sbb
pop
jmp
shrb
stos
xor
fcmovnb
dec
mov
mov
adc
push
fsubp
adc
not
pop
pop
ds
adc
fisttpll
test
sbb
sti
sub
inc
add
imul
sbb
js
in
mov
mov
hlt
or
sbb
and
call
rol
lcall
or
pop
sti
int
cmp
add
adc
ss
imul
mov
push
or
out
push
or
cmp
push
or
sub
cmp
sahf
shlb
inc
add
scas
lahf
dec
fwait
data16
in
lret
in
jl
cmp
adc
fimuls
or
in
xchg
sbb
mov
pusha
fs
addr16
xchg
and
rorl
or
out
mov
sar
xor
jecxz
cmpsb
sti
dec
pop
aas
inc
out
aas
daa
mov
inc
lea
jl
or
leave
dec
and
sub
pop
popf
adc
xor
cmc
lds
ja
xchg
ljmp
and
inc
cmp
cmp
xor
or
rcr
mov
mov
adc
jae
sbb
adc
dec
jmp
and
mov
aaa
dec
or
adc
jecxz
pop
shl
or
adc
jg
insb
cmp
sarl
arpl
xor
test
cmpsl
mov
inc
fistl
xchg
sbb
adc
dec
adc
dec
cmpsl
or
xchg
or
cmp
pop
dec
xor
sub
and
add
jg
test
mov
fcmovbe
fdivs
test
ret
loopne
cmc
xlat
lods
in
xchg
xchg
mov
lock
pop
sbb
shll
cmp
xchg
js
pop
push
enter
daa
imul
rcll
je
les
adc
adc
and
pop
les
mov
fnstsw
loop
lahf
nop
out
mov
jns
inc
cmp
push
stos
loop
dec
es
xlat
ficompl
icebp
mov
pop
jns
cmp
out
std
cmpsb
adc
mov
sahf
pushf
stos
es
idivl
pushf
mov
enter
jmp
sbb
popf
mov
mov
imul
lahf
pop
mov
jl
xor
icebp
xlat
lods
mov
and
test
mov
pushl
push
test
mov
push
aam
out
pop
std
imul
sub
dec
lahf
stos
sub
inc
scas
lret
cwtl
or
dec
iret
gs
push
les
js
in
ljmp
repnz
fwait
test
adc
inc
xchg
mov
xlat
dec
mov
xor
jno
or
dec
mov
dec
fnsave
test
daa
je
mov
xor
adc
es
xchg
or
or
pop
std
je
lahf
xchg
cmp
lock
ss
js
pop
out
and
jle
sub
addr16
aam
mov
sub
jo
fnstsw
jae
mov
adc
xchg
jecxz
insb
mov
xchg
sbb
lods
push
subl
btr
pop
or
lods
xchg
loopne
push
fisubl
push
dec
nop
lods
adc
pop
pop
outsl
mov
adc
push
int3
ja
jmp
jnp
aaa
sbbl
sub
mov
cmpsb
add
mov
pop
pop
push
shl
test
push
jnp
add
addps
outsl
in
iret
pop
call
repz
addr16
cmp
cmpsw
mov
xchg
and
nop
or
pusha
inc
push
aad
xchg
mov
aaa
adc
lcall
add
pop
mov
cmp
mov
scas
and
pop
ret
stos
mov
in
outsb
dec
cld
out
mov
out
xor
add
push
push
mov
mov
inc
inc
hlt
xchg
jmp
pop
mov
call
popf
xchg
inc
fwait
daa
dec
leave
dec
pop
jnp
dec
into
das
in
add
mov
and
fstps
mov
jge
push
inc
cld
jns
test
and
decb
mov
clc
orl
mov
mov
sub
lahf
jae
sub
mov
mov
scas
fistps
jle
test
test
push
dec
ret
emms
jp
push
adc
push
push
dec
mov
push
pop
stos
movsb
lret
ds
mov
pusha
sbb
inc
jne
xor
out
mov
adcl
sbb
mov
loop
and
push
popf
or
add
mov
in
mov
or
xor
mov
cwtl
ljmp
mov
xor
dec
push
adc
jae
adc
adc
cmpsb
in
adcb
mov
cmpl
mov
pop
cltd
xorl
hlt
fmul
lcall
inc
repnz
pop
jbe
mov
inc
inc
push
dec
test
or
inc
jbe
add
xor
sub
pusha
es
rcll
inc
sub
rcll
jo
cmpsb
ljmp
pusha
sahf
jp
mov
mov
push
inc
aaa
push
lahf
arpl
cmp
dec
fwait
outsl
aam
mov
jns
jbe
sti
loopne
in
ljmp
mov
ret
lock
cmc
test
and
cmp
and
xchg
add
insl
jns
inc
sub
pop
push
sahf
sub
dec
inc
add
push
xlat
jl
jg,pt
loope
xor
cmp
leave
or
mov
stos
or
sbb
push
incb
jle
int
jmp
push
iret
lods
and
daa
add
sub
call
jns
in
ficomps
sbb
mov
ret
arpl
mov
mov
insb
mov
jae
jp
mov
popa
fprem
inc
outsl
in
sbbl
mov
ret
stos
idivb
and
enter
sbb
mov
jb
and
psubsw
daa
ss
pop
loopne
xchg
je
or
or
jne
insb
xchg
enter
sbb
leave
jns
stc
inc
jmp
cmp
jnp,pt
rclb
call
add
xor
push
xchg
call
les
les
int
sub
out
xor
mov
or
ret
mov
dec
adc
mov
sub
xor
test
testl
jnp
jb
popa
pop
decl
daa
sbb
out
test
jns
or
push
call
push
mov
mov
out
fdivrl
imul
pushf
jmp
mov
int3
test
movsb
mov
outsl
aaa
andl
pushf
es
mov
mov
mov
scas
aaa
push
push
xchg
sub
mov
hlt
sbb
mov
mov
inc
stos
jmp
cmc
push
jle
cld
call
leave
jbe
shlb
insl
xor
popa
inc
and
repnz
xchg
aad
push
iret
ss
jmp
pop
sbbb
sbb
pop
xchg
scas
sbb
cmp
jae
sbb
in
dec
cmpl
rcl
pop
das
leave
jb
or
xchg
shrl
sbb
gs
inc
adc
xor
dec
dec
sub
in
pop
movsb
jecxz
sub
xor
adc
jg
cmp
and
inc
inc
adc
pop
shlb
or
mov
imul
and
push
adc
gs
inc
ljmp
add
int
sar
inc
push
dec
mov
out
xchg
lret
xchg
sbb
int
repz
or
cld
rcrl
push
leave
in
imul
fcoms
and
dec
push
ds
enter
leave
sub
iret
cmpsb
ret
shll
add
push
push
movsb
mov
fldl
rcl
lcall
mov
cmpsb
sarb
sarb
inc
movl
pop
mov
xchg
jnp
in
fstpt
int3
je
aaa
shlb
leave
das
add
jb
mov
jecxz
pusha
dec
repz
mov
jg
pop
std
xor
mov
js
sbb
pop
jb
in
cmpsl
sbb
pop
movsb
xchg
sbb
ljmp
or
add
leave
mov
lret
mov
xchg
dec
mov
outsl
or
imul
bound
pcmpeqd
out
mov
roll
repnz
stc
outsb
lods
jl
xchg
jae
inc
xchg
fcomps
fnstsw
lock
imul
lcall
mov
das
std
cmp
jns
and
loopne
sqrtps
sub
push
adc
ret
push
adc
fildl
and
push
loope
scas
jo
fwait
sar
mov
cmpb
clc
jg
or
in
mov
or
dec
lret
push
or
adc
add
jno
stos
int
call
or
inc
fisttps
cld
xor
jb
outsb
ficomps
add
push
jbe
xchg
arpl
sahf
fmuls
shrb
lret
cmp
xor
mov
mov
mov
jmp
pop
or
xchg
sbb
adc
lea
xor
addr16
mov
loope
dec
pop
sbb
ss
sbb
test
ret
pop
cwtl
repnz
roll
pusha
cmp
pusha
je
jns
add
aas
std
inc
popa
xchg
int3
stos
mov
mov
fwait
add
mov
fwait
popf
scas
adc
cwtl
or
syscall
popf
jne
aam
or
mov
rolb
insb
jmp
mov
insl
in
shll
pop
or
arpl
rorb
addr16
pop
add
jmp
xor
xchg
imull
nop
push
sti
mov
fs
mov
and
out
jecxz
call
stc
pop
jb
or
jbe
ret
push
xor
int
jbe
popa
or
xor
sub
push
lcall
adc
daa
jmp
and
rol
out
pop
mulb
aaa
rorl
call
popa
adc
sbb
out
mov
shll
rcrb
and
jg
orb
iret
cli
push
xchg
jp
addr16
rcll
sahf
dec
push
test
and
dec
out
hlt
mov
pusha
out
cs
mov
jecxz
arpl
sbb
pop
push
jb
sub
jns
add
std
and
jl
in
and
mov
jecxz
jbe
cmpsb
jl
jle
das
movzwl
mov
mov
jb
aad
out
pop
cmp
pop
cmpsl
xchg
xchg
dec
xchg
imul
inc
lahf
lea
ljmp
roll
aad
adc
sbb
mov
jl
inc
push
dec
jbe
mov
jmp
xchg
stos
or
popa
negl
js
push
idivl
aaa
call
fsubs
push
call
pop
cmp
and
pop
out
push
jb
mov
jbe
lret
lahf
jbe
popf
inc
les
sti
mov
in
cli
fcomp
cli
rol
jb
mov
xor
adc
dec
jg
loope
xchg
xchg
nop
outsl
mov
xchg
push
mov
movsb
loop
ret
movsb
fisubrs
sbb
xlat
loop
sub
pop
xchg
sub
rcr
mov
scas
mov
jns
js
lods
add
subb
ja
stc
mov
outsl
mov
and
adc
ja
and
mov
clc
cmc
dec
xchg
ja
cmp
clc
leave
ja
dec
jmp
pop
xchg
cmp
ss
or
cmp
test
bound
mov
pop
mov
xorl
mov
xchg
xor
jge
pop
aas
rcll
hlt
shl
inc
outsl
jno
add
sbbb
dec
cmp
clc
aad
jg
neg
push
mov
add
dec
inc
ljmp
sbb
scas
or
mov
adc
and
sbb
in
pop
mov
cmp
filds
mov
cmpsb
inc
pushf
lret
jno
pop
fs
mov
mov
sub
shll
je
xchg
push
add
xchg
xchg
or
mov
mov
pop
jle
jb
icebp
pusha
xchg
inc
adc
cwtl
mov
and
or
adc
push
and
daa
adc
lods
and
xor
push
xor
cmpsl
lret
xorl
icebp
inc
pop
out
mov
mov
dec
iret
pop
imul
das
push
and
pop
push
lahf
arpl
mov
cmp
cs
into
jbe
in
icebp
adc
shl
sti
sbb
mov
roll
push
mov
push
xchg
call
int
iret
arpl
das
xchg
adcl
lret
outsb
lcall
jg
lods
je
jbe
cmc
outsb
dec
imulb
sub
insl
decl
sbb
push
out
std
in
sbb
iret
jns
loop
lcall
inc
sbb
fwait
stc
jne
test
xorl
push
jno
cmp
rolb
cld
lret
in
lahf
inc
sub
fnstenv
mov
adc
push
je
js
xchg
inc
push
sbb
mov
fldcw
sub
sti
inc
adc
lcall
lea
dec
cmp
popa
dec
rcr
dec
mov
outsb
xchg
sub
sti
das
xchg
dec
mov
in
and
sub
jne
or
fwait
fs
push
lds
xchg
dec
fisttps
sub
stos
in
mov
insb
add
dec
sub
lret
cli
bound
sub
xor
sub
jmp
ret
push
in
outsb
jo
or
orl
mulps
sbb
or
dec
fstpt
jg
xchg
jl
add
sbb
stos
push
jg
repnz
repnz
lods
add
pusha
cmpsb
jle
cmp
outsb
subl
pop
in
rolb
test
inc
dec
cs
xchg
dec
out
add
cmc
push
ljmp
pop
int
std
push
jmp
pop
ss
bnd
push
xchg
jne
sti
repnz
jne
cmpsb
jae
mov
xchg
pushf
dec
mov
lods
jo
jo
pop
outsl
jle
hlt
es
pop
cmc
dec
sahf
or
mov
das
daa
sbb
sub
inc
outsb
and
insl
inc
xor
inc
cli
idivb
inc
gs
test
outsl
ret
lret
sub
inc
hlt
sbb
lea
ja
fnstcw
mov
cmp
add
push
test
fildl
jmp
loopne
in
movsl
lock
mov
adc
push
pop
incl
es
mov
cmp
mov
popl
scas
pop
aaa
pop
push
cmpsl
jmp
daa
adc
jbe
and
xor
or
xchg
push
daa
or
pusha
loop
cmpsb
push
std
movsl
cmpsb
sub
mov
adc
push
jb
fs
xchg
in
and
pop
push
cmpsl
and
ja
in
jp
in
push
pop
mov
xchg
ret
addr16
fisttpll
sbb
push
add
cwtl
hlt
pop
test
xor
outsl
insl
aam
push
lret
andl
mov
fmull
sub
push
push
dec
add
push
xor
push
sub
fldenv
pushf
lahf
sub
xor
les
xor
in
fwait
into
div
or
inc
testl
testl
inc
loopne
ja
jmp
xchg
pushf
cmp
or
jg
aad
loope
xor
mov
push
imul
xor
pop
ret
sbb
les
daa
rclb
pop
call
sbb
xchg
sub
xor
add
pop
ret
mov
ds
mov
ds
out
mov
mov
fisttpl
das
clc
xor
inc
dec
mov
leave
call
sub
mov
or
inc
cmp
mov
in
jae
mov
cwtl
stc
mov
xor
filds
mov
cmc
pop
shll
adc
int3
xchg
pusha
sbb
movsb
adc
cs
adc
cltd
push
cltd
mov
divb
lcall
dec
pop
mov
lods
mov
jnp
js
fstl
dec
loop
or
mov
or
insb
fcomi
int3
cmp
pop
cmp
dec
lahf
scas
sahf
repz
ret
pop
mov
inc
adc
cmp
add
dec
adc
ja
xchg
pop
into
ds
std
xor
das
inc
push
scas
adc
cli
mov
int3
cli
mov
jmp
sbb
adc
xlat
enter
cli
pushf
adc
aam
js
sbb
dec
aaa
or
cmp
test
imull
push
mov
hlt
inc
imull
adc
mov
xor
in
pop
movl
jnp
aaa
stos
pop
in
sub
mov
push
push
leave
push
nop
loope
mov
sub
loope
sub
mov
mov
xchg
sbb
lret
enter
jl
in
roll
mov
data16
mov
loopne
and
add
pusha
and
sti
sti
flds
clc
daa
mov
popf
shlb
push
pop
jae
sub
ret
or
sbbb
pop
lods
stos
in
cmp
add
stos
mov
xor
ja
xchg
sub
fimuls
ljmp
mov
adc
ret
inc
xor
rol
mov
mov
pop
xchg
outsl
lret
ja
inc
shl
cmc
fimuls
adc
add
pushf
push
iret
jmp
push
stos
enter
lds
lods
sub
pop
mov
stc
pop
cmp
lock
dec
nop
inc
fidivrs
push
mov
or
cmp
sbb
sub
fildl
lahf
xlat
adcl
xlat
dec
inc
push
lret
fidivrs
or
jle
fcmovnb
adc
aad
mov
mov
add
jnp
xchg
outsl
xchg
hlt
sbb
pop
out
out
push
mov
or
daa
lret
roll
mov
jns
push
xor
xchg
fstl
loopne
jp
pop
inc
inc
inc
sub
pop
aam
push
mov
rclb
jne
add
cmpb
ret
pop
es
into
es
xor
in
xchg
iret
test
into
sbb
mov
lahf
mov
jo
or
test
adc
jle
test
mov
xchg
xlat
ret
inc
jo
orl
sbb
loope
xchg
pusha
inc
dec
cltd
mov
cli
push
xor
jae
lret
sub
imul
jg
hlt
mov
test
fsubrs
not
dec
pop
lret
cld
push
push
in
sbb
fsubs
adc
test
sbbl
jl
subl
xchg
je
mov
jne
mov
dec
in
fdivs
add
add
mov
add
out
mov
and
pop
insl
push
fildl
lcall
lock
lahf
inc
and
and
rcr
adcl
fbld
dec
mov
or
jmp
in
cli
insl
cmc
xlat
icebp
sub
cwtl
int
mov
in
mov
inc
dec
aaa
xchg
loop
sbb
insl
cmp
call
andb
xor
mov
jmp
or
shrb
das
adc
aaa
lcall
gs
daa
pusha
sahf
fsub
orl
js
inc
sti
fst
mov
sti
enter
daa
adc
hlt
adcl
test
out
movsb
add
adc
mov
lret
loope
xchg
push
add
dec
xor
pop
push
cmc
enter
push
push
orb
push
add
push
pop
mov
xchg
data16
mov
or
test
xor
fwait
scas
pusha
shrl
in
fldcw
divl
nop
dec
fwait
sub
sbb
jne
mov
jb
daa
enter
add
into
push
test
cmp
andb
dec
lcall
push
sarb
outsb
mov
xchg
int
addr16
xchg
clc
inc
daa
clc
sbb
mov
add
insl
xchg
cmpsl
mov
movsb
cltd
xchg
mov
jecxz
mov
cmp
mov
test
aas
push
sbb
stos
dec
inc
inc
ljmp
hlt
outsb
mov
lret
mov
dec
push
inc
aad
scas
jmp
movsb
lea
rolb
jns
cwtl
fildll
push
test
mov
pop
lods
xorb
cwtl
jmp
push
xchg
push
and
cmp
clc
pop
lods
cmpb
cmp
mov
jge
int3
aad
bound
shll
test
std
jecxz
scas
or
test
and
push
iret
fs
in
and
xchg
inc
sbb
sub
repz
scas
cmp
jmp
out
sarb
fcoms
push
xor
loopne
fdivl
cs
lea
pop
xchg
jb
sahf
movb
xor
mov
push
int3
push
fcomi
dec
popa
dec
dec
bound
pop
pop
pop
fisttpll
call
dec
gs
in
negb
fdivp
fs
insl
pusha
ds
lods
insl
shrb
xchg
inc
xlat
xchg
pushl
inc
incb
in
loop
ds
inc
mov
jnp
dec
sub
sub
pop
xchg
repnz
add
mov
rcl
cmp
pop
pop
jmp
fwait
push
imul
pop
pop
and
pop
dec
xchg
jbe
mov
sbb
test
cmp
push
vmwrite
mov
sahf
or
int
mov
dec
outsl
ret
adc
test
and
dec
outsb
call
push
and
ret
sub
int3
jb
popa
in
arpl
int3
xor
mov
mov
rcl
loopne
xchg
ss
popa
popa
fsubrs
sub
lret
jo
jle
mov
push
iret
mov
xchg
imul
inc
and
sbb
mov
xchg
cmc
imul
fwait
ja
ficoms
stos
fisttpl
mov
cwtl
cmp
mov
mov
mov
in
jmp
lcall
movsl
mov
mov
dec
repz
lret
cs
sub
pop
int3
xlat
inc
push
scas
dec
pop
das
mov
shlb
xchg
cltd
cmc
cmpl
sub
stos
repnz
movups
enter
inc
stos
enter
xchg
frndint
lods
testb
push
movsl
mov
xor
sub
call
adc
wrmsr
add
and
xchg
arpl
xor
mov
out
mov
cmpsb
pop
mov
sub
or
inc
push
into
push
cwtl
xchg
ja
ljmp
es
pop
bound
add
mov
ss
cmpsb
add
inc
jl
xchg
sbb
cmp
mov
xchg
arpl
mov
ljmp
cmp
or
mov
xchg
imul
arpl
out
call
dec
loopne
add
sbb
rcrb
mov
pop
movsb
ss
cmp
out
pop
pop
jmp
mov
pusha
dec
shlb
lcall
pop
clc
test
cltd
add
xor
xorb
int3
push
add
push
sbb
cltd
mov
jae
add
outsl
repz
sbb
pop
push
sbb
jns
xlat
jb
pop
pop
mov
lock
cmp
mov
and
xor
mov
stos
fcoms
cmpsl
out
add
loopne
cmpsl
je
add
fwait
push
pop
stos
mov
jns
and
sbb
mov
adc
addb
add
cmp
pop
or
push
push
add
push
xchg
int3
daa
mov
push
out
das
aas
dec
in
add
shrl
pop
or
pop
outsb
cmp
imul
out
lea
mov
insb
sbb
adc
outsb
push
dec
and
ds
inc
dec
mov
fstpl
push
pop
out
add
dec
mov
test
mov
int
nop
in
or
xchg
scas
or
loope
imul
cmp
push
orb
xlat
imul
fcoms
dec
or
or
movsl
and
test
leave
iret
mov
xchg
adc
arpl
dec
jge
or
xor
dec
mov
xlat
mov
push
mov
mov
add
pop
cmp
jl
outsb
mov
out
xchg
mov
test
add
mov
rorl
pop
xchg
aad
lcall
or
mov
xchg
and
and
mov
adc
sbb
popa
jg
pop
out
dec
or
es
mov
insl
icebp
add
xlat
xchg
mov
pop
or
mov
adc
stos
mov
nop
aad
repz
in
inc
or
push
push
fistpl
cmp
or
push
jp
dec
jbe
insl
lea
push
cld
mov
test
mov
int3
jg
dec
es
es
mov
enter
stos
aaa
mov
aad
push
sbb
mov
jb
repnz
cmpsb
sarb
lds
push
adc
movsl
jl
or
pop
add
mov
fs
inc
xchg
pop
or
in
inc
ja
push
daa
xchg
xor
or
frstor
test
xchg
xor
loopne
push
mov
int
lock
or
xor
or
stc
js,pt
test
inc
xor
jp
xor
ljmpw
xchg
push
push
mov
daa
ficomps
xlat
mov
insb
imul
push
cltd
cmpsb
pop
pusha
jb
mov
xor
aam
xchg
rclb
fcmovne
cmp
int3
jmp
pop
lds
mov
dec
cli
pop
fwait
inc
push
je
mov
jb
sbb
lods
pop
dec
mov
mov
sub
jnp
in
sarb
dec
test
out
jl
imul
iret
adc
mov
xchg
and
bound
fsubrl
and
fstps
dec
testb
stos
or
lret
push
aaa
test
jb
clc
pushf
jg
loop
movsb
dec
fwait
aas
fstpt
add
lcall
ficoml
int3
inc
insl
out
mov
mov
insb
arpl
out
pop
in
cmp
lret
insb
mov
roll
push
lods
mov
inc
std
aam
push
stos
or
sbb
mov
dec
add
sahf
cli
adc
mov
xchg
arpl
scas
dec
xchg
wrmsr
sbb
mov
push
movsb
pop
jns
aam
cmp
sub
mov
cmp
fmul
jg
scas
dec
jne
rcr
dec
dec
cmp
test
sarl
in
aaa
push
mov
dec
push
aad
outsb
dec
add
sub
gs
stos
cwtl
mov
in
xchg
adc
sbb
fs
xor
scas
sub
mov
loop
outsb
shlb
je
aam
xor
testb
lods
jp
jg
das
mov
mov
js
adc
test
cwtl
push
push
rclb
add
adc
lea
sti
mul
repz
pop
rcll
and
test
dec
out
add
stc
fs
xchg
cmp
pushf
sahf
xor
jno
ret
imul
mov
mov
push
add
das
or
in
dec
jb
pop
add
dec
ficoml
cmp
mov
int3
jb
fsubs
add
rcr
mov
xor
push
mov
imul
sbb
jb
and
push
jge
stos
sub
call
xchg
pop
push
fs
jmp
sub
sub
shr
lea
stc
hlt
popa
lahf
roll
fucomp
nop
inc
lret
stos
test
das
nop
inc
add
shrb
cltd
cmp
movsl
addr16
bound
insl
aam
mov
push
lcall
test
or
pop
lea
and
sbb
lcall
add
aam
cwtl
push
test
aam
mov
cmp
rorb
jbe
mov
rcrb
dec
mov
pop
jns
add
or
pop
xchg
xor
and
inc
pusha
ret
sti
and
bound
xchg
outsl
jg
shl
aaa
popf
lahf
mov
fsubrl
shrb
sub
fwait
jo
or
lret
push
in
push
mov
cmp
inc
testl
xor
sbb
repz
mov
cmpsl
mov
cmp
out
out
and
xchg
sbb
sbb
push
dec
mull
das
mov
scas
cld
dec
imul
movsb
mov
jns
and
dec
out
shll
scas
jmp
add
cltd
xchg
mov
pop
data16
push
rcrl
les
outsb
xchg
sub
mov
jp
jp
out
iret
xchg
mov
scas
outsl
and
push
sbb
jecxz
inc
sub
push
pop
mov
cmp
sub
xchg
lcall
lret
lahf
ret
test
push
cld
xchg
pop
int
int
and
insb
retw
jecxz
mov
loope
xlat
pop
out
push
pop
mov
mov
nop
stc
sub
pop
icebp
sub
bswap
gs
mov
idivl
mov
inc
in
mov
sbb
jae
les
cld
call
jecxz
insl
sub
sbb
ret
jp
rorb
aam
jbe
into
call
or
add
mov
mov
or
in
sbb
fsubrl
add
mov
out
xor
mov
lods
jecxz
cld
xchg
adc
int3
mov
inc
dec
mov
or
add
xchg
in
xchg
and
movsl
jns
push
and
push
in
cmpsl
xchg
gs
jge
and
jno,pt
push
xor
jbe
mov
jmp
adc
loope
mov
in
cld
popa
inc
mov
jle
pop
xchg
jle
mov
nop
out
loopne
aam
loope
jge
jbe
imulb
mov
js
cmp
into
sti
xchg
push
fadd
pop
ss
inc
ja
lret
aad
lcall
outsl
dec
xor
and
repz
jp
pop
rcrb
mov
add
inc
stc
fs
roll
sbb
mov
fwait
sbb
hlt
movsl
jae
sub
add
in
das
push
jnp
pusha
sahf
ja
fcoms
jnp
adc
outsl
insb
out
stos
das
scas
pop
xor
xlat
mov
pop
or
dec
lock
je
dec
addr16
js
inc
clc
negb
and
add
arpl
int
sbb
xlat
shlb
ljmp
sub
or
xchg
sbb
xchg
dec
xor
cmpsb
lret
lds
sbb
push
dec
pop
outsl
sarb
into
xchg
sub
jmp
mov
pop
mov
dec
add
test
ss
rolb
push
xor
fidivrs
loop
sub
ret
loope
mov
jne
out
xchg
lea
lods
in
cmp
cmp
or
sbb
lock
mov
call
stc
sub
js
mov
pop
daa
fisttpl
pop
sbb
inc
lods
or
sub
lahf
std
xor
jl
outsl
mov
mov
jns
mov
imul
add
dec
adc
cmp
and
hlt
push
mov
add
aaa
pcmpgtb
fildl
ret
sub
test
mov
decl
xor
add
jmp
leave
xor
into
repz
fisttpl
enter
in
xor
or
xchg
inc
subb
or
lock
mov
dec
jns
pop
loopne
clc
add
fs
test
sub
mov
ds
mov
inc
pop
ret
adc
in
rorb
xlat
xor
insl
les
lods
mov
jp
sub
outsb
sub
or
outsl
bound
les
fadds
test
mov
add
inc
enter
add
aaa
test
sub
xorb
sub
aaa
mov
fs
pop
dec
cmc
mull
dec
mov
pop
inc
aaa
fistpll
cli
cld
xor
mov
jl
and
pop
inc
movsl
je
scas
int3
das
inc
data16
or
loope
cwtl
mov
cwtl
inc
popa
mov
jmp
ss
test
testl
scas
or
imull
inc
enter
mov
add
pop
inc
jae
pop
pop
out
mov
mov
mov
or
and
lret
mov
jp
sbb
cmp
pop
sub
ljmp
pop
negb
mov
pop
leave
sub
les
stos
cmp
jb
xchg
push
pop
sti
and
fdivs
es
lret
or
jge
clc
jo
dec
dec
ja
int3
movsl
cmp
mov
push
pop
cmp
mov
hlt
xchg
push
int3
add
fnsave
outsl
test
fstl
shl
pop
xchg
cmp
push
mov
adc
xchg
pusha
mov
inc
icebp
movsl
mov
mov
xor
sub
fildll
pop
fs
mov
push
mov
pop
rep
mov
jmp
adc
push
mov
add
mov
repz
sar
data16
sbb
call
out
arpl
int
add
pop
insl
test
pop
int3
inc
lcall
sbb
dec
sti
aas
jp
inc
fsubs
aad
mov
insb
and
iret
data16
out
mov
jle
jl
jne
stos
pop
xor
push
std
mov
cli
inc
mov
jns
cwtl
pop
jnp
push
xchg
inc
test
ret
cli
ja
fists
push
fwait
int3
fwait
ds
pop
inc
stos
mov
into
adc
ja
popf
popa
mov
test
popf
es
test
cmovb
add
shll
xchg
xchg
cmc
movsb
push
mov
mov
xchg
inc
push
xchg
cmp
sbb
ja
stos
mov
xor
sahf
outsb
in
sub
sar
sub
cmp
ret
call
icebp
mov
adc
in
in
pop
movsb
cmpsb
push
shll
dec
adc
mov
push
jbe
sbb
mov
pop
fwait
in
movsb
mov
push
xchg
ret
js
lods
lahf
push
mov
bound
push
xchg
adc
xchg
int
pop
je
cmpl
cmpsb
ljmp
ds
cmp
arpl
push
test
mov
arpl
mov
movsl
rcl
cwtl
inc
pop
out
dec
cmp
sub
pop
data16
rclb
mov
lods
jb
jne
add
push
sbb
fwait
dec
push
lods
fstl
fs
mov
mov
sahf
jo
cmp
enter
int3
imul
ja
test
mov
mov
cmp
std
into
fidivrl
add
mov
jo
xchg
pop
sub
hlt
inc
or
movsl
jmp
in
mov
pop
push
jns
ds
inc
add
inc
add
lret
mov
add
and
cld
mov
xor
pusha
sbb
popa
push
out
ljmp
pop
jns
ljmp
dec
clc
out
les
push
mov
in
cld
lock
fisttpl
in
loopne
xlat
mov
jl
lret
iret
inc
jns
shl
iret
out
nop
push
pop
pop
push
adc
mov
ds
mov
jb
fildl
push
sbb
test
loope
fbstp
pusha
mov
pop
aad
jns
lds
cwtl
dec
jo
imul
pop
pop
mov
pop
push
xchg
fldcw
outsb
sarl
leave
roll
push
sahf
add
dec
jmp
jns
test
insl
mov
dec
dec
enter
mov
cmp
sub
mov
mov
fidivrs
xchg
pop
pop
pusha
bound
dec
inc
subb
std
jge
jle
add
sti
cli
jmp
mov
and
and
inc
push
xlat
aas
push
sbb
cmp
enter
mov
fwait
movsb
fildll
push
add
add
outsl
outsb
jg
inc
fucomp
into
es
pop
or
ss
out
or
cmp
jle
fildl
test
lret
push
ror
mov
leave
jbe
dec
pop
leave
add
xchg
pop
dec
xor
and
mov
mov
xor
jge
fisubrs
in
cld
xor
scas
in
sahf
xor
out
mov
out
daa
fsubl
imul
cmp
xchg
mov
push
mov
sub
in
sub
and
cld
add
mov
mov
aad
dec
frstor
in
dec
loop
mov
insl
cmp
test
and
shll
cmp
cwtl
addl
xchg
pop
pusha
jns
ljmp
mov
or
aad
ljmpw
push
popf
add
mov
out
mov
roll
add
push
sahf
arpl
or
mov
sub
push
or
hlt
pop
pop
pushf
aaa
cmpsl
mov
add
ds
jecxz
add
dec
sbb
in
mov
popa
loopne
pop
imul
pop
dec
xor
lret
lret
sbb
ja
or
sbb
mov
out
jmp
adc
lret
or
fldl
lret
lcall
sbb
and
mov
xchg
in
mov
or
int
fwait
xor
inc
scas
add
imul
int
lock
sub
pop
outsl
push
mov
scas
aam
outsb
sbb
mov
je
push
xchg
ds
sti
xor
xor
test
or
push
or
push
int3
in
pop
fdivl
dec
mov
push
bound
in
imul
leave
ds
loop
lock
hlt
push
mov
in
pop
pop
sarl
adc
rol
sbb
fbstp
lcall
xor
imul
sbb
xchg
movsb
push
call
int3
shll
cwtl
testb
divb
mov
xlat
dec
icebp
mov
jle
xchg
repnz
icebp
leave
xchg
lret
cs
sahf
xchg
xchg
fisubrl
adc
cltd
inc
leave
xor
lods
mov
stc
nop
add
pop
xchg
lret
pop
stos
aaa
ds
or
cmp
cmp
cmp
cmp
test
mov
push
enter
icebp
xchg
mov
rolb
push
out
test
jbe
or
add
imul
lock
cmp
popa
pop
cmpsb
bnd
call
mov
xchg
inc
jne
lods
and
mov
ljmp
push
out
lcall
jge
inc
mov
adc
and
out
int
jne
mov
inc
mov
mov
dec
push
aas
imul
shl
leave
jge
pop
push
shll
xor
fs
fidivrl
inc
cmp
sub
xor
and
out
daa
data16
mov
rclb
or
mov
push
jbe
div
inc
sbb
outsb
inc
mov
lea
faddl
pusha
mov
lods
mov
mov
rcrb
jmp
xor
pop
dec
xor
pop
dec
enter
out
imul
jg
sub
add
jns
into
into
aam
jns
dec
dec
shrl
dec
stos
xchg
dec
mov
and
push
inc
mov
add
aad
mov
negl
nop
cmp
or
pusha
int3
push
pop
pop
cltd
xchg
ret
inc
mov
lea
push
or
fisttps
subl
inc
out
lock
inc
pop
push
mov
lods
pop
lret
aaa
cmpsb
cmpsl
cmc
nop
orb
lret
out
int
mov
mov
dec
stos
mov
aas
jge
fdivl
xchg
lret
frstor
pop
arpl
dec
out
jno
pop
fldl
mov
mov
mov
xor
inc
inc
dec
dec
es
xchg
inc
repnz
mov
mov
mov
pop
popa
addb
mov
xor
add
sahf
jne
fimuls
mov
enter
sbb
test
jmp
xor
sti
jae
std
xchg
out
mov
mov
pop
push
or
mov
in
stos
sbb
iret
call
mov
jge
out
mov
test
adc
add
fsts
xchg
pop
stos
xchg
insb
enter
fmull
jb
jno
ret
ss
nop
dec
leave
jo
mov
xor
imul
bound
push
jne
pop
jae
fldcw
xor
loop
cwtl
and
outsb
lds
mov
sub
rclb
adc
push
xlat
in
sub
repnz
lods
dec
je
sub
sarb
cmc
stos
inc
addl
jmp
xchg
add
pop
cmp
fwait
dec
into
jo
adc
je
test
pop
stos
imull
push
jb
xchg
jle
mov
mov
gs
push
jp
cltd
aas
xorl
cmp
cltd
shll
mov
xor
leave
dec
dec
filds
cmpsl
faddl
push
into
dec
sub
or
mov
adc
pop
sub
xchg
and
dec
das
test
add
cld
pop
push
jae
into
cmp
hlt
and
shrb
adcb
cmp
mov
int
jp
fists
cmp
jl
or
jo
out
dec
add
dec
sub
mov
push
mov
addr16
subl
xchg
jae
mov
pop
cmp
adc
cmp
mov
jmp
pop
inc
sub
out
push
lret
shl
mov
cmp
movsb
leave
fisubrs
pop
outsl
fisttpl
pop
and
imul
dec
dec
aam
pop
inc
cs
push
and
fisubrl
lods
mov
lds
lds
adc
data16
insb
lods
push
hlt
xchg
fmul
mov
push
sbb
mov
cltd
insb
push
mov
fwait
orb
xchg
jnp
das
cmp
hlt
fwait
pop
mov
clc
mov
repnz
inc
jg
sarl
mov
repnz
adc
rorl
inc
pop
inc
leave
xor
lahf
into
das
lds
pusha
mov
lcall
sbb
mov
jl
in
add
push
outsl
xorl
in
jno
aaa
lods
aas
repnz
push
sbb
add
movsl
xchg
and
mov
std
sbb
call
push
xlat
sbb
xchg
addl
fwait
pop
inc
sti
cmp
and
sub
aaa
sbb
push
xchg
mov
mov
mov
pop
lock
into
push
sahf
push
mov
mul
jbe
and
xchg
xor
mov
movsb
and
and
and
cli
loop
and
arpl
iret
test
jle
aad
push
inc
push
pop
int
fidivs
das
jp
inc
dec
xor
mov
cwtl
je
aam
es
xchg
mov
pop
fwait
pusha
out
jo
into
add
add
mov
fildl
cmp
lock
popf
mov
dec
fidivs
dec
insb
mov
jg
inc
jno
pop
jge
xor
jno
mov
dec
push
insl
sub
es
inc
fstl
push
lcall
imul
adc
scas
ja
leave
loop
pop
jmp
fildl
mov
in
add
sub
add
or
stos
jno
stos
pop
test
jno
jnp
xor
cli
test
jmp
repnz
adc
mov
push
and
adc
sbbb
push
pop
push
lea
scas
fildl
fldcw
jo
cmpb
pushf
dec
push
insl
call
mov
gs
lcall
sbb
int
mov
daa
or
int
nop
jno
mov
and
rorl
shll
decl
adc
fs
mov
es
imul
jge
cmp
cmp
mov
nop
das
sarb
cmp
push
data16
cwtl
add
adc
mov
pop
cmp
cmp
xor
add
push
mov
xchg
imul
pusha
js
ja
push
cmp
xchg
mov
jmp
add
stos
push
and
fnsave
popf
stc
xchg
scas
aas
mov
add
imul
pop
jg
enter
pushf
sbb
cmpsb
mov
daa
je
dec
push
decb
mov
dec
and
dec
sub
cmc
adc
push
sub
cmpsl
movsb
jl
xchg
pop
inc
jg
lret
cmp
popa
shll
adc
push
cmp
test
mov
pop
call
dec
cltd
mov
xchg
aam
jnp
lret
int3
xor
scas
and
sub
sbb
sub
adc
jl
dec
adc
xor
in
mull
pushf
pop
fs
in
xchg
inc
and
sub
pop
sub
mov
xchg
mov
les
sahf
cmc
test
jecxz
adc
sbb
push
cwtl
cmpsl
mov
ja
std
in
lret
push
shll
lock
sbb
pushf
push
xor
loopne
cmp
ljmp
sub
jg
lcall
fstps
add
add
aad
pusha
pop
movsb
xchg
xchg
loopne
jp
mov
cli
mov
fstpl
cmp
insl
rcl
call
fisttps
and
xor
mov
or
repz
les
sbb
iret
push
pushf
push
sarl
mov
icebp
fsincos
imul
out
or
pop
std
loopne
les
rorb
mov
fwait
sub
add
mov
in
cmp
shrb
nop
jle
add
lods
inc
imul
adc
cmp
adc
stos
fbstp
testb
idivb
cmp
sbb
xchg
sti
sub
adc
mov
sub
call
cmp
inc
xchg
jns
sbb
imul
std
pop
mov
pop
fidivs
jp
fisubs
dec
sub
push
icebp
cs
cli
ss
cmp
mov
sub
xor
adc
ja
push
xor
int
les
mov
pop
adc
dec
cmpsl
dec
jnp
jnp
xor
outsl
es
mov
sub
fimuls
or
out
add
pop
je
ret
loop
mov
jno
nop
push
inc
enter
sbb
or
cwtl
pop
into
and
aam
cltd
inc
movsl
cmp
scas
mov
rol
and
and
adc
cmp
or
les
mov
pop
xchg
popa
xchg
inc
cmpsl
rcrl
insb
add
cmp
aam
pop
jl
test
pop
mov
mov
dec
fnsave
mov
xchg
xorl
xchg
stc
xchg
sub
pop
pop
cmpsb
adc
fs
inc
daa
mov
daa
pop
sub
pusha
or
inc
mov
mov
jmp
dec
or
outsl
or
push
sub
sbb
sub
pop
pop
or
lret
iret
fildll
mov
add
pop
cmp
xor
inc
mov
incl
lods
movsl
adc
enter
adc
push
adc
inc
mov
dec
and
sahf
mov
dec
push
jnp
jl
pop
cmp
movsb
jp
lock
int3
and
lahf
movsl
push
adc
in
jge
xchg
mov
adc
out
push
xor
inc
fisubrl
std
sub
and
push
cmpsl
sub
test
and
xchg
test
or
clc
add
push
pop
pop
mov
sub
das
insb
fildl
sbb
rcrl
mov
jbe
test
and
lahf
inc
mov
das
mov
push
rclb
and
push
xor
sbb
mov
sub
dec
imul
js
test
das
repz
jnp
push
in
imul
mov
scas
xlat
ja
repz
cmp
xor
push
and
mov
pushf
data16
inc
sbb
repz
and
fdivs
negl
xchg
clc
dec
inc
inc
or
lahf
insb
in
outsl
flds
xchg
add
sbb
ret
and
xchg
cmp
lods
xlat
sbb
xor
insb
arpl
imul
std
adc
add
sub
testl
out
sub
lret
lock
dec
cmp
pop
adc
fwait
cmp
andl
sbb
mov
xor
lcall
or
inc
pop
dec
and
out
cli
aam
jle
mov
out
bound
dec
push
sub
xor
jbe
inc
xchg
movsl
ficompl
out
adc
scas
mov
arpl
mov
addr16
ljmp
popf
sub
mov
xor
inc
insl
jp
rorl
inc
repnz
dec
xchg
mov
and
push
xor
xor
loope
xlat
adc
stc
push
pop
xor
push
sbb
mov
add
ja
das
push
add
cmpb
sbb
lock
mov
inc
fisubl
je
cld
iret
jecxz
out
pop
mov
mov
cld
xchg
pop
enter
pop
mov
push
sub
in
enter
xchg
sarl
inc
add
jle
pop
dec
sub
mov
ljmp
fcmovnbe
loope
and
and
mov
faddl
aas
leave
insl
pop
mov
xlat
mov
cmp
inc
cmp
or
cltd
xchg
aaa
xchg
xor
cmp
mov
repz
jl
jae
mov
inc
fcmovnbe
das
push
cltd
rdtsc
iret
jne
imul
cmc
xchg
test
mov
pcmpgtb
sub
mov
lds
cmp
stc
push
gs
aad
fistpl
adc
das
inc
jp
outsb
outsb
inc
jo
es
and
mov
fcomps
or
sbbl
dec
jge
sub
inc
out
dec
shll
xor
testb
sbb
jg
rclb
leave
add
mov
pop
hlt
mov
outsb
fstps
stc
mov
push
imul
int3
pop
addr16
xchg
or
add
cli
or
jmp
cld
adc
mov
fnstsw
inc
xchg
icebp
and
and
xchg
mov
sub
rorl
cmpb
fisttps
aam
mov
fcoms
mov
xor
bound
stos
stos
stos
push
mov
test
imul
mov
mov
out
scas
popf
shl
xchg
cmp
popa
testl
decl
sbb
lds
inc
inc
xor
pop
and
or
or
shll
out
pop
mov
fldcw
test
dec
loope
mov
add
ja
xchg
aam
push
rolb
mov
inc
jo
inc
mov
fdivrs
movsb
xlat
mov
rcrb
pop
popf
pop
and
fisubrs
adc
cmp
mov
mov
cmp
fsubrl
sbb
jne
addr16
rcrb
bound
in
sub
insw
push
jae
adc
nop
enter
int3
aam
imul
aas
xor
mov
data16
or
inc
shrb
push
mov
mov
cwtl
xchg
repz
push
xchg
imul
dec
movsb
add
cs
sbb
test
cmp
out
lcall
sar
jne
pop
int
pop
js
inc
cs
add
aas
fistps
imul
out
aas
add
std
add
cmpsl
loope
sar
push
rclb
divb
nop
int3
enter
fstp
lret
repnz
dec
in
mov
push
inc
ljmp
dec
shrl
in
cld
xlat
push
or
mov
adc
sub
insb
pop
lods
cmc
in
out
divb
outsb
jbe
fwait
adc
xchg
int3
add
mov
call
mov
cmp
inc
jns
mov
mov
shrl
fs
leave
loope
clc
push
dec
sub
in
dec
push
ljmp
pop
xchg
sbb
mov
or
mov
push
out
mov
dec
ljmp
inc
adc
int
cmp
xchg
ja
jecxz
add
es
adc
mov
fisubrs
jnp
test
mov
popa
pop
fsubl
fwait
adc
out
test
jo
xlat
fdivl
shl
jle,pt
mov
or
fs
xchg
jne
dec
int
pop
inc
and
enter
std
dec
mov
add
int
in
rorb
mov
js
xchg
dec
shll
adc
push
dec
scas
mov
decl
or
mov
iret
rorb
cmp
dec
jo
cwtl
repnz
mov
cmc
mov
iret
mov
neg
lahf
or
lds
insl
dec
mov
int
push
enter
pop
xlat
andb
mov
inc
cs
repz
xor
ds
jmp
repnz
aad
push
test
pushf
cld
sub
pop
shll
fdivs
push
out
push
push
repz
lds
pop
arpl
fucomp
xchg
sahf
adc
stc
loope
sub
adc
mov
jb
aam
enter
pushf
insl
in
xor
mov
cmp
repz
leave
loopne
mov
icebp
xchg
mov
inc
dec
arpl
icebp
xchg
stos
mov
sbb
sub
adc
sarb
es
xor
sti
das
test
jl
cmp
in
dec
mov
inc
aas
cmovae
xchg
lods
in
std
aam
sub
lock
adc
test
adc
jbe
push
rcll
rcl
call
icebp
outsb
mov
call
imul
mov
repnz
out
xlat
and
mov
lock
data16
inc
sub
lea
dec
bound
mov
sbb
sbb
sti
sbb
mov
sbb
inc
icebp
repnz
sub
pusha
sub
fs
orb
data16
xor
je
aas
pop
sub
int3
xlat
dec
fdivs
and
jnp
leave
int
mov
adc
push
dec
test
imul
imul
inc
jp
jns
xchg
fwait
in
pop
mov
cmp
repnz
pushf
mov
push
jnp
xchg
mov
and
jecxz
fdivl
mov
fucomi
scas
mov
xchg
adc
jo
or
mul
xorb
ljmp
clc
push
mov
cmp
cmp
pop
loop
fwait
test
push
inc
adc
mov
mov
enter
push
cmpl
mov
push
mov
mov
jno
inc
cmc
dec
and
dec
mov
mov
mov
jne
in
xchg
ficoml
stc
pop
mov
dec
aaa
insl
sbb
xchg
or
int3
ret
fs
jecxz
les
dec
movsb
jns
push
mov
jnp
push
xor
push
test
lea
jno
mov
in
mov
mov
test
mov
cmpsl
lods
jle
test
cmp
pop
movsb
stos
xchg
or
sbbb
add
aaa
pop
ficomps
mov
lea
jne
pop
cmp
orps
imul
pusha
mov
rcl
xor
std
imul
push
jb
add
sbb
lods
or
mov
stos
test
adc
push
dec
inc
and
xor
aaa
pop
daa
push
xor
bound
leave
lock
inc
jge
push
sbb
test
xchg
ficomps
mov
addr16
lds
inc
jo
pop
pusha
aaa
mov
int3
popf
ret
push
inc
sbb
out
jo
add
cmp
test
gs
icebp
xor
jge
xor
icebp
mov
fnstsw
cmp
push
adc
xor
shl
dec
mov
cld
inc
sbb
into
imulb
lcall
stc
ja
jmp
imul
iret
inc
les
ss
fnstsw
fdivl
fcmovnb
enter
cld
pop
notl
push
cmc
dec
sarb
pop
fcoms
js
mov
and
sbb
adc
jb
fidivs
int3
cld
jmp
xor
dec
pop
xchg
out
jg
mov
in
enter
mov
clc
cmc
pop
or
cmpsb
imul
inc
stc
push
in
dec
mov
out
push
cmc
jae
jl
test
lods
xchg
adc
in
mov
xor
test
cmpsl
icebp
imul
dec
xor
add
enter
mov
dec
scas
mov
pop
pop
mov
fadds
adc
cmp
xor
fstps
inc
mov
ret
jo
cltd
int3
aas
mov
fs
negl
in
dec
sub
mov
in
jp
ds
push
or
loope
cs
mov
sub
cmp
sub
stc
sarb
and
sahf
mov
or
xor
inc
mov
aam
lea
dec
inc
test
mov
dec
dec
mulb
mov
sahf
and
pusha
cmpsl
inc
pop
push
test
sbb
dec
xor
jbe
cmc
xchg
pusha
xchg
cli
fists
imul
add
cmp
jge
inc
cmc
mov
add
and
ljmp
js
add
gs
stos
push
sub
push
sbb
push
sub
mov
jp
lea
pop
sub
roll
adc
aas
rorb
or
insb
xor
xor
in
movsl
mov
pop
stos
lds
mov
call
out
sbb
cmc
nop
movsb
sbb
out
rol
dec
sub
pop
aaa
cld
mov
push
jns
jo
negl
push
out
sbb
cmc
push
cli
repz
mov
ljmp
inc
ss
imul
jb
lahf
dec
inc
pop
mov
lds
jg
adc
xor
adc
pop
filds
xor
and
mov
adc
and
and
push
jbe
and
xchg
insl
push
jle
inc
pop
imul
imul
mov
adc
fisttps
ja
jns
out
cs
enter
out
stos
push
sub
push
mov
inc
mov
sub
popf
aam
mov
lods
sub
stos
shl
loope
mov
xor
fs
pop
sub
add
popa
movsl
and
pop
sti
cmp
aam
jno
cltd
jo
inc
mov
ds
jge
pop
test
mov
mov
xchg
lods
dec
das
or
sbb
push
mov
loop
xor
les
mov
add
in
jns
test
or
std
lcall
aas
push
loopne
std
sub
ja
and
mov
pop
call
and
dec
pop
add
lods
lahf
sbb
jl
scas
in
or
cmp
jp
lds
pop
push
jae
or
xchg
repz
cmp
orl
cmpsl
out
and
mov
or
jbe
jbe
cmp
mov
outsl
fadds
repz
adc
fcmovbe
repz
cmp
sub
and
mov
insl
cltd
mov
js
movsb
je
pop
je
mov
add
jno
repnz
mov
sub
enter
mov
negb
jne
mov
stc
mov
mov
cmpsl
and
xchg
lret
adc
sti
aaa
gs
jo
outsb
mov
int3
das
mov
jmp
mov
or
sub
fisubs
mov
push
dec
out
lods
pop
cmp
mov
lret
loope
icebp
mov
ljmp
xor
repnz
cmp
jp
filds
jnp
andl
icebp
cmp
sub
repz
out
adc
inc
push
out
xchg
ret
jecxz
fnstcw
mov
test
cmpsl
push
mov
jb
inc
pop
sti
xchg
cmp
jns
ja
sub
mov
sti
push
cmp
mov
jmp
shll
sub
xchg
inc
loope
daa
sbb
arpl
push
pop
pop
xchg
inc
sbb
nop
sbb
es
nop
push
sahf
mul
int
xor
cltd
mov
daa
xor
xor
jle
addr16
sbb
fisttpl
push
xor
rcll
pusha
and
jmp
mov
popa
pop
arpl
add
inc
gs
bound
jno
repz
das
insl
sub
cmc
aam
repz
in
out
jge
pop
mov
cld
xlat
xor
ja
sub
dec
in
and
pop
jle
or
mov
icebp
mov
pop
icebp
inc
fbstp
bound
mov
jae
jg
pushf
and
test
or
sub
fisubl
mov
add
jecxz
mov
inc
adc
cmc
mov
or
in
bnd
push
mov
adc
add
inc
scas
loopne
lds
cs
popa
jecxz
add
fdivl
jl
jnp
pushf
sbb
inc
shll
aaa
scas
repz
int3
out
jg
xchg
and
ret
cmpsb
inc
mov
rcrl
mov
cmp
jae
inc
pop
xorl
dec
lods
cmp
sub
aaa
xor
lods
pop
add
mov
repz
cmp
xor
aaa
jmp
xchg
fwait
adc
inc
sub
pop
xchg
cwtl
les
or
sbb
arpl
push
clc
adc
mov
push
out
loopne
jle
xchg
loope
bnd
lahf
mov
fwait
jno
jb
xchg
frstpm(287
mov
push
cli
adc
sbb
pop
push
push
mov
pop
and
add
pushw
cmpsl
mov
pmullw
mov
push
jnp
es
ret
mov
inc
jns
fldcw
test
pushf
pop
mov
lock
inc
stos
pop
test
adc
xchg
pop
add
out
xor
test
jecxz
in
scas
xchg
adc
out
cmp
add
push
stos
sti
pop
jb
sub
pop
iret
pop
jle
stos
icebp
ret
dec
les
xchg
push
shrl
or
std
jmp
and
or
fildl
dec
mov
mov
inc
push
out
mov
addr16
call
add
aad
inc
or
dec
fsubr
inc
and
addl
mov
sbb
and
hlt
sbb
int3
or
mov
xchg
mov
pop
adc
add
sarb
call
fdivs
adc
les
into
stos
ja
adc
mov
mov
jo
mov
mov
movb
mov
out
pop
mov
cltd
mov
icebp
and
cmp
xlat
jne
lret
dec
out
insl
pop
daa
icebp
and
inc
test
mov
adc
xchg
loopne
bound
aas
loop
in
mov
movsb
adc
dec
jnp
mov
shlb
xor
outsl
mov
fldenv
mov
call
xchg
mov
lret
sbb
mov
sub
mov
incl
in
fwait
leave
push
ss
les
cli
xlat
cmp
cld
or
test
mov
icebp
lcall
out
mov
dec
out
incb
fisubrs
and
and
fs
aas
bound
xlat
sbb
scas
repnz
ret
sarb
test
mov
xchg
add
or
rclb
mov
sti
ja
outsl
mov
mov
jno
testl
bswap
pusha
rorb
mov
clc
inc
fldl
lds
addl
ror
jae
les
push
fbstp
mov
sub
lock
sarb
jnp
nop
xchg
sbb
inc
ds
sub
imul
and
jmp
or
je
cmpsb
out
out
jecxz
insl
ret
mov
inc
pextrw
mov
push
cltd
push
sbb
or
mov
ljmp
push
jne
xchg
adc
xor
pop
xchg
popf
jp
sbb
adc
das
and
jo
aaa
mov
bound
gs
js
lock
xchg
inc
mov
clc
mov
or
or
mov
repnz
cmp
mov
aam
xor
insb
mov
hlt
mov
stos
mov
xchg
ret
imul
repz
mov
es
lock
mov
orb
pop
lret
sbb
fidivrl
outsb
aas
xor
icebp
daa
jne
xor
or
outsb
cld
mov
clc
repz
arpl
jbe
insb
pusha
sbb
push
hlt
add
ret
mov
mov
push
dec
push
or
mov
pop
mov
push
sub
push
and
jge
or
adc
add
jo
scas
das
sbb
les
loop
mov
push
stos
fimull
insb
adcl
mov
mov
sbb
sbb
decl
inc
cld
xor
xchg
add
std
cmp
lahf
lds
dec
cmpsl
mov
push
das
faddl
sbb
jo
ja
jle
xor
pop
lahf
lcall
xor
mov
mov
jp
xchg
mov
sahf
xor
and
adc
pop
dec
icebp
pop
push
int3
fdivl
shl
sbb
mov
pop
jnp
lahf
sbb
xor
cmpsl
push
pop
mov
popa
scas
ret
rcrb
xor
scas
gs
sub
fsubl
push
pop
mov
pop
dec
arpl
daa
and
outsb
pop
mov
mov
adc
cmp
std
mov
cmp
arpl
leave
xchg
outsb
adc
shr
mov
or
or
int
clc
fistps
xorb
xchg
mov
fmulp
stc
jo
jb
rcr
sbb
shlb
or
inc
lods
addb
cs
movsb
clc
enter
jl
sarb
lahf
addr16
xchg
add
fnstcw
lea
mov
call
jne
rcrl
mov
jg
xor
jae
mov
push
ret
pop
pop
jne
cmc
mov
xchg
push
xchg
out
cld
dec
fistpll
or
adc
std
lds
adc
cli
or
push
int3
sbb
aaa
mov
mov
jl
clc
inc
movsl
mov
mov
jg
add
gs
lods
sub
stc
jnp
adc
outsl
fistpl
in
adc
aam
in
pop
rcll
xlat
arpl
dec
imull
lret
inc
mov
aaa
xor
repz
or
mov
xor
repnz
lods
es
cltd
jmp
jo
sbb
mov
lock
cmp
inc
sbb
xor
stos
in
sarl
out
outsl
imul
sub
mov
xchg
test
mov
cmpsb
xchg
ja
pop
mov
je
imul
icebp
ficoml
or
movsb
cmpsl
mov
jl
movl
cwtl
ret
adc
es
ret
test
jno
cmpsl
mov
push
push
cmp
dec
jno
cmp
fsubrs
fs
bound
fwait
sbb
adc
jp
adc
aaa
inc
in
mov
ret
movsb
sbb
dec
cmp
push
jp
dec
cmpsl
and
imul
push
xor
es
cmp
cmp
mov
and
aam
testl
ds
mov
jno
cwtl
fnstenv
sub
jcxz
cli
mov
out
push
stos
addl
lahf
fstpl
les
call
ret
ret
loopne
outsl
jb
cmpsl
and
mov
lret
pop
inc
mov
js
rorb
sbb
cmpsl
push
mov
sub
jmp
popf
mov
mov
push
push
lret
mov
imul
imul
cmp
xor
cmpsl
ret
bound
es
andl
and
or
mov
movsb
jno
add
out
imul
test
inc
pop
pop
int
es
packsswb
fs
mov
sub
xor
xor
mov
sub
dec
lds
sub
pop
xor
pop
call
xchg
cwtl
repz
outsl
outsl
in
jae
cwtl
test
ja
in
lods
pop
cmp
mov
jge
frstor
sub
insl
jecxz
push
loop
pop
lret
ljmp
pop
js
mov
push
in
cmpsl
aas
push
xchg
sub
out
aad
mov
cmpsb
gs
and
xchg
aaa
push
vrcpss
pushf
jecxz
mov
insb
jg
xchg
das
jo
out
imul
sbbb
cmp
subb
sahf
xor
or
pop
out
mov
repnz
add
adc
aad
pop
leave
cmpb
aaa
jp
icebp
lret
pushf
xor
mov
xchg
mov
sbb
repz
xchg
mov
xor
xchg
fistpl
shr
mov
xlat
mov
sbb
fldcw
push
add
loopne
or
call
add
pop
in
xor
mov
cmpsl
in
movsb
mov
ljmp
fildll
scas
push
mov
sub
or
mov
roll
aas
jmp
cltd
jo
xor
cli
xor
out
and
push
test
jl
aam
ljmp
jb
aam
pop
xchg
mov
xchg
mov
aas
mov
mov
lcall
inc
xchg
les
push
lock
mov
stos
pop
adc
xchg
pop
inc
inc
and
pop
xchg
mov
and
fstpt
jge
in
sbb
adc
push
pop
std
cs
mov
sub
leave
idivb
jg
lds
out
orb
push
pop
jb
adcl
cltd
aaa
cmpsb
bound
xchg
inc
xor
push
loope
cmp
xlat
and
ret
push
xor
daa
and
or
ret
fidivl
and
repz
loope
aas
cmp
push
adc
jge
adc
cld
add
jle
mov
fistpll
insb
or
sbb
mov
test
shrl
mov
fsubp
lcall
pop
adc
xchg
xor
sbb
xor
pop
sub
xlat
push
lods
sub
data16
cmpsb
fs
inc
sbb
cwtl
adc
jbe
scas
dec
shll
orb
xor
xorl
xchg
xchg
mov
dec
jmp
addb
lahf
popf
xorb
enter
fcmovnb
gs
cmpsl
stos
in
sub
or
mov
mov
dec
dec
das
lods
bound
add
mov
aas
out
in
cmc
adc
outsl
jecxz
push
dec
xor
dec
adc
sub
out
sub
xchg
sub
loop
pop
xchg
adc
or
and
add
nop
add
leave
in
mov
rorb
ljmp
or
movnti
orl
outsl
cmpb
les
ds
and
sti
cld
shlb
push
enterw
aas
cmp
mov
dec
or
sub
lcall
add
cmp
jae
shrl
nop
xor
mov
scas
insb
aaa
add
adc
out
std
dec
loop
mov
sub
lock
out
adc
sub
xor
cmpsl
xorb
cwtl
mov
loope
xor
xor
push
and
jne
das
lods
mov
pop
shl
jg
add
mov
add
lea
mov
into
fs
loope
aad
jne
mov
lods
push
xchg
pop
inc
push
sub
or
sub
dec
cmp
jns
pop
rcrl
mov
add
mov
fistl
lcall
push
jbe
mov
enter
sub
pop
jg
dec
aam
xor
dec
pop
loope
jb
and
movsb
je
push
jp
sahf
or
ss
mov
dec
mov
daa
call
add
mov
jo
rclb
sarb
mov
xchg
cmp
sahf
sarb
ss
adc
jp
push
test
test
add
adc
pop
scas
insb
test
and
dec
pop
push
dec
and
lds
in
jno
shl
fwait
sbb
and
ds
and
popa
icebp
movsb
inc
or
jne
mov
mov
outsl
adc
push
cmpl
jmp
pop
movsl
and
jb
dec
aad
fdiv
xor
or
mov
decl
je
cmpsl
add
mov
mov
repz
notb
add
cmp
shl
sub
mov
mulb
cltd
xchg
ljmp
jmp
pop
shlb
pop
fwait
ret
cmp
fisttpl
cwtl
inc
push
adc
adc
sub
imul
aaa
pop
push
out
push
cmpsb
das
mov
mov
mov
add
imul
adc
dec
push
xchg
cmpsl
and
jo
jl
xor
inc
sub
pusha
push
sti
sbb
pop
sbb
test
cmp
sub
imul
mov
jnp
mov
push
hlt
dec
sbb
cmpsl
mov
ror
loop
movsb
sbb
dec
mov
call
push
sub
sub
das
fsubs
test
mov
inc
bound
and
pop
pop
inc
push
add
mov
push
lods
sbb
mul
sbb
loopne
sub
mov
jl
adc
add
lods
adc
lahf
cltd
pop
dec
push
leave
sbb
mov
fcompl
push
dec
mov
sub
dec
stos
aad
data16
sub
inc
push
xor
or
aaa
int
loop
js
xchg
sub
iret
jb
inc
sbb
mov
mov
pop
inc
call
add
inc
aad
sub
clc
push
jae
xor
and
jmp
out
push
mov
or
je
mov
mov
dec
popf
lahf
cli
lret
outsb
jge
dec
sbb
out
ja
aaa
addr16
fisubl
enter
inc
es
test
dec
loop
lahf
pop
jns
dec
push
mov
mov
xchg
in
fistpll
xor
push
andl
es
outsb
pop
sub
add
inc
mov
sub
lock
sub
ds
in
push
inc
aam
jg
push
xor
in
and
sub
mov
out
pop
jbe
push
mov
jmp
xor
mov
push
lahf
push
test
fs
inc
jbe
or
call
cld
xchg
xchg
in
inc
idiv
mov
dec
fwait
jle
movsl
int3
inc
xchg
inc
sbb
xchg
mov
es
cmpl
adc
iret
ficoml
movsl
dec
sbb
cmpsl
and
jo
sahf
inc
aaa
sbb
jb
loope
sbb
mov
mov
add
shlb
lock
ljmp
adc
jg
inc
pop
or
fidivs
sbb
loopne
aad
xchg
xchg
cwtl
insl
clc
pop
mov
pop
dec
sub
fmul
fcomip
imulb
and
mov
xchg
sub
sub
sub
dec
jmp
xor
ss
out
cmp
sbb
sbb
in
cmc
icebp
or
das
xchg
cmp
dec
pop
xchg
addb
fcoms
in
call
aaa
stos
imul
popa
mov
inc
test
dec
nop
mov
pop
cmp
cmp
adc
or
mov
loop
pop
mov
pop
mov
sbb
mov
jmp
push
cmp
mov
adc
lods
les
cmc
cmc
sbb
sub
jl
mov
movsl
cltd
jns
shll
push
jne
inc
leave
add
adc
lret
add
addr16
mov
push
insb
std
je
lahf
pop
push
mov
push
lahf
loop
push
popa
inc
and
testb
add
cmp
lahf
mov
cwtl
stc
cmpsl
repz
jb
cmpsb
xor
jno
movsb
add
mov
stc
inc
mov
mov
sbb
aas
stos
je
outsb
pop
cmp
pop
cmpsb
iret
clc
jp
jp
pop
push
mov
rorl
jo
mov
add
scas
sbb
pop
shrb
test
out
gs
or
loope
sub
fsubr
lret
hlt
in
dec
cmp
adc
cmp
jnp
xchg
addb
outsb
aaa
iret
ljmp
rorl
cmp
pop
rcrb
test
roll
mov
cltd
mov
pushf
push
mov
stos
push
movsl
and
xchg
or
movsb
sub
inc
jb
pop
sub
inc
or
fsts
mov
scas
jle
push
sub
mov
jns
push
inc
mov
ficoml
insl
ficoms
or
dec
call
add
inc
or
lret
jb
lret
jo
add
out
lds
stos
fidivrs
in
sub
cmp
push
xchg
mov
or
jae
xor
gs
js
pop
mov
ja
scas
jo
mov
mov
shlb
out
sub
xor
data16
faddl
cmp
in
cmpsb
fadds
cmp
push
push
loopne
imul
into
mov
test
das
hlt
cltd
stc
push
or
fstps
dec
movsb
test
mov
pop
lods
sbb
or
test
pop
inc
inc
subb
clc
clc
adc
stos
jge
inc
ret
mov
mov
fisttps
scas
outsb
pusha
jbe
movsb
pop
arpl
adc
inc
test
fdivp
pop
sarl
lds
push
xor
ja
pop
mov
js
push
mov
in
jne
add
adc
repz
filds
fdivs
jmp
fbstp
lahf
popf
scas
inc
or
dec
jge
add
mov
mov
xor
jle
and
dec
bound
pop
dec
mov
bound
lcall
pusha
cmp
push
cmp
xor
sub
outsl
sarb
inc
popf
push
in
loopne
jb
ljmp
xchg
scas
push
in
cli
jg
mov
cmp
or
js
or
cmpsb
xchg
jl
icebp
insb
popf
xchg
jmp
aam
cwtl
cli
dec
pop
push
xchg
dec
outsl
push
loopne
sar
sahf
dec
cmpsb
push
lahf
iret
jae
mov
push
test
mov
je
iret
pusha
dec
mov
pop
sbb
push
mov
xlat
das
mov
daa
ss
mov
lds
and
xor
ror
cmp
rolb
dec
sbb
mov
mov
mov
or
ja
cmp
lock
arpl
jp
push
mov
out
push
or
mov
aad
clc
sarb
arpl
sub
adc
into
xchg
out
or
push
xor
cli
adcb
leave
test
mov
sbb
jp
cmp
cmp
and
das
or
xchg
push
or
outsl
dec
mov
pop
pusha
add
pop
jge
or
sti
jl
push
mov
sbb
imul
pop
push
pusha
fnsave
push
push
or
insl
sbb
inc
jge
ljmp
es
in
cwtl
std
cmpsb
mov
or
ret
fadd
mov
fs
adc
je
cmpsb
jle
div
cld
fiaddl
xor
mov
push
or
movsl
rorb
fwait
ljmp
jns
mov
add
adc
sub
bound
push
push
ror
pop
js
mov
and
jmp
ljmp
push
into
add
in
xchg
js
loop
mov
out
mov
mov
push
hlt
pop
xor
nop
or
ret
pop
fildl
mov
addr16
insl
js
pop
xor
push
stos
outsl
loop
ljmp
sbb
out
in
push
push
adc
xor
pushf
std
xor
addl
push
mov
and
lds
jg
jns
sub
push
enter
sub
les
hlt
repz
and
sbb
shrl
data16
repnz
aam
imul
pop
push
filds
lea
push
mov
mov
xchg
movsb
aam
cmpsb
mov
adc
xchg
ss
leave
mov
jg
lahf
jne
dec
outsb
cwtl
jmp
fisttpl
iret
push
cmovnp
add
aaa
push
aaa
inc
addr16
test
lock
shl
in
cmp
daa
dec
sub
add
movsl
int3
ret
icebp
fwait
hlt
mov
rclb
mov
sti
pop
mov
and
int3
js
es
loope
pop
es
jne
push
push
xor
dec
adc
adcb
cwtl
push
dec
mov
mov
pop
call
mov
mov
pop
xor
xor
mov
popf
dec
movl
mov
xor
pop
dec
adc
imul
sbb
xlat
cld
clc
xor
addl
push
sub
jp
push
adc
mov
scas
cmp
or
nop
repz
test
add
mov
les
pop
add
sub
inc
xchg
fidivl
enter
pusha
xchg
pop
shlb
cwtl
rcpps
call
fwait
sbb
inc
push
ret
gs
ja
mov
je
sub
lock
fisttps
outsl
inc
repnz
add
or
dec
lret
mov
sarl
mov
inc
popa
sbb
ds
push
push
jle
push
mov
jo
mov
std
jno
sub
cs
pop
sbbl
inc
cmpsl
sti
repz
lret
iret
js
lahf
popa
push
clc
mov
jge
jns
sub
mov
loopne
add
dec
pop
insl
or
mov
jmp
out
adc
mov
insl
mov
cmp
jne
fmuls
jno
cmpsb
sub
xchg
xchg
rcrb
cmp
push
ljmp
mulb
xchg
add
push
int3
jo
jp
and
sub
test
out
cmp
jne
stc
jg
pop
push
test
fnop
lock
xor
inc
decb
cltd
add
clc
mov
sbb
mov
lret
ficoms
push
clc
xor
pop
lods
push
leave
jb
push
loop
scas
pop
mov
scas
mov
jp
out
or
fsubl
fnstsw
jnp
xor
sbb
push
std
shl
cmp
xchg
inc
inc
es
inc
imulb
xchg
bound
xchg
nop
jbe
jbe
and
imul
inc
jns
xchg
popf
subl
inc
aam
sub
mov
add
adc
mov
aam
mov
gs
and
jp
test
nop
roll
jae
xchg
xchg
out
js
shrl
adc
dec
movsl
cmp
test
jecxz
out
dec
add
iret
andl
pop
cli
push
or
ret
sahf
jmp
imul
int3
imul
test
shl
add
das
cld
lds
jecxz
mov
lock
adc
andb
in
add
pop
jge
aam
dec
pop
dec
fidivrs
add
popf
dec
pop
xchg
sbb
lret
push
stc
or
insl
clc
mov
std
xor
mov
cmpsb
push
inc
and
and
push
jg
daa
pusha
xor
fisubl
ss
dec
push
sbb
sbb
dec
jnp
xchg
mov
cltd
cmpb
adc
mov
pop
add
push
xchg
pop
push
rcr
repz
out
mov
mov
add
inc
add
inc
adc
hlt
mov
fisttps
test
sub
out
insl
lds
stos
movzbl
inc
aad
jl
fst
testl
sub
sub
xor
jl
jge
mov
pop
cmc
xchg
stc
mov
pop
out
cmpsb
adc
xor
call
sbb
idivl
int
push
jle
xchg
xor
sub
dec
adc
sub
sti
testb
popf
xor
das
bound
and
mov
inc
je
and
dec
mov
or
sbb
cmp
outsl
movsl
cmpsl
mov
push
adc
dec
outsb
decl
pop
mov
jecxz
testl
cli
pop
cmc
adc
lods
pop
or
test
xor
leave
xchg
push
loopne
xlat
stos
mov
mov
clc
push
pop
pop
mov
pop
insl
movsb
pop
dec
cld
inc
test
jno
or
stos
jnp
jge
cmp
lock
test
adc
push
sti
movsb
idivb
mov
ret
into
testl
adc
jne
pop
in
xor
stos
dec
jae
sbb
pop
inc
mov
jno
loopne
mov
xor
pop
sarb
rclb
pop
jbe
xor
cwtl
mov
ret
cltd
dec
push
sbb
fists
out
test
mov
cmpl
repz
shlb
pop
movsl
testb
sub
lcall
cli
orl
nop
loopne
cltd
jb,pt
pop
mov
popa
push
or
cwtl
call
loope,pt
jl
adc
scas
ja
int3
mov
and
fildl
lcall
push
fmulp
in
movsb
push
sbb
scas
push
iret
out
and
push
lret
xchg
inc
cmp
int
pop
push
jnp
pushf
mov
scas
lret
or
out
popf
xchg
pop
frstor
add
add
push
sbb
mov
inc
daa
aaa
cwtl
xchg
adc
test
fs
or
push
dec
fistl
sahf
cs
inc
lcall
push
jne
outsb
mov
xor
dec
xchg
sub
mov
jmp
jg
push
push
inc
dec
in
cmp
pop
repnz
sbb
sbb
insb
mov
fnstenv
or
out
cmpsl
jbe
adc
inc
xchg
daa
sahf
sbb
popa
mov
xor
leave
cmp
lods
bnd
sbb
xchg
add
add
jmp
add
pushw
adc
es
inc
mov
sbb
lea
mov
incl
hlt
push
les
aaa
scas
pop
sbb
fidivrs
pop
sti
rol
cltd
and
inc
jb
jnp
dec
testb
fwait
jae
pop
jecxz
jbe
and
push
addl
sub
dec
int
jl
cmp
pushf
pop
mov
aad
mov
xchg
movsl
add
das
add
insb
jecxz
mov
push
mov
aaa
xchg
incl
outsb
in
push
inc
push
push
pop
mov
iret
and
jno
or
popf
dec
pop
mov
sub
mov
std
aas
out
aam
fildl
bnd
or
jp
arpl
xchg
push
push
add
jmp
popa
mov
mov
jb
xor
pop
push
mov
pushf
xchg
xlat
mov
sub
sub
insl
cltd
sbb
jne
mov
dec
and
into
stos
xor
into
outsw
std
jne
cmc
aaa
jl
inc
cld
scas
ret
subb
mov
lods
fcomps
or
push
shll
inc
mov
outsl
test
cmpsb
imul
dec
sbb
push
pop
inc
jne
popf
in
inc
fcomps
mov
adc
or
pushf
std
inc
sub
fistpl
mov
leave
add
stos
pop
mov
icebp
sahf
mov
ja
in
xor
sub
ret
jecxz
inc
lods
mov
add
mov
jno
jb
mov
push
pop
adcb
leave
inc
push
xchg
cli
ja
mov
and
into
iret
xlat
mov
jmp
pop
push
daa
clc
dec
jmp
mov
xor
push
shl
and
test
or
in
movsb
scas
mov
loopne
imul
mov
xchg
dec
pop
fldt
aam
cmp
add
test
mov
sub
pop
gs
mov
in
outsb
scas
pop
sub
mov
sbb
mov
and
inc
out
int
adc
ficoms
jo
adc
or
inc
hlt
lret
jne
ds
add
movsb
lret
popf
mov
mov
data16
imul
dec
call
push
daa
cmc
ss
jne
or
cmpsb
pop
or
xchg
aaa
pushl
mov
sti
inc
stos
aas
sti
imul
subb
push
ja
jl
mov
xchg
pop
xor
push
add
shll
outsb
adc
xor
testl
mov
cld
jl
int
sub
cmpsl
push
and
daa
mov
xor
ljmp
cmp
and
daa
data16
adc
sarb
xchg
shl
mov
mov
call
jnp
enter
lret
insl
jns
stos
insb
xchg
test
js
ret
mov
rcrl
xchg
out
out
push
xchg
lods
imul
cmpb
popf
push
mov
adc
jp
fisubl
mov
leave
jne
adc
adcl
js
outsb
xchg
inc
shll
xor
orl
add
cmc
daa
inc
lahf
int3
xorl
adc
cli
ret
dec
enter
sarb
fbstp
stc
test
test
es
test
mov
inc
stos
inc
mov
or
outsb
leave
in
cmp
pop
enter
push
dec
ja
sub
popa
push
jb
shlb
and
bound
ret
mov
je
push
pop
xor
mov
int
mov
jmp
mov
mov
sbb
pop
xchg
xchg
jae
adc
call
adc
aaa
xchg
in
adc
jmp
sbb
xor
mov
dec
jbe
mov
out
sar
leave
add
sahf
clc
pushf
or
aaa
inc
dec
xchg
mov
ljmp
cmp
insl
mov
sub
jle
cli
iret
add
xor
cltd
push
push
lods
push
imul
cmp
fwait
cmp
popa
jp
or
aad
adcb
or
cltd
popf
push
arpl
push
push
add
inc
pop
or
push
xor
sub
or
and
clc
mov
xor
adc
sar
push
cmp
stos
pop
rclb
test
fs
addr16
or
sahf
sbbb
and
pushf
push
repz
push
mov
jg
lods
clc
bound
int
xchg
insl
push
inc
orb
outsb
repz
adc
push
test
mov
pop
cmp
iret
les
out
sub
dec
int
or
xchg
push
sbb
dec
mov
loopne
ss
mov
mov
cmpl
xchg
cmp
ss
cmp
pop
out
jecxz
aas
lods
roll
dec
inc
loopne
popa
pop
pop
cld
sysret
int3
push
lock
push
xchg
iret
push
arpl
lret
aam
loop
arpl
in
icebp
jmp
lds
inc
fidivl
nop
dec
insb
xor
sbb
sbb
mov
stc
jo
cmpsl
xchg
fsubl
in
inc
cli
nop
sub
mov
pop
lret
lcall
dec
scas
test
cmp
lea
out
mulb
cli
jg
enter
loopne
iret
cmc
ja
dec
loopne
dec
cmc
imul
sbb
pop
stos
push
repnz
mov
loope
sub
adc
fisttps
cmp
shl
mov
or
inc
cltd
and
mov
mov
aam
pop
cli
cmc
push
clc
imul
or
jns
in
mov
data16
jno
pop
enter
pop
pop
jle
mov
sbb
popa
dec
hlt
out
loopne
test
inc
mov
xchg
push
mov
pop
pop
jmp
mov
lods
inc
inc
les
lds
outsb
cmp
idivb
and
or
leave
xchg
frstpm(287
mov
das
shll
mov
mov
in
test
or
add
lss
cmp
ss
xor
ficompl
aad
nop
push
ret
cltd
push
add
cmp
mov
inc
and
test
outsl
pop
mov
mov
shr
incl
mov
aad
jo
test
fists
push
pop
std
and
push
pop
pop
addr16
and
popf
daa
popa
dec
sti
push
jns
or
into
lds
sbb
sahf
xchg
nop
call
add
jecxz
push
jb
mov
cmp
mov
ret
push
popl
and
mov
arpl
sub
add
fisttps
adc
jl
xchg
adc
adc
mov
and
sbb
divb
sbb
enter
sbb
loope
shll
push
scas
movsl
xorl
movsl
mov
std
hlt
push
jno
roll
mov
not
movsb
push
xchg
loope
dec
xchg
imul
xchg
mov
scas
ss
mov
cmpsb
pop
cmp
cltd
jno
adc
or
mov
in
testl
movsb
icebp
dec
mov
push
push
pop
out
cwtl
dec
xor
pop
dec
cwtl
and
loopne
or
xchg
out
push
pop
inc
xor
shll
mov
jle
hlt
or
sbb
int
loop
inc
xlat
xchg
sahf
push
xor
cmp
mov
test
push
lds
sub
mov
and
lds
fxch
pop
lahf
lret
mov
mov
mov
mov
mov
sub
aaa
mov
jne
decl
iret
call
inc
aam
xchg
add
scas
xchg
add
xor
and
push
pop
cmp
sbbb
pop
scas
test
test
insb
out
gs
push
and
push
and
in
loope
test
xchg
mov
xchg
pop
xchg
les
xchg
pop
mov
mov
in
jmp
lret
ror
pop
mov
xchg
cmp
fadds
insl
std
cmp
and
mov
loopne
pop
sbb
stos
or
xchg
jecxz
xchg
mov
popa
fisttps
cmpsb
jp
add
pop
pusha
cli
and
adc
mov
les
cs
pop
mov
sub
out
into
pop
mov
fcompl
in
push
mov
mov
aam
inc
clc
push
push
jecxz
sub
ljmp
jns
ret
dec
std
cmpsb
lods
push
icebp
test
in
dec
jmp
ud2
mov
cmp
jae
add
mov
pusha
pop
adc
cmp
push
daa
stos
fisubrs
aas
sti
pop
sub
movsl
in
out
and
mov
dec
cmp
div
pop
aad
stos
jbe
sbb
xchg
fnstcw
aas
ret
fwait
xchg
push
pop
outsl
std
or
insb
jp
dec
stos
aad
cmp
call
sub
ret
outsb
push
xor
mov
punpckldq
js
addr16
lahf
mov
push
mov
mov
jae
and
jp
cmc
shll
mov
adc
xchg
jge
or
popf
xor
mov
lea
imull
sbb
sti
jmp
icebp
mov
fcoms
sahf
sahf
sbb
roll
xlat
sti
decb
push
adc
mov
xchg
jo
fwait
dec
popl
stos
adc
cmc
in
add
push
sbb
push
js
ss
dec
test
lea
pop
sbb
shlb
loopne
inc
pop
xlat
fcoml
xchg
insl
or
mov
inc
test
orb
mov
pushf
fiadds
stos
mov
mov
jns
roll
adc
sbb
stos
add
xchg
into
dec
mov
in
pop
pushf
ret
adc
mov
mov
imul
sub
mov
pop
divb
fsubl
cmp
jp
sti
dec
jo,pn
loopne
repnz
fiaddl
fsubrp
out
cmpsb
imul
jns
scas
outsl
dec
ljmp
mov
dec
mov
loopne
and
lret
inc
ljmp
push
loop
xchg
jno
mov
test
fiadds
subb
or
call
pop
jg
adcl
xchg
mov
fwait
jp
push
pop
add
dec
inc
add
dec
mov
cmp
and
cltd
dec
mov
cltd
jno
movsl
icebp
bnd
pop
test
imul
sub
cmp
test
mull
jo
adc
sbb
lods
dec
mov
push
mov
and
pop
hlt
inc
lods
sub
sub
lcall
das
dec
scas
cmp
lods
pop
mov
insb
hlt
aas
push
popa
bound
push
je
pop
add
hlt
out
jl
sbb
mov
xchg
loope
push
and
test
fildl
lret
rolb
js
adc
cs
notb
jecxz
sub
sbb
sub
cmp
cltd
mov
and
xchg
outsb
fistpll
popf
jo
or
lods
and
inc
cld
call
cld
pop
ljmp
iret
jns
hlt
test
outsl
test
imul
mov
shl
jae
cmp
mov
jge
iret
add
pusha
scas
xchg
js
dec
xorb
sti
outsl
add
out
call
divb
jl
adc
sbb
mov
outsl
jle
daa
jns
mov
fbstp
xor
test
fisttps
lds
cmp
or
shll
mov
and
jo
data16
cld
ret
orb
jl
mov
popa
xor
push
adc
or
mov
dec
xchg
dec
mov
adc
out
xchg
inc
mov
xchg
jmp
mov
pop
cwtl
push
dec
sub
orl
sahf
sub
popf
xchg
pop
rol
addl
jle
mov
add
fsubr
test
les
jecxz
out
adc
test
jecxz
dec
in
sub
add
sbb
sarl
adc
inc
cwtl
or
rorl
sbb
pop
dec
push
xor
addr16
push
ret
sub
xchg
xor
jl
cmp
add
push
lahf
dec
xchg
mov
push
pushf
xor
pop
add
rcrb
or
fwait
aaa
mov
mov
sub
into
mov
jecxz
dec
cmp
mov
and
dec
leave
testb
cmp
pop
sbb
lods
mov
add
ret
xor
rclb
jmp
adc
rclb
bnd
shll
nop
rolb
sbb
jae
mov
andb
sub
test
test
mov
pushf
movsl
mov
in
pop
mov
clc
xor
add
jns
nop
imul
lods
or
pop
stos
pop
and
sbbb
mov
pop
outsb
sbb
sub
daa
inc
ds
hlt
bnd
inc
testl
je
add
xchg
sahf
xchg
mov
cltd
push
jl
sti
inc
jae
imul
loope
xor
mov
xchg
cmp
or
rcr
sub
test
adcl
into
jecxz
jns
cli
shl
scas
sahf
lcall
push
stc
scas
cmpsl
cmp
xchg
xor
pop
sar
mov
dec
and
sarb
lock
pop
jecxz
add
in
lock
pop
cs
inc
pop
jmp
ror
mov
je
cltd
scas
aad
jg
push
dec
sub
mov
ljmp
jns
pushf
cmpsb
fwait
cmp
push
fistl
cs
orb
inc
maskmovdqu
testl
rorl
adc
or
cmp
fsubrl
daa
jnp
dec
mov
pop
insl
dec
scas
aaa
xchg
or
stc
sub
mov
pusha
jne,pn
fwait
out
arpl
and
push
sti
cmp
std
imul
sub
jl
in
out
fnstcw
mov
daa
notb
cmpb
push
cmp
in
adc
imul
jne
outsl
cmp
mov
movl
add
dec
jmp
test
add
mov
sahf
fs
xchg
fidivrs
pop
pop
or
mov
imul
shl
pop
cmp
aad
rolb
daa
ja
lea
dec
xor
divl
cmpb
xchg
add
mov
out
mov
xchg
xor
add
enter
call
sbb
xchg
cmp
std
sub
outsb
test
aad
cmpsl
mov
call
mov
jle
inc
jge
mov
jae
inc
xchg
scas
sti
adc
inc
cltd
mov
test
jmp
pop
lcall
mov
lods
cmp
mov
sbb
out
jo
mov
push
jle
ret
repnz
out
int
rorl
jg
pushl
repnz
outsl
leave
add
pop
push
sbb
mul
mov
pop
and
lods
ffree
sbb
mov
mov
xor
rclb
es
out
jns
jecxz
cmp
jb
test
rol
lods
sbb
addr16
gs
loopne
insb
sub
mov
pop
push
cli
pop
aaa
cmpsb
cmp
jmp
cmp
ffreep
fisubl
pop
push
add
jge
sub
add
rcrl
sbb
xor
testb
rol
or
jl
inc
addr16
cmc
mov
lods
mov
insb
mov
test
data16
mov
push
xor
fistps
dec
aas
pop
ljmp
push
and
pop
cli
out
mov
aam
jecxz
jge
or
lcall
gs
pusha
lds
push
cltd
adc
mov
sub
imul
jns
js
dec
aam
mov
jmp
push
add
cmc
and
scas
mov
fsts
fbld
xchg
ss
cld
pop
jge
add
dec
out
jle
imul
mov
mov
outsb
sub
push
pop
cmc
push
loope
jno
push
xchg
ss
cli
out
add
test
pop
adc
pushf
add
cli
insl
mov
pop
xor
jo
loope
jo
cld
roll
add
scas
inc
scas
ds
add
mov
and
mov
jmp
cld
cmp
test
leave
adcb
sub
push
mov
shl
in
inc
cwtl
pusha
push
sub
insl
lcall
or
fs
call
inc
movsb
xor
roll
add
push
jne
xor
daa
xchg
xchg
sub
push
xchg
fld
lahf
cmpsb
lea
dec
sbb
push
pop
pop
push
pop
cmpsl
push
sub
clc
cli
outsl
test
sti
sub
ret
repnz
push
je
cli
xchg
inc
mov
cltd
aam
hlt
das
push
inc
test
pop
mov
stos
iret
mov
call
pop
cmp
pushf
mov
cs
lahf
lahf
nop
inc
iret
push
in
mov
jns
pop
mov
fstl
mov
xchg
dec
jnp
inc
jmp
lret
xlat
jg
push
mov
int3
cmp
addb
pop
pop
shrb
dec
jg
mov
sahf
push
ss
push
mov
in
fadds
jge
and
cmp
or
pop
popa
lahf
rolb
mov
js
sti
sti
cmp
push
or
sub
cmp
and
xor
or
int3
sub
push
test
or
pop
jle
xlat
push
das
mov
shl
subl
dec
popf
or
inc
test
movb
ja
jbe
dec
daa
rcrl
mov
pcmpeqd
notb
inc
jne
hlt
pop
push
out
pop
jbe
mov
xchg
add
ljmp
ret
cmp
inc
ret
inc
jnp
fildll
pop
xchg
mov
xor
mov
ret
mov
adc
sub
shrb
push
out
add
and
mov
cs
inc
push
or
pop
cmc
push
inc
vaddss
test
pop
mov
incb
sbb
stc
mov
inc
call
fs
imul
insl
dec
out
xchg
ljmp
mov
das
out
add
dec
les
inc
and
idivb
lods
cmp
aad
ficomps
inc
xorb
ja
sbb
bound
mov
hlt
jge
xchg
inc
adc
gs
dec
int
and
je
popa
jecxz
adc
inc
xor
mov
pop
mov
mov
push
mov
inc
pop
ret
xor
push
push
sbb
repz
push
lret
cmp
adc
lods
xor
mov
loope
cmp
jmp
and
fsubr
out
adc
mov
into
aaa
aam
sti
push
sub
mov
sbb
dec
gs
cmp
jp
test
pop
movb
fwait
and
jo
fisubrs
inc
pop
fsubs
and
inc
mov
jmp
jbe
mov
pop
cmp
mov
ret
cmc
fst
adc
push
rorl
bound
pop
int3
loop
sbb
xchg
std
add
movsb
push
icebp
sbb
xchg
cmp
popa
xlat
inc
ss
cmp
lcall
inc
and
push
and
int3
fcmovnu
mov
gs
or
push
and
ficomps
xor
add
cld
xchg
in
add
cltd
xabort
icebp
hlt
arpl
js
pusha
xor
mov
lods
xor
or
xchg
enter
int
pop
jbe
jp
arpl
pop
jp
lret
sbb
loop
shlb
inc
add
test
pop
xor
negb
addr16
sti
insl
xor
and
and
push
popf
insb
pop
sti
or
pushf
mov
nop
cmp
adc
je
sahf
popf
dec
pop
test
xor
cli
sub
fmuls
fbld
mov
jmp
xor
adc
mov
mov
mov
enter
xchg
loopne
mov
cmpsl
push
mov
scas
adc
push
xlat
enter
pushf
push
mov
jb
mov
cmp
or
cmp
xor
lretw
dec
cs
mov
xchg
movaps
mov
mov
sub
cmpsl
xchg
in
cmp
es
xchg
inc
lea
mov
dec
arpl
push
mov
and
jb
and
sub
inc
xchg
daa
or
push
pusha
loopne
cs
aas
nop
dec
mov
inc
xor
mov
sub
xchg
mov
pop
add
or
out
mov
in
adcb
scas
lock
push
je
icebp
cltd
dec
scas
ss
call
add
inc
std
test
lea
test
push
pushf
mov
decb
jo
fstps
mov
cwtl
mov
dec
sub
pop
or
out
and
push
addl
sub
and
cli
ret
push
ret
ja
nop
repz
push
dec
inc
repz
push
xorb
aad
out
push
sub
push
push
push
les
fidivl
popa
xorb
iret
mov
cmp
das
jnp
xlat
cmpsl
adc
cmp
push
pop
pop
lcall
stos
or
fadds
inc
mov
jle
and
orl
push
cmpsl
mov
xchg
sub
loope
cld
stos
out
pop
stos
cmpl
cs
cmpsb
sbb
mov
sub
mov
xchg
inc
ficomps
hlt
fnsave
jl
add
idivl
mov
jne
cld
cld
inc
mov
jge
pop
push
subb
add
fldt
nop
add
jecxz
lahf
pop
shrb
shrb
mov
cmp
inc
xor
lods
cmp
cli
xchg
jecxz
mov
mov
pop
jo
repz
jne
push
pop
mov
cmpsb
adc
fiadds
jle
xor
call
popa
pusha
pop
adc
sti
sbb
mov
orb
arpl
jle
pop
lea
cmp
test
add
pop
popa
stc
mov
adc
xor
or
mov
clc
out
out
jb
frstor
and
sbb
lea
lods
push
cmp
fcmovnbe
xor
nop
jnp
xlat
and
cmp
mov
loopne
cmpsb
push
fidivl
bound
push
adc
popa
xor
xchg
sbb
aam
rolb
mov
xchg
inc
fsubs
mov
popa
pop
out
cmpsb
push
aad
ficomps
pop
and
cmp
adc
push
push
jmp
pushl
jbe
inc
mov
dec
mov
cwtl
clc
xchg
jg
negl
loope
in
xor
push
pop
xor
mov
xchg
mov
lods
mov
adc
fwait
pop
cmpsl
cmp
mov
lock
inc
pop
add
jge
pop
or
or
inc
into
clc
sub
jno
xchg
push
xorl
lock
hlt
stc
fists
imul
pop
pop
lret
sub
ds
std
pop
mov
jne
ret
inc
dec
jmp
faddl
ret
sub
pop
shrl
lock
subl
cltd
cmp
inc
pusha
mov
stos
call
push
in
pop
mov
fiaddl
sub
fisubs
les
jge
adc
adc
xor
out
bound
mov
pop
sbb
and
sbb
ja
mov
cmpsl
mov
dec
imul
scas
push
repnz
add
mov
pusha
xlat
movsb
xchg
pop
cmp
sub
mov
inc
adc
insl
pop
jle
mov
fildl
sbb
xchg
cmpsl
shrl
test
dec
nopl
flds
mov
jae
add
pushl
idivb
pop
add
and
out
push
in
or
sahf
and
rcl
aad
adc
mov
movsl
pop
mov
mov
dec
pop
push
mov
sub
aad
mov
mov
mov
filds
rolb
mov
cmp
push
aam
gs
dec
ja
jmp
stos
lcall
out
xchg
fisttpll
rclb
out
icebp
add
mov
loopne
cmp
sub
adc
rcrb
arpl
jecxz
cmc
data16
fisubl
lcall
cmp
or
fists
int
push
pop
jae
xor
out
add
push
iret
jnp
aas
add
daa
lods
in
inc
std
inc
out
cmpsl
ret
mov
mov
dec
lret
dec
and
ret
sub
pusha
adc
outsb
scas
gs
dec
pop
dec
jmp
loop
dec
mov
lock
loopne
aad
mov
pop
dec
mov
fstpt
test
inc
daa
divl
data16
pop
cmc
push
mov
push
outsl
xlat
mov
cld
cmpsb
movsb
add
cmp
es
add
or
push
cmp
mov
jl
insb
or
je
push
xor
dec
jmp
mov
dec
jbe
adc
mov
pop
sbb
jp
jmp
adc
jp
push
movsb
imull
lret
add
jle
push
inc
popa
push
les
stos
in
or
hlt
test
mov
adc
mov
jmp
ret
arpl
xchg
pmulhw
popa
pop
pop
popa
or
mov
cmc
out
int3
mov
add
mov
iret
add
fstl
push
inc
pushl
repnz
jbe
mov
mov
fimull
mov
je
ja
inc
jae
andl
shll
cmp
and
xchg
inc
add
shll
bswap
ja
insl
fcmovnu
and
imul
adc
dec
imul
hlt
and
cmpsb
mov
in
mov
es
dec
mov
outsl
mov
fwait
je
aam
out
std
aam
adc
cmpsl
mov
fs
dec
out
push
lret
cmc
mov
aad
pop
repnz
jo
out
mov
stc
int3
inc
jno
jp
insl
mov
xchg
jne
adc
jns
sahf
mov
dec
lcall
sbbb
push
aaa
out
daa
ja
mov
cld
cmp
popf
or
lds
lret
dec
pop
call
sti
aas
or
xchg
lret
cmpsl
cld
sbb
in
int
enter
xchg
add
cmpsb
mov
sub
push
test
push
pusha
je
jne
pop
lcall
mov
cwtl
xchg
and
cmp
inc
cmp
rcr
pop
mov
sahf
mov
jae
push
aad
cmp
ljmp
sbb
xor
popa
into
jae
scas
jg
xor
fildll
mov
adc
mov
inc
stos
movsl
fildl
add
inc
rclb
xor
sbb
shlb
ss
fs
addr16
sahf
mov
jb
sub
outsl
fldt
mov
test
dec
stos
mov
fisttps
ret
push
jl
adc
jne
imul
push
push
xor
xchg
push
pop
xchg
xchg
jb
push
ret
scas
scas
xorl
fwait
mov
xor
dec
in
push
xchg
imull
push
lea
jae
jg
push
cmpsb
std
loopne
int
cmp
aas
scas
dec
jecxz
out
push
ljmp
filds
adcl
pop
mov
fdivs
xchg
pusha
aam
scas
addr16
jmp
and
call
rcrl
mov
or
lret
aas
pop
xchg
inc
and
cmpsb
ficoms
popf
inc
or
movsl
push
je
test
in
test
stc
out
movsl
cmp
scas
pop
repnz
jno
in
repnz
daa
or
les
cltd
outsb
dec
xlat
mov
jbe
dec
xor
out
ss
outsl
mov
ss
imul
fsts
fcoms
cmc
sub
aad
xor
or
popa
cs
pop
insl
dec
jle
movsl
loop
cwtl
xchg
insb
and
fildll
mov
fldcw
pop
or
mov
xor
jo
das
inc
mov
and
int
xlat
jl
out
arpl
sub
pushf
mov
fstps
sbb
mov
jg
fists
lret
adc
cltd
mov
pop
mov
call
hlt
xor
idivl
out
and
mov
mov
sbb
je
pop
inc
cwtl
and
mov
clc
cmp
imul
iret
push
jnp
mov
add
xor
icebp
cli
or
les
push
and
mov
inc
popf
mov
leave
test
or
mov
int3
sub
hlt
lds
pop
cmpsl
and
dec
jo
dec
in
js
fcmovbe
mov
aam
sti
je
xor
outsb
or
jno
lock
loopne
outsb
xorb
adc
movsl
jecxz
lcall
sbb
dec
xchg
repz
xchg
jno
pop
jg
in
dec
mov
int3
jno
mov
fimull
xor
pushf
dec
jae
imul
fsubl
sbb
fnstsw
cmp
pop
xor
fcmovnbe
nop
add
add
sbbb
jmp
fwait
xchg
cld
outsl
xchg
cmc
mov
and
movsl
mov
xor
mov
ds
sbb
cmp
dec
imul
push
mov
fisttpl
mov
imul
mov
mov
pop
outsb
rolb
xchg
aas
pop
insb
in
fwait
cmc
jp
and
mov
aam
scas
int3
rcll
andb
das
jle
sbb
dec
ficoms
and
pop
mov
iret
add
ficoms
test
adc
or
push
test
adc
inc
scas
dec
xor
fwait
cmpsl
enter
scas
or
cmp
pop
fnstsw
and
mov
sub
lock
pop
and
push
rorb
js
imul
lds
dec
jnp
jae
data16
and
mov
xchg
in
popf
jbe
add
lret
cmp
into
divl
je,pn
incb
jae
into
test
repnz
xchg
outsl
outsb
leave
fwait
stos
sub
push
clc
mov
mov
sub
pop
lret
mov
pushf
pop
push
xor
jg
jp
push
fisttpll
test
mov
aaa
sahf
xchg
stos
and
inc
adc
insb
pop
sbb
xchg
nop
push
test
dec
xor
movsb
cli
fnstenv
push
xor
inc
sbb
cmp
or
fnstsw
test
sbb
int3
lock
popa
out
jb
stos
push
mov
das
add
or
mov
int3
adc
adc
std
cld
test
mov
aaa
xchg
test
cmp
jmp
inc
pop
sarl
pop
lret
mov
push
inc
scas
daa
repz
pop
loopne
int
sbb
les
push
mov
bound
je
fistpll
adc
mov
inc
xchg
sbb
ret
push
outsb
pop
push
mov
fwait
mov
adc
mov
sub
inc
cmpsl
lock
push
push
iret
hlt
dec
push
jle
or
mov
sub
xchg
es
mov
fidivrs
mov
push
or
pushf
and
fidivl
and
xor
in
adc
lahf
mov
jne
or
outsl
lret
xchg
jp
in
in
stos
inc
pop
pop
mov
mov
mov
orb
ret
adc
test
mov
inc
jbe
mov
addr16
jle
or
cmp
js
imul
add
dec
nop
or
push
outsb
push
les
xchg
jns
push
xchg
mov
lret
mov
jns
xchg
xor
dec
sbb
cmp
sbb
jge
movsl
fstpl
or
rcr
add
adc
stc
incl
mov
mov
xchg
inc
or
jb
fldcw
insb
aam
jne
mov
sbb
adc
jmp
ljmp
mov
xor
add
ljmp
cwtl
xor
test
outsb
push
jg
lock
and
xor
mov
shll
xor
dec
sbb
lret
int3
dec
add
vcomisd
adc
imul
fdivrl
sbb
ja
push
movsb
ds
and
or
jge
jecxz
int3
mov
sub
movsb
adc
mov
mov
loope
cmp
and
jne
popf
test
add
push
inc
dec
rorl
or
imul
adc
cmp
movsb
out
sahf
mov
mov
clc
int
test
dec
jo
dec
ret
popf
pop
mov
ret
dec
faddl
push
test
cld
pop
cmp
push
inc
popf
adc
pop
push
mov
roll
andl
mov
push
dec
xor
mov
xor
xorl
cmp
fidivl
pop
cli
hlt
inc
push
push
jae
mov
mov
bound
adc
fldl
dec
popf
jecxz
add
xchg
sbb
rcl
pop
inc
jge
iret
xchg
mov
mov
jo
mov
lahf
add
js
sbbl
bound
int3
scas
push
hlt
negb
movsl
test
xchg
add
push
fstps
or
xor
call
sbb
pop
call
subb
out
push
xchg
sub
inc
rcr
jl
lds
adc
add
add
stos
cld
sub
imul
aad
xor
sbb
pop
mov
jb
scas
int
iret
or
es
inc
int
in
ret
push
pop
push
jns
cmpsb
jp
xchg
pushf
jle
int3
pop
jg
imul
or
stc
movsb
xor
sbb
inc
sub
adc
ss
cs
shr
cmp
aad
and
xchg
inc
shld
decb
push
mov
sub
lock
dec
stos
repnz
push
mov
xchg
xchg
in
dec
cmp
sub
out
pop
lock
jmp
dec
cmp
out
mov
pop
out
cmc
les
mov
outsb
mov
sbb
or
fisubrl
pop
adc
mov
xchg
cmp
sbb
imul
mov
sub
xchg
jg
push
andl
jle
jne
jg
sti
pop
or
in
cmp
mov
push
sub
jecxz
sti
insl
fsub
dec
push
inc
add
xchg
loopne
pop
xor
call
xchg
or
fsts
jp
ret
mov
mov
pop
jae
mov
sbb
push
pop
pop
xor
inc
gs
inc
out
push
inc
dec
or
movsl
jle,pn
fwait
es
xor
loope
add
in
mov
xchg
jp
push
rcrl
into
or
push
insl
jnp
clc
aad
ror
xor
shll
jns
xchg
cmpl
cmpsl
mov
push
stos
loop
xor
sbb
mov
add
cmc
orb
cmp
scas
bound
sub
cs
lret
lock
push
sbb
ljmp
adc
lea
mov
iret
out
push
stc
jno
adc
pop
mov
shlb
mov
notl
test
rorl
shl
mov
inc
loopne
loop
in
loopne
insb
mov
xor
idiv
xor
fcoml
lds
push
sbb
adc
repnz
lret
sti
es
inc
cmc
push
scas
out
rorb
add
dec
mov
push
repz
add
lahf
pusha
imul
adc
push
test
inc
ss
mov
mov
out
into
dec
mov
jge
inc
cmp
ror
mov
mov
jp
jno
xchg
cmpsb
add
pop
fisubl
mov
push
mov
out
dec
dec
mov
out
ljmp
lock
pop
or
jno
xor
dec
cwtl
pop
push
mov
cmpb
lock
push
das
fdivr
mov
clc
add
xor
xor
popa
in
dec
stos
das
push
nop
cmp
inc
mov
adc
add
popa
adc
add
sub
fsubl
xchg
lret
dec
push
mov
arpl
and
into
fistps
pop
test
std
aaa
sbb
orb
mov
ljmp
je
pusha
and
bound
add
and
cmp
inc
fdivs
sbb
xlat
or
icebp
jmp
lea
sbb
arpl
or
sahf
shll
sub
push
mov
subb
push
jno
push
dec
ret
add
or
push
inc
cmovne
mov
mov
aas
cwtl
test
push
arpl
push
mov
mov
lfs
add
push
mov
cmpsl
stc
dec
dec
cmp
out
xchg
push
subl
jno
les
jbe
mov
popa
mov
pushf
enter
je
scas
inc
ljmp
imul
movsl
and
mov
scas
dec
xor
loopne
jns
add
shl
into
sub
std
cmp
mov
fstpt
stos
les
cmpsl
cmpsb
xchg
and
lahf
lods
push
add
inc
lret
insb
dec
das
stc
int3
pop
sti
mov
push
lcall
lods
out
push
jno
mov
pop
push
push
or
push
sub
mov
mov
mov
lods
stos
cmc
pop
cmp
cmp
inc
mov
jecxz
xlat
shlb
fisttpl
adc
insb
dec
mov
pop
xchg
dec
and
lds
in
call
and
jge
cld
movsb
sahf
pushf
orl
scas
imul
nop
orb
js
pop
xor
push
pop
add
and
mov
dec
push
push
push
add
into
mov
arpl
cwtl
add
ljmp
push
jecxz
dec
xor
aam
dec
xorl
pop
pop
aaa
outsl
sub
out
pop
lret
loopne
in
stos
jbe
addr16
hlt
sti
mov
dec
adc
cmpsl
and
shlb
arpl
sub
push
or
je
push
seto
mov
push
cmp
orl
jne
pushf
mov
inc
inc
sub
mov
mov
insb
lods
xchg
insl
ds
adc
outsl
lods
rcrb
fwait
mov
jmp
cmp
jmp
test
int
xchg
sbb
ljmp
popf
orl
adc
add
xchg
adc
add
push
or
sarb
pop
mov
push
adc
mov
mov
roll
xorl
xchg
scas
inc
pop
mov
xchg
fisttpll
lea
insb
ret
push
pop
ret
fldenv
dec
and
sbb
add
xchg
inc
nop
js
jle
nop
ss
cmp
push
jmp
lods
inc
ss
sbb
pop
cmp
cs
mov
inc
loopne
add
sbb
inc
fiadds
inc
cmc
inc
jbe
xchg
mov
mov
jb
jne
inc
xorl
ds
jae
test
mov
sub
sub
lahf
ljmp
hlt
pop
xchg
shrb
sbb
add
fiaddl
hlt
stos
int3
mov
stc
mov
fiaddl
lods
ja
cmc
or
inc
fs
in
xor
xchg
xchg
cwtl
leave
mov
lret
lods
imul
and
or
fldt
mov
dec
mov
test
or
jp
sbb
ficoms
mov
inc
hlt
push
xchg
push
mov
cmp
iret
sub
stos
jno
pop
sub
cmp
mov
in
out
push
adc
fwait
xlat
out
mov
xlat
sahf
mov
xchg
or
xchg
xchg
mov
xor
jl
push
mov
jg
mov
negb
adc
fs
sub
ret
movsl
es
stc
outsl
das
fistpll
add
out
es
adcl
sarb
dec
in
sbb
fsubrl
xchg
mov
je
jae
in
stos
jecxz
subl
mov
sub
sar
mov
sbb
addr16
sbb
push
and
std
add
adc
int
das
xor
fldcw
idivb
scas
lods
loope
in
xor
sbb
jne
sahf
mov
ljmp
clc
sahf
rclb
add
sub
int
add
sub
push
cmp
stos
push
dec
mov
adc
xor
inc
add
lock
aam
ljmp
stos
pop
cmp
mov
push
adc
out
jnp
rolb
sbb
sbb
aaa
sbb
push
xor
dec
mov
imul
dec
add
or
test
xchg
cmp
pop
cwtl
lret
daa
cmpsb
jp
pushf
pop
insl
aad
mov
imul
jmp
mov
inc
mov
divl
adc
dec
sub
hlt
mov
insb
mov
bound
mov
mov
mov
pop
pop
je
adc
add
js
xor
add
inc
ret
or
in
clc
and
dec
cmp
pop
outsb
sbb
adc
sub
scas
mov
mov
mov
xor
dec
fs
xor
in
sub
mov
xor
jns
cmpsl
cmp
and
imul
int3
pusha
push
xor
cld
outsl
call
dec
push
ret
loop
xchg
in
xchg
dec
adc
out
jae
sarl
imul
mov
es
cmp
mov
imul
or
and
mov
neg
push
jnp
es
icebp
enter
pop
inc
or
sti
movsb
pushf
subb
test
add
mov
dec
adc
mov
shrl
push
jge
stc
insl
pop
fwait
stos
push
sub
mov
ret
add
and
push
inc
mov
or
xor
addr16
jmp
loope
mov
xor
fcomps
cli
insb
xor
out
adc
test
pop
fmuls
out
sbb
jl
push
ret
and
test
repnz
jp
insb
mov
jns
aam
mov
leave
cmp
inc
cmp
lock
imul
cmp
fldcw
out
int3
add
jbe
dec
push
add
and
mov
jne
mov
sbb
out
insl
mov
add
or
testl
in
mov
or
into
ljmp
jecxz
add
rolb
lahf
aad
or
fstp
xor
sub
pusha
sbb
mov
out
std
inc
shlb
enter
cs
jge
xchg
ret
sub
adc
cmp
xlat
loop
stos
xor
enter
mov
mov
mov
mov
pop
lock
ljmp
xor
mov
sbb
push
ljmp
xorb
mov
xor
push
sti
repnz
and
ret
std
sar
lods
mov
outsl
imul
xorb
xchg
movsl
cmc
xor
popa
shrl
int3
mov
push
pop
adc
pop
xchg
orl
dec
lods
aad
out
out
scas
nop
xchg
cwtl
sub
mov
lock
out
adcb
aad
xchg
cmp
test
push
pop
xor
add
mov
sub
icebp
jno
insl
jo
mov
add
scas
jp
lahf
pop
mov
pop
out
inc
xchg
jmp
jg
push
insl
and
shlb
jp
icebp
xchg
mov
into
xchg
bound
mov
add
xor
xchg
xor
hlt
adc
in
out
pop
xchg
scas
mov
ljmp
nop
push
inc
pop
mov
lahf
dec
jge
jno
ljmp
cmpsb
fidivrs
pop
fiadds
mov
xor
or
lret
jg
push
rorl
iret
fnstcw
imul
std
int
lods
fcompl
cmpsb
mov
mov
arpl
sbb
sbb
nop
push
incb
mov
add
mov
add
lret
stc
movsl
mov
jno
jl
ret
pop
inc
mov
es
lea
mov
mov
out
push
push
leave
lahf
push
cmp
imull
jl
inc
cwtl
and
roll
jp
test
inc
fsubl
out
xchg
jbe
lahf
sarl
ljmp
cmpb
jno
loopne,pn
xchg
cmp
cmp
pop
ljmp
mov
inc
ror
jno
jge
xor
or
and
mov
rcl
jle
jmp
ss
int
fldenv
jbe
jno
scas
pop
das
iret
cmpsl
add
xor
sub
jmp
push
mov
icebp
xchg
icebp
inc
jmp
fwait
bound
inc
xchg
sbb
xchg
aas
sub
inc
or
xchg
xor
jmp
fwait
addr16
cmp
aad
notb
mov
cmp
andl
out
cmpsl
daa
xchg
inc
addl
ret
jle
jge
mov
test
inc
push
sbb
leave
adc
or
leave
push
enter
scas
mov
nop
das
sbb
popa
sub
gs
rorb
and
fs
mov
cmpsb
test
sbb
jnp
decl
and
ja
daa
lret
cwtl
jae
adc
push
sbbb
nop
jno
or
pop
fdivl
jp
mov
cld
adc
int
cmp
clc
jl
mov
and
ja
mov
or
jecxz
nop
inc
arpl
cmovb
and
mov
xchg
sbb
mov
jnp
outsb
ja
mov
aam
add
dec
fwait
imul
lcall
pop
movsl
mov
adc
outsl
and
mov
mov
js
mov
sbb
notl
out
popf
daa
arpl
xorb
xchg
insb
push
sbb
enter
movsl
mov
or
inc
loope
out
stc
sub
test
fists
and
cmc
push
loope
fwait
dec
ffreep
les
cmpl
mov
sbb
test
fdivrs
inc
lods
add
xor
xor
sub
test
sbb
arpl
jmp
jno
outsb
xchg
or
dec
insl
or
stos
enter
iret
xchg
mov
orl
insb
stc
popf
cmpsb
jno
je
cmp
arpl
frstor
outsb
xor
sbb
push
fstpt
push
xchg
pop
sbb
ljmp
push
inc
mov
xchg
xchg
or
test
stos
xchg
imul
dec
adc
ret
sar
mov
mov
lods
push
pop
pop
cwtl
jmp
pusha
fisubl
push
xor
dec
in
addr16
cmp
jl
ja
popf
push
xlat
xor
inc
mov
hlt
scas
loope
cwtl
lea
mov
cmp
dec
or
mov
pop
mov
mov
add
fisttpl
jnp
adc
dec
inc
xorl
mov
iret
mov
lcall
xchg
mov
sbb
aam
mov
pop
or
sarb
or
or
ret
jmp
insb
add
vpsllw
push
shrb
bound
lds
push
cltd
ss
mov
and
test
loopne
test
mov
cmp
pop
movsb
mov
push
jae
gs
sarw
xor
inc
sub
sbb
bound
test
jg
xchg
mov
out
nop
ret
push
and
cltd
test
stos
jle
icebp
pop
jmp
pause
jno
sahf
dec
xor
inc
dec
mov
int3
push
mov
fidivl
enter
xchg
push
lods
mov
ds
xchg
inc
imul
sub
fs
sbb
in
push
pusha
das
dec
scas
movsb
sbb
in
fiaddl
mov
push
mov
mov
xor
int3
xor
call
int3
sbb
je,pn
pop
dec
cmpsl
mulb
dec
jns
or
dec
xor
lock
jg
mov
xor
pop
das
mov
jp
popa
adc
repnz
mov
imulb
mov
mov
sbb
cmpsb
shrb
pop
mov
insb
xor
stc
or
shlb
clc
data16
fistpll
jae
jo
sub
sub
enter
out
jb
jo
push
xchg
xchg
push
in
dec
in
outsl
jbe
push
out
shrb
cmc
jbe
lret
xchg
das
cli
add
pop
pusha
and
jb
fldl
or
imul
sbb
cmp
adcb
test
push
mov
rolb
dec
or
mov
ret
pusha
lcall
and
js
dec
iret
in
xchg
je
xor
push
jb
inc
dec
pop
mov
mov
push
xor
sbb
sti
es
add
sbb
mov
xchg
add
pushf
sahf
nop
mov
clc
pop
lcall
xor
jle
shll
test
imul
push
xchg
sub
test
ljmp
jno
sbb
sbb
sbb
adc
addl
xor
cltd
test
pop
mov
orb
scas
fldenv
adc
lret
jno
cld
ja
xor
dec
inc
fprem
je
cmp
lea
sbb
jb
xchg
loop
test
xchg
icebp
or
scas
rcrl
inc
inc
lods
adc
push
loopne
stos
into
dec
mov
pop
ja
xor
pusha
stc
cmp
in
stos
ret
ds
imul
ret
xchg
jae
imul
adc
test
dec
adc
jecxz
nop
iret
cmp
jle
dec
pushl
lea
mov
fcoms
xchg
fs
int3
cwtl
test
and
xor
xchg
fwait
das
call
sub
in
xor
loopne
cmp
lahf
hlt
xlat
push
in
aad
call
je
cmpsb
sub
jge
push
cmp
xchg
fisubs
clc
sbb
es
jmp
sub
enter
ret
adc
in
ja
pop
mov
sbb
cwtl
data16
xchg
stc
mov
cmpsl
dec
jp
xlat
ljmp
mov
push
or
test
ss
mov
in
mov
je
lds
and
mov
fxch
stos
fucomi
and
mov
div
sub
or
in
adc
push
cwtl
cmpsl
lcall
in
sbb
movb
pinsrw
or
mov
sbb
movsb
add
adc
lods
push
lds
out
adc
mov
loope
inc
inc
adc
dec
js
int3
cld
xchg
lahf
int
sti
mov
push
cmpsl
lock
jo
xchg
cmp
cmpsb
mov
ds
loop
flds
imul
xor
inc
outsl
xchg
mov
in
addr16
scas
sarb
or
sbb
fwait
nop
sub
xchg
int
inc
sbb
fisubl
sub
pop
es
int3
mov
push
inc
jae
rcrb
cmp
mov
orl
std
into
push
adc
and
in
pop
add
inc
das
not
mov
mov
je
jbe
mov
cs
fisubl
adc
loopne
jp
cmp
push
clc
fsincos
mov
dec
jo
mov
js
ds
fidivs
inc
les
mov
stos
sub
aam
jnp
rcll
sbb
cmp
sarl
out
sti
mov
nop
sbb
das
gs
in
mov
sub
cltd
into
add
mov
sub
jp
mov
xlat
mov
loop
push
push
popa
cmp
lret
aam
outsl
pop
add
mov
test
pusha
scas
push
hlt
ss
movl
mov
or
lahf
sub
nop
sub
lret
test
stc
addl
cmp
mov
rorl
lret
fwait
mov
leave
push
sahf
in
es
pop
jle
cwtl
or
scas
enter
push
call
inc
bound
cli
in
pop
dec
iret
pop
jp
jge
mov
pop
insb
mov
sub
cmpb
rclb
cmc
loopne
and
cwtl
arpl
ja
sbb
sub
dec
pop
mov
sbb
out
and
sbb
into
adc
pop
mov
fistps
add
iret
dec
and
mov
iret
mov
popf
xchg
inc
and
inc
adc
stos
push
jns
rcll
test
or
arpl
sub
mov
ret
cmp
mov
mov
inc
decb
sbb
dec
aaa
push
mov
scas
fwait
out
inc
adc
sbb
jle
aad
daa
pop
jp
pop
mov
adc
sarb
pop
enter
jno
in
in
add
dec
jmp
cmpsb
pusha
xchg
xchg
leave
add
insb
mov
incb
fwait
pop
xchg
les
out
fwait
jns
add
pushf
and
cmpsl
cmp
xchg
fdiv
jle
aam
jg
hlt
and
mov
sub
ficoml
mov
rcrb
cmp
mov
mov
iret
sti
stos
mov
xchg
sbb
movsb
sbb
push
insb
xor
popf
jbe
mov
mov
outsb
mov
push
jns
ljmp
mov
and
jnp
or
mov
pop
sub
jg
cs
scas
loop
enter
dec
inc
js
lds
xlat
test
fcomi
daa
or
push
stos
test
dec
push
inc
movsb
lods
ljmp
data16
push
push
dec
adc
mov
dec
roll
lret
inc
cmp
xor
std
imul
insb
or
sub
inc
pop
scas
lock
outsl
mov
mov
cmp
jnp
mov
cmovb
outsb
sarl
inc
sbb
pop
pop
int3
call
shrl
imul
fcmovnu
and
je
jge
jb
flds
jmp
mov
out
aam
into
dec
and
lret
mov
mov
fldenv
mov
push
icebp
rorb
hlt
sbb
jae
mov
stos
jg
xor
sbb
ljmp
dec
cld
repnz
aad
jmp
leave
push
adc
fldenv
sti
cmp
push
ljmp
ljmp
int3
cli
gs
inc
jmp
test
push
sbb
mov
shl
ljmp
leave
add
push
jp
mov
xchg
dec
fistpll
lods
clc
shlb
int3
in
mov
gs
push
icebp
loope
or
sbbl
add
ljmp
inc
push
xor
and
lock
mov
fucomi
cmpsl
out
xor
xchg
fsubp
xchg
test
arpl
dec
repz
xor
lods
insb
pop
test
mov
mov
icebp
inc
push
jge
dec
pop
cmpsl
cmpsl
or
sub
mov
inc
mov
aaa
inc
hlt
jnp
insl
push
sub
fdivs
aad
lret
cld
test
mov
jb
pop
iret
add
out
or
mov
cmpsl
push
lret
inc
add
sub
test
shlb
out
vcvtpd2dqx
sub
aad
cmp
dec
test
xor
loope
fisubrl
mov
xchg
mov
cli
int3
push
outsl
and
cmpsb
mov
dec
xor
sbb
mov
icebp
inc
mov
aaa
adc
push
out
mov
jae
xchg
and
daa
loop
dec
subl
inc
clc
xchg
push
cmc
cmp
iret
xchg
arpl
insl
int3
xchg
mov
adcl
andb
jmp
cli
push
ja
out
pop
mov
pop
iret
sbbl
stc
stos
gs
leave
adc
popf
sub
repnz
sbb
mov
mov
jb
stos
mov
lods
push
cmc
testl
and
push
out
pop
pop
push
cwtl
shlb
pop
or
xchg
or
jmp
jge
sbb
sti
fistps
add
mov
sub
hlt
mov
imul
cmp
gs
mov
and
into
xchg
inc
popa
daa
out
xchg
push
movsl
fmull
xchg
cs
pop
xor
mov
sub
icebp
jns
lods
mov
and
js
push
leave
ljmp
add
adc
push
rclb
scas
inc
jecxz
xchg
cmp
loope
jmp
rclb
test
or
dec
test
scas
rcll
addr16
cmp
ljmp
xor
mov
mov
dec
push
pop
add
xor
or
xchg
in
cli
mov
insl
lret
and
push
iret
push
or
movsbl
sub
mov
or
and
mov
sbb
pop
insl
shlb
ret
and
orb
sbb
xor
adc
or
sbb
mov
push
jo
dec
imul
aad
jg
out
mov
dec
fsubl
jns
cli
jle
add
sbb
mov
notb
or
adc
mov
mov
stc
lock
inc
jge
pop
pop
jno
sub
mov
sbb
xchg
pop
fimull
sbb
add
xor
movsl
ljmp
ljmpw
ret
pop
mov
repz
mov
test
fisubl
lahf
mov
mov
pusha
rcl
lcall
push
push
push
and
jnp
sbbl
inc
lret
mov
pop
push
fistps
lods
pop
dec
jg
mov
cli
push
mov
cmp
mov
inc
xchg
out
lret
fisttpl
arpl
aam
in
stos
mov
sbb
lds
adc
out
stos
add
addr16
out
rcr
mov
mov
push
adc
fldt
jmp
aas
into
push
adc
inc
cmpsl
call
cs
inc
aas
sbbl
adc
insb
push
sahf
enter
sbb
iret
push
lcall
movsb
push
ljmp
das
loopne
repz
cmp
data16
or
push
or
sub
test
shl
outsb
adc
push
repnz
ret
fwait
outsb
jns
test
in
pop
imul
ljmp
fld
test
push
xchg
jne
loopne
or
ja
mov
lock
outsb
shll
and
sub
inc
daa
rcrl
mov
jo
roll
xchg
ja
ficomps
sbb
xchg
repz
lea
test
imul
pop
int
sbbb
sar
addl
cmp
jbe
popf
rcl
xor
jb
imul
out
jo
ja
mov
inc
loope
xor
int3
sbb
sbb
aas
cmp
in
movsb
testl
push
insb
mov
or
add
adc
pop
cmpsb
jp
xor
les
scas
data16
mov
push
and
addr16
shl
loopne
enter
shl
comiss
rcrl
jp
stos
sbb
insl
std
jnp
pop
jns
mov
jno
adc
adcl
shll
xor
hlt
dec
mov
dec
mov
sub
lods
and
and
pop
movsl
stos
push
adc
xchg
je
repz
out
mov
xchg
cltd
xor
add
ss
cli
pop
rorl
pop
gs
popf
xor
add
mov
jmp
nop
inc
xchg
stos
fwait
pop
dec
mov
mov
arpl
pop
mov
call
cld
ficoms
xchg
pop
daa
pop
fimuls
jge
dec
push
ficomps
adc
scas
push
ja
push
mov
loopne
push
dec
fdivrl
imul
sarb
andb
cld
fdivrl
push
int
add
mov
pop
mov
iret
in
jge
int
jne
jae
out
pop
loope
out
inc
mov
decl
mov
ret
sub
mov
cmp
mov
mov
iret
cmp
sub
addb
and
sbb
pusha
mov
mov
xor
inc
inc
or
in
jg
shlb
adc
scas
sub
push
mov
xor
add
imul
mov
pop
or
popa
dec
jb
push
sub
push
pop
pop
mov
outsb
adc
out
cmpsb
push
jle
jno
push
sbb
cmp
push
in
sub
pop
aas
mov
int3
adc
outsl
xchg
clc
sbb
add
sar
in
mov
lret
add
data16
stos
or
inc
push
addr16
sarb
aaa
inc
add
outsb
push
xchg
and
push
push
mov
cmpb
lret
stc
dec
sbb
jle
pop
mov
lds
xchg
lea
into
leave
es
ret
jmp
mov
mov
sbb
aas
fwait
pop
dec
dec
int
sub
xchg
fcmovnb
mov
mov
jb
cmp
inc
iret
inc
dec
inc
mov
ljmp
nop
push
xchg
add
xchg
popa
loop
movsl
cwtl
out
and
lods
ss
insb
stc
cltd
pop
enter
mov
cmc
xor
clc
sub
fiaddl
arpl
jno
jmp
cmp
push
pop
mov
or
dec
inc
scas
push
orb
lea
jecxz
dec
test
and
fxch
insl
jge
lds
mov
pop
cmpsl
xchg
and
push
setbe
cmpb
outsl
ljmp
inc
mov
cmpsb
mov
sub
mov
out
dec
push
sub
xchg
adc
sbb
jle
sbb
jecxz
inc
xchg
test
xchg
xchg
mov
ret
fsubl
lds
xchg
sbb
mov
jg
xchg
dec
lods
loopne
mov
scas
cmp
hlt
movsl
sti
les
adc
adc
repz
sub
mov
xor
gs
cmc
cmp
ja
arpl
dec
mov
out
sub
mov
sarl
rcrl
mov
mov
mov
pop
js
shl
dec
xor
xchg
inc
sbb
int3
and
jle
ret
rolb
xchg
arpl
out
dec
jp
jae
rcrl
xchg
xchg
jo
pop
or
in
inc
jmp
insb
mov
lret
jne
push
pusha
fadds
inc
cmpxchg
sub
divb
sub
sbbl
enter
lret
xchg
jo
lods
sub
lahf
adc
jo
dec
cmpsb
sbb
stos
frstor
in
push
cmp
or
loop
sbb
sbb
or
pop
iret
addr16
and
call
into
push
pop
pusha
sub
insb
outsl
fisubl
sub
pop
outsl
push
mulb
popa
subb
inc
push
push
adc
imul
sub
shlb
and
or
ret
cltd
mov
jecxz
and
cmpsl
hlt
or
xchg
push
in
in
push
outsb
jmp
lret
subb
push
sub
xchg
movsl
or
cmp
cltd
test
fwait
push
rcl
test
sbb
neg
aad
fisubl
xchg
aad
jp
mov
xchg
out
jne
scas
dec
loopne
pusha
outsl
mov
movsl
cmp
out
mov
xor
and
xchg
push
push
cwtl
mov
pop
fwait
aad
xor
lret
push
enter
mov
jge
mov
push
sbb
xchg
out
mov
jnp
pop
jmp
xor
aas
add
lret
mov
xlat
or
dec
or
insl
fwait
jnp
jp
xor
add
out
negl
and
mov
dec
mov
stos
repz
scas
fcmovne
int
push
rcrl
and
pop
jge
ffree
pop
inc
fchs
xchg
push
aaa
xchg
mov
xlat
repnz
bound
sbb
cs
mov
or
mov
ror
push
xor
adc
sub
popa
rorb
rol
and
lret
test
in
out
dec
push
and
into
fistpll
enter
lea
sub
inc
fmul
and
xchg
je
sarl
aaa
pusha
scas
jns
fwait
xchg
dec
sbb
in
jp
pop
push
dec
pop
test
cmp
adc
iret
ljmp
es
and
xchg
pusha
and
sbb
aad
mov
iret
pop
sub
cmpsb
ret
inc
push
nop
pop
pop
lret
insb
cli
insb
jne
adc
test
aam
paddusb
xlat
mov
lock
mov
clc
add
cwtl
mov
cmp
add
cwtl
adc
aaa
sub
rorl
insl
shl
cltd
stos
fcoml
xchg
cmpsl
jmp
mov
pop
mov
fs
popa
jnp
adc
and
mov
lret
insl
or
js
push
push
xchg
movsb
push
movsb
divb
mov
cwtl
push
lret
dec
shrb
fadds
cmp
ja
or
jo
inc
lahf
mov
pop
and
ret
and
push
stos
outsb
and
fcom
iret
xchg
popf
std
stos
sub
mov
clc
ror
push
fnstcw
test
movsl
xor
or
adc
mov
jns
fidivs
cmpsl
das
sub
cmp
mov
out
mov
mov
or
scas
pcmpgtw
fucomi
ja
inc
inc
mov
mov
daa
adc
js
cltd
push
test
or
in
inc
mov
addl
push
aas
lods
cltd
cmc
and
lods
int
cmp
mov
inc
jle
movsl
scas
nop
pop
int
scas
lods
jnp
jae
movsb
lods
iret
xlat
pop
int
cmp
test
lds
nop
leave
and
imul
test
mov
push
pushf
mov
adc
sbb
inc
mov
rep
dec
sti
xchg
mov
push
cmc
add
cmp
xor
je
mov
mov
daa
sbb
fdivl
or
mov
popf
gs
pusha
dec
cld
mov
icebp
nop
sti
aas
pop
cmp
pop
lret
add
fcmovb
pop
adc
mov
std
push
stos
pop
sbb
jns
rcrl
fcmovne
sbb
jmp
sbb
mov
jecxz
push
rcr
sbb
and
jno
xor
push
scas
xchg
inc
decb
xor
mov
sbb
push
cmp
or
stos
jl
stc
xchg
cmp
out
inc
mov
fmull
jne
hlt
rorl
adc
push
xlat
fcomps
pop
xchg
cmp
xlat
mov
and
cmp
ficomps
xor
mov
and
enter
xchg
into
push
adc
test
push
cld
shr
dec
das
and
fbld
mov
dec
sub
dec
mov
jp
mov
adc
pop
inc
dec
jbe
int3
movsl
lahf
les
pop
adc
inc
push
adc
adc
jmp
aaa
mov
inc
pop
movsl
pop
cli
mov
sbb
leave
ja
push
out
repnz
adc
sub
jae
dec
pop
jno
fnstcw
add
sbb
dec
push
adc
mov
fistl
addl
mov
js
adc
mov
dec
ja
push
inc
ss
pop
mov
pop
fists
mov
movsl
mov
mov
sarl
xor
daa
mov
sbb
push
icebp
loop
dec
pop
sahf
js
addb
add
jns
jo
sub
and
pop
stos
pop
and
dec
repz
push
xchg
pop
inc
cmpsb
mov
lcall
push
pop
cld
mov
xchg
sarb
jmp
mov
bound
mov
jno
cmc
sbb
and
mov
out
dec
sti
inc
lock
xlat
xchg
mov
jo
dec
bound
xchg
push
fisubs
mov
leave
sti
mov
mov
lds
sub
push
repz
divl
rcl
cwtl
js
js
jne
xor
das
mov
add
sbb
mov
lock
cmpl
int
dec
call
push
sbb
jmp
xchg
sub
cltd
roll
stos
xchg
cmpl
ret
cmp
stc
xchg
popf
popa
xchg
cmp
cmpsb
fincstp
addb
mov
xchg
sti
jmp
fistpl
jb
push
sahf
sub
dec
mov
pop
jno
inc
mov
jl
sub
jnp
ret
push
ss
jecxz
loope
jb
pop
je
ret
xchg
loop
cmc
ret
inc
stos
xchg
dec
cmpsl
cwtl
mov
fidivl
decl
jae
je
jg
ds
clc
sbb
imul
mov
push
mov
leave
icebp
repz
cmp
inc
roll
push
jns
sub
ss
lods
outsl
mov
mov
dec
add
data16
into
repz
mov
push
mov
cmc
daa
ret
lahf
sbb
xchg
push
shll
adc
out
cwtl
add
pushf
sbbl
ja
mov
sbb
out
pop
fwait
adcl
ss
fldt
jno
push
push
push
xchg
xor
jmp
inc
add
xchg
sahf
int
cmp
stc
sti
popf
fsubs
push
mov
mov
or
int3
sbb
cmc
inc
nop
xlat
and
rclb
daa
icebp
in
push
push
stos
cmc
jl
jl
mov
lds
sti
sbb
dec
add
pusha
andb
data16
push
insb
dec
pushf
daa
mov
dec
mov
insl
repz
mov
cmp
aaa
dec
popf
pop
sub
and
aad
push
ret
mov
aas
aam
aaa
xchg
push
fmul
inc
mov
stc
sub
pop
sub
push
pusha
jp
mov
inc
mov
cli
push
jns
sub
pusha
sar
lods
scas
popa
das
popa
add
jp
sbb
xchg
movsl
dec
jae
add
test
movsl
xchg
push
cmp
and
int
lret
aas
pop
pusha
mov
roll
sub
mov
in
add
or
push
jnp
add
or
xchg
and
xor
nop
lahf
cltd
xor
shll
ret
imul
jno
mul
imul
xchg
add
cmp
mov
xor
and
or
inc
sub
mov
scas
push
inc
fcmovnbe
push
push
daa
lock
test
dec
sbbl
imul
sbb
ja
mov
in
data16
rol
sub
cwtl
int3
out
lcall
int3
xor
iret
das
add
xor
std
add
or
and
sbb
or
xor
mov
pushf
mov
and
lcall
or
mov
mov
pop
insl
aad
cmp
inc
push
aaa
popa
sub
jl
mov
dec
xchg
inc
add
ljmp
aaa
inc
mov
add
and
sub
or
out
dec
xchg
push
add
lcall
mov
xchg
mov
xor
xchg
aam
mov
push
testb
xchg
xor
pushf
or
pop
ds
sub
stos
dec
xchg
mov
stos
mov
or
push
adc
mov
bnd
xchg
clc
js
add
sub
jge
lds
mov
push
stos
cmc
adc
fisttps
sbb
sbb
je
mov
popf
dec
xchg
sbb
pop
insl
test
mov
mov
shlb
test
mov
mov
xor
push
mov
cs
cmpb
jmp
into
out
mov
xlat
ffree
lret
cld
jno
pop
and
pushf
pop
adc
sub
dec
cmp
or
lock
dec
or
aad
jecxz
sub
push
ss
in
xchg
jecxz
cmp
push
iret
pop
xor
es
int
or
adc
enter
add
mov
dec
cmp
mov
fildll
in
sub
jbe
fistps
inc
jl
dec
sbb
cld
into
dec
jb
mov
inc
xchg
dec
sahf
push
arpl
clc
out
inc
fs
xor
or
cs
mov
insb
aaa
ljmp
test
mov
int
out
xchg
push
push
mov
cmp
adc
mov
inc
push
leave
ljmp
fdivrp
hlt
fisttpl
pop
fcom
loopne
dec
sub
shll
lret
push
and
mov
add
pop
loope
xchg
mov
int
mov
pop
xlat
push
loope
pop
jle
ss
pop
jne
push
jnp
adc
jmp
and
rol
scas
adc
xor
mov
out
mov
xchg
xor
and
mov
push
gs
sbb
mov
aas
dec
das
sbb
ljmp
mov
xor
cmp
sbb
xchg
xchg
ss
jno
repnz
mov
out
inc
out
dec
mov
sub
rorb
leave
push
stc
test
fbld
push
out
xor
aas
mov
jecxz
jle
nop
lods
push
sbb
call
adc
cli
jle
sub
movsb
sbb
xor
ja
dec
adc
imul
mov
pushl
pop
test
inc
jecxz
ret
int3
adc
sahf
push
mov
inc
xchg
lret
sub
scas
cmp
or
std
adc
fists
ror
sbbl
dec
mov
cmp
sbb
test
ss
cmp
adc
sahf
xlat
sub
icebp
sbb
shll
and
add
push
daa
push
push
xor
xchg
mov
movsb
and
in
add
adc
mov
pop
stc
push
jo
addr16
push
out
cs
dec
push
mov
or
xchg
outsl
dec
fidivs
xor
mov
add
mov
xor
push
inc
fwait
loop
or
mov
pop
mov
in
scas
push
fsubl
nop
js
leave
and
lea
mov
and
cmpb
sub
mov
push
fs
push
loope
add
enter
dec
jmp
jecxz
cmp
cmp
mov
cld
adcb
cmpsb
inc
mov
out
popf
aas
je
xor
mov
push
cmp
jb
pop
mov
dec
test
cwtl
lret
add
mov
or
and
lcall
mov
sub
cmc
push
into
xchg
xchg
jle
jns
popf
hlt
xorl
inc
repz
pop
xchg
outsb
jbe
push
pop
out
mov
lcall
imul
fwait
sbb
mov
cld
loop
subl
fdivp
aam
mov
shll
mov
sbb
mov
sub
and
adc
jmp
sbb
int
stos
sub
andb
xchg
js
mov
and
lcall
jp
sub
sub
adc
pusha
push
stos
imull
sahf
or
adc
lcall
lods
dec
and
inc
jae
repz
xchg
mov
and
cld
mov
nop
mov
pushf
hlt
out
jb
sbb
mov
mov
xchg
pop
cmpsl
lock
xchg
lds
stc
mov
jecxz
adc
aad
cmpsl
inc
les
cmpsb
mov
pop
mov
adc
arpl
addr16
movsb
and
add
icebp
cmp
sub
dec
cltd
mov
lods
jmp
hlt
and
in
xchg
mov
hlt
call
inc
sub
push
mov
xchg
ficompl
sbb
xor
dec
fs
es
insl
sbb
sahf
out
adc
jp
loop
test
or
cmpsl
sbb
lods
xchg
int
aad
in
and
and
jmp
mov
fisttps
cs
cmp
daa
lcall
adc
and
repz
cmp
daa
sub
rcrl
adc
or
mov
rcrl
into
push
cmc
xchg
pop
or
data16
add
lds
es
insl
sub
mov
sbb
lret
fidivs
cld
ret
movsl
imul
rol
aad
mov
mov
arpl
mov
dec
rorl
inc
cmpsl
dec
fcoms
add
mov
rcr
ror
das
or
adc
cmp
stc
mov
push
fcmovne
mov
scas
cmp
outsl
mov
push
shr
outsl
repnz
fdiv
shl
out
push
into
xorl
fs
das
adc
mov
sub
inc
mov
mov
push
aad
dec
push
pusha
movsl
lcall
dec
cmp
stos
call
scas
scas
fmul
pop
lret
pop
xchg
fldt
ja
lods
shlb
mov
ret
xor
push
loop
sti
jae
ja
loope
cmpsb
pop
cmp
sub
outsl
inc
push
push
cld
xchg
lcall
scas
xchg
cmp
adc
jno
inc
lret
pop
and
sbb
arpl
incb
stos
cld
jecxz
inc
cmpb
popa
shlb
iret
scas
movsb
mov
lret
aad
pop
les
sub
mov
scas
data16
je
cld
mov
inc
idiv
fs
push
inc
stc
test
sbb
mov
jg
cmp
js
cmpsl
sub
les
jns
mov
xchg
inc
pop
pop
gs
hlt
shlb
aas
dec
loopne
xchg
movsl
repz
les
ffree
push
jnp
das
insb
or
pop
xchg
jnp
movsb
faddl
jmp
jmp
movsl
push
dec
negl
les
ss
inc
in
adc
push
mov
pusha
aad
xor
roll
aaa
iret
std
inc
adc
aaa
repnz
cmp
into
mov
mov
mov
cmc
out
std
sbb
pop
sbb
xchg
js
lahf
je
sbb
xor
jnp
ljmp
scas
mov
xor
fiadds
test
jmp
cmp
push
sub
cltd
std
sbb
xchg
xchg
and
loope
imul
mov
loop
pop
fucom
xchg
sbb
fisubrl
stc
xchg
dec
add
mov
int
int
out
push
stc
stos
jp
push
insb
inc
lret
or
pop
pop
in
out
sbb
cmp
mov
push
inc
iret
out
scas
jg
aam
adcb
adc
sbb
repz
and
ret
inc
mov
test
jno
in
xor
dec
sub
cwtl
in
inc
imul
pop
push
pop
mov
pop
std
add
out
pop
ror
dec
fwait
inc
out
out
adc
cmp
pop
adc
test
loopne
inc
ret
out
mov
jle
in
psllw
pop
mov
and
aaa
incb
or
mov
inc
xchg
into
stos
dec
dec
scas
shl
cmp
cmpsb
pop
inc
in
sub
imul
adc
cwtl
mov
ret
repnz
shl
sbb
sub
in
xchg
test
and
add
lahf
push
bound
gs
ret
dec
lods
pop
test
or
dec
rcl
les
aaa
and
sub
adc
jns
loopne
pop
mov
cli
ret
es
loopne
mov
jb
push
nop
loope
jmp
ds
repz
xor
and
sub
pop
pop
pop
adcl
jl
xor
lods
ret
dec
outsb
inc
shrl
lock
in
adc
jb
xor
cld
or
xchg
adc
dec
stos
sahf
jb,pt
adc
sbb
pop
xchg
fwait
jo
repnz
add
in
mov
fimuls
inc
lahf
insb
popa
sub
enter
call
fsubrl
push
ror
dec
push
cmpsb
push
shll
call
aaa
int
lcall
xchg
xchg
xchg
iret
pop
rorl
or
dec
jecxz
bound
jmp
pusha
out
xor
xor
mov
cmp
std
imul
cmp
clc
xor
fldt
enter
aad
stc
das
jae,pt
rolb
test
ljmp
ljmp
jmp
in
add
outsb
aaa
std
sbb
push
xchg
lret
jmp
data16
neg
ja
xchg
std
rcll
xor
mov
pop
scas
in
in
lret
std
push
mov
bound
sahf
jle
or
add
fisubl
pop
mov
out
push
orb
adcb
cmpb
jb
sahf
pop
les
fwait
cmp
mov
in
shll
adc
rclb
imul
out
cmpsb
loopne
mov
mov
jo
pop
push
out
mov
xor
js
and
push
sahf
imul
or
out
mov
mov
mov
lret
das
cltd
xchg
stos
and
leave
or
inc
mov
mov
lret
jmp
fnstsw
popa
fcomps
dec
sub
inc
mov
enter
push
xchg
push
dec
faddl
mov
frstor
lock
add
push
push
jge
movl
cmp
nop
or
jl
mov
rclb
mov
add
dec
sub
push
es
lock
ret
aam
lret
sahf
pop
inc
in
out
in
inc
add
cltd
and
mov
jg
into
lret
mov
mov
sbb
sub
xchg
mov
or
ret
fiaddl
push
xchg
push
mov
xlat
or
stc
push
loope
stos
sbb
insb
pop
sbb
jge
mov
mov
jg
jle
adcl
shl
push
cltd
add
xor
add
jmp
pop
xchg
fcoms
decb
cli
sbb
pusha
fwait
cmc
mov
jge
daa
mov
fisubl
or
push
cmp
jo
daa
pop
scas
xor
stos
adc
sarb
adc
mov
insl
dec
push
rcll
cltd
jo
imull
adc
cmpsl
cmpsl
add
dec
cmp
outsl
imul
push
std
cmpsl
divl
pop
mov
ficompl
decl
hlt
js
sti
cmc
cltd
or
and
pop
enter
fdivrl
mov
sbb
push
cmpb
int3
pop
test
xchg
mov
fsts
and
cmp
xchg
jle
push
cmpb
xor
icebp
mov
in
shl
cmp
push
nop
in
inc
lcall
pop
sub
cmpsl
cmpsb
xchg
or
mov
test
inc
sbb
fs
cmpsb
mov
hlt
loopne
out
cld
enter
ss
push
xchg
mov
pop
call
insl
push
jbe
xchg
or
and
stc
subl
mov
fcoms
nop
test
mov
and
mov
inc
or
add
dec
in
sahf
les
in
push
jb
lods
mov
sbb
xchg
dec
sub
loope
stos
lret
dec
mov
pop
shlb
aam
pop
cltd
jne
sbb
xchg
sbb
jns
js
and
fstl
rorb
out
je
lods
lahf
lods
int
dec
push
outsl
xor
sbb
pop
sbb
adc
stos
call
mov
xor
movsb
fisubs
leave
mov
je
out
ds
cmp
aaa
add
mov
mov
push
lahf
rorl
or
mov
lock
daa
fistl
in
test
xchg
es
fcmovbe
lock
lret
push
aad
mov
arpl
pop
movsl
fists
sti
inc
xchg
test
or
jns
mov
popf
jl
enter
push
js
xor
loope
mov
xchg
rolb
or
aas
ret
xlat
adc
and
cld
mov
cmp
mov
rolb
push
int3
pop
lods
js
xor
pop
dec
mov
ja
insl
scas
xchg
mov
sub
inc
cli
xor
push
inc
sbb
fistpll
inc
cmp
inc
push
cltd
add
jnp
andl
andl
sbb
push
mov
push
add
push
stos
xchg
push
pop
xorb
daa
cld
push
fwait
xchg
loopne
insb
outsb
leave
xlat
pop
fstpt
fcmovu
lret
lcall
jb
adc
insl
clc
xor
pop
std
rcl
rol
test
leave
fs
add
mov
pop
fwait
sub
xor
into
push
stos
dec
sub
push
mov
out
cmp
ljmp
inc
sahf
add
pusha
mov
aam
cld
sti
into
pop
outsl
mov
xorps
cmp
mov
mov
inc
push
pop
imul
jae
lds
and
push
fsts
les
dec
or
lea
jne
das
adcb
adc
jge
cmp
and
outsb
add
in
lds
mov
pop
jmp
rcrb
xor
and
imul
or
or
dec
jnp
sbb
xor
mov
mov
insb
mov
pop
cltd
mov
addl
mov
fldcw
sbb
push
xor
into
add
add
in
lds
inc
xor
mov
leave
lcall
ljmp
cmp
add
pop
lcall
push
push
mov
lahf
js
sti
jns
sub
fmuls
pop
mov
jle
rol
mov
mov
push
in
jbe
jno
adc
xchg
ja
adc
jns
adc
xchg
adc
adcb
or
xor
je
icebp
jl
fcmove
cmc
sti
or
sbb
and
or
popa
sti
stos
movsb
movsl
push
imul
in
pusha
xor
mov
data16
daa
jbe
je
mov
xlat
mov
cwtl
mov
sbb
into
xchg
add
jnp,pn
clc
xor
imul
sahf
push
mov
xchg
pop
ficoml
movsb
xor
xchg
inc
sbb
sbb
das
cmc
xor
sbb
rcl
lcall
loopne
cwtl
adc
cmp
stos
inc
push
inc
fsubl
fs
jmp
xchg
push
cmp
fstpl
pushl
lds
mov
add
scas
scas
std
mov
inc
ja
fs
sbb
jle
mov
ds
mov
pop
repz
jmp
notb
jecxz
ss
loop
cld
movsl
dec
mov
xchg
xor
leave
lahf
fwait
es
cmp
fsts
pop
inc
ret
dec
into
imul
jno
jb
adc
xchg
add
mov
push
cmp
rcll
mov
rorl
cmp
and
adc
mov
dec
pop
xchg
dec
rorl
cmpsb
iret
sti
cmp
ret
and
xchg
mov
mov
pop
push
add
jne
cmp
mov
jns
stos
xchg
adc
mov
pop
ljmp
adc
cwtl
mov
cmp
rolb
sub
inc
pop
int3
in
add
jno
xchg
mov
shll
or
sub
iret
mov
xorb
xor
cs
xchg
push
shll
pusha
rolb
ja
int
mov
hlt
lock
in
or
jne
inc
in
pop
mov
movl
pop
in
pop
loope
inc
sar
mov
mov
inc
movsb
clc
mov
jge
xchg
pop
push
dec
loop
push
notb
pop
mov
sub
xor
roll
and
dec
sbb
xor
insl
mov
aad
and
imul
je
add
addr16
mov
shlb
sarb
adc
in
or
shrl
adc
sbb
mov
pop
pop
or
test
sbb
xorl
jmp
add
es
mov
dec
push
pop
pop
mov
and
xor
mov
dec
or
dec
inc
sbb
out
jne
sbb
sbb
push
ljmp
pop
jmp
mov
adc
shrl
cmp
add
fwait
sub
cmp
xor
frstor
les
bound
popa
mov
sbb
xor
dec
pop
push
mov
test
dec
test
add
xor
mov
repz
outsb
mov
mov
jno
adc
or
sbb
fmul
sub
inc
jge
jecxz
mov
cmp
pop
shl
or
add
pop
dec
mov
and
or
push
mov
insl
lcall
mov
sub
xchg
jne
iret
out
icebp
xor
lock
stos
sub
jnp
ja
lods
pusha
cmp
pop
xlat
lods
popf
inc
test
xchg
mov
lds
aam
int3
bound
push
stc
cmp
push
sub
push
mov
mov
add
aad
xor
inc
jge
scas
push
mov
jbe
xchg
cmp
test
dec
ljmp
inc
mov
std
sarb
ds
repnz
daa
js
xor
mov
dec
test
xchg
repz
push
jp
or
daa
inc
mov
cmp
pop
mov
bound
addr16
sarb
clc
hlt
mov
inc
into
pusha
mov
incl
cmpsb
outsb
bound
int
or
jle
mov
aaa
xor
xchg
push
pop
dec
ja
cvtps2pd
add
repz
mov
dec
push
icebp
adc
pusha
jb
jecxz
mov
or
icebp
int
stos
mov
es
push
or
push
mov
lds
outsb
lds
popf
and
lcall
sub
lds
sbb
lock
sub
scas
pop
rol
out
test
dec
popf
leave
sub
push
inc
and
addr16
into
daa
inc
into
dec
sti
cmc
sub
pop
and
stos
mov
divb
imul
or
pop
mov
ret
shll
inc
sub
lock
pop
add
cmpsl
test
jle
and
sub
inc
popa
mov
adc
add
aam
pushf
jb
mov
imul
pusha
movsl
outsl
inc
push
mov
popa
lcall
clc
jmp
sub
lods
in
mov
mov
and
daa
sbb
xlat
aam
cli
mov
shlb
and
or
cli
in
outsl
dec
cmp
push
adc
mov
lret
inc
aad
or
imul
mov
jne
leave
addr16
jl
fsubr
scas
xor
jns
add
xor
enter
lock
mov
fcomps
shrb
add
add
icebp
orl
push
nop
dec
clc
push
inc
stos
aam
adc
mov
in
fs
push
xor
push
cmpsb
nop
fdivrs
jge
mov
stos
aad
cmp
ja
lock
ret
pcmpgtb
ret
push
xlat
aas
push
jne
aam
and
sub
sti
pop
enter
mov
mov
pop
in
jb
cmp
sbb
cmp
jnp
jae
in
scas
je
jmp
fwait
in
aaa
sbb
neg
mov
call
sub
jno
dec
stos
sarl
mov
int
scas
out
jne
push
mov
cs
pop
mov
xlat
cmp
aas
insl
mov
call
inc
xor
xchg
lods
int
cld
sub
push
or
stos
dec
xlat
subb
aad
adc
mov
xchg
xor
xlat
jmp
push
ljmp
in
pushf
inc
es
lret
xchg
sub
ss
push
and
data16
cmp
mov
cld
movsl
sub
dec
push
or
js
jmp
jnp
cmp
aas
pop
xchg
mov
inc
out
add
cmp
pushf
sub
rorb
and
or
scas
loopne
pop
test
mov
stos
sub
out
mov
outsl
inc
rcrb
push
aad
add
push
dec
xchg
lret
cmpl
mov
pop
add
push
in
fnstenv
xchg
test
push
cmpsb
sub
in
push
sub
inc
mov
test
and
sbb
and
push
add
xchg
out
adc
dec
jecxz
imul
xor
jae
js
cltd
inc
mov
push
mov
jns
sar
mov
dec
cld
cmpl
mov
mov
xchg
es
sti
call
shrl
insl
aam
decb
stos
pop
mov
insb
lods
mov
std
in
out
dec
lcall
adc
push
out
mov
add
frstor
int
das
push
fadds
mov
nop
push
cmp
cmp
js
push
mov
inc
or
push
xor
xchg
add
jbe
inc
mov
dec
ja
jl
jbe
imul
xor
mov
jg
jmp
mov
adc
sub
dec
cltd
jmp
xchg
pusha
repz
seto
cmp
pop
mov
inc
mov
rcll
jp
or
out
mov
inc
sub
or
xchg
std
xchg
adcl
daa
stos
cmp
pushf
or
mov
adcl
sbb
pop
xchg
lret
lods
in
cmpsb
cmpsb
cltd
adc
jo
jns
test
scas
cmp
movsl
js
add
aad
sbb
push
mul
fs
test
stos
xor
jns
jge
or
loop
add
xchg
xor
insl
mov
out
and
pop
mov
out
popf
mov
mov
pop
mov
and
pop
mov
dec
lods
aad
clc
data16
mov
cltd
inc
inc
jne
pop
jno
lcall
sub
aad
fcomp
and
aam
dec
sub
sub
jnp
lds
fnstsw
jmp
jbe
notb
dec
dec
add
push
rcrb
adc
fisubrs
fnstcw
aas
cmp
in
insb
cmp
cli
mov
in
insb
push
test
faddl
fildl
popa
jmp
cmp
adc
fildl
stos
cmp
sahf
loope
adc
jbe
inc
js
bound
rcrb
cmpsl
mov
fnsave
dec
out
jns
jne
pusha
insl
mov
or
mov
ds
mov
or
mul
xor
cmp
push
inc
add
mov
in
out
aam
xchg
mov
repz
or
aaa
in
push
aam
ds
inc
add
fnsave
mov
adc
add
add
pop
dec
imul
stc
cmpsl
fisubs
inc
insl
lods
mov
imul
adc
fimull
out
dec
xor
inc
pop
pop
push
push
cltd
bound
push
ret
cmp
push
sbb
mov
shlb
cltd
addr16
cmp
xchg
movsb
add
loopne
and
in
aam
xor
shll
and
cmpsb
std
pushf
lret
data16
leave
cld
jp
jg
prefetchwt1
std
ret
insb
sti
mov
cmp
std
mov
mull
adc
xchg
pop
mov
mov
cmp
push
ja
icebp
sbbb
sub
cmc
data16
jmp
ljmp
sbb
data16
mov
adc
jl
inc
aad
sbb
daa
xchg
enter
fidivs
mov
mov
push
mov
test
stc
mov
out
pushf
push
inc
push
add
push
pop
mov
push
aaa
lahf
sub
and
adc
call
idivl
cmp
pop
stos
mov
pop
xchg
mov
xor
adc
clc
sti
loop
cwtl
mov
or
iret
and
mov
les
jl
lods
mov
sub
je
movsb
sub
and
fldz
cmp
or
sbb
add
sbb
cmp
push
and
cmpsl
xor
std
dec
add
jecxz
sahf
add
leave
addl
xchg
fidivs
outsb
lods
xchg
jmp
mov
inc
rcll
mov
dec
ret
shl
xchg
push
push
in
jns
dec
pop
jnp
sbb
mov
mov
dec
mov
cld
stos
jp
xor
cwtl
pop
imul
add
popf
mov
cltd
repz
xchg
xor
scas
pushl
popf
sbbl
in
bound
testb
sbb
dec
cmpb
bound
or
cmpsl
and
test
insl
into
mul
push
xchg
push
pop
pop
pop
xlat
pop
outsl
sbb
xchg
sub
stos
pop
lds
push
mov
lret
sbb
xlat
jl
lea
mov
inc
jge
sbbl
mov
dec
dec
loope
lds
sub
pushf
in
xor
lret
cltd
sar
sbb
jb
xor
pop
or
cld
dec
push
jno
cmpsb
mov
mov
in
lods
push
dec
sbb
test
popf
jns
fstpt
stc
cltd
adc
je
call
out
or
jmp
cli
add
out
push
pop
sub
data16
rol
and
dec
enter
loop
mov
mov
add
cmp
cld
dec
pushf
and
dec
push
pop
cmp
inc
add
cli
jp
sbb
jb
xor
mov
sbb
icebp
xchg
nop
lcall
push
adc
cmp
loop
sbb
mov
lcall
xlat
cmc
mov
gs
pusha
jne
mov
adc
scas
aad
movsl
cs
pop
shl
pop
das
sub
add
mov
jl
adc
out
repnz
xor
sub
mov
dec
gs
fildl
pop
ljmp
jbe
or
lea
lcall
imul
sub
pop
pop
out
stos
insb
bound
jp
arpl
mov
pop
insb
or
in
inc
mov
bound
inc
xor
movsl
xchg
jp
mov
jbe
mov
call
jp,pt
pop
mov
cs
jno
sahf
fs
lret
push
add
cltd
push
sbbb
fistpl
pushf
xor
shll
cs
es
mov
lods
adc
gs
dec
in
out
mov
pop
push
test
call
jb
xor
mov
push
mov
dec
sbb
or
stc
test
fnstenv
pop
lret
test
addr16
mov
sbb
xchg
xor
dec
dec
sub
incl
je
pop
inc
mov
imul
push
add
hlt
fsubr
rcrb
dec
lret
js
mov
mov
and
add
out
mov
push
pop
int3
outsb
xchg
sbb
sub
push
dec
push
and
dec
or
sahf
cmp
aaa
ljmp
pop
jae
subl
clc
test
fwait
dec
cmp
push
or
subb
sbb
nop
and
cmp
ss
bound
int3
bnd
pop
jno
inc
rclb
jno
outsl
push
mov
mov
out
pop
loope
push
push
mov
push
int
cld
pop
sub
lea
or
dec
add
sbb
and
aam
and
and
pushf
lret
dec
fwait
push
jecxz
roll
jl
fldenv
push
mov
sub
mov
and
jb
fldenv
rol
std
pop
je
in
cwtl
scas
int3
and
mov
fisttpl
pusha
mov
addr16
mov
out
mov
xchg
sbb
xorb
push
fdivr
jo
pop
incb
jns
out
cmpsb
adc
data16
inc
mov
mov
test
jg
sub
add
add
dec
bound
lret
lock
jp
xchg
push
jo
rolb
ljmp
push
popf
stos
fucom
add
inc
scas
into
lock
mov
cmp
cli
mov
sub
mov
adcl
and
daa
inc
mov
jno
cmp
lcall
mov
mov
xor
mov
pop
ficoml
dec
dec
push
gs
and
push
add
bound
std
jmp
mov
dec
add
ret
sbb
or
test
add
fwait
sbb
je
push
add
mov
ret
mov
enter
xchg
or
xchg
mov
icebp
test
mov
fsts
pop
fcomi
and
push
in
sbb
adc
adcb
mov
mov
push
jnp
aad
jno
out
cli
mov
inc
aas
loopne
or
fs
int3
out
mov
mov
xor
jle
insl
dec
pop
jmp
nop
stos
add
xor
adc
adc
xchg
inc
mov
cltd
mov
addr16
dec
mov
sbb
out
mov
movsl
das
imul
scas
clc
cmc
insl
add
test
lods
sub
mov
xchg
fisttpl
inc
lds
insb
pop
sarl
lock
adc
mov
pop
mov
jecxz
mov
jp
cs
addr16
mov
push
push
stc
push
xchg
jns
lahf
shlb
ret
pushf
scas
call
lods
je
ljmp
movsb
pop
cmc
or
add
and
test
sub
out
data16
mov
jns
insl
mov
and
mov
jg
mov
repnz
les
popf
mov
xchg
xchg
and
adc
int
daa
jl
test
add
cltd
ret
loop
add
mov
jecxz
cmp
scas
lods
or
sarl
jo
add
loopne
mov
inc
mov
xlat
pop
ret
sbb
add
adc
and
das
xchg
xchg
jp
push
adc
fisttpll
sub
fcmovb
cli
add
dec
and
pop
inc
es
por
call
std
dec
mov
jns
out
std
mov
nop
into
adc
lods
lods
mov
sbb
lock
jmp
adc
ljmp
mov
and
pop
cmpsb
or
jmp
xor
sbbb
dec
add
fs
jmp
xchg
pusha
mov
leave
sbb
imul
sahf
gs
shlb
mov
or
pop
js
adc
sub
mov
cmp
inc
mov
leave
rcll
mov
sbbb
mov
arpl
addb
jmp
pop
ret
pop
jl
adc
lcall
xadd
xchg
or
sbb
pop
hlt
pop
call
gs
out
xchg
inc
pop
mov
mov
pop
lods
jnp
push
mov
jp
lods
repz
into
mov
mov
out
add
pop
daa
xchg
cltd
xchg
xlat
stos
pop
mov
mov
imul
cs
int3
clc
push
je
pop
ret
mov
mov
iret
icebp
lcall
stos
sub
sbb
adc
push
in
out
xchg
add
cmp
outsl
cld
xlat
lahf
mov
inc
and
sub
cmp
insb
mov
pop
loope
cltd
stc
sub
pmaxub
dec
rep
dec
or
insb
xchg
cs
sbb
aam
orl
cmp
imul
test
dec
movl
pusha
clc
call
or
or
testb
repnz
lods
scas
dec
dec
stos
rcll
mov
pop
test
pop
add
add
lahf
js
mov
gs
or
popf
xor
add
call
ljmp
mov
jmp
cli
mov
leave
xor
mov
repnz
aas
adc
pop
jle
sahf
cwtl
repz
adc
mov
mov
xchg
jmp
mov
test
ret
stos
popf
test
sub
push
addr16
outsb
test
xor
xor
clc
fisttpl
adcb
shrb
sub
xor
jp
insl
enter
stos
or
push
push
jnp
testl
xor
aas
mov
jp
mov
movsb
xor
sub
pop
loopne
adc
lds
xchg
push
xchg
insl
add
es
orl
add
pop
dec
popa
aas
int3
mov
shlb
js
dec
xlat
mov
mov
pop
cmp
lods
mov
mov
pop
int
lods
sbb
push
sbbl
jle
cmp
lcall
mov
popa
outsl
int
add
rolb
mov
roll
jb
loope
adc
cmp
adc
sbb
inc
js
adc
push
jg
sbb
mov
loope
ss
leave
jle
pop
jge
arpl
lahf
fildl
test
out
xor
cmp
mov
mov
cmpsb
cmpsl
and
in
sbb
adc
in
lods
repz
scas
xchg
jmpw
in
mov
jg
inc
or
cmpb
lock
xchg
enter
test
rcrb
stos
test
sbb
mov
xchg
sbb
mov
scas
mov
push
jecxz,pt
in
shll
pusha
lret
xor
in
cmp
ret
jnp
and
or
lods
jno
add
sbb
cmpsb
jp
push
jmp
add
mov
fs
mov
pop
push
adc
xor
in
cmp
cmp
pop
mov
cmp
mov
popf
xchg
repnz
cwtl
pop
or
loop
sub
mov
xchg
in
push
add
int
subb
or
mov
imul
daa
dec
push
movsl
movsb
repz
pop
mov
jmp
dec
xor
inc
mov
adc
pop
sarl
sbb
out
or
push
inc
mov
outsl
push
push
mov
sbb
fwait
std
dec
mov
xchg
mov
mov
testl
mov
cmp
gs
jg
push
fisttps
or
in
les
mov
inc
mov
push
sahf
jg
in
or
mov
imul
xlat
js
sub
and
pop
and
insl
cmc
or
or
mov
inc
and
cmp
mov
cmpsl
push
xchg
mov
es
cwtl
mov
pop
loopne
inc
sbb
xchg
fsubrl
out
mov
sub
arpl
std
sbbb
sub
mov
inc
ss
lret
or
xchg
scas
mov
movsl
jne
icebp
lds
imul
icebp
dec
ret
and
imul
dec
pop
push
dec
mov
sub
stc
loop
mov
adc
ljmp
aaa
mov
jns
sub
and
add
call
int3
test
push
stos
mov
xor
xor
pop
popf
pop
hlt
gs
pcmpeqb
pop
scas
push
jnp
imul
sub
cmp
mov
cmpsb
jo
pop
or
xorl
ja
or
inc
jae
pushf
mov
aaa
aam
fildll
icebp
xchg
lcall
push
add
fbstp
push
jo
sbb
icebp
jne
lock
test
adc
icebp
sbb
sbb
lds
repz
mov
pushf
sarl
ret
stc
inc
call
jb
inc
sarb
jle
adc
enter
mov
push
mov
sub
jo
lret
adc
addr16
sub
and
cmp
gs
jnp
pop
or
leave
ss
add
stc
cmp
mov
mov
jp
mov
dec
shll
int3
movsb
add
jns
stc
lcall
out
dec
in
add
xchg
arpl
mov
jmp
mov
mov
fnsave
sarb
jb
mov
sbb
aad
leave
jae
insl
fcomps
mov
lret
jmp
mov
ljmp
mov
imul
jmp
mov
inc
sti
cmp
lret
mov
mov
sub
enter
mov
rclb
lea
rclb
cld
and
repnz
and
and
xchg
push
push
je
mov
adc
fisubrs
popl
jb
lret
dec
and
xor
mov
cwtl
or
test
cmp
mov
push
dec
dec
gs
pop
add
stc
mov
sub
xlat
out
jo
in
and
pop
scas
jbe
or
cld
rcr
cmp
rorl
pop
insl
fdivr
ret
leave
std
in
jp
xchg
mov
jle
cltd
movsb
popl
js
jnp
dec
cli
cmp
inc
fdiv
stos
jp
stos
fwait
aaa
xchg
es
and
mov
jmp
xchg
cmp
mov
sub
adc
add
out
mov
fnstenv
add
int3
xlat
mov
cmp
into
mov
movsl
dec
xor
pop
pop
jmp
subps
test
sbb
sub
sub
mov
xchg
dec
dec
fistl
add
or
and
cmp
je
std
push
xor
jbe
jo
rcll
jp
lock
pop
sbb
cld
add
je
inc
or
call
adc
jl
std
cwtl
lods
add
loopne
sub
dec
leave
stos
mov
sbb
jge
mov
push
dec
gs
mov
sbb
fs
dec
adc
xor
fst
movsb
clc
imul
int
sbb
bound
mov
lock
aaa
sbb
movb
dec
adc
xchg
scas
aaa
aad
rcl
shll
xchg
shlb
cmp
call
inc
add
inc
lods
push
dec
sub
inc
int
js
mov
hlt
ds
mov
repnz
cltd
lahf
mov
cmp
fwait
cmc
fsts
movsb
dec
aas
inc
pop
sarl
and
mov
and
stos
addr16
loop
cmc
arpl
push
cmpb
xor
push
dec
fiaddl
pop
fwait
adc
dec
fisttps
mov
mov
xor
dec
inc
fs
xor
push
test
incl
jl
cmp
in
dec
lods
dec
loope
or
frstor
pop
int
popa
xchg
cmp
out
lahf
pop
in
sbb
dec
test
inc
jae
and
lods
sahf
into
mov
testl
int3
mov
xlat
cmp
dec
sub
nop
mov
nop
or
sbb
sbb
mov
cmp
loopne
out
adc
int3
sahf
pop
ret
mov
cmc
test
bound
les
xchg
mov
aas
popa
ss
mov
pop
bswap
scas
or
and
xchg
push
in
adc
rcll
cmp
cmp
incb
cmp
movsl
ds
addr16
call
sbb
pop
sbb
punpckhdq
adc
out
movsb
and
mov
xor
stos
and
push
test
inc
mov
imul
cmpsb
loope
sar
sbb
sbb
in
lret
int
mov
cs
test
push
in
mov
repnz
ret
scas
mov
rorl
imul
decl
aam
inc
shlb
addb
or
and
xor
test
shlb
sbb
repz
or
push
adc
fs
clc
push
data16
adcl
inc
stos
in
outsl
sub
pushf
fidivs
adc
pop
and
xor
adc
test
outsl
mul
mov
and
movsl
sarl
bound
lret
imul
push
cmpsl
andb
cmp
cmp
adcb
fidivl
aas
pop
pusha
jne
scas
mov
lea
fsubrl
inc
xchg
adc
push
pusha
out
clc
add
out
loop
mov
xchg
mov
dec
fsubr
dec
xlat
ret
add
cmp
dec
scas
mulb
insb
decb
scas
out
outsl
mov
or
sub
nop
dec
ret
sbb
test
and
sti
outsb
cli
add
mov
lea
ss
xchg
xorl
outsl
jne
and
into
add
adc
popa
push
lea
sbb
outsl
xor
mov
clc
jmp
mov
ds
mov
cmpsb
push
outsl
cmp
mov
into
scas
mov
jmp
and
in
lahf
mov
xor
out
mov
test
jne
fldcw
in
fcmovnbe
jo
ret
lods
push
push
push
lds
lret
fldcw
push
mov
test
aad
mov
repz
pop
loopne
add
or
dec
out
adc
mov
fidivs
inc
out
repnz
or
pop
pop
inc
mov
out
mull
rolb
test
sahf
ja
adc
rorb
fcmovu
dec
add
std
jno
dec
pop
jmp
add
movsl
mov
pop
cltd
fsubp
sub
inc
or
or
add
sbb
pop
cmp
and
mov
mov
sahf
sbb
mov
fs
ja
out
aad
jg
out
or
jg
fimuls
push
sub
or
out
mov
in
jge
dec
xor
aas
in
loop
sbb
mov
into
mov
fisubl
test
out
push
push
int3
mov
sarl
sub
push
push
pop
mov
movsl
dec
push
movsl
aad
test
mov
push
cmp
lds
shlb
push
das
mov
insb
push
xor
or
data16
push
popf
addb
sub
or
inc
lahf
inc
jg
adc
mov
sub
xlat
call
lret
in
push
jg
mov
addr16
insb
push
rorb
insb
out
and
out
mov
shlb
jbe
jle
in
stos
dec
jns
int
outsl
andb
insl
xchg
cmp
popf
fcompl
mov
push
pop
into
sbb
mov
add
mov
stos
iret
pand
iret
mov
les
ret
out
lock
jmp
inc
xchg
loope
shll
jl
adc
sub
outsl
fmuls
fisubrl
gs
xorl
sub
out
out
jbe
decl
jl
push
push
in
push
adc
imul
mov
in
xor
inc
pop
imul
mov
mov
call
mov
inc
dec
push
sub
pop
es
in
adc
xchg
nop
mov
out
sub
cmpsb
mov
enter
decw
xchg
ss
jp
sbb
mov
jmp
pop
push
jmp
push
inc
test
out
enter
mov
sbb
xor
sub
sub
incl
push
push
mov
lahf
push
faddp
inc
je
jns
mov
adc
add
pop
scas
jecxz
or
push
xchg
sbb
push
add
std
in
lods
pushf
pop
ret
aas
mov
out
pop
inc
andb
lea
cld
in
push
dec
sub
icebp
loop
push
jbe
mov
jae
mov
es
push
push
lcall
push
imul
fnstsw
leave
mov
mov
lahf
push
adc
and
or
cwtl
incl
movsb
dec
roll
inc
xor
pop
and
insl
or
scas
adc
ficomps
lods
push
js
pop
mov
ret
xorps
xchg
ljmp
dec
int
xchg
adc
pop
sti
xor
push
jl
faddl
in
adc
and
push
int3
lock
les
idivb
fwait
shlb
lods
clc
mov
xchg
test
fcomps
inc
mov
cmc
sbb
dec
das
loopne
fstpt
loope
int
cmp
add
dec
or
pop
jno
mov
pop
pop
pop
fimuls
and
sahf
dec
sarl
cmpsl
aam
fdivl
mov
cli
imul
jl
xchg
repnz
int3
out
test
jl
sahf
int
imul
dec
or
xlat
stos
mov
xor
push
sub
cmp
cmc
stc
cli
push
in
xor
in
int
inc
jne
push
jo
imul
or
xchg
adc
divl
hlt
sub
popl
sub
ret
mov
mov
sahf
dec
and
out
mov
es
add
je
dec
jae
loope
enter
adc
mov
jle
jg
fcom
sbb
jnp
insl
xchg
imul
jno
push
rcrb
add
mov
popf
inc
cmpsb
subl
fmull
sbb
popf
frstor
mov
ljmp
pop
orb
into
dec
sbb
or
incl
sti
pop
pop
fsubl
sbb
xchg
test
push
lods
adc
imul
inc
cmp
adc
add
pop
ss
add
mov
and
push
cmp
sbb
out
fwait
movsl
scas
rorl
test
adc
pop
rcr
inc
mov
out
push
inc
push
inc
cmpsl
adc
in
cmp
push
je
adcl
js
add
xorl
inc
std
cmp
and
ret
mov
xchg
orb
mov
push
cmp
pop
rcl
xchg
stos
jmp
adc
cmpsl
data16
mov
mov
push
or
fwait
or
mov
mov
pop
pop
mov
fdivrl
add
in
dec
xor
inc
cld
sub
dec
jbe
scas
lret
rorl
lods
sahf
sub
pop
sub
cmp
inc
push
cmp
or
clc
es
or
subl
sub
inc
stos
lahf
lods
pop
and
xchg
xor
cli
dec
fcomps
mov
push
lahf
cs
jbe
and
inc
mov
mov
nop
je
mov
mov
jmp
sbb
ret
sub
jmp
sub
push
mov
mov
adc
push
fidivrl
mov
dec
push
sahf
push
lods
or
ljmp
loope
out
and
in
push
popf
dec
daa
xchg
scas
testb
rolb
call
outsb
ds
cmp
cmp
jnp
mov
mov
mov
mov
sbb
mov
adc
shr
paddusw
pusha
lods
out
aaa
fs
outsl
and
cltd
pop
cmp
rep
mov
rcrl
fldenv
std
nop
inc
push
aam
call
pop
pushf
push
add
xchg
fcomps
sti
sbb
pop
fildll
mov
fwait
shlb
jmp
or
ret
sbb
fstpl
lahf
xor
jbe
fwait
mov
fldcw
insb
jno
repz
mov
icebp
loopne
fstl
jmp
aaa
arpl
cltd
jg
test
data16
push
pop
stos
mov
push
sarb
pop
out
xchg
add
jns
pop
mov
mov
push
sbb
test
data16
push
ja
test
loop
clc
in
pop
cltd
cmp
mov
sub
jle
in
pop
cmpsl
jmp
sarb
loop
mov
cmp
icebp
movsb
popa
or
aam
nop
mov
inc
sbb
push
jle
cs
outsl
movl
sub
pop
mov
add
and
mov
push
push
test
mov
mov
mov
xchg
cmpsb
push
mov
push
adc
ja
mov
ffreep
iret
shlb
lods
in
aaa
adc
mov
bound
push
arpl
fiadds
cs
sti
cli
mov
pop
jbe
pop
pop
in
in
pop
or
fiadds
call
dec
dec
mov
cli
shlb
add
mov
push
pop
jge
adc
or
insl
daa
sbb
test
jne
shlb
or
into
stos
jle
dec
push
fcmove
add
push
push
daa
cmp
jne
adc
outsl
jne
test
mov
sub
sbb
std
push
sub
inc
sti
and
sub
adc
jl
jl
dec
mov
sbb
pop
faddl
and
mov
lret
rcrl
add
mov
push
imull
test
shr
inc
mov
test
push
rolb
enter
in
adc
sub
dec
pop
and
xorl
push
adc
imul
xchg
mov
fisubs
cmpsb
sbb
sbb
test
faddl
repz
mov
int3
shll
mov
addr16
xor
push
push
xor
js
je
iret
push
call
mul
les
repnz
adc
out
cmpsl
inc
dec
dec
pop
sbb
adc
jno
adc
adc
fdiv
popa
shlb
and
mov
jle
stos
in
stc
xchg
mov
andb
dec
xchg
xchg
js
sub
test
aas
mov
in
and
adc
cmpsl
xchg
dec
insb
scas
gs
mov
add
push
mov
sbb
xor
sub
and
lcall
inc
jmp
je
fildl
shrl
add
cld
fistpl
sub
aam
sub
dec
dec
dec
out
and
fwait
scas
fsubl
push
rorb
inc
xchg
cmpsb
xor
mov
ljmp
xchg
lret
cltd
imul
dec
xor
sub
and
or
cmp
dec
lods
pop
push
in
add
int3
pushf
sti
in
jg
addr16
scas
in
jns
sub
cmp
pushf
std
shrb
sbb
lcall
pop
adc
inc
cmp
jge
ret
clc
pop
das
cld
push
xor
adc
mov
cmp
xlat
in
xor
sti
inc
aam
les
repz
mov
out
adc
inc
add
push
jne
sub
xor
xorb
fnstcw
bound
jb
mov
subl
sbb
sahf
mov
jle
leave
cli
test
mov
loope
aas
pop
sub
jge
int3
jecxz
dec
sbb
cs
stos
mov
gs
xor
les
mov
add
bts
pop
jae
lea
cmc
pop
pop
mov
mov
out
repnz
cmc
enter
ss
adc
and
or
imul
fstpt
dec
jns
nop
add
repnz
and
sbb
ss
inc
in
ss
clc
and
add
nop
ror
in
nop
aas
inc
enter
int
jns
call
fs
in
pop
stc
pushf
pop
pop
adc
add
out
scas
insb
adc
mov
jno
cmpb
sub
pop
inc
cmc
mov
les
jae
nop
xor
inc
addb
xchg
int3
push
mov
lods
loope
loop
mov
mov
mov
adc
pop
or
int3
sbb
lahf
pop
cmp
xchg
cld
clc
mov
sarb
xor
aas
cmpsb
ret
rol
or
jl
insl
ret
xor
push
mov
or
out
mov
adcl
imul
pop
sti
or
inc
lock
xlat
push
lahf
xchg
shll
and
and
lods
sub
ret
mov
add
in
fmul
adc
fwait
pushf
arpl
mov
inc
fbld
movsl
nop
xchg
inc
ficoml
repnz
sbb
fstpl
dec
sbb
icebp
jbe
mov
std
pusha
mov
adc
sti
jnp
mov
xorl
adc
mov
aad
inc
in
lea
mov
pop
mov
icebp
leave
cwtl
aaa
mov
fcoms
cmpsb
data16
lcall
sub
aaa
pushf
xor
inc
ljmp
pushf
add
jns
cmp
ret
lret
inc
andb
cmp
add
lds
out
xor
and
aas
ss
lds
xchg
sbb
ss
pop
pop
push
shll
stos
test
inc
cmpsl
cs
jecxz
dec
mov
and
sbb
test
dec
pop
ss
add
push
and
mov
inc
rcr
rcll
subb
cli
stc
lcall
dec
ljmp
incb
mov
pop
mull
and
dec
testl
cld
in
aaa
xlat
add
mov
push
jnp
sbb
adc
in
dec
addr16
je
outsl
in
in
ds
adc
adc
cmovle
in
rorl
aaa
push
js
insb
test
imul
xchg
call
cmp
and
push
int
pop
pop
add
mov
mov
scas
es
mov
push
loope
sub
jo
sbb
movsl
push
or
filds
mov
pop
jge
aad
pop
xchg
jecxz
cmp
gs
clc
pop
fisubl
inc
lcall
int
shrl
or
adc
out
add
insb
and
ss
jns
or
xchg
out
popa
mov
fstps
js
test
dec
sbb
pop
or
cmp
fcmovb
lret
shlb
cmp
lcall
sarl
cmpsb
xchg
fidivl
cmc
imul
adc
aas
xchg
sti
cmpsb
fadds
push
mov
mov
icebp
add
addr16
or
xor
mov
inc
and
mov
push
mov
cmc
loop
insb
inc
mov
sbb
insl
mov
clc
clc
mov
inc
cmc
movsl
xchg
xor
popa
call
and
std
and
mov
lret
cli
pop
lcall
stos
mov
or
mov
cmp
ljmp
lcall
insl
sti
xchg
inc
mov
cmp
add
mov
inc
pop
mov
jge
fwait
and
mov
adc
jo
bound
lahf
cmc
out
cmp
gs
cmp
shrb
in
rorb
dec
lcall
lcall
aam
lds
mov
into
jae
fnstcw
cmp
mov
rorb
pop
xchg
push
bound
pop
inc
call
sbb
fdivl
push
xor
js
fcomip
sub
int
or
cmp
or
mov
cs
or
push
inc
jmp
xchg
daa
pop
andl
movsb
ficoms
pop
dec
cld
cmp
mov
or
mov
adc
cmpsb
lahf
clc
lahf
iret
or
into
pop
pop
mov
pop
push
jl
and
pop
out
cmp
sub
shlb
sbb
sbb
lret
jl
ljmp
dec
or
popf
xor
jg
faddl
pop
cmp
out
icebp
sbb
sbb
push
jg
mov
add
fwait
lods
xor
rolb
cmp
push
stos
roll
lea
mov
push
pop
jecxz
push
cmp
push
nop
mov
sub
divb
inc
out
dec
sub
es
adc
lret
ds
xor
push
fs
mov
outsb
xchg
jbe
mov
jg
fwait
enter
shr
and
xchg
fsts
mov
hlt
repz
ficompl
sbbl
pop
cmp
adc
negl
pushf
and
pop
loopne
aad
shll
pop
dec
lds
pop
mov
pop
jne
mov
mov
mov
loope
sbb
cs
test
push
test
sbb
shrl
pop
sub
das
ficomps
add
cmpsb
mov
cld
ljmp
xchg
mov
fs
dec
test
jg
xor
or
fs
hlt
orl
sub
dec
lahf
adc
push
mov
dec
ljmp
xchg
shr
rcrb
andb
jo
movsl
sbb
lods
rcr
sarl
rcrb
inc
subb
xlat
pop
fnstsw
xor
inc
adc
cltd
cltd
imul
test
cmp
xchg
jecxz
mov
sub
test
jmp
add
cmp
push
xor
xchg
sti
in
stc
loope
mov
es
insl
insw
mov
jl
int3
push
jae
lcall
or
pop
loopne
dec
jle
xor
int
loope
sti
stos
std
sti
lock
sbb
push
pop
fxsave
push
and
repnz
enter
cwtl
xchg
or
mov
mov
dec
les
shrb
sarl
sbb
sub
sar
test
and
and
std
fistpll
push
je
cld
xchg
inc
inc
int3
and
scas
adc
notb
mov
inc
je
jge
xor
fs
dec
xchg
hlt
cli
mov
out
add
sub
pop
fcmovnb
adc
cmp
xchg
or
ss
outsb
jmp
pop
stc
scas
sub
in
in
daa
stos
outsb
mov
in
ret
xor
call
mov
or
movsl
clc
mov
push
xchg
sbb
daa
mov
lcall
mov
pop
sbb
cmp
std
inc
xorb
insb
jo
dec
jae
out
sub
jnp
daa
jae
jbe,pn
test
jne
add
xchg
add
or
xchg
sbb
andb
or
mov
cmp
aas
arpl
fisttps
push
push
shrl
push
adc
sub
ret
adc
cmp
ljmp
mov
andb
push
sub
ret
and
add
push
inc
stos
jnp
scas
repz
arpl
fildl
stos
lea
lds
mov
nop
cmpsb
or
jo
and
jg
cmp
dec
cwtl
mov
mov
pop
xchg
dec
popf
adc
fstp
out
clc
mov
lods
call
shll
cld
das
xor
xchg
xchg
xchg
add
loopne
cli
cld
add
cmp
inc
sub
pushf
rclb
mov
or
jno
arpl
xor
dec
add
int3
and
or
repnz
das
mov
cmp
bound
mov
add
scas
cmp
les
adc
aas
sbb
mov
sbb
or
aad
and
lock
test
dec
ret
add
lock
lret
fadd
stc
mov
in
add
xchg
test
mov
push
std
add
cmp
inc
adc
pop
inc
or
enter
dec
jbe
dec
jp
imul
dec
push
cs
cmp
mov
lods
push
pop
jge
cmpb
xor
lock
jns
cmpsb
dec
push
lahf
loopne
and
ret
mov
cmpl
test
mov
hlt
lods
mov
jno
mov
pop
ljmp
or
loope
les
fs
out
xchg
stos
xor
pop
cmp
lock
cmp
adc
frstor
pop
mov
dec
jl
adc
and
jp
push
jl
pop
add
adc
lock
xor
xlat
sbb
xor
push
mov
lret
orl
lret
lods
xchg
shl
adc
js
adc
repnz
jo
xchg
int3
jle
call
mov
jae
push
in
sbb
call
push
xchg
add
sub
and
jbe
arpl
add
sbb
xchg
sub
adc
cmpsb
in
icebp
xchg
or
popa
lcall
add
adc
inc
cmp
jecxz
sbb
pop
pop
insb
nop
rorb
loop
fs
mov
movsl
mov
in
pop
adc
pushf
sahf
cmp
lahf
add
mov
mov
jmp
mov
or
xlat
mov
jae
les
push
stos
repnz
sahf
pop
stos
sbb
add
pushl
add
ja
cmp
inc
fwait
xchg
jg
stos
repz
xor
je
fisubl
or
xchg
loop
jl
out
popa
push
mov
test
insb
insl
les
mov
adc
mov
mov
xchg
stc
hlt
cmpsl
pcmpeqb
test
xchg
call
cwtl
add
cmpsl
test
dec
inc
adc
or
mov
pop
stos
dec
icebp
jne
jb
sbb
imul
sbb
cwtl
repz
cmp
insb
arpl
inc
pushf
pop
push
lret
mov
push
push
call
repnz
sbb
cmp
sub
jo
call
lahf
jne
aas
jno
shl
inc
dec
pop
mov
cmp
mov
mov
xchg
into
gs
cmpl
fisttpl
loope
cs
pop
ss
out
sbb
loope
sti
dec
daa
pushf
dec
data16
pop
lret
inc
leave
pop
sub
push
out
pop
cmpsb
int3
xchg
cld
cmpsb
in
shlb
rcr
lret
jecxz
push
xor
push
clc
mov
popa
pop
fs
int3
mov
lods
into
mov
inc
mov
pminub
mov
repnz
jge
jle
ds
push
add
mov
mov
mov
iret
push
dec
popw
sub
idivb
pop
gs
pop
mov
inc
push
aam
daa
dec
mulb
outsb
pop
sub
pop
test
lods
cld
pop
out
les
cs
adc
scas
mov
mov
add
adc
ficoms
ror
jb
out
cs
and
xor
call
int3
loop
cmp
pop
cmp
cltd
mov
push
push
jge
pop
push
or
mov
pop
outsb
int3
pop
fwait
mov
addr16
sti
dec
pusha
push
xchg
jecxz
cmp
enter
and
pop
jae
pop
test
lock
lret
lahf
in
loope
mov
pushf
clc
hlt
mov
lret
mov
fisubl
inc
mov
jecxz
mov
enter
push
sub
cld
dec
pop
push
cmp
pop
jbe
bound
stc
addb
jmp
sub
icebp
mov
mov
mov
sbb
inc
pop
mov
dec
stos
mov
pop
in
rcl
fidivrl
mov
dec
inc
decb
js
gs
ljmp
xchg
rclb
jb
outsl
lods
pop
or
imul
xchg
loopne
sbb
lcall
mov
mov
and
int3
fs
pop
subl
adc
lcall
sarl
mov
sub
bound
movsl
test
mov
mov
xchg
cmpsl
xchg
outsl
mov
fwait
int3
mov
lret
xor
pusha
orl
jg
xchg
movl
inc
insb
jecxz
xchg
enter
cld
and
push
sti
pop
mov
add
sbb
mov
das
aas
xchg
push
aas
mov
jne
lods
fidivrs
test
lcall
aaa
xchg
mov
adc
test
lcall
jl
pop
popa
int3
add
cmp
xchg
and
movsb
in
cmp
dec
xor
jbe
popf
and
frstor
xor
jmp
push
test
scas
in
mov
mov
push
aam
fwait
cmpsb
dec
cs
xchg
pop
pop
pop
and
inc
or
inc
in
mov
and
lock
cmp
xchg
mov
xor
sahf
imul
cmpsl
or
movsb
cmp
add
sbb
jg
sub
shlb
out
cmp
popf
mov
pop
jnp
xchg
jg
mov
jno
cmpsl
in
test
ja
mov
aam
lock
add
or
add
js
adc
lods
aam
lahf
pushf
xchg
lcall
xchg
mov
mov
inc
fld
mov
movsb
sti
xchg
jne
mov
jne
jnp
fs
call
ljmp
fsts
add
ja
in
xchg
aaa
sub
push
pop
andl
ds
test
add
je
sahf
mov
push
or
ret
lods
jbe
repnz
call
fsubs
mov
add
cltd
notb
stos
jge
pop
cmp
pushw
outsl
test
iret
stc
or
icebp
lcall
sub
pop
push
hlt
push
adc
adc
mov
push
mov
std
add
stc
push
push
xlat
sbb
cmp
mov
data16
or
sub
out
push
add
inc
xlat
mov
and
hlt
xchg
lods
int
sub
xchg
int3
out
mov
cmp
in
cmp
daa
aad
dec
dec
divl
mov
out
mov
clc
repnz
dec
push
aaa
dec
sub
mov
pop
pop
sbb
hlt
cmp
add
hlt
mov
decb
sahf
pop
in
cli
mov
mov
pusha
sub
outsl
dec
xchg
sub
jno
jl
xor
sbb
test
insl
sbb
xchg
aam
ljmp
push
jge
decb
mov
ret
sub
jns
or
mov
popf
dec
adc
mov
movsl
aas
and
xchg
lods
mov
pop
out
sub
loop
cwtl
sub
inc
hlt
in
dec
pushf
dec
insl
int
mov
adc
push
sbb
mov
hlt
gs
ficoml
fs
sub
in
push
or
mov
fidivrs
lret
sahf
cmpsl
test
imul
mov
ljmp
test
ja
dec
push
sbb
sbb
test
sub
xchg
add
jns
pop
mov
insb
lock
and
imul
aam
rorb
mov
stos
adc
rcll
in
mov
in
lods
xlat
dec
inc
push
ret
push
and
xchg
mov
jb
add
push
xor
fs
cmpsb
js
test
mov
jmp
pushf
xchg
subl
mov
xor
idivb
pop
sub
mov
or
cli
test
jb
xchg
inc
dec
sbb
pop
popa
jle
and
je
int
pop
sbb
mov
sbb
jns
mov
jb
sub
push
scas
push
lret
xchg
pop
in
jns
adc
mov
fimull
popa
inc
mov
leave
enter
outsl
mov
add
cmp
iret
lock
sbb
test
or
push
jbe
ss
jge
jne
dec
dec
push
inc
cmp
add
sbb
mov
push
pop
jbe
inc
fcoml
inc
aas
dec
mov
mov
fdiv
fcmovb
xor
enter
iret
ja
adc
movsl
and
xorl
push
cltd
shlb
mov
mov
sub
dec
mov
jae
lea
stc
xchg
adc
sbb
fisttpl
adc
xchg
je
int
mov
mov
dec
push
lea
sbb
fs
push
mov
sbb
mov
in
out
pop
cmp
sbbl
hlt
jmp
addb
pop
iret
dec
and
data16
movsl
cmc
mov
push
sub
repnz
movsb
shl
xchg
mov
mov
je
mov
fwait
mulb
in
pop
xor
or
fcmovb
sbb
jns
subb
je
sbb
mov
jmp
lock
cmp
dec
mov
fdivl
inc
cmp
push
cmpsb
jge
push
mov
dec
pop
xor
and
inc
add
das
mov
popf
sub
jmp
data16
xchg
add
adc
outsl
loope
jecxz
into
cmc
xor
cmp
push
pop
repz
cltd
xchg
xor
cmp
jp
sub
in
xor
xor
and
repz
test
mov
xor
shr
or
xchg
push
mov
lds
mov
sbb
mov
and
mov
loopne
cmc
mov
mov
jbe
push
cmp
jl
fwait
sbb
movsb
mov
pop
jl
add
mov
inc
push
loopne
daa
pop
outsl
lods
and
xor
lahf
xor
pop
bound
push
das
mov
loop
and
mov
mov
push
sbb
pop
or
xor
xchg
adc
daa
imulb
fdivrl
pushf
push
loopne
and
mov
mov
lcall
int3
jge
sbb
cmpsl
faddl
lds
insb
add
mov
lret
dec
mov
or
ffree
repz
movsl
repnz
sbb
push
push
ljmp
call
mov
cltd
inc
jno
or
adcl
hlt
or
test
loop
iret
out
dec
flds
fs
jno
lret
cmp
cwtl
push
mov
mov
sbb
lods
xor
ds
mov
xchg
movsb
shrd
je
mov
adc
movsb
imul
push
xchg
scas
andb
pop
ret
sub
popf
lea
jbe
add
loop
mov
xchg
rcrb
sub
mov
mov
and
fdivs
inc
imul
mov
fstp
push
or
stos
xchg
sbb
and
sbb
in
addb
sub
int
xchg
bound
dec
aad
ljmp
sti
mov
xchg
fs
pop
out
cmp
mov
int3
int3
or
pop
mov
ret
sub
push
xchg
cmp
push
push
imul
arpl
ljmp
jns
xor
imul
xor
adc
cmp
in
aaa
push
mov
inc
mov
jmp
pop
jns
out
ss
mov
jae
cmpsb
aad
xor
push
and
lods
jg
stc
pop
add
jno
cmp
push
fmuls
sahf
icebp
jmp
aaa
addb
cli
iret
mov
mov
or
cmc
orb
add
cmc
mov
xor
ret
xchg
dec
inc
sbb
xor
pusha
or
push
movsb
jecxz
pop
outsl
and
aad
aaa
pop
dec
repnz
and
je
insb
dec
int
scas
dec
leave
lret
cld
call
or
ds
lret
cmp
enter
adc
testl
mov
sbb
inc
insb
xchg
adc
mov
in
push
ss
mov
mov
rcl
sti
dec
fabs
test
and
pushf
push
xlat
ja
push
jns
jp
sub
iret
push
push
cli
sub
inc
jmp
enter
jnp
and
andl
inc
repnz
jb
dec
xchg
mov
mov
popf
cmpsl
fisubl
cmpsl
mov
cli
adc
jge
lcall
je
adc
and
mov
cmp
mov
cmp
inc
cmc
cmp
mov
les
dec
outsl
inc
mov
push
push
xor
add
mov
fdivrl
iret
mov
shlb
pop
int
add
add
xchg
dec
mov
fisttps
jge
pusha
sub
push
je
sar
daa
inc
or
dec
sub
pop
int
shlb
fisttpll
movsb
jne
add
jae
shll
cwtl
pusha
mov
xchg
pop
jp
aas
lock
orb
or
out
js
sub
cmp
incb
xchg
fwait
cmpsb
dec
enter
das
xchg
sahf
lds
test
jae
divl
inc
daa
or
je
add
insb
push
fstps
push
stos
add
mov
add
xchg
push
jl
iret
mov
and
insl
push
jbe
in
jle
imul
jo
cmp
dec
into
mov
out
fildl
ds
mov
sbb
xchg
in
adc
xorl
in
ljmp
and
loope
lea
insl
ja
in
add
mov
xor
std
loopne
loopne
mov
inc
xchg
add
dec
mov
fcmove
cmp
out
pop
push
testb
iret
call
push
push
sub
mov
in
xchg
aad
addr16
fs
clc
daa
leave
cmpsb
test
cli
aas
fisttpll
test
and
mov
push
dec
push
adc
sti
rorl
sub
rcll
lock
inc
sbb
icebp
sbb
test
push
or
lea
addr16
mov
mov
rolb
or
lret
insl
test
sub
dec
pop
add
adc
ret
inc
clc
jnp
sbb
sub
addl
cmpsl
iret
and
inc
std
push
mov
fisubrs
test
lock
add
push
xor
jg
in
sbb
popf
mov
mov
dec
mov
cmp
inc
into
lock
test
xor
pop
xchg
addb
mov
cwtl
cmp
add
shlb
pop
cmc
movsl
inc
mov
daa
rcrb
add
shl
pusha
in
fucom
fdivs
arpl
push
cwtl
in
pop
pop
and
mov
int
cltd
dec
lcall
into
lock
inc
xlat
add
jecxz
cwtl
scas
mov
inc
add
mov
push
xchg
sahf
lods
in
stos
mov
adc
movb
or
mov
and
push
fsts
xchg
jae
mov
mov
xor
sti
in
pop
adc
out
daa
fsubl
dec
sub
sub
fisubs
sarl
cli
and
sub
pop
push
jle
pop
mov
mov
cmc
out
fwait
out
adc
aad
lock
shll
jmp
movsl
out
and
lds
jae
pop
dec
push
mov
adc
mov
arpl
push
fwait
cmpl
outsb
cmpsl
ja
pusha
mov
loopne
jnp
lock
mov
pop
les
popf
mov
cld
dec
dec
push
pop
out
jae
into
fnsave
inc
scas
pop
aaa
ljmp
and
imul
add
dec
stc
push
push
outsb
mov
popf
jns
iret
sbb
shll
xor
bound
repz
icebp
lret
in
cmp
or
xchg
jle
dec
cltd
pop
xchg
lcall
or
jmp
stos
cltd
push
push
repz
dec
imul
sbb
jbe
pop
pop
cmpsb
add
lds
xor
or
pop
pushf
outsb
jo
test
outsl
pop
mov
rolb
pop
and
fsubrp
shrl
into
xor
sub
cmp
xor
bound
nop
mov
popfw
insb
adc
xchg
sub
add
xor
pop
add
sahf
pusha
or
xlat
js
popa
push
es
mov
xchg
fcomps
loop
gs
popa
in
jb
or
aad
psubd
mov
ret
je
cmp
out
or
fmul
mov
adc
jbe
cld
sub
mov
movsb
mov
pusha
aad
dec
in
inc
mov
mov
mov
neg
sti
or
call
inc
cmp
pop
sbb
push
mov
xor
mov
fldcw
mov
insl
sbb
test
popf
int
das
dec
test
and
iret
cmpsb
lods
movsb
sub
dec
jne
jg
scas
xchg
add
loope
gs
cmp
ljmp
cwtl
xchg
xor
nop
xchg
sub
jp
test
faddl
adc
mov
or
inc
lods
pop
add
jo
push
inc
xor
les
scas
cli
pop
outsb
push
mov
stos
sub
inc
out
pop
stc
cmp
testl
sahf
or
cmp
out
std
je
stos
or
push
xorb
xchg
xchg
in
sarb
xor
pusha
imul
test
das
mov
ss
mov
push
sub
mov
test
sbbl
xor
and
xor
dec
sbb
movsl
cwtl
mov
in
hlt
mov
adc
out
cmp
mov
aam
clc
xchg
aad
and
subb
cmc
pop
lcall
xchg
call
xchg
add
cmp
push
scas
sbb
xchg
imul
stc
and
aaa
or
mov
cmpsl
int
cwtl
sti
dec
sbbb
sti
mov
das
test
fwait
adc
imul
sub
and
mov
adc
iret
sbb
int3
pop
push
sub
xor
shll
les
les
add
cli
push
pop
flds
inc
mov
cmc
inc
mov
xchg
shll
add
imul
push
cmp
lcall
push
fbld
sti
in
sbb
and
adc
cmp
in
and
imul
mov
arpl
data16
sub
push
mov
dec
jmp
dec
cld
flds
dec
lods
sbb
insb
les
sti
es
or
mov
adc
inc
xor
dec
outsb
loop
mov
pop
shrb
xor
jnp
inc
and
sbb
mov
cwtl
and
sub
jns
roll
xchg
jne
shrb
stc
orl
or
push
xor
flds
xchg
and
mov
jge
mov
cmp
and
push
add
dec
rclb
movsl
pop
cmpsb
sub
sbb
hlt
popa
decl
bnd
lcall
ss
add
mov
mov
iret
and
or
fucom
adc
sahf
pop
mov
jmp
movsl
sti
adc
insb
bound
test
add
sti
inc
inc
stc
adc
push
inc
outsl
cltd
add
cli
iret
pop
out
xchg
push
push
test
push
dec
lret
lds
pop
jnp
jp
lea
das
sbb
pop
loopne
test
mov
loop
push
int3
lcall
pushf
xchg
test
add
loope
jg
mov
mov
out
verr
es
adc
jmp
dec
movb
sbb
fwait
int
pop
imul
add
test
inc
xchg
or
inc
push
jnp
push
inc
addr16
orb
dec
or
sbb
in
sub
mov
inc
fs
push
lret
subl
pop
push
pop
and
mov
iret
cmpb
pushw
xchg
jl
ja
mov
test
mov
or
mov
insb
stos
inc
flds
adc
ss
insl
shll
xchg
push
or
xchg
repz
test
lret
adc
jge
adcb
sti
pop
js
push
loop
xchg
xchg
lock
and
daa
cli
test
inc
add
mov
cmc
mov
popf
insb
outsl
and
mov
iret
xchg
mov
add
sub
inc
add
lods
add
xor
xor
mov
mov
outsb
xchg
lods
call
mov
rorl
add
cmp
test
in
mov
mov
fdivl
lods
aad
or
iret
xchg
mov
or
xchg
pop
nop
xor
lret
mov
jns
data16
sub
out
sbb
xchg
or
push
aad
dec
mov
mov
dec
adc
and
in
push
bound
mov
push
pop
jmp
ds
mov
inc
xchg
xchg
adc
mov
cmp
mov
lods
add
mov
adc
and
test
jmp
mov
movsl
roll
jae
inc
add
rcrb
dec
xchg
and
mov
stos
aad
fistpl
cwtl
mov
jp
dec
cmp
lock
fistpll
jl
cmp
push
int
sub
sub
lods
xor
inc
stc
add
icebp
ds
fisttpl
and
jno
in
cmc
jecxz
loope
and
push
sub
or
or
mov
mov
dec
lods
rcr
popa
or
xchg
gs
aam
xor
xchg
jae
mov
repnz
adc
add
rorb
adc
jmp
roll
mov
push
insl
xor
fistpll
mov
into
dec
jb
rclb
pushf
mov
scas
xor
iret
jge
sbb
in
jl
add
and
adc
lock
insl
insl
and
cmc
mov
pop
or
jbe
imul
gs
imul
test
aas
fiaddl
int
xor
sub
xor
xor
cmp
push
mov
adc
es
out
int
icebp
mov
or
inc
dec
push
cmp
push
pop
je
xchg
sub
push
sbb
inc
pusha
or
in
jg
sub
in
xchg
mov
sbb
pop
push
inc
sbb
xor
lods
decl
insl
pop
dec
out
xchg
insl
cmpsb
data16
cmpsl
pushf
adc
xor
pop
mov
mov
mov
decb
rclb
addr16
test
jmp
add
shrl
and
sarb
fisubs
popf
push
cmpl
arpl
int
mov
in
xchg
bswap
fists
sub
sub
into
rorb
pop
hlt
jne
dec
stos
ret
and
aam
xlat
push
xor
cmp
scas
mov
daa
xchg
and
mov
loop
popa
push
fldl
dec
mov
mov
sub
cmp
icebp
mov
add
xchg
mov
sbb
pop
xchg
pop
mov
xlat
jle
sti
out
scas
jmp
outsb
add
in
pop
notl
stos
fcomps
or
scas
outsl
sub
xor
cltd
mov
cmp
mov
mov
push
pop
insb
mov
data16
fwait
loope
stos
cltd
mov
and
in
adc
xchg
pushl
int3
es
mov
test
test
test
xchg
push
lds
ficoms
lret
mov
insl
iret
add
imull
imul
dec
mov
mov
dec
scas
aaa
push
cmc
mov
or
cmp
negb
ja
cmpsb
bound
fwait
lods
lds
ja
jecxz
inc
fisubrs
mov
xchg
lods
adc
or
ret
xlat
loop
es
psubsb
movsl
call
xor
inc
mov
mov
inc
and
jle
xchg
xor
mov
fmull
inc
push
je
lods
loop
sub
fld
pop
les
lock
idivl
fildll
orl
dec
fistl
lret
push
mov
dec
cwtl
cs
loope
test
push
dec
push
out
call
cmp
add
push
gs
loope
xchg
dec
jbe
int
lea
scas
push
js
or
imul
xchg
hlt
and
xor
jmp
jne
loop
gs
or
pop
mov
ljmp
aam
jb
lock
cmp
mov
sbb
or
jg
aad
cmp
sbb
xor
inc
and
sbb
jo
sub
cli
dec
sti
in
call
das
sub
jmp
jno
xchg
add
push
or
data16
outsb
push
cwtl
js
mov
nop
mov
push
pop
push
mov
das
push
flds
sub
leave
fbstp
mov
mov
gs
aas
jo
imul
cmp
mov
inc
xor
frstor
fwait
and
ss
jmp
out
nop
mov
mov
mov
jmp
push
mov
stos
in
in
ret
les
dec
inc
mov
fisubrs
bound
dec
aas
add
jno
xchg
xchg
insl
outsb
adc
push
inc
and
cmpsb
jne
or
pop
shr
mov
push
add
xor
and
xchg
and
mov
jae
dec
lret
mov
pusha
inc
test
adc
jno
data16
add
adc
bound
jne
aaa
lcall
jo
inc
out
mov
dec
aad
lock
insl
into
arpl
lods
add
aas
test
dec
mov
test
mov
int3
stos
in
push
imul
cmpb
clc
int
xchg
jp
add
adc
jecxz
in
jnp
mov
sbb
push
clc
arpl
jp
mov
mov
push
jae
mov
test
ljmp
mov
lret
lock
and
js
hlt
add
js
jle
push
push
inc
dec
lret
and
movsb
test
or
aaa
cmp
xor
mov
clc
clc
mov
dec
into
daa
push
movsb
sbb
negl
push
jno
add
and
out
push
movl
imul
into
xchg
and
addb
xchg
orps
lret
jge
mov
pop
inc
out
imul
test
mov
xchg
push
cmp
out
aad
ficompl
adc
fisttpl
jae
sub
popa
push
enter
dec
mov
or
sub
cmp
repnz
jae
cmp
out
or
int
mov
cmp
nop
ret
inc
pop
shll
mov
cltd
int3
notb
mov
popa
xor
jmp
sub
lcall
aas
lcall
jae,pt
repnz
call
pushw
xchg
pop
xchg
mov
pushl
push
mov
mov
jae
push
dec
fsubrl
push
out
xchg
mov
inc
cmpsb
sbb
mov
ror
pop
insb
daa
jnp
gs
dec
stos
data16
pop
dec
outsl
xchg
xorb
sti
mov
lea
sub
push
sbb
jle
push
push
ret
mov
aam
pop
push
or
popf
inc
xchg
dec
inc
loop
lods
pop
jbe
mov
fcom
fldl
pop
jmp
mov
int
lock
inc
clc
mov
push
xchg
lods
cmp
aam
cli
fwait
mov
jmp
aaa
xor
inc
jo
push
mov
test
mov
push
inc
fwait
sub
fsubl
mov
aam
xchg
mull
inc
sbb
or
pop
fwait
add
mov
jnp
mov
lock
enter
sbb
pop
pusha
xchg
out
pop
ds
call
jmp
ljmp
lods
xchg
adc
call
lahf
cmp
lret
xor
cmp
std
mov
es
pop
popa
sbb
hlt
push
mov
sahf
inc
or
mov
mov
jo
repz
popa
cmpsl
hlt
inc
scas
lret
xor
scas
sbb
sahf
mov
xchg
jnp
loopne
sub
test
loopne
loope
mov
fisttpll
add
ja
sbb
lahf
fs
pop
cld
incl
cmp
mov
cmc
cmp
movsb
hlt
cli
dec
clc
xchg
sub
in
mov
pop
jnp
add
daa
xchg
js
aad
add
not
pop
xchg
mov
popa
jnp
cwtl
aam
inc
push
adc
punpckhbw
pop
in
pop
les
jp
imul
or
dec
leave
in
ss
push
push
sbb
dec
mov
jae
xchg
popa
cld
lea
inc
mov
and
out
insb
xchg
xchg
jmp
movsb
addr16
mov
ret
pop
pop
in
xor
sub
jp
cld
or
ret
xor
cltd
mov
fnstsw
lret
and
cltd
orb
push
aad
xlat
sti
mov
mov
sahf
adc
push
mov
fs
push
mov
dec
jno
add
cmp
cmp
cmpsl
jns
mov
imul
je
mov
or
or
loope
bswap
push
loopne
cmp
ret
jb
cli
sbb
xchg
fildl
adc
xchg
jg
paddb
cmp
daa
in
mov
or
cmpl
cmp
mov
cmp
fsubs
fucomi
sbb
stos
xabort
dec
aas
outsb
sti
jae
add
cmp
add
xchg
fldt
xchg
jecxz
pushf
mov
cmpsb
cmp
lods
xlat
inc
aaa
fsubs
gs
nop
loopne
ret
mov
mov
push
popf
push
add
mov
inc
and
dec
cmpsl
insb
out
les
aaa
push
push
xor
push
fidivrl
mov
sub
cmp
add
cli
stc
test
andb
xlat
inc
popa
rorl
pop
cmp
and
inc
inc
out
clc
add
sub
sti
emms
push
add
jnp
stos
lahf
stos
mov
sarb
jmp
mov
lahf
sub
cmp
hlt
sbb
and
sti
xchg
mulb
stc
imul
repz
mov
test
inc
mov
jg
cli
je
mov
lea
xchg
pop
mov
sbb
mov
out
pop
add
push
jbe
jnp
sub
xor
jno
lock
dec
push
adc
jb
and
int3
push
jmp
and
int3
decb
sahf
ss
or
push
out
addr16
repz
sub
rcrl
arpl
mov
jle
std
or
pop
jle
push
test
inc
fdivrl
and
leave
rcrb
add
cmpsl
sbb
stos
cmpsl
std
sbb
pop
inc
outsb
xchg
pop
push
or
roll
mov
xchg
mov
xlat
ret
lods
jl
sti
cmp
xchg
lret
mov
and
js
gs
out
loop
movsb
jp
insl
pop
orl
pop
fidivrl
fxch
inc
outsl
jge
lods
add
hlt
inc
mov
sub
dec
xor
lahf
or
testl
test
sahf
repnz
lods
cmp
ljmp
cmc
cld
subb
pop
out
and
out
shrb
and
ffreep
push
in
push
cltd
pop
shr
cmpsl
pop
push
push
push
xchg
cltd
cmp
loopne
sbb
jb
mov
cmp
lret
pop
cmp
mov
out
pop
jo
mov
add
dec
dec
sbb
ror
add
cmp
pushf
or
push
push
mov
add
mov
mov
ljmp
push
push
bound
dec
hlt
xlat
mov
jnp
lock
push
ja
push
jne
lret
xlat
push
sbb
or
mov
lods
mov
jnp
cmpsl
arpl
add
cld
cmp
jne
or
fcompl
xor
jg
mov
mov
ds
imul
push
sbb
call
cmpsb
mov
sti
lret
sbb
stc
xchg
subb
inc
leave
fwait
cmp
in
xchg
pop
loope
mov
out
sbb
cmpsb
add
in
ret
dec
add
inc
cmpsw
or
xor
adc
cmp
arpl
dec
inc
sub
out
cwtl
lcall
rcl
adc
sbb
or
mov
leave
sti
fbstp
jl
and
les
push
movsb
cmp
lret
push
addb
out
push
push
jae
jo
adc
xor
push
call
adc
sub
or
jo
mov
sete
jae
jne
in
int
fistpl
mov
fwait
jle
rclb
test
xor
lret
dec
inc
cmc
outsl
mov
push
push
and
outsb
mov
es
loope
mov
lret
addb
cwtl
in
insb
xchg
test
add
and
es
jp
ljmp
dec
cmp
or
add
nop
adc
pop
cmp
and
and
lahf
repz
inc
inc
xchg
jecxz
dec
sbb
pop
push
push
out
jp
xor
dec
aaa
push
dec
or
sub
mov
or
xlat
adc
iret
xor
cmp
pusha
dec
pop
xlat
pop
ds
cmp
mov
dec
call
lds
cmp
ja
loope
fstp
aas
mov
divb
pushf
xchg
je
out
sbb
cwtl
imul
jle
and
dec
cmp
mov
inc
jmp
xor
repz
test
mov
add
push
fildl
lea
test
pop
or
and
dec
cmp
add
inc
sub
cli
inc
movsl
ja
stos
out
ss
les
inc
sub
les
add
add
addl
dec
psllw
sbb
pushf
loope
scas
stc
cmp
aad
dec
imul
cmp
xchg
shlb
push
mov
mov
outsb
or
cmp
push
sub
lahf
gs
cmpsb
mov
dec
ret
test
clc
out
mov
stos
pop
loope
idivb
test
rcl
in
aaa
test
mov
or
orb
cmp
jecxz
out
fiadds
mov
cmpsb
es
pop
popa
pop
and
and
fwait
mov
fmuls
fstps
pop
dec
and
xchg
sbb
dec
daa
dec
cmp
mov
xor
xchg
xchg
cmp
pop
mov
xor
into
inc
fwait
sub
shlb
dec
push
out
cwtl
pop
sub
adc
jnp
inc
lret
pushf
shrb
cmpsb
stos
sahf
aad
nop
fistpll
push
xor
jg
xor
jb
leave
xchg
xlat
jmp
xchg
mov
cltd
loope
imul
cmp
pop
mov
mov
mov
sti
ret
ret
adc
mov
test
cmpsb
test
dec
nop
and
dec
sbbl
sub
add
xor
pop
sbb
dec
cmp
dec
lds
pop
dec
cmp
inc
call
pop
dec
mov
and
test
adc
xor
out
mov
xor
inc
pusha
sti
inc
cmp
hlt
sub
in
subb
into
iret
mov
sub
sbb
loop
xor
mov
in
mov
jge
or
in
mov
push
xor
out
pushf
pop
jmp
adc
out
inc
pop
icebp
roll
outsl
gs
mov
sub
mov
es
enter
or
jbe
out
or
dec
adc
pop
stos
mov
das
jle
fwait
jno,pt
mov
sub
mov
rolb
or
loopne
mov
cmp
or
popa
add
int3
add
call
jno
mov
hlt
mov
aad
je
std
rcll
data16
xor
mov
ja
das
mov
imul
sub
iret
sub
test
or
or
cli
pop
bound
and
sbb
mov
das
ret
sbb
sub
sbb
lods
jle
inc
loope
or
push
into
into
lds
lret
lahf
lods
rcl
adc
pop
jge
xchg
je
cmp
adc
sbbb
leave
cmp
leave
in
mov
dec
ja
xchg
add
xorl
aas
sub
stos
adc
jno
lds
mov
and
push
pop
lods
xchg
lcall
dec
mov
in
push
aas
lea
sub
jae
imul
iret
push
push
test
pop
rclb
cmp
xchg
cmpsb
cs
inc
bound
mov
xlat
cmp
sbb
mov
xchg
sahf
sub
ja
push
sbb
xor
cmp
ffree
lods
jecxz
and
xor
jmp
out
dec
push
pop
das
outsb
or
movsb
rolb
mov
ss
dec
inc
add
cs
cmp
xchg
cmp
stmxcsr
mov
fldenv
pminsw
in
sbbb
mov
into
xchg
shrb
lahf
fwait
dec
in
push
sbb
sub
inc
cmpsb
fstps
sub
aas
pop
cmp
cld
or
sbb
dec
ds
xor
push
dec
out
dec
je
mov
out
cmp
adc
ficoms
aam
in
movsb
les
sbb
xchg
dec
aaa
and
pop
jbe
test
mov
push
adc
fwait
sahf
adc
cmp
ja
push
movsl
call
inc
jecxz
fs
cmp
mov
jae
xchg
divl
clc
xchg
pop
lret
xchg
daa
sub
and
scas
pop
ds
pop
fadd
mov
mov
cmc
sbbl
dec
stos
in
je
mov
jp
mov
addr16
push
hlt
es
popa
lea
pop
orb
mov
jb
fstpt
arpl
add
fiadds
pop
mov
les
push
mov
cmp
ljmp
lods
fidivrl
scas
int3
dec
fucomp
cmp
sub
jmp
test
es
dec
dec
fs
mulb
mov
enter
add
and
mov
dec
push
mov
fstl
outsl
xor
movsb
jne
shl
orb
cmp
jecxz
es
inc
ljmp
mov
push
data16
rol
push
xchg
stos
rcl
sarl
and
jg
or
lret
push
daa
lock
sti
or
cmp
imul
adc
cli
inc
cmp
jne
lock
jno
xchg
inc
fcmove
push
jae
sbb
add
sub
cmpsb
rcl
ljmp
xor
clc
call
xor
into
shll
jle
push
mov
inc
mov
fnstcw
popa
push
shll
xchg
clc
fnstenv
xchg
jge
add
sub
push
mov
dec
mov
in
mov
pop
pop
and
mov
test
or
lods
pop
scas
in
sub
mov
nop
hlt
add
dec
loopne
in
push
and
cld
push
popa
addr16
adc
sbb
iret
inc
loop
add
xor
fs
fbld
adc
jp
xchg
addb
ret
setns
in
pusha
inc
sahf
adc
add
fidivl
std
dec
pop
in
lcall
in
gs
or
mov
cmpsb
adc
mov
or
lock
xchg
cmc
jae
sub
cli
stos
jg
cmpb
or
jae
dec
add
push
int
fnsave
jmp
xchg
popf
das
sbb
and
mov
adc
scas
push
mov
scas
ss
xchg
mov
test
fmull
mov
jmp
dec
mov
bound
and
push
and
mov
sbb
repnz
or
dec
int3
jle
in
fcoml
mov
mov
lea
xchg
pop
ret
or
pop
dec
fisttpl
xlat
or
adc
push
jecxz
mov
jg
cwtl
cmpsl
mov
pushf
add
mov
mov
push
out
inc
mov
ja
test
pop
add
mov
rclb
ljmp
inc
inc
fcmovbe
iret
sbb
nop
inc
sbb
scas
cmpsb
insb
cmp
inc
mov
fwait
push
jns
cmp
cli
pop
ss
insb
add
pop
push
push
mov
insb
mov
mov
mov
addr16
fcmovnb
imul
jne
loop
inc
adc
xchg
dec
stos
inc
dec
dec
mov
mov
sahf
into
mov
jg
hlt
cwtl
sub
rorb
jge
wrmsr
mov
sahf
cli
mov
pop
add
imul
imul
paddb
in
add
cmc
pop
and
outsb
icebp
mov
push
mov
jmp
jl
pop
sub
test
cs
xor
fprem
jmp
in
inc
std
aam
stos
mov
dec
pop
fs
sub
cwtl
rcll
or
mull
push
adcb
clc
jnp
xor
lret
sub
xchg
bound
and
ja
cmp
shlb
loop
imul
jmp
and
mulb
sbb
shrl
mov
scas
or
mov
mov
or
aad
pop
test
movsl
dec
xchg
mov
sub
int3
sahf
lret
imul
nop
leave
mov
cli
push
popf
aaa
sahf
insb
loopne
aaa
cmp
mov
mov
cli
adc
leave
jle
xchg
sub
nop
aad
fldcw
mov
inc
cmp
mov
xor
clc
stc
stos
dec
addr16
push
out
push
ret
nop
std
leave
cs
repz
daa
jg
ficoml
gs
add
jno
pop
mov
pop
aas
jno
mov
mov
cmpsl
cmp
cmpsb
ret
ds
sub
inc
xor
inc
sbb
insb
mov
and
push
scas
adcl
cld
out
in
jle
data16
sub
les
xlat
out
les
mov
add
sbb
xor
stc
sti
fsubl
mov
sahf
loop
addr16
fwait
out
sbb
cli
subb
fnsave
xor
rolb
pop
mov
or
inc
out
jl
aam
xchg
and
sbb
ret
push
jbe
lods
call
or
lret
or
scas
xchg
mov
pop
dec
inc
mov
xor
addr16
add
sbb
test
xchg
mov
sbb
aam
cld
out
or
pop
pop
sarb
and
push
mov
adc
sbb
sbb
pop
pop
push
ja
xchg
jmp
jle
dec
mov
shll
push
mov
push
hlt
add
cmp
mov
sbb
call
push
mov
pop
aam
fisttpl
fs
xchg
hlt
mov
pop
and
imul
test
fnsave
sti
xchg
push
inc
fcomi
xor
test
aam
sysret
push
enter
rclb
mov
mov
xchg
pushf
add
fisttps
jl
nop
cmp
sub
and
fwait
add
inc
push
js
cwtl
add
rcrl
mov
imul
in
outsb
inc
and
pop
stc
js
sub
adc
mov
lods
enter
loop
loop
into
cmp
jge
movsl
loop
pushf
gs
dec
pop
push
xor
in
arpl
sub
aam
pop
xor
and
mov
aam
int
clc
xor
test
imul
and
pop
test
mov
jo
push
subb
in
rcll
mov
popf
aas
bnd
push
int
adc
scas
mov
jne
cmp
rcr
mov
pop
jb
repnz
mov
jno
in
or
mov
or
aaa
mov
mov
divb
in
jb
cwtl
repz
sbb
sbb
and
mov
mov
xchg
mov
adcl
leave
or
dec
stos
sbb
mov
mov
mov
sub
ret
mov
xchg
lods
stos
jg
ret
jbe
es
imul
std
or
sahf
out
imul
mov
ja
xchg
fldenv
arpl
inc
aam
enter
pop
add
ret
mov
pop
stc
push
ret
mov
mov
and
cmp
jle
movsb
or
xchg
xchg
pushf
xchg
int3
sahf
pop
sahf
or
and
dec
cltd
andb
aam
stc
shrl
inc
clc
sbb
sub
out
inc
xor
shl
jl
outsb
sub
dec
jae
jns
sti
stos
inc
mov
call
push
lret
and
sub
sbbb
shlb
push
repz
xor
mov
lds
mov
adc
mov
insl
in
sub
dec
outsl
mov
lret
push
loopne
outsb
xor
jno
fcomi
cmp
ret
popf
push
inc
fisubl
ret
sub
sbb
mov
add
in
fwait
sub
fisubrs
or
mov
mov
ret
aad
stos
mov
xor
fadd
pushf
popa
and
sub
mov
sub
aam
fadd
mov
cmp
mov
push
rep
icebp
mov
sbb
mov
sbb
mov
test
es
xchg
loope
ljmp
mov
dec
mov
fwait
xor
push
mov
arpl
fwait
fwait
xor
inc
in
subl
mov
cli
pop
push
gs
jmp
push
xchg
inc
shrl
dec
jecxz
pop
jae
adc
repnz
xchg
adc
adc
jnp
xchg
enter
mov
mov
std
pop
and
fisubrl
stc
pop
bound
mov
dec
inc
cmp
pop
add
imul
adc
pusha
pop
lods
xchg
sahf
stos
jmp
sbb
les
pop
sub
push
push
inc
fisttpll
lods
push
stc
jl
subl
jo
rol
sbb
jle
test
dec
pop
popf
data16
xor
mov
std
mov
or
fisttpll
lock
or
jae
lret
xchg
cmpsb
outsl
and
int3
push
dec
in
loop
mov
fimuls
rcrl
pop
outsl
cmpsl
xlat
outsl
or
sub
or
lret
and
cltd
jae
in
push
test
push
jno
es
ljmp
pop
jecxz
movsb
and
imul
dec
mov
jno
hlt
popa
mov
add
shll
jecxz
idivb
ret
xor
cmp
mov
and
or
movsb
mov
loop
lea
sahf
push
lods
das
jbe
pop
jecxz
xchg
lcall
add
or
adc
push
cmp
cmp
push
add
or
ds
lds
add
clc
movsb
fsubrl
stos
and
and
jno
in
dec
bnd
push
ss
insl
cmpb
jge
push
jle
sub
jle
iret
movb
or
arpl
hlt
sub
inc
or
iret
inc
inc
mov
icebp
stc
mov
mov
and
cmp
pusha
pop
mov
pop
or
inc
mov
mov
mov
jg
xchg
adc
adc
aas
mov
adc
dec
pop
lea
push
outsb
ds
push
add
cli
sbb
jge
sbb
or
inc
popf
sub
jnp
xchg
sbbb
test
push
lret
fldt
insl
mov
inc
out
aad
hlt
cmp
or
and
jne
or
jb
xchg
and
mov
addr16
sbb
mov
sbb
xchg
mov
js
sbb
cmp
fstl
adc
aam
jno
call
push
inc
xor
pop
movsb
xchg
sbb
test
int
dec
icebp
jae
mov
mov
data16
inc
jb
and
xor
stos
jbe
jecxz
dec
sahf
je
cmp
adc
mov
jmp
xor
cmp
repz
mov
jnp
adc
lea
out
bound
cmp
loope
push
andl
nop
cmp
add
sub
lahf
ds
arpl
sub
sti
lock
sub
pop
sahf
push
outsb
mov
cli
pusha
arpl
mov
sbb
sub
lds
lcall
addr16
jno
jne
xor
sbb
inc
cmp
aad
dec
dec
sarl
outsl
inc
fadd
or
mov
pop
stc
lahf
jle
jg
mov
mov
jmp
clc
std
jp
arpl
push
lret
pop
push
add
dec
cmc
push
mov
jno
sub
mov
jb
or
mov
sti
sbb
movsl
jg
lret
mov
jge
mov
icebp
data16
xchg
mov
lods
mov
sti
mov
adc
sarl
or
lret
or
popf
lret
enter
mov
xchg
pushf
lea
push
sbb
add
cmp
stc
outsb
jae
fdivrs
inc
fbstp
xor
ds
inc
dec
add
fs
sbb
pop
and
fsin
outsl
dec
ljmp
shrl
sbbl
aas
and
fprem
rcrb
push
pusha
xor
xorl
push
das
repz
outsb
add
mov
xchg
out
lea
outsl
mov
jo
and
pusha
imul
ds
insl
std
ret
rcl
lret
in
jp
jo
and
dec
or
add
in
and
jb
push
je
fnstcw
ss
jae
adc
lods
pop
sbb
push
add
out
xchg
or
fcompl
popa
sbb
push
fnstsw
sbb
jle
lods
cli
pop
xchg
addr16
add
push
test
insb
and
lock
loopne
mov
aas
sub
xchg
push
mov
fidivrs
fdivp
dec
aam
scas
das
aaa
sub
or
inc
mov
and
mov
sub
push
lock
cmpsl
loopne
aaa
mov
mull
mov
mov
adc
jns
push
pop
mov
insl
xchg
mov
outsl
mov
inc
cmp
inc
jbe
fidivl
pop
incl
mov
sbb
jns
div
test
idivb
mov
cmpsb
push
inc
movsl
dec
ror
outsl
cmpsb
sahf
mov
insl
mull
scas
xchg
dec
scas
sbb
sub
mov
adc
adc
cmpsb
sbb
cmpl
dec
pop
in
pop
cld
or
xor
movsb
mov
mov
pop
or
divb
jno
pop
lahf
xor
adc
pushf
cmp
shll
stc
push
in
popl
dec
xor
pusha
in
push
out
mov
movl
fmull
ja
ret
inc
mov
clc
jns
jl
sbb
int3
fisttpl
fisubrl
jmp
mov
cmp
fwait
jne
mov
sbb
jp
xchg
adc
push
xchg
jbe
and
cmpl
lcall
xchg
mov
dec
adc
dec
sbb
mov
cmpb
sahf
dec
xchg
jg
icebp
xlat
mov
cli
out
lcall
add
rorb
stos
cmp
subb
mov
stc
and
adc
test
repz
popf
add
sub
pop
push
data16
loope
xchg
ljmp
std
aam
sbb
jnp
add
cwtl
xlat
aaa
pusha
xchg
mov
neg
adc
ficomps
pop
adc
mov
andl
and
jbe
lret
and
sbb
insb
sbb
mov
jae
adc
mov
in
out
mov
mov
out
push
dec
xor
insl
mov
inc
mov
das
mov
out
mov
pop
and
out
inc
test
mov
xor
cmc
mov
push
pop
push
pop
or
ret
in
sahf
inc
jno,pn
imul
push
mov
sbb
cli
aam
mov
jge
dec
enter
popa
add
add
lret
mov
cmpsl
stos
xchg
stos
int3
xchg
xchg
loop
in
mov
pop
jne
out
jb
stos
or
sarl
stc
xor
cmp
mov
in
adc
int
cmp
dec
test
jne
jge
punpckhbw
cs
out
enter
mov
jp
sahf
or
mov
sarl
js
aaa
mov
les
lret
inc
cmpb
fnsave
mov
push
or
or
cmp
in
mov
mov
out
sub
dec
jo
out
and
subl
ret
mov
movsb
loopne
jne
jae
pop
bswap
call
jnp
jp
data16
mov
or
loop
mov
mov
jae
cs
xor
mov
out
mov
add
cmp
pop
sarl
jmp
mov
insb
es
leave
xor
outsl
fbstp
sahf
test
fbstp
sub
out
mov
lds
clc
movsb
call
mov
push
enter
loop
andl
jno
adc
or
xchg
scas
prefetch
or
xor
jno
lahf
cmp
jb
loope
xchg
test
add
sub
pushf
outsl
aam
xchg
inc
jno
pop
or
mov
cmp
popa
insl
dec
into
mov
and
hlt
shrb
add
push
test
mov
in
popl
mov
fldl
or
in
jbe
jnp
pusha
sbb
fs
mov
rcll
dec
adc
test
mov
mov
mov
jbe
mov
dec
push
push
xlat
test
cltd
add
push
mov
insb
into
ret
sarl
aam
pop
dec
sbb
inc
icebp
enter
lock
push
stos
cmp
cmp
ret
sahf
xchg
ficomps
call
push
in
iret
mov
dec
sbb
scas
icebp
dec
jmp
outsl
hlt
adc
outsl
and
lock
cld
add
mov
adc
push
inc
pop
add
sub
dec
push
xor
inc
out
fs
insl
hlt
xor
push
je
xlat
icebp
or
nop
int
repnz
sbb
add
xlat
movl
mov
push
mov
fcoms
mov
pop
std
cmp
popf
lods
data16
sbb
inc
mov
xlat
jo
jmp
das
mov
xor
insl
cmpsb
dec
inc
ja
mov
mov
cltd
xor
ret
or
pop
mov
xor
jg
hlt
push
add
aad
imul
adc
shl
ss
add
push
xchg
adc
adc
inc
pop
in
sar
outsl
xor
mov
fdivrs
mov
and
aaa
mov
lock
or
daa
xchg
shl
or
mov
add
pushf
xchg
sub
insb
nop
add
scas
insb
and
adc
in
add
mov
movl
orb
ficoms
loop
stc
mov
xchg
cwtl
or
test
mov
test
in
out
fs
movsb
int
daa
adc
pop
in
inc
mov
nop
scas
out
cmp
lret
xor
adc
rorl
sub
loop
jp
ret
orb
gs
enter
mov
xchg
pop
dec
or
ljmp
inc
adc
sti
xor
das
jl
jg
mov
js
mov
xchg
sub
cmpsb
and
xchg
add
mov
jb
sub
imul
xchg
popa
dec
aas
js
aam
push
mov
filds
dec
inc
les
ljmp
lcall
lret
dec
inc
insb
das
mov
pushf
or
mov
ljmp
pop
in
aaa
inc
subl
outsb
outsb
pop
int3
or
xor
xchg
ret
in
xchg
ss
adc
xchg
pop
dec
sub
cwtl
xor
pop
inc
fdivl
enter
add
test
xor
inc
sub
xor
jns
sub
inc
into
mov
jge
std
mov
mov
addb
pop
sub
dec
mov
jns
nop
sarl
mov
imul
jge
lea
xchg
fs
pop
or
ret
je
jmp
fwait
stos
leave
test
js
repz
das
or
stc
sbb
inc
pop
pop
xchg
mov
pop
mov
lcall
cmp
dec
cmp
xchg
jb
popf
fists
xchg
rcrl
push
jl
stc
adc
inc
test
jns
lods
cmp
push
mov
mov
icebp
xor
push
xor
das
or
test
cmc
fwait
adc
cmp
cmp
in
and
mov
popa
jbe
push
push
push
dec
pushl
inc
sbb
inc
push
dec
loope
and
sub
ljmp
push
jge
out
jns
xchg
cmpsl
sti
pop
and
or
test
insl
repnz
pop
push
or
call
fiaddl
sub
in
cmpsl
mov
frstor
movd
loope
cmpsb
mov
lea
das
cmc
or
pop
movsb
popf
out
push
inc
in
cltd
shl
ljmp
in
jle
or
pop
adc
popa
clc
sbb
faddl
jbe
je
aas
push
dec
cmp
adc
xchg
lea
std
mov
adc
dec
lea
lahf
pushf
push
cs
adc
or
add
clc
je
into
sbb
call
loop
test
or
repnz
jb
fsubr
xchg
movsl
pop
pop
or
icebp
jae
jnp
jmp
es
pop
or
fwait
push
in
dec
xlat
pop
sarl
aad
cwtl
inc
lret
sbb
popf
cli
fwait
dec
xchg
imul
jb
or
push
xchg
es
mov
pop
aad
or
cmp
lods
xchg
int
and
sarl
lods
jae
and
imul
or
jae
pop
mov
fwait
iret
pop
xchg
dec
cli
and
repnz
cld
gs
in
adc
cmpsl
imul
add
or
pop
or
loopne
notb
cmp
mov
sub
push
pop
test
adc
pop
and
in
mov
cmc
mov
call
sbb
jmp
fcmovnb
ds
push
push
insb
in
icebp
xchg
repnz
cmp
rorb
jo
add
in
aas
xchg
mov
repz
inc
lahf
mov
lahf
imul
jae
outsb
or
data16
cmp
push
rcl
jge
jno
jg
adc
fmul
leave
and
stos
xor
in
xor
mov
imul
add
mov
push
aad
xor
inc
in
add
mov
fnsave
popf
dec
fwait
inc
repz
loope
mov
repnz
xor
cwtl
and
push
push
lret
mov
lea
rcl
jbe
sbb
sahf
xlat
or
ljmp
dec
out
add
aad
ret
cwtl
lock
lods
dec
test
push
xchg
xchg
mov
scas
outsb
lds
faddl
jg
push
pop
repz
movsl
sbb
std
xchg
sbb
and
insl
cmp
je
out
adc
mov
cld
lock
push
mov
fs
xchg
xchg
mov
sti
jno
adc
jp
cmpsb
jne
cmp
mov
pop
das
mov
mov
or
movsl
popa
in
in
outsl
sub
divb
xchg
cmc
sub
mov
sub
dec
out
stc
inc
stc
loope
pop
push
test
stos
cli
adc
scas
xchg
mov
je
rcrb
add
mov
orb
cmp
pop
nop
fs
mov
cltd
jle
pop
cli
add
inc
negl
push
ret
add
das
sarl
stos
mov
or
and
in
mov
sbb
je
adc
js
imul
pop
imul
cmp
pop
inc
test
lret
test
or
xorl
jbe
pop
jae
xchg
in
int3
sbb
xor
in
inc
pop
adc
test
mov
xor
outsl
add
jecxz
pop
or
ljmp
lods
push
lea
ret
push
adc
sbb
pop
mov
andl
xchg
xchg
mov
int3
xchg
pop
ljmp
test
int
ss
xlat
sub
adc
sub
gs
sahf
daa
std
lock
sahf
leave
xchg
and
add
test
push
nop
jg
in
jl
lret
or
jp
shrb
push
jbe
std
add
pusha
xlat
inc
cld
adc
lcall
and
and
inc
xchg
mov
outsl
xor
sbb
pop
cmp
lret
pop
or
dec
icebp
add
cmpsl
adc
arpl
sbb
xor
sub
lahf
stc
out
inc
mov
add
ret
sub
arpl
stc
ror
daa
in
fistl
push
mov
xchg
imul
xchg
imul
data16
outsb
mov
ret
pusha
lock
mov
jno
insl
fcmovu
aam
stos
mov
call
or
insb
sbb
xor
jnp
add
das
std
pop
mov
out
pushf
mov
dec
daa
jmp
adc
je
mov
mov
adc
popa
mov
or
aad
inc
aam
insl
or
stc
jp
test
stos
inc
out
push
lret
push
sub
int3
push
pop
sbb
int
jmp
imul
inc
in
and
add
sub
lods
mov
enter
stos
sbb
stc
mov
outsl
cmpb
cltd
add
push
mov
jge
imul
scas
ja,pn
mov
ja
xchg
stos
mov
push
addr16
inc
cltd
ret
std
push
enter
push
in
cs
sbb
ret
sbb
dec
aas
jg
cmp
sbb
jbe
sub
and
cmpsb
push
test
jo
cmpsb
jl
out
leave
stos
sub
rorl
hlt
clc
or
add
jns
into
inc
sub
loopne
loopne
addl
pop
in
movsb
es
add
data16
pop
arpl
insb
adc
add
push
xchg
sub
xchg
sbb
xor
int3
sbb
fs
fbstp
mov
outsb
gs
repz
std
pop
add
loope
rcr
jne
imul
and
jmp
lods
rorl
push
in
sub
mov
or
lret
and
inc
mov
add
adc
jl
pop
push
fisttpll
lahf
xor
push
int
hlt
sbb
cmpsl
int3
js
test
ffree
push
add
repz
outsb
clc
data16
xor
push
pop
add
xchg
sub
xor
out
cmp
lea
roll
pop
xchg
test
addl
jb
and
pop
shr
xor
pop
push
mov
inc
push
sub
pop
mov
jge
out
mov
mov
jg
test
orl
sahf
cmp
push
dec
out
iret
test
sbb
dec
pop
sti
push
popa
push
int
sarl
mov
outsb
sbb
xchg
repnz
pop
test
nop
test
ret
cmc
dec
xchg
cmc
mov
stc
rol
adc
cmp
hlt
cmpsl
add
js
pop
fidivl
xchg
add
pop
sub
repz
push
popa
cmp
mov
mov
cmp
in
rclb
sti
repz
mov
dec
enter
sub
sbb
and
roll
cwtl
add
pop
outsl
jno
cwtl
mov
js
xchg
out
in
nop
daa
ja
xchg
and
sbb
ret
xchg
sbb
aad
push
hlt
jno
out
or
aas
cmp
fwait
adc
xlat
ficoms
pop
sti
in
and
mov
sbb
adcl
sahf
xchg
scas
mov
push
mov
add
gs
in
or
hlt
out
mov
inc
aam
out
int3
jae
jne
incl
jl
mov
xchg
or
test
lahf
xchg
sbb
lahf
scas
pusha
cmp
adc
jge
leavew
xchg
faddl
sarl
jae
push
xor
cmp
xchg
push
pusha
mov
insb
jecxz
vpunpcklqdq
lahf
lret
jnp
dec
mov
outsb
dec
push
jg
aaa
lock
rorl
push
adc
dec
loopne
inc
or
mov
in
enter
push
cmp
mov
add
sbb
xor
cmp
hlt
popf
out
or
rol
pop
ficomps
add
shrl
cmc
scas
addr16
xor
test
inc
negl
inc
push
jo
inc
aam
out
lea
fistps
pushaw
rcr
fistps
sub
xorb
int
out
aas
push
pop
testb
movl
add
mov
ss
test
inc
les
mov
dec
imul
sub
cwtl
repnz
mov
pop
lock
js
leave
xor
dec
push
mov
fcmovb
jae
adc
imul
jl
xor
xchg
or
imul
xor
sub
imul
pop
out
push
pop
ja
out
iret
int
add
pop
cmp
or
clc
ds
inc
pushf
mov
add
adc
sbb
das
das
mov
xchg
loop
mov
into
sub
jbe
mov
xor
in
xor
lea
adc
sbb
arpl
dec
aam
xchg
mov
xchg
mov
xchg
cwtl
pusha
xor
dec
mov
stos
jae
aaa
bound
shlb
in
ret
cwtl
fnstenv
add
xchg
mov
into
cs
cmp
mov
xchg
cs
pop
and
jmp
addr16
lock
adc
movsl
cli
jg
ret
loope
add
pop
stos
sbb
ss
fstp
xor
es
pop
push
nop
xlat
sub
dec
mov
loope
mov
icebp
mov
loope
dec
movsb
cmp
outsl
mov
bound
xchg
mov
and
and
lret
in
nop
fsubrl
xchg
jnp
dec
add
hlt
cld
mov
jmp
scas
cmp
shlb
dec
fnstcw
mov
pop
outsl
int3
sbb
pop
mov
test
lahf
mov
or
cli
mov
movsl
icebp
aas
adc
push
and
xor
sub
jno
jno
test
in
sbb
loopne
jp
jmp
ja
repz
xor
mov
mov
out
mov
mov
xor
adc
xor
outsl
mov
lahf
cmpsl
jecxz
ret
pop
hlt
cmp
xchg
ret
cmp
fwait
cmpb
out
scas
adc
cwtl
mov
repz
test
aaa
mov
xor
add
mov
pop
outsb
xchg
adc
mov
js
cmp
adc
mov
cli
mov
pop
jno
sbb
repz
sub
lret
inc
call
call
lods
scas
cmpsl
sbbb
push
dec
cwtl
vpcmpeqb
and
push
sbb
aaa
dec
jmp
mov
cli
cwtl
add
sbb
jno
dec
test
xchg
adc
arpl
push
sbb
xlat
add
out
inc
mov
cmp
or
jg
jno
or
call
out
movsl
or
out
mov
or
aad
xchg
add
inc
lods
jno
pop
ror
add
cmp
inc
sub
sub
inc
xchg
lcall
pop
loope
add
jmp
mov
into
lcall
fisubrs
push
push
or
dec
push
stos
sbb
xor
test
push
icebp
insb
and
dec
in
es
outsb
mov
or
fstl
scas
pop
xor
cmp
mov
popf
jecxz
test
fwait
jmp
pop
jo
pop
adc
aaa
push
add
scas
fwait
inc
sahf
lds
pusha
stos
outsb
ffree
mov
push
shl
xor
clc
fnstcw
loop
dec
inc
sub
lea
test
mov
xchg
cltd
pop
push
mov
add
inc
repz
adc
pop
mov
sub
pop
popf
jnp
sbb
outsl
and
or
xchg
and
fadd
stos
js
fdivl
ljmp
mov
ret
xchg
cmp
mov
mov
in
mov
loop
cmp
loope
arpl
hlt
jp
pop
mov
ret
push
daa
xchg
dec
in
push
std
pop
inc
out
daa
jne
lods
mov
sbb
in
lock
dec
mov
mov
sub
movsb
ret
pop
imulb
ljmp
aas
mov
or
add
push
hlt
fs
xor
dec
mov
lcall
hlt
rclb
sub
and
je
cli
dec
sub
cld
xor
mov
dec
sbb
pop
lret
add
push
xchg
sub
rcrl
aaa
adc
mov
hlt
pop
into
aas
test
cmc
fisttpl
xchg
dec
rolb
xchg
or
add
fiaddl
orl
push
bound
cmp
test
push
push
and
mov
mov
clc
outsl
pop
imull
in
mov
adc
div
rolb
ret
xchg
jle
sbb
cmp
dec
ffree
enter
jecxz
xchg
imul
sub
lcall
lret
mov
dec
aad
sub
xchg
xchg
scas
pop
dec
cmpsb
in
mov
imul
cmp
mov
push
cmp
jns
arpl
mov
jge
pop
xor
and
jmp
xchg
idivb
arpl
repnz
push
add
lahf
cmp
es
lock
lahf
outsl
lahf
shll
imul
mov
inc
add
and
and
into
fmuls
ret
das
ja
addr16
sbb
clc
and
rolb
xor
jnp
lret
adc
fwait
add
pop
sti
sub
sub
mov
mov
idivb
push
adc
int
fidivrs
add
push
pmuludq
cmp
aas
bound
dec
packsswb
icebp
dec
data16
and
push
mov
push
jno
cmp
pop
mov
push
ss
repz
or
lods
clc
icebp
dec
mov
and
popf
and
fucomip
dec
dec
cmc
add
adc
int3
ja
fucomip
cmp
inc
mov
or
inc
cmp
or
roll
popf
dec
inc
sahf
outsl
shll
pushf
xchg
gs
adc
inc
push
out
xor
lods
test
aam
mov
mov
cmp
xchg
dec
sbbb
fldl
inc
out
jecxz
mov
xchg
sbb
or
mov
jbe
dec
test
xchg
sub
add
pop
sub
dec
fs
push
cs
push
sbb
push
imul
fistl
je
out
popf
or
mov
cmp
jl
xchg
jnp
incl
aas
leave
and
jns
out
sti
cmp
shl
lods
jmp
xchg
frstor
sbb
pushf
movsb
test
stos
scas
mov
gs
mov
icebp
test
iret
inc
mov
dec
xor
int3
sbb
test
add
data16
das
or
mov
fmull
pop
mov
aad
xorb
sub
inc
aas
loopne
sti
pcmpgtd
js
or
popf
add
cmp
ja
inc
orb
inc
jnp
loope
js
aaa
sub
icebp
iret
jae
stc
pop
inc
pop
xchg
test
and
push
and
jecxz
lret
jno
cmc
or
jne
bound
or
or
out
push
int
ss
mov
inc
out
outsb
mov
adc
inc
mov
in
pop
dec
mov
testl
repz
dec
push
lret
icebp
bound
mov
jl
outsl
addr16
cld
inc
and
xor
mulb
aad
aam
cmp
fisubrl
in
sub
fwait
push
loop
or
and
inc
xchg
xor
lods
cmpsl
xor
jne
cmp
lret
adc
mov
xor
add
lret
hlt
pop
mov
gs
adc
add
outsl
xchg
xor
jle
xor
pop
mov
aas
lcall
xor
mov
sub
test
jne
std
push
lret
pop
or
fs
rcrl
repnz
add
mov
mov
popl
test
jnp
mov
dec
pop
iret
ffreep
rcll
sbb
jg
add
repnz
loop
pop
shll
jae
xchg
loopne
sub
add
sub
ljmp
mov
enter
clc
add
movsl
jecxz
mov
mov
or
cmp
popa
sub
xchg
mov
ljmp
in
adc
xchg
lret
jp
jne
mov
inc
test
je
mov
je
bound
jae
repz
cmp
jl
popa
clc
mov
je
pop
test
not
lcall
icebp
rcrb
aas
mov
xor
dec
sbbb
pusha
dec
daa
std
jle
pop
or
inc
or
repz
scas
dec
in
mov
jae
clc
jne
jmp
mov
push
sti
jmp
cmc
cltd
mov
out
movsb
rclb
stc
jbe
iret
adc
out
cmc
ret
mov
cmp
ds
adc
pop
pop
ficomps
frstor
aas
js
push
lahf
push
cs
dec
inc
inc
and
notb
mov
inc
jmp
imul
mulb
loop
ret
lcall
push
dec
je
lock
sti
pop
push
lds
or
mov
movsl
scas
dec
popa
pushf
jle
push
cld
aas
fistpl
imul
call
dec
and
aad
jecxz
sub
push
mov
mov
repnz
cmp
xchg
in
js
push
pop
mov
lret
mov
cwtl
rol
adc
push
mov
jecxz
cwtl
aad
push
adc
sub
popf
pop
mov
mov
jns
mov
or
fs
mov
sub
xchg
cmp
sbb
mov
sbb
aaa
js
xor
out
fidivs
cmc
dec
outsb
pop
daa
dec
adc
addr16
xor
call
loope
ja
fisubl
into
add
sub
mov
mov
push
push
out
dec
push
mov
testb
movsb
xor
xchg
out
sub
fidivrl
mov
push
ficomps
data16
jp
insb
mov
push
int3
mov
sub
add
mov
inc
cs
jecxz
mov
pusha
int
jl
sbb
xchg
push
movsl
not
cmpsb
outsb
movsl
lock
or
mov
jne
xchg
cmp
adc
cmpsl
pop
jmp
int3
jle
mov
stos
test
repz
mov
sub
jnp
rolb
mov
enter
mov
mov
sbb
sub
cld
lods
mov
jmp
push
lock
mov
add
mov
fidivl
push
and
and
push
mov
fwait
jb
fwait
adc
mov
sbb
add
scas
aam
popf
push
mov
dec
xor
js
pop
enter
js
icebp
das
push
mov
out
test
sbb
stos
xchg
adc
fcompl
sbb
jnp
fmuls
negb
sarl
mov
idivb
loopne
testl
out
cs
cmp
xchg
imul
cmp
jb
or
js
loopne
testl
and
cwtl
aad
test
xorb
hlt
pop
pop
and
adc
dec
clc
or
cmp
xor
cmpsb
sti
xor
test
mov
repz
lock
es
inc
push
pusha
jns
arpl
mov
mov
sti
addr16
lods
outsb
cmpsl
arpl
int3
mov
mov
cwtl
ss
sub
xlat
sbb
outsl
push
inc
add
sbb
aas
or
div
xchg
test
pop
mov
mov
test
jae
dec
les
filds
mov
sub
lahf
or
dec
mov
push
mov
ficoms
ja
jb
jae
cmp
jno
xor
mov
aas
mov
roll
ja
dec
add
pushf
lods
ljmp
icebp
orb
adc
jns
stos
xlat
cmpsl
cli
xchg
rcl
insb
mov
aas
pushf
test
adc
sbb
insl
mov
jo
movsl
mov
push
inc
das
in
xchg
aad
and
ret
xchg
push
mov
jnp
add
ljmp
mov
cmp
shrl
pop
xor
mov
mov
and
cmp
push
dec
andb
and
subb
mov
lcall
xor
sbb
movsb
and
inc
cmp
sbb
mov
scas
xchg
cmp
pop
xorps
dec
pop
cmp
jg
jo
pushf
mov
or
ds
cmp
sub
cmc
testl
hlt
das
insl
jmp
lahf
fidivrl
inc
gs
mov
xchg
sub
dec
push
out
lods
ss
sbb
pop
or
jmp
and
or
lcall
mov
subb
shlb
adc
lcall
arpl
les
jp
and
shlb
jle
test
adc
out
fidivrs
aaa
pop
and
js
sahf
cmpsl
jg
dec
or
and
cld
pop
mov
cmp
jl
jle
sbb
or
and
and
pop
in
jmp
sub
and
and
inc
lahf
push
cmp
mov
frstor
scas
sahf
out
xor
jp
fimull
dec
fwait
or
mov
dec
dec
int
sub
movsb
inc
aaa
ljmp
sbb
aad
add
fidivrl
movsl
xchg
mov
or
cmc
fsubrs
mov
aam
pusha
lods
push
subl
shlb
hlt
jmp
sub
sbb
mov
xchg
mov
mov
mov
push
sbb
aaa
daa
inc
pop
jo
adc
mov
stc
hlt
ja
fs
test
mov
addl
fsub
out
jmp
dec
fmull
mov
jnp
cli
nop
pop
inc
mov
xchg
mov
sarb
int3
dec
call
xchg
sbb
pushf
fmull
pop
cmp
mov
mov
fwait
icebp
sub
lds
push
xor
jb
or
mov
outsl
in
cltd
movsb
repnz
add
pop
mov
iret
jmp
loop
adc
mov
push
cltd
inc
xor
adc
ds
lods
fsubl
je
jns
mov
outsl
in
test
lds
xchg
enter
mov
xorl
add
mov
cmp
lods
mov
mov
fwait
xchg
jbe
inc
mov
xchg
lods
push
xchg
xor
mov
aas
fsts
pusha
arpl
loope
xorl
jl
aam
out
dec
and
lret
jle
add
jmp
lods
add
call
adc
xor
nop
enter
adcb
mov
jne
xchg
jmp
pusha
popf
cmp
ret
sbb
stos
lock
and
rcrb
test
sysenter
ret
clc
fs
xchg
inc
and
das
push
icebp
add
cmp
in
inc
imul
inc
iret
in
mov
je
push
or
daa
sub
xor
or
in
mov
scas
and
mov
sbb
mov
sti
cmp
jecxz
stos
mov
sbb
stos
inc
add
lods
mov
pop
sbb
sbb
les
cmp
adc
mov
cmp
sbb
pushf
cmpsb
push
cmp
insl
mov
jne
mov
rcll
push
inc
jmp
mov
mov
in
adc
in
lahf
sbb
jne
fidivrs
andl
enter
fwait
pop
pop
jecxz
test
scas
ror
or
fcom
pop
push
enter
pop
nop
ljmp
push
repnz
aas
inc
test
loop
fistpl
mov
inc
mov
pop
aaa
jnp
jl
and
push
test
add
repz
push
repnz
xchg
aam
sub
pop
dec
fcmovnbe
jo
cmp
add
cmp
pop
cltd
jmp
mov
leave
add
push
push
into
insb
ljmp
inc
loop
js
xor
enter
push
ret
adc
mov
sub
mov
lds
add
push
mov
xchg
dec
dec
sub
push
sbb
mov
lds
mov
pop
jnp
fndisi(8087
out
ja
jns
incl
ret
add
ss
mov
add
lds
aad
push
mov
pusha
ds
gs
adc
mov
mov
push
jle
push
lret
jp
sti
inc
gs
scas
dec
mov
stos
fldcw
xchg
pop
sub
in
and
cmp
mov
loopne
cli
mov
inc
mov
pop
fidivrs
cmp
mulb
sti
lahf
lcall
mov
push
rclb
add
adc
std
out
pop
addl
out
jnp
push
pop
jp
sbb
js
xchg
dec
cmpsl
or
ljmp
sbb
lcall
or
adc
repnz
shr
sbb
mov
mov
mov
push
mov
hlt
das
xchg
cwtl
fs
mov
dec
mov
jle
mov
pop
sub
mov
int
les
jbe
add
fwait
xchg
xor
aas
jle
nop
push
fisttpll
xor
push
shlb
pusha
dec
scas
lahf
repnz
nop
repz
mov
push
in
fldl
ret
jmp
xchg
cmc
mov
and
push
jp
mov
sbb
pop
addr16
inc
mov
xchg
mov
mov
push
push
and
inc
jae
mov
add
or
pop
setb
fimuls
pop
outsb
pop
int3
and
int3
repnz
adc
mov
repz
cmp
jp
and
xchg
popf
add
scas
js
movsb
fidivs
xor
jae
push
push
leave
test
ret
mov
cmp
in
flds
sbb
mov
push
lods
shl
subl
shrb
in
pop
jle
sar
cmp
bound
push
mov
adc
or
lcall
adcl
jg
jb
fidivs
pop
leave
mov
in
jns
mov
scas
dec
scas
fadd
sub
pop
add
sbb
fld
mov
push
arpl
sbb
xchg
repz
pop
cli
and
out
in
sub
and
mov
jle
dec
add
jge
sub
fcmovbe
sbb
jo
out
aam
jge
lret
mov
scas
sub
pop
out
add
jg
inc
or
lds
cmp
mov
cld
into
mov
xchg
cmpsb
cwtl
xchg
xchg
pop
sub
pusha
mov
andb
adc
cwtl
sahf
ret
cwtl
fsubrs
jle
xor
enter
or
inc
dec
into
jno
sub
pop
test
adc
mov
mov
test
std
sub
lds
sub
mov
sarb
dec
lods
test
sbb
xchg
hlt
bnd
in
jns
fistps
mov
je
fucomp
cmp
xorl
sbb
or
scas
mov
ret
repnz
pop
gs
test
mov
inc
lahf
lods
sahf
cmpsb
inc
nop
aam
cmc
mov
ret
pop
sub
cmp
insl
or
adc
adc
aas
and
gs
and
push
add
push
inc
mov
xchg
insl
sbb
push
mov
imul
stos
inc
jmp
pop
clc
push
mov
or
hlt
mov
mov
ljmp
xchg
mov
je
ss
sbb
scas
mov
dec
sarl
jg
cmpsl
aaa
or
sub
out
mov
cmp
lret
or
lds
mov
sbb
sbb
mov
mov
or
jbe
mov
pop
xchg
or
jo
xor
mov
push
sbb
mov
pop
sti
xchg
imul
orb
das
in
inc
mov
lods
imul
mov
leave
or
scas
push
cli
dec
xchg
push
mov
pop
push
int
arpl
outsb
add
inc
ret
add
je
xchg
aaa
cs
cmp
push
inc
or
xchg
inc
sarl
adcl
out
je
bndstx
xlat
xchg
cmp
inc
into
mov
sub
jl
add
dec
stc
nop
xchg
stos
sbb
and
pusha
mov
decl
xchg
scas
push
inc
add
fidivrl
hlt
xchg
inc
sti
inc
jnp
sub
pop
int3
mov
xchg
jmp
ds
mov
cmc
leave
sub
xor
mov
jb
and
sbb
std
imul
insb
cmc
sub
adc
orps
add
and
push
sub
and
hlt
int
mov
sti
daa
inc
aam
js
mov
ja
pop
mov
push
int3
cmp
inc
mov
push
cmp
mov
mov
add
cmp
push
lahf
loope
pop
leave
xor
rclb
sarb
std
in
hlt
lea
xor
pop
ds
push
and
jge
sub
mov
cmp
inc
ja
nop
loop
push
pop
mov
sbb
in
lea
pop
mov
and
push
adc
xchg
outsb
loopne
subl
stc
das
inc
testb
inc
xchg
subb
lcall
insl
sbb
in
push
sbb
ror
add
inc
mov
and
push
out
adc
aas
pop
xchg
cmpsb
fnsave
push
es
pop
add
mov
mov
pop
arpl
push
in
out
cs
or
mov
dec
xor
into
scas
aas
xchg
outsl
fsubs
or
sub
test
int3
push
cmp
mov
fimull
ret
and
inc
and
inc
dec
jnp
xor
xchg
enter
movsl
cld
and
jo
jl
sbb
sbb
mov
pop
les
loopne
lock
scas
mov
cmp
out
les
scas
std
out
push
and
dec
cmp
and
fiaddl
clc
leave
xlat
fnstenv
xchg
add
je
sti
xor
mov
cmpsl
out
dec
dec
sti
xchg
movsb
jl
nop
sub
dec
and
adc
inc
lahf
push
pop
leave
mov
push
subl
pushf
mov
jns
lock
pop
fstp
incl
push
shrl
arpl
xor
rolb
and
mov
out
add
fistpll
loope
push
and
cwtl
sub
ficomps
fs
dec
lods
jge
sbb
ja
xchg
add
lds
dec
cmp
stos
popa
add
je
sbb
in
enter
add
lret
adc
nop
pop
ffree
pushf
sub
pusha
mov
and
data16
add
mov
aaa
adc
inc
push
cmp
pop
outsb
xor
mov
rorl
into
ss
pusha
stc
inc
insb
lds
push
mov
add
sbb
pop
xor
push
mov
or
inc
movb
aas
xchg
adc
test
fstps
stc
pop
aad
mov
idivb
cmp
pop
sti
std
add
xchg
lret
cltd
cmpsb
insl
jmp
and
dec
aam
add
out
adc
xchg
pop
scas
inc
fwait
pop
or
xchg
lahf
sbb
incb
and
icebp
dec
bound
outsb
in
add
ss
dec
cmpsl
pop
ljmp
pop
fisubrl
cli
hlt
cli
andb
sti
or
dec
sub
dec
repz
arpl
gs
pop
mov
fisubl
loope
loop
test
dec
or
bound
dec
out
mov
lods
mov
les
push
stos
mov
and
imulb
ret
lahf
gs
cld
adc
stc
sti
push
jp
jge
in
popa
outsl
pushl
jnp
cmpsb
inc
mov
lcall
pop
jno
add
cmpsl
fadds
enter
push
cmpsb
xlat
jle
sbb
mov
xchg
mov
cld
bound
movsl
aaa
bnd
roll
xor
sbb
mov
cmp
lcall
movsl
and
or
adc
inc
in
popa
dec
mov
or
jl
pop
cbtw
inc
add
xchg
jmp
pop
xchg
sub
add
lahf
das
pop
fdiv
adc
mov
xor
outsl
mov
jmp
sti
decl
in
cmpsb
mov
jno
pop
stos
aad
or
mov
lahf
sahf
jb
insb
push
mov
mov
mov
xchg
arpl
popf
les
repz
movsl
sub
mov
jg
sbb
sarb
xor
lcall
cmp
daa
dec
iret
imul
aaa
sbb
push
inc
das
lea
mov
repz
pop
clc
fidivs
shlb
mov
mov
shlb
cmp
insb
in
mov
xchg
pusha
in
add
cmpsb
jo
mov
jb
jg
out
out
adc
mov
jl
ljmp
test
or
in
cmp
mulb
orb
cmp
adc
mov
jmp
sub
dec
push
lret
dec
hlt
outsl
xor
std
jbe
enter
push
flds
sub
adc
add
fs
jg
pusha
mov
lea
out
xchg
clc
sbb
cmc
mov
lahf
mov
cwtl
les
jle
mov
fcom
xor
pushf
jb
pop
movsb
pop
je
push
push
sub
push
popf
sub
mov
stos
mov
jg
pop
sub
popf
pop
test
sti
add
xchg
mov
jo
mov
cli
dec
pop
mov
pop
and
lock
shll
out
enter
pop
mov
or
push
and
dec
out
inc
pusha
sub
dec
push
lds
inc
mov
mov
mov
std
pop
push
leave
mov
jnp
jns
xor
subl
and
cs
dec
push
sub
lods
mov
aad
push
cmp
or
jg
ds
scas
aam
jo
nop
dec
sbb
xor
int3
inc
lahf
mov
cwtl
inc
dec
ljmp
or
in
or
das
push
aad
add
mov
or
fs
jns
mov
jg
sub
mov
test
testb
mov
mov
into
mov
and
pop
pop
jae
in
repz
mov
into
push
inc
out
sub
inc
sub
fidivrs
repnz
jg
cwtl
aaa
movsb
jb
inc
mov
mov
push
push
dec
nop
jno
call
or
jns
add
sbb
xchg
out
movsl
imul
push
test
lret
call
adc
leave
xor
sub
jmp
mov
mov
dec
fs
jecxz
decb
pop
jecxz
in
xchg
enter
je
arpl
sbb
out
push
ret
add
and
int3
push
push
pop
mov
sub
stos
lds
insb
arpl
push
jbe
push
es
int3
push
dec
movsl
lret
inc
mov
aaa
sbb
mov
fcoms
insl
aam
in
cltd
mov
pushf
imul
jecxz
pop
inc
push
mov
or
cmp
or
mov
out
dec
jmp
xchg
cld
sub
inc
mov
pop
pop
push
xor
and
adc
stc
cmp
mov
xor
push
inc
das
push
stos
mov
into
subb
pusha
test
fs
pop
mov
aas
aam
mov
xchg
cmp
out
dec
sub
ds
rcll
pop
ja
arpl
jo
mov
or
adc
cwtl
add
cmp
inc
fsubl
sbb
fcomps
xor
mov
fadd
add
scas
lahf
pop
fnstsw
ja
mov
fcomi
mov
push
jb
fldcw
add
lds
insl
movl
pop
test
mov
out
test
int
jp
das
adc
add
cmc
add
mov
mov
and
pop
inc
or
sbb
add
and
stos
jnp
jle
cmp
cli
ja
mov
adc
lcall
imul
and
aas
or
adc
out
jmp
push
aas
push
movsb
jmp
push
push
out
negl
adc
mov
idivl
jb
xor
pop
leave
mov
js
push
or
ficoml
pusha
out
pop
cld
xchg
cltd
aas
mov
loop
int
rclb
cmp
push
xchg
fsubrl
xchg
xor
cmp
lcall
xor
jmp
sub
fwait
out
cmp
xchg
xor
mov
sahf
pop
fs
or
ret
les
daa
into
cmc
and
int3
stos
out
add
dec
icebp
xorb
inc
add
or
jle
lret
jno
movsb
xor
cli
dec
enter
jp
add
push
dec
push
sub
into
outsl
arpl
push
pusha
xchg
adc
pop
lcall
inc
push
jbe
mov
shl
cmp
jl
mov
dec
or
mov
push
cmpsb
shll
sahf
inc
mov
ljmp
cwtl
repz
ljmp
sub
mov
push
aaa
pop
mov
fidivs
cmp
ds
xor
dec
test
push
add
push
icebp
insl
iret
test
sub
ss
clc
repz
pop
mov
xor
sbb
and
popf
adc
lret
in
adc
jecxz
adc
push
cmp
mov
push
jg
jmp
jl
lock
add
fs
inc
dec
outsl
shrl
jb
call
scas
xor
sub
cs
data16
xor
mov
jp
mov
out
clc
xor
lods
roll
clc
dec
mov
mov
push
add
cmp
jg
sti
rcrb
sarb
addr16
pop
pop
ds
push
loope
stc
xor
inc
frstpm(287
mov
call
loope
and
cmc
cld
push
sub
popl
xchg
inc
popa
inc
mov
jg
sbb
and
mov
sbbl
pop
jmp
mov
pop
and
jne
xor
push
xchg
sub
enter
sbb
sbb
enter
imull
xchg
mov
jcxz
xchg
jle
test
les
push
push
jmp
lock
mov
pop
jl
mov
fld
add
add
inc
mov
icebp
lahf
cmpl
mov
aam
and
or
lods
pand
daa
or
outsb
test
inc
and
movsl
cld
mov
dec
in
movsb
push
cmp
ja
arpl
popf
sbb
inc
push
xor
mov
fmull
pop
pushf
ror
adc
push
add
sti
pop
sbbl
and
xor
pop
xor
jmp
ja
dec
push
xor
subl
in
aaa
bound
mov
dec
ja
int
mov
fidivl
push
lds
lcall
inc
pusha
or
jl
add
mov
lret
jns
repz
sub
test
push
adc
ja
lds
cmc
and
in
fnclex
xlat
enter
scas
loopne
iret
mov
xchg
adcb
fstl
xchg
push
dec
jo
inc
add
fwait
je
inc
int
pop
jae
and
imul
mov
jp
call
test
cli
and
jb
xchg
or
pop
arpl
add
ds
into
add
xor
and
mov
jge
dec
lahf
repz
push
lret
ret
insl
mov
dec
dec
cli
arpl
ss
push
and
push
jmp
popf
adc
mov
or
push
movl
xchg
es
mov
loopne
movsl
mov
pop
sub
es
dec
mov
mov
negl
mov
pushf
outsb
sub
lods
les
sbb
inc
add
mov
adc
in
adc
andb
inc
mov
push
adc
pop
xchg
aam
xor
call
cmc
dec
wrmsr
push
jae,pt
lahf
mov
out
les
rcll
mov
aad
jo
xchg
add
push
sub
popa
xchg
or
dec
sbb
mov
cs
jmp
lock
dec
sub
addr16
push
mov
mov
adc
stos
lahf
fdivs
and
sbb
or
mov
jge
add
cmp
mov
jne
faddp
dec
pop
dec
insb
cmp
inc
dec
add
scas
push
flds
xchg
inc
mov
nop
sub
pusha
mov
push
rorb
push
std
or
sub
jecxz
add
data16
and
push
icebp
stos
mov
mov
movsl
fistpll
add
jmp
sub
outsl
xchg
mov
inc
leave
rclb
pop
icebp
dec
mov
loop
movsb
push
sti
aad
adc
sbb
jl
in
jl
cltd
mov
sub
popa
xchg
sub
adcb
loopne
sub
insl
xor
mov
and
jmp
push
pop
js
scas
add
imul
sbb
xor
fsubs
or
push
lds
pop
adc
sahf
adc
cmp
fsub
jno
cwtl
inc
movsb
les
cmpsb
mov
dec
jmp
ja
jb
xor
jne
inc
outsb
mov
orl
ja
cmp
out
leave
subb
mov
mov
lret
out
adc
cmpsl
insl
xabort
or
movsb
pop
test
inc
cmpsl
call
cmp
movsl
inc
adc
fwait
ss
push
push
test
sbb
pop
les
cmc
sbb
hlt
subl
test
add
iret
xchg
inc
and
dec
aaa
mov
loopne
sub
movsl
clc
mov
idivb
xchg
leave
jnp
push
in
inc
fninit
imul
enter
arpl
addr16
lods
dec
ret
sarl
mov
dec
xchg
icebp
mov
inc
xchg
outsb
stos
mov
in
lret
imul
fisubrl
xor
jne
xor
jg
cmpsb
sub
aam
int3
xchg
gs
into
add
jnp
xchg
stos
ret
dec
add
mov
dec
ds
insl
inc
or
lea
test
adc
cmp
or
test
aas
pop
pop
cld
sti
aaa
icebp
aad
cmp
call
rcrl
dec
push
sbb
movl
sahf
sahf
adc
lahf
in
add
push
or
inc
mov
movsl
xor
dec
lret
leave
jae
xor
movsl
cmp
mov
cmp
cs
dec
cmpsl
imul
adc
adc
jle
inc
dec
cmp
mov
js
xor
arpl
test
mov
xchg
jp
adc
mov
inc
out
and
fisubs
and
pop
pop
or
adc
mov
adcl
push
outsb
xchg
vmread
xchg
inc
jnp
icebp
cs
outsb
testl
orb
pop
adc
psrlq
daa
cmp
ja
add
xchg
clc
in
add
fwait
cli
add
ja
fwait
mov
ja
fchs
aam
aaa
cld
jg
stc
dec
pop
dec
movsb
aaa
push
in
fldl2e
jns
and
push
dec
push
mov
and
push
arpl
test
sub
fcom
mov
jmp
int3
hlt
cmp
xchg
pushf
cmpsl
popf
and
dec
and
pop
mov
adc
push
inc
loopne
shl
xchg
xchg
mov
push
dec
test
mov
in
xor
push
and
in
mov
rorl
or
sbb
leave
mov
mov
push
ss
in
cltd
mov
inc
mov
mov
in
jnp
pop
jns
cmpsl
popa
jnp
into
xchg
xchg
sbb
pushf
cmp
rol
jmp
pusha
dec
in
add
mov
enter
xchg
andl
add
movsb
mov
adc
inc
lahf
cltd
fwait
mov
xor
ljmp
dec
xchg
inc
pop
jnp
mov
mov
insb
in
mov
jns
pop
jne
lea
jo
adc
inc
inc
shll
movsl
rorl
fnstcw
vhsubps
cvtps2pd
cmpsb
mov
jle
push
imul
sbb
xchg
sbb
add
xchg
loope
ret
test
imul
and
push
mov
add
pop
subb
pop
cmp
cmc
add
jb
lcall
xchg
pop
or
dec
rcl
push
adc
push
repnz
or
inc
insl
inc
sub
push
and
scas
popf
pop
ror
jne
xchg
lock
mov
add
mov
inc
or
mov
into
dec
add
stos
push
sub
ss
dec
gs
xlat
xchg
add
cwtl
sub
mov
pop
loop
ljmp
mov
sub
mov
add
xchg
not
dec
daa
xchg
xchg
cltd
mov
in
popa
inc
ficomps
inc
cmp
hlt
jno
loopne
popa
lock
repnz
mov
je
push
gs
stc
push
dec
or
fisubrs
bound
rorb
add
add
jle
icebp
hlt
sti
push
stos
add
jnp
mov
bound
jmp
std
add
cld
lock
mov
sbb
add
mov
fcoms
hlt
pop
inc
cmp
and
mov
push
mov
dec
cltd
pop
ljmp
cmp
cmpsl
pop
jle
pop
jle
nop
push
shrb
incb
xchg
movsb
in
loop
pop
cwtl
or
jl
aas
xchg
cmpsb
leave
fsubp
sbb
cmp
push
pushl
sub
test
sub
shlb
dec
cmp
dec
dec
mov
iret
push
adc
mov
push
inc
cmpsl
repnz
jge
in
sbb
and
hlt
xchg
or
inc
sti
and
insb
dec
sub
ja
jns
xor
jno
fdivrs
pop
cmpl
cwtl
jg
push
and
mov
rcrl
pop
jle
mov
add
and
shrb
or
fwait
enter
xor
roll
and
test
dec
adc
je
stc
dec
jp
push
xor
add
lods
pop
shl
stos
mov
push
sub
pop
insl
dec
outsb
sub
inc
or
rcr
or
push
je
mov
outsl
cmc
lds
rcrl
and
adc
popa
add
loop
pop
mov
push
push
icebp
pop
int
jp
dec
cmp
jg
repnz
mov
stos
dec
inc
aad
aas
jg
sub
push
dec
vaddpd
cmp
push
loop
pop
add
mov
adc
lods
jecxz
out
pop
cmp
jle
sub
arpl
mov
cli
cmp
pop
out
leave
loop
test
pop
dec
ret
loope
mov
fsubrs
cli
ja
jne
scas
frstor
cwtl
pop
dec
aaa
and
pop
jge
dec
stos
xchg
stos
add
dec
and
sbb
movsb
mov
mov
pop
pop
scas
inc
fadds
mov
dec
add
lods
sub
mov
cwtl
add
icebp
mov
push
nop
mov
negl
cli
loop
jg
rcl
add
fstpt
push
movl
mov
mov
inc
aas
adc
jl
aad
pop
psubb
pop
jle
pop
adc
push
js
inc
mov
push
int
push
push
push
out
not
lock
js
test
aad
sbb
ja
and
pop
inc
movsl
jne
es
mov
int
cltd
js
or
or
test
mov
push
mov
cmp
cmp
adc
or
mov
loop
in
aad
inc
in
jg
aam
sar
mov
out
xor
sub
sbb
cmp
sub
movl
and
jbe
sub
ds
movsl
dec
or
jecxz
insb
push
or
mov
pop
sub
jmp
shrl
sub
les
jmp
mulb
mov
push
enter
and
ja
mov
test
cmp
icebp
adc
adc
xor
int3
popf
rorl
loopne
popa
clc
leave
rcrl
adc
fists
mov
jge
out
nop
je
dec
add
dec
mov
jnp
rclb
scas
mov
fdivl
loopne
pop
into
mov
push
sub
loop
or
cmp
loope
mov
test
mov
jge
or
imul
sub
push
in
jle
sbb
cmp
push
pop
lock
pop
mov
lahf
push
mov
insb
push
or
xchg
mov
xchg
mov
mov
arpl
mov
sbb
add
dec
sbb
adc
inc
mov
add
adc
int
dec
ss
aas
jp
push
inc
sbb
add
push
fs
push
addr16
mov
ja
jp
in
push
data16
or
ss
push
outsl
xor
lret
out
shl
test
dec
dec
loopne
sub
or
call
lret
je
pop
inc
xchg
mov
pop
push
adc
lods
mov
push
pop
leave
mov
and
imul
jge
les
sbb
cmc
xchg
mov
lret
loope
xchg
or
fs
add
test
andb
adc
sbb
mov
std
mov
sbb
xchg
add
stos
test
jns
in
cmp
push
sub
pop
cmp
fsub
and
dec
mov
xchg
fs
fwait
ret
hlt
sbb
and
ret
enter
and
xorb
lahf
cmp
lods
inc
xchg
dec
sarl
aaa
icebp
aad
mov
mov
ret
mov
aaa
cmpsb
loope
pushf
out
sarb
xlat
mov
push
cmp
loop
icebp
mov
or
inc
inc
push
sub
push
clc
fisttpl
arpl
test
mov
jb
ret
ret
mov
add
mov
add
xlat
enter
mov
push
cmp
push
mov
mov
loopne
std
xchg
lret
scas
add
xchg
adcl
xchg
dec
cmp
lods
push
xchg
inc
das
dec
mov
pop
dec
mov
inc
adcl
push
imul
sbb
mov
inc
xor
push
sbb
xchg
jbe
icebp
sahf
sbb
push
push
inc
gs
in
pop
out
push
cmc
pop
setne
cmp
sbb
mov
or
movsb
mov
std
stos
jmp
cs
push
pop
xchg
jno
call
and
out
shlb
or
pop
sti
adc
cltd
std
sbb
fidivl
out
lea
cltd
sbb
test
sbb
jbe
cmp
cmp
inc
and
or
divb
ja
scas
sub
repz
repz
mov
mov
cmc
push
push
mov
jmp
jg
and
pop
add
push
push
sub
cmp
jl
cmp
cmp
fnstsw
fiadds
lods
in
adc
cwtl
arpl
mov
lods
dec
mov
mov
addr16
jg
push
stos
add
sbb
push
mov
xchg
les
sti
mov
movsb
mov
cmp
fsubrp
jmp
hlt
cmpsl
push
push
adc
ss
cmp
xchg
push
mov
or
pop
pop
jg
fcmovbe
shrb
xchg
popl
mov
push
std
lret
mov
stc
cmp
sub
mov
jae
and
das
repnz
mov
das
and
mov
mov
push
mov
mov
icebp
adc
xchg
outsb
lahf
pop
adc
sarb
jge
lea
mov
ja
mov
cltd
dec
mov
arpl
ret
arpl
loop
xor
imul
inc
repnz
and
sti
and
ficompl
sub
and
sbb
jbe
mov
jle
je
clc
xor
and
add
or
test
test
sbb
jle
dec
jg
jnp
mov
lock
push
aad
push
ljmp
mov
cld
jbe
nop
push
mov
je
or
mov
adc
test
in
pusha
push
sub
xchg
jmp
dec
cld
das
sbb
nop
inc
and
add
movsl
jmp
popa
pop
lods
dec
dec
cwtl
sub
inc
orl
mov
push
scas
push
adc
jnp
xchg
subl
cmp
call
push
movsb
or
push
pop
inc
inc
mov
clc
sbb
lods
inc
xor
rorb
adc
fsub
lret
iret
xor
pusha
loope
fidivl
lock
sub
arpl
pop
mov
enter
cmpsb
inc
out
sbb
adc
scas
scas
lahf
jg
scas
add
pop
out
add
call
xor
ror
mov
lret
cmpsl
sti
sub
sbb
sub
dec
pop
xor
pop
mov
mov
arpl
popa
sub
test
decb
adc
jb
jle
arpl
scas
xor
jne
sub
bound
jle
push
xchg
pop
inc
call
xor
cmc
mov
mov
fadd
mov
and
subl
mov
int3
sbb
js
jne
inc
mov
push
hlt
int
add
fs
and
fwait
cmp
call
mov
sbb
loopne
push
push
push
fmul
fs
push
push
les
data16
mov
mov
inc
insl
popf
jle
pop
cwtl
mov
sar
mov
les
gs
into
in
inc
sbb
popf
fidivl
repnz
lods
and
dec
xchg
pushf
cmp
jbe
jns
adc
mov
mov
fbld
pop
repz
or
in
ja
push
in
inc
ret
add
shll
push
mov
adc
lods
shl
test
inc
adc
das
stc
mov
or
xchg
mov
adc
and
cli
cs
mov
imul
pop
jge
pop
nop
or
pop
jmp
es
gs
adc
ja
sub
test
sub
in
jmp
loope
pusha
mov
mov
push
and
jg
out
pop
std
loopne
cltd
fcomps
cmpsb
pop
ljmp
andb
scas
xchg
loope
add
stc
mov
add
jo
adc
jl
inc
cmc
popa
fcoms
sti
sbb
imul
inc
stos
fisubrs
sub
add
add
jle
push
in
addb
or
xor
test
push
jnp
cmp
and
mov
fwait
je
popf
add
out
pop
pop
xchg
sbb
jbe
orl
xchg
add
adc
cli
add
in
ja
mov
jno
jmp
and
cmc
mov
aam
mov
movsl
dec
lcall
adc
dec
mov
sub
push
lods
pushf
push
push
add
fmuls
inc
jne
xchg
iret
divl
lods
addr16
and
js
loop
dec
stc
or
pop
sahf
xchg
int3
mov
push
jle
pop
push
and
mov
mov
stos
call
mov
lahf
insb
adc
insb
mov
mov
arpl
or
and
pop
mov
add
iret
test
repz
jne
dec
mov
or
cld
push
mov
rol
outsl
andl
jecxz
shrl
dec
lods
jo
sbb
sub
clc
out
xor
adcb
xchg
mov
pop
cmpsl
call
jns
mov
hlt
or
inc
mov
jae
adc
cmp
xchg
pop
xor
out
addr16
xchg
mov
add
fadds
hlt
sbb
repz
inc
cmp
pop
ret
data16
cmpsw
add
in
negb
out
sub
ret
decb
les
mov
push
jo
sub
lret
mov
leave
adc
jns
push
sub
add
negl
or
icebp
pop
mov
das
cmpsb
fwait
out
dec
xchg
xchg
sbb
loopne
sub
jle
ja
cwtl
mov
mov
lahf
movsb
rcrb
xor
sbb
repnz
call
or
sbb
xor
int3
and
xor
xor
mov
outsl
mov
ret
pushf
shr
sub
out
jne
push
dec
adc
sbb
inc
adc
jno
int
mov
repz
in
jg
and
sub
fisubl
sub
sbb
cmpsb
or
adc
xor
pop
pop
lods
sbb
and
push
mov
pop
sbb
fdivrl
cmp
into
rcr
jnp
mov
into
in
dec
leave
or
mov
push
mov
xchg
popa
mov
mov
out
das
shll
sub
mov
mov
mov
dec
lods
or
jne
gs
xchg
xchg
sbb
sbb
jmp
push
xchg
loopne
fldcw
mov
adc
es
xor
jb
iret
int
and
xchg
pop
cwtl
js
sbb
les
jmp
mov
push
xor
mov
arpl
cli
push
mov
mov
inc
push
cld
xor
add
cmp
xchg
mov
loope
jge
or
aaa
gs
adc
jmp
nop
and
add
insl
mov
int3
push
inc
dec
pop
sub
stos
xchg
out
push
andb
mov
xchg
ljmp
icebp
adc
dec
into
mov
int
cmp
push
loop
lret
cmp
das
sbb
and
cmc
sub
add
mov
int3
mov
sti
push
ret
sbb
add
stos
and
mov
movsl
dec
mov
div
jl
and
ss
cmp
sbb
nop
iret
sbb
icebp
sbb
rcll
mov
in
add
inc
imul
mov
dec
xchg
mov
mov
lcall
xlat
dec
jns
adcb
add
jl
inc
mov
daa
adcl
or
xchg
pushf
adc
sbb
cmp
jb
lcall
bound
out
mov
xor
fdivs
shll
xor
push
bound
jecxz
in
fisttpll
inc
jle
cmp
lods
adc
orl
jne
daa
les
nop
and
jb
lds
jge
mov
loop
sub
xor
add
cmp
mov
sti
ja
imul
outsb
pusha
rorb
fdivrs
mov
imul
stos
jle
ret
jns
mov
insb
fdivr
lahf
stos
sbb
jne
sub
mov
data16
jge
shl
fisttps
and
stc
jmp
aas
and
xchg
and
xchg
movsb
cmp
popa
in
jbe
xchg
push
out
cli
adc
pop
mov
popa
andb
sub
rorb
scas
xor
jmp
sbb
fmuls
inc
fucomp
or
ret
arpl
hlt
das
and
aas
sbb
out
mov
call
push
jg
cld
push
popf
out
in
sub
fldl2e
pop
scas
jbe
cmc
xor
aam
xchg
sub
cmp
pop
test
popf
mov
cli
popf
dec
hlt
jae
dec
cmc
call
inc
adcb
lock
xchg
xor
aas
or
mov
adc
outsb
xor
xor
adc
nop
test
jg
jge
roll
aas
dec
test
pushf
dec
ljmp
lcall
scas
sub
mov
jge
cli
sbb
rcr
loopne
lds
cltd
push
mov
dec
in
mov
dec
jmp
adc
out
xchg
xchg
sbb
sub
xchg
push
ljmp
and
jb
pop
repnz
out
cmpl
inc
and
sbb
popa
lock
xchg
pop
inc
xchg
lcall
xchg
jb
loopne
dec
dec
sub
inc
imul
inc
xchg
adc
cmp
cmp
mov
insb
shlb
pop
xchg
mov
cwtl
js
or
subl
in
add
lods
adc
js
jp
ja
aam
push
fldenv
fucomp
and
rcrl
sub
mov
loop
sahf
addr16
lret
cmp
or
inc
sti
push
xchg
idivl
mov
popf
xchg
pop
pusha
lahf
jl
xor
jmp
mov
xchg
daa
in
bound
lret
leave
mov
ds
mov
dec
jb
cmpsb
lcall
fldenv
mov
pop
pop
push
and
cli
or
add
xchg
or
and
xchg
lods
pop
rcrb
push
add
lahf
mov
xorl
xchg
sub
mov
cld
aas
dec
jl
or
mov
cli
xor
add
jns
push
mov
divb
loop
repz
push
jne
shll
sbb
outsl
sub
sub
cltd
test
jg
in
mov
call
fxch
mov
movsl
push
push
stos
sub
dec
add
ds
add
add
and
sub
inc
inc
test
push
push
and
jg
jno
imul
mov
ljmp
jo
mov
mov
sarl
aas
and
test
js
icebp
andl
movl
dec
shl
pop
out
cmpsb
jno
enter
fs
sbb
fxch
push
xor
ret
inc
popf
push
mov
pop
mov
sbb
mov
out
test
inc
outsl
outsb
mov
cmp
insl
jo
pushf
fistpll
inc
pop
stos
scas
insb
xchg
jl
cmpsl
int
sub
or
push
dec
xchg
mov
lods
add
sub
cwtl
lcall
ds
pop
lahf
sub
xlat
dec
xor
flds
xorl
imul
or
inc
adc
jmp
sbb
shll
jno
scas
popf
hlt
fmul
jmp
adc
add
daa
lods
popa
scas
loope
push
add
add
xchg
cmpsl
fidivl
jge
les
push
mov
aad
sti
sbbl
fsubl
lret
inc
out
pop
jnp
arpl
ja
push
rcrl
add
repnz
or
sub
mov
cmc
sbb
in
sub
hlt
cmp
negl
xchg
dec
mov
lds
loope
push
adc
or
inc
fs
sub
pusha
cmp
out
pushf
pop
mov
pop
call
xor
xchg
mov
test
xchg
mov
shl
pop
imul
ja
push
xchg
lea
cmpsb
pop
pop
jbe
push
jbe
sbbl
mov
jle
out
sbb
xorb
and
pusha
xorl
push
pop
pop
jmp
cmp
testl
push
popf
movsl
loopne
and
cwtl
jp
test
sub
add
push
ret
sbb
fimuls
push
sbb
out
jne
jmp
push
mov
gs
sbb
push
and
add
in
and
das
jne
inc
jecxz
loopne
andl
stc
jmp
push
inc
cld
mov
das
ss
jecxz
imul
lcall
repnz
fdivrs
inc
add
sub
mov
push
pop
cmp
xor
out
mov
push
dec
sbb
je
push
jmp
push
std
mov
push
cmp
xchg
pop
testl
ss
shl
sub
xchg
bound
inc
adc
xchg
repnz
jne
jle
lcall
rorl
mov
mov
hlt
jne
arpl
cwtl
or
or
out
std
movsl
dec
loop
orb
push
cmpl
js
in
scas
pusha
shll
shlb
loope
mov
sbb
mov
clc
rcll
and
push
sbb
fstl
loope
mov
cmp
dec
mov
jecxz
js
outsb
das
jmp
cmp
gs
mov
mov
orl
adc
push
xchg
jae
gs
movsl
add
loope
add
lret
lcall
mov
cwtl
mov
pushf
clc
rcr
jb
push
or
and
test
xchg
cltd
mov
push
loop
jp
ficomps
scas
mov
stos
mov
or
mov
or
imul
and
mov
aam
imul
dec
push
loop
int
orl
int
cwtl
in
je
push
mov
push
jnp
mov
jmp
pusha
cmp
arpl
inc
mov
repz
push
sub
cmp
or
stos
xor
fsubl
inc
xchg
test
or
xchg
inc
pop
inc
mov
add
pop
loopne
and
aam
mov
xor
jge
out
in
or
imul
in
xchg
aas
shll
out
xor
cld
daa
int
sbbl
push
inc
xchg
xchg
inc
loope
imull
out
fwait
cli
xchg
mov
add
jge
movsb
in
insl
lret
mov
mov
out
jb
call
xchg
xchg
adc
mov
ret
or
mov
aas
push
adc
sbb
sar
cmp
mov
test
sarl
lcall
movl
jl
rolb
xorl
imul
test
adc
cmp
aad
mov
dec
mov
aad
or
mov
sub
lret
int3
jmp
xchg
addb
loope
inc
pop
sub
add
inc
push
or
out
int3
xorb
pusha
xor
inc
sbb
lea
sti
add
andb
int3
cld
inc
pop
shrl
lea
test
mov
out
mov
push
stc
fisubs
or
fwait
sti
scas
loop
in
enter
adc
out
pop
sahf
out
out
hlt
es
push
dec
mov
adc
test
fwait
push
jae
pop
in
es
int3
xor
into
or
popf
imull
icebp
push
or
dec
xlat
sahf
outsb
pop
aaa
and
shrb
cmp
mov
rcrl
sub
roll
pusha
sbb
sti
mov
subb
inc
fidivl
xchg
insb
push
mov
movsb
jbe
fildll
das
aas
jle
pop
add
into
sub
dec
mov
fnsave
or
int
bnd
or
mov
stos
push
jae
lock
push
adc
int
adc
hlt
inc
and
ds
insl
mov
mov
in
enter
cmpsb
pop
push
jae
popf
jmp
bound
jb
jnp
sar
lahf
stc
jmp
sbb
add
cmp
stos
iret
sbb
je
aam
aam
mov
outsl
jo
rorb
sarb
scas
mov
sbb
sbb
mov
lret
xor
dec
inc
jp
xor
dec
add
jle
sbb
mov
sub
jge
or
aam
nop
ret
lcall
bound
jmp
mov
or
sti
loop
xchg
cmp
out
insb
push
fildl
lods
mov
push
repz
fs
btc
add
bound
imul
sbb
xchg
push
mov
xchg
xchg
test
sahf
mov
ret
pusha
mov
sub
pop
into
mov
jmp
lds
int3
popf
pop
orb
les
sbbl
and
add
out
mov
ret
repz
jne
outsb
add
cwtl
test
push
fdivrl
stos
or
dec
int
lods
orl
pop
push
push
mov
jb
fstcw
xor
in
push
lcall
shll
movsl
sub
push
imul
cmp
jl
insb
punpcklbw
xchg
mov
pop
pop
mov
cmc
inc
pop
fwait
sbb
cmp
and
int
faddl
add
jmp
and
add
jl
xchg
mov
mov
and
data16
or
subl
cmp
push
mov
sbb
mov
dec
inc
dec
sbb
xchg
cmc
fadd
mov
add
inc
push
in
jb
cwtl
ja
lock
cwtl
push
clc
jmp
mov
push
xchg
shlb
aaa
jge
mov
dec
hlt
push
xchg
movsl
fstpl
xchg
cmpsl
and
pop
addr16
and
pop
fcompl
repnz
jb
cmpsl
sbb
pop
mov
scas
loopne
jo
cmpsl
fstpt
test
pop
mov
or
movsb
push
sbbl
push
inc
push
jno
sbb
outsl
lods
lods
repz
mov
cmp
push
jbe
ret
or
xor
add
xchg
xchg
xchg
and
dec
push
jbe
testb
xor
sarl
test
mov
clc
pusha
adcb
inc
je
add
jbe
mov
aaa
jnp
test
jns
lret
cmp
sarb
or
test
or
mul
std
xchg
outsl
popf
rcl
mov
mov
rclb
pushf
insl
int
xchg
jne
bound
mov
mov
ret
call
jle
out
xor
cmp
lret
cmpsb
fwait
lcall
js
lods
adc
sub
mov
iret
and
mov
leave
cwtl
push
sub
mov
into
ljmp
movsb
cld
repz
btsl
lock
fstpl
cmp
xchg
inc
hlt
inc
and
inc
push
dec
decb
mov
mov
mov
pop
call
dec
lahf
out
pop
xor
testb
mov
xor
inc
mov
inc
outsb
push
push
es
xor
ljmp
lods
add
dec
adc
fistpl
ljmp
fldcw
mov
test
js
xor
fxch
or
popa
sbb
outsb
aad
mov
or
lods
in
add
mov
xor
call
lahf
jo
sub
decb
jl
push
dec
pop
int3
cmpsb
add
fincstp
repnz
ret
jne
add
aaa
fldt
ret
inc
pushf
das
mov
arpl
rcrl
sahf
lcall
dec
dec
addb
cmp
or
jae
fnstsw
xor
mov
fwait
xor
jg
pop
in
mov
incl
outsl
cmc
aam
mov
xchg
pop
xchg
adc
xchg
push
bound
inc
xor
push
xor
stc
bound
clc
mov
xor
mul
adcb
dec
mov
popl
push
jns
mov
popf
mov
cmp
xor
out
movsl
js
sahf
mov
push
mov
and
int3
jno
lcall
out
jb
push
fcmovnu
or
mov
mov
mov
push
lods
or
or
sbb
xor
jmp
jmp
mov
push
repz
mov
cmc
dec
mov
inc
lock
mov
das
lds
xor
pop
mov
jne
outsl
in
cmp
gs
imul
imul
xchg
cli
fadds
sub
dec
imul
repz
fs
fmul
sub
int3
mov
repnz
lock
sarb
mov
inc
xchg
arpl
inc
cmpsb
outsb
mov
popa
iret
outsb
mov
sub
xchg
lds
push
push
rcl
jge
daa
into
sub
pop
sub
cld
lret
rorl
inc
gs
notb
sub
xor
fnstsw
pop
jns
adc
dec
test
ds
add
mov
mov
pop
lods
test
movsb
pop
loopne
pop
push
add
sbb
out
or
mov
mov
pusha
xlat
lret
fs
pop
dec
or
pop
sti
bound
std
mov
aaa
fcoml
mulb
cltd
pop
inc
jp
nop
jp
or
adc
lret
add
cmp
pop
push
lods
rclb
sbb
and
jp
jp
int
xchg
add
inc
stc
test
pop
out
test
sub
in
lock
nop
jo
fimuls
les
mov
mov
pop
jb
daa
sub
sbb
roll
lock
sbb
xor
mov
dec
in
sbb
cmc
jbe
ljmp
inc
in
stc
pop
dec
pop
stos
pop
pop
dec
sub
std
add
push
into
jb
fs
test
sahf
add
insl
pop
mov
ljmp
popa
push
dec
sbb
movsb
or
cld
lret
xchg
push
xor
divl
push
imulb
insb
ds
sbb
cli
push
inc
add
sbb
arpl
sbb
cltd
lcall
jp
or
test
mov
cli
aam
add
imul
pop
fcmovb
leave
xor
jg
xchg
loopne
add
movsb
lret
scas
enter
aaa
push
jae
push
packuswb
and
xchg
or
andb
or
pop
cwtl
xor
adc
das
lea
sbb
mov
out
cmp
xor
aad
jae
in
les
cmpsl
fnstsw
mov
ss
push
jne
imul
frstor
je
dec
faddl
scas
call
test
cs
hlt
inc
push
aad
mov
jge
sub
pop
sbb
scas
lcall
adc
cmp
jnp
sub
cmp
shl
gs
pop
mov
and
cwtl
push
mov
xchg
cld
jb
cmp
fisubs
push
mov
stos
inc
and
aas
cs
jno
popa
sub
stos
and
mov
dec
mov
inc
fildll
push
and
enter
aam
xlat
sarl
stos
adc
jle
cmpsl
mov
mov
xchg
jecxz
inc
in
pop
mov
cmp
gs
xchg
sbb
sub
cmp
fcomip
insl
aaa
pop
dec
cltd
movsb
aas
shll
mov
jne
rolb
mov
adc
clc
dec
pop
out
sti
add
pop
adc
cmp
orl
add
sti
xchg
ror
lds
in
test
lods
lcall
cwtl
bound
outsb
cmpsb
jmp
xor
and
arpl
add
adc
mov
dec
in
adc
sub
in
out
push
push
jnp
lock
cmp
mov
or
ljmp
pusha
sti
sbb
sub
les
dec
int
jle
sbb
repz
jne
leave
ret
push
iret
and
mov
xchg
mov
jg
pop
xchg
lea
test
loopne
iret
fucom
xchg
hlt
decl
popa
jo
in
push
mov
or
adc
inc
push
cmp
imul
jge
int3
inc
ret
pop
incl
stc
sbb
sub
xor
cmp
xchg
jno
dec
sub
int
test
sti
and
push
add
xchg
ret
xor
mov
shll
mov
inc
push
mov
dec
idivl
mov
loop
idivb
inc
outsb
in
jo
stc
test
es
adc
loope
shlb
add
arpl
adc
iret
cltd
or
out
inc
push
or
les
lret
jge
outsb
fisttps
scas
lods
addl
mov
je
jo
into
xor
xchg
cmp
and
into
adc
sub
sar
dec
pushf
jge
adc
sbb
mov
mov
cmc
sub
arpl
fsubrs
xchg
pop
dec
fiadds
mov
sti
jnp
mov
or
ss
xor
pop
cmpsl
sub
inc
or
or
ret
cmp
mov
aaa
je
xor
jecxz
imul
jae
dec
push
gs
mov
outsb
clc
xchg
push
sbb
inc
mov
mov
sbb
test
mov
call
xorb
cmc
es
pop
dec
sbb
mov
mov
ds
lret
cmp
movups
insl
xchg
add
xorl
ret
notb
movsl
lock
or
jns
jb
jle
rcpps
xlat
xchg
iret
out
add
adc
sbbl
test
jl
lock
mov
or
xor
and
ret
lock
push
stc
daa
out
mov
jmp
xchg
popa
inc
inc
loope
mov
fs
xor
fsubs
ds
movsb
ss
mov
add
lret
shrb
adc
movsb
mov
xchg
das
dec
xlat
pop
xorb
mov
insb
adc
sbb
pop
inc
sbb
wbinvd
hlt
jge
lret
jns
ja
clc
aaa
sar
push
test
sub
mov
fidivl
dec
movsb
lods
lods
bound
pop
dec
decb
dec
je
sbb
xchg
or
pop
sub
pop
inc
xor
adc
dec
jmp
bnd
mov
adc
flds
test
pop
pop
test
xchg
cltd
adc
jecxz
in
push
dec
popf
jne
push
mov
mov
and
cmpsb
mov
jbe
sbb
mov
sbb
pushf
xor
aad
cmp
adc
enter
mov
les
push
mov
sbb
xchg
and
test
adc
and
add
xchg
xor
mov
iret
cld
stos
sti
mov
andb
cwtl
cmp
xchg
sbb
jmp
js
mov
daa
pop
mov
pusha
xchg
xor
dec
push
pop
dec
or
jmp
xor
nop
jg
jo
loopne
push
aam
push
add
dec
push
ret
dec
es
leave
jp
shll
xor
std
nop
std
xchg
movsl
movsb
push
xor
nop
sub
and
ds
dec
and
add
gs
call
aam
inc
push
out
jno
jle
je
mov
rcrb
fs
aaa
adc
mov
adc
push
jmp
movsb
jmp
std
adc
pop
outsl
dec
mov
fisubs
les
lods
mov
in
aad
icebp
jl
dec
lock
jae
dec
fisubrs
cmpl
lea
xchg
lea
inc
imul
in
or
xchg
xor
add
sub
cmp
adc
sbb
push
or
mov
xlat
inc
pop
std
push
shll
test
dec
leave
aad
cli
les
inc
pop
lock
ds
sub
add
fistl
add
jmp
clc
inc
inc
xor
movsb
mov
ja
push
xchg
mov
push
push
subb
sub
in
add
mov
jg
fmuls
jecxz
mov
sub
add
into
ret
aaa
push
fisubl
nop
dec
div
add
mov
adc
shlb
mov
add
scas
jns
xor
xor
js
pop
aaa
and
push
in
jno
dec
jb
and
cmp
nop
xchg
mov
jne
stos
fwait
xor
mov
pop
sbb
sbb
adcl
hlt
lcall
out
cmp
cld
jecxz
aas
jae
outsl
rcr
xchg
jo
sub
les
mov
xor
sub
cmp
xlat
push
add
sbb
loop
xorl
jge
dec
mov
pop
arpl
cmp
mov
aaa
pop
movsb
or
cmp
leave
imul
add
cmpb
jb
cmc
jl
and
mov
cltd
shll
subb
jmp
in
cmc
stos
sub
or
in
outsb
ss
push
mov
add
enter
cmp
push
inc
test
sar
adc
loopne
mov
imulb
cli
cmp
bound
jge
pop
sahf
mov
into
push
fistps
push
out
and
aam
pop
jns
jmp
je
and
popf
mov
inc
into
inc
inc
lahf
add
daa
xchg
cltd
gs
mov
dec
cmp
and
stos
xchg
push
lret
push
cli
fidivs
or
mov
dec
bound
fwait
push
add
sub
dec
mov
xchg
loop
jo
or
dec
jb
dec
inc
cmc
dec
dec
jae
or
mov
or
ret
jmp
xchg
outsb
xorb
inc
mov
add
xchg
xor
test
cmpb
je
aam
movsb
sbbb
mul
xor
test
add
pop
ret
xlat
sarl
je
cli
popf
shll
xlat
sti
adc
leave
movaps
add
mov
and
in
lret
cmp
mov
aad
xor
psubb
shlb
jmp
jnp
stos
sbb
cvtps2pd
jns
cmc
xchg
xchg
movsb
cmp
ss
push
sbb
cs
aad
mov
fdivl
push
push
cmovs
stos
stos
popl
xor
dec
movsl
add
mov
stc
xchg
xchg
push
rcll
adc
pop
xchg
or
pop
jg
rcr
stos
ficomps
lahf
jmp
rolb
repz
dec
cmp
push
gs
cmc
in
cmp
mov
nop
mov
jp
mov
cwtl
cmp
add
fucomip
jnp
push
pop
stos
hlt
fldt
adc
iret
idiv
push
mov
and
mov
push
mov
dec
negl
dec
aaa
les
mov
std
mov
push
cld
ret
sahf
cmp
rcrb
inc
cmpsb
fucomi
in
iret
test
scas
clc
sub
jbe
xchg
mov
in
fadds
outsl
sti
lea
aad
addr16
shll
add
imul
and
push
hlt
cmp
push
rcrb
mov
mov
test
or
inc
or
roll
mov
adc
je
sahf
mov
nop
sbb
arpl
mov
push
enter
sahf
pop
les
mov
or
cs
in
or
test
mov
mov
pop
sti
sub
in
insb
cltd
ja
push
loope
mov
xor
movsl
inc
sbb
aas
cwtl
in
add
repnz
movsl
inc
jmp
imul
jb
test
and
hlt
orb
add
dec
jecxz
rcr
ljmp
push
mov
sti
mov
shlb
adc
stos
mov
push
mov
fwait
mov
xor
cmp
out
out
jmp
pop
mov
fiadds
cmp
cmpsb
shlb
push
insb
das
int
fmuls
ja
nop
push
in
daa
movsb
dec
sub
inc
adc
dec
cs
out
mov
or
pop
shll
loopne
adc
mov
ljmp
sub
in
xchg
jp
pop
sbb
jns
aaa
sahf
stos
loope
das
inc
enter
jno
rorb
pushf
hlt
inc
mov
or
mov
cwtl
mov
call
movsl
mov
xor
mov
mov
cmp
insb
out
cmp
push
cltd
pop
ljmp
push
jbe
outsl
popf
sbb
cmp
mov
loope
mov
data16
jle
int
insl
pop
mov
fs
repz
in
arpl
jns
sti
cmp
cmp
adc
push
mov
jmpw
fistl
pop
mov
or
dec
jecxz
stc
out
int3
pop
push
daa
andl
xor
jmp
mov
push
pop
mov
sar
imul
cmp
movsb
test
inc
jl
pop
enter
repnz
aad
in
dec
fisubrs
in
test
ja
and
pop
cli
ds
std
fimuls
mov
mov
insl
jmp
dec
sub
mov
inc
dec
ljmp
das
mov
add
sbb
jmp
adc
inc
push
imul
repz
mov
popf
pop
inc
xchg
or
lahf
sbb
mov
movsb
cmp
clc
cmp
jle
inc
ss
add
pop
xor
aas
in
dec
je
cmp
adc
in
mov
mov
test
lret
enter
xor
cwtl
mov
jno
in
mull
das
mov
lds
inc
sub
xchg
mov
in
and
xchg
test
js
scas
sbb
xchg
movsl
jb
je
icebp
cmp
xchg
and
ja
mov
mov
pop
ret
sbb
rorb
xchg
rclb
icebp
jae
pushf
out
data16
sti
lret
mov
sbb
sbb
push
lea
mov
add
adc
cs
xor
xchg
or
xor
insb
js
pop
ret
cmp
push
int
cmp
mov
lret
jg
mov
dec
nop
lods
jnp
ret
fisttpll
movsl
repz
fwait
stos
icebp
jbe
cmp
mov
cmovb
outsl
cld
lahf
lock
sti
xchg
ljmp
es
cmp
mov
rcrl
rorl
push
in
scas
sbb
in
jb
call
insb
in
test
mov
hlt
fcoms
or
je
aad
movsb
cmp
adc
test
mov
and
mov
mov
cmp
mov
fwait
sub
pop
mov
mov
daa
jb
and
and
cmc
and
mov
ficoml
test
daa
int3
mov
ds
sbb
xlat
push
add
gs
push
dec
mov
cmp
pop
out
xor
dec
adc
xorl
mov
shlb
nop
jl
cli
or
cltd
inc
data16
out
jmp
mov
dec
mov
movsb
ds
mov
or
leave
xor
inc
push
icebp
lods
mov
and
inc
dec
jnp
mov
mov
out
inc
dec
xor
movsl
jb
add
andb
pop
adc
jb
inc
pop
faddp
sub
lods
jbe
insl
daa
sub
add
cmp
andb
inc
lcall
xor
and
mov
test
scas
xchg
mov
jns
scas
std
add
ds
bound
ds
jp
out
push
leave
xchg
pop
hlt
cltd
js
push
mov
insl
push
stos
and
sub
push
cs
movsb
sbb
cmp
cli
xchg
outsb
push
mov
and
pop
xor
cmc
fimuls
mov
lret
add
hlt
pop
stc
add
sbb
andl
push
lcall
out
fidivs
cmp
jmp
and
out
lds
xor
mov
push
sti
lds
pop
jg
xlat
xor
in
call
mov
jp
adc
movb
psrld
fisttps
rcl
stos
push
add
imul
adc
jecxz
xchg
add
jl
sub
popf
or
in
out
fdivs
je
das
scas
mov
and
xchg
stos
sbb
mov
je
adc
fildll
cli
adc
dec
sbb
insl
jb
movsl
sub
hlt
mov
imul
pop
sbb
aas
cmpsb
adc
push
int3
dec
push
mov
enter
jge
sbb
xor
lods
or
cmp
ja
push
xor
push
mov
popf
pop
cmpsl
inc
dec
popa
je
sbb
cmp
mov
cmp
jo
test
pop
sahf
nop
xor
mov
jae
xlat
sub
push
dec
or
or
or
and
add
repz
jg
pop
sbb
cmp
xor
cld
pusha
lcall
stos
or
loope
mov
inc
adc
and
sbb
pushf
lods
lret
inc
daa
add
mov
arpl
imul
rcl
dec
js
aam
pop
sub
fwait
bound
hlt
add
push
adc
lret
lret
fistl
add
or
and
add
add
dec
aam
mov
inc
inc
cwtl
bound
out
mov
imul
jbe
cmp
mov
sti
imul
lret
sbb
insl
xor
seta
loopne
mov
push
decb
dec
dec
std
push
shll
negb
pop
adc
in
dec
inc
jo
movsl
xlat
sub
out
fldcw
jae
iret
pop
fsubrl
pop
adc
mov
dec
rcrb
cs
cmp
or
leave
mov
clc
mov
in
mov
outsl
ret
mov
shlb
xchg
xchg
cmp
mov
rcrb
jle
es
ds
lods
mov
cmpsb
mov
lahf
jle
loop
push
pop
divb
into
mov
cltd
mov
mov
mov
mov
jno
xchg
dec
adc
xchg
lods
jge
mov
mov
inc
adcb
dec
cmpsb
or
test
mov
mov
into
loopne
xchg
test
jmp
mov
aaa
stos
jp
lret
mov
mov
test
sbb
push
xchg
mov
jmp
xchg
fldln2
ds
add
sbb
adc
insl
push
inc
in
icebp
xchg
sbbb
fistl
xor
cmp
inc
add
gs
imul
inc
push
sbb
or
int
inc
in
in
xchg
cmpsl
ja
aad
ret
aaa
add
jecxz
test
push
aad
outsl
push
popf
scas
jae
add
sub
inc
pop
enter
cmp
cli
aas
push
and
push
insl
jmp
pushf
clc
mov
fstl
in
mov
xor
pop
push
iret
popf
cmc
ss
mov
xchg
sbbl
fs
shlb
sbb
loop
movl
scas
xorb
mov
adc
lea
mov
sahf
rcl
test
xor
loop
inc
mov
movl
inc
lahf
cmp
jmp
or
jg
aaa
cmp
aaa
push
or
mov
mov
lea
xor
inc
add
lret
popf
fwait
push
jmp
and
fs
das
push
into
aas
mov
sub
subb
or
jb
insb
enter
xor
clc
inc
sub
adc
sbb
stos
dec
adc
inc
std
aam
js
push
and
cmpsl
push
mov
cmp
ljmp
mov
cmpsb
shll
faddl
xor
daa
mov
jl
jp
inc
ja
mov
pop
mov
out
xchg
es
aad
nop
repz
std
inc
das
out
pop
fs
int3
lcall
jecxz
pop
inc
dec
cmpsl
nop
jmp
rolb
in
imull
test
jecxz
pop
push
popw
leave
or
inc
sub
pushf
inc
fbld
add
imul
mov
bound
sub
es
jp
pop
jl
fstp
xchg
pop
and
pop
push
jg
stc
push
outsb
xor
add
xorl
orl
mov
inc
lock
shll
or
lock
cli
addr16
cmp
std
cmpsl
js
and
arpl
fiadds
pop
std
subb
or
mov
cmpsl
mov
dec
dec
jno
scas
jae
into
sub
add
sbb
shll
fdivs
cmp
js
outsb
and
pcmpeqb
shl
rorl
pop
sub
std
mov
add
sbb
mov
imul
and
mov
cmp
mov
jae
xchg
cltd
mov
cmc
sub
or
push
mov
repnz
cmp
mov
cmp
notl
inc
les
and
subl
out
and
add
loope
loop
cmpsb
fadds
js
and
test
mov
xor
mov
adc
hlt
fcmovnu
enter
cs
ljmp
sti
or
xchg
fwait
xor
aam
inc
add
test
inc
dec
aam
mov
scas
fildl
les
sbb
xchg
lea
stos
adc
xor
aad
sbbl
push
sub
shrl
cmovge
mov
dec
jbe
dec
pop
int3
loop
adc
sub
idivl
sub
mov
xor
leave
jge
mov
arpl
sub
shrl
lret
jb
fiaddl
adc
ja
lahf
jno
jle
jg
xchg
scas
sub
repz
mov
jne
pop
in
fwait
or
or
imul
xor
jmp
push
cld
dec
imul
loop
pusha
or
xchg
out
mov
aas
xchg
xor
insl
jmp
aaa
mov
orl
hlt
inc
ror
aad
xor
rcr
lcall
frstor
addr16
cmpb
loope
into
xor
call
jo
add
int
push
ljmp
mov
int3
sub
cli
cmp
dec
xchg
fwait
jae
mov
xor
or
outsb
adc
jno
pop
negl
mov
mov
mov
sub
cmp
test
push
inc
loop
cmp
cs
jmp
shll
mov
sahf
aaa
les
push
or
lea
js
orb
sbb
sbb
in
mov
out
dec
xchg
aaa
andb
rcl
dec
stc
jo
cmp
ja
cmpsl
adc
cmp
mov
stc
int
lods
dec
dec
daa
inc
lret
orl
inc
lock
sarl
sahf
sbb
push
push
sub
pop
aas
mov
cmp
pop
mov
push
xor
mov
rep
enter
iret
std
sub
iret
es
ljmp
pop
push
lret
cmp
xchg
xor
mov
xchg
push
stc
rcrl
adc
xor
or
leave
loop
jbe
push
sahf
rcll
popa
push
inc
inc
dec
mov
mov
lret
pushf
xor
mov
push
cmp
dec
fndisi(8087
and
push
test
bound
sti
outsb
js
xchg
repz
mov
vmovsldup
lea
imul
mov
sbb
out
mov
pop
jnp
lcall
xor
jae
fnstenv
dec
cmc
lcall
aas
pop
and
arpl
dec
negb
or
cmp
dec
sbb
call
xchg
out
xor
or
mov
jns
gs
lods
pop
push
jmp
jmp
fwait
xor
outsb
sarb
iret
mov
stos
adc
movsl
cmp
and
add
cmc
or
sbbb
enter
fstpl
clc
test
nop
imul
xlat
in
out
mov
jo
adcl
ds
xchg
lret
pslld
mov
mov
mov
cmovne
mov
sub
add
cmp
sub
mov
pop
fstl
adcl
sar
pop
adc
mov
dec
fdiv
andb
sub
hlt
loope
lods
lods
lods
imul
notl
insb
rolb
add
mov
lret
inc
inc
cwtl
mov
xchg
xchg
jbe
adc
outsl
add
add
push
add
repnz
lahf
mov
out
fwait
mov
lock
adc
xchg
jge
imul
or
add
mov
mov
jns
lds
aaa
and
inc
dec
ljmp
sub
dec
sub
push
jmp
xchg
xchg
loopne
stos
pop
shrb
daa
jb
sahf
out
xchg
dec
inc
push
inc
fcompl
in
sbb
imul
cltd
addr16
mov
cld
jnp
sub
sub
lock
add
lods
mull
pop
call
dec
jmp
mov
sbb
xor
cmc
aas
imul
adcl
dec
xchg
mov
cs
das
pop
cmp
lcall
das
stos
push
xor
shlb
xchg
xchg
jo
out
pop
cltd
ficoms
xor
mov
push
ud2
fistl
cmpsl
mov
aas
lcall
bound
cmc
mov
jae
lea
in
repz
push
mov
xchg
cmc
push
jecxz
call
xor
shrl
stos
aaa
xchg
lock
popf
loope
push
stos
cmp
or
dec
jne
bound
fmuls
and
mov
mov
sbb
lret
cld
push
cwtl
aad
sub
cli
jne
adc
out
pop
push
out
stos
sahf
dec
sahf
mov
xchg
aaa
xor
pop
lahf
int3
xchg
push
xchg
add
iret
jb
lock
aad
sub
es
in
sbb
dec
jmp
test
fs
mov
psrlw
pop
insl
add
xchg
mov
out
clc
push
xor
pop
jae
mov
and
jo
arpl
cmc
scas
cmp
cs
pushf
mov
mov
inc
xchg
ds
aaa
pop
je
push
mov
mov
mov
out
sbb
lods
adc
fdivrl
sbb
push
sti
mov
lock
sbb
mov
mov
mov
out
pop
or
push
idivb
mov
mov
adc
sbb
pop
push
out
push
mov
mov
sti
sub
sahf
popf
inc
push
sbb
mov
out
repnz
roll
mov
inc
mov
movl
inc
scas
incl
inc
pushl
aam
fdivrs
mov
lds
icebp
pop
xchg
add
inc
xchg
shr
imul
data16
inc
cld
in
iret
mov
xchg
arpl
aam
out
lock
dec
and
sti
daa
loop
adc
outsl
aas
lods
dec
cmc
cmp
inc
leave
faddp
pushl
pop
sbb
aad
out
lret
push
sub
dec
dec
push
call
adc
scas
fstpl
mov
push
mov
leave
cwtl
inc
pop
xchg
sbbb
add
dec
dec
xor
das
jo
int3
mov
push
cli
imull
adc
sbb
fcmovnu
fimuls
clc
inc
lods
sbb
test
xchg
loopne
mul
icebp
insl
test
lahf
out
aas
ja
jno
pop
xchg
push
movsb
fildl
or
cmc
bound
ficoml
cmpsb
sub
loopne
mov
push
xor
shr
outsb
sahf
inc
insb
adc
add
insl
sbb
jle
xor
lret
out
jmp
cli
imulb
aad
xor
lea
pop
push
mov
movsl
cmpsl
pushf
loopne
je
xor
sbb
xor
mov
decb
test
cs
dec
jae
push
lret
cmc
add
leave
mov
mov
inc
mov
imul
or
inc
jnp
jae
iret
rcll
xor
push
out
add
add
add
xor
dec
and
insl
pusha
dec
xchg
rclb
mov
repnz
pop
ret
adc
stos
adc
jp
fnstsw
stos
dec
cmp
ljmp
imul
inc
inc
mov
dec
or
jns
imulb
fildl
push
hlt
es
addr16
jle
xor
or
outsl
and
mov
loop
movsb
sarb
js
sbb
out
sbb
or
inc
cli
popa
mulb
sub
scas
mov
ss
adc
sahf
inc
cltd
xor
adc
neg
or
arpl
pop
cmp
repnz
es
lret
pop
sbb
imul
or
popa
ret
or
cmc
notb
mov
movsl
movsb
xchg
sbb
mov
insb
xor
fbld
push
sub
lret
sub
or
jb
inc
stc
mov
shll
fsubrs
jne
push
icebp
jns
imul
int3
scas
cmp
cld
sub
cli
push
inc
movsl
lds
shll
fwait
pop
ss
negb
imul
das
sarb
loope
shll
popl
adc
dec
movsl
inc
mov
mov
xor
push
mov
ret
shll
sub
movsl
call
sbb
jnp
js
repnz
in
push
loop
clc
sub
scas
and
jl
or
or
out
lcall
xor
cmp
xor
sub
push
nop
xor
ss
cmp
adc
arpl
sub
jl
jnp
or
mov
xor
fld
rol
out
mov
sub
and
ljmp
dec
dec
sub
test
into
pushf
mov
ds
dec
mov
lcall
pop
out
loope
leave
mov
xor
pushf
sub
ret
lret
pop
repz
push
inc
or
icebp
xor
dec
jo
aas
jns
repz
mov
add
xor
xchg
mov
lea
test
sbb
xor
or
aas
test
leave
mov
aas
sti
push
jg
lock
aad
mov
mov
mov
les
pop
js
sub
mov
bound
push
push
je
sub
imul
int
test
inc
mov
clc
dec
adc
cmp
pop
and
fdivrl
fildll
xor
fsubs
adc
mov
xchg
fisubrl
shlb
stos
push
out
mov
lods
push
loop
jmp
iret
loop
mov
adc
sub
jl
pop
sub
out
loop
jo
fs
push
loope
xchg
dec
inc
xchg
jnp
nop
fxch
xchg
adc
pop
lea
cmp
movsl
insb
mov
les
in
mov
dec
sub
add
test
dec
mov
mov
shl
xor
dec
dec
ja
mov
adc
xchg
das
jge
loopne
mov
cs
push
jo
outsl
sbb
inc
aaa
cmp
push
aad
out
popf
xor
mov
mov
push
daa
jle
pop
mov
aas
outsb
jbe
push
xchg
out
repz
or
and
sarb
or
adc
pop
adc
add
es
xor
pop
shlb
daa
jle
ja
mov
sti
jbe
push
cld
cmp
sub
dec
jbe
scas
mov
cmc
mov
js
pop
in
and
mov
jo
fsts
mov
push
fmull
xor
xlat
test
into
sbb
cli
and
xor
mov
xchg
bound
and
arpl
jb
cmp
push
add
jnp
adc
nop
mov
dec
data16
cmp
cltd
call
fisttpll
icebp
and
movsb
pop
stos
gs
mov
mov
dec
cmp
daa
fdivrl
jle
movsb
and
mov
std
repnz
push
sarl
daa
sbbb
sar
jne
in
cld
movsl
inc
sub
leave
pop
mov
sar
in
sbb
sti
mov
pop
mov
dec
inc
scas
stos
mov
inc
jl
dec
jne
lods
and
mov
ja
adc
xchg
mov
jle
ret
pop
pop
mov
mov
push
inc
sbb
int3
mov
nop
pushf
cmpsb
sbb
rcll
sbb
out
mov
and
xor
xchg
stc
adc
fldl
jno
pop
cmc
fdivrl
jmp
nop
div
cld
push
pop
sub
push
call
pop
test
dec
sbb
dec
cmp
cmp
js
pushf
aam
arpl
orl
sub
mov
dec
mov
xor
mov
adc
mov
imul
cld
cmp
xchg
pop
sbb
push
adc
ds
scas
lahf
and
adc
outsl
adc
mov
mov
in
adc
hlt
les
sub
cwtl
adc
xor
and
cmp
addr16
pop
pop
ja
cmp
rolb
das
shl
mov
mov
cld
lea
push
dec
std
rorl
jb
cmp
leave
or
aas
in
jecxz
inc
jge
jle
sbb
or
adc
mov
sub
sarl
dec
push
decl
mov
mov
or
sbb
aaa
mov
enter
js
mov
std
add
cwtl
lds
iret
in
xchg
xchg
inc
add
xchg
js
cltd
adc
movsl
and
pop
jo
cld
jg
pop
enter
or
sub
pusha
or
dec
mov
cmp
mov
je
std
enter
fisubrs
shrl
xchg
push
pop
ret
sbb
stos
shll
xchg
jg
ds
jmp
inc
mov
mov
out
add
rorl
inc
leave
pop
flds
mov
inc
xchg
push
inc
inc
mov
fwait
xor
test
movsb
fs
enter
push
bndstx
test
dec
or
loop
aad
movsb
fnstenv
loopne
insl
xor
mov
push
lret
pusha
cli
fidivrs
mov
push
scas
mov
out
xchg
add
jns
sub
dec
and
or
or
xor
dec
sbb
pop
pop
push
mov
stc
stos
pushf
js
in
or
xor
das
or
add
fs
jecxz
or
cmp
pop
std
inc
mov
jb
test
mov
jg
or
and
xchg
faddl
jnp
jp
and
mov
sub
call
idiv
fst
repnz
push
loop
mov
mov
jecxz
shll
sbb
or
dec
mov
jp
jmp
and
sub
cmc
das
add
cmc
sti
xlat
cmp
test
mov
sub
ror
and
inc
test
sub
orb
sub
push
call
clc
mov
or
jle
mov
dec
stos
cmpb
inc
sti
xchg
pop
sar
xor
in
xor
mov
imulb
popa
jle
lahf
fdivs
test
adc
sub
jmp
movsb
cmp
shlb
imul
out
popf
or
mov
lea
xor
pop
dec
movsb
add
mov
mov
popa
jne
cmpsl
test
push
xor
mov
or
std
push
rcrl
jmp
daa
bound
ljmp
mov
inc
xchg
inc
dec
and
adcb
mov
setnp
je
ds
xlat
push
rclb
je
cmpsl
repz
or
pop
adc
xchg
cld
mov
shrl
aam
adc
sbb
hlt
cmp
xlat
aam
stos
adc
xchg
aad
ljmp
dec
enter
inc
sti
sbb
insl
and
xchg
pusha
add
jae
aad
and
adc
mov
sub
cld
cwtl
lcall
lock
add
push
ss
adc
adc
jno
aaa
mov
imul
ss
mov
cs
mov
lret
pop
mov
iret
cmpl
pusha
loop
test
orb
cmpsb
mov
leave
push
xchg
mov
xor
mov
jmp
in
pop
leave
addr16
cld
loope
out
jno
insl
pushf
jns
and
stc
das
out
inc
push
rcrb
push
dec
mov
sti
out
sbb
sbb
inc
xorl
cli
outsl
ret
enter
push
pop
call
sub
pop
int3
jge
pop
sbb
pop
pop
lea
lcallw
jp
xchg
ret
rol
ljmp
js
push
ja
mov
mov
mov
aam
sbb
mov
mov
fsubs
add
or
adc
or
js
or
idiv
movsl
les
or
rclb
ret
or
sbb
pop
std
push
syscall
fisttpl
lret
into
add
sbb
and
in
fcmovnbe
adc
or
lcall
pop
jecxz
push
ret
push
test
cmpsl
push
inc
out
sub
xor
cwtl
imull
adc
out
cmp
test
out
arpl
push
cmp
ficompl
mov
mov
dec
mov
mov
popa
add
pop
addr16
push
inc
adc
push
xchg
pop
es
mov
in
adc
mov
jb
ud1
inc
bound
hlt
pop
inc
xchg
inc
dec
push
shlb
adc
ss
pop
fldl
sub
cwtl
dec
mov
imul
setnp
frstor
and
leave
loope
ljmp
and
mov
add
lahf
xor
mov
addl
js
mov
iret
stc
sbbb
repz
in
adc
mov
movsb
sub
imul
mov
mov
pop
ljmp
push
sub
test
cwtl
sbb
loop
mov
and
int
push
xchg
jle
mov
push
adc
and
shrl
stos
std
pop
out
lcall
lahf
and
adc
divl
xchg
movsb
sbb
sarl
test
xor
add
sub
or
adc
lret
imul
and
and
movsl
mov
sbb
dec
sbb
insb
adc
pop
pusha
ss
enter
arpl
insb
dec
mov
mov
out
inc
xchg
lahf
stc
mov
cli
shlb
adc
xor
push
jbe
popf
pop
sbb
mov
mov
sub
insl
pop
sub
add
push
mov
lock
std
das
sub
out
and
sbb
push
mov
incb
xlat
push
jae
fldt
cmc
xorb
jecxz
adc
xchg
ret
add
cmp
fidivrs
jae
cmp
push
adc
push
imul
insl
insb
scas
jl
inc
int3
jge
push
mov
cmp
into
shll
sarl
fsubrs
cmc
lcall
dec
cwtl
ret
mov
cmc
push
pop
and
mov
adc
push
clc
mov
aas
xor
scas
inc
fldt
stc
jmp
xlat
mov
movsl
cmpsl
add
sti
mov
popa
fistps
fwait
scas
popa
adcb
or
jp
jecxz
mov
dec
or
cltd
orl
fildl
jb
std
dec
outsl
and
mov
dec
shll
leave
adc
fidivs
fwait
jno
jne
hlt
mov
jmp
dec
xor
out
jle
inc
sar
and
xor
sbbb
adc
popa
jne
add
xor
iret
dec
pop
rolb
pushf
xor
insl
lret
js
push
sbb
or
arpl
imul
das
cltd
fwait
mov
out
loop
cld
jno
ss
incl
rcr
fmull
sub
xor
fwait
test
int
addr16
clc
mov
sub
pop
xor
dec
sub
icebp
mov
sbb
sti
xchg
mov
jns
cmp
cmp
lds
jnp
lcall
mov
shll
add
and
sbb
mov
fstl
out
pop
and
inc
push
xchg
push
mov
lods
adcb
xlat
mov
xchg
rdmsr
stc
pop
mov
pop
mov
inc
cmp
fldenv
imul
cltd
dec
dec
mov
push
aad
cmc
aaa
xor
cmp
jmp
push
add
push
xchg
and
mov
inc
shl
lret
push
idivb
out
testl
sbb
mov
xor
stos
xchg
fadds
dec
and
dec
ret
jg
push
scas
dec
mov
dec
sbb
sub
xor
jp
dec
popa
push
sbb
dec
sbb
in
fistpl
aas
sub
out
sbb
dec
xchg
in
sbb
mov
fwait
iret
adc
cld
push
add
mov
ss
test
filds
and
add
int3
iret
mov
push
inc
insl
adc
jl
dec
fldcw
jae
inc
sub
call
test
sar
mov
data16
xchg
cmp
pop
ds
jo
std
jne
test
cmp
pop
jg
sti
xchg
jne
cmp
pop
dec
xor
jl
decl
adc
ja
incb
mull
icebp
cltd
repz
int
rcrb
inc
outsb
scas
pusha
into
vandnpd
mov
push
jp
jge
xor
seta
jae
fidivrs
adc
ljmp
shlb
cmpsl
dec
in
out
dec
mov
sub
add
jbe
lods
loope
mov
rorb
mov
cmp
inc
mov
flds
xchg
test
xorb
int3
and
and
or
push
push
je
lcall
stc
rcll
fistl
mov
test
xchg
push
sub
pop
inc
notl
and
xchg
stos
cmpsb
jne
push
xor
jno,pn
adc
repz
std
mov
jb
out
rol
aas
clc
cmpsl
adc
xchg
mov
mov
ss
cmp
cmpsl
pop
push
mov
pop
push
ret
mov
clc
ds
flds
xchg
in
jb
jmp
bound
mov
mov
notb
inc
add
cmp
outsb
js
cld
push
test
in
sbb
scas
adc
or
lock
xor
or
cmp
cmp
lcall
push
mov
lea
pop
dec
sub
xor
add
into
push
jmp
mull
sub
rorl
fstl
iret
es
repnz
xor
and
test
rorb
add
jno
rorb
cli
xor
outsb
mov
xchg
arpl
add
fmul
or
fildl
lods
aas
pusha
adc
dec
add
mov
jo
and
and
lea
in
xor
ljmp
xchg
out
test
lret
push
lds
nop
outsb
hlt
in
test
out
pop
lds
sub
pop
idivb
shlb
das
nop
cld
jmp
or
inc
xchg
dec
xchg
or
xor
xchg
cmpsl
xor
fidivrs
lret
adc
mov
das
mov
ret
scas
xchg
test
inc
in
les
or
ljmp
sub
sub
pop
sbb
mov
outsb
or
es
dec
xor
cmp
cltd
fs
pop
mov
mov
jns
setle
scas
mov
ret
movsb
dec
loop
or
jbe
xor
cs
add
cld
mov
adc
int
scas
jecxz
mov
adc
adc
rcl
shrl
and
or
subb
fwait
dec
push
mov
stos
rolb
push
and
es
mov
pop
aad
mov
push
jg
adc
or
jp
cmp
arpl
sbb
ljmp
and
dec
mov
sub
js
cltd
fdivr
push
mov
test
rclb
jo
fdivl
clc
adc
mov
jno
inc
add
mov
aas
adc
lcall
adc
sub
neg
cmp
lds
loop
shrl
xchg
push
xor
int3
add
ja
jb
repz
and
xor
pusha
jo
lret
lods
push
loope
inc
sti
pop
shlb
rclb
jns
pop
dec
fists
xchg
mov
and
stos
sbbb
xchg
jecxz
notl
orb
jne
ds
dec
inc
test
movsb
add
inc
push
fs
sbb
ds
rcrl
mov
cltd
pop
into
fisttpl
icebp
cmpsb
xchg
mov
cmp
cmp
jnp
mov
jne
out
inc
lret
shlb
and
fld1
xor
ret
stos
mov
lret
cwtl
das
lock
js
xlat
sub
test
xchg
frstor
mul
jecxz
test
stos
xchg
pop
jbe
push
ret
cmp
pop
xchg
mov
mov
stc
xchg
lret
jp
xchg
add
jns
pushf
adc
lahf
stos
lods
enter
push
mov
addr16
add
test
js
adc
in
sbb
test
xor
mov
mov
out
enter
jle
insl
lock
pop
cmp
sub
xor
insb
pop
in
or
daa
add
and
or
add
call
fldl
push
adc
cmp
mov
ffreep
ss
mov
in
std
ret
imul
jo
jecxz
loopne
lret
pop
pop
fs
jp
push
inc
pop
mov
leave
xchg
xchg
mov
mov
inc
push
jmp
sub
popf
sub
mov
push
push
xorb
lods
xchg
js
pushf
aam
mov
test
cmp
out
cmp
arpl
rorl
movsl
adc
dec
cmp
or
stos
ljmp
repnz
and
js
pusha
popa
add
leave
mov
inc
test
inc
add
orb
dec
frstor
lahf
in
pop
or
lods
push
imul
insl
cs
test
add
fiaddl
dec
rorl
pushf
cmp
or
sub
mov
sub
fcmovu
xor
outsb
or
loopne
dec
mov
outsl
dec
mov
pop
mov
fs
aam
movsb
outsl
lret
mov
sbb
sub
lahf
xor
sti
rol
cmp
test
subl
divb
or
sub
mov
pop
in
int3
and
int3
cwtl
inc
cs
sbb
mov
loope
dec
mov
adc
sub
ret
sar
je
lret
incb
cmpsb
movd
cli
jb
arpl
pop
xchg
shl
mov
xchg
xchg
scas
push
add
xor
cltd
jb
lds
mov
out
dec
lret
pop
pop
lahf
add
lods
lret
out
cmp
cltd
cmp
jo
test
and
cmp
fsubrl
cs
pop
cmp
xor
cwtl
adc
and
call
mulb
or
add
adc
dec
arpl
lret
lods
sub
mov
add
xor
mov
lcall
daa
push
xchg
jl
icebp
into
aam
and
dec
call
loope
cwtl
int3
add
stc
mov
and
mov
test
xor
dec
imul
fbld
mov
adc
pop
push
int3
cld
mov
lahf
fwait
cs
out
jno
stc
test
sbb
ficompl
adc
pushf
imul
jo
adc
fs
push
dec
pop
jp
repz
fsubl
test
cmpsl
testb
int
mov
add
test
xor
xlat
mov
mov
push
sub
mov
sahf
push
ficompl
nop
jno,pn
enter
rorb
mov
dec
lods
imul
jmp
out
je
and
mov
adc
cmpsb
repz
jbe
lds
scas
dec
loopne
stos
in
mov
cld
push
addr16
callw
jne
jnp
jo
and
daa
daa
fistpl
bound
test
or
xchg
xchg
mov
xor
imulb
cmp
loope
stos
cmpsl
jp
loope
lods
out
cwtl
inc
aaa
pop
jne
push
lcall
push
mov
popa
dec
jge
cwtl
cmp
mov
cmpsl
les
mov
push
ss
outsb
ds
les
jmp
xor
repnz
test
inc
push
das
push
mov
imul
out
adc
ss
dec
push
fsubrs
stos
push
cltd
xchg
lds
mov
cmp
ja
jg
add
dec
out
xor
cmp
inc
add
or
sub
outsl
or
mov
inc
in
fsubrs
loope
xor
clc
lcall
push
dec
sbb
xchg
stos
movb
dec
cld
lret
or
icebp
jmp
push
and
mov
mov
lods
mov
pop
loope
mov
stc
sub
sahf
push
rcrb
pop
ss
rorb
ror
sbb
inc
adc
es
mov
ds
cltd
add
add
arpl
in
jns
enter
sbb
push
loopne
jmp
ret
pop
push
xchg
pop
fstpt
imul
repz
add
and
outsb
cli
enter
mov
pop
clc
test
push
scas
mov
mov
lods
xor
or
fsubs
mov
dec
ja
pop
ret
sbb
jae
scas
repz
cs
into
dec
pop
jge
jne
add
lret
sahf
stc
push
shll
stc
pop
call
aas
repz
lret
into
lods
cld
xchg
push
sbb
aam
ja
push
pop
rcrl
jmp
jle
fisttpl
add
xor
mov
lret
loope
pop
imul
sahf
das
pop
adc
lret
xchg
addr16
push
push
sub
adc
repz
bound
adc
jmp
sub
movsl
push
xor
shrl
stos
mov
imul
cmp
mov
mov
arpl
loope
adc
test
dec
dec
push
xchg
data16
add
pop
lcall
lock
fucomp
aaa
loop
xchg
lahf
jp
jmp
outsb
out
push
pop
idivl
iret
lret
cs
sub
jno
jae
pop
sub
mov
loop
push
rcl
bound
push
mov
mov
pop
mov
lret
dec
cwtl
mov
lret
insl
jo
add
negb
jmp
fdivrp
inc
mov
mov
sti
call
adc
mov
mov
mov
out
test
iret
and
mov
testl
cmpsl
cli
adc
jecxz
jle
dec
ret
jae
xchg
inc
lock
inc
vpunpcklbw
sbb
push
imul
lahf
cwtl
and
add
or
scas
mov
mov
sub
pop
test
pop
fwait
shrb
dec
mov
mov
loope
faddl
push
and
cmp
bound
shrb
and
arpl
js
leave
fs
jbe
sarl
or
mov
dec
cmp
ret
pop
lahf
aaa
hlt
shr
dec
pop
repz
mov
mov
sbbl
jl
outsl
jg
les
out
jae
dec
cmp
jge
add
fcmovu
jbe
out
imul
push
icebp
emms
pop
adc
scas
pusha
pop
out
loop
shrl
fsin
mov
in
ffree
lods
cmp
push
adc
ja
sub
adc
mov
adc
and
xor
psubd
sub
outsb
inc
mov
pop
dec
mov
mov
jne
mov
out
jl
add
in
cli
ljmp
xchg
es
jmp
inc
mov
and
movsl
xlat
mov
lds
int
mov
popa
jno
sbb
loopne
cmp
jmp
insb
bound
imul
in
ja
push
stc
sbb
fidivl
cmp
sbb
pop
mov
adc
sbb
pop
jg
mov
fimuls
cli
fwait
cmpsb
dec
lds
loop
movsl
loope
mov
addr16
xchg
cmp
ret
and
and
or
arpl
test
jmp
mov
ds
adc
ljmp
inc
mov
out
cli
and
ret
iret
andb
sub
mov
data16
mov
int3
outsl
jae
lods
lret
pop
push
fadds
cltd
push
push
lock
fisttps
pop
push
cmp
xchg
repnz
cmp
and
inc
jnp
popa
lock
fiadds
int
or
xchg
dec
push
icebp
jecxz
into
mov
inc
mov
inc
and
or
mov
lock
sbb
sarl
cs
fwait
adc
xchg
test
inc
fisubs
mov
mov
imul
push
mov
call
push
mov
insl
xchg
jl
shl
inc
ficomps
ret
cmp
nop
mov
mov
push
mov
push
roll
ret
mov
lcall
jg
xlat
aam
repnz
add
mov
das
push
xor
sbbl
cmp
mov
adc
jg
dec
xor
das
cmp
shrb
mov
gs
mov
push
or
or
xchg
push
dec
push
test
outsb
xor
stos
and
sub
test
rolb
cwtl
aad
aas
xchg
decb
cmp
mov
repnz
xchg
mov
mov
sub
adc
push
outsl
and
adc
sbbl
dec
push
in
pop
xor
out
push
lret
fs
leave
sti
add
push
popl
aas
testb
mov
outsb
adc
sub
and
mov
pop
loop
mov
popa
scas
cmpsb
mov
mov
lret
ret
pop
push
pusha
dec
pop
ss
inc
dec
cltd
repz
pop
adc
test
in
dec
inc
mov
inc
xchg
xchg
dec
mov
es
shll
popa
pop
or
xchg
lods
inc
emms
stos
add
add
shll
pop
inc
push
mov
js
mov
aam
add
or
ret
clc
xor
cmp
cmp
add
fwait
cmp
jp
jecxz
cs
inc
stc
add
cmp
test
scas
mov
xor
adc
xchg
in
mov
movb
mov
sub
adc
inc
test
mov
xchg
sub
popf
dec
fs
lea
icebp
inc
adc
mov
dec
sahf
push
push
jae
inc
mov
cmp
jge
and
lods
les
lret
inc
repz
int3
jl
test
jo
xchg
adc
test
popf
fldenv
notl
cmp
xchg
pop
sahf
rclb
sbb
add
outsl
mul
and
adc
notb
bound
mov
imul
mov
orb
push
iret
out
inc
cmp
jge
imul
enter
in
sbb
cwtl
add
fidivrs
mov
sub
je
jmp
arpl
add
and
popf
rcl
xchg
rolb
call
jp
jns
call
sub
add
jmp
data16
pop
cmp
test
in
xchg
push
repnz
insb
xor
jnp
js
xorl
out
xchg
std
shll
fs
xchg
rclb
cli
push
and
and
aam
int3
arpl
fwait
loop
inc
add
adc
mov
fidivs
cmpl
sub
cwtl
aad
xchg
fldenv
test
lods
test
in
xor
nop
pop
inc
andl
mov
shlb
or
push
jl
imul
cld
fcompl
mov
arpl
in
insb
sbb
cmp
push
fcoml
jb
dec
xchg
ss
jmp
gs
xchg
int3
mov
aam
addl
dec
popf
out
dec
pop
and
adc
loop
pop
cmpl
sub
sahf
push
ret
stos
fucomi
das
imul
cmp
mov
push
sti
cmp
int
mov
cmpsl
dec
cli
pop
popa
aad
scas
loope
lods
mov
ret
and
push
inc
jle
fdivl
sub
xor
rcl
into
sbb
lea
mov
hlt
bswap
or
repnz
rep
add
sbb
test
out
test
out
mov
sub
sbb
repz
pop
sub
subl
dec
dec
ljmp
jecxz
xor
jae
sbb
in
inc
sbb
push
test
mov
aaa
push
pop
lret
sar
pminub
lcall
mov
ss
das
mov
lds
and
jge
testb
xchg
or
xor
fistps
xchg
hlt
imul
mov
popf
loopne
movl
xor
dec
xor
xchg
lea
push
add
scas
pop
inc
jb
in
nop
sub
pop
aaa
push
dec
in
jnp
insl
mov
mov
push
sbb
out
add
bound
pop
push
outsb
sbb
mov
int3
out
imul
inc
repz
xor
sbb
inc
out
popa
loop
xchg
sub
mov
das
or
and
or
xlat
mull
add
sbb
jae,pt
out
in
sbb
adc
push
gs
outsb
mov
inc
das
xor
leave
or
adcb
lock
negb
shll
push
cmpsl
test
inc
insb
imul
rol
jmp
mov
dec
sub
push
arpl
shrl
scas
mov
mov
fs
leave
cmp
add
jbe
fldenv
xor
mov
and
adc
sub
jmp
xchg
add
sub
sub
inc
lea
enter
cmp
jg
and
imul
and
aaa
push
inc
data16
mov
mov
push
dec
lea
mov
lret
outsb
mov
add
in
jns
cld
and
add
mov
xchg
rcrl
pop
sbbl
ret
inc
fs
cmpsb
clc
and
cmp
or
add
in
push
ja
adc
cmpsl
cmp
inc
iret
mov
cmp
fisubs
push
push
inc
mov
stc
mov
dec
jnp
fdivrl
jmp
cmp
iret
push
inc
das
rclb
pusha
push
add
stc
adc
fadd
sarb
inc
and
adc
rcll
cmpsb
out
fdivs
mov
fdiv
loopne
inc
mov
das
int
adc
lds
inc
ret
sub
and
fscale
int
jno
cmpb
mov
inc
pop
dec
cmpsb
jecxz
or
int3
popf
negb
jmp
bound
lret
inc
lret
ja
mov
cli
leave
sub
xchg
and
jns
jnp
and
pop
inc
pop
scas
int3
das
sbb
or
test
xchg
bound
xchg
pusha
mov
enter
pop
pop
bound
cmp
push
fdivrs
pushf
sub
lods
in
add
in
pop
xchg
adc
push
repnz
mov
pop
test
push
lea
or
ljmp
push
dec
repz
in
jns
pusha
ret
mov
xor
andb
aad
test
adc
cmp
mov
addr16
cmpsl
notb
stos
or
out
mov
in
jbe
aas
shlb
ror
std
clc
add
and
data16
arpl
xor
out
aad
xlat
push
xchg
lds
xchg
roll
ret
or
inc
pusha
dec
adc
push
jg
inc
test
icebp
stos
shll
mov
stos
pop
leave
out
imul
push
dec
mov
and
dec
sbb
xchg
push
lahf
jnp
out
push
js
scas
jb
aad
out
lret
stos
fcomi
push
fs
mov
stos
cmp
in
xor
aad
mov
sbb
out
cmpsb
jl
dec
out
pop
mov
clc
adc
and
adc
pop
or
pop
aaa
hlt
ja
cmp
or
insb
arpl
mov
or
jecxz
sub
xchg
sub
out
cmp
mov
outsb
adc
add
out
out
mov
out
push
push
bound
or
mov
cwtl
lcall
lret
fstps
jge
cmp
movsb
cmc
mov
aaa
inc
loopne
lret
fiaddl
cmp
xchg
push
pop
leave
sbb
dec
ja
cmpsb
int
test
sbb
mov
test
test
lahf
je
sub
pop
or
mov
aad
mov
je
in
lock
repnz
and
and
ret
sbb
push
jnp
repnz
push
push
mov
ss
mov
push
mov
leave
push
in
stos
xchg
mov
fs
pop
sbb
scas
sbb
iret
lods
mov
outsl
das
subb
or
and
inc
shlb
es
jnp
aad
push
push
push
pop
xchg
xlat
mov
ret
adc
ja
mov
lods
and
insl
ret
mov
pop
out
scas
mov
push
push
shll
in
cs
sbb
xor
jnp
divl
out
xor
fldcw
fbld
push
arpl
cmp
xchg
fimuls
push
dec
xor
adc
pop
sahf
jp
dec
rclb
outsl
add
repz
push
jmp
mov
xor
jmp
inc
push
lret
lret
sbb
mov
loope
xchg
jmp
dec
or
pop
lods
ficoml
lock
data16
data16
pushf
imul
aam
xlat
lea
adc
xor
fcomip
fcmovb
mov
adcl
xchg
pop
fldcw
push
lret
add
inc
fnstcw
add
ret
test
loop
in
mov
sub
enter
in
inc
je
add
inc
int
inc
pop
mov
jb
inc
es
pop
push
cmp
ja
dec
pop
and
in
inc
outsl
lahf
ficomps
out
nop
decb
adc
cmpsl
dec
dec
andb
stos
lcall
adc
cld
movsl
xchg
ret
jno
jne
adc
push
std
push
das
rorl
mov
flds
or
mov
out
push
ljmp
pusha
pop
push
sub
mov
dec
xchg
dec
xchg
inc
cmp
insl
addl
scas
ret
mov
jge
mov
cld
ret
test
lods
push
pop
cwtl
fistpll
adc
popf
push
out
into
xchg
fdivrl
mov
aas
mov
cmp
mov
jns
jp
mov
xor
pop
cmp
push
lods
or
daa
inc
pushf
dec
mov
test
loopne
out
outsb
mov
gs
cmpb
fnstsw
daa
adc
jno
std
enter
xchg
mov
pop
add
inc
loope
mov
jmp
pop
cwtl
ficoml
scas
sub
mov
inc
pop
xchg
mov
nop
jno
inc
and
test
in
int
cli
enter
fisubl
and
and
jno
fwait
pop
fs
pushl
dec
and
insl
lret
ret
or
sub
test
mov
mov
sahf
lcall
ret
xchg
sbb
cs
lock
out
pop
cli
int
repnz
pop
xchg
xchg
cwtl
and
scas
repz
and
add
adc
push
je
std
pop
pop
inc
data16
mov
push
xchg
clc
cmpsl
pop
xor
cmc
outsb
pop
in
cmpsb
fcmove
loopne
xchg
sbb
cmp
subb
or
dec
add
and
mov
dec
inc
arpl
sub
js
pop
and
inc
shr
data16
insl
push
jg
aam
pop
push
rcll
and
mov
pop
ficompl
popa
mov
ja
jmp
les
or
addr16
loopne
addb
inc
insl
inc
fucomi
mov
adcl
push
xor
loope
notb
sub
out
mov
out
adc
sub
hlt
cmc
fisubs
adc
shll
int3
test
popa
adc
test
jns
pop
inc
and
pop
icebp
pop
outsl
add
xor
cwtl
into
ljmp
pop
iret
cmp
jecxz
sbb
mov
inc
shrb
sarl
inc
mov
sub
shll
bound
push
jbe
cltd
xor
jg
push
sub
or
in
sahf
lods
hlt
std
loope
dec
int3
hlt
cmp
aas
lgs
movsb
ljmp
jne
jnp
out
inc
push
or
subl
jge
mov
mov
mov
int3
lods
test
cli
mov
inc
cmpsb
inc
xchg
and
cmc
push
sub
push
int3
or
iret
enter
mov
adc
add
sub
pop
cltd
sub
ja
insb
leave
movsb
repz
sub
sub
insl
inc
pop
fs
inc
adc
xchg
xor
je
dec
xor
push
mov
xchg
fwait
inc
pushf
jbe
lods
adc
push
jne
push
pop
mov
inc
lret
out
int
out
push
pop
ret
mov
jns
aad
sub
push
cwtl
pushl
fs
pop
aaa
xchg
fmuls
inc
fs
and
mov
rolb
test
cli
xchg
xchg
dec
sub
mull
loopne
dec
jae
mov
inc
sbb
sub
mov
inc
call
push
sbb
sbb
mov
mov
inc
push
add
movsl
inc
aaa
cmp
xlat
pop
sub
into
adc
sbb
sbb
imul
imul
mov
push
sbb
into
jmp
mov
inc
popf
shll
push
ret
or
push
sub
stos
jno
cld
or
mov
sbb
test
mov
stos
sub
xor
out
push
mov
jle
mov
xlat
or
call
mov
repz
stos
movsl
jmp
jne
pop
add
lods
lods
mov
je
insl
pop
jb
negl
xchg
jnp
jns
in
pop
daa
inc
xchg
jg
enter
lret
push
or
rcrb
cmpsl
mov
jnp
loop
pop
insb
lods
push
and
in
gs
scas
std
or
mov
mov
int
mov
inc
mov
push
cmp
sub
pop
lcall
dec
outsl
xor
testl
mov
aad
xor
enter
ja
pop
ja
mull
fisubrs
ja
clc
pushf
and
mov
cwtl
push
jmp
cs
mov
sub
jle
or
cmp
inc
stc
inc
adc
jp
rcrb
ja
and
sub
push
aam
xchg
fiaddl
sbb
out
sti
lret
pop
pushf
stc
dec
jl
push
shll
out
outsl
jle
sti
dec
loop
xchg
dec
pop
loopne
ja
cmp
sbbb
shlb
into
outsl
xor
dec
fisttpl
push
inc
xor
jmp
fwait
test
adcb
mov
dec
in
je
jne
shrl
cmp
sub
xor
sbb
push
icebp
xor
inc
mov
inc
adc
imul
push
icebp
sub
sbb
daa
jge
sub
xchg
pop
sbbl
cmp
lock
sbb
mov
test
push
inc
popf
es
mov
xor
inc
aas
push
mov
test
inc
add
stc
es
xchg
mov
loop
mov
dec
shrl
pop
adc
mov
xchg
icebp
add
adc
push
ss
cmp
sub
aas
insb
push
bound
mov
aas
scas
adc
jg
enter
imul
arpl
cs
stos
push
mov
fcoml
scas
outsb
xor
test
add
dec
lret
lret
mov
push
lock
push
dec
sbb
push
dec
jecxz
push
and
sub
sbb
cmpl
sub
aad
push
mulb
in
inc
scas
sub
div
aam
add
in
add
jecxz
mov
sub
int
aas
call
sub
xor
jo
mov
jge
je
leave
out
ja
or
or
ja
cmp
mov
add
adc
sarb
stc
inc
loope
sub
in
out
xchg
pusha
jle
jmp
dec
fdivrp
sub
mov
cmp
mov
bound
jno,pn
bndldx
lds
push
push
inc
repz
stos
mov
push
pop
cmp
jecxz
outsb
jmp
lcall
rolb
pop
movsb
dec
aaa
mov
or
xorb
leave
pop
fucom
push
icebp
out
push
jae
mov
lret
psrld
test
mov
sub
sbb
pop
shl
js
addr16
dec
lea
dec
scas
push
fstps
out
out
outsb
cs
adc
mov
push
mov
aad
ds
daa
mov
das
lret
sahf
das
mov
jge
jmp
xor
mov
xchg
fcmovnb
daa
pop
adc
cmp
jl
out
sbb
stc
fwait
dec
cmp
or
mov
sti
scas
leave
movsl
sti
jecxz
sahf
mov
std
dec
inc
mov
addr16
call
dec
out
or
jns
outsl
xchg
daa
adc
lret
int3
in
shlb
imul
sbbb
mov
inc
cmp
bound
cmp
mov
rorb
xchg
mov
inc
in
out
fcmovnb
sbb
push
insl
out
clc
dec
push
or
dec
mov
cmp
rcr
rcrb
fwait
ds
mov
jbe
jnp
popa
xchg
das
pop
cmp
jb
mov
imul
jle
add
cmpsl
lret
clc
mov
div
std
jge
push
call
bound
mov
xlat
sarb
or
sti
lods
push
or
mov
icebp
rcrl
cltd
push
arpl
lds
xor
inc
outsb
es
nop
mov
pop
dec
hlt
daa
adc
cmp
add
pop
sub
push
or
xchg
stos
lods
cmpsl
sti
loop
test
and
ss
cs
dec
scas
enter
pop
test
sub
push
push
fwait
xor
ja
and
sbb
cmpsl
lods
mov
pop
movl
push
cmp
adc
sub
cmp
sub
jmp
negl
push
push
xchg
mov
test
js
sti
test
xlat
cmp
mov
jmp
push
jecxz
push
xchg
or
outsb
dec
adc
adc
sahf
adc
idivl
fstl
leave
nop
loopne
mov
test
push
sahf
or
jecxz
out
int
pop
fdiv
mov
and
sbb
sub
push
cmpsb
jge
movsl
lea
xor
dec
aam
outsl
in
les
push
dec
or
jo
aaa
inc
or
loopne
mov
adc
ret
lds
sti
repz
insb
pop
jle
stc
pop
xor
cmc
mov
mov
sbb
xchg
loopne
jg
mov
cmc
stos
sub
sbbb
mov
jg
in
add
imul
fs
cmpsl
xchg
shrl
shrb
mov
pop
dec
call
mov
push
mov
aas
push
and
outsl
ss
inc
insl
push
pop
and
mov
ret
adc
jae
xchg
pop
or
aaa
inc
pop
xor
loop
push
jl
xor
stos
dec
push
adc
jno
dec
and
pop
shll
inc
int
xor
mov
inc
pop
or
nop
mov
sarl
scas
mov
pushf
xchg
ror
mov
cwtl
test
mov
cmp
ret
cmp
pop
push
jns
inc
js
in
adc
stos
mov
pusha
add
sahf
sarb
lcall
pop
cmp
subb
ja
sub
faddl
and
fcomp
in
scas
stos
fldcw
aam
int
fidivl
ror
sub
insb
mov
add
aad
and
sti
out
int
and
pop
or
mov
lahf
test
orb
lret
cld
pop
sbb
jbe
fcoms
int
movsb
xchg
add
mov
sbb
lods
shll
scas
jne
add
lcall
lods
adc
sahf
push
push
xchg
push
dec
and
call
jb
rorb
addr16
jae
out
rorb
sbb
loopne
mov
or
and
sbb
and
jae
mov
adc
mov
inc
mov
sbb
pop
mov
out
sti
lods
xchg
push
fwait
fs
mov
inc
notb
ficomps
cld
mov
xchg
fstps
adc
sub
shlb
fs
mov
movsl
test
push
inc
add
push
sahf
das
movsl
cmp
iret
leave
xchg
pop
xor
sahf
pop
xlat
dec
stos
neg
cli
dec
shrl
mov
mov
nop
scas
or
dec
inc
jbe
enter
pusha
mov
cwtl
push
sub
negl
rcll
xor
loopne
mov
jle
jae
mov
sub
xchg
and
inc
loop
cmpsb
cmpsb
aam
in
xchg
jb
in
dec
xchg
push
loop
jecxz
cwtl
in
pop
cmpsl
dec
scas
sar
out
std
jge
lods
int
xor
and
lock
push
xchg
jmp
shlb
xor
jmp
fdivrs
mov
dec
and
cld
insl
sbb
dec
fs
and
aas
add
mov
dec
outsl
aad
idiv
adc
insb
out
addr16
test
sub
ds
cmp
pop
pop
adc
xor
jle
mov
test
pop
in
ja
dec
daa
xor
mov
scas
and
into
xor
jmp
xor
push
das
lahf
mov
shrl
cmpl
js
call
dec
insl
inc
jecxz
add
ja
les
daa
pop
jno
cmpl
loop
xchg
daa
mov
imul
sub
cld
mov
and
lret
shrl
div
and
stos
xchg
pop
xor
dec
push
dec
cmp
fwait
mov
mov
ja
jbe
das
xchg
mov
je
push
ficoms
rorb
mov
pop
mov
das
fwait
jno
ficompl
mov
xor
mov
jl
popl
adc
rclb
in
mov
stos
lods
jne
mov
sbb
rcl
inc
idivl
fisttpll
xor
gs
mov
js
popa
adc
push
in
in
stos
stos
inc
jo
jmp
fcompl
cmp
repnz
adc
xchg
mov
mov
inc
jnp
aad
bound
add
call
pop
mov
jge
stos
pop
add
loopne
call
mov
cld
inc
jb
jae
popf
cmp
mov
dec
or
js
or
fcompl
mov
push
out
inc
mov
xchg
cs
gs
xor
inc
xchg
xchg
jb
fisttps
in
sarl
sbb
xchg
adc
sub
loopne
add
add
adc
fs
push
popf
dec
jge
test
push
pop
dec
gs
sbb
adc
sahf
ljmp
sbb
lret
mov
jno
lea
sub
mov
fimuls
pop
arpl
push
jne
lods
mov
insl
lods
das
popf
insl
adc
sub
dec
idivl
xor
xor
push
push
pop
sub
cmp
add
or
scas
and
dec
xor
aad
shrb
inc
cld
jmp
rolb
aas
cmp
lods
sti
ljmp
lea
cmp
stos
sbbb
inc
aas
add
jmp
int
xchg
daa
ret
xchg
outsl
faddl
push
sbb
mov
inc
div
or
pop
mov
leave
scas
sbb
cmpsl
mov
popa
push
pop
das
dec
adc
mov
cmp
repz
popf
subl
cs
pmaxsw
inc
ss
in
xor
cld
lahf
cmp
or
mov
xchg
or
ret
std
xchg
mov
add
lret
sbb
andl
lret
mov
lods
sbb
mov
push
je
out
jae
stos
aad
fsubp
ficoms
enter
dec
movsb
inc
ja
jno
cmp
movsb
ss
pop
mov
jno
inc
push
and
lea
sbbb
sti
add
inc
mov
add
in
movsl
add
sub
lcall
push
sub
mov
flds
pop
jmp
daa
iret
or
fscale
shll
fcomp
adcb
inc
inc
inc
or
cwtl
mov
fs
inc
and
jecxz
ss
sub
mov
ret
mov
mov
xchg
idivb
imul
mov
pop
popf
xchg
out
and
enter
mov
addr16
pusha
jne
fucomi
pop
or
ljmp
shll
or
xchg
mov
insl
adc
pop
popf
pushf
cmp
fcompl
es
mov
sbb
pop
das
fildl
push
pop
dec
enter
stos
cmp
and
test
add
rolb
xchg
pop
add
int
adc
mov
fwait
mov
xor
popf
mov
call
adc
lahf
cmp
mov
test
cmp
cmp
xchg
cmp
push
adc
stos
orb
cwtl
dec
subl
call
xchg
aad
scas
stos
test
dec
xlat
cmp
cmp
ljmp
xchg
shrl
inc
sub
mov
repz
je
ficomps
scas
or
bound
jle
int
pop
pop
popa
inc
inc
dec
jle
push
ja
test
lods
inc
mov
sub
popf
cmp
push
imul
mov
add
scas
or
mov
add
addb
dec
aad
ljmp
dec
movsl
jo
dec
test
bound
adc
mov
xor
daa
cmpsl
cld
jmp
or
aad
test
loope
js
sbb
push
int3
fildll
inc
mov
cltd
insb
cli
pop
mov
aam
lahf
inc
fwait
add
test
sub
inc
imul
sub
imul
inc
cmp
xchg
mov
js
xchg
cmp
loopne
push
jns
test
fwait
or
mov
and
aaa
stos
in
mov
iret
test
lcall
pop
cli
sbb
lock
push
ret
pushf
pop
jle
dec
xlat
mov
push
xlat
iret
sub
mov
cmp
or
push
iret
cmpsb
out
and
dec
push
cmp
or
add
imul
shrb
inc
cmp
mov
cli
pop
mov
shrb
incb
mov
mov
test
les
sub
in
pop
push
leave
add
movsl
mov
dec
cltd
loop
jbe
nop
pop
dec
test
pop
outsl
icebp
test
mov
mov
bsr
mov
adcb
lcall
cmp
lret
adc
xchg
and
scas
mov
push
add
or
popa
loope
out
add
xor
cltd
incb
ret
cmp
pop
xor
into
inc
or
and
leave
pop
incl
pop
dec
cld
call
rcr
cmpsl
bound
lahf
cmp
mov
outsb
pop
inc
roll
inc
fildll
mov
or
cmp
pop
stos
adc
sbb
xchg
in
repnz
cmc
fs
movsl
cmp
add
loope
lret
sbb
insl
push
aas
lock
inc
add
testl
jmp
in
popa
stos
push
jne
mov
imul
je
add
sbb
push
out
pop
scas
jle
stc
lods
pop
scas
mov
mov
repnz
cmp
sub
mov
popf
push
into
addr16
fdivl
pop
dec
loopne
faddl
dec
and
movsl
xchg
jb
negl
fsubrs
lret
outsb
icebp
jmp
adc
inc
mov
sub
imul
es
mov
icebp
inc
pop
sub
call
mov
pop
push
and
std
mov
into
mov
mov
test
outsl
push
push
fcompl
sbb
outsl
push
in
dec
add
dec
cld
inc
mov
rorw
mov
sti
rorl
cs
pop
test
std
mov
insb
cmp
loope
sub
pop
adc
call
lret
icebp
in
retw
test
lahf
rorb
sub
sahf
xchg
push
add
mov
lock
lret
das
pop
jg
jne
rcrb
hlt
lods
or
xchg
cld
xchg
cmp
fisubrl
inc
outsb
data16
xor
das
iret
push
push
pop
and
xchg
cmp
mov
dec
xor
ficomps
dec
dec
push
cmc
mov
inc
push
dec
mov
addr16
cs
xor
scas
mov
adc
pusha
lret
dec
add
xchg
adcb
les
jae
jmp
xchg
pusha
stos
orl
jecxz
enter
cmpsb
inc
shlb
push
or
outsl
out
sub
inc
jno
cmp
add
es
pop
test
sarb
stos
enter
int3
add
cwtl
iret
repnz
mov
rcr
ja
inc
shlb
sbb
std
imul
in
loop
ret
dec
and
test
fisubs
test
leave
leave
jo
mov
imul
out
dec
and
orl
mov
jg
lods
push
mov
push
sbb
je
mov
mov
in
ja
mov
idivl
inc
rcll
dec
mov
sub
movsb
js
mov
idivb
stos
test
enter
cli
xchg
jp
ret
cli
jmp
xlat
test
add
aaa
pop
mov
mov
dec
and
aad
test
and
pop
fcomps
clc
inc
sarb
les
inc
mov
shlb
stc
adc
mov
mov
mov
rcrl
repnz
push
test
jne
sbb
dec
je
subb
push
xchg
sub
fmull
aaa
inc
mov
daa
fmull
jbe
jb
fdivrl
mov
xchg
mov
jmp
mov
dec
push
imul
call
push
in
xchg
dec
ds
repnz
call
xchg
mov
cld
imul
fbld
adc
ljmp
mov
rcl
or
sbb
xchg
rol
xchg
mov
in
xchg
out
inc
aas
mov
adc
mov
inc
inc
xchg
pop
int
xor
mov
stc
xor
dec
mov
xchg
push
dec
aad
fucomp
cmp
out
dec
push
fdivr
cmp
mov
fsubrl
mov
push
mov
mov
sub
push
iret
imul
scas
out
repnz
pop
fwait
rorb
mov
xlat
leave
jge
mov
stos
adc
xchg
inc
jo
imul
sbb
mov
adc
scas
stc
and
lea
cmp
cmp
jecxz
les
push
push
and
dec
xor
or
or
jl
ret
or
pop
mov
imul
loop
int
xor
fwait
movsl
push
pop
scas
stos
and
or
scas
sub
sti
jmp
sete
push
push
mov
xlat
test
out
push
xlat
mov
mov
and
adcb
pop
addr16
push
xchg
fnstcw
sbb
mov
and
mov
push
sub
mov
mov
fcoms
push
fldcw
mov
fisubl
andb
pop
pop
mov
fs
jle
fcoms
orl
insb
cmc
mov
das
and
xchg
jmp
repz
dec
scas
jle
enter
out
in
xchg
push
lret
inc
iret
and
xor
inc
sbb
pop
jnp
mov
sbb
out
or
in
popf
pop
lds
sbb
or
mov
xor
adc
jno
and
push
shlb
inc
and
sbb
jmp
cld
nop
hlt
mov
push
call
cwtl
xor
pop
push
and
gs
xor
sahf
cmpsb
int
lret
adc
outsl
fists
mov
xchg
js
mov
outsl
jle
dec
pusha
jp
xchg
loope
mull
in
mulb
sub
adcl
xlat
xor
lahf
dec
daa
stos
and
subps
das
call
sbb
adc
mov
movsl
mov
sbb
notl
popa
int3
jo
dec
push
pop
in
cmp
cmc
push
xor
outsl
mov
inc
dec
fdivr
das
add
jmp
out
xchg
mov
add
loope
xchg
cmp
mov
and
lods
cmpsb
out
jns
enter
shrl
dec
add
jae
adc
popf
mov
push
arpl
loopne
ljmp
mov
rorb
popa
push
inc
xchg
lock
daa
mov
pop
imul
popa
pop
popf
leave
fwait
aas
ja
sbb
pop
xor
fadd
mov
mov
enter
dec
cmpsl
add
inc
xchg
shrl
popf
fsubrs
push
sbb
sti
mov
mov
dec
sub
xchg
in
cmpb
adc
xchg
mov
or
jecxz
push
test
lahf
mov
push
cmpsl
adc
fmuls
jl
push
inc
mov
mov
ja
push
std
aas
push
and
les
add
or
ret
pop
xor
ljmp
lcall
loopne
js
xchg
xor
daa
sbb
cmpsb
and
mov
ss
jle
shlb
insl
push
movsb
cs
mov
sub
xchg
cwtl
mov
push
cmp
inc
adc
jmp
dec
es
xor
push
add
push
test
or
and
vfmaddsub231ps
and
dec
jae
inc
scas
out
inc
push
mov
lcall
jecxz
pop
add
aad
xor
insl
inc
cmp
popa
rcrl
push
push
daa
pop
dec
fdivrl
xchg
inc
jo
cs
in
inc
add
inc
cmp
xchg
stc
dec
jg
scas
fsts
sbb
dec
pop
inc
hlt
add
mov
xchg
enter
mov
imul
add
das
and
xchg
rsm
push
pop
pop
xchg
mov
clc
into
xchg
enter
dec
repnz
sub
pop
aam
and
ret
mov
mov
sub
hlt
cmp
cmc
pop
jbe
jae
sbb
sub
cmp
and
xchg
mov
cmp
mov
add
add
sbb
fistps
cmc
or
inc
sbbl
cmp
xor
jns
aaa
xor
mov
jnp
or
mov
ds
push
add
and
pop
dec
cmp
jle
in
lret
cmpsl
mov
rorb
mov
mov
gs
inc
lods
call
jmp
inc
je
cmpsl
cmp
iret
xchg
inc
xchg
enter
push
rcrb
hlt
sarl
push
enter
lcall
lods
xor
das
jnp
das
and
sub
mov
loopne
test
rolb
mov
rcl
rcll
mov
pop
and
rcrl
pop
inc
mov
push
sahf
mov
jle
je
or
fldcw
aaa
pop
lcall
xor
loopne
xchg
stos
push
fmull
aaa
add
jecxz
xchg
inc
lahf
lea
inc
dec
lods
cmpsb
ss
je
rcl
shll
fucomi
xor
hlt
cmp
or
mov
and
arpl
int
adc
push
xchg
std
pop
jns
aad
push
je
movsb
dec
fs
mov
push
shrb
jp
mov
cmova
mov
jl
xorb
out
lds
or
mov
push
fcomip
in
hlt
jo
aas
mov
rcl
js
int3
adc
mov
adc
scas
stc
rcl
sbb
inc
mov
jae
sub
sahf
cmp
push
jnp
loope
sub
cmc
adc
pop
pop
adc
mov
mov
cmp
dec
pop
js
push
imul
cs
push
and
add
mov
test
test
sbbl
bound
lock
int
fs
add
inc
push
loop
and
jo
mulps
xor
sub
xlat
dec
add
push
testb
or
lods
lods
dec
out
ret
xor
punpckhbw
pop
xchg
jae
jle
push
sbb
loope
xchg
mov
or
ficomps
pushl
rcrb
movsl
mov
cmp
data16
scas
jae
lods
cmc
scas
out
cmp
leave
ja
test
sbb
and
filds
cwtl
lods
lahf
pop
dec
insl
inc
fdivl
movsl
lcall
xchg
inc
in
adc
in
popa
add
andb
shrl
stos
or
push
push
leave
or
in
jg
popf
jo
es
fimull
in
lock
dec
std
or
pop
and
fdivrp
fstpt
jae
mov
jne
push
mov
mov
add
mov
jne
popa
jo
xor
and
lea
insb
loop
aad
pop
pop
xor
xor
cmp
test
stos
sbb
push
sub
scas
cs
insl
cwtl
in
gs
pushf
mov
fmull
lock
lret
leave
mov
and
mov
daa
push
jle
fs
push
inc
cmp
loopne
push
xchg
insl
call
arpl
jle
fwait
jg
gs
mov
iret
sbb
push
ret
and
inc
mov
xchg
mov
xchg
mov
xchg
scas
pop
add
and
and
rcrb
push
push
je
orb
xchg
into
ss
add
cmc
adc
addr16
sbb
inc
adc
adc
fcoms
cmpps
mov
fwait
popa
enter
aaa
mov
inc
int3
and
inc
mov
jmp
cmp
push
loope
and
xorb
mov
aad
in
cmp
imul
sbb
mov
ljmp
call
adc
add
aas
add
xor
loopne
fwait
inc
rolb
xlat
mov
mov
pop
jb
cld
inc
mov
imul
pop
scas
outsb
lret
push
aam
pusha
push
cwtl
cmpsb
mov
mov
jmp
sub
addr16
in
pop
add
enter
notl
mov
movsl
xchg
pop
sbb
in
mov
jo
adc
lea
jg
test
imul
push
sub
and
rcr
cwtl
sbbb
shl
mov
jns
cmp
inc
jp
mov
or
imul
inc
orb
push
adc
pop
out
mov
mov
je
pmuludq
test
leave
iret
jle
in
mov
and
push
jecxz
mov
addb
aas
cwtl
cmp
mov
mov
in
sub
insb
jno
add
sbb
lret
adc
ss
dec
repz
insb
cwtl
in
shlb
and
cltd
rolb
add
pop
sbbb
sbb
jae
aaa
lahf
aaa
faddl
arpl
mov
push
rcl
insb
rolb
int3
imul
pop
cs
rclb
pop
std
dec
sti
mov
adc
enter
adc
stos
nop
dec
das
fdivs
or
mov
in
xchg
out
push
out
xchg
cmp
fmull
orl
xor
xchg
jle
imul
in
in
ljmp
scas
gs
cmp
call
lods
pop
jg
sub
and
dec
leave
sub
stos
jg
aas
and
hlt
mov
leave
xchg
dec
nop
pop
roll
insl
push
jle
loop
mov
or
loope
out
dec
insl
jg
aad
daa
mov
shrl
or
push
enter
out
jmp
inc
pop
dec
out
movsl
imul
loope
mov
push
pop
in
js
or
lret
insl
jmp
in
aaa
lods
xor
gs
sbbb
lcall
ret
dec
pop
imul
popa
or
fwait
pop
test
cmp
fcmovbe
gs
mov
mov
cmp
clc
lahf
sbb
cmp
inc
pop
and
not
xor
mov
xchg
stc
dec
out
mov
inc
pop
popf
int
lock
mov
jecxz
out
mov
mov
das
jl
xor
pop
cli
into
les
add
pop
mov
mov
popf
nop
sahf
add
inc
push
negb
add
hlt
fwait
jno
mov
jmp
pushf
jb
cld
xor
cmc
daa
fwait
dec
imul
mov
mov
adc
mov
cld
into
xchg
push
lret
xchg
and
jle
in
mov
jecxz
jb
pop
add
ret
xor
adc
div
inc
test
shrb
xchg
shl
fcoml
out
pop
cmpsl
pop
push
sub
dec
sbb
cmc
aam
cmpsl
dec
mov
mov
jns
das
sbb
rclb
xor
jo
mov
push
subb
shrl
cmc
test
mov
jmp
cmp
lods
sbb
adc
dec
add
inc
mov
jbe
out
test
pop
repnz
xchg
inc
adc
into
repnz
jmp
daa
cwtl
loope
iret
mov
mov
adc
lret
mov
cwtl
jns
movb
adc
cmpsb
mov
and
xchg
daa
pop
push
sub
sbb
add
dec
push
xor
push
insl
dec
cmc
inc
hlt
or
mov
add
inc
lahf
das
jmp
out
mov
mov
inc
cmpsb
insb
sbb
mov
popf
aas
xor
mov
lods
push
pusha
mov
testl
fwait
and
out
repnz
in
add
jnp
push
mov
outsb
mov
lcall
add
out
sbb
push
sub
jb
add
in
inc
mov
sub
out
pop
enter
mov
xchg
fdivrs
stos
aad
jge
sub
fadd
pop
adc
and
xchg
inc
jg
sub
mov
add
std
imul
les
mov
test
cwtl
test
aad
add
adc
rcll
pushf
xchg
inc
out
cmp
sbb
ret
push
or
out
lock
nop
fimuls
inc
add
sub
push
stc
xchg
sar
sub
push
cwtl
repz
inc
fs
insb
mov
out
test
or
and
and
jno
insb
leave
xchg
sti
jns
je
sub
sub
lahf
arpl
aaa
cmp
mov
nop
fnstenv
ret
cmp
mov
leave
icebp
mov
mov
dec
fdivrl
xor
dec
jle
pushf
subb
fwait
js
add
sub
jl
mov
jle
cs
movsl
adc
cmp
xor
push
dec
jo
jns
jmp
sbb
push
daa
insl
mov
mov
xchg
cmc
fbld
jg
inc
cmpsb
jno
rorb
test
iret
adc
xchg
xchg
sti
xchg
imul
mov
imul
and
aaa
sahf
out
mov
mov
dec
mov
push
sbb
les
ret
inc
xchg
push
sub
das
int
pop
jns
enter
add
divl
arpl
jbe
mov
mov
outsl
pusha
push
cmp
cltd
cmp
cmp
pop
div
aad
inc
xadd
lret
cmpsb
xor
lods
ss
jnp
imulb
lcall
rcrl
out
push
out
andb
cltd
pop
mov
lret
scas
js
push
fwait
cmpsb
push
push
test
inc
pop
pop
out
add
push
jmp
add
jmp
aas
dec
es
mov
hlt
inc
clc
jl
or
push
and
inc
push
popw
insl
test
sub
addr16
test
cmp
movsl
dec
push
rorb
mov
mov
xor
xor
and
adc
push
sbb
mov
mov
xor
pop
icebp
pusha
lret
cmp
push
cld
iret
mov
int3
push
scas
sbb
shrl
outsb
leave
push
icebp
stos
sbb
lret
push
ret
push
dec
xor
rcl
lds
dec
movsl
jne
add
fdivs
shll
push
loopne
and
addr16
sbb
fstpt
xor
cwtl
mov
push
fs
and
adcl
mov
fdivl
stos
cmpsb
xchg
out
or
or
add
sbb
jecxz
gs
stos
std
pop
movsb
enter
aaa
je
dec
test
insl
aad
mov
lock
cmpsb
dec
mov
call
sbb
icebp
push
out
add
mov
cmc
cld
loop
ror
std
fwait
iret
cwtl
jp
push
xchg
iret
je
stos
cltd
enter
inc
cmpsb
aas
pop
scas
aas
pop
lret
pop
adc
insl
negb
mull
add
loopne
pop
or
adc
add
stos
rol
add
andb
test
mov
xchg
jnp
scas
scas
mov
jnp
push
sbbb
add
mov
sub
cmp
push
mov
cld
jns
inc
lahf
xlat
cld
sar
aaa
aaa
xor
cmc
lds
rolb
lods
aam
data16
push
imul
aas
out
pop
fsubr
int3
jns
rolb
hlt
mov
incl
and
test
mov
stos
mov
loope
and
jae
es
stos
inc
call
lock
lds
xor
jp
pop
loop
mov
cltd
inc
repz
cmp
popf
xor
mov
imul
jbe
mov
sub
popa
pop
xor
jb
sub
aaa
idiv
mov
sahf
ret
dec
xchg
lcall
xchg
sub
imulb
pusha
dec
ds
mov
push
daa
jg
push
jecxz
fisubl
lock
rcll
mov
xchg
sbb
push
and
sub
int
les
cli
lret
push
jno
mov
popa
jbe
repnz
adc
nop
pop
pop
pop
test
cmpsl
push
mov
stc
cmc
push
hlt
xorb
mov
aas
xlat
hlt
mov
jg
pusha
mov
pushf
mov
mov
and
pop
lcall
or
outsb
pop
mov
or
jmp
in
inc
je
jae
mov
scas
imul
pop
enter
adc
sbb
into
xchg
fs
es
inc
bound
stos
pop
bound
ret
pop
xchg
out
outsl
inc
cmpl
pop
cmp
mov
popf
test
cmp
mov
stos
jae
cmp
fdivrl
cmp
adc
pop
cmp
or
loop
mov
inc
pushw
mov
pop
push
cmc
out
mov
pop
test
popa
imul
mov
xor
imul
pop
pop
shl
pop
pop
in
cli
in
add
mov
push
jne
int3
adc
jnp
cmp
xchg
cld
ljmp
or
mov
mov
cs
cmp
sub
cmc
pop
icebp
jl
xor
iret
fisubrs
outsl
dec
cmp
insl
sbb
pop
cltd
stos
mov
daa
xchg
fadds
pop
and
jle
scas
fcompl
pop
and
push
loope
shlb
dec
pop
sub
or
cmp
repz
outsl
cmpsl
lods
cld
bound
jge
out
mov
jnp
add
out
jno
sub
inc
xchg
xor
loopne
aas
pop
inc
sub
jmp
sbb
js
loopne
fs
lahf
mov
mov
cmpsl
testl
add
fildll
xor
xor
sub
popa
insb
scas
mov
imul
popl
testb
jle
iret
aad
dec
mov
jno
dec
mov
lods
pop
push
sub
pop
test
add
cmpb
lock
add
cmp
sbb
outsl
mov
push
sbb
aam
out
pop
lret
sbb
jb
jle
int3
test
test
mov
mov
xor
subl
dec
sti
movsb
jbe
je
inc
inc
pop
fisttps
test
loop
lods
pop
popf
mov
mov
shrl
inc
adc
dec
dec
adc
daa
cmpb
inc
test
pop
fs
dec
or
mov
into
adc
lcall
int3
int
iret
dec
lahf
xor
mov
ret
inc
mov
mov
mov
pop
jo
movsl
sbb
pop
cli
jmp
jmp
shlb
cmc
out
mov
or
inc
mov
jmp
stc
ja
xor
adc
aaa
sub
jne
sbb
jecxz
mov
add
sub
iret
mov
and
pop
xchg
push
cltd
imul
inc
inc
mov
or
pop
mov
roll
or
outsb
lds
xchg
js
aam
dec
icebp
xor
xor
inc
xchg
cmc
sub
imul
mov
insb
outsb
adc
es
xor
shrb
addb
ss
pop
movsl
mov
push
loop
leave
rcrl
dec
fnstsw
mov
mov
mov
pop
or
xchg
inc
mov
xchg
loope
scas
lea
mov
test
mov
in
call
cmpl
push
fnstenv
call
pop
daa
or
dec
xchg
roll
xlat
sbb
in
shll
dec
sbb
mov
pop
add
jg
dec
loope
pop
stos
add
cmp
mov
adc
jmp
cwtl
les
test
mov
les
mov
insl
in
add
out
repz
sbbb
movsb
mov
jae
adc
xorb
mov
add
rol
xchg
pop
mov
enter
xor
and
sub
dec
sbb
mov
or
fbld
cmp
push
jp
outsb
int
in
dec
mov
ss
out
out
pushl
push
rolb
scas
jo
pop
mov
mov
stc
hlt
pop
stos
lods
push
dec
je
cmc
mov
fnstcw
out
cmp
lds
or
dec
pop
dec
cli
orl
dec
loopne
adc
jge
sub
or
lds
jae
jl
push
mov
mov
jmp
lea
ljmp
sahf
xor
lods
push
adc
movsb
iret
xchg
mov
cwtl
dec
and
imul
ljmp
addb
cli
push
mov
ror
add
xor
shl
sti
jmp
sub
jmp
push
shrb
fcomps
sub
hlt
arpl
mov
in
lret
mov
push
subb
pop
push
and
pop
xchg
xor
mov
dec
dec
push
xchg
pop
arpl
stc
jnp
int
cmp
mov
push
mov
in
mov
ret
jmp
cld
repz
mov
inc
or
mov
xchg
std
std
mov
fidivrl
shlb
movsl
sub
fs
pop
test
pushf
int
add
dec
mov
int
in
add
mov
and
xor
in
mov
push
push
arpl
arpl
dec
pop
cmp
fsubp
popf
lods
push
push
gs
or
out
movd
cmp
inc
dec
mov
cmp
and
cli
stc
sarb
cltd
jmp
cmp
pcmpgtd
fidivrl
inc
loop
xor
cmpsl
adc
mov
fidivrs
stos
xchg
repnz
xchg
mov
or
fwait
in
mov
jmp
ret
sahf
inc
andl
dec
inc
imul
mov
sub
and
aas
leave
cmp
leave
lea
inc
pop
xlat
lock
dec
xor
clc
das
decw
notl
push
xchg
jns
rclb
mov
movsl
xor
dec
lods
sub
rcl
mov
fsubs
sbb
xor
test
js
mov
fdivl
mov
pop
popa
xor
jns
pop
fildll
pushf
fldcw
daa
xchg
fstpt
mov
jge
cmp
add
clc
in
iret
mov
mov
cmpsl
inc
adc
cmp
test
clc
jne
cld
sbb
cmp
test
adc
sar
scas
lods
out
mov
aaa
mov
pop
add
fldl
lcall
fstps
cwtl
pop
sbb
daa
test
jbe
lods
sahf
xchg
pop
sub
lods
inc
sbb
push
or
push
ret
pop
in
cld
lock
push
mov
out
shr
jge
out
adc
inc
aaa
jns
lret
push
mov
add
lods
xor
add
movl
xor
cmp
jmp
or
jbe
sahf
loopne
loopne
mov
shlb
push
cmp
bound
in
xchg
mov
mov
push
out
push
sbb
pop
scas
ljmp
sbb
loop
mov
cltd
and
mov
push
cli
imul
out
adc
lods
jecxz
cwtl
test
xchg
lret
ja
cmp
sbb
cs
dec
mov
mov
sbb
sub
add
add
cs
loopne
lahf
in
decl
xchg
std
mov
mov
scas
rcr
shl
adc
jo
mov
fisubs
jo
xchg
xchg
insl
xchg
and
dec
rep
in
mov
pop
sbb
jl,pn
jae
inc
sbb
adc
mov
mov
mov
pop
jbe
mov
mov
push
pop
push
push
stos
mov
sub
mov
enter
pop
jmp
jp
mov
cld
xchg
xchg
pop
jg
movl
jge
lahf
pop
outsb
push
pop
mov
mov
mov
sub
fisubrl
ss
movsb
ficoms
xchg
jecxz
push
rcl
enter
int3
pop
push
mov
and
mov
test
jns
gs
adc
mov
xlat
jp
sub
jl
test
roll
test
fildl
push
popf
gs
cltd
inc
cmp
mov
fdiv
push
jnp
xlat
aaa
repz
subl
cmc
sub
jnp
mov
je
stc
cwtl
or
in
lods
adcb
adcb
cld
dec
mov
cmpsl
dec
xor
mov
xchg
mov
xor
add
outsb
cwtl
push
inc
xchg
cs
flds
inc
and
es
ds
stos
pop
fwait
repz
out
xchg
scas
lods
shlb
xorl
into
push
shrb
inc
cmp
sub
pop
scas
push
push
pop
push
push
repz
dec
mov
shr
xor
inc
stos
fwait
out
sbb
inc
push
xchg
imul
repnz
xchg
aam
or
push
leave
sbb
mov
bound
jnp
push
cs
sub
fists
scas
push
push
mov
sysenter
ret
imul
sbb
and
test
adc
inc
pop
lret
xchg
push
mov
adc
hlt
lds
sub
pop
pop
scas
jb
rolb
mov
outsb
imul
push
aas
jg
ds
inc
dec
daa
fwait
hlt
jecxz
and
imul
iret
jmp
mov
das
pop
out
push
dec
lahf
icebp
and
lcall
push
mov
cmpsb
push
es
push
push
test
dec
repz
int
pusha
je
rorb
cmp
out
inc
js
les
push
ret
bound
cld
jecxz
loopne
add
mov
popa
or
stc
iret
pop
rorl
cs
pusha
cmc
add
sub
dec
inc
xchg
adc
lods
adc
cltd
push
pop
fbld
in
mov
test
inc
inc
aaa
out
jb
push
jno
outsb
outsb
sub
pop
icebp
mov
add
push
imul
and
push
mov
daa
and
mov
add
rcr
xchg
push
shl
and
cli
sub
pop
je
xchg
jg
dec
imul
push
dec
add
aam
nop
out
jl
enter
and
push
pop
pop
mov
pop
mov
dec
mov
adc
xchg
dec
and
jl
mov
push
sti
fwait
das
push
out
sub
and
dec
fsubrl
out
out
xor
and
rorl
inc
rcrb
cmc
cmp
test
sahf
or
jl
fyl2xp1
icebp
jle
and
jns
xor
andb
mov
daa
arpl
xchg
xchg
sti
iret
cs
xor
xchg
aaa
addr16
and
adc
pop
mov
mov
xor
mov
push
fcompl
mov
mov
das
dec
mov
push
sbb
adc
lock
das
push
js
iret
xor
repnz
pop
dec
dec
das
mov
push
sahf
loop
add
pop
sbb
dec
mov
xor
dec
xor
repz
mov
inc
mov
sub
imul
js
movsb
xor
cli
mov
cli
jecxz
fwait
jmp
int
xchg
jb
popa
arpl
sbbl
mull
roll
mov
aam
scas
test
xor
jge
clc
jg
imul
cmpsb
mov
pop
mov
in
mov
int3
adc
sarb
movsb
or
jno
sarb
aad
xor
mov
and
add
out
pop
test
sub
outsb
mov
xor
or
dec
cmpsl
dec
outsl
mov
jmp
lcall
and
fcmovnbe
sub
popa
push
sti
xchg
inc
and
rolb
pop
sahf
test
push
cmp
jb
pusha
lds
xor
jne
and
mov
mov
loope
sub
popa
scas
xor
mov
pop
dec
lock
add
or
and
test
cltd
movl
ja
popf
std
stos
and
out
adc
mov
inc
or
add
rorl
ret
shlb
lea
sub
lods
std
jmp
inc
loop
sub
jmp
add
push
cmp
sbb
paddusb
mov
mov
lret
mull
popf
push
mov
adc
jmp
fcmovu
call
nop
xor
sub
stos
lock
mov
adc
ret
testb
xor
js,pn
sub
mov
orl
mov
inc
fsubrl
iret
pushf
rcll
aam
pushf
call
test
xchg
mov
cltd
push
outsl
test
pop
xchg
adc
jmp
into
pop
sbbl
pop
outsl
sbbl
jno
js
cmc
sbb
stos
loope
mov
mov
lret
mov
pop
jns
pop
push
enter
div
fistl
mov
mov
sahf
jb
jns
sbb
in
mov
and
pop
iret
shll
mov
movb
das
arpl
push
xchg
pushf
jb
cmpsl
jmp
xor
jl
aaa
push
fstpl
inc
loope
xchg
xor
mov
and
fwait
push
repz
xchg
mov
arpl
int
mov
and
cmp
sarl
sbb
insl
aas
and
add
ret
clc
and
out
dec
call
imul
adc
sti
cwtl
cmp
dec
pop
sub
int3
inc
sbb
xchg
dec
out
cmp
mov
or
xor
dec
shr
push
daa
inc
adc
ret
jo
xchg
lods
mov
or
mov
loopne
orb
ret
in
enter
jle
adc
sti
xor
or
lods
inc
and
pushf
lcall
lret
hlt
push
xor
jnp
pop
xor
xor
sbb
in
push
jb
movsb
fnstsw
xchg
mov
jo
sbb
rorl
push
inc
insl
mov
cmp
and
rolb
enter
cmp
jb
and
dec
out
add
out
gs
stc
daa
xor
mov
adc
pop
das
ret
pop
stc
div
ret
imul
xor
lea
adc
jbe
push
ss
sbb
pop
popa
inc
jbe
sub
inc
clc
sub
rcl
add
out
jmp
push
ja
push
outsb
xchg
sti
test
shrl
dec
call
and
mov
push
bound
mov
mov
insl
adc
push
aam
cmp
gs
fidivrs
fimuls
stc
mov
dec
loopne
mov
jl
push
pushf
stos
adc
icebp
mov
loopne
jne
inc
pop
notb
testl
sbb
sti
out
push
mov
pop
push
movsl
jns
sub
jge
cmp
mov
push
stc
mov
fstps
cld
lock
lods
pop
das
jl
xchg
and
cmpb
jae
test
pop
jns
jne
push
gs
xchg
jp
mov
inc
jnp
pusha
lds
arpl
sbb
inc
cmp
pop
cwtl
mov
mov
std
ja
push
movsb
or
sub
jecxz
sarl
mov
outsb
or
mov
addr16
arpl
mov
fcmovu
pop
sbb
cmpsb
add
push
aaa
subb
loop
adc
imul
jns
in
mov
lret
mov
ret
xchg
xchg
outsb
iret
flds
addr16
xor
or
pop
jns
push
ss
es
imul
jae
jmp
cmp
mov
scas
popa
es
ljmp
dec
xchg
add
hlt
mov
or
das
pushl
cmp
ror
and
lret
stos
enter
mov
outsl
inc
imul
ds
es
pop
or
mov
fmull
ret
xchg
iret
jo
lods
enter
or
stc
or
jno
mov
fwait
or
jecxz
mov
shl
jno
jb
es
mov
and
out
nop
and
arpl
jae
pop
into
xchg
shl
add
ret
and
jns
cmc
fwait
cwtl
lods
nop
jl
add
xor
sti
jge
cwtl
jne
xchg
sti
dec
imull
les
mov
mov
fwait
sbb
mov
lods
pop
ficompl
rolb
xchg
cwtl
sbb
mov
pop
mov
lcall
push
mov
gs
call
cmp
or
dec
add
scas
repz
pop
jae
pushf
loope
fnstenv
lahf
scas
rol
adc
and
ret
or
bnd
jle
movsb
out
xchg
sbb
mov
pop
lods
les
mov
fistl
mov
and
xor
jb
inc
and
rcr
lret
daa
mov
push
lods
mov
mov
scas
mov
push
inc
and
xor
aad
notl
or
cmp
dec
push
subl
bnd
push
cmpsb
mov
stc
sbb
add
bound
out
pop
mov
out
jmp
repnz
int3
into
or
negb
push
xchg
xchg
inc
ret
mov
out
adc
pushf
lahf
ret
mov
fstpt
add
pop
mov
add
fs
loopne
mov
xor
push
test
scas
pop
int3
xchg
add
or
sbb
push
fwait
scas
lret
out
stos
arpl
jp,pn
add
lods
adc
mov
cmp
inc
mov
ljmp
pop
push
sub
cli
mov
push
dec
lcall
leave
lea
test
cs
rcrl
neg
sbb
lds
out
adc
xchg
inc
lret
inc
sbb
sub
sub
gs
rcrl
pop
push
sub
aas
lds
push
lret
bound
cld
arpl
push
movsb
cmpxchg
pop
pop
cmp
movsl
mov
xchg
add
mov
bts
int
pop
popa
scas
sub
adc
lods
push
adc
mov
adc
sbb
push
fimuls
inc
clc
push
std
mov
repz
repz
fs
mov
je
xor
mov
xor
push
jmp
lahf
inc
or
cmpsb
das
icebp
mov
je
xor
sbb
ss
mov
and
lahf
fbstp
jno
or
add
xchg
packssdw
add
mov
test
negl
aam
xor
lret
pop
les
js
rolb
xor
js
pop
adc
pop
in
pusha
sub
mov
int3
jns
int3
mov
bound
pop
mov
sbb
and
scas
addb
andb
cltd
adc
aad
dec
push
add
sub
lret
or
inc
jae
dec
pop
icebp
sub
mov
movzwl
or
mov
aad
jb
pop
and
sti
add
dec
int3
xchg
push
rcr
ljmp
stos
dec
mov
mov
add
xchg
dec
mov
shrl
cltd
pushf
iret
pop
pop
mov
mov
mov
inc
dec
xor
jp
xchg
cmpsb
arpl
xor
jmp
nop
fs
movsb
cltd
sub
lods
shl
mov
mov
out
mov
mov
xchg
xor
psubusw
mov
std
xchg
add
dec
inc
out
bound
add
and
and
mov
jns
jae
out
out
pop
scas
xor
jae
je
daa
mov
call
adc
inc
mov
in
es
shlb
mov
orb
add
inc
fwait
stc
push
test
imul
test
sbb
mov
pop
sub
outsb
ljmp
dec
mov
inc
jl
xchg
mov
mov
lds
xor
jnp
adc
daa
pop
inc
pop
pop
lock
inc
fiaddl
dec
scas
cmc
dec
adc
dec
sub
movsb
push
movsb
loopne
push
pop
leave
cmpsl
outsl
loope
movsb
add
cmp
jge
and
and
inc
add
jae
dec
jns
xor
xor
sub
cltd
mov
sbb
ss
test
movsl
fmull
daa
cmp
aam
sub
lods
dec
adc
jmp
sbb
repnz
jecxz
jg
xor
fiaddl
stc
nop
int
xchg
outsl
lret
lods
mov
mov
in
repz
or
loop
icebp
xchg
cmpl
pushf
jg
xor
or
in
bound
cmp
inc
test
rcl
add
and
jbe
adc
ret
dec
insb
shlb
call
xchg
adc
les
mov
adc
iret
push
cmpsl
sti
push
lods
call
mov
xor
rcrb
mov
cmc
xchg
jnp
fdivr
call
xor
aam
movsl
inc
jne
out
add
pop
push
imul
push
add
call
mov
push
cmp
mov
out
inc
jmp
jo
xlat
mov
cmp
call
xor
dec
ret
inc
xor
sub
imul
filds
pop
sbb
dec
mov
or
addps
popa
test
mov
cmp
stc
dec
outsl
xchg
lcall
lahf
sti
rep
push
xchg
mov
inc
adc
jb
aad
push
and
mov
adc
inc
push
int3
mov
cmc
bound
lods
iret
sbb
adc
or
shlb
aam
scas
add
sbb
sub
mov
out
aam
je
pop
je
subb
jg
mov
dec
aas
divl
sbb
sub
aam
add
gs
leave
call
hlt
stos
lahf
cmp
cmp
dec
or
aad
rcrb
and
stos
jb
pop
not
lods
loop
shlb
add
adc
xor
mov
adc
cmp
add
daa
out
cld
xor
pop
mov
fwait
call
push
inc
int
xchg
xlat
jp
inc
jp
mov
hlt
shrl
je
in
adc
cmp
enter
sub
dec
inc
cwtl
mov
fdivrp
ss
sbb
sbb
dec
stos
loope
and
shll
notb
aad
add
jns
jne
movsl
cld
pop
pop
pop
repnz
xor
fistl
lret
lret
mov
insb
insb
fs
mov
mov
pop
xor
mov
sbb
ja
test
lret
jns
mov
mov
push
push
pop
push
sub
xchg
hlt
shl
jmp
dec
lahf
inc
imul
jmp
xchg
in
jnp
js
pop
insb
sbb
fsubrs
push
fnsave
inc
sbb
fwait
in
stos
xchg
sar
mov
loope
cs
adc
mov
pop
or
imul
cmc
insl
mov
add
xchg
pop
outsb
add
jl
repnz
aam
mov
xor
movb
push
sub
pop
ja
stc
outsb
jnp
push
sub
pop
movsb
jo
lahf
push
divb
inc
inc
cwtl
pop
cmp
test
out
mov
mov
test
mov
or
in
jbe
and
pop
xchg
sti
gs
add
mov
sahf
fsubrl
mov
push
in
aaa
push
lock
sub
lods
gs
adc
shrb
sbb
xchg
and
mov
jb
arpl
add
fdivrl
scas
push
test
nop
ret
es
add
loopne
xor
idivl
mov
sub
xchg
pop
xchg
jle
inc
mov
and
or
clc
sbb
sbb
lea
psllq
push
adc
sub
pop
mov
xor
mov
lds
cmc
or
shrl
andl
imul
mov
xor
test
cmp
fldl
or
fldt
sub
push
pop
pop
push
and
or
add
pop
jno
inc
popf
sbb
mov
cmc
xchg
jg
movsb
out
xchg
imul
xchg
add
mov
popl
stc
dec
jle
xchg
into
inc
aas
and
sbbb
jmp
repz
lods
ffreep
pop
insl
fcmovu
and
cmp
les
out
xor
scas
lret
out
sbb
out
es
pop
dec
add
es
dec
adc
inc
loop
jge
ljmp
dec
fwait
stos
jp
cwtl
fists
add
ss
sbb
inc
ret
xchg
jns
shll
lcall
movsb
dec
hlt
xchg
popf
mov
push
sub
push
insb
cli
icebp
scas
sub
clc
push
mov
push
lds
inc
lret
clc
mov
xchg
inc
das
andl
fcmovnb
pop
inc
jno
cwtl
or
into
push
cmc
adc
dec
lds
fs
enter
fbld
dec
test
cwtl
das
lahf
adc
imul
idivb
cld
fldt
outsb
xor
aaa
or
jno
int3
xchg
and
test
jecxz
pop
push
std
pop
dec
call
fwait
out
inc
pop
cmp
sub
mov
mov
mov
and
push
push
sub
jecxz,pn
mov
lock
or
repnz
int3
push
test
xchg
mov
xor
adc
add
enter
fistpll
pop
loop
dec
rcll
cmp
in
cmp
mov
scas
inc
and
xlat
inc
jmp
cmp
push
dec
xchg
inc
dec
sub
inc
mov
lret
je
test
aam
aaa
ffreep
test
add
dec
xchg
dec
ja
xchg
push
push
pop
shl
cwtl
je
test
mov
test
ffreep
es
jmp
mov
hlt
arpl
sub
js
mov
mov
adc
or
mov
aam
pushf
or
or
divl
jmp
fdivl
stos
push
xlat
ja
jle
and
xlat
aad
cmc
enter
cmp
dec
fldl
mov
shlb
loope
mov
lods
sub
mov
xchg
jp
test
ss
dec
aad
pop
jnp
sarb
out
jne
adc
scas
ja
xor
aaa
shrl
insl
jne
jecxz
adc
sbb
dec
imul
movsl
xchg
dec
pop
in
push
mov
xchg
jo
and
or
inc
inc
inc
inc
addr16
inc
cmp
sub
inc
fdivrl
mul
jecxz
stos
xor
sub
stos
jecxz
insb
lret
or
dec
and
das
jbe
arpl
mov
mov
lcall
and
and
push
mov
mov
repz
ja
xchg
adc
shrb
xlat
gs
pushf
ret
adc
mov
xor
and
insb
jmp
incb
mov
cmpb
or
jb
mov
int3
in
dec
out
in
xlat
jns
bound
push
push
idivb
test
nop
jne
sub
mov
je
xchg
dec
adc
add
popa
popa
fsubr
or
fucomi
outsb
les
fsubrl
in
xchg
mov
mov
jns
js
bound
pop
jmp
or
insb
cmp
loope
xlat
loopne
rcl
sub
mov
ja
ret
xchg
inc
lret
dec
pcmpeqd
mov
stc
fistpll
pop
das
pushl
pushf
or
pop
rol
inc
sub
mov
iret
mov
jns
adc
or
int
lock
jecxz
popf
mov
inc
insl
adc
loop
inc
pop
mov
mov
call
mov
int3
insl
stos
cmp
insb
dec
jnp
rcl
pop
mov
jecxz
push
push
sbb
lods
cs
cli
jno
mov
mov
mov
les
btr
scas
add
jecxz
mov
cmp
xor
aas
xchg
hlt
out
insl
pop
test
sub
testb
and
cltd
mov
aad
jg
outsb
or
adcb
cli
inc
sub
movsl
lahf
repz
lahf
mov
mov
mov
mov
pop
out
ja
gs
in
or
sbb
mov
add
icebp
mov
shlb
add
lcall
jecxz
push
mov
adc
push
pop
out
xor
je
mov
mov
aad
cmp
mov
xor
and
adc
mov
ljmp
arpl
mov
in
cs
popf
adc
in
inc
nop
jle
cmp
dec
rcll
outsl
addr16
sub
or
dec
push
leave
sub
push
lods
push
xchg
test
xchg
iret
loop
rclb
cs
pop
xlat
fistl
jl
movsb
push
lea
outsl
movq
jno
test
lcall
xchg
jnp
pushf
adc
repz
bswap
subl
pusha
mull
lods
lret
orl
enter
add
jb
sub
dec
mov
mov
mov
mov
or
shll
iret
ja
imul
sbb
scas
bound
lret
xor
call
fldcw
jnp
pusha
and
std
cltd
mov
in
sub
out
and
testb
test
popa
inc
sub
jns
std
jns
mov
fsubrp
gs
mov
mov
jae
adc
rclb
xor
enter
out
and
aaa
jmp
jp
roll
test
cmp
adc
in
cmpsb
adc
sti
fsubrp
push
and
xor
mov
and
orb
adc
in
pop
and
push
adc
stos
push
mov
fadd
xchg
dec
xor
mov
outsb
mov
push
jmp
fldl
out
sub
xor
shrl
mov
mov
rclb
mov
test
sbb
dec
fbstp
out
xchg
je
and
push
jmp
and
divb
jns
fists
hlt
pop
enter
xor
leave
push
push
pusha
into
jnp
bound
aad
lea
and
push
cltd
je
pop
jecxz
repnz
push
ret
shl
xor
mov
stos
jo
mov
imul
push
aad
scas
mov
insl
dec
cmpsl
sahf
fwait
jle
xchg
sub
or
sahf
rorl
adc
mov
and
gs
adc
faddp
sub
jl
jbe
rcr
std
shrl
jl
xor
stos
movsbl
push
das
push
cli
data16
out
test
mov
sub
and
push
cmp
test
xchg
ret
iret
jge
nop
cmpsb
xor
sub
movl
movsl
shrl
xchg
fs
lock
hlt
fiaddl
scas
jmp
inc
pop
pop
xchg
adc
cmc
jg
jp
push
xor
call
and
sub
sar
stos
add
or
adc
stos
cmp
pop
ret
adc
xchg
test
roll
inc
add
movsl
outsb
pop
sbb
fnsave
lea
mov
mov
cmp
and
inc
jg
mov
xchg
sar
data16
lcall
mov
sub
pop
fwait
push
sub
pop
fnsave
pusha
dec
mov
stos
xor
push
pusha
rcrb
bound
lahf
fstps
mov
mov
mov
xchg
repnz
shlb
xor
pop
and
ds
test
ds
loopne
jg
lret
repz
or
loope
out
add
mov
cltd
jae
lret
sbb
push
inc
ret
in
stos
mov
ss
push
cmc
jns
or
pop
sub
inc
es
xacquire
or
fstpt
lcall
call
sub
stos
in
es
jp
lahf
inc
pop
jno
pop
xchg
pop
or
out
and
ror
mov
and
adc
outsb
xchg
sub
pop
mov
ss
lcall
addb
dec
add
out
jne
push
test
popf
or
jno
pop
cld
mov
dec
sarl
mov
xor
repnz
shlb
fdivrl
repnz
sub
rsqrtps
movsl
mov
mov
inc
out
inc
ss
scas
jecxz
mov
cmc
and
movsb
gs
dec
jle
mov
lock
xor
pop
mov
and
stc
stos
aad
sbb
dec
mov
pop
xchg
mov
lcall
in
or
inc
mov
mov
push
pop
imul
mov
sbb
and
popf
insl
lods
out
cmp
cmp
fwait
pop
push
nop
outsb
push
mov
adc
std
out
sarb
pop
jl
pop
push
in
push
inc
insl
rolb
repnz
jl
mov
xor
push
jg
rcrb
sahf
fisubrs
pop
mov
mov
mov
xchg
mov
xor
pushf
in
adc
jg
lods
adc
push
mov
push
add
clc
repnz
xor
std
lahf
dec
and
or
mov
push
cli
subb
and
outsb
mov
sbb
int
icebp
es
mov
mov
adc
inc
jne
mov
cmp
add
mov
arpl
in
int
jle
jno
icebp
rcrb
stos
out
repz
mov
lahf
ss
inc
stos
and
stos
push
pop
inc
inc
iret
adc
imul
push
xchg
sub
adc
dec
fildll
cwtl
notl
jg
mov
sub
mov
mov
inc
jno
adc
dec
lds
adc
mov
push
mov
fnstenv
mov
scas
jno
push
mov
sub
in
mov
xor
test
ss
jae
loope
aam
mov
scas
daa
lea
test
mov
ss
xor
stos
decb
ja
into
push
cmpsl
add
ss
fcomi
mov
jg
dec
mov
xorb
pop
push
xchg
adc
js
in
or
dec
add
push
arpl
pop
test
xchg
and
pop
adc
mov
jb
pop
mov
dec
add
cmp
sub
dec
int3
mov
dec
js
popf
cmpsl
jnp
push
shl
push
fstpl
adc
jge
and
fmuls
scas
sahf
dec
rorb
out
cmp
roll
ficoms
dec
icebp
mov
ror
repnz
adc
imul
sbb
mov
add
std
cmp
out
imul
adc
fmull
pop
lods
cld
mov
or
adc
ss
jbe
das
in
mov
mov
gs
pop
xrelease
add
mov
clc
sbb
cs
sub
adc
xchg
rol
or
pop
arpl
mov
lcall
sub
jae
xor
xor
test
dec
jne
mov
jle
insl
xor
cs
mov
lahf
inc
mov
fbstp
push
inc
aad
pop
popa
and
xor
mov
imull
adc
inc
cmp
jae
test
dec
pop
stc
mov
lea
rorb
out
adc
jnp
ds
sbb
adc
aam
into
mov
rorl
dec
or
cld
dec
pusha
ds
lret
dec
or
daa
sti
sti
fnstenv
mov
adc
fdiv
outsl
dec
das
pop
test
pop
jo
push
dec
adc
roll
mov
jnp
sub
repnz
js
iret
addr16
pop
jae
fidivl
mov
shl
imul
jp
mov
fldl
push
out
dec
sbb
jae
sar
cmp
into
pop
mov
sub
jno
mov
out
xchg
sbb
fsubs
mov
in
pop
in
inc
jl
adc
lea
icebp
mov
mov
outsb
mov
sti
dec
mov
jne
jl
push
inc
add
fistpll
in
lods
fscale
insb
pop
clc
push
mov
lds
pop
addr16
imul
pop
fadds
movsb
cwtl
sahf
je
mov
sahf
xchg
cmp
arpl
sbb
jne
adcl
mov
mov
fcoml
out
inc
push
outsl
dec
call
lret
adcl
adc
out
mov
and
fildll
rol
dec
dec
outsb
mov
mov
xchg
jp
add
jg
inc
jg
ror
fsubrs
xchg
daa
mov
fcomps
mov
sub
pop
popf
lds
cmc
inc
std
dec
in
xor
cmp
jge
scas
pop
fsts
fpatan
mov
jns
lret
iret
cmp
sub
fdivrp
arpl
cmp
dec
xchg
lock
adc
jg
xor
outsl
cmp
shl
popa
cmc
or
jl
lods
ds
in
out
pop
out
or
sub
mov
xor
cmp
and
shrb
mov
cmc
fisubrl
dec
inc
add
mov
pop
pop
cmp
unpckhps
sbb
negl
dec
or
mov
mov
jnp
pop
mov
fbld
inc
mov
mov
ds
add
divl
fstpt
les
and
fsubp
imul
mov
add
rorl
push
jg
or
add
push
xchg
repnz
test
cmp
push
ret
sbb
pop
js
inc
jo
jp
scas
and
push
imul
mov
in
loop
push
and
xchg
pop
lret
or
adc
xchg
pop
aaa
or
mov
movnti
fisubs
xor
mov
or
xor
fwait
je
xor
mov
pop
in
divb
xor
xor
lahf
decl
inc
testl
cmc
jbe
xlat
test
sub
ret
mov
jae
mov
rcrl
mov
les
pop
adc
rcr
imul
imul
pop
je
or
jns
stos
sub
mov
fistpll
js
cmp
aam
scas
jmp
stc
out
mov
test
out
mov
lock
roll
or
push
popf
test
nop
add
xchg
sub
into
sbb
and
xor
fdiv
push
sbb
dec
inc
sbb
lcall
sbb
stos
push
call
mov
pop
leave
push
insb
cmp
jg
xchg
xor
xchg
add
out
insb
jge
int
mov
or
bound
fistpll
dec
loope
das
push
rcll
sub
xor
pop
shll
movq
es
pop
lcall
mov
pop
fstpl
cmp
xchg
inc
cmp
push
push
dec
sub
faddl
inc
sahf
inc
inc
in
cmp
inc
jmp
jl
pop
leave
jno
pop
call
pop
and
repnz
cmp
divb
fcomp
mov
pop
and
xor
or
sti
pop
pusha
xlat
mov
pusha
stos
ss
andb
call
mov
dec
arpl
popa
jle
jns
lcall
xchg
test
xor
fidivl
aam
imul
clc
adc
dec
fisubrl
xchg
fs
mov
popf
add
lods
loope
or
cmc
repnz
push
lods
aam
outsb
mov
dec
outsb
jo
mov
jb
mov
inc
mov
scas
jno
and
sbb
iret
jne
jg
adc
jo
aaa
aas
push
dec
xchg
in
jecxz
lds
push
lea
or
mov
xlat
shlb
pop
mov
jno
pop
add
sti
cmp
adc
mov
mov
lds
jge
pop
and
xor
add
das
jbe
sarb
int3
fsubs
testb
outsb
cltd
xorb
jp
jb
mov
jno
hlt
xchg
outsl
mov
ds
shlb
push
mov
icebp
in
dec
test
lds
rolb
mov
cmp
enter
faddl
lahf
sbb
leave
jbe
or
inc
jns
xor
xchg
and
mov
push
pop
insb
or
lock
inc
ds
fwait
ds
mov
push
cmp
leave
dec
daa
sub
in
in
sbb
and
push
or
lcall
gs
inc
cld
inc
out
mov
push
push
sub
push
cmp
mov
out
mov
hlt
xchg
xchg
adc
mov
fwait
scas
shll
add
xchg
pop
jno
insb
mov
ret
jo
cmp
mov
sbb
shlb
loopne
pop
mov
push
dec
test
cltd
mov
bound
mulb
xchg
mov
adc
or
add
dec
ud2
pop
in
fs
pop
ror
mov
and
pop
sub
cmp
pop
sarl
or
out
mov
sbb
mov
daa
js
test
jmp
mov
jmp
dec
gs
loop
rcl
inc
out
insl
dec
jo
xor
popa
sub
test
subl
ljmp
aam
js
push
inc
testl
popf
iret
test
lds
std
mov
mov
jp
insb
repnz
lds
jno
inc
or
dec
lea
fdivrl
cmp
xchg
jmp
push
pop
std
add
loop
js
xchg
loope
push
dec
pop
pushf
lds
fcoms
inc
out
stos
aas
aam
cmpsl
pop
outsb
push
mov
push
jmp
nop
sbb
mov
fists
rcr
jno
lods
xchg
jle
subl
loope
stos
push
mov
lock
jle
cmpl
add
adc
icebp
sub
adc
push
add
enter
push
dec
or
pop
movsb
adc
sub
dec
fldenv
mov
leave
jge
js
add
dec
push
les
cmpsb
scas
cs
outsb
stos
loope
mov
in
sti
push
xor
dec
jg
xor
ljmp
test
loope
push
sub
js
ds
movsl
pop
mov
mov
out
mov
or
lahf
insb
inc
sbb
cmp
pusha
add
sub
pop
adc
bound
mov
int
sbb
mov
adc
fldenv
fadd
jg
icebp
adc
out
pop
fisubrs
push
out
mov
sbb
fcompp
cld
cmpsl
inc
inc
xchg
dec
test
lret
fbstp
jne
or
test
mov
jge
lods
push
lds
and
push
mov
add
shr
call
dec
cmp
outsb
fidivl
das
std
push
cmpsl
inc
cmpsb
lods
fildll
or
call
data16
in
in
outsl
sarb
jnp
popf
cmpl
xor
and
push
pop
pop
or
ret
push
orl
lds
fildll
adcl
sub
pop
shr
sar
or
ds
cmp
fldln2
popf
sub
mov
popf
es
fildll
xor
imul
mov
xchg
fidivl
lahf
mov
sti
mov
mov
frstor
scas
rorb
int3
mov
ljmp
jmp
mov
add
nop
and
sarb
iret
cmp
mov
jb
cli
aad
mov
cmp
loopne
insb
push
mov
dec
pop
cwtl
add
mov
mov
sub
sub
mov
adc
lret
jmp
add
popa
sub
aas
jg
jp
jbe
inc
xchg
scas
dec
hlt
jns
jmp
inc
addr16
push
mov
rorb
aam
idivb
out
dec
daa
idiv
cltd
sbb
popa
and
adcl
inc
mov
dec
pop
push
stos
pushf
push
popf
aaa
sbb
shll
mov
into
mov
dec
or
adc
jp
test
and
mov
mov
aas
mov
fsts
push
es
mov
lds
jbe
ret
add
sbb
dec
push
cli
sbb
inc
inc
dec
std
xchg
inc
xrelease
lret
je
jle
hlt
cwtl
addl
into
cmpsl
push
andb
pop
inc
and
sbb
dec
cmp
iret
sbb
pop
rcrb
xlat
jge
repz
mov
cmp
mov
hlt
pop
xchg
pop
fldcw
xchg
int3
fmuls
mov
push
stc
imul
inc
movsl
adc
adc
in
xchg
fldenv
stos
hlt
push
mov
enter
repz
adcb
dec
pop
sub
negl
sub
loopne
clc
ret
push
sbb
fmull
mov
movsl
mov
cs
mov
hlt
pop
or
std
lea
or
push
icebp
sub
dec
lds
or
fnstenv
inc
mov
sbb
jg
test
mov
pop
sbb
sti
pop
shr
jle
mov
or
divl
jne
sarb
cmp
aad
pop
fsubl
mov
hlt
jnp
jg
mov
jno
mov
adc
shll
jns
bound
push
imul
pushf
mov
push
test
cmp
scas
mov
pop
stc
sbb
and
push
cmc
scas
cltd
push
sahf
push
or
pop
sahf
lcall
push
loope
sbb
rcrb
out
loopne
lods
fldln2
scas
sbb
test
idiv
lcall
dec
mul
jecxz
and
out
and
mov
cs
jl
and
pop
enter
sub
jnp
adc
adc
aas
push
inc
and
jae
imul
jnp
jge
ss
ja
test
pop
pop
out
and
add
loop
jle
cli
pusha
mov
cmp
daa
dec
adc
out
cmpsl
mov
jmp
add
push
sbb
pop
daa
mov
add
cmp
xchg
pop
cltd
or
cli
push
pop
mov
enter
je,pt
cmp
jmp
cmp
add
out
dec
cmp
ret
mov
push
shll
mov
push
add
cli
sahf
sbb
push
loopne
mov
mov
mov
cmpsl
insl
or
sbbb
mov
notl
mov
sub
iret
xor
xor
push
cs
movsl
jbe
sub
sar
or
mov
ret
sti
sbb
jno
or
mov
repz
sub
loop
cmpsb
jp
push
push
push
and
data16
mov
leave
jno
hlt
movsb
jp
lcall
clc
ljmp
test
sub
mov
push
repnz
shlb
inc
add
lods
andb
xadd
gs
jno
xchg
aaa
adc
mov
cmp
add
test
xor
adc
std
push
pop
mov
cltd
dec
scas
mov
ljmp
dec
ret
ljmp
xchg
push
sbb
xchg
movsb
rcll
arpl
test
mov
nop
mov
insb
gs
je
dec
pop
lods
inc
push
std
add
fwait
in
xor
rcrb
mov
mov
arpl
and
cmp
icebp
cs
cmp
jge
jg
lods
fidivs
jbe
lods
and
xchg
inc
inc
loop
stos
mov
dec
rcll
push
cmp
and
jbe
test
jno
addr16
jp
leave
dec
adc
testb
test
movsb
aam
fcomp
call
int
sti
leave
cld
inc
push
nop
mov
jbe
cmpsl
imul
ror
cwtl
clc
push
je
shr
xchg
and
xor
mov
push
xor
sub
loopne
orb
loopne
cld
lock
in
mov
ret
sub
add
imul
out
es
sbbl
push
ss
push
xor
jno
sub
inc
mov
sub
jae
fdivr
nop
cli
lret
outsl
imul
scas
cmp
add
dec
lret
and
xor
inc
fldl
and
and
mov
xor
mov
push
jo
cmp
mov
cmp
mov
jb
into
xchg
dec
inc
sbb
xor
cmp
in
dec
ds
stos
mov
add
sub
jno
adc
mov
xlat
pop
rcl
jno
push
or
test
cmc
lcall
xchg
cmp
mov
mov
lcall
int3
and
push
or
fildl
mov
cli
xchg
leave
bound
jae
cmp
div
sub
mov
pop
push
mov
imull
icebp
or
daa
es
mov
fiadds
clc
stos
movsb
adc
xor
lgs
or
mov
xor
push
std
pop
fwait
and
fs
inc
dec
scas
push
andl
push
fildll
stos
leave
insb
xor
hlt
loope
add
nop
xchg
adc
leave
inc
and
pushf
and
mov
lock
pop
test
jo
xchg
sub
jp
pop
out
xchg
mov
out
push
xchg
movsb
add
or
enter
outsb
lds
adc
in
mov
pushf
mov
vmread
cltd
lret
out
int3
adcl
xchg
mov
stos
neg
mov
xor
scas
add
aam
ret
loopne
mov
test
scas
loope
aad
lods
mov
sub
dec
arpl
aad
mov
rolb
jo
push
adc
loopne
nop
int3
dec
aas
out
lea
sti
sub
enter
push
cmp
push
adc
pushf
inc
aaa
gs
cmp
shr
jne
jmp
dec
rcl
xchg
insb
fidivrs
out
or
es
push
pop
lret
xor
popf
cwtl
mov
shr
pusha
dec
movsl
fiaddl
push
adc
cmp
outsl
idivb
mov
je
add
or
loop
lahf
pop
and
adc
cltd
enter
movsb
jle
les
cmp
lret
push
adc
cs
push
mov
xchg
insl
xchg
sbb
fs
xlat
fbstp
mov
orb
push
int
sti
xchg
xor
cmp
mov
jle
dec
and
or
pop
imul
icebp
pop
andl
aad
std
mov
in
push
sub
mov
test
pop
jmp
scas
xchg
movsb
sub
xorb
jl
cmp
repz
jns
push
jo
fdivr
mov
pusha
pop
ret
lds
xchg
adcb
sub
cwtl
sbb
pop
lock
push
movsb
aaa
shll
sub
pop
into
test
in
xor
pusha
pop
js
mov
add
cmc
arpl
jmpw
dec
jo
mov
sub
test
mov
into
out
hlt
inc
sub
push
cmp
out
outsl
lea
xchg
adc
pop
pop
mov
add
jns
popa
stos
movb
sti
movb
jmp
mov
mov
frstor
pusha
inc
in
decl
jne
jle
and
mov
xor
mov
imul
pop
xor
push
loopne
andb
in
nop
jle
lock
mov
sub
jb
jnp
push
nop
mov
in
xchg
rcr
inc
push
xchg
push
mov
inc
lret
pop
gs
in
cmp
dec
and
pop
int
icebp
adc
mov
push
into
xchg
push
push
sub
out
movsl
mov
je
cli
testb
sub
mov
sarb
jecxz
cwtl
into
xchg
push
mov
enter
out
cmpsb
push
aad
and
fisubrl
mov
push
push
xchg
xor
or
lahf
loop
pop
fidivl
gs
xor
mov
inc
gs
jecxz
sub
out
ror
insl
pop
shrb
fidivs
stc
inc
iret
inc
push
out
out
das
test
mov
push
mov
xor
sub
stc
inc
cmpsb
divl
lcall
ss
dec
xor
cli
pop
andb
fwait
lcall
cpuid
xchg
jae
shl
in
jp
es
dec
ds
mov
lea
jge
pushf
testb
pop
jle
mov
lea
int
loop
iret
jno,pn
mov
adc
adc
add
cwtl
out
push
insl
es
or
shlb
sub
fimull
movups
outsb
mov
ret
xchg
cwtl
cmp
and
ret
popa
jae
out
test
adc
bound
mov
pop
sub
jns
cmpsl
xchg
sahf
jp
loope
mov
and
fucom
mov
rclb
repz
mov
popf
dec
cmp
dec
xchg
out
push
mov
ljmp
xchg
push
mov
je
xchg
add
xlat
cmpsl
or
repnz
push
xor
jge
jae
repnz
mov
inc
loope
es
or
in
jne
dec
scas
ds
loope
cwtl
jb
lds
fldenv
inc
mov
pop
sbb
cmp
dec
popa
scas
mov
mov
jae
jge
inc
outsb
adc
dec
pushf
mov
adc
and
xchg
xor
mov
movsb
cmp
sub
sub
outsl
sti
insl
mov
jmp
bts
stc
fnsave
add
aam
jl
push
mov
stc
call
movsb
sahf
lahf
rcr
xor
je
ljmp
jnp
nop
stos
hlt
xchg
mov
ficoms
lret
cmpsb
inc
inc
pop
and
jge
iret
icebp
push
pop
or
and
dec
ljmp
testl
push
shlb
mov
add
fmuls
je
fwait
mov
and
sahf
jns
cli
push
rcll
icebp
fsts
jne
int3
adc
scas
xorl
ret
repz
sahf
out
fstpl
push
lds
adc
in
leave
in
mov
clc
aad
rolb
inc
das
outsl
sub
mov
std
mov
test
clc
js
cmp
adc
cmp
push
loop
cmc
sbbl
cltd
xlat
xchg
nop
cmc
adc
xchg
cmp
mov
lods
lds
mov
push
jne
sahf
cwtl
insl
in
cmp
xchg
jge
jmp
rorl
mov
pop
aas
adc
xchg
and
adc
in
ret
jp
mov
sub
sahf
rol
pop
lcall
adc
fcomip
sbb
popf
icebp
lds
or
outsl
imul
pop
cwtl
lahf
js
scas
mov
xchg
fsubl
mov
cmc
cmp
mov
xor
xor
cs
out
mov
push
jle
xor
jl
mov
sub
scas
std
sbb
hlt
rcll
gs
movsb
out
mov
mov
xor
frstor
leave
aam
sub
stos
pop
pop
sbb
popa
popa
frstor
ljmp
pushf
clc
dec
ret
push
call
out
out
aad
jmp
loope
or
jns
sahf
jns
mov
mov
cmp
xchg
dec
inc
or
dec
xchg
push
repnz
sbb
push
jbe
sub
xor
inc
scas
mov
and
out
mov
rclb
sbb
in
inc
jnp
jge
loope
mov
in
jmp
testb
mov
inc
lds
mov
inc
xor
push
and
xchg
sbb
xorb
mov
cmc
sub
addb
pop
test
cld
imul
add
aad
pop
inc
shll
xor
pop
in
insb
shlb
adcb
scas
aas
sub
add
jae
arpl
lret
popf
lret
adc
sub
popf
or
popf
leave
mov
push
xor
mov
ja
pop
pop
in
inc
mov
ret
push
iret
pop
lret
and
negb
scas
cwtl
ds
xchg
fists
lock
adc
jbe
pop
out
sbb
cmp
cmp
outsb
mov
daa
add
shlb
inc
mov
jmp
fidivrl
repz
or
cmpb
dec
mov
not
test
adc
popa
fbstp
dec
mov
adc
xor
sahf
packuswb
pop
loope
incl
test
lcall
ror
push
int
movsl
inc
aam
inc
dec
add
push
and
jmp
pop
jmp
push
lds
jns
out
into
rolb
repz
dec
movsl
sbb
wbinvd
ret
inc
fsubl
sub
pop
loope
and
lods
jle
mov
pop
jb
cmpsb
pop
mov
xor
mov
movsl
fs
pop
rcr
xor
inc
jl
negb
hlt
mov
sub
push
faddl
push
pop
pop
add
in
data16
pop
icebp
xor
cmp
mov
mov
dec
mov
in
aas
xchg
jl
fsts
das
xchg
mov
xor
test
or
inc
imul
inc
inc
cmp
stc
adc
push
out
or
dec
sub
lods
cmp
data16
push
aad
xor
out
pop
xlat
and
pop
call
and
sbb
sbb
popa
add
dec
pushf
insb
fabs
sbb
das
sbb
mov
jo
aad
xchg
adc
lahf
cmp
cmp
fwait
arpl
dec
mov
xor
stos
aas
jg
loopne
rorb
push
pop
sub
js
sahf
repz
mov
lcall
pop
mov
test
xor
pop
in
arpl
jecxz
push
sbb
push
jle
sar
bound
cs
jne
cltd
repnz
xchg
pusha
cld
jp
add
fildl
push
dec
fsubrp
adc
xor
enter
inc
xor
loop
adc
rclb
test
push
ss
fists
lahf
adc
pop
arpl
pusha
addr16
jae
mov
addr16
mov
jae
inc
mov
jmp
or
out
dec
cs
mov
fcmovnb
lods
ret
clc
xchg
xor
mov
sbb
insl
ja
into
xor
fyl2xp1
xchg
cmp
jecxz
into
pushf
xchg
int
dec
and
lds
ss
stos
and
leave
int3
pop
or
sbb
std
fcompl
mov
addr16
stos
xor
aam
out
cmp
lcall
fidivrs
je
movsl
popaw
lea
loopne
pop
xor
nop
inc
lds
jge
sbb
imul
cmp
shll
inc
mov
jo
popl
out
inc
stc
movsb
cmpsb
cmc
add
lods
lcall
aaa
js
les
mov
push
imul
and
push
sti
ds
popa
add
xor
ljmp
add
jae
pop
clc
add
cltd
mov
cmp
fldcw
cli
stos
cmp
add
and
js
mov
fwait
push
lds
iret
sub
mov
jns
xchg
dec
mov
popf
push
lods
mov
push
outsl
push
sbb
popa
leave
rorb
hlt
mull
dec
aam
push
addr16
fs
daa
mov
lcall
insl
lret
jns
adc
adc
ret
outsb
add
daa
mov
sub
mov
ljmp
in
nop
push
arpl
inc
jnp
aad
pop
xorl
mov
cmp
sti
mov
dec
mov
pusha
or
scas
adc
inc
pop
jle
adc
mov
sbb
sub
add
stos
iret
aas
in
movsb
ror
sub
sarb
mov
adc
xchg
imul
imul
mov
test
cs
jbe
jns
mov
push
int3
ja
xor
pop
test
xchg
testb
add
sbb
mov
xchg
shll
xor
sub
sbb
in
inc
cld
xor
push
jg
xorl
repz
repnz
ss
fwait
dec
push
xchg
mov
xchg
cmc
andl
clc
les
clc
insb
cmpb
jecxz
push
cmpl
xor
in
pop
shll
mov
or
or
popf
outsb
in
sub
imul
je
add
xorb
jne
rorl
arpl
mov
aad
rclb
adc
pop
xchg
inc
xor
test
add
sti
lahf
dec
aaa
popa
inc
jb
dec
cli
scas
daa
sbb
in
mov
mov
das
push
and
mov
loop
aaa
aad
pop
std
cmp
jg
popf
lods
mov
mov
stos
arpl
test
negl
xor
call
idivl
inc
cmp
mov
jmp
and
sahf
lods
stos
lea
jmp
adc
ljmp
fdivrl
sbb
imul
out
sbb
add
in
jne
insb
aam
fsubs
icebp
js
loope
ror
add
cwtl
popa
xchg
loope
cli
insb
loope
dec
outsl
or
jo
aad
out
loop
mov
jmp
add
shlb
aad
ljmp
or
test
fs
adc
dec
push
int
int3
jns
inc
ficompl
es
pusha
lods
in
xchg
sub
mov
fidivrs
gs
add
outsl
jmp
insl
inc
adc
sbb
mov
xchg
test
imul
cmp
xchg
pop
leave
xor
xchg
popa
and
mov
sarl
mov
jp
sbb
dec
adc
scas
and
loopne
sub
sbb
cmc
or
mov
icebp
jge
pop
mov
jecxz
adc
in
inc
rolb
adc
xor
cltd
cmp
sbb
mov
push
cmp
iret
movsl
enter
and
imul
add
jg
xor
cld
sbb
lret
xchg
std
adcl
sub
scas
dec
shrb
pop
push
pop
aam
cmp
inc
pop
fiadds
loopne
pusha
jb
mov
stc
fwait
inc
adc
fnsave
pop
mov
adc
pop
jb
mov
sti
pop
je
sbb
cmp
pop
clc
lcall
sub
sbb
sub
in
test
daa
lds
jo
push
outsb
iret
dec
cmc
mul
dec
movsb
cmp
fldenv
mov
scas
xor
dec
out
push
or
cmp
imul
inc
xchg
lret
dec
lret
stos
xor
adc
push
jae
es
push
xor
pop
xchg
xchg
bnd
cmp
lods
or
fimuls
pop
fstpl
or
pop
inc
nop
dec
test
pushf
push
sub
je
push
sbb
pop
dec
jl
cli
jbe
rcll
cmovl
scas
mov
or
adc
shl
push
fisubrl
cmp
mov
sub
or
pop
xchg
in
inc
scas
data16
sbb
mov
int3
movsl
xchg
ljmp
shll
imul
push
std
cmc
lea
add
adc
rolb
dec
lahf
inc
pop
jg
mov
and
fisttpl
inc
aaa
leave
and
xor
xchg
cmp
ret
mov
leave
xchg
int3
lcall
aaa
stos
add
scas
mov
repnz
cli
add
test
inc
jmp
aad
xor
es
sub
repnz
pop
data16
fsts
popf
mov
call
xor
fcomp
addr16
pop
mov
add
call
sub
add
mov
push
in
daa
xor
repz
mov
pop
orb
mov
in
xor
jo
and
mov
cld
out
xor
xchg
add
imul
xchg
add
xchg
or
ljmp
out
sub
lcall
sub
xchg
sub
xchg
lods
loopne
inc
hlt
les
and
gs
loop
fs
fistl
inc
into
movsb
add
inc
mov
outsb
arpl
in
cmp
mov
mov
pop
outsl
adc
in
int
cltd
or
ret
aad
add
inc
jae
je
movsb
sub
imul
repnz
lcall
aad
outsl
jb
pop
sbb
adc
sub
push
outsl
cs
dec
mov
jp
mov
push
dec
gs
sahf
sub
call
sbb
in
lock
jl
ds
cmpb
popa
add
rcr
and
and
jg
mov
into
dec
mov
push
sbb
sbb
decl
inc
jle
add
shlb
lahf
data16
pop
xorl
cmpsl
mov
mov
adc
stc
mov
pop
inc
in
imul
ret
jnp
testb
popa
sbb
fwait
jecxz
add
outsb
out
decl
pop
out
xorb
dec
rcr
cltd
adc
nop
sub
fs
xor
sub
xchg
aad
dec
aas
out
and
inc
cmpsl
jnp
scas
jbe
mov
adc
jp
mov
sub
int3
sahf
xchg
out
dec
and
adc
jns
pusha
lahf
inc
jno
fcomps
inc
ljmp
pop
fs
or
mov
dec
push
push
and
and
aad
jbe
adc
ret
xor
sbb
rorl
mov
rorb
sbb
fisubrl
jmp
jnp
dec
inc
mov
dec
imul
popf
push
shlb
dec
into
cmp
mov
xor
fisubrs
into
stc
clc
mov
mov
mov
out
or
lea
fwait
sub
sub
sahf
insl
daa
sti
fwait
ret
imul
push
and
xchg
mov
adc
jmp
jns,pt
mov
lcall
ficoms
adc
in
repnz
fucomp
or
test
inc
sub
jns,pt
mov
nop
sbbb
insb
out
stc
and
push
stos
ljmp
fdivl
jge
sbb
jmp
repz
call
dec
es
outsb
fsts
outsb
ret
ret
std
sbb
mov
stos
jl
imul
cli
cmp
mov
js
aam
mov
mov
pop
mov
adc
mov
daa
xchg
repnz
and
xchg
fmuls
pop
add
jne
mov
dec
add
cli
dec
push
outsl
adc
imul
shll
pop
lret
lret
out
in
pop
push
aam
xor
clc
pop
pop
ret
pusha
cmp
insl
loopne
sub
rorb
mov
sahf
mov
pop
rorl
push
addl
push
dec
inc
stc
mov
adc
sub
call
mov
lock
mov
push
pop
test
loope
lock
pop
add
dec
push
mov
sbb
cmp
imul
pop
mov
arpl
mov
or
pop
jg
movsl
int
movsb
divl
stos
jle
iret
out
push
int3
ljmp
sub
dec
mov
pop
jbe
sub
int3
adc
mov
out
pushf
inc
mov
mov
testl
int3
xchg
mov
aas
and
sahf
ret
stos
pop
jns
mov
inc
loop
lahf
cmpsb
xlat
std
xchg
cld
sub
test
fistpl
fisubl
lret
jg
jmp
jbe
insl
fidivl
in
add
pop
push
test
je
inc
pop
test
cmp
outsl
pop
scas
imul
test
push
mov
test
lret
sub
arpl
or
push
pop
scas
inc
xor
call
adc
shrb
cwtl
bound
scas
and
and
insb
jl
jae
out
dec
call
dec
inc
lds
fwait
cmpsl
jp
sarl
rcrb
rsm
dec
xor
loop
xchg
iret
pop
cmp
xchg
sti
xor
stc
push
push
mov
pushf
in
je
xor
dec
mov
mov
mov
cli
mov
dec
daa
mov
in
lahf
jmp
sbb
xor
and
adc
xchg
add
sub
aas
and
sub
inc
pop
out
into
movsl
sbb
cmpsl
scas
scas
loop
and
in
xchg
rorb
clc
mov
test
sub
lahf
es
cmc
xor
jne
or
dec
loop
jmp
orl
shrb
mov
push
divl
inc
xor
insl
and
push
mov
xchg
inc
add
into
loopne
orb
leave
shlb
push
xor
jge
imul
scas
subl
enter
xor
sub
pop
cmp
mov
aas
sub
rorb
push
in
sub
jmp
sub
shl
stc
subb
pop
aaa
sti
imul
imul
xor
mov
pop
add
xchg
inc
mov
addl
into
popa
dec
sbb
mov
imul
and
sahf
pop
pop
inc
ss
into
xchg
push
adc
xchg
mov
xchg
or
adc
scas
xchg
mov
push
xlat
add
popa
aam
jae
mov
dec
adc
ficoms
jo
xchg
pop
insb
pop
roll
cmpb
js
cmp
das
or
cmpsb
mov
push
mov
cld
push
outsl
xchg
xor
shl
add
pop
jp
xchg
lds
add
and
pop
aaa
lock
xlat
jne
fdivrp
sbb
fidivrs
add
ds
enter
pop
aam
jmp
test
xchg
in
out
push
jae
inc
jb
xor
xchg
das
jmp
arpl
and
sub
push
push
outsl
inc
add
sub
adc
dec
aas
andb
je,pt
cmpsb
sub
ss
pop
fwait
stos
mov
mov
or
adcl
cmc
cmp
adc
subb
cvtps2pd
mov
scas
push
cmc
xchg
push
hlt
push
add
inc
mov
mov
stos
lcall
scas
xor
mov
xchg
ret
jb
sbb
lret
out
shll
inc
rcrb
mov
mov
call
cmc
sti
mov
fistps
stc
nop
fs
mov
or
push
xor
mov
cli
pop
mov
inc
sbb
xchg
mov
push
xor
dec
movsl
inc
mov
cmp
test
ror
adc
loopne
lcall
sbbb
ret
mov
mov
in
dec
xor
imul
rol
push
cmpsb
imul
jl
fidivrl
jle
mov
das
and
call
sahf
ret
push
pop
scas
ss
mov
test
lahf
fbstp
push
sbb
push
cmc
hlt
pop
shl
fmuls
aaa
stc
dec
fnsetpm(287
mov
lea
pop
scas
adc
push
jae
bound
insl
insl
pushf
mov
outsb
addr16
cmp
sbb
movsl
icebp
push
and
subl
int3
and
aas
dec
lds
into
push
mov
sub
add
pop
add
jge
lods
dec
xor
cs
jg
sbb
imul
in
pusha
add
push
std
vmread
pop
mov
jg
jbe
pop
and
insb
push
push
add
mov
stc
add
test
ljmp
insb
cmp
pop
add
out
push
and
aam
aam
orb
xor
xchg
pop
pop
add
frstor
adc
cmp
jno
shr
inc
inc
shlb
int3
popf
sbb
mov
fdiv
sub
pop
or
loopne
xor
xor
stc
leave
or
add
add
leave
js
mov
fcmovbe
fcomip
xor
inc
sbb
pop
cmp
push
cmp
fimull
cli
cli
pop
cmpsb
sbb
dec
or
test
int3
enter
sub
lcall
repz
pop
sub
andb
or
jbe
lret
xchg
mov
inc
lods
pop
enter
push
mov
or
loop
rcr
stc
std
sbb
ret
cld
in
and
cmp
stc
push
loopew
loop
dec
cltd
mov
xchg
push
in
pop
lret
push
aas
and
arpl
mov
cmc
xor
icebp
mov
inc
rcll
or
enter
dec
push
sbb
mov
xchg
inc
rcr
xor
out
lods
rcrb
notb
sbb
mov
dec
mov
push
xor
jb
sbb
cs
fldt
aad
iret
pop
pushf
out
cmc
push
and
fsubr
ret
add
inc
or
push
cmp
push
ret
out
fsts
cltd
adc
das
push
call
mov
into
mov
lret
out
repnz
cli
shrb
jl
lcall
mov
imul
xor
lret
out
inc
imul
mov
repz
je
decl
ret
pop
out
push
andl
inc
outsb
das
jbe
add
call
nop
scas
fwait
mov
xor
aaa
aas
out
fidivl
sti
dec
mov
je
sub
push
jo
jne
das
jns
popa
cwtl
nop
gs
mov
mov
dec
cmp
test
fsubs
cmpb
mov
xchg
ja
stos
sti
fiadds
nop
jno
lods
and
and
mov
sbbl
ljmp
adcb
add
mov
ja
daa
bound
cld
xchg
outsb
inc
pop
jne
lods
loop
or
out
and
negb
in
lds
mov
sti
dec
mov
jle
inc
cmpsl
js
or
adc
sarl
fisttps
cli
xchg
and
mov
testb
sbb
ret
xlat
dec
aam
push
int
std
lret
mov
mov
push
sub
addr16
push
sbb
xchg
fbld
cmp
and
sbb
mov
dec
cmpsb
add
fistps
ss
into
cmp
imul
scas
mov
add
jle
in
mov
mov
movsl
hlt
jecxz
cltd
xchg
orb
cld
stc
out
dec
ret
inc
add
pop
jl
dec
xlat
push
test
push
lahf
pop
dec
push
stos
pop
popa
daa
es
fmull
fisubl
adc
movsb
stc
mov
rcll
in
mov
mov
dec
imul
push
mov
fs
or
jle
dec
in
ja
xchg
icebp
jne
bound
div
jecxz
lods
dec
xor
or
or
mov
imul
imul
int
adc
les
and
sub
inc
jl
rcl
or
and
and
fprem1
push
or
je
daa
xchg
scas
bound
sub
mov
inc
sbb
repz
orl
jg
bound
or
push
fistl
xorb
mov
add
cmc
inc
jmp
dec
dec
das
mov
push
cmp
popa
imul
popf
inc
and
sahf
popa
and
jg
cmpl
xchg
xorb
jl
push
mov
or
popa
xlat
or
nop
pop
in
stc
sarl
mov
sbb
inc
fsubrl
add
loope
jno
xlat
and
loop
push
sub
shlb
incl
call
push
leave
push
and
lcall
mov
cmp
sbb
xor
fs
inc
jmp
or
loope
cpuid
or
ja
sbb
pop
add
pop
test
xchg
xlat
data16
bound
fistps
dec
push
jae
in
push
outsb
out
stos
adcl
loopne
cmp
es
mov
jb
pop
pop
xchg
loop
bound
sub
pusha
cwtl
jge
stc
into
outsl
lret
lahf
in
push
pop
insb
dec
test
fs
or
mov
lahf
lds
cmc
les
in
cli
sahf
rorb
mov
mov
in
mov
push
popa
push
dec
add
adc
mov
xchg
das
cmc
testb
scas
dec
clc
sahf
imul
xor
test
in
adc
pop
xchg
xchg
mov
pop
sub
push
and
pop
dec
push
lea
sbb
and
repz
icebp
sti
mov
mov
add
pop
loopne
mov
or
sub
mov
pop
dec
ds
xchg
inc
ret
cmp
inc
and
jo
pop
adc
adc
push
or
fwait
mov
sub
pop
push
sbb
mov
mov
lods
dec
xor
inc
into
js
xchg
cmp
jns
in
ds
adc
fs
sbb
fbstp
shll
jmp
cs
xchg
mov
jl
jno
fistps
int3
inc
out
rorb
pop
push
sub
scas
fnstcw
loop
or
add
xor
push
mov
or
dec
aas
xor
test
cmp
xchg
testl
adc
stc
movsb
js
pop
pop
xchg
sub
flds
int3
xorb
push
sahf
jae
and
xor
jl
sbb
dec
xchg
pop
stc
or
pop
addr16
sbb
xchg
cmp
subb
dec
mov
xorl
out
int
sub
pop
jecxz
add
es
or
sbb
iret
stc
imul
pop
rorl
jmp
adc
add
dec
int3
add
and
and
out
daa
lahf
push
push
inc
xor
adc
sbb
scas
sbb
lods
and
inc
mov
or
and
jge
fnstsw
lea
pop
cmp
dec
add
adc
inc
test
jb
rcll
mov
xor
push
xor
sub
and
push
adc
mov
stos
fisubrs
nop
push
sub
mov
shrl
mov
and
fs
and
dec
lds
hlt
arpl
dec
sbb
aas
pop
jo
int
and
into
fucomip
icebp
clc
dec
mov
leave
mov
js
mov
and
pop
inc
sbbl
mov
add
push
int3
or
cmpsb
rorl
ljmp
repnz
rcl
jb
push
xchg
pop
arpl
decb
jl
add
cltd
or
insl
nop
in
mov
sar
pop
nop
jno
fst
cmp
xor
mov
into
inc
pop
sub
sbb
mov
sarl
lret
push
pop
je
sarl
cmp
or
cmp
push
inc
add
push
adc
mov
loopne
je
mov
out
stos
je
push
insb
inc
cmp
cs
mov
rcl
xchg
mov
push
aad
jmp
imul
mov
stos
mov
xor
hlt
add
fwait
hlt
lret
xlat
pop
fistl
out
lods
cmp
leave
jmp
loop
xchg
or
test
pop
loop
inc
mov
jmp
out
mov
xor
gs
lret
inc
les
pop
cltd
or
repnz
add
imul
lods
xchg
and
cmc
icebp
cmpsl
xchg
jmp
pushf
aas
jns
lds
lods
push
aaa
into
adc
or
out
mov
pop
iret
cmp
test
in
push
mov
mov
test
mov
jae
imul
inc
mov
mov
mov
mov
or
jb
ss
push
ss
lea
dec
daa
mov
arpl
arpl
ret
fs
movsb
lock
jg
outsl
std
mov
adc
add
roll
add
nop
jbe
lods
push
push
test
sbb
aad
or
notb
and
insl
mov
repz
jno
xchg
xor
adc
test
sti
mov
xchg
add
mov
pop
sti
dec
test
lret
adc
push
out
or
rcrl
shl
mov
in
xor
dec
popf
add
jle
sarb
xchg
jg
arpl
jnp
push
dec
iret
lock
add
in
xchg
stc
fisttps
xor
lock
mov
inc
add
iret
adc
xchg
test
mov
adcb
scas
mov
jb,pn
out
jo
movsb
in
dec
je
cmpsb
in
je
or
xor
rclb
sub
pop
nopl
test
jp
mov
mov
and
pop
xchg
sub
aaa
xor
pop
add
xor
push
sbb
and
and
pop
shl
mov
jmp
sub
mov
and
call
xor
cmp
xchg
test
cmpsl
in
sub
fidivs
out
inc
sarb
cmp
std
dec
pop
rorb
in
shll
dec
and
inc
and
enter
shl
inc
pop
rclb
dec
sub
movsl
jbe
adc
dec
cli
movsb
and
fisttpll
push
push
inc
jae
and
int3
and
fbld
mov
ljmp
je
mov
aad
mov
call
jno
add
lret
and
push
std
dec
out
or
fxch
repnz
outsl
xor
and
push
xchg
push
pop
push
cmp
mov
js
lds
lret
inc
test
mov
lret
inc
aam
test
or
stc
lods
in
cltd
dec
cmp
mov
xchg
es
mov
mov
je
xorl
cmpsb
inc
sub
test
adc
in
xor
ljmp
pop
in
mov
pop
aam
xchg
dec
xchg
scas
insb
aaa
pop
cs
adc
jle
aad
leave
lahf
sar
fisubrl
pop
stos
dec
jb
and
roll
jno
mov
mov
push
ret
hlt
hlt
inc
or
test
inc
jno
inc
movsl
negb
push
cmp
cmp
xchg
std
fwait
mov
fdivr
jl
xor
cltd
std
sbb
xchg
int
inc
rorl
iret
js
add
inc
in
or
push
jle
jecxz
sbb
or
int
xor
xorl
out
push
cmp
push
fiadds
cmp
stos
xlat
mov
out
into
cs
xchg
mov
xchg
daa
daa
or
call
jb
and
mov
hlt
mov
pop
gs
and
mov
push
cmp
lea
xchg
mov
xor
cmp
lret
in
dec
andb
popf
jmp
fdivr
jle
enter
add
iret
add
aas
xlat
jo
push
lds
pop
jae
xor
and
scas
adc
pop
inc
mov
cmpsb
mov
ss
xrelease
ss
jp
cmpsl
lods
lahf
test
or
idiv
xor
mov
sbb
cmc
cmp
in
pop
or
jge
mov
pop
push
pop
sarl
mov
rcl
aad
dec
mov
out
jge
pop
cli
incl
insl
pop
adc
adc
cmpl
insb
cmpsl
push
xchg
daa
mov
xor
addr16
sbb
and
add
mov
push
xchg
daa
call
fstpl
into
shll
addr16
int
gs
ds
test
arpl
ret
movsb
icebp
mov
dec
mov
leave
shrb
pop
pop
fucomp
pop
pop
fwait
and
ret
into
jne
fsubs
jnp
mov
sub
or
shrl
push
pop
cltd
lods
adc
jl
rcl
test
mov
rcrl
aam
in
ljmp
xor
movsb
test
shlb
cwtl
jb
add
or
inc
jmp
xchg
lcall
andb
mov
lods
punpckldq
fs
das
push
test
loopne
mov
push
cmpsl
out
addl
inc
add
mov
push
call
dec
sbb
cmpb
sub
sahf
push
mov
scas
add
sbb
test
and
jmp
mov
sar
or
mov
insl
sbb
sub
test
inc
pop
mov
pop
jl
adc
pop
and
mov
hlt
dec
mov
ficompl
jle
sbb
rclb
into
cltd
jns
pushf
jle
jno
test
dec
inc
sbb
pop
cmp
cmpsb
int
mov
fidivrs
xchg
lock
cli
mov
and
cli
pop
in
cld
rcrb
sbb
cli
cs
or
inc
mov
mov
aad
cmpb
add
loope
fwait
movsb
mov
pop
inc
arpl
mov
xchg
sti
cltd
js
jne
adc
cmp
rol
sbb
icebp
pop
cmp
add
orb
and
sbb
add
les
scas
cmc
int
xchg
mov
cmpsw
push
xchg
sub
pop
aam
xchg
rcll
ret
and
fdivl
mov
insb
ljmp
rcl
pop
sub
xor
mov
and
hlt
pop
out
cli
ret
int
adc
xor
in
data16
xor
mov
sbb
add
popa
pushf
xchg
xor
pop
xor
adc
ret
aam
ret
rcr
pusha
int3
stc
jbe
int3
das
sbb
lret
ljmp
clc
movsl
je
push
das
loop
bswap
xchg
inc
andl
loop,pn
inc
mov
push
jb
mov
pop
or
clc
push
sub
imul
dec
iret
jp
lods
add
mov
mov
or
xchg
test
imul
jge
sub
mov
ja
aas
pop
cld
out
cs
int
and
pop
jmp
daa
sub
repnz
hlt
call
jno
adc
jle
lods
xor
xchg
rorl
ret
bnd
inc
xchg
std
into
push
jb
outsl
push
mov
lret
sarl
push
add
cmp
and
les
out
pop
mov
mov
outsb
push
lcall
sbb
roll
pop
movb
dec
jecxz,pt
and
cs
pusha
jno
mov
inc
mov
mov
pop
or
sbb
daa
out
outsb
mov
aas
or
sbb
mov
out
lds
ss
stos
pop
ss
js
adc
out
insl
rcrb
add
xor
mov
pop
cli
insl
xchg
sarl
adc
fisubrl
cltd
pop
and
sti
cld
dec
mov
xchg
push
cwtl
xlat
cmp
jg
dec
orl
incb
xor
ss
jp
add
xchg
adc
loop
into
mov
jg
shll
es
in
cmc
push
idivb
push
jne
in
mov
movl
std
shll
rorb
in
lcall
imul
mov
jg
jno
cmc
push
outsb
xchg
mov
inc
icebp
aas
jle
push
mov
cli
fiaddl
push
sub
outsl
sbb
in
jb
stc
push
popf
or
scas
adc
leave
cli
or
mov
mov
xchg
lret
idiv
mov
test
pop
inc
test
cmpb
push
pop
mov
into
dec
ds
sbb
cmp
push
push
out
sahf
into
jl
dec
jae
xor
xor
and
cmp
mov
mov
adc
mov
lret
xchg
ret
mov
lahf
mov
sbb
andb
out
arpl
sub
add
mov
bound
leave
or
xchg
stos
pop
insb
cld
repz
mov
inc
and
mov
ljmp
jle
mov
imul
mov
mov
outsl
xchg
outsb
iret
mov
adc
xchg
add
int3
popf
outsl
or
ja
dec
mov
adc
add
loopne
fmull
sbb
cmp
je
cs
pop
or
js
mov
pop
lds
sbb
or
push
pop
aad
xor
xorb
rcrb
stos
ss
mov
push
icebp
sbb
sub
jno
mov
lock
jl
rorb
lahf
push
push
and
hlt
imul
xchg
mov
stc
sub
arpl
notl
push
fiadds
ret
and
lds
ds
inc
pop
mov
pop
lods
inc
loop
inc
jmp
addr16
imul
mov
pop
adc
ljmp
insl
dec
mov
inc
in
rclb
or
stos
sysret
inc
ss
mov
and
rcrl
push
xlat
jl
leave
cld
movl
fnstsw
pop
sub
cmpsb
lret
icebp
fwait
lahf
or
mov
repnz
mov
orb
xlat
lret
mov
xor
insb
rcrl
push
adc
lcall
sub
ret
imul
adc
mov
es
stos
or
mov
lods
popa
and
xchg
arpl
push
jo
or
dec
add
lret
inc
sub
rcrb
js
inc
dec
pop
xor
lods
call
nop
mov
jl
dec
stos
shlb
push
imul
inc
insb
mov
mov
sub
jns
aam
les
shll
dec
mov
cld
repz
fadd
mov
dec
adc
int3
in
sti
cmp
loop
and
jecxz
mov
lock
int3
xchg
cmp
aam
and
inc
xor
call
adc
cmp
push
loopne
mov
in
pop
pushf
dec
lcall
jg
outsl
insb
imul
leave
xor
xchg
cmpsl
aaa
popf
and
dec
xchg
mov
lcall
mov
dec
outsb
cmp
cmc
adc
mov
xor
add
pop
cmp
out
mov
inc
xchg
pcmpgtd
sub
adc
cwtl
xchg
data16
popa
je
or
cld
push
inc
jg
loop
movl
pusha
xor
fmull
sbb
out
lcall
adc
outsb
mov
movsl
xor
loop
jp
jno
iret
push
arpl
xor
int
cmpl
pushf
les
aam
xor
imul
push
lahf
lcall
outsb
pop
shll
leave
adc
and
pop
sbb
push
mov
sbb
inc
xchg
cmpl
sub
pop
cmp
push
in
lea
into
adc
inc
sub
test
stc
xchg
jnp
js
cmp
in
push
sub
out
jbe
sahf
mov
jnp
rolb
mov
les
lret
pop
mov
jmp
fsubrl
dec
arpl
lods
arpl
mov
aam
loop
jg
mov
jbe
ss
sub
nop
call
add
mov
les
je
int
push
xchg
jge
xor
push
or
lahf
jle
insb
inc
in
cmpsl
fcom
enter
cmpsb
and
stos
mov
out
xor
mov
sub
mov
sub
adc
sub
loopne
sub
les
cmpsl
fldl
ss
es
pop
addr16
fimull
mov
aas
and
int3
dec
icebp
out
in
ret
add
loop
jp
jo
xlat
and
xchg
jnp
inc
push
sahf
test
mov
mov
push
mov
sbb
bound
addb
xchg
sub
jmp
or
icebp
bound
inc
jbe
xor
or
sbb
outsb
pop
or
xchg
rcll
jb
lret
jno
or
jns
xor
mov
inc
mov
rol
cmp
sarb
pop
pop
jmp
xlat
scas
ss
out
in
aas
test
jbe
or
jo
jns
dec
push
stos
add
cmc
out
push
xchg
outsl
push
test
arpl
sbb
lods
pop
in
aas
sub
iret
fs
inc
lods
fs
dec
test
sub
mov
fldt
test
icebp
sub
jb
xor
xor
xchg
lock
out
push
arpl
popf
sbb
stos
jo
inc
int
push
test
popa
adc
int3
loop
data16
roll
daa
jbe
ret
xchg
std
dec
xchg
jno
mov
lods
sbb
loope
mov
popf
pop
clc
cwtl
cld
and
jmp
mov
sbb
ja
gs
jae
sub
in
inc
jbe
xlat
push
adc
mov
or
pop
movsb
dec
xchg
adc
sbb
jo
dec
push
repnz
stos
inc
adc
and
mov
mov
sbb
out
lahf
and
or
inc
out
mov
push
sub
cmc
clc
bound
dec
mov
cmp
sub
call
lock
inc
stos
add
lret
sbb
stos
incl
fildll
inc
sub
sub
test
and
jae
cmp
adc
jmp
lcall
and
inc
mov
adc
cmp
xlat
sbb
xor
lds
xchg
xor
hlt
rclb
push
movlps
arpl
ret
fadd
push
je
push
mov
push
roll
xor
jge
mov
sbbb
ret
or
inc
lahf
bound
jmp
pop
inc
xchg
cmpsl
xchg
or
pop
cmp
das
out
notl
fs
adc
lods
into
push
inc
aas
xor
fistpll
push
dec
adc
jg
sub
cli
push
out
popa
bound
mov
xchg
xchg
sub
pop
xor
insb
adc
or
mov
push
in
pop
inc
in
je
dec
push
out
cmc
out
fisttpll
adc
pop
nop
data16
pop
scas
pop
sub
adc
or
pop
scas
jbe
push
sahf
dec
inc
add
lret
ss
dec
mov
fnstenv
shll
or
sbb
inc
mov
and
in
add
xor
xor
in
outsb
lods
sbb
fidivrs
insl
sub
pop
lret
imulb
insb
inc
xor
daa
add
ret
pop
popa
jmp
nop
jno
and
jne
pop
ficomps
jl
sub
les
adc
sub
enter
out
ja
sbb
mov
pop
pop
lods
push
sahf
cmp
jmp
out
dec
mov
push
sub
call
into
cli
sti
repnz
aad
rolb
outsb
sbb
push
lcall
xor
in
enter
dec
inc
orb
sbb
in
iret
jge
inc
scas
enter
dec
lret
in
jmp
negb
add
fistps
shlb
popa
into
rcrb
lret
and
fists
jmp
xchg
cli
pop
xchg
fstp
push
add
jmp
mov
xchg
or
mov
stos
fdiv
add
inc
dec
sbb
mov
shl
jo
lods
imul
mov
push
pop
aaa
sbb
fwait
into
popf
mov
pop
xlat
imul
adc
mov
je
or
add
dec
ljmp
lcall
imul
jae
xchg
jae
xchg
jo
sub
push
dec
mov
jp
icebp
push
pusha
outsb
dec
sub
mov
and
ror
and
icebp
or
add
mov
pop
cmp
ja
out
dec
sarl
fsubrp
frstor
mov
sbb
sti
sub
imul
push
and
xorl
sub
pop
sbb
sub
push
loopne
sub
and
jno
pop
push
lock
cmp
sbb
add
ljmp
imul
inc
cmp
lods
cmpb
push
ss
and
aad
les
mov
test
mov
pop
xchg
test
sbb
test
in
inc
mov
movsb
in
jbe
fs
cmp
arpl
lods
les
cli
fsts
dec
jl
scas
cld
sbb
ret
sarl
push
imul
pop
lds
fcomps
stc
aad
dec
clc
jmp
jbe
mov
push
decl
fstps
out
jno
push
in
out
scas
push
jg
shll
dec
inc
push
add
frstor
ret
pusha
test
fwait
int
movsb
std
sahf
jno
lods
pop
ja
and
xchg
and
xchg
lahf
les
mov
mov
add
mov
lcall
clc
or
mov
data16
xor
pop
popf
sbb
imul
shlb
fs
pop
imul
dec
out
mov
stos
mov
gs
cmc
pop
push
mov
js
mov
xor
js
fs
mov
xchg
cld
xor
mov
addr16
repnz
lahf
mov
pop
sub
jge
insl
bound
inc
aas
cwtl
enter
sub
xor
xchg
int
inc
test
pop
fcomps
sahf
jns
fwait
xor
lret
push
inc
mov
les
clc
inc
mov
push
dec
xor
insb
es
xor
fists
mov
pushf
into
mov
push
jecxz
mov
enter
movsl
mov
rcrb
sbb
loopne
test
fneni(8087
bound
insb
push
shll
push
jnp
cmpb
sub
fs
lods
ds
out
roll
loope
push
repnz
sub
dec
and
insl
jecxz
rorb
cmp
repnz
dec
adc
mov
lret
and
pop
mov
into
pop
pushf
ja
add
das
pop
lds
or
add
fwait
cli
jns
pushf
sbb
sub
mov
push
add
repz
movl
sub
inc
lahf
arpl
mov
cld
sub
enter
push
aad
dec
sbb
lahf
push
adc
int
enter
inc
arpl
lahf
fs
test
mulb
mov
cmp
inc
loope
loop
inc
or
aam
mov
xchg
es
pop
pop
sbb
xchg
mov
arpl
aaa
jns
push
mov
push
loopne
cmp
mov
inc
pusha
fsubrs
scas
or
or
push
pop
sti
jo
hlt
movsl
pop
lret
and
mov
and
jg
in
movl
in
iret
jbe
xchg
jno
rcll
loope
mov
test
or
xchg
cmc
outsb
mov
and
xor
jae
iret
fdivrl
mov
mov
pop
mov
inc
fistpll
sub
adc
push
push
mov
dec
clc
popf
xlat
ror
std
mov
pop
xor
inc
imul
cmp
mov
outsl
cmp
xchg
add
out
pop
and
jmp
and
push
leave
push
cs
icebp
in
testb
cmova
push
mov
addl
cmp
xor
adc
sub
pushf
pop
cs
rcl
dec
movsb
cmp
push
mov
sti
mov
dec
cmp
dec
in
sarb
hlt
inc
out
xchg
scas
jnp
cmpsl
in
cmp
rorl
xchg
sbb
popa
adc
add
pop
xchg
xor
sub
push
fnsave
outsb
push
fisubs
pop
int
xor
dec
sub
lock
shlb
pop
fbld
sti
aas
xchg
arpl
ss
leave
and
outsl
cmp
sub
insl
jl
imul
push
and
repnz
cmpsb
cmp
dec
ljmp
xlat
jae
jl
dec
inc
mov
mov
xchg
sbb
loopne
jmp
lods
cmpsl
insb
movsl
xor
test
subb
sbb
xlat
imull
push
xor
mov
mov
cld
mov
int3
fbld
lret
add
add
sbb
and
jp
fdivl
adc
mov
fmuls
pop
repz
xor
pusha
in
push
out
outsb
pop
sub
cmp
testb
mov
outsb
aas
xchg
jns
out
cmc
cmp
jae
lea
push
sbb
movsb
fwait
sbb
lret
negb
sbb
in
cmp
cmp
into
and
pop
push
sub
mov
jg
sar
int3
js
test
fdivl
jg
or
in
ljmp
ret
stc
inc
jns
pop
sub
adc
push
shrb
movsl
pop
or
cld
push
mov
push
imul
push
jmp
outsb
pshufw
sbb
jp
xchg
sar
pusha
push
pop
sub
xchg
or
mov
adc
and
or
loopne
lret
push
xor
out
dec
jp
jne
and
lret
xchg
xchg
rclb
jmp
pop
imul
or
push
ja
inc
aad
mov
mov
cmp
aam
adc
repz
orb
mov
mov
mov
lods
andb
ljmp
mov
and
popf
cwtl
testb
cmpsb
fcomps
mov
xor
in
sub
push
aad
mov
or
inc
push
prefetch
or
fdivrs
sub
push
mov
sarl
sti
dec
mov
sub
out
imul
sbb
jne
lahf
icebp
adc
aaa
sbb
je
dec
add
out
out
fdivrl
mov
mov
test
or
test
inc
mov
cli
jb
push
push
clc
int
aaa
out
imul
adc
outsb
bound
jne
push
push
adc
in
jle
lcall
out
pop
or
in
popa
mov
dec
shrl
mov
pop
add
xchg
rcr
int3
daa
add
fisttpl
push
sbb
aad
push
xchg
in
out
ffreep
mov
adc
push
push
xor
or
xlat
mov
add
pop
inc
test
pushf
cmp
add
out
push
jo
lods
mov
insl
pop
sub
ljmp
xchg
push
cmp
adc
jecxz
outsl
dec
mov
outsl
out
out
push
cld
in
es
mov
or
scas
xchg
stos
test
jge
loopne
push
cmpsb
mov
lret
xor
xchg
das
sbb
push
or
mov
mov
aad
popa
add
xor
loop
inc
or
ret
cmp
lods
fs
push
icebp
xchg
cmp
pop
lahf
mov
mov
lods
jnp
push
fildll
sti
mov
cmp
mov
dec
xchg
stos
addr16
mov
test
pop
stos
sub
int
mov
mov
xor
cmp
insl
into
xchg
stc
xchg
aam
xchg
push
push
pop
aas
in
subb
imul
int
outsl
jbe
cli
std
mov
ja
push
and
xor
andb
pushf
cwtl
inc
lds
lods
in
or
adcl
pop
shll
in
aas
xor
and
test
sti
sbb
loop
inc
xchg
lret
mov
les
jb
xchg
test
mov
xor
clc
test
push
and
aam
mov
jge
sahf
pop
dec
pop
popa
ss
inc
xchg
mov
addr16
xor
jmp
imul
xor
rcrl
mov
and
cmp
jmp
mov
pop
sub
pop
cmp
jne
popf
jns
test
mov
pop
shrb
xor
xorb
test
mov
jg
ror
shlb
out
add
out
repz
dec
idivl
out
loopne
fwait
and
int
and
inc
or
orb
mov
inc
pop
push
aad
cmpsl
inc
push
dec
push
jle
inc
popf
out
jae
dec
insl
xchg
xchg
inc
mov
mov
xchg
xchg
push
or
sbb
jbe
inc
mov
or
lds
loope
in
mov
push
fcom
mov
jbe
adc
cmp
in
imul
imul
cmp
jecxz
sub
jl
outsb
fadd
mov
cs
jno
dec
addr16
add
pushf
repnz
and
pop
out
jo
and
fisttpll
mov
pop
clc
xor
adc
fisubrs
jo
leave
in
mov
pushf
inc
ljmp
shl
xor
mov
push
jmp
mov
psubsw
xadd
lahf
aaa
sbb
cwtl
add
enter
or
mov
enter
or
rorb
dec
inc
lods
jmp
inc
ljmp
inc
push
jp
mov
mov
outsl
pusha
fwait
push
scas
arpl
dec
add
pop
adc
jl
mov
add
mov
xchg
outsl
push
jecxz
push
dec
xor
jns
aad
scas
lods
adc
gs
stos
data16
stc
test
dec
sahf
mov
rcrl
test
jge
and
repz
scas
adc
or
movsb
std
dec
in
pop
mov
inc
shr
cmp
inc
ja
add
pushf
sub
jle
enter
push
mov
ret
mov
sbb
pop
movsl
out
loope
rorb
xchg
out
cmp
ret
imul
inc
add
pop
mov
ret
mov
pop
psrld
in
jp
or
xor
pop
cmc
push
pop
loop
or
inc
sub
fdivrl
jecxz
dec
ss
sbb
mov
push
fcmovnb
push
xor
xchg
clc
mov
xchg
ret
xchg
or
loopne
aaa
mov
mov
xchg
sub
jbe
adc
or
dec
clc
pop
cmp
and
iret
adc
sbb
xor
fsubrs
mov
stc
sbb
push
xor
sub
outsb
jno
pop
orb
xchg
push
mov
bound
ja
inc
ficompl
imul
insb
fnsave
dec
movsl
gs
pop
imul
lods
or
rcll
lds
xlat
mov
cli
mov
out
jmp
xchg
add
jnp
push
jno
jne
int3
sub
repz
pop
aam
je
dec
mov
pop
jmp
sti
push
subl
mov
dec
test
pop
les
fdivrl
shrl
or
jmp
lock
xchg
mov
pop
push
add
std
or
mov
ret
jbe
mov
sarl
jb
stc
lret
cmp
subb
xor
mov
lcall
xchg
fwait
push
loop
add
xchg
out
push
push
in
jae
iret
neg
mov
cmp
inc
pop
xlat
inc
rcl
or
in
adc
jge
inc
ljmp
dec
iret
scas
adc
xchg
fists
cmpsb
sahf
adc
ds
sbb
cmp
cmp
push
sub
or
enter
call
aas
loop
jns
mov
cmpsl
inc
fyl2x
fwait
cmp
mov
adc
pop
ret
adc
sub
inc
fiaddl
fidivs
jge
mov
mov
popf
add
and
aam
push
popa
dec
iret
ds
cmpsb
pusha
lds
mov
test
add
scas
push
mov
cli
das
xor
add
roll
mov
sub
adc
inc
jle
pushf
ds
dec
mov
push
add
jo
sahf
or
popl
inc
cli
dec
jns
enter
test
xchg
fnsetpm(287
clc
pop
ffreep
gs
lock
jmp
mov
ret
pusha
xchg
and
sbb
xor
addb
pop
push
les
enter
in
cmp
sahf
cmp
xor
addr16
das
inc
push
xor
pushf
repnz
ss
xchg
mov
shll
mov
inc
mov
imul
jecxz
sub
adc
and
loope
pop
sbb
fs
out
and
pop
sbb
xchg
push
cmp
in
orl
push
dec
mov
rcrb
pop
outsb
out
imul
sub
mov
popa
rcll
cmp
push
ret
cmp
pop
add
mov
mov
inc
rcrb
aaa
mov
push
fcoml
xorl
xchg
shll
aam
inc
or
scas
jns
add
test
fs
pop
out
into
sbb
fbstp
loopne
rcrb
jle
mov
cmpsb
adc
jne
sbb
push
adc
js,pt
mov
inc
ret
and
or
mov
and
pop
stos
pushf
dec
fbstp
sbb
cltd
mov
sti
cmp
ss
push
stos
pop
mov
mov
sbb
xchg
in
loopne
mov
or
push
nop
push
dec
jo
imul
out
pop
pop
sub
xchg
mov
into
and
push
repz
push
daa
idivl
dec
mov
push
xchg
xchg
push
hlt
jbe
test
push
sbb
cmp
stc
sub
inc
rcrl
aas
cmp
and
xchg
mov
and
sbb
aas
jmp
call
sbb
cmc
mov
mov
mov
loope
sahf
test
pop
sub
pop
or
repnz
adc
xor
jp
cwtl
repz
sbb
pop
or
xor
cmp
inc
je
daa
inc
mov
cmp
mov
cmp
adc
rcl
aaa
pop
inc
loopne
int
ret
dec
cmp
sub
add
clc
mov
inc
gs
test
cmp
cmp
mov
scas
or
and
push
xchg
lea
sbb
cmc
mov
sahf
bound
stos
fbstp
mov
jge
jmp
leave
addr16
aam
lock
xchg
in
cmpsb
cli
xchg
and
dec
imul
sub
inc
xchg
and
mov
add
pop
lods
or
aam
movsl
adc
xchg
or
adc
mov
daa
cmp
cli
jge
xchg
popl
cmpsl
add
dec
xorl
imul
int3
cmp
xchg
aaa
xor
aam
call
push
cmp
pop
int
dec
cltd
mov
sub
adc
xlat
stos
mov
aad
or
sbbb
cs
push
in
mov
pop
inc
xchg
std
push
jmp
sub
inc
xchg
adc
push
jg
test
and
jle
imul
repnz
std
push
or
enter
out
adc
or
dec
push
sbb
inc
pop
mov
test
and
jge
repz
addr16
and
imul
add
sbb
push
insb
int
sbb
dec
mov
xorl
cmpsb
js
clc
inc
cmp
push
sub
js
subb
or
inc
cli
jecxz
sub
nop
cmp
outsb
aaa
jle
out
fwait
mov
in
push
sbb
dec
popf
pop
das
or
shl
xor
lcall
mov
fldcw
sub
fbstp
imul
aas
jne
ja
flds
loopne
mov
xchg
out
iret
aad
push
jecxz
cmpsl
imul
xchg
lea
pushf
test
push
pop
cmp
fsubrl
push
jp
insl
jmp
push
or
ja
xor
or
fsubrl
jbe
in
ret
loope
out
clc
sarb
or
mov
inc
out
hlt
test
mov
and
push
xor
mov
mov
dec
pop
sbb
xchg
sub
fmuls
mov
jmp
xchg
mov
roll
cld
inc
xor
xchg
fmuls
push
sbb
mov
jns
jb
dec
daa
push
int
mov
xchg
jno
jge
pop
call
add
jg
gs
adc
pop
push
mov
or
lcall
fadd
lods
mov
ret
and
jle
mov
cmp
lods
jo
jp
jnp
jecxz
cmpsb
shlb
out
cld
rcr
mov
sti
ret
fistpl
lds
or
call
dec
sbb
dec
jle
iret
or
aad
mov
dec
inc
movl
nop
cmp
add
mov
and
adc
and
mov
pop
out
mov
lea
aam
repz
and
lds
jne
and
rcrl
lea
pop
add
push
cs
movsl
lahf
fistps
add
jecxz
les
xor
dec
mov
in
lds
lods
bound
push
cmp
push
push
xor
fs
pushf
pop
xor
cmc
mov
mov
sbb
pop
fidivrl
mov
rcrl
add
out
xchg
lds
mov
and
jmp
lock
sbb
popf
loopne
mov
stos
dec
ficompl
adcl
add
mov
dec
loopne
jmp
mov
mov
dec
scas
ret
scas
insl
or
dec
mov
add
sub
fsubs
in
dec
xlat
push
sbb
mov
jmp
push
push
inc
sbb
ret
test
sbb
test
cltd
daa
jle
sbb
xor
shlb
or
dec
jl
nop
mov
push
pop
add
dec
cmp
addr16
cld
adc
sub
jle
or
push
sub
cwtl
scas
push
dec
add
dec
push
and
loopne
push
dec
test
xor
in
adc
dec
lea
clc
fimull
int3
sub
icebp
adc
push
xor
repz
cmp
es
mov
pop
pop
jle
jnp
fdiv
dec
dec
jb
outsl
nop
mov
test
pop
leave
je
cmp
aaa
xchg
adc
jns
and
and
sbb
adc
mov
outsl
or
stos
xor
outsb
inc
cld
fidivrs
mov
cmpb
fcom
push
sub
insb
and
imul
out
sub
arpl
lcall
jo
adc
xchg
pop
cmp
in
xchg
enter
push
lea
sbb
pop
push
insb
nop
mov
je
sahf
xorl
leave
pop
lret
inc
leave
aam
and
idivb
jl
imul
mov
push
fsub
pop
cmp
bound
add
mov
lret
inc
dec
or
int
xchg
sbb
xchg
xchg
mov
rclb
ficoml
es
notl
fs
xlat
or
lods
add
mov
je
pop
xor
movsl
jbe
xchg
push
fiaddl
jle
xchg
add
test
jg
imul
adc
push
mov
inc
jbe
mov
sbb
xor
sub
cmp
or
out
loope
adc
mov
test
in
les
cmp
fcomip
inc
cmp
mov
inc
add
imul
outsl
ss
or
mov
mov
push
jne
mov
in
imul
push
pop
xchg
xor
jns
lret
inc
sub
jecxz
xor
push
cs
aad
sbb
xchg
fwait
cmp
cmpb
subl
xlat
test
cmp
mov
fadd
jp
pop
mov
xchg
sub
lcall
mov
jne
insl
sbb
mov
fdivs
or
fildll
lds
xchg
repz
jp
int
and
sbb
mov
inc
ja
mov
dec
nop
mov
sub
lods
loop
imul
and
pop
sub
rcrl
je
mov
imul
adc
push
divb
mov
inc
movsb
test
test
sub
aam
test
cmpsl
stc
gs
cmp
mov
xchg
cmc
mov
call
enter
mov
adc
sub
sub
add
rcrl
imul
mov
cs
ds
sarl
fbstp
call
pop
dec
sub
xor
or
mov
pop
sub
push
lret
and
std
lret
pop
mov
lahf
stos
sub
enter
stc
mov
add
dec
popa
lahf
inc
cwtl
inc
fstpt
jmp
aam
out
xchg
outsb
jmp
jb
jecxz
call
push
xchg
xchg
push
aam
fldenv
lock
ds
loopne
test
jb
jbe
mov
stos
int
int3
and
lahf
cmp
scas
loop
test
xor
push
aam
pop
ljmp
inc
mov
jo
and
or
popf
inc
insl
adcl
je
imul
pop
data16
ret
jl
outsl
mov
or
sbb
dec
hlt
push
push
mov
int
adc
test
aam
in
loop
cmp
pop
leave
xchg
inc
mov
enter
or
int3
jg
jbe
insb
out
das
and
stos
push
test
cmp
xchg
push
es
jb
pushf
ret
push
cs
imul
push
mov
adc
jnp
mov
leave
add
rcrl
aad
sti
addr16
lahf
orb
dec
sbb
pop
inc
ficompl
leave
ljmp
or
push
popa
outsb
jge
mov
lock
pop
add
iret
mov
and
dec
push
push
popa
repnz
jecxz
sti
inc
mov
jp
xor
dec
lret
push
ja
aam
aad
push
into
loope
add
test
ljmp
xor
add
popl
lahf
out
jl,pt
icebp
mov
pop
lahf
scas
sub
xchg
adc
cld
xor
fcmovbe
add
push
or
iret
mov
mov
movsl
stos
testl
fists
fwait
mov
sbb
mov
mov
mov
out
push
outsl
std
in
outsb
mov
cmpsb
push
std
testb
sub
cmp
mov
loopne
bound
aaa
fidivrl
lods
les
or
mov
lods
insb
imul
push
loop
sub
push
mov
push
add
dec
cmpsb
into
add
call
add
fcmovb
fdiv
fists
inc
push
jl
dec
sbb
rcl
xor
or
test
pop
dec
xchg
pushf
and
mov
pushf
insb
outsb
xchg
fdivrs
add
xchg
pop
pop
call
jmp
test
and
add
add
addr16
icebp
sub
xchg
cmc
fs
mov
push
xchg
dec
in
scas
xor
test
lret
mov
and
sar
xor
xor
and
cmp
add
cmp
and
adc
stos
iret
mov
lret
jle
dec
and
and
pushf
mull
cli
pop
ljmp
add
dec
dec
imul
dec
test
sbb
movsl
pop
enter
xchg
dec
xchg
pop
fnsave
test
iret
mov
xchg
jle
jbe
add
negl
popa
out
sbb
mov
xlat
call
mov
pusha
fdiv
adc
jae
push
popa
mov
add
cmp
push
pop
xor
scas
adc
cmp
lea
and
into
push
sub
dec
xchg
aas
movsl
jmp
cmp
lea
push
sbb
lods
ret
push
sbb
and
cmp
sbb
out
add
lret
push
xchg
popf
mov
xor
gs
dec
test
push
rcrb
rcrb
jp
inc
xchg
push
fisttps
xor
mov
cmpsb
push
fisttpl
repnz
outsl
sub
enter
mov
inc
lret
cmp
xlat
or
mov
cmpsb
rorb
xchg
es
cmp
out
inc
mov
cmp
pushf
enter
fnstcw
pop
jg
es
adcl
xchg
mov
mov
xor
ret
cmp
mov
icebp
mov
in
dec
mov
or
push
sarb
xchg
and
lds
jns
push
adc
pop
shlb
imul
aaa
xor
xchg
xor
inc
mov
dec
add
mov
fucomip
fsubrl
jmp
inc
jne
push
imul
adc
out
inc
sti
loop
cmp
in
fildll
add
xchg
enter
xor
dec
mov
pusha
and
int3
xor
jp
jl
ret
sub
imul
ljmp
mov
das
jne
jp
daa
sbb
sbb
pop
push
out
fisubl
scas
add
jae
or
sub
xchg
pop
jle
jmp
xor
mov
mov
pop
test
ja
das
push
ljmp
mov
cmp
jp
dec
sti
or
imul
scas
out
xchg
mov
and
sarl
push
and
stc
cmpsb
pushl
aad
iret
fisubs
jb
mov
in
fcomps
inc
ret
icebp
jle
mov
or
inc
dec
jns
sub
mov
je
out
stos
cmp
mov
cmpsl
sub
lods
int
int3
lret
xchg
call
add
movb
inc
add
xchg
mov
std
test
mov
pop
add
lock
mov
sahf
hlt
adc
push
sub
addr16
ljmp
jl
mov
push
les
sbb
sbb
test
sub
and
dec
aam
out
pop
push
int3
out
ja
lock
xlat
pop
cld
ret
inc
xlat
ret
jg
mov
test
mov
nop
jae
xor
xchg
push
xchg
out
add
popf
xor
adc
repnz
out
mov
in
push
ret
mov
jo
mov
fsubs
inc
jae
adcb
and
arpl
push
ss
out
pop
inc
jle
movsl
cmpsl
cltd
das
insl
mov
clc
adc
leave
out
add
lcall
mov
cwtl
sub
and
jge
in
jno
mov
push
xor
negl
divb
or
cmc
repz
clc
and
movsl
ret
andl
inc
fisttps
imul
insl
adc
mov
pop
dec
lret
sahf
loope
sub
xor
loop
lods
fdivp
xor
xchg
notl
ficomps
sub
mov
insl
fsts
sbb
xchg
xchg
shl
xchg
cmp
aad
pop
pop
je
sbb
fwait
add
inc
out
cmp
dec
xor
shlb
ficoms
or
bound
sahf
das
ret
cmp
mov
lret
or
adc
stos
jmp
rcrb
cmp
adc
fsubrs
dec
lods
icebp
mov
or
or
shrl
mov
pop
mov
das
or
cmp
pushf
jae
das
sub
push
in
jae
cmp
inc
jno
leave
xor
jle
cmp
test
and
rcll
xchg
add
lods
leave
cmp
mov
or
jbe
imul
outsb
or
mov
push
ret
rorb
pop
xchg
mov
pop
add
cmp
add
subl
mov
mov
add
xor
jle
pop
leave
adc
or
outsl
jno
jae
jmp
and
icebp
movsl
lock
sbb
imul
mov
test
adc
jl
jb
and
in
pushf
xor
movsl
sti
gs
adc
xor
out
addl
jp
negl
push
in
push
fdivrl
arpl
push
fistl
ss
mov
xorl
fists
shlb
sub
xor
sbb
jmp
loope
inc
add
dec
movsl
std
ljmp
pop
cmp
mov
mov
ja
xchg
icebp
rolb
push
bound
adc
inc
cmp
xchg
inc
lods
dec
test
sbb
xchg
and
out
ret
call
testl
fndisi(8087
jns
rcrb
inc
jecxz
jecxz
xchg
mov
jo
add
xor
or
test
imul
test
mov
adc
bound
ja
push
mov
lcall
dec
call
cmpsb
stc
adc
add
sbb
jns
cltd
jge
jl
xchg
mov
mov
fcmovb
mov
lods
sub
dec
or
jnp
mov
fildll
les
test
xor
dec
lods
sbb
jns
pop
cmp
test
repz
mov
pop
add
mov
lock
pop
mov
faddp
test
cmc
adcl
cmp
mov
mov
imul
aad
sub
inc
lcall
push
lret
xor
fidivl
push
gs
mov
loope
push
shl
loop
ret
cmpsb
inc
jmp
lods
test
shl
stos
xchg
sub
xchg
rcrb
xchg
mov
cmc
xchg
xor
pop
lock
pop
mull
adc
div
orl
adc
hlt
inc
pushf
xchg
mov
mov
data16
pop
mov
sub
lret
test
adc
shll
cmp
mov
mov
sbb
call
and
inc
and
xchg
loopne
stc
scas
lret
sar
rcrb
mov
sbb
mov
std
mov
cmp
mov
jns
or
xlat
loopne
test
clc
add
add
jp
ljmp
leave
and
push
cmp
push
fwait
and
jmp
push
mov
mov
hlt
ljmp
scas
jmp
in
adc
and
cmp
inc
mov
push
adc
sahf
adc
cld
cmp
lods
movsl
jl
cmp
cmpsb
je
sbbb
dec
jmp
dec
js
mov
shlb
push
push
sbb
sub
test
pop
fcmovnu
stc
rcr
inc
sbb
lock
lods
outsb
loope
mov
mov
pop
sbb
mov
push
std
sbb
nop
lahf
insb
sbb
cmp
xor
addr16
lds
adc
cmc
outsb
jmp
dec
leave
mov
in
xor
ficoml
adc
sarb
push
les
and
faddl
xor
adc
sub
mov
push
jne
insb
jbe
mov
adc
clc
int
call
sbb
pop
leave
cmp
clc
lock
mov
mov
xor
lock
cmp
inc
out
and
mov
hlt
dec
loope
popf
mov
lods
aad
lock
ret
aam
ss
test
xchg
pop
or
lods
loop
jp
jno
int3
into
pop
insb
cltd
push
cwtl
in
xchg
push
add
jl
pushl
jp
cwtl
ja
imull
test
imul
insl
adc
std
pop
loopne
into
sarb
add
and
ret
jmp
xchg
aas
xor
pop
mov
mov
add
cmp
and
out
bound
loope
xchg
adc
movlps
std
or
rcrl
pop
push
dec
mov
push
and
aas
inc
nop
xchg
mov
clc
pushf
xchg
ret
mov
mov
and
shll
idivb
push
ds
dec
push
push
push
mov
push
xchg
lock
clc
jo
cmp
inc
rorb
xor
xlat
push
mov
in
rcrl
mov
rcl
mov
movsb
xlat
insl
adc
lods
lret
rolb
test
es
jo
jb
lret
add
mov
cltd
or
cmp
not
jmp
jmp
imul
arpl
inc
hlt
outsb
xor
push
aas
cli
sub
push
test
nop
inc
repz
mov
ds
or
sbb
out
cmpl
mov
faddl
repnz
pop
mull
mov
test
push
pop
mov
mov
incb
cmp
push
jp
adc
jmp
cmc
movsl
mov
ja
add
lods
out
test
sbb
xrelease
std
push
pop
fwait
dec
mov
ss
scas
mov
inc
ljmp
lds
jp
dec
add
cltd
sub
inc
jge
inc
cltd
in
call
mov
cmpsb
cmp
jp
mov
aad
or
int
cmovno
xor
sahf
leave
pop
shrb
scas
mov
cmp
pop
outsb
cmp
pop
mov
inc
int
and
cmc
bound
sub
call
sbbb
aad
in
push
lock
xor
push
xor
lahf
lcall
mov
push
and
rcrb
lds
xchg
dec
lcall
test
lret
sbb
push
xchg
add
ja
add
adc
adc
jbe
mov
insl
cmp
mov
out
int
fwait
lcall
out
add
sbb
sub
insb
add
xor
push
popl
adc
adc
enter
movsl
push
out
movsb
hlt
push
fcomp
and
push
ljmp
and
mov
scas
push
mov
cwtl
testl
lahf
sbb
out
adcb
imul
push
or
cmp
rcl
mov
mov
in
adc
mov
inc
daa
cmpsb
bound
inc
mov
xor
clc
add
dec
sbb
pusha
sub
adc
sbb
rclb
rcll
mov
hlt
je
scas
repnz
out
repz
mov
cmp
jb
ljmp
test
or
lds
xor
sbb
fwait
sub
or
push
add
dec
sub
fs
int3
add
mov
lock
jle
xchg
cmp
push
adc
xchg
push
push
sub
test
or
mov
mov
jno
std
or
jno
xor
sbb
pop
stc
out
xlat
inc
adc
das
jne
outsb
or
add
adc
cli
mov
push
inc
and
jno
je
sub
xor
inc
or
and
stos
pop
fwait
lods
pop
mov
cmp
leave
sub
jno
adc
adc
fisubl
sbb
mov
xchg
repnz
stos
dec
bound
aas
frstor
les
and
mov
dec
cmc
loopne
int3
mov
mov
scas
mov
xchg
lea
jnp
mov
pop
xor
vmovlps
sbb
imul
inc
cmp
push
cwtl
les
mov
dec
in
or
dec
je
stos
pop
cmp
stos
mov
add
test
cmp
or
sbbl
sbb
mov
push
rclb
inc
sbb
add
mov
cmp
faddl
xchg
iret
ja
jno
test
or
lds
xchg
inc
add
or
imulb
lahf
jg
mov
and
cwtl
enter
aaa
jo
les
call
pop
mov
sub
jb
xor
call
push
ficoms
idivb
movsl
imul
mov
lret
hlt
dec
dec
mov
push
mov
dec
rclb
mov
mov
cmpsl
roll
pop
jnp
incl
jle
or
popf
mov
ret
push
daa
mov
push
aaa
lds
push
mov
lahf
outsb
lods
test
cmpsl
je
mov
cld
pop
cmc
in
repz
in
popf
mov
adc
adc
mov
pop
pop
xor
aad
adc
sbb
dec
dec
dec
out
mov
pop
pop
test
dec
dec
mov
fnstsw
out
lods
in
repz
insb
mov
subb
test
loope
leave
and
fldcw
outsl
dec
push
dec
imul
cmp
cmp
dec
add
jno
pop
mov
inc
push
es
loopne
aaa
cmp
arpl
lahf
or
mov
dec
push
aaa
cwtl
cmc
push
sub
bound
pop
mov
test
mov
repz
cwtl
ss
mov
xchg
call
enter
push
jns
jle
jg
cmc
insl
cmpl
pop
cli
xchg
push
aas
sbb
mov
push
in
mov
jecxz
sbbl
fadd
call
test
outsl
adc
xor
lds
xor
push
rcr
push
push
in
cmp
add
push
lret
pop
or
push
adc
push
mov
iret
adc
mov
rcl
sub
jns
std
andl
cmp
out
icebp
pop
imul
popf
cltd
push
sahf
dec
mov
popa
daa
jecxz
mov
push
mov
loop
rolb
stos
das
sub
push
xchg
fs
mov
std
mov
xchg
movsb
xor
dec
lcall
std
inc
jg
popf
jg
leave
sub
adc
idivl
push
sbb
jo
cmp
jmp
int
int3
adc
pushf
test
outsb
in
or
cmpsb
sbb
outsl
push
xor
jg
dec
sbb
inc
sub
xor
jge
aas
push
in
xlat
out
test
mov
push
popf
jae
movsb
pop
push
mov
dec
ljmp
int
add
sub
negl
pop
imul
pop
aas
test
xlat
mov
hlt
out
mov
xchg
adc
mov
pop
lock
rcrl
out
out
rolb
cmc
xor
and
mov
lcall
mov
push
push
pop
jmp
xchg
mov
les
dec
lahf
out
cli
mov
lret
test
rcrb
cli
call
or
mov
cmp
lret
and
fmulp
push
add
mov
or
in
xor
xchg
sub
arpl
orb
mov
out
inc
push
cmp
les
mov
shrb
les
outsb
cs
jo
jbe
stos
pop
jne
dec
out
and
sbb
jae
and
jae
sbb
andl
cmp
mov
pminub
mov
mov
outsl
scas
and
jbe
addr16
inc
in
lcall
mov
fwait
push
mov
and
mov
dec
ret
test
add
pusha
pop
test
jp
les
sbb
xor
jmp
inc
mov
loope
xchg
or
in
outsb
push
pop
push
fildl
dec
imul
pushl
addr16
jo
mov
cwtl
sub
scas
add
sub
adcb
pop
in
push
add
ret
shrb
test
pop
jb
sbb
xlat
inc
lds
xchg
out
add
xor
imul
inc
incb
mov
add
imul
insl
or
xchg
and
xor
loop
out
cltd
push
maskmovq
testl
notb
sub
mov
int
je
data16
xchg
jge
mov
add
aas
and
cmp
in
jge
jnp
adc
mov
pop
int
cmp
cmpsl
mov
aas
outsb
push
cmp
sahf
add
inc
mov
pop
inc
xchg
inc
adc
test
mov
xchg
aas
std
imul
daa
add
mov
cltd
lods
aaa
sbb
adc
jns
adc
xlat
out
xchg
insb
les
xor
xor
int
sbb
bound
loop
mov
and
xlat
mov
cmp
gs
and
push
lods
lret
test
lds
mov
sub
nop
decb
sub
scas
cmpsb
xrelease
bnd
xchg
mov
fmulp
insb
mov
jp
js
mov
add
cmc
fadd
pushl
testl
rcrb
insl
inc
mov
icebp
jae
push
fstps
imul
xor
jae
jo
pop
mov
jbe
xor
mov
sub
lods
xchg
loop
sub
jne
inc
jl
mov
cltd
xchg
into
inc
mov
xlat
jg
test
inc
cmpsl
sti
fsub
inc
cmp
outsl
cmc
data16
mov
mov
or
arpl
insb
jno
loop
aas
test
ret
das
inc
and
xchg
push
bound
fbstp
mov
in
fiadds
mov
scas
adc
pop
pushf
xchg
sbbb
mov
call
lret
outsl
faddl
xchg
inc
and
aaa
ret
lret
out
imul
sub
sbb
pop
cli
dec
lea
out
testl
outsb
out
jns
or
gs
mov
repnz
sub
cmp
pop
addl
fisttpl
xor
xchg
mov
xor
push
xor
test
rcll
sbb
cmp
xchg
and
aaa
dec
imul
adc
sub
add
and
push
push
lds
mov
loop
push
push
mov
mov
cmpsl
cld
pop
das
add
push
enter
test
dec
hlt
int3
movsb
in
mov
dec
enter
scas
push
outsl
inc
mov
pop
lahf
pushf
xlat
test
mov
adc
lret
xor
inc
fwait
not
hlt
aaa
jo
ret
xor
adc
xchg
dec
jno
add
push
subl
stc
mov
xor
push
popa
xchg
push
into
jl
cmp
cmpsl
cmp
ret
lret
mov
lcall
push
push
jne
test
adc
jns
out
aaa
adc
int
into
lcall
insb
iret
xor
ret
xchg
inc
push
mov
dec
ficoml
jns
and
mov
sub
xor
jbe
cmc
mov
lds
inc
outsb
and
test
outsb
movsb
xor
push
notb
xchg
add
mov
or
xchg
imul
lea
cmp
mov
aaa
push
sbb
fsubs
jnp
or
pop
arpl
fistpll
fidivrs
mov
or
xor
cwtl
jnp
inc
fwait
call
test
add
insb
cltd
jno
lahf
dec
fs
fisubl
cmp
addb
push
pop
and
les
mov
or
call
insl
mov
push
push
mov
dec
pop
pop
push
rcrl
sbb
in
cwtl
fistl
or
out
sub
fucom
arpl
inc
in
cli
shll
aaa
xchg
mov
stc
or
inc
adc
loopne
sub
jg
std
jbe
add
adc
xor
out
xlat
adc
cli
lahf
sbb
imul
ret
mov
imul
xor
adc
bts
mov
mov
daa
iret
out
bound
mov
repz
out
xor
cmpsl
sti
out
outsb
mov
adc
mov
dec
sbb
movsl
sbb
daa
or
pushf
cs
lcall
out
xchg
mov
ret
mov
lds
ret
outsb
dec
insb
lret
sbb
cltd
and
xor
loope
adc
cs
xchg
cmp
mov
adc
add
jne
sub
movsl
addb
xchg
divb
pop
cmc
xchg
stc
and
cwtl
iret
idivb
jnp
add
mov
push
idivb
push
push
xchg
pop
and
adc
pop
mov
rol
pop
out
orl
xor
out
pop
movsb
pusha
mov
outsb
cmp
inc
mov
or
pop
fwait
jecxz
sub
fs
lahf
xchg
xadd
mov
mov
inc
sub
adc
cs
movsl
sbb
dec
js
push
lcall
cmp
aas
in
sbb
repnz
ret
jg
aaa
or
outsb
jnp
jo
popa
jp
icebp
inc
sahf
testl
dec
loopne
fcoms
cmp
cmp
xchg
fldl
pop
cmp
mov
out
add
sub
aas
inc
push
cli
fldt
jns
cld
push
cltd
repz
mov
test
cmc
mov
pop
and
push
sahf
in
mov
add
cmp
lock
ret
add
sbb
adc
je
loop
cmp
push
jno
mov
in
fsts
sub
mov
pop
shrl
shl
push
ret
in
inc
inc
add
clc
enter
hlt
gs
gs
scas
and
dec
mov
push
pop
add
lods
cli
sahf
push
mov
mov
in
shrb
sbb
pop
in
shlb
jmp
push
div
mov
ja
sbbl
mov
mov
xor
js
mov
leave
pop
inc
xor
jp
out
rcl
add
push
inc
je
outsb
jno
and
sbb
inc
inc
sbb
adc
inc
jp
mov
fs
add
cmpsb
stos
mov
dec
int3
and
bnd
mov
nop
stos
lea
dec
mov
xor
test
ret
std
inc
push
xor
shrb
data16
inc
daa
mov
cmp
int
cltd
add
adc
cmp
rcrb
gs
push
test
inc
push
cmc
test
fdecstp
popf
rorl
xor
and
jbe
jp
aad
xchg
pushf
repnz
xchg
sub
pop
add
fcoms
mov
sub
popf
jp
fcompl
ret
int3
jo
cmpsl
sub
incb
fwait
add
xchg
pop
mov
jne
mov
push
pushf
rcrl
jbe
lcall
sub
repz
mov
repnz
ds
sbb
aas
sub
lcall
jmp
cmp
jle
mov
pop
enter
cld
mov
ret
mov
lods
xor
add
lds
in
pop
ficompl
add
and
in
cmp
jl
fld
ret
xor
enter
sub
outsl
cmp
xlat
call
xchg
xchg
pusha
dec
jg
mov
jmp
leave
jmp
adc
out
mov
cli
in
mov
xchg
ficoms
and
insl
mov
fistpll
push
lret
leave
fisttps
int
mov
dec
xchg
lds
cld
mov
push
hlt
aaa
cmp
clc
jno
lahf
jbe
icebp
jge
inc
hlt
pop
in
fistpl
rcrl
fs
cmovp
ss
jne
inc
loopne
andl
out
insl
loope
test
call
dec
rol
idivl
jnp
cmpsb
pop
cmp
jae
or
cmpsb
mov
dec
call
sti
cmp
or
int
subl
fisubs
rorb
xor
fwait
int
mov
jb
outsb
adcb
cmpsl
sbb
sbb
ljmp
mov
gs
shlb
jb
adc
ds
mov
and
xlat
sub
jns
and
int
cmp
scas
je
cmp
and
add
mov
repnz
add
out
iret
sub
fldenv
add
xor
mov
mov
dec
lods
aaa
addb
sbb
outsl
ss
push
fisttpll
cltd
jg
jmp
xchg
orb
inc
andl
lock
adc
ljmp
daa
repz
into
jae
fldt
cmpsb
sti
inc
mov
in
xchg
jo
in
cmc
cmp
dec
mov
dec
cmp
xor
pop
test
pop
lret
stos
divl
jae
cmp
les
cmp
jecxz
xchg
lods
jge
push
jp
jecxz
xchg
int3
inc
imul
je
jne
shlb
sbb
xchg
gs
inc
push
push
adc
movsbl
dec
sbb
push
xor
mov
flds
pusha
push
sub
rcl
cmp
jg
cmc
jge
sar
pop
mov
in
repz
add
test
cmp
jmp
cmp
mov
lret
xorb
aad
test
jno
xchg
fnstcw
sbb
negl
pop
test
jns
frstor
ret
movsl
aad
add
jbe
gs
mov
ret
in
add
dec
pop
sahf
ja
inc
andb
lret
dec
mov
pop
inc
shll
out
or
rcll
ret
enter
xor
popa
sub
jns
push
pop
add
in
jecxz
cwtl
enter
mov
xchg
roll
inc
mov
cmp
dec
dec
scas
inc
js
xchg
push
sbbb
mov
loope
or
lock
dec
fistpl
fisubl
es
cmp
adc
cmpsl
xchg
xchg
jb
sti
sahf
or
push
aad
mov
dec
xchg
adc
int
out
dec
sbb
aaa
add
sbb
cmpsl
fcos
and
xchg
mov
in
mov
cmp
int
shrb
jb
lret
insl
arpl
sahf
mov
mov
adc
out
push
ret
rorb
pop
mov
pop
add
or
mov
orl
pop
aad
mov
outsl
mov
das
mov
pusha
repnz
test
gs
xchg
adc
pop
jge
sbb
pushf
in
mov
sbb
mov
test
mov
inc
mov
je
dec
arpl
inc
test
insb
mov
xor
add
or
jge
sbb
bound
dec
sti
add
mov
mov
stos
ja
mov
push
rclb
push
xor
jl
ret
adc
xor
push
fwait
iret
js
insb
mov
or
movsl
sbb
fnstenv
orb
and
out
out
add
adc
into
or
pop
cli
mov
out
outsl
test
test
pop
sar
mov
dec
mov
adcl
ret
cmp
cli
sbb
xlat
ljmp
aam
mov
sub
xor
xchg
inc
ficoms
push
pop
inc
lock
mov
scas
shr
cld
cmp
bound
scas
mov
cmp
ret
fidivrs
call
push
mov
sub
sub
je
movsb
pop
nop
popl
cmpsb
out
push
addr16
and
pushf
mov
xchg
push
movsb
sub
in
mov
aad
ljmp
ds
stc
jl
and
or
pop
mov
lods
lods
mov
mov
pop
jge
add
or
inc
cmc
xchg
stc
pop
adc
xor
mov
dec
or
or
scas
pop
and
jmp
dec
sub
xor
push
or
jb
xchg
mul
out
ja
test
je
stos
jg
std
inc
sar
pop
out
add
add
push
push
jg
clc
push
jbe
lret
lods
andl
cltd
nop
lock
xorl
incb
mov
mov
lods
stc
xor
or
or
pop
lea
adc
ljmp
dec
jmp
mov
imul
aas
or
pop
cltd
sahf
outsb
push
nop
cmp
sbb
psraw
pop
xlat
movsl
sub
xor
inc
adc
pop
pop
push
lcall
lods
les
adc
and
shl
push
cltd
lahf
cmp
lods
ljmp
push
xor
mov
inc
lods
mov
pop
cmp
inc
movsb
xor
add
jp
enter
xor
aas
cmp
jmp
pop
mov
mov
and
pop
lcall
loopne
insb
lea
adc
ds
lods
xor
jbe
sbb
adc
inc
mov
xor
pop
adc
hlt
push
subl
mov
cmp
imul
movsb
loop
jne
dec
arpl
mov
fidivl
push
mov
ret
cmp
or
inc
inc
je
sti
adc
jecxz
jge
out
popf
sub
call
cmpsb
inc
xchg
sub
cmp
inc
push
fwait
add
pop
shlb
test
outsb
inc
nop
jg
mov
push
out
sbb
jb
aad
mov
add
push
daa
pop
push
cmpsl
cmp
int3
mov
add
xor
xor
mov
bound
and
dec
jp
cmp
ret
dec
je
roll
iret
or
call
sti
adc
jmp
adc
ja
jnp
mov
cmpl
xor
das
loope
es
inc
aad
fisttps
es
call
lret
fwait
push
or
in
insb
scas
mov
mov
cli
in
mov
insl
roll
ljmp
xlat
or
cs
testl
aaa
xchg
into
popa
testl
jae,pt
jb
and
xchg
arpl
push
cmpsl
mov
icebp
lret
ja
inc
fistps
sbb
adc
dec
push
adc
sbb
lock
icebp
push
or
xchg
or
lahf
lret
mov
cmp
adc
shlb
cmp
lcall
pushf
lods
xchg
mov
les
js
rcll
dec
les
add
mov
xchg
push
fwait
arpl
and
mov
push
adc
sub
imul
jae
xchg
adc
popa
outsl
loop
ficompl
fstpl
sti
jnp
scas
imul
cltd
inc
jge
loopne
lret
fldcw
dec
adc
mov
xchg
rcr
addb
fisubs
inc
lret
sub
in
hlt
sahf
out
and
or
js
popa
ret
lock
int
sbb
sti
jmp
add
sahf
cld
cld
fildll
jns
add
divl
xchg
push
jge
jnp
rcll
loopne
cmp
shll
mov
aas
mov
adc
lds
dec
mov
loope
insb
cmp
and
mov
mov
test
mov
xchg
or
add
and
xchg
stos
or
lcall
cwtl
jno
mov
rol
or
or
jbe
inc
adc
push
sbb
loop
ret
push
ret
ret
push
andl
push
mov
xchg
mov
fs
pop
pop
ss
mov
fsub
jae
js
loopne
bound
clc
cli
popa
pop
inc
or
ds
mov
ja
dec
mov
pop
or
xchg
js
jmp
repnz
std
cmpsl
scas
mov
out
push
cltd
mov
pop
clc
mov
fs
ret
push
rcll
lea
sub
jnp
push
pop
add
jbe
rcrl
adc
jmp
push
jb
jmp
enter
into
add
or
ret
into
add
push
pop
add
sub
std
jbe
ja
das
dec
fneni(8087
mov
mov
lods
sbb
push
aad
dec
call
cmp
xorl
adc
jb
push
fsub
push
and
dec
sub
loopne
out
push
fnstenv
or
jne
mov
mov
lods
fldenv
je
arpl
mov
pop
shrb
pusha
jno
sbb
lods
sbb
stc
out
sub
je
insl
pushf
mov
xchg
and
adc
stc
dec
jg
cld
aas
test
into
cmp
add
sbb
adc
sbb
movsb
fcoms
adc
mov
xchg
int
mov
sub
sbb
faddl
mov
aaa
jmp
push
in
pop
and
pop
jno
mov
jno
pop
add
sub
ficoms
jmp
or
jne
sub
mov
inc
out
xchg
mov
mull
dec
iret
scas
xor
repnz
mov
inc
and
mov
test
jg
sub
mov
xchg
mov
adc
cmp
daa
stos
je
pusha
aam
fisubrl
and
popf
xor
xchg
inc
std
arpl
in
lahf
or
cmpsl
rolb
adc
fwait
rorb
arpl
fcomip
push
cmp
mov
lahf
imul
xchg
roll
andb
jg
sub
mov
aas
outsl
shrb
scas
jo
jecxz
fcoml
testl
test
cmp
or
insl
sbb
and
shl
mov
xchg
pmaxub
mov
leave
sarb
hlt
add
shlb
sub
mov
push
push
arpl
es
adc
out
in
pusha
jl
adc
inc
xchg
cmp
popf
sub
cmpsl
jp
sub
mov
in
dec
inc
cwtl
add
lret
leave
jg
sub
cmp
adc
sbb
loop
lea
sbb
or
inc
cwtl
iret
fs
into
adc
popa
loope
lret
xchg
cld
mov
xchg
insl
mov
inc
jae
lret
js
insb
mov
push
xorb
icebp
int
mov
and
jne
cltd
insb
and
jp
cld
shll
cmp
sbb
pusha
scas
or
mov
mov
insl
andl
xchg
pop
popf
into
xchg
ret
add
fbld
es
pop
push
cmp
pop
xchg
movl
lods
pop
push
sbb
sbb
cmpsb
push
sbb
cs
outsb
imul
mov
inc
lds
sub
mov
and
gs
lcall
inc
stos
xor
cld
movsb
mov
insb
dec
enter
fwait
lds
xchg
daa
out
mov
call
xchg
push
push
cmp
xchg
adc
sub
mul
out
pop
sub
mov
push
cwtl
jno
inc
dec
divb
ljmp
pusha
dec
lds
jae
pop
je
push
dec
push
cmp
sbb
push
dec
cmp
jno
mov
mov
pop
stos
mulb
sub
popf
cmpsl
out
xchg
pop
mov
dec
bound
ja
outsb
shrb
xlat
pushf
cmp
sub
bound
gs
lock
push
xor
xor
cltd
mov
or
pop
test
out
mov
pushf
enter
test
pushf
mov
xlat
cmp
sbb
outsb
pop
sbb
cltd
pop
lret
femms
aaa
test
adc
mov
arpl
ds
mov
jge
push
addr16
ficoml
adc
mov
in
leave
sub
divl
fstpt
adc
sbb
xor
bnd
xchg
stos
and
or
mov
add
lcall
pop
cld
sub
inc
push
lods
adc
xchg
pop
cmp
popf
dec
cmp
fdivrl
jnp
mov
sbb
adc
inc
daa
gs
sub
mov
test
mov
and
push
jp
or
fsubrs
lods
xor
add
mov
and
xchg
xlat
std
cmp
jno
movsb
movsb
outsb
jl
das
scas
or
pop
push
pop
ss
std
jg
es
inc
ds
scas
sti
add
push
lods
daa
sbbl
cmpsb
loopne
jno
inc
outsl
xchg
out
jbe
rcr
inc
ret
das
mov
daa
pop
cmpsb
rcrl
shlb
shrb
jecxz
dec
inc
aam
and
sbb
out
pop
rcr
xor
aam
or
jo
clc
cli
inc
std
out
fisttpl
cli
movb
inc
loop
xchg
sub
pushf
sub
xchg
mov
cmp
incl
gs
jo
push
sub
iret
fnstenv
sub
xchg
jmp
dec
sub
cmpsl
dec
test
fldenv
sahf
mov
outsb
add
aad
push
inc
jp
mov
sbb
fldt
loope
pop
inc
push
mov
add
lret
fwait
inc
add
sub
stos
cmp
fildll
adcl
js
jae
dec
xchg
ret
ret
add
xor
out
jbe
and
push
cs
mov
lea
inc
mov
test
fistpl
adc
add
fstpt
cltd
movsl
insb
xor
lds
mov
sbb
sbb
cltd
cmpb
push
clc
sbb
jb
sub
dec
or
int
lock
jbe
test
inc
xor
das
adc
xchg
sub
mov
push
inc
out
dec
jns
pop
vaddsd
cmc
xchg
or
xor
nop
xor
mov
mov
dec
and
sbb
movsb
into
mov
mov
pop
lods
sbb
fstpt
call
enter
out
fisubs
icebp
mov
push
movb
mov
loopne
push
rcl
loop
loop
xor
testb
call
lcallw
dec
fsub
out
loope
test
jae
test
or
jae
cmp
in
jnp
mov
adc
jae
std
xchg
scas
mov
xor
call
pop
push
clc
movsb
notb
add
xchg
pop
in
movsl
nop
push
push
imul
inc
push
test
add
or
add
aad
int
cmp
push
jno
loope
stos
xchg
inc
cwtl
cmpsl
pop
dec
and
cwtl
lret
push
cmpl
xor
js
rcrb
iret
dec
push
dec
xchg
mov
ljmp
mov
adc
inc
or
ret
add
js
cmp
push
ja
jnp
lock
xor
sbb
pop
inc
pop
push
push
inc
cld
fisttpl
test
cmc
shrb
loope
inc
pop
xchg
cmpsb
outsb
pop
mov
insl
adc
xor
inc
or
int3
pop
inc
sub
mov
mov
icebp
cltd
push
jnp
shl
je
mov
mov
or
ja
xor
xchg
pusha
rcr
nop
es
lcallw
inc
and
cmpsl
popa
mov
test
cmp
pop
dec
cwtl
sbb
mov
add
add
hlt
test
cmpsb
cmp
mov
popf
ja
cmp
sbb
sub
aam
jb
movl
cli
xor
add
lcall
out
or
lods
popf
jmp
jg
sbb
dec
aas
in
sub
es
mov
lcall
cmpsl
ror
cmp
flds
hlt
mov
add
std
lods
adc
in
jae
sbb
jns
mov
or
fidivs
lods
push
mov
lods
scas
jb
mov
sbb
pop
jb
pop
xor
iret
mov
xchg
pop
jl
scas
sbb
xchg
divl
lea
fnstcw
dec
dec
popf
adc
and
mov
outsl
pop
daa
mov
cmp
mov
inc
mov
sub
xchg
rcrb
loopne
imul
jge
ret
pusha
ds
imul
idivb
adc
pop
sbb
in
rolb
jmp
adc
dec
jb
in
gs
cmp
lods
mov
int3
daa
push
inc
movsl
add
in
das
popa
gs
out
mov
std
lret
and
push
dec
lret
fnstsw
inc
lock
or
mov
rcl
mov
enter
dec
out
and
imul
jmp
movsb
fisubs
and
test
pushf
hlt
stos
adc
pop
push
das
push
lods
leave
ret
insb
test
mov
xchg
js
or
subb
pop
dec
sti
xchg
sbb
iret
xchg
xor
pop
mov
mov
mov
addr16
push
ret
push
add
ds
mov
in
push
stos
add
jmp
shll
leave
mov
call
lcall
mov
aaa
js
jae
test
xor
enter
sbb
push
dec
inc
mov
sbb
inc
jge
push
pop
rcrb
cli
jl
lods
mov
add
dec
inc
das
dec
push
shlb
ret
loope
ljmp
and
sti
jns
adc
add
lcall
leave
jns
cmc
loope
adc
fwait
or
mov
scas
lods
loopne
inc
push
lods
lahf
mov
bound
fs
and
mov
mov
rcrl
ret
push
flds
inc
cltd
mov
mov
xchg
inc
stos
mov
ret
xor
jbe
subl
mov
adc
int
stos
rorb
xorl
clc
mov
cmp
jmp
mov
pop
stc
mov
or
lahf
mov
jmp
or
jl
loope
mov
xor
pop
std
stos
mov
jno
sbbl
pop
dec
cmpl
popa
dec
add
and
xlat
insb
jae
push
or
jbe
xor
jns
les
push
pop
push
xorl
dec
mov
mov
add
mov
mov
stos
xor
cmc
mov
gs
lret
or
aam
idivb
movsl
leave
adc
push
and
in
xchg
inc
test
ja
lock
mov
stos
sbb
xor
add
test
adc
mov
xchg
sbb
inc
jl
imul
xor
pop
push
lret
call
add
cmp
ds
stos
popf
data16
loope
or
adc
mov
cmpsl
mov
loop
rcrb
inc
jmp
xor
dec
xchg
lods
gs
insb
daa
mov
fldenv
out
lret
lcall
cmp
out
sub
cmp
movsb
and
sub
dec
addl
sarb
repnz
popa
mov
aas
xor
test
loop
aaa
lods
cmp
sbb
pusha
mov
bound
push
fisttpll
add
and
mov
adc
into
jge
xor
imul
push
dec
mov
insl
pop
mov
imul
addr16
pop
sahf
lea
stos
xor
int
mov
arpl
pop
xor
les
insl
loope
mov
lods
sub
mov
inc
testb
push
scas
mov
lock
fstpl
jne
or
cmpb
cmp
push
pop
lods
sub
rcrl
cmp
mov
mov
test
mov
sarl
scas
fsubp
mov
mov
sar
sub
and
nop
jmp
xor
jmp
inc
das
mov
add
jo
mov
insb
ret
and
or
push
add
xor
test
out
pop
inc
fucomi
std
mov
add
push
add
and
scas
add
and
pop
push
pop
jne
or
fwait
fs
std
out
hlt
xchg
addr16
ljmp
cmc
std
xor
add
subps
lock
les
ljmp
hlt
push
je
jg
loop
sbb
xchg
fsubl
pop
pusha
jge
pop
dec
mov
xchg
movsl
mov
mov
lret
add
lret
lods
out
push
das
jge
sbb
xlat
inc
sbb
repz
sahf
jns
sbb
jmp
sbb
and
and
pop
cmpsl
insl
sbb
mov
js
mov
sti
fldenv
xchg
sbb
shl
xor
push
add
cld
adc
mov
xor
in
push
movsl
jl
in
and
push
popf
sub
js
in
jl
ljmp
and
aas
jae
mov
mov
pop
insl
ss
mov
mov
jmp
xchg
insl
clc
in
int
mov
push
stos
inc
push
xor
out
xchg
pop
popf
jecxz
cwtl
aas
adc
inc
mov
sbb
gs
js
test
or
ficoml
mov
jmp
imul
or
jno
cmp
adc
xor
dec
in
lahf
ljmp
test
int
outsl
cld
fadd
jp
jecxz
daa
cld
and
fcmovnbe
enter
pop
out
cltd
mov
pop
add
repz
jae
jmp
cltd
cltd
mov
repnz
iret
and
jns
ja
jne
jno
lods
jmp
dec
leave
jbe
jae
lcall
pop
inc
push
cltd
adc
mov
xchg
aad
fs
cmpsl
repz
cmp
not
sti
lods
aas
sub
incb
fstps
pop
leave
les
adc
xor
dec
sbb
rcr
adc
mov
aaa
popf
inc
or
sbb
repnz
scas
add
push
xor
pop
jp
fldl
sub
lret
in
sahf
xor
sub
pop
pop
aam
pop
pop
xor
and
aaa
sarb
aas
xchg
or
lcall
outsl
sbb
aaa
push
dec
cmp
pop
push
cmp
xor
xchg
push
add
sbb
cmp
das
test
ret
jge
add
pop
mov
add
in
sbb
jbe
int
push
lcall
clc
fidivs
leave
movsl
sub
xor
mov
ret
lds
rorl
imul
push
pop
addr16
imul
cmpsb
cwtl
jecxz
aad
rorb
add
mov
cmp
cmpsb
pop
std
dec
out
repz
fs
out
or
cmpl
lret
add
jl
dec
or
mov
sarl
cltd
jle
call
mov
rorl
sub
lcall
pop
js
jae
xchg
dec
mov
in
into
fsub
cmp
cmp
pop
repz
cli
cmp
cmp
movsb
sbb
push
frstor
sub
and
es
mov
out
adc
in
aad
mov
mul
pop
arpl
cmp
in
add
int
xchg
add
push
jl
outsb
jge
sbb
pop
icebp
cltd
pop
and
aaa
push
xchg
mov
xor
enter
iret
fcomps
in
lds
xorb
jl
jmp
pop
pop
fidivs
stc
xchg
cwtl
adc
mov
icebp
loop
in
pop
mov
mov
repz
xchg
sbb
jb
xchg
add
lret
loop
lret
loope
mov
cmp
and
cs
icebp
fidivl
rcll
cs
cmp
dec
popf
xchg
sub
cli
pushf
fidivl
in
push
mov
xor
inc
push
test
loopne
aad
daa
mov
sub
mov
mov
sti
fmull
cmpb
cld
jl
sbb
fwait
xchg
mov
fisubrl
outsl
mov
and
fldt
fwait
cwtl
push
outsb
mov
dec
sbb
push
adc
push
movsb
mov
out
xchg
mov
cmp
sahf
cmp
push
push
adc
dec
lret
adc
ret
jae
sbb
icebp
fisttpl
into
xor
sahf
cmc
pop
mov
xor
mov
js
mov
cs
adc
loope
mov
fdivl
std
in
rolb
std
ss
repz
mov
jne
popa
mov
sti
call
je
and
xlat
arpl
movsl
aaa
imul
xchg
and
xor
cld
cmp
test
test
adc
xor
and
cmp
pop
mov
test
jl
sbbb
xchg
sbb
cmpsb
mov
ds
cmc
adc
xchg
xlat
adc
test
dec
loope
mov
inc
xchg
jae
mov
or
cli
add
rorl
xorl
jmp
pop
inc
pop
das
test
sub
ljmp
mov
xor
imul
int
icebp
ljmp
mov
jno
mov
jp
nop
push
mov
repz
cwtl
xor
mov
sub
ja
sub
jnp
cmpsl
fidivs
fisubs
insb
add
push
loope
cld
ja
xor
hlt
in
lods
push
cmpsl
add
scas
inc
mov
std
push
aam
jne
sub
adc
cmp
and
inc
mov
out
add
roll
and
jae
mov
push
sarb
or
xor
mov
dec
test
pop
push
stos
loope
sbb
cltd
rorb
std
arpl
mov
mov
imul
adc
rcrl
nop
scas
dec
and
fsubrl
jle
mov
arpl
mov
mov
jp
pop
bound
inc
add
mov
enter
insb
orb
lods
lahf
fdivs
stos
mov
hlt
iret
aad
adc
sbb
lds
repz
loopne
add
push
sbbl
mov
data16
les
fistl
jne
fstps
call
mov
inc
addr16
jg
adc
and
jl
jae
sub
fdivrl
sarb
mov
jo
es
adc
stos
clc
jns
pop
jb
cs
mov
adc
jl
lods
in
dec
mov
sti
shlb
addl
inc
xchg
imul
jb
in
adc
or
or
sub
test
call
ficoms
push
enter
cmpsb
cmc
subb
adc
mov
push
sbb
cmc
xor
out
in
xchg
lock
jne
push
push
out
push
xlat
dec
out
mov
jbe
xlat
inc
repnz
mov
cltd
sub
shrl
or
inc
adc
ds
fnsave
cmp
sbb
adc
cmpsl
test
jg
add
cmp
sub
mov
jb
daa
xchg
das
outsb
dec
mov
popf
mov
dec
shlb
pop
mov
adc
pop
jo
out
sub
add
and
sub
xchg
rorb
je
popf
fwait
mov
into
cwtl
sbb
bound
sub
ss
cs
push
adc
dec
cld
cmpsb
out
jp
jmp
jne
cmp
call
fstl
in
mov
lret
cmpsb
pop
cmpsl
dec
mov
sub
push
repnz
shrl
stos
cmpsl
adc
sbb
inc
jno
ds
lods
stos
out
mov
mov
lcall
push
inc
int
cmc
fmul
sub
jns
add
sbb
mov
mov
dec
adc
fstps
sbb
xor
stc
addb
mov
enter
dec
gs
mov
push
ret
sti
sub
dec
push
sub
insb
scas
sub
pushf
adc
sub
scas
sub
movsl
stos
cmpsb
out
rorb
in
xchg
jns
push
mov
ljmp
cmp
mov
popf
fwait
push
mov
mov
jmp
es
mov
aaa
std
and
inc
js
jno
mov
jl
insl
jns
push
pop
fbstp
hlt
mov
dec
scas
roll
mov
shlb
xlat
cwtl
scas
movsl
jnp
mov
jecxz
inc
push
aad
adc
cmpsl
or
loop
inc
shrb
push
sbb
inc
stc
fnsave
add
sbbl
push
mov
mov
outsb
inc
aam
sbb
or
xchg
repz
dec
int3
imul
mov
sub
xchg
faddp
ret
mov
or
lock
mov
out
pop
js
mov
aad
mov
xlat
pusha
jnp
mov
mov
jo
adc
sbbb
inc
rcrl
je
or
mov
mov
mov
mov
testl
gs
outsl
and
push
out
jb
clc
aas
xor
lcall
dec
das
dec
sbb
fistl
cmp
and
pop
jmp
data16
iret
and
leave
inc
cmpsl
jg
push
and
inc
pop
xchg
decl
inc
fdivs
push
jmp
mov
mov
jnp
adc
test
jl
jle
pop
push
ss
lods
push
scas
sarb
loop
cmp
mov
rorb
mov
cltd
xor
mov
pop
lea
add
mov
test
mov
into
jl
ror
push
xchg
sbb
inc
call
jmp
pop
inc
outsl
pmaxsw
push
dec
add
xchg
daa
shl
sub
xchg
sub
push
imul
add
jl
sub
add
jno
data16
ss
repz
pushf
mov
fs
cmp
movsb
movsl
js
pop
je
cld
push
cmp
xor
mov
sbbl
dec
add
add
outsl
bound
xchg
push
sbb
cmp
ds
js
adc
jmp
fwait
stc
pop
rorl
add
sbb
push
outsb
cmp
dec
xor
mov
int3
mov
push
popf
int3
popa
int
and
sbb
daa
andb
or
mov
sub
nop
je
test
push
push
fs
lcall
mov
and
andb
xchg
mov
aam
mov
ja
lock
int
mov
jno
pop
outsb
sbb
dec
shrb
xchg
in
xchg
jp
fidivrs
nop
add
jl
int
lds
jle
repnz
sarl
adc
lret
mov
or
std
stc
aaa
jbe
inc
imul
and
xchg
jge
std
popa
pop
push
aaa
push
daa
ret
enter
sub
push
push
es
inc
gs
add
lods
jo
out
int
mov
mov
mov
push
js
push
sub
in
aam
es
into
mov
xchg
sbb
inc
add
lcall
into
and
mov
shl
jl
cmp
lods
inc
jle
adc
call
sti
sbb
movl
xor
aas
xchg
dec
xor
xchg
or
leave
pop
pop
xor
dec
mov
add
sub
aad
int3
insl
daa
push
xchg
pop
and
daa
mov
push
stc
loopne
push
movsl
pop
pushf
xchg
int
cltd
push
sub
int
jno
jmp
in
movsb
or
notl
je
inc
movsb
sbb
std
stc
push
fistps
je
scas
sub
nop
sub
dec
push
aam
test
mov
out
inc
xorb
and
jle
jge
push
add
dec
test
in
sbb
pop
movsl
cmp
pop
jo
je
bound
and
loopne
push
push
in
mov
sub
mov
inc
push
mov
sbb
mov
and
lods
lret
cmp
mov
lret
lret
fistpl
leave
lock
iret
js
push
add
lea
cmp
pushw
cwtd
fs
scas
test
int
mov
jbe
test
mov
or
mov
push
shl
lea
xor
dec
mov
in
cli
lods
sbb
inc
loope
out
cmpsl
sbb
mov
jmp
into
cltd
xchg
and
js
loopne
jl
sbb
popf
or
pop
dec
sub
dec
add
ret
xor
mov
aas
iret
outsl
sti
dec
mov
mov
in
movsl
mov
fisttpll
pushf
and
adc
data16
mov
lds
out
pop
xor
adc
dec
dec
add
sahf
std
test
cmp
adc
add
mov
lahf
js
ja
mov
inc
jb
pop
popa
mov
jmp
mov
inc
rorb
adc
pop
pop
sbb
mov
xchg
inc
sbb
add
cmp
popa
std
cld
push
and
cmpsl
lods
pop
imul
xchg
je
pushf
mov
and
cmp
cli
fisubl
dec
or
mov
lret
jg
in
sub
cmp
pop
jg
ret
aas
mov
dec
mov
out
push
out
and
push
jbe
dec
jle
mov
and
push
xchg
jg
sbb
push
fisubl
mov
pop
mov
mov
sub
movsb
sbb
pusha
inc
jbe
push
add
push
icebp
mov
mov
jecxz
arpl
xlat
vmovss
xor
scas
cmc
mov
stos
cmp
or
xchg
jl
sub
xor
out
mov
jo,pt
scas
data16
cld
mov
imul
push
mov
cmp
jg
scas
bound
sti
cs
ret
jo
jb
insl
fbld
sub
mov
test
and
inc
inc
inc
int3
pop
inc
lea
nop
lret
cwtl
popa
jmp
and
fdivrl
jmp
fists
in
adc
sarb
jmp
push
inc
sub
aad
push
adc
fcompl
dec
mov
jl
ljmp
dec
clc
in
push
xchg
fcmove
out
jb
mov
imul
arpl
dec
sbbb
and
addr16
sub
scas
clc
or
mov
mov
leave
fimull
lds
jae
adc
push
and
inc
out
imul
inc
mov
aad
add
stc
ret
addl
inc
jae
lcall
loopne
leave
es
jns
mov
orb
shlb
pop
push
data16
lods
cmpl
sbbl
jp
clc
sbb
cmp
xor
testb
sbb
cmp
dec
inc
sub
adc
scas
and
mov
int3
mov
mov
mov
adc
decl
pop
imul
xchg
cmp
jl
push
pop
das
lahf
or
adc
add
out
sbb
orb
inc
aad
sbb
or
dec
push
test
push
add
aaa
and
or
repz
popf
lods
leave
push
scas
rcrb
call
pop
push
adc
and
fwait
xor
jns
lods
mov
add
pop
js
cmp
add
push
loopne
sub
rcll
mov
call
adc
xchg
push
jl
add
std
ficoml
lahf
mov
aaa
jae
das
lock
dec
cld
pop
sub
movsl
xor
pop
inc
pop
and
mov
jbe
dec
lcall
sub
xor
sbb
in
cmp
aad
rolb
dec
fucomp
das
lea
in
mov
sub
fcmovnu
orb
xor
repz
push
mov
nop
xchg
xchg
out
or
add
inc
mov
bound
pop
aad
xor
fsts
cmp
rcrb
or
inc
mov
push
jmp
test
lcall
movsb
daa
test
and
mov
jo
cmp
fdivs
adc
or
sub
stos
push
sbb
mov
sbb
mov
xor
sbb
int
sti
inc
dec
jmp
popa
cmp
adc
dec
lea
sahf
ficoms
cmp
lret
push
xor
pop
data16
xchg
pushf
sbb
arpl
pop
mov
push
push
add
test
pop
cmpsl
push
and
imul
sarb
jo
pop
jbe
mov
clc
sbb
jbe
xchg
sub
mov
test
add
cmp
popa
push
pusha
cmp
gs
aam
xchg
iret
dec
mov
sub
clc
shl
sbb
cmp
sbb
fmuls
sub
loope
std
fdivs
jne
test
or
sahf
push
inc
loop
add
xor
lahf
jmp
sub
addr16
ret
psubusb
imul
gs
add
xchg
xor
in
sbb
ljmp
fdivrl
mov
movsl
in
les
rcrl
addr16
scas
jle
inc
mov
call
movsl
xor
ficoml
jmp
int3
pop
xor
data16
jns
mov
xchg
pop
mov
mov
cwtl
adc
adc
fld
mov
repz
fsubrl
sahf
dec
adc
aam
fwait
inc
mov
sbb
mov
pop
mov
add
test
test
cltd
shl
mov
test
adc
cmc
gs
xor
mov
push
sbb
xchg
cmp
fbld
jo
mov
and
mov
and
mov
push
hlt
mov
dec
sub
and
popa
sub
mov
jecxz
push
push
mov
ret
pop
dec
pop
pop
sti
sub
sahf
scas
lret
sti
imul
enter
add
out
iret
fwait
pop
clc
repnz
push
pop
pop
sub
inc
xchg
movsb
push
lahf
and
dec
add
push
addl
push
pop
mov
cwtl
shr
pop
icebp
sbb
push
mov
mov
imul
cmp
push
aad
push
pop
push
xor
sbb
mov
cs
lods
leave
cmpsl
pop
repz
add
mov
aad
dec
add
lcall
pop
pop
adc
iret
dec
mov
outsb
ljmp
mov
test
enter
mov
sbb
sbb
mov
mov
call
jns
arpl
jnp
fcom
cmpsb
shl
lahf
movsb
sbb
mov
mov
push
out
dec
pop
xor
andb
or
fs
test
push
dec
xchg
es
cmp
cmc
jmp
sub
lahf
repz
mov
adc
rol
outsl
call
cmp
or
mov
mov
xor
pop
pusha
repz
lret
out
ror
push
ss
stc
popf
xor
cwtl
ror
movsb
xor
xchg
adcl
push
mov
jae
cmp
call
cmp
fimull
fdivrs
mov
bnd
pop
enter
push
push
mov
dec
add
icebp
out
fdivrp
scas
and
jbe
jmp
add
pop
and
push
push
inc
movsb
fidivrl
push
rorb
cmpsb
ljmp
stos
sub
jne
sahf
loop
or
mov
les
push
cmp
rorb
jmp
nop
cmp
idivb
call
jmp
jo
push
outsl
add
bound
mov
jle
mov
cmp
inc
ja
jg
dec
sub
or
popa
sbb
test
push
ret
popa
sahf
lock
xchg
pop
cwtl
jnp
xor
sbb
mov
inc
xchg
add
push
xchg
pop
push
adc
mov
clc
push
iret
mov
js
push
push
pushf
loopne
ret
nop
repnz
mov
enter
sub
pop
mov
mov
xchg
push
mov
pop
sbb
shll
or
push
test
inc
cmp
aaa
jmp
jp
sub
jns
pop
call
pop
out
dec
inc
inc
aad
mov
rcr
jle
sti
imul
mov
iret
push
orb
inc
adc
int3
stos
xor
cltd
inc
adc
lret
scas
imul
jo
and
clc
push
cmp
stos
shlb
test
out
xchg
std
jp
je
arpl
xchg
xchg
pop
clc
mov
sbb
sub
ja
sbb
clc
sahf
xor
jmp
nop
jno
lds
ret
push
push
pop
add
scas
add
mov
sbb
leave
jle
and
lcall
jecxz
push
mov
pop
mov
bound
cmpsl
fildll
lret
pop
fwait
and
dec
test
jge
mov
call
xchg
jp
inc
jecxz
mov
or
jb
repnz
push
jl
and
or
dec
in
call
inc
jmp
cmp
pop
mov
add
xchg
ficoml
jb
test
pop
cmpsb
push
pop
int
in
rcrb
fs
xor
mov
jne
mov
repnz
push
dec
inc
jp
mov
dec
push
add
inc
stos
or
aad
cmp
ret
sti
xchg
lcall
jne
cmp
mov
js
sub
repz
fistpll
mov
or
sub
outsl
out
push
and
mov
push
jge
sbbb
cmpsl
pushf
jbe
mov
adc
mov
dec
pop
mov
ret
xchg
ds
cmp
add
pop
inc
cmpsb
mov
sbb
lahf
sub
leave
jmp
add
mov
test
dec
push
stos
loope
mov
pop
mov
out
int
movsb
jl
pop
mov
push
inc
push
sbbb
in
ficoml
inc
sbb
cmp
sti
cmp
push
mov
jno
mov
rorl
push
dec
and
pop
xchg
and
add
xor
aam
xlat
daa
imul
inc
faddl
push
mov
mov
pop
ficoms
call
xchg
rcll
xchg
mov
mov
xchg
inc
sbb
mov
mov
aas
xor
roll
jge
mov
lods
imul
xor
iret
mov
cmp
xchg
pop
xchg
push
out
popa
sti
arpl
test
sahf
adc
mov
pop
xor
jno
pusha
lcall
loopne
sub
or
mov
mov
pop
push
add
sub
and
push
lahf
mov
popa
ja
inc
sbb
shrb
sub
mov
xor
subl
lcall
mov
aaa
cli
in
testl
mov
cmp
jbe
push
mov
mov
jecxz
repz
mov
xor
adc
outsl
mov
add
sbb
add
xchg
loope
repnz
lcall
mov
and
inc
cmp
sub
lods
lret
nop
push
push
xchg
inc
in
sti
movsl
scas
addr16
xchg
inc
out
or
dec
push
outsb
out
rolb
test
insb
jae
loop
push
in
push
sub
rorb
and
lea
call
add
jg
jae
imul
or
hlt
inc
sub
lea
shufps
stc
jp
cmp
adc
mov
std
dec
and
mov
pop
shll
mov
lea
adc
rolb
xchg
jle
push
scas
xor
in
lds
popf
incl
xor
add
xchg
movl
imul
mov
pop
jg
imulb
jno
ja
mov
sbb
in
or
mov
xor
xor
imul
jb
sbb
out
pop
xor
xchg
mov
in
imul
roll
push
repnz
add
push
jmp
adc
sbb
adcb
cmpsl
xchg
rorb
sahf
xchg
std
aaa
jg
pop
mov
dec
das
push
pop
mov
std
mov
dec
in
nop
hlt
jg
and
lds
sbb
test
fs
fstpl
sub
jbe
icebp
fisubs
mov
xor
mull
shr
loopne
xchg
pop
aam
call
and
notb
outsl
inc
sbb
adc
adc
pop
pop
test
ljmp
mov
fs
pop
inc
push
mov
cld
fnsave
lods
jge
adc
scas
fisubrl
mov
and
insb
pop
popa
xor
ficompl
gs
sbb
stos
popf
clc
stc
fwait
pop
stos
sub
mov
pop
mov
fs
clc
xchg
pusha
dec
mov
cmp
loop
scas
cwtl
sbb
jbe
jle
dec
cmp
jns
and
ljmp
xchg
sbb
mov
in
outsl
add
fwait
ret
lds
jo
jge
nop
pop
inc
jge
dec
test
jbe
dec
icebp
mov
jge
loopne
inc
outsl
arpl
sub
dec
cmpsl
movsl
xchg
in
push
sub
out
push
imul
push
adc
js
add
test
jecxz
movsb
adc
xchg
pop
cmp
cmp
ja
sub
mov
push
inc
stos
sub
xchg
stos
push
cs
xchg
mov
lds
subb
mov
scas
mov
jp
in
pop
test
cmp
xor
insl
mov
into
inc
mov
lods
mov
jno
sub
jle
mov
icebp
pop
fsubrs
jb
add
adc
ret
jb
data16
lock
iret
imul
pushf
ret
repnz
out
pop
push
test
js
imul
out
push
aaa
jmp
sub
clc
lret
sub
mov
inc
imulb
int3
mov
sub
mov
jmp
and
mov
mov
cld
and
jp
xchg
cld
xchg
stos
fiadds
cmp
mov
iret
or
inc
stos
or
cltd
fmuls
dec
xor
push
pop
fldl
cmp
and
iret
decb
add
mov
xchg
push
sbb
xor
xlat
dec
shr
enter
jae
pop
lcall
jmp
repnz
xchg
push
ja
jl
or
ja
sahf
sti
sub
pop
adc
adc
push
out
jb
fdivrp
pop
std
push
jle
jl
and
xchg
lcall
aaa
jbe
adc
aas
stos
add
test
inc
lea
loope
inc
mov
cwtl
or
jno
xor
pop
imul
daa
dec
hlt
jno
sbb
outsl
cmp
das
jl
filds
cmc
fldt
sbb
stos
clc
arpl
adc
ja
mov
pop
xor
out
je
js
mov
popf
sub
and
xchg
out
pushf
adc
pop
lahf
movsl
stos
jnp
ja
fistps
fstpl
adc
iret
fcmove
push
cmc
sub
mov
out
popa
mov
xor
or
pop
add
scas
mov
mov
call
or
loope
orl
out
call
lds
nop
das
shlb
test
out
add
idiv
cmp
xchg
scas
or
fidivrs
pop
daa
loope
sub
jae
stc
lock
js
mov
xorl
in
or
mov
pop
or
arpl
fucomp
popf
nop
mov
xor
js
inc
rorb
in
mov
mov
xlat
cmpsl
xchg
clc
lds
std
in
inc
pop
push
mov
adc
lds
dec
mov
jnp
inc
xchg
xchg
shlb
xchg
adc
rorb
mov
dec
sahf
out
pop
jl
into
jge
jmp
sub
push
sahf
outsl
add
lock
je
mov
push
or
inc
cmpsb
repz
sub
insl
pop
adc
mov
and
fistps
adc
outsl
sub
xchg
cli
cli
idivl
adc
js
xchg
mov
sub
mov
sbb
dec
xchg
dec
jg
test
leave
sbb
cmp
lahf
add
or
add
je
adc
call
jae
sub
xchg
mov
pop
push
dec
stos
jbe
cmp
adc
push
out
pusha
insb
imul
test
jecxz
pop
stos
mov
aaa
dec
jno
and
mov
mov
or
adc
aaa
mov
xchg
jns
scas
xchg
xchg
inc
xchg
jge
movsl
sub
push
loop
lods
test
scas
cmc
push
int
cmp
pushw
adcl
out
dec
test
insb
std
mov
cld
xor
push
cmp
push
outsl
in
cmpsl
fldt
pop
pop
cmp
fiadds
in
dec
or
or
pop
lret
xor
xor
xor
push
mov
aas
outsb
xchg
in
faddl
sbb
pop
or
xchg
and
jo
icebp
mov
scas
inc
lret
mov
or
adc
jl
andb
push
pop
insl
addr16
hlt
int3
sti
push
jae
popf
bound
push
shrl
push
xchg
inc
push
aaa
ret
mov
and
ja
mov
leave
rolb
cld
lds
in
jle
cli
out
xlat
mov
cmp
fwait
or
lret
push
sub
add
nop
adc
cmp
push
xor
mov
repz
push
jmp
inc
mov
mov
mov
cmp
lds
addr16
mov
adc
es
testl
mov
ljmp
inc
mov
lahf
inc
stc
and
sahf
mov
hlt
out
fwait
jbe
sbb
mov
push
clc
outsl
sub
loop
or
sub
and
pop
inc
loop
mov
or
jg
addr16
dec
cs
neg
pushl
xor
dec
imul
imul
jecxz
dec
or
mov
ds
push
pop
das
test
aad
psrlw
sub
mov
push
fs
loope
rolb
lahf
add
add
imull
sub
jg
pop
xor
adc
or
lods
jecxz
test
cmp
add
xchg
cli
and
sahf
mov
into
divb
push
rolb
and
mov
jmp
and
mov
daa
mov
cmp
mov
xor
pop
fisttps
xchg
andl
inc
pop
push
mov
and
insb
insl
mov
aaa
mov
incl
repnz
sbb
xchg
pop
into
daa
and
push
or
fwait
mov
mov
rcrl
push
pop
xchg
adc
mov
cmp
pop
pop
push
sbbl
add
inc
push
fdiv
jl
das
arpl
xor
push
adc
push
and
mov
mov
loope
mov
lret
sarb
test
aam
call
cli
jno
mov
out
inc
xchg
mov
xor
pop
push
mov
cli
aaa
fsubl
or
mov
fsubp
add
test
rcrl
push
ss
in
test
or
dec
cmc
xor
mov
data16
and
add
jno
mov
mov
aad
sbb
imul
mov
fldt
outsl
data16
pop
je
mov
sbb
sub
data16
cld
stos
sbb
cli
cs
cwtl
and
pop
in
shll
imul
jecxz
ds
inc
mov
mov
mov
ret
out
movsb
jg
js
out
fwait
dec
cmp
lret
sub
out
sub
cmp
xor
movsl
cmp
mov
or
rolb
data16
mov
iretw
shrb
xchg
mov
pop
xchg
pop
int3
mov
adc
movsl
push
roll
iret
and
and
push
mov
pop
push
mov
orb
push
icebp
or
mov
ffreep
jne
iret
xor
in
xchg
or
repz
rcr
cmp
jns
aad
add
xor
pxor
lret
out
mov
and
push
sbb
inc
adc
dec
xorl
stos
jge
out
ss
xchg
hlt
xchg
sbb
xchg
mov
fildl
mov
pop
push
xchg
pop
int
data16
fstpt
push
test
aaa
bound
or
loopne
insl
jp
jno
xor
sahf
mov
arpl
pop
jge,pt
js
shr
js
or
cmpb
mov
imul
add
out
xchg
sub
add
xor
push
lret
inc
dec
jae
sub
jbe
mov
outsl
orb
popa
rcll
sbb
mov
dec
jecxz
cmp
je
xchg
push
mov
xor
push
mov
decl
mov
push
cmpsb
xor
outsb
dec
test
rcrl
mov
aam
sbb
cltd
pop
inc
cli
aas
add
sbb
or
rcr
mov
popf
into
add
cmp
shrb
repnz
add
and
outsb
sub
cmp
mov
repz
dec
ja
pusha
lods
into
lahf
fisubl
cmp
inc
sahf
test
arpl
and
add
or
out
lret
adc
test
pop
sub
xor
mov
test
fimuls
out
cmpsb
xor
mov
mov
dec
push
mov
gs
lods
xor
imul
into
push
cli
and
inc
mov
jmp
jns
sub
int3
mov
cwtl
add
aad
nop
pop
testb
stos
lret
sub
movb
mov
je
or
mov
and
jnp
xor
xchg
dec
les
movsl
inc
push
cmc
fisubrs
push
stos
cmpsl
inc
addr16
pop
lahf
inc
movb
lahf
xor
fstpl
jae
or
mov
stos
xchg
movsb
jb
scas
cmp
cmpsb
cmp
pop
dec
pop
xor
xchg
inc
test
daa
int
mov
jmp
cmpsb
jb
cmp
les
pmulhuw
jne
jae
mov
cld
adc
in
shlb
push
addl
enter
jno
sar
lret
dec
add
stc
push
mov
test
sbb
in
mov
push
or
push
data16
loopne
push
sub
adc
xor
mov
loope
push
jnp
shrl
ss
cs
das
sub
cmovp
and
sbb
and
loop
adc
filds
pop
mov
jae
sahf
push
sbb
push
in
mov
push
das
test
or
cvtdq2ps
mov
adc
add
out
aam
xchg
fwait
bound
mov
cmp
mov
mov
je
repnz
scas
jg
aam
adc
pop
mov
pop
jo
jp
dec
mov
cltd
sti
push
pop
xchg
sbb
js
dec
add
push
shll
mov
mov
jge
int3
call
cmpsl
dec
jg
fcomip
arpl
add
mov
sbb
shll
jbe
push
sub
ljmp
cmpsb
and
aad
cld
lods
lods
lods
daa
sbb
scas
pop
cmp
ja
lods
out
clc
sbb
arpl
jne
mov
test
add
hlt
std
add
and
sti
cli
xor
enter
mov
inc
hlt
stos
mov
ljmp
or
mov
or
sub
sbb
bound
jae
xor
push
push
dec
dec
add
shrl
loopne
jp
imul
and
inc
popf
cli
and
les
mov
rorl
inc
and
or
sti
filds
pop
lods
mov
jb
jge
add
push
add
sarb
test
adc
lods
ljmp
and
push
mov
lahf
data16
mov
dec
pop
enter
inc
or
ss
and
and
jno
std
jmp
mov
addr16
inc
iret
xchg
cmp
adc
adc
mov
dec
mov
jno
aam
push
mov
and
jns
dec
sti
into
xchg
add
inc
ret
cmp
dec
cmp
mov
mov
sub
sarb
mov
testl
mov
sbb
test
fcmovb
pop
push
push
push
addl
inc
sub
negl
push
mov
leave
cmp
ret
sbb
mov
stos
cwtl
addl
xchg
mov
mov
leave
mov
mov
mov
fsub
dec
inc
lret
mov
adc
leave
push
dec
xor
dec
stos
adc
dec
mov
dec
mov
mov
pop
insl
pusha
fwait
ds
int
dec
clc
outsl
icebp
mov
or
inc
shrb
adc
shlb
jle
mov
mov
xchg
xchg
inc
add
popl
lods
mov
aas
add
stc
popl
enter
push
cmpb
jb
push
add
lods
xchg
jecxz
xor
movsl
ja
sub
cmp
push
cltd
cld
insb
sub
sarl
or
lret
scas
jl
pop
out
daa
sbb
mov
adc
not
jns
and
or
mov
ss
fs
stc
adc
outsb
fucomip
mov
movsl
push
and
jmp
push
xchg
mov
mull
sahf
fwait
mov
jbe
or
inc
dec
mov
cld
cs
pusha
out
mull
fists
lods
pop
icebp
inc
xchg
inc
rclb
cli
sub
sbb
xor
sub
mov
xchg
movsl
mov
bound
out
fisttpl
je
xor
jne
rcrb
je
out
jp
test
dec
jle
rcrl
jbe
fmuls
mov
lret
addr16
pop
adc
dec
aad
pop
outsl
mov
mov
inc
and
punpcklbw
scas
aad
inc
xchg
sbb
idivb
into
movsl
enter
lods
adc
pop
fadds
aam
xor
stc
fdivrs
adc
and
outsl
mov
adc
and
xor
outsb
gs
jg
lods
cld
pusha
ja,pt
cmp
mov
xor
pop
cmp
test
sbb
cmp
or
jb
dec
pop
xor
jge
xchg
insb
add
mov
mov
mov
mov
mov
inc
sub
xchg
mov
and
push
in
imull
xor
in
aaa
iret
out
js
push
mov
cmc
or
xchg
imul
jle
shrl
pop
ljmp
in
xor
sub
leave
test
scas
sub
push
or
pop
lahf
fisubrl
popf
mov
xor
flds
sbb
mov
pop
imul
adc
sti
movsb
cmpl
jb
mov
lea
popa
in
das
mov
adc
xchg
jmp
add
lock
dec
pop
xor
adc
and
aad
stc
rcll
cmpsl
std
sahf
inc
or
arpl
push
pop
ret
xor
lods
pop
pop
push
jnp
out
je
adc
nop
mov
andb
push
adc
pop
in
stos
pop
pop
rclb
push
jbe
mov
and
inc
add
jne
fisubrl
xor
loopne,pn
pop
inc
pop
pop
dec
sbb
out
add
mov
rcl
fmull
nop
jp
xchg
jl
dec
pop
jmp
pop
stc
ror
inc
xor
popaw
ret
mov
arpl
jae
pop
cmc
or
mov
movsb
add
cmp
in
fildll
sbb
mov
pop
mov
jns
and
dec
imul
ljmp
xchg
or
cmc
inc
xchg
and
je
xchg
jnp
pop
cmp
push
je
fmul
ror
cli
lcall
sbb
shrl
enter
pop
mov
mov
sti
jbe
mov
cmp
mov
ret
mov
pop
lds
repz
fsubs
dec
pop
mov
cmp
iret
lcall
sahf
sti
rol
cmp
or
mov
xchg
and
in
mov
xchg
pop
mov
inc
inc
cmpl
lcall
mov
imul
popf
imul
pop
subb
ret
data16
icebp
xor
gs
sbbl
scas
sbbb
repnz
mov
xor
pop
fadds
les
cltd
cmpsb
loop
cltd
bound
shlb
es
cmpsl
inc
shrb
mov
imulb
sbb
movsb
jmp
pop
lds
int
sub
setp
mov
cmp
sbb
mov
mov
push
pop
lock
push
add
cmpsb
inc
pop
js
inc
xchg
pop
sub
in
sub
insl
lods
jne
adc
lds
shl
in
jge
xor
adc
das
xchg
popf
ds
mov
rorb
sub
ljmp
inc
sbb
aam
jae
mov
in
mov
shr
or
jno
fisubrs
fiadds
xchg
sbb
mov
or
adc
loop
xchg
push
outsb
into
jecxz
jecxz
pusha
bound
fldenv
xor
js
inc
push
outsl
add
fildl
lea
ret
fcomps
pop
into
arpl
xchg
mov
nop
inc
sbbl
nop
cmp
jecxz
sub
out
inc
pop
in
fbld
sub
enter
xor
pop
mov
mov
mov
add
bound
push
cmp
inc
in
lods
out
stc
sar
add
popa
div
pop
fwait
or
rcr
dec
idiv
sub
incl
and
data16
rcrl
dec
jp
push
xor
cmp
stos
adc
int3
call
dec
mov
sbb
push
pop
int3
outsb
nop
jecxz
cmp
dec
jnp
fsub
mov
nop
pop
xchg
mov
mov
add
mov
sbb
push
stos
xchg
inc
and
jle
pop
lahf
cmp
push
or
cmp
rol
xlat
sbbl
pop
in
lea
rolb
inc
repz
xchg
je
lds
inc
add
and
pushf
inc
sub
sbb
add
xlat
rcrb
rol
in
jle
xchg
fwait
mov
xor
jg
and
inc
andb
pop
movsl
aad
add
aaa
dec
testb
jmp
dec
or
testl
dec
lds
lret
movsl
mov
or
and
sub
jbe
sub
test
mov
les
cwtl
jns
pop
in
cld
arpl
jl
xchg
sbb
adc
jne
std
scas
xchg
mov
pushf
mov
fsubl
or
mov
pushf
ja
pop
icebp
jge
cmpsl
outsl
ljmp
lds
xor
fbld
mov
in
pop
fwait
out
adc
jl
sbb
mov
mov
fs
mov
idiv
inc
test
mov
sub
fwait
add
imul
add
fcoml
sbb
mov
fstpl
inc
mov
push
ljmp
jle
xor
test
fwait
fwait
pop
inc
test
jp
dec
std
addb
or
cmpsb
aaa
cmp
ret
mov
sahf
int
ficomps
xor
je
inc
dec
leave
add
cmpsb
sub
xlat
pusha
stos
icebp
xchg
cwtl
or
add
adc
jecxz
mov
mov
test
mov
subl
xor
jmp
pop
and
or
or
mov
push
inc
mov
dec
add
xchg
sub
pusha
mov
mov
lods
xchg
movsl
popf
test
fwait
out
xor
jns
xchg
mov
cmp
js
dec
xlat
add
jno
sahf
adc
adc
push
es
stc
and
jecxz
push
jns
in
xchg
enter
fcomps
les
sti
scas
add
jb
scas
push
lea
cmpsl
jbe
psraw
leave
and
bound
xchg
and
sub
push
and
sbb
xor
movsb
dec
cmp
xchg
dec
sahf
cs
inc
loope
jo
popf
mov
jge
lds
pop
xor
stc
pop
pop
pushf
shrb
mov
addr16
or
or
push
add
pusha
mov
cmp
cli
aaa
or
sar
jno
popf
mov
adc
mov
stc
sahf
jnp
cmp
mov
shll
xchg
xor
inc
inc
mov
sub
xchg
or
ret
add
and
lret
push
or
adc
adc
dec
sbb
js
xor
fistpll
das
ret
and
mov
lods
jmp
inc
cmp
data16
faddl
jo
out
xchg
mov
mov
sub
jno
and
leave
mov
lock
xchg
movd
jmp
dec
mov
xchg
mov
lock
lret
pop
scas
cmp
mov
mov
stos
dec
inc
mov
mov
das
arpl
movsl
xlat
fs
leave
xchg
movsl
inc
mov
popf
mov
lret
in
mov
sbb
rcll
rorb
out
xchg
mov
or
iret
in
mov
arpl
mov
xchg
test
mov
jnp
mov
inc
aas
aam
cld
jno
xchg
and
lea
sbb
mov
imul
mov
into
sarl
loope
pop
xchg
push
cmp
popa
sbb
lret
mov
cmp
aas
push
jbe
mov
mov
pusha
ss
and
mov
scas
dec
inc
jg
or
inc
pop
pop
or
jmp
pop
out
icebp
sbb
sub
xchg
push
imul
pop
sbb
pop
inc
dec
fiaddl
xchg
ret
pop
sbb
inc
and
mov
ret
imul
xchg
jl
mov
xorl
sbb
pop
push
mov
xchg
sub
xor
aaa
js
int3
out
push
or
out
mov
jne
mov
jb
jns
inc
cmp
adc
mov
js
cmp
mov
jecxz
or
jne
and
and
and
ja
pop
dec
jl
imul
imul
inc
movl
pop
or
fists
push
fldt
xchg
mov
aaa
cmpsb
repnz
adc
rolb
pop
out
add
in
or
pop
lahf
rcll
out
pushf
add
arpl
je
stos
jmp
out
in
inc
inc
lds
or
push
cmp
xor
inc
sbb
sbb
test
fiadds
and
out
cwtl
scas
jecxz
sbb
daa
cmpsl
cmpb
ja
out
ljmp
adc
dec
cs
dec
mov
dec
push
lcall
dec
les
pop
cli
add
jbe
lcall
clc
jne
lret
lds
orb
adc
flds
js
cli
rcrb
stos
data16
dec
lahf
pop
push
into
rcll
icebp
leave
js
nop
imul
xchg
push
imul
push
ss
nop
push
xchg
fcomps
xchg
mov
lret
test
popf
and
pop
outsl
jg
inc
and
iret
into
and
push
cs
shrb
pushf
xor
or
aaa
adc
in
fscale
fimuls
stc
dec
ljmp
sbbl
dec
sti
dec
jmp
in
mov
and
lods
dec
imul
fisttpll
push
nop
test
push
push
fwait
lret
outsl
pop
mov
jmp
or
mov
ss
std
xor
and
mov
mov
or
out
cmp
cmc
dec
loop
ja
xlat
mov
cmpsl
xor
ror
jmp
jge
mov
in
adc
ja
shl
pushf
mov
sahf
lret
lret
mov
jb
cli
enter
xor
and
mov
dec
jmp
mov
imul
int3
mov
in
fs
cli
xchg
jg
f2xm1
fmull
mov
addr16
xchg
xchg
xor
int3
sbb
ds
aaa
jp
adc
leave
xchg
lret
cmp
addr16
jge
mov
jae
scas
repnz
andb
int
js
xor
xor
jno
mov
int3
add
jp
push
stos
jp
xbegin
fisttpll
xchg
jo
mov
or
out
add
sub
das
lock
fisubl
pop
and
xlat
loopne
push
add
mov
mov
sub
cmp
xchg
aaa
jp
scas
es
fiadds
dec
pop
ljmp
push
out
in
add
mov
jecxz
inc
repnz
pop
insb
push
sub
jge
out
sbb
arpl
xlat
ja
stc
adc
mov
cmp
stos
mov
push
mov
ja
push
sbb
mov
sti
sbb
xchg
lock
clc
push
mov
jno
flds
mov
mov
dec
xchg
ret
aaa
xor
ficoms
and
pop
or
scas
testl
sbb
pop
cmp
jmp
cmp
daa
sahf
aam
mov
mov
or
push
inc
test
popf
pop
cmp
dec
xchg
mov
and
and
adc
pop
sub
cmpsb
mov
lea
cs
pop
adc
pop
call
out
pop
pop
sbb
jns
sbb
push
lds
jo
jne
fcmovnu
sbb
addr16
test
and
push
ds
xchg
sbb
call
repnz
adc
mov
dec
das
and
push
in
loop
aad
jb
insl
lods
leave
mov
sub
cli
repnz
pop
push
pop
dec
popa
sbb
dec
inc
pop
jo
sbb
cmp
xchg
test
pop
or
jg
pop
sbb
or
xchg
xchg
jbe
pop
xchg
popf
cmp
lds
popa
repnz
pop
iret
andb
in
fwait
cmc
scas
add
mov
cwtl
and
mov
xchg
push
or
sbb
pushf
es
sbb
ljmp
ja
sti
sbb
add
stc
popa
daa
dec
clc
inc
loopne
mov
sbb
push
xchg
cmp
out
outsl
je
fisttps
sbb
imul
std
lea
cmp
sahf
jg
cmp
fwait
stos
lret
mull
ja
mov
negl
and
mov
lock
stos
les
mov
sub
aaa
mov
js
mov
dec
ret
repz
imul
ret
lods
push
jp
cmp
mov
lret
clc
sti
subl
jmp
fstpt
dec
jns
mov
lahf
loope
mov
in
unpcklps
outsl
and
test
jle
pop
test
push
xchg
xchg
dec
xor
notl
mov
push
jae
sbb
cmp
inc
and
push
into
fwait
add
pop
xor
popf
add
stos
js
inc
adc
push
push
or
es
or
push
push
sahf
xchg
hlt
sub
jne
cmpsl
pop
xchg
scas
mov
cltd
and
cmpsb
clc
int3
mov
add
inc
xchg
dec
stos
and
and
xchg
pop
pop
adc
mov
shr
mov
or
test
fmulp
in
in
mov
dec
out
mov
pop
sti
inc
jo
jle
lret
ljmp
pop
push
int3
cmp
div
mov
rcrb
jmp
or
std
jg
imul
pop
add
or
in
push
jecxz
cmpb
ret
fadds
xchg
mov
jae
lock
pop
shll
aad
xor
push
int
in
or
add
mov
jns
outsl
push
mov
call
xchg
dec
inc
dec
adc
aaa
nop
aad
or
xor
xor
andl
sub
cli
push
sti
sbb
mov
ss
sub
test
leave
roll
sbb
ss
shll
lret
scas
jbe
inc
adc
mov
mov
ja
mov
enter
mov
in
xchg
bound
dec
dec
shr
scas
mov
mov
leave
hlt
fisttps
pop
dec
ljmp
fsubr
sbb
push
iret
or
jns
adc
xchg
out
fistl
push
xchg
sub
outsb
adc
pop
js
push
pusha
mov
pop
mov
push
adc
daa
jecxz
addl
aad
mov
test
cmp
cltd
cmp
push
movsl
hlt
aaa
jmp
out
add
adc
dec
je
imul
test
std
mov
addr16
mov
mov
orb
or
aaa
cmc
push
sbbb
dec
sti
adc
mov
jl
in
scas
pop
inc
adc
jae
cli
ljmp
cmpsl
iret
movsl
sub
fcompl
jp
aas
mov
and
jns
mov
cmpsb
push
mov
push
aaa
mov
dec
sarl
xchg
mov
sub
daa
push
repnz
mov
fdivrl
jnp
push
pusha
jae
call
aad
dec
stos
inc
int3
adc
sbb
int
aam
js
icebp
enter
ja
into
mov
add
pop
mov
or
repnz
xor
inc
filds
mov
mov
pop
fs
inc
pop
in
mov
mov
ret
lret
addb
movsb
mov
dec
sbb
mov
rclb
and
push
dec
imul
xchg
jne
das
ds
rclb
cltd
movsb
fsts
sbb
movsb
add
dec
int3
imul
sbb
add
cmpsb
cwtl
mov
cmpl
jno
pop
dec
add
jg
cmpsb
fucomi
or
or
xor
pop
inc
fwait
sbb
dec
mov
jg
push
sahf
inc
jnp
xor
pop
rcll
aam
pop
cmp
mov
movsb
and
mov
sub
enter
mov
mov
pop
sbb
sub
leave
xor
add
movsl
push
mov
pushf
mov
cld
dec
fistl
in
test
mov
sub
into
adc
in
sbb
cs
dec
xchg
pop
xchg
test
cwtl
cmp
cmpsb
mov
rclb
mov
loope
cmp
sahf
push
pop
mov
jae
mov
jnp
push
mov
pop
mov
xor
ret
ja
cltd
cmp
lds
sarl
cmp
test
fs
jg
pop
sbb
ljmp
jne
in
push
das
test
sbb
jmp
or
mov
rcrl
mov
mov
push
dec
insl
dec
lods
addb
out
jmp
dec
je
int
xchg
xchg
adc
sub
push
rcrb
and
mov
xchg
inc
push
and
xchg
xor
dec
imul
push
leave
pop
ds
jb
mov
lods
push
jns
shlb
jnp
mov
dec
inc
add
subl
stos
or
jbe
fwait
mov
mov
xchg
in
lcall
sub
lcall
xchg
push
stos
sbbl
push
push
inc
fs
pop
cli
int3
mov
push
hlt
inc
mov
xchg
sub
mov
rol
and
xchg
or
xchg
pop
cmc
lret
pop
ljmp
xchg
insb
cld
enter
adc
mov
shrb
cmp
icebp
add
pop
xchg
add
ficompl
mov
std
sub
lods
mov
xlat
pushf
scas
push
lds
cltd
adc
cwtl
jb
sar
push
add
gs
jnp
out
mov
in
mov
fistps
ret
mov
ret
lret
cmp
pop
mov
jnp
pop
inc
pop
inc
jle
jl
into
jbe
test
push
cmpb
stos
adc
xor
mov
adc
jae
jbe
hlt
xor
add
pusha
add
lock
jne
and
lcall
cs
mov
mov
leave
je
inc
pop
and
pop
mov
pop
in
xchg
xchg
fldcw
pop
adc
lods
sbb
sti
icebp
cmp
fwait
jo
mov
cwtl
or
leave
popf
and
neg
xor
push
jo
rcl
stc
add
push
jo
mov
or
add
push
movsl
adc
jne
dec
cmp
pop
and
in
rdtsc
mov
sub
and
insl
gs
notl
cmp
xor
sub
pop
es
cmc
fisttpl
lcall
mov
rcr
xchg
movsl
xchg
rorb
rcrb
lods
pushf
jno
jmp
jns
in
arpl
sbb
ret
loope
cmp
sar
cld
or
xor
imulb
stc
rolb
sub
movsl
sbb
add
jecxz
imul
pop
xor
jecxz
in
arpl
fisttpll
jnp
js
movsb
xchg
dec
jmp
mov
adc
mov
inc
lea
loopne
xlat
rorl
mov
in
lods
sbb
outsb
or
inc
adc
pop
push
push
xor
loop
scas
dec
push
int
mov
add
or
jo
dec
jbe
mov
popf
loopne
fsub
push
push
cs
out
sub
sbbb
sub
loop
xor
mov
aaa
sbb
test
and
int
and
cwtl
clc
aas
push
test
arpl
pop
inc
dec
mov
sub
inc
enter
dec
jo
mov
xchg
jb
mov
clc
dec
or
int
pop
and
cmp
jge
push
push
ret
xchg
pop
or
xchg
icebp
push
jecxz
xchg
push
in
pop
inc
and
fsubs
inc
push
jle
popa
inc
ja
bnd
divl
cld
bound
imulb
xchg
or
xorb
push
aad
das
cli
shll
out
fwait
jge
xorl
push
filds
clc
mov
sbb
scas
iret
aas
mov
mov
mov
pop
inc
mov
jl
mov
stc
xchg
mov
lahf
popa
cmc
pop
push
pop
xchg
lahf
out
pusha
je
dec
filds
xor
test
outsl
pop
in
add
cmp
ret
cmc
ss
addr16
dec
shrl
sub
pop
xor
clc
fidivrl
test
je
stos
push
cltd
pop
inc
lock
xchg
mov
add
inc
mov
rorl
sub
sbb
cmp
icebp
mov
in
xor
pusha
adc
adc
and
inc
lods
jmp
sbb
aaa
ljmp
jbe
mov
addr16
rorl
cmpsb
test
mov
enter
cwtl
mov
inc
stos
sub
sub
xor
lcall
leave
call
mov
jno
dec
enter
sub
insb
out
mov
pop
ss
mov
or
ror
push
test
push
jecxz
and
add
inc
mov
inc
xor
mov
adcb
mov
out
xor
aad
pop
scas
jno
in
push
mov
xchg
dec
push
mov
int3
sbb
pop
stos
insl
mov
inc
loopne
push
scas
daa
xchg
dec
or
adc
jge
fucomip
sbb
push
cltd
mov
scas
push
lahf
fisubs
movsl
sbb
mov
dec
ja
sahf
rolb
aas
sbb
lret
add
out
out
push
pop
cmp
ret
inc
jne
leave
sub
pop
mov
leave
jecxz
test
push
or
push
mov
aad
xor
xchg
sbb
bound
jge
pushf
xchg
jns
cmp
movb
stc
clc
loopne
and
xchg
pop
bnd
stc
add
sbbl
je
sbb
into
ljmp
mov
adc
hlt
sub
xchg
bound
jbe
xchg
mov
xchg
xor
dec
pop
iret
xor
fwait
jnp
adc
push
daa
sub
jmp
mov
out
jb
mov
inc
jecxz
sti
add
cld
mov
movsb
sub
mov
mov
sbb
add
xor
or
inc
gs
loope
aam
sar
loop
xchg
scas
pop
sub
cmp
movsl
xchg
lds
mov
hlt
or
in
imul
cltd
mov
out
mov
push
fisttpll
dec
sub
aaa
push
enter
add
stos
jne
in
xor
pop
adc
decb
or
or
xchg
out
pop
xchg
sub
pop
rorb
cmp
pop
mov
das
mov
push
roll
pop
cmp
scas
and
mov
adc
jp
test
loopne
divl
inc
dec
aas
fcmovnu
fwait
sahf
test
push
push
xor
mov
cmp
mov
push
jle
sbb
ret
cmp
push
jo
mov
fsubrl
or
xor
cwtl
and
add
loopne
pop
loopne
lret
pop
pop
lcall
mov
lods
aaa
out
cli
aam
mov
inc
in
inc
dec
ficoml
push
cmc
std
mov
stos
stos
cmovns
sub
sar
cmpsl
and
sbb
loope
in
pushf
pop
popf
subb
and
les
pop
push
push
dec
ret
cmpsl
mov
xchg
std
sbb
mov
sub
testb
xor
cmp
pop
nop
mov
ljmp
cmovns
jge
jnp
mov
push
cwtl
dec
jle
push
popa
fcoml
js
push
in
loop
pop
push
xchg
lret
or
jne
or
nop
fistps
and
xchg
pusha
push
jbe
fs
push
sub
divl
aad
pusha
lods
and
adc
daa
jecxz
and
fnsave
nop
loopne
sub
or
sarb
rorb
hlt
popa
or
mov
lds
pop
adc
mov
popa
sarl
xor
pop
daa
stos
add
in
fsubl
jnp
mov
adc
fisubrs
mov
xchg
out
in
inc
or
xchg
rorb
push
mov
pop
in
imul
inc
imull
fcoml
call
insl
test
adc
stos
and
sahf
aam
inc
outsb
xor
lds
lea
sub
mov
cli
sti
mov
mov
std
dec
xor
jnp
cli
in
je
xchg
test
sbb
negb
cmp
sbbl
mov
xchg
iret
dec
inc
push
sub
sub
dec
xchg
dec
inc
xor
xchg
xchg
loope
and
cmpsb
push
sbb
pop
and
mov
push
lock
sbb
test
push
and
cmp
bound
dec
pop
sub
push
dec
adc
pop
add
cmpsl
sub
aaa
add
pop
dec
mov
out
lret
push
in
sub
lds
mov
cmpsl
fmul
mov
jae
popf
test
and
and
xchg
cmc
pushf
je
out
nop
orl
imul
xor
scas
fwait
mov
push
mov
fisubs
adc
xorl
nop
es
jno
repz
rcr
inc
add
mov
xorb
dec
aas
std
jg
popa
add
mov
jbe
cmp
fwait
cltd
mov
fisttpl
mov
out
stos
idivb
dec
pop
addl
jle
jno
je
push
dec
inc
popa
pop
jg
sub
lds
or
fsubrs
mov
sahf
add
add
pop
das
add
ss
push
leave
xchg
jp
negb
js
movsb
inc
scas
loop
leave
iret
les
les
push
add
test
inc
sub
fistpl
subb
addr16
repnz
push
add
lret
lods
add
mov
push
dec
push
sub
add
lds
mov
insl
push
out
js
aam
popf
cmp
popa
ret
test
add
lods
pop
out
dec
dec
cmp
aaa
mov
test
pop
je
cmc
loope
cmp
sub
mov
sub
pop
pusha
clc
loopne
mov
lods
aas
mov
fisttpl
jl
push
repnz
cmpsb
loop
aam
sub
xor
or
cltd
mov
sub
mov
mov
aad
and
adc
pop
lds
fsts
pusha
inc
icebp
cwtl
loop
xchg
inc
or
jae
sbb
test
xchg
add
cmp
xor
mov
jnp
xor
loope
sbb
addb
and
insb
dec
adc
adc
sbb
xchg
and
jno
jno
mov
jns
jle
xor
addr16
data16
inc
movsb
out
xchg
push
std
in
insl
push
push
movsb
sahf
loopne
rorb
and
lds
addl
shr
push
and
cmp
repz
sbb
push
mov
inc
clc
mov
pop
xchg
lea
lds
fsts
outsl
cld
movsl
hlt
fwait
mov
add
in
pop
icebp
push
test
dec
inc
int
jnp
inc
test
movsb
dec
scas
hlt
rcrb
addr16
lods
in
icebp
mov
outsl
je
ret
mov
daa
ja
aas
xor
xchg
pop
add
dec
jne
sarb
jmp
sbb
dec
popf
or
testl
les
pop
push
push
cltd
insb
pop
vsubpd
jns
sub
loop
xor
pop
sbb
int
pop
add
pushf
add
push
jp
xchg
ffreep
aad
adcl
cmp
xchg
stos
dec
push
sub
sbbb
pusha
jne
xchg
fucomip
cmpsl
fwait
lret
lock
xchg
clc
out
cs
mov
js
cmc
stos
push
or
in
jns
add
popa
sbb
divl
addr16
lods
xchg
inc
out
es
subps
insl
add
je
lds
test
xchg
xchg
jl
and
mov
mov
stos
cmp
fcmovu
pop
mov
and
mov
dec
sahf
bound
sub
das
sahf
gs
mov
xchg
fstps
imul
cmp
push
add
leave
inc
fcoml
dec
loope
mov
sbb
pop
inc
rcrb
popa
push
sahf
jl
and
mov
jmp
add
repz
out
test
mov
cmp
enter
test
test
mov
and
inc
push
adc
ja
aam
dec
jg
js
mov
xor
dec
dec
push
dec
pushf
bound
add
jnp
ror
scas
out
xor
into
push
lea
cld
mov
pop
in
and
imul
loop
jl
scas
lock
cltd
inc
adc
out
scas
xchg
outsl
xor
mov
negb
jb
push
dec
pop
fdivrl
mov
aas
or
mov
jb
leave
cmp
push
out
cmpsb
pop
aas
loop
adcb
into
dec
dec
into
xchg
mov
jecxz
rolb
rorb
into
cmp
stos
add
push
pop
pop
addb
cmp
stos
and
and
out
mov
or
imul
sbb
or
push
cmp
cld
inc
or
pop
mov
loope
and
fildll
shll
adc
mov
xchg
scas
icebp
aam
add
dec
push
xchg
and
ret
out
jl
adc
add
push
into
xchg
mov
mov
pop
fnstcw
lcall
mov
test
pop
into
das
jg
scas
sub
xor
mov
adc
scas
std
push
xor
adc
cld
paddusb
mov
sub
aam
mov
or
push
mov
adc
xchg
lret
outsb
push
mov
sti
dec
fnstenv
pop
in
dec
mov
repz
lahf
mov
xchg
inc
in
cs
lods
xchg
cwtl
mov
jo
inc
lods
ret
ja
push
jno
sbbl
imul
pop
or
sbb
mov
sub
or
hlt
test
bound
je
push
jmp
cwtl
aas
fnstcw
xor
push
out
sarb
mov
dec
cli
push
lea
fdivl
int3
cmp
xchg
test
ja
mov
xchg
call
sbb
push
mov
orb
push
adc
rolb
mov
mov
scas
mov
dec
out
loopne
jecxz
jbe
fidivs
sti
pop
mov
dec
xorl
lock
aas
push
jg
fstp
daa
pop
jl
xchg
push
test
adc
inc
sahf
mov
out
sbbl
data16
adc
lock
push
xchg
mov
jmp
jno
movsl
icebp
cmc
mov
aad
adc
insb
add
pop
je
fmuls
cmp
out
into
testl
push
pop
mov
or
xor
insl
rorb
jg
in
aam
cltd
sarl
test
mov
popa
mov
mov
into
dec
lcall
inc
sub
aas
mov
jbe
iret
mov
pop
icebp
xor
arpl
and
dec
call
xor
fldl
pop
push
jno
lock
sub
daa
stc
inc
clc
in
xlat
in
or
and
push
or
cmp
mov
rol
pop
stos
fstps
loope
inc
adc
loope
sub
sbb
pop
inc
loopw
jge
sbb
pushf
push
imul
mov
sub
push
adc
xor
jg
mov
ss
cli
pushfw
jnp
sub
mov
cmp
jne
push
sti
cwtl
ja
xchg
push
push
cmp
pushf
mov
xchg
push
rcrb
push
repz
mov
and
fwait
dec
mov
shrb
std
icebp
sub
daa
add
jnp
imul
enter
inc
addl
test
in
sub
sub
rol
pop
mov
mov
sub
pop
mov
jmp
jbe
mov
jmp
lods
mov
sub
lea
subl
xchg
mov
test
sti
jno
mov
call
mov
cmovns
or
mov
outsl
and
add
aaa
and
push
push
adc
and
inc
ss
inc
xchg
add
cmp
adc
stc
dec
aad
addr16
inc
xorl
or
insl
sub
dec
add
adc
inc
popf
neg
cmp
pop
sbb
xchg
mov
mov
cmp
jmp
int
pop
aad
imulb
test
xchg
rclb
jp
fcoml
pop
imul
jbe
enter
jmp
arpl
gs
or
mov
cmp
ds
ret
ja
nop
call
or
div
into
sbb
mov
add
inc
and
ds
mov
mov
xor
movsl
cmc
arpl
adc
shlb
or
inc
xor
and
cltd
dec
movsb
lock
mov
jnp
pop
or
imul
add
mov
les
kandb
and
adc
aaa
enter
fisubrs
xor
outsl
lods
fs
pop
mov
cmp
push
sahf
clc
mov
mov
mov
lahf
ret
dec
pop
movb
in
ss
push
scas
stos
shll
fwait
inc
cld
jae
cmp
mov
idivl
fsts
pop
aad
push
or
inc
test
out
sub
imul
cltd
sub
orb
pop
outsb
add
dec
jg
pushl
xchg
xchg
popa
andl
in
mov
cmp
push
pop
inc
or
cld
jg
mov
sub
adc
inc
rorb
dec
or
imul
sbb
fldl
dec
xor
push
lods
xor
enter
cs
or
cli
sub
dec
inc
or
repnz
ja
icebp
cmc
fdivrl
add
mov
cmp
aaa
pusha
dec
lcall
sub
jb
popa
out
dec
sahf
and
repz
pop
jne
test
pop
inc
push
mov
mov
dec
mov
in
and
mov
dec
fisttps
dec
or
ret
lret
mov
dec
popa
inc
push
ljmp
test
into
lods
dec
sbb
inc
movsb
leave
rcll
mov
test
pushf
add
xchg
jno
or
mov
xor
adc
scas
jle
xchg
push
dec
xchg
outsl
rep
xchg
jb
inc
sbb
cmp
xlat
insb
and
push
int3
push
dec
stos
test
pop
adc
sbb
pop
mov
out
push
push
insl
addl
xor
cmp
mov
ja
cmp
das
pop
aad
jle
iret
rcrl
lahf
jbe
pop
es
aaa
test
and
dec
mov
xlat
call
sbb
push
fwait
xchg
pop
popa
cmpsb
xor
insl
sti
or
mov
dec
dec
test
loopne
pop
cmp
pop
lret
pusha
mov
call
pushf
xchg
orl
sbb
cltd
int
dec
daa
leave
es
mul
and
test
out
push
pop
scas
mov
mov
adc
negl
out
call
xor
dec
aam
sbb
outsl
ficoms
outsb
jp
js
xchg
sbb
mov
icebp
sub
lock
and
push
sbb
int
fists
ret
repz
or
or
adc
call
out
inc
clc
and
mov
add
in
mov
loope
leave
add
out
push
cmc
jno
imul
cs
adc
and
test
jle
mov
dec
pop
in
scas
in
icebp
sub
push
push
sub
js
ret
outsl
xchg
insb
pop
xor
repz
jmp
arpl
leave
xchg
lods
xor
dec
mov
pop
shlb
pop
xor
leave
stos
shll
jecxz
inc
jg
jle
and
xor
dec
sbb
aad
jns
movsb
loopne
jns
aam
cld
jns
inc
mov
jns
dec
call
jp
inc
arpl
nop
lret
push
ljmp
cli
mov
ds
dec
and
lret
add
inc
lds
push
xchg
lret
xor
test
jp
cmpsl
pop
push
inc
sbbb
pop
es
out
add
out
push
jns
or
jmp
mov
out
cwtl
dec
adc
movsb
cmp
movsl
add
popf
jnp
jmp
inc
sbb
pop
pop
les
cltd
popf
xor
arpl
inc
adc
pop
mov
add
sbb
pop
into
loop
je
mov
pop
mov
je
or
aad
lcall
pop
or
xchg
pop
fimuls
cltd
std
inc
pop
fwait
dec
pop
mov
int
add
andb
les
es
js
push
add
xlat
and
imul
push
mov
inc
sti
insl
in
pop
xchg
push
push
mov
pop
pusha
add
or
mov
int
mov
dec
sbb
mov
sbb
ficoms
add
mov
add
mov
shl
sbb
push
xchg
sahf
addr16
dec
mov
ret
mov
test
sub
stc
ja
push
leave
cmp
and
into
pop
cmc
rcrl
aad
add
cmpsb
movsb
push
xor
pop
inc
mov
ret
xchg
sub
and
pop
pop
jns
cmc
imul
clc
sub
and
popf
ja
enter
add
dec
or
setbe
test
outsb
add
aam
xchg
and
imul
dec
icebp
dec
sti
ds
mov
mov
cs
shr
and
cltd
sbb
inc
in
dec
popf
sub
push
xor
clc
mov
push
in
into
mov
push
add
xchg
adc
cmpsb
and
mov
lea
movsb
bound
sarb
xchg
lea
daa
shlb
mov
test
mov
sub
adc
dec
fnsave
mov
dec
inc
cmp
cmpsb
test
sbb
or
out
arpl
call
jno
and
add
or
jp
jno
adc
ljmp
sub
mov
xchg
push
imul
xchg
adc
out
lret
out
cwtl
push
in
adc
sub
test
scas
sub
or
and
lods
insl
pop
mov
cmc
add
dec
rep
jl
or
inc
push
jb
aad
mov
lea
mov
sub
push
sub
repnz
xor
stc
pop
lret
shll
test
xchg
dec
xchg
dec
fmul
stos
push
push
stos
mov
push
lods
pop
jle
cmpsb
mov
dec
jp
cmp
sbb
stos
push
xchg
sbb
int
jmp
jle
test
mov
ret
sbb
mov
decl
pop
xchg
aaa
stos
int
xlat
imul
out
add
les
jecxz
sub
out
imulb
inc
popa
sub
sub
imul
push
or
mov
movsl
clc
or
cmp
dec
ljmp
jmp
xchg
sub
jge
cmp
xchg
dec
mov
icebp
xlat
sub
andl
es
jns
or
jo
lret
enter
sti
jno
pushl
and
jbe
cs
cmpsl
xor
rcll
ffreep
add
sti
or
push
mov
fldln2
mov
loope
cmpsb
in
cmp
not
xchg
stc
sbb
sub
jns
in
faddp
fldenv
adc
xchg
adc
jl
pop
or
es
imul
shrb
add
add
loop
dec
xchg
mov
jmp
or
in
pop
sub
iret
push
sbb
push
mov
pop
repz
mov
push
insl
cli
sub
cmpsl
sub
sarl
jae
and
xor
xchg
dec
or
mov
dec
rcrl
adc
lods
icebp
or
icebp
popa
ss
xchg
xchg
inc
pop
bound
or
les
push
dec
cs
fsub
call
dec
inc
cld
lcall
mov
pusha
push
imul
xchg
std
or
imul
sbb
insb
test
out
outsl
adc
ja
cmpsb
lret
fisubrs
lret
push
xchg
gs
rcll
fsubl
push
push
push
pop
push
subb
ja
pop
adc
xchg
int
pop
rcrb
xor
or
mov
pop
xchg
push
js
sub
dec
sbb
test
out
int3
ret
lret
dec
cmpsb
lret
push
mov
xlat
mov
out
in
xchg
test
push
jne
inc
lods
push
jmp
mov
lods
add
xlat
or
es
jl
pop
dec
sbb
pushl
sub
psrad
sti
punpckhdq
mov
xchg
jg
mov
cmpsl
jo
sbb
inc
push
int3
add
incl
sub
test
in
stos
out
loope
jnp
sbb
mov
cmp
out
cmpsb
push
adc
xor
cli
xchg
lods
fists
xchg
test
xchg
or
icebp
cmp
push
mov
lret
jecxz
popf
daa
inc
and
pop
mov
push
adc
imul
mov
mov
xor
xchg
xchg
daa
add
xlat
into
stc
int
mov
jb
push
mov
std
insl
decl
popa
sbb
loopne
movups
add
incl
add
cld
mov
jmp
sti
cmp
ror
pop
mov
out
lods
insl
dec
imul
lods
repnz
mov
mov
lds
sub
jnp
xor
outsb
pop
and
xchg
outsl
pop
dec
lock
sbb
mov
fisttpl
xlat
jne
test
mulb
cmp
ljmp
inc
mov
js
data16
das
jno
dec
xchg
pop
sbb
mov
and
xchg
fisttpll
push
pop
sbb
xchg
mov
and
adc
cltd
jbe
xchg
out
sub
mov
and
stos
cltd
mov
test
xor
push
add
xchg
mov
js
and
pop
mov
mov
xchg
andb
add
in
mov
push
imul
out
inc
sbb
push
push
sbbb
dec
test
imul
movsl
shrl
mov
sbb
shll
xlat
jns
fdivl
out
pusha
sbb
inc
loopne
hlt
out
int
xor
cmpsb
in
sub
arpl
mov
hlt
jecxz
xor
aam
int
aas
sub
ret
lret
ja
fdivrs
push
add
aas
pop
push
popa
dec
test
cld
sbb
jns
repnz
sub
orb
fidivrs
dec
adcb
es
and
mov
or
insl
xchg
fistl
lret
inc
mov
fisttpl
pop
sbb
enter
mull
aaa
dec
out
or
adc
xchg
mov
mov
icebp
mov
sub
jnp
ss
xor
cmp
imul
dec
daa
ja
stos
or
js
lcall
shlb
cmp
add
jno
outsl
mov
mov
dec
lds
divl
cs
roll
push
stc
pop
push
test
enter
mov
sbb
push
pop
imul
sarb
adc
xchg
pop
sbbb
daa
push
xor
test
sub
or
sub
je
sbb
push
and
add
push
ficomps
fsubrs
out
stos
pop
mov
mov
mov
lret
mov
push
mov
pop
movsb
cltd
pop
or
test
cmc
jne
add
vpavgb
and
sbb
fstps
insb
xlat
fisubl
enter
jae
and
inc
xchg
xchg
sub
sbb
sub
push
sbb
adc
sub
mov
mov
rolb
and
ss
ffree
jbe
les
ret
clc
pop
pop
std
add
sbb
sahf
int
cld
orl
mov
shl
leave
shl
loopne
xor
ds
mov
push
mov
pop
cli
xor
out
mov
push
inc
sbb
mov
mov
push
add
pusha
mov
xchg
cmp
popa
inc
dec
mov
fcoms
jae
test
or
mov
cltd
out
and
sub
test
add
and
test
xor
mov
mov
sbb
cmpsl
or
es
dec
cmpsb
dec
mov
aas
mov
mov
cmp
out
das
testb
pushf
mov
shlb
aaa
sub
jp
dec
push
xrelease
mov
fbld
sbb
push
arpl
jne
mov
push
mov
decl
cwtl
js
add
xchg
hlt
daa
xor
add
lahf
mov
xchg
pop
lahf
ret
xchg
rcrl
pop
cli
pop
xchg
inc
push
mov
iret
int3
hlt
fldenv
insl
jge
adc
aas
daa
push
jecxz
icebp
shlb
pop
mov
outsl
in
jge
adc
mov
pop
out
inc
mov
or
cwtl
inc
sub
in
imul
adc
mov
lret
jo
sbb
out
div
dec
cmpsl
into
les
js
adc
mov
enter
sahf
mov
lods
inc
pop
out
in
sbb
xchg
fwait
dec
pcmpgtd
jl
lds
mov
vpavgb
inc
add
and
inc
pop
add
xor
stos
jge
add
imul
sbb
fucomp
pop
adc
push
stos
dec
leave
mov
mov
stos
rorl
jb
push
fs
cmp
clc
dec
adc
sbb
or
lock
mov
jno
movsb
fistpl
addl
aam
jnp
mov
xchg
cli
fsub
in
jb
xchg
push
enter
add
sub
push
xchg
mull
sbbl
popa
mov
xchg
inc
inc
mov
roll
ljmp
xchg
dec
cltd
adc
jbe
push
popf
sbb
push
fldenv
cmp
mov
imulb
sub
cli
mov
mov
dec
xchg
in
add
mov
adc
xchg
inc
pop
push
int
das
fdiv
movsl
mov
dec
xchg
mov
lods
fnstsw
orl
pop
rorb
fidivrl
xorb
xorl
and
hlt
orb
in
inc
fcomps
inc
and
adc
xor
test
push
fisubrl
mov
and
mov
inc
mov
imul
in
jno
stos
loop
dec
lods
orb
fwait
orb
jne
push
adc
xor
add
pusha
data16
and
xor
fcoml
out
sub
adc
in
jno
inc
or
push
enter
icebp
push
aad
arpl
cmpsb
iret
cmpsl
in
pop
mov
bound
mov
imul
xchg
inc
and
mov
xlat
pop
cmpb
sub
jecxz
ret
repz
popf
adc
sbb
adc
mov
dec
out
jecxz
xor
scas
and
shlb
hlt
mov
sub
sub
ljmp
mov
pop
mov
sbb
insb
lock
push
dec
js
faddl
mov
push
jle
imul
xorl
or
gs
pop
outsl
shrb
xchg
jne
add
dec
cmp
cld
add
pop
imul
leave
lret
xchg
mov
xchg
add
sub
mov
push
popa
adc
jns
jae
mov
enter
xlat
scas
imul
rclb
add
mov
lret
popf
cmp
pop
outsl
lret
mov
mov
xchg
push
movsl
aad
jecxz
mov
pop
mov
fsubl
dec
add
sti
push
nop
ds
add
cs
cli
fcom
loop
cmpsl
aas
push
out
rclb
mov
and
fsts
mov
mov
jp
push
jb
xor
pusha
mov
jle
jl
sbb
loop
sbb
push
or
mov
push
mov
push
fisubrs
das
add
adc
cmpl
pop
mov
je
dec
fsts
jg
fcompl
sbb
js
jge
stc
es
testl
stos
push
jbe
test
push
clc
div
pop
cmpsb
push
adc
mov
xchg
push
push
inc
jp
push
mov
xchg
jmp
rcll
sahf
jge
subb
pop
ficoml
dec
jnp
push
lock
dec
sbb
inc
xor
mov
je
int3
dec
or
mov
outsl
pop
iret
gs
xchg
out
scas
sbb
out
xchg
sbb
inc
sub
jg
xchg
push
js
pop
data16
dec
movsl
rorl
xchg
inc
gs
mov
and
ret
in
es
dec
mov
addl
cmp
push
sub
cmp
les
sbb
push
scas
lahf
mov
adc
ja
mov
cmpsl
in
cli
mov
fisubs
xchg
sbb
jg
loopne
out
xor
or
mov
cmp
push
or
lock
test
int3
cltd
mov
or
loop
movsb
in
rorb
sbb
cmp
mov
xor
popa
inc
jmp
xor
insl
jecxz
push
add
fwait
jl
lods
and
sti
mov
out
mov
into
les
stc
leave
in
xchg
aaa
movsb
sbb
test
es
mov
mov
inc
dec
arpl
xchg
lahf
dec
sti
test
test
sub
jg
ds
xor
ljmp
push
add
push
jg
lock
jecxz
jo
jmp
inc
in
rol
xor
dec
xchg
dec
or
out
pushf
pop
sahf
aam
sbb
lods
adc
loope
push
push
push
movsl
imul
push
in
pop
mov
js
in
les
mov
js
adc
cmp
add
popa
xor
pop
fs
sub
insb
lea
fisubrs
jno
aaa
sbb
add
push
push
mov
inc
es
or
bound
mov
inc
out
int
jo
aam
or
aas
lret
dec
or
mov
dec
and
pop
mov
push
jo
jne
adc
mov
jle
fucom
sarl
mov
popf
sub
xchg
fidivs
jbe
je
push
fwait
adc
lds
je
xor
fisttps
loope
mov
pop
adc
mov
dec
pop
lea
or
sub
mov
or
and
fldcw
stos
inc
repz
push
adc
fstl
jbe
cmp
pusha
push
lcall
mov
lret
scas
mov
loopne
cld
dec
test
into
mov
mov
and
jae
push
int3
pusha
add
hlt
mov
lds
push
dec
cld
sub
sub
sub
test
bound
mov
jno
pop
icebp
sbb
insb
imul
push
mov
sub
int
test
mov
ret
and
xchg
imul
pushf
clc
jnp
mov
adc
ljmp
adc
inc
ds
pushf
dec
cmp
xchg
cld
into
jb
loope
xor
adc
and
add
push
mov
mov
add
addr16
mov
and
ss
xchg
mov
sbb
inc
mov
aas
push
in
ror
lret
xor
int
or
add
neg
int3
sub
outsl
lock
cwtl
cli
mov
popf
lret
dec
int3
adc
dec
mulb
mov
leave
push
fidivrs
addr16
jg
cltd
loopne
jne
add
cld
scas
popf
xchg
pop
in
inc
stos
sarl
jmp
jne
lahf
inc
loopne
jb
inc
mov
pushw
jp
cmc
test
xlat
xor
fwait
loope
jo
fdivp
mov
or
stc
imul
leave
mov
xor
dec
call
mov
bound
aam
adc
push
add
sub
cmpl
fcom
xor
movsb
dec
xor
and
mov
dec
jge
out
push
add
add
and
adc
stc
shrl
test
outsb
loope
pushf
and
inc
je
mov
and
dec
xor
call
test
daa
jl
outsb
xchg
cld
mov
imul
jns
mov
aas
test
push
or
jns
push
dec
xorl
scas
jns
inc
dec
jns
pop
inc
jne
xor
pop
int
xchg
das
mov
movsb
imul
push
data16
sub
pop
jmp
std
arpl
hlt
iret
cmpsl
adc
jo
xor
cmpsb
xor
aas
sub
aaa
mov
cmp
lretw
sahf
in
loop
mov
out
mov
push
dec
in
cmp
in
mov
cmpsl
cmp
xor
lret
ja
or
and
jns
fstl
ljmp
sbb
ds
scas
pop
sbb
mov
jl
jl
jb
sub
ss
ljmp
cmp
jns
push
xchg
popa
ds
sub
or
adc
ljmp
ds
mov
mov
inc
pop
das
in
out
arpl
daa
fmul
bound
div
dec
sbb
jecxz
xor
push
add
sub
push
scas
ja
xchg
lcall
test
or
adc
cltd
lods
lods
pop
mov
dec
mov
mov
and
or
movsl
or
mov
inc
pop
int
cmp
loope
xor
mov
pushf
ret
stos
iret
jg
aaa
add
mov
loopne
mov
lock
icebp
ljmp
insl
outsl
xchg
lret
in
or
loope
lods
push
out
xchg
jmp
enter
xchg
rcll
xor
cli
xor
lret
bnd
pusha
rorl
sti
add
into
push
test
enter
inc
fistl
jnp
lahf
pop
out
lret
popf
movsb
repz
loope
jb
int3
cmp
and
sbb
sub
mov
cmpsb
mov
not
push
jne
sbb
sub
push
xchg
jmp
test
lods
pop
ret
fsubrp
aad
mov
and
push
lret
xchg
cwtl
decb
in
rsm
lea
test
adc
mov
mov
sub
and
mov
push
and
daa
cmp
divb
out
jle
sbb
xchg
push
movb
aad
and
xor
or
dec
out
call
lods
inc
jbe
mov
mov
fldt
dec
movsl
out
mov
fbld
xor
mov
sbb
xlat
xor
out
jge
inc
xor
dec
shl
cmp
repnz
mov
xor
mov
adc
mov
mov
aaa
inc
movsl
add
gs
push
push
test
dec
ret
jb
rclb
in
in
int
jo
xchg
pushf
leave
jmp
pop
cli
int
mov
sahf
jbe
xchg
mov
sub
push
xchg
mov
or
inc
cmp
cmp
jecxz
sahf
jecxz
loopne
lock
cs
aaa
into
arpl
push
fdivl
test
test
pop
mov
lock
jo
rclb
mov
mov
ljmp
mov
sub
lock
iret
mov
sbb
fs
sbb
jbe
gs
push
fsubrs
xchg
imul
mov
cmp
add
mov
lret
idiv
lahf
mov
dec
pushf
pop
or
ss
mov
or
loop
imul
mov
add
push
inc
int
fs
and
jmp
jnp
clc
adc
xchg
xchg
add
jb
in
jne
addb
lock
fcmovnbe
jbe
jns
sub
fimuls
inc
ljmp
fucomp
pop
sbb
dec
sub
lea
push
sbb
adc
stos
dec
or
lods
xchg
notb
xlat
pusha
loop
jge
lds
and
aad
lock
pusha
or
or
add
xor
pop
fdivrs
cli
pop
sbb
cld
mov
inc
mov
aaa
mov
leave
push
inc
pop
or
movsl
stos
insb
add
cmp
daa
hlt
imul
popa
sahf
pop
sbb
leave
adc
xchg
test
fistpl
sub
xchg
pop
push
pop
js
test
insl
mov
ljmp
out
mov
mov
lea
mov
popf
ret
inc
xor
lret
inc
xor
dec
mov
mov
mov
into
lods
jle
scas
xchg
int3
and
xchg
xchg
lret
aam
cli
mov
mov
adc
or
in
mov
xchg
js
stos
fdivrs
xchg
dec
pop
cmpb
mov
push
pop
mov
cmp
cwtl
or
add
xchg
insb
je
shll
push
ret
dec
jnp
xor
fs
stc
in
lahf
adc
pop
adc
gs
mov
testl
push
outsl
mov
mov
mov
stos
jge
pop
jnp
xchg
cmp
and
jae
dec
iret
adc
jno
rcrb
clc
push
add
sti
negb
pop
es
mov
bswap
fldt
pop
loop
sbb
adc
or
cmp
pop
jne
pop
cltd
cli
gs
punpckhdq
xchg
iret
lahf
lea
scas
jnp
out
or
mov
sti
or
cld
stos
and
xchg
jmp
fiaddl
arpl
cli
and
mov
pop
adcl
out
jb
ja
in
pop
inc
loop
fistpl
movsb
rolb
stos
mov
mov
js
xchg
movsb
add
lret
ja
in
ficomps
add
bswap
idivb
pop
insl
test
negb
addr16
jecxz
cmc
js
inc
test
cmp
aam
push
sbb
lods
jns
mov
test
gs
dec
add
cmpsl
sti
in
cmp
fbstp
xlat
inc
jno
pushf
sbb
adc
mov
ljmp
mov
insl
repnz
add
jbe
inc
xchg
in
cmp
xchg
and
rcll
jl
or
mov
pusha
and
or
clc
movsb
and
or
cmpsb
mov
cmp
cmp
push
or
xchg
add
jge
movsl
push
into
repz
push
xchg
push
pushf
dec
push
cmp
fbstp
outsl
enter
sarb
jns
pop
insl
jmp
xor
xchg
xor
push
sahf
sbb
insb
adc
es
test
mov
fs
jns
out
xchg
adc
lods
pushf
jl
clc
inc
inc
cli
in
lea
mov
mov
cs
mov
adc
shll
lcall
bound
sbb
inc
cmp
add
clc
add
lds
out
mov
xor
mov
addr16
xchg
jne
dec
lea
dec
xchg
mov
into
xchg
scas
adc
inc
jp
xor
jge
fucomi
cs
mov
mov
jb
mov
and
adc
aaa
xor
jb
fwait
sub
add
mov
lods
and
push
mov
scas
ret
fucomp
adc
mov
in
jge
int3
std
imul
test
fidivs
xorl
ret
sbb
jb
jae
pop
dec
je
cmp
add
cli
mov
push
xor
cltd
xchg
loopne
clc
inc
lds
pop
test
jg
jecxz
adc
test
adc
adc
fwait
push
sbb
aad
push
cmp
pop
daa
and
stc
aam
inc
daa
xchg
cs
cmp
pop
cmp
imul
icebp
fcompl
ficomps
movq
pop
inc
cmp
loopne
stos
arpl
sub
idiv
cli
enter
rorl
mov
xor
cmp
loop
mov
sbb
bound
pcmpeqb
in
cmp
call
jae
pop
lods
nop
jp
add
jmp
jb
sbb
xor
xor
sub
mov
lods
bnd
push
loope
sub
roll
loop
and
jne
aaa
pop
adc
pusha
mov
bound
jo
xor
jge
xor
daa
mov
pop
int3
sbbb
pop
iret
stc
cmp
fistpl
cmc
mov
or
or
pop
sub
jmp
xor
jg
push
or
cltd
vpshaq
mov
jne
jne
cltd
fwait
pop
hlt
add
xor
cs
aaa
mov
jge
cmpsb
ret
add
inc
cmc
or
fisttpll
int3
jno
sbb
inc
fwait
int
rorb
aaa
or
jg
mov
xchg
enter
notl
cmp
dec
push
xchg
mov
inc
mov
out
dec
xor
ret
add
push
rclb
nop
pop
in
rcr
hlt
insb
fdivrl
gs
shlb
adc
xchg
xchg
jmp
and
sub
xlat
repnz
adc
or
inc
xor
pop
arpl
in
cmp
mov
notl
jmp
cmpsb
cmp
sub
test
outsl
push
ss
vpsrad
and
in
push
jmp
and
and
shll
mov
cmc
js
xor
cmp
push
lds
mov
sub
repnz
pusha
js
lds
fstpl
jge
sub
xor
mov
and
push
push
cmp
push
adc
mov
xlat
mov
mov
mov
mov
sahf
mov
lret
xchg
add
mov
test
out
sbb
scas
int3
sti
mov
aaa
xchg
push
outsb
das
mov
xor
loope
icebp
push
out
gs
hlt
mov
into
jle
adc
jo
sahf
mov
lock
call
xor
and
cs
mov
enter
pop
pop
xchg
ficomps
mov
sub
dec
adc
out
ja
xlat
sbb
mov
sub
sub
jb
xchg
fbstp
jmp
cmp
lods
cmpsb
jns
clc
iret
call
out
push
xchg
les
loopne
push
mov
xor
mov
fxch
xor
jp
and
mov
repnz
push
test
stc
test
fildll
fs
bnd
and
or
mov
xchg
jle
fdiv
jo
jmp
or
jge
enter
sbb
leave
mov
xor
push
clts
jl
movsl
mov
imul
xchg
inc
and
daa
mov
call
fsubr
pop
jmp
popa
cmp
xchg
dec
jno
sub
adc
push
jl
mov
cmpsl
dec
mov
je
shrb
pop
mov
out
pop
jg
dec
mov
dec
fisttps
divl
iret
bnd
mov
fwait
inc
test
push
xchg
lcall
pop
add
cs
pop
es
stos
push
jmp
pop
adc
addr16
add
addr16
fsubrp
out
push
inc
push
and
loopne
mov
fwait
push
pusha
imul
sbb
loop
xor
pop
loopne
iret
push
mov
nop
outsb
mov
mov
popa
xlat
mov
lea
add
fsts
fiaddl
outsb
jecxz
pop
pop
js
mov
outsl
popa
add
xchg
sbb
enter
ja
stos
pop
jmp
insb
xlat
or
add
xor
dec
pop
pop
sub
jno
dec
pop
pushf
stos
nop
scas
inc
mov
xchg
xchg
and
test
push
fs
inc
add
mov
push
gs
in
call
mov
push
jp
pop
out
dec
repz
mov
sarl
aaa
mov
pop
adc
and
jnp
testl
js
clc
mov
into
jns
push
fmuls
les
rcll
mov
stos
sbb
cmpsb
outsl
jmpw
mov
push
aam
cmpsb
sbb
or
call
push
mov
mov
add
int
and
fstpl
or
add
aaa
or
repnz
nop
fmul
mov
out
cld
push
clc
inc
push
lahf
mov
pusha
cli
dec
mov
or
push
and
mov
pop
push
rcl
adc
cmp
or
pop
push
jns
mov
pop
xor
jmp
stos
and
cmc
scas
dec
push
je
mov
inc
imul
xor
hlt
insl
test
sbb
gs
mov
push
shll
loopne
aam
mov
sbb
jo
gs
sbb
cmpsl
xchg
jo
sbb
leave
inc
cwtl
jmp
adc
and
call
mov
mov
sarb
pop
ljmp
in
xchg
int3
je
pop
push
movb
das
mov
jno
mov
xchg
in
and
scas
pop
rclb
mov
or
daa
sahf
sub
mov
fldl
dec
sub
dec
and
int3
mov
enter
icebp
mov
inc
add
loopne
jg
sarl
sbb
jl
es
xchg
add
mov
loop
into
push
ljmp
cmp
pushf
add
xor
popf
into
test
pop
mov
scas
filds
add
xchg
dec
cmp
pop
mov
jns
cmpsl
push
lea
pop
and
jp
andb
cmc
mov
inc
popa
xor
mov
lahf
cwtl
dec
adc
sahf
imul
mov
sbb
sahf
inc
loopne
jo
mov
inc
jmp
mov
test
cmp
jle
outsb
cmp
fiadds
test
inc
adc
mov
add
js
adc
lock
mov
pop
scas
cmpsl
adc
adc
decl
shll
ret
sub
jb
adc
ds
jmp
mov
aam
xor
jbe
enter
loope
cmp
gs
mov
out
pop
cs
call
mov
mov
cli
cld
cmp
pop
sbbl
push
jbe
or
insb
cmp
insb
pop
sbb
andb
cs
popa
jns
lea
sbb
dec
xlat
cmpsl
inc
cmp
cmpsl
sub
xorb
dec
and
fstps
lds
fnsave
mov
je
xlat
daa
and
inc
push
inc
jmp
cmpsl
clc
stc
mov
dec
xchg
orb
movsb
cmp
cwtl
fwait
and
sti
lea
sub
fnstcw
cmp
insb
add
inc
cmp
mov
inc
test
outsl
mov
cmp
aas
imulb
jno
sahf
arpl
imul
sub
subb
add
sbb
xchg
jg
bound
test
sub
int
movd
mov
clc
xchg
xchg
mov
mov
sub
cli
sbb
mov
les
or
cmp
sbb
bound
sub
dec
iret
out
cmpsb
sbb
test
push
popa
xchg
fs
push
and
and
adc
fld
pushf
sub
add
ret
lcall
mov
add
sub
add
dec
and
or
dec
mov
pop
dec
jmp
push
aad
mov
jl
or
in
cmpsb
stc
add
icebp
in
push
in
in
pushw
jl
fnsave
inc
xor
dec
and
sahf
ret
repnz
or
xor
mov
aas
outsl
adc
test
lods
and
mov
ja
imul
jnp
jns
ss
mov
push
ror
jae
mov
mov
outsb
stos
fidivl
or
lret
dec
fucomip
jg
fsubs
mov
mov
fcoml
xor
dec
scas
fwait
pop
jecxz
push
aam
cmp
mov
rcrl
mov
push
fnstcw
mov
dec
adc
jnp
dec
ret
mov
xchg
test
and
jno
mov
call
jg
adc
cmc
push
dec
push
jmp
repz
mov
sub
fcoml
push
shlb
jb
mov
adc
scas
fisubl
adc
aad
xor
dec
push
add
or
scas
addb
xor
xor
loopne
adc
es
pop
shrb
cmp
sub
mov
arpl
push
sarb
sahf
std
inc
je
jne
adc
add
imul
adc
add
inc
lods
dec
jne
pop
test
sbb
flds
push
sbb
rcr
xor
ret
aad
dec
outsb
or
pop
xor
dec
aaa
aad
daa
mov
jp
push
stc
adc
add
inc
sbb
popa
push
lea
push
shll
inc
fisttpl
cmpsb
sbb
insb
inc
pushf
or
push
cmc
inc
mov
mov
pop
jmp
pop
icebp
cs
sbb
jecxz
pop
clc
je
xchg
in
cmpsl
or
int
adc
pop
or
aam
test
or
cltd
xlat
mov
adc
lret
popa
mov
or
decb
sub
dec
in
xchg
jl
insb
push
mov
bnd
inc
push
insl
rcll
sbb
xor
pop
mov
clc
cmc
dec
mov
insb
mov
push
pop
in
fdivl
xchg
cmpsb
jecxz
jge
out
fdiv
xchg
dec
in
push
dec
daa
movlps
dec
insb
mov
enter
mov
pop
iret
add
mov
ret
loop
dec
add
ret
insl
mov
aas
or
inc
sub
std
mov
js
hlt
scas
pop
push
addr16
repz
incl
jb
out
popf
mov
es
mov
sub
fldlg2
or
ret
pop
dec
mov
shll
loop
rcll
pushf
cli
mov
mov
js
or
mov
call
ret
jnp
or
lods
mov
add
cli
sub
push
loope
add
jns
fnsave
push
mov
pop
int
cmp
adc
scas
xchg
mov
jmp
pop
mov
out
add
pop
mov
sarl
inc
daa
cmp
ficompl
mov
cmp
incl
leave
inc
mov
jmp
push
jns
inc
into
popf
cmpsb
fs
imul
push
jge
mov
in
push
sti
shrl
jae
and
mov
jno
or
pop
and
push
mov
jo
dec
mov
fbstp
out
jnp
scas
jmp
pop
das
pop
rclb
lods
jnp
pop
jns
cmp
mov
std
in
or
sbb
out
mov
sub
subl
fistpll
pop
lods
sbb
push
mov
mov
jecxz
into
cltd
cmc
sbb
dec
ret
push
cmp
aas
bound
shl
in
push
fistps
test
sti
xchg
sbb
lds
sbb
push
sub
inc
xchg
cwtl
sub
les
pop
lret
out
fwait
jo
in
jge
lret
and
adc
jl
dec
lret
adc
shr
adcb
dec
test
inc
jl
out
test
cmovae
ror
inc
dec
out
cwtl
sbb
sub
stos
mov
out
jae
cmc
push
ja
xchg
xor
pop
xchg
out
popf
pop
nop
arpl
repz
xor
stos
mov
xchg
xor
mov
bound
outsb
push
cmp
mov
nop
lret
arpl
cmp
nop
mov
es
push
sbb
jge
fcomps
cmp
outsl
pop
hlt
and
xor
dec
cmp
loope
or
xchg
test
xor
pop
xchg
hlt
jg
sbb
dec
jge
dec
out
push
ds
mov
ljmp
dec
movsb
inc
ljmp
cmp
lahf
clc
or
mov
imul
dec
mov
mov
or
popa
out
std
adc
dec
addr16
inc
in
xchg
in
mov
pop
in
lods
sbb
xor
adc
out
jg
ss
mov
xor
xor
adc
sbb
icebp
lahf
loope
inc
imull
mov
loope
pop
and
fnstcw
xchg
and
loop
test
es
cmp
push
sub
dec
test
cld
inc
ds
fwait
cld
fidivs
and
sti
out
mov
add
das
fisttps
arpl
out
and
push
imul
ds
mov
test
sbbb
mov
inc
mov
loop
iret
push
negb
xchg
sub
in
mov
pop
mov
daa
cmp
fsubrs
mov
test
lock
mov
xchg
jo
out
xchg
aas
dec
xchg
shl
jmp
test
loope
mov
mov
jle
push
mov
sbb
xchg
adc
xchg
mov
or
push
rorl
sub
adc
jge
inc
xchg
xor
fdivl
bound
popf
jo
cmc
nop
pop
aas
mov
push
jae
scas
add
inc
mov
mov
jnp
shll
mov
test
inc
repz
mov
leave
shll
aam
pop
add
and
test
mov
jmp
jecxz
mov
mov
adc
mov
jnp
mov
pop
test
xchg
or
test
jne
sbb
pushf
pop
dec
aaa
adc
xor
xchg
scas
outsl
xor
mov
jg
jbe
pop
add
gs
sub
fwait
add
outsb
jns
mov
lods
dec
xor
dec
dec
in
and
inc
jne
mov
popf
cmp
xchg
mov
or
imul
cmpsb
and
push
shlb
outsl
dec
mov
ja
jne
cmp
pop
jmp
in
push
dec
fs
lds
sub
movsb
pop
jnp
imul
xor
push
mov
adc
push
dec
loopne
popa
movsl
stos
pop
test
inc
mov
pop
push
js
mov
fnsave
sbb
dec
push
dec
cmp
jp
push
gs
test
inc
sbb
mov
jecxz
cmp
jb
inc
pop
xor
sbb
xchg
pushf
and
repnz
sbb
or
xor
xcrypt-cfb
cmpsl
fs
inc
sub
sti
inc
arpl
dec
leave
or
loopne
push
sti
rcrl
dec
xor
stos
ret
mov
fsubr
pop
fadd
clc
mov
mov
popf
bound
in
sbb
repz
pop
movsl
push
jns
mov
imul
shr
pop
mov
lods
pop
sub
shl
inc
sub
shl
jecxz
in
adc
inc
test
lock
mov
test
or
pop
sbb
ss
push
out
sbb
cmp
dec
mov
movsl
dec
adc
dec
in
in
jg
inc
and
out
and
fists
xor
xor
or
xlat
xchg
or
push
add
icebp
jmp
xor
or
movsb
xor
xlat
adc
jl
adc
push
stos
fcmovu
push
xchg
sahf
adc
jecxz
dec
jecxz
add
pop
ljmp
mov
mov
jmp
xor
call
ja
push
pop
mov
xorb
sbb
int
fst
fldl
jmp
xchg
xor
fst
insl
jg
loop
ret
into
or
mov
imul
pop
sub
mov
and
xchg
adc
or
sbb
and
pusha
sbb
icebp
outsb
push
mov
sub
jbe
rorl
push
in
imul
xchg
outsb
scas
popa
and
sahf
dec
fldt
stos
call
ret
das
stos
in
sub
mov
pop
sbb
fimull
sbb
mov
xchg
jnp
mov
ja
jo
jne
outsb
bound
or
dec
mov
lods
sub
in
or
hlt
xchg
into
and
dec
mull
inc
mov
movsb
jb
call
xor
popa
push
jge
push
sbb
cmpsl
dec
aas
loop
iret
lods
lcall
test
inc
cmp
and
sbb
push
call
pop
dec
loop
lea
shl
xor
cmpl
adc
or
push
dec
adc
js
add
xor
ret
mov
add
stos
ficoml
imul
bound
push
or
fists
or
lret
jle
cwtl
or
inc
xchg
sbb
pop
cmpsb
jp
push
or
icebp
ds
nop
fldl
xchg
rcll
fdivp
repz
out
addr16
aas
cmp
out
mov
xchg
movsl
inc
xchg
loope
cwtl
add
dec
arpl
and
cmp
xchg
pop
shr
sub
and
lods
int
jg
nop
sub
lahf
xlat
xchg
mov
pop
and
incl
mov
data16
mov
mov
mov
lods
js
out
imul
push
faddl
scas
adc
arpl
and
xchg
aas
mov
lret
cmp
sub
rolb
xchg
in
ss
out
adc
fdivl
ds
xorb
icebp
mov
pushf
pop
pop
add
scas
add
and
cltd
les
out
shll
mov
daa
sub
xchg
mov
stos
mov
and
xchg
xorl
jmp
jle
xchg
sbb
sbb
cmp
mov
shrb
cs
lea
out
or
xor
inc
icebp
shlb
mov
push
mov
mov
movsb
inc
shrb
enter
repz
rcrl
sub
fbld
stc
rcrl
inc
or
dec
dec
test
mov
fsubr
push
inc
cmp
jmp
mov
jp,pt
or
jae
sub
pop
or
inc
push
push
lods
add
sub
mov
pop
ljmp
movsl
fadd
inc
or
lcall
sbbl
and
sub
sbb
push
cmp
pop
and
mov
push
nop
sbb
jmp
mov
mov
xchg
out
inc
pop
insb
cwtl
and
adc
dec
mov
aaa
fstl
or
out
fisubl
add
mov
jno
outsb
mov
and
inc
clc
or
repz
out
add
cmpsb
sarl
cwtl
clc
fldt
stos
lea
sub
fwait
pusha
cwtl
dec
test
adc
out
arpl
cs
inc
into
fwait
mov
loopw
push
pop
shlb
cltd
insb
sbb
jp
loopne
das
pop
xor
mov
mov
mov
add
mov
jb
cmp
mov
addr16
cmc
push
xchg
sub
xlat
rcll
or
idiv
xchg
sub
fsincos
es
pop
stos
dec
xchg
in
xor
inc
mov
dec
jae
aad
out
ja
ret
dec
cmp
sarl
mov
fcompl
std
mov
push
mov
push
mov
push
lahf
fsubrs
bound
sub
xor
or
mov
outsb
cmp
lock
outsl
xor
and
sbb
xor
jne
jle
push
lret
xchg
push
dec
sub
jae
shrb
push
outsl
cmpsb
mov
push
sub
jp
mov
subl
jns,pt
pop
jle
push
pop
add
jmp
aaa
stos
pop
icebp
pusha
pusha
sbb
sbb
dec
and
sbb
sbb
pop
imul
jl
pop
movsl
jl
dec
xchg
mov
data16
mov
mov
sbb
mov
pop
or
adc
adc
dec
xor
xchg
leave
inc
fcoml
addr16
cld
push
jns
jae
cmp
mov
mov
jno
add
sub
add
lcall
xchg
iret
dec
push
aad
mov
lock
lock
fwait
jb
aad
and
inc
jne
xchg
pop
fldt
sub
in
mov
cmpsl
cmc
pop
xor
lods
push
push
imul
dec
or
push
adc
sbbb
dec
push
fbstp
mov
push
int3
dec
or
out
loopne
repz
xchg
lahf
fldl
sbb
imul
hlt
test
lds
sbbb
jmp
inc
dec
cmc
xor
fisubs
and
dec
adc
dec
in
sub
mov
std
mov
cmovge
mov
dec
jnp
scas
das
in
flds
adc
sub
dec
clc
imul
pop
xor
and
popa
and
sahf
and
pusha
xor
scas
mov
jns
ljmp
sbb
cmpsb
cld
movb
fisttpl
int
inc
push
mov
xor
add
dec
ret
clc
lcall
inc
mov
add
cmp
stc
data16
dec
mov
int
cmc
sub
adc
pop
xor
fsubs
xor
or
lret
fwait
movsb
int
test
adc
push
int
je
jle
je
xchg
je
dec
sbb
mov
mov
lcall
ds
ja
pop
pop
pop
std
rorl
leave
lods
mov
shl
lods
out
mov
push
pop
sub
loope
sub
push
pop
or
add
hlt
push
lcall
jno
sub
xchg
sbb
or
sub
push
stc
repz
jge
sti
add
mov
notb
xchg
adc
fsubl
inc
out
xor
mov
lock
ds
jl
cmc
mov
outsl
mov
or
dec
xchg
cmpsl
xor
mov
dec
lret
sub
inc
sbb
aad
in
jbe
insl
lret
mov
adc
push
push
ss
adc
cmp
xchg
popa
cmp
rcll
mov
dec
stos
incb
cmpb
std
lds
add
push
xor
lret
sub
pop
sbb
adc
clc
cmpb
ror
rcrl
xchg
test
sub
cmpsb
ret
dec
fwait
cwtl
ds
or
lret
xchg
mov
aad
mov
lock
jno
pop
aaa
xor
lret
inc
sub
sti
adc
mov
aaa
orb
lret
outsl
data16
xor
fwait
dec
jle
out
jae
fs
cld
into
inc
ds
cld
mov
pop
mov
jb
in
test
jge
sub
outsb
cli
or
xchg
sub
jbe
leave
out
adc
sti
lret
ljmp
cli
push
pop
je
push
push
sahf
test
imulb
aas
movsb
into
xorl
jmp
dec
sti
shrb
cltd
cmp
push
jmp
inc
pop
lahf
roll
inc
inc
ret
push
or
fwait
mov
das
cld
and
bound
mov
xor
outsb
xor
mov
inc
cwtl
out
clc
sbb
popa
xor
cmp
icebp
xorb
jbe
sbb
lods
hlt
gs
fldt
aad
push
mov
jecxz
clc
jo
pusha
cmpsb
pop
fiaddl
pop
cli
bound
cmpsl
pop
sub
nop
mov
fisubrl
sbb
addl
adc
rorl
dec
mov
xchg
ja
sbb
ss
iret
les
ret
out
adc
inc
into
movsl
push
mov
in
lahf
aam
movsl
ret
sahf
outsl
pop
and
cmp
dec
div
fistpll
fsubrs
push
or
cmc
lds
enter
inc
scas
cltd
mov
dec
cmp
jp
gs
adc
fs
cmp
or
adc
jge
jmp
gs
jge
mov
sahf
addr16
mov
lods
insl
mov
lock
aas
and
and
inc
xchg
ds
ret
nop
add
lcall
out
stc
in
sbb
loope
inc
jns
sbb
pop
jle
dec
lahf
mov
shrb
pop
mov
rorl
out
mov
stc
insb
stc
push
outsb
mov
ret
cwtl
lret
and
jp
enter
inc
pop
mov
cmp
shll
push
and
xchg
adc
outsb
ja,pt
push
mov
fldenv
icebp
jno
push
aam
mov
lret
cmc
add
push
xlat
les
dec
idivl
mov
dec
add
mov
shrb
insb
int
pop
xorl
pusha
pushf
xor
jne
jb
cmpsl
andb
out
sub
xor
loop
stos
lock
add
fs
jb
sbb
icebp
into
fwait
sbb
mov
xor
fiaddl
cmpsb
data16
mov
in
sbb
ret
cli
add
testl
mov
in
lret
jo
jge
jno
mov
aad
jae
insb
push
cmp
in
out
cs
push
aam
push
pop
mov
jns
mov
pusha
das
daa
aaa
aas
fadds
int3
js
push
sub
inc
lea
lds
xor
fistpl
push
flds
and
fstps
or
cmp
xchg
in
jo
mov
mov
bound
test
dec
xor
push
mov
xor
push
orb
adc
add
cmp
adc
out
mov
sub
clc
mov
cltd
pop
dec
in
inc
xorb
dec
jbe
lcall
and
mov
rcrb
xchg
popa
jbe
movsb
cmp
movsl
ds
mov
mull
push
ror
fwait
cmp
pop
jmp
inc
testb
test
test
mov
into
sbb
es
out
adc
lcall
ffree
cmp
fstps
loop
insb
sub
push
jnp
add
cmpb
push
pushf
movsb
sti
mov
cmp
xchg
jg
test
jne
nop
jp
xchg
push
sub
pop
push
mov
or
mov
jge
sub
jo
cmp
cmp
popa
movsl
loopne
xor
cmp
adcb
in
pop
jmp
nop
or
cwtl
movsb
outsl
push
adc
mov
mov
sub
dec
inc
xor
pop
sti
cmp
mov
call
xor
jno
jae
sub
cmp
adc
lock
addr16
inc
fisubrl
cmp
scas
sub
push
sbb
xchg
inc
cwtl
sbb
repz
aad
xchg
das
in
xchg
dec
mov
in
push
pushf
sbb
pop
dec
mov
sahf
movsl
aas
dec
inc
sbb
xchg
push
xorl
fisttpll
in
adc
iret
fstl
clc
cmp
popf
cmp
and
iret
test
addb
dec
out
push
inc
sub
mov
data16
int
mov
mov
cmp
xor
mov
fnstenv
aad
sbb
lret
jg
fxch
inc
cs
jg
add
lods
fldcw
andl
jb
xor
sub
sub
insl
gs
push
sub
pop
stc
scas
sbbl
stos
pop
mov
mov
and
out
imul
lods
dec
dec
outsl
mov
sbb
xlat
dec
and
leave
ret
sub
push
sub
inc
mov
fisubrl
std
loop
pop
xchg
fnstsw
pop
std
mov
inc
rorl
insb
fwait
xchg
sub
sub
sub
sub
pop
loope
push
jecxz
mov
out
push
add
pop
lods
jge
std
xchg
mov
out
into
dec
data16
dec
cmp
fdivs
ret
adc
daa
shl
adc
inc
mov
mov
stos
popa
push
test
jp
inc
sub
stc
loopne
rcrl
add
lock
mov
imul
jns
fwait
lods
and
xchg
filds
xor
sahf
fsubrs
add
pushf
fs
push
push
sub
sbb
xchg
push
mov
inc
jo
cltd
inc
sbb
out
repnz
addr16
mul
iret
xor
and
dec
or
subl
das
lret
xor
push
adcb
adc
dec
cmp
shrl
adc
sbb
push
bound
xchg
mov
sbb
xchg
cmp
repz
aaa
fistl
jecxz
or
and
test
sbb
cmp
fwait
jne
or
std
aas
mov
andl
test
push
sbb
and
jnp
xchg
hlt
jns
inc
pop
or
push
insl
pop
dec
adc
xchg
push
sub
int3
cmp
lcall
test
jg
call
pop
inc
xchg
out
dec
enter
sub
xchg
scas
inc
addr16
jp
inc
rorb
rcrl
loope
cld
negl
push
test
inc
insb
inc
mov
cmp
push
xchg
loope
pushw
xchg
insl
sbb
nop
xor
mov
mov
cltd
addr16
insb
fdivrl
mov
pusha
jns
push
add
loope
xchg
imul
test
mov
fldcw
outsb
push
xchg
push
dec
lds
ds
mov
or
adc
mov
mov
loop
xor
shl
mov
xchg
out
insb
push
popf
adc
scas
and
ret
sbb
cld
inc
dec
mov
leave
xchg
mov
mov
pop
mov
aad
mov
xlat
pushf
adc
out
imul
mov
jo
stos
enter
push
sarl
je
xchg
imul
enter
mov
icebp
cmp
out
or
push
ret
fadds
or
cmpsb
fdivrl
cld
adc
gs
push
sub
repz
jp
cmp
loop
in
fisttpl
lcall
inc
jmp
iret
mov
push
lds
sbb
fbld
jp
sub
adc
out
push
mov
or
repnz
call
movsl
into
cwtl
outsl
xchg
test
push
fwait
vpcmpgtw
fs
mov
dec
ljmp
dec
inc
mul
std
xor
xchg
addr16
sarb
cmpsb
jae
sbb
adc
es
push
push
jae
xor
cmp
bswap
mov
pop
fs
fwait
aas
pop
jg
cmc
in
lods
add
sbb
mov
out
inc
in
mov
fwait
mov
sarb
jmp
ss
mov
or
push
add
fdivrs
insb
lods
mov
ja
das
insb
dec
jns
lods
scas
mov
xchg
sbb
xor
stos
lods
and
and
or
pop
adc
jecxz
push
dec
lods
mov
and
push
cmp
lock
xchg
orb
sahf
mov
sub
and
ret
je
pop
jne
lods
jl
ret
push
scas
pop
flds
xchg
sub
movsb
pushf
mov
or
sub
test
dec
movsl
notl
movsl
sti
jle
into
inc
divl
adc
test
push
das
pop
push
aam
sbb
pop
aad
dec
mov
sar
leave
aam
jbe
add
imul
add
and
cld
or
xor
xor
xlat
pop
mov
mov
xor
xor
mov
shrl
div
mov
pop
fimuls
mov
fistl
dec
inc
daa
std
iret
cmp
xor
dec
adc
sub
fnstenv
out
push
jecxz
inc
ss
hlt
es
insl
in
lea
mov
pop
cld
sbb
rorb
cmp
mov
mov
jne
mov
sti
ret
popa
scas
mov
insl
add
jle
mov
or
andl
or
xorps
jp
mov
in
adc
xor
ret
mov
push
scas
sahf
cmp
jmp
sub
fprem
fdivr
clc
imulb
fisubrl
mov
das
popf
mov
sarl
xor
xor
fiaddl
je
lock
fwait
dec
andl
outsl
int3
adc
dec
and
xor
push
scas
dec
stos
push
aam
neg
fs
loopne
std
or
and
aam
adc
stos
jl
mov
add
and
addr16
cld
adc
daa
rcrl
popf
inc
jnp
pop
lock
mov
xchg
mov
arpl
mov
dec
lcall
add
mov
xchg
clc
fiadds
bnd
out
scas
inc
mov
aaa
sub
mov
pop
mov
cld
icebp
out
leave
inc
popf
or
sub
pop
cmp
insb
sbb
pop
ja
movsb
or
cmc
decb
test
sub
xlat
dec
rcr
dec
cmp
mov
stos
jmp
xor
es
in
sbb
cmp
jmp
jno
or
sbb
mov
aaa
mov
cltd
jne
loopne
in
inc
mov
xchg
sbb
scas
inc
sub
leave
lahf
rcrb
aas
dec
and
hlt
pop
fstpt
or
call
mov
loop
xchg
mov
addl
inc
pop
pop
jbe
cmp
hlt
or
dec
mov
hlt
repnz
inc
mov
sub
hlt
lret
mov
jecxz
add
mov
aam
bound
xor
jmp
stos
sub
push
push
sub
xchg
fiaddl
outsl
mov
push
mov
ljmp
mov
push
ret
push
cmp
sti
sub
pop
cli
nop
outsb
fcomp
pop
inc
jbe
in
leave
pop
test
stos
loope
push
pop
jmp
repz
xchg
inc
aam
sbb
ficoms
jp
or
test
insb
pop
push
cmp
fcoms
push
nop
out
aad
mov
arpl
and
ja
lahf
into
jno
call
mov
enter
test
sti
loopne
in
cld
loope
gs
pushf
xor
and
xchg
and
xor
xchg
rclb
incl
das
push
jnp
sub
loope
insl
in
mov
into
addb
jns
pop
in
add
xchg
jp
cmp
aad
inc
mov
mov
or
mov
sti
push
cmc
add
mov
inc
inc
icebp
int
or
push
xchg
push
xchg
mov
fdivr
adcl
mov
dec
in
cs
push
jbe
inc
les
enter
in
in
jns
cmpsl
fnsave
mov
sbb
cmp
cmp
jle
and
mov
rcll
mov
dec
push
jp
mov
sarb
fildll
aaa
sti
sub
mov
cmp
inc
cli
movsl
inc
fnstenv
out
jb
sub
out
dec
fsubp
cmpsl
popa
scas
pop
mov
stos
pop
xchg
adc
fidivrs
push
jmp
ss
mov
mov
out
sbb
pop
mov
xchg
mov
push
shl
cmp
inc
cltd
jno
insl
dec
xor
leave
xchg
add
loope
dec
jecxz
test
sbb
fcmovbe
rclb
sub
xor
stc
cmc
push
mov
ja
add
xor
addb
mov
orl
add
add
xchg
ds
sti
shll
mov
rorb
sub
rcl
push
adc
or
push
or
jmp
xor
xchg
xchg
daa
movsl
add
sbb
gs
jbe
hlt
or
jbe
add
stos
sti
adc
push
loope
cmc
movsb
add
push
ret
fstps
sti
cmpsl
aaa
stos
daa
out
jne
shrl
jbe
pushf
or
shrb
sub
movsb
xor
or
push
xor
lods
mov
cmp
jb
sti
jle
bound
jmp
dec
and
pusha
push
loopne
mov
subb
cmpsl
fsubs
sbb
add
fwait
cmp
nop
mov
jle
scas
inc
sbb
xchg
inc
push
mov
lret
cs
jno
push
test
hlt
test
in
jno
mov
dec
push
xchg
test
in
rcll
add
sbb
fists
das
lods
jo
sti
cs
lock
pop
int3
mov
push
inc
dec
xlat
cmpsl
inc
or
push
hlt
xchg
jne
mov
aas
faddl
push
cmp
addr16
ret
mov
dec
loop
or
pop
or
rol
rclb
pop
mov
xorb
out
mov
add
call
cld
and
inc
imul
lock
mov
cmp
mov
adc
adc
pop
enter
pop
daa
pop
pusha
popa
shll
repnz
pop
push
popa
xor
in
dec
aas
xchg
scas
decl
pop
lock
mov
and
mov
mov
pop
pop
mov
inc
loopne
or
lret
mov
jg
xor
movsb
das
mov
mov
shlb
adc
fsubp
and
ss
mov
insb
aam
iret
mov
and
push
cld
std
iret
int3
mov
or
popa
xchg
outsl
xor
dec
loope
mov
iret
sub
pushf
icebp
lahf
test
xor
fstp
into
mov
xchg
ret
lret
jns
shlb
mov
xchg
inc
call
cmc
out
dec
mov
ja
aam
jnp
jg
mov
cld
inc
cld
jle
lcall
das
inc
mov
idivb
add
add
mov
cltd
cmpsb
sub
xchg
orb
dec
push
mov
test
bound
fstp
ret
out
lods
push
push
sti
cmpsb
bound
aad
mov
sbb
ss
fs
cli
add
hlt
fcompl
pop
push
fiaddl
jb
and
andl
std
stos
mov
lret
cmp
cltd
sbb
jbe
adc
xchg
in
add
sbb
movsl
dec
mov
inc
cli
insl
dec
mov
mov
fwait
mov
incb
dec
testb
fsubl
mov
inc
in
imul
cltd
add
xor
pop
imul
fldt
lcall
pop
rolb
fisubrl
aas
sub
lock
pop
xchg
into
pop
testb
js
mulb
add
mov
push
mov
push
lods
or
mov
mov
pop
outsb
push
lock
jbe
hlt
out
sbbb
mov
daa
fadds
loop
sahf
ja
loopne
outsl
cmpsb
mov
mov
cltd
cs
mov
call
fs
test
clc
adc
scas
and
sti
mov
sarl
mov
jns
sub
push
outsl
cmp
fstl
sbb
inc
cmp
rol
pop
jae
ss
out
sarl
gs
or
jb
fucomip
or
jecxz
pop
movsl
mov
loope
mul
dec
and
pop
add
mov
and
call
add
inc
mov
inc
cmpsl
divl
rcrb
pop
add
inc
cmpsl
cmpsb
enter
js
jns
dec
xchg
scas
cwtl
mov
pop
xchg
shlb
insb
xor
cmp
popa
pop
cwtl
xchg
popf
xorl
xchg
adc
orb
add
push
pusha
lahf
jmp
inc
push
sbb
jo
mov
pop
dec
call
mov
push
add
and
or
nop
arpl
jbe
aaa
xchg
adc
xchg
add
xor
dec
hlt
mov
or
je
xor
shll
jmp
sbb
xor
shlb
mov
add
push
adc
mov
jge
enter
dec
mov
cmp
push
xor
mov
cmp
dec
jecxz
push
cmc
movsl
xchg
ja,pn
mov
inc
sub
and
add
and
push
es
outsl
mov
mov
test
popf
adc
leave
add
fiaddl
cmp
adc
sub
ret
lods
mov
aaa
stc
fstps
les
addr16
inc
sub
fwait
jae
xlat
dec
loop
xor
nop
xor
das
dec
add
or
mov
call
iret
jecxz
loopne
xchg
in
cmp
ljmp
jge
add
sahf
sti
mov
imul
test
inc
aaa
mov
mov
lea
ficoml
jbe
jge
movsl
lods
push
and
jge
push
cmc
ret
imul
push
hlt
pop
push
lret
sub
xor
cmpsb
insl
push
push
sahf
ret
pusha
dec
js
fdivrs
cwtl
jo
mov
pop
icebp
lret
push
test
dec
repz
sub
mov
out
jb
pop
roll
sub
pop
iret
adc
sbb
imul
sti
fidivrs
adc
filds
lahf
push
orl
inc
test
pop
push
xorl
push
icebp
into
sub
arpl
add
jmp
sahf
les
pushf
lahf
ss
mov
jo
shll
xchg
lret
xchg
xchg
mov
jb
daa
fwait
add
cmp
mov
call
daa
std
dec
out
push
xchg
imul
imul
add
xchg
mov
sbb
jle
fnstenv
jecxz
mov
mov
xchg
mov
adc
repnz
add
mov
xor
into
insl
mov
adc
or
out
enter
push
ds
mov
mov
xchg
pop
mov
js
fwait
popa
rcll
mov
mov
or
popf
in
in
cwtl
js
subl
cld
cli
inc
mov
sbb
mov
sub
mov
lock
cmp
mov
sbb
lods
test
cmp
xchg
mov
mov
mov
cmpl
push
and
shll
inc
adc
hlt
sbb
inc
cmp
pop
movsb
add
push
cmpsl
pop
lds
and
mov
add
hlt
push
out
mov
jge
mov
repnz
shl
dec
push
sbb
sarl
arpl
xchg
xor
ss
mov
sbb
mov
sbb
out
popf
mov
adc
pop
popa
mov
hlt
and
out
or
pop
sub
imul
clc
push
add
push
add
fistps
adc
and
add
xchg
je
rep
out
sbb
ficoml
aaa
shrl
mov
in
xor
arpl
push
dec
ret
mov
xor
pop
enter
lea
jb
andl
mov
inc
mov
cmpsb
sub
das
mov
push
mov
xor
inc
mov
jno
lods
sbb
push
das
repnz
pop
mov
jg
lods
push
push
les
cwtl
cmc
add
jae
rcll
jbe
mov
jb
mov
test
daa
js
aad
add
repnz
sbb
mov
add
dec
push
cs
jle
je
addr16
in
lods
push
out
cmp
push
dec
lcall
out
imul
or
fucom
fstl
xor
xor
or
clc
cwtl
ret
adc
xor
ja
outsl
ret
mov
stos
lcall
jnp
cmp
les
rorl
pop
jb
xor
mov
pop
push
ficompl
sub
pop
inc
pushf
mov
or
mov
mov
pop
lea
idivb
xadd
sbb
push
pop
std
jp
lahf
xor
negl
js
pop
xchg
mov
xor
jg
movsb
cmp
cmp
mov
push
jmp
cli
jge
inc
xchg
out
or
dec
mov
iret
inc
inc
mov
xchg
adc
test
sete
jle
test
mov
popa
test
inc
icebp
mov
mov
sub
ds
and
decb
push
cld
mov
cld
test
shrl
push
cwtl
mov
jae
inc
cmpsl
dec
jmp
bound
adc
push
cwtl
push
xchg
dec
xchg
js
xor
shrl
int3
sub
mov
cmc
sbb
addr16
jle
dec
fsubl
xchg
pop
daa
sbb
mov
ret
jbe
cld
mov
ret
and
clc
mov
xlat
or
mov
cld
jns
dec
jbe
iret
inc
je
jae
data16
fwait
sbb
dec
or
shl
std
mov
jmp
ljmp
xchg
inc
cwtl
adcl
and
imul
loope
in
lods
idivb
mov
out
lods
pop
fstps
pop
push
cmp
std
jo
insl
cltd
das
nop
mov
sub
mov
mov
sbb
mov
insb
outsl
rorl
pop
cmp
cmp
jns
pushf
jno
inc
insl
mov
push
inc
aad
cmpsb
inc
popl
sub
push
adc
arpl
fucom
and
lock
test
dec
add
and
mov
icebp
cltd
mov
enter
sbb
mov
xchg
daa
jo
jp
cmp
aad
insl
rol
mov
test
ret
jg
imul
imul
push
pusha
inc
push
imul
call
xor
es
cltd
test
pop
mov
dec
adc
and
push
mov
xlat
inc
sub
stos
mov
push
xchg
jmp
repnz
cmpsl
sbb
inc
xlat
fisttpll
fistpll
das
rorb
lret
xor
pusha
fs
ljmp
icebp
je
xchg
xchg
cmpsb
cmpsb
mov
add
sub
outsl
imul
inc
fistpl
sub
pusha
inc
mov
imul
cld
mov
jbe
and
jne
or
je
pop
xchg
and
mov
add
inc
xor
dec
mov
gs
and
dec
in
jnp
leave
icebp
add
pop
sub
sbb
testb
push
bound
mov
out
sbb
sahf
icebp
dec
nop
insb
adc
mov
into
mov
fdiv
cmp
ja
mov
dec
into
ret
cwtl
lret
call
or
adc
sub
and
rcrl
pusha
pop
repnz
in
mov
xchg
sarl
xchg
shrb
xchg
lea
mov
ss
xchg
jns
mov
sub
rcrb
sbb
cmp
popl
fcoml
ficomps
ljmp
dec
xchg
flds
push
repz
dec
push
push
sub
mov
popf
sbb
adc
or
out
out
test
arpl
add
pop
int3
cld
loopne
mov
xchg
add
fidivrl
loopne
mov
and
addr16
int3
mov
fs
imul
std
fistpll
or
ficoml
inc
or
jl
cs
and
mov
ja
movsb
aas
mov
repnz
sbb
cs
mov
or
and
add
cmp
and
adcb
stc
out
xchg
or
mov
mov
stos
push
out
xchg
dec
aaa
push
jbe
test
dec
mov
hlt
repnz
adc
push
xor
cmp
push
mov
lods
push
loopne
and
test
stos
mov
inc
pop
fldpi
xor
add
iret
dec
inc
pop
and
pushf
das
push
ljmp
fs
lods
inc
inc
mov
nop
mov
ret
repnz
jne
cli
out
stc
repz
lahf
daa
sub
mov
dec
jo
cmp
mov
out
pop
xor
addr16
xchg
enter
sbb
mov
mov
mov
jbe
scas
xchg
jmp
shll
pusha
insl
or
push
lods
insb
or
iret
lret
jbe
cmp
call
fldcw
jnp
pusha
push
pop
push
xchg
fldcw
fcoms
scas
mov
mov
pushf
xor
ret
cltd
lock
cli
jnp
mov
jns
in
sbb
mov
add
rclb
push
sbb
popa
push
int3
fdivrl
mov
jp
cmp
mov
cmp
in
dec
mov
ret
xor
cmpsb
inc
cmc
or
gs
sahf
and
push
mov
lock
dec
fisubrs
test
mov
push
mov
and
loope
gs
add
dec
fsts
je
test
xor
in
jge
loop
mov
out
sti
xchg
add
add
pop
mov
push
mov
mov
fadds
lds
jae
pop
loopne
std
mov
push
lds
or
mov
mov
push
jbe
das
or
mov
mov
icebp
fs
inc
and
jg
and
outsl
lahf
and
fs
adc
test
xchg
pop
mov
xchg
push
dec
in
int
bound
mov
in
jge
sub
xchg
sub
add
hlt
shrl
or
pop
jb
sub
decl
addr16
xchg
mov
mov
loope
dec
mul
cld
jecxz
ret
aas
mov
js
repz
or
inc
in
icebp
fsubr
fidivrs
std
sbb
or
xchg
mov
call
push
mov
mov
pop
out
insl
in
jnp
dec
js
in
imul
jecxz
or
stc
mov
inc
mov
out
lds
int
mov
mov
xchg
loopne
mov
shll
popa
mov
xchg
idiv
mov
push
fdivl
pop
int
and
lods
aaa
int3
adc
xchg
sbb
mov
rcrl
out
push
add
out
push
dec
arpl
pop
xchg
jge
movsl
pop
ljmp
inc
addr16
jne
lret
loope
enter
jp
repz
inc
fisttpl
ss
push
iret
lea
mov
rcll
mov
repnz
lret
idiv
mov
in
scas
outsb
mov
imul
and
rcrl
mov
rorb
sbb
inc
ljmp
pop
pop
notb
mov
push
jle
movsl
in
aam
jo
stos
jne
sti
and
xchg
gs
out
shlb
cwtl
xchg
adc
xchg
mov
push
icebp
clc
fnstenv
movb
daa
test
cmp
xchg
out
test
pop
or
aad
cli
arpl
sub
popa
in
shr
fs
shrl
rorl
aam
shl
shrb
pop
arpl
cmp
mov
inc
outsb
rorb
mov
cltd
jmp
sub
mov
test
in
lods
cmc
les
jnp
sub
sbb
stos
jge
sub
xchg
sbb
mov
stos
sub
or
cwtl
mov
pop
scas
push
mov
add
movsl
cmp
dec
lods
cmp
push
xor
imul
cwtl
popf
xchg
xor
in
adc
int3
aam
out
sbb
push
cmp
pop
aad
push
roll
hlt
mov
pop
fsubl
in
ss
xor
push
pop
adc
aas
xchg
out
rolb
ljmp
roll
fwait
roll
lret
movsb
pop
dec
add
mov
and
shll
arpl
data16
dec
movsl
adc
andl
loopne
negb
add
lock
andb
out
test
in
xor
aas
shll
xchg
leave
xor
jl
mov
push
nop
loope
or
stos
xor
insb
scas
es
and
gs
push
pop
inc
jmp
cmp
push
mov
dec
int
and
inc
cmc
xor
icebp
test
sub
movsb
mov
jbe
xlat
dec
jecxz
addl
hlt
mov
ss
enter
or
data16
idivl
aaa
pop
stc
mov
cmpb
sahf
jns
dec
shl
sub
fwait
loopne
loopne
mov
add
aaa
sbb
fimull
xor
call
mov
repz
aas
lret
xor
dec
sub
leave
cmc
ja
or
add
mov
mov
inc
int3
lret
movsl
xchg
xchg
lcall
mov
push
inc
push
cs
arpl
add
in
push
xor
flds
and
mov
cs
outsl
imul
xor
pushf
pop
push
xchg
jle
xor
stc
out
push
not
push
imul
or
sub
cltd
xor
cli
sub
mov
fldcw
push
xchg
ret
cmp
les
sbb
fst
push
add
sti
xchg
cmp
mov
outsl
scas
jecxz
dec
xchg
scas
lock
sbb
sbb
lahf
add
add
xor
xchg
lret
mov
jo
pop
out
fs
sbb
popf
or
pop
pop
mov
jl
and
cmpsb
leave
lods
movsl
insl
or
inc
cwtl
in
icebp
xchg
adc
jle
sub
lds
mov
dec
cmp
push
into
sbb
mov
into
push
dec
sbb
aad
mov
mov
dec
mov
mov
dec
push
fidivs
cs
ja
dec
pusha
sbb
je
scas
hlt
insl
push
outsl
sbb
jecxz
xchg
dec
adc
js
jns
push
test
popf
out
sahf
pop
jg
jbe
aaa
aad
push
pop
mov
pop
pmullw
adc
sahf
int3
in
jbe
pop
and
aad
sub
xchg
mov
cmp
scas
in
pop
testl
into
mov
cmp
sbb
call
cmpsb
pop
or
jbe
xchg
or
in
xchg
lcall
dec
iret
push
daa
dec
push
and
jne
test
fstps
jge
xor
push
fsts
dec
shrb
stc
lods
sub
mov
cmpsl
push
adc
pushf
jbe
lcall
push
movsl
je
lahf
movsl
push
sub
or
adc
sbb
push
movsl
in
adc
leave
or
les
push
inc
lds
pop
gs
cmp
mov
mov
mov
sbb
fnstenv
arpl
test
mov
je
es
dec
add
mov
sub
outsb
fdivrs
lret
arpl
sub
iret
outsl
std
sub
adc
pop
iret
les
pop
jo
lret
push
mov
mov
test
or
mov
push
je
andl
push
outsb
insl
ljmp
lock
push
xchg
xchg
aaa
mov
sahf
insl
jle
nop
pop
jno
cmpsb
sahf
jnp
shll
je
mov
jp
xchg
pop
imul
popa
jbe
jnp
cli
daa
dec
cld
mov
mov
mov
or
xor
daa
cmp
test
mov
fdivl
add
xchg
cmpsl
test
add
xchg
xor
lds
dec
fistl
cmpsb
test
inc
inc
scas
js
jno
sub
es
enter
sbb
clc
and
mov
xorl
push
pop
jno
mov
xchg
out
dec
aaa
xchg
jno
pop
mov
mov
xor
mov
mov
inc
dec
or
js
xlat
inc
ret
or
jmp
inc
push
lea
cmp
and
inc
mov
push
push
sub
push
sub
mov
cmpb
push
hlt
mov
cmp
je
insl
inc
sbb
dec
sbb
xchg
jo
in
das
jne
iret
push
popa
rorb
jle
addr16
std
fucomip
sbb
test
lea
cmp
sub
ja
fists
mov
sti
sbbl
push
jle
mov
mov
imul
cmp
jg
mov
test
test
movsl
js
xchg
mov
xor
out
les
sbb
push
rorb
stos
cmp
and
insl
icebp
push
cs
jae
std
leave
in
test
ss
leave
shr
xchg
or
imul
std
stc
fisubl
xchg
inc
repz
in
lret
sub
and
jbe
cli
mov
xor
pop
je
lret
subl
xchg
push
xlat
mov
mov
and
mov
mov
mov
jbe
cmc
mov
mov
push
arpl
mov
fmull
mov
push
ds
mov
fcomps
mov
dec
cmpsb
or
out
aam
push
nop
dec
jmp
pop
add
jae
sbb
cmpb
mov
in
add
rolb
push
push
jp
lock
jnp
cmc
ljmp
hlt
ret
push
ljmp
test
mov
cmpsb
cmp
or
mov
imulb
cs
push
jbe
shrl
add
fimull
mov
sbb
negb
ss
movsb
xchg
movsb
pop
outsl
mov
xorb
push
out
xor
and
icebp
dec
adc
ja
movsl
sbb
movsl
outsb
lods
imul
shr
sub
lret
adc
lea
fstpl
lret
mov
cmp
fiaddl
int
mov
pop
or
gs
lcall
mov
cltd
jne
scas
xor
mov
xor
fstl
test
jmp
cltd
jbe
inc
mov
mov
xor
les
in
add
cmpsb
pop
mov
into
xor
push
js
inc
and
fimull
movsb
aad
dec
jp
adc
imul
repz
in
lcall
sbb
out
xchg
xchg
mov
jno
mov
lods
bnd
cld
test
fwait
iret
sub
loop
repz
inc
fistpll
fs
ficomps
in
mov
jne
stos
in
aaa
mov
popf
decb
cmp
aam
sbb
out
xor
pop
xchg
dec
bound
fmuls
mov
rcll
aam
mov
mov
adc
jbe
mov
mov
push
lcall
mov
ficoml
addr16
mov
inc
shl
push
in
cs
pop
mov
push
lods
sbb
lods
jae
pusha
outsl
das
jmp
xor
adc
out
ja
push
movsb
bound
pop
orl
dec
pop
pushf
lcall
xchg
jl
jecxz
adc
or
sbb
int3
jbe
rolb
test
in
fmull
and
bound
cmp
cli
js,pn
movsl
scas
pop
jnp
cltd
in
out
adc
rcll
pop
repz
push
das
sbb
ja
scas
flds
in
cmp
sub
lret
or
les
pop
scas
jmp
std
insb
adc
stos
mov
mov
xor
in
push
jg
fiadds
stos
int
out
nop
and
pop
jbe
mov
push
andb
push
mov
cmp
push
mov
aas
mov
aaa
lods
xlat
sbbb
xor
and
inc
mov
sbb
shll
movsb
pop
in
or
add
sub
cmp
mov
pop
fldenv
push
sbb
push
dec
adc
orb
ret
xlat
fildl
add
stos
pushf
in
push
inc
pop
adc
cmpsb
ret
xchg
pushf
imul
lcall
cmp
jp
lods
or
add
inc
mov
leave
ss
add
add
test
or
mov
sub
js
or
int3
cld
aam
dec
inc
aad
jnp
cmp
scas
lea
sbb
pop
lods
xchg
loopne
lock
dec
out
fs
out
fisttpl
call
mov
jb
nop
in
aaa
pusha
jo
add
mov
mov
mov
jge
or
mov
cmpl
sub
popa
mov
inc
in
mov
sbb
scas
popa
xchg
movsl
jmp
mov
cmp
movsl
sahf
mov
lret
mov
dec
stos
sub
repnz
rcl
icebp
aam
movsl
movsl
outsb
notl
cmpb
hlt
aas
jns
xorl
cmp
mov
insb
add
arpl
lods
ds
add
test
or
mov
push
lds
xchg
pop
lret
je
mov
mov
xchg
leave
dec
test
push
iret
ret
inc
mov
cmp
sbb
jp
negb
je
xor
aad
sub
xlat
lahf
je
push
loop
inc
stos
hlt
roll
std
push
insb
xchg
mov
fisubrs
and
lods
fadds
jmp
inc
hlt
fnstsw
insb
pop
dec
sahf
lods
lret
jmp
scas
push
and
push
fs
lods
sbb
sub
and
mov
loop
in
shlw
adc
mov
push
movsl
and
fadds
pop
shll
or
mov
rolb
jb
enter
stc
daa
adc
bound
mov
out
push
mov
sub
sbb
adc
cld
mov
popa
loope
inc
mov
or
repz
mov
pop
loope
xchg
xor
iret
or
movsb
sbb
and
int3
outsb
xor
adc
fwait
cmpsb
adc
ljmp
mov
cli
mov
push
imul
sub
cmp
imul
cmp
cwtl
xchg
ficompl
aad
rcl
ja
push
mov
shrb
or
shll
sub
lcall
xchg
jo
jl
in
loope
popa
ja
aad
sahf
mov
adc
outsl
sbb
enter
vmread
shlb
push
sar
dec
js
jle
lea
dec
dec
inc
in
leave
xchg
out
aas
xlat
add
xchg
cmp
sub
cs
testb
add
pop
jg
out
fisttpll
pop
mov
rcrl
test
mov
cmp
int
jg
cli
xchg
push
incl
cmp
xchg
or
icebp
push
push
xor
mov
mov
mov
inc
sar
ja
mov
xor
or
inc
or
lock
inc
pop
pop
lea
jmp
sbb
mov
imul
push
dec
call
pop
sbb
jmp
sbb
and
ljmp
testb
xchg
rep
into
shrl
fisttpl
xchg
ds
inc
outsl
xlat
nop
int
mov
push
cwtl
mov
js
inc
into
sub
cld
das
cwtl
sbb
cmp
mov
pop
add
inc
mov
repz
mov
adc
push
je
and
and
cmpb
xor
es
push
loop
decb
xlat
mov
adc
fmuls
xor
jp
fs
push
in
cli
pop
fs
xchg
subb
push
insl
out
es
nop
stos
xor
out
fistpll
jmp
add
dec
cmpl
cmc
pop
in
inc
fdivr
cmp
sub
incl
cmpsl
out
popa
repz
sub
cmc
cmp
repz
sbb
addl
cmpsb
mov
lret
loop
fcoms
lret
and
sub
jecxz
ja
lods
xchg
push
test
ds
pop
test
fs
std
add
enter
pushf
xchg
pusha
mov
bound
inc
xor
xor
xchg
jle
aad
mov
cmpsb
popf
adc
inc
inc
rcr
imul
mov
cmp
push
cmp
orl
out
push
fsubr
shrl
scas
inc
jb
jbe
jle
sti
arpl
in
out
loopne
sub
cltd
mov
addr16
mov
call
movsl
les
mov
ret
dec
sub
xor
movsb
mov
pop
addb
movsb
and
fwait
mov
lret
inc
js
cmp
lock
rolb
cs
push
aaa
js
inc
out
push
fsubl
dec
or
mov
ss
add
add
push
dec
leave
jecxz
sub
sub
rolb
cmp
xadd
push
mov
dec
inc
xchg
mov
sub
jne
add
mov
mov
push
scas
test
adc
and
pop
push
rolb
dec
xor
push
push
and
hlt
xchg
push
stos
insl
add
js
std
sub
jae
sti
das
mov
jno
dec
xchg
stc
and
insl
dec
xchg
shrb
hlt
jecxz
and
sti
neg
andb
mov
push
addl
repz
push
sub
imul
sbbb
jbe
lock
mov
sub
pop
cmpsl
stos
fmull
xor
fwait
out
cltd
mov
outsb
xchg
sub
jns
ret
sbb
xor
mov
push
clc
jno
dec
andb
add
lcall
nop
jns
dec
jbe
mov
xchg
sbb
leave
movsl
pop
xchg
mov
les
mov
int
xchg
mov
in
lret
jmp
add
stos
push
pop
push
sbb
sahf
or
je
jmp
repz
or
fsub
scas
js
int3
orl
sub
mov
rcll
jo
pop
dec
lahf
mov
dec
fsubrl
ror
or
fsubr
out
cmp
fisubrs
in
frstor
inc
fldcw
mov
push
and
inc
xlat
stc
jo
jns
sub
aad
mov
inc
or
lret
push
push
push
mov
insb
cmc
iret
cmc
cmp
bound
insb
cld
pushf
ficompl
sti
push
dec
mov
dec
or
lret
jns
sub
pop
stos
js
xchg
mov
and
push
pop
ret
mov
jne
pop
in
std
inc
je
sub
jne
cmpsl
push
fwait
or
notl
cmpsl
cmp
ss
sub
adc
cmp
mov
add
inc
hlt
pop
sub
xchg
mov
sti
pop
popa
pop
rolb
jne
mov
cmp
or
sbb
insl
movsl
ficompl
xchg
inc
stc
inc
mov
mov
inc
fsubs
inc
and
mov
push
arpl
imul
add
pop
es
test
push
add
fildll
jge
mov
fwait
stc
add
frstor
jle
xor
jmp
lea
mov
ljmp
cmp
stos
lock
int
inc
lods
inc
rorl
pop
mov
pop
dec
adc
addr16
js
pop
inc
push
cs
cmp
pop
stos
pop
imul
stc
sub
call
and
jnp
xor
add
push
push
add
sub
out
bound
sbb
xchg
xor
add
jno
out
int3
xor
shrb
gs
mov
hlt
sbb
jmp
jno
jno
dec
sub
idivl
jo
int3
mov
mov
cltd
lods
dec
out
outsb
ja
ds
lock
in
pop
pushf
int
enter
loop
icebp
ss
or
push
push
sbb
or
sahf
pop
sahf
xchg
popl
lods
in
inc
cmp
inc
sti
cmp
fs
push
sub
in
outsl
jecxz
jo
mov
mov
lds
paddusw
push
cmp
jno
inc
aaa
mov
jbe
popa
cmp
lods
ds
in
test
adc
mov
rcr
add
inc
clc
paddb
pop
push
mov
lock
das
cmpsb
xchg
cmpsb
popf
or
frstor
scas
xchg
pop
adc
add
movsl
adc
jg
loop
mov
xchg
pop
ss
and
dec
jl
dec
sbb
ljmp
je
loop
bound
mov
xor
pop
popf
dec
cmp
sbb
dec
jg
mov
dec
add
adc
sbb
xchg
pop
inc
adc
jge
pop
loopne
cmp
pushf
shrl
push
into
sub
mov
pop
sub
jg
push
in
mov
or
inc
xor
outsl
mov
rcrl
out
test
repnz
std
stc
shll
movsl
in
nop
jae
stos
decl
js
mov
jle
repnz
cli
dec
sti
xor
pop
sbb
xor
hlt
cmp
addl
sbb
idivl
test
pusha
mov
jno
int3
mov
jecxz
xorb
and
xchg
fwait
xor
arpl
adc
addr16
push
dec
shlb
mov
xor
arpl
xchg
popa
scas
lahf
push
or
add
dec
leave
push
sub
dec
xlat
xchg
nop
push
insl
jnp
movsl
jbe
inc
loopne
js
mov
int
lret
xchg
sub
ss
adc
jle
mov
mov
xor
les
inc
pop
mov
push
xchg
hlt
pop
repnz
xchg
cmc
out
mov
ljmp
lcall
bnd
outsb
jp
push
lock
jle
pop
sbb
lods
jns
iret
cmc
push
movsl
mov
aas
xor
leave
mov
flds
mov
push
or
hlt
int3
and
add
mov
dec
xlat
stos
xor
adc
scas
pop
sbb
inc
cmc
push
scas
cmp
pop
mov
fsts
test
mov
cli
mov
rcrb
stos
jp
inc
xor
pop
enter
jnp
aas
jb
hlt
push
mov
fwait
add
mov
or
pop
test
jo
roll
cmp
inc
adc
rcrb
das
fdivs
enter
pop
ljmp
inc
call
xor
cwtl
or
xor
or
outsb
push
aad
xchg
call
sbb
out
lea
mov
outsl
lods
inc
xlat
adc
fs
push
test
imul
jle
jge
outsb
xchg
pop
loopne
fmull
xchg
cmc
and
pop
mov
rol
mov
loop
sbb
hlt
cli
push
mov
mov
cli
mov
insb
movsb
incl
stos
in
xchg
or
jb
jo
xor
jne
lock
lock
outsb
mov
vandnps
pop
pop
adc
fldl
repnz
out
mov
jl
sbb
fidivrl
pop
fs
push
jne
cmpsl
dec
aad
movsl
cltd
shlb
push
mov
leave
ljmp
je
xor
stos
mov
stos
leave
push
clc
mov
aad
mov
ret
xchg
add
jno
cmp
nop
nop
pop
cs
xor
jge
test
in
aam
inc
push
xchg
add
add
in
filds
cmpsb
ficompl
lods
shl
incb
add
es
mov
sub
in
inc
je
push
out
jns
jne
xchg
ja
aaa
loop
cmc
mov
pop
cmp
leave
js
shlb
insb
xor
push
pop
and
fwait
push
pop
and
lret
cs
mov
jecxz
out
outsb
pop
mov
add
sbb
mov
andl
mov
jne
pop
push
inc
fisttpll
mov
ss
ss
stos
jecxz
and
test
shrl
jge
jbe
jno
xchg
jno
mov
pop
mov
sub
sbb
push
jge
sub
int
int
mov
scas
mov
sub
xor
scas
sahf
out
pop
and
adc
dec
push
xor
mov
bound
mov
sbb
sub
sti
inc
inc
mov
dec
cmpsl
jns
mov
inc
js
mov
sarb
ss
insb
stc
pusha
cmpsl
loopne
jae
jp
out
stos
or
call
xor
sub
int
leave
jnp
dec
or
js
das
hlt
push
sbb
push
bound
test
sbb
out
movb
push
push
lods
insl
and
mov
imul
sub
lock
sub
jp
xchg
imul
lret
pop
pop
or
out
icebp
cs
or
mov
loopne
pop
icebp
xor
fisubrl
xchg
cmp
xchg
cmpsl
jno
jmp
inc
dec
sbb
test
cmc
sub
pop
mov
sahf
lds
cmp
je
cmp
sti
mov
mov
inc
std
adc
sub
xor
add
push
inc
pop
pop
int3
xlat
adc
cmpsl
popf
xchg
push
xor
cli
mov
pop
mov
and
jle
mov
sbb
test
js
xchg
push
xor
pop
hlt
stos
in
push
adc
dec
and
mov
mov
pop
negb
movsl
mov
ljmpw
fidivrs
arpl
ret
ret
repnz
pop
sbb
adc
push
mov
repnz
popa
popf
fstpt
testb
daa
rcrb
decl
jecxz
push
fpatan
cmpsb
mov
out
xor
push
and
jge
and
sbb
mov
sbb
push
enter
jge
imul
rcrb
cmp
push
xchg
mov
xor
add
mov
js
fadds
mov
lahf
cltd
insl
sub
adc
sahf
lret
sbb
fst
jb
jne
loop
add
rorb
lds
mov
or
adc
dec
jecxz
pop
push
pop
jecxz
rolb
leave
rol
pusha
test
mov
cmp
ds
jmp
faddl
fiaddl
xor
push
test
or
jno
sub
adc
rcrb
ret
sub
es
lods
popa
or
insb
sub
sub
scas
xchg
loop
arpl
push
push
das
sahf
mov
xchg
adc
fmuls
hlt
rcll
js
imul
jmp
icebp
cmpsb
in
and
idivl
xlat
jecxz
jne
imul
in
jmp
jnp
adc
mov
repz
push
xlat
stos
inc
mov
popa
sbb
jp
jb
dec
insl
xor
test
xor
stc
push
jl
aad
sub
jg
lods
aaa
scas
cld
mov
insb
add
mov
daa
adc
sbb
xor
or
jg
int
jb
cmp
int3
rcrl
jns
mov
ja
jp
push
fdivrl
fisubs
pushf
scas
fwait
repz
adc
jmp
xor
out
repnz
icebp
cmpsl
add
jno
shrd
mov
push
inc
xchg
inc
or
dec
fsubs
jge
icebp
pop
sbbb
and
xor
addl
jg
jne
jmp
push
adc
cmp
add
jmp
je
int
push
mov
inc
fidivl
or
repz
or
aas
inc
lcall
push
and
insb
rcl
mov
xchg
xor
je
xor
and
xor
movsl
mov
xchg
aad
push
aam
fldenv
inc
mov
insb
jge
xchg
aaa
xlat
sbb
inc
mov
xor
loop
scas
push
ljmp
movsb
loopne
sub
sahf
mov
pusha
icebp
loopne
stc
fnstenv
push
or
jo
or
sub
pop
popw
mov
jg
xchg
lret
adc
mov
push
mov
push
lods
outsl
fs
lds
loopne
inc
jg
in
aaa
call
outsl
mov
push
sahf
int
add
xchg
mov
dec
out
and
mov
enter
int
in
lret
xchg
push
in
popa
fisttpll
pop
stos
jecxz
ss
sbb
pusha
xchg
sbb
xchg
mov
out
fmulp
inc
lods
jne
jno
inc
sahf
xchg
cwtl
lret
cmp
pop
sbb
ficomps
jecxz
xchg
ja
mov
adc
mov
es
fidivrl
sahf
sub
jb
mov
sub
loope
testl
dec
in
sub
bound
je
push
into
pop
adc
xchg
mov
jne
xor
sub
cmp
sub
and
xchg
jb
adc
jecxz
cmp
pop
lret
xorb
and
sbb
pop
shll
dec
push
and
jecxz
fists
sbb
mov
mov
inc
xor
insb
jae
mov
and
js
arpl
dec
pop
cltd
push
xchg
sub
mov
test
ret
push
sub
sti
fldl
nop
das
fimuls
mov
sbb
movsl
enter
addr16
aaa
pop
inc
fnsave
test
sub
pop
in
and
ret
out
jge
adcl
mov
movsb
xorb
mov
nop
push
clc
je
lock
sbb
sub
mov
xor
neg
sbb
cltd
xchg
cwtl
adc
cmp
push
and
or
inc
in
mov
dec
add
xor
in
add
lcall
cli
jg
lock
or
stc
sbb
aad
xor
add
testb
repz
test
int3
popa
test
xor
xor
test
popf
js
xor
adc
jmp
push
sub
out
sub
call
test
adc
aaa
sub
cmp
xor
jecxz
mov
dec
add
jp
adc
cmp
rol
ljmp
xor
xchg
outsl
in
js
push
test
adc
pushf
cltd
mov
and
xchg
jne
insb
xor
and
inc
repz
inc
xor
push
pop
and
js
lret
dec
cs
inc
outsb
call
dec
mov
cmp
mov
cmpsl
mov
enter
pop
cmp
das
popf
inc
stos
cmp
rcrl
and
inc
repnz
mov
scas
imul
inc
push
fstps
xor
inc
mov
fsubr
repnz
push
push
push
sub
mov
stos
xor
sub
das
and
push
cmp
jns
sub
jl
ja
jns
jb
out
mov
or
sbb
push
mov
test
leave
ss
jg
adc
jns
das
in
jmp
and
aad
mov
pop
pop
mov
ret
pop
dec
outsl
jnp
xchg
cmp
lcall
fisttpl
jno
out
mov
out
in
testl
dec
push
push
popa
push
aam
mov
sbb
push
dec
inc
mov
insl
in
mov
js
bound
out
test
cmp
mov
lea
ja
outsl
mov
cwtl
out
stos
xlat
int
stos
je
mov
insb
ret
jle
sub
and
aam
cltd
mov
pop
andl
rclb
push
or
cmp
xchg
cmc
xor
cmp
pusha
ficoms
mov
jbe
shll
jns
xchg
sub
test
cmp
xchg
icebp
inc
xor
mov
stos
dec
cmc
adc
arpl
adc
and
hlt
int3
test
cwtl
sbb
xorl
inc
sbb
data16
dec
mov
in
sbb
daa
test
pushf
test
add
xchg
pop
mov
mov
iret
ret
lock
cli
leave
cmp
cmpsb
dec
shll
pop
cmp
xchg
mov
cli
xchg
or
cmp
push
mov
mov
push
jecxz
inc
fdivrl
mov
push
push
in
and
mov
bound
cmp
aas
xchg
mulb
xchg
cmpsl
fld
fwait
cld
int
int3
jecxz
sbb
xor
jg
stos
pop
mov
jp
imul
ljmp
jns
imul
leave
jmp
nop
aaa
repnz
jae
add
repz
testl
and
and
sarl
sub
popa
pop
daa
fs
stos
sbb
cltd
add
push
xchg
stos
jb
push
xchg
hlt
ds
mov
adc
add
lahf
imul
outsl
mov
inc
lds
mov
rcrl
leave
dec
cld
pop
and
cmp
xchg
dec
jecxz
jne
push
pop
lods
and
xchg
cwtl
call
stc
cs
icebp
dec
sub
in
xchg
pop
mov
and
movsb
mov
rol
roll
mov
jbe
rclb
and
fldl
push
imul
mov
test
and
aad
dec
stos
jb
inc
aaa
cli
aad
inc
jo
rol
mov
ret
lret
movsb
mov
mov
popf
and
cld
stos
leave
divb
pop
lahf
jne
sub
dec
outsb
mov
ret
xchg
sti
insb
movsb
cwtl
push
int3
mov
inc
cmpb
popl
pop
sub
pop
mov
aas
fsubrs
add
push
insl
mov
sbb
dec
xor
arpl
xchg
mov
es
inc
xchg
xchg
mov
push
lcall
mov
inc
pusha
or
pop
inc
jecxz
fmuls
push
ret
repnz
and
lcall
insb
stos
int3
scas
leave
arpl
ljmp
cwtl
mov
insb
push
cmp
inc
test
call
in
inc
fadd
cmp
push
icebp
mov
inc
pop
xor
stc
lahf
sub
push
adc
loopne
or
mov
inc
dec
fs
sbb
jno
ljmp
adc
rorb
testb
lahf
adc
lods
jg
cmp
sbb
jg
push
stc
cs
rclb
les
ror
hlt
inc
pop
cmc
arpl
pop
xor
imul
mov
mov
or
sub
test
pop
and
pushf
mov
mov
bound
shl
pop
add
dec
add
std
test
sub
cltd
gs
in
out
lds
mov
sbb
xor
in
add
fs
xchg
jae
pop
lret
fs
and
and
faddl
and
mov
in
aam
loope
cmp
push
xor
cmpsb
push
incl
jg
push
lods
loopne
stc
pop
gs
jecxz
xchg
jge
add
mov
push
push
ds
ss
jbe
mov
stos
stos
cmpsl
xor
pop
and
stos
push
inc
inc
push
mov
mov
or
xor
arpl
xor
or
dec
cmp
mov
xor
jne
stc
in
dec
sbb
pop
cmp
push
cmp
or
test
jno
scas
xchg
iret
pop
or
hlt
jne
popf
or
adc
mov
or
lret
and
add
cmp
loopne
stc
push
es
les
ret
out
movsl
pop
lret
or
addr16
mov
push
pop
cmpsl
or
xchg
add
dec
adc
mov
test
insb
cmp
cltd
sti
mov
sbb
imul
lds
repz
shrb
dec
shrb
xor
or
ljmp
add
add
std
outsl
fcoms
into
jae
icebp
jl
push
pusha
shl
push
jmp
mov
jns
rorl
enter
xor
outsb
movsb
into
in
test
xorl
jno
jp
inc
or
repnz
pop
push
mov
dec
hlt
jns
inc
ljmp
jecxz
ss
je
push
dec
in
jmp
mov
dec
xor
outsb
mov
jae
jo
push
enter
pop
pop
shlb
jmp
jg
mov
push
pushw
push
fs
leave
jne
xchg
repnz
nop
sub
nop
fnstenv
adc
popf
and
push
lahf
inc
lods
out
rorb
inc
ret
mov
inc
jno
leave
or
dec
jecxz
fisubs
stos
mov
adc
xchg
add
dec
aas
inc
cltd
dec
pushf
imul
jno
int
sbb
out
loope
mov
cmp
add
jo
jo
lock
or
jnp
int
jge
adc
fwait
pop
cmpsb
sbb
dec
jbe,pt
and
popf
mov
lret
mov
je
stos
dec
xor
mov
cmpl
cmp
jno
mov
filds
out
gs
mov
sub
or
push
es
lret
mov
and
fisubl
loopne
and
xchg
retw
push
mov
cmpsl
sub
push
cli
fisubrl
mov
xchg
call
mov
faddl
sarl
lods
loope
mov
cmp
xchg
mov
push
ret
push
add
inc
cmp
jp
test
subl
push
cmp
dec
mov
mov
push
push
repnz
mov
iret
repz
rolb
xchg
imul
pop
fsubrl
sti
gs
sahf
or
push
xor
movlps
mov
inc
or
mov
sub
and
cmp
push
inc
push
in
inc
sbb
movsb
ret
add
add
or
and
mov
incb
sub
fstps
xor
add
aaa
mov
sarb
stos
je
out
rclb
aad
xor
in
stos
cmovs
out
mov
and
fcom
jmp
push
addr16
inc
mov
orl
bound
adc
jp
jne
fstpl
icebp
ret
leave
shl
inc
and
xchg
test
adc
ret
lods
mov
mov
cmpsl
repnz
xor
adc
sub
js
add
jmp
test
in
and
mov
subb
mov
and
add
dec
jmp
pop
cmp
mov
jbe
jge
mulps
lds
pop
mov
push
jns
sub
fsubrs
cmp
hlt
xchg
lods
sti
adc
jne
cwtl
ret
cmp
pusha
popf
sbb
push
mov
aaa
lds
scas
mov
cwtl
pop
lret
popf
jb
mov
xchg
nop
stos
mov
xchg
adc
bound
out
mov
and
xchg
scas
dec
push
ljmp
adc
mov
aas
jbe
dec
jnp
mov
cmc
inc
jne
stc
imul
clc
ficomps
test
mov
sub
mov
jno
lret
inc
cmp
out
adc
inc
rcrb
xor
pop
stc
in
sub
jb
mov
pop
stc
mov
imul
inc
insb
in
fisubrl
in
lods
stos
mov
aad
mov
fidivrs
movsb
mov
add
inc
fstpt
sub
xchg
mov
hlt
jmp
jne
ficoml
sub
add
mov
es
sub
xchg
lds
pusha
ljmp
push
out
ss
mulps
outsb
mov
in
adc
xor
mov
in
pushf
sub
js
mov
cmpsb
push
cmpsb
std
fiadds
nop
pop
dec
mov
jns
sahf
inc
stc
jo
mov
xor
cld
sub
fcmove
xor
icebp
xchg
xor
call
cmp
mov
push
mov
es
fstpt
mov
push
cmp
call
or
mov
loopne
adc
outsl
rclb
scas
in
ds
adc
daa
sbb
push
jbe
inc
enter
daa
mov
lods
jecxz
es
cmp
mov
std
sbb
cmp
ret
enter
dec
ror
imul
fwait
push
jecxz
cld
dec
outsb
inc
and
outsb
enter
out
cli
add
pop
and
addr16
cmp
cwtl
lods
in
call
pop
sahf
out
dec
pop
fcom
mov
int3
xor
xor
arpl
fimull
cltd
cmpsl
test
xor
stos
push
fidivrs
xchg
mov
or
push
sbb
shl
addr16
fs
int
aad
ret
pop
lods
xchg
jnp
pop
call
add
cmp
push
mov
mov
mov
sub
mov
and
leave
cmpsl
xchg
pop
sarl
sbbl
sbb
test
add
std
daa
addr16
int
lret
pop
pop
movsb
int
or
pushf
adc
sahf
mov
fstps
mov
push
jne
mov
cli
pop
xor
mov
btc
stos
test
shr
sub
xchg
jno
jmp
and
data16
iret
cmpl
mov
cmp
in
out
fdivr
mov
dec
cmp
test
mov
mov
repz
push
xor
and
adc
fsubl
jbe
aad
pop
cltd
xchg
push
stos
push
mov
jg
lods
xchg
jns
ja
sti
ret
mov
orb
mov
mov
cmp
pop
sub
and
mov
mov
stc
das
add
xchg
jns
pop
and
popf
rcrl
lret
ret
inc
mov
mov
inc
lods
mov
cmp
es
repnz
data16
pop
jecxz
mov
int
xor
cmc
mov
inc
lock
inc
inc
push
test
sub
mov
adc
sbb
jle
sub
or
sbb
jg
fildl
lret
or
sbb
mov
adc
sbb
lret
xor
das
out
movsl
mov
in
push
adcl
andb
lea
xlat
inc
cmpsb
mov
sbb
aas
rcrb
sbb
xor
adc
and
sub
in
add
enter
mov
adc
xlat
pop
or
and
and
push
mov
lcall
pusha
aas
add
pop
adc
dec
notl
subl
sub
sbb
aaa
icebp
mov
inc
cmp
aas
fwait
pop
cltd
mov
in
adc
xor
subb
inc
add
imul
imul
jmp
push
popf
movsb
mov
fidivrs
jg
test
sbb
sti
or
notb
jp
mov
inc
mov
rorb
push
inc
test
adc
pop
pop
into
mov
outsb
in
dec
loop
aam
dec
ds
jo
dec
int
mov
arpl
mov
iret
in
aaa
mov
fcmovne
inc
nop
mov
mov
ds
stc
scas
push
icebp
sbb
push
cmp
mov
cmp
in
push
jo
xor
fwait
incb
dec
mov
lods
add
push
pop
bound
dec
shrb
xorb
mov
fld
adc
movsb
mov
out
pop
mov
out
mov
adc
lea
mov
out
jp
sti
das
out
ss
xchg
sbb
lcall
enter
jmp
inc
into
insl
push
pop
jp
cmp
imul
jnp
mov
mov
adc
clc
mov
cmp
leave
stos
cmp
inc
ret
jae
lcall
or
clc
adc
cmpsb
xchg
out
movsb
shll
sub
inc
ja
jecxz
notl
cmp
mov
mov
jb
push
jmp
mov
sahf
push
aad
mov
push
jle
std
jno
pop
pusha
lcall
int
add
pop
mov
cld
adc
sbb
pop
jno
dec
push
aaa
add
inc
bnd
sbb
popf
orb
inc
mov
mull
sbb
inc
or
inc
ljmp
iret
inc
jg
testb
cmpsl
repz
shll
push
movsb
mov
repnz
xchg
dec
daa
jmp
outsb
fildll
adc
add
and
add
adc
cmp
fnstenv
sbb
dec
push
stos
shll
xorb
mov
bound
dec
lds
jae
std
aad
push
inc
sahf
jne
data16
loop
leave
mov
daa
push
push
jecxz
cmp
cmp
or
fisubrs
sub
jp
test
pop
testl
jecxz
insb
add
je
jp
xor
inc
lret
cmpsl
ficoms
adc
cltd
bound
pop
les
sub
mov
sub
sub
loope
into
cli
dec
test
pop
mov
shll
or
mov
jne
mov
add
pop
fiadds
push
push
lea
jecxz
adc
xor
inc
sub
mov
bound
mov
dec
cmc
inc
fstl
sahf
jb
imul
push
inc
cli
add
dec
fldz
jmp
cmp
jg
pop
inc
mov
fst
inc
out
movsl
jp
push
es
push
pusha
lret
push
dec
inc
stos
cmp
insl
dec
pop
lret
mov
scas
das
jne
jl
sbb
push
cmp
xor
negb
and
sarb
dec
pop
push
filds
pop
mov
push
dec
cmc
negb
push
rorb
or
pop
insb
andb
mov
mov
rclb
lods
mov
int
out
mov
int3
lods
lock
inc
aaa
inc
std
push
jmp
sbb
mov
sub
adc
and
test
or
in
xor
addr16
jge
daa
std
xchg
int3
and
jne
push
or
lea
fcoml
mov
fs
xor
and
mov
push
jg
lahf
jp
inc
jl
jbe
mov
jecxz
pop
cmp
or
das
les
sbb
in
dec
clc
pop
cmp
popf
cmpsl
jecxz
out
filds
mov
pop
mov
jg
out
daa
pop
outsl
cmp
jbe
fldl
inc
iret
or
fisubrl
pop
dec
rolb
divb
cmpsb
and
xchg
inc
imul
dec
sbb
lret
inc
mov
rolb
xor
in
sahf
jge
lcall
push
leave
pop
test
fstpl
divl
mov
pop
push
add
mov
lret
cld
cmp
pop
leave
lcall
mov
mov
lods
cmc
jle
ret
subb
inc
inc
out
fildll
imul
mov
stos
adc
mov
fmull
jno
xchg
cmp
sbb
lret
pusha
outsb
imul
xchg
jb
mov
jmp
scas
out
add
sahf
aad
fxch
int3
mov
lods
and
mov
sbb
adc
repz
scas
fidivrs
imul
xchg
aad
xchg
pop
ss
fimuls
or
pop
aam
je
das
push
push
add
mov
cmpsb
or
daa
sti
cmp
push
and
loop
dec
mov
insl
outsb
ja
into
xchg
data16
stos
test
sub
fidivrl
push
cmp
rclb
pop
rorb
pop
repz
insl
push
mov
jnp
test
fdivs
dec
loop
sub
mov
icebp
pop
push
test
out
repnz
aad
hlt
int
add
xchg
xor
and
cld
xchg
mov
outsb
xorb
repnz
mov
mov
lcall
call
push
iret
ljmp
dec
jmp
mov
cmp
mov
push
push
insl
jmp
adc
or
mov
adc
dec
sub
test
mov
mov
les
cli
or
sbb
in
cmc
dec
dec
int
not
inc
lahf
mov
mov
pop
sub
inc
sub
loope
movsb
push
test
mov
mov
jb
jle
pushf
mov
loope
pusha
xor
ss
test
andb
push
std
mov
push
push
add
enter
mov
cmp
fcomps
enter
xchg
dec
fstp
push
js
cmp
lea
pop
lahf
mov
sti
dec
test
loopne
and
ffreep
inc
mov
scas
sbb
or
repz
int3
lds
enter
sbb
fstl
mov
xor
leave
add
das
and
and
mov
pop
loopne
insl
and
cmp
imul
arpl
push
jecxz
loopne
iret
jge
push
sub
sub
xchg
add
imul
lods
or
jae
xchg
shr
js
pop
or
xchg
rorb
jae
push
in
adc
out
xor
cmp
mull
mov
pushf
mov
and
add
testl
dec
inc
push
mov
pop
outsb
jo
addr16
data16
inc
xor
mov
pop
outsl
rorl
sub
cwtl
out
push
adcb
pop
mov
test
out
stos
mov
cmp
rsqrtps
mov
add
sub
imul
mov
add
dec
jo
icebp
imul
and
fadd
sub
ret
cli
pop
inc
pop
out
pop
sub
ret
ss
jle
rcrl
jns
dec
push
or
mov
and
sarb
and
and
ljmp
pushf
enter
sahf
jmp
ja
jecxz
aad
cmp
aad
shrl
inc
adc
push
inc
pop
inc
loope
cmc
scas
mov
and
push
lahf
and
pop
mov
or
adcb
adc
pop
jo
addr16
jl
int3
mov
xchg
orb
add
mov
jno
imul
fimull
test
mov
push
rcl
dec
stos
and
pop
in
js
adc
insl
xlat
and
jge
std
mov
or
jmp
clc
adc
lods
sbb
insl
adc
inc
sub
mov
cld
es
in
mov
enter
scas
xchg
dec
mov
cmp
ja
or
fmuls
fs
mov
and
hlt
insl
lods
sarb
adc
mov
inc
int
cmp
sahf
lock
push
pop
sbb
in
sub
mov
es
inc
daa
loopne
aaa
dec
sub
mov
jecxz
fldenv
sarb
push
stos
das
lds
mov
xor
lcall
fwait
jno
andb
sub
mov
cld
xchg
pop
or
cld
imull
xor
sbb
inc
xlat
fdivrp
mov
jl
xchg
int
inc
sbb
lret
mov
lea
lahf
mov
xchg
aad
subl
gs
jmp
dec
test
cmp
adc
bound
cmp
push
jb
mov
push
popf
repz
movsl
add
icebp
ret
mov
cmpl
cwtl
insb
int3
icebp
test
dec
adc
or
fidivrl
adc
jmp
pop
inc
loope
mov
sbb
xchg
add
sarl
xorl
add
mov
das
test
cmp
mov
or
or
and
loopne
mov
fmul
insb
cmpsl
mov
into
mov
mov
mov
hlt
shll
movsl
adc
movsb
lea
xor
push
xchg
xor
arpl
adcb
cli
fidivl
subl
xor
cmpsb
jmp
test
xchg
dec
arpl
add
arpl
jns
dec
xor
pop
pop
push
add
jp
jbe
push
jp
outsl
xchg
jne
lcall
and
jb
dec
repz
mov
mov
sub
xchg
pop
je
ret
cltd
mov
mov
mov
fisubs
dec
pushf
and
sti
inc
lods
xchg
add
icebp
xchg
fistpll
inc
pop
and
ficomps
sub
mov
divl
lds
lcall
add
mov
cs
das
out
xchg
lret
mov
or
pushf
fcoml
divl
pop
insl
in
outsb
int
repnz
mov
add
cmpsb
pop
push
add
sbb
imulb
in
into
aaa
mov
lods
pop
test
pop
insl
jge
insl
or
scas
stos
xor
insb
cli
push
adc
or
outsb
dec
and
add
jno
das
rcl
sbb
nop
das
int3
in
dec
scas
mov
js
pop
jo
add
fdivl
mov
jne
mov
fnsave
inc
pop
push
pop
jne
push
dec
adc
ljmp
call
inc
sbb
and
mov
jne
cmp
jl
inc
shll
push
push
add
ret
xchg
dec
lods
pop
adc
shlb
stc
lea
xor
shlb
imul
arpl
mov
out
lret
push
push
pop
test
push
mov
shrl
pop
pusha
mov
ss
loope
xchg
loop
scas
loopne
popf
jno
push
daa
push
lcall
daa
lcall
pop
sub
mov
cmpsl
sbb
outsb
cmpsb
dec
stc
xchg
adc
lods
out
fsubrl
jecxz
push
ja
shlb
mov
fcmovnb
daa
dec
xor
bound
or
cmc
not
call
xor
pop
pop
inc
lods
mov
icebp
push
shrl
and
sub
mov
jno
mov
imul
movsb
push
popa
pop
mov
push
mov
imul
gs
mov
pop
xor
stc
add
and
mov
ss
mov
popa
push
cli
data16
sbb
movsl
loope
push
lret
add
popa
cmc
ds
popa
outsl
jp
jo
loop
scas
pop
pusha
mov
pop
dec
dec
sub
cli
js
dec
inc
fisubl
call
addr16
sub
cmp
or
or
adc
sub
fsubrs
adc
pushf
cltd
ja
pusha
mov
push
in
mov
ljmp
incl
in
jmp
loop
testb
mov
loop
xor
push
xor
popf
mov
inc
pop
pop
scas
sbb
push
mov
adc
push
outsl
lret
and
or
or
push
inc
repnz
lret
jg
nop
fistpll
testb
out
mov
jg
jo
orl
dec
jno
sahf
add
or
out
pop
push
add
lret
mov
push
ja
and
mov
lds
lcall
sub
inc
movsl
leave
and
mov
sub
mov
lcall
mov
cs
lret
adc
sub
mov
dec
push
push
and
add
push
push
call
data16
cltd
add
out
fistl
imul
jmp
sub
and
lret
fsubrl
push
test
data16
cmpsb
or
adc
cmpsl
faddl
pop
out
pop
insb
in
fisubl
fldl2e
and
cmp
adc
mov
mov
mov
xchg
jge
sub
mov
add
addl
xchg
call
mov
jns
in
push
loopne
xchg
scas
int3
sub
xchg
iret
pop
inc
inc
cltd
out
jl
add
mov
pop
rcl
pop
or
les
and
jbe
or
scas
sbb
adc
lret
iret
push
jge
data16
xor
loopne
fsubs
jge
jg,pt
cmp
or
in
insl
push
repz
mov
lds
adc
jns
loop
es
cmp
pop
les
inc
orl
shlb
cmp
mov
inc
mov
jo
mov
cld
inc
xor
mov
pop
outsl
mov
pop
jp
inc
cmp
sbb
lds
test
loope
daa
iret
inc
xor
imul
mov
mov
and
jge
mov
mov
fisubrl
ja
loop
xor
add
in
fnstcw
in
inc
pushf
and
push
aam
nop
vmwrite
divl
adc
cmp
lds
sarb
mov
clc
fiaddl
dec
imul
arpl
add
insb
pop
daa
sbb
icebp
int3
ljmp
jae
push
xchg
dec
mov
xchg
fadds
lock
rclb
lret
lea
cmp
loope
jg
cld
iret
mov
cli
add
sbb
daa
popa
jle
iret
jecxz
loope
int3
pushf
loopne
pop
mov
dec
mov
pop
push
adc
popf
mov
loop
jge
rcrb
cltd
add
cltd
movsb
pop
jmp
jae
fildl
xchg
repnz
xchg
pop
dec
repz
mov
aaa
push
call
sub
lock
cld
out
adc
push
andb
mov
push
xchg
ficomps
fstpl
adc
xchg
jmp
and
enter
insl
jle
and
cmp
inc
and
insl
das
mov
loopne
std
mov
push
cmc
push
pushf
aas
lock
add
icebp
incl
inc
add
sbb
cmp
test
add
xchg
cmpsb
push
adc
add
xchg
jns
sbb
or
test
insl
mov
repnz
hlt
aaa
dec
jecxz
rcrb
lock
je
adc
cmp
adc
sbb
xchg
pusha
or
out
and
lret
mov
fistpll
ljmp
mov
push
rol
jo
in
js
sbb
cwtl
inc
dec
popl
das
xor
or
cld
in
xor
into
fildl
cmc
into
in
mov
mov
adc
incb
icebp
adc
pop
insl
fistps
outsb
cmp
adc
popf
mov
fwait
test
inc
cmp
cmp
lods
psrld
out
mov
outsb
or
mov
ss
sbb
or
loop
sbb
iret
jge
fdivrs
dec
or
sbb
and
add
mov
cs
sub
cs
sub
inc
jae
aad
test
dec
sbb
divps
dec
jne
pop
jb
cmp
stc
adc
pushf
jecxz
mov
jle
mov
xchg
adc
movl
cwtl
loope
aam
in
test
mov
jl
mov
cmp
mov
fsubl
into
mov
ja
dec
push
aaa
or
data16
sub
xchg
dec
jae
push
mov
cmp
adc
or
mov
sbb
xor
cmp
add
push
mov
mov
jns
and
cltd
je
cmp
pushf
scas
xor
jno
jnp
cmp
lcall
mov
movsb
ror
dec
inc
loope
sub
xor
scas
jbe
aam
cmpl
jle
and
iret
cmp
sub
xlat
lahf
jbe
mov
inc
sub
aaa
jp
cltd
and
mov
sub
cmp
ret
add
call
adcl
mov
ficompl
mov
lret
add
ds
inc
fisttpl
sahf
shrl
jp
jno
fnstcw
mov
xchg
test
dec
cmp
sti
imul
mov
mov
lahf
call
lods
jne
xchg
daa
scas
mov
xlat
inc
sbb
push
adc
loopne
inc
stos
clc
leave
and
leave
jp
jbe
add
xchg
or
mov
mov
outsb
dec
adc
mov
or
pop
sarb
pop
or
js
add
adc
ud2
dec
nop
cmp
and
adc
clc
fisttps
das
pop
or
mov
pop
aad
in
ja
stc
and
cmpl
cmp
cmp
xchg
or
sub
clc
adc
int
jecxz,pn
pop
jns
mov
stc
mov
mov
scas
adc
pop
mov
add
fs
mov
jmp
cmp
inc
loope
mov
dec
add
jecxz
lea
jbe
and
pop
mov
aam
test
sbb
dec
mov
cltd
xor
mov
sbb
sub
sahf
aaa
pop
or
push
pop
pop
push
js
and
repz
lds
insl
xor
ficomps
adc
push
icebp
push
mov
cwtl
fisttpll
sbb
lret
stc
pop
xlat
mov
mov
mov
insb
push
repz
leave
xor
jbe
jecxz
test
clc
test
int
pop
lret
jo
popa
out
jle
fldcw
mov
pushf
and
pushf
push
call
mov
or
xchg
or
imul
lret
adc
std
lret
xor
sbb
dec
cmp
jbe
push
inc
mov
mov
fsubrs
mov
sub
fisubl
js
stos
adc
xchg
cli
dec
jecxz
jb
inc
jbe
pop
jge
lahf
cmp
push
mov
out
and
jge
sub
cli
inc
or
sub
jbe
and
mov
sub
shlb
sbb
or
clc
fdivp
movnti
pusha
test
sub
aaa
fldcw
jg
dec
jle
mov
dec
xlat
xchg
jl
mov
aas
sub
popa
test
mov
pop
mov
dec
out
pop
pop
and
fcoms
adc
sbb
in
fst
or
inc
std
jge
loopne
enter
mov
mov
inc
dec
xchg
hlt
adc
enter
xchg
fisubl
and
cs
rolb
in
jb
aas
pop
add
mov
push
pop
jns
fs
add
xchg
cwtl
adc
jbe
ljmp
sbb
js
inc
inc
lock
xchg
out
sbb
test
jb,pt
imul
iret
mov
hlt
fwait
push
jne
push
repz
inc
dec
jne
aaa
out
in
gs
inc
cmpsl
xor
and
idivb
inc
mov
outsl
nop
cmp
pop
add
adc
clc
xchg
stc
or
push
sub
pushf
xor
cwtl
lock
mov
dec
adc
add
out
sti
test
or
push
add
dec
cli
fistpll
pop
sub
xchg
add
pushf
add
or
adc
or
push
xor
push
cmp
cmp
push
dec
out
inc
std
mov
fmuls
mov
mov
jnp
dec
fwait
fs
pop
jle
inc
icebp
or
pop
mov
sub
insb
xchg
mov
adc
cmp
xchg
push
hlt
fdivr
leave
scas
xchg
cs
loope
mov
ficomps
leave
mov
insl
and
sbb
imul
lret
sbb
mov
sbb
fisubl
xor
out
pop
add
xor
xor
lret
mov
clc
dec
inc
fldt
inc
or
aad
adc
xchg
inc
jp
gs
aas
pop
fmuls
scas
ja
pop
in
inc
dec
in
adc
cmp
xchg
pop
dec
mov
out
inc
insl
ucomiss
ds
xchg
mov
inc
inc
out
bound
in
xchg
cmpsb
sbb
lods
scas
cmp
pop
mov
lods
sub
int3
imul
std
xor
jns
push
mov
push
dec
push
xchg
push
and
ds
xor
mov
jmp
pop
jle
dec
mov
mov
xchg
repnz
sub
sbb
push
mov
dec
add
and
insb
pop
push
push
repnz
lock
popf
sub
imul
and
adc
mov
clc
push
sbb
dec
pop
leave
cmpsb
out
cmp
push
test
xchg
push
pop
xchg
sti
mov
fwait
mov
sbb
mov
mov
sub
cwtl
push
stos
mov
xor
adc
inc
js
inc
lods
xor
stos
ljmp
ss
subl
aas
roll
js
dec
dec
cld
jle
pop
xlat
push
int3
hlt
popf
sahf
jmp
rep
fwait
mov
fdiv
test
xor
inc
insl
mov
cmp
sahf
roll
mov
in
fisubs
stos
dec
ljmp
push
mov
dec
mov
xor
hlt
notb
addr16
sub
mov
pop
lahf
xorl
inc
sbb
test
rorb
fstps
add
fildll
sbb
cmpl
jge
jge
lods
ret
mov
jl
into
jecxz
jns
ljmp
pop
sbbb
inc
and
adc
into
dec
add
jmp
push
mov
adc
pop
shll
mov
sub
flds
ret
cwtl
das
adc
iret
lods
mov
xchg
cwtl
sbb
sbb
mov
pop
mov
faddl
mov
cld
cltd
in
ficompl
pop
pop
cmp
add
in
lret
mov
or
addb
inc
mov
xchg
sub
loopne
push
decl
xchg
adc
lahf
inc
inc
fstp
add
sbb
push
insb
mov
cmp
cld
clc
xor
jns
mov
add
mov
cli
xchg
mov
inc
mov
mov
or
push
shrb
pop
stos
and
dec
cmp
push
xchg
mov
push
push
fwait
dec
nop
scas
cmp
push
adc
ds
out
mov
mov
adcl
xchg
mov
movsb
lock
pusha
iret
stos
nop
sbb
pop
jge
cmp
in
clc
fcoms
add
movsl
insb
insl
loope
add
stos
jno
into
dec
in
xchg
xchg
imul
xchg
mov
add
add
add
les
fsts
pop
cmp
and
mov
xchg
and
outsl
mov
repz
call
enter
loope
insl
inc
arpl
xchg
pop
imul
and
and
fchs
dec
mov
xor
mov
push
xchg
loope
inc
push
mov
test
mov
and
rclb
popf
xchg
outsl
push
jno
or
jo
nop
call
sbb
inc
js
scas
xor
imul
mov
push
sub
add
mulb
test
xchg
mov
pushaw
popa
mov
das
inc
call
inc
xor
sbb
jl
out
push
pop
icebp
add
jmp
sti
and
mov
loop
insb
dec
sbb
cltd
cmp
mov
xor
cmp
xchg
sub
jecxz
aas
jp
popa
and
sub
aam
sub
daa
movsl
sbb
daa
pop
out
add
mov
jnp
push
mov
sbb
or
inc
or
jecxz
sbb
mov
fmull
gs
movsb
outsl
sub
or
mov
xorl
push
cmp
mov
out
sbb
cwtl
test
cmp
and
fucomi
adc
jno
faddl
push
cmp
pop
imul
sbb
sahf
mov
xchg
xlat
stos
and
sbb
inc
xchg
mov
imul
test
in
and
leave
dec
pusha
roll
test
dec
push
sbb
and
je
sbb
out
xor
ss
rol
bound
mov
pop
inc
mov
fnsave
movsl
jge
sahf
jp
sub
fwait
sub
add
imul
pop
xlat
or
rcl
sbb
lea
pop
cmp
sbb
jnp
sbb
loopne
scas
jle
or
roll
lock
xlat
outsb
mov
mov
loope
ret
nop
je
in
jmp
pop
xor
gs
sub
cmp
xchg
pusha
add
jno
dec
sbb
sbb
aad
stc
dec
pop
nop
fisubs
or
test
or
ret
sbb
and
scas
out
xorb
les
xchg
ja
xor
popa
ror
mov
lods
xor
aaa
inc
je
sbb
icebp
sbbb
xchg
jl
les
int
push
jmp
popl
xlat
imul
jmp
lahf
sbb
pusha
ret
faddl
out
lds
int3
push
mov
mov
push
or
push
std
xor
fistps
dec
pmaxsw
push
jmp
lea
add
sub
lods
cmp
addr16
nop
shll
jge
pop
mov
push
roll
leave
jmp
jns
mov
sub
cltd
and
arpl
mov
mov
loop
sub
adc
mov
outsb
out
cmp
or
cmpsl
jmp
popf
push
int
jo
adc
xor
adc
xor
lcall
jb
lds
nop
movsl
xchg
sub
xor
pop
je
cmp
xlat
or
mov
xor
xor
test
push
insb
cli
hlt
mov
mov
and
push
test
mov
inc
fldt
dec
or
mov
and
inc
dec
addr16
dec
out
es
call
flds
cli
xor
js
sub
addl
xor
mov
push
test
inc
cmp
push
scas
mov
inc
cmpsl
shll
les
jns
push
jp
dec
dec
mov
outsb
fsubl
in
push
test
dec
loop
inc
lcall
out
inc
jmp
inc
fs
xchg
je
int
or
sbb
loop
sub
pop
push
lret
dec
dec
mov
lcall
push
mov
movsl
loope
adc
cli
aas
nop
sbb
jle
in
xchg
jle
dec
in
imulb
mov
or
fs
int
mov
inc
xor
leave
push
leave
mov
inc
mov
pop
dec
ljmp
arpl
pusha
lock
mov
jmp
insb
sbb
jecxz
fs
pop
outsb
clc
jno
lods
ret
xchg
movsb
xchg
mov
ss
mov
mov
push
dec
pop
adcb
pusha
or
test
lret
cmpsb
fwait
xor
daa
clc
xor
call
inc
and
imul
call
fimull
xchg
xor
sti
addl
xchg
mov
inc
test
pop
pop
inc
xchg
movsb
and
shlb
mov
adc
ret
mov
mov
xchg
decb
data16
mov
mov
jmp
sbb
push
int
mov
or
pop
js
mov
push
std
in
xchg
xchg
jnp
or
mov
xchg
push
push
xchg
inc
mov
scas
xchg
fisubl
cmp
xorb
fdiv
mov
mov
negb
mov
add
les
outsl
add
mov
movsl
xchg
mov
mov
cld
stc
aam
cmp
xchg
fsubs
xchg
mov
inc
aad
adc
or
or
jns
jecxz
sbb
ret
push
adc
and
mov
mov
and
test
shrl
pop
es
in
inc
lss
test
ret
or
mov
iret
jo
or
or
lods
sbb
cmp
mov
jne
jne
push
add
xor
cmpsl
pop
aad
mov
cltd
push
test
or
lcall
fmulp
pop
dec
push
push
sbb
iret
cmc
enter
mov
cmc
ret
mov
mov
xor
fstpt
rcrl
fisubrl
stc
shlb
fyl2xp1
dec
rol
jl
loopne
xor
std
loop
lret
inc
jmp
mov
adc
mov
xchg
jmp
bnd
int3
aad
arpl
mov
dec
jnp
mov
insl
mov
jg
or
sahf
jnp
sub
jnp
stos
outsb
mov
roll
mov
loop
sbb
or
jecxz
mov
lods
and
insb
sub
pop
rcrl
bound
jl
mov
pop
jb
mov
mulb
sbb
lret
cltd
and
in
nop
sub
adc
sub
inc
sub
cmpsb
pop
push
mov
pop
cld
xor
fcomip
xlat
cld
mov
add
lods
sub
shr
movsb
xchg
ss
rcrb
dec
sub
je
pop
adc
call
fsub
push
mov
jbe
loopne
adc
je
cmp
jg
aad
ja
and
sbb
pop
push
dec
nop
int
lds
and
inc
fisubrl
mov
push
dec
and
imul
inc
or
xchg
shll
out
pop
in
aad
xor
mov
aad
sub
mov
jae
jl
sbb
adc
fcoms
cwtl
adc
dec
inc
push
sbb
cmc
les
jnp
loope
into
rolb
adc
sbb
jne
into
adc
das
inc
xchg
push
out
loopne
xchg
adc
arpl
xor
xor
in
pushf
and
jb
outsl
int
mov
ja
sbb
inc
adc
dec
dec
cmp
pop
or
lods
fs
std
pop
sub
push
sbb
push
cld
stc
fsubl
xchg
dec
and
ret
push
push
pushf
scas
mov
sub
out
fidivrl
sub
icebp
dec
idivl
mov
in
add
imul
sub
insb
xchg
inc
les
ljmp
mov
in
data16
adc
dec
xor
stos
xchg
pusha
outsl
pop
jg
lock
push
bound
in
stos
adc
push
loopne
testb
dec
enter
setns
test
lret
das
mov
movsb
fstl
cmp
pop
in
lock
mov
add
or
mov
jmp
leave
mov
repnz
ja
sub
mov
jnp
mov
xchg
mov
xor
xorl
test
pop
cmp
in
rorb
in
add
dec
jmp
data16
xor
xchg
cmp
and
push
cmp
dec
std
cmp
pop
daa
mov
fs
cmpsl
jae
xor
xorb
dec
inc
xchg
iret
xlat
mov
sbb
mov
rorb
add
inc
mov
in
push
ja
fistps
sub
mov
xchg
sahf
cmp
lret
daa
movsl
jmp
nop
loopne
es
fcomip
push
lahf
notb
mov
mov
add
xorb
xor
xlat
fcoml
test
mov
ss
xchg
xchg
les
lea
ret
out
push
rcl
stos
and
mov
insb
mov
cmp
inc
into
inc
xchg
cmp
lea
aas
mov
test
dec
xchg
sub
pop
mov
mov
cli
addr16
mulb
lea
notl
std
add
lds
sbb
sub
outsb
int
inc
lcall
cmc
jno
sbb
mov
pop
mov
test
testb
pop
mov
jnp
sbb
inc
fidivrs
movsb
insl
loope
mov
mov
inc
cmp
insb
out
dec
lret
shr
call
sbb
inc
cld
scas
xchg
test
int
das
cmc
lcall
xchg
movsl
inc
xchg
cmp
jns
mov
in
in
push
je
andb
xor
jl
adcl
sbb
and
rep
add
aaa
aad
add
adc
mov
or
arpl
dec
xor
je
imul
xchg
jp
iret
jns
or
pusha
inc
mov
mov
adc
fildll
adc
xor
jo
fs
cmp
das
sub
stos
subl
andl
cmp
cwtl
and
mov
test
pop
inc
inc
subl
sub
cmc
out
jge
dec
scas
fsubs
sbb
add
mov
mov
les
aam
dec
mov
shlb
repz
push
mov
stos
shrl
hlt
fs
jbe
mov
stos
or
scas
frstor
outsb
dec
pop
inc
sti
or
dec
test
sbb
sub
sbb
mov
mov
adc
out
mov
imul
mov
jnp
and
adc
call
fstps
pop
cmc
out
aaa
rcll
out
das
scas
xchg
mov
adc
jge
fwait
mov
inc
stos
xorb
js
imul
scas
adc
in
pop
xor
add
inc
jg
or
add
sti
push
pop
mov
push
scas
in
repz
mov
lret
jle
push
stos
lods
inc
out
xlat
and
leave
repz
mov
mov
and
cmpsb
pop
scas
insb
xor
loop
cld
lcall
aam
sahf
outsl
leave
imul
push
test
inc
es
fwait
pop
orl
jne
pop
add
xchg
push
loop
mov
bound
mov
dec
mov
subb
adc
rolb
jo
jmp
push
sbb
je
sbb
fidivs
lods
xchg
popa
out
imul
shrl
dec
inc
pop
sbb
neg
ret
jg
dec
lahf
ret
ljmp
outsl
jmp
mov
push
mov
iret
icebp
mov
cmpsl
je
add
sub
cmp
adc
dec
cmp
jl
in
xor
out
lret
xchg
add
cs
sub
pusha
sbb
mov
clc
add
inc
mov
repz
push
cld
or
or
loopne
xor
cwtl
sbb
incb
push
repnz
andl
jae
xchg
jnp
shl
inc
inc
adc
rorb
push
rclb
mov
xchg
push
pusha
sbb
pop
shl
dec
or
adc
cmpb
fpatan
movsl
fdivrs
bound
mov
or
mov
jl
into
sub
arpl
mov
ljmp
xchg
push
dec
movsb
xlat
test
outsb
ret
test
and
std
push
mov
sub
gs
pop
push
mov
jge
xchg
xor
lods
call
jae
jmp
repz
dec
and
cmp
sub
push
and
or
push
in
inc
xor
lahf
xchg
dec
rcl
cmpsl
jge
cltd
aas
rol
pop
inc
outsb
mov
jecxz
cmp
mov
into
mov
fneni(8087
lcall
adc
cmpsb
add
dec
push
pop
push
push
loopne
or
aad
popf
pop
call
stos
movsb
xchg
mov
lret
mov
mov
out
pop
pop
cmpsb
jno
cmp
gs
outsl
mov
scas
loop
mov
outsb
fadds
xchg
or
push
xlat
or
add
in
push
fldenv
cmp
lahf
roll
roll
mov
popf
jecxz
and
data16
adc
lahf
out
cmc
xor
rcll
flds
pop
repz
imul
mov
int3
inc
xor
push
mov
xor
jne
xor
xchg
cmp
out
sbb
push
ss
rcr
xchg
aaa
jbe
pushf
out
cmpsl
xlat
and
fisubrs
stos
les
test
dec
movsl
xor
push
lcall
cmp
mov
push
ds
clc
cmp
jle
adc
mov
leave
xchg
aam
ret
sbb
rcr
and
xor
or
or
mov
ds
cmpb
pop
scas
js
aas
push
pop
les
aad
aaa
mov
fs
or
inc
mov
in
loop
ds
outsl
cmc
je
xor
in
divb
insl
push
fldt
ja
mov
andl
lds
or
sub
dec
adc
outsb
lea
test
in
sbb
mov
int
insl
insb
int3
es
jo
sbb
mov
cmpsb
mov
push
and
arpl
dec
test
mov
sbb
add
cmp
push
outsl
bnd
xchg
loop
imul
test
cwtl
iret
test
test
aas
or
jb
and
adc
test
lds
pop
stc
movsl
push
xchg
fadd
dec
cwtl
ljmp
inc
mov
dec
mov
gs
sub
xor
int3
cltd
lcall
jl
mov
xchg
js
pop
jecxz
pop
adcl
inc
jns
sbb
mov
filds
jo
mov
loope
inc
insl
and
stos
push
xchg
add
ja
lock
dec
pushf
cli
shr
leave
scas
pop
add
jecxz
cmp
ror
or
int3
dec
sub
lods
nop
int3
sbb
adc
insb
push
and
clc
jecxz
jnp
push
test
and
out
ror
cld
jbe
jg
pop
cmc
into
loopne
or
jno
inc
xor
push
lret
insl
mov
pop
cli
cwtl
inc
in
sbb
movsb
sbb
jns
mov
insl
sub
mov
pop
jo
xchg
subb
sbb
jmp
add
push
mov
stos
xor
adc
dec
jne
pop
mov
ret
push
ljmp
fwait
inc
aad
add
repnz
mov
xor
adc
out
sarb
xor
fnstsw
cli
xor
pop
push
filds
pop
lds
les
bound
push
lret
dec
mov
pop
xor
cwtl
scas
mov
test
mov
mov
and
xchg
xchg
push
and
lods
sub
faddl
gs
jb
adc
mov
call
inc
addr16
pop
sbb
inc
cmpsb
dec
xchg
xchg
push
outsb
xor
icebp
jb
clc
xor
push
xchg
bound
in
add
popf
lret
dec
lods
jmp
mov
lods
insb
sub
push
inc
mov
fsubp
fstl
and
scas
xor
mov
sbb
aas
sub
and
movb
sbb
je
mov
xchg
sbb
inc
cmc
iret
cmp
aas
pop
jl
inc
frstor
xor
xchg
mov
xor
mov
push
cmp
xchg
repz
fcompl
rorl
mov
sbb
addr16
and
inc
adc
insb
lds
fcoms
cmp
jecxz
popl
fwait
ja
aad
nop
dec
sub
addr16
push
movsb
push
sbb
lea
incl
add
clc
xor
adc
pop
lock
fists
daa
fsubrl
sbbb
adc
cmp
inc
mov
or
and
rol
aad
loope
jg
rorb
imul
idivb
sub
xor
cwtl
mov
cmp
jge
push
push
shlb
pop
popf
sti
mov
mov
mov
in
pop
inc
xor
add
loop
adc
push
popa
out
or
stc
lcall
aas
push
nop
lcall
inc
bound
mov
mov
call
inc
xor
loopne
mov
or
dec
or
loope
rcll
xlat
adc
mov
movsb
fdiv
and
leave
cli
shlb
ficompl
push
inc
out
add
jmp
jne
xor
xor
xor
orb
push
lods
wrmsr
push
cmp
ja
sarb
out
mov
clc
mov
pop
clc
mov
leave
iret
dec
fcompl
dec
mov
pop
xor
pop
sbb
fisubrl
jg
std
shlb
fisubs
repz
adc
push
push
cmp
dec
test
lock
enter
lods
and
pop
das
icebp
sub
scas
or
in
pop
lods
inc
dec
and
cmp
and
dec
and
cld
push
repz
mov
es
dec
dec
pop
rclb
mov
pop
in
mov
pop
pop
and
pop
jle
pushf
test
cmp
lahf
cmpsb
xor
xor
sbb
outsb
mov
inc
dec
jne
dec
lea
in
dec
xlat
scas
loope
jmp
push
inc
mov
mov
jnp
orl
popa
orl
js
lea
adc
divb
in
int3
out
lods
in
and
ffree
mov
inc
add
movsb
sub
and
push
mov
dec
mov
mov
mov
lods
sbb
fldt
push
add
scas
outsl
enter
cmp
aam
inc
sub
cltd
xor
decb
or
cmp
or
imul
shlb
cs
xchg
jne
xchg
sbb
idivl
mov
xchg
cmp
stos
mov
je
fs
orl
xlat
mov
pop
in
popf
or
inc
xor
xchg
cmc
rclb
outsb
popa
outsb
pop
cmp
fsubr
and
cli
popa
std
out
cmp
les
cltd
in
decl
outsb
sbb
inc
mov
mov
mov
push
mov
cmp
sub
jne
repnz
inc
vfmsub132ps
push
adc
mov
out
mov
pop
add
scas
scas
jge
bound
shr
jp
js
sbb
jmp
lret
inc
call
inc
lock
cmc
pop
shlb
push
jge
and
int3
aas
inc
xchg
test
loopne
add
or
dec
cmc
loope
mov
adc
sub
jbe
insb
jle
inc
inc
in
repnz
jle
data16
sub
stos
inc
mov
outsb
sub
das
jmp
pop
ret
sub
in
add
mov
mov
push
gs
xchg
and
mov
dec
je
and
subb
in
mov
cmc
mov
f2xm1
shlb
jp
das
push
mov
dec
jp
shrl
test
call
nop
pusha
mov
pop
mov
adc
mov
add
add
mov
ret
mov
rclb
add
mov
adc
mov
adc
in
and
fucomip
sub
test
sbb
repnz
pop
pop
nop
cmp
push
jl
out
hlt
inc
inc
mov
push
pop
test
ljmp
lock
fidivrl
cld
dec
lea
cli
cltd
mov
xcrypt-ctr
cmpsl
fsubr
jl
in
push
or
or
pusha
jl
fcoms
xchg
mov
les
cmp
jl
cmc
shrl
push
pop
sbb
loope
std
in
cmpsb
mov
mov
aad
shlb
leave
nop
xlat
rorb
inc
scas
nop
popf
testb
mov
inc
add
mov
mov
push
icebp
fstps
scas
iret
lea
lds
adc
dec
dec
and
rorb
mov
mov
clc
pop
push
xchg
add
call
in
js
addr16
jle
ficompl
gs
cmp
sub
inc
nop
xor
jbe
or
add
jnp
inc
andb
jne
dec
test
aas
mov
mov
jle
push
dec
xor
sub
inc
in
lahf
adc
roll
addr16
cmp
les
aam
data16
test
mov
or
rcll
pop
xchg
mov
cld
dec
inc
mov
mov
mov
aad
mov
pushf
sbb
sub
insl
test
clc
add
je
pop
mov
mov
cmp
ss
repnz
mov
pop
jne
scas
cmp
aaa
insl
push
xchg
push
mov
imul
cltd
mov
and
xor
xor
ljmp
sbbl
and
mov
mov
push
sub
or
sbb
xor
inc
mov
cmpsl
lods
mov
out
fs
hlt
mov
dec
xchg
sub
xchg
out
push
scas
push
inc
cmpsl
and
mov
xchg
out
mov
dec
sub
and
and
rorb
push
aad
and
xor
xor
add
cld
fsubs
xor
leave
mov
enter
into
jge
rcl
leave
add
jno
push
mov
stos
inc
fimull
popf
pushf
add
push
repz
aas
imul
fdivl
fwait
into
inc
gs
lds
popa
xor
je
repz
cmpl
xchg
insl
pop
adc
test
pop
pop
or
adc
je
pop
sbb
nop
aad
pop
fisttpl
inc
xlat
or
sbb
lods
or
jmp
mov
int
out
jbe
data16
addr16
cltd
ret
or
repnz
insb
push
and
in
mov
stos
inc
mov
negb
pop
cmp
push
sub
sub
push
or
xorb
xor
sbb
push
cltd
addl
int3
adc
mov
add
cmpsl
lea
dec
push
mov
xor
add
ja
leave
sub
clc
es
sbb
shlb
mov
sub
add
xchg
add
repz
js
loop
push
stos
dec
stos
pop
in
jae
cmp
ds
xor
xor
jp
shlb
scas
int3
mov
enter
int
push
ss
ds
daa
gs
mov
in
sbb
cli
jl
nop
out
inc
push
shrb
int
test
jmp
and
push
ja
jmp
mov
das
mov
mov
daa
pop
pop
insl
and
movsb
sub
jmp
pushf
jecxz
or
les
push
fstl
jo
fimuls
or
leave
ja
call
mov
addr16
or
sbb
ja
sti
adc
loope
or
inc
sahf
daa
js
or
dec
push
mov
scas
xor
mov
adc
add
and
outsb
out
or
dec
in
filds
pop
aaa
cmpsb
fwait
push
lock
mov
rsm
and
imul
fcoml
mov
sub
pop
out
movsl
cs
subb
lcall
add
hlt
lahf
jbe
or
add
movsb
and
mov
add
xchg
jmp
mov
loop
push
ss
mov
mov
cltd
or
das
xchg
and
xchg
ss
lret
out
out
mov
lds
push
add
lods
jle
ja
mov
aam
repnz
sbbl
bound
pop
int3
mov
xchg
jecxz
rclb
cli
xchg
mov
mov
les
in
repnz
sbb
data16
js
in
sahf
xchg
dec
mov
in
inc
fimuls
mov
mov
stos
and
sbb
and
adc
pop
stos
rcrl
ss
andb
adc
or
xchg
mov
scas
gs
out
int
lods
pusha
sbb
xor
dec
sub
and
sub
fcmovnb
dec
hlt
mov
or
push
out
xor
mov
int
mov
aas
dec
sbbb
push
aaa
dec
int3
dec
adcl
stos
mov
in
pushf
adc
jmp
out
ss
push
ret
fstl
sub
or
sbb
or
out
xchg
adc
data16
cs
push
inc
sbb
pop
out
in
mov
add
cmp
cmpsb
cs
mov
mov
xor
out
add
jae
testl
inc
dec
xor
push
mov
lcall
into
in
mov
pop
jle
jo
jnp
sbb
and
in
add
mov
sub
stos
mov
leave
cmp
packuswb
test
sbb
fwait
dec
jbe
push
js
dec
test
jge
imul
mov
mov
push
pop
xchg
jge
sbb
jo
push
aad
pop
lods
movsl
jp
fists
push
iret
cwtl
cmp
lcall
and
das
fstps
arpl
push
js
sahf
add
dec
pop
mov
fcmovne
out
filds
rcll
movsb
cld
cmp
inc
clc
in
push
ja
shrl
lds
fwait
imul
jmp
daa
adc
mov
in
inc
jmp
aaa
scas
jmp
dec
sub
inc
jbe
dec
addl
add
and
push
inc
in
aas
pop
mov
mov
adcb
rclb
xchg
psrlw
sub
pop
push
pop
dec
mov
mov
int
ja
inc
push
xor
inc
outsb
push
sub
xchg
shlb
ds
push
jle
movsl
mov
jecxz
ret
ss
xor
xchg
mov
pop
adc
and
adc
fwait
arpl
sub
rolb
inc
shll
inc
jmp
or
and
aas
push
shll
sub
ret
insl
scas
js
cmc
cmc
jg
into
push
test
lret
aaa
dec
movsb
jns
xor
sbb
mov
xor
je
stos
std
xlat
pop
out
or
arpl
push
rcl
sub
cli
arpl
loopne
into
and
imul
xchg
std
lds
test
push
rcl
pop
fnstcw
arpl
sbb
or
insl
cmpl
push
iret
lds
sar
subb
inc
sub
stos
test
jp
je
bound
clc
xor
insl
xchg
dec
mov
inc
sub
mov
pop
jno
mov
pusha
xchg
lock
xchg
push
incb
sub
popa
or
jae
fmul
jno
stos
in
insb
movsb
daa
or
or
inc
mov
xor
cltd
cmp
stos
fcompl
lock
daa
add
faddl
loopne
fisubl
fisubl
mov
scas
inc
dec
fcoms
mov
mov
data16
cli
pop
incl
inc
and
adc
cmpsl
xchg
cli
push
push
adc
and
pop
outsl
aaa
push
inc
mov
ffree
test
fiaddl
mul
jae
xchg
xor
icebp
or
out
stc
xor
rcl
mov
jecxz
nop
inc
xchg
in
dec
sahf
shr
arpl
xchg
daa
jecxz
ret
cmpsb
out
adc
or
sub
push
xchg
int3
in
int
sbb
out
daa
sarl
shlb
bound
add
test
nop
sub
xorb
cltd
pop
pop
aas
dec
in
xor
gs
fisttpll
mov
aaa
mov
mov
and
jecxz
fstps
lds
fs
or
adc
pop
push
xor
mov
cs
rsqrtps
lret
sub
or
mov
mov
xor
jne
in
cmp
divb
fdivr
das
sbb
imulb
adc
inc
sbb
inc
pushf
rcll
out
push
cmpsl
or
jo
cmp
or
popa
dec
inc
dec
insb
xlat
pop
push
into
stc
mov
fs
cmc
jbe
jmp
shr
ss
xchg
rorb
fisttps
imul
dec
pop
xor
mov
icebp
in
push
xor
mov
imul
loopne
rcr
shlb
pop
daa
repnz
outsb
push
lahf
movsb
rcr
test
and
and
call
sub
jge
lods
lret
pushf
out
ja
test
fsubp
xchg
sub
mov
fnstsw
loope
mov
minps
std
cmp
int
pop
xor
mov
mov
cwtl
and
jns
dec
jnp
jbe
cmp
cmp
cmc
push
gs
jae
cli
loope
jae
mov
out
and
xorl
pop
data16
push
or
lea
repnz
push
and
stos
cmp
aas
fisubl
mov
std
adc
push
mov
sbb
xchg
idivb
sub
push
shrb
xor
xchg
xor
andl
aad
inc
xlat
xor
shrl
loop
push
inc
sbb
and
pop
adc
pusha
jp
cli
sub
dec
mov
push
scas
jecxz
sub
jb
pop
js
jge
and
push
popa
jnp
pop
les
mov
jle
aad
test
xchg
out
cmp
xchg
sub
or
sub
mov
jne
inc
js
mov
mov
dec
js
inc
sbb
xor
pop
call
mov
mov
or
ds
inc
imul
xchg
xchg
cmp
push
rcll
push
icebp
xlat
inc
sbb
and
sbb
xchg
cmpsb
insl
cli
inc
jge
lods
jno
inc
or
mov
push
dec
pop
push
shll
xor
fldenv
jp
mov
mov
dec
mov
sbb
mov
scas
insl
push
dec
mov
xchg
into
sahf
daa
popa
loope
jns
in
rcr
in
push
insb
add
add
test
lea
mov
xor
jo
out
push
dec
lock
pop
mov
mov
add
add
in
and
psubsb
inc
mov
inc
dec
test
lcall
inc
imul
push
in
inc
je
add
push
adc
out
xchg
mov
xchg
pop
dec
enter
shrl
icebp
push
dec
cmp
sbb
cwtl
cmp
ret
in
icebp
inc
loope
popf
mov
pop
pop
inc
sub
aam
popa
or
push
out
adc
xchg
sub
jns
aaa
pop
add
lret
sub
cli
or
test
xor
sub
scas
pop
dec
ss
and
call
daa
ret
mov
insl
push
daa
sbb
jbe
mov
xor
mov
add
cmpsl
and
add
and
add
cld
rorl
xor
mov
fcomps
xchg
xlat
pop
mov
and
stos
aad
jae
sub
dec
pop
int3
fcoms
xor
movsb
cmp
incl
adc
dec
or
sbb
lods
xchg
push
xchg
mov
adc
sbb
mov
fstpt
mov
mov
or
xchg
jge
mov
adc
and
xchg
call
xor
in
prefetch
or
pushf
cmpsb
out
push
cmp
hlt
sti
adc
xor
subl
inc
int3
out
sbb
inc
nop
bnd
mov
inc
aas
sti
and
xor
sahf
scas
add
roll
mov
pop
mov
into
jns
test
inc
pop
aas
adc
test
lods
les
lret
dec
sbb
mov
xchg
push
push
rcrb
test
in
lea
fstpl
xchg
dec
pop
dec
cli
out
into
lods
mov
or
inc
xor
divb
clc
pop
mov
imul
scas
jge
insl
out
cmp
add
bound
fwait
add
jmp
scas
mov
xchg
dec
je
xor
or
sub
in
lahf
leave
mov
push
dec
mov
std
mov
add
jne
jne
insl
and
push
inc
pop
sub
pushf
jle
pop
and
aad
push
cmp
jecxz
jae
dec
mov
aas
dec
ja
or
pop
cmp
test
out
push
rcrl
ret
aam
dec
lods
mov
imul
jle
mov
add
andl
jo
jmp
inc
pop
insl
mov
movsb
in
xor
jo
cmp
mov
jecxz
repz
fs
xchg
mov
mov
popa
pop
lods
fcmovne
test
add
arpl
pusha
jge
pop
mov
pop
mov
push
gs
or
es
add
adc
fsubrs
sbb
cmp
push
add
ljmp
xchg
xlat
sbb
outsl
loop
aad
mov
and
in
pop
push
pop
and
jbe
jl
xor
dec
stc
mov
imul
out
or
test
push
aad
fbstp
jae
mov
leave
jmp
sbb
pop
fwait
aam
sbb
in
mov
movsb
int
jmp
jno
jno
shlb
in
jnp
mov
xor
jle
push
pushf
movsl
xchg
xchg
dec
push
std
mov
pop
imul
jns
fists
jne
jg
popa
cs
push
stc
scas
adc
push
das
jle
je
pop
das
adcl
xchg
lahf
sub
ret
daa
in
jns
adc
add
xchg
cmc
push
or
shrl
pop
push
sub
cli
sub
ret
inc
ret
and
loop
inc
cmpsl
sbb
loop
cmc
sbb
repnz
int
mov
jbe
les
push
add
fmuls
fldenv
and
push
cmc
pop
inc
mov
push
push
jmp
iret
lock
mov
push
cwtl
sbb
les
pop
scas
xor
xchg
cld
jge
jnp
int
scas
aam
aas
mov
adc
adc
inc
inc
add
movsb
cmpsb
inc
scas
adcl
add
arpl
push
sti
or
pop
addr16
aas
hlt
sbb
adc
bound
xor
leave
xor
scas
dec
add
ret
adc
data16
call
dec
frstor
sbb
fs
in
xchg
pop
jne
and
pusha
xchg
data16
jl
out
int3
out
mov
mov
pop
in
inc
sub
in
fnstsw
cmpl
lds
pushl
sarb
test
or
cmp
mov
scas
das
xchg
push
into
in
lods
mov
xchg
mov
sub
insl
nop
sbb
jno
mov
call
jg
cmpsb
push
mov
pop
jecxz
add
jmp
sub
push
xchg
mov
call
cs
mov
cmc
gs
cmp
push
dec
mov
sbb
mov
popa
test
cltd
scas
push
jno
movsb
mov
jo
cmp
pop
mov
ret
int
je
clc
lcall
enter
in
adc
loope
bound
scas
int
jg
andl
scas
hlt
lds
push
push
xchg
or
jo
mov
imul
movsl
cmp
xchg
aam
xchg
imul
push
iret
jg
ss
mov
mov
outsb
mov
std
imul
fsubs
out
push
fnsave
lock
xorb
xchg
mov
push
jbe
inc
adc
icebp
das
push
inc
xchg
loop
loop
mov
mov
mulb
adc
cmp
cmpsb
mov
cli
jbe
out
leave
inc
inc
ret
dec
roll
aam
fs
mov
mov
std
stos
out
rcll
pop
orl
mov
jno
cmp
repnz
clc
pushf
cld
outsl
out
jmp
lcall
les
das
fldenv
fnsave
ja
out
add
mov
shrl
push
jbe
cmpsb
adc
imul
leave
fadds
or
fisttpl
cmp
addb
xor
fnstcw
scas
hlt
in
fwait
pop
les
rcl
popa
jnp
test
scas
mov
int
movsl
fxch
mov
insb
test
inc
and
fsubl
insl
cmp
lret
das
subl
push
jnp
xor
jne
or
push
icebp
push
mov
or
shll
cwtl
test
ja
test
xor
jns
dec
inc
push
rorl
shll
ret
or
adc
test
cld
inc
ss
out
aam
fwait
or
pop
ret
sti
mov
das
add
push
xor
and
out
push
adc
jo
add
cmp
xchg
push
push
mov
jbe
scas
jl
inc
in
push
sahf
jae
sbb
lss
loopne
push
sahf
adc
dec
jae
mov
icebp
fs
inc
xchg
and
imul
cmp
dec
test
mov
push
ss
xor
in
push
std
rcll
rclb
dec
or
lds
int3
inc
push
add
in
ss
loope
mov
inc
gs
xor
or
mov
mov
pusha
shlb
add
js
outsb
loop
cld
pop
filds
jae
inc
test
enter
xchg
outsl
fwait
xor
cmpb
mov
fucom
mov
jb
mov
mov
mov
in
adc
outsb
inc
mov
add
aaa
lods
movsl
fstpt
rcrb
mov
adc
loop
mov
inc
je
pop
sub
mov
push
mov
or
xchg
in
adc
jg
fisubs
push
pop
or
or
fisttpll
repnz
mov
stos
push
ret
xchg
sub
lcall
lock
ss
add
xlat
xchg
or
dec
and
cwtl
cmp
push
mov
lret
xor
mov
fstpl
pusha
and
cltd
add
notl
pop
lcall
fdivr
scas
xor
pop
movsb
mov
iret
in
xchg
test
cwtl
sbb
clc
cmp
lea
and
inc
jg
test
sub
xor
cmpsl
dec
bound
inc
xor
fldcw
repnz
push
adc
dec
lret
scas
dec
arpl
lods
mov
dec
dec
mov
mov
adc
lods
inc
into
cmpsb
push
icebp
je
arpl
cmp
adc
xor
cwtl
std
sahf
aas
mov
xchg
mov
rorl
insb
jecxz
push
enter
stos
mov
pop
mov
outsb
sbb
aad
adc
in
pop
clc
adc
cmp
mov
mov
push
cltd
aaa
push
cwtl
jge
sub
ds
call
mov
add
and
hlt
jecxz
mov
es
pop
in
dec
out
xor
jbe
imul
or
fcmovnbe
jmp
cs
fwait
enter
cmc
test
int3
inc
xchg
push
loope
lret
popf
outsl
int3
pop
dec
mov
xor
jns
push
jmp
ds
lret
add
mov
xor
push
sub
mov
lahf
sub
ret
mov
xlat
scas
fcomip
ret
shlb
scas
mov
sub
addps
inc
sbb
inc
loopne
pop
lds
aam
leave
ljmp
inc
jle
jl
fs
mov
iret
xchg
jbe
out
and
fstpl
sub
jae
cli
mov
in
add
ss
repz
das
pop
shlb
adc
and
lods
or
push
adc
leave
inc
xorl
movsl
mov
ljmp
add
cmp
aaa
in
ja
mov
jno
sub
pop
ds
mov
push
pop
insl
cmpb
fisubrl
hlt
gs
decl
jb
mov
and
xor
cmp
sub
xlat
aas
mov
add
push
aam
pop
dec
pop
loope
adc
mov
cmp
mov
orb
mov
test
mov
cmp
inc
or
imul
mov
testb
jbe
loop
out
fistpll
into
push
cmp
sahf
scas
jne
dec
gs
jg
sbb
mov
loope
out
outsl
mov
mov
mov
dec
dec
jns
repnz
push
jmp
imul
add
movsb
stos
adc
xor
inc
mov
mov
mov
xchg
sbb
jg
mov
mov
clc
push
jmp
adc
ds
ja
hlt
mov
lcall
scas
es
dec
out
sbb
orl
adc
movsb
and
imull
movb
mov
in
mov
in
jnp
xchg
fcoms
lods
sbb
dec
pusha
mov
cli
sub
add
notl
shl
or
nop
push
sub
loop
jmp
pop
and
adc
xor
or
jns
loope
pop
mov
loope
xor
pop
xchg
cmp
add
dec
sti
adc
cmp
cmp
clc
add
aaa
and
jecxz
stos
add
or
mov
mov
push
daa
clc
je
pop
mov
push
mov
pop
xchg
lcall
jb
push
dec
lahf
jmp
sti
xchg
adc
aaa
or
or
fistl
scas
and
mov
enter
les
push
xchg
mov
lcall
sub
les
push
and
popa
sti
mov
in
stos
push
in
cmp
call
dec
xchg
and
xor
push
xchg
js
ss
mov
in
bound
sub
out
pop
clc
inc
into
mov
xor
jle
mov
out
std
add
xchg
aad
stos
fwait
pop
test
xor
out
in
daa
push
add
ret
push
push
push
jle
pop
mov
les
adc
popf
jnp
sahf
scas
push
cmpsl
mull
pop
test
fldl
mov
in
arpl
jns
sar
into
pop
fldcw
cmpsl
mov
jge
or
dec
in
stos
and
mov
and
test
movsb
sahf
sub
mov
cltd
popf
inc
fldenv
push
xchg
loopne
out
add
mov
jge
testl
bsr
xlat
add
push
mov
sub
add
scas
out
hlt
lods
jns
jle
sbb
shlb
xlat
inc
sbb
vmread
cmc
mov
rol
call
ja
movsl
test
cmp
dec
mov
add
in
imul
in
jns
push
repnz
adc
adc
mov
pop
or
test
dec
and
dec
mov
aaa
jp
lea
je
jmp
mov
add
mov
pop
sub
or
sub
in
jb
aas
or
mov
fucomip
das
aaa
incb
sbb
push
test
and
loop
clc
das
jmp
lret
inc
in
pushf
sub
test
add
mov
arpl
adc
shrl
push
fnsave
xchg
test
cltd
push
ds
std
sbb
jo
xlat
lods
ficomps
jmp
sbb
and
jb
mov
mov
test
cmpsb
leave
push
mov
pop
lods
in
testb
cs
ja
xchg
icebp
inc
cmpsl
test
cli
or
mov
call
xchg
xchg
push
test
push
add
mov
xchg
cltd
lods
call
push
mov
sbb
mov
shlb
push
adc
mov
and
outsl
sbb
dec
sahf
mov
or
add
push
shlb
jbe
ja
push
aas
ficompl
jge
and
jmp
pop
js
dec
imul
jbe
mov
adc
enter
les
js
cwtl
adc
mov
std
mov
pop
adc
loope
pushf
loop
adcl
cs
xor
test
sbb
or
aaa
roll
lds
mov
cmp
dec
ljmp
das
mov
js
out
adc
adc
aad
or
test
sbb
fcmovb
or
push
dec
xor
inc
loop
fcom
sub
xor
mov
sbb
cmp
pop
rcrl
inc
add
test
leave
scas
sub
ds
nop
or
sbb
nop
mov
test
xchg
ret
ret
push
mov
pop
data16
sbb
pop
rolb
fcmovnbe
pop
push
lods
cmp
mov
pop
pop
add
mov
add
push
push
xor
outsb
dec
cwtl
or
push
out
fsubrs
loopne
into
mov
dec
lods
add
aad
rol
push
xchg
into
mov
push
jp
mov
ja
push
sbb
xchg
mov
pop
outsb
adc
int
cmc
xchg
movsl
es
xlat
xchg
push
jnp
mov
push
lea
imul
add
out
xchg
lret
out
push
mov
pop
ljmp
dec
fimull
jmp
test
stos
aad
jnp
lahf
dec
aaa
in
ret
jno
jo
add
xchg
adc
dec
je
sub
push
or
cmpsb
push
iret
aam
in
mov
call
pop
push
shll
test
pop
and
mov
sub
ljmp
cwtl
jl
xchg
pop
and
adc
mov
push
mov
cmp
mov
gs
xor
pop
push
into
loop
push
mov
and
in
mov
sub
xchg
and
test
loopne
adc
jae
xchg
xchg
or
sub
pop
mov
das
popl
sub
and
adc
pop
jp
xor
in
dec
sbb
das
xchg
loop
and
orl
push
repz
test
add
pshufw
pop
push
movsb
push
push
int
and
sbb
xchg
sub
and
mov
loop
repz
into
push
sub
test
pop
int3
push
ljmp
test
push
adc
aad
add
add
dec
add
dec
lds
xchg
pop
sbb
adc
data16
sbb
add
xor
cmp
add
aad
xor
mov
repnz
dec
ds
test
mov
stc
mov
loopne
fldt
sub
testl
cmpsb
scas
sbb
fdivs
mov
cwtl
jg
jb
outsb
mov
inc
fbstp
mov
xchg
sub
leave
pop
jae
jl
fnsave
stos
js
push
ja
mov
xor
andb
sbb
add
sbb
pop
xor
adc
dec
xchg
popa
dec
sahf
into
and
and
test
in
mov
or
xchg
dec
pop
dec
icebp
cmp
jns,pn
dec
sbb
push
pop
fidivrs
jle
aad
lret
fadds
push
xor
stos
inc
jmp
mov
fnstenv
mov
mov
push
xchg
rcl
mov
or
jecxz
test
mov
cltd
fisubl
and
scas
pop
mov
mov
mov
rorl
or
jb
mov
push
out
jl
iret
xchg
adc
push
shrb
dec
mov
xchg
and
cwtl
out
cmp
jo
push
cmp
rclb
call
daa
loopne
xor
repz
or
mov
repz
cmc
inc
jp
mov
mov
cmc
jg
out
sub
in
push
dec
das
in
xchg
call
in
xchg
pushf
cmp
test
xor
daa
ret
popa
mov
xor
xorb
lret
push
enter
jg
mov
pop
ja
push
xor
aad
jle
outsb
add
repz
sub
xchg
xchg
cltd
negl
mov
jns
xchg
dec
loopne
inc
and
cmp
popf
je
call
pushf
leave
movsl
xor
pop
lcall
es
ficoms
adc
add
lret
push
std
jecxz
je
gs
mov
les
mov
adc
adc
mov
pop
sbb
inc
outsl
pop
and
dec
sub
insb
jns
push
adcl
xchg
call
mov
mov
add
and
repz
cmp
sub
push
mov
push
sti
dec
jae
adc
scas
push
js
sub
shr
movsb
pop
jbe
dec
ds
leave
pop
loopne
ret
jnp
mov
lret
negl
and
jge
pop
nop
add
cmp
loope
movsb
arpl
sbb
mov
mov
mov
mov
xchg
dec
lods
cmp
xor
scas
jne
xor
pop
pop
cs
or
movsb
mov
test
iret
insb
cli
ficomps
mov
sahf
nop
mov
mov
cli
fistps
movsl
or
jle
dec
stos
add
lods
inc
xor
mov
mov
int3
loop
lock
jno
xor
stos
das
cwtl
push
inc
psadbw
pop
lret
jecxz
fwait
in
inc
push
fcomps
push
ds
dec
movsb
int3
sub
cltd
loope
into
int3
inc
push
cli
xor
push
inc
call
addr16
mov
pop
stc
xor
adc
rorb
shrb
cwtl
fsubr
imul
mov
outsl
out
jo
out
pop
push
xor
adc
aam
xchg
push
enter
imul
stos
fldl
lahf
ss
mov
cmp
mov
ret
in
mov
das
shlb
movsb
mov
inc
stos
test
cs
cmc
outsl
rcr
push
sub
mov
pop
in
outsl
mov
sub
lods
mov
dec
dec
je
pop
mov
xchg
adc
aam
adc
js
mov
mov
mov
add
xchg
aas
fs
sbbb
repz
arpl
testb
in
push
pop
cmp
add
add
clc
jne
rcrb
loopne
mov
int
loop
pop
sub
orb
stos
in
shl
in
dec
imul
js
dec
dec
pop
insb
sub
pop
subb
mov
pop
inc
lea
ljmp
dec
mov
loopne
pop
dec
sbb
push
dec
add
jbe
pop
daa
xor
inc
lcall
scas
add
mov
test
push
push
cmp
jmp
inc
ss
pop
jg
fnsave
shll
xchg
lea
shrl
jmp
mov
mov
mov
push
lods
push
rcrb
pushf
fildl
cmovp
xchg
subb
dec
mov
dec
inc
add
push
mov
add
insl
cmpsb
lock
pop
or
pop
in
push
xchg
cmp
xor
lahf
les
call
cmp
lcall
lcall
arpl
decb
out
shr
lret
cmp
aas
xor
push
add
jl
jno
push
mov
fidivrl
sbb
mov
jg
xor
jle
mov
push
mov
bound
fucomp
xor
push
mov
cmpb
pop
add
sbb
cwtl
fstps
mov
scas
jnp
ffreep
sub
daa
push
mov
pop
cmpsb
into
mov
inc
adc
mov
and
in
xchg
inc
dec
cwtl
mov
mov
sub
jg
xor
jl
frstor
sub
adc
xor
pushf
cli
cmc
xor
sbb
sbb
push
mov
les
lods
push
push
jbe
mov
jne
mov
arpl
out
dec
mov
push
sub
xchg
mov
xor
add
and
pop
fs
xchg
mov
in
js
loope
popa
mov
push
adc
mov
push
gs
insb
inc
push
loopne
mov
jnp
into
popa
jmp
xor
int3
pop
call
pop
or
jp
jae
sbb
or
movsb
sbb
adc
mov
outsl
jns
imul
bound
lahf
int
sbb
int
dec
mov
dec
fxch
mov
out
mov
jne
popf
sbb
lea
sub
xor
dec
test
and
xor
mov
scas
push
faddl
mov
cmc
pop
insl
add
shrb
dec
rcrb
loopne,pt
adc
lods
push
sbb
scas
notl
data16
aas
jle
and
inc
inc
mov
push
repnz
mov
out
pop
dec
cld
add
test
pop
push
mov
test
fcompl
idivl
pop
sub
mov
inc
add
or
xor
push
dec
fcmovu
outsl
inc
lret
inc
outsb
arpl
lods
lret
mov
adc
fs
addr16
adc
icebp
movsl
arpl
inc
popl
pop
jmp
test
and
cmpsl
sbb
or
sti
sbb
insl
int
adc
pop
add
inc
movsb
aas
fildl
pop
out
fdivl
mov
and
xor
sbb
mov
idivl
push
rcl
sti
leave
sbb
xchg
push
dec
out
cmp
xchg
sub
jne
pop
mov
lret
popa
subb
icebp
jp
mov
push
jne
cmp
add
idiv
cld
daa
clc
lret
jbe
repnz
aaa
mov
jmp
es
hlt
js
lret
sbb
sti
dec
cwtl
or
iret
mov
xchg
cmp
cwtl
xchg
cmc
dec
lea
xor
loope
mov
and
cmp
xor
push
cmc
shl
mov
jle
clc
in
xchg
outsl
int3
orl
xor
adc
ja
xor
push
lock
divb
xchg
and
mov
pusha
in
xor
mov
pop
mov
mov
and
aad
push
xor
cmp
loopne
mov
lods
dec
dec
orb
cmp
pop
fists
sub
fcmovnb
push
ret
aad
xor
pop
jmp
out
imul
popf
test
das
shrb
mov
cs
test
std
and
mov
adc
scas
xlat
or
push
out
inc
xchg
aam
pop
outsb
mov
test
jb
pusha
je
sbb
cmpb
mov
fmul
addr16
jnp
aad
lret
cmp
xchg
fildll
jl
push
popa
rep
stos
pop
adcb
cltd
das
push
xor
sbb
add
lock
dec
mov
cmc
aaa
xchg
sub
js
adc
dec
jo
cmp
out
cmp
fidivrl
jmp
push
int
jnp
jnp
adc
xchg
sbb
jp
stos
add
push
push
cmp
sub
or
pop
add
push
out
cmc
es
aas
mov
sar
and
repnz
in
and
jae
cs
aas
mov
xchg
pop
mov
stc
aad
sbb
jecxz
mov
aad
and
sahf
xchg
or
das
and
dec
es
or
pop
jo
inc
xchg
push
or
icebp
adcl
ljmp
clc
jmp
or
push
jge
daa
and
push
fstps
push
cwtl
cs
jmp
inc
jne
or
mov
xor
mov
sti
les
popf
fsubrl
into
inc
push
sarl
jnp
adc
cmp
movsb
arpl
cli
mov
rcr
pop
push
dec
aam
daa
push
mov
xchg
aas
into
mov
aad
xor
or
xchg
cmp
jmp
in
mov
cs
fdivl
and
mov
fwait
lcall
jne
mov
cs
test
push
pop
out
aas
mov
push
add
mov
jle
inc
mov
xchg
out
cmp
sub
pop
aas
pop
mull
push
add
xchg
push
pop
shrl
mov
push
mov
push
clc
jb
push
iret
xor
hlt
sbb
inc
mov
inc
fs
stos
cmp
stc
sub
push
enter
inc
inc
pop
sub
pop
repnz
pushw
je
loopne
xchg
and
push
ja
mov
bound
loop
push
arpl
sbb
sbb
push
cmp
in
mov
mov
and
adc
fwait
push
pop
ja
loop
and
inc
daa
inc
decb
jge
jb,pt
gs
push
xor
mov
or
add
and
xor
mov
mov
jae
cmp
aaa
cmpsl
mov
xor
cltd
inc
je
stc
mov
cmpsl
cmp
jb
scas
mov
xor
sbb
out
rcll
fwait
push
out
hlt
pop
sub
mov
sahf
test
fs
dec
mov
inc
cmpsb
inc
insb
call
jl
rcll
and
jp
sub
inc
and
mov
gs
xchg
push
scas
insl
sbb
or
sbb
mov
mov
mov
jmp
mov
aaa
popf
fmul
or
or
push
mov
popf
xor
inc
sar
sbb
insl
xor
inc
fwait
jb
adc
test
sub
xchg
push
cmp
test
ljmp
sub
repz
insl
inc
or
je
xor
movsb
mov
test
in
cmpsb
out
push
imull
or
jmp
push
cltd
imul
add
pop
sub
nop
imul
shlb
sub
loop
pop
sub
adc
inc
adc
and
ss
pop
push
mov
xor
xchg
adc
or
cmpl
jmp
les
mov
out
mov
xchg
mov
mov
stc
or
cli
lea
pop
dec
mov
mov
subb
mov
outsb
in
mov
lcall
push
push
dec
and
xchg
lcall
lret
pop
pop
lods
scas
repz
jmp
and
mov
adc
movsb
test
add
int3
outsl
pop
inc
dec
jp
fildl
mov
xchg
paddw
in
addr16
test
pushf
iret
adc
call
pop
sub
mov
imul
fildl
lods
call
sarl
xorl
mov
adcb
or
mov
int3
stos
jle
cmc
add
std
xor
jmp
inc
movsb
push
xor
mov
adc
xchg
shll
xchg
and
rcr
inc
stos
and
je
arpl
enter
add
jb
or
inc
jecxz
cltd
sbb
xor
popf
pop
fsub
ss
lahf
popa
test
loopne
mov
push
dec
sti
in
aam
mov
inc
leave
mov
mov
stc
and
mov
jmp
lret
adc
lahf
mov
movsb
popa
cmp
sbb
mov
dec
imul
mov
nop
aas
push
popf
jno
test
stos
aad
or
pop
mov
sti
push
sbb
aad
std
fsubl
cmp
insb
dec
test
xchg
push
int3
test
lock
mov
pop
fs
shll
pop
movsl
pop
jo
inc
add
push
cmp
je
inc
sbbl
cmp
test
fldl
jg
lret
sbb
into
add
cmp
out
enter
inc
shll
adcl
repnz
orl
mov
and
jo
dec
mov
test
adc
cld
sahf
push
bsr
lret
mov
push
sbb
cltd
mov
sbb
inc
in
dec
mov
mov
dec
push
push
xchg
or
lret
or
fldcw
rorb
addr16
je
sbb
ds
popf
ret
mov
pop
adc
mov
xor
sar
pushf
ds
or
sub
cmp
insl
ljmp
inc
jmp
xchg
test
jae
add
cwtl
pusha
pop
jns
data16
xor
sbb
divl
loope
les
leave
cmp
cmp
in
jae
push
pop
mov
cli
jae
push
jo
inc
cmpsb
pushl
push
addr16
inc
idivl
ret
test
mov
loopne
xchg
push
sbb
movsb
scas
mov
je
dec
divl
or
adc
sub
mov
or
sub
shll
xchg
push
ret
mov
in
arpl
mov
lret
sbb
mov
fistpl
test
in
push
lea
cltd
sub
mov
jns
stos
addr16
push
adc
push
enter
les
dec
mov
jmp
sub
rcll
sub
xor
jae
sbb
fbstp
push
clc
xchg
mov
mov
stos
mov
mov
icebp
ljmp
outsl
xchg
mov
pop
or
sbb
adc
lret
or
mov
mov
mov
mov
pop
mov
and
add
dec
lea
popf
clc
in
lcall
push
cs
scas
mov
cli
jnp
popf
cmpl
pop
or
pop
or
cmp
push
and
inc
insb
add
adc
sbb
adc
insl
lret
ret
xor
aad
jb
outsl
xchg
mov
into
ljmp
iret
mov
lret
je
out
push
add
or
xchg
or
ss
les
push
push
mov
sbb
xor
xchg
cmp
xor
loop
movb
and
cld
adc
sti
and
out
xchg
mov
sub
fcomps
daa
sti
and
out
push
fildl
addr16
outsl
insb
dec
push
data16
cmpsl
cmp
shll
movups
push
xchg
pop
dec
mov
popf
outsb
int
jno
or
cwtl
adc
mov
adc
ret
lret
pop
inc
jae
loope
mull
jne
out
fisttpll
into
push
push
mov
mov
cmp
pop
inc
or
test
dec
pushf
enter
push
jp
cltd
mov
jns
inc
xor
mov
mov
lock
dec
inc
int
imul
jl
das
push
in
sbb
rorl
cmp
jno
das
xchg
mov
fisubl
ljmp
pop
add
mov
mov
sub
dec
jl
cmp
sahf
sub
jns
mov
je
test
pushf
jbe
xor
or
daa
ss
lahf
les
sbb
sti
mov
mov
pop
dec
call
mov
pop
cs
popf
mov
xchg
testl
aaa
mov
aad
aas
mov
stos
jp
test
mov
xor
and
inc
enter
pop
scas
incb
push
sahf
mov
ds
test
push
str
mov
mov
mov
push
sbb
pushf
mov
jge
lcall
jp
int
xchg
bound
jae
movsl
sbbb
mov
in
jnp
lea
loope
cmp
mov
fucom
xor
loop
sub
stos
mov
hlt
push
pop
negb
icebp
push
sti
stos
dec
popf
xchg
int
hlt
cmpsb
push
adc
stos
iret
mov
pop
mov
sub
and
jbe
mov
jo
mov
call
stc
ja
jge
jnp
pushl
adc
adc
testb
sbb
lea
mov
imul
faddl
inc
out
xchg
pusha
sub
pop
sub
jo
scas
cmpsb
fists
lods
repnz
cmpsl
sub
mov
xor
pop
outsl
add
cmp
aas
and
ss
or
js
xchg
sbb
mov
in
out
cltd
xor
les
aaa
mov
push
and
xlat
xchg
or
enter
jecxz
and
rcr
cs
adc
popf
mov
xchg
xlat
and
aaa
dec
or
inc
mov
pxor
sub
adc
pop
jne
out
or
and
add
sbb
sub
loope
or
insb
xor
or
fwait
xchg
add
mov
call
jo
fmulp
push
inc
aas
in
aas
adc
sysenter
clc
sbb
test
push
dec
and
xchg
dec
adc
leave
xor
xor
mov
incb
andb
mov
mov
int
inc
mov
sbb
sub
add
lret
cmpb
xor
inc
mov
jb
xchg
lock
cmp
call
cmpsb
pop
xchg
xchg
das
sub
dec
xchg
das
jae
fisubl
sub
push
int3
and
inc
cltd
add
gs
sar
or
or
pusha
ss
mov
xchg
scas
dec
idivb
push
loopnew
inc
aad
imul
and
xorb
jge
pop
adc
mov
xchg
jmp
shr
xchg
roll
or
mov
sub
push
pop
sub
rcll
or
js
cmp
or
jmp
fwait
cli
pop
in
mov
jle
repnz
cmp
insb
loopne
pop
outsl
jb
add
cmp
xchg
fwait
int3
inc
nop
cmpsb
data16
lods
add
fnstcw
aaa
xor
cmp
aas
cmp
jge
mov
inc
cmp
imul
push
xchg
ret
into
sbb
or
lret
mov
cmp
and
sub
pop
arpl
sbb
pop
pop
jns
push
lds
jb
jl
mov
aad
lds
xor
popf
fcomp
add
fucom
shlb
or
repnz
mov
ret
adc
mov
outsl
adc
push
and
out
sbb
scas
xor
jbe
out
pop
xorl
mov
pop
clc
jg
popa
pusha
sub
es
mov
sti
dec
dec
adc
xlat
ret
push
loopne
lea
subl
dec
leave
dec
push
and
mov
lods
cwtl
push
inc
outsb
jp
popf
jl
mov
dec
clc
icebp
sbb
xchg
push
lods
mov
dec
jne
fcoms
and
jnp
roll
mov
dec
shrl
enter
mov
or
dec
rcr
addl
push
sbb
sbb
roll
loop
lds
lea
popa
push
hlt
adc
jmp
jmp
inc
mov
jbe
daa
adc
aam
jo
xchg
dec
rcrb
lret
add
shrb
push
lods
cli
lahf
lcall
test
pop
dec
in
lds
cmp
fstpl
fildll
ljmp
lret
jae
push
js
mov
xor
movsl
mov
push
movsl
inc
aad
inc
mov
int3
jle
pop
inc
fwait
mov
dec
insb
xchg
pop
pop
incb
sub
pop
cmp
lahf
movsl
lods
jno
test
fldt
jp
imul
pusha
sub
sbb
mov
scas
inc
dec
scas
lock
call
pushf
jecxz
rcrb
dec
call
xor
pop
dec
push
xchg
and
mov
sahf
adc
shlb
adcl
test
mov
fldl
sahf
imul
in
loopne
movsl
adc
cmpsb
cmpsb
pop
sub
hlt
push
ljmp
inc
jns
inc
mov
mov
scas
sbb
jle
gs
das
and
sub
xchg
lock
movsbl
xorl
out
popa
ljmp
mov
lea
or
aas
and
push
loopne
rcrl
sub
lahf
xchg
repnz
fs
and
insl
outsl
dec
pop
mov
dec
cmpsl
std
xchg
sub
xlat
mov
imul
and
xchg
adc
dec
xchg
cmp
inc
adcb
ficoms
jae
sbb
pop
cmpsb
fistl
xor
outsb
push
dec
ret
push
lahf
pop
bt
lods
jae
sbb
cmp
iret
jnp
xor
cmpsb
sbb
shll
jnp
sub
mov
xor
cmpsb
xchg
nop
adc
jle
ret
mov
and
scas
push
mov
sub
sti
lahf
jle
xor
and
addr16
add
mov
and
pop
leave
data16
lret
lods
fptan
test
mov
mov
test
xor
cltd
neg
loop
in
push
lock
icebp
inc
mov
movsb
in
xor
sub
sub
ds
or
lret
xchg
sbb
cli
add
int
enter
cmpsl
dec
and
addr16
loopne
aas
add
pop
pop
inc
pop
cs
add
aam
push
test
mov
cmp
pop
xor
mov
mov
out
add
sbb
cmp
dec
ds
out
sub
in
mov
cmc
sbb
adc
push
cmp
into
mov
pop
xor
shl
jno
cmp
inc
xchg
enter
pop
add
or
dec
repnz
call
shr
and
test
and
outsl
push
fistl
xor
and
mov
adcb
pushf
clc
mov
cmpsb
test
shr
jo
mov
icebp
cmp
or
icebp
xor
arpl
bound
pusha
dec
aas
sahf
outsl
outsl
hlt
test
sub
arpl
dec
fucomip
es
jo
adc
ds
jecxz
jecxz
pop
xor
push
out
dec
sub
cmp
out
or
xchg
xchg
or
shr
cmpsl
push
stc
loop
fadd
iret
add
inc
mov
cmp
mov
test
mull
out
pop
jne
ljmp
inc
ljmp
in
xor
lods
add
les
mov
xor
add
push
cmpb
push
into
adc
sbbb
test
mov
cs
xchg
push
dec
enter
lahf
xor
sub
adc
shll
loope
lods
pop
jecxz
cmp
mov
in
loop
lcall
and
std
mov
xchg
stos
daa
cmp
cld
int
movb
fnstenv
pop
inc
push
ds
xchg
pop
movsb
sub
fsub
mov
je
cmp
test
ret
sti
push
fldt
xchg
xchg
xchg
adc
push
mov
inc
cli
lock
repz
lods
sub
aaa
pop
in
cmp
push
lret
push
add
inc
outsb
icebp
gs
add
jmp
jno,pt
fsubrs
es
sub
push
pop
jno
inc
sbb
and
sar
scas
xchg
sti
shl
mov
sub
cld
shlb
xchg
int
ret
movl
leave
mov
daa
addr16
clc
lds
xlat
pop
mov
mov
out
sub
ss
pop
lret
repz
sub
shrl
sub
imul
or
test
imul
pop
loop
cltd
pushw
cmp
xchg
jbe
mov
inc
test
movsb
int3
sub
aam
inc
xor
mov
sbb
mov
dec
pop
pop
lret
xor
push
out
out
add
cmp
push
cmp
out
arpl
dec
cltd
mov
sub
or
std
stc
iret
or
cmp
xchg
adc
mov
cld
pushf
xor
xlat
mov
pusha
or
fdivs
push
and
cmp
sub
and
and
adc
jae
aas
and
call
fcomip
jb
leave
cmovnp
inc
scas
pop
sarl
jge
cs
and
popl
popl
out
dec
shlb
outsl
and
sti
jp
jno
repz
out
xchg
xorl
xor
aam
stos
or
sbb
pushf
stos
test
ret
sbb
sbb
repnz
mov
iret
mov
xchg
adcl
push
aas
inc
xor
mov
cmpsl
pop
dec
ret
cmc
adc
lcall
push
es
sub
sub
inc
mov
insb
xchg
ja
inc
pop
sub
xchg
cld
mov
iret
in
jmp
test
inc
lods
inc
scas
jne
or
aad
mov
sub
xor
in
adc
jmp
stc
inc
lahf
or
pushf
xor
mov
hlt
xchg
mov
iret
pop
ljmp
cli
cmp
adc
lea
pop
int
mov
push
mov
inc
aam
jb
outsb
mov
leave
cltd
inc
sahf
cwtl
inc
pop
sub
pop
inc
add
subb
dec
mov
mov
xchg
pop
movsl
adc
test
adcb
pop
dec
lcall
xchg
addl
enter
sub
pop
pop
inc
jo
ljmp
xor
cmp
xor
lea
fdivrp
pop
in
cs
movsl
jo
mov
leave
popa
in
fnstcw
ret
add
and
ret
xchg
mov
xor
adc
adc
rolb
fsubl
pop
jge
js
jl
sbb
lea
xchg
stos
imul
jnp
sahf
in
fists
cmp
lods
cmp
daa
mov
imul
mov
mov
ss
mov
clc
pop
movsb
fcoml
in
fwait
cmp
mov
mov
rcl
pop
insb
or
outsl
or
adc
cmp
insl
inc
lea
push
fcmovb
mov
push
sub
in
stos
aad
ret
outsb
xlat
xor
xor
mov
fbld
dec
sbbl
cmc
call
xchg
test
lcall
jmp
int3
cmc
stos
add
movsb
sarb
adc
jo
lret
loopne
movsl
call
dec
fidivrs
mov
sahf
mov
or
ret
es
inc
push
lahf
stos
jecxz
repnz
das
sbb
out
leave
pop
mov
mov
mov
jb
lahf
mov
fwait
dec
adc
fwait
inc
mov
cmpsl
adc
jg
std
adc
scas
push
lods
in
sbb
pop
xor
add
and
push
lret
push
push
aad
dec
cmp
sbb
std
push
lods
cmpsb
or
xchg
cmp
push
cmp
push
andb
mov
aad
popf
mov
sti
out
push
int
jg
test
out
ljmp
sbb
insb
push
stc
pop
add
popf
lods
dec
pop
pop
ret
out
lock
rol
push
push
mov
mov
outsl
or
js
dec
mov
xchg
cmp
xchg
cs
aad
add
jae
push
sub
jo
push
rol
add
inc
in
push
xchg
loope
sbb
jmp
insl
loopne
clc
adc
not
movsb
pop
mov
pop
mov
and
fsubl
lds
mov
cmp
int3
dec
mov
imul
js
xor
dec
mov
filds
inc
push
pushf
mov
cli
call
lret
cmc
scas
cwtl
cmp
push
iret
divl
les
lahf
in
or
push
dec
jg
aas
mov
ret
int3
mov
out
xor
jg
fdivs
xchg
stos
mov
fcoml
and
lock
cmc
insl
dec
cmpsb
shlb
nop
ljmp
adc
dec
test
fdivr
and
outsb
lret
mov
jne
jns
xchg
cmp
push
repnz
mov
nop
xor
or
xlat
clc
in
mov
xchg
dec
lock
dec
mov
dec
add
je
fwait
lahf
pop
pushf
xchg
cli
ret
out
js
fdivl
ds
and
push
jo
push
pop
test
cmp
ret
mov
mov
rep
lea
xlat
stos
ds
and
mov
mulb
xlat
clc
rclb
out
mov
and
cmpsb
add
test
inc
shrb
cmpsl
cmp
out
shll
xor
test
cltd
sbb
test
mov
dec
addl
ljmp
inc
shrb
roll
add
xor
fidivs
jns
testb
sub
scas
dec
xchg
jl
jns
popf
inc
push
sub
les
jae
inc
js
in
out
push
ret
mov
pop
or
sub
push
sbb
sub
insl
repnz
lcall
jae
xchg
cli
out
enter
and
fcmovnu
pop
dec
jnp
xchg
loopne
push
enter
lods
outsb
mov
jo
pop
jno
jg
loopne
scas
dec
cmc
insl
lret
jmp
pop
cmp
pop
movsl
cmpsl
test
xor
fstpt
gs
sub
xor
mov
mov
in
ja
popf
ret
int3
mov
jno
ret
pop
cmp
xor
cwtl
xorl
arpl
push
sti
test
xchg
dec
test
in
pop
not
add
mov
push
jnp
das
das
roll
cmpsl
test
sbb
sub
outsl
stc
jl
out
fisttpl
sahf
mov
and
dec
paddb
lods
popa
dec
mov
inc
mov
hlt
mov
cwtl
mov
mov
mov
dec
sbb
dec
push
sarl
or
fnstsw
lock
mov
out
insb
pop
mov
and
insb
mov
clc
dec
jg
xor
pop
add
lds
pushl
pusha
sub
pop
xchg
hlt
cmp
lods
movsl
lahf
xchg
bnd
cmp
lret
inc
addr16
loope
aam
jno
lahf
jbe
inc
iret
stos
cmp
pop
dec
sti
pop
jnp
sbb
cmp
inc
sbbb
xor
cmp
and
sbb
pop
inc
mov
jmp
or
lcall
shr
adc
sub
ret
cmc
test
jns
add
pusha
aas
insl
cli
mov
sub
push
mov
imul
pop
pusha
out
cmp
flds
push
add
push
ljmp
inc
aam
pushf
testl
mov
cli
jg
clc
insl
sar
pop
jg
mov
sbb
shlb
adc
aam
jbe
insl
xor
xchg
add
sbb
xor
mov
cmp
mov
fstl
mov
mov
popl
mov
arpl
cmc
pusha
loop
jecxz
fwait
pop
add
cmp
and
loopne
lret
jecxz
out
sbb
fsubrs
lock
sub
or
xchg
and
shrl
cmp
cs
out
stos
and
iret
inc
js
push
dec
push
enter
das
ljmp
xchg
out
in
jo
rcr
mov
dec
and
popa
xor
jmp
sti
xor
mov
ja
test
daa
add
pop
xlat
and
mov
aam
dec
loope
jnp
mov
fidivrs
mov
lock
xor
lret
cltd
adc
and
clc
or
mov
cltd
and
jnp
aad
and
xlat
cs
adc
lds
imul
iret
cltd
inc
lea
loope
push
mov
loope
insl
popa
cli
mov
fwait
cmpsl
bound
mov
inc
xchg
repz
les
jo
shll
clc
pop
lret
jg
sbb
movsb
push
imul
lea
cwtl
mov
movsb
dec
scas
mov
lock
mov
in
inc
push
jne
cld
pop
fcomp
xchg
jae
push
daa
sub
cmpsl
icebp
xor
orl
lahf
test
pop
pusha
or
mov
sbb
incb
xor
mov
and
dec
loop
mov
out
icebp
fwait
testb
in
inc
push
sub
cwtl
test
movsl
xchg
xchg
xlat
cld
or
js
jo
shll
movsb
xchg
mov
xor
push
cmpsl
xchg
sub
jle
cmp
fdivrs
pop
sub
jecxz
xlat
fwait
xor
insb
mov
scas
test
add
mov
pop
aas
popa
push
pop
jl
add
scas
add
lcall
into
setno
dec
insb
cltd
jmp
mov
rcrb
aas
mov
rorb
xchg
test
test
adc
fisubrs
notb
sarb
clc
testb
pop
sub
sub
push
outsl
cli
leave
cmp
pop
int
xor
push
dec
mov
mov
rolb
pop
mov
cli
out
push
outsl
dec
add
enterw
add
cmpsb
loopne
je
cmpsb
pop
mov
out
adc
mov
xor
sbb
loopne
dec
mov
or
mov
inc
and
movsl
faddp
scas
cmp
push
mov
insb
or
pop
lret
movsl
int
cmp
fsubr
inc
pusha
push
adc
roll
ss
dec
jmp
lods
test
or
icebp
decl
sbb
adc
in
push
pop
inc
cmp
push
clc
fldenv
push
loop
int3
adc
andl
stc
decl
lds
dec
jno
mov
roll
bound
pop
add
std
in
unpckhps
add
nopl
push
push
xchg
sbb
test
adc
xor
arpl
fldcw
push
or
jecxz
lret
lds
mov
rep
in
and
and
rol
xchg
clc
jmp
nop
pop
sbb
arpl
sar
lret
gs
mov
aaa
int3
insb
sub
jnp
aaa
fcmovb
loop
je
fdivrs
imul
ja
nop
imul
dec
leave
pop
js
aaa
jb
adc
pop
das
imul
aaa
mov
inc
lret
add
sbb
dec
xor
xchg
mov
loopne
and
cmp
aaa
mov
movsb
pop
xlat
clc
fdivs
or
pop
out
mov
adc
xor
dec
inc
lock
pop
pop
push
imul
pop
cmpsl
push
mov
or
mov
fisttpl
das
xchg
and
out
call
js
add
in
ds
pop
inc
lock
push
iret
lcall
sarl
xor
mov
jnp
cmp
add
out
shl
aad
push
inc
int
scas
jge
jnp
xor
pop
or
sbb
fsubrl
addr16
push
insl
aad
sbb
cltd
and
xchg
push
ret
int
dec
ret
add
mov
mov
xchg
popf
sub
mov
mov
in
sub
gs
mov
js
jmp
ds
pop
pop
in
mov
outsb
mov
not
clc
jecxz
ljmp
sub
popa
int
push
push
loopne
scas
out
push
aaa
movsb
pop
pop
popf
imul
lcall
sub
cmp
test
add
push
mov
scas
and
xor
jae
add
jo
aam
out
cmp
jle
ljmp
aad
adc
dec
je
les
mov
loope
aas
mov
das
sarl
cmpsb
pop
xchg
adc
test
sub
int
or
sub
inc
cs
sub
jecxz
in
iret
adc
or
repnz
les
sub
inc
mov
pop
sub
and
stc
dec
stos
jmp
push
xchg
je
jae
inc
das
stos
xchg
pop
xor
leave
std
out
leave
pop
mov
das
movsl
jnp
sub
int3
cli
cmpl
sahf
pop
lds
cmpxchg
add
test
adc
lods
sbb
pop
mov
sub
fucom
stos
jp
add
add
in
sbb
mov
repz
cmpsb
sbb
xchg
mov
cld
gs
sbb
std
in
push
lock
and
arpl
inc
into
arpl
sbb
and
icebp
ss
imul
lods
icebp
bound
inc
stos
jle
mov
test
scas
lock
adc
call
cmp
xor
das
push
mov
push
cmp
mov
scas
cmp
and
inc
js
pop
pop
lods
ret
cmp
mov
addr16
adc
nop
insb
cli
mov
dec
mov
in
xorl
jmp
call
inc
movsb
inc
push
in
pop
jmp
popa
rcr
sbb
and
dec
std
idiv
jb
pop
repz
dec
orl
xor
mov
jp
mov
inc
int3
sbb
adc
cmpsl
or
fidivrl
movsb
int3
dec
lea
fstpt
inc
xchg
addr16
notb
adc
in
out
push
dec
mov
adc
rol
mov
outsb
and
test
ja
out
mov
inc
cli
ds
loopne
into
repnz
and
test
mov
adc
jl
loop
bound
cmp
aad
pop
xchg
je
mov
mov
js
imul
adc
sub
or
iret
pop
cmpsl
out
dec
loopne
jbe
hlt
adc
jns
push
test
fwait
push
lea
pop
mov
mov
cmp
xorb
icebp
xlat
inc
or
jns
pusha
dec
pop
mov
mov
call
mov
lds
cwtl
pop
in
test
cmc
mov
aas
sbb
inc
out
xchg
in
dec
mov
push
rcl
ret
in
aad
push
sub
lret
inc
jb
push
mov
push
ret
shll
lods
mov
mov
cmpb
push
cli
mov
flds
jmp
roll
push
loope
inc
fwait
adc
and
daa
call
fcoms
inc
addr16
jb
dec
lods
xchg
out
xchg
iret
adc
dec
add
dec
sbb
in
jecxz
daa
lea
xor
shll
les
sbb
loope
or
sbb
out
cld
dec
and
mov
scas
mov
adc
into
popa
xchg
fmuls
pop
push
daa
mov
lret
in
mov
sti
pop
pop
mov
lods
inc
mov
cmp
inc
data16
cmp
aas
hlt
mov
test
xchg
cwtl
sbb
mov
mov
sub
js
stc
movsl
outsb
sub
or
xchg
mov
mov
xchg
lret
lret
daa
mov
mov
mov
cmpb
lds
popa
jp
dec
frstor
jbe
imul
loope
and
jp
aaa
insl
push
int
bound
nop
dec
or
sub
into
aas
lods
cld
outsl
ret
es
cmp
ja
cli
aaa
push
fs
mov
adcb
pop
sub
loopne
imul
dec
lock
nop
pop
xchg
xlat
sub
push
and
xchg
fsubrs
mov
xchg
inc
popa
add
add
arpl
pop
data16
pop
sahf
repnz
mov
fucomip
mov
xchg
hlt
imul
mov
test
mov
sub
xchg
ror
sub
push
adc
mov
mov
rcll
push
or
xchg
je
sbb
add
mov
insb
mov
jl
sbb
ss
jle
mov
mov
cmp
push
pop
dec
lret
es
sbb
pop
sbb
push
mov
enter
add
push
inc
hlt
xchg
jns
mov
insb
xor
jno
test
lods
daa
sahf
mov
aad
push
stos
adc
enter
cmp
add
cmp
mov
or
push
xor
scas
dec
sbb
xchg
xchg
mov
aaa
or
jg
push
pop
arpl
mov
in
dec
xchg
outsb
out
loop
rol
outsl
pop
jo
dec
xchg
xchg
pop
cmp
mov
push
outsl
cmp
mov
jo
adc
dec
pushf
repnz
push
sti
push
push
lret
scas
xor
fnsave
lret
insl
inc
negb
push
or
daa
int3
imul
fsubp
mov
xor
clc
in
adc
lcall
mov
imul
jg
jmp
sarl
jle
repz
lcall
out
mov
and
mov
cld
mov
shll
ss
dec
mov
jb
pop
popf
in
ret
and
fdiv
mov
cli
pop
sarb
push
leave
cmp
leave
sbb
mov
clc
lahf
nop
ret
mov
imul
cmp
jne
xor
es
insl
mov
mov
xchg
cwtl
cmpsl
xchg
fisubs
xor
sbb
push
mov
rorl
enter
and
jmp
push
push
push
xchg
cld
sub
in
push
in
and
hlt
pusha
pop
out
mov
mov
pop
xchg
insl
xor
fnsave
cltd
pop
nop
insl
mov
sub
adc
and
out
je
roll
mov
js
into
lahf
jne
or
mov
lahf
clc
sti
bound
push
daa
adc
in
fisubrl
sub
or
jecxz
push
jo
fisubrl
sbb
js
lea
and
retw
lock
push
stc
dec
aad
dec
lret
pop
in
xor
and
orl
cli
inc
mov
xchg
and
and
in
lock
call
mul
in
push
cld
mov
jb
or
and
ss
sub
xlat
cs
push
push
xor
test
xchg
and
jo
jno
ret
negb
xchg
pop
iret
ret
push
inc
push
push
sbb
inc
andl
ja
mov
mov
jle
adc
pop
push
in
xor
dec
leave
test
int
pop
and
push
mov
mov
lods
xchg
mov
and
or
mov
jae
add
xor
jmp
loope
cmp
out
rorb
dec
or
mov
rcll
pop
and
scas
jns
out
fs
sahf
cmpsl
push
adc
jne
xor
push
or
fstps
enter
out
mov
rclb
push
xchg
shrb
aad
popf
add
shlb
icebp
cli
cvtdq2ps
cmpsb
mov
ret
sbb
mov
pop
cmc
lock
push
jge
fdivl
push
scas
movlps
xchg
mov
cmp
outsw
or
lcall
mov
call
mov
pop
and
int
dec
in
mov
pop
or
imul
jp
cmp
cmp
pop
mov
mov
ret
les
inc
inc
dec
pop
lods
test
lea
es
js
mov
pop
xlat
add
mov
fsubrs
outsb
shll
testl
push
cmpsb
jbe
repnz
adc
pop
xchg
out
js
repnz
adc
aas
loope
imul
shlb
adc
or
inc
das
or
add
pop
xor
clc
sub
xchg
inc
add
pop
pop
out
jbe
xor
das
xchg
out
push
push
fldl
adc
and
add
sub
nop
mov
enter
test
out
and
push
mov
mov
pop
movsl
add
fst
mov
sti
jne
pop
movsb
jb
dec
jne
shrl
mov
xor
mov
in
xchg
sbb
movsl
push
test
hlt
pushf
sub
sub
daa
fnstsw
jbe
test
pop
mov
pop
aas
pop
xchg
cli
int3
arpl
test
pop
mov
jne
loop
lea
push
jecxz
in
adc
fnstsw
cs
mov
mov
dec
testb
stos
cmpsl
fcoms
jae
test
cmpsb
cwtl
cmc
cltd
icebp
pop
fistl
xor
nop
insb
xchg
pop
js
adc
jno
xorl
and
sbb
inc
dec
xor
push
mov
push
adc
fdivl
repnz
mov
push
dec
push
addb
sub
aas
cli
xor
repz
testl
push
mov
jbe
inc
imul
gs
sub
mov
int
or
movsl
repnz
sahf
mov
cmp
mov
lcall
lds
in
iret
fisttps
sbb
jmp
mov
frstor
sti
les
in
test
jmp
mov
or
and
mov
sbb
test
orb
mov
jnp
dec
xchg
imul
sarb
les
lock
lods
dec
mov
mov
jle
pop
mov
xchg
in
mov
mov
sub
jno
mov
xchg
mov
push
subl
repnz
mov
sbb
push
inc
or
mov
or
dec
adc
xlat
push
fiadds
outsb
ret
cmp
repz
jge
inc
jg
shlb
aas
cmp
out
fdivrs
icebp
bound
scas
push
push
xchg
inc
jle
stos
test
xor
mov
aas
and
or
xor
inc
aaa
sub
outsl
andl
aad
sub
jmp
aaa
dec
jb,pt
dec
int
sub
jbe
mov
adc
andb
or
add
in
mov
cld
out
mov
sub
mov
xchg
xchg
mov
fistl
fwait
shlb
adc
xor
mov
cwtl
std
jle
lock
push
mov
and
pushf
xchg
sbb
inc
mov
mov
fstpl
sub
enter
clc
imul
pop
dec
or
std
outsl
cmp
push
cld
pop
shll
ljmp
in
aad
adc
cmp
inc
add
or
sub
pop
jno
lock
push
jo
inc
daa
out
hlt
jmp
mov
sbb
in
and
test
in
aam
insb
fistl
popa
mov
pop
aas
sbb
out
mov
je
je
jnp
add
mov
jl
shrl
out
cmc
jecxz
test
xchg
dec
push
or
divb
sub
jmp
lods
inc
inc
mov
mov
sbb
pop
shlb
gs
push
fisubs
jbe
add
int
jne
outsl
inc
stos
shrb
pop
jbe
xor
xchg
pop
mov
stc
jp
pop
lds
push
cmp
pop
or
fisubrs
mov
ret
jl
fldenv
stc
add
xchg
inc
fsubs
dec
inc
jl
popa
jecxz
sti
or
xchg
movsb
push
call
mov
pop
es
les
cs
inc
fucomp
xor
sbb
mov
and
fsubl
rcr
xchg
push
mov
sahf
in
mov
xor
jmp
cltd
pop
xor
push
mov
cli
ret
pushf
inc
and
xor
addr16
sub
xchg
sub
lret
mov
bound
pop
enter
xor
mov
gs
mov
cwtl
sti
aad
mov
in
dec
add
sti
cld
and
add
or
insb
fstps
icebp
xchg
xor
xchg
cmc
loopne
mov
mov
bound
jne
call
push
xchg
xchg
inc
scas
sbb
dec
dec
jns
fadds
sbb
sarb
xchg
js
pop
xlat
aaa
clc
add
cli
pop
inc
aas
xchg
call
notb
hlt
in
adc
mov
xor
push
rcll
xor
mov
imul
jecxz
je
fimull
insl
in
mov
in
push
gs
push
xor
pop
mov
push
vzeroall
sahf
dec
mov
jg
mov
enter
sbb
imul
das
jbe
test
jns
and
sbb
push
sbb
inc
test
cmp
push
adc
cwtl
pop
sbb
dec
sbb
popf
test
inc
flds
fdivrs
repnz
std
fistps
xchg
pushf
adc
outsb
add
pop
push
jle
sub
mov
xor
pop
mov
mov
mov
inc
cmpsl
lcall
adc
dec
vmovntdq
jmp
test
adc
rclb
xchg
sub
call
push
cli
lret
dec
pop
push
pop
xor
je
xchg
jmp
mov
adc
sub
xor
add
popa
imul
xorb
loopne
mov
cmp
movsl
or
jmp
or
mov
and
insl
repz
and
lcall
bound
sbb
mov
sub
cmpsl
mov
int
shrb
cmp
push
in
xchg
fsubs
test
mov
sub
iret
test
xchg
stc
test
hlt
insl
mov
lret
inc
add
in
xor
push
repz
mov
sub
and
popf
ret
pop
and
pop
out
arpl
leave
sub
ss
jne
insb
push
sbb
insl
sti
call
shrb
sbb
jmp
dec
cmp
xlat
push
nop
test
cmpsl
addr16
adc
mov
push
cwtl
mov
fdivs
mov
pop
xchg
jmp
aad
aaa
mov
scas
inc
dec
pop
shr
adc
imul
rorl
adcb
es
mov
idivl
mov
testb
xchg
js
es
fcoms
cld
andl
mov
add
sbb
jbe
shr
mov
aam
outsb
in
jl
xor
int
fiaddl
or
push
pop
lds
fwait
pop
lea
jp
pop
cmp
outsl
mov
aaa
inc
xchg
popf
cmp
push
aaa
jge
push
inc
out
cs
fwait
aam
dec
test
repz
xlat
jp
xchg
pop
je
adc
insb
mov
xor
jg
dec
test
mov
fidivrl
or
ret
lea
and
mov
cmp
xchg
aad
lds
ds
pop
push
imulb
jmp
mov
xor
pop
loop
mov
addl
xchg
lret
pop
dec
andb
aam
jb
push
pop
inc
mov
adc
xor
movsl
ljmp
cmp
jne
xor
stos
jnp
shrb
insb
test
cmp
ljmp
sub
mov
jl
cmp
je
jns
insl
ds
sahf
cmpsb
outsl
pop
shlb
xor
in
push
int3
push
sti
jecxz
test
sbb
pop
icebp
movsl
push
iret
xor
lret
sbb
orl
or
pop
mov
sub
mov
lods
adc
test
int3
jp
mov
push
and
ret
test
nop
outsl
lods
or
dec
sti
test
call
andb
test
xor
fld
dec
ds
out
clc
and
pushf
dec
pop
adc
mov
inc
leave
inc
in
sbb
loopnew
cs
cmp
lret
push
cmp
dec
dec
clc
push
nop
fcompl
hlt
pop
cmp
lahf
jno
mov
xor
push
icebp
int
mov
cwtl
repz
xor
and
aas
push
mov
xchg
push
addb
mov
sub
addl
dec
and
fbstp
dec
in
dec
fcoms
xor
push
mov
mov
pop
into
xor
cld
xchg
add
push
cmp
rol
xchg
sbb
aam
mov
pop
dec
jp
xor
sub
jmp
mov
cmp
push
je
in
imul
or
shr
xchg
fs
ljmp
ljmp
jmp
fidivl
jle
lods
mov
inc
inc
push
mov
aaa
mov
repnz
shlb
ja
sbb
mov
aas
pop
scas
ret
jo
repnz
test
daa
dec
stc
fldcw
clc
mov
mov
frstor
cmpsb
fldt
jp
movsl
mov
fbstp
push
lcall
jo
jecxz,pn
xor
push
or
repnz
cld
add
in
lret
mov
rolb
xchg
lods
movsl
sub
cmp
mov
lds
mov
cbtw
jmp
aas
ljmp
or
fsubrs
xchg
push
fcmovu
pop
mov
sti
sbb
add
mov
in
stos
or
mov
mov
adc
sub
call
imul
and
xor
movq
mov
fld
jb
pop
xchg
cs
pushf
loop
pop
jno
xor
pop
push
and
lcall
push
and
lods
mov
mov
xchg
outsl
push
pop
mov
mov
test
xchg
and
xor
fs
pop
add
fiaddl
xchg
nop
cmpsl
cmpsb
imull
dec
cmpsl
iret
mov
pop
dec
dec
add
sti
xchg
cmp
insl
lock
enter
js
mov
stos
sbb
std
daa
pop
pushf
xchg
dec
out
scas
cld
mov
in
negl
push
push
lea
sub
cs
push
pop
push
or
sbb
pop
lods
mov
cwtl
pop
cltd
or
sub
insl
xchg
stos
xchg
pop
ja
nop
push
lret
jmp
imul
cmpsl
xchg
mov
xchg
and
push
lods
mov
lock
sbb
ss
in
cmp
notl
stc
loop
daa
sub
xchg
push
inc
daa
and
fists
push
mov
pop
sub
fcoms
inc
dec
pop
pop
xchg
daa
sub
cmpsl
xor
or
inc
jl
fistpl
pop
push
push
jb
out
nop
mov
das
pop
dec
add
es
into
jl
aas
jmp
xor
jge
pop
imul
push
idivl
push
mov
cmp
pop
in
div
mov
mov
jmp
add
adc
mov
push
movsb
lcall
mov
popf
xchg
xchg
bound
int3
adc
jnp
addr16
dec
sub
inc
sahf
sub
lods
mov
roll
push
inc
dec
aam
in
in
jne
jl
add
mov
sbb
mov
and
insb
adc
dec
cmp
lret
out
scas
sbb
pushf
jne
enter
enter
and
jle,pt
cwtl
sbb
mov
jl
popa
cs
xchg
fisubs
adc
shlb
inc
mov
enter
pop
xchg
inc
stos
xchg
sub
ret
xor
jae
pop
cwtl
lret
push
rcl
fldenv
push
outsl
ret
fbstp
or
push
stos
sub
pusha
icebp
jno
mov
pusha
sub
jae
mov
popl
pop
dec
shl
popf
loope
cwtl
movsb
xchg
push
cmp
xchg
dec
lock
mov
jl
fnstcw
push
rclb
pop
decb
inc
or
mov
adc
mov
jo
mov
dec
sub
je
pop
loopne
roll
icebp
adc
push
xchg
sbb
test
clc
sbb
hlt
popf
sbb
sbb
mov
nop
add
push
sbb
dec
cmpsb
and
lret
adc
dec
fdivl
stos
cmp
lods
imul
jmp
mov
pusha
push
arpl
imul
rcrl
lods
repnz
mulb
fs
mov
test
mov
xchg
and
lret
rcll
mov
in
mulb
popf
mov
or
lahf
nop
sahf
jae
lret
fldl
mov
push
mov
cs
test
xchg
out
pop
mov
fidivs
jo
jns
xchg
loopne
jl
or
dec
inc
mov
lahf
not
daa
pop
cmp
lods
testl
mov
ss
inc
mov
pop
je
call
std
mov
and
inc
xchg
fbld
xchg
pushf
aaa
and
aas
loope
add
adc
aaa
pop
cmp
lock
test
cmpsl
lcall
nop
push
lcall
add
inc
sbb
loopne
test
shl
lret
lahf
shr
std
in
xor
push
sub
pop
push
adc
fwait
push
insb
mov
loop
push
int3
mov
pop
lahf
mov
imul
ljmp
push
pop
xor
jle
adc
je
mov
add
iret
call
stos
jle
xchg
addl
jns
push
ret
stos
xchg
pushf
cmc
outsl
fisubs
or
or
or
dec
mov
mov
pop
dec
and
push
or
add
sahf
jmp
lret
pop
insb
jle
push
rclb
hlt
and
je
insl
sub
cmpsl
jae
dec
lret
jle
jge
lock
mov
sarb
ret
and
rolb
xchg
push
stc
xchg
adc
xor
aas
inc
add
mov
and
decb
sti
pushf
xchg
push
dec
cwtl
mov
mov
dec
xchg
insb
inc
test
es
gs
and
lea
xor
fnstcw
fs
imul
and
aaa
clc
xor
rcrb
or
xor
jl
add
lods
mov
push
adc
cmp
movsb
lret
cmpsw
mov
cli
or
movsb
fiaddl
pop
xor
xor
dec
mov
leave
and
rcr
sub
stos
movsb
xchg
nop
andps
and
push
push
sbb
data16
icebp
xor
notb
xchg
pop
mov
cltd
cs
push
mov
xchg
sbb
loope
pop
sbb
loopne
data16
and
call
adc
aam
jge
adc
and
scas
or
test
bound
mov
loop
sub
inc
add
inc
int3
shrb
inc
sub
je
in
rcll
pop
cld
cmp
add
xchg
sahf
cmp
xchg
mov
xchg
mov
inc
inc
cvtps2pd
stc
adc
movsl
and
xchg
push
pusha
push
sbb
xlat
das
loopew
aad
mov
les
mov
pop
adc
lds
inc
mov
in
lods
gs
mov
sbb
in
sahf
inc
ret
push
jp
push
rcl
in
dec
sbb
lret
jl,pt
lds
ja
imul
push
andl
cli
arpl
dec
ret
aas
movsb
cltd
cmp
or
xlat
or
imul
and
push
into
mov
pop
pop
pop
pop
mov
lock
mov
imul
andl
adc
stos
and
test
push
icebp
push
fs
jmp
cmp
cmpsl
jl
dec
and
and
push
rolb
lcall
mov
imul
insb
enter
dec
ret
cltd
cmpsl
pop
jmp
fsubrl
call
into
inc
cltd
inc
xchg
push
dec
or
leave
sub
fs
out
xor
sbb
pop
stos
push
je
call
test
scas
jns
pop
jle
stc
sub
call
dec
push
pop
sub
sbb
xchg
imul
je
add
ret
mov
jp
cwtl
jle
into
aad
ror
cmp
mov
push
add
shr
les
aas
push
std
jbe
pushf
push
repz
out
push
cli
xor
pusha
jae
repnz
xchg
mov
mov
jnp
test
mov
jnp
mov
fsubrs
or
lcall
xchg
fs
xchg
cmpsl
lea
jne
jo
mov
or
jb
fimuls
scas
movsb
pop
add
mov
xchg
daa
push
mov
std
xchg
cmp
test
pushf
xchg
adc
lahf
daa
lods
popa
movsl
stos
push
xchg
in
ljmp
inc
xor
incb
jl
jns
sub
aad
and
lret
mov
lahf
ljmp
lock
cmc
add
mov
and
add
xchg
pop
popf
iret
mov
movsb
cmc
pop
fidivs
ficomps
mov
repz
enter
mov
or
mov
scas
cmp
lahf
sub
loop
or
xchg
imul
icebp
xor
push
into
cmp
imul
pusha
std
dec
cmp
int
and
xchg
ss
xchg
testl
inc
mov
xchg
movsb
and
inc
jnp
adc
jae
and
jbe
push
scas
sub
je
int
in
repz
fwait
and
fisubrs
popf
mov
dec
push
mov
addw
push
fisttpll
es
lds
test
pusha
xchg
jmp
jae
bound
dec
add
and
divb
sahf
in
xor
pop
sub
adc
push
inc
icebp
call
lret
mov
xchg
fsubp
mov
push
mov
idivl
jg
outsb
in
jle
xor
cs
pop
or
push
xor
mov
popa
fistpll
data16
mov
or
jg
inc
push
push
stc
out
incb
dec
xchg
adc
add
jne
add
adcl
inc
data16
inc
pop
sar
rolb
fimull
and
xor
inc
or
in
fsubrl
jo
and
fnstcw
adc
hlt
std
mov
push
sti
fwait
aam
dec
adc
pop
cmp
xor
jae
and
jno
and
mov
shl
clc
dec
bound
clc
scas
push
xchg
jl
and
imul
push
jne
pop
jecxz
push
xor
fsts
xchg
aaa
call
movsl
pop
adc
dec
or
sarl
stos
and
adc
adc
and
call
call
stc
lock
push
pop
cmpsb
imul
jle
lret
in
dec
sbb
adc
mov
lods
cwtl
rorl
shlb
icebp
pop
lds
fnstsw
cmp
push
sub
dec
mov
in
sub
jmp
xchg
fdivp
xchg
push
js
lahf
loopne
cmpsl
xchg
inc
popa
dec
push
test
pushf
xor
mov
mov
add
stc
pop
push
popa
popf
inc
add
inc
arpl
int
add
mov
jne
or
mov
jg
int
test
push
and
cs
add
mov
scas
into
jmp
mov
pop
xor
mov
mov
xchg
mov
scas
lret
dec
push
mov
test
stos
push
out
jae
inc
arpl
into
movsl
cmp
add
add
jnp
sbb
mov
jl
and
mov
fbld
fisttpl
push
sub
arpl
pop
push
push
lahf
cmp
jmp
pop
lods
inc
xor
add
mov
xor
or
push
push
iret
repnz
inc
pop
rcrb
mov
stos
jno
repz
and
notb
dec
das
or
pop
iret
loop
jo
dec
inc
mov
xor
div
leave
mov
lods
xchg
jnp
filds
jle
mov
sbb
mov
out
mov
fistpll
or
ja
push
pop
mov
xchg
orl
shll
repnz
enter
mov
xchg
xchg
dec
xchg
dec
jne
jg
jno
ss
sbbl
mov
mov
lret
mov
test
scas
adc
fsubrs
sbb
push
ret
push
xchg
push
pop
ret
loopne,pn
arpl
mov
fiadds
fst
xor
xchg
jmp
and
and
imul
mov
jg
sbb
aad
loope
out
add
pop
adc
sbb
loope
hlt
fidivs
pop
adc
mov
imul
adc
subl
filds
test
mov
sbb
addl
sub
cld
pop
mov
or
addr16
ja
sub
popa
lods
sbb
jb
hlt
cmp
dec
jecxz
and
xchg
addr16
clc
outsb
push
pushl
pushf
daa
xchg
test
ljmp
int
mov
push
adc
cmp
cmpsb
ficomps
xchg
mov
mov
jbe
scas
dec
shll
pop
mov
pop
cmovp
das
jb
subl
sub
sarb
in
push
pop
out
push
stos
xchg
pop
and
sub
sarl
into
test
pop
fcomip
adc
sub
cmp
in
or
push
daa
insl
movsb
pushf
and
in
into
sarb
ret
test
mov
pop
les
sub
jmp
mov
adc
cmpb
push
cmpsl
popa
adc
cmpsl
test
push
and
hlt
cmp
fs
pushf
ja
push
in
jge
test
je
addr16
shl
mov
cmc
mov
or
jg
and
inc
adc
mov
outsb
loope
push
data16
cmpsb
jle
sub
mov
hlt
shr
mov
cmc
pop
incl
mov
rcl
fwait
add
lret
xchg
push
mov
movb
cli
out
mov
mov
mov
fidivs
lcall
and
lods
push
push
and
ror
mov
push
shll
and
and
popa
xchg
mov
jle
inc
stos
push
out
dec
loop
add
loopne
sub
pop
and
loopne
aad
sbb
cmpsl
xchg
loop
lds
or
lcall
push
in
pop
or
movsl
pop
jle
rorb
icebp
je
ja
jns
xchg
xchg
mov
mov
je
notb
inc
push
and
mov
adc
xchg
out
sbb
addr16
mov
xchg
shlb
test
icebp
arpl
ficomps
and
jl
mov
stos
popa
stc
xor
jp
mov
mov
sbb
or
dec
std
inc
xchg
fsubrp
cmpsb
sahf
lock
inc
sbb
imul
aad
pop
in
dec
ljmp
lods
push
mov
cli
lret
dec
push
xor
pusha
or
int3
sbb
lea
and
imul
pop
mov
mov
xor
xchg
sbb
push
inc
dec
xlat
repnz
sub
inc
inc
lock
mov
mov
pop
mov
scas
iret
push
inc
push
mov
popf
mov
faddl
mov
lods
or
mov
dec
iret
rcrb
out
les
adc
ljmp
ficoms
mov
jg
ss
pusha
and
out
xchg
push
dec
out
push
fmul
add
pop
cld
fstpt
add
xor
test
sub
fdivr
fadds
iret
adc
mov
rorl
test
cmp
sbb
ret
and
cld
cmpsb
enter
imull
push
aam
sbb
out
push
pop
dec
rorb
les
and
and
in
adc
push
xchg
fsubrs
insl
stos
imul
jne
mov
xchg
mov
cld
and
cltd
rcl
cwtl
int
adc
inc
jp
pop
sbb
inc
mov
sbb
loop
aad
adc
sub
push
mov
movsl
stos
mov
repnz
pop
iret
add
mov
sbb
xor
inc
lahf
cs
xorl
or
ds
out
pop
add
addl
sbbb
xor
ficompl
je
stos
fists
iret
and
ljmp
mov
xor
fimuls
cmp
dec
ret
popf
xchg
pushf
jns
hlt
aam
sti
leave
cld
arpl
cld
movsl
subb
cmpl
pushl
test
cmpsb
add
cmp
repz
add
bound
sbb
shrb
sti
mov
and
add
fidivrs
scas
adc
mov
xchg
neg
bsr
add
divl
jmp
mov
negl
mov
xor
cmpsl
push
cmp
lds
cwtl
sahf
push
mov
mov
mov
push
shrl
mov
pop
inc
fwait
out
dec
jmp
mov
vsqrtps
push
and
arpl
cmpb
fildl
test
adc
or
jns
mov
ret
add
xor
aas
xor
imul
rcrb
in
rep
jle
pop
aas
daa
xor
push
fstpt
cmp
add
dec
test
ret
pop
and
mov
es
mov
andb
sub
ja
or
cmp
sub
jbe
xchg
or
sub
arpl
int
data16
repz
push
mov
jae
mov
xor
push
lods
add
enter
filds
inc
dec
addr16
push
leave
xor
add
lock
in
leave
adcb
enter
and
dec
add
push
dec
in
jmp
pop
cmc
mov
sarl
xor
push
cmp
out
push
push
ret
nop
pop
imul
mov
cmp
outsb
push
sub
cmp
pop
mov
addr16
fs
xchg
xchg
sbb
cmp
aad
outsl
xchg
and
push
or
push
sbb
xchg
test
mov
gs
pop
pop
pop
repnz
jge
aam
test
outsw
test
lods
and
or
pop
mov
or
jb
enter
popa
push
push
inc
push
popf
fiaddl
sbb
push
rclb
shr
dec
lcall
mov
mov
push
push
pop
add
dec
lea
or
pusha
push
xchg
dec
jmp
adc
leave
xor
lea
cmp
imul
outsb
add
mov
and
in
xchg
dec
adc
sbb
lock
sub
lahf
lds
and
and
sbb
cmp
jge
jae
mov
iret
dec
mov
stos
leave
cmp
cli
cltd
imul
sub
inc
jbe
dec
out
ja
sub
rcll
mov
sbb
push
jg
xor
inc
inc
idivb
repnz
dec
mov
sahf
xchg
jmp
leave
iret
xlat
shll
xchg
daa
pop
test
ret
mov
pop
bound
lods
test
pop
sub
pop
in
int3
and
and
mov
push
out
fdiv
test
imul
mov
push
gs
in
stc
cmp
jmp
sbb
pop
add
or
dec
cmpsb
stos
push
mov
adc
pop
sub
js
pop
xor
fimull
aam
stc
les
jle
sahf
push
lods
pop
or
cld
mov
adc
or
sub
jns
cmp
shll
in
enter
or
sub
pop
outsb
dec
jl
fwait
out
mov
sub
or
pop
mov
cmpb
in
sub
clc
int3
repnz
mov
aam
outsb
dec
fcmove
cmp
xchg
sub
cmpsl
ljmp
scas
cmp
fisttpll
mov
pop
add
jne
add
or
das
rsm
cwtl
fsubr
sbb
pop
data16
xor
xor
cmp
mov
mov
pop
pushl
sbb
push
and
pop
mov
out
movl
stc
shlb
addr16
cmpsb
xchg
pushf
and
or
icebp
clc
out
out
int
stos
xchg
cwtl
push
pop
cli
or
ficoml
or
cmp
xor
jne
xchg
and
loopne
lcall
cwtl
mov
add
mov
push
rolb
lcall
icebp
lods
lock
pushf
adc
or
pop
sbb
cli
or
shl
call
and
hlt
pop
fwait
jno
fcomi
xchg
es
jle
mov
jg
lret
scas
iret
jl
aas
mov
stos
je
lret
mov
jo
add
addr16
es
jle
adc
neg
xchg
or
add
stos
in
aad
stc
jge
xor
push
push
loopne
pop
or
test
cltd
sbb
repnz
fwait
cmc
rcrb
enter
push
test
addr16
out
lods
push
rclb
jmp
test
inc
adc
or
inc
push
mov
xchg
mov
aas
jge
ja
andl
outsl
inc
lret
xchg
sub
push
xor
ja
test
jmp
add
iret
fs
sub
aaa
mov
iret
fdivs
adc
cmpsl
xor
xchg
fisubrs
xorb
pop
mov
into
mov
push
cmp
cmpb
stos
fsubl
jo
cs
pop
fiaddl
shlb
movsb
and
in
mov
ss
dec
mov
jb
jae
jno
xlat
or
negl
cmc
test
insb
mov
fsubr
les
test
lahf
leave
lea
mov
lret
jmp
or
push
xchg
or
mov
add
jmp
femms
push
jae
iret
pop
frstor
clc
dec
aam
sarb
dec
pushaw
mov
cwtl
push
cltd
ljmp
jno
pop
shlb
ret
xor
sub
repz
arpl
aad
xchg
xor
cmpsl
or
mov
hlt
xchg
fstpl
push
mulb
imul
pushf
lret
imul
xchg
ds
sub
fcoml
push
add
pop
aas
inc
sti
stos
ja
sarl
stos
lea
lock
loop
xchg
add
fstp
ja
in
lret
push
push
add
rcrb
out
dec
cmp
das
jae
cmc
adc
sub
push
hlt
pop
xor
pusha
xor
xor
rcrb
ficomps
cwtl
fisttpll
and
call
add
lods
jle
or
xchg
rolb
mov
sub
pop
dec
aam
test
lea
pop
inc
xor
out
aas
movsl
sbb
push
insl
xor
sbb
mov
jnp
xchg
out
push
dec
or
xchg
jae
ds
mov
and
pop
fisubl
pushf
mov
pop
dec
cmp
lea
cmpsl
cmpsl
jp
xchg
fistps
test
xchg
lods
mov
addb
jmp
sub
popa
sbb
ret
fldlg2
mov
sub
jo
mov
add
psllw
or
adc
push
inc
sbb
xor
orl
ret
push
jb
in
sbb
lret
mov
mov
mov
idivl
cmpsb
test
fsub
lret
iret
ret
fisubrs
mov
aad
xchg
mov
les
cmp
or
ds
and
filds
sti
pop
mov
add
push
loopne
add
lods
mov
imul
xor
sub
inc
lret
xlat
sub
pop
gs
cltd
out
andl
mov
inc
jp
mov
lcall
or
shr
sbb
imul
out
std
jne
add
sbb
adc
jae
divb
xchg
pop
mov
push
lahf
mov
in
int
dec
mov
jbe
add
mov
push
lods
inc
aaa
push
notb
and
cmp
push
cltd
fwait
test
aam
test
addb
das
jno
push
aaa
fidivl
test
fsts
std
add
mov
rorb
cmp
sub
pop
jbe
mov
cltd
dec
enter
aaa
out
ljmp
fwait
adc
xchg
add
clc
inc
lods
in
xor
mov
adc
push
inc
xlat
sub
sub
nop
sbb
xchg
jnp
mov
not
dec
shll
xor
cmp
ljmp
movsl
mov
and
outsl
clc
fcoms
aaa
pop
ljmp
popa
and
and
outsb
mov
test
imul
push
incl
divb
jno
cmp
repz
fwait
mov
mov
pop
cwtl
aam
aas
pop
sub
adc
ljmp
cld
sub
in
nop
stos
sub
nop
cmp
mov
mov
lret
inc
xchg
adc
mov
fs
loop
add
jg
mov
and
mov
ja
addr16
sbb
bound
xchg
sub
mov
mov
sbb
cli
or
mov
jae
mov
and
lods
cmp
pop
mov
pop
filds
xor
xlat
xor
sub
imul
adc
es
sbb
out
pop
pop
mov
mov
pusha
lea
xchg
mov
and
fprem
mov
cmpsb
lahf
sbb
add
cmp
or
cmp
mov
je
pop
jnp
add
sbb
out
xor
xor
push
idivl
pop
std
cmpsl
pop
cmp
inc
sbb
mulb
pushf
fs
xor
test
xchg
ss
fildl
pop
push
mov
jle
enter
mov
cld
test
movsl
ret
mov
sub
cmp
pusha
pop
push
ljmp
pop
dec
jle
aam
sbb
bound
push
movsl
and
xchg
cmp
cli
int3
fwait
mov
xchg
xchg
cli
dec
mov
dec
test
lahf
push
mov
pop
xor
inc
int3
fwait
gs
cld
inc
lea
fisubrs
cmc
sub
sarl
imul
mov
mov
push
push
jl
iret
xor
pushf
or
push
and
pop
sub
jl
rcll
pop
sbb
out
popa
mov
cmpsb
sub
and
and
cmp
pushf
loope
scas
imul
dec
out
pop
mov
dec
cmp
fcoml
jb
int
aam
inc
sbb
ficoml
dec
pop
cli
push
sub
out
sahf
in
push
mov
aaa
inc
gs
jl
push
push
jnp
inc
sbb
sub
xchg
sub
push
xchg
push
mov
xor
imul
idivb
call
sub
shll
rcl
mov
mov
mov
add
xlat
mov
pop
fcoml
std
stc
cli
pushfw
dec
cmpsb
xor
movsb
loop
in
int3
leave
jns
adc
mov
push
xlat
mov
movsl
call
ret
xchg
and
inc
and
mov
insl
cmp
imul
xorb
mov
nop
pop
ret
inc
popl
and
enter
xlat
mov
inc
mov
pop
pop
pop
lea
xchg
add
mov
cmp
lcall
fistpl
push
or
and
mov
test
push
lods
and
push
outsl
push
loopne
lods
push
cmp
mov
cmp
cld
je
cs
in
mov
pop
insb
sbb
xor
scas
or
adc
jae
and
rorl
stos
fimuls
cmp
cwtl
xor
dec
das
lret
cmpsb
xchg
jo
ret
ss
adc
adc
stc
ja
pushf
sbb
pop
xchg
or
sar
popf
mov
iret
xchg
inc
xor
sub
ret
rolb
push
in
imul
frstor
lods
xchg
jl
lods
test
jge
sub
or
inc
loop
xor
cmc
jl
lds
bound
popf
lret
ds
mov
ret
mov
test
das
xchg
lahf
and
imul
daa
jmp
mov
in
sbb
mov
shr
out
push
ds
bound
xchg
js
push
cmpsb
roll
into
hlt
ret
inc
sub
adcb
xor
push
lret
shlb
lret
ror
into
ficoml
or
xor
sub
adcl
cltd
add
test
add
adc
ja
sahf
xchg
mov
cmpsl
negl
iret
pop
inc
xchg
xchg
clc
jne
dec
mov
repz
cmp
mov
test
cmpsl
or
outsl
push
mov
mov
sti
insl
notb
insl
jae
repnz
icebp
clc
mov
outsl
pop
sub
ljmp
mov
outsl
xor
xlat
push
cmp
test
and
pop
cmp
mov
loop
jbe
mov
xchg
test
dec
sbb
test
jno
fisubs
adcl
mov
mov
aaa
add
int3
mov
mov
outsl
xchg
nop
rcrl
iret
push
or
imul
mov
fs
push
adc
stos
mov
stc
loopne
in
sub
xabort
fdivrl
mov
roll
dec
rcrl
inc
in
ja
fwait
jno
mov
sbb
insl
adc
js
loope
mov
imul
cmp
lock
pushf
rcr
dec
mov
int3
pushf
imul
sbb
pop
daa
out
push
mov
jae
xchg
xchg
fcompl
in
inc
arpl
scas
mov
and
mov
adc
shrl
add
test
cmpl
mov
les
jns
int3
imul
mov
ljmp
sub
xor
and
dec
and
push
and
inc
jle
mulb
adc
lret
sbb
pop
jp
mov
xor
fs
cmp
jecxz
dec
fsubs
add
cmp
dec
fisubrl
cmpsl
cmp
mov
inc
gs
shl
and
xchg
mov
mov
aam
jno
mov
xchg
push
xchg
leave
mull
xchg
jns
jecxz
inc
inc
inc
test
add
pop
jb
das
mov
mov
cmp
mull
rcr
imul
popa
jle
push
cmc
test
dec
jo
mov
mulb
cli
and
jo
loope
mov
sbb
sub
jmp
jbe
adc
add
movsl
jne
adc
dec
xchg
inc
sbb
es
sarb
mov
jmp
bound
adc
cmpsl
sub
iret
cwtl
xor
cmpsl
shrl
insb
xchg
add
les
and
cmp
cmc
xchg
sarl
stos
jbe
popf
sub
std
sti
mov
sub
xor
mov
mov
fdivrs
dec
movb
mov
fistpl
and
cli
push
xchg
aaa
dec
mov
iret
movsl
cmp
stc
fdivrs
cmp
sti
and
and
aaa
add
mov
fdivr
in
lods
dec
data16
sub
pop
push
imul
sti
repz
daa
inc
mov
sarl
add
inc
push
xlat
ljmp
add
xchg
cmp
jno
xchg
xchg
or
adc
ja
mov
leave
adc
stos
jge
jge
mov
insb
jecxz
adc
xor
leave
mov
imul
shll
arpl
xlat
push
std
insb
rcrb
cmp
jmp
sub
jmp
inc
call
pop
mov
lret
negl
movhps
add
das
out
les
xor
and
and
jnp
sahf
mov
dec
je
cmp
fs
mov
xlat
pop
cmp
fcmove
fnstenv
xlat
push
dec
jge
push
rcll
mov
stos
fs
dec
inc
sub
mov
callw
out
les
rep
ja
jne
mov
push
ret
jo
das
add
popf
jns
xchg
shlb
inc
and
dec
cwtl
adc
out
push
xchg
push
push
mov
mov
cmp
and
pop
pop
stos
aam
xchg
push
sub
cmp
and
shrl
aas
pop
into
cwtl
lods
xor
sarl
int3
ret
in
cld
lret
mov
mov
pop
aam
rcrb
mov
in
es
icebp
add
inc
mov
lcall
out
jg
ja
xor
add
mov
inc
enter
adc
pusha
dec
rol
inc
xchg
loope
pop
in
fwait
stos
aas
outsb
xor
add
add
jbe
mov
mov
xor
nop
mov
shrb
sbb
mov
les
adc
pop
mov
inc
push
jmp
add
mov
pop
mov
push
aaa
xchg
das
call
mov
jg
xchg
mov
or
pop
stos
dec
xchg
xor
inc
addr16
jns
mov
aam
sbb
imull
xor
subb
sti
push
jb
rclb
adc
aad
test
dec
adc
pop
dec
insb
enter
jecxz
mov
jg
imull
xchg
repnz
add
pusha
fisttps
pop
push
sub
outsl
adc
mov
mov
leave
popa
test
push
call
shll
cmp
and
dec
pop
popf
and
mov
sub
ja
mov
outsb
fcoms
call
shll
cli
pop
adc
jb
push
and
fcomps
arpl
out
mov
sub
ljmp
fisttpll
je
ret
test
mov
xor
add
adcb
adc
xchg
xchg
or
enter
sti
pop
inc
mov
ss
push
nop
movsb
scas
inc
dec
pop
dec
jmp
mov
fnstsw
cmpsl
cltd
leave
jbe
push
fsubl
mov
loopne
dec
adc
imul
sti
arpl
jge
xor
push
jno
in
jmp
jmp
cmp
popf
sbb
inc
idivl
jnp
adc
mov
push
je
mov
scas
xchg
and
aaa
inc
jge
sub
xchg
mov
sub
das
roll
and
mov
mov
shlb
xorl
xchg
inc
in
sub
xor
push
mov
into
xchg
sbb
lock
xchg
and
mov
in
pop
iret
push
in
outsb
mov
pop
add
mov
in
cmp
lds
lods
popa
or
fildl
icebp
jle
add
lcall
ss
mov
dec
and
mov
push
lods
out
adc
mov
inc
cmp
in
aam
xchg
mov
jns
mov
jns
and
mov
push
jecxz
shlb
fdivrl
mov
or
call
scas
jge
adc
mov
out
sarl
movsl
arpl
pop
push
or
push
shll
notb
jnp
xor
xchg
xchg
pop
cmp
cli
jmp
adc
movsl
mov
lcall
flds
aas
test
out
testb
lcall
mov
and
cmpsb
jb
nop
sahf
mov
test
dec
adc
fistpll
ret
xchg
ret
outsl
pusha
sbb
movsb
mov
dec
pop
ds
stos
out
mov
push
dec
sbb
dec
or
sbb
push
jb
push
inc
sti
scas
jno
in
imul
rcrb
gs
incl
fidivl
mov
pop
mov
and
shll
fs
int
lds
shl
mov
push
insl
sbb
sub
test
loopne
lock
lcall
stos
dec
pop
push
sbbb
or
ror
subb
cmp
cmp
dec
mov
lahf
sbb
mov
cltd
outsb
mov
xchg
mov
sar
and
pop
movsb
push
or
xor
test
cmpsl
jp
xor
xchg
or
jno
mov
fadds
xor
mov
mov
cld
push
jmp
cwtl
sar
clc
and
xchg
icebp
rcll
clc
lock
push
ljmp
aad
push
fstp
adc
mov
dec
test
test
cmp
sti
rcl
aaa
xor
movsl
mov
es
ret
inc
in
repnz
pop
adc
iret
dec
aad
sahf
imul
push
xor
sub
and
inc
aad
js
sub
lahf
fstpl
lea
loope
lret
mov
int
pop
cli
push
jmp
cmp
mov
jmp
pushf
mov
or
lret
aaa
scas
xor
lret
ret
movsb
andl
adc
imul
cmp
outsb
adc
fldt
or
sbb
insb
mov
fisubrl
jmp
ja
xchg
mov
insl
add
and
add
lcall
push
shlb
mov
fcomi
xchg
or
xchg
ljmp
pop
push
push
popa
aam
jmp
pop
fadds
jecxz
dec
add
mov
lcall
push
cmpsb
push
mov
cmp
cmpsl
lds
inc
test
fcompl
int
pop
roll
sbb
jb
jbe
leave
push
repz
xchg
or
push
inc
fldcw
aam
xor
cmpsb
cwtl
leave
sub
adc
mov
fadds
add
aas
enter
pop
push
fisttpll
cltd
or
das
pushf
pop
scas
mov
mov
add
inc
or
test
and
cmp
fisttpll
push
adc
push
popl
cmc
cltd
sbb
pop
dec
sub
cmp
inc
cld
repnz
pushf
push
xor
loopne
loopew
jae
push
mov
repz
int
jb
jmp
lea
ret
mov
xchg
pop
faddp
pop
sbb
mov
mov
xchg
bound
bndstx
push
sbb
dec
daa
nop
hlt
scas
xchg
xchg
cmp
mov
scas
testl
repz
ljmp
lret
dec
mov
push
ljmp
push
fwait
cld
mov
clc
jmp
cli
mov
hlt
fidivrs
xor
popa
pop
adc
pop
je
mov
das
mov
fisttps
cmp
cld
add
clc
xchg
fiadds
in
xchg
sbb
ds
int3
mov
jno
mov
add
nop
insl
add
add
jae
es
or
jno
jbe
push
add
mov
shlb
test
mov
mov
repnz
or
add
adc
mov
mov
stc
and
jns
inc
mov
js
xor
stos
xor
mov
lock
in
repz
and
push
pusha
loop
jae
xlat
add
inc
pop
aad
aad
mov
aam
pushf
add
in
push
fwait
adc
jp
bswap
xchg
mov
sarb
icebp
inc
hlt
or
mov
enter
or
aam
les
mov
mov
add
lock
mov
adc
lret
leave
cmp
mov
test
adc
push
push
lcall
bound
mov
inc
imul
ficomps
pop
inc
push
rcrl
clc
jae
mov
mov
and
adc
cmc
pop
fs
lock
xor
dec
mov
xchg
inc
pop
sub
int3
xchg
mov
out
dec
je
test
js
fcoml
rcl
ret
cmp
sbbl
bnd
xchg
movsb
sbb
mov
mov
daa
lcall
dec
push
jmp
push
or
ljmp
jl
mov
pop
cmovge
ja
xchg
shlb
add
stos
pushf
sbbb
test
sbb
lret
in
inc
sbb
jmp
sbb
fadds
sarl
out
dec
das
pushf
cmp
pop
ds
in
adc
shll
pop
sbb
adc
andl
scas
jle
test
shll
inc
repnz
sbb
hlt
xor
pop
in
dec
cmp
lods
fdivs
cmp
sub
sbb
or
jb
add
xchg
test
aas
push
fs
fcoml
adc
fcomp
sbb
mov
jp
mov
push
mov
or
js
mov
adc
adc
cmp
adc
jno
loopne
xor
add
push
pop
sahf
inc
fsubs
inc
mov
pop
inc
pop
mov
pop
lcall
cmpb
and
dec
sbb
outsl
mov
sub
jae
repnz
mov
inc
in
lds
add
fsubrp
adc
lahf
loop
arpl
xchg
or
movsb
mov
and
cmp
and
daa
in
mov
les
pop
pop
dec
sbb
loopne
cs
push
add
jl
sar
cmpsb
fmull
or
add
xor
dec
cli
das
adc
mov
sub
out
xchg
xor
insb
cmp
mov
arpl
dec
scas
int
scas
mov
pop
jg
mov
mov
push
mov
popf
and
sahf
mov
mov
loopne
dec
adc
stc
mov
pop
lods
lds
test
adcb
xorl
dec
adc
push
div
idivb
xchg
mov
xlat
movsl
pop
dec
call
push
addr16
outsl
sub
cmpsb
ljmp
stos
mov
mov
mov
icebp
mov
pop
loop
push
imul
or
adc
pusha
ja
add
aam
gs
push
shlb
jns
push
push
push
pop
push
inc
test
stos
push
das
or
mov
xchg
into
push
dec
pop
inc
push
pop
ret
push
inc
or
cmp
popf
daa
dec
pop
in
sbbl
xor
dec
inc
fnstsw
cmpsl
push
mov
call
jae
mov
mov
adc
push
jbe,pn
inc
sahf
pop
push
and
ret
pop
gs
ret
pop
pushf
iret
sahf
dec
pop
xchg
repz
and
and
push
inc
movsl
cmp
ror
std
shll
leave
and
push
sbbb
fstl
psadbw
fdivs
clc
cmp
add
scas
xor
pop
aas
leave
std
fidivrl
fdivrs
in
mov
fcoml
sub
inc
mov
pop
pushl
adc
ja
mov
gs
rorl
jns
pop
lds
sahf
xlat
xlat
out
cmpsb
push
nop
insl
dec
hlt
imul
int3
sbb
ss
cmp
aad
push
cmpsl
sub
sbb
inc
push
aam
dec
add
and
fucomip
xchg
jno
and
outsl
and
pop
test
bound
sbb
clc
and
fadds
shl
call
imul
js
inc
lahf
dec
js
dec
filds
pop
andl
sub
jns
aas
inc
rorl
add
xchg
adcb
stos
cmp
jl
fcompl
lcall
jp
sub
movsl
mov
cld
mov
mov
sbb
mov
scas
ss
inc
or
add
mov
jecxz
into
out
xor
add
jp
lahf
or
push
mov
mov
mov
mov
mov
xchg
out
rcrl
adc
mov
jp
push
xor
jmp
int3
lahf
mov
pop
ljmp
or
arpl
push
mov
inc
out
repnz
call
into
sub
cmp
ss
aas
je
xchg
xor
sbb
sub
dec
sarb
adcb
adc
xorb
orb
pop
icebp
adc
mov
das
cwtl
inc
fdivl
mov
sbb
lods
jbe
pop
imul
stos
pop
cmp
mov
push
dec
test
insl
shrb
jmp
pusha
pop
push
sbb
push
mov
test
in
cwtl
adc
mov
pminub
xchg
loopnew
jecxz
outsb
inc
xor
je
add
sbb
mov
subb
xchg
addr16
arpl
nop
outsb
sbb
dec
mov
push
dec
lods
call
cmp
imul
shll
cmp
pop
dec
jae
leave
cs
dec
fldt
aaa
outsb
sub
sbb
mov
jb
mov
cltd
dec
pusha
negb
mov
fucom
dec
mov
incl
inc
bnd
push
dec
je
cltd
mov
pop
mov
add
test
aas
inc
repz
test
push
sarl
push
adc
pop
lahf
xchg
test
push
mov
aam
inc
pop
sbb
mov
jecxz
push
mov
lock
mov
cmp
cwtl
movsb
and
mov
jle
sbb
fs
shll
jo
or
pop
sub
icebp
dec
push
fadd
mov
and
xchg
and
shr
adcl
push
insb
rcll
test
negb
xchg
lret
xchg
cmp
insb
cmp
call
mov
push
iret
ficomps
test
js
ja
mov
push
cs
cltd
popf
pushf
xchg
and
ficompl
mov
insb
adc
jns
outsl
adc
mov
idiv
inc
test
sbb
sub
push
adc
rcl
xchg
xchg
iret
movsb
movsl
sub
xor
ret
dec
jl
lea
or
mov
sub
out
out
test
addb
cmc
lock
push
roll
dec
lahf
mov
scas
jne
fnstcw
loop
mov
dec
push
fxtract
shll
mov
xchg
rclb
dec
add
lods
dec
ljmp
insl
and
mov
jge
cmp
jl
and
cmpsb
mov
jmp
aas
mov
push
xchg
mov
jo
pop
jp
or
xchg
out
push
push
stos
jns
mov
and
pop
cmp
lock
les
faddl
mov
push
pop
dec
movsb
pop
mov
mov
imul
addl
and
xor
mov
or
mov
add
adc
mov
mov
ret
push
pop
jno
add
jp
push
popf
test
das
movsl
sbb
and
inc
jp
mov
push
add
subl
mov
and
enter
xchg
lods
test
cmpb
fucomi
jbe
fldl2t
loopne
sbb
outsl
gs
cltd
pusha
fimuls
and
xchg
push
ljmp
mov
or
sub
addr16
and
sub
mov
rol
or
jae
xor
inc
pop
cmpsb
cmc
mov
push
xor
arpl
jg
inc
pop
sti
rcr
loope
test
addr16
adc
push
mov
bound
insl
fisttpl
and
mov
add
ljmp
out
and
inc
xor
lret
sbb
sub
test
add
rorb
in
pop
and
imulb
mov
pop
js
enter
lods
and
cli
repnz
adc
loop
lret
in
dec
push
push
ret
lret
pop
dec
and
negl
test
mov
out
push
std
sbb
adc
sub
daa
adc
insb
lock
cmp
push
nop
inc
pop
jmp
in
and
lods
sbb
insl
xchg
in
repnz
and
pop
or
mov
adc
sub
jns
ds
push
outsb
push
xlat
adc
cmp
jb
faddp
mov
in
push
insb
dec
jae
insl
push
enter
fldl
andl
mov
jns
leave
hlt
addb
adc
mov
mov
xor
es
pusha
push
add
push
sarl
pop
inc
cmp
jle
loope
sub
push
imul
mov
ja
test
jmp
adc
mov
cmc
stos
mov
add
inc
mov
add
cli
pop
pop
fstl
fists
xchg
sti
mov
arpl
xlat
test
sub
loopne
add
xchg
fwait
nop
jle
std
xchg
test
fwait
mov
adcl
pushf
adc
loop
cmp
cs
push
jg
iret
bnd
inc
repnz
pusha
clc
fdivs
sbb
mov
jg
adc
test
or
inc
adc
imulb
test
pop
push
shl
imul
les
mov
or
fcoms
js
insl
jmp
nop
pop
adc
sbb
stos
pop
add
dec
dec
add
dec
out
add
in
popa
jmp
aad
cwtl
dec
fsts
mov
jecxz
jno
jg
sahf
mov
into
jp
xlat
xchg
xor
dec
or
test
sub
mov
mov
leave
xlat
lcall
jg
adc
push
cmp
out
call
ficoml
add
mov
mov
mov
insb
shl
push
lret
or
cld
jecxz
rorb
imul
popa
pusha
push
pop
and
mov
cltd
pop
sub
leave
aad
push
xchg
push
insl
sbb
test
pop
dec
loop
ja
xor
arpl
aad
xchg
outsl
dec
pop
jp,pn
sbb
push
xor
sbb
push
add
sbb
sbb
mov
adc
shlb
lock
xor
leave
fwait
div
cmc
lahf
call
fcompl
fmul
pushf
shr
stos
negb
pusha
xchg
and
stos
ja
icebp
xchg
loope
or
xchg
jnp
mov
mov
or
cltd
psubw
bound
fldenv
orl
add
lock
push
aaa
push
insl
xchg
push
fs
movsb
test
mov
xchg
bound
xchg
xchg
jo
mov
mov
xchg
jae
ljmp
sub
subb
clc
sub
bound
setp
jge
shlb
mov
fldt
fcomip
mov
loope
mov
jge
test
icebp
xchg
jl
push
push
imul
cs
push
pop
lret
add
cli
repnz
fwait
sahf
inc
cwtl
lods
stos
je
cmpsl
pop
enter
lcall
je
pop
daa
cmpsl
daa
cmp
imul
jae
mov
ljmp
mov
xor
xor
stos
leave
xor
daa
fildl
mov
insb
mov
mov
jmp
fadds
jno
pop
aad
arpl
inc
jno
cmc
mov
int
mov
push
sbb
test
xchg
jg
iret
cmc
pop
pop
fs
cmp
cwtl
xor
test
mov
imul
popf
pop
sub
bound
pushf
in
lea
loope
enter
xchg
push
jecxz
add
mov
dec
stc
in
cmp
lods
clc
add
sbb
inc
hlt
das
nop
out
ficompl
jg,pt
pop
dec
jb
adc
cmp
in
stc
test
jecxz
jge
and
aam
mov
mov
aas
xlat
lret
stos
push
popf
aaa
lea
xor
adc
xchg
pushf
mov
mov
mov
inc
xchg
inc
repnz
push
mov
xlat
ret
loope
gs
jp
jp
lea
outsl
or
shr
enter
ficoml
jl
sarb
dec
adc
cmc
lret
xlat
icebp
adc
mov
push
insl
enter
inc
adc
or
or
and
mov
dec
enter
js
lock
clc
jge
dec
sub
fcomip
add
popa
dec
in
cmpsb
adc
mov
out
xchg
dec
cmp
shrb
lahf
xchg
xor
rcrb
push
xor
mov
pop
loope
dec
dec
into
inc
scas
pop
dec
aad
fwait
lret
clc
pop
dec
aaa
jl
or
in
test
jo
lahf
out
mov
dec
jb
call
lahf
dec
fwait
sbb
cmp
dec
testl
std
and
dec
mov
lods
aas
pop
sahf
cli
xchg
hlt
out
mov
cmpsb
cmp
stc
sbb
shlb
lcall
fcompl
xchg
out
xchg
cmp
sub
or
mov
int3
cwtl
mov
mov
add
sbb
mov
mov
cmp
and
daa
scas
movsb
xchg
lret
jl
addr16
mov
addr16
incb
test
pop
test
xlat
into
insl
rcrb
cmp
inc
or
xchg
push
mov
mov
mov
pop
shrl
sbb
xchg
add
sub
fimull
xchg
mov
imul
sbb
or
jne
xchg
inc
mov
sub
pop
mov
das
push
push
or
mov
cmp
cmp
jg
fnstcw
add
ja
shll
adc
jo
aaa
mov
cwtl
jl
nop
mov
mov
xchg
or
sbbl
les
mov
lock
rcll
and
test
in
repz
add
cli
cmp
pop
mov
ss
pop
or
and
mov
mov
mov
mov
jb
mov
jp
negb
fndisi(8087
outsl
lods
icebp
xor
arpl
sbb
and
mov
mov
sub
lret
jne
sarl
es
ret
dec
sarb
mov
push
outsw
movsl
or
and
shrb
out
test
test
and
xchg
call
and
ror
mov
movsl
call
mov
cld
repnz
xchg
xchg
rcrb
lds
cld
or
daa
and
pop
mov
mov
dec
add
fcompl
cli
arpl
and
test
adc
fbld
icebp
inc
lahf
xchg
mov
in
cmp
lds
and
sbb
pop
fstpt
in
pop
xchg
inc
stc
ss
clc
add
cwtl
add
sub
sub
lea
outsb
adc
in
sub
xor
loopne
xchg
mov
sub
mov
mov
stc
jmp
ss
adc
rolb
hlt
xor
mov
lds
mov
repnz
hlt
adc
movl
loope
stos
or
adc
push
repz
jbe
mov
and
cld
push
rol
push
mov
inc
sar
jg
or
les
cmp
jle
mov
adc
jecxz
rclb
mov
enter
bound
decb
fs
mov
cmpsl
sub
or
xchg
imul
scas
jg
xchg
mov
aad
inc
and
xchg
xor
mov
inc
pop
scas
imul
adcb
or
jne
or
int
mov
cwtl
hlt
iret
inc
insl
mul
pop
test
and
or
loopne
out
mov
cmp
std
pop
sub
dec
ja
or
push
shll
ljmp
sub
pop
jg
insb
sti
lahf
mov
xor
sbb
cmpsb
stc
fimuls
inc
xchg
notb
push
jmp
stc
rolb
xchg
aam
pop
pop
je
xor
ds
iret
mov
repnz
aas
lock
cmp
xchg
test
cmpsb
jbe
dec
jp
mov
imul
rcrb
jg
mov
push
or
xchg
mov
cltd
fwait
push
xor
mov
stos
hlt
xchg
inc
jg
imulb
mov
fimuls
fldenv
pushf
xchg
mov
int
jb
mov
sbb
cmpsl
push
jmp
clc
add
sahf
mov
xor
sub
test
and
outsb
sbb
cmp
fisttpll
pop
aad
mov
lret
shll
icebp
add
out
or
cli
sbb
push
push
inc
mov
stos
xor
aas
pusha
test
imul
add
and
lret
inc
adc
push
dec
inc
addr16
jb
stos
and
ss
data16
mov
movsb
jl
loopne
jns
pop
sbb
enter
and
movsb
divb
mov
lock
jmp
xor
cli
repz
pminub
lret
xor
mov
adc
movsb
pop
cmpsl
pop
add
test
shlb
mov
adc
data16
dec
dec
stc
pop
mov
mov
aam
mov
pop
jmp
inc
dec
shl
roll
daa
icebp
je
scas
aad
mov
xchg
pop
repnz
dec
test
pop
xor
call
cmpsl
inc
jecxz
xor
push
jg
cmp
mov
ficompl
jmp
fdivr
and
and
jmp
cmp
jns
sarl
aad
cmp
mov
mov
rorl
xchg
inc
adc
xor
out
adc
ss
lcall
outsb
push
insb
ja
incl
scas
rcr
inc
pop
in
jmp
inc
sar
imul
jmp
inc
out
mov
fs
int
pop
dec
outsl
repz
jnp
inc
out
outsl
mov
ds
mov
mov
xchg
and
pop
mov
sbb
outsb
fcoml
jmp
das
pop
adc
add
sti
jne
mov
std
pop
adc
mov
xlat
dec
fidivs
push
add
xor
push
jo
jo
int3
add
lea
mov
xchg
dec
mov
shll
add
das
mov
push
add
jno
xlat
push
xor
add
sub
popa
fwait
pusha
mov
pop
insl
jge
push
adc
cmp
imul
inc
addr16
mov
mov
pop
js
xor
scas
inc
je
iret
popf
push
mov
xor
xlat
daa
shrl
ds
xchg
jg
dec
pop
into
sahf
gs
inc
push
inc
push
cltd
cld
in
in
iret
fdivl
inc
sti
adc
stc
push
and
mov
stos
repnz
out
iret
mov
push
pop
addr16
sbb
sub
ja
sti
add
push
pop
ds
cmp
push
mov
hlt
cs
mov
ret
dec
jo
outsb
cmc
dec
jns
loopne
fmuls
mov
add
test
stc
pop
inc
insl
shlb
mov
popa
ret
sub
sub
mov
mov
rolb
icebp
mov
ret
inc
adc
arpl
sub
aad
cld
sbb
in
fisttpll
pop
ljmp
dec
mov
inc
jl
cs
stc
or
push
add
xchg
xor
addr16
leave
sbb
pop
fwait
iret
addb
xor
xor
insl
sbb
notb
lahf
fldcw
ds
call
mov
cmp
add
dec
cmp
daa
dec
lahf
in
js
pop
adc
cmp
pusha
jmp
adc
iret
mov
mov
fcomps
inc
dec
popl
dec
sub
movsl
push
imul
inc
rorb
movsbl
inc
rcrl
adc
mov
push
mov
mov
stos
mov
test
addb
mov
push
fwait
negl
pop
rorl
or
jb
push
jae
mov
leave
xchg
sbb
std
imul
ds
pop
stos
add
lds
test
sbb
mov
aaa
xor
add
xcrypt-ofb
cmpsl
lods
and
scas
rcll
jge
xor
xchg
pop
mov
xchg
cmp
ss
jecxz
push
pop
mov
or
fcmovnu
clc
or
mov
xchg
and
sub
sti
mov
cmpsl
sarb
int3
and
jl
cwtl
loop
mov
stc
cmp
inc
adc
mov
pop
inc
paddusb
outsl
ljmp
jge
out
inc
lahf
mov
cmc
lock
mov
das
dec
xchg
cli
jbe
mov
sub
pusha
ljmp
xchg
js
fnsave
mov
jge
inc
pop
hlt
pop
xor
jle
das
or
movsl
rcll
mov
sbb
push
int3
jae
bound
dec
xchg
sti
mov
lods
orb
pop
imul
pop
jne
pop
leave
fisubs
xor
cmovg
popa
js
pop
aaa
adc
mov
xchg
out
lcall
ljmp
jae
mov
cmp
popa
xchg
push
movsl
scas
adc
repz
fsubrp
jmp
gs
jne
cmp
std
in
andb
rclb
cmp
out
daa
out
jo
lods
add
xlat
pop
mov
inc
mov
mov
movl
movsb
rorl
push
int
ret
sbb
mov
inc
hlt
inc
mov
jb
xchg
jbe
lods
xchg
jo
and
stc
hlt
cmpsb
xchg
add
loop
xchg
sbb
pop
shll
imul
xchg
bound
or
jno
aam
arpl
push
inc
mov
cmc
dec
cld
or
int3
or
lock
pusha
out
sub
sub
or
lahf
lock
lea
push
jmp
add
in
sub
push
jmp
movsb
nop
clc
cmp
lds
sub
inc
les
xchg
addr16
mov
lds
ret
dec
cwtl
popa
cmp
js
jne
bswap
mov
js
cli
loop
sbb
mov
dec
out
mov
or
xor
mov
cmc
inc
in
dec
adc
mov
ljmp
inc
cs
mov
sbbl
aas
ljmp
int3
addr16
fiaddl
sahf
lods
inc
insb
mov
nop
cmpsb
mov
adc
dec
std
pop
or
mov
sub
pop
mov
aad
call
mov
sahf
sbb
adc
adc
mov
fdivs
cmc
pop
inc
mov
push
pop
push
or
push
mov
and
lods
jmp
cs
pushf
shlb
xor
imul
loope
pop
loopne,pn
inc
fstps
icebp
mov
loopne
adc
out
pushf
stos
mov
fcmovb
push
xchg
push
and
stos
insl
ja
push
aas
fdivl
mov
outsl
rcl
es
lods
shrl
jle
in
cmc
loope
into
add
lock
pusha
inc
mov
popf
sbb
mov
or
or
fsubs
cwtl
pop
and
scas
and
out
or
add
jg
and
mov
jmp
adc
je
sub
insb
pop
in
out
rolb
ffree
jecxz
arpl
sbb
dec
xchg
sub
shlb
and
mov
cli
cmp
push
sbb
repz
push
mov
fucomp
pop
cmp
divl
inc
and
es
cmpsl
bound
pop
xchg
and
test
mov
mov
dec
pop
xor
test
test
imull
xor
pop
mov
mov
mov
fsts
cmp
pop
and
inc
push
jb
jnp
fidivrl
mov
lea
int
jno
or
test
xchg
ss
dec
and
nop
scas
fcmove
mov
and
fisubs
mov
add
in
xor
int
ds
adc
mov
dec
fcoms
add
popa
xor
inc
sub
rolb
adc
imul
call
jmp
mov
xchg
sti
jp
sbb
mov
pop
jno
out
cld
test
sbbl
popfw
int3
or
ret
push
push
xor
andl
push
jp
jge
shlb
addr16
pop
cmp
or
pop
daa
jg
dec
ret
mov
shrl
movsl
add
add
pop
jb
sbb
and
dec
adcl
ja
in
inc
test
pop
pop
fdivrs
mov
mov
push
adc
pop
nop
jge
add
mov
xor
dec
ljmp
imul
les
icebp
push
dec
pop
aas
sub
inc
imul
insb
pop
lret
faddp
testl
lds
pop
into
imul
sub
negb
pop
jl
lahf
and
pop
xchg
xchg
and
push
ret
and
fdivr
or
gs
xchg
xchg
test
xor
lcall
sub
pop
sar
mov
inc
lahf
idiv
aas
movsb
imul
and
stc
bound
push
or
in
icebp
je
xchg
dec
add
pop
inc
push
cmp
mov
cmpsb
insb
outsb
lds
ljmp
aad
cs
popa
xchg
addr16
std
mov
dec
mov
or
add
sub
xlat
sahf
dec
mov
sub
aam
and
lcall
dec
jp
out
and
pushf
jnp
stc
pop
sub
mov
int
insb
jae
mov
lret
xchg
sub
aad
repz
stos
xchg
add
push
inc
sub
jb
cmpsb
lcall
repnz
mov
push
mov
mov
fs
jmp
cmp
fisubl
sub
sti
jg
ja
imul
dec
and
shlb
mov
cmp
push
xchg
cld
jne
push
and
sub
aad
movsl
cmp
adc
mov
in
adc
ret
mov
xchg
repnz
sbb
jp
and
mov
jmp
sbb
mov
call
push
sti
add
xor
mov
push
xor
fbld
in
test
insl
cli
jne
cmpsb
mov
ror
inc
push
fst
iret
addr16
dec
pop
xorb
notb
xor
sbb
rcrb
mov
dec
jmp
outsb
mov
pop
xor
inc
push
pushl
inc
sub
cld
fwait
int3
cmp
xor
lea
mov
jno
subb
and
or
xchg
mov
adc
test
and
fldt
push
add
pop
and
adc
dec
push
stos
into
idivl
xor
ds
out
out
adcl
test
movsl
scas
mov
sarl
jecxz
pop
push
mov
cs
push
fldcw
das
test
xor
out
pushf
mov
clc
shrb
fs
es
enter
jmp
enter
xchg
push
mov
scas
xlat
inc
imul
popa
add
push
shl
xor
xlat
les
fidivl
mov
mov
hlt
xchg
jp
enter
xchg
or
outsb
push
jg
test
lcall
out
jno
cmp
lret
jno
and
sbb
stos
ljmp
dec
cmp
xor
dec
lods
aaa
inc
cmp
das
pop
jns
pop
gs
xor
mov
imul
cmpsl
push
pop
push
cmp
jb
xchg
push
in
push
movsl
sbb
jnp
movsl
adcl
xchg
popa
je
mov
cmp
lret
out
stc
jbe
loop
imul
js
jle
cld
cld
add
movsb
out
add
xor
and
push
shlb
aad
push
lret
les
loope
jmp
adc
xor
adc
ja
dec
aas
xor
cmpsb
lret
arpl
daa
add
or
cltd
xorl
mov
imul
fs
add
jl
sbbl
fistpl
mov
mov
pop
push
arpl
inc
sub
adc
cmpsl
movsl
outsl
mov
rep
sub
mov
pop
sub
cmp
inc
aad
mov
push
mov
rorl
jge
ret
pop
mov
cmp
stos
mov
mov
cmpsb
inc
stos
imul
fcoml
xchg
jno
cli
ss
mov
xchg
das
lret
stos
xor
sbb
jo
cmp
or
mov
shr
jnp
popf
jge
mov
cmp
scas
add
inc
sbbl
insl
sbbl
daa
insb
test
pop
cmp
mov
aaa
rorl
mov
sbbb
xor
ret
lret
jg
mov
les
dec
rcr
testl
pop
insl
ljmp
int
shll
repz
cmp
arpl
pop
in
dec
xlat
decb
or
addr16
or
fisttpl
sbb
jmp
das
loopne
add
and
push
push
jns
sarl
cmpl
jbe
xchg
ret
inc
mov
cmp
rcll
addr16
jg
jl
push
inc
ret
aam
cmp
pop
push
cltd
sub
sbb
adcb
int
fisubrl
pop
cmc
xor
gs
xchg
mov
and
xchg
or
or
jo
push
xor
test
xchg
jp
pop
negl
scas
fidivl
or
rcl
cs
cmp
xor
dec
pop
call
fwait
mov
fdivl
aad
and
pop
pandn
and
lds
stc
std
push
xchg
sahf
jb
pop
add
mov
jnp
test
into
je
test
iret
pop
jp
pop
push
mov
out
cmp
and
mov
inc
movsl
push
cs
inc
clc
lods
jge
pop
xchg
dec
jg
lcall
aam
sub
xor
mov
xor
inc
jb
shll
mov
jb
cmpsb
pop
cs
sbb
fiadds
lret
scas
jmp
inc
ret
cmc
addr16
cmp
daa
fsubrs
repz
pop
outsb
ljmp
fsubs
pop
add
inc
les
loope
jae
adc
sahf
stos
cmp
test
stc
lods
scas
lea
mov
xchg
dec
pushf
inc
test
int
push
hlt
into
xor
call
stc
xchg
iret
icebp
cwtl
scas
out
push
cmp
or
push
xchg
pop
test
jae
clc
sub
add
notb
or
sbb
dec
std
pop
fmuls
xchg
and
or
dec
push
push
push
arpl
xor
mov
mov
ret
inc
pop
sti
and
pop
scas
scas
aaa
adc
stc
inc
jecxz
mov
ljmp
push
and
sbbb
scas
mov
inc
dec
dec
pop
fbstp
xor
insb
cmp
pushf
popf
test
adc
push
pop
push
outsl
mov
test
xor
jno
ret
push
xchg
icebp
andb
xchg
out
loop
sub
loope
sahf
and
mov
cmp
jns
add
test
scas
xor
movsb
gs
or
dec
xor
loop
repz
mov
jnp
dec
ret
movsl
rclw
loopne
mov
xchg
mov
sahf
dec
scas
in
pop
xor
stos
stos
insl
push
pop
dec
lahf
cs
sbbb
cwtl
push
test
and
sub
ja
mov
sub
int
and
fistpl
jno
push
dec
ljmp
sub
outsl
dec
mov
pop
ja
mov
cmp
pop
pop
outsl
lods
push
lahf
ret
jle
cld
je
gs
int
out
push
inc
inc
fisubrl
movsb
outsl
push
pushf
pushf
dec
xorl
rclb
pop
mov
ds
and
cwtl
sub
inc
shlb
mov
fildl
jne
mov
dec
pop
shr
inc
enter
ficoms
mov
mov
sbb
or
push
mov
loopne
pop
adc
push
js
mov
push
in
dec
jnp
xlat
mov
shll
call
rorl
in
push
jmp
fdivp
sbb
cmpsl
rcr
inc
in
shrl
aam
inc
fwait
push
das
es
or
leave
in
sbb
cmp
mov
mov
inc
mov
jns
js
push
lcall
cmc
inc
push
filds
outsl
and
sbb
mov
adc
dec
adc
in
add
sbb
lods
add
fs
xchg
sbb
and
lock
mov
dec
or
in
jo
xchg
xlat
test
push
mov
hlt
aaa
sub
mov
xchg
sahf
cmp
pop
inc
inc
inc
jnp
imul
dec
mov
add
add
sub
jle
or
push
mov
jb
pop
rclb
movsb
pop
push
sbb
sub
pop
bound
add
dec
or
shl
fildll
shrb
dec
fnsave
xchg
inc
lret
nop
mov
scas
mov
std
scas
or
push
insl
in
test
fdivl
ret
out
adc
dec
mov
xor
dec
cmp
inc
aas
jb
les
cmpsb
fcoms
jle
fadds
cmc
cmpsl
fmuls
sbbb
mov
cli
cmp
inc
mov
and
push
mov
sbb
hlt
and
out
sbb
mov
push
test
sub
and
inc
movb
add
testb
dec
mov
add
pop
cmp
sbb
in
shr
gs
test
jg
mov
mov
loopne
sbb
push
lea
add
xchg
bound
or
mov
daa
dec
loopne
cli
push
pop
cmp
shlb
lcall
push
shll
sub
inc
or
adc
ffreep
popa
int3
test
sarb
add
out
xchg
gs
sub
scas
push
or
inc
add
jge
dec
repz
dec
call
mov
push
leave
mov
fwait
outsb
cmp
sub
lahf
stos
jo
cmp
dec
rorl
leave
lcall
call
mov
dec
xchg
cmp
jnp
ja
popf
jp
push
adc
inc
push
ret
cmp
inc
ss
dec
mov
cltd
mov
enter
mov
ss
stos
out
adc
pop
pop
lods
std
mov
es
push
jge
adc
dec
fists
pop
not
out
stc
xor
or
pop
repz
sbb
and
jae
in
add
test
stos
roll
sub
add
mull
xlat
mov
pop
sahf
lds
pop
cmp
pop
shll
mov
xchg
nop
daa
or
and
or
mov
ljmp
cli
push
jle
lods
lret
lret
scas
push
lds
insb
xor
or
sbb
sub
xor
xor
ret
sub
aaa
push
icebp
inc
aas
es
cmpsb
mov
test
loopne
es
aam
out
mov
leave
testl
rclb
es
out
insb
imul
dec
mov
lea
movsb
and
imul
xor
sub
inc
pop
push
mov
dec
sbb
push
mov
pop
pop
stos
mov
mov
cmpsb
icebp
outsl
lahf
sbb
ljmp
leave
ljmp
jb
scas
fcoms
mov
pusha
jns
sti
in
in
inc
fcomip
xchg
jle
xchg
and
popa
std
inc
nop
scas
adc
cmpsb
out
cmp
push
or
mov
or
sbb
repz
rolb
jecxz
jmp
xchg
mov
inc
xchg
rcrl
sub
add
dec
out
or
pop
inc
push
mov
js
out
ffree
cmp
testb
pop
std
aam
pop
xchg
rorl
testl
sbb
pop
je
xor
pop
shl
ret
ljmp
inc
dec
or
jl
outsl
ret
shrb
sbb
scas
and
adc
pop
fsubr
xor
clc
int3
out
push
add
sub
push
iret
dec
gs
das
fiadds
cmp
mov
in
outsl
mov
inc
divb
outsl
jmp
fdivs
push
ret
pop
bound
push
sub
movsl
in
cwtl
shll
lret
xor
push
dec
push
jmp
xor
cltd
xchg
ror
cwtl
jae
sbb
sti
inc
and
mov
sarb
sub
push
stos
or
int
mov
dec
dec
cmpsl
xchg
push
jbe
add
inc
mov
bound
jae
mov
rep
mov
insb
fst
push
pop
pop
jns
push
pop
fs
sub
push
dec
mov
lret
jmp
lcall
ljmp
lea
inc
cld
ret
fcoml
dec
adc
push
aad
lds
or
lods
shlb
add
and
or
ret
sbb
adc
xlat
imul
push
jns
ficompl
mov
int
adc
in
inc
push
add
sbb
aaa
jo
outsb
adc
lret
hlt
adc
xchg
push
pop
mov
xor
popf
outsb
mov
loope
cwtl
push
pushf
jno
push
pop
sbb
cmpb
repnz
pop
in
shr
mov
xchg
sub
mov
xchg
jp
sbb
arpl
int
aad
inc
scas
mov
in
jmp
sbb
ret
das
pop
mov
push
repz
jno
lods
movsb
fs
test
notl
jae
xchg
pop
fadds
mov
sub
in
pop
scas
push
std
and
push
addr16
jl
repnz
inc
sbb
bnd
ss
jge
cmp
rclb
and
mov
addr16
lock
pop
movsl
jmp
mov
sub
pop
andb
mov
in
inc
dec
adcb
push
pop
outsb
jae
mov
xchg
stos
mov
cwtl
lret
sbb
adc
or
fsubl
psllq
pop
dec
sbb
lahf
sbb
ljmp
cmc
enter
jl
jns
nop
scas
movsb
and
pushf
xor
lret
push
pushf
ds
sbb
aam
imul
and
mov
xchg
clc
fmulp
jnp
mull
sub
imul
dec
mov
push
pop
jge
mov
lods
in
or
and
aas
ja
cmp
push
or
push
test
iret
inc
inc
aas
pop
add
jbe
ss
push
and
push
shlb
xor
mov
cmc
in
lods
mov
sub
cmp
notb
div
mov
pcmpgtb
xlat
lea
xchg
mov
repnz
sti
ja
sub
sbb
mov
aas
mov
imul
push
xor
mov
pop
fsubrl
in
xchg
addr16
cmp
dec
mov
pop
ljmp
aad
lcall
mov
popf
imulb
ljmp
outsb
sbb
jle
cmp
addl
inc
mov
push
loope
mov
pop
or
pop
dec
mov
bound
shrl
push
cmp
int
scas
shl
xchg
cmp
loop
test
push
imul
mov
popf
dec
jo
les
xchg
mov
or
xor
push
out
lock
or
push
push
lret
cwtl
dec
push
or
movsb
pop
les
mov
add
xor
enter
inc
mov
and
into
in
sub
pop
xchg
rclb
ds
xchg
jmp
loopne
jo
cmp
dec
push
cs
daa
test
or
push
push
shrl
imul
call
js
mov
pop
jnp
popf
sub
lret
cmp
xchg
mov
fcmovnu
in
mov
ja
sbb
cmpsl
cmpsb
bound
mov
and
push
stos
jl
fbld
xor
add
das
les
fmuls
std
ljmp
loopne
push
xchg
mov
dec
test
xor
fnsave
or
mov
or
repnz
in
icebp
push
into
lea
jns
lea
orb
fists
int3
mov
fwait
mov
out
pusha
ja
xor
cmpsb
insl
adc
cmpsl
xor
or
mov
outsl
fmul
movsb
das
stos
arpl
pop
mov
xchg
pop
pop
int3
test
insb
mov
lret
inc
xchg
ret
push
dec
jno
jmp
push
int3
or
shll
lock
pop
rorb
xchg
data16
fildll
call
es
out
stos
js
lahf
daa
fdivrl
stos
cmp
adc
sub
dec
inc
aaa
jp
and
popa
jmp
jae
aam
push
ss
lods
and
inc
mov
fldl
loopne
mov
jge
pop
inc
lahf
in
data16
add
int
aaa
leave
push
cmp
movsl
lcall
aaa
dec
and
sti
xchg
dec
in
inc
push
test
mov
sbb
push
inc
adc
popf
loopne
ljmp
or
gs
neg
aas
sub
lds
cmc
lahf
fucom
arpl
cld
push
lods
pop
mov
push
aaa
jmp
pop
dec
outsl
add
data16
rcr
outsl
je
mov
cli
push
sbb
scas
out
les
into
jnp
repz
jmp
pop
sahf
out
jmp
xchg
xchg
push
cmp
xor
test
sbb
ret
mov
pop
mov
cmp
jno
push
lock
loope
sub
outsl
sub
xor
outsb
jne
jnp
fs
outsl
sub
xor
jg
jne
sub
ljmp
mov
and
rcrl
outsl
fwait
mov
mov
pop
xor
xchg
aam
or
popf
in
adc
shlb
pop
lods
push
push
add
fcoml
xchg
scas
mov
cmpsb
rorl
movsl
and
subl
or
mov
bound
aas
sbb
sbb
scas
pushf
lcall
rcrb
test
insl
sbb
cmp
imul
enter
lahf
lds
fstl
jl
push
mov
jnp
stos
pop
and
xchg
pop
push
mov
cs
out
dec
adc
mov
pop
pop
cmpsl
jl
cltd
xor
mov
popf
fisubrs
pop
mov
int
test
fcoms
xchg
xchg
sub
xchg
jo
scas
fimull
stc
pop
fdiv
ficoms
aaa
popa
pop
pop
mov
hlt
xchg
cmpsl
jmp
mov
adc
add
fists
nop
mov
mov
mov
fwait
pop
leave
push
add
cmpsb
or
sbb
scas
test
fiaddl
mov
bound
or
xchg
fildl
xorl
ret
or
xchg
inc
adc
out
leave
mov
sbb
xchg
push
loop
jp
add
in
and
into
clc
out
mov
adc
daa
cld
mov
cli
aas
iret
push
adc
mov
sbbb
jge
mov
push
fwait
cmp
popa
xchg
ret
add
ljmp
push
test
stos
xor
inc
push
ffree
add
mov
lahf
scas
sub
sbb
mov
pop
adc
movb
mov
insb
cmp
dec
clc
loop
dec
mov
jo
xor
movsb
ror
jmp
xchg
fistpl
cmp
imul
mov
fidivs
dec
lahf
cmp
jne
cmp
cmp
pop
in
or
sub
mov
or
mov
xor
lret
inc
aaa
sub
and
adc
or
inc
jmp
jns
and
cmp
icebp
pop
rcr
sbb
aaa
sete
and
pop
adc
adc
ret
sub
test
sub
enter
jne
fildl
push
add
cwtl
mov
test
lea
push
mov
xor
dec
cmp
test
mov
call
adc
jnp
mov
mov
pushf
push
cmp
xchg
fnsave
push
in
jb
xor
mov
shl
sti
mov
pop
mov
rcll
test
fdivs
mov
insb
movsb
mov
xor
clc
jl
outsl
test
jne
sbb
aam
out
push
cmp
inc
add
into
inc
pop
mov
ss
shrb
and
rolb
sbb
mov
cld
and
and
dec
fcomip
ret
jb
xor
popa
leave
add
mov
mull
push
jl
push
inc
aam
es
and
es
push
outsl
cmc
inc
sub
dec
jp
inc
mov
inc
iret
sbb
cmp
cld
ss
jbe
sub
cmp
mov
sub
int3
cmp
in
rclb
pop
mov
lahf
pushf
lret
pop
adc
xor
dec
decb
lods
out
push
div
movsb
aad
xchg
xchg
adc
dec
push
jo
push
fmuls
stc
xlat
imull
sbb
test
xor
pop
push
es
test
arpl
rcrb
mov
and
inc
ja
pusha
insl
mov
xor
out
cmp
in
pop
push
inc
aad
lcall
orb
daa
loope
stc
mov
mov
sbb
pop
popf
adc
add
and
test
std
popa
add
mov
and
adc
nop
cmc
add
dec
nop
xchg
ljmp
sbb
shl
cmp
sbbb
jne
and
push
iret
xor
es
pushf
sub
mov
into
dec
pushf
idivl
or
sub
mov
frstor
mov
jb
repz
pop
lods
sbb
cmp
movsl
pop
popl
out
push
idivl
dec
add
test
cmpsb
push
ret
and
mov
inc
gs
and
and
mov
icebp
add
add
or
dec
mov
xchg
in
fs
mov
jo
inc
push
adcb
inc
cld
mov
jge
das
imul
dec
sub
xor
das
and
pop
adc
dec
and
cmpsl
call
jmp
fbld
inc
daa
mov
and
push
lock
inc
or
repnz
mov
leave
adc
xor
cmp
je
addr16
jp,pt
imull
add
inc
in
movsb
and
add
dec
mov
movsl
mov
push
ds
mov
out
cmp
out
out
jb
push
popa
into
fxch
imul
mov
xchg
je
cld
pop
js
xor
aaa
xchg
jnp
loop
cltd
sub
pop
mov
push
add
aad
inc
mov
mov
lea
movsb
pop
pop
jno
mov
mov
xchg
adc
sub
bnd
in
mov
cmpsl
push
test
das
popa
pop
test
push
sti
inc
mov
push
xchg
inc
jnp
lret
inc
adc
in
rcll
or
int3
aam
dec
cmc
loopne
push
push
and
pop
pslld
mov
aad
mov
stos
or
aam
call
rolb
cmp
mov
lock
dec
iret
aam
and
xor
push
pop
cmc
jns
enter
out
aad
in
outsl
or
mov
hlt
xor
pushf
rorl
jo
dec
divb
cwtl
jg
sbb
sbb
push
out
push
imul
imul
inc
add
or
jl
aas
lds
and
xor
sub
sbb
lcall
sahf
xor
or
mov
push
imul
daa
mov
mov
lret
adc
sub
sbb
notb
ja
mov
sub
push
lret
pop
pusha
cmp
shrb
push
fwait
jnp
orl
pop
and
test
fldt
cmp
add
pusha
sbb
cmp
cs
jmp
decb
das
int
aas
and
dec
mov
jge
mov
sbb
jmp
movsb
or
int
mov
shll
pop
lahf
and
outsb
xchg
bnd
mov
sbb
lret
inc
add
movswl
mov
cmp
add
fisttps
pop
movsb
and
in
das
insl
push
call
pop
pop
sbb
xchg
int
lcall
sbb
aam
inc
popa
shl
mov
sbb
cli
loop
jmp
test
lret
mov
ds
test
pop
data16
cli
pop
nop
inc
fwait
push
xchg
stos
mov
dec
xor
rclb
mov
push
jp
filds
sbb
js
adc
add
jns
push
into
js
je
cs
loope
sbb
xchg
sub
dec
fs
movhlps
loope
add
or
or
jnp
mov
lcall
or
mov
aam
xchg
fldpi
jne
pop
loop
xchg
cli
lea
pop
int3
pop
test
stos
pop
movsb
cmp
mov
add
hlt
mov
shlb
adc
sbb
cmc
cmpsl
mov
push
cli
adc
aaa
pop
xor
lea
jmp
sti
sub
dec
sub
aas
xchg
ret
cmp
stos
sub
repnz
leave
inc
push
cmp
rcr
lahf
outsb
popf
mov
bound
lahf
cmp
pop
mov
fstps
lahf
jae
clc
lahf
mov
add
push
jge
add
fcmovb
or
je
push
inc
jmp
push
stos
and
mov
sub
jecxz
add
pop
shrl
aaa
loop
insb
gs
push
mov
outsb
enter
js
out
cmp
dec
inc
ret
jns
mul
mov
sbb
andl
xchg
jge
ret
and
sub
aad
sarl
sbb
dec
lea
shll
lock
inc
shlb
jbe
loop
les
jae
push
imul
sbb
loope
sub
add
inc
gs
sbb
icebp
jns
add
sti
fisttpll
or
les
mov
sbb
cwtl
shrb
inc
jae
std
and
xor
xor
jno
cmpsb
cltd
repz
out
mov
stos
sbb
xchg
mov
scas
ss
jmp
pop
notl
out
fdivrp
dec
stc
popa
cmp
lea
repnz
push
outsb
clc
jae
ss
jns
xor
push
xor
cwtl
repnz
or
ffreep
mov
loopne
xlat
add
push
movsb
call
into
push
adc
mov
test
xor
xor
jne
or
jl
sub
and
sub
jne
jl
pop
hlt
js
idiv
das
mov
add
or
rol
fsubs
pop
addr16
shr
movsl
lret
sbb
mov
pop
and
sub
jge
insl
pusha
ds
nop
xchg
jmp
out
xchg
jbe
loopne
sbb
or
cwtl
add
dec
aaa
jo
aam
test
movsb
lock
sbb
out
sbb
jle
adc
dec
dec
cmp
and
test
shlb
fsubr
cmp
mov
and
dec
hlt
hlt
sbb
mov
sbb
dec
sbb
out
push
lds
mov
cmp
cwtl
adc
jb
les
inc
push
fidivl
icebp
scas
gs
xor
mov
mov
sbb
frstor
sub
mov
xor
jb
out
xchg
mov
inc
rcr
add
outsl
mov
pop
xor
or
dec
xlat
int3
enter
cs
stos
xchg
loopne
lahf
xor
ret
mov
pop
fsubs
clc
add
xor
cmp
mov
inc
lea
jno
ss
push
ljmp
call
inc
xchg
loopne
jl
inc
daa
jne
mov
mov
js
jg
cmc
push
fldt
aam
repnz
mov
lods
pushw
mov
mov
xor
mov
inc
inc
outsl
pop
mov
xchg
or
mov
xchg
pop
pop
jge
mov
jp
push
mov
mov
mov
sti
push
mov
aas
lahf
sbb
sbb
cmpsb
lcall
dec
mov
xlat
push
pop
inc
xor
stos
cmc
in
sub
and
jl
jle
fsub
rol
in
push
arpl
sub
mov
push
dec
and
push
inc
adc
lret
xchg
repnz
std
rorl
mov
sbb
movsl
lods
or
out
mov
mov
xor
mov
out
test
dec
scas
fs
adc
pop
je
in
popa
lods
mov
mov
hlt
push
insl
inc
sub
add
sub
mov
xchg
mov
sub
mov
mov
ss
test
mov
outsb
dec
roll
adcl
cmp
mov
add
ret
sbbb
push
cwtl
ret
fwait
push
xor
je
ret
in
mov
pop
out
pop
je
cmp
inc
push
insl
inc
add
dec
imul
sti
and
das
and
arpl
add
jg
mov
cmc
imul
cmpsb
int3
cmp
mov
mov
je
mov
cltd
sub
into
mov
mov
sbb
ret
jecxz
xchg
jae
lds
xchg
xor
int
aaa
icebp
lds
cmp
fnstcw
and
les
aam
mulb
mov
sbb
sub
push
push
pop
int3
jns
icebp
bound
mov
mov
pop
jo
aaa
loop
sub
stos
cmp
fdivrl
int
jno
fmulp
ja
sbb
out
add
sti
cmc
or
dec
aad
test
adc
xor
rcrb
cmc
into
jb
sbbb
mov
mov
add
add
jns
shll
out
push
clc
insb
sbb
push
int
aam
xor
fs
jg
call
popf
sub
dec
xor
imul
push
mov
jp
pushl
pop
stos
sub
test
dec
sbbb
lahf
out
sarb
pop
or
ror
leave
lahf
jg
aad
sub
ja
movsl
pusha
les
mov
icebp
gs
push
pusha
clc
cmpb
pushf
sub
dec
mov
cmc
orb
xor
outsl
shrl
mov
jae
sbb
test
movsb
inc
push
xchg
std
lds
push
out
mov
adc
orl
cmpsl
pop
or
movsb
push
and
mov
pop
and
xlat
fisttpll
inc
cmp
outsl
cld
mov
cmpsb
imul
inc
jbe
pusha
outsl
dec
adc
ja
out
push
jge
test
xchg
dec
lea
shld
in
sbb
dec
sub
mov
sbb
nop
pushf
addr16
testb
nop
sub
sub
mov
pop
das
scas
add
and
mov
sub
sarl
jge
xor
push
jp
and
movsb
pop
cmp
mov
xchg
stc
cmpsl
insl
push
sub
cltd
pop
and
jo
cld
cli
mov
mov
cs
push
or
sbb
adc
mov
je
dec
xchg
popa
test
leave
add
hlt
pop
jnp
loopne
cmp
mov
daa
inc
xchg
or
and
stc
mov
cmp
mov
cmp
sub
shr
pop
pop
lock
repz
add
stos
pop
inc
fdivrp
mov
shlb
inc
xorb
fsubrl
sub
lret
push
mov
popf
cmc
xchg
adc
aad
loope
add
inc
aaa
cwtl
pop
or
popf
popa
pop
nop
mov
faddl
push
xchg
jbe
inc
aad
int
xchg
in
repnz
mov
dec
out
insl
fidivs
lods
call
cmp
scas
add
and
test
jbe
cmp
in
cmp
loop
jns
cmp
aad
addr16
sbb
das
cmp
xchg
push
jbe
adc
imul
pop
jle
inc
pop
outsb
cmc
mov
insb
push
push
sbb
pop
into
jle
imull
sti
pusha
sub
dec
xchg
xor
std
cmp
inc
xor
xlat
iret
out
cmovs
in
or
jnp
pop
fmull
in
andl
cmp
sub
push
jb
mov
in
aam
cli
mov
dec
mov
ja
outsb
add
out
inc
lahf
pop
mov
pop
out
mov
jge
mov
push
hlt
inc
sub
notl
mov
arpl
cs
cmp
xor
mov
es
jno
movsb
jmp
imul
push
ds
inc
jmp
ret
int3
ret
push
xchg
jnp
ret
cmp
mov
arpl
jbe
lret
je,pt
jmp
jae
hlt
sub
mov
hlt
xor
xlat
psraw
jg
mov
or
mov
inc
call
aam
xlat
mov
add
pop
mov
lds
adc
fwait
js
inc
push
and
inc
insl
scas
add
lret
iret
xchg
sbb
gs
pop
sub
stos
mov
xchg
fists
sub
jg
enter
repz
into
sbb
and
movsb
dec
xor
sti
repnz
jg
add
pop
add
hlt
push
jnp
stos
jne
ret
mov
jle
and
inc
pop
sbb
pushf
push
es
inc
aam
das
pusha
repnz
jbe
dec
inc
inc
int
pop
popf
or
bound
mov
xchg
jl
popf
movsb
jmp
push
push
mov
inc
inc
sub
xchg
sbb
and
jp
stc
arpl
divl
test
fildl
aaa
or
clc
pop
fidivl
inc
jle
or
pushf
fisubs
and
pop
out
or
jg
lcall
push
cmp
push
decl
push
movsl
pop
adc
and
fdivs
sahf
fs
mov
aam
ret
mov
ljmp
mov
cmp
cmpsb
hlt
daa
pop
fisubs
push
cmpsl
adc
inc
sbb
push
iret
push
jnp
aam
pop
idiv
or
xor
scas
std
jb
sub
adc
inc
mov
stos
clc
or
call
aas
mov
xor
setb
sahf
mov
aad
adc
xchg
pop
lea
ret
outsl
or
in
lahf
fbld
push
mov
xchg
mov
mov
icebp
andb
add
add
cmp
loopne
cmp
fwait
notl
popf
mov
add
in
jmp
inc
inc
jmp
mov
outsb
stos
aad
push
add
std
inc
outsb
outsb
mov
loopne
push
mov
and
cmp
ds
call
jne
int3
pop
addl
mov
and
sbb
popa
jnp
jb
leave
lods
hlt
add
push
das
scas
adc
or
inc
jl
mov
out
inc
js
cmp
lds
sub
je
mov
cmp
push
jmp
xchg
lahf
aaa
sbb
ss
xlat
out
mov
xchg
cmp
hlt
imul
jp
insl
push
push
sub
jno
inc
inc
stos
mov
repnz
or
cmp
lea
lods
enter
and
imul
xchg
mov
cmp
and
dec
push
testl
lcall
lea
mov
jmp
daa
pop
jae
lret
dec
test
fs
fwait
orb
xchg
rcrb
cltd
pop
xchg
std
lret
inc
mov
sub
into
pop
jne
out
add
mov
imul
int
dec
in
lods
test
loopne
cwtl
push
pop
add
mov
sti
test
inc
xor
fldt
pop
repz
loop
jo
push
mov
sbb
push
and
jb
test
push
xor
je
jnp
sub
gs
sti
jge,pn
adc
or
jb
fists
cmp
jmp
push
sarb
or
pop
ja
pop
add
mov
push
insl
sub
jbe
fwait
cs
push
je
frstor
ficomps
pop
out
ja
xchg
adc
pop
leave
aam
mov
lods
cs
out
pushf
in
daa
jmp
or
and
sub
push
lret
mov
jo
or
clc
dec
aaa
fsubrl
or
sti
aas
test
rcll
sub
cmp
cmp
inc
cli
jge
int3
pop
frstor
mov
dec
pushf
popf
in
pop
dec
mov
xor
mov
movl
ret
subl
lret
push
cmp
es
rclb
push
mov
sbb
adc
mov
pop
dec
movsb
pand
xlat
or
push
aaa
divb
inc
cli
lods
movsb
popa
out
lret
fmulp
into
repnz
addr16
jl
popa
in
mov
mov
or
jbe
mov
loope
add
mov
cmpsl
repnz
adc
pop
sahf
or
inc
fwait
jl
seto
sub
faddl
mov
je
pop
stos
lods
jae
scas
pop
or
xchg
iret
enter
push
mov
vdivpd
push
push
jnp
mov
mov
mov
or
push
shrb
cmpsb
imull
scas
fldl
popa
mov
aad
dec
mov
rcl
fimull
xor
out
jno
leave
shll
mov
and
fs
xchg
sub
adc
xor
or
or
shlb
inc
js
jb
inc
fbld
sbb
sahf
fdivrs
adc
mov
xchg
push
leave
orl
mov
xchg
sahf
jb
je
jle
cmp
lcall
ja
inc
dec
les
nop
and
jecxz
mov
scas
adc
pop
push
outsb
mov
xchg
mov
jmp
decl
popa
mov
pop
add
or
push
std
xchg
or
jne
rorl
loop
out
push
pop
pop
aaa
scas
jo
addr16
or
es
and
pop
aam
movsl
sub
shll
fwait
xchg
lcall
testl
pop
leave
shrl
sbb
push
out
bswap
pop
jno
jl
dec
fadds
pop
notb
push
push
pop
push
test
mov
dec
iret
jecxz
jecxz
roll
push
mov
ja
test
push
stc
fldenv
pop
mov
aad
mov
bound
sbb
xor
add
js
rcrb
shlb
inc
clc
inc
jb
pushf
insb
pop
mov
into
hlt
jmp
xor
aas
jmp
mov
adc
rcrl
faddl
dec
adc
loopne
test
push
adc
xor
outsl
out
das
sbb
or
jle
nop
cmp
inc
add
pop
mov
and
mov
mov
adc
sub
sub
mov
cmpsl
ljmp
sbb
mov
subb
jp
xchg
cmp
cwtl
gs
addr16
ss
dec
shll
mov
jbe
ljmp
cmp
test
cld
sub
jle
inc
adc
xor
ss
mov
and
out
test
jae
jae
push
mov
adc
jle
sti
push
mov
sub
add
in
shrl
xchg
xchg
inc
jno
movsb
pushl
mov
pop
cli
ret
xchg
fs
cld
mov
lahf
jae
dec
jo
std
dec
jo
xchg
or
cmpsl
lods
sub
imul
inc
call
mov
and
xor
xchg
in
and
jns
lea
dec
inc
mov
in
xchg
hlt
mov
jge
push
clc
fwait
rorl
shll
mov
inc
sti
into
mov
sbbb
test
xor
int3
dec
or
jbe
test
in
inc
and
in
sbb
ret
std
inc
divl
push
xor
dec
jbe
test
popf
dec
popf
adc
adc
adc
jae
jbe
dec
subl
push
push
mov
fwait
out
sbb
int3
mov
in
ljmp
jmp
jb
mov
addb
je
pop
cmp
mov
or
fnsave
cltd
sbb
stc
inc
sbb
mov
add
or
add
mov
pop
movsl
cwtl
mov
je
dec
scas
mov
jbe
adc
mov
cmpsb
xchg
cmp
push
xchg
xchg
rcll
rcrl
lret
loop
ret
or
pop
hlt
shll
stos
mov
test
sbb
xchg
in
or
xacquire
mov
dec
sub
out
mov
jae
push
or
aaa
adc
xor
pop
in
stc
pop
mov
pop
imul
mov
test
js
cltd
jp
ljmp
arpl
dec
jae
icebp
push
sbb
ja
fmull
dec
jno
popl
sti
add
jbe
les
push
jb
sub
aas
stos
sub
or
mov
jle
push
fidivrs
aaa
dec
fidivs
xlat
or
mov
enter
cmp
in
cld
int
lods
lock
mov
lcall
sti
xor
mov
es
inc
stos
push
push
shlb
push
loopne
sub
shlb
sub
add
adc
loopne
cmp
shl
cmpsl
cwtl
outsl
adcl
cmp
das
pop
subl
push
or
pop
jmp
jge
inc
jg
xor
dec
cs
cmp
xor
movsl
gs
jno
lods
mov
pop
or
je
dec
mov
call
cmp
pop
or
add
cmp
aad
sti
mov
mov
adc
cmp
inc
push
inc
inc
cs
aaa
ljmp
adc
mov
fldln2
mov
gs
push
inc
push
test
mov
jb
xchg
lods
lea
sub
jns
sbb
scas
xor
and
cli
mov
popf
jne
aaa
mov
aad
out
dec
and
xchg
js
push
push
and
cld
roll
fsubr
fwait
cmp
push
rclb
mov
in
addb
and
dec
aaa
mov
shll
insb
dec
in
jb
cmc
mov
add
es
cltd
insl
ds
xor
jnp
or
mov
insl
ja
rol
insb
stos
jge
adc
data16
jnp
loop
lods
neg
sti
pop
cmp
push
ds
mov
push
mov
adc
aas
hlt
lahf
mov
arpl
subl
mov
lret
rcrl
cmpsl
jmp
cmp
pop
pop
divb
cli
mov
or
lods
lock
cld
icebp
cmpsb
mov
fdivrl
xor
inc
cmpsb
cmp
int
stc
push
pop
push
xchg
jnp
out
jl
pop
or
mov
cmp
mov
mov
jns
mov
lcall
adc
push
xchg
rcl
jb
push
scas
dec
and
dec
or
es
cmp
sub
ror
dec
arpl
fbld
mov
movsl
push
pop
and
insl
inc
mov
rcr
cmp
push
mov
cmp
and
repz
cmpsl
and
dec
xor
stc
leave
outsb
lcall
lcall
out
xlat
scas
xor
shrl
push
jle
mov
clc
es
sbb
lea
rcll
mov
into
mov
imul
mov
push
xchg
ret
fdivrl
pop
lods
ret
loop
xorb
push
addr16
ficoml
shrl
aaa
dec
lock
inc
rcll
je
jecxz
test
icebp
push
loope
imul
pop
jae
push
lcall
xchg
jge,pt
testl
inc
jns
sub
xchg
mov
and
movsb
xchg
sbb
adc
das
jp
rcl
xor
dec
ds
mov
cmp
int
xchg
pop
andl
hlt
dec
pop
or
insl
mov
xor
xchg
or
dec
mov
and
addl
rorb
push
mov
in
sub
xor
add
and
in
inc
jge
repz
xchg
add
int
js
in
sub
les
xchg
mov
sti
adc
jl
iret
ss
insb
rclb
add
popa
xchg
ss
pop
loope
out
out
inc
mov
inc
push
push
test
shrl
mov
pop
sub
xchg
inc
mov
mov
push
dec
test
mov
imul
pusha
sti
shlb
in
or
mov
mov
dec
test
jmp
mov
iret
push
in
sbb
lahf
sbb
mov
cmp
push
mov
mov
or
ss
jmp
pop
in
mov
pop
insb
out
mov
and
xchg
int
xor
push
loopne
sub
sub
xor
aad
push
jecxz
ds
nop
fwait
mov
sbb
mov
mov
jns
xchg
loope
xor
mov
pop
push
dec
cmpb
daa
test
lds
jo
and
jb
jp
xchg
inc
das
jo
and
outsb
call
inc
pop
shlb
lret
sub
mov
xor
sbb
ret
arpl
cmpsb
mov
jb
xor
jne
arpl
add
mov
enter
mov
stos
test
mov
mov
insb
mov
imul
mov
fnsave
clc
dec
dec
je
xchg
jns
push
rcll
jmp
cmpsb
push
ljmp
mov
or
in
mov
jno
imul
pop
mov
pop
add
mov
test
ret
or
mov
loop
mov
inc
idivb
ret
dec
jne
adc
push
jge
loopne
ret
ret
scas
push
ret
sbb
nop
stc
and
sbb
daa
jmp
xchg
cmpsl
mov
int
decw
stc
pop
pop
aad
int
inc
mov
mov
xor
shlb
adc
jo
es
aad
jno
dec
aad
push
inc
cltd
in
testl
pop
outsb
cli
xchg
arpl
pop
xchg
cwtl
sahf
and
lods
ljmp
cli
dec
sbb
fucomi
and
aaa
bound
out
lahf
ss
popa
xor
pop
and
xlat
dec
sub
nop
test
cld
xorl
jg
push
or
adc
push
das
in
pusha
stos
xchg
mov
push
popa
in
add
or
fsts
stos
and
cmp
inc
sub
push
mov
lret
bound
cld
jp
ljmp
fists
out
movsl
push
mov
cmpsl
mov
shl
test
popf
lcall
loop
jo
add
push
jle
xor
adc
loopne
repz
and
in
imul
rorl
mov
popl
sub
add
adc
xor
into
cmp
xor
sub
xor
mov
jb
in
pop
pop
ljmp
cmp
mov
bound
lcall
es
pop
cmp
xor
mov
push
imul
mov
loope
mov
jb
sbb
imul
adc
test
add
mov
dec
test
sbbl
insl
jnp
or
xchg
push
add
mov
or
xchg
inc
cmp
sbb
jl
test
repz
jnp
mov
sub
pop
add
add
arpl
fwait
std
jo
addr16
pop
xchg
sbb
cmp
pop
push
loope
cltd
aad
out
add
stos
mov
inc
adc
ret
sub
jecxz
xchg
mov
mov
call
mov
mov
add
push
push
repnz
add
enter
fnstcw
cmp
mov
dec
out
cmp
aas
neg
ret
mov
jne
ret
add
lret
push
sbb
ret
push
mov
aaa
in
in
test
cmp
sub
adcb
pop
push
xor
mov
es
orb
stos
mov
add
push
mov
jno
mov
clc
and
in
in
shll
js
icebp
pop
xor
insb
xchg
fistl
xor
lds
jp
mov
jmp
in
sti
xchg
mov
fistpl
dec
inc
mov
inc
cli
ret
dec
ret
fwait
cmc
cld
orb
aaa
outsl
dec
ficomps
lods
loope
dec
cmp
test
jns
push
addr16
scas
sub
rcr
dec
push
add
pop
xchg
push
lahf
sub
adc
test
xchg
xor
or
sbb
push
es
hlt
push
or
scas
bound
pop
pop
in
mov
xchg
jg
sti
cmc
push
inc
mov
pop
std
repnz
push
or
xorb
hlt
lds
sub
push
test
dec
in
push
push
adc
flds
or
cmp
inc
xchg
popa
sbb
gs
push
sub
scas
xchg
aam
shlb
mov
dec
mov
or
notb
pop
cwtl
adc
fistps
orb
data16
sub
arpl
push
leave
dec
lcall
rcll
pop
outsl
dec
push
les
inc
fcmove
jbe
inc
sub
cmpsl
push
push
popa
fwait
jp
lods
out
jp
mov
adc
jb
sbb
mov
push
cltd
jl
cld
test
mov
test
sbb
mov
notl
jae
insl
pusha
and
cld
jp
ja
leave
popaw
enter
inc
js,pn
sub
sti
jp
btr
pusha
clc
add
push
xchg
clc
mov
and
jl
add
pushf
mov
mov
xchg
jne
cmp
stc
shll
loopne
sub
inc
push
sub
pop
jae
jb
inc
ljmp
ret
inc
sub
lret
or
cli
jne
or
add
cwtl
sahf
fcmove
rol
mov
mov
or
jno
dec
repz
pop
and
push
mov
imul
mov
push
fldenv
fst
sbb
jle
repnz
sub
mov
sahf
repnz
lcallw
enter
outsl
push
loop
popw
inc
push
jno
sub
stos
pop
and
add
jmp
or
in
idivl
lds
mov
iret
pop
add
sti
sarl
sub
adc
jle
mov
aad
pop
in
imul
adc
jmp
arpl
xchg
mov
mov
adc
inc
and
enter
xchg
jp
xlat
repz
ja
xchg
xor
or
lcall
push
mov
push
xchg
adc
xor
jne
mov
or
daa
loope
repnz
test
sahf
add
clc
cmpsl
cld
mov
cli
in
popf
xorb
xchg
pop
push
pushf
push
mov
pop
gs
pop
mov
mov
fsubs
pushf
ret
mulb
mov
add
test
xchg
inc
sub
mov
out
dec
imull
and
int3
movsb
rcrl
pop
xor
scas
cmp
sub
out
and
sti
imul
cs
cmp
aad
outsb
push
gs
jle
ficomps
push
xor
inc
xchg
xor
or
xor
jecxz
xchg
pop
pop
mov
pushl
pop
nop
adc
push
test
in
es
mov
pop
xchg
mov
enter
adc
addr16
ds
mov
ja
cmc
push
incl
loope
xchg
int
je
das
ljmp
xchg
loope
jno
jp
ror
xchg
mov
sar
xchg
andl
xchg
fisubl
xchg
fld
adcb
mov
fisubs
pop
sbb
ret
cltd
stc
mov
jge
pop
sbb
es
inc
mov
negb
loop
pop
xor
jge
cmp
push
in
fwait
xlat
pop
push
inc
mov
mov
or
outsl
mov
sarb
jno
push
ret
in
pop
popa
xchg
or
mov
lcall
lret
push
cmp
dec
rcrl
roll
cmpsb
sub
es
pop
shrl
ret
int3
xchg
insl
hlt
pop
mov
movb
jmp
mov
xchg
jns
dec
mov
arpl
jnp
dec
fwait
push
jo
mov
jns
dec
mov
sub
vmread
sbb
or
sbb
popa
or
mov
aaa
inc
sbb
sbb
mov
dec
fcomps
push
ja
xchg
sbb
ss
fmuls
sub
fbld
mov
push
subl
mov
xor
xchg
jnp
addb
xchg
cmp
lock
adc
add
insb
leave
das
cli
fstcw
jnp
mov
mov
xchg
shlb
mov
aam
push
push
inc
add
cs
jle
xor
add
sub
jb
mov
popf
push
in
push
iret
or
adc
jp
and
push
dec
push
adc
sbb
ljmp
cmpsb
fidivl
lods
movsl
pop
shlb
call
sub
les
mov
cmpsl
out
icebp
jle
jno
mov
mov
xor
enter
fisttps
xlat
push
xchg
sbb
pusha
adc
xchg
pop
sub
fsubr
mov
cmp
mov
jne
int
les
test
int
cmc
sub
dec
test
in
sahf
ret
into
dec
lea
pop
mov
cmp
das
push
jle
sub
mov
loope
adc
inc
je
jae
sbb
hlt
adc
jge
xor
dec
repz
mov
lcall
mov
call
mov
stos
cwtl
and
nop
lea
pop
insb
stos
push
push
jae
mov
lods
dec
jae
mov
jbe
dec
xor
bound
pusha
and
out
push
arpl
jp
dec
add
insl
es
out
fstps
shl
sbb
es
test
fst
pusha
push
add
popa
xchg
das
add
mov
and
mov
call
or
and
cmp
aaa
in
repnz
jge
xchg
mov
cwtl
fdivp
xchg
stos
imull
cmp
adc
out
xchg
mov
int
ds
arpl
dec
dec
mov
addr16
es
mov
adc
aam
out
mov
rorl
bound
punpckldq
mov
xor
cltd
std
outsl
addl
stos
xchg
dec
cmp
xor
pop
mov
inc
push
xorb
add
les
test
psrlw
inc
mov
js
sub
incb
std
xorb
jmp
push
xchg
push
subb
sub
adc
mov
push
roll
fs
cld
xor
push
fidivs
rcrl
orb
inc
sti
mov
movsb
mov
jo
xor
dec
sub
fs
lret
imul
hlt
cmp
mov
inc
adc
push
idivl
int3
andl
in
sbb
mov
fdivrl
pop
xlat
or
add
rorb
pop
and
andl
add
fsts
mov
mov
and
mov
mov
xor
shll
dec
out
mov
int3
cmp
test
inc
movsl
test
es
cmp
out
cmpsl
pop
adc
in
sub
push
and
mov
ds
sub
mov
ficoml
loope
sub
mov
inc
inc
mov
lods
fsubrs
movsl
add
cmpsb
xor
sub
sub
cmc
add
mov
lcall
int
test
loop
inc
cmp
int
lahf
jmp
sahf
push
js
in
into
js
mov
leave
fs
mov
dec
test
mov
mov
loopne
mov
cmpsl
pop
and
cwtl
inc
pop
addl
arpl
adc
flds
lahf
int
fsubp
sbb
mov
push
scas
push
rcr
aaa
mov
pop
mov
clc
imul
mov
test
add
inc
sbb
xchg
pop
jne
lds
jb
adc
in
sub
xor
lock
xchg
and
fcmovu
sahf
xchg
jp
gs
push
push
xor
daa
mov
sub
cli
push
sub
icebp
insl
mov
lea
enter
outsb
outsb
cs
pop
add
lea
dec
add
enter
lods
outsb
imul
push
dec
loop
add
aas
push
rcl
incb
shll
out
shrl
pop
repnz
adc
addr16
cmp
jg
dec
leave
mov
or
pop
cmp
std
push
aaa
mov
inc
jecxz
fcomps
or
cmp
adc
jmp
in
fucomp
stc
rcrl
notl
scas
outsb
push
icebp
pop
lock
sub
cld
pop
cs
and
outsb
pop
cmp
inc
or
add
lods
push
arpl
xor
push
jns
xor
mov
in
xchg
or
es
lods
flds
sbb
call
bound
cltd
adc
out
sti
gs
ljmp
mov
sbb
push
test
lds
sbb
lods
icebp
adc
xor
push
sub
cld
cmp
sbb
sbb
dec
ja
xor
aas
imul
pushw
and
mov
sbbb
insb
gs
adc
scas
push
sbb
jb
aas
repz
jo
rcr
ror
pop
ljmp
jg
mov
pop
jmp
add
pop
pop
or
std
pop
xor
ret
dec
dec
aam
pop
jns
arpl
fsts
or
jne
sti
xchg
das
mov
jmp
sti
jecxz
mov
or
pop
jb
adc
loopne
push
cmc
insb
scas
inc
push
hlt
lcall
sbb
idiv
xlat
inc
sub
scas
stos
jne
loopne
mov
and
paddw
xchg
cltd
push
cmc
std
lret
or
pop
out
mov
pop
and
cli
in
sub
je
push
int
inc
sbbb
push
scas
cmp
mov
mov
mov
mov
sti
les
xchg
cltd
fsubrs
fdivl
jno
sti
mov
lds
gs
outsb
add
inc
scas
cmp
dec
xor
pop
pushf
das
lds
dec
or
test
push
pop
daa
outsb
loope
sbb
jnp
pop
int
cli
push
cmp
movsl
pusha
push
test
pusha
dec
fiaddl
jge
push
insb
lods
outsb
aaa
mov
jmp
and
andl
adcl
jecxz
es
lods
ja
jle
sbb
test
in
push
mov
bound
adc
test
imul
jnp
ret
dec
inc
iret
push
sarl
ds
fdiv
mov
push
mov
inc
and
sbb
fwait
lock
xchg
mov
jbe
xor
xchg
push
adc
mov
loop
repnz
jae
mov
test
inc
pop
and
push
mov
cmp
mov
sbb
adc
cmc
jmp
jmp
add
pop
mov
inc
jecxz
bound
sti
lock
fimuls
subb
inc
icebp
lcall
movsl
xchg
loopne
testb
xor
daa
es
jae
or
aam
not
hlt
add
dec
lds
jmp
add
cmp
jbe
addr16
adc
aam
aam
repz
xchg
inc
fiaddl
mov
xchg
ja
push
mov
dec
sbb
adc
imul
subb
loopne
jp
jecxz
sbb
aad
adc
imul
xchg
mov
das
jbe
movsb
inc
adc
sarl
ja
sub
mov
pop
shrb
add
mov
ret
inc
mov
mov
stos
cmp
lods
mov
fdivp
scas
mov
out
outsl
xchg
inc
out
arpl
pop
pop
xorl
enter
sahf
mov
les
movsb
add
dec
insl
daa
add
xor
dec
push
lock
jle
mov
mov
adc
mov
cli
scas
dec
pop
mov
inc
jo
je
xor
lcall
inc
push
in
lea
pushf
sarb
add
lahf
adc
and
xchg
or
xlat
insl
loopne
insb
imul
inc
aas
push
mov
add
into
out
jmp
fistpll
ss
test
movb
fwait
add
sahf
cmp
je
imul
push
pop
pop
add
push
mov
sbb
sbb
je
pop
pop
popfw
and
dec
lret
or
leave
aas
insb
inc
inc
ret
clc
leave
mov
outsl
ds
sub
mov
mov
mov
mov
add
jecxz
fsubs
xchg
cs
adc
inc
pop
dec
push
out
pop
std
faddl
lea
jbe
dec
out
bnd
fmull
fwait
cs
cmpsb
jg
inc
ja
es
test
dec
inc
fisubl
test
xchg
ss
fldt
in
adc
ss
dec
test
cmp
jecxz
sub
lods
cmp
ss
mov
je
scas
cmpsl
scas
faddl
add
pop
stos
jle
cmpb
sti
xchg
inc
scas
jl
cmp
and
leave
loope
mov
mov
pop
lahf
xchg
push
xchg
and
adc
arpl
cmp
dec
adc
mov
cmp
xchg
lahf
xchg
pop
inc
ljmp
or
ja
ret
jge
or
jle
sub
aam
dec
das
dec
cmpsb
and
sub
mov
cmc
cmp
cld
ljmp
xchg
stos
mov
inc
lret
loope
aad
stc
ret
ficompl
mov
lods
pop
pop
ss
sub
ss
js
sub
idivb
sbb
aam
sti
and
insb
adc
adc
xchg
cmp
push
hlt
enter
xor
stc
jbe
loop
imul
xor
mov
test
and
jb
imul
outsb
inc
clc
fnstsw
add
insl
shrl
lea
es
divl
mov
jmp
stos
mov
jle
mov
or
dec
cmp
iret
jp
stos
ljmp
mov
clc
loopne
jnp
xor
sbb
xor
jmp
push
xchg
stos
bound
in
lods
pop
outsb
test
mov
xor
dec
pusha
dec
scas
jmp
xor
adc
repnz
sub
xchg
push
mov
mov
repnz
cwtl
dec
daa
push
cmpsl
les
into
test
mov
aas
mov
cmp
dec
cli
vmovntdq
pop
lds
inc
lahf
iret
sub
sub
xchg
mov
mov
bound
lods
sti
les
into
cmp
or
sub
sbbb
jmp
lret
out
adc
xchg
mov
pop
in
loop
test
test
ds
pop
in
ljmp
xor
arpl
arpl
dec
icebp
pop
add
in
or
jnp
push
int3
push
sub
lret
mov
xor
fsubrs
test
mov
daa
jbe
mov
std
js
mov
out
sbb
loopne
or
leave
lods
add
fcoml
sarb
jb
mov
lock
sbb
lea
rolb
or
mov
xchg
jne
mov
movsb
sbb
stos
fists
jp
mov
lds
jmp
in
sbb
push
dec
repnz
xchg
cmp
std
gs
sbb
dec
and
and
cmp
pop
and
andl
sbb
cmpb
jnp
stc
jmp
lcall
adc
push
data16
and
or
mov
call
mov
add
dec
xchg
stc
push
lahf
lock
push
in
mov
mov
jecxz
ljmp
in
mov
xor
pushf
sub
mov
test
rcll
cmp
mov
pop
jns
mov
xchg
loope
and
gs
sahf
mov
push
adc
mov
mov
mov
sub
aas
and
ret
jge
mov
xchg
push
lret
sti
mov
xor
imul
cmpsl
pop
add
xchg
gs
cmp
loopne
leave
pop
pop
mov
cltd
mov
fmull
xchg
pop
stos
add
ret
nop
ret
jbe
pop
push
jo
in
add
adc
adc
into
nop
mov
clc
and
addr16
mov
lcall
xor
ret
push
lods
minps
adc
test
pushf
mov
push
ret
sub
xchg
popf
rol
lds
lock
and
bound
mov
mov
mov
in
mov
ret
sarb
lret
push
adc
lods
fdivrp
or
enter
shlb
mov
or
jae
cwtl
cltd
fs
js
stos
addb
idivb
sub
fcmove
aam
ss
imul
aaa
cmpsb
das
push
outsb
outsl
add
incb
cmp
add
ret
mov
cwtl
loop
div
andb
outsb
test
mov
dec
mov
lret
inc
clc
jp
and
fcoms
pop
lret
xchg
push
ret
orl
add
mov
cmp
mov
push
cmpsl
inc
cmp
add
fwait
outsl
mov
fidivrs
xchg
lods
push
mov
in
hlt
jb
xor
pop
xor
push
pop
add
add
adcl
call
xor
ljmp
xor
in
mov
test
test
cmp
xor
mov
imul
scas
xor
dec
mov
sbb
gs
adc
mov
push
imul
xor
mov
mov
cld
lcall
jp
mov
jmp
mov
ret
in
sub
ds
adc
sub
xchg
test
lock
movsl
sbb
mov
and
cmp
xchg
rcr
xorl
in
cwtl
xor
xchg
sub
jno
dec
pop
in
fidivs
jno
jb
fists
aam
mov
clc
xor
mov
mov
xchg
mov
arpl
testb
dec
push
mov
mov
jno
cwtl
push
mov
incb
test
aam
xor
xor
lcall
mov
repz
movl
outsl
add
loopew
and
outsb
xchg
repz
inc
mov
push
push
nop
xchg
fwait
pcmpgtb
ret
sub
xchg
dec
inc
cld
adc
fcomp
or
test
cli
jge
xchg
outsb
or
idivl
ljmp
inc
sbb
mov
and
stos
pop
dec
sub
add
andb
cld
ja
imul
jge
mov
sarb
cmp
mov
inc
mov
out
js
dec
cld
xchg
xchg
jge
lods
push
mov
fwait
out
sar
rorl
sbb
dec
mov
jg
pop
ret
stc
mov
cltd
iret
jne
xchg
icebp
ficomps
or
icebp
call
xchg
mov
cmpsb
cmp
ds
xchg
icebp
inc
adc
ss
xchg
fistpll
mov
mov
das
inc
stos
jmp
cwtl
xchg
mov
cli
push
negb
jo
mul
lret
add
lock
mov
mov
in
test
cwtl
ret
jecxz
push
push
jg
rcrl
stos
xchg
inc
pop
stos
xor
je
sahf
add
jecxz
push
test
in
std
and
xor
andb
mov
add
icebp
push
aam
call
and
sarb
xchg
xor
ja
xchg
shlb
lret
cmc
pop
lret
in
and
xchg
enter
xlat
push
mov
leave
adc
imul
fildl
std
inc
subl
dec
aaa
repnz
pusha
push
pop
ret
clc
sahf
test
dec
inc
lods
scas
sbb
clc
ret
inc
ss
lahf
fs
enter
sbb
aam
imul
icebp
mov
dec
adc
stos
and
into
xor
mov
sub
jmp
xlat
jbe
xor
jmp
push
sub
cmc
mov
push
xorb
scas
jb
pop
jae
lret
adc
popa
or
jne
rcll
popf
mov
sbb
call
test
mov
dec
jp
outsb
sub
jmp
cmc
call
repnz
push
inc
adc
mov
subb
cld
sahf
push
lret
neg
mov
sub
iret
cmpsb
inc
test
sbb
sbbb
dec
pop
sbb
in
in
cmpsl
test
call
xchg
sub
fnstsw
shrb
orb
push
adc
stos
adc
cmpsl
lds
cld
jg
lahf
es
xchg
add
js
jb
and
shrl
mov
mov
daa
lcall
cmp
add
aaa
add
loopne
sbb
dec
imul
pusha
stos
cmpsb
sub
jmp
adc
aam
add
in
and
jb
andb
jl
test
fnstenv
or
inc
mov
scas
lea
mov
lret
adc
add
or
imul
leave
daa
test
add
cmp
stc
cld
push
mov
in
mov
push
jge
data16
js
xchg
ss
loopne
pop
dec
push
mov
std
lahf
inc
iret
mov
aad
popa
adc
out
xchg
adc
cwtl
and
lea
into
cmpsl
fisubrl
xchg
and
pop
fsts
inc
sub
insb
addb
inc
jo
adc
movsl
pop
ss
dec
lds
lods
bound
dec
movsb
icebp
mov
push
mov
mov
mov
mov
stc
push
adc
movsl
xchg
pop
inc
mov
insb
cmp
sub
es
xchg
leave
mov
mov
repz
div
enter
push
andb
lds
add
insb
fisttpl
xor
lcall
cmp
push
movsb
fnstsw
jo
cmc
test
cmp
leave
or
repnz
repz
pop
and
inc
pop
add
inc
out
subb
pushf
aad
dec
cmp
std
test
cs
adc
iret
ja
mov
fsubrp
push
mov
cltd
hlt
je
iret
or
mov
cmp
dec
mov
pop
roll
xor
inc
jp
cmpsl
fimull
adc
mov
mov
das
rcll
adc
mov
push
dec
addr16
sub
loope
lea
cmpsb
inc
cmp
dec
adcl
roll
mov
cmp
in
pop
xor
mov
xchg
in
roll
push
inc
js
addr16
sbb
jg
xchg
xor
fldt
cmp
sub
or
jmp
mov
adc
stc
out
dec
jnp
add
xor
popa
sub
decb
dec
pushf
xor
sub
sbb
jnp
ss
xchg
loop
sarb
or
cli
mov
lods
icebp
jl
sti
out
repnz
out
adc
out
rcrb
out
mov
push
and
mov
dec
cmc
and
ja
imul
cmp
inc
xor
fsts
enter
add
ljmp
loope
lret
icebp
xchg
add
cli
fcoms
jmp
test
mov
push
dec
movsb
add
mov
fsts
arpl
scas
inc
inc
sbb
add
lahf
pop
movsl
es
mov
call
xlat
push
or
and
or
std
fdivs
jae
mov
adc
es
in
add
cmp
mov
lret
jmp
shrl
or
loope
stc
add
jae
sub
rcrl
mov
sub
push
pop
add
out
inc
dec
and
movb
nop
inc
xchg
sub
pushf
push
scas
jbe
ds
int3
or
mov
enter
xchg
sbb
lods
jae
xor
dec
stos
and
add
test
xchg
cmp
sbb
sbb
ja
loop
lcall
push
lea
lea
cwtl
ljmp
mov
repnz
iret
mov
test
loope
pop
mov
or
mov
insb
jb
dec
push
sarb
aam
xor
mov
adc
div
lea
mov
pop
pop
pop
ret
mov
mov
adc
cwtl
jnp
je
aas
inc
cmp
sbb
cmp
inc
mov
and
das
lret
push
ja
and
push
sub
push
and
loope
mov
sbb
or
cmp
ret
dec
xlat
stos
loopne
loope
cmp
dec
sbb
stc
ret
pop
imul
mov
mov
sub
mov
sarb
mov
dec
popa
pop
clc
aaa
ret
xlat
lea
xorl
pop
mov
xchg
pop
aam
xchg
mov
sbb
ret
or
ret
jl
sbb
pushf
push
adc
movsb
inc
sbb
pushf
lahf
mov
in
decb
cmp
mov
lock
push
addr16
mov
daa
dec
in
int
jb
pop
aaa
sbb
push
fbstp
fld
adc
adc
sub
aaa
stos
push
and
pop
hlt
inc
lods
lods
mov
sub
xor
lcall
int3
sbb
js
sub
cmp
cltd
lret
neg
jge,pt
mov
std
enter
cmc
mov
punpcklwd
negb
dec
dec
test
xchg
add
out
aad
repz
test
les
and
fisttps
ds
leave
sub
int3
sahf
cmpsb
jne
out
jbe
pop
pop
pop
adc
mov
mov
hlt
loop
jl
out
cmp
xor
and
cmpsl
add
je
fldenv
jnp
sbb
jmp
inc
sub
xchg
popa
les
dec
xchg
push
ret
mov
pop
cmpl
cmp
loopne
mov
test
mov
dec
push
mov
iret
pushf
pop
sbb
pop
mov
je
mov
xchg
mov
adc
mov
das
push
outsb
mov
mov
jecxz
jl
xor
add
xchg
pop
cmpl
jns
and
dec
sbb
ds
pop
int3
sbbl
imul
in
push
push
idivb
sub
mov
faddl
negl
and
sarb
jle
lods
push
test
sub
pop
adc
mov
test
aas
dec
inc
mov
or
fidivrl
lock
mov
rcrb
lcall
push
pop
push
adc
scas
sbb
xor
jbe
add
fwait
aaa
rcr
and
push
test
push
into
and
in
ljmp
imul
lahf
hlt
add
sbb
mov
inc
mov
arpl
insb
iret
push
ljmp
mov
aaa
pushf
mov
das
cmp
and
outsb
repz
cwtl
fsubr
hlt
adc
mov
sub
jbe
stos
lret
jno
ss
loope
xchg
xchg
dec
xor
adc
int
xchg
xchg
pop
rolb
push
xchg
add
out
stos
push
push
insl
fbstp
pop
lahf
ja
lcall
pop
jecxz
stc
lods
shlb
jne
push
push
out
push
lcall
js
in
je
push
mov
imul
imulb
adc
adc
out
push
xchg
pop
mov
loop
xchg
js
aam
cmc
sub
int3
xor
jmp
rol
mov
cmp
mov
subb
cmp
cli
mov
mov
lret
mov
jmp
roll
out
test
mov
sahf
xchg
int
out
shl
xlat
fwait
std
cmp
into
fcmovne
loopne
mov
lcall
int3
enter
mov
and
or
adc
out
xchg
or
fstpt
ds
push
inc
inc
cmpsb
loope
aaa
sbbb
xchg
add
out
xchg
int3
bound
pop
xchg
push
call
mov
inc
push
mov
xor
loop
jns
mov
lds
ljmp
mov
inc
jle
sub
mov
repnz
dec
or
outsb
xor
mov
in
add
adc
cmp
shlb
enter
loope
lret
or
xchg
popa
cmp
sub
pxor
sti
xchg
das
mov
jg
inc
sbb
pop
and
push
clc
stos
out
sbb
es
sub
xchg
or
ljmp
push
inc
sbb
jg
cwtl
fistps
jecxz
xor
aaa
push
xchg
loop
mov
sub
ret
push
push
cmpsb
stos
pop
pop
or
fidivl
mov
and
je
cmc
mov
shrl
ja
sub
push
sbb
iret
dec
scas
jge
xchg
adc
sbb
jbe
jmp
inc
out
mov
in
fcmovnbe
repz
nop
data16
dec
je
test
mov
mov
adc
xchg
adc
fsubr
andl
nop
push
pop
test
cwtl
cmc
cmp
or
out
lret
mov
mov
push
shrl
daa
shll
and
loope
jp
xlat
xor
int3
mov
pop
push
sahf
pop
lods
add
test
inc
movsl
lcall
aas
mov
es
aad
push
rcl
xchg
std
mov
jb
pop
cs
push
scas
push
das
in
add
adc
cmp
lods
sub
and
or
subb
pop
bound
jle
xchg
sahf
jne
mov
ror
loopne
push
xchg
scas
lods
repnz
scas
cltd
pushf
and
push
cmp
out
inc
nop
int3
out
insb
cmpl
out
add
lret
nop
sti
pop
test
loope
or
gs
into
dec
xor
sbb
mov
mov
mov
adc
adc
std
cli
xchg
cs
lret
mov
and
jns
aas
stos
push
push
incl
and
mov
popa
scas
cmp
jp
stos
es
jecxz
lock
pop
mov
sahf
roll
mov
xor
sub
or
les
mov
std
mov
xor
fnstsw
out
mov
imul
loop
cwtl
sub
ja
xor
std
repz
cmp
pusha
rep
and
in
mov
aam
sbb
dec
fmull
aas
xor
out
js
cmpsl
push
arpl
add
add
test
test
aas
jmp
fs
push
xchg
rclb
outsb
cld
cmp
shrb
fs
pop
sti
aas
cld
sbb
mov
movsb
rcrl
jecxz
adc
rcll
out
rorb
sub
int
mov
jo
icebp
and
jb
test
js
jnp
leave
adc
jmp
adc
outsl
std
dec
jb
mov
xchg
data16
hlt
jae
in
xchg
pushf
dec
lock
dec
insb
mov
sub
xlat
jbe
pushf
mov
dec
jle
stos
pop
or
mov
addr16
lcall
jne
imul
push
mov
adc
sub
push
call
iretw
roll
dec
les
int
int3
add
sub
jns
ret
lahf
jmp
mov
iret
inc
jno
je
das
mov
sbb
push
enter
pop
inc
lret
xor
pop
adc
or
jecxz
bound
outsb
and
sub
and
jl
sbb
stc
mov
push
outsb
sub
xchg
pop
pop
push
out
fisttps
mov
sbb
ja
leave
test
mov
sahf
lds
xorl
push
cmp
mov
add
pop
insb
rcr
cmp
jbe
int3
pop
mov
cmp
adc
mov
jno
gs
inc
mov
pinsrw
mov
test
lret
movsb
fisubrs
fwait
sbb
icebp
daa
jbe
rcrb
fs
dec
mov
test
jge
or
test
jno
and
ja
std
mov
jae
cwtl
cmp
ficomps
dec
mov
inc
fs
pop
push
adc
mov
int
popa
inc
movsb
adc
xorb
idivb
in
mov
sarl
xchg
mov
pop
mov
inc
lea
cmpsl
fnstsw
jbe
pop
or
push
test
inc
mov
scas
mov
adc
pop
push
dec
sbb
shrl
jnp
push
pop
pop
icebp
pop
jecxz
es
cld
insl
cmc
sti
and
mov
pop
mov
das
gs
mov
repz
fcomp
fdivr
fcmovne
test
stc
hlt
pop
pop
push
cli
lret
jbe
push
push
roll
or
xor
notl
mov
aad
pushf
iret
push
jle
pop
xor
adc
xlat
inc
int
jnp
mov
popf
in
cmp
mov
push
jge
fisubs
sbb
add
inc
xchg
jbe
not
mov
sbb
pop
addl
adc
loop
push
pusha
pop
add
nop
mov
adc
adc
into
add
out
sub
or
dec
outsl
ljmp
in
imul
sub
ret
cmpsb
stos
mov
rclb
jle
fs
mov
rcll
pop
sar
das
out
test
push
rcrb
lods
sbb
jle
fs
xchg
repnz
xlat
or
inc
mov
out
lea
mov
fiadds
pop
test
in
mov
sub
pop
icebp
sbb
std
inc
dec
iret
pop
xchg
ret
hlt
pop
adc
sti
fnsave
inc
repnz
mov
and
pusha
sahf
sbb
pushf
divl
popa
push
xchg
xchg
pop
test
pop
dec
or
jg
pop
int3
shrl
inc
cmp
mov
xchg
sbb
repnz
mov
dec
lcall
sub
mov
adc
jle
pop
push
aam
push
roll
cwtl
dec
aas
lds
sub
sbb
mov
loopne
cmpsl
outsb
jns
xchg
xor
add
test
mov
out
mov
mov
sub
add
push
push
sti
push
cmpsl
in
lds
push
jge
jecxz
pop
and
je
lret
mov
enter
add
ret
nop
out
ds
lock
ret
cmp
sbbl
cmp
arpl
cli
inc
das
sub
mov
inc
xlat
mov
pop
int
jne
aad
mov
pop
sahf
mov
fwait
inc
outsb
jne
cmpsb
fdivr
lds
cld
inc
add
test
push
xchg
sbb
call
jne
jle
andl
cmp
adc
mov
orl
fisttpl
or
push
push
lds
xor
dec
pop
adc
aas
adc
daa
imul
jmp
movsb
and
pop
adc
sbbl
fisubrs
rcr
movsb
rcrb
or
mov
dec
les
or
cmp
sbb
jb
arpl
jp
mov
fmulp
das
addb
imul
sbb
or
pop
mov
xchg
dec
push
cltd
mov
xchg
sbb
loopne
loope
mov
fcmovnb
xchg
int3
add
or
and
inc
mov
pop
pop
mov
daa
dec
dec
insl
push
pop
sbb
cltd
sbb
in
adc
jns
pop
jne
popf
dec
shll
stos
adc
and
std
xor
and
insl
scas
sbb
les
fcmovb
adc
hlt
sahf
mov
cmp
push
gs
std
and
add
mov
lahf
call
into
hlt
dec
scas
jae
mov
rcrl
sbb
mov
push
fadd
addr16
bswap
ss
jnp
cmp
push
push
adc
icebp
jo
cmp
jle
mov
lods
adc
pop
mov
fldl
cmpsl
dec
sub
xchg
mov
pop
leave
mov
sbb
mov
and
fistps
cmpsl
movsl
into
outsl
and
xchg
and
cwtl
sbb
cmp
insb
in
add
test
sbb
or
pop
aam
lcall
dec
in
xchg
cmp
mov
call
xorl
mov
filds
aas
jno
dec
cltd
hlt
push
add
in
ret
rolb
pop
iret
push
fistps
fmul
and
sub
push
icebp
mov
lods
xor
or
pop
and
dec
lcall
into
push
out
lds
push
aam
jge
fs
out
shll
test
mov
mov
aas
inc
jle
into
psrad
push
inc
inc
outsb
sbb
pusha
jno
ret
mov
in
or
clc
mov
inc
adc
in
push
pop
pusha
mov
xor
and
std
popa
aas
popa
adc
jbe
push
xchg
xor
mov
sbb
vaddps
pop
lds
push
add
dec
cwtl
push
orb
shll
mov
sub
popf
sub
mov
test
fildll
xor
and
inc
test
and
bound
daa
dec
or
les
bnd
mov
add
cmp
adc
xchg
mov
insl
xchg
jle
pushf
adc
cmp
lock
mov
dec
fisubrl
xchg
push
in
loopne
pop
arpl
lods
jmp
ja
idiv
xor
sbb
cmp
loopne
cmp
push
and
sub
dec
call
xchg
cs
aaa
or
call
mov
dec
sbb
pop
fisttpl
popf
mov
int3
sub
inc
daa
or
cmpsb
in
adc
dec
mov
lret
mov
add
push
outsb
or
cltd
mov
jb
or
test
data16
or
outsl
jecxz
push
xchg
add
and
jl
mov
lock
iret
sti
outsb
cmc
mov
xchg
adc
arpl
push
mov
rcll
mov
imul
add
inc
mov
cmp
call
pop
adc
je
xor
or
in
es
sub
fbstp
push
mov
jo
and
das
test
jbe
dec
divl
mov
sub
sub
cmp
cmp
or
jp
inc
imul
mov
mov
leave
cmpsb
xorb
cwtl
xchg
mov
not
cli
adc
scas
in
dec
fbstp
into
add
loopne
adc
jno
gs
mov
inc
bound
add
fwait
cmp
pop
popf
testb
insl
or
loopne
or
cs
mov
add
and
jns
and
adc
mov
pop
out
aad
stos
mov
sarb
test
std
or
out
mov
jo
dec
js
arpl
or
fists
and
add
shl
movsb
jb
sbb
mov
dec
popf
xorb
ljmp
int
jb
insb
sbb
add
or
mov
andb
dec
aaa
mov
sahf
mov
dec
mov
or
adc
cmp
sti
fidivs
fdivp
inc
in
xor
sub
loopne
js
sub
cld
or
imul
sbb
add
out
xlat
shrl
aaa
pop
mov
shrl
lock
adc
push
xchg
aad
pop
stos
mov
insb
add
cs
push
das
sub
popa
test
in
popf
add
jmp
pop
mov
and
adc
int3
insl
ror
out
loopne
loopne
aas
jno
mov
or
mov
movsl
das
or
mov
inc
test
std
sub
cmp
sbb
sub
repnz
mov
aas
mov
fwait
or
add
or
inc
dec
sub
xchg
xor
mov
into
inc
cltd
inc
std
mov
loopne
popa
enter
sar
int3
movsb
sub
mov
push
inc
push
push
mov
sub
jb
mov
mov
push
mov
xor
in
add
mov
push
push
push
add
xchg
xor
cmp
dec
andl
dec
mov
dec
and
test
pushf
sbb
or
cwtl
dec
test
push
bound
xor
aam
and
arpl
cld
movsb
callw
mov
or
pop
movsb
sbb
mov
scas
cmp
dec
push
inc
negb
or
xchg
out
push
mov
into
cli
ja
mov
imul
ja
push
mov
dec
sbb
iret
repz
sbb
and
pop
xchg
test
ljmp
in
ds
stc
xor
push
jmp
mov
cmp
nop
stos
ret
mov
push
mov
or
push
jle
into
clc
insl
cmp
shlb
lods
sub
cli
or
imul
pop
lea
lret
jb
out
add
fisubrl
lret
repz
xor
xchg
add
inc
mov
cld
mov
add
mov
rorb
adc
shrl
pushf
out
push
cwtl
fldl
lods
fidivrs
dec
sbbb
mov
outsl
add
add
outsl
stos
pop
fld
rcrb
sti
push
test
dec
stos
xor
adc
fs
mov
or
nop
les
inc
sarl
in
ds
incl
int3
out
decl
lock
mov
pop
add
js
add
inc
cmp
cmpsl
jbe
shll
jns
cmp
jo
xlat
xchg
mov
loop
add
push
pop
jmp
mov
push
dec
out
jno
push
inc
scas
roll
mov
mov
lret
syscall
dec
sarl
and
notl
int3
fbld
rcll
dec
and
sub
cltd
negl
movsl
movsl
imul
adc
data16
jbe
pop
cmp
xor
sahf
xor
mov
add
ds
push
lahf
sub
add
push
cs
lcall
outsb
and
lret
push
inc
daa
into
int
adc
sub
jbe
rorb
mov
icebp
add
xchg
notb
shlb
xor
and
cli
lods
and
add
dec
or
mov
cmp
es
mov
xchg
mov
push
repz
mov
std
in
jae
sti
cltd
mov
jmp
stos
cmp
cmpsl
sub
sub
repz
pop
test
iret
xor
inc
mov
loop
lds
cmp
in
mov
faddp
sub
std
ret
cmp
shrl
int
inc
leave
xchg
jno
rorb
aaa
cwtl
jp
das
std
lods
je
cmc
gs
loop
pop
in
jns
push
inc
jmp
dec
lds
gs
movsl
sub
cld
or
inc
sahf
pop
dec
mov
mov
bound
mov
arpl
adc
or
jg
data16
mov
mov
inc
sub
pop
int
dec
mov
cli
scas
or
imul
push
mov
inc
cwtl
cmp
xchg
fiaddl
adcl
mov
pop
mov
rcrl
dec
xchg
mov
cmp
and
cmp
xorb
cmovs
fisubl
sbb
adc
pop
mov
lret
popf
clc
pop
xchg
and
sub
andb
jecxz
enter
adc
out
rol
mov
lds
mov
and
iret
data16
imul
and
das
stc
push
addr16
sub
aas
fisubs
jne
push
movsl
lahf
ret
jl
and
inc
fnstenv
fisubrl
in
fnclex
sub
mov
cmp
mov
jecxz
sub
leave
dec
push
and
lods
xorl
push
popa
jl
movsl
xor
pop
add
ljmp
fidivrs
jmp
add
mov
push
loop
jmp
int
in
ret
gs
push
call
mov
outsb
popa
push
jecxz
xor
dec
or
cs
sbb
sub
decl
jmp
push
pop
and
cmpsb
jecxz
sub
inc
ret
frstor
push
sbb
push
mov
mov
or
imul
push
cmp
mov
dec
jl
push
pusha
les
stos
int
movsb
jne
or
mov
bound
and
shll
push
sbb
jbe
mov
or
jg
xor
cmpsb
push
jl,pt
sbb
imul
scas
dec
lock
lcall
clc
adc
lret
jb
pushf
movsb
shrb
sahf
cmc
inc
mov
sub
push
xchg
xchg
mov
pusha
mulb
jnp
loopne
adc
repz
lods
xor
add
aas
mov
jecxz
gs
and
mov
iret
adcb
sbb
mov
mov
inc
subb
fwait
shlb
mov
inc
sbb
jne
pushf
mov
mov
dec
idivb
mov
mov
jecxz
jb
testl
adc
insl
add
dec
std
jnp
movsb
adcl
pop
insb
bound
cmpb
dec
lcallw
mov
ds
sbb
add
adc
jge
xor
test
mov
in
repnz
das
jp
mov
loope
dec
cmpsl
jnp
mov
movsb
sub
fwait
ja
imul
pop
cmc
mov
mov
aam
lds
xor
sub
cmp
push
popa
xchg
add
outsl
ficompl
push
pop
push
mov
bnd
xor
sbb
aam
cs
scas
mov
push
imul
mov
jnp
movsb
add
lods
jle
dec
imul
or
mov
mov
pop
pop
leave
fidivl
rorb
in
decb
inc
add
mov
in
and
mov
or
xor
lahf
pop
cld
dec
lcall
xchg
arpl
cld
imul
cmp
inc
and
divl
mov
addr16
jo
aam
mov
cmp
sbb
icebp
push
mov
inc
dec
xlat
mov
push
in
cmp
ss
pusha
add
ficoms
ljmp
ret
mov
mov
adc
sbb
mov
jle
mov
mov
xchg
hlt
adc
fbld
movsl
xor
xchg
cmp
std
into
test
and
sarb
lret
call
ret
cs
fiaddl
repnz
xor
ds
insl
cmpsb
shl
adc
mov
pop
inc
push
sub
gs
into
lods
inc
add
push
fimull
mov
sub
jne
in
adc
dec
scas
add
cmp
fisubl
inc
mov
test
stc
inc
push
xorl
and
icebp
dec
sub
idivb
push
dec
inc
pusha
xlat
add
adc
ds
dec
out
clc
ss
pop
or
rcrl
lret
in
rclb
gs
dec
add
iret
arpl
cmp
fistps
addr16
dec
out
push
dec
mov
lcall
mov
stos
shrl
iret
mov
mov
xchg
popf
mov
out
ja
dec
iret
jne
xchg
adc
sbb
mov
in
test
int3
leave
push
jne
or
lods
push
shll
xchg
loop
shlb
cltd
ficoml
cmpsb
in
out
dec
jo
xor
jle
sub
dec
iret
inc
lock
jb
mov
fadds
inc
pop
outsb
daa
add
out
rolb
jmp
hlt
jb
int
rolb
arpl
into
pop
cld
rcr
fs
sahf
cs
fdivrs
in
mov
jp
in
mov
fprem1
test
rcll
dec
cld
push
pop
adc
dec
popa
xor
rcrb
cmp
clc
sub
sbb
add
sti
je
repnz
pop
and
add
inc
inc
dec
xchg
int3
fdiv
jg
sub
shl
cld
jae
orb
xchg
add
xchg
jno
mov
jae
xor
dec
push
add
mov
outsl
lahf
ja
sub
cmpsl
sbb
loopne
pop
insl
jnp
push
cmpsl
inc
or
pop
xchg
jae
push
xchg
cld
and
mov
xor
or
adc
sbb
push
dec
mov
aam
test
cld
sbb
xchg
mov
repnz
stc
sahf
ret
adc
fiadds
lcall
push
add
sbbb
or
js
dec
cmp
dec
xchg
cmp
pushf
rol
fidivrl
jp
outsl
add
test
or
dec
mov
mov
repnz
fs
push
or
xlat
mov
cmpsl
cmp
add
mov
nop
and
sub
into
hlt
std
push
test
pusha
inc
stc
xor
adc
clc
icebp
add
adc
cld
insl
sub
lcall
fsubl
inc
xor
cld
fimuls
ficomps
mov
pop
fsubrs
ret
mov
fiaddl
movsl
sets
out
cmp
repnz
mov
pop
adc
xchg
adcl
inc
push
sbb
loopne
jne
push
fnsave
aas
shl
shr
ret
inc
das
pop
cmp
fst
add
stos
jb
jle
cmp
and
sbb
jmp
arpl
fstpl
cwtl
aad
mov
or
bnd
pop
int3
cmp
mov
xchg
mov
ret
sub
jbe
pop
or
loope
negb
mov
sub
mov
lods
push
addb
stos
jns
push
js
mov
push
in
inc
adcl
rclb
mov
out
rorl
lea
incl
cld
xchg
fldl
mov
rcll
sbb
int
pop
enter
subb
inc
mov
dec
bound
jae
out
sbb
in
mov
iret
cmovs
jbe
popa
sub
imulb
dec
pop
popa
push
jbe
jp
mov
cmc
into
and
sbb
cmp
cmp
add
push
scas
or
adc
imul
lahf
mov
dec
push
hlt
sbbb
fstl
inc
out
or
and
mov
je
fstpl
fdivs
cmpsb
pop
add
cmp
insb
xchg
rclb
ffreep
popa
and
cli
pop
scas
push
inc
add
rcrb
sub
sub
pusha
pop
mov
call
fcompl
adcb
mov
push
lods
into
pusha
dec
movsl
mov
jge
mov
mov
xor
jl
aas
adc
inc
inc
test
imul
adc
xchg
fldenv
aas
lret
aas
sub
ret
lods
xor
test
popa
bound
push
xchg
cmp
xchg
inc
cmpsb
dec
popa
jmp
ret
cmpsb
mov
and
jns
inc
lcall
push
xor
frndint
fstpt
pushw
and
pusha
mov
or
sbb
sbbl
push
andb
loopne
jecxz
push
rsqrtps
sbb
or
and
dec
adc
rorb
mov
lea
icebp
mov
mov
and
add
cmp
add
mov
push
mov
inc
mov
xor
dec
popf
imul
aaa
out
mov
adc
rcrl
stc
sbb
test
push
fstp
cmp
ret
sbb
nop
lods
cmp
repz
sub
pop
js
test
call
mov
mov
sbb
dec
or
ficomps
fcmovb
mov
lock
push
js
mov
loop
in
pushl
add
xchg
testl
hlt
adc
mov
or
xchg
jae
call
es
lea
sahf
js
in
dec
jmp
int
aaa
sahf
loopne
test
sub
or
and
sub
jno
jb
sub
push
icebp
lods
int
shrl
push
orb
rcl
fnsave
icebp
jbe
dec
je
dec
or
xor
pop
faddl
int3
mov
in
mov
faddl
loopne
cmpsb
and
shll
clc
sub
js
aas
dec
mov
jecxz
aaa
cmpsl
mov
adc
test
out
hlt
mov
mov
cmpsb
inc
xchg
mov
divb
js
dec
gs
nop
bswap
outsl
scas
push
stc
fistpll
mov
and
jns
mov
xor
daa
sbb
mov
lock
xchg
js
stos
mov
nop
jg
movsb
cmp
cmp
sbb
xor
pop
or
ljmp
jnp
mov
cmc
mov
push
jge
xor
dec
xor
pusha
lret
jnp
pop
adc
or
imul
mov
and
in
inc
leave
test
push
daa
sub
scas
daa
inc
pusha
das
dec
mov
pop
xchg
imul
leave
xchg
dec
lods
push
mov
jecxz
inc
pop
iret
gs
dec
nop
imul
test
int
out
les
push
icebp
push
pushf
neg
mov
sbb
in
xchg
pop
add
lods
xchg
xor
into
mov
fcmovbe
sub
bound
sahf
shl
sub
imul
sbb
lcall
iret
test
mov
adc
push
pop
cltd
inc
das
lret
sti
js
stc
in
out
pop
in
dec
out
test
adc
test
loop
adc
jmp
adc
mov
inc
add
mov
push
into
aam
mov
cld
je
scas
lock
test
stos
clc
jbe
inc
int3
mov
xchg
lahf
xorl
dec
and
pop
pop
iret
pop
dec
clc
out
out
rcrb
test
lds
mov
dec
fmul
cltd
sbb
mov
or
sub
insb
xor
leave
xor
shll
ja
ljmp
outsb
rcrb
jmp
pop
fldcw
fdivp
mov
jg
ret
sbb
push
popf
js
adc
lret
xor
cmp
loop
mul
cmp
xchg
or
imul
cli
mov
lock
jmp
leave
cmpsb
xor
addb
sub
fwait
jns
adc
sub
mov
jecxz
fdivrs
imulb
out
cld
dec
cmp
ljmp
xchg
cmp
lods
jbe
pop
cmp
dec
push
fists
cmp
jo
inc
or
test
jle
push
pop
push
aam
fs
pop
cmpsb
scas
dec
sub
inc
dec
push
xor
jmp
sub
or
xor
out
push
hlt
push
aad
movsb
pushf
iret
icebp
xor
repz
xchg
sub
push
pop
lds
xchg
inc
inc
loopne
icebp
or
mov
lods
jle
sbb
mov
in
sbb
fsubl
push
jo
inc
inc
cmp
out
stc
and
sbb
sbb
xor
movsb
dec
imul
xchg
mov
shrl
mov
xor
adcl
icebp
adc
leave
jg
or
inc
inc
fs
push
shl
push
stos
mov
xor
addl
mov
xor
insl
jg
mov
movsb
xchg
out
cmpsl
sub
push
fs
adc
fcompl
push
mov
scas
dec
daa
mov
push
mov
push
sbb
push
pop
lret
jne
cmp
and
int3
clc
add
fidivs
xor
cmc
ret
clc
int
sub
lcall
push
dec
push
add
gs
xchg
ss
shll
in
xchg
cmp
cld
lahf
lods
sub
aam
js
push
push
stc
jge
sbb
in
sub
movsb
mov
in
hlt
sbb
xchg
lods
stos
sub
out
out
scas
je
test
in
and
lret
int3
pop
adc
or
shlb
nop
xchg
imul
pop
je
adc
fnsave
adc
mov
dec
jp
dec
pop
inc
adc
pushf
or
and
addb
fwait
inc
or
insb
outsl
mov
lods
inc
in
jns
add
mov
or
or
gs
mov
xor
gs
lea
sarb
aam
enter
das
dec
add
mov
add
jnp
mov
mov
es
or
pop
iret
mov
pop
lret
lock
jne
xor
sub
aam
mov
mov
push
and
mov
push
mov
mov
insl
cmp
mov
sub
enter
data16
jecxz
outsb
enter
fwait
mov
cmp
hlt
imul
rcl
pop
push
mov
pop
mov
cld
cmpsl
loope
ljmp
push
cli
clc
popf
mov
cmc
ja
dec
cmpsl
stc
iret
jge
push
xor
push
ffree
lahf
rorl
fcmove
pop
cmp
mov
arpl
and
stos
int3
jg
sti
adc
or
pusha
mov
sbb
cwtl
out
mov
sbb
fwait
mov
jae
popf
clc
in
loop
test
jnp
fs
dec
push
mov
in
fisttps
and
rorl
scas
xor
jle
iret
pop
lahf
cwtl
std
repnz
inc
xorl
fwait
dec
pop
xchg
cmp
lret
adc
mov
cmpsb
pusha
fdivrs
jns
push
sbb
jns
fwait
cmp
cmpsb
xor
sub
loopne
adc
dec
lea
or
add
and
pop
addb
mov
mov
fsts
mov
sbb
xchg
loopne
aaa
sub
mov
enter
out
popf
icebp
ja
cld
clc
pop
test
gs
pop
dec
cmovb
xchg
add
mov
push
out
fldenv
dec
pop
or
int
shll
jl
inc
and
in
lds
mov
jle
out
or
sbb
mov
mov
mov
out
inc
rolb
push
adc
andl
movl
pop
mov
addr16
mov
dec
mov
movsb
pusha
sbb
xorl
pop
iret
mov
loopne
fs
lret
inc
pop
mov
imul
push
jno
popf
inc
imul
mov
xchg
pop
ficoms
pop
shlb
jecxz
mov
xlat
sub
clc
mov
rorb
mov
les
insl
xor
fwait
xor
int
shlb
dec
and
jbe
fldcw
jg
cmp
mov
cli
ret
jns
scas
loop
lods
mov
mov
push
or
add
pop
mov
cmc
pusha
popa
mov
lcall
dec
sti
out
pop
lods
dec
cli
clc
mov
ds
sbb
fistpll
xchg
cmp
or
inc
test
jg
xor
jnp
arpl
push
pop
shl
xchg
dec
cli
dec
ret
jp
ljmp
imul
scas
push
lods
add
mov
out
sbb
cmp
pop
fidivrs
out
shlb
xchg
inc
lcall
cmp
mov
and
or
inc
pop
sub
push
int
jmp
test
adc
ret
iret
das
or
aad
cmp
push
xlat
das
jne
ret
fcompl
xor
rorb
test
fnsave
mov
mov
push
mov
orl
adc
sub
imul
mov
xor
xorl
sub
in
shlb
mov
push
xor
xor
fcompl
popf
cmp
add
sub
ret
xchg
mov
mov
pop
ret
push
push
mov
and
jg
in
mov
sbb
loopne
push
out
push
cwtl
add
or
lret
gs
cmp
jmp
xchg
stos
pop
cmp
mov
fildll
cli
sbb
mov
dec
mov
adc
jnp
pusha
ffree
xchg
psubw
sub
sub
or
ljmp
adc
push
or
nop
xor
pop
stos
cmpsb
js
mov
fdivl
test
mov
jg
push
rol
fsubr
mov
mov
out
and
call
xor
decb
fcoml
fwait
mov
pop
cmp
xchg
dec
xlat
push
and
in
pop
and
adc
cmpb
ljmp
lahf
cmp
aad
dec
pusha
inc
xchg
lods
sbb
les
sahf
in
rcll
jns
push
int
cmc
sbb
and
push
fdivs
and
sbb
jle
loop,pn
rorl
stos
sahf
roll
inc
adc
in
cli
rol
movsl
and
pop
cmp
sbb
inc
sbb
ljmp
jge
push
mov
mov
jbe
scas
nop
push
testb
fwait
and
add
xchg
cmp
add
mov
jo
jnp
hlt
test
vmovdqa
repnz
fidivrs
jo
and
sti
adc
add
dec
sbb
es
or
sub
jnp
xchg
sbb
lret
pop
fnstcw
lret
sbb
sarl
push
xchg
shlb
xor
push
mov
jae
fsubs
ret
pop
repz
push
fistps
testb
sub
inc
jb
pop
cmp
hlt
clc
inc
jns
cmp
cmc
fildll
rolb
stos
push
pop
call
fidivs
pop
fiaddl
nop
int
jae
cmp
movsl
and
aaa
rolb
lock
xor
outsb
mov
pmullw
rorb
out
popf
mov
xchg
je,pn
dec
test
or
popa
lret
mov
sar
mov
into
mov
xchg
sub
rclb
outsb
out
xor
imulb
xor
and
sahf
aaa
pop
daa
stos
jno
xchg
pop
lock
push
jno
push
cmp
jno
sub
lock
mov
jo
pop
fcmovbe
cmpsl
shll
or
fcoms
sahf
add
in
sbb
cltd
fcoml
popa
jae
mov
call
icebp
lret
mov
and
mov
jmp
rclb
cld
daa
test
stc
or
sub
lahf
outsb
push
movsb
jo
les
jo
jb
mov
mov
lock
cwtl
cmc
jge
or
fsubp
ds
inc
cwtl
jp
out
test
pusha
jo
and
jno
jne
scas
xchg
adc
frstor
mov
test
rcr
and
into
or
sbb
mov
sub
dec
adc
js
stc
iret
insb
fs
push
js
iret
out
cmp
pop
pop
xor
and
xor
push
or
xchg
jmp
aad
ja
icebp
add
xor
loopne
iret
je
aas
icebp
sub
dec
push
test
sub
xchg
imul
xchg
movsb
aam
xor
and
jp
jb
test
fdivrl
stos
mov
dec
btr
fistpl
lcall
dec
fidivrl
sub
mov
cli
adc
out
pop
test
shll
test
jns
into
cwtl
fwait
movsl
leave
pushf
mov
adc
adc
or
push
jbe
je
je
in
in
ljmp
push
cmpsb
mov
push
lds
mov
lcall
jl
std
sbb
loopne
mov
cli
pop
mov
dec
pop
stos
loop
and
rcl
inc
rol
inc
push
dec
mov
jb
in
sub
jo
sbb
sbb
cmp
push
int
loop
xor
popf
or
lock
push
mov
daa
sarb
sub
or
ss
fdivrl
inc
and
or
sbb
dec
inc
cmpsl
mov
clc
arpl
ret
dec
int3
mov
add
sbb
shrb
sbb
add
pushf
or
mov
test
jbe
loopne
cmp
ret
push
inc
mov
xchg
fmuls
pop
mov
inc
add
jns
pop
adc
mov
pop
movsl
and
scas
or
add
mov
mov
inc
das
ret
xor
mov
jp
enter
in
gs
inc
mov
sarl
mov
xlat
in
addb
and
jbe
and
adc
in
sbb
cli
leave
cli
sub
mov
test
mov
icebp
dec
push
ret
fsubrs
sahf
ja
fsubrs
test
test
inc
leave
lret
dec
jl
inc
int
xchg
mov
mov
sub
push
and
enter
adc
mov
jl
mov
icebp
jmp
xor
xor
sti
pop
xchg
xchg
les
adc
outsl
pushf
and
dec
or
insb
frstor
or
push
pushf
push
pop
push
fmulp
dec
jae
sarb
sahf
xchg
test
sub
insb
xlat
dec
sub
jnp
clc
sbb
test
ljmp
inc
cwtl
dec
andb
and
ss
or
shlb
inc
add
mov
adc
pushf
test
fistpll
inc
xchg
xor
mov
sub
or
xor
nop
rolb
cmp
hlt
sub
test
std
or
call
fstpt
push
out
cmpsl
imul
ds
dec
dec
mov
add
rcr
mov
stc
cld
inc
sub
aam
icebp
pop
mov
popf
cld
xor
sub
mov
xchg
les
add
sub
add
arpl
xchg
inc
mov
push
aas
mul
enter
iret
fildl
jmp
int
fwait
mov
shlb
adc
cmpsl
mov
insb
pop
daa
aam
push
mov
jnp
fstps
push
dec
cs
incl
push
cwtl
push
hlt
xor
out
test
fsts
lods
jle
xchg
outsl
sbb
sub
or
push
incb
shlb
mov
or
aas
cwtl
push
or
lea
mov
mov
push
rorl
pop
pushf
in
ljmp
lahf
ja
or
lret
scas
in
movsl
or
sbb
jo
mov
stos
adc
push
iret
dec
jb
mov
xor
loop
sbb
or
vpcmpeqw
add
movsl
aad
mov
fwait
mov
movsl
data16
out
mov
push
arpl
aad
xchg
xchg
std
ljmp
shll
adc
ds
cmp
push
or
in
jbe
aad
sbb
mov
or
les
icebp
jp
test
xlat
xlat
test
sbb
call
push
xor
lock
mov
xchg
inc
nop
pushf
loope
lcall
jno
sub
pushaw
or
dec
jl
pop
fwait
sbb
pop
inc
mov
or
cli
ds
sbb
jns
scas
pop
jl
decl
clc
mov
clc
into
insb
pop
enter
jo
mov
je
ret
sbb
jmp
idivl
or
dec
repnz
and
xchg
icebp
and
jo
mov
sbb
jb
sbbl
adc
jbe
imul
mov
fs
iret
sbb
lock
shr
int3
out
mov
mov
enter
inc
push
xchg
jns
into
lods
jmp
in
pop
cmp
inc
cmp
push
sbb
pop
jae
pop
add
cmpsb
cmpb
daa
mov
sub
cmp
std
cltd
fdivrl
mov
enter
dec
jmp
aaa
or
lods
repz
ss
xor
sub
dec
mov
jp
mov
push
mov
out
mov
xor
sub
add
push
push
imul
cltd
iret
xchg
imul
mov
cmc
dec
xchg
add
ljmp
xor
fsubrl
clc
mov
push
fcmove
mov
push
push
mov
hlt
lds
sub
add
addb
mov
adc
dec
popf
inc
or
dec
and
imul
pop
out
mov
leave
lods
push
scas
adc
out
sub
loop
mov
push
jb
out
insb
and
and
jmpw
divb
mov
mov
or
sub
icebp
test
or
dec
aaa
ret
out
jne
xchg
add
jns
rorl
test
ret
push
mov
cmpb
pop
xchg
cmp
icebp
dec
jecxz
mov
add
add
cmpl
jne
rcl
addr16
sarb
scas
jmp
push
inc
enter
mov
mov
std
inc
cmp
sbb
add
add
mov
fwait
dec
fldcw
js
inc
fisttpl
je
lahf
push
test
shl
ret
mov
push
pop
pop
idivb
sbb
cmp
call
inc
jbe
daa
data16
cmp
sarl
jmp
dec
psrlw
dec
push
xor
push
in
push
ds
sub
out
mov
sbb
popf
repz
adc
repz
pop
outsb
idivl
out
mov
inc
divb
test
cltd
out
loope
sbbb
js
sahf
push
sbb
scas
cwtl
mov
mov
cmpsl
or
pop
in
sub
sahf
loopne
jae
inc
pop
popa
movsb
dec
jb
mov
sub
inc
popf
inc
fdivl
lret
sub
scas
jp
es
cmc
lds
orl
add
xchg
popa
lds
jle
add
jbe
sbb
sahf
data16
dec
lock
sbb
cmp
out
sbb
movsb
and
pushf
outsb
bound
pop
and
pusha
mov
inc
xor
xchg
js
inc
cltd
xchg
out
fildl
int3
fwait
inc
pushf
jnp
add
sbb
xor
repz
push
pushf
into
pop
insb
inc
aas
push
out
cmc
cmpsl
ret
xlat
pop
pop
cmp
rorb
outsl
enter
pop
cltd
or
mov
mov
or
push
xchg
mov
mov
rcrl
mov
mov
shl
gs
cwtl
mov
clc
cmc
std
hlt
jno
xor
repnz
loope
in
movsb
aaa
xor
pushf
es
mov
dec
dec
icebp
adc
in
xchg
int3
repz
in
aad
jl
xor
sub
cs
push
push
cmpl
leave
iret
push
or
add
mov
inc
adc
pop
andl
mov
adc
std
xor
adc
push
sub
js
cwtl
cwtl
add
std
js
repz
cmpsb
and
fildl
sbb
dec
xor
xor
es
cmp
jge
clc
aaa
enter
or
lea
in
cmp
clc
adcb
push
inc
aad
lods
setg
sub
dec
fsts
aaa
lea
dec
mov
ljmp
push
sbb
cmp
mov
sbb
lea
mov
jno
sbb
bound
pop
and
rolb
and
pop
stc
mov
mov
pop
sahf
cmp
sbb
cmp
mov
add
sub
mov
test
jecxz
jp
mov
pop
adcl
ss
call
lcall
bound
dec
dec
std
cmp
aas
imul
sahf
push
jo
test
js
enter
ficompl
inc
rorl
add
out
xchg
scas
mov
xchg
sbb
pop
xchg
jbe
sub
aas
jl
sbb
dec
imul
push
add
push
inc
pop
and
ds
mov
mov
add
and
pop
out
push
inc
mov
loopne
cs
lret
jbe
imul
and
hlt
sti
jmp
ljmp
sbb
nop
orb
or
pop
ret
add
das
jecxz
testl
stos
fcmovnu
mov
int
adc
fstl
pop
xchg
mov
pop
xchg
in
lret
test
xchg
adc
push
cs
sbb
add
push
popf
rcr
jb
mov
jl
insl
popf
std
stos
jle
pop
jg
inc
mov
pop
push
out
js
icebp
call
cmp
inc
pop
fwait
mov
data16
roll
lea
adc
outsl
pusha
push
jo
sub
movsl
nop
and
aad
js
dec
xchg
outsl
jb
and
les
fisubl
cmpsb
inc
es
xor
jbe
adc
inc
jge
xchg
leave
xchg
into
stc
rclb
sbb
rorl
shlb
sbb
xor
or
jo
aam
lcall
xlat
jmp
mov
cmp
pushf
std
jo
data16
or
ja
inc
and
cld
aaa
xor
movsl
ficomps
and
sbb
inc
jns
add
dec
or
xor
aas
cmp
fs
cmpsb
mov
mov
sub
inc
pusha
into
xchg
iret
enter
or
jb
pop
fisubl
lret
adc
fidivrs
and
inc
jmp
mov
fsts
aad
shll
aaa
aam
xchg
in
and
inc
jb
adc
or
out
or
dec
loop
xorl
adc
pop
add
fisttpl
repz
pop
jl
je
adc
aam
ljmp
push
push
sbb
in
push
adc
lahf
filds
mov
enter
mov
pop
xchg
bound
jp
icebp
cmpb
cmp
add
lret
jnp
lods
sbb
ficomps
mov
add
aad
cltd
addr16
sbb
lahf
into
adc
out
or
and
mov
repz
call
daa
cltd
jl
add
push
xor
jmp
daa
test
dec
movsb
ds
cmc
pop
popf
jmp
loopne
sub
cmp
imul
mov
xchg
pushf
aad
dec
test
adc
loope
pop
pusha
inc
pushf
and
pusha
jnp
fldenv
cmpsb
jecxz
dec
and
movsb
cld
inc
ret
lea
iret
mov
mov
xchg
inc
mov
lds
shl
shlb
shlb
mov
or
imulb
in
sub
repz
push
push
les
lods
sbb
pusha
into
sub
test
insl
and
out
cmp
pop
adc
inc
xor
mov
adc
loop
enter
push
movl
pop
mov
dec
adc
mov
mov
pop
mov
clc
mov
adc
sub
jnp
mov
mov
test
adc
pop
sub
out
sbb
test
jle
xor
adc
cmp
sbb
lcall
repnz
test
or
dec
add
xchg
add
jg
ljmp
lods
xorl
popf
cmp
or
push
adc
arpl
mov
fwait
push
inc
les
inc
lock
lods
jmp
and
daa
jmp
pushf
xlat
lds
jp
jmp
pop
pop
adcl
adc
test
lds
xor
add
movsl
jnp
in
lcall
xor
aad
hlt
call
pusha
jb
add
xchg
stos
or
sbbl
pop
jbe
fildl
div
pop
mov
shr
sub
fcoms
rorl
outsl
xor
jbe
sbb
inc
sbb
mov
mov
pop
and
cmp
and
sbb
out
mov
addr16
dec
add
pop
pushf
mov
fucomip
mov
add
cmp
xchg
sbb
mov
sbb
xchg
jle
mov
sbb
or
jno
outsl
pop
fildll
mov
aad
imulb
sbb
jp
add
sti
addr16
negb
mov
sbb
add
das
jg,pt
nop
popf
add
enter
lret
xchg
cmp
test
jmp
pop
xorl
or
in
dec
cmpsb
movsl
iret
lods
mov
xchg
int
dec
sub
addr16
cltd
pop
inc
or
mov
pop
inc
cmp
cs
push
std
inc
inc
and
pop
mov
icebp
xchg
leave
insb
or
mov
cmp
aas
add
outsb
vpsrld
push
fld
es
inc
insb
arpl
push
shll
inc
xchg
jno
sbb
add
lcall
in
cli
add
mov
jne
das
mov
sub
pusha
insl
push
pop
mov
sbb
mov
sbb
mov
scas
pusha
pop
arpl
and
imul
pop
lret
dec
jns
pop
scas
inc
fs
xor
loopne
mov
jbe
dec
scas
ljmp
lods
fstl
pop
jns
pusha
popf
pushf
testl
daa
dec
and
int3
fnstenv
jle
sbb
adc
insb
xor
push
jne
pop
fiadds
push
jg
pop
divb
imul
jecxz
mull
push
lea
push
dec
aad
inc
je
ds
jle
push
dec
push
das
push
or
mov
lock
dec
int3
andl
mov
pop
push
mov
xor
push
xor
jb
mov
or
add
add
in
add
push
es
mov
xchg
out
sti
jge
orl
cs
loope
xchg
and
xchg
or
mov
push
cmpsb
xor
sub
bound
mov
adc
lods
push
xchg
adc
push
fwait
cmpsl
das
xor
pushf
pop
loopne
mov
sti
inc
daa
adc
mov
popf
add
xor
jg
shrb
mov
inc
xchg
pop
imul
adc
pop
dec
sub
push
dec
testb
int
out
jle,pt
outsb
sbb
push
inc
int
mov
and
cli
xorb
hlt
jnp
push
andb
test
jecxz
inc
fsubs
jecxz
mov
add
fwait
inc
cwtl
xor
aad
ret
stc
int
sub
cwtl
push
iret
inc
add
loope
cli
gs
ficoml
pop
pop
les
popf
xchg
aaa
jmp
icebp
jmp
out
icebp
lock
bound
lock
sbb
leave
push
lahf
lea
xor
outsl
jbe
xor
inc
cmp
mov
push
mov
aad
mov
subl
ficoml
test
scas
dec
and
arpl
mov
ja
das
xchg
lds
xorl
jnp
cs
push
xor
out
shll
cld
dec
push
fdivr
push
and
jp
or
outsl
mov
outsl
and
cmc
jae
mov
dec
ficoms
mov
xchg
mov
mov
in
fs
inc
scas
fld
ss
sub
or
stos
decl
xchg
mov
push
mov
loop
xchg
fnstenv
aaa
stos
pop
xor
test
jae
add
rorl
push
mov
gs
movsl
push
data16
push
and
addr16
outsl
xchg
int
int3
insl
mov
sbb
loopne
lds
cld
les
or
fxch
test
mov
std
icebp
fiadds
leave
inc
add
dec
lahf
insb
addl
mov
xor
pop
cmpsb
cli
push
lea
ja
sahf
dec
jle
sbb
ret
push
pushf
xchg
jmp
jecxz
sarb
int3
in
add
add
push
out
mov
mov
adcl
rcrb
cmp
loop
cmpsl
mov
mov
insl
stc
mov
fildl
add
pop
je
jbe
jp
ss
aad
pop
inc
inc
fs
mov
push
cmc
pop
xchg
lahf
dec
pushf
vandnps
bound
stos
movsl
mov
or
cld
sub
stc
push
adc
test
roll
inc
jo
pop
ret
dec
pop
dec
ja
std
leave
and
sub
ljmp
cmpb
bound
push
pop
xchg
inc
adc
jl
add
mov
iret
fnstenv
pop
jno
shll
mov
add
push
movsl
int3
inc
add
or
pop
pushf
imul
cli
ja
data16
or
add
add
xchg
inc
xchg
shrb
xrelease
aad
inc
adc
int3
scas
call
lret
insl
sarl
shll
jns
dec
notb
push
add
pop
pop
dec
lahf
pop
int3
into
cmp
mov
or
ficompl
mov
fdivp
sarb
cmp
mov
outsb
xor
ljmp
out
mov
mov
insb
push
pop
fwait
mov
jge
fwait
aam
jno
stos
and
jmp
cmp
in
xor
mov
push
es
inc
mov
xor
outsb
xlat
sarb
jbe
or
in
xchg
mov
jp
lret
cmp
add
outsb
adcb
adc
jmp
clc
aad
call
std
stos
scas
adc
loop
stc
cmp
inc
sbb
jo
inc
mov
adc
cmp
cwtl
movsb
push
mov
shl
sahf
dec
inc
inc
mov
repnz
pop
in
out
jo
push
sarb
imulb
and
xchg
push
sahf
mov
cmp
mov
xor
roll
mov
in
xchg
sbb
mov
adc
lcall
and
inc
jno
fsubrl
stc
imul
pop
repnz
mov
cld
mov
mov
div
sbb
out
cs
mov
stos
sbb
mov
scas
jmp
or
mov
inc
imul
mov
lods
sub
push
mov
adc
mov
jb
pop
xchg
shll
adc
mov
negb
out
std
adc
mov
cmp
mov
das
data16
and
cmpsb
xlat
push
mov
int3
stos
dec
lcall
pop
push
or
pop
sarb
dec
fsubr
inc
fiaddl
cld
sub
in
jmp
shll
and
mov
fiadds
pop
sub
add
sbb
mov
fyl2xp1
or
ret
dec
jle
xchg
aaa
mov
adc
or
cmp
pop
pop
cmp
mov
rcrb
pop
bnd
mov
jge
pushf
jb
in
ss
fbld
jae
mov
mov
repnz
xor
shll
popf
ss
push
cmc
iret
ret
in
das
test
lret
cmp
je
int3
or
cwtl
ss
popa
loopne
lea
enter
fs
jmp
pop
dec
js
push
mov
xchg
sbb
cmp
sub
pop
cmp
pop
xchg
mov
fiaddl
out
dec
and
lea
das
mov
rcrb
mov
mov
sbbb
adc
jne
js
ss
jecxz
pop
jo
pop
pop
adc
add
add
ds
push
pusha
dec
inc
and
enter
mov
xchg
insb
lahf
sub
icebp
movsl
pop
arpl
fidivrl
xor
sub
imull
dec
mov
push
push
mov
loopne
sbb
xor
fld
loopne
or
test
pop
add
loope
scas
jns
js
push
and
dec
pop
rcll
and
int
sub
adc
repnz
jecxz
roll
imul
aaa
mov
testl
mov
cmp
inc
cmp
and
xchg
cmc
xor
jp
xlat
push
or
and
out
or
xlat
xlat
pop
cs
cmp
sub
mov
iret
pop
mov
lods
sub
lret
sbb
xchg
cld
mov
jp
adc
jne
mov
jmp
lret
and
jge
jbe
or
push
xchg
cmp
inc
jmp
stos
jg
out
cwtl
das
lock
lds
and
into
aad
aaa
push
mov
pop
mov
add
jmp
repz
cmpsl
ds
mov
imul
fsubrl
jle
leave
inc
fcmovne
jnp
cmp
add
mov
call
cmp
jge
lahf
sub
dec
cmp
arpl
add
mov
pop
mov
lahf
dec
fadds
jl
and
xor
aam
stos
adc
adc
cmp
iret
out
icebp
pop
roll
mov
jge
cs
out
xlat
mov
test
xchg
movsl
jo
adc
stos
leave
push
pop
cli
andl
mov
sbb
cld
movsl
mov
in
int
or
sub
inc
mov
iret
cmp
xchg
ret
jo
add
pusha
outsb
ret
sbb
gs
pop
mov
popa
cmpsb
in
push
lea
test
nop
js
adc
jg
cmp
adc
cmp
adc
pop
cmc
mov
mov
sub
ja
or
pop
iret
enter
in
mov
sbb
aaa
cmpsb
mov
pusha
push
sub
add
fldcw
int
mov
or
mov
rcr
cltd
popf
stc
out
and
jno
adc
jb
cmp
imul
rcrb
sti
mov
je
int3
repz
in
loope
cmp
lahf
xchg
cld
or
mov
aas
or
outsb
mov
iret
adc
mov
test
inc
pushf
dec
fiadds
scas
mov
imul
sahf
ss
add
pusha
dec
inc
sbb
cmp
xchg
xor
sub
xchg
dec
cmp
adc
bound
inc
xchg
sub
lret
icebp
mov
lcall
sub
fsts
push
sarl
sbb
cwtl
adc
mov
les
sub
mov
push
cltd
repnz
xor
es
mov
xchg
dec
mov
cmpsl
fadd
les
sbb
insl
inc
and
cltd
jmp
sbb
xor
lea
add
push
pushf
sub
mov
add
pop
ret
mov
lock
jmp
dec
sub
cltd
lock
and
cmp
push
jo
dec
push
jg
fsubs
push
repz
adc
icebp
jg
or
pop
cmp
outsb
loopne
cmp
push
sub
or
ja
xchg
inc
dec
mov
aas
mov
push
int
pop
pop
and
and
insl
pop
icebp
ds
xchg
push
xor
jmp
dec
adc
sbb
sub
test
xor
insl
jle
in
xchg
pop
insl
sbb
test
xchg
jecxz
insb
aas
ljmp
xchg
mov
and
jne
xchg
xor
dec
cwtl
stc
sbb
xchg
bound
fs
scas
sbbb
inc
mov
adc
popf
mov
mov
jmp
stos
cli
push
mov
std
xchg
mov
stc
add
mov
shl
hlt
xchg
push
sub
fcomp
sub
cwtl
xchg
adc
cwtl
push
xor
push
icebp
inc
cmp
cmp
loope
sbb
and
jp
in
stos
cmp
cmp
ljmp
sbb
inc
or
xor
outsb
and
xchg
pusha
ret
imul
in
insl
sbbb
movsl
enter
aaa
negl
jp
xor
cmp
cltd
daa
dec
pop
or
jp
mov
mov
mov
in
bound
push
cltd
push
fmul
ja
mov
imul
cmpsb
daa
jo
inc
adc
es
lock
inc
nop
sahf
orl
sbb
cmpsb
fistpl
stos
xchg
jbe
mov
ljmp
je
jecxz
mov
ret
jmp
aad
sbb
or
mov
add
mov
adc
adc
xor
pop
leave
or
jg
into
jge
xchg
inc
push
and
fiadds
push
and
lret
pushf
mov
imul
xchg
xchg
adc
mov
xor
push
sub
cli
jp
push
mov
std
insb
sahf
or
cli
popf
lret
push
hlt
mov
dec
jo
mov
das
repz
stos
jmp
std
repnz
test
imul
fmul
imul
jg
in
pop
mov
aam
mov
mov
cmpsl
push
in
inc
inc
mov
dec
popf
push
or
lea
add
adcl
cmp
ss
aam
fsubr
filds
pop
lcall
std
xchg
inc
jp
xchg
shlb
push
mov
ret
mov
push
int
ret
jbe
ds
mov
js
jp
or
and
mov
and
lret
imul
lcall
pop
lods
data16
adcl
xchg
push
nop
fdivp
lcall
cmc
in
mov
jo
push
xchg
xchg
in
aam
cmc
insb
push
inc
movsb
jns
gs
fsubr
sbb
scas
pop
jmp
shrb
lods
xor
cmp
or
lea
dec
xor
add
push
and
fldl
pushf
aad
lret
mov
lahf
jns
insl
mov
jl
push
jle
sub
or
inc
ror
inc
xor
xchg
inc
push
loope
push
inc
movsl
outsl
inc
jp
jmp
push
inc
push
out
sbb
sarb
shrl
dec
or
jmp
xor
pushf
jae
lods
mov
lods
repnz
lods
pop
push
mov
outsb
xor
push
sub
sub
std
ret
adc
ficoms
decb
push
xchg
cli
xlat
mov
loope
insl
std
pushf
je
fsts
test
adc
push
call
call
pop
lret
jp
insb
sub
and
jo
fmul
mov
int3
cltd
adc
jmp
push
mov
cmc
jge
repnz
mov
xlat
stos
jmp
xchg
cli
mov
mov
lahf
pop
dec
lock
mov
sub
fists
leave
loop
dec
int
mov
lea
sub
ja
aam
cmp
jns
xchg
sahf
ja
xor
andb
js
negb
push
xchg
loope
mov
gs
int3
fstps
pop
mov
jns
insb
add
mov
lret
arpl
jbe
pavgw
ret
jb
push
pusha
jbe
mov
xchg
stc
les
adc
mov
mov
notl
movlps
movsl
pop
out
jge
repnz
sbb
rcll
repnz
pop
ret
pop
fstps
dec
subl
xor
lcall
cwtl
out
xchg
fwait
ss
xchg
ja
ja
shr
mov
cmp
jp
xchg
dec
mov
mov
nop
in
or
insl
test
cwtl
mov
jo
addr16
mov
mov
mov
cmp
mov
orl
mov
stos
adc
fbld
xor
jnp
xchg
jge
xchg
popf
add
mov
mov
xor
sub
push
lods
dec
xor
cmp
mov
inc
push
push
sti
cmp
leave
outsl
adc
sbb
lds
pop
jge
ficoml
loopne
mov
xor
scas
int
ja
add
push
push
inc
adc
lcall
fwait
jno
pop
addr16
push
das
mov
xchg
nop
out
inc
fwait
sbbb
mov
add
or
int
and
loopne
xor
clc
rcrl
std
dec
and
and
xchg
ret
and
add
shll
outsb
rcll
dec
cli
pusha
or
push
fiadds
data16
pop
xchg
aad
cltd
ds
imul
xchg
adc
push
xor
push
mov
mov
adc
scas
mov
adc
push
stos
mov
push
inc
sbb
jo
loop
push
lea
aaa
jg
mov
test
xor
inc
pop
fnstenv
sub
cmp
cmp
ds
lods
mov
sahf
adc
popa
cmc
sub
jns
gs
nop
xchg
fldt
mov
andl
clc
and
loope
out
ret
push
and
leave
pusha
xor
dec
pop
loop
xor
out
out
jnp
inc
addr16
xor
das
loop
jge
lods
int3
fisttpl
call
jge
inc
cmp
dec
mov
outsl
ret
movswl
jle
fiaddl
mov
and
add
or
xor
xlat
mov
mov
push
or
jb
sub
dec
mov
scas
sub
das
mov
dec
or
sub
cs
inc
subb
xor
jg
jmp
pop
ror
jecxz
jns
pop
lcall
call
pop
dec
xchg
div
test
lods
std
cmp
stc
rorl
jmp
adc
adcl
xchg
repnz
outsl
aas
xchg
rorb
pop
aas
jbe
insl
imul
das
mov
push
push
data16
stos
xor
add
inc
in
daa
mov
push
shr
jge
push
push
sub
adc
xor
outsb
sahf
xchg
jmp
pop
cmp
call
pushf
cmpb
xor
sbb
addr16
push
lds
sbb
xchg
shlb
mov
push
stos
aam
mov
mov
aad
rclb
sbb
scas
out
repnz
in
outsl
mov
xchg
adc
repz
push
in
fs
sub
mov
fmuls
cmc
sbb
sbb
test
aaa
pusha
stc
jns
mov
lock
ret
cmp
push
nop
out
loope
push
sarl
pushf
and
test
call
sbb
cltd
xor
test
push
das
dec
fistpl
stos
push
icebp
cld
dec
xor
push
ret
es
pop
adc
cltd
lret
ret
lods
mov
mov
dec
dec
mov
nop
xlat
test
movsb
dec
adc
mov
mov
pop
lret
data16
mov
add
mov
adc
lret
fisubrl
add
scas
dec
lahf
pop
xchg
push
sbb
cltd
jnp
lds
cmp
push
xchg
aas
ffree
mov
cmpsb
in
inc
movsl
imul
aad
shlb
xor
int3
mov
lcall
sbb
mov
lock
icebp
cs
mov
sarb
daa
arpl
and
loope
outsl
cmpsb
out
mov
xor
shl
jl
aam
mov
mov
xchg
lds
enter
mov
arpl
push
mov
call
push
mov
jle
mov
dec
lds
lcall
in
hlt
xchg
fstps
xchg
mov
xlat
fdivrs
or
push
jno
clc
xor
sbb
jne
mov
cmp
insl
in
push
dec
into
and
sub
pop
stc
dec
inc
mov
cwtl
out
shlb
outsb
fisubl
mov
mov
lcall
pop
and
and
add
xor
dec
fnsave
xchg
inc
pop
arpl
xchg
rorb
mov
mov
mov
mov
cmp
pusha
cmp
repnz
dec
int3
es
lods
dec
outsl
fs
xchg
xchg
mov
lahf
push
and
dec
mov
cmp
stos
outsb
push
test
lcall
mov
mov
pop
int
cli
xchg
sub
jbe
sub
shrb
jecxz
pop
mov
into
pop
push
nop
dec
es
add
dec
sbb
add
in
jnp
jne
and
add
mov
mov
pop
shrl
ja,pt
sub
jg
stos
sub
hlt
xor
out
xchg
xchg
imul
pop
pop
pop
fwait
ret
pop
mov
test
add
scas
repnz
jmp
mov
into
sub
test
dec
out
addb
jg
mov
sub
enter
lret
pop
arpl
jecxz
lods
daa
stos
pop
sbb
jl
loopne
scas
jmp
imul
test
out
or
dec
jb
std
jno
or
jmp
es
adc
pop
jb
dec
cld
loopne
pop
xor
sub
ret
jmp
add
or
sar
mov
hlt
inc
xchg
pop
sbb
cmp
ret
imul
inc
cmp
jecxz
daa
fisttpll
and
std
xchg
bound
movsl
cmovs
imul
out
or
jle
imul
enter
test
nop
jl
aaa
faddp
out
pushf
xchg
inc
xchg
lret
andl
or
loop
xlat
dec
adc
xor
arpl
leave
mov
mov
ljmp
mov
scas
int
inc
test
inc
xor
nop
popa
xchg
mov
inc
pop
sbb
sub
data16
pop
rcrb
push
rolb
mov
sbb
pop
shll
lock
mov
jnp
pop
leave
mov
popf
mov
jp
lds
lcall
fisubrl
fldt
in
dec
loope
mov
sahf
fs
lcall
and
lea
arpl
cmp
mov
mov
adc
arpl
ret
cmpsb
in
cmp
loop
mov
adc
xchg
and
into
pop
aas
pop
jecxz
mov
jge
aas
xor
pusha
fisubrl
dec
lock
xchg
dec
mov
es
nop
out
fldl
int
add
bound
push
mov
mov
mov
xor
push
outsb
rcl
xor
push
popf
loope
xchg
cmpsb
xchg
pop
data16
shlb
aam
and
sub
loop
push
pop
add
addr16
sbb
cmc
and
leave
pop
lds
test
dec
mov
or
insb
push
sbb
push
push
or
popa
sub
in
ljmp
push
int
adc
test
inc
gs
push
call
lods
addb
jg
mov
movsb
movsb
xor
mov
lahf
loope
xchg
lea
push
fwait
jo
cmp
cmpsl
xchg
mov
test
and
aaa
mov
cmpsb
repnz
ss
pop
inc
sbb
fistpl
ds
mov
aas
pop
imul
lret
lret
jnp
and
jnp
sub
in
or
inc
mov
adc
and
mov
mov
outsl
inc
mov
cmpsl
outsl
outsb
sbb
aam
fsubrl
cmp
jne
mov
icebp
nop
pop
add
mov
ja
sub
jne
hlt
cmp
adc
mov
mov
rolb
js
jecxz
adc
dec
add
in
out
jo
cmpsb
mov
stos
fldcw
push
xor
outsb
call
or
testb
dec
int
mov
push
scas
js
xor
addr16
sub
xchg
mov
mov
bound
mov
xchg
icebp
jl
test
and
and
add
mov
dec
imul
test
pushf
in
out
sub
in
ljmp
jecxz
dec
insb
inc
push
push
inc
and
dec
fistpll
movsb
data16
xchg
push
pop
aaa
enter
les
mov
nop
ja
mov
add
cmp
add
push
les
and
insl
sub
mov
sub
jbe
xor
jp
inc
neg
fdivp
mov
and
pop
push
out
outsb
xchg
and
fiadds
dec
cmp
sub
jmp
in
dec
mov
scas
xchg
jl
repnz
jae
lahf
test
cmp
mov
popa
ljmp
insb
sbbb
notl
xchg
adcb
ret
icebp
or
mov
stc
jno
shrl
mov
fldcw
icebp
jnp
aad
push
sahf
mov
cmp
adc
in
mov
subl
sub
xor
and
sbb
test
add
jg
cmpsl
into
push
mov
push
xorl
or
push
jecxz
xchg
dec
sub
iret
ljmp
scas
pop
or
pop
sub
jle
jmp
mov
pop
xchg
popf
fidivl
pop
or
leave
int
push
mov
or
leave
and
seta
jbe
aas
pop
adc
daa
lock
push
cld
into
fldt
data16
arpl
outsb
mov
mov
pusha
or
add
pop
aas
push
rclb
ds
mov
outsl
imul
lods
fistpll
stos
cmp
xchg
and
mul
mov
or
adc
jbe
mov
imul
sub
sub
mov
rcll
mov
sbb
enter
mov
xchg
repnz
movsb
jmp
dec
lahf
add
fldcw
push
je
popf
test
mov
xchg
xor
push
popf
add
mov
mov
fildl
xchg
bound
add
push
sti
sbb
ficompl
out
add
add
fs
dec
lret
cmp
sub
enter
xor
push
xchg
gs
lock
mov
sahf
dec
orl
mov
mov
out
push
mov
stc
jge
xchg
outsl
push
clc
adc
fisubrs
mov
movsb
mov
lea
sbb
mov
xchg
inc
fiadds
mov
call
lea
rcrb
mov
addr16
stos
outsb
fstl
dec
pushw
addl
fildl
pop
jne
mov
mov
int3
xrelease
pop
pushf
scas
ja
out
inc
fmull
mov
xor
xor
aam
rorl
dec
out
xor
clc
repz
lds
pop
in
and
pop
adc
dec
mov
jg
aas
xor
enter
add
stc
mov
add
out
push
movsb
mov
clc
push
sub
xchg
add
jae
xor
and
movzbl
fs
inc
sub
mov
cmp
mov
jns
fiaddl
inc
or
ja
dec
mov
neg
push
fldl
xchg
inc
sub
mov
or
pop
sbb
rclb
es
in
cmpsl
pop
lea
repz
add
mov
xor
mov
and
stos
add
sbb
xchg
jmp
xchg
jmp
lahf
imul
movsb
cwtl
lret
out
sub
out
cmp
fbstp
insl
or
test
mov
aaa
and
lds
lods
push
aad
in
mov
mov
in
das
adc
ljmp
pop
mov
mov
std
sbb
mov
addr16
lahf
sub
mov
mov
mul
adc
push
stos
aas
or
pop
inc
popf
sub
inc
xchg
push
sti
or
xchg
out
push
mov
cmp
dec
pop
pop
fidivrl
mov
push
repnz
ret
or
popa
pop
ret
rorl
jae
aas
loope
and
nop
cmovg
jbe
dec
mov
push
pop
mov
xchg
cmc
mov
jl
in
push
imul
inc
rolb
jge
cmp
sti
and
push
sub
in
adc
mov
push
and
mov
popa
dec
and
cmp
test
test
pop
jno
xchg
test
mov
movb
negl
pop
rclb
sbb
pop
cmpsb
push
push
ret
inc
repnz
ret
scas
inc
push
fcomps
imul
adc
out
adc
xchg
stos
mov
pop
push
adc
loope
int
mov
push
js
sub
insl
dec
daa
sbb
aad
jmp
jmp
lods
mov
pop
js
and
xchg
cld
hlt
dec
sub
push
fisttps
inc
inc
and
mov
mov
sahf
in
jno
jp
nop
cmp
xchg
mov
shrl
movsb
rcrl
or
push
fsubrl
cmp
mov
cs
sbb
mov
gs
and
ja
sbb
mov
test
jo
pop
and
insl
aam
aam
int3
push
int
das
pop
arpl
mov
neg
mov
into
data16
sub
stc
cmpsb
leave
pop
mov
int3
sub
dec
nop
sbb
sbb
cmp
cmpsl
negl
in
cmc
mov
jne
sbb
cltd
pop
test
loop
popa
xchg
cmp
hlt
rcrl
inc
mov
jne
insb
negb
out
lret
pushl
xor
gs
aam
inc
xchg
and
mov
dec
cmp
jp
pop
pop
dec
mov
mov
addr16
xchg
jle
inc
arpl
out
ss
and
lds
and
mov
fsubrl
fnstsw
ret
inc
loop
ficomps
mov
scas
and
xchg
js
sbb
push
dec
dec
test
cs
mov
xor
cmp
aad
fidivl
or
xor
mov
nop
or
clc
cmp
push
sbb
ja
and
rcrb
cmp
or
outsl
fidivrs
cmp
lock
popf
push
testb
loop
mov
push
fdivrs
push
cld
push
push
mov
lret
add
push
mov
inc
das
add
out
sahf
jmp
sbb
ss
push
add
fisubl
mov
jp
dec
jo
mov
jnp
js
or
pop
pop
xor
cld
push
lods
add
sbb
mov
xchg
lcall
gs
xchg
jle
pusha
shrb
repnz
mov
outsl
cwtl
inc
jnp
insb
call
sub
jge
mov
xchg
dec
cmp
jecxz
xor
ljmp
jg
push
jbe
movsb
mov
pusha
andb
cmc
cmp
ficoml
out
sbb
jo
xchg
xchg
push
cmc
loope
shrb
or
jmp
lret
in
mov
mov
ret
mov
jns
sub
fistl
dec
pop
push
xchg
inc
xchg
jle
jmp
jae
xchg
add
outsl
das
mov
pop
mov
mov
push
leave
cmp
fs
mov
iret
mov
test
add
lret
and
mov
and
sti
adc
jge
js
push
pop
scas
push
sahf
dec
cmc
cmp
and
lock
lret
pushf
pusha
inc
xchg
push
loope
loop
push
cmp
sub
push
cld
mov
mov
add
rcrl
cmp
cmp
xor
fistpl
lret
aam
push
lret
out
int
xchg
cmp
adc
and
sbb
push
add
pop
and
test
adc
lret
sbb
cmc
inc
mov
cmpsb
add
sub
xchg
pusha
mov
in
xor
outsb
cmpl
add
and
inc
dec
or
nop
cwtl
dec
push
mov
dec
or
sub
dec
or
ret
sub
loop
xor
add
out
adc
pusha
jae
rcrl
xchg
jp
mov
add
xor
test
cmp
jle
mov
outsl
sub
daa
mov
rcrl
int
movd
test
gs
and
les
jg
out
inc
fstps
les
dec
or
add
push
icebp
loope
lret
lret
inc
xor
pop
jns
sahf
fs
je
cmpsl
das
cmp
mov
jnp
add
sub
inc
mov
das
jo
mul
mov
mulb
and
cmp
movsb
inc
xor
sahf
scas
mov
jbe
insl
mov
loopne
or
insb
dec
fsubs
outsb
mov
push
mov
push
and
popf
push
or
mov
sub
in
sbb
mov
int
jo
lcall
inc
push
test
push
pop
dec
insb
fsubrs
clc
mov
movsl
loopne
dec
add
notl
imul
xchg
incb
xor
jb
xor
push
or
pop
lret
xchg
xorl
xor
insb
push
push
dec
mov
rcl
sub
pushl
test
fistpl
loop
orl
cmp
addr16
adc
xchg
orl
mov
xchg
test
lods
aam
push
jbe
dec
shlb
xchg
push
mov
and
mov
push
pusha
dec
xchg
imul
fcmovnbe
int3
pop
push
mov
shl
mov
clc
sbb
inc
dec
mov
adc
jg
cmp
jne
clc
cld
xor
mov
mov
popf
daa
inc
or
addb
jbe
mov
mov
lock
fcmovne
stos
jle
out
dec
in
in
adc
lods
repz
sbb
shl
int3
push
sub
sti
sahf
decl
sub
aam
fstps
mov
loope
sub
das
enter
movsl
inc
jle
cmpsl
xchg
out
push
and
mov
mov
dec
jns
add
xorl
cmpsb
inc
xor
adc
and
push
add
mov
lahf
push
jle
sbb
ljmp
sbb
fs
push
add
stos
mov
inc
out
xor
movsl
sub
xor
inc
jb
movsl
sub
pop
lcall
int3
roll
fmul
adc
fistpll
mov
pop
xchg
daa
xor
push
sbb
xchg
jb
mov
and
fistpll
mov
cmpsl
repnz
imul
xor
pop
fucomip
stc
cmpb
mov
mov
lds
and
sub
mov
adcb
sbb
sti
xor
jnp
pop
pop
cli
dec
jo
test
or
dec
xchg
xor
xchg
pop
cmp
popf
cmp
add
mov
cwtl
out
dec
push
outsb
xor
clc
fidivrl
xchg
or
lods
xor
addr16
xchg
inc
pop
pop
sbb
mov
push
push
dec
icebp
shlb
sbb
mov
out
mov
push
arpl
add
xchg
std
stos
test
push
stos
inc
dec
pop
sub
movsb
int
lcall
mov
stos
xor
push
mov
leave
lds
mov
pop
lcall
popa
push
scas
inc
pop
aam
call
int
jg
cltd
sbb
cmp
xor
repz
push
mul
sbb
sub
dec
test
mov
shl
fwait
cmp
test
loop
pop
jno
out
jg
jne
daa
bswap
test
xchg
xor
pushf
push
mov
lcall
daa
cli
fidivl
cs
fsubs
cld
test
mov
cli
pop
sub
out
sbb
mov
dec
inc
das
pop
push
push
jns
out
and
loope
push
mov
ud1
aas
pop
jne
pop
adc
repz
push
adc
dec
arpl
idiv
lds
cmp
push
and
out
pop
jge
or
mov
gs
subb
test
inc
jnp
and
addl
pop
sahf
movsb
es
xchg
je
jecxz
pop
cwtl
in
mov
push
hlt
push
dec
sti
movsb
sahf
push
and
jl
je
icebp
idivl
stos
dec
push
in
jmp
mov
mov
sub
adc
add
sub
push
jo
shll
xchg
out
fsubr
lods
mov
loop
les
xor
xor
sahf
data16
push
pop
call
jp
data16
into
push
xor
adc
bound
fidivrs
adc
pop
pop
jo
push
sub
mov
ror
mov
xchg
fst
stos
push
jl
push
sbb
mov
je
pop
or
cmp
daa
int
test
jae
push
shll
push
in
lds
mov
xchg
add
cmc
and
scas
into
decb
repz
or
push
loop
dec
cs
or
mov
lahf
add
and
mov
dec
clc
leave
icebp
mov
push
and
lock
out
leave
xor
test
in
scas
mov
inc
push
push
in
cs
loopne
out
stos
xor
or
fiadds
arpl
xchg
pop
mov
out
scas
das
insb
sub
mov
sbb
mov
sarb
scas
shrl
adc
sub
xchg
loop
mov
mov
add
shrb
nop
icebp
push
pop
popf
cmp
mov
mov
test
movsl
push
in
leave
sbb
mov
xor
jno
dec
sub
jns
cwtl
or
cmp
scas
rorb
icebp
cmpsl
fstp
iret
adc
push
push
cmp
into
mov
nop
ja
xchg
mov
jecxz
xchg
stos
xor
stos
in
hlt
cmp
dec
setnp
mov
enter
int3
cltd
testl
lret
inc
xor
jge
daa
les
repz
cmp
scas
sub
imul
xchg
inc
inc
sub
sbb
loop
ret
hlt
sbb
xchg
arpl
aad
push
int3
add
push
adc
pop
notb
fs
or
setns
inc
shrb
aaa
into
lock
mov
test
sbb
push
dec
sbb
sbb
push
test
jge
lcall
lds
jecxz
and
xor
pop
aam
je
inc
pop
mov
inc
out
push
dec
loope
inc
aad
mov
cmc
sbb
jnp
mov
movsl
jae
mov
out
in
in
jo
outsb
int3
inc
dec
shlb
mov
in
daa
add
js
jbe
xor
es
hlt
push
pop
dec
dec
leave
loopne
fmuls
mov
fmulp
lock
lds
add
rcl
xchg
stos
leave
push
int
in
mov
dec
cmp
mov
in
cmp
std
and
lods
ja
adc
loopne
dec
mov
lock
outsb
shll
sbb
rorl
imul
sahf
dec
push
fildl
push
and
mov
fldpi
add
xchg
in
rorl
mulb
arpl
adc
sub
jl
hlt
cld
sbb
outsb
mov
xchg
lcall
sahf
or
jmp
pop
adc
adc
int
cmc
push
pop
rcl
rol
stos
pop
insb
movsb
insb
xor
mov
fmuls
stos
lahf
sar
xchg
push
shl
orb
stc
push
stos
insl
pop
pop
mov
shrl
jle
aas
push
bound
pop
push
jge
lea
negl
fcomi
sub
mov
mov
insl
aad
xlat
outsl
mov
fwait
jg
in
aad
pop
mov
mov
out
inc
ss
or
ret
aaa
mov
insb
pop
mov
fdivrp
mov
ja
cwtl
adcl
or
mov
je
dec
ss
divb
xchg
aad
cmp
divl
scas
cmp
cmp
das
cmp
mov
loop
fildll
mov
cmp
fcoms
stos
cmovbe
and
mov
pop
inc
inc
cmp
int
je
nop
loop
push
lods
cmp
ljmp
lahf
inc
sbb
mov
pop
and
push
out
pusha
shl
cwtl
lret
dec
ss
and
es
out
dec
sbb
rclb
cwtl
cli
pusha
pop
mov
jle
stos
cmp
sti
xlat
into
jge
adc
and
les
and
test
out
repz
pop
inc
inc
cmp
sbb
aam
inc
pop
cmp
xor
sbb
ret
pop
pop
mov
cltd
push
adc
or
xchg
cwtl
repnz
std
jge
xchg
mov
ss
and
call
or
add
orl
insb
stos
fnsave
std
cmp
xor
adc
and
or
and
cmp
jo
jle
pop
shlb
add
jne
data16
bound
ret
out
test
xchg
inc
adc
inc
adc
dec
mov
js
aas
mov
pop
js
cmp
jns
or
pusha
mov
sbb
mov
jecxz
scas
sub
loop
cmc
movzbl
jae
mov
dec
cwtl
jecxz
sbb
cmc
adc
xchg
add
jno
inc
fsts
sbb
testb
in
sahf
call
inc
inc
or
xchg
and
pop
dec
repnz
xorl
pop
jnp
push
sti
xchg
sub
dec
sub
adc
jmp
je
ljmp
ljmp
mov
enter
jp
bound
faddl
or
inc
inc
subb
push
je
mov
popf
int3
loope
ljmp
sahf
pop
push
inc
adc
daa
xchg
ljmp
out
idivb
pop
xchg
movsb
cmc
clc
cmp
mov
or
xchg
cmp
push
xchg
push
lods
pop
mov
sub
push
lods
insl
into
xor
pop
and
ds
hlt
mov
es
out
ja
or
xchg
sarl
fwait
mov
adc
and
ret
push
insl
loopne
sbb
jbe
insl
enter
sbb
call
fwait
mov
ds
xchg
jp
xor
dec
jecxz
ficoml
mov
sbb
jo
fs
bound
fwait
push
out
in
outsb
add
cs
sbb
inc
bound
and
fistpll
sub
fnstsw
scas
gs
mov
in
lahf
fisubl
stc
jbe
pop
xor
inc
mov
inc
rclb
mov
inc
sti
xchg
enter
insb
push
fldt
ficoms
jae
gs
adc
stos
pop
mov
hlt
imul
sub
inc
xchg
stos
xor
roll
add
mov
enter
movsl
jmp
mov
inc
adc
outsl
adc
lea
pop
in
inc
xlat
addr16
sub
sub
ss
je
pop
lahf
and
insl
in
rolb
cmp
fs
jecxz,pt
push
decb
adc
lret
enter
shrb
mov
push
ds
movsb
mov
jmp
or
and
fldt
and
cmp
fcmovbe
fnsave
int3
sarl
hlt
mov
mov
insb
xchg
push
imul
jns
scas
push
lock
inc
lea
out
add
int
cmc
xor
mov
sbb
and
ljmp
dec
fiaddl
aas
inc
popf
lret
sub
addr16
cmpsl
push
sbb
movsl
js
adc
inc
and
pop
xlat
and
dec
pop
pushf
cmp
sahf
mov
push
iret
xchg
jp
leave
xchg
cmpsl
xor
cmp
add
and
call
dec
rcrl
mov
jae
xor
in
add
icebp
in
rcrl
inc
addr16
scas
adcb
push
mov
pusha
mov
popl
into
xchg
adc
test
imul
js
pushf
gs
ljmp
cmp
lods
mov
loop
pop
in
sub
xchg
icebp
mov
xor
les
inc
inc
mov
scas
pop
inc
pop
addr16
int
add
mov
js
aad
out
sarl
je
sar
les
dec
inc
push
or
clc
es
sahf
mov
xchg
mov
cmpsl
adcb
adc
push
rcrb
xor
cmp
mov
lret
arpl
add
mov
pop
ljmp
jns
pop
cs
inc
flds
insl
inc
xor
lods
jecxz
xor
lods
or
fldenv
imul
aam
outsl
inc
adc
les
test
mov
fsubr
sub
xchg
mov
dec
subb
add
inc
arpl
adc
movsb
mov
and
push
fstpt
inc
lods
pop
mov
adc
je
loope
add
aam
cmpsl
pop
mov
ret
xchg
pop
dec
inc
jns
jno
leave
cmp
mov
jge
push
pop
mov
bound
scas
add
adc
scas
pop
vpshlq
adc
repnz
adc
add
xor
outsl
das
movsb
dec
mov
inc
inc
repz
ret
dec
ja
adc
gs
lds
inc
addr16
sbb
add
stos
mov
xchg
in
aam
jnp
out
popf
add
test
fpatan
popa
outsl
mov
adc
addb
inc
and
cmp
cmpsb
pop
push
lcall
shrl
xchg
into
jmp
pop
stos
daa
xor
jle
xor
xlat
loope
xchg
pop
in
xchg
sub
mov
filds
and
push
fdiv
int3
inc
mov
jp
add
popa
jmp
cmp
mov
add
orb
pop
jmp
fnstsw
jno
es
mov
push
lods
insl
push
arpl
nop
enter
out
cwtl
jo
xlat
cmpsl
lock
sbb
std
pushf
mov
push
jl
enter
push
xchg
inc
xor
sbb
push
cltd
scas
pop
push
mov
lret
jmp
ds
push
scas
or
mov
rcrb
cmp
sbb
sarb
fists
test
out
hlt
mov
shll
mov
inc
dec
outsb
lret
cld
lea
cld
loop
adc
mov
or
loopne
cmpsb
xor
push
push
sbb
pop
add
aas
xlat
sti
ja
leave
rorb
shlb
sbb
adc
lods
mov
mov
jecxz
jnp
cmp
sbb
nop
scas
pop
pop
outsb
mov
or
jp
sub
or
div
xor
ror
pop
adc
mov
cmp
sub
inc
cmp
xchg
xchg
fs
popa
cld
repnz
jg
ljmp
adc
in
outsb
xor
cmp
mov
lret
pop
ret
push
adc
aaa
cmp
aam
nop
ja
or
arpl
call
mov
jl
std
test
sub
rclb
jb
mov
push
outsb
mov
sbb
dec
aad
cmc
loop
mov
mov
shl
fsubs
push
add
nop
gs
adc
adc
inc
push
inc
pop
push
xchg
data16
cmp
cmpb
sahf
mov
inc
cmp
cmp
das
loope
pop
lock
or
andb
scas
testb
mov
jl
arpl
shlb
insb
fnclex
dec
jnp
adc
jbe,pt
lods
inc
xchg
bound
dec
pop
inc
adc
pop
dec
or
cwtl
stos
test
jmp
xchg
pushf
aam
mov
inc
stc
sub
dec
lock
loope
sbb
data16
sub
or
jecxz
iret
push
rcrl
cmp
iret
scas
add
push
movb
and
icebp
push
nop
enter
out
test
xchg
aam
fildll
call
cs
mov
push
cmp
jne
and
int3
andl
mov
jae
xor
ss
pop
rcll
popa
add
adc
push
nopl
mov
xchg
mov
testb
cltd
inc
out
popa
mov
jmp
pop
inc
pop
pusha
jmp
xor
out
xlat
or
xchg
rcrl
fistl
cmp
push
icebp
sbb
sbb
add
aam
pop
je
call
bound
bound
lret
lods
pusha
test
jno
int
add
pushf
or
cmp
jge
test
mov
xchg
sbb
and
fcomps
mov
pushl
ja
push
in
lods
mov
in
cmp
cmp
lods
lods
xchg
dec
pop
es
mov
pushf
out
loop
lods
pop
push
lcall
sub
pop
mov
shufps
dec
push
pop
hlt
loope
mov
push
push
mov
or
jmp
push
out
aas
cmpsl
xchg
xchg
dec
fcoml
lds
leave
sub
xchg
mov
push
rorb
mov
mov
xor
push
or
jns
lds
movsl
jge
sbb
inc
push
shl
sbb
mov
imul
inc
addl
loope
cwtl
push
inc
push
inc
pop
imul
dec
adc
adc
test
cmc
cmpl
sub
add
or
je
pop
in
and
jb
std
mov
out
fstpl
adc
pop
mov
dec
mov
mov
or
out
cmp
dec
push
xchg
lods
inc
xchg
jg
or
mov
and
rcll
cmpsb
andl
add
repnz
movb
pop
add
sub
int
push
sarb
jns
push
xor
add
mov
lds
xchg
fldenv
cmp
pop
sbb
aaa
push
mov
aam
adc
clc
call
gs
cwtl
pushf
jl
mov
ds
or
mov
inc
push
inc
inc
jmp
out
inc
xor
jns
out
push
xor
addl
xchg
bound
movsb
in
mov
insb
repnz
cmp
cmp
mov
add
mov
inc
adc
pop
in
sub
jg
imulb
subb
push
pop
jp,pn
sar
fsubs
jae
mov
inc
in
jp
cli
xor
and
xor
jns
testl
sub
cs
adc
push
adc
jge
rcrb
and
sbb
add
jmp
pop
incl
sbbb
mov
out
je
shlb
pop
cmp
test
mov
mov
fs
mov
lock
xchg
addr16
pop
stos
lods
cli
call
shll
adc
push
jbe
arpl
or
psadbw
cmp
repnz
lret
cmpsb
mov
loopne
cmpsb
cmc
xor
aaa
sahf
push
xchg
add
aad
inc
shll
cmp
mov
xchg
mov
pushf
mov
xorl
iret
daa
mov
dec
sti
jmp
leave
pop
leave
test
jno
sbb
outsl
lea
mov
inc
push
hlt
lock
incb
mov
pop
loop
mov
jne
movsl
push
xchg
sarb
mov
mov
push
mov
pop
jne
sbb
ret
leave
mov
dec
lcall
pop
cwtl
jne
jg
add
outsb
adc
jle
out
or
jo
notb
mov
sbbl
cmc
outsb
bound
mov
xchg
pop
mov
jg
in
sbb
bound
js
fistl
push
popf
cwtl
and
cmp
sub
in
push
into
repnz
pop
sbb
dec
int
mov
pop
sub
inc
mov
shl
adc
jge
cmpsl
mov
pop
jmp
jnp
mov
icebp
mov
mov
popa
data16
push
pop
sub
pop
je
jp
xchg
lret
sub
sbb
xchg
adc
hlt
roll
mov
stc
lods
xorb
and
sub
mov
and
sub
lahf
dec
xchg
fst
inc
sub
shlb
sbb
in
sub
lods
fs
int3
xchg
xchg
mov
adc
adc
mov
add
sub
ror
or
testb
inc
and
add
adc
mov
cs
and
ljmp
pop
mov
shr
sub
or
jmp
or
stos
cmp
aam
test
test
pop
xchg
mov
jnp
adc
dec
in
scas
cmp
dec
xor
cltd
hlt
pushf
sbb
cmpsb
dec
dec
divb
fisttps
cmp
enter
ljmp
popa
aaa
sbb
jno
scas
xchg
mov
sbb
repz
and
out
mov
sahf
outsl
cld
xchg
lret
and
enter
dec
jo
jmp
ss
rcrb
jle
das
aaa
in
movsb
mov
pusha
xchg
rorl
mov
das
dec
int3
and
xchg
std
div
push
sahf
sbb
test
push
outsb
imul
js
jno
sub
bound
mov
stos
push
mov
add
add
xor
jmp
aam
lds
cmpsl
rcr
push
out
mov
ret
sub
lock
ret
dec
data16
data16
mov
outsl
leave
jae
sbbl
ljmp
push
jp
jg
dec
xchg
cltd
mov
xor
xorl
adc
jle
push
mov
loope,pn
push
or
fdivrl
popf
out
pushf
or
popf
imul
xchg
ret
pop
loopne
xchg
xlat
cmp
sub
std
scas
insl
stos
mov
dec
mov
cmp
inc
in
loopne
jno
push
shrb
fldt
jb
xchg
dec
cmp
push
testl
or
mov
or
jmp
sbb
pushf
cmp
aam
and
mov
jmp
scas
test
imulb
mov
hlt
shlb
mov
shl
int
mul
pop
andl
test
push
cmp
mov
jle
subl
lret
aad
imul
mov
jae
push
cmp
mov
pop
scas
jae
nop
js
aam
fnstcw
dec
sbb
scas
repnz
mov
cmp
lods
xchg
test
jnp
pop
xchg
and
movsw
loope
jb
pop
xchg
fwait
push
push
inc
ds
loopne
lock
scas
xchg
test
fisttps
enter
pusha
xchg
add
add
or
sbb
lea
cmp
pushf
loope
clc
mov
fsts
in
les
xor
push
in
lds
test
lcall
fmul
inc
dec
dec
xchg
cmp
mov
jno
popa
xor
into
jmp
fldl
pop
aam
lret
pop
lahf
cmp
popa
mov
rcll
fisubrl
mov
mov
popf
mov
enter
xchg
les
and
or
in
pop
or
sahf
fisubrl
notb
push
jmp
cmpsb
test
add
sarb
or
adcl
sbb
mov
jg
mov
fsubl
in
inc
pop
lcall
sub
shrb
push
cmp
mov
lret
frstor
fmuls
cmc
in
push
mov
aad
inc
xchg
pop
pop
loope
cmc
outsb
bound
pop
and
lds
push
xchg
ficoms
add
in
das
lret
enter
adc
fst
mov
js
jb
push
cld
out
dec
lahf
push
sbb
nop
adc
cmp
xchg
add
loope
je
stos
mov
test
dec
and
orb
adc
mov
clc
repnz
xchg
aad
push
mov
xchg
pusha
out
insl
jl
jle
mov
jge
lods
das
faddl
rclb
pop
jne
inc
rorl
sbb
in
clc
ficomps
sbb
add
pop
in
and
mov
dec
enter
das
xor
shlb
andb
fwait
mov
or
jo
xor
adc
xchg
sub
fildl
xchg
mov
or
js
adc
mov
arpl
loop
loope
sbb
fcmovbe
xor
xor
scas
inc
test
sub
cmpsb
jl
test
roll
pushf
insb
mov
pop
aaa
push
sub
cwtl
fnstsw
addr16
mov
int3
push
jns
dec
aaa
iret
scas
stos
pop
in
adc
sbb
add
xchg
lahf
orl
xchg
sarl
mov
test
scas
adc
mov
dec
repz
mov
push
and
push
test
xchg
movsb
dec
jle
rcll
fs
fdivrl
xor
int3
movsl
jns
and
popf
mov
test
ds
pop
push
fisubs
ljmp
adc
mov
orl
add
cmp
ret
xchg
cmp
and
pusha
das
lods
cld
jecxz
fdivrl
movsb
push
pop
scas
jb
jno
shr
sti
add
mov
xchg
bound
push
daa
mov
in
gs
or
sub
mov
scas
fsubrp
das
push
push
roll
cmp
movsb
in
and
xor
ljmp
imul
pop
fnsave
or
xor
fs
mov
into
popf
cmc
sub
lds
rolb
lcall
gs
mov
xor
or
movq
test
mov
lahf
xor
sub
cmp
ja
int3
movsl
clc
icebp
mov
sbb
adc
fcoml
pop
mov
and
rcrb
or
daa
fs
mull
fisttps
cli
sbb
aad
scas
aam
xchg
fmulp
lret
lods
fistps
sbbb
bound
scas
mov
cmc
xor
inc
jns
lods
or
ja
mov
shlb
jp
pop
stos
jl
adc
add
in
or
icebp
xchg
mov
stos
ret
mov
fs
jne
mov
dec
jg
loope
scas
mov
outsl
jmp
sti
push
in
fiaddl
bnd
lret
xchg
inc
add
pop
cli
es
push
cmp
fucomi
mov
cmp
int3
dec
mov
mov
addr16
data16
pop
jb
adc
daa
mov
pop
lods
sbb
jo
ficomps
test
pop
mov
push
ss
jle
mov
add
sub
dec
add
out
fucomi
xchg
sbb
out
pop
leave
jl
xor
out
loop
jnp
aam
imulb
mov
mov
mov
sbb
adc
imul
lahf
push
rorb
cmpsl
and
lret
lea
fsts
push
jmp
mov
fucom
push
lret
sub
push
xchg
push
out
xor
std
sub
jne
mov
inc
inc
xchg
add
jnp
aad
cmp
mov
fcoms
in
xor
movsl
adc
les
mov
xchg
xor
mov
mov
iret
flds
jae
pop
mov
xchg
stc
fwait
jmp
inc
subl
adc
mov
in
inc
jne
mov
outsl
dec
jle
jmp
pop
mov
xchg
ljmp
adc
mov
dec
and
insb
pop
negb
xchg
cmp
hlt
dec
xor
enter
mov
in
dec
negl
nop
mov
xlat
push
enter
cmpsb
clc
xor
inc
test
and
nop
cwtl
inc
mov
lock
mov
ss
or
mov
or
out
xor
adc
lcall
jbe
jmp
and
dec
hlt
popl
ret
xor
jge
insb
jge
mov
cmp
lods
movsb
mov
lcall
jle
divb
sub
mov
jmp
push
mov
xchg
pop
push
lods
adc
mov
cmp
adc
bound
stos
adc
hlt
in
insb
xchg
sti
push
add
mov
xchg
lahf
jle
push
inc
sbb
out
sub
lcall
mov
outsl
out
sub
sub
imull
jno
pop
dec
mov
pop
fs
call
push
jb
push
stc
jno
mov
fisttpll
scas
loop
fldt
and
ds
xor
and
pusha
shl
ret
cwtl
std
adc
sti
fsub
xchg
cmp
add
jge
rcrb
adc
xor
outsb
adc
push
mov
ds
and
movl
adc
and
cwtl
pop
jmp
test
pop
or
dec
sub
data16
rorb
rorl
adc
int
sbb
push
xchg
clc
inc
mov
mov
push
movsl
mov
xlat
out
int
shlb
aad
push
js
xchg
pop
es
mov
or
jmp
pop
push
hlt
xor
imul
arpl
xchg
cmp
in
loopne
stos
jp
roll
adc
sub
push
subl
or
fadd
inc
cmp
shrl
cmp
sub
lock
imul
shrb
push
in
stos
and
gs
js
lahf
sbb
scas
dec
jno
fdivp
test
std
push
pop
outsl
out
repnz
movl
les
lds
out
mov
sti
xchg
daa
adc
dec
mov
stos
loopne
dec
lret
inc
shl
push
dec
sbb
sub
inc
lcall
xor
mov
outsl
das
jno
jle
lock
mov
add
mov
shrl
and
jne
inc
in
push
sti
ret
push
pop
aas
iret
xor
push
hlt
mov
pop
jns
push
pop
fisttps
mov
fwait
push
push
mov
fdivrl
push
mov
insl
nop
sbb
movsl
adc
push
int3
sub
lahf
dec
mov
loopne
push
addr16
pop
fwait
lret
out
in
lahf
fdivs
adc
jg
push
rcll
negb
stos
out
xchg
jnp
xchg
mov
cwtl
jb
push
in
test
cmpsb
ficompl
imull
icebp
ror
pop
sub
fwait
rorb
jmp
subb
and
mov
gs
xlat
jne
sub
pop
and
sbb
popa
jno
pusha
movsl
adc
adc
sahf
or
sbb
mov
jl
sub
dec
jl
negl
fst
dec
mov
fistpll
xchg
scas
inc
fildl
jbe
ss
negb
push
pop
sub
mov
out
ret
dec
es
push
dec
iret
sub
xchg
push
stc
call
lds
lds
lods
mov
lret
sbb
aam
and
and
or
data16
popf
mov
cmpsl
fst
fstps
adcb
scas
xor
lods
push
mov
arpl
in
mull
icebp
aam
fstl
sbb
and
inc
jp
sbbb
dec
dec
inc
cli
movsl
scas
sti
jge
cwtl
sbb
daa
mov
dec
in
movsb
cs
fistl
repz
aam
dec
mov
out
int3
xchg
decb
and
aam
mov
cwtl
push
popa
mov
ficoms
and
add
mov
mov
stos
xchg
jo
push
pop
int3
popa
outsl
outsl
in
sub
mov
xchg
sahf
sbb
insl
mov
jl
inc
mov
movd
push
pusha
dec
out
inc
loop
fisubrl
xor
jge
aas
rolb
sbb
imul
add
das
dec
testb
mov
scas
int3
cwtl
lret
sub
dec
xchg
inc
orb
dec
cmpsb
or
faddl
add
scas
or
or
in
add
or
pushf
ret
icebp
mov
test
mov
ret
adc
call
ljmp
jbe
lret
fists
mov
xchg
mov
sbb
jae
pop
nop
and
sbb
inc
mov
and
incb
add
mov
in
inc
je
jbe
popa
jl
out
cmp
into
lret
sub
inc
test
and
movsb
mov
into
out
iret
sbb
loopne
scas
dec
mov
pop
fstpt
cmp
mov
mov
ret
xor
xchg
out
add
or
mov
pop
dec
add
repz
mov
in
and
fsubr
cmp
mov
cmp
rol
cmp
repnz
js
mov
movsl
fisubrl
xchg
arpl
push
int3
icebp
shlb
lock
cmp
cltd
jns
cwtl
mov
push
mov
mov
mov
mov
out
dec
push
sti
fldl2e
stos
psllw
rolb
repnz
jmp
jle
addb
or
insb
fisttpll
sar
aad
jge
xor
test
xlat
xchg
rorl
push
lods
adc
je
ljmp
inc
inc
mov
stos
mov
xchg
xchg
sbb
insl
lea
cmp
int
inc
sbb
std
adc
bound
push
sbb
fwait
aam
xchg
sub
pop
hlt
lods
outsb
cld
mov
pop
dec
xor
or
inc
jno
in
shll
rorl
sub
or
ss
jle
lret
pop
dec
in
jp
pop
jb
repnz
loopne
mov
mov
rorl
pop
pop
movsl
aas
enter
pop
lcall
mov
and
xchg
xor
jbe
je
cmp
rcrl
adc
and
enter
lea
lods
sub
push
jo
sbb
jg
mov
mov
or
pop
xchg
cmpsb
mov
adc
push
out
gs
pop
cmc
nop
mov
jae
sbb
dec
ja
mov
rol
in
mov
cli
lds
pop
or
enter
mov
mov
imul
outsb
pushf
lds
loope
cmp
addl
ret
jo
push
leave
cmp
mov
sbb
dec
pop
lods
cltd
xchg
add
adc
xor
inc
mov
iret
or
mov
dec
push
pop
xor
cmp
dec
adc
sub
push
jl
add
mov
sub
repnz
out
enter
pop
std
push
or
fsubrl
je
sahf
fcmovbe
jmp
sarl
out
loopne
inc
jbe
cmp
jl
aaa
pop
pop
lock
jecxz
xchg
fnsave
dec
lds
jno
sbb
adc
fs
cmpsl
jle
rolb
adc
rorl
mov
xchg
arpl
xor
cli
dec
iret
mov
and
and
movsl
add
mov
ret
and
lret
sub
cmp
das
adc
jmp
push
test
inc
add
and
sub
or
or
add
les
mov
or
cmc
nop
iret
rcll
mov
andl
xlat
shll
les
push
xlat
pushf
mov
mov
pusha
add
loop
sbb
lahf
cmp
pop
daa
jae
test
sbb
sbb
stos
xchg
mov
mov
or
in
out
mov
jns
dec
push
pop
sub
fdivp
cmp
addr16
jb
movl
jecxz
xor
adc
sahf
mov
push
shl
sbb
mov
xchg
dec
jecxz
cmp
testl
or
popa
enter
dec
sbb
cmpsl
lea
mov
shll
lret
jl
aad
push
inc
push
xchg
adc
adc
clc
mov
in
insl
cmc
dec
cwtl
pop
mov
dec
daa
lods
xchg
rcl
sub
or
jbe
sub
icebp
adc
popf
gs
pop
xlat
dec
inc
fwait
into
adc
mov
stc
add
loope
pop
dec
cmc
pop
mov
adc
sub
sub
fwait
pop
fcomps
jbe
fldcw
jp
out
mov
xchg
push
sub
mov
sti
repnz
call
stos
mov
insl
mov
xor
jo
or
shll
ficomps
inc
push
iret
xor
xor
lret
push
shlb
mov
jecxz
sbb
jno
shlb
cmc
lret
fdivrp
jb
jl
push
jle
std
mov
and
xchg
mov
dec
cltd
push
fisttps
mov
pop
jae
sub
addl
aas
mov
in
push
nop
daa
xchg
bnd
jle
adc
dec
in
leave
adc
fildl
frstor
jbe
jecxz
leave
out
lret
and
fisubl
lcall
rclb
out
push
jns
daa
and
ds
push
mov
mov
nop
mov
divl
jo
jg
lret
int
jbe
repnz
imul
gs
sbb
les
das
test
out
pop
jle
cmp
jmp
lds
xchg
cmc
pop
rorb
loope
xor
mov
push
pop
idivl
and
jnp
and
nop
cmc
mov
insb
pop
ret
mov
xor
insl
mov
pop
push
sahf
outsb
dec
dec
aam
fwait
jo
aaa
mov
dec
push
dec
test
decl
fldenv
aam
pop
push
leave
mov
and
sbb
adc
pop
test
pusha
xor
push
fisubrs
adc
scas
or
cwtl
mov
clc
pop
add
adc
decb
mov
scas
mov
imul
mov
xor
cmp
push
clc
adc
jmp
dec
or
das
jle
in
shrb
jnp
insb
xor
add
rorb
shlb
adc
xor
insl
dec
arpl
add
add
and
sbb
pop
adc
sbb
in
sbb
lcall
or
lock
dec
mov
adc
arpl
mov
xchg
stos
in
xor
push
push
mov
in
adc
mov
xor
pop
push
movsb
mov
and
loop
mov
xor
adc
or
mov
int
imul
test
stos
push
lds
out
mov
pop
aaa
add
cs
adc
repnz
cwtl
test
ljmp
jns
dec
cmp
adc
test
add
push
jecxz
jg
xchg
imul
rsqrtps
push
clc
inc
test
jp
push
fidivl
add
push
ljmp
and
out
testb
lods
push
mov
sbb
xchg
daa
sbb
jns
sbb
mov
jbe
mov
add
mov
in
xor
xchg
and
shll
sbb
les
cmp
push
jns
call
addr16
pop
adc
xchg
mov
xchg
or
jp
sbb
jae
ror
mov
push
sti
imul
scas
test
cmp
xor
mov
add
jmp
in
pop
enter
push
fisubrl
clc
fistl
ss
or
or
dec
jnp
dec
das
or
xchg
lds
adc
jmp
sti
shl
jle
xlat
test
lret
push
mov
dec
mov
jg
mov
inc
sbb
cmp
push
out
inc
in
dec
int
pusha
xor
or
jne
shll
xor
and
or
bound
cltd
xlat
dec
mov
loop
int3
std
pop
jl
dec
test
xor
push
mov
sub
and
sbb
iret
shll
mov
int
sbb
pop
mov
jbe
retw
inc
aad
cmpb
insl
sub
imul
cmpl
xchg
fs
movsb
jo
sub
jnp
shlb
lret
sbbl
push
lret
shrl
sub
xchg
adc
pushf
mov
shll
xor
dec
ds
ret
insl
inc
cmp
loopne
fdiv
mov
int3
and
or
xchg
dec
test
mov
popf
out
sbbb
test
test
aaa
dec
xchg
out
mov
addr16
jbe
xor
dec
js
cmpsb
stc
and
std
cmp
mov
xchg
push
popf
xchg
js
and
and
hlt
jbe
fbstp
mov
adc
shlb
cmpsl
in
pop
xadd
lods
mov
add
mov
adcb
ja
lods
out
js
jae
jl
add
inc
cwtl
push
mov
mov
pop
mov
call
dec
mov
orb
mov
adc
aas
sahf
xchg
add
jo
and
pop
or
xchg
aam
inc
out
add
roll
push
subb
dec
pop
sbb
hlt
idivb
in
cwtl
mov
sbb
push
data16
push
inc
pop
pop
call
inc
scas
in
mov
inc
int3
xor
mov
add
lcall
dec
xor
cltd
in
jne
inc
mov
shl
push
xor
popf
jb
or
insb
mov
dec
fsubrl
mov
inc
mov
unpckhps
aas
ltr
mov
cwtl
and
outsl
ljmp
fldl
sarl
stc
dec
lds
sub
xchg
loopne
mov
sbb
lods
test
mov
cld
ficoml
lcall
jae
sbb
cmp
call
fimuls
mov
mov
jnp
dec
mov
sbb
push
aad
movsl
repnz
aas
insl
jmp
lods
adc
jb
std
cmp
mov
fmul
negl
inc
cs
popa
mov
and
push
push
or
scas
out
stos
out
push
sub
data16
mov
jmp
and
add
aam
fsubs
subb
sbb
sub
inc
subb
andl
or
pop
adc
push
stc
clc
adc
mov
cmc
push
repz
inc
ljmp
in
icebp
mov
mov
inc
repnz
ror
adc
test
xchg
pop
icebp
mov
decb
pop
pushaw
inc
mov
pop
sarb
cwtl
jno
pop
xchg
mov
sbb
adc
pop
shll
sbb
mov
pop
mov
add
sbb
sub
insb
mov
int
sbb
test
jmp
aas
sub
cmp
jae
add
pop
and
pop
call
aam
pusha
dec
sub
lahf
inc
mov
push
aas
cmp
lds
inc
in
sbb
shl
sbb
dec
push
mov
jae
xor
divb
lret
jp
sbb
mov
js
in
sbb
pusha
les
jno
jb
test
sbb
add
sbb
enter
ja
mov
cmp
insb
push
hlt
or
js
cmpsb
pop
jg
fs
jo
pop
mov
es
sbb
pop
cmp
jp
push
mov
negl
aam
or
cmp
mov
and
mov
das
mov
outsl
mov
andl
cld
sub
mov
add
leave
repnz
add
fnsave
int
jnp
sbb
pop
fidivl
mov
cmp
int3
imul
jmp
clc
fcomi
loope
je
lods
push
push
mov
inc
sbb
sub
movsl
ret
aas
inc
and
mov
dec
sub
pop
xchg
je
push
je
pop
dec
lahf
daa
test
icebp
jge
xor
fldcw
lods
add
pop
cld
in
bound
jp
test
jae
shll
dec
imul
sti
out
or
cmpsb
push
cmpsl
lret
pop
pop
add
out
xchg
and
gs
fisubrs
fcmovne
and
arpl
in
mov
fistpll
push
je
pop
movsb
pop
sub
mov
add
dec
cli
mov
fcmovu
jnp
ljmp
ds
jp
mov
cmp
mov
xchg
mov
ja
scas
arpl
jne,pt
insl
push
repz
outsb
mov
pusha
pop
clc
xlat
sti
sub
jmp
push
xor
jb
ficomps
adc
xchg
adc
popf
cmp
jns
jo
js
arpl
push
mov
pop
and
mov
clc
or
aaa
aam
push
cmp
cs
cmp
mov
clc
imul
push
and
incl
xchg
imull
test
mov
icebp
out
in
mov
imul
insb
das
out
mov
and
push
xlat
push
xchg
das
ds
dec
cmp
addb
pop
in
xor
ret
shll
xchg
rcrl
xchg
mov
mov
jmp
xchg
mov
imul
fscale
fcmovnbe
ds
ja
xor
loopne
lret
ss
jb
add
inc
inc
jb
adcl
mov
int
cmp
add
mov
iret
shlb
icebp
and
pop
sbb
addl
outsl
pop
xor
xchg
jne
dec
aaa
test
cmc
out
call
dec
cmp
ljmp
subb
jl
iret
cmp
sbb
in
les
jne
out
cmpsl
mov
mov
lds
mov
outsb
pusha
ss
sahf
mov
dec
leave
cli
outsb
jge
xchg
jb
push
xchg
xlat
loope
cmp
mov
sub
mov
mov
adc
push
stos
cli
mov
push
movsl
mov
cmp
imul
inc
dec
sti
mov
jle
cmp
bound
or
es
sub
xchg
imul
adc
inc
jge
stos
shrl
jmp
xor
xor
ljmp
push
mov
inc
mov
jmp
shlb
rcll
cmp
stos
add
cmc
cmp
add
and
les
pop
mov
insb
adc
push
hlt
and
cmpsl
xchg
xor
cmc
pop
and
inc
aad
and
andb
lret
pusha
in
mov
test
dec
nop
clc
ret
push
push
nop
ljmp
sub
adc
adc
push
push
sbb
mov
fwait
mov
shl
test
xor
fstpl
push
cmp
arpl
test
mov
in
cmp
dec
mov
lock
sbb
out
jb
lods
pop
mov
negb
cwtl
mov
pop
mov
movsl
mov
pushf
nop
out
orl
dec
cmpsl
jecxz
jmp
inc
clc
jbe
fs
adc
out
sbb
arpl
or
jl
or
movsb
push
fnstenv
add
cmp
mov
dec
pop
test
ror
fdivrs
fcoml
stc
jp
and
icebp
mov
fiadds
lods
inc
lods
testb
sarl
mov
jne
mov
dec
inc
inc
push
fdivrp
and
or
xor
adc
int
test
sub
icebp
sahf
fisttpll
hlt
push
adc
negl
xor
sarl
push
xor
pop
adc
mov
aas
jns
or
mov
pushf
add
xchg
cmp
ficoms
xchg
add
push
sbb
imul
insb
ljmp
dec
inc
push
and
js
test
cmpsb
cmp
stc
sbb
imul
aam
push
ds
xchg
cmp
in
add
xchg
mov
push
call
push
sub
aaa
out
bound
mov
ret
xchg
xlat
mov
cmp
in
fiadds
inc
stos
jbe
add
pop
ja
lret
int
outsb
jp
repnz
xlat
cmp
sahf
and
shld
je
repz
bound
enter
and
xor
pop
lock
cmp
jae
jns
lock
lcall
ja
stos
aas
pop
sbb
fdivl
mov
and
fs
and
fiaddl
sub
ret
adc
jmp
jb
mov
cmpsl
fldl
inc
repnz
mov
and
rcrb
pop
stc
jns,pn
push
iret
jl
out
mov
std
movsb
mov
sbb
mov
inc
outsl
push
mov
cmp
xchg
iret
fisttps
fists
or
or
iret
sbb
sbb
sahf
sahf
lret
mov
sub
ljmp
imul
imul
bound
scas
scas
iret
xchg
in
pop
pop
mov
inc
fidivl
or
popa
lds
mov
mov
sbb
pop
push
gs
push
rcl
imul
mov
xor
fistpl
das
sub
int
flds
push
fwait
fs
push
shll
es
jl
adc
in
in
int
adc
mov
cltd
and
jbe
xor
xor
lods
cmc
ja
ret
inc
push
jae
jle
xchg
std
jmp
xchg
push
inc
add
mov
cmp
push
pop
stos
mov
add
fcomps
rorb
pop
sbb
jbe
aad
mov
pop
jae
xor
shrl
lock
arpl
mov
pop
cmc
cmp
ds
mov
imul
int3
sub
jmp
xlat
or
mov
mov
daa
fwait
xor
std
icebp
mov
cmp
pop
mov
movsl
adc
cmp
mov
in
mov
inc
scas
push
push
fwait
out
cld
inc
aad
stos
mov
jmp
mov
jnp
pop
in
fnstsw
push
jno
jno
sub
fsubl
sub
xchg
repz
lods
mov
push
add
pop
mov
fistl
sysenter
push
pop
mov
jbe
mov
je
std
testl
push
outsb
repnz
in
enter
push
insb
fsubrl
lahf
jmp
pusha
xchg
or
xchg
inc
repz
dec
or
or
xor
subl
aam
decl
sub
in
cmp
aaa
xchg
mov
hlt
pop
dec
adc
int
out
and
cmp
scas
or
fs
repz
fsub
inc
cmp
call
shrb
xchg
clc
fsts
jecxz
aam
ret
sbbl
sub
fmull
dec
fld
adc
dec
push
add
push
cmpl
inc
test
mull
enter
fistpll
xor
adcb
std
mov
mov
sbb
sub
popa
mov
cmp
pop
and
loope
fnop
jo
popf
in
iret
xchg
mov
lret
add
sub
lock
test
loopne
pop
jno
inc
dec
sbb
push
push
cmp
fprem
push
sub
test
xor
out
js
inc
in
addb
inc
mov
jmp
lock
scas
into
mov
sbb
or
push
insb
jmp
xchg
mov
xchg
scas
and
inc
jno
push
mov
add
or
sub
repnz
int
jge
sarb
cmp
cwtl
xchg
pop
notb
pop
fwait
mov
xor
add
leave
jnp
mov
retw
into
mov
sarl
rol
out
or
adc
adc
push
sbb
aas
pusha
push
mov
and
sbb
fidivrl
test
lret
dec
mov
xor
jb
push
andl
outsb
out
stc
fstpl
jge
ja
nop
push
movsl
fcoml
cli
adc
push
int3
arpl
nop
pop
jg
cmpsb
add
movb
sub
lret
and
push
jb
cmp
xlat
cwtl
push
dec
das
push
xlat
int
xor
je
imul
mov
and
mov
sbb
and
in
lea
scas
mov
pop
or
scas
inc
out
js
mov
outsb
in
add
lods
out
jle
cmp
out
outsl
fisttps
cli
push
lds
insb
mov
mulb
jnp
or
sbb
lods
scas
shl
mov
jae
or
jecxz
int
popa
mov
sub
ds
jb
jp
fwait
mov
adc
imul
fcmovnu
adc
sbb
jns
cmp
inc
sub
loopne
inc
test
mov
cmovo
test
aas
sahf
loop
test
shl
out
bound
hlt
add
bound
ljmp
add
jne
popf
xchg
fmuls
dec
mov
fildl
xlat
fdivrp
pop
cltd
xchg
add
cwtl
sbb
push
fists
pushf
adc
push
xor
dec
pop
lods
sbb
mov
enter
js
mov
shll
mov
pop
nop
cmpsb
mov
test
mov
fbld
xchg
mov
push
movsw
adc
in
mov
inc
aam
in
push
stos
sbb
fdivs
stos
mov
push
or
fs
jle
sahf
push
push
rclb
mov
mov
adcb
push
lcall
test
js
sarl
push
int
and
or
pop
mov
jmp
and
jno
idiv
lock
fsubl
jmp
das
gs
addr16
testb
pop
or
pop
pop
sbb
sub
xor
es
and
outsb
cmp
mov
sub
sbb
popf
mov
addr16
jb
loopne
popf
hlt
lret
jg
cmp
aad
in
cld
jnp
push
lret
loopne
das
lea
jae
push
pop
fs
jp
cld
mov
push
mov
popa
das
xlat
push
adc
cmp
andl
ret
mov
mov
sub
dec
fildll
jmp
mov
js
mov
pop
xchg
fxam
enter
xorl
pop
xchg
imul
or
sub
movl
jge
enterw
xchg
push
xchg
jb
int
xlat
hlt
lds
aas
push
ss
cwtl
xorl
add
or
xchg
fwait
jmp
in
ret
xchg
nop
fs
fucomp
push
pop
pop
jle
call
in
adc
mov
inc
adc
jecxz
out
mov
mov
aam
adc
fcom
in
call
jo
mov
stos
loope
into
mov
jbe
or
xchg
cmpl
mov
push
rorb
jb
dec
in
inc
inc
loopne
ficoms
sub
shrb
scas
cmpsl
sbb
out
clc
ficoml
cs
scas
outsb
xlat
dec
sub
or
gs
sub
lea
xor
mov
nop
push
addl
cmpl
xchg
adc
jp
adc
or
les
insb
sbb
fistl
aaa
sbb
popa
movsl
sbb
sub
xchg
dec
stc
or
int3
pop
and
mov
call
push
clc
push
inc
rcll
cltd
pop
xor
lock
daa
pop
scas
popf
mov
mov
call
mulb
pushf
arpl
sbb
mov
lods
ja
lret
xchg
ja
imul
mov
ficoml
popa
subb
cmp
lea
add
popf
fnstcw
ja
mov
lds
jae
nop
sbb
test
xchg
pop
aaa
inc
popf
std
test
push
ficomps
test
mov
push
push
ficoml
mov
std
mov
and
sub
test
test
jno
pop
or
sarb
ss
addr16
in
mov
xchg
aaa
stos
rclb
sub
out
jns
xchg
cmp
jmp
mov
jb
cmp
addr16
sub
test
popa
push
jmp
cmpsl
xchg
not
rolb
pop
mov
enter
lods
outsl
test
clc
cld
add
cmp
sbb
jecxz
inc
ret
aaa
add
mov
fisttpll
lahf
fmul
mov
xorl
or
jns
dec
mov
sbb
popa
sar
xchg
mov
jp
pop
pop
sub
andl
adc
shrb
push
aam
outsl
iret
push
or
adc
dec
sub
xchg
je
and
mov
aam
in
cmp
pop
je
xor
or
xchg
dec
xorl
pop
decl
mov
out
push
push
out
sub
into
mov
dec
mov
and
pop
ficoml
mov
inc
inc
lret
push
mov
stos
clc
xor
and
mov
call
pop
mov
mov
int3
or
pop
ret
popa
hlt
mov
fsubs
adc
pusha
adc
in
and
xchg
aas
nop
lods
mov
xor
push
xchg
cmp
xchg
ss
mov
cmc
push
out
jns
mov
mov
xchg
enter
test
xor
dec
data16
icebp
pop
ja
dec
aaa
xchg
xchg
jg
lret
or
pop
cli
push
adc
xor
fbstp
and
jmp
es
or
mov
or
imul
jnp
inc
mov
insb
std
ret
cmp
jge
cmpsb
dec
dec
out
in
cmp
sub
insl
xchg
outsl
scas
mov
jl
outsb
dec
je
lret
dec
fldl
mov
xor
dec
sub
xchg
jb
orl
loopne
push
scas
fisubs
ror
xlat
mov
imul
push
fdivrs
mov
pop
sbb
or
test
hlt
lock
mov
out
lret
sbb
dec
jmp
inc
js
push
xor
or
fstpl
fldenv
lods
jnp
or
fldcw
lahf
add
ja
test
lret
adc
cmp
inc
data16
jmp
push
loopne
out
dec
ss
fs
sbb
lds
dec
leave
ja
test
or
dec
add
mov
pusha
mov
enter
ljmp
mov
xchg
lds
fstp
call
sbb
lods
incb
pop
dec
lock
or
xlat
cld
or
and
test
das
cmpsl
movsl
xor
xchg
jbe
subb
add
or
inc
int
xchg
dec
inc
cmp
std
lds
fwait
in
jb
lock
and
std
rol
dec
fwait
out
push
int
cmp
sbb
cmp
sbb
inc
xchg
mov
leave
leave
sbb
and
mov
cmp
inc
xchg
sub
test
dec
cmp
mov
aaa
push
dec
aas
das
xor
outsl
pop
pop
add
test
pushf
insb
pop
orb
mov
sbb
lods
inc
mov
jg
fildll
sbb
dec
cmp
sub
xchg
adc
inc
sub
es
js
daa
test
pop
mov
jecxz
rcr
mov
sbbb
das
insb
adc
mov
mov
or
add
inc
sbb
xor
cmp
and
adc
dec
daa
pop
lcall
dec
data16
sti
push
jmp
fldcw
and
mov
testl
addb
in
rolb
cmp
xchg
push
cmp
mov
cmp
imul
jge
push
mov
test
movl
sub
push
cmc
lea
sbb
enter
pop
jbe
and
jg
add
push
mov
sbb
mov
add
insb
sub
aad
stos
dec
icebp
push
push
arpl
icebp
loope
and
int3
aad
jp
lods
lods
add
add
arpl
pop
fs
sbb
cwtl
mov
inc
out
pop
or
mov
pop
and
and
push
lock
hlt
inc
sbb
ds
lods
xor
cmc
fisubs
aad
je
movsl
inc
xchg
fcmovbe
add
rolb
inc
jl
stos
sbb
push
stc
adc
inc
push
arpl
sub
cmpsl
and
fwait
into
in
cmp
divb
xchg
pop
les
daa
push
lea
addb
cmpsl
inc
pop
sub
in
dec
jns
mov
stos
inc
addr16
add
arpl
mov
pop
fldl
cmpsb
popl
xchg
scas
pop
stos
mov
xchg
xchg
lds
lods
cmp
pushf
xchg
in
mov
cmpsb
pop
arpl
pop
cmp
dec
xchg
testl
xchg
inc
jmp
cmpsl
dec
mov
and
mov
and
jb
inc
jb
pop
mov
adc
dec
mov
adc
push
vpminsw
test
in
imul
int3
stos
outsl
clc
adc
movsl
repnz
mov
inc
sbbb
loope
imul
xchg
mov
pusha
mov
pushf
or
dec
pusha
lret
cmp
sbb
jne
shll
fsubs
push
inc
fmull
les
rcrb
int
xchg
and
insl
cmp
out
out
sub
ljmp
popf
jg
sub
inc
add
and
sub
and
dec
cmp
pop
in
pop
call
out
dec
sbb
repz
sbb
dec
aas
pop
lock
push
sarl
adc
pushf
and
lcall
inc
stos
mov
adc
popa
outsb
pop
daa
jno
lret
lods
addr16
cwtl
jecxz
clc
mov
div
test
mov
adc
rolb
pop
enter
rorl
push
mov
mov
push
push
inc
cwtl
rorl
test
popa
jmp
lods
mov
insb
imulb
jo
or
imulb
ret
insl
mov
cmp
and
pusha
in
dec
in
and
sarb
loop
lcall
inc
jg
stc
mov
xor
xor
add
imul
xor
aas
sbbl
push
addr16
mov
popa
subb
out
mov
idivb
mov
lcall
lea
push
jl
shrb
movl
sbb
mov
lea
outsl
jle
jle
push
push
push
adc
inc
test
sbb
cmp
xchg
f2xm1
or
out
jg
sub
pop
or
rcr
sbb
push
cmpsl
shrb
cld
aam
push
ja
pop
dec
shl
and
push
and
sarb
inc
fistps
fucomi
fisubrl
leave
dec
rclb
leave
iret
mov
fiadds
pop
cmp
insb
fstpl
sub
clc
cmc
push
and
mov
xor
lods
lods
push
push
push
xor
xchg
les
sub
mov
push
out
inc
cwtl
lds
cmp
push
pop
loopne
dec
cld
dec
popa
push
pusha
outsl
in
aaa
filds
out
jl
and
shr
sbb
shr
cli
aas
mov
out
sub
dec
outsl
leave
movsl
cltd
movsb
jp
adc
xor
or
adc
mov
mov
xchg
leave
test
cltd
aam
jae
insb
gs
mov
in
pusha
push
ds
stos
mov
int3
iret
dec
dec
cltd
sbb
addr16
jnp
leave
mov
push
sbb
testl
outsb
adc
mov
sbb
fcmovne
mov
fistpll
mov
clc
shll
sub
push
mov
arpl
adcl
mov
sarb
repz
aad
jno
inc
adc
mov
ljmp
cmp
inc
push
xor
mov
insl
push
ljmp
test
mov
shlb
clc
out
outsb
lret
je
mov
cmpsb
int
sbb
les
hlt
je
add
out
xchg
lea
dec
fists
pop
mov
sub
outsl
inc
mov
mov
sbb
add
in
xchg
mov
cmp
loopne
sbb
mov
mov
jns
add
jp
fwait
pop
and
add
arpl
sub
xor
jge
adc
pop
mov
scas
add
movsl
mov
inc
push
stos
mov
push
popa
pop
push
push
and
rcrb
inc
add
aaa
pop
out
std
in
sbb
xchg
cmpsl
cmp
test
fwait
ja
sbb
into
fadd
xchg
insb
pusha
push
jl
xchg
aas
mov
nop
inc
xchg
jo
pop
pop
mov
fidivl
repz
lahf
mov
dec
aaa
inc
insl
loope
dec
mov
dec
fwait
xor
pop
movsl
sbbb
lret
ror
pushf
adc
ljmp
insl
push
add
mov
and
push
dec
inc
jp
mov
punpckhwd
pop
pushf
jbe
shlb
mov
in
jp
dec
les
dec
jne
out
inc
repz
dec
sbb
mov
dec
popf
mov
inc
fwait
in
add
sub
push
movsb
shlb
adc
sbb
out
push
outsl
shll
sub
adc
sbb
andb
imul
sub
xchg
dec
cmp
mov
sbb
pop
jle
jmp
sbb
imul
inc
dec
jno
adc
jg
pop
fimuls
in
fidivs
cld
xchg
les
and
jle
shlb
shll
cs
scas
sahf
xor
jg
sahf
mov
or
dec
cmpsb
and
andb
jle
cmp
pop
ja
mov
add
xor
in
mov
lea
mov
cmp
and
and
loopne
mov
xor
ss
and
dec
mov
pop
inc
cli
out
imul
or
call
dec
iret
testl
mov
adc
jmp
shrb
pop
cld
mov
idivl
dec
mov
ret
enter
adc
dec
add
pop
test
jge
inc
icebp
sbb
push
neg
aaa
add
in
loope
das
jb
adc
mov
dec
out
je
dec
adc
jp
dec
loope
add
shr
mov
lret
jp
aad
sub
out
xchg
lods
fiadds
cmp
pusha
pop
jns
nop
jne
push
popa
bound
shrb
mov
cs
cmc
dec
test
mov
pop
xchg
lret
int
popf
ljmp
xor
dec
sub
sarl
push
dec
push
jae
inc
push
sbb
sti
les
dec
xchg
cmp
out
scas
in
push
mov
in
mov
gs
inc
sub
in
xor
mov
push
shrb
sub
mov
fidivl
inc
mov
outsb
mov
jns
jbe
or
jmp
push
loopne
sti
outsb
inc
or
cmp
xor
dec
stos
ja
mov
xor
int
loopne
xor
incb
inc
push
les
and
mov
xorl
mov
daa
fbstp
sub
mov
inc
sub
or
dec
lret
ja
enter
mov
in
or
push
mov
or
push
xchg
push
out
daa
mull
cmp
les
jle
rolb
xchg
mov
cltd
adc
push
call
pop
getsec
push
and
or
push
mov
fimuls
sahf
fists
mov
inc
std
jnp
jl
mov
mov
xchg
cli
mov
out
adcb
xor
pop
and
das
das
jo
mov
scas
mov
push
fnsave
dec
ja
push
fs
test
add
pop
xchg
rorb
pop
popl
dec
sub
pop
add
xchg
sbb
dec
pop
rolb
pusha
aad
das
mov
repnz
adc
mov
repnz
dec
ljmp
lret
sub
push
out
sbb
leave
jno
adc
or
mov
jnp
push
xchg
adc
mov
ds
int
outsb
ret
fisubs
lcall
jbe
ret
lahf
cwtl
mov
mov
adc
je,pn
xor
lods
in
mov
lret
repz
or
repnz
add
pop
leave
cld
cmp
loop
pop
arpl
in
xor
push
mov
push
and
jns
outsb
loopne
sbb
test
and
bound
pop
dec
movsb
pop
imulb
add
popa
jge
fisubrs
daa
in
bound
lods
lea
mov
mov
mov
mov
adc
cmp
push
insl
and
into
push
int3
cmpsl
cltd
cmpl
es
insl
and
or
test
jb
bound
mov
shr
pop
hlt
sbb
xorb
icebp
mov
lea
repz
les
jns
int
mov
jg
sub
sbb
movsb
fisubl
xchg
movsl
adc
jne
adc
push
adc
sti
jne
sbb
pop
pop
xchg
cmp
test
jnp
mov
jns
out
and
adc
cmpsb
sbb
cmp
mov
inc
loopne
or
testb
xor
mov
test
inc
js
mov
rcr
imul
out
repnz
lock
and
xor
jo
ss
out
lea
mov
rolb
fs
mov
sbb
fsin
jnp
and
xchg
cltd
fcomi
imul
inc
add
jnp
clc
jmp
enter
add
xor
insb
add
jge
xchg
sub
inc
ret
add
iret
jae
into
and
enter
mov
inc
ficoml
int
jae
repnz
stc
out
lcall
or
scas
lahf
mov
lea
cwtl
fistpl
out
mov
jl
popf
out
js
hlt
jae
jb
cwtl
loopne
repnz
mov
pop
xchg
repz
push
jp
pusha
dec
lds
daa
xor
data16
icebp
shl
xor
pop
lcall
lret
mov
insb
rorl
sahf
scas
xchg
loop
stos
ljmp
inc
out
rcrb
test
bnd
jnp
fwait
xchg
dec
test
loop
inc
mov
std
test
repz
stos
cmpsl
jmp
jo
adc
aad
mov
idiv
sbb
mov
dec
push
jle
loope
push
jbe
or
addb
or
sarl
aas
jecxz
outsl
cmp
pslld
pop
dec
loopne
xlat
jl
and
sub
ss
icebp
and
ret
mov
addr16
xlat
mov
aas
dec
jmp
xchg
cmpb
and
leave
and
arpl
stos
jmp
cmc
xchg
test
add
fisttps
xor
add
mov
lcall
in
into
gs
sub
insl
or
and
jle
sub
icebp
add
movsb
cs
push
scas
pop
xor
cmp
jnp
test
dec
xor
insl
pop
mov
mov
mov
cmp
push
jp
mov
jae
jae
sub
test
daa
add
in
xchg
sbb
aaa
fcomps
sbbb
nop
hlt
adc
dec
mov
call
pushl
mov
fsts
shr
or
fdivs
test
inc
adc
sar
addl
jl
add
shll
push
and
sub
out
inc
in
push
mov
mov
adc
xor
mov
shll
add
ljmp
loopne
jno
and
sbb
dec
adc
cmp
shll
scas
or
mov
push
sbb
add
cmpl
fmulp
xor
arpl
sti
inc
and
inc
scas
pop
hlt
xor
and
xchg
std
add
orl
imul
xchg
mov
inc
xor
sub
rcrb
jno
add
push
mov
rolb
std
out
in
pusha
cs
add
jp
jle
ss
shlb
mov
and
ljmp
and
int
or
ljmp
and
bound
jno
inc
sbb
dec
loop
sub
test
adc
sub
inc
scas
divl
jbe
dec
daa
jae
inc
sub
adc
lcall
out
call
das
lret
xchg
shlb
mov
scas
pusha
sub
mov
sbb
or
mov
in
mov
rol
das
sbb
aad
mov
dec
insl
ret
jo
inc
fldt
leave
pop
sbb
cmpsb
inc
popf
sub
popa
popaw
out
js
push
loopne
ret
pusha
bnd
add
or
loop
orl
push
lea
push
outsl
cmpsb
push
cltd
int3
imul
lods
or
xchg
inc
inc
lret
pop
inc
pop
rol
nop
gs
shrl
cmp
test
add
sbb
out
sub
lock
mov
in
loop
scas
sbb
mov
sbb
dec
sub
fnstcw
cwtl
std
lods
clc
cmp
data16
popl
xchg
aas
mov
xchg
pop
es
inc
lds
sub
mov
add
xchg
or
mov
lahf
es
dec
out
push
jle
rcll
push
push
push
js
sub
mov
mov
ja
leave
mov
push
dec
xlat
inc
fucomip
std
adc
jg
xor
mov
gs
nop
push
mov
cmp
insl
icebp
inc
dec
in
xchg
ja
popa
jne
xor
sbb
xchg
call
xchg
shll
test
dec
ret
rorl
lea
ficoms
add
lret
xchg
mov
mov
mov
popf
lds
and
or
imul
xor
leave
aas
ret
rclb
idivb
inc
outsb
xchg
jno
ret
mov
cltd
mov
push
xchg
ftst
arpl
enter
dec
or
jnp
pop
sbb
and
sub
mov
out
icebp
rorb
push
push
mov
popf
xchg
cli
std
call
pop
pop
fcoms
jne
fbstp
arpl
lret
mov
dec
dec
movsl
mov
stos
inc
add
mov
loope
add
lods
or
xchg
sbb
inc
movsb
lcall
jle
std
adc
mov
js
sub
loop
ficomps
jo
mov
lods
shlb
scas
nop
ljmp
push
jno
and
cs
in
xor
adc
xchg
ficoml
lret
mov
adc
test
addr16
mov
xchg
enter
fs
jmp
das
fs
sar
mov
mov
cmp
iret
clc
and
mov
add
sbb
mov
jge
dec
ret
mov
or
push
sub
std
idiv
fmuls
adc
call
or
push
leave
push
out
rcrb
jns
jmp
cmc
addb
mov
sti
movsl
cmp
lods
daa
pushl
adc
pop
cltd
mov
into
std
adc
add
jmp
sbb
push
add
mov
stos
and
push
mov
outsb
jnp
cmp
jne,pt
out
pop
dec
inc
out
or
push
add
xor
imul
jno
stos
in
icebp
popf
cmp
fbld
mov
enter
int3
fnstcw
push
sbb
pop
jp
xchg
outsl
push
fs
push
pop
les
adc
std
nop
mov
xchg
cmc
outsb
jne
dec
lock
fists
adcl
lods
inc
sub
test
sbb
mov
pop
adc
sbb
mov
enter
jmp
sti
mov
aam
cli
out
dec
add
sub
sbb
lods
sub
sbb
xor
outsb
jge
fldcw
aam
mov
out
mov
popf
cld
fisttpll
inc
jbe
sub
sti
and
cmp
inc
into
lret
cmc
mov
sub
inc
mov
mov
mov
insb
add
mov
jns
cmp
sub
sar
xor
sbb
pop
cmp
dec
mov
adc
fidivs
xchg
in
xor
xor
mov
shrl
arpl
jle
lock
cli
sbb
stos
jecxz
dec
sub
lret
dec
dec
lcall
mov
lret
mov
push
pop
mov
and
test
lds
out
xor
out
dec
or
pop
mov
sbb
push
lahf
push
pop
sub
jno
rcl
cmc
inc
jo
push
and
push
xor
push
out
cltd
cli
jmp
inc
cs
jno
xlat
mov
mov
rcrl
jns
dec
sbb
dec
lahf
jb
add
stos
mov
movsb
push
loop
fstpt
xchg
push
stc
out
inc
inc
cmp
popa
push
mov
mov
loop
jle
adc
mov
pushf
movsb
inc
leave
iret
inc
pop
cld
xor
push
les
push
incb
cli
outsb
mov
lret
jne
push
push
jmp
outsb
dec
in
mov
addl
mov
mov
int3
cli
nop
push
xchg
cltd
add
test
sub
inc
or
jo
fadds
int3
and
pusha
fcompl
mov
shrb
inc
das
and
add
push
sti
inc
fidivs
mov
jge
imul
add
adc
aaa
xchg
inc
xor
fildll
xor
dec
jo
sbb
jb
add
sar
mov
push
mov
add
adc
negl
add
addr16
mov
imulb
popa
sbb
mov
xchg
adc
loop
jmp
mov
jno
mov
rcrb
mov
cmc
or
ret
add
cmpsl
dec
adc
js
lahf
js
jno
mov
insl
imul
ret
mov
jno
stos
cwtl
mov
adc
sbb
sbb
dec
imul
push
jae
lcall
jp
push
loopne
mov
std
test
jno
mov
andl
loopne
loopne
dec
xchg
xchg
push
mov
repnz
imul
mov
hlt
pop
imul
cmp
adc
pop
das
lret
daa
dec
pop
dec
push
lods
or
mov
inc
pop
popa
mov
aad
sbb
shll
mov
jmp
std
add
in
fs
in
mov
mov
popf
sub
mov
mov
xchg
mov
ret
pop
out
lods
movsb
int3
fisttpll
jp
rorb
mov
pop
in
sbbl
jne
out
pop
mov
sti
pop
sbb
fcomps
mov
andb
loop
clc
mov
adc
inc
jbe
xor
push
cltd
jnp
mov
ret
daa
adc
pop
fstpl
test
lahf
pop
loope
mov
xchg
je
pop
sbb
cmp
lock
mov
in
push
lret
mov
and
gs
fildll
lcall
mov
adc
stos
mov
adc
push
out
mov
jle
and
int
sub
mov
adc
push
xor
sbb
mov
sbb
shll
jp
adc
das
lds
fstpl
ds
fucomi
shlb
rorb
dec
cltd
nop
movq
pop
sub
dec
nop
sub
insb
int
cli
and
pop
jb
and
ret
fwait
jle
sub
div
inc
insl
sub
mov
out
daa
shll
inc
iret
lret
ja
jne
fcmovnbe
movsb
adc
push
xchg
cmp
shr
jb
mov
inc
out
loopne
and
cmpsl
cmpsl
push
fwait
xchg
sbb
pop
leave
nop
test
fs
mov
xor
fwait
cmp
mov
out
les
lea
push
mov
ljmp
hlt
adc
mov
adc
ja
outsl
xchg
in
mov
jbe
cltd
mov
sbb
outsb
cmp
les
dec
pop
push
cmc
lret
inc
xchg
out
movsb
aam
movsl
inc
adc
test
idiv
or
mov
out
push
jecxz
mov
push
cmp
cmp
dec
sbb
jp
pop
out
clc
push
repnz
jmp
xlat
rol
outsb
adc
sbb
cmpsb
in
sbb
mov
push
sti
sti
and
sbb
cmpsl
mov
push
ds
mov
xchg
sub
cmc
adcb
jae
enter
movsb
xchg
mov
lahf
ljmp
pushf
inc
imulb
test
pushl
mov
cmp
in
out
pop
nop
insl
or
mov
jl
pop
jo
mov
dec
xchg
fisubl
dec
mov
mov
inc
pop
sbb
cmp
out
sbb
mov
shll
sub
dec
dec
jg
jg
push
xorl
add
inc
cltd
icebp
xor
mov
dec
jae
jae
adc
jmp
sub
sub
outsb
test
mov
pop
cmpsb
sub
xor
jmp
push
mov
adc
movb
ljmp
xlat
bound
adc
jl
lahf
jnp
and
sbb
adc
mov
out
xor
sub
adc
repz
adc
dec
jbe
xor
inc
sbb
es
jecxz
add
fs
cli
bound
pop
and
xchg
and
or
mov
lret
sub
add
or
fcoms
xor
and
sbb
adc
mov
test
pop
jecxz
dec
movsb
inc
jbe
add
popa
sarl
xor
jle
dec
popf
int3
fsts
sbb
cmpsb
push
pop
xlat
dec
stos
bound
adc
sub
or
dec
mov
cmc
test
mov
jae
shrl
xor
enter
popf
fimuls
sbb
loop
out
jb
xchg
jmp
dec
outsb
xchg
jb
push
inc
out
jb
pop
xorb
leave
xor
add
sub
cmp
cmp
lahf
lds
pusha
inc
cmp
bound
lahf
sbb
and
hlt
int
popa
fisubs
mov
jnp
movsb
in
xchg
or
mov
stos
push
mov
pop
pushf
adc
or
pop
inc
int3
aas
push
and
popa
les
fldt
hlt
push
pop
repz
in
clc
or
into
dec
and
mov
mov
aas
imull
push
call
lds
sub
inc
outsb
pop
sub
fdivl
lds
inc
pop
jecxz
jg
js
dec
mov
or
test
sbb
add
mov
push
popa
in
test
add
mov
adc
popa
xchg
loop
testl
pop
jl
in
std
mov
test
addr16
rolb
std
inc
inc
data16
push
pop
xchg
iret
fisttpll
push
xchg
sub
pop
jnp
in
clc
test
sbb
dec
jns
ds
jl
cltd
xchg
sti
jb
adc
fsubr
fimull
or
clc
push
sahf
into
stc
xchg
adc
dec
cmp
push
aam
lea
sahf
mov
lahf
and
jecxz
push
and
pusha
loopne
into
aam
out
ja
mov
mov
js
shld
arpl
sbb
mov
mov
ja
ljmp
in
dec
je
sbb
decb
dec
into
call
push
and
loopne
xor
jno
cmpsl
lahf
cmp
cli
inc
shrb
ja
sub
pop
mov
mov
add
aam
push
inc
sub
fisttps
mov
cmpsl
addr16
int
sbb
stos
lods
jle
mov
enter
adcl
repnz
stos
mov
ret
cmpsb
sub
sbb
mov
nop
aaa
pop
or
scas
mov
xchg
mov
into
mov
lock
and
sub
cli
pop
imul
jecxz
jmp
mov
out
sub
fisttpl
mov
push
orb
pusha
mov
gs
test
mov
aam
das
sub
xchg
pop
add
push
dec
popf
pushf
pop
lock
adc
push
icebp
fs
mov
pop
sub
mov
fcompl
or
xchg
jne
xor
outsl
movsb
jo
sub
jno
scas
xchg
arpl
sbb
fistpl
js
cmpsb
cltd
dec
int3
int
jecxz
lcall
movsl
rcrb
cmp
ja
adc
mov
popa
and
repz
pop
sbb
andl
jg
mov
ret
into
cmp
pop
adc
aad
dec
jmp
enter
sbb
push
lock
cmp
insb
mov
sub
lock
and
jno
mov
sbb
ret
mov
movsl
sbb
mov
cs
xlat
jo
mov
jg
jp
adc
jmp
xchg
mov
hlt
dec
adc
push
test
je
imul
adc
dec
call
dec
leave
inc
lods
sti
fcoml
or
cmpsl
arpl
imul
add
pop
ja
fmull
fst
adc
je
mov
cltd
jno
xor
push
lds
sub
xchg
out
pop
out
mov
outsl
test
mov
lcall
cltd
out
push
cmc
popf
fs
lcall
mov
jns
inc
mov
or
fwait
jns
dec
xor
imul
mov
movsb
xor
stos
add
popf
xchg
out
icebp
ds
mov
sbb
sub
xchg
push
rcrl
pop
sbb
pop
jne
bound
sub
add
fistpll
sbb
jae
aam
inc
xchg
or
and
mov
cld
push
mov
dec
dec
mov
scas
movsb
lret
mov
mov
mov
mov
std
xchg
out
lock
cwtl
jae
cld
mov
ljmp
or
or
push
rcrb
int3
leave
lods
lahf
dec
or
ja
pop
xchg
ja
jb
insb
pop
mov
cltd
out
clc
pop
loop
lret
push
or
dec
xchg
dec
imul
paddq
mov
aam
xchg
cmpb
cmp
pop
imul
push
jg
cwtl
loope
sbb
inc
pop
cmp
cmp
inc
lods
jbe
repnz
lcall
sarb
lods
mov
push
iret
or
adc
shr
jl
jmp
repz
inc
pop
sbb
stc
sahf
mov
in
popa
loope
mov
icebp
push
add
pop
pop
adc
scas
fcoms
mov
pop
lret
add
gs
mov
das
in
lods
xchg
sbb
add
mov
jbe
pop
pop
dec
jno
out
fwait
push
int
push
push
ja
push
pop
ja
cs
test
push
pusha
push
mov
repz
pop
pop
and
mov
jae
loope
cwtl
adc
xchg
push
cwtl
sbb
movsl
jbe
loop,pt
cmc
es
insb
stc
ds
adc
push
fwait
cltd
or
jne
push
mov
mov
mov
or
cmp
xchg
xchg
cwtl
cmpsl
sub
mov
data16
sbb
outsl
sub
ror
and
xor
mov
popf
sub
orb
mov
xchg
arpl
cmp
int
scas
js
imul
xor
jo
lea
mov
fmull
les
sub
add
push
in
cli
cs
or
sub
iret
adc
das
and
popa
adc
mov
xchg
imul
or
push
push
jge
sbb
shll
test
jp
cli
push
cmp
mov
sbb
push
clc
stc
xor
stos
iret
and
pop
jle
xchg
xor
sub
mov
xor
mov
adc
loopne
mov
aam
inc
mov
sbb
inc
lcall
sti
gs
dec
sbb
jmp
mov
in
lahf
bnd
lock
jb,pn
sarl
inc
mov
xchg
cmpl
and
mov
popf
into
sub
xchg
out
ret
cli
jle
jge
loop
mov
mov
sbb
cmp
ret
jg
mov
cmp
mov
xor
mov
pop
ljmp
lds
test
std
lea
fisubrs
ds
xlat
daa
je
ljmp
bound
cmp
mov
stos
cmp
negb
sub
pop
push
sahf
aam
pop
leave
outsl
std
ficomps
cmpsb
stos
stos
cmp
cmpsb
mov
fcomip
loopne
aad
sub
nop
or
in
in
mov
hlt
scas
sub
hlt
pop
call
addb
cs
add
pop
data16
scas
mov
sbbl
pop
adc
sub
or
imul
jne
cli
and
cli
jbe
mov
mov
adc
pop
jp
bound
adc
out
mov
cwtl
aas
sti
loopne
jnp
mov
xchg
mov
push
ret
push
jmp
je
and
inc
js
push
and
aaa
mov
jl
cmpsl
in
dec
xchg
adc
das
mov
inc
or
xchg
aas
lea
pop
testl
aam
fwait
add
fnstcw
mov
rorl
jno
jne
pop
sti
fcmovnu
dec
ret
data16
cmp
cmovbe
inc
pushf
mov
cmpsb
mov
in
add
insl
sub
movsb
and
movsl
jle
fimuls
sbb
cmpsb
add
cmp
dec
inc
cmp
xor
lret
or
cs
js
loopne
ds
xor
xor
jmp
pop
adc
or
fsubs
mov
sub
imul
xor
test
add
int
dec
aam
inc
outsl
sub
repnz
jbe
repnz
sub
cmp
sub
mov
fmul
pop
push
fsubrl
mov
push
inc
dec
cmpsb
sahf
pop
jbe
insl
je
int
xor
lahf
push
scas
sub
inc
sbb
cs
imul
rorb
mov
aaa
sti
imul
push
lods
cwtl
fists
xchg
popa
shll
adc
mov
dec
mov
negl
flds
movsl
mov
xchg
sahf
jg
xchg
push
add
in
daa
scas
xorl
loope
int3
push
fistps
clc
jecxz
hlt
test
in
inc
outsb
test
mov
in
pop
loop
lods
mov
mov
out
mov
test
fcmovnbe
push
scas
test
inc
jae
jecxz
push
mov
les
out
xchg
and
or
mov
je
stc
ja
mov
mov
icebp
or
and
roll
iret
sbb
sub
or
dec
adc
cmp
clc
add
in
fsubl
sti
fdivl
jp
xor
repz
dec
iret
cs
inc
pop
andb
lcall
iret
jbe
aaa
imul
fidivrl
aam
mov
cmpsb
mov
cmpsb
orl
in
or
sahf
clc
movb
hlt
add
fs
daa
test
out
dec
xchg
lods
in
icebp
sarl
push
cmp
pop
mov
inc
push
ljmp
jle
inc
cmpsb
ljmp
cli
test
addr16
stos
es
movsl
out
loop
sbb
lods
and
and
and
aaa
pop
out
cwtl
into
sahf
sarl
cli
stc
mov
enter
leave
imul
subl
adc
xor
int3
leave
ss
or
aas
daa
xchg
mov
add
lahf
xor
bound
or
test
daa
jmp
cwtl
cmp
jecxz
pop
jle
mov
adcb
cld
push
repz
cs
js
popa
mov
negl
xchg
or
cmp
or
mov
lahf
das
xor
iret
aam
es
andb
dec
lcall
insl
movsb
jne
pop
fisttpll
mov
mov
mov
es
adc
push
jp
stos
push
flds
push
cli
loope
sbb
cmp
lea
fsubl
mov
lahf
dec
mov
inc
xor
sar
xor
xchg
nop
jb
jno
mov
cmpsl
pusha
push
push
lods
xchg
int
std
sbb
cmp
setbe
pop
pop
lahf
enterw
nop
xlat
push
sbb
cmp
fs
ja
bound
pushf
fildl
imul
cmpsl
lds
inc
sub
jae
adc
or
pop
cwtl
push
mov
sbb
push
mov
push
inc
stc
sarl
incl
lock
inc
sub
out
fisubs
ds
add
lock
add
xchg
mov
dec
mov
push
or
stos
cmp
jnp
rcll
adc
push
repnz
out
setge
xor
fs
lret
add
and
cmp
dec
fcompl
mov
popf
jno
inc
inc
idivb
inc
inc
jb
mov
stos
mov
xchg
scas
xor
jbe
loop
lahf
jnp
dec
and
add
pop
das
dec
dec
stos
stc
add
or
or
scas
mov
sti
adc
fldenv
lock
xchg
jmp
test
mov
push
adc
sar
inc
sub
stos
push
inc
mov
mov
aas
scas
push
lock
xchg
dec
hlt
aam
mov
out
pop
lods
int3
mov
pusha
pop
shll
sub
mov
jnp
lret
into
cs
sbb
movsb
mov
cmp
cmp
dec
lret
out
int
imul
pop
cltd
stos
call
clc
push
and
inc
pop
adc
daa
cli
addl
aas
popa
out
insb
dec
mov
mov
out
stos
mov
jnp
mov
fsubrl
cmp
adc
lds
xchg
dec
xor
mov
jne
sbb
or
in
das
mov
sahf
mov
test
ret
push
or
push
fisubrl
cltd
aam
push
add
pop
daa
mov
enter
pop
dec
mov
inc
add
inc
lods
pop
jae
cs
stos
pushf
push
addb
movsl
dec
push
int3
fst
cmpsl
decl
movsb
mov
add
jnp
xor
test
call
push
mov
sub
and
push
loope
scas
push
cmc
jns
xor
repz
push
das
and
imul
ss
sub
cmp
xchg
setno
imul
dec
lahf
adc
pop
xchg
arpl
jno
dec
xor
or
or
mov
fadds
cmpsb
inc
mov
imul
sub
imul
sti
xor
sti
sarb
push
mov
enter
lods
dec
sub
push
add
into
andb
sub
mov
ficoms
sbb
mov
push
jle
adc
mov
gs
imul
out
jnp
sti
dec
inc
adc
adc
jge
inc
insb
jnp
repnz
adc
xor
mov
inc
popa
dec
mov
mov
in
inc
lods
arpl
push
popf
jne
mov
in
fs
insl
lods
jne
out
insb
lcall
out
roll
pushf
je
in
mov
add
sub
lods
into
cmpb
jle
mov
rcrl
dec
cmp
subb
sub
shlb
andl
sbb
push
sti
ret
adc
inc
bound
jle
addb
push
mov
loop
sarl
rorl
jbe
push
test
xlat
lock
rcrl
xchg
insl
into
test
inc
mov
aas
call
ja
jp
pop
jne
sahf
cs
sub
push
pop
push
inc
imul
cmc
bound
mov
pop
outsl
xchg
insl
imul
pop
lods
pop
lcall
inc
cmpsl
adc
or
pop
mov
cmp
fidivl
mov
adc
fdiv
test
xchg
enter
repnz
or
inc
jns
fcmovnbe
push
lahf
xchg
lods
xor
sub
cli
sbb
insb
pop
lea
or
cmp
or
jp
shrl
addb
dec
lret
fadds
adc
jns
jecxz
inc
push
mov
push
inc
cmp
mov
iret
cmp
insb
mov
mov
rorl
mov
xlat
xlat
sub
mov
and
add
divb
ja
push
mov
mov
push
imul
mov
cld
shlb
out
pop
push
jne
mov
das
xchg
mov
sub
add
cmp
repz
or
xchg
push
imul
jge
xchg
loopne
lahf
pop
das
imul
in
sub
mov
push
jmp
gs
test
fldcw
jmp
and
push
sub
cmp
ret
fimuls
pushl
inc
cmp
sub
lods
das
pop
xor
sbb
je
dec
xlat
mov
mov
mov
loop
xorl
sub
je
xchg
and
icebp
faddp
add
push
lret
dec
int3
mov
gs
jp
test
sub
jno
jnp
cmp
int
int3
shrl
pop
dec
jmp
out
jo
hlt
jne
insb
fsts
daa
into
sbb
enter
jne
in
or
test
add
stc
sarb
sub
pop
mov
xchg
jnp
mov
and
psrad
jecxz
std
xor
inc
mov
mov
xchg
shlb
outsl
movsl
mov
fdivs
push
jecxz
fsubl
adc
mov
xor
imul
pop
xor
dec
aas
lret
cmpsb
xor
pop
dec
dec
adc
jae
test
fs
push
idivl
push
adc
adc
lods
mov
and
dec
scas
inc
jb
fmull
xlat
mov
and
pop
mov
movsb
pop
test
imulb
mov
sar
loop
lock
lock
or
jge
xlat
stos
push
notb
and
inc
lea
imul
mov
push
dec
imul
out
jg
push
lock
sub
push
std
popa
subl
adc
pop
lock
les
imul
bound
rol
pop
aaa
pusha
mov
and
mov
pusha
into
and
dec
push
push
icebp
sbb
gs
pop
adc
xlat
cmp
and
out
fbstp
in
mov
add
mov
repz
icebp
mov
mov
ljmp
sbb
aam
out
and
add
lods
inc
dec
or
sub
cwtl
adc
xor
adc
arpl
jge
mov
mov
sbbb
test
mov
add
cltd
sub
insl
stc
adc
aad
shlb
push
aaa
sti
jmp
stc
js
loopne
xchg
sub
jg
jae
dec
jae
sub
ret
out
andb
jbe
in
push
imul
ret
adc
jecxz
iret
sbbb
lods
int3
shlb
scas
fcompl
pushf
inc
jnp
mov
pushf
imull
or
mov
popa
sub
out
push
ds
cmp
ljmp
cmp
clc
pop
adc
xlat
lods
add
in
push
fsubrl
jmp
push
test
out
jp
mov
hlt
fwait
dec
fistpl
mov
aas
gs
push
sbbl
pop
push
dec
jl
pusha
lock
rcll
insb
inc
push
test
in
arpl
and
dec
ds
jecxz
leave
jge,pn
mov
adc
fstpt
aas
add
cmp
shlb
push
mov
or
xor
aam
lret
pop
es
xor
roll
call
adc
repz
je
push
notb
pop
ljmp
lods
cmpsl
jb
in
les
mov
add
test
and
push
in
outsl
cmpsl
cmpsb
cmp
pop
xchg
ljmp
das
adc
inc
mov
es
movsl
shlb
pop
test
adc
sbb
leave
sub
add
rolb
cmc
repz
out
add
xor
data16
je
sub
inc
loopne
iret
xor
cmp
int3
jbe
dec
xchg
aam
in
insl
icebp
push
aad
daa
and
stos
inc
lcall
or
jl
pusha
dec
mov
mov
testb
lret
or
imul
gs
imulb
add
and
sub
cmc
inc
and
add
or
mov
adc
lahf
vsqrtss
cli
std
cld
push
dec
inc
daa
push
nop
jl
jg
mov
push
push
xor
js
mov
sbbl
adc
add
aaa
xor
inc
stos
mov
test
pop
inc
xchg
shr
or
pop
or
lock
push
cld
in
lret
gs
and
adc
push
push
xor
xchg
push
andl
xor
arpl
mov
les
cld
adc
dec
es
sahf
sub
frstor
leave
push
les
testb
xchg
pop
dec
and
int
and
iret
hlt
pop
call
ds
sarl
cmpsb
out
add
lahf
or
xchg
mov
adc
shrl
shlb
call
fmuls
jge
and
stos
fildll
or
mov
loop
push
leave
add
addr16
lcall
push
add
push
insl
cld
xchg
movsl
mov
mov
mov
insb
frstor
mov
cltd
jl
mov
ret
in
pop
pop
xor
daa
cmp
sub
and
ficoms
fisubs
jmp
push
xor
and
adc
ror
loop
incb
add
aaa
insb
sbb
inc
addr16
inc
mov
mov
xchg
push
sarl
adcl
sti
sahf
loopne
pop
mov
mov
out
or
sub
xor
test
addr16
push
or
aad
out
ds
sarb
test
xchg
push
xor
insl
pushf
fmul
pop
inc
pop
inc
fadd
mov
test
enter
mov
ja
push
xchg
das
xchg
pop
mov
and
xchg
xor
enter
sbb
push
cmpl
inc
xchg
sub
add
and
shll
lock
lret
sbb
xchg
test
scas
pop
jmp
mov
inc
loope
icebp
out
imul
xlat
ficomps
fidivrs
mov
add
pop
xchg
ss
fldl
adc
insl
and
imul
imul
and
inc
mov
mov
or
ficompl
cmpsl
pop
movlps
mov
js
cmp
ficomps
fs
and
push
mov
inc
mov
sbb
mov
test
testb
mov
mov
add
jge
imull
xor
pop
dec
mov
imul
nopl
ficompl
adc
jle
mov
mov
rorb
shl
scas
add
or
xchg
push
fisubs
adc
xchg
ja
jbe
adc
jmp
pop
pop
pop
pop
ss
fidivs
and
ficompl
ljmp
imul
pop
fadds
add
pushf
outsb
insb
fistpll
push
push
jmp
jg
insb
call
adc
push
or
arpl
pop
test
mov
inc
je
jns
mov
mov
xor
mov
cwtl
inc
mov
push
pop
lds
push
cld
mov
and
cltd
inc
loop
mov
mov
sahf
xchg
mov
aaa
and
push
lds
rorb
out
movsl
inc
sub
out
jbe
xor
xor
sbbl
cs
xor
push
mov
dec
or
negb
popa
lock
xor
sub
ror
das
popa
gs
xchg
movsl
push
ss
orb
aad
lds
icebp
pushf
adc
movsb
pushf
cmp
inc
das
arpl
pushf
aaa
xchg
sar
sub
jmp
into
push
adc
mov
or
cld
sbb
jne
cmc
pop
mov
xor
mov
fsubs
xor
dec
add
jg
daa
loopne
sbb
xor
push
dec
jle
pop
pop
in
data16
jp
push
fucomp
xor
aas
orb
xchg
mov
rorl
jnp
inc
shlb
mov
test
mov
je
push
pop
mov
loop
cmp
cs
rol
call
cld
shll
cli
scas
xor
jle
dec
jmp
xor
fs
adc
es
ds
add
mov
cmp
sub
shl
movsl
push
int
jne
xlat
xchg
sub
pop
fists
pop
aad
dec
cmpsl
push
ja
sti
push
cmp
aaa
lods
and
repz
cmc
push
mov
cmp
ret
shll
jp
push
sub
push
dec
and
mov
aas
adc
and
pop
es
repnz
inc
jns
dec
movsb
imul
out
fstl
add
jne
aaa
enter
xchg
mov
xor
les
scas
mov
cmp
test
cmp
lods
stos
ret
ds
xchg
sbbb
sbb
and
mov
out
xlat
sbb
jmp
aam
sub
outsl
mov
out
mov
fstl
jns
ret
scas
in
ds
mov
mov
lret
xchg
stos
sbb
push
repnz
lea
lds
cld
add
out
leave
xor
ret
sub
sti
pushf
fwait
add
xchg
mov
dec
jno
popf
and
decl
adc
shr
lahf
xlat
lret
cli
dec
loopne
xchg
les
ficomps
mov
mov
stc
mov
in
aaa
in
inc
call
push
xor
mov
js
sti
insb
add
jo
mov
sarb
shll
xchg
dec
dec
stos
rcr
or
out
mov
arpl
mov
dec
jmp
push
ss
es
lods
push
inc
jns
rol
xchg
clc
push
roll
rol
out
pop
nop
fdivs
push
push
push
rcr
popa
push
pop
xchg
or
mov
inc
out
lds
mov
hlt
ja
mov
mov
mov
cli
rcr
dec
stc
push
push
out
xor
je
xchg
out
sahf
adc
lret
xorl
mov
mov
pop
add
cwtl
stos
jle
es
pop
sbb
xchg
in
cmc
add
test
jl
in
xor
mov
mov
fdivrl
cmpsb
test
dec
sbb
ficoml
mov
dec
xchg
ja
push
imul
push
and
xchg
jl
adc
lret
lods
cli
scas
fistpll
xchg
and
and
fs
cmp
sbb
fcmovu
test
cli
mov
mov
repnz
shlb
shrl
inc
xchg
fistpll
cmpsb
popfw
and
sub
insb
jbe
inc
outsb
js
cmpsl
mov
add
or
jo
add
mov
bound
or
in
cmc
xchg
jg
mov
jge
les
prefetcht1
sbb
test
call
out
sbb
cmp
pop
jmp
pop
shrb
dec
ss
sbb
push
mov
in
out
inc
pusha
xor
cmp
cwtl
daa
mov
enter
adc
cmpsb
pop
pop
lods
test
adc
js
negl
cmp
push
adc
lcall
dec
jp
cmc
sbb
push
fdivl
clc
leave
ss
mov
mov
ss
aam
decb
out
mov
out
fimull
xchg
mov
pop
rcrb
mov
cltd
fxch
insl
gs
xchg
add
lret
pop
aad
je
test
sarb
pop
stos
mov
pop
jae
stc
das
repz
sbb
mov
dec
inc
outsl
push
cmp
jl
js
mov
repnz
pop
adc
push
cltd
mov
cltd
xchg
dec
repnz
xchg
iret
mov
xor
repnz
cmp
or
jg
adc
int3
lret
push
fistpl
imul
jno
incl
in
mov
insb
pusha
into
mov
roll
scas
mov
and
mov
in
xchg
xchg
add
dec
jno
les
nop
inc
out
inc
cmpsb
lods
jo
lea
ss
arpl
iret
xor
orl
sub
rcll
dec
adc
adc
or
cmp
and
push
inc
add
in
jmp
movnti
shll
cld
dec
out
int3
mov
mov
inc
outsb
ret
rorb
mov
inc
loop
loope
mov
pop
mov
sub
lods
stc
test
xor
leave
lock
repnz
idiv
and
scas
ljmp
je
test
out
jne
add
gs
push
mul
pop
cld
push
cmp
test
pop
jle
or
mov
jl
idivl
push
scas
iret
repnz
push
jbe
or
out
sbb
adc
xchg
fists
inc
dec
mov
dec
jnp
or
push
dec
mov
push
mov
xlat
notb
cmp
repz
jnp
cmp
lods
subb
pop
repnz
push
fiadds
scas
inc
inc
add
sub
cmpb
or
das
pusha
jmp
les
data16
leave
mov
out
shl
in
sbb
lahf
fdivr
push
sub
sbb
and
jmp
aas
fldt
jae
xor
and
push
insb
ret
fidivrs
pop
je
jl
outsb
xchg
mov
filds
cmp
mov
aad
adc
mov
mov
and
lret
inc
push
mov
jecxz
out
or
or
push
adc
pop
fadds
in
stc
dec
xor
into
dec
mov
addr16
fsts
rol
sub
ret
int3
dec
or
fdivl
mov
xor
in
fiadds
xchg
push
cmp
lock
mov
not
adc
test
xchg
jae
test
test
dec
sbb
imulb
lods
fmuls
mov
pop
shrb
es
popa
dec
xor
nop
les
jecxz
cmp
cltd
mov
push
jmp
pop
mov
push
mov
jl
out
imul
push
dec
inc
cs
pop
popf
cs
xchg
out
fs
int3
sbb
push
pop
add
xor
dec
es
push
hlt
lds
out
cmpsb
mov
int3
xchg
jge
dec
enter
out
addr16
test
or
insb
cmp
outsb
and
sahf
xor
jne
jg
xchg
sbb
inc
sbbl
or
jmp
lcall
mov
lods
in
test
push
pop
inc
rcll
or
push
movmskps
aam
push
jecxz
add
xchg
ds
add
xchg
mov
mov
lods
and
push
dec
aas
jmp
clc
sbb
inc
jns
popa
addb
sub
stos
lock
or
dec
loope
js
mov
mov
in
and
and
xor
ret
popf
cmp
imul
push
adc
dec
jl
dec
sarl
gs
je,pn
add
xor
stc
and
das
sbb
out
xor
adc
aad
pop
xchg
into
pop
loopne
push
pop
mov
sbb
test
outsb
pop
dec
inc
je
adc
mov
dec
lea
adc
pop
lahf
push
pop
dec
cmp
test
test
into
or
mov
inc
push
lret
pop
sub
xor
dec
cmp
aad
add
negb
lret
adc
idivb
push
cmc
inc
lcall
mov
mov
pop
mov
call
loope
cwtl
sti
lcall
mov
lret
test
js
imul
cmp
or
pop
push
lret
hlt
mov
pop
lret
dec
push
lods
mov
mov
xchg
add
and
cld
enter
es
ja
fildl
repnz
cmp
out
out
pop
jp
or
aaa
and
das
imul
push
faddp
xor
mov
and
pop
imul
and
and
add
adc
xor
jne
push
mov
std
movsb
inc
cmp
dec
mov
enter
inc
ds
xor
fs
mov
negl
mov
mov
lods
xor
and
add
lcall
and
cmpsb
andl
dec
jo
mov
js
mov
jns
jae
sbb
dec
push
push
mov
iret
mov
xlat
adc
stos
int3
pop
push
cmpsb
loop
lret
push
mov
push
mov
call
shll
or
pop
jp
push
testl
enter
insl
loop
lret
out
lock
outsb
mov
adcl
dec
lock
leave
cmpsl
insl
jne
popf
pop
jle
sub
sar
mov
nop
dec
fistps
test
nop
fbstp
insl
dec
je
mull
ret
xchg
mov
pop
in
push
jns
cltd
fidivs
bound
jge
and
push
cmp
sbbb
movsl
add
jle
adc
movsb
mov
pushf
ds
imul
insb
shrb
jecxz
lods
mov
js
js
out
outsb
scas
clc
pop
and
mov
cmp
test
outsl
cmp
jecxz
ret
loopne
popf
sub
repz
adc
jbe
les
orl
jb
adc
xor
pop
sbb
clc
stos
stc
dec
adc
insb
xchg
cli
pop
mov
ret
add
mov
out
jl
sbb
test
pop
sub
stc
and
dec
in
das
mov
or
mov
andb
sbb
mov
mov
and
fisttps
insl
sbb
xchg
sahf
lret
pop
aam
inc
xchg
sahf
mov
inc
mov
add
and
not
xor
cmp
add
int
push
pop
mov
lods
jo
xor
insl
mov
in
pop
mov
das
sbb
cmp
mov
jb
inc
movsl
sub
cmp
mov
cltd
faddl
adc
xor
or
xchg
fnsave
sbb
cmpsl
in
repnz
jbe
in
ret
pop
xor
pop
mov
stc
sub
or
dec
mov
sti
xchg
enter
xchg
push
mov
push
rcl
cmp
and
xor
xchg
sub
mov
cmpsl
mov
pop
out
mov
loopne
xor
ret
push
dec
ret
out
in
xorb
int
sub
insl
in
ja
adc
out
aaa
iret
jmp
pop
dec
inc
lds
rol
mov
push
in
test
sbb
sbb
and
xor
mov
or
nop
mov
loopne
mov
jle
daa
xor
lahf
push
ds
adc
push
popf
repnz
xor
pop
xchg
lock
shr
cmpsb
les
sbb
mov
cmp
fwait
hlt
outsb
repnz
xchg
mov
test
sub
add
lcall
inc
mov
pop
cmp
loope
mov
xorb
sub
and
cltd
xchg
lea
add
sub
dec
inc
dec
and
call
xchg
xchg
js
pop
pop
je
stos
cmp
push
sarb
into
addr16
inc
cld
out
int3
jae
push
test
inc
cmp
ljmp
push
adc
push
pop
out
push
mov
xlat
out
inc
insb
cmp
push
pop
data16
sti
pop
jne
mov
mov
pop
adc
or
aad
pop
cli
dec
and
mov
pop
loope
daa
jbe
adc
cmp
push
mov
out
jmp
push
sub
js
popf
imul
or
jne
cmc
pop
in
in
testb
call
iret
jecxz
scas
mov
mov
sub
push
inc
mov
cmp
movsl
sbb
aad
enter
xchg
xchg
cltd
and
mov
or
xor
mov
dec
scas
int3
dec
fisttpl
mov
sub
adc
push
pop
in
cmp
sub
aaa
jecxz
mov
clc
cmp
cli
fimull
jno
sub
push
sub
inc
mov
sbbb
mov
add
stc
stc
mov
lods
mov
xchg
mov
mov
in
sbb
test
mov
mov
shrl
in
fsubl
sbb
mov
mov
pop
xor
inc
add
and
inc
and
int3
push
decb
or
insb
lock
jno
add
fbstp
mov
sbb
add
pusha
or
push
aas
nop
add
inc
shlb
xadd
jnp
jne
fmulp
sti
xacquire
or
cli
mov
daa
insl
scas
pop
xchg
sbb
inc
pushf
pop
loop
xchg
push
pusha
xor
lods
xchg
xchg
in
push
jmp
push
push
mov
sub
mov
loop
xchg
mov
sti
sti
mov
out
mov
jg
adc
insl
jp
or
push
dec
jne
movsb
sub
sbb
inc
sti
xor
jecxz
and
loop
bound
dec
outsb
pop
or
pop
or
dec
repnz
inc
sti
loope
test
jge
and
pusha
outsb
in
sahf
push
fs
inc
and
mov
jmp
cli
mov
in
add
fsubrp
mul
pop
shrb
inc
enter
test
mov
jae
dec
mov
aaa
rorb
jl
xchg
push
xchg
push
cmpsb
cmp
ljmp
push
andl
leave
xchg
in
pop
movsl
sub
push
cmpl
sar
into
in
lods
adc
push
and
push
fsubs
insl
mov
sbb
xor
xchg
ja
push
jne
stos
popa
xor
call
insl
stos
test
fisttps
pop
iret
imul
mov
and
adc
jno
sub
cltd
lea
js
mov
push
cmpb
push
xchg
rorb
ja
cmp
fists
inc
pop
dec
push
fsubrs
stos
or
lea
sbb
or
data16
pop
out
xor
lods
inc
push
out
in
stos
jo
xchg
std
xchg
sbb
out
cmp
push
cmp
stos
in
sub
in
or
dec
bound
inc
inc
out
jae
lods
loop
test
sbb
jl
pop
add
xor
js
cli
add
and
lock
jp
add
jp
dec
sbb
xchg
push
jl
mov
pop
lock
fldl
enter
vpunpckhqdq
ss
mov
mov
fwait
sub
xchg
mov
cmp
add
or
movsl
outsl
mov
mov
adc
dec
inc
mov
adc
xor
sarl
push
enter
jae,pt
cwtl
stos
pop
inc
xlat
loopne
pop
xor
xchg
adc
mov
daa
stos
push
mov
push
or
sti
dec
sub
out
lret
inc
out
mov
mov
cs
cwtl
xchg
push
test
push
cs
jle
test
popa
lcall
xchg
lcall
andl
push
xchg
xor
repz
out
fwait
xor
adc
adc
test
jo
push
or
popf
das
repz
pop
repz
pop
push
push
inc
mov
adc
cwtl
aad
decl
int
test
mov
loope
jbe
fdivrl
std
cmp
cmp
and
out
lods
js
dec
int3
inc
add
cmc
sbb
data16
jae
fcoms
daa
cmp
outsb
lret
sarl
xor
rcrl
pop
into
repnz
movsl
out
jb
dec
loopne
popa
stos
dec
mov
jmp
out
or
daa
rorb
ret
je
jg
movsb
xchg
je
rcrb
icebp
xabort
mov
cmpb
lahf
cmc
sbb
dec
imul
aaa
add
leave
or
lods
inc
xor
jle
fisttpll
xchg
out
out
xchg
add
inc
jmp
pusha
jns
push
sub
push
shlb
inc
mov
pop
jge
adc
mov
int3
outsb
push
push
adc
pop
sub
ret
or
cs
jae
popl
xchg
or
inc
leave
fbstp
incb
xchg
sarl
xchg
sbb
xchg
in
int
xchg
and
ret
in
orb
rol
aam
pop
loope
jge
out
or
jno
rcll
mov
pop
cli
pop
pop
or
adc
fisttps
cmp
add
loope
dec
push
lahf
mov
scas
sarb
std
ret
add
loope
add
das
popf
sub
cmp
icebp
leave
adc
mov
sub
push
add
mov
jno
bound
fiadds
mov
jp
ja
jb
cmp
lods
or
aad
cmpsw
dec
dec
insl
jmp
ljmp
mov
push
repnz
add
loopne
adc
and
jl
jns
das
stos
mov
enter
js
out
out
fstpl
sub
jle
test
dec
in
repnz
adc
pushf
dec
dec
andb
mov
loope
push
push
mov
pop
rcrl
or
fistl
cmp
daa
xchg
pop
xorl
sub
lahf
stos
fistpll
jmp
and
jle
in
data16
fwait
enter
aaa
mov
cmp
int3
push
inc
and
or
jns
mov
js
sub
insb
push
jns
jecxz
out
jp
xor
das
test
dec
jo
xor
cld
mov
push
rcll
outsb
mov
cmc
shll
fcoml
pop
test
sbbl
das
sti
loopw
xorl
bound
and
cld
lock
sub
insl
fnstenv
mov
lods
mov
enter
test
ret
sbb
mov
mov
into
xchg
repnz
sbb
je
push
leave
shll
sub
sbb
insl
jne
fdivrp
out
jae
aam
es
imul
ret
pop
xchg
ret
movsb
mov
add
sub
push
add
and
icebp
in
sti
loope
data16
mov
sbb
jbe
mov
sti
xchg
pop
inc
add
xchg
imul
mov
mov
sahf
cmp
dec
fidivl
daa
test
dec
sub
iret
jl
xor
scas
loop
mov
fisttps
inc
mov
push
inc
outsb
push
loopne
cmp
fcoml
into
bound
sub
fcmovne
push
sub
push
bound
idivb
enter
pop
xchg
inc
xchg
inc
pusha
imul
dec
les
jl
nop
in
in
and
subb
jo
idivl
xlat
jbe
push
das
xor
mov
repz
dec
xchg
sti
push
pop
out
sub
sub
mov
fmull
popf
iret
gs
inc
jo
cmpsb
mov
cld
xchg
loop
cmpsb
arpl
mov
pushf
inc
pop
inc
jne
jmp
jge
dec
adc
iret
xor
fstl
xor
fnstenv
cmp
and
sub
popf
ss
mov
incb
je
scas
add
js
bound
dec
xchg
push
pop
and
push
jae
dec
iret
dec
sbb
fiadds
cmp
pop
cmp
scas
test
dec
js
daa
cmp
fisubrs
xlat
dec
cmp
aaa
mov
jecxz
dec
or
dec
or
or
pop
dec
je
cltd
mov
sub
dec
push
pop
fimull
test
xchg
cmp
adcb
add
mov
or
movsl
xchg
jl
orb
outsb
movsl
dec
aam
jb
cwtl
push
fbstp
scas
notl
xchg
movsb
xchg
sub
jae
fld
inc
notb
mov
lods
sbb
ds
ss
or
dec
xchg
xorl
fistl
fiaddl
push
lcall
in
mov
inc
jge
jne
enter
xor
mov
popf
push
jbe
jle
pusha
mov
xchg
cwtl
in
jp
dec
and
das
inc
and
push
scas
loope
jnp
inc
sahf
aaa
add
xchg
push
adc
es
sub
insl
mov
add
adc
in
push
repz
imul
xor
sub
cld
and
jmp
test
jnp
scas
repz
xchg
shll
lcall
test
bound
mov
inc
or
out
sbbl
mov
mov
mov
icebp
push
inc
cmp
add
push
push
push
nop
cmp
xchg
stos
pop
test
leave
push
js
sbb
icebp
outsl
ljmp
mov
push
lret
lret
mov
into
repnz
or
sbb
mov
push
testb
cmp
push
in
dec
push
add
xchg
mov
cs
outsb
jnp
mov
push
cld
jl
addr16
dec
call
lods
xor
or
inc
out
int
sub
les
mov
mov
repz
xor
xor
bound
insb
mov
std
push
pop
test
xor
call
arpl
test
ds
sbb
mov
mov
int
sbb
adc
xor
es
in
js
not
daa
insl
sub
enter
scas
xor
sbb
cltd
jnp
mov
gs
adc
int3
pop
scas
dec
hlt
je
int
jo
scas
out
outsl
fs
add
test
mov
fcmovnu
insb
aas
and
cmp
bound
sbb
xchg
mov
jge
in
push
out
jbe
and
cmpsb
add
mov
push
xor
cmp
sub
jno
mov
push
out
push
outsl
loope
jle
jle
dec
inc
frstor
add
mov
add
in
cmpsb
rorl
rorb
jne
test
stc
add
test
sahf
jbe
pop
fists
movsl
adc
arpl
dec
mov
push
push
jmp
je
cld
repnz
adc
jle
jb
pop
call
sub
daa
jmp
faddl
je
and
push
or
mov
push
mov
push
mov
add
ret
push
jno
xchg
pop
mov
sbb
or
daa
mov
fldenv
sbb
add
add
adc
incb
std
call
in
xchg
push
into
cmpsl
insl
cmp
fldcw
push
or
push
xchg
pop
daa
sbbl
push
jecxz
popf
shl
fisubl
loope
shlb
ja
push
outsb
mov
nop
mov
cli
mov
call
fwait
push
orl
shrb
mov
popa
pop
push
adc
outsb
inc
test
bound
test
adc
in
repz
fsubrp
addr16
int
pop
ss
int
repnz
mov
sbb
pop
lds
or
bswap
push
cmp
push
stos
test
test
in
push
in
mov
mov
and
adc
jmp
shrb
cmpsb
in
cmp
ret
xchg
scas
cwtl
hlt
popf
mov
cmpsl
pop
push
push
push
leave
fistpll
cmc
rol
pushf
je
rcll
arpl
std
out
mov
xlat
lea
sbb
mov
dec
ljmp
ficoml
outsl
fidivl
push
les
ljmp
mov
add
dec
std
pop
out
pop
pop
jns
loope
mov
shrb
mov
jge
out
xchg
and
pop
or
inc
mov
xchg
in
add
mov
inc
sub
shl
xchg
data16
push
adc
sub
popf
mov
testl
pop
dec
sbb
call
out
push
shrb
or
push
clc
inc
push
xchg
sub
jecxz
es
sbbl
jmp
mov
push
or
push
lea
les
iret
jmp
push
movl
mov
inc
cwtl
push
outsl
inc
jmp
xor
xor
cmp
movsb
pop
insl
adc
xchg
inc
clc
mov
dec
or
cmp
aaa
popa
push
pop
out
cli
lea
sub
mov
fcoms
jecxz
pop
or
xor
inc
ret
shrl
test
lods
dec
enter
xchg
sbb
xor
jmp
or
test
mov
fstp
test
inc
loopne
in
adc
sbb
lret
sbb
jne
jbe
mov
fs
sbb
fstpt
pmulhuw
sub
and
scas
sbbl
jmp
rcll
loop
mov
mov
fsubrp
add
or
shll
data16
adc
enter
loop
gs
arpl
outsl
les
int3
lcall
dec
test
lea
cld
cmc
cwtl
lahf
adc
fiaddl
aas
xor
inc
cli
jmp
and
lock
scas
sbb
jp
xchg
push
cltd
pop
inc
in
xchg
inc
adc
call
daa
sbb
fisttpl
ffreep
jge
loope
mov
push
imul
mov
inc
jo
push
loopne
in
pop
jl
and
lods
testb
shlb
mov
sbb
add
lcall
in
movsl
movsb
adc
push
pop
movsb
push
pop
call
push
xchg
fimull
cltd
outsb
sti
fldt
leave
add
pop
xlat
adc
loop
adc
out
jnp
loop
sub
adc
imul
jbe
xchg
fisubrs
jecxz
ss
shrl
sub
mov
sub
outsb
pop
movsl
add
sub
push
push
dec
arpl
arpl
mulb
mov
sub
lods
out
imul
dec
dec
pop
fmulp
lods
push
inc
and
mov
mov
pop
orl
pop
pop
sub
loop
push
pop
push
enter
test
xor
xchg
ja
cli
mov
xchg
or
movsb
mov
or
or
lahf
mov
adc
or
shl
xor
sbb
mov
dec
mov
add
cmp
push
or
xor
or
sub
sbb
sarb
mov
sar
cmp
cwtl
int
pop
std
notl
cwtl
ret
sub
loopne
ficoms
in
cmpsb
vmulsd
mov
and
cmp
mov
loope
or
jg
test
fmul
jnp
sbb
or
test
cmp
daa
jecxz
dec
pop
aam
ret
xor
add
cs
mov
cmp
pop
xchg
popf
imul
ss
inc
insl
jbe
jb
ljmp
and
test
addr16
adc
jno
rcrl
jb
sbb
test
data16
jo
xchg
or
pop
jmp
xor
inc
xchg
push
into
test
pop
ja
pusha
pop
add
adc
ret
std
out
stos
jecxz
shll
add
jmp
cli
jecxz
pop
inc
sub
inc
popf
in
mov
xchg
ss
cltd
dec
inc
and
lcall
mov
adc
pushf
pop
js
xchg
push
mov
dec
fistl
cmp
stos
arpl
js
enter
adc
and
inc
mov
pushf
pop
inc
mov
andl
je
les
mov
fmull
jns
inc
jmp
bound
shlb
adc
xor
rcl
jnp
mov
icebp
mov
ljmp
inc
movsb
or
xchg
dec
add
jp
mov
sub
lds
inc
stc
paddb
xor
mov
or
aam
mov
push
std
lods
outsl
stos
push
sbb
neg
push
sti
jnp
js
imul
add
sub
dec
aad
mov
les
int
mov
testb
push
loopne
ss
and
cmp
fs
icebp
lds
ficoms
add
sbb
pop
fdiv
test
mov
dec
test
jp,pt
mov
adc
mov
pop
xchg
cltd
scas
jno
rorb
aad
adc
xor
rclb
cs
mov
pop
cwtl
je
xor
adc
leave
data16
scas
or
movsb
mov
mov
jne
mov
sbbb
dec
daa
add
mov
xchg
xor
push
xor
inc
test
ret
ljmp
sbb
shrb
jecxz
add
cli
mov
xlat
and
dec
inc
mov
sbb
pop
in
movsb
mov
jae
popf
push
ret
fcoms
cmpsb
or
je
imul
fincstp
xchg
js
mov
jge
inc
scas
dec
ret
push
cs
outsb
ljmp
lea
fs
mov
fdiv
test
mov
call
fs
xor
xchg
sub
stc
pop
jo
pop
int
and
or
sub
push
ret
push
pop
enter
adcl
and
inc
aas
sarl
stc
cwtl
mov
xlat
stc
mov
movsb
fmul
into
adc
in
cwtl
cmpsl
sbb
neg
mov
lcall
xchg
popf
out
add
cmc
rol
imul
cmp
push
push
or
and
outsb
hlt
int3
and
lods
jge
sub
push
jge
dec
sbb
movb
dec
in
iret
ret
push
sbb
jno
pop
cmp
scas
ds
ljmp
iret
stc
jbe
sbb
fwait
xor
mull
add
add
push
cmpsl
lock
mov
mov
pop
jecxz
std
pushf
fldcw
cmc
xlat
js
dec
jg
add
mov
clc
in
mov
mov
shl
lods
imul
and
or
dec
call
sbb
pop
mov
sbb
or
and
dec
xchg
inc
pop
lods
mov
fs
lock
jo
pusha
push
hlt
lret
xor
aas
jb
dec
mov
adc
xadd
add
cmp
daa
cwtl
out
inc
pop
out
xor
inc
jae
xchg
adc
push
cmp
and
jmp
mov
mov
mov
jg
pushf
mov
pop
dec
clc
into
push
dec
das
xchg
sbb
leave
out
repz
ss
push
inc
mov
xchg
iret
pop
pusha
shl
hlt
dec
ds
and
push
sahf
out
pop
repz
add
mov
and
in
push
xor
dec
cmp
or
xor
shll
adc
push
clc
rcl
shrl
div
xor
das
xor
push
cmp
mov
ret
pop
jmp
das
xor
mov
mov
jge
imul
add
mov
stc
sub
out
dec
push
out
pop
mov
xchg
imul
mov
call
ret
test
pop
cltd
push
lret
jg
sbb
xchg
cs
pushf
adc
int3
jo
adc
mov
inc
add
dec
aad
or
push
or
clc
scas
fisubrs
sub
jp
mov
pop
and
mov
mov
adc
jo
iret
mov
rolb
adc
xchg
push
cmpsl
scas
sub
je
scas
int
mov
test
mov
nop
iret
shrl
lcall
lods
or
mov
or
or
loop
loop
cmp
add
pop
ja
mov
xchg
sub
pop
and
mov
lea
pop
jae
ret
sti
in
aad
jb
xchg
scas
xchg
jp
push
sbb
mov
daa
sbb
mov
mov
adc
mov
sub
bound
jnp
pop
pop
imul
add
adc
push
mov
addr16
xor
inc
xchg
push
clc
mov
faddl
rclb
out
jns
push
sub
sti
mov
sbb
push
enter
gs
xchg
mov
inc
jne
xor
mov
rolb
and
or
aaa
aas
cwtl
arpl
std
scas
aas
stos
or
out
mov
pop
xchg
dec
adc
mov
cmp
pop
inc
shl
or
movsl
inc
cmp
call
icebp
push
int3
lret
pushf
into
mov
jo
cmp
mov
jae
sbb
push
scas
jl
fisubl
and
out
mov
jo
fisttpll
rolb
xor
pop
stos
and
in
push
pop
sub
pop
push
mov
std
jle
inc
imul
push
mov
xchg
decl
cwtl
add
or
adc
xor
pusha
mov
outsb
xadd
add
mov
mov
dec
ret
sub
mov
lods
dec
add
mov
or
jle
repnz
nop
hlt
ficoms
ficompl
mov
adc
or
das
insl
test
fsubl
outsb
push
mov
cmp
inc
inc
popa
test
test
pop
mov
add
adc
int
sbb
cmp
outsl
loope
aas
cmp
mov
mov
cmpsl
in
mov
mov
inc
mov
mov
imul
sub
cmp
mov
or
enter
cmp
xor
scas
inc
pop
mov
inc
in
dec
pop
ljmp
or
mov
out
orb
jae
mov
cmp
lahf
ss
or
dec
sub
add
shll
mov
pop
movsb
scas
push
jno
dec
data16
jp
lods
loopne
inc
adc
flds
mov
ja
cmp
jnp
mov
adc
das
xor
outsb
mov
cmp
adc
push
mov
push
dec
add
xorb
cmpsb
pushf
pop
repz
jae
dec
loope
fwait
ljmp
aaa
mov
pop
repnz
mov
xchg
movsl
or
inc
inc
jg
out
out
loopne
ja
or
cmp
bnd
cmp
or
ljmp
lcall
push
test
jmp
xacquire
lret
cli
sahf
cli
into
lds
jl
add
pop
inc
sub
mov
pop
or
int3
sub
lods
push
push
jl
mov
stos
sub
pop
icebp
adcb
and
jae
jb
in
mov
adc
cs
mov
mov
inc
mov
fs
cli
mov
xor
ljmp
jle
ficoml
insb
sbbl
inc
stos
push
sarb
inc
push
ljmp
ljmp
lcall
mov
sbb
into
test
jg
jb
lds
movsb
ljmp
ja
xor
add
gs
les
xchg
cmp
cld
mov
aaa
aaa
cmp
pop
outsl
aad
pop
xchg
dec
sub
cmpsl
stc
clc
inc
mov
bound
je
and
cwtl
nop
mov
mov
in
mov
cmp
xchg
add
mov
and
push
inc
pop
sub
jge
mov
dec
adc
xor
add
test
loope
push
and
adc
mov
mov
std
jno
mov
pop
lret
insl
aam
daa
mov
add
scas
mov
outsb
enter
mov
dec
aam
inc
push
dec
imul
xor
mov
sbb
sbb
cmp
popa
fprem
sbb
push
fcoms
cmp
add
xchg
insb
mov
pop
pop
fldlg2
jno
flds
fidivrl
push
sahf
pop
mov
loope
sbb
ja
adc
cli
mov
sbb
pop
test
pop
lahf
insb
or
push
arpl
aaa
mov
stc
inc
xor
daa
mov
dec
jle
loopne
xor
mov
dec
andl
mov
adc
jmp
mov
mov
xchg
sbb
add
jbe
inc
pusha
mov
dec
xor
test
add
fists
jb
shrl
xor
lcall
insb
and
scas
push
aam
movsl
xchg
pop
fcoms
sub
shll
lds
faddl
push
aaa
xchg
dec
mov
pushf
faddp
cld
loope
rol
pop
pop
lods
add
addr16
inc
jge
adc
jo
in
xor
adc
leave
rclb
pop
lods
jns
xchg
ss
mov
lret
jne
rcrl
faddp
fstpl
mov
ret
lcall
pop
xor
inc
push
clc
mov
into
mov
cwtl
add
stos
mov
jmp
into
mov
lods
stos
shrl
or
jnp
aas
xchg
ja
push
pop
test
cli
gs
or
sbb
inc
lods
add
or
shlb
subb
adc
jbe
aas
push
mov
push
xchg
test
lea
sti
lcall
int3
sub
sub
xlat
ja
cltd
mov
aas
sbb
scas
insl
cmp
mov
mov
add
pop
or
icebp
xor
repnz
gs
push
lds
inc
push
adcl
push
dec
and
push
shll
push
sti
sub
and
jg
bound
or
cmc
xor
mov
sbb
lods
shlb
aad
push
push
in
add
jp
mov
shl
mov
std
push
test
push
jl
out
ljmp
clc
sbb
aaa
ret
mov
push
xchg
popa
sub
cmc
inc
sub
adc
jb
inc
repz
lret
out
mov
dec
xor
pop
lea
push
dec
add
adc
jo
shrl
sub
xchg
mov
fistpll
push
mov
nop
out
and
xchg
decl
pop
jns
aad
pop
dec
dec
cmp
push
data16
lcall
clc
cs
jbe
les
ljmp
lods
adc
dec
mov
arpl
fdivp
pop
mov
sbb
jmp
or
adc
sahf
int3
mov
xchg
xlat
push
jecxz
pop
push
ret
test
adc
adcb
pop
and
inc
arpl
push
cmpsl
adc
adc
sahf
std
dec
fsubrl
mov
dec
inc
cld
out
sbb
mov
outsl
add
into
fwait
outsb
adc
push
andb
jno
sub
mov
stos
movsl
stos
mov
add
sbb
lds
mov
call
pop
and
sub
pop
sub
cli
mov
cmp
mov
movsl
or
push
adc
jnp
test
gs
xor
mov
add
sti
mov
les
sub
sar
mov
arpl
divl
jmp
js
shrl
stc
fdivrl
repz
add
dec
shll
push
test
jb
jp
mov
mov
leave
mov
xor
lret
aad
mov
ljmp
cmp
mov
or
mov
ret
lcall
dec
leave
out
test
stc
rcrl
repz
push
decl
mov
xchg
test
cmp
arpl
fs
lock
roll
push
inc
in
faddl
jnp
mov
lock
xor
test
inc
aam
jl
push
popa
data16
sahf
clc
adc
ljmp
xor
in
fldl
mov
les
mov
cmc
pop
sbb
pop
nop
xor
and
or
and
in
push
sub
and
pusha
jne
xor
sbb
lods
lahf
mov
rorl
leave
insb
std
cmp
xchg
mov
mov
push
inc
and
lea
sub
push
stos
dec
mov
mov
imul
lcall
jb
and
cs
fst
xchg
enter
mov
inc
xchg
nop
adc
inc
pop
push
cmove
addr16
fbld
jmp
test
mov
call
cltd
cmpsb
add
lahf
pushf
cmc
jle
shll
inc
mov
mov
inc
add
popa
cmp
mov
test
fsubs
and
mov
dec
rcrl
sub
icebp
jbe
jp
cmp
stos
jbe
or
aas
sub
aam
pop
addb
bound
fisttpll
scas
fildll
rol
xor
sbb
push
mov
int3
mov
sbb
int3
nop
inc
or
leave
cmp
jno
or
cmpsl
out
inc
and
mov
imull
dec
enter
rorb
xchg
scas
adc
lahf
ret
adc
jge
mov
fst
dec
mov
icebp
mov
push
mov
dec
in
test
inc
imul
push
adcl
leave
cld
xchg
mov
stos
imul
push
lret
ja
stos
adc
push
sbb
jl
sbb
and
iret
and
leave
lret
fimull
cmp
sub
and
sbb
push
mov
sarb
repz
test
clc
sti
and
xor
adcb
sti
mov
scas
inc
test
and
ds
loop
adc
pusha
scas
adcb
bound
xor
push
dec
cmpsl
mov
int
push
mov
mov
sub
stos
mov
xor
ljmp
pop
sbb
addl
in
jo
sbb
addr16
inc
mov
stos
mov
or
lret
jnp
stos
sub
pop
fcomi
ja
cs
psubusb
movsb
cmpsl
out
push
je
or
inc
ret
jle
repnz
cmpb
testl
insb
or
test
dec
pop
pop
enter
cmp
les
cmp
mov
test
push
push
test
inc
js
in
test
pushf
rcrb
pop
jno
scas
xor
shr
push
shl
cli
xchg
pop
jmp
push
ret
imul
mov
inc
rcll
xor
sub
lret
scas
adc
mov
addl
pop
lret
bound
hlt
mov
shrd
xchg
push
push
das
jbe
mov
ss
ret
dec
pop
in
xor
pminub
push
sub
inc
mov
out
iret
adc
jecxz
mov
rcl
xchg
fdivs
sbb
or
pop
loopne
pop
fsts
and
shlb
mov
push
dec
or
imul
pop
push
gs
fisubrs
add
outsl
sub
and
mov
dec
aam
add
mov
stos
push
insb
adc
xor
popf
dec
mov
jo
sbb
repnz
test
inc
pop
pop
mov
mov
xchg
push
adcl
adc
and
mov
mov
cli
pop
popa
cmpsl
jge
xchg
nop
dec
pop
sbb
inc
or
xchg
into
jl
mov
in
cs
and
shlb
call
sub
shll
sar
mov
sti
dec
ud1
stos
sub
out
movsb
push
rcll
sahf
mov
aaa
sarl
in
jp
adc
rolb
mov
cmc
sar
dec
sub
ja
jnp
xor
mov
dec
scas
pop
js
fcomps
popf
bound
mov
jo
pop
mov
mov
push
sbb
scas
cmp
pop
mov
mov
mov
repz
mov
xchg
test
sbb
test
adc
sti
sbb
repz
jb
test
xor
out
mov
cmpsl
pusha
stc
add
cmp
pop
mov
rcr
push
repz
add
sub
jecxz
jge
mov
or
aaa
pop
cld
outsb
lds
add
mov
push
push
cld
out
inc
mov
roll
and
ret
repz
xchg
adc
jle
mov
xor
leave
jb
out
inc
lret
insl
xor
mov
lock
cmp
sbb
rcr
in
and
stc
loop
adc
adc
pop
dec
dec
sub
movsb
mov
arpl
cmc
mov
jle
mov
xchg
jecxz
sbb
add
out
mov
aaa
fstl
negl
or
pop
mov
cmpsb
fst
adc
out
data16
xchg
mov
sub
adc
je
arpl
lret
insl
sti
mov
cwtl
pop
push
push
pop
dec
cwtl
sbbb
call
outsb
je
insl
cld
mov
insb
adc
sub
jns
mov
leave
pop
pop
int3
clc
mov
push
push
rclb
jo
sub
test
sbb
scas
wbinvd
iret
mov
cld
cwtl
ss
mov
or
and
inc
sahf
ljmp
adc
ds
push
mov
mov
arpl
cmpsb
das
mov
cs
movsl
jo
icebp
outsl
cmp
sub
adc
cmpsl
daa
mov
mov
sti
dec
pop
xchg
outsl
movb
mov
shrb
aad
push
out
dec
jge
outsb
push
xor
imul
jnp
or
or
mov
pushf
addr16
push
mov
fwait
or
out
data16
mov
icebp
mov
push
fisubrl
xchg
or
dec
adc
cmp
in
pop
add
sbb
mov
xchg
ja
lahf
stos
jmp
shrb
pusha
and
mov
cmp
cmc
call
loope
add
mov
lret
stc
out
xor
cltd
xor
cmc
jmp
fs
xchg
ret
dec
shll
movsl
call
lds
repnz
push
or
popf
mov
adcl
scas
and
xchg
jns
sti
iret
imul
mov
xchg
ds
stos
and
or
je
outsl
or
iret
push
mov
pop
test
cwtl
push
add
cs
add
testl
lods
jo
rcrl
dec
jp
sbb
add
and
xchg
push
popf
mov
mov
outsl
bound
outsb
out
repz
stos
scas
cmpsb
scas
jbe
adc
out
pop
adc
in
adc
cwtl
adc
in
mov
mov
das
and
clc
ret
push
jmp
push
mov
or
test
sbb
ret
out
ss
mov
rorb
les
dec
mov
loope
daa
add
dec
xlat
add
movsl
dec
lahf
jbe
pop
mov
ror
inc
ljmp
or
sarb
lahf
or
mov
mov
pop
and
shlb
dec
into
cmp
rorb
cmp
xor
pop
or
fcoml
mov
inc
jns
cmp
filds
subb
adcb
xor
mov
iret
pop
sbb
fists
ja
sbb
movsl
adc
xchg
mov
add
jmp
icebp
cmp
mov
inc
mov
inc
add
pop
jne
fildll
adc
enter
sbb
out
movsl
add
mov
movsb
movsl
cltd
push
inc
pop
push
shlb
test
scas
dec
xchg
int
xchg
std
mov
dec
ja
sbb
outsb
lock
adc
bound
push
sbb
in
xchg
shlb
push
mov
hlt
or
mov
in
inc
orl
and
jo
pop
cmp
shl
sti
fstps
gs
bnd
test
pop
xchg
orl
inc
push
or
fsubs
mov
mov
cmp
push
cmp
sub
jns
repnz
fdivs
xor
xor
test
mov
pop
xchg
addl
fnstenv
lcall
and
ss
imulb
enter
xchg
ret
ret
lods
and
fmulp
xor
or
das
xchg
lret
dec
mov
mov
pop
pop
ds
pop
test
fwait
enter
adc
or
in
fists
add
loope
shr
sbb
sub
and
sbb
pop
add
lret
cmp
stc
shr
out
movsl
mov
fsubl
xor
arpl
jp
sbb
xchg
lea
inc
arpl
cmp
leave
pop
xor
ds
cwtl
scas
jecxz
push
rolb
mov
jnp
andl
popa
adc
and
nop
mov
lret
aas
das
sahf
ficoml
push
add
sub
xor
jnp
loopne
add
lcall
add
adc
out
sub
xchg
adc
movsb
lret
gs
ljmp
fbstp
arpl
adcb
enter
ds
mov
ss
mov
dec
pop
mov
loope
sub
mov
insl
cs
repz
adc
test
addr16
cld
lods
xlat
cmpsb
xor
jb
test
clc
fucomp
addr16
cmp
sub
fadd
add
push
jae
inc
in
adc
les
inc
fildl
hlt
stc
and
inc
or
fs
push
into
popl
mov
add
aaa
jnp
lods
mov
mov
loop
inc
dec
fiaddl
dec
psubsw
pop
mov
sbb
push
mov
outsl
push
inc
mov
hlt
cmpsb
cld
sub
mov
cli
aad
jmp
aam
scas
mov
dec
add
lea
lcall
int
into
inc
mov
enter
xchg
dec
shll
lods
push
pop
loope
les
movsb
test
inc
out
sti
and
sbb
mov
into
dec
movsl
push
push
and
mov
cld
adc
call
inc
repz
int3
test
cld
rolb
test
or
cltd
iret
dec
inc
mov
je
lea
inc
ja
cld
pop
iret
leave
insb
orl
adc
adcl
shll
push
sub
xchg
xor
inc
mov
sti
lods
mov
testb
out
fs
jle
nop
fdivs
shlb
addr16
push
push
cltd
lret
xchg
ds
test
push
inc
sbb
int3
and
orl
mov
out
and
xchg
xchg
dec
fwait
stc
dec
in
movsl
adc
stos
ret
cmp
dec
rclb
push
sub
call
push
cmpsb
adc
push
adc
sahf
pop
inc
fcmovne
pushw
out
dec
inc
cmp
aas
push
aas
push
jne
inc
in
insl
neg
lcall
addr16
pop
push
xchg
adc
mov
gs
fld
sub
out
jbe
jnp
sbb
lahf
and
sub
xchg
jle
lock
testl
sub
push
aam
jns
push
sbb
ss
mov
and
shrb
dec
mov
je
pop
dec
or
lods
ja
mov
fisttpl
inc
add
arpl
xor
add
inc
cmpsb
dec
daa
jb
movsb
or
mov
in
pop
mov
add
mov
mov
xor
jo
aas
lods
push
es
call
mov
xor
mov
xlat
rorb
cld
jge
pmulhw
mov
pop
imul
test
ret
call
sub
or
test
pushf
push
sar
bound
imul
inc
sti
adc
cmp
scas
jmp
or
insb
push
cld
daa
cmpsb
mov
imul
pushf
insl
aam
jo
inc
inc
iret
cwtl
inc
lcall
mov
daa
jecxz
cmpsb
xchg
push
or
dec
out
mulb
dec
mov
js
xor
imul
sub
xorb
in
or
loopne
hlt
adc
insl
das
xchg
sbb
ret
adc
ret
and
adc
mov
push
data16
xchg
inc
sub
icebp
jno
adc
imul
lea
sbb
sbb
cwtl
pop
mov
xor
dec
xchg
inc
mov
mov
push
fs
mov
cmp
aas
cld
nop
scas
ret
scas
cmpsl
and
ja
sub
sub
adc
call
faddl
stos
insl
dec
lods
into
inc
cs
mulb
xchg
in
nop
stos
pop
cltd
mov
inc
dec
lods
push
jl
pop
insb
lret
mov
imul
xchg
inc
dec
pop
jmp
xchg
add
push
mov
into
ja
rclb
cs
jmp
ljmp
sbb
es
mov
xchg
lock
fs
lret
cmp
bound
negl
sti
jg
mov
shr
add
cli
shlb
inc
stc
cld
inc
aam
mov
ret
add
pop
fisubs
femms
push
xor
int3
bndldx
sub
cmp
ret
loop
cwtl
xchg
cmp
push
leave
adc
dec
pop
mov
sbb
push
pushf
testl
mov
call
push
push
xchg
daa
mov
fidivs
jp
lret
jge
rcr
jg
rcll
pusha
sbb
sti
les
and
lea
fwait
in
pop
out
icebp
pop
mov
lock
scas
mov
inc
add
inc
inc
inc
loopne
ret
loop
dec
enter
add
mov
cltd
les
es
lock
mov
mov
mov
cmp
push
lahf
pop
scas
iret
sahf
aam
pop
outsb
xor
jns
add
fwait
xlat
ljmp
push
lret
insl
dec
or
enter
rolb
test
xor
daa
mov
bound
pop
jnp
xchg
dec
shlb
out
sbb
icebp
mov
xor
push
ds
jno
mov
jmp
push
cmp
jl
dec
repz
sbb
fwait
sti
in
dec
add
jmp
adc
push
xchg
cmp
dec
mov
in
ss
out
cmp
test
cmp
in
jle
adc
scas
test
adc
ret
into
adc
add
test
mov
aaa
pop
cwtl
adc
clc
xor
imul
dec
pushf
xor
movsl
xchg
nop
roll
inc
xorl
sbb
lods
test
ljmp
sub
push
fsubs
mov
or
out
mov
pop
sahf
jno
dec
mov
lods
sub
pop
test
sarl
inc
lret
arpl
mov
loope
mov
loope
sub
pop
sbb
pushw
dec
jns
out
ss
popa
mov
xor
mov
insl
push
int
and
mov
aam
push
sbb
insl
sbb
icebp
sahf
pusha
jle
push
ljmp
pop
fsts
jmp
ret
and
ds
jecxz
movsb
and
xor
outsb
xor
addr16
shlb
push
imul
mov
and
mov
outsl
ret
dec
ret
outsb
xchg
scas
repz
xor
xchg
or
sahf
sub
fwait
dec
stos
lods
or
cli
or
dec
imul
into
imul
mov
fnsave
xchg
and
jne
lcall
xor
cwtl
adc
mov
cmp
sub
xor
cmpsl
cmp
imul
inc
jno
mov
loope
mov
pop
loop
lcall
in
bound
sub
add
enter
aas
sti
lds
jno
adc
push
rclb
out
jg
dec
das
dec
popa
sbb
mov
test
fmuls
sub
hlt
lea
repz
adc
sarb
push
push
xlat
jbe
sub
xor
cwtl
je
xor
dec
add
lods
xor
icebp
adc
movsl
test
inc
nop
mov
inc
jl
inc
jns
cmc
and
sbb
xlat
es
fprem
sub
clc
bound
hlt
jno
cwtl
sub
sub
xor
js
or
cwtl
inc
test
jbe
aas
mov
into
mov
cmpsl
popa
lret
sub
adc
add
jg
or
mov
xchg
and
mov
cmp
inc
js
mov
and
lcall
pop
das
test
or
loop
mov
mov
mov
gs
cwtl
or
mov
mov
ficompl
pushf
aaa
push
stos
shl
mov
hlt
mov
lock
arpl
je
fildll
sahf
jl
or
add
push
cmpsl
fcmovnb
mov
or
xor
fcompl
icebp
xor
icebp
call
pop
mov
and
lret
inc
daa
mov
mov
pop
inc
notl
inc
pop
xchg
jnp
push
jnp
in
insb
cld
popa
mov
test
xchg
pop
push
js
and
jmp
lds
daa
xchg
cmp
pop
arpl
adc
fs
inc
sbb
popf
add
lret
or
cmp
pop
loope
in
test
add
insl
jne
sub
sub
scas
shl
lret
sbb
xchg
test
sbb
push
cmp
rcrb
in
jns
adc
adcl
pop
ds
testb
push
or
movsb
lret
adcl
sbb
and
cmp
in
sub
jnp
sti
or
fstpl
sbb
insl
sub
hlt
mov
pop
dec
into
daa
mov
mov
pusha
test
cmp
mov
lcall
ret
push
loopne
ret
jo
mov
std
dec
jp
xor
cltd
int3
imul
dec
nop
repnz
sar
icebp
add
push
inc
jnp
dec
push
mov
add
jmp
in
or
adc
jmp
movsb
lahf
in
mov
movsl
aam
fldlg2
ss
je
repz
fistps
jb
cwtl
inc
pop
xchg
lock
xchg
xchg
ds
xor
rcrl
lahf
mov
xchg
loop
fmull
in
mov
jne
and
shlb
je
sub
or
push
and
inc
mov
push
lods
adc
or
lea
sbb
or
lea
jge
lock
mov
dec
in
ret
imull
jbe
mov
jno
cmpsl
ds
enter
or
inc
mov
lahf
xchg
in
cs
inc
jbe
xor
lahf
push
scas
pop
sahf
in
into
xor
es
cmp
fwait
test
popf
jecxz
aaa
pop
pop
adc
es
push
shl
lock
in
outsl
push
push
scas
in
push
outsl
outsl
mov
in
iret
scas
inc
sbb
pusha
push
inc
add
add
out
pushl
inc
mov
or
test
mov
imul
jmp
sub
aaa
js
rcrb
mov
stc
imul
and
cmc
movsb
fdivr
fstpl
stc
cmp
mov
xchg
lcall
or
call
faddp
es
addb
push
fwait
add
xor
ljmp
in
cmp
cmp
pop
scas
or
jge
mov
roll
adc
imul
fstp
popa
jecxz
cmpsb
pop
sbb
jp
jge
mov
rep
ret
mov
and
fadd
mov
add
test
sbb
aam
nop
leave
jmp
xor
cmp
in
aam
sbb
popa
cmpsl
mov
dec
or
add
icebp
mov
clc
in
aaa
push
in
rcr
add
addb
mov
push
cmp
xchg
mov
mull
mov
xor
ljmp
ret
xor
fnstcw
mov
std
lock
cmc
insl
push
jmp
mov
sahf
xor
xor
js
sub
xchg
jl
cld
adc
cmpsb
aam
xor
jnp
jg
dec
gs
test
dec
loope
or
push
jle
mov
cwtl
cmp
inc
popf
jo
addb
dec
enter
add
pop
addl
idivl
push
pushf
call
fcmovbe
cmp
repnz
inc
xchg
fdivrs
add
repz
daa
outsb
xchg
xchg
inc
mov
insb
js
int3
xor
pushf
cs
pop
lods
std
mov
jg
mov
cmpsb
inc
jno
outsl
add
scas
mov
pop
shrl
cmp
roll
pop
imulb
fmull
aas
jo
jae
pusha
mov
jbe
jle
aaa
cltd
lret
mov
push
jae
cmp
xorl
aaa
and
popa
pop
cmp
pop
jecxz
fwait
testb
xchg
push
jmp
testl
int3
sub
gs
out
sbb
cmc
mov
or
test
inc
sub
dec
popa
xchg
mov
das
xchg
adc
fwait
or
in
push
popf
mov
lahf
cmp
xchg
hlt
cmp
out
or
inc
and
pop
push
in
lods
add
xorl
repz
cld
daa
lock
inc
sub
sub
cmp
push
fimuls
call
iret
int3
test
loope
in
stc
ljmp
sbb
sbb
push
sbbb
and
repnz
enter
xchg
adc
cmc
xchg
fcmovb
lret
push
sbb
and
cmp
gs
mov
or
sbb
jle
adc
sub
pop
or
xor
mov
pop
fs
das
orl
or
in
push
js
and
stc
inc
mov
inc
clc
xchg
jecxz
js
gs
cli
mov
mov
pushf
andb
jns
in
push
cld
jne
ficoms
jne
mov
sbb
adc
cmp
dec
xor
stc
nop
gs
dec
jo
mov
bound
cmp
inc
stc
mov
enter
out
mov
lahf
push
mov
inc
jle
pop
fdivrs
scas
xchg
adc
nop
jle
xor
jg
shl
sti
mov
ds
pop
loopne
adc
sbb
mov
mov
adc
pop
add
andb
mov
fnsave
or
fs
les
or
js
aad
mov
and
loop
pop
movsb
mov
stos
out
pushf
std
mov
cmp
dec
test
mov
adc
cmp
fildll
ficompl
iret
sbb
sbb
loopne
mov
out
dec
sarl
cmp
loopne
jge
lds
mov
mov
mov
or
or
nop
nop
rorb
adc
push
mov
pop
adcl
sub
add
imul
cmp
adc
stos
cmc
shlb
enter
fcomps
je
mov
mov
movq
push
packsswb
cwtl
xchg
mov
dec
xchg
push
fistpll
jge
cltd
shll
shrl
lcall
into
stc
outsb
andb
xor
into
xchg
sub
or
sbb
out
push
sub
or
sbb
jle
cs
scas
jecxz
stos
mov
ret
or
testb
in
sub
xchg
sbb
mov
jno
jb
cmpb
fmulp
xor
andb
xchg
iret
sbb
inc
lcall
orb
ret
mov
out
push
mov
rcrb
or
shlb
in
push
dec
gs
andb
pop
lock
loopne
push
sub
loope
iret
ficoml
xor
dec
xchg
ret
mov
pop
adc
cmp
imul
imul
icebp
leave
fbld
push
jb
insb
jnp
mov
mov
jmp
lcall
aaa
mov
pop
and
xor
fs
cs
lods
je
jo
and
lcall
push
jecxz
ret
in
fnsave
xor
repz
pop
aaa
mov
mov
dec
test
es
or
inc
pop
je
and
and
loope
push
pop
push
cmp
out
iret
mov
pop
inc
mov
test
cmp
repnz
xor
pop
mov
inc
cmc
pop
ja
sub
dec
rcll
aas
ljmp
imul
sti
scas
rolb
lcall
pop
pop
xor
mov
sbb
lods
fnsave
subb
int
lds
out
jne
popf
daa
scas
xchg
mov
sbb
fistpl
int3
jae
loop
push
inc
ret
cmp
xchg
xor
lret
loopne
mov
stos
cli
or
mov
cmpsl
cmp
aam
dec
insb
fsubl
aaa
shll
test
cmp
and
xor
mov
fnstcw
sbb
inc
stos
shll
scas
in
push
fwait
sbb
jne
lahf
sahf
stos
mov
jmp
cmp
mov
mov
sbb
mov
add
add
push
mov
ss
mov
insb
or
cmp
cmpsb
cmpsl
mov
jb
das
dec
cld
push
cmpsb
js
movsb
jb
xchg
mov
add
daa
mov
insb
repnz
out
mov
out
stc
adc
ljmp
scas
cli
push
mov
shr
jle
push
adc
pop
jbe
pop
rolb
insb
lods
and
mov
adc
push
pop
popa
push
out
lahf
movsb
insb
push
loopne
jbe
std
imul
rcrl
inc
mov
jl
stos
scas
dec
lock
imul
sbb
mov
jae
shrb
mov
adc
leave
leave
cmpsl
call
add
xor
arpl
dec
stos
fdivs
clc
pushf
push
or
jne
sbb
dec
xor
push
out
mov
ds
xchg
add
mov
lods
lret
add
dec
mov
push
shll
xchg
xor
ret
je
cmpsl
mov
dec
scas
mov
add
loop
jnp
fcmovnbe
lea
and
cwtl
shlb
inc
shl
insl
addb
dec
fsubs
xor
in
pop
mov
mov
add
aas
xor
sarl
pop
fbstp
aad
xor
arpl
repz
mov
pop
int
xchg
mov
sub
pop
or
push
movsb
mov
pop
dec
sbb
adc
cltd
testb
dec
int
adc
mov
int3
mov
mov
shll
js
hlt
jge
cmp
mov
pop
push
leave
negl
and
dec
mov
rolb
jecxz
aaa
loop
pop
fisttpll
pop
ret
pop
pop
aas
repnz
test
push
xchg
std
leave
cli
pusha
out
cmp
cmp
push
add
sbb
cmp
rcrl
add
fcom
into
and
ret
sub
and
dec
testb
es
lock
mov
cltd
sub
fsubl
cmp
aas
jg
and
or
sbb
fistps
mov
adc
je
pushf
mov
test
fidivl
in
jae
dec
xchg
push
inc
aad
das
in
pop
divb
mov
xor
or
cld
outsl
cmpsb
xchg
sbb
cmp
jnp
cltd
xchg
xlat
jg
mov
aam
adc
mov
adc
cli
inc
je
dec
add
xchg
jg
sub
mov
test
xchg
test
and
jmp
adc
adc
test
sbbl
test
daa
jle
int3
cmpb
push
rcll
aaa
movsl
iret
sub
mov
push
jl
sbb
lret
fwait
pushl
lods
popf
and
dec
sbb
imul
mov
repz
fs
fcomp
add
out
jmp
mov
iret
dec
or
mov
mov
inc
into
mov
movsl
mov
movsb
inc
mov
sahf
out
cs
pop
dec
dec
nop
cmp
retw
stc
test
divb
pop
mov
outsb
test
push
sub
cmp
mov
std
shr
add
ffree
test
incl
push
fildll
fcmovbe
cmp
push
adc
mov
pop
data16
in
fidivs
das
xchg
mov
cmc
sahf
mov
rcll
cmc
mov
push
pusha
into
es
and
movsb
sub
mov
cmp
pop
and
call
sbb
mov
lcall
int3
sub
imulb
mov
push
pop
xchg
cli
call
mov
pushf
movl
sahf
ret
jecxz
sub
and
or
fucom
addr16
out
jl
outsb
add
mov
push
das
jg
sti
xchg
or
lcall
adc
fstpl
idiv
xchg
adc
pop
mov
inc
and
jnp
dec
pop
sub
setb
aas
rolb
inc
popf
test
test
inc
leave
jb
mov
jno
add
movsb
cs
fisubrs
and
inc
or
cmp
mov
xchg
adc
cli
fiaddl
push
aad
cmp
test
cmc
rorl
push
insb
xchg
mov
jle
repz
xor
and
lahf
xchg
jae
pop
lods
and
pop
popa
es
das
sbb
ja
adc
and
fwait
stos
xchg
mov
outsb
jo
mov
outsb
or
jp
cmpl
mov
mov
cltd
or
pop
xor
repnz
mov
xor
loop
jle
adc
lea
push
mov
out
call
mov
enter
mov
push
fsubs
lea
pop
enter
xchg
paddusb
lcall
fwait
mov
popa
idivb
mull
mov
leave
lret
mov
sub
je
test
sbb
push
sub
xor
mov
mov
mov
mov
xchg
mov
mov
push
mov
es
and
xor
jge
sbb
add
xchg
cmp
dec
mov
mov
sbb
adc
data16
or
sbb
mov
mov
lahf
push
mov
setg
fnstenv
adc
lahf
mov
test
xlat
cmc
pop
enter
dec
aam
rorl
fs
dec
inc
push
and
pop
js
aaa
pop
iret
insb
cmp
and
inc
and
neg
mov
push
or
iret
sarl
push
clc
xor
pop
idivl
xor
adc
cmpsb
jne
cmpsb
testl
mov
stc
sbb
pop
sub
adc
cmp
ljmp
and
std
mov
xorl
xchg
add
jbe
cmp
mov
jge
sub
cmp
test
sbb
xchg
adc
xor
lret
mov
wbinvd
test
ljmp
scas
jecxz
pushf
push
stos
push
sbb
sub
fcompl
jge
arpl
fsubrl
inc
lds
popf
mov
in
cmp
and
cmpsl
sti
mov
aam
push
inc
repnz
xchg
outsl
iret
nop
xchg
ficoml
lret
jmp
lret
dec
aas
push
fwait
dec
nop
enter
pop
dec
inc
mov
jbe
ret
push
aam
cmpsl
push
pop
shrb
ss
push
in
call
sbb
jp
sub
orw
dec
inc
mov
inc
pop
daa
pushf
rorl
mov
jbe
push
frstor
mov
lods
enter
popa
cmpsl
xchg
or
push
je
and
xchg
xlat
mov
pusha
pop
mov
push
das
and
push
pop
mov
test
into
repz
mov
test
neg
into
push
mov
scas
mov
lods
jl
mov
sahf
aas
xchg
push
je
push
push
jl
inc
jecxz
loopne
std
call
orb
xchg
and
arpl
jmp
push
fsubr
imul
mov
lods
ja
mov
out
out
push
mov
out
inc
xor
xchg
fstps
xchg
sbb
inc
jb
ljmp
and
mov
not
and
sub
fsubl
add
insl
push
pop
in
test
sub
jg
inc
rorl
out
pusha
mov
jg
cmpsl
ret
mov
or
inc
push
ss
scas
dec
sub
dec
mov
ret
cmp
sub
rcll
adc
xor
xor
pop
loope
mov
push
mov
pop
lretw
fwait
jb
pop
dec
mov
lret
mov
enter
and
stos
aam
repnz
and
sahf
xchg
call
and
in
stos
mov
int3
pusha
daa
cld
or
inc
decl
adc
xchg
pop
and
cmp
inc
mov
mov
imul
rcl
into
movb
stc
adc
cli
mov
cld
sbb
cmp
xor
bound
jmp
inc
icebp
xor
mov
and
out
dec
or
test
andl
pushf
jg
pop
sahf
mov
mov
or
repz
in
popf
stos
es
sbb
in
mov
adc
dec
ljmp
cli
cs
aad
addb
pop
fcmovu
fnstenv
pop
iret
cmpsb
and
es
add
sbb
xor
pop
fdivrl
cmp
xchg
out
mov
sub
lods
pop
xor
pop
pushl
pop
mov
imul
stos
xchg
jnp
data16
imull
or
inc
es
xchg
leave
lea
lret
push
mov
lea
jbe
sub
mov
and
icebp
ret
dec
cmovb
xor
mov
xchg
mov
pop
cmpb
lcallw
adc
stos
push
or
cmp
lods
xchg
negb
pop
mov
dec
xlat
mov
lret
mov
jle
or
push
popf
andb
adc
inc
dec
lock
ret
iret
orb
cmp
mov
push
mov
inc
dec
and
cmc
cmpsl
mov
mov
and
dec
xchg
inc
clc
push
inc
mov
or
cld
jno
mov
int
call
or
ja
jge
repnz
hlt
dec
sahf
stos
mov
stos
pop
rcrl
cmpsl
dec
js
inc
push
insl
loope
int3
sub
jmp
or
popf
cmpsl
sub
jnp
and
iret
xlat
add
movsb
testb
cmpsl
xchg
imul
rorl
into
inc
adc
jns
test
inc
loope
call
das
jne
cmpsl
jb
push
mov
cli
sub
mov
mov
bound
aam
xor
adc
xor
or
inc
or
cmpsl
insl
xchg
js
rcll
roll
cmp
lods
mov
lods
or
or
cwtl
inc
cltd
out
push
int3
insb
jno
pop
into
lcall
jmp
mov
push
test
int
loop
inc
xlat
push
mov
ror
sarb
xchg
std
pop
shlb
push
test
in
pop
jp
pop
lock
push
pop
push
scas
repz
iret
mov
cmp
shl
leave
fwait
subl
jae
ljmp
push
dec
aad
imul
icebp
fs
je
cmp
mov
mov
mov
push
dec
mov
mov
decb
lods
mov
jae
mov
fcomp
lea
push
mov
insl
fimull
jno
fcomps
in
jmp
mov
sub
mov
sbb
pushf
mov
movsl
movsl
in
ja
inc
mov
cli
add
jnp
adc
dec
das
imul
mov
clc
cwtl
adc
aad
or
pop
call
jae
jns
cmp
jbe
les
push
mov
out
jns
dec
xchg
pushf
mov
xchg
push
mov
fisttps
push
sub
pop
xor
adcb
mov
out
add
shlb
sti
cmp
addr16
mov
and
or
mov
adc
je
xchg
sbb
mov
jbe
and
mov
mov
mov
xchg
cmp
xchg
aas
mov
pop
out
aad
pop
aam
push
ja
inc
dec
xchg
gs
test
mov
xchg
jmp
subl
xchg
std
cmpsb
xor
jp
lcall
jg
dec
mov
pop
xlat
pop
mov
testb
outsl
negb
push
push
mov
loopne
addl
add
jo
sub
fistl
or
into
push
cmc
or
dec
fidivs
cmpsb
jno
sbb
pop
add
repz
shlb
inc
xor
test
andb
in
pop
push
adc
sub
ret
out
scas
push
fst
jmp
xchg
add
aaa
jno
push
pop
pop
in
dec
dec
push
aam
das
lea
cmp
inc
xchg
adcl
sbb
mov
xchg
into
ja
mov
dec
addr16
mov
cmp
jmp
call
setbe
jbe
push
outsl
stc
push
dec
pushf
pop
mov
pop
gs
adc
jbe
adc
xchg
lcall
xchg
pop
mov
cmp
negb
dec
nop
dec
mov
xor
and
jae
jge
xchg
push
sub
mov
nop
das
push
pop
push
inc
fsubl
cmp
fistpll
stos
dec
xchg
add
loope
call
movsb
pop
adc
cld
fwait
lods
ret
shrl
jge
cmp
pop
daa
sbb
lret
push
adc
cmp
ljmp
hlt
and
insb
inc
inc
push
in
mov
int
dec
sbb
jecxz
pop
shll
ficoms
fucom
jge,pt
adc
sbb
aas
stc
mov
xchg
ret
mov
rclb
insl
push
adc
xor
cmp
jmp
add
mov
movsb
pop
sub
mov
push
jnp
cwtl
sub
mov
ljmp
cld
push
mov
ret
out
sub
cmp
into
pop
movsb
sbb
and
push
insl
aaa
and
inc
mov
scas
cmpsb
push
sub
shr
sbb
arpl
add
bt
bnd
xor
loopne
xchg
sub
dec
in
loopne
xor
mov
mov
xchg
jo
cmp
add
cmp
jne
mov
jecxz
addr16
xchg
daa
in
cmp
and
orb
mov
cmp
int
dec
js
loope
gs
js
test
adc
dec
iret
popa
ret
movsb
daa
daa
xor
push
icebp
inc
sub
dec
jns
mov
imul
stc
jmp
test
lea
and
add
shlb
movsb
sarl
cmp
aaa
fcompl
push
cmc
negb
das
dec
daa
dec
mov
jp
xchg
int3
pop
xchg
jns
aam
cli
mov
repnz
jge
and
loopne
testb
lods
das
lret
es
imul
int
sarb
call
xchg
dec
sub
shlb
subl
fimull
icebp
loopne
enter
sub
sbb
dec
mov
cmp
pop
add
adc
cltd
mov
iret
lods
adc
mov
std
test
lahf
cli
sub
dec
mov
into
push
push
add
xchg
addl
jecxz
out
inc
xchg
mov
pushf
mov
aad
popf
push
pop
pusha
xor
es
sbb
pusha
xchg
es
vmulsd
inc
shr
cmpsl
sahf
inc
imul
data16
adc
sbb
cmc
aad
jle
mov
arpl
sub
fs
dec
lds
addr16
iret
in
xor
popa
jb
push
pop
push
stc
std
imul
repz
mulb
push
scas
push
enter
push
push
inc
test
sub
push
jbe
int3
in
push
inc
xor
xchg
inc
stos
ret
outsl
aad
iret
aam
insb
movsb
push
imul
push
mov
sahf
movl
pop
sbb
and
pop
mov
jno
test
arpl
outsb
je
mov
ret
adc
or
jecxz
mov
js
shll
adc
sbbl
sbb
test
dec
lods
out
stc
insb
jo
push
mov
jbe
jge
pop
push
mov
test
pusha
pop
dec
xchg
fstp
cmp
ror
dec
out
dec
sti
outsl
mov
pusha
lea
fisubrs
movsl
bndldx
jl
aas
call
cmp
repnz
jo
loopne
decb
dec
sub
testl
sti
loopne
mov
popl
ja
mov
aad
mov
or
or
loopne
mov
outsb
pushf
pop
cwtl
int3
xchg
mov
xchg
test
jae
aaa
adc
pop
pop
insb
rcr
in
in
pop
inc
les
cmpb
jo
jne
mov
mov
sbb
cld
imul
in
into
lret
jbe
bound
lret
and
lock
push
stos
xchg
dec
in
sbb
xlat
loop
xlat
aam
sti
cmp
in
add
push
adc
jg
outsb
xor
inc
dec
arpl
fwait
int
and
jne
jno
insl
mov
icebp
inc
sbb
pop
adc
insl
scas
fcoms
aaa
mov
js
push
lcall
imul
insl
sub
adc
mov
and
cltd
nop
fsubr
fs
rcrb
aaa
rcrl
mov
sub
mov
mov
icebp
into
lret
scas
test
add
push
call
aas
xchg
sbb
cld
xchg
jo
sbbb
sbb
push
and
mov
mov
in
out
cmp
aam
data16
rcl
xlat
jnp
cmc
dec
sbb
movsb
cmpsb
fimull
and
into
icebp
jmp
fimull
xor
les
inc
dec
shlb
inc
inc
add
mov
pusha
pop
xchg
cmp
stc
fidivrs
lods
std
mov
push
rclb
xchg
push
or
jecxz
and
adc
lret
inc
pop
int3
or
add
in
lret
add
js
outsl
push
in
pop
out
dec
cmc
cmp
cmpsl
inc
insl
aam
xor
loope
xor
mov
sub
fs
stos
inc
sbb
mov
dec
push
fwait
movsb
pop
mov
or
pop
das
in
rcrb
das
daa
insb
cmc
in
adc
pop
test
mov
sub
leave
jnp
dec
test
cmp
add
push
push
mov
lds
lods
jp
or
pop
fldlg2
dec
call
mov
or
popl
push
and
dec
sub
pop
pop
bound
push
subb
sbb
xchg
lret
ret
pop
fcoml
mov
hlt
cmc
pop
mov
adc
inc
and
call
adc
ljmp
jge
push
aaa
test
mov
ja
popf
sbb
lret
fdivrs
mov
adc
pop
ret
and
clc
stos
nop
push
pop
jl
inc
test
negb
pop
hlt
mov
loop
sub
push
and
loop
repnz
and
sub
popf
push
call
pop
cmpsl
mov
icebp
inc
jg
das
mov
pop
or
aam
hlt
xor
loopne
jns
cmp
lcall
fsts
mov
insb
xor
mov
dec
pop
xlat
rcll
sbb
mov
idivb
aam
or
popf
loop
xlat
xchg
iret
roll
push
xchg
cltd
fadds
cmp
lahf
push
dec
dec
add
fnsave
mov
and
rcll
adc
ds
inc
push
cmp
push
cmp
jmp
lcall
push
das
repnz
loope
push
repz
mov
mov
leave
fdivp
clc
lret
std
fidivrl
leave
cmc
cld
adc
stos
mov
lea
incb
std
stc
xchg
testl
cwtl
lret
jp
pop
dec
push
mov
in
jo
sub
test
pop
stos
loop
push
loope
adc
adc
outsb
popa
es
outsl
ja
jle
add
cs
ret
xchg
repnz
sub
js
std
das
int
lcall
mov
xchg
mov
cld
add
fmuls
xor
int
xor
sahf
push
push
out
mov
mov
lahf
jmp
xor
insb
dec
cmp
dec
and
cs
sbb
add
leave
mov
xchg
inc
repnz
inc
pusha
add
inc
mov
das
scas
insl
xor
mov
cmc
adc
movsb
loopne
mov
cld
mulb
popl
jp
or
mov
push
ret
pop
add
lahf
fs
inc
add
push
xchg
cmp
push
sub
dec
and
sbb
push
lock
cmpl
mov
xchg
jb
sub
roll
fucomi
jge
xchg
add
lret
and
jp
xlat
bound
lcall
pop
aas
mov
push
pop
xor
or
push
js
xchg
rorb
mov
xchg
sub
fidivrs
add
push
rorl
push
int
out
inc
sub
cmp
cmc
jne
mov
outsl
add
pop
pushf
xlat
stos
add
push
ja
sbb
jl
adc
push
je
add
outsb
xchg
pop
mov
add
cld
or
push
sti
jnp
scas
inc
dec
subl
hlt
repnz
addb
mov
std
cmp
imul
fisubrl
mov
hlt
xchg
mov
addr16
mov
aaa
dec
xchg
scas
pop
aas
arpl
pop
sbb
push
jl
inc
gs
sub
and
pop
aad
sub
and
jg
ss
cld
dec
stc
push
pop
pusha
mov
inc
and
dec
arpl
sbb
inc
int
and
cltd
ljmp
inc
outsl
sahf
ret
stos
hlt
in
in
dec
lds
insb
pop
nop
adc
hlt
or
lock
xchg
loope
or
addr16
idivb
mov
push
lret
and
mov
add
inc
add
dec
dec
push
mov
fwait
popa
push
fld
fcomp
inc
or
pop
mov
rorl
add
dec
xor
pushf
xor
inc
leave
inc
mov
cmpsl
ret
mov
pop
lret
mov
cmpb
mov
lret
addr16
add
mov
inc
mov
cmp
inc
sbb
aaa
shlb
orb
jmp
fdivs
push
sub
lods
sbb
stos
or
stc
lods
jo
push
mov
mov
iret
subl
inc
rorl
icebp
dec
and
stc
loop
xchg
mov
pop
repnz
test
push
mov
scas
in
pushf
imul
into
lret
xor
and
cwtl
or
mov
ret
cwtl
xor
push
inc
out
add
sbb
mov
sbb
dec
mov
mov
dec
mov
jns
xchg
in
or
xor
mov
jl
add
sbb
cmp
ljmp
lea
jecxz
pop
adc
gs
push
fsts
sarb
adc
push
data16
scas
cmp
add
jl
int3
adc
xor
adc
in
pusha
fisubl
sbb
mov
rorb
lcall
fidivl
adc
adc
pop
imul
inc
xchg
mov
out
or
iret
add
inc
jg
jge
inc
lret
cs
inc
cmpsb
mov
xor
or
mov
xor
cmpsl
cltd
cltd
popa
jp
add
imul
sti
xor
add
lahf
pop
mov
cld
pop
imul
jl
mov
xchg
movl
cld
cmpsl
sbb
lcall
cld
lea
cltd
add
push
stos
xchg
pop
insl
lret
cmpl
rcl
orl
imul
mov
push
mov
cmc
pop
pop
xor
inc
sub
loop
dec
xor
out
cmp
mov
xchg
add
sbbb
or
enter
cmpsb
jle
movsb
test
cwtl
loop
add
or
dec
jl
mov
repz
add
out
lea
mov
xor
xlat
add
adc
cli
add
ljmp
fnstenv
stos
xchg
sub
scas
lds
aaa
jmp
xchg
movsl
push
rolb
jno
arpl
push
in
mov
sti
lahf
movsl
cmp
mov
fwait
xor
jns
push
xchg
lahf
cmp
push
es
mov
jno
pop
add
inc
cmp
xor
lock
lds
dec
pop
insb
ret
adc
and
jns
push
add
mov
std
push
add
mov
pusha
jno
mov
jne
lahf
xor
add
push
lds
rorl
out
addl
jae
adc
xor
iret
mov
repz
push
inc
ficompl
sbb
addb
pop
push
lock
mov
push
dec
cmp
pushf
push
push
mov
scas
or
jecxz
xchg
xchg
call
pusha
xchg
pop
mov
pop
pushf
inc
clc
lock
fdivl
std
cmp
sbb
jle
mov
popw
pop
or
mov
enter
mov
and
push
movsl
push
sarl
fs
sbb
test
mov
orl
jecxz
scas
ds
sub
mov
add
adc
adc
pop
jmp
inc
ds
or
pop
enter
jo
mov
xor
bound
dec
es
jmp
bound
xor
sub
insl
xchg
mov
test
jp
imul
arpl
pop
ret
add
loop
dec
cmp
aaa
call
sbb
adc
jmp
pop
xchg
fdivrs
movsb
cmp
adc
sbb
mov
cmp
jo
setb
add
mov
cs
repnz
out
inc
sbb
mov
sbb
jecxz
mov
test
je
mulb
sahf
or
jns
cmp
xchg
adc
cmp
pop
leave
inc
cmp
mov
inc
jge
mov
jle
push
inc
push
pushf
fwait
and
xorb
cmp
cmp
xchg
push
dec
lods
scas
mov
int3
popa
and
dec
loopne
pop
xor
dec
push
dec
in
push
dec
iret
cmp
jbe
lock
jmp
xlat
adc
testb
push
cmc
cmp
sub
inc
outsl
add
loope
dec
ficoms
pop
dec
mov
jl
mov
add
mov
mov
int
push
stos
addr16
or
inc
cmp
in
testl
cmp
xor
sbb
in
xor
popa
and
ja
aad
mov
jnp
add
cld
mov
mov
mov
jns
cli
out
adc
xchg
ret
sub
mov
jl
xorb
testb
fld
or
mov
lods
clc
cli
and
jne
dec
mov
cld
imul
dec
enter
mov
push
jp
fs
lret
into
inc
add
out
adc
push
leave
mov
mov
dec
cmp
sbb
pop
arpl
fists
mov
lock
fdivrp
xchg
cld
jmp
pop
iret
das
inc
ret
lods
mov
or
push
sub
movq
sbb
mov
lds
mov
mov
loopne
push
in
pop
jl
mov
jne
or
mov
jne
cld
out
iret
aaa
scas
bnd
leave
stos
inc
mov
adcb
ja
into
cmp
add
or
iret
dec
rep
dec
jb
push
push
lods
mov
cmp
jecxz
shl
sub
or
jmp
mov
cli
add
adcl
xchg
pop
cmpsl
xor
mov
sbb
xor
jmp
mov
sbb
mov
ljmp
inc
lret
lcall
pushf
pop
enter
cmpsb
loopne
in
aaa
les
sbb
cld
movl
dec
dec
sub
dec
scas
dec
cmc
loop
or
nop
lret
mov
fnstenv
lret
scas
push
sub
stos
or
inc
mov
adcl
fildl
into
out
xlat
fs
test
pop
ss
gs
dec
jne
sbb
clc
add
in
pop
lret
inc
shlb
push
fs
ret
insl
dec
fdivrs
jl
sbb
mov
xor
mov
push
sub
pop
cmp
lock
fldenv
inc
or
in
xchg
and
jle
rolb
add
dec
xchg
out
xchg
pop
mov
scas
mov
jp
inc
out
outsb
cs
sar
mov
loop
aad
mov
jecxz
test
xrelease
mov
movsl
enter
sub
dec
dec
mov
add
roll
push
push
aas
idiv
mov
push
cs
add
es
push
hlt
scas
jge
into
shrb
sub
push
push
cmpsl
sbb
ja
std
out
xchg
stc
mov
sahf
push
xchg
mov
xor
dec
gs
loopne
jae
inc
cmp
mov
or
and
push
cmc
sub
pop
dec
cltd
ret
lret
mov
cmc
or
jnp
jmp
fidivs
loope
hlt
mov
dec
clc
fcomp
sub
mov
adc
cmpsb
sub
dec
scas
pop
mov
ja
mov
or
pop
jecxz
lahf
push
mov
and
mov
mov
scas
cmp
mov
dec
pop
xlat
in
push
es
pop
mov
cmp
xchg
es
pushf
stc
int3
and
ja
negl
mov
movsl
inc
fs
dec
out
aas
cmp
pop
cs
enter
bswap
es
xor
mov
pop
jg
add
mov
push
fisttpll
loope
es
clc
aas
ds
mull
sub
xchg
popf
enter
test
sbb
push
outsb
sub
xor
jp
push
pop
sub
add
stos
and
outsb
fldenv
fmul
xchg
mov
xchg
pop
ss
cmpsl
xor
mov
and
jmp
sahf
movsw
pop
scas
je
inc
push
adc
fidivrs
cmp
mov
dec
cld
adc
popa
push
add
in
out
adc
ja
or
pop
mov
sub
mov
cwtl
js
pop
mov
push
xor
and
fdivrs
gs
loopne
mov
xor
push
add
cmp
call
mov
mov
mov
repnz
cld
add
xlat
cmp
and
fcomp
mov
jns
pop
sahf
stos
jmp
lahf
test
sbb
movsb
xchg
mov
push
and
js
jmp
jl
jbe,pn
insb
xor
xor
sbb
jo
cwtl
lret
sbb
jne
pop
cmc
stc
cwtl
outsl
inc
mov
out
stos
mov
xor
add
sub
mov
je,pn
push
and
mov
pop
fnsetpm(287
iret
pop
mov
repnz
sarl
mov
loopne
repnz
xor
mov
mov
das
mov
pop
arpl
push
cli
mov
insl
repnz
dec
dec
inc
mov
push
sub
mov
lea
adc
cmp
cmpsl
jne
xchg
sub
into
jge
movsl
jp
out
cmp
fnsave
jb
aaa
and
iret
in
xorb
mov
insb
xchg
xchg
add
xchg
shl
out
incb
inc
sahf
daa
notl
ljmp
push
aaa
orb
in
arpl
stc
lahf
and
dec
ret
pop
xor
push
mov
push
sbb
add
scas
xchg
xor
dec
fucomp
jo
sub
or
mov
fwait
or
stc
stos
mov
addl
data16
mov
pop
xchg
inc
lock
cmp
outsl
int
inc
lock
mov
mov
mov
xor
loop
jl
jno
fisttps
sarb
aaa
add
and
rorl
andnps
inc
or
mov
cmp
and
out
stos
push
fsts
pop
out
cwtl
xlat
insl
sub
stc
cmpsl
cs
xor
int3
sbb
xor
sti
push
jg
loopne
lods
push
jnp
inc
lret
sub
and
test
mov
mov
stc
fcmovne
mov
jns
es
mov
ret
mov
andb
push
scas
mov
pusha
cwtl
inc
xor
lea
lret
push
cmp
test
or
dec
test
and
mov
sbb
and
mov
cmpsl
jae
pop
mov
icebp
sbb
adc
dec
push
xor
and
test
cmpb
sub
clc
sub
arpl
sub
movsb
inc
mov
lret
mov
arpl
rcrl
mov
testl
xor
pushl
sub
pop
outsb
and
lret
test
push
inc
pushf
push
insl
mov
push
rcrl
mov
jmp
pop
or
jno
es
popf
pop
push
xchg
sub
sarb
inc
int3
ss
jmp
dec
sub
jg
js
std
imul
stos
xor
xchg
mov
test
or
call
cltd
inc
repz
popa
sti
inc
mov
outsl
cmc
xor
ret
cli
sbb
movsb
out
mov
leave
jmp
jg
xchg
loop
repz
jnp
enter
popa
insb
test
push
mov
aad
pop
xor
dec
fcomip
and
xchg
fwait
pop
fsubrl
int3
popf
div
das
adc
cmp
int
out
sub
loop
sub
inc
add
sbb
outsb
fldcw
adc
or
fldcw
test
or
push
pop
stc
sub
xor
push
mov
pop
or
inc
cmp
lods
mov
dec
or
sbb
outsb
mov
lods
and
test
repnz
or
push
xor
jns
jne
push
add
addl
mov
cmp
inc
out
mov
loopne
fs
aad
imull
add
in
outsb
pop
jb
inc
pop
mull
movsl
clc
xor
or
push
stos
pop
jp
push
jo
jo
fwait
dec
addb
lret
inc
stos
rcrb
and
test
add
xorl
push
inc
inc
shll
test
les
stos
ljmp
notb
or
mov
arpl
insb
test
sbb
in
xchg
push
ja
push
pushf
jb
loop
fistl
sahf
nop
or
mov
inc
mov
mov
cld
enter
lods
or
xor
int
jge
sahf
pop
jle
xchg
ret
jbe
in
lret
movsl
push
cld
and
xorps
testb
fwait
sub
repz
dec
sub
sbb
cmpsl
dec
pushf
das
lods
push
dec
nop
push
xor
dec
shlb
mov
insl
popf
push
mov
movsl
dec
leave
sub
je
scas
or
cmp
mov
cmp
call
sti
aas
mov
xchg
mov
cli
lock
outsl
int
stos
popf
jne
push
xor
jne
cmc
push
and
fsubr
leave
mov
sarb
cmpsl
lods
cltd
inc
pop
pop
filds
adc
clc
pop
mov
aam
loopne
cmpsb
adc
add
mov
test
push
pop
cmp
popa
cmp
or
gs
jmp
cltd
mov
mov
cwtl
cmpb
shll
jmp
repz
icebp
mov
pop
and
pusha
inc
mov
xchg
sbb
adc
mov
icebp
fdivrl
lea
adc
std
scas
sub
hlt
push
inc
arpl
pop
dec
inc
ret
imulb
mov
js
push
flds
or
incl
aad
notb
rcr
lret
clc
sbb
into
mov
push
insb
nop
sbb
mov
mov
push
jmp
sbb
add
enter
mov
insb
out
fwait
jmp
and
mov
sub
add
rcrl
idivb
mov
icebp
fstps
bound
subl
stc
jno
movsb
loopne
and
jge
mov
subb
adc
fs
inc
mov
sarb
dec
insb
adc
ret
lods
xchg
inc
and
loopne
add
jl
mov
xor
mov
or
scas
or
scas
xor
lahf
scas
adc
mov
pop
js
inc
aaa
adc
push
or
popa
mov
xchg
mov
jns
iret
add
adc
fs
lds
cwtl
pop
aaa
push
loope
push
test
mov
dec
into
mov
jb
fnstcw
mov
xchg
outsb
sysenter
frstor
cltd
insl
dec
nop
xchg
xorl
adc
mov
cmp
mov
push
cmc
push
jp
xor
xchg
dec
or
xor
add
adc
mov
loope
inc
pop
push
jno
add
mov
add
fwait
pop
lods
pop
pand
mov
clc
dec
mov
pop
or
cmp
mov
jp
push
jg
in
fwait
jnp
cmp
adc
xor
stos
cwtl
push
xchg
cltd
mov
out
insb
and
pushl
sub
dec
repnz
fnstcw
daa
mov
daa
pop
xor
mov
sbb
dec
xor
test
sahf
mov
inc
mov
sbb
cmp
hlt
push
divb
xor
jno
cmpb
dec
mov
adc
xlat
and
arpl
ja
fcomps
icebp
dec
mov
pop
sbb
mull
sub
adc
rcl
into
outsl
xchg
outsl
push
icebp
xchg
mov
pop
test
dec
aad
pop
jno
pop
sbb
ret
cmpsl
dec
jns
pop
xor
push
xor
pop
and
rorl
sahf
adc
mov
jp
mov
or
or
cmp
movsl
arpl
aas
jecxz
push
out
or
call
sub
cltd
fs
dec
mov
ror
or
pop
out
pop
out
lret
test
or
ret
dec
inc
adc
mov
inc
mov
mov
das
inc
jecxz
mov
outsb
xchg
and
cld
cmp
ljmp
lret
jp
loopne
mov
popa
xor
fcmovbe
or
repz
popf
xchg
sbb
push
jbe,pt
lds
adcb
inc
in
mov
add
pop
or
pop
add
push
jne
aam
pop
xchg
inc
push
sbbl
mov
jg
mov
adc
sub
cmp
stos
icebp
xor
pop
test
xor
lds
and
dec
jmp
int
jmp
ret
call
clc
cmpsl
mov
xabort
outsl
xchg
je
sbb
mov
pop
cmp
or
in
push
iret
subb
xchg
nop
xchg
or
loopne
fwait
push
enter
fisubrs
push
ret
sbb
or
arpl
pop
loope
pop
or
subl
fiadds
or
cmp
test
push
xorb
pop
mov
pop
jmp
push
xchg
cmpsb
add
dec
hlt
ficompl
cmp
sarl
inc
fistpll
call
pop
push
jge
shrl
mov
mov
sahf
fisubs
idiv
ret
rorl
test
adc
leave
mov
jl
mov
scas
push
sbb
imul
pop
push
jne
in
jne
loop
dec
imul
daa
dec
lock
aad
or
decb
sbb
stos
fidivs
cmp
lods
mov
mov
aaa
pop
std
je
nop
sti
cltd
mov
add
mov
and
pop
dec
leave
push
sbb
push
fidivl
mov
xor
les
insb
testl
sarb
push
cmc
rclb
aaa
and
and
push
repnz
xor
jge
out
inc
sbb
jns
adc
aad
and
pop
add
mov
fs
pop
add
and
push
repz
fdivs
mov
jnp
mov
add
pop
negb
hlt
jns
jl
xor
or
sub
test
adc
jb
jp
xchg
nop
mov
lods
mov
cs
call
dec
rorl
outsl
fadds
cmpb
jb
pop
jl
mov
xor
cmp
xchg
xchg
xchg
and
sbb
lea
lods
sbb
sub
daa
pop
mov
sub
cmc
rcrb
or
adc
ror
mov
push
fbld
imul
rcr
sub
in
dec
fnsave
stc
mov
lea
jp
inc
leave
xchg
inc
adc
inc
into
fdivr
push
pop
lods
pusha
push
push
xchg
stos
imul
mov
clc
mov
call
cmpsl
icebp
sbb
inc
add
mov
lcall
jg
push
adc
bound
lcall
popa
sbb
sub
mov
in
or
jbe
es
in
lods
mov
xor
adc
push
add
mov
cmp
shlb
lods
xor
and
stos
cmp
xchg
cmp
je
loope
pop
inc
jmp
lods
test
and
cmp
sar
rcrl
push
and
pop
dec
cld
add
lcall
jl
pusha
aas
lea
stc
in
inc
addl
xchg
insl
jnp
mov
dec
mov
sahf
adc
mov
cmp
popa
clc
or
xor
mov
movsl
in
roll
test
js
into
stos
shl
out
or
lahf
jmp
popf
dec
cltd
and
jmp
mov
push
or
mov
or
mov
sub
jb
cmp
jg
aam
aam
mov
std
mov
jbe
das
jbe
fnstenv
test
insb
jne
sbb
dec
cmp
ds
pop
xchg
sub
mov
mov
jne
mov
fildl
bound
idivb
rcrb
imulb
dec
or
out
inc
dec
cmc
jo
push
lds
mov
or
pop
sub
pop
shll
xor
mov
popa
mov
imul
sub
pop
out
inc
gs
add
ud1
mov
imul
hlt
rol
push
push
or
mov
cmp
push
cmp
testb
test
bound
adc
je
imul
mov
mov
scas
mov
arpl
adc
sar
ljmp
adc
dec
popa
hlt
add
xor
les
ja
dec
pop
lods
lret
and
sub
addr16
mov
sbb
mov
outsb
cli
in
stc
jge
mov
in
repnz
rcrb
sbb
es
icebp
sbb
inc
test
or
dec
jle
push
cmp
jnp
jno
and
mov
mov
add
addl
lcall
xchg
dec
sarb
icebp
mov
out
shll
mov
or
stos
pop
cs
dec
inc
out
daa
enter
add
loopne
rcl
insl
cmc
shlb
fisttps
mov
clc
out
inc
inc
ds
sub
mov
push
test
push
lret
or
in
cwtl
addr16
add
mov
lcall
sbb
jne
fisttpll
xor
ds
push
pop
cmp
add
out
or
ds
cld
jg
pop
or
call
or
inc
addl
pop
out
fcomp
in
insb
fwait
inc
jae
outsb
mov
adc
aam
std
int3
lea
or
jl
jecxz
cs
mov
test
hlt
lods
leave
lahf
dec
sub
mov
popa
cmpsl
xor
sub
mov
inc
jo
xchg
sarl
mov
mov
cmp
shlb
mov
sub
pop
push
call
xor
sbb
out
fisttpl
sub
in
mov
jmp
cs
mov
adc
pusha
jge
or
mov
mov
jecxz
mov
in
lods
xor
mov
incl
add
push
cmpsb
hlt
in
jp
push
stos
inc
pop
cmpsl
mov
cmp
push
aad
inc
ljmp
sti
xchg
subl
shll
push
mov
ljmp
pop
cmc
jl
testb
mov
jbe,pt
xor
jbe
jb
inc
and
push
pop
test
push
popa
popa
xchg
mov
cmp
sbb
xchg
xchg
pop
xlat
xor
push
fildll
push
aad
sub
jmp
cltd
add
mov
lock
inc
xchg
push
inc
cli
xor
xchg
subl
popa
insb
notl
jo
test
lret
or
test
in
outsl
inc
data16
push
insl
jge
js
repz
fcomps
pop
fistps
lods
push
adc
or
rcl
and
lock
arpl
jns
popf
lcall
and
test
loopne
inc
popf
mov
cmp
fwait
sub
shrb
int
addb
mov
stos
sahf
faddl
call
mov
push
stos
imul
roll
mov
inc
pop
cmp
imulb
in
dec
scas
sub
jge
psubq
mov
push
pop
push
xchg
popw
xchg
int3
adc
fsub
jl
jne
cli
cmp
xchg
jp
sub
enter
jg
ret
push
hlt
cmpsb
pop
mov
mov
add
mov
xor
xor
leave
pop
lahf
and
adc
leave
mov
xchg
adc
lahf
sub
ja
mov
dec
mov
addl
mov
dec
push
insl
xor
sbb
mov
repz
aam
mov
mov
mov
inc
aaa
in
dec
gs
into
or
push
int
les
inc
xchg
shlb
mov
mov
imul
mov
mov
adc
mov
cli
or
sub
pop
and
xor
jg
test
insl
jno
adc
in
cmp
pop
arpl
cmp
lret
push
fidivl
daa
xchg
aaa
outsb
iret
or
mov
mov
or
add
mov
and
inc
icebp
int3
jbe
rorl
dec
rcrl
jbe
sbb
data16
inc
dec
dec
sbb
sub
jge
jecxz
dec
ret
xor
repnz
push
mov
mov
leave
inc
mov
ljmp
xchg
test
mov
insb
in
scas
adc
push
outsl
sti
js
out
repz
jae
roll
dec
pop
lret
inc
mov
pop
push
popf
push
ss
sub
in
mov
lods
clc
in
dec
add
aas
les
cmp
push
popl
scas
mov
nop
int3
shl
sub
push
cmpsb
sbb
aaa
cmp
loope
mov
scas
xor
add
sahf
cmp
mov
add
rcrb
test
lock
adc
in
xchg
pusha
xchg
xor
push
ret
nop
test
mov
cmpb
je
pop
dec
test
inc
add
out
xchg
adc
push
mov
push
lret
mov
add
cltd
inc
in
push
add
shlb
mov
mov
adc
and
adc
xchg
iret
outsb
arpl
adc
orps
call
std
mov
sub
test
rcl
cmpsl
adc
fcmovb
push
cli
push
dec
lock
lods
push
xor
inc
xchg
ret
repz
mov
mov
ds
sbb
xor
lret
mov
roll
xchg
xchg
aad
inc
bound
andl
adc
je
inc
lcall
clc
sbb
inc
dec
xor
lea
enter
xlat
outsb
int
sub
andl
ds
xchg
popa
jmp
aaa
rorb
jns
pushf
jmp
or
jnp
push
movsl
push
adc
repz
cmpsl
mov
sbb
aad
inc
adc
pop
cmp
mov
push
incb
push
push
daa
fs
push
into
cmp
les
fcomps
sbb
and
fistpl
cmp
jge
pop
mov
sub
and
pusha
sub
inc
out
dec
sbb
sub
ja
push
cltd
and
mov
dec
pop
and
inc
xchg
imul
sahf
push
cld
insl
pop
add
sub
adc
cmpsl
call
aaa
xchg
cmp
mov
repnz
sbb
ret
pop
fdivrs
in
sbb
lods
jecxz
loope
fisttps
xchg
test
dec
push
dec
sbb
cmp
orb
aam
fnstenv
xchg
outsl
jle
push
or
pop
add
jg
mov
pushf
clc
mov
lret
bound
shll
pop
sti
stos
in
std
sub
lods
repz
movsb
or
aad
sahf
cmpsb
xor
imul
test
bound
ret
and
cmp
sbbl
out
mov
aaa
cmpsb
jae
fisubs
loop
repz
bound
dec
imul
repz
xor
enter
cmp
test
shlb
fldt
fdivl
loope
jo
mov
sbb
cmp
mov
bound
cmp
and
or
in
clc
stos
hlt
notb
xorl
cmp
bound
cmp
aaa
adc
add
pop
lea
arpl
out
mov
ja
mov
in
nop
in
ja
lret
das
scas
push
shll
jge
lahf
iret
orl
std
leave
dec
or
jnp
sti
mov
xchg
test
ljmp
cmp
pop
fildll
cld
inc
movsl
not
das
sbb
outsb
xor
xor
les
ja
mov
dec
cltd
int
sub
scas
sbb
jno
aaa
jp
mov
sbb
dec
into
ds
hlt
jae
inc
jbe
and
aaa
inc
sub
addl
jne
push
inc
inc
cmpsb
sarb
imul
jge
and
je
push
cmp
mov
mov
or
dec
adc
sarb
xlat
mov
shl
cwtl
rorl
fistpl
add
loopne
fs
iret
es
test
outsl
pop
ret
fldl
mov
pop
pop
gs
data16
mov
jl
ja
imul
xchg
es
test
add
xor
inc
xchg
rcrl
popa
sahf
pop
aam
enter
mov
sahf
cmc
outsl
lods
add
xchg
pop
xchg
fstl
std
sbb
test
mov
dec
test
shlb
fimull
scas
mov
add
les
in
pop
pop
xorb
sbb
bound
xor
mov
nop
out
fisubrl
pop
enter
cmp
or
xchg
pop
dec
andl
and
push
in
mov
loopne
fmul
pop
ror
mov
and
add
jl
hlt
mov
sbb
xchg
mov
and
loope
stc
in
cmpsb
mov
lret
ljmp
jecxz
stos
jno
movsb
mov
lock
test
jo
sahf
das
stos
addr16
and
pop
ficomps
mov
and
xlat
rcrl
outsl
cmpsb
iret
sahf
xor
cwtl
mov
loop
push
mov
sub
mov
pop
push
jo
mov
push
xor
mov
xchg
xchg
or
pop
mov
cmp
jmp
rcll
jecxz
xor
sub
test
jb
push
stos
or
sub
mov
cmp
adc
stc
jnp
cld
xor
pop
push
add
jbe
jae
jnp
pop
sbb
inc
dec
mov
jns
insl
add
fstpl
or
iret
stc
mov
mov
fldenv
in
xchg
pop
mov
test
stos
jae
xchg
outsb
sti
xor
jecxz
xor
sub
and
mov
sub
fcmovnb
xor
xlat
cmc
sub
int3
mov
jns
mov
aaa
sbb
es
jae
add
cmpsb
sbb
mov
jo
jns
add
xchg
out
jb
std
push
add
push
jno
cmpsb
jnp
fistps
dec
fs
jns
sarl
and
cmp
mov
xor
push
mov
js
ret
int
call
icebp
lret
and
movsl
int3
test
imulb
inc
aam
fcmove
lods
sbb
mov
lret
movsb
bound
cmp
sub
adc
test
cmpsb
adc
decb
sbb
adc
sbb
lds
dec
ljmp
adc
scas
iret
aad
jecxz
adc
fcmovnu
icebp
push
int
cmp
imul
lret
das
lds
adc
cmp
test
sbb
cmp
daa
in
sbb
inc
and
jge
test
or
bound
mov
sbb
inc
mov
movsb
fcmovnb
rorl
popf
js
jns
adc
mov
mov
mov
sbb
mov
xchg
sbb
dec
in
jmp
cmpsl
lds
mov
adc
lods
out
lea
stos
dec
std
xchg
xorl
sbb
das
movsb
xor
push
test
fxch
fwait
lahf
in
ret
iret
xlat
leave
push
jg
rclb
inc
push
insb
and
push
out
cltd
push
jno
cmp
sbb
addl
mov
xor
data16
imul
dec
es
dec
mov
pop
pop
inc
in
cmp
das
call
jne
popa
xchg
lahf
hlt
jbe
cs
pop
sbb
push
test
mov
lcall
scas
daa
loopne
idiv
inc
pop
lret
aad
std
popf
fstpl
add
arpl
ja
arpl
pop
pushf
mov
hlt
mov
jmp
pushf
push
clc
hlt
leave
mov
cld
fwait
lret
or
aad
dec
imul
mov
sbb
push
lcall
sbb
lahf
cmp
xor
sbb
mov
lahf
cmp
sbb
ja
add
pop
outsb
mov
cltd
mov
jmp
flds
mov
jns
gs
mov
jle
ljmp
mov
xchg
rcr
push
jg
cmc
fmul
stos
add
dec
mov
mov
sbb
add
pop
pop
sub
mov
sbb
add
cmpsl
bound
push
dec
test
pop
jl
and
cmc
sbb
fmuls
movsb
cmpsb
addr16
in
and
push
mov
or
loopne
push
sbb
and
jns
cli
stos
scas
inc
inc
mov
stc
daa
iret
sub
adc
test
xor
jno
ret
sbb
adc
sahf
js
imul
iret
jns
or
cli
subb
and
pusha
insl
push
mov
jge
mov
mov
push
data16
test
dec
mov
jecxz
cmpsb
lods
test
or
fsubp
insb
and
pop
clc
dec
adc
jne
push
sti
pop
push
frstor
scas
test
mov
and
mov
or
push
mov
leave
inc
lea
cmc
jecxz
fwait
stos
loopne
pop
mov
sbb
mov
jp
dec
add
jg
lods
xchg
mov
cmp
jnp
xchg
dec
insb
push
inc
flds
and
add
inc
pop
xor
sahf
mov
mov
jmp
icebp
sub
outsb
push
mov
mov
mov
cmp
inc
mov
pop
ss
jnp
loope
mov
push
ljmp
or
cmp
adc
add
and
inc
xor
lods
and
xor
fsts
rcr
jg
jg
mov
mov
movsl
test
je
adc
and
xor
sub
les
iret
jmp
xchg
pminsw
or
inc
dec
pop
call
push
test
add
ret
mov
ret
repnz
sahf
in
loope
mov
push
pusha
das
xchg
mov
sbb
mov
pop
adc
iret
push
jle
cmp
loop
sub
fimull
movsb
sbb
mov
pop
sub
movsl
jmp
inc
xor
cmpb
xor
lds
call
jno
clc
popa
xchg
or
sarb
cs
filds
push
lods
lea
and
addl
cld
inc
imul
or
xchg
adc
xchg
ja
mov
stc
jo
mov
mov
jp
pop
jmp
adc
hlt
shl
push
les
jmp
pop
clc
xchg
addr16
pop
mov
push
add
cmpsb
mov
xchg
sub
imul
bound
inc
pop
jo
lret
push
inc
sarb
jne
push
sub
loop
movsl
icebp
push
inc
lods
fildl
sbb
lock
rclb
xchg
dec
xor
mov
sbb
lret
loopne
rcll
jmp
pusha
inc
mov
scas
inc
rcll
mov
lods
loope
push
cmp
or
and
sub
add
arpl
mov
xlat
rolb
or
imul
testl
aas
sbb
inc
repz
stos
sbbl
jmp
add
push
sbb
mov
sub
outsl
int
aaa
dec
inc
cs
jl
mov
dec
out
or
or
jb
test
or
imul
sbb
dec
loop
outsb
cwtl
cmp
dec
outsl
nop
inc
pusha
lret
push
mov
xor
xchg
pop
call
aaa
push
or
imul
dec
bound
mov
inc
adc
adc
enter
pusha
inc
loope
mov
jns
jmp
and
cmc
or
jns
push
pop
pusha
in
pusha
nop
pop
into
jg
fistpll
cmp
outsb
iret
movsb
jae
pop
sbb
mov
movsl
lret
or
lret
popa
jmp
mov
push
push
fwait
pop
outsl
testl
mov
add
cmp
scas
mov
sbb
mov
push
adc
pop
mov
aam
stos
cmp
mov
or
mov
sbb
add
scas
sbb
pop
or
or
stos
add
sub
jae
daa
cmp
and
add
ljmp
push
mov
jbe
popa
adcb
add
push
div
fisttpll
inc
mov
gs
rclb
out
sbb
ss
enter
sub
or
cmc
ja
push
shll
xor
and
loop
lods
inc
mov
test
adc
icebp
testb
xchg
push
rcl
in
pop
or
enter
icebp
adc
stos
inc
cmpsl
imul
cmc
cmpsl
add
jle
popa
rolb
test
sub
or
cmp
pop
ret
mulb
push
aas
pop
sbb
jg
out
icebp
out
dec
stc
dec
jmp
out
test
movsb
add
sub
xchg
in
inc
nop
jecxz
dec
cmpsb
aaa
movsl
inc
loop
jle
jo
lods
adc
push
movsb
xor
clc
int
jo
rorl
fdivrl
cmp
insl
and
ffree
inc
loope
negl
adc
or
fs
outsb
lods
fcomip
cmpb
jmp
pop
int3
xor
mov
push
lds
jp
icebp
ret
test
cmp
test
clc
imul
xlat
sbb
loope
or
mov
jmp
jle
mov
outsl
and
pop
xchg
cs
push
imul
mov
push
imul
lea
xchg
sti
push
pop
add
mov
test
lret
mov
dec
ljmp
addr16
pop
xchg
pop
mov
pop
mov
xlat
sub
mov
pop
pusha
ficomps
mov
repz
fstpt
inc
inc
ljmp
fsubl
rorb
adc
sub
add
std
aas
rolb
cmc
xchg
jbe
push
push
pop
popl
cld
adc
mov
sub
in
push
and
ss
cmp
outsl
jp
dec
cmpsb
cmp
ja
aas
inc
shl
aam
leave
sti
xchg
imul
ja
sti
adc
frstor
stc
cld
mov
outsb
or
inc
popf
rorb
and
xor
and
idiv
mov
jbe
dec
push
jge
fistl
imul
cmpsb
cmpsl
pop
push
inc
leave
push
das
iret
fidivrs
pop
xor
lcall
inc
jns
lahf
mov
xor
repnz
nop
loop
xlat
dec
mov
iret
add
cmp
push
sub
cmp
test
lds
mov
in
xor
xor
inc
movsl
int3
jbe
xchg
or
call
inc
in
movsl
pushf
inc
lea
sbbb
jnp
pop
iret
push
mov
int3
xlat
push
cli
lretw
mov
fadds
cli
cmp
ss
and
cmp
xlat
call
int
jae
bound
stc
into
xor
iret
movsb
adc
sahf
shlb
push
push
pop
cmpsb
xchg
mov
adcl
das
xchg
mov
jno
adc
stos
inc
popf
ds
cmp
pop
mov
nop
jno
mov
fisttpl
jnp
add
mov
scas
add
adcl
sub
stc
lcall
cltd
aaa
cmp
ljmp
dec
or
inc
jbe
mov
icebp
test
jl
les
lahf
mov
daa
xchg
add
push
outsb
cs
fiaddl
test
dec
dec
push
adc
jo
adc
lock
xlat
fdivl
cmpsb
mov
and
jp
popf
cltd
addr16
iret
mov
imul
or
xchg
ffree
mov
dec
sub
pop
adc
repnz
cltd
cmp
std
cmp
sahf
dec
out
arpl
mov
clc
xor
xlat
outsb
pusha
mov
dec
test
daa
cs
pusha
cmpsl
mov
out
mov
out
sbbb
jmp
jo
out
aam
flds
stc
fisubs
xchg
popa
mov
call
lret
adc
aas
imul
test
adc
in
xchg
mov
adc
into
mov
push
jns
sub
xor
dec
test
pushf
sub
lahf
lds
jp
pop
aam
and
movsl
test
push
stos
xlat
sub
rorb
mov
inc
sbb
ss
lcall
and
jo
lcall
pop
insl
outsb
or
sbb
xor
or
sub
mov
arpl
jg
inc
cld
hlt
cmp
sbb
mov
incl
mov
loop
inc
cmp
push
mov
lds
cmp
inc
in
repnz
dec
in
mov
orl
mov
shl
cwtl
push
adc
jg
pop
cwtl
pop
fnsave
pop
mov
int
mov
das
push
arpl
jl
je
and
adc
ss
dec
hlt
repnz
insb
lods
into
arpl
cld
nop
mov
std
pop
lcall
mov
jbe
jo
jbe
xor
pop
push
sbb
leave
insl
cwtl
imul
icebp
add
xor
dec
sbb
les
and
lods
sub
or
lret
shrb
pop
fwait
mov
mov
shll
push
push
fildl
jns
fchs
int
test
fstp
xor
mov
sub
adc
xchg
es
and
xchg
push
xchg
popf
adc
lret
repz
in
je
out
iret
fldl
jno
ja
adc
xchg
stc
das
inc
cmpsl
pop
repz
stos
loop
pushf
fisubl
jmp
incl
movsl
bound
insb
sbb
sbb
dec
and
ror
js
les
jecxz
rorb
in
xchg
addb
fidivl
rolb
jge
cmp
ja
testl
ret
xchg
sub
daa
mov
add
jnp
loopne
inc
xchg
dec
out
sub
add
lds
mov
inc
or
psubd
nop
lret
sbb
insl
cwtl
sbb
shrb
fists
mov
fimuls
mov
mov
or
mov
fwait
sbb
gs
lret
nop
jnp
cmpsl
incb
fdivrs
sbb
inc
popa
inc
mov
lahf
jle
push
or
mov
out
and
inc
pop
xorb
xchg
cmp
test
cltd
push
es
out
push
mov
mov
sahf
into
mov
dec
or
or
xchg
insb
fwait
arpl
and
sub
mov
or
sbb
scas
outsl
inc
jnp
ds
pop
scas
loopne
cmp
in
pop
push
sbb
mov
xor
dec
mov
jmp
adc
push
push
push
pop
xchg
adcb
push
xlat
aas
pop
je
push
icebp
inc
imul
fdivr
pop
inc
lods
cli
sahf
cmpsl
add
aaa
leave
and
dec
mov
out
lret
loopne
xchg
jp
push
pop
incb
jmp
or
iret
and
insb
lret
les
adc
pop
fisttpl
push
jecxz
fbstp
cmpsl
mov
mov
imul
push
xor
push
push
jbe
lds
addr16
jp
mov
test
push
testb
mov
or
andl
pusha
lods
icebp
sub
pop
lds
xor
cmpsl
mov
push
mov
pop
xchg
test
jl
ljmp
loop
pushf
adc
sbb
scas
inc
test
adc
imul
or
or
test
out
push
xchg
dec
mov
push
xor
sarl
pop
in
mov
add
popf
jmp
dec
jns
mov
test
and
inc
or
mov
dec
popf
jecxz
mov
xchg
stos
clc
pushf
xchg
stos
cwtl
or
adc
fwait
adc
outsb
inc
dec
subl
dec
cmp
das
loop
lods
lret
cmpsb
mov
js
test
outsb
push
outsb
in
dec
mov
fwait
jl
push
clc
xlat
jg
fs
mov
mov
or
mov
jb
mov
and
xchg
jle
das
xor
inc
mov
add
pop
stc
pop
cmpb
cld
cmp
mov
call
ret
fidivrs
jg
pop
xor
add
pop
mov
cli
les
mov
fistps
pop
insl
mov
adc
dec
and
sbbl
mov
lret
sahf
fistpl
mov
iret
lahf
jl
jl
push
je
xchg
imul
outsb
loopne
mov
sub
aaa
es
shrb
lahf
jmp
cwtl
hlt
dec
lea
pop
cltd
pop
mov
mov
fcoms
pop
test
das
jbe
stos
jp
jecxz
mov
je
pop
xchg
jg
mov
cmp
mov
pop
xlat
jno
inc
pop
sbb
shlb
and
imul
fdivl
pusha
xchg
xchg
cmp
mov
std
sbbl
ror
jbe
jp
shlb
std
dec
or
push
fstp
test
and
push
mov
les
call
cmp
idivl
pusha
mov
out
mov
xorl
stos
dec
insb
aaa
mov
andl
loopne
fs
mov
pop
or
cmp
sub
and
sub
fnstsw
pushf
ds
imul
mov
loop
push
push
cmp
fcomps
push
fdivrs
das
pop
mov
pop
sti
loop
push
ja
adc
inc
fistpl
sbb
jno
js
cmp
fs
sarl
adc
aas
sbb
mov
fs
dec
sbb
xor
bound
push
jecxz
jecxz
dec
lds
sti
push
mov
bts
nop
clc
adc
or
jbe
fisttps
mov
and
xchg
push
dec
cmp
ds
dec
out
pusha
test
adc
pushw
fimull
je
push
push
pop
gs
cmc
inc
xchg
add
movsl
mov
rol
rcr
pop
int3
sbb
nop
add
jmp
or
and
loop
and
mov
inc
enter
inc
add
xchg
enter
outsb
insb
pushf
pusha
shrl
add
das
aad
mov
pop
loope
sti
sarl
xchg
scas
jge
sbb
xchg
or
subl
jbe
sub
push
lret
addb
das
ljmp
and
lods
dec
out
jmp
dec
fidivl
adc
sbb
iret
out
push
pop
dec
insb
or
cmp
jmp
rolb
dec
dec
fnsave
mov
sub
xlat
aas
dec
ret
sarl
xchg
and
leave
movsb
push
cmpsb
jo
cmp
pop
mov
test
sub
jb
pop
lock
fs
iret
stos
fsubrs
jb
and
cmp
ss
push
add
and
sub
dec
jecxz
out
mov
cltd
es
andb
sub
in
mov
xor
fcomps
loop
push
hlt
enter
cmp
les
ss
stos
movsb
and
mov
jmp
call
cmp
xbegin
out
pop
sbb
test
outsl
sahf
loope
ret
popf
cmp
and
push
push
jmp
xchg
dec
cmpsb
and
lods
mov
cwtl
cmpsl
push
fldl
sbbl
fmull
xlat
test
int3
cmp
testl
jnp
das
lods
icebp
dec
cmpsb
int3
cmpsb
fidivrs
cwtl
arpl
mov
jmp
mov
lcall
fucomp
lds
jmp
fistpl
pusha
data16
xor
pop
jle
inc
lret
test
push
mov
icebp
cmp
dec
or
sbb
dec
add
shrl
lods
fstl
dec
xchg
div
lret
pushf
mov
push
shll
es
test
and
pop
negb
popf
fs
push
testl
pop
shlb
sub
fs
cmp
or
ret
int3
in
mov
mov
sub
mov
or
cmpsb
imul
rcr
mov
xlat
loop
imul
test
pop
setg
xor
inc
inc
fdivrl
out
mov
in
pop
mov
sub
jbe
cli
in
mov
mov
fstpt
stos
iret
cs
insb
xlat
in
in
mov
and
or
xchg
sahf
das
cltd
mov
ja
pop
enter
in
jnp
jmp
xorb
popa
and
fadd
jmp
cmp
cmp
pop
test
insb
xchg
call
cmpsb
out
fst
inc
mov
jae
adc
push
mov
fisttpll
shll
push
xor
jle
pop
cmpsb
push
xchg
mov
push
xlat
inc
dec
mov
sbb
fwait
pop
lods
pop
aaa
adc
pop
or
mov
pop
pop
ret
movsl
insb
xchg
lea
pushf
push
cltd
outsb
jge
push
or
test
mov
shrl
xchg
fcmovnu
stos
inc
stos
jnp
cmp
sbb
ja
sbb
xchg
add
adc
xchg
and
and
divb
cs
mov
cmp
lret
or
sub
dec
add
in
cmp
sbb
std
push
imul
fbld
inc
repz
pop
push
mov
dec
or
adc
or
xstore-rng
cmpsl
add
imul
or
adc
mov
mov
icebp
cmp
mov
and
ss
scas
mov
cmp
push
imul
mov
sub
test
rclb
icebp
fs
mov
pop
leave
test
outsb
push
pop
dec
sarb
pop
push
adc
popa
mov
int3
jg
lret
xor
xlat
dec
fsubrs
push
or
push
repnz
pop
popf
dec
out
aas
or
cli
xchg
push
cmpsb
push
and
fwait
adc
mov
ret
mov
jne
inc
int3
daa
jmp
fimull
mov
push
das
stos
aad
sub
gs
mov
and
mov
pop
out
clc
lahf
push
xlat
hlt
shll
mov
cli
lret
push
inc
sahf
mov
pop
sbb
jbe
fs
xor
sub
es
and
jns
imul
pop
sub
xchg
pop
imul
std
lret
lea
pop
outsl
outsl
pop
dec
sub
add
sbb
push
cld
push
lcall
dec
mov
sub
cmpsl
sub
stos
arpl
adc
lds
imul
cmp
std
movsl
mov
jle
ret
mov
sub
mov
add
orb
xor
pop
cmp
mov
sarl
xchg
iret
mov
jo
xchg
jo
dec
or
imul
cli
pop
inc
cmp
xor
sub
sbb
and
and
jg
add
cwtl
das
push
jbe
xchg
pop
repz
sbbl
je
addb
dec
mov
cmp
andl
cmp
push
inc
movsb
inc
push
test
push
cmp
and
int3
mov
add
call
lret
push
fstp
and
ret
outsb
mov
arpl
stos
pop
sbb
je
adc
xchg
push
adc
je
vpunpckldq
fucom
push
aaa
hlt
jb
iret
jmp
icebp
std
mov
push
mov
dec
lds
sub
add
in
push
cli
adc
ljmp
cmp
xor
lock
add
mov
mov
pushf
jbe
cmpb
scas
repnz
jo
xchg
cli
je
mov
fwait
cmpsb
xchg
jge
sti
add
pop
xlat
insl
aad
pusha
push
bound
mull
fmull
mov
sahf
dec
aam
iret
or
daa
ss
inc
ficomps
inc
cmp
pop
jge
movsl
pop
pop
mov
xchg
popf
adc
and
push
sbb
push
xchg
jmp
test
fwait
push
or
cmp
jb
jne
sub
fwait
imul
inc
pcmpeqb
insb
adc
push
push
int
mov
jae
cld
push
add
cs
jbe
xchg
inc
dec
inc
clc
and
cltd
mov
repz
js
pop
imul
jmp
loopne
int3
nop
lods
xor
jg
jecxz
out
lock
mov
jns
paddusw
mov
and
addr16
in
shlb
shlb
cltd
dec
aaa
cmp
jnp
mov
mov
insl
and
mov
xchg
or
push
pop
cmp
cmpsb
ds
mov
mov
mov
jns
lgs
mov
lret
pusha
mov
cs
addr16
pop
dec
cwtl
cmp
outsl
dec
add
and
mov
inc
aas
mov
ud1
pop
stos
ficoml
pop
cmp
mov
pop
call
fsubs
popf
test
das
add
imul
or
and
hlt
lcall
out
mov
pushf
call
icebp
add
jbe
jbe
inc
push
xor
popa
cmp
xor
subb
aad
lea
repz
in
lcall
lcall
and
pop
inc
and
add
inc
cltd
dec
insl
jl
cmpsl
ja
rclb
sbb
mov
inc
xor
movsl
icebp
and
test
xor
xchg
cmpsb
inc
js
testl
mov
fnstenv
sub
mov
sub
ss
xchg
outsb
dec
cmc
cmpl
pushf
inc
in
clc
dec
xor
ret
jnp
dec
jmp
jo
ficoml
inc
icebp
enter
mov
jnp
sahf
ja
icebp
inc
cwtl
mov
pusha
cld
xor
insb
mov
outsl
das
xchg
popf
test
and
rcll
movsl
mov
das
adc
pop
divl
push
mov
mov
sbb
leave
xchg
popf
cld
mov
ret
les
and
cltd
cmp
push
jge
sub
xchg
test
cmp
mov
pop
jmp
adc
xchg
movsb
push
sub
jp
or
cld
jle
push
verw
add
gs
lret
add
lret
mov
cmpsb
mov
push
popf
mov
or
out
xchg
popa
pop
push
pop
push
pop
push
je
adc
mov
adc
insb
xchg
adc
aad
or
addr16
jnp
ret
mov
enter
jp
data16
mov
mov
inc
cmp
hlt
adc
mov
pop
fcmovnu
clc
test
adc
je
dec
loope
mull
push
mov
aam
lret
lcall
push
cmp
cmp
fstpl
sbb
xchg
add
push
dec
sbb
fiaddl
jns
cmp
cmp
les
push
fimuls
push
and
sbb
jg
mov
cmp
dec
loope
ss
mov
inc
addr16
push
mov
jbe
xor
fisubrl
out
aad
lahf
dec
sti
jecxz
aas
mov
fisttpl
leave
lret
and
ljmp
or
stc
es
fcoms
or
out
test
imul
shrb
in
jl
pop
repnz
cmp
call
xchg
std
jbe
std
mov
cmp
enter
js
add
stos
incl
cmpsl
sbb
push
pop
lods
inc
add
shrl
pushf
popa
in
out
sahf
negl
insb
inc
mov
int
jl
dec
sti
repz
cltd
mov
cmp
dec
inc
icebp
in
mov
and
inc
jp
movsb
sbb
mov
pop
int3
test
loop
iret
sbb
ss
mov
jb
pop
jbe
les
mov
add
int3
es
push
sub
jbe
sub
scas
cmp
mov
pop
mov
sbb
pop
mov
pop
add
pusha
sbb
mov
xor
lahf
pop
fwait
add
andb
daa
add
adc
jbe
xor
inc
in
or
jns
pop
cld
insb
testb
fnsave
out
hlt
mov
xchg
out
mov
pop
mov
mov
test
mov
in
lcall
xor
fistps
mov
and
inc
jb
cmp
mov
mov
in
jecxz
or
enter
cmp
jo
scas
cmc
xor
icebp
push
cmp
cmp
mov
test
or
push
push
fdivs
lods
mov
movsl
inc
push
fildll
jecxz
pushf
adc
and
mov
cmp
xor
mov
and
fwait
lods
sbb
or
ljmp
add
and
enter
mov
mov
dec
push
mov
out
jbe
into
cli
stos
fwait
sbb
sub
inc
enter
lcall
mov
repnz
pop
mov
and
lock
mov
push
loopne
jg
cld
int3
lods
pop
shll
aas
stos
or
iret
mov
adc
testl
fiadds
loop
pop
inc
call
sbb
push
cwtl
push
mov
mov
xchg
pusha
icebp
and
orb
fs
sbb
outsl
iret
shll
dec
jbe
dec
push
enter
add
popf
je
js
mov
icebp
loopne,pn
nop
sbb
add
mov
pushf
sub
jno
mov
movsl
adcb
pop
ljmp
or
pusha
out
mov
xchg
dec
inc
pusha
loopne
dec
ja
jmp
cmpsl
push
add
xchg
mov
roll
hlt
push
mov
fxch
loopne
mov
sub
add
lods
or
out
stos
fstps
jnp
lods
and
pop
xchg
cmpsl
adc
fldcw
in
dec
daa
lret
jns
push
movsb
lods
lret
mov
inc
mov
test
mov
xorb
inc
fld1
aaa
inc
and
stc
jo
pop
pop
xor
fidivs
and
pop
inc
add
in
fsub
cmp
sub
push
iret
jp
outsl
insl
and
fs
out
adc
and
dec
sbb
int
fsubl
mov
stos
in
push
xchg
add
push
adc
xor
clc
pop
bnd
aaa
lahf
xchg
and
sub
sub
xor
je
subl
jle
add
dec
pop
nop
dec
xorl
imul
rcl
add
cmpsl
into
cmp
mov
mov
jb
mov
insl
mov
sbb
xchg
or
lods
insb
scas
mov
mov
sub
xor
mull
inc
mov
push
cli
ret
outsb
push
mov
and
pop
out
rorb
xchg
adc
divl
xchg
aam
lret
dec
dec
inc
sbb
jle
jno
aaa
loopne
add
in
adc
scas
add
add
inc
push
ds
scas
ljmp
lods
xchg
js
arpl
sub
cld
aaa
lret
fcomps
loopne
sahf
adc
mov
dec
mov
push
sbb
outsb
sub
fcmovbe
sbb
mov
adcl
mov
xor
and
xor
adc
cmp
sub
ret
popf
or
jae
shll
xchg
icebp
cmp
scas
aam
jp
and
dec
lea
lds
repz
test
xchg
dec
push
das
sub
aas
mov
into
testb
aaa
cmp
or
shlb
outsl
push
mov
xor
dec
sub
loope
add
testl
repnz
daa
pop
pop
mov
scas
add
loop
jo
out
movsl
in
push
xor
sti
test
cmp
out
cmp
mov
enter
mov
out
das
shll
lahf
xchg
and
out
pop
push
jecxz
imul
adc
pusha
push
imul
nop
cmc
sbb
cli
xlat
daa
push
sbb
mov
aas
xor
mov
aas
add
mov
outsl
or
lea
and
in
xchg
mov
rorl
cmpsb
popa
inc
inc
mov
mov
push
jno
shll
push
jbe
ret
push
fnstcw
jmp
mov
add
icebp
enter
mov
xchg
icebp
inc
dec
stos
mov
adcb
mov
cltd
and
xor
sub
outsl
mov
push
sti
insl
dec
int3
sub
fdivr
ds
jo
sub
push
mov
stc
mov
rol
cld
jg
mov
test
shll
push
mov
and
sub
jle
mov
xchg
pop
leave
dec
jbe
dec
fidivrl
lock
push
inc
fcmovnbe
insb
dec
ds
jle
rcrl
mov
out
outsb
mov
sub
fidivrl
mov
iret
xchg
js
sub
mov
fcmovu
mov
inc
lds
loopne
outsb
icebp
mov
pop
mov
or
push
xchg
push
xchg
mov
loope
fwait
pusha
fbstp
loopne
mov
jmp
es
mov
into
add
inc
xchg
out
das
and
jne
add
loope
shlb
cli
repnz
or
daa
inc
dec
sub
rep
nop
ljmp
sbb
adc
and
out
jne
lret
sbb
imul
dec
mov
scas
and
lds
pop
and
addr16
jbe
neg
push
mov
xlat
xchg
fisttpll
sbbb
repnz
inc
and
push
inc
and
push
aas
es
jle
ret
fcoml
add
push
or
fcmovb
or
je
add
inc
xchg
hlt
cltd
sub
sub
shlb
daa
xor
movsb
push
in
ficoml
dec
daa
jmp
lcall
xor
fwait
pop
adc
filds
insl
addr16
push
and
outsl
jg
js
pop
or
xor
roll
pop
mov
outsb
dec
mov
dec
pop
aam
insb
and
and
je
or
jne
xchg
ja
inc
xor
inc
arpl
and
and
out
stc
rcrl
repnz
pop
push
enter
lret
and
sbb
jge
add
xor
in
stos
popl
fildl
mov
adc
stos
cmpsb
adc
jmp
enter
mov
loope
shl
dec
xchg
test
xchg
stc
cmp
leave
adc
mov
push
fisttpl
add
and
xor
lea
sbb
jg
outsb
sahf
pop
pop
ret
pop
test
xor
addb
mov
add
mov
sbb
adc
xchg
sbb
out
mov
inc
shll
popf
inc
int
adc
fs
cmp
pop
in
and
jno
pop
and
lds
pushf
or
insb
lock
xchg
push
scas
shll
pop
inc
aad
lea
and
je
jecxz
icebp
jecxz
scas
push
std
movsl
xchg
je
mov
sbb
movsl
inc
jmp
nop
push
sub
pushf
push
cmp
in
cmpsb
or
lds
cwtl
iret
cmpsb
in
ss
xchg
stc
xor
lea
lret
imul
bound
dec
aad
dec
mov
pop
incb
pop
in
rcrl
nop
pop
pop
pop
dec
repnz
test
pusha
xchg
out
stos
mov
mov
movsb
cmp
xlat
push
mov
movsb
test
adc
rcl
dec
inc
and
lods
daa
sbb
roll
int3
int3
adc
pop
popa
cmp
jp
push
dec
mov
mov
or
or
stos
xchg
pop
cmp
movsb
fcmove
ret
ljmp
bound
nop
push
cs
lret
enter
jge
and
mov
and
and
add
jmp
mov
dec
int3
aam
mov
xlat
movsb
dec
outsl
cmpsb
andl
sub
mov
mov
bound
adc
clc
mov
sub
jne
jno
fcomi
cltd
pop
pushf
pop
adc
repnz
inc
test
lret
jae
ret
pop
adc
mov
leave
in
xchg
repz
jns
stc
cwtl
pop
pop
sbb
fidivrl
dec
xchg
or
push
jno
gs
test
es
or
shl
push
cmp
adc
mov
mov
pop
jg
xchg
mov
lcall
mov
fcomps
call
xchg
clc
iret
push
fcmovne
pop
cmp
pop
fadd
jne,pt
dec
jecxz
jp
cli
rol
xchg
scas
out
mov
js
ja
sbb
jo
in
xchg
jne
cltd
mov
mov
out
sbb
mov
std
outsb
sbb
pusha
mov
cmp
adc
mov
adc
push
and
lret
lock
cwtl
loopnew
and
cmpsb
mov
mov
lods
xchg
cmc
scas
cmp
sbb
xor
pop
sti
icebp
cmp
mov
std
mov
cltd
jo
xlat
cli
out
dec
gs
ljmp
push
xchg
mov
movsl
mov
mov
and
xchg
jb
fnstsw
add
and
xchg
adc
adcb
sbb
in
jle
mov
mov
popf
push
notb
xor
mov
fistl
dec
push
jno
jbe
stos
das
fwait
fwait
pop
sub
andb
mov
outsb
mov
mov
xchg
mov
mov
and
in
das
push
jne
cli
daa
or
rclb
cwtl
adc
cld
jo
addl
mov
sti
packssdw
out
add
outsl
dec
pop
hlt
movsb
or
mov
in
mov
jl
ja
fcomi
sbb
inc
mov
repz
bound
into
mov
or
or
sbb
mov
sbb
dec
adcb
and
add
sub
hlt
mov
and
cmp
sub
icebp
adc
mov
and
cli
imul
inc
adc
repnz
icebp
jge
xor
loop
and
out
jle
cmpsb
jle
xor
mov
hlt
fstpl
movsb
pop
mov
cltd
push
clc
add
pop
mov
bound
adc
shlb
add
mov
sbb
or
icebp
movsl
push
pand
cmp
pusha
rcrb
cmp
inc
push
sub
adc
mov
xchg
cmpsl
push
jno
jg
icebp
add
clc
jo
push
jne
xor
mov
sbb
and
outsb
fldenv
addr16
mov
xor
mov
inc
and
inc
loopne
movsb
xor
and
xchg
sbb
pop
cmp
mov
mov
xchg
cmovs
ret
push
scas
add
cli
push
push
sub
pushf
sub
aaa
jmp
jb
dec
cmp
out
scas
sub
cmc
cld
pushl
pop
xor
ljmp
push
push
sbbb
jmp
jmp
cmp
cli
test
jbe
ficomps
mov
jg
pushf
int3
jnp
mov
test
stos
mov
mov
in
cmp
inc
add
pop
int
imul
mov
shrl
jno
subl
push
out
pop
lods
pop
call
mov
lods
jl
mov
das
ss
pop
inc
inc
mov
push
inc
push
aas
in
dec
mov
js
push
mov
mov
push
out
xorb
adc
je
adc
sbb
lret
loope
or
push
adc
sbb
out
push
and
push
xchg
ror
mov
push
mov
add
xchg
nop
hlt
inc
cmp
add
je
inc
cmp
xlat
mull
cmc
in
mov
mov
repz
xorl
push
repz
mov
ds
test
outsl
js
add
jmp
adc
insl
arpl
rolb
push
and
nop
sbb
js
fistpl
loop
lds
pop
mov
pop
loop
xchg
jnp
jb
ret
stos
mov
scas
ss
jmp
pop
mov
popf
sbb
out
mov
lods
roll
les
xor
stos
lds
cmp
rorb
jns
inc
mov
test
adc
divl
rclb
ja
sahf
out
mov
and
fstpt
mov
fidivrl
rcll
movsl
mov
cmp
xchg
mov
rcrb
jnp
cmc
push
lods
dec
test
jge
sbb
cmpsl
out
push
xchg
outsl
or
dec
ss
cmpl
iret
popa
cmc
lret
movl
dec
fistl
icebp
test
scas
rcr
and
scas
xchg
dec
xchg
setp
mov
xchg
and
fbstp
mov
movsl
push
outsb
out
xchg
adc
gs
pusha
sbb
aaa
lea
push
inc
stos
mov
hlt
push
imul
into
jp
imul
dec
aam
pop
test
out
inc
mov
shrl
pop
adc
mov
sbb
int
into
lret
iret
sbb
lret
cmp
movb
cltd
sub
out
femms
jb
fsubs
push
loope
shll
outsl
push
pusha
imul
icebp
mov
lods
xchg
mov
xor
dec
add
mov
or
or
xchg
or
sub
push
sub
out
jbe
push
stos
repz
out
in
bound
or
push
xchg
pop
bound
dec
faddp
dec
xlat
mov
es
jbe
sbb
sbb
pushf
out
mov
jmp
scas
mov
jge
mov
push
into
jae
sub
cmp
inc
pmuludq
inc
jecxz
inc
mov
vmovntps
fcmovnb
ljmp
sub
mov
push
pop
push
sub
std
mov
cmp
loopne
out
or
add
popa
cmc
in
lods
cmc
jns
movsl
ss
pop
pop
popa
in
and
xor
or
jl
or
cli
cmp
daa
fistpl
or
push
lods
pop
shrl
sbb
ror
dec
mov
adc
repnz
adc
mov
ja
enter
in
inc
mov
xor
jg
fdivs
xchg
adc
in
outsl
mov
xor
push
mov
xor
lods
lock
or
pop
and
xchg
popf
movsb
out
adc
std
jmp
lret
inc
ljmp
sub
xchg
xchg
mov
and
test
movsl
xor
pop
outsl
insl
mov
xor
xchg
dec
mov
xchg
jl
push
out
addr16
into
test
dec
pushf
outsb
pop
push
mov
sub
push
inc
lcall
iret
adc
aad
gs
fcoml
jle
outsb
cld
jl
and
push
cltd
pop
popf
add
cwtl
ds
cmp
lods
pop
movsl
ja
roll
add
sub
add
lods
or
lods
cmpb
inc
xlat
ljmp
lret
fsubs
je
mov
es
inc
mov
mov
mov
xchg
push
add
sub
sub
push
insb
mov
cmpb
jns
pop
push
lds
insl
push
mov
repz
daa
in
das
push
cli
test
das
loop
adc
into
xchg
pop
xchg
dec
lods
push
daa
or
mov
adc
adc
fsub
pop
jecxz
pop
pop
pop
adc
je
dec
push
rclb
xchg
fbld
lret
fldcw
xor
pop
fcomps
xorb
lcall
adc
fistpl
je
and
data16
cmp
xor
xor
xor
push
cmc
add
insb
jne
or
xor
mov
fistps
dec
dec
dec
inc
push
jbe
stos
fs
in
test
sbb
aam
or
xor
jo
pop
test
jnp
pop
add
push
mov
adc
jnp
push
cld
lock
fmulp
fldcw
mov
leave
cmpsl
aas
inc
test
mov
mov
mov
ljmp
movsl
mov
cld
adc
cmp
jle
mov
cmp
outsb
es
cmp
jp
xchg
call
cmp
xlat
mov
cmp
out
movsl
lret
imull
adc
mov
adc
cwtl
movsl
rorb
adc
add
xor
addb
das
mov
sbb
push
lret
push
push
push
cmp
ss
adc
loopne
roll
scas
add
or
out
dec
stos
jo
cmp
imul
mov
call
int
pop
or
ret
sbb
jmp
sub
jmp
pop
mov
xor
add
out
push
shlb
mov
aam
js
daa
pop
test
dec
inc
push
or
jns
jmp
mov
and
divb
lea
dec
mov
add
sub
sbb
imul
lods
cs
xchg
or
cmp
insl
and
pop
and
xlat
inc
xor
outsb
jmp
stos
xor
jmp
insl
lea
loop
adc
push
mov
mov
and
arpl
xchg
pusha
fstl
shll
lahf
and
and
xor
jb
jl
xchg
sarb
pop
dec
pop
stos
xor
pop
in
pop
and
cmp
adcb
xor
dec
push
add
out
cmc
fmull
mov
pop
out
mov
fs
lea
imul
outsb
lcall
sub
xchg
xchg
add
inc
jle
push
xchg
fistpl
cmp
adc
mov
xlat
mov
into
cwtl
push
xchg
scas
and
mov
sahf
mov
dec
xchg
fdivr
jns
mov
fnsave
insl
ds
mov
aas
sub
inc
testb
and
mov
jmp
not
jbe
das
push
mov
js
jns
cs
cmpsl
mov
xor
mov
push
mov
dec
dec
add
push
bnd
and
sub
and
pop
push
pop
into
mov
cmp
outsl
inc
jbe
rorl
pop
ret
dec
ret
sahf
adc
cmp
les
mov
or
frstor
and
mov
jne
and
leave
add
mov
inc
jbe
cmpb
aaa
push
push
rcr
pop
in
fbstp
xchg
jg
lret
test
mov
test
movsl
mov
sbb
cld
aaa
xor
je
xor
std
dec
fxam
inc
inc
dec
insl
or
cmp
ret
sbb
pusha
nop
roll
and
cmp
fwait
jle
xchg
mov
iret
clc
push
and
sbb
pop
movsb
xor
pusha
aad
data16
jmp
mov
in
ljmp
adc
cmp
mov
jmp
out
jp
mov
push
mov
lret
jl
dec
jmp
in
xchg
sbb
lea
and
push
lods
jb
mov
push
mov
mov
add
int3
aad
push
push
xchg
ret
ljmp
test
jmp
fsubs
jle
sub
dec
pop
inc
xor
jp
daa
add
jl
pop
xor
lods
dec
push
mov
mov
pop
xor
in
lret
sub
or
lds
xchg
inc
pop
or
inc
push
jns
jg
sbb
enter
add
testl
push
inc
inc
roll
pop
mov
roll
sub
jbe
int3
xchg
fcompl
pop
jmp
imul
mov
outsl
adc
adc
cs
sbb
cwtl
mov
xor
lea
stos
data16
shll
lock
in
pop
fdivs
inc
add
dec
xor
out
pop
dec
pop
push
enter
pop
push
xchg
imul
mov
or
sahf
or
or
xor
popf
xchg
pop
or
mov
or
out
cmp
jns
lret
sub
sub
xchg
mov
adc
imul
int3
cld
icebp
lret
pop
cmpsl
pop
sub
jmp
andb
rcr
xchg
adc
xchg
cld
pop
ljmp
pop
sbb
xor
lds
jae
outsb
adc
in
in
into
add
loop
repnz
cmp
jp
push
inc
loop
das
inc
xchg
jnp
or
iret
mov
or
repz
in
lea
jge
cmp
testb
dec
dec
mov
rcrb
or
iret
fidivrs
sahf
jecxz
xchg
es
xor
sti
inc
inc
das
pop
sarb
aam
mov
lods
popf
mov
mov
mov
daa
xor
dec
jl
clc
mov
imul
and
pop
xchg
mov
adc
push
shll
sti
pop
push
inc
rcrb
pop
mov
adcl
fs
mov
lret
mov
sub
in
xchg
daa
icebp
test
stos
and
mov
mov
xlat
mov
sbb
ss
fnstcw
popa
scas
sarl
lds
push
ficoms
fcomps
call
adc
adc
divb
pushf
add
add
xor
imul
add
sbb
jecxz
add
pushf
sbb
stc
negl
pop
xor
lcall
mov
mov
xor
cmc
bound
adc
pop
inc
jp
inc
push
rol
add
sbb
bound
xchg
fndisi(8087
xchg
repz
push
bound
fists
xor
push
add
and
das
pop
push
adc
arpl
test
cmp
stos
jb
cmp
dec
insl
mov
or
mov
hlt
fwait
xor
or
and
or
outsl
lea
insb
sar
mov
cmp
mov
or
addr16
cwtl
adc
daa
rclb
loopne
out
inc
mov
in
mov
int3
addl
fistpll
push
dec
jae
fwait
orps
push
xor
cwtl
add
push
cmc
pop
aad
inc
in
pop
adc
sub
loope
in
addr16
add
shlb
daa
adc
aad
mov
mov
aam
sbb
dec
xor
popfw
stc
or
lea
in
in
jbe
cwtl
or
mov
sti
cmc
ja
outsl
shll
pop
sbb
adc
sbb
push
jp
sub
cmc
cmp
out
lcall
jbe
push
or
mov
loopne
popa
sbb
shll
mov
or
push
fistpll
or
ljmp
scas
sub
mov
stc
xchg
and
mov
mov
andb
ljmp
cmp
popa
inc
and
add
rcll
dec
movsl
dec
mov
pop
ja
jle
dec
or
iret
lock
add
popa
test
lods
movsl
mov
jnp
add
cmc
aam
adc
xchg
adc
lcall
jge
ret
add
in
add
pop
mov
addr16
jbe
mov
push
out
mov
lods
in
xor
popf
loope
pop
push
xchg
ret
addr16
inc
mov
xor
pop
jl
dec
fmul
xorb
pop
mov
inc
jl
addb
loope
inc
add
cmp
dec
xor
pop
xlat
jns
fiaddl
incl
cmc
push
leave
int3
add
adc
dec
ja
cld
dec
lahf
inc
and
jno
xor
add
movsb
sub
lock
hlt
push
push
inc
adc
push
mov
scas
lahf
andb
sbb
xchg
mov
sahf
lahf
add
mov
fisttpll
cmp
xlat
dec
orl
and
filds
pop
mov
jl
je
lods
js
xchg
jns
push
sub
cmp
ljmp
mov
ss
je
lea
fisttpl
or
pusha
ljmp
jo
lds
icebp
sub
pop
dec
xor
xchg
scas
xor
xor
or
incl
test
pushf
pop
mov
inc
pop
into
or
mov
loop
ret
push
jmp
imul
and
inc
or
ljmp
jns
inc
or
jmp
add
jns
jnp
cmpsb
fcmovnbe
pop
mov
mov
aam
cmpb
xlat
shlb
outsl
sub
repz
xor
pop
icebp
movsb
xor
lret
fwait
notl
pop
and
sub
sub
cmp
movsb
test
mov
pusha
ja
fldl
inc
push
sbb
mov
sarl
mov
jecxz
cmp
push
xchg
inc
mov
add
lret
pop
into
lcall
arpl
xor
xchg
out
pusha
popl
out
cmp
mov
sbb
addr16
cmp
fcompl
lret
icebp
add
xchg
pop
ret
mov
xor
xchg
pop
roll
rclb
loop
scas
pxor
adc
in
cmc
pop
jle
push
lds
into
in
loopne
inc
pusha
sbb
test
inc
test
pop
loopne
scas
adc
aam
jp
leave
mov
fucomi
lahf
inc
inc
and
xchg
int
sbb
mov
popa
nop
in
rcrb
or
shlb
sar
mov
rorb
sub
iret
ss
arpl
inc
dec
and
jl
xchg
pop
push
inc
ret
cs
sub
xlat
mov
mov
andl
lret
push
or
fs
or
fs
mov
jo
mov
movsb
lret
mov
adc
mov
pop
mov
out
cmp
or
adc
push
repnz
arpl
inc
outsb
adc
push
push
out
sbb
or
cmp
sub
loopne
dec
xor
mov
ss
push
aad
mov
aam
pop
push
mov
adc
mov
dec
and
cmp
mov
adc
out
and
out
cmpb
pop
imul
in
lods
lahf
pop
add
inc
in
pop
mov
xchg
mov
jp
aam
movsb
jp
icebp
loopne
push
ja
mov
lds
sub
mov
in
xor
mov
mov
push
xlat
stos
push
cmp
pusha
lods
das
lret
pop
test
fbstp
mov
imul
jns
out
mov
addr16
adc
inc
ret
addr16
fisubrs
iret
gs
je
inc
inc
dec
push
sub
xchg
dec
sti
adcb
add
sub
fildl
in
push
clc
or
push
sbb
and
sti
mov
add
or
les
sbb
mov
jl
xor
rcl
rorb
outsb
add
jg
push
data16
mov
aaa
push
sbb
or
mov
inc
and
je
mov
push
ljmp
insl
xchg
add
sub
mov
clc
mov
dec
mov
or
lret
sub
xchg
adc
int
push
or
push
pop
jge
xchg
insl
add
sbb
adc
movsl
mov
pop
dec
incb
xchg
add
sub
jp
rcll
push
cmp
cmp
inc
icebp
pop
imul
push
hlt
push
cmp
cmp
int
fwait
inc
and
jp
add
sti
xor
aam
popf
mov
cmc
or
popa
sarl
std
xchg
push
jl
pop
xor
and
fwait
leave
push
xor
orb
xlat
mov
repz
pop
sub
cmp
jmp
xchg
jo
inc
push
lahf
xchg
out
dec
popa
outsb
lcall
mov
cmp
out
insl
in
lahf
dec
insl
insl
jo
dec
xlat
in
sub
and
ror
inc
cmpsb
push
mull
pop
add
adc
push
jmp
cmpsb
lods
nop
mov
pop
test
and
xchg
inc
aaa
mov
mov
xor
subb
push
sub
lods
lods
ds
sub
jo
xor
mov
adc
sti
mov
dec
push
mov
xor
repz
movsl
push
inc
and
mov
sahf
insb
in
push
jb
out
push
in
mov
fisubl
outsb
fnstenv
and
dec
enter
pushf
dec
add
enter
dec
fidivrl
mov
into
inc
sahf
jb
xchg
dec
mov
data16
xchg
fmull
pop
xchg
ljmp
cmp
nop
dec
sbb
or
outsl
xchg
push
scas
jb
movl
mov
add
push
xlat
mov
mov
sub
mov
cld
enter
repnz
cmp
mov
cmp
fsubs
adc
ds
inc
cmp
mov
pop
rol
ds
push
pop
arpl
movsl
mov
jo
xor
lahf
add
xchg
dec
push
loop
repnz
repz
mov
xchg
ret
mov
cmp
cwtl
fdivl
ljmp
mov
out
cmp
push
jecxz
pop
adc
sahf
mov
lods
mov
insl
mov
inc
dec
sub
dec
cmp
outsb
andl
je
je
jecxz
mov
jbe
lea
data16
sub
push
cmp
add
ret
adc
out
cmc
push
ja
fs
sbb
js
push
adcb
arpl
jns
sbb
std
ret
sub
lret
push
adcl
xchg
out
sub
aam
aad
mov
scas
sar
aam
or
mov
add
push
inc
xchg
inc
xchg
xor
dec
inc
dec
rorb
xchg
or
or
fstl
add
je
mov
xor
insl
cmpsl
sub
cmpsl
fs
mov
movsb
icebp
fadds
in
push
add
bound
and
in
jns
int3
arpl
cmp
inc
ljmp
adcb
les
add
aam
add
pop
mov
sti
icebp
or
rcll
jb
xchg
inc
les
scas
in
fcomi
fsubl
repnz
mov
jmp
gs
xor
fsubrl
pop
mov
cmp
mov
roll
sarb
jae
and
xor
add
int3
sbb
inc
pop
pushf
out
mov
mov
out
xor
xor
addb
mov
outsl
cld
sub
scas
adc
iret
cmp
out
divb
gs
lods
add
bound
jo
aas
adc
int
push
mov
push
sbbb
lea
push
push
cmp
test
adc
enter
repnz
xchg
rclb
sar
jp
mov
cmp
outsl
mov
xchg
pop
push
dec
pop
test
dec
addr16
int3
add
cmp
xor
mov
addr16
pop
fsubrl
adc
aaa
movsb
je
adc
xchg
rclb
fisubs
lcall
into
cmp
push
int
iret
adc
and
jp
push
and
outsb
xorb
sub
push
mov
pop
jb
xchg
pop
inc
cmp
popa
int
xor
dec
icebp
outsl
imul
dec
pop
mov
lcall
data16
push
sub
push
stos
addr16
sti
jae
push
push
sti
or
cwtl
cmp
shll
xchg
adc
inc
add
jmp
stos
lock
mov
ret
mov
push
add
jl
pop
loopne
ss
xor
daa
cmp
aaa
cwtl
jecxz
daa
inc
arpl
ja
inc
pusha
rorl
clc
xor
push
and
movl
lods
inc
mov
jno
inc
fwait
and
clc
fs
aas
push
jmp
cli
test
jl
xor
fchs
add
and
in
push
xor
testb
jp
test
and
inc
outsb
ljmp
outsb
outsl
gs
push
imul
jecxz
or
and
or
adc
fwait
stc
fstpt
lods
dec
mov
and
aad
push
sbb
cld
movsb
mov
sbb
jl
call
daa
aas
das
cmp
mov
lock
lea
hlt
mov
stos
and
outsb
jbe
jae
dec
and
and
push
shlb
test
call
sub
jmp
inc
test
movsl
enter
jp
pusha
jae
addb
bnd
lcall
fwait
push
xchg
aam
aas
xchg
jmp
cmp
addr16
xchg
sub
cli
fisubrl
push
pop
mov
mov
ret
xchg
imul
jns
xor
push
lds
mov
fidivs
cs
push
sub
mov
push
cmp
fsubr
push
adc
addr16
popa
cmpsl
lock
mov
jmp
or
je
aad
or
dec
mov
cmc
test
addr16
adcb
xchg
hlt
push
mov
popf
outsl
mov
jge
loop
or
fs
add
sub
sbb
das
mov
push
mov
push
mov
lret
xor
cmp
in
stc
jns
xor
inc
mov
ret
out
mov
imul
inc
and
ljmp
mov
stos
arpl
fwait
lret
rcrl
add
scas
jno
jns
in
add
mov
pop
inc
cld
mov
adc
cmp
adc
lods
adcl
addl
xchg
orb
icebp
xchg
mov
cmp
mov
mov
xchg
in
xchg
in
in
mov
out
dec
divb
sbb
and
push
movsb
in
pop
fldenv
std
dec
inc
inc
lds
insb
mov
jb
movsl
shll
inc
mov
repnz
pop
pop
sbb
jbe
in
sbb
pop
inc
in
mov
clc
mul
arpl
dec
je
shlb
and
inc
in
test
xchg
stos
xchg
sub
aad
mov
add
adc
clc
cli
aad
mov
das
sbb
lds
jns
lahf
xchg
imul
inc
lahf
movsl
xor
fwait
iret
mov
mov
inc
arpl
dec
or
jmp
daa
icebp
cli
ud0
popa
xor
adc
lahf
out
cmp
aam
loope
mov
arpl
mov
push
bound
repnz
into
adc
nop
push
rcrl
mov
pushf
pop
adc
jecxz
dec
jne
mov
movsl
nop
cwtl
or
int3
add
mov
daa
in
cmp
lret
mov
cwtl
inc
sbb
sub
inc
pop
jbe
sbb
cmpsb
adc
jns
loop
push
sbb
mov
out
xchg
test
aaa
out
stos
jle
jne
stos
xorl
xor
jne
jbe
inc
push
mov
mov
std
inc
dec
push
pop
xchg
mov
push
push
dec
mov
cwtl
mov
xchg
add
or
stos
xchg
fcompl
aad
pop
cmp
jp
in
mov
rclb
sbbb
fidivrs
bound
xor
repz
shrb
cmpsl
dec
mov
ffree
filds
push
pop
icebp
ja
fcmovu
mov
daa
nop
inc
sub
sbb
and
in
je
scas
repz
xchg
outsl
sub
mov
mov
fsubl
loopne
mov
stc
outsb
jno
mov
inc
jae
test
es
addr16
sahf
xchg
js
scas
mov
xor
pop
cmc
stos
lock
stos
lahf
fs
mov
jg
incb
lcall
imul
iret
push
xor
outsb
and
push
mov
xchg
cmpsl
mov
lods
imul
out
repnz
push
cmpsb
push
pop
sub
cli
jecxz
int3
repnz
jne
test
jo
mov
dec
ja
inc
fldl
mov
xor
lods
mov
rorl
popa
cld
loope
push
or
ja
ud2
mov
stc
pop
cmp
cltd
hlt
xchg
cmp
scas
push
sub
cmp
dec
push
cli
lret
adc
ret
sbb
adc
sbb
xor
int3
dec
icebp
push
push
rclb
das
test
mov
fldt
scas
dec
test
push
fcomps
push
cmpsl
popa
xchg
mov
out
incb
call
pushf
or
jmp
sbb
push
lock
adcl
sbb
fcomps
les
jg
jo
mov
pop
loope,pn
inc
outsl
int
in
test
aas
xchg
mov
xchg
sbb
mov
pop
xchg
aam
jge
gs
in
xchg
jl
fnstsw
xchg
inc
jns
out
in
mov
push
cmp
sub
arpl
pop
adc
lahf
jl
xchg
pop
sbb
mov
aas
mov
cli
inc
fucomp
add
push
aas
jbe
movsl
sub
pop
cwtl
push
pop
push
insl
push
mov
cld
dec
sbb
sbb
sub
xlat
fs
add
orb
dec
jmp
mov
int3
mov
xlat
insl
js
inc
adc
jnp
repz
scas
fnstenv
cli
pusha
mov
ljmp
in
pop
jb
sub
sbb
pop
sub
sar
push
xlat
pop
insl
mov
test
iret
ds
jl
jle
add
gs
ljmp
fisttpll
cmp
adc
and
adc
or
mov
cmp
mov
sub
mov
add
xchg
cld
dec
mov
cmp
sub
in
aas
or
jle
insb
fldt
pop
loopne
jmp
mov
cmpl
enter
leave
ficomps
imul
js
cs
fdiv
jne
or
movsl
add
sbb
mov
lret
mov
loope
bound
and
adc
jbe
jb
mov
fbld
aam
sbb
test
mov
icebp
fbstp
mov
mov
fwait
or
fstpl
mov
mov
fstps
adc
jg
cmpsl
sub
aam
jo
fwait
bound
aaa
xor
ds
pop
xlat
and
filds
cmpsb
mov
or
add
jbe
xor
jge
ja
add
int3
mov
push
push
rol
mov
dec
add
in
dec
adc
test
lods
sub
lea
fdivr
or
xchg
pop
or
fxch
inc
sarl
pop
repnz
addr16
mov
sahf
and
add
cmp
stc
push
mov
jbe,pt
cmpsb
fidivs
sbb
jge
xchg
xor
repnz
jp
sbb
test
fs
stos
xchg
dec
test
popa
dec
sbb
inc
sub
jb
imul
hlt
inc
into
lret
jae
cmp
jle
mov
cltd
ja
shlb
outsb
lea
mov
inc
test
popf
pushl
das
aaa
ja
data16
sarb
xor
add
out
loop
in
sub
ljmp
scas
in
or
in
mov
mov
lock
sub
jo
aam
int
into
cmpsl
in
jno
lret
nop
push
inc
sbb
or
or
mov
dec
adc
jl
out
pop
fcmovnu
mov
fwait
pop
xor
add
xor
adc
arpl
pop
adc
ss
sahf
outsb
xor
pop
pop
roll
stos
out
dec
mov
lret
scas
test
clc
push
adc
jp
or
cmovp
mov
call
nopl
pop
arpl
push
js
cli
mov
jnp
add
je
lahf
xchg
dec
mov
mov
mov
scas
xchg
divb
lock
mov
cmp
xor
bound
or
xor
xchg
xor
ret
shll
pusha
scas
call
mov
jle
stc
loope
pop
and
idiv
cltd
mov
jne
jns
dec
mov
pushf
dec
das
mov
scas
fimuls
sub
add
pop
and
ret
es
push
push
ljmp
mov
inc
mov
bound
dec
push
jp
inc
and
pusha
pop
movsl
out
clc
les
add
push
sbb
xchg
xor
dec
pop
xor
mov
inc
fnstcw
popa
je
das
or
sbbb
or
ffree
std
jns
jno
pop
sbb
leave
mov
and
in
sbb
neg
lret
ret
scas
testl
jns
sbb
clc
scas
dec
mov
adc
out
addr16
cmpsl
loop
rcll
iret
xor
fiadds
fdivrl
mov
ljmp
pop
push
cmp
pushl
cmp
pop
mov
add
or
jbe
sti
jns
fsub
fcmovnb
add
ss
shll
pusha
pop
xchg
sbb
pop
jne
or
jns
xchg
xchg
mov
mov
idivb
mov
fimull
or
test
mov
fcmovnb
or
std
in
adc
les
dec
decl
xor
mov
jo
jmp
and
xchg
in
roll
lea
or
add
pusha
pop
ss
mov
clc
xlat
dec
aaa
int3
out
outsl
stos
push
daa
jns
xchg
dec
adc
imul
push
jle
fsubr
dec
rol
cmp
fwait
sub
cmp
or
icebp
repnz
cmc
fnstcw
iret
mov
cwtl
lods
or
adcl
test
mov
xchg
xchg
push
push
je
clc
cmp
leave
loope
mov
jmp
stos
xchg
pop
mov
scas
mov
gs
int3
movsl
jne
nop
sbb
dec
idiv
jl
xchg
inc
fcompl
sbb
hlt
mov
sub
pushl
scas
clc
xor
loop
aas
iret
xchg
cs
fstl
add
mov
xorl
pop
movd
adc
arpl
jbe
ret
xor
nop
into
stc
imulb
aam
pop
push
cmc
lret
push
mov
fdivrs
or
push
xchg
call
jle
shrb
push
pop
test
stc
and
mov
or
jp
jns
gs
les
sbb
xlat
sub
andb
mov
rolb
push
sub
dec
add
sbb
xor
fs
dec
adc
inc
or
mov
sti
int
leave
jmp
sbb
mov
sti
mov
rolb
pop
addr16
adc
fnstsw
xchg
rcl
lods
stos
mov
add
fistpll
int
jb
jb
add
cmp
cmp
ds
pop
inc
adc
pop
adc
ficomps
sub
cmp
aaa
pop
mov
pmuludq
addb
dec
movsl
push
leave
loopne
mov
in
scas
mov
ljmp
mov
or
std
mov
hlt
inc
lret
fbld
push
ja
cmpsb
bound
mov
fdivrl
pop
aaa
dec
jl,pt
push
pop
push
fs
and
adc
push
jg
mov
and
inc
loope
xchg
mov
mov
pop
pop
movsb
jecxz
js
xor
das
push
lods
xchg
in
mov
test
jge
lea
pop
data16
insl
dec
xchg
aaa
xor
enter
xchg
jnp
int3
fsubr
xorl
shl
iret
adc
ret
xor
adc
mov
mov
add
repnz
lcall
sub
jecxz
mov
in
add
shr
inc
jecxz
in
cmpsb
loopne
xor
and
pop
fwait
sbb
lret
out
scas
cltd
leave
mov
jne
fldenv
push
stc
fcmovbe
popf
cmc
fdivl
sub
mov
inc
aad
fistps
sub
loopne
inc
lock
mov
push
push
sbb
sahf
xor
ds
loopne
cmp
mov
stos
popf
jo
int
pop
fsubl
lahf
inc
repnz
sub
cmp
in
call
pop
or
je
fnstsw
ret
arpl
xchg
andl
mov
or
faddl
cmp
aaa
adc
pop
xchg
and
sub
leave
jne
shl
lahf
and
pop
cwtl
jne
sbb
xchg
push
dec
dec
xor
mov
dec
adc
aam
dec
push
je
xchg
adc
xchg
sub
pop
xchg
cmp
cwtl
gs
idivb
mov
mov
sbb
addb
adc
in
xor
push
and
jno,pt
mov
insl
sbb
and
cmpsb
stos
ds
adc
movsb
push
pop
rorl
pop
push
ss
js
ljmp
add
and
cwtl
lods
dec
xorb
std
push
lcall
mov
cmpsl
fidivrs
scas
sub
call
imul
movsl
insb
sub
push
ss
xor
lock
leave
stc
movsl
mov
or
movsl
xlat
or
pop
jbe
push
lcall
pusha
mov
sbb
mov
inc
jns
inc
xor
rcl
push
addr16
xchg
rorl
aam
movsb
stos
ljmp
lods
add
notl
mov
jg
std
jno
pop
inc
pusha
call
int
pop
ss
jae
xchg
inc
add
lret
fs
rol
fprem1
sbbl
leave
insb
jno
xlat
and
push
stc
loop
or
sbb
lahf
lcall
pop
jl
popf
sbb
cmp
xor
in
xlat
rcll
jns
in
inc
shrl
cwtl
mov
in
ja
fstpt
rorl
adc
sub
icebp
sahf
inc
pop
in
subl
jle
cmp
into
sahf
in
das
adc
sub
es
fistpl
je
jns
inc
popa
out
in
push
jle
insl
or
dec
jl
xchg
inc
jecxz
lret
jne
dec
cmp
jnp
cltd
push
pop
enter
adc
ror
mov
repz
or
jecxz
add
and
rol
test
push
lock
jbe
andb
sbb
test
add
jl
add
inc
push
dec
clc
mov
cwtl
out
sub
inc
ja
movsl
lahf
cwtl
das
jecxz
push
iret
inc
sub
in
popa
mov
cs
add
push
cmc
test
or
test
jbe
shrb
cwtl
inc
std
or
dec
sub
dec
daa
rolb
add
lahf
movsb
mov
movb
lahf
xchg
push
jg
pop
lcall
and
mulb
cmp
adc
dec
mov
jge
lock
in
inc
adc
or
pop
pop
push
mov
pop
aaa
gs
repnz
adc
cmp
fcmove
jno
dec
xchg
call
jno
sub
mov
pop
clc
into
mov
push
xor
ss
xorb
inc
inc
into
inc
inc
insb
in
stc
and
adc
mov
mov
sub
adc
and
out
inc
dec
pop
es
lods
cmp
add
sbb
mov
jo
lret
loopne
insb
xchg
push
pushf
cmpsb
mov
sub
mov
cli
inc
lahf
aad
add
lds
xchg
inc
or
nop
roll
mov
popa
pop
fisubrl
cmp
in
int
aas
push
mov
lock
mov
sar
cmp
sub
insl
aaa
rcrb
lahf
sbb
cmp
push
imul
cmc
push
bound
clc
add
and
inc
lods
fcmovb
in
pop
sub
pushf
mov
dec
and
adc
add
out
or
add
cmp
jmp
out
cmp
sub
bound
stc
or
mov
movsl
mov
inc
push
mov
mov
or
out
hlt
mov
int3
dec
test
mov
xor
sbb
test
xchg
inc
push
jmp
mov
sbb
pop
sarl
imul
in
loope
sub
invd
outsb
xor
mov
loopne
sbbb
aad
bound
pop
jo
stos
mov
mov
jbe
push
cmp
stos
cs
scas
adc
and
pop
ds
popf
adc
push
xchg
mov
test
push
loope
pop
add
mov
push
jo
aas
add
mov
sarl
je
adc
jbe
pushf
jb
cwtl
clc
and
andb
aaa
int3
xchg
adc
arpl
cmpl
xor
pusha
imul
mov
lods
xchg
jb
xchg
or
dec
xchg
jae
and
adc
push
iret
insb
cmp
or
jecxz
sub
jnp
inc
fcoml
pop
mov
add
cwtl
push
fsin
insb
in
stos
shl
push
mov
leave
and
cli
push
and
push
add
test
pop
imul
aas
xchg
aad
ret
aad
dec
and
cmp
adc
scas
mov
in
cwtl
enter
and
jl
stos
inc
and
xlat
adc
frstor
inc
push
add
xchg
push
jbe
daa
jg
cmp
push
add
arpl
pop
jecxz
jle
stos
mov
out
inc
inc
xor
sub
adc
cld
clc
stos
mov
jae
fsubs
push
push
outsb
jle
mov
je
mov
push
nop
mov
xchg
xor
outsl
add
loope
lahf
sbb
inc
mov
jge
movl
and
jl
add
xor
cmpsl
loope
mov
cmp
rcll
enter
add
je
aaa
adc
cmp
dec
jb
or
shlb
mov
lret
fadds
adc
add
cmc
fidivrl
bound
std
pop
pop
cmpsl
xor
push
fwait
insl
repz
cmp
lea
add
xchg
lret
movsl
xor
push
push
sub
add
inc
sbb
jecxz
sub
cs
adc
adc
and
roll
fstpl
pop
das
or
lods
mov
xchg
inc
dec
pop
fsub
fstl
push
clc
imul
cmc
push
or
outsl
jbe
test
add
cs
in
jle
cmp
mov
add
lret
das
inc
andb
in
std
mov
mov
jg
inc
mov
aam
arpl
mov
mov
aas
mov
cmpsb
pop
loope
mov
jmp
xor
js
arpl
pushl
loop
jb
negb
pop
les
sti
ljmp
adc
ja
jbe
push
mov
pop
xchg
add
or
sbb
add
in
pop
dec
xorb
dec
int
mov
aad
lret
mov
mov
pop
dec
jle
push
jmp
jns
jecxz
out
adc
mov
in
cld
ret
daa
xor
inc
sub
xor
bound
push
mov
lcall
or
cmp
pop
sub
jns
rorl
jno
xlat
add
int
fs
pusha
out
cwtl
lds
das
test
dec
mov
stos
lcall
dec
into
mov
sub
movsl
loopne
lret
pop
and
pop
es
stos
test
fldt
ss
fildll
cmp
loope
flds
jge
cmpsl
cmp
cmpsl
mov
mov
cmpsb
jno
clc
inc
insl
dec
push
aam
xchg
jo
jp
dec
push
push
vmovss
rcr
cmp
adc
push
xchg
shll
push
jno
out
lods
jl
jb
xchg
adc
adc
mov
push
mov
inc
pop
lret
imul
idivl
loop
jl
insl
adc
cmpsb
add
mov
mov
repz
in
inc
cmp
adcl
sub
cmp
into
ror
pop
sti
mov
or
pusha
lahf
mov
inc
xchg
push
sub
shrl
or
or
out
mov
jo
and
daa
cltd
xchg
add
in
shl
sahf
cmc
mov
fbld
cmp
mov
xor
mov
push
xor
cmp
outsb
and
cmp
gs
xor
push
lods
imul
pushf
push
dec
dec
and
pop
sarb
gs
imul
mov
cmp
imul
mov
mov
xchg
jbe
and
pop
rolb
fiadds
and
cwtl
scas
sbb
pop
dec
fdiv
push
push
adc
sbb
rcl
es
sbbb
sahf
les
dec
or
jb
jge
push
jbe
jo
ficoms
and
in
cmpb
push
jno
or
pusha
xor
pop
aas
test
popf
push
fiadds
ret
inc
sahf
and
ss
mov
imul
in
mov
andb
jle
push
sub
pop
adc
ljmp
cmpl
rol
mov
es
jnp
cli
cld
inc
out
and
pop
lods
mov
add
adc
mov
sarb
add
shlb
out
test
push
movsl
scas
scas
add
push
cltd
cmpb
and
xor
test
dec
dec
pop
int3
push
fwait
enter
test
cmpsl
bound
pop
push
hlt
jp
stos
cmp
repnz
mov
pop
mov
fidivl
nop
fsubl
testb
mov
ljmp
push
insl
test
mov
iret
ret
cmp
mov
sbb
jmp
pop
mov
arpl
lods
jmp
sub
pop
ljmp
lret
iret
xor
mov
push
stc
shlb
inc
mov
imul
nop
lret
sbb
and
or
aad
test
ja
mov
jb
and
or
stos
mov
loope
fldcw
or
pop
rcrb
pop
jbe
inc
into
pop
pushf
into
out
outsb
nop
lds
push
mov
inc
lds
inc
aam
inc
mov
mov
mov
loop
lcall
sub
ds
mov
xchg
pop
stos
pop
ss
mov
stos
popa
test
push
rclb
daa
loope
jle
test
rcl
and
adc
dec
mov
loope
cltd
fbstp
push
adc
mov
fisubs
shlb
inc
xorb
dec
dec
jns
push
jae
push
jecxz
sbb
imul
cmpb
mov
cmpsl
adc
js
mov
xchg
test
sub
in
jmp
ja
lock
xor
jge
jnp
ss
inc
int
xor
sbb
rcrb
aas
xchg
pop
lods
les
sub
adcl
mov
xchg
mov
ja
dec
addl
cmp
push
mov
dec
dec
lods
scas
pop
xchg
icebp
pop
push
cmc
pop
sbb
jle
pop
popa
je
js
lock
imul
test
inc
inc
or
xchg
jle
mov
sub
pop
fldcw
daa
push
imul
shll
jl
pop
and
and
cmp
in
sbb
les
orb
popf
je
shl
es
notl
lds
outsl
inc
js
call
jnp
rcl
scas
movsb
insb
mov
mov
movsl
mov
jb
shlb
jns
jnp
cmp
cmp
cmp
xor
and
movsb
jne
jl
mov
xor
test
loope
movsl
mov
inc
mov
and
icebp
dec
popa
xor
fcomi
xchg
add
arpl
xor
xchg
xchg
jnp
xor
dec
mov
outsl
jns
dec
movsl
shrl
outsl
sti
into
xor
xor
cltd
ret
lods
aaa
std
cmp
xor
xchg
sbb
arpl
mov
cmp
scas
cltd
or
rcrl
pop
jae
in
movsb
je
lret
cmp
xchg
cmp
cmp
xchg
imul
out
aam
inc
loope
sub
xchg
pushf
cmp
push
ret
jae
jle
sbb
outsl
pushf
aas
jge
stc
stc
scas
sbb
adc
std
jae
add
pop
mov
lcall
addb
mov
cli
and
test
pop
and
sahf
ss
lahf
cmp
pop
lret
dec
or
idivb
sbb
lret
loope
fstp
clc
fmul
outsl
dec
cmpb
xchg
lods
adc
imul
inc
shl
ja
mov
jmp
movsl
divl
add
jnp
xor
mov
xchg
mov
lret
push
push
sbb
and
jle
fists
in
inc
nop
push
shlb
pop
lods
lcall
mov
lea
lahf
mov
inc
out
cmp
cs
shlb
xor
ljmp
sbb
push
push
xchg
dec
xor
or
and
or
and
in
push
sub
jno
xchg
push
adc
ds
adc
das
hlt
fiaddl
ror
mov
jmp
popa
mov
cs
jmp
xlat
leave
inc
push
movsl
sti
mov
movsl
pop
jecxz
and
xor
sbb
test
sahf
scas
test
pop
arpl
xor
adc
ret
jle
jnp
sarl
scas
add
push
shlb
push
xchg
mov
jmp
cmpl
xchg
enter
push
xor
cli
dec
mov
movsl
test
fmuls
lret
add
in
push
jns
call
pop
movsl
mov
popa
loope
cltd
add
mov
or
dec
pushf
incb
adc
adc
mov
mov
lock
inc
push
push
mov
xlat
out
pop
xchg
loop
rclb
cmpsl
sub
movsl
jge
mov
sbb
or
flds
jbe
mov
sbb
or
sbb
stos
mov
push
leave
aad
stos
stos
cmp
fimull
cmp
xor
out
sub
mov
sbb
mov
and
xor
dec
arpl
ret
mov
testb
fadds
popa
movsl
jne
ja
cmp
jbe
test
dec
xchg
and
js
js
mov
sub
add
iret
testl
push
push
mov
adc
mov
and
fdivl
in
lret
push
adc
fistl
stos
pop
fistps
inc
dec
int
je
cmc
out
cli
call
and
sbb
push
cmpsb
mov
iret
add
and
faddl
add
fcomi
mov
adc
das
les
orl
xchg
cld
xchg
sahf
out
decb
jb
ret
xchg
xor
and
ss
mov
push
or
mov
mov
mov
xor
gs
inc
shrl
ret
add
inc
bound
push
pop
mov
mov
daa
mull
push
fwait
and
add
stos
test
int
mov
insb
xchg
in
call
mov
cwtl
popf
add
inc
pop
fs
movl
push
dec
fxch
lds
push
clc
enter
data16
cmpl
mov
jns
xchg
ret
stos
adc
sbb
xlat
jb
xor
xor
push
and
stc
cmp
mov
out
mov
aam
aam
addr16
cltd
add
sub
cmpsl
movsl
popa
xchg
test
cmp
pop
insb
ja
fwait
adc
xchg
inc
and
inc
mov
nop
xchg
xchg
je
sub
xorl
sub
sbb
or
hlt
pop
mov
sub
test
cmpsl
mov
testl
dec
sti
and
fcmovnbe
rcrb
es
cmp
cmc
mov
xorl
or
add
adc
roll
mov
add
xchg
ja
js
lods
jne
ret
outsl
or
testl
and
mov
fsubrl
pop
movsb
in
sbb
out
sub
lea
sbbb
cltd
imul
lret
jbe
orb
pop
xor
pop
sahf
outsb
add
pop
cli
pushf
les
pop
ss
adc
add
lods
scas
adc
mov
arpl
mov
adc
add
sahf
push
jae
ret
sbb
rcrl
lcall
ss
jg
jne
gs
in
mov
inc
and
fdivrl
mov
cld
push
inc
adc
dec
int
mov
lahf
rorl
rcr
pop
movsl
nop
mov
xchg
jmp
out
xor
in
mov
sbb
and
mov
dec
push
mov
es
xlat
pop
iret
pop
rcll
sub
bound
cld
pop
mov
daa
rcl
sub
lock
or
lods
pop
repnz
cmp
dec
in
mov
adc
add
movsl
es
test
insb
xchg
pushf
leave
sub
sbbl
jb
push
in
jae
pushf
cmp
fcomps
shll
test
add
aas
or
outsb
cli
lea
push
mov
icebp
insb
data16
mov
push
mov
xchg
jl
sbb
fists
sub
gs
rcrl
jbe
in
jno
popa
mov
scas
pushf
inc
cmp
or
es
jmp
xlat
adc
loope
dec
mov
test
movsl
jg
push
popf
shlb
add
pop
test
clc
push
pusha
push
dec
and
lea
mov
and
stos
mov
leave
sub
sbbl
pushf
cli
mov
insb
sub
stos
enter
in
ret
xor
adc
call
repz
pop
sti
push
mov
sbb
cmp
cmpsb
je
sub
scas
jbe
addr16
dec
aaa
vmread
stos
ja
cmp
and
mov
push
xchg
jnp
test
mov
shrl
add
xchg
repz
cli
sahf
int
push
mov
stos
mov
rolb
push
arpl
ret
cwtl
insl
mov
ret
int3
sbb
arpl
imul
arpl
and
xchg
cmp
pop
call
and
xchg
pop
mov
pop
push
pushf
insb
cld
xchg
push
aaa
mov
dec
in
push
dec
sbb
push
nop
inc
mov
sbb
jno
inc
adc
add
sbb
push
xlat
pop
out
das
sarl
lds
mov
rcrl
pop
push
lcall
scas
adc
mov
inc
push
lock
jbe
mov
stos
mov
pusha
sub
outsl
push
cltd
inc
push
lods
sbb
pop
jb
shl
jb
repz
and
cmovge
cmp
push
cmp
xchg
dec
lods
mov
inc
xchg
scas
push
add
pop
pushf
jecxz
xor
pop
lock
in
addr16
adc
mov
or
mov
fistpll
negl
inc
aaa
lahf
sbb
sub
repnz
scas
cltd
andb
out
sti
adc
pop
dec
adc
popf
dec
mov
shll
int
out
icebp
in
data16
cmp
pop
mov
les
adcb
jge
mov
int
test
mov
call
inc
pusha
push
sbb
std
sbb
pop
daa
sub
lahf
jne
push
inc
gs
test
sub
fildl
jno
into
insb
pop
or
adc
mov
mov
pop
add
dec
dec
pop
ret
rolb
adc
or
fdivp
jge
mov
inc
push
ljmp
fstpl
imul
or
bound
xor
pop
rol
loopne
push
addr16
pop
and
aam
sti
xchg
and
rolb
clc
sbb
ret
pop
bound
mov
mov
call
nop
call
sahf
adcb
adc
out
pop
lahf
std
push
fs
ljmp
dec
jp
movsl
hlt
movsb
xlat
clc
inc
push
popf
mov
dec
cli
dec
cmp
pop
jb
jnp
adc
push
pop
gs
outsb
sub
sub
jge
pandn
out
out
mov
xchg
rorl
pusha
inc
jne
shlb
pop
push
push
test
testl
popa
cmpsl
out
sbbl
pop
or
sbb
cmp
lods
out
mov
jae
dec
sahf
sub
mov
jecxz
into
inc
movsl
repz
and
fsub
jge
mov
scas
push
sarl
mov
insl
sbb
xchg
mov
push
and
inc
dec
mov
xchg
es
loopne
popa
in
lcall
push
and
js
inc
sbb
vmwrite
mov
jae
sub
decl
int
sahf
call
jnp
push
imul
mov
jg
jo
roll
fisubs
dec
sbb
mov
in
repnz
in
sub
cmpsb
mov
sub
push
insl
lahf
ret
and
ss
push
sub
sbb
dec
mov
addb
xor
or
lods
out
dec
push
or
out
sub
mov
sarl
jb
push
jbe
leave
shll
daa
dec
lock
sarl
cmpsb
lock
imul
movsl
sbb
test
in
mov
scas
addr16
xchg
out
adc
jg
push
jo
or
xchg
dec
xchg
popf
rcr
xchg
imul
xchg
ljmp
cmp
pop
xlat
negb
xchg
cmpl
or
sbb
cmp
lea
stc
mov
fsub
xorb
imul
pop
fmull
xor
cmp
enter
movsb
and
push
daa
movsl
movsl
pop
cmpsb
sub
mov
ret
out
into
or
cmp
cmovl
adc
cmc
scas
fbld
sbb
scas
xorb
decl
cmc
sbb
xchg
inc
std
out
jmp
repnz
xor
xchg
outsl
mov
and
pusha
bnd
and
mov
orb
adc
sbb
das
adc
mov
lcall
and
gs
cmpsl
hlt
add
aas
cmpsb
add
out
mov
xchg
int3
jp
add
mov
out
xlat
adc
jge
aas
test
fdivrs
cld
sbb
insl
and
mov
aad
adc
test
inc
repz
std
lods
xor
stos
inc
adc
imul
ss
mov
pushf
aas
stos
or
pop
jo
mov
jge
sbb
xor
jle
pop
xorb
xor
aas
add
sub
lods
scas
and
jg
push
cli
insl
xor
pop
lahf
ss
mov
pop
jns
mov
pushf
leave
out
nop
or
loopne
arpl
cmp
fwait
movsb
outsl
jb
push
movsl
add
pop
daa
aaa
call
dec
ja
mov
jg
dec
arpl
lret
mov
push
movsb
cld
lret
inc
push
rcr
decl
rolb
jb
inc
mov
dec
and
dec
xor
nop
jno
fs
test
fnstsw
or
push
pop
stos
leave
outsb
cmpsb
shrb
out
call
xchg
sbb
mov
mov
cli
inc
push
lahf
clc
mov
mov
push
mov
dec
addr16
in
push
xchg
sbb
cwtl
into
in
jbe
hlt
fadds
out
aas
sarl
sbb
mov
sub
aaa
sbb
adc
clc
iret
lock
fisttpl
mov
decb
stos
add
jle
fcoml
fidivl
test
xlat
sbb
push
fwait
pop
jg
mov
sub
push
call
pusha
cmp
push
jge
jle
dec
fmuls
lock
mov
loope
pop
mov
jmp
lods
mov
repz
sti
mov
sub
xor
mov
ja
cs
jbe
repnz
lcall
jo
cmp
mov
and
xor
pusha
push
jl
xchg
dec
xor
push
dec
in
sub
push
sub
jl
mov
gs
fcoml
mov
jg
lods
inc
xor
add
jge
add
push
cmp
sarb
rcl
jmp
adc
jge
loopne
imul
cmpsl
xchg
cld
push
nop
lahf
adc
mov
inc
sbb
inc
sbb
mov
mov
and
lock
dec
cmc
adc
mov
in
pop
nop
ja
je
push
ret
or
popa
mull
popl
int3
cld
das
jns
and
out
repnz
jmp
lock
add
fiaddl
pop
dec
push
insl
jno
addb
jecxz
aaa
sarl
mov
stos
ljmpw
add
arpl
jae
xor
outsb
fwait
stos
mov
nop
lods
loope
push
pop
call
dec
cmp
xor
pop
mov
in
out
cmp
loop
das
mul
popf
jno
ret
pop
int3
in
pusha
fnstenv
dec
and
push
inc
popf
add
push
roll
les
je
ret
mov
icebp
adc
leave
mov
das
sub
mov
push
fistpl
pushf
imul
fdiv
jnp
fs
xor
sbb
out
dec
imul
inc
aas
sti
les
nop
out
sub
push
out
sbb
jg
mov
out
sub
fildll
push
sub
cmpsb
lds
jp
xchg
push
push
fstpt
cmp
add
nop
mov
fistpll
xor
mov
test
mov
pop
mov
aam
push
sub
loop
je
fmuls
fisttps
idivb
sahf
mov
lret
jl
fdiv
jbe
aad
lcall
pusha
mov
pop
scas
dec
bound
mov
lea
xchg
popa
or
sub
and
or
ret
jge
mov
push
int3
rcr
ljmp
or
mov
repz
adc
push
sub
push
and
pop
call
cs
fdiv
ja
int3
ret
dec
shll
rorb
pop
ret
inc
outsl
adc
and
jl
xor
pop
sub
dec
jecxz
mov
dec
mov
addr16
jb
jge
pop
insl
out
mov
xchg
cmp
and
dec
sub
mov
out
jp
sbb
ja
ret
das
and
xor
sub
or
mov
inc
pusha
out
add
sar
out
outsb
sarl
stos
rorb
sub
ret
pop
jnp
int
icebp
fxch
sahf
mov
dec
sub
add
mov
lds
lods
xchg
push
push
lret
cmpsb
mov
mov
and
push
xor
int3
dec
lcall
jne
fstl
out
movsb
mov
ljmp
and
sub
scas
into
or
test
adc
xor
repz
movsl
imul
jg
adc
push
lret
or
lcall
add
dec
xor
mov
or
divl
push
cmp
pushf
push
mov
jp
push
insl
and
subl
and
sti
sbb
jmp
je
call
or
lds
mov
jmp
rcrb
movsl
pushl
mov
push
pop
adc
lods
sub
adc
fisttps
push
divb
ds
cmp
xchg
fstps
xor
gs
sub
pushf
imul
mov
add
xor
lahf
imul
mov
fisubs
lcall
jne
mov
lret
inc
pushf
xchg
sbb
or
in
arpl
ror
or
shll
rcrl
sub
fs
xchg
mov
ljmp
xor
je
mov
xchg
roll
bound
cmp
aaa
cmp
ss
pop
sbb
jns
cld
lods
dec
in
mov
inc
mov
sbb
push
push
scas
icebp
call
ret
les
clc
add
aas
adc
decb
and
notl
xlat
push
sahf
sbb
stos
mov
mov
pop
test
hlt
cmp
push
mov
sbb
fisubrl
xchg
inc
xchg
scas
ret
push
cld
push
cmp
inc
subl
hlt
imul
ja
add
scas
add
call
and
mov
jge
pop
sti
loop
push
imul
imul
add
into
aaa
cmp
cmp
mov
sbb
fwait
mov
sbb
in
xchg
test
jmp
pop
push
mov
out
fcomp
rclb
repnz
adc
and
cld
adc
enter
sub
ljmp
mov
push
sub
les
in
cmp
dec
cs
mov
stc
icebp
xor
dec
mov
mov
sbb
pop
mov
dec
mov
cltd
out
xchg
aad
mulb
je
fstpt
outsl
popf
repz
bound
sub
lds
pop
cmp
jae
sarl
cmp
and
inc
jae
push
sahf
scas
out
pop
fisttps
and
pop
jns
fldenv
or
dec
mov
and
aas
lock
push
sbb
sub
jbe
xor
mov
test
stos
jno
js
jle
into
adc
imul
pop
roll
jp
stos
loope
insb
adcb
test
lock
addr16
dec
mov
lahf
movsb
cli
jb
das
aad
xor
sub
in
btr
imul
data16
jbe
cwtl
dec
scas
fcoml
dec
sub
mov
lahf
fistps
dec
hlt
adc
mov
and
mov
jp
data16
std
cmp
or
sti
lret
mov
rol
adc
inc
pop
inc
dec
aas
jns
pop
xor
hlt
faddl
ljmp
scas
mov
jno
add
or
push
adc
xchg
adcl
test
sub
int3
mov
shl
gs
cmpsb
xor
es
mov
outsb
xchg
pop
fisubrl
ret
sbb
adc
jnp
es
cld
mov
fcmovne
or
rcl
in
mov
jb
pop
lret
jo
and
dec
mov
lock
xor
xchg
fs
jge
mov
shlb
outsb
xor
sbb
push
cmp
lret
call
or
cmp
add
std
fwait
push
std
sbb
sub
loop
adc
mov
out
add
pusha
lahf
mov
cli
sub
sbb
aaa
and
icebp
mov
sub
mov
daa
sub
inc
fists
cli
cli
pop
stos
or
sub
leave
mov
adc
fsqrt
in
addr16
fwait
adc
pop
js
fcmovne
fwait
std
jp
mov
jo
pop
in
sbb
jecxz
dec
push
sbb
jno
mov
cmp
push
jne
mov
ret
repz
xor
and
xchg
adc
ljmp
mov
iret
add
jb
aad
lods
or
sbb
sub
sub
fsubp
sub
xor
repz
xchg
out
mov
cli
andb
sbb
and
les
popf
sbbl
arpl
jns
int3
nop
and
mov
lock
pop
cmp
getsec
into
int3
or
mov
lret
xchg
sub
rolb
add
xor
sti
dec
lret
cmp
cld
mov
cmpl
pop
mov
inc
push
sbbl
pop
pop
loop
xchg
push
push
clc
idiv
sub
cmp
orb
rcrb
add
adc
repnz
rcll
aas
lret
adc
je
aaa
or
je
mov
testl
mov
addb
cs
out
hlt
jns
insb
mov
fwait
popf
and
dec
jmp
fisttps
sti
inc
push
gs
dec
iret
stos
iret
xchg
cmp
sub
xlat
adc
aas
aam
xlat
rorl
psubusb
xor
mov
out
out
xor
xorl
in
xchg
pop
add
or
lret
or
ds
and
rcrl
int
popa
ja
ret
xor
mov
fnstcw
mov
mov
mov
pop
lods
mov
mov
cmpsl
add
pop
dec
sar
push
xchg
and
mov
loop
inc
out
lahf
iret
repz
testl
pop
iret
fwait
and
xor
lret
sahf
sbb
jbe
in
negb
mov
pop
sarb
dec
test
adc
xchg
pop
sbb
push
je
push
jecxz
fistpll
das
das
add
jmp
xor
lret
pushf
test
daa
lret
out
add
fisttps
enter
inc
cltd
or
mov
js
fbstp
jge
pop
jl
fwait
pop
in
sub
outsb
pushf
push
test
mov
mov
jge
js
cld
adc
mov
fbld
sbb
roll
rorl
push
add
pop
jecxz
daa
sti
pop
clc
cmp
xor
or
xchg
sub
sarb
iret
insb
jp
inc
sub
js
jnp
dec
stos
cmpsb
mov
cmp
mov
fistpl
cmp
test
pop
mov
lcall
sbb
gs
das
fiaddl
cmp
std
jbe
bound
data16
popa
lds
jnp
lcall
stos
jmp
test
jle
aaa
iret
cmp
pop
repnz
div
mov
insb
lcall
mov
sbb
lods
enter
mov
sarb
dec
mov
jns
dec
cltd
repz
out
or
fstps
push
inc
test
push
adc
clc
mov
mov
imul
mov
xchg
inc
clc
int3
loop
test
xchg
and
subps
imul
push
lods
pop
shl
negl
mov
imul
lcall
push
lds
pop
rcrb
pop
cwtl
out
in
incl
push
clc
mov
mov
pop
out
fidivl
clc
mov
outsb
mul
rcrb
orb
fabs
out
shll
in
mov
sub
shrb
push
push
loop
pop
adcl
js
mov
sbb
push
jmp
add
fsubrs
cmp
inc
dec
fstpt
data16
push
cmpsb
shlb
es
in
add
daa
bnd
xchg
popa
cwtl
jns
xchg
mov
fdiv
mov
add
and
lock
rclb
imul
sbbb
mov
fdivrl
imul
mov
shr
sti
insl
mov
stos
fs
addl
scas
mov
daa
and
jg
jae
fmul
repz
dec
mov
stos
jl
insb
lret
cwtl
dec
sbb
scas
jo
sub
jo
popf
imul
push
jno
xor
lods
xor
addr16
sbb
dec
lods
lahf
xlat
ficomps
fidivrs
insl
into
cmp
jae
cmpsb
cmpl
sahf
test
jbe
out
leave
sbb
xor
arpl
push
inc
arpl
jns
and
mov
add
pop
fisubl
cmpsb
test
cli
fisubrs
xchg
jb
scas
mov
mov
out
das
cmpsb
inc
in
shrl
sbb
mov
cmpl
push
aaa
mov
cli
out
mov
jno
inc
out
or
cmpsl
mov
pushf
popf
sub
sbb
sbb
dec
add
das
mov
popf
cmp
push
jno
stos
mov
popa
inc
xchg
lock
iret
jmp
imul
mov
jge
add
mov
ffree
mov
into
mov
mov
or
cmp
sbb
pop
lret
mov
jnp
sti
stos
xchg
leave
mov
pop
bound
ss
fwait
mov
push
inc
sub
pop
imul
out
test
and
mov
sub
scas
shrb
or
pop
mov
sahf
popf
pop
add
sbb
ljmp
rcr
lret
pop
mov
std
xor
insb
mov
jmp
inc
xchg
test
push
inc
adc
mov
mov
adc
jle
sbb
lret
add
sub
mov
mov
cli
xchg
repnz
jg
notb
jge
je
jl
addr16
or
mov
out
enter
sbb
mov
adc
lea
pop
xchg
insb
pop
and
sub
mov
mov
cmp
out
pop
push
inc
fcmovnu
into
test
das
fidivrs
mov
es
and
ss
xor
leave
cmp
xor
mov
push
xchg
ret
bnd
sub
sbb
cmp
mov
sub
adc
mov
imul
cmp
outsb
adc
pop
xor
pop
dec
sbb
adc
out
sarb
sbb
dec
outsb
rcrb
sbb
mov
negb
bound
dec
cwtl
movsl
or
adc
xchg
ljmp
push
jle,pn
stos
dec
mov
inc
sbb
lods
jo
loope
lret
sub
in
cwtl
dec
push
xor
stos
jmp
sub
stos
and
addr16
jne
data16
sub
sbb
add
fcmove
fisubl
out
or
jle
add
out
mov
inc
jp
jl
jmp
xchg
push
mov
add
jne
dec
cli
fdivrs
mov
pop
and
xor
addr16
fdivs
pop
lods
add
mov
dec
mov
out
xchg
lcall
xchg
loope
fcmovb
mov
xchg
inc
out
mov
in
or
scas
sti
and
test
nop
leave
sbb
jecxz
mov
das
sub
sub
cs
mov
inc
xor
movsb
adc
into
mov
rcll
imul
inc
insb
je
add
jno
jnp
out
inc
inc
jmp
in
mov
leave
dec
mov
test
addr16
xor
mov
fisttps
inc
bound
jge
mov
push
xchg
push
insb
pop
aad
int3
mov
dec
pop
sar
fst
xchg
in
pop
movsl
out
dec
jmp
inc
inc
mov
ss
ss
std
testb
stos
push
mov
movsb
jb
ds
xor
jp
or
sarl
push
scas
push
cwtl
mov
lret
aaa
in
imul
popa
xor
lods
mov
clc
sub
fldt
xchg
or
xchg
inc
cmp
fdiv
push
pop
sbb
pop
test
push
cvtps2pd
push
xchg
and
sbb
xlat
repz
daa
ret
filds
jns
xlat
in
sub
cli
dec
lcall
movsl
scas
sbb
inc
xchg
movsb
mov
mov
test
lock
popf
cld
mov
fs
out
ficoms
xor
out
and
xor
pop
fildl
sub
mov
or
in
jnp
cltd
jb
mov
mov
cwtl
mov
mov
and
ficoms
adc
inc
les
and
sbb
jecxz
sub
jb
dec
inc
mov
dec
push
adc
adc
in
xlat
mov
push
mov
mov
in
fists
aad
jne
mov
in
add
add
sub
js
in
in
push
dec
sbb
inc
or
scas
sub
inc
xchg
in
add
cmp
pop
xchg
fcoml
lret
mov
lods
xchg
pop
jnp
xchg
xor
mov
push
add
ficomps
fists
in
and
xchg
add
pusha
sti
insl
mov
lcall
and
pop
push
jl
fistl
test
pushf
movsb
mov
leave
inc
fnstsw
xor
stos
mov
push
ja
dec
sub
icebp
pushf
mov
cli
cli
int3
and
out
iret
test
jmp
xchg
sub
and
bound
aaa
and
jae
shl
fistps
xor
pop
repnz
cmp
push
int3
ret
mov
mov
es
xchg
das
adc
dec
ljmp
jne
pop
hlt
adc
leave
xor
sub
cwtl
fwait
loop
push
and
stos
popa
dec
rcr
jae
lock
dec
int3
xchg
sub
and
mov
xor
lea
inc
inc
dec
popf
pop
cltd
mov
mov
jmp
enter
or
fistps
or
mov
xchg
push
orl
lods
push
jecxz
sub
fidivrs
jbe
jne
int
mov
lea
cmp
inc
aam
test
clc
dec
xor
cld
cmp
dec
dec
aaa
jmp
ss
mov
and
jge
adc
xchg
or
stos
xor
je
push
xlat
mov
jecxz
dec
dec
xchg
adc
or
sub
push
mov
loopne
mov
hlt
mov
loopne
inc
sub
jno
hlt
jg
cmc
or
xor
bound
insl
fsubrl
mov
push
push
gs
shll
push
pop
push
dec
xchg
push
jnp
shlb
daa
and
stos
xorl
mov
jo
adc
out
test
mov
lret
lahf
push
mov
scas
adc
insb
or
mov
dec
daa
xor
and
mov
mov
das
inc
xor
iret
mov
cwtl
cmpb
push
sub
jo
dec
lods
fdivl
mov
inc
cmp
lret
mov
mov
cmpl
mov
lea
xchg
clc
es
and
push
add
stc
loop
mov
filds
test
mov
int
rcrb
push
cwtl
pop
jl
mov
mov
push
xor
pusha
paddsw
movsl
in
out
adc
jmp
xchg
push
ret
loop
mov
mov
sbb
out
jecxz
cmp
rcrl
mov
les
call
sbb
das
adc
test
xor
jb
sbb
and
cmpsl
adcl
and
ss
mov
test
mov
lcall
cmpsl
lret
cmp
insb
sarb
test
push
inc
repz
jge
mov
add
jae
je
jo
sub
stos
rol
inc
or
imul
mov
jp
lahf
dec
add
das
or
mov
fstps
sub
repnz
cld
shlb
and
aad
cmc
add
aam
pop
bound
sbb
imull
out
das
inc
push
adc
mov
push
fldlg2
testl
cltd
mov
test
dec
add
xchg
cld
mov
fidivl
ds
xchg
mov
pop
in
mov
sbb
mov
sbb
js
jnp
jno
lods
cs
out
arpl
xchg
xor
xchg
and
stc
js
outsl
movsb
and
fbld
stos
mov
bsf
mov
in
mov
cmp
cli
mov
xchg
inc
pop
xchg
stos
sbb
cs
sti
and
mov
in
pop
mov
in
jge
out
loopne
or
jae
sub
mov
fsubl
gs
into
repz
addr16
xor
rolb
daa
cltd
out
int3
push
sbb
scas
inc
orb
int
inc
inc
test
fwait
add
ret
pop
imul
movsb
xlat
mov
jb
xchg
xor
adc
cltd
inc
sub
fcomi
insl
jmp
addr16
and
cmp
push
mov
lea
inc
test
adc
pusha
int
mov
push
popa
sub
jne
dec
lcall
cmp
cld
pop
adc
inc
movsb
lcall
dec
jnp
xor
lea
mov
outsl
or
dec
std
mov
insb
jo
in
inc
or
sub
in
mov
adc
in
jb
pop
jae
mov
mov
movsb
addr16
test
sub
jae
roll
dec
ja
sbb
or
pop
lcall
das
rcrb
inc
repz
pop
mov
or
pop
stc
xchg
cmpsl
out
movsb
adc
xchg
push
push
push
dec
sti
adc
scas
cwtl
cs
cmp
ficoml
ljmp
jnp
loopne
xchg
test
stos
fnstsw
xor
mov
and
cwtl
sbb
push
fistpll
inc
mov
lea
lods
mov
jo
in
sahf
or
and
or
pop
or
adc
or
mov
sbb
sub
outsb
pop
cmp
xor
aaa
adc
in
cltd
inc
or
cli
test
ss
shll
test
into
push
ljmp
xchg
repnz
push
lret
jne
sub
xor
pop
cmc
sub
add
xor
adc
in
jecxz
ret
orl
jecxz
fldt
loop
and
sub
or
or
sub
cmp
push
mov
adc
outsl
mov
test
fwait
mov
pop
addr16
jne
sahf
push
mov
pop
pop
pop
mov
adc
shl
push
mov
and
cld
xchg
ja
jo
ss
pop
loope
loope
mov
mov
cmpsl
push
js
cmp
pop
stos
sbb
or
mov
mov
adc
xor
cmp
jp
jmp
inc
pop
movsl
and
jg,pt
push
lds
in
mov
imul
cld
push
xor
daa
es
mov
loopne
test
push
pop
test
pop
mov
pop
movsb
or
test
jle
orl
subl
outsl
aaa
daa
jecxz
es
adc
outsl
push
pop
pop
jns
in
push
ret
sbb
adcl
sbbb
inc
lea
dec
lea
inc
cli
stos
shrb
shrb
mov
scas
pushl
shl
adc
mov
lods
jbe
rclb
pusha
and
mov
movsb
into
ss
push
dec
cli
push
xchg
daa
movsb
pop
inc
test
pop
and
leave
cmc
add
xchg
pop
xor
add
xchg
sbb
scas
cmp
mov
lret
xor
call
loopne
xor
push
pop
or
xchg
ret
xor
es
mov
daa
and
ss
sub
test
cmp
push
repz
jp
call
xor
lods
adc
in
mov
sbb
in
sub
loop
mov
dec
sbb
jne
sti
enter
mov
adc
add
adc
mov
xchg
add
mov
aaa
mov
push
sbb
push
lcall
ja
xor
mov
js
mov
pop
cli
jge
push
xor
enter
sub
cmp
pop
aaa
sbb
push
call
cltd
popa
scas
mov
push
das
push
xchg
mov
pop
mov
jnp
cli
pop
sbb
pop
xchg
lds
pop
sbb
xchg
xor
mov
dec
push
fs
xchg
orb
test
lods
xchg
les
out
enter
push
push
push
int
jle
dec
adc
pop
sahf
jnp
je,pt
push
outsl
fsubs
sbb
inc
xchg
sbbl
add
cwtl
cltd
mov
insb
push
or
sbb
addr16
jecxz
xchg
lret
push
popf
std
test
fadd
addr16
ffreep
add
jle
dec
xor
pop
mov
add
and
xor
in
jns
pop
mov
xor
push
aaa
sbb
mov
jns
not
push
in
pop
push
ds
add
lock
mov
xchg
xchg
cmpsb
rcpps
jo
mov
cli
inc
inc
stos
test
gs
cmpsb
cmp
inc
inc
pop
add
or
dec
inc
jno
add
aam
xchg
xor
rcrl
je
mov
sub
fucomp
pop
dec
inc
sub
sahf
hlt
repnz
fsts
sub
inc
push
dec
aam
cmpsb
mov
xor
or
mov
adc
inc
rorb
mov
aaa
push
mov
push
and
jae
std
push
fldt
sub
xor
inc
adc
cmp
pusha
adc
xchg
je
inc
ljmp
xor
push
paddd
xchg
push
xchg
mov
fistps
push
shlb
test
cld
dec
adc
cmp
leave
jecxz
pop
hlt
inc
xor
test
mov
mov
repz
adc
mov
add
ss
pusha
and
sub
cmp
stos
xchg
repz
in
and
ret
adc
inc
jne
mov
mov
lock
imul
jp
xor
lds
sub
movsl
enter
lcall
test
dec
aam
cmp
enter
sub
test
popf
ja
lock
repnz
pop
cmc
mov
pusha
ror
sub
loop
iret
sarb
shl
aad
ds
sbbl
sar
xchg
push
ret
cmp
mov
setae
scas
arpl
out
dec
cmpsl
jne
fldenv
bound
mov
or
mov
xor
je
cld
je
int
les
incl
pop
lret
mov
outsl
aas
sbb
mov
daa
aaa
rorb
xlat
test
add
or
adc
pop
pop
cmpsl
mov
xorl
xor
xorb
imul
imul
add
jno
inc
xchg
or
cmp
and
pop
aad
fldl2t
testb
dec
dec
adc
test
mov
push
push
or
dec
mov
mov
cmp
push
ljmp
ja
sti
xchg
mov
loop
mov
mov
inc
jb
and
jb
aad
in
cltd
xchg
pop
add
loopne
cmpsb
sbb
pop
enter
or
fcoms
jo
xchg
in
mov
and
mov
mov
in
inc
push
add
subl
push
sbb
nop
jmp
mov
arpl
xor
mov
cwtl
add
movsl
mov
push
lret
pop
adc
das
daa
xor
repz
push
push
adc
jl
loope
add
mov
inc
imul
push
idiv
adc
out
nop
fmull
addr16
cmp
scas
jl
inc
out
stc
sbb
jp
push
mov
jbe
jl
xor
popa
push
inc
bound
shr
add
idivl
aaa
cltd
popf
pushf
shll
in
insb
clc
aaa
jecxz
mov
sbb
adc
in
jg
inc
mov
inc
and
dec
mov
cmp
inc
mov
sti
jns
pop
mov
dec
aas
sub
mov
insb
jl
jmp
mov
fwait
scas
push
imul
iret
or
popf
scas
or
clc
in
xchg
inc
mov
xchg
add
sub
adc
sahf
lret
or
sbb
or
push
fnstcw
movsl
mov
pop
xor
mov
xor
mov
sbbl
xor
outsl
add
aam
jge
mov
addb
enter
insl
aaa
jg
xchg
cmp
jge
xor
mov
or
loope
adc
clc
sub
aaa
pop
mov
xor
cwtl
adc
outsl
je
pop
mov
mov
pop
inc
clc
cmp
pop
xchg
inc
xor
cld
cmp
pop
mov
mov
dec
loope
dec
mov
or
sub
mov
xchg
adc
inc
mov
es
mov
push
inc
scas
pop
in
or
movsb
push
mov
cmp
out
jo
cmpsb
jmp
jne
xchg
inc
sub
pop
in
and
dec
dec
test
inc
xchg
mov
or
mov
inc
mov
frstor
shll
clc
js
adc
inc
mov
inc
aas
mov
lods
dec
jecxz
mov
repz
jmp
fcompl
test
xor
lahf
lret
insl
mov
dec
and
ret
fistpll
xchg
dec
gs
dec
mov
inc
jge
iret
jae
in
into
pop
cli
jge
add
xchg
push
pop
imulb
stos
mov
dec
mov
rorl
roll
and
jg
sub
adcb
add
pop
jo
leave
xchg
sti
aaa
icebp
or
lcall
js
aad
in
sub
xchg
mov
xchg
inc
sub
aaa
add
pop
cli
or
pop
sbb
inc
movsb
cmp
xchg
mov
mov
movl
or
push
lcall
fsubs
dec
jl
xor
out
ret
cltd
repnz
in
loope
xor
lock
sub
or
pop
arpl
ss
dec
ds
cs
mov
mov
daa
pusha
jbe
jbe
jge
aam
in
mov
push
jae
in
mov
sub
inc
out
add
mov
int
jns
sbbl
push
popf
push
inc
push
lahf
dec
sub
push
pop
in
pushl
ret
push
dec
daa
jmp
pop
jge
aad
dec
adcb
int
xchg
clc
cwtl
iret
xor
mov
push
adc
arpl
cmpsl
scas
and
loopne
rcrl
jbe
out
mov
push
int
xor
sarl
popf
add
xor
popa
jge
mov
into
mov
lock
inc
fstpt
mov
ljmp
or
sub
push
dec
lret
mov
mov
mov
fs
push
inc
jae
sbb
mov
movsb
sub
cmp
or
les
enter
call
adc
inc
xchg
jns
xor
push
jo
cmp
mov
fsubs
into
aad
in
and
lds
xchg
inc
dec
jo
lock
xchg
stos
xchg
hlt
inc
adc
inc
bound
lods
ds
sub
fmuls
iret
sti
test
es
jle
add
into
mov
xchg
xlat
xchg
lock
pop
sahf
dec
nop
xor
fwait
cmp
test
test
xchg
lods
mov
push
nop
cmpps
rcrb
mov
sub
dec
xor
pop
pop
jl
outsb
sbb
jl
pop
icebp
xor
ss
xchg
xor
in
add
add
stc
mov
aad
outsl
mov
daa
movsl
cmp
scas
leave
test
pop
mov
sbb
cmc
cmpsb
mov
sbb
sub
xchg
sbb
push
mov
fisubrs
mov
pop
stc
aam
xchg
movsb
cmp
and
shl
movsl
sub
arpl
mov
loop
xlat
cmp
pop
insl
mov
scas
and
clc
loop
ficoms
mov
cmpl
test
pop
xor
call
mov
cmpsl
ss
mov
cmp
lock
pusha
cltd
cld
mov
push
sub
and
lret
fsts
scas
enter
roll
xchg
in
or
ret
loope
pop
pop
jo
mov
sub
orl
into
insl
fists
add
out
in
mov
into
cwtd
mov
xchg
adc
pop
xlat
mov
das
inc
arpl
inc
test
mov
inc
mov
or
sbb
rdpmc
clc
xor
ss
adc
add
sub
cmp
inc
xor
je
mov
or
lcall
clc
testb
jb
xchg
xchg
pop
lahf
cltd
call
mov
hlt
loope
pop
lods
xor
pop
popa
mov
mov
adc
aad
insl
adc
outsl
jb
lahf
pop
adc
push
sbb
jns
sub
cmpsb
push
lods
mov
push
out
mov
inc
mov
fidivrs
push
mov
int3
lock
pop
lds
nop
call
mov
pop
or
mov
js
inc
shr
xchg
ds
repz
mov
inc
cwtl
sub
rolb
clc
stos
or
jo
mov
xor
push
push
add
aam
cmpsl
pushl
mov
out
aad
xor
mov
jge
fnstenv
loopne
in
jno
jl
test
sub
add
mov
lret
lahf
mov
push
push
pop
cwtl
jecxz
xor
mov
mov
xor
fnstsw
sarl
adc
insb
add
or
lock
jno
rclb
sub
mov
or
dec
sub
aad
imul
into
arpl
mov
sbb
fs
cltd
dec
sub
xchg
std
in
push
jl
popf
icebp
cltd
cmp
das
add
dec
ljmp
push
out
mov
mov
xlat
pushf
gs
imul
aaa
mov
les
lea
xor
mov
pop
jnp
fisubl
inc
cmp
clc
and
or
into
add
cmp
cmp
ljmp
xor
cmp
xchg
lock
out
sbb
cmp
xor
out
in
push
jo
data16
leave
and
mov
mov
ret
xor
mov
sub
enter
loop
dec
push
fs
pop
lret
push
inc
xor
lcall
pop
and
xchg
push
popa
cli
mov
lea
gs
aas
pop
mov
add
jo
fsubl
iret
or
sbb
cltd
sbb
cmp
cltd
mov
lock
flds
and
dec
lea
xor
and
push
in
aaa
cmpsb
stos
neg
cmpl
js
rcll
adc
out
lret
add
test
outsl
lea
imul
inc
push
fstpt
js
ds
jno
and
or
xor
push
out
mov
out
jns
call
pop
pop
test
scas
dec
outsl
insl
imul
sarl
cltd
sbb
in
push
test
test
fwait
xor
sbb
lahf
add
sbb
mov
xchg
or
xor
push
fldenv
out
pop
out
outsb
inc
mov
cmovbe
ret
sbb
lret
or
scas
mov
xchg
movsb
inc
jb
pop
stos
dec
dec
push
pop
mov
fistl
push
sbb
outsl
stos
mov
inc
ss
movsl
lea
adc
je
call
push
out
sub
push
xor
inc
insb
mov
fiaddl
sub
dec
mov
shlb
xchg
out
jecxz
and
lcall
ficoms
jb
sub
jb
inc
insl
in
pop
and
pop
add
sbb
or
jb
mov
rolb
outsb
stos
mov
fs
jmp
gs
mov
bound
xchg
std
inc
xor
das
mov
paddusb
shrl
push
mov
xor
cmp
shrl
xor
or
into
stos
adc
arpl
lods
sub
jbe
mov
popf
out
add
cltd
shlb
jp
jnp
add
mov
cmpsl
shlb
cmc
leave
mov
and
pop
decb
add
addl
adc
icebp
pusha
loop
lods
out
movhps
les
fwait
mov
out
enter
cmpsl
mov
cs
pop
inc
mov
xchg
pop
daa
push
mov
mull
or
aad
rcrl
mov
lds
pop
jp
jne
out
pop
cmpsl
test
xchg
jge
cmp
push
xor
adc
je
outsb
scas
adc
sbb
in
xchg
mov
xchg
cmpsl
inc
out
cmpsb
fstp
rorl
jge
lds
mov
imul
fsubl
mov
cmovge
push
fisubs
fmulp
repnz
sbb
mov
out
lock
pop
and
cmp
fwait
mov
jae
push
pushf
mov
xchg
push
push
xchg
ds
inc
cwtl
pop
mov
mov
scas
push
or
sub
mov
aaa
js
push
rolb
dec
push
mov
ja
fbstp
in
in
movsl
sbb
sti
jae
pop
jmp
add
cmp
cltd
lds
mov
sub
in
fdivl
push
mov
and
mov
imul
stos
shll
ss
sbb
jmp
push
in
jns
sbb
mov
lods
fldenv
loopne
mov
jo
xchg
push
jno
inc
test
mov
xchg
add
or
pop
adc
fcomps
out
xchg
out
mov
mov
jne
and
shll
mov
lds
xor
inc
jmp
mov
jbe
push
xlat
stos
stos
xor
stc
mov
xchg
sub
insb
popa
push
xchg
push
ror
scas
fisubrl
ret
jne
fiaddl
mov
mov
shl
imull
jae
in
fisubrl
mov
inc
gs
outsb
movsb
mov
sub
test
pushf
jmp
shr
cmp
pop
sbb
clc
rorl
imul
xchg
ds
in
mov
and
out
xchg
loope
mov
adc
mov
push
mov
cmp
jns
inc
and
dec
sub
adc
pop
mov
das
push
xor
popf
in
in
daa
mov
xchg
push
and
xor
or
xor
cmp
pop
add
inc
jle
mov
jae
xchg
pcmpeqb
jg
jo
pop
xchg
fists
adc
nop
sbb
fwait
pushf
mov
mov
fcmovne
sbb
inc
faddl
inc
pusha
lcall
mov
inc
cmp
aad
sbb
cmp
cmpsb
push
js
and
loop
aam
fnstenv
jp
cli
outsb
cmp
shll
lods
pop
cmp
test
xor
mov
hlt
hlt
cmp
iret
mov
or
pop
push
lret
in
popf
or
sahf
ror
mov
movsb
mov
inc
sbb
xor
adc
cwtl
sbb
pop
mov
inc
or
lahf
inc
mov
sti
test
imull
ret
xor
mov
int
in
mov
jecxz
in
movsb
loope
adc
push
sbb
sub
int3
mov
sub
test
ret
out
les
push
and
sbb
push
insl
inc
lahf
xchg
push
aas
mov
xchg
xor
test
or
iret
xor
mov
jnp
sub
in
mov
add
scas
mov
jecxz
sub
push
inc
or
push
jmp
aam
mov
mov
testl
mov
movsb
dec
stos
stos
cmp
mov
xchg
orb
stos
sbb
sbb
mov
pop
mov
cmp
les
imul
sbb
mov
fsubp
imul
fisubl
popa
push
xchg
jp
subb
rol
push
sbb
cltd
and
shl
int
mov
out
xor
outsl
xchg
jnp
nop
sbb
or
push
inc
repnz
hlt
adcb
add
jl
mov
pop
fcom
mov
fwait
cltd
jns
loope
or
jecxz
stc
mov
mov
jle
fstps
jb
jmp
jmp
pop
mov
icebp
cmp
mov
mov
jmp
add
jo
mov
mov
push
adc
loop
mov
cmp
faddl
add
sub
inc
or
jns
es
jne
pop
mov
push
ds
inc
push
fcomi
dec
xchg
loopne
stos
shlb
mov
js
jns
aad
add
adc
jae
movl
xchg
aam
lahf
mov
loop
push
idivb
xor
push
push
in
push
test
aam
lret
int
jl
mov
lcall
xor
xchg
fdivs
mov
and
stc
imul
js
loop
repnz
es
lcall
xchg
repnz
and
add
xlat
lods
or
jo
jle
dec
jne
inc
in
xchg
xlat
cmp
add
xchg
fisttps
or
lahf
jg
test
es
jae
rol
jb
leave
lods
loopne
push
mov
hlt
lret
mov
leave
imul
cmp
inc
fisubs
pop
add
jg
je
sub
loop
lods
pop
fadd
add
in
cmp
lret
mov
unpckhps
xlat
add
adc
scas
push
decl
ret
adc
sbb
int3
and
xchg
dec
clc
mov
push
dec
pop
and
mov
dec
ds
lods
test
adc
fs
rcr
loope
inc
lea
cmp
clc
test
lcall
out
push
xor
enter
cmp
xchg
mov
pop
je
lret
jl
clc
shll
int3
and
mov
pop
outsb
fs
shll
rcrl
cmpl
xor
lea
mov
xor
call
addl
mov
adc
jp
dec
xor
jbe
mov
cmp
adc
jbe
icebp
push
out
push
mov
shlb
in
cmp
or
and
lret
aas
cltd
insl
cltd
pop
iret
jl
inc
cwtl
loopne
cli
ljmp
sarb
dec
fs
xor
jns
subb
outsl
pop
cwtl
push
push
inc
cmp
add
pop
fs
mov
add
insb
les
dec
or
ja
pop
cmp
xor
mov
shlb
lret
out
lds
pushl
mov
sbb
sahf
adc
decl
arpl
pusha
mov
int
xor
and
xchg
mov
push
and
xor
cmpsl
lret
or
sbb
arpl
or
out
push
rcll
jnp
mov
mov
imul
inc
adc
es
xor
jns
fildll
add
jecxz
out
xorb
scas
adc
leave
aad
inc
notl
push
jbe
fimull
dec
notl
aam
jo
push
ficompl
aam
cmpsl
test
test
xor
xchg
lock
push
or
into
xchg
cmp
sub
and
stos
lahf
xchg
stos
mov
dec
lret
mov
xor
test
dec
dec
lock
hlt
and
push
cld
mov
pushf
pop
in
arpl
xchg
fwait
xor
inc
cmp
aas
inc
xchg
aam
sahf
push
jns
sarl
sub
cmp
gs
or
out
pop
das
inc
clc
out
aam
shlb
pushf
cmpsl
xchg
ja
mov
movsb
xor
xor
ja
push
cmp
dec
lods
or
and
mov
sbb
sbb
fldcw
cmp
mulb
push
fcomps
cmp
sbb
jg
fstpl
inc
adc
pop
jge
fucomi
out
xchg
sub
int
add
pusha
adc
rolb
sbb
je
jbe
in
popa
dec
inc
ficompl
ret
add
mov
sbb
cmpsl
repnz
lods
push
test
lret
enter
pop
aad
cs
pop
add
xchg
jns
hlt
push
fwait
sbbb
les
dec
dec
sbb
adc
mov
mov
mov
add
xor
jo
lea
dec
xchg
pop
push
cmpb
and
addl
add
dec
ljmp
pop
and
mov
incl
roll
cmp
ja
cmp
add
sbbb
xchg
lret
rcll
and
pop
lahf
xchg
mov
insb
and
push
push
scas
cmp
and
fidivs
mov
pop
and
adc
inc
push
mov
std
iret
mov
das
dec
shlb
insb
and
out
jg
mov
aaa
push
das
dec
decb
mov
sahf
es
loopne
setbe
pop
repz
or
hlt
ja
sarb
add
cs
xchg
iret
dec
test
mov
arpl
cltd
les
lcall
test
sub
pop
xor
lock
bound
xchg
fs
jmp
inc
fnstcw
add
mov
or
popa
lds
jmp
xorl
push
cwtl
fiadds
jp
in
loopne
aam
mov
dec
cmp
pop
push
mov
gs
push
mov
popf
dec
les
dec
jbe
leave
xchg
add
outsb
icebp
push
jle
out
ja
jl
fldenv
daa
cmp
lret
and
cld
xchg
push
jns
mov
xlat
insl
cmp
mulb
js
gs
repnz
add
or
cli
adc
sbb
ljmp
mov
jmp
dec
outsl
jecxz
xor
dec
xchg
imul
xchg
daa
je
or
add
sbb
sbb
xchg
scas
add
mov
jb
adc
sbb
ds
in
pop
in
push
mov
cmp
lock
sbb
stos
sub
mov
pop
jg
iret
sbb
sti
inc
test
jae
lock
xchg
and
gs
xchg
xchg
fisubrl
cmp
lock
pop
dec
jno
mov
or
cmp
je,pt
hlt
stc
fdivr
push
addr16
idivb
aam
into
insb
lret
sub
hlt
icebp
add
fs
jl
mov
or
addr16
imul
sbb
fmulp
leave
push
fisubrl
mov
mov
mov
push
jecxz
or
call
ljmp
rcrl
sar
test
mov
imul
stos
mov
fdivrs
add
lock
pop
xchg
outsb
pop
outsb
imul
add
xchg
cld
xchg
mov
add
outsb
into
lcall
jns
je
cs
push
pop
dec
sub
add
fistps
add
sub
sub
jecxz
add
xchg
xor
jp
cmpsl
pushf
push
ficompl
add
jnp
idivl
xor
dec
inc
into
outsl
fwait
xchg
mov
mov
jae
push
sub
shrb
xor
shll
push
lret
xchg
pop
test
push
jae
mov
int3
xchg
xlat
mov
cwtl
inc
sbb
fwait
out
pop
popf
and
loopne
and
psllw
inc
test
fmull
jae
cmp
adc
mov
pop
adcl
mov
and
xor
ja
pop
adc
pop
inc
adc
rcrl
push
iret
in
or
loop
xor
add
loopne
lods
mov
or
cmp
or
addb
jg
in
push
stos
mov
sub
inc
cmpsl
call
add
std
clc
ss
xor
mov
xchg
adc
xchg
aad
aas
rcll
cli
sub
pop
push
xor
push
xchg
daa
add
xchg
mov
push
sub
sub
orl
repz
imul
imul
out
add
push
rcll
push
insb
push
iret
test
xlat
into
insb
ds
adc
mov
mov
add
into
js
es
testb
dec
mov
mov
hlt
test
mov
sub
jmp
fsts
shll
pop
sbb
cmpsb
mov
pop
cmp
pop
mov
pop
sbb
cmp
je
out
jmp
adc
and
rcrb
adc
adc
lods
fstps
in
pushf
loop
test
mov
loop
adc
out
fdivrp
xor
ret
bnd
mov
jno
ret
jmp
xchg
psrlw
mov
xor
out
xchg
push
popf
aam
fnstcw
lock
loope
imul
add
xchg
xor
jo
repnz
mov
or
daa
jne
lock
cltd
jle
xchg
icebp
movsl
mov
out
jp
push
adc
add
lcall
push
mov
lea
int3
mov
inc
xchg
daa
add
ss
mov
jmp
in
mov
push
gs
add
xor
mov
loop
cwtl
lock
push
movsb
mov
test
jae
inc
mov
sbb
or
pop
clc
pop
std
push
out
pop
les
popf
dec
sbb
scas
xchg
out
rorl
arpl
shlb
dec
leave
test
xor
sti
add
add
lcall
sub
mov
cmpsl
xchg
je
dec
shlb
daa
sti
loope
push
sti
das
pop
orb
mov
add
mov
jmp
cmpsb
jo
mov
add
daa
and
xchg
inc
add
mov
dec
sub
adc
fstpt
add
rcl
fcoml
xchg
or
dec
int3
enter
daa
mov
scas
push
push
fistl
not
cltd
jmp
push
imul
sbb
push
ficoms
lcall
rorl
and
push
mov
out
cmp
movsl
push
icebp
test
lods
movsb
pop
or
out
es
push
mov
ds
jecxz
or
incb
cmp
int
and
cmp
div
jno
rcll
sti
pop
jnp
popf
sbb
in
adc
pushw
repnz
sub
addl
mov
add
inc
pushf
inc
out
pop
cmpsb
push
push
jecxz
imul
mov
push
les
pop
xchg
mov
adc
pusha
call
lret
cltd
lret
pop
std
in
mov
lea
jmp
or
or
xor
arpl
or
dec
jno
out
shrl
leave
rcll
dec
mov
or
imul
jnp
outsb
or
sub
cmp
mov
negl
push
stos
ja
jmp
sbb
cwtl
ds
pop
cmpsb
test
cmp
sarb
adc
insl
test
push
push
cmp
dec
leave
inc
out
bound
out
pop
fcomi
mov
push
mov
in
inc
jmp
out
addr16
push
test
add
mov
movsl
aaa
sub
popf
sub
and
imul
adc
outsl
dec
xchg
adc
repz
add
push
pop
adc
lds
sub
dec
mov
fadd
dec
mov
push
push
xchg
mov
push
mov
cmpb
mov
fsubr
notl
push
unpckhps
outsb
push
push
pop
push
pop
add
popa
sbb
xchg
ja
or
dec
pop
xor
mov
add
xchg
jge
cmp
int
cmpb
push
insb
mov
push
rsm
add
xor
pop
ds
mov
popa
adc
arpl
pop
andb
dec
mov
mov
pop
mov
xor
scas
jne
add
jne
das
test
and
stos
ljmp
inc
pop
add
lods
sub
cmpsb
sub
iret
sbb
pop
aas
add
cmp
push
cltd
adc
fdivr
mov
cltd
rcr
sbb
loope
xor
mov
es
lcall
mov
inc
pop
sbb
cli
std
jge
sbb
jge
mov
cli
xchg
popl
out
jecxz
xlat
add
or
clc
cmp
out
movsl
es
out
mov
jns
out
loop
lahf
pop
inc
sub
ret
ss
arpl
push
cli
orl
stos
fmulp
nop
addr16
inc
lock
xchg
pushf
push
in
mov
mov
mov
popf
cmpsl
jno
ret
xchg
std
mov
sub
popa
clc
push
push
in
cltd
enter
cmp
inc
mov
xchg
call
mov
sub
in
orl
movsl
mov
aas
adc
sahf
push
out
cmp
sub
aam
addr16
mov
dec
pop
xchg
adc
adc
lcall
ja
in
add
sub
and
push
cltd
xchg
loopne
inc
test
shll
repz
ja
xchg
jecxz
inc
addr16
push
sbb
adc
std
pop
adc
xchg
add
xor
stos
daa
into
mov
mov
decb
and
filds
inc
dec
ja
or
sub
pop
rcll
leave
outsl
push
push
push
ja
lahf
dec
cmc
popa
cli
pop
sbb
and
pop
insl
lods
stc
jmp
lds
repnz
mov
xchg
sub
sub
inc
or
push
xchg
or
into
ss
cmpsl
pop
sbb
cmp
mov
pop
cmpb
movb
push
xor
shlb
and
sarb
jnp
push
cmp
outsb
push
adc
sub
pop
cmc
fdivrs
sub
dec
stc
xchg
test
push
lea
lret
jbe
push
fsts
js
call
rol
fwait
push
stos
imulb
xchg
rolb
pop
mov
push
jge
adc
mov
stos
notl
out
stos
xchg
inc
imulb
cltd
or
lds
push
sub
push
imul
enter
js
sahf
jle
and
fwait
sbb
adc
push
aad
jecxz
push
sbb
jmp
inc
jb
rol
or
pop
scas
cs
lretw
sub
fsubrp
repz
add
or
pop
mov
xlat
mov
std
jl
mov
nop
mov
cmp
es
gs
xor
push
pusha
sub
push
aaa
leave
mov
clc
jg
inc
or
aad
loopne
cwtl
push
scas
mov
jecxz
sub
das
insl
mov
fs
sub
out
test
and
add
dec
mov
xchg
icebp
push
loopne
add
cmp
cmpsl
and
test
loopne
sbb
popa
lods
cmp
and
push
test
fucomi
pop
mov
add
pop
test
jae
sub
adc
and
cwtl
jmp
leave
pop
mov
outsl
mov
dec
aad
shlb
shrl
push
lods
fwait
arpl
insb
dec
sti
out
xchg
mov
push
sar
loop
cmpsb
or
stos
cmp
mov
rorl
daa
jl
push
cltd
jecxz
testl
stc
cs
inc
or
rorb
roll
pop
jp,pn
or
xor
dec
mov
dec
cld
mov
push
sub
and
call
jge
hlt
sarl
ds
add
mov
movsb
mov
fsubl
mov
cmc
cld
sub
pop
pop
std
mov
cmp
and
cmp
xchg
call
jns
outsl
mov
inc
cmp
xlat
jp
fldcw
icebp
jle
push
ljmp
cld
xor
into
xor
imul
mov
push
in
dec
adc
adc
rolb
fcomps
cmpb
pop
leave
fwait
out
stos
sbb
push
aaa
push
mov
and
rclb
inc
push
jl
adc
adc
in
inc
jecxz
sub
inc
fnstenv
test
and
jp
outsl
pushf
push
or
rorl
mov
cld
daa
mov
mov
push
inc
xchg
fstpl
dec
push
ljmp
es
lods
xor
push
xlat
jns
in
imul
pop
jo
fildll
repnz
xchg
inc
jl
or
mov
out
or
rorl
dec
add
dec
jb
leave
lock
je
stos
fcmovne
and
jecxz
imul
iret
shll
jnp
pop
call
xchg
sub
ret
adc
mov
lock
lock
xchg
lods
ret
xchg
cmp
rorl
xor
rclb
leave
xchg
mov
xor
sub
push
enter
xchg
push
dec
jb
bnd
cmpsb
lock
bound
cs
pop
jl
pop
out
mov
pushw
fs
outsb
or
fwait
jno
jae
mov
notb
nop
lahf
ret
pusha
outsl
adc
notb
push
adc
pop
sbb
pop
adc
bound
fisubl
mov
inc
loope
jbe
xlat
test
inc
inc
insl
fstps
popa
inc
hlt
ds
add
fbld
push
mov
push
xor
dec
int
fldenv
sti
mov
add
jp
rcrb
dec
sub
fdiv
jnp
add
jbe
xor
add
cmpsl
aas
testb
dec
cmp
mov
popa
test
or
jns
mov
mov
in
test
shlb
jo
jmp
cmpsb
cli
adc
adc
cmp
lods
xor
mov
nop
cmpsl
push
scas
jns
inc
rcll
negb
inc
out
and
push
jnp
imul
sbb
sbb
add
xchg
clc
adc
divb
std
inc
xchg
sub
or
repz
jo
lock
jb
cli
xchg
out
push
repz
xchg
xchg
xchg
cmc
inc
mov
out
in
imul
int
push
cs
push
pop
push
shl
out
inc
sub
xchg
xor
cmp
jno
mov
mov
xchg
mov
mov
ret
mov
adc
sub
pushf
subl
push
movsl
ja
jl
and
push
popa
sbb
sbb
or
cmp
gs
lahf
pop
js
les
stos
out
jmp
xor
test
pop
and
mov
out
adc
xchg
sbb
adc
in
adc
cmp
or
sub
jae
dec
ds
jge
sbb
dec
and
sbb
mov
pop
and
sub
scas
rcr
sbb
inc
in
pop
sahf
pop
push
fdivrs
mov
push
es
xchg
dec
sbb
mov
sbb
inc
fbstp
mov
push
push
jbe
aam
fs
jge
pop
mov
icebp
mov
mov
adc
repnz
fwait
das
xor
outsb
sub
insb
je
xor
pop
add
out
inc
push
add
sub
push
cs
inc
gs
jmp
ljmp
push
sahf
push
pop
lds
push
addr16
inc
stc
and
in
cmp
and
or
jp
mulb
addr16
jnp
add
adc
insb
inc
cmc
cmp
in
jp
adc
lret
fidivs
sbb
mov
jne
inc
push
cmp
inc
xor
in
ljmp
pushf
adc
pop
pop
test
fdivrs
repnz
repz
pop
stc
sbb
outsb
cmpsb
cmpsb
enter
jne
xchg
pop
aaa
ret
dec
dec
sbb
cs
jecxz
sub
push
xchg
loopne
fidivl
inc
fstpl
out
sub
scas
cmpsb
fnstenv
cmc
filds
cwtl
roll
add
dec
mov
dec
hlt
add
test
aad
or
repz
test
cwtl
es
push
xchg
and
jno
pop
cmp
cltd
lcall
std
dec
adc
in
pop
mov
fs
push
and
lods
test
dec
jp
sub
mov
roll
mov
movsb
aas
xchg
xor
xchg
or
cmp
sub
fwait
sbb
in
xor
stos
data16
je
pop
fcmovnbe
cld
lret
pop
sub
jmp
mov
shrl
and
stos
jp
lods
push
mov
pusha
sbb
test
repnz
xor
jle
adc
ljmp
sub
and
mov
imul
sbb
add
stos
pop
dec
add
outsl
adc
add
xor
pop
and
aam
jecxz
jb
out
sarl
add
fcompl
xorl
cltd
cmp
xchg
add
ljmp
sbb
sbb
pop
sub
cli
lods
or
pop
push
stos
inc
cmpsb
add
imul
sub
lock
fnstenv
sbb
aaa
mov
and
inc
push
pop
dec
adc
or
jae
pop
sub
insl
addl
and
mov
and
xchg
rolb
or
xchg
hlt
fisubl
pop
outsb
cmp
mov
push
fnstsw
cmp
jl
jge
mov
mov
sbb
xchg
and
adcl
arpl
popa
pusha
sub
mov
mov
loopne
push
push
fsub
fldl
rcl
lods
mov
test
es
xlat
cwtl
scas
sbb
mov
outsl
and
sub
repz
pop
mov
cmpsb
xchg
mov
pusha
bound
movsb
mov
mov
sub
cmpsb
icebp
pop
sub
ja
sahf
pop
xor
test
sub
arpl
dec
sub
or
mov
cmc
ficompl
dec
sqrtps
mov
clc
add
mov
push
mov
aaa
fcoms
and
cli
jecxz
cmp
ret
les
cmp
fistpll
mov
jne
mov
loopne
pop
dec
xchg
jns
xor
add
addr16
fisubrs
loopne
loop
insl
movsb
es
leave
out
cmp
cmpsl
aad
or
mov
cmpb
push
jecxz
sti
arpl
hlt
or
cmc
jmp
test
roll
out
dec
xchg
test
cmpl
sti
or
mov
xchg
push
dec
rorl
in
fwait
jo
push
jnp
push
mov
mov
dec
jns
les
or
andb
xchg
dec
cmp
sbb
mov
cltd
pop
or
or
and
les
and
inc
or
cmpsb
repz
push
cmp
or
mov
mov
cwtl
xchg
inc
fs
iret
jp
mov
mov
pop
jnp
sahf
cmpsb
iret
outsb
push
cmp
push
dec
loop
xchg
stos
mov
int3
test
pop
adc
adc
xchg
cmp
mov
enter
inc
cmp
insb
imul
or
jge
pop
inc
lea
mov
xor
mov
bound
scas
stc
pop
push
cmp
push
sbb
pop
mov
xchg
inc
imul
xchg
mov
xchg
cwtl
mov
push
call
std
xor
pop
add
or
cmpsl
lret
adc
ror
daa
jg
mov
xlat
mov
mov
fisttpll
arpl
xorl
std
int
jmp
cmp
push
shll
push
andb
pop
mov
out
and
xor
aam
xor
pop
or
mov
sbb
ficoms
das
jge
test
inc
fnstcw
in
test
mov
leave
sbb
jb
out
shlb
pop
xchg
jb
add
movsl
mov
mov
dec
test
mov
and
add
mov
mov
movsl
mov
sahf
insl
inc
insb
or
mov
shrb
mov
jo
shrb
cmp
es
fidivl
adc
inc
push
push
push
adc
insl
aad
add
mov
push
or
mov
enter
ja
dec
cmp
and
or
and
or
dec
push
or
and
cmp
call
test
movsl
mov
movsl
loopne
mov
add
lahf
repz
insb
leave
xor
inc
cmp
jae
adc
cs
adc
sub
lods
dec
fistpll
repz
mov
mov
fsubrp
adc
bound
add
pop
lret
cld
iret
lods
mov
int3
add
xchg
lahf
ret
lds
jge
dec
sbb
jo
popa
jnp
arpl
xchg
cld
aas
out
fcomi
lret
ficoms
fdivl
adc
mov
or
add
xchg
mov
sbb
in
js
cmp
fwait
xor
mov
fnstsw
andl
fidivrl
dec
fisttpl
push
pop
insb
test
sbb
mov
sub
notl
dec
xchg
push
or
jne
stc
out
rcr
fldl
mov
cmp
push
ret
mov
cwtl
mov
test
out
sbb
dec
popa
or
dec
or
out
and
dec
rcl
or
stc
mov
cmc
mov
mov
ljmp
or
pop
jmp
adc
jns
fidivrl
pusha
add
in
mov
mov
jno
jae
hlt
shlb
test
adcb
xchg
or
imul
stos
add
adc
jg
adc
data16
jno
dec
pop
inc
js
leave
mov
xor
sub
lcall
cli
addr16
cwtl
enter
jae
or
lahf
fs
xor
jge
shl
mov
gs
enter
and
les
push
lcall
aaa
mov
mov
fbstp
mov
ja
mov
ds
nop
cmpl
adcb
jns
or
pop
adc
repz
aam
pop
iret
xor
mov
or
out
xor
and
ret
pop
add
mov
std
mov
dec
test
lock
inc
js
inc
cmp
in
rorl
in
sub
vphaddbq
add
repnz
dec
loop
jecxz
iret
imul
mov
add
repz
imul
scas
pop
and
outsl
inc
cmp
inc
adc
pop
cli
lods
lret
jns
js
in
fs
xor
fwait
and
dec
sub
leave
movsb
lods
pusha
or
ds
sub
lock
scas
fistpll
scas
shlb
xor
inc
jl
jbe
pop
adc
pushf
stc
mov
inc
sbb
sub
arpl
push
sbbb
adc
mov
in
mov
je
inc
inc
cmpsb
push
fidivs
filds
data16
or
bound
dec
scas
fnstenv
mov
jb
adc
ret
imul
insl
orl
cld
push
pop
test
cmp
xchg
mov
pop
adc
xchg
sub
cwtl
push
cs
je
inc
sti
adc
mov
cmpb
xor
inc
dec
mov
inc
mov
mov
ret
jmp
stos
scas
aas
dec
cwtl
cmp
scas
jnp
repz
in
xor
lods
sub
push
cld
sub
add
pop
pop
xchg
push
stc
inc
jo
aam
outsl
cmc
pushf
leave
cmp
xchg
cli
nop
jbe
scas
or
neg
sbb
inc
jo
stc
sbb
ljmp
mov
addr16
add
loop
sub
pop
dec
xchg
mov
mov
push
ljmp
test
push
mov
cmp
loop
out
and
add
data16
xchg
cmp
lret
xlat
add
out
inc
push
xchg
insl
addr16
fmuls
dec
idivb
xor
out
add
rcll
mov
call
test
mov
push
fdivrs
dec
out
mov
pop
ja
mov
pop
mov
jp
xchg
mov
cwtl
adc
fstl
testl
mov
mov
pop
pop
xor
cltd
sub
inc
inc
loopne
jae
aad
scas
enter
fimuls
imull
xor
push
outsl
movsl
repz
test
fsubr
jecxz
inc
leave
insl
mov
pop
insb
ret
adc
xchg
insl
sub
cs
scas
out
movsb
cmp
adc
rcrb
dec
addl
sub
dec
ret
pop
dec
fwait
inc
out
fprem
loop
clc
push
xchg
add
push
lds
mov
mov
pushf
inc
sub
push
pop
xchg
jmp
or
sbb
jp
xchg
loope
adc
and
adc
fcompl
xor
repz
sub
pop
mov
jmp
push
adc
inc
mov
push
cmpl
mov
nop
dec
jg
aaa
cs
shl
inc
add
insb
mov
xchg
dec
add
jne
enter
pop
enter
and
out
xchg
hlt
and
pop
mov
subl
mov
pop
cmp
loopne
fdivrl
sbb
push
xor
pop
arpl
cmpsl
daa
mov
cmpb
mov
outsb
mov
iret
mov
arpl
rclb
js
xchg
pop
xchg
cld
stos
out
mov
sub
or
fwait
ret
inc
mov
adc
cmp
ja
ds
pop
ja
lods
or
and
push
jo
mov
gs
cmp
aas
or
sub
mov
sbb
xchg
push
orl
std
test
sub
pushf
push
aam
push
inc
mov
push
aas
adc
xchg
xchg
push
dec
mov
test
mov
jbe
add
int3
and
out
sbb
and
out
imul
sbb
jo
xor
or
in
jns
push
and
hlt
xor
es
xchg
icebp
push
and
push
or
shll
js
cltd
mov
jne
add
pop
je
sub
or
mov
add
in
ja
lret
int
jbe
dec
and
dec
fstps
sub
repz
xchg
mov
mov
lds
mov
outsl
cwtl
inc
movb
out
mov
loop
ja
popf
sbbb
pop
movsl
in
xchg
dec
cmp
js
push
pop
das
sarl
movsl
dec
mov
mov
jns
xchg
aaa
popl
repz
shll
xor
sub
xor
sbbb
or
sbb
test
andb
pop
inc
loopne
sbb
leave
pushf
dec
cli
loopne
jle
xchg
incl
xchg
in
test
push
or
out
lret
mov
mov
xchg
sbbb
add
dec
sub
fidivrl
push
repnz
loope
std
cmp
addr16
jle
lret
daa
roll
fcomi
andl
hlt
mov
call
loope
in
fidivl
lret
jb
dec
lea
cmp
xchg
push
or
push
add
or
in
dec
daa
insb
aaa
cmp
add
out
pushf
push
pusha
and
out
ret
sbb
adc
cmp
enter
dec
mov
aas
sub
std
cmc
aaa
popf
imul
into
pop
andb
mov
dec
pop
jne
sbb
lods
dec
push
sub
push
stos
dec
or
outsb
pushf
test
sbb
loopne
stos
fidivs
push
aas
jecxz
mov
mov
iret
scas
out
mov
jo
bnd
popa
cwtl
stc
ret
lods
repnz
fwait
das
mov
add
jle
rclb
shlb
push
pop
jb
imul
je
das
and
pop
pop
lods
pop
bound
push
das
cli
mov
pop
hlt
cmpsl
repnz
cmpsb
xor
or
jg
mov
dec
sbb
shl
daa
cmp
adc
adc
adc
xor
into
mov
inc
push
sub
bound
pop
icebp
lea
dec
out
test
inc
cmp
lret
mov
js
fnsave
pop
dec
mov
push
sub
dec
xor
adc
pop
aad
subb
pop
mov
add
icebp
mov
lods
dec
roll
insb
or
aad
je
bound
ret
cmp
mov
sti
leave
xor
mov
jbe
cltd
mov
push
lcall
rcrl
cmc
xor
clc
iret
cli
out
push
imul
iret
sbb
in
xor
mov
cmpsl
push
xor
inc
push
testl
pusha
aas
std
in
cmc
cmp
scas
xchg
mov
rclb
test
rcrb
subb
push
cmp
rep
pop
pop
xchg
inc
aas
dec
iret
stos
pop
add
or
cmpl
outsl
sbb
js
test
shll
xchg
ds
scas
hlt
lcall
inc
ret
outsb
cltd
dec
repz
sbb
xchg
xor
fiadds
adc
xor
fdivrp
or
stos
popf
ja
and
ja
rcrl
push
push
rorl
xor
jno
ja
dec
aam
vcvtsi2ssl
xchg
and
addr16
rorw
cld
test
mov
xchg
das
jge
lods
rol
xchg
lcall
cld
bnd
sbb
test
adc
xor
sub
shl
sub
rcr
xor
and
movsb
rcrb
mov
mov
or
inc
idivl
mov
or
test
and
adc
stc
push
ret
imul
inc
jo
add
xchg
fadd
or
lret
cmp
adc
mov
into
mov
xor
push
xchg
pushf
es
enter
jbe
sub
cmp
cmp
jbe
scas
test
inc
aam
xchg
fxch
jge
ret
js
add
xor
cmpsb
push
int3
cmp
fnstsw
lods
jo
push
out
cli
and
enter
or
sub
mov
ds
jp
mov
int
add
pusha
xchg
fs
fcomps
mov
fstpt
cs
xor
lret
fisttps
shlb
scas
sbb
addb
mov
pop
ficompl
inc
mov
enter
stos
mov
dec
sub
leave
inc
mov
pop
jae
stos
mov
sub
addr16
imul
loopne
xchg
out
insb
inc
xor
xchg
cmpsl
sub
push
dec
dec
sbb
adc
or
pop
rcrl
and
push
dec
add
in
and
mov
inc
pop
cmpsb
cmp
lcall
ret
into
adc
mov
inc
sub
push
fstpt
cmp
mov
sub
daa
cmp
rcrl
fidivs
sub
rolb
jnp
out
lret
inc
addb
sbb
stc
xchg
bound
inc
xchg
jmp
dec
jg
stos
fcompl
inc
mov
dec
mov
sarb
aad
fs
mov
call
sbb
add
out
xchg
mov
sbb
stos
imul
jbe
out
ja
je
sbb
icebp
test
dec
mov
mov
bound
in
push
jno
mov
data16
fwait
push
and
int3
stos
push
mov
sub
shll
icebp
push
or
enter
dec
jg
mov
add
mov
dec
xchg
dec
and
mov
or
aad
cmp
clc
adc
ss
pusha
xchg
jb
and
inc
mov
pause
jb
jno
les
adc
push
cmp
push
jb
mov
sbb
cltd
jp
sbb
iret
inc
ja
testb
insb
js
sar
adc
test
push
mov
pop
out
int
sbb
sbb
aas
out
dec
mov
cmpsb
xchg
movsl
cli
pop
pop
push
xor
arpl
inc
mov
adc
pop
outsl
shrb
fsub
mov
dec
jecxz
add
leave
push
mov
daa
fsubs
xchg
in
mov
xor
and
in
ret
sbb
cltd
into
push
pop
pop
jecxz
sbb
jae
sub
scas
test
mov
sbb
add
mov
jo
mov
jp
movsb
xchg
in
sbb
dec
mov
test
xor
mov
push
jp
leave
mov
loop
mov
xchg
cmp
scas
int
pop
neg
loope
cltd
adcl
xchg
ljmp
sbb
push
inc
add
push
or
cwtl
mov
cmovl
pop
mov
loopne
pop
xchg
jmp
cld
fs
ja
arpl
stc
loope
pop
jl
sti
in
in
xor
or
inc
cmpsl
sub
add
xor
pop
xchg
outsb
jo
or
or
in
pop
rcrl
stos
adc
aaa
outsl
xchg
lret
leave
mov
and
push
into
pop
out
pop
fwait
hlt
adc
pop
cmp
add
scas
insl
xor
xor
mov
call
bound
aas
cmp
mov
mov
xor
push
fsubl
ds
pop
lods
js
jo
mull
mov
add
clc
xor
stos
enter
iret
mov
loope
jno
in
fstl
cmpb
sub
rorl
enter
mov
jne
jp
push
ds
adc
pushf
test
pop
mov
ret
adc
cmp
or
adc
pop
fwait
lock
adc
mov
xchg
jns
mov
fsubl
cmpsl
and
push
call
lds
xchg
mov
inc
repnz
sub
fsub
mov
push
fisttpl
arpl
mov
jmp
sub
xchg
xchg
push
inc
jns
mov
push
in
adc
mov
les
xchg
or
xchg
lods
mov
icebp
sub
lcall
negl
pop
mov
outsl
sub
clc
imul
fimuls
pusha
xchg
pusha
imul
hlt
mov
mov
xchg
lods
incl
in
or
int3
mov
fisubs
add
adc
pop
cmp
jo
mov
or
dec
rclb
outsb
adc
std
outsb
ljmp
shlb
clc
lahf
pushf
ds
loopne
stos
imul
dec
add
test
or
xchg
and
lea
addl
push
outsb
dec
mov
inc
pop
pop
mov
xchg
aas
jo
jae
mov
pop
movsl
leave
in
pushf
fxtract
push
shl
in
jb
adc
out
sub
insb
jns,pn
mov
cmp
mov
xor
lret
jmp
std
sbb
mov
js
out
push
nop
das
scas
push
pop
icebp
or
jl
cltd
out
mov
cmc
aad
rcrb
inc
test
cld
xchg
je
sub
cmp
sbb
xchg
pop
scas
loopne
or
in
in
cld
adc
push
jecxz
in
sbb
add
popa
test
jne
ja
dec
push
or
or
push
outsl
inc
pop
jg
scas
ss
test
subl
push
fcmovu
pop
inc
call
jae
inc
cld
das
cli
xchg
and
lret
mov
jnp
adc
xor
jne
sub
push
push
push
jl
call
fstp
mov
dec
cmpsl
daa
xor
ss
mov
fwait
push
mov
adc
negb
mov
mov
cmp
push
pop
cltd
adc
ds
arpl
mov
or
xchg
adc
es
mov
movsl
sbb
push
sub
dec
and
ss
xor
add
or
xchg
popf
ds
add
sbb
or
mov
jp
insl
loop
sub
lcall
push
sub
mov
je
sub
repnz
push
aas
or
xchg
insb
mov
cld
pusha
fiaddl
pop
and
or
mov
fwait
xchg
sarl
jecxz
out
xor
dec
out
push
jg
xlat
inc
loop
cli
or
cmpsl
cmp
xlat
mov
movaps
mov
and
jecxz
rorl
xor
or
or
std
loopne
jle
test
jecxz
adc
xchg
inc
sbb
push
stos
rol
or
inc
mov
adc
sub
jge
fmull
sub
out
hlt
push
inc
roll
dec
xchg
mov
push
mov
enter
stos
adc
sbb
pusha
pop
dec
or
std
pop
sbb
jae
out
cmpsb
or
and
les
insl
jns
aad
enter
insb
cmpsl
xor
ja
add
adc
mov
and
outsl
loop
scas
rcrb
inc
pusha
sub
imul
pushf
inc
xchg
jae
fnstsw
inc
cld
cs
call
fisubrl
dec
divb
fcoml
aam
out
adc
jmp
mov
or
jnp
pop
leave
jecxz
sub
ficoms
cld
sbb
imul
jo
sub
dec
sahf
jecxz
lret
inc
sub
mov
jae
xor
outsl
add
scas
cmp
push
leave
push
fmuls
sub
xor
mov
cltd
jb
sub
pop
mov
movsl
and
mov
stc
push
mov
call
inc
loope
or
push
enter
rclb
mov
and
sahf
sub
jmp
cld
leave
lods
xor
mov
mov
fsubp
adc
push
pop
sub
inc
xchg
add
sti
adcl
imul
ret
stc
add
jb
clc
inc
mov
adc
dec
shlb
mov
sbb
jl
into
hlt
fs
lahf
std
dec
data16
ret
fwait
or
dec
sbb
xor
repnz
jns
push
fadd
fbstp
filds
xchg
fisubs
add
cli
cmp
jmp
repz
or
push
jae
dec
mov
mov
mov
lea
notl
add
pause
lea
sbb
mov
jnp
sub
in
insb
lods
push
lock
mov
pop
sbb
jle
ja
jge
push
lock
xchg
add
mov
pop
dec
int
pop
pop
inc
movsb
xchg
add
sarl
push
andb
mov
sahf
sub
push
mov
insb
fwait
jg
add
cmpb
rol
mov
insb
add
test
lock
call
or
xchg
loop
cltd
mov
rorb
call
das
fxch
push
jle
and
int
out
add
jae
xchg
fisubl
rclb
outsb
jae
mov
mov
pusha
shrl
sub
imul
adc
or
cltd
fs
mov
cmpsb
xor
imul
les
sbb
out
xor
sarb
int
ljmp
fildll
sar
pop
jmp
cmpsl
mov
shlb
stos
add
mov
ss
and
sub
test
cmpsb
xor
adc
adc
ret
pusha
or
jge
jae
cltd
scas
cmp
mov
lcall
and
or
cmc
xchg
test
fistps
mov
mov
dec
xor
mov
add
daa
movsl
inc
push
fnstcw
mov
into
push
in
sahf
imul
cltd
scas
idiv
xlat
sahf
in
sahf
sbb
push
pop
or
push
jle
mov
pop
cmp
xchg
bound
mov
fxch
cmp
sbb
and
shrb
or
or
add
xor
mov
fstp
or
cmpsb
jmp
mov
rorb
insl
imul
jns
add
fdiv
push
mov
aad
mov
jle
xchg
test
cmp
repz
lahf
addb
mov
push
repz
mov
addr16
and
scas
stc
push
mov
xchg
xchg
popa
shrl
mov
sub
into
sar
xchg
adc
jnp
jge
loopne
pop
sub
inc
and
or
mov
fldl2t
push
stos
xchg
outsl
jne
sub
pop
pop
sbb
test
scas
gs
clc
or
mov
push
pop
push
mov
movsb
jo
jmp
pop
mov
lret
shl
fs
or
mov
icebp
mov
sub
xchg
mov
dec
jle
vmwrite
sub
xlat
pop
push
cmpb
fadds
or
dec
adc
jg
fs
sbb
call
mov
xchg
cmp
or
call
jns
es
lahf
insl
jmp
lahf
and
cmc
mov
mov
inc
pop
adc
inc
lock
mov
mov
hlt
cmp
cmp
hlt
push
clc
ljmp
rorb
ret
out
popa
ss
mov
outsb
inc
scas
pop
dec
push
int
iret
push
lock
sti
sub
inc
ret
aad
jnp
or
cmc
inc
cmp
sbb
pavgb
push
dec
test
call
ror
pop
push
jo
mov
icebp
outsb
in
int3
mov
cwtl
rorb
fildl
or
push
sbb
cs
mov
or
outsb
cmpl
mov
ljmp
jp
leave
addr16
cli
insb
push
adc
ror
cwtl
sub
push
add
inc
gs
jmp
adc
inc
mov
adc
imul
fwait
test
dec
mov
pop
paddusw
stos
pop
dec
lds
repnz
lods
adcl
pop
xor
lcall
jmp
in
rol
bound
mov
mov
mov
loop
pushf
cs
lods
adc
fisubs
push
ds
or
stc
mov
cltd
add
fisttpl
movsl
or
or
mov
fmul
fwait
sbb
insb
cmp
add
xor
sbb
pusha
adc
adc
mov
add
cmpsb
inc
push
pusha
add
rol
push
jns
cmc
cmpsl
jecxz
rorl
mov
in
shrl
shlb
and
mov
add
cmp
xchg
icebp
push
or
pop
and
test
movb
movsl
shlb
and
sub
mov
lods
sbb
repz
jle
jo
dec
pop
lods
lods
jb
sub
adc
wrmsr
mov
cmpsl
imul
fbstp
adc
cltd
inc
out
xchg
repnz
add
or
mov
das
and
push
in
mov
xchg
pop
pop
xor
mov
and
push
daa
sahf
sub
cmp
enter
push
jnp
xchg
mov
daa
mov
lds
cmc
dec
dec
mov
cmp
xchg
cmc
sbb
and
scas
adcb
push
and
push
into
loopne
sbb
leave
hlt
loopne
bound
leave
roll
outsb
shlb
in
fwait
repnz
xor
xor
mov
cmc
icebp
imul
cmp
shlb
cmp
mov
mov
mov
mov
in
stc
push
mov
push
leave
jle
xor
fdivs
outsb
jge
test
xchg
into
mov
subl
rolb
push
and
jmp
aam
sub
test
in
adcl
mov
push
lock
lcall
push
cmp
xor
mov
popa
je
in
mov
sti
das
add
adc
data16
sub
xchg
mov
in
mov
dec
fildll
mov
ljmp
push
cmpb
ffreep
fbstp
jp
enter
push
adc
insl
jns
adc
xchg
pop
push
dec
mov
mov
fisttpll
js
sti
scas
pop
cmp
jnp
movsb
cmp
mov
cmp
adc
loop
daa
faddl
lods
inc
jae
or
inc
cli
mov
mov
lret
divb
inc
sub
mov
fdivl
xor
cmp
xchg
adc
xor
mov
mov
mov
into
push
iret
mov
icebp
mov
push
adc
rorb
cwtl
lods
push
inc
cmc
inc
mov
add
popf
xchg
push
ficompl
fs
jge
adc
cs
outsl
out
movsb
mov
fwait
test
adc
inc
and
cmp
in
jae
sbb
mov
xor
push
movsb
sbb
lock
cltd
scas
inc
mov
paddusb
jno
lds
mov
add
mov
adc
xor
inc
int
inc
fimuls
sub
mov
or
pushf
arpl
cwtl
push
pop
or
imul
in
inc
ret
xchg
adc
clc
sub
cs
xor
ja
ret
or
mov
cmp
cmp
push
sub
push
insb
iret
mov
push
jp
ret
lcall
mov
mov
ror
push
xlat
test
out
mov
sbb
popf
imul
pop
lea
div
lock
sbb
dec
iret
cmpsb
push
mov
inc
sbb
add
mov
xchg
pop
test
mov
lods
outsb
gs
aam
sarb
fwait
icebp
aaa
and
les
jns
in
pop
xlat
ss
pop
out
inc
lds
add
lods
add
dec
lock
dec
push
and
ret
popf
aam
push
xchg
fcmovbe
sahf
lods
jns
mov
xor
int3
add
orl
aaa
pop
in
dec
jecxz
aaa
xorb
pop
mov
push
mov
mov
dec
int3
repz
out
icebp
dec
pop
ret
sbb
add
mov
sub
repz
test
dec
aad
ficomps
mov
and
clc
std
into
popa
and
and
mov
sbb
stc
imul
or
mov
xchg
xor
ror
dec
push
loopne
pop
mov
xchg
xchg
mov
xor
jae
pop
adc
jnp
mov
jno
push
dec
jo
rolb
jmp
and
ss
fmull
mov
sbb
xor
dec
into
push
xchg
xchg
into
sbb
lds
push
pop
push
dec
rcl
cmpsb
popa
arpl
and
jp
insl
ja
mov
iret
je
dec
fs
and
push
push
inc
xchg
into
inc
dec
add
adc
jl
sti
pushf
fisubs
jmp
dec
roll
mov
push
push
enter
ret
fwait
cmpl
hlt
sarl
mov
mov
mov
addr16
add
decl
xchg
jecxz
dec
sbb
push
push
jbe
int3
out
xor
cltd
add
dec
popl
and
jecxz
das
pusha
std
sub
iret
jo
loope
sbb
sub
into
insb
cmp
jg
aas
mov
xchg
mov
mov
pop
add
lds
ret
in
inc
and
lock
jae
sbb
jecxz
sbb
sub
mov
out
mov
into
data16
pushf
aaa
add
dec
lahf
les
cmp
push
xor
xor
sbb
lret
ljmp
rclb
nop
out
mov
cmc
test
fisubrl
ret
hlt
stos
push
xor
out
insl
dec
pop
pushf
pushf
add
or
mov
shl
shlb
pop
sub
popf
and
mov
jo
stos
fldl
pop
cmpsl
pop
xchg
arpl
inc
icebp
push
test
push
jne
testl
jmp
mov
dec
daa
sbb
stc
or
mov
mov
xchg
pushf
jg
pop
sar
xchg
shr
push
testl
shll
or
mov
repnz
adc
aad
add
ljmp
ficomps
in
cmp
test
pop
cli
fdivl
xchg
mov
test
jl
mov
xor
test
adc
pop
pop
add
mov
dec
pop
sub
or
xchg
sub
dec
inc
mov
mov
cmp
lock
jp
cli
lret
sub
lds
or
add
mov
lock
dec
cmpsb
cltd
cltd
pop
out
js
add
cmc
and
fsubrl
xor
iret
jbe
xchg
push
lret
pop
icebp
jg
ds
sbb
hlt
ret
into
sbb
jle
inc
or
xor
ror
cli
add
cli
sbb
pop
js
adc
xor
pop
mov
popf
pop
push
push
das
lods
xlat
fisttps
dec
repnz
fwait
dec
dec
jmp
lock
dec
jnp
cld
imul
jle
adc
stos
sahf
scas
xor
mov
mov
movsl
sbb
lds
or
arpl
or
sbb
jecxz
add
lret
aas
xor
hlt
in
sbb
movsb
ss
mov
jle
push
dec
mov
xor
mov
push
mov
jo
movsb
push
addr16
fistpll
stc
lods
imul
rclb
pop
cmp
sbb
xor
mov
dec
cmp
test
ror
repnz
movsb
dec
lahf
addr16
es
sub
addr16
xchg
icebp
jge
out
mov
rol
clc
jae
mov
pop
imul
inc
adc
inc
jl
xchg
repnz
hlt
cmpsl
std
outsl
cmp
mov
call
jmp
lods
cmpsl
dec
mov
clc
sbb
xlat
cli
add
shlb
aad
outsl
dec
inc
insb
dec
sub
cmp
popa
xchg
fbstp
sar
mov
fstpl
xor
inc
sub
scas
nop
push
mov
hlt
sbb
xchg
test
aas
sub
shll
add
adc
adc
cli
stos
sbb
fsubrl
leave
push
dec
and
jo
and
mov
mov
outsb
setne
or
and
dec
push
out
push
dec
aaa
imul
xchg
mov
mov
cs
lcall
mov
fs
movsb
cmp
ss
push
add
es
repnz
mov
stc
test
cmp
rcll
mov
das
aam
into
sub
inc
subl
sub
mov
and
mov
cld
popf
adc
mov
adc
js
xor
lcall
lock
pusha
jo
mov
shlb
inc
mov
jp
xor
js
cwtl
mov
and
mov
jno
subl
insb
xor
xchg
pop
nop
cltd
aam
add
sub
jno
sub
shll
test
jo
sub
or
mov
iret
dec
mov
cmovne
loope
inc
sbb
jg
addr16
adc
mov
push
fsts
stos
cmp
movl
xchg
jne
incb
cmp
stos
popa
xchg
enter
mov
mov
push
cmp
fwait
jle
inc
loop
into
jl
adc
sbb
js
sbb
push
ficoml
fisubl
std
iret
rcll
mov
xchg
ja
mov
xor
xchg
add
popf
xchg
mov
mov
adc
idivl
hlt
push
lods
pop
pop
ljmp
mov
sbb
sbb
cmc
pop
movsb
dec
jnp
jecxz
add
fwait
cmpsb
xlat
xlat
cmpsl
adc
sarl
mov
mov
shrl
or
mov
cli
push
hlt
lahf
data16
cmp
mov
ljmp
cli
rorb
pop
dec
jmp
in
inc
js
lret
dec
das
jne
mov
imul
loop
xchg
sub
adc
out
into
movsb
cmp
bound
gs
nop
push
add
sti
mov
adc
sub
icebp
or
xchg
inc
jns
imulb
inc
in
stc
rorl
dec
jge
orb
mov
outsl
fistpl
xorl
jl
lcall
or
jno
xor
cld
in
fisttpll
jne
lahf
shll
shlb
hlt
std
lock
sub
and
adc
lret
push
sbb
call
mov
shll
aaa
xor
add
or
push
fadd
aad
into
hlt
std
stos
or
insb
fwait
mov
sarb
fwait
xchg
leave
jbe
scas
stc
subl
cmp
subb
std
jle
sub
into
cltd
cmp
lods
ret
adc
test
ret
fstpl
dec
bnd
clc
push
xor
cmp
mov
scas
lock
mov
nop
out
push
xor
jns
dec
daa
mov
and
test
test
add
and
dec
pop
inc
pop
rcll
jns
mov
pop
enter
or
xchg
xchg
pop
push
xchg
pop
push
lock
sbb
pop
lea
xchg
sahf
sub
aam
cld
xchg
pop
inc
call
test
mov
sahf
cmpsb
xchg
mov
ret
js
es
pcmpeqw
inc
or
or
mulb
mov
into
xor
call
and
std
or
pop
mov
dec
cmpsb
out
xchg
push
test
dec
mov
das
xchg
jl
mov
lahf
dec
or
jp
cld
pushf
mov
jl
mov
mov
lahf
std
add
add
push
xchg
in
add
dec
imul
fwait
and
es
das
dec
imul
stos
sub
js
dec
mov
fisttpl
mov
or
fs
out
and
cmp
xor
lods
push
and
imul
inc
lahf
add
jmp
cmp
xchg
jo
ret
sbb
jae
rolb
int3
jne
push
mov
xor
jbe
out
dec
mov
out
push
int
imul
push
adc
mov
dec
outsl
pop
test
lds
cs
cmp
jno
neg
jle
sbb
clc
in
data16
scas
aas
pop
push
push
cmc
sub
repz
insb
outsl
iret
add
pop
inc
ljmp
and
hlt
aas
or
fnstsw
push
fwait
lret
cs
into
out
lock
xchg
cmp
sub
xchg
fwait
sub
xor
push
shrb
xchg
add
inc
out
or
lret
fmull
pop
inc
repnz
push
mov
add
andb
stos
lret
repnz
fisubs
pushf
mov
mov
movsb
cmp
clc
inc
xchg
aam
push
scas
xlat
cmp
mov
popa
hlt
outsb
sbbb
adc
xor
icebp
sti
and
loop
subl
loope
ret
cmpsl
mov
mov
and
daa
pop
aam
cld
xor
push
loop
fldcw
push
inc
lds
adc
xor
inc
popf
sahf
lods
push
lea
push
add
mov
out
add
cmpsb
aam
mov
inc
das
cmpsb
and
rcr
jg
sahf
inc
xchg
and
adc
inc
sub
mov
outsl
jle
mov
jecxz
jbe
or
dec
mov
in
fs
jnp
je
ja
mov
shlb
cmpsl
std
cli
ss
xor
mov
sahf
scas
cmp
sbb
cwtl
data16
pop
rolb
push
icebp
hlt
adc
dec
mov
aas
in
loopne
enter
mov
fld
ret
stos
adcb
dec
jne
fimuls
inc
bound
loope
mov
adc
lret
sub
shl
cmp
test
divb
xchg
mov
leave
test
push
or
je
mov
xlat
mov
pop
inc
xor
mov
pop
dec
push
sub
in
cmp
insl
or
mov
xor
pusha
adc
in
jb
clc
call
add
cmp
fiadds
je
mov
push
scas
jbe
ljmp
mov
sub
iret
fcoms
push
cmp
sbb
jl
sub
ffree
idivb
cli
push
and
jle
ds
mov
aam
push
push
arpl
leave
add
xchg
leave
pop
bound
in
addb
out
sbb
lods
fwait
pop
xchg
push
xchg
dec
mov
push
cltd
and
ffree
sub
push
and
movsb
imul
scas
insl
outsb
ds
jns
push
aas
lods
mov
in
out
inc
mov
xchg
push
fcompl
data16
in
addr16
push
arpl
mov
xor
cmpl
int
xor
mov
out
fimuls
in
sahf
sahf
fldenv
les
js
xor
push
das
pop
mov
xchg
roll
cmc
test
and
jne
int
imul
adc
dec
les
imul
seto
dec
aas
push
addr16
lock
je
xchg
xchg
outsb
adc
pop
add
or
cvtpi2ps
jne
mov
rolb
icebp
mov
lock
ds
sbb
sbb
fcomp
or
gs
mov
out
mov
push
sahf
inc
divl
mov
mov
cmp
pop
sub
xor
push
xor
xlat
cwtl
pop
stos
sti
popa
adc
jae
sub
mov
cmc
push
inc
mov
adc
int3
mov
pop
clc
movsl
inc
icebp
jle
cwtl
xchg
dec
jae
adc
mov
push
clc
jecxz
mov
sub
sub
jl
icebp
aam
insb
adcb
bound
pop
push
and
push
in
cmp
stos
mov
loope
inc
jmp
sub
adc
mov
loope
adc
mov
adc
cltd
call
jns
js
inc
mov
pushf
sbb
imul
dec
rcrb
adc
sbb
dec
pop
push
out
lcall
or
cwtl
out
cmp
xor
pop
outsb
add
cmpsb
cltd
cmp
out
enter
mov
add
pop
cmpsb
mov
bound
adc
mov
push
and
test
xchg
cld
inc
mov
ficoml
cmpl
pop
subb
cmc
xor
ror
push
ret
dec
jnp
rcrb
jge
add
push
imul
vbroadcastf32x2
repnz
xchg
cmp
addb
push
ret
nop
cmp
cltd
fidivl
bound
popf
sti
xchg
mov
or
iret
popf
int
adc
idivl
fstpt
pop
repz
cld
sbb
pop
sbb
in
fistps
jge
aas
or
or
xor
sbb
mov
jae
call
jns
sbb
data16
pop
cmp
jnp
lds
scas
mov
pushf
loope
dec
xor
push
addr16
fisttpl
xchg
rol
adcl
and
jmp
sub
xor
pop
push
sbb
aad
jmp
xchg
dec
outsl
xchg
dec
hlt
sub
cltd
out
std
push
test
faddl
sbb
xor
mov
xchg
outsl
aad
mov
mov
shll
es
mov
xchg
sub
xor
xor
movsb
dec
adcl
jp
test
fldl
lods
adc
push
jg
jmp
testb
mov
adc
add
mov
out
addr16
enter
or
adc
out
jmp
xor
and
jbe
test
js
push
jmp
loope
cmp
lock
push
xchg
iret
push
das
pop
test
inc
xchg
mov
stc
loop
stos
fisubs
imul
lods
pop
pop
daa
adc
lods
test
jbe
test
xor
xor
push
mov
push
inc
test
test
sub
sqrtsd
dec
sbb
repz
outsb
and
movsb
inc
ljmp
cmp
pop
das
sbb
subl
jns
fst
add
pop
mov
sbb
lods
pop
adc
sti
mov
jge
xor
ja
push
inc
bound
sub
cmpsb
pop
mov
movsb
ljmp
out
inc
iret
test
lods
lcall
sti
sub
lea
leave
test
sbb
mov
mov
cmpsl
lds
out
std
and
xor
jge
adc
add
mov
jmp
addl
or
repnz
or
push
lock
insl
adc
sbb
xchg
pop
jge
sub
xor
inc
add
cmp
fsubrl
mov
popf
inc
mov
jno
mov
jecxz
fwait
outsb
sbb
das
mov
push
and
jmp
xor
or
loop
inc
sti
rolb
out
pop
dec
cltd
in
imul
std
inc
out
imul
and
cmp
jae
mov
cmpsl
mov
leave
pusha
lds
cwtl
mov
in
repz
jg
jmp
cmpsb
pop
iret
xor
mov
stc
xchg
inc
mov
popf
adc
jae
add
gs
adc
add
arpl
xlat
das
and
pop
jb
cltd
rorl
outsl
in
jmp
ss
rcrb
sbb
cmc
mov
lds
jb
dec
das
add
cmp
stc
cmp
shlb
pop
or
pop
stos
insb
mov
fs
jle
xor
js
inc
sub
xor
loop
icebp
push
movsb
add
rcrl
fwait
mov
xchg
push
adc
repnz
xor
loop
sbb
orl
mov
pusha
cmp
adc
pop
xchg
cmp
dec
cmpsb
iret
inc
mov
xor
mov
cwtl
and
inc
cmpsb
ljmp
inc
inc
jp
xchg
hlt
pop
arpl
fistl
lock
in
loopne
test
mov
dec
push
bound
bound
push
rolb
cltd
cwtl
mull
mov
jle
popa
jecxz
xchg
xchg
mov
jo
sahf
setg
dec
stos
fists
movsl
je
rolb
push
icebp
jne
fmuls
inc
test
and
sub
jnp
scas
add
gs
xor
repz
out
jo
dec
inc
cs
lods
fucomip
stc
icebp
outsl
call
dec
test
cltd
pop
jecxz
lcall
mov
sbb
inc
mov
loop
clc
pop
insb
jg
pop
fidivs
enter
jae
xlat
dec
xchg
filds
pop
andb
sbb
cs
sbb
and
jnp
int3
in
mov
jle
shll
repz
mov
icebp
pop
xor
loop
and
stos
sbb
bound
xchg
shll
lea
shll
sub
jl
inc
sub
mov
jno
or
pop
int3
push
pop
popa
jp
inc
or
mov
into
popf
mov
xchg
dec
sti
cmp
xchg
sbb
mov
sub
xchg
fwait
stos
fs
cmpsl
es
and
lods
clc
jbe
and
mov
jg
pop
ds
and
and
cmpsl
sbb
and
fs
push
loopew
adc
pop
inc
sahf
bound
sub
les
fdivr
dec
jp
lahf
stc
add
pop
loope
or
repz
jg
mov
lret
xor
mov
aas
dec
dec
out
sbb
mov
and
int
das
dec
pop
jg
in
or
jmp
adc
jo
je
cmp
andnps
sbb
mov
imul
jmp
iret
sbbl
scas
cli
lods
add
loope
sub
mov
jle
or
push
rol
inc
ficoml
test
or
rcll
leave
pop
inc
popl
mov
call
push
push
mov
push
lcall
mov
outsb
loopne
movsl
cld
inc
in
and
pop
test
inc
mov
test
stc
insl
inc
in
xchg
shrb
push
or
cmp
push
lret
cmpb
movsl
cmpsb
lea
add
js
icebp
mov
push
data16
cmp
dec
iret
in
jge
or
es
xchg
and
imul
mov
clc
insl
and
lock
enter
sti
mov
aas
in
scas
js
stc
pushf
mov
xorl
or
sarl
cmp
outsl
jmp
gs
adc
mov
addr16
into
aad
add
cld
and
scas
sahf
not
mov
and
dec
movsl
or
mov
cmp
adc
xlat
mov
push
rclb
fldln2
subl
iret
xor
dec
test
and
rolb
out
fstpl
mov
xchg
add
mov
inc
aam
inc
pop
call
cs
xor
inc
test
cmc
jmp
sbb
xchg
mov
fisubs
pop
cmpsl
xor
fisubrs
cmpl
dec
mov
lods
jno
iret
adc
cmp
rcrb
nop
cmc
fcomps
mov
ljmp
jno
test
mov
adc
mov
push
jg
scas
jmp
sbb
and
adc
cmc
lock
mov
scas
loopne
cmpsl
icebp
jmp
and
pop
mov
hlt
mov
inc
mov
in
adc
daa
iret
fs
mov
stc
aad
jg
pop
dec
popf
xchg
aad
fdiv
sub
mov
xlat
cmp
cmc
xchg
xor
adc
inc
inc
mov
out
cmpsb
push
cmp
daa
or
and
popf
mov
out
mov
out
arpl
mov
psllw
das
jno
dec
popf
sbb
clc
shll
mov
xchg
push
aam
cld
mov
sbb
idivb
ffree
data16
push
pop
loop
test
mov
push
dec
and
lock
fidivrl
or
jbe
cmp
shll
out
hlt
int
adc
ss
in
xchg
icebp
shufps
cwtl
inc
ret
pop
mov
push
push
shll
test
shl
into
xchg
iret
and
inc
subl
shl
push
adc
subl
dec
mov
adc
test
mov
and
test
out
rorb
xchg
out
shl
push
stos
sub
incl
ficomps
adc
pop
fistpl
jmp
add
cwtl
pop
mov
add
loope
ficompl
mov
addb
ficoms
test
mov
sbb
jae
mov
pop
mov
mov
xor
hlt
data16
in
and
adc
pop
stc
sbb
cmp
pop
mov
out
jo
xorl
gs
mov
pop
fldcw
sub
ljmp
inc
add
arpl
mov
fisttps
int3
pop
pop
lods
cmpl
adc
and
mov
lock
stos
pop
cmpsb
sti
mov
sbb
mov
popf
mov
out
aas
cmp
das
fstl
mov
and
insb
mov
cmp
jle
ss
sub
out
enter
push
stos
pop
test
pop
xchg
jnp
inc
scas
test
outsl
out
stos
adc
movsb
mov
cwtl
roll
fnstcw
movsl
push
pop
and
outsl
xor
cwtl
cwtl
push
dec
call
nop
dec
pushf
sahf
imul
orl
pop
or
ljmp
cmp
pop
cmpsl
out
jmp
repnz
js
popa
sub
push
or
loopne
aam
lock
aam
or
stos
sbb
mov
fbld
out
dec
cmp
cmpsl
loope
sbb
test
pushf
sti
pop
jns
fcmovne
xor
jp
mov
pop
sbb
dec
pushf
test
dec
int3
mov
mov
cwtl
ret
jle
pop
push
ds
or
aad
std
ljmp
or
sar
std
xchg
cwtl
push
test
fnstenv
xchg
xchg
jge
lock
push
xorb
sti
jl
or
pushf
jno
fidivrs
cli
lcall
jle
sub
inc
movb
mov
add
je
outsl
jb
aas
jl
cmp
push
imul
jp
fcomps
outsb
xchg
lret
pop
ret
adc
pop
ja
inc
maskmovq
adc
in
push
xchg
cltd
push
lahf
and
daa
jne
dec
pminsw
xor
cmpsl
orl
add
xor
add
mov
or
jge
cmpsl
add
int3
test
cmp
out
push
pop
es
xor
mov
aaa
sbb
push
subl
dec
icebp
sbb
mov
xchg
fcomi
fdivl
xor
mov
aad
or
repz
rcrl
test
dec
pop
pop
add
outsb
lret
ror
mov
and
repz
movsl
divl
jnp
inc
cmp
in
testb
cmp
mov
in
aad
fistpl
pop
mov
fisttpll
aaa
lds
daa
dec
push
mov
dec
sbb
dec
add
jl
nop
in
adc
decl
sub
xor
out
sbb
inc
ffree
jle
dec
fsubs
pop
mov
sbb
mov
push
movsb
fldl
add
into
xchg
outsb
mov
lods
xchg
cmpsl
mov
xchg
insb
sub
push
mov
sti
push
cmp
pop
inc
sub
dec
call
cli
mov
mov
jecxz
push
jp
cs
loope
repz
test
cmp
shl
nop
iret
xlat
mov
loopne
lods
mov
fistpl
pop
sbbb
pop
mov
mov
sub
sti
push
mov
mov
sub
xchg
mov
jge
sub
mov
inc
lea
push
out
xor
dec
mov
xorb
mov
mov
stos
mov
xchg
cmp
fs
sub
mov
lahf
mov
das
mov
dec
loope
jo
xor
and
pop
jne
push
fnstsw
aam
fistps
jmp
insl
fwait
push
mov
xor
and
pop
shrb
lret
insb
cmpsl
xchg
in
lods
xor
lds
cwtl
repnz
lods
pushf
gs
xor
mov
shr
pop
pop
mov
enter
daa
mov
sbb
lea
andl
fdivs
in
pop
insl
lods
inc
push
or
out
scas
or
pop
pop
pop
add
xchg
fwait
pop
enter
sbb
cmc
flds
add
add
rclb
int3
mov
inc
cmc
sbb
lret
fwait
into
pop
jl
cltd
repnz
ret
push
cmpsl
popf
gs
stc
push
sbbb
or
fmul
dec
push
lods
dec
push
mov
jne
cld
in
out
je
mov
mov
mov
enter
push
push
jp
xor
and
movsl
sbb
jbe
jp
enter
sbbl
lahf
jp
icebp
and
mov
mov
arpl
sbb
mov
adc
lcall
inc
add
jp
jl
cmp
in
dec
outsl
mov
mov
mov
jge
jo
cmp
stc
imul
shlb
lret
call
ret
inc
jp
lods
mov
fildl
popf
mov
xchg
fists
cwtl
adc
jmp
popf
lahf
hlt
popf
shrl
adc
aaa
cmpsl
cltd
enter
xchg
or
fsts
sti
push
inc
outsb
or
xchg
call
pushf
dec
dec
dec
inc
xchg
lret
mov
jnp
sbb
xor
mov
cwtl
mov
cmpsl
sbb
faddl
dec
sub
je
mov
cmpsl
enter
inc
pop
ds
adc
mov
in
pop
xchg
sub
or
sub
lods
ljmp
xor
in
inc
jl
xchg
outsb
mov
mov
adc
sbb
in
sbb
cli
imul
push
inc
xor
inc
sbb
mov
mov
insb
cmp
jno
std
jecxz
imul
hlt
jnp
sub
mov
or
cmpsb
pop
pop
push
sbb
lea
add
push
xor
jbe
add
int3
mov
pop
sbbb
add
pop
lds
cmpsb
cmp
xchg
js
mov
mov
loope
dec
loop
jo
sub
cwtl
add
inc
aad
jmp
rcr
sub
pavgw
cwtl
add
add
sub
outsl
andb
loope
mov
jnp
cld
lret
sub
xor
rcrl
nop
mov
jns
mov
addr16
mov
push
mov
jge
mov
lock
pop
inc
idivb
adc
pop
loopne
out
arpl
in
call
addl
xlat
adcl
fmuls
push
sahf
lods
fwait
mov
xchg
lods
insl
sub
test
jae
mov
inc
outsb
pop
test
ss
adc
cs
xchg
test
mov
xlat
or
and
ljmp
sub
addr16
jns
dec
mov
data16
fcos
jp
lcall
mov
and
data16
je
pop
pop
js
or
fdivs
mov
dec
inc
int3
push
xchg
cmp
cli
in
pop
xor
std
add
fcompl
lret
imulb
loope
add
pushf
cmp
pop
sub
add
mov
in
inc
dec
cmp
enter
xchg
imul
mov
inc
ret
mov
xor
xchg
scas
call
mov
mov
repnz
insl
xchg
loopne
inc
sub
je
jp
adc
inc
mov
daa
add
sbb
int
adcb
and
add
fsubr
push
add
shll
aas
das
popa
fimull
add
pop
scas
mov
sbb
add
add
sti
enter
jge
add
mov
cmp
push
outsb
outsl
jne
mov
push
sbb
lahf
jbe
xchg
jle
sub
filds
iret
push
pop
jno
pop
lahf
xchg
jo
xchg
cmp
and
mov
adcl
icebp
cmp
int
aam
mov
daa
in
lods
rclb
icebp
inc
scas
popa
inc
mov
ret
mov
push
idivb
cmp
lret
mov
in
push
shrl
jp
rcl
orl
dec
xchg
inc
sub
ror
imul
sbb
rcrl
popf
clc
mov
mov
aas
loopne
push
cmpsb
cli
shll
sbb
xchg
add
or
pop
mov
push
rep
aas
jmp
and
call
adc
cmp
sub
or
push
stos
and
cmp
stos
cmc
sub
adc
repnz
adc
fimull
adc
sub
mov
xchg
popa
xor
mov
jno
push
mov
or
imul
jp
add
push
aaa
mov
xchg
movsb
popa
sbb
and
jg
int3
mov
adc
or
fs
jbe
push
out
pop
mov
jmp
test
fwait
sbb
pop
cmp
in
fsts
inc
cld
mov
xchg
nop
rcrl
mov
stos
cmc
jbe
ret
xchg
sbbl
aas
cmp
mov
jno
cli
sbb
xchg
mov
mov
sbb
stos
jns
mov
imul
jns
je
lock
fdivrp
das
or
sbb
xor
sub
fsubrl
xchg
test
pop
mov
push
pop
sub
sub
push
lock
call
ds
clc
push
les
mov
out
arpl
mov
push
and
repz
sub
cmp
fcomip
mov
sbb
inc
cmp
movzwl
mov
insb
loopne
aas
pop
pop
test
xchg
fsubrs
mov
dec
in
jne
flds
jmp
fisttps
xchg
pop
jge
adc
jge
imul
scas
ret
shlb
pop
sub
cmp
adc
xor
jne
adc
loopne
in
cmpsl
push
pop
cltd
sub
ffreep
xor
push
mov
sub
int3
dec
pop
imul
data16
pop
mov
fists
js
inc
sub
rep
test
outsl
and
add
mov
dec
test
pop
adc
out
sahf
lea
mov
roll
mov
repnz
fsubrs
out
inc
xchg
xorb
test
into
dec
push
cwtl
jns
cmpsb
xor
xor
sti
pusha
imul
and
jae
and
andb
sbb
cmpsb
inc
inc
in
lcall
sbb
push
pop
sbb
inc
mov
lods
test
test
or
jne
pop
inc
cmp
repnz
lea
daa
test
mov
jmp
cwtl
fdiv
in
movl
jo
dec
rclb
mov
mov
cmp
mov
ss
loop
inc
cwtl
mov
sbb
inc
scas
cmp
cs
mov
add
inc
sub
adc
test
rclb
scas
lahf
test
pop
xor
sar
cmp
movsb
idivb
ja
shrb
mov
insl
sbb
push
xor
repnz
jbe
sti
out
and
es
pusha
daa
out
push
cmp
mov
mov
mov
xlat
mov
pop
ljmp
iret
imulb
push
cli
inc
clc
sahf
out
jp
pop
lret
mov
mov
push
movsb
stc
je
shlb
mov
or
cmp
mov
dec
sahf
sbb
push
js
stc
jnp
sahf
adc
xor
or
cmp
and
adc
dec
repz
jns
push
pop
push
pop
add
es
sahf
cmp
mov
fsubrl
fdiv
mov
pop
scas
adc
inc
mov
inc
pop
pushf
call
ret
int3
push
cmp
fsubrs
inc
stos
andb
test
mov
ret
in
push
lea
sub
mov
xor
in
sub
pusha
push
in
jecxz
enter
inc
frstor
imul
loope
mov
mov
test
cmp
inc
dec
jns
pop
push
jb
xchg
roll
mov
or
xchg
xor
sbb
mov
std
pushf
xchg
or
adc
and
sub
push
fists
fidivrs
adc
in
ss
xchg
fcoms
jnp
pop
dec
push
lret
mov
addr16
xor
sbb
push
mov
fwait
mov
fisubrs
pop
mov
pop
hlt
jbe,pt
jl
pop
xchg
clc
cmp
adc
fwait
mov
ds
out
sahf
inc
fidivs
aad
ret
inc
mov
jle
push
add
pop
xor
sbb
rcrl
sahf
sub
mov
sbb
sub
jo
xchg
add
sub
and
push
cmpsl
outsl
loope
mov
loopne
call
fdivrl
cwtl
repz
push
out
gs
arpl
pop
cs
mov
orl
ja
and
or
popa
jae
dec
scas
inc
adc
loop
push
dec
sbb
sbb
mov
jbe
pop
or
and
jne
out
xchg
sub
fsubrl
stc
bound
inc
mov
lcall
aaa
rolb
mov
jg
xor
daa
in
and
scas
ja
push
icebp
in
mov
xchg
xor
xchg
push
outsl
or
dec
or
cmp
jge
push
xor
cmp
pop
pop
and
scas
shrb
xchg
lret
mov
jge
lock
dec
call
pop
inc
and
mov
lock
xchg
lret
jge
and
pop
jg
in
cmc
and
inc
mov
fs
sub
repnz
jae
inc
xor
pop
xor
subl
repnz
es
movsl
xchg
shrl
aaa
loop
add
push
sahf
push
js
scas
lods
sbb
insl
pop
cld
push
xor
fs
sti
enter
mov
jb
cltd
in
cmpb
mov
sbb
loop
lahf
fnstenv
cmpsb
faddl
dec
push
sbbb
adc
push
outsl
sahf
push
push
sahf
lahf
sbb
adc
adc
fisubrl
cmp
jmp
cmp
jae
out
in
or
mov
dec
int
jmp
mov
fldcw
ljmp
lret
rorb
inc
jmp
push
loopne
es
test
mov
cmp
pushf
cmc
push
mov
aaa
pop
cld
dec
jae
jnp
mov
mov
sub
jno
lea
cmp
mov
or
lods
mov
cmp
outsl
lret
in
xlat
sub
adc
incb
popa
lahf
movsl
addr16
popf
movsl
dec
aad
cli
xchg
sbbl
jno
xor
dec
popf
arpl
pop
sbb
loopne
aam
inc
js
mov
test
sarl
pop
inc
icebp
ds
inc
pushf
sub
test
dec
mov
sub
arpl
pop
and
add
ds
push
sbb
gs
inc
inc
out
js
xchg
je
mov
inc
or
adc
imul
and
mov
icebp
xor
repnz
dec
jmp
jns
out
xor
stc
inc
adc
mov
insb
and
loopne
mov
xchg
les
adc
jnp
cmp
mov
mov
scas
jns
iret
pusha
cwtl
xchg
cld
movsb
push
push
stos
mov
mov
push
mov
or
jecxz
xchg
mov
mov
stos
xchg
in
adc
sub
push
xor
xchg
pop
cli
sub
out
dec
rol
js
add
jmp
mov
jnp
jns
data16
push
movsl
rcl
pop
pop
imul
aaa
std
xchg
outsl
jmp
in
out
dec
out
imul
sub
jle
lret
call
and
push
dec
cmpsb
imull
loop
and
push
sbb
cmp
lock
push
push
out
push
fistl
jecxz
inc
push
movsl
mov
mov
fsts
bound
jo
push
out
inc
movb
jno
adc
inc
xorb
and
mov
push
ret
lret
test
mov
mov
sbb
lods
add
sahf
psraw
jg
je
or
sub
test
cmp
pop
mov
out
mov
adc
js
push
mov
pop
xor
outsl
je,pt
push
sub
scas
imul
arpl
sub
jmp
movsb
ss
cmp
adc
jae
mul
in
or
xor
inc
mov
sbb
pop
sub
outsb
inc
fs
push
loopne
push
adc
add
jo
jb
cmpsb
cmp
or
enter
fisttps
mov
mull
out
mov
jnp
inc
push
dec
pushf
ret
loope
mov
subb
andl
rclb
xchg
pop
ljmp
daa
push
stos
sbb
cltd
aas
stc
add
fistpl
pop
test
sbb
sarb
push
pop
outsb
fidivrs
sbb
mov
movsb
out
xchg
cs
adc
push
sbb
xchg
in
jo
sbb
add
aaa
xchg
les
stc
and
jo
mov
cli
and
jecxz
data16
lret
cmp
clc
addl
clc
mov
mov
cmp
inc
jno
addb
test
add
push
loope
stc
stos
stos
fcmovnbe
repz
ret
pop
push
xchg
in
sub
ficoms
sbb
xchg
pop
xchg
mov
leave
fmull
mov
sub
dec
adc
js
sub
pop
sbb
jmp
ja
inc
push
or
push
std
inc
imul
stos
mov
sbb
jns
adc
inc
jmp
mov
jp
adc
sub
push
jmp
add
ss
out
test
outsb
sbb
adc
pop
cs
sbb
sub
inc
mov
rcrb
xchg
cmc
test
rorb
sbb
push
repz
or
fistl
and
jns
ss
jle
ret
add
outsb
ljmp
clc
mov
aad
les
fwait
cmpsb
jns
ljmp
mov
jecxz
arpl
mov
cmpsb
test
popa
xchg
mov
je
jae
lds
mov
and
orl
mov
stos
mov
and
mov
mov
sub
cli
fstpl
xchg
dec
jno
cmp
mull
int
xor
jecxz
and
stc
fisubl
fildl
gs
xchg
lods
out
stc
adc
mov
xchg
jl
lea
inc
mov
dec
dec
ds
mov
adc
mov
js
scas
mov
es
inc
push
imul
stos
dec
fcompl
add
xlat
jecxz
adc
bound
daa
push
push
pop
push
lret
cmp
rclb
xchg
ficoml
jg
inc
addr16
cmp
xorb
push
dec
clc
inc
push
cmp
shl
ret
loop
and
data16
mov
mov
and
cs
jl
jl
testl
addb
pop
adc
aaa
pop
das
out
hlt
sbb
xchg
pop
xchg
jecxz
loop
enter
or
jne
inc
int
pop
ljmp
loope
clc
stc
mov
jmp
jmp
in
aaa
fldcw
dec
xor
lea
mov
sahf
mov
pop
ror
cmp
enter
fistpll
xor
xor
andb
mov
daa
and
test
in
fsubrs
push
add
push
lods
je
mov
ja
push
and
cs
pop
les
pop
les
gs
int
push
cmp
clc
popf
call
xor
jle
xchg
mov
add
cmpb
sbb
mov
lods
or
pop
mov
scas
xchg
call
lods
icebp
push
pop
js
jge
xor
fstpt
push
pushf
and
sbb
mov
in
xchg
ss
mov
add
cmp
xorb
or
lods
jnp
jmp
out
std
cli
pop
inc
or
jb
loop
cmp
es
adc
lock
mov
or
aam
xor
dec
or
mov
pop
xchg
popf
cmpsb
sbb
pop
add
shl
icebp
push
jl
push
pusha
xchg
push
mov
ja
inc
out
imul
inc
add
je
ja
pop
mov
push
inc
subb
ljmp
push
scas
mov
push
sar
data16
or
or
mov
push
idivb
cmp
test
mov
add
dec
test
xlat
add
fstpl
sbb
divl
rcrb
jl
imul
jbe
sbb
ret
jne
cltd
call
xor
mov
jp
sub
loope
fcmove
into
dec
xor
out
aam
bound
mov
ret
sbb
pop
add
sub
fstpl
push
or
inc
push
into
and
cli
popa
xchg
into
leave
enter
add
clc
cmc
aad
cmp
daa
loop
push
adc
jae
imul
stos
xlat
cmp
scas
sti
pop
stos
faddp
mov
stc
insb
mov
push
fmulp
lahf
push
lea
cmp
mov
in
pusha
mov
push
mov
xchg
imul
test
pop
pop
ret
mov
movsl
fs
push
ja
jle
mov
or
xlat
cmp
ret
sub
dec
movsl
jp
stos
into
popf
jmp
and
xorl
or
push
ret
and
repz
mov
add
lods
into
xchg
imul
lcall
adc
mov
inc
mov
sub
imul
push
push
jg
inc
int3
pop
mov
enter
mov
daa
xchg
out
push
mov
push
int
nop
mov
cmp
or
mov
jle
jno
insb
mov
add
adc
imul
movsl
xor
cmpsl
add
icebp
sbbb
lret
lahf
mov
das
sbb
shlb
or
enter
xor
aas
and
repnz
dec
adc
pop
movsb
lcall
iret
push
sbb
or
push
fsubrl
jns
cwtl
fsubrs
out
loope
aam
out
or
fcmove
cmp
push
lock
add
ffreep
js
repnz
or
shll
pop
xor
rclb
pop
stc
dec
push
aam
mov
xchg
xchg
push
adc
and
ljmp
fwait
lock
xchg
fsub
bound
inc
sub
aas
add
xor
pop
mov
in
pop
imul
andl
test
cmp
dec
enter
push
fiaddl
cmp
cmpsl
ret
xor
cmpsb
bound
push
insb
inc
xor
inc
push
sbb
jnp
arpl
jg
aad
adcb
jne
fldenv
mov
pop
dec
or
out
sarb
xchg
push
cmp
mov
sbb
bound
lock
or
xor
sub
xlat
ret
scas
mov
xchg
loop
pop
dec
and
dec
xor
xchg
popf
mov
jae
dec
xchg
out
dec
push
ds
shll
dec
mov
out
pusha
pop
shr
pop
test
shrb
fs
cli
and
into
out
iret
jne
dec
push
out
push
shrb
sub
jnp
sbb
stos
jne
dec
add
mov
xchg
mov
sbb
xchg
mov
aad
jb
test
jp
lret
lods
fildll
jb
sbb
scas
je
fisttpl
sub
xchg
cmp
sbb
mov
inc
insb
adcb
jb
ss
scas
pop
sbb
inc
imul
inc
mov
sub
and
rorl
and
xor
push
std
int
jmp
pop
dec
in
cmp
push
sub
sub
pop
inc
sub
xchg
lds
jmp
clc
fwait
cmpsb
mov
sub
jne
fsub
pop
gs
inc
mov
add
adc
xabort
pop
jmp
das
pushf
dec
mov
dec
jge
std
pop
mov
dec
sub
scas
adc
shlb
jae
outsb
jns
jns
fbstp
xchg
pushf
daa
cmpsl
fistpll
std
mov
das
and
mov
sub
stos
mov
div
inc
fbstp
push
pop
loopne
jno
in
popf
mov
shlb
dec
ret
in
cmp
mov
dec
xchg
loop
mov
jbe
out
xorl
int3
or
mov
popa
es
outsl
jnp
push
popf
jmp
xlat
ss
adc
lret
jne
or
arpl
call
cwtl
loopne
psubsw
scas
es
dec
push
cltd
adc
scas
repnz
subl
loop
pop
fucomp
inc
sbb
adc
mov
push
decb
scas
and
lcall
nop
push
int3
sbb
mov
push
shrb
lret
insl
cmp
inc
mov
mov
sarl
mov
aam
pop
push
xor
add
loop
stos
fwait
mov
push
lret
push
add
nop
or
test
popa
popf
shll
and
jns
ficoms
inc
rcll
in
out
jbe
pop
xor
call
sbb
mov
test
js
jbe
dec
bnd
adc
sub
inc
nop
sti
stos
sar
dec
mov
sub
movsb
stos
jo
adc
pop
and
clc
xor
or
and
fsubrs
test
imul
add
jo
js
popa
push
adc
sysexit
add
lret
ljmp
inc
loop
test
inc
mov
xor
adc
sub
clc
dec
jp
push
dec
cmp
popf
add
out
cmp
lods
jno
sti
out
and
or
test
sub
push
or
jmp
clc
repz
xchg
mov
ljmp
nop
mov
jns
mov
into
push
out
fsubrl
fbld
mov
mov
in
roll
lods
ja
xchg
cmp
jl
push
aad
icebp
or
jge
loope
pop
cwtd
and
in
movsl
daa
push
scas
int3
add
stc
cmp
cmp
inc
and
cld
and
lret
xor
frstor
repz
scas
pop
push
repnz
es
push
lret
push
cmc
stos
fs
test
sbb
outsb
dec
pop
mov
mov
sub
mov
fadds
cmp
or
add
out
add
xchg
jnp
cld
push
jecxz
pop
sbb
pop
mov
shll
and
jno
add
les
fstpl
adc
push
test
pushf
subl
icebp
loope
repnz
aam
int3
clc
dec
ret
inc
enter
xchg
cmp
lcall
pop
dec
sub
xor
in
xchg
out
or
mov
xor
adc
dec
stos
xchg
xchg
pop
xchg
fdivrs
jno
push
add
inc
fsubrp
pop
cmpsl
test
or
dec
mov
sub
jb
or
jne
scas
cltd
pop
lahf
fwait
in
int3
sbbl
cltd
adc
pop
cmp
sarl
ss
or
popf
fisttps
les
daa
add
pop
xor
rcl
les
fwait
jp
imul
fcoms
popa
jbe
mov
mov
mov
rcr
subl
lods
sbb
jb
int3
or
pusha
es
ret
test
lret
mov
xchg
mov
sbb
test
fnstsw
shlb
scas
cld
int
cmc
leave
push
dec
push
sti
mov
pop
adc
mov
dec
rorl
lods
ljmp
sub
inc
xor
js
sbb
ss
cmp
adc
mov
jnp
inc
pop
mov
ds
or
cld
dec
into
sub
mov
dec
sbb
mov
jo
outsb
push
icebp
lcall
jg
es
pop
fmulp
mov
clc
fstpl
pop
orl
outsl
in
cmpsb
dec
jl
stos
repz
cmp
or
inc
shrb
loopne
push
hlt
mov
int3
mov
jnp
pop
mov
sub
jno
inc
pop
mov
call
popf
sub
ss
or
sub
and
jl
add
push
sbb
lods
pop
fsubrl
sahf
test
iret
dec
and
in
jno
enter
hlt
cmp
out
push
push
sbbb
scas
adc
sbb
push
loop
insl
sub
add
or
rcll
mov
add
fdivr
cmp
push
jl
or
xor
loope
dec
fs
xor
int3
xorl
fwait
mov
dec
fimuls
push
insl
and
mov
cs
rcrl
push
jae
in
out
mov
lods
or
pop
lea
loop
adc
and
pop
mov
decl
cld
int
les
cmc
xor
mov
xor
nop
outsl
dec
fs
push
jle
lea
addb
test
push
sub
mov
mov
jae
mov
fs
push
es
lods
enter
inc
cmpsl
roll
and
mov
aam
int
movsl
push
mov
xchg
push
rorb
daa
mov
push
lea
ret
and
inc
hlt
js
mov
xchg
movsl
push
addl
arpl
mov
xor
adcb
clc
cltd
inc
test
es
adc
in
xchg
sub
dec
mov
icebp
mov
xor
xor
arpl
jl
enter
cmp
pop
fs
pop
jmp
imulb
pop
xchg
sbb
and
je
mov
push
adc
ds
pushf
or
in
std
outsl
pop
lea
mov
mov
fidivrs
cltd
ret
test
mov
sbb
std
mov
add
fldl2t
cmp
fidivrs
repnz
push
popf
psubd
push
cmp
xchg
mov
clc
outsl
outsl
or
out
gs
rcrl
ja
ret
jmp
dec
repz
jo
lea
out
jp
sbb
sub
movsl
fnsave
or
jb
cmp
mov
call
sub
imul
lea
jns
rcl
mov
dec
jne
lds
dec
sub
orl
hlt
arpl
movsl
ds
add
icebp
clc
inc
aaa
push
shrb
inc
movsb
cmp
mov
push
cmp
iret
jo
push
jle
je
imul
inc
jg
test
add
daa
or
mov
int3
test
jns
insb
xor
test
jae
jp
push
jns
sarl
outsl
jne
or
mov
ficompl
orb
inc
movsb
aaa
fnstsw
and
and
test
lcall
jnp
lea
ja
xorb
xchg
jecxz
je
pshufw
shl
sbbb
nop
mov
inc
xchg
or
aaa
sub
pop
out
dec
out
stos
adc
ret
and
arpl
scas
out
pop
mov
xchg
mov
add
sbbb
xchg
push
cmp
iret
fsub
sub
jp
sbb
in
int3
cwtl
sub
testb
push
dec
lahf
mov
or
push
ret
fiaddl
mov
and
add
es
pop
mov
cltd
lock
push
sub
mov
push
fsubl
push
sti
or
xchg
lea
or
jge
mov
movsb
sbbb
dec
add
inc
dec
in
outsb
aaa
adc
or
pop
out
jl
jae
dec
sub
ds
jecxz
jb
imul
push
into
inc
addb
push
or
sub
in
sbb
stos
loop
or
cmpsb
cwtl
xchg
add
fdivr
shll
lret
adc
push
sarb
xchg
shr
fdivrp
das
ja
adc
aas
enter
pop
inc
icebp
mov
xchg
stos
xchg
in
leave
jge
mov
jg
mov
cltd
xlat
push
or
mov
xor
xchg
fisttpll
pop
data16
or
clc
cmpsb
rol
dec
rclb
adc
dec
lds
lds
mov
inc
cli
lds
cmc
jmp
and
push
jmp
cli
mov
add
pusha
fbld
icebp
stc
and
push
lret
sbb
rolb
rcrl
call
jle
pop
or
stos
xor
mov
out
mov
out
or
mov
arpl
rol
sar
out
fldt
push
add
push
inc
adcb
mov
push
subl
xchg
rcrb
mov
and
or
lds
js
pushf
shrb
addr16
lret
mov
test
mov
loope
nop
add
dec
mov
in
shld
and
aaa
jl
push
cwtl
cmpsb
sti
push
jbe
subb
arpl
and
fisttpll
fstps
pop
lret
test
xchg
xchg
mov
negl
loop
mov
pop
cltd
aas
jp
push
bound
sbb
mov
cmp
lret
icebp
loop
push
fbld
stos
leave
test
aam
inc
jb
movsl
jo
in
mov
xor
jbe
and
mov
ret
pusha
jns
push
sub
and
rorl
mov
mov
or
push
in
cmp
jno
cld
insb
aaa
cmc
leave
lahf
sbb
add
cwtl
inc
mov
test
push
xor
push
in
mov
dec
dec
in
add
mov
cmp
mov
addr16
js
mov
sub
pop
xor
call
cmpsl
xchg
test
and
sub
inc
or
repz
addl
add
push
jmp
adc
in
ret
push
pusha
adc
fnstenv
push
cmpsb
stc
ret
or
das
mov
ret
jnp
xor
xor
hlt
cmpsb
sbb
mov
arpl
push
add
cs
or
popf
std
nop
arpl
mov
cwtl
ret
cltd
int3
fstpt
or
xor
lods
jbe
push
xchg
call
mov
ds
pop
cmp
es
das
adc
addl
out
xchg
jae
cmp
stos
es
mov
sub
dec
in
icebp
clc
ret
fimull
xor
push
mov
sahf
jmp
lds
mov
in
pop
push
sahf
pop
insl
test
aad
cmpsl
mov
stc
mov
dec
dec
in
inc
add
jns
mov
adc
inc
mov
jge
dec
and
outsb
push
push
jb
movsl
sbbl
aas
int
imul
mov
or
sbb
js
ret
adc
aaa
bound
jnp
cltd
or
sub
ror
sub
shlb
pop
iret
and
ss
cmpsl
iret
dec
aaa
lds
daa
push
dec
xchg
fs
fcmovnu
popa
cltd
pop
xor
inc
mov
stos
out
mov
xlat
add
xor
lock
push
sbb
xchg
mov
mov
jo
adc
add
xchg
rcr
mov
jecxz
mov
gs
cmp
cmp
testb
jno
cltd
sarb
dec
mov
fwait
jae
xor
ret
daa
nop
add
pusha
inc
ljmp
bound
sub
jbe
out
andb
xor
xchg
repz
cs
add
mov
shrb
jbe
xlat
sub
xchg
xchg
or
xlat
push
out
or
push
cmc
fmull
and
in
ret
fsubl
inc
shll
repz
sub
lahf
adc
rol
and
aam
xchg
je
aad
mov
push
jo
dec
hlt
mov
cwtl
cli
xor
jle
inc
mov
add
and
fistl
sub
adc
inc
mov
dec
mov
jg
sub
out
rclb
mov
shlb
sub
outsb
repz
fistl
arpl
xor
adc
fstps
xchg
push
cmp
sbb
dec
bound
and
or
xor
cmp
flds
lds
pop
test
adc
divb
fmul
push
push
or
addb
add
aaa
jno
pop
jecxz
lds
imul
or
test
cmp
or
pop
xchg
mov
in
test
shlb
push
xchg
fwait
mov
push
cmp
aad
imul
jmp
jns
rclb
xchg
mov
mov
or
inc
sti
stc
xor
or
xchg
sbb
sbb
cmp
jno
push
loope
mov
leave
jmp
sub
or
inc
pop
hlt
cmp
rcrb
lock
xchg
inc
shlb
or
fwait
cmp
pop
push
adc
push
lcall
fstpt
cltd
fistpl
sar
push
push
xchg
ret
xor
mov
mov
adc
pop
in
xchg
add
add
hlt
and
hlt
sbb
xor
pop
mov
push
fstps
cltd
pop
popf
push
aam
sbb
mov
pop
dec
dec
test
inc
inc
pop
push
shrb
loope
and
dec
inc
adc
pop
sahf
mov
pop
xor
xchg
imul
jns
xor
aaa
push
inc
inc
jae
ja
and
cmp
shll
mov
xrelease
sub
out
loopne
sti
mov
and
cs
fnstsw
shrl
jecxz
lods
adcl
jg
pop
and
int
and
inc
xlat
ss
fs
out
jle
incl
ret
fdivl
mov
dec
lock
enter
pusha
loopne
cmp
push
xor
xor
dec
dec
fcmovb
pop
lcall
movsb
nop
sahf
pop
xor
mov
mov
cli
cmp
dec
cmc
push
inc
clc
mov
dec
iret
imul
repnz
stc
adc
mov
dec
cmp
scas
adc
or
mov
push
adc
pop
fs
enter
push
and
sub
sub
fcoml
inc
cmpl
jns
je
or
das
or
insb
add
mov
adcb
mov
xor
push
outsb
jb
repz
dec
out
fisttps
push
fwait
test
jne
insl
pop
dec
aaa
mov
leave
mov
scas
lahf
addl
add
into
repnz
in
sbb
xor
lea
out
sub
aas
add
push
clc
movsb
repz
aas
leave
jnp
gs
mov
and
inc
in
sbb
pop
and
cmp
pusha
test
out
and
mov
push
movsl
stos
sahf
lea
inc
ror
aas
icebp
pop
aad
mov
lods
mov
jnp
jl
push
rclb
lret
xchg
sub
rcrl
fimull
sub
pop
sub
jecxz
cmp
jbe
call
imul
xor
xchg
mov
test
daa
loopne
fdivp
test
sbb
xchg
xorl
jae
pop
mov
idivb
add
fildll
mov
xchg
jg
hlt
jbe
xchg
ret
pop
out
jnp
dec
mull
daa
cmpb
int
mov
dec
outsb
add
push
xchg
bound
and
and
ljmp
in
fs
cmp
roll
mov
pushf
addl
lods
nop
sar
mov
lods
les
fnstenv
xor
aam
repnz
adc
pop
jmp
popa
cli
sbb
rdmsr
jb
dec
cmpsb
mov
dec
out
les
cmpsl
mov
mov
aam
push
es
rolb
and
cmp
in
sar
sub
sarl
or
test
dec
shrl
cmpsl
sbb
lret
pop
cld
add
jae
cmp
jmp
sub
push
insb
ljmp
cmp
mov
or
out
lods
int3
and
pusha
pop
ds
inc
xor
mov
cmp
les
jae
lcall
add
cmpsb
jno
mov
sub
jbe
pop
mov
dec
cld
fists
test
pop
push
jo
mov
daa
lret
flds
mov
aas
add
rcl
lock
pop
roll
dec
mov
sub
cmp
cmp
pop
add
in
loop
inc
je
aaa
push
or
repnz
or
sbb
adc
lds
jecxz
cmp
mov
mov
mov
div
fwait
enter
stos
push
fldenv
dec
scas
js
and
add
add
cmp
xor
push
iret
lock
std
aam
les
je
sbb
sbb
or
loopne
shll
loop
add
ret
call
mov
dec
nop
jmp
or
sub
sbb
dec
insl
cmpb
std
push
dec
cs
jl
sarl
lahf
xchg
lahf
mov
sub
push
jecxz
scas
fidivs
hlt
subb
cmp
imul
inc
add
repz
jecxz
inc
repz
add
xor
mov
in
xchg
ret
cmp
or
or
bound
int
or
push
mov
mov
popf
pop
pop
and
lahf
or
push
mov
daa
mov
add
divb
mov
mov
or
xor
sub
fimull
shrl
mov
mov
pop
or
aam
xor
shrl
inc
divb
popf
loope
shrb
xor
jnp
bound
pop
jae
fsubl
in
adc
sarb
in
fcomip
pop
div
jl
shrb
icebp
lret
cmp
cmpsl
push
hlt
in
sub
lcall
xor
xor
mov
push
push
lahf
add
jbe
stos
dec
imulb
push
andl
mov
push
sub
sti
aas
inc
ja
xor
cmp
int3
notl
dec
pmaxub
xchg
outsl
adcl
add
adc
cli
test
mov
dec
or
rorb
xor
fwait
out
aaa
xchg
dec
jmp
mov
mov
loopne
aad
lret
pushf
xor
inc
pusha
pushf
loop
pop
mov
cmp
adc
pop
add
cmp
add
cmp
push
mov
mov
and
sub
stc
cmp
mov
mov
sub
fsubrl
sub
and
lcall
mov
ja
lds
out
jno
sarb
or
mov
lods
xchg
lods
ret
mov
mov
pop
xor
popa
in
push
xchg
stc
mov
mov
add
and
pop
cmp
div
mov
data16
cmpsl
jne
gs
lcall
jmp
jmp
mov
xor
push
or
adc
pop
lea
mov
pusha
addl
or
hlt
xor
pusha
xchg
jp
dec
lahf
clc
inc
and
inc
jge
pushf
test
js
stos
cmp
outsl
pop
mul
dec
shlb
lods
lcall
bound
xchg
inc
adc
in
push
ja
pop
and
mov
push
movsl
scas
mov
adc
loopne
and
lcall
in
aaa
and
cld
fwait
sub
cmp
inc
jns,pn
pushf
mov
xchg
jno
aad
xchg
sbb
cwtl
cmp
adc
push
in
pop
mov
pop
adc
incb
gs
sbbb
pop
nopl
and
sbb
sub
xchg
adc
mov
jg
mov
or
xchg
or
popf
sub
imul
ja
das
ja
out
pop
aas
xlat
cli
loope
repnz
aam
clc
pop
and
call
mov
gs
xor
add
mov
outsl
push
adc
pop
mov
scas
mov
jnp
stos
in
pop
mov
leave
aam
mov
inc
aaa
and
push
stos
fmull
fsubrl
ret
sahf
inc
push
inc
xor
sarb
cmp
jae
adc
loopne
lods
movsl
mov
pop
pop
int3
test
stos
inc
jne
fnsave
xchg
xchg
call
mov
xchg
call
pop
cltd
adc
into
mov
scas
push
inc
fidivrs
push
inc
es
jne
je
dec
test
cmpsl
int
mov
ret
dec
sub
mov
lret
push
mov
aam
test
xchg
inc
lods
mov
mov
push
pop
std
inc
lock
pop
daa
movsl
test
ret
lret
or
fistpll
lcall
orb
push
or
les
int3
jmp
inc
xchg
pushf
jo
dec
mov
and
push
adc
adc
xor
jbe
sub
pop
insl
imul
mov
mov
dec
leave
sub
adc
pop
jecxz
incl
pop
and
out
jp
dec
cs
scas
pop
pop
mov
fdivs
subl
mov
mov
jnp
mov
mov
jno
xchg
jg
jle
pop
arpl
lock
xchg
aaa
ret
int3
push
cmpsb
xchg
jecxz
pushf
dec
dec
sub
call
xlat
insl
sub
faddl
xchg
sub
cmp
cmp
dec
add
mov
push
in
jno
inc
cs
testb
sahf
xor
mov
dec
cmp
mov
dec
sub
cld
call
push
push
mov
mov
repz
or
test
lods
test
adc
or
jno
leave
xchg
jne
adc
ficomps
clc
pop
mov
imul
movsl
mov
sbb
mov
and
cmp
push
adc
mov
push
cmc
push
sub
pop
shll
dec
scas
mov
push
clc
test
out
dec
sub
or
mov
jp
adc
fs
cltd
adc
jns
cmpsl
lock
adc
and
mov
xor
or
xor
arpl
jmp
mov
stos
stc
pmulhuw
add
mov
cs
ret
iret
jecxz
or
mov
lods
inc
cmp
test
lock
je
cld
cs
inc
cmpsb
call
sbb
xchg
sbb
gs
lahf
scas
jne
rcl
jle
imull
fmuls
movl
movsb
jo
icebp
mov
cmp
cmpsb
mov
ret
push
test
push
fdivrs
ret
aas
stos
push
dec
sub
add
popa
mov
popf
sbb
cli
inc
je
mov
xor
bound
mov
inc
push
dec
fiaddl
repz
enter
aas
mov
jb
push
lea
loop
mov
lods
in
dec
push
aas
out
push
dec
fsubrl
push
or
shl
xor
xchg
adc
movzwl
movsl
mov
jbe
xor
mov
cwtl
push
scas
inc
cwtl
pop
lret
test
shlb
pop
shll
xchg
push
neg
ror
dec
xchg
in
int
xlat
sub
jbe
pop
mov
pop
mov
cli
mov
inc
shlb
mov
sbb
cmp
addr16
sbb
pop
sbb
rcl
ss
arpl
push
push
movsb
lods
out
cld
add
rcr
mov
jno
push
loope
adc
lret
inc
mov
mov
lock
sbb
rolb
imul
dec
in
jbe
push
push
mov
dec
inc
cmp
push
imul
pop
pop
inc
pop
imul
jl
enter
jle
mov
xchg
cmp
cmp
mov
loop
sub
ds
xor
movaps
sbb
popf
xor
cld
cmp
jle
imul
add
dec
stos
test
jge
cld
fiadds
icebp
or
arpl
out
xchg
xchg
out
push
xor
mov
fwait
out
xchg
pop
out
jo
mov
xchg
lods
push
icebp
add
rol
in
xor
scas
cli
pop
and
ret
lahf
push
sbb
adc
ret
pop
pop
je
jle
mov
add
dec
and
xchg
mov
xor
xor
jno
popf
or
jae
push
cmpsb
sub
pop
push
jle
es
dec
ds
jnp
push
xor
jnp
arpl
jmp
fstps
stos
pop
out
shrb
sti
mov
nop
out
stc
sbbl
sbb
es
int
mov
mov
adc
ja
out
xor
daa
mov
in
lock
xchg
rolb
dec
mov
fs
stos
xor
mov
in
ss
dec
test
pop
sbb
mov
dec
and
lea
xchg
ss
dec
mov
imul
ret
adc
push
cli
jnp
lea
or
cltd
pop
mov
and
outsb
in
mov
jle
imul
jmp
xchg
xchg
loop
inc
jbe
aas
out
push
or
out
cwtl
adc
pop
add
nop/reserved
pop
and
sub
adc
mov
and
insl
or
push
cmp
jmp
std
in
call
pop
adc
es
xor
xor
lea
mov
push
dec
add
std
xchg
or
andb
mov
push
adc
popf
and
sub
frstpm(287
out
jno
mov
mov
jp
xor
push
mov
xchg
icebp
and
out
xchg
call
pop
fs
or
cmc
es
inc
inc
sub
dec
sbb
icebp
cmp
inc
cmp
loopne
leave
scas
cs
dec
mov
mov
inc
push
xchg
push
test
mov
xchg
mov
fwait
lret
jo
jge
sbb
nop
outsb
gs
xchg
jmp
push
hlt
jecxz
jmp
push
mov
nop
add
imul
adc
xor
std
xchg
sbb
divl
jp
pmullw
sahf
ljmp
hlt
xor
xchg
test
inc
inc
dec
in
pop
lods
mov
cmp
mov
in
sub
mov
dec
sub
adc
cmp
jne
mov
cmp
in
ja
lret
loop
mov
mov
mov
pop
cmp
pushf
negb
pop
push
mov
adc
lret
push
adc
inc
es
repz
clc
xchg
dec
test
add
sahf
adc
mov
mov
and
or
in
imul
push
inc
arpl
lea
loope
push
add
sub
cwtl
xchg
xor
push
mov
or
sbb
inc
cmpsl
les
out
xchg
push
sbb
data16
inc
xchg
cmpsb
frstor
insl
jecxz
and
iret
iret
stc
sbb
sub
push
mov
pop
sbb
mov
mov
mov
addb
fstps
and
mov
xchg
andb
dec
push
aad
xor
xchg
pop
das
push
xchg
sbb
imul
out
daa
rclb
jge
inc
adc
push
sub
lods
je
inc
call
cmpsl
out
push
sub
sbb
std
call
test
xchg
mov
nop
xchg
add
or
addr16
adc
inc
fnstcw
sbb
ficompl
push
push
add
mov
and
mov
inc
mov
inc
mov
int
xchg
and
jg
inc
xchg
dec
jg
subb
sahf
dec
lock
push
push
dec
add
dec
pop
sub
or
lcall
cmp
in
mov
sbb
fmull
pop
popf
xor
mov
repnz
into
xchg
ret
das
sub
push
push
xchg
jle
and
int
shlb
add
mov
push
insl
cli
add
xchg
cltd
jnp
jg
xlat
clc
cmp
sar
sahf
push
xor
jnp
rcrb
ja
xchg
lret
es
pusha
pop
data16
and
lods
push
dec
jl
mov
pusha
and
bound
fcmove
inc
dec
inc
out
mov
cltd
insl
loope
imul
sub
stos
pop
push
stos
icebp
pushf
lcall
dec
or
inc
or
cmp
ucomiss
mov
fistl
pop
pop
call
xchg
jno
fsubr
pushf
inc
cmp
push
add
je
sahf
movsl
into
jo
in
sub
loope
xor
int
stc
pop
sub
sti
jmp
data16
stos
int
ret
jae
dec
movsb
sub
xor
add
jne
loope
adc
jl
pop
test
jg
inc
add
sbb
imul
push
inc
scas
sbb
jg
cmpsl
clc
sbb
mov
dec
test
jmp
scas
inc
pop
cmp
ret
aam
xchg
mov
jge
jo
fs
negl
imul
sub
arpl
mov
lcall
add
aas
inc
aam
push
icebp
push
xchg
lcall
xor
mov
out
outsb
dec
cmp
mov
imul
jae
int
mov
dec
sub
sahf
imul
nop
or
out
insb
sbb
into
dec
js
push
ret
push
es
push
loopne
pop
ret
adc
cmpb
jge
dec
je
or
xchg
push
fs
sub
test
adc
mov
scas
popf
rcrb
lock
pop
shl
rclb
test
pop
fsubl
push
push
inc
or
and
mov
scas
aad
fiadds
xchg
lods
sub
out
fldenv
lea
mov
fistl
ljmp
repz
and
js
or
mov
jge
xchg
jbe
xlat
add
or
mov
addl
mov
push
leave
jp
jns
xchg
mov
sub
stos
pop
stc
sti
xchg
repnz
dec
jle
bound
sbb
jb
mov
add
sub
push
shrb
in
adc
cmp
insl
adc
out
mov
rorb
in
cmpsb
jmp
sub
xor
mov
shlb
jmp
push
addr16
mov
scas
xchg
in
stos
xor
mov
or
fcomps
xchg
or
movsl
or
ds
shrb
and
ret
dec
jmp
sti
int3
clc
popfw
dec
pusha
xorl
jl
xor
pop
mov
addr16
xchg
loopne
in
pop
fcoms
jmp
int3
mov
sahf
add
adc
inc
fists
or
fisubrl
xchg
imul
ss
xor
sbb
dec
in
out
and
push
out
sbb
cmp
jl
rorl
mov
cmp
mov
add
sarl
mov
sub
cmp
pop
ss
int
shll
sub
mov
shrb
fistpll
mov
int
push
pop
dec
stos
callw
shl
call
fcoml
out
inc
push
pop
xchg
mov
aaa
add
outsl
shll
push
xor
gs
cs
cmpb
push
mov
or
inc
cmp
movsl
jle
loopne
xor
outsb
pop
sub
add
xor
out
adc
aad
subl
xchg
dec
dec
dec
popa
cld
jmp
mov
nop
and
movsl
scas
mov
push
cmp
popf
dec
inc
add
pop
js
sub
in
push
sahf
mov
pop
xor
mov
dec
cs
xchg
leave
jle
pop
sub
mov
ret
mov
mov
adc
adc
mov
mov
cmpsb
xor
andb
sbb
dec
std
call
xor
or
pushf
push
cmp
mov
push
out
sbb
scas
cmp
jnp
inc
idiv
data16
dec
shrl
push
icebp
or
xor
ds
push
adcl
push
fiadds
orl
mov
mov
roll
jmp
xchg
and
xchg
sahf
adc
outsb
insl
mov
adc
pop
lods
sbb
push
test
insb
insl
call
push
scas
popf
stc
and
or
push
dec
nop
dec
ss
mov
sub
orl
test
int3
jb
xchg
hlt
add
test
std
or
push
and
xor
mov
mov
cmp
jne
xchg
cmp
pop
jb
add
aad
mov
cltd
pop
int
icebp
mov
xchg
jg
mov
cmp
jb,pn
dec
testb
inc
addr16
adc
rclb
js
arpl
fwait
cmp
cmp
or
or
and
dec
cltd
stos
dec
subl
cmp
mov
push
call
loopne
bound
cltd
cltd
stc
outsl
and
jl
popa
sbb
jg
push
scas
in
jmp
test
imul
shld
xor
fnstsw
push
adc
mov
dec
push
testb
pushf
sub
pop
lcall
push
push
call
push
xor
clc
insl
mov
pop
cmp
loopne
sub
stos
jne
fcom
mov
in
fmuls
imul
pop
or
cmpsl
mov
add
lret
aad
pop
lret
xor
repz
clc
mov
sub
mov
or
push
ds
jg
or
add
mov
mov
lret
inc
sbb
dec
sahf
shll
add
inc
cwtl
sub
sbb
sub
test
js
mov
fldl
cmp
aam
adc
jecxz
stos
xor
jb
mov
and
sub
push
imul
mov
sbb
mov
pop
out
cmp
sbb
call
inc
test
mov
pop
dec
sar
cmp
loope
push
in
xchg
fsubl
inc
mov
pop
sub
mov
pop
sub
pop
cld
add
xor
mov
add
mov
aaa
xor
pop
and
add
ljmp
and
fiaddl
ret
jl
jns
push
push
jecxz
shrb
xchg
mov
fsubs
mov
lcall
add
pop
and
out
ret
mov
sub
subl
or
push
testl
outsb
jle
and
lahf
jns
js
mov
fsts
test
aaa
fstpl
aaa
or
les
sarl
mov
out
dec
inc
or
ljmp
cmp
out
cmp
adc
ljmp
ret
adc
or
or
pushf
jp
inc
or
sbb
xor
mov
dec
loope
enter
clc
insl
cmc
aam
es
jecxz
call
adc
sub
roll
fnstcw
ss
imul
push
push
ja
pop
sub
les
lock
out
sbb
add
push
jae
enter
daa
xchg
bound
and
lds
pop
jg
sub
pop
in
add
mov
jp
inc
fidivrl
shrl
pop
mov
or
arpl
jbe
or
enter
push
add
pop
mov
add
mov
mov
cmpsl
xchg
and
dec
adcb
repnz
xor
rcll
imul
mov
inc
cmp
mov
adc
insb
sbb
cmp
addl
and
or
add
jns
cld
in
dec
pop
xchg
test
cs
iret
movsb
jb
jno
xchg
sub
mov
push
cld
call
xor
lods
or
nop
or
mov
mov
test
or
daa
jecxz
adc
or
push
das
xor
stos
mov
add
mov
jle
jbe,pn
xchg
and
inc
shlb
jb
sahf
pop
mov
out
pop
mov
adc
mov
fwait
jp
icebp
stos
bound
jns
cli
fs
stos
out
jmp
movsb
scas
out
pusha
cmpsl
es
call
sbbb
jo
sarb
loopne
repnz
mov
shr
clc
les
pop
push
sub
aam
fcmovb
mov
loop
shlb
and
mov
stc
sbbb
inc
pop
or
in
sub
ss
xchg
mov
adcb
add
arpl
dec
lahf
mov
shll
aad
scas
xchg
ficomps
jg
dec
mov
ljmp
xor
test
adc
xchg
xchg
into
pop
aad
cmp
push
pop
and
iret
aam
negb
hlt
outsl
fcomps
sbb
adc
mov
add
ljmp
sbb
mov
scas
xor
inc
push
loopne
adc
pushf
mov
add
mov
or
in
sbb
outsl
jo
mov
jle
fsubs
sub
jno
sub
out
mov
jg
push
xchg
sbbl
mov
inc
mov
jae
cmp
sbb
shlb
sahf
add
test
and
stc
aas
add
cmpsb
setl
pop
adc
cmp
loop
cmp
and
stos
jle
lret
inc
pop
adc
aas
fs
jmp
testb
cld
and
addl
xor
imul
das
xchg
xor
sub
jl
or
jmp
cs
mov
addr16
daa
push
lret
das
pop
ror
xor
and
bound
xchg
dec
aaa
pop
aad
mov
scas
mov
lcall
dec
pop
popa
cmp
test
outsb
mov
frstor
mov
fcoml
push
and
ljmp
cmp
addr16
iret
aaa
rorl
or
cmp
mov
push
add
push
push
rclb
add
and
jae
ret
iret
decl
mov
jb
ret
inc
inc
in
int3
int3
clc
adc
andb
xchg
xchg
mov
mov
insb
lock
cmc
dec
fwait
lret
mov
push
mov
push
sti
push
xor
enter
test
cmpsb
inc
testl
adcl
faddl
js
sbb
pop
fbld
in
cmp
inc
repnz
pop
fnsave
jge
adc
jns
jne
sub
out
jns,pn
mov
inc
xor
and
cmp
lsl
sub
push
jns
popa
jne
mov
sbb
add
js
fsubs
add
and
in
lret
pop
in
ljmp
xchg
pop
push
das
xorb
mov
call
popa
mov
mov
stc
in
repnz
fbstp
orl
mov
stc
sub
inc
scas
sbb
cmpl
mov
stos
inc
cmp
xor
std
sar
jno
insb
mov
jb
arpl
fcomps
dec
and
inc
dec
sub
test
fstpt
aam
neg
mov
mov
add
jnp
mov
cmpsl
pop
mov
jne
push
mov
gs
and
mov
ljmp
stos
cmp
cwtl
shrb
mov
lock
jmp
or
cmp
pop
pop
jbe
fldl
jg
sbb
mov
sbb
cmp
lods
dec
arpl
adc
and
stc
cmc
test
dec
scas
clc
mov
jl
and
sti
jge
jno
lcall
orb
enter
inc
adc
adc
or
hlt
xchg
scas
pop
push
jne
or
mov
popf
sarb
mov
mov
jecxz
cli
lods
jecxz
ret
sbb
push
push
stc
sbb
mov
loop
inc
add
pop
adc
jmp
mov
mov
and
lret
in
mov
pop
pop
ret
je
aad
push
out
or
rcll
dec
movsb
in
bnd
mov
mov
cltd
in
xchg
fisttps
pusha
and
sub
mov
mov
repnz
lret
loop
aad
pop
jp
jecxz
fdivp
int
pop
mov
dec
jl
lahf
adc
xchg
dec
jmp
inc
jp
add
clc
into
pop
shr
orb
or
pop
pop
outsl
jnp
mov
lock
xchg
in
mov
add
bound
orb
mov
inc
sub
ja
pop
test
stc
pusha
pop
mov
js
inc
aam
cmp
notb
xchg
sahf
iret
push
sub
dec
iret
xchg
lahf
mov
aas
pop
xchg
out
pop
xor
fimuls
or
scas
adc
dec
dec
sarl
xchg
ror
in
mov
mov
iret
dec
ret
adcl
bound
jecxz
sbb
dec
adc
mov
jmp
in
insl
xlat
imul
fsubrl
mov
add
int
enter
out
adc
push
add
dec
hlt
adc
push
mov
dec
into
pop
inc
ja
imulb
push
test
adc
jg
xchg
push
fcmovb
sbb
inc
mov
test
sahf
dec
cld
in
sub
xor
and
inc
shll
xor
mov
movsl
adc
sbb
push
loope
mov
or
xchg
dec
mov
aad
sbb
adc
cmpsl
pop
or
push
xor
mov
imul
lcall
inc
fs
subb
and
out
pop
repz
sub
stos
xor
cmpl
cwtl
mov
lret
sbb
cmp
mov
pop
repnz
sbb
out
cld
cmpsl
pushf
orb
or
adc
inc
outsb
test
stos
mov
xor
push
in
xchg
jp
sub
lods
sub
adc
sbb
or
movsb
xorl
pop
lods
mov
jge
lods
sub
clc
aaa
fstl
int
leave
xor
jo
jge
call
lahf
aaa
mov
js
pop
out
stos
push
dec
jle
mov
lock
push
stos
push
jecxz
mov
push
lds
mov
jns
mov
testb
dec
sub
popf
rcrb
pop
imul
and
push
adc
ficomps
pop
cltd
rolb
mov
scas
push
fcmovb
add
pop
add
pop
gs
cmp
and
daa
add
adc
ret
xor
movsl
pop
popa
jae
pushl
outsb
pcmpeqb
lret
xor
push
leave
mov
cmc
pusha
in
xlat
das
sbb
xor
xchg
psubq
dec
xchg
mov
ror
inc
cmpsl
leave
movsb
cwtl
jbe
mov
mov
inc
lods
and
stos
rcl
push
inc
shl
jmp
mov
js
dec
inc
or
orb
leave
cld
or
xchg
mov
daa
or
jmp
iret
bound
in
cs
and
mov
jb
arpl
shr
loopne
mov
push
inc
in
cmp
push
mov
in
sbbl
mov
push
mov
adc
xor
add
cmp
fldenv
push
aad
lret
adc
add
jns
sub
enter
sti
bnd
cmc
cmp
shrb
call
add
or
or
mov
mov
cmc
fistps
cmovle
mov
int3
aam
jl
jno
gs
sub
hlt
es
jmp
push
adc
mov
push
mov
data16
scas
inc
inc
inc
out
mov
pop
mov
ds
push
aam
jbe
jbe
push
fcomps
push
aad
cmp
shlb
xor
sub
inc
loopne
aaa
gs
stos
icebp
jae
jo
mov
fwait
adc
sub
dec
negb
or
mov
jg
mov
or
cwtl
mov
iret
mov
jns
mov
sbb
mov
sbb
loop
ror
orw
pop
movswl
mov
and
mov
push
insb
or
add
xor
jo
mov
int
in
push
push
mov
pop
out
sub
dec
dec
insl
jnp
xor
scas
pop
jnp
divb
sbb
mov
cmp
insb
out
shlb
push
mov
cmp
outsb
sbb
sub
push
add
cmp
push
std
scas
repz
mov
and
push
jns
incl
loopne
frstor
xor
sbb
xor
loop
push
xchg
mov
repnz
ficomps
cltd
sub
fistpll
cmpsl
pop
and
add
add
rolb
cmpsl
mov
jno
shl
or
in
mov
inc
test
enter
aas
jg
ss
push
pop
cmc
push
jmp
mov
sbb
shll
jb
inc
sbb
pop
into
cli
aas
or
and
push
pop
jg
add
ja
out
xchg
mov
jmp
lret
or
inc
xor
pop
clc
add
nop
js
xchg
mov
fdivrp
fcompl
and
mov
cli
mov
cmpl
mov
dec
mov
adc
leave
push
cld
dec
enter
sahf
mov
sbb
sti
sub
in
lock
inc
sub
or
jmp
push
jb
lods
insl
aam
add
popl
add
add
add
in
lahf
lahf
and
sbb
add
fildll
inc
xchg
xchg
cltd
mov
fwait
jmp
loop
lea
push
cli
cli
ficoms
mov
jbe
shrb
push
or
fbstp
sarl
out
mov
push
loope
inc
sub
mov
inc
mov
dec
jae
dec
loop
jo
popf
orl
addb
jo
add
hlt
dec
push
test
inc
jg
dec
push
cli
jae
push
push
icebp
sub
or
test
test
cs
adc
jnp
fwait
bound
sub
adc
mov
xor
lret
pop
fwait
shlb
jg
inc
int3
mov
jne
or
mov
push
ss
scas
lock
inc
and
inc
ss
jmp
arpl
faddl
sbb
cltd
icebp
or
adc
lods
loope
je
pop
movsl
inc
imul
mov
mov
xorl
xchg
sarl
jnp
lock
fcoml
sbb
lea
xchg
sbb
loope
roll
xchg
cmp
push
fldcw
sti
andl
outsl
and
jbe
in
cmp
inc
test
cli
rol
jl
insl
lahf
leave
inc
in
mov
or
dec
or
fisubs
add
or
inc
or
repz
push
test
push
adc
jg
add
dec
aaa
or
mov
xor
mov
test
fstpl
pop
out
inc
or
pop
xchg
lret
pop
add
fnstcw
insb
sbb
imul
inc
dec
clc
imul
add
sub
cld
lods
sbb
inc
pop
adc
xchg
pop
cmpsl
push
sbb
cld
inc
adc
mov
int3
roll
cmp
jno
imul
add
mov
push
mov
fcmovnu
ss
push
enter
mov
es
pop
out
movsb
outsb
int
pop
es
xor
popf
roll
punpcklbw
add
cmp
into
mov
lds
mov
movsb
mov
in
mov
test
add
jne
xchg
push
push
cld
cld
mov
add
popf
out
cmc
xor
rorl
hlt
push
cmp
fstpt
dec
jns
loopne
sub
mov
xchg
adc
or
popa
mov
push
cmp
aas
sbb
vcmpss
lods
jl
out
xlat
imul
push
push
pop
dec
outsl
xchg
cltd
jnp
inc
mov
mov
sahf
cmp
dec
push
insl
jge
lock
aam
xchg
inc
inc
and
xchg
sub
sbb
in
or
test
or
and
scas
push
enter
stos
cmp
lock
push
or
ja
mov
and
test
mov
dec
pop
jae
test
sub
imul
add
addr16
mov
ljmp
je
mov
not
out
daa
mov
adc
in
jo
sub
sbbb
mov
pop
xor
int3
es
or
adc
imull
add
cli
adc
sub
jb
add
fstpt
xchg
mov
lret
inc
movsl
bnd
cmp
fisubl
push
jle
and
add
ret
into
fwait
adc
dec
xor
mov
mov
add
in
psrlq
ds
pop
insl
out
std
iret
rolb
sub
jecxz
sahf
xor
popa
cmpsl
mov
fldenv
cmp
popa
cwtl
xor
xchg
and
ds
outsb
out
in
aam
push
sbbl
arpl
lods
sbb
addl
movsl
or
mov
jb
cmpb
xor
and
push
jno
mov
sarb
mov
js
and
out
or
in
fnstcw
stc
lea
xchg
aad
xorl
sbb
inc
mov
test
and
inc
lret
imul
sbb
sbb
pop
xor
adc
and
out
rcll
push
lcall
cmpsb
dec
push
dec
aad
or
and
loop
xchg
icebp
shll
push
inc
stos
jge
mov
add
cmp
sbb
mov
jge
fadd
xlat
lea
push
dec
dec
and
mov
add
outsl
add
inc
sbbl
mov
xchg
inc
xor
in
imul
jge
adc
mov
jecxz
fldl
add
jns
dec
das
arpl
sub
lods
int
loope
jle
sbb
in
add
mov
and
pushf
dec
push
cmpsl
adc
and
jae
xchg
fcoms
dec
lods
es
mov
cwtl
mov
dec
daa
jnp
daa
mov
pop
out
xchg
mov
cli
ljmp
mov
ret
js
ret
pushf
int3
stos
sahf
inc
add
cmp
leave
add
inc
push
test
sub
mov
test
out
adc
xchg
shrb
mov
loop
fadds
imulb
add
dec
in
roll
aaa
push
cli
dec
cwtl
addr16
adc
in
cmpsl
fwait
imul
arpl
and
hlt
xchg
fdiv
out
ret
andb
sub
rcrl
sub
fwait
loop
test
xor
ret
ret
repz
fistps
cmp
pop
imul
stos
mov
push
pop
mov
mov
sub
jns
cltd
mov
test
pushf
out
and
lcall
and
push
push
xchg
xchg
insl
aam
xor
repz
and
lahf
pop
les
xor
daa
mov
push
sub
adc
jmp
ret
inc
sub
stos
dec
add
mov
adc
mov
mov
mov
test
mov
add
cmp
cmp
aas
dec
out
popf
mov
adc
clc
stc
mov
add
xor
jecxz
fldcw
dec
xor
int
shlb
inc
jno
inc
or
mov
fmul
jecxz
icebp
and
inc
fsub
push
xor
loop
out
loopne
ror
outsb
or
fnstcw
sub
adc
add
pushf
stos
adc
or
or
cmc
in
xor
fwait
push
add
fidivrs
imul
js
pop
jmp
sbb
and
adc
xor
xchg
xchg
andl
or
fistl
lods
insl
push
mov
inc
sub
jb
xchg
xchg
into
in
fistps
outsl
push
push
mov
in
mov
aas
filds
lods
jne
mov
ss
cmp
push
pushw
xchg
xor
jne
adc
jbe
in
or
sub
jg
jne
push
pushf
cmc
or
test
inc
sar
out
cmpb
pushf
push
js
add
jle
dec
mov
xor
sub
sbb
sub
movsb
xor
call
dec
sub
out
push
mov
adc
dec
out
aaa
jle
imul
sbb
push
popf
pop
and
xor
jnp
sub
mov
stos
add
mov
mov
arpl
std
ss
and
cwtl
ret
icebp
jge
jae
lods
lahf
inc
stos
leave
dec
ret
jbe
call
mov
rorl
fucomi
mov
bound
jb
mov
movsb
fldcw
stos
cltd
adc
stos
pop
mov
outsl
scas
adc
icebp
push
or
sub
mov
ret
cltd
insl
test
fsub
sub
shlb
dec
sbb
pusha
jp
dec
push
sub
enter
inc
sbb
gs
lcall
push
inc
dec
ljmp
dec
push
jle
bound
cmp
outsl
lods
xor
push
mov
ret
push
push
xorl
js
lret
mov
dec
dec
adc
adc
aaa
fidivrl
add
jne
mov
cmp
pop
xor
adc
mov
clc
or
scas
pop
xchg
or
jns
loop
fisttps
stc
dec
inc
imul
xor
cld
mov
fistps
xchg
lea
faddl
insb
scas
pop
and
cmp
xlat
popa
stos
mov
fdivrl
ljmp
dec
and
mov
cmp
aad
nop
daa
repnz
out
xchg
fwait
icebp
hlt
ja
xor
mov
add
outsb
mov
sbb
outsl
sub
dec
mov
push
out
push
arpl
adc
in
pop
jg
cmpsl
sbb
xor
dec
testb
stc
pop
mov
mov
or
enter
jmp
movsl
mov
mov
cltd
inc
scas
sub
or
dec
push
cmp
sub
outsl
and
push
or
dec
adc
or
add
mov
inc
iret
dec
dec
or
fsts
out
cwtl
aas
es
dec
inc
push
out
or
iret
std
jne
out
adc
outsb
pop
or
movsb
adc
xchg
cmp
aam
out
fistpll
in
mov
adc
xor
cmpsb
dec
cwtl
mov
mov
sub
pop
ret
sbb
adc
stos
sbb
inc
aaa
mov
or
xchg
enter
dec
and
int3
mov
and
mov
cmp
and
inc
adc
cmpsb
mov
arpl
jnp
cmp
mov
insl
xor
jle
cmc
int3
cld
push
inc
dec
pop
out
mov
fwait
xor
fidivrl
cltd
les
popf
sbb
daa
pop
hlt
mov
jae
insb
mov
jg
adc
jns
scas
test
or
popa
jecxz
sbb
fwait
mov
and
stos
add
loopne
mov
lods
dec
pop
loope
loope
push
dec
pop
push
aas
dec
inc
mov
js
pop
lods
sub
cmc
sarl
loop
out
jecxz
stos
add
das
add
imul
movsl
mov
xor
sbb
lcall
jne
mov
jne
xor
sub
or
repnz
xchg
mov
imul
or
mov
into
add
inc
ret
dec
or
inc
mov
inc
or
std
sbb
popa
pop
lods
shl
fstl
dec
into
cmp
scas
jp
enter
sbb
jno
fstpl
pusha
movsl
pop
je
add
dec
repnz
idiv
mov
add
or
nop
cmpsl
outsl
leave
loope
sti
adc
lds
pop
movsb
mov
out
xor
fdivl
jg
sarl
lcall
loop
inc
lcall
adc
incb
sub
arpl
js
jae
decb
addr16
cmp
xor
xchg
dec
imul
movsl
sbb
mov
hlt
daa
outsl
in
push
push
add
fucomi
add
mov
add
jae,pt
add
jecxz
push
lea
add
mov
imul
shrb
mov
ds
add
and
into
popf
dec
aas
test
bound
dec
icebp
mov
scas
orb
push
inc
test
ret
jno,pn
xor
xchg
out
mov
fucomip
punpckhbw
cltd
jne
xor
mov
and
std
jb
imul
leave
jne
test
mulb
into
dec
mov
movsl
inc
pop
xchg
jl
sbb
push
add
add
sti
outsb
mov
scas
in
inc
and
out
subb
test
test
inc
jl
xchg
scas
arpl
or
lret
mov
jmp
sbb
outsl
loopne
push
push
adc
xor
xor
push
addb
stos
dec
xchg
sbb
lea
inc
ds
test
push
nop
mov
mov
mov
sub
push
or
dec
mov
fidivrs
fnsave
stc
dec
inc
mov
inc
lds
xor
mov
rcl
jecxz
jbe
test
jbe
mov
clc
rcl
rorl
les
pop
lds
cltd
cwtl
andl
mov
sbb
daa
gs
push
shlb
not
add
mov
pop
lret
or
cmc
cmp
pusha
or
mov
xorb
filds
mov
ret
inc
cmpsl
cmp
pushl
xor
sub
mov
jle
cmp
inc
imulb
sub
les
hlt
push
sub
xchg
adc
xacquire
adc
push
stos
pop
adc
stos
out
int
adc
jmp
inc
mov
loopne
mov
ret
jns
jnp
and
push
adcl
sub
mov
xlat
inc
call
xchg
dec
mov
shl
xchg
sub
jp
adc
add
mov
das
dec
xorb
add
add
cmp
mov
mov
push
adc
dec
imul
adc
lcall
mov
jnp
or
inc
inc
and
aaa
xor
add
xchg
pcmpeqb
pop
shll
and
out
inc
xor
mov
xor
imul
dec
pop
and
je
jb
xor
clc
xchg
pop
xchg
inc
fwait
pop
out
loope
or
pop
xor
rorl
jl
and
jne
sub
je
jno
addr16
mov
or
stos
jle
in
pop
xor
dec
xchg
jmp
movsb
mov
mov
add
push
mov
add
inc
xor
icebp
adcb
pop
pop
sbb
inc
sbb
loope
push
into
es
jo
sub
ficoml
in
stos
adc
imul
mov
inc
adc
jmp
lds
sub
rcll
xchg
shll
adc
ljmp
or
push
test
xchg
lcall
dec
fbld
dec
and
fistpl
pop
jbe
add
mov
xchg
mov
xchg
xchg
push
frstor
jecxz
call
sub
cld
mov
xchg
jmp
movsl
jbe
push
insb
xor
daa
sub
dec
push
dec
sub
push
xor
cmp
pop
push
iret
pop
cmp
movsb
ss
mov
push
pop
ret
push
cmp
stos
cltd
inc
fstl
adc
out
popf
sub
rolb
loopne
lcall
cs
rolb
xor
leave
in
mov
stos
cmpsb
sub
jge
jo
push
dec
xchg
mov
add
imul
test
pop
or
in
in
sub
int
ficomps
mov
xlat
pop
mov
push
loope
dec
cmc
lock
outsw
jge
adc
ja
testl
cmpsb
std
sub
and
push
arpl
stos
mov
add
jbe
das
adc
jns,pn
sahf
imul
push
cmp
pop
mov
mov
or
js
mov
pop
into
push
mov
cmp
mov
add
fwait
push
push
mov
sub
add
shll
dec
mov
add
outsl
sbb
push
xlat
repnz
push
std
dec
scas
push
cs
jle
lcall
insl
loope
aas
adc
xchg
xchg
outsl
jle
mov
iret
loope
inc
jp
inc
mov
push
jmp
sub
push
ficomps
pop
jecxz
push
shrb
pop
and
sbb
or
lea
pop
mov
lds
inc
mov
mov
mov
inc
daa
xchg
daa
xlat
xor
jmp
jb
lods
push
lods
pop
push
fiadds
push
mov
aam
sbb
out
and
xor
mov
dec
mov
mov
sbb
inc
inc
jg
add
ja
lahf
add
xchg
cltd
enter
iret
or
out
mov
mov
cmp
or
enter
cltd
mov
pop
scas
inc
mov
xlat
pop
sbb
jp
out
or
shrb
xchg
sbb
int3
jge
sbb
inc
pop
insl
cmp
xor
and
push
out
js
xchg
pop
ficoml
sbb
add
sbb
mov
mov
jp
or
mov
pop
aas
pop
sbb
arpl
imul
jl
rcrb
and
push
push
jg
cmpsl
or
fidivs
pop
jo
cltd
sub
cmp
fs
push
and
mov
lods
les
jns
mov
inc
ss
adc
ficoml
xchg
mov
ret
stos
add
and
call
cmp
push
add
sub
shl
mov
mov
mov
stc
sahf
mov
out
mov
in
add
cltd
fists
dec
fcomip
mov
cmp
iret
movups
sub
inc
into
adc
mov
fwait
sbb
mov
mov
cmp
jmp
xchg
pop
push
sub
bound
mov
inc
inc
xchg
or
sbb
imul
jo
movl
mov
movsb
xchg
das
dec
daa
mov
es
xor
pop
in
or
xchg
insl
pusha
mov
or
aas
test
jne
sub
mov
push
mov
enter
popa
pusha
jmp
mov
test
mov
fldenv
outsl
hlt
pop
ret
mov
popa
roll
mov
les
iret
lcall
mov
pop
xchg
inc
mov
and
push
insb
insl
mov
sub
jae
pop
pop
mov
xor
arpl
stc
mov
jl
insl
pushf
int
aad
and
mulb
ss
clc
movsl
enter
inc
pop
sahf
out
push
insl
xchg
nop
add
mov
pop
push
or
rcr
bound
jl
or
and
ds
leave
xor
adc
and
dec
inc
insb
pop
daa
out
sar
insl
add
icebp
das
push
into
add
das
je
push
out
sub
bound
andb
out
bound
imul
popa
sti
or
ds
ffree
test
or
mov
cmpsb
mov
jp
test
mov
dec
mov
mov
dec
xchg
dec
dec
mov
popa
dec
and
pop
push
mov
xchg
jno
mov
mov
stos
lcall
or
sar
clc
xchg
xchg
loop
fmul
icebp
in
push
enter
je
pop
dec
imul
sbb
mov
dec
xor
xlat
ds
add
dec
into
mov
fcoml
xor
cltd
pop
or
mov
repnz
inc
sbbb
fmuls
icebp
lcall
daa
out
xor
lds
mov
movsb
dec
dec
inc
adc
stos
imul
scas
test
les
mov
jb
andl
pop
int3
bound
xor
mov
add
push
inc
aaa
jecxz
jne
daa
cmpsb
gs
shrb
loopne
fcomps
enter
xor
add
inc
test
mov
pop
inc
xchg
mov
imul
daa
je
and
nop
fmuls
jmp
in
fs
sub
xor
jne
insl
push
or
ret
dec
xchg
push
sti
sti
xor
sbb
jge
pushf
nopl
and
mov
ret
mov
or
out
test
mov
xchg
lahf
inc
scas
pop
pop
mov
fcompl
inc
push
mov
imul
je
adc
out
jg
xchg
clc
push
push
rcll
mov
mov
and
or
test
pop
dec
ret
loopne
shll
popf
mov
int
shl
cmpsl
cmpsl
mov
mov
loop
push
sbb
add
jmp
xor
lods
mov
aad
fcmovu
loope
mov
pop
lea
push
mov
movsl
sti
jecxz
std
repnz
ljmp
push
or
xchg
add
dec
fucomi
mulb
call
or
pop
test
lret
sbb
dec
outsl
push
mov
adc
mov
push
xchg
mov
push
and
xchg
jl
hlt
push
popf
addb
sbb
inc
out
lock
stos
jecxz
sub
mov
jnp
notl
daa
mov
push
subb
adc
lahf
sbb
fadds
cmp
repnz
push
call
rcrl
jbe
popf
xchg
pop
mov
ret
mull
adc
pusha
mov
adc
fistpl
rcrb
mov
ds
xorl
repz
stc
in
adc
hlt
add
ja
insb
mov
mov
arpl
popf
outsb
and
psrlw
cwtl
fs
int
xchg
addr16
scas
pop
xor
and
mov
in
cmp
xchg
icebp
dec
aam
inc
push
push
shr
jp
imul
out
out
aam
clc
sub
aaa
or
sub
mov
shll
mov
mov
mov
dec
xor
in
out
scas
dec
dec
push
ret
in
pop
jno
rolb
js
call
leave
add
dec
or
fdivl
imul
inc
mov
out
add
jle
adc
mov
not
scas
push
inc
loope
push
movl
popf
repnz
fwait
dec
jmp
stc
sub
dec
mov
cmovns
insl
xor
adcl
jno
jno
push
mov
mov
adc
add
or
inc
xor
rorl
xor
aas
xchg
in
mov
jp
call
add
sbbb
dec
dec
adc
xor
rcr
dec
cld
test
and
mov
idivl
fdivp
cmp
dec
adc
fiaddl
iret
insl
cmpl
mov
pop
xchg
push
insl
jns
jle
xchg
mov
mov
pop
pop
dec
fstpl
ss
pop
cmp
pop
sub
fcoms
sarl
sahf
xchg
mov
sbb
or
adc
frstpm(287
mov
pop
sbb
add
jae
xor
mov
mov
jl
orb
push
sub
outsl
add
imul
jae
cmp
xchg
cmpsb
mov
push
arpl
cmpsl
sbb
leave
mov
stos
in
inc
ret
push
aam
mov
mov
pusha
dec
jg
loope
cld
data16
or
dec
xorl
adc
filds
cli
xchg
popf
jp
mov
sbb
inc
xor
mov
lock
imul
ret
and
sub
jbe
push
dec
cwtl
dec
jb
jns
into
jae
mov
mov
loopne
xor
mov
mov
insb
and
sarb
add
arpl
mov
cmp
jno
pop
mov
cmc
mov
mov
cli
outsb
out
push
jae
jae
xchg
fcmovnb
mov
or
and
xlat
xchg
jnp
pushf
mov
es
xor
or
lods
stc
inc
fwait
notl
lret
sub
inc
loope
mov
ss
ffreep
sbb
pop
cmp
or
pop
movsb
aad
inc
lret
into
inc
in
pop
dec
out
sub
ss
gs
mov
xor
sub
dec
push
jno
aas
pop
mov
mov
pop
jp
jge
xchg
rcrl
sbb
mov
sub
stc
push
push
push
and
pop
push
std
dec
sub
xchg
popf
mov
pop
std
scas
mov
addr16
push
lods
cli
jle
mov
dec
xor
push
arpl
pop
pop
test
outsl
add
es
xor
xchg
gs
cli
shlb
loopne
outsb
arpl
lods
mov
inc
movsl
xor
subb
sbb
sub
aam
dec
mov
jmp
jnp
lret
inc
mov
std
jnp
lods
cwtl
jge
add
sbb
jne
out
jge
jbe
pop
popf
jo
add
xchg
rcll
inc
sub
aam
mov
mov
push
and
inc
add
xorl
push
roll
xorl
hlt
sub
sbb
lahf
jbe
sub
js
xchg
outsl
pop
adc
test
mov
int
cmp
fistps
ror
mov
jbe
mov
orl
pop
arpl
jno
lahf
fdivl
test
xor
cmp
push
adc
adc
mov
movsb
and
cwtl
mov
mov
add
outsl
fsts
mov
stos
pop
or
and
repz
test
adc
outsl
or
aad
addr16
sahf
cs
sbb
btc
enter
inc
dec
and
adc
call
cltd
test
shlb
cltd
cmpsb
sti
inc
sub
ret
decb
sbb
sub
test
cmp
popa
dec
and
xchg
mov
inc
adc
aas
or
ss
mov
lods
or
ret
add
xchg
adc
xchg
ss
cmc
ja
xchg
sbb
sub
mov
push
es
fwait
xchg
mov
out
mov
jns
js
push
pop
nop
sbb
push
push
push
and
mov
mov
mov
lds
add
das
aaa
mulb
in
rol
and
mov
imul
fwait
cld
mov
sub
jno
fistl
or
push
imul
loopne
sbb
clc
jae
push
inc
xchg
cmc
daa
pop
jmp
add
mov
rcll
adc
mov
mov
sbb
pushl
mov
in
int
xchg
call
and
pop
jge
idivb
es
loope
stos
and
scas
addb
cld
mov
cmp
sub
shl
push
cmp
or
jnp
and
cmp
jle
inc
pop
xor
jle
pop
push
jp
sbb
add
fnstsw
fidivrs
mov
rcll
inc
xchg
mov
fmuls
outsb
mov
cmpsb
xorb
jge
in
pop
sub
xchg
push
call
movsl
pop
ja
push
sub
pop
mov
outsb
jge
xorb
clc
scas
int3
fldl
int3
loope
sbb
imul
fisubl
fsts
or
sub
and
pop
mov
jnp
push
mov
pop
sub
data16
adc
fs
adc
lock
aad
jb
in
xchg
or
test
imul
cmpsb
adc
sbb
lret
jae
repnz
cli
pop
mov
aaa
fsub
dec
mov
dec
add
pop
cli
mov
lahf
nop
nop
movsb
lds
xchg
out
mov
mov
push
mov
cs
arpl
dec
lods
jnp
mulb
pop
cmc
test
enter
movsl
push
lock
and
mov
add
inc
cmpsb
nop
outsl
jno
maskmovq
jg
dec
test
scas
xchg
pop
testl
mov
subb
mov
jo
mov
xchg
xor
fs
sbb
jb
jnp
gs
xchg
popa
mov
cmc
mov
add
or
nop
pusha
aas
lret
daa
imul
lods
int
lahf
inc
test
xor
pop
sysexit
xchg
lahf
push
rorb
shrl
adc
inc
mov
bound
push
lret
inc
daa
or
sub
push
jne
int
sahf
frstor
xchg
insb
cmp
add
xchg
sti
sbb
imul
jg
in
mov
fnstcw
clc
push
xor
and
or
push
xchg
lea
std
mov
jle
js
or
inc
jno
pop
sbb
into
fsubl
jge
sub
test
mov
inc
adc
popa
lods
cs
lret
add
lcall
mov
jbe
push
lock
test
rolb
xor
add
insl
dec
xchg
cmc
and
inc
jnp
cmp
adc
aad
mov
pop
ja
js
outsb
dec
in
mov
add
pusha
loop
pop
sub
jmp
es
movsb
in
xor
xchg
inc
out
int3
rcr
add
nop
into
cld
mov
sti
test
loopne
jecxz
out
out
into
divl
rcrb
xor
push
dec
dec
lods
repnz
or
jno
les
jae
lret
xor
and
push
ja
hlt
mov
lret
ret
adc
jge
popa
or
cmp
sbb
mov
in
push
push
ret
fiaddl
in
pop
sahf
xchg
test
sar
or
pop
pop
sub
xchg
cld
outsl
mov
into
insb
mov
mov
push
inc
repnz
lahf
std
mov
out
scas
cltd
mov
inc
je
jbe
pusha
mov
es
sti
or
dec
inc
mov
stos
or
mov
pop
adc
xchg
loopne
adc
rolb
lahf
dec
jne
outsl
cwtl
rolb
add
jne
inc
aas
xlat
inc
iret
xor
sub
cmp
pop
mov
mov
rcr
add
cltd
xorb
adc
daa
cwtl
daa
push
mov
mov
loope
shrl
sahf
pop
lret
jl
std
pop
daa
mov
jno
cltd
rclb
insb
jl
push
addr16
jns
int3
mov
add
jb
jns
in
xchg
xchg
inc
and
and
rcrl
js
js
repnz
push
push
outsl
mov
negb
rcrb
lahf
test
jno
jnp
mov
movsl
daa
push
popa
stos
mov
jmp
or
cs
js
fdivl
dec
js
dec
lds
dec
pop
dec
xchg
mov
and
sbb
fdivp
adc
aaa
test
jo
dec
pop
shrb
and
push
leave
sub
push
dec
dec
and
and
test
xlat
ja
popf
sbb
les
mov
mov
cmp
lds
shll
push
adc
jne
fsubs
sbb
cs
daa
sahf
dec
rorb
int
enter
aam
lods
xchg
sbb
mov
aas
daa
repz
xor
out
sub
subb
xchg
das
inc
lods
jo
clc
data16
jae
or
sahf
push
cs
push
inc
out
out
and
xor
fwait
dec
mov
jo
popf
jne
dec
fidivl
or
insl
je
xor
loope
push
xor
dec
scas
xchg
jne
mov
shll
xor
sbb
inc
leave
fwait
xchg
mov
aaa
mov
ss
jl
xchg
std
cwtl
or
and
dec
mov
mov
sahf
xchg
sarb
sbb
ljmp
jmp
xlat
sub
test
dec
fildll
jg
punpckhbw
inc
and
jle
xlat
js
sub
sbbl
push
mov
pop
add
sbb
jbe
adc
movsl
aas
mov
dec
daa
cmp
mov
sti
scas
jge
popa
or
sbb
leave
cwtl
mov
div
xor
inc
fnsave
imul
dec
jge
pop
adc
dec
movsb
scas
int3
pushf
xlat
push
push
sahf
inc
jmp
mov
xchg
arpl
pop
mov
xchg
in
mov
in
push
out
out
cwtl
dec
stos
in
pushf
aaa
dec
jae
jmp
and
mov
adc
push
sahf
jl
dec
rol
daa
out
shlb
jno
xor
repnz
notl
orb
stc
popf
icebp
mov
pushf
testl
outsb
and
jl
jns
cs
xchg
std
push
mov
adc
test
jae
dec
rcrb
push
shll
or
popf
aaa
sub
pusha
stc
mov
rclb
stos
xor
sbb
lods
addr16
test
cld
push
push
inc
push
lahf
adc
jp
in
cmpsb
push
test
mov
adc
sbb
movsb
pop
stc
pop
mov
sub
repnz
inc
jae,pt
data16
sbb
and
push
dec
sbb
push
test
or
aaa
adc
xor
sub
testl
and
sbb
jge
or
push
mov
nop
insb
mov
cmp
enter
aas
leave
mov
stos
lret
lcall
addr16
or
sub
divl
jnp
stc
sub
rolb
mov
xor
cmc
push
arpl
cld
ja
or
or
pop
or
pusha
pop
mov
scas
sbb
lock
jl
mov
icebp
pop
mov
xor
pop
add
pop
cmp
jno
lds
stos
and
and
ret
cmpsl
jp
and
mov
xchg
fisttpll
out
mov
scas
xchg
xor
mov
pop
and
sti
sub
xlat
inc
dec
and
pop
cwtl
idiv
out
jno
fwait
mov
lret
aaa
ffree
sahf
lahf
xchg
aam
and
pop
sbbb
lahf
mov
sub
inc
mov
aaa
iret
pusha
inc
pop
popa
movsl
cmpsb
xor
sub
imul
insb
jne
cmp
rolb
loopne
mov
shlb
pop
xchg
pop
mov
push
or
lret
cmp
adc
xor
mov
sti
inc
mov
push
mov
mov
push
xor
mov
inc
ret
cli
jge
sub
or
jnp,pn
pop
mov
fwait
gs
lret
ljmp
xor
adc
inc
loopne
call
push
movsb
and
imul
popf
push
rcl
mov
jbe
cmp
mov
sarb
mov
xor
lods
mov
sub
fldcw
mov
mov
sub
push
dec
jae
adcl
sub
js
cli
fs
mov
mov
in
ljmp
sub
xor
mov
repz
cmpsl
inc
in
adc
aad
scas
dec
repnz
push
pushf
sbb
mov
inc
sub
stos
loopne
or
sbb
cmpsb
test
je
push
push
insb
enter
mov
aas
sbb
jnp
outsl
outsb
in
mov
movb
movsb
fistpll
inc
test
aas
sbb
in
cwtl
mov
addr16
ss
mov
sub
pop
shrb
in
xor
idiv
mov
cmp
ljmp
adc
jno
and
pop
mov
arpl
lock
daa
sub
inc
nop
imul
push
into
aas
daa
fcomip
call
cmpsl
popf
xchg
dec
cmp
pusha
add
xchg
mov
mov
mov
lods
nop
jp
jns
popf
mov
incl
out
fs
leave
mov
cwtl
xor
ret
push
pop
int3
sbb
enter
iret
mov
jne
or
jb
aad
pop
stos
push
dec
adc
jmp
pushf
adc
sub
xchg
mov
inc
fnstenv
add
popa
outsb
pop
sub
jp
jo
imulb
mov
xor
xlat
inc
fwait
pushf
popf
sub
jns
lods
xrelease
inc
lret
mov
pop
jns
bound
outsb
pop
imul
loop
dec
orl
pop
mov
push
stc
in
mov
test
in
ret
jne
add
in
push
aad
outsl
cld
lcallw
inc
xchg
loopne
outsl
dec
mov
jmp
mov
pop
add
aas
imul
mov
daa
cmp
stos
test
inc
roll
cwtl
and
xor
lcall
mov
fcomi
mov
int3
cmp
cmp
mov
jp
out
arpl
pop
mov
cmc
xchg
cmc
or
xchg
pop
ret
add
or
xchg
xchg
int
cs
int3
cmp
aam
xchg
clc
notb
xchg
add
in
stc
inc
jb
cmp
dec
cmc
sbb
adc
push
push
aaa
mov
and
jae
xchg
adcl
inc
inc
cmp
add
in
lahf
insb
jae
jb
outsb
sysret
cmp
subb
mov
loop
and
and
fucom
fidivl
pop
sbb
lret
cmp
jae
out
mov
shll
xchg
out
dec
sbb
sbb
mov
sbb
or
sub
inc
in
int
xor
in
es
cs
mov
xor
lds
sub
adc
out
jo
sbb
icebp
std
inc
mov
test
nop
jecxz
cwtl
xor
test
orb
and
subb
hlt
adc
in
xchg
cmp
test
and
orl
cwtl
leave
mov
xor
es
out
dec
jecxz
fsubrl
data16
pop
jl
jns
sti
pop
xchg
mov
fldl
xchg
imul
test
pop
int3
push
ss
loop
ljmp
jne
sbb
data16
or
loop
ljmp
mov
shll
into
jnp
inc
fwait
ret
mov
push
outsb
mov
jne
or
gs
iret
xchg
jne
mov
out
ja
cmp
mov
xor
xchg
jg
repz
or
push
cmp
ret
stos
mov
xchg
or
or
xor
rcrl
sbb
loop
pop
gs
mov
jnp
rorb
test
nop
pop
mov
dec
loopne
fldt
clc
push
cmpsl
push
push
adc
inc
rcrl
stc
xchg
sub
xor
pop
mov
cwtl
push
mov
dec
fcmovnu
popl
and
sub
mov
jae
mov
in
into
scas
movsb
out
pop
jmp
cltd
sbb
xchg
inc
lahf
scas
test
leave
loopne
inc
push
xchg
lahf
outsl
lcall
stos
enter
iret
xchg
adc
testl
ss
mov
je
jl
jg
xchg
fstpt
mov
inc
mov
aad
les
add
cmp
sbb
loop
mov
xor
sub
ficoms
repnz
pop
jecxz
shll
fwait
and
loopne
add
inc
std
push
and
ret
xorb
orb
jbe
mov
imul
call
pushf
fists
push
cld
negl
loop
ja
xor
fsubl
jmp
jle
cmp
pop
dec
test
pop
cmc
jp
adc
popa
dec
fucomp
je
pop
lea
test
mov
lret
mov
loop
outsb
push
pop
roll
ljmp
addr16
xor
nop
insb
cmp
stos
adc
fdivrl
adc
loop
and
jecxz
jg
sub
cmc
jae
out
mov
enter
movsb
outsb
ret
adc
xor
shll
call
push
test
bound
or
mov
jo
gs
clc
cmc
xorl
sub
ljmp
aam
add
inc
add
stos
sbb
push
sub
pop
or
dec
popa
add
mov
orb
mov
repnz
mov
mov
aad
inc
sub
scas
out
jge
shlb
push
cmp
jbe
dec
cmc
jnp
cld
in
sbb
add
sub
mov
xchg
and
mov
call
push
mov
cli
mov
out
scas
shrl
add
mov
jle
scas
lods
and
icebp
pop
fildl
and
loopne
mov
icebp
enter
lods
fucomp
mov
cmpsb
lcall
cwtl
pop
les
xchg
pop
sarl
xor
and
mov
dec
mov
lds
push
lock
pushf
rorb
push
fs
sub
push
addb
ljmp
shl
dec
xor
das
push
mov
ret
mov
xor
cld
pop
sub
mov
test
dec
enter
lahf
mov
insb
jmp
in
xchg
inc
imull
mov
xor
aaa
or
jmp
mov
fcompl
xchg
lahf
repnz
fwait
adc
xorb
jecxz
mov
faddl
shlb
andb
pop
pmulhw
repz
mov
inc
xor
adc
fdivs
out
daa
cmp
sub
add
mov
out
cli
jbe
mov
scas
in
ret
push
out
cs
mov
jae
lods
shlb
xchg
fs
cmp
pop
out
dec
mov
push
lock
jp
test
lcall
pop
pop
es
out
adc
push
jg
mov
xor
fistps
aam
lods
mov
add
repz
push
stos
shrl
shll
lods
jae
mov
and
lcall
rorb
aad
jnp
adc
fisttpll
adc
push
mov
je
sub
or
sbb
js
test
xchg
mov
int3
mov
fisubl
test
das
loop
pop
inc
jmp
adc
and
test
lods
cmp
dec
imul
push
int
leave
push
jle
cmpsb
je
addr16
enter
sbb
std
fiadds
sbb
add
out
fiadds
aaa
int
sub
sbb
inc
add
mov
popf
daa
or
push
sbb
cmp
cwtl
leave
mov
cli
int3
cmp
adc
jae
test
fwait
sbb
cli
mov
pushf
sahf
movb
xchg
xlat
sbb
add
or
aaa
add
or
add
mov
add
push
mov
call
cs
inc
sub
cld
mov
sub
sub
xchg
or
dec
push
jo
cs
rolb
sbb
stc
arpl
pop
in
bound
pushf
sti
mov
sbb
enter
jmp
and
pop
popa
call
xlat
sahf
movsb
xchg
inc
aad
xlat
outsb
jle
mov
rolb
mov
mov
push
push
dec
cs
cmp
lods
mov
lret
hlt
adc
adc
pop
repz
inc
mov
arpl
xchg
or
bound
push
scas
mov
or
xchg
xor
rclb
xor
jmp
jnp
jle
mov
lods
jns
addl
and
mov
lcall
cltd
xor
out
pop
xor
and
insl
add
sub
or
cmp
push
jecxz
arpl
mov
cmp
sbb
ss
dec
mov
sbb
int3
hlt
jmp
lds
ja
pop
mov
mov
xor
xchg
xchg
fwait
loop
adc
das
gs
jg
xchg
lock
push
push
int3
add
fcompp
hlt
ljmp
add
js
and
daa
or
push
insb
cli
mov
insb
mov
jecxz
out
push
jns
adc
mov
dec
outsl
jae
imul
push
xor
sbb
mov
insl
bound
sti
sbb
cmpsl
movsb
addr16
inc
mov
add
scas
call
mov
or
push
inc
xor
xchg
aam
out
fildl
dec
and
sbb
cmpsb
fs
data16
mov
push
lock
test
hlt
cmpsb
iret
rclb
aas
inc
push
pop
pop
mov
push
xchg
push
xchg
inc
das
lcall
xor
xor
test
aad
xchg
aaa
rolb
dec
sbb
jge
mov
dec
clc
test
out
outsb
add
stos
dec
lea
loope
add
js
and
int3
loop
pop
aas
call
sbb
inc
out
pop
jp
hlt
roll
push
daa
cmp
adc
and
adc
mov
lcall
add
out
add
shrb
push
pop
jo,pn
stos
xchg
negl
iret
int3
insl
roll
xchg
gs
pop
push
insl
inc
movsb
jmp
sub
test
jp
xchg
cmp
lahf
call
fimuls
inc
and
sti
int
cld
das
jbe
imul
dec
pop
lcall
xor
xchg
dec
mov
aaa
jmp
ds
mov
rcl
mov
pop
mov
out
sub
ds
cltd
inc
sub
push
or
cmp
std
xlat
mov
xchg
adc
xchg
dec
dec
jge,pn
shrb
cmp
push
sub
mov
mov
ss
mov
inc
xchg
pop
fstpt
mov
in
pop
incb
movsl
jno
ds
popl
push
call
cmp
mov
mov
sbb
fnstsw
push
jle
pop
ret
ss
nop
lret
fsubs
sbb
stc
push
push
hlt
add
fcos
mov
add
push
shlb
mov
sti
jg
in
imul
sub
and
ret
in
jno
jmp
mov
test
inc
lahf
add
cwtl
sti
and
xchg
pop
incb
shl
push
and
xchg
push
int3
ret
enter
push
std
xchg
cltd
fucomip
rorl
and
lock
adc
fldt
stos
pop
mov
mov
add
jno
roll
cmp
popa
cmpsb
mov
xor
jg
cmc
push
outsb
cmpsl
pop
xor
xchg
push
fs
aad
sbb
mov
cmp
pop
jecxz
and
mov
scas
jl
rclb
fwait
push
add
jne
inc
cs
sarb
dec
insb
dec
xchg
and
pop
cmc
je
mov
and
sub
sti
jb
pusha
ljmp
leave
test
mov
les
fistpl
mov
push
add
or
dec
mov
mov
sub
push
pop
sbb
add
inc
subb
das
in
pusha
jle
sbb
lea
out
inc
ss
mov
imul
clc
aaa
cmp
xlat
pop
xor
arpl
sti
into
loope
pop
push
leave
cmpb
arpl
adc
dec
pop
xchg
push
push
adc
dec
xchg
jle
or
cmp
popa
insb
xlat
sub
mov
add
mov
mov
scas
sbb
dec
jl
inc
jmp
mov
ror
aaa
push
push
or
in
ja
scas
movsb
scas
scas
ljmp
hlt
cwtl
shrl
lret
xor
out
inc
in
xor
sub
add
jo
imul
dec
cmp
mov
cmpsl
ja
ret
mov
inc
mov
cmp
mov
inc
mov
fwait
fwait
stos
or
fdivrp
pop
mov
add
loope
call
js
pop
inc
and
daa
mov
and
or
mov
inc
in
outsl
jbe
sarb
sbb
inc
sti
adc
orl
mov
adc
mov
stos
aas
sbb
push
jl
xlat
nop
xchg
iret
cmp
jo
dec
in
push
call
jl
shrl
mov
test
mov
cli
cmpsl
loop
sbb
dec
mov
das
out
dec
adc
or
push
jne
addl
mov
test
sub
call
jle
cli
test
sbbb
shll
ljmp
cmpsl
dec
or
pop
xchg
loop
nop
xchg
lock
arpl
xchg
lcall
mov
mov
or
call
inc
jge
sub
xorl
loopne
pop
dec
push
xchg
jb
ret
addr16
mov
mov
rcrb
inc
sub
mov
inc
out
and
pop
push
and
adc
lds
iret
lock
mov
stos
movsl
xchg
es
sub
ret
push
out
mov
or
sub
test
xor
pushf
pushl
mov
push
movsl
aas
notb
add
or
lcall
lods
int
push
jl
add
sbb
and
and
lea
fmull
jb
sbb
push
mul
loopne
aad
xor
out
inc
mov
jo
inc
push
xchg
nop
xchg
mov
push
cmpsl
or
or
sbb
movsl
std
enter
lcall
pop
mov
dec
lods
add
ljmp
push
dec
jge
fidivrl
mov
push
loop
pop
lcall
pop
out
rcll
jbe
lahf
lahf
xor
jp
add
scas
adc
jae
mov
xchg
adc
jp
repnz
movsl
sbbb
dec
loop
lret
inc
mov
inc
xchg
outsl
mov
inc
frstor
mov
mov
lock
fs
fadd
out
repnz
adc
dec
outsl
leave
pop
imul
mov
or
lahf
cmpsb
sub
push
repnz
hlt
pop
sbb
or
out
adc
mov
test
jno
dec
cmp
sub
jl
hlt
fnstsw
sbbb
mov
mov
adc
xchg
rorb
mov
jge
mov
dec
and
sbb
dec
aad
push
cmp
mov
negl
or
es
xchg
pop
jns
push
fldl
dec
mov
shlb
mov
test
in
sarl
nop
flds
lahf
pop
and
aaa
jp
lds
pop
je
xor
xor
mov
push
dec
mov
sub
loop
cld
push
js
iretw
add
mov
scas
andl
xorl
inc
mov
filds
mov
hlt
adcl
sbb
mov
push
addl
mov
sub
pop
inc
cli
inc
js
mov
jmp
fiadds
jb
jae
dec
or
xchg
lcall
jecxz
sub
cmpb
mul
insl
addr16
dec
dec
pop
mov
popa
in
mov
int
sti
insb
scas
rclb
test
pop
not
sub
mov
out
mov
test
push
jo
out
and
jb
cmp
pop
adc
out
push
pop
adc
gs
mov
lret
lods
and
inc
idivl
fisubrl
jmp
sahf
scas
in
cmp
inc
arpl
in
ret
sub
xlat
mov
jns
xchg
sbb
dec
flds
out
and
push
data16
int
mov
sub
jmp
dec
aaa
mov
jb
pop
xor
sub
sub
mov
fwait
leave
inc
add
and
rcrl
pop
ljmp
cmc
jl
adc
daa
adc
inc
cmpsl
iret
xchg
imul
repz
test
sbb
dec
cmp
orl
and
clc
test
add
jae
das
cmpsb
push
dec
dec
shlb
stc
in
cmp
test
xorl
dec
nop
cmp
mov
subb
test
add
jbe
pop
sub
pop
stc
divb
lret
dec
adc
adc
cmp
jno
out
xchg
mov
or
pop
jb
dec
cwtl
and
sbb
add
lea
mov
inc
mov
add
inc
pop
test
xor
loop
sub
mov
inc
inc
notb
mov
mov
jbe
inc
and
in
add
das
nop
sub
cli
movsl
sbb
push
insb
jno
orl
fdivrp
xor
dec
mov
push
shrl
sbb
cld
xlat
aad
or
xor
jbe
sbb
test
push
push
xchg
roll
sub
dec
mov
mov
data16
xchg
cli
movsl
dec
lock
shl
dec
repz
sub
xorl
int
popl
insb
pop
dec
jbe
pusha
cmp
and
outsl
adc
popa
push
or
lods
xor
out
inc
ljmp
dec
insb
jae
shlb
mov
sbb
add
cld
rcl
ss
daa
cmp
push
repz
loopne
or
setae
mov
mov
arpl
mov
dec
test
mov
dec
aad
fidivrl
push
clc
pusha
je
je
fldl
sub
sub
outsl
pusha
das
test
xlat
jle
mov
and
fucomp
insl
xchg
into
lcall
pushf
fsubrs
lds
test
dec
cli
sbb
inc
aad
loop
add
dec
lret
iret
or
pop
or
mov
mov
bound
adc
pop
test
adc
fs
shll
in
cmp
popf
push
jle
push
iret
or
outsb
pop
imul
in
inc
push
sbb
mov
fdivp
imul
mov
dec
ja
inc
xchg
fwait
ret
lods
sbb
insl
imul
in
or
popf
cmp
sbb
sbb
mov
arpl
pop
aad
test
divl
mov
jne
or
pop
mov
cld
adc
mov
or
mov
jp
jnp
mov
out
imul
jecxz
sarb
xchg
mov
cmp
jecxz
mov
inc
rorl
xchg
dec
lds
and
mov
out
cmpsb
repz
stos
arpl
cwtl
int3
and
lds
inc
inc
fisttps
loopne
or
xlat
dec
dec
inc
jmp
int
xor
inc
rep
or
cmc
push
mov
jge
jo
clc
cld
outsb
dec
cmc
sbb
in
xchg
dec
inc
and
mov
push
out
add
pop
inc
jns
lcall
clc
test
fcoms
inc
shll
sbb
in
icebp
push
push
mov
and
filds
lock
push
movsl
push
inc
mov
cltd
sbb
add
cmp
sbb
sbb
or
fildll
rcrb
mov
pop
xor
jne
shll
jecxz
gs
cmpsb
call
mov
jecxz
ja
push
xorl
sub
in
popa
push
pushl
and
mov
and
aam
dec
fidivl
pop
and
xor
mov
call
inc
jns
outsl
mov
xor
in
fsubp
inc
inc
xchg
jno
ljmp
inc
insb
fisubrs
hlt
daa
out
shlb
outsl
cli
dec
lcall
jnp
ds
rcrb
dec
stos
cmp
jb
xchg
pop
fwait
lret
fistpl
jo
inc
inc
andb
daa
int
sbb
je
mov
jno
sbb
lret
cwtl
sbb
adc
das
mov
sub
jne
outsl
and
das
ljmp
mov
xchg
mov
xchg
sbb
mov
subl
fdivs
xchg
mov
inc
jg
and
rclb
xchg
pop
and
outsb
cmp
pop
pop
inc
movsl
jne
aad
loopne
cmc
subl
imul
js
or
dec
jmp
add
ficomps
dec
jbe
fwait
adc
cmp
mov
stc
fisttps
push
and
or
cld
adc
sbb
call
imul
outsb
cli
mov
test
jge
adc
incb
movsl
ret
pop
in
cmpsl
pop
xchg
xchg
in
push
jg
push
push
mov
sub
lahf
sbb
push
js
pop
dec
test
sbb
cmp
pop
test
ljmp
fistps
loope
nop
inc
dec
nop
xchg
xchg
push
aad
cli
lods
outsb
pop
dec
push
sub
rcl
pop
xchg
mov
aad
cwtl
sbb
sahf
ljmp
nop
push
xor
jp
notl
sub
sbbb
and
cmp
xchg
ror
push
jg
xor
add
test
add
out
xchg
sbb
push
sbb
xchg
loopne
imulb
stos
test
add
sub
and
add
push
out
push
cli
fdivl
out
jecxz
push
sub
add
inc
dec
lods
mov
or
addr16
repnz
jp
dec
add
inc
jecxz
in
xor
pushl
pop
fs
rcrb
push
xor
arpl
fcompl
rol
adc
pop
loopne
xchg
xchg
aas
gs
add
into
fwait
shrb
shrb
jo
mov
mov
popf
pop
cmc
push
inc
lds
jle
xchg
push
out
sbb
xchg
mov
add
int
push
push
dec
fbstp
or
push
pop
xor
in
faddl
out
jbe
cs
or
icebp
shrl
ds
ss
arpl
sbb
or
int
xor
mov
stc
mov
xor
mov
jg
pop
movsb
movsb
mov
push
fs
push
push
test
push
pop
daa
sahf
ss
or
ss
lods
fiadds
out
sahf
cmp
add
call
mov
rorl
lret
mov
xchg
outsl
dec
pop
ss
fucomip
mov
lea
rolb
gs
mov
into
mov
pop
imul
aad
scas
mov
jp
test
dec
inc
js
push
mov
lcall
fstp
mov
in
mov
and
or
add
mov
cmp
adc
add
push
cmp
ljmp
pop
movsb
xor
jecxz
insl
dec
push
not
adc
push
ljmp
shr
mov
mov
adc
addb
shlb
movl
push
divl
push
cwtl
int
fistps
push
cmc
inc
dec
sub
dec
ljmp
adc
or
aaa
mov
scas
inc
mov
mov
shll
jmp
cmc
pop
test
imul
loopne
outsl
mov
xchg
sub
and
notb
in
test
inc
scas
mov
mov
push
mov
iret
push
mov
sub
frstor
lcall
out
push
add
push
sbb
fiadds
mov
xor
ficoms
xor
test
cmp
lds
mov
repnz
int3
mov
mov
lahf
je
movsb
in
popa
xchg
outsb
xchg
and
aas
ret
cld
add
push
in
adcb
cmp
cmp
orb
add
mov
cmp
xor
push
pushf
shrb
push
cltd
mov
movsl
repz
clc
pop
bnd
xchg
sbb
mov
xchg
add
dec
movsb
sbb
insb
or
addb
inc
jmp
add
mov
fstpl
mov
iret
sub
aaa
std
je
pusha
in
jb
or
pop
pop
icebp
pushf
shll
pop
test
pop
jb
dec
ljmp
jp
push
xchg
iret
mov
fs
xchg
cli
clc
mov
std
sub
dec
scas
sahf
mov
scas
sbb
mov
cwtl
jae
sbb
and
inc
pop
add
pop
pop
lea
test
ds
loop
cmc
sub
mov
jmp
sbb
lds
adc
pop
fidivl
jecxz
sub
mov
mov
mov
lds
mov
xchg
adc
addr16
push
or
xor
xor
inc
out
or
push
inc
and
pusha
xchg
mov
ljmp
add
add
sub
and
add
sub
outsl
adc
enter
call
jmp
mov
jecxz
dec
and
and
addr16
test
inc
inc
xchg
dec
adc
pop
pop
adc
movsb
mov
hlt
loope
xor
fs
idivl
xor
lahf
repnz
jmp
int
daa
cltd
fsubp
mov
push
aas
pop
push
outsl
mov
dec
sbbl
repnz
jmp
cmp
daa
or
sbb
movsl
fcmovb
and
roll
fcoms
or
cmp
pop
dec
dec
ret
lret
jne
aam
arpl
cli
mov
mov
xchg
push
xchg
push
jbe
out
inc
div
dec
enter
stos
sbbb
out
push
sub
push
xor
mov
out
push
lock
or
andb
jae
sbb
jo
sbb
stc
mov
lret
mov
stc
xor
lcall
lock
dec
lcall
mov
mov
sbb
xchg
lret
xchg
cmp
pushf
mov
xlat
pop
mov
daa
sbb
mov
dec
rcrl
cmp
mov
popa
fwait
scas
out
ds
fbstp
inc
xchg
shlb
cmp
adc
test
dec
popf
loopne
cld
mov
movsb
xor
or
movsb
pop
ss
rcll
loopne
inc
rcrl
or
mov
sbb
mov
xor
xor
pop
adc
fldl
lods
movsl
sub
pop
jno
xchg
scas
mov
push
mov
jae
adc
xor
push
mov
add
jle
mov
std
mov
mov
or
imul
iret
nop
push
aaa
imul
int3
or
int
ds
in
sub
scas
out
stos
les
pop
cmp
pusha
pop
inc
ss
mov
and
ljmp
js
dec
or
xchg
cltd
and
jae
shrl
lret
frstor
testb
push
outsb
rol
add
decb
movsb
mov
or
xor
sbb
xchg
cmc
and
jb
lock
xchg
lret
mov
mov
xor
test
adc
test
jl
pop
mov
mov
adc
lods
cmp
ljmp
stc
jo
push
gs
mov
xor
dec
or
ret
mov
cmp
xlat
or
imul
inc
sbb
push
push
ljmp
stos
enter
sbb
loope
repnz
ret
mov
and
xchg
mov
dec
or
shll
psubw
aam
lds
adc
imul
jp
jo
fistpll
shrl
nop
mov
fldl
xchg
xor
cmpsl
cwtl
pusha
mov
lret
loope
and
rcr
mov
hlt
clc
adc
push
jo
pop
negb
jp
xchg
loope
fadd
cmpsl
pop
mov
fisubs
out
and
dec
dec
mov
jno
sub
push
add
sbb
gs
mov
push
cmp
and
sbb
cmp
add
mov
lds
scas
out
ja
je
lret
pop
ljmp
js
xor
xchg
or
push
mov
out
addr16
dec
adc
icebp
in
insl
pop
push
and
lea
icebp
and
call
dec
adc
les
sbb
xchg
dec
dec
fnstsw
pusha
cmp
mov
aaa
xor
fidivs
sub
cmc
mov
fcmovnbe
and
cmc
inc
sti
lods
push
push
lods
xlat
and
lods
cmc
and
add
mov
es
add
lock
imul
sbb
and
sub
add
test
jg
sbb
mov
fdivrs
movsb
add
sub
dec
rolb
and
mov
into
xchg
cwtl
adc
push
subl
jle
das
dec
cld
les
imul
scas
jo
inc
fcmovne
xchg
push
xchg
scas
push
dec
add
icebp
test
jle
or
jbe
fldenv
popl
ja
jl
out
std
inc
mov
mov
cltd
xorb
fnstenv
and
push
mov
mov
and
mov
cmp
nop
push
push
divb
sub
ds
ja
test
out
mov
int3
cltd
sahf
and
push
or
adc
inc
jnp
xor
push
pop
popfw
cmp
cmc
sarb
xchg
add
je
lock
pop
rorb
sahf
push
lret
imul
jmp
pop
mov
lods
mov
outsb
and
jo
inc
sub
aam
adc
mov
fisubl
pop
mov
insl
in
push
repnz
nop
sbb
pushf
ret
sti
lods
gs
sbb
mov
xlat
in
shr
inc
mov
push
add
jp
scas
push
jmp
push
ret
int3
adc
imul
scas
mov
pusha
ss
insl
or
loopne
shrl
xlat
lods
arpl
sbb
add
iret
call
adc
pushf
popl
pop
jnp
stos
pop
sbbb
sub
in
fildl
leave
and
lahf
mov
or
sbb
mov
outsb
sub
sbb
mov
inc
pop
lods
dec
mov
shl
mov
sbb
cmpsl
ret
or
jns
xor
push
movsl
mov
adc
sbb
and
imul
inc
adc
adc
scas
cli
or
inc
subl
popf
and
mov
add
jle
sbb
mov
pop
sbb
int
xchg
into
jle
daa
loope
adc
ret
jl
xorb
jg
jmp
les
sbb
ja
lcall
stc
int
in
gs
lret
mov
xchg
mov
in
xor
rorl
jle
je
cmp
inc
clc
shll
sbb
and
fs
test
sub
cmp
sub
mov
roll
divb
xor
lds
stos
popa
mov
mov
sbb
adc
inc
inc
push
sbb
jb
data16
cmp
out
mov
inc
fs
out
dec
stc
adc
xor
cmp
xchg
add
cmpl
pop
arpl
inc
mov
mov
test
mov
fdivl
dec
push
add
sbb
sub
in
xchg
add
or
fs
loop
mov
adc
inc
mov
pop
add
ja
sbb
cmpsb
push
sbb
scas
aas
inc
inc
clc
mov
int3
stos
test
arpl
add
pop
lcall
dec
sub
mov
nop
ss
loope
bound
ljmp
aad
push
mov
dec
xchg
addr16
sub
es
test
gs
lds
rcr
popa
pop
vorps
aad
dec
or
pop
std
rorb
mov
repnz
push
test
jle
push
inc
call
test
gs
mov
mov
and
or
lea
sbb
scas
in
sbb
mov
popa
test
popa
xchg
icebp
les
fbld
inc
fidivl
push
out
add
adc
pop
pop
sbb
movsl
pop
pop
pusha
into
data16
cmpl
lods
pop
int
and
out
add
mov
xor
sti
sub
clc
idivl
or
sub
cmp
mov
sti
jbe
shlb
mov
push
jo
and
and
repz
pop
decb
icebp
sbb
push
sbb
leave
loope
and
and
cmc
xorb
pop
fstps
arpl
mov
adc
int
cmp
lods
pop
ret
sub
iret
icebp
call
dec
and
sbb
addb
sbb
jg
xchg
call
aam
loope
test
push
mov
pop
cmp
cmp
jp
cmp
ja
mull
jge
jno
dec
and
jp
sahf
shrb
les
cmp
sar
xlat
popf
and
sub
mov
pusha
gs
mov
lcall
inc
dec
inc
push
dec
xor
and
lea
inc
setle
adc
insb
fdiv
or
xchg
repnz
push
stos
pop
mov
push
ljmp
lahf
loop
pop
mov
mov
lods
cmp
stos
cli
inc
inc
xchg
roll
stos
sbb
push
lret
arpl
daa
xchg
aaa
mov
add
ljmp
and
lahf
idivl
aaa
inc
and
push
negl
notl
jmp
adc
pop
daa
push
inc
lret
or
inc
or
dec
mov
filds
xchg
and
lret
push
sub
push
jg
sarl
pop
sbb
and
jno
xor
mov
xor
jae
rclb
cwtl
cmp
je
in
sarb
pop
cmc
mov
mov
xor
sub
fidivl
dec
dec
sub
fstl
stos
xor
mov
pop
into
mov
in
push
mov
adc
adc
sub
cli
xor
out
xor
push
and
es
xchg
out
lahf
mov
push
sbb
cli
inc
xor
stos
sbb
aam
jns
push
mov
mov
test
dec
leave
mov
mov
nop
test
mov
pop
dec
leave
inc
and
test
loopne
frstor
add
iret
pop
pop
subl
rcll
outsl
cmc
shrl
mov
pop
dec
mov
addr16
lods
inc
popf
xchg
or
mov
mov
test
inc
in
dec
mov
idiv
or
xor
jle
insl
or
xchg
cli
or
shll
in
icebp
popa
repz
iret
jp
out
das
sub
loopne
aas
lds
movsb
insb
cmp
dec
xchg
sbb
adc
outsl
je
out
add
mov
xor
ss
dec
fnstenv
add
lods
lods
inc
pushf
pop
test
daa
ja
movsb
cmp
xchg
loopne
dec
icebp
cmc
sub
popf
sar
jmp
iret
jp
mov
out
or
sbb
mov
jo,pn
sbb
leave
xchg
int3
popf
test
out
xor
push
fsts
cmp
ss
or
sub
cmp
es
jg
lcall
sub
insl
xchg
and
mov
jbe
add
dec
rcll
sti
divl
mov
inc
insb
and
jmp
cmpsb
sbb
sbb
xor
popa
aas
into
sbb
aaa
arpl
cli
enter
jns
das
outsb
add
loop
jg
mov
sahf
lods
sbb
push
daa
add
lahf
or
lods
nop
dec
frstor
cmc
add
rorl
cld
ljmp
adc
lds
dec
ss
imul
mov
in
mov
jnp
and
pop
push
cmp
mov
movsb
jae
cmpb
and
rcrb
stos
fsubrp
scas
inc
imulb
xorl
push
pop
dec
jge
dec
stc
lods
mov
push
and
mov
and
rolb
into
and
jmp
xor
out
xchg
xor
push
sub
cwtl
addr16
xlat
sbb
es
aaa
xchg
sti
add
dec
int
xor
mov
jae
mov
lods
mov
jo
frstor
lcall
sbb
loope
push
popa
arpl
ret
xchg
and
mov
pop
add
push
sub
jne
aam
pop
subl
xor
push
test
xor
fxch
mov
rcrl
ljmp
or
push
icebp
dec
inc
pop
jb
push
mov
das
shrb
pop
mov
xchg
enter
clc
gs
ja
cmc
cmp
or
mov
pop
push
rdtsc
ljmp
insb
sub
xchg
mov
mov
hlt
test
dec
jae
lcall
mov
pop
sbb
pop
loope
cmpsb
orl
pop
out
out
xor
sarb
and
filds
xchg
jecxz
out
push
repz
jl
shlb
mov
pusha
mov
or
sub
pop
xor
mov
jl
call
cmp
jecxz
jg
stos
cwtl
push
inc
xchg
jl
dec
fsub
fsub
pavgw
outsl
hlt
sbb
int
lods
xchg
stos
sub
mov
stos
xor
xchg
and
pop
dec
jno
push
push
push
jecxz
hlt
inc
mov
test
or
out
inc
dec
shlb
inc
mov
jg
add
jp
daa
mov
iret
je
jg
add
inc
aam
ret
pop
popa
cmc
rcrb
and
sbb
push
lods
mov
or
inc
popa
sub
cmp
out
int3
outsb
cmc
adcb
sbb
sbb
xchg
mov
inc
dec
or
jns
cld
out
out
adc
mov
sbb
scas
pusha
into
mov
rorl
repz
add
dec
cmp
dec
mov
mov
fldenv
hlt
adc
push
cmpsl
push
mov
jo
int
xor
int
pop
push
stos
or
iret
dec
test
cmp
into
mov
mov
hlt
or
xor
dec
mov
test
aam
mov
sahf
cmp
adc
cwtl
ds
out
inc
int3
jge
ljmp
pusha
xor
sbb
test
add
push
pushf
mov
clc
dec
pop
outsl
or
mov
push
jne
cmc
sub
je
cwtl
dec
pop
shll
dec
into
jge
jbe
pop
sbb
dec
mov
jno
push
scas
mov
dec
xlat
mov
test
pop
jae
daa
out
dec
mov
xchg
adc
jno
cmpsl
inc
sbbb
jno
lds
push
cltd
or
addr16
ja
ja
mov
lcall
mov
adc
cli
ror
pop
loopne
jo
dec
mov
mov
test
jns
push
out
in
out
scas
mov
add
enter
lods
cltd
jmp
mov
or
lods
xor
enter
stc
sahf
aaa
add
orl
cmp
fistps
arpl
pop
data16
mov
xchg
stc
pop
movsb
adc
mov
push
or
nop
cld
cmp
and
es
iret
cmp
int3
or
sub
ror
out
push
pop
fldenv
sbb
pushf
pop
dec
pop
cmp
add
pop
sbb
std
sysenter
sub
shl
xchg
jno
add
xchg
loopne
inc
mov
push
cmpsl
repz
cltd
in
ret
mov
mov
jae
rol
cltd
jne
negl
sti
adc
xchg
xor
cmpb
cli
sbb
movsl
scas
clc
lds
xchg
sbb
cli
lcall
and
add
dec
pop
fwait
in
mov
hlt
mov
mov
pop
es
cmp
dec
mov
dec
cltd
mov
adc
shl
arpl
mov
adc
loopne
jp
mov
sbb
or
jne
xor
imull
mov
insl
leave
mov
cmpsb
dec
jo
sub
idiv
repnz
loop
dec
cltd
mov
aaa
loopne
or
loop
out
push
lret
sbb
mov
push
jle
popw
sub
insb
lahf
or
ja
aad
and
push
cmp
add
aas
jg
sub
add
orl
mov
mov
cs
adc
push
shlb
mov
cmpsl
or
cli
cmp
cs
negb
stos
push
int3
rcrl
je
jne
js
dec
jnp
out
nop
mov
push
pop
jmp
cmp
mov
pusha
pop
mov
dec
jg
jmp
stos
or
fldenv
mov
outsl
mov
mov
ficoms
mov
outsl
and
mov
dec
jns
cmp
out
mov
orb
sbb
ret
ficoml
shrb
sarb
inc
dec
adc
in
xchg
movsl
add
test
pop
xlat
arpl
rcpps
inc
fstp
push
mov
jle,pt
push
push
sbb
push
or
push
sti
mov
cmp
lahf
push
aaa
xor
idivl
imul
dec
pop
outsb
lcall
add
push
dec
repnz
imul
pshufw
movsb
stos
xlat
je
push
add
sub
adc
pop
adc
push
repz
sub
push
sbb
mov
xor
cld
add
mov
rolb
sbb
push
sahf
xlat
mov
nop
ljmp
mov
add
or
add
and
shr
ds
iret
and
mov
xchg
ja
jae
dec
dec
sbb
popa
pop
outsb
repz
cld
psraw
mov
and
movsb
sub
pop
add
mov
test
iret
add
mov
popl
mov
jb
shlb
mov
jno
pop
adc
add
int3
sarl
pop
sbb
scas
stc
and
icebp
jb
pop
out
int
insl
test
es
mov
adc
mov
fistpll
gs
or
aad
cld
mov
sbb
insb
fwait
addr16
push
push
imul
sub
dec
movsb
inc
xor
push
hlt
faddp
mov
repz
inc
movsb
sahf
sbb
mov
pop
and
adcl
mov
ficompl
jne
xor
fisubs
jno
inc
daa
adc
cli
or
inc
inc
dec
inc
ss
push
adc
repnz
sti
sbb
pop
jb
push
ret
sbb
lahf
insb
or
inc
shlb
arpl
jbe
mov
xor
cmp
adc
repnz
out
adc
add
xchg
sub
jo
jae
sbb
addr16
xchg
test
jnp
imul
test
vaddpd
mov
dec
out
sub
outsl
push
out
sbb
fwait
out
push
push
sbb
idivl
push
movsb
push
mov
and
mov
adc
lret
mov
or
andb
add
xchg
jge
ret
lret
cmc
pushf
pop
xor
push
dec
sub
bound
or
sbb
test
fistpll
cld
leave
add
clc
jp
mulb
jo
ss
fisubs
jno
mov
inc
pop
pop
mov
mov
and
mov
cld
sub
dec
dec
and
subb
or
xchg
mov
jecxz
outsb
xor
jle
mov
dec
jne
outsb
enter
iret
add
sbb
mov
jnp
fwait
and
adc
dec
inc
lahf
movsl
data16
outsb
call
mov
test
test
and
xchg
scas
mov
loope
dec
push
inc
push
enter
out
adc
add
jmp
xor
xchg
movsb
sbb
lahf
inc
adc
adc
jl
lret
push
xchg
and
and
pop
hlt
jae
daa
jecxz
icebp
or
sub
jp
and
icebp
sbb
mov
adc
push
inc
test
sbb
cmp
mov
jp
jns
iret
add
xchg
popa
pop
sbb
cli
inc
cmp
in
xchg
mov
xor
pop
das
repnz
sbb
addr16
cmc
jo
andl
test
jb
mov
push
push
inc
into
adc
call
in
mov
add
shrl
lahf
in
lret
popf
mov
jmp
shrb
lret
pop
cmp
mov
psubsb
loopne
adc
jecxz
es
je
jge
faddl
sbbb
fidivrs
outsb
adc
les
insb
mov
jbe
mov
mov
cmpsb
idivl
pushf
imul
mov
sbb
or
stos
cs
pop
in
cmpb
mov
xor
ljmp
jmp
repz
arpl
push
cmpsl
std
pop
cltd
fstps
cmp
rol
pop
push
lea
lcall
xor
sbb
lds
mov
ljmp
dec
ja
lret
std
dec
inc
sub
xor
jle
jo
cwtl
xor
jo
mov
jg
fildl
fldt
je
mov
adc
test
adc
out
loopne
addr16
iret
lds
pop
icebp
lahf
jae
cmp
subb
sub
xchg
xor
adc
inc
test
pushf
jb
pop
hlt
or
push
stc
mov
pop
std
int
jecxz
pusha
das
sbb
pop
imul
es
push
dec
sbb
pop
subb
xor
or
jle
sarb
lods
inc
pusha
xor
jmp
cmp
es
test
jl
mov
and
fisubrl
xchg
xor
mov
fldcw
sbb
or
lea
xchg
push
ret
cmovl
adc
pop
call
not
mov
mov
jae
jb
lds
sub
sbb
pop
adc
xor
cmp
inc
xchg
bound
push
aad
nop
xchg
sbb
mov
lret
mov
cli
in
inc
test
mov
mov
mov
xor
loop
push
mov
inc
mov
cmp
dec
inc
enter
ret
jbe
stos
repnz
inc
pop
add
jae
or
adc
mov
js
es
loop
mov
sub
clc
or
pop
jo
xor
loopne
popa
pop
dec
cltd
push
cmpl
bnd
dec
xchg
dec
jle
add
push
rolb
add
test
and
cwtl
adc
fwait
sbb
mov
aam
inc
xchg
out
or
fiadds
adc
fcomi
lret
mov
popf
in
inc
std
mov
test
mov
sub
mov
out
mov
xchg
ficompl
filds
adc
in
fs
adc
sub
shll
lds
inc
adc
xlat
adc
push
xor
out
pop
sbb
mov
nop
mov
push
int3
dec
out
or
sbb
iret
out
popf
inc
dec
mov
sarl
mov
mov
push
adc
cmpsl
xor
out
in
and
add
lds
test
mov
das
out
sbb
imul
xor
pop
add
cwtl
and
int3
sbb
xchg
add
rcl
in
pop
pop
stos
jp
mov
xchg
test
cmp
jge
test
and
mov
in
xchg
mov
ret
xchg
movsb
xchg
lcall
sbb
sbb
insl
xchg
push
ret
scas
scas
jnp
xor
jecxz
sub
out
rolb
xor
or
jmp
test
mov
aad
or
insb
mov
iret
mov
mov
test
pop
mov
aas
sub
in
jb
lock
cltd
mov
outsl
lcall
and
sub
jae
daa
cmp
das
test
push
pop
add
and
sub
addr16
mov
fsts
ja
cmp
test
adc
imul
iret
scas
aaa
pop
inc
rorl
mov
in
loop
or
pop
test
aaa
out
out
xor
test
aas
mov
inc
ret
fstp
cmp
inc
inc
lds
aas
cmp
dec
inc
outsl
lods
lahf
or
sub
mov
mov
pop
jb
ficoml
mov
in
xchg
inc
div
insl
push
and
jl
xchg
repz
jnp
out
cwtl
dec
fistl
mov
shl
jl
adc
mov
sub
xor
xchg
add
adc
lret
lds
loope
gs
pushf
sub
out
movsb
xchg
mov
call
xchg
mov
fiaddl
dec
out
or
subps
jbe
aam
sub
or
test
and
dec
js
lret
ja
mov
cmpsb
sbb
pop
sahf
dec
aad
jl
shrb
test
xchg
test
adc
fcomps
hlt
xchg
andl
or
sub
and
inc
aaa
test
aad
push
rorl
mov
sub
push
mov
or
lea
inc
repz
inc
pop
cltd
xchg
inc
jae
negl
out
adc
and
dec
jge
leave
test
adc
xchg
movsb
loopne
subb
ja
mov
push
pop
gs
add
pop
lret
mov
push
pop
sbb
mov
xchg
stos
idivl
or
jo
insl
and
lea
and
inc
sub
sti
iret
mov
dec
loopne
ss
in
in
dec
jge
mov
push
sbb
and
pop
dec
pop
pop
nop
out
or
mov
mov
push
fwait
pushf
testb
adc
shll
aas
add
sub
push
dec
or
cmpsl
sub
hlt
mov
iret
shll
stos
adc
lock
inc
imul
cld
jno
dec
sbb
push
cmp
dec
lods
push
sar
xor
sub
dec
pop
ljmp
in
sbb
ljmp
dec
fstps
dec
lods
cmpsb
jns
mov
xchg
sbb
lret
dec
fnstenv
mov
jge
and
dec
mov
loope
pop
gs
in
add
lods
xchg
xlat
jnp
movsb
add
jbe
push
jns
mov
dec
jmp
in
stc
rorb
stos
mov
push
lret
sbbl
mov
xlat
pop
pushf
dec
mov
rclb
les
movsb
lret
xor
movsl
dec
daa
inc
pop
xor
pusha
dec
sub
popa
loopne
or
icebp
pop
xor
push
sub
mov
adc
sahf
and
pop
repnz
sbb
hlt
sub
dec
repz
shrl
cmpsl
dec
lret
mov
push
divl
pop
push
cmp
xchg
shll
inc
add
test
cmpl
or
fiadds
push
mov
mov
aad
and
scas
loop
aas
cmp
cmc
xchg
adc
scas
jmp
inc
pop
push
xor
push
mov
xchg
aas
mov
cmp
push
sbb
cmpl
dec
xor
push
mov
add
js
es
shrl
inc
lds
dec
mov
or
add
sbb
out
or
jp
ja
xor
dec
xchg
mov
rorl
ficoml
sbb
push
lock
cmp
pop
adc
xor
add
inc
mov
xor
dec
xchg
xchg
fwait
popf
into
jp
outsb
lcall
sahf
fiaddl
mov
inc
mov
aam
xchg
repnz
jae
and
push
push
mov
lahf
pusha
add
clc
stc
fwait
push
mov
in
cmp
or
cltd
imul
push
lods
rcrb
push
imul
dec
mov
aaa
loopne
and
notl
cld
outsl
dec
adc
test
dec
mov
cmp
push
inc
arpl
test
repz
xchg
cmp
movsl
scas
test
xchg
lcall
fstl
push
ljmp
xor
les
pop
pop
and
push
push
lretw
pop
imul
loope
lock
jo
add
mov
pop
mov
scas
fadd
mov
out
pop
js
mov
mov
mov
mov
hlt
pop
push
push
adc
das
dec
mov
cmpsl
pop
cmpsb
and
xchg
stos
mov
ret
sub
fsts
xchg
ret
imul
pop
pop
iret
stc
movsl
jecxz
mov
outsb
push
pop
dec
repz
jge
jne
mov
adc
sahf
inc
cltd
inc
inc
xor
data16
fs
and
hlt
mov
inc
gs
cmpsb
pop
xchg
sbb
lock
mov
int3
cmp
and
mov
and
shl
shrl
shll
adc
pop
and
je
cmpsl
dec
lods
aas
push
sub
sbb
dec
outsb
sub
rcll
fneni(8087
mov
movsl
pop
sub
dec
fbstp
xor
sub
lcall
add
sbb
loop
out
jns
fisttpll
mov
gs
sbb
mov
xor
lret
lds
jl
es
push
lds
lcall
mov
dec
push
xor
popa
lahf
cmp
hlt
loope
inc
sbb
iret
inc
in
xchg
adc
outsl
push
pop
mov
and
in
popf
mov
dec
jl
sub
mov
dec
movsb
cmp
pop
add
jo
jp
ja
jno
jg
loope
cltd
inc
ja
mov
cmp
adcb
dec
inc
cmc
inc
sub
push
cs
pop
out
jl
fstpl
inc
xor
stos
sahf
xor
push
or
or
xchg
or
and
loop
cmpsb
movsb
xchg
imul
or
fs
shll
jae
add
leave
insb
xchg
pop
data16
jl
mov
add
ror
insl
aaa
pusha
or
fists
addr16
pop
or
ret
imul
jno
icebp
fwait
push
stos
xor
sbb
sahf
adc
adc
cltd
in
cltd
out
mov
jl
jns
pop
sub
and
mov
data16
int3
xchg
dec
out
loope
mov
pop
movsb
out
dec
dec
sub
jmp
sbb
jmp
mov
inc
cld
js
sbbb
ja
push
adc
in
pop
test
stos
ljmp
lret
jmp
test
push
cli
ljmp
movsl
dec
mov
test
jb
shll
cmp
mov
test
sbb
lea
sub
adc
addb
movsb
xorl
mov
xchg
pop
jo
ss
int
repz
test
push
shlb
xchg
subb
fbld
xchg
das
and
jmp
xor
lods
loope
cwtl
cmp
cmp
shlb
movsbl
jg
cli
sahf
fiadds
les
lods
dec
out
stos
pushf
or
sbb
ds
mov
movsb
ss
in
and
jmp
and
test
imul
repz
in
jne
xchg
dec
lcall
add
cmp
mov
xor
out
dec
sub
or
or
mov
int3
sub
ja
jecxz
adc
mull
out
call
pop
pop
out
movsl
orl
push
jge
repnz
notb
sbb
fld
cmp
or
jae
fldcw
mov
test
sbb
push
inc
fwait
jmp
and
dec
call
fisubrl
cmp
cli
pop
pop
adc
movsl
push
mov
call
push
dec
adc
loope
sub
push
xchg
dec
cmp
jle
xor
fs
outsb
xlat
shrb
in
xor
loopne
xchg
or
sbb
dec
mov
xor
loop
aaa
mov
adc
test
mulb
out
cmp
xor
or
data16
pusha
adc
test
push
out
cmpsl
lds
decl
jno
cld
pop
bound
mov
gs
mov
scas
in
and
dec
mov
mov
loopne
repnz
jnp
or
stc
xor
sti
xchg
outsb
xor
loope
pop
adc
inc
push
xchg
ss
lahf
and
cltd
ja
adc
or
lea
pop
jne
sbb
adc
ja
lds
imul
vmovss
adc
push
test
test
mov
xor
cmp
cmp
push
sti
add
mov
shrl
pop
pushf
inc
cmp
sbb
repz
sub
loopne
subps
xor
leave
rorb
jg
insb
xchg
mov
push
xor
cwtl
or
pop
out
sarb
rcr
push
test
mov
jecxz
mov
and
xor
sbb
pop
push
adc
add
fcomps
loopne
inc
push
add
pop
popf
repnz
ucomiss
movsl
mov
mov
push
pop
scas
sbb
sti
icebp
jns
pusha
push
dec
cld
sub
in
fisttpll
jne
enter
sbb
xlat
test
movsl
pusha
mov
jns
pop
sub
aam
ror
push
sbb
push
cmp
test
insb
mov
jmp
fisttps
sarl
lea
fstpt
mov
jo
mov
frstor
sarl
out
push
push
xchg
fcmovnu
mov
je
jo
mov
inc
scas
std
mov
call
aam
data16
inc
mov
mov
ds
adc
mov
shl
daa
call
dec
aad
inc
fnstsw
ret
jno
xchg
jne
sbb
mov
les
or
movsl
push
push
mov
xor
nop
lods
and
in
mov
xchg
imul
pop
fsts
jno
jb
cld
xchg
mov
push
cltd
add
ror
adc
ficomps
stc
and
mov
push
adc
pop
jnp
xchg
push
movsl
ret
les
out
in
lods
sbb
daa
subb
mov
cmp
cmpsb
and
lds
or
adc
sti
outsb
sti
scas
les
push
pop
in
in
cltd
les
adc
fucomp
lahf
in
in
enter
push
xor
or
dec
cmp
fists
push
or
test
pusha
gs
scas
popa
hlt
mov
cmp
jb
out
lret
imul
and
xchg
xchg
cmp
cli
mov
mov
rorb
lret
int3
imul
or
mov
sbb
pop
bound
mov
mov
pop
sbb
call
jmp
subl
repz
cmp
xor
cmpsb
sbb
decl
je
inc
sbb
test
outsb
orl
push
inc
or
push
scas
lods
pop
or
incb
cld
cld
clc
sub
pop
inc
cs
aam
push
push
cld
inc
sub
movsl
jnp
jecxz
insb
xor
arpl
ds
push
cmpsl
xor
lds
icebp
mov
cmpsb
sbb
adc
stc
adc
cs
inc
mov
push
lea
mov
push
mov
fmull
sub
mov
pop
add
push
sbb
cmp
movb
push
ret
hlt
mov
int
pop
jne
push
popa
xor
push
pop
or
dec
test
dec
inc
bound
std
mov
nop
leave
imul
fwait
sbb
popa
and
mov
push
sbb
addl
aam
dec
stos
push
adc
aaa
lds
not
or
movsb
push
lods
add
inc
and
dec
int3
sbb
icebp
stos
jb
stos
js
in
outsl
mov
hlt
pop
pop
pop
inc
daa
hlt
adc
adc
sti
mov
xchg
lea
xchg
cli
repnz
sub
mov
into
mov
sbb
rcrb
jne
rcrl
jns
ds
leave
dec
jg
pop
jns
ficoms
sbb
xchg
push
dec
mov
xchg
stos
mov
out
push
jle
cltd
int
arpl
push
outsl
pusha
into
dec
addl
lea
fcomps
fwait
test
xchg
movb
or
sti
pop
les
pop
mov
and
call
cmp
lock
movsl
frstor
aad
cmp
hlt
cmp
push
push
loope
jb
in
push
push
divl
cmp
notb
cmpl
or
lret
xor
enter
adc
ja
mov
adc
negb
aad
gs
stos
push
lods
cld
dec
sbb
cmp
fstpt
lds
mov
dec
pop
shl
jp
inc
dec
clts
mov
movsl
js
and
sti
and
or
imul
push
sbb
scas
outsl
jb
es
dec
cli
sbb
dec
pop
fadds
jmp
cmp
add
mov
jo
adc
rol
rcr
mov
fsubs
jnp
and
push
push
mov
scas
cmp
call
mov
mov
bnd
jne
insb
fdiv
mov
push
fnstenv
es
clc
mov
push
and
mov
lret
adc
sub
dec
pop
shlb
ljmp
mov
dec
xchg
inc
icebp
shrl
inc
xchg
leave
pop
cmpsl
dec
dec
daa
dec
fldt
or
lea
adc
pop
in
ja
sbb
jb
cmp
arpl
movb
pop
imul
es
cmpsl
shll
outsl
dec
jae
jae
ffreep
or
pop
out
push
mov
add
dec
das
adc
adc
sub
jmp
lahf
dec
leave
mov
stc
push
addr16
das
sbb
mov
sahf
xchg
lods
cmp
jge
cmp
dec
cmp
xor
gs
mov
xor
adc
cmp
xor
ljmp
dec
bswap
sub
ret
leave
inc
ljmp
mov
mov
inc
sub
ret
pop
fnstsw
push
inc
ds
mov
jge
jb
repz
xchg
in
xchg
js
add
adc
cli
xor
in
dec
mov
outsb
xor
and
js
enter
enter
bound
sub
or
lret
fiaddl
inc
cmp
pop
out
jbe
dec
movsl
mov
fcoml
imul
in
push
push
jnp
int3
fwait
or
or
mov
outsl
repz
inc
lock
ja
adc
mov
and
jge
clc
add
fnstenv
lahf
out
sub
add
cld
jg
or
and
cmpsb
pop
cli
movsl
data16
out
sbb
or
push
shrb
mov
daa
and
js
div
mov
jle
xor
int3
xchg
pop
jne
pop
cmp
lret
and
xchg
fdivrp
jg
jno
jmp
xchg
mov
adc
insb
loope
idivb
data16
iret
rorl
mov
pop
dec
mov
mov
leave
imul
sbb
fiadds
inc
cmp
push
mov
test
xor
cmp
pop
fdivr
xor
hlt
adc
xchg
mov
mov
sbb
fidivrl
test
cli
or
add
push
hlt
push
xchg
mov
ret
xor
fildl
jp
stos
imul
imul
ror
and
std
test
sbb
ret
out
aas
add
xor
push
roll
mov
cmp
sti
mov
call
loop
nop
lcall
inc
jne
pop
ja
adc
sbbb
push
xchg
adc
cmp
out
in
fbld
js
pop
mov
test
mov
mov
loopne
mov
loopne
push
jle
push
pop
fnstsw
mov
xor
outsb
loop
jne
aad
push
scas
inc
bound
mov
in
nop
and
pusha
loope
popf
mov
push
flds
cmp
pop
inc
in
push
mov
lods
xchg
jb
jmp
hlt
fsts
out
std
dec
and
sbb
sub
adc
ljmp
aam
xor
jb
mov
and
pop
enter
add
cmpsb
xchg
xchg
sub
push
or
lods
push
sbb
ss
ret
out
inc
data16
cmpsb
mov
out
daa
cmp
xor
xlat
jno
dec
ret
mov
sub
dec
xchg
jbe
sub
loope
mov
push
xchg
mov
push
sahf
outsl
mov
ss
shlb
jae
mov
std
in
cmp
loope
stos
inc
cmpsl
dec
inc
cmpsb
cli
push
sahf
and
mov
push
xor
inc
push
rcpps
mov
cmp
add
pop
mov
int3
mov
stos
popf
mov
inc
aad
inc
adc
and
pusha
jb
adc
jns
icebp
aaa
fs
sub
ret
sub
jge
jns
test
jge
insb
insl
add
xor
jb
adc
roll
jns
mov
scas
mov
jle
iret
mov
push
fildll
inc
sbb
xchg
push
inc
rcr
hlt
cmp
mov
add
fisttpll
lods
mov
jo
lock
pop
xor
shr
int
pop
and
mov
outsl
sti
mull
sbb
dec
or
loope
pusha
adc
vpsubd
lret
inc
sub
xor
add
dec
mov
inc
add
push
test
cmp
xchg
fstpl
popf
push
rcr
jecxz
and
lds
ss
jno
mov
pop
idivb
sub
sbb
fcomps
stos
insl
adc
dec
jle
xor
bound
mov
jnp
pop
test
jb
cltd
inc
movsl
xchg
addr16
movsl
push
ds
mov
xlat
xor
bnd
push
adc
cld
shl
es
cld
jecxz
xlat
mov
inc
xor
jecxz
pop
std
lods
mov
cwtl
push
pusha
test
popa
call
out
pop
cli
jle
push
push
call
aam
mov
dec
or
adc
loopne
out
sub
cwtl
jne
mov
dec
or
mov
jno
stc
jo
dec
push
push
mov
repz
loope
ljmp
cmpb
fbld
dec
lds
jb
sbb
pop
cli
rol
sub
dec
jne
mov
jmp
nop
stc
cmp
es
loope
mov
xor
adc
pusha
xor
mov
out
mov
mov
mov
and
cmp
sub
fdivp
test
inc
mov
dec
mov
insb
out
push
call
jl
insb
xchg
dec
mov
mov
out
gs
fst
xor
dec
mov
pop
jnp
xor
push
cmp
xchg
and
adc
inc
sub
arpl
xor
sbb
pop
call
pop
sbb
pop
scas
push
push
or
adc
cmp
cmp
in
sti
cmp
pop
pop
jne
cmp
repz
push
pusha
test
cli
pop
ret
pop
scas
shll
loopne
add
dec
je
in
xor
aam
les
inc
and
stc
pop
addb
xor
sbb
js
sub
or
fimuls
fwait
xor
xor
sbb
push
js
pcmpgtd
cs
lcall
out
mov
fs
fsubrs
push
cmpsl
mov
mov
jmp
out
fdivs
lock
mov
add
ljmp
aaa
pushf
adc
xchg
sbb
jl
inc
dec
inc
and
push
aas
dec
xor
stc
iret
aaa
sbb
xchg
inc
mov
pushf
lret
mov
lahf
adc
add
sub
mov
inc
test
in
mov
fildll
dec
and
sbb
rol
in
out
mov
fcmovnb
gs
lcall
add
and
ret
mov
jo
das
xchg
jge
and
cmc
ja
shrl
lea
addr16
push
popf
imul
mov
xchg
dec
mov
mov
pop
fwait
lret
mov
bound
leave
cmovbe
cmp
xor
js
shlb
inc
je
popa
and
jecxz
dec
push
sti
mov
xor
fisubrs
sub
pop
mov
cmp
mov
mov
in
dec
dec
mov
sub
mull
mov
stos
add
or
and
cmp
jp
in
imul
push
movsb
xchg
jge
fisubrs
pop
jge
sbbb
in
or
rolb
xlat
int
std
sbb
fistps
scas
cmp
jno
mov
inc
xchg
fidivl
cmpsl
mov
jo
push
call
dec
clc
repnz
cmp
jno
jno
loop
sub
push
and
test
cmp
imul
mov
cmp
cmp
cwtl
mov
or
mov
iret
je
pop
mov
inc
push
mov
sti
mov
imulb
and
icebp
sub
cmc
lcall
dec
jmp
add
jae
fiadds
add
inc
jbe
adc
adc
orl
inc
xchg
jne
aad
vsqrtpd
outsl
movsb
push
jae
pop
mov
mov
repnz
xchg
push
xor
pusha
lret
dec
inc
scas
xchg
mov
push
mov
cmpsl
pop
push
jle
adc
xor
arpl
out
out
loopne
enter
push
and
ljmp
imul
jle
adcl
pusha
inc
shlb
sub
jbe
aas
xor
push
jecxz
test
fs
mov
dec
push
in
jne
and
sub
dec
inc
mov
stos
dec
cmp
outsl
dec
mov
je
push
je
das
mov
mov
stc
insl
popf
stc
sti
jo
cmpsl
and
jno
jge
add
in
fisubs
in
jecxz
mov
jp
int
in
popa
dec
call
and
iret
inc
jle
jg
or
mov
mov
pop
xor
dec
add
mov
xchg
mov
call
add
lea
inc
cmpb
lahf
inc
daa
push
add
sub
rcl
dec
push
call
xchg
pand
repz
push
iret
push
add
sahf
add
jl
jg
lods
mov
out
cmp
cld
aad
inc
pushf
jmp
fdiv
push
cwtl
cwtl
sub
pop
sete
test
sar
mov
leave
movsb
or
into
cmpsb
jecxz
int
jnp
add
or
pop
cmpsl
bound
jecxz
push
push
cmp
sub
xchg
cmpsb
fidivrl
xchg
jo
cmpsl
dec
fs
mov
sub
mov
or
ljmp
mov
mov
ret
lods
into
aaa
pop
jp
xor
cmp
xor
inc
loope
xor
cltd
push
jle
sahf
mov
push
lcall
pop
cmp
inc
out
pop
push
aam
out
sahf
popw
push
std
add
xor
imul
orb
jle
mov
loope
cli
xchg
pop
mov
out
push
mov
loopne
test
out
daa
mov
sahf
mov
push
popf
icebp
mov
js
mov
mov
sub
mov
fwait
jmp
lcall
jb
or
pop
jmp
ss
fs
test
seto
jmp
mov
mov
fstpt
and
xor
push
test
mov
or
xchg
mov
add
ss
in
ret
sub
mov
jge
in
dec
pop
popf
inc
mov
push
lret
pushf
inc
mov
mov
sub
jmp
jmp
mov
cmp
fwait
push
xor
xbegin
nop
fidivrl
sahf
fs
cld
div
ljmp
sbb
sub
out
cltd
cmc
mov
mov
cmpsl
js
dec
push
out
loop
mov
sub
and
fnsave
imul
add
xchg
lcall
xor
and
push
xlat
scas
cltd
idivb
push
in
add
enter
fcom
aas
inc
jns
sbb
cmpsl
adc
int
dec
xchg
mov
xchg
mov
ds
hlt
je
pusha
jle
dec
mul
ja
fwait
pop
mov
int
out
cmp
cmp
lea
adc
repnz
mov
pushf
shr
pusha
push
sti
and
loop
int
jo
dec
fcmovnu
sbb
mov
nopl
dec
nop
mov
in
test
add
and
jno
shlb
sub
xchg
cmp
jne
pop
adc
push
mov
lcall
call
mov
cwtl
fwait
jns
in
mov
mov
inc
adc
fsts
test
std
dec
ds
pop
xchg
into
js
sti
jb
push
or
jo
outsb
sbb
mov
fimuls
or
inc
or
test
jge
pushf
jne
std
mov
cmc
sbb
leave
fwait
pusha
daa
mov
daa
movsb
dec
and
mov
loopne
cmp
imul
add
mov
shlb
mov
cmp
pop
inc
movsb
push
icebp
adc
xlat
mov
loopne
je
clc
mov
pop
sub
fidivs
popa
inc
test
lea
scas
popa
stc
sarl
adc
sub
adc
or
stos
scas
xor
and
mov
daa
lods
test
dec
pop
test
orb
xchg
adc
and
cmc
pusha
pushf
sbb
jnp
fsubl
sub
fcoms
push
mov
es
shl
pop
mov
xor
lock
in
mov
arpl
into
mov
dec
cli
out
ficomps
mov
jnp
or
xor
adc
cli
xchg
mov
fldl
jle
lods
fcomps
cmp
scas
jg
out
jmp
inc
xor
dec
mov
inc
bound
lcall
mov
jl
shl
mov
add
ja
stos
popa
adc
pop
arpl
mov
loop
jg
enter
and
mov
aam
out
int
dec
in
or
inc
sbb
adc
jg
cmp
movsl
iret
jno
fdivl
clc
inc
sti
rclb
cld
cmp
mov
std
xor
cmpsb
mov
inc
data16
imul
rcr
pop
mov
push
xlat
fisttpl
xchg
aas
lahf
mov
fdivrs
ret
mov
and
shll
sub
lods
inc
imul
jp
cs
scas
mov
jp
dec
fidivrs
jns
xchg
ss
repnz
pop
ss
mov
mov
push
in
sahf
nop
inc
lods
lea
cld
outsb
inc
jp
adc
rorl
inc
leave
xchg
scas
dec
inc
dec
fs
jno
mov
test
hlt
push
xchg
xor
std
jns
ret
dec
sbb
xor
cld
into
add
es
push
in
add
sub
pop
mov
mov
pop
adc
faddl
cmp
insl
jno,pt
rolb
loopne
movsb
xchg
jb
lret
leave
leave
in
fisubrs
lret
ret
xchg
lock
sbb
mov
add
jnp
cmp
push
cmp
fstpl
mov
dec
push
insb
aaa
jmp
jp
in
repnz
push
enter
dec
js
inc
mov
ret
sub
rolb
loope
inc
jecxz
cmp
fnstcw
dec
jbe
jmp
pop
icebp
mov
adc
je
jno
mov
in
xchg
mov
inc
mov
popa
push
add
mov
lahf
pop
call
jmp
out
fbld
mov
inc
push
cmc
cld
loope
and
mov
or
jns
sti
and
adc
sub
xchg
stc
mov
daa
xor
popa
push
xlat
repz
data16
fcompl
stos
scas
cmp
mov
mov
shr
push
jl
xor
pop
xorl
sbb
add
jnp
jnp
inc
jnp
lods
cwtl
push
jae
adc
out
mov
cmpsb
fidivrs
adc
enter
iret
mov
mov
jl
jne
jnp
jns
sbb
or
mov
cld
cli
lcall
cs
lcall
stos
add
ret
out
and
sbb
popa
xchg
pop
cmp
inc
mov
mull
enter
cmp
fcomi
in
bound
std
incb
int
inc
xchg
xchg
dec
dec
mov
hlt
mov
mov
stos
fadds
xor
ret
lcall
sti
jge
sub
sub
js
popf
fs
lea
ss
sysenter
lcall
sub
mov
lret
mov
mov
mov
pop
seta
or
xchg
fisttpl
lock
rorb
shlb
fsubrs
xchg
mov
xor
dec
add
out
ss
cmp
fistps
push
adc
xor
or
or
sub
popf
ffree
push
and
int3
fwait
sub
cmp
nop
pushf
and
sub
xchg
jnp
pop
rolb
insl
aam
cli
pop
mov
or
push
test
sub
mov
pop
enter
add
xor
xchg
sarl
mov
cwtl
jmp
mov
push
pop
in
stos
inc
and
pop
pusha
lcall
movsl
pop
ret
sbb
jl
ret
dec
sbb
pop
dec
addr16
aam
cmpsl
cmp
mov
invd
cs
push
ja
pop
adc
lret
fs
outsb
roll
add
inc
inc
aad
ljmp
adc
pop
dec
rclb
push
push
mov
xor
test
mov
sbb
sbbl
xor
or
jg
jno
xchg
dec
in
xlat
or
imul
mov
je
aas
es
adc
xor
es
icebp
andb
mov
mov
rcll
inc
push
xsha256
cmpsb
push
movsl
push
cmc
stos
movsl
cmp
jnp
stos
leave
shr
push
mov
dec
sub
xor
and
das
sub
shl
mul
push
in
loope
adcb
lock
push
xchg
adc
iret
mov
in
dec
adc
xchg
or
das
fimull
and
lds
aad
add
mov
cs
sub
mov
jno
push
insl
adc
sarl
mov
rcr
rcl
sti
push
insl
adc
arpl
fildll
div
popf
inc
daa
pusha
push
and
push
pop
test
cmpl
sbb
mov
outsb
xchg
mov
cltd
inc
mov
jb
mov
or
mov
sbb
pop
cwtl
push
push
pop
imul
lods
lods
bound
loop
scas
sub
es
mov
add
sbb
push
adc
aas
pop
jg
repz
xor
pop
test
fidivl
pop
mov
enter
mov
mov
xchg
xchg
sub
pusha
test
or
ret
iret
inc
jne
cmp
aas
jl
dec
sub
das
cmp
in
into
dec
lahf
xor
sbbb
xchg
mov
pusha
pop
bound
dec
inc
cwtl
mov
stos
mov
jb
test
cmp
mov
mov
fdivs
cmp
aam
pop
mov
xchg
clc
xor
flds
pushf
inc
sub
pop
mov
mov
jmp
mov
xor
lcall
subb
adc
sbb
lahf
stos
adc
mov
mov
cmp
cmp
mov
mov
mov
std
cmp
mov
jg
push
push
mov
mov
add
and
orl
test
mov
sbb
fistps
xorl
lahf
andb
leave
push
push
add
xchg
mov
and
ja
stc
xor
rcl
and
call
gs
int3
cmc
xchg
jg
stos
mov
and
hlt
push
mov
out
pushf
adc
cmp
pushf
out
cltd
jae
xorb
mov
movsb
cmp
push
cmp
sub
push
clc
imul
xchg
jp
stos
jge
ret
hlt
das
fistps
jl
shl
inc
dec
sbb
xchg
adc
cmp
cmp
out
add
jns
jmp
adc
insl
xchg
mov
dec
and
mov
cmp
xor
push
jnp
sbb
xor
hlt
jge
push
adc
push
mov
mov
into
popf
std
shrl
popa
and
push
adc
ljmp
jb
lea
scas
xchg
mov
jnp
call
pop
popl
sub
pop
in
inc
std
inc
fptan
xchg
addl
sbb
mov
add
std
loopne
inc
insb
jecxz
lcall
or
jge
sbb
jno
insl
call
lds
inc
daa
popf
sbb
jo
pop
jg
fs
or
mov
insl
rorl
ja
das
jmp
mov
xor
addr16
shl
nop
lcall
sbb
sbb
repnz
out
ficompl
sahf
lock
pop
clc
add
jg
fldcw
mov
mov
xchg
testl
fsubrs
sbb
repz
aam
out
adc
sub
ret
xchg
stc
push
shrl
mov
jle
mov
outsl
lcall
cmp
pop
fwait
into
cmp
lods
push
dec
pushf
push
add
jmp
xchg
xor
xor
jp
je
in
rclb
add
sbbl
cmpsl
lahf
cmp
dec
movsl
xchg
out
mov
loop
repnz
popf
jae
es
scas
push
or
cltd
in
jg
adc
inc
pop
adc
pop
bound
mov
cltd
push
stc
icebp
dec
jae
pop
or
mov
outsl
sti
into
inc
lcall
pop
cli
adc
loope
or
add
insl
jo
sbb
or
mov
loop
insb
pop
mov
mov
adc
pop
inc
mov
adc
xor
sub
and
mov
icebp
int
mov
ret
mov
stos
pop
jb
push
push
xchg
xor
or
pop
or
sbb
push
fs
mov
dec
out
adc
lahf
sub
push
xor
jae
cmp
aaa
xchg
lods
dec
adc
out
xor
xchg
jle
inc
mov
cli
nop
lcall
insb
popf
shlb
les
jg
out
popa
cmpsl
adc
sub
mov
out
fidivs
fisttpll
sub
loop
out
movsl
lods
out
mov
inc
xor
cltd
iret
push
test
mov
sbb
movsl
imulb
lods
out
fwait
stos
and
xchg
rolb
jg
ret
add
cltd
out
outsl
repz
cmovns
loope
xor
popf
adc
jae
or
add
xor
mov
sub
in
mov
or
aaa
test
inc
xchg
out
pushf
cmpsl
jae
mov
jns
fidivl
jbe
enter
sub
push
push
sub
fstpl
imul
addr16
and
imul
push
xchg
punpckldq
or
ja
repz
xlat
and
or
xchg
dec
aad
pop
sbb
jb
mov
repz
shll
jns
aam
mov
push
adc
xchg
nop
lds
std
mov
lds
and
fabs
rcll
add
gs
shrl
loope
add
ja
mov
sub
in
dec
xor
in
call
lret
mov
test
mov
dec
sti
outsb
inc
mov
sub
jo
and
push
mov
mov
rcrb
push
adcb
jecxz
mov
sub
lods
iret
outsb
and
inc
push
mov
clc
fcom
and
in
or
dec
inc
rdpmc
sub
lods
pop
and
mov
pop
aas
push
and
call
mov
je
sub
pop
outsb
sbb
cmpsb
rcll
jmp
ret
out
stc
fs
sub
mov
jno
xchg
nop
mov
cmp
pop
push
add
jmp
push
push
add
je
aad
sub
xor
sub
adc
cs
insb
jmp
pop
out
popa
popa
mov
scas
in
or
insb
add
dec
insb
outsl
mov
subl
jp
cmp
mov
push
xchg
jge
inc
ret
mov
xchg
das
hlt
mov
mov
or
and
pop
xlat
notl
fimuls
push
mov
sbb
jge
mov
cli
popa
xor
scas
mov
imul
jo
push
sub
in
stc
jnp
jecxz
mov
xor
mov
xchg
add
shlb
dec
lock
and
pop
adcb
nop
addr16
mov
dec
push
mov
jecxz
xor
repz
xchg
or
mov
sahf
cmp
mov
imull
jge
and
enter
imul
or
xorps
idiv
aas
adc
sti
fs
insb
inc
mov
outsb
cmp
sub
mov
cmp
xor
test
scas
or
or
jp
lret
mov
adc
mov
inc
xchg
and
jecxz
addr16
cmc
sbb
nop
insb
clc
aam
lock
divl
or
add
call
pop
push
lods
imulb
lret
cmp
sub
and
pop
lods
jae
repz
insb
pop
mov
xchg
push
ja
aad
add
adc
and
movsl
adc
popa
fs
pop
stos
adc
loopne
mov
dec
xor
hlt
and
adc
add
clc
mov
pushf
ljmp
aaa
sub
ret
out
in
mov
outsl
xchg
test
xchg
test
add
jbe
bound
vmwrite
pop
jg
aad
push
lret
mov
cmp
inc
lods
inc
in
loop
cmp
xchg
int
jg
iret
pop
jg
nop
div
aam
jp
lret
xchg
dec
bound
rol
adc
iret
cltd
out
xchg
pop
loopne
std
xchg
push
mov
into
xor
sbb
dec
out
add
fldenv
inc
adc
lret
mov
dec
hlt
sti
jns
aad
aas
and
subb
xchg
fsubl
add
jmp
xchg
movsl
push
fimuls
dec
jp
mov
shrb
cmp
mov
out
ja
in
into
jmp
stos
sub
popf
push
out
cmp
movl
xchg
int3
jno
xchg
rcll
dec
jle
stos
jne
in
cmp
push
mov
adc
data16
adc
ja
decl
lods
cli
add
loope
std
adc
dec
xchg
cmpsl
popa
pop
mov
popa
in
inc
aad
shll
js
shll
jl
push
shlb
cmp
ljmp
dec
mov
dec
and
pop
dec
jae
dec
inc
rorl
rol
or
fwait
and
fcmovnb
aaa
popa
pop
lods
xor
or
es
push
pop
or
sahf
mov
addr16
mov
out
pop
cmpsl
aas
dec
mov
xchg
aaa
nop
lret
add
rolb
ror
cltd
cwtl
stc
fdivrs
arpl
and
pusha
pop
inc
mov
cmp
out
sub
nop
int3
adc
dec
in
fldcw
mov
sub
movsl
or
jecxz,pn
pop
mov
jecxz
add
cltd
inc
push
dec
repnz
cmp
cltd
cmp
ja
loopne
aaa
movsb
jns
adc
call
test
xchg
adcl
lcall
nop
or
xor
int3
lret
in
aad
subl
xor
push
mov
jb
lret
add
scas
dec
pop
jg
jae
adc
and
idivl
push
js
jbe
rcrb
clc
xor
aaa
insb
xchg
xor
test
mov
jae
jo
int
int
in
cmp
mov
push
outsl
shrl
xchg
ja
adc
mov
pusha
aaa
into
fistps
call
dec
sub
mov
jae
iret
imul
xchg
inc
lea
sub
sbb
or
hlt
mov
inc
aam
popf
xorl
fstpl
or
jne
scas
out
rorl
insb
push
outsl
mov
test
adc
pushf
and
mov
adcl
ret
jmp
mov
push
or
or
xchg
loope
jl
lods
jns
dec
sarb
pop
mov
daa
xor
sahf
and
ret
fisubrl
hlt
mov
outsl
push
out
lods
sbb
sub
cmpsb
jno
push
ds
add
xor
divl
sbb
xlat
jmp
cwtl
in
fimull
adc
xchg
ljmp
or
sub
mov
stc
mov
push
cmp
mov
cmp
pop
out
rcr
dec
inc
mov
je
cmp
in
sbb
jecxz
in
test
mov
push
xchg
mov
jmp
cltd
gs
adc
fcom
sub
jns
stos
pop
sub
pushf
sub
mov
mov
xchg
hlt
cmp
outsb
stos
xchg
mov
mov
jae
js
jne
dec
mov
popa
xor
xchg
pop
xchg
js
jae
nop
sbb
int
dec
test
mov
addr16
fwait
dec
cmp
xchg
aam
push
add
iret
xor
shll
sbb
ds
ret
dec
sub
and
enter
out
das
lds
lahf
pop
aad
les
ljmp
ljmp
lods
shlb
les
jl
xchg
icebp
jns
jno
adc
jge
test
imul
xchg
je
pop
fildl
neg
repnz
fwait
mov
cmpsl
leave
stc
inc
push
sbb
insl
mov
sub
mov
in
xchg
jp
jnp
mov
rcrb
xchg
mov
push
cwtl
lahf
sbb
dec
ret
push
fidivs
rcr
jecxz
sub
loopne
ja
cmp
pusha
in
xchg
mov
add
jo
mov
dec
push
inc
call
out
int
mov
cli
cmc
jecxz
pop
xchg
fnstsw
dec
insl
repnz
iret
ret
jle
in
mov
imul
and
ret
lock
adc
imul
xor
pop
decl
adc
and
in
shrb
js
aas
mov
pop
and
fcoml
adc
repnz
jno
xor
xor
and
clc
mov
xchg
bound
sub
xchg
cmc
push
sbb
clc
push
sbb
mov
jnp
outsl
aam
sbb
inc
sub
or
js
mov
test
and
jno
fwait
neg
ret
mov
ret
dec
lock
movsl
jle
je
rcrb
cmpsl
jno
adc
add
imul
add
test
jle
mov
dec
sbb
rorb
cmp
pop
mov
dec
std
outsl
addl
ja
mov
push
push
jns
xor
fstpl
adc
rclb
cs
push
adc
lret
data16
mov
inc
addr16
and
repnz
insb
sub
cli
push
lods
out
push
inc
jns
jl
fnstenv
insb
mov
loopne
sar
jecxz
sbb
rcrb
inc
test
mov
repnz
mov
mov
rclb
sti
add
xchg
std
icebp
arpl
andb
dec
and
sbb
movsl
es
sub
inc
jg
sub
push
and
jg
jno
inc
popf
add
xchg
push
test
sbb
adc
or
orps
out
pop
fwait
push
ss
fs
addr16
fisubs
cmp
or
je
jb
adc
mov
or
mov
and
outsb
lret
jnp
add
xor
sub
jnp
hlt
cmp
bound
jnp
scas
lcall
push
mov
cmp
insb
mov
out
pop
jge
arpl
scas
and
push
or
cmpsb
pop
pop
loopne
movsl
inc
inc
cmp
inc
call
je
jae
jp
mov
xorb
fimull
lds
pushf
icebp
sub
imul
mov
mov
sbbb
insl
adc
inc
outsb
mov
fs
add
shrl
cltd
movsl
xchg
jnp
movsl
mov
in
jbe
incl
sub
sbbl
fwait
dec
mov
sahf
xchg
iret
mov
loop
adc
adc
outsl
add
sbb
xchg
add
dec
push
test
into
clc
scas
popf
icebp
movsl
jle
jo
leave
push
push
ja
push
sti
je
ja
xor
push
xchg
add
mov
xor
or
sub
pop
daa
pop
push
cmp
cltd
cmp
pop
popf
mov
jbe
data16
jl
and
addr16
popa
imul
add
jnp
adc
xchg
nop
fadd
cmp
sbb
push
test
mov
inc
dec
xchg
mov
mov
lret
xor
decl
fucom
fnstcw
dec
jnp
dec
pmaxub
arpl
or
pop
xchg
and
xor
dec
lret
push
and
out
fistps
mov
mov
mov
icebp
lcall
jge
pop
and
das
je
pop
pop
jmp
outsl
std
inc
jae
pop
lret
lea
jae
mov
inc
testb
mov
xchg
pop
je
ficoml
cmp
fldl
dec
mov
test
fcom
movsb
pushl
fdiv
cmp
xor
adc
js
pop
sub
pop
ss
or
cmpsl
movsb
divb
mov
mov
xor
outsb
pop
add
fcmove
loop
imul
aad
and
mov
loope
jle
popf
aaa
popl
mov
add
punpcklwd
daa
mov
adc
inc
ror
or
aad
seto
xchg
fisubs
jg
fmul
insl
adc
outsl
dec
ja
and
hlt
and
in
mov
or
int3
mov
jp
test
pop
sbb
test
pop
mov
aad
jbe
xor
popa
xor
or
mov
imul
pop
into
fsts
xchg
sub
sub
lahf
cmpl
inc
jecxz
cmp
sbb
in
aaa
jmp
clc
not
cmc
add
test
js
das
and
mov
repnz
pop
adc
js
jge
push
imul
fistps
sbb
fcmovnu
mov
iret
mov
dec
movsb
push
scas
sti
xchg
add
clc
mov
es
push
pop
xchg
push
adc
fistl
les
mov
cmp
sub
movb
cs
add
call
in
add
add
push
pop
scas
cltd
push
outsl
and
test
nop
jp
mov
jp
inc
fimull
mov
pop
nop
pop
mov
lock
xchg
stos
mov
jmp
arpl
out
xchg
nop
mov
inc
imulb
sub
in
test
mov
mov
addr16
mov
arpl
mov
jl
iret
cs
stos
add
dec
xchg
mov
xor
push
arpl
sub
inc
mov
stos
mov
or
aam
add
dec
jmp
fsubl
test
cmc
pusha
xor
pop
out
sub
lcall
sbb
outsb
arpl
mov
jg
mov
jns
clc
int3
std
stc
adc
push
fcmove
hlt
ss
push
or
mov
popf
and
loopne
je
inc
add
push
clc
loop
bound
sar
dec
sbb
nop
push
ss
popa
lret
pop
mov
je
jns
add
cli
cmc
jmp
test
stos
dec
add
pushf
mov
nop
lods
cwtl
flds
add
test
sbb
movsl
test
sub
jno
shlb
call
xchg
dec
adc
gs
ja
mov
popf
mov
mov
lods
cmp
or
hlt
stos
jo
ror
push
mov
repnz
push
mov
pop
cli
pop
out
into
pusha
mov
mov
xchg
push
mov
stos
dec
and
mov
call
fidivs
sbb
pop
adc
pop
mov
rorb
or
into
mov
jbe
inc
sbb
push
enter
inc
ja
jle
sbbb
jae
mov
out
inc
stos
pusha
sub
sub
lret
cmp
outsl
movsl
notl
and
sub
mov
xchg
nop
mov
sbb
mov
dec
mov
arpl
inc
xlat
add
xchg
fcoms
adc
arpl
clc
pop
iret
fucom
adc
repnz
fsubrp
xor
mov
lret
test
fwait
xlat
cld
lods
dec
in
push
sarb
ja
pop
add
aas
stc
and
in
sti
add
aaa
js
and
pop
mov
int3
dec
insb
xor
int3
rcr
mov
sub
mov
ficoms
dec
shl
rcr
inc
test
or
push
inc
inc
pop
pop
jmp
adc
bound
test
mov
aam
mov
pop
jbe
push
cmp
add
mov
add
xor
int
pop
shr
lahf
jns
add
xchg
cmp
es
pop
addb
mov
in
inc
sub
mov
cmc
jbe
into
repz
push
jbe
sti
or
rcl
xchg
fnsave
popa
cmp
xchg
jnp
pop
xchg
sbb
pop
fs
cs
push
xlat
dec
add
xchg
iret
dec
add
xchg
das
test
addr16
cmp
push
cwtl
dec
in
xor
xchg
fs
push
pop
jbe
adc
add
lds
xchg
movsl
mov
sbb
sub
movsl
mov
fstpl
push
lahf
outsb
js
xor
cwtl
int
xor
sub
jmp
insb
cltd
dec
jbe
adc
inc
paddq
xor
aaa
sub
subb
jbe
arpl
jmp
push
xchg
and
add
notl
mov
cwtl
xchg
cmp
stc
in
shll
or
push
sahf
inc
fstpt
out
cli
mov
lods
pop
or
mov
enter
ds
in
lcall
int
stos
decb
push
xor
jecxz
adc
aam
inc
cmc
sub
or
sahf
push
jne
in
push
clc
clc
adc
push
cmovl
insl
sbb
push
stc
fsubr
mov
cld
and
xchg
pop
sahf
out
cmp
mov
add
cmp
xchg
jae
lcall
dec
jle
cld
sbb
stc
pop
in
or
idiv
mull
mov
addr16
xchg
je
push
test
jne
rcrl
sub
cs
bound
out
ret
sbb
ret
mov
push
icebp
hlt
call
push
sahf
and
rcr
add
cmp
out
pop
lret
lock
add
mov
dec
inc
xchg
adc
jp
push
stc
fdiv
mov
jo
lcall
inc
pushf
pop
shll
es
and
xor
mov
dec
stos
jnp
popa
repz
jecxz
cmp
mov
js
std
in
cmpsl
lret
aad
or
iret
lods
push
sbb
mov
or
cmp
shrw
andl
and
jmp
out
mov
idivb
movsb
outsb
sub
insb
dec
inc
fsts
push
pop
ljmp
cli
push
adc
dec
ja
push
mov
mov
jno
ret
iret
or
addr16
daa
pop
xchg
sti
lods
fadds
popa
clc
push
in
iret
mov
cmp
mov
pop
jecxz
fnstenv
shll
jecxz
fisubrl
nop
inc
xchg
mov
shll
jge
lret
push
sbb
test
call
lcall
add
xchg
lcall
sub
scas
insb
lcall
inc
lea
mov
cmp
imul
fdivl
xchg
xchg
clc
test
enter
out
enter
and
dec
sbb
push
push
cmp
out
lods
and
mov
xchg
scas
nop
orl
outsl
das
andb
inc
sub
out
push
ss
cmp
and
addr16
xchg
jmp
fmull
jb
int3
movsl
or
test
push
xchg
mov
mov
mov
test
add
gs
lret
lret
adc
shl
scas
loop
test
data16
cmp
jge
ror
cmp
dec
es
adc
jp
out
cltd
stc
fisttpl
or
adc
sarb
push
iret
xchg
lock
inc
repnz
lret
inc
cmp
fcoml
orl
shl
sbb
icebp
lcall
sub
inc
dec
sbb
xor
cmp
enter
icebp
mov
test
xchg
and
inc
add
in
test
lret
in
inc
cmp
out
jecxz
scas
mov
bound
lahf
mov
jge
mov
mov
inc
push
cltd
pop
imul
popf
adc
xchg
mov
mov
mov
cmpsb
ss
lcall
ficoml
fbstp
mov
mov
aam
lods
sub
popf
das
nop
das
adc
out
add
push
xchg
dec
sbb
and
stc
cltd
ss
xchg
and
add
xchg
in
jge
adcl
lods
xor
and
int
outsl
dec
shll
mov
jp
jno
outsl
cmp
ljmp
ret
xchg
aam
inc
xchg
enter
xchg
repnz
int
jae
fwait
sbb
adc
cmp
mov
xor
push
aaa
loop
das
insb
and
and
in
mov
and
mov
lahf
test
ljmp
xchg
xchg
jbe
test
and
loop
je
popa
mov
mov
jo
stc
push
xchg
mov
ret
outsb
or
cmp
push
jne
repz
arpl
cmp
sub
jbe
jle
mov
inc
popa
out
rorb
lcall
jbe
mov
push
les
test
mov
out
jle
rcr
and
push
or
adc
mov
inc
pop
rorb
mov
push
dec
jne
cltd
push
cmp
lea
dec
into
cmc
cmpsb
pop
add
shrl
jne
add
stos
jmp
pushf
mov
cmc
inc
stos
mov
das
aas
in
xlat
cmpb
fidivs
adc
xor
imul
jno
push
inc
stc
mov
in
or
mov
fucomi
mov
adc
bound
cli
mov
mov
mov
xor
addr16
and
loopne
pusha
fstps
mov
movsl
out
test
xchg
mov
cmpsl
push
xchg
xchg
xor
jecxz
xor
xor
or
or
mov
clc
outsb
repz
and
jp
jbe
cmpsl
mov
jno
jg
fdivr
inc
sub
std
inc
cmpsl
out
mov
pop
push
jns
pop
inc
or
cld
push
sub
pop
dec
loope
fwait
mov
dec
jge
xor
adc
stos
xchg
xchg
push
es
cmp
jg
jb
orb
jno
loope
push
pop
in
jo
inc
xchg
push
and
lods
mov
cmc
xchg
jns
out
cltd
and
cs
sub
inc
jne
js
xor
scas
push
iret
push
fidivrl
pop
xlat
cmp
mov
rclb
push
fadd
ljmp
ja
mov
inc
cmp
jnp
xchg
outsl
mov
mov
mov
aam
insb
mov
xchg
jo
xor
dec
loopne
mov
scas
mov
xchg
jmp
enter
mov
addr16
sub
leave
les
xchg
and
fnstsw
neg
sub
out
xchg
out
xchg
and
fwait
adc
add
enter
pop
loope
movsb
in
and
divl
lcall
jecxz
repz
sbb
shrb
pop
push
daa
adc
out
mov
mov
mov
jae
lea
jo
rorl
and
in
jg
les
fmuls
add
mov
ds
push
aas
lret
imull
icebp
jmp
test
nop
mov
pop
mov
pusha
mov
repnz
aam
faddl
add
sbb
xor
dec
stos
testb
and
fwait
testb
repnz
mov
xor
or
mov
mov
jle
xorl
dec
sub
daa
out
pop
lcall
pop
push
stos
cmp
sbb
outsb
arpl
repnz
nop
or
lahf
dec
or
mov
insb
adc
ja
xor
clc
out
shrl
out
lds
inc
scas
inc
imul
dec
lcall
imul
cmp
roll
es
lds
lret
je
or
rcr
lret
sbb
push
pop
stos
pop
jmp
cmc
adc
ret
xchg
push
jnp
adc
mov
mov
pop
nop
lcall
mov
test
into
push
mov
pop
je
sub
es
scas
cwtl
in
ja
fstpt
movsl
jle
and
fisubl
push
push
stc
addb
packuswb
mov
movsb
mov
iret
aad
mov
pop
adc
aad
sbb
xor
push
and
jne
adc
mov
mov
mov
cmp
mov
cmpb
lds
aam
fiaddl
mov
xchg
insb
lahf
test
adc
call
mov
xor
sub
sahf
inc
adc
aam
sub
mov
jl
enter
andl
ror
mov
lcall
dec
xchg
cmp
jnp
mov
mov
xchg
je
pop
mov
inc
dec
std
rcll
sbb
jle
stos
pusha
fsubrs
mov
icebp
sbb
add
inc
jl
inc
fildll
lret
xchg
jo
aam
push
sbb
inc
mov
xor
pop
mov
adc
cmp
mov
xor
aas
loope
loopne
lods
arpl
test
sahf
add
lea
adc
and
aas
mov
jae
xchg
cmpsl
cmp
adc
jns
jno
inc
cmc
cmc
dec
xchg
cmp
int
cmp
insl
mov
inc
jb
xchg
mov
mov
sub
sub
into
xchg
jl
adc
lds
cld
mov
out
mov
or
jbe
mov
inc
loop
cltd
cwtl
push
adc
ja
push
or
les
insb
xchg
std
xorl
in
lods
pop
dec
call
outsl
push
adc
mov
add
sbb
int
shrl
repnz
fs
repz
subl
fwait
jno
cmc
les
lea
jle
lea
test
leave
ror
fcoml
add
call
scas
mov
xchg
pusha
jne
mov
adc
sbb
leave
sbb
sub
sti
pop
ljmp
sub
push
mov
popf
xchg
sub
rcr
push
mov
mov
movups
lods
mov
jno
add
push
fs
insb
repz
cmp
outsl
pop
inc
jbe
mov
adc
movsl
mov
add
iret
add
and
push
and
jle
and
jae
test
popf
imulb
test
xor
addb
test
ret
aam
jge
in
pop
clc
pusha
add
mov
stos
inc
mov
mov
test
or
adc
leave
jmp
jle
cmp
mov
push
js
xchg
or
outsl
push
bound
pop
iret
cltd
lahf
in
fwait
stc
pushf
jne
adc
dec
sub
je
aaa
xchg
negl
scas
stos
xor
into
xchg
test
and
sub
repnz
pop
data16
test
cmpsb
lods
push
sbb
pushf
cmp
cmp
out
inc
or
sbb
inc
adc
dec
mov
ljmp
leave
cmpsb
xchg
popf
sbb
mov
dec
and
shrb
fstpl
pop
enter
idivl
xor
push
pop
std
xor
xor
xchg
fwait
push
sub
inc
dec
and
xor
push
out
rcrl
xor
adc
fadd
int3
test
mov
inc
or
pop
or
mov
insb
adc
sub
dec
push
or
and
mov
sbb
xchg
and
and
inc
stos
push
mov
outsl
mov
clc
test
adc
insb
adc
jnp
out
mov
out
hlt
cmpsl
fdiv
imul
int
add
pop
xor
adc
xchg
xchg
mov
xchg
and
test
mov
pop
rcrb
daa
popa
push
and
jge
lods
sar
push
pop
mov
and
mov
push
mov
lods
jp
mov
das
dec
cmp
and
jae
hlt
addr16
cmovge
jmp
dec
jnp
xor
sub
pop
fistpll
pop
subl
xchg
mov
jbe
mov
loopne
and
or
les
sarb
add
sub
xor
in
popa
lock
push
push
jno
dec
mov
fsubrl
out
fwait
ret
or
ficompl
lret
inc
xor
mov
std
xor
je
sub
lds
xchg
leave
arpl
sbb
ret
adc
sub
pusha
dec
sub
bound
stc
movsl
add
sysenter
lock
and
fisttps
push
mov
xchg
jmp
into
test
stos
addr16
into
movb
scas
jg
mov
das
mov
or
sbb
sub
jp
mov
adc
in
out
shll
call
mov
and
push
mov
sub
jecxz
or
cwtl
dec
ret
cli
sbb
das
lea
ss
inc
test
jmp
xchg
loopne
lea
mov
push
nop
mov
lahf
scas
mov
ret
shll
cltd
cli
in
cld
les
adc
je
adc
mov
xor
ret
test
mov
cmpsb
scas
pop
mov
lret
sub
pop
in
mov
or
cwtl
inc
cmpsb
scas
or
xlat
xchg
jg
dec
mov
outsl
sbb
mov
mov
mov
divl
dec
xor
cld
fsts
mov
push
xchg
ret
sub
add
imul
lock
notl
ficoml
cmp
sti
and
int3
out
mov
sbb
int3
cli
daa
push
push
mov
push
pushf
push
imul
or
pop
jae
out
ret
fldenv
gs
test
popa
out
pop
jb
arpl
aam
mov
data16
mov
adcl
cmp
and
das
mov
jb
addr16
sbb
dec
and
inc
jo
push
nop
sti
call
mov
in
lret
or
push
inc
in
lods
mov
pop
out
testb
push
call
icebp
mulb
fsubrl
loop
push
inc
fucomi
jge
pop
test
shr
insl
lret
adc
in
sbbb
js
mov
jns
jnp
mov
or
icebp
add
loope
sbb
movsb
jae
adcb
das
xchg
mov
testb
inc
out
xor
out
xchg
scas
dec
mov
into
popa
pop
addr16
mov
cmp
mov
jmp
inc
in
jbe
in
negl
xor
mov
mov
dec
icebp
mov
cmp
rcll
test
cmp
gs
aad
dec
insl
cmp
popf
es
or
xchg
push
daa
or
mov
mov
push
sti
pushw
mov
mov
mov
fistpll
lds
push
mov
add
mov
shl
mov
rcr
cmpsl
xchg
into
lods
cmp
or
push
adc
js
mov
sbb
je
dec
arpl
pop
movb
mov
xchg
adc
sub
xor
test
addr16
mov
addr16
push
ja
std
sbb
xchg
pushl
lcall
add
pop
es
mov
xor
jns
sbb
scas
push
iret
pop
rcl
popa
and
in
gs
sub
dec
and
sub
xor
lea
mov
dec
push
bound
sub
or
mov
pop
lods
push
xchg
jb
gs
push
push
lds
loope
cwtl
cwtl
dec
jbe
cmpsb
in
push
test
fs
cmp
shl
mov
sbb
adc
and
adc
add
imulb
inc
sub
cmc
ret
push
mov
loop
data16
jnp
pushf
pop
insb
jbe
imul
jmp
aam
insb
fdivs
and
sbb
and
or
cmc
pop
mov
cmpsl
pop
stos
jb
loopne
leave
punpckhdq
hlt
cmpsb
push
rolb
repnz
shr
out
into
xchg
ljmp
inc
or
jecxz
out
nop
in
dec
add
pop
cmc
loopne
imul
cmp
and
sub
pop
lret
out
pop
mov
testl
push
into
push
sub
jne
dec
inc
pop
mov
je
pop
push
adc
loop
outsl
cwtl
loopne
mov
sti
or
or
lea
adc
aas
pop
ret
push
add
cld
sarl
jmp
fidivl
adc
mov
repz
leave
push
add
sar
cmpsb
dec
mov
pop
popf
mov
nop
push
mov
sbb
lret
push
in
loope
addr16
popa
lods
xor
xor
out
push
jae
and
pop
gs
outsl
xor
push
jle
aaa
in
jle
ljmp
cli
enter
mov
jb
orl
ret
xor
addb
lds
pop
int
cmc
mov
adc
push
xchg
inc
insl
insb
mov
mov
rorl
fmuls
dec
mov
push
pop
in
cwtl
add
add
mov
dec
ss
ret
out
int3
pop
cwtl
pop
ljmp
xor
ds
scas
xchg
xchg
aas
imul
cs
shll
sarb
mull
xlat
xchg
insl
iret
popa
orb
push
cmp
push
repz
clc
sbb
arpl
mov
add
outsb
pop
enter
add
and
movsb
lcall
stos
jecxz
testb
or
insb
dec
jg
jp
stos
sbb
mov
dec
sbb
pop
sbb
mov
aad
mov
push
push
pop
je
js
xlat
pop
mov
lret
dec
rolb
inc
fildl
insb
inc
jb
xchg
push
push
lret
pop
sbb
mov
push
xor
dec
sub
sbb
mov
pop
outsl
into
out
mov
xor
inc
cli
add
pop
sub
add
xor
inc
push
xchg
pop
lret
push
daa
jmp
daa
sbb
clc
lret
sbb
out
cmpsb
stos
dec
push
outsl
xchg
aam
jnp
loopne
int
inc
jle
loop
call
add
jg
cmp
fisubs
mov
jecxz
lods
into
and
xchg
lds
inc
ja
xor
iret
les
insb
nop
cmp
jns
inc
loop
or
notb
sbb
aaa
inc
mov
and
pop
dec
lret
xchg
mov
jne
pop
cltd
mov
filds
icebp
aam
icebp
sub
xor
bound
push
sahf
mov
add
push
mov
inc
mov
lods
cmp
fwait
push
hlt
or
or
mulb
inc
jnp
adc
lods
add
dec
clc
push
xor
sbb
xorl
cmc
xchg
adc
fcoml
clc
loope
push
cli
neg
sub
cmpsb
pop
fistpl
cmp
mov
shl
sbb
mov
leave
add
or
jb
inc
cmpsl
adc
mov
push
mov
add
insb
xchg
xlat
cmp
inc
std
sub
mov
mov
cli
mov
mov
ja
sub
movsl
adc
xor
jg
ss
inc
xchg
or
into
loop
pop
cltd
outsl
cmp
jmp
out
loopne
or
test
popf
dec
jae
sbb
insb
dec
dec
sub
xchg
push
push
add
nop
lods
add
test
cmp
sub
cltd
adc
nop
rcl
dec
idivb
mov
rorb
dec
adc
push
cmp
lea
imul
adc
or
mov
icebp
lea
and
cmpsl
jns
dec
mov
push
dec
pop
push
in
ud2
into
mov
push
aaa
gs
or
ficoml
outsb
jl
cmpl
adc
popa
clc
scas
mov
pushl
inc
ljmp
in
cmp
icebp
repnz
fisttpll
loop
test
pusha
mov
adc
sbb
jge
mov
bound
xchg
stc
testl
aaa
testl
sbb
enter
movsl
jae
rclb
jg
dec
fst
enter
lods
cltd
stos
push
idivb
imul
mov
add
sbb
sbb
stos
mov
mov
cmpsl
cmpsb
adc
fsubrs
in
cli
test
mov
lea
leave
cmpsb
fbld
mov
mov
adc
xchg
mov
stos
sarb
xchg
addr16
pop
inc
jo
jecxz
aad
and
popf
add
inc
inc
fistl
neg
inc
popf
xor
popf
xor
cmpsb
cltd
dec
mov
in
mov
movsb
dec
or
pop
popf
lods
sti
pusha
cwtl
cmc
sub
dec
mov
add
and
jmp
movsb
add
push
xchg
push
negl
mov
and
pop
orb
and
pop
mov
jge
in
or
dec
icebp
add
and
pop
stc
lea
sahf
or
sbb
fs
pop
dec
pop
push
xlat
mulb
xor
fcomip
cmp
loope
inc
cmp
pushf
fsubrs
inc
xor
loopne
popf
cmpb
pop
xchg
dec
call
xchg
lods
ss
cmp
adc
mov
rcrl
out
adc
inc
jp
mov
sbbl
scas
inc
sbb
sti
inc
push
shrl
or
and
popa
enter
iret
or
aas
cmp
pop
adc
pop
ss
pushf
mov
cmpsb
stc
mov
les
mov
cmp
or
call
cmp
cmp
add
hlt
and
nop
cmp
or
mov
cltd
divb
sbb
or
push
outsb
pusha
cltd
enter
inc
test
stos
xor
adc
jg
jnp
movsl
mov
pop
xchg
and
pop
push
sub
pop
sub
push
jne
lea
jno
loopne
cmp
into
fdivs
adc
sti
xor
pop
insb
mov
stos
xor
leave
jo
lods
subl
inc
mov
dec
stos
test
pop
call
or
andl
lods
call
or
cwtl
mov
add
movsl
mov
jnp
fcmovb
mov
dec
fisubl
push
cmp
lock
cwtl
pusha
call
loop
mov
je
mov
xchg
int
mov
and
and
fsub
pop
sub
sahf
shll
mov
and
loopne
daa
mov
clc
cmp
or
jl
and
mov
movsb
xor
sbb
push
jg
push
loop
pop
inc
cmp
inc
sbb
loop
loope
aam
ret
pop
imul
inc
movsb
inc
jl
lods
push
adc
js
or
rorl
stos
mov
fstl
repz
jge
dec
cld
mov
xchg
out
xchg
inc
lds
roll
cli
cmpsl
inc
loopne
mov
data16
mov
push
mov
pop
xor
lahf
push
dec
in
dec
movsb
lods
les
je
add
lcall
ss
mov
pop
xorb
push
sar
loop
negb
sub
repnz
loope
dec
jl
push
lcall
outsl
or
push
cmpsb
outsl
fisubl
addr16
daa
scas
xor
sub
and
jns
pusha
push
push
xchg
loopne
popa
xorl
cld
inc
and
inc
rcll
mov
and
insb
xchg
mov
arpl
dec
insb
out
mov
in
rclb
lcall
int
nop
insb
icebp
and
lret
stos
adc
xchg
cmpsb
cwtl
push
in
mov
or
xchg
inc
ljmp
mov
sub
push
clc
jne
lods
mov
lods
out
xchg
loop
mov
fstps
adc
cmp
int3
jno
sub
cmpsb
jae
sub
popa
test
cmp
pop
scas
sti
mov
xor
mov
ret
fadds
adc
push
pop
push
mov
mov
add
mov
jne
orl
out
pop
pop
mov
addr16
jmp
lods
mov
sbb
ret
sub
jne
ds
dec
mov
adcl
cli
insl
shll
movsb
push
lods
mov
cmp
jns
outsb
ss
imul
scas
jle
cwtl
jle
mov
movsb
dec
pop
sub
sub
and
ljmp
rolb
aaa
xor
nop
icebp
dec
mov
loope
sbb
pop
or
mov
aad
in
lds
mov
adc
jmp
jo
mov
and
loope
loop
shrl
jo
mov
das
into
pop
push
push
hlt
sub
mov
lcall
or
sub
mov
jecxz
and
outsl
repnz
es
jno
push
xor
test
gs
jne
pop
out
xor
sahf
or
cmpsb
xor
bound
cltd
loope
sbb
inc
and
and
sahf
sub
mov
in
in
shll
data16
les
cwtl
repz
mov
jno
push
ror
imul
push
inc
out
dec
inc
aam
aam
dec
or
mov
mov
scas
test
inc
jmp
cli
data16
outsb
sbb
mov
or
xchg
cmp
sub
dec
mov
cmp
aas
cld
daa
add
out
popf
mov
insl
and
push
lock
sub
jb
imul
or
cld
into
push
xor
pop
xchg
cli
out
push
mov
vpsrld
xchg
ret
mov
pop
cmpsb
mov
inc
dec
stos
stos
cld
push
mov
in
ret
dec
cmc
scas
push
out
aaa
cmp
fs
add
mov
or
loope
cmp
ss
enter
fisubrs
adc
ja
dec
rorl
movsb
loope
scas
movb
and
scas
out
pop
cmc
cmp
outsb
repnz
push
nop
notl
push
jb
enter
enter
add
sub
adc
or
mov
mov
adc
or
mov
pop
jnp
aam
mov
imul
jae
dec
sbb
dec
mov
mull
and
ja
adc
insl
lea
mov
pop
inc
iret
pop
adc
add
inc
adc
in
hlt
mov
or
lds
scas
xor
outsb
mov
xlat
fidivs
fs
loopne
mov
cld
in
adc
fstpl
or
aaa
push
pop
call
rorl
out
pop
popa
or
insl
cwtl
push
jae
nop
xor
xor
mov
aas
mov
mov
dec
pusha
ljmp
bound
mov
push
jecxz
dec
fdivl
pop
rcrb
inc
xchg
push
je
adc
pop
orl
jmp
push
mov
cmpsb
mov
inc
jmp
mov
jae
leave
test
push
jecxz
sahf
add
rorb
inc
cs
jle
movsl
jl
push
push
mov
mov
adc
mov
jae
jae
xchg
cmp
fisttpll
mov
add
adc
xor
and
xchg
jns
mov
stos
xor
push
inc
jo
inc
fimuls
jo
dec
clc
push
fwait
mov
dec
cmp
push
lret
testl
mov
lahf
add
cmpsl
sbb
dec
and
xchg
push
adc
cs
sub
inc
sti
aam
rcll
or
xchg
xor
inc
xchg
cwtl
dec
mov
pop
sbb
jo
mov
shll
ss
or
pop
dec
sbb
mov
ss
lret
cmc
aas
inc
cmp
mov
int3
xor
icebp
incb
mov
add
arpl
adc
or
dec
pop
bnd
pop
rcl
jnp
add
xor
mov
xchg
pushf
aam
adc
pop
pop
dec
xor
scas
fistpl
iret
sub
pop
adc
loop
repz
mov
cmpb
xchg
push
cmpsl
iret
daa
jbe
or
call
inc
mov
cli
mov
repnz
movsl
push
xchg
mov
sar
or
sbb
push
xor
cmc
jecxz
rcl
xchg
cmp
pop
mov
and
inc
sbb
xchg
cmc
fs
pop
pusha
jmp
xchg
insb
cmp
push
sub
clc
adc
jnp
test
mov
push
xchg
sbb
xchg
loope
ret
add
lahf
ja
mov
pop
bound
pop
leave
pop
mov
repnz
enter
add
lock
sbb
mov
popa
xor
dec
ret
int
lea
xchg
xor
js
add
jge
push
dec
add
mov
xchg
movsl
add
xchg
xchg
mov
mov
dec
insb
imul
or
ss
xchg
rcrl
repnz
mov
mov
mov
fdiv
inc
jbe
ss
mov
mov
scas
xor
cmp
mov
aam
jns
xorl
fwait
lock
adc
add
cld
jbe
jge
data16
nop
jmp
jnp
popf
stos
cmp
or
pop
arpl
bound
inc
inc
jns
sbb
mov
jl
adc
push
inc
cmp
or
movsl
sub
xor
int3
jg
lahf
mov
scas
out
mov
movsb
out
or
pop
inc
or
push
dec
pop
pusha
std
and
xchg
stos
push
sbb
pushf
lods
cmp
jnp
xor
push
in
or
pop
iret
sub
xchg
aam
insl
pusha
xchg
jne
testl
or
dec
negl
cmp
mov
aaa
dec
jnp
stos
shll
dec
int3
push
add
xchg
rcr
sub
lret
stos
pop
dec
in
jbe
lahf
fsts
dec
movsb
adc
subl
dec
pop
jmp
mov
xchg
sahf
test
mov
xchg
loope
sub
clc
push
outsl
test
cmp
cmpsl
ljmp
imul
inc
addr16
xchg
jecxz
dec
and
shll
xchg
je
mov
xor
cltd
data16
cmc
cmp
jmp
jne
jle
cwtl
jns
sbb
scas
stc
mov
adc
mov
xor
pop
mov
adcb
jmp
test
out
in
sub
add
pop
out
fildl
dec
cmp
jecxz
ljmp
xchg
ficompl
mulb
cmp
pop
jbe
int
push
mov
push
xor
stos
jl
int
movsl
ds
cs
scas
popf
xchg
xor
dec
mov
xchg
pop
popa
push
adc
add
into
aaa
mov
ds
rcll
or
pushl
daa
mov
rclb
mov
inc
add
rcl
ds
or
pop
sub
xchg
and
mov
xchg
pop
repnz
cltd
movsl
mov
xchg
out
pop
sub
incl
test
mov
sub
mov
sahf
jle
xchg
xchg
stos
shlb
mov
add
pop
xchg
cld
xor
loop
sub
arpl
dec
out
call
int3
mov
mov
aam
sbb
and
setnp
jge
punpcklwd
or
push
jo
out
cmp
push
pop
ret
mov
jp
push
out
xchg
in
push
in
pusha
cmc
test
stc
jp
sar
outsb
out
jnp
cmpsl
fildl
ret
xchg
fs
rcl
jmp
repnz
sti
aas
in
jge
cwtl
and
shlb
xor
loopne
outsb
out
out
mov
mov
pop
arpl
js
repnz
xchg
ret
out
dec
sub
pop
lods
adcl
lods
aas
mov
movsb
call
repz
dec
int3
fildll
in
imul
jae
rcr
mov
add
test
ljmp
fcomi
cmp
xor
in
call
mov
add
test
and
lret
out
sub
lods
leave
lock
sbb
sub
call
adc
push
sbb
cmc
mov
enter
loopne
sub
jnp
xor
add
sti
mov
jbe
add
in
pop
push
jmp
or
jle
inc
pop
mov
pop
leave
loopne
mov
xchg
xor
repnz
cs
test
orl
mov
lcall
mov
xchg
rcll
and
sbb
jge
or
ret
shll
mov
imul
je
faddp
mov
push
add
mov
pusha
scas
pop
mov
sbb
xchg
xor
iret
scas
cmc
lcall
push
push
dec
mov
mov
cmp
adc
int3
push
jmp
push
fstl
daa
pop
in
inc
add
and
mov
xor
sub
ja
sbb
inc
cs
imul
pop
dec
mov
or
mov
sbb
pushf
adc
cs
fmulp
rolb
sarl
and
push
and
test
add
jmp
repnz
aad
xor
clc
je
cmc
cwtl
xchg
xchg
cltd
scas
test
aaa
aaa
sub
dec
push
cmpsl
popa
loope
add
or
add
sub
mov
push
and
or
push
enter
lods
into
in
sub
jmp
data16
lock
lods
xchg
adc
xor
xor
adc
ret
dec
stos
inc
jmp
scas
dec
into
inc
call
pop
sbb
dec
mov
scas
push
add
rol
fcmovb
mov
xchg
pop
sub
inc
or
das
inc
loopne
data16
sub
or
mov
fimull
test
pop
cmp
stos
xor
jbe
mov
xchg
ucomiss
push
sub
fsubr
adc
cmp
pop
stc
ficompl
addr16
dec
jns
xchg
ds
mov
push
les
popl
fdivl
sti
push
rcll
push
inc
pop
cli
gs
sbb
lahf
int3
and
xrelease
les
dec
pop
push
dec
mov
frstor
bound
subb
into
movsl
pop
std
push
or
pusha
jo
add
pop
xchg
xchg
enter
or
jecxz
inc
out
scas
fmulp
fdiv
and
lahf
cmp
add
lds
popf
cmp
inc
movsb
fildll
not
and
mov
jb
sahf
cli
aad
fsubl
mov
pop
lcallw
mov
fcomps
sub
loop
shll
sub
mov
stc
and
push
rorl
mov
rcrl
inc
mov
jle
fldcw
movb
cld
push
xor
popa
and
lods
sbbb
cmp
outsb
dec
bnd
test
into
jg
movsb
sarb
pmaddwd
lret
add
push
enter
cmpb
pop
sti
mov
aaa
icebp
vcvtss2sd
adc
lret
push
jg,pn
or
int3
movsb
test
sub
shrl
push
cmpsl
leave
add
inc
or
mov
fiadds
inc
adc
pop
insl
lock
in
leave
push
cmpsl
stos
mov
inc
mulb
inc
out
icebp
pushl
xchg
push
dec
shrb
negl
insl
mov
push
sbb
dec
fmuls
lods
sub
push
outsb
dec
fadds
in
jno
icebp
pop
sub
lods
add
xchg
sub
add
popf
icebp
sbb
cmp
or
sub
inc
mov
cmc
xchg
daa
xorl
mov
mov
mov
enter
sahf
xchg
cmp
das
mov
and
jb
pop
xchg
sub
gs
xor
mov
repnz
repnz
sub
movb
adc
pop
add
mov
sbb
pop
or
dec
mov
mov
mov
or
repnz
vpmacssdql
jmp
or
lea
or
cmpsb
inc
fldenv
je
xchg
jle
repnz
rclb
adc
dec
or
xor
int
cmp
lea
cmp
pop
int
shll
popl
xchg
call
lea
and
push
inc
mov
mov
adc
cmc
or
xchg
push
mov
stos
and
jg
xchg
push
rcll
adc
mov
cld
sti
push
data16
inc
out
stos
or
lea
inc
shr
add
int3
and
std
mov
cmc
xor
add
mov
cwtl
sbb
push
insl
add
stos
arpl
dec
inc
outsb
mov
xchg
mov
pop
je
enter
xchg
push
mov
cmp
xchg
jae
enter
pop
sub
and
repnz
rcrb
daa
fstpl
mov
sbb
pop
mov
je
adc
stc
cmpsb
xchg
outsl
ret
fs
mov
sti
cld
add
out
mov
xor
mov
mov
push
push
xchg
test
imulb
and
js
mov
popa
orl
gs
mov
fucomi
mov
inc
inc
mov
and
imul
dec
inc
movsl
push
lahf
pop
jg
jge
dec
daa
ja
std
mov
dec
mov
popf
insb
or
push
out
mov
xor
mov
lret
ret
adc
negl
rcrb
push
fwait
cld
and
cmp
and
sbb
mov
sub
mov
enter
sub
xchg
popf
lret
add
pop
mov
mov
out
out
inc
pop
and
fstpl
sbb
dec
ds
or
int
pop
sbb
loop
and
pop
mov
aaa
push
add
popa
jmp
pop
push
enter
insb
pop
out
mov
push
test
test
ret
clc
xor
mov
aaa
cmp
bound
mov
out
movsl
jae
jle
and
xchg
decb
mov
sbb
rcl
pushf
call
mov
repz
add
xor
js
lock
dec
mov
dec
mov
pop
and
in
xchg
in
mov
cmp
loope
aad
lret
push
add
jns
dec
mov
fwait
push
hlt
xchg
dec
cmp
ss
inc
lock
dec
clc
mov
mov
push
dec
mov
popf
fs
icebp
and
mov
incl
inc
test
dec
xor
or
push
xchg
cmc
push
pop
pop
or
mov
add
pop
repnz
lods
jnp
xchg
sbb
dec
or
insl
mov
mov
sub
sarl
xor
test
mov
inc
pop
stc
pop
inc
inc
mov
mov
js
leave
xor
jb
cli
add
cmp
out
pop
xchg
cmp
shrb
jns
pop
push
fwait
aad
int
and
add
sub
test
inc
and
fstps
setno
rorl
cltd
in
xchg
lcall
cmp
inc
add
repz
lret
loope
and
lret
insb
pop
fisubrs
into
subb
popf
sub
sbb
es
es
ja,pn
sti
cmpsl
xchg
or
loopne
mov
rorb
push
in
sbb
or
mov
mov
jecxz
xor
push
leave
shrb
sbb
lea
in
mov
xor
sub
and
jns
xor
jbe
jmp
xchg
mov
dec
pop
pop
pop
mov
cmp
xchg
xchg
mov
loope
pop
dec
fnstenv
cmpb
mov
in
dec
mov
loope
xchg
adc
cmc
jo
in
in
add
stc
stos
shlb
mov
aaa
jno
xchg
cld
dec
and
pop
dec
xchg
jecxz
jns
push
mov
jp
nop
sub
pushf
mov
push
mov
sti
xchg
jno
je
addb
ffreep
lahf
aaa
pop
popf
out
and
lret
outsb
xchg
rorl
sbb
push
fisubs
adc
cmc
push
mov
inc
mov
xor
or
pop
movsl
out
dec
bound
xchg
xchg
ljmp
add
sarl
xchg
lahf
push
pop
push
cmc
mov
sbb
adc
mov
and
outsl
fstps
fidivl
cltd
push
dec
push
dec
stc
fcmovbe
cmc
mov
sub
or
dec
mov
dec
popf
adc
adc
pop
xor
adc
insb
repnz
cmc
lahf
cld
lret
inc
jb
mov
lods
dec
cmpsb
push
sbb
aam
jecxz
inc
push
push
in
nop
cmp
adc
loop
sbb
mov
xchg
out
fimull
js
sub
repz
outsb
mov
jo
sbb
push
inc
xchg
sub
or
cmp
mov
mov
dec
outsb
es
ja
sub
xorb
stos
and
out
inc
dec
mov
xchg
shlb
add
push
repnz
dec
push
sbbb
jne
jb
outsl
sbb
xchg
cmp
mov
out
mov
call
jg
out
mov
sub
inc
inc
sub
mov
inc
sub
inc
add
cmpb
mov
mov
movsb
movsl
sub
adc
jno
aad
xlat
rcr
mov
xchg
icebp
popf
add
sbb
sub
mov
sbb
sbb
mov
dec
inc
shrl
add
adc
inc
xchg
mov
fwait
mov
shlb
out
shlb
cmp
dec
test
jmp
mov
cltd
testb
sti
jne
pop
aaa
out
rcrl
call
add
xchg
push
int3
imul
push
stos
push
pop
dec
adc
push
and
cli
bound
add
pop
inc
mov
dec
outsl
jmp
xchg
outsl
jo
mov
adc
pop
add
sbb
lret
pop
dec
push
cmp
pop
sbbb
cmp
in
add
cmp
mov
or
stos
fdivrs
mov
insb
lahf
js
shll
mov
mov
clc
cmp
inc
mov
pop
xor
mov
flds
pop
out
lods
fnstsw
fwait
data16
pop
vmovaps
add
mov
and
or
js
jbe
inc
sbb
cld
ret
pop
mov
insl
pop
inc
fsubl
popf
dec
jle
repnz
std
les
mov
subl
sbb
adc
or
gs
mov
mov
pop
cltd
mov
inc
fistpll
mov
and
aad
ret
rolb
push
lods
mov
jne
push
mov
mov
dec
ss
mov
cs
mov
sub
sbb
sbb
fwait
jo
outsl
mov
mov
mov
cmp
scas
lcall
jle
mov
or
push
mov
out
cmp
mov
repnz
lea
addr16
lcall
mov
and
gs
js
mov
cmp
aad
add
cmp
inc
cmpsb
or
mov
mov
xor
stos
cs
add
adc
mov
clc
cli
incb
imul
gs
mov
lock
shll
xchg
pop
jo
fwait
pushf
pusha
push
sbb
jbe
cmp
fsub
jo
adc
movsb
push
add
in
subb
adc
jmp
mov
or
enter
mov
enter
lds
inc
int3
fistl
sbb
js
aaa
repz
xor
push
jmp
lcall
pop
fsubrl
in
mov
out
sub
out
lcall
std
int3
std
cmp
bound
pop
push
outsl
cmp
testb
cltd
shr
fbld
insl
insl
pop
jl
jb
cwtl
fsubl
test
movsl
lock
push
dec
outsb
add
adc
leave
adc
push
dec
sub
pop
stos
xor
push
movsl
jmp
or
testb
out
and
in
stc
jne
dec
or
ja
and
dec
sbb
push
mov
mov
sub
addr16
cmp
xchg
rcrl
ss
xchg
nop
xor
cld
lret
cmp
insl
cli
pushf
test
stos
or
pop
add
lods
cld
inc
cmp
dec
movsb
mov
mov
icebp
mov
push
andb
jbe
pop
out
enter
stc
push
push
outsb
fs
aaa
pop
cmpsb
jno
adc
and
push
sahf
mov
fwait
sbb
sbb
and
test
fstpt
sbb
pop
mov
mov
push
data16
out
adc
scas
imul
sbb
lret
enter
popa
mov
aad
push
or
stos
adc
xlat
and
pop
xchg
mov
cmp
xor
sub
imul
test
sbb
pop
pusha
inc
push
xchg
aad
mov
out
rcll
scas
rcl
bound
sub
push
mov
cli
fwait
push
mov
inc
popf
sbb
testb
leave
sarl
mov
fiaddl
jmp
gs
jb
sbb
sub
adc
mov
dec
mov
xor
hlt
sahf
mov
sbbl
scas
pushf
push
jae
add
test
push
add
mov
rcr
sub
cmp
mov
int3
mov
push
adc
adc
or
pop
or
mov
cmp
ss
test
mov
std
pop
cmp
fwait
js
les
sbb
jo
repz
lret
repz
ret
push
test
xor
mov
mov
cmp
cld
jg
push
inc
loopne
mov
inc
int3
mov
adc
adc
lret
xchg
scas
jge
jnp
jnp
lret
add
ret
sub
cmp
mov
inc
cmpsl
cmpsl
std
je
add
fildl
mov
call
adc
insl
gs
jo
in
ret
inc
pushf
into
cmp
cs
into
push
pushf
xchg
xor
mov
jmp
bound
pop
lds
gs
xchg
clc
js
and
lds
jle
ja
adc
xchg
in
filds
sti
popa
call
mov
jmp
rolb
stc
adc
repnz
add
data16
cmc
je
lcall
sub
add
inc
stos
fmul
add
push
mov
xchg
es
clc
xchg
xor
inc
push
iret
mov
gs
adc
and
fwait
add
and
add
xor
mov
pop
fcoml
xchg
dec
rcrl
jnp
clc
loop
pop
ljmp
jp
ds
or
lret
pop
jbe
lgs
sub
pusha
sbb
xchg
enter
fnsave
inc
push
scas
stos
mov
mov
movsl
mov
lret
dec
xchg
sub
fisubrl
dec
lahf
repz
sbb
sub
inc
add
js
daa
lcall
xchg
insb
movsb
jge
mov
mov
test
inc
insl
sub
sarb
lock
movsb
dec
rcrb
shrl
jb
jl
cwtl
cld
push
mov
shll
mov
xor
les
mov
daa
js
dec
clc
mov
sbb
pop
inc
adcb
dec
test
sbb
dec
push
jg
aam
test
mov
imul
or
lret
push
pop
xchg
fmull
sub
pop
ja
fadd
cmp
clc
xchg
rolb
aam
or
ret
push
aaa
ret
inc
imul
dec
adc
jecxz
pop
mov
xor
push
or
je
stc
hlt
add
out
out
sti
dec
jl
pop
jmp
sarb
cmp
fs
pop
jle
loopne
lock
cmc
out
outsl
dec
and
lahf
and
hlt
stc
dec
jno
cmp
mov
push
outsb
mov
or
push
mov
test
mov
bound
add
xchg
jmp
sahf
nop
add
imul
add
lock
jecxz
jmp
push
mov
cli
xchg
negb
add
stos
and
ficoms
or
or
inc
push
pop
test
popl
mov
jp
mov
inc
push
or
mov
push
rorl
orb
pop
loop
pop
xchg
insl
or
mov
call
stos
cli
xor
mov
imul
inc
daa
shrl
mov
jnp
dec
loop
sarb
push
ds
sbb
sti
jle
cmc
loopne
adc
pop
fldcw
jge
push
dec
adc
inc
stc
adc
add
sub
xchg
cmc
add
mov
aaa
dec
aaa
dec
lods
cmp
ret
test
or
cmp
out
lahf
inc
sbb
and
movsb
or
int3
ficoml
icebp
fsts
mov
orl
call
std
sarl
pushl
pop
dec
sub
xchg
jl
jecxz
mov
jmp
popf
dec
cld
aad
mov
pop
dec
and
clc
inc
push
mov
clc
pop
mov
lods
or
popf
mov
xor
push
les
pop
dec
out
dec
mov
push
iret
lods
into
jne
or
cltd
scas
imul
rolb
cmp
xor
imul
not
cmp
mov
pusha
popa
fldcw
sarb
mov
sub
cmp
sbbb
outsl
mov
stc
scas
stc
std
inc
pusha
stos
and
rcrl
dec
insl
sbb
rcr
xchg
adc
es
sti
xor
mov
test
pop
pop
test
sbb
dec
je
push
push
lods
aaa
ffreep
push
outsb
orl
stc
add
movsb
jmp
mov
das
dec
sarb
outsl
cmp
xor
push
std
jl
add
lcall
add
add
xorb
insl
inc
shr
adc
pop
push
and
jno
insb
imul
jb
push
das
mov
stc
cmpsl
mov
arpl
mov
or
test
sbb
and
outsl
lock
cmc
pusha
sub
or
jne
pop
pop
dec
jp
xchg
add
cmp
das
and
movsb
jns
inc
std
push
xchg
je
pop
fldcw
pop
pop
mov
cmp
cmp
xchg
mov
cmp
sub
adc
imul
out
incl
push
add
inc
cltd
pop
cmp
and
jbe
sti
sbb
fidivrl
out
je
stos
mov
lea
vpunpcklqdq
nop
push
mov
enter
leave
push
xchg
lahf
push
dec
xor
xchg
or
sub
mov
loope
mov
scas
jnp
outsl
test
or
xor
repz
je
lahf
push
push
mov
lret
out
lods
popf
and
cmp
xor
pop
inc
je
cmpsb
aad
imul
out
daa
push
divb
test
xlat
xchg
lods
fwait
sub
sub
mov
das
out
lea
roll
lret
into
mov
pop
mov
pusha
xor
add
in
sbb
or
add
lret
xchg
or
sub
xor
fdivs
in
call
std
adc
push
or
test
aam
leave
notl
push
pop
std
cmpsb
pop
sub
ja
jecxz
negb
or
mov
out
fs
shl
jge
adc
pop
das
lods
xor
xor
cmp
or
outsl
xorl
das
lods
and
test
sbb
out
shll
pop
cmp
xchg
lock
or
jo
cli
inc
insb
aaa
add
mov
repz
stc
lea
lods
int
xchg
das
movsb
jb
testb
add
pop
mov
pop
jmp
test
pop
add
mov
stos
insl
pop
ret
push
repnz
nopl
test
aas
lock
sbb
mov
mov
scas
mov
jo
stc
test
inc
shlb
push
and
je
pop
and
mul
ljmp
push
test
push
xchg
jbe
into
leave
stos
ret
adc
mov
xchg
call
enter
mov
and
pop
sbb
cmp
or
dec
cmp
cmp
cmp
sbb
and
adc
sbb
or
sarb
fwait
shr
stos
sub
adc
xchg
stos
je
outsl
rep
divb
xor
xchg
rolb
ljmp
mov
dec
add
jno
sbb
out
cmp
mov
out
sbb
loope
add
push
jnp
and
bound
popf
mov
loope
jmp
dec
xor
xor
cmp
out
daa
mov
stos
es
and
pop
aas
adc
popa
aad
sarl
add
inc
inc
mov
iret
fs
jl
lods
fidivs
inc
push
fwait
mov
push
movsb
xchg
xchg
lods
sbb
xor
iret
pop
outsl
into
test
leave
gs
xchg
add
cmpsb
pop
xchg
repz
push
psubsw
push
xorb
movsb
loope
dec
int3
test
in
movsl
dec
lock
insb
repz
pop
repnz
xchg
dec
fcmovnb
or
in
sub
jg
push
jno
addb
mov
icebp
inc
andl
jae
jp
dec
icebp
je
sub
and
inc
ret
out
pop
push
lcall
mov
and
in
and
gs
mov
ds
jns
xchg
jno
or
stos
iret
or
xor
nop
out
sub
roll
mov
dec
ja
xchg
xchg
mov
sbb
iret
xchg
jae
ss
jl
push
popf
shrl
out
dec
loope
pop
xor
dec
aaa
movsl
cmpsb
and
mov
pop
cmp
movsl
or
push
pusha
inc
cmp
sub
cmc
leave
mov
push
cmpsb
xchg
adc
sahf
dec
hlt
pop
jns
testl
lea
jl
jno
xor
jmp
jae
inc
adc
sbb
push
jae
inc
push
enter
dec
jne
sbb
add
and
in
fs
and
in
pop
in
loop
mov
int3
imul
psrld
sbb
ljmp
cmpsl
gs
addl
pop
inc
negb
push
dec
sub
es
or
sbb
dec
fwait
and
add
and
rorl
sbb
jl
mov
addr16
cli
in
add
jo
repz
xchg
and
dec
insl
sbb
adc
std
or
sbb
outsb
ds
ret
cs
inc
dec
and
xor
outsl
ds
inc
xor
dec
xchg
push
inc
cmc
cs
lret
sub
cmp
sub
out
stc
inc
mov
and
inc
imul
push
cmp
xchg
dec
leave
or
lds
xchg
jae
movsb
lcall
mov
lret
mov
dec
dec
xor
rcrl
icebp
adc
sbb
xor
loope
cld
outsb
ja
inc
xchg
jo
inc
test
mov
xchg
and
aas
mov
mov
mov
push
xchg
adc
and
addr16
lahf
or
pop
inc
xchg
outsb
fbld
pop
test
add
xchg
adc
xchg
sub
xchg
mov
dec
shrl
mov
fildll
or
iret
adc
icebp
lret
add
mov
or
stc
sub
jmp
mov
lret
mov
loopne
inc
pop
ja
fdivr
jl
fnsave
xor
divb
les
fs
or
sahf
or
mov
aas
mov
stc
lea
inc
xchg
inc
loop
and
xor
cs
cmc
cmp
push
push
push
cmpsl
mov
repz
repnz
jbe
stos
mov
or
dec
pop
jne
fwait
mov
mov
es
int3
push
imul
loope
bound
cmp
push
sbb
bound
test
movsb
sahf
int3
leave
stc
push
out
sahf
xchg
dec
stos
fists
dec
lahf
push
jns
inc
xchg
push
cltd
push
jl
ret
cmp
cmp
mov
mov
and
jb
in
inc
out
mov
dec
mov
mov
inc
repz
xchg
cltd
mov
cli
sahf
cs
and
add
popa
cmp
push
push
sbb
xor
dec
dec
inc
mov
and
std
push
test
outsb
push
jnp
cmp
ret
xlat
mov
repnz
xchg
push
sbb
mov
mov
push
cli
lahf
ss
add
mov
cli
data16
pushf
pop
rolb
jno
add
out
xchg
sub
stc
cmp
dec
add
ret
cmp
xchg
xor
aam
fisttpll
mov
sbb
lahf
xchg
or
adc
mov
int3
push
push
icebp
inc
xchg
pop
sbb
sahf
jl
into
inc
es
insb
mov
sub
sub
in
push
mov
fstp
pop
mov
cs
dec
in
inc
ror
scas
aas
xchg
mov
mov
lea
loop
fisubl
mov
adc
orl
xorl
scas
divl
pop
pushf
cmp
retw
in
sbb
dec
data16
stc
sub
js
or
lods
adc
adc
cmpsb
popa
js
sub
cmp
sub
sbb
and
mov
fsts
mov
jl
fdivs
or
add
fisttpll
xchg
xor
add
xor
lods
mov
pushf
test
add
adc
add
shrb
js
inc
icebp
jl
ret
inc
into
adc
xor
cld
cmpsl
sub
cmpsb
inc
mov
mov
sbb
mov
or
cwtl
cld
or
jp
xlat
js
je
push
sub
sbb
dec
adc
xor
or
sti
xchg
mov
stos
sub
sbb
cmp
xorl
arpl
push
mov
xchg
cmp
jmp
adc
and
call
fldl
xchg
lret
mov
inc
inc
pop
mov
xchg
in
cs
jae
stos
inc
mov
jae
inc
push
lock
nop
loope
movsl
ret
dec
int
mov
ret
aas
jae
jnp
adc
das
mov
call
jno
nop
into
adc
fisubl
add
gs
cmp
push
mov
test
xchg
add
pop
mov
mov
sbb
xor
cmc
mov
adc
lods
jne
sub
jecxz
fnstsw
sbb
es
sub
aam
in
xchg
cmp
ror
mov
inc
cmp
push
arpl
frstor
lods
cmpb
rolb
push
mov
lds
and
add
in
call
xor
mov
xchg
into
clc
sbb
or
cld
es
fucomi
pop
outsb
insl
push
nop
cmp
scas
adc
rcrl
shrb
rcll
repz
or
jo
pop
sahf
repnz
cmp
jns
push
mov
jle
loope
jp
fwait
inc
scas
jne
jo
cmpsb
out
sub
jns,pt
inc
adc
andl
or
int
cmp
mov
testl
gs
lods
rcl
daa
pop
sbb
sub
ret
sbbb
andl
inc
fsubrl
imul
inc
and
sub
loope
fdivl
aas
or
adc
push
cltd
pushf
mov
mov
out
sbb
addr16
mov
test
xor
std
dec
mov
push
xchg
shrb
cmp
pushl
call
sbb
in
out
cmp
adc
push
lahf
test
subb
mov
inc
int
push
sti
cwtl
pop
shll
xchg
cmpl
mov
xchg
cmpsl
loope
cmp
jns
adc
xchg
stos
jl
addr16
pusha
sub
pop
mov
rorb
mov
sahf
dec
mov
das
xchg
lahf
pop
test
pop
jg
es
xchg
fsubrs
sbb
inc
rcl
sbb
pop
fimull
xchg
adc
cli
lret
stos
adc
lret
mov
loop
or
insl
mov
movsl
mov
push
or
jno
je
rclb
outsl
shlb
mov
xor
ret
mov
iret
mov
in
mov
jns
jbe
lods
fsubr
sti
test
mov
xor
mov
inc
sub
xchg
mov
push
pop
std
push
daa
lret
notl
call
iret
push
std
fbstp
inc
fidivrs
int3
inc
mov
adc
pusha
jbe
push
mov
ds
repnz
sbb
icebp
xchg
in
ret
lock
mov
mov
pop
mov
sbb
int3
xchg
scas
inc
mov
sbb
jb
xor
scas
mov
cli
jbe
shl
gs
sbb
jnp
pushf
les
test
sahf
dec
pusha
cs
daa
shl
and
mov
clc
add
push
sahf
jmp
add
jo
out
mov
leave
mov
mov
daa
mov
pop
sbb
out
cmp
xchg
lods
or
and
es
jg
pop
sarb
jmp
jne
dec
insl
push
add
addr16
jg
lahf
mov
int
inc
daa
shlb
rcrl
and
sbb
jmp
add
jbe
subl
test
dec
cmp
adc
out
icebp
adc
push
fwait
dec
push
repz
jb
into
movups
ss
push
testl
jmp
dec
rclw
in
fmuls
xchg
xor
add
jmp
int3
push
daa
cmpsl
pusha
ljmp
adc
xor
or
jecxz
jno
add
fwait
xlat
mov
mov
dec
jne
pslld
mov
cmp
hlt
vmovups
cmp
mov
arpl
sti
es
xchg
aas
in
clc
dec
inc
jle
or
repz
fildll
test
xchg
fsubs
into
xchg
fs
mov
loop
mov
and
push
adcb
or
adc
xchg
sbb
sbb
cwtl
adc
sar
bound
xchg
pop
cmpsl
xor
push
xchg
cmp
cwtl
cmp
ja
sbb
push
je
ret
push
sbb
mov
push
fmuls
repnz
mov
xor
insl
or
dec
sbb
movsb
int
bnd
mov
sarl
in
call
jb
mov
adc
in
loope
imul
dec
sub
sub
stc
enter
xchg
mov
xchg
sbb
daa
adcl
pushf
xor
mov
sub
out
fisubl
mov
add
imul
fisttpl
mov
add
adc
adc
fdivs
cmp
lea
mov
cs
inc
loopne
push
mov
dec
popl
or
movsb
arpl
scas
out
nop
push
sub
in
push
lock
repz
cmp
fld
and
mov
xchg
jmp
sub
outsb
insb
inc
and
lods
or
jmp
cli
jecxz
push
outsl
jp
jbe
fdivrs
xchg
rorl
scas
sahf
fcmovne
insl
mov
test
loope
xchg
fisttpll
xchg
pop
pop
add
or
test
outsb
pusha
jle
popf
push
int
hlt
fildll
loop
jbe
stos
imul
xor
mov
js
mov
jns
pop
inc
sub
fnstsw
addl
ja
fimuls
popf
lret
mov
inc
icebp
push
ret
movsb
cmpsl
dec
orl
push
test
and
movsb
aaa
scas
mov
dec
jecxz
inc
and
cmp
rclb
fstl
sahf
push
jle
out
xor
dec
xchg
out
inc
aaa
popf
xchg
shll
pop
cmp
lret
out
lahf
xor
jne
sahf
aaa
mov
sahf
dec
cmpsb
pop
lock
mov
aad
data16
test
jb
dec
mov
ds
cli
rcrb
pop
or
xchg
lahf
movsb
in
xchg
movsb
cli
xorl
push
or
ja
push
leave
push
sbb
mov
das
hlt
and
lahf
aaa
repz
nop
aam
in
adc
push
fld
shl
mov
stc
subb
psubb
not
and
xchg
xlat
inc
mov
or
cmp
push
push
jmp
mov
dec
mov
cmp
aaa
sahf
push
sub
mov
arpl
push
idivl
push
xchg
mov
addl
pop
mov
sbb
pop
xchg
decl
mov
hlt
data16
dec
and
or
lret
int3
addr16
dec
xchg
inc
sbb
test
rcrl
enter
int3
pop
xchg
xor
xchg
sub
cmpsl
adc
data16
imul
call
xchg
das
aaa
scas
fsts
adc
push
adc
mov
inc
mov
repnz
cld
pop
insl
cli
idivb
add
out
scas
ljmp
dec
pop
arpl
dec
shl
sahf
outsb
cmp
jns
imul
and
jp
mov
repz
in
aas
bnd
call
mov
cmpsl
movl
cs
jle
push
cld
jae
adc
das
jne
lea
cld
sub
pop
lret
daa
lock
inc
in
cmc
or
jle
cmp
mov
mov
aaa
dec
and
pop
jmp
add
roll
pop
inc
adcl
inc
adc
inc
jb
das
and
xchg
aaa
pop
jne
sbb
gs
mov
jmp
ljmp
popf
nop
shlb
sub
fimull
sub
insl
mov
dec
loope
icebp
mov
or
add
bound
mov
mov
xchg
push
sti
aaa
lock
xor
cwtl
insl
push
test
test
fsubl
stc
ljmp
jbe
jmp
jb
ja
add
fidivl
adc
sahf
enter
lret
add
mov
mov
inc
add
or
dec
jle
scas
add
stos
pushf
and
cmp
add
adc
ret
pop
inc
gs
xor
mov
jnp
insb
ljmp
jne
push
cmp
ds
movb
xchg
fidivs
outsb
xchg
mov
lret
icebp
mov
or
aas
lea
jnp
mov
dec
jo
push
not
dec
mov
js
adc
pusha
cld
jbe
iret
stc
test
inc
in
sub
mov
pop
push
addr16
jge
out
in
push
adc
inc
fcmove
add
and
adc
stos
imul
jo
sub
push
mov
in
data16
sti
jp
call
outsb
add
cmp
sti
in
xchg
out
mov
sti
mov
mov
mov
test
orb
negb
cmp
mov
mov
mov
pop
jge
dec
jmp
add
pop
adc
pop
adc
adc
roll
test
imul
jle
xor
out
pop
aad
pop
jae
out
xchg
sub
mov
push
fmulp
lret
les
ljmp
mov
cmp
lds
shl
add
aaa
js
mov
loope
in
pop
and
in
les
jno
test
inc
sbbb
push
insl
mov
push
sbbb
mov
les
add
mov
push
xchg
into
andl
pop
popf
icebp
aas
shl
fcomp
mov
imulb
sub
xchg
dec
cld
sbb
cld
mov
shlb
push
cmp
sahf
hlt
mov
pop
adc
xor
jecxz
dec
nop
jge
std
mov
fistpl
nop
je
sbb
cmp
pop
data16
mov
push
rolb
xor
aam
push
mov
mov
push
mov
sarb
les
or
cmpsl
aam
int
shrl
mov
push
inc
pop
outsl
sub
add
sbb
push
cmp
push
out
add
outsl
icebp
in
jno
push
out
fcmovbe
out
adc
jbe
mov
test
and
cmp
and
mov
jnp
loopne
sub
imul
or
add
stc
int3
mov
pusha
arpl
cs
and
aam
add
jmp
push
andb
pop
sub
and
adc
mov
sahf
pop
or
xorb
shll
adc
xchg
or
sbb
addr16
enter
sbb
das
cwtl
das
mov
pop
subl
test
fs
scas
mov
jl
popf
cmp
stc
lret
add
icebp
test
pop
mov
mov
les
add
into
out
xchg
lods
js
cmpsb
cmp
xchg
xchg
ret
xchg
dec
or
cmp
movl
lock
inc
lret
xchg
adcl
ja
fdivrl
xchg
pop
inc
sub
pop
cmp
rcr
and
mov
mov
mov
xchg
lret
mov
adc
ret
shlb
iret
pop
ror
xor
inc
js
and
pop
mov
lcall
test
dec
sti
push
aas
cltd
lret
loop
dec
jnp
and
cmpsb
out
and
sbb
insb
test
pop
add
mov
mov
mov
push
and
mov
sub
imull
cmp
pop
lods
add
nop
pop
daa
dec
sbb
mov
dec
pop
pop
pop
mov
xchg
pusha
or
xor
jo
cld
out
add
mov
aaa
mov
push
cmp
add
cmpsb
ljmp
push
push
dec
mov
aas
iret
stos
ljmp
dec
add
arpl
xor
lock
std
sti
int
adc
sbb
push
iret
outsl
out
xchg
lods
cld
les
fistps
mov
and
mov
lea
or
xchg
add
and
mov
cmp
imul
mov
cmp
jo
lcall
popf
mov
push
inc
sub
or
or
outsb
sbb
data16
push
ror
add
orb
sub
or
mov
adc
jge
mov
pop
push
xchg
sub
sbb
fcompl
mov
fstps
cmp
test
lret
mov
sbb
hlt
sti
aaa
xchg
push
adc
lea
pop
or
mov
pop
call
ret
adc
popa
in
add
fisubrl
push
xchg
test
jecxz
inc
push
popa
sub
push
push
dec
xchg
clc
xchg
in
mov
je
in
int3
or
jns
push
xchg
mov
stos
jl
cmpl
jp
mov
adc
sub
icebp
jnp
sbb
lahf
jno
hlt
cltd
and
sub
shl
xchg
jne
nop
lods
jmp
sbb
divl
jns
pop
test
add
or
add
fsubs
sbb
xor
fldenv
xlat
jmp
jbe
pusha
xchg
sub
data16
in
adc
enter
xor
pop
out
insb
dec
cld
pusha
xor
lock
adc
cmc
adc
pop
mov
repz
rolb
or
mov
mov
mov
cmp
xchg
stc
out
or
outsl
dec
stos
aaa
dec
fs
dec
push
push
inc
ss
push
adc
enter
dec
nop
clc
jno
dec
pop
mov
inc
jmp
int
outsb
xchg
cmpsl
out
lahf
cltd
and
imul
das
lret
vpminsw
scas
or
hlt
cwtl
inc
sub
or
push
inc
insb
leave
mov
jp
push
fwait
jl
xor
ret
mov
mov
imul
addr16
adc
popf
divb
mov
and
mov
and
nop
repz
sub
or
jae
imul
in
push
xor
mov
or
sub
cmp
mov
sbb
je
dec
out
das
lods
add
push
dec
mov
mov
mov
push
imul
arpl
adc
cld
mov
je
andb
sbb
add
pop
dec
add
loope
into
adc
cmp
nop
sbb
idivb
int
fsts
inc
test
cmp
repnz
enter
int3
movsb
pop
cs
pop
mov
push
mov
icebp
cli
and
jmp
push
xor
dec
movsb
jnp
or
daa
je
jle
adcb
cwtl
and
jg
fcoms
sub
pop
pusha
push
push
fucom
fisttpll
push
push
in
popf
stos
adc
dec
stc
test
pop
repnz
out
jmp
xchg
fdivrs
loop
add
dec
cmp
xchg
sti
mov
mov
xchg
dec
jb
movsl
fiadds
add
cmp
dec
std
dec
cmpsl
inc
rol
mov
mov
pop
les
pop
xchg
sbb
ja
mov
stc
aad
repz
lods
mov
jns
ret
xchg
mov
notb
add
fcmovb
xor
loope
jl
adc
push
jae
add
mov
or
xor
mov
inc
push
mov
or
and
shlb
es
push
or
fisubrs
sub
sbb
aam
cs
mov
clc
push
das
xor
or
mov
flds
pop
stos
sub
add
enter
dec
mov
xchg
jl
mov
insb
aad
mov
lods
lea
sti
call
mov
pusha
repz
cmp
jmp
xor
and
les
pushf
lock
mov
mov
xor
test
cmp
fsub
inc
pop
sub
pop
test
lock
mov
mov
arpl
clc
mov
mov
dec
into
stos
or
ljmp
and
push
loope
xchg
insl
jle
jne
add
mov
adc
scas
aas
sbb
xor
mov
arpl
push
fwait
inc
xor
test
outsb
or
cli
mov
loopne
xchg
jb
xor
or
and
ljmp
jp
xor
or
push
dec
movsb
cmp
push
push
roll
cmp
insb
dec
lea
imul
pop
rorl
movsb
test
aas
insl
push
aad
aam
adc
paddsw
xor
scas
xchg
mov
add
mov
and
mov
imul
pop
xor
addb
jmp
xor
pslld
fbstp
negl
dec
sub
mov
inc
xchg
inc
push
jecxz
jmp
rclb
rcll
push
fdivrp
in
hlt
es
cmp
aad
aam
or
adc
imul
pop
loopne
pushf
mov
ror
cmp
leave
loop
add
dec
sarb
lods
ds
sahf
xchg
out
ret
lods
lret
sbb
dec
test
fnstsw
fst
mov
xchg
faddp
movl
or
add
mov
rcr
sub
inc
stc
mov
cmpsl
inc
mov
fistpl
movsl
icebp
out
mov
cmp
dec
cmpsl
movntq
add
xor
ljmp
xchg
adc
mov
inc
lea
loop
stc
aas
fsubrs
xor
pop
dec
cmp
loop
imul
out
mov
js
jge
mov
jnp
mov
lods
loop
sbb
scas
pop
and
fbstp
dec
add
shl
mov
push
mov
cmc
dec
xchg
shlb
mov
outsl
inc
sub
das
push
xor
std
lods
pop
push
cmpsb
pminsw
mov
outsl
mov
inc
jl
scas
cwtl
xchg
push
and
iret
loop
xlat
inc
or
xor
mov
ficompl
pop
sbb
sub
lret
movsb
dec
hlt
sub
out
mov
imul
or
into
xchg
and
sub
lods
push
addr16
mov
mov
mov
loope
sarl
inc
mov
dec
jg
and
aam
inc
fwait
jle
out
shl
ja
enter
mov
push
addb
jno
xchg
jbe
xor
lods
sub
pop
jg
add
inc
mov
mov
das
loope
jnp
not
adc
imul
aaa
mov
xchg
mov
inc
pushl
outsl
pop
and
dec
jmp
and
xor
test
mov
xorl
mov
xchg
sahf
dec
mov
outsl
es
fnstenv
out
mov
and
push
or
cwtl
sbb
inc
mov
out
jne
in
out
adc
add
popa
out
and
sub
std
aaa
xor
xchg
dec
xchg
push
ficompl
daa
cmp
xor
and
adc
pavgw
jb
pop
test
sub
xor
sub
jle
xchg
jg
inc
dec
outsl
xlat
shlb
adc
in
leave
cld
dec
sub
arpl
js
sub
mov
repnz
dec
sbb
push
sarb
sub
jmp
hlt
jne
mov
out
lods
mov
lock
dec
lret
and
mov
test
aad
sub
sub
adc
negb
repz
jne
je
dec
cmp
xor
add
mov
mov
outsb
mov
mov
jne
cs
iret
rolb
pop
enter
mov
or
outsl
pop
sbb
out
stc
icebp
adc
out
xor
jno
gs
call
jns
mov
add
push
fistpl
lock
or
dec
mov
and
push
inc
sbb
xchg
or
inc
adc
ja
out
outsb
sbb
mov
ss
jle
mov
xchg
mov
jmp
jle
ret
xlat
and
mov
xor
push
sbbb
dec
xchg
sbb
in
ficoms
pop
pop
or
dec
mov
icebp
test
dec
sbb
mov
js
inc
jne
test
fsubrp
mov
push
pop
loopne
sbb
out
or
iret
pop
push
add
add
xchg
push
sbb
cld
cmpb
les
mov
mov
ja
lds
daa
or
test
adc
imul
insl
or
jg
add
andb
pop
mov
in
mov
fucom
cli
icebp
sub
sub
or
negl
pop
pushf
jnp
scas
mov
in
mov
lods
ret
mov
test
rcrb
inc
jb
fdivrl
fnsave
dec
cwtl
mov
imul
pop
add
aam
stos
cltd
fistl
add
inc
and
aaa
jg
insb
mov
out
or
adc
dec
add
mov
and
call
lods
jno
imul
lods
jnp
inc
dec
daa
cmc
jo
push
test
sbb
enter
or
mov
push
add
gs
test
mov
stos
test
lds
adc
adc
outsb
mov
inc
imul
icebp
xchg
and
shr
test
jmp
mov
xor
fisubs
dec
lea
mov
adc
mov
mov
add
nop
out
push
imulb
push
xor
xor
add
and
aad
std
je
xor
cmp
fisttpl
jae
cmp
or
lcall
out
jecxz
push
repnz
mov
mov
mov
insb
jno
jecxz
cmp
or
sub
in
xor
test
mov
mov
js
dec
add
mov
xorl
xchg
lret
push
pusha
cmp
pop
faddl
clc
add
xor
push
scas
les
scas
mov
sbb
fs
jp
ja
inc
adc
iret
push
adc
dec
loopne
push
scas
hlt
or
mov
iret
xchg
mov
pushf
sub
divb
imul
and
cmc
sub
pusha
xor
aaa
sahf
cli
lcall
mov
es
arpl
push
dec
mulb
cltd
fstpl
int
mov
mov
outsb
sahf
adc
mov
xor
ret
xchg
dec
sbb
call
shll
dec
cli
movl
push
imul
jle
lods
rcl
lret
fstp
dec
aam
out
cli
and
fwait
jle
adc
rclb
add
call
dec
out
pop
test
je
jg
or
les
jnp
movsb
into
push
sti
jo
gs
imul
mov
stc
test
jecxz
or
into
or
inc
jno
sbb
or
adc
mov
mov
ds
leave
and
push
jmp
add
dec
sub
shll
push
call
xchg
jb
or
sbbl
mov
and
cli
stos
test
mov
lret
scas
sub
fwait
adc
cwtl
and
paddq
and
into
push
pushf
push
leave
jb
arpl
or
in
and
xlat
shlb
fwait
sub
adc
mov
gs
bnd
mov
dec
imul
and
enter
cli
lods
outsb
test
sbb
jnp
pusha
push
and
int3
leave
mov
pop
sbb
mov
insb
lods
or
std
push
cs
int
pop
fidivl
dec
lret
push
xor
das
and
cmp
das
out
mov
dec
dec
imul
mov
fwait
pop
push
ds
andl
fadds
push
cmp
push
pop
xor
jp
mov
add
cmp
pop
cld
pusha
mov
mov
imul
xchg
xor
add
xchg
dec
out
sub
dec
aas
insb
or
sbb
push
adc
add
daa
scas
pop
mov
adc
mov
inc
imul
lock
jg
cmp
jb
inc
mov
aad
loope
mov
scas
or
orb
fsts
lds
inc
bound
xchg
xlat
out
es
sbb
add
fcompl
mov
mov
cmc
insb
test
push
mov
enter
hlt
xchg
mov
cmp
cmc
iret
pop
out
and
rolb
mov
push
loope
dec
xchg
dec
sbb
cmpsl
fmulp
in
sub
jbe
fwait
aas
xchg
sub
cmc
mov
pushf
push
cmp
cmp
cmp
xchg
push
inc
das
xchg
push
push
mov
addr16
inc
repz
or
call
add
mov
jle
pop
repz
pop
adc
and
pusha
add
inc
pop
cld
jmp
inc
jl
push
jb
jmp
jbe
pushf
dec
in
adc
mov
inc
pop
ja
inc
sub
pop
push
mov
cs
call
or
rorl
int
clc
ret
in
repz
sub
sub
inc
inc
xchg
mov
add
mov
or
aad
jge
loopne
imul
inc
or
xchg
and
fisttpll
jg
jl
mov
fisttpl
jp
iret
cmpsl
loopne
das
inc
test
mov
push
je
or
sub
and
das
add
pusha
sub
test
dec
std
mov
test
mov
xchg
rol
xchg
mov
int3
jbe
mov
adc
push
pop
mov
cmpl
jb
dec
jecxz
push
sbb
add
mov
enter
push
sbbl
lds
sub
mov
jl
dec
pop
cmpsl
je
sub
fmul
mov
xchg
add
dec
mov
xchg
push
cmpsb
and
out
es
push
out
mov
cmp
sub
mov
or
xlat
and
lcall
push
orl
xchg
dec
mov
testl
movsb
xor
xor
jl
ds
and
mull
scas
pop
stos
rolb
push
mov
lea
cli
out
movsb
pushf
pop
mov
aad
cmp
ds
pop
xor
scas
out
call
insb
inc
aam
movsb
dec
mov
pusha
jl
jns
pop
push
fsts
test
into
mov
xlat
mov
xor
sahf
ffree
sarb
cmp
test
call
or
in
mov
fnstenv
imul
mov
xchg
mov
xor
les
or
jle
jmp
mov
sbb
jae
jo
inc
inc
adc
in
jg
pusha
mov
jns
nop
loopne
cmp
pop
cmp
add
jne
in
shl
sarl
movb
movl
rcrl
cmp
inc
inc
test
test
lcall
jp
push
jg,pn
fwait
jae
adc
mov
fwait
and
loopew
fldcw
or
sbb
andb
call
lea
in
lea
mov
lret
arpl
xor
jno
push
and
loop
ss
push
and
outsl
sbb
mov
push
add
test
xor
sbb
sub
jle
adc
and
jae
std
pushf
call
inc
outsl
hlt
scas
and
lds
pusha
js
or
sbb
adc
mov
out
out
xchg
pop
enter
sbb
dec
fwait
lea
aam
xlat
movsl
jmp
jle
mov
pop
les
aad
bound
mov
adc
popf
lea
decb
mov
xchg
mov
push
sahf
mov
shll
imul
and
rorl
and
nop
sbb
cmpsl
lahf
adc
add
stos
xchg
bound
cmp
inc
cmp
mov
push
mov
icebp
mov
mov
sbb
jg,pt
fistl
aam
cmp
jo
dec
sarl
xchg
inc
inc
andb
inc
lret
lcall
imul
mov
dec
mov
jbe
andb
xchg
ret
push
or
sbb
testl
sub
pop
lea
inc
and
and
add
jne
and
mov
fwait
dec
notb
push
adc
fisubrs
xor
sub
mov
mov
sub
ljmp
xchg
test
mov
push
out
and
mov
xchg
clc
into
adcl
mov
xchg
mov
shrl
cmp
push
clc
pop
orl
xorl
adc
dec
mov
push
xchg
jmp
jp
jl
je
sub
xor
loopw
leave
add
jno
or
outsb
add
xchg
sarl
sti
xor
jno
mov
aaa
pop
inc
lds
cs
push
push
testl
jns
pop
int
dec
push
mov
cmpsb
iret
cmp
and
dec
xchg
mov
aam
cmpsb
mov
push
into
jnp
lock
into
cli
add
enter
imul
mov
movsl
out
int
mov
test
pusha
push
into
sbb
xlat
lahf
jmp
jne
cmpsl
lahf
aaa
mov
ret
jae
notl
ret
lea
adc
stos
sbb
addb
hlt
jo
rcrb
fldenv
cmp
and
jae
dec
jo
stos
into
int3
inc
xchg
cld
and
adc
hlt
sub
xchg
mov
xor
pop
test
inc
loope
add
aam
pop
mov
pop
mov
jnp
jb
dec
jne
aam
orl
fcomp
in
cmpsb
enter
xor
fistl
mov
in
jb
xorl
ljmp
in
mov
dec
outsb
mov
ret
inc
icebp
xor
mov
and
jo
inc
inc
sbb
fldenv
je
sbb
xor
and
add
sbb
push
lahf
and
stos
sbb
or
mov
cmp
mov
mov
ljmp
jb
adcb
jmp
fcomps
shlb
scas
lods
sub
sbb
sarb
push
mov
xor
mov
xchg
sbb
repz
popf
insb
insl
ljmp
jl
inc
and
scas
xor
adc
movsb
movsb
scas
nop
inc
sahf
mov
adc
cmp
shlb
mov
nop
aaa
sbb
and
shrl
rcr
pop
pop
stos
jmp
mov
fcmove
inc
jae
and
repnz
cmp
into
cld
into
mov
std
leave
dec
pushf
cmpsb
xor
shr
scas
pop
pop
push
es
fdivp
sub
sub
mov
sahf
mov
sub
inc
jmp
leave
mov
lea
pushw
add
lret
push
outsl
sub
mov
in
jecxz
fsts
shll
mov
cmc
inc
cmpsb
pop
mov
scas
push
or
ljmp
inc
xchg
scas
sbb
add
xchg
stc
pop
push
dec
in
outsl
roll
fucom
inc
push
lcall
sbb
mov
int
test
test
stos
and
loope
and
jbe
adc
push
push
pop
sahf
pop
push
add
pop
cmp
mov
adc
orps
jecxz,pn
sarl
xchg
cmp
add
jns
out
push
or
mov
mov
daa
jae
and
mov
arpl
adc
lahf
push
adcl
jle
in
into
mov
sar
js
mov
out
adc
jno
inc
cmpsb
mov
push
dec
fst
adc
sub
daa
lret
sub
ret
and
cmp
sbb
push
test
dec
jne
ss
insl
xor
ja
ret
pushl
sbb
push
in
cld
dec
cwtl
lds
data16
xchg
adc
mov
mov
fisttpll
adc
add
mov
call
pop
inc
push
push
jg
and
mov
adc
xchg
ja
cwtl
enter
jecxz
out
jg
lods
mov
sub
xchg
daa
loope
push
andl
pop
pop
scas
xchg
mov
icebp
xor
stos
out
shrl
iret
ret
mov
xchg
pusha
lret
pushf
dec
ret
sub
out
adc
pop
sub
addr16
mov
movsb
and
stos
pop
imul
dec
jae
jnp
push
xor
push
shrl
test
push
aam
dec
les
inc
inc
mov
or
xor
jns
insl
cli
and
leave
sbbl
adc
add
sub
mov
or
pop
xor
jnp
sarl
mov
cld
xchg
dec
or
fadds
jg
and
aas
push
cmc
or
and
das
sahf
mov
dec
test
pushf
shlb
jmp
rcrb
mov
nop
xor
pusha
cmp
jne
outsb
cmp
jmp
mov
iret
pop
or
mov
jle
repz
fdiv
out
xor
mov
pop
loop
jae
mov
repnz
js
adc
xchg
xchg
aad
fldcw
push
js
rcrl
sub
test
repz
lcall
bound
sahf
add
or
lcall
adc
sbb
push
sbb
test
add
jle
xchg
push
mov
jbe
jp
arpl
inc
push
add
dec
xlat
cld
push
push
fbld
pop
sbb
mov
ja
cmp
push
in
dec
push
dec
jnp
clc
repnz
add
xchg
adc
out
insl
pop
push
xor
out
out
push
mov
andl
pop
mov
fdivrl
sub
xor
mov
mov
push
out
out
xchg
stos
or
outsb
lcall
mov
mov
cmp
adc
mov
enter
pop
fwait
rcrl
sbb
fistpl
out
repnz
push
mov
arpl
outsb
je
aam
mov
imul
call
adc
cltd
lret
jno
pop
fsubrl
ret
out
aam
mov
sbb
int3
test
arpl
pop
leave
cld
push
out
jne
mov
inc
das
insl
adc
fcom
jp
pop
mull
lret
xchg
pop
pusha
js
fldenv
xchg
jo
scas
es
dec
test
and
mov
mov
imul
fcompl
lret
in
sub
xchg
adc
xor
jl
mov
and
cmpsb
mov
sbb
scas
int3
mov
enter
flds
and
push
and
js
or
jg
mov
cmpsb
hlt
push
vpor
mov
push
out
mov
leave
dec
or
repnz
aas
movsb
addr16
sub
add
pusha
mov
jo
or
sub
push
sahf
out
and
jmp
push
cmc
test
adc
fs
lock
push
scas
sub
lcall
push
je
idiv
mov
iret
std
repnz
cmp
inc
fisttps
xchg
pop
aad
xchg
jne
or
das
ficomps
mov
or
xchg
into
out
lret
push
nop
dec
ja
mov
pop
ss
sub
inc
xchg
lret
xchg
push
test
fisubs
out
cmp
sbb
insb
mov
mov
cld
jne
orl
push
pop
add
sub
or
insl
mov
idiv
lods
in
jecxz
mov
repz
sahf
filds
mov
cmp
dec
fldt
rcr
imul
or
mov
fs
jp
xlat
jnp
sub
mov
in
sub
rclb
or
shlb
dec
testl
pop
int3
pop
pushf
popf
into
jb
repnz
scas
jno
loopne
sahf
push
into
and
scas
fdivrl
invd
xor
pop
into
xor
jnp
push
mov
aas
dec
cwtl
dec
inc
inc
mov
inc
lcall
or
cwtl
xor
dec
sar
aas
xchg
ror
mov
xor
jno
mov
sub
inc
shl
xchg
fiaddl
lods
sub
xor
lds
add
fs
lret
outsb
push
fisubrl
lods
inc
jmp
and
cmp
cmp
pop
xor
mov
push
xor
fnstenv
cmpsl
dec
and
cmp
int3
mov
mov
out
movsl
pop
test
lods
mov
arpl
dec
push
adc
loope
cmp
mov
mov
mov
jmp
andl
fnstsw
arpl
popf
lods
ljmp
xor
outsl
inc
pop
nop
outsl
jo
inc
les
cmp
std
ret
pop
push
arpl
outsb
fsubl
adc
jl
mov
dec
inc
adc
dec
gs
mov
mov
add
add
rcrb
push
sub
cmp
loope
std
fildll
jo
fcomps
dec
int
sbb
xor
movsb
nop
dec
mov
adc
and
pop
xor
inc
cltd
inc
in
pop
mov
fcoms
movb
mov
test
jae
sbbb
sub
pop
push
in
cmp
stos
pop
mov
stos
adcb
outsb
push
clc
scas
pop
inc
xchg
push
or
les
nop
jp
push
push
aaa
outsl
xchg
or
mov
out
test
aam
push
pop
push
inc
cmp
and
es
xor
andl
mov
in
jle
movsl
and
adc
in
neg
and
enter
call
hlt
insl
fists
hlt
addb
sub
inc
int
jbe
inc
repnz
mov
adc
fcoms
out
and
lret
mov
pushf
mov
adc
ffree
fnsave
clc
jmp
mov
out
sarb
dec
jmp
loopne
inc
adc
push
imul
xor
mov
adc
add
push
out
and
cmp
addl
cld
pusha
test
insb
inc
sbb
testb
fwait
or
neg
inc
lcall
int
mov
pop
inc
lret
mov
mov
sub
neg
clc
aaa
call
and
fstpl
sbb
jle
add
jmp
dec
loop
js
mov
xchg
pop
test
dec
sarb
add
out
pop
fs
shll
js
cmp
inc
imul
int
sahf
mov
mov
icebp
xlat
into
leave
mov
dec
sbb
arpl
dec
int
or
fcomps
dec
jmp
hlt
iret
int
lea
xchg
or
fwait
cmpsl
test
rcrb
repz
mov
sti
push
movsl
daa
sub
mov
mov
fwait
jecxz
push
mov
es
fnstsw
repz
or
inc
aad
icebp
push
mov
sbb
add
add
jmp
jmp
jb
cmc
leave
sbb
pop
ja
sub
adc
decl
mov
fwait
sarl
pop
xchg
stos
cmpsb
pop
add
adc
std
mov
adc
or
test
xor
mov
lahf
das
jno
rolb
push
and
in
in
pop
add
jp
in
cmpsl
mov
arpl
ret
ret
aaa
jno
and
rcll
subb
inc
les
sti
add
sub
and
fsubr
push
sub
push
xchg
test
add
sbb
flds
imul
into
lret
ret
es
popa
sbb
iret
mov
mov
ljmp
mov
das
inc
ljmp
sbb
in
jo
das
jle
lret
xchg
push
shrl
push
aam
fistpl
test
xor
cmpsb
xor
mov
pop
xor
hlt
lea
sub
cmp
out
push
push
movsl
scas
cmpsl
orb
sahf
lret
mov
lahf
ret
add
dec
dec
out
repz
fisttpll
push
sbb
xor
int
cmp
dec
add
lahf
mov
movsb
js
jmp
gs
ja
outsb
arpl
scas
popa
jl
cmp
cmp
ja
fimull
mov
cmp
mov
fldln2
sbb
sahf
movsl
jb
inc
in
push
sti
jbe
mov
in
pusha
das
push
arpl
insw
bound
adc
out
das
mov
jns
cmp
je
jnp
mov
shll
fistpll
mov
xor
sbb
xlat
imul
movsb
push
pop
bound
push
dec
pop
test
cmp
int3
jno
inc
add
jg
les
cmpsl
mov
cltd
jecxz
or
sti
push
into
out
or
in
pop
and
pushf
sbb
adc
adc
cmp
xchg
outsb
aam
push
push
fildll
sbb
sbb
dec
adc
jno
push
or
cmp
jae
idiv
imul
jns
push
insb
rcl
push
inc
and
or
int3
push
mov
ljmp
sti
mov
shll
hlt
jae
mov
or
pop
mov
sbb
dec
mull
imul
clc
add
adc
xchg
xchg
cmp
cmpsl
and
call
sbb
xor
lcall
push
scas
out
push
jne
sbb
clc
cmp
scas
stos
movsl
out
ja
lods
test
adc
cmpsb
and
bound
inc
lods
sub
and
cs
cld
mov
pop
mov
jne
jne
or
test
or
cmp
mov
call
jno
cmp
test
ja
xor
cmc
iret
fisubl
dec
add
enter
out
pop
jns
movsl
rolb
mov
mov
mulb
pop
mov
jo
mov
mov
scas
imul
push
adc
jg
clc
push
xchg
aas
adc
jmp
cs
add
int3
loop
sub
or
and
inc
fsubrs
dec
push
mov
popf
jb
mov
pinsrw
adc
sub
push
mov
push
pop
rcrb
test
hlt
clc
add
mov
jmp
and
test
lods
int
inc
inc
scas
jne
cmp
rcrb
inc
imul
jp
inc
scas
jbe
cld
jge
addl
sbb
jns
mov
xor
sbb
xchg
ret
fdivrs
sti
push
add
adc
faddl
in
jge
or
lock
lds
test
sbb
mov
repz
dec
insl
mov
dec
les
push
test
pushf
sbb
repnz
rcrb
ljmp
sub
xchg
jns
in
loop
push
aam
jbe
cltd
dec
dec
xlat
sbb
or
sub
mov
or
and
jb
nop
adc
push
inc
sbbb
push
cli
cmp
mov
stos
test
sarl
jge
mov
leave
enter
insb
in
scas
popf
lret
cmp
test
add
iret
pop
adc
fdivl
clc
add
cmp
fisubl
mov
scas
sahf
push
imul
popa
sub
sub
mov
dec
jg
leave
mov
or
inc
sub
push
mov
cmp
dec
xchg
xor
push
jbe
rcl
cmp
jb
xchg
xchg
lock
imul
pop
popa
or
je
mov
add
push
add
mov
inc
sbb
sbb
mov
lods
cmc
aas
push
aad
sarb
inc
cmpsb
cmc
fucomip
mov
or
mov
clc
jno
arpl
mov
cmc
pop
setnp
dec
cmpsl
fwait
xchg
xor
clc
lock
stos
mov
mov
dec
pop
dec
int
add
popa
mov
sub
dec
cwtl
fstl
in
dec
outsl
inc
lret
adc
out
jns
adcl
xor
clc
lahf
mov
cwtl
mov
repnz
jl
rorb
add
mov
xor
outsl
iret
mov
jb
out
lahf
fdivr
jge
dec
and
push
test
in
xchg
shll
je
ds
sub
stos
sbb
jge
jmp
andb
push
xlat
fs
popf
test
push
inc
je
fldt
mov
imul
xorl
mov
xor
xchg
push
sarb
addr16
pop
inc
mov
int
in
and
inc
pop
xchg
push
aaa
inc
lods
jle
scas
gs
xchg
mov
adc
addl
mov
mov
imul
inc
pusha
xlat
push
imul
shll
ret
out
outsl
pop
push
or
in
or
inc
jmp
cld
hlt
push
rorl
das
jg
pop
js
xchg
inc
lret
imul
into
stc
aaa
xor
stos
jmp
push
sub
dec
sub
mov
rcrl
xor
test
sbb
dec
push
pop
repnz
jbe
shl
cmp
cmp
sub
fisubs
test
dec
and
fwait
je
mov
rcrl
pop
add
in
mov
cs
jl
and
xchg
cmp
stos
and
mov
add
mov
mov
mov
mov
out
pop
adc
repz
jmp
adc
subl
xor
out
sub
mov
push
adc
or
dec
aad
fnstenv
ljmp
fstl
adcl
xchg
push
xchg
mov
mov
hlt
cmp
lock
adc
fcompl
add
jnp
icebp
fimull
addb
dec
dec
mov
movsl
loop
push
cli
repz
and
xchg
pop
lods
pop
adcl
repnz
mov
jg
mov
adc
and
inc
int3
sbb
dec
pop
sub
negl
cmp
loopne
and
push
or
xor
in
push
cwtl
cmpl
jl
dec
leave
dec
icebp
mov
in
es
jecxz
iret
jmp
mov
cmc
push
in
dec
dec
mov
adc
outsl
push
les
fistpll
das
loope
push
inc
push
or
jae
fst
cld
fisttps
xor
push
aas
mov
mov
idivl
iret
out
daa
xchg
cmp
pop
sbb
adc
incb
incb
and
out
sbb
out
aad
jmp
xchg
inc
fnsave
adc
ds
mov
xor
mov
test
mov
bound
and
movsl
fucomip
sub
mov
push
enter
rorb
ja
cmp
sub
cmp
push
loopne
data16
imulb
pop
lea
into
lock
dec
adc
jmp
jnp
mov
mov
fmuls
popa
jmp
and
call
jl
dec
data16
insl
mov
adc
jae
addr16
mov
inc
push
xlat
fwait
fs
in
ljmp
push
xchg
push
pop
or
mov
mov
cmp
ja
sub
mov
sbb
fildl
xor
pop
ja
out
mov
stc
mov
or
ljmp
sbb
inc
loope
mov
fiaddl
in
mov
aad
or
push
sti
out
ds
addr16
aaa
andb
xlat
inc
loope
cmovb
and
cwtl
mov
add
mov
push
fnstenv
add
jns
adc
cli
cmp
pusha
int3
pop
rol
cmpl
daa
push
dec
cmpsb
push
adc
sbb
icebp
lds
mov
lcall
movsb
cmp
aaa
je
mov
mov
sub
in
pop
enter
shll
aaa
xchg
jge
push
xchg
outsl
adc
mov
sahf
inc
mov
lcall
addr16
rcrb
rcrb
sti
mov
dec
xor
pop
not
sahf
fstpt
out
outsb
je
aad
test
lods
xorl
inc
pop
mov
sub
mov
inc
inc
fisubs
xchg
or
pop
dec
repz
sti
or
insl
jecxz
mov
mov
fidivrs
fcmovu
push
mov
push
cli
mov
test
ret
mul
aam
js
sub
aad
mov
and
cmp
jno
popf
int3
jne
jmp
mov
mov
out
js
call
sbb
dec
nop
push
loopne
mov
mov
mov
jp
lods
ret
xchg
scas
cmpsl
cmp
mov
pop
sub
int3
in
repnz
cmp
pop
in
push
rcrl
icebp
rcrl
fistl
mov
xlat
mov
fs
fdivrs
popa
clc
or
or
gs
lret
dec
ffree
add
add
call
mov
cltd
jnp
sub
jns
sub
lret
in
push
sbb
inc
dec
fisubs
cmp
ret
mov
xchg
inc
mov
mov
insl
push
xlat
and
flds
test
jns
sbb
pop
cli
iret
jp
lcall
cmc
dec
push
mov
cs
or
addr16
mov
push
push
aad
sbb
push
inc
pop
sahf
pop
mov
imul
aaa
cmc
cmpsl
sti
lods
add
repz
jecxz
dec
jmp
cmp
inc
pop
xchg
and
mov
cmpsb
cmp
int3
xchg
or
push
dec
icebp
in
push
js
push
push
cmpsb
cltd
adc
mov
int3
stos
pusha
cmpsb
jmp
pop
ss
jg
imul
adc
daa
shrb
mov
sbb
lods
add
popf
pop
out
sub
xchg
je
mov
aas
cmc
push
leave
mov
outsl
stos
incb
setb
cmp
icebp
inc
lock
inc
sbb
shr
fidivrl
jbe
fisubrs
pop
jb
pop
inc
mov
outsb
repnz
adc
pop
xchg
es
or
iret
pop
dec
xlat
ret
hlt
rolb
movsb
hlt
aad
lods
sbb
jge
inc
int3
test
jbe
jle
add
inc
loop
jne
inc
lods
scas
adc
pop
jmp
shlb
iret
fimull
seto
in
jmp
mov
jle
int
out
xchg
dec
jmp
mov
addr16
outsb
xchg
adc
push
cmpsl
lods
das
and
xor
out
movq
lahf
addr16
cmp
out
bt
pop
jle
cmp
inc
add
ret
dec
dec
inc
lcall
call
or
nop
or
stos
inc
mov
cmpsb
adc
aam
ja
mov
adc
xchg
incb
push
fwait
pop
jne
jcxz
out
jmp
jnp
mov
push
fnstcw
fisttps
nop
pushf
ja
out
fwait
or
ja
ret
sbb
mov
cs
adc
popa
or
pop
xor
mov
lods
test
ss
xchg
imul
push
rol
sub
ja
xchg
arpl
pop
test
cmp
in
xor
orl
pop
test
adc
mov
movsb
fdivl
xchg
mov
mov
ficoms
xor
adc
mov
sti
pop
fidivrs
adc
mov
push
mov
adc
or
add
inc
or
xor
shr
stos
push
add
insl
scas
add
push
shlb
imul
jp
in
nop
fisttpll
dec
mov
mov
fcomi
dec
sbb
ss
test
inc
dec
inc
adc
adc
jnp
stc
push
jns
stc
ret
lods
and
gs
mov
les
bound
sbb
repnz
xor
mov
std
jae
rcl
jnp
push
aad
push
hlt
jle
add
pop
addr16
adc
rorb
lcall
push
xchg
adc
maxps
push
mov
dec
push
stos
fsubrs
dec
pop
add
xchg
cmp
inc
lahf
je
adcl
adc
iret
add
es
scas
imul
mov
cld
jmp
adc
cmp
popf
inc
mov
js
jg
and
fs
push
sub
push
sbb
push
sbb
in
xor
dec
lret
sarb
jle
mov
mov
inc
xchg
xlat
cwtl
lea
je
cmpb
push
outsl
les
fsts
movsl
mov
adc
cwtl
inc
jb
fs
ljmp
adc
cli
mov
mov
lahf
or
cld
popf
shrb
in
xchg
mov
shrl
les
inc
rcrl
pop
fs
push
mov
int3
shrl
push
xchg
cwtl
insb
mov
lds
xlat
paddusb
cltd
pop
mov
and
push
sbb
call
stc
int
fildl
jmp
movsb
bound
push
nop
mov
icebp
push
sbb
cmpsl
cli
pop
mov
sub
repz
pop
add
sti
dec
ljmp
mov
cmp
in
stos
lods
insl
push
push
imul
push
addr16
push
fimuls
sub
fimuls
sub
enter
push
mov
xchg
push
xor
jb
movsb
jbe
lret
int3
dec
imul
out
inc
push
cmp
or
xchg
sub
mov
adc
test
outsl
nop
sbb
jle
je
arpl
je
xor
mov
mov
scas
xor
lea
fsub
jecxz
inc
adc
lret
sub
fwait
into
lcall
pop
push
icebp
xor
sub
aaa
in
add
movsb
ror
lret
sbb
dec
pop
pop
data16
push
pop
sub
inc
loop
in
adc
movsb
mov
pop
mov
jecxz
movsb
movsb
int
in
jmp
test
les
sbb
add
or
inc
push
pop
sbb
lock
sub
xchg
ret
imul
outsb
cltd
jl
xchg
mov
rcrb
mov
xchg
pushf
fdecstp
in
cli
ja
rcrl
pop
lcall
fidivrs
icebp
mov
jmp
or
das
add
aam
shlb
cmp
cmc
dec
call
in
cli
out
lea
into
rolb
shl
pop
dec
mov
pop
hlt
sbb
pop
and
iret
push
mov
in
push
or
das
mov
push
xor
lds
push
push
push
pop
cmc
sarb
ret
push
ret
loopne
test
ja
leave
cli
sub
xchg
push
push
mov
xchg
test
repnz
xchg
int3
loop
xor
outsb
push
dec
push
push
inc
lcall
jns
fisubs
pop
enter
and
sbb
mov
push
mov
movsb
jnp
dec
jne
push
mov
inc
push
fdiv
ds
push
xchg
dec
fimuls
cwtl
mov
gs
mov
enter
lods
pop
xor
jle
enter
and
and
lret
orb
push
rorl
xchg
xchg
in
out
xchg
mov
inc
int3
lret
mov
pop
cwtl
jnp
rcl
jp
fsubrs
cmp
pop
outsb
shlb
mov
out
add
and
fsubrp
or
pop
mov
stos
clc
mov
mov
push
mov
inc
ss
stos
and
ficompl
sbb
jo
lret
cmpsb
adc
movsb
pop
data16
and
sbb
mov
int
into
lret
push
xorl
pop
jle
sbb
mov
mov
dec
mov
or
push
mov
mov
repnz
pop
into
inc
popf
cs
stc
pop
pop
popf
lret
shlb
fdivrp
clc
sub
stc
cmp
test
and
out
push
sti
sub
insb
mov
in
ja
es
call
out
adcl
lods
mov
arpl
imul
jo
outsl
xchg
movsl
int3
imul
inc
jnp
pop
aad
outsl
mov
and
aam
bound
push
push
ds
lock
or
jns
adc
lahf
inc
dec
xchg
pop
jb
sbb
ds
leave
push
push
jmp
jnp
dec
xchg
in
adc
ljmp
dec
pop
push
ds
push
std
lret
xor
jmp
aad
js
jno
fnsave
adc
out
in
jle
add
hlt
arpl
arpl
xchg
imul
leave
test
rolb
mov
xchg
mov
adc
cltd
aad
mov
inc
aas
and
adc
pop
mov
push
inc
cmp
fdivl
mov
inc
rclb
fildll
sbb
lret
aad
add
or
pop
mov
jl
popf
addl
cmp
sub
lret
ror
aam
xor
dec
into
shr
dec
xchg
jne
aad
inc
test
jbe
sbb
jp
fisubrs
dec
pop
popa
mov
dec
cltd
and
cmpsb
xchg
dec
jbe
pop
and
push
xchg
adc
push
jge
les
sti
jle
ja
in
xorl
mov
pusha
loopne
mov
addr16
pop
sbb
xor
pop
sbb
jns
push
shrb
nop
or
in
mov
mov
sub
and
jmp
adc
fsubs
push
mov
aas
jo
aad
arpl
mov
loop
push
test
popa
insb
xchg
fs
andl
clc
movsb
outsl
sbb
pop
and
xchg
movsb
mov
lret
mov
popa
ffree
mov
and
rolb
rcll
push
mov
mov
repz
jp
xchg
dec
into
and
lods
clc
inc
or
into
nop
sti
dec
in
push
or
lods
xchg
cmp
roll
add
sbb
add
lock
sbb
je
sti
ret
add
repz
add
cmp
addb
dec
ror
insb
jbe
push
sub
imul
push
stc
mov
call
in
test
psllw
les
enter
fdivrp
xchg
fsubl
mov
andb
jne
ds
add
or
pop
gs
les
dec
shll
cmp
jo
jp
jle
imul
fadd
fistl
or
daa
sbb
icebp
mov
pusha
imul
out
hlt
sti
mov
and
icebp
cmpsl
and
in
xorps
mov
xchg
xor
mov
cmp
lock
pop
xchg
mov
push
xchg
lret
ret
push
xchg
lds
fadds
dec
push
icebp
inc
mov
bound
iret
push
into
stc
shlb
ret
push
cmp
mov
or
dec
sahf
cwtl
lcall
aad
or
jne
xchg
jl
pop
jb
mov
adc
cld
cmp
or
lock
test
mov
mov
push
repnz
jle
cmp
insb
mov
mov
dec
data16
ret
in
adcb
or
lcall
push
das
adc
dec
aam
push
and
inc
mov
jl
ret
add
cltd
add
addr16
sti
cmp
adcb
les
xchg
mov
leave
xlat
xor
aas
lock
jbe
lret
in
inc
jg
jne
mov
pop
push
loope
jg
or
dec
call
dec
fldl
pop
cmp
pusha
adc
loopne
gs
push
xor
jg
out
in
sub
imul
mov
pop
ja
jmp
xrelease
aad
push
sbb
daa
in
push
repz
mov
mov
imull
cld
or
xchg
lock
inc
sub
adcl
add
repnz
call
add
and
and
xor
hlt
outsl
aaa
mov
sub
call
lret
mov
add
dec
jo
jo
dec
fidivl
xor
repz
add
cwtl
rclb
pop
xchg
test
mov
mov
cmp
push
xlat
dec
dec
push
xor
sub
and
cmpsb
fisubrs
lret
xor
jae
adc
jge
cwtl
or
xor
inc
adc
ss
je
or
jmp
mov
out
sub
push
in
xchg
jge
or
xor
mov
xor
jbe
repz
rorb
rorl
js
cld
scas
or
inc
nop
jno
cmpsl
test
sub
shll
adc
jno
cli
mov
loope
inc
mov
cmp
xchg
xchg
subl
mov
push
xchg
mov
add
out
int3
cmp
mov
sub
cmp
mov
fidivrl
xor
push
push
xor
incl
push
adc
idiv
ds
pop
xlat
repnz
jmp
pushf
cs
into
dec
pushl
pop
insb
dec
cmp
cmp
push
jecxz
testl
notl
aam
das
cld
jns
and
loopne
loope
outsb
insl
xlat
sub
sbb
inc
shlb
or
push
inc
pop
int3
mov
or
mov
cli
rcrl
psubusw
and
ss
mov
js
lea
cmp
aaa
sub
mov
int3
dec
test
pushf
inc
mov
je
repz
lods
xor
and
cmpsb
shrl
push
mov
popf
pop
jbe
es
adc
jae
mov
out
bound
mov
jne
dec
pop
jns
aas
imul
scas
xchg
fs
cmp
popf
notl
jnp
cld
jnp
adc
sahf
add
adc
fcmovnbe
adc
rclb
sub
adc
inc
jb
push
jo
ret
fiadds
adc
cli
push
push
bound
cmp
test
in
cmp
xchg
push
pop
jl
lods
in
pop
rcll
dec
sbb
mov
pusha
xchg
sub
mov
adc
xor
mov
pusha
inc
mov
pop
cmpsl
fistps
movsb
and
ljmp
fiaddl
sarl
mov
cmp
out
cmpsb
out
ja
loop
ret
sbb
mov
jmp
and
insb
xor
mov
or
aaa
insb
shlb
xchg
adc
sub
adc
mov
add
stos
out
in
push
jbe
add
shll
sub
shll
arpl
fldcw
loope
dec
sbb
jp
mov
outsl
sbb
or
push
jbe
lods
jg
push
sbb
or
xchg
in
daa
cmpb
dec
out
mov
movsb
cmp
pop
adc
scas
in
adc
jne
adc
push
inc
xor
jns
inc
jmp
mov
mov
not
test
test
out
dec
xchg
call
pusha
inc
pusha
popf
shl
xchg
pop
sbb
mov
gs
movsl
loop
xchg
jg
stos
clc
sbbl
les
xchg
pop
mov
adc
sub
mov
add
lret
stc
or
loope
dec
popa
bound
mov
fdivp
rclb
lods
cld
lods
leave
ret
mov
movsb
adc
pop
push
lcall
lret
test
loopne
xchg
dec
iret
insb
scas
lods
stc
or
jmp
int
lods
mov
xor
mov
lock
xor
push
cltd
je
push
out
or
cmp
jno
push
andb
imul
sbb
pop
or
test
lock
mov
pop
inc
pop
xor
mov
push
xlat
push
push
and
in
sub
sub
in
mov
cmpsl
or
or
int3
mov
mov
mov
push
andl
mov
mov
test
addb
xorb
stos
jge
sub
and
les
push
test
out
loopne
subl
scas
orb
fdivrs
dec
push
mov
jl
lret
stos
xor
lahf
mov
adc
sub
testl
cli
inc
ficoml
imul
je
shlb
test
jns
outsl
subl
es
dec
andb
dec
xor
rorb
xlat
dec
push
dec
sub
adc
and
pop
shrb
enter
fstpt
lock
add
sbb
xchg
inc
mov
xchg
mov
mov
gs
test
mov
dec
adc
lds
cmovno
enter
cmp
add
rcr
loopne
dec
jge
sbb
mov
inc
adc
push
mov
add
imul
fcoml
push
fwait
adc
sbb
mov
insb
stc
adc
outsl
cmpsl
imul
dec
test
mov
lcall
or
in
sbb
imul
out
mov
xchg
call
cmp
aam
js
js
jbe
ficoml
test
jp
iret
lea
pop
fs
pop
insl
mov
aam
ret
mov
jns
push
jb
pop
call
add
jge
iret
xor
mov
xor
xor
inc
xchg
pop
repz
aas
testl
pop
cli
js
xlat
push
aad
and
or
test
fdivl
nop
jb
xchg
sahf
cli
je
jno
cmpl
mov
movsl
idivb
push
cmc
addr16
sti
mov
cmp
fnsave
outsb
enter
cmpsl
xchg
lock
mov
je
inc
mov
jns
mov
dec
adc
mov
mov
and
int
dec
gs
cli
xor
push
aas
dec
negb
negl
adc
mov
add
inc
jecxz
dec
stc
popl
sub
imulb
cli
fadds
mov
adc
je
and
lods
or
rcrb
add
cmpsb
dec
mov
adc
push
std
shll
mov
and
add
cltd
sti
imul
xor
movsb
rorl
in
pop
xchg
push
sbb
pop
insl
subl
dec
mov
scas
fisttpl
push
inc
or
inc
in
add
pushf
arpl
iret
adc
cld
imul
icebp
or
dec
push
add
in
testl
and
out
push
sub
inc
stos
or
cmpl
imul
mov
rcll
addr16
lods
xor
in
les
repnz
and
xchg
sbb
dec
sbb
ja
sbb
xchg
mov
xor
and
cwtl
cltd
fdivp
fidivl
call
lcall
lahf
jle
push
imul
arpl
mov
dec
loope
outsl
push
jecxz
xchg
sbb
sti
scas
jecxz
std
mov
je
jo
pusha
insb
scas
stc
scas
mov
pop
add
arpl
dec
std
sub
adc
add
dec
sub
loopne
jae
mov
stc
add
and
popf
lea
aad
and
mov
sbb
cwtl
test
out
pusha
cmpsl
xor
iret
cmpl
pop
push
add
sub
stc
js
pop
arpl
pop
or
push
pop
loope
out
inc
sbb
fcompl
cld
imul
cwtl
pop
mov
mov
incl
adc
outsb
sbb
jp
cmpsb
lea
js
pop
sbb
mov
push
sub
pop
push
jne
push
push
nop
xor
stc
dec
sub
sbb
add
std
fldcw
mov
addr16
popf
sahf
je
mov
call
jns
pop
xchg
gs
or
or
leave
push
sub
das
arpl
mov
dec
jecxz
lret
mov
ss
jae
cmp
je
mov
imul
cmpsl
shll
or
sahf
cmp
cmp
hlt
repnz
dec
push
fldcw
or
pop
ret
pop
jg
and
mov
lret
mov
imulb
or
lcall
mov
stc
mov
in
cmp
xor
mov
xor
add
jmp
cmp
xor
mov
sub
clc
pop
pushl
bound
dec
add
mov
mov
mov
mov
ss
repz
test
ja
adc
cmp
dec
or
aaa
jbe
inc
icebp
mov
adc
fcmovnb
in
repnz
fwait
inc
adc
cmpb
inc
outsl
fildll
mov
cmp
js
lcall
or
icebp
addr16
and
pop
int
insb
cmc
add
cmp
outsb
movsl
cs
cmpsb
sbb
xchg
inc
lds
into
int
fisttpll
and
adc
fldl2e
movsl
cmp
push
cltd
lret
jno
aas
mov
mov
mov
pop
inc
test
add
into
fstpt
test
les
mov
sbb
adc
add
mull
out
popf
xchg
sahf
sbb
push
ret
inc
jno
clc
gs
inc
inc
mov
mov
ds
loop
stos
lea
mov
xor
leave
xlat
push
jns
ljmpw
inc
add
cld
lea
cltd
adc
push
cli
cltd
push
clc
xor
push
insb
dec
pop
or
add
push
sub
lea
subb
xor
into
inc
mov
mov
das
adc
dec
jb
in
stc
and
rcl
out
in
movsl
sbb
push
loop
jecxz
adc
shll
mov
aam
sub
and
mov
cs
push
cmpsl
or
sarb
jl
and
insb
jns
into
mov
or
inc
popa
push
pop
nop
rorl
pushf
adc
push
in
jmp
mov
dec
cmpsl
pop
sbb
dec
nop
in
pusha
repz
inc
fs
and
add
int
fmuls
sbb
mov
loop
push
push
popf
lods
into
xor
enter
xor
ret
jge
in
jnp
sub
call
lahf
int3
outsb
sub
or
and
inc
and
adc
xchg
dec
xor
cmp
inc
pop
mov
and
jnp
sub
xchg
sbb
mov
dec
adc
scas
mov
and
les
push
test
lock
mov
test
insl
notb
cmp
inc
pop
mov
stc
popf
das
gs
jmp
xchg
cmp
iret
xchg
cltd
cmp
inc
cs
push
or
clc
dec
clc
or
cmc
paddsw
jmp
or
sbb
push
and
or
add
je
popa
xor
pushl
lds
jns
push
mov
cmp
mov
rcr
jge
xchg
or
sbb
leave
test
xchg
decl
fcmovnb
jmp
jmp
outsb
jae
xchg
pop
adc
mov
jno
push
roll
add
or
push
mov
shll
mov
jmp
jo
fcoms
xchg
in
rcr
fldt
into
xlat
je
pop
aaa
cmpsb
repnz
test
insb
jle
lds
enter
test
mov
sbb
fnstenv
test
testb
cmpsb
pop
inc
adc
push
mov
dec
test
xor
cwtl
pop
mov
call
cld
pop
fsts
pusha
idivl
in
mov
mov
jns
scas
mov
cld
adc
push
cmc
cmc
lcall
mov
push
push
pop
lret
mov
sub
push
in
bound
pop
in
outsb
jno
insl
or
enter
cli
sub
jp
std
fwait
sti
add
or
add
mov
subl
lea
pop
arpl
loopne
stos
adc
mov
jae
dec
std
add
aas
notl
or
mov
test
mov
mov
inc
js
fidivl
repnz
xchg
scas
inc
mov
xchg
mov
into
pshufw
shrl
xchg
mov
xchg
xor
pop
adc
jge
jmp
mov
push
mov
popf
arpl
push
or
push
fisttpl
push
push
shll
adcb
push
popf
pop
inc
push
push
shrl
sbb
and
cli
test
fisubs
fdivl
jo
sub
jb
mov
inc
shrl
sub
adc
fcompl
cmp
dec
scas
and
mov
jmp
fimuls
jnp
cld
into
imul
out
testb
lcall
lcall
out
cmpsl
cmc
sbb
lret
outsb
mov
xchg
int3
int
lret
inc
push
cld
push
jle
pop
mov
adc
adc
sbb
hlt
cld
das
fmul
mov
cmp
sahf
in
decl
repz
bound
in
fildl
fcoml
sub
sbb
dec
adc
cmp
xchg
sub
xor
push
popf
fwait
mov
sub
std
lret
sub
lret
mov
sub
or
jmp
jg
add
sbb
fcoms
pop
xor
or
sub
shlb
imul
cmp
fs
inc
sub
stos
pop
or
lahf
xor
dec
cli
add
in
sbb
dec
out
sub
iret
out
xor
xchg
in
jge
cmp
lods
sbb
cli
lods
push
xor
cmp
xchg
clc
dec
or
mov
and
or
std
push
ljmp
negl
je
stos
bound
xchg
enter
loope
push
pop
pop
inc
cli
push
stos
add
jno
jmp
sub
rorl
arpl
sahf
xor
or
pop
outsl
js
ret
dec
and
lret
push
jo
dec
fwait
in
test
loop
fidivrs
adc
test
cmp
cmpsl
pop
xor
mov
inc
outsl
sub
popf
inc
dec
mov
popf
pop
gs
out
fcmovne
cld
test
fwait
add
inc
or
lcall
fcomp
fs
and
dec
popa
sub
mov
xor
push
js
mov
filds
sbb
ds
repnz
pop
pop
aaa
adc
adc
shrb
xchg
cwtl
mov
xor
sub
sub
ljmp
or
repnz
jmp
popf
xchg
mov
lahf
xor
adc
in
lods
push
icebp
xlat
mov
pop
int
xchg
jl
aas
daa
lock
xor
popl
push
push
daa
les
dec
lcall
int3
and
cmpsb
lea
inc
fwait
ret
repz
aaa
icebp
lea
sbb
jae
xchg
in
xchg
imul
xor
mov
cli
out
xchg
add
dec
cwtl
jecxz
and
data16
mov
mov
mov
jbe
in
push
sbb
dec
scas
jecxz
jp
xchg
bound
lods
sbb
cmp
pop
xchg
mov
emms
fistl
leave
cwtl
movsb
aas
cld
rorb
cmp
imul
mov
push
mov
adc
jae
xchg
jno
mov
mov
or
mov
or
and
jnp
xor
cs
or
or
push
test
fistpl
push
cltd
insl
jne
aam
hlt
std
mov
outsl
xor
adc
cmp
pop
nop
fs
xchg
jb
lods
in
xchg
div
sahf
mov
mov
loopne
xchg
rorb
push
hlt
arpl
test
adc
mov
pop
or
hlt
xchg
rcr
pusha
dec
sub
hlt
loope
jle
pop
jl
rol
jle
fisubrs
and
bound
mov
fidivs
xchg
cmp
mov
mov
push
cmp
test
sbbb
add
pop
add
mov
dec
fmul
iret
mov
cmp
and
push
js
mov
sbb
fildl
sub
out
xor
xor
or
lods
sub
es
pop
xchg
out
les
gs
sarb
leave
jmp
xchg
xchg
clc
and
push
cmp
inc
or
in
cmp
repz
mov
xchg
add
loope
adc
ret
cmp
fsubl
mov
lret
repz
mov
ret
popa
repz
adc
fiadds
mov
imul
lahf
cld
sub
dec
stos
jg
cmpsb
data16
test
mov
and
and
xchg
loop
idivl
fisttpl
cmc
lret
or
push
popa
jmp
mov
mov
mov
xchg
add
lret
repz
jle
clc
xor
fs
out
mov
in
xchg
stc
xchg
enter
mov
add
ds
and
lret
outsl
cmp
cmpsl
add
mov
pop
jp
and
or
pop
lcall
xchg
adc
test
in
xchg
lret
jae
mov
mov
cli
and
outsb
fidivl
popa
sbb
popf
mov
pusha
scas
mov
mov
mov
dec
dec
xchg
jg
int3
sub
mov
sbb
rolb
pusha
mov
or
pushf
cmp
fdivrl
cs
push
xor
stos
inc
into
and
xor
inc
out
mov
and
lods
das
add
pop
mov
mov
lcall
fdivr
or
cmp
push
es
pop
enter
mov
and
jo
aam
lahf
cltd
mov
clc
cld
int3
scas
mov
and
mov
cmpsb
idiv
leave
xchg
xor
mov
dec
nop
sub
addr16
jmp
loopne
cmp
sub
jbe
xorl
cs
adc
lahf
arpl
imull
and
sub
cld
rol
or
dec
data16
push
scas
pop
shrb
ja,pt
push
jmp
je
jne
and
shll
mov
ja
xor
xchg
xor
cmp
jnp
mov
outsb
cmpsb
xchg
ljmp
sub
dec
into
sbb
sub
insl
pop
and
lods
pop
dec
cmp
cwtl
test
mov
xor
pop
cmp
in
fdivrp
pop
rcr
cmp
mov
loopne
andl
pushf
add
inc
cmpsb
fcoml
cli
out
xchg
push
jle
jno
arpl
das
and
repnz
bound
call
out
inc
jmp
pop
lret
mov
lret
xchg
adc
pop
push
push
inc
add
mov
and
mov
cmpsb
test
ds
xchg
shrb
jbe
incb
cs
push
cltd
add
pop
jbe
mov
push
cmpsb
adc
pop
fnstsw
dec
leave
jno
and
cltd
repz
loopne
mov
mov
and
jns
loopne
dec
out
xchg
mov
testb
jo
jg
pop
mov
mov
cmp
cmp
cli
fistpll
daa
mov
orb
lods
shrl
test
ljmp
adc
and
mov
xchg
cld
jmp
cli
mov
fsub
and
pop
rorb
sub
stos
test
lds
and
adc
mov
arpl
mov
hlt
mov
cmpsl
xchg
cmp
xchg
xchg
jge
jl
jl
mov
daa
cmp
or
cli
adc
out
push
dec
adc
in
xchg
or
rcll
into
hlt
mov
je
popf
sbb
push
fldt
push
and
outsb
sub
sti
jo
ds
movsl
adc
mov
outsl
jge
mov
pop
and
inc
sti
dec
ss
mov
push
xor
mov
ficoms
push
aam
imul
stc
mov
and
adc
into
out
mov
inc
and
cmp
pop
popf
xchg
jle
push
mov
cmp
add
mov
jl
inc
aam
dec
addr16
lods
ss
or
add
push
jp
dec
and
xor
mov
and
adc
insb
pusha
push
sub
and
fxch
mov
imul
ds
xchg
out
mov
sub
xchg
loop
dec
popf
daa
mov
stc
jno
ss
imul
cmp
push
cmc
inc
fcomps
push
jns
bound
cmp
jmp
mov
and
dec
imull
pop
mov
in
mov
sti
imull
xchg
push
push
mov
scas
in
pop
inc
sti
rcll
ret
xchg
or
mov
dec
mov
inc
flds
lret
fmulp
sbb
out
cmpsl
add
add
mov
cmp
xchg
std
fldcw
mov
jo
in
arpl
int
loop
je,pt
out
stos
pop
stos
cltd
mul
loopne
xchg
lret
sub
xchg
testb
cld
xor
icebp
mov
xor
mov
adc
fsubrl
pop
mov
nop
push
imul
int3
add
cmp
mov
sub
daa
xor
xor
sbb
lods
fstps
jnp
sbb
push
fs
jmp
pop
sub
sar
jne
adc
jg
iret
sbb
mov
cmp
push
out
pop
pusha
adc
cmpsl
push
pop
jnp
cmp
ret
loope
mov
push
lds
lods
pop
jno
cwtl
stc
cmpsb
pop
sbb
lock
jg
jnp
dec
cmp
aaa
cmp
repnz
push
sahf
mov
adc
mov
jmp
loop
dec
popf
pop
sub
leave
out
or
fbstp
mov
scas
test
pusha
mov
push
fistl
les
test
lea
or
xchg
and
mov
inc
cmp
xor
call
adc
cwtl
std
jo
pop
aas
rorl
pop
push
repnz
push
or
mov
mov
xor
adcl
jle
mov
adc
pop
push
scas
mov
fwait
hlt
adc
loope
jmp
dec
loopne
cwtl
mov
xlat
jnp
lock
inc
adc
sub
or
shll
lret
addr16
mov
xorb
mov
lahf
movsb
popa
cmp
mov
push
inc
prefetch
imul
cmp
sti
inc
in
jno
fsubl
shr
pop
enter
xchg
fmuls
dec
xchg
sahf
or
mov
gs
adc
cmp
xor
iret
rolb
and
bound
frstor
mov
sbb
loopne
movsb
pop
push
scas
or
jb
scas
mov
cs
push
cmp
in
cmpsb
lret
cmp
in
jl
jnp
pop
xor
and
inc
lret
sahf
test
add
xorl
cmp
test
mov
cmp
mov
inc
les
pop
pop
or
push
fisubs
lods
rcrl
dec
aam
add
sbb
xchg
insl
xor
push
pop
sbb
inc
aad
sub
add
cwtl
insb
sub
add
adc
pop
mov
scas
fs
mov
popf
push
mov
lea
pop
cmpsl
into
das
aaa
push
icebp
inc
dec
inc
addl
inc
js
jbe
stc
inc
xor
inc
movaps
adc
xchg
adc
push
dec
pushf
adcl
cmpl
inc
cmp
into
cwtl
fsts
or
mov
xchg
cmp
push
lods
xlat
sbb
insl
dec
std
out
mov
or
xchg
jp
stos
ret
mov
test
out
rolb
adc
or
add
fidivl
inc
cmp
or
int
out
sub
loop
mov
push
mov
adc
mov
push
mov
push
popa
ja
mov
movsb
in
or
repz
daa
sbb
imul
sar
xchg
pop
in
cmp
aaa
jns
dec
lods
js
sbb
stos
jl
sahf
cmpsl
pop
addl
mov
lock
orl
push
lahf
mov
clc
das
out
push
lods
mov
aam
push
pushf
enter
test
popl
icebp
xchg
les
fwait
mov
xchg
ret
xchg
orl
cmpsl
xchg
mov
cmp
xchg
mov
jg
add
pop
jp
sarl
lock
jle
int3
pop
aaa
dec
shll
mov
ret
mov
outsl
mov
aaa
call
incl
or
push
fldenv
jbe
call
cmp
loope
pop
inc
dec
fldl
push
lea
fisubl
pop
ja
fadds
popf
mov
mov
sub
outsl
sub
sbb
xchg
stos
pop
mov
jle
jle
sub
das
aaa
jmp
pop
sbb
inc
lahf
loope
sub
jo
fsubl
rorl
jecxz
mov
mov
shrl
lret
jnp
adc
pop
aaa
lock
cld
in
push
addb
bnd
dec
add
data16
iret
pop
sbb
sub
ret
mov
adc
sbb
xor
xchg
sbb
cli
fcompl
or
lock
jne
daa
dec
test
daa
cli
rcr
movsl
sub
inc
push
push
xor
repz
and
scas
pop
out
mov
sbb
out
fdiv
fstps
dec
and
sub
sub
ljmp
adc
add
xchg
cmc
inc
cmp
adc
add
cltd
pop
lds
jle
sub
dec
xchg
pop
test
cs
repnz
pushf
mov
mov
or
lret
pop
mov
mov
sub
cmc
and
or
scas
jmp
sbb
or
and
sub
add
dec
cmpsl
add
int3
mov
and
es
push
sbb
jb
mov
out
sbb
or
popf
mov
push
daa
mov
fmul
popf
pop
lea
pop
sbb
test
cmp
popa
cmp
mov
stc
add
lret
std
dec
dec
add
in
mov
stos
aam
push
jae
call
roll
pop
inc
pop
daa
pop
leave
psubq
dec
cmp
mov
mov
lods
sbb
push
push
adc
add
adc
sti
test
addr16
jns
leave
data16
lret
sub
push
mov
icebp
test
lret
lcall
add
pop
sti
fwait
ret
mov
aas
lods
lds
movsl
cmp
pop
xchg
loope
xor
sbb
xor
mov
jnp
pop
aas
jae
and
lock
stos
pop
movsl
shrb
lcall
nop
mov
std
cmc
sti
mull
es
add
sub
js
pusha
xchg
mov
repz
xorb
push
push
add
mov
inc
push
imul
xchg
clc
add
sub
push
cmpsb
ret
add
jg
mov
shlb
test
mov
adc
adc
push
or
lahf
andl
fisubrl
xchg
inc
pop
pop
in
xor
faddl
mov
pop
mov
fistpll
aad
std
mov
and
test
jmp
pop
movsl
imul
xchg
pop
mov
inc
push
pop
pop
das
mov
ret
dec
rclb
das
test
idiv
out
xor
clc
mov
add
mov
inc
push
add
imul
pop
aad
xchg
pop
mov
je
mov
daa
imul
imul
push
xchg
bound
sbb
ljmp
xlat
mov
pop
and
out
cmp
roll
fdivs
lret
or
jg
cmp
mov
adc
xchg
popf
push
add
inc
jle
xchg
dec
jmp
adc
xor
xor
xor
loopne
jg
loop
ret
mov
ss
in
std
repz
fdivrs
scas
mov
mov
adc
aam
ljmp
mov
cld
outsb
jg
sub
negb
mov
adc
push
nop
movb
pop
out
scas
in
push
cmpsb
mov
insl
sub
pop
jo
popf
test
xor
jmp
rorl
inc
mov
jecxz
sbb
cmp
and
icebp
add
mov
rcll
test
scas
cld
sub
leave
call
pusha
and
sti
lds
mov
shlb
in
test
or
pop
adc
inc
push
xor
fldt
cmp
hlt
mov
pop
aaa
lahf
or
jo
adc
nop
aaa
and
ljmp
mov
mov
mov
lahf
add
xor
mov
shrb
icebp
or
cmp
cmp
stc
stc
xchg
sbb
or
ds
pop
jns
imul
fstpl
mov
jge
test
lea
and
lcall
pop
lods
repz
push
and
pop
jne
sub
bound
cmp
cli
jl
nop
shr
jmp
mov
lods
mov
ret
add
ret
aam
sbbl
cs
enterw
mov
subb
mov
jge
adc
mov
pop
jae
popa
push
aaa
mov
lds
out
loop
stos
sbb
pop
xorl
outsl
sbb
enterw
mov
mov
fimuls
adc
xchg
mov
sbb
sahf
or
mov
jo
test
cmp
dec
mov
aaa
xor
cmc
xchg
pop
movb
pop
mov
outsl
push
out
mov
xchg
cmovns
fiadds
mov
out
pop
cld
lods
push
xor
bound
mov
xchg
and
adc
add
xor
dec
inc
popa
jge
ss
iret
xor
mov
xchg
xor
mov
pop
arpl
mov
outsb
cmp
and
xchg
push
pop
mov
loope
inc
iret
bound
and
push
mov
mov
arpl
mov
xlat
jne
push
push
jl
dec
sub
xchg
lret
xor
bound
cltd
dec
or
sub
mov
mov
sti
test
sbb
lods
pop
imul
sbb
pop
add
pop
push
add
fwait
pop
cmp
and
jns
mov
ljmp
mov
shrl
shrb
insl
pop
dec
call
ja
cmpsb
mov
fs
mov
and
es
iret
sub
xor
aam
and
ss
mov
add
outsl
jge
sbb
scas
jae
mov
and
inc
mov
daa
mov
pop
pusha
sahf
sub
dec
cltd
sbb
pop
and
inc
lahf
add
mov
fcoml
inc
add
xchg
lahf
mov
outsl
xchg
jl
gs
fsubrs
push
ret
mov
roll
xchg
sbb
ja
stos
mov
mov
jbe
lret
adc
scas
int3
aam
jmp
xchg
and
inc
insl
loope
mov
addr16
jnp
push
loopne
fdivs
dec
outsb
push
mov
adc
cs
xor
sub
push
pop
or
mov
cli
and
lahf
push
lret
loope
aaa
sbb
mov
push
leave
pop
fs
pushf
ffreep
or
lds
pop
sub
pop
ds
aad
inc
inc
push
jns
pop
mov
movsb
add
and
mov
mov
cs
and
add
mov
xchg
clc
push
dec
mov
popf
lret
cmp
xchg
lret
push
ja
repz
or
mov
add
or
pop
in
scas
inc
ret
fs
lret
ss
cmp
xchg
dec
scas
cltd
loope
add
inc
push
loope
in
add
popf
xlat
jl
cld
enter
mov
in
push
enter
dec
lea
aas
fnstenv
mov
inc
jb
std
cmc
push
mov
lods
sti
in
gs
sub
jmp
fdivp
or
lret
mov
pop
sahf
dec
out
xchg
and
fisttps
pushf
je
fdivr
fdivrs
aam
dec
je
push
dec
mov
dec
mov
sub
cld
fs
inc
outsl
repz
ljmp
or
sub
testl
fcmovnu
push
out
dec
loopne
dec
lods
xchg
mov
add
sub
gs
test
push
adc
jge
and
mov
test
mov
dec
push
in
rorb
mov
jp
lahf
mov
mov
dec
cs
and
and
aas
cwtl
loopne
pusha
pop
or
mov
mov
xor
out
mov
fisubs
ret
add
or
push
jbe
pop
repz
dec
xchg
mov
cmp
in
addr16
mov
testl
adc
dec
mov
xchg
push
add
xor
jb
clc
inc
clc
xchg
data16
mov
fistl
push
repz
clc
in
inc
push
and
cmpsl
pop
xchg
push
pop
and
and
jnp
aad
addl
into
sbb
mov
mov
in
cli
dec
add
aas
insb
cmp
push
and
and
rcrb
insb
mov
icebp
sarb
inc
adc
cld
mov
xchg
inc
out
shrl
push
sub
cmp
iret
push
pop
shlb
dec
xchg
jne
xor
push
cmp
pop
sub
fmull
insb
imul
rcll
loope
push
push
js
loop
leave
insb
jns
mov
int
movsl
ss
push
fildl
ds
or
lods
push
mov
xor
nop
pusha
gs
xor
test
mov
cld
xchg
xchg
leave
add
mov
or
xchg
mov
imul
add
add
mov
call
std
xor
mov
out
clc
and
cmp
sub
repz
sti
stos
repz
cwtl
mov
ret
dec
sub
cli
div
sbb
divb
jp
cmp
jge
mov
mov
mov
cld
add
cmp
loop
test
sbb
or
int3
xor
push
sub
in
xlat
mov
push
sbb
jbe
sahf
jmp
inc
lods
or
call
or
les
idiv
rcrl
test
xlat
xchg
fsubrs
pop
ret
push
int
pop
mov
pop
roll
push
dec
xor
and
and
cmp
addr16
cmp
in
aaa
pusha
shll
sub
jge
jmp
sub
sbb
xor
fucomip
jns
leave
mov
out
scas
aad
and
movsb
ret
jbe
out
imul
ret
test
push
add
pop
sbb
daa
loop
bound
mov
and
repz
sub
adc
xlat
dec
sub
es
xchg
lds
jle
cmpsb
xor
mov
aas
insb
and
cwtl
dec
lahf
stos
in
sub
mov
lret
cmpsl
push
cld
sub
and
addb
mov
add
pusha
xchg
das
roll
or
out
dec
in
mov
xchg
jle
mov
fwait
test
sbb
ficomps
adc
add
lock
push
xor
pop
mov
jle
test
cmpsb
mov
out
jmp
xor
add
aad
dec
sahf
xor
shr
lds
cmc
or
imul
cmp
dec
adc
test
xor
add
pop
in
adc
cli
dec
out
or
mov
int3
lret
rcrl
jle
inc
mov
mov
dec
call
fdivl
shlb
stos
xor
dec
filds
cmp
push
xchg
fcomi
hlt
xchg
imul
scas
loop
add
jnp
insl
test
mov
pop
ret
dec
das
lret
xchg
and
sti
xor
scas
adc
jmp
mov
and
mov
paddusw
jmp
sbb
jle
push
mov
push
or
outsl
hlt
mov
pusha
lds
movsb
sarb
movsl
daa
xchg
imul
into
lcall
mov
pop
in
fsub
push
in
ret
data16
push
dec
fsubrl
scas
dec
inc
pushf
pop
push
mov
jp
shrb
push
or
dec
push
movsb
cltd
cmp
inc
cltd
arpl
push
inc
shlb
mov
jle
mov
lret
mov
jmp
cld
push
lods
sub
mov
insl
mov
stos
xchg
cltd
jle
loop
mov
pushf
xor
fcomps
test
mov
adc
enter
clc
push
mov
jno
mov
iret
lcall
or
sbb
subl
insl
in
lea
add
mov
mov
lock
enter
and
xchg
movsl
cmpsl
mov
cmp
mov
iret
into
push
push
push
xchg
inc
mov
enter
arpl
negl
dec
jno
push
xor
mov
jg
fwait
sub
mov
std
fbld
mov
push
adc
push
sub
out
add
sbb
ret
fcom
rorb
les
xchg
jnp
mov
and
and
mov
fwait
lret
insl
loop
lea
mov
aas
adc
inc
add
mov
cmp
iret
dec
lcall
jb
jmp
and
shl
add
pushf
shll
dec
test
das
or
loopne
movsl
aad
push
jo
into
ja
pop
lahf
js
sbb
out
mov
pop
adc
aaa
cmp
dec
scas
sbb
jae
push
test
cmp
in
sub
stos
test
push
cld
in
mov
xchg
and
adc
mov
inc
sub
fisubrl
bound
sbb
mov
xchg
rcll
jp
cwtl
shrl
subb
inc
arpl
xlat
and
dec
aaa
pop
mov
add
mov
rorl
mov
cmpsb
jns
fs
mov
popa
outsl
mov
add
aad
fdivl
sub
shrb
dec
and
push
jae
movsb
loopne
stc
add
push
mov
shll
sub
stc
mov
inc
mov
push
mov
nop
add
test
add
push
sbb
iret
jge
mov
add
rcl
jl
data16
aaa
jge
rorl
int
gs
sub
push
insb
mov
clc
testb
add
mov
cwtl
sbb
sahf
cwtl
or
and
sub
or
mov
outsl
ret
gs
repnz
xchg
or
aaa
in
cmp
ds
cs
lock
or
shlb
es
xchg
jno
ss
inc
mov
lcall
xor
xlat
stos
test
std
stos
dec
mov
lcall
cmp
cmpsb
jmp
pop
out
lods
cwtl
mov
pop
push
jp
pop
pop
mov
inc
cmovl
sbb
dec
lret
aad
cmp
je
imul
xlat
jmp
scas
movl
imul
icebp
ret
sbb
aaa
jae
sub
and
fistps
scas
pop
fsubr
in
adc
xchg
pop
enter
push
dec
in
pop
mov
pop
mov
pushf
xchg
sub
les
mov
imul
std
rorl
call
stos
dec
stc
adc
addl
mov
dec
dec
sbb
fnstenv
addr16
mov
loope
push
in
mov
out
iret
call
sti
push
fcompl
adcl
jne
jne
aam
fmul
add
aaa
lret
xchg
out
fdivrs
dec
inc
fsubs
mov
adc
stos
movsl
mov
push
jnp
hlt
leave
dec
inc
dec
and
jae
imul
jnp
lahf
or
les
sbbb
dec
mov
push
and
sub
push
cmp
xor
xorl
sbb
dec
adc
mov
xchg
dec
add
adc
or
cmp
xor
cmp
outsb
movsb
into
movsl
data16
push
dec
jo
shl
adc
incl
int
cmp
les
xchg
xchg
mov
mov
mov
adc
jp
sbb
and
push
cmp
repz
pusha
iret
cmp
fstl
lock
xchg
cmp
add
inc
ds
js
insl
push
rcll
and
fstpt
xorl
mov
push
mov
jae
jns
dec
dec
xor
and
divb
out
add
ret
jle
xchg
pop
inc
adc
ss
sbb
sbbl
sub
inc
insb
push
sti
stos
imul
xor
leave
jl
dec
rclb
mov
and
shl
cmp
mov
sti
imul
lods
in
dec
jae
mov
xor
xor
data16
lcall
cmp
stos
pop
lock
inc
jbe
sarl
cltd
movsl
and
adc
test
fistl
adc
call
mov
jnp
in
call
push
dec
lock
push
xchg
into
insb
adc
adc
fcomip
dec
inc
in
pop
cmp
fisttpl
push
shll
fwait
cmpsl
in
stos
and
insb
jns
push
scas
xor
imul
fstpt
sbb
fs
push
dec
mov
call
xchg
lds
push
mov
fcomp
sbb
pop
pop
mov
mov
cmpl
adc
inc
push
sahf
dec
cmp
xchg
jle
sbb
inc
jbe
jmp
mov
lea
out
add
cmp
ss
lret
stos
xchg
push
xorb
ror
xchg
les
cwtl
push
clc
clc
dec
fnsave
mov
mov
or
mov
addr16
pop
stos
lods
mov
fisubl
xchg
loopne
sbb
jns
nop
icebp
leave
js
aas
call
repnz
sub
jp
push
lret
cmc
mov
mov
outsl
and
push
imul
std
xchg
mov
pop
stc
pop
in
je
movb
jmp
sbb
or
mov
stc
xor
adc
aam
repz
jne
rorl
lret
add
or
add
lret
imul
cmp
cmp
loopne
outsl
xor
cmp
repnz
inc
ljmpw
pop
xor
xor
add
popf
sarb
out
fistps
sahf
cmpsl
cs
pop
pop
cmpsb
fsubrs
loope
jp
sbbl
outsb
push
fidivrl
cltd
pop
das
adc
add
mov
ds
adc
adc
and
pusha
fcmovnu
and
inc
xchg
jp
call
shll
dec
push
jns
mov
adc
sub
sub
jmp
sub
insl
iret
gs
es
add
jmp
call
scas
sahf
faddp
popa
aad
stos
dec
push
stc
inc
mov
leave
loopne
jg
pop
shr
inc
dec
pushf
ret
mov
and
mov
sub
hlt
movsb
enter
popa
mov
cmp
icebp
push
outsb
mov
cltd
das
add
fdivl
inc
jp
movsb
stos
xor
fidivl
push
shlb
pop
insl
stos
pop
and
cmpsb
xchg
mov
leave
test
mov
or
stos
push
test
adc
jb
jns
xchg
fdivrl
cmp
shll
adc
add
pop
cmp
sahf
js
and
cmp
ljmp
add
cmp
ret
test
pop
mov
jne
lock
dec
inc
sub
data16
shrl
mulb
xchg
mov
outsb
mov
mov
sub
out
push
popa
and
ja
and
and
insb
jle
aaa
aaa
enter
in
dec
add
add
cmc
inc
clc
and
jb
mulb
cltd
and
aaa
jl
mov
cmpsb
sbb
and
xchg
subl
das
and
lea
aaa
lret
out
jle
pop
mov
in
push
lahf
sub
push
dec
inc
cmp
sub
int
into
adc
movsb
inc
dec
adc
and
xchg
lcall
xor
lea
pop
pop
xchg
pop
sbb
lods
pusha
dec
and
aad
xor
pshufw
mov
pushf
jae
test
add
and
and
mov
xchg
repz
jl
mov
cmpsb
xchg
jmp
stos
ds
pushf
mov
jl
dec
out
mov
cmc
ror
push
pop
dec
cli
mov
cmp
cmpsl
inc
add
mov
add
xchg
out
shlb
jmp
loop
sbbb
inc
aas
ljmp
adc
insl
or
adc
popl
push
cmp
lcall
sahf
dec
rcr
mov
dec
or
add
shlb
dec
cld
dec
subb
or
dec
or
in
ljmp
xor
cmp
push
cmp
pop
mov
pop
pop
popf
pushf
dec
mov
jo
pop
clc
aaa
adc
or
jle
fildl
cld
movq
jl
fwait
cmp
sub
mov
or
std
sbb
sub
iret
add
adc
pushl
xchg
jge
lea
cld
jecxz
sbb
scas
or
cli
jo
or
pop
xor
mov
inc
in
cmpsl
push
and
cltd
scas
mov
sbb
adcb
cmc
or
mov
mov
loop
sbb
xchg
mov
cmp
loopne
iret
dec
or
dec
or
push
loopne
roll
pop
xchg
xchg
rorl
adc
push
inc
cltd
lret
fucomi
pop
insb
mov
xlat
in
stos
call
sahf
mov
sub
mov
jne
sub
mov
scas
outsl
jle
mov
es
fisttpll
int
test
dec
outsb
xchg
in
jo
xchg
out
mov
imul
js
sbb
clc
mov
sbb
mov
inc
lea
xor
add
lret
popa
popa
sub
sahf
clc
pop
sarb
outsb
aad
mov
faddp
data16
mov
push
imul
inc
out
fwait
xchg
test
or
stos
push
les
sbb
in
and
cwtl
fs
xor
sbb
dec
jno
mov
push
jbe
lds
mov
and
outsb
ss
xlat
daa
outsl
popf
aad
in
std
dec
shlb
xlat
push
mov
jnp
add
jecxz
mov
sbb
push
and
ljmp
mov
bound
sub
pop
jo
pop
mov
icebp
jno
inc
jbe
adc
or
data16
in
insl
ret
fstpt
lcall
outsl
cs
adc
pop
jo,pt
cmp
push
cmc
lret
leave
dec
cmp
mov
das
iret
dec
das
daa
pushf
fdivrs
sbb
leave
and
jmp
in
aam
pop
lret
push
inc
fsubs
les
mov
movsl
mov
test
push
add
lret
add
mov
and
scas
jae
into
mov
ret
cmc
adc
aaa
call
cmc
insb
icebp
cld
cltd
jle
imul
test
adc
out
in
addr16
sbb
aad
ja
out
jecxz
cmp
xchg
cmp
out
addr16
mov
aas
push
cmpsl
adc
pop
lock
ret
dec
sbb
xchg
nop
sub
and
pop
js
aam
call
xor
push
jns
jae
divl
pop
sar
mov
inc
jne
xchg
pusha
mov
xchg
push
jge
pop
push
daa
inc
xor
dec
iret
jp
das
cmp
sbb
or
lahf
in
ror
pop
pop
add
mov
loop
imul
psubq
push
dec
or
xorb
cld
stc
in
and
sub
jnp
cmc
imul
jb
push
mov
mov
cli
fwait
inc
xor
movsb
xor
shll
mov
xor
add
and
fcomp
in
xor
test
clc
sbb
push
jg
outsl
mov
pop
and
mov
fidivl
jle
add
and
rorl
inc
addb
dec
scas
inc
xlat
add
push
push
mov
adc
or
jle
inc
jnp
pop
popf
icebp
nop
pusha
add
sub
sbb
outsb
into
or
mov
mov
pop
je
xchg
xchg
pop
jl
into
pop
out
bound
lcall
and
rorl
cld
fcoms
dec
mov
or
pushl
iret
scas
fnstcw
xlat
fidivrl
shr
push
inc
icebp
xor
xor
or
addr16
ss
xchg
mov
stos
sub
aas
dec
outsb
cmpsl
push
pop
mov
in
rcr
mov
out
aam
stc
xorl
dec
mov
mov
pop
xchg
pop
stc
movsb
test
jmp
add
dec
je
push
xchg
mov
das
int
dec
loopne
push
push
loopne
dec
ret
enter
cmp
shr
inc
push
in
cmp
rcll
fucomip
lods
scas
cmp
xor
stos
cmp
fsubs
ljmp
test
les
loope
cmp
cmp
lea
pop
test
lods
sub
das
and
sbb
jno
mov
jp
js
cmp
xchg
call
or
test
pusha
aas
xchg
into
sub
jb
or
pop
insl
jns
mov
ds
or
dec
dec
dec
cmc
iret
cmpb
and
adc
movsb
dec
out
jge
sbb
into
test
lcall
loop
sbb
lds
fstps
mov
cmp
inc
jno
inc
push
inc
sub
cmpsb
cmp
shlb
fsubl
pusha
rorb
add
in
pop
cmp
sub
fildll
iret
out
test
aaa
in
call
aaa
jmp
and
sbbb
lahf
xor
les
std
das
mov
mov
int
inc
push
mov
aas
sub
jg
loop
stos
enter
xchg
subb
in
fprem1
hlt
xchg
mov
or
insl
sub
ds
and
xor
push
mov
lds
in
cmc
aas
jge
inc
bound
push
xor
sbb
xlat
ficompl
mov
ds
mov
movsb
rcl
sub
add
out
lods
push
push
xchg
adc
xchg
inc
cwtl
sub
dec
mov
mov
add
cmp
sbbb
pop
xchg
jg
xor
mov
ds
adc
and
mov
xor
pop
rcll
xor
jo
in
mov
loop
inc
xor
dec
sbb
divl
mov
rcrb
lds
mov
test
or
mov
add
cmp
and
mov
popf
cmpsb
fbstp
xchg
test
pop
push
push
pusha
rol
subl
cmp
jge
inc
mov
int3
imul
mov
stc
mov
xchg
dec
mov
into
in
mov
negb
mov
ljmp
arpl
scas
icebp
push
sbb
push
pop
xchg
add
sub
jbe
xchg
leave
sub
jl
aam
and
cmp
outsb
add
out
pop
call
outsl
ds
inc
mov
dec
jl
decb
shll
dec
ljmp
add
test
xchg
fcom
jle
mov
sbb
andl
mov
mov
push
cmp
inc
lret
mov
adc
mov
sarl
mov
nop
shl
pop
shl
xchg
xchg
pop
mov
loop
mov
cmc
jg
andb
mov
cmp
call
pop
mov
int
mov
outsl
jne
jl
sbb
mov
aam
int3
movsb
aaa
jp
sub
bound
sub
inc
in
jo
sub
aad
out
adc
imul
push
bound
mull
loop
pushf
test
loop
sub
mov
push
push
mov
inc
addl
pop
mov
or
jae
mov
outsb
cmp
pushf
lods
sbb
cmp
xor
cmp
nop
or
fdivrs
shl
testb
mov
lock
in
fldcw
testl
cld
cltd
jmp
or
mov
lds
cmp
sbb
pop
je
cmc
les
mov
bound
mov
in
inc
fs
pop
cmc
sbbl
cs
push
cmp
sub
jne
xor
out
pop
xchg
insb
loopne
mov
adc
scas
inc
cmp
lretw
aad
cli
mov
fdivr
push
cmpsl
xchg
mov
push
ljmp
jns
cltd
rclb
pop
add
cmp
out
les
stc
inc
mov
pop
inc
xor
dec
mov
call
jns
push
fidivs
push
in
jne
gs
clc
jmp
stos
shr
outsl
push
xchg
push
fs
aaa
mov
test
ljmp
pop
adc
dec
and
inc
sbb
jbe
loopne
mov
shlb
fimuls
andb
addr16
xchg
pop
pop
xchg
or
push
subb
out
inc
xchg
sub
popa
dec
sub
jns
bound
jg
mov
or
mov
enter
and
out
dec
xor
pop
cmpsl
aad
mov
lock
stc
in
std
push
pop
sbb
xchg
dec
mov
push
insl
popf
xchg
and
loope
jo
inc
fcom
arpl
mov
and
sub
ja
jge
cmpl
xchg
mov
movsb
sub
jmp
sarb
or
roll
mov
and
fmull
xchg
mov
es
sbb
pop
pop
push
sbb
lahf
out
lock
sbb
jmp
xor
dec
inc
jl
or
test
adc
sbb
jnp
aaa
inc
nop
xor
xchg
fldenv
test
inc
call
not
adc
fstps
pop
fiaddl
and
std
incb
sub
xchg
shl
and
das
icebp
mov
sbb
lahf
data16
std
ds
sub
jbe
sbb
mov
sub
scas
cmpsb
lea
mov
pop
mov
inc
mov
fidivrs
jg
clc
popf
mov
test
in
js
fidivl
or
xchg
enter
shrb
daa
push
loopne
jmp
push
loopne
push
test
scas
out
lret
movsl
arpl
out
and
mov
shll
mov
mov
in
dec
inc
cmp
xchg
lods
xchg
iret
push
xchg
jbe
jo
aad
xor
rcll
mov
insb
xchg
divl
in
and
cld
pop
cmp
ss
xchg
xchg
ja
xor
jge
sahf
mov
adc
gs
mov
xchg
lock
xor
nop
fs
cmpb
rorl
mov
mov
and
das
mov
adc
pop
loope
mov
cmc
divl
ds
fcoms
xor
enter
mov
in
jb
or
jnp
dec
js
outsb
cmc
and
scas
xor
sti
sbb
xchg
pop
aaa
jne
mov
adc
jo
in
push
dec
cmp
hlt
pop
call
inc
cmpb
mov
push
inc
jle
add
hlt
movsb
add
loop
dec
jg
cmpsb
cmp
or
lods
sub
cwtl
adc
cmpsb
sub
sub
mov
sub
mov
pushf
and
movsb
add
je
sbb
scas
sub
push
test
adc
pop
out
movsl
xlat
adc
rcr
enter
testl
mov
outsl
sbb
push
fsubr
jp
dec
mov
inc
movsl
sub
pop
inc
jns
leave
inc
inc
cld
gs
fmuls
xchg
mov
dec
or
lret
les
mov
aas
je
cmpb
or
in
push
cmp
jle
mov
fistpl
cmp
mov
mov
xchg
sbb
into
test
popa
xchg
cmp
arpl
loop
jle
sbb
xor
in
aas
jb
lahf
insb
out
cli
mov
insl
cli
mov
dec
fbld
adc
mov
into
jne
push
jbe
imul
outsl
hlt
adc
popf
mov
sti
cld
xor
loopne
and
sub
call
pushf
dec
adc
jb
xlat
cmp
push
test
mov
xorb
lcall
mov
jno
icebp
and
test
mov
pushl
push
pop
sbb
insl
mov
ror
mov
out
out
or
jne
fistps
xchg
test
adc
lds
add
mov
dec
inc
and
and
jno
xchg
test
push
shll
and
sbb
sub
cmp
mov
pop
fwait
dec
ljmp
pop
inc
mov
mov
add
push
dec
mov
mov
cmp
jmp
test
cvtps2pi
xor
cwtl
fwait
cmpsl
daa
dec
mov
es
inc
movsb
movl
jmp
jne
push
adc
adc
fwait
mov
mov
cs
jns
mov
cmp
mov
sbb
push
sbb
dec
into
mov
scas
out
cmp
pop
js
sbb
ja
fidivrl
test
sti
inc
xchg
mov
pop
and
cmp
xchg
flds
andl
inc
stc
aaa
xor
lds
repnz
sbb
mov
xor
lret
dec
sub
jecxz
add
sti
xor
sbb
dec
jg
repz
xchg
pop
xchg
jge
in
into
jg
push
xchg
jnp
imul
data16
jo
fidivs
push
outsb
fwait
cld
insl
dec
cmc
test
decl
jl
xor
stos
sbbb
vmptrld
data16
jns
inc
lcall
out
add
sbb
lods
jo
add
ja
sub
in
imull
pop
adc
xlat
lret
test
aad
inc
pop
mov
jp
jle
ja
cmp
movsl
dec
decb
cmp
cmpl
cwtl
lcallw
mov
mov
push
xchg
sti
lret
cmpsb
xor
cwtl
or
imul
data16
adc
cwtl
stos
movsl
andb
stos
xor
inc
cmp
xchg
xorl
pop
mov
pop
cmpsl
xor
into
scas
iret
jp
adc
push
sub
ret
in
cltd
and
movsl
mov
pop
imul
inc
push
faddp
data16
adc
out
sahf
in
xchg
xchg
mov
sbbl
clc
movsl
mov
out
cmpl
push
sub
in
or
inc
stos
aad
sbb
jnp
xor
push
sbb
push
andb
adc
lahf
ljmp
repnz
and
aas
fsubrp
push
test
xlat
popf
es
lret
jb
sub
push
xchg
fisttpll
pop
dec
lods
outsb
arpl
xor
push
push
and
outsb
or
dec
je
test
add
or
loope
push
push
outsb
pushf
inc
gs
and
imul
jp
sbb
jo
imul
into
xchg
xchg
lods
out
mov
gs
movsb
icebp
mov
sub
sub
jg
loop
lret
add
pop
ror
ficoml
aad
mov
lock
fimuls
das
jl
push
and
dec
out
sahf
jae
or
mov
test
sbb
in
cld
push
mov
lock
fnstenv
jbe
jecxz
push
xor
sub
aam
jb
add
push
fadds
outsb
addl
mov
add
and
adc
imul
in
and
imul
iret
loopne
mov
mov
cmp
and
inc
out
cmc
dec
and
pop
in
add
leave
into
mov
push
mov
ret
inc
iret
lret
outsb
mov
jnp
dec
and
xor
inc
inc
sub
enter
and
js
push
imul
adc
insb
or
mov
sub
mov
xor
add
add
pop
push
test
cmc
cmpsb
xorb
adc
data16
lods
popl
pop
xor
insb
outsl
fstp
stos
cmp
sub
jp
dec
lahf
lea
pushf
std
mov
cltd
loop
leavew
jb
int3
arpl
lods
in
jle
xchg
fwait
jno
mov
or
mov
inc
jns
sbb
push
les
or
cwtl
push
mov
and
xor
pop
out
push
mov
cltd
arpl
in
pop
push
and
insl
jbe
movsb
popf
cli
xchg
push
loopne
pop
jbe
jno
or
push
adc
dec
rcll
ja
jmp
xor
jne
enter
sbb
cld
mov
stos
and
mov
imul
jnp
fcoml
mov
fisttpl
orl
push
test
xor
and
fistpll
mov
hlt
popf
push
repz
xchg
inc
mov
push
inc
lret
cld
sub
cmc
ret
sub
sahf
jge
fsubrp
pop
adcl
pop
inc
cmp
push
cmp
into
push
or
adc
xchg
pusha
xchg
and
and
shrl
test
pusha
mov
push
xchg
mov
cmc
add
xchg
ret
data16
cmp
mov
mov
adcb
xor
mov
cmpsb
push
ficoml
adc
lods
push
imulb
js
stc
add
imul
xchg
dec
sbb
xlat
loopne
add
dec
lea
add
jno
ds
xor
inc
cmp
stc
lahf
jl
shl
mov
in
fs
ljmp
cmpl
out
scas
imul
push
lahf
lock
insl
dec
loop
call
inc
notl
ljmp
sub
inc
jns
pop
xor
jae
ss
call
inc
lods
mov
dec
cmp
nop
js
leave
aam
mov
outsl
call
adc
mull
mov
xor
push
xor
daa
dec
inc
adc
add
pop
xchg
cld
insl
push
mov
ja
push
dec
sbb
dec
imul
push
loop
fadds
push
lods
and
xchg
pushf
cmp
inc
lcall
add
xchg
rcr
insb
dec
outsb
rcll
mov
adc
adc
adc
outsb
test
repz
insb
sbbb
cmc
adc
pusha
sbb
negl
jcxz
or
lcall
mov
jge
add
push
fcompl
jmp
cmp
mov
fs
insl
mov
fsubs
fistl
mov
add
test
sbbb
data16
jp
inc
mov
jle
lahf
lds
add
cli
and
or
mov
push
lret
sbbl
mov
stos
xchg
rolb
pop
jmp
mov
xorb
es
je
push
pop
mov
inc
arpl
jae
inc
lods
in
xchg
stos
sub
jl
nop
xchg
and
adc
or
cmp
pop
cmp
pop
mov
push
movsb
stos
jg
out
add
push
lods
push
lahf
mov
neg
fcoms
inc
outsl
xor
into
dec
aad
jle
insb
lahf
scas
jbe
dec
pop
jbe
iret
inc
sbbl
mov
dec
lret
bound
icebp
ret
pop
cmp
push
lcall
sbb
sbb
flds
shll
inc
mov
call
xor
add
fmul
and
sub
mov
cmp
push
pop
arpl
push
stos
mov
bound
cmp
insb
xchg
sahf
push
je
mov
push
pop
sub
vmovaps
repnz
cmc
popf
inc
mov
ss
popa
or
mov
xor
jle
or
in
loope
pusha
jo
push
fimuls
push
cli
pusha
hlt
jecxz
pop
lcall
inc
dec
stos
leave
mov
int
addb
cmc
push
and
pop
inc
pop
sbb
les
nop
idivl
and
jmp
or
test
ss
and
mov
adc
xor
adc
or
pop
inc
sbb
outsl
cltd
lret
add
fsubl
sarb
xor
jecxz
push
notl
mov
repnz
daa
testb
push
inc
mov
jno
cld
in
xor
cmp
shr
icebp
pop
xor
jnp
ret
sub
or
xchg
lret
push
mov
or
jmp
lods
movsb
mov
sahf
adc
stos
outsl
mov
add
cs
arpl
subb
lret
and
pop
adc
ja
orb
xlat
fistpl
inc
mov
push
mov
lret
fcom
adc
jmp
jle
adc
cwtl
lcall
fwait
loopne
pop
inc
lods
inc
in
jp
adc
test
int3
and
out
jo
aam
sub
and
bound
shl
mov
push
iret
cli
sub
cmpsb
sbb
ds
arpl
les
inc
ret
loopne
mov
fs
push
movsb
xor
cmp
pop
xchg
sub
adc
shrl
idivb
sbb
scas
or
lret
stc
in
lock
lret
sbb
push
push
cmp
mov
ja
push
mov
xchg
mov
xchg
js
sub
mov
sbbb
insb
pop
stc
pop
jl
jg
xor
mov
mov
outsb
mov
leave
pop
sub
inc
add
push
inc
fnsave
xchg
aad
jg
cmpsb
cmpsb
jnp
pop
dec
mov
lods
mov
test
add
mov
daa
pop
arpl
push
cmp
mov
iret
mov
pop
mov
aaa
xchg
imull
lea
xor
into
adc
push
xchg
adc
test
outsl
lahf
inc
pop
shrb
movsb
cli
in
sub
jg
mov
sar
in
mov
loopne
mov
jnp
das
subb
rcrl
outsb
fs
inc
dec
lea
daa
pop
lcall
pop
ljmp
jg
cmp
daa
mov
lahf
add
xor
lret
mov
adc
xchg
jmp
pop
movb
aam
mov
popl
mov
add
sbb
cld
pop
xorb
pusha
mov
test
lret
mov
ret
add
dec
dec
orb
sbb
lret
movsl
ja
xchg
adc
mov
stos
cld
jecxz
inc
ds
jl
jo
xchg
pop
sub
push
push
sarb
adc
pushf
xor
scas
insl
fistl
dec
mov
stc
lret
xor
sbb
pop
jbe
aas
jae
ss
mov
mov
dec
push
sbb
jnp
mov
in
leave
arpl
jns
jp
pushf
aad
adc
repnz
mov
mov
cmp
add
ja
xchg
dec
mov
ret
add
xor
hlt
sbb
ja
adc
inc
cmpsl
cmp
jge
pop
mov
cmp
jg
pop
in
push
cmpsl
mov
mov
fisubrl
xchg
pop
and
jle
push
xor
out
sub
xchg
test
out
xlat
fs
inc
jo
inc
outsl
test
cwtl
jecxz
lods
dec
cmc
ficompl
or
leave
popa
jecxz
jle
jne
add
cltd
jmp
add
and
mov
insl
dec
jns
add
or
jnp
pop
addr16
shrl
or
and
mov
mov
mov
aam
mov
pop
inc
push
enter
mov
mov
pop
sub
push
or
push
aam
dec
das
inc
loopne
push
jbe
mov
pop
cmp
call
sbb
into
xchg
push
mov
js
sub
lods
imul
in
pusha
stc
or
aad
mov
divb
imul
in
jl
lret
pcmpeqd
cmpsl
sub
pop
adc
pop
rol
fxam
jo
in
popa
aad
push
ds
rcll
cwtl
lcall
jbe
mov
fsts
in
lods
fisubl
push
pop
push
jl
mov
push
leave
data16
mov
test
cmpsb
push
aam
inc
dec
cmpsl
sub
inc
adc
or
or
jmp
xchg
loopne
sub
sbb
out
mov
sti
addr16
pop
push
inc
sub
pop
rorl
pop
add
mov
dec
ss
scas
leave
mov
add
cmp
mov
roll
addr16
dec
ss
push
fidivrl
adc
out
movsb
mov
test
iret
in
flds
mov
clc
pop
gs
mov
xlat
mov
lea
mov
adc
sub
add
push
xchg
xchg
push
test
pop
push
stos
xor
mov
pop
jne
dec
outsl
xor
xchg
andl
dec
or
inc
jbe
imul
push
in
sbb
outsl
popf
mov
jnp
sbb
shlb
mov
das
cwtl
pop
push
pop
fcompl
ds
mov
push
xor
xchg
push
ljmp
dec
add
jle
and
and
in
clc
push
cwtl
adc
dec
rol
mov
ss
data16
mov
jle
inc
jnp
inc
aam
loope
mov
int
or
dec
xor
aam
int
mov
mov
mov
testb
clc
mov
ljmp
scas
aam
das
push
dec
cmp
and
mov
adc
imul
test
fsubs
bound
nop
push
ljmp
and
jno
and
xchg
xchg
xchg
daa
inc
inc
fidivl
inc
arpl
and
jno,pt
outsl
mov
les
outsb
movsb
mov
aam
xchg
xor
lds
clc
insl
fsubrs
daa
push
test
out
or
add
cltd
frstor
mov
inc
xchg
push
inc
std
cwtl
fcompl
dec
cwtl
lea
pop
jp
je
add
mov
rclb
lret
mov
dec
ja
bound
mov
xchg
pop
pop
sub
jge
aaa
loop
subb
das
shll
inc
dec
jbe
icebp
insb
scas
test
xlat
push
add
mov
je
sub
lret
icebp
mov
sub
div
stc
xchg
es
mov
shll
ret
mov
mov
jns
mov
enter
mov
inc
cmp
cmpl
cmp
test
and
cmp
mov
repz
daa
cs
call
or
sub
test
and
inc
pop
sahf
popf
icebp
sbb
aas
fistl
pop
mov
nop
flds
fdiv
setns
sahf
out
dec
xor
or
andl
imul
jae
adc
outsl
dec
sub
pushf
xchg
inc
fbstp
or
mov
fwait
pusha
mov
aad
into
outsb
xchg
mov
cmp
std
mov
push
mov
jl
data16
add
pop
in
out
repnz
mov
cmp
sub
and
or
int
add
scas
je
lock
jno
ss
xor
sub
scas
lods
xor
xor
sub
dec
dec
popa
subl
mov
sbb
sub
sub
xchg
test
out
mov
outsb
xor
xchg
and
jp
or
cmpsl
sub
ficoml
jg
mov
test
mov
push
das
dec
adc
xchg
pop
and
shll
arpl
pop
dec
clc
sbb
add
mov
mov
xchg
mov
jne
sub
jmp
lods
xchg
lods
shrl
pop
inc
xchg
jb
mov
ss
lock
cmp
push
dec
pop
sub
jle
inc
and
pop
inc
sub
test
mov
addr16
mov
xchg
xor
aaa
adc
fbstp
or
aam
xor
push
add
and
iret
jp
enter
pushf
rcl
ja
mov
xchg
fstpl
movsl
mov
fisubrs
cs
ss
dec
faddl
fdivs
fwait
mov
out
out
scas
pop
shrl
mov
jecxz
lds
cmpl
arpl
bound
cmp
add
lea
inc
popf
sub
xor
cmp
sub
mov
jmp
lods
sbbb
clc
adc
aas
and
loopne
jmp
add
mov
faddl
mov
cmp
lods
sarl
outsb
mov
ja
lea
ficompl
sub
ret
inc
dec
out
imul
adc
enter
lret
loopne
pop
aam
ds
mov
scas
pop
jb
xor
popf
sbbl
loope
insb
dec
das
dec
cmp
out
je,pn
movsb
or
jb
out
pop
add
frstor
cli
and
cmp
jmp
pop
lods
jne
dec
inc
mov
imulb
sub
xchg
and
jmp
sbb
movsb
int3
cli
ljmp
mov
mov
loopne
out
fsubs
es
inc
jnp
sbbb
push
cmp
or
xchg
mov
or
out
adc
insl
mov
idiv
mov
lea
pop
mov
data16
pop
stos
xchg
popa
call
jnp
orl
lock
fptan
repnz
inc
mov
cmp
dec
lds
and
cmp
cmp
xchg
mov
xchg
mov
cli
mov
pop
sub
xchg
xchg
mov
lcall
ss
inc
pusha
scas
jp
inc
icebp
mov
xchg
push
pop
dec
mov
sbb
inc
outsl
fisttpll
test
lret
stc
jp
push
clc
stc
xchg
cwtl
adc
mov
sub
xchg
adc
inc
loope
ret
push
xchg
sbb
mov
pop
std
add
das
outsb
inc
pop
fwait
repnz
push
mov
jecxz
lahf
mov
shr
xchg
mov
mov
test
push
pusha
fiadds
cwtl
lcall
sarl
cmp
cmp
push
insl
iret
jmp
frstor
ficompl
fildl
sub
ds
rcl
pushf
sub
jbe
fdivrl
bound
lods
push
das
inc
sbb
call
pushf
jg
cld
xor
push
test
push
mov
lahf
test
push
out
loop
inc
cmpsb
insb
adc
cmp
push
inc
sbb
mov
movsl
inc
int3
sbb
out
cwtl
cmp
push
add
mov
stc
jg
aam
fdivrs
cmp
in
pop
pushf
sbb
xor
and
sbb
and
or
fbld
jl
adcb
dec
cmp
stc
push
jns
sub
xor
int3
pop
jmp
loope
call
cmp
dec
pop
inc
xchg
sbb
loopne
nop
or
sub
scas
subb
shl
mov
jns
icebp
or
jp
mov
jns
jmp
in
lods
mov
shll
sti
jo
push
sbb
pop
xor
jmp
push
arpl
sahf
loopne
mov
add
les
jbe
jl
stos
sub
dec
xchg
add
jae
js
sbb
movsb
popa
dec
aas
xchg
mov
imul
xchg
cs
pop
pop
mov
cwtl
and
mov
add
js
mov
aas
shrb
or
outsl
ficoml
cmp
mov
mov
pop
add
xchg
or
mov
aas
cmp
add
int3
cmp
cs
mov
mov
jmp
fcomps
loope
pop
cmc
dec
sub
inc
add
je
pusha
movsb
dec
cmp
pop
mov
in
add
into
dec
push
adc
push
fcmove
clc
rorl
cltd
cmp
xchg
loope
xchg
aam
aam
aas
pop
out
int3
push
in
xor
addr16
xor
cmp
xor
and
sahf
jmp
inc
add
mov
xchg
lods
frstor
pop
cwtl
adc
adc
lds
cmp
jp
push
xchg
out
add
and
inc
add
push
in
and
out
push
sub
mov
adc
addl
jb
adc
in
mov
mov
push
mov
mov
xchg
test
jae
lret
pop
sub
por
xor
cmp
cmp
push
dec
cwtl
das
sub
sbb
push
pop
ficoml
xchg
mov
gs
mov
xorl
fbld
std
sbb
xchg
jp
jbe
adc
adc
and
stc
mov
mov
cmpsb
fistl
jnp
jb
jo
fimuls
sub
and
call
cwtl
or
mov
nop
xor
push
mov
inc
xchg
fisttpl
push
mov
push
bound
push
dec
jbe
dec
ror
jmp
fs
inc
pop
add
inc
out
or
pusha
insl
rcll
sbb
addl
push
aam
notb
sub
pusha
insl
sbb
jbe
mov
push
and
popa
cs
inc
mov
gs
push
sbb
out
int
cli
data16
cld
mov
in
out
cwtl
lock
pop
adc
call
imul
fisttps
pusha
insb
mov
jle
fdivrl
or
add
jmp
test
push
sarb
add
out
jl
fwait
push
add
or
mov
xor
iret
fidivl
sub
and
mov
cld
sbb
data16
cmp
pusha
pop
sub
mov
dec
fcoml
loope
in
sbb
xchg
aad
add
aam
es
int3
out
inc
shl
mov
fstl
pop
fidivrs
iret
lret
sub
mov
nop
pop
ret
sub
jg
shrl
sub
lea
rcrb
stc
in
jle
jmp
adcb
inc
jge
stc
icebp
adc
shlb
ja
dec
sub
lret
jle
adc
push
fiaddl
adc
xchg
in
xor
fisttpll
xor
testb
xchg
sub
jg
push
xchg
jno
rcll
mov
mov
pushf
repz
mov
fisttps
mov
and
jae
arpl
jmp
in
fiaddl
addr16
dec
scas
lcall
push
jae
sub
ds
js
cmp
mov
or
movsb
imul
jb
lods
sahf
xor
ret
lock
or
push
bound
and
push
jp
stos
or
pop
pusha
pop
pop
sub
inc
pop
pop
scas
jno
in
scas
repz
push
ja
out
outsl
mov
aam
push
dec
ret
insb
fisttpll
fnstsw
clc
sub
ret
push
cli
in
or
sub
arpl
hlt
cmc
sbb
or
and
std
jae
cmpsl
sub
mov
mov
mov
sbb
cmp
xor
sub
fcmovbe
outsb
adc
xchg
lea
sub
cli
push
mov
jnp
jne
mov
push
mov
addr16
sbb
pop
dec
repnz
hlt
orb
lcall
cmpsb
inc
stos
add
jno
js
hlt
mov
int
sub
imul
mov
cld
push
fnstenv
aad
mov
fcomi
xchg
mov
test
in
lret
cmp
jle
inc
adc
push
insb
pop
sbb
shl
dec
pop
icebp
jnp
inc
jl
in
iret
fcmovnb
push
jmp
aaa
jbe
test
ret
mov
add
call
or
in
leave
pop
mov
pop
add
cli
push
xchg
cmp
sub
fistpl
or
sub
jns
mov
int3
jecxz
jmp
cmpsb
aas
push
cmp
cmp
push
cmp
in
cwtl
test
dec
pop
stc
jno
cmc
mov
jne
sub
adc
adc
scas
pushf
cmp
add
pushf
inc
mov
enter
pop
fcoms
push
push
add
dec
std
mov
lods
xchg
mov
imul
popa
lock
mov
inc
adc
xor
inc
js
lret
scas
mov
fcomps
sub
aaa
adc
mov
ror
lcall
imul
sbb
pop
lret
inc
xchg
xor
add
jnp
sbb
and
pop
mov
pop
clc
xlat
popf
cwtl
bound
mov
out
iret
inc
or
mov
bound
mov
scas
mov
mov
jp
add
int3
outsl
sti
xchg
lock
inc
sbb
aaa
imul
jle
jno
lret
loope
je
add
imul
loop
jl
xchg
and
sub
add
inc
iret
lret
sbb
pushf
fwait
cmp
sub
sub
jb
lret
scas
iret
mov
mov
cmc
rcrl
dec
test
xchg
jb
sbb
outsl
mov
jmp
inc
mov
jge
ss
adc
sbb
outsl
jg
lods
test
imul
push
insl
mov
insl
or
mov
xchg
cmp
test
movsl
mov
scas
or
movsl
loop
stos
dec
adc
cmp
dec
add
inc
inc
jno
popa
sub
pop
mov
shlb
jae
test
lods
test
repnz
xchg
lcall
inc
ret
pop
test
mov
sub
outsl
xor
push
mov
jne
fstps
movsb
aad
mov
ret
jecxz
lret
aad
jge
mov
gs
or
in
mov
jne
iret
in
mov
shl
mov
sub
fs
push
stos
pop
mov
insl
or
sub
cmp
mov
adc
mov
dec
cmp
mov
cmp
mov
rolb
inc
ljmp
jb
or
adc
cmp
cli
sub
pop
les
cmp
pusha
sub
fdivrp
push
lcall
test
testl
ljmp
cmp
outsb
dec
es
ja
gs
add
sub
out
xor
jg
jbe
rol
pushf
fnstcw
sub
and
es
push
fimuls
shrb
inc
cltd
outsb
sbb
jecxz
pop
cmc
rcll
icebp
cmp
popa
int3
inc
or
int
leave
lods
clc
mov
push
movsl
cmc
shrb
insl
mov
and
jmp
jecxz
mov
ss
adc
pop
fsubrs
dec
sarl
sub
stos
cs
mov
pop
std
add
or
bound
sub
orb
cmp
xchg
mov
jo
sub
and
adc
mov
iret
in
or
dec
push
mov
xor
sbb
push
inc
test
dec
push
lret
push
mov
fsubs
push
sub
adc
pushf
mov
sub
mov
mov
les
jecxz
lds
in
ret
or
sbb
or
lea
das
rol
clc
andb
inc
bound
cld
sub
lds
movsb
ficomps
dec
fmull
xor
std
pop
add
arpl
add
jmp
fcompl
xchg
inc
mov
incl
sub
arpl
bound
lahf
pop
outsl
loop
lock
je
outsb
sti
lock
push
inc
cld
sub
pushf
jae
int
mov
add
xor
les
fnstenv
lods
pop
cld
add
scas
jl
jl
dec
xchg
stos
js
dec
cmp
dec
mov
scas
cmpsb
inc
lret
dec
fs
mov
fdivrl
jg
xchg
fsubrl
or
fisttpll
mov
cmp
scas
ds
xchg
iret
fstp
fcoms
into
pop
add
xchg
rcrl
test
fcmove
inc
xchg
push
cmp
loope
daa
enter
jle
cs
loop
movsb
mov
xor
arpl
scas
outsb
aaa
pop
mov
push
or
mov
lock
sbb
inc
je
push
in
add
movsb
or
call
fs
pop
testl
xchg
fs
ret
clc
aas
mov
push
push
gs
pop
pop
in
clc
or
mov
or
cmp
nop
jl
test
cmp
cs
pop
je
xor
push
ds
xchg
lcall
in
jne
lret
sub
fndisi(8087
add
inc
inc
es
jbe
mov
adc
pushf
cwtl
mov
lds
in
icebp
js
mov
std
sub
lds
insb
or
mov
xlat
movsb
pop
and
dec
add
sub
pop
mov
fstpl
and
orl
or
or
mov
mov
mov
js
stos
jl
enter
lods
inc
mov
arpl
jmp
cmp
and
int3
fwait
sti
mov
lock
std
rcrl
xor
aad
addl
cltd
js
mov
inc
sbb
adc
jge
test
int3
scas
mov
sbb
in
and
je
push
stos
out
mov
xchg
jns
pop
cwtl
adc
pusha
out
les
cli
adc
pmaxub
data16
mov
add
pop
pop
enter
xor
add
add
pop
push
and
pop
mov
hlt
lahf
sub
out
shr
insb
movsb
inc
loop
shl
pop
dec
inc
hlt
and
imul
pop
adc
mov
sbb
popf
adc
add
push
out
mov
insl
aam
inc
push
enter
stos
ficomps
cmp
lahf
mov
js
mov
adc
ss
stc
and
ljmp
mov
lods
sbb
dec
adc
pop
cmp
das
pop
pop
adc
xchg
dec
test
stos
jle
mov
push
in
cwtl
out
jae
pushf
sub
mov
xor
pushf
scas
sub
aam
mov
loopne
or
xchg
adc
jbe
jecxz
xchg
xor
mov
push
cs
aas
sbb
hlt
xchg
scas
sub
jno
enter
dec
pop
dec
lods
rcll
out
and
sub
cmp
cmp
negl
pop
aam
ret
and
sub
in
pop
jno
orl
adc
add
adc
jnp
arpl
into
pop
push
inc
stos
das
push
ljmp
ret
int3
je
mov
mov
push
cmp
add
pop
outsl
push
cmp
sti
in
sbb
fsubr
in
mov
add
pop
or
cwtl
ljmp
mov
jecxz
popa
jae
add
into
cmc
and
mov
xchg
mov
dec
mov
stos
ja
xor
loope
dec
stc
cmp
xor
pop
popa
sub
and
out
outsl
ds
std
arpl
sbb
jge
jle
scas
mov
pop
mov
fwait
sahf
sarb
pop
enter
int3
jecxz
mov
adc
ret
mov
fisttpl
mov
pop
push
cmp
push
adc
pop
lea
repnz
stos
or
in
sbb
push
in
pop
iret
xor
sub
fnsave
inc
mov
sub
jo
jno
xchg
push
clc
inc
clc
pop
cmp
adc
loope
popl
loopne
lea
les
cld
sbb
stc
mov
add
push
pop
insl
add
inc
mov
inc
pop
cmp
fwait
aad
sbb
cld
data16
ja
xchg
pop
jno
pop
mov
inc
mov
call
ficoms
xchg
stos
push
outsb
movsl
loope
add
outsb
mov
fldenv
pop
push
inc
ret
repz
add
sbb
ds
mov
popf
fisttpll
sbb
add
dec
addl
push
ss
into
mov
jecxz
out
adc
out
xor
push
pop
daa
cmpl
or
ret
aad
mov
js
push
addr16
cmp
ljmp
int
cmpsb
jge
loopne
sti
xor
sbb
cmc
stos
add
jnp
shr
gs
fadds
sbb
nop
fwait
pop
mov
lcall
jns
push
xchg
fisubs
sub
cmp
cmp
jp
aam
mov
sub
xchg
inc
cmp
sub
jb
popa
roll
sbb
imul
xor
aad
xchg
dec
stc
rclb
loope
xchg
cmp
dec
cmp
xor
sbb
or
lea
jle
enter
push
in
lret
xorl
fwait
insl
cmp
shlb
sub
jnp
in
mov
daa
pop
jmp
rcrb
ret
imul
mov
aad
das
xchg
out
push
mov
mov
sub
cmp
or
xchg
out
inc
lahf
xchg
xchg
mov
cltd
stos
sub
jle
insb
or
aas
xchg
adc
mov
cwtl
enter
shrb
sarl
imul
mov
pop
add
aad
jmp
cmp
jle
in
dec
sarl
out
cld
jl
js
mov
int
xchg
in
jno
adc
movsl
jb
mov
rclb
cmpsb
jecxz
mov
outsb
inc
in
cmp
out
sbb
cmp
mov
xor
and
sbb
stc
nop
pop
bound
scas
cmc
add
sahf
add
les
loope
mov
icebp
inc
pusha
jl
or
mov
pusha
push
adc
test
mov
or
rcrl
adcb
rclb
xor
mov
sbb
xor
cld
dec
dec
shrb
cmpsb
mov
hlt
mov
stc
lret
imul
cmp
dec
add
popa
in
enter
and
inc
xchg
inc
daa
mov
das
fprem1
push
pop
sbb
xchg
cmpsl
dec
dec
pusha
insb
jbe
pop
ljmp
jno
dec
ret
push
dec
loopne
xchg
leave
movsb
iret
sahf
mov
in
add
xor
mov
es
lods
rol
or
mov
outsl
cmc
cs
mov
fsubrl
adc
xor
outsb
pop
mov
push
jae
jne
inc
sbb
in
arpl
es
inc
lahf
adc
jbe
into
loop
popa
lods
jg
and
iret
add
jge
mov
frstor
push
dec
mov
je
jbe
mov
jnp
push
arpl
jns
xchg
shrl
std
pop
sar
iret
into
lcall
sbb
mov
and
sub
and
add
call
cmp
out
mul
lock
enter
cmpsl
inc
mov
add
fwait
fwait
or
sub
pop
jo
sbb
jp
in
das
dec
jb
jb
jns
cmp
rcrl
ja
popf
jle
cmpsb
mov
mov
xorb
pop
les
xchg
sbb
into
enter
mov
outsl
adc
ja
cmp
dec
sbb
sub
scas
xor
in
sbb
clc
xchg
cmp
inc
dec
jne
mov
jo
out
lahf
or
lcall
int
int
push
mov
out
gs
dec
hlt
jae
push
aam
and
out
repz
jle
fsub
push
adc
mov
fmull
add
sub
das
dec
cli
pop
negb
lcall
stos
mov
daa
bnd
inc
std
ljmp
lcall
fidivs
xor
aas
lahf
lods
sti
mov
icebp
bound
xor
mov
cmpsl
xor
ret
and
inc
ljmp
lods
int
fnstsw
pusha
jnp
daa
lods
in
test
cmpsl
sub
mov
out
std
ds
xlat
xor
xlat
sbb
data16
fsubl
mov
std
cmp
movsl
push
aad
jo
je
data16
stc
push
mov
jge
testl
cmp
adc
cmpsl
addr16
push
lret
mov
lahf
dec
mov
pushf
scas
xchg
mov
jns
pop
dec
cmp
add
adc
push
mov
daa
and
setl
jne
lret
mov
dec
push
les
fistps
ss
adc
inc
mov
fs
jns
xchg
daa
lea
xchg
in
rcl
mov
inc
dec
sub
jecxz
sti
mov
dec
cmp
sub
xor
jg,pn
push
sub
add
popf
out
lock
dec
adc
arpl
arpl
xchg
loope
test
cmp
inc
cld
mov
sub
pushf
or
and
imul
xchg
fnstsw
aam
xchg
xor
scas
data16
push
jmp
das
test
out
sbb
and
mov
sbb
mov
mov
or
xor
sub
push
lret
test
loopne
sbb
aas
sub
mov
test
jge
add
push
dec
fstpt
push
sbb
mov
loop
jae
cld
cmpsb
pop
fisttpl
pop
icebp
dec
ds
push
xor
fstpl
sub
adc
push
es
inc
fistl
adc
cmp
jle
or
lret
imul
mov
jns
cmc
lahf
sub
int
jae
ss
add
push
jb
movsl
or
lea
incl
sti
movsl
or
adc
mov
mov
or
test
or
stc
dec
push
in
cmpsl
pushf
xor
inc
ss
xchg
in
push
mov
xor
sbbb
jmp
cmpsb
sbb
cmpb
loop
xchg
xchg
rorb
addl
jle
arpl
sub
mov
sbb
repz
mov
mov
xor
outsb
xor
sub
jns
out
sub
adc
clc
jb
push
cld
cmc
mov
repz
jg
movb
pop
pop
xchg
arpl
push
lds
loop
jmp
ja
mov
mov
cltd
jno
jmp
xor
sub
movsb
decb
add
aam
nop
and
xor
int3
loope
mov
fsubrs
cmc
or
ficompl
in
inc
sti
xchg
sahf
sub
jle
mov
pop
daa
dec
mov
clc
mov
cld
adc
cwtl
mov
arpl
dec
int
fimuls
ds
pop
or
aam
leave
addr16
mov
adc
pop
sti
loop
pop
data16
daa
stc
mov
dec
push
pop
std
imul
adc
rclb
enter
pop
js
or
jg
sub
std
addb
fwait
mov
addr16
movsb
dec
lcall
add
rorb
cmp
mov
test
int3
imul
loope
lods
sub
roll
cwtl
popf
xchg
pop
clc
pop
and
call
insl
pop
xchg
out
rorb
gs
iret
jo
xorl
mov
pop
out
inc
dec
outsl
jns
lahf
hlt
mov
xchg
addr16
into
cwtl
mov
dec
scas
xchg
mov
mov
cmpsl
daa
lret
lods
lcall
dec
enter
jle
push
mov
div
outsl
jge
movl
pop
cld
dec
mov
add
cltd
adc
mov
stos
jbe
aas
aam
sahf
and
xchg
mov
mov
dec
icebp
mov
cld
fs
ret
sahf
or
stc
ret
pop
mov
sbb
sbb
test
sub
lds
and
jns
pop
enter
add
jge
xchg
stos
test
push
cmp
es
push
loopne
addr16
neg
mov
faddl
push
movsb
in
xor
ja
push
push
cli
adc
lcall
mov
aas
lock
jno
sbb
push
push
aas
cmpsl
pop
add
sbb
jp
xchg
int3
scas
clc
jp
and
pop
test
or
enter
sbb
mov
jb
aaa
dec
fst
inc
leave
loop
push
jge
rol
or
and
jb
mov
add
jg
mov
jle
jo
mov
ret
cli
scas
push
cmpb
push
xor
test
xor
fiaddl
push
leave
xor
inc
fstpt
in
mov
mov
pop
shr
push
push
pop
xor
outsb
fmull
or
push
jbe
test
cmp
and
push
movsl
sub
push
adc
es
adc
jl
call
sbb
mov
pop
cmpsb
loop
cmpsb
lcall
xlat
push
pop
adcl
loop
lea
andb
lods
bnd
pop
xor
in
adc
dec
push
push
jno
mov
sbb
scas
fdivl
outsb
test
mov
add
pop
dec
add
adc
mov
xor
add
mov
cs
outsb
shrb
test
push
pop
dec
and
cmc
dec
ja
mov
pop
push
in
lcall
sbb
in
push
mov
push
imulb
xor
ret
inc
adc
in
adc
imul
fistpl
jb
sti
and
xchg
ss
add
lods
mov
and
pop
fwait
cmp
lahf
out
dec
enter
sub
cli
add
insl
mov
pop
mov
adc
jne
or
mov
or
aas
insl
jns
mov
sub
lock
ja
fcmove
sbb
shrl
jo
jp
inc
add
in
sbb
pop
mov
rcrl
mov
insl
pop
roll
sub
movb
push
in
lret
movsl
fs
movsl
and
or
pop
jae
imul
jmp
les
lea
adc
push
iret
idivl
add
in
add
mov
addr16
jnp
add
scas
loopne
inc
popf
lahf
std
ja
pop
xor
mov
movsl
xor
jno
pop
jns
arpl
fldenv
repnz
aad
cmp
mov
pop
lret
jnp
mov
lret
icebp
jmp
insb
stos
scas
sub
outsb
sub
fldenv
inc
add
pushl
inc
dec
and
fisubrl
mov
sbb
pop
inc
and
jmp
out
movsl
jg
push
xchg
lret
add
rol
sbb
dec
push
fcoml
mov
rclb
ret
sub
xor
out
mov
xchg
pop
ja
and
add
xor
fists
sub
jae
dec
xchg
cli
mov
cltd
jmp
and
jecxz
mov
cmp
and
scas
sub
cli
out
adc
inc
iret
movsb
adc
cmp
testl
mov
jg
scas
cmp
test
inc
es
test
inc
fistpl
loope
pushf
aaa
pop
shl
pop
in
sub
xchg
clc
cmp
cli
and
mov
out
add
pop
shl
inc
call
mov
mov
cmpsl
sbb
loopne
dec
pop
out
aad
outsb
loopne
cmpsb
into
push
mov
pop
aad
mov
mov
out
notl
ret
add
sub
cmc
fdivrs
ret
push
fprem1
stos
aad
cmpsb
or
dec
imul
xor
or
pop
sub
cmp
gs
jb
je
pop
push
es
inc
adcb
sub
add
sub
out
sbb
sbb
fdivr
adc
jp
fsubrp
inc
adc
sarl
outsb
insb
shll
add
testl
pop
test
xor
lods
repz
addr16
cmp
clc
fmull
ror
push
loopne
stos
dec
in
lods
cwtl
push
sub
dec
cmp
add
pushf
pushf
or
xchg
clc
mov
cmc
push
stos
pop
xchg
xor
outsb
pop
push
pop
sbb
sub
push
jmp
mov
je
cmp
lds
mov
add
cmp
jb
out
add
inc
addr16
add
aad
xchg
add
xor
add
cmp
mov
fnsave
prefetch
or
mov
mov
xchg
out
adc
fs
enter
fisubrs
add
call
aaa
je
out
xor
adc
testl
or
mov
mov
insb
sub
push
inc
cmp
mov
inc
jp
faddl
mov
std
scas
cs
jmp
adc
jno
mov
pushf
enter
jle
and
lods
lret
dec
and
mov
push
aad
inc
sub
outsb
shrb
arpl
pop
jp
lret
adc
lds
xchg
std
xchg
xor
cmp
inc
dec
out
fs
pop
rcll
stos
xchg
inc
js
add
push
fwait
test
les
out
push
jl
fists
test
pop
sbb
popl
lcall
cs
lods
ret
popaw
push
jae
fnstenv
aas
mov
jp
dec
pop
or
inc
in
call
and
nop
jl
xor
aaa
push
lea
xchg
je
sbb
je
ds
inc
fstl
les
lret
pop
sub
push
outsl
mov
movsb
ffree
sub
lock
or
xchg
sub
es
fdivrs
mov
xor
sub
bswap
stos
jnp
cmp
adc
cltd
movl
or
inc
xchg
add
pushf
inc
stc
fimuls
pop
pop
xor
cmp
jns
in
lea
lea
pop
mov
push
rorb
aas
jge
add
pop
icebp
movsl
and
adc
jno
adc
fcmovnbe
rclb
push
ljmp
jne
cmp
jno
or
hlt
cmc
in
mov
adc
sbb
xchg
sbb
jecxz
cli
cmp
shll
sbb
test
mull
hlt
inc
mov
or
ljmp
stos
add
data16
std
pop
fbld
xchg
decl
into
lea
mov
inc
cmc
xor
outsb
das
dec
cmpsb
dec
inc
repnz
cmpsl
or
repz
rcr
inc
xlat
dec
loopne
addl
push
mov
jmp
popa
addl
andb
sub
mov
popa
mov
xchg
xor
fcomi
adc
repnz
out
sub
ja
pop
aad
add
imul
imul
mov
mov
mov
mov
movsb
and
lahf
cmpsb
daa
sub
and
int
inc
iret
adc
xchg
sub
xlat
loope
aam
lock
cld
test
daa
outsl
xor
push
jge
push
jge
sahf
mov
rclb
mov
in
mov
negl
jecxz
mov
xor
aas
cld
jle
sub
mov
add
in
and
fisubs
lcall
cld
lret
push
mov
aas
test
test
xchg
cmp
testl
addr16
pop
mov
int
and
jmp
nop
mov
add
sti
xchg
push
ret
push
icebp
push
cmp
cmpl
pop
push
pop
or
sub
sbb
aaa
jmp
mov
mov
cmpsb
sti
repnz
sar
dec
sahf
jae
xor
sbb
das
pop
mov
mov
push
dec
gs
iret
xor
loop
cld
lahf
fildll
daa
add
push
push
or
pop
fsubl
pusha
int3
jns
mov
lcall
xor
pop
lret
sbb
or
or
adc
sbbb
push
je
inc
cwtl
aaa
push
jae
push
adc
push
sbb
loope
xchg
mov
inc
pop
jbe
stos
pop
sub
inc
sub
rcr
inc
cmp
movsb
shll
dec
leave
cmp
mov
xor
rorl
adc
cmp
xchg
xchg
int
popf
sub
pushf
push
cmp
cmpsl
add
loopew
cltd
xor
push
addr16
mov
push
sbbl
lods
lcall
dec
test
popa
ret
je
pop
inc
or
dec
fnsave
pop
add
aad
and
pop
sbb
inc
stos
mov
in
push
je
ja
das
scas
daa
xchg
das
pop
mov
pop
add
add
push
insl
or
int3
pop
mov
mov
aaa
inc
jns
push
es
outsl
out
sub
cmp
pop
bound
adc
mov
enter
aaa
sbb
mov
movsl
lock
mov
dec
adc
js
pushf
sub
mov
inc
test
scas
cmp
xchg
and
popa
stos
inc
dec
dec
addr16
cmp
jnp
in
push
fimull
xchg
xchg
cmp
pop
divl
lds
sub
cmp
add
sbb
ss
das
xchg
jp
xlat
pop
fmull
fwait
repnz
xchg
hlt
pop
ret
in
shl
push
repnz
icebp
mov
jbe
xor
mov
push
inc
in
inc
xor
sub
hlt
aad
popf
mov
clc
mov
xchg
mov
xchg
fcomps
adc
adc
ffree
stc
inc
sahf
outsb
cwtl
arpl
xor
fmull
mov
adc
mov
cli
cmp
stc
out
jmp
mov
dec
leave
cs
std
mov
jp
push
pop
inc
mov
jg
jns
add
push
inc
and
test
mov
cwtl
shll
lahf
push
fimull
mov
je
mov
mov
sbb
arpl
imul
xor
jle
jge
jmp
repnz
cmp
aad
mov
xchg
mov
xlat
sbb
shl
fsts
add
xchg
mov
mov
cltd
push
stos
sub
pop
xchg
scas
fisubrl
adc
and
inc
inc
fidivrl
jp
lock
mov
jp
rcrb
mov
iret
rcll
and
fstps
mov
clc
ja
push
test
loopne
adc
cmp
adc
lods
movsb
fldcw
or
loope
fcomip
jl
fcmovne
adc
jae
push
or
inc
enter
insl
aaa
push
adc
mov
add
dec
ljmp
pop
in
repz
xor
data16
pusha
mov
sub
add
fs
sub
nop
sbb
mov
negb
jl
loopne
xchg
dec
and
jge
mov
cltd
cmp
lods
push
and
sbb
push
xlat
xchg
aaa
fisubrs
in
pop
cmp
adc
and
mov
lea
mov
cmp
jge
sbb
and
jle
notb
inc
xor
pop
pop
sbb
fwait
aam
std
aad
imul
dec
jecxz
call
adc
lahf
and
adc
mov
ret
inc
sbbb
sbb
fnstenv
lds
test
add
les
cmp
rcrl
pop
xchg
cli
jbe
arpl
cmp
push
aaa
out
fwait
inc
sahf
adcl
fmuls
in
movsl
fimuls
add
test
mov
imul
xchg
pop
add
pop
mov
aaa
shr
data16
pop
jp
out
xchg
adc
out
push
or
xchg
aaa
inc
test
lahf
in
add
into
sub
sub
push
out
and
gs
inc
xchg
icebp
inc
xor
adc
and
rclb
cmpl
mulb
xchg
sti
jnp
je
lock
sbb
mov
xchg
push
pop
cmp
rolb
test
aaa
lods
in
push
movsl
sbbl
stos
mov
xchg
int3
pop
inc
sbb
pop
sarb
dec
test
mov
sbb
in
jl
mov
push
add
cmp
bound
mov
fisubl
in
es
adc
inc
or
test
jg
mov
fstl
sbb
divl
pusha
mov
hlt
jne
push
or
and
lds
pop
jno
or
push
cmp
push
nop
cmp
out
loop
hlt
ja
fwait
sbb
lods
push
and
push
outsb
stc
das
filds
test
fwait
push
push
nop
sti
daa
js
cmp
jnp
cld
xchg
outsb
push
mov
inc
mov
aaa
jl
and
imul
push
cmp
movb
add
out
and
mul
out
add
fcmovnu
fs
pop
add
movsb
mov
callw
mov
stos
pop
lods
mov
inc
jg
add
out
addl
jb
mov
pop
js
xlat
icebp
cmp
pop
push
push
cmp
pop
xor
jecxz
out
xor
lods
adc
xor
adc
movsl
sub
je
push
int3
aaa
xchg
adc
pop
jl
iret
rol
mulb
mov
adc
cld
ret
dec
pusha
rcrb
pop
mov
mov
out
mov
loop
sbb
daa
imul
and
xchg
push
mov
pop
inc
xor
push
scas
arpl
dec
cli
into
ffree
cmp
push
lds
push
cmp
shl
push
pop
sbb
rcrb
scas
fsubs
or
outsl
pop
lret
jle
or
xchg
ss
cli
bnd
mov
xchg
push
dec
in
mov
cltd
add
jle
es
xchg
mov
repnz
mov
jnp
test
pushf
push
adc
fistpll
std
xor
jnp
mov
cli
pusha
add
cmp
jns
loope
mov
cmpl
ret
pop
or
xor
jne
dec
push
shlb
bound
sarl
push
dec
push
ss
int
sub
and
and
xor
aas
ret
dec
or
rorb
mov
insb
ds
imul
xor
ja
loopne
in
cmp
lcall
push
loop
push
adc
sub
mov
shll
push
pusha
cmp
sub
xchg
nop
popa
cmc
push
stos
adc
inc
clc
aas
cwtl
push
mov
ja
mov
push
adc
mov
pop
sub
insl
dec
jb
pop
ds
sub
mov
clc
lahf
xchg
dec
mov
je
cmp
sbb
fwait
cmpsl
outsl
jno
lea
jp
push
inc
cmp
test
inc
sahf
pop
jns
or
loope
sub
outsb
or
sub
pusha
cmp
or
call
fistpl
jns
aas
mov
scas
pop
mov
pop
xlat
ret
mov
sbb
mov
inc
lds
cld
test
aaa
scas
nop
rcr
xchg
out
xchg
out
das
mov
jge
xchg
imul
adc
jne
jns
mov
and
push
jno
roll
push
in
sub
add
cs
dec
and
sub
jmp
dec
ficoms
adc
loopne
ds
popa
mov
lahf
push
pop
into
sbb
loop
js
mov
ficomps
xchg
xchg
in
daa
and
pop
sub
fwait
push
mov
int
div
es
inc
addr16
leave
or
push
fwait
push
mov
insb
ss
mov
push
out
insb
push
pop
das
test
lds
out
iret
inc
test
jle
xchg
pop
dec
push
mov
mov
cmpb
push
sahf
lahf
shr
pop
daa
fdivrl
sbb
adc
popf
cmpsb
push
add
jo
pop
jno
push
inc
sub
out
cmp
insb
xchg
sub
mov
enter
dec
lcall
adc
inc
cmp
shr
cli
jg
cmp
mov
popa
jns
adc
cs
adc
xchg
adc
sbb
arpl
push
test
jo
fisubl
push
aam
scas
cmpsl
cmp
add
mov
xchg
add
out
jg
cmp
and
hlt
xchg
push
sub
loop
xor
jae
jno
fbstp
cmpl
icebp
fnstsw
and
dec
das
dec
mov
int
push
mov
push
repz
fsubl
outsb
into
subb
adc
pop
jae
cmpsb
pop
ficoms
cmp
mov
arpl
jns
fwait
or
dec
add
hlt
cld
xchg
jns
mov
sub
jo
loop
jae
cmp
fs
xchg
xchg
inc
sub
dec
outsl
rorl
and
mov
cld
jg
loopne
in
test
jo
repz
les
xor
mov
inc
leave
xor
xchg
sahf
int
inc
lods
daa
mov
lods
push
loope
pop
or
pushf
sbb
sub
out
xor
fincstp
mov
pop
dec
lahf
adc
jo
cld
dec
stc
in
and
and
mov
bound
les
dec
lret
dec
and
outsb
sbb
jg
mov
mov
out
stc
and
jae
je
cmp
mov
ret
sub
mov
adc
push
pop
addr16
adc
test
repz
adc
cwtl
jl
repnz
xchg
stc
ss
add
imul
mov
xchg
rcl
and
cli
sub
jmp
das
inc
jb
loopne
adc
in
cmp
call
jb
dec
mov
pop
sti
cld
cmp
cwtl
xchg
mov
xchg
push
sbb
or
xchg
js
rcr
test
jl
sub
nop
adc
push
clc
fimuls
fyl2xp1
or
or
add
lret
movsb
ja
out
int3
and
adc
xchg
jmp
jle
call
add
add
dec
push
push
gs
aam
xlat
mov
push
xchg
xchg
je
lods
daa
mov
dec
in
xor
int3
loopne
out
gs
loop
lcall
push
in
mov
push
jbe
mov
cli
je
enter
nop
imul
mov
mov
mov
jb
jne
sarl
ret
aaa
fs
or
xchg
ds
xchg
cmp
inc
scas
mov
push
lods
sbb
sbb
and
mov
dec
aas
jecxz
out
adc
or
adc
mov
add
andb
out
clc
movsb
decb
clc
pop
test
cmp
les
push
xchg
mov
fwait
repz
arpl
aaa
int3
pushl
call
hlt
push
or
dec
adc
insb
or
or
add
cmp
pop
add
out
add
mov
loop
and
enter
pushf
inc
pusha
push
mov
and
inc
sub
shlb
hlt
sub
imul
pop
mov
out
mov
sbb
inc
aaa
mov
push
pop
daa
jne
push
imul
lret
inc
and
xor
jbe
jp
or
sbb
xchg
les
pop
mov
jo
movsl
xlat
mov
dec
sub
mov
ret
lods
nop
pushf
stos
add
cmpl
test
sub
gs
fs
repnz
push
je
lods
fwait
xchg
cmp
pop
mov
cmp
jmp
pop
les
mov
mov
pop
aaa
add
xchg
shl
cmp
jne
inc
dec
call
loope
add
cltd
push
outsb
jne
int3
pop
add
dec
cmp
inc
stc
mov
mov
cs
insb
pop
das
push
jle
push
pop
pop
je
jnp
ret
dec
push
dec
fsubl
inc
dec
add
inc
cmp
mov
pop
push
std
cltd
mov
pop
mov
xlat
jns
dec
xchg
xor
mov
daa
leave
mov
inc
in
or
insl
cli
pop
nop
rcrl
jp
xorl
mov
sub
sub
xor
les
fimuls
cs
testl
mov
add
pushf
popa
mov
popa
lret
mov
cmp
push
outsb
movsl
xor
xor
lcall
testb
insl
daa
jp
or
lret
call
test
std
jne
lock
cmp
popa
and
ljmp
dec
lea
cmp
push
mov
xchg
lcall
dec
addr16
jg
imul
or
dec
imul
ss
scas
cmp
addl
mov
loopne
cmc
sbb
ja
jns
push
insb
jno
dec
dec
xor
sbb
in
mov
push
sub
gs
movb
arpl
lock
ja
push
loopne
mov
inc
hlt
jno
lock
in
repz
popa
adc
dec
cmpsb
add
fistl
jg
test
fiadds
out
xor
ds
out
pop
into
call
lcall
sub
pop
iret
sbb
xlat
dec
push
test
out
js
pusha
jg
add
sbb
xchg
push
addr16
aam
xor
pop
mov
rol
insl
pop
or
movsl
push
aad
xchg
dec
outsl
ret
fstl
insl
dec
jns
mov
and
add
sub
lods
jg
das
inc
leave
call
jb
and
sub
and
xchg
gs
movsb
lods
lea
mov
fxch
push
mov
add
repz
sub
add
loope
sub
adc
inc
call
cmp
lcall
nop
cmp
mov
push
push
in
shlb
adc
icebp
mov
imul
scas
push
mov
add
jecxz
add
inc
lock
fsubrl
nop
or
mov
in
loopne
pop
cmp
out
lods
xchg
dec
sub
aam
cmp
fisttpll
imul
mov
cld
jp
pop
xor
jp
dec
leave
cmpb
mov
imul
sub
mov
push
push
mov
mov
inc
jmp
daa
std
shll
add
shl
movsb
test
xchg
dec
add
add
mov
pop
test
clc
gs
cmp
dec
cmp
push
add
or
loop
loop
mov
aas
adc
xor
pop
nop
sbbl
hlt
xadd
imul
cmp
jg
in
push
adc
adc
adc
scas
mov
ret
dec
fidivrl
xchg
jae
das
sub
inc
or
sub
repz
lahf
jb
aaa
xchg
mov
jecxz
jno
out
mov
xchg
inc
je
addl
mov
mov
xchg
inc
movsb
ret
jb
lds
push
push
fsubrl
sub
in
xchg
xchg
aas
punpckhbw
hlt
cmp
jno
mov
xor
xorl
sbb
dec
insb
cmp
clc
cmp
shlb
mov
inc
cli
stos
mov
in
xor
movsb
es
repz
pop
jg
ja
push
pop
inc
lret
ja
push
imul
push
test
test
mov
xchg
rep
push
stc
shr
andb
push
shlb
push
push
hlt
dec
mov
lret
sub
in
or
cmp
pop
cmp
adcl
xor
inc
mov
lods
cmp
xorb
jae
fcompl
lods
jnp
je
pop
into
js
dec
add
mov
in
sti
div
dec
inc
aaa
je
mov
mov
xor
cmp
imul
pop
and
pop
data16
call
jg
dec
int3
mov
mov
gs
out
filds
in
and
stos
mov
fs
dec
pop
sub
bound
cmc
jo
shl
push
jecxz
cmp
les
pop
or
sbb
addr16
mov
sbb
lahf
cmpsb
lcall
out
lea
cmp
gs
dec
out
xor
cltd
mov
mov
sti
ljmp
mov
jno
add
nop
lahf
rcrl
ja
popf
ret
push
jle
out
negb
cmc
xchg
dec
pop
data16
mov
pop
push
je
inc
iret
loope
stos
add
insl
scas
aad
inc
loopne
pop
dec
push
xor
xchg
fld
scas
xorb
cwtl
popa
out
fidivrl
dec
cmc
pusha
mov
or
mov
pop
outsb
and
ja
movsl
inc
inc
fwait
cli
pop
push
jno
lret
inc
push
adc
mov
inc
xor
test
inc
test
cmp
mov
push
adc
sbb
mov
mov
sbb
ficompl
adc
jno
push
jbe
pop
xor
push
mov
mov
call
les
xor
mov
dec
adc
out
cmpsl
enter
stos
push
cmp
sub
cltd
in
add
jb
btcl
in
addr16
sub
mov
out
loope
dec
sbb
add
negb
and
out
mov
les
adc
or
out
adc
sub
dec
mov
out
pop
in
adc
inc
out
xchg
jno
loop
paddusw
fstl
ds
loopne
addr16
xchg
or
shrb
notb
xor
test
stos
loop
lea
and
cmp
or
push
mov
ret
fnstcw
xchg
fiadds
pop
rol
insb
mov
cmp
and
inc
adc
xchg
jae
into
cmp
shll
cmp
mov
fldenv
in
xchg
adc
cmp
add
test
js
loop
fdivrl
or
shrl
test
jne
lds
fdivl
ljmp
leave
mov
jl
fistl
sbb
jmp
cmpsl
lret
sub
sbb
xchg
xchg
pop
lods
es
cmp
lea
test
lea
stos
stos
cmp
iret
mov
pop
jo
test
lods
jmp
addr16
addr16
imul
jne
popf
mov
jge
loopne
or
sub
dec
pop
add
sub
ljmp
pop
popa
mov
inc
dec
dec
loope
jmp
aam
js
stos
push
push
lea
mov
mov
cmp
in
out
cmp
dec
aaa
mov
stc
mov
mov
inc
mov
xchg
adc
xchg
shlb
insl
cmp
nop
fs
imul
jnp
out
xor
test
add
loope
mov
jns
adc
xlat
xor
dec
pop
xorb
ds
psrld
sub
ficomps
mov
cmp
adc
mov
dec
jmp
cmp
jle
jnp
mov
lods
pop
dec
mov
stc
ss
inc
mov
stc
repz
sbbl
push
mov
pop
sbb
and
mov
mov
aad
mov
stc
and
pop
into
pop
fldenv
sbbb
ret
xchg
mov
jno
call
mov
pop
mov
orl
decb
lret
add
ss
inc
dec
adc
jecxz
xchg
mov
fcmovb
mov
pop
pop
out
in
xlat
sub
lods
cmpsb
cmpsl
add
pop
pop
mov
rcr
inc
shlb
not
pop
iret
and
and
xchg
stos
imull
cmp
ja
mov
mov
out
adc
test
cmp
push
or
sub
repz
and
sbbb
jecxz
inc
lret
leave
loop
mov
xchg
mov
insl
imull
dec
mov
fs
lcall
fidivl
mov
enter
ja
dec
mov
lock
movl
mull
dec
out
push
cwtl
bound
jle
mov
cmp
fcmovu
lea
mov
xor
adc
lods
pop
arpl
adc
sahf
inc
xor
and
push
jae
in
out
cmpsl
adc
and
fs
icebp
and
cld
pop
jbe
inc
lock
pop
andl
aad
movsl
clc
push
pop
insb
aaa
mov
data16
int
jo
jo
cwtl
push
jbe
mov
in
adc
or
dec
in
add
xor
test
out
shrl
les
dec
mul
das
xchg
xor
jns
cmc
cmp
pop
adc
add
inc
mov
cs
outsl
nop
push
xor
mov
mov
add
pop
adc
cmpsb
sub
push
stos
cmp
cmp
ficoms
push
push
stc
jb
mov
mov
push
mov
pop
mov
test
cmc
inc
enter
push
jb
addl
out
mov
ror
pop
add
adcb
jae
jbe
rcrl
sub
dec
popf
cmpsb
mov
fcomps
nop
xor
adc
inc
jmp
in
adc
clc
adc
sti
out
jmp
fs
cmp
jl
sub
mov
cs
mov
pop
loope
pushf
xchg
lahf
aad
ret
push
in
insb
fnstcw
sbb
ja
fwait
sahf
lret
add
add
scas
jns
mov
adc
xchg
lea
in
jnp
ds
mov
xchg
and
push
pop
test
sub
mov
mov
aaa
shlb
pop
and
jne
xchg
aad
add
cmp
loopne
adcl
mov
movsb
jo
mov
lods
data16
iret
lcall
lock
fistl
push
sarl
lret
dec
mov
add
sbb
or
mov
pop
or
cltd
sahf
repnz
std
insb
xchg
inc
in
cwtl
loopne
ja
add
or
or
mov
xor
out
lds
push
add
loop
shrl
mov
insb
fwait
daa
add
adc
pop
and
insb
jp
mov
cmp
inc
pop
int
lods
mov
dec
push
dec
pop
xor
jbe
loopne
repnz
js
sbb
outsb
push
mov
inc
test
sbb
adc
cmp
pop
leave
pop
or
xor
dec
cltd
mov
mov
les
int3
xor
daa
sbb
adc
dec
push
mov
data16
pop
bound
arpl
sbb
in
popa
jp
rcrl
stc
das
out
fnsave
mov
xchg
aas
fs
out
int
roll
aam
insb
xor
mov
push
inc
mov
iret
fstps
sti
jle
mov
mov
popf
pop
push
lahf
ret
pop
out
in
mov
xlat
lcall
arpl
fs
pop
sub
mov
push
or
frstor
nop
test
mov
xlat
fidivrl
cmp
push
ret
ja
jnp
sub
in
inc
aaa
push
dec
std
popa
rolb
repz
cmpsb
ja
ds
jbe
push
into
repnz
sar
into
movsb
xchg
arpl
mov
inc
xor
xchg
outsl
mov
dec
in
clc
or
mov
addb
test
mov
xchg
adc
mov
fcoms
and
jmp
mov
sbb
rcrl
cmp
mov
and
stos
mov
ud2
mov
add
inc
shl
fmuls
push
mov
or
decl
jae
dec
stc
loop
arpl
es
shrb
adc
push
pop
test
stos
rorl
push
cmp
aaa
mov
icebp
movsl
pushf
imul
jb
cmp
cmp
adc
ficomps
gs
xchg
insb
jne
push
imul
fdivr
test
push
inc
add
movsl
fcoml
push
nop
adc
pop
stc
cmp
loope
fldenv
ret
cmc
inc
out
mov
add
add
das
push
xor
mov
in
pop
test
inc
dec
jmp
xchg
adc
push
rorl
orb
sub
xor
mov
mov
out
jns
or
xor
aad
mov
or
add
aam
or
mov
in
xor
xor
outsl
xchg
mov
jnp
push
dec
insl
fnstsw
into
mov
cmpsl
add
add
sti
aas
mov
out
loopne
jmp
inc
ret
jne
test
jb
push
out
adc
push
mov
push
push
jg
les
pop
incb
inc
repz
cmc
scas
push
call
data16
sbb
xor
rcl
dec
and
dec
cmc
cwtl
xchg
add
ljmp
dec
xor
pusha
xchg
cwtl
repnz
mov
xchg
pop
pop
stos
stos
aaa
push
add
pop
and
loope
fwait
dec
inc
mov
xchg
mov
dec
hlt
inc
es
push
pop
aas
ss
xchg
jae
je
jmp
jns
lcall
xchg
and
out
iret
ficomps
jmp
jae
cmp
scas
jmp
sub
loopne
jp
notl
movsb
jb
xlat
imul
pushf
cmp
mov
xchg
outsb
icebp
cmpsl
adc
stc
repnz
subl
jle
stos
mov
inc
xchg
xchg
jecxz
mov
repnz
jmp
shrl
or
jmp
pop
sbb
cs
cmpsl
arpl
xchg
mov
gs
aas
dec
fsubrs
cmpsl
mov
into
das
ret
scas
adc
idivl
fldl
xchg
int
mov
stos
jg
sub
push
adc
mov
or
rcll
push
push
jg
call
fnsave
adc
test
jp
mov
and
dec
pop
ror
lods
add
or
rorl
sbb
cmp
ja
loop
pop
push
xchg
sarb
sbb
rorl
mov
jnp
mov
mov
sarb
mov
push
cmp
out
xor
ljmp
and
sub
mov
cwtl
in
sub
mov
dec
mov
sbb
in
mov
mov
adc
xlat
fimull
fldl
jle
mov
call
shrb
add
sbb
jmp
mov
cmp
stos
sbb
jge
pop
ds
cltd
xor
test
fwait
mov
andl
mov
pop
lock
add
mov
and
inc
fbstp
jg
outsl
xchg
add
xchg
and
pop
test
fisubl
xor
sti
dec
in
mov
jle
xchg
sub
xchg
es
loop
add
movswl
jo
inc
jmp
mov
sbb
inc
cmp
mov
loopne
ret
mov
out
xor
fstpl
adc
insl
sbb
cld
push
dec
pop
test
dec
test
pop
loopne
mov
inc
dec
out
pop
dec
xchg
pop
mov
mov
test
jmp
mov
xlat
mov
jb
dec
rcrb
add
sbb
cld
jg
and
cmc
and
sbbb
fwait
pop
mov
fldl
iret
jb
jne
add
sbb
daa
repz
dec
or
inc
loop
add
cld
add
adc
subb
lret
cmpsb
jne
sarl
popf
inc
lods
mov
jmp
mov
rolb
hlt
dec
sbb
mov
dec
jnp
sub
push
mov
stc
sbb
xchg
inc
scas
push
movsb
lret
test
add
inc
out
mov
fstpt
ljmp
adc
mov
nop
push
or
mov
pop
ss
stos
fs
int3
test
idivl
sarb
xchg
jp
mov
mov
and
mov
mov
cmp
xchg
mov
or
dec
sbb
loop
lret
lea
punpcklwd
jo
adc
vmovdqa
xor
sub
imul
rcl
xchg
mov
adc
ror
push
repz
cld
cmp
aaa
push
push
jno
movsl
xor
xor
fiadds
in
test
mov
jns
ds
jo
pop
dec
inc
out
out
mov
cmp
ret
je
aaa
jge
mov
rcrl
pop
lcall
ret
mov
daa
push
xchg
cltd
push
cmpb
or
mov
dec
and
mov
stc
inc
sub
sub
cmp
fwait
jb
mov
inc
outsl
stos
pop
or
jns
sub
fimull
insb
adc
add
cli
jo
sub
mov
pop
in
mov
cmp
sbb
in
outsb
fcoms
mov
mov
jo
mov
lods
jmp
lret
daa
popf
push
stos
daa
nop
stc
movsl
add
aas
into
int3
add
in
adc
mov
inc
pop
dec
mov
adc
loope
popf
jbe
arpl
inc
bound
int3
xchg
push
adc
nop
jle
sbb
jo
jmp
lods
gs
cmpsl
mov
dec
adc
dec
js
stos
test
shl
movsl
pop
jnp
scas
in
cmpl
mov
mov
jg
pop
xchg
jl
mov
test
or
fsts
lds
ds
adc
cmp
ret
mov
fists
lea
loopne
jns
inc
fldl
adc
xchg
cmpsb
mov
fistpll
or
hlt
add
xchg
cli
xchg
xor
sub
mov
adc
add
jbe
insl
jg
in
addr16
mov
mov
mov
dec
ja
or
xor
pop
lods
push
movsb
mov
pop
jo
mov
dec
xor
or
mov
adc
stos
mov
fldcw
js
push
dec
mov
sub
mov
cmpsb
aam
or
mov
movsl
lret
mov
fs
jae
mov
std
mov
jnp
mov
inc
insl
or
int3
fs
cwtl
mov
loop
ret
push
add
mov
pop
clc
hlt
call
int3
in
fcoml
out
lds
lret
lods
xchg
pop
pop
or
adc
push
xchg
cs
sbb
in
clc
imul
aas
sub
out
test
subl
xchg
in
movsl
shrl
mov
mov
ja
mov
pusha
stos
ds
push
sahf
adc
mov
dec
lret
sbb
ret
dec
bound
sbb
sub
or
imul
cmp
rclb
dec
pusha
xor
mov
or
out
repz
fisubs
lds
xchg
mov
cmpsb
test
cmp
lahf
test
mov
lods
jns
idivl
shrl
cmp
or
outsl
imul
dec
mov
sahf
adc
and
sbb
xor
mov
inc
mov
aad
jle
cld
jg
push
lcall
push
fistpl
das
fildl
sar
std
mov
xor
and
gs
mov
add
andl
adcb
stos
hlt
in
sub
cld
sbb
dec
call
inc
pusha
test
outsb
ror
mov
xchg
push
out
pop
jns
mov
cli
xorb
sub
cmpsl
rol
mov
test
lea
outsl
hlt
cs
repz
push
je,pt
push
testb
adc
xchg
je
or
push
add
hlt
gs
mov
sbb
testb
test
dec
xchg
sub
sub
shrl
aam
into
pop
push
inc
push
lea
leave
cmpsl
jae
lea
in
cld
cli
sub
sar
pop
mul
scas
orl
repz
add
sbb
jns
scas
hlt
sbb
andb
jae
ds
sbb
xor
hlt
mov
aaa
aaa
mov
adc
aad
sbb
sahf
sub
out
bound
jge
cmpsb
push
enter
ret
je
pop
lds
cmp
pop
fisubs
add
repz
push
in
imul
imul
push
cwtl
adc
mov
insl
mov
or
popa
into
jnp
test
mov
pop
js
lods
repnz
stos
mov
loop
mov
ljmp
ret
push
adc
mov
iret
loope
loopne
aas
rclb
xorl
xchg
enter
pop
add
int
sbb
addr16
xlat
adc
repnz
fs
xor
call
push
or
xchg
lds
jnp
in
sub
lea
sbb
sbb
iret
repz
xor
inc
lret
mov
dec
mov
rcrb
imul
jg
cmp
push
test
stos
add
sub
push
dec
into
xchg
mov
lea
loopne
int
cmp
mov
mov
and
fadds
inc
and
and
fcomps
inc
pusha
into
push
pop
dec
pop
mov
pushf
jge
mov
adc
shll
mov
jmp
xchg
mov
je
int
sbb
scas
sub
dec
fwait
pop
mov
pusha
movsb
pop
test
fbld
xor
push
sbb
xor
jg
xor
scas
lahf
adc
push
jg,pt
repz
pop
inc
xlat
xchg
jae
addr16
pop
push
push
ficomps
mov
popf
mov
xor
icebp
pop
js
mov
aam
fists
mov
mov
lea
sbb
nop
mov
mov
mov
fsubrs
push
jne
fistpll
adc
divl
pop
sbb
les
push
push
es
mov
mov
lcall
inc
pop
mov
sub
inc
in
jge
jne
adc
mov
inc
mov
mov
sarl
sbb
lea
push
jle
push
cs
aam
xor
or
scas
ljmp
xchg
jle
sbb
rclb
dec
fisubrs
cli
popf
and
and
sbb
and
iret
stos
xor
mov
ljmp
gs
daa
imul
enter
out
or
add
adc
bound
sbb
cltd
inc
sarb
xor
fdivl
dec
enter
scas
mov
lods
xchg
xchg
push
mov
insl
stc
popa
xchg
xchg
xchg
push
mov
gs
scas
jle
xchg
cmpsl
pop
mov
fidivrs
jl
fists
out
lea
sbb
mov
sub
test
push
jp
dec
test
sbb
mov
lret
ds
lds
ljmp
popa
lods
lahf
cmc
fbld
icebp
mulb
or
out
or
clc
add
je
sbb
pop
push
stos
popf
cltd
adc
mov
and
sbb
sbb
adc
fiadds
std
std
xor
or
jnp
ljmp
inc
insl
int
arpl
cld
aas
cmp
xor
insb
add
movsl
das
roll
inc
add
fdivrp
out
push
in
xorl
cld
fs
mov
addr16
add
shll
or
push
push
cmc
sub
dec
rolb
xchg
dec
cwtl
pop
cmp
or
pop
mov
sub
ret
movsl
inc
lds
je
lret
mov
popf
test
push
nop
pop
lods
sbb
sar
dec
xchg
outsl
cmp
addl
loop
inc
push
enter
add
pop
dec
call
addr16
cwtl
lea
clc
xlat
jne
push
sbb
popf
xor
and
pop
test
mov
sbb
push
lea
jg
stos
out
xchg
push
add
adc
jge
jne
jae
mov
cmp
loopne
mov
test
pusha
xchg
jl
aas
shrb
clc
or
adc
int
push
xor
into
les
popa
imull
std
or
and
insb
shrl
add
in
test
push
movsl
mov
mov
stc
popa
or
mov
fcomps
jle
stc
sbb
xorl
xor
jg
jecxz
ljmp
add
clc
mov
and
sub
cmpsb
jb
mov
ljmp
dec
les
out
mov
xlat
xor
pop
lock
pushf
sbb
adcb
fs
jne
push
mov
mov
dec
jne
jge
cmp
xchg
loopne
pop
add
aas
bound
les
roll
dec
mov
test
mov
sbb
loopne
xchg
jns
test
sub
pop
adc
sbb
or
repnz
out
fimull
pop
insb
shl
sbb
loop
out
scas
jmp
jle
lret
out
imulb
adc
imul
das
xor
mov
mov
subl
sbb
adc
mov
imul
sahf
xchg
ljmp
into
adcl
faddl
sub
loop
pop
pop
pop
jo
inc
sbb
les
rcll
popa
xchg
push
or
enter
sub
sarl
and
nop
addr16
push
mov
add
push
js
xlat
push
mov
ret
jae
xchg
mov
lock
insb
mov
inc
add
and
icebp
mov
mov
mov
sbb
sbb
fimull
push
jno
lcall
call
aaa
add
adc
jge
or
stc
lret
stos
loopne
mov
xlat
fiadds
push
dec
insl
inc
or
pop
js
loope
lcall
rorl
imul
arpl
mov
mov
fistps
sbb
cltd
add
test
shr
mov
outsb
stos
out
add
sbb
push
shll
push
sub
out
insb
pop
cs
sub
cli
mov
and
add
lret
pop
into
xlat
jp
inc
add
pop
into
rcr
scas
mov
std
insl
cli
std
xchg
jl
fcoms
push
cmc
adc
fwait
jge
das
dec
andb
fbstp
dec
daa
xor
ret
fdivrl
stos
fistpll
pavgw
ret
lret
push
paddd
cltd
mov
jne
add
mov
cltd
mov
popa
push
pop
push
mov
inc
mov
ljmp
cmp
adc
mov
dec
rcrb
push
push
pop
cwtl
xor
mov
or
sbb
cltd
out
sub
or
fldcw
cmp
rcrl
xchg
xor
push
cmp
or
dec
stc
js
jg
lock
jbe
leave
nop
ret
sbb
loop
or
ljmp
lea
lret
push
jbe
scas
test
inc
inc
mov
loop
inc
jmp
rcrl
pop
xor
test
push
xchg
ds
pop
pop
jae
inc
pop
test
aam
movsb
sbb
add
inc
push
ljmp
lahf
fwait
push
add
and
sbb
test
and
popl
mov
je
mov
inc
jecxz
fsubl
xchg
rcrl
int3
andb
sub
les
jecxz
sbb
cmc
subb
ret
cmp
mov
jl
adc
mov
dec
and
icebp
nop
aad
push
addr16
pusha
jle
out
pop
dec
and
lds
mov
lock
jne
addl
lcall
movsl
pcmpeqw
xor
add
mov
fwait
sbb
cmp
fnsave
sarb
hlt
jp
add
mov
pop
xor
cmp
test
cli
mov
outsl
loopne
mov
push
enter
sub
idivb
mov
push
push
out
cmpb
dec
push
test
sub
or
mov
cwtl
sbb
pop
add
out
gs
cmc
or
and
cmp
insb
fs
mov
pop
loope
int3
pop
xchg
jno
test
mov
and
pop
and
sti
jb
inc
fwait
mov
mov
pop
fsubrp
mov
cs
aam
int3
aas
in
push
jb
and
fsubl
pushf
jbe
cltd
icebp
aad
hlt
lds
and
inc
pop
cmp
dec
inc
test
addr16
out
and
js
inc
lahf
pop
fildl
lods
xchg
push
mov
jae
rclb
cmp
jle
ret
cld
and
pop
aas
push
stos
decb
hlt
jmp
sbb
sbb
push
sub
sbb
data16
pop
aaa
in
subb
dec
xchg
imul
out
stc
inc
rcll
mov
notl
jbe
push
mov
mov
int3
push
addr16
push
push
shr
cmp
ja
test
test
lahf
or
cmp
jnp
movsl
xchg
push
mov
adc
inc
in
test
das
pusha
fs
lods
es
mov
mov
cmp
into
mov
stos
shll
adc
xor
fiadds
iret
mov
idiv
or
std
cld
mov
pushf
push
mov
in
js
dec
add
cmpb
adc
test
xor
pop
gs
fmuls
push
sub
pushf
mov
stos
lahf
fwait
mov
sub
je
fs
lds
arpl
rcrb
cmc
add
pop
cmp
leave
call
mov
inc
mov
aas
sarl
sbb
bound
mov
mov
pop
dec
jle
cli
sub
scas
aas
pop
hlt
stos
stos
sbb
stos
in
mulb
push
adc
pushf
sbb
dec
push
cld
adc
xchg
pop
jnp
jno
nop
jo
inc
bound
sbb
in
sub
dec
lea
inc
subb
sti
pop
jno
push
pop
xor
pop
xor
faddl
mov
fimull
inc
stc
xlat
sbb
mov
mov
mov
mov
sti
pop
decb
dec
icebp
aaa
cmp
rol
aad
js
iret
add
jnp
xor
sub
ljmp
mov
xor
and
cmp
hlt
push
loopne
stc
mov
in
mov
cmpsb
cwtl
mov
andb
push
jae
push
pop
push
scas
into
dec
lret
or
xchg
xor
or
lcall
out
mov
movsl
shll
inc
mov
lods
incl
mov
add
cmp
enter
jmp
movsb
stos
rorl
jp
sbb
sarb
cmpsl
lds
cs
hlt
mov
ficoml
jnp
or
jmp
add
fsts
ss
enter
test
jp
cwtl
out
lcall
jno
fcompl
mov
jo
xor
dec
pop
lcall
jle
mov
jecxz
xor
lret
andb
mov
lods
loopne
jge
das
insl
fidivrs
mov
mov
xlat
rclb
sub
and
jmp
mov
pop
mov
xchg
jne
sbbb
repz
xor
lahf
shll
mov
cmp
mov
mov
ret
test
mov
mov
dec
in
mov
stc
xchg
ss
movsl
pop
iret
pop
push
pop
sarl
inc
loope
jmp
inc
std
in
sbb
mov
loope
mov
push
xchg
xchg
sbb
and
lods
movsl
mov
adc
mov
into
mov
sub
mov
stc
or
les
inc
pop
xor
and
jp
div
pusha
cmc
into
rorl
pop
pop
add
xchg
rclb
and
insb
ret
xchg
test
pop
rclb
mov
cwtl
jmp
mov
dec
push
enter
dec
jge
xor
inc
arpl
pop
hlt
fs
xor
adc
push
pop
lods
fldcw
push
xchg
and
and
fs
loop
mov
add
xchg
aaa
dec
mov
into
loopne
lcall
and
and
cmp
cmp
xchg
jecxz
mov
int3
sbb
jb
das
sbb
jle
imull
cmc
enter
stc
adc
stc
jmp
push
inc
xlat
xor
mov
jge
pusha
out
push
or
mov
popa
popa
bswap
je
and
jmp
mov
loopne
imull
repz
imul
jns
lea
inc
hlt
sahf
push
inc
ljmp
cmp
mov
xchg
mov
repnz
xchg
or
push
push
arpl
andb
mov
rcr
or
push
gs
in
out
inc
idiv
nop
bnd
int
xlat
mov
movl
sbb
and
xchg
hlt
movb
sub
mov
xlat
mov
and
lods
mov
jg
loope
push
inc
mov
mov
mov
push
pop
loope
scas
popa
jecxz
out
clc
adc
sbbb
dec
into
sub
nop
outsl
inc
and
adc
pop
pop
pop
cld
mov
adc
xchg
dec
movsl
fs
inc
int
pop
int3
add
test
xor
lcall
or
lock
adc
stos
jns
pop
outsb
fwait
mov
xchg
sub
fsqrt
xchg
cmc
add
dec
arpl
movb
jae
rcrl
dec
outsl
decl
push
jl
fwait
pusha
cmp
std
adc
push
dec
push
lret
sbb
sub
push
inc
icebp
xchg
cmp
fdivrl
and
mov
jns
rcrl
fwait
pop
hlt
das
lea
adc
jne
aad
sub
and
pop
xchg
rcrl
xor
test
lcall
ja
inc
stos
push
paddw
fs
fs
les
mov
dec
xor
jl
movsb
in
and
and
dec
cmp
xor
out
mov
sub
dec
in
in
call
test
mov
enter
mov
dec
roll
mov
int
add
add
mov
in
inc
test
ss
iret
lods
push
jle
mov
xchg
inc
jo
movsl
cmpsb
dec
lcall
xchg
jbe
sti
icebp
fmulp
test
scas
je
add
xchg
cltd
mov
leave
std
sbb
add
inc
xchg
gs
push
shll
scas
push
push
test
and
xlat
fnstsw
ljmp
mov
xchg
cwtl
ss
sarb
jl
fmull
out
scas
jo
dec
push
adcb
xor
inc
jnp
jecxz
movsb
lods
jle
mov
jns
orb
clc
ret
cwtl
movsb
mov
xchg
idiv
out
jae
scas
inc
addr16
mov
enter
out
push
inc
mov
sti
jge
out
push
ds
dec
inc
enter
sbb
jbe
in
add
sbb
pop
push
cmp
or
or
repz
pop
jg
les
cltd
pop
insl
xchg
cmp
popf
sbb
cld
mov
lret
fwait
pop
mov
inc
dec
pop
pop
mov
sub
popf
scas
jp
and
jge
mov
test
aaa
imul
mov
in
imul
sbbl
dec
outsb
repnz
pop
cmp
call
cld
cmp
stos
lret
jo
mov
mov
iret
clc
je
int3
jp
mov
outsb
xor
aas
enter
jecxz
or
cmpsl
nop
pop
xchg
into
mov
shlb
outsb
push
lods
dec
divl
sar
dec
sbb
in
or
push
mov
stos
cs
out
mov
cmp
lret
dec
test
pop
and
loop
jmp
stos
int3
and
jp
cwtl
int
cltd
pop
sub
and
inc
outsb
pop
frstpm(287
pop
fsubr
xor
pop
inc
xor
rolb
mov
mov
cmp
mov
dec
inc
lea
pop
mov
and
in
stos
int3
rclb
xchg
dec
mov
ficoml
pop
popf
push
scas
jo
das
jp
out
movsl
or
test
stos
pop
cld
arpl
int3
inc
pop
cmc
inc
imul
push
in
nop
xchg
fsts
cmp
iret
push
or
sbb
or
icebp
movsl
cmp
sub
sbb
cs
shrb
jb
dec
or
or
cmc
ljmp
sub
pop
data16
ret
test
jmp
mov
xlat
adc
repnz
and
lock
adc
pop
testl
mov
pop
mov
adc
or
inc
dec
and
aad
lahf
sbb
or
mov
or
or
mov
test
xor
push
push
jnp
or
push
addr16
mov
pop
jge
stos
xchg
imul
scas
arpl
sbb
sbb
push
pop
dec
outsb
dec
jnp
ror
cmp
inc
lea
faddl
xchg
mov
push
fstl
ljmp
pop
and
fcomps
cmp
adc
push
adc
psllw
in
xchg
sbb
lea
shrl
dec
jns
and
adc
push
and
lret
dec
and
push
mov
imul
cmp
mov
ljmp
cmpsb
sub
mov
lahf
cli
and
xchg
jge
cmp
fistpl
sahf
mov
pop
and
movsl
decb
out
jge
mov
mov
pusha
fwait
cmc
mov
cld
add
and
in
lret
imul
pop
xchg
addb
nop
mov
xchg
sbbl
inc
icebp
or
scas
loope
sbb
popf
xor
fidivl
lods
or
outsb
decb
sbb
sub
sbb
outsl
pop
push
pop
jg
lahf
mov
out
pop
lds
lcall
xchg
mov
and
imul
add
subl
xor
mov
je
push
push
iret
cmp
or
mov
sub
xor
arpl
mov
insl
dec
cmpsb
icebp
cmp
pop
test
iret
lods
lret
mov
test
cmp
das
adc
inc
xlat
xor
dec
jnp
xchg
mov
iret
into
pop
test
sub
nop
fdivrl
inc
sbb
inc
enter
mov
inc
outsb
pushf
mov
xchg
fsubrl
push
insb
es
dec
adc
into
push
mov
inc
jae
les
jg
stos
lcall
sbb
pop
fimuls
sub
lods
pop
loopne
data16
call
scas
sbb
add
int
cmp
or
jbe
cld
in
push
icebp
and
mov
loopne
fwait
lods
pop
enter
mov
jae
jle
imull
adc
insb
adc
lds
inc
push
mov
sub
fistl
mov
or
inc
cmp
sub
flds
jbe
add
icebp
ret
cmpsl
pop
lcall
pusha
mov
cmpsl
sub
mov
cmpb
call
xor
and
iret
pop
add
push
stc
movsb
lea
ret
imul
lods
imul
xchg
loopne
mov
adc
jg
jae
xchg
jae
int
dec
mov
or
stos
cmp
cmc
push
push
mov
pop
mov
shlb
mov
lea
imul
sbb
aam
aad
ds
leave
sti
stc
sahf
xchg
popf
jge
out
sub
jns
cmp
imulb
push
pop
cmp
fsts
psllw
pop
xchg
or
icebp
mov
scas
mov
or
or
pop
mov
mov
sbb
mov
out
imul
add
cs
xor
fcoms
out
mov
jg
cmp
pop
inc
arpl
cmc
sbb
fsubrl
cs
lcall
ficomps
mov
std
jle
jg
xor
cmp
mov
sub
in
mov
pushf
push
fidivrl
mov
arpl
inc
xlat
popf
cmpsl
rorl
jmp
jno
pop
comiss
movsl
pop
in
cmp
gs
testl
sar
pop
dec
dec
xchg
sti
pop
push
inc
test
jbe
cmp
push
imul
jno
or
ja
lahf
add
out
out
xchg
and
inc
jmp
pop
mov
mov
push
push
add
enter
jo
pop
clc
lods
jo
cmpb
push
mov
mov
cmp
dec
xor
cmpsl
cmp
mov
cmp
jmp
repnz
jl
xchg
fsubl
mov
sub
int
sti
mov
insl
jg
add
pushl
rclb
mov
mov
loopne
sub
test
sbbl
nop
cmp
arpl
sub
in
pop
icebp
lods
fs
and
mov
in
outsl
adc
dec
push
adc
mov
test
ljmp
gs
outsl
sti
outsb
mov
sub
fnstenv
and
movsb
jnp
fnstenv
adc
pop
je
mov
push
stc
out
mov
mov
and
pop
add
adc
xlat
es
dec
xchg
pop
xchg
xchg
jnp
ret
xchg
dec
adc
and
push
xor
aaa
sbb
or
out
js
stos
mov
mov
imulb
mov
in
jp
int
xchg
push
out
and
mov
hlt
outsb
test
dec
xor
cmpsb
xchg
fucomp
adc
loope
das
sbb
sbb
int3
mov
lret
mov
gs
xchg
inc
add
cmp
and
inc
adc
add
dec
ss
aas
push
out
jle
and
inc
cwtl
mov
xchg
rolb
add
dec
decb
sub
xor
sub
push
lds
cmp
imul
testb
push
fnstcw
cmp
mov
mov
fsts
push
cli
in
pop
jmp
adcl
imul
fcoms
aaa
adc
sbb
xchg
rcll
jp
mov
push
fiadds
mov
fldenv
mov
aam
loope
push
or
mov
sub
ja
mov
add
pushf
inc
addl
xchg
movsb
test
lock
ljmp
dec
pusha
push
lock
bound
and
test
mov
push
inc
movsl
scas
cmc
inc
jg
ljmp
push
in
movsb
pushf
mov
pop
mov
out
jge
xlat
cmp
dec
and
aas
stos
outsb
lods
jb
xor
scas
inc
ss
ljmpw
loopne
inc
jp
fidivrs
and
loopne
imul
sahf
adc
out
mov
mov
mov
mov
out
imul
add
mov
adc
test
pop
xchg
mov
dec
fisttpll
in
cmc
pop
aad
popf
add
mov
test
sub
test
add
imul
aaa
in
cmp
mov
cmpl
mov
pop
and
xor
fstl
adc
and
or
mov
mov
push
sub
sbb
xchg
js
jnp
xor
jns
sti
hlt
inc
ret
pop
mov
xchg
mov
testb
movsl
aas
stos
sub
push
ret
add
cmpb
mov
pop
lods
inc
cmp
or
imul
mov
je
clc
sbb
mov
adc
ds
sahf
scas
loope
stos
int
aaa
cmp
xchg
push
xor
in
mov
aaa
ret
adc
std
call
loopne
xchg
push
and
and
xchg
push
js
orb
inc
out
movsl
fadds
int
bound
pop
pop
orl
push
mov
jmp
mov
outsl
push
es
je
out
push
nop
xchg
and
jecxz
pop
jne
dec
pop
into
dec
adc
mov
repnz
shll
jns
mov
repnz
or
add
or
adc
mov
push
mov
xor
sbb
add
adc
outsl
mov
filds
arpl
inc
dec
out
and
outsb
fstpt
insl
xchg
xor
pop
mov
rcll
sar
cmpsl
xlat
dec
fwait
jne
sbb
sbbl
mov
push
push
fldenv
add
divl
daa
mov
mov
cld
cmp
inc
inc
inc
jb
les
push
ret
add
mov
and
mov
je
xchg
jns
jecxz
sub
cmp
mov
pop
das
outsb
test
sub
inc
imul
push
cmpl
divl
scas
mov
cld
jecxz
lods
adc
popa
movsl
xchg
aad
loopne
pop
int
cmc
dec
ret
inc
push
inc
js
enter
imul
sbbl
xchg
xor
jbe
lcall
mov
lds
icebp
ljmp
imul
jb
aas
test
shlb
mov
sub
repz
pop
sub
add
int3
pop
inc
sub
stos
cmc
sti
jmp
mov
mov
fwait
adc
into
clc
leave
lods
dec
out
outsl
cli
inc
cmc
outsb
push
sbb
sti
add
lret
cmpsl
push
mov
stos
or
jne
and
leave
loop
dec
test
jnp
lret
adc
fs
sbb
lret
mov
dec
jmp
push
sub
clc
dec
xchg
clc
xor
inc
insl
adc
dec
xorb
xor
add
loopne
in
push
push
push
sub
adc
jge
pop
cmp
jo
adc
mov
ja
cli
dec
sub
adc
adc
inc
ss
dec
pop
push
push
nop
sbb
mov
and
pop
xchg
outsl
daa
inc
sub
xor
test
loope
insb
pop
pushf
faddl
int
add
imul
loop
ds
rcll
es
mov
xchg
mov
shl
adc
and
pop
pop
mov
and
cmp
lds
and
inc
xor
jne
lock
je
jmp
lds
adc
adcb
std
push
or
inc
insb
std
mov
add
cltd
int
in
mov
sahf
lea
cmp
imul
loope
arpl
mov
or
push
lock
aas
fwait
addb
stc
test
cmpsl
sti
cmpsb
imul
es
aad
dec
fidivrl
and
mov
xchg
loop
in
lock
push
jne
sub
xor
fisubl
mov
fwait
cmp
bound
mov
cmpsb
dec
out
js
vpaddq
ret
xchg
xchg
cmp
incl
nop
sbb
mov
insl
and
inc
sbb
cmpsl
xor
add
out
mov
pop
orb
push
adc
in
add
stos
stos
call
pop
lds
adc
push
push
pop
andl
or
cmp
lea
clc
push
mov
sarb
adcb
loopne
xchg
out
pusha
and
and
ror
popa
mov
jae
adc
in
or
mov
and
add
dec
ret
add
imul
cmpsl
outsl
add
pop
jb
cmp
lret
arpl
sub
and
mov
fs
xor
mov
lock
lret
in
adc
aam
cli
aaa
pop
dec
std
lods
push
sub
push
in
jmp
sti
push
sub
dec
fcmovbe
push
sarb
shll
inc
movsl
daa
repz
leave
fisubs
push
jle
in
mov
mov
out
inc
mov
lods
push
out
adc
cmpsb
mov
jne
ds
mov
je
popa
out
insl
std
out
je
outsb
jb
insb
sti
push
out
sub
cmc
push
jns
xchg
sub
push
add
mov
repnz
sub
push
push
sub
mulb
test
xchg
xor
add
sub
out
push
ret
inc
xchg
sar
cwtl
loope
inc
insb
or
dec
arpl
add
outsl
xchg
aad
mov
mov
notl
mov
outsl
fnstenv
cmc
fsubr
mov
loope
and
sar
shl
aaa
xchg
insb
outsb
les
mov
and
std
xor
dec
sub
jnp
adc
dec
jge
xchg
pop
daa
adc
fsubr
xor
mov
addr16
add
jecxz
out
jno
adc
jno
jg
dec
ljmp
imul
loop
xchg
pop
mov
imul
ja
or
int
div
push
fwait
sub
test
jl
lods
and
inc
test
sbb
fildl
stos
mov
ficoml
idivl
in
cmp
mov
mov
jmp
dec
cmp
mov
add
leave
pushf
rolb
xchg
add
mov
cmp
mov
clc
push
notl
pop
add
idivl
mov
movsl
push
add
das
mov
pop
jl
and
mov
ficompl
mov
add
sbb
test
jae
push
sti
cmp
mov
cli
sarl
mov
jmp
jae
out
adc
shl
fldcw
adc
je
imulb
ljmp
or
pop
mov
scas
cmp
mov
in
cmpsl
movsb
test
jge
push
cmpsb
subl
aam
int3
lods
sbb
fwait
jg
push
xchg
jns
xor
mov
pop
test
int
pop
adc
and
adc
clc
push
mov
cs
std
addr16
inc
in
pop
test
popl
sub
pushl
orb
les
jne
cmp
pop
out
dec
mov
mov
mov
into
mov
cmp
mov
xchg
pop
and
repnz
jno
dec
outsl
std
ffreep
or
inc
xchg
pop
or
and
adc
sbb
mov
push
xchg
mov
iret
jno
jle
pop
add
adc
cmp
lea
push
fucomp
jo
dec
mov
push
add
ja
aad
mov
popa
inc
loop
push
cmc
dec
out
dec
and
and
mov
sub
mov
arpl
push
adc
js
mov
cmpsl
pop
out
xchg
shlb
shrl
pop
dec
xchg
sbb
xchg
int
push
jmp
orb
sub
push
or
dec
sbb
cltd
shl
add
movmskps
jne
sbb
pop
in
mov
test
pushf
test
sbb
adc
add
call
cmpsb
ss
and
arpl
sub
pop
cli
xor
adc
add
ud2
out
int
pextrw
xchg
and
cmp
adc
sarb
dec
and
fsubrl
mov
mov
xor
lds
mov
aaa
aas
shll
jp
enter
cvttps2pi
pcmpgtd
cld
mov
mov
and
add
inc
std
nop
xchg
in
or
clc
or
pushf
andb
jb
pop
ror
inc
lret
dec
mov
and
jg
sarl
mov
in
and
xchg
jne
adc
mov
lods
insl
mul
mov
push
out
test
sbb
ja
test
fdivrs
test
jae
jns
fwait
arpl
lds
and
dec
mov
imul
cmp
mov
sarb
outsl
fstpt
mov
inc
jb
lret
ret
xlat
push
movsb
dec
inc
pusha
subb
xchg
pop
xchg
aaa
flds
pop
cmp
lods
dec
out
out
sub
inc
lods
loop
dec
call
ficompl
push
mov
std
jno
inc
or
mov
fildl
xor
pop
pop
lods
lock
sub
or
mov
xchg
in
lahf
rol
mov
pushf
lret
xor
jne
aad
xchg
in
jmp
arpl
or
dec
aaa
pop
in
idivl
aas
cmp
int3
pop
cmp
push
fdivrl
arpl
leave
popf
insl
mov
dec
dec
or
loope
jns
mov
notb
jne
push
mov
fisubrs
xchg
lea
pushl
mov
fildl
stos
or
out
sbb
sbb
idivl
in
pushf
or
xor
push
lea
adc
pop
ret
mov
adcl
sahf
push
pop
into
sub
std
ss
push
out
jbe
push
or
xor
push
insb
add
cmc
push
call
stos
iret
ds
inc
mov
adc
cmp
sbb
lret
inc
sbb
and
or
rcll
cmpl
dec
or
push
lret
inc
jns
aas
mov
sbb
and
jle
inc
sbb
and
pop
scas
sbb
xchg
jl
or
iret
aam
dec
lahf
mov
cs
fwait
xchg
xor
add
add
data16
mov
loopne
push
repz
xchg
insb
cmp
sbb
out
jge
fistl
aam
es
out
fsts
mov
rclb
xchg
or
scas
cltd
add
jns
rcll
xchg
es
cmp
aas
xor
cmp
or
in
push
icebp
ja
aad
dec
lcall
adc
sbb
inc
flds
mov
cmp
cmp
push
popa
jmp
orb
jo
cmc
push
pop
or
xor
sbb
inc
jnp
inc
xor
and
push
xor
push
push
mov
inc
into
sub
xchg
and
in
inc
pop
xchg
jne
inc
mov
jno
mov
push
lods
hlt
sub
std
add
cmp
into
jno
inc
inc
lea
xchg
sub
xor
inc
aad
std
dec
jle
outsb
add
pop
in
rcrb
cli
dec
idiv
popa
int
fistl
rorb
xlat
push
ss
test
sub
jo
jo
pop
imul
sahf
mov
lds
mov
fcompl
mov
jg
xor
add
dec
adc
xor
jecxz
push
xor
add
fs
test
sub
adcb
add
das
daa
iret
jg
enter
mov
inc
in
scas
cmpsl
pop
sub
test
inc
je
xor
or
xchg
inc
ljmp
stc
stos
jnp
sub
ja,pt
roll
lock
insl
and
fwait
decl
sbb
dec
dec
jae
aad
imul
gs
icebp
mov
mov
cmpsl
dec
mov
es
mov
int
imul
add
in
hlt
push
and
fists
dec
bound
jns
mov
sbb
lds
add
push
mov
call
fcomps
ret
jmp
cmp
mov
push
xor
sbb
mov
imul
bnd
fsubl
sarl
jae
sub
cmpsb
mov
sti
sub
fwait
mov
hlt
pop
out
lea
pop
adc
add
test
and
stos
bound
xor
mov
arpl
and
inc
pop
mov
popf
gs
insl
mov
dec
scas
sahf
jge
dec
xor
jo
push
push
pop
mov
or
inc
test
negb
shll
mov
dec
fcmove
ret
add
xor
dec
pushf
xor
fildll
adc
adc
dec
insb
into
shr
jmp
mov
ret
fistps
push
mov
cwtl
mulb
push
mov
dec
mov
data16
in
xor
shrb
pop
arpl
adc
flds
xor
outsb
rorb
mov
cli
mov
pop
inc
sbb
test
adc
notb
and
insl
ljmp
gs
push
jnp
iret
dec
sbb
mov
lods
lock
push
arpl
aas
mov
cmp
jp
in
leave
addl
pushl
cmpsl
xor
inc
jae
cmp
jecxz
loop
push
insb
mov
and
popa
fdecstp
bound
adc
inc
divl
or
int
xchg
aas
inc
add
lret
inc
cli
sub
dec
ljmp
dec
imul
negl
mov
in
fidivs
adc
or
les
outsb
jp
dec
sbb
in
out
jne
xor
gs
inc
dec
inc
fwait
jl
mov
loop
dec
rcrl
or
cmpsl
push
pop
imul
shlb
pop
loope
inc
sub
add
or
ss
jae
xchg
cmpsb
mov
inc
in
mov
dec
loop
stc
stos
aam
outsl
mov
test
jmp
pop
jae
in
adc
cmpl
jns
and
mov
pusha
lret
insl
adc
scas
fcoml
mov
rclb
inc
ds
sub
mov
stos
xchg
and
outsb
push
jo
insl
and
stc
fnstsw
mov
cli
push
mov
pop
lret
adc
push
and
mov
into
add
xchg
sbb
les
mov
mov
pusha
insl
out
inc
mov
pushf
divb
cli
loope
enter
frstor
jge
sti
mov
in
xchg
dec
mov
adcl
cltd
dec
jmp
add
out
mov
dec
inc
int
lcall
xor
movsb
sbb
and
stos
sahf
outsl
adc
in
mov
in
test
bound
ds
fs
add
mov
sahf
xchg
fcoms
in
test
pop
shrb
pop
cli
xor
dec
mov
shl
out
push
jp
jl
and
jo
cs
ffreep
outsl
dec
mov
int
lcall
movsb
divb
adc
mov
sbb
arpl
stc
js
inc
xor
xchg
mov
push
xor
mov
lock
subb
pusha
pushf
mov
jne
mov
push
mov
clc
mov
sub
aaa
jmp
out
in
jns
inc
xchg
jl
mov
sub
into
popa
sub
sahf
and
and
stos
pop
ss
in
mov
or
int
cmp
mov
testl
call
adc
lret
mov
arpl
pop
mov
jne
xor
pop
inc
mov
jbe
cmp
cmp
mov
movsl
mov
cld
dec
stos
push
mov
rclb
mov
dec
fdivr
in
sbb
int
mov
jns
pxor
sahf
push
addl
leave
das
jae
cmpsl
in
cmp
jp
push
mov
inc
add
add
stos
clc
lea
xlat
inc
stos
sbb
pop
mov
adc
aas
fs
inc
mov
inc
mov
outsb
roll
cld
lods
xchg
in
ret
sbb
dec
add
mov
dec
loope
gs
inc
mov
pop
out
cltd
in
xor
fmuls
inc
push
or
aam
mov
imul
dec
loop
out
daa
cli
pop
mov
or
mov
lahf
pushf
jecxz
push
fcoml
ret
inc
call
out
pop
mov
sarl
and
ljmp
bound
inc
cmc
pop
aaa
sbb
mov
fidivs
sbb
dec
lock
stos
cli
lret
loopne
clc
dec
xor
test
cmp
shlb
aam
jp
xor
pop
dec
ja
ja
pop
push
sbb
fiaddl
icebp
pusha
pop
or
xor
stc
fstpt
lods
sub
sub
adc
cmp
sbb
sbb
pusha
xchg
out
jb
mov
mov
push
jns
push
int3
adc
sub
lds
jp
in
pop
daa
scas
fimuls
repz
pushf
enter
xor
or
and
jg
rclb
xor
sbb
and
adc
sub
mov
or
mov
loop
mov
dec
cmp
mov
insl
fsubrp
and
jg
xchg
push
mov
fdivs
mov
out
dec
dec
cld
jmp
popf
jmp
inc
xor
leave
shrb
or
push
les
test
loop
loope
repnz
test
push
pop
repnz
out
das
sbb
ja
orl
and
stos
mov
out
mov
mov
jge
in
add
xchg
outsb
dec
cmp
or
lcall
and
test
pop
ja
stos
mulb
lds
mov
fdivs
scas
popf
or
push
stc
test
mov
into
out
jle
push
rol
incb
push
imul
mov
push
rorl
jecxz
in
test
adc
aam
pushl
rol
adc
xor
cmp
jge
out
lods
pop
fcomps
jmp
fdivrl
jge
and
addl
stos
test
in
movsb
dec
scas
fiaddl
adc
add
cmpsl
jae
test
mov
and
popa
test
push
or
sbb
loop
sahf
mov
popf
movsl
scas
push
pop
imul
and
jbe
push
test
cwtl
clc
dec
add
jl
outsl
cmp
xchg
lahf
or
push
pop
push
push
push
jle
mov
sti
inc
and
lock
mov
scas
pushf
and
fstps
lock
jno
sahf
cmpsb
call
xorl
sbb
clc
in
pop
inc
xor
in
rcrb
and
push
imul
fmul
dec
mov
ret
mov
imul
in
fdiv
call
xchg
stc
aaa
push
cmc
add
jmp
add
pop
int3
aad
and
js
scas
iret
dec
mov
stos
push
jl
stos
or
mov
and
inc
push
mov
fdivrl
ds
arpl
and
push
and
xchg
sub
cmp
gs
sarb
mov
arpl
mov
push
dec
xchg
imul
or
add
js
stos
or
xchg
mov
mov
or
in
int3
adc
sar
jo
fidivl
xor
jbe
dec
in
ds
aas
pop
add
inc
and
jge
lods
bnd
hlt
xlat
pop
in
sarl
mov
lcall
imul
sub
xor
and
push
sub
xorl
xchg
cmovno
int3
or
xchg
int
xchg
daa
shl
test
mov
xchg
inc
pop
ret
lcall
and
mov
aas
int3
adc
mov
pusha
dec
jnp
adc
mov
cli
add
pop
orl
and
push
rol
add
fdivrl
mov
fs
push
xchg
xchg
add
adc
inc
add
jnp
stc
rclb
shlb
lret
sub
ficompl
fildll
loope
iret
pop
fists
and
mov
push
test
xor
xlat
push
mov
xor
mov
xchg
pop
pop
outsb
ljmp
or
cmpsl
roll
mov
add
cltd
mov
push
push
adc
mov
imul
cmpsb
pop
dec
push
fisubrl
aas
and
subb
fdivs
push
xchg
push
inc
je
jp
jge
roll
arpl
mov
sub
sub
jne
pop
push
rcr
std
and
jae
lds
lods
fcmovnu
in
insl
in
mov
shlb
outsb
ljmp
sub
stc
dec
shlb
dec
jne
jle
daa
enter
dec
in
fistpl
cmp
or
popf
xlat
sbb
sbb
rclb
jp
shll
inc
loope
xchg
lds
xchg
xor
lea
mov
cmp
add
xchg
leave
xorb
fcomi
cmp
cwtl
in
lods
insb
pop
movsl
cmp
push
pop
clc
xor
das
fincstp
ret
aam
popf
dec
cmpsl
push
mov
pop
and
and
and
or
cmp
jnp
inc
inc
arpl
enter
insl
xchg
inc
hlt
addl
inc
imul
add
xor
cwtl
pop
jp
pusha
pop
jo
pop
in
sbb
loop
sbb
push
xor
cltd
xor
cld
cmp
out
notl
enter
xchg
fs
push
sti
sti
mov
jecxz
mov
and
sbb
jp
loopne
dec
rorl
loopne
aad
bound
mov
inc
mov
andb
dec
adc
sub
xchg
notl
sbb
mov
arpl
inc
cwtl
mov
cmp
les
fwait
jecxz
test
adc
jbe
sbb
pop
rcll
sarb
outsl
cmp
outsb
mov
dec
jl
push
xor
pop
push
push
sub
pushf
orb
in
xor
fxch
push
push
dec
mov
pop
je
pop
lea
jecxz
push
xor
hlt
add
das
or
adc
push
fmull
stc
rorl
xchg
inc
xchg
rcrb
in
jae
scas
sbbb
lret
cmpsl
cli
ja
jne
pushf
addr16
out
mov
xchg
std
hlt
pop
xchg
mov
lcall
repnz
inc
dec
cltd
int
icebp
lcall
inc
inc
jl
pop
jae
and
push
mov
dec
sbb
pop
mov
daa
lock
xlat
test
add
mov
adc
push
dec
fiaddl
mov
inc
and
js
jle
cmp
aam
mov
cli
into
pop
sub
rorl
dec
fbld
pop
inc
mov
unpcklps
and
lcall
or
mov
and
iret
ror
in
lret
scas
daa
jno
int
fwait
cmp
push
push
mov
fs
sbb
lahf
pop
stc
fldenv
cmpsb
mov
adc
xlat
add
aam
nop
test
or
outsl
outsb
test
push
mov
pop
clc
dec
jecxz
aaa
inc
not
jg
imul
fcomp
dec
push
stc
and
fldenv
dec
xor
inc
and
pop
rcll
cli
cltd
cmp
repz
mov
xor
or
cmpl
lahf
adc
rorl
adc
jb
sti
imul
in
lcall
lods
jp
pop
nop
test
or
out
incl
and
es
lcall
add
movsb
scas
sbb
ja
pop
int3
adc
xor
jnp
mov
out
daa
test
and
mov
imul
addr16
shr
pop
loope
mov
mov
insl
sbb
imul
mov
adc
mov
pop
fwait
sbb
push
cmp
cwtl
enter
rolb
shr
dec
es
ret
int3
sbb
setp
sub
adc
adc
iret
mov
jg
sbb
adc
or
jne
call
and
jnp
and
fmuls
push
push
cmp
add
repz
fisttps
repnz
les
xchg
int3
adc
aam
dec
and
mov
iret
ret
pop
andb
add
mov
daa
rolb
xchg
stos
add
fdivrs
mov
ret
lods
lods
mov
js
mov
jb
inc
sbb
loope
fidivs
xorl
jmp
jg
addl
adc
add
fmuls
cmp
daa
cmp
insb
pop
xor
push
and
lea
or
stos
jmp
es
aad
jmp
pop
sbb
imul
xchg
cli
aaa
scas
loopne
jbe
std
cmp
in
scas
xchg
xchg
cmpsb
into
inc
cmp
leave
sub
fisubs
jnp
das
cmpsb
adc
aas
mov
push
movnti
rcrb
les
mov
into
pop
out
or
push
xor
inc
inc
sub
xchg
inc
jle
pop
and
shrb
lods
pusha
dec
cmp
scas
fmul
mov
call
out
jbe
xor
jp
loopne
test
sub
call
fsub
lret
repz
lcall
add
ficompl
cmp
int3
xor
andb
mov
fs
xor
pop
mov
sbb
rcll
cld
cmpsb
rcrl
jle
ret
psraw
jecxz
imul
mov
insl
pop
and
inc
mov
paddd
pop
loopne
adc
int
adc
adc
sbb
xchg
mov
mov
enter
and
and
push
mov
jecxz
addb
push
inc
lret
adc
mov
mov
lret
sti
jmp
repnz
sbb
and
xor
pop
mov
push
or
in
mov
sahf
push
mov
cmp
daa
out
das
int3
inc
mov
ja
out
iret
aas
adc
inc
dec
push
stc
jg
mov
aas
cmp
pop
sub
and
mov
mov
mov
shrb
stos
cmp
lods
ret
mov
and
sahf
fistpll
mov
mov
dec
sub
mov
jae
subl
push
or
xchg
out
out
mov
pop
mov
pop
dec
cmpl
jge
push
cmp
push
inc
fadd
inc
out
fs
enter
cmp
or
dec
shr
inc
nop
sub
push
push
ja
cmp
popf
into
xchg
in
adc
mov
sbb
and
jmp
or
and
mov
lds
mov
in
das
clc
push
bound
and
popf
mov
xor
nop
int3
dec
xchg
inc
push
dec
and
cmpsb
xchg
cwtl
mov
daa
scas
xor
aam
aaa
jge
pop
xor
push
popa
sbb
aas
mov
cmp
adc
cmp
xor
mov
scas
ja
fldcw
dec
xor
push
minps
inc
push
fwait
in
mov
jmp
ret
jg
outsb
xchg
aas
push
mov
arpl
xchg
jge
push
ror
jp
pop
xor
cli
cltd
stos
fidivrl
clc
xchg
xor
ret
cmp
pop
adc
call
fs
sbb
fistps
xor
cmc
int
mov
gs
sub
in
movsl
mov
jnp
mov
out
pop
adcl
or
fdivrs
sub
xorb
mov
insl
int3
mov
scas
stos
into
fimull
sbb
imul
pop
jae
mov
sbb
cmp
push
xor
inc
xlat
push
jg
mov
int
dec
sbb
xchg
cwtl
lock
inc
insl
mov
xor
fimull
sub
imulb
xor
cmpl
bound
push
xchg
push
in
repz
cs
xor
xor
jno
xor
mov
xchg
pop
ret
mov
push
jb
jl
popa
mov
sti
mov
cmpsb
sbb
sub
xor
jns
jge
pop
shrb
cmc
rcrb
mov
shll
nopl
or
cli
jge
out
insl
decl
push
das
loop
mov
lods
fsubp
xlat
xor
cmpsb
sbb
mov
push
and
mov
mov
in
adc
stc
out
sub
insb
ja
sti
nop
cmpsl
enter
out
sarb
push
xchg
mov
jmp
xchg
sbb
add
dec
jge
adc
or
imull
and
inc
movsl
arpl
xchg
insb
push
pop
mov
pushl
add
std
pushf
sti
push
outsl
push
lcall
and
loopne
int3
push
jmp
scas
mov
pop
mov
int
mull
inc
lds
add
cmpsb
lret
push
ret
test
push
sub
iret
bound
jle
xor
fwait
cmp
push
pop
mov
sahf
cmp
shl
out
mov
push
mov
inc
and
push
loopne
rclb
cmc
push
push
sub
aas
sbb
popf
jp
ljmp
push
int
adc
popf
inc
xor
stos
dec
jmp
xor
or
outsl
bound
add
fiaddl
js
idiv
imul
or
push
inc
push
sbb
aaa
inc
lea
xchg
icebp
aaa
xchg
and
cmpsl
pop
aam
cli
sbb
add
dec
push
pop
push
insl
addr16
mov
jmp
movsl
hlt
xchg
sub
outsl
loope
out
jbe
push
test
or
inc
inc
lock
xchg
lds
test
mov
mov
pop
push
jb
lods
mov
xchg
or
out
lds
xor
mov
fs
pop
ljmp
arpl
call
jb
lock
xchg
adcb
lcall
aaa
cltd
rcrl
sbb
fcomps
or
xchg
mov
dec
adc
icebp
xor
cmpsl
out
daa
lods
xorl
inc
sbb
scas
mov
pop
jb
sbb
mov
faddl
mov
mov
outsb
jp
popa
int3
loopne
ljmp
ss
mov
fs
ficomps
xchg
xlat
mov
inc
je
cmp
mov
gs
sub
inc
lahf
xor
cmp
mov
and
fimuls
es
push
pop
ret
lcall
mov
test
arpl
adc
inc
pushf
in
xor
lahf
mov
and
add
test
std
push
cwtl
push
mov
sbb
cmp
pop
lea
popf
push
adc
hlt
ret
cs
outsb
imul
xchg
ret
jns
cs
data16
sbb
lods
dec
or
aas
push
repz
xor
loop
popa
mov
cmpsb
or
xor
sub
rorb
and
lahf
imulb
or
push
dec
in
pop
inc
mov
loop
and
or
jae
adc
repz
enter
insb
test
out
mov
lret
int
push
mov
aam
xor
and
xlat
or
add
ds
inc
std
cmp
and
dec
ds
mov
aaa
popf
xchg
cmp
pusha
movsl
lods
outsl
add
pop
xchg
xor
mov
lea
adc
jnp
cwtl
divb
jl
icebp
pop
stos
dec
lock
mov
jns
or
push
xchg
jmp
jecxz
push
and
dec
dec
dec
neg
dec
push
testb
push
ret
mov
in
lret
dec
bound
pop
jg
in
pop
into
mov
outsb
cltd
loopne
shll
sahf
aam
mov
jns
dec
pop
shrb
jle
cmp
jmp
push
mov
mov
adc
inc
sub
push
cmc
fndisi(8087
push
mov
loop
in
lock
inc
daa
mov
lret
repnz
jg
lahf
lds
adc
jmp
bound
adc
das
mov
inc
mov
enter
mov
ja
cmpsb
in
pop
and
jbe
mov
pushf
jnp
jno
leave
push
iret
mov
lret
or
push
cltd
mov
je
sub
jnp
xor
loop,pn
add
pop
jbe
hlt
jge
inc
ss
mov
cmp
or
xor
sbb
ret
pop
xchg
xchg
sub
xchg
sbb
push
push
fistpll
dec
daa
lea
sbb
cmpb
cmpsb
mov
movsl
lret
mov
xchg
in
scas
cmpsl
mov
mov
or
dec
pop
cmp
rol
test
mov
daa
sub
fwait
das
aam
mov
and
fisttpl
aaa
icebp
mov
or
mov
enter
add
scas
aas
les
sbb
xlat
xchg
loop
xchg
jae
dec
lret
aad
pop
ds
xchg
std
stos
mov
jmp
rcr
sarb
jge
pop
push
cld
int3
mov
adc
mov
mov
adc
stos
jmp
scas
je
shll
movsl
test
pop
pop
psubd
cmp
mov
aad
xor
dec
stos
pop
push
loopne
xor
arpl
jbe
das
add
and
cmc
jg
sbb
sub
push
push
add
in
and
sbb
hlt
orl
jle
pusha
stos
imul
inc
movsl
es
test
xor
fdivr
and
pop
jmp
add
das
lods
push
adc
frstor
mov
clc
int
mov
popa
nop
scas
sbb
sbb
jmp
iret
jge
cli
jle
je
les
or
mov
mov
out
inc
inc
imul
mov
stos
aam
dec
insb
dec
sub
dec
ficoml
inc
sbb
push
imul
not
addb
outsl
ss
and
mov
lods
jge
mov
je
ds
jge
mov
sub
fnstsw
jl
sti
dec
cld
sti
push
hlt
popa
addr16
addb
pusha
add
jbe
jb
jmp
xchg
dec
mov
xchg
push
and
scas
fistps
js
lahf
push
mov
movsl
out
int
jg
dec
in
dec
dec
sub
sub
gs
test
arpl
jb
mov
xchg
sbb
cmp
push
leave
hlt
inc
insb
test
cmp
pop
mov
pop
pop
sub
xchg
push
mov
sbb
lods
loop
cltd
mov
mov
and
mov
pop
add
cmp
mul
jo
cmc
dec
dec
mov
add
sbb
jl
mov
inc
test
cwtl
or
pushf
mov
pop
addr16
inc
aam
fbld
loop
push
push
fwait
pop
xor
dec
pop
or
xchg
mov
lret
mov
lods
or
cld
xchg
ljmp
subl
or
sub
test
xor
dec
lods
cmpsb
dec
sub
xchg
mov
pop
add
and
into
jmp
push
loope
lret
int
stos
sbb
push
ret
dec
inc
fcoml
or
jle
dec
clc
ret
push
adc
xorl
jne
adc
pop
adc
xchg
imul
jle
push
mov
jns
pop
xor
xchg
icebp
and
cli
sbb
in
mov
fwait
cmpsb
inc
jnp
stos
incb
pop
push
dec
dec
in
movsb
shr
fimull
fcmovne
xchg
hlt
jmp
ss
mov
divb
cld
or
push
subl
push
add
or
pop
fistl
mov
std
mov
call
add
movsl
add
mov
fs
inc
cmp
sbb
pop
das
cmp
adc
lcall
jmp
and
cld
sub
cmp
test
dec
sub
mov
bound
sbb
sub
iret
sbb
icebp
mov
pop
in
inc
jnp
mov
sbb
xor
jbe
aad
mov
shl
outsb
outsl
aaa
mov
outsl
xchg
jae
outsb
movsb
jbe
cmp
xchg
insl
stos
lret
adc
push
sub
out
adc
xchg
aaa
clc
adc
mull
cmp
cld
dec
daa
fistps
lock
aam
xchg
pop
icebp
stos
cmpsl
pusha
popf
hlt
pop
or
shrb
outsl
mov
fcmovne
mov
leave
testl
pop
and
gs
rol
mov
mov
mov
fimull
mov
dec
sbb
adc
out
mov
cmpsl
pop
mov
and
fwait
push
into
fstl
pop
cltd
jmp
movsl
insl
fmulp
inc
pop
sub
xor
orl
popf
cwtl
fsubrp
or
xchg
pop
hlt
mov
and
sbb
ss
testb
mul
xor
cmpsb
dec
xor
jle
hlt
outsl
out
pop
mov
neg
hlt
pushf
fstpt
nop
push
sbb
inc
push
ret
cmp
cs
scas
int
es
pop
aad
arpl
cmp
loopne
mov
repnz
arpl
add
sub
outsb
jmp
fstps
xchg
rolb
fwait
out
mov
addl
lret
sub
or
push
call
mov
outsb
dec
xchg
adc
inc
mov
icebp
jmp
repnz
and
sbb
jp
dec
dec
testl
mov
sub
daa
sub
popa
ja
bound
out
pop
pop
xchg
fs
sar
cmp
les
push
push
in
mov
in
leave
gs
lods
lods
pusha
mov
das
mov
rcrb
mull
lds
lds
pop
repz
sarb
sti
sub
ds
fwait
mov
movb
jo
mov
push
scas
or
scas
repnz
dec
cmp
mov
jecxz
push
jnp
ret
pop
sub
or
stc
sbb
shl
jge
mov
push
out
cltd
shl
gs
jle
fidivrl
sub
and
add
call
jle
enter
xor
fidivrs
inc
sub
ret
imul
outsl
xchg
xchg
add
push
cmp
mov
stos
notb
stos
or
js
or
aaa
jb
stc
cltd
fisttpll
mov
push
insl
adc
ja
and
arpl
int3
fst
inc
insl
push
mov
cltd
lahf
mov
inc
sbb
push
in
ffreep
push
sub
xor
dec
xorb
lods
xorb
adc
insb
adc
shl
sub
sub
mov
sti
cltd
push
adc
scas
addr16
mov
inc
fiadds
push
enter
test
negl
jbe
inc
dec
or
movsl
das
int3
fdiv
in
jbe
shlb
mov
add
aad
inc
mov
aad
imul
xchg
popf
inc
mov
pop
adc
xlat
pop
cmpsl
test
fsubrs
mov
or
ret
sbb
fsts
insb
pop
insb
repnz
stc
fs
sahf
in
mov
ss
out
xlat
dec
stos
and
inc
sub
mov
sahf
lods
mov
std
or
xchg
xor
shrl
shll
orb
push
sub
fisttpl
call
push
xchg
cmpsl
add
andl
adc
push
sub
sti
inc
jno
jg
sub
mov
mov
xchg
ret
inc
inc
rep
inc
mov
cltd
cli
mov
mov
dec
mov
pop
fwait
cmp
scas
lods
orl
fisttpl
imul
push
sub
pop
pushf
fistpll
mov
xor
mov
xchg
mov
and
je
sahf
in
or
mov
mov
dec
imul
arpl
sarb
push
push
sbb
ss
dec
cmp
cmc
push
xlat
test
fcmovnb
xor
dec
xlat
fwait
rcr
pusha
call
fldcw
cmp
cwtl
and
lods
pop
mov
sbb
inc
mov
xor
adc
dec
movsl
fs
push
adc
ja
inc
inc
das
or
fnstcw
pop
mov
hlt
ficoms
push
std
adc
inc
in
jl
fdivp
repnz
mov
js
rcrb
cs
fldenv
repz
jecxz
scas
lods
hlt
push
xchg
xchg
mov
js
xsavec
leave
mov
adc
jno
lock
aas
cmp
jnp
sub
push
fcoml
jge,pn
lods
outsl
xchg
push
pop
imul
xchg
add
cmp
add
sbb
inc
les
mov
shlb
shlb
jg
js
pushl
adc
aaa
adc
inc
xchg
scas
xor
xchg
push
sub
test
out
call
hlt
imul
jecxz
ljmp
mov
jo
in
movsb
aas
fbstp
cmc
mov
or
lahf
clc
xcrypt-ctr
cmpsl
pop
je
xchg
mov
pop
loop
icebp
test
or
xchg
js
or
stos
gs
add
lods
repnz
inc
fs
pop
out
or
lea
mov
sbb
out
inc
cmp
dec
lods
popa
stos
pop
dec
int3
movsl
and
testb
cmp
inc
inc
cltd
push
sbb
daa
lock
jle
jp
inc
fisubl
adc
jl
mov
jle
and
adc
jmp
mov
xor
xchg
and
sbb
xchg
in
sub
into
fs
pop
sbb
xchg
xchg
push
adc
inc
inc
loope
jo
push
loope
cmp
test
clc
adc
popa
cmpsl
pushf
scas
mov
add
mov
nop
mov
push
fwait
adc
enter
add
mov
int3
push
out
aas
add
cmp
sub
repnz
sub
sbb
rolb
imul
mov
jle
jno
das
iret
bound
jne
and
ds
rcll
mov
sbb
push
mov
pop
outsl
popf
pop
pop
xor
cmp
dec
mov
push
shll
jp
jge
add
ja
pop
shl
es
push
in
lahf
fiadds
jbe
pop
dec
jge
xchg
shlb
push
ja
cltd
pop
mov
adc
xchg
cmp
xchg
sub
mov
insl
pop
test
ret
clc
push
es
movsb
mov
les
xchg
movsl
movsb
rcrl
jp
cltd
pop
xchg
cmp
sbb
clc
repnz
jg
cmp
pop
je
int
icebp
scas
pop
aas
jb
lods
jge
or
je
insl
adc
insl
and
lods
addr16
test
cmp
scas
sar
mov
addl
fwait
loope
out
mov
js
int
adc
pop
or
mov
rorl
bound
sti
push
icebp
mov
xor
push
out
mov
inc
sbb
fcomi
call
push
adc
int
int3
add
pop
jg
xchg
or
or
or
pusha
cltd
push
jge
adc
sub
dec
and
cld
xchg
imulb
mov
xchg
cmp
push
movsl
dec
test
out
aad
cmpsb
lea
inc
in
mov
jns
jno
out
pop
jp
adc
jge
push
shrl
cmp
lea
sub
int3
pavgw
and
pop
and
movsb
bswap
mulps
in
inc
pusha
subl
loopne
fsubp
bound
jne
leave
movsl
fimuls
bound
sahf
push
lock
sbb
pop
sub
inc
out
nop
imul
mov
lcall
or
push
in
cmp
xchg
out
sbb
sub
or
or
jns
pop
mov
sbb
mov
ja
push
or
shlb
pop
pop
lock
in
andb
push
loope
sbb
xchg
jbe
add
test
mov
pop
arpl
ljmp
xchg
shlb
imul
loope
sti
out
das
inc
jb
not
push
jg
test
fisttpll
test
xchg
ss
int3
mov
fnstenv
mov
adc
push
sub
jge
mov
mov
dec
gs
add
iret
xor
or
push
jno
fsubs
test
popf
pop
add
mov
sub
or
and
cli
cmp
push
pop
jne
pop
xor
ds
mov
jns
stos
scas
push
push
insb
ja
xchg
sbb
add
adc
xor
arpl
addr16
xchg
test
or
addr16
and
jl
mov
testb
or
int
loope
dec
mov
push
aad
test
mov
inc
mov
jmp
xor
jo
fbstp
cmp
movsl
mov
push
push
shl
stc
pop
loope
movsb
xchg
shll
inc
imul
mov
mov
dec
mov
mov
pushf
mov
loopne
hlt
push
in
enter
out
sbb
aad
sub
test
sub
xor
jbe
inc
jnp
xchg
lret
jge
movsl
cmpsb
jg
mov
inc
lret
dec
mov
xor
dec
loope
shlb
xlat
sahf
ret
in
out
loopne
add
enter
add
iret
aaa
shl
and
mov
hlt
cmp
insb
test
cld
adc
ss
pop
xlat
push
dec
cmp
cmpb
movsb
jbe
cmp
ja
sub
popf
jge
xchg
outsl
in
and
lods
mov
sub
sub
sbb
iret
jo
sub
mov
mov
enter
call
outsl
arpl
dec
clc
and
add
cmp
xor
jns
addl
adc
in
xchg
clc
or
mov
repnz
pop
hlt
lcall
rcrl
jmp
or
push
out
in
les
pop
xchg
adc
xlat
das
fcomp
mov
cmpsb
fcmovbe
pop
xchg
std
pop
jl
add
cs
pop
jecxz
mov
xchg
dec
out
shrb
in
push
inc
xor
xchg
outsl
shl
cmp
in
push
das
loope
dec
jnp
rcll
push
scas
sti
push
mov
and
xchg
outsb
into
lods
jne
xchg
decl
xchg
ds
adc
push
mov
popf
andb
loope
mov
lret
jl
stos
ret
inc
jnp
inc
jae
cli
add
lea
jbe
mov
push
push
sahf
mov
stc
add
call
loopne
loopne
jge
adc
jl
or
fwait
push
xchg
mov
cmp
adc
js
push
leave
cmp
pushf
scas
jle
insb
scas
pusha
movsb
lds
push
fiadds
ret
clc
xchg
fiadds
xor
jecxz
subl
xchg
and
and
fdivl
outsl
mov
or
adc
lahf
sbbb
cmp
cld
mov
cmpsl
js
or
mov
shlb
push
sub
mov
dec
es
xchg
adc
xchg
pop
lock
jp
and
outsl
enter
mulb
xlat
test
ss
nop
repnz
mov
push
push
push
in
fwait
add
push
addr16
in
xor
data16
fs
dec
pop
decl
insb
je
jl
and
imulb
jne
push
jle
shlb
lahf
or
xchg
ljmp
xchg
xchg
and
or
and
jb
aam
xlat
leave
cmp
stos
icebp
out
sti
fildll
jmp
sub
and
sbb
jle
dec
pop
sti
mov
in
cmp
adc
js
loopne
sub
jmp
adc
sbb
jmp
rcrl
call
int
lahf
fnstenv
lret
push
imulb
sbb
cltd
pop
mov
push
sbb
pop
add
jnp
mov
icebp
andl
ror
jmp
mov
aam
jge
push
fcompl
out
push
push
popf
sarb
repnz
aas
test
loope
fidivrl
ss
jbe
or
xor
push
pop
ja
loope
or
cmp
pop
jne
repz
jno
popa
mov
ljmp
dec
loopne
push
add
loopne
les
and
sub
mov
stos
lock
dec
test
jae
loop
arpl
xchg
outsl
add
or
mov
lods
pop
and
cmpsb
data16
gs
sub
mov
mov
xchg
pop
pop
lcall
mov
sub
je
or
jp
jnp
mov
enter
in
stc
push
das
fisubl
lds
and
xor
xor
stos
pop
ja
ret
xchg
jno
sbb
shl
xor
orl
adc
mov
loopne
push
pop
jo
push
push
ret
clc
and
addr16
add
mov
and
push
sar
adc
and
mov
sbb
lcall
out
push
out
mov
aas
shlb
sbb
mov
add
aad
pop
es
cld
push
call
and
cmp
je
jg
mov
roll
imul
loope
jecxz
in
push
xchg
repnz
cli
fs
cmp
outsb
add
mov
or
xchg
pop
imul
dec
and
xor
cmc
mov
insb
inc
mov
sbb
ret
push
hlt
mov
nop
ds
cmp
aaa
fucomi
add
cmc
cmp
fs
xchg
jecxz
or
push
lcall
adc
push
push
repnz
in
ret
pop
in
int
outsl
jno
sbb
nop
xchg
sbb
xchg
jecxz
js
iret
ljmp
push
bound
sub
ret
jno
jb
daa
in
xchg
dec
xor
jg
inc
or
adc
int3
xchg
and
pop
dec
cmpsb
cmpsl
mov
in
pop
das
out
xor
mov
adc
div
pmulhuw
sub
je
cmp
es
jg
call
pop
in
pop
xchg
in
arpl
incb
or
sbb
pop
dec
mov
aaa
fnstsw
xlat
inc
and
push
jo
fmul
es
dec
cmp
call
xchg
push
pop
mov
inc
pushf
mov
dec
jb
jno
pop
add
xchg
mov
add
rcrl
jo
cld
xor
inc
test
adc
rorb
outsl
loop
aas
lret
cwtl
cmp
sub
mov
fcomi
and
push
arpl
sbb
lock
or
test
call
dec
xchg
jmp
iret
test
sbb
sbb
pusha
lods
pop
push
lea
test
hlt
xchg
mov
sahf
jle
inc
test
pop
and
test
mov
jbe
std
sub
inc
push
das
add
or
lods
int
push
inc
hlt
fwait
mov
lahf
fbld
ret
les
sarl
out
jae
sub
xchg
jbe
and
popa
stc
mov
push
adc
inc
jmp
into
xchg
outsb
pop
pop
jecxz
sarb
clc
fistpll
addr16
xlat
cmp
xchg
fcomip
sbb
sbb
push
pop
push
ja
and
adc
popa
daa
mov
xor
test
cltd
xchg
pop
adc
dec
stos
push
adc
cmp
test
mov
xchg
loope
shlb
and
imull
shl
pop
lret
int
andb
jns
in
lret
pop
adc
xor
mov
add
popa
adc
test
dec
jecxz
mov
fsubl
cli
adc
and
insl
aad
inc
cmpsl
aam
sahf
mov
xchg
and
sahf
sub
scas
sbbb
sub
xchg
or
push
and
lret
ret
sub
ds
je
jle
ret
xchg
adc
mov
scas
movsl
sbb
pop
nop
jp
outsl
xchg
stc
testb
scas
mov
popf
dec
xchg
xchg
and
xor
and
mov
mov
and
or
pop
dec
das
ror
jg
push
and
outsl
mov
pop
cltd
insl
mov
xorl
adc
jb
std
adc
add
aam
inc
pop
cmp
pop
sbb
inc
inc
insl
daa
std
cmp
mov
adc
fs
nop
rclb
in
lcall
cmp
jecxz
xor
in
mov
fstpl
clc
orb
mov
es
and
inc
mov
mov
into
xor
mov
dec
scas
loopne
decl
ss
xchg
dec
inc
out
xchg
int
pushf
add
xor
inc
pop
add
xchg
ds
addr16
push
jecxz
call
loope
fucomi
xchg
add
jge
icebp
hlt
mov
icebp
inc
push
inc
sbb
aam
adc
out
and
cmp
aad
adc
imul
mov
out
push
out
or
mov
aaa
add
icebp
fisubrs
mov
sbb
in
push
dec
inc
pop
mov
sar
add
orb
ljmp
fcomp
add
aaa
mov
push
push
xchg
and
pusha
push
leave
repz
inc
int3
or
jns
mov
push
bound
dec
test
jmp
mov
jmp
cmp
push
sbb
pop
iret
ja
repz
pop
int
add
add
movsb
pop
dec
fwait
push
pop
mov
add
push
xchg
pop
pushf
movsl
jae,pt
sub
arpl
imul
insb
das
cltd
out
pop
push
and
mov
fisttps
inc
and
imul
mov
out
test
pusha
mov
imul
xchg
stc
add
bound
add
xor
popf
push
mov
outsl
out
jl,pn
jmp
cs
xchg
aas
dec
jb
inc
add
inc
dec
andl
je
rcll
leave
rol
sbb
sbb
adc
in
or
sti
adc
aaa
xor
xlat
mov
mov
dec
mov
add
popf
stos
inc
out
nop
shl
es
adc
and
lcall
ret
and
sub
sub
daa
xor
nop
addb
push
add
fisttpll
nop
gs
push
jo
xor
lods
movsl
sti
jns
mov
sub
call
pop
sbb
aad
ljmp
cmp
nop
jo
or
mov
and
dec
push
jns
scas
xor
fwait
stos
fldl2t
mov
add
jp
out
out
mov
imul
and
sub
fwait
jmp
cmpsb
inc
add
sub
mov
bswap
int
sarl
jo
dec
cmp
pop
les
call
sahf
xlat
add
jecxz
inc
inc
or
xchg
cld
push
jecxz
daa
sub
and
icebp
inc
fld
xchg
fiadds
mov
mov
les
and
mov
mov
xor
fists
lahf
push
xor
popa
pop
lds
adc
out
and
imul
nop
movsl
pop
cltd
scas
loope
jmp
sub
inc
test
stc
xor
xchg
outsl
aas
rcll
cmp
push
pop
mov
cld
cwtl
arpl
cmp
test
pop
cmc
xchg
or
xlat
fimuls
ljmp
fwait
int
ljmp
lds
and
jle
dec
pushf
movsl
jbe
call
test
stos
adc
dec
imul
lds
imul
xor
mov
les
sub
stos
xor
mov
pushf
mov
jmp
decl
loopne
xchg
je
out
push
adc
pop
fldcw
cmp
mov
ja
sub
and
inc
pop
inc
dec
cmp
loopne
in
fmuls
test
xor
gs
pop
aad
aas
lock
adcl
enter
stos
add
mov
cmp
xchg
push
xchg
imul
aas
jnp
mov
inc
out
das
std
adc
iret
xchg
push
ret
mov
loop
mov
test
cmp
pop
pop
mov
adc
mov
cmpsl
popf
fwait
jge
push
adc
shll
sar
push
shll
jb
imul
call
rorl
pop
jns
or
cmc
movsb
push
sbb
cmp
xchg
push
pushf
popa
cmp
jmp
xor
lock
loope
pop
push
jae
push
push
test
loop
fildll
in
jge
fucomp
pop
aas
stos
iret
scas
xor
or
aaa
inc
movsb
push
xor
gs
sahf
dec
repnz
mov
sbb
enter
add
lcall
int
mov
or
fcomps
jb
inc
sbb
adc
int
sub
xor
mov
shrb
outsb
fsubrs
sbb
pop
inc
jne
push
xor
sub
shll
repnz
rorl
cwtl
mov
imul
sbbb
mov
sub
cmp
les
push
sahf
sub
cmp
shlb
push
test
pop
mov
and
stos
or
stos
add
mov
scas
js
mov
lods
ss
jmp
cmp
cmp
in
test
dec
imul
cltd
es
adc
mov
mov
icebp
loop
pop
sahf
or
lea
in
and
cwtl
sub
std
jo
jae
inc
jae
jns
mov
cld
scas
loope
push
dec
test
jl
test
sub
adc
test
loop
push
push
adc
xor
add
aaa
pop
jmp
sub
pop
aam
rol
bound
mov
outsb
push
mov
cld
popa
sbb
mov
movsl
push
icebp
push
or
add
adcb
repnz
or
mov
cli
add
mov
cmp
pop
mov
inc
dec
mov
loope
roll
xor
adc
pop
loope
je
das
fldenv
add
cwtl
mull
or
dec
mov
ss
xchg
fsubrl
sbb
push
pop
in
sahf
fucom
outsl
push
adcl
clc
subb
notl
in
mov
inc
ja
repnz
into
stos
xor
adc
popa
sub
add
jl
pop
mov
pop
push
fdivr
es
and
out
ja
xchg
cmp
jae
jle
sub
xchg
int
das
bnd
hlt
pop
add
psadbw
add
xchg
lcall
ja
sahf
nop
cwtl
dec
lea
push
push
cwtl
sbb
mov
adc
int
cmpsl
subl
dec
inc
gs
xor
add
dec
icebp
jge
inc
je
push
adc
aas
imul
aaa
in
fidivrl
loope
inc
push
inc
out
aaa
fsubrl
sbb
push
leave
pop
push
out
pop
loope
popa
add
xor
dec
ljmp
push
sub
ja
cld
int
jge
test
nop
add
pop
pop
mov
fidivl
hlt
fisubrs
es
push
mov
push
insb
jb
fst
in
or
sub
pop
fsubrl
adc
lcall
mov
inc
mov
lret
inc
add
lock
cmp
scas
icebp
xchg
sub
jl
dec
test
sub
gs
imulb
fs
scas
and
sbb
insl
push
sbbl
imul
nop
fdivl
pushf
bound
pop
testb
fcoml
mov
pusha
inc
mov
in
inc
ss
mov
ljmp
sub
fldcw
outsl
pop
outsl
leave
push
outsl
dec
inc
push
jp
ret
push
add
sbb
xchg
and
addr16
imul
add
push
pushf
cld
inc
jns
and
jbe
jl
cmp
pushf
jne
xchg
or
or
ljmp
test
in
cmpsb
dec
gs
into
lret
xor
mov
mov
pop
xchg
loopne
sbb
aaa
dec
ror
std
cltd
cs
mul
inc
cmpsl
add
out
add
sbb
inc
pop
les
xor
mov
test
jp
aad
out
mov
or
aad
cs
xchg
xchg
dec
dec
lea
sbb
inc
mov
sti
test
int3
lahf
jne
adc
outsl
jge
push
cmp
pop
pop
sti
ds
cmp
xor
sbb
aad
lahf
scas
lret
jnp
jbe
in
es
imul
dec
mov
mov
imul
insb
insb
mov
pop
idivb
cs
fists
stc
lahf
xchg
lcall
and
add
pop
jge
lahf
in
insb
clc
mov
rorb
in
mov
clc
mov
daa
jecxz
call
xchg
sub
xlat
mov
cmp
packsswb
dec
daa
cmp
add
cmp
cmpb
adc
and
mov
inc
and
jb
add
call
std
shlb
cli
xchg
xor
stc
stos
dec
lock
mov
dec
inc
cmp
push
jns
fisubrs
scas
cmp
xor
pop
adc
stos
xchg
stc
loope
mov
mov
inc
or
ret
and
sar
es
add
shlb
xchg
int3
mov
xlat
adc
sub
mov
call
fsubs
popf
jne
je
int3
shlb
int3
push
add
push
repz
mov
lcall
sarb
cmp
ret
fldl
jbe
jmp
fimuls
mov
xor
inc
outsl
cwtl
jnp
push
sub
sbb
mov
jge
dec
jle
mov
sahf
rorb
pop
push
pop
xchg
mov
push
inc
fldenv
and
mov
sti
inc
xchg
cmp
cltd
jp
aad
ja
aam
and
adc
scas
jp
int
sub
in
xorb
stos
gs
xlat
es
jg
push
decl
mov
scas
fcomp
mov
out
xor
lods
cwtl
ljmp
mov
mov
mov
adc
ret
sbb
lock
lcall
or
add
rcll
cmp
and
jb
push
stos
popa
ret
imul
loope
dec
inc
jae
arpl
scas
xchg
adc
fbstp
in
sahf
shrl
outsb
lcall
and
cmp
lods
xor
mov
xor
mov
dec
and
sbb
in
fnstcw
aaa
ror
inc
cmp
inc
adc
rolb
sbbl
movsl
shrl
jb
mov
jnp
cmpsb
dec
nop
loop
jge
mov
pop
movsb
outsl
add
sbb
rorl
xor
scas
push
cwtl
mov
mov
sub
cld
or
pop
das
xchg
jb
pop
imul
fisttps
es
negl
xor
xlat
test
mov
xor
aam
cmp
jae
xor
inc
das
mov
adc
mov
cmp
cmp
jne
imulb
xchg
mov
gs
int
add
dec
out
aam
pop
mov
js
mov
sbb
jno
pop
push
hlt
icebp
inc
cmc
dec
in
jmp
sub
scas
pop
lea
test
jge
add
ret
mov
ja
je
arpl
or
imul
add
adc
and
jecxz
dec
leave
bound
add
and
lods
mov
cmpsb
pusha
dec
jle
sub
addr16
loope
push
test
add
daa
aaa
jbe
mov
sbb
scas
inc
lds
inc
test
shrw
or
lcall
es
xor
dec
lds
cltd
movsl
add
pop
and
pop
dec
sbb
mov
out
lcall
push
add
add
neg
and
in
pushf
int3
mov
es
fsubrs
pop
stc
fstps
test
cmpsb
iret
in
cmpsl
sti
lahf
mov
repz
icebp
int
popf
test
loope
pop
cmp
hlt
jne
xchg
test
pop
mov
shrl
not
add
rcll
xor
cmp
popf
arpl
fiaddl
lret
mov
dec
out
xchg
rcrl
std
lods
sahf
out
ja
fs
cmc
jns
rcrl
or
andl
cmp
inc
mov
es
mov
xor
sub
enter
imul
dec
loope
cmpsl
xor
in
loopne
daa
addr16
test
inc
adc
cmp
popf
and
int3
cmp
stos
into
punpckhwd
in
adc
loop
les
cmp
lahf
sub
rorl
lret
mov
aam
xchg
int3
in
and
xchg
xchg
xlat
out
pop
cmp
ret
or
add
push
sti
jo
sbb
or
and
xchg
dec
xor
dec
xor
frstor
add
lea
lret
frstor
sub
daa
cli
xchg
and
das
ljmp
test
and
jo
xchg
pop
mov
sbb
adc
cmp
add
cmp
mov
int
jge
out
mov
inc
mov
in
dec
leave
mov
pop
jno
jo
inc
add
mov
xor
pop
mov
mov
enter
dec
lea
sub
jno
and
fsubrl
sub
es
imull
jb
inc
push
insb
xchg
nop
in
orl
ss
adc
jp
or
mov
mov
imul
mov
or
loope
jns
repnz
clc
push
icebp
jbe
clc
rol
jb
int
pop
rcll
pop
jge
out
sahf
ss
adc
push
ja
xchg
inc
ja
xor
ret
push
mov
scas
fcompl
mov
bound
enter
insb
into
aam
jmp
shrb
or
mov
push
aam
xor
jmp
out
mov
jb
test
test
mov
xor
pop
xor
jp
jnp
repnz
iret
xor
mov
mov
add
xor
ds
inc
cmp
dec
pushf
adc
test
mov
sub
int3
enter
test
std
push
in
repnz
cltd
in
mov
decb
mov
jnp
push
int
push
inc
dec
add
cwtl
mov
addr16
jno
insl
and
into
xor
sbb
fidivrl
faddl
inc
adc
pushf
loope
xchg
jmp
in
push
out
sbbl
mov
movsl
ret
cmp
shrb
in
cltd
cs
mov
dec
xchg
gs
jne
popf
inc
dec
lods
cmp
clc
jg
loope
cltd
mov
pop
fcos
out
adc
imul
adc
ss
das
fmul
lahf
daa
dec
sti
sbbl
and
jae
dec
inc
int3
xchg
sarb
push
xchg
orb
es
int
jmp
mov
ret
les
adc
scas
pop
pop
in
dec
mov
lret
and
cli
push
pop
push
adc
pop
pop
iret
ds
sti
mov
popf
push
mov
cvttps2pi
jp
bound
dec
pop
imul
inc
in
les
pop
mov
push
outsl
jl
sub
stc
aad
adc
roll
dec
jecxz
or
js
cmp
sub
in
arpl
fwait
mov
stos
jno
movsl
add
sub
into
sbb
pushf
adc
cmp
adc
inc
mov
aaa
out
popa
out
jnp
and
lods
push
cwtl
js
cltd
mov
out
pop
ret
int3
sub
fildll
push
ss
outsl
jle
aas
dec
out
pop
mov
xor
dec
adc
push
les
fstpl
sti
inc
shll
or
cmp
cmp
sbb
movsl
loop
aaa
and
inc
mov
out
sbb
mov
pop
flds
enter
push
push
push
mov
xor
sbb
mov
mov
sub
jg
popa
jnp
cmpsl
mov
lcall
adc
out
mov
loop
and
mov
arpl
incl
jg
sub
push
pop
xchg
mov
imul
mov
or
movsl
push
sub
xchg
sub
les
jnp
inc
mov
lods
push
std
dec
fidivl
mov
fwait
movsb
mov
sarb
in
adc
jge
mov
sbb
adc
cli
das
ret
test
pop
sub
jmp
cld
mov
inc
packssdw
mov
lret
stos
xchg
push
mov
or
pop
inc
inc
sahf
popf
test
mov
cmp
push
and
jmp
sti
xor
sub
or
sti
rol
into
adc
loop
push
mov
sub
or
cmpsb
add
sub
adc
ja
scas
inc
repnz
dec
mov
pop
xchg
mov
sarl
cli
sub
into
enter
jmp
call
push
shll
cmp
sarl
movsl
out
repz
cltd
es
inc
int3
inc
jno
and
mov
stc
rorl
imul
xor
pop
test
pop
push
dec
or
jne
sbb
loope
add
movsl
add
jmp
add
movsl
pop
loop
push
push
xchg
push
int3
rcrb
aas
pop
push
cmp
dec
sub
sub
pop
lret
inc
dec
add
pop
pop
rorl
xchg
sub
lods
fldcw
imul
mov
xchg
sbb
push
and
rclb
loopne
mov
push
dec
and
xchg
xchg
pushf
fcmovne
movb
movsb
cmp
ds
pop
fisttpl
sub
cmp
out
mov
clc
add
dec
in
clc
mov
andb
pop
test
add
add
inc
cmpl
cli
sub
xor
mov
adc
out
outsb
stos
mov
inc
dec
test
cmpsl
push
or
sbb
xchg
pop
aam
aas
out
pop
jmp
lea
js
test
shll
sbb
faddl
mov
arpl
lea
xchg
xchg
jbe
lret
or
adc
sbb
rcrb
inc
pop
scas
stmxcsr
inc
lahf
mov
sbb
push
leave
adc
out
add
ja
xchg
pop
mov
inc
push
mov
mov
pop
sub
cmp
push
xchg
pop
cmpsl
pop
je
pop
jle
sbb
dec
cmp
jmp
fsubrl
ret
cmp
xchg
scas
pusha
out
and
add
test
fisubl
jle
mov
sti
sar
cmp
or
or
shrl
xor
pop
shl
mov
cld
pop
add
sbb
popf
mov
pop
jbe
xchg
shrb
inc
insl
out
pop
xor
sub
xchg
jno
dec
xor
mov
push
and
cmp
push
jle
push
int
sub
adc
mov
add
pushf
ljmp
lahf
fs
and
or
fistl
outsl
and
js
push
movb
jmp
fimull
jg
inc
outsb
and
or
shll
push
or
test
pop
inc
push
push
mov
mov
fwait
xor
dec
rcll
jle
or
dec
push
shrl
sub
jo
inc
in
mov
and
pop
outsb
fnsave
push
and
sbb
mov
and
mov
cmpsb
push
les
icebp
sbb
fistpl
add
into
inc
push
out
outsl
mov
inc
jmp
nop
dec
bound
rolb
jo
xchg
nop
rolb
dec
inc
adc
fwait
out
jo
les
icebp
adc
aad
lds
sbb
imul
movsl
mov
outsl
out
std
sub
jae
scas
dec
repz
in
cmp
arpl
lds
mov
clc
ret
or
fwait
stos
xchg
fstl
lcall
and
fstpt
in
sub
adc
sub
push
ret
lcall
fildl
das
and
or
gs
jle
cwtl
data16
movsl
lea
xchg
aam
pop
fcmovne
in
and
in
or
cmp
add
out
sbb
inc
cmp
cmpsb
mov
sub
pop
push
cs
std
mov
test
mov
cmc
sbb
jl
popl
sarl
call
dec
aad
imul
jno
in
loope
icebp
stc
ja
aaa
xor
addl
mov
cmc
or
loope
jl
jbe
mov
dec
push
mov
cs
mov
roll
adc
or
pop
jno
movsb
add
in
cltd
push
sub
xchg
pop
jl
add
push
xchg
xor
fldl
jmp
frstor
adc
and
jns
jmp
lret
cmpsl
int3
pop
add
sub
xor
jbe
sti
int3
sbb
sub
mov
mov
mov
add
scas
insl
iret
adc
adc
mov
pop
mov
shlb
jmp
hlt
push
insl
enter
sbb
negb
inc
adc
fisttpll
mov
xlat
call
inc
sub
les
popl
ds
stos
das
fldt
xor
dec
push
or
testb
cmc
xchg
mov
jecxz
push
in
mov
inc
jns
das
filds
push
shll
nop
pusha
jl
enter
into
loop
mov
aad
and
dec
inc
sbbl
jecxz
rcll
leave
cltd
pop
mov
push
rcrb
shrl
stos
jle
movsb
mov
adc
lods
mov
aas
fcoms
rclb
add
and
xchg
jge
lds
aam
jnp
and
xor
inc
pop
out
jecxz
scas
jg
inc
pop
movsl
ljmp
mov
push
dec
mov
mov
leave
lock
push
push
addl
rcr
xor
fmuls
push
cltd
sarl
ljmp
push
and
xor
enter
inc
jle
imul
cmp
lods
out
dec
sub
iret
and
std
push
arpl
ja
inc
mov
fistl
addr16
testl
cwtl
mov
inc
adcb
push
mov
push
ficoms
jmp
out
xchg
data16
add
mov
mov
jbe
pop
xor
rorb
rcl
mov
cmpsb
mov
pop
mov
outsb
out
sub
sub
out
cli
mov
out
cld
push
popf
push
into
loope
rorl
or
sbb
js
test
xor
test
lods
data16
push
daa
int3
mov
daa
rol
cli
addb
jns
test
sub
or
pop
sbb
idiv
and
daa
loop
jbe
or
aas
in
inc
and
fst
scas
add
inc
cltd
outsb
ja
push
dec
sub
inc
js,pn
pop
fisubl
mov
jno
addr16
ret
pusha
lods
lret
mov
int
fdivrl
jb
and
out
xlat
aaa
or
cli
cmp
invd
aad
mov
imul
xchg
or
es
pop
sub
nop
dec
jp
push
xchg
pushf
mov
and
and
xchg
add
idivb
add
test
push
sbb
pop
push
push
sub
sub
sub
mov
pop
mov
mov
cwtl
into
sbb
shl
mov
scas
add
xchg
cmp
jmp
repnz
fldl
sbb
and
decb
cmp
xchg
outsl
iret
jp
pop
push
lock
dec
mov
and
xor
jne
mov
add
mov
cmp
jbe
loope
fs
xor
jmp
xchg
inc
xor
push
adc
add
add
mov
rcl
push
std
pop
cmp
icebp
sbb
dec
xlat
fwait
cmp
mov
mov
js
andl
xor
out
pop
add
daa
out
push
inc
fyl2xp1
sub
inc
call
add
mov
lret
push
xor
xor
push
mov
imul
jp
push
stos
ret
addl
shll
mov
mov
push
push
sbb
or
sbb
scas
inc
fucom
sbb
or
lods
push
fcmovne
push
stos
pop
push
cmpsb
push
lea
dec
dec
arpl
movsl
sahf
mov
pusha
xor
in
pop
xor
cmp
aas
iret
pop
es
jbe
mov
sbbb
sar
inc
xchg
fnstcw
push
stc
test
out
cmp
sahf
adc
mov
lret
push
mov
loop
call
ds
addb
dec
stos
push
stos
subb
pop
loope
sub
ret
fs
cmpl
out
push
jl
add
inc
inc
sarl
add
ret
stos
lods
sarl
jae
bswap
lahf
test
add
xor
inc
jle
sbb
mov
sub
dec
xor
sbb
jmp
or
mov
scas
jmp
mov
xlat
fs
lret
mov
lret
jecxz
mov
ja
xchg
jo
push
call
and
call
rol
pop
or
sub
or
jmp
popa
test
roll
mov
inc
and
jno
add
adc
fsubrs
aam
fmull
cltd
mov
jmp
rcr
jp
mov
push
jae
add
testb
cltd
jns
sbb
mov
sub
int3
repnz
push
pop
sbb
les
je
xchg
movb
mov
jl
ja
mov
xor
jecxz
or
push
loopne
xchg
mov
imul
jb
out
adc
ljmp
or
aad
and
gs
fsts
xchg
push
mov
sbb
sub
sub
jae
cltd
pushf
iret
adc
aad
fstpl
add
daa
adc
cmpsb
lahf
sbbb
mov
loopne
scas
mov
into
push
push
ret
cld
mov
inc
mov
ja
and
sbb
fdivl
pop
mov
or
xchg
loope
scas
fnstenv
cmpb
cmpsl
ja
jnp
aad
into
sub
insl
mov
and
ds
inc
cs
adc
ja
xchg
ss
xor
lahf
cmp
mov
xchg
jnp
and
aas
add
xor
in
sub
mul
cmp
test
mov
jl
mov
add
and
ret
jecxz
popa
imul
push
ja
sub
sbb
int3
xchg
add
mov
pop
sbb
out
inc
push
enter
lret
add
hlt
mov
es
inc
push
inc
ret
xchg
lods
xchg
pop
icebp
add
jae
or
push
into
xor
int3
adc
loope
aaa
xor
je
adcb
mov
xchg
lcall
jno
adc
stos
loop
data16
xor
add
leave
push
jge
sub
iret
mov
jecxz
daa
test
mov
adc
rcll
aas
add
and
andb
adc
and
jns
pop
pop
rorb
sarb
mov
aam
mov
xchg
mov
sub
fists
into
jmp
loop
fs
push
imul
lds
pop
xchg
sub
aad
pushf
mov
es
dec
hlt
dec
and
fsubs
jnp
movsl
xor
add
jge
and
or
dec
scas
scas
mov
cmp
popf
lock
pop
mov
popa
stos
push
mov
mov
shrb
pop
mov
lods
cmp
push
mov
aaa
or
or
or
ja
pop
inc
or
jb
or
es
repz
ja
mov
lods
dec
cmp
pavgw
arpl
push
in
lret
shlb
std
inc
push
cmp
ljmp
push
and
push
mov
movsb
mov
scas
pop
daa
sub
fsubrs
pushf
mov
sbb
daa
sbb
jmp
popa
stos
xchg
mov
call
dec
mov
out
rorb
test
xchg
loope
std
xrelease
das
movsl
addr16
sub
mov
add
lret
ja
dec
bound
fwait
push
call
jbe
push
rcrl
xchg
xchg
pop
xchg
mov
fxam
in
jbe
sbb
or
or
jnp
nop
xor
jns
enter
cmp
sub
jno
call
push
fidivs
push
or
jns
or
std
sub
mov
inc
daa
sahf
dec
xchg
call
nop
ljmp
lea
shl
mov
lret
out
aas
add
sbb
addb
subb
jp
mov
fstps
loopne
hlt
xchg
cs
xchg
fmull
fcmovnu
jp
decl
mov
std
fcmovbe
mov
test
adc
test
mov
jo
dec
cmp
mov
inc
lea
pop
mov
add
cmp
pop
loop
cmp
lret
jbe
lahf
sub
push
int
or
arpl
sbbl
rcl
sbb
xchg
rol
stc
mov
xlat
insb
les
pop
mul
cwtl
lret
sbb
lods
jno
push
iret
xor
pop
jae
sbb
dec
pop
sbb
dec
pop
mov
jbe
test
test
or
stos
std
jg
nop
push
dec
stos
push
add
les
xor
je
add
aad
out
shl
mov
jle
mov
inc
mov
mov
fcom
cmpsb
and
pop
loopne
push
fsubrs
and
or
push
push
int3
xor
push
mov
insl
inc
pop
add
out
paddq
loope
mov
cmp
iret
in
mov
imul
das
dec
mov
jne
push
sub
test
test
add
cltd
adc
mov
ja
mov
inc
mov
lret
call
aad
mov
xchg
mov
in
in
nop
cmpl
data16
bound
gs
jnp
sbb
js
sti
sub
loop
adc
out
enter
ret
rep
fs
in
outsl
xchg
adc
ret
out
cmp
or
push
repnz
xlat
xchg
jns
int
sub
pop
push
adc
pop
movsb
push
xor
insl
shrb
stc
xchg
cli
insl
lods
xor
dec
lds
jmp
and
push
out
addr16
push
jns
aad
std
shlb
data16
lahf
je
or
vroundss
roll
scas
sti
call
in
dec
fsts
add
cmp
xlat
mov
inc
xchg
testl
imul
jge
aad
lods
push
addr16
add
std
mov
mov
cld
pop
repz
jo
and
cmp
or
xchg
or
inc
mov
xor
adc
adc
bound
mov
push
sbb
popf
mov
inc
test
sub
and
xchg
add
std
mov
icebp
jmp
pushf
push
and
dec
pop
cmp
xchg
adc
outsb
leave
test
test
cwtl
imulb
inc
adc
scas
int3
push
pop
adc
xor
fcompl
push
xchg
cltd
enter
push
out
add
mov
jl
jmp
pop
sub
data16
cmpsb
cwtl
cld
call
in
xor
or
sbb
adc
imul
movsl
xor
aaa
cmp
pop
das
imul
jle
jecxz
fimuls
mov
mov
dec
adc
rorb
fistl
mov
decl
mov
push
rolb
or
insl
add
outsb
and
mov
loope
inc
divl
lcall
jno
mov
cs
rorb
push
inc
push
mov
loop
cmp
cwtl
int3
aad
mov
sbb
out
add
mov
jl
and
mov
rorl
pop
cmp
std
insl
jmp
popf
pushf
mov
outsl
pop
mov
mov
pop
arpl
inc
mov
adc
jae
xor
popf
nop
ss
mov
pusha
push
and
mov
int
idivb
mov
clc
mov
repz
lea
pop
adc
fdivrl
jg
sub
mov
repz
pushf
jg
ficoms
test
sub
sbb
or
jbe
enter
sbb
and
jno
js
adc
mov
fucom
mov
pop
flds
cmp
dec
adc
xor
and
cmp
pushl
adc
pusha
mov
popa
int3
pushf
jb
cli
dec
les
fidivs
and
cmp
repz
adc
mov
and
and
jg
adc
outsl
push
in
or
ret
or
inc
push
faddl
enter
ds
add
mov
lret
add
xchg
mov
adc
lcall
push
pop
repz
out
jne
or
adc
pusha
mov
xor
jg
xchg
lcall
xor
mov
pop
push
xor
xorl
lea
push
ljmp
aad
fistpll
stc
mov
xor
lcall
xor
xor
cli
pop
xor
or
js
lea
fnstsw
iret
pop
mov
mov
dec
and
jecxz
sti
dec
pop
out
sub
mov
pop
mov
fwait
loopne
addps
xchg
fcmovnb
addr16
jbe
fcompl
mov
dec
ds
jecxz
test
xchg
inc
cmpsl
rolb
jbe
jmp
mov
cvtdq2ps
mov
push
push
scas
mov
xor
lea
xchg
pop
mov
pop
jno
arpl
push
and
das
inc
dec
jns
mov
popa
xor
jne
leave
sbb
scas
sti
push
dec
pop
add
push
xor
movsb
pop
mov
loopne
pop
stos
xor
filds
shll
rol
sub
lret
cmc
and
movl
or
xor
mov
test
pop
arpl
ffree
pop
mov
or
arpl
pop
jne
imul
mov
push
lahf
lds
or
mov
jmp
adc
sahf
and
ds
enter
cmc
int
adc
int
repz
push
push
setb
mov
cs
jge
imul
cmp
xchg
ss
cmpsl
xor
lods
pop
ret
sub
lret
fwait
loope
inc
insl
push
sbb
shll
push
mov
adc
in
and
inc
testl
not
lods
xchg
mov
cmp
iret
fcomi
cltd
call
sbb
jne
cld
mov
jbe
lahf
ljmp
lods
mov
faddl
sub
lods
addb
and
fcmovu
orl
xor
incl
jb
xor
lods
ret
xor
xchg
rol
jb
pop
loopne
add
push
int
stc
lods
sbb
in
daa
xchg
jecxz
lea
pop
adc
mov
cmc
fwait
loop
cs
sbb
mov
mov
ja
or
imul
lret
sahf
into
and
cmp
aad
sti
push
decl
subb
push
xchg
ret
mov
out
aad
jno
pop
in
std
xchg
cwtl
dec
dec
sub
std
sarl
idivl
sahf
cmp
das
and
cli
pop
enter
fincstp
lret
cmc
fbstp
stos
or
xchg
loope
cmp
imul
cmpl
imul
pop
fldcw
shrb
inc
jo
mov
xor
data16
sbb
fdivs
out
das
jge
scas
pop
xchg
cmp
or
and
or
sub
insl
fsubs
out
add
lahf
mov
lea
movsl
sub
pop
mov
subl
daa
imul
sub
pop
or
out
fnstsw
push
and
jmp
cwtl
mov
movsb
jbe
movsl
ljmp
addl
push
jno
xchg
test
inc
xchg
rcrl
mov
adc
and
jge
clc
push
sti
imul
add
mov
aad
aaa
hlt
adc
sti
je
fisubrl
mov
pop
enter
pop
lods
sub
lret
or
xchg
push
pop
or
push
add
jl
xor
das
movsl
mov
mov
mov
add
and
sub
neg
adc
push
and
pop
rorl
ja
lahf
pop
mov
push
sbb
xchg
push
mov
xor
outsb
outsb
arpl
insl
adc
lahf
aad
dec
xchg
and
sub
stos
pop
in
imulb
xlat
sbb
dec
add
pop
mov
ja
std
scas
hlt
mov
cld
imul
add
test
xchg
mov
lcall
cmp
xchg
sub
cmpsb
jae
test
sbb
lahf
sbb
and
out
cmp
movsl
out
pop
mov
xchg
lods
lret
or
pop
dec
cmpsb
mov
inc
mov
lock
das
xor
push
addr16
insb
test
rclb
jmp
cltd
repz
mov
pop
inc
lds
loopne
das
mulb
xlat
out
cmpsb
pop
and
aaa
bts
inc
mov
mov
mov
es
mov
cwtd
pop
xor
inc
add
xor
pop
lock
pop
popl
mov
das
xchg
cld
mov
js
jl
out
arpl
push
or
aas
popf
cwtl
jg
lret
add
test
mov
adc
mov
jne
mov
and
fcomp
fnstsw
xor
sbb
inc
mov
imul
into
xchg
inc
test
dec
fisubs
iret
ds
rol
jg
popa
adc
mov
f2xm1
push
movsl
shrb
mov
mov
daa
or
jbe
sbb
sbb
cli
fdiv
cmp
pop
clc
xor
or
loope
pop
pop
pop
mov
jbe
in
js
cltd
popf
or
incl
or
jge
lds
fwait
push
push
push
lock
xchg
mov
mov
cmp
cmp
stos
dec
dec
push
xor
mov
jle
into
int
and
and
xor
push
rolb
fsub
mov
out
xor
rolb
negl
mov
aas
movsl
mov
pop
nop
repnz
lds
incl
leave
xchg
hlt
cvtpi2ps
stos
inc
jmp
jg
lret
jp
in
xchg
inc
jmp
jg
mov
lock
sbb
fnsave
sub
mov
add
pop
mov
jp
int
mov
jnp
popa
add
jbe
push
stos
add
loop
jae
js
push
inc
test
cmpsb
cmpsl
popl
fdivs
repnz
fisubrs
pop
shrl
fmuls
mov
lret
pop
out
cmp
dec
mov
inc
xlat
add
dec
or
jb
mov
adc
cmp
pop
xor
mov
sub
test
mov
filds
mov
sub
push
push
cmp
push
mov
mov
jecxz
fstps
scas
and
mov
movsb
xchg
mov
in
test
stos
lods
mov
addr16
mov
xchg
mov
mov
pop
in
lock
imul
add
fdivs
pop
dec
call
and
xorb
daa
test
sbb
lahf
mov
insl
push
arpl
adc
test
xchg
mov
jmp
unpckhps
pusha
and
pop
pop
stos
xor
mov
add
push
div
sbb
in
xorb
lea
in
and
inc
dec
sub
scas
ror
jo
xor
inc
jg
mov
jg
sahf
hlt
jmp
fcomps
pop
das
ja
xor
mov
cli
insb
adc
jnp
loop
call
fwait
jae
sbb
mov
test
mov
and
push
mov
out
push
jns
xor
mov
sub
test
sub
jecxz
loopne
push
pop
jg
call
sbb
add
or
inc
sahf
nop
mov
mov
mov
push
pop
movsb
dec
cltd
pop
push
push
cmp
imul
mov
mov
fdivrl
adc
and
sahf
int
out
jne
or
cmp
fincstp
js
imul
pop
mov
jmp
scas
sbb
arpl
push
mov
sbb
adc
push
jl
fstps
dec
cwtl
adc
mov
jp
mov
lcall
pop
fsts
mov
dec
sarl
jle
test
cmpsb
fiaddl
pop
push
popa
cmp
loopne
dec
loop
jg
in
cmp
ja
test
clc
cmp
in
cmp
pop
jmp
ss
pusha
test
pop
iret
or
mov
test
and
in
cmp
cmp
test
out
inc
push
sub
leave
prefetch
or
mov
cmp
push
test
mov
sub
add
xor
sarb
hlt
pop
sarl
jg
mov
dec
popf
pop
nop
out
push
jle
or
mov
add
dec
jmp
xchg
fisubrl
dec
xchg
hlt
cmp
bound
jmp
add
push
and
xchg
dec
jl
jmp
inc
sarb
inc
dec
pop
aaa
lds
mov
jb
nop
inc
push
rcrl
loop
inc
add
add
aaa
clc
jg
xor
cmp
jno
mov
andl
mov
mov
loope
popa
adc
sub
pop
adc
ss
dec
shlb
cld
inc
jmp
sub
and
jae
test
inc
push
and
flds
popf
mov
mov
or
xor
cmp
xchg
or
shll
cmp
loopne
inc
flds
bound
pop
loope
icebp
pop
arpl
xlat
mov
out
pushf
test
daa
sub
sbbl
fsts
push
inc
jg
xor
sbb
xor
mov
xor
call
stc
inc
popf
subl
lea
push
mov
call
js
xor
fisubl
mov
and
pop
mov
adc
daa
scas
xor
push
pop
mov
mov
adc
mov
ret
add
inc
sub
sahf
stos
jecxz
xor
nop
adc
mov
mov
clc
push
push
push
jbe
sub
insl
inc
xor
cltd
aas
mov
setge
rorb
mov
mov
test
pop
xchg
mov
jp
test
cmpsl
or
xor
rcr
dec
mov
and
pusha
in
ret
inc
xchg
add
mov
imul
xor
jb
mov
or
or
icebp
and
aad
pop
cld
and
dec
pop
and
mov
insb
mov
ret
adc
or
add
pop
pop
add
cwtl
fimull
inc
out
push
and
mov
roll
cld
jae
and
mov
insl
xor
es
xlat
cwtl
insl
inc
cmc
jle
push
mov
and
ret
js
lahf
aas
lods
repnz
imul
mov
jnp
cmp
aas
sbb
inc
xor
mov
ss
loope
push
push
jp
inc
mov
lret
lret
add
jecxz
sbb
cmpsl
aad
mov
repnz
add
dec
repz
jmp
scas
insb
push
jg
pusha
cmp
cvtdq2ps
jne
mov
leave
push
cwtl
jbe
adc
in
arpl
sub
fsubr
stc
mov
push
inc
jae
test
jp
or
fcmovnbe
sub
dec
push
aaa
add
mov
push
jp
or
cmovbe
mov
dec
popa
mov
lret
xorl
mov
xor
mov
xchg
aam
jg
lahf
sbb
cmpsl
mov
loopne
aad
or
fcmovbe
and
pushf
inc
mov
test
lods
mov
pop
test
dec
mov
mul
adcl
movsb
mov
push
cmp
shl
nop
je
inc
xor
add
popf
inc
mov
mov
push
push
mov
int
dec
mov
xchg
cli
in
dec
sbb
rorb
or
js
mov
pop
xor
pusha
mov
sub
push
pop
pop
xchg
loope
mov
cmp
data16
pop
lret
add
mov
mov
add
shl
cmpsl
movsl
dec
out
ja
mov
mov
pop
dec
add
fidivs
sbb
push
xchg
sti
ss
maskmovq
std
or
dec
addl
sbb
jmp
ret
xchg
aaa
aad
addr16
sub
or
xor
popf
ja
lcall
adc
int3
loop,pn
add
and
dec
pop
jo
out
out
xchg
push
testl
mov
enter
shll
and
ss
or
cmp
lret
dec
nop
repnz
and
addr16
pop
jecxz
hlt
addr16
inc
jge
or
and
inc
ret
movsl
shll
popf
loopne
movsl
inc
sub
push
inc
sub
outsb
push
xchg
push
pop
test
push
insb
pop
pop
jno
cmp
jno,pn
jecxz
nop
mov
mov
into
push
xchg
adc
pop
out
adc
fsub
pop
add
test
xor
ss
sbb
jae
sbb
xor
jnp
dec
bound
lahf
ret
pusha
cwtl
shll
pop
push
rcr
popa
mov
aam
pop
jmp
pushf
jmp
data16
jnp
outsl
pop
in
jae
lcall
pop
mov
sarl
addb
test
inc
mov
adc
ja
or
push
in
fucom
clc
ret
jle
js
xor
leave
loop
sbbl
shl
pop
pop
push
cmpsl
add
jp
mov
testl
pop
test
mov
mov
sbb
cwtl
sahf
mov
inc
dec
data16
sub
add
xchg
jne
cwtl
add
jp
test
in
xor
and
push
xor
or
mov
xchg
adc
pusha
and
push
ja
adc
ss
loop
xchg
adc
gs
js
adc
push
repz
jno
or
pusha
test
popf
xor
pushf
cwtl
pusha
jmp
lcall
stos
lods
push
add
push
push
or
mov
sub
push
sahf
add
mov
sarb
xchg
test
jb
push
sub
fidivrl
jo
jge
push
pop
loopne
in
iret
jge
jmp
inc
test
mov
push
add
sub
push
outsl
mov
adc
pop
and
or
hlt
pop
fsubrs
mov
je
mov
jecxz
inc
fldt
aad
sahf
adc
int
mov
pop
pop
es
shl
inc
cmp
mov
lods
xor
pushf
fistl
pushf
std
mov
mov
dec
lret
cmpsb
hlt
xlat
and
shr
pop
shll
adc
or
sub
sahf
and
mov
insl
mov
insb
cmp
inc
aam
in
pop
mov
xchg
inc
jno
jb
inc
push
or
out
pop
xor
mov
pop
mov
pop
pop
adc
sub
adcb
dec
xchg
lret
or
pop
pop
fisubl
into
gs
pop
jns
jne
xchg
jle
and
fdivr
aad
faddp
pop
out
mov
int3
inc
mov
rorb
lods
cli
sub
shrb
or
mov
addb
test
mov
sub
mov
push
jnp
add
clc
mov
cld
jle
cmp
in
roll
and
or
dec
adc
sub
sti
sbb
sub
mov
cmpsb
popf
call
xlat
lock
movsl
int3
sub
sub
enter
fbld
sub
cltd
roll
sbb
lret
mov
jl
stc
sbb
push
arpl
add
mov
rclb
pop
pusha
add
and
cmc
dec
cltd
xchg
adc
js
adc
clc
sbb
mov
xlat
jns
mov
push
jnp
and
in
push
mov
sub
dec
push
mov
cs
sub
push
call
movsb
cmc
sub
mov
push
push
shlb
cmp
stc
inc
dec
cmpsl
adcl
pushl
fisubrl
and
call
lock
add
enter
int3
cmp
cli
shll
mov
push
and
push
mov
add
fnstcw
push
in
mov
loope
cmpsl
cli
lret
lods
pop
inc
movsl
cmpsb
add
scas
arpl
aam
xor
cltd
imul
cld
mov
xor
adc
cs
rclb
xlat
jno
cltd
cli
xlat
xchg
lea
fucom
add
mov
into
pushf
addr16
imul
lret
add
leave
stc
fwait
ja
pop
push
pop
cmp
xorb
cmpsl
fs
dec
push
jle
cli
repz
sub
rorb
xchg
push
push
sbbb
mov
fwait
jnp
dec
int3
sarb
insl
stos
push
outsl
ss
outsl
fdivrs
shll
ljmp
dec
out
mov
or
lock
roll
mov
xor
in
outsb
fs
adc
add
insb
jnp
xchg
jne
in
sbb
adc
sti
sbb
mov
push
xchg
subb
add
sbb
or
int3
movsb
mov
or
outsb
insb
add
push
clc
jnp
ret
mov
add
xchg
fiaddl
add
cmpsb
shll
out
out
push
adc
jle
shlb
cmp
and
in
sbb
mov
jbe
push
mov
and
adc
xor
add
stos
pop
push
jnp
outsb
and
adc
arpl
inc
sub
mov
jmp
push
jb
fcomi
xlat
xchg
cmpsb
cld
test
divb
xor
mov
or
sub
lods
pop
mov
mov
loop
mov
nopl
mov
fmull
cli
mov
cmp
dec
dec
jmp
sahf
out
dec
fistl
inc
out
hlt
test
stos
jbe
jge
in
mov
inc
lret
jle
push
adc
cmp
sub
int
loope
and
stos
cmpsl
lods
cli
sti
mov
inc
stos
push
out
test
mov
xchg
clc
sbb
xor
xchg
push
rolb
mov
push
push
push
loope
ss
sub
dec
lret
push
jno
gs
pusha
adc
jmp
js
hlt
jbe
fwait
ret
pop
push
scas
jmp
jbe
fcmovnbe
inc
int3
mov
rcll
iret
pop
jbe
adc
shlb
outsb
mov
mov
mov
push
or
mov
scas
inc
sbb
je
pop
pop
add
dec
movsb
ret
pop
rcrl
push
rcrl
shlb
push
inc
popa
or
xor
pushf
mov
mov
mov
aad
jns
xor
pop
cltd
xchg
lds
outsb
dec
mov
mov
jno
enter
out
push
inc
ss
push
and
dec
lret
xchg
cmp
js
xor
and
das
in
or
in
sub
jb
lret
stos
push
xchg
adc
xchg
xchg
lcall
outsl
in
js
pop
lret
mov
enter
iret
aas
repnz
fwait
data16
or
xchg
add
mov
sbb
sbb
pop
jg
inc
or
sbb
in
int3
cmp
mov
insb
test
adc
pop
or
mov
pop
and
jmp
jle
mov
add
xlat
xchg
adc
dec
gs
dec
pop
aas
jne
popf
insb
les
xchg
sbb
cmp
or
inc
stc
pop
mov
mov
dec
mov
ds
data16
xchg
xor
mov
pop
sbb
call
cmp
rclb
adc
loopne
mov
cmp
aam
arpl
test
mov
and
mov
loope
mov
icebp
jmp
out
pop
adc
iret
xor
mov
mov
stos
sti
mov
mov
jno
inc
push
adc
fbstp
jno
add
or
xchg
filds
or
xlat
lock
mov
std
xchg
scas
cltd
sbb
sarl
inc
jle
lods
xchg
mov
jg
xchg
push
popf
shr
mov
arpl
mov
sbb
pop
addb
bound
xchg
mov
sbb
adc
in
dec
jecxz
mov
rcrb
lds
test
divl
jb
jge
aas
std
mov
add
enter
xchg
add
rclb
inc
lcall
cmpsl
mov
lods
ret
mov
mov
pop
add
jae
sub
scas
mov
aam
lcall
jno
flds
cli
outsl
push
bound
loop
or
lahf
repz
adc
mov
outsb
push
dec
jne
xchg
cs
rcrb
in
or
xor
xchg
les
int3
inc
mov
lret
cltd
lcall
data16
push
int
push
push
adc
add
lret
cli
leave
out
ds
dec
in
adc
inc
icebp
scas
cmpsl
lea
hlt
cmc
sbb
sbb
int
dec
add
cmp
cmc
divl
cmp
scas
dec
xchg
and
popf
into
out
iret
adc
sub
lahf
mov
iret
push
adc
pop
movsl
stos
arpl
jns
sbb
jae
mov
addb
sbb
push
jnp
nop
jne
pop
test
les
loopne
cmpb
es
fwait
or
lea
cwtl
pop
push
out
or
lea
cmp
sub
dec
sbb
mov
cmc
or
or
add
dec
and
in
xor
mov
sub
into
xchg
mov
pop
les
ds
mov
pusha
mov
mov
arpl
aaa
dec
push
push
inc
push
and
push
cltd
and
aas
sbb
inc
in
push
lahf
sbb
push
mov
xchg
xchg
popa
push
jmp
enter
dec
ss
scas
jecxz
push
dec
xchg
dec
push
mov
xchg
mov
and
jns
lods
inc
je
ret
inc
mov
xchg
dec
test
scas
sbb
push
incb
lock
mov
shrb
nop
jl
sbb
and
adc
mov
lods
adc
fisttps
loope
in
jmp
mov
cmp
ret
std
test
push
xlat
pop
idivl
loop
fwait
inc
out
xchg
enter
jecxz
test
lret
push
jg
or
pusha
cmp
sbb
pop
out
jne
cmpsb
arpl
adc
jo
inc
insb
mov
shlb
incb
fsubs
add
fwait
push
shlb
jg
fcmovb
push
mov
mov
jne
add
lret
adc
mov
aad
cs
xchg
sti
or
or
test
jp
sti
call
mov
xor
lods
push
in
rorb
inc
sub
loopne
mov
adc
xor
sahf
ljmp
xor
push
pushf
mov
lds
adc
and
sbbl
pusha
inc
out
loope
cld
rorl
xor
cltd
cmc
stos
mov
xchg
mov
icebp
push
add
out
xchg
mov
mov
mov
jmp
stc
cmp
fucomi
mov
fistps
scas
inc
cltd
sbb
dec
xchg
stos
stos
cmc
rcl
push
pop
ja
adc
inc
inc
inc
sbb
fldcw
push
scas
adc
int3
mov
fdivr
dec
shl
out
mov
xor
adc
sub
adc
mov
sbb
aaa
pop
frstor
test
and
daa
ss
mov
adc
out
adc
sub
mov
jb
adc
mov
in
test
insl
loope
adc
add
or
lods
stos
dec
jmp
xchg
test
jle
into
sbb
jae
jecxz
mov
and
mov
arpl
mov
shl
dec
cltd
lea
mov
aas
lahf
pop
or
addr16
jle
insl
and
mov
ds
cmp
mov
icebp
imul
xchg
push
inc
xchg
sahf
lret
pop
inc
fistpl
mov
xchg
ds
and
stos
inc
ficomps
jg
repz
pusha
jbe
repnz
push
push
mov
popw
dec
xorb
dec
cli
js
out
lock
jl
cmp
in
ret
imul
xor
cs
out
shrb
xor
stos
push
out
adc
mov
sahf
xchg
or
push
sbb
leave
popf
dec
jmp
jp
jbe
dec
daa
pop
pop
cmpsb
add
dec
sbb
lea
mov
testl
xor
je
js
inc
or
mov
bound
and
jmp
nop
lods
lods
and
xor
sbb
or
test
mov
repz
push
cli
ljmp
jbe
scas
lea
call
mov
sbb
sahf
and
adc
mov
scas
pop
push
mov
in
pop
xor
adc
jo
out
mov
push
pop
add
int
dec
ljmp
mov
btr
insb
push
pop
shlb
xchg
addr16
or
aam
inc
inc
test
stos
mov
ret
adc
jl
xor
push
addr16
mov
dec
leave
dec
ljmp
ret
pop
push
fbstp
or
std
orl
pop
clc
mov
push
bound
xchg
in
mov
movsb
cs
int3
loope
xchg
mov
jne
jne
adcl
sahf
mov
cli
add
sub
pop
and
cmp
cmpb
out
jg
lret
out
imul
out
push
and
inc
xor
ds
pop
rclb
jae
fwait
int3
arpl
jno
scas
out
mov
xchg
jecxz
mov
ret
jecxz
nop
inc
cmpsb
je
test
cmpsl
dec
add
adc
loopne
xor
ja
insb
loope
repnz
aas
cltd
ret
mov
enter
pop
sub
lock
test
fs
jge
add
jo
lret
rcrb
lret
push
cmp
xor
stos
subl
ljmp
loop
loope
mov
bound
in
sub
fists
mov
repnz
je
xchg
fildll
inc
imull
repnz
xchg
xor
jae
jl
roll
xor
stos
sbb
mov
jmp
mov
pop
inc
jb
and
push
and
lret
faddl
imul
sub
lret
movl
jno
lret
mov
xor
adc
dec
sub
fmuls
orb
ror
push
notb
mov
push
sbb
negb
cli
fdivl
mov
scas
inc
jno
mov
lods
jbe
lods
sti
and
das
sub
in
mov
mulb
int3
push
mov
and
mov
enter
imul
and
mov
pop
out
dec
insl
faddp
jb
jecxz
mov
or
pavgw
lds
rolb
mov
jp
andl
mov
jb
mov
insb
roll
lahf
or
fcoms
fists
add
sbb
repnz
aam
loopne
mov
test
push
test
cmp
and
iret
testl
cmp
adc
add
xchg
pop
or
scas
mov
and
jmp
movsb
ss
movsb
add
dec
bound
and
adc
dec
into
adc
shrl
std
loope
dec
movsl
xchg
je
movsb
mov
cmp
shll
and
jecxz
mov
adc
mov
stos
jl
cs
and
aad
int3
mov
sub
or
lods
cmpl
ja
add
out
outsb
jecxz
addr16
ja
stos
nop
std
push
mov
jge
imul
xor
mov
nop
pop
add
push
xor
xor
loop
cwtl
mov
push
pop
sbb
mov
into
jp
ror
pop
add
lock
and
scas
mov
mov
jle
mov
mov
sub
pop
es
sub
aas
push
sbb
ret
les
mov
push
jne
xor
fsts
jno
xor
cltd
lds
pop
jo
int3
loope
adc
out
insb
fnstcw
cmp
ja
or
dec
push
lea
jg
adc
adc
mov
ret
ret
std
push
fdivrl
ficoml
pop
sti
inc
data16
or
adc
ss
ja
xor
pop
mov
shrl
stos
loopne
dec
mov
fwait
mov
imul
push
push
pop
stos
rcr
add
and
es
sti
repnz
out
fucom
das
loopne
insb
mov
xchg
sub
pop
and
or
es
jle
mov
cli
xchg
push
jmp
popa
notb
xchg
fdiv
push
mov
add
and
testl
mov
jbe
in
jne
mov
mov
xor
hlt
mov
sti
adc
fisttpll
dec
push
loopne
or
mov
or
jmp
sub
stc
stos
stc
and
sbb
xchg
xlat
fstpt
lcall
or
add
ljmp
inc
test
ret
in
fnstcw
fildll
pop
add
and
roll
mov
mov
outsl
mov
xlat
adc
mov
xchg
movsl
or
out
and
inc
add
and
rcr
addr16
add
aad
cmpb
xchg
int3
hlt
inc
scas
xchg
fsub
rolb
xchg
add
cmpps
addr16
dec
repz
mov
test
sbb
repnz
cmp
sbb
bsf
sub
iret
fs
mov
and
repnz
jle
das
add
mov
insl
or
mov
jmp
add
jnp
xor
and
pop
or
mov
and
push
cmp
mov
inc
fcmovu
add
mov
cmp
ret
xlat
xor
inc
jae
push
pop
frstor
dec
xchg
and
xchg
test
fsubs
jne
cmp
pop
jno
std
insl
inc
pushf
insl
jp
xor
in
out
inc
lret
push
aad
insl
data16
imul
jg
mov
pushf
and
push
push
push
jmp
fdivs
hlt
jp
cmpsb
cmpsl
test
scas
jo
dec
jnp
add
ficoms
bound
add
addr16
repnz
mov
sbb
inc
push
movb
fwait
pop
outsl
mov
sarb
adc
dec
lock
pusha
cmc
sahf
mov
les
xchg
jecxz
sub
cmp
fldcw
pop
or
add
in
lahf
mov
push
mul
add
push
or
add
inc
icebp
cwtl
sbb
je
test
aas
adc
call
loop
jno
adc
inc
jb
rol
notb
xchg
mov
out
cli
adc
insb
lock
sub
or
inc
scas
dec
jl
push
cmpsl
adc
or
mov
out
lcall
push
xchg
rorl
push
xor
cmp
mov
pusha
push
mov
jbe
adc
cmpsl
xchg
aaa
cmp
cmc
xchg
ret
iret
adc
mov
sub
hlt
jge
mov
insl
stos
xor
cmp
test
jge
lock
fdivrp
xchg
xchg
adc
cmovge
outsl
rorb
sbb
xchg
icebp
mov
jbe
jbe
pop
pushf
aad
xchg
pop
and
xchg
inc
aad
test
iret
mov
push
stc
or
adc
rcrl
fnsave
or
inc
lcall
or
push
mov
sub
mov
das
dec
adc
xor
fwait
xchg
mov
jne
inc
add
enter
xchg
push
ja
mov
mov
ret
fadds
fldl
inc
sbb
out
lret
stc
movsb
outsl
xor
push
mov
test
test
scas
add
pop
push
pop
mov
jl
push
fnsave
pushf
dec
jp
in
pop
aas
mov
in
xor
enter
inc
push
push
cwtl
mov
movsl
cmp
or
mov
inc
jae
clc
cli
cmp
lods
jno
out
pushf
mov
jnp
pop
outsb
loopne
fcoml
lcall
cmpb
inc
lods
ss
popa
jnp
lahf
aaa
enter
lcall
pmullw
lock
mov
mov
push
insb
xchg
adc
inc
mov
inc
mov
insb
outsl
cmpxchg
addr16
inc
xor
fsubr
xchg
insl
add
icebp
in
or
adc
sub
sbb
push
loopne
cli
iret
lods
sub
pop
inc
push
incl
ja
in
sbb
xchg
cwtl
repz
out
inc
mov
vcvttps2dq
dec
push
push
scas
cli
mov
inc
jns
pusha
or
sub
push
or
mov
mov
nop
cltd
adc
testl
int3
int3
xor
repnz
mov
in
dec
pusha
mov
out
and
dec
test
in
addl
xchg
inc
adc
ds
insw
fisubs
adc
push
leave
es
loop
mov
int
decb
and
cs
mov
dec
das
xchg
inc
mov
in
test
icebp
sti
ds
sbb
inc
cmpb
stos
cmc
xor
push
push
jae
fadds
xor
out
xchg
mov
mov
mov
xorb
sub
xchg
xchg
in
bound
shlb
cmp
aam
jmp
sahf
fcomps
push
daa
pop
mov
shlb
push
mov
dec
mov
dec
in
hlt
pop
mov
add
nop
mov
das
xor
addr16
dec
rolb
mov
or
iret
sarb
jge
test
mov
ja
lcall
int
jbe
lods
les
insb
jo
mov
dec
rcl
inc
int3
sbb
ret
xchg
lods
pushf
and
fs
aam
jbe
sub
xchg
test
shl
pop
jb
cmp
insb
into
popf
outsl
js
lods
xor
popl
fbstp
add
movsl
leave
mov
mov
lahf
mov
fnstenv
or
pusha
adc
lcall
mov
and
fs
adc
ds
aas
stos
rcll
loopne
movsb
pop
sbb
xchg
mov
mov
dec
adc
ret
or
das
test
mov
xlat
mov
pushf
fs
xchg
sar
or
jnp
jo
es
imul
push
aam
mov
inc
stos
dec
fwait
add
in
out
xchg
mov
lock
add
sbb
out
mov
mov
pop
lock
sbb
cli
cmp
xor
cmpsb
cmp
sti
and
dec
jne
push
lret
neg
cs
cmpsb
std
push
push
sub
dec
xor
and
dec
stos
shll
sarb
mov
mov
jno
xor
test
std
mov
rclb
add
in
sbb
push
jp
clc
push
or
mov
loop
mov
dec
shlb
clc
mov
fistpll
mov
fidivs
lcall
inc
add
or
mov
adc
adc
cli
push
sub
push
insl
mov
aam
out
bound
cmc
adc
pop
mov
les
pop
cmp
xchg
movsb
xchg
fidivl
mov
inc
fidivl
dec
call
push
add
loope
jbe
and
rcll
scas
cmc
push
je
fisubrl
adc
addr16
xchg
push
mov
inc
ret
aaa
out
fsubs
fisttpll
cmp
loop
xlat
adc
call
dec
jle
out
mov
insb
inc
insb
xor
pop
lea
adc
data16
ret
mov
repz
mov
add
clc
add
mov
mov
mov
fnstenv
in
pop
in
and
inc
test
aam
lret
jmp
mov
mov
add
xchg
and
or
rorb
test
stos
pop
mov
arpl
iret
sbb
aad
sbb
adc
jge
lret
jle
cmpsb
fs
and
mov
pop
lods
ret
jg
add
out
xor
and
movsb
adc
insl
lret
fcmovbe
pop
pop
movsb
dec
arpl
decb
jno
fwait
or
popa
sbb
dec
cmp
divb
cmp
rolb
adc
loope
rcll
or
lea
imul
cmc
mov
dec
sbb
scas
cmpsb
stos
pop
pop
ja
das
or
sub
jo
jecxz
ret
popa
rol
aad
pop
adc
ja
push
pop
sub
jp
std
aad
mov
rcll
inc
aad
lock
gs
ja
inc
sahf
xor
rol
cltd
ds
shrl
xor
push
jg
sbb
xor
stos
fimuls
test
xor
push
mov
sub
mov
and
test
dec
adc
and
xchg
ret
les
lods
repz
lahf
cwtl
sub
mov
xor
orl
adc
shrb
or
popa
out
aaa
sub
cmp
sbb
mov
mov
adc
mov
mov
mov
js
push
in
mov
leave
in
sahf
adc
ret
mov
repnz
fcomps
lock
xor
pop
cmpsb
hlt
push
lods
addr16
lcall
int3
xchg
sub
xor
leave
jno
mov
pop
dec
bound
nop
add
mov
sub
jno
cltd
scas
and
pop
dec
negl
and
push
mov
inc
in
nop
adc
call
add
push
hlt
sbb
dec
pushf
std
inc
bound
inc
in
in
shll
inc
in
nop
adc
into
mov
cmp
enter
ret
mov
push
or
add
sahf
push
flds
sub
or
into
adc
cli
pusha
jbe
pop
outsb
dec
push
sbb
inc
dec
adc
pushf
or
push
rcrl
outsb
fdivl
fs
mov
add
clc
jne
movsl
xchg
loop
cmp
arpl
xchg
pop
sahf
jecxz
mov
dec
mov
cmp
call
sub
leave
jmp
and
mov
cmpsl
mul
ss
sub
pop
inc
mov
xor
fnstcw
sub
mov
jecxz
decl
mov
stos
test
setbe
or
xchg
and
push
cld
lods
insb
jmp
sbb
jns
scas
insl
stos
mov
pop
inc
xchg
push
jns
insl
cmpsl
dec
inc
cwtl
mov
mov
test
in
or
filds
mov
xchg
xor
js
jmp
ret
cli
sub
adc
mov
sbb
inc
loopne
jne
jbe
popa
jge
xchg
jg
ret
test
push
lret
lahf
dec
in
ret
cwtl
mov
pop
jg
jle
lods
rcrl
jl
mov
xor
sbb
cmpsl
test
mov
mov
call
pop
dec
mov
nop
insl
out
adc
inc
and
xor
pop
cmp
in
int3
rorb
cmp
mov
movsb
hlt
ret
out
jne
les
dec
insl
adc
shrl
xor
aad
cmp
insl
movsl
or
and
sub
out
sarb
jno
repnz
arpl
inc
cmc
push
cmp
repnz
mov
fs
lods
xor
mov
cmp
cmc
call
lea
aas
mov
push
pop
ja
and
lock
ret
mov
pop
shrl
sbb
pop
add
pop
movsb
mov
cmp
out
jg
pop
movsl
pop
mov
stos
dec
repz
mov
repz
fnstenv
in
push
inc
insb
add
loopne
jp
pop
cmp
mov
lcall
jno
mov
sete
jne
jp
sbb
sub
adc
test
mov
ret
call
jmp
insl
adc
mov
xlat
lock
xchg
ret
dec
or
xchg
inc
in
xor
mov
hlt
or
dec
test
inc
mov
pop
mov
test
rcrb
push
xchg
or
imul
push
jb
dec
daa
testl
pushl
inc
xchg
push
jae
out
imul
ficompl
imul
movsl
cmpsl
pusha
lahf
sbb
shlb
mov
push
push
stos
and
mov
popa
push
int
inc
adc
fiaddl
mov
dec
xlat
ljmp
sbb
sahf
xchg
aad
sahf
out
xlat
out
mov
fisubs
enter
cmpsb
sub
sub
int
and
sub
push
je
sar
rcrb
pop
mov
jns
mov
fs
dec
adc
jl
pushf
and
sub
gs
js
dec
jl
xor
xchg
jp
mov
popa
fmul
cmp
mov
and
mov
sbb
int3
out
aad
xchg
adc
inc
jb
mov
xor
das
ret
sbb
fisubrs
stos
push
stos
ss
or
cmpsl
jg
push
ja
sbb
fidivs
iret
testl
pop
mov
xchg
cwtl
scas
shll
repnz
xchg
imul
pop
aas
lret
inc
ss
and
push
out
dec
aam
jns
cwtl
mov
jbe
movsb
lods
nop
jg
mov
ss
cmp
iret
int3
fnsave
and
cwtl
aam
cmpsl
dec
xchg
das
movsl
add
fxtract
push
test
push
cltd
daa
and
xor
cltd
ljmp
mov
jb
imul
or
xchg
push
fbld
dec
fwait
mov
loope
test
pop
pop
push
dec
mov
mov
lods
es
test
cmp
sbb
sub
mov
jmp
add
sbb
sbbl
pop
sbb
inc
inc
std
call
or
pop
cmp
les
xchg
sub
mov
dec
ficoms
mov
loope
fwait
stc
idivb
jb
push
lcall
inc
pop
fists
out
mov
xlat
add
cltd
xchg
das
cmp
call
cmpsl
mov
stc
push
and
pop
or
sub
test
int
cld
aas
or
lock
cmp
jp
movsb
push
aad
mov
fstl
inc
add
stos
inc
mov
pop
ss
test
rcll
insl
lods
pusha
xor
mov
outsl
loopne
jle
shl
push
aaa
icebp
mov
dec
cmp
mov
fidivs
out
xchg
cmpsl
or
in
adc
pushf
push
cmp
rorl
int
dec
inc
push
divb
adc
mov
cli
sub
imul
cmp
cmp
push
das
insb
int3
in
dec
fs
lahf
aam
adcl
pop
adc
dec
mov
outsb
pop
jl
jo
push
call
scas
gs
and
mov
sti
ljmp
xor
das
loopne
pop
push
in
inc
pop
mov
call
popf
mov
inc
inc
aam
cld
aam
mov
fxch
out
inc
jge
inc
adc
inc
mov
repz
and
aam
mov
mov
xchg
inc
jg
pop
inc
dec
jnp
jl
mov
rcrl
dec
and
enter
js
cmp
mov
mov
xchg
ror
es
imulb
cmp
popa
jb
sbb
mov
inc
sub
andb
fs
mov
and
jg
sub
negl
adcb
push
push
mov
jae
es
fdivs
mov
fmul
aad
mov
inc
sub
popf
add
xor
mov
jno
or
sub
jae
pop
lods
enter
lret
cmp
inc
movsl
inc
pop
pop
jl
mov
lods
inc
fiaddl
scas
cmpl
lods
jb
rcl
scas
mov
ja
pop
pop
outsb
fldl
out
ret
hlt
mov
fimull
mov
xor
ss
gs
insl
jmp
ss
test
lods
xchg
add
jp
xchg
or
addl
mov
ret
adc
sbb
int
loopne
lock
pop
fimull
call
movups
mov
cmpsl
mov
pop
out
aad
pusha
dec
fs
xchg
add
jg
and
scas
movsl
inc
mov
jle
add
movl
lcall
cmp
cli
aad
mov
pop
adc
arpl
xchg
notb
xor
jae
shll
into
mov
insb
dec
jne
rcrb
fiaddl
sub
mov
cld
mov
mov
jb
xor
dec
hlt
fimuls
fidivrs
and
jecxz
jmp
xchg
dec
enter
pushf
sbb
sub
cmp
xchg
fabs
mov
mov
push
insl
adcl
dec
std
and
mov
jmp
ja
leave
cmpsb
mov
sub
orb
sub
jge
fidivrl
cmpsb
bound
sbb
inc
dec
push
adc
pusha
push
sbb
and
sbb
mov
shlb
rolb
jno
sbb
mov
xor
jmp
sbb
subl
das
mov
iret
cmp
movl
push
call
ljmp
fistpll
test
movsl
cmc
pop
data16
sbb
pop
jns
cld
psubsb
xlat
mov
xchg
push
mov
pop
mov
je
push
roll
push
push
repz
in
jbe
ja
mov
mov
or
xor
mov
inc
pop
jmp
js,pn
lcall
push
test
push
xlat
into
push
dec
xor
cltd
es
jno
add
xchg
mov
in
mov
mov
pop
or
aam
sub
das
jbe
cmpsl
sbb
push
cmp
adc
outsl
lret
in
nop
push
ror
lods
lock
cwtl
cmp
mov
insl
fdivrs
mul
xor
clc
movsb
fsts
int3
popa
xchg
in
dec
mov
jae
mov
adc
cwtl
cmp
inc
xchg
xchg
pushf
sahf
push
xlat
repz
cmp
sbb
daa
enter
int
bound
push
dec
mov
movsb
and
inc
add
xlat
mov
stos
lret
push
pushf
test
fwait
mov
sahf
ljmp
int
add
dec
push
hlt
cld
lods
daa
mov
out
addr16
or
sbb
nop
mov
cmp
testb
decl
jle
in
push
rolb
xchg
out
in
adc
pop
sub
jbe
je
xchg
insl
push
and
lods
add
push
out
sahf
pop
insl
pop
xchg
subl
adcb
sti
xor
cmp
rol
push
std
and
enter
fstl
xchg
inc
adc
or
pop
cs
fdivrs
or
outsl
mov
das
push
pop
je
pop
xchg
cmpsl
into
pushf
push
pop
xlat
in
pop
fdivp
ret
mov
dec
push
dec
cmp
in
sbb
out
and
rsqrtps
pop
jnp
mov
rcrl
jecxz
push
pop
dec
in
cmp
push
rcll
lret
insb
sarb
jo
add
ret
jle
lahf
push
and
iret
aaa
loope
cmpsl
or
xor
lods
out
add
mov
cmpsb
pop
mov
mov
mov
mov
mov
jl
and
mov
dec
push
out
ss
pushf
fwait
call
idivl
jno
cmp
xchg
pop
cmc
shrb
adc
inc
stc
cld
pop
xchg
jge
pop
in
and
addr16
mov
lds
jne
add
sub
mov
dec
pop
daa
loopne
xchg
imul
or
arpl
push
cmp
es
add
loope
lods
outsl
rorl
int
xchg
in
int
push
inc
cmpb
adc
sub
add
sbb
mov
jb
cld
clc
rorl
jne
mov
mov
dec
mov
mov
xchg
xor
insb
cmc
imul
mov
or
or
xor
adc
jnp
inc
repnz
jecxz
lcall
sbb
dec
inc
bound
xchg
sbb
add
iret
gs
sti
sbb
cs
lret
stos
mov
mov
decb
scas
popf
cmp
xor
les
jno
and
test
out
mov
push
bnd
shlb
cmpsb
lods
xor
in
and
xchg
sbb
pop
xchg
std
jmp
stc
mov
dec
icebp
scas
and
ss
mov
pop
cmpl
dec
cwtl
push
pusha
in
dec
in
pop
dec
aad
dec
push
shlb
pop
aaa
adc
scas
dec
mov
cmpsl
jge
leave
enter
out
push
aad
gs
cs
mov
aad
add
dec
jns
popf
jmp
dec
xchg
addl
std
ds
adc
inc
xlat
cmpsb
filds
stos
mov
pop
cmp
pop
sbb
adc
pop
loope
pop
adc
cmpsl
and
cmp
mov
cmp
xor
push
xchg
mov
rolb
ds
int
mov
or
lahf
idivl
jmp
sbb
inc
inc
ja
sub
out
push
xchg
movsb
and
lods
or
push
push
mov
and
mov
repnz
mov
cmpb
ljmp
inc
fadd
or
loopne
or
daa
outsl
je
cmpsb
fisubrs
lock
test
inc
add
and
dec
fs
mov
imul
xlat
adc
out
pop
add
lahf
rolb
mov
pshufw
loope
lahf
mov
xlat
in
xchg
in
sub
xor
inc
inc
ficoml
push
mov
jno
loope
push
mov
cmc
push
dec
fists
stos
imul
pop
inc
cmp
xchg
je
inc
jae
push
push
sbb
push
loope
mov
adc
ds
and
jmp
jns
xor
mov
insl
mov
ret
cltd
mov
iret
outsb
arpl
add
aaa
mov
push
test
orl
stc
aaa
xor
data16
pusha
push
inc
or
xchg
cs
lret
dec
pushf
push
ret
mov
add
jge
cmp
hlt
cli
dec
and
stos
mov
dec
shrl
sub
sub
pushf
and
gs
mov
fbld
int3
ret
in
dec
into
xchg
xor
push
jg
andb
dec
andb
mov
mov
movsl
inc
dec
xor
repnz
push
mov
lods
int
sub
imul
fwait
into
jg
xorl
dec
icebp
push
pop
int
cmp
dec
jo
or
add
jb
movsb
adc
mull
mov
daa
or
cmp
push
sbb
lods
xchg
cmc
mov
or
jle
mov
fcoml
and
cmp
out
mov
les
sbb
push
xor
jns
jae
mov
xchg
loop
xchg
fwait
add
pop
shl
mov
xor
add
push
mov
pop
arpl
sub
rol
lock
inc
jg
dec
jp
mov
cmc
jo
mov
lock
rcll
jne
sub
es
xor
ljmp
push
and
xor
mov
mov
mov
sti
sub
movsb
add
imul
shlb
dec
mov
push
fimuls
jns
gs
fcmovnu
imul
jae
scas
insl
mov
push
cmp
push
leave
mov
mov
sub
mov
rcrl
cwtl
std
jmp
cmp
xlat
std
inc
sbb
mov
ss
fadds
sbb
std
inc
sarb
cmp
outsl
or
jg
les
dec
cmp
insb
movsb
ja
sbb
lcall
fs
add
cmp
or
lret
lcall
jo
sarl
cmpsl
rcrl
dec
push
cmp
and
testl
call
hlt
xchg
cmpsl
je
sbb
cld
cmp
adc
adc
inc
lods
divl
xor
sbb
icebp
repnz
push
in
and
jbe
mov
cli
xchg
imul
cmpsb
fstpl
xchg
int3
test
arpl
les
int3
add
jb
pushf
stos
cmp
inc
arpl
test
dec
sub
leave
jns
jp
jge
push
ret
dec
cmp
cmc
jno
fcoms
lahf
test
xlat
jo
jne
fadd
imul
inc
add
adc
mov
imul
dec
mov
out
lahf
les
scas
xchg
cmp
rdmsr
or
mov
imul
mov
mov
and
out
pop
aaa
lods
les
stos
inc
jns
test
sbbb
dec
and
scas
hlt
addl
std
out
mov
pop
inc
lret
loop
jecxz
lock
fcomi
addr16
pop
jb
xor
adc
mov
addr16
cmp
push
pop
loope
mov
in
jle
jecxz
cmp
jbe
inc
push
push
dec
mov
mov
int3
sub
adc
test
push
mov
xchg
and
mov
ja
scas
pop
dec
cmp
aam
mov
and
jo
lret
std
add
mov
in
pop
sub
pop
pop
aad
loope
inc
dec
adcb
nop
pop
sub
adc
dec
lea
idivl
jp
add
jbe
cld
pop
in
dec
jo
test
cwtl
mov
or
stos
lret
push
das
cmp
push
jne
scas
out
and
push
inc
and
dec
dec
cwtl
loope
dec
mov
jp
sti
xchg
add
xchg
ljmp
fcmovne
popf
sbb
xor
sub
push
fs
ror
fsubs
fcmovnu
in
push
mov
nop
in
or
mov
mov
insb
or
jl
adc
fadds
and
fcomp
pushf
mov
fisubrs
icebp
mov
loop
sbbb
or
xorb
push
pushf
cmp
cmpsl
mov
stos
dec
div
and
outsb
addr16
scas
mov
andl
mov
jge
les
inc
dec
std
mov
loopne
jmp
lea
xor
inc
test
push
decb
xchg
inc
aad
pusha
insb
ret
mov
xchg
inc
imul
cmc
and
mov
in
cmp
jo
fwait
or
iret
push
jg
xorl
out
movsl
sahf
mov
sti
push
loope
mov
ljmp
pusha
cmpsb
or
test
adc
pop
shll
mov
push
mov
fbld
bnd
cmpsb
mov
push
insb
clc
jge
pop
loope
enter
iret
xchg
dec
ja
pop
cmp
push
mov
mov
enter
pusha
imul
mov
out
mull
inc
mov
les
jmp
mov
dec
and
push
adc
push
push
xor
pop
mov
sbb
arpl
loop
lret
cli
jo
pop
add
pop
aaa
jb
jge
pusha
ja
or
sub
in
mov
push
inc
inc
std
add
xor
shlb
or
stos
aad
mov
dec
inc
sbb
je
dec
inc
mov
dec
cmp
pop
cmp
and
in
sti
sub
mov
adc
inc
out
push
dec
test
jle
inc
mov
add
mov
pop
out
jbe
in
mov
sbb
mov
mov
dec
je
aas
lcall
bound
push
cmpsb
dec
ja
les
rolb
movsb
mov
sbb
and
pop
aam
inc
jg
imul
lods
fisubrl
jge
xchg
pop
cmp
xor
dec
mov
shrb
movsl
mov
lods
bound
out
in
negb
push
xchg
sbb
sahf
jbe
cmp
jnp
jo
lcall
sub
jnp
xchg
inc
pop
mov
repz
mov
ret
add
sub
fistpll
sub
mov
loope
cltd
arpl
pop
out
mov
pusha
fwait
pop
push
fwait
sbb
lret
xlat
adc
add
es
clc
push
cmp
jge,pn
scas
jae
dec
dec
push
pushf
sbb
xchg
clc
xor
bound
pop
ret
shlb
adc
lock
jge
repnz
mov
jae
mov
mov
dec
xlat
adc
lret
repz
stos
push
pushf
int3
lret
testl
ss
push
inc
cmpl
and
jl
sub
enter
inc
push
xor
in
ret
test
pop
jmp
jns
out
push
pop
inc
or
sarl
gs
pusha
lret
repnz
cmp
mov
lea
std
jp
sbb
xor
stc
fwait
movsb
divl
xor
adc
or
inc
imul
pusha
mov
in
leave
adc
dec
movsb
adc
cltd
popa
inc
push
pop
iret
and
jl
and
push
mov
pop
mov
mov
mov
rep
cmp
mov
cmp
dec
addl
mov
jnp
loopne
test
pop
pop
mov
mov
and
or
mov
fdivrs
scas
out
push
lock
jb
shl
and
inc
ljmp
call
orb
mov
inc
shll
jecxz
inc
inc
sqrtps
jno
mov
mov
or
dec
arpl
insb
mov
jle
push
add
popa
dec
add
lret
fcomps
insb
xchg
jb
rorb
lods
adc
push
or
cmp
fsubrl
xor
insb
leave
or
test
adc
mov
pop
add
repz
cld
push
push
cltd
xchg
stc
jg
roll
pop
neg
cs
xchg
hlt
xchg
subl
pop
adc
cli
test
ja
sub
fistps
lcall
cmp
mov
jnp
jae
shlb
adc
mulb
test
scas
push
or
push
mulb
jnp
sarb
add
sbbl
sahf
lretw
insl
and
scas
mov
xchg
add
imul
ret
mov
xor
or
scas
lods
loop
mov
and
hlt
mov
pop
dec
mov
pop
xchg
jo
jbe
fstpl
hlt
out
fisubs
adc
mov
shl
cwtl
adc
sub
in
inc
cmpsb
add
cmp
scas
cmpsl
je
mov
mov
xor
stos
and
or
ds
popf
dec
ss
in
or
xorl
xor
ficoml
pusha
fimuls
orl
and
cld
mov
sub
sub
xchg
add
shll
in
add
xor
adc
push
mov
das
dec
ss
rcll
loopne
mov
shrl
inc
shr
xor
cmp
aam
lods
subl
lahf
push
push
pop
push
xor
ret
outsl
adc
mov
push
sbb
mov
xchg
fnstenv
sbb
test
push
mov
int3
dec
inc
mov
push
lahf
cmpsb
das
cltd
cli
mov
pop
ja
push
mov
push
lcall
mov
lea
jl
xor
sbb
cmp
pop
loopne
insl
pop
iret
pop
jae
sbb
mov
insl
pop
js
cwtd
and
mov
xchg
pop
outsb
jmp
and
mov
in
pop
pop
mov
rol
call
dec
cwtl
cwtl
mov
jne
fwait
sbbb
mov
fidivs
andl
pop
add
and
jp
fmuls
shlb
adc
cwtl
lahf
push
in
pushf
sbb
iret
aad
gs
add
lahf
push
sub
fstpl
ss
jae
mov
insb
xor
push
mov
call
lcall
int3
mov
push
fcomi
in
test
cmpsl
es
sbb
jecxz
shrd
cmp
pop
dec
jle
sbb
fbstp
sahf
add
push
cmc
pop
je
pop
and
push
xchg
cmp
sub
cmp
sub
ret
sbb
arpl
inc
ret
movzbl
int3
bound
cmpsl
add
or
adc
cwtl
ja
and
loop
lret
pop
inc
jmp
adcl
in
jp
pop
icebp
shll
fstpl
in
mov
add
aaa
sub
pop
xlat
jbe
push
cmp
cmpsl
inc
push
cmc
popf
addr16
test
xor
int
mov
xor
and
sbb
mov
inc
push
fisubrl
cli
ret
mov
jne
mov
push
add
cli
pushf
sub
mov
lret
aaa
mov
pop
popf
sbb
mov
adc
adc
shll
mov
pop
fisubl
stos
xchg
gs
jge
sub
popf
lret
or
push
js
les
pop
dec
mov
mov
imul
jae
cltd
lret
fldenv
adc
aad
pop
push
out
inc
stos
xchg
sub
jbe
adc
mov
lret
push
aam
dec
pushf
push
xor
loope
mov
sub
negb
test
or
leave
and
adcb
or
xor
dec
pop
loopne
cltd
insb
adc
sub
dec
jo
dec
outsl
popf
sub
adc
mov
mov
inc
notb
push
push
lret
nop
add
rcrl
push
fdivrs
cmp
je
cltd
icebp
xor
xchg
cmp
add
jnp
rorl
push
xchg
push
hlt
sahf
or
aam
aas
and
adc
mov
bound
xor
xchg
shll
imul
or
inc
sub
ficoml
cmp
push
gs
push
inc
cmp
jmp
test
mov
test
out
jp
xchg
push
pop
sub
xor
faddl
jmp
popf
sub
mov
pop
jns
das
insb
iret
das
ret
fsubl
pop
adc
xchg
or
pop
cmp
sub
push
data16
xchg
scas
xchg
dec
sbb
push
inc
mov
lea
pop
popa
lods
mov
fbstp
add
and
or
pop
add
push
icebp
andb
xchg
popa
test
mov
inc
inc
sbb
mov
sbb
jno
inc
nop
loope
sbb
scas
jg
sub
test
bound
pop
pop
xchg
aad
dec
mov
cmpsl
inc
xor
push
dec
cmc
sbb
mov
cs
or
in
lret
imul
popf
and
xor
push
out
adc
mov
enter
shl
inc
adc
out
mov
mov
mov
add
cmp
mov
daa
mov
pop
mov
and
roll
mov
mov
dec
test
mov
out
mov
xchg
push
ja
out
jo
out
ja
fucom
jne
clc
in
or
push
inc
cmp
push
push
insl
lods
cmp
mov
adc
rcr
repz
xchg
mov
cmp
dec
inc
adc
xor
mov
outsb
out
mov
mov
fisubs
call
push
jb
mov
adc
jno
adcb
int
outsb
sbb
mov
push
dec
sbb
or
aam
mov
repnz
inc
dec
je
fnstcw
bound
add
fimull
push
xchg
lcall
sti
sub
add
push
sub
mov
and
pop
mov
icebp
xchg
sbb
mov
inc
lret
sub
lea
or
out
repz
cmp
movsb
mov
daa
paddb
ja
add
xor
sti
loope
or
cmc
adc
lods
repz
xchg
push
and
in
inc
inc
sbb
xor
lock
and
sar
lock
or
leave
mov
ret
orl
ja
or
call
push
stos
mov
and
jl
xor
cld
btc
push
ficomps
jae
xchg
imulb
in
stos
mov
inc
sub
mov
fcmovnbe
stos
push
dec
cmp
jge
lds
aas
stos
imul
sub
fwait
iret
or
popf
mov
sbb
push
mov
outsl
or
push
repnz
outsl
lret
in
push
fsubs
dec
cmpl
adc
fisubrl
mov
int3
jns
cmp
mov
repz
xchg
xchg
das
push
jnp
out
add
add
jle
arpl
mov
insl
sbb
dec
jne
sub
sbb
out
cmpl
cmp
inc
push
xchg
fcmovb
adc
and
or
idivl
mov
dec
dec
jae
or
or
sbbb
mov
pop
stc
imul
scas
ljmp
push
clc
leave
push
jmp
orl
mov
fstps
cmpsb
sbb
cs
mov
xchg
push
sub
ds
enter
mov
mov
cltd
fnstcw
arpl
mov
mov
jg
imull
sbb
dec
mov
inc
push
dec
jno
sbb
xor
repz
adc
lcall
xchg
mov
sub
out
mov
jne
sub
mov
sbb
aad
pop
enter
inc
and
mov
jge
xor
testb
inc
inc
les
cmp
ffreep
ret
lahf
imul
jbe
cwtl
adcb
adc
cmp
jno
dec
push
cwtl
add
xchg
lods
std
jo
pushf
mov
jmp
mov
pop
mov
jns
push
out
shlb
dec
sar
pop
int
mov
test
test
in
jne
xchg
lcall
stos
popa
ljmp
sbb
sub
push
mov
nop
cmp
repnz
fstl
jl
add
adc
push
jb
mov
sbb
les
cld
movsb
xchg
add
push
jb
pushf
add
add
in
add
stos
cmp
fnsave
mov
push
stc
mov
xor
sub
roll
mov
addb
mov
lods
mov
xchg
and
inc
rorb
hlt
int
xchg
testl
inc
out
mov
bnd
push
int3
inc
loop
jne
int
shlb
lock
push
js
nop
cs
subb
xchg
or
jl
inc
movsb
xchg
cltd
and
cs
add
xor
div
shlb
test
pop
fidivl
out
mov
jg
frstor
xor
inc
push
mov
repz
pop
inc
fistl
pop
jns
outsl
shrl
fwait
ret
lret
and
inc
and
bound
push
icebp
sub
test
subl
sbb
lock
pushf
fisubs
push
in
cmpsl
cmpl
mov
ret
aad
popa
push
fs
sbb
cmpsb
rorb
adc
pusha
sub
xor
repz
add
fldl
mov
push
jp
jnp
mov
adc
lea
mov
in
insl
jns
shll
xchg
jne
sbb
out
fldcw
or
leave
xchg
dec
outsb
or
insl
add
call
mov
test
and
pop
jle
stc
jmp
cmc
out
or
into
mov
mov
sub
and
fiaddl
push
mov
popf
or
pop
test
lods
push
or
push
movsb
and
xlat
inc
or
cli
push
movsl
dec
cmpsb
and
jg
outsl
pop
cs
mov
out
stos
sub
shll
add
and
lea
pop
aam
imul
insl
test
call
mov
rclb
xchg
ds
cmp
andb
or
icebp
cld
cmp
mov
jle
adc
adc
dec
lret
pop
test
dec
stc
outsb
jo
dec
sub
sbb
sub
sbb
adc
pusha
and
sub
xchg
jge
mov
cmpsl
xorb
rorl
aam
xchg
sar
jbe
fdivs
fdivr
daa
xchg
ret
jae
mov
sbb
sahf
add
enter
imul
push
jl
nop
lds
xor
jno
and
mov
stos
enter
out
jbe
push
mov
jge
test
leave
adc
lds
sub
adc
mov
test
or
je
cmp
aam
insb
into
loop
pop
pushf
mov
jb
mov
loope
hlt
mov
push
cmp
cld
inc
xor
jge
sbb
push
addb
add
inc
into
or
mov
xchg
xchg
fsubrp
cmp
adc
out
mov
and
pop
sbb
test
popf
xor
pop
iret
loope
das
mov
ret
popf
jp
cld
lods
daa
cmp
cltd
decl
push
mov
mov
test
imul
jp
arpl
lcall
cli
in
and
jg
ret
lret
jle
cld
in
fchs
fisubl
xchg
subl
jb
xchg
xchg
imul
ss
ficompl
adc
cmp
fistps
cld
mov
and
testl
add
dec
addl
pop
sub
lock
sub
jp
dec
ds
or
in
or
pop
adc
lock
mov
rorl
mov
and
bound
lret
into
bt
cmp
inc
jp
or
cmp
or
cwtl
hlt
in
fldl
imul
xlat
aam
push
rclb
jmp
jns
imul
cmc
ss
insl
cmpsb
test
iret
pop
add
jb
xchg
jecxz
popf
ljmp
arpl
sub
lods
rol
add
jnp
popf
mov
add
dec
cmp
lods
push
fwait
add
mov
bound
push
lret
pushf
call
xchg
movsl
cld
jae
stos
push
mov
push
adcl
mull
push
frstor
inc
addr16
sub
jns
dec
xor
xor
xchg
inc
mov
out
sahf
into
dec
mov
js
xor
lods
and
movsl
outsb
rolb
mov
xchg
popa
inc
pop
dec
dec
gs
fld
out
mov
lock
stos
lret
or
sbb
loopne
push
fucomi
lcall
repz
sub
dec
pop
pop
mov
ss
testb
sub
sub
lret
cmp
mov
gs
jge
mov
incb
xchg
pop
jno
xor
ja
dec
mov
add
and
xchg
adc
jae
inc
add
inc
add
pop
dec
cld
jns
pop
mov
shll
in
nop
scas
stc
push
add
sarb
xchg
mov
or
test
imul
out
addl
push
xchg
dec
mov
popf
jns
inc
dec
daa
shrl
pop
bound
mov
add
or
addr16
je
inc
mov
mov
inc
pop
cmc
mov
jp
outsl
lret
aam
popa
hlt
xchg
dec
add
mov
decl
jae
or
repz
xchg
sahf
ss
adc
jbe
ljmp
fwait
out
push
cmc
mov
mov
inc
andl
dec
mov
insb
cli
fwait
push
xchg
jne
and
out
into
scas
jle
out
pop
cmp
lds
jle
mov
cmpsb
loopne
sub
iret
mov
movsl
je
push
inc
jno
les
and
int
aam
push
cmpsb
xor
push
push
push
lock
dec
push
fstpt
sub
sbb
aas
dec
sbb
pop
aaa
cld
xchg
sbbb
or
sub
sbb
std
cmpsl
cmp
cld
pusha
jge
sbb
sbb
pop
push
lods
mov
lock
cmp
lea
daa
pop
sbb
add
aam
ja
fcompl
fdivrl
cmpsb
popf
xchg
mov
mov
sbb
lds
imul
cld
ss
inc
jl
cmp
sbb
push
dec
cmp
pop
jo
je
mov
out
lods
dec
popf
inc
cmpsb
pop
lret
nop
and
xchg
inc
dec
pop
orl
xor
adc
sub
scas
testl
sbb
push
sub
xor
push
in
mov
xlat
cmp
mov
mov
movsl
mov
shl
push
and
and
icebp
stos
xor
faddl
jne
repz
and
sbb
jl
outsl
jge
mov
xor
repz
dec
iret
popa
push
cmpsl
int3
out
mov
inc
nop
sbb
popf
test
sub
arpl
and
in
mov
mov
mov
push
dec
add
xchg
aad
cmp
test
insl
cmp
cmpsl
sub
xor
jmp
sahf
nop
push
gs
pop
insl
mov
sub
push
aas
or
pop
enter
pop
mov
and
and
loope
push
adc
gs
addl
mov
sbb
cwtl
popa
push
popa
insl
ja
aaa
or
xchg
rol
xlat
push
fstps
movsl
sub
clc
sbb
inc
mov
mov
insb
loope
lcall
push
lds
xlat
cltd
jno
xchg
or
mov
push
dec
lret
daa
dec
imul
out
lods
sub
filds
jb
mov
and
aam
jge
adc
fists
dec
inc
loopne
and
iret
mov
leave
imul
cmp
mov
cmp
sbb
xchg
lret
unpckhps
mov
add
cmp
shlb
loop
or
sbb
insl
pop
outsb
cmp
int3
mov
jae
or
mov
addr16
or
push
pop
mov
inc
jecxz
mov
pop
aas
mov
adc
ljmp
xchg
insl
push
mov
adc
inc
fsubr
push
lea
xchg
fwait
ss
xchg
and
mov
faddl
or
sbb
sub
cmc
loope
popf
mov
rol
fisubrl
dec
aas
insl
jbe
shrb
enter
cli
push
fld
into
test
pop
cmpsb
inc
in
pop
mov
call
das
call
pop
dec
dec
imul
jecxz
repz
mov
sbb
fdivrs
push
sbb
cmp
inc
mov
test
mov
sti
adc
adc
dec
aad
inc
lods
clc
dec
lcall
divl
xchg
out
repz
cmp
jae
sbb
arpl
or
push
xor
scas
or
xor
mov
popa
fwait
mov
xlat
jg
loopne
cmc
cld
fdiv
dec
cwtl
sbbb
fs
sahf
xlat
push
imul
or
movsl
xchg
imulb
xor
out
in
shrb
jns
mov
mov
sbb
jo
pusha
test
sbb
pop
sahf
loop
xchg
adc
dec
jl
loopne
leave
dec
imul
adc
pop
sbb
popa
inc
push
xor
flds
sbb
adc
ljmp
lock
mov
out
adc
in
pushf
push
mov
xlat
movsl
enter
sarl
dec
lea
and
jnp
and
push
les
xor
and
inc
out
call
cmpsl
mov
mov
or
jb
mov
sub
aas
test
pop
jae
pop
stc
inc
enter
or
ret
ficomps
repnz
jb
and
push
testl
outsb
adc
adc
lods
cld
stc
inc
call
cmp
outsb
out
sbbl
std
or
jge
dec
movsb
cmc
adc
pusha
sbb
mov
bound
rcll
loope
pop
cmpl
addr16
push
fucomp
mov
call
mov
jb
rcr
idivl
cs
xor
jo
mov
hlt
jmp
fs
stos
adc
dec
fidivrs
mov
mov
add
or
lahf
xchg
repnz
lcall
xchg
add
inc
rcl
cmp
shll
aaa
and
pop
in
leave
and
aaa
or
jns
sahf
add
ficompl
mov
scas
divb
mov
arpl
cmpb
push
adc
rcrl
jp
mov
test
lret
enter
sarl
push
in
icebp
cmpsl
xchg
fimull
sti
in
jae
xchg
lods
xor
cmc
in
pusha
cmp
in
imul
repnz
push
inc
sbb
pop
ja
push
dec
repnz
xor
leave
ljmp
dec
sbb
add
insl
ss
push
movb
lods
xchg
dec
ret
jg
inc
or
sbb
pop
push
imul
push
mov
scas
gs
fwait
mov
ficoms
xchg
adc
add
out
jmp
repz
and
mov
pop
leave
inc
scas
pop
sbb
shlb
out
cmp
push
pop
mov
xchg
je
or
adc
mov
mov
movsl
les
or
pop
sbb
jl
insb
xlat
insl
out
xchg
and
sbb
add
mov
pop
stc
sub
xchg
loopne
cmp
jns
jno
cmp
fs
inc
xlat
mov
jae
mov
mov
iret
int3
jae
fsubs
fsub
xor
jbe
push
mov
mov
pop
dec
dec
bswap
faddp
in
sbb
dec
test
mov
cltd
imul
dec
push
mov
xlat
sub
stos
dec
in
ret
mov
inc
pop
lret
adc
pop
fcmovnb
xor
enter
dec
jno
mov
xchg
or
xchg
xchg
xchg
jo
lock
dec
jg
nop
lcall
mov
add
out
out
mov
cmp
cmp
cli
adc
out
and
push
cwtl
jl
mov
sbb
fcomp
movb
cmp
mov
or
xor
mov
adc
arpl
or
pop
inc
adc
jmp
std
cmp
push
out
movb
mov
scas
mov
pop
pop
pusha
push
test
lock
dec
hlt
lock
faddl
dec
xlat
in
movsb
dec
mov
push
jne
bound
xchg
dec
mov
xchg
fidivrl
push
addb
push
pop
out
mov
add
mov
cld
outsl
movsl
jle
mov
stc
int3
cmp
out
or
stos
adc
mov
test
xor
add
jmp
scas
jmp
stos
dec
gs
mov
or
mov
pusha
sbb
adc
inc
xor
xchg
ja
loopne
cmp
dec
lods
or
jnp
fs
pop
mov
cmp
jl
inc
cmp
cmp
cmc
lea
push
pop
xchg
mov
mov
sbb
jno
cmpsl
movsl
jl
adc
xor
mov
sbb
das
cmp
mov
sbb
inc
mov
inc
xchg
cmp
test
cmp
jp
mov
insl
mov
add
jbe
leave
jmp
mov
pushf
jae
mov
inc
pushf
jle
mov
mov
fcmovu
pushf
pop
add
xor
mov
adc
mov
arpl
mov
pop
in
cmp
lret
mov
les
inc
pop
push
and
sub
enter
test
cli
mov
data16
adc
gs
pop
leave
mov
je
sti
es
mov
gs
faddl
out
mov
movsl
rolb
push
and
mov
mov
fdivs
movsl
jo
adc
push
loopne
fsubs
lcall
add
in
mov
push
clc
test
jl
test
mov
loopne
sbb
pop
ss
jns
sub
pop
pop
pop
dec
xchg
out
mov
mov
arpl
cwtl
inc
add
mulps
adc
mov
and
into
out
arpl
movsl
scas
rol
cmp
cmpsb
sbb
pop
push
shl
scas
or
xchg
or
inc
je
lcall
ljmp
jge
pop
inc
cmp
mov
or
mulb
pop
das
ret
push
push
es
push
clc
pop
lds
fistpl
loope
fsubr
mov
and
sub
mov
ret
dec
lret
xor
loopne
repnz
or
mulb
adc
lret
inc
sbb
mov
sbb
repz
jb
jg
xor
cmpsb
test
lods
xchg
incl
inc
pop
push
mov
cmpsl
push
and
cwtl
cmc
adc
test
in
fsubl
arpl
cs
jle
pop
dec
inc
mov
shlb
push
xchg
sahf
lods
jno
fsubs
fnstcw
ss
jmp
decl
xor
xchg
dec
ds
push
lret
push
jmp
mov
push
lcall
inc
jo
out
mov
xchg
xchg
fsubs
lcall
dec
pop
arpl
mov
scas
push
cmpsl
cmovl
pop
addr16
leave
movsl
es
addb
push
out
int3
in
jns
push
ja
lahf
loope
and
mov
fistps
jns
push
jno
push
pop
jle
adc
aam
sti
arpl
xor
mov
dec
push
cwtl
popf
mov
out
jnp
push
xchg
filds
pop
jp
iret
inc
aas
push
lock
and
scas
push
dec
cmpsl
pop
mov
imul
mov
push
mov
or
repz
lods
insb
push
cs
mov
in
cmp
hlt
fists
repnz
mov
push
divl
push
lret
or
pop
jbe
movsb
mov
rcl
sub
movsb
fsubr
or
scas
jg
call
jp
xor
jp
pop
test
inc
aaa
add
xor
in
pusha
push
pop
pop
and
loope
int
pop
cld
push
mov
add
loope
mov
or
adc
inc
xor
dec
xchg
jg
pop
cltd
cwtl
cmp
aam
xchg
sub
cltd
jbe
push
push
mull
mov
ds
imul
bound
xor
movsb
inc
and
jg
cmp
or
add
vphaddwd
inc
xor
pop
sbb
fisubl
aam
mov
dec
xlat
xchg
adc
pop
push
std
fwait
cmpsb
pop
mov
push
iret
adc
cmp
xorb
and
cmp
fnstsw
cmp
mov
rorl
ud0
inc
or
or
xchg
push
pushl
jo
adc
mov
lds
sub
jb
add
adc
and
js
or
xlat
push
or
gs
and
fists
cmp
sub
pop
push
mov
pop
and
xor
adcl
iret
sub
jg
out
sti
xchg
hlt
pop
mov
and
outsl
inc
xchg
xor
ds
push
xchg
jnp
and
cmpsb
inc
push
adc
mov
or
mov
ret
xchg
inc
jg
xchg
dec
out
jno
fs
out
adc
cmp
fs
imul
notb
or
daa
into
xor
and
sbb
jns
cltd
jg
pop
xor
nop
or
pop
add
fucomp
jb
int
int
adc
test
xor
sbb
cs
xchg
orl
xchg
jb
push
xchg
add
jle
fisttps
std
fwait
adc
jge
sub
push
and
mov
cwtl
inc
mov
loopne
lret
mov
cmp
push
push
aaa
sub
in
lods
cwtl
roll
xchg
sub
fwait
jle
test
mov
aas
cmp
dec
fisubl
scas
aas
stos
cmc
shlb
int
xor
outsl
jp
jg
in
stos
fadd
je
lds
mov
add
dec
jne
std
sub
stc
inc
int3
mov
fcmovnu
mov
data16
movsl
xchg
push
add
xor
sub
pop
jmp
insb
push
mov
into
movsb
jecxz
push
fdivl
mov
jle
repz
pushf
mov
xchg
iret
sbb
jecxz
jp
inc
xchg
add
popa
add
sti
inc
or
test
and
add
mov
pusha
pusha
or
or
loop
adc
stc
push
pop
test
adc
out
push
iret
out
movsb
jb
pop
adc
xchg
mov
lret
sub
sahf
cmp
lcall
iret
pop
mov
out
subb
cmp
sbb
fsin
stos
shl
mov
popa
xchg
stos
fstp
test
cmp
lods
sbb
push
mov
mov
das
stc
adc
fildll
cmp
fstl
bound
repnz
mov
sub
stc
xchg
mov
xchg
push
jp
out
ret
andl
les
inc
aad
xor
shll
ret
in
ljmp
sub
clc
stos
pusha
mov
jecxz
mov
mov
mov
push
js
in
out
test
or
aam
push
shll
jnp
daa
mov
and
cmp
or
and
fisttpl
movsl
andl
les
mov
jns
mov
mov
xchg
ds
sbb
fimull
jg
in
sbb
pop
push
mov
cmp
jnp
lcall
imul
vshufps
xor
cmp
xchg
sbb
daa
xor
and
adc
std
push
jmp
xor
imul
rcll
xchg
hlt
mov
stos
insb
push
in
lock
lods
adc
bts
jg
insl
mov
pop
mov
cmpsb
lods
test
outsb
pushl
stos
sahf
rol
mov
jbe
adc
dec
sbb
repz
mov
or
mov
call
inc
stos
cs
into
lds
stc
sub
fisttpll
or
out
mov
test
lcall
shr
cmp
fidivrl
mov
xor
jo
add
subl
push
addr16
mov
lret
out
sbb
add
mov
loopne
iret
xor
dec
vrsqrtss
push
pop
or
mov
cli
mov
iret
xor
xchg
mov
cmp
xchg
add
test
gs
mov
sbbb
add
dec
adc
lea
add
mov
dec
dec
xchg
inc
cltd
and
bound
stos
xchg
adc
dec
addr16
into
push
out
push
cmp
push
fsubr
push
popa
scas
sbb
mov
ja
rorl
jmp
shlb
lea
and
pop
fsts
subb
ljmp
test
loop
and
leave
test
clc
ds
mov
pop
leave
js
sub
sub
rcrl
iret
push
mov
cmpsb
jg
xor
xchg
sarl
popa
sahf
adc
loope,pt
stos
cmpsb
xchg
push
enter
int
out
jno
pop
pop
dec
ret
das
pop
sub
pop
pop
roll
lcall
fdiv
ret
gs
and
enter
lahf
mov
imul
mov
jbe
mov
ja
addr16
inc
daa
dec
pop
pop
mov
xchg
fsubl
hlt
aam
ja
stos
cmp
in
inc
xchg
sbb
loope
xchg
or
adc
cli
mov
pusha
scas
mov
sbb
test
sub
jl
and
mov
push
sbb
test
aas
addr16
out
push
push
insb
mov
xchg
jl
xchg
mov
imul
movsb
pop
outsb
icebp
push
pop
mov
sub
ret
sub
inc
mov
mov
xor
mov
sbbb
pop
xchg
iret
popf
jae
jg
les
sub
add
in
bound
mov
add
inc
add
call
hlt
test
cli
cmp
xchg
cmp
or
test
std
jl
out
push
push
push
jbe
cmpsl
push
mov
int
imul
xor
sub
lret
xor
nop
inc
sbb
loope
cmp
jb
xchg
or
cmp
sub
add
xchg
es
shrd
clc
mov
sbb
je
inc
jp
sbb
repnz
test
aas
adc
lock
js
incl
popf
in
jmp
outsb
mov
add
sub
rcr
out
jp
imul
movsb
sbb
sub
dec
mov
add
pushf
adc
jg
aaa
sbb
shlb
in
popa
pop
adc
push
cmp
addb
shrb
add
push
inc
dec
add
sahf
or
and
sub
int3
mov
adc
subl
out
and
dec
loopne
xchg
test
fistpll
es
mov
jae
and
jno
jp
mov
xchg
sbbb
or
repz
iret
mov
nop
rol
das
inc
xchg
xchg
das
scas
mov
inc
and
jno
sub
loop
push
lahf
sarb
push
push
push
xor
int3
out
fs
repz
dec
aaa
jnp
daa
push
or
mov
std
and
push
pop
inc
or
xchg
mov
fcoml
test
adc
pop
pop
mov
add
pop
push
insb
mov
and
adc
mov
out
test
ds
out
pop
adc
push
dec
sbb
gs
push
pop
add
pop
adc
dec
mov
hlt
xchg
adc
js
fisttpll
pop
sbb
mov
jns
jns
push
push
mov
push
fdivs
hlt
pop
xchg
lock
sub
jae
das
dec
add
das
js
nop
add
fwait
pushf
inc
subb
fwait
sbb
sbb
pusha
inc
in
xchg
push
pop
add
xor
dec
mov
mov
mov
push
cmpsl
sahf
clc
lea
xchg
scas
loop
mov
push
stc
push
add
sahf
call
lret
and
rclb
inc
inc
lcall
mov
test
hlt
rcl
add
out
sti
xchg
cli
lds
cmp
insl
jl
subl
dec
fiadds
in
push
fistpl
outsl
fldcw
mov
daa
pop
aad
jb
addr16
cmp
cmp
jmp
das
xchg
pop
mov
jbe
xor
jle
cs
sub
push
fcmovnbe
mov
adc
mov
xor
cld
and
fs
lcall
data16
push
xchg
insb
lock
divl
mov
cltd
inc
addl
lock
lcall
out
push
mov
aad
jbe
js
or
test
fldcw
jns
sarl
xor
xchg
out
lret
aaa
jb
loop
and
or
sub
cmp
lret
adc
shll
test
jae
hlt
repz
aad
out
mov
pop
xor
dec
mov
out
mov
jecxz
xor
fwait
nop
or
movl
test
cmp
sub
pop
scas
movsb
push
mov
stos
sub
pop
jb
lods
lock
push
add
mov
bound
xchg
test
fadd
jns
fiadds
xchg
sbb
aad
ds
pop
mov
outsb
movsb
mov
aas
xlat
mov
in
mov
xchg
js
mov
es
adc
pop
sub
test
mov
sbb
aad
das
pop
rcll
mov
adc
fidivs
nop
es
sub
dec
dec
in
xchg
cmc
dec
add
pop
rdtsc
lock
daa
lea
add
cmpb
or
data16
push
xor
sbb
pop
cmp
or
test
call
iret
mov
pop
add
pop
inc
ja
dec
dec
or
adc
mov
push
mov
leave
inc
sbbb
insb
repz
outsb
in
insb
jne
mov
outsl
push
xchg
outsb
scas
mov
leave
stos
cmp
ja
test
pop
xor
fst
inc
mov
xchg
in
cs
sub
insb
adc
ret
xchg
fmulp
pop
pop
push
nop
aaa
sti
and
mov
insl
jg
pop
iret
push
sarb
pop
push
push
les
movsb
cld
jge
fincstp
or
cmp
push
mov
sub
ja
cmp
xchg
mov
jne
mov
xor
mov
mov
inc
iret
ja
sub
xlat
lcall
fxch
push
ss
inc
enter
xor
or
pop
push
hlt
aaa
cld
or
xor
aas
inc
das
lock
out
pop
jmp
cli
mov
ret
mov
and
mov
mov
push
adc
inc
lock
pop
mov
mov
out
adc
mov
leave
and
push
pop
add
mov
popf
xchg
inc
xchg
dec
add
sub
negb
mov
mov
flds
xor
cmpsl
popf
sti
lahf
mov
jl
lcall
mov
or
push
rolb
repz
cwtl
sub
mov
sahf
dec
pop
addl
jecxz
add
cli
inc
js
out
out
movsl
loope
mov
or
or
xor
sti
stos
ja
clc
flds
or
loope
jge
or
test
cltd
pop
dec
jg
jno
mov
fistps
scas
mov
push
in
fsubrp
aam
arpl
jb
cmp
fcmovnu
mov
jbe
test
cmpsl
int
lock
sbbl
pop
mov
ljmp
adc
in
ds
adc
faddl
sahf
push
insb
cmp
jnp
pop
cmp
lock
sbb
decb
cmp
sub
fcomps
lods
push
dec
sbb
repnz
popa
test
adc
mov
addr16
imul
mov
pop
mov
adc
imul
sub
pop
lret
pop
mov
lret
popf
sbb
das
push
test
stos
pop
push
sar
adcl
inc
dec
aad
aaa
mov
add
mov
lahf
push
sub
stc
mov
sti
cmp
cmp
scas
fistpll
dec
xchg
xor
push
inc
push
push
dec
ret
lcall
sahf
sbb
dec
and
popa
jbe
icebp
dec
and
sub
and
xchg
icebp
push
jnp
mov
sbbb
sahf
inc
and
adc
pusha
xor
jb
xlat
in
fsub
iret
lock
xlat
icebp
out
mov
sub
xchg
fildl
jnp
rclb
cs
sub
or
cltd
dec
loop
std
pop
adc
imul
dec
out
jne
fcmovne
dec
jno
in
and
push
adc
mov
out
daa
cmp
xchg
inc
int
mov
jo
out
lcall
and
loope
mov
mov
imul
daa
xlat
enter
mov
test
push
push
in
lcall
jns
pop
xlat
cli
lds
fcmovbe
ret
out
cwtl
cmp
clc
lret
and
cmp
mov
xorb
out
push
pusha
rolb
in
jg
jbe
xchg
insl
and
xchg
icebp
stos
mov
or
in
insl
loop
popf
sbb
ds
stc
sbb
dec
pop
repz
push
lret
sbb
mov
add
jnp
hlt
add
mov
cmp
lock
inc
pop
int
mov
xor
mov
sbb
sub
cmp
mov
incl
fsubrl
adc
push
inc
lahf
fadds
gs
push
push
popa
stc
and
imull
fnsave
hlt
test
or
fsubrs
jnp
fcoml
and
cmc
cmpsl
shrb
push
add
cwtl
insl
ljmp
and
or
outsb
cwtl
pusha
ljmp
and
xorl
xchg
dec
cmp
cs
cmpsb
push
cld
xchg
cs
enter
jmp
adc
test
sbbl
call
push
cmp
ja
cmpsl
js
add
aaa
jbe
std
jmp
not
sbb
inc
imul
mov
push
popa
push
push
inc
ss
shrb
loope
mov
push
add
jp
jnp
xor
mov
sti
cmpsl
sub
cs
loopne
xor
imul
mov
flds
adc
push
jge
jecxz
xchg
push
fwait
cmpsb
fistpll
lods
shlb
lods
xchg
xor
fwait
or
pop
xlat
rorl
cmpsb
sbbl
pop
sub
mov
outsb
lahf
and
jle
mov
and
push
xor
aaa
aam
mov
sahf
add
push
iret
out
cwtl
shll
jp
loop
mov
stc
pusha
insb
insl
jl
loopne
ret
popf
jae
ds
mov
cmpsb
mov
mov
sub
mov
or
ret
icebp
in
fldt
jg
xchg
xchg
jle
js
lahf
pop
sbb
mov
xchg
arpl
mov
pop
add
sahf
nop
bnd
scas
mov
lahf
adcl
and
mov
inc
sahf
xchg
or
shlb
mov
std
xchg
mov
scas
cmp
inc
lahf
sbb
jl
in
xor
xor
mov
sub
cmp
in
xorb
xchg
fs
dec
add
lret
lds
inc
sub
loopne
aad
mov
fisttpl
insb
loopne
cmp
pop
xor
fdiv
lea
xchg
aam
leave
and
adc
xchg
mov
push
lcall
aas
and
inc
orb
in
or
add
xor
dec
shll
cmpb
das
jg
loope
and
fs
xchg
ret
bound
hlt
int3
xchg
dec
dec
lret
mov
inc
sbb
lcall
or
mov
in
scas
inc
cmp
cltd
or
imulb
pop
jb
or
mov
add
or
lcall
subb
outsb
xchg
jns
fwait
mov
xchg
cli
ds
jb
js
int3
les
or
call
xor
cltd
mov
ret
pop
cmp
mov
mov
mov
push
rorb
jb
push
js
or
mov
jmp
icebp
dec
xorl
dec
movsl
cmp
mov
mov
fwait
insb
xor
inc
mov
dec
imul
int3
cmpb
addb
aaa
or
jo
lret
xchg
pop
sub
pop
jns
xchg
sbb
push
cmp
ror
shll
push
and
add
dec
jmp
in
sbb
jbe
jle
faddl
push
aad
adc
mov
or
pushf
mov
cmp
enter
jl
in
cmp
repnz
mov
xchg
adc
add
dec
pop
loopne
sbb
into
mov
mov
nop
loop
dec
scas
dec
lea
aas
bound
adc
push
leave
add
int3
inc
mov
out
add
xor
push
ret
mov
jns
push
fld
stc
jp
xor
testb
lods
xchg
adc
dec
and
cmpsl
and
dec
lret
ret
shll
js
lock
mov
add
adc
add
sbb
out
pop
jl
mov
pop
mov
ja
mov
cmpsl
push
inc
scas
sub
loopne
pushf
in
mov
jne
hlt
int
arpl
xor
jae
push
mov
rclb
dec
push
andl
jnp
and
out
adc
cmpsl
xchg
dec
cmp
mov
cmc
pop
xchg
rol
cmpl
cmpxchg
mov
jae
xorb
lret
repnz
sub
dec
jae
pusha
std
je
mov
or
adc
fstl
inc
outsl
cld
cmp
jb
sbb
cmpsl
add
stc
push
cli
xorb
out
out
xchg
nop
dec
fsubrl
movsl
orl
sbb
jle
push
faddl
xchg
push
xchg
std
dec
pusha
pop
icebp
shr
push
faddl
sub
rcll
lret
jle
rdpmc
jp
test
mov
emms
mov
inc
insl
dec
inc
sti
fiaddl
sbb
ffree
cmp
in
xor
adc
lds
je
hlt
rorb
repz
inc
jg
jl
mov
pop
mov
and
enter
es
outsb
add
mov
shll
push
repnz
mulb
mov
pop
pop
jnp
test
imul
stc
sub
pop
stc
push
loop
inc
xor
icebp
gs
pop
loop
test
jne
mov
and
es
or
add
sarb
fnsave
outsb
jae
imul
pop
addr16
mov
or
subb
jg
dec
inc
sahf
lock
jmp
sbb
int3
mov
mov
popa
enter
inc
xchg
add
rcr
outsl
cmc
std
sarb
addr16
fisttps
mull
loopne
in
adcl
in
test
int3
lret
jo
xorl
jne
decl
dec
jo
adc
jnp
shrl
fldt
sbb
mov
mov
lret
insb
cmpsl
stos
mov
or
adc
adc
push
jecxz
adc
sub
js
or
adc
xor
ss
int
call
test
sub
aam
sub
daa
rcrb
cmpsl
xchg
add
jae
pop
push
mov
or
cmp
mov
pop
and
pop
push
inc
inc
aad
and
popf
mov
mov
inc
or
pop
incb
stos
test
sub
mov
scas
stc
imul
cltd
jge
mov
ss
int3
ja
inc
sub
js
and
cmp
lahf
test
and
xchg
daa
std
popa
jbe
mov
pusha
lret
and
mov
xchg
js
add
es
addr16
dec
xchg
push
aas
insl
outsl
pushf
or
pop
addr16
add
pusha
adc
adc
adc
and
cmp
adc
sbb
dec
inc
inc
stos
movsb
xor
fldpi
cmpsb
push
sub
dec
mov
mov
mov
mov
testl
push
fs
push
cmpsl
mov
adc
and
imul
cmp
pop
cmp
jne
cmp
mov
xchg
lcall
mov
scas
or
or
cs
repz
xchg
jne
pop
jo
jns
adc
xor
pop
test
std
xor
sbb
fwait
xchg
mov
testb
xchg
push
lods
hlt
mov
movsb
xchg
mov
in
iret
xor
pushf
and
repnz
fstpl
into
ja
xchg
imul
dec
dec
pop
add
or
inc
ljmp
std
enter
in
push
cld
int3
push
adc
add
pop
xor
popa
inc
or
xchg
cld
sbb
mov
popa
stos
stos
rcrb
sub
insb
dec
outsl
and
popa
adc
xchg
shrb
dec
movsl
add
mov
and
rcll
inc
std
es
mov
mov
sbb
stos
inc
dec
cmp
push
jae
cmpl
mov
loope
js
rorl
push
nop
xchg
repnz
repnz
cmp
arpl
push
lahf
lahf
mov
mov
lret
lret
lret
fnsave
mov
enter
lds
xchg
das
push
insb
es
jmp
xchg
movsb
pop
jno
or
hlt
push
jg
mov
icebp
mov
test
inc
test
test
in
fdivl
jge
pop
pop
mov
mov
pop
xchg
arpl
cmp
insl
mov
movsl
rclb
mov
or
cmp
or
ds
lock
and
jnp
cli
sub
pop
movsl
pop
jne
cmp
faddl
dec
mov
xor
adc
and
xchg
add
in
pop
bound
push
jo
add
test
cmp
mov
jmp
add
fidivs
ja
fcompl
pop
sbb
stos
loope
push
jmp
outsl
push
sub
dec
out
pop
pop
mov
push
in
aaa
scas
lret
addr16
data16
std
dec
push
sbbl
jp
js
out
std
push
outsl
out
mov
mov
xchg
sti
loop
xchg
popl
push
mov
inc
xchg
enter
jl
xchg
test
pushf
xor
push
scas
test
sbb
add
dec
scas
cmp
sub
push
sbb
testb
cltd
mov
push
pop
outsl
xchg
push
lahf
cmp
sbb
shll
xor
mov
jle
dec
inc
js
int3
jns
dec
outsb
push
ja
sub
pop
pop
cld
mov
fldcw
dec
shlb
data16
xchg
outsb
jge
imul
fnstcw
mov
rcrb
pop
shlb
int
mov
mov
out
dec
xchg
mov
xor
and
movsl
lods
jnp
cmp
jbe
outsl
test
mov
push
jo
jmp
mov
aaa
dec
out
fnsave
or
push
mov
out
out
andl
ds
and
ret
add
dec
xchg
add
fbstp
mov
mov
xchg
iret
xlat
mov
sub
inc
movsb
dec
mov
and
repnz
xchg
or
push
push
sahf
das
sub
popf
mov
or
and
dec
xchg
fldt
mov
sbb
clc
cmp
int3
icebp
fwait
adc
cltd
add
cmp
push
bound
sahf
iret
aam
adc
lcall
mov
mov
out
arpl
out
or
push
cmp
push
rcll
pushf
inc
sub
movsb
jb
sub
ljmp
jno
jecxz
push
sbb
jg
pop
sahf
lds
leave
das
or
push
arpl
push
movsb
enter
mov
sbb
filds
in
in
mov
mov
mov
dec
mov
imul
icebp
js
cmp
pop
call
in
pushf
mov
and
outsl
aam
je
cmp
push
cli
jo
aam
dec
es
push
xchg
loope
sahf
nop
es
push
mov
test
imul
fcmovnb
iret
sub
sub
or
addr16
sarl
popa
outsb
pop
add
subl
sbb
dec
lcall
pop
rol
inc
jmp
and
cwtl
out
xchg
xchg
xchg
leave
pushf
ret
sahf
xor
in
lcall
xlat
repz
add
pop
movsb
fisubrl
sbb
xchg
lahf
sub
lcall
mov
mov
pushf
in
mov
ret
fwait
iret
mov
fs
pop
fnstsw
sarl
fiaddl
mov
push
roll
test
icebp
add
in
mov
stos
sbb
mov
sarb
test
add
mov
nop
and
loopne
fwait
cli
xchg
arpl
ret
jmp
pop
loopne
xchg
arpl
push
cmp
popa
mov
in
jae
mov
repz
sti
rep
xchg
shrb
stc
testb
jp
clc
scas
or
pusha
add
inc
xchg
jno
or
mov
sub
and
dec
movsb
in
push
je
faddl
jae
push
mov
ljmp
into
fisttps
push
jbe
cmovne
xlat
loope
push
add
sub
addr16
pop
stc
in
leave
std
mov
das
mov
aad
pop
fisubs
and
jnp
rclb
test
cmp
nop
lahf
mov
cmp
cmp
repz
loope
sbb
dec
mov
inc
negl
pop
and
xor
mov
push
repnz
jo
push
xchg
call
sbb
ljmp
rorb
inc
or
jge
mov
int
pop
ds
cmpsl
add
out
ret
mov
mov
jmp
push
lods
test
xchg
outsl
push
and
mov
mov
out
xor
arpl
sub
shlb
cmp
iret
sbb
or
inc
mov
xchg
cmp
mov
sarb
and
xchg
cmpsl
dec
test
movsl
cmp
or
mov
xchg
out
aaa
adc
fwait
push
jmp
push
ficompl
lcall
in
icebp
dec
adc
cmp
mov
mov
mov
push
cmc
fsubr
sti
mov
jmp
dec
ret
add
push
out
xor
mov
out
sub
divb
lods
jp
ss
jmp
mov
push
sbb
into
mov
xchg
sarl
dec
xchg
mov
rcr
cmp
cld
addr16
stc
push
jno
leave
inc
pop
in
xchg
jnp
enter
adcb
jecxz
xchg
sbb
cmp
xchg
push
adc
add
scas
xchg
ds
xchg
shlb
and
loope
gs
sbb
xor
sahf
push
sbb
std
icebp
in
loopne
aam
out
cltd
xchg
mov
or
pusha
sub
xchg
nop
out
sub
and
dec
into
imul
sbbb
xchg
daa
mov
lret
mov
or
imul
rcrl
jnp
ss
leave
mov
mov
inc
mov
pop
or
lret
stos
out
orb
mov
aas
mov
xchg
scas
cmp
int3
lret
pminsw
mov
outsb
data16
loop
out
add
pushf
jle
xchg
enter
ss
das
push
jge
in
mov
xchg
imul
outsl
gs
les
fs
ss
out
xchg
dec
push
add
xchg
insb
gs
std
orps
sahf
rcll
sbb
inc
enter
shr
xchg
push
add
int3
xor
sti
in
sub
xorl
gs
push
shll
push
test
fimull
xchg
hlt
sub
stos
jmp
out
cltd
mov
insl
test
pop
inc
sti
mov
scas
push
ljmp
shrb
jbe
jmp
push
push
jo
push
je
test
jl
sub
mov
mov
xchg
or
jecxz
add
enter
in
jg
sbb
loopne
ss
shlb
in
sub
or
jne
shlb
sbb
je
push
cmp
cmpsb
inc
ret
xchg
sarl
shrl
scas
stos
push
cmp
aam
or
push
or
imul
shrl
lods
mov
fmul
pop
cmp
rolb
pop
lds
test
inc
lock
xor
sub
aad
cltd
test
mov
in
pop
daa
je
xchg
xor
jmp
xor
icebp
mov
scas
or
les
adc
sub
sub
fnsetpm(287
push
and
fcoml
inc
shr
enter
and
push
sti
push
cmp
jnp
adc
xor
mov
bound
cmp
jb
mov
stos
mov
inc
cmp
dec
push
sbb
or
sub
jg
cmp
lcall
aad
neg
jo
push
ss
enter
or
push
xchg
mov
std
and
cltd
pop
jo
push
mov
jbe
shll
and
cmp
hlt
mov
insl
sbb
jae
pop
dec
push
ret
test
mov
push
pop
sbb
dec
mov
dec
cmpb
xchg
sahf
jg
inc
test
ja
xor
fstp
push
call
mov
jecxz
xlat
and
xchg
mov
inc
add
adc
loop
xor
jno
adc
sbbb
mov
jmp
ljmp
jmp
xchg
or
and
dec
shlb
cmp
ficompl
push
inc
cli
mov
ljmp
and
lret
mov
fiaddl
or
push
imul
stc
je
mulps
imul
outsl
fstpt
xchg
neg
push
sub
or
out
aaa
mov
xchg
clc
lcallw
cmp
call
daa
pop
pop
and
fiaddl
subb
cld
ljmp
cmp
ss
insl
sbb
jp
movsl
lods
mov
les
sbb
sti
imull
mul
imul
push
add
jmp
inc
lahf
mov
aas
fs
rorl
clc
mov
xor
dec
cli
mov
xor
lods
adc
mov
pop
add
sbb
test
mov
cwtl
mov
lock
out
mov
lcall
orl
out
mov
jmp
sub
movsl
sahf
cld
mov
lods
adc
inc
push
mov
popf
push
mov
mov
popf
cmpsl
popa
push
lret
cld
mov
sbb
arpl
adc
fnsave
ljmp
pop
sbb
xchg
sub
hlt
sbb
cmpb
xor
leave
or
sti
xchg
mov
pop
outsb
pop
rorb
pop
xor
sti
pop
ljmp
mov
std
jl
mov
inc
push
add
pop
mov
in
test
rcl
mov
test
push
out
push
inc
add
lods
ljmp
aad
scas
inc
testb
stos
adc
mov
aam
or
aaa
test
and
sbb
imul
aam
push
cs
faddl
or
xchg
mov
fistps
test
jbe
cmp
clc
imul
fisttps
frstor
repz
push
loope
mov
mov
add
push
mov
sbb
rclb
and
push
inc
roll
inc
dec
sbb
pop
cmp
push
push
in
sub
enter
shrl
sbb
mov
dec
int
pop
cmp
inc
es
nop
xor
fildll
pop
add
push
scas
and
outsl
aad
imul
loop
jnp
sti
adc
js
xor
inc
mov
int
js
pushaw
push
jne
dec
aad
mov
lcall
test
inc
lcall
mov
xchg
movsb
ret
jmp
pop
data16
repnz
pop
xor
cmp
jg
out
cmp
and
and
pop
loop
mov
mov
test
xchg
pop
frstor
mov
xchg
lret
adc
out
movsl
sub
mov
fstpl
out
xchg
push
adc
push
das
jecxz,pn
movsb
dec
scas
push
mov
inc
jmp
xchg
mov
adc
and
or
ljmp
sub
adc
subl
sub
not
orl
imul
push
add
dec
ljmp
xor
movsl
mov
out
out
aas
mov
mov
push
dec
jnp
and
jno
cs
stc
roll
adc
push
aas
jb
arpl
push
pop
std
fisttpl
push
or
cmc
xchg
movsl
push
popf
push
and
xchg
add
dec
dec
sbb
aas
leave
test
cmc
cmp
or
or
mov
rol
inc
cmc
jecxz
adc
sub
xchg
cmp
pop
xor
pushf
lock
insb
mov
lock
xchg
lock
sbb
and
ds
add
jle
mov
ljmp
xchg
jp
sar
mov
jmp
jecxz
cmp
mov
test
pop
std
inc
mov
gs
mov
pop
mov
push
xor
in
icebp
jg
inc
mov
pop
les
fs
jns,pn
mov
not
mov
xor
fiadds
push
ss
pop
data16
dec
inc
xchg
xchg
jp
jo
xor
mov
movsl
and
xchg
insb
jecxz
push
fdivl
sub
push
incb
ret
or
push
xor
jb
xchg
push
jnp
gs
or
and
das
inc
xor
fs
aaa
testb
add
loopne
sub
or
xor
dec
jnp
outsb
push
les
xor
test
inc
clc
mov
data16
push
in
and
push
scas
cmpsl
push
inc
sub
popf
nop
and
pop
out
in
dec
mov
fstps
sub
xor
or
and
shlb
pop
xchg
int
jle
lods
sub
mov
mov
jecxz
push
mov
xor
xchg
push
in
jl
out
ds
divl
sub
dec
stc
sahf
mov
clc
xchg
int3
cmp
nop
dec
mov
aas
mov
scas
jns
inc
fisubl
push
mov
or
fs
and
jecxz
imul
mov
push
mov
arpl
scas
mov
in
jge
shl
popf
xchg
fsubr
xor
mov
mov
mov
jno
ja
je
int3
adc
sbb
mov
sub
loope
scas
imul
in
ret
adc
arpl
inc
into
cmp
cmpsb
movsb
les
cmpb
jb
jne
repnz
inc
test
rcrl
insl
sbb
or
ret
mov
arpl
or
aam
std
fcomip
or
aad
insb
fwait
cmp
lds
int3
dec
nop
rorl
in
mov
data16
cmpsl
clc
test
scas
push
outsb
jecxz
cltd
popf
fsub
popl
movsl
sbb
dec
in
pop
fiaddl
cs
dec
push
push
adc
push
pop
mov
ret
push
mov
jae
cmpsl
push
negl
push
loope
scas
push
dec
jo
adc
shlb
in
cmp
dec
lahf
aam
xor
lods
mov
addb
lahf
les
in
clc
lcall
inc
movsl
sub
arpl
inc
and
cli
ljmp
and
outsb
outsb
sahf
lret
ljmp
shrl
lds
std
sbb
dec
mov
inc
dec
sub
cmpsb
lcall
jae
and
gs
push
rcrb
dec
stos
cmpsb
mov
mov
orb
dec
test
adcl
repz
dec
movsb
sahf
jp
add
fyl2xp1
jbe
adc
gs
mov
adc
es
mov
pop
lahf
xor
xchg
js
xor
dec
mov
clc
jbe
mov
fs
mov
fdivrl
ffree
push
loopne
popf
in
je
dec
sbb
lret
push
repnz
outsl
fistpl
cmpsb
and
dec
dec
lods
cld
add
inc
pop
aas
cmp
inc
dec
jbe
add
ficompl
push
enter
bound
decl
adc
decl
dec
pusha
gs
movsb
nop
and
mov
fwait
sub
clc
sbb
subb
dec
jb
and
adcl
xchg
sbb
xor
inc
fwait
loop
cltd
push
inc
push
push
mov
add
and
pushf
push
notl
ja
aad
enter
mov
notl
out
cmp
push
jle
or
shrl
sub
lods
dec
ret
push
cmpsb
push
sub
js,pn
lret
insb
repz
out
or
pop
mov
cmpsl
mov
cmc
pop
insl
adc
fsts
xlat
sub
aaa
pusha
fcomip
sub
adc
ss
mov
insb
jb
into
sub
inc
daa
pop
xchg
mov
loopne,pt
or
fdivrs
xor
dec
pop
mov
out
add
adc
loopne
and
jg
fdiv
fdivrs
push
lcall
ret
dec
fldcw
mov
lock
je
pop
test
repz
xchg
js
add
sub
mov
push
sti
test
lret
inc
jl
or
mov
jge
popl
std
ds
jge
test
lock
jl
push
popa
test
and
sub
daa
lret
mov
in
clc
pop
cmp
test
pop
mov
in
mov
loope
pop
popa
inc
shlb
test
cli
je
andl
push
gs
cmp
or
push
fst
aaa
les
shr
jnp
dec
add
fidivrs
test
pushf
mov
ljmp
jle
xor
jns
adc
xchg
nop
mov
mov
xchg
sbb
cs
addr16
sbb
add
lret
xlat
loope
pushf
ret
cmpsb
pop
addr16
rep
push
das
pop
sub
gs
pop
cmpsl
sarl
add
sub
pop
push
jb
fwait
xor
ror
je
lods
mov
movsl
imul
ficoms
repnz
movsl
pusha
xlat
mov
mov
pop
or
cli
popf
movsl
mov
mov
inc
add
mov
decl
lods
fidivrl
subl
inc
jno
loopne
sub
mov
mov
inc
lods
mov
mov
jo
mov
cli
mov
rclb
cs
lret
jno
inc
jl
fisttpl
or
mov
lods
sete
push
cltd
das
jmp
mov
jns
jno
out
push
mov
mov
sahf
push
dec
leave
mov
add
mov
jo
shll
lds
out
out
mov
call
test
in
xlat
daa
mov
jl
lret
adc
mov
adc
dec
call
or
fimull
xchg
jmp
aam
dec
xchg
aad
sub
xlat
xchg
or
mov
jns
stc
shrl
and
clc
mov
ja
add
pusha
cmpsb
cmpsb
cli
xor
jge
divb
rcrb
jp
in
add
mov
mov
mov
add
add
xchg
xchg
sub
jbe
mov
gs
cmp
call
stc
cmpl
in
sub
jge
jnp
clc
fbstp
mov
sbb
test
jns
mov
add
cwtl
jp
sub
sbb
in
sbb
aam
xchg
lret
push
pusha
mov
cmp
jbe
jle
or
cmpsb
test
icebp
add
mov
mov
push
add
push
or
ficomps
dec
xchg
add
inc
cmc
ret
cmpsb
jg
and
sbb
mov
fdivl
mov
lret
cmp
imulb
push
mov
inc
mov
lcall
int
or
das
test
jno
test
and
fwait
enter
out
test
out
sub
pusha
bound
fidivs
inc
mov
lock
xchg
ss
popa
mov
sti
xor
imul
lods
xchg
lods
lcall
add
out
cmpsb
mov
push
mov
cltd
sbb
mov
repnz
loopne
out
bound
jo
test
add
enter
inc
lret
pop
xor
arpl
lcall
aaa
nop
in
inc
mov
inc
dec
or
rorl
cmp
mov
cmpsb
pushl
jno
adc
es
les
dec
jne
sbb
dec
push
mov
or
fisttpl
xchg
xchg
pop
mov
add
mov
xor
stos
push
sub
mov
pop
popa
dec
and
jnp
mov
mov
scas
mov
xor
jo
ja
inc
jb
jno
cld
ds
xchg
fs
adcb
dec
outsl
xor
scas
mov
mov
fcoml
cltd
mov
cld
fnclex
cmpsb
jg
cmp
icebp
pop
incl
sbb
movl
push
mov
or
cmp
cmpl
xchg
or
lcall
mov
je
addr16
aam
xor
lds
push
out
or
inc
add
fsubl
inc
mov
jbe
fisubl
daa
sbb
push
push
sahf
repnz
mov
in
mov
push
inc
sbb
jecxz
and
ret
pusha
cs
mov
jae
cmc
call
movsb
xchg
mov
push
dec
lods
xchg
decl
mov
adc
mov
lock
out
jns
push
dec
or
icebp
mov
loop
or
sub
and
jns
mov
shl
ljmp
je
cmp
push
xchg
pop
inc
push
shlb
xchg
push
fstl
test
ljmp
add
js
xor
cmp
adc
mov
bound
int3
sarb
xchg
pushf
call
fldt
nop
mov
mov
fdivrs
leave
repz
movsl
ficoml
mov
pop
pop
sahf
fcoml
out
jo
loope
and
rorb
lret
sub
or
loopne
into
fnsave
in
out
stc
mov
fcmove
dec
pop
mov
scas
xor
fnclex
into
jmp
pop
push
xchg
je
ffreep
jno
test
jmp
sbb
int
and
and
test
cmpsl
xchg
pop
testb
inc
cmp
into
xchg
mov
call
xchg
add
lahf
xchg
or
adc
pop
repnz
add
mov
inc
fcoms
pushaw
push
rorl
ds
leave
fstpt
push
cli
mov
out
jno
ror
aas
and
sbb
push
test
push
jno
sub
psubusb
jo
std
test
or
add
pop
rcl
adc
adc
mov
dec
js
mulb
jmp
fldt
fsubrs
outsb
jae
std
xor
mov
out
adc
movsl
jo
inc
repnz
push
ds
out
pop
mov
mov
or
pop
jecxz
mov
jb
pop
sub
aas
sub
jno
int
call
fimull
dec
addb
pop
inc
or
mov
sbb
adc
lock
cwtl
movsl
mov
aad
int
cwtl
mov
jmp
mov
ss
sub
subb
cwtl
ss
repnz
ficoml
mov
jg
fdiv
adcb
push
jb
push
out
imul
stos
or
jle
add
fistpll
add
lods
out
xchg
iret
mov
or
mov
hlt
rcrl
mov
mov
stos
mov
in
jmp
dec
leave
adc
and
sub
repz
movsl
jge
jae
cltd
lock
sahf
dec
jo
loop
rolb
fdivrs
and
fldl
sbb
push
lods
sbb
imul
xor
test
jmp
mov
out
hlt
adc
fcomi
xor
in
popa
outsb
push
xor
mov
je
mov
or
divl
rorb
mov
dec
xlat
mov
and
nop
and
cld
pop
cs
mov
es
jnp
ss
add
out
pop
cmp
jecxz
and
lea
outsl
xchg
and
pop
add
mov
sub
subb
adc
fsts
inc
sub
xchg
ljmp
lret
repnz
cmpsb
subl
cli
outsl
or
mov
ja
call
pop
rol
or
xor
push
mov
xchg
xor
sbb
iret
mov
shll
mov
fs
in
and
sti
in
fmuls
pop
inc
add
frstor
fwait
js
repz
inc
mov
lcall
mov
xlat
dec
outsl
mov
ja
rorb
aad
icebp
mov
mov
mov
out
jmp
mov
mov
mov
add
aam
loopne
mov
jmp
inc
pop
mov
xor
lret
jns
inc
clc
in
into
or
call
cmp
pop
sbb
pushf
cmpsl
pop
mov
mov
test
sub
loopne
mov
frstpm(287
pslld
push
lods
mov
lahf
sbb
std
out
outsl
aas
inc
jg
mov
or
test
fisubrs
je
jnp
leave
cwtl
jnp
sahf
ss
out
push
js
sbb
push
lods
xor
push
jb
loop
nop
mov
notb
jae
pop
int
adc
mov
cmp
dec
add
out
jge
mov
stos
jne
aas
dec
pushf
test
jno
int
aaa
mov
mov
dec
mov
in
movsl
loopne
fsubs
lds
pop
enter
or
das
jno
les
arpl
adc
dec
movsb
std
scas
cwtl
adc
cmp
stos
push
popa
and
mov
push
inc
add
mov
and
cmp
dec
sub
ficompl
sbb
mov
outsl
push
xchg
mov
test
add
mov
xchg
cltd
pusha
stos
pop
dec
daa
inc
adc
jo
sbb
clc
add
leave
push
daa
cmp
out
push
stos
into
mov
test
lret
lcall
cli
xor
lock
mov
ret
repz
and
loop
lret
xchg
rorb
in
add
div
sub
fcoms
mov
cs
mov
inc
pop
fdiv
pop
pop
xchg
mov
fcoml
mov
mov
mov
sbb
sahf
pop
popf
xchg
adc
or
pop
push
lods
mov
pop
xchg
divb
adc
jne
cmp
dec
dec
sub
repz
loop
adc
pop
jle
xor
ja
gs
out
movsb
and
push
add
add
stc
sbb
cmp
sbb
mov
es
xchg
outsb
loop
mov
pop
jbe
data16
test
fcomps
jmp
dec
dec
iret
in
mov
jnp
fmuls
fsubrs
lea
imul
mov
shll
xor
loop
pusha
mov
sbbb
pusha
mov
dec
neg
cmpsl
adc
jl
xor
je
xor
xor
test
sub
out
sbb
xchg
inc
jmp
adc
sub
lret
push
lea
pop
sub
cli
in
mov
es
xchg
push
fdivl
popa
xchg
insb
pop
inc
iret
in
pop
dec
dec
pop
loop
xor
test
sub
pushf
xor
iret
jae
stc
pop
repz
push
add
mov
fcoms
scas
std
push
jge
fsubs
sub
ljmp
lock
xchg
inc
xor
aas
orb
jg
xlat
inc
test
mov
imul
xor
and
int
fwait
aad
test
cmp
shrl
int
insb
add
repnz
mov
subl
ja
pop
inc
mov
in
gs
sbb
adc
sub
cmp
adc
jge
pushf
or
pop
pop
movsb
cs
sbb
add
orb
and
sub
rclb
roll
xchg
cmovg
jecxz
outsl
ljmp
iret
cmp
pop
cmpsb
movsb
in
pop
out
jmp
jbe
xchg
int3
out
and
push
ret
mov
imul
arpl
pushf
inc
inc
sti
nopl
add
jbe
mov
test
popf
out
xor
in
mov
push
into
sub
pop
cs
out
jb
daa
dec
stos
push
xlat
dec
xchg
in
in
or
aad
push
pusha
mov
push
xchg
fwait
adc
mov
mov
pop
xor
xor
test
jb
imul
push
ret
ds
movsl
adc
fcmovne
adc
push
push
lahf
sbb
stc
repz
hlt
or
push
jge
aas
sbb
add
jg,pn
pop
and
pop
lods
jns
rcrl
mov
fistpll
mov
mov
sti
in
iret
addr16
jno
in
in
mov
mov
lock
jmp
push
lods
push
movsl
in
lds
repz
popa
xchg
xor
mov
popa
jb
jmp
jl
movsb
mov
pop
in
sub
sbb
pop
or
mov
fimuls
jae
and
mov
jno
lods
fisttps
push
cs
call
inc
cmp
mov
cmp
push
jl
sahf
mov
jp
xchg
cltd
js
xlat
movsl
xor
sub
arpl
test
jae
mov
ficoml
das
jb
adc
out
cltd
cmp
push
dec
pusha
xchg
cmp
cmp
dec
push
subb
push
pop
lods
xor
push
cwtl
jecxz
fcoms
movsl
mov
enter
testb
or
cmpsb
lea
es
in
ficompl
sub
mov
add
out
push
ljmp
cmp
es
push
jno
test
xchg
popf
mov
pop
movsl
lret
jmp
mov
mov
jp
int
inc
add
cmpb
es
adc
jecxz
je
movsb
lahf
addr16
inc
mov
cmpsb
push
push
jmp
cmp
loope
aaa
popa
cmp
cmc
daa
call
sbb
mov
inc
dec
mov
dec
sbb
mov
pop
ljmp
dec
loope
jne
adc
or
mov
aaa
push
inc
and
mov
jle
cli
je
icebp
pop
xor
and
jnp
xor
jg
lea
out
stos
fs
insl
mov
jp
lods
sbb
pop
inc
sbb
inc
push
mov
fwait
mov
insl
mov
sbb
fists
subb
sub
dec
cwtl
mov
lcall
fiaddl
fwait
nopl
adc
mov
mov
stc
lret
mov
xchg
mov
push
lahf
cmpl
xchg
out
push
out
inc
ja
into
arpl
fisttps
mov
pop
lock
pop
xchg
lret
rolb
mov
nop
or
ss
imul
movsl
cmp
jne
jle
mov
jne
add
push
aam
jl
loope
push
out
shrb
in
test
out
pop
lea
cmp
lods
cmp
xor
fisubrs
mov
xor
mov
sub
cmp
fidivrl
jnp
out
adc
insl
mov
ret
sub
repnz
push
mov
cmp
xchg
push
jmp
lahf
stos
icebp
stc
dec
dec
rolb
and
push
addr16
or
fmuls
lods
scas
xchg
cmp
xchg
cmpsl
cltd
sub
daa
cwtl
or
psrlw
std
sub
or
mov
push
xor
shr
push
pop
mov
jg
push
fiaddl
and
inc
adc
jge
sub
outsb
push
cmp
push
in
mov
mov
scas
mov
jle
je
sbb
hlt
or
movsb
shrb
cltd
js
push
mov
loop
mov
aad
pushl
add
bound
push
dec
cwtl
in
in
ret
orl
fadds
rclb
movsb
popf
sub
sbbl
xor
mov
jg
es
dec
cltd
cmp
sbb
aad
lcall
lods
sti
inc
dec
fwait
mov
lea
adc
lret
jl
sahf
mov
sbb
loop
push
icebp
lds
idivl
loope
cmc
outsl
dec
xchg
push
cli
push
dec
jb
inc
movsb
fmull
clc
sbb
or
dec
fldl2e
mov
fldenv
lods
dec
and
add
dec
dec
mov
mov
and
addl
ret
aam
push
repz
loop
push
mov
ljmp
xchg
fildll
jns
imul
popf
xchg
pusha
pop
insb
dec
and
and
in
cmc
sahf
fistps
cmp
and
pop
scas
and
call
xchg
repnz
lahf
and
add
scas
mov
mov
pop
loop
xchg
sahf
int
fsubs
mov
sahf
rorl
sub
leave
add
xchg
daa
dec
insb
ljmp
loope
int3
enter
mov
or
repnz
push
cmpsl
scas
sbb
bts
push
mov
cmp
mov
adc
mov
ret
and
movsl
xor
hlt
push
popa
mov
mov
cmp
sbb
divb
jae
inc
sub
push
lods
pop
mov
sbbb
pop
dec
fdivrs
adc
out
or
push
cmpl
or
lcall
xor
repz
mov
aas
jge
xchg
repnz
addb
sbb
sub
jmp
call
ret
jbe
add
fwait
adc
mov
mov
movsl
jo
mov
daa
dec
cld
test
stc
adc
aaa
mov
add
shrb
test
jge
test
das
aas
in
xor
jmp
imul
ret
push
lcall
leave
inc
jl
outsl
pushf
sbbb
mov
inc
sbbb
insl
mov
cli
mov
dec
cmp
ret
push
movsb
push
sti
cld
sub
or
movsb
imul
and
popf
rorb
movsb
inc
inc
push
lret
mov
push
push
or
xchg
mov
xchg
jmp
xchg
mov
push
mov
mov
stos
sarb
faddl
outsl
jmp
jecxz
mov
fdivrs
repnz
mov
sub
shlb
xorb
je
sub
loop
pop
mov
in
into
ret
lods
sub
mov
dec
add
mov
jno
int
add
mov
xchg
or
or
int3
out
push
std
adc
mov
xchg
pop
outsb
sub
jmp
out
out
and
pop
les
mov
mov
outsl
pop
and
nop
or
loopne
adc
out
mov
mov
xchg
xchg
lahf
lods
jg
pop
mov
xchg
roll
push
add
mov
fdivrl
scas
out
adc
cli
push
repnz
fistps
inc
ret
cmp
in
add
fmul
ret
shl
pop
add
out
insl
jmp
mov
in
xchg
pop
lret
pop
jbe
adc
mov
jge
push
cmp
sahf
jns
or
scas
xor
subb
dec
in
ja
roll
inc
and
jmp
subb
inc
xorb
insb
jl
push
mov
in
ljmp
xor
das
stc
outsl
lods
addr16
xchg
push
scas
or
sti
push
xchg
or
mov
mov
push
sbb
iret
push
jbe
mov
arpl
stc
ficoml
sub
test
mov
or
dec
data16
scas
push
sub
fldcw
shll
and
jo
int
ds
fisubrs
inc
mov
lea
mov
jecxz
sub
push
test
ja
shlb
rcll
xchg
mov
cwtl
shlb
in
xor
mov
test
mov
outsl
adc
adc
test
pop
cmp
sbb
andl
lock
jbe
jae
arpl
popa
mov
lret
je
bound
mov
loop
pop
push
xchg
push
insl
xor
push
fs
in
cmp
ljmp
cltd
pop
mov
jbe
in
and
and
sahf
inc
adc
loopne
adc
mov
lcall
repz
adc
dec
inc
sub
mov
std
jno
ljmp
mov
nop
jmp
lcall
je
mov
fdivs
sbb
cmp
dec
dec
jle
outsb
xor
and
lcall
fadds
lods
test
out
fldl
inc
das
inc
xor
divb
xchg
mov
pop
sub
jmp
idivb
mov
and
fidivs
iret
push
jnp
push
xchg
mov
sub
out
loope
mov
xor
jmp
nop
clc
pop
mov
cmc
mov
popa
cmpsl
lret
cld
ljmp
fs
jg
lret
push
mov
and
mov
or
push
dec
mov
repnz
imul
mov
imul
rcl
popa
stos
fldl
adc
cld
pop
push
stos
jle
in
shll
push
add
sbb
and
scas
test
jns
mov
jg
jb
std
xchg
test
push
mov
mov
inc
nop
cmpsb
adc
std
adc
and
cld
xor
inc
and
mov
movsbl
mov
enter
push
add
push
dec
cmp
repnz
out
add
in
sar
jp
push
lahf
lods
mov
mov
or
or
test
and
fwait
mov
xchg
std
je
push
int
insl
daa
sbb
loop
dec
push
outsb
gs
andl
je
sub
jl
in
mov
sub
pusha
sbb
mov
add
inc
push
mov
dec
test
lods
cmpsb
and
dec
notl
inc
into
sysexit
loope
mov
cwtl
jo
out
adc
stos
mov
bound
adc
pushf
bound
dec
std
test
jnp
cmp
cs
fmuls
pop
push
pushf
push
mov
shrb
sub
movsl
ds
xor
icebp
out
xchg
mov
jbe
mov
dec
aam
pushf
ds
jb
pop
pushf
push
pop
push
sub
fadds
xlat
into
or
xchg
inc
js
ljmp
in
iret
lret
loope
xor
arpl
pop
insb
fisubrs
adc
pop
mov
cli
mul
mov
mov
xor
dec
nop
sbb
sti
jge
adc
adc
fcmovu
cltd
jno
inc
std
add
mov
xchg
jp
add
pinsrw
ss
push
cmpsl
xchg
fmull
call
mov
xchg
push
popl
jle
jae
sub
je
cmpsl
mov
sbbl
int3
jl
cs
adc
sub
xor
repnz
popa
ret
inc
inc
jmp
inc
mov
mov
mov
add
inc
push
mov
in
in
pop
dec
aas
xor
orl
sahf
cmp
scas
call
adc
dec
lea
push
insb
jae
lods
bound
sti
sbb
adc
dec
pop
aas
or
pop
rcl
pop
xor
icebp
add
aaa
addr16
mov
pop
adc
clc
repnz
jmp
xor
imull
pop
sti
inc
fs
enter
jmp
rorl
mov
rorl
cli
add
pop
cmpsl
sub
sar
test
in
lods
pop
outsl
adc
pop
addr16
cmp
sti
cs
in
jle
fbld
sbb
or
pop
pushf
mov
xchg
dec
mov
push
jbe
mov
dec
arpl
imul
mov
pop
xchg
fsubs
icebp
outsb
ljmp
test
jnp
cmp
xorl
fnstcw
ja
repz
es
mov
pop
test
lret
pop
add
gs
xor
movsl
sarl
lea
pcmpgtw
pop
mov
icebp
xchg
xor
insl
addl
outsl
jbe
ja
lods
in
inc
cmp
andb
jno
xor
subl
shl
pop
shrl
dec
mov
inc
sbb
das
sub
cmp
xchg
sub
pop
xchg
sub
lcall
mov
jge
repnz
imul
inc
or
std
pop
or
in
sbb
test
in
outsb
jb
lahf
mov
js
jno
jge
or
stc
clc
test
sub
mov
pop
pop
mov
pop
fneni(8087
adc
mov
fldenv
inc
mov
es
or
push
rolb
and
xchg
or
and
aad
lock
dec
jmp
aad
negb
or
cmp
imul
push
xchg
xchg
push
xchg
and
xchg
cs
dec
es
or
aas
dec
test
xor
or
stc
xchg
xchg
aas
sub
rcl
mov
mov
fimull
mov
dec
outsl
in
inc
lods
mov
fiadds
aaa
adc
dec
fstpt
adc
lret
sub
jl
lods
xchg
les
aas
xchg
mov
fs
push
arpl
or
imul
pop
and
gs
sahf
jb
mov
dec
test
cs
addb
mov
fsubrs
ds
cmp
add
lret
xchg
xor
cs
dec
mov
add
or
lods
push
jmp
mov
inc
aad
xchg
arpl
and
stos
es
movsl
cmc
idivb
cmpb
icebp
and
cli
cmp
push
mov
jge
add
add
idivl
sbb
ljmp
daa
push
jl
lock
dec
sub
lcall
jle
cli
add
dec
add
lock
mov
mov
mov
stos
jl
divb
test
stc
mov
and
jmp
sbb
psrlw
pusha
inc
test
dec
sbb
push
xor
movsl
sbb
ja
lret
je
mov
push
jno
mov
rorl
insb
insb
lcall
insl
movsb
jbe
mov
repz
fdivrl
add
outsl
fistps
push
pusha
push
in
xor
pusha
jmp
pop
adc
cmc
mov
nop
adc
xlat
or
cli
push
daa
or
sub
inc
mov
mov
test
inc
enter
xchg
adc
adc
out
lret
nop
gs
cld
cmpsl
inc
sbb
add
jnp
es
mov
scas
mov
lret
popl
or
jge
add
fwait
ljmp
jbe
or
lea
gs
repz
aaa
leave
in
sub
fcoml
movb
addb
inc
scas
cmp
and
inc
cmp
jo
add
push
ja
sarl
push
mov
std
stc
enter
popf
movsb
inc
add
pop
lods
stos
mov
imul
jne
sbb
stos
icebp
or
cltd
mov
fisubrs
push
mov
out
pusha
ret
jbe
jb
movsl
jne
ret
movsl
push
cmpsl
mov
lock
inc
fcomip
inc
push
cmp
pop
jns
adc
leave
cmc
cld
mov
adc
sar
test
je
jge
sti
flds
jne
lret
dec
fstps
cmp
loop
jns
mov
ja
mov
mov
imul
mov
icebp
cs
or
test
pop
std
push
xor
xchg
fiaddl
push
push
pop
idivb
mov
divb
push
lea
xchg
jp
adc
test
movsl
adc
dec
jae
das
out
insl
in
out
xorl
negl
mov
out
repz
mov
cmc
jg
xchg
enter
inc
addr16
adc
cwtl
idiv
rorb
mov
aas
cmp
clc
sub
or
add
fisttpll
popf
adc
adc
xchg
loop
jne
int3
push
xchg
cmpsl
lods
roll
pop
dec
loope
inc
push
jmp
scas
mov
in
dec
xchg
sbb
int3
push
jmp
je
push
scas
inc
push
xor
ja
add
mov
sub
or
inc
sub
mov
pushf
lea
sbb
mov
jns,pt
shrb
addr16
outsb
daa
adc
xchg
cmp
jle
push
add
mov
xor
pusha
mov
gs
fcmovnbe
scas
mov
icebp
scas
xchg
pop
pop
cmp
push
push
push
mov
movsb
jns
shrb
inc
mov
filds
sti
imul
add
pop
adc
sahf
aad
dec
sub
test
sbb
add
out
lock
insb
mov
add
out
cmp
xchg
sub
cld
xor
add
stos
cmpsl
std
add
imul
insb
mulb
or
or
cmp
mov
rolb
push
adc
mov
cmp
sti
jo
add
cmpsb
lcall
stos
outsl
xor
xchg
push
and
je
cmp
jb
push
lods
js
push
sub
sub
shr
cs
mov
pop
mov
std
mov
or
and
in
pop
retw
cmp
das
push
cmovns
xchg
sti
lods
lcall
cmp
ds
sbb
mov
pusha
ds
mov
add
adc
cmc
dec
add
jnp
pop
add
adc
cmpsl
or
dec
daa
xor
mov
in
loope
mov
push
and
data16
adc
movsb
cmp
push
xlat
out
fs
jl
fs
rolb
cmpsb
inc
push
sub
adc
push
test
push
daa
cld
adc
push
inc
aad
push
inc
jmp
aas
mov
sub
inc
xchg
fs
addr16
mov
call
push
xor
mov
dec
sub
xor
stos
pop
mov
xor
push
cmp
hlt
pusha
dec
cmp
mov
and
mov
cltd
push
sbb
orb
and
inc
jno
lret
data16
add
adc
dec
mov
xchg
hlt
shl
cmpsl
sub
sahf
add
jb
mov
xorb
cmpl
pop
hlt
lret
daa
sarl
jle
jne
dec
jmp
mov
fmull
cltd
incb
shr
ds
jnp
test
adc
inc
mov
and
and
jbe
dec
inc
ficompl
int
mov
and
test
lock
jmp
push
fmuls
xor
or
filds
push
cmp
push
cli
mov
lods
nopl
ds
in
test
xor
adcl
mov
shrl
xor
jae
push
fsubs
jns
mov
aas
stc
sub
dec
repnz
jl
mov
inc
fldt
cmp
test
mov
jle
mov
push
xor
iret
sbb
je
pushf
hlt
sahf
mov
shll
fildll
jno
push
xchg
fs
push
sbb
stos
xor
or
int3
jmp
ds
add
gs
stos
pop
inc
jmp
push
ret
call
and
jmp
sbb
filds
inc
dec
mov
dec
adc
xchg
dec
and
cmc
pop
imul
push
mov
add
mov
xchg
arpl
aaa
das
pop
xchg
inc
in
or
repnz
xor
xchg
xchg
adc
pop
pusha
orl
test
inc
addr16
pop
lea
int3
push
push
or
in
stos
xchg
rolb
ja
xchg
add
push
out
loop
sbb
pop
js
jnp
mov
pop
std
ljmp
pop
adc
and
aam
imul
sbb
lea
les
jge
sub
inc
mov
cmpl
les
lea
pop
stc
ds
sub
lods
xlat
mov
rclb
imul
mov
pushf
call
mov
push
out
shrl
insl
imul
rcr
pop
cmp
xor
pop
mov
push
fnclex
sbb
loope
mov
es
xor
outsb
xchg
push
cmc
test
push
call
push
pop
insb
out
add
push
nop
pop
lea
hlt
jo
int3
xchg
and
dec
int
stos
fstpt
mov
pop
sub
mov
xor
out
nop
ret
xchg
push
stos
filds
mov
stos
xchg
fnstcw
xor
push
loope
ror
inc
xchg
jl
fimuls
mov
loopne
rcll
and
xor
push
dec
sarb
shl
lret
orb
outsl
sbb
in
in
jae
out
aas
mov
xchg
test
adc
mov
cmp
or
mov
mov
jl
mul
dec
jp
xor
jmp
mov
xchg
addr16
pop
movb
jmp
mov
leave
pop
jbe
out
jecxz
sbb
sub
add
pop
jmp
mov
out
lret
popf
mov
test
mov
xchg
jb
adc
adc
out
xlat
mulb
fisubrl
dec
xor
adc
lods
daa
sub
add
lcall
jbe
mov
cli
fs
ret
sti
sbb
pop
adc
mov
mov
test
sti
ljmp
xlat
sti
insl
and
inc
sub
jmp
mov
jmp
jns
cmpsl
jl
insl
and
jo
insb
int3
mov
jmp
fcmovbe
jmp
cltd
pushl
in
xlat
fmull
or
movb
stc
repnz
xchg
sub
jl
sub
lcall
xchg
lods
pop
push
cmp
pop
jmp
in
sbb
ja
clc
mov
push
dec
loopne
push
xchg
lock
in
sbb
daa
push
mov
loopne
dec
repz
and
dec
cs
lret
mov
mov
mov
dec
push
pop
sub
pop
test
loop
adc
cltd
jno
xchg
sub
xor
adc
xor
jge
lret
in
test
test
aaa
xorl
arpl
pop
mov
and
into
dec
cmpsb
movl
loopne
enter
mov
sbb
je
in
cmp
jne
fistpll
cs
xlat
jge
mov
js
push
pop
je
loope
scas
callw
js
jo
loope
push
imul
mov
dec
cmp
adc
lret
cld
out
jo
in
inc
adc
xchg
fmuls
clc
add
cwtl
fs
movsl
jp
int3
fstp
pop
clc
mov
and
inc
mov
popa
adc
test
cmp
push
cltd
add
ret
xlat
fistpll
sarb
shll
xor
mov
outsb
mov
and
jb
fmuls
scas
sub
outsb
add
arpl
lret
jns
lea
and
inc
fcmovnu
int3
dec
je
pop
mov
add
xchg
sbb
adc
arpl
sbb
and
mov
jge
xchg
out
icebp
jo
push
pop
iret
xchg
xor
clc
mov
mov
movsb
mov
jle
xchg
stos
in
push
repnz
lret
mov
sub
push
lods
mov
ficomps
or
sbb
or
sbb
dec
ja
std
jne
cmpsl
xchg
and
js
cmc
popa
mov
jg
lret
xor
popa
test
outsl
mov
int3
int
xchg
add
mov
inc
mov
push
inc
push
inc
popa
add
out
les
lods
xchg
push
lret
iret
sbb
andb
jle
push
lret
ret
cwtl
pop
and
mov
push
sar
mov
test
sub
cmp
dec
jno
ficoml
fisubs
jecxz
cmp
lods
sbb
and
cli
js
movsb
jne
mov
adc
jns
fimuls
fldpi
sbb
int
push
call
es
xorl
xchg
popf
and
or
push
sbb
mov
aad
sbb
mov
mov
sbb
jae
or
add
mov
clc
aas
xor
outsb
insl
stos
xchg
sub
movl
mov
out
jmp
inc
andps
pop
add
push
andb
out
inc
jl
addb
hlt
or
jmp
xchg
inc
xor
pop
inc
mov
xchg
cmp
mov
jae
std
jmp
cmp
cmp
mov
addb
or
movsb
gs
gs
xchg
fcmovu
outsl
popa
mov
or
sbb
out
dec
add
mov
stos
jl
lea
inc
mov
jl
arpl
sub
xchg
and
mov
xor
pushf
inc
mov
repnz
lcall
xchg
xlat
and
sbb
ret
cltd
stc
xorb
push
jne
and
sub
lods
and
mov
int
xchg
mov
jg
in
xor
sbb
popa
cmp
fwait
cmp
jo
clc
mov
or
stos
push
out
les
inc
sbb
jecxz
mov
xchg
sub
rorl
mov
sbb
jg
sbb
sbb
mov
inc
jo
jae
push
lcall
cmpsl
inc
or
sbb
dec
xlat
push
movsb
rol
mov
gs
data16
stos
outsl
inc
or
xchg
gs
jmp
icebp
iret
mov
xchg
lock
and
in
push
xchg
outsb
jno
mov
fnsave
test
xchg
test
or
and
push
inc
xchg
fadd
aam
mov
test
sar
addb
pushf
mov
or
int
enter
or
and
mov
inc
jecxz
and
test
push
xlat
cltd
or
ret
jmp
out
rcrb
movsl
iret
mov
sub
daa
sub
fdivs
imul
scas
jne
sbb
sub
adc
xchg
dec
mov
push
pop
push
jo
outsb
movsl
push
ret
cwtl
jne
popf
jp
mov
jle
inc
call
xor
pop
xchg
jb
xchg
sbbb
xchg
shlb
js
cmp
jne
lcall
mov
out
push
sub
aad
aad
jo
add
aam
cmp
leave
and
arpl
popa
negl
inc
mov
push
or
add
stos
filds
push
shrb
lock
loop
ret
dec
dec
push
pop
lods
nop
cmp
mov
cltd
jg
out
dec
iret
pop
mov
dec
add
jmp
aad
push
mov
shlb
outsb
lds
movsb
shl
pop
cwtl
mov
movsb
xchg
hlt
jo
mov
inc
lret
cmp
cmp
push
xorb
outsb
ja
jle
loop
xor
adc
sub
outsb
xchg
or
jmp
sahf
jb
int3
sub
push
sbbb
pop
push
imul
inc
mov
push
or
pop
cltd
jge
pop
pop
adc
xchg
das
cmp
gs
dec
xor
lret
mov
sbb
popa
sbb
or
pop
cmp
movl
insb
aad
scas
mov
sub
loopne
ljmp
test
mov
mov
pop
in
je
fcompl
xchg
cwtl
shlb
pop
xor
sbb
xchg
lret
shlb
lods
cmovle
jmp
leave
repz
xchg
dec
push
out
and
adc
cmp
sbb
jge
inc
or
or
pop
mov
in
test
mov
lods
or
pusha
jp
pmulhuw
and
add
dec
jl
hlt
sbb
cli
sbb
adcl
mov
cmp
adc
imul
jbe
jle
mov
dec
dec
cmp
fcomip
jmp
sbb
xlat
mov
sti
sub
push
rcrb
movsl
test
loop
mov
js
sti
lods
push
sbb
or
add
sti
xchg
pop
sbb
and
mov
not
add
xchg
sbb
outsl
xchg
mov
andl
dec
add
das
dec
scas
adc
cmp
mov
mov
mov
mov
shl
mov
xchg
lock
mov
mov
mov
js
cmp
add
mov
out
ds
js
test
jle
jp
fdivs
lods
std
sbb
or
cld
call
insb
daa
mov
cmp
mov
lret
aam
sbb
int3
int3
sub
scas
cmp
mov
inc
in
mov
or
iret
fisttpl
mov
and
ret
mov
push
fisttpl
sub
rcr
iret
rol
aad
add
fstpt
pop
cltd
rcll
lea
push
out
imul
push
cmp
out
or
inc
mov
jg,pn
cs
es
adc
jnp
enter
or
test
cmc
jb
adcl
push
push
repz
stc
call
mov
xchg
int
and
fldt
add
dec
mov
inc
and
fsubrl
and
movsb
and
bound
pop
int3
int
das
and
adc
pop
xor
pop
push
fwait
mov
add
add
mov
int
jne
add
and
and
out
dec
mull
xchg
andl
sub
stos
jb
cltd
cli
psubusw
hlt
int3
hlt
mov
in
cwtl
das
stos
or
es
aaa
pop
outsl
test
ret
movsb
jp
pop
xor
xchg
cmp
adc
xor
jae
es
jo
daa
lea
mov
xchg
dec
xor
test
arpl
or
xlat
pushf
arpl
movl
mov
ret
push
mov
and
fstps
mov
pop
or
inc
cld
sub
das
movsl
and
test
cmpsb
inc
aad
sub
mov
arpl
xchg
inc
push
ljmp
scas
test
inc
inc
aam
adc
repnz
ret
addr16
push
cmp
aaa
add
push
insl
mov
mov
xor
jae
xchg
sub
stos
clc
stos
and
xor
xchg
push
shll
dec
clc
dec
push
push
cmc
fstpt
or
cmp
or
mov
in
out
cmc
jg
pusha
jecxz
fcomip
sahf
sbb
test
xor
pop
ja
fidivrl
decl
dec
popf
fistps
xchg
les
sub
andb
push
jb
xor
mov
push
orl
dec
in
pop
adc
xor
andb
clc
adc
xor
cmp
sub
add
fildll
aam
addl
inc
xchg
insl
push
sbb
push
xchg
fcompl
adc
out
scas
push
or
push
sahf
lahf
mov
inc
jb
push
mov
rol
jecxz
out
sti
js
addl
pop
fstpl
lds
daa
mov
cmp
mov
pushf
mov
insl
data16
pop
inc
aas
sub
jl
inc
int3
jp
xor
mov
xchg
daa
je
jo
xchg
lock
leave
test
xor
xchg
mov
jo
add
push
adc
lds
add
cmc
cmp
push
fiaddl
jne
pop
shll
addl
jns
ficompl
adc
icebp
loopne
inc
mov
jge
and
pop
loop
mov
movsl
loopne
dec
inc
mov
std
arpl
addr16
dec
stc
sbb
jmp
inc
push
jle
add
cmpsl
rolb
leave
loop
icebp
outsl
add
sbb
pop
push
sub
dec
adc
mov
pop
push
push
xchg
sub
jl
dec
mov
filds
dec
xchg
fildll
imul
mov
mov
incb
call
mov
aaa
daa
lcall
inc
out
inc
push
lcall
je
ja
rol
in
xchg
jl
sti
xchg
imul
scas
mov
push
adc
or
fidivrs
sbb
aaa
sbb
sub
inc
stos
sbb
int3
test
sbb
testl
dec
movsb
add
shrl
fucomi
xchg
or
int
cmp
mov
cmp
pop
add
sbb
xor
aad
fisttpll
rolb
and
inc
jbe
jl
inc
mov
and
cmpsb
mov
loopne
jae
pop
jl
push
inc
imul
adc
pop
push
pop
inc
mov
movsb
dec
ds
or
and
lock
jno
sub
repnz
gs
scas
adc
out
pop
out
fbstp
sbb
cmpsl
ds
out
sbb
mov
shr
lcall
cmp
pop
pop
movl
cli
push
popf
and
sbb
js
dec
jb
fistpll
out
aaa
add
addl
xchg
clc
out
iret
sbb
sub
mov
test
pop
mov
jbe
popf
stc
lret
cltd
sub
lock
xchg
push
rolb
cs
inc
cwtl
outsl
mov
jb
jg
mov
inc
sar
push
insb
pop
push
xor
or
int3
push
push
sbb
mov
icebp
sbb
cmp
pop
adc
cli
je
jle
inc
xchg
pushf
out
sub
mov
lods
and
repnz
test
lret
xchg
test
mov
or
jns
ficoml
pusha
inc
jmp
and
insb
nop
arpl
sahf
jnp
lock
addl
and
sbb
inc
pop
sbb
pusha
outsl
imull
jo
cld
push
std
cmpsl
std
arpl
pop
test
add
inc
jns
imull
out
loope
ret
xchg
data16
insb
imul
aam
cwtl
add
push
pop
leave
mov
jae
stos
and
out
dec
sub
icebp
add
lret
fbstp
notl
mov
lock
pop
add
mov
xchg
add
adc
andl
fldcw
insl
or
pusha
lahf
push
cmp
jo
sub
iret
dec
loope
pop
push
shr
add
cmpsl
roll
add
in
loope
test
push
add
xchg
sub
push
jbe
rcrb
enter
xor
xor
lds
popa
in
repnz
mov
push
pop
adc
bound
push
mov
and
mov
movsl
int3
orb
cmp
mov
gs
int3
les
jns
mov
cmpsl
inc
push
jg
inc
xor
or
cmp
sbb
clc
adc
cltd
into
xlat
add
sahf
sbb
ficomps
outsb
out
jecxz
rcll
rorl
mov
movb
fs
cltd
push
push
stc
leave
or
pop
push
addr16
lret
mov
sub
and
jg
sbb
lods
mov
in
stos
adc
inc
pusha
mov
xchg
jnp
xchg
fiaddl
imul
push
lock
or
daa
stos
leave
mov
data16
or
ds
or
push
in
add
es
pop
push
sub
inc
push
jl
outsl
sub
push
xor
test
or
lret
push
push
inc
mov
sbb
jb
mov
sbb
into
and
or
test
xchg
sti
jg
push
jnp
and
shll
xor
cwtl
leave
scas
test
mov
fdiv
and
mov
xchg
pop
jo
lds
add
pop
and
xor
mov
xchg
loop
in
add
popf
mov
aam
push
pop
clc
ror
movsl
mov
add
push
pop
push
out
sub
mov
cmp
dec
popa
pop
xor
ds
push
popa
in
inc
pop
scas
out
fldcw
inc
xchg
inc
cwtl
shrb
or
fisttpll
xchg
dec
fcoml
js
arpl
popf
jg
push
pushf
pop
pusha
stos
xchg
addl
and
loop
jae
lahf
and
rorl
xchg
jns
mov
movsb
adc
pushaw
loope
in
int
adc
jle
mov
and
adc
add
sahf
sbb
xor
jmp
fwait
cmp
mov
in
pop
pop
lcall
rorl
mov
in
sub
cmp
movsb
sbb
jp
testb
aad
mov
addr16
adc
shll
xchg
xchg
cmp
mov
add
push
inc
mov
lahf
repz
xchg
shll
adc
addr16
mov
fwait
mov
pop
lods
out
call
stc
add
flds
jle
mov
push
nop
or
aam
sahf
cltd
cmpsb
add
dec
jne
mov
xchg
fdivl
and
push
mov
sbb
mov
dec
mov
jae
fcoml
jb
data16
incl
mov
leave
push
push
movsl
sub
cs
ds
loope
and
movzwl
jecxz
aas
or
pop
shrl
cli
xchg
out
rorl
divb
mov
jne
out
pop
adc
loopne
sub
push
pop
imul
ss
push
in
sbb
orl
push
movsb
scas
adc
fs
inc
dec
cmp
mov
mov
jl
repnz
rorl
js
insb
leave
mov
cwtl
mov
xchg
xchg
cmpsl
mov
jb
lods
scas
shll
leave
sar
pop
xor
daa
jecxz
jns
pop
pop
movsb
repz
jg
cmp
cmp
xor
lock
mov
fidivrs
jle
test
lret
mull
inc
pop
push
adc
sub
mov
or
das
mov
or
sahf
in
xor
cmp
xor
lea
push
loope
loopne
jmp
fildll
stos
stos
and
xchg
clc
sub
mov
daa
inc
sbb
mov
lret
cs
movsb
shl
fmul
cmc
mov
xor
jb
mov
pop
rcll
out
dec
mov
jmp
or
aas
mov
out
lahf
pop
jmp
stos
xchg
gs
jne
jmp
in
mov
sbb
sub
movsb
push
mov
dec
lods
pop
xchg
inc
mov
lret
movsl
rcll
scas
mov
test
jmp
add
in
push
movsl
arpl
xor
xchg
jecxz
fdivl
jp
repz
shrl
adc
negb
push
ja
xchg
jp
sub
push
sbb
iret
jb
inc
test
xor
add
pop
mov
fwait
mov
jmp
inc
aas
xor
sbb
and
sub
into
push
xlat
sbb
xchg
aaa
in
xlat
jo
negl
xchg
xor
ret
dec
roll
add
cmpsl
inc
inc
pop
scas
mov
adc
mov
inc
arpl
out
outsl
sub
loopne
mov
pop
mov
cmpsb
xlat
lods
ret
pusha
loop,pn
movsl
in
cmp
mov
das
cmp
testl
and
jecxz
mov
js
sahf
add
mov
mov
push
out
pop
xor
divl
push
outsb
mov
jns
or
in
scas
xor
dec
fs
xchg
jne
loop
fwait
loopnew
jmp
mov
or
jno
sub
xor
pop
mov
inc
mov
add
jb
stos
imul
mov
mov
add
and
jl
jle
out
jno
pop
int
clc
xor
sub
pop
cli
add
cmc
push
and
inc
stos
inc
cld
xor
cltd
aaa
mov
ror
xchg
cltd
popf
aaa
leave
jns
hlt
loop
out
xchg
xchg
xchg
add
and
rcrl
repz
out
mov
cltd
lods
leave
aam
add
loop
mov
ret
cli
inc
hlt
dec
add
out
ljmp
in
and
ret
adc
or
dec
out
xor
in
push
sarl
mov
or
cwtl
pop
mov
inc
dec
xor
xchg
or
sbb
jecxz
adc
sub
pop
add
int
add
inc
sbb
and
outsl
adc
mov
adc
sbb
adc
js
mov
stos
shll
xor
xor
sbb
sbb
data16
daa
mov
sbb
insb
notb
inc
xor
jb
mov
jo
pop
or
rolb
push
inc
pop
aad
mov
sbb
or
push
ror
stos
arpl
xchg
sbb
sbb
sbb
fcomi
mov
inc
xor
jge
sub
jmp
test
xchg
test
pushw
cltd
lods
std
js
jae
outsb
hlt
cli
test
mov
hlt
xor
fidivrl
inc
pop
and
jg
and
inc
dec
inc
call
mov
in
iret
xor
dec
gs
push
rep
mov
push
xchg
leave
test
push
mov
fwait
cld
add
xchg
xor
push
mov
dec
mov
dec
data16
out
out
xchg
ss
pop
fucomip
jge
test
call
mov
cmp
nopl
je
ja
and
pop
mov
mov
movsb
pop
fsubl
scas
mov
popf
mov
fmul
int3
jns
lcall
jae
dec
dec
push
stc
sahf
shlb
pop
sbb
std
dec
sbb
xchg
cmc
nop
cmp
popf
shll
jecxz
shll
mov
push
xchg
jne
pop
pop
mov
addr16
cmp
stos
test
jno
add
int
popa
mov
push
cmc
jge
js
mov
adc
sub
cs
jae
jo
ret
cmp
repz
cmp
repz
leave
cmp
jnp
push
sbb
xor
jns
pop
scas
push
pop
lret
sub
add
out
imul
mov
or
or
mov
int
cmovae
push
push
inc
inc
test
sbb
and
xor
cltd
sbb
jg
adc
inc
xchg
in
icebp
cli
mov
inc
lods
or
in
aaa
lods
push
pushf
jmp
dec
pop
testb
fsubp
ret
aas
stos
addl
add
pop
arpl
sbb
xchg
pop
inc
hlt
xor
inc
inc
ljmp
jg
mov
inc
mov
in
mov
fnstenv
jne
and
jbe
out
jp
sbb
push
fwait
add
jle
lahf
and
mov
dec
dec
stos
cmpsl
adc
or
push
jecxz
jb
clc
imul
mov
cmp
daa
imul
push
cmp
mov
mov
fisttps
mov
adc
and
jne
mov
and
enter
out
pusha
mov
addr16
pop
push
fcmovu
sbb
ljmp
subb
into
jae
lods
ficompl
cltd
fwait
adc
clc
add
mov
in
sbb
int
iret
popf
pop
sbbl
add
pop
cmpb
push
ss
xor
neg
aam
dec
stc
cli
inc
fldlg2
sub
cmp
xchg
inc
and
and
jp
dec
insl
inc
data16
popl
insb
push
pusha
jg
lea
movsl
inc
adc
call
jle
mov
xchg
adc
inc
mov
jge
aaa
xor
les
sub
push
insl
mov
push
inc
mov
and
js
cld
sub
sarb
mov
and
xchg
xchg
stos
mov
dec
inc
scas
punpckhdq
ja
iret
adc
xchg
mov
or
xchg
mov
mov
and
cmpsl
adc
mov
arpl
inc
pop
movsl
ja
test
enter
loop
rorl
cmpsl
andl
inc
sub
scas
pop
out
mov
movsb
test
fnsave
adc
mov
sti
dec
dec
out
xchg
jg
mov
aas
popa
push
jle
ljmp
aad
mov
pop
mov
or
ds
arpl
xchg
push
pop
adc
cld
gs
or
sbb
lret
sub
fsts
shlb
xchg
jb
inc
mov
leave
pop
jge
sbb
dec
adc
sahf
mov
mov
add
add
sbb
lods
xor
pop
or
inc
scas
xor
inc
and
push
ret
je
or
sub
idivb
sub
xlat
call
mov
ss
push
aas
cmp
mov
leave
cwtl
punpcklwd
mov
test
push
jne
js
xchg
jle
mov
rcl
out
sbb
dec
jmp
adc
xor
jmp
loope
xchg
lock
aaa
dec
xchg
enter
ds
je
mov
pop
cmc
adc
xchg
sbb
xor
cmpsb
mov
stc
lret
rcrl
pop
test
jmp
arpl
cmp
scas
lcall
dec
repnz
mov
std
popa
data16
and
test
or
bndldx
sbb
adc
pushf
lods
jno
push
xchg
adc
outsb
mov
xchg
nop
stc
mov
adc
aaa
add
and
mov
add
les
pop
pop
add
sbb
xor
xchg
pusha
mov
adc
sahf
out
lock
dec
dec
scas
inc
sub
jmp
icebp
ret
jle
mov
fidivrs
jns
mov
and
cmpsl
enter
push
movsl
test
ljmp
push
pop
aad
fstpt
std
ljmp
ds
insb
lds
rcrl
and
xchg
pop
ss
pop
cmp
ret
arpl
mov
pop
mov
or
lea
xlat
add
sti
xor
jmp
add
jle
pop
arpl
ljmp
xor
sbb
icebp
jns
repz
mov
cmc
or
xlat
jmp
pop
shrb
fs
repz
cli
jbe
sbb
sub
sub
fcmovnu
jno
adc
cmpsl
pop
xor
fwait
fwait
pusha
insb
sbb
int3
movsl
sti
push
mov
cmp
mov
xchg
in
push
add
adcl
testb
icebp
subb
xor
addr16
inc
push
xchg
fs
push
lret
or
test
and
lods
mov
out
repz
mov
outsl
pop
mov
mov
adc
dec
add
inc
dec
pop
inc
pop
outsl
mov
cmp
les
in
leave
into
xor
jb
or
mov
mov
xchg
sbb
daa
mov
idiv
jns
fcmovbe
cmpsl
adc
xor
push
adcl
lcall
xchg
xorl
cmc
add
xchg
pop
lret
cmc
add
cmp
out
clc
and
xor
pop
push
addr16
or
loopne
push
imul
js
push
cmp
ss
loope
cmp
popf
mov
frstor
imul
shl
xchg
xchg
sub
hlt
add
cwtl
mov
pusha
negl
fistpll
push
mov
insl
and
xor
and
mov
iret
adc
mov
std
rcll
js,pn
xchg
hlt
inc
lret
test
xor
push
cmpl
pop
lret
fwait
stos
jl
xchg
mov
and
das
daa
popa
aad
jp
mov
jbe
or
mov
pop
notl
push
imulb
movsb
int
sub
imul
sub
adc
fsubrs
mov
mov
xor
pop
pop
and
mov
sbbb
je
aam
pop
idivb
fisubl
arpl
vcvtsi2ssl
mov
jmp
arpl
out
mov
xchg
sbb
mov
fadds
movsl
ds
xor
push
mov
into
sbb
add
iret
mov
inc
rol
mov
stc
mov
cmc
jo
cs
mov
sbb
mov
and
ja
out
ret
das
add
icebp
fstps
clc
std
and
xor
rcrl
jns
dec
movsb
sbb
pop
lock
sbb
jge
and
inc
push
xor
jecxz
xor
xchg
das
test
or
movsb
int3
jmp
sbb
mov
sub
cmp
sbb
push
out
fadds
cmp
lret
je
jge
inc
adc
sub
fistpl
xchg
cs
cmp
jb
insb
adc
push
aaa
gs
inc
out
dec
testb
cmpsb
jae
in
push
inc
mov
cmp
das
push
cmp
xchg
mov
xor
out
mov
xlat
xchg
xchg
arpl
loop
xor
mov
and
xchg
imul
lret
lock
shl
and
sbb
inc
cld
xchg
clc
pop
cmp
out
and
scas
add
stos
inc
pop
adc
andb
mov
xchg
mov
ret
adcl
out
stc
push
jp
scas
cmp
int
xor
lock
aam
test
pusha
mov
int3
inc
addl
pop
xor
test
ficompl
test
sbb
pop
mov
mov
mov
mov
mov
shlb
mov
add
insb
mov
sbb
pop
fnstcw
gs
mov
insb
cltd
push
into
in
mov
leave
xchg
cwtl
push
add
jno
lret
xlat
into
shll
enter
push
adc
mov
push
jne
mov
into
insl
int
or
and
outsb
insl
fmull
lcall
pop
fisubrl
fdivrs
add
in
cmp
sub
es
lea
inc
xor
mov
and
xchg
insb
pop
push
loope
roll
and
int3
out
adc
adc
loopne
adc
pop
inc
xchg
fiaddl
notb
sub
xor
mov
sti
fldenv
pop
aas
inc
jmp
xor
inc
lcall
jne
xchg
lret
pop
add
mov
add
cmpsl
int3
popf
cmp
push
jb
ljmp
stos
push
loopne
add
mov
imul
hlt
inc
dec
xlat
mov
adc
int
cltd
add
xor
dec
jbe
mov
mov
jg
pop
js
cltd
mov
out
sbb
repnz
mov
jo
repz
shlb
mov
push
push
mov
les
jae
mov
enter
bound
rcr
shll
mov
mov
pop
iret
mov
mov
cmpsb
mov
cmp
addr16
adc
push
arpl
fiadds
xor
push
test
std
fs
and
mov
iret
rorb
aas
push
test
dec
dec
lcall
stos
inc
jno
cmp
inc
in
pop
mov
dec
movsb
sbb
push
cmp
faddp
data16
aam
cltd
jp
sbb
arpl
jp
or
idivl
sub
leave
and
push
cwtl
imul
vpunpcklqdq
push
adc
and
mov
pop
cmpsb
mov
enter
xchg
jg
mov
repnz
sti
sub
das
popf
fiaddl
xchg
pop
xor
ds
ret
dec
pop
xchg
pop
imul
adc
pop
ret
lock
lahf
sub
scas
add
das
sti
lods
push
jp
int
call
sti
xlat
dec
shll
or
xor
repnz
or
sbb
push
sbb
daa
aad
xchg
std
addr16
add
pop
xchg
mov
jp
lods
cmc
repnz
adc
pop
add
loopne
cmp
popf
cli
mov
pusha
gs
jp
push
jmp
inc
lods
adc
inc
jg
xchg
test
arpl
mov
sub
mov
sub
mov
push
pusha
movl
aam
jb
ds
lret
faddl
pop
test
mov
mov
cmpsb
cmp
sub
ret
sub
push
loopne
andl
cmp
in
mov
aam
mov
ljmp
and
and
or
stos
inc
stos
pop
insb
lret
add
pop
into
push
adc
sub
repz
push
js
xchg
js
add
sbb
fistpl
jo
sbb
cmp
shl
cmp
scas
sub
mov
js
add
daa
adc
inc
sub
aas
add
dec
cs
out
add
add
dec
out
mov
xor
push
sti
in
mov
divl
cmpsl
mov
push
std
jg
arpl
xchg
popa
adc
rcrl
movsl
vmovdqa
adc
lods
or
repnz
pop
mov
sbb
mov
enter
mov
sub
inc
std
test
sub
mov
ds
mov
inc
ret
lea
sbb
movsb
jns
int3
mov
fucom
ss
mov
cli
sbb
sub
adc
cwtl
push
sbb
bnd
cmp
adc
andl
pop
sbb
hlt
call
or
mov
pop
add
imul
jne
repz
xor
in
es
xor
ret
cmpsb
movsl
xchg
insb
sub
mov
sub
xchg
pusha
xor
mov
lods
sub
mov
and
fstpt
addr16
and
cmp
jp
cmp
adc
lahf
sub
push
adc
push
bound
push
sbb
cmp
jge
dec
and
mov
mov
mov
ds
sbb
mov
ja
lds
pop
mov
test
and
sahf
pop
cmp
mov
mov
scas
out
push
pop
lret
adc
mov
loop
sbb
pop
cli
aam
dec
cltd
adc
xchg
hlt
ljmp
mov
daa
repnz
pop
push
bound
lock
mov
jmp
mov
or
ficompl
scas
cli
xor
decl
dec
loop
mov
fucomi
mov
inc
sbb
push
or
push
js
pop
jo
mov
mov
fidivrs
inc
loopne
out
test
push
in
xlat
jbe
pop
loope
ficomps
mov
js
ja
int
sahf
gs
mov
xchg
scas
in
aas
in
js
das
aad
jno
sub
inc
cmc
sub
add
and
cmp
mov
fldenv
jb
and
sbb
repnz
jge
test
out
mov
aad
dec
mov
movsl
mov
adc
insl
jo
out
ret
ja
imul
daa
pop
les
aas
adcb
push
adc
pop
sub
dec
fcompl
dec
push
sti
ss
jecxz
in
addb
mov
lahf
add
icebp
out
sbb
pop
jbe
sbb
mov
push
sbb
lret
mov
adc
inc
inc
popa
imul
jge
ja
ret
fcmovnb
dec
sbb
inc
movsl
push
inc
out
xor
cmp
mov
loope
mov
push
rorl
lods
pop
ret
pop
pop
es
loop
push
test
inc
sub
xchg
stc
sbb
xor
xchg
cmp
and
push
push
and
mov
xchg
xor
jns
lahf
into
sbb
in
iret
inc
jl
mov
ljmp
scas
loope
das
mov
loop
pop
jbe
imul
ja
or
fidivl
mov
jne
xor
fidivl
jg
je
jecxz
adc
cmc
mov
push
xor
out
push
repz
xor
shrl
mov
pop
xchg
cli
nop
push
fnstenv
xchg
pop
popf
dec
mov
push
adc
jnp
mov
das
dec
leave
stos
xor
add
aam
clc
lcall
popf
pop
or
mov
lret
mov
or
loopne
mov
adc
es
aas
sbb
jle
xorb
mov
shrl
test
jne
pop
add
sbb
push
mov
insb
jg
imul
jl
leave
pusha
cmpsb
int3
fs
cmc
testb
mov
add
lcall
pop
pop
cmc
and
fwait
sub
addr16
push
cmp
inc
or
cmp
lahf
pop
fisubs
cld
dec
pop
mov
xchg
mov
cmc
shrb
popf
sbb
aam
jbe
and
cwtl
add
dec
xchg
adc
cmp
fwait
mov
mov
fsub
adc
xor
sub
and
scas
dec
jns
xor
cld
jae
jecxz
push
sub
ret
cmp
add
ljmp
xlat
mov
arpl
xor
mov
xor
aam
pop
jmp
xor
sarl
or
sarb
and
pusha
xchg
scas
pop
jle
mov
cltd
and
add
hlt
mov
xor
bnd
push
sub
push
fnsave
lea
cld
xchg
inc
scas
adc
add
dec
adc
and
xchg
or
mov
sub
xor
push
ret
jnp
xor
inc
negb
dec
rcrb
aam
sbb
insl
pushf
push
aas
push
insb
imulb
popf
add
pop
push
adc
ja
xlat
addr16
clc
out
inc
push
faddl
mov
or
ljmp
jb
dec
xor
and
and
mov
aad
outsb
jnp
ljmp
leave
sbb
popa
push
in
test
mov
adc
adc
faddl
ss
xor
or
cltd
xchg
inc
loope
xor
inc
dec
or
cmp
fcom
dec
lods
movsb
lcall
sbb
add
mov
inc
ret
test
das
in
xor
imul
lcall
sbb
push
enter
sarb
lock
leave
cltd
nop
es
sbb
enter
loope
jmp
xchg
pop
leave
scas
mov
sbb
pop
loope
push
jle
push
xor
stos
loopne
inc
pop
dec
in
dec
mov
out
sbb
aad
test
fucomip
lahf
push
ficomps
mov
das
and
jl
push
ds
das
and
shrl
hlt
nop
cmp
xchg
das
testb
adc
xor
mov
adc
lret
pop
xchg
js
jo
xorl
mov
and
or
adc
enter
jbe
inc
pop
push
jne
fst
cmc
add
pop
icebp
xchg
sbb
flds
xchg
rcll
or
xor
add
add
pop
cld
in
cmpsb
dec
stos
out
leave
add
or
lds
out
stc
dec
outsb
ss
js
lea
ljmp
sti
subb
inc
dec
cld
mov
jge
push
inc
or
shlb
mov
stc
call
psadbw
loope
cmc
sarb
in
push
sti
aaa
sahf
aam
jecxz
and
scas
js
adc
xor
mov
mov
jp
jg
ljmp
pop
loopne
ret
test
stos
sbb
sbb
mov
stc
or
or
lret
and
jne
jae
orb
notb
lods
out
mov
insb
das
leave
fildl
into
ret
push
xchg
cmp
jae
test
xor
bnd
fldenv
jle
pop
das
cmp
std
in
mov
data16
pushf
sub
ret
mov
and
and
or
add
mov
es
pop
inc
pop
in
fidivl
mov
lods
sbb
inc
mov
xor
xor
mov
pop
test
test
negb
mov
mov
rorb
pop
cmpsl
xor
out
ret
sti
mov
shl
add
jmp
dec
aaa
add
std
insl
cld
mov
cli
jge
stos
mov
mov
in
fmul
push
cmp
push
jge
xor
aam
test
mov
inc
cmp
test
push
flds
fsubp
mov
lea
mov
aad
xor
imul
das
adc
stos
pop
or
aaa
jbe
or
push
cmp
les
jl
rclb
daa
xor
xchg
jl
aad
sub
dec
shlb
push
cltd
sub
push
jo
jge
sub
pusha
pop
and
lcall
inc
out
outsb
bnd
inc
push
pop
bound
sbb
bound
dec
or
pop
outsl
push
popf
jmp
sub
lea
lds
fwait
sub
pop
stos
jno
push
movsl
mov
mov
and
sub
scas
js
call
push
ror
inc
scas
bound
sahf
sub
xor
mov
xchg
fcmovnb
loopne
testb
adc
pop
dec
jo
int
or
stc
mov
movsb
rcr
fdecstp
sbb
jne
or
fisttpll
stos
inc
cmp
scas
inc
jmp
dec
stc
pusha
xor
shll
cmp
or
mov
add
pop
shrl
and
mov
mov
jg
add
sub
cmp
data16
cwtl
dec
jae
ret
clc
adc
dec
lret
bound
into
cmpsl
rcrl
mov
lods
add
leave
out
cmp
pusha
daa
add
decb
add
das
imul
dec
mov
out
t1mskc
ret
movsl
push
push
add
and
lret
xor
xor
jnp
xor
lds
sbb
jns
jbe
jns
mov
jne
push
sub
lock
lahf
cmovs
cmpsl
ficomps
imul
mov
movsb
xchg
mov
sub
xchg
inc
mov
adc
pop
aad
jl
addr16
sbb
xor
xor
shl
xor
outsl
jbe
xor
imul
lock
dec
push
and
int3
int3
loopne
inc
lds
int3
cmpsb
pusha
movsl
pop
or
rcrb
in
insb
and
inc
jns
xchg
bound
mov
gs
fwait
and
cmpsb
repz
fdivrs
cli
shll
sbb
fsts
push
adc
insb
adc
inc
cmpsb
push
decl
cmp
adc
orb
andb
mov
adc
mov
dec
movsb
inc
dec
lds
les
fsubrl
adc
out
push
adc
test
lret
dec
jl
stc
cmp
add
loop
cmp
adc
sti
xor
aam
adc
mov
and
cmp
pop
xchg
int3
add
popl
les
movsb
shll
minps
inc
sub
cmp
xchg
mov
dec
stc
das
jbe
lea
lahf
and
and
cld
xor
enter
data16
iret
fisttps
adc
testb
loop
jg
pop
rcrl
nop
repz
test
rcrb
jb
enter
sbb
in
push
mov
jbe
pop
movsl
insb
fnsave
dec
loopw
dec
mov
scas
or
dec
pop
iret
pop
lock
sbb
insl
fcomip
push
push
imul
sbb
lea
xchg
push
mov
xchg
xor
movsl
test
sub
shrb
xchg
inc
pushf
cmc
push
inc
dec
into
lock
aas
cld
adc
aam
push
jge
sub
pop
xor
sti
jno
xor
enter
adc
sti
cli
xchg
cmp
inc
pop
adc
mov
mov
or
mov
mov
add
pushf
ja
pop
repnz
out
mov
xchg
cli
pop
ljmp
stc
icebp
pop
outsb
and
mov
sbb
mov
pop
ljmp
pusha
fcmovnbe
rorb
loop
pop
push
adc
push
sbb
and
bound
sbb
sub
out
stos
popa
mov
int
mov
lret
add
insl
push
push
fs
inc
xchg
mov
mov
add
mov
lea
mov
or
cwtl
icebp
xchg
enter
cmpsl
pusha
pushf
stos
js
shlb
mov
inc
mov
push
xlat
lea
idivb
loop
inc
push
mov
cmp
lret
push
mov
shl
scas
andb
lea
dec
cmpl
cmp
pushf
jge
lods
iret
fisubrs
and
mov
popa
push
cmc
repnz
mov
fstps
imul
imul
dec
movntq
fcoms
sti
hlt
jae
mov
leave
mov
shrb
out
sbb
cld
in
loopne
pop
sub
add
aam
cmp
add
mov
dec
mov
mov
add
movsl
fsubrs
mov
xlat
insb
mov
jle
jno
js
je
adc
push
lcall
stc
in
mov
xchg
sub
mov
aad
in
inc
pusha
or
lcall
test
in
xchg
push
mov
mov
lret
or
sahf
daa
in
cmc
sbb
je
dec
cmp
ja
mov
cltd
das
push
into
or
mov
cwtl
in
and
lahf
sbb
mov
add
mov
pushl
jle
cmp
hlt
dec
icebp
sub
movsb
cwtl
iret
in
cltd
sub
nop
sbb
sub
jge
inc
fcoml
inc
inc
rolb
jge
pop
pusha
dec
pop
inc
sub
ret
sub
xor
jmp
idivl
pop
cmp
pop
test
or
push
push
mov
sub
jecxz
icebp
enter
lods
sub
mov
adc
mov
fs
scas
dec
imul
ret
je
imul
out
shl
out
imul
xchg
pop
xchg
pushf
iret
divb
repnz
mov
push
in
xor
cmp
mov
inc
adc
xchg
cmovle
sub
dec
fsubp
outsb
mov
dec
mov
fwait
sahf
cmp
dec
push
adcb
shr
jp
push
jecxz
popa
insb
push
inc
push
insl
and
jmp
in
inc
mov
sti
sahf
or
sub
mov
pop
loopne
ret
mov
jb
popa
imull
xchg
bound
xor
shlb
fnsave
xor
mov
sub
mov
cld
out
mov
jl
push
or
cmpsb
add
seta
faddl
add
jne
and
mov
adc
lret
out
xchg
xor
mov
addr16
scas
jb
insl
adc
ja
or
dec
xor
pop
cmpsl
ret
mov
and
scas
pop
adc
test
pop
push
movsl
subb
icebp
lret
sbb
xchg
pop
jle
cmpsl
movsl
mov
loope
outsb
das
dec
stc
push
jb
xchg
imull
fs
cmpsb
sbb
cmpsl
pop
mov
fwait
sbb
pop
aam
mov
loop
or
push
repnz
cs
jmp
es
lret
xchg
test
xchg
push
stos
push
lret
ret
sbb
or
xor
fmuls
call
int3
pop
and
or
push
dec
filds
lods
cli
xchg
ljmp
dec
mov
add
out
inc
mov
push
sahf
mov
cltd
daa
aas
pop
out
in
xor
mov
push
cmp
adc
jle
inc
lds
cmp
xchg
pop
and
jnp
xchg
push
add
out
and
xor
jp
pusha
aad
and
push
mov
int
popf
fs
pop
lret
jecxz
pop
xchg
daa
ja
cmp
pop
aas
jae
loope
mov
or
pop
pushf
lret
pop
das
mov
inc
movsl
and
inc
ffree
sbb
rcrb
cld
xor
int3
mov
xor
pop
inc
cmp
jbe
std
mov
sub
aam
mov
fisttps
out
pop
popa
push
cltd
rol
lods
sub
adc
or
sbb
push
cmc
lret
cmp
fwait
xor
pop
and
or
xchg
dec
pop
mov
lcall
ljmp
pop
daa
mov
ss
test
jb
fstp
dec
pop
push
fnstsw
test
mov
and
push
cmpsl
jg
out
mov
lock
jne
mov
dec
lret
aas
xor
lcall
jne
fcoml
out
adc
add
icebp
xor
loopne
fyl2xp1
cmp
notl
mov
sbb
jmp
imull
imul
and
cltd
out
push
pop
leave
mov
pusha
testl
or
add
mov
andb
mov
pop
jae
movsl
jmp
jecxz
mov
xchg
mov
pop
in
insl
inc
popf
jb
mov
mov
pop
push
or
call
or
in
jae
xchg
mul
movsb
in
mov
mov
fildl
pop
sbb
dec
popa
cld
xchg
enter
out
xchg
add
mov
scas
mov
push
jno
sub
out
lods
sbb
sti
ljmp
iret
cld
pop
outsl
push
cmpsb
out
and
outsl
scas
fcmovnu
pop
sti
daa
sub
ret
push
scas
fwait
sbb
test
sbb
add
mov
fldenv
add
pop
lret
fsubr
inc
sub
push
lret
iret
jo
hlt
xchg
mov
stos
adcb
lret
mov
loop
lods
inc
fucomi
stos
insl
into
lret
inc
leave
inc
mov
sub
rclb
dec
pop
popf
je
jl
mov
dec
or
push
imul
loopne
icebp
jg
xor
clc
xchg
daa
mov
das
out
jmp
adc
jae
jae
mov
lahf
js
mov
fstpl
and
gs
mov
clc
cmc
mov
shl
sbb
sbb
mov
and
movl
and
push
or
popf
jp
inc
mov
cwtl
mov
cld
pop
push
das
dec
mov
push
in
cmp
stc
stc
jl
ljmp
test
test
push
xor
jbe
aam
movsb
enter
jbe
add
hlt
and
aam
push
xor
or
adc
outsl
cmp
inc
aas
jns
rcll
push
out
jns
pop
mov
out
pop
mov
jge
xor
mov
movsl
ret
rcll
xchg
lods
mov
inc
loope
sbb
dec
dec
loop
ja
or
cli
leave
mov
jmp
stos
mov
in
cmpb
or
xchg
pop
loop
subl
out
fwait
daa
or
cltd
mov
aad
pop
das
outsl
aam
mov
pop
call
xchg
test
adc
in
stc
aam
xor
scas
cmp
sub
and
cltd
orl
jno
outsl
orb
mov
popl
outsl
sbb
and
or
or
gs
cli
arpl
mov
xorl
cltd
ss
movsl
dec
lea
push
rcrb
addb
jg
outsb
lahf
sub
lcall
test
int3
test
sbb
xor
jle
mull
mov
test
xchg
mov
scas
test
leave
ret
lds
stc
mov
mov
jne
mov
pop
arpl
inc
mov
paddq
in
cmpsl
jae
cmp
sub
cs
movsl
and
add
mov
mov
jg
xchg
jg
or
stos
call
mov
xchg
ds
jp
pop
push
cltd
mov
fcmovu
jge
ds
repz
rep
js
lods
lds
push
sbb
cmpsb
lret
stos
rclw
popa
mov
push
jbe
dec
pop
insb
adc
mov
les
insb
xchg
rorb
inc
sbb
sbb
add
xor
mov
pop
inc
lret
sti
pop
pusha
mov
cmp
test
mov
mov
dec
imul
cli
cmpsl
aas
test
mov
ja
adc
das
mov
or
shl
xchg
movsl
or
popf
stos
lods
xor
shll
insl
add
push
push
pop
inc
push
std
sahf
data16
rol
jle
xor
scas
pop
mov
cs
adc
xchg
subl
mov
add
pop
mov
dec
cmpsb
dec
pop
imul
or
cld
inc
and
push
cmp
mov
popa
lret
aaa
decl
mov
iret
movl
xor
repnz
mov
fldl
add
dec
jg
int3
mov
mov
leave
dec
push
inc
push
or
adc
mov
jle
push
scas
push
cld
andl
daa
jp
mov
bt
aad
test
jl
nop
jecxz
push
aaa
hlt
sub
mov
sub
and
shrb
aad
cmp
rcrl
scas
pop
cmp
xchg
mov
sbb
mov
pusha
and
loop
ss
in
add
push
iret
xchg
push
aaa
test
stc
jne
into
dec
ss
sahf
jae
adc
mov
dec
push
ss
adc
out
scas
sbb
push
inc
test
daa
dec
or
mov
arpl
lock
push
adc
test
mov
push
mov
cs
sti
into
push
xchg
or
mov
sub
sub
rcrl
sarl
addr16
popf
xchg
pop
fcoms
ret
sbb
fcoms
orl
mov
test
mov
icebp
xchg
cmp
insl
mov
jmp
sti
lret
push
out
call
into
repnz
jg
lea
ss
adc
mov
out
inc
outsb
sbb
je
inc
mov
mov
pop
out
add
mov
push
orl
adc
pop
js
div
mov
aam
lods
sbb
jecxz
pop
cld
out
xchg
orb
xchg
cmc
sub
push
cmpsl
das
xchg
stc
cld
sub
inc
into
cmp
or
inc
jae
xchg
add
inc
in
xchg
lahf
das
daa
mov
xor
jge
or
nop
push
imul
and
data16
mov
adc
cmpsl
rcll
sub
jle
shlb
jno
insl
jg
loopne
add
inc
jle
xchg
leave
cmp
pop
jae
cmp
das
dec
pop
and
leave
aad
jp
xor
xor
sub
daa
fisubrs
aas
pop
sub
mov
cvtps2pd
xorl
sub
and
and
cwtl
clc
adc
int
leave
shll
jo
or
lahf
ss
or
outsb
cmp
lret
dec
sub
jae
repnz
sbb
sub
shll
or
sbb
into
sub
hlt
or
rcll
fstpt
inc
or
loopne
lahf
jl
xchg
inc
out
cmpl
sarb
cwtl
into
shl
jge
jo
or
mov
xchg
or
xchg
push
inc
pop
sbb
mov
mov
mov
sti
rclb
lea
inc
ret
cmpsl
test
mov
jg
pop
nop
enter
lret
sub
cmpsl
sub
popa
pop
adc
dec
jae
cli
ret
pop
push
cltd
dec
lcall
xor
leave
push
and
leave
int
movsb
aas
fisubl
push
add
sub
xor
add
ss
jle
xor
out
pop
dec
notl
sbb
lods
sub
cmpsl
lret
je
xor
stc
pop
adcb
push
and
jns
cmp
push
ds
mov
call
push
mov
jno
cld
fsubrl
dec
in
arpl
and
or
add
daa
test
sar
iret
ja
enter
inc
inc
fs
mov
pop
loop
inc
inc
es
ss
pop
fistps
mov
pop
outsl
repnz
sub
xor
or
mov
jle
sbb
mov
jle
and
leave
insb
je
cltd
inc
rorb
add
das
jbe
popa
and
pop
cwtl
pop
xchg
out
in
es
xor
xchg
xor
pop
sub
outsl
shll
call
cmp
jae
mov
insb
ret
cmp
xchg
repz
pop
fwait
push
scas
mov
mov
and
jbe
jns
adc
cwtl
xchg
push
scas
push
xchg
movb
rorb
cmp
sti
jecxz
in
mov
testb
push
xorl
in
std
cmp
insl
fidivs
lahf
leave
rcrb
mov
lds
jbe
jns
sbb
pop
adcb
adc
xchg
adc
fs
add
mov
aad
sbb
sub
data16
imulb
pop
bound
repnz
and
push
and
dec
mov
or
pop
cmc
push
shr
jl
mov
adc
pop
pop
scas
rcrb
lret
sbb
adc
mov
dec
jge
in
dec
xor
test
bound
imul
out
bound
mov
push
mov
pop
in
inc
and
xchg
sub
js
mov
pop
out
or
mov
sub
add
lcall
lea
out
cli
ljmp
mov
xchg
push
or
push
mov
cmpsb
inc
lods
sbb
mov
dec
dec
lods
ret
mov
sbb
insl
and
mov
sbb
stc
arpl
mov
push
or
ja
adc
mov
shrl
stos
mull
outsb
ret
and
aad
add
stos
xor
in
jns
ja
ds
sbb
xchg
pop
jnp
adc
mov
mov
pop
das
push
or
mov
sarb
sub
into
mov
push
mov
inc
in
repz
cs
jmp
aam
push
cli
sbb
or
out
cmp
cli
andb
int
add
adc
aad
loop
inc
aam
xor
mov
je
sbb
dec
shll
sahf
xor
jb
popa
jbe
inc
mov
sahf
mov
xlat
xchg
or
mov
cli
cmp
je
mov
je
das
jle
andb
mov
iret
jmp
lahf
xchg
loop
cmpsb
hlt
add
popw
xchg
addr16
pop
pop
push
push
lret
push
in
mov
mov
je
mov
aad
and
daa
push
add
inc
push
cmp
jle
hlt
stc
or
inc
outsb
xor
stc
aad
jg
dec
out
push
pop
jo
sti
cmc
addb
ljmp
sub
jb
cmp
repnz
insl
adc
xchg
mov
xor
stos
push
dec
sbb
jg
insb
mov
outsb
pop
lret
xchg
call
jnp
mov
pushf
pusha
sarb
xor
aam
dec
and
iret
cli
xchg
add
mov
shr
rcrl
mov
movsb
cmp
jno
into
popa
cmp
cmpsl
cltd
sbb
dec
and
jnp
fcoml
lds
inc
lods
jb
out
dec
mov
test
sbb
ljmp
out
inc
aaa
mov
xchg
ficoml
push
gs
and
cmpsl
sub
jmp
ficoml
add
dec
dec
mov
in
jne
js
dec
push
mov
adc
test
push
jo
data16
add
sub
add
push
addr16
aad
mov
aad
jmp
clc
andb
dec
mov
pop
cmp
int
and
aam
andb
pushf
sarl
dec
notb
std
shlb
out
clc
call
dec
inc
sub
in
loope
insl
xchg
fcomps
stos
or
add
and
shll
jl
addr16
idiv
pop
lea
sahf
sbb
mov
or
cld
add
xchg
xchg
push
cmp
arpl
adcl
out
jmp
add
repz
int3
mov
pop
mov
lods
popl
xchg
cmpsl
dec
daa
sarb
inc
scas
out
adc
shrl
xchg
mov
dec
inc
add
insb
cwtl
lds
or
out
loop
aas
or
jno
out
mov
jecxz
mov
leave
lea
jns
xchg
les
lds
jne
pop
mov
or
jp
push
or
stos
add
jle
push
mov
popa
aad
add
insl
xor
lea
xor
xchg
dec
lahf
xchg
xchg
cmc
leave
jge
xlat
into
fnsave
test
sbb
mov
adc
mov
adcb
cli
dec
fisubrs
inc
push
inc
xlat
mov
jecxz
out
test
leave
movsb
pop
xchg
push
cmpl
mov
scas
out
add
mov
aad
mov
push
cmp
jnp
shrb
dec
xor
rorl
repnz
int3
ror
dec
or
lock
aam
enter
in
pop
sub
mov
adc
mov
jle
xchg
and
mov
inc
dec
inc
dec
inc
outsb
xchg
repz
movsl
adc
test
xchg
test
sti
push
and
cmp
int3
adc
jmp
jnp
mov
ret
push
adc
inc
call
cmp
sbb
lds
adc
adc
es
jns
cwtl
and
inc
add
mov
stos
aaa
mov
and
jno
pop
jnp
jb
push
fcom
mov
and
pop
in
or
in
popa
adc
fdiv
subb
sub
scas
mov
jbe
jne
pop
mov
xchg
cld
jbe
jge
mov
mov
jns
icebp
push
and
mov
aad
pop
inc
daa
adc
stc
bound
cmp
js
and
pushf
cs
fildll
insb
adc
testl
push
fldt
mov
out
movsl
sahf
jb
cmpsb
mov
pop
iret
imul
outsl
dec
fiadds
std
subb
mov
adc
cli
leave
dec
out
mov
dec
inc
dec
add
out
add
inc
mov
shl
testb
or
push
jmp
mov
inc
sarl
lret
jl
pop
jne
movsl
in
movsb
dec
into
sbb
add
test
adc
dec
or
adc
push
jmp
leave
jecxz
popf
add
mov
dec
or
mov
and
dec
repz
jo
dec
and
ret
popf
cltd
stos
iret
add
and
sbb
push
push
add
cwtl
mov
mov
xchg
inc
push
scas
or
leave
movsb
pusha
sahf
sub
jnp
xor
pop
adcl
repnz
les
cmp
sahf
adc
xchg
test
mov
cmp
cmp
mov
fsub
shll
shrl
into
and
fildll
pop
inc
aaa
icebp
inc
std
xor
sbb
inc
bound
cmp
push
mov
pop
xor
mov
or
dec
mov
in
loope
or
and
mov
xor
adc
ret
and
cmc
mov
sub
jmp
mov
lods
lcall
sbb
scas
hlt
dec
mov
lods
inc
pop
pop
lds
push
fs
pop
or
mull
pop
lea
lret
fidivl
icebp
and
outsl
shll
inc
adc
addl
or
pusha
and
nop
cs
add
inc
repnz
push
and
adc
jbe
leave
shr
mov
lock
cmp
inc
lea
sub
or
repz
sahf
movsl
lock
sbb
out
sbb
jb
fcomps
iret
xchg
push
jns
andb
data16
ss
das
cltd
inc
push
in
sub
insb
xchg
shll
mov
cmpsb
adc
shll
in
push
or
cltd
push
add
sbb
fisubs
mov
flds
sbb
cld
insb
xor
je
jbe
mov
cmp
nop
dec
xchg
xchg
xchg
enter
in
adc
int3
push
imul
into
mov
push
mov
ja
cmc
dec
and
das
into
inc
ficomps
mov
lea
imul
pushf
cmp
xor
push
ficoml
mov
push
outsb
push
xchg
and
mov
push
data16
push
xor
dec
mov
dec
push
sbb
push
adc
outsl
mov
cmp
cmc
iret
js
inc
jns
lods
or
in
ss
imul
test
jecxz
ret
jno
adc
pusha
pushf
push
popa
test
stos
pop
scas
imul
jae
push
loope
frstpm(287
lss
adc
xor
mov
aam
pop
pop
stos
cmp
cmp
shrl
lahf
or
fstps
out
in
cltd
js
das
mov
mov
imul
fistpl
idivl
cwtl
aad
in
test
mov
xor
dec
int3
push
cld
pop
cmp
push
pop
mov
jns
and
pop
cmp
xor
xchg
pop
mov
inc
push
iret
adc
andl
ja
jg
pop
mov
aas
aas
xor
lods
mov
pop
mov
push
fmulp
mov
pop
jne
sbb
movsl
loope
rolb
notl
inc
or
shlb
xchg
loope
pusha
mov
dec
sub
add
add
xor
or
movsb
std
sbb
pop
test
insb
mov
inc
jp
dec
adc
std
pop
mov
test
stos
sub
pop
fstpl
dec
and
lds
push
pop
pusha
sub
add
push
xchg
mov
mov
mov
cmp
or
cld
cltd
pop
loopne
iret
or
popf
dec
cmp
dec
adc
sahf
cwtl
xchg
mov
mov
nop
mov
cmpsb
sub
lock
mov
js
into
rcl
adc
addr16
bound
fs
add
and
les
hlt
fisubrl
icebp
fcmovnu
jmp
in
mov
pop
xchg
scas
xor
push
dec
mov
xor
xor
addr16
or
pusha
ret
int3
inc
fsubrs
lods
jg
stos
je
loopne
pop
aam
icebp
or
loop
sbb
inc
lahf
andb
push
mov
and
xchg
lock
daa
scas
lock
push
push
sbb
or
cmp
out
mov
add
mov
inc
mov
into
ss
in
or
jl
or
ja
popf
loopne
outsb
test
sbb
bound
push
mov
sub
jl
jge
out
sbb
psrlq
addr16
dec
mov
pop
inc
popa
pop
dec
jnp
lods
pop
pop
add
pop
mov
rol
cmp
pop
push
test
mov
int3
int
sbb
push
sub
ret
dec
xchg
xor
bt
sbb
xchg
mov
xor
mov
das
push
and
movl
xor
ljmp
mov
xchg
dec
mov
gs
pop
fs
repnz
std
adc
push
adc
lahf
mov
xchg
mov
mov
dec
stc
add
scas
fnstsw
shl
pop
repnz
push
fiaddl
sti
popa
jns
idivl
jg
ljmp
in
cmp
int
out
or
jle
mov
xor
inc
inc
imul
fsub
xor
mov
adc
mov
push
xchg
sahf
pushf
xor
mov
icebp
bound
mov
aad
loop
imul
jne
push
int3
gs
adc
mov
cwtl
loopne
loopne
jae
sti
testb
hlt
push
push
ljmp
paddw
push
adc
arpl
push
orl
push
xor
loop
lahf
out
popf
idivb
jmp
push
fmuls
dec
or
cld
add
int
adc
mov
push
inc
mov
jp
jb
popl
jo
xchg
ja
fwait
mov
push
mov
sbb
cltd
scas
int
cltd
jmp
cltd
sub
sub
mov
cmp
jbe
pushf
pop
sbb
jno
mov
ret
test
ret
test
and
adc
test
popa
dec
aad
mov
sbb
dec
sahf
xchg
cmp
negb
out
jle
and
test
inc
pop
jb
daa
xchg
ljmp
push
adc
or
sub
bound
inc
xor
psllw
mov
into
sbb
movsl
jnp
cmp
sbb
and
faddp
loope
cli
dec
into
aam
sbb
and
aas
xchg
mov
fstpt
xchg
pop
cmp
xchg
push
inc
fnstenv
mov
jp
add
mov
cmpsb
fidivs
adc
push
pop
nop
stos
cmp
or
mov
dec
clc
adc
lea
loop
pop
dec
sub
gs
jp
add
sbb
mov
or
aad
fcmovu
xor
add
hlt
stos
test
insl
jbe
fcmove
fisubrl
xor
sub
push
cmp
out
pop
lds
pop
out
bound
ret
cwtl
add
jmp
jp
ss
sbb
dec
shll
es
push
push
data16
inc
bound
or
aam
iret
adc
shll
pop
leave
sub
jl
lods
cmp
dec
shrb
pop
pushf
sbb
pop
push
inc
mov
bound
pop
sbb
pop
mov
mov
mov
sbb
or
arpl
or
push
xchg
xor
scas
push
scas
mov
push
mov
fadds
jbe
mov
mov
jmp
mov
dec
cwtl
sub
mov
jo
fidivs
push
adc
inc
cld
lret
mov
xchg
xchg
dec
and
fidivrs
jbe
adc
push
and
inc
push
pop
pop
mov
outsb
aam
jg
xor
pop
rcrl
dec
scas
cmc
cmp
popa
mov
data16
xchg
scas
imul
push
push
enter
push
adc
inc
inc
pop
jge
mov
ljmp
sbbb
daa
mov
dec
add
rcrl
jl
ja
sbb
out
lret
fs
ljmp
sub
movsb
fcomip
stos
jnp
cmp
pop
stos
setns
mov
int
mov
add
dec
and
pushf
adc
and
dec
pop
adc
fstl
test
cli
fadds
jg
or
push
fdivs
lock
das
rorb
out
in
pop
leave
inc
adcb
xchg
sbb
mov
mov
xor
push
ss
mov
andb
dec
insl
insl
add
stos
jbe
and
adc
popf
sub
pop
imul
and
mov
push
mov
lds
shll
xor
rcl
leave
fadd
sarl
cs
mov
shl
push
inc
int3
outsl
xor
sub
hlt
gs
jnp
inc
insl
mov
jno
ja
mov
push
push
jp
xor
dec
scas
pop
mov
jo
or
shr
ror
lahf
push
cld
jne
dec
dec
jbe
sbb
scas
scas
push
std
movq
mov
faddl
js
pop
popf
push
sub
add
into
frstor
rcrl
jne
in
pop
lcall
cmp
pop
cmp
mov
jmp
je
adc
nop
call
mov
fldl2e
sub
pop
ds
aaa
or
or
out
sbb
or
jmp
leave
bswap
inc
pop
adc
cmp
in
inc
sub
pop
sub
xchg
inc
jge
movsl
add
push
fcmovb
sub
pop
loopne
mov
mov
push
inc
mov
leave
rcrb
or
rcl
inc
xor
aaa
dec
adc
repz
xchg
gs
lock
jbe
cmp
cmp
adc
sbb
cmp
or
push
xor
ror
cmp
rcr
hlt
cmp
mov
dec
lods
mov
add
call
xchg
aad
outsb
xorl
jl
push
hlt
addl
sub
push
stos
cmp
mov
subl
mov
mov
mov
pop
cmp
scas
inc
lods
pop
dec
mov
lret
jge
rclb
xor
cmp
pop
xor
dec
xchg
adc
jl
mov
int3
or
xchg
pop
out
pop
cltd
sahf
lds
add
mov
popa
xor
sbb
clc
imul
sahf
push
scas
sarb
mov
mov
adc
and
or
xchg
pusha
inc
push
inc
stc
and
jge
ja
pop
lods
jne
or
dec
iret
loopne
fldcw
inc
ss
aaa
dec
popa
andb
lods
loop
loopne
inc
neg
adc
sub
popa
lds
inc
ltr
inc
scas
jp
jb
pop
daa
cs
aas
mov
ret
imul
mov
lahf
mov
xchg
add
inc
fdivr
andb
jnp
sahf
aam
jnp
loop
dec
fs
popa
mov
ss
mov
aad
out
jg
add
xchg
clflush
mov
fcomps
loope
mov
xchg
push
xor
cmpsb
ret
int3
pop
mov
mov
adcb
push
int
arpl
pushf
sub
jo
cmp
insb
inc
adc
sub
mov
sub
adc
push
mov
ja
xor
or
push
in
lods
xchg
sub
xchg
mov
push
cmp
mov
xor
lock
mov
ss
jo
push
ja
and
cmp
int
cmp
dec
xchg
xchg
fidivrl
pop
icebp
fcomp
mov
adc
frstor
clc
pop
call
xlat
out
push
add
jmp
jmp
xchg
jl
mov
mull
jae
xchg
mov
push
xor
sub
and
mov
cmp
mov
mov
insb
addl
push
iret
inc
push
lahf
or
clc
call
push
lret
adc
pusha
pop
push
jecxz
scas
mov
push
insl
push
pushf
mov
in
inc
stos
jb
jmp
pminsw
pop
shll
pop
jbe
cmc
mov
add
pop
mov
sbb
dec
sbb
fs
sahf
push
mov
xor
and
pop
mov
push
testl
icebp
call
ficomps
pushf
sub
xor
mov
fisubs
sbb
mov
adc
sub
jl
push
jae
popa
inc
inc
sbb
sbbl
dec
insb
inc
bound
lcall
and
mov
imul
push
shlb
loopne
cld
xor
pop
aaa
gs
add
ss
fs
fmuls
cmp
cmp
cmp
ffreep
popa
int3
incb
dec
gs
lret
push
test
test
pop
mov
sbb
mov
addb
inc
jl
xchg
adc
push
and
imul
fadd
sarl
inc
cmp
and
add
xor
inc
lds
push
pusha
movsb
mov
push
dec
aaa
arpl
pop
in
push
push
mov
fs
xchg
leavew
out
or
sbb
sbb
mov
cs
outsb
sbb
and
add
push
sub
dec
icebp
enter
xorb
jnp
and
testb
dec
mov
jb
aas
pop
add
sub
ja
cmp
lret
roll
aas
xor
andb
adc
dec
cwtl
std
ret
pop
or
xchg
in
jmp
jecxz
push
mov
xchg
sarl
push
or
dec
dec
loop
lret
inc
leave
jno
insl
daa
cmp
dec
sbb
jp
hlt
adc
pop
xor
and
adc
xchg
sbb
push
repz
sti
repnz
cld
and
sbb
repnz
orb
add
mov
cltd
pop
std
pop
jmp
sub
lahf
in
pop
adc
insl
lcall
mov
pop
sahf
repz
lods
in
sbb
pop
push
lcall
cltd
xchg
cmp
imul
sarl
rcl
jo
and
push
xchg
xchg
jbe
add
xor
inc
fldl
pop
rclb
sbb
mov
les
add
mov
mov
arpl
jg
fisttpll
dec
lcall
dec
cmpl
sbb
xor
mov
inc
adc
aad
adc
inc
dec
loop
mov
xor
sarl
adc
sbb
mov
out
push
and
pop
nop
int
std
fmull
dec
in
ja
out
popl
imul
out
insl
jne
addr16
and
inc
add
cs
and
pop
and
mov
bound
dec
add
and
cli
fcoml
pushf
adc
outsl
cmc
stc
xor
lea
rcrl
dec
repnz
gs
adcb
pop
add
and
aaa
inc
jmp
in
pop
jge
adc
mov
shrl
push
or
push
stc
cwtl
fsubrl
jns
hlt
adc
into
fisubs
repz
sbb
pop
push
lret
push
test
and
pop
cmc
or
mov
data16
pop
jmp
sahf
add
sub
xchg
push
and
or
cmp
andb
inc
and
iret
mov
shll
cs
push
jb
pop
je
ja
dec
insb
mov
inc
xor
mov
shrl
pop
movsl
pusha
lret
xchg
xchg
lcall
lcall
in
daa
clc
push
js
es
negl
push
fdivrl
jns
loopne
movsl
xchg
rcl
or
xor
inc
push
rorb
jecxz
rcrl
or
dec
vmovaps
lods
test
dec
inc
test
rcr
push
addb
dec
stos
fucomi
scas
mov
push
call
pop
cmp
mov
scas
cmp
mov
stos
dec
xorl
bswap
test
shl
add
pop
cli
hlt
movsl
jno
mov
clc
int3
or
push
imul
mov
ficompl
dec
jnp
or
fbld
sbb
imul
test
jne
adc
aam
push
add
cwtl
sub
mov
inc
pop
pop
arpl
sahf
xlat
adc
jmp
pushf
test
and
jl
inc
sahf
mov
xchg
push
je
es
adcl
addr16
xchg
popa
jns
lret
aam
fcmovnbe
shlb
jmp
fwait
jmp
xlat
arpl
mov
add
ja
das
popl
sbb
shrb
repnz
inc
push
xchg
in
in
cmpsb
add
or
in
inc
lds
sub
or
adcl
loopne
push
fstpl
cmp
addr16
fnsave
xor
loopne
pop
push
and
pusha
sbb
pushf
lcall
je
mov
cmp
dec
xlat
jne
sbb
lods
in
fwait
sub
fs
inc
fnstenv
mov
sub
xchg
jle
xchg
pop
js
mov
mov
push
ds
arpl
adc
dec
jno
pop
ja
and
cmp
aad
insb
sub
adc
mov
fwait
xchg
inc
adc
fnstcw
push
addr16
mov
ja
dec
and
xor
xchg
loopne
push
xor
pop
pop
arpl
sub
fwait
or
mov
pop
sahf
pop
sub
xlat
inc
lea
aad
mov
cmp
jl
xchg
inc
mov
xchg
fsubl
fs
psadbw
mov
xchg
in
pop
in
in
cli
dec
xchg
cmpsb
add
cli
adc
sub
jb
ljmp
pushf
leave
dec
add
leave
aam
push
es
pushf
jbe
pop
push
add
fidivl
mov
ret
les
or
sarl
andl
jnp
aas
iret
push
mov
push
inc
lret
xchg
inc
pop
scas
jae
cmp
adc
push
cmp
lahf
cmpsl
testl
outsl
dec
and
aam
adc
sbb
movb
xchg
lods
test
ds
add
inc
xchg
push
sub
cli
pop
pop
xchg
mov
push
and
adc
cmpsl
add
mov
and
jo
lcall
fstpt
fidivs
or
test
jnp
dec
push
lcall
shlb
repnz
cmp
sub
cli
sub
orb
arpl
mov
ja
cwtl
mov
or
lahf
mov
fwait
push
movsl
mov
lds
test
push
lcall
jp
jl
jmp
inc
lock
pushf
add
pusha
xchg
gs
imul
shrb
addr16
push
mov
pop
adc
fisttps
pop
jg
xchg
cwtl
adc
jmp
out
ljmp
pushf
push
xor
int
push
jo
mov
xchg
in
push
lock
mov
xor
xchg
sbb
inc
cli
inc
or
cwtl
lret
mov
push
push
adc
lock
std
js
lret
dec
cmp
sbb
outsb
xchg
mov
pop
pop
dec
fists
insl
mov
je
add
in
mov
hlt
xor
mov
stos
push
stos
cld
xor
out
xchg
jo
mov
mov
mov
xchg
pushf
sbb
mov
mov
jno
rcll
lcall
mov
jg
cmpsb
dec
lods
cs
cmp
sbbb
movl
cmp
pop
call
sub
xlat
mov
jo
cld
loop
cmc
fstl
mov
jb
jnp
inc
cmp
push
cs
pop
dec
mov
arpl
jbe
in
or
pop
or
mov
jns
dec
sarb
jecxz
jbe
mov
outsl
std
in
cmpl
leave
pop
ror
cmpsl
es
mov
int
fxch
push
loopne
push
test
pop
mov
lahf
pop
psadbw
fimull
notb
out
cltd
es
popa
shrl
add
mov
xchg
adc
jno
or
jle
arpl
sub
pop
ss
or
shll
xor
shrb
dec
popa
adc
xchg
movsl
cltd
pop
ret
xchg
sbb
fbstp
pop
jb
js
jno
inc
stos
loop
dec
fs
mov
add
sahf
xor
arpl
pushf
add
xchg
mov
mov
jnp
mov
or
adc
into
sti
cmp
xor
stc
outsl
mov
aam
shlb
sub
cmpsl
mov
aas
jmp
out
mov
push
mov
je
cmp
pop
jmp
adc
dec
add
imul
in
dec
jl
fildl
lods
repz
cmp
xor
arpl
mov
mov
cmp
test
sub
push
push
pushf
sahf
sub
cmc
sub
sub
add
cwtl
pop
stc
push
dec
lret
xor
pop
mov
add
mov
push
fisttpl
mov
arpl
xor
call
test
mov
stos
in
mov
lds
or
sti
adc
mov
xor
push
mov
divb
adc
adc
xor
jae
cmp
outsb
repnz
imul
ret
dec
adc
mov
sbb
mov
stos
push
ror
fsqrt
adcl
xchg
cmpsb
jl
pusha
cmp
cmp
mov
and
daa
nop
mov
add
out
cld
imul
das
pop
push
mov
jbe
jns
xorl
sub
dec
or
push
mov
adc
inc
cli
sbb
mov
lods
fildll
stos
xor
add
mov
push
les
push
inc
jb
cli
mov
fs
mov
stos
adc
dec
js
add
mov
push
repnz
test
insl
out
test
pushf
in
mov
andl
lret
mov
push
ds
out
mov
out
jg
lods
jg
cmp
nop
mov
pusha
jno
roll
xor
pop
lds
jo
sbb
pop
repz
jecxz
loop
pop
cltd
pop
add
pop
push
mov
xchg
sbb
or
jge
mov
hlt
dec
ret
lds
call
insl
les
push
xlat
std
shr
inc
jno
inc
cmp
mov
mov
sbb
jns
sub
test
mov
sub
mov
jge
int
int3
popa
sbb
test
daa
bound
mov
outsl
stc
in
adc
dec
lret
int
dec
jge
scas
outsl
push
arpl
push
mov
ficomps
sbb
les
mov
insb
add
test
mov
mov
add
fldl
pop
mov
adc
das
cwtl
adc
into
dec
xor
ret
lods
adcb
rorl
andb
out
dec
xchg
sub
iret
fsubrp
and
int3
pop
aaa
xchg
jge
popa
adc
out
add
add
push
bound
stos
into
dec
pop
cmp
mov
xor
mov
ds
cmp
xor
dec
push
push
jbe
es
jne
mov
cmp
pop
cli
icebp
into
mov
xchg
out
movsb
rcl
insb
and
adc
push
js
or
inc
add
and
ss
jno
xchg
xchg
lea
shr
jmp
out
mov
jmp
xlat
mov
lret
pop
iret
mov
int
cmpsb
push
cmc
cmp
mov
call
add
jecxz
movsb
adc
out
scas
and
cwtl
adc
shrl
jmp
loopne
and
inc
shrl
push
inc
pop
pop
les
mov
mov
inc
xlat
in
fisttpll
dec
pop
leave
into
dec
pusha
inc
test
repnz
jne
and
cmp
mov
xchg
fisttpll
xor
data16
sub
imul
pushf
int3
sub
xor
leave
cmp
mov
sub
aad
push
mov
rol
xchg
lods
xchg
push
and
cli
and
outsl
mov
jp
fndisi(8087
jo
cmpsl
add
inc
arpl
shll
enter
inc
fsubrs
mov
sbb
out
and
cmpsl
mov
pop
mov
sub
mulb
mov
das
add
xor
fisubs
adc
cmp
es
out
popa
mov
push
jg
not
popa
cwtl
dec
cmp
iret
mov
fwait
adc
mov
dec
fsubrl
jg
jge
adc
mov
aam
insb
js
ja
xor
cmc
mov
incl
lahf
xorl
push
iret
push
and
mov
lret
inc
fdivl
pushl
add
outsl
mov
loope
sub
xor
jecxz
test
loop
loop
adc
insl
pop
push
jmp
jnp
call
inc
push
sub
sub
jl
roll
adc
xchg
pushf
sbb
sub
or
jp
lds
pushf
xchg
out
inc
fwait
loop
pop
mov
add
clc
mov
subl
pop
inc
test
dec
sbb
aaa
pop
mov
fsubs
jl
mov
sti
ror
mov
ss
int3
gs
ljmp
cmp
mov
inc
and
sbb
or
xchg
aam
orl
rcll
ja
imul
inc
pop
cli
jecxz
push
mov
mov
sub
mov
fs
pushf
add
rclb
dec
out
mov
inc
xor
cli
xor
sbb
scas
xchg
ret
mov
xor
ficomps
adc
cmc
popa
cld
in
inc
repnz
pop
arpl
adc
mov
lahf
fwait
mov
aaa
icebp
sarl
js
pop
cmp
and
lret
pop
cmpsl
adc
pop
adcb
adc
fisubs
jno
cld
or
lds
xchg
aad
fucom
iret
jmp
ds
inc
pushf
jb
aas
mov
inc
roll
pop
push
sub
pop
filds
imul
imul
mov
mov
jns,pt
cmp
xor
pop
outsl
fmull
cmp
insb
inc
push
imul
push
xchg
in
nop
adc
out
xor
sbbb
dec
in
push
fstpt
leave
insl
add
addb
pop
jo
es
dec
xchg
fiadds
jno
fistl
mov
cld
xchg
pop
js
mov
mov
imul
and
pop
leave
iret
lret
bound
std
add
fdivrl
repz
jp
adc
cmpsl
leave
pop
fwait
mov
jno
popa
ds
sbb
pop
lock
popf
xchg
mov
and
push
aaa
testl
loopne
sbb
fisubrs
fnsetpm(287
mov
and
inc
pop
jns
cmp
aad
cmpsl
mov
out
bnd
nop
xor
sub
push
pusha
push
dec
sbb
js
inc
das
cmp
mov
mov
mov
jbe
out
push
pop
xor
dec
mov
nop
add
adc
mov
dec
pop
inc
fs
int3
filds
aad
xor
dec
gs
js
cwtl
xchg
dec
or
fdivrp
loop
lcall
or
roll
aaa
pop
scas
cli
aam
stc
cwtl
movsl
movsb
movsl
mov
icebp
mov
mov
aam
imul
inc
mov
push
xchg
inc
xor
lods
mov
into
xchg
lret
out
es
loope
xor
js
sbb
pop
addr16
lock
in
xlat
rcl
das
into
mov
or
jl
xor
or
adc
xchg
jbe
pop
add
inc
jg
int
inc
in
jge
mov
nop
imul
sub
ret
jbe
cmc
je
and
and
add
add
xchg
data16
test
xchg
xchg
jne
test
aad
call
and
and
xor
lock
cs
mov
leave
pop
imul
sti
test
ficomps
mov
addb
dec
sub
inc
stos
cwtl
sub
test
adc
test
scas
out
pop
sti
pusha
dec
jecxz
adc
jno
in
mov
push
not
test
fs
ljmp
imul
or
sbbb
leave
mov
jo
pop
xlat
test
jns
xchg
or
stos
fcmovb
mov
pop
sbb
mov
add
mov
movsl
mov
sub
lea
enter
out
lods
jp
xor
sub
mov
mov
mov
mov
mov
fstpl
popf
out
mov
pop
nop
stos
aad
jle
mov
sbb
mov
jnp
push
inc
imulb
jge
imul
xlat
ds
pop
mov
lret
pop
lods
insb
or
xchg
sbb
aas
sbb
decb
cmpsb
cmc
sub
add
scas
and
xchg
push
mov
pop
inc
jle
jge
jns
insl
mov
sub
and
das
lcall
lds
xlat
or
aaa
dec
insb
add
sbb
lock
jmp
xor
inc
push
jno
cmp
stos
lcall
dec
xor
jo
in
movsb
rcll
cwtl
add
cmp
add
repnz
mov
sti
xchg
jne
pop
sub
push
les
inc
sbb
inc
in
add
lods
test
daa
fisubrl
sbb
mov
ret
idivb
out
sub
xchg
and
dec
sbb
jecxz
jae
xchg
cmpsb
mov
aaa
fldt
data16
insb
pushf
sahf
dec
push
and
mov
inc
and
cmp
jb
imul
and
jge
hlt
xor
or
lahf
pop
sub
add
mov
icebp
cmp
fnstcw
cmp
xchg
sti
or
jnp
js
dec
push
mov
xor
cmp
jo
jecxz
jmp
dec
dec
add
cs
insb
popf
or
cmp
ror
jns
jno
and
scas
adc
enter
std
in
stos
mov
cmpsl
sub
aam
inc
scas
cltd
mov
dec
xlat
pop
xchg
jmp
std
cltd
push
lock
and
scas
pop
aas
mov
pushf
loope
icebp
sbb
js
mov
mov
xchg
and
out
jecxz
lds
das
adc
shll
jmp
test
pop
int
inc
movsl
xor
fldcw
cli
add
sub
jecxz
in
push
xor
gs
mov
add
arpl
add
mov
push
mov
popa
out
enter
mov
mov
aaa
ljmp
movsl
addr16
shrb
xor
mov
jo
pop
jg
lcall
jnp
hlt
imul
sbb
shlb
pop
ror
xchg
lahf
dec
sub
repnz
pop
lret
mov
jecxz
jo
enter
or
jb
popf
lret
mov
mov
insl
xor
or
push
dec
or
xchg
jl
cmp
dec
shrb
pushf
jbe
mov
xsha256
cmpsb
push
jnp
sbb
das
fs
jns
lock
les
pop
rcr
fstpt
scas
daa
ret
stc
rolb
ror
sub
call
cmpsl
dec
das
je
adc
pop
xchg
xchg
or
cmp
int3
int
jae
sbb
jp
mov
pushf
sub
hlt
fs
pop
xchg
imul
adc
sub
push
aad
dec
aad
cmpsb
fs
jg
test
mov
cmp
sarb
push
fldt
sub
hlt
sub
nop
pop
and
sub
push
in
inc
mov
aam
in
pop
and
out
fmull
iret
psrld
inc
adc
jns
shll
xchg
pop
sub
cmp
sub
push
pusha
mov
call
cwtl
push
or
jnp
sbb
movb
fstps
cld
push
sub
test
inc
into
ja
lret
add
push
sbb
ss
and
xor
ret
cmp
jmp
inc
or
sahf
testb
gs
sbb
mov
loopne
push
adc
ljmp
popf
xor
ret
fldcw
out
stc
jp
sbb
add
jl
jp
jns
out
or
push
push
lock
insb
emms
ficoms
mov
rclb
dec
loope
mull
and
or
ds
push
gs
jmp
add
sub
scas
out
mov
xchg
cmpsb
cmp
pop
xchg
in
lds
not
pop
push
ret
xor
int3
mov
adc
lret
daa
push
push
push
inc
dec
movsl
clc
cmp
outsb
pop
dec
jne
std
add
cli
push
lods
adc
lock
lock
sar
cs
mov
je
not
imul
divl
aam
adc
xor
cmpsb
jp
pushf
repnz
loopne
stos
outsb
push
pop
sub
movsl
pop
inc
pop
push
sub
xchg
lret
in
jecxz
repnz
cld
adc
pop
push
inc
cmc
mov
pop
jns
cmpsl
lret
imul
cmp
loope
mov
adc
in
jne
test
mov
orb
jno
cs
js
xor
out
dec
mov
test
std
aad
and
jge
adc
and
divl
sbb
leave
push
shrl
xchg
adc
in
push
stos
fistpll
xor
push
xchg
dec
mov
add
add
jnp
push
sahf
pop
dec
hlt
outsl
and
lods
adc
les
das
ret
adc
xchg
push
sub
testl
lds
out
push
or
ljmp
sbb
jp
push
call
movsl
hlt
jecxz
xor
es
ss
mov
pusha
xchg
idivb
popf
popf
shrl
jp
xchg
pop
lock
in
xchg
test
or
sub
sub
push
mov
lock
cwtl
stos
sbb
jnp
imul
in
sbb
sub
add
adc
lods
dec
or
push
or
aam
push
imul
push
pop
test
cld
xlat
push
push
nop
in
pop
push
xor
add
xchg
insb
dec
movsb
std
jae
or
cmp
pop
imul
add
jbe
in
int
std
jp
mov
rorl
sti
sbb
push
push
pop
mov
repnz
popa
xchg
fsubrp
lods
pop
nop
inc
mov
incl
xor
incl
mov
out
mov
pop
stos
fwait
jmp
xchg
sbbl
js
in
or
test
xchg
lea
mov
and
pop
cmp
rcr
jns
insb
sub
push
fsubr
lcall
push
xor
pop
xlat
test
pop
mov
scas
and
out
sbb
clc
mov
outsb
cmpb
inc
sbb
test
inc
pop
pusha
mov
jle
mov
and
inc
adc
loop
mov
daa
mov
repz
sarl
and
out
cli
cmc
xchg
out
sti
pop
pop
iret
testb
jo
mov
sub
xchg
and
pop
jp
push
mov
loope
in
imul
je
xchg
dec
test
ret
push
and
cmpsl
jnp
adc
push
push
push
adc
out
sahf
data16
mov
pop
jae
add
jmp
out
enter
adc
mov
push
das
inc
imul
je
or
sarl
push
cmp
pop
push
scas
mov
nop
push
push
sbb
pop
jp
cmp
mov
in
cmp
cmp
jp
push
jne
ja
sbb
adc
mulb
jae
ja
test
std
scas
jle
sti
push
mov
pop
inc
pop
repz
jg
and
popf
in
xchg
and
push
loop
push
lcall
add
in
sbb
iret
cmpsl
inc
test
sbbb
lods
dec
std
fwait
cmc
ret
mov
jno
cmp
and
push
xchg
sbb
and
lods
mov
push
test
mov
call
or
and
cmpsb
jecxz
push
push
ficomps
std
mov
ss
daa
pop
mov
enter
popf
cmc
jns
ret
push
inc
push
out
rcr
icebp
mov
jb
movsl
pop
lcall
in
push
stos
icebp
push
sub
cli
fistpl
icebp
aaa
add
jo
xchg
jl
loop
inc
lahf
inc
mov
stos
repnz
stos
fisubs
int
and
ja
sub
das
cmp
mov
push
ret
inc
jo
insb
push
mov
cmp
daa
jbe
push
aad
push
gs
or
xchg
out
lock
out
sbb
js
js
das
push
mov
add
cmc
dec
inc
xor
mov
cwtl
add
pop
mov
add
in
movsl
das
aaa
xchg
ja
cmpsl
rcrb
sub
add
push
dec
out
std
stos
mov
xor
cld
jae
pushf
lock
rcrl
mov
ficomps
cltd
cmp
jle
xor
dec
icebp
fistpll
push
cld
and
lods
imul
mov
jecxz
sub
cmp
out
jle
cs
aaa
int
jge
cmp
in
jae
lret
or
in
push
mov
xchg
scas
or
sahf
adc
int
inc
pop
rcrb
inc
add
sti
call
jecxz
and
cmp
aas
rcrl
sarb
pop
js
xor
loope
mov
jp
add
mov
cmp
lds
movsl
cld
jp
inc
imul
inc
jae
scas
mov
lahf
pop
nop
jnp
xor
mov
adc
push
imul
rcr
dec
cmpl
xchg
jge
cld
cld
ss
adc
dec
daa
scas
xor
pusha
sahf
in
inc
mov
rcrl
scas
inc
cmp
and
push
pop
repnz
cwtl
mov
clc
scas
or
subb
leave
iret
inc
in
cltd
jo
cmpsb
mov
movl
popa
sti
xlat
imul
push
jne
sub
int
rcrb
xor
ret
or
fimuls
popa
out
fwait
mov
sbb
push
testb
add
push
bound
scas
push
or
push
inc
add
fcoms
in
imul
xchg
xchg
test
rcrb
jg
cmp
inc
fwait
stc
pushf
jo
cwtl
push
push
adc
dec
and
xor
ret
jge
popa
mov
addl
loope
mov
xchg
add
fldt
or
and
shrb
pop
xchg
or
xor
out
fwait
mov
loop
push
decl
lahf
lea
sti
jecxz
mov
mov
pop
addr16
orb
cmp
sbb
xor
inc
sub
pop
sbb
sub
sbb
lea
push
push
jbe
dec
repz
sub
jb
push
mov
hlt
rcll
lcall
sub
loop,pt
les
pushf
dec
into
sub
mov
js
outsl
cmp
out
add
push
sarb
ret
popf
sbb
or
mov
dec
push
popf
bnd
mov
and
je
sub
pop
fmuls
pop
xchg
cwtl
testb
icebp
mov
scas
push
dec
repnz
cltd
adc
pusha
xchg
fs
push
jle
jp,pn
js
test
xchg
cmp
enter
lahf
hlt
and
mov
fisttpll
addr16
jg
sbbl
jecxz
nop
jbe
push
in
push
push
jge
adc
jg
push
mov
jo
mov
inc
cmpsb
push
jl
mov
adc
mov
outsl
push
mov
out
and
int
repnz
mov
push
adc
addb
add
roll
loope
aam
andl
sub
lret
cmpsb
push
or
or
out
jno
cmp
popl
inc
mov
jae
sbb
int
ficoms
jl
in
push
and
cmp
mov
mov
xor
lods
add
pop
jb
aad
xchg
sbb
leave
push
roll
into
loop
push
imul
sbb
mov
divl
faddl
imul
test
daa
dec
sub
add
rorl
mov
out
loopne
push
aas
aas
mov
pop
sahf
dec
pop
sarl
jnp
sbb
sub
mov
subb
cli
fldl
neg
mov
add
xor
mov
adc
addb
clc
mov
adc
cmp
add
sbb
xchg
jns
jb
out
cmpsl
decl
mov
stos
cld
vpaddsb
jne
insl
cmp
jno
in
data16
pop
mov
faddp
xchg
int
jmp
xchg
sti
dec
adc
addl
or
mov
push
push
sub
arpl
icebp
mov
cmc
mov
inc
iret
inc
mov
push
xchg
add
negb
repnz
push
push
cmpsb
pop
test
imul
add
ljmp
outsb
jle
lea
and
mov
jecxz
inc
ds
arpl
cmc
mov
int3
ss
mov
outsb
test
jp
xor
inc
push
popf
mov
or
ljmp
sub
in
xchg
lock
jmp
jl
loopne
jb
insl
jno
lock
mov
lods
loop
cmp
fiadds
add
add
ss
or
pop
test
xor
nop
shlb
jno
lahf
mov
mov
mov
shll
cwtl
pop
in
out
cmp
rolb
enter
sti
jbe
sub
rcl
jae
and
and
cwtl
push
imul
mov
push
scas
pop
cmpsb
je
in
idiv
pop
cwtl
dec
jecxz
mov
popa
cmc
mov
outsl
inc
sub
sbb
out
les
cmp
mov
cld
movsl
rclb
pusha
loop
xlat
stos
dec
pop
mov
jne
aad
mov
repnz
adc
add
outsb
sub
inc
cltd
adc
xor
ret
cli
aas
and
lret
cmpsb
push
fsubrl
out
pop
cmp
xchg
adc
cmp
lahf
sarl
scas
les
dec
adc
jmp
lock
adc
sub
and
adc
add
test
test
sub
xor
out
pop
nop
dec
mov
jne
cmp
nop
sub
daa
sahf
fld
lds
dec
js
fsubp
mov
and
stc
sub
and
filds
loope
inc
mov
das
jb
lods
xor
add
dec
mov
jle
push
insb
mov
fcom
mov
mov
add
dec
cmpsb
cmp
cmp
icebp
xchg
xchg
aas
inc
dec
das
dec
mov
mov
mov
xchg
stos
mov
repz
scas
fldcw
adc
scas
xchg
pop
std
into
inc
je
rcll
shll
out
and
or
inc
pushf
mov
push
cltd
aad
setnp
push
lods
jge
mov
stc
mov
jmp
jb
adc
add
popa
imull
dec
mov
lock
int
xchg
sti
fimull
or
insb
js
cld
sti
in
gs
inc
or
jmp
mov
das
inc
or
shll
in
enter
mov
aam
stos
mov
ret
push
push
insl
mov
dec
xlat
gs
jne
leave
mov
rorl
xchg
sbb
lods
and
and
je
add
and
insb
inc
repnz
cmp
xor
repz
mov
cld
pop
jne
ficoml
ja
mov
or
loope
inc
call
fldl
mov
and
cmp
add
dec
or
sub
adc
je
mov
movsb
out
out
push
push
shrb
popf
sahf
sbb
mov
or
cld
es
test
dec
jecxz
int3
cmp
into
test
push
jle
cmpsl
mov
xlat
pusha
push
jp
mov
sub
push
mov
cli
cwtl
enter
stos
fcoml
int
add
lds
mov
out
jbe
es
aaa
inc
daa
sbb
push
fs
xchg
jnp
aad
adc
stos
mov
jo
push
and
nop
out
pop
jge
repz
push
jnp
ja
mov
mov
mov
mov
mov
push
or
pop
in
lods
repnz
test
adc
inc
sbb
and
ja
jge
mov
push
mov
push
xchg
sub
stc
dec
sub
mov
movl
mov
add
dec
mov
sbb
cmpsb
sbb
fisubrl
or
std
js
sub
cwtl
mov
pusha
mov
push
mov
nop
int3
jp
mov
cmc
cmc
addb
ret
fldt
add
shlb
mov
icebp
std
xor
rcr
cld
add
pop
jl
cli
xor
arpl
ljmp
dec
inc
adc
inc
and
bound
sbb
jne
out
sbb
pop
pop
aam
mov
js
rcrb
adc
mov
pop
push
dec
mov
or
test
out
mov
in
pushf
jnp
js
add
pop
lcall
repnz
and
mov
inc
add
cmp
mov
mul
stos
mov
jge
sub
or
sbb
push
inc
addr16
rolb
sbb
pushf
push
mov
mov
and
push
push
mov
ljmp
lcall
lds
fidivs
xchg
xchg
xchg
xor
das
jg
add
add
inc
out
cmp
xchg
add
aam
and
sub
ret
cmc
mov
lods
or
mov
lock
js
and
data16
repnz
inc
cld
jnp
ss
js
popa
inc
mov
mov
fs
lret
adc
xchg
inc
or
add
mov
mov
or
mov
mov
sbb
adc
and
out
nop
xchg
adc
ret
mov
fdivs
xor
fdivrl
dec
inc
jecxz
jnp
imul
add
inc
xchg
push
xor
or
inc
mov
fildll
sub
sbb
mov
in
jno
adc
mov
mov
stc
jnp
xchg
shll
ja
sbb
dec
leave
jecxz
xchg
jl
lds
mov
repnz
sbb
fstpl
ja
sbb
add
mov
mov
pushf
fdivrl
enter
hlt
mov
lret
rcll
cmp
or
inc
les
push
loop
and
fisttpll
jecxz
inc
popf
out
test
clc
stos
pop
dec
mov
mov
shr
jmp
cmp
mov
adc
fisubrl
pop
xor
popf
std
shl
inc
nop
enter
add
aad
or
mov
scas
rolb
cli
sbbb
push
add
mov
push
andl
mov
jge
push
xor
in
push
stos
add
hlt
dec
fdiv
mov
faddl
dec
push
outsl
inc
inc
addl
clc
add
stos
dec
jge
sbb
loope
test
xchg
add
flds
jmp
mov
xchg
xor
imul
ss
cmc
decl
in
push
and
call
addb
aas
fnstenv
leave
jbe
pop
sbb
jle
inc
cmp
mov
dec
ja
in
shll
cmp
imulb
rol
xchg
pop
cld
pop
rorb
mov
jnp
or
mov
pop
xchg
rcl
daa
dec
and
push
adc
adc
repnz
call
jnp
xchg
lret
incl
addr16
pushl
pop
mov
fldcw
mov
or
push
pop
dec
shll
or
jecxz
lods
and
lret
sub
adc
movsl
push
into
xor
sbb
jl
arpl
lods
cwtl
sub
pop
push
xorl
or
sub
push
xchg
sbb
sbb
xor
mov
sub
inc
scas
pop
mov
test
pop
dec
rcl
and
sbb
mov
mov
movsb
or
xlat
das
push
pop
inc
jecxz
movsl
push
pop
xchg
push
mov
std
imull
imul
or
cmpsb
addr16
nop
inc
sbb
stos
je
testl
sarb
jae
dec
mov
arpl
push
std
adc
inc
dec
in
lds
sti
leave
mov
mov
and
addr16
fisubrl
testb
daa
idivl
pop
leave
mov
push
cmp
in
stos
mov
loope
sub
mov
and
sbb
fisubl
cmpsl
or
lods
ret
inc
pop
sbb
mov
adc
or
clc
data16
cld
lods
sub
enter
xchg
sub
jecxz
pop
enter
jae
xchg
push
leave
dec
xor
pop
add
push
mov
std
jg
and
mov
arpl
pop
mov
adc
in
cmpsb
mov
fbld
xchg
add
cltd
inc
ret
xor
mov
add
inc
test
jg
sub
les
mov
jmp
imul
jmp
jnp
sbb
pusha
mov
and
adc
mov
fwait
cmp
int3
fnstenv
insb
pusha
je
mov
or
pop
imul
jge
mov
ja
add
jo
jmp
arpl
add
js
jo
dec
adc
mov
mov
inc
mov
cmp
sbb
imul
push
fld
pop
cs
and
add
or
mov
cmp
add
into
into
dec
ss
cwtl
adc
test
mov
jbe
ds
or
sub
jno
test
pop
or
loopne
leave
fisubrl
push
call
or
jns
push
sub
sub
add
ljmp
ds
outsl
mov
jo
les
mov
mov
popa
xchg
dec
fsts
jae
adc
inc
imul
testl
lret
sbb
pushf
aad
jge
mov
les
pop
and
shrl
test
mov
pop
pop
adc
and
addl
push
int
adc
mov
stos
std
mov
lcall
cmp
dec
sub
dec
aam
cli
popa
dec
mov
mov
sahf
mov
mov
jecxz
jno
sub
xor
push
and
in
pop
xor
jne
lods
lds
push
call
imul
push
cmp
je
adc
jae
stc
imul
test
lahf
jno
push
shll
je
jg
mov
xchg
stc
cwtl
jns
push
sbb
and
stos
out
cmp
pusha
js
mov
sbb
popl
clc
or
jecxz
scas
lahf
rorl
xchg
mov
inc
ss
inc
dec
push
stos
cmpsl
cmpsl
xchg
jo
add
js
in
xchg
mov
add
bound
xor
loope
or
fstpl
xchg
mov
or
stos
jge
test
repz
adc
je
lds
cmc
notb
or
packsswb
sub
ret
pop
in
jecxz
dec
cmp
pop
sbb
iret
and
and
dec
sar
cld
xchg
push
mov
loopne
push
push
cmp
sub
push
push
cmp
je
pop
je
shr
stc
fsubrs
bnd
jle
sti
stos
sub
add
popf
mov
pop
jge
mov
stos
jl
das
dec
stc
out
inc
sub
addr16
loop
mov
bound
clc
sbb
xor
pop
daa
xchg
sarl
push
push
inc
pop
stos
adc
xchg
pop
jle
adcb
in
jp
jecxz
mov
loop
aaa
loopne
les
les
dec
adc
inc
jo,pn
andl
fisubrl
adc
xor
inc
icebp
test
and
push
pop
and
push
xchg
iret
ja
fwait
addr16
lret
push
fisubs
push
sub
mov
ljmp
cmp
add
mov
std
push
rorl
lea
mov
scas
mov
add
nop
fstl
movsl
jns
mov
cmp
iret
cmp
cli
or
out
test
or
pop
daa
aad
pop
call
push
test
mov
insl
adc
jg
mov
or
loope
jmp
pop
fmull
mov
push
push
adc
shlb
popa
or
adc
adc
ret
add
test
nop
jg
dec
xchg
jae
popa
pop
fsubr
subb
push
sbb
jge
out
add
arpl
and
or
lds
pop
js
jge
sbb
pushl
ds
pusha
aad
cltd
aam
inc
dec
push
sub
push
incl
out
mov
stos
inc
inc
cli
std
pop
sbb
cmpsl
pop
movsb
add
push
stc
sbb
cs
mov
cmp
cmpsl
arpl
sub
adc
push
jmp
pop
divl
daa
adcl
cmp
jle
js
lret
sub
rolb
pop
inc
stos
mov
test
xor
lea
xchg
jmp
sbb
in
testb
mov
add
insl
pop
mov
loopnew
out
pop
prefetch
mov
lret
mov
es
sti
mov
shr
jb
adc
add
or
std
jecxz
and
inc
dec
popa
add
pop
lea
and
aam
sbb
stc
jnp
out
dec
adc
mov
mov
insl
punpckhbw
pop
pop
addr16
sti
push
pusha
test
das
pop
xor
das
ss
jge
fisttpl
inc
cmpl
mov
sbb
lds
aaa
mov
popf
daa
loop
mov
mov
pusha
insb
shr
cmpsl
jo
fisubrs
lea
sbb
jmp
fadds
lods
outsl
pop
cmp
sbb
lcall
cmc
fcoms
jo
out
sti
push
hlt
daa
xorb
test
sub
jmp
adc
stos
xchg
pop
fs
test
mov
decb
or
fldcw
shrl
cs
repz
call
sti
es
in
rorl
test
clc
loopne
fidivs
sub
cmp
inc
pop
mov
add
cmpsb
cld
pop
cld
jne
test
mov
fwait
sbb
mov
adc
add
mov
dec
gs
sbb
ss
pop
push
dec
sbb
test
test
insb
dec
sbb
fnsave
and
add
ffreep
jecxz
sub
mov
int3
xchg
pop
sub
xor
jae
and
sub
cwtl
cmpxchg
sub
or
mov
cmp
jbe
sbb
addr16
inc
mov
add
and
mov
lahf
ljmp
add
lds
dec
sub
jo
xchg
inc
outsb
test
shlb
lock
mov
fcomps
clc
adc
xchg
push
out
and
inc
lret
call
mov
bswap
pop
xlat
das
sub
and
aaa
dec
mov
cli
pop
repnz
jcxz
inc
xchg
shrb
xchg
dec
or
shrl
testb
out
xchg
dec
nop
imul
in
test
push
mov
loopne
cmp
scas
rcr
push
inc
outsb
sub
int3
mov
add
adc
pop
dec
inc
scas
mov
popa
and
adc
je
movb
mov
mov
mov
hlt
rcl
mov
xor
pop
lods
inc
ror
outsb
or
je
xor
notl
sub
jns
dec
mov
mov
rol
dec
cmp
les
mov
in
cmpsb
jg
pop
inc
mov
mov
xchg
insb
lea
and
mov
std
mov
stos
jbe
pushf
nop
jp
mov
in
gs
mov
pop
add
mov
xchg
leave
lret
pop
mov
gs
xchg
dec
into
scas
fwait
or
add
lds
rcl
pop
les
inc
mov
loope
push
shr
push
xchg
dec
fiaddl
mov
nop
jbe
inc
popf
int
jecxz,pn
mov
sbb
and
jno
lods
mov
mov
dec
lret
ret
and
mov
cmpsl
mov
and
bound
aas
imulb
jne
or
cmp
sbb
mov
enter
add
rorl
add
xchg
pop
xor
pop
es
adc
pop
nop
loop
xor
in
lahf
lea
lods
scas
dec
icebp
sahf
mov
xor
inc
test
test
ds
faddl
jmp
xchg
pop
add
mov
fucomi
add
inc
and
add
mov
push
subl
adc
hlt
push
cli
jb
lods
cli
dec
adc
jle
lods
and
out
jmp
adc
fdivp
push
sub
into
imul
push
daa
inc
mov
xor
jnp
xchg
mov
inc
outsl
out
sbb
inc
or
push
xchg
inc
aad
test
adc
add
rolb
mov
cwtl
xor
fsts
insb
pop
sub
cmp
push
mov
mov
out
test
bound
in
xor
test
ret
cmpsl
enter
in
rcll
test
into
mov
inc
jp
xorl
scas
dec
and
push
fimull
mov
es
sub
repnz
inc
mov
xchg
and
jae
or
xor
push
in
xor
les
dec
jo
xor
jg
in
mov
popa
and
loope
mov
cmp
lods
dec
add
pop
roll
test
nop
fimuls
pusha
arpl
test
pop
arpl
push
es
add
leave
cld
jb
inc
in
popf
mov
loop
inc
lds
or
inc
scas
dec
clc
cs
mov
aam
pminsw
cli
divl
mov
jle
mov
sbb
xchg
sbb
inc
imul
adc
inc
sbb
ret
or
sbb
stos
enter
cli
rorb
push
aaa
xchg
adc
loop
stos
iret
repz
inc
push
hlt
stos
cmpsb
sbb
mov
add
xchg
ds
add
sub
mov
and
cwtl
popa
add
push
stos
inc
insl
mov
jle
pop
shll
push
jmp
mov
and
sbb
stos
addb
cld
xchg
dec
adc
std
pop
xchg
lcall
fucomp
mov
cld
sub
cmpsb
inc
xchg
jecxz
dec
pcmpgtd
pusha
cmpsb
mov
push
cmp
ret
push
ret
xchg
sbb
cmc
iret
push
rolb
sub
negl
push
addr16
sub
dec
jge
inc
mov
popa
jg
mov
inc
sub
xchg
xchg
xchg
add
push
push
xorb
ret
testl
mov
fbstp
xchg
xchg
push
dec
lret
push
xchg
test
xor
jae
add
adc
inc
out
cwtl
mov
jle
repz
mov
dec
enter
jge
jno
sub
xorb
or
cld
rorl
mov
pop
adc
xchg
push
jle
in
addr16
out
scas
outsb
add
jnp
movsl
xlat
pop
cmp
or
lods
rcll
jae
inc
push
xchg
push
mov
cmp
in
jns
cmc
aas
push
fstl
pushw
mov
push
pop
fmul
fidivs
mov
cmp
mov
call
pop
stos
pop
add
cltd
cld
cmp
fnsave
stos
scas
and
push
repnz
stos
pop
insl
sbb
cmpsb
sbb
pop
xor
pop
mov
mov
mov
mov
gs
nop
push
jmp
inc
testb
and
idiv
adc
in
xchg
mov
pop
sub
cld
and
or
cld
mov
push
sub
dec
mov
inc
loop
arpl
xor
cmp
mov
cld
mov
and
jg
in
sub
pop
xor
sbb
adc
int
aam
in
stc
ds
dec
loopne
xor
pop
scas
or
aad
jmp
icebp
fldenv
outsl
or
inc
aam
jg
pop
repnz
mov
jle
jmp
pop
or
movl
out
mov
xchg
sbb
mov
cld
mov
jle
pop
inc
rcrb
adc
cmp
adc
cmp
out
movsl
mov
jbe
xchg
pusha
std
xchg
mov
fwait
sub
mov
test
push
sbb
call
dec
rolw
jne
testb
popf
cmp
and
add
sub
add
scas
jl
mov
test
jle
dec
lret
enter
fxch
scas
jbe
or
push
push
icebp
pusha
mov
push
push
arpl
and
test
pusha
adcl
sbb
mov
xor
repz
fsts
mov
les
add
inc
mov
arpl
imul
in
sub
push
adc
mov
jmp
mov
enter
add
mov
sbb
sarb
loope
sbb
or
dec
in
sbb
scas
inc
push
icebp
adc
xor
push
add
js
xor
push
imulb
xchg
out
push
lea
adc
in
add
push
aaa
mov
cmp
outsb
fs
jno
jmp
add
adc
dec
mov
stc
lds
aam
outsl
pop
mov
loop
pop
mov
test
pop
mov
insl
cld
rorl
sti
icebp
adc
add
or
pop
enter
stc
sahf
jno
inc
pop
inc
in
inc
mov
outsl
insb
pushf
in
pop
sub
or
inc
jg
adc
fldenv
addb
mov
inc
push
pop
leave
sbb
lret
iret
dec
popa
outsb
shl
fs
iret
mov
mov
sahf
cmp
add
fwait
daa
cmp
mov
adc
pop
xchg
dec
sbb
jp
mov
ret
mov
cmpsl
add
adc
xchg
lock
stos
mov
add
jno
cmp
sbb
je
lds
ja
rcr
and
cmp
loopne
sarb
xchg
scas
lods
dec
jbe
mov
ss
dec
andl
popa
sub
shlb
jne
in
cwtl
idiv
imul
pop
xchg
push
fwait
jmp
cwtl
cmp
das
xor
mov
inc
mov
pop
and
add
std
in
push
inc
les
xchg
fistps
mov
ret
bound
push
xchg
mov
sub
pushf
pop
dec
out
or
jno,pn
push
shll
mov
dec
sub
call
js
push
xor
pusha
adc
adc
sub
loop
add
ja
jl
inc
add
popf
mov
adc
mov
shr
xor
cmp
outsl
stc
or
mov
inc
add
imul
pop
stos
push
aad
stc
dec
int
fsubrs
je
sbb
xor
jge
pop
pop
inc
imul
aam
adc
adc
loope
inc
lcall
xchg
mull
std
cmp
jne
idivl
loope
jmp
cmpsl
adcl
bound
push
jbe
mov
out
scas
jb
sbb
and
cli
fsubrs
cmpsb
mov
ds
push
fs
or
jmp
rcl
leave
call
imul
xlat
repnz
push
push
mov
push
mov
out
in
sub
repnz
das
mov
jns
pushf
sti
icebp
jno
xor
mov
div
sbbb
cmp
cmp
idivb
sub
cmc
pop
shl
loope
bound
or
ret
cltd
mov
sbb
cwtl
xchg
adc
mov
test
sub
lods
lock
xor
mov
int
mov
pop
push
pop
or
xchg
push
or
pushf
int
mov
xchg
adc
inc
mov
or
xchg
sbb
test
jb
pushf
mov
mov
mov
push
mov
mov
ret
sub
and
gs
xor
push
imul
mov
xor
ficompl
jl
add
or
xor
dec
in
mov
adc
cmp
loop
call
push
push
dec
push
push
xorb
sbb
cmp
or
fcmovne
push
mov
clc
aad
les
das
into
scas
stos
inc
popf
mov
push
cli
repnz
jmp
add
jmp
sbb
xchg
shll
jbe
lahf
sbb
adc
sub
jmp
mov
cmp
test
mov
into
lahf
dec
orb
fmull
mov
jmp
mov
fwait
mov
rcrb
sub
sar
fdivs
int
popa
pop
fwait
fwait
cmp
test
adc
je
es
jne
mov
bound
in
loop
cmc
or
sub
sahf
popa
xor
aam
mov
jb
fisttpl
xorb
in
xor
lock
and
or
adc
in
inc
cmp
ret
aam
jg
outsl
dec
lcall
jecxz
dec
popf
iret
pop
pop
jae
lds
outsb
sbb
xchg
lods
stos
mov
mov
es
jecxz
mov
dec
fisubrs
jecxz
sbb
jg
xchg
repz
frstor
fisubs
sahf
and
and
movsl
fmull
les
or
adc
inc
mov
je
sub
inc
push
out
rolb
jmp
test
mov
pop
cmp
inc
addl
jae
dec
dec
pop
mov
mov
subb
mov
popf
adc
pop
popf
ss
or
sbb
arpl
mov
fldt
pop
mov
mov
adc
mov
cmp
cmp
stos
divl
out
dec
dec
xchg
movsl
flds
es
cld
add
mov
daa
mov
mov
roll
repnz
iret
arpl
cltd
pop
or
shrb
mov
add
icebp
loope
and
je
aas
scas
mov
fmuls
test
aaa
jmp
fs
loop
mov
xor
jg
adc
je
rolb
add
insl
jg
push
sbbb
rcll
scas
push
xor
pop
fcoml
push
lahf
dec
stc
dec
ljmp
mov
scas
dec
sarb
test
jno
or
sbb
cmovle
mov
dec
push
xchg
cltd
out
pushf
mov
shl
ja
xor
negl
shl
jae
lahf
pop
or
mov
dec
repz
pop
cmc
stc
outsb
mov
cmp
rcll
std
movsb
in
or
int
mov
mov
aas
xchg
ficoms
pop
jecxz
dec
jmp
xchg
stos
pop
aam
scas
stos
pusha
dec
ficoms
push
mov
ret
mov
enter
subl
shlb
adc
sub
mov
dec
ds
jl
popa
pop
lahf
ljmp
jne
jmp
jg
cmp
cmp
or
out
adc
push
daa
or
dec
loop
push
or
sub
inc
push
sub
mov
xor
out
ss
inc
or
push
or
pop
test
inc
cmp
sarl
loopne
flds
lock
popf
push
int
movsb
cmp
inc
mov
add
or
pushf
loope
cmc
mov
xlat
and
adc
pop
out
lods
aad
insb
or
and
pop
cmp
adc
jl
push
xorl
and
pop
add
mov
xchg
scas
jmp
mov
outsb
mov
xor
test
or
sbb
mov
xlat
out
dec
sub
jae
jnp
aad
mov
cmp
sub
jbe
dec
es
arpl
mov
cmpl
adc
cmc
leave
and
adc
pop
ds
xor
ljmp
mov
pop
inc
fucomp
lds
idiv
cli
rcrl
loop
popa
jl
jp
or
jns
int3
stc
sbb
push
fstpl
jp
jno
mov
push
mov
leave
test
outsl
cs
loope
js
sub
or
popf
push
dec
fnstsw
call
pop
xor
and
dec
cld
movb
loop
and
mov
push
or
and
into
push
arpl
sbb
xchg
popa
sbb
sub
pushf
in
or
and
cmp
sub
dec
sti
xchg
jne
add
mov
dec
xchg
xchg
icebp
adc
push
int3
sbb
push
mulb
xor
cmpsb
mov
fsubrl
ficomps
scas
jnp
inc
jle
loop
fisubrl
sbb
sbb
sbb
pop
in
xchg
leave
xchg
pop
adc
mov
fistpll
pop
or
sbb
push
fwait
mov
adc
xlat
inc
lret
stos
jnp
sub
ljmp
outsl
mov
repnz
mov
mov
push
cs
dec
or
jle
lock
and
add
ficomps
pusha
mov
dec
mov
fisubrl
mov
scas
pop
adc
xorl
cmp
adc
ja
fucomi
sbb
or
sbb
mov
je
push
mov
mov
jae
test
add
in
sub
inc
adc
out
cmp
xor
cmc
push
fsts
cmp
or
mov
jo
cmp
inc
jl
jmp
in
xlat
mov
and
mov
xor
aas
adc
cld
inc
add
mov
in
dec
mov
js
test
stos
cltd
xchg
sub
inc
dec
push
push
fimuls
cli
aaa
mov
into
jg
movsl
out
aas
mov
jl
add
xor
in
dec
and
fldl
add
cltd
stos
cwtl
adc
jl
jle
rol
hlt
cltd
ss
aam
aam
mov
or
shl
fimuls
dec
shll
and
outsb
pop
push
sbb
jno
jnp
nop
test
or
cmp
pop
jl
sbb
jb
lods
mov
movl
xor
scas
jp
fldenv
or
popf
inc
imul
adc
test
sbb
xor
mov
or
inc
pop
mov
lods
es
cmc
sbb
aad
jae
sbb
repz
leave
ljmp
jo
sbb
aad
dec
testb
enter
dec
daa
push
pop
cs
pusha
pop
push
dec
jle
pop
cld
scas
push
icebp
jbe
jge
adc
dec
mov
movsl
out
inc
push
andb
mov
and
mov
out
bound
icebp
xchg
imul
xchg
ret
sbb
xchg
test
xchg
and
add
int
and
inc
sbb
lret
in
pop
aam
nop
jnp
dec
daa
push
mov
pop
cmpsl
ja
sub
xorb
adc
aaa
int3
dec
mov
in
rcrl
jae
dec
into
addr16
and
inc
cld
pop
inc
adc
rolb
movsl
lea
out
cmp
cmpsb
je
in
xlat
cmpsl
sbb
fwait
inc
push
mov
cmpsb
add
or
add
cld
fistpll
xchg
push
add
or
adc
dec
push
int
orl
lcall
icebp
mov
xchg
inc
and
scas
mov
dec
js
sub
dec
lods
pop
lea
sub
sbb
push
jmp
lods
sbb
stc
daa
lret
mov
lahf
addr16
lock
in
dec
fwait
test
jp
testb
mov
hlt
stc
jo
sub
enter
push
mov
jne
dec
add
jae
bound
insl
hlt
fistpl
pop
mov
or
mov
or
and
and
dec
xorb
or
lahf
xchg
mov
adc
addr16
push
mov
sti
add
sbb
xchg
dec
cmp
call
mov
sub
lock
xchg
or
je
push
ret
fs
mov
loopne
ljmp
iret
imul
sbb
aam
decl
aaa
sbb
inc
xchg
test
sub
lcall
sub
movsb
push
push
xchg
cmp
call
mov
sub
sub
pop
dec
cmpsl
fld
xchg
mov
xor
mov
repz
or
inc
aam
imul
inc
xor
lahf
clc
cmp
cwtl
in
sub
mov
mov
jo
sub
lds
dec
imul
add
dec
pushf
cmpl
pop
cmp
popf
adc
xchg
and
jo
sti
ss
mov
cmp
cmp
mov
je
pop
mov
adc
insb
addl
pop
sub
add
das
and
repz
inc
push
push
jns
pop
add
jns
xchg
sub
push
add
mov
fsubs
mov
inc
pop
imul
std
jl
adc
push
iret
fnstenv
pop
clc
fs
in
je
xor
cwtl
out
adc
mov
sti
out
or
mov
enter
push
or
bound
rcrl
add
cmc
mov
ret
stc
xchg
sbb
roll
or
cmc
adc
xchg
inc
mov
adc
mull
in
dec
adc
push
idiv
mov
sarb
repz
scas
scas
stc
cmp
cs
add
and
add
mov
xchg
mov
pop
add
or
mov
adc
subb
cmp
pop
mov
adc
ss
shlb
jbe
or
les
mov
cltd
adc
rcll
xchg
std
push
xor
insl
arpl
sbb
mov
pushf
adc
xor
jg
sbb
popf
fsubrl
movsb
and
cmc
out
push
adc
push
test
out
push
cmp
mov
dec
xchg
sub
das
lahf
lret
sbbl
or
pop
shl
adc
inc
push
pusha
sbb
lret
xchg
fwait
mov
popa
aaa
sub
aad
fcomps
mov
jb
test
movsb
cld
jp
cmp
xchg
test
icebp
xchg
adc
arpl
mov
push
mov
shr
fldt
ds
jecxz
repz
iret
jp
scas
shlb
movsb
lcall
ds
cmp
outsb
jp
mov
xchg
mov
insb
imul
inc
dec
cwtl
mov
jo
ljmp
lea
jbe
outsb
sub
add
movsb
push
jge
pusha
repz
inc
clc
dec
xor
mov
mov
stos
sub
jb
cmp
xlat
jo
jbe
lcall
jmp
sbb
cmp
int
rcrl
sti
outsl
repz
inc
inc
mov
mov
les
xchg
sahf
jne
clc
loop
dec
sub
out
sub
gs
call
mov
js
imul
xor
mov
bound
or
jg
lock
pop
or
sbbb
sbb
mov
adc
push
xor
popf
fisttpll
jbe
enter
sub
stos
testl
cmpl
imul
in
sbb
mov
out
cmp
sahf
loope
add
sub
pop
aas
lahf
in
xor
jno
mov
or
or
mov
rorb
adc
repz
loope
lods
std
gs
push
push
outsb
test
inc
movsb
inc
or
push
popf
sti
fimull
xchg
lahf
js
xor
or
xchg
push
mov
adc
and
test
push
mov
andnps
add
or
sbb
or
sbb
mov
or
lods
mov
lea
adc
gs
mov
ja
shl
call
pop
xor
rcrl
cmpsl
mov
and
mul
jo
addr16
dec
lds
notb
idiv
pop
cltd
mov
sti
ds
adc
test
adc
push
and
les
cwtl
push
jb
shl
push
mov
cmp
jg
mov
repz
cmpsb
mov
jo
cmp
push
enter
mov
outsl
push
mov
les
cmp
pop
xor
adc
sbb
mov
mov
xor
iret
ss
mov
sbb
jo
outsb
jmp
icebp
push
mov
lds
pop
sbb
imul
movsl
rolb
add
cmpl
out
push
add
add
jne
adc
fsubrs
sub
add
xchg
cs
push
cmp
loopne
mov
fwait
hlt
sti
inc
lds
outsb
xor
fwait
sbb
sbb
aam
dec
dec
cmp
loope
jle
imul
push
push
je
sbb
inc
lret
sarl
into
adc
push
adc
push
mov
fstpl
shr
call
mov
jecxz
shrb
gs
stos
jl
test
scas
ss
xchg
jbe
mov
call
cmp
dec
adc
jp
ss
flds
push
jnp
pushf
jb
or
int3
pop
pop
cmpsb
and
out
cmc
cmp
or
nop
pop
mov
jae
divl
mov
inc
mov
push
lds
sub
sti
aad
inc
repz
mov
mov
repz
sbb
sbb
pusha
shl
ret
mov
mov
cwtl
shll
aam
aad
ret
or
dec
mov
or
stos
addr16
popf
jge
dec
mov
mov
xor
push
xchg
jno
fdiv
push
push
mov
insl
mov
push
lock
enter
pop
jmp
icebp
adc
cmpsb
cli
mov
fildl
jb
cmp
mov
mov
ljmp
xchg
flds
xor
rcll
push
pop
loop
popl
js
cmp
sub
jl
pop
cld
xor
and
sbbb
sbb
subl
outsl
mov
or
lods
sbb
sbb
addr16
cwtl
xchg
inc
imul
pop
inc
out
pop
pop
leave
test
clc
sbb
loopne
jb
ljmp
lods
dec
arpl
and
jge
xchg
ja
insl
sbb
ja
inc
hlt
adc
jle
repnz
or
sti
sbbb
jp
push
inc
push
gs
fldcw
hlt
adc
mull
mov
fisubs
push
cmpsl
mov
xor
fisubrs
adc
mov
jns
sub
je
mov
nop
xchg
xchg
push
ret
int
and
jae
and
jl
int3
insl
xchg
jo
xchg
lds
in
push
int
std
into
and
pop
adcl
sbb
in
mov
gs
ljmp
push
add
xchg
imul
in
push
xor
sub
in
dec
mov
nop
mov
mov
lret
std
or
pop
mov
dec
jmp
repnz
hlt
fincstp
mov
adc
or
arpl
push
cmp
repz
push
and
rcll
pop
inc
cmp
hlt
out
xchg
in
adc
or
pop
loop
gs
lods
pop
rorb
out
push
stos
call
xchg
mov
jae
cmp
jg
xor
add
lret
mov
shlb
lock
pushf
add
jns
mov
lret
pop
jb
out
inc
fmuls
sub
and
pop
xchg
fcmovbe
into
pop
mov
push
inc
pop
fidivrs
cmp
cmpl
xchg
push
fstps
cmp
mov
xchg
pusha
mov
inc
daa
das
mov
inc
xchg
inc
xor
cli
jno
repz
rolb
pop
gs
out
push
daa
jnp
gs
dec
dec
or
test
call
test
xchg
push
cmp
fwait
nop
lret
fsubs
test
push
aas
fcomps
xchg
scas
sub
lret
add
iret
or
push
add
shlb
mov
mov
pop
and
push
cs
rdmsr
inc
loop
mov
repz
cmc
test
jmp
sbb
ja
push
std
aad
sbb
inc
mov
push
dec
fcmovu
mov
cmp
fisttpl
jo,pt
inc
mov
push
test
dec
jmp
mov
push
cli
add
mov
pop
pop
lret
insl
xlat
add
cmp
and
repz
leave
push
stos
and
dec
js
add
pop
bnd
lds
xchg
mov
rolb
cs
or
pop
xchg
xor
lock
fldt
fnstsw
pop
rol
jnp,pn
adc
ds
sbb
test
imulb
ret
xchg
jmp
in
aas
rol
fnstcw
xor
rcrb
loopne
in
fsubrl
lods
fiadds
subl
out
sub
fldenv
jbe
jmp
fwait
and
push
pop
push
cli
mov
int
imull
mov
inc
ja
aas
adc
push
les
scas
lods
cmp
loop
pop
nop
arpl
mov
sbb
push
lods
lahf
push
push
dec
lods
scas
fistpll
xchg
icebp
outsb
rorb
sbbb
push
push
xor
push
fiadds
clc
jno
lods
cmp
ret
call
in
fsts
push
inc
jg
cmpsb
in
scas
jns
lahf
int
in
data16
stos
in
mov
mov
out
lea
test
lods
dec
test
out
sbb
into
and
mov
arpl
shrl
jo
cmp
stc
inc
pop
loopne
xchg
add
mov
cmp
ljmp
mulb
push
inc
inc
fisubs
pop
dec
pop
mov
jmp
pusha
jecxz
xchg
pop
stc
andb
jl
stos
adc
xchg
fdivr
cwtl
xchg
pop
clc
fsubr
xor
sub
cli
lcall
sti
cmpsl
jae
push
insl
mov
jp
lcall
inc
jmp
jecxz
fidivrl
jg
adc
adc
aaa
sbb
mov
mov
sahf
push
repz
test
pop
xchg
inc
mov
pop
loop
jne
mov
sbb
call
mov
popa
mov
push
xchg
jg
xchg
xchg
hlt
or
add
lock
push
mov
push
xor
mov
cmc
dec
push
sub
sub
jge
imul
ret
icebp
ret
dec
inc
push
push
dec
push
xor
fiadds
pop
pop
mov
push
lock
rorl
jp
ss
mov
fistpl
lock
push
test
jmp
rol
cltd
jmp
pop
sub
xchg
mov
mov
inc
fdivs
in
iret
cltd
out
testb
ret
cs
push
adcb
push
div
sahf
iret
in
lcall
pushf
sti
mov
cld
loopne
in
addr16
or
clc
leave
and
sub
xchg
mov
jb
ja
dec
sub
add
sub
push
push
cmp
aad
insl
mov
mov
mov
test
test
decl
jb
and
or
sub
pop
adc
jo
mov
jmp
mov
ljmp
es
mov
mov
das
cmp
notl
fisttpl
stos
lods
cwtl
dec
cli
in
in
lahf
xor
mov
sti
pop
xor
and
loope
mov
cmpsl
data16
xor
loopne
jmp
arpl
xor
push
mov
gs
data16
inc
add
mov
jnp
cld
scas
insb
sarl
xchg
dec
rcrb
stos
jb
xchg
popf
loop
pop
call
aas
jecxz
pop
and
sub
scas
xlat
sbb
daa
and
adc
mov
outsl
or
movl
cmp
mov
push
lret
ja
mov
sarb
push
leave
cmpl
jecxz
mov
lds
aad
pop
adc
inc
mov
mov
push
outsb
test
jle
push
mov
aas
cmp
stos
sub
repnz
mov
ds
sub
stos
out
adc
mov
sahf
dec
pop
ret
mov
out
gs
cmp
nop
loope
adc
mov
sub
ss
sub
sub
cmpl
jb
ljmp
add
cmp
push
imul
jbe
adc
sub
pop
add
dec
jecxz
stc
cld
lahf
xor
mov
into
and
ffreep
dec
xchg
fdivrl
sub
push
test
iret
and
rorl
pop
ret
mov
out
popf
push
mov
add
lret
and
lods
out
xlat
movsb
add
push
pop
push
pop
scas
std
adc
es
sbb
pop
mov
push
jecxz
stos
xor
cmp
mov
out
xchg
and
gs
ret
fiaddl
stos
add
addr16
fs
mov
dec
pop
sbb
test
scas
rorl
push
hlt
aaa
fldpi
cs
fnstcw
push
repnz
jp
cmp
adc
and
jo
frstor
sub
notb
imul
and
add
dec
xor
mov
add
push
shll
cmpsl
inc
idivb
imul
cmp
cmp
xchg
ret
fadds
lret
xchg
jmp
inc
cmp
pusha
fucomp
inc
dec
pop
mov
in
enter
ja
fidivs
test
pusha
test
popf
xor
inc
mov
stos
filds
lods
notb
jl,pn
les
sti
and
cmp
xor
mov
sub
sub
push
sar
stc
rcrb
mov
cmp
pusha
jae
mov
ss
mov
and
push
mov
cld
mov
and
subb
sbbl
inc
or
mov
sub
lods
pop
dec
add
add
mov
cltd
in
jl
int3
inc
in
jmp
rorl
pusha
lahf
mov
or
add
mov
xor
sbbb
push
xchg
inc
in
mov
inc
sub
outsb
into
das
sbb
jo
ds
jmp
frstpm(287
mov
roll
enter
sub
ds
mov
adc
adc
sti
inc
shlb
push
and
sbb
fildl
cld
shll
stos
mov
lock
adc
lret
lods
popa
mov
imul
mov
push
mov
stc
aaa
test
aad
addl
dec
movsl
test
cli
mov
push
dec
out
outsb
out
mov
orl
pop
mov
xor
repz
sbb
pop
cmc
pusha
test
mov
enter
stos
faddp
and
test
dec
movsl
stc
ret
lcall
mov
andb
mov
shll
loope
inc
adc
push
clc
fildll
std
hlt
shll
mov
bound
outsb
rcrb
dec
jne
mov
sahf
pop
mov
cmc
aam
out
outsb
xor
sbb
and
and
je
mov
jp
js
pop
jbe
sub
xchg
ffree
stc
and
fdivrl
cmpsb
and
pop
bound
push
push
pop
jne
aam
sbb
sbb
or
sbb
notl
xlat
in
mov
testb
or
sub
sbb
ss
ljmp
pop
popa
jb
add
push
sbb
jle
in
popa
in
ja
icebp
xor
ror
or
mov
lcall
sarl
sub
dec
in
adc
fdivr
ja
mov
push
pop
jle
test
mov
cwtl
aam
cmpsl
adc
jecxz
xchg
xchg
dec
fstl
mov
fstl
daa
data16
movsb
adc
cmp
pop
and
cmp
push
icebp
jne
xor
xor
insl
push
out
mov
into
sbb
inc
rolb
cld
push
cld
sub
mov
ljmp
adc
mov
inc
lds
dec
push
cmp
push
fimuls
lea
lret
push
sub
xlat
out
push
repnz
xchg
out
std
cmp
mov
scas
test
mov
cmp
cli
les
jg
int3
jnp
testb
aaa
inc
sbb
jl
orl
mov
mov
xor
inc
mov
popf
fucomip
daa
jmp
sbbl
dec
cmp
outsl
mov
cmp
add
lret
mov
lcall
insb
push
bound
dec
aas
je
aam
xchg
icebp
nop
add
rcrl
jne
rcl
cs
std
add
loop
pop
mov
stc
mov
cmp
icebp
push
cmp
mov
jns
das
xor
cmp
je
arpl
orl
sub
push
jb
pop
or
iret
dec
lret
iret
cwtl
and
jge
repnz
lret
add
xor
jb
jmpw
add
pusha
mov
add
mov
daa
stc
add
cmp
mov
xchg
push
lock
cwtl
js
push
push
fbstp
stos
cwtl
jb
je
push
cld
stos
call
fcomi
clc
cmc
jo
jl
aam
mov
aaa
xchg
mov
repnz
jne
pop
mov
into
jae
sub
adc
inc
add
inc
sbb
mov
sbb
xchg
pop
shrb
imul
inc
and
or
inc
shlb
inc
push
scas
xchg
rcl
rol
int3
pushf
push
pop
sub
fistpl
xor
cmc
mov
int3
push
repnz
dec
outsb
xchg
fstl
push
dec
mov
sarl
dec
adc
mov
adc
sbb
push
mov
and
sbb
pop
les
xchg
iret
lds
lahf
cmpsb
inc
sub
movsb
inc
and
les
mov
cmp
ficompl
ds
lret
int
sbbl
aas
and
mov
call
out
xor
or
and
enter
ljmp
and
push
es
dec
insb
mov
movsb
and
jne
fstl
test
clc
pop
shrl
fwait
std
xchg
or
bound
push
jmp
push
pop
jp
xchg
jle
xchg
lds
adc
sub
loop
lods
mov
jnp
xchg
es
enter
data16
jae
cmp
push
dec
out
lret
dec
lcall
negb
add
adc
and
push
fisttps
xor
adc
sbb
inc
stc
imul
xor
pushl
push
popf
cs
repz
fisubrl
jecxz
pop
or
insl
call
pop
or
incb
icebp
push
add
cmp
movsl
push
add
jl
mov
mov
mov
push
scas
adc
inc
or
push
lods
std
cmp
aad
jno
std
lods
xchg
loope
gs
aad
jmp
xchg
ljmp
fldt
inc
insl
and
sub
dec
mov
push
push
scas
insb
or
into
decb
clc
dec
loope
cmp
rorl
push
and
shrl
mov
sub
push
inc
inc
test
xchg
dec
fistl
cmp
cmc
jae
cwtl
or
pop
sub
or
es
push
ss
gs
add
js
fadds
cmc
sbb
xorb
jg
xor
stc
cld
inc
jae
lods
movsl
sbb
jle
lods
inc
stc
or
loope
sub
xchg
loopne
xchg
sbb
out
fistl
pusha
push
jbe
push
into
jecxz
inc
push
ss
fwait
cltd
scas
adc
shlb
mov
clc
pop
imul
push
in
cmp
sub
mov
stc
pop
es
es
or
adc
cmp
test
cmpsb
fwait
pop
test
sbb
add
in
lock
fsubs
sub
ja
pusha
cmp
pusha
and
jne
cmp
mov
dec
sub
xor
lea
out
mov
outsl
push
xor
add
outsb
loope
pop
add
test
nop
push
js
push
mov
lods
dec
jle
xchg
add
jecxz
mov
fisubl
sub
xchg
nop
fnstcw
sub
ret
adc
fidivs
lcall
pop
iret
jb
test
and
mov
jo
hlt
int3
xor
push
rcrl
cmc
and
cwtl
mov
ret
leave
sbb
insl
mov
clc
sub
test
jnp
lods
push
in
ss
and
xchg
or
imul
mov
xor
dec
repz
outsl
ss
and
push
mov
lret
out
xlat
inc
dec
mov
ss
cld
cmp
jnp
push
pop
cmc
sub
mov
fwait
sbb
mov
mov
daa
fisubrs
stc
cmp
sti
dec
imul
inc
imul
daa
mov
and
mov
xlat
mov
push
loop
adc
out
je
sbb
in
add
loope
out
ds
scas
and
out
dec
stos
push
cltd
je
clc
jmp
cltd
xchg
sti
pop
lods
sti
and
mov
xchg
sub
imul
mov
call
popf
enter
loop
push
sti
fwait
push
xor
push
adc
or
arpl
dec
inc
sbb
lea
inc
xor
mov
push
imul
je
lods
mov
in
repnz
push
ret
shll
mov
xor
arpl
test
jbe
jl
xchg
das
lock
out
adc
inc
jg
pushl
inc
mov
js
or
testb
jg
test
std
mov
nop
mov
pop
push
xor
push
dec
movsb
jmp
jecxz
jl
xchg
mov
push
in
iret
add
sub
cmc
and
push
mov
jae
pusha
pop
lret
fsubr
jge
inc
ffreep
jns
test
mov
js
stos
mov
adcb
push
fs
jl
call
mov
jmp
arpl
dec
xchg
mov
pop
sub
frstor
and
push
fcompl
inc
stos
insl
sbb
and
aas
or
inc
xor
or
mov
popa
cmpsl
stos
add
push
sbb
pop
pop
scas
or
mov
outsl
jno
les
push
inc
test
mov
cmp
inc
jbe
cmp
xchg
jge
in
sbb
push
xor
test
aaa
popa
inc
push
test
les
cmpb
mov
add
movsl
lods
pop
out
dec
fcmovnbe
mov
push
aad
inc
inc
add
jo
mov
movsl
adc
std
out
out
fstpl
test
push
cmp
xchg
lahf
bound
xchg
hlt
repnz
sbb
sub
dec
loop
dec
sbb
lret
lret
or
aam
mov
js
mov
clc
sbb
js
xor
insl
cltd
repz
inc
mov
lret
ss
out
sbbb
jmp
cmp
test
inc
outsb
and
pop
xor
outsl
sbb
or
ljmp
xor
enter
and
rcl
add
lahf
mov
aas
dec
jl
push
pop
sbb
jnp
adc
pop
mov
jno
and
js
add
push
cmpsl
push
out
add
cmpsl
pop
testb
mov
adc
xor
fsubrs
pop
sarl
je
xor
mov
sbb
add
pop
or
jne
lock
iret
sub
lret
loope
into
jle
mov
xor
add
xlat
lahf
dec
arpl
push
mov
hlt
movsl
int
gs
dec
cmc
or
or
mov
rclb
into
mov
ds
and
sub
dec
sub
insb
fcmovnbe
insl
cmpsl
add
adc
loop
or
inc
repnz
dec
aad
testl
sbb
pop
add
sahf
mov
push
cmc
orw
adc
ds
cmpl
push
fldcw
push
inc
ljmp
mov
sub
jmp
mov
or
sbb
xorl
cld
fs
imul
sbb
sub
dec
stc
loop
or
pop
lret
lock
dec
cltd
push
enter
rcl
ds
mov
pop
test
jmp
pop
push
mov
push
jl
push
mov
adc
dec
fdivr
lret
das
add
lock
cltd
jmp
mov
cmpsl
mov
push
xor
pop
mov
mov
daa
mov
bound
push
jnp
repz
jbe
cmp
xchg
or
rolb
cwtl
mov
cmpsl
cli
dec
push
push
inc
cmp
xor
mov
mov
cs
jp
addr16
sbb
or
lods
jne
insl
ret
sysenter
mov
cmp
aaa
dec
mov
data16
sbb
daa
mov
add
mov
jnp
dec
cmc
insb
lods
icebp
dec
imul
out
adc
decl
adc
add
pop
add
mov
arpl
shll
je
mov
cmpsl
stc
dec
repnz
out
inc
fwait
sub
push
inc
fcomip
mov
mov
inc
cmpsb
xor
mov
xor
dec
mov
add
ret
call
sbbb
lds
out
cmp
adc
push
mov
nop
movsl
and
push
cld
test
and
xchg
mov
cli
mov
or
int
xchg
cmp
mov
mov
push
in
repnz
int3
cmp
jp
dec
dec
and
xor
cmp
ret
inc
xor
inc
dec
sbb
and
push
dec
mov
popa
xlat
and
out
test
cmpsl
or
pop
test
lods
push
pop
adc
pop
push
loopne
inc
push
mov
sub
pop
inc
inc
es
syscall
stos
insl
pushf
push
cmpsl
fs
xor
aad
fwait
push
out
push
vpavgb
fistl
fbstp
fdivs
mov
jno
dec
cmp
int3
and
push
fnstcw
in
cmp
ja
sub
push
cltd
in
scas
xor
icebp
daa
loope
mov
adc
mov
ret
adc
xorl
hlt
popf
push
and
fistpll
mov
sbb
inc
add
int
testb
dec
xchg
popa
pop
in
sbb
jae
lock
rorb
push
sub
cmp
xor
sub
cmp
shll
clc
mov
icebp
enter
cmp
dec
jmp
inc
mov
ljmp
js
shll
test
arpl
bound
pop
popf
sbb
imul
insl
jmp
arpl
out
jmp
jbe
pop
mov
test
lcall
popf
clc
xchg
xchg
mov
pusha
inc
lock
xlat
iret
test
sub
push
xchg
cmp
or
xor
cmp
mov
stc
jl
jb
rcrb
xor
add
or
adc
mov
movl
push
or
xchg
cmovnp
mov
pushf
push
or
add
pop
push
and
stc
or
subb
jmp
sub
jne
lahf
mov
sub
sbb
xor
cltd
sub
and
je
sbb
data16
mov
gs
push
das
push
push
push
imul
xchg
pop
adc
xchg
pop
out
sbb
pop
push
or
push
mov
arpl
xchg
fistpl
jb
sub
fstps
cmp
xchg
inc
xchg
rcll
or
das
aaa
mov
and
cmc
push
and
pop
or
jl
je
mov
xchg
notl
xor
add
pop
sbb
pop
test
jmp
sti
mov
xchg
cwtl
out
sub
insb
push
mov
add
jle
sbb
mov
xor
daa
icebp
sti
je
cs
cli
mov
cmp
pop
and
mov
scas
cmp
out
mov
pop
xor
add
and
mov
sbb
dec
data16
sahf
js
insb
lcall
mov
lcall
sbb
pop
xchg
sbb
enter
pop
movsl
xorl
mov
clc
imul
ja
pushf
sbb
shl
jge
hlt
data16
enter
fsubl
pop
adc
adc
addr16
fs
jmp
adc
xor
sbb
fwait
int
xchg
out
xor
pop
cmp
aas
xchg
inc
nop
add
ss
clts
mov
fidivs
inc
cmc
pop
cmc
insl
mov
sub
cs
rorl
ror
aad
add
ffreep
call
out
stc
mov
shr
negl
stos
pusha
fnstsw
les
jmp
aam
test
jnp
aaa
shrb
mov
loope
dec
xor
cmc
jmp
mov
inc
pop
mov
cmp
pop
dec
xchg
and
xor
cld
lahf
sub
xchg
outsb
mov
pusha
sub
sub
sbb
stc
and
mov
in
gs
cld
jmp
or
mov
push
cmpsb
in
pop
dec
mov
lods
pop
jno
pop
or
addr16
sbb
das
bound
mov
lods
test
pop
sahf
outsl
mov
lret
mov
dec
call
in
insb
sub
adc
mov
adc
shlb
scas
lock
mov
adc
out
push
pop
sub
cltd
mov
ds
cwtl
jmp
gs
sub
xor
loop
or
mov
sbb
adc
sbb
ds
pop
into
jno
dec
insb
mov
sbb
push
cmpsb
fcompl
lret
sbb
js,pt
mov
test
mov
aad
cld
jecxz
rclb
mov
jbe
or
out
sar
sub
shlb
inc
dec
fnstenv
out
pop
nop
sbb
add
push
out
mov
pop
push
imul
and
aam
fwait
lcall
iret
jno
push
mov
cmpsb
mull
insb
cmp
xchg
aad
lcall
imul
out
cmp
push
inc
shl
fiadds
inc
or
xchg
jae
sbb
cmp
sub
test
cld
xchg
in
test
or
in
rorl
adc
sbb
outsb
jecxz
inc
xchg
sbb
sbb
cmp
inc
addl
sbb
fstl
in
push
in
or
inc
sbb
pop
imul
out
push
push
push
scas
or
andl
xor
and
pop
or
inc
mov
movsb
scas
outsb
in
add
mov
mov
xchg
inc
inc
pop
loop
add
jecxz
lret
popa
or
jno
push
jl
cmp
adc
xor
mov
mov
cmp
test
cmp
or
pusha
sti
sub
inc
in
push
sbb
push
roll
push
xorb
xor
mov
add
sbb
cmp
lds
mov
mov
mov
aas
and
fstps
push
mov
js
ss
push
fs
jge
inc
pop
les
pusha
xor
xor
out
cmpsl
xlat
fsubs
lea
lds
mov
add
jae
lock
mov
inc
cld
add
xor
dec
push
pop
push
jne
mov
sahf
push
andb
lahf
mov
mov
ss
sahf
popa
dec
sbbb
int
test
test
scas
mov
mov
insb
mov
mov
popa
jbe
jge
call
das
dec
pop
and
sti
in
mov
xchg
out
popa
stos
push
push
outsb
mov
daa
push
out
and
lds
incb
lods
xchg
push
call
adc
sbb
jp
in
xor
enter
lea
cmp
sarl
orb
shl
jecxz
mov
sbb
fisttpl
je
das
mov
das
divb
xlat
in
test
jns
pop
bsf
out
test
push
fwait
ret
or
lahf
mov
scas
je
int
cmp
shr
or
fs
lcall
in
push
add
bt
inc
mov
out
xchg
insb
cmp
xchg
lret
jbe
cmp
pop
sub
and
in
rolb
adc
stos
fs
pop
pop
rclb
in
in
rcrb
cmp
call
jl
fwait
inc
insl
sbb
sub
popf
cmp
inc
xor
add
inc
cmpsb
xor
pop
lock
xchg
xchg
repnz
js
scas
sahf
add
sbb
adc
loope
pop
in
push
adc
stc
mov
std
dec
xchg
cmpsb
lret
lds
cmp
add
lret
fs
mov
mov
shrb
rcr
mov
jnp
jl
inc
ja
mov
sub
in
inc
imul
aas
rclb
cmp
or
jns
cmp
icebp
dec
scas
sub
in
int3
mov
sbb
mov
insb
sbb
add
mov
rcll
fdivrl
sub
mov
inc
jnp
cmp
movaps
jmp
roll
popa
roll
inc
dec
out
mov
je
mov
sub
or
jb
sub
jae
mov
xor
mov
xor
call
xor
test
mov
cli
add
cmp
cmp
jge
jge
mov
imul
pop
sbb
mov
cld
cmp
xchg
aad
insb
pop
or
xchg
xor
mov
or
push
mov
addr16
sar
and
or
jnp
ret
iret
mov
imul
jmp
ja
or
daa
repz
imul
sarl
cmc
insb
ja
cmp
pop
iret
in
clc
and
test
and
mov
stc
clc
mov
les
add
adc
into
daa
fadds
stos
mov
lret
es
call
inc
inc
mov
push
push
sbb
pop
int3
aas
out
fwait
imul
cwtl
sbb
jp
add
pop
loop
out
or
jecxz
lahf
outsb
into
stos
cld
sbb
popa
loope
sbb
mov
mov
loop
lock
jns
sub
or
push
or
stos
movsl
sub
loope
imul
scas
xchg
test
outsb
xor
jae
aad
sti
and
sbb
dec
shrl
inc
mov
stos
push
sti
std
cmp
out
cmp
testl
lret
sbb
xchg
jnp
das
add
ret
mov
inc
fidivs
and
enter
out
scas
int3
push
sub
mov
fnstcw
sbb
lods
jb
push
fwait
or
jge
cmp
or
sub
push
and
insl
or
dec
push
mov
loope
dec
testb
push
sti
cmp
mov
push
lret
xor
scas
scas
lret
sbb
and
adc
les
or
imul
dec
addr16
xchg
movsl
cli
pop
stos
push
mov
or
divps
or
fstpt
into
pop
fwait
daa
sub
cwtl
bound
insb
jg
jmp
push
jmp
inc
stos
dec
notb
mov
adc
loope
add
iret
mov
ret
mov
pop
lahf
fisubs
or
sub
arpl
fdivrs
sbb
leave
add
and
in
inc
je
les
xchg
adc
and
pop
notl
shrl
push
std
out
outsl
in
dec
jmp
add
jge
cmp
addr16
dec
popf
cmp
xchg
pop
jb
inc
hlt
sbb
and
arpl
fs
add
clc
mov
lcall
sbb
addr16
add
lds
shr
insb
mov
ret
into
pop
and
fnstcw
xchg
sub
mov
jno
lock
aad
pop
rcl
cwtl
cli
mov
jp
aas
mov
inc
cmovne
scas
cltd
cmp
inc
in
sub
and
or
cli
pop
sub
jg
pop
rcrb
dec
imul
lods
xchg
xchg
mov
in
pop
addb
mov
xchg
xor
or
xor
sbb
xor
sbb
mov
outsl
or
adc
or
mov
lcall
sub
insl
test
shl
mov
xchg
and
out
xchg
call
mov
inc
gs
imul
stos
filds
sub
cvtpi2ps
shrl
push
es
out
enter
inc
lods
xchg
in
adc
and
cmpsb
or
or
add
jno
pop
insb
sbb
mov
xchg
push
add
cmc
icebp
xchg
stos
sub
xor
xor
imul
mov
add
fstpt
mov
ds
push
dec
sti
enter
lea
out
movsl
or
or
scas
mov
inc
sbb
dec
mov
and
call
mov
je
inc
cmp
cmp
push
out
or
and
jecxz
ret
mov
lahf
shll
lods
jb
imul
out
mov
cld
fdiv
dec
push
push
packssdw
fsubr
push
xchg
jg
das
mov
shrl
ljmp
xchg
int3
into
imul
enter
inc
shlb
xchg
in
je
mov
jno
insl
adc
add
lcall
cwtl
cwtl
arpl
outsl
cmp
adc
lahf
push
ret
lahf
push
and
mul
and
pop
push
jg
fs
lahf
loopne
mov
es
scas
xorl
ljmp
mov
push
cld
aaa
dec
xor
adc
add
xor
sbb
fildl
stos
push
hlt
pusha
cltd
insl
negb
pop
mov
push
adc
ret
xchg
pop
loop
jp
mov
xor
mov
data16
cmpsb
cmp
xor
test
mov
jl
bound
pop
sbb
testl
movsl
pop
xlat
scas
pop
dec
js
add
bound
add
dec
or
lret
xchg
add
mov
fnsave
fimull
jno
or
jne
gs
inc
fs
addl
pop
mov
adc
cltd
lds
testb
es
and
sbb
sarb
sub
jb
stos
sbb
scas
jb
stos
test
xchg
and
sbbb
fildl
fisttps
sahf
add
mov
aad
sub
test
and
stc
rolb
mov
fdiv
imul
sub
jmp
fwait
mov
sbb
xor
xchg
shrl
lret
iret
or
push
dec
or
mov
jnp
lahf
cli
roll
es
outsl
sub
lret
stos
mov
mov
xchg
int3
xchg
jbe
xchg
jp
insl
or
addr16
mov
fmuls
mov
das
xor
dec
popf
mov
mov
int
mov
hlt
std
and
fldenv
jmp
daa
mov
adcl
mov
adc
pushf
push
push
sbb
lds
cmp
push
in
inc
es
inc
popf
cwtl
add
outsb
inc
test
push
test
mov
adc
scas
hlt
loop
lds
repnz
adc
sahf
into
adc
in
loope
mov
xor
add
sahf
mov
cs
orl
sahf
sub
mov
push
outsl
sub
mov
cmp
daa
es
pushf
pop
mov
push
xor
dec
xchg
repnz
into
xchg
jl
inc
cmpb
out
stc
mov
rorb
sub
fs
fs
push
mov
or
jo
repnz
mov
aas
and
pop
pusha
push
sub
push
sbb
add
iret
xor
addl
xchg
and
rcr
jbe
aam
imul
cmc
mov
push
and
adc
jo
ret
push
add
scas
sub
or
add
sbb
cmp
mov
push
push
repnz
jbe
inc
sub
iret
insl
dec
pusha
mov
inc
jb
mov
mov
jne
jne
inc
jne
push
sub
es
cmp
ljmp
imul
push
xchg
outsl
xor
sbb
mov
insl
push
aad
popl
dec
and
jecxz
sbb
lret
fxch
inc
cltd
arpl
xor
cmp
or
inc
add
test
push
mulb
push
sarb
arpl
jecxz
jp
jg
mov
fbld
movsb
loop
cmp
push
ret
stos
into
jecxz
pop
lods
les
lds
xor
lods
xchg
in
sub
pop
mov
and
sub
les
or
cmp
pop
int3
addb
in
mov
adc
xor
push
push
inc
push
sub
icebp
sbb
add
loope
xchg
xchg
pusha
push
jbe
cmp
ret
enter
cmpb
dec
movsb
jb
or
cmp
push
sub
andb
mov
testl
mov
mov
mov
mov
cmp
clc
inc
xor
dec
in
test
mov
ja
aas
popa
stos
movl
and
jg
mov
add
cmp
mov
jbe
mov
movnti
xchg
fnstcw
jbe
stc
lret
cmpl
sub
jne
mov
inc
cmp
xor
pop
mov
push
mov
mov
or
mov
xlat
rcll
jne
outsl
sbb
das
std
push
adc
mov
fs
mov
push
inc
add
lea
push
nop
jle
xor
jns
sbb
dec
xchg
push
out
add
movsb
jge
mov
and
xchg
push
lods
push
adc
aam
dec
pop
xor
and
dec
dec
cmp
xchg
mov
ficoms
add
push
mov
mov
test
stc
mov
out
movsl
pop
inc
repz
int3
xor
out
sub
add
cmp
mov
scas
outsl
les
jns
rclb
adc
and
clc
cmp
aad
mov
and
jle
inc
fs
add
aas
xlat
mov
incb
and
and
jae
cmc
push
outsl
sub
test
cli
icebp
es
sub
aad
add
subl
movnti
mov
movsb
xor
ret
mov
int
pop
mov
negb
cmp
in
addb
mov
mov
and
inc
xchg
or
cltd
sarb
sub
dec
dec
ja
int3
inc
lock
es
dec
pop
popf
js
icebp
ret
gs
push
dec
lock
lcall
mov
add
sbb
push
in
icebp
push
fbld
pop
push
jns
xchg
adcb
out
iret
inc
insl
imul
ds
inc
cmp
jbe
enter
xchg
lret
stc
mov
dec
fcomip
mov
loope
aas
sub
jno
ja
adc
fwait
inc
cmp
inc
pop
call
out
loopne
pushf
push
call
aad
inc
daa
stos
arpl
sub
pop
pop
cmpsb
movsl
shrb
cmp
add
std
test
int
or
loope
pop
pop
dec
insb
and
arpl
push
xor
fstpt
fdivs
add
sbb
sahf
lods
lds
push
and
insb
adc
scas
and
out
stos
xchg
fildl
xchg
adc
push
int
fistpl
gs
jne
stos
pop
and
cmc
das
mov
add
jl
test
movsl
fimull
inc
les
clc
jg
js
mov
jo
test
in
int
imul
shrb
ja
mov
dec
test
sub
add
mov
gs
push
rcr
cmp
out
xor
mov
insl
cmp
sbb
push
iret
enter
push
call
cmp
adc
mov
push
lretw
outsl
retw
aam
sbb
lods
sbb
xor
jne
pop
or
mov
out
pop
xor
adcb
cmp
andb
enter
sbb
arpl
ljmp
push
movsbl
dec
roll
push
xlat
loopne
push
mov
fldl
xchg
aad
ss
pop
xchg
ss
das
push
fdivs
outsb
adc
stc
stc
jecxz
xlat
scas
clc
pop
inc
cmpsb
sbb
adc
movsl
andl
jnp
inc
aam
movsl
xchg
cli
cmp
fsubrp
mov
sti
push
lret
cmc
or
in
or
jo
and
aam
inc
outsl
fbld
push
aaa
mov
ljmp
push
inc
push
negl
add
pop
jbe
shlb
mov
cmp
pop
sbb
push
shlb
addr16
sbb
inc
addr16
stc
enter
lea
imul
mov
rcrl
mov
fisttps
aas
fmuls
or
div
sub
mov
popa
lcall
test
imulb
test
inc
popa
cmc
jp
loopne,pt
fcmove
fnstenv
jle
test
lods
add
add
cmpsb
xchg
push
or
cmc
or
insl
dec
in
jecxz
add
mov
ret
mov
jno
bnd
mov
push
sbb
mov
clc
loopne
dec
mov
jge
nop
aas
aaa
push
pop
pop
popf
pop
pop
dec
cmc
ss
in
das
push
imul
mov
lahf
jg
or
incb
sbb
das
lea
push
pop
mov
das
ss
orb
xchg
aam
decl
insb
mov
and
jb
lods
bound
push
inc
fisubrs
or
jecxz
cltd
and
int
iret
fisubrs
pop
mov
mov
xchg
ret
lea
mov
fs
arpl
inc
mov
jle
fucomi
mov
icebp
dec
in
mov
jl
pop
fstp
stc
mov
jg
int3
jns
dec
out
mov
andb
out
jge
test
pop
adc
or
push
dec
mov
mov
mov
lret
inc
movsl
jnp
mov
sub
mov
and
popf
sbb
cmpsb
sbb
into
or
jl
mov
imul
cld
lds
mov
into
bound
lret
idivl
outsl
fsub
push
push
pusha
in
sbb
add
jg
sarl
mov
inc
mov
out
cmp
xor
test
and
aad
fcomps
ss
out
mov
add
mov
cmc
xor
push
push
test
cmc
mov
mov
pop
das
js
fwait
arpl
test
clc
adc
sbb
xor
mov
ja
das
sub
pop
ds
mov
popf
jns
mov
lcall
add
xor
cmp
clc
lcall
push
push
call
dec
fnstsw
dec
mov
push
aas
bound
cmpl
jmp
push
testl
adc
mov
add
nop
cmp
sbb
mov
aas
xchg
js
push
cld
test
cmp
dec
cld
sbb
stos
rorl
mov
xor
out
cmpsb
aam
xor
aaa
pop
shlb
push
jecxz
dec
pusha
or
pop
add
pop
iret
push
aaa
adc
add
imul
lcall
dec
out
jbe
iret
push
add
push
lcall
lock
push
popf
out
roll
or
dec
movsl
mov
clc
roll
mov
add
pusha
leave
jbe
add
pop
mov
xor
inc
popa
pushl
ja
addr16
gs
add
shll
nop
repz
lock
ret
fidivrl
roll
dec
xor
and
ss
mov
sub
adc
cmp
std
out
test
add
push
xchg
pop
lods
cmpsl
mov
sbb
mov
ret
stos
jge
std
iret
mov
cmp
sbb
mov
ret
repz
nop
mov
ja
jne
scas
daa
mov
cmc
insb
arpl
in
andl
das
enter
les
dec
mov
cmp
add
or
sub
insl
mov
pop
fistps
pusha
iret
sti
sub
mov
pop
pushf
push
push
and
pop
sub
mov
insl
shlb
mov
sbb
mov
sbb
leave
insb
clc
sti
push
movsb
and
xchg
enter
ficoms
fdivp
nopl
cs
mov
cld
lds
lods
addr16
add
push
mov
lret
addr16
arpl
int
push
adc
mov
mov
in
bound
mov
jg
xor
out
sarb
fldl
dec
cltd
jb
out
dec
repz
stos
or
stos
adc
dec
leave
cmpb
or
cli
jns
pop
aaa
sub
adc
icebp
ret
jg
push
popf
mov
jle
in
mov
fadd
mov
fwait
scas
sub
jmp
sbb
ljmp
das
out
xorb
push
stos
pop
inc
scas
out
mov
cmp
icebp
push
or
filds
ss
into
mov
fwait
dec
cmp
ljmp
inc
mov
mov
pop
xchg
idivl
ds
jne
sub
dec
das
adc
ja
dec
out
push
pop
or
mov
add
xchg
fdivs
add
std
shlb
in
data16
jne
aam
or
ret
mov
in
mov
hlt
das
sbb
cmp
ficompl
mov
mov
add
repnz
pop
xchg
leave
sub
cmp
ljmp
das
incl
mov
pop
and
test
out
pop
cltd
out
es
sbb
sub
ficompl
test
mov
arpl
jmp
cmp
lds
or
roll
iret
adc
sbb
adc
ljmp
add
pushf
inc
dec
or
and
and
xchg
mov
jmp
negl
out
bound
cmp
insl
loope
dec
pushf
jl,pn
push
jae
add
or
test
das
data16
and
orl
jo
mov
lret
adc
jno
loopne
pop
dec
insl
cmc
lock
nop
stos
mov
push
stc
out
sbb
mov
pop
xchg
cwtl
insl
test
mov
or
adc
cmpsl
jle
out
out
insb
ss
push
movsl
mov
sbb
dec
push
sbb
mov
jmp
mov
out
adc
arpl
cmc
inc
add
js
mov
shll
nop
xor
pop
insb
stos
or
insl
pop
adc
mov
into
decb
icebp
pop
and
or
and
cmpsb
pop
sub
lock
push
cmpsl
xor
sub
mov
andl
sub
lret
hlt
mov
add
mov
jp
mov
or
pop
lret
cmc
xlat
fsub
repnz
sbb
sbb
inc
mov
out
mov
jo
in
mov
jl
jo
shrb
lret
sub
sbb
dec
hlt
xchg
inc
pop
jns
lahf
push
test
add
mulb
movsb
mov
jmp
mov
int
and
add
jmp
test
mov
loopne
xlat
cmp
cmc
enter
pop
outsb
push
mov
nop
and
in
nop
lock
stos
das
mov
out
adc
inc
pop
cmc
in
enter
ret
xor
and
dec
movsl
mov
xchg
rol
fistl
pop
lds
cmp
cmp
stos
xlat
adc
sbb
sbb
push
pop
test
or
dec
leave
stc
cmpsb
cmpsl
add
stc
add
imul
xchg
sub
adc
ror
lret
jecxz
add
cltd
inc
dec
jp
cwtl
int3
xchg
in
and
mov
hlt
fstpl
pop
push
dec
pop
xchg
adc
ja
or
rcrb
cmpsb
repnz
jb
mov
cmp
test
jne
hlt
push
jle
les
adc
sbb
das
arpl
cli
stc
test
cmp
mov
lret
sub
push
push
mov
rolb
rcrl
in
sbb
jno
dec
inc
cwtl
ret
and
or
jns
scas
scas
popa
je
lods
pop
insl
ja
js
jg
gs
daa
and
mov
mov
jb
xchg
out
jae
jae
int
std
outsl
mov
jmp
xlat
push
icebp
inc
xor
addr16
lods
adc
inc
nop
add
lcall
or
add
mov
mov
inc
sub
or
mov
or
inc
push
int
and
inc
inc
add
push
out
sub
xlat
fstps
ret
icebp
mov
xchg
not
test
sub
xor
inc
mov
fidivl
or
and
mov
das
mov
inc
dec
pusha
pop
lahf
mov
js
aaa
xchg
pop
rorb
out
pop
insb
or
decb
mov
pop
and
mov
loop
sbb
adcl
out
stc
and
cmp
bound
inc
shlb
pop
xor
mov
mov
mov
xor
sub
imul
aas
lods
iret
aad
pop
in
fucomp
mov
in
orb
sub
jo
dec
movsl
pushf
sbb
jne
icebp
mov
xchg
addr16
sub
insb
inc
mov
pushf
adc
xor
ret
push
mov
aam
test
in
xchg
add
jge
aam
mov
xchg
ret
add
jne
pop
dec
mov
xor
xchg
sbb
pusha
sbb
iret
lock
fdivs
mov
xor
orl
adc
pop
dec
sbb
pop
in
jle
sbb
sahf
sub
inc
jmp
add
mov
inc
adc
loopne
inc
dec
sub
mov
lret
call
fld
scas
fs
cmp
push
fcoms
fsubrp
pop
xchg
js
cmp
sbb
icebp
mov
cmp
jbe
cltd
xchg
jl
adc
repz
jb
mov
pusha
pusha
inc
mov
cmp
jne
int3
push
and
pop
stc
inc
insb
pop
int
xchg
mov
or
outsl
cltd
cmp
rcpps
into
sub
and
sti
fdivs
imul
loopne
adc
out
clc
adc
or
inc
test
out
push
les
jg
xchg
push
les
fcmovu
or
mov
popa
std
inc
imul
pop
pop
sbb
lret
push
xchg
lcall
xlat
lods
rclb
push
aas
cmp
ja
jecxz
and
and
jns
pop
add
push
adc
popa
push
sbb
in
repz
dec
jmp
cld
xchg
push
lea
gs
call
fwait
jle
pop
jmp
arpl
data16
mov
adc
push
mov
cmp
and
dec
loopne
jmp
js
loopne
push
insl
sub
push
inc
lret
scas
jmp
lock
icebp
inc
rol
add
mov
xchg
push
hlt
pop
es
mov
sub
add
sbb
andl
mov
cltd
jl
adc
mov
xor
sub
pop
clc
es
dec
sbb
sbb
mov
or
cmc
xor
xor
and
adcl
jecxz
jnp
jge
add
sbb
cmp
pop
fdivrl
in
lcall
call
and
stos
sub
ret
inc
xor
mov
imul
push
movsb
pop
xchg
sub
and
pusha
jo
push
dec
stos
push
aas
jb
xchg
pop
mov
or
push
inc
stc
repnz
sub
lahf
pop
fbstp
pop
dec
cld
sub
push
leave
std
es
xchg
adc
lds
push
cmpsb
ljmp
sbb
mov
inc
lock
in
stc
cltd
sahf
pop
mov
inc
xor
fwait
lds
iret
call
test
dec
add
add
xchg
lods
hlt
imul
jne
adc
mov
inc
and
ficomps
push
mov
outsl
lret
xchg
stos
xor
repz
mov
das
adc
rcr
xchg
add
and
fadds
mov
decl
mov
cmpsl
xor
cmc
or
jb
in
sbb
xchg
xor
jg
les
inc
and
mov
nop
xchg
push
xchg
add
rcrl
xor
jge
popa
mov
xor
bswap
push
jbe
push
inc
add
and
cmpsl
aaa
outsl
xor
adc
sub
nop
push
fldt
push
and
dec
xchg
cmp
ret
pop
fs
aam
std
sub
cwtl
je
out
jae
mov
inc
loope
push
daa
leave
mov
adc
mov
int3
xchg
mov
mov
mov
lret
jnp
adc
xlat
mov
pop
mov
out
aad
mov
dec
adc
lock
xchg
adc
inc
fmuls
xchg
mov
ljmp
jo
ret
inc
jmp
das
pop
mov
and
shll
or
push
push
adc
sbb
push
jmp
out
jae
movsb
inc
dec
mov
and
pop
jb
idivl
cmp
jmp
adc
call
push
rclb
and
xchg
lods
and
or
ret
aas
sar
out
stos
repz
imul
cltd
add
xchg
jns
and
xchg
rolb
femms
mov
xchg
push
scas
mov
mov
testb
imul
sbb
pop
insb
push
insl
test
cmp
push
jb
sub
xor
ljmp
sbb
and
in
mov
pop
and
jno
iret
pop
pop
jno
repz
sub
rclb
inc
fisttpll
mov
or
pop
adc
or
stos
cmc
dec
cmc
pop
pop
dec
orb
out
inc
adc
lret
jns
jl
nop
gs
cs
cld
xchg
daa
test
fisttpl
jbe
mov
mov
add
xchg
in
in
or
jp
cmpsl
int3
inc
xchg
xor
scas
out
lret
jo
mov
pop
sub
jp
addr16
lods
xor
push
insb
mov
dec
add
mov
dec
dec
stos
lea
and
pop
lret
sub
ret
xchg
aam
xchg
test
mov
jg
popf
sbb
push
xor
jge
xchg
adc
arpl
lods
enter
out
out
xor
mov
mov
mov
loopne
dec
mov
push
iret
lea
test
fcmovnbe
es
add
outsb
pop
push
push
into
xchg
cli
push
jae
or
inc
or
mov
push
mov
cmpsb
test
cld
push
fwait
mov
iret
js
cwtl
push
add
adc
adc
lcall
dec
push
fbstp
pop
std
in
loope
lret
subb
addr16
les
xchg
jne
popf
stos
jno
fldl
mov
push
mov
iret
xchg
call
rorb
js
mov
mov
ja
add
xchg
lods
mov
xor
dec
inc
out
loope
dec
cmp
cltd
fsubs
sbb
fistps
push
jne
dec
hlt
jge
stos
mov
xchg
pop
pop
and
and
les
rcrl
lret
mov
nopl
add
mov
outsl
mov
sahf
addr16
jno
inc
adc
sbb
xchg
add
jno
in
test
jo
pop
insl
xchg
adc
pop
sbb
repnz
das
lcall
mov
jnp
fbstp
mov
out
inc
lcall
pop
scas
js
or
mov
stos
popa
adc
xchg
dec
push
fistpll
fbld
fadd
inc
mov
stos
mov
xlat
or
lahf
mov
push
mov
sub
rorb
add
or
cld
push
mov
jl
adc
idiv
inc
pop
push
or
cmp
push
or
out
jmp
jno
adc
dec
cli
and
bound
jae
popf
push
jge
pushl
enter
ret
shrl
jle
mov
popa
xor
add
insb
adc
sbbb
inc
sbb
int
sbbb
xchg
shl
loopne
push
popa
pusha
scas
add
mov
arpl
pop
cs
or
and
pop
pop
dec
mov
xchg
jecxz
jbe
push
pop
xchg
and
or
hlt
testl
inc
mov
jbe
aad
ret
jmp
sbb
mov
mov
sbb
add
cltd
fs
adc
pop
std
sahf
mov
movsl
and
dec
add
dec
shll
fs
mov
lods
les
jne
jnp
fidivrs
mov
adc
ja
mov
dec
imul
inc
outsb
xor
push
in
pavgw
not
movsb
aad
mov
int3
js
inc
and
cmpsl
pushl
aam
out
xor
icebp
jmp
outsb
notb
xchg
in
aad
mov
repz
push
add
out
ds
and
lds
sub
enter
mov
pop
bound
shl
sub
jmp
ret
nop
stos
cmpsl
mov
jb
mov
inc
pusha
popa
pmulhw
push
jp
repz
std
in
stc
mov
in
stos
sahf
xchg
fidivl
pusha
test
cmp
imul
das
inc
cmp
adc
xchg
fs
adc
loope
push
fidivl
repnz
int3
push
shl
int
nop
mov
das
nop
lods
pop
cmc
out
xchg
mov
dec
sbb
imul
jl
push
cmp
inc
xor
mov
pop
popf
xchg
movsb
xlat
xor
xchg
sub
push
or
pop
fimuls
repnz
jb
dec
roll
lds
adc
daa
stc
push
sbb
or
inc
pushf
aas
mov
dec
dec
mov
sti
inc
enter
cltd
xlat
es
mov
int3
or
gs
xor
add
out
and
and
mov
out
sahf
cmp
xchg
frstor
xchg
dec
fmull
in
xor
jo
test
stos
sbb
adc
xchg
mov
loopne
js
sbbb
push
popf
sti
xchg
imul
call
push
sbb
cs
mov
int3
push
cmp
mov
mov
out
mov
jbe
mov
cmpsb
ljmp
fcomi
adc
lahf
es
sbb
mov
jmp
sahf
add
push
into
pop
aad
xlat
and
or
xchg
push
outsl
and
adc
imul
mov
inc
repz
add
shrb
mov
adc
jno
lea
fcoml
and
imul
dec
outsb
xor
cld
enter
push
push
push
jmp
pushf
rep
inc
xchg
xchg
push
fildll
jbe
cmp
call
jo
das
dec
jo
xor
std
bswap
dec
mov
cmp
jmp
sub
pop
into
repnz
call
inc
mov
mov
jne
insb
jbe
test
dec
push
ss
dec
leave
add
idivb
addr16
pop
sahf
push
xor
mov
inc
popf
mov
xchg
sbb
rcll
jo
mov
push
mov
cld
cli
mov
imul
cwtl
fiaddl
out
loopne
dec
lret
call
cmp
mov
cmc
push
and
xor
mov
mov
fstps
shl
imul
jns
pop
outsb
dec
xlat
jb
out
add
mulb
cmpsl
fwait
aam
roll
popa
xor
xchg
xor
mov
cmp
mov
rcll
mov
gs
std
repz
arpl
mov
mov
sti
inc
decl
je
cmp
cmp
jle
inc
sub
xchg
ficompl
insb
insl
adc
xor
and
mov
sbb
rorb
int
sbb
cmpsl
push
or
mov
std
add
cltd
leave
jb
orb
inc
sbbl
stos
sbb
or
push
test
movsl
pop
sti
inc
adc
pop
and
or
or
icebp
cmp
pop
in
adc
dec
pop
xchg
pop
mov
sbb
in
or
daa
test
xor
xor
cltd
dec
rorl
lcall
pusha
sbb
fsubr
push
popf
jae
and
xor
push
test
subb
inc
bound
mov
mov
mov
or
xor
mov
mov
pushf
pop
jle
lea
std
sub
xchg
or
push
and
enter
add
imul
push
cltd
cmc
pop
ljmp
aas
or
xchg
xchg
cld
sub
inc
jo
movsb
sub
aas
fsubrs
imul
add
dec
ja
fldenv
mov
sbb
into
ficoml
aad
mov
dec
mov
sar
cmp
pop
addr16
dec
dec
jno
pop
add
sub
in
xchg
ss
sti
and
sbb
movsb
cmp
or
sbb
jo
negb
inc
out
lahf
es
dec
and
scas
ret
insl
movsb
mov
ja
cmp
mov
popa
lods
std
lock
loope
mov
negb
xor
push
insb
imulb
lods
sbb
jbe
adcb
or
faddp
xor
push
fwait
out
ljmp
jns
mov
gs
cli
sahf
mov
iret
mov
stos
mov
push
aam
dec
sub
loopne
cmpsb
push
xchg
push
push
sbb
mov
jmp
inc
popa
ss
decb
sub
stos
int3
dec
push
inc
test
shll
or
loope
dec
sub
out
out
int
adc
push
popa
iret
divb
aad
fwait
mov
test
jmp
add
lret
add
inc
or
ljmp
and
xchg
dec
jo
fucom
jo
push
adc
jne
jne
fdivrl
outsl
pop
nop
mov
push
addr16
cmp
cli
sahf
add
cmovae
out
pushl
and
aaa
repz
xor
ret
mov
pop
jecxz
pop
cwtl
dec
mov
rclb
dec
lret
lcall
shrl
push
cs
add
or
push
scas
add
test
sbb
jecxz
jle
mov
cs
sbb
cmp
imul
pop
sub
arpl
insl
enter
add
jns
cwtl
add
pop
and
xor
xor
adc
adc
adc
lret
adc
sbb
inc
rorb
insl
aaa
pop
fs
mov
mov
pop
cmp
and
cmp
dec
push
dec
cmpsl
js
movsl
jmp
fisubrs
xchg
mov
ffree
pop
inc
pop
daa
out
xor
leave
jno
sbb
mov
pop
das
cmpsl
mov
repz
mov
aad
icebp
inc
int
cli
mov
xchg
jae
repz
or
push
imul
scas
popa
pushf
stos
pop
jmp
or
imul
fs
or
xor
jmp
rolb
mov
int3
mov
lahf
fdivrl
movsb
cmp
jp
mov
mov
mov
into
movsb
sub
sub
xchg
cmp
jnp
pop
push
mov
jae
pop
mov
pop
mov
lahf
mov
iret
mov
sbb
aaa
fld
cmp
and
or
lods
lea
sbb
mov
stc
nop
sub
fs
popf
xchg
pop
add
xchg
fcmove
js
and
mov
sti
or
pop
lret
mov
xor
andb
sub
call
xor
out
xchg
hlt
loopne
mov
xor
jns
lret
cld
aas
jo
sub
dec
mov
sbb
sbb
filds
pop
jle
jbe
fisubs
js
push
icebp
movsb
inc
ljmp
cld
jne
lret
jne
shrl
push
pop
xchg
mov
sbb
add
mov
mov
sahf
movsl
adc
add
mov
in
or
int3
jecxz
pop
bound
jmp
and
outsb
and
or
jmp
jmp
jno
xchg
and
outsl
scas
xchg
xor
and
subl
pop
outsl
addb
and
imul
cmp
movb
aas
xchg
ret
lock
add
dec
cmpsl
cmp
inc
test
mov
mov
inc
fldl
add
dec
pop
mov
sti
sbb
xchg
jb
call
ja
into
adc
sub
inc
xor
sahf
inc
xchg
jae
xchg
sub
shrl
xchg
aad
inc
aam
ss
mov
or
inc
fstpl
repz
sti
fs
iret
lret
sbb
jo
xchg
fdivs
je
scas
notb
jne
add
sub
jne
lock
jb
mov
push
fistpll
jg
int
outsl
bound
adc
jo
adc
dec
mov
scas
mov
and
xor
pop
fisubl
popf
fldt
fwait
jl
lahf
sbb
out
daa
sub
mov
lret
inc
push
aaa
adc
es
in
fs
jge
mov
roll
outsb
or
leave
xor
imul
jp
js
adc
add
dec
fstpt
cmp
cmpsl
mov
insb
shrl
inc
stos
push
daa
and
and
data16
sbbb
nop
ret
clc
loopne
in
mov
into
test
sti
call
cmp
adc
sbb
add
inc
jg
xchg
in
lret
dec
push
iret
jo
shl
test
push
leave
xchg
out
mov
push
inc
mov
jae
je
scas
xchg
mov
dec
mov
notb
sub
insb
add
mov
inc
cmp
push
testb
inc
pop
add
fnstenv
lods
pop
xor
dec
pop
imul
xor
aad
scas
sbb
mov
sub
loope
or
inc
dec
sbb
stos
push
mov
inc
sub
cmp
sub
push
pop
sub
lods
ficoml
fmull
dec
or
dec
inc
std
std
cmp
mulb
ficompl
test
add
push
and
clc
jge
mov
jl
jg
push
and
fdiv
call
pop
fldt
into
xlat
loopne,pt
stc
fs
mov
cld
dec
in
iret
mov
mov
mov
add
xchg
imul
cmp
fistps
jnp
sbb
jno
mov
sub
movsl
mov
mov
fldl
xor
or
cmpsl
pop
pop
dec
ret
adc
sub
mov
mov
fxch
jno
cmp
mov
inc
mov
inc
jp
cli
movsb
iret
insl
mov
outsb
test
aas
hlt
mov
mov
cmpsb
nop
addr16
push
pop
mov
call
inc
stc
mov
or
push
out
cmp
xchg
es
cwtl
jns
lock
stc
inc
mov
loop
jbe
add
movsb
loope
out
ds
inc
jl
cld
mov
xchg
sarb
insb
fdivrp
xchg
mov
pop
divl
out
xor
clc
xor
mov
mov
sbb
leave
cli
fisubrs
jo
fsts
hlt
add
mov
fdivrp
pop
shlb
sti
push
fs
xchg
inc
mov
fadd
or
rcrl
push
push
jo
imulb
idivl
pop
mov
xchg
and
dec
pop
int
push
jge
add
cmc
jge
pop
push
and
es
jne
test
dec
jb
xchg
xor
cs
shrb
xchg
jecxz
push
pop
push
imul
in
and
imul
push
cmp
aam
cltd
pusha
jmp
mov
pop
pusha
and
pop
vpslld
call
xchg
insb
jne
push
fsts
std
adc
dec
cmpsb
add
lds
jno
daa
or
and
xor
xlat
loopne
outsb
sub
adc
loope
dec
lds
jne
ret
rorl
push
cmp
rcrl
insl
cmp
stos
xlat
push
add
in
xchg
sub
push
fidivrs
scas
mov
pop
mov
imul
mov
repz
outsb
arpl
pop
addb
add
sub
mov
testb
dec
pushl
leave
inc
loop
xor
sbb
cmp
fsubs
fwait
ljmp
fcmovnu
xor
decl
sbb
ja
sahf
pop
mov
lcall
add
xor
mov
inc
lret
mov
jmp
dec
mov
aam
pop
icebp
mov
pop
movsl
pusha
imul
test
outsb
je
icebp
xchg
das
lods
pop
inc
pop
lea
mov
test
jb
repz
addr16
std
movsb
movsb
icebp
pop
stos
inc
and
cwtl
and
mov
filds
sub
in
ds
dec
es
lret
add
inc
adc
shlb
and
xor
ds
sarb
fisubrl
movb
scas
push
cmp
adc
xchg
hlt
cli
and
add
sub
xchg
psubd
adc
xor
mov
mov
pop
movsl
adc
test
push
in
adc
rorl
push
cmp
xor
and
mov
pop
lods
roll
push
pop
pop
sub
mov
repnz
pop
hlt
cs
push
ret
sti
cmp
es
in
xchg
sbb
pop
dec
mov
jmp
mov
dec
ss
lds
bswap
pop
cmp
aam
push
cmp
mov
dec
mov
mov
testb
mov
mov
add
push
sbb
enter
fbstp
mov
out
xchg
adc
int3
adc
arpl
fisttps
sbb
adc
pop
cld
xchg
push
clc
and
sub
add
dec
cmc
or
inc
mov
aaa
adc
dec
cld
adc
add
mov
cld
lds
lock
jb
je
ret
pop
xchg
sub
mov
jl
ss
adc
insl
lcall
fimuls
test
jb
lock
lahf
mov
in
sbb
iret
call
out
xchg
daa
sbb
jae
jno
or
mov
ss
aam
sub
mov
sub
and
lods
mov
adc
xor
cmp
aad
imul
push
push
cmpsl
pop
xorb
and
lds
jns
jmp
dec
movsl
mov
sti
lret
icebp
xchg
sbb
jl
xchg
daa
push
pop
push
fdivrp
mov
jle
mulb
dec
add
and
cld
or
jns
pop
mov
je
imul
sub
clc
movsb
outsl
mov
stos
mov
arpl
xchg
sahf
xchg
cmp
sbb
cmp
in
cs
fs
mov
mov
fwait
ja
scas
faddl
add
push
repz
filds
sub
repz
cmp
adc
mov
icebp
push
stos
mov
adc
add
or
scas
in
dec
push
inc
or
fiaddl
cs
sbbb
fbstp
add
int3
enter
lcall
jno
movsl
loop
dec
fidivs
mov
adc
mov
jl
xor
aad
arpl
les
mov
lods
scas
mov
jno
imul
dec
mov
xorl
daa
jl
outsb
inc
hlt
shl
jle
lcall
push
mov
and
pop
cmp
mov
jge
push
notb
push
or
jns
jmp
jmp
in
daa
test
add
jge
pushf
sbb
inc
or
popf
inc
inc
xchg
aad
clc
divb
adc
xor
inc
xor
sub
push
insb
stos
cld
xor
stos
mov
call
in
mov
pop
aam
jno
xchg
sahf
jae
or
dec
or
in
adc
pop
insb
cmpl
mov
addr16
or
scas
stc
inc
in
pop
cld
jns
ljmp
push
mov
inc
jne
xchg
inc
addr16
and
cmp
add
inc
sbb
iret
insb
dec
pop
jle
xchg
out
lret
rcrb
scas
fisubl
jo
or
stos
xchg
or
push
adc
ret
hlt
out
ret
out
add
add
andb
add
orl
loope
rcll
dec
inc
adc
dec
jg
push
daa
lret
adc
loopne
es
add
shlb
jmp
sub
push
sbb
fsubrl
jnp
jae
test
enter
push
inc
shr
push
pusha
rcll
fsubl
sbb
mov
jle
sbbb
rcll
cmovg
push
bound
scas
repz
xchg
fs
jae
mov
repz
pusha
mov
push
cmpsl
loopne
popa
add
cmp
stc
aas
in
push
or
add
andl
jmp
andb
and
xor
pop
add
out
or
push
ss
xchg
sbb
in
push
je
or
mov
jnp
dec
xchg
xor
fdivl
pop
pop
movsl
and
ljmp
lea
test
pop
sub
in
ljmp
adc
js
sub
xor
mov
shr
or
jg
jo
add
and
fcmovne
jg
imulb
mov
gs
lock
lock
push
pushl
mov
loopne
daa
cmc
movsb
jge
pushl
cmp
add
das
jle
outsl
movsb
aas
dec
in
dec
fldenv
inc
adc
imul
cs
loope
mov
testl
scas
test
and
enter
rclb
cmpsb
inc
in
outsb
loop
pop
lahf
addb
icebp
sahf
jg
pushf
or
or
inc
out
dec
fs
mov
sbb
je,pn
daa
xchg
fstl
popf
shlb
xchg
sbb
daa
div
mov
sahf
bound
pushf
sbb
push
pop
adc
pop
mov
sub
or
in
dec
sarb
aam
iret
cs
cmp
imul
cltd
mov
jb
js
addr16
push
dec
mov
cmp
repz
and
or
int3
int3
cmp
and
movzbl
xchg
jl
mov
xchg
xor
es
cwtl
mov
frstor
aaa
out
xor
push
and
dec
stc
cmpsl
fsubrs
inc
pop
arpl
inc
pop
in
jne
movl
jecxz
xchg
scas
in
std
or
cmpsl
jnp
and
add
das
out
ja
xor
scas
dec
pusha
fsubrl
mov
mov
jnp
les
scas
mov
sbb
movhlps
pop
into
aaa
adc
stos
insl
stc
mov
inc
scas
dec
xchg
and
cmc
adc
or
mov
repz
cmc
bnd
mov
adc
jl
and
inc
xchg
fldenv
pop
xchg
es
hlt
add
xor
mov
and
lret
mov
jle
cwtl
in
aas
pop
or
and
sub
ja
loope
aaa
lods
lods
sbb
je
xchg
pop
aam
sti
sqrtps
popa
inc
jns
int
in
push
adc
sub
stos
test
or
mov
mov
rorl
int3
std
arpl
scas
imul
loopne
fsts
cmp
adc
mov
jmp
iret
mov
lea
pop
lahf
cmp
popa
fs
sub
lods
push
fistpll
jle
jns
inc
mov
or
shrb
push
xlat
je
movsb
jp
insb
inc
mov
ljmp
xor
out
or
jle
daa
push
mov
loopne
fisttps
inc
sbb
lds
mov
aad
inc
mov
out
xchg
or
pop
jno
xor
cld
filds
pushl
push
mov
cmp
mov
sbb
sub
test
jle
dec
mov
cmpl
sbb
mov
aaa
sbb
lcall
and
inc
push
nop
xchg
sbb
jg
call
push
adc
mov
mov
mov
insl
sub
call
mov
dec
loope
sbb
jae
je
sub
shlb
ljmp
inc
mov
cmpsl
gs
and
xchg
nop
lcall
sahf
mov
repz
sub
jp
jle
jns
jge
jae
stos
mov
mov
and
cs
push
popa
out
test
shl
mov
ret
loopne
es
shl
cltd
inc
jne
lods
loope
das
jno
fisttps
add
push
jg
lahf
fs
fiadds
adc
popa
jg
cwtl
and
dec
in
adc
pop
loope
dec
sbb
pop
push
cld
push
loopne
pop
aam
dec
cmp
mov
je
mov
popa
fcomps
sbb
sbbl
push
je
jno
sbbb
lock
mov
and
lock
dec
pop
dec
fsubr
in
nop
mov
mov
adc
adc
and
aas
out
jl
lock
ja
dec
and
pop
in
push
lcall
sub
aam
sub
push
sbb
mov
inc
push
jecxz
aad
mov
in
cwtl
addl
mov
jbe
or
lds
mov
cltd
gs
lods
sub
jne
xchg
sub
pop
loope
cmc
jb
lock
loopne
out
mov
mov
mov
lret
pop
add
pop
add
loopne
loope
xchg
lret
shll
rcrl
lea
sub
mov
imul
test
push
or
mov
bound
xchg
bound
mov
pop
adcb
packsswb
or
loopne
sub
test
repnz
and
imul
fsubl
xchg
add
jnp
dec
lret
mov
pusha
cmpsb
sub
adc
jmp
add
into
push
dec
xor
scas
in
adc
jl
cmp
xchg
or
sahf
and
sahf
push
adc
int
jp
xchg
stos
rcl
lods
adc
pop
and
push
pushf
insl
mov
ss
xor
cmp
sbb
mov
lcall
mov
out
add
movsl
insb
leave
bound
and
or
xchg
sub
or
mov
sbb
aam
jmp
sbb
ss
add
fs
jne
mov
mov
insb
xchg
mov
jo
add
ss
cmc
cltd
movsb
inc
inc
inc
hlt
das
lods
xchg
xor
jmp
add
adc
fwait
movsl
inc
xor
mov
ljmp
cmp
mov
jmp
fwait
in
imul
or
js
adc
add
adc
jno
jecxz
push
fwait
icebp
int
jmp
int
je
jae
call
pop
movsb
jge
bound
cld
sub
adc
jg
andb
and
cs
fisttps
and
sti
and
leave
repnz
lahf
adcl
jg
lods
jle
mov
shrl
scas
cmp
int
pop
nop
cmp
in
ss
inc
cmp
xorb
mov
jp
sbb
inc
inc
das
inc
sbb
hlt
xchg
or
in
or
test
insb
mov
scas
jnp
mov
inc
rol
outsb
inc
adc
dec
push
scas
and
lea
pop
popa
call
mov
outsb
sbb
sbb
adc
cmp
into
test
inc
in
dec
xchg
xor
js
lret
jecxz
sbb
mov
stc
cs
pop
cmc
xchg
cmpsl
test
out
fdivrs
and
js
or
sarl
and
adc
jbe
aam
loope
and
inc
imul
jbe
mov
dec
xor
push
fisttpll
mov
fnstsw
dec
or
in
adc
mov
sbb
inc
movl
pop
mov
loopne
sub
repnz
mov
inc
sub
xchg
xor
mov
xchg
push
push
and
push
gs
xor
repz
sbb
add
mov
outsl
das
iret
push
xchg
mov
cmpl
sub
jge
std
stos
cmp
pushl
stc
cmp
cmp
jge
test
orl
stos
ljmp
mov
int3
mov
jle
mov
mov
sbb
cli
inc
sbb
mov
dec
aaa
jp
and
pop
xor
mov
adc
mov
in
stos
pop
mov
arpl
shrb
jnp
push
sbb
dec
push
dec
repnz
outsl
sub
add
add
cmp
fwait
shrl
xchg
xor
nop
sub
xchg
out
aaa
pop
push
jp
rorl
pop
loope
popf
mov
cmp
sbb
testb
hlt
inc
sbb
divl
stos
test
sahf
jmp
pop
in
cwtl
dec
sarb
xchg
add
xchg
push
pop
out
repz
rolb
popf
jbe
xchg
hlt
fwait
imul
sbb
or
or
sbb
xchg
fs
inc
pop
mov
and
add
cmp
sub
call
aam
add
stos
cmpb
inc
add
pushf
inc
jle
cmp
clc
pop
pop
outsl
rclb
in
pusha
sub
scas
dec
lret
insl
in
cltd
mulb
xor
enter
cltd
pop
fstpt
movsb
loopne
loopne
inc
arpl
jne
ds
sub
aaa
imul
adc
sub
pop
cld
lods
out
mov
lcall
push
lahf
lea
or
push
ret
ja
jne
fs
outsl
rcll
cltd
pusha
dec
in
xor
adc
add
push
sub
inc
lock
mov
mov
es
push
mov
add
push
pop
les
incl
jb
add
add
das
lret
pop
xchg
insb
and
int
and
and
mov
cmp
loope
inc
test
pop
mov
xor
push
ficoms
mov
and
faddp
pop
sbb
test
pop
dec
popa
dec
addl
push
fildll
cmp
insl
fninit
jmp
push
xchg
sub
cli
jle
sbb
je
cmp
dec
in
mov
sub
and
ja
imul
out
pop
insl
inc
popa
mov
jg
xchg
arpl
mov
pusha
cli
test
inc
xrelease
cmp
sbb
imul
repz
lret
mov
fnstcw
push
dec
movsl
xor
inc
cltd
mov
pop
pusha
dec
jae
dec
repnz
cmpsb
jg
mov
mov
fwait
es
sub
lahf
xor
movsl
stc
xor
cmp
lods
jle
mov
fimull
push
xor
arpl
call
and
shlb
or
mov
lret
test
das
data16
shll
cltd
pusha
cmp
popf
cwtl
push
popf
icebp
cmc
sbb
pop
test
xor
cmp
fwait
iret
adc
cmp
sub
mov
sub
in
push
cmp
pop
pushf
sub
pusha
daa
jbe
lods
and
pop
inc
lahf
adc
dec
pop
mov
push
push
or
jno
addb
push
xchg
cmp
jge
mov
mov
sub
int3
mov
incl
pop
lret
out
test
or
cs
and
cwtl
cmp
and
mov
xor
in
xchg
jo
stc
addb
test
in
add
xor
push
mov
push
popa
outsl
fstpl
out
leave
ret
push
push
mov
sti
add
or
sub
test
mov
cmp
mov
add
dec
cltd
jae
scas
arpl
mov
adc
mov
mov
imul
xor
popf
mov
jge
fwait
add
dec
sbb
repnz
xchg
pop
xor
retw
mov
into
sub
das
cmp
and
and
mov
jno
add
inc
dec
pop
fsubrl
addr16
cmp
push
stc
es
adc
xchg
test
lret
push
and
test
jo
xchg
cmp
jns
xchg
imul
inc
sbb
insb
jg
push
jg
push
dec
adc
scas
test
in
lds
mov
add
adc
xchg
iret
jmp
loopne
das
mov
xchg
adc
adc
rcl
sub
and
xor
dec
dec
lcall
jbe
mov
cmp
in
aam
insb
das
xchg
mov
xchg
ja
dec
mov
fdivr
cmp
xor
push
or
loope
fcoml
mov
rol
aam
out
fdivs
je
mov
mov
nop
adc
xchg
mov
and
out
lods
mov
push
or
in
repz
in
jb
jnp
jbe
outsl
fldl
add
mov
xchg
dec
mov
sbb
xchg
xchg
jb
or
mov
scas
pop
cmp
pop
xchg
shll
lret
push
shlb
jg
pop
pop
cmpsl
and
dec
subb
ja
push
push
xchg
scas
imul
cwtl
ja
mov
idivb
mov
pop
adc
mov
testl
xor
out
in
arpl
fwait
and
es
or
inc
push
roll
mov
mov
cs
cs
mov
rolb
in
adc
jge
jmp
jae
cmpsb
push
dec
mov
test
test
inc
mov
pop
or
aaa
hlt
ljmp
data16
movsb
fs
pushl
clc
es
sub
repnz
sub
mov
ret
xlat
pop
jo
pop
pop
push
adc
das
notb
and
sub
dec
dec
cmp
push
je
cmp
negb
adc
push
outsl
cltd
add
and
fs
les
lahf
jns
jns
imul
push
adc
scas
rcrb
dec
out
mov
imul
jb
pop
call
xchg
ljmp
dec
int3
xchg
movsl
je
mov
call
and
and
inc
mov
lcall
jo
pop
sbb
or
lahf
out
mov
push
push
xchg
test
and
cmpsb
and
ror
aad
movsl
popa
lods
ja
shlb
ret
xchg
test
mov
mov
bound
jb
and
pop
popf
cmp
cmpsb
adc
sbb
sahf
nop
jne
xor
cmc
add
dec
mov
push
and
gs
xor
xor
push
jl
adc
adc
fnstcw
pop
or
ds
imul
push
stc
xor
out
scas
out
add
jge
lret
mov
adcl
jns
rcrb
xor
popf
sarl
push
pusha
mov
xchg
adc
mov
dec
decb
cmc
fstpl
mov
imul
std
pop
mov
arpl
rcll
shrl
push
gs
push
lods
mov
fdivrs
sbb
xor
test
cmp
xlat
xor
scas
pop
ret
cltd
scas
xor
inc
in
shl
push
fdivrl
loope
mov
add
leave
jns
dec
ljmp
and
movsl
jnp
test
int
into
pop
mov
mov
scas
lahf
nop
pop
lahf
imul
or
sub
mov
pop
jl
mov
stos
aad
rorb
fsubr
fs
outsb
and
mov
fldt
xchg
jns
dec
pop
add
hlt
mov
cmp
loop
mov
cli
mov
cwtl
aas
ret
in
hlt
push
xchg
dec
test
inc
out
xchg
loope
mov
mov
dec
cmp
addr16
xchg
jecxz
icebp
xchg
inc
sbb
les
lods
mov
loop
ret
jb
sub
aaa
jbe
inc
and
sbb
sbb
adc
ss
inc
mov
mov
into
lea
imul
adc
jg
ss
xchg
stos
jmp
in
xor
int3
dec
ret
loop
test
ss
cmp
popa
lahf
jmp
sub
out
xchg
sbb
ret
sub
lods
push
clc
push
fdiv
adc
mov
push
je
mov
gs
push
das
mov
js
je
and
cld
stc
out
mov
aam
repnz
push
push
jmp
mov
sbbb
mov
lea
xor
js
mov
leave
cltd
dec
loop
or
push
mov
sub
xor
ds
jne
sbb
int
inc
mov
cmp
push
popf
push
shlb
or
inc
and
icebp
mov
jmp
js
test
js
push
cmpsl
addb
push
dec
push
mov
jg
fldl
pop
xor
incl
rorl
jno
xchg
xchg
outsb
daa
stos
mov
mov
pop
into
dec
scas
inc
sbb
rcr
in
das
xchg
mov
mov
jmp
or
in
inc
popa
loope
fadds
jp
mov
ss
das
outsl
xchg
out
aad
cmp
cmp
push
pop
xor
adc
add
outsb
sbb
and
aam
or
out
out
int
sub
jne
xchg
icebp
or
jne
xchg
adc
add
outsl
mov
mulb
mov
sbb
mov
jp
movsb
pop
int3
xchg
add
enter
cmp
jg
lahf
in
pop
popf
dec
mov
icebp
inc
call
cmpsb
ret
addr16
into
nop
insb
dec
dec
out
adc
mov
sub
mov
xor
sub
dec
mov
lahf
negl
push
fstpt
dec
or
xchg
pop
fsubs
xchg
xchg
mov
mov
mov
repnz
push
test
add
jbe
in
fs
adc
pop
mov
imulb
cltd
bound
jmp
fs
jnp
aam
or
sub
xor
add
pop
inc
mov
mov
and
add
mov
pop
pop
std
xor
cmpb
test
adc
mov
jmp
bound
jbe
mov
aam
loopne
dec
mov
adc
add
or
push
test
subb
and
cmp
lcall
sbb
cwtl
ret
jne
adc
mov
aad
outsb
sbb
add
xor
mov
xchg
mov
cs
add
stc
mov
push
inc
and
or
in
or
rclb
popf
sbb
and
test
jne
stc
xor
and
hlt
cmp
fmulp
mov
in
lret
mov
push
fadds
push
cli
lcall
mov
popfw
push
cmp
push
jo
sub
adc
stos
lahf
mov
ds
sbb
xchg
dec
mov
adc
pop
pop
and
jae
dec
sbb
imul
shrl
sub
pop
dec
fcoms
test
add
pop
fildll
cmpsl
mov
adc
xchg
lods
sbbb
xor
jae
mov
in
mov
repz
push
push
push
std
jo
pop
and
sbb
pushf
lea
jmp
dec
or
jge
stos
out
adc
cmp
push
sbb
cmpsl
xchg
add
mov
clc
push
cltd
push
jecxz
xor
inc
mov
ja
add
int
fistps
xor
cli
je
jge
rcrb
dec
scas
pop
xchg
rolb
int
mov
pop
push
call
lods
in
inc
loope
cmp
dec
cmp
stos
cmp
push
push
jo
dec
clc
lcall
into
push
cmp
pop
push
fnstenv
inc
fadds
mov
arpl
mov
ret
dec
or
out
iret
loop
dec
push
es
pop
jl
sbbb
aaa
jbe
xor
scas
jg
push
sahf
lods
mov
popf
aaa
daa
cli
jb
or
xchg
sub
shlb
pop
aas
push
fwait
sbb
stos
mov
pop
mov
cmp
lahf
xor
insb
mov
mov
mov
add
sahf
and
dec
les
insb
enter
cmovns
lods
jl
test
dec
add
inc
push
mov
and
ret
movsb
popf
sbb
xchg
lods
xchg
addr16
adc
xchg
xor
iret
mov
test
hlt
mov
addb
lahf
cmc
mov
cmp
in
pop
loopne
jo
test
cmp
pop
insl
sahf
pop
jno
test
fs
int
xchg
jnp
stos
sub
ret
frstor
push
xchg
sbb
in
std
lea
inc
sub
jns
pop
mov
cmpsl
incb
lods
push
and
mov
inc
push
shl
mov
ret
adc
fadd
leave
decb
dec
stc
fcoms
push
dec
in
enter
push
mov
daa
lret
mov
cs
mov
test
xchg
cmpsb
lods
aaa
adc
pop
adc
xchg
clc
stos
clc
ret
call
call
dec
cmp
hlt
ja
fisubrl
dec
mov
mov
sbb
in
push
and
cmc
in
inc
xchg
mov
add
and
push
mov
xchg
stos
push
lahf
in
fidivs
cmpsl
push
pushf
pop
test
adc
std
add
cmp
lds
cmc
stc
std
sarb
lock
inc
icebp
xor
pop
push
mov
lods
push
jbe
pushf
shll
in
inc
jns
cmp
xor
rcrl
das
cmp
inc
push
pop
push
mov
xor
mov
ja
dec
and
clc
in
push
jmp
sahf
icebp
scas
mov
and
inc
fs
sbb
mov
in
pop
shl
aaa
dec
or
rclb
movsb
inc
mov
cmp
inc
sub
push
sbb
getsec
scas
mov
xor
add
shll
pop
jmp
fdivs
mov
mov
lock
xchg
sbb
cmp
ds
dec
jb
sti
movsb
adcb
xor
sbb
sbbb
lret
enter
xchg
push
out
stc
adc
filds
gs
dec
mov
pop
mov
out
fdivs
inc
add
xor
gs
rclb
cmp
adc
push
test
adc
sbb
cmpsb
ljmp
out
cld
jne
cmp
mov
lods
xchg
shrb
das
call
les
jb
inc
lret
cld
push
inc
xor
lret
cld
xchg
cltd
xor
sbb
jns
xor
push
mov
xchg
add
into
adc
call
clc
pop
xchg
add
lods
sbb
mov
jne
dec
and
testl
ret
mov
pushf
or
or
dec
out
sbb
xchg
or
adc
xchg
inc
pop
shr
mov
in
ljmp
adc
out
sti
mov
popf
pop
decb
dec
pop
mov
ds
xor
ficoml
push
insb
imul
xor
jne
adc
jo
fs
aaa
fsts
cmpsl
ja
negb
ficomps
in
xchg
xchg
addr16
out
or
out
sbbl
inc
sti
push
adc
push
cmp
lods
ret
dec
js
push
lahf
pop
dec
sbb
and
loope
xchg
jns
mov
sti
mov
add
test
push
xchg
push
inc
jmp
sbb
mov
and
jae
das
repz
fsts
fidivs
xor
xchg
dec
int
jbe
pop
sbb
in
fcompl
or
adc
negb
xchg
lea
lds
ret
mov
les
inc
stc
push
adc
cmp
cmp
pop
ljmp
jmp
fs
das
jns
push
roll
cmc
xchg
xchg
shll
push
jge
inc
lcall
or
cmp
orl
xor
repz
sbb
sub
mov
add
or
jmp
pop
cwtl
stos
and
xlat
jno
outsl
push
sbb
loope
cmp
dec
jmp
in
push
inc
jmp
aaa
cltd
pop
popa
aam
ljmp
add
adc
mov
lret
or
sahf
sub
pushaw
sahf
test
or
jae
lds
orl
pop
mov
call
popf
loopne
mov
xor
das
dec
outsb
adc
arpl
shl
sub
dec
shl
mov
fs
mov
jmp
pop
sub
cmpsl
int
inc
add
inc
mov
rcrb
push
pop
sub
pop
sub
dec
mov
add
push
mov
outsb
popa
or
stos
pusha
sub
aaa
fsubl
sub
push
xchg
mov
jmp
mov
dec
sub
jae
xchg
jp
cwtl
inc
push
shl
test
sbb
jecxz
xchg
ja
adc
ljmp
bound
sbb
xchg
or
add
fldl
inc
ret
or
xchg
insl
fidivrs
xchg
mov
testb
cmp
pop
andl
inc
push
mov
arpl
les
test
push
jbe
push
insb
and
sub
stc
ja
and
into
xor
syscall
fadds
and
bound
ficompl
adc
add
cs
lahf
and
xchg
mov
call
cmc
mov
andl
stos
cmc
popa
add
ret
mov
out
ficompl
aas
and
sub
cmpsb
push
add
pop
int3
andb
ret
sar
out
mov
scas
or
pop
mov
rcrb
mov
add
fsubrs
js
xor
pop
push
fisttps
pop
add
stc
add
push
test
test
pop
daa
and
adc
pop
scas
sub
xor
test
dec
scas
das
push
push
push
rorl
add
clc
pop
repz
out
outsb
lods
dec
pop
and
or
jg
cmp
addr16
retw
mov
inc
mov
out
mov
sbb
xchg
jo
gs
mov
outsl
ljmp
jo
std
enter
lcall
push
flds
and
xor
subb
mov
pushf
insl
jmp
push
xchg
lret
notb
dec
mov
aam
cmp
addr16
fwait
jmp
jmp
push
lcall
in
lahf
test
xchg
sub
pushf
pop
jnp
out
jp
stos
or
sbb
lods
lock
mov
lahf
dec
out
and
call
and
cmp
cmp
jbe
mov
mov
push
test
mov
fcmovu
mov
les
arpl
int3
gs
stc
aas
add
inc
xchg
stos
sub
scas
fldt
add
loope
xor
cmc
jbe
mov
jp
xor
inc
hlt
dec
sbbl
bound
repnz
lds
out
cmp
rorb
adc
jno
mov
push
cmp
sub
orl
imulb
test
leave
xor
xchg
andl
pop
out
out
cmpl
jg
aam
mov
mov
and
jnp
pop
outsb
movsb
jae
into
mov
adc
pop
gs
mov
add
or
jbe
aaa
enter
push
xor
jbe
xchg
cmp
mov
push
jge
cmpsl
cmp
movnti
xchg
pushf
inc
cmp
xchg
mov
int
pop
scas
sub
dec
dec
call
shlb
fisttpl
jne
or
lret
std
loopne
iret
lds
add
std
xchg
in
ret
or
and
cli
mov
xchg
inc
insl
pusha
cmc
xchg
in
xor
pop
imul
mov
and
jl
and
sbb
xchg
mov
lcall
mov
mov
mov
ret
dec
sbb
xchg
lahf
loop
sbb
leave
into
pop
inc
mov
in
push
xlat
scas
push
in
xor
out
je
rorb
dec
popa
shll
jns
es
mov
push
mov
jecxz
enter
test
and
mov
mov
push
and
popf
mov
ja
xor
std
add
xchg
adc
into
inc
insl
jno
enter
call
data16
sarb
mov
jmp
aad
scas
pop
aam
jns
shll
dec
push
fs
sar
xchg
data16
xlat
and
shrb
test
mov
sub
dec
push
repnz
xchg
adc
lea
fs
gs
mov
push
or
mov
pushf
mov
stc
push
scas
jmp
sahf
ficomps
sarl
pop
adc
dec
xchg
mov
add
cltd
dec
test
jne
adcl
dec
insb
test
ds
cmpsl
inc
imul
sub
push
pop
test
add
sbb
mov
push
call
sub
xchg
pusha
cs
sub
adc
outsb
inc
xchg
push
or
inc
push
rclb
stos
int
dec
and
cmc
mov
push
mov
js
xor
xchg
outsl
pushf
fwait
sub
xor
sbb
test
push
cmp
add
xchg
cmp
jne
clc
dec
in
cwtl
xor
mov
in
jae
fidivs
insb
pop
je,pt
lret
lods
jmp
jmp
xor
fbstp
xor
mov
adc
stos
fisttps
mov
xorl
std
pop
xor
addr16
out
sbb
jns
lcall
push
xchg
adc
pop
mov
dec
jo
mov
mov
inc
les
insl
push
xchg
out
cld
ret
dec
sub
mov
imul
dec
lods
andb
fwait
dec
jp
bound
dec
mov
outsl
or
pop
test
repz
push
xor
scas
aad
sar
aad
dec
jmp
setle
cmpsl
mov
int
fst
jmp
add
jae
insb
sbb
hlt
push
in
andb
outsb
lret
add
or
scas
cltd
xchg
xchg
jbe
loop
dec
or
loopne
jns
popa
into
test
mov
hlt
or
cs
js
pop
in
mov
cmp
xchg
mov
fs
test
fiadds
addl
mov
test
mov
mov
loope
jo
or
cmp
sub
sub
dec
pop
sbb
jecxz
add
mov
dec
lea
arpl
fsubs
loopne
xor
pop
add
pop
hlt
dec
inc
jo
lcall
jge
nop
pop
mov
and
addb
mov
dec
pop
mov
movsb
dec
fimull
sahf
fists
mov
push
mov
cmp
int3
sbb
imul
add
dec
rorb
inc
push
xchg
xchg
jb
inc
push
add
pushf
cmp
mov
and
xor
insl
xor
add
sahf
idiv
fsubp
jno
in
push
stos
dec
mov
mov
mov
repnz
push
and
lcall
xor
adc
les
mov
stos
pop
pop
dec
outsb
iret
repnz
cmp
stos
and
pop
mov
loop
lock
sub
loop
xchg
bound
imul
mov
mov
outsl
aam
add
sub
sbb
push
and
mov
inc
jns
push
xchg
lds
mov
insl
inc
cmp
push
inc
xchg
adc
cmp
xor
mov
add
adc
xor
pop
cmp
in
push
ds
mov
xchg
add
xlat
xchg
aam
and
and
std
popa
push
mov
cmpsl
cli
fldt
or
mov
sbb
mov
pop
rclb
fcomps
mov
fnstenv
pop
out
test
jle
fwait
icebp
push
dec
adc
cmp
pop
lea
add
outsb
jb
stc
sub
stc
sub
jmp
sti
lock
dec
adc
cld
cli
inc
out
sbb
imul
std
or
mov
pop
popf
shll
popa
cmpb
xorb
mov
and
stc
imul
or
icebp
dec
lods
out
and
decl
imul
jg
ds
pop
subl
add
subb
pusha
mov
or
repz
popf
mov
pop
jbe
leave
mov
mov
fisttpl
sub
sub
jns
adc
test
sbb
push
mov
ljmp
fs
loope
lahf
mov
aaa
add
mov
cmp
sub
ljmp
mov
pop
sub
push
mov
cmpb
daa
hlt
test
es
int
jno
loope
aam
xor
xor
jg
dec
mov
jb
gs
or
outsb
add
sbb
ret
stos
mov
hlt
mov
inc
push
pop
mov
insb
test
adc
bound
and
sbb
and
pop
push
xchg
push
or
loope
mov
add
mov
sahf
outsb
xor
orb
loopne
shll
in
pop
or
sbb
ss
dec
sti
enter
cltd
push
mov
inc
jno
or
stc
jns
xchg
jge
push
loop
lods
inc
cmpsb
out
test
xchg
sbb
push
das
xor
sub
das
sbb
test
out
dec
stos
dec
xchg
or
and
jl
test
xchg
mov
inc
lahf
and
inc
pop
pop
ss
jnp
ljmp
jecxz
mov
add
iret
mov
clc
xlat
pop
cmp
cs
push
shl
inc
cmp
xchg
and
jge
jecxz
test
pop
cmpsb
mov
cmc
ret
sbb
jo
out
mov
or
jb
roll
mov
xorb
or
mov
cmp
xor
std
aas
adc
out
dec
ljmp
push
lds
roll
cmpsb
rol
xchg
and
out
pop
mull
jg
aas
and
jmp
inc
cmp
fiaddl
repz
aam
gs
adc
lods
rcl
add
daa
sub
add
jl
cmp
das
jp
adc
sub
xchg
sbb
jmp
and
pop
jge
lods
push
pop
mov
lds
in
mov
fnstsw
jp
testb
std
xlat
sbb
dec
arpl
enter
out
mov
xor
sahf
mov
and
test
push
repz
jbe
or
lods
and
lahf
push
or
jp
push
lret
or
mov
cmp
mov
pop
push
jmp
xor
cmc
shlb
test
int
xor
xor
faddl
sub
xor
sti
imulb
lret
inc
add
jg
jo
jmp
outsb
and
mov
jmp
addr16
insb
xchg
pop
jne
xchg
pop
mov
cvtps2pd
jmp
sub
mov
push
push
xchg
sti
popf
pop
mov
push
lock
sub
sbb
and
lods
je
cmp
pop
push
xor
std
pop
jbe
fstps
mov
jno
ret
jo
test
mov
jmp
dec
push
dec
and
mov
sbb
fadd
lods
mov
pop
mov
imul
dec
cmp
jecxz
enter
mov
test
push
data16
fwait
pop
inc
push
jno
movsb
xor
mov
hlt
call
push
bound
push
dec
out
insl
xchg
jnp
push
aad
rorl
mov
das
jnp
xor
mov
mov
cmpl
aam
outsl
insl
jmp
outsb
mov
daa
adc
std
movsl
push
mov
call
mov
sahf
push
out
sbbb
cld
add
jmp
and
mov
add
mov
xchg
ficoml
jbe
xchg
dec
xchg
sti
icebp
add
sbb
xor
lea
out
cmp
int
outsb
push
jmp
ror
std
push
xor
cmp
cmp
add
dec
pusha
sub
loop
mov
xor
movl
stc
shll
xchg
icebp
imul
dec
and
int
lret
pushf
mov
sub
incb
xchg
js
cmp
jl
stos
cmp
aas
or
inc
xchg
push
dec
cmp
out
jo
fsubs
sahf
add
pop
popf
fldcw
shll
inc
xor
out
imul
aas
xchg
xchg
mov
cmp
mov
jp
call
das
cwtl
xlat
push
lods
push
jo
jg
and
rcrl
push
arpl
mov
push
cmpsb
fildl
scas
push
imul
hlt
adc
aam
mov
fndisi(8087
xchg
outsl
mov
jecxz
insl
push
cmp
push
das
rolb
xor
inc
mov
fdivrs
sub
in
mov
mov
loopne
mov
push
fucomip
dec
xchg
add
data16
dec
sub
adc
or
cmc
xchg
pop
pop
lods
mov
xchg
xor
or
loope
xchg
push
pop
mov
int
jae
cli
aaa
int
lcall
outsl
lods
add
adc
test
in
inc
push
ljmp
push
jns
ss
sbb
incl
mov
lock
sbb
stc
xchg
sub
or
insl
jnp
lods
pusha
dec
mov
cmp
popa
inc
and
inc
rcl
rorl
xchg
inc
xor
add
mov
aaa
dec
lock
push
fisubs
stc
mov
out
nop
jmp
call
pop
shll
mov
sbb
jb
daa
xchg
push
add
add
pop
dec
fldenv
push
adc
leave
mov
mov
in
pusha
fsubs
jmp
or
add
xchg
es
ret
test
loopne
ffreep
xchg
cmp
xchg
mov
cltd
rcll
fsubrl
leave
paddusb
fisttpll
loope
jbe
dec
incb
repnz
jbe
insb
and
push
pop
add
pop
dec
pop
pop
xor
fwait
xchg
cwtl
js
jl
push
jae
adc
mov
cmp
jle
add
or
fisubs
push
sub
lret
cmp
insl
mov
aad
flds
add
adc
mov
pop
fiaddl
pop
cmp
cmp
scas
adc
scas
push
jg
pusha
addb
hlt
jp
cmp
push
add
xchg
and
lret
inc
lods
scas
enter
inc
mov
add
sbb
mov
mov
movups
loop
lret
push
xchg
fisttps
jnp
mov
pop
xlat
leave
imul
ret
loop
dec
jecxz
sarl
jmp
push
xorl
ljmp
sbb
sub
jg
repnz
jbe
xchg
pop
insl
push
nop
dec
aad
cli
cmp
test
or
or
test
adc
mov
cmp
xorl
add
rcrb
xchg
and
cli
das
jnp
cmp
pop
test
jge
lods
xchg
mov
or
pushf
sub
cltd
fwait
test
adc
mov
lock
mov
jp
xor
pop
push
cld
mov
push
add
cmp
mov
mov
and
and
rorl
dec
negl
inc
xchg
sub
decl
adc
dec
popf
pop
popf
push
not
xchg
shl
push
xchg
lret
xor
pop
pushf
daa
mov
repz
jg
fidivrl
aaa
clc
sub
into
pop
add
in
push
push
imul
xchg
stos
or
xor
push
push
repz
push
push
flds
mov
jb
xchg
add
xor
or
cmp
gs
or
sbb
orl
fdivrs
mov
ss
pop
xchg
add
or
into
add
dec
scas
imul
xor
jle
mov
mov
dec
cli
add
scas
and
daa
leave
sub
in
loop
push
push
enter
sub
fcomps
mov
mov
mov
shrl
mov
fwait
jp
sub
outsl
sarl
int
cld
fmul
jnp
fcomps
iret
sbb
icebp
xchg
imul
jp
push
lds
rcrl
lods
push
orb
aaa
cmp
add
mov
cmpsb
sbb
dec
cmp
ds
lcall
insl
or
lods
cmp
mov
scas
insb
cli
jo
test
popa
fidivrs
xlat
and
mov
test
xor
js
out
aad
clc
pop
push
movl
out
in
addl
pop
cltd
xchg
cmpsb
jnp
sbb
push
out
rolb
jno
xchg
fnsave
xchg
cmc
clc
push
sahf
sub
cltd
cwtl
sbb
adc
dec
inc
and
or
add
add
dec
test
dec
and
loope
and
in
adc
sub
xlat
push
pop
sbb
push
subb
cmp
insb
mov
dec
mov
hlt
or
pop
shrb
lret
es
sub
push
add
out
pop
jae
mov
or
inc
cmp
shr
or
out
adc
test
gs
mov
pushf
or
push
in
adcl
out
xchg
adc
push
jbe
mov
xor
in
cmp
out
jns
and
outsl
add
lods
sub
leave
in
or
mov
xlat
imul
push
int3
mov
pushf
daa
push
add
xchg
adc
das
dec
and
fucomip
jbe
stos
xor
add
es
add
adc
into
shrl
cltd
repz
and
loope
cmp
pop
pop
adc
jno
ss
mov
in
ljmp
and
cltd
nop
scas
xor
jge
jl
std
inc
xchg
or
sti
cli
outsb
sbb
mov
rolb
movsl
or
sub
push
mov
inc
push
add
inc
outsb
jno
mov
sub
icebp
push
or
fldcw
push
shll
mov
xor
push
jae
dec
or
bnd
mov
adc
daa
les
jno
jp
js
int3
and
fistps
out
inc
add
or
or
dec
cmp
fidivs
sbb
lcall
addr16
repnz
dec
push
dec
mov
push
xchg
push
xor
std
sarl
loope
cmc
push
push
adc
filds
stos
cltd
pop
cld
fs
mov
dec
push
popf
add
jnp
mov
stc
xchg
xchg
pop
cmpsb
rorb
loop
sub
push
sbb
add
sarb
sbb
mov
les
int
stos
pop
mov
test
push
pushf
pop
nop
jecxz
jb
jno
shlb
push
out
ret
aad
dec
sahf
lret
push
ljmp
jo
lcall
subb
lcall
mov
movsl
pusha
pop
arpl
cmpsl
cmp
and
bound
and
cs
decl
scas
add
test
dec
lcall
add
sbb
rcl
push
jge
test
imul
mov
xor
pop
mov
mov
scas
sub
or
in
push
out
dec
add
aaa
fwait
dec
lds
cli
mov
mov
loope
call
pop
shrl
or
popa
pushf
pop
lea
add
shlb
pop
sub
rcrl
pop
xor
movl
xchg
adc
pushf
ret
scas
hlt
push
add
mov
xor
stos
xchg
popa
mov
cltd
jnp,pn
mov
mov
lret
mov
gs
dec
mov
jb
rolb
int3
cmpsb
lock
cmp
fprem1
jne
xchg
add
mov
mov
sti
push
mov
in
mov
shrl
insb
into
outsl
sbb
adc
int3
insl
ss
js
shlb
mov
mov
mov
lock
add
divl
xor
and
pop
test
arpl
int3
xorb
sbb
xchg
daa
iret
lds
inc
in
mov
mov
ror
cmpsb
or
rcll
test
mov
stos
popa
add
test
mov
xchg
and
lock
sub
popa
std
mov
dec
lcall
movsb
cmp
rolb
and
xchg
and
mov
add
test
or
stc
pop
push
mov
jns
cld
or
mov
pop
std
xor
lds
inc
cmp
xor
ror
clc
pop
push
and
ficompl
push
fwait
xchg
das
jge
fisttps
mov
and
sahf
xlat
xlat
cmp
or
and
dec
mov
adc
push
and
mov
sub
mul
dec
xorb
pusha
lret
dec
and
jp
adc
mov
dec
loop
xor
mov
rorb
sub
loopne
daa
aaa
into
sub
push
outsl
dec
stos
ja
jp
pop
dec
and
in
xor
inc
adc
in
clc
fwait
xor
jne
fucom
popf
fsubr
push
je
jne
and
or
sbb
push
sti
dec
xchg
imul
lret
fdivrl
or
cwtl
shl
std
aas
insb
mov
scas
in
pushf
jecxz
xor
mov
sarl
add
mov
push
add
dec
sub
les
push
cltd
adc
mov
cmp
sbb
mov
mov
add
or
add
sub
push
or
jmp
add
inc
repnz
xchg
fcoms
and
nop
lret
enter
sti
push
iret
pop
push
mov
xor
xorb
lds
cmpsl
cli
iret
lds
sub
cmp
and
les
out
adc
icebp
sbb
aaa
push
ror
in
push
jo
fwait
sub
das
jno
sub
sbb
repnz
sarb
sub
jne
imul
ficoms
lock
mov
ljmp
es
adc
lock
push
sub
iret
adc
aas
orb
pop
or
push
jl
aaa
adc
adc
or
and
call
push
ret
addr16
sub
jp
popf
mov
mov
push
inc
pushl
leave
sub
and
mov
push
lds
movsb
sub
adc
jmp
out
insb
arpl
daa
cltd
adcl
xor
aaa
pop
addr16
imulb
int3
popf
or
jmp
fwait
jb
push
js
mov
mov
pop
sbb
leave
inc
jb
inc
leave
in
daa
lods
mov
lret
shlb
mov
push
push
adc
icebp
cmpsb
mov
cltd
and
jno
mov
enter
jecxz
push
push
pop
insb
int3
and
push
into
adc
js,pn
mov
xor
cmpsl
movsb
adc
fwait
xor
mov
pause
cmp
nop
shll
shlb
adcl
pop
cwtl
add
icebp
sub
or
add
dec
sub
jb
xchg
pop
sub
mov
push
cltd
lds
out
sub
inc
je
subb
aam
sbbb
xchg
sub
cmp
fnstenv
push
jae
sarb
repz
in
xchg
test
jmp
push
clc
lret
inc
pop
mov
or
shrb
and
dec
sbb
and
push
aad
popl
cmc
inc
xor
aaa
pop
adc
fldl
xchg
mov
inc
push
js
push
inc
push
inc
sahf
push
add
addr16
imul
inc
mov
out
lods
andl
sub
addl
fisttpll
xor
loope
clc
jecxz
dec
cmp
jne
jbe
jbe
sbb
and
out
xchg
sbb
rcr
stc
push
rorl
xchg
or
push
call
repnz
repnz
scas
ja
push
in
ror
mov
xchg
mov
fstpt
aam
out
xchg
xor
out
push
std
icebp
loopne
sti
lock
mov
sub
ret
pop
sbb
sub
aas
mov
notl
sbb
loop
das
stc
sbb
lods
sbb
out
mov
push
cmp
inc
incl
cmpsb
mov
fldenv
adc
dec
mov
leave
sarb
sbb
lea
movsl
aad
and
cmp
cltd
daa
add
cmp
rol
or
inc
adc
test
out
push
jle
bnd
subb
xchg
and
push
push
and
lcall
imul
pop
adc
int3
outsl
jo
xchg
stos
mov
ficoms
jnp
mov
dec
test
call
and
jae
cltd
test
cwtl
dec
jp
enter
push
jge
sbb
add
jbe
jle
inc
or
and
pop
cmp
or
dec
mov
lcall
ret
or
and
out
addr16
sub
aad
mul
test
mov
inc
mov
cmpl
jl
sarb
mov
sbb
out
in
outsl
push
ljmp
add
cmpsb
fwait
lds
sub
movsl
cmp
shlb
dec
lock
mov
sbb
pop
fwait
aaa
lahf
adc
pop
clc
popa
shl
icebp
lret
xchg
cmp
popf
xlat
lods
push
test
in
jns
mov
push
mov
mov
dec
pop
dec
enter
cli
mov
jbe
cmp
out
daa
xor
mov
inc
add
rcrl
shl
shrb
adc
das
sbb
imul
and
in
lods
mov
loopne
shr
mov
ja
mov
out
nop
adc
sub
pop
in
scas
mov
add
mov
cwtl
js
stos
pop
jle
mov
pop
push
jmp
icebp
lcall
mov
loopne
add
inc
stos
imul
add
addl
sbb
cmp
mov
jae
popa
sbbb
mov
test
mov
or
dec
gs
cmp
sub
out
nop
push
sbb
call
lock
mov
pop
sub
cmpsl
in
stc
rcll
je
push
std
lret
jle
int3
mov
les
xchg
pop
xor
outsb
cmpb
je
inc
dec
mov
data16
pop
ds
dec
xchg
sarb
xchg
fbld
and
xchg
cmc
push
add
mov
lds
mov
mov
jo
fdivrl
inc
jl
jp
xchg
pop
or
lcall
ss
js
add
mov
loope
dec
mov
js
add
add
push
les
insb
adc
xchg
aad
mov
mov
mov
mull
mov
aad
mov
mov
shl
cmp
add
notl
or
jl
xor
lock
lods
mov
or
cmp
mov
out
jle
stos
inc
out
push
inc
lret
ja
pop
dec
jle
sub
inc
add
inc
jne
push
dec
sbb
mov
out
dec
xchg
aaa
mov
lcall
sub
mov
xchg
jbe
pop
or
adc
jecxz
pop
in
mov
jle
fstl
pop
movl
xor
movsb
or
vpmullw
loop
and
sbb
mov
enter
inc
lcall
sub
pop
je
cld
movsl
enter
sbb
out
mov
push
push
lret
in
dec
xor
and
cmp
imull
cltd
push
pop
xchg
cmp
sbb
dec
and
out
adc
repnz
add
cs
mov
fstps
mov
xchg
and
cltd
out
or
movsl
repz
mov
pushf
lods
iret
xchg
movsl
add
test
gs
or
mov
out
gs
jbe
cmp
rcl
add
mov
mov
cltd
pop
push
andb
stos
or
jbe
push
outsb
xchg
pop
divl
das
daa
push
and
jae
fdivrs
push
or
xchg
decb
jmp
jp
insl
mov
mov
fwait
sub
dec
mov
mov
out
jl
pusha
push
and
adc
jp
xchg
dec
mov
cmp
sub
shrb
xor
mov
mov
sarb
insb
aad
cmp
jg
or
adc
lcall
push
int3
sub
sbb
jg
lret
out
jg
cmp
call
jge
test
inc
out
sub
fnsave
daa
pop
cmp
dec
loopne
cld
loope
mov
stos
hlt
loopne
scas
int3
nop
cld
xorb
mov
aaa
or
mov
pusha
xor
push
aad
xchg
ficoms
sbb
ret
inc
in
lods
inc
je
cmpsl
pop
xor
les
enter
stos
test
insb
addb
xchg
test
and
sub
xchg
outsb
jg
mov
aas
mov
cmpsb
cmp
adc
add
push
cmpsl
bound
mov
js
lret
popa
xchg
lret
sbb
insb
out
clc
inc
mov
xlat
dec
movsl
scas
jmp
movsl
lcall
mov
xchg
xchg
jns
ret
aam
jl
fnstsw
or
pmulhw
pop
and
jae
push
and
cltd
mov
mov
call
aad
sub
or
mov
ret
fsubr
sbb
adc
enter
mov
dec
negb
inc
dec
pop
das
sahf
pusha
mov
mov
jb
cmp
aam
adc
xchg
mov
xchg
push
shrb
lea
lcall
xor
jl
ds
push
jo
out
push
lret
or
xorb
aaa
inc
stos
xchg
lcall
xlat
das
fadd
orb
imul
mov
aam
loopne
push
cmp
dec
mov
sbb
mov
dec
mov
sbb
sbb
pop
sbbl
add
mov
inc
ljmp
cmpsb
les
stc
jle
pop
insl
loopne
add
scas
xor
dec
or
inc
fwait
mov
inc
xchg
or
fldt
add
test
insl
ds
aas
mov
sub
cmp
aas
test
sub
dec
fldt
sbb
shlb
xor
mov
aas
test
xchg
in
arpl
xchg
xchg
jo
sbb
and
stos
fsubrp
jmp
std
jns
add
hlt
add
hlt
gs
push
stos
push
lret
adcl
mov
dec
push
lcall
mov
and
push
or
push
outsl
mov
mov
cli
inc
and
test
and
shll
jno
jns
jne
loopne
outsb
test
or
pop
out
sub
repz
cmpsb
inc
push
sbb
leave
sbb
ret
jns
xor
fistpll
cmp
pushf
js
jne
dec
imul
loope
xor
inc
push
dec
and
sahf
movntq
jmp
push
jmp
jbe
push
inc
imul
in
mov
lods
in
imul
outsb
out
xor
push
mov
jbe
call
xchg
jge
stc
popa
loop
cs
jo
pop
push
arpl
rcll
pop
in
inc
imul
ror
xchg
or
pop
push
sbb
shlb
push
mov
jg
enter
lds
xchg
lods
push
inc
push
jns,pt
lods
leave
jg
movsb
movsb
jle
mov
test
mov
jne
cs
and
mov
inc
add
pop
lock
add
mov
loopne
mov
mov
inc
nop
cli
xchg
pop
add
adc
ret
popf
pop
inc
outsl
jmp
xchg
pop
mov
cltd
adc
clc
enter
adc
mov
or
xchg
incl
incb
mov
out
xor
sub
pop
jecxz
inc
rorb
fmul
mov
dec
sar
push
hlt
pushf
cmc
xchg
test
sbb
sbb
inc
pop
aas
fucomip
mov
mov
sbb
mov
js
push
sahf
or
leave
adc
xor
xchg
add
das
push
cmp
inc
push
or
sahf
add
adc
pop
lret
pop
imulb
add
cmc
jae
pop
stos
jle
scas
cwtl
xor
sub
arpl
mov
ljmp
xchg
repz
push
sahf
inc
inc
jg
add
xchg
das
jne
jo
shr
jnp
adc
addr16
push
notl
pop
arpl
ret
fs
adc
ret
mov
xchg
lea
outsb
add
pop
push
jns
or
lock
pop
call
jecxz
xchg
xor
fldenv
mov
push
mov
sbbb
pop
sbb
and
fists
rcr
cltd
das
imul
aam
dec
xchg
sbbb
mov
mov
add
jl
cltd
pop
shrb
push
xchg
popf
inc
iret
mov
into
hlt
or
xchg
mov
pop
shrb
sbb
bound
out
xchg
add
subl
fisubs
mov
sbb
movsb
fcoms
add
pop
mov
in
movsb
add
mov
lods
sub
pop
mov
sbb
das
cmp
xchg
mov
adc
push
xchg
cli
cmpsl
jb
xchg
aaa
fdiv
aam
xlat
cwtl
mov
out
mov
xor
ret
mov
lcall
xor
popf
push
std
leave
push
mov
mov
pushf
xchg
inc
xor
insl
mov
mov
int
push
push
xor
adc
xchg
xchg
xor
sub
js
shrl
and
repz
and
pop
and
sbb
xor
jno
int3
out
lret
dec
into
ret
jns
mulb
mov
sbbb
dec
out
mov
pop
and
jle
inc
int
call
out
mov
test
push
xor
sub
out
and
jmp
in
movsl
mov
mov
push
sbbl
lock
fcoms
imull
lock
popf
sub
xchg
inc
or
push
xchg
std
out
cld
js
leave
dec
stos
and
fs
out
mov
sbb
orl
mov
xchg
inc
jbe
negb
sub
lret
and
add
adc
imul
add
mov
movsl
imul
adc
arpl
xor
mulb
movsb
pop
test
popa
xor
push
inc
js
sbb
push
cmp
lcall
or
mov
jmp
inc
dec
out
jbe
fistl
xor
mov
enter
lds
clc
jl
adc
addr16
les
adcl
test
and
ds
ret
push
mov
mov
add
mov
or
ds
cltd
insb
std
fcoms
mov
movsb
add
jo
or
sarb
lods
add
lcall
in
jg
stos
lret
ret
and
jbe
xchg
cmp
movsl
cmp
mov
pop
inc
sub
push
test
fmuls
std
fwait
repnz
jne
out
or
add
fidivl
fisubl
mov
vpaddq
lods
mov
jno
lea
sub
stos
push
dec
xor
jmp
cmp
and
sub
xchg
fsubrl
pop
xchg
jge
jne
popa
cmc
push
dec
enter
outsl
subb
push
sbb
pushf
cwtl
mov
pop
insl
pushf
inc
sub
xchg
inc
or
cmp
cmp
data16
cld
push
mov
sti
mov
pop
jne
xchg
fstpl
mov
lret
inc
or
sub
rorl
or
cs
push
enter
dec
in
and
xchg
xor
mov
xchg
add
jge
shrb
mov
xor
cmp
das
mov
call
mov
mov
cmp
out
rcr
mov
repnz
mov
rolb
lods
add
xchg
inc
cmp
fcoml
test
sti
mov
jmp
inc
jge
aaa
pusha
inc
lcall
xor
iret
push
lret
cwtl
add
sti
std
xor
pop
adc
dec
xchg
cmpsl
stc
jle
ljmp
mov
adcl
xchg
cmpsb
mov
cmpsb
lret
aam
sti
addr16
cmp
popa
dec
mov
and
fadds
and
xchg
imul
clc
in
in
xchg
test
push
cmpsl
xor
push
pop
fs
sbb
jecxz
imull
ljmp
add
ljmp
or
fcompl
sti
nop
outsl
arpl
sbb
mov
les
mov
mov
insb
mov
xchg
adcb
mov
inc
outsl
out
mov
mov
cmp
arpl
add
lahf
mov
sbb
adc
and
sub
mov
dec
in
pop
mov
loop
sbb
xchg
es
pop
les
mov
xchg
loope
xor
lods
ss
in
add
pop
mov
pop
inc
mov
inc
cmp
andb
mov
mov
ficoms
fs
cli
push
xchg
sahf
es
xor
testb
leave
out
fbstp
mov
xor
or
nop
jnp
pop
pop
addr16
push
push
cmp
clc
cmpsl
mov
inc
lret
fs
int
push
sti
cmpsl
jne
lretw
jl
faddl
or
or
lds
test
pushf
fdivs
loope
push
mov
add
cmp
mov
out
scas
pusha
andb
mov
repz
mov
fdivp
out
jnp
dec
adc
daa
adc
mov
sti
mov
and
dec
sub
mov
sub
mov
xchg
shlb
sub
mov
xor
xchg
gs
mov
sbb
dec
pop
xor
cmp
sqrtps
rclb
sbbb
mov
in
push
scas
sarb
int3
add
imul
cmpsb
icebp
dec
lods
xchg
cmp
loopne
pop
cwtl
mov
sahf
jecxz
mov
dec
pop
wrmsr
stos
pop
and
inc
testl
add
repz
pop
in
outsl
mov
cmc
repz
lcall
fsubs
adc
adc
push
test
cmc
xchg
xor
shlb
mov
notb
pusha
xor
das
jb
ljmp
out
xchg
lock
fnstenv
and
pop
push
addr16
loopne
stc
xchg
movsb
leave
add
ss
mov
test
jbe
scas
xor
sahf
dec
xchg
jnp
pop
iret
sub
mov
mov
jne
cmpsl
dec
jno
neg
or
pushaw
ret
or
movsl
jbe
pop
pushf
push
add
add
insb
cmp
push
mov
fcmovnu
fisubs
xor
fldcw
mov
fcom
jno
sub
iret
in
cmp
outsl
out
jp
inc
lahf
loopne
into
dec
cmp
pop
ss
add
mov
repnz
std
std
or
ja
mov
mov
mov
sbb
inc
xchg
shlb
xor
insb
jmp
mov
dec
add
or
inc
mov
popa
push
es
imul
negl
sbb
cmp
out
in
add
push
push
xchg
pushf
lret
inc
shll
xor
ret
into
mov
out
out
jb
je
aas
inc
or
testl
or
fs
mov
ud1
stos
xor
jnp
int3
xor
pop
shr
addl
sub
nop
push
and
mov
aad
movsl
mov
dec
jns
js
lcall
ss
jae
pop
sarb
dec
repnz
dec
xchg
add
sahf
sbb
stc
mov
xchg
je
jbe
mov
in
push
cld
dec
std
push
cmp
sahf
mov
scas
xor
dec
imul
sub
cltd
imul
and
xor
mov
int3
or
or
xchg
inc
int3
xchg
jno
scas
iret
ja
jno
xchg
sub
ja
clc
mov
dec
sub
sti
cmp
fmulp
mov
movsb
addr16
je
mov
pop
mov
stos
cmpsl
adc
pop
inc
fistpl
sti
sbb
popa
das
inc
xor
cmp
popf
add
and
xchg
push
sbb
lret
cmpsb
dec
fisttps
ljmp
movsl
mov
icebp
fwait
mov
and
mov
add
adc
movsl
xor
out
mov
adc
or
add
adc
lahf
push
imul
test
xlat
xlat
sbb
mov
add
pop
push
loope
jp
pop
jle
out
pusha
xchg
sti
inc
fsubs
sti
adc
mov
sti
sub
cmc
xchg
in
dec
imulb
mov
jl
push
jmp
inc
int
int
push
out
sub
fdivrs
shll
clc
xchg
icebp
add
xchg
mov
or
mov
popa
dec
sub
jmp
cltd
or
jnp
mov
sbb
jno
mov
mov
dec
pop
in
xor
or
jo
or
ret
jb
mov
jae
jno
and
jg
jne
mov
bound
jb
mov
addr16
in
push
xor
and
arpl
cmp
vpsrld
stc
inc
and
fwait
nop
test
cs
cmp
cmpsb
cmp
in
lcall
aad
xchg
scas
mov
addb
fisubrl
lcall
pop
mov
jmp
enter
or
and
pop
icebp
xchg
xlat
xchg
xor
xchg
fsubrs
push
dec
lods
mov
test
test
xchg
mov
add
iret
pop
movsl
jb
cmpsl
or
mov
cwtl
jl
xor
add
insl
out
repnz
mov
mov
inc
mov
push
xor
jae
cmp
mov
mov
lahf
mov
sub
mov
xchg
sub
shrb
shll
push
scas
add
xor
loop
xchg
xchg
pop
imul
mov
aam
add
cwtl
aaa
mov
ds
mov
orl
or
mov
or
je
add
pop
fisttpl
push
scas
addl
add
clc
arpl
pusha
sbb
cmp
mov
xor
fidivl
jp
inc
sub
es
mov
jmp
or
pop
sub
xchg
and
test
addr16
sub
push
fscale
rcrb
inc
mov
inc
stos
mov
hlt
and
fisubrs
add
inc
lods
sub
and
pusha
fwait
out
lcall
add
out
pop
stos
test
jl
jmp
sbb
push
xlat
dec
pop
xchg
stc
mov
int
jo
cmp
lret
out
aad
jno
imul
mov
ja
lds
pop
inc
mov
jno
dec
lods
pushf
leave
jns
add
shrb
adc
pop
stos
mov
mov
loope
push
out
and
stos
fucomp
stos
data16
mov
fists
pop
stc
in
xchg
loop
adcl
fcompl
lods
push
shll
dec
cmp
loop
push
iret
pop
push
lea
pop
in
addb
sub
sarl
fidivs
dec
inc
mov
clc
lret
push
insb
xor
xor
shrl
into
popa
popa
aas
ja
in
sbb
sub
pop
jmp
imul
sbb
pop
std
xor
xor
jl,pn
cwtl
mov
push
cmp
aas
lods
push
add
jb
popa
mov
push
lods
dec
xor
xchg
pop
out
mov
hlt
in
adc
jg
push
xchg
ja
sbb
movsl
jo
scas
lcall
lods
mov
shl
outsb
jne
cmpsb
test
dec
add
and
test
push
test
lods
cwtl
mov
and
pushf
or
add
bound
arpl
pop
imul
ja
xor
jle
or
mov
xchg
or
int
pop
xchg
mov
cmp
fsubs
inc
test
lahf
dec
in
xor
std
stos
add
insb
das
jb
lock
dec
shll
and
hlt
ss
test
xchg
mov
xchg
add
cltd
std
and
repz
or
or
repnz
popa
jnp
mov
shrb
xor
in
das
sub
in
xor
ja
in
mov
push
rcr
pop
mov
mov
xor
cltd
xchg
in
ds
sbb
xor
sub
mov
inc
push
inc
inc
pop
mov
int3
push
fs
daa
shl
test
and
mov
or
outsb
pop
ja
adc
or
dec
inc
sbb
gs
jl
lret
hlt
xchg
iret
jle
repz
push
rcrb
add
pop
xor
jo
pusha
pop
and
jp
mov
cmpsb
cwtl
enter
mov
in
xchg
es
cltd
push
jnp
push
out
insb
add
arpl
sbb
sbb
xchg
iret
inc
lods
adc
add
pop
daa
loop
test
int3
ljmp
xchg
iretw
add
ss
test
pop
sahf
mov
jge
xor
stos
xchg
xchg
rcll
sbb
smsw
inc
or
cmp
xor
xor
popf
pop
xor
lods
xchg
cmp
scas
inc
lock
fdivs
adc
cmp
lods
jb
lods
inc
fwait
sbb
loop
mov
mov
mov
xchg
cmpsb
ljmp
addr16
cmp
xor
push
cmp
test
mov
jno
dec
xchg
jbe
pop
insb
inc
jne
int
mov
insl
jp
dec
mull
lods
sub
sub
stc
cs
icebp
outsb
mov
jo
sbb
insl
loopne
mov
int3
mov
in
mov
push
pop
xchg
stos
xor
fwait
sbb
jae
loope
addr16
scas
rorb
xchg
loop
xchg
mov
push
and
outsl
dec
add
push
xchg
je
sbb
icebp
movsl
sbb
jmp
adc
pmulhw
pop
loope
jno
push
mov
test
xchg
out
outsl
lds
xor
cmp
addr16
pop
mov
dec
jnp
dec
or
sub
or
shlb
xchg
and
shl
mov
insl
add
lock
jecxz
addr16
cmpsl
pop
clc
jecxz
push
mov
pusha
dec
test
jl
popf
push
out
popa
sub
and
or
movl
lahf
outsl
js
int3
add
xchg
orl
dec
jg
xchg
fdivs
cmp
xchg
dec
xor
mov
sbb
mov
sbb
out
jge
mov
and
jecxz
push
jno
pop
ret
add
mov
inc
dec
sarb
iret
inc
dec
popf
sub
push
scas
xchg
mov
ja
push
pop
out
jge
jmp
push
sbb
inc
mov
inc
gs
outsl
mov
cmp
mov
lods
jae
or
push
fiaddl
invlpg
mov
or
adc
dec
mov
lahf
fisttps
bswap
ljmp
arpl
pop
mov
mov
or
ja
rcrl
sahf
loope
jo
jmp
lahf
pop
orb
ret
mov
xor
outsl
mov
pop
and
adc
test
mov
xor
jb
xor
int
cli
std
movsb
mov
dec
adc
mov
ud2
loopne
adc
add
mov
xor
and
rcll
push
add
push
mov
rorl
fidivrl
arpl
ret
mov
mov
jle
shll
roll
add
cmp
lea
bound
push
ss
adc
idiv
adc
loope
test
jae
push
lcall
cmpsb
sbb
in
mov
push
mov
mov
out
subl
imul
negb
cmpl
pop
ljmp
test
cmp
aaa
push
sbbb
aaa
mov
jnp
pop
sub
leave
xchg
xlat
stc
or
test
jmp
jo
stos
mov
jno
iret
cmp
inc
inc
jge
xor
or
push
in
ret
insl
pminsw
push
sbb
lahf
test
pop
dec
repnz
pop
xor
mov
cmpb
mov
sub
stos
notl
outsb
dec
fwait
push
dec
mov
inc
add
jo
inc
add
outsl
or
lret
mov
cmpsl
sub
mov
test
mov
or
inc
cmp
jbe
mov
cmp
daa
aaa
and
or
ss
add
fs
call
xor
or
xchg
inc
push
stos
jl
lods
cmp
loopne
pop
sarl
test
push
cltd
fisubl
idivb
fiaddl
cmc
pop
out
lods
xor
pusha
test
mov
stos
xchg
out
inc
cwtl
jle
cld
inc
mov
adc
lds
ja
in
int3
mov
testb
lock
scas
cmp
mov
jno
out
cld
hlt
sbb
cmp
mov
andl
pop
jno
cmp
testb
fdivl
pusha
xorl
adc
test
mov
dec
xor
jb
xor
add
cmp
imul
cmp
shrb
inc
gs
test
mov
mov
popa
inc
lret
insb
shrl
jne
xor
arpl
push
or
mov
xor
adcb
arpl
rcll
mov
sarl
pop
and
inc
call
aad
cmp
jne
das
pop
push
cmp
sbb
xchg
xor
jne
pusha
rcrl
mov
out
rol
cmp
mov
inc
scas
mulb
mov
nop
jb
jo
nop
adc
sbb
jo
dec
shl
add
add
bound
stos
movsb
cmp
sbb
jns
pop
in
cmpl
loope
mov
mov
push
xchg
test
mov
mov
je
out
fbstp
lcall
test
mov
outsl
rorb
insl
mov
mov
ljmp
mov
mov
enter
fists
in
nop
clc
adc
and
cmc
pushf
pushl
stos
mov
mov
outsb
out
cltd
push
loop
mov
jo
cwtl
adc
jbe
or
pushf
fstps
sbb
in
daa
and
mov
inc
ficoml
aad
cmp
mov
pop
xchg
aam
fnstcw
xchg
adc
loopne
dec
negl
scas
xor
or
popf
xor
in
or
jg
xchg
icebp
xchg
cmp
nop
add
and
imul
call
loopne
jl
mov
jbe
dec
dec
mov
or
jle
xor
push
mov
inc
xlat
sbbb
dec
jbe
gs
pop
mov
in
or
sbb
sub
out
cmp
loope
dec
pop
lret
inc
sub
push
mov
adc
mov
shrl
mov
push
lret
ds
mov
push
jo
sub
stos
xor
and
sbb
push
or
and
inc
fsubrl
jae
push
jae
lcall
xabort
repnz
sbb
and
adc
es
insl
dec
jns
lahf
repz
outsb
stos
and
data16
dec
jmp
mov
test
stos
add
xor
xchg
or
cmp
or
xchg
and
and
cmp
push
dec
xchg
cmp
out
dec
mov
mov
aas
push
stos
fiaddl
mov
dec
push
xlat
push
and
xchg
sbb
push
lret
in
rclb
push
xchg
ret
mov
pop
push
pushf
sub
mov
fisubs
dec
rol
loop
lds
repnz
mov
aas
enter
lock
dec
stc
and
sbb
or
rclb
cmpsb
mov
xor
add
and
and
fcoms
jl
sbb
pop
pop
imul
mov
mov
jns
push
push
stos
leave
xchg
imul
and
jns
sub
and
add
mov
stc
loope
data16
jl
mov
lcall
pop
movsb
lock
and
cltd
xchg
jbe
push
or
adc
roll
in
pop
mov
push
xchg
push
push
cli
enter
daa
shll
mov
jbe
in
sahf
inc
mov
ljmp
ret
shlb
clc
mov
or
pop
add
push
mov
cwtl
mov
pusha
cltd
lea
or
and
pop
insl
lahf
xchg
inc
adc
stos
lret
mov
mov
flds
mov
xor
sbb
xor
leave
aaa
adc
jecxz
test
ret
push
jno
mov
adc
and
cld
jae
jne
cmpsl
and
into
ljmp
inc
imul
jecxz
pop
cmp
movsb
and
xchg
or
xor
cltd
and
jmp
das
mov
dec
adcl
lea
pop
pusha
lods
adc
fdivrl
pop
scas
xor
pop
nop
pop
pop
mov
cs
mov
int3
xchg
add
andb
pusha
out
insl
out
jns
cmpl
in
inc
shlb
mov
shl
insl
push
ds
and
xchg
xchg
scas
out
push
push
xchg
push
and
jmp
and
scas
mov
pop
dec
jnp
sbb
and
out
xor
xor
adc
imul
inc
cmp
mov
cmp
ljmp
dec
movsb
sub
lods
xchg
aam
mov
ds
movsl
jmp
xchg
loop
fisubrs
sub
in
imul
gs
mov
dec
xor
sbb
jg
sahf
lea
xor
cli
sub
ret
les
js
insb
jp
testb
mov
sub
daa
loopne
mov
mov
mov
leave
jmp
jae
xor
cld
pop
clc
cmp
xor
cmpsl
aas
pop
repnz
mov
mov
cmp
sbb
sbb
stc
add
cmp
xor
test
sbb
mov
xchg
ret
outsb
gs
jnp
stos
jne
push
sbb
xchg
call
and
sub
imul
sbb
mov
inc
movsb
mov
jp
mov
and
jmp
xor
arpl
leave
sbb
or
leave
xchg
add
call
test
add
jp
and
in
arpl
jge
xchg
inc
cmp
adc
inc
mov
aaa
or
mov
mov
loope
lcall
scas
push
ret
aas
mov
xchg
push
enter
cmp
repnz
add
pop
test
mov
xchg
jns
pop
or
mov
push
sub
mov
dec
nop
je
test
hlt
mov
jae
mov
ficompl
cmpsl
fdiv
aaa
pop
sub
and
fchs
in
mov
arpl
jne
pushf
movsb
call
and
push
dec
popf
stos
mov
hlt
out
xor
ss
std
gs
adc
jno
xor
sub
sarb
push
pop
int3
sub
inc
bound
xchg
pop
mov
test
mov
adc
hlt
mov
cld
xor
std
inc
and
out
xchg
inc
push
movsb
in
mov
bound
cmpsl
pop
inc
movsb
mov
sub
lret
movsb
mov
adc
test
mov
leave
pusha
mov
cmpsb
scas
xor
xchg
shrl
adcl
out
loope
pop
aas
jg
repz
pop
shll
lret
push
or
jle
jbe
mov
mov
cld
sub
lock
mov
dec
dec
xchg
rcrb
outsl
pushf
daa
aas
not
popf
cmp
adcb
movsl
push
push
fldcw
xchg
add
pop
xchg
mov
sub
aad
fimuls
subl
ret
mov
sub
jecxz
inc
outsl
jge
fstpt
sti
es
outsl
iret
mov
addb
out
add
pop
stos
jmp
aad
adc
dec
scas
mov
jp
call
repz
clc
rcll
std
negb
mov
pop
and
push
sub
jecxz
daa
sahf
cmp
cld
es
rcrl
ret
jp
sahf
into
sub
sbb
jne
in
xchg
les
insb
mov
in
mov
stc
and
push
nop
mov
jmp
xchg
cli
push
call
test
aas
scas
fcomp
int
inc
cmpsb
xchg
adcb
jae
cmpsb
xchg
xor
push
sub
or
pop
xor
iret
ja
fstpl
and
popf
movsb
push
mov
enter
xor
shrl
dec
xchg
js
out
add
aaa
scas
fistpll
scas
mov
jle
and
frstor
or
inc
fsubl
or
pusha
shl
mov
push
inc
xor
or
incl
popa
jnp
jo
cmpsb
popa
shrl
xor
push
fisubrl
fimull
mov
mov
or
shlb
lea
sub
ljmp
lock
xchg
out
jecxz
outsl
push
push
lretw
mov
mov
or
enter
sub
scas
inc
sub
fs
pop
xchg
mov
fwait
negl
push
idivb
imul
push
mov
pusha
dec
cmp
in
cli
aaa
or
int3
or
shrl
inc
scas
xchg
fnsave
cld
jecxz
mov
repnz
mov
repz
mov
or
lods
push
testl
mov
ret
jl
mov
ret
mov
out
inc
hlt
push
out
and
jecxz
sti
imul
scas
xor
jecxz
sar
xor
scas
cmp
lahf
cmpsl
insb
or
sahf
movsb
mov
inc
inc
addr16
sti
je
xchg
insl
inc
push
int
adc
into
push
ja
fucomip
add
pop
ljmp
push
into
rcl
sti
lods
cmp
fxam
daa
hlt
jge
ljmp
insb
push
mov
xchg
mov
adc
mov
dec
popf
xchg
cmp
mov
mov
mov
push
call
jne
push
rcrl
push
mov
mov
fiaddl
out
add
arpl
dec
ss
jb
lock
add
fs
push
mov
cs
inc
stc
or
ljmp
or
inc
pop
inc
cltd
add
jp
pop
mov
outsl
dec
addr16
lds
mov
xor
mov
call
insl
ret
pusha
sub
out
xchg
insl
out
aad
push
ds
inc
xchg
sub
cmp
cmp
popa
jae
xchg
mov
mov
adc
mov
cmc
cs
xchg
fistpl
mov
iret
xor
frstor
sbb
add
push
and
stos
jecxz
or
into
pop
fnstenv
xor
cmp
jge
mov
jmp
fs
sub
sar
mov
es
fwait
xchg
pop
out
mov
out
cmp
rol
inc
and
inc
mov
adc
iret
aas
sub
mov
mov
pop
push
jle
pop
stos
dec
mov
and
outsl
popfw
repz
es
mov
lcall
adc
jecxz
sbb
insb
imul
cmp
scas
pop
addr16
cmpsb
mov
imul
xor
jge
enter
pop
adc
cmp
pushf
dec
xor
sbb
das
hlt
lcall
cld
jge
mov
mov
imulb
dec
mov
mov
cltd
mov
hlt
mov
or
je
add
or
dec
aam
adc
push
in
int
push
out
mov
mov
lcall
test
and
aad
jp
in
loope
cli
dec
insb
jnp
iret
stc
mov
push
hlt
jo
cmc
cmp
popf
jmp
iret
out
dec
popa
testl
cmp
dec
and
adc
push
stc
push
je
mov
pop
fwait
in
xor
add
nop
mov
andb
lcall
cmpsb
imul
xor
icebp
adc
in
outsb
gs
pop
into
sub
in
es
int3
cmp
out
cwtl
jb
mov
inc
xor
outsb
adc
xor
test
ja
gs
xlat
stc
fcmovnu
inc
push
xor
rorl
inc
bnd
and
pop
lods
movsb
sbb
cmp
ss
in
cmc
mov
adc
es
std
in
fptan
pextrw
jae
xchg
push
cltd
test
out
cmc
pusha
mov
jbe
dec
cmpsb
sbbl
adc
pop
pop
imul
cltd
mov
add
mov
sub
fidivl
sub
std
mov
pop
shrb
lcall
les
xor
jle
pop
xchg
test
fwait
push
pop
cld
pop
icebp
popa
push
addr16
fwait
loope
mov
fisubrs
sub
pop
rorl
dec
mov
push
mov
sbb
sbb
movsl
pop
xchg
mov
pop
arpl
and
call
and
or
aam
cmpsb
mov
adc
dec
test
push
dec
imul
mov
jb
in
cmp
lahf
add
xor
and
pop
push
xchg
outsb
dec
fsubr
add
jnp
fiadds
leave
adc
xor
loopne
sbb
adc
mov
inc
xchg
lods
into
push
outsb
cs
ficoml
data16
lods
fsubrl
mov
mov
mov
out
jne
std
in
xor
dec
daa
cmpsl
cli
dec
jb
cmp
mov
jae
das
cld
int3
ja
jp
imul
or
sar
test
jnp
or
in
stc
pop
jbe
insb
sbb
or
incb
xchg
mov
dec
and
xchg
pop
int
adc
ret
stos
sbb
out
lret
inc
xchg
or
cmp
cld
sub
lods
lods
mov
add
je
nop
in
repz
or
or
and
jbe
sub
inc
clc
fildl
in
das
sbb
fildll
psubq
dec
out
pop
aaa
pushf
adc
testl
out
xsavec
mov
je
mov
sarb
xor
xchg
push
cs
jbe
cmp
push
jne
sbb
icebp
jmp
out
mov
jb
mov
mov
std
xor
xor
in
xchg
mov
push
cwtl
loopne
sti
adc
cmp
dec
lcall
imul
movsb
push
out
pop
pop
mov
jno
popa
xlat
ret
pusha
in
pop
iret
inc
cmp
flds
lds
test
jl
dec
push
jecxz
inc
mov
xchg
es
lret
scas
dec
xchg
popa
cs
pushf
sbb
sub
jl
clc
push
xchg
fisubl
outsb
jo
sbb
xchg
push
xchg
push
movsl
jnp
dec
nop
or
in
insl
rorb
mov
push
vmwrite
dec
dec
and
movsb
cmp
imul
popa
cmpsb
lret
push
pop
leave
mov
xchg
out
xchg
mov
pop
imul
xlat
les
movsl
sbb
mov
lods
loopne
mov
mov
mov
xchg
ror
dec
clc
mov
cmp
test
adc
dec
imul
not
fbstp
fcomp
jecxz
stos
insb
mov
sbb
filds
add
inc
in
sub
xor
in
pop
loop
inc
fdivr
sub
inc
bound
or
mov
jge
hlt
lcall
add
cmc
loopne
test
adcb
aaa
nop
out
pop
js
and
sbb
push
jno
scas
add
sbb
enter
inc
pop
inc
pop
insb
pop
cmpsl
sub
xchg
aad
and
add
xor
jo
loope
popa
jbe
adc
jnp
sub
es
loope
shlb
stc
sub
and
ss
gs
iret
fmull
push
and
mov
cmpsb
nop
pop
stc
mov
lea
data16
xchg
ficompl
rcll
sbb
nop
jmp
or
mov
loopne
out
mov
xor
mov
pop
rorl
aam
pusha
gs
xchg
filds
inc
subb
ficomps
dec
gs
jl
mov
mov
dec
jge
clc
shrb
stos
cmpsl
inc
loope
ss
cmp
idivl
xor
test
lret
shr
cmc
gs
les
stos
adc
iret
std
loopne
pop
aas
push
mov
adc
inc
clc
stos
lahf
add
imul
leave
sbb
inc
dec
orl
push
adc
inc
popf
ja
dec
cwtl
ret
cmpsb
jnp
sbb
or
into
jns
in
xchg
and
mov
pop
jle
ret
adc
dec
jbe
push
popf
xor
push
push
mov
fs
lods
add
jg
adc
sub
xchg
cmc
mov
rorl
jle
stos
aas
in
cmp
cld
inc
push
mov
aam
scas
icebp
jo
and
add
stos
mov
call
leave
jbe
mov
loop
jns
dec
push
loope
mov
xor
mov
push
jp
pop
orb
pop
pop
inc
sbb
mov
add
xchg
fmuls
addr16
pop
fs
and
jle
cmp
neg
mov
and
add
add
mov
lcall
ret
aad
push
mov
ret
addr16
pushf
fimull
lock
mov
adc
xchg
inc
cmpsb
mov
mov
icebp
clc
dec
mov
cmp
or
jbe
fimull
sbb
sub
aam
push
sub
movsb
sbb
cmp
sti
jmp
int
cmp
repz
negl
rolb
imul
ljmp
aam
mov
xchg
jecxz
xlat
test
cltd
loopne
flds
jge
jmp
add
mov
xchg
js
mov
pop
inc
and
dec
sarb
xchg
stc
dec
inc
fldcw
pop
or
loope
fs
adc
sub
jno
inc
dec
jmp
js
lcall
scas
mov
pop
cmp
push
das
pop
jae
push
repz
add
dec
xor
rclb
cmp
mov
jo
cmp
push
inc
and
icebp
push
ljmp
pushf
xchg
mov
add
or
sbb
mov
cmp
dec
jns
dec
sahf
inc
movsl
iret
nop
or
push
push
push
nop
xchg
loop
stos
sub
xor
and
cmpb
pop
int
stc
adc
cs
jl
pushf
negl
stos
and
sti
mov
dec
in
and
inc
inc
mov
jmp
inc
imul
decb
lahf
in
popa
sub
mov
lods
cmp
enter
xchg
jns
xor
mov
xor
loopne
outsb
inc
push
sbb
insl
xchg
or
sub
mov
xchg
addb
sub
insb
mov
sahf
push
movsl
xchg
sub
and
nop
inc
mov
jmp
xchg
push
xchg
cmp
push
mov
or
inc
jl
dec
out
mov
aaa
mov
dec
sbb
jns
push
enter
mov
add
jp
insl
xchg
mov
nop
cltd
and
push
fisubl
inc
hlt
jle
mov
repz
imul
std
clc
js
mov
cli
pusha
mov
repz
lods
enter
jno
decl
int3
inc
add
xchg
lods
je
cmp
add
les
push
inc
sub
inc
adc
inc
jle
inc
jp
jnp
shrw
ss
mov
or
imul
arpl
jnp
arpl
cmpsb
jg
lds
xchg
js
int3
adc
xor
cmp
mov
inc
data16
mov
xchg
and
mov
in
js
pop
pop
or
jnp
filds
jbe
dec
xchg
shrb
dec
shll
cmp
incb
fstl
cmp
sbb
fisubl
mov
jmp
push
mov
or
dec
ja
sti
cmc
daa
adcl
and
fimull
hlt
jbe
fmulp
mov
mov
mov
sbb
jmp
dec
fnstsw
jmp
loopne
inc
shlb
test
mov
test
sti
push
push
stos
mov
leave
mov
roll
inc
adc
sarb
inc
pcmpeqd
adc
pop
mov
adc
fisubs
cmp
jl
mov
push
pusha
sub
shll
inc
adc
outsl
add
mov
ljmp
sti
lahf
popf
pop
mov
arpl
pop
lds
es
inc
jg
add
sahf
mov
mov
mov
mov
les
scas
test
sub
sar
push
out
or
mov
sbb
push
loopne
xchg
cli
or
dec
cld
xchg
ret
cmp
mov
mov
popf
loope
sbb
sbb
lret
pop
cmp
jmp
repz
pop
cmp
mov
inc
push
adc
mov
push
test
add
mov
loop
out
int
pop
js
ret
inc
xor
nop
daa
xor
bound
sbb
fidivrl
insl
lods
popf
icebp
test
clc
cmp
aas
or
mov
cmp
push
ss
or
and
push
xchg
mov
ss
arpl
cmp
movsb
pop
fwait
xorl
sti
jns
inc
fimuls
sarb
shll
pop
enter
test
jbe
icebp
xchg
adc
and
movsb
sti
cmp
jo
jb
popf
add
pop
ja
jmp
rol
adc
mov
xchg
add
imul
js
sahf
pop
push
shl
push
jge
repz
dec
mov
push
js
addr16
push
test
xchg
sbb
fs
outsb
push
in
push
sahf
pushl
jl
js
cs
pop
sbb
push
sub
xor
mov
cmp
mov
addr16
or
cmpsl
mov
lods
rcr
jne
shrb
pushf
lods
inc
adc
pop
leave
shlb
mov
mov
pushf
cmpsb
xchg
pop
out
push
rep
mov
roll
push
out
adc
test
push
jp
mov
movsl
mov
sub
mov
stos
add
sbb
xchg
fcmovu
pop
inc
mov
xchg
jno
test
sbb
in
lods
mov
inc
fwait
imul
in
mov
cmpsl
gs
cld
push
inc
pop
fs
pop
ds
fwait
in
test
pop
mov
fnsave
enter
pushf
mov
and
adc
and
movsb
push
adc
movsb
xor
push
sub
shr
pop
arpl
push
cmp
or
out
sbb
in
ja
cmp
sbb
fists
pushf
jae
inc
cmp
xchg
push
push
out
loopne
and
and
xchg
add
arpl
mov
cmp
dec
int3
mov
ror
jae
xchg
and
stos
cs
fsubrs
ja
xchg
mov
add
pop
adc
pusha
adc
out
lcall
lods
xor
jle
adc
sub
lock
imul
sbb
inc
dec
dec
push
into
mov
add
xlat
lods
imul
movsb
sbb
out
dec
lock
sub
pusha
inc
lock
jne
xchg
cwtl
nop
ficompl
inc
gs
pop
lods
push
in
inc
sub
cmp
ret
cmp
mov
fisttps
xchg
call
scas
js
sbb
iret
jecxz
out
mulb
sbbb
pop
mov
xchg
xor
fstpl
addl
loop
lcall
jb
lods
sbb
ds
aas
xor
stos
or
add
stc
pop
mov
xor
cwtl
jp
xchg
sub
xor
ret
adc
xchg
hlt
mov
pusha
xor
cmc
and
push
sub
adc
lcall
lcall
gs
test
call
cmpsl
sti
mov
rcrb
out
sbb
push
mov
push
sub
loope
inc
idiv
pop
mov
inc
jmp
fs
and
shll
mov
imul
repnz
out
in
nop
fisubl
ljmp
stos
xchg
insl
xorb
dec
mov
mov
int3
mov
pop
cmp
imulb
testl
in
out
loop
mov
aam
adc
mov
jns
ficoml
test
pop
mov
insl
lock
ror
inc
fcmovnbe
mov
es
mov
lret
ljmp
in
enter
adc
jnp
leave
xor
mov
lahf
pop
das
push
loop
push
fidivs
push
xchg
and
repz
and
addb
lret
popa
xchg
inc
out
nop
jge
adc
cmp
fsubl
jecxz
into
mov
or
or
stos
mov
push
inc
push
loope
idivb
pop
lret
out
outsl
fwait
std
repnz
lea
xor
bound
ss
adc
mov
xchg
out
cmc
xlat
mov
mov
test
scas
adc
aaa
pop
pop
sub
push
aad
sbb
lahf
sti
into
adc
dec
loopne
fnstsw
pop
test
clc
js
mov
cmpsb
sti
loopne
sbb
imul
mov
push
jb
and
cmc
xor
repz
push
dec
into
call
sbb
fldenv
iret
outsl
sahf
in
pusha
add
inc
xor
dec
jns
pop
sub
cmp
bound
push
enter
mov
arpl
lock
pop
jl
push
and
inc
mov
add
das
testb
daa
jmp
lds
sub
pop
push
xchg
and
adc
fcoml
push
or
or
mov
cwtl
clc
sbb
les
dec
push
ds
cli
mov
mov
fs
stc
xor
ja
test
dec
ret
in
jmp
push
dec
pusha
outsb
popa
mov
mov
mov
out
lret
cmp
jecxz
lret
xor
xor
cmc
jo
xchg
or
sbb
test
or
jle
adc
xlat
pop
je
bound
mov
or
push
loope
adc
scas
scas
cmp
stos
mov
xchg
enter
repnz
jge
stc
jg
sbb
push
and
pushf
cmp
notl
test
loop
icebp
in
xchg
stos
pop
push
mov
adc
add
cwtl
inc
lret
rcl
aad
jmp
fsub
push
push
pop
xchg
sbb
bound
adcb
jp
pusha
in
out
test
adc
pop
cmp
mov
mov
aad
gs
dec
cmpsl
jae
xchg
sbb
jns
xor
jl
push
mov
inc
clc
js
sbb
or
cmpsl
xor
aam
movsl
adc
sahf
add
cmp
jp
lods
cli
jecxz
testl
leave
dec
setne
loope
hlt
out
mov
fsubl
xchg
xchg
xor
addl
xchg
repnz
iret
mov
xor
inc
das
cmp
js
inc
inc
mov
jns
inc
add
into
int
in
daa
sti
push
das
pop
or
and
xor
mov
jle
mov
imul
leave
out
cltd
std
lret
mov
or
enter
pop
lods
and
testl
test
dec
inc
cltd
int
or
sbb
lret
and
mov
insl
mov
roll
fistps
dec
std
aam
mov
mov
or
and
push
push
pop
gs
sbb
das
push
inc
push
adc
push
pop
push
in
in
xor
mov
fsub
cli
jl
rol
sbb
push
mov
lret
data16
negb
in
push
ljmp
imul
jns
pop
and
push
gs
jg
add
mov
mov
decb
mov
daa
shll
shl
sahf
cmp
gs
xchg
sarl
or
or
mov
mov
andl
andb
add
mov
mov
add
mov
mov
jl
inc
scas
xor
iret
movsb
mov
pop
shll
cwtl
sbb
shlb
insb
aad
jg
xchg
mov
add
push
xchg
je
or
adc
lods
dec
or
jmp
shlb
xor
lret
out
loope
stc
mov
hlt
sub
lcall
test
in
and
mov
das
and
mov
aam
cmpxchg
sub
mov
cmp
inc
mov
cmp
fdivp
fwait
imul
out
insl
leave
les
adc
aaa
sub
mov
adc
or
in
aam
sti
aas
push
out
jp
aas
cmp
gs
pusha
lods
dec
sub
sbb
dec
sahf
lea
dec
jno
mov
ljmp
jl
xchg
andl
xchg
mov
jle
or
push
sub
jmp
int
arpl
sbb
xor
mov
test
es
sbb
mov
fldt
outsl
movsl
jo
pusha
push
fbld
push
insb
mov
decb
xor
and
ljmp
jle
test
std
xchg
out
mov
push
fcmovnbe
jle
inc
stc
mov
lock
cmc
push
xchg
dec
jb
testb
in
stos
mov
jle
imul
into
sbb
mov
cmp
leave
stc
call
xor
loopne
loop
jnp
popf
or
js
data16
fwait
inc
stos
imul
jg
cs
pop
in
mov
testb
mov
sbb
fisubrs
movsl
jle
xorl
sub
lret
sub
xor
mov
pushl
jbe
cld
xor
popa
loope
cmp
push
inc
loopne
push
push
mov
nop
fdivrl
mov
nop
bound
mov
pop
mov
rorb
movsb
std
jecxz
into
test
cmp
xchg
push
in
mov
es
jge
pop
cmp
les
shrb
jl
mov
xchg
xor
scas
xchg
hlt
es
mov
sbb
pop
mov
je
push
enter
add
outsl
dec
push
mov
jg
pop
add
test
inc
stos
push
sub
mov
sar
adcb
sahf
push
pop
mov
xor
jnp
movsl
icebp
mov
push
xor
xor
popf
sub
test
in
cs
mov
addb
ljmp
mov
fstps
mov
push
xor
dec
ret
addr16
xchg
call
mov
or
mov
out
jmp
lods
aam
mov
movsb
xchg
loope
cmp
ljmp
mov
xchg
ret
inc
scas
mov
push
std
xor
pop
lds
adc
test
mov
mov
mov
filds
ljmp
call
mov
shrl
jnp
aam
mov
xchg
in
inc
fcmovnbe
mov
and
test
mov
pop
jle
std
mov
imul
jl
inc
fistl
sbb
imul
andl
scas
sub
push
xchg
movsb
xlat
sub
mov
xor
mov
sub
pop
rolb
nop
test
aaa
xor
jnp
xchg
jp
sbb
mov
aas
dec
sbb
pop
aaa
into
in
movsb
ret
movsb
int
jl
xchg
xor
jae
xchg
xchg
xor
adc
xor
adc
hlt
xor
mov
jmp
stos
jmp
testb
mov
mov
jp
sbb
pop
dec
mov
dec
push
sbb
popf
lret
ja
andl
ret
dec
sbb
cmpsl
cltd
push
mov
fcoms
push
and
mov
mov
cld
aad
sub
mov
stos
push
loope
inc
cs
stos
pop
fwait
sub
dec
adc
fucomp
les
add
pop
pslld
dec
sub
iret
aas
or
adc
add
xor
and
push
lret
in
pop
les
cmp
mov
popf
add
push
inc
int
mov
sub
jb
ret
jmp
out
pushaw
icebp
cld
hlt
lea
jns
mov
cmp
jmp
xor
mov
test
dec
add
or
cld
in
mov
lcall
jb
aad
mov
movb
bound
nop
mov
jo
fstps
addb
into
icebp
test
ss
and
test
xorb
adc
lea
insl
xlat
cs
lock
pop
sub
nop
inc
aas
pop
adc
jmp
lcall
bound
int3
outsb
hlt
inc
xchg
jns
in
cmpsb
jbe
mov
push
dec
cs
push
dec
jns
cmovae
shll
je,pn
mov
xchg
sub
xchg
jno
pop
push
cmp
xor
pop
rcll
pop
pop
testl
arpl
xchg
or
pop
inc
out
movsb
cmpsl
ret
mov
movsb
lods
jno
jle
std
nop
movsl
push
loope
outsb
out
and
and
xor
inc
inc
cld
mov
sbb
je
js
mov
test
jne
sbb
pop
push
pop
fcmove
sub
sti
rolb
pop
jle
and
xchg
xchg
adcb
adc
add
lret
mov
push
push
lods
pop
scas
xor
das
sub
xor
int
gs
xor
lds
out
push
or
xor
daa
ja
hlt
push
icebp
adc
loope
in
scas
das
mov
gs
mov
rol
repnz
insb
add
adc
dec
loop
scas
mov
in
xchg
jbe
and
cwtl
inc
sahf
loopne
mov
roll
enter
inc
pop
call
xor
pusha
push
mov
ret
push
ficomps
jmp
add
stos
call
stc
int
nop
es
jmp
push
inc
xorl
call
inc
sbb
jmp
push
dec
cwtl
mov
mov
lea
xor
test
movb
dec
lock
mov
out
les
add
ds
incb
push
jg
push
js
pop
fildl
pop
aad
clc
jne
or
jnp
mov
sbb
and
insl
loope
mov
loope
sub
sub
push
dec
cmp
lret
pop
pop
int
rcrb
xor
outsb
pop
xchg
dec
jno
xor
mov
jmp
out
adc
cld
jae
or
test
inc
or
xchg
jmp
add
cltd
das
mov
and
mov
jecxz
aaa
mov
mov
push
pop
cmc
push
sbb
xchg
sub
add
shl
sub
sbb
sub
ljmp
sub
cmpsl
dec
cvtpi2ps
pop
ja
imul
inc
loope
leave
ljmp
into
lcall
shrb
inc
fwait
sbb
aam
rclb
xchg
out
mov
sub
cmp
pushf
loopne
inc
jmp
clc
outsb
test
and
adc
sbb
push
pop
pop
rorb
fidivs
ja
lret
jge
adc
das
xchg
jns
in
outsl
or
sbb
or
sti
and
xchg
and
pop
fwait
jge
shll
fistpll
mov
into
push
jge
sarb
push
repz
jno
stos
xor
sub
xor
outsl
sbb
fdivl
push
jecxz
dec
mov
mov
mov
imul
cmpsl
lahf
sub
scas
repnz
roll
inc
jge
push
xor
loop
cmp
test
push
cmp
ret
int
aad
push
jae
xlat
dec
jo
mov
mov
push
adc
lock
daa
sbb
int3
subl
icebp
and
das
mov
addb
lds
pop
shll
outsb
ffree
rcl
cs
rcr
push
cmpsl
jmp
push
xchg
fs
repz
hlt
jl
jmp
fldt
or
inc
insl
xor
daa
mov
mov
add
movsl
inc
pop
stc
sbbl
ljmp
decb
xchg
adc
inc
arpl
ja
pop
js
clc
jnp
and
mov
xor
ja
lods
mov
jns
or
ss
pop
xlat
insb
add
ljmp
aam
imul
jg
xor
jecxz
inc
call
jns
and
arpl
xchg
lret
shlb
mov
push
mov
andl
xchg
and
mov
test
lahf
movsb
pop
lea
jecxz
jns
sub
int3
sub
test
dec
mov
adc
push
jbe
orb
mov
push
lea
sahf
xchg
jl
and
negl
mov
sbbb
mov
sahf
pop
popf
mov
and
pop
rorb
dec
lahf
push
bound
outsb
std
jp
aaa
sub
loope
sti
sub
ds
mov
js
mov
jecxz
outsb
or
frstor
push
jle
pop
push
lds
inc
add
jb
pop
dec
mov
xchg
sbb
xchg
push
sbb
mov
scas
and
jp
nop
mov
aaa
sbb
add
iret
loop
inc
cwtl
or
push
push
pop
push
mov
sub
movb
mov
add
cmp
mov
pop
hlt
add
add
popa
mov
daa
or
enter
adc
inc
clc
inc
and
addr16
rcll
int3
xorl
cltd
push
push
fs
out
jo
xchg
push
mov
mov
fwait
cmpb
add
cltd
or
imul
aad
mov
addr16
mov
pop
xchg
cs
sbb
pop
cmpb
xchg
pushf
mov
cmp
lods
push
cmp
scas
nop
xchg
sub
xchg
in
cli
add
push
roll
ret
add
jns
pcmpeqd
es
xor
sbb
cmp
mov
xor
iret
mov
mov
jl
pop
stos
xchg
pop
or
pop
dec
cmp
addr16
mov
and
gs
loope
push
mov
dec
push
jmp
jmp
sbb
add
sub
into
in
out
xlat
inc
sub
cwtl
mov
mov
push
cmpsl
lret
pop
out
xor
push
inc
push
push
pop
dec
lods
fldenv
inc
xor
daa
shl
mov
fs
jb
std
inc
js
iret
divl
call
or
cmp
mov
dec
inc
ret
add
dec
shr
sbb
repz
cltd
inc
outsl
cmp
or
xor
ljmp
icebp
mov
inc
fdivrs
cwtl
mov
cmp
xor
pop
repnz
ret
das
je
push
je
sbb
lcall
mov
outsb
rorl
rclb
xchg
xchg
mov
inc
sbb
enter
inc
repnz
mov
mov
fcmove
jmp
adc
ret
lods
jb
clc
and
jle
lods
adc
fnsave
arpl
sub
adcl
shrb
or
mov
lahf
ret
sub
cmpsl
inc
xor
faddl
loopne
ror
ds
cmp
xchg
vmovdqu
out
icebp
out
lsl
out
xor
adc
cltd
push
test
xchg
addb
leave
lcall
int3
mov
shrb
mov
scas
sub
sbb
push
std
testl
mov
aaa
repz
into
xchg
pop
movsb
inc
dec
fsubrl
movsl
lods
dec
mov
pop
sub
lock
std
out
sbb
in
mov
movsw
subb
movsbl
jmp
jecxz
inc
xchg
divb
mov
aad
pop
cmp
jns
shr
addr16
dec
mov
in
ret
out
daa
dec
pop
add
mov
in
push
loop
adcl
push
nop
mov
or
mov
adc
pop
sub
movsl
inc
out
push
xchg
aaa
rol
cmp
mov
pop
jb
jae
test
out
cli
or
push
lret
push
lods
test
mov
dec
repz
cmpsl
adc
add
lods
sub
repz
ror
inc
jmp
leave
pop
push
jp
xchg
xchg
lret
mov
jl
inc
call
inc
mov
out
lods
mov
rorl
jge
cmp
adc
dec
fisubrs
or
jne
push
and
xchg
dec
mov
mov
add
out
mov
dec
mov
gs
sbb
or
cmp
push
xor
xchg
jecxz
dec
stc
sti
fidivrs
push
and
mov
cmp
pusha
pusha
xchg
adc
mov
fists
xor
xlat
mov
ret
insb
pop
dec
mov
xchg
shrl
aam
divl
sub
jb,pn
mov
fldenv
out
push
pop
fisttpll
cmpsl
cmc
push
push
pop
out
in
mov
dec
ds
ss
ds
enter
or
ljmp
and
jmp
dec
push
mov
icebp
lret
jnp
iret
push
sub
popf
roll
scas
test
xor
fisttpll
adc
inc
out
sub
or
sub
outsb
mov
cmp
movsl
imul
outsb
scas
pop
xchg
test
or
sarl
dec
inc
fimull
shrb
notl
inc
inc
lods
adc
adc
fsubl
imul
sbb
sub
repz
fdivrp
shll
pop
call
xchg
lahf
and
add
js
jo
lcall
add
movsb
arpl
in
pop
mov
into
push
mov
or
jge
jl
adc
cmc
testb
jecxz
add
lods
mov
leave
les
pop
sbb
cmp
lahf
dec
ds
sub
incl
in
scas
cmp
cmp
iret
scas
dec
jb
in
push
sbb
and
jo
popf
mov
add
jl
das
in
cmpsb
loop
jno
mov
fs
lods
in
jbe
pop
push
mov
adc
xor
mov
adc
push
inc
and
iret
fsubrs
dec
push
lods
mov
dec
jmp
cmp
scas
lret
scas
xchg
and
jns
or
xor
dec
dec
lock
daa
in
dec
jae
and
push
push
pop
nop
push
out
mov
jmp
add
dec
test
push
imul
nop
and
movsl
mov
repz
mov
sti
mov
sub
push
imul
nop
xchg
das
pop
cmp
push
divl
and
sub
xchg
push
add
mov
push
or
imul
jae
je
cmp
test
data16
int3
lock
pop
mov
jge
push
out
inc
mov
jnp
xor
and
push
add
mov
cmc
sbb
inc
cmpsl
push
sub
xor
lret
adc
pop
pusha
or
jns
cmp
adc
jp
jp
sub
mov
sub
lcall
dec
xchg
dec
cmp
push
push
pop
dec
insb
addr16
pop
push
lcall
xchg
bound
lret
lret
stos
adc
push
arpl
gs
testb
pop
je
addr16
pop
jecxz
inc
dec
mov
ret
add
or
cmp
push
xchg
dec
inc
lret
ss
xchg
or
fwait
cli
jnp
aaa
outsb
cmp
ja
sbb
dec
incl
iret
adc
mov
add
or
sbb
in
sub
pop
ss
jmp
cmp
mov
inc
jg
dec
divl
lret
sub
jbe
pop
ja
loop
cmpsb
jp
and
enter
shll
xor
cmpsb
cmp
jl
das
jmp
daa
inc
in
ds
dec
adcl
xor
lds
inc
movsb
push
test
fcompl
aas
sbb
out
pop
xor
xchg
stos
jmp
sbb
in
fisubs
adc
stos
inc
insb
fimuls
cmp
pop
les
inc
rolb
data16
ret
mov
jne
in
jb
or
mov
test
gs
and
xchg
mov
pop
ss
loope
sarb
cmpsb
sbb
fcoms
sbb
ljmp
aad
or
lock
dec
xor
jae
hlt
inc
hlt
sahf
pop
das
pop
call
add
arpl
sub
das
mov
outsb
das
out
xchg
push
fidivl
cli
loop
mov
mov
repz
cmp
jnp
outsb
dec
std
or
into
mov
pop
test
cmp
movl
xlat
shlb
enter
into
in
jecxz
mov
jne
xor
bound
cs
and
and
lods
xor
loope
movsb
sbb
push
faddp
cld
ljmp
mov
rcr
mov
sbb
popf
sbb
mov
in
aad
jg
cmp
adc
outsb
frstor
dec
pusha
cmp
jg
inc
or
or
cmp
aad
cmp
jmp
popa
ja
jmp
sub
ret
add
xchg
sbb
push
out
inc
in
inc
adc
and
add
xchg
cmp
loope
push
in
mov
nop
roll
lahf
mov
mov
xor
inc
nop
jp
popa
in
mov
fistps
dec
sub
lods
jno
fisubrs
lea
push
cmc
dec
loope
pushf
ss
jl
mov
xor
enter
fs
cli
into
push
aam
movsl
jne
lea
lahf
mov
mov
sahf
leave
mov
rclb
xor
sub
rcll
into
or
out
xchg
fdivrl
sub
mov
js
sbb
rorb
jmp
or
jo
test
scas
push
int
out
xchg
dec
cmp
sub
or
rcl
gs
xlat
xor
sub
jae
flds
mov
cmc
leave
and
push
push
jle
pop
xor
pop
repz
cs
jmp
sub
xchg
mov
cmc
cmp
cmp
dec
ds
inc
clc
lret
or
mov
push
inc
xchg
mov
pop
fstp
jge
nop
inc
cld
ret
sbb
push
sub
bound
or
mov
add
push
pop
sbb
pop
and
push
mov
repnz
out
sbb
and
mov
dec
mov
dec
cli
jnp
xchg
fsubrs
lahf
fcoms
inc
mov
or
setg
test
jecxz
xlat
test
jp
mov
cs
cmp
and
sbb
in
sub
dec
cmp
xor
scas
push
and
sub
mov
pop
add
sahf
rorl
fiadds
fs
iret
ret
sub
rol
xchg
or
sub
lret
mov
scas
lret
mov
fisubrs
cmp
add
lock
inc
mov
xlat
es
xorb
in
lahf
lock
sub
or
push
sbbb
test
mov
jo
sbb
mov
inc
mov
stos
xchg
inc
inc
into
ss
pop
enter
bound
nop
inc
push
rorl
mov
sbb
pop
js
lods
and
rol
sarl
jns
iret
loop
adc
mov
call
mov
mov
shlb
sbb
mov
lods
icebp
sub
mov
xor
mov
or
and
mov
add
lea
test
insl
popf
mov
popf
cmp
test
and
dec
shll
xor
xchg
sub
jo
jmp
fwait
mov
shl
pop
faddl
mov
dec
rcrl
dec
cmp
adc
inc
sub
dec
mulb
imul
jl
out
call
repnz
xchg
jle
lea
fmuls
mov
lcall
pop
js
mov
push
sbb
and
lea
jp
pop
test
data16
fcoms
and
pop
sti
test
mov
scas
outsl
pop
lods
and
mov
dec
cmp
popf
js
insb
lret
jnp
ficoms
cmp
inc
cmc
mov
pop
mov
mov
in
lahf
lods
loopne
icebp
push
and
adc
mov
jp
test
xor
aad
mov
mov
mov
stos
adc
sub
ds
sahf
xor
mov
out
incl
movsl
bound
mov
inc
jp
xor
inc
fnstcw
push
push
add
std
or
sub
jmp
sub
xor
fs
test
das
rol
push
js
or
pop
lods
sti
aaa
lock
jg
sti
int3
sbb
movl
xor
clc
mov
xchg
mov
xchg
dec
lret
mov
and
xor
inc
dec
cvtdq2ps
out
ret
notl
cmp
cli
movsb
and
jp
mov
fistl
fadd
add
adc
xchg
das
fidivrl
pop
pop
jecxz
or
push
and
push
xor
rorl
loopne
test
aas
adc
bnd
push
loope
ret
mov
shl
out
mov
add
cmp
les
xchg
pop
inc
sti
je
cld
mov
test
xor
push
aam
aas
pop
fidivrs
pushf
sbb
into
mov
xchg
jno
xchg
mov
test
mov
fsub
dec
adc
pop
mov
push
sbb
mov
in
bound
adc
dec
mov
push
and
push
sub
sbb
sahf
adc
imul
adc
cwtl
icebp
repnz
test
and
ljmp
sbb
sub
daa
add
aas
push
push
rcl
scas
lret
pop
pslld
sbb
arpl
cmpb
imul
xchg
fbld
pop
aad
pop
psrad
pusha
cmp
fdivrp
adc
mov
add
shl
xchg
add
adc
sbb
inc
xchg
out
in
out
js
mov
stos
add
or
pop
and
imul
adc
inc
fwait
and
clc
rcrb
in
es
mov
stc
cmp
repz
clc
outsl
xchg
loop
sti
xor
and
je
test
in
aad
mov
andl
adc
mov
mov
stos
mov
or
insb
xor
adc
jl
xchg
cmp
pop
hlt
addl
push
xchg
xchg
ds
js
test
loop
addr16
sbb
int3
cld
sbb
mov
inc
inc
mov
sbb
or
das
dec
sub
or
dec
adc
cmpsb
cmc
ret
insl
mov
out
lods
lret
dec
xor
pushf
lods
loopne
push
cld
pop
push
ljmp
xchg
pop
inc
dec
in
sbb
jnp
pop
jo
xor
pusha
xchg
mov
jmp
mov
push
adc
outsl
mov
push
data16
sub
in
sub
dec
aam
ror
mov
hlt
sub
mov
sub
sub
outsb
sub
mov
cmp
out
test
and
loopne
dec
loope
stos
and
push
cltd
mov
pop
dec
push
xchg
mov
inc
les
imul
push
xchg
cld
ss
rolb
cld
lods
shlb
ds
fnstenv
imul
xchg
pop
bound
mov
fmull
subb
stos
out
out
rclb
orb
push
sub
push
xchg
cmp
jecxz
push
dec
lahf
dec
mov
pop
fwait
xor
xchg
out
jne
ljmp
sub
popa
fdivl
cmpsb
inc
jmp
mov
in
inc
add
cmp
imul
nop
into
es
or
mov
repz
sub
mov
sbb
cltd
sub
add
adc
xchg
cmc
ret
jne
sarb
mov
lcall
xchg
aaa
nop
cmpsl
aas
fmull
imul
rcr
int
push
ljmp
xchg
pop
pop
dec
mov
xlat
push
pop
sbb
dec
jae
aas
repnz
pushf
push
jmp
loop
repz
push
mov
ljmp
pusha
sbb
aad
or
push
jbe
rcrb
sahf
loop
insl
movsl
fists
push
mov
lret
mov
xchg
push
out
add
imull
pushw
mov
inc
xor
shlb
mov
mov
cmp
pop
push
hlt
xchg
dec
adc
dec
mov
mov
lods
mov
cmp
jnp
mov
mov
cmpsl
int3
xchg
in
in
mov
add
mov
mov
mov
cs
inc
push
mov
js
dec
repz
movsb
xchg
popl
jmp
shll
sbb
pusha
ljmp
notb
xor
cmp
mov
pop
lock
rorb
xchg
aas
push
adc
xchg
dec
jb
push
in
push
fidivs
icebp
fidivrs
out
mov
arpl
enter
outsb
out
jmp
vpsubusw
outsb
rorl
or
insl
cltd
les
inc
cmp
sti
neg
int
adc
xchg
mov
movsl
ja
add
add
rcrb
ret
dec
inc
dec
in
aam
lea
stos
sbb
cli
and
push
sub
mov
call
xor
insb
ficompl
inc
repz
mov
bound
pop
popa
lock
ja
lret
mov
pushf
ret
or
out
and
and
dec
cld
out
stc
adc
add
scas
in
lods
push
jg
fldcw
or
fstps
insl
nop
les
test
scas
dec
js
lods
push
and
add
fildll
pop
repz
lret
ret
adc
shrb
lock
add
lock
pop
or
inc
ja
jge
cmp
and
push
pop
cmpsl
push
sarl
imul
icebp
popa
rcr
ljmp
out
inc
fcmovne
jae
daa
push
cmp
les
sub
push
adc
loope
push
rcr
pop
into
ftst
imul
add
mov
scas
loop
clc
call
jo
sbb
imul
mov
jmp
rol
push
repnz
sbb
outsb
ret
sub
mov
movsb
xchg
sub
imul
cmp
movsb
dec
rol
cltd
cltd
mov
mov
jmp
mov
sbb
xor
sub
popa
lea
jmp
fs
movsl
jmp
hlt
xor
rcrb
inc
jae
insb
mov
ret
sub
cmp
xor
sub
sbb
ss
push
sub
xchg
ljmp
cmp
mov
push
xor
and
xchg
cmp
xor
inc
jnp
mov
hlt
dec
jbe
lods
inc
or
mov
fisttpll
je
call
les
inc
inc
and
inc
sub
cmp
jnp
ljmp
leave
enter
inc
or
loopne
mov
push
insb
dec
out
push
jecxz
stos
mov
and
call
dec
outsb
lods
js
rcl
out
insb
mov
jne
xor
adc
ror
repz
xor
lcall
push
in
inc
test
or
adc
sbb
subl
gs
push
mov
hlt
cmp
inc
jbe
fsubrl
call
neg
push
pop
adc
ja
jo
sarl
test
stos
ss
mov
inc
xchg
mov
push
leave
shll
xorl
iret
popa
xchg
mov
imul
lahf
lret
xchg
aaa
jmp
in
xor
out
outsl
pop
pop
sbb
cmp
dec
mov
dec
push
dec
push
dec
mov
testl
scas
outsb
bound
add
iret
mov
pop
out
cli
cmovp
sub
inc
repnz
loop
inc
ret
pop
cli
lahf
jle
fdivrs
inc
xor
jnp
and
into
and
jge
enter
mov
fwait
xor
ss
fistpll
cmp
mov
popf
pusha
je
stos
add
enter
lret
xor
sbb
xchg
test
decb
jl
shr
gs
and
cltd
in
aaa
xor
fcmove
and
push
lcall
mov
adc
test
out
out
aad
pusha
shrb
inc
mov
sbb
mov
cwtl
arpl
cmc
mov
push
ret
add
loopne
jno
inc
jno
loopne
or
adc
in
pop
int3
xor
xchg
repz
lods
aam
push
jnp
mov
jmp
fyl2xp1
xchg
pop
xor
cmpsb
jae
inc
add
movb
rcl
int
sub
into
lds
mov
dec
mov
or
push
push
bound
sbb
into
flds
imul
adc
mov
dec
jbe
xor
loop
dec
test
mov
fmuls
mov
out
imul
lods
sub
shll
push
ret
jbe
inc
and
xorb
mov
add
aas
sub
mov
cmp
mov
insb
dec
cld
scas
push
mov
pop
jbe
dec
jmp
mov
lods
xchg
and
jl
inc
mov
xor
jecxz
call
mov
clc
cmp
ljmp
mov
xor
cmp
dec
out
call
jecxz
pop
jle
mov
movsl
or
jle
inc
sub
xchg
sahf
outsl
or
int
addr16
inc
les
fbstp
in
mov
xor
imul
jg
mov
fwait
lret
test
sbb
inc
out
jmp
cld
push
lock
adc
ljmp
mov
shlb
cwtl
sbb
inc
pop
adcl
cmp
popf
mov
pop
ds
mov
jae
fistps
and
add
sbb
and
and
push
shrb
mov
xor
jecxz
mov
daa
pop
sbb
push
adc
out
je
mov
mov
loopne
mov
pop
gs
int
xchg
jns
dec
mov
xorb
test
jb
mov
add
cmpsb
add
notb
imul
pop
in
sub
jbe
xchg
sbb
bndstx
fstps
in
adc
pop
xor
mov
sbb
lcall
pop
jo
push
sahf
mov
xchg
add
xchg
cmp
icebp
lahf
sub
jmp
pop
dec
sbb
push
or
and
fs
repnz
dec
inc
in
pop
xor
xchg
outsb
sub
sbb
sbb
aad
outsl
mov
adc
imul
rcrl
inc
insl
sub
pop
test
jnp
pop
sbb
sub
sub
imul
and
icebp
int3
pop
ljmp
mov
xchg
sub
mov
pushf
stc
lret
cmpsl
sarl
lock
sbb
xchg
mov
push
std
cs
test
ret
pushfw
nop
adc
xor
inc
scas
jmp
xchg
rcl
sbb
mov
imul
gs
rcr
xor
adc
inc
dec
mov
lock
sbb
add
test
test
jnp
cwtl
movsb
aas
and
add
rcll
test
sbb
mov
and
into
xchg
aam
dec
js
out
data16
rorl
cmpb
pop
pop
jl
xor
insl
outsb
pop
jne
adc
fldl
insl
pushf
sbb
push
in
aad
inc
dec
enter
aad
lret
cmpsb
negl
cltd
inc
inc
and
mov
int3
jp
popa
insb
mull
push
int
pop
mov
cs
sub
jg
into
xor
rcl
mov
xor
or
jne
into
gs
aas
sahf
add
fstl
or
push
out
dec
inc
int
ret
xlat
lret
lods
xchg
fnsave
daa
mov
ficompl
addr16
cmp
inc
out
clc
jb
mov
std
jb
adc
int3
or
xchg
xchg
adc
test
jmp
jb
xchg
adc
mov
and
push
imul
jb
mov
sub
jp
imul
movsb
pushf
adc
inc
add
sub
mov
sub
xchg
and
dec
and
hlt
addr16
ret
test
dec
cwtl
mov
cmp
mov
sbb
cmpb
pop
stos
sub
xchg
and
dec
arpl
fisubs
xchg
in
jl
es
inc
mov
jle
dec
sbb
aaa
fadds
repnz
xor
mov
or
orb
cmp
jno
pop
ds
sub
xchg
cs
imul
addr16
push
inc
mov
mov
out
mov
dec
mov
xor
pop
cmc
adc
cmc
inc
movsb
addr16
add
call
pop
pusha
je
aam
mov
sahf
jns
add
stos
mov
lea
pop
mov
pop
adc
lods
mov
xchg
mov
mov
sbb
inc
or
push
sbb
jbe
inc
in
mov
stc
xor
adc
pop
aaa
add
push
jo
std
mov
ljmp
add
fsubs
in
sub
jbe
test
flds
jg
push
ljmp
jnp
mov
das
sub
and
jne
out
jl
scas
iret
repz
cmp
pop
mov
xor
push
mov
mov
dec
jne
mov
mov
mov
jae
mov
into
lods
pop
ret
sub
cmpsl
mov
loope
cmc
cli
sbb
sbb
inc
mov
adc
sbb
out
sbb
adcl
aas
jbe
dec
xor
aam
ss
jae
dec
mov
repnz
jge
push
jnp
jmp
cld
dec
movsl
out
xchg
and
sbb
dec
add
fmul
or
push
xor
cli
popf
jae
or
sbb
jo
xor
add
mov
pop
addr16
fbstp
push
add
stos
jae
stc
loop
push
push
rcll
movsl
sbb
insl
dec
cmpsb
mov
and
pop
in
sarb
outsb
test
lahf
push
filds
shr
in
sub
test
sti
jo
jl
stos
shll
roll
xor
mov
or
test
xchg
xor
testl
or
repnz
jg
test
sbb
pop
les
mov
inc
lret
lcall
xchg
rol
insb
lcall
clc
and
cltd
les
adc
aaa
mov
or
dec
out
and
xchg
pop
add
pop
cwtl
cmpsb
inc
ret
movsb
addr16
test
adc
xor
dec
es
int
cmp
pop
xor
rorb
out
lea
jecxz
dec
adc
loop
or
mov
sbb
mov
and
popf
jae
dec
jae
inc
xchg
jb
xor
push
adc
arpl
xchg
adc
in
inc
and
pop
pop
scas
pop
ss
loop
xor
repz
fs
pop
cmp
test
pop
lock
jns
dec
adc
hlt
mov
jns
sbb
ficoms
mov
add
es
inc
inc
pop
loop
in
stc
fldenv
push
aaa
mov
lods
popa
mov
int3
inc
fld
insl
out
mov
and
jae
xchg
adc
mov
fstps
push
push
sub
fcmovnb
out
stc
xor
cltd
cmove
mov
cmp
jns
movsb
incb
arpl
testl
call
adc
sub
ljmp
dec
ficompl
lods
xchg
adc
pop
mov
or
pop
add
mov
es
icebp
cs
fmuls
mov
jge
mov
and
movsb
mov
mov
xor
xchg
fs
js
cmp
lcall
cmp
enter
adc
rcrl
jae
stc
jecxz
push
and
out
sub
lahf
sub
cmc
cli
cmpb
sti
imul
cmc
fisttps
fdivs
rdtsc
push
aad
push
rclb
cmpsb
jae
pushf
push
in
cmp
pop
push
xlat
inc
mov
in
pop
bound
aad
rorl
jl
insl
push
mov
addr16
test
andb
into
sarl
cmp
inc
or
stc
stos
mov
jo
imul
neg
fsubl
or
xlat
xchg
dec
mov
lret
popa
inc
in
sahf
or
test
mov
add
test
inc
adc
imul
adc
sbb
aam
mov
cld
fwait
mov
mov
dec
fnstcw
xchg
andb
xchg
in
stos
stc
sbb
popa
mov
mov
add
mov
fs
mov
push
cltd
popf
stc
rorl
lods
mov
shr
mov
insb
das
mov
popf
scas
inc
sbb
cli
movsb
push
int3
ficoms
mov
push
mov
dec
int
cld
mov
sub
push
call
lods
mov
jmp
mov
or
or
outsw
icebp
loopne
pop
mov
aaa
xor
ret
mov
pusha
xrstors
push
arpl
stc
hlt
jns
adcl
inc
jmp
scas
dec
fbld
ror
les
adc
pop
addr16
sti
repz
pushf
push
xchg
inc
leave
or
enter
lea
stos
rcrl
hlt
into
sub
sbb
adc
push
rol
jne
mov
call
cmpsl
fimuls
mov
mov
cmp
imul
in
out
rclb
outsb
cmp
and
mov
movsl
pushf
mov
mov
or
push
sbb
lods
cmp
clc
push
or
sbb
dec
mov
leave
mov
jnp
jo
ret
popf
arpl
push
int3
push
jg
hlt
xor
pop
or
sbb
cs
loope
sti
enter
movsl
addr16
sbbl
je
roll
flds
loopne
or
xor
andl
mov
push
divb
aad
movsb
pop
jne
cltd
rcll
lods
in
int3
jg
push
cmc
adc
lock
adc
mov
je
mov
cmc
inc
cmp
xorl
lret
mov
insb
scas
pushf
xor
xchg
inc
in
sub
mov
jns
popa
hlt
pop
es
lock
add
mov
pop
jl
and
pop
push
mov
popf
scas
xchg
mov
or
dec
jmp
pop
std
adc
xor
out
sti
jecxz
je
rcrb
out
xchg
adc
out
popl
pop
in
andb
cmp
fisttpll
add
inc
sarl
adc
aas
mov
lcall
cmp
in
pushf
and
jns
mov
loope
bound
cltd
repz
jge
mov
push
inc
jp
cmp
test
pop
jbe
pusha
adc
sbb
dec
push
lcall
mov
cmp
jecxz
mov
or
gs
lock
xchg
mov
lea
mov
xchg
push
test
or
adc
dec
mov
or
mov
mov
add
test
je
push
out
dec
add
aas
cli
jle
loop
lahf
fs
dec
nop
bound
loope
and
clc
mov
jmp
dec
stos
mov
inc
stos
inc
xchg
fcoms
cld
pushf
push
xor
and
pop
stc
push
push
or
inc
insb
mov
loope
in
aas
sbb
inc
sub
pop
sbbl
aaa
icebp
pop
pop
and
stos
cmp
add
jecxz
sti
clc
incb
and
xor
pop
dec
dec
int
rolb
or
call
jne
push
es
mov
jmp
addr16
movsb
es
ja
negl
or
pop
xchg
push
or
inc
and
and
sti
mov
push
faddl
out
push
hlt
mov
xor
mov
adc
inc
and
xor
leave
imul
adc
mov
stos
cmp
arpl
daa
lahf
les
in
inc
inc
call
cmc
sub
cmp
xchg
jp
lods
add
jg
xor
xorb
cmp
shrl
cmp
mov
in
repz
cmpsl
ret
pop
or
sbb
int3
dec
shrl
xchg
sarl
push
cli
jns
frstor
fcmovb
call
inc
adc
stc
push
fstpt
xchg
push
sahf
js
and
stos
hlt
or
mov
xor
ljmp
push
add
or
es
adcb
mov
out
mov
lods
cmp
std
movsb
test
repnz
adc
stc
cld
inc
sahf
aaa
call
pop
dec
or
fisubrs
out
lock
out
lods
jne
loop
movl
loope
and
shll
jbe
mov
xchg
push
in
in
fcoml
inc
loop
pop
rcl
pop
cltd
push
mov
mov
fisttpll
xchg
aad
xor
ss
dec
std
ret
jl
mov
sub
bound
insb
mov
cmp
inc
inc
xchg
std
dec
add
mov
push
adc
data16
jle
dec
mov
sbb
jns
cwtl
call
in
sbb
leave
jo
sahf
addl
je
mov
mov
push
fdivl
xor
ljmp
test
test
sub
scas
mov
adc
sbb
in
pop
mov
int3
flds
push
orb
call
stos
daa
popa
mov
pop
in
jle
scas
jae
fadd
lea
sbbl
mov
iret
fdivs
sub
sbb
mov
inc
mov
mov
cwtl
push
dec
test
sub
xor
sahf
dec
jmp
fadds
popa
mov
jbe
xchg
mov
out
outsl
ss
lods
imul
and
lret
adc
sbb
lods
sbb
insb
xchg
add
xor
cmp
adc
ljmp
jmp
fildll
mov
xor
repnz
lret
dec
not
idivb
xchg
pushf
pop
dec
jo
sub
cmp
imull
cmovl
jbe
ljmp
imulb
movsb
mov
push
inc
mov
push
push
outsl
ljmp
inc
dec
add
aad
outsl
cmpsl
int3
sbb
xchg
pusha
addr16
xchg
sub
mov
or
mov
pop
idivl
lret
cmp
imul
or
jbe
cmpsb
cmp
stos
repnz
xchg
or
fs
stos
add
add
cmp
lcallw
sub
cmp
mov
adc
notl
cmp
jp
inc
adc
push
lahf
aad
enter
mov
les
lcall
jne
mov
js
lcall
sbb
mov
arpl
adc
adc
push
add
jl
movsl
sub
int3
sub
mov
stos
pop
test
gs
test
je
adc
cmp
mov
xchg
popa
fbstp
js
dec
sub
sub
xchg
push
sub
xor
stos
inc
jge
and
jge
push
cwtl
cmovl
and
sbb
push
or
lock
arpl
dec
jl
in
dec
test
pop
test
adc
cmp
ja
out
inc
jmp
aaa
xchg
loop
xor
inc
bnd
sbb
lods
and
mov
in
adcl
std
arpl
jge
xor
aas
push
mov
cmp
leave
aas
dec
decl
les
dec
sub
lods
mov
inc
mov
mov
pop
popa
aas
xor
lds
insb
out
mov
xor
mov
dec
movsb
jp
out
inc
pop
ds
test
js
test
stos
inc
push
aad
xchg
in
outsl
mov
cmp
cmp
dec
cltd
mov
leave
ja
lods
imul
pop
xlat
jmp
mov
adc
mov
or
std
bound
pusha
xchg
and
ss
loop
mov
enter
fwait
lcall
mov
ljmp
push
xchg
arpl
jle
push
clc
mov
mov
scas
outsl
lods
jb
sahf
leave
push
mov
popa
je
ss
inc
mov
mov
sbb
mov
jo
xchg
xchg
in
out
sbb
icebp
popf
rcrb
gs
into
push
sar
fmuls
push
pusha
arpl
or
sub
sahf
repz
mov
addr16
out
dec
jnp
leave
add
imul
and
jmp
mov
inc
arpl
jnp
inc
xor
or
mov
dec
daa
aaa
xchg
xorl
movsb
mov
inc
test
sbb
push
jns
data16
out
or
sbb
aaa
mov
mov
push
mov
mov
js
push
jnp
mov
shlb
gs
and
call
mov
enter
enter
and
mov
mov
ja
push
out
mov
push
xchg
std
adc
sbb
lea
mov
test
dec
dec
in
mov
outsl
xchg
and
ljmp
ret
imull
jg
mov
or
int3
daa
ror
stc
out
mov
movsl
loop
pop
xchg
xchg
cmp
xchg
mov
push
jle
out
push
imul
xor
popf
insb
cmpsl
inc
rcll
mov
push
inc
add
pop
add
aaa
fidivs
ljmp
arpl
push
inc
in
push
ss
push
ja
cltd
lcall
cli
cwtl
cwtl
insb
sub
stc
mov
insb
je
push
lret
xor
stc
jmp
xchg
lahf
je
pop
repnz
movsl
outsb
xchg
or
imul
and
and
xor
loope
mov
sub
sbb
push
dec
es
lea
je
ss
icebp
cmp
pop
int
xor
jg
fs
pop
adc
mov
enter
insl
mov
pop
pop
cwtl
ljmp
jg
or
xor
shrl
das
xchg
js
mov
dec
or
jno
jbe
mov
pop
pop
decl
scas
sub
mov
sub
push
sarl
test
jmp
jl
popf
hlt
fwait
pop
sbb
sub
cld
jecxz
pop
push
inc
int3
pop
push
lcall
sbb
inc
int
scas
push
lods
shlb
xor
cmp
std
pop
arpl
dec
or
xchg
xor
mov
int3
mov
sbb
cli
inc
int3
add
ljmp
shrl
or
lods
jae
jnp
push
jmp
sbb
jno
sbb
ds
sbb
scas
dec
fadds
mov
fisttpl
sub
mov
pop
sbb
stos
icebp
sub
cmp
xchg
add
pop
cmp
je
pop
cmpsl
xor
mov
xchg
inc
jbe
add
fldenv
pop
in
inc
mov
mov
adc
rcll
dec
enter
jb
push
fs
and
sbb
xchg
cld
mov
mov
lahf
lock
stc
lods
cmp
das
adc
js
mov
inc
hlt
jns
pop
jecxz
mov
lret
lret
jae
xlat
daa
push
add
addr16
pop
hlt
mov
ja
push
hlt
pop
stc
pushf
out
loop
insb
ja
push
pop
test
in
pop
lods
adc
xor
push
push
lea
aam
aas
or
xchg
and
pop
aad
mov
aas
das
sbb
popw
mov
push
insb
cwtl
in
loopne
insb
jle
sbb
mov
mov
jge
inc
pop
mov
shlb
negl
adc
mov
stc
aas
testl
imul
shll
dec
sub
dec
aam
ss
adc
pop
fsqrt
lods
pop
sbb
xchg
stos
arpl
cmpsl
or
hlt
ds
xor
inc
mov
push
and
push
pop
lea
imul
mov
adc
cmpsl
sbb
ret
lock
or
dec
jp
jecxz
shrb
push
sub
inc
test
and
adc
fcom
sub
outsl
push
mov
sub
and
and
inc
push
mov
out
xchg
rcrl
add
pop
add
lcall
dec
pop
xor
xchg
dec
scas
jnp
std
fsubs
mulb
pusha
inc
jbe
loope
push
jo
imul
fnstcw
and
stos
fidivl
jns
and
ds
push
popa
cmc
lret
cwtl
cmp
jmp
insb
jg
test
cld
add
jae
stc
and
rorl
cs
cli
jo
cmp
aad
outsb
stc
mov
ss
stos
cmpsl
sbb
fucomp
xor
aas
ss
dec
data16
dec
xor
insl
xor
and
and
rcl
jle
mov
subb
pop
repnz
adc
sbb
mov
adc
mov
stos
loopne
movsb
dec
adc
pop
fcoms
cmp
mov
lret
in
jle
adc
mov
jae
mov
push
xchg
into
sahf
pop
stos
mov
dec
icebp
cltd
fs
cmpsb
aad
dec
stos
jp
jbe
sbb
ds
sbb
adc
out
dec
andl
push
mov
out
push
inc
or
dec
idivl
imul
xlat
xor
jo
out
jge
js
dec
cmp
mov
sub
cmc
mov
lcall
push
fistps
aam
scas
icebp
push
mov
test
xrelease
mov
and
ret
popf
xchg
and
outsb
out
and
pop
dec
repz
sahf
sbb
cld
or
xor
ss
jecxz
mov
fiadds
push
cmp
lods
jp
imul
rcr
and
ss
aaa
sub
je
jmp
mov
dec
popl
xor
mov
push
mov
les
push
lea
ret
mov
scas
into
add
adc
jg
cs
sub
jns
je
sbb
addr16
ja
orb
add
xchg
jno
icebp
push
adc
dec
sbb
lret
fldenv
xchg
mov
jb
dec
fbstp
dec
das
jg
fmull
push
daa
mov
mov
lods
insl
xchg
in
xor
dec
add
sub
jo
and
dec
xchg
mov
xchg
push
jle
sarb
jecxz
cmpsb
lock
dec
xor
in
sbb
je
mov
push
mov
ficompl
and
psubsb
sub
lock
ret
fisubs
es
sub
roll
cmc
adc
dec
xor
pop
cwtl
cmp
movsb
push
loope
mov
mov
scas
jmp
insl
adcb
inc
xchg
push
and
test
or
jmp
insb
and
movl
inc
adc
xchg
outsl
jno
fisubrl
mov
fisubrl
sbb
ret
or
push
push
in
test
xlat
dec
shr
icebp
inc
or
cwtl
movsl
mov
xchg
push
popa
sbb
inc
js
add
inc
repnz
mov
cltd
adc
mov
push
sub
xchg
stos
jbe
mov
mov
and
push
fidivrs
xchg
incb
jae
shll
pop
mov
sub
dec
push
cmp
aam
subb
repnz
fucomi
fs
test
loop
lret
cltd
adc
jmp
xlat
lods
cmp
test
mov
popf
aaa
lods
adc
loope
int3
out
adc
add
dec
jg
adc
mov
xchg
xchg
jl
daa
and
insb
inc
dec
icebp
lods
orl
xor
sbb
adc
movsb
fldcw
rcrb
dec
dec
cmp
mov
sub
out
xor
int
xchg
sub
mov
xchg
orb
lret
xor
iret
cmp
and
test
add
cmp
mov
stc
add
das
idivl
xor
pop
jle
add
jbe
push
push
aaa
add
sbb
out
mov
cmpsb
mov
dec
pop
mov
lds
test
cmpsl
adc
xchg
scas
aas
pop
flds
dec
pop
idivl
outsl
xor
inc
add
add
lea
xchg
js
pop
mov
stc
push
jmp
stc
leave
les
push
test
sub
in
js
mov
add
adc
jg
push
arpl
fwait
cmp
movsb
sbb
xor
xor
sub
mov
pop
jne
popf
jg
mov
mov
cmpsb
ja
pop
jnp
mov
pop
push
lds
xor
scas
and
mov
cli
mov
sub
div
push
inc
sbb
push
and
call
cwtl
xor
in
dec
sbb
mov
out
and
adc
add
xchg
cmp
fwait
dec
test
nop
inc
inc
rorb
lds
mov
mov
pop
adc
in
xor
xchg
popf
dec
leave
dec
out
dec
or
push
lret
out
test
test
mov
out
sahf
sbb
fbstp
jo
cmp
enter
lods
sbb
jge
fsubl
sbb
xchg
out
cmc
imul
call
cwtl
das
jns
mov
inc
mov
movsl
fdiv
push
mov
out
adc
mov
jb
mov
aam
jns
test
int3
mov
jl
fmuls
fstpl
loop
rcrl
mov
js
mov
push
xchg
or
xchg
pop
roll
mov
aas
ret
xor
aas
and
loopne
inc
rcll
nop
not
nop
popf
mov
subl
jnp
mov
push
push
inc
fs
lret
mov
test
adc
hlt
shlb
cwtl
lods
pop
jns
leave
mov
jnp
ljmp
jecxz
adc
out
dec
adc
jecxz
xor
xchg
and
enter
or
in
and
aam
mov
xor
xchg
add
clc
mov
inc
scas
xchg
ss
insl
dec
mov
push
inc
pop
enter
outsl
test
mov
cmp
adc
ss
jmp
mov
pop
dec
push
push
outsl
inc
imul
shll
stos
fiaddl
fadds
das
adc
ss
jle
mov
sbb
xor
jnp,pt
ret
inc
rorl
push
inc
jle
pop
xchg
xor
add
cmpsl
aas
popl
and
jbe
jge
sbb
stc
aad
push
or
xchg
ret
pop
and
scas
xor
mov
xchg
aaa
arpl
xchg
outsb
inc
push
pop
jg
mov
xchg
aaa
lods
insb
mov
lahf
pop
stos
loopne
fsts
jnp
cmpsl
inc
repnz
push
xlat
inc
xor
hlt
mov
test
popa
nop
arpl
outsl
mov
inc
sbb
inc
imul
sti
push
adc
xor
add
test
decl
xchg
mov
test
or
fwait
mov
rcrb
pop
stos
sbb
xor
dec
xor
lret
and
mov
or
and
cmp
mov
insl
mov
ror
and
out
sub
fnstsw
lds
jae
xorl
sub
js
or
pop
in
inc
mov
xorl
test
movsb
lret
insl
shr
xchg
negl
dec
mov
cmp
xor
or
ss
mov
push
or
ss
test
das
pop
sub
sub
test
mov
xchg
incb
mov
ret
shlb
mov
cmp
jo
push
xchg
xor
testb
dec
lret
inc
xchg
adc
mov
scas
ja
neg
loopne
dec
mov
jnp
loop
arpl
inc
icebp
leave
popa
popf
cmc
in
mov
push
ret
xor
push
imul
in
xor
pop
pushf
pop
cmc
mull
sub
jbe
stos
push
push
or
test
fs
sub
xchg
adc
addr16
or
xchg
mov
outsb
add
in
fdivl
xor
mov
loop
and
push
cmc
enter
mov
jmp
les
dec
les
push
xor
jnp
jo
loope
in
sbb
mov
jg
scas
inc
xchg
bound
mov
cmp
xlat
jbe
fdivr
lods
sbb
jns
int
lret
xor
andl
jge
clc
incb
fildl
fsubrp
pop
push
sbb
add
jns
push
in
dec
jno
or
xor
push
gs
jo
push
mov
mov
das
add
mov
insl
aad
in
mov
cwtl
das
outsb
sub
pop
sbb
std
xor
mov
in
add
add
mov
cltd
sahf
das
movsl
mov
push
and
xor
push
ss
ljmp
dec
pop
loopne
cmp
stos
test
adc
ret
or
pop
ret
or
divb
pushf
add
imul
pop
ret
cmp
sub
cld
xchg
imul
cmpsl
sarl
std
das
xchg
push
jb
mov
xchg
xchg
sbb
cmpsb
lods
lea
xchg
into
jb
nop
push
int
rorb
adc
insl
add
stos
in
jns
shl
adc
cmp
mov
and
testb
xor
add
popf
mov
shrb
adc
pop
add
push
aad
int3
jge
xlat
data16
in
mov
mull
cmp
or
mov
aaa
push
lahf
lds
std
hlt
ret
outsb
das
mov
pop
push
popf
jnp
imul
imulb
jnp
stc
ljmp
dec
je
test
dec
out
scas
xchg
insl
sti
push
mov
leave
adc
push
out
gs
bound
inc
xor
or
fidivrl
pop
in
add
cmp
aaa
arpl
outsb
xchg
xor
test
popa
sahf
adc
mov
lods
bound
sub
cmp
jb
mov
repz
push
inc
or
ds
fadds
dec
mov
ret
das
lock
lcall
pop
pop
test
cmp
and
jg
adc
outsl
mov
sti
fdivrp
insl
dec
popa
xchg
xor
ja
mov
imul
xor
push
push
aaa
in
inc
lods
adc
icebp
lahf
cmc
jp
push
sub
es
dec
push
into
cmpsl
lods
into
repz
push
inc
das
incb
pop
nop
and
jnp
unpcklps
xchg
std
popa
push
out
lods
sarl
es
stos
stos
loopne
lods
add
sub
pop
or
add
sub
cmc
or
push
inc
mov
cmp
cmp
arpl
mov
sbb
dec
cmc
pusha
or
push
cld
pop
push
xchg
xcrypt-cfb
cmpsl
pusha
je
int
and
xor
cmp
aam
xorl
aaa
in
dec
push
add
add
test
nop
dec
test
sbbb
or
sub
add
in
adc
aas
sbb
outsl
out
aaa
cmpsl
adc
fwait
add
mov
loopne
mov
push
rcll
aam
jne
or
pop
pop
xorb
cmpsb
xor
sub
int
fcomip
dec
pop
das
lahf
xchg
int3
sti
mov
fdivl
scas
int3
mov
popa
ss
test
add
jecxz
ret
int3
mov
pop
fistpl
out
out
imul
pop
jne
in
jo
lods
out
push
sahf
adc
push
xchg
icebp
and
arpl
test
mov
mov
xchg
push
push
xlat
lds
dec
loopne
dec
out
flds
dec
stos
jo
enter
push
push
sbb
inc
cmp
outsl
adc
sbb
sbb
sti
loopne
dec
fdivs
flds
xchg
push
and
sbb
cmpsl
ret
jns
das
frstor
pop
mov
ljmp
push
clc
jecxz
ret
arpl
pop
push
jo
jb
xor
scas
icebp
pushf
andb
sub
lods
clc
mov
pop
pop
inc
dec
jmp
dec
scas
aas
mov
push
clc
arpl
lahf
inc
fsts
cmp
pop
jns
rdpmc
push
sub
call
and
jmp
and
dec
or
movsl
lea
jmp
push
es
loopne
ret
mov
jb
shlb
cmp
out
fistl
add
dec
int
push
sub
xlat
cwtl
and
dec
xor
mov
movsl
out
test
cli
int
mov
dec
fs
and
mov
dec
cwtl
mov
sti
push
stos
mov
add
stos
pop
movsl
sub
sti
push
push
adc
test
dec
cmp
pop
ret
mov
cmp
sbbb
movsb
jp
pop
xchg
xchg
inc
adc
ficompl
and
pop
xor
xor
or
pop
fmull
cwtl
shll
test
pop
inc
dec
mov
pop
out
jmp
mov
jb
lret
push
sbb
xor
popf
inc
adc
cmp
adc
in
mov
jnp
lret
inc
or
xor
in
sbb
movsb
jns
popw
minps
roll
push
outsb
notl
push
inc
loop
lret
outsb
imul
mov
mov
repz
sub
mov
ror
and
leave
push
xor
addr16
cmpsb
jecxz
push
xor
mov
std
ret
xlat
and
sub
or
sbb
mov
cmp
inc
push
sbb
test
jp
lds
loope
jle
push
push
push
arpl
subb
mov
or
pop
xor
xor
jg
cld
or
add
pop
mov
mov
in
imul
imul
cs
add
jmp
jmp
aam
dec
jge
add
ss
xor
xchg
enter
pushf
arpl
movsl
sub
add
jmp
add
adc
pop
xor
icebp
cmpsl
push
out
je
push
outsl
inc
cwtl
mov
sub
ss
xor
push
inc
frstor
cmc
push
mov
data16
pop
jg
xlat
mov
sub
loopne
out
sub
mov
aas
push
jbe
xchg
ljmp
adc
pushf
pop
lods
jne
push
jl
mov
sub
dec
lret
gs
adc
mov
rclb
jmp
inc
mov
rcll
sbb
jmp
push
xor
aam
mov
push
adc
or
test
imul
sub
adc
and
or
call
mov
icebp
cmpsl
xor
fs
or
mov
mov
push
imul
dec
push
jne
stc
mov
pop
fsubrl
movsl
adc
sub
daa
movsl
mov
or
pusha
xchg
daa
mov
sbb
dec
mov
pop
loop
mov
mov
sub
pop
push
mov
scas
dec
lret
mov
lock
rorl
xor
jb
mov
mov
or
leave
mov
pop
daa
inc
jge
mov
imul
cmp
mov
push
stos
loope
pushf
andb
jp
push
xor
scas
cs
cmp
cwtl
or
cmp
xchg
and
les
cs
push
jle
inc
cli
repz
lods
add
jbe
cmp
shll
mov
xor
sub
test
xchg
mov
insl
pusha
jp
cmc
icebp
jo
push
and
int3
xor
inc
negl
daa
pop
in
jno
add
cmp
xor
mov
fdivs
mov
cmpsl
push
in
add
and
xor
xor
dec
xchg
jle
insb
call
shrl
lret
push
jo
inc
push
jp
stos
cmp
out
outsl
pop
pop
sbb
ficoml
jne
xlat
int3
jno
rorb
test
lret
pop
rcrl
nop
mov
add
xchg
pop
push
inc
int
lock
mov
pop
xchg
shlb
xor
je
aad
ljmp
test
xor
in
popa
cmp
js
sbbl
pop
sbb
je
and
pop
add
rcll
iret
ret
cmp
mov
in
cmpsl
adc
mov
lret
imul
push
imul
in
inc
stos
or
push
enter
fildll
rorb
inc
xchg
lret
push
xor
jb
fdivrl
cmp
shll
cmp
fwait
cmpsl
jmp
and
mov
jnp
mov
arpl
sub
sbb
dec
shll
scas
sbb
xor
push
mov
xor
mov
filds
or
mov
hlt
lods
enter
and
xchg
dec
xchg
sub
imulb
fmull
pop
pushf
mov
pop
xor
inc
test
push
movsl
loope
lcall
inc
ret
jo
arpl
call
mov
lea
xor
std
xchg
out
scas
inc
lods
xchg
into
lea
jmp
adc
mov
je
arpl
mov
aaa
cmp
push
or
mov
dec
push
pop
or
xchg
mov
sbb
jbe
aaa
pop
out
mov
jp
aad
out
push
iret
arpl
inc
xor
lods
adc
es
negb
aam
xchg
xlat
fwait
jmp
test
stos
jmp
ds
push
adc
inc
push
lods
fildl
hlt
mov
xchg
push
mov
mov
jo
stc
jg
sbb
sub
mov
jns
sti
pushf
push
and
aaa
mov
pushf
in
imul
mov
sub
pushf
lods
fsubrs
adc
call
testl
repnz
insb
jae
stos
push
push
mov
add
mov
ds
xor
mov
adc
fcomps
dec
jp
mov
mov
xor
pop
jg
add
mov
xor
rcll
pop
outsl
jne
pop
or
adc
stos
popa
mov
in
test
test
pop
outsl
data16
insl
pop
mov
xchg
popa
and
test
jmp
mov
int
dec
ret
cmpsl
add
cmpsl
cli
in
or
xchg
mov
lcall
jle
add
and
out
aad
scas
pop
out
adc
int
popa
xchg
test
or
push
imul
cwtl
dec
push
push
cli
pop
mov
pop
mulb
add
push
push
jo
bound
jecxz
mov
stc
xor
ja
cmpsb
or
dec
lea
in
loop
inc
mulb
dec
xchg
jb
fucompp
mov
sbb
int3
repz
scas
xchg
idivb
or
and
fdivrs
sbb
int
xor
mov
movsl
cmp
or
outsb
jl
and
insb
xor
and
jg
jb
aaa
sbb
js
mov
mov
fdivrs
aas
sub
into
cli
inc
fmuls
rclb
fmul
dec
jge
fldenv
jb
rorb
sbb
mov
jmp
mov
jmp
jmp
ret
mov
rclb
add
lcall
fwait
xchg
mov
push
xchg
andb
out
stos
test
dec
pop
push
mov
mov
xor
push
enter
or
inc
sub
lock
ret
jge
cld
dec
lock
push
mov
mov
fsub
lods
inc
in
push
inc
rcrb
jns
jae
popa
sub
movsl
mov
cltd
jbe
and
push
cmp
xor
clc
pop
fadd
fdivrs
jne
les
mov
nop
loope
pop
lcall
stc
push
iret
rcll
mov
mov
insb
pop
aaa
sbb
testb
push
add
cmp
jns
in
lds
xchg
nop
push
dec
scas
push
mov
test
sbb
out
xor
mov
in
repnz
daa
sub
and
dec
outsb
aaa
push
shlb
je
mov
leave
cwtl
je
stc
out
push
test
loope
outsl
sbb
push
jmp
stos
ljmp
lret
test
shl
xchg
cmp
or
pop
dec
cmpsl
xchg
xchg
jns
mov
mov
pop
shrb
outsl
les
mov
stos
test
cltd
xchg
cwtl
and
aaa
clc
inc
mov
dec
cmc
outsl
sub
subb
imul
and
mov
pop
in
sub
shlb
nop
push
jnp
ja
roll
jl
cmp
sub
pop
pusha
lds
data16
in
fstps
std
dec
out
test
inc
in
daa
cmp
dec
jmp
nop
sub
shl
mov
sbb
mov
pop
leave
ds
cwtl
sbb
inc
test
aad
push
jle
push
xchg
cmp
or
dec
fidivl
pop
mov
das
out
add
mov
and
add
cmp
cmpl
mov
mov
or
dec
jecxz
jmp
jp
sti
push
addr16
jno
aas
pop
pop
inc
xor
cmc
jae
stos
sar
divb
jbe
repnz
xchg
ret
ljmp
stc
mull
out
lea
jp
mov
mov
add
mov
das
cmp
lock
jno
cmp
cmpsl
iret
pop
outsb
xchg
js
cli
adc
inc
push
xchg
push
mov
scas
xor
sbb
mov
jnp
dec
popa
pushf
pop
mov
js
mov
mov
or
leave
sbb
add
cltd
xor
repz
lds
insl
test
es
cs
mov
movsl
push
sub
fisubrs
stos
les
arpl
and
adc
fstps
out
fimull
jl
or
mov
pop
push
pop
mov
dec
out
mov
movl
lret
hlt
movsb
push
pop
and
add
aam
mov
mov
inc
sti
push
out
mov
xchg
jl
jmp
push
mov
sbb
rol
mov
out
mov
fadds
and
xor
inc
pop
push
sub
mov
and
mov
lcall
inc
jns
sub
inc
inc
pusha
dec
pop
xor
cmp
test
mov
js
xchg
pop
aaa
or
arpl
call
jo
pop
xchg
loope
add
cmp
mov
addr16
nop
mov
mov
or
cmp
xchg
js
scas
mov
add
test
cmp
mov
sbb
dec
js
fmulp
fldcw
jmp
fidivrs
sub
cmpsb
add
dec
xchg
push
and
fidivl
lock
je
fistl
jb
or
das
adc
mov
in
jl
iret
std
aad
cmpsb
ror
push
add
sub
cmp
sti
inc
cmc
jg
imul
mov
mov
push
rorb
rcrl
push
sbb
mov
pop
pop
sbb
lcall
adc
mov
mov
movsb
sub
cmp
sbb
or
xor
mov
jns
xchg
xchg
imul
hlt
sbb
jmp
inc
dec
jo
test
call
ret
outsb
pop
or
add
mov
je
dec
mov
popa
imul
cmp
jl
inc
mov
mov
xor
test
rorl
fcomp
test
fldt
mov
out
mov
movsl
cli
movb
movsl
rcll
sbbl
nop
inc
mov
fidivrl
iret
inc
cmpsb
cmp
jge
fldcw
mov
pop
dec
sub
fwait
mov
loopne
push
outsb
cmp
pop
comiss
sbb
xor
xor
xchg
popa
mov
rcll
pop
movsb
xlat
pop
inc
ret
inc
testb
rorb
mov
stc
das
push
mov
ja
loopne
pop
pop
or
sbb
push
in
adc
or
mov
aam
in
cli
inc
jecxz
sbb
cmpsb
adcb
imul
jmp
movsl
sbb
mov
aad
inc
push
or
in
daa
jne
inc
or
mov
push
dec
push
push
ficoms
ja
add
cmp
out
jno
out
inc
rorb
lahf
in
add
push
test
ljmp
stos
cmpsb
sub
push
mov
push
incl
sub
or
dec
dec
jle
push
mov
movsl
aam
mov
cltd
out
cs
lret
push
jge
sbb
out
jecxz
pop
les
mov
stc
mov
ss
fcompl
inc
cmp
jne
adc
loope
xlat
dec
test
int
popa
sub
pop
fldenv
xchg
mov
sbb
jmpw
repnz
inc
insb
into
lock
repnz
pop
insl
add
in
jbe
lret
push
fsts
jb
ret
and
sub
enter
cld
xor
andl
pop
outsb
mov
adc
sbb
push
cmpsl
and
mov
daa
dec
pusha
ret
in
sar
vmwrite
mov
add
popa
pushf
arpl
push
lods
nop
enter
loop
jle
push
pushf
xor
pop
push
jge
cmpsl
sub
cmp
add
inc
mov
push
mov
adc
aaa
ret
pop
fwait
aad
ret
loopne
out
mov
xchg
outsb
jne
stos
cmpsl
push
push
lds
xor
jle
sub
popl
inc
pop
rclb
mov
pop
popf
xchg
idiv
push
dec
jo
bound
jg
dec
fnstcw
jo
inc
pushf
test
adc
cmp
sub
push
jo
xchg
scas
in
jmp
cs
jecxz
rcll
addr16
push
mov
push
fcom
pushf
imul
mov
fistps
inc
clc
dec
xchg
pop
bound
dec
cmp
popa
shrb
mov
ds
or
popf
push
inc
fadds
inc
inc
jmp
rorb
je
mov
cmpsb
and
cmpsl
xor
addr16
push
jae
add
add
cli
inc
push
and
mov
cltd
or
xchg
aas
ds
pop
popf
dec
pop
sub
cmp
sub
aas
aaa
inc
adc
loop
outsb
call
rorb
lar
xor
in
outsl
xchg
push
daa
call
repnz
lcall
in
flds
lahf
mov
enter
push
les
jp
ljmp
scas
jg
sub
gs
lret
inc
imul
jne
pop
add
ds
xchg
jecxz
mov
lock
or
jnp
push
push
push
repnz
dec
cmc
push
mov
or
mov
nop
rorl
mov
stos
adc
mov
mov
stc
popa
fwait
pop
mov
loope
cmpsl
iret
mov
scas
filds
mov
adc
hlt
xchg
push
fcoms
cmp
and
insb
xlat
mov
mov
mov
cmpxchg
repz
gs
shlb
add
aaa
inc
out
mov
jb
cmp
dec
or
arpl
cltd
pop
icebp
mov
inc
jno
lret
inc
in
orb
pop
cmc
cmp
ficoml
lret
add
sahf
mov
or
lods
mov
lcall
mov
cmpsl
int
insb
push
scas
lret
scas
mov
mov
mov
mov
aas
cmpsl
cli
pushf
adc
mov
pop
jbe
mov
stc
inc
leave
les
jle
pop
pmulhuw
test
sub
dec
negl
xor
jge
dec
or
es
rcrl
sbb
and
jae
out
sbb
mov
pushf
jnp
sbb
and
inc
xchg
xor
push
mov
cmp
or
cmpsl
fs
rcrb
dec
ret
push
aam
in
fisubs
ja
push
xor
mulb
pusha
mov
xchg
sub
mov
sbb
pop
xchg
mov
xchg
dec
sbb
xor
dec
andl
cli
jbe
mov
add
push
mov
inc
or
rcll
lcall
dec
jge
shrb
jno
shrl
mov
sub
mov
jno
daa
mov
or
std
jl
pop
push
mov
and
push
enter
les
test
lret
jno
sub
add
psllq
adc
xlat
cvtpi2ps
lret
les
cmp
push
cmp
pop
dec
or
mov
push
fadds
icebp
push
enter
cmp
push
cmc
adc
test
or
push
fsub
push
jg
popf
sbb
add
and
mov
stos
xchg
data16
lcall
movsb
shrb
cmp
mov
fwait
cmp
mov
sub
jle
or
adc
push
xor
insb
mov
cli
xchg
cmp
cwtl
pop
inc
fidivs
push
pop
mov
sub
jb
jne
jne
mov
xor
push
out
push
pushf
mov
sub
jl
mov
adc
jb
ficomps
jbe
addr16
nop
roll
pop
and
xor
inc
stos
adc
fwait
ss
mov
cs
dec
iret
dec
gs
jns
mov
pop
sbb
gs
lahf
popf
sbb
es
xchg
sbb
rorb
mov
pop
push
and
sbb
test
and
cld
jbe
rclb
push
add
div
in
sub
int3
addl
out
mov
jge
mov
ret
adc
pushf
mov
fsubrl
push
subl
rorb
push
inc
mov
loop
stc
or
add
daa
por
fildl
stos
inc
roll
fldcw
ret
xchg
loope
aam
shlb
ss
ja
xor
push
mov
jns
fistl
aad
jge
dec
mov
cmp
xor
adc
fcomps
mov
and
pmaxub
jno
into
add
test
inc
push
or
cld
inc
pop
pop
imul
stos
push
movsb
lret
and
fistpl
and
adc
push
hlt
hlt
sbb
xor
fldenv
lock
rcr
or
insl
lcall
xchg
in
aam
push
dec
mov
or
stc
jl
data16
and
pop
pushl
cmpl
mov
daa
jne
fidivrs
imull
mov
aaa
pop
icebp
in
or
jae
shlb
mov
sbb
stos
inc
aas
jnp
bound
out
jbe
jmp
jb
pushf
test
data16
sub
ret
dec
pop
pop
cltd
sub
jbe
jmp
inc
or
dec
jno
ficomps
imul
cld
into
xor
in
push
outsb
cmpsl
std
sti
andl
shrl
bound
mov
sbb
jno
addr16
or
cmp
cmc
dec
dec
loope
sarb
push
pop
add
mov
js
bound
jb
adc
push
gs
dec
mov
test
lods
sub
xor
nop
push
push
mov
mulb
test
sub
pop
push
cmc
mov
inc
fdiv
mov
jmp
shrb
xchg
or
xchg
inc
xchg
dec
lret
add
loopne
into
cmpsb
jg
into
lcall
push
pop
cmpsb
and
and
in
sbb
mov
std
mov
xor
mov
cltd
fimull
cmp
mov
mov
add
divb
scas
jge
adc
xchg
test
push
xchg
jnp
adcb
sahf
arpl
bound
jle
fs
mov
aam
int3
adc
xchg
xchg
sbb
icebp
in
cld
loopne
inc
loopne
mov
adc
loop
lods
xchg
mov
dec
ja
or
xchg
xchg
or
scas
xchg
xor
xchg
cltd
ss
push
std
or
push
in
das
fnstenv
xchg
cli
test
mov
insl
inc
mov
lods
jbe
xor
mov
out
xor
int
fisubrs
stos
mov
js
call
pop
les
mov
stos
pop
add
dec
insb
insb
mov
sahf
and
imul
adc
stc
cmc
inc
mov
fldenv
lods
jbe
cmp
out
inc
xchg
sub
lds
incl
and
lret
adc
sub
xchg
push
adc
outsb
sbb
test
push
in
inc
sti
sbbb
les
mov
mov
push
or
or
push
inc
fwait
sbbb
testb
mov
jo
ja
jbe
rorl
mov
and
inc
push
fdivrs
add
in
dec
and
mov
mov
xchg
fsub
lock
adc
pop
loope
mov
inc
dec
shll
and
fwait
es
cwtl
sahf
and
testb
or
jbe
sbb
mov
add
mov
repz
adcb
mov
movsb
lret
aam
sub
aaa
jb
or
xor
sbb
and
xlat
aas
fiadds
xlat
das
lret
lea
mov
ja
jns
dec
aam
std
out
xor
xchg
test
xchg
addr16
out
and
mov
fildll
or
push
add
mov
dec
add
mov
mov
mov
das
hlt
bound
jp
lock
mov
rcll
outsl
xchg
jae
invd
es
xchg
pusha
mov
cmp
jp
in
mull
test
imul
add
clc
pushf
xchg
test
xor
sti
pop
or
inc
cs
inc
jbe
xchg
int
nop
push
cmpsl
mov
mov
xchg
stos
lahf
pop
aas
mov
insb
or
ret
mov
sti
aaa
jne
insl
mov
sub
aam
dec
sub
jo
ds
jns
xor
dec
sub
push
movsl
push
cmpsb
mov
insl
loop
jbe
fisubs
inc
push
enter
scas
or
lret
sbb
addr16
leave
out
mov
mov
ss
cld
cmp
sub
xchg
faddl
sti
in
mov
sub
or
aad
int
mulb
jg
mov
movsb
adc
jp
push
les
ret
push
cmpsl
in
test
pop
dec
xor
dec
dec
or
lret
push
mov
fisttps
xchg
in
push
xor
outsl
pushf
jno
jae
leave
lds
dec
bound
and
add
inc
bound
imul
push
stos
mov
outsl
pop
ja
insl
daa
cltd
jecxz
cmp
pop
xchg
mov
sub
mov
sub
sarl
and
lds
test
mov
add
push
push
or
add
mov
gs
add
daa
sbb
ret
cmpsl
cmp
lea
fistl
and
fadds
cmp
inc
cli
es
pop
inc
cmp
cmpsl
movsb
insl
in
shll
lock
cmc
ljmp
sub
cs
shlb
jns
sbb
jp
pop
mov
jbe
jb
inc
das
les
lcall
xchg
push
add
mov
adc
push
movsl
sub
cmc
rolb
mov
mov
mov
into
mov
out
pop
inc
add
lahf
jns
sub
loop
sbb
fisttpll
sub
push
or
or
add
sbb
mov
push
and
jns
dec
andl
jns,pn
pusha
outsl
sarl
mov
into
cmp
inc
inc
add
xchg
scas
mov
mov
xlat
mov
repz
pop
sub
es
and
fdivl
and
adc
loope
in
cli
xchg
sbbl
ret
adc
mov
hlt
lret
xchg
or
popf
fdivr
enter
push
outsl
sbb
mov
scas
xchg
cmc
pop
scas
not
add
std
daa
pop
call
js
mov
cmp
rolb
int3
mov
gs
les
xor
loope
pop
sub
cltd
adc
push
push
aaa
getsec
je
dec
inc
rclb
push
push
cs
in
cmpsb
jecxz
bnd
xchg
xor
inc
inc
sti
xchg
mov
pop
packuswb
movsb
ljmp
shrb
leave
sbb
shlb
adc
lret
mov
push
mov
sti
mov
sub
stc
lret
test
push
in
lock
cmpsb
jge
mov
pop
insb
mov
in
jbe
loop
mov
outsb
xchg
repz
push
cwtl
sbb
fists
lahf
adc
popf
or
xchg
stc
idiv
sub
mov
push
cmp
in
jg
adcl
push
in
je
test
lods
je
mov
inc
ds
mov
xchg
cmpb
jp
push
jmp
adc
inc
std
mov
aam
mov
or
dec
in
fdivrl
out
sbb
inc
ss
data16
stos
adc
mov
inc
xor
je
or
mov
mov
push
xchg
mov
add
ficoms
jnp
jecxz
and
mov
out
loop
cltd
cld
cmp
pushl
and
scas
fisttpll
js
lea
arpl
mov
add
clc
bound
in
adc
add
lods
push
enter
push
bound
out
push
daa
rorl
jne
mov
sub
rcpps
scas
addb
or
dec
imul
mov
xchg
push
sarb
les
pop
inc
imul
fnstsw
sahf
xlat
lret
push
xchg
mov
mov
cmp
imul
xor
call
popa
retw
dec
cmp
in
in
jnp
jmp
ret
add
add
jo
push
in
and
xchg
les
cmp
outsb
inc
dec
adcl
fimuls
lret
fmuls
loopne
sbb
push
cmpb
xor
push
pop
mov
call
xchg
push
sub
sub
inc
xorl
and
movsl
stc
inc
add
lret
add
bound
insb
mov
fucomi
shlb
or
jae
xor
mov
loopne
jg
insb
outsl
repz
daa
xor
call
xor
ljmp
inc
xor
dec
cmp
pusha
daa
jb
xor
orl
or
inc
fsubrl
mov
scas
gs
aad
mov
or
jb
test
jno
xchg
mov
push
mov
mov
loop
xor
lock
jo
aad
nop
jle
popa
xor
cmpsl
adc
sbb
sbb
sub
es
add
enter
call
and
push
icebp
daa
shrb
xor
mov
xor
mov
cs
shrl
sbb
adc
andb
cmp
subb
mov
sbb
out
das
in
int3
fists
dec
imul
adc
push
movsb
mov
jb
add
sbb
mov
add
imul
mov
push
xchg
mov
mov
pop
in
mov
pop
test
mov
dec
xchg
int3
mov
jno
mov
cmp
or
inc
mov
std
xchg
cli
push
inc
add
and
aas
xor
jne
pop
fbstp
push
mov
sub
unpckhps
ffree
mov
mov
cmpb
rcrb
mov
push
sub
jbe
cld
pop
aam
pop
or
sbb
test
int
int
cwtl
out
lea
inc
fisttpll
or
mov
shlb
lods
pop
mov
vorps
in
aas
sub
cmp
xor
call
fwait
cmp
mov
jle
jecxz
int3
mov
pop
je
jbe
mov
and
mov
xor
ret
loop
dec
inc
and
mov
out
mov
lahf
sarl
xchg
pop
and
jmp
sub
mov
mov
std
stos
imul
nop
xchg
xor
inc
mov
cmp
pop
addb
addr16
push
pop
pop
cld
fnstcw
js
mov
lret
inc
xor
out
mov
xchg
lcall
inc
popa
sahf
sbb
lods
sbb
mov
xor
lds
in
adc
cmp
jl
xor
mov
or
xor
mov
push
jo
sbb
jns
adc
add
adc
sar
adc
xor
pop
mov
pop
mov
lahf
out
mov
xchg
push
add
ljmp
gs
sbb
pop
sbb
fisttpll
push
test
push
and
mov
js
jne
jecxz
dec
sub
jp
out
dec
mov
loop
cld
mov
dec
push
lods
add
mov
idivl
mov
add
dec
enter
in
pop
dec
cmp
push
js
mov
iret
cmpsb
lods
mov
mov
cltd
adc
jnp
inc
lret
inc
adc
cld
cwtl
imul
mov
insb
xorl
outsb
aaa
lds
in
aad
cs
mov
mov
shrb
inc
fsubrs
out
push
inc
aas
push
xchg
jecxz
mov
lahf
inc
popa
ret
pushl
popf
in
imul
imul
or
loopne
movsb
adc
xchg
out
mov
sub
imul
push
mov
or
lea
add
loopne
lods
scas
daa
or
gs
test
push
jge
aad
adc
push
imul
adc
jp
imul
cltd
push
push
lret
xchg
testb
cs
sti
adc
dec
jb
dec
sub
lods
push
push
lods
rcrl
pop
iret
imul
ret
dec
mov
mov
add
sbb
and
mov
sbb
pop
test
dec
sbb
cli
ret
mov
jmp
adc
mov
mov
mov
das
sub
add
scas
mov
xchg
test
pop
jno
mov
sbb
fistl
xchg
cmp
int
insl
mov
stos
pushf
icebp
mov
jecxz
pop
lret
inc
aas
movsb
dec
push
pop
sbb
sub
jmp
mov
cmpsw
mov
bound
dec
in
or
pop
pop
arpl
outsb
rolb
jecxz
dec
and
cwtl
mov
or
jmp
stos
cwtl
push
lods
cmp
xor
rcrb
sub
sysexit
or
movb
sarb
lret
dec
push
ret
mov
and
xor
cs
imul
mov
and
mov
jmp
out
roll
adc
add
imul
and
push
aaa
pop
push
inc
pop
jl
ret
xchg
test
sbb
sbb
jnp
sub
mov
xchg
mov
insb
nop
movsb
insb
add
test
mov
int3
cli
js
arpl
repz
xchg
xchg
iret
std
iret
and
lds
mov
stos
scas
movsb
shrb
fs
push
inc
cmpsl
cltd
stc
mov
fcomp
jns
jb
mov
lods
lret
and
or
in
jno
xor
xchg
xchg
pushf
es
pop
inc
push
xor
xor
mov
movsl
add
jne
cltd
filds
jp
xchg
jnp
cwtl
sbb
lock
fisubl
cmp
dec
xor
nop
jb
div
int
scas
ret
push
int3
and
in
outsl
sub
cltd
dec
mov
jle
pop
movsb
out
cld
mov
push
mov
mov
pop
xchg
add
fidivrl
stos
test
call
mov
lcall
shr
add
test
and
je
jno
pop
scas
jg
mov
push
in
nop
jnp
inc
iret
leave
push
pop
xor
jg
and
stos
mov
lahf
adc
cmc
xorl
lods
out
fisubs
ja
mov
outsb
mov
fiaddl
pop
lea
cmp
les
mov
sbb
pop
shl
and
cmp
lds
pop
aaa
add
push
add
adc
and
cmp
lret
jno
xor
lock
icebp
mov
xchg
add
das
mov
jmp
or
pop
jns
or
nop
jnp
push
test
mov
sub
sub
mov
xorb
push
xchg
lahf
ljmp
mov
pop
inc
in
pop
cmpsl
push
mov
mov
push
iret
int3
and
cli
push
mov
cltd
pop
xchg
hlt
filds
sub
fbstp
and
fsubrl
mov
pushf
ficoml
inc
dec
add
or
int
incl
enter
dec
je
sbb
ffreep
cmpl
mov
ja
test
jmp
xchg
out
xor
fwait
insb
in
and
cmp
mov
adc
mov
sbb
cmp
sbb
ret
lret
das
rcll
test
add
leave
sub
pop
stc
mov
int3
xchg
adc
repnz
inc
jnp
int3
imul
adc
pushf
movsw
mov
or
push
jns
or
fnstenv
push
je
cmp
js
adc
jne
adc
dec
or
or
xor
es
jmp
dec
test
inc
inc
push
mov
es
xchg
in
mulb
insb
loope
test
es
imul
mov
adc
adc
adc
scas
mov
pop
and
call
in
mov
rclb
sub
sti
fnstsw
pusha
clc
cld
mov
add
int
push
jns
sbb
sub
mov
sub
cmp
add
pop
mov
mov
rep
push
arpl
out
ljmp
movsl
sbbb
mov
nop
int3
roll
jp
loop
push
adc
dec
int3
mov
or
cmpsb
nop
jbe
sub
outsb
ret
lods
mov
jne
xor
push
and
jp
jb
cmpsb
in
rclb
push
add
scas
shrb
cli
ja
inc
lock
mov
mov
sbb
aad
pop
ret
sbb
je
sahf
dec
imulb
dec
xor
mov
movsl
shlb
inc
lahf
mov
xchg
push
fstps
stc
into
les
jecxz
and
js
scas
pusha
mov
in
add
insl
adc
xchg
cmp
lds
push
dec
push
or
ds
je
out
ret
je
inc
mov
repz
jne
and
fisubs
cs
jbe
in
jo
inc
ret
andl
mov
insl
xor
pusha
xor
sbb
mov
jno
xor
xchg
lret
pop
xor
cli
pop
push
sbb
ret
inc
and
imul
hlt
nop
or
cmpsl
lock
xor
scas
xchg
and
pop
loopne
pop
scas
ret
jmp
sbb
push
loop
repz
dec
mov
seta
add
add
aas
sbb
xchg
cmpsl
mov
jne
stos
fildl
lea
sbbl
sbb
jb
jnp
jnp
pop
pop
jle
fimuls
inc
or
cmp
in
mov
cmpsl
xor
xchg
inc
into
fdiv
ds
jbe
or
shlb
daa
rorl
lret
xchg
cld
or
fdivs
inc
mov
shrb
cmc
pop
int
and
push
sbb
fmulp
mov
jge
cmp
loop
push
mov
enter
xchg
xchg
push
inc
std
inc
fidivrs
insl
out
lret
lcall
subl
push
cmp
aas
fidivrl
daa
sub
rcll
in
out
mov
ss
lret
int3
dec
cltd
repnz
lret
mov
xchg
fs
hlt
int3
ss
push
fldln2
pop
scas
ds
pop
fnstsw
jae
lret
lds
add
and
dec
out
dec
sub
mov
xor
mov
dec
jp
stc
sahf
test
push
mov
test
jno
loop
lcall
mov
adc
imul
dec
cmpsl
xor
jle
icebp
pop
jae
mov
rorl
cltd
push
rolb
sub
stc
mov
or
or
sub
pop
push
outsb
ret
cltd
lret
cld
push
and
out
jg
sarl
divb
pop
pop
call
in
scas
in
xor
call
pusha
scas
cmp
or
lahf
fstl
fnstcw
je
lret
stos
ds
fwait
cwtl
sub
and
push
or
cmp
mov
cmc
lret
cmp
cltd
cmp
cmc
outsb
mov
push
push
ljmp
mov
add
push
mov
imul
adc
call
sbb
ficoms
push
imul
call
pop
lods
adc
xchg
and
adc
fisubl
add
in
out
out
cmp
dec
or
mov
insb
fstpl
cli
mov
leave
fwait
popf
out
add
push
lods
loope
mov
jb,pt
fimuls
shr
sbbb
mulb
jge
pop
test
dec
xchg
in
lods
mov
cmpb
lock
loopne
cmp
fisubl
addr16
scas
adc
xor
push
dec
in
dec
mov
mov
jle
lods
pop
mov
std
push
ds
pop
or
xchg
xor
mov
xchg
and
lds
iret
add
xchg
test
adc
cmpsl
mov
daa
push
lret
push
lock
dec
mov
jp
lcall
inc
int
inc
and
jae
cmp
adc
mov
sbbb
push
cmp
xchg
testl
pusha
mov
mov
push
mov
adc
or
adc
sub
and
sub
test
insl
stc
pop
jge
scas
sub
mov
add
das
fnstsw
jo
dec
pop
dec
cmp
sub
pop
ret
mov
mov
jecxz
fmuls
icebp
and
int
mov
mov
cmp
cld
cmp
dec
pop
sbb
mov
stos
dec
movsb
mov
and
add
mov
cs
push
jle
push
inc
sub
jnp
sbb
inc
lret
sub
and
ret
cld
cmp
xchg
mov
mov
test
das
pop
pop
aaa
shlb
pop
push
orb
dec
mov
push
cmp
jne
adc
dec
mov
xor
dec
movl
fadds
inc
sti
sbb
mov
jnp
nop
dec
push
out
fstl
push
mov
pop
sbb
pop
jns
mov
test
jbe
pop
dec
mov
adc
push
or
add
jl
mov
inc
dec
mov
in
fstpt
xor
ja
aas
pop
jnp
data16
sub
and
incb
pop
and
mov
imul
sbb
dec
jg
fcompl
xchg
lea
jnp
out
and
mov
add
or
imul
mov
or
imul
rcrl
fnstcw
ljmp
cmp
pop
iret
mov
push
mov
das
int
adc
shll
dec
stos
mov
cmp
inc
xchg
addr16
mov
mov
aas
fisubrs
or
sub
xlat
sbb
xchg
and
dec
aas
jno
inc
sub
rcl
push
or
mov
dec
dec
pop
js
sbb
scas
jg
mov
sbb
in
int3
mov
xchg
push
daa
in
enter
ss
test
pop
push
xchg
popf
lret
add
cwtl
scas
sbb
shrb
sbb
adc
sbb
cli
cs
in
int3
push
inc
dec
daa
enter
mov
mov
fsubrl
jae
enter
pop
out
mov
ljmp
scas
andl
out
xchg
fs
inc
popf
dec
cltd
push
mov
inc
loop
addr16
add
push
push
aad
shlb
jae
jl
mov
mov
outsl
popf
push
jl
loope
adc
or
sahf
out
repnz
lahf
inc
push
pushf
mov
xchg
adc
cmpsb
mov
stos
int
cltd
mov
les
loope
push
gs
nop
push
sbb
fsubp
xor
ja
scas
jl
insl
rcl
xlat
outsl
out
std
or
adc
popa
jae
mov
test
std
mov
rclb
mov
mov
lahf
outsl
mov
pushf
cmp
push
popf
push
or
or
rcr
popf
mul
pushl
fnstenv
fmull
dec
mov
xor
sti
pop
fstpl
aad
pop
mov
mov
mov
mov
jno
int3
and
push
cmp
mov
ja
stos
push
push
inc
pop
inc
push
mov
xchg
inc
push
jecxz
loopne
add
loop
fbstp
nop
add
aad
xchg
mov
pop
xorb
sbb
pop
lea
mov
imul
lret
sbbb
imulb
xchg
int3
ja
bound
scas
lret
shr
lock
mov
pop
mov
jno
jl
iret
inc
lahf
cmp
loope
mov
hlt
inc
jg
mov
aad
pop
lret
ret
outsl
push
fists
sub
pop
mov
mov
inc
inc
and
repnz
jns
jge
pop
sub
lcall
cld
lds
xlat
fcoml
mov
insb
mov
mov
xor
insl
sub
pop
cmp
loop
push
nop
lods
clc
or
js
loopne
pop
push
cld
jmp
movsb
adc
psubd
mov
push
cmpsl
mov
pop
filds
jb
or
adc
insb
aas
je
inc
inc
shl
mov
test
icebp
and
insl
sub
jmp
jne
or
mov
dec
stos
inc
lret
rep
aas
push
dec
pop
scas
fildll
mov
mov
popf
and
inc
insl
int3
imul
fmuls
popf
xchg
mov
sar
cmpsl
pop
push
icebp
jge
adc
push
xlat
das
mov
in
pop
test
cmp
pop
das
or
sub
ret
orl
rcrl
or
insl
int3
jmp
leave
or
adc
shl
inc
and
dec
or
inc
xchg
stos
pop
paddsb
cs
sub
fs
andb
lret
outsl
mov
fsubp
std
mov
je
mov
mov
xor
inc
popf
xor
inc
pushf
xchg
lret
in
orl
cmp
sbb
xor
mov
mov
jle
cltd
or
xorps
test
pusha
mov
and
dec
aad
add
in
inc
jl
jns
or
xchg
addl
mov
divl
inc
jno
ret
jbe
jo
ret
xchg
jle
fldenv
outsb
cli
mov
adc
movsl
pop
sbbl
loopne
out
pop
popa
iretw
fldenv
cmc
aad
xchg
das
rol
das
mov
mov
lds
push
cli
pop
jns
sbb
dec
js
mov
js
xchg
add
mov
inc
adc
outsb
movsl
dec
nop
es
adc
dec
faddl
xchg
jne
lret
adc
cmpsl
mov
inc
fcoml
pop
dec
repnz
xor
pop
into
mov
pop
cld
sub
inc
pop
push
mov
push
loop
xor
mov
or
xchg
xchg
mov
jae
fs
sbb
xchg
call
pop
test
nop
mov
popa
out
je
adc
sub
cltd
cmp
hlt
js
cmpsl
repz
mov
mov
xor
jno
mov
loop
and
idivl
or
or
mov
inc
into
push
push
cmp
jo
mov
stc
cmpsl
mov
and
push
cmpsb
out
cmpsl
mov
dec
mov
sbb
sbb
pop
into
imul
test
mov
les
cltd
packssdw
add
xor
push
in
std
mov
shrb
andl
mov
rol
scas
das
mov
push
mov
cld
jne
jmp
mov
push
pop
stos
adc
dec
mov
or
fcomps
sbb
xlat
arpl
lcall
stos
fwait
mov
int3
push
add
fs
xor
mov
mov
xor
jns
lods
mov
jp
adc
mov
push
jne
adc
xchg
daa
mov
lret
aas
inc
enter
jmp
aaa
insb
mov
pinsrw
aas
fildl
adc
push
or
sahf
xchg
movsb
iret
out
nop
dec
jl
je
out
cltd
psubusw
lahf
mov
add
xchg
cmp
lcall
xchg
cwtl
dec
cmc
cld
cmp
push
icebp
mov
pushf
js
add
test
dec
jge
in
jnp
add
mov
xor
fbld
insb
jo
mov
add
ja
inc
xchg
fstl
je
push
mov
out
lcall
lret
sub
out
adc
jns
jge
aam
clc
jmp
lahf
sbb
in
add
das
outsb
adc
sub
movsb
cmp
inc
cmp
dec
push
mov
jne
push
or
and
or
shrb
ja
addr16
cmpl
jne
add
sub
enter
sbb
add
jg
push
mov
xor
in
xchg
sbb
fdivrs
fmull
push
sub
add
mov
into
dec
stc
jge
jb
mov
imul
fwait
cld
mov
jns
add
mov
sbb
jne
and
inc
fadds
xchg
incl
jmp
dec
stc
sbb
cmp
cmp
add
push
add
dec
inc
loope
jp
xchg
or
iret
mov
cli
data16
popl
test
int
cmp
loopne
movsb
push
add
out
inc
lret
mov
cwtl
aaa
insb
push
dec
and
outsl
lahf
xor
inc
inc
jmp
mov
ret
sub
inc
push
add
mov
sbb
push
inc
sub
or
fsubrl
insb
daa
in
adc
flds
and
mov
shrl
lods
out
les
sbb
clc
xchg
in
mov
lret
mov
add
mov
dec
call
sub
sub
add
push
pop
sbb
jmp
pop
or
data16
testb
jnp
in
es
jge
ss
push
jge
mov
cmpsl
fistpll
fiadds
outsl
stos
and
cs
leave
mov
fldt
xor
push
mov
jo
aas
gs
jns
aam
mov
mov
imul
jmp
xchg
cmp
das
shll
lds
mov
ror
outsb
mov
and
fstl
lods
hlt
mov
push
mov
pusha
pop
movsl
repz
scas
add
fistpl
jne
xchg
pop
mov
mov
adc
lods
or
jge
mov
mov
mov
inc
cltd
pop
mov
arpl
outsl
pop
out
testl
je
das
mov
into
jmp
daa
fs
and
xlat
testl
fisttps
insl
fwait
and
rclb
mov
or
cmp
mov
jg
sbb
xchg
scas
cmp
pop
call
add
pop
or
xor
sub
lahf
clc
sbb
jge
daa
xchg
into
sbb
jmp
pop
adc
test
sti
and
push
lods
pop
pop
mov
in
sbb
sub
movsl
leave
imul
jg
mov
fdivrs
icebp
push
jmp
stos
mov
add
mov
jne
jmp
push
xor
outsl
pop
sbb
rclb
ds
les
dec
pushl
daa
xlat
testl
pop
mov
stc
cmp
cmp
jae
repnz
in
and
idivb
xor
fsubrs
and
pushf
add
test
jnp
ret
lret
es
pop
lahf
push
mov
in
es
mov
sbb
adc
inc
push
sub
cmpsb
inc
and
cmpsb
movsb
cli
orl
loope
ljmp
lret
dec
sub
inc
sti
or
stos
jp
push
mov
mov
out
cmp
fcoms
pop
lods
mov
mov
add
push
dec
not
in
mov
sub
jecxz
ret
mov
push
lods
leave
sbb
push
pop
sbb
mov
insl
push
std
cmp
mov
loopne
or
push
repz
daa
dec
xor
cltd
add
dec
inc
test
and
sub
mov
jbe
or
cmpsl
icebp
pop
shrl
and
test
aad
shl
aas
insl
push
clc
xor
adc
mov
mov
or
push
hlt
xlat
aas
das
jg
and
ljmp
mov
inc
js
popf
adc
pop
aam
lea
sbb
push
popf
sub
push
pop
push
mov
outsl
sub
xchg
lds
xchg
dec
jo
stos
push
jecxz
dec
arpl
rorb
in
sbb
jnp
add
mov
xchg
pop
icebp
aad
lea
fidivrs
popf
adc
sub
imul
fisubl
ds
fidivrs
dec
jle
adc
sahf
or
rclb
xor
mov
pop
xor
adc
jns
stos
jle
pop
sbbb
pop
cltd
popf
mov
ss
pop
popf
fidivrs
lret
cltd
cli
hlt
pop
add
ljmp
cwtl
sti
xor
jnp
mov
xchg
xchg
arpl
mov
pop
mov
add
add
iret
clc
ret
jo
adc
mov
mov
pusha
push
lods
rolb
ss
jp
mov
push
xchg
stos
lcall
int
test
movsb
es
xchg
sub
lock
push
pop
cmp
xor
and
repz
hlt
jns
cmpsb
fdivl
sub
dec
shl
dec
sub
cmpsb
test
lods
cmp
fnsave
addr16
mov
xlat
repnz
cmp
pop
fmul
fs
rolb
into
sub
fcom
data16
icebp
popf
lcall
and
sub
lahf
lock
mov
pop
jecxz
jge
jnp
out
mov
stos
sbb
je
pushf
push
ljmp
dec
mov
jo
and
fidivrl
outsl
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
imul
shr
mov
fucomi
popa
movsl
mov
bound
insl
outsl
mov
cld
or
mov
mov
jnp
jmp
roll
lret
xchg
jmp
inc
and
loope
shl
js
dec
lock
jmp
imul
push
pop
rorb
xor
add
stc
nop
imul
pop
out
and
push
and
push
inc
test
jo
pusha
mov
shll
xchg
pop
pop
xor
lret
aad
mov
popa
ja
mov
push
out
cs
push
stos
sahf
lds
adcl
add
dec
or
push
ret
test
sar
ds
dec
dec
in
outsl
xor
addr16
test
or
xchg
data16
or
sub
and
jmp
jl
int3
mov
push
inc
mov
sub
mov
push
cmc
mov
div
inc
jmp
inc
loop
and
sub
and
push
les
insb
rol
pop
cmp
mov
lret
jl
addr16
rclb
mov
into
xor
or
adc
push
adc
xchg
dec
rcr
icebp
mov
daa
mov
nop
push
push
cmpsb
pushf
push
cmp
addr16
call
jl
ret
enter
sbb
add
add
add
add
pusha
add
inc
xchg
adc
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cld
cmpsb
outsb
add
cmpsl
outsb
add
