int3
add
add
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
jne
xor
mov
jmp
xor
jmp
mov
mov
jmp
push
mov
push
mov
lea
push
lea
push
pushl
movl
call
mov
mov
and
neg
sbb
not
and
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
lea
mov
mov
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
mov
mov
mov
mov
mov
add
cmp
mov
je
cmpl
jne
call
mov
and
mov
mov
shl
shr
lea
lea
or
mov
mov
mov
add
cmp
movl
mov
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
or
mov
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
lea
or
call
subl
jne
push
push
push
lea
push
call
mov
pop
pop
pop
pop
add
ret
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
int3
int3
int3
int3
sub
push
mov
test
je
push
mov
movl
mov
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmpb
jne
mov
test
je
push
mov
lea
movl
call
mov
test
je
mov
mov
mov
push
call
lea
call
cmpl
je
xor
pop
pop
pop
add
ret
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
mov
cmpb
je
lea
call
test
je
mov
mov
add
push
push
push
call
pop
pop
pop
add
ret
mov
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
jne
push
push
lea
call
xor
add
cmp
je
mov
movl
mov
lea
cmp
movl
movl
movl
mov
mov
je
mov
mov
push
call
test
mov
je
mov
mov
push
call
mov
test
je
xor
call
add
or
mov
mov
mov
push
mov
call
lea
call
pop
lea
jmp
add
jmp
push
mov
sub
push
mov
mov
test
je
testb
je
push
push
xor
push
lea
mov
call
lea
push
mov
lea
call
test
pop
js
pushl
mov
lea
mov
mov
call
mov
cmp
je
mov
lea
push
push
call
test
jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
fiaddl
test
or
mov
mov
mov
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
or
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
lret
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
les
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
push
mov
sub
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
add
add
add
add
lea
mov
scas
add
repnz
add
mov
add
fadds
add
jmp
xchg
out
pop
sub
pop
popl
push
push
push
push
push
push
push
call
mov
arpl
stc
int
in
jmp
leave
orl
mov
jae
fists
pusha
add
add
movb
out
sub
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
add
test
rolb
xchg
movsb
test
add
add
mov
lds
out
add
lcall
out
add
push
push
push
lea
push
push
call
test
add
out
add
sahf
xchg
add
js
mov
cmpl
int3
add
push
lcall
jno
xchg
fistl
int3
add
out
sti
add
xlat
jecxz
sti
mov
add
push
pusha
add
mov
sub
pop
call
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
iret
cltd
mov
movsb
add
add
mov
mov
xchg
popa
mov
mov
subl
add
add
push
add
int
pop
test
jne
add
loope
leave
lret
jb
bound
add
add
fucomi
sub
pop
call
push
lea
push
push
push
lea
push
push
push
call
sar
jmp
icebp
xchg
add
mov
add
add
add
push
jne
mov
popf
jo
rcll
pop
add
mov
jle
mov
add
add
mov
in
lcall
add
add
push
push
push
push
push
call
add
add
add
add
ficoml
cmc
flds
mov
add
popf
scas
xchg
sti
aam
add
add
add
out
add
cmpsl
add
add
mov
add
iret
addb
add
in
pop
mov
push
push
push
push
call
mov
jne
imul
movb
popf
add
add
add
shll
jo
fldl
add
push
push
in
lock
mov
push
push
push
lea
push
push
push
push
push
call
jbe
mov
lret
add
xor
add
push
sbb
add
add
add
mov
in
mov
shll
stos
add
jge
add
add
fadds
add
call
add
mov
rolb
xchg
mov
in
loopne
add
push
push
push
push
push
call
lods
add
fmul
hlt
out
add
imul
je
imul
add
popa
add
add
add
sar
add
addb
std
jae
jecxz
imul
cltd
lds
add
lea
xchg
add
int3
in
in
add
sub
pop
add
add
push
push
lea
push
call
add
mov
add
mov
pusha
out
cwtl
fs
cwtl
popf
scas
add
cltd
aam
pop
les
mov
mov
mov
int
xchg
push
faddp
stos
arpl
mov
loope
mov
mov
add
lcall
pop
add
repz
int3
iret
iret
push
push
add
push
sub
add
xor
lea
add
sub
sub
add
pop
shr
sub
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
lret
mov
pop
aad
roll
add
mov
out
add
sahf
lods
in
nop
add
imul
movsb
filds
lahf
add
mov
mov
data16
lea
xchg
add
add
stos
fidivl
in
fcomps
jne
push
push
push
lea
push
push
push
push
push
call
clc
fstl
addb
add
cmpsb
pop
ja
fidivs
out
addb
movl
cltd
popf
icebp
pop
mov
add
mov
outsl
out
pushf
add
sub
pop
call
push
lea
push
push
push
call
add
mov
push
jle
mov
add
add
add
enter
add
add
flds
add
add
mov
pushf
add
ljmp
pop
mov
cmc
add
add
mov
lahf
hlt
fdivrp
add
add
sub
pop
mov
push
push
lea
push
lea
push
call
jno
add
sbbb
lret
add
in
add
jb
bound
mov
push
jno
cmpsb
add
imul
lret
add
in
mov
add
push
mov
in
lock
movl
push
push
push
push
push
call
add
add
jno
hlt
add
js
mov
xchg
hlt
arpl
pop
in
sti
add
leave
pop
add
add
add
rolb
loope
out
enter
mov
in
in
pop
lea
push
push
push
lea
push
call
xchg
rolb
in
pop
add
rolb
cmpsl
mov
ja
push
out
into
filds
lods
popa
call
add
cmpsb
add
js
loope
mov
add
faddl
scas
add
add
add
lret
scas
cld
add
add
push
lods
fucomp
leave
mov
add
flds
add
push
ja
jbe
push
xchg
call
add
test
lcall
jne
push
lea
push
call
in
pop
jle
in
add
add
xchg
mov
shlb
add
add
repnz
movsl
add
out
sarl
jmp
jno
stc
test
in
clc
pop
pushl
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
leave
push
out
call
mov
movsl
add
jmp
mov
mov
pop
xchg
mov
movsw
jb
roll
dec
and
pop
or
movsb
pop
push
push
push
push
push
lea
push
call
jae
jmp
add
xchg
loop
mov
pop
add
add
add
sahf
add
jne
add
add
add
mov
lcall
add
add
imul
pop
pushl
push
lea
push
push
lea
push
push
push
call
shrl
push
lcall
cmc
scas
add
in
add
jmp
add
ljmp
movl
lahf
movsb
add
sub
pop
pushl
push
lea
push
push
lea
push
lea
push
push
call
add
add
pop
mov
add
stos
add
add
add
push
jge
outsl
pop
arpl
add
add
add
add
add
shll
cmpsb
add
add
mov
mov
fmuls
add
icebp
fdivl
mov
call
call
push
push
not
push
sub
add
lea
sub
inc
xor
pop
lea
not
pop
push
push
push
push
call
xchg
arpl
xchg
add
add
icebp
scas
add
add
repnz
add
stc
jbe
popa
into
scas
orb
add
push
fsubrs
adcb
addl
add
lret
push
fwait
xchg
add
add
add
add
xchg
jns
jp
add
jne
push
lea
push
push
push
push
push
call
ljmp
xchg
fcompl
popa
lods
cmpsb
pop
add
add
in
jns
add
fwait
hlt
mov
add
add
gs
mov
add
mov
lcall
pop
add
popa
sub
add
add
add
add
call
test
movsb
add
xchg
add
scas
in
in
call
call
push
push
push
push
lea
push
lea
push
push
push
push
call
int
cmc
add
add
mov
lds
add
jns
mov
jnp
add
add
add
mov
add
inc
push
push
ror
shr
dec
push
and
add
xor
inc
xor
sub
add
shr
dec
pop
xor
xor
pop
push
push
push
push
lea
push
lea
push
push
push
call
ret
out
mov
mov
add
sar
lahf
add
mov
mov
aam
sub
in
add
bound
or
mov
mov
popa
mov
data16
fstpl
mov
bound
jecxz
test
into
add
scas
pushf
add
jae
add
lock
imul
rolb
sub
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
add
scas
add
jle
addr16
stos
lahf
fnstsw
add
pop
push
add
push
fstl
ljmp
add
jecxz
stc
popf
mov
lret
add
add
lahf
add
fists
add
fbld
xchg
add
lcall
rclb
lea
push
push
push
push
call
mov
mov
xchg
iret
in
mov
jmp
xchg
push
popf
xchg
add
add
add
add
jmp
push
jge
add
clc
out
xlat
jb
int
outsl
scas
push
mov
lcallw
jne
fstl
push
add
sub
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
bound
xchg
mov
xchg
add
loopne
aam
lret
add
jle
sti
add
add
lahf
fstl
fs
call
add
add
iret
mov
fsubr
add
add
ljmp
arpl
in
add
add
loopne
jns
cltd
add
sub
pop
push
push
push
push
lea
push
push
call
add
mov
shlb
add
add
add
add
add
fwait
lea
add
arpl
jecxz
xchg
add
push
add
scas
jo
add
add
cwtl
loopne
cltd
mov
add
int
les
lcall
pop
hlt
push
lea
push
push
push
push
push
push
push
push
push
call
mov
out
pop
add
scas
jmp
test
les
bound
imul
mov
outsl
push
push
je
scas
outsl
add
jecxz
add
shlb
jbe
mov
in
movsl
roll
ljmp
out
add
add
mov
lcall
pop
in
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
imul
add
test
add
rcl
add
fs
ljmp
mov
popl
add
stc
std
mov
in
add
fistps
cwtl
fistpl
mov
jae
add
fcmovne
jae
add
add
add
movl
in
loopne
lcall
ret
add
add
add
push
push
push
push
lea
push
push
push
push
push
push
call
pop
jl
add
pop
in
add
jmp
add
mov
ficomps
call
add
add
sub
pop
mov
xor
push
push
push
push
call
mov
add
add
add
add
add
add
add
mov
loope
sbbl
mov
scas
add
in
lock
add
push
push
lea
push
lea
push
lea
push
call
add
int
shl
add
mov
mov
add
add
add
add
xchg
iret
int3
pushf
add
je
jmp
in
mov
mov
add
push
push
push
mov
add
add
add
add
jno
add
add
add
mov
pop
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
mov
mov
xchg
add
mov
xchg
add
mov
cmpl
add
jnp
ljmp
add
xchg
loop
sub
pop
mov
xor
push
push
push
call
mov
sarb
imul
mov
add
add
add
add
add
add
sub
pop
add
pop
push
push
lea
push
push
push
call
lock
fidivs
popf
pushf
add
push
add
sahf
add
in
add
mov
addl
shl
cwtl
imul
add
push
mov
add
add
data16
push
add
ja
jne
add
pop
add
lcall
dec
add
out
int3
iret
iret
push
push
push
lea
push
push
push
lea
push
push
push
call
jmp
shll
fxam
add
add
std
icebp
add
add
add
add
cmpsb
imul
lds
jp
mov
bnd
cli
add
push
pop
test
add
in
fdivr
lcall
or
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
popa
je
pop
in
xchg
ja
add
outsl
push
add
mov
addl
sbbb
add
add
popf
fsts
aad
stos
add
popa
cmpsb
testb
xchg
shr
jp
add
xchg
xchg
imul
add
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
xlat
add
add
adcb
nop
add
add
stc
imul
mov
push
add
rcll
pop
add
push
add
stos
movsl
mov
push
add
add
mov
add
lcall
push
lea
push
push
lea
push
push
call
les
add
pop
outsl
cmpsb
add
add
jo
add
cmc
mov
add
add
pop
add
mov
mov
jecxz
add
add
mov
add
mov
testl
add
cwtl
clc
pop
add
add
sub
pop
mov
xor
push
push
push
lea
push
call
push
loopne
add
into
add
out
add
add
add
vhsubpd
add
loopne
add
mov
add
add
enter
fidivl
push
movsb
cmp
call
addl
add
clc
in
pop
lds
jl
cwtl
add
add
add
add
pop
cmpsl
add
lods
add
add
lcall
jle
jne
add
nop
mov
int
gs
sub
pop
rep
push
push
lea
push
push
lea
push
push
push
push
call
popf
ljmp
push
xchg
push
mov
jnp
jno
stos
add
fcomps
pushf
add
push
add
jl
sub
pop
pop
mov
push
push
push
push
push
push
push
push
call
xchg
flds
add
add
fcoms
popa
rolb
add
add
xchg
jp
jp
add
add
add
push
mov
mov
fldenv
add
push
add
add
sbbl
pop
in
add
push
lea
push
push
call
add
add
add
addl
std
add
add
sahf
add
add
popf
add
add
mov
outsl
add
add
hlt
pop
add
mov
push
push
push
lea
push
call
xchg
xchg
sahf
movsb
out
scas
jmp
xchg
add
mov
int
jnp
scas
loope
jmp
add
shrb
insb
mov
fwait
add
out
sub
pop
xor
push
push
push
push
push
push
push
push
call
int3
ja
subl
ja
shrl
jecxz
subb
out
xlat
add
scas
add
xchg
mov
add
mov
mov
add
cwtl
jno
add
lcall
les
add
push
push
push
push
call
shl
add
xchg
add
lret
xchg
insb
add
mov
add
xchg
popa
push
stc
loopne
add
add
stos
popf
imul
movb
xorb
repnz
push
sahf
add
enter
mov
lret
mov
sub
pop
mov
xor
push
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
icebp
gs
add
add
mov
faddl
pop
add
add
add
loop
incb
add
rolb
add
xchg
lds
roll
mulb
add
sub
pop
xor
push
lea
push
call
int3
mov
cwtl
cmc
xchg
add
mov
add
divb
jns
loope
mov
jecxz
imul
add
sub
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
call
scas
add
xchg
enter
add
hlt
jle
add
in
push
jns
add
add
lret
xchg
scas
add
les
fwait
add
add
lcall
jecxz
addl
cld
add
add
add
mov
add
push
shr
dec
pop
add
push
push
push
push
push
push
call
add
add
fs
loop
mov
imul
mov
mov
add
stos
add
add
rolb
xchg
mov
in
jge
stos
bnd
sub
pop
mov
push
push
ror
add
inc
push
xor
add
inc
sub
add
pop
xor
add
sub
pop
push
shr
not
sub
pop
pushl
call
push
sub
lea
pop
push
push
push
ror
push
push
pop
add
not
sub
sub
pop
inc
sub
add
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
out
imul
lret
add
in
enter
sbbl
add
add
fs
add
pop
add
add
addb
lods
les
push
push
push
sub
xor
dec
xor
pop
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
les
out
add
jp
loop
aam
add
add
mov
in
popf
push
leave
jne
pop
andb
lret
mov
arpl
pop
cmpsl
jle
repnz
sub
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
fcmovu
add
add
js
xchg
addl
xchg
add
add
mov
jae
scas
add
fidivs
add
add
add
xchg
add
push
add
jmp
add
add
divb
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
scas
jne
fs
pop
add
lock
leave
imul
xchg
add
mov
mov
add
lahf
xlat
add
xchg
mov
shl
popa
pusha
add
add
jae
add
mov
outsl
stos
repnz
mov
add
xchg
leave
scas
roll
lcall
pop
hlt
push
sub
pop
add
push
shr
dec
shl
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
call
imul
mov
add
add
xchg
mov
add
add
fldl
add
add
out
mov
add
iret
pop
in
pop
pop
push
pusha
loop
add
lcall
ret
fisttpll
add
xchg
lea
push
push
push
push
push
call
clc
add
aam
add
fiaddl
add
add
cli
add
mov
add
orb
ljmp
cmpb
add
mov
add
cli
add
mov
mov
std
iret
mov
in
in
mov
push
push
push
push
push
push
call
ret
add
add
xchg
int3
add
fdivrp
jno
mov
scas
add
lret
add
add
xchg
lahf
rolb
add
sub
pop
xor
push
push
call
add
pop
mov
in
add
mov
out
push
fdivl
gs
loopne
loope
add
gs
andl
add
add
sub
pop
add
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
je
pop
xchg
lret
stos
inc
add
test
pop
cmc
sti
addb
test
in
mov
out
add
ljmp
pop
addb
add
jo
ja
lcall
shll
add
nop
std
lea
jns
mov
cltd
xchg
add
not
pop
pop
stc
jl
add
add
pushf
stos
add
add
jne
push
add
dec
pop
push
mov
xor
push
ror
lea
pop
add
push
push
lea
push
lea
push
push
push
call
add
push
cmc
mov
add
pop
add
int
add
stos
xchg
add
add
lock
add
cwtl
add
rcr
add
lcall
push
sub
pop
mov
push
push
push
lea
push
push
lea
push
call
add
movsb
add
push
push
add
add
pusha
add
add
pushf
add
mov
add
add
aad
mov
shlb
loopne
pop
mov
add
fldl
mov
mov
in
pop
add
add
rcl
mov
incb
out
add
add
xor
push
push
push
call
test
cld
clc
jb
addr16
in
js
xor
lds
enter
imul
add
mov
add
xchg
add
test
add
loope
in
popa
add
add
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
cwtl
mov
add
pop
xchg
shrb
loope
add
xchg
mov
mov
mov
fcoml
in
loopne
lcall
movsb
mov
push
push
push
push
push
push
push
push
call
add
lods
sub
jecxz
xchg
fmull
test
mov
push
add
xlat
add
les
add
fs
mov
arpl
faddl
out
mov
lcall
or
push
lea
push
call
clc
add
cltd
add
test
add
add
push
add
aam
nop
mov
add
add
add
mov
add
add
loope
stc
mov
mov
add
jle
mov
leave
add
add
fdiv
add
add
roll
hlt
add
add
loope
pop
add
add
jmp
lods
out
in
clc
lcall
les
shl
shr
add
pop
or
je
mov
xor
push
shl
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
out
rolb
stc
jo
add
push
xlat
test
leave
mov
out
mov
push
add
jno
enter
fstl
scas
push
sub
pop
xor
push
lea
push
push
push
call
scas
test
pop
jmp
ljmp
add
add
pop
fwait
add
cmp
add
call
add
push
add
add
cmpsb
push
cmpsl
test
add
xlat
pop
add
add
add
subl
in
lock
add
push
push
push
push
push
call
push
add
sbbb
ljmp
js
std
std
add
iret
add
add
lea
mov
mov
add
xchg
addl
fiaddl
xchg
stc
out
rcr
mov
add
in
in
lcall
repnz
add
sub
shl
not
pop
add
push
push
push
call
out
cmp
test
add
add
mov
jmp
xchg
mov
add
push
aad
bound
icebp
add
add
add
add
lcall
inc
or
iret
push
lea
push
push
push
call
test
mov
je
and
mov
lods
pop
fadd
add
pop
xchg
in
add
test
xchg
jle
mov
add
cltd
add
add
add
add
add
add
lcall
lock
push
push
push
push
lea
push
push
call
loop
loope
fwait
test
add
in
add
cmc
out
test
xchg
and
add
push
out
add
test
testb
js
cltd
add
fstpl
mov
movsb
mov
add
push
add
add
add
lods
xchg
mov
pop
add
jns
lret
in
mov
int
scas
add
lcall
movsb
push
pop
mov
xor
push
push
lea
push
push
call
pusha
add
testb
xchg
lods
stos
add
mov
sahf
add
pop
add
add
movsl
xchg
add
loop
imul
shl
jno
add
cwtl
add
add
jp
sar
jp
add
sub
pop
or
je
push
push
push
lea
push
push
push
lea
push
push
push
call
pushf
js
jecxz
iret
add
scas
add
pop
jo
mov
test
mov
iret
pop
mov
lcall
mov
pop
mov
add
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
push
jnp
add
jns
add
rcl
add
addr16
xchg
cli
add
nop
add
mov
in
movsb
cltd
add
lcall
movb
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
add
xorl
leave
pop
mov
cmpsl
ret
scas
add
add
add
mov
add
jno
jge
jns
add
movsb
loop
sti
loope
pop
fiaddl
repnz
mov
in
add
sub
pop
rep
pop
push
push
shl
push
push
pop
add
shl
sub
sub
pop
sub
sub
pop
push
add
pop
pop
push
lea
push
push
call
add
popa
popa
xchg
xchg
add
ret
popf
pop
arpl
add
push
pushf
add
std
add
ret
xchg
xchg
imul
mov
aad
jl
add
mov
mov
mov
add
xchg
out
mov
jbe
test
mov
add
add
stos
addl
add
sub
pop
mov
mov
push
pop
mov
jmp
push
add
pop
push
mov
push
lea
pop
add
push
lea
push
push
push
call
add
add
add
xchg
add
add
lods
fdivr
add
icebp
int3
lcall
fisttps
add
lcall
cld
add
add
push
add
pop
outsl
push
add
push
push
push
lea
push
call
int3
stc
add
push
mov
add
add
enter
scas
sti
lea
enter
jb
fistps
add
mov
add
add
lods
mov
add
add
add
mov
jle
clc
sahf
fldenv
mov
add
jmp
int3
add
add
sub
pop
push
push
push
push
call
shl
add
add
mov
add
add
add
lret
add
add
xchg
pop
add
xchg
add
popa
mov
lret
repnz
add
idivl
addr16
arpl
add
push
in
pop
jno
add
push
add
movsl
pop
mov
sub
pop
push
push
push
push
push
call
add
add
mov
add
test
jl
push
icebp
add
popf
push
aam
fisubrs
xchg
add
jno
stc
add
fisttpl
pop
sub
pop
push
push
push
lea
push
call
mov
jb
add
xchg
mov
jl
stos
add
pop
rol
add
pop
add
jecxz
add
add
add
add
test
mov
add
pop
fs
add
add
sub
pop
mov
pop
push
lea
xor
pop
pop
push
sub
xor
shr
pop
pop
pop
push
push
push
push
lea
push
call
xchg
mov
add
add
data16
lea
add
push
repnz
add
add
cltd
int
movsb
fucom
add
leave
xchg
icebp
add
add
ljmp
jno
mov
sub
pop
leave
push
lea
push
push
lea
push
push
push
call
push
filds
add
mov
in
add
add
add
add
add
add
pop
stos
xchg
add
rolb
fs
aad
add
push
pop
les
pop
mov
add
mov
mov
pop
ret
push
push
add
pop
mov
add
push
not
pop
push
push
push
push
push
push
lea
push
push
call
out
add
add
mov
add
aam
jge
testl
add
add
cmpsb
add
add
add
jle
mov
popf
mov
out
add
lret
add
icebp
jmp
mov
mov
xchg
add
xchg
imul
add
xchg
add
push
push
push
push
push
push
push
push
push
call
cmpsb
add
add
add
add
int
je
mov
cli
sarl
mov
clc
add
add
cmpsb
add
xchg
pop
scas
add
fiadds
test
sub
pop
push
movl
push
push
push
lea
push
call
xchg
add
popl
pop
add
jne
aad
jne
ret
push
loopne
lret
xchg
mov
shll
add
add
mov
mov
add
sahf
add
rclb
pop
add
movsl
add
add
cld
pop
add
add
add
add
xchg
addr16
add
lcall
inc
clc
incl
add
add
out
fmuls
inc
sub
ror
pop
mov
push
lea
push
push
push
push
push
push
call
add
mov
push
add
add
xchg
lret
push
add
add
jo
iret
mov
add
pop
pop
push
xor
pop
pop
push
push
lea
push
call
jmp
cwtl
lea
jne
add
add
pop
add
mov
add
imul
mov
xchg
add
addr16
movsb
fmul
mov
xchg
int3
shrb
mov
add
in
imul
iret
les
popa
out
add
pusha
add
add
scas
addl
pop
pop
leave
push
lea
push
push
lea
push
push
lea
push
push
call
lods
push
flds
jecxz
add
bound
jbe
ret
out
add
clc
xchg
out
scas
leave
stos
add
mov
mov
stos
leave
mov
arpl
jle
push
jmp
outsl
add
jne
add
jno
add
gs
add
js
scas
add
jns
cld
add
add
in
ret
push
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
call
adc
add
jns
data16
add
pushf
data16
icebp
popa
in
out
lret
add
jb
mov
fldl
xlat
arpl
fsubl
fcomps
push
inc
pop
mov
add
push
dec
shl
pop
push
push
shr
shl
rol
pop
push
push
sub
pop
push
push
rol
pop
push
testl
push
push
push
push
push
push
push
push
push
call
add
add
add
lcall
fcmovu
nop
fwait
rolb
shll
movsb
pop
outsl
push
loopne
cld
add
stos
add
sub
pop
addl
push
push
not
shr
lea
pop
call
push
not
shr
pop
mov
pushl
push
dec
pop
push
push
push
rol
shl
pop
call
push
ror
pop
cmpl
jne
push
push
push
push
push
push
lea
push
call
mov
add
aad
xchg
xchg
cwtl
call
iret
pop
xlat
mov
add
mov
movl
hlt
pop
frstor
movsb
mov
je
add
add
add
pop
nop
cli
pop
xchg
sub
pop
pop
pop
push
not
add
pop
pop
push
push
push
push
push
lea
push
lea
push
push
call
icebp
pop
je
add
add
test
add
mov
mov
add
mov
mov
add
lock
scas
push
add
lock
add
xchg
add
repnz
add
lcall
push
not
inc
pop
leave
ret
push
add
rol
pop
push
push
lea
push
push
push
call
add
add
mov
lods
fidivrl
ret
add
add
xchg
add
je
in
lock
lcall
in
add
push
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
mov
add
out
mov
jo
add
test
loope
pop
rclb
add
pop
jns
into
icebp
les
fdivrs
fs
cmc
rolb
out
add
add
xchg
out
out
mov
xchg
sub
pop
push
push
add
pop
push
push
push
add
pop
push
push
add
not
rol
sub
pop
movl
push
lea
push
call
add
add
add
add
add
add
jnp
add
lds
pop
add
push
stos
cmpsl
addl
cltd
iret
xchg
push
outsl
jae
add
fwait
xchg
cli
add
add
jmp
add
rorl
add
add
add
add
push
pop
bound
mov
pop
hlt
mov
testl
clc
pop
push
call
push
push
call
add
sbb
icebp
mov
add
push
icebp
mov
arpl
add
add
add
jns
mov
push
add
loop
mov
pusha
mov
roll
rorb
add
add
sahf
cmc
push
add
add
add
xchg
jmp
out
add
mov
pop
push
call
push
lea
push
push
lea
push
push
push
push
push
push
call
add
test
je
add
add
outsl
jmp
lock
stos
mov
jo
push
aad
add
cltd
add
subl
push
not
inc
pop
cmpl
jne
pop
push
push
push
lea
push
call
ja
js
ret
aam
add
test
enter
add
add
les
add
jnp
add
add
add
add
jmp
push
xchg
add
add
rolb
je
add
add
mov
add
jle
push
add
add
sub
pop
pop
push
push
push
lea
push
call
add
add
mov
jle
lret
test
add
add
mov
push
in
faddl
jl
add
movl
add
lret
add
add
test
add
add
in
lock
pop
pop
push
push
lea
push
push
push
push
push
push
call
sti
testl
mov
pop
lods
mov
rcl
add
add
jnp
add
lahf
test
add
movsb
lea
test
add
out
lret
arpl
add
lds
fadds
mov
ja
jp
loopne
add
aad
mov
call
loopne
lcall
push
not
rol
xor
pop
ret
push
push
lea
push
push
push
push
push
push
call
rolb
cld
add
into
cmpsb
scas
jnp
out
lret
add
xchg
add
mov
add
lret
push
push
add
clc
jge
mov
add
add
add
pop
jmp
add
add
add
cmpb
test
lods
xchg
add
add
add
add
add
sub
pop
push
push
lea
push
lea
push
lea
push
lea
push
call
in
add
aam
add
add
add
lock
add
cmpsl
fcompl
add
add
jne
in
int
add
out
jno
add
jge
add
cltd
add
add
pop
add
add
add
add
add
add
repnz
insb
pusha
add
lcall
in
push
push
push
push
push
lea
push
push
call
add
pop
sar
call
add
cmpsb
test
mov
lods
mov
add
add
add
lahf
add
cmc
add
add
add
movsb
ret
out
insb
test
stos
add
test
lods
enter
gs
add
insb
push
pop
cld
add
popf
negl
loop
test
in
sub
pop
add
push
sub
add
pop
push
push
push
dec
pop
push
push
push
call
test
add
add
pop
add
add
clc
xchg
push
add
lahf
mov
rcll
mov
add
add
add
add
push
rcll
add
add
push
mov
mov
add
add
lea
scas
add
add
in
clc
pop
push
push
push
rol
dec
push
push
pop
add
shl
inc
shl
inc
sub
sub
shl
shr
pop
not
not
pop
push
dec
pop
pushl
push
lea
push
push
push
push
push
push
call
fwait
add
lahf
add
pop
xchg
movsb
add
push
popa
stos
add
xorb
add
rorl
add
in
popf
loopne
iret
add
repnz
std
add
add
add
mov
in
in
lcall
adc
add
push
push
lea
push
push
lea
push
call
add
fldl
int3
incb
add
pop
add
in
add
test
out
add
out
add
push
fldl
mov
add
add
add
pop
jnp
add
xchg
mov
jge
hlt
add
shrb
or
mov
lret
xchg
push
sub
add
ror
ror
sub
sub
shl
pop
sub
xor
not
pop
push
sub
inc
pop
pushl
push
add
shl
pop
call
call
push
push
dec
sub
lea
dec
push
or
inc
add
inc
sub
xor
not
not
pop
not
not
rol
sub
pop
push
add
pop
pushl
call
push
rol
add
pop
call
push
push
shl
inc
add
push
xor
add
lea
sub
xor
ror
dec
pop
lea
pop
push
dec
ror
pop
pushl
call
push
push
lea
push
call
subb
mov
in
push
add
mov
add
aam
add
in
fsubr
fldl
jb
add
test
out
add
lcall
rorb
loop
rol
add
pop
lea
sub
push
lea
dec
xor
pop
mov
shr
push
xor
not
shl
pop
add
mov
push
inc
inc
pop
mov
push
shr
rol
pop
add
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
cld
add
add
add
add
push
add
add
add
out
in
add
aad
cld
pop
add
add
jne
add
in
je
jns
sub
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
call
add
sti
lea
add
arpl
add
ror
jcxz
add
pop
popf
add
lods
xchg
add
stc
add
lret
sub
pop
mov
push
lea
push
lea
push
push
call
hlt
imul
add
test
push
addl
mov
in
add
add
jae
add
jae
roll
xchg
jne
mov
call
mov
add
mov
mov
pop
mov
imul
std
cmpsl
mov
add
in
lock
lcall
nop
nop
nop
nop
cmp
jne
push
push
push
push
push
push
push
call
cld
iret
push
pushf
movsl
xchg
push
mov
test
xchg
data16
add
out
add
int3
mov
lret
add
push
add
push
add
jns
jae
pusha
add
add
xchg
xchg
iret
add
popa
lcall
aad
add
rolb
pusha
add
add
fiadds
cwtl
fadds
add
jne
mov
push
xor
pop
movl
push
lea
push
push
push
push
push
push
call
add
mov
mov
cltd
mov
add
add
ljmp
mov
add
popa
jecxz
add
cmpsb
xchg
mov
movsb
xchg
add
add
cli
mov
add
add
push
sub
pop
jmp
push
push
push
push
push
lea
push
push
call
add
out
add
lahf
arpl
add
aam
add
cwtl
in
add
fucom
movsb
addb
add
add
in
rolb
xchg
cwtl
add
jno
jle
add
into
jecxz
add
add
sub
xchg
add
call
add
lcall
pop
add
in
in
lcall
inc
cld
mov
push
pop
sub
jne
mov
push
add
inc
pop
movl
push
add
pop
jmp
mov
push
sub
sub
pop
mov
push
push
push
push
push
push
push
push
call
loope
add
incb
stos
add
push
push
add
add
lds
add
out
in
bound
aam
sub
pop
cmp
jne
push
ror
xor
not
pop
mov
movl
push
inc
inc
shr
sub
pop
jmp
push
push
push
call
cwtl
add
fstpl
test
scas
add
add
add
lret
fstps
jne
les
mov
add
cld
push
cli
sub
pop
mov
cmpw
jne
push
not
pop
mov
push
push
push
push
push
lea
push
call
add
add
fninit
add
add
filds
add
xchg
jno
std
add
loopne
les
add
sub
pop
movl
push
push
push
push
push
push
call
jecxz
add
add
push
pop
cld
add
popl
add
mov
add
jne
add
ljmp
add
in
call
jmp
pushl
push
push
push
push
push
call
add
add
push
add
in
pop
xchg
andb
int3
mov
push
popa
add
mov
add
mov
xchg
pop
add
add
sub
pop
pop
mov
push
add
add
pop
mov
push
add
dec
pop
mov
push
push
sub
push
push
pop
add
xor
shl
sub
xor
not
dec
pop
xor
add
not
pop
push
push
push
push
call
push
lret
add
push
add
add
mov
push
add
pop
pop
fwait
jge
add
cli
orb
adc
add
xchg
lock
in
mov
addl
push
nop
add
lcall
sub
pop
push
push
add
add
pop
call
push
push
call
test
mov
aam
add
int3
in
add
add
rcr
jmp
fwait
pop
into
mov
push
mov
in
incb
movsb
add
mov
sub
pop
cmpl
je
push
push
lea
push
or
inc
add
not
sub
sub
ror
rol
lea
pop
dec
pop
push
push
push
push
push
push
call
add
test
add
add
mov
push
lcall
add
ror
mov
jae
clc
push
jl
aam
aam
rolb
add
mov
fwait
jns
add
pop
add
add
scas
sub
pop
push
push
dec
pop
call
cmpl
je
push
push
shr
sub
shl
sub
push
and
add
inc
shr
sub
sub
xor
lea
pop
sub
pop
push
push
push
call
add
loopne
movsb
pop
icebp
add
pop
add
lahf
push
ficoms
stos
loopne
fldenv
aam
enter
aad
icebp
test
adc
add
jns
mov
add
out
nop
jo
rclb
add
filds
jno
pop
cmpsl
lahf
ja
ret
xchg
jmp
hlt
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
cltd
push
jl
hlt
add
add
push
mov
testb
imul
loope
int3
mov
pop
addb
xor
add
or
test
add
push
push
xor
sub
sub
add
push
sub
add
sub
sub
shl
dec
dec
shl
pop
shl
inc
pop
push
lea
push
lea
push
lea
push
lea
push
call
add
add
add
add
add
add
rcll
add
test
add
je
add
je
add
movsl
lods
add
add
add
in
lcall
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
add
xchg
add
add
push
add
add
sbbb
add
jge
movsl
add
fcmove
mov
add
test
loopne
sahf
jge
js
add
add
push
lahf
je
mov
lcall
cmp
add
push
inc
pop
cmpl
je
push
push
dec
xor
inc
push
xor
add
lea
add
lea
sub
pop
shl
lea
add
pop
push
push
call
add
sti
add
add
std
add
gs
add
push
add
add
jae
add
bound
add
add
fmul
add
lret
loope
add
stc
in
add
out
add
add
test
test
mov
std
add
pop
repnz
int
lea
push
xor
shr
pop
call
push
push
push
push
push
push
push
call
add
add
xchg
add
fidivl
add
add
add
clc
add
push
into
cmc
popa
push
add
xchg
add
add
pushf
mov
xchg
push
add
pop
add
rclb
xorl
test
testb
pop
cmpl
je
push
push
xor
rol
not
push
push
pop
add
xor
sub
lea
rol
dec
pop
xor
rol
pop
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
loop
bnd
subb
add
cltd
mov
mov
bound
cmpsl
xchg
cwtl
push
add
mov
jb
mov
arpl
add
leave
sub
pop
push
push
inc
sub
shr
pop
call
push
push
push
lea
push
lea
push
push
call
mov
add
test
add
add
mov
out
rcr
add
pop
add
iret
iret
add
mov
push
lods
add
push
fcoml
scas
lcall
mov
add
push
popa
add
add
add
clc
add
add
scas
mov
clc
icebp
mov
add
push
add
push
sub
pop
cmpl
je
push
push
add
shl
shl
push
or
not
add
lea
sub
sub
add
shr
pop
sub
dec
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
add
fwait
add
addr16
rorb
repnz
mov
add
add
std
xchg
test
add
mov
popf
sahf
jl
faddl
add
add
int3
repnz
add
sub
pop
push
push
push
call
add
xchg
add
add
mov
mov
fisubs
xor
add
cmpsb
test
aad
enter
jnp
xchg
js
push
aam
popa
add
mov
bound
add
add
mov
test
add
arpl
add
add
fs
add
in
clc
pop
call
push
ror
inc
pop
cmpl
jne
push
rol
ror
rol
pop
mov
push
not
sub
pop
movl
push
rol
xor
ror
pop
jmp
push
push
push
lea
push
push
lea
push
push
call
add
add
add
enter
add
sar
add
add
add
insb
add
cmc
pop
sti
jns
add
jge
loop
xchg
add
xchg
sub
pop
xor
push
push
push
lea
push
push
push
push
push
call
leave
movsl
add
repnz
sahf
add
cmpsb
scas
mov
enter
nop
ljmp
mov
add
add
mov
add
aam
jp
loope
insb
scas
fsts
rol
popa
add
add
mov
popf
ja
insb
add
sub
pop
pop
pop
push
add
ror
pop
pop
push
push
lea
push
call
cmc
mov
add
lock
cld
jbe
add
add
pop
add
cld
pop
test
add
add
iret
add
add
incb
mov
add
stos
add
mov
add
addl
add
lcall
push
push
push
push
call
add
stc
mov
add
mov
pop
jb
jns
ror
add
add
mov
addr16
mov
push
adcl
add
mov
mov
mov
stc
fadds
add
stc
cmpsb
mov
in
lock
lcall
ret
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
jne
xchg
xorb
push
call
jbe
testb
jecxz
movsl
pop
jnp
push
fldt
int
popf
mov
cmc
lret
add
lcall
mov
push
push
call
movb
add
mov
sahf
jp
shlb
in
add
mov
add
add
add
data16
pop
add
push
push
push
push
push
push
push
push
call
enter
xchg
add
ja
loop
faddp
add
add
add
mov
add
popa
popf
push
testb
rolb
add
mov
pop
add
add
add
clc
add
xchg
jns
and
add
jp
sub
pop
cmpl
jne
push
push
lea
not
push
or
inc
add
sub
rol
sub
sub
lea
dec
dec
pop
not
xor
pop
push
inc
not
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
pop
aad
add
add
loopne
add
add
add
scas
arpl
xchg
out
leave
add
add
xchg
add
push
add
jne
add
clc
pop
mov
fcoms
mov
fs
mov
add
sahf
mov
lds
add
add
add
js
insb
sub
pop
call
push
shr
rol
shr
pop
push
push
push
push
push
push
push
push
push
call
pop
iret
lds
add
movsb
mov
lret
add
mov
add
xchg
pop
mov
add
add
add
push
popa
cmpsl
pop
mov
add
add
test
fcoml
test
loopne
lcall
rclb
ficomps
dec
pop
add
push
inc
lea
dec
pop
cmpl
jne
push
push
push
push
push
push
call
add
stos
pop
cmpsb
addl
add
mov
cli
add
icebp
add
movsl
popf
scas
clc
add
pop
add
hlt
push
sub
pop
mov
push
sub
ror
sub
pop
call
push
lea
push
push
push
push
push
push
call
mov
push
add
lahf
xchg
add
cld
add
rolb
fdivl
mov
out
sbbl
cli
mov
ret
add
add
ja
pop
mov
xchg
faddl
addb
mov
cmpsl
mov
add
testl
jl
jmp
ret
push
shl
lea
xor
pop
jmp
cmpl
jne
push
push
shr
shl
push
or
inc
add
sub
shr
xor
lea
pop
inc
add
rol
pop
push
push
push
call
arpl
add
jmp
add
fadds
jge
pop
add
stc
add
add
add
pop
fsubs
add
add
clc
mov
add
jno
lret
arpl
lcall
jne
call
push
lea
sub
xor
lea
pop
push
call
push
lea
push
push
push
lea
push
push
call
xchg
mov
flds
add
mov
js
add
add
lods
mov
mov
add
mov
add
add
add
jns
pop
movsb
add
xchg
je
clc
addb
in
lahf
loopne
mov
add
jge
add
add
fildl
xchg
add
add
frstor
call
jmp
push
shr
pop
cmpl
je
push
sub
sub
add
pop
cmpl
jne
mov
push
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
mov
jge
add
add
add
jle
jnp
int3
lds
jne
enter
mov
mov
pop
mov
cltd
push
xchg
jbe
add
add
mov
add
icebp
rolb
imul
jae
pop
add
mov
icebp
add
add
add
mov
add
add
push
ret
push
push
inc
not
add
xor
push
xor
add
lea
rol
add
sub
shl
pop
lea
dec
pop
push
lea
xor
pop
pushl
call
push
add
shl
shr
pop
call
push
push
not
push
push
pop
add
ror
sub
not
pop
shl
pop
push
sub
pop
pushl
call
push
ror
inc
inc
inc
pop
call
push
push
sub
inc
push
and
add
xor
add
sub
pop
xor
dec
ror
rol
pop
push
inc
pop
pushl
call
push
add
pop
call
push
push
ror
add
add
push
xor
add
shl
sub
lea
ror
pop
add
pop
push
inc
rol
pop
pushl
push
not
dec
not
pop
call
push
push
call
shl
add
jo
add
scas
cmpsl
test
jno
jae
add
iret
add
add
aad
jecxz
enter
add
mov
add
add
add
sub
lcall
shrb
insl
loopne
push
shr
add
push
push
pop
add
lea
sub
add
xor
pop
not
pop
push
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
call
hlt
testb
add
add
ficompl
test
add
lcall
out
xchg
add
add
std
add
fstl
pop
call
push
push
not
push
xor
add
sub
sub
inc
ror
rol
xor
pop
sub
pop
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
loope
popa
push
int
push
mov
jmp
outsl
pop
test
pop
add
add
add
in
add
lods
mov
pop
add
add
test
movsl
cli
cmpsb
mov
fcomps
jne
call
push
push
push
push
push
call
add
mov
push
js
add
jge
mov
add
mov
mov
add
add
pop
jle
add
mov
add
loope
bound
adc
cli
xchg
mov
clc
sub
pop
call
push
push
sub
lea
dec
sub
push
or
not
add
not
inc
add
sub
shl
xor
pop
pop
push
push
lea
push
push
lea
push
call
je
lret
add
add
add
imul
addb
sbbb
fists
jno
test
add
gs
add
int
sub
pop
pushl
push
ror
inc
inc
pop
call
push
lea
push
push
call
add
push
add
jo
add
loopne
add
fwait
mov
add
pop
add
add
rclb
add
add
xchg
in
xchg
push
add
rolb
popf
jp
loope
add
xchg
add
add
fildll
ja
addl
jg
push
xor
add
add
push
or
not
add
ror
not
shl
shl
sub
not
inc
inc
pop
shr
add
pop
push
inc
ror
pop
pushl
push
pop
call
push
push
push
push
push
lea
push
push
push
call
add
add
nop
add
test
sahf
in
add
add
ror
add
xchg
testl
lret
cld
test
add
add
jnp
cmc
add
push
add
mov
jno
mov
loopne
lcall
shrb
mov
xlat
shr
xor
push
xor
add
shl
shr
sub
add
inc
pop
inc
pop
push
push
lea
push
push
call
add
pushf
fisttpll
mov
mov
add
mov
gs
add
add
bound
add
add
mov
jo
add
out
cwtl
jle
add
add
add
shlb
push
lcall
mov
in
lock
pushl
push
lea
sub
pop
call
call
push
push
add
push
or
not
add
sub
shr
sub
add
pop
rol
sub
pop
push
shr
pop
pushl
call
push
rol
add
lea
pop
lea
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
popa
mov
add
add
mov
std
mov
add
add
repnz
add
mov
pop
js
add
add
add
add
hlt
push
add
add
add
sub
pop
push
push
sub
dec
rol
not
pop
call
push
push
shl
sub
inc
push
or
inc
add
add
lea
lea
sub
shr
inc
rol
pop
add
shr
shr
shr
pop
push
sub
xor
ror
pop
pushl
call
push
inc
dec
sub
pop
call
push
push
add
rol
push
or
inc
add
dec
sub
xor
inc
ror
pop
lea
pop
push
push
push
lea
push
push
lea
push
push
call
mov
lcall
jns
test
rol
add
push
bound
add
add
stc
add
pusha
mov
popf
mov
jb
mov
in
add
addr16
addb
sahf
loope
sub
pop
pushl
call
push
dec
shl
xor
xor
pop
call
push
push
add
xor
add
not
push
xor
add
add
sub
inc
pop
ror
not
dec
pop
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
push
shlb
leave
aam
jge
add
mov
divl
mov
cld
cltd
in
mov
std
mov
pop
push
add
add
add
je
add
jbe
add
push
andb
mov
ljmp
pop
add
jne
push
add
pop
call
push
push
call
jecxz
add
mov
mov
xchg
add
jle
add
pop
enter
lods
jne
add
add
pop
pop
jl
add
add
add
jle
cwtl
sub
pop
call
push
push
sub
add
not
push
push
pop
add
add
lea
shl
sub
rol
ror
pop
inc
shr
pop
push
lea
push
push
push
lea
push
lea
push
call
bound
mov
add
add
negb
add
add
icebp
push
pushf
imul
jl
mov
xchg
add
imul
add
repnz
add
ficoms
cltd
stos
add
out
testl
nop
add
sarb
in
call
push
push
call
loopne
gs
jae
insb
add
xchg
mov
shl
out
pop
add
pop
mov
movsb
into
xchg
adc
add
loopne
add
nop
add
rorb
pop
je
pop
cli
adcb
mov
pop
call
push
push
push
sub
add
sub
shr
sub
rol
add
pop
sub
add
add
pop
push
push
ror
xor
shr
push
or
inc
add
lea
shr
sub
shr
sub
pop
add
add
pop
push
sub
pop
call
push
not
inc
dec
pop
pop
dec
jne
push
push
add
xor
push
or
not
add
add
ror
sub
sub
xor
rol
dec
pop
shr
pop
push
inc
rol
inc
pop
pushl
call
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
leave
add
cli
out
and
pop
add
add
pop
add
add
xlat
std
lods
jle
sti
rolb
pop
mov
jl
add
add
add
jl
add
pop
pop
mov
adcb
loopne
lcall
inc
hlt
push
push
push
push
call
hlt
out
jbe
add
lock
roll
add
mov
push
jmp
add
add
add
sti
mov
mov
add
push
faddl
xchg
add
je
insb
add
in
mov
xorl
pop
push
add
jl
pop
loopne
divb
add
rcll
lock
lea
push
push
add
not
push
or
not
add
sub
sub
sub
rol
pop
rol
pop
push
push
lea
push
push
push
call
popa
mov
add
add
push
pop
gs
cwtl
add
mov
add
repnz
add
add
fiaddl
out
push
pop
stos
out
lods
sub
pop
pushl
call
push
push
push
push
push
call
add
mov
add
add
leave
outsl
xchg
mov
add
in
add
push
mov
add
add
arpl
jnp
cmpsb
movsl
pop
xchg
loopne
mov
cli
add
pop
add
add
add
sub
pop
lea
push
shl
pop
push
push
push
ror
add
add
inc
pop
push
pushl
push
push
not
push
or
not
add
xor
lea
sub
not
pop
ror
rol
sub
pop
push
dec
rol
shr
pop
push
call
push
push
lea
push
call
cli
aam
add
test
jo
mov
add
mov
add
add
mov
xorl
jo
add
hlt
lcall
add
std
cmpsl
add
xchg
gs
popa
lahf
je
in
add
add
ret
add
add
stc
movsb
mov
call
push
lea
push
push
push
lea
push
call
add
fldl
add
jbe
testb
jecxz
iret
add
mov
add
pop
stos
add
call
push
cld
test
in
in
lcall
add
add
push
push
push
push
call
add
jmp
jbe
mov
add
imul
add
pusha
add
cld
jmp
movsb
add
mov
jbe
cwtl
ret
jne
add
in
jl
add
mov
add
add
adcb
aad
insb
add
lods
cmpsl
rolb
push
add
rolb
add
aad
in
lock
lea
push
push
push
sub
add
shl
sub
ror
add
pop
lea
lea
pop
push
push
push
push
push
push
push
push
lea
push
call
add
push
enter
loope
movl
add
incb
add
roll
add
pop
jmp
add
add
fldl
jnp
add
jl
enter
add
movsb
cli
jmp
mov
add
in
mov
in
lret
sar
xchg
add
out
sub
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
call
add
lret
jmp
in
add
jb
xchg
mov
add
ja
addl
sti
shrl
add
push
jns
add
mov
ret
pop
pop
add
add
ret
add
shl
dec
shr
xor
pop
call
push
push
dec
push
push
pop
add
sub
inc
sub
sub
rol
pop
sub
not
rol
pop
push
dec
dec
rol
ror
pop
pushl
push
inc
shr
pop
call
push
rol
pop
call
push
rol
pop
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
add
int3
add
ret
mov
add
out
add
clc
add
add
add
add
test
addr16
mov
add
imul
add
add
gs
movsl
add
add
pop
bound
in
cwtl
mov
sub
pop
lea
push
push
lea
shr
push
or
inc
add
sub
sub
shl
sub
shr
pop
rol
pop
push
sub
pop
pushl
push
push
push
push
push
lea
push
push
call
add
sti
fldcw
push
add
pop
xchg
add
add
xchg
mov
filds
add
pop
lods
add
movsl
out
in
add
jno
cwtl
stos
aad
mov
shl
add
mov
in
out
lds
in
subb
lcall
daa
adc
test
pop
add
fcmovb
ret
mov
push
push
push
push
lea
push
call
mov
popf
add
mov
add
popl
addl
lods
loop
scas
add
add
lret
shlb
push
jp
jnp
push
cltd
shll
lcall
add
rol
pop
push
push
shl
shl
add
ror
pop
pushl
push
push
sub
lea
dec
push
xor
add
xor
inc
not
shl
sub
shr
pop
ror
not
pop
push
sub
ror
pop
push
push
sub
rol
pop
call
push
push
not
sub
dec
push
or
inc
add
inc
sub
rol
dec
ror
pop
xor
lea
xor
pop
push
lea
shr
not
pop
pushl
call
push
xor
pop
push
push
not
add
pop
call
push
push
shr
push
sub
add
rol
add
add
sub
inc
sub
inc
pop
sub
pop
push
push
push
push
push
call
add
add
fwait
enter
add
clc
add
pop
add
add
add
repnz
mov
add
add
lcall
add
push
add
add
test
xchg
mov
in
add
add
fwait
movsb
jl
add
addr16
icebp
fwait
add
in
in
pop
pushl
push
add
xor
rol
pop
call
push
push
push
lea
push
call
popa
enter
push
clc
enter
add
add
cmpsl
test
add
add
add
loopne
add
add
add
push
hlt
subb
mov
pop
fiaddl
add
movsb
add
lcall
shlb
add
add
push
lea
push
push
push
push
push
call
add
mov
jb
sti
stos
add
add
add
fucomp
mov
int3
cwtl
xchg
jecxz
roll
jmp
loopne
stos
sahf
mov
lret
add
les
fldl
mov
add
pop
mov
jmp
push
push
ror
dec
sub
push
xor
add
xor
sub
add
shl
pop
add
ror
pop
push
push
push
push
lea
push
push
push
push
push
push
call
lret
jbe
pop
add
add
xlat
add
pop
cltd
lods
add
mov
popa
mov
jae
push
repnz
mov
add
fcmovbe
andb
fistps
add
add
les
add
mov
add
add
sub
pop
pushl
call
push
ror
add
inc
rol
pop
push
call
push
push
lea
push
or
inc
add
dec
xor
shr
xor
sub
shr
rol
pop
add
inc
ror
pop
push
lea
push
push
lea
push
lea
push
call
pop
scas
in
add
pop
add
out
add
add
testb
cwtl
add
fdivr
in
pop
fmulp
loope
pop
push
xchg
cltd
hlt
add
add
add
add
imul
jb
add
mov
add
add
add
add
add
pushl
push
push
push
lea
push
push
lea
push
call
jb
mov
add
add
clc
mov
mov
add
add
hlt
add
add
movb
adcl
add
add
xchg
sub
pop
call
push
sub
xor
pop
push
push
sub
shr
pop
call
push
shr
add
pop
leave
push
sub
sub
dec
pop
add
pop
push
add
dec
pop
pop
push
sub
pop
pop
xor
push
pop
inc
push
lea
pop
ret
push
push
push
push
push
lea
push
push
call
add
test
xchg
cli
pop
add
mov
add
add
popa
lods
loope
push
add
jno
cwtl
add
add
sub
pop
leave
push
lea
pop
ret
push
push
call
add
gs
int3
add
add
add
add
addb
jo
add
add
flds
jo
add
test
add
arpl
mov
xchg
add
filds
add
lahf
int3
add
ret
out
mov
sti
outsl
mov
add
lcall
push
push
push
push
push
call
add
push
movl
sti
add
mov
jmp
shr
add
xchg
add
sub
pop
mov
cmpl
jne
push
shr
shr
pop
mov
push
add
shl
pop
jmp
push
pop
mov
push
push
push
push
push
push
push
push
call
jbe
in
add
add
les
roll
add
mov
add
cmpsb
pop
push
je
shll
add
add
pop
add
and
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
test
js
test
add
add
push
mov
xchg
je
pop
ret
dec
pop
jmp
cli
ja
add
add
sbb
add
add
imul
jb
add
add
add
aam
add
mov
leave
push
sub
ror
xor
rol
pop
xor
push
lea
push
lea
push
push
call
push
pop
testb
xchg
add
add
test
fldl
mov
add
mov
clc
stos
add
filds
add
add
out
add
mov
in
jecxz
add
int
hlt
add
add
lcall
mov
mov
add
add
push
lea
push
push
push
push
push
push
call
repnz
aad
test
add
in
pop
add
mov
mov
xchg
cmpsb
jno
add
add
pushf
in
add
hlt
mov
jge
add
shlb
add
insb
add
push
add
sub
pop
xor
dec
push
not
inc
pop
sub
push
push
push
push
push
push
lea
push
push
push
call
add
add
xchg
xchg
stos
add
add
movsb
mov
add
mov
je
adcb
les
mov
sub
pop
jmp
push
pop
sub
push
inc
pop
pushl
push
push
push
push
push
push
push
call
push
arpl
add
mov
hlt
ret
scas
add
pop
in
lods
add
add
add
pop
mov
lret
jle
lods
out
scas
in
flds
add
mov
push
add
add
add
fldenv
add
les
push
add
pop
mov
in
xchg
lcall
add
mov
lcall
push
push
push
call
loop
add
imul
mov
xchg
lea
xchg
add
pop
xchg
xchg
add
fndisi(8087
add
mov
add
lcall
jmp
push
push
push
lea
push
push
lea
push
push
call
out
add
add
add
je
add
add
arpl
in
xchg
add
stos
arpl
add
xor
mov
cmpsl
incb
aad
sahf
add
out
fisubl
enter
add
lcall
add
ljmp
jb
lret
incb
add
cmp
mov
rol
shl
lea
pop
mov
lea
push
lea
push
push
push
push
call
add
add
sarl
int3
add
out
add
add
add
cwtl
add
add
add
add
xchg
lea
add
fwait
fimuls
pop
int3
mov
add
out
add
xchg
add
add
lds
add
mov
sub
pop
sub
push
add
rol
pop
mov
push
rol
sub
sub
pop
shr
push
push
push
push
push
push
call
add
fstpl
add
fadds
jns
push
add
add
cli
xchg
add
push
rcl
data16
jae
jns
in
call
add
push
not
pop
sub
push
push
push
call
pop
add
push
std
xorb
test
add
hlt
add
movsb
jge
loope
add
add
test
jge
testl
test
add
add
lahf
add
xlat
jl
fcmovb
cld
call
hlt
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
call
add
in
add
add
shl
add
add
xchg
add
xchg
mov
std
add
add
push
mov
mov
orb
jno
fiaddl
add
mov
add
addb
aad
push
add
add
add
arpl
cmc
add
lcall
push
push
lea
push
push
call
jns
mov
lret
xor
ret
mov
lea
add
jae
mov
loop
imul
stos
mov
imul
push
add
xchg
add
add
js
sti
add
movsb
mov
shr
push
push
lea
push
push
call
clc
add
notl
add
mov
cwtl
add
add
pop
add
mov
pop
pop
add
sti
xchg
je
mov
add
push
shll
add
inc
mov
aam
repnz
mov
push
mov
add
repnz
shr
stos
push
mov
jle
add
push
push
add
add
lods
lret
sub
pop
and
push
lea
push
push
call
add
add
cwtl
iret
add
test
mov
add
add
mov
add
movsb
add
sar
cmpsb
fsubs
cmpsb
add
push
add
add
sub
pop
sub
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
lret
addl
add
add
add
add
jge
loopne
lcall
test
jle
enter
lds
imul
repnz
fiadds
add
add
lret
in
imul
add
shlb
add
jmp
add
add
push
add
lcall
stc
sbb
test
stc
call
loope
pop
leave
push
add
add
rol
shr
pop
ret
push
lea
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
lea
stos
push
lods
add
cltd
add
ja
jp
xlat
lret
fldenv
notb
rolb
jp
aad
pushf
loop
out
add
fcmovnu
pop
test
in
fcomps
in
add
push
xor
pop
push
push
dec
xor
pop
push
push
dec
add
xor
pop
push
push
push
shr
pop
push
push
sub
pop
mov
push
add
ror
pop
lea
push
ror
add
inc
pop
sub
push
push
push
push
push
lea
push
push
lea
push
call
shl
addl
xchg
in
repnz
jne
push
jb
lret
fsubrl
repnz
test
iret
add
ja
js
mov
neg
mov
test
mov
stos
pop
out
xchg
addr16
mov
jmp
fcoml
add
rcrl
add
sub
pop
mov
push
sub
ror
pop
shr
push
lea
push
push
lea
push
lea
push
push
call
arpl
add
mov
fsubl
lret
add
add
mov
add
add
push
in
popa
mov
push
xchg
movsl
add
lcall
ficoml
rcll
gs
lcall
push
push
push
lea
push
call
imul
xchg
flds
mov
int
add
jbe
cmc
mov
add
mov
ja
data16
mov
jl
js
mov
mov
rcrl
nop
mov
mov
add
stos
cltd
xchg
rolb
mov
jle
loop
add
in
push
add
pusha
inc
arpl
lcall
fwait
addb
add
callw
add
cmc
shr
add
xchg
mov
mov
bound
xchg
add
add
add
xchg
add
in
fcompl
add
mov
xchg
jp
add
pop
or
daa
push
push
push
lea
push
push
call
mov
out
mov
add
fucomi
mov
add
xchg
add
sarb
mov
jnp
add
add
add
add
ret
sub
pop
mov
push
shr
shl
lea
xor
pop
add
xor
push
push
lea
push
call
add
fadds
movsb
out
add
add
xchg
data16
add
cmpsb
add
jo
xchg
int
add
mov
fldt
add
add
mov
enter
fadds
add
enter
lahf
add
add
add
add
add
faddl
jmp
sub
pop
mov
and
push
add
add
pop
rol
rol
push
push
lea
push
push
lea
push
push
push
call
mov
add
add
mov
aad
add
pop
add
iret
movb
add
add
ljmp
add
add
shlb
jae
xchg
in
mov
add
in
xor
push
push
push
push
call
xchg
mov
jmp
addb
add
cmc
add
lret
int3
add
mov
add
push
add
xchg
pushf
push
scas
mov
add
push
lret
add
fnstsw
mov
mov
incb
jo
hlt
mov
xchg
push
fisttpl
add
stc
roll
jecxz
loop
add
pop
inc
cmpb
jne
push
push
push
push
call
add
lods
imull
int3
xchg
pushf
add
scas
int
mov
add
mov
add
mov
test
add
add
mov
add
in
lock
lcall
inc
pop
ss
push
push
push
push
push
push
push
call
fisubrs
jecxz
add
mov
add
sti
scas
add
lods
sahf
add
push
xorb
ljmp
int3
add
iret
loopne
add
pop
add
push
outsl
push
std
divb
mov
add
pop
out
out
jbe
add
sahf
ja
push
fists
lcall
xorl
in
lcall
inc
or
test
ret
adc
push
lea
push
push
push
push
lea
push
lea
push
call
je
add
test
ja
add
pop
movsl
add
add
add
fidivrl
pop
mov
int
xchg
add
cmpl
add
mov
add
add
cmpsb
scas
fldl
jnp
sti
add
add
cmpsl
add
add
mov
add
add
add
add
stc
add
add
jnp
add
test
not
pop
xor
pop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
fcmovnbe
in
pop
add
pop
flds
xchg
add
cmpsl
add
add
lds
pop
xchg
leave
repnz
jmp
add
add
lcall
pop
push
rol
inc
pop
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
loope
les
je
jp
icebp
add
int
addb
mov
jle
add
in
fcomps
push
rol
shr
pop
leave
push
push
push
push
lea
push
push
push
push
push
call
add
add
mov
add
cli
add
rolb
repnz
sti
out
mov
xchg
sub
pop
ret
push
inc
sub
not
pop
mov
add
push
push
push
push
lea
push
push
call
push
add
push
jo
add
stc
int3
ja
out
add
pop
add
add
loopne
cmpsl
jo
add
add
add
add
mov
push
add
movsb
cwtl
xchg
cld
les
add
mov
add
lret
mov
add
lcall
add
pushl
add
push
dec
shl
pop
push
push
push
push
push
call
mov
add
stc
add
stos
jo
add
add
add
add
loopne
jecxz
aad
mov
fildl
movsb
add
add
add
movb
icebp
call
dec
decb
call
push
cld
xchg
addb
sti
add
cwtl
xchg
add
push
add
mov
mov
mov
add
add
add
add
jl
add
add
add
scas
xchg
add
jmp
pop
add
into
sub
pop
xor
push
dec
pop
pop
push
push
lea
push
push
push
call
add
add
test
pushf
add
int3
pop
std
add
cmc
addb
in
sahf
lahf
push
mov
add
iret
fisttps
in
pop
pop
push
push
push
push
call
mov
in
add
add
cld
loopne
shrb
add
mov
mov
push
mov
loope
lret
add
lahf
sub
pop
pop
push
add
rol
shr
pop
pop
push
not
shl
pop
pop
push
shl
lea
pop
leave
push
sub
rol
not
pop
ret
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
fildl
mov
add
add
add
add
hlt
mov
xchg
add
mov
fldl
jne
push
add
add
cli
add
popf
jnp
ja
add
test
push
popf
test
out
lods
xchg
mov
add
add
test
mov
jae
push
push
add
mov
arpl
add
add
fcomps
in
push
lea
push
push
push
call
add
xchg
lods
movl
pop
insb
lds
add
add
add
add
add
add
xchg
add
mov
add
lcall
hlt
push
push
push
push
lea
push
push
push
lea
push
push
push
call
jmp
loop
mov
mov
mov
mov
out
mov
icebp
fcomp
add
add
sarl
test
mov
out
xchg
jne
fwait
xchg
xchg
stos
mov
data16
mov
pusha
add
mov
ja
in
fcomps
push
sub
shl
shr
pop
push
push
add
inc
pop
push
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
mov
push
lods
ffreep
out
add
add
fldenv
add
mov
lret
push
add
add
add
mov
fdivrs
sbb
roll
lea
rolb
xchg
add
lret
js
add
jle
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
ja
js
jl
rcll
pop
loope
push
icebp
jbe
mov
mov
add
jge
lret
push
cltd
movsb
movsb
je
lds
add
add
sahf
add
jne
add
pop
in
mov
add
add
push
roll
fwait
leave
add
test
add
pop
push
pop
push
pop
lea
push
rol
pop
sub
mov
push
push
push
push
push
push
push
push
push
call
push
addr16
add
pop
push
add
fldl
mov
pop
mov
mov
je
add
fisubrl
add
add
pop
add
mov
add
pop
xchg
jl
add
pop
add
add
clc
js
int3
mov
add
mov
les
lcall
ljmp
orl
add
les
jne
rolb
lock
add
add
add
mov
scas
add
lds
mov
clc
pop
mov
push
lea
push
push
push
push
push
push
lea
push
call
loope
push
out
push
jnp
add
xchg
add
add
lock
jl
jnp
mov
add
add
std
lds
fsts
pop
pushl
popl
push
shl
xor
add
pop
mov
push
inc
sub
pop
add
xor
push
push
call
gs
jns
mov
xchg
stos
xchg
add
push
call
fcmovu
test
add
std
std
data16
nop
add
mov
out
jecxz
out
add
add
loopne
in
clc
pop
lea
push
push
lea
push
push
push
push
call
add
add
push
rolb
add
roll
testl
cwtl
ror
xchg
add
add
lret
xchg
pop
add
add
ret
jne
mov
faddl
iret
pushf
xchg
pop
leave
add
mov
add
add
add
adc
ret
loopne
xchg
mov
ret
jg
stos
jnp
jmp
pop
add
xor
push
push
push
push
push
push
push
push
call
push
lods
mov
jle
scas
pop
test
ficoml
lahf
ror
add
push
lods
mov
roll
add
add
pop
add
cli
mov
imul
into
pop
add
scas
add
add
jle
fildl
out
pop
out
addl
imull
lcall
rolb
rol
add
pop
nop
nop
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
push
aad
fwait
add
add
push
add
add
fwait
test
lds
lea
add
mov
add
filds
call
add
add
add
mov
je
push
add
fsubl
lahf
add
and
add
in
fdivr
lcall
add
pop
push
xor
push
push
call
jl
add
addr16
add
add
pop
add
fsub
add
addr16
mov
ficompl
mov
pushf
mov
outsl
ljmp
add
add
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
push
add
clc
pushf
add
ret
mov
mov
add
popl
test
add
sarl
lcall
add
add
add
in
fcomps
push
shr
pop
nop
push
not
add
pop
nop
push
sub
shl
pop
cmpb
jne
push
not
dec
rol
pop
add
nop
push
add
add
shl
dec
pop
nop
push
add
inc
shl
pop
cmp
je
nop
push
rol
add
add
shl
pop
nop
inc
push
push
push
call
add
pop
testb
mov
je
push
add
shll
mov
add
push
push
shrb
jecxz
jge
mov
xchg
mov
pop
add
add
loop
in
hlt
pop
nop
push
push
lea
push
call
jbe
add
add
add
in
mov
shrb
add
loop
push
add
jl
xchg
add
xchg
add
add
add
push
clc
add
add
je
push
add
jbe
add
sub
pop
nop
push
push
call
add
add
lods
rclb
add
add
add
add
shr
lea
mov
push
bound
adcb
push
add
jle
add
add
roll
cmpb
test
roll
in
clc
pop
cmp
jb
push
push
push
push
push
push
push
push
push
call
add
rclb
add
in
int
mov
add
test
cmpsb
aad
add
mov
test
add
xchg
out
faddl
xchg
add
and
mov
add
mov
add
fucomp
add
cld
pushf
test
sti
add
icebp
lods
mov
sub
pop
xor
push
sub
rol
sub
pop
jmp
push
sub
pop
mov
add
push
push
push
push
push
push
push
push
push
call
add
push
faddl
add
bound
jmp
sahf
test
jbe
aam
imul
stos
add
add
push
sti
popa
sub
pop
movzwl
push
push
push
push
lea
push
call
push
arpl
js
add
fcomi
pop
add
pop
fdivr
scas
add
add
in
add
negl
into
mov
add
jle
add
popa
mov
mov
add
aad
mov
xchg
add
out
mov
cltd
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
call
fwait
loopne
jmp
rolb
add
addb
add
add
out
movl
scas
mov
add
in
push
lock
mov
fucomp
jnp
add
lcall
rcll
stos
adc
shrl
inc
lds
test
push
push
call
fstpl
mov
add
add
fs
jl
add
into
add
insb
cmpsl
add
fwait
pop
add
shlb
test
in
in
mov
push
ror
shr
rol
pop
xor
xor
push
push
call
pop
add
push
jnp
mov
in
pop
shll
add
mov
cltd
lret
push
add
cli
lods
clc
add
int
mov
add
mov
fldl
arpl
add
add
mov
xchg
cltd
jb
jno
add
clc
pop
shl
push
push
push
call
cmpsl
add
mov
add
add
add
incb
add
add
add
mov
int3
add
pop
test
std
les
add
add
sub
pop
xor
push
rol
sub
pop
shl
push
push
push
push
call
loop
pop
add
add
fdivrl
add
add
add
fwait
ret
add
mov
icebp
movsb
add
stos
cltd
repnz
jb
add
nop
mov
test
sub
pop
xor
push
push
lea
push
lea
push
push
call
addl
cld
add
in
xchg
add
jbe
aam
jmp
pop
mov
out
rcrl
mov
mov
mov
jmp
sub
pop
shl
push
push
call
add
iret
in
and
add
in
add
stos
lcall
aad
lds
xchg
popa
stos
fwait
add
stos
add
add
add
xchg
incb
stos
mov
lcall
or
push
lea
pop
mov
push
sub
add
inc
pop
add
pop
push
shr
inc
pop
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
add
lea
lret
fadds
in
iret
add
pop
ljmp
push
add
pop
mov
mov
add
mov
mov
leave
mov
addb
int
push
add
std
jl
pusha
ret
stos
xchg
add
add
lcall
pop
push
pop
leave
push
xor
shl
pop
ret
push
push
lea
push
push
push
push
call
add
add
jno
fiadds
add
xchg
add
add
add
add
test
je
add
lahf
mov
into
add
outsl
mov
in
push
push
lea
push
lea
push
call
icebp
add
divb
xchg
mov
mov
test
add
lds
push
add
jle
cwtl
add
add
xchg
add
fldz
add
mov
data16
add
je
in
add
add
add
enter
lcall
push
push
call
int3
lods
lret
add
add
add
add
pop
push
out
into
fwait
jecxz
mov
add
add
add
xchg
add
sub
pop
push
push
push
call
lret
add
mov
les
xchg
add
out
add
fdivrp
fidivrs
mov
addl
call
push
push
add
loop
mov
mov
out
movsb
mov
in
clc
lcall
push
shl
inc
pop
mov
push
push
lea
push
push
push
push
call
add
add
mov
mov
mov
stc
lret
mov
add
cmc
test
add
fldenv
mov
add
fwait
pop
add
jl
add
call
push
push
call
mov
in
add
popa
out
push
push
scas
lea
add
or
rclb
add
test
add
xchg
add
add
jge
push
shr
pop
test
je
push
pop
mov
test
je
push
lea
push
push
lea
push
push
push
push
call
add
enter
add
cmc
mov
add
stos
jns
addl
mov
add
ficompl
add
jecxz
add
subl
leave
sub
pop
mov
push
shl
ror
pop
mov
push
lea
push
push
push
push
push
call
mov
xchg
add
fwait
mov
repnz
add
lea
rolb
out
add
add
pop
add
int
in
call
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
push
push
cld
add
xchg
add
repnz
add
movsb
add
mov
bound
iret
pop
add
pushf
xchg
push
add
testb
push
add
in
xlat
jae
sub
pop
cmp
je
push
push
push
push
call
mov
add
lret
testb
add
add
in
ljmp
sahf
call
pop
mov
pop
popl
rorb
loop
add
push
push
push
call
fwait
jne
mov
jge
add
add
add
in
mov
add
add
add
iret
add
add
add
add
add
add
ja
add
add
fs
add
xchg
push
pusha
in
addb
out
fadd
pop
add
add
add
in
hlt
pop
mov
push
sub
shl
shl
pop
inc
push
sub
lea
pop
cmp
je
push
sub
pop
test
jne
push
push
push
push
lea
push
push
push
push
call
add
cwtl
aam
out
add
add
add
pop
add
cmpsb
stos
fwait
add
stos
add
add
add
add
add
xchg
add
in
xchg
jb
sarl
rcll
loopne
xor
push
rol
shl
pop
pop
push
rol
rol
pop
pop
pop
push
rol
lea
pop
pop
leave
push
push
push
push
push
lea
push
push
push
call
mov
add
mov
jae
add
filds
cmpsl
add
add
push
mov
pop
fwait
lret
lds
add
add
add
push
add
sahf
jb
jmp
add
pop
mov
jmp
add
add
stos
sub
pop
ret
push
lea
push
push
push
push
lea
push
push
push
call
add
fnsave
add
loope
add
mov
lahf
popa
test
add
jbe
push
add
pop
stos
rcrb
imul
test
xlat
add
pop
cli
test
pop
push
xchg
rclb
pop
hlt
add
add
add
add
mov
add
add
movsb
icebp
add
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
jge
loopne
data16
add
add
test
push
sti
mov
add
jno
add
add
movsb
mov
add
pop
repnz
pop
push
add
roll
enter
out
add
jnp
add
data16
add
add
in
fcompl
push
lea
push
call
nop
shrb
pop
pop
add
mov
xchg
add
pop
add
into
add
into
test
add
mov
add
sarl
mov
lret
repnz
add
push
pop
mov
add
lcall
lock
lea
push
not
ror
rol
pop
mov
test
je
push
not
pop
mov
add
push
lea
push
call
add
add
add
add
enter
add
pop
out
jae
stos
aad
add
add
add
add
jle
out
add
add
add
xchg
in
xchg
loope
fists
add
mov
mov
call
add
mov
lcall
loopne
test
add
lea
push
lea
push
push
lea
push
call
repnz
add
add
mov
add
add
hlt
pop
push
xchg
mov
fwait
add
add
add
push
arpl
xchg
fwait
add
out
repnz
add
lret
add
add
rorb
dec
add
add
inc
push
push
push
lea
push
lea
push
push
call
add
fnstenv
add
mov
xchg
mov
add
popa
std
add
cmpsb
into
mov
scas
pop
add
imul
repnz
icebp
xchg
add
add
push
scas
add
scas
js
in
add
jl
push
add
push
bound
jo
push
add
outsl
jo
iret
mov
pop
test
in
loopne
lcall
incw
in
daa
jbe
mov
sbb
xchg
aas
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
push
rcrb
mov
scas
add
pop
add
clc
add
add
add
cltd
add
add
mov
mov
movl
rcll
mov
fucomp
arpl
pop
add
add
add
add
sub
pop
cmp
je
jmp
push
lea
push
push
push
call
scas
add
add
add
clc
ja
push
cli
int3
cmpsl
scas
jne
movsl
add
andl
add
push
fcoml
mov
mov
add
bound
test
in
lock
xor
pop
push
push
push
push
lea
push
push
push
push
call
lds
add
fsts
mov
add
lock
push
bound
mov
in
add
add
mov
pop
add
add
add
add
lock
add
lods
mov
out
arpl
cmpsl
add
ret
loopne
pop
push
sub
pop
pop
push
pop
pop
push
dec
pop
leave
push
add
pop
ret
push
push
push
lea
push
push
push
push
call
data16
add
bound
add
arpl
roll
xchg
test
movsb
xorl
add
add
add
js
add
call
mov
scas
mov
add
pop
test
add
jle
sub
pop
lea
push
push
push
lea
push
lea
push
push
call
mov
mov
sbbb
push
enter
gs
add
jb
arpl
mov
add
add
data16
testb
pop
pop
pop
push
add
pop
pop
push
push
push
push
lea
push
call
cli
movb
add
outsl
mov
sahf
pop
add
orl
add
xchg
faddp
cld
lret
add
cwtl
pusha
ret
push
aad
add
idivl
nop
add
fs
jp
add
mov
pop
add
add
push
ror
rol
pop
leave
push
push
push
push
lea
push
push
push
push
push
call
cli
loope
add
mov
add
hlt
add
pusha
iret
jmp
pushf
popf
pop
lock
cmpsb
out
xchg
ret
add
add
add
in
addl
add
jl
add
add
add
int
add
jl
iret
add
add
test
xchg
add
add
lcall
or
push
lea
add
pop
mov
pop
push
sub
xor
lea
shl
pop
pop
push
sub
shr
pop
pop
push
push
push
call
orb
lea
iret
icebp
roll
in
lods
mov
add
add
adc
add
add
imul
shr
sub
pop
leave
push
push
lea
push
push
push
lea
push
call
push
into
popa
repnz
add
add
jo
in
jae
in
add
add
popl
stc
add
add
add
out
add
mov
add
mov
mov
add
movsl
add
add
add
add
imul
call
out
jl
iret
out
jl
iret
sar
iret
iret
out
lods
lret
iret
out
pushf
iret
iret
iret
cmp
iret
iret
out
fmul
iret
out
iret
iret
iret
testb
iret
inc
loopne
push
mov
in
jbe
rclb
push
or
in
rcrb
mov
push
mov
pusha
jge
in
test
test
cmc
fwait
call
ljmp
xor
pop
and
pop
fnstcw
sti
loop
fs
jno
sahf
arpl
mov
push
rclb
ret
xchg
pop
xchg
push
test
enter
mov
push
push
cltd
jl
shlb
mull
jnp
add
push
fildll
mov
mov
mov
cwtl
or
mov
xchg
orl
test
pop
inc
outsb
mov
mov
pop
mov
imul
jge
iret
aaa
and
lret
jp
pop
movsl
stos
inc
push
sub
or
ret
inc
hlt
movsb
fwait
dec
dec
popa
mov
inc
daa
mov
sbb
push
andl
mov
dec
adc
push
popa
inc
add
stc
push
mov
dec
movsl
in
imulb
fs
popa
add
fbstp
popf
aad
or
pop
repz
data16
insb
jl
mov
call
aaa
mov
mov
pop
and
loopne
repnz
insl
cwtl
xchg
and
sahf
dec
out
push
and
xchg
push
push
iret
cmp
xchg
adc
jne
popa
movlps
dec
adc
mov
loopne
iret
or
push
and
std
add
nop
lods
add
nop
arpl
mov
test
lret
test
pop
je
aam
sbb
inc
mov
pop
insb
lahf
cwtl
mov
mov
pusha
push
testl
ficoms
rcll
xor
mov
dec
mov
shr
pop
movsb
jge
les
pop
fsts
cltd
in
mov
leave
add
or
inc
mov
inc
outsb
or
test
sahf
cmp
or
test
gs
pushf
pop
lods
pop
and
fnstenv
gs
pause
lret
leave
aaa
cmp
stc
adc
aad
movsb
xor
mov
push
add
loopne
lds
push
dec
popa
dec
push
push
mov
fstpt
outsb
lods
adc
outsl
xchg
orb
lret
jae
lcall
or
es
xor
or
and
sbb
mov
push
xor
add
aam
imul
mov
mov
mulb
xor
popf
and
enter
std
mov
bound
add
mov
nop
inc
inc
imul
rcrb
or
fwait
pop
shl
cmp
push
int
ss
jp
or
mov
xor
ss
lods
mov
mov
push
adc
out
loope
cmp
adc
push
popf
test
lahf
sbb
add
jg
nop
mov
adc
mov
mov
dec
xchg
dec
jge
inc
xor
adc
loop
dec
mov
test
xchg
fucomi
sub
lret
add
or
push
push
inc
push
mov
out
outsb
add
pop
pop
push
xchg
aas
andb
dec
inc
in
mov
xchg
mov
xchg
inc
xchg
jns
arpl
mov
jnp
or
push
data16
sub
repz
inc
or
cld
and
pop
int
mov
int3
loopne
mov
mov
icebp
test
or
mov
inc
lahf
aaa
add
aas
pushf
mov
popa
pop
pushf
jae
sub
iret
ja
fidivs
push
mov
add
push
adc
mov
or
mov
lcall
cli
icebp
or
and
mov
xor
loopne
pushf
std
stos
cmp
jp
or
je
aad
mov
sbb
xor
sbb
sub
lods
ret
cmp
push
or
and
mov
cmp
int
sub
jo
jo
pop
cld
lods
andb
and
jp
xchg
cwtl
out
lods
daa
sbb
or
cmp
ja
bound
jnp
mov
push
leave
xor
cltd
not
mov
es
adc
inc
sbb
adc
xchg
dec
ja
subl
shrl
in
jl
push
pushf
jae
fsubs
inc
int
hlt
je
inc
mov
jns
addl
int
adc
jle
stos
push
out
cmpsl
mov
dec
out
sbb
pop
cs
pushf
imul
inc
loop
enter
cld
inc
aas
ret
push
add
dec
sub
xor
movntps
adc
fwait
cli
test
lods
pusha
sub
iret
cmpsl
scas
shlb
sub
loopne
ss
jle
xor
cmc
mov
daa
je
mov
cmpsb
jle
stos
shl
in
inc
in
popf
fidivrs
and
mov
rorl
fnstcw
into
dec
mov
xchg
add
mov
jbe
sub
hlt
leave
jecxz
xor
pop
je
pop
pop
loop
cld
mov
sbb
fbld
in
cs
mov
data16
pop
inc
fs
push
pop
sbb
out
inc
jge
inc
xadd
popa
pop
inc
pusha
pop
mov
xchg
adcl
in
cli
cmp
inc
pop
xor
lcall
insl
and
mov
bound
lahf
pop
inc
lret
rcr
fadds
in
out
mov
push
cltd
jecxz
outsb
movaps
stos
jno
leave
jb
bound
mov
test
ret
adc
pop
xor
fs
cmp
in
movsl
inc
jl
inc
adc
xchg
pop
sub
negb
push
ret
and
jp
or
cmp
push
jno
dec
jecxz
push
pop
es
or
adc
mov
movsl
pop
dec
pop
or
sub
push
je
dec
cmpsl
or
gs
ret
shrb
mov
sbb
fucomip
xchg
fsubrs
dec
sub
ret
mov
fsubrs
xchg
mov
imul
cwtl
push
xchg
or
add
je
sarl
sbb
addb
pop
add
pop
mov
test
arpl
scas
clc
out
fistl
xchg
xchg
movsb
mov
les
rcrb
inc
cli
je
lock
dec
mov
or
leave
push
jb
push
cli
fistpl
pop
shl
mov
push
int3
or
xchg
aas
jb
scas
arpl
cmp
in
setl
in
lcall
loop
enter
flds
es
in
adc
cld
push
movsl
sbb
ss
pop
ret
lods
xor
ffreep
inc
arpl
stc
mov
xchg
or
cmpsl
inc
mov
pop
aas
dec
divb
mov
xor
push
popa
mov
sbb
nop
or
outsb
idivl
out
in
aaa
outsl
cltd
sbb
pop
outsb
popf
push
sub
adcb
sarb
mov
mov
pop
jl
and
dec
dec
adc
push
cmp
std
test
pop
stc
push
push
mov
lea
and
movsl
ja
add
outsl
in
jge
daa
daa
xchg
repz
and
arpl
std
sub
jo
clc
push
pop
call
stos
or
std
mov
cmp
push
aaa
lcall
lods
pop
movsb
and
cwtl
dec
sbb
shr
dec
ds
and
cmpsb
icebp
filds
jae
inc
xor
mov
icebp
scas
repz
inc
sbb
fiadds
lds
fnstsw
add
push
in
xor
and
int
adc
mov
js
outsl
in
insb
div
int
pop
xchg
sub
sbb
sub
fsubl
enter
xlat
jmp
adc
cmc
inc
sbb
pop
jle
dec
je
and
xor
jns
hlt
jp
shlb
xchg
mov
xchg
add
mov
addr16
das
lcall
imul
mov
push
ret
imul
jns
popa
out
out
or
or
sbb
pop
pop
inc
movsb
in
imul
mov
mov
dec
inc
rcll
cwtl
xchg
ds
inc
xor
lea
mov
sbb
enter
jnp
cmp
fimull
rorl
testb
rolb
add
shll
pushf
outsl
mov
sbb
push
jno
pop
leave
dec
fidivs
mov
jecxz
in
sti
cs
dec
notl
mov
jns
outsb
mov
das
in
inc
cmp
xlat
outsl
sbb
xlat
push
cmc
movsb
or
or
xor
add
cli
ficomps
pop
lods
push
leave
cs
es
cmpl
ja
std
cs
test
mov
push
fistpll
adc
sub
out
test
rorb
ljmp
jecxz
inc
into
movsb
xchg
lcall
cwtl
fldenv
xor
pop
xchg
cmc
aad
dec
cmp
cmpsb
daa
imul
movsb
mov
xorb
ret
push
rol
loopne
sbb
adc
int3
xchg
imulb
popa
cmp
adc
stos
jae
mov
arpl
cmp
dec
movsl
jecxz
dec
sub
jb
aad
xchg
mov
aas
xchg
push
pop
and
sub
cmp
rol
mov
mov
stc
pop
insl
xchg
add
pop
js
or
mulb
push
sub
dec
jb
and
sarl
lods
ficomps
dec
xchg
imul
push
xorl
stos
lods
mov
add
mov
int3
sbb
mov
mov
inc
movsl
mov
lods
stos
mov
jmp
and
xor
shl
push
add
ss
adc
add
jecxz
hlt
sub
mov
mov
cmc
or
push
mov
hlt
cli
mov
in
pop
mov
xor
dec
pop
add
sub
mov
ja
mov
cmpsb
in
jns
cwtl
fstpt
aas
jl
addr16
mov
test
jecxz
cmp
mov
mov
dec
or
sub
push
xor
lods
outsb
test
xchg
imul
xor
sub
sub
sub
repz
movsb
push
xchg
push
int3
nop
fadd
or
jl
daa
mov
lcall
xor
pop
pushf
push
mov
jp
dec
insl
and
icebp
lods
cli
dec
push
mov
inc
dec
lret
push
jbe
stos
xor
mov
mov
jne
mov
inc
mov
ret
xor
jne
xor
aad
pop
mov
clc
test
sub
cli
and
mov
test
out
add
mov
cltd
xor
stos
mov
xchg
and
add
sbbb
call
jmp
call
outsl
fmuls
jmp
fcmovbe
mov
cmc
inc
mov
pushf
std
aaa
loop
scas
sub
inc
pop
mov
rclb
mov
lret
std
cmp
xchg
adc
sbbl
pop
repnz
cmpsb
mov
adc
sub
ljmp
xchg
dec
inc
and
mov
cs
mov
iret
test
dec
add
pushl
cmp
outsl
xor
sub
adc
xor
push
fstpl
loope
icebp
cli
pushf
sub
sar
fpatan
loop
jg
fwait
inc
les
jnp
dec
out
cld
sbb
bound
sub
inc
test
dec
cmp
sbb
in
jge
mov
sbb
lods
jnp
jns
sti
pusha
cmp
dec
out
jle
sub
push
add
dec
test
and
pop
jnp
sbbb
cmp
jae
mov
movl
rcll
xor
lods
js
sbb
sbb
test
mov
inc
pushf
dec
scas
mov
pop
jo
cmp
jnp
mov
pop
lods
aaa
xor
dec
aam
mov
cmp
test
or
mov
pop
sub
data16
sbb
and
lcall
inc
mov
shlb
mov
addl
test
jp
adc
xor
les
mov
in
pusha
pushf
xchg
lret
ret
lret
fisttpl
or
add
adc
sub
mov
std
lret
orl
xor
xchg
mov
lea
mov
adc
sbb
aam
in
fmull
cmc
or
add
cmpsl
rcrl
xor
or
les
and
mov
fwait
push
push
push
imulb
popa
rcrb
push
mov
loop
por
xchg
pop
lret
push
adc
in
gs
shrl
or
push
inc
scas
cmp
ret
inc
or
pop
cmc
movsl
fsubl
loopne
inc
addr16
jle
mov
mov
divl
jl
enter
jmp
cmpsl
ret
js
test
dec
xchg
lret
cmp
sbb
sbbb
mov
push
int
xchg
and
sub
jae
outsb
pop
fstl
dec
cld
sub
or
bound
std
ja
jbe
fdivs
movsb
bound
filds
mov
xor
outsb
loope
subb
adc
ljmp
jno
mov
sarb
aas
stos
in
xlat
rolb
dec
adc
push
mov
push
stc
pop
pusha
dec
fmull
cmp
sbb
mov
lds
mov
mov
shr
mov
scas
mov
arpl
sarb
mov
fucomip
mov
jmp
sbb
mov
xchg
fsubr
pop
adc
iret
in
add
cmp
cmpsb
mov
arpl
mov
pop
jne
test
ds
pop
adc
mov
cltd
in
imul
mov
pop
mov
jg
enter
mov
test
in
das
sti
xchg
inc
push
add
pop
cmc
fcompl
ja
stos
sarl
xor
leave
stc
lahf
xchg
test
push
pop
shl
std
mov
icebp
in
jge
xchg
cltd
das
or
pop
or
scas
insl
and
dec
inc
cld
lods
test
dec
sti
iret
aas
leave
lock
stos
and
sub
enter
pop
jmp
lods
xchg
jg
cmpsb
sbb
lea
xchg
loopne
sub
xor
pusha
pop
mov
add
in
inc
iret
mov
leave
adc
fldl
in
ljmp
stc
adc
dec
cmpb
sarl
popf
pop
into
sub
xchg
in
insl
pop
in
sbb
loope
jns
and
test
leave
adc
mov
xchg
test
dec
loope
pop
mov
nop
pop
adc
dec
in
mov
xchg
sub
or
dec
push
andb
mov
movsl
xor
imul
out
in
loop
or
sar
movsb
sub
xchg
sbb
adc
fimuls
mov
jb
jno
das
mov
adc
pop
mov
sbb
aas
je
test
push
dec
mov
sub
popf
in
dec
imul
pop
test
sbb
inc
fwait
adc
jmp
dec
pop
std
mov
fistl
mov
gs
push
push
pop
push
loop
jg
adc
pop
xchg
inc
xchg
add
es
clc
fs
push
lods
addr16
mov
imul
andl
mov
ror
sbb
inc
and
mov
shrb
aas
test
daa
lods
jle
cld
cltd
adc
sbb
ss
sbb
movsl
sahf
in
out
push
stos
int
out
ret
xor
pop
sub
outsl
aad
test
mov
pop
rclb
icebp
fwait
dec
aad
mov
ret
jns
les
jmp
out
dec
pop
fwait
adc
sbb
cltd
mov
sub
pop
add
outsb
cmpsl
cmpsb
in
sbb
push
mov
mov
ds
adc
mov
xor
push
aaa
sub
push
sub
test
xor
push
xchg
fnstcw
call
scas
sbb
sbb
je
addr16
mov
movsl
fbstp
mov
mov
cld
ret
das
imul
dec
aad
push
loop
in
cwtl
xchg
es
or
mov
add
mov
sar
outsl
mov
xchg
inc
loopne
insb
push
inc
jbe
mov
jae
or
mov
cmc
sbb
test
jle
dec
push
shrl
repnz
in
popa
push
rcll
mov
sahf
jl
push
cmp
xchg
das
mov
adc
lcall
jge
icebp
in
loope
int
xchg
push
lods
dec
xchg
sti
lock
cmpsb
xorb
pusha
mov
inc
cltd
or
cmpsl
jmp
sub
out
xor
inc
push
dec
jp
dec
xor
sub
out
push
fnstsw
nop
fstps
and
in
mov
pop
movsl
lahf
das
in
jl
add
cld
scas
test
sub
rcrb
lods
adc
fdivrp
mov
in
xchg
clc
xorb
cmp
xlat
aam
xchg
in
pop
push
sahf
cmp
ficoms
jne
ds
push
scas
test
sbb
push
in
fsubl
sub
sbb
cmpsl
lret
call
scas
or
or
pop
xor
xchg
dec
xlat
xor
mov
inc
or
cmp
outsl
fildl
add
xlat
or
dec
add
in
sti
jo
cmpb
mov
decl
jae
bnd
mov
pop
push
jg
mov
nop
outsb
or
and
pop
out
fistpll
outsl
ja
and
or
sbb
std
pop
hlt
push
arpl
daa
rolb
cmpsl
push
and
in
mov
mov
mov
ds
in
fsubrs
mov
lds
stc
decl
imul
push
rcll
xchg
mov
or
lock
and
imul
arpl
mulb
jo
cmp
lock
ja
or
test
mov
lret
pop
xchg
out
xchg
lahf
cmp
lcall
es
xor
sbb
jg
dec
add
sub
jle
adc
dec
lock
js
stos
jmp
aaa
mov
cmp
lcall
push
out
push
and
push
incl
imul
adc
mov
cmp
dec
mov
les
add
std
jp
sub
xorb
mov
jmp
push
mov
adc
push
mov
les
mov
sbb
push
sbb
push
mov
mov
jle
ucomiss
mov
xlat
rorb
push
cmp
and
call
xchg
push
out
stos
es
movsl
nop
mov
xor
inc
xchg
je
in
sbb
mov
sbb
movsl
faddp
sub
cmpsb
inc
gs
jge
loop
mov
inc
daa
sbb
ret
fisubl
scas
push
or
jnp
ss
push
cmpb
mov
lock
inc
das
mov
cmp
pop
and
sbb
mov
push
mov
mov
adc
cmp
inc
sub
mov
incb
adc
test
and
pop
ret
push
shll
nop
xor
mov
xchg
cmp
arpl
scas
cli
push
mov
pop
js
aad
rclb
dec
push
out
loopne
pop
jl
in
xor
outsb
sub
ja
pop
pop
add
and
or
nop
mov
lcall
test
jne
jecxz
inc
xor
pop
js
cmc
cmpsw
loopne
jnp
dec
les
pop
pop
jo
push
fnsave
mov
sub
rcr
icebp
mov
ret
mov
arpl
mov
sbb
popf
pop
xchg
das
xchg
sbb
in
stos
aas
push
cmc
jp
adc
test
or
je
inc
push
xchg
ss
mov
sub
lods
xchg
pop
jb
stos
or
test
lcall
mov
imulb
mov
loop
sbb
pushf
imul
jle
es
jo
loope
sarb
adc
mov
cmp
les
xchg
sub
rcll
or
push
xchg
inc
jns
push
pop
es
fdivs
pushf
jl
sar
jae
pop
ror
call
xchg
cmpsb
pop
and
inc
and
and
pop
xor
mov
push
int3
out
inc
jne
hlt
pop
pop
repnz
mov
sbb
shrb
cmp
arpl
ret
push
loopne
inc
in
stos
push
test
cmp
ret
dec
or
mov
pop
sbb
scas
insl
xlat
fisubs
shrb
push
mov
inc
test
das
in
cmp
and
xor
jno
arpl
mov
jge,pn
push
dec
outsl
popf
lret
mov
int
mov
pop
and
popa
mov
and
pop
push
adc
xchg
xor
xchg
mov
inc
lret
ds
pop
ljmp
inc
loope
xor
inc
ss
pushl
filds
jecxz
and
fdivl
ja
xchg
cli
push
jnp
aad
fcmovbe
xchg
sub
inc
xchg
push
jmp
xchg
or
adc
in
sub
xchg
mov
pop
cmp
lret
aas
add
repz
push
jg
sub
jno
dec
add
mov
mov
cmpsl
and
inc
mov
popa
inc
data16
fstpt
xor
mov
add
sub
and
lahf
mov
movsb
lcall
std
lcall
jg
into
in
sub
dec
push
aaa
scas
aaa
out
sbb
push
test
add
dec
inc
mov
aas
or
icebp
cmpsb
mov
push
scas
roll
iret
int3
push
pop
fdivr
mov
scas
into
cmpsl
xchg
shl
mov
data16
dec
sub
inc
cmc
sub
in
and
mov
sub
popa
cmp
pop
ret
mov
inc
push
test
sbb
sahf
dec
lea
les
xchg
mov
push
mov
or
jb
pop
and
addr16
and
or
xor
jnp
test
hlt
fists
push
idivl
notb
sbb
lock
xchg
adc
rcl
insl
inc
dec
mov
inc
jno
dec
mov
jno
lea
pop
add
jb
sub
rol
popa
mov
sub
lcall
mov
mov
roll
push
les
jl
jns
hlt
in
sbb
mov
sbb
or
cmp
pop
or
cmp
ljmp
call
loop
jnp
fistpl
mov
ss
pop
fwait
jae
xchg
xor
fsubr
sbb
mov
xchg
ljmp
ret
lods
cmp
lods
in
pop
add
into
mov
xchg
aad
cli
fsubr
popa
mov
and
fwait
xchg
adc
sti
insl
sub
test
pop
les
xor
ja
loop
or
xchg
in
jns
and
pop
add
fbld
imull
insb
push
push
pop
in
or
stc
push
jge
inc
mov
stc
mov
lcall
ds
jp
add
sti
add
mov
jne
lret
jmp
pop
ret
cmp
cmp
shr
clc
repnz
jmp
fidivrs
adc
adc
mov
daa
pop
test
in
mov
aad
xchg
je
mov
push
call
adc
sub
push
dec
dec
ss
pop
pop
int
stos
mov
push
push
and
or
add
js
or
cmc
pop
fs
push
ds
ss
sbbb
repnz
cmp
push
cmp
loope
add
cwtl
fidivl
lahf
jne
jne
cmpb
aaa
js
mov
cs
jle
pop
fmull
pusha
jbe
arpl
and
icebp
popf
xlat
aas
lcall
mov
scas
test
icebp
mov
jp
mov
ret
lods
mov
pop
mov
mov
jnp
mov
push
loope
loopne
cmp
xor
int3
addr16
movsl
push
pop
pop
jo
inc
sub
add
addb
mov
mov
cmc
movsb
push
xchg
arpl
xor
and
ficoms
popf
mov
mov
pushf
dec
jle
shrb
pop
clc
js
dec
jmp
lods
dec
scas
subb
dec
mull
call
testb
lock
push
ss
stc
std
adc
rcrl
mov
dec
xchg
pop
in
cmp
into
pop
mov
cmp
inc
xchg
fsub
ljmp
dec
fadd
push
cmp
mov
fsts
leave
push
mov
push
sub
or
mov
inc
scas
paddb
je
pop
repnz
in
in
in
hlt
mov
jne
xchg
cmpsb
arpl
mov
jb
pushf
push
pusha
mov
or
ja
inc
or
pop
jg
inc
jbe
dec
iret
xchg
fadds
add
xchg
lcall
xlat
inc
lods
in
dec
mov
les
loopne
sahf
das
mov
bound
or
test
fcoml
sar
sarb
clc
inc
pushf
pop
andl
lods
mov
xchg
push
adc
cwtl
sahf
push
adc
dec
pop
sbb
jl
jae
push
mov
imul
stos
inc
lret
pop
test
in
out
jle
aad
cmpsb
mov
addr16
inc
ret
fxtract
add
int3
mov
cmc
iret
shrb
push
sahf
dec
orl
xchg
pop
mov
mov
xor
shlb
pop
sub
nop
and
popa
mov
xchg
test
int
push
imul
mov
or
jp
aam
pop
lods
idivl
aam
mov
or
sbb
out
adc
imul
mov
sub
fsubl
mov
in
and
les
pop
rcl
fisubrl
notl
adcb
add
xor
nop
or
sbb
adc
clc
or
push
lds
pop
push
cwtl
loope
sbb
jl
and
mov
aaa
and
adc
or
pop
hlt
out
imull
sub
add
mov
xchg
and
in
jmp
stc
xchg
lods
loopne
in
inc
ficompl
pop
add
in
popf
repz
sbb
loopne
sub
inc
test
adc
hlt
jb
or
xchg
or
mov
adc
imul
int3
xor
gs
sub
out
mov
jl
cmp
xchg
out
and
sub
add
loope
out
arpl
mov
dec
pushf
cmp
subl
into
inc
aam
jecxz
adc
inc
inc
push
jmp
repnz
jp
pop
insl
cmp
add
pop
das
and
outsb
adcb
pop
mov
lret
std
test
lcall
enterw
shrl
xor
dec
imul
test
jno
xchg
inc
sarl
jo
aad
xchg
and
mov
cmp
cltd
push
sbb
push
cs
int3
mull
movsl
fstl
inc
shlb
adc
cmpsl
repz
out
lock
adc
mov
hlt
nop
xchg
sub
loop
sub
mov
test
fcoms
mov
fs
sbb
push
adc
sti
daa
mov
mov
loopne
stos
sub
ja
int
dec
jns
or
cmp
jl
dec
and
add
mov
push
shl
fmull
mov
xor
shrb
adc
in
pop
add
fistpll
fisubl
test
lods
cltd
add
loope
je
mov
jl
movsl
stos
fldt
adc
stc
xor
dec
mov
push
mov
or
dec
adc
fisttpl
movsb
fscale
fistps
mov
xlat
insl
inc
mov
pop
mov
in
jb
cwtl
mov
ds
lahf
cmpb
mov
push
fld
iret
inc
repz
repnz
dec
cli
ljmp
stc
xchg
sub
shl
pushf
into
inc
sahf
imul
xchg
std
test
mov
xchg
cltd
mov
cmpsl
outsb
fistps
pop
mov
adcl
movb
sbb
mov
push
je
imul
fimull
mov
ret
arpl
movsb
sub
jnp
pop
adc
add
mov
pop
push
inc
sub
ss
or
ret
iret
cltd
sbbb
cli
jnp
add
les
loope
or
cmp
xlat
dec
or
aad
adc
dec
cmp
adc
pushf
stos
mov
cmpsl
mov
jno
icebp
stos
adc
std
mov
addl
add
add
loope
xor
push
mov
push
sbb
jb
sbb
push
enter
mov
lock
or
dec
movsb
test
mov
and
pop
lret
adc
fnstsw
sbb
popa
jmp
pop
pop
cmpsl
xor
imul
push
sbb
je
leave
push
adc
and
pop
popf
pop
and
aas
popa
dec
dec
xor
jecxz
xlat
jecxz
dec
inc
int
or
fdivrp
lods
mov
insl
mov
add
push
inc
enter
hlt
lods
cmp
orl
ljmp
mov
cltd
cld
mov
loope
xor
add
xchg
fsubs
sbb
push
pushf
xor
add
sarl
sbb
orl
inc
mov
cmpsb
loop
inc
scas
adc
jg
dec
test
mov
std
lods
and
or
shl
jb
ret
es
sub
pop
push
dec
sbb
inc
add
ss
sahf
hlt
adc
addr16
lods
cmp
fwait
mov
test
mov
add
nop
mov
aam
dec
mov
mov
shll
fnstcw
rorl
stos
inc
add
rcl
int
rorb
stos
dec
in
push
outsl
orl
ds
mov
mov
mov
negb
jg
xor
cmc
cmp
inc
inc
sbb
dec
xlat
lds
sub
hlt
es
sbb
sub
jnp
sahf
or
jge
or
ds
push
movsl
xor
pop
mov
std
xchg
test
pop
movsl
adc
cmp
fdivrl
push
pop
and
out
xchg
mov
lret
repnz
pop
outsb
cmp
jmp
shl
xchg
ds
xchg
lock
test
fmuls
lods
lret
cli
lret
test
xchg
outsl
cmp
push
and
insl
pop
cmc
das
xchg
jp
es
mov
or
pop
jl
pop
and
icebp
pop
lock
sub
mov
inc
pop
xor
rcrl
xorb
stc
push
shr
mov
xlat
fmuls
jbe
pop
pop
mov
adc
in
pop
mov
inc
xor
mov
dec
adc
jnp
lret
push
lock
movsb
stc
inc
mov
addl
jp
js
das
jp
negl
cwtl
jb
inc
into
fistl
into
mov
pop
cwtl
popa
sbb
pop
fmul
mov
xor
int3
mov
hlt
fisubl
int3
or
loopne
addr16
scas
aas
adc
mov
pop
negb
imul
sbb
inc
mov
add
ss
sub
dec
lahf
mov
pusha
mov
in
aas
pop
pop
enter
jae
aad
sub
xor
arpl
lock
inc
cwtl
mov
sub
dec
dec
cmp
dec
out
xlat
das
or
std
push
stc
rcll
and
or
or
dec
pop
sub
shll
dec
jmp
push
mov
imul
mov
adc
fmull
cmpsl
aam
sub
mov
and
or
cld
repz
pop
shll
out
or
xor
sbb
dec
dec
mov
cmp
sbb
jmp
push
in
add
pop
jecxz
xor
movsl
in
mov
cmp
cmp
add
dec
sub
sbb
aam
mov
out
jmp
lods
jp
sub
jp
push
ds
fcmovne
jmp
popa
mov
mov
sub
mov
pop
lahf
loope
add
jmp
ficompl
loope
mov
aam
fs
daa
les
icebp
cmp
jl
movsl
pop
jg
iret
mov
mov
sbb
scas
iret
ljmp
mov
shlb
sahf
mov
ret
inc
bnd
sub
pop
jmp
xchg
cmp
mov
jb
xor
loope
mov
and
lcall
aas
shrb
inc
movl
insb
cwtl
xor
sub
jno
insb
icebp
mov
mov
pop
xor
xor
mov
hlt
stos
fistps
mov
jbe
fmuls
sub
add
cmp
aaa
mov
push
cmpl
add
pop
jle
stc
push
inc
adc
jp
mov
cli
sub
sbb
mov
adc
jmp
push
lods
rcll
out
les
nop
out
add
mov
jo
pop
xchg
jb
fdivs
add
aam
sub
push
mov
fstpl
xchg
xchg
add
sub
lcall
lret
cltd
insl
lods
fs
fsubl
and
mov
add
insb
xchg
inc
xadd
pop
movaps
lcall
mov
xchg
pop
lcall
mov
and
subl
sarl
imul
jge
mov
ss
int
adc
pop
inc
xor
cltd
and
inc
cmp
mov
jae
jnp
addb
adc
xor
cmp
adc
adc
push
loopne
out
out
push
ds
xor
add
mov
shrb
xor
rcrl
xor
sbb
jle
out
dec
mov
cmp
pop
add
lahf
and
pop
outsb
fsts
xchg
imul
cmpsl
popa
out
lret
mov
sbb
mov
push
xchg
shr
xchg
jp
jno
clc
add
dec
popf
test
and
push
cld
and
fs
iret
adc
popa
and
adc
aam
jp
inc
loope
and
mov
fistpl
int3
push
adc
outsb
shlb
mov
dec
adc
dec
test
je
inc
clc
dec
subb
insl
lret
loope
rorb
cwtl
sbb
push
cld
stc
dec
xchg
sahf
pop
cmp
into
sahf
mov
add
out
push
sub
sbb
inc
cmp
pop
inc
push
decb
inc
sahf
xor
out
and
pop
cmp
jae
push
sub
lret
fists
adc
sbb
jg
std
sarl
into
lahf
lret
sbb
add
dec
jbe
cld
mov
xlat
je
aam
push
ja
sub
orb
or
insl
cmp
inc
mov
xchg
std
sbb
arpl
jecxz
fdivs
jmp
movsl
sub
subb
ret
ss
les
clc
jne
mov
out
push
loope
lahf
cmp
jmp
sbb
enter
inc
ja
out
jb
cmp
jnp
roll
cltd
mov
xorl
dec
hlt
inc
mov
xchg
mov
lock
add
sub
mov
fs
repnz
fsubrs
or
xchg
adcb
jge
mov
scas
fistpl
mov
mov
jo
shrl
xchg
repz
sub
loopne
sbb
cmp
mov
push
ds
mov
jecxz
mov
mov
gs
cld
add
cwtl
dec
inc
inc
in
movsb
js
or
sbb
mov
lahf
aaa
das
xchg
sub
xchg
cmpsb
inc
and
lret
sub
jecxz
mov
fisubs
pushf
dec
xchg
mov
daa
push
push
insb
dec
ret
jnp
or
in
and
in
adc
push
adc
dec
mov
pop
mov
cmp
mov
sub
jg
cli
adc
xor
adc
fs
icebp
shlb
cli
xor
xchg
xchg
into
pusha
loop
ret
andb
sbb
push
xor
push
mov
and
aad
mov
xchg
mov
sbb
repnz
sti
push
mov
hlt
fcmovbe
pop
sub
movsb
pop
and
int3
js
pop
mov
push
xchg
xchg
xchg
int3
sbb
dec
cmpsb
push
mov
mov
jle
jne
aad
mov
mov
das
into
lods
subl
fimuls
repz
lods
inc
subb
mov
pusha
xchg
adcb
je
mov
mov
ss
stos
push
xchg
cmp
mov
mov
jno
push
mov
push
jns
icebp
xchg
shrb
loope
xchg
mov
mov
insb
cmpsl
xor
cmp
lret
push
mov
leave
mov
test
clc
ret
lcall
inc
jns
and
xchg
les
shlb
getsec
ret
mov
je
cld
sarb
je
add
fldcw
or
adc
cltd
jg
xor
or
inc
xchg
repnz
fstpt
mov
dec
dec
data16
fcmovb
fs
xchg
dec
movsb
sbb
iret
ljmp
ja
inc
jecxz
push
outsb
hlt
mov
mov
lahf
imul
push
enter
fsubrl
or
mov
in
sbb
int3
xchg
jno
shr
pop
or
cmpsb
icebp
mov
or
add
add
pop
mov
xchg
inc
fmul
pop
out
addr16
arpl
pop
sub
push
or
mov
sbb
dec
xchg
or
jg
aas
inc
and
and
test
or
aad
push
lods
fwait
mov
pop
dec
ja
jne
aad
lds
sar
bound
repnz
add
jae
pop
mov
adc
lret
scas
jmp
sbb
aas
xlat
cmc
jbe
jnp
aaa
outsl
fistps
call
sub
lods
out
rclb
test
push
int3
jg
mov
faddp
inc
das
dec
push
mov
xchg
stos
mov
mov
ja
fcomip
loopne
push
cmp
add
mov
cmp
daa
hlt
movsl
jecxz
dec
mov
lcall
cmp
push
mov
cmp
pop
pushf
aad
add
jg
sub
ss
mov
test
out
pusha
pop
das
cli
cltd
or
mov
xchg
inc
fwait
icebp
jmp
mov
dec
test
and
push
lahf
mov
xchg
cmp
jg
mov
pop
mov
call
ljmp
add
mov
nop
repnz
sub
aaa
int3
cltd
push
adc
out
add
dec
popf
push
pop
ds
jmp
push
cmp
jmp
pop
sbb
lds
hlt
outsb
xor
movsb
push
or
ljmp
jmp
dec
daa
out
lcall
pop
lret
lcall
push
add
xor
xchg
pop
add
xor
jp
enter
mov
ss
mov
mov
xchg
xlat
adc
mov
add
les
and
ss
fcmove
test
adc
inc
sub
out
scas
sub
jae
mov
ds
mov
rcrl
in
mov
mov
push
push
movswl
ror
mov
movsl
mov
out
xor
xchg
rcl
push
jl
movsb
gs
jbe
pusha
push
add
imulb
or
in
inc
mov
cmp
jb
lods
and
pop
ret
cs
addr16
sub
mov
sbb
int
xor
pop
xchg
dec
inc
addr16
and
push
push
mov
jnp
xlat
mov
pop
outsl
xchg
adc
js
hlt
repnz
cmpl
jl
add
or
ja
mov
out
xchg
push
in
push
mov
or
jmp
mov
lret
enter
sub
and
jo
adc
iret
mov
in
call
pop
add
mov
not
pop
adc
xchg
pusha
cmp
pop
xorb
iret
lock
push
cmpsb
pop
mov
lds
mov
into
lret
ljmp
add
cmp
inc
jae
test
das
icebp
mov
pushf
cmp
movsl
das
mov
sub
xchg
sbb
jo
xor
inc
int
xor
in
lret
xor
xchg
pop
jle
fsubrp
pop
inc
in
pop
add
pushf
icebp
xlat
jae
sbb
dec
sub
mov
jmp
dec
jno
xchg
das
fistl
jno
inc
pushf
or
insb
adcl
inc
jg
mov
out
popa
and
iret
rcl
mov
lea
int
imul
mov
rcl
aam
xchg
rclb
add
clc
cld
in
jle
xchg
scas
enter
sub
or
aaa
nop
pop
cmp
fildll
mov
ficoml
fdivrl
ds
and
sub
je
or
mov
outsl
ljmp
or
and
aaa
imul
fcomip
hlt
in
xchg
fsubs
adc
mov
xchg
adc
imul
pmulhuw
lret
or
xor
movsb
jg
jecxz
clc
xchg
sub
bound
mov
sbb
cmp
dec
shl
xchg
jb
pop
and
xor
dec
data16
js
lock
pushf
mov
mov
lods
stc
fmul
arpl
mov
add
fisttpll
fwait
pop
test
dec
ljmp
mov
out
sti
adc
out
out
mov
outsl
push
mov
data16
repnz
mov
shlb
adc
and
and
pop
cmp
xchg
call
dec
mov
xchg
sub
push
data16
adc
add
rolb
data16
pop
adc
mov
push
mov
mov
scas
sub
arpl
dec
and
pop
and
push
adc
std
add
decb
and
pop
dec
gs
scas
xchg
jp
arpl
out
or
add
cmp
dec
pushf
mov
scas
or
outsb
mov
sbb
inc
inc
lea
fbstp
out
xchg
mov
lock
dec
and
out
popf
std
or
rcr
ret
jbe
lock
add
cmp
jmp
imul
xchg
mov
pop
out
xchg
sbb
stos
add
mov
lds
lea
sbb
aad
cwtl
fidivl
loope
stos
in
aam
add
lds
cmpsl
and
bnd
jmp
shl
jae
sbb
pop
imul
jge
arpl
cld
into
daa
subps
not
leave
mov
outsl
test
mov
mov
xor
enter
push
cmp
lods
lahf
inc
push
stc
movl
std
mov
mov
pop
add
cmp
lds
push
adc
mov
sub
loop
rolb
jl
inc
call
xchg
jecxz
push
mov
mov
and
sahf
push
enter
lcall
mov
lahf
int
std
push
push
leave
ret
jg
dec
rorl
mov
jbe
sub
pop
lcall
push
fwait
into
mov
lcall
push
clc
mov
std
test
nop
stos
dec
xorb
fdiv
dec
scas
dec
and
add
fcomi
lahf
or
and
insl
or
andl
cwtl
lahf
dec
cwtl
dec
in
mov
lahf
shr
xlat
or
jbe
jmp
orb
loopne
ret
jmp
das
pop
jae
test
test
jo
add
and
cmpsb
fxch
sbb
mov
icebp
xchg
mov
jno
push
inc
mov
xchg
cwtl
push
xchg
mov
mov
repnz
xor
out
mov
and
jge
jo
sub
lock
ret
jns
cmp
int
dec
fistpl
xor
out
push
movl
fdivrs
pushf
outsb
xacquire
jns
jb
sbb
hlt
outsl
test
fdiv
imulb
es
add
mov
push
mov
mov
outsl
ffree
scas
mov
aad
aaa
push
aaa
shll
and
gs
sahf
mov
adc
xchg
fs
scas
push
inc
gs
and
subb
jbe
cmpsb
lds
cltd
test
jle
pop
lret
xor
sti
ja
push
out
push
lds
jp
jge
arpl
inc
incb
pop
loope
and
out
xor
jae
out
filds
test
rclb
cmpsl
clc
lods
je
std
leave
xchg
jge
adc
lods
jecxz
rolb
sbb
out
xlat
sub
dec
icebp
movsb
lods
mov
pusha
pop
aam
outsl
addl
pop
jae
inc
aad
adc
jecxz
loope
out
in
or
mov
dec
out
jno
test
int3
repz
mov
repnz
test
xchg
jg
jge
out
pop
and
icebp
xchg
lods
sbb
shlb
push
add
push
lahf
popl
sbb
inc
dec
arpl
scas
out
dec
out
xchg
jne
arpl
xchg
push
xchg
xchg
jo
xchg
aas
lahf
dec
jb
pop
movsl
cltd
sahf
repz
clc
repnz
cs
jnp
mov
xchg
pop
lcall
lods
inc
out
pop
mov
adc
jno
jmp
jbe
push
mov
jle
rorb
push
into
int3
mov
push
repz
incl
jg
push
mov
add
mov
repz
sar
xchg
sub
adc
out
cwtl
cmpsb
leave
pop
mov
imul
ficoml
jmp
mov
aam
xchg
cmp
cwtl
das
nop
jle
jmp
sub
das
push
pop
shll
mov
aam
inc
insl
out
and
dec
rcll
fbstp
pushf
movsb
mov
icebp
and
js
mov
adc
fidivrs
mov
lods
mov
gs
and
std
inc
and
mov
ljmp
mov
add
sahf
mov
sahf
imul
mov
cmp
data16
and
xor
test
cmp
cmc
insl
xor
push
int
xchg
inc
adc
mov
xor
cmpsb
in
sub
clc
popa
dec
add
xor
js
dec
sbb
stos
cli
jge
ret
push
adc
not
popa
cmp
mov
out
push
xchg
and
std
dec
xor
cmp
adc
sbb
out
dec
cwtl
int
fildll
arpl
xchg
out
or
fbstp
bound
lods
adc
jmp
lock
and
push
jge
jnp
sbb
mov
cmp
imulb
and
dec
push
pop
mov
adc
pop
sahf
mov
sbb
ljmp
mov
sub
mov
lds
push
fs
mov
popf
les
push
pop
sub
mov
jmp
adc
sahf
aas
mov
test
scas
pop
ds
pop
or
out
xchg
test
mov
jmp
or
and
push
pop
rorl
push
xor
adc
cmp
aad
sub
sarb
outsb
das
or
out
dec
pop
loope
fnstenv
pop
cltd
fmulp
jp
and
faddp
loopne
inc
movsl
imulb
push
dec
xor
and
xchg
or
xchg
push
mov
xor
lds
sti
inc
sti
subb
xchg
inc
notb
push
aad
repz
xor
fbld
mov
int
shrb
xchg
xor
rorl
add
enter
add
mov
fwait
jg
mov
inc
jp
adc
sarb
dec
stos
dec
pop
das
jle
shlb
addr16
sbb
xor
xchg
movsb
dec
add
mov
sub
jno
sub
imul
pop
add
xchg
pop
dec
mov
inc
out
enter
xor
or
push
mov
pop
outsl
push
cmp
and
sub
pushf
jp
mov
pop
or
lock
clc
xor
mov
rcrb
out
stos
adc
jp
push
out
bound
push
popa
xor
jle
pop
lea
inc
psubusb
dec
pop
xchg
shl
mulb
xchg
cmp
loope
nop
outsl
add
and
adc
shl
movsb
pop
pcmpgtd
cmp
loopne
test
lahf
int
out
imul
loopne
jmp
loope
insl
xchg
and
dec
in
xchg
repnz
xor
test
ficompl
pop
fiadds
lcall
jg
and
std
and
cwtl
sbb
push
test
stc
sub
jecxz
ljmp
ljmp
mov
sbb
pusha
jnp
enter
push
mov
push
addl
mov
push
andb
sub
xor
int3
sub
enter
jg
mov
rcr
push
inc
pop
ja
rcrl
pop
out
lds
jmp
dec
mov
std
xchg
adc
xchg
sbb
cld
cmp
or
leave
and
mov
sub
into
scas
jo
pop
lods
imul
xor
cs
pop
nop
lret
scas
xor
push
sub
fst
jns
scas
ret
sbb
xchg
js
cld
cmpsb
adc
int
lods
sub
sahf
push
mov
pop
mov
add
imull
pop
inc
jle
int3
aam
sbb
std
dec
icebp
ret
pop
shrl
idivl
sbb
shrb
mov
cmp
mov
out
adc
inc
xor
xchg
lock
test
xorb
mov
das
mov
and
mov
bound
jl
sub
push
hlt
js
or
add
sub
mov
mov
cmp
imul
ljmp
sarl
push
fisttpll
inc
lret
mov
push
nop
mov
inc
jl
pop
js
leave
dec
and
pop
loope
cmp
push
mov
xchg
xor
mov
data16
daa
mov
lret
cmc
sub
pop
sub
cltd
pop
push
xor
pop
movsb
inc
add
imul
push
inc
out
mov
mov
lods
loopne
out
ret
repz
aad
fs
out
sub
mov
push
outsb
pop
aaa
adcb
xlat
int3
aaa
enter
test
aad
out
sbb
push
pushf
jns
loop
push
aas
ss
insl
sti
aaa
jmp
fs
lret
gs
data16
xchg
lods
stos
clc
cmp
js
jns
cwtl
cltd
shll
dec
jno
push
or
jno
sub
adcb
addr16
fcomps
pop
and
test
mov
or
jb
lahf
ret
ljmp
dec
lds
sbb
femms
xchg
jg
insb
ret
clc
enter
jb
sub
mov
imul
cwtl
xor
addr16
and
pusha
mov
mov
enter
mov
push
xchg
push
das
and
and
and
scas
int
inc
dec
sahf
fisttpl
frstor
jl
adc
in
repnz
cmc
test
add
popl
lods
in
xchg
cld
push
enter
enter
xchg
sub
mov
test
pop
jl
cmp
pop
jg
and
mov
pop
lret
mov
xchg
lods
inc
das
fmulp
daa
inc
cmp
inc
imull
xchg
rorb
push
add
jmp
or
js
jb
mov
adc
ja
adc
out
out
cmp
aas
cmp
inc
xor
push
subl
jmp
nop
outsb
mov
pop
cmp
icebp
jecxz
push
mov
cmp
loopne
and
mov
push
xor
push
negl
test
mov
jge
sarb
dec
sub
jp
adc
cli
lods
out
fwait
in
subb
loope
mov
and
and
lods
addl
sbb
gs
ret
aad
mov
xchg
mov
iret
xchg
cmpsl
inc
inc
mov
pop
lahf
aaa
or
je
insl
and
insl
and
gs
xorl
push
inc
cmpl
in
movsl
xchg
stos
insb
xor
dec
jns
ret
push
into
inc
popf
add
mov
stc
mov
in
sahf
jge
pop
in
inc
push
jmp
test
adc
pop
xchg
int3
int
push
push
mov
cltd
stc
pop
cmp
jmp
ds
push
push
pop
sbb
cmpl
outsl
sub
fists
mov
andb
lock
enter
xor
push
imulb
inc
ja
xor
in
into
jecxz
shr
addb
pop
aas
out
jno
xchg
popa
mov
and
sub
pop
dec
ss
loope
ret
jmp
adcb
out
xchg
push
sub
xchg
sti
dec
jnp
js
pop
nop
jecxz
add
inc
push
aaa
addr16
int3
pop
dec
in
jmp
xor
sbb
add
xor
dec
sbb
inc
jecxz
repz
jbe
shrl
push
ret
mov
cmp
sub
mov
mov
and
jp
mov
loopne
std
aaa
inc
xchg
cmpsb
into
into
icebp
fldl
jp
jo
btr
mov
mov
dec
pop
in
std
pop
int3
pushf
sub
mov
repz
add
lods
xchg
cmp
push
adc
jne
mov
jmp
xor
push
and
add
int3
pop
out
sti
test
add
push
shrl
pop
mov
ret
cmp
mov
adc
loop
mov
sub
fcomps
nop
into
jp
addb
adc
adc
cld
movsb
jne
inc
sbb
popa
cmp
xchg
ja
adc
push
iret
mov
je
in
sub
jge
fwait
mov
nop
outsb
pop
jp
fcmovbe
and
pop
mov
xor
jge
xor
inc
add
push
imul
mov
jp
cmp
daa
sbb
mov
add
cmp
mov
push
lods
add
dec
outsl
gs
mov
adc
ja
mov
jo
mov
cmp
dec
fs
xorb
adc
sbb
mov
add
jb
cmpsb
xchg
js
in
xchg
cltd
inc
test
jg
adc
add
decb
lcall
out
into
jbe
cmpsb
add
mov
jle
xchg
sbb
mov
sbb
inc
sti
call
shr
inc
jno
lcall
xor
lgs
pushf
repz
int
mov
out
mov
or
mov
in
push
ret
mov
push
xchg
push
push
mov
ds
and
mov
mov
pop
jle
repnz
mov
enter
cmpsl
cli
mov
fldt
lahf
and
fucom
jns
jns
addr16
cmp
lahf
std
xor
xor
insl
movsl
xor
pop
push
cwtl
jo
xchg
mov
xor
jecxz
push
aad
loop
shlb
xchg
test
pushf
fidivl
loop
shll
test
andb
movsb
add
repz
pop
push
repnz
adc
lods
sub
mov
ret
cld
repnz
adcb
jne
pop
sub
mov
push
lahf
pop
dec
jge
mov
jmp
adcl
pop
mov
pop
leave
pop
dec
or
repnz
fnstcw
cli
and
adc
mov
add
insw
and
dec
mov
in
fs
cmp
dec
test
arpl
jle
inc
mov
imul
xchg
jp
cwtl
cmp
lea
fidivl
cmc
in
movsb
sti
insl
push
movsb
fdivs
cmp
scas
in
repz
cmp
push
lcall
jns
int
xchg
mov
aas
inc
stc
outsl
push
cmp
jg
movsb
sub
push
xor
mov
inc
sbb
ret
lock
mov
call
loopne
inc
or
sub
std
lock
movsb
xchg
jb
hlt
xchg
test
mov
pop
test
cmp
aaa
popf
lahf
inc
pusha
out
push
ret
fst
sbb
and
dec
adc
xchg
mov
pop
out
jne
cs
fiaddl
mov
test
rcrb
xor
inc
sbb
dec
inc
mov
jns
push
xor
dec
cmp
hlt
cwtl
mov
fisttpll
arpl
sbb
int3
or
sahf
repz
rcr
mov
es
dec
mov
cs
imul
sbb
push
test
mov
mov
test
sbb
fstl
cmp
sub
mov
outsl
mov
stos
jl
mov
repz
xchg
lds
test
and
in
addr16
mov
xchg
jne
inc
arpl
mov
mov
lahf
pushf
inc
imul
lds
mov
jne
std
pop
add
pop
xor
xor
cli
cmc
cld
mov
push
jl
int3
in
xchg
sar
push
movsb
adc
pop
inc
lahf
pop
pop
mov
mov
int3
adc
jge
in
mov
sub
ss
push
jnp
mov
dec
jl
pop
adc
xor
cs
adc
add
add
sub
je
in
sahf
popa
idiv
and
sub
cmpsl
add
aaa
mov
mov
stos
dec
dec
lods
mov
jno
int3
pop
or
or
mov
jo
push
sarb
pop
test
into
adc
sub
inc
imul
mov
fldcw
imul
xor
nop
imul
jae
lods
and
inc
cmp
addr16
insl
jg
dec
scas
jp
andb
clc
gs
cmp
loop
outsl
loope
aas
int
mov
cwtl
cld
xorb
rcr
mov
pop
push
mov
aam
fildl
push
ljmp
push
xor
aad
loopne
cmp
mov
loope
test
sub
addb
fstp
cmp
or
mov
xlat
lea
dec
cld
movsl
in
add
or
pushf
int3
or
and
sbb
ds
or
shrb
repnz
pusha
push
lds
dec
push
inc
hlt
sbb
xor
xor
lock
mov
rorl
pushf
adc
mov
xor
add
cmpxchg
sahf
cltd
xor
rorl
jne
xlat
repz
sarb
andl
lds
or
imul
rclb
in
dec
fidivrl
scas
add
dec
shl
cmp
add
sbb
loop
insb
sub
push
sub
mov
mov
mov
jle
fstps
pop
mov
cmp
popf
cmpsl
mov
jmp
jmp
xchg
shrb
or
iret
cltd
in
lock
sysexit
inc
sbb
jecxz
inc
rcll
sbb
jno
mov
imul
es
fs
mov
test
jle
into
idivl
or
int
aam
cmc
dec
or
test
js
pop
lods
pop
ficoms
mov
add
fidivs
sarb
sarl
inc
mov
sar
jecxz
in
aaa
shrl
jmp
pop
imul
push
xchg
cmpsb
sti
out
stos
cmp
je
mov
insb
incb
in
loop
lret
push
jecxz
rclb
dec
sahf
mov
jle
jb
mov
push
inc
shrl
and
xchg
in
mov
popa
mov
sub
mov
xchg
pop
fsts
push
outsl
fidivs
and
pusha
mov
adc
pop
lods
jae
test
pop
mov
aas
pop
push
push
insl
cs
out
mov
ss
push
fucomp
imul
rcl
aas
out
mov
xor
cmp
enter
cwtl
leave
adc
mov
sbb
jne
sbbb
sub
push
xor
add
inc
jmp
fnstsw
pop
adc
movsb
inc
fisubrl
lock
divl
lods
mov
adc
xchg
addr16
fisubl
sbb
add
insl
stos
mov
push
sbb
leave
pop
jb
ja
xchg
sub
xchg
stos
sbb
sub
mov
enter
push
lahf
jno
push
sahf
pop
dec
jne
data16
add
pop
mov
xlat
or
dec
pop
pop
sti
outsl
dec
xchg
lret
adc
push
in
int
mov
mov
lcall
sub
inc
mov
pop
stos
jle
or
dec
xchg
mov
pop
or
jne
sbb
jmp
insl
in
xor
push
fmuls
icebp
jo
sub
adc
mov
test
jbe
insb
stc
movsb
aad
jl
movsb
icebp
mov
lahf
shl
in
aas
or
test
sahf
jecxz
mov
out
sub
es
add
lret
test
in
enter
stos
cltd
insb
dec
jge
sub
add
xchg
xor
ficoms
cmpsb
stos
aaa
cmp
pop
push
pop
repnz
lret
mov
cmp
mov
xchg
loopnew
mov
dec
fwait
adc
popf
mov
enter
fmull
pushf
mov
clc
das
je
loope
jl
test
insb
test
dec
fcoms
mov
out
mov
int3
sub
mov
sti
cli
mov
pop
mov
adc
ret
adc
stos
pop
lock
inc
cmpsl
jmp
stos
mov
gs
xchg
fsubl
push
push
pop
aas
aaa
cwtl
movsl
cwtl
cmpsl
cmp
jae
ja
and
das
inc
inc
jbe
cld
dec
add
into
push
das
ret
push
push
push
xor
push
pop
mov
xchg
lea
lods
xlat
cmp
test
adc
and
mov
push
cmpsl
movsb
xor
pop
sbb
xchg
jmp
pop
insb
ja
mov
icebp
mov
lret
cmp
frstor
push
std
adc
adc
sub
aaa
sbb
roll
negl
mov
lds
inc
push
xlat
jecxz
aad
fsubp
fs
adc
cwtl
outsb
mov
sti
daa
sub
add
js
sbb
dec
inc
xchg
jb
xchg
cmpsl
cld
cmpsl
adc
xchg
loope
and
add
mov
out
push
mov
repnz
jl
lret
test
xchg
mov
aam
and
and
aas
inc
sti
pop
xor
jecxz
or
jb
inc
sub
cmp
fs
out
cmp
inc
mov
sbb
jecxz
mov
xchg
lcall
lcall
jg
movsl
push
xchg
scas
in
xchg
jge
sbb
mov
je
les
dec
filds
or
adc
inc
dec
inc
mov
inc
pop
cmp
or
js
sarl
inc
loop
in
jns
mov
push
fistpl
sub
sbb
adc
pushf
pop
out
into
outsl
mov
and
addr16
insb
push
inc
aas
pusha
mov
pop
jnp
into
mov
xchg
sub
xchg
daa
jecxz
sub
loopne
andb
push
xchg
and
cld
jnp
and
jbe
sbb
lret
push
jge
add
and
es
pop
dec
mov
in
mov
std
inc
sub
test
mov
fimull
sub
sbbb
jp
daa
ret
pusha
fnsave
fmull
icebp
stos
pushf
sbb
adc
test
imul
cmpsb
ret
xchg
xchg
xor
add
lods
shl
mov
push
jno
adc
dec
lea
sbb
in
pop
ret
mov
and
cli
xchg
pop
aam
mov
sbb
add
inc
pushf
mov
insb
fcompl
insb
inc
cmp
push
sahf
dec
adc
add
nop
fists
scas
xor
inc
adc
jecxz
jmp
jp
dec
pop
push
cmp
xchg
push
ljmp
movsl
sti
cmp
dec
out
fidivrl
icebp
mov
push
and
mov
lret
dec
sbb
ds
test
pop
fcomps
ja
mov
stos
and
lock
adc
cmp
add
addr16
mov
pop
mov
mov
sahf
inc
or
add
inc
inc
call
or
lods
cmp
fwait
ret
jns
in
adc
imul
cmp
je
mov
insb
test
call
pop
das
insb
sbb
aad
pop
arpl
dec
ja
icebp
sarb
stos
xchg
lret
jno
test
in
push
inc
mov
dec
push
jmp
icebp
inc
xchg
sbb
jns
fwait
outsb
inc
test
pop
push
outsb
mov
in
inc
sahf
jb
jo
lea
cmp
outsb
add
imul
sbb
ja
push
adc
and
daa
add
xor
aaa
adc
int
push
mov
mov
lcall
jo
into
and
scas
sub
dec
mov
sahf
pop
jo
popf
mov
test
fstpt
xchg
je
xchg
es
mov
mov
xor
push
sub
xchg
sbb
cmp
jp
cmpsb
scas
and
leave
gs
fs
mov
mov
pop
movsl
add
mov
jo
ja
jb
pop
xchg
xor
sarl
sti
xor
int
xchg
xchg
pusha
gs
jmp
arpl
mov
loopne
and
xor
mov
add
and
dec
and
sahf
xchg
dec
lahf
mov
iret
mov
pop
jp
mov
repz
je
jbe
push
lret
cwtl
iret
cmp
fbstp
inc
nop
fidivs
and
movsb
int
or
stos
cmp
add
cmp
in
aas
mov
pusha
xor
and
sahf
rcrb
jne
push
xchg
and
jno
adc
adc
adc
sbb
inc
mov
adc
fbstp
cwtl
pop
iret
pop
mov
sbb
sub
into
std
nop
cmp
jns
aad
jge
stc
pop
jl
lock
dec
cwtl
ret
lahf
inc
push
imulb
es
bound
push
subb
data16
mov
push
xor
jne
lods
sub
cmp
in
les
push
mov
mov
ja
aaa
mov
ja
fsub
dec
add
dec
enter
popa
xor
and
aad
mov
xor
mov
ret
divl
cs
cld
aas
ret
sbb
cld
cmp
inc
pop
mov
or
test
test
addr16
and
mov
xchg
aam
xchg
test
or
cmc
addr16
ljmp
add
cmp
sbb
sub
xchg
fisubrl
mov
mov
hlt
cld
fwait
sbb
scas
lock
mov
imul
dec
jl
test
push
push
mov
or
sti
daa
stc
mov
inc
jmp
leave
dec
fs
lcall
dec
mov
cmpsl
jno
hlt
sub
xchg
sahf
mov
dec
mov
loopne
cwtl
push
hlt
bound
scas
or
mov
pop
inc
imul
lret
dec
mov
add
lea
stos
xchg
rolb
lret
xor
lods
sbb
rolb
gs
jnp
adc
fldenv
or
add
imull
mov
imul
add
lcall
add
adc
hlt
inc
pop
and
xchg
nop
dec
addr16
stos
ficoml
mov
stc
out
xchg
inc
mov
in
push
xchg
pushf
stos
inc
push
sub
mul
rorb
repnz
push
and
push
movsb
mov
inc
push
dec
fs
lahf
and
aam
mov
test
xorb
sbb
lods
fildl
data16
popf
jg
push
iret
stos
pop
lea
and
push
inc
dec
mov
xorb
je
clc
neg
push
outsl
stos
or
cmp
adc
cltd
orb
imul
mov
jnp
push
and
outsb
push
sub
jbe
mov
dec
cmp
xor
nop
cmp
jecxz
scas
in
or
push
fiadds
bound
xchg
sahf
call
cmp
dec
into
loopne
dec
add
adc
lret
popf
mov
js
push
rcll
xchg
push
cmp
xchg
inc
jnp
jne
sarl
mov
mov
add
push
sub
xchg
cwtl
or
push
pop
pop
xor
and
sub
xchg
jmp
sbb
pop
testb
push
daa
pop
push
or
gs
jl
adc
fldcw
jmp
mov
and
pusha
cmp
scas
lret
add
ja
xchg
cmp
inc
in
jl
cmp
mov
pop
mov
sbb
jmp
mov
bound
inc
mov
inc
inc
mov
jne
imul
cli
insb
adcl
dec
and
jbe
or
lcall
mov
sbb
cmpsb
insb
jge
fmul
xchg
push
add
and
sub
clc
pushf
aaa
sub
addr16
outsl
push
lcall
js
jo
xchg
cmp
adc
pop
lods
pop
fmull
sti
pop
pop
ja
jmp
lahf
pushf
sub
subb
jns
xchg
test
arpl
sbb
aam
es
jmp
sub
dec
out
adc
mov
ficoml
sub
xor
jns
jb
mov
adc
inc
jb
loopne
int
ljmp
xchg
sahf
stos
dec
sti
repz
gs
stos
out
vmwrite
jnp
sub
mov
push
filds
sahf
ss
push
mov
add
hlt
stos
push
iret
leave
push
and
insl
repz
or
repz
sub
pushf
mov
adc
scas
les
inc
or
movsl
call
cli
pop
mov
jp
mov
jne
mov
or
and
inc
mov
outsb
xchg
sarl
fbstp
stos
andb
shrl
test
lcall
iret
push
dec
adcl
dec
js
and
hlt
js
push
push
jg
ds
sub
outsb
adc
jnp
lds
shrl
fs
mov
dec
xchg
int
in
pop
lock
mov
inc
fs
or
clc
sbb
and
push
xchg
inc
popa
push
pop
mov
mov
cmp
sahf
or
or
pop
popf
adc
or
mov
inc
dec
in
pusha
xor
test
call
inc
and
sbb
stos
pop
xor
or
stos
aam
lock
add
stc
xor
sti
std
cmp
or
inc
rcrl
pop
jb
mov
push
jnp
mov
dec
mov
and
popf
out
push
pop
jp
and
clc
adc
nop
mov
cmp
aaa
cmp
test
in
daa
aad
popa
jecxz
sub
inc
inc
jecxz
add
mov
dec
mov
es
test
popw
sbb
mov
daa
ss
or
icebp
mov
jge
loopne
pop
and
mov
jle
add
sub
pop
dec
rolb
fwait
aad
out
cmp
push
xor
cwtl
push
repz
jno
int3
jne
dec
or
jb
cmp
xor
fidivrs
dec
das
mov
inc
xchg
andb
xlat
sub
shr
cmpl
test
shr
arpl
fs
fadd
jmp
mov
inc
adc
add
dec
mov
enter
push
stos
dec
mov
and
push
mov
stos
fs
rcrb
stos
adc
lar
sarl
shrl
push
call
imulb
stos
mov
mov
mov
sahf
and
sbbb
pop
push
inc
lret
pop
repnz
mov
xchg
inc
sub
popf
test
fisubl
mov
je
ret
fstpl
fimull
and
push
lea
imul
mov
sbb
les
mov
mov
fidivrl
stc
and
cmp
test
xchg
adc
fcompl
lods
pop
mov
xor
call
sarb
in
fsubl
lods
dec
inc
push
mov
lods
sub
dec
test
push
xor
mov
mov
mov
push
cmpb
jnp
and
cli
pop
xchg
push
sbb
testb
dec
test
adc
aam
jl
xchg
ret
imul
aam
stos
into
pop
xchg
in
scas
jecxz
jl
mov
sbb
xchg
lahf
mov
jmp
cmpsb
push
outsl
sbb
les
int
lcall
adc
or
xchg
cmp
nop
test
inc
lret
sub
xchg
pop
int
sbb
fistpll
loop
push
js
out
loope
jns
xchg
insl
repz
insb
stos
inc
pop
jmp
xchg
cmc
xchg
jno
aas
dec
jns
xchg
jp
negl
shlb
xor
stc
sbb
and
mov
sub
lea
lret
sub
push
adc
rolb
mov
sbb
add
cmc
fildl
push
cmp
arpl
loopne
mov
and
imul
pushf
sbb
jbe
sahf
jno
mov
mov
rcrl
pop
xor
fldcw
sbb
xchg
subl
sbbb
adc
mov
push
dec
pop
popa
pop
xchg
push
in
stos
dec
scas
sar
fchs
mov
out
hlt
dec
out
sbb
out
lret
add
int3
cmpsb
into
or
mov
stos
out
loop
mov
shlb
jmp
lret
dec
movsb
jnp
add
mov
push
mov
stos
decb
jo
pop
cmpsl
fistps
hlt
or
ffreep
pop
enter
jmp
pop
pop
ja
scas
sbb
mov
sbb
aad
mov
test
scas
adc
jns
fcompl
sub
mov
pop
imul
clc
mov
sub
imul
pop
std
push
sahf
adc
push
lahf
jle
test
nop
mov
hlt
inc
pusha
adc
inc
shlb
in
ja
xor
push
mov
mov
pop
test
ss
jae
mov
add
pop
xor
pop
dec
fnstenv
jns
test
or
outsl
clc
js
mov
mov
rcl
xchg
or
incb
pop
popa
inc
jnp
mov
es
sub
pop
mov
and
sbb
ret
jns
and
and
and
jle
xchg
adc
insl
roll
mov
pop
adc
inc
and
loopne
fisttps
fildl
test
adc
lea
ret
fistpl
stc
or
in
dec
sahf
fnstenv
mov
lods
ret
inc
inc
imul
mov
notl
fucomip
cmp
sbb
inc
jbe
testl
sbb
lcall
push
enter
mov
or
in
ss
cmpsl
xor
and
mov
lcall
push
adc
cmc
fidivs
jmp
pusha
push
repz
aam
int
ljmp
add
push
or
aas
int
sbb
leave
cmp
scas
push
jbe
push
cmp
daa
push
adc
hlt
inc
jge
fsubrs
dec
adc
sbb
fmuls
push
mov
inc
addl
cmp
push
mov
mov
pop
out
leave
lock
push
push
test
jo
xchg
xchg
icebp
int3
fdiv
stos
mov
or
lds
and
push
stos
jno
ja
pop
adc
xor
js
jne
pop
mul
pusha
scas
popa
adc
pop
js
movsl
fwait
mov
imul
push
int
dec
jo
lret
daa
inc
or
pop
add
sti
push
aam
add
andb
orb
jns
xchg
cltd
mov
mov
daa
cmp
outsl
push
les
add
fcmovnb
in
fmul
dec
lret
push
ret
pop
andl
mov
adc
je
dec
mov
test
bound
in
sbb
adc
push
out
push
sbbb
cmpsb
inc
or
mov
stc
sub
xchg
jnp
inc
and
mov
xchg
nop
leave
mov
adc
sub
les
dec
shll
add
push
stos
cmpl
push
jp
es
rol
xor
fisubrs
pop
imul
xor
icebp
xor
ss
push
and
inc
add
in
cmc
xor
mov
push
xchg
jns
mov
and
dec
sahf
or
inc
scas
mov
or
shlb
loope
mov
aas
mov
push
xor
or
pop
sbb
xchg
push
or
repnz
pusha
inc
addr16
cmpsl
pushf
shr
data16
pop
mov
into
sub
adc
sub
bound
sbb
in
mov
and
lcall
jge
cwtl
mov
sub
and
sbbl
push
push
inc
jno
das
cmp
fwait
push
jle
insl
popa
cmp
stos
filds
pushf
xor
dec
es
mov
bound
outsl
xchg
jmp
sbb
jns
imul
mov
cmpb
lods
dec
jecxz
out
lock
mov
inc
leave
in
stc
in
repz
orl
out
xchg
or
test
lods
pop
dec
in
jmp
push
xchg
fldt
jge
lea
pop
cs
iret
push
mov
fpatan
mov
dec
push
inc
dec
push
rorb
push
loopne
and
add
mov
mov
in
cmpsb
and
pop
xchg
push
sub
mov
pop
inc
sbb
pop
adc
cmp
aas
in
cmp
loop
jp
dec
aas
push
mov
xchg
mov
cld
sbb
sbb
push
jno
xchg
out
nop
xor
inc
icebp
ss
and
out
jle
pop
pop
insb
and
out
cwtl
pop
dec
cmc
jbe
xchg
jp
lret
outsb
fdivr
push
and
adc
push
subl
and
sub
dec
pop
sbb
add
pop
mov
in
lock
js
aam
rclb
push
inc
mov
pop
icebp
stos
mov
xacquire
movl
push
rcrl
add
adc
sub
jnp
addr16
sub
and
or
fsubl
jne
and
test
and
mov
stc
leave
pop
dec
addb
popa
sub
push
movsb
and
rcrb
cmp
addr16
out
nop
add
sahf
leave
xor
cmp
repnz
and
jp
adc
es
xor
xor
and
jbe
mulb
repz
out
push
in
test
lock
sub
add
in
filds
sti
and
movsl
pop
sub
and
sub
test
xchg
add
pop
daa
fld
scas
lret
or
mov
xchg
fwait
out
push
mov
xor
lcall
xor
add
iret
divb
dec
xlat
or
xchg
jnp
hlt
adc
pushf
imul
cmpsl
pusha
jne
sub
sbb
xor
fidivrs
dec
xor
push
pop
mov
loopne
push
lahf
fs
fwait
mov
test
cmp
and
adc
push
out
or
jmp
inc
cmp
push
insl
push
xchg
std
mov
mov
nop
das
aaa
inc
sarb
in
jb
maxps
lods
adc
push
mov
push
adc
and
xchg
pop
jg
xchg
or
cmp
and
int3
lahf
int3
rcrl
lret
xor
pop
hlt
fmull
mov
ljmp
in
adc
lret
jmp
push
and
mov
icebp
inc
dec
in
or
popf
cltd
sbb
pop
xor
ret
xchg
push
xchg
lahf
xchg
and
int3
test
jmp
jg
or
pop
insl
sbb
movsl
movsb
xchg
fadd
jae
dec
or
push
stc
enter
and
ljmp
out
addl
xchg
mov
movsl
or
ret
mov
idivl
jbe
or
ss
mov
loop
cmp
aad
test
fstpl
repnz
pusha
lret
sub
cmp
inc
in
loope
mov
xor
mov
repnz
jle
flds
add
cmpsl
out
pop
scas
rorb
push
outsl
lahf
jae
int
adc
or
fnsave
vmovapd
inc
fistpll
inc
sub
cmp
pop
push
insl
hlt
pop
movsl
aas
and
sahf
sub
movlps
outsb
dec
test
decb
adc
outsl
movsl
pop
mov
jbe
rclb
test
mov
xchg
ret
stos
push
outsl
stos
fimuls
in
lcall
out
repnz
ss
in
test
rcl
outsb
sbb
adc
addr16
mov
hlt
push
ss
ja
movsb
mov
addb
pop
pop
int3
ret
in
fisubrl
mov
sahf
cld
lds
xchg
stos
out
out
stos
jae
xchg
jl
or
pop
jnp
sti
clc
loopne
cmp
pop
cltd
test
jno
inc
xchg
cmp
movsl
mov
imul
cwtl
pusha
sar
fists
or
stos
mov
xchg
insl
popf
inc
mov
push
inc
flds
daa
and
mov
fistpll
inc
pop
in
mov
out
add
cld
in
fsubs
lds
sub
inc
sti
pop
sarl
mov
and
clc
lea
icebp
es
popf
cmpsb
es
sbb
pusha
lods
addr16
adc
xchg
adc
frstor
into
loope
aam
mov
mov
lds
dec
jg
pop
inc
mov
adc
mov
int3
cwtl
mov
lock
mov
mov
ret
in
mov
mov
pop
push
adc
jmp
add
cli
push
adc
jns
stos
sahf
pop
pcmpgtd
jo
das
or
rcr
fisubrl
push
loopne
cmp
mov
xor
dec
mov
xchg
loop
mov
in
mov
iret
stc
sbbb
push
pop
dec
je
or
shll
insb
dec
fwait
sahf
xchg
xor
fcmovnb
inc
pop
adcb
cli
jno
mov
fnsave
fxch
sarl
cli
dec
into
cli
pop
push
lock
sub
mov
add
push
in
or
pop
insl
mov
frstor
lcall
push
int
negb
inc
jge
add
cld
call
mov
es
subb
or
jmp
sub
cmp
leave
mov
xchg
sti
enter
pop
test
push
inc
jecxz
mov
jecxz
pop
xor
jnp
sbb
sub
push
bound
or
inc
lods
gs
push
outsb
je
jle
cmp
mov
jp
add
inc
xchg
movsl
icebp
lret
xor
push
or
cld
mul
fsubrs
or
pop
fwait
les
popf
call
xor
push
repz
sub
mov
mov
sub
mov
and
outsb
iret
insb
shlb
pusha
sahf
pop
sub
ss
aad
push
adc
out
mov
or
push
nop
cs
cmp
add
adc
stos
repz
icebp
mov
pop
gs
mov
xchg
or
rcl
test
adc
sub
scas
arpl
pop
lods
int
mov
cmp
out
inc
mov
inc
cli
int3
leave
add
and
sub
test
sbb
fstps
cld
out
pop
std
cmp
fs
mov
xchg
mov
ja
push
inc
push
lea
push
inc
es
pop
mov
test
and
int3
inc
dec
sub
adc
aaa
clc
pop
sub
mov
jmp
push
mov
push
pop
gs
leave
cs
rcl
xor
and
xor
sub
cmpsb
dec
pusha
cmp
shlb
inc
add
push
sub
sub
mov
dec
push
jp
imul
push
imul
lods
sbb
push
test
dec
push
xor
sub
aas
jnp
push
push
pushf
lock
mov
and
popf
adc
repnz
and
cmpsb
mov
cmpsl
movsl
cmp
pop
sub
adc
enter
addr16
cmp
mov
mov
les
jo
pop
in
and
out
ror
das
dec
lea
popf
daa
and
mov
or
fwait
pop
fwait
and
sub
daa
gs
inc
scas
xchg
fs
loop
mov
test
sbb
hlt
push
loope
dec
aaa
push
push
mov
fdivs
inc
in
mov
in
cmp
add
mov
cmpsl
in
sbb
movsl
cmp
xor
mov
int
inc
fidivl
movsl
sbb
imul
stos
xchg
xor
aaa
xchg
or
push
jecxz
lret
leave
adc
nop
pop
cmp
dec
subb
xchg
ficompl
mov
clc
stos
aaa
test
das
je
bound
adc
sub
leave
hlt
setb
or
test
dec
popa
push
push
dec
sbb
mov
aas
and
lcall
int3
popa
nop
daa
popf
sub
cmp
mov
mov
push
xlat
push
filds
or
mov
xchg
ss
call
arpl
mov
mov
cmp
aad
es
sub
xchg
repnz
adc
fimuls
jmp
stos
iret
stc
adc
sbb
in
cmp
sub
pusha
aad
dec
push
xchg
fidivl
mov
mov
lret
dec
int
fwait
mov
push
scas
xor
fisttps
mov
push
push
push
xchg
pusha
xor
movaps
sti
jp
adc
inc
mov
loope
cmp
loop
dec
cmc
dec
or
mov
inc
int
ja
xchg
repz
adc
push
cmp
adc
add
pop
notb
call
pusha
and
and
outsb
and
test
les
mov
fwait
pusha
mov
test
jmp
cmpsb
into
pop
adcb
ja
mov
xchg
and
pop
mov
jb
pop
add
ss
xchg
or
sub
and
or
mov
out
lods
cs
sub
pop
sub
out
mov
or
aam
iret
in
stos
sbb
nop
in
fstp
out
ret
mov
dec
pop
das
push
das
and
xchg
jb
imul
lock
ret
pusha
pop
xor
and
in
pop
jne
dec
int
pop
or
cmp
jl
jne
jbe
jne
vpmacsdqh
jmp
mov
fbstp
idivb
rorb
out
mov
movsl
movsb
je
dec
dec
cld
add
dec
sarl
fbld
sub
adc
sbbl
inc
pushf
and
lds
lock
fldenv
inc
push
add
fldl
xchg
adc
in
xchg
or
dec
xchg
les
lret
mov
xchg
je
mov
nop
add
dec
add
scas
shl
sub
leave
aam
mov
repnz
mov
addr16
push
leave
xor
shll
inc
pop
jge
inc
test
adc
push
mov
mov
add
sbb
addl
and
inc
fidivs
xchg
mov
cmp
cmpsb
jae
or
test
lods
or
mov
clc
sub
inc
jmp
jp
jno
adc
ret
jecxz
repnz
pushf
add
movb
repz
lcall
mov
adc
dec
or
ljmp
repnz
insl
fwait
and
test
push
fidivs
loop
xor
jl
or
sahf
dec
xchg
xor
xchg
dec
rep
fcomp
movsl
loop
in
fnsave
inc
cmp
bound
inc
scas
js
mov
pusha
inc
or
mov
movl
jo
mov
inc
mov
push
repnz
dec
push
xchg
mov
mov
repnz
in
pusha
push
cmp
je
mov
or
daa
xchg
loopne
xchg
mov
xchg
addr16
insb
or
pushf
xor
sbb
dec
adc
sarb
dec
enter
sub
movsb
sarb
fldcw
cmp
mov
stos
push
sub
sub
into
jno
cmp
mov
enter
repnz
scas
add
pop
addl
arpl
aad
jp
mov
push
les
out
adcl
iret
sarl
insb
add
scas
into
or
pop
inc
push
add
aaa
or
mov
dec
push
mov
aam
and
jge
and
jmp
into
inc
or
gs
lods
cmp
xchg
push
inc
dec
and
dec
or
pop
ljmp
movsl
sub
adc
mov
adcl
mov
mov
mov
in
push
jmp
xchg
push
xor
mov
push
adc
nop
xchg
not
aas
jbe
jge
dec
daa
jmp
push
add
pop
mov
push
mov
mov
aam
fcom
xor
loope
add
xor
jno
arpl
in
shll
push
cltd
sub
leave
mov
je
js
add
push
xor
arpl
bound
mov
insb
pop
into
sub
ljmp
push
add
xchg
aam
into
pop
mov
dec
xor
jecxz
ret
xchg
adc
or
fucom
out
orl
cmp
jp
and
or
xchg
jecxz
test
inc
sbb
in
xchg
mov
stc
jae
sbb
adc
loopne
jle
mov
cltd
add
dec
lret
push
add
fldl2e
pop
popf
out
fisttpll
ljmp
mov
daa
mov
mov
bound
lret
clc
mov
ds
nop
add
mov
cmp
pop
inc
icebp
repnz
outsb
pop
xlat
scas
fldenv
jmp
andb
test
cmp
pop
ss
out
pop
js
adc
in
call
xor
lods
loopne
mov
xchg
daa
negb
push
add
addl
xor
aam
mov
inc
or
fs
cli
stos
stos
mov
fnstcw
ljmp
aaa
jp
mov
pusha
or
test
pop
ficomps
das
cs
add
push
pop
pop
mov
pushf
shll
hlt
test
cltd
test
pop
mov
push
push
fs
cmp
fnstenv
dec
adc
mov
lds
fwait
push
xchg
adc
fcoms
add
scas
and
push
clc
out
test
push
in
jbe
inc
sbb
xor
push
mov
cmpsb
pop
test
inc
xchg
mov
fimull
popa
mov
daa
dec
mov
cs
movsb
mov
inc
jae
jns
clts
arpl
in
mov
sets
xor
mov
push
jp
js
rcr
rcrl
fstpt
int3
mov
sbb
xor
and
cld
adc
pop
pop
push
je
xor
dec
xor
cmp
dec
xchg
pop
pop
push
jbe
iret
cmp
inc
jae
and
daa
loope
mov
push
jb
push
sub
iret
mov
aam
pop
cmc
xchg
mov
jae
dec
out
adc
cmp
cmpsb
fwait
enter
inc
daa
mov
clc
sbb
addr16
daa
sahf
mov
incl
mov
aad
inc
mov
cmp
push
arpl
lods
jecxz
fadds
cwtl
sbb
xchg
orb
jno
inc
pop
sbb
movsb
pop
in
sub
cltd
repz
xchg
outsb
clc
pusha
ret
adc
xchg
and
orl
xor
shll
jne
test
or
filds
rclb
sbb
dec
or
xorb
adc
dec
push
fadds
push
sbb
lcall
cmpsb
hlt
inc
enter
jl
mov
popa
add
call
mov
sub
inc
rol
scas
sarl
jns
sbb
and
mov
movsl
stos
loop
xor
sbb
sub
aam
or
inc
jae
mov
sbb
mov
mov
idivl
clc
xor
aas
inc
int
loopne
jnp
ja
loope
xchg
daa
call
push
mov
adc
lahf
rorb
jnp
push
and
fcomip
inc
mov
push
adc
imul
pop
call
ficoms
movsl
jb
movsl
int3
mov
stos
and
pop
add
addr16
push
or
lret
addr16
mov
aas
fwait
jecxz
es
lods
mov
jecxz
or
das
adc
push
pop
dec
mov
leave
sbb
push
jns
mov
bound
lods
rcl
mov
das
and
mov
in
jnp
jne
lea
cwtl
imul
subl
and
push
in
cmpsl
cld
mov
mov
das
scas
and
or
fwait
lock
sub
shll
fcoml
pop
mov
mov
test
popa
fidivrs
sub
cwtl
adc
push
or
daa
scas
call
insl
mov
roll
daa
sahf
jo
and
push
rorb
push
push
sbb
dec
loop
dec
push
xor
ljmp
inc
pop
and
mov
jl
shrl
sub
sbb
scas
dec
mov
inc
dec
dec
jge
pop
iret
jne
rcr
lret
repnz
jno
cmp
add
rcrl
shlb
fisttpll
xchg
fisttps
pop
shrl
xchg
jp
loopne
or
stos
insl
inc
push
sbb
pop
push
stos
std
jne
std
push
and
cmp
aad
inc
out
xchg
push
inc
add
call
sub
nop
lcall
scas
xor
nop
xor
cwtl
mov
mov
xor
push
mov
dec
bound
pop
mov
adc
sub
jne
cmp
and
clc
adc
imul
and
mov
aad
sbbb
mov
or
inc
jle
ret
aad
mov
push
loop
dec
mov
mov
sbbb
sbbb
mov
mov
xlat
filds
loope
jns
dec
pop
rolb
mov
nop
mov
ds
fdivl
pop
pop
ds
pop
and
mulb
movsl
ret
mov
inc
cmc
fsub
ret
jne
xchg
pop
add
mov
cwtl
jmp
sub
inc
fildl
stos
arpl
loope
sub
aam
xchg
stos
dec
or
xchg
dec
push
jecxz
and
out
test
push
inc
and
cwtl
and
pop
popf
and
xor
jecxz
repz
insl
push
mov
adc
jnp
jno
dec
ret
inc
sub
cmp
lret
or
pop
sub
xor
mov
ja
sbb
cmc
iret
stc
cmp
fwait
push
int3
fiaddl
sbb
pop
je
and
sti
mov
inc
add
hlt
add
or
cmp
adc
loopne
mov
or
or
add
sub
je
add
push
pop
xchg
daa
jbe
jns
mov
addr16
mov
addb
lahf
mull
mov
add
imul
mov
mov
int3
jl
xchg
jnp
dec
xchg
cmp
ds
lret
inc
imull
pop
ja
or
inc
rolb
cltd
stos
add
movsb
shlb
mov
cmp
fsts
pop
pop
mov
shrb
sub
xchg
fnstenv
out
jle
xlat
aad
dec
pop
arpl
mov
jns
addr16
xor
mov
clc
loopne
test
pop
push
subb
pushf
mov
aam
mov
mov
mov
dec
not
cmp
cmp
test
xchg
push
jl
sbb
sbb
xor
arpl
int3
int
dec
bound
jbe
rep
aas
add
jbe
cmp
sbb
lods
inc
movsb
push
outsb
and
je
mov
scas
lods
lret
icebp
push
dec
inc
ror
inc
and
dec
jbe
lock
insl
inc
pop
and
int3
bound
jg
js
pushf
push
sub
add
es
xor
and
pushf
cmp
stos
test
clc
cmp
das
rclb
pop
adc
cmp
insb
mov
or
movsl
idivl
stos
lock
fisttpl
cmp
imul
andb
daa
mov
pop
mov
ffree
in
mov
fiadds
and
cmpsl
add
std
test
ljmp
and
testl
test
jge
int
xchg
out
jmp
add
jle
imul
cmpb
sbbb
sbb
mov
rcll
pop
xchg
es
xlat
add
and
add
jge
adc
rorl
mov
mov
and
adc
pop
dec
xchg
mov
mov
sbb
loop
push
mov
decb
insl
outsb
cmp
jbe
jae
mov
rclb
and
stos
jecxz
mov
loopne
adc
cli
les
add
mov
aad
mov
leave
xchg
mov
fidivrs
in
cmp
in
cmp
xor
ja
cmp
dec
js
scas
fldl
jle
inc
test
je
ret
xchg
xchg
push
dec
xchg
push
jle
push
pop
xlat
dec
rorl
imul
jle
push
xor
mov
popf
or
cmpsl
mov
push
sub
cld
stc
rorb
loopne
shll
into
lahf
add
or
out
dec
in
ret
inc
mov
fimuls
lcall
lods
sti
ljmp
outsl
sbb
dec
dec
push
inc
mov
pop
cmpb
gs
fstpt
dec
push
mov
jnp
in
add
dec
pavgb
loop
and
xor
push
setbe
lds
out
outsb
icebp
sub
loopne
inc
xor
and
test
scas
cwtl
andl
leave
xchg
fists
xor
push
mov
out
insb
mov
lods
xorl
cmc
jo
mov
mov
mov
adc
xor
decb
ja
mov
or
loope
outsl
and
xchg
in
mov
cmp
jb
call
js
dec
mov
pop
push
adc
mov
into
add
imul
adc
ds
cld
or
and
push
xchg
adc
or
or
sbb
leave
xchg
les
clc
ja
jne
push
cwtl
push
rorl
mov
hlt
adc
jne
nop
in
mov
push
popf
cmc
cmp
xchg
lahf
mov
insb
cld
leave
jnp
xchg
out
lds
out
loope
sarb
repz
int
xchg
push
jmp
add
adcb
ret
pop
cmp
push
fdecstp
pcmpeqd
lock
subb
mov
mov
repnz
out
sbb
xchg
and
jle
gs
inc
add
cld
mov
mov
clc
ljmp
cltd
push
out
jbe
jbe
adc
push
out
stos
fbstp
in
push
in
ror
mov
xchg
sbb
stos
mov
cwtl
lret
into
sarb
jne
fs
out
pcmpeqw
xchg
adc
cmp
addb
mov
xchg
out
xor
mov
lret
fistpll
out
inc
fdivrs
lea
or
out
ja
aam
inc
sbb
roll
inc
imul
shrl
and
mov
orl
fisubrl
push
call
pop
mov
xchg
jo
dec
insb
lret
xchg
dec
in
xor
pop
pop
or
cld
jb
push
psubsw
leave
stc
stos
or
pusha
cmpsb
push
clc
ret
jnp
mov
add
bound
push
or
or
cltd
in
jnp
les
sbb
pop
pop
sahf
add
xchg
jge
outsb
repz
xchg
add
andl
popa
jp
mov
int
test
lods
in
fldl
mov
inc
xorb
add
pusha
cmp
sbb
sbb
enter
jl
or
nop
aad
repz
loop
test
sub
inc
jg
sbb
dec
ss
das
ds
inc
jp
insl
mov
push
pop
and
cmp
in
sub
and
ficomps
push
leave
cmp
enter
fadds
pop
mov
stc
fildl
mov
dec
sbb
jle
sbb
inc
ret
pop
cmpsb
cmp
movsb
outsl
rorb
fsubs
sub
cli
enter
lcall
mov
inc
imul
in
xor
stos
push
movsb
mov
jb
in
jbe
xchg
push
jns
shlb
mov
bound
imul
out
in
sbbb
clc
or
pop
xorl
lret
bound
in
lahf
jae
fld
fs
mov
push
test
outsl
jb
lds
dec
push
xlat
push
sarl
loopew
mov
and
gs
lods
sub
xchg
out
and
mov
or
mov
fucomip
sbb
mov
inc
push
push
mov
ficompl
dec
jbe
xorb
leave
mov
mov
test
jnp
mov
inc
andl
sbb
sbb
or
sub
jmp
dec
pop
movsl
loop
mov
dec
adc
sahf
pop
mov
notl
jbe
cmp
idivb
mov
mov
loope
pop
subl
les
xchg
sub
test
sub
jecxz
and
and
pop
sar
mov
push
loope
scas
in
cli
js
pop
lcall
loope
add
testl
cmp
mov
icebp
cmp
std
cmpsb
push
ljmp
loopne
xchg
xchg
cmc
fstl
sub
test
sbb
cld
in
hlt
or
mov
xorb
mov
pop
into
addr16
imul
movsb
jecxz
pop
mov
jle
repz
lcall
jbe
cmp
inc
mull
mov
add
mov
jecxz
incl
and
or
shlb
xrelease
add
mov
xor
das
or
mov
in
negb
pop
mov
mov
jmp
arpl
lret
stos
or
and
inc
out
aaa
aas
add
push
pop
pop
dec
push
push
in
inc
sub
jge
lahf
push
ret
lods
sub
or
push
xor
loopne
jno
xor
out
sub
insb
or
enter
getsec
rcrb
cmc
inc
lcall
loopne
fmull
mov
pop
sbb
cmp
shrl
cs
hlt
and
pop
sbb
repz
mov
jg
out
mov
mov
imul
mov
pop
adc
push
mov
adc
pushf
nop
ljmp
xchg
mov
cltd
repnz
stc
call
leave
rorl
mov
leave
add
not
je,pn
in
inc
xchg
lods
sbb
jl
inc
test
pop
nop
jns
pop
xchg
adc
mov
lods
fistps
hlt
fiadds
jno
dec
out
je
cmpsl
fwait
xor
pop
dec
xchg
test
fbld
hlt
xor
sbb
in
cmp
push
popa
add
stos
lret
push
dec
jp
lds
les
or
and
aad
and
les
mov
or
test
mov
add
stos
adc
add
cmp
dec
or
xlat
test
mov
xchg
clc
pop
std
sbb
lcall
fmull
andb
mov
mov
gs
cmpsl
xchg
and
dec
mov
dec
cld
stos
popa
pop
arpl
jae
inc
xor
shll
fisttps
xor
sub
sarl
pop
pop
pop
and
pop
notb
mov
cmp
cmpsb
int
cmpsl
and
mov
cmp
jp
adc
cmp
inc
adc
and
xchg
insb
stos
ljmp
mov
xor
stos
mov
cmp
arpl
xchg
jo
sub
loop
movsb
test
prefetchwt1
or
jle
cli
les
jge
xchg
push
popa
js
jl
xor
sub
mov
lret
outsb
jp
cmp
cmp
mov
enter
out
mov
fildl
fisttpl
rorl
push
gs
pop
insl
mov
setne
and
mov
cwtl
outsl
jne
xchg
fnstcw
fcmovbe
sbb
mov
mov
sahf
mov
jecxz
arpl
lret
cli
aam
aad
push
nop
jle
and
loope
or
xor
lds
push
push
movsb
je
cmp
pop
loope
mov
adc
push
stos
jns
cmp
mov
adc
pop
es
xchg
loopne
out
mov
jno
xlat
call
jmp
test
sub
test
out
js
rorl
repz
int3
inc
fcoml
inc
and
fstp
mov
add
scas
dec
inc
js
sahf
ja
negl
loope
dec
mov
dec
imul
add
inc
xchg
jbe
arpl
fists
mov
cmp
mov
pop
jp
push
push
in
pop
xlat
mov
xor
or
jno
sub
test
xor
fists
and
cs
mov
adc
subb
fwait
movsb
jo
jg
loopne
add
int3
cltd
sahf
jge
sub
fistpll
push
jno
out
mov
ret
inc
mov
or
sti
and
push
sbb
fmull
add
or
jnp
lds
adc
mov
jmp
inc
xor
setg
das
subb
rol
icebp
dec
cli
pusha
mov
cli
jecxz
push
addr16
mov
adc
pop
add
mov
test
in
jae
test
and
sbb
jmp
dec
mov
add
cmp
int
add
xor
sti
adc
repnz
pop
add
add
sbb
fcomip
js
mov
jmp
std
rorl
push
out
outsl
rorb
add
out
out
lahf
pop
decb
inc
adc
xchg
lret
icebp
cli
in
sbb
jl
inc
imulb
jp
adc
in
scas
sti
dec
push
call
mov
subb
mov
dec
subl
push
mov
cld
data16
ljmp
dec
rorl
xorl
orb
jno
ss
insb
mov
imul
or
dec
push
pop
and
fwait
lret
sahf
adc
aaa
jne
mov
add
jnp
lcall
out
sub
and
or
jo
jne
push
mov
jp
rcrl
adc
hlt
adc
out
das
clc
push
sub
sbb
xor
js
adc
shlb
mov
loope
imul
scas
xlat
jp
stc
cli
dec
add
add
lret
call
and
adc
xor
add
and
shlb
mov
fists
xor
jl
out
mov
pop
pop
jmp
test
xchg
out
test
xchg
mov
imul
adc
or
ret
inc
jbe
adcl
xor
xlat
mov
pop
loop
dec
pusha
in
push
popf
ja
bound
xchg
enter
jle
jno
push
out
fwait
and
xchg
mul
ja
aam
mov
rcrl
mov
cli
mov
js
mov
call
lret
and
cmp
inc
cmpb
jnp
add
ret
fsts
pop
and
lock
roll
and
data16
inc
mov
sbb
cwtl
nop
sub
sub
xchg
push
in
adc
jmp
testb
negb
xor
xchg
call
xchg
mov
loope
dec
xor
cmpsb
cmp
pusha
inc
mov
mov
sarl
and
sti
cmp
or
xchg
mov
ret
dec
cmc
out
mov
arpl
cmpsb
mov
push
loope
loop
cmp
testb
sbb
pusha
addr16
popa
test
mov
pop
jle
rcl
add
out
addb
pop
add
cmp
pop
dec
ds
or
out
adc
adc
cvttps2pi
aaa
jb
idivl
mov
mov
push
xor
movsl
mov
xor
lods
enter
lea
xor
insb
stos
jp
mov
cmpsl
popa
push
cmp
sub
out
or
fnstcw
xlat
mov
dec
mov
mov
sub
fcompl
xor
lock
repz
or
dec
ja
jo
adc
dec
lahf
test
xchg
icebp
adc
sbb
xchg
aam
inc
xchg
jns
xchg
cmp
in
in
sti
jmp
mov
aam
std
test
cs
mov
push
mov
cmc
movsl
and
popf
aam
xchg
aaa
mov
mov
test
inc
les
jbe
jp
js
sbb
fidivl
xchg
sub
xchg
xor
dec
imul
data16
mov
sbb
cmpsb
sub
and
mov
loopne
iret
mov
rcrl
inc
adcb
sarb
jno
scas
dec
mov
mov
ljmp
inc
sub
aad
pop
inc
mov
xor
jp
sbb
call
fldcw
mov
arpl
xor
fs
imul
dec
inc
out
inc
add
dec
ljmp
inc
mov
cmp
inc
adc
and
call
jne
mov
pop
pusha
inc
add
xchg
xchg
mov
add
sbb
mov
jecxz
and
xchg
jb
aad
dec
sbb
roll
mov
bound
and
or
pop
ds
movsw
pop
out
pop
cmc
mov
aaa
jmp
inc
scas
cmpsl
mov
push
shrb
ljmp
mov
clc
int3
mov
xchg
adc
pop
xchg
push
pusha
aas
and
push
cli
es
repnz
mov
and
es
xor
mov
inc
repnz
lret
mov
inc
and
call
outsb
ja
push
push
ss
sbb
xor
cwtl
les
inc
cltd
mov
mov
pop
jbe
fnstsw
lret
shlb
mov
leave
out
ljmp
int3
xchg
add
inc
les
mov
test
lock
insl
mov
dec
test
ds
popa
repnz
dec
fcmovnu
cmp
or
jmp
jno
cmp
test
push
lds
mov
lret
sbb
pop
imul
cmpsl
imul
inc
in
cmp
nop
push
pushf
inc
mov
stc
scas
ficoms
xchg
decb
mov
out
out
les
fdivrl
addr16
push
push
push
sbb
add
daa
test
fnstenv
pushf
lcall
xor
pushf
mov
xchg
push
bound
outsl
movsb
mov
cld
push
pop
out
ja
sub
and
movsl
dec
mov
imul
pop
fcoml
mov
mov
add
mov
dec
stos
je
jae
stc
inc
inc
jp
push
insl
idivb
push
push
lock
cmpl
shlb
orl
jg
push
adc
stos
mov
jae
mov
xchg
jle
pop
cld
mov
test
or
loop
xchg
pop
out
jp
sbbl
jno
and
enter
fnsave
adc
pop
mov
icebp
test
jg
jbe
pop
lea
push
mov
jno
in
loope
lock
cmp
mov
ss
xchg
add
cmc
add
js
adcb
and
fimull
lods
pop
mov
or
stos
loop
fwait
xchg
xlat
push
test
dec
xor
xor
mov
test
mov
dec
sti
sahf
scas
daa
imul
cmp
adc
pusha
rcrb
jge
mov
data16
das
push
adc
mov
push
ret
dec
pop
fs
repnz
repnz
pop
dec
vmwrite
scas
dec
popa
cmp
cmova
mov
leave
or
cmpsb
adc
aaa
jo
imul
sub
fistps
mov
test
mov
mov
and
sbb
in
scas
xchg
adc
loope
pop
fs
and
sub
jns
pushf
cmp
mov
sbb
in
cs
xlat
inc
inc
dec
ja
mov
iret
popf
mov
gs
popa
imul
in
shlb
mov
adc
push
and
out
lret
jge
lods
inc
pop
push
xchg
push
data16
pop
jle
or
movsl
ficomps
adc
push
mov
lock
fstps
jl
mov
pop
mov
jge
jnp
mov
jle
sbb
ret
and
call
inc
dec
add
mov
fisubl
loope
pop
mov
out
ret
shl
xchg
into
outsb
inc
dec
and
clc
repz
cmp
sbb
jg
push
leave
sbbb
xchg
push
adc
test
jg
pop
inc
shl
dec
push
test
std
repz
jp
lret
addr16
adc
fcmovnu
sub
movsb
lds
jmp
xor
movl
xlat
hlt
sub
pop
or
loope
scas
xor
ja,pt
push
adc
xchg
div
pop
cmp
xor
popl
lods
mov
jns
loope
rclb
sti
jmp
mov
cmp
lock
or
xchg
iret
mov
sub
mov
sub
and
call
fcmovbe
mov
pop
inc
add
xchg
js
push
out
or
pop
mov
insb
je
add
cmp
jmp
sub
out
cmpsb
adc
js
cs
adc
or
loopne
push
and
and
je
rep
and
xchg
pop
sbb
xor
stos
xor
jp
fiadds
inc
loop
sub
sub
dec
addl
push
dec
sub
adc
inc
xor
mov
jne
icebp
mov
cmpsb
and
jne
push
push
out
test
sbb
mov
popf
stos
sahf
fldt
dec
aad
in
cmp
adc
mov
pop
inc
cmp
or
xchg
inc
and
lret
fmull
sbb
arpl
push
scas
mov
add
jo
cltd
jmp
sub
fdivs
xchg
sub
pop
leave
icebp
xor
cmp
cltd
xchg
jle
jp
inc
jl
pop
decb
arpl
imul
mov
push
outsl
pop
shll
inc
imul
in
dec
scas
scas
add
cmc
dec
and
pop
pop
xchg
add
pop
cmpsb
ljmp
fsub
daa
push
or
insl
movsb
mov
mov
and
mov
cld
popa
cs
loop
jb
popa
xchg
mov
lret
in
addb
aaa
loope
lcall
inc
mov
insb
or
ljmp
icebp
and
rorb
nop
aaa
adc
jae
lods
je
arpl
hlt
sbb
push
xor
inc
jge
xchg
pop
dec
popf
or
jle
jg
push
or
cmp
cmp
pop
scas
inc
jae
sbb
pop
or
fcoml
cmp
xor
loope
inc
and
lock
mov
push
rolb
dec
mov
inc
push
jae
shl
pusha
adc
xchg
out
jl
andl
inc
in
and
cmpsb
and
and
and
mov
jecxz
pop
mov
pop
adc
adc
dec
out
mov
inc
wrmsr
icebp
cld
outsb
lea
mov
cmp
enter
push
loope
pop
pop
shr
rdpmc
mov
stos
repnz
pop
mov
adc
cld
xor
movsb
mov
add
mov
hlt
mov
daa
fidivrs
jno
adc
in
out
mov
ljmp
push
mov
cld
inc
cltd
movsb
sbb
les
ss
pushf
mov
mov
cltd
dec
xlat
imul
dec
pop
adc
insl
mov
dec
dec
in
out
pop
test
ret
inc
adcl
popa
sub
fsubrs
jno
inc
xor
sub
into
int
sbb
jbe
add
mov
insb
dec
jb
or
mov
sbb
adc
dec
out
sub
jo
pop
sub
push
add
std
sbb
fmuls
in
aad
lcall
aad
jl
fnstsw
das
xchg
daa
xor
dec
iret
pop
mov
mov
je
and
mov
stos
rclb
or
xchg
lods
inc
int3
xlat
leave
and
insb
popa
fld
fsincos
add
pop
sub
lods
mov
sbb
pushf
mov
fs
popa
cs
lods
lret
lods
mov
out
inc
xlat
out
mov
inc
and
lahf
clc
out
lret
subb
fimull
sub
testb
lahf
lret
sub
adc
icebp
sub
fistps
outsb
push
test
push
shlb
js
sbb
jb
xchg
xchg
or
sbb
sub
lcall
jmp
mov
into
mov
aas
inc
xchg
aaa
shlb
pushf
cmp
fldenv
xchg
cmpsl
loop
jnp
add
ljmp
out
or
xchg
push
lds
cmp
add
das
es
mov
pop
push
mov
popl
lret
inc
icebp
cwtl
leave
xchg
inc
orb
cli
push
fstpt
pop
pop
mov
pop
or
mov
xor
in
in
cmp
and
or
mov
sti
pushf
sub
jmp
cmp
je
outsb
mov
iret
adc
frstor
sub
sbb
cld
dec
jle
cmpsl
movsl
insb
dec
push
or
nop
enter
imul
nop
in
xor
xor
lock
sti
push
or
pop
pop
mov
test
inc
addr16
test
jle
xchg
xchg
adc
or
icebp
stos
insl
xchg
xorb
out
lahf
rcr
cld
loope
sub
shrb
sbb
lods
add
push
inc
in
ret
push
mov
mov
adcb
imul
sahf
sbb
addb
mov
cmpsb
and
bound
cmpsb
xchg
scas
mov
cmp
mov
sub
push
pop
mov
pop
mov
mov
mov
outsb
sbb
mov
add
jno
inc
mov
or
out
les
lret
arpl
orl
fld
adc
sbb
mov
inc
stos
sub
daa
xor
cmp
in
fiaddl
sub
test
jle
xchg
and
mov
rorl
cli
cmovns
mov
mov
nop
mov
mov
inc
mov
mov
fdivs
flds
xchg
lahf
push
dec
daa
jecxz
in
adc
pop
mov
cli
mov
and
mov
and
sub
decl
and
mov
xlat
and
or
xchg
ret
xchg
hlt
jmp
xor
adc
or
pop
push
xlat
sbb
mov
pop
inc
test
ds
xchg
jbe
ds
push
jo
jle
sbb
inc
cmp
test
jnp
dec
shr
dec
shrl
cmpsl
loope
in
js
lret
mov
fwait
mov
add
inc
xchg
je
fmull
sti
jle
pop
test
pop
mov
fsubrl
jae
xchg
mov
jb
stos
fcmovbe
jbe
sub
cmp
inc
into
dec
ljmp
xchg
loopne
add
int
aam
bound
xor
je
stc
mov
mov
xorl
cmp
sub
lahf
notb
xchg
pop
test
and
data16
push
mov
or
sbb
push
push
enter
sti
pop
mov
sahf
mov
xchg
push
sub
and
popf
dec
ds
mov
mov
ficomps
cwtl
dec
divb
dec
leave
push
inc
jp
cmp
jge
jge
adc
jp
rolb
cltd
out
cmpsb
int
into
dec
pop
adc
add
clts
mov
outsb
lea
ret
push
mov
push
fwait
enter
lods
pop
test
xor
xchg
xchg
pop
icebp
mov
rolb
call
movsl
es
pop
fnsave
sbb
cld
and
sub
imul
loop
das
pop
or
sub
hlt
fnstsw
aaa
or
mov
pop
sarb
ds
push
add
xchg
jb
inc
shl
loopne
sub
fiaddl
cltd
push
adc
pop
jge
insl
movsb
adc
sbb
hlt
or
adc
imul
adc
addl
lds
adc
push
push
pusha
push
xchg
pop
xchg
lahf
dec
pushf
rol
jmp
push
lret
xor
pop
cmpsb
mov
lcall
aad
pusha
imul
mov
dec
push
fcmovnb
jg
or
rorb
cmp
lods
add
fstpt
add
fists
and
sub
loop
rorb
adc
inc
mov
sahf
or
ret
mov
arpl
pusha
pop
ret
lahf
mov
push
push
js
mov
insb
in
rolb
fs
into
out
inc
mov
dec
sub
adc
cmp
ds
push
push
mov
dec
jb
lock
sbb
pop
test
cwtl
jo
jbe
fisubs
in
sub
test
loopne
scas
add
xchg
loope
outsl
mov
dec
popl
jp
push
clc
test
xchg
or
flds
je
aaa
bound
lock
xor
aad
mov
cs
cltd
fnstsw
mov
cmp
or
adc
and
xchg
pusha
inc
in
shl
jg
cltd
mov
sub
arpl
xor
test
enter
dec
mov
cmp
in
sub
iret
mov
xor
mov
sbb
cmp
stos
imul
sub
lcall
outsl
sub
lcall
cmp
scas
lahf
mov
adc
fsubp
stos
shr
das
imul
test
add
xchg
inc
add
shll
or
cli
fcom
addr16
adc
adc
jb
inc
xor
popf
inc
jmp
xchg
test
xchg
lods
push
dec
jnp
push
enter
insl
cmp
dec
cmp
xchg
mov
cmpb
pop
ljmp
cmp
adc
mov
dec
roll
lret
cmp
mov
stos
shrb
fwait
sahf
mov
test
out
aad
outsb
mov
mov
test
sub
jle
arpl
int3
out
dec
push
aad
aam
pop
sub
dec
push
sbb
ret
or
js
dec
cmp
adc
add
xchg
shll
pushf
subb
sti
ss
and
xor
sbb
repnz
fisubl
pop
les
lret
xor
dec
mov
pop
dec
bound
shlb
addr16
fildll
mov
call
hlt
sub
mov
test
lahf
jbe
std
jns
adc
xor
sbb
scas
test
movsl
inc
aad
push
orb
push
pop
inc
daa
xchg
fiadds
jge
mov
mov
pop
cmp
gs
xchg
inc
sbb
js
or
out
sub
pop
in
push
sbb
jo
lret
jecxz
push
fistpl
push
push
ret
push
push
ja
addr16
and
cmp
mov
adc
cli
data16
xchg
mov
clc
xchg
insb
pop
mov
out
and
and
add
jge
je
pop
pop
jns
jne
xchg
icebp
mov
or
ret
into
jns
out
adc
and
mov
fsubl
jae
jge
xchg
int
pop
nop
or
jno
push
cmpsl
xor
mov
cmp
mov
pshufw
bound
mov
js
mov
dec
cwtl
mov
ja
dec
adc
test
pop
xchg
adc
mov
mov
bnd
push
fbld
cmp
inc
lcall
push
inc
mov
daa
adc
xchg
scas
jbe
and
cmpsb
pop
je
leave
inc
arpl
cmc
insl
or
inc
add
out
int
cmp
ror
adc
fcoms
inc
icebp
sub
cmp
cmp
std
or
add
cs
cmp
add
or
int
sbb
shlb
call
iret
movsl
das
pop
lods
pop
mov
mov
popa
nop
imul
dec
jle
scas
pop
inc
xchg
cmp
pop
pushf
jge
sar
dec
inc
adc
push
dec
repz
daa
scas
mov
mov
shlb
pop
mov
movsb
pop
jnp
popf
ret
mov
scas
inc
stc
cli
aad
jge
cli
or
ljmp
fs
dec
aaa
test
sbb
pop
xchg
pop
fidivrl
loopne
mov
adc
jo
mov
add
xchg
scas
cmp
std
mov
jno
out
rcl
dec
mov
in
cmp
cmp
sub
test
add
mov
push
inc
out
loop
imul
fcomip
movl
out
mov
cltd
jno
mov
jne
sbb
negb
jo
out
adc
data16
or
add
mov
dec
push
popa
outsl
insb
cli
call
add
ret
xor
xchg
lcall
inc
pusha
or
enter
pusha
sbb
adc
icebp
xchg
inc
dec
sbb
gs
lods
imul
adc
sub
jae
jg
hlt
inc
lods
cs
jb
rcrb
sahf
scas
mov
adc
pushfw
or
jge
in
mov
aas
adc
sti
out
std
outsl
inc
jnp
mov
outsb
push
pop
iret
ljmp
xor
pop
outsb
stos
fwait
jo
popa
leave
aam
cli
pusha
incl
mov
pop
jmp
jb
call
addr16
mov
out
test
call
fmull
xlat
mov
push
repnz
adc
fwait
xchg
lods
push
fs
lahf
mov
add
in
dec
inc
sti
testl
push
pop
shrb
testl
mov
in
cmpsb
into
stc
aas
lods
pop
cmp
scas
push
stos
dec
adc
add
mov
inc
mov
jl
sub
imul
test
mov
mov
hlt
mov
cmp
mov
out
andb
iret
and
jbe
sub
aad
xor
mov
mov
add
mov
xor
push
sbb
js
insl
sub
xor
mov
sti
mov
cld
cs
xchg
inc
fnstenv
xchg
cmp
aaa
inc
adc
adc
sbb
or
pop
push
xorl
mov
daa
push
jnp
ret
push
repnz
push
cmpl
pop
xchg
sub
pushf
div
sub
jnp
sub
stos
call
mov
mov
cmp
pop
testl
sti
decb
xchg
cmpxchg
adc
repz
pop
pop
inc
sahf
jbe
fldt
inc
sub
xor
pop
jmp
xlat
call
xchg
lahf
cmpsl
or
sub
cmp
or
jne
mov
xchg
or
mov
subb
pop
cmc
frstor
iret
cltd
and
call
stc
pop
decl
xchg
test
subl
adc
sub
sbb
cmp
loope
xor
push
inc
out
adc
iret
xchg
jp
jmp
dec
adc
les
mov
cltd
shl
loop
push
sub
iret
cmp
xchg
jge
jns
sub
push
rcrl
fwait
cli
aas
loope
push
xor
or
mov
in
push
in
pop
inc
sub
orl
cmp
into
dec
fdivs
mov
ja
test
rcrl
data16
pop
mov
imul
dec
and
movsl
pop
jb
fcmovnb
imul
jmp
inc
mov
and
or
mov
cmpsl
test
xchg
cmp
sub
jle
test
notl
clc
xchg
push
mov
es
xlat
cltd
cwtl
test
or
adc
or
sarl
xchg
sti
add
pop
ret
test
sub
mov
jle
mov
rcrl
push
sub
fnstenv
inc
addr16
fdivr
adc
cmpsb
mov
bound
inc
push
push
lea
add
jmp
and
cltd
dec
or
pop
pop
xchg
pusha
loop
mov
daa
inc
call
les
insl
aas
and
cmp
outsl
pop
sub
push
jae
in
inc
cmp
enter
inc
in
inc
lret
jns
pop
push
mov
ds
sub
add
ja
cmpb
mov
add
add
mov
pop
cli
outsl
nop
inc
aad
into
les
sbb
xor
sbb
push
arpl
movsl
rolb
loop
stos
pmaxub
cmp
sbb
lea
and
in
jge
fidivs
rcll
insb
mov
test
sub
pop
movsl
rolb
test
lcall
mov
rorl
out
jns
and
in
dec
sub
lea
inc
mov
out
popa
in
push
out
mov
mov
mov
call
inc
pop
ja
add
je
add
jnp
inc
scas
sub
sub
or
jl
mov
out
pusha
mov
mov
js
pop
andl
sbb
xor
push
and
add
xchg
sub
push
mov
dec
pop
push
mov
sub
mov
mov
xor
cmp
enter
out
fs
jl
fisubrl
sti
jp
aas
mov
movsb
xchg
bound
and
mov
and
cmp
inc
cmpsb
jecxz
out
xor
push
aad
xor
jnp
or
push
dec
in
into
fmuls
sahf
int
mov
or
inc
push
dec
les
loopne
repnz
cmp
cmc
mov
loope
outsb
xchg
leave
sub
adc
mov
clc
cmpsb
leave
pop
cmc
fldcw
aam
mov
jmp
cmp
push
sub
icebp
xor
adc
xor
mov
xchg
pop
or
push
add
xchg
xchg
pop
cmp
jge
loope
fcomps
add
jno
test
pop
dec
sub
es
xchg
sub
adc
mov
mov
push
ja
jmp
cmpsl
les
sbb
adc
testl
mov
out
hlt
jae
dec
xchg
clc
or
jge
bndstx
rcpps
add
pop
cmpsl
negl
aad
adc
mov
addr16
rclb
test
mov
insl
pop
iret
gs
test
xchg
sarb
pushf
incl
dec
jge
insb
mov
jb,pn
xchg
int3
jmp
sbb
popa
mov
test
sub
ficoml
inc
sbb
adc
arpl
popf
imul
aaa
ret
pop
sbb
mov
xor
jmp
mov
mov
rolb
jge
sbb
add
mov
dec
std
in
push
lahf
or
stos
fwait
pop
sub
xchg
andl
mov
inc
cld
mov
ds
sub
imulb
pop
mov
pop
daa
lds
and
push
pop
xchg
push
lret
lock
jle
lods
cmp
add
xor
pushf
leave
aam
bound
adc
mov
gs
mov
imul
adc
jge
jae
cwtl
iret
fimull
cli
stos
fbld
push
dec
mov
addl
fldt
jge
jae
cmp
mov
into
inc
movsl
flds
pushl
xorb
lock
lods
stc
jno
mov
inc
xchg
lret
push
inc
aam
cmc
fadd
js
mov
xor
shrl
loop
sbb
mov
movsb
lds
int3
es
inc
jge
mov
xchg
pop
jno
xchg
mov
hlt
and
jns
pop
jb
mov
pushf
pushf
mov
jg
and
test
inc
loope
mov
jb
mov
and
movsl
decl
push
jne
push
lret
out
hlt
inc
cmp
into
dec
or
scas
jb
push
icebp
hlt
xchg
lock
fwait
dec
and
xor
iret
jge
adc
push
xchg
outsb
and
out
ss
mov
xchg
outsb
mov
cltd
fcomi
es
push
and
mov
inc
scas
mov
pusha
pushf
subb
xchg
sub
mov
pop
lock
in
lahf
aam
add
adc
fnstsw
lret
xorb
divl
inc
push
lea
daa
xor
cltd
lcall
fs
int3
pop
movsb
rcrb
stos
cli
leave
add
inc
pusha
aaa
or
fsubrs
dec
ljmp
sub
popa
adc
shrl
js
mov
xor
stos
jecxz
jecxz
push
dec
cmp
push
test
mov
div
mov
cmp
dec
sbb
dec
daa
dec
pop
cmp
lret
fidivrs
dec
dec
jecxz
push
int3
cmpsb
cltd
xchg
dec
popa
and
xlat
out
jle
cs
sub
not
loope
stc
cmpsb
mov
push
sbb
inc
push
pop
xor
nop
fsubs
mov
xor
negl
pushf
lds
mov
shrb
fs
xor
into
xchg
or
out
das
xor
cmp
fstl
xor
jle
dec
ss
sub
inc
es
mov
lahf
and
jno
test
jne
lret
pop
cld
and
mov
je
inc
mov
inc
and
jp
in
and
pop
popf
cmpsb
cltd
repnz
add
mov
or
sub
mov
jle
dec
mov
rclb
jle
mov
fwait
xor
push
repnz
fistpll
mov
mov
in
loopne
xchg
jmp
mov
fists
cld
jnp
mov
or
mov
mov
pop
adc
sbb
push
ss
or
or
adc
push
rol
pop
cs
outsb
push
cmp
inc
mov
mov
sti
ffree
sbb
mov
call
mov
icebp
add
mov
pop
lcall
cmp
fstl
sbb
test
or
mov
shll
addb
gs
mov
xor
sbb
adc
ficomps
cld
add
add
repz
imulb
mov
test
lea
pushf
xor
mov
cmpsb
adc
mov
jo
mov
push
jp,pt
loopne
add
pop
fcomps
das
adc
pop
test
jnp
addw
push
bound
xchg
ret
inc
push
push
jns
inc
push
mov
jp
in
mov
and
adc
and
mov
rorl
push
test
pop
xor
xchg
jp
xor
pop
cmp
mov
sub
push
jp
xchg
push
jmp
dec
shl
push
xchg
pop
push
orb
dec
sub
movsl
loop
lods
inc
sub
mov
icebp
cli
mov
aam
mov
inc
gs
cmp
mov
js
inc
mov
or
xchg
jg
das
or
jb
dec
mov
and
addb
mov
dec
jle
mov
mov
fsts
and
mov
mov
push
pop
xchg
sub
fbstp
sub
lahf
push
mov
or
call
push
movsb
jb
in
insb
pop
mov
imul
iret
xchg
push
fsubrs
push
int
cmp
mov
cmpsl
lret
push
mov
mov
sbb
sub
mov
adc
pop
add
dec
repnz
pop
int
in
fidivl
push
imull
leave
pop
cld
xchg
pushf
and
jnp
and
pop
sub
cmp
hlt
or
out
inc
popa
pop
or
jns
mov
cmp
clc
cld
xchg
inc
popa
scas
xor
mov
rol
mov
loop
adc
das
rorl
scas
std
xor
outsb
movsb
and
adc
mov
inc
dec
fldl
sbb
xchg
add
pop
adc
or
jmp
popl
pop
xchg
loope
scas
mov
cltd
jns
push
shrl
js
cmp
addb
add
std
popa
add
push
gs
jbe
pop
and
xchg
push
jno
mov
les
adc
mov
pop
push
or
cwtl
icebp
arpl
mov
mov
jbe
push
mov
push
and
popf
aaa
xchg
and
int3
fidivrl
or
lcall
jge
push
out
inc
pop
cld
imul
xor
cmovs
and
lods
adc
mov
fwait
dec
mov
pop
mov
sbb
mov
dec
xlat
inc
pop
mov
scas
fs
ss
mov
push
cmp
mov
pop
aas
aaa
xlat
stos
add
cs
cmp
lret
push
popf
subb
xchg
cwtl
lret
mov
adc
push
call
movsb
mov
jmp
mov
add
dec
ja
sti
and
fcmovu
jno
lahf
jmp
inc
movsb
adc
xor
aas
nop
adc
pusha
jmp
fcmovb
inc
hlt
not
xorl
or
sbb
negb
mov
repnz
cli
std
push
sub
ss
cmp
sub
daa
hlt
aad
icebp
sub
jno
imul
push
std
push
je
jge
pop
test
cmp
test
mov
xchg
mov
in
mov
adc
outsb
fisttpl
out
adc
ljmp
ja
movsl
pop
jbe
cmp
test
nop
mov
push
sub
jno
sub
cmp
sbbb
mov
mov
imul
das
enter
movsl
xor
push
mov
adc
addr16
aam
scas
sbb
pusha
out
lret
sub
pop
sub
into
push
loop
xor
loopne
mov
in
jne
and
push
lahf
or
sti
data16
stc
cmp
mov
mov
aam
and
push
xor
add
loopne
fidivs
dec
xor
pop
lret
adc
xchg
addb
push
test
mov
lahf
lock
adc
inc
or
shr
cmp
mov
mov
mov
aaa
push
push
fsubl
and
test
xchg
stos
nop
int
pop
xchg
hlt
jnp
add
mov
xchg
inc
fldlg2
dec
inc
mov
adc
shll
jns
mov
stc
les
sub
cltd
dec
lret
movsb
in
xchg
clc
mov
lahf
lret
mov
stos
mov
std
add
push
sarl
jae
jo
daa
fcomi
sub
sub
and
mov
negb
mov
in
xchg
adc
jp
hlt
fcmovnb
dec
pop
cmp
push
add
push
jle
dec
out
stos
mov
lcall
push
ja
push
roll
sbb
cmpsl
fiaddl
fwait
clc
mov
dec
jae
call
cmc
jecxz
pop
lods
jb
sbb
mov
dec
stc
cmpsb
outsb
lock
and
push
mov
shlb
jno,pt
pop
int
mov
pextrw
dec
and
jbe
cmp
sbb
shll
jl
cwtl
scas
repnz
call
sar
out
inc
adc
inc
ljmp
add
pop
repnz
es
mov
in
ret
jge
add
leave
pop
adc
xor
pop
mov
sub
dec
pusha
lret
inc
lret
imulb
xor
xor
lret
mov
push
dec
jae
xchg
sub
mov
rcrl
loopne
dec
por
mov
sbb
repz
fdivs
rcll
movsl
repnz
inc
fnsave
mov
xor
mov
inc
mov
lds
jmp
add
inc
sbb
es
cwtl
cld
jecxz
movsb
cmc
fisttpll
xorb
lds
les
orl
call
pop
add
push
stos
ss
adc
decl
mov
lret
sbb
in
je
aaa
fwait
jbe
cmpsb
stos
mov
dec
mov
cmp
mov
and
pcmpgtw
jnp
mov
xchg
popa
adc
lret
mov
shl
sub
dec
into
inc
xor
lods
rclb
out
lahf
jg
movsb
sub
icebp
inc
jns
add
adc
int3
push
jmp
inc
bound
shlb
inc
loope
lods
ficomps
add
cwtl
std
daa
in
ljmp
lods
sti
mov
push
ljmp
add
ficoms
jge
in
cmc
movsb
in
sbb
adc
push
xchg
xchg
mov
or
test
xchg
cwtl
cmp
jmp
popf
xchg
xchg
inc
xchg
dec
lcall
clc
mov
pop
sar
cmp
xchg
jb
idivl
into
mov
xchg
lret
lcall
sub
pop
sbb
imul
adc
pop
stos
pop
in
cmpsb
inc
mov
mov
pop
and
pop
pushf
mov
mov
dec
cmp
mov
sahf
jae
xchg
movsl
sbb
or
xchg
adc
adc
sbb
insb
sub
jns
jle
jmp
inc
mov
push
dec
enter
or
insb
cmp
test
lret
add
aad
push
xchg
sub
add
push
dec
repnz
pop
xchg
aaa
outsb
mov
cmp
cmp
jb
in
sub
fstpt
ds
imul
mov
leave
push
lds
loop
stc
pop
and
inc
mov
xchg
ret
int
insl
xor
sbb
fsts
mov
dec
xor
ret
cld
movsl
xchg
xchg
in
jmp
loope
jbe
jo
enter
clc
xchg
imul
outsb
inc
faddl
xor
dec
addps
in
cmc
movsb
in
and
ss
loop
clc
inc
lods
add
cli
aad
mov
mov
jns
mov
frstor
into
mov
cwtl
out
pop
jno
mov
sti
lea
push
aad
outsl
mov
pop
mov
cmp
lcall
sbbb
ljmp
jmp
xor
jl
or
dec
push
sub
es
loope
testb
in
into
xchg
fidivs
rorl
lahf
repz
aas
xchg
stos
add
cmp
hlt
inc
lods
or
mov
loop
pushw
pop
cltd
push
mov
fstpl
dec
jg
sub
cli
or
movsl
out
repnz
movsl
cld
fldcw
jle
leave
xor
sub
jae
jb
divb
adc
lahf
js
mov
pop
mov
es
adc
xor
out
aam
push
cs
stos
stc
or
xor
push
lds
inc
cmp
addr16
movsb
inc
sbb
lea
and
add
cmp
mov
jne
or
xchg
pop
pop
movsb
and
push
loopne
sti
cmp
int3
sub
sar
int3
rclb
sahf
or
sbb
icebp
into
jge
add
push
in
cltd
mov
pop
inc
pop
cltd
jge
outsl
push
ror
outsl
add
push
ret
aas
mov
jne
addr16
testl
fisttpll
xor
test
cmp
lods
and
movsb
enter
push
cltd
lock
test
iret
cmpsb
or
push
cmp
sub
sub
cmp
lea
js
jp
jo
test
out
jb
dec
repnz
inc
sub
cmp
mov
in
jecxz
push
jae
mov
mov
out
pop
jmp
mov
sub
mov
gs
xor
mov
filds
cmp
xor
fmul
cmp
mov
pop
jbe
mov
inc
inc
push
cmpsb
iret
sbb
pusha
sbb
cmp
dec
fs
mov
in
xchg
aam
pop
mov
and
mov
xchg
nop
jp
xlat
mov
test
out
push
jp
xchg
jno
ljmp
addr16
lahf
loopne
dec
pushf
push
out
mov
cmp
xor
adc
aam
or
xchg
push
cmpsb
cmp
xchg
fcmovbe
add
or
leave
xor
je
fnstcw
cld
lcall
mov
imul
decb
mov
sub
add
out
cld
gs
pop
pop
inc
aad
lods
ret
add
loope
cmp
pop
inc
or
popa
dec
adc
int
loop
xchg
in
fwait
stos
push
cmpsb
mov
mov
jne
test
inc
dec
leave
pop
push
mov
outsl
push
jmp
rclb
lea
mov
jp
and
sbb
xchg
mov
cmpsb
popcnt
mov
jl
jb
bound
lahf
dec
inc
jg
push
lcall
jae
mov
stos
hlt
outsb
insl
iret
jmp
mov
push
mov
or
sbb
cli
arpl
les
mov
cmp
pop
adc
pop
sub
and
test
addl
loopne
push
xlat
ret
ret
cmp
enter
fstpt
inc
scas
mov
xor
xchg
jecxz
shll
icebp
movsl
push
cmc
and
out
jmp
dec
mov
pop
inc
and
adc
ss
data16
subb
cmp
xor
aas
xor
andl
mov
pusha
lods
mov
pushf
pop
mov
ds
xor
jne
scas
pop
je
loope
imul
or
jl
mov
dec
cmpsb
push
mov
inc
pop
test
and
and
lock
adc
inc
and
fisttpl
dec
in
fidivs
data16
test
test
mov
jle
notb
xchg
mov
iret
mov
lods
xchg
cmpb
cli
dec
mov
sbb
sub
mov
push
mov
pusha
push
mov
popf
and
mov
daa
popa
ret
xchg
inc
dec
cltd
stos
adc
data16
add
ljmp
imul
arpl
sub
cmp
pop
out
rorl
in
and
fwait
cmp
push
popf
and
xchg
scas
es
mov
dec
add
mov
aad
ret
pop
jmp
lods
fistpl
std
sbb
sub
out
sub
pop
daa
in
lahf
int3
inc
sub
mov
xor
loop
or
je
jp
xchg
inc
push
mov
jno
int
inc
into
loopne
xchg
gs
mov
fidivrs
clc
bound
fidivl
xchg
adc
mov
or
gs
sub
in
dec
jecxz
inc
mov
mov
insb
jbe
or
stc
fs
or
stc
cmp
mov
xor
adc
shrb
xor
rcrl
iret
xor
or
lea
mov
test
jmp
push
jle
cmpl
cli
js
loopne
pushf
mov
or
xor
lret
cmp
shll
rolb
in
call
add
dec
lcall
push
adc
fwait
xor
or
pushf
pop
fidivs
pushf
dec
lods
inc
fistpll
insb
pop
iret
cmp
pop
xlat
jle
dec
scas
sub
and
hlt
jg
bound
fdivl
scas
inc
push
mov
and
jge
mov
shlb
aad
cli
push
mov
leave
int3
adc
jnp
cmpsb
jb
mov
sbb
add
das
cmp
in
add
stos
push
pushf
fcomp
or
adc
or
js
mov
push
mov
test
fnstcw
push
pop
out
lods
ss
cli
mov
mov
or
jns,pn
ss
imul
mov
nop
or
sbb
not
and
stos
adc
mov
arpl
lock
cld
sub
mov
adc
daa
push
sub
and
cmp
push
push
dec
xor
and
mov
movsl
xlat
cmp
sub
dec
insl
jmp
dec
aas
into
in
sbb
addr16
fwait
iret
push
jmp
out
int
cmp
adc
fs
cmpsb
clc
dec
push
xchg
inc
pop
popa
fmuls
dec
leave
push
cmp
push
loopne
inc
xlat
dec
sub
xor
lahf
into
enter
fistpll
and
push
ret
ficoms
xchg
pop
or
shl
fisttpll
out
mov
clc
test
sbb
mov
xor
push
insl
rcr
adc
iret
inc
jb
lea
sbb
cmp
push
negl
popa
jl
out
push
ljmp
mov
lds
cmp
popa
push
in
stc
and
mov
sub
add
sub
xchg
jmp
std
subb
repz
mov
lods
mov
ss
in
and
jge
pop
inc
testl
adc
pop
imulb
mulb
sahf
rcll
jge
add
hlt
dec
pop
add
sbb
mov
or
inc
push
fs
mov
popf
sbb
cmc
add
data16
mov
inc
or
mov
mov
xor
push
stos
and
fdivrs
fsin
lret
icebp
cmp
inc
cli
subl
rolb
mov
enter
inc
xchg
inc
data16
xor
testb
xor
stos
mov
loop
xor
testb
add
jnp
push
sub
inc
testl
stc
dec
xchg
push
mov
repz
movsl
mov
lret
pop
shlb
outsb
mov
loop
popa
inc
pop
sbbb
xchg
out
push
mov
into
jge
dec
cmp
push
fstl
dec
adc
sbb
and
xor
lock
mov
and
xchg
mov
or
push
cmpsl
test
adc
fsubr
mov
push
inc
js
pop
iret
mov
and
into
push
sbb
aas
scas
add
das
mov
pusha
xchg
add
aam
xchg
out
out
xlat
mov
xlat
mov
mov
into
dec
fdivrs
fisttpll
nop
or
xchg
mov
mov
hlt
ss
fisubrs
adc
mov
sbb
cmp
mov
or
daa
jbe
add
icebp
push
data16
test
push
xor
out
shrb
push
jecxz
inc
js
lret
mov
scas
or
push
push
dec
jae
jo
jne
sti
add
xor
push
insb
inc
lock
push
js
in
adc
mov
sub
shlb
sub
xchg
xchg
into
add
inc
aam
cmp
xchg
xchg
into
in
and
cltd
out
loope
daa
fiadds
or
in
jb
lret
push
mov
jns
in
add
cmc
adc
xchg
decb
addl
xchg
ficoms
pop
inc
addb
add
jae
cwtl
sub
ret
add
cli
add
jle
dec
pusha
push
mov
fmuls
test
sub
fimuls
sub
adcl
adc
push
fmull
mov
mov
inc
pop
mov
cmpsl
xor
insl
popa
dec
xor
into
repz
add
or
dec
cmp
rolb
outsb
xchg
sbb
loop
mov
rolb
out
sub
cmc
dec
lea
lods
in
push
js
pop
bound
push
loop
push
addr16
dec
inc
into
jo
sbb
or
outsl
or
push
mov
jae
inc
jb
sahf
call
leave
fcmovnbe
xchg
cmp
scas
shrb
adc
jmp
ljmp
out
fsubrl
aaa
repz
pop
aaa
adc
clc
cwtl
cmp
aam
test
mov
lcall
xchg
addl
inc
and
das
adc
out
adc
loopne
dec
jge
and
pop
mov
pop
inc
mov
jg
fwait
imul
push
adc
into
mov
movsl
pop
xor
rcll
cmp
es
jb
and
stc
ljmp
aaa
lods
add
xchg
repnz
xor
mov
inc
or
sti
pop
lods
inc
add
dec
mov
cmp
jge
push
push
add
inc
adc
adc
inc
add
adc
pop
add
filds
sub
lock
arpl
or
add
lea
sub
sbb
arpl
jle
ret
fbld
dec
lret
pop
adc
cmp
jecxz
jl
inc
insb
xor
insl
movsb
call
jbe
loope
mov
push
gs
jecxz
jnp
push
fs
cmp
pop
and
jle
push
loopne
lcall
xchg
icebp
mul
inc
jnp
jp
aad
jb
cmp
mov
add
xor
add
xor
cmp
mov
stos
pop
push
jge
insl
jl
mov
fbstp
mov
mov
cli
ja
aad
jle
xchg
sahf
xchg
dec
adcb
clc
jle
jle
mov
jae
mov
xor
xor
cmp
out
cs
push
lret
aaa
rcl
pop
xchg
ss
push
inc
outsb
popf
test
scas
pop
pop
adc
sbb
jle
mov
popf
xchg
loopne
test
js
pop
jne
dec
jge
fadd
fstps
sbb
jmp
mov
mov
insb
pop
pop
popa
shr
jnp
adc
stos
cld
mov
adc
inc
mov
mov
adc
xchg
sahf
mov
sub
dec
call
lods
mov
xlat
es
cmovnp
sbbl
fmuls
in
sbb
incb
push
xchg
rclb
xchg
pop
sti
sbbl
jp
push
mov
hlt
test
inc
push
clc
and
fs
or
rolb
pop
xlat
xchg
and
or
push
sbb
stos
repz
push
leave
fcompl
cmp
mov
push
mov
sbb
aaa
dec
pop
dec
dec
mov
pop
orb
fs
ss
clc
les
les
and
adc
pop
push
push
lahf
ljmp
mov
mov
push
sub
jge
and
adc
xchg
push
out
std
push
enter
fxch
shll
lock
loopne
in
bnd
test
jmp
pop
arpl
test
mov
mov
mov
lods
mov
jle
out
adc
jmp
xchg
cmp
or
push
adc
cmp
pop
pop
xchg
push
lock
in
jge
xchg
popl
xor
jb
rorl
mov
addl
xchg
fimuls
dec
insl
cmpsb
scas
jle
jo
jmp
outsl
mov
or
push
cs
fcoms
adc
and
pop
inc
cmp
sbb
push
push
lcall
and
cs
xchg
mov
mov
xchg
loop
ret
out
insl
adc
leave
mov
mulb
inc
call
sar
popa
pop
inc
fimull
cltd
push
mov
les
test
js
sbb
sub
sbb
push
js
sbb
mov
and
scas
dec
mov
lock
and
or
mov
pop
imul
push
sub
and
push
xor
inc
jo
loop
les
jb
adcb
idiv
ficomps
adc
sbb
or
in
sbb
mov
dec
ja
mov
push
pop
or
xchg
adc
insl
fidivl
scas
pop
xor
inc
leave
jecxz
xchg
in
jno
push
dec
inc
push
mov
jae
or
mov
or
cmp
mov
jae
popa
leave
jmp
into
jnp
ja
inc
lret
nop
das
insb
orl
jnp
and
stos
shlb
pop
data16
out
jnp
scas
mov
sub
adc
lret
pop
cwtl
enter
jle
data16
jmp
inc
xchg
gs
loope
mov
add
jo
dec
scas
inc
repz
jbe
xchg
call
cli
out
jbe
adc
push
ss
sub
mov
xchg
mov
jp
fstpt
jl
push
imul
iret
dec
daa
mov
stc
jmp
add
in
cs
scas
mov
jl
outsb
add
movsl
mov
iret
cmp
pop
loope
jnp
xor
inc
add
and
popa
jnp
inc
aad
cmp
enter
and
pop
sbb
insb
outsb
xchg
sarb
inc
push
sbbb
aad
ret
sub
int3
rcrb
outsl
pop
mov
lahf
cmp
popa
rorl
outsl
mov
mov
dec
into
jno
test
xor
pop
cmpl
ret
mov
or
push
jecxz
stc
fmulp
pop
shl
xor
mov
push
inc
sti
jl
sbb
mov
bound
push
js
out
call
test
pushf
fnstenv
adc
mov
int3
pop
inc
js
cmp
xor
pusha
fs
mov
inc
lcall
xchg
dec
fsubrl
cwtl
mov
fisubl
pushf
lock
fldenv
jo
dec
adc
jg
cmp
sbb
pop
mov
push
cmp
and
sub
inc
pushf
popa
or
xor
movsb
imul
repz
scas
sbb
jp
push
mov
movsl
aas
dec
stos
cwtl
int3
in
sbb
sbb
mov
shl
adc
es
sbb
pop
jmp
arpl
bound
data16
mov
and
add
mov
push
hlt
jmp
add
dec
xchg
mov
icebp
fcmovne
mov
cmp
mov
loop
dec
ljmp
add
shrl
or
lods
cmpsl
add
sti
je
out
in
push
sbb
cmp
xor
mov
or
les
adc
sbb
mov
dec
pusha
or
and
jp
mov
dec
shlb
popf
jae
in
mov
icebp
xchg
push
out
pushf
outsl
repz
mov
daa
repz
shr
pusha
cmp
dec
inc
push
mov
out
lock
lahf
xor
add
sub
sub
sub
mov
call
adc
into
icebp
dec
and
sahf
mov
fbstp
jns
cmp
xchg
test
sub
cmpsl
rcrb
pop
xchg
mov
mov
mov
push
xlat
and
in
mov
push
cmc
add
add
inc
or
sub
stos
mov
cmp
movsb
cmp
xchg
mov
pop
testb
pop
inc
in
iret
pusha
movsb
add
jle
mov
push
in
and
dec
jbe
mov
mov
dec
jne
pusha
or
mov
loopne
or
int3
insl
mov
adc
fs
xchg
rcrb
mov
cmp
add
mov
call
mov
fcoml
push
xchg
pop
lcall
cmc
enter
add
cmpsl
rorl
dec
pop
outsb
stc
dec
mov
push
jecxz
xchg
icebp
scas
sub
pop
rcrl
dec
movsb
idiv
push
sbb
jle
insb
sbb
ret
xchg
stc
jmp
jmp
mov
push
flds
inc
out
push
popf
jge
negl
popf
or
jns
push
jmp
inc
mov
adc
sub
xchg
mov
sar
clc
ds
mov
ret
faddp
in
xorb
jnp
push
add
movsb
subl
fisubs
dec
cli
or
andb
in
sub
arpl
mov
out
sub
jae
push
sub
jge
fidivrs
test
push
adc
int3
fstpt
mov
jl
jg
movsb
mov
iret
mov
sub
mov
sub
jmp
mov
scas
insl
xor
js
mov
shll
mov
addr16
fidivrs
jo
mov
xchg
mov
inc
push
cmp
push
pushf
xchg
and
sub
jmp
inc
cmp
sbb
mov
adc
or
movsl
sbb
subb
xor
popf
fidivrs
mov
imul
xlat
mov
dec
shl
mov
out
shrl
imul
and
mov
inc
call
iret
cmp
jmp
xorl
mov
cmp
outsb
leave
dec
test
out
dec
and
icebp
out
cld
clc
rorl
pop
bound
xchg
mov
and
adc
mov
pop
das
sub
mov
in
imul
imul
gs
bound
jmp
push
jno
in
repz
shl
ds
mov
into
loop
lret
or
cltd
xchg
outsb
sbb
push
inc
rolb
ret
mov
sahf
lds
mov
pushf
adcb
imul
ss
aaa
jae
addr16
add
lahf
mov
mov
es
ret
fldcw
push
add
jo
lods
inc
xor
data16
sbb
fcmovb
popa
fs
pop
add
cwtl
scas
test
inc
and
int
inc
out
pop
jo
mov
push
dec
das
lock
mov
xchg
inc
mov
sub
js
dec
mov
mov
add
fwait
pop
jbe
sbb
andb
push
jl
xchg
loop
mov
push
add
stc
pop
cmpl
sahf
xor
or
jecxz
loopne
xchg
aam
dec
sub
scas
or
inc
inc
fsubrl
popa
inc
or
sub
dec
inc
leave
jae
sbb
lods
cmp
pop
sbb
xchg
pop
inc
pusha
jg
stc
mov
ficoms
add
in
popf
and
std
sub
sbb
and
dec
lahf
out
pop
fiaddl
dec
js
popf
sub
and
push
lret
lcall
gs
add
clc
out
mov
or
push
mov
inc
ret
mov
jno
addb
adc
pop
xor
mov
popa
out
test
test
andl
jbe
out
jb
lahf
xlat
andb
jo
pop
cmp
pop
or
icebp
jp
and
fisubs
imul
shll
mov
jbe
adc
pop
push
repnz
popf
and
adc
mov
data16
xchg
int
fldcw
inc
in
mov
pop
dec
jmp
cmp
xchg
dec
je
mov
adc
sbbl
int3
pop
cwtl
into
arpl
sbb
movsl
mov
adc
in
repnz
pop
mov
inc
cs
jge
insb
fwait
scas
stc
pushf
cmp
cmp
pop
mov
mov
mov
nop
into
cmp
test
movsb
adc
jmp
test
adc
mov
scas
std
push
mov
jo
addl
dec
dec
xor
push
mov
and
push
cbtw
jns
mov
jg
int3
leave
cltd
ljmp
sbb
xor
lock
mov
ror
scas
mov
cld
cmp
test
xorb
sbb
add
mov
xchg
addl
dec
shll
divb
and
rcrl
push
dec
push
push
push
mov
sbbb
movsb
test
dec
in
mov
push
mov
sti
mov
fxam
xlat
mov
add
int3
pop
ds
mov
sub
xchg
push
jmp
scas
inc
xchg
sub
fs
aas
shll
pushl
xrelease
std
cmpl
xchg
lret
push
jmp
js
into
mov
jo
rcr
lods
pop
and
xor
jb
inc
or
cmc
mov
sub
adc
or
xchg
test
hlt
dec
xchg
pcmpgtw
mov
xchg
adc
rorb
fadd
sub
outsl
decb
mov
push
pushf
or
jno
ret
lock
je
ljmp
pop
pop
lods
pop
push
imul
nop
adc
jae
jmp
insb
mov
inc
sbb
rcll
cmc
fwait
xor
push
fcmovnu
pop
push
addl
arpl
insb
adc
aas
sarb
lret
mov
pop
test
inc
sub
jecxz
mov
into
mov
xor
jmp
xor
orl
int
push
lcall
xor
or
and
hlt
jns
fiadds
push
imul
loop
bound
mov
mov
dec
add
shrl
xchg
adc
adc
cltd
fadd
push
inc
xchg
sub
loop
aad
lea
inc
add
mov
mov
push
mov
shl
mov
lods
and
enter
imul
cmp
mov
movsb
out
push
nop
jns
mov
pop
push
jle
fsubrp
stc
test
mov
in
fsubl
mov
xchg
jo
add
mov
insl
insl
and
jno
cld
cld
mov
cmp
mov
ds
sub
fcoml
movsb
int3
mov
aam
push
xlat
sub
fbld
mov
sub
xor
adc
jle
sarb
adc
jae
push
pop
and
test
sbbl
stc
cli
inc
cmp
jl
xchg
adc
cmp
jbe
mov
mov
shl
mov
and
xchg
xorl
int
mov
arpl
clc
inc
or
adc
sub
popa
sub
sbb
bound
mov
out
sub
inc
lret
mov
mov
ja
sti
mov
adc
mov
adc
outsl
add
push
clc
rorl
dec
mov
jg
mov
jno
inc
inc
ud0
and
leave
jl
jno
adc
dec
mov
xchg
shll
jge
ret
mov
xor
push
xlat
sbb
xor
cmc
es
push
stos
jmp
xor
aam
pop
popf
or
xchg
loop
testl
stc
xor
dec
aad
imul
jnp
pop
cmc
cltd
imul
bound
cmp
sub
movsl
repz
mov
pop
stos
jp
add
dec
movsl
lret
lds
pushf
mov
mov
mov
cmp
cmp
or
outsb
sub
adc
push
ret
xorl
push
lahf
lret
insb
cmc
gs
cmpsl
sbb
dec
das
ja
popf
dec
mov
ud0
pop
and
int3
cmp
xor
xchg
enter
shrb
and
mov
arpl
inc
shrb
xor
push
ja
out
leave
shl
sti
mov
fisubrs
sub
sbb
cmp
mov
mov
xchg
fldt
shl
cs
pop
jp
clc
add
imul
lods
loopne
mov
fisubl
cmc
jo
leave
xor
sub
icebp
jle
aaa
or
inc
and
xchg
lock
movsl
int
pop
dec
out
je
mov
sbb
cmc
inc
shll
mov
xchg
cmp
xor
lret
insb
rcll
jnp
mov
ret
aad
call
divb
mov
aaa
cli
das
ja
test
push
adc
enter
sbb
sub
add
js
add
jl
fnstsw
repz
in
int3
add
and
sahf
adc
sahf
mov
mov
lock
cmpsb
lods
mov
mov
lret
inc
xor
dec
cli
and
out
aam
xor
shrl
out
fisttpl
repz
cmpsb
js
movq
add
loope
es
cli
mov
ss
mov
cmp
xor
push
mov
lock
xchg
cwtl
scas
inc
idivb
insl
int3
sub
pusha
arpl
adc
test
add
in
pop
ljmp
add
jb
jge
mov
mov
sub
mov
out
data16
sub
mov
pop
dec
test
mov
stc
cmp
int
dec
lea
xchg
insb
es
inc
and
jp
jg
jo
pop
jbe
fs
mov
rclb
pop
cmp
add
xchg
fnstsw
pop
add
pop
shrl
into
dec
mov
pop
xchg
and
ret
scas
cmc
outsl
lret
inc
enter
fdivrp
test
pop
push
jnp
adcl
sbb
ret
movsb
aad
fs
or
aaa
ja
fisubs
inc
aas
ficoms
pushl
jns
dec
imul
pusha
fidivl
ja
sahf
arpl
mov
mov
sub
push
push
mov
std
mov
std
mov
push
or
out
ss
dec
aas
pop
subl
adc
mov
pop
add
adc
cs
rcr
mov
add
icebp
notl
out
jecxz
push
mov
stc
sbb
ret
or
ljmp
sbb
sbb
pop
pusha
pop
push
int3
jbe
sbb
je
jl
dec
xchg
jmp
ljmp
stos
int
pop
adc
clc
sahf
ret
push
sbb
mov
loopne
mov
out
push
xchg
jae
or
mov
enter
sbb
adc
mov
mov
mov
mov
sbb
cld
repz
outsl
lds
inc
ja
cltd
cmp
pop
mov
xor
fstl
rcrb
and
or
loop
loope
dec
aam
fsubrs
dec
mov
mov
cmp
dec
lret
push
xor
jecxz
out
data16
adc
out
dec
mov
add
inc
ficoml
lods
mov
or
inc
mov
adc
jle
xchg
clc
push
dec
xchg
stc
inc
inc
fdivs
out
cmp
jge
in
adc
jecxz
pop
inc
sahf
and
jmp
mov
aam
repnz
jno
cmp
enter
sbb
lahf
clc
dec
ficompl
jo
sub
or
pop
add
out
mov
aad
jb
lcall
mov
out
fsubrs
push
sub
and
mov
add
jo
scas
push
bound
sbb
jmp
das
sbb
xor
iret
and
repz
push
notl
js
push
adc
sbb
and
jge
stos
pop
inc
jge
push
fisttpl
jmp
mov
movsl
sbb
insl
push
ret
dec
jg
nop
sbb
inc
stos
inc
or
push
subl
sbb
fdivs
adcl
or
inc
jmp
inc
and
adc
jp
mov
test
mov
inc
and
jae
xor
rorb
cmc
push
fs
push
push
std
stos
in
faddl
loop
jne
push
sbb
xor
int3
pop
mov
lret
pop
push
pop
mov
sbb
or
bnd
xor
xor
add
inc
mov
lods
insl
mov
and
roll
sub
inc
jb
repz
int
ror
lret
push
bound
std
pop
adc
pushf
cs
negb
and
xor
cmpb
fsubr
jns
dec
and
or
stos
outsl
fwait
push
andb
insb
ds
xchg
xchg
pusha
enter
in
jns
xchg
xchg
sbbb
ja
arpl
in
std
testb
adc
adc
jne
xlat
or
fsubrs
cvtps2pd
adc
pop
dec
xchg
xor
dec
dec
sub
aaa
popf
jmp
push
mov
jb
test
add
fmuls
ret
xchg
loope
cmp
mov
aad
inc
push
push
push
std
pop
and
enter
xchg
pop
push
imul
dec
sahf
popf
mov
arpl
push
lcall
jle
ficomps
cs
aam
nop
inc
jns
fisubrs
aaa
mov
cmpsl
aaa
or
outsb
mov
cmp
frstor
outsb
xor
repnz
fs
lds
jne
sub
imul
repz
pushf
arpl
xchg
fildll
pop
test
mov
inc
mov
das
hlt
mov
pop
or
test
cmp
sbb
or
sbb
sub
mov
push
frstor
int
aam
push
repz
scas
mov
iret
mov
iret
sub
gs
mov
call
in
data16
lock
subl
lret
pop
cltd
into
aam
add
fcomp
push
lret
clc
and
cmp
add
stos
cmp
push
test
push
in
lret
or
neg
loop
movsl
insl
imul
test
imul
loop
daa
sub
xor
inc
ficoms
mov
cwtl
fsubrl
or
lods
cwtl
pop
shr
insb
subl
in
ret
xchg
aad
in
into
je
xor
and
sub
inc
mov
cmp
cmp
out
or
mov
mov
push
inc
js
inc
sub
lods
xor
mov
pop
push
cmp
mov
daa
xor
push
and
jge
cmp
arpl
jg
das
and
std
pop
ficoml
or
enter
push
xor
hlt
xchg
cmpb
js
inc
pop
clc
dec
jae
je
and
iret
pushf
mov
jl
cmovp
xchg
mov
and
or
outsl
jle
call
shrl
fdivrs
cmpsl
sbb
adc
movsl
pop
xor
call
push
add
dec
pop
mov
ret
mov
sub
ret
sub
insl
xchg
in
dec
hlt
movsl
test
sbb
sub
push
dec
cmpsw
out
or
and
daa
add
dec
lahf
loop
xor
dec
pop
adc
sbb
xchg
fists
xchg
adc
adc
lret
cmp
or
push
fdiv
mov
mov
push
test
sub
xor
scas
jmp
dec
cmp
imul
je
mov
stos
adc
cmp
pop
jmp
repz
sahf
cmp
mov
adc
enter
xchg
adc
push
out
leave
pop
jmp
xor
cmp
inc
test
adc
cmp
lock
push
pop
sbb
sub
stos
jg
push
jle
int3
sbbl
or
js
adc
in
dec
lret
inc
pop
dec
lret
cmp
rcl
lock
hlt
fldcw
imul
cmpb
shll
mov
xlat
or
cmc
jg
iret
testl
xor
cld
lock
or
mov
push
outsl
cmpsb
mov
addb
ret
or
lds
loopw
mov
scas
ret
aas
cmp
sbb
mov
sub
out
mov
and
jge
xor
repz
popa
inc
dec
pop
or
fldcw
mov
add
mov
push
mov
or
clc
lock
jg
aad
stc
pop
xor
or
loope
jns
mov
or
fxch
in
nop
inc
push
fisubrl
jmp
xchg
inc
push
add
inc
and
lret
adc
daa
jbe
inc
mov
leave
jp
rcrb
out
xor
sahf
mov
cmp
and
xchg
rcl
fstpl
cltd
fisttps
adc
dec
nop
cmp
test
mov
ret
push
mov
xor
pop
fs
jmp
aad
add
int
dec
movsb
orb
mov
xchg
bound
repz
nop
sbb
outsb
sub
mov
or
mov
fbstp
mov
loop
sbb
add
daa
or
push
xor
push
sub
movb
push
xlat
gs
movsb
scas
icebp
push
pop
into
sbb
movsl
idivl
jle
and
push
lods
pop
xchg
or
push
or
fldl
jnp
mov
cmc
cmc
inc
movb
xor
pop
mov
jns
aas
dec
mov
test
add
dec
rolb
repz
lea
sbb
arpl
push
je
insl
mov
cmc
test
and
lods
fs
dec
in
repz
mov
xor
xor
pop
mov
jae
pop
push
add
sbb
call
jns
dec
inc
adc
dec
jb
inc
cmc
mov
sti
or
xchg
mov
sbb
inc
mov
pop
cs
bnd
mov
cli
add
mov
xchg
std
rcl
pop
dec
adc
minps
aad
xchg
out
test
ret
movsl
and
rcr
hlt
fisubl
les
test
adc
mov
add
and
out
aad
xchg
stos
sbb
out
scas
jnp
mov
js
mov
enter
dec
jbe
mov
mov
and
xor
jmp
gs
imul
int
cmp
or
lcall
rcll
repnz
fadd
xchg
jge
addb
push
cmp
xchg
cs
pop
sahf
push
add
sub
and
iret
mov
adc
xchg
adc
sub
mov
dec
mov
sarl
add
int
inc
js
into
insb
lcall
cmpsb
xchg
jg
lret
out
ret
repnz
aas
sub
xor
aad
xlat
int
push
stc
enter
lcall
dec
cmp
push
outsl
xchg
cmp
sahf
fcompp
aad
out
fcmovnb
jno
call
add
add
out
data16
sbb
out
ss
pop
out
xchg
mov
ficomps
add
inc
sahf
shlb
or
cmc
ret
call
or
popl
iret
push
xchg
icebp
call
inc
pop
cmp
mov
test
mov
lret
jno
andl
or
test
xor
lcall
fiadds
rcr
jbe
xor
push
ds
stos
jb
scas
push
jne
sub
out
sbb
in
into
push
pop
cmpsl
outsl
jl
sub
dec
cwtl
aaa
push
sub
pop
push
xor
aad
nop
repz
ret
add
adc
jno
fs
pop
pusha
lods
mov
pushf
sbb
cmp
jne
scas
or
jbe
jbe
pop
lea
sub
leave
jnp
fsubs
test
adc
and
ret
shlb
sub
mov
push
mov
xlat
mov
push
out
adc
mov
mov
inc
test
outsb
mov
fcmovb
mov
xchg
push
sbb
jl
jecxz
or
and
pop
xor
sti
repz
sub
test
icebp
in
icebp
inc
mov
out
xlat
xor
scas
jno
es
js
adc
lea
sbb
or
outsl
push
add
filds
xchg
dec
repnz
lret
andl
iret
fs
shl
xor
inc
notb
push
pop
mov
fimuls
int
jle
movntps
iret
cmp
or
insb
out
inc
xor
in
and
pusha
mov
xchg
adc
add
imul
into
sub
pop
sbbb
enter
add
or
push
mov
or
inc
push
jno
push
sar
sbb
lods
ljmp
pop
aaa
push
jne
shrb
rcrb
add
and
dec
and
push
lret
es
ds
icebp
stc
outsl
mov
mov
test
jbe
jmp
xchg
xlat
adc
orl
pop
and
mov
in
push
dec
dec
fisttpl
mov
shrb
mov
mov
daa
insl
jo
test
mov
sbb
shrl
rcrl
leave
adc
mov
add
jl
mov
cmp
in
unpckhps
cs
pop
ljmp
movsb
or
cld
call
fists
xchg
or
inc
add
mov
ljmp
outsb
roll
xor
mov
call
sarl
adc
pop
clc
adc
push
hlt
and
lret
jecxz
sti
push
aam
fldt
jo
cwtl
inc
fcompl
decl
xchg
insl
jmp
daa
add
push
mov
mov
cmp
add
push
xchg
cmp
jge
addb
mov
in
pop
cmp
insb
addl
fsub
push
neg
out
lods
aaa
mov
ja
mov
mov
fs
in
or
das
bound
les
mov
cli
dec
gs
inc
imul
orb
lods
repnz
sub
adc
scas
sti
mov
loop
xchg
jmp
repnz
or
dec
gs
mov
mov
fmuls
push
and
sbb
mov
push
pop
stos
cmp
lahf
je
cmc
rcrb
popa
stos
ds
lods
mov
mov
mov
outsl
add
inc
sub
fildll
mov
mov
and
loop
lahf
dec
insb
out
int3
sbb
cld
dec
cltd
repnz
dec
mov
lock
rorb
inc
in
mov
jp
sti
orl
mov
jle
push
rep
push
sbb
xchg
ds
jbe
jg
jne
dec
dec
ret
dec
cmp
stc
sub
sub
sbb
ret
push
ds
adc
movsl
xacquire
cs
push
adc
ds
insl
loope
pop
xchg
sub
jb
jno
inc
outsb
mov
aaa
test
pop
fst
jns
lahf
rolb
iret
js
loopne
jae
adc
mov
enter
push
fs
lahf
dec
andb
adc
push
bound
cmpsb
pushf
sub
loopne
arpl
adc
xchg
jecxz
and
fdivrs
pop
fs
pop
nop
adc
adc
cld
pop
pop
dec
push
or
negb
xchg
cwtl
outsb
shll
les
cs
mov
stos
mov
cmp
jb
rcrl
cli
mull
pusha
gs
adc
dec
loopne
in
dec
xchg
hlt
or
dec
add
jnp
test
jno
inc
mov
sahf
sbb
xchg
sub
xchg
mov
inc
int3
andb
loopne
mov
jne
jns
jp
push
sub
enter
lret
sar
pop
jae
mov
stos
pop
add
xor
inc
jb
sbb
cmp
or
pop
dec
push
stos
mov
push
leave
pusha
imul
jge
adc
jmp
ret
xor
and
jp
popl
jo
jmp
cwtl
icebp
jo
sti
icebp
xor
jmp
add
les
jb
cltd
and
enter
pop
ds
jne
ljmp
mov
cli
insb
pop
dec
pop
sub
out
es
sahf
test
cmp
mov
inc
or
jp
fldenv
push
cs
or
push
xchg
icebp
out
or
fistl
ror
xchg
or
ret
adc
or
rcrl
xchg
mov
in
enter
jp
pop
fwait
pop
sbb
aas
movsl
cli
and
int
add
jge
jmp
sbb
lret
or
sbb
movsl
out
add
sub
movsl
std
adc
mov
pop
mov
fs
mov
mov
mov
dec
fsubs
pop
pop
test
std
test
add
push
ja
sub
loopne
xchg
jmp
jns
in
pop
jns
lods
dec
mov
cmpsb
jle
cmp
mov
sub
lds
shll
pushf
outsl
mov
out
stos
inc
test
popa
es
nop
pop
imul
inc
xchg
mov
daa
flds
push
test
test
xchg
inc
push
jmp
mov
xchg
jbe
mov
xorb
ret
cmpxchg
iret
lcall
test
outsb
mov
xchg
xor
outsl
lods
lock
stc
add
mov
xchg
fsubs
out
inc
pop
mov
lret
jae
mov
mov
inc
xor
mov
pop
pop
outsl
xor
cmp
dec
add
mov
and
mov
pop
iret
and
aad
dec
cld
rorl
jp
loope
jecxz
inc
xor
jo
in
mov
xchg
lock
sub
lods
out
or
leave
xchg
js
lea
test
lods
lock
jecxz
pop
xchg
rcr
mov
or
mov
cwtl
outsb
es
xor
xorl
jecxz
xchg
xchg
cwtl
push
mov
dec
imul
fbstp
push
jne
out
xchg
out
or
inc
adc
or
test
in
sub
mov
pop
xchg
cwtl
lea
push
pop
push
jge
in
jmp
cld
mov
add
sub
out
jns
and
add
lock
fcoml
adcb
aam
mov
inc
imul
xchg
sbb
dec
add
cld
mov
cmc
and
cli
dec
jge
inc
out
decl
ds
insl
pop
jno
pusha
nop
fists
movsl
xchg
xor
lods
lea
sub
inc
pushf
lcall
in
mov
cmpsl
rorb
rcrb
movsl
xor
popa
adc
jo
sub
sub
lret
inc
pop
jg
xchg
scas
imul
ror
or
cmp
inc
daa
xlat
int
mov
mov
neg
inc
sbb
or
divb
ljmp
test
push
jne
cmp
add
cli
call
popf
push
inc
sub
cmp
dec
jne
push
leave
inc
scas
call
mov
mov
mov
nop
ljmp
mov
jnp
jno
inc
movsb
lea
xor
imulb
xor
cmp
jecxz
xor
add
outsl
jno
sbb
dec
popf
push
cmp
lds
jmp
mov
mov
mov
inc
mov
cld
jno
sbb
data16
mov
mov
bswap
jno
nop
call
sub
ja
dec
mov
nop
jl
add
shlb
mov
xchg
inc
jno
xsaveopt
stos
push
push
cmp
fdivrl
shufps
and
imul
shll
sbb
cwtl
mov
cli
stos
sbb
loop
inc
fisttps
lcall
sbb
xchg
xchg
pop
lock
sbb
cmp
les
pop
fs
adc
jbe
dec
cmp
imul
lret
cmp
cmp
xchg
nop
outsb
ficoms
sbb
inc
in
mov
xor
jmp
mov
push
dec
lahf
add
mov
and
cmpsl
push
outsb
cltd
bound
push
into
push
pop
popa
fistpll
call
stos
aaa
test
sbb
mov
add
test
and
hlt
sahf
or
sub
mov
mov
lret
pop
and
jae
push
enter
addb
iret
mov
jb
imul
cltd
pushf
in
xchg
shll
mov
xor
dec
stos
outsl
aam
in
or
xor
add
jbe
cmpsb
dec
sti
addl
movsl
lahf
movsl
in
adc
and
push
sbb
dec
mov
sbb
bound
cmc
xor
jecxz
sub
jne
int
stos
push
in
rcrb
jnp
sub
sti
mov
xchg
jo
jae
adc
testl
les
jp
add
inc
outsl
xchg
sub
jl
aaa
es
or
lds
and
mov
sub
cmp
jae
mov
call
mov
pop
or
in
jns
test
push
mov
cmp
mov
or
jmp
loope
ja
stc
call
mov
and
mov
and
dec
sbb
push
sbbb
lret
pop
arpl
fstl
out
sub
lock
mov
mov
sbb
mov
dec
imul
int3
addb
insl
std
pusha
sbb
xchg
push
xchg
sbb
arpl
arpl
inc
sbb
daa
cmp
push
sub
daa
orb
mov
inc
push
add
sarb
ss
fs
xor
rol
pop
mov
xchg
inc
mov
out
shl
mov
clc
cmp
stc
or
int3
cmp
adc
mov
push
or
and
sub
mov
xchg
dec
fmuls
popf
in
mov
xchg
xor
mov
lods
test
cmpsb
mov
adc
xchg
sub
mov
sbb
out
inc
pop
xchg
sub
xor
cld
repnz
in
inc
imul
dec
dec
pop
int
rcl
mull
popf
rep
int3
addr16
jecxz
test
hlt
rcll
bound
push
daa
mov
shlb
pop
mov
les
std
adc
or
pop
lods
icebp
leave
xchg
push
out
rclb
lahf
sub
or
cmp
dec
out
or
aad
inc
sub
je
mov
mov
mov
lahf
mov
mov
call
inc
shrb
ja
jp
mov
outsl
movsb
test
inc
pop
cmp
sub
or
push
jmp
int
add
js
inc
insb
xlat
outsl
mov
lea
lret
mov
xor
dec
mov
mov
mov
arpl
cmp
mov
xchg
stos
cmc
out
rclb
push
jns
or
mov
imul
jg
stc
mov
mov
jo
mov
scas
inc
or
push
and
or
arpl
ficomps
xchg
in
std
and
mov
xor
inc
mov
stos
xchg
data16
fwait
ds
sti
cmp
mov
add
jb
nop
test
fdivs
mov
popa
insb
cmc
or
pop
sbb
xchg
jmp
in
mov
cmp
scas
add
lret
das
push
in
scas
ret
and
and
jns
cmc
mov
mov
mov
jp
rcrl
testl
jb
imulb
andb
and
js
pop
outsl
aad
repz
cmp
repnz
adc
jg
lahf
mov
shrl
and
js
add
sbb
sub
cld
vucomiss
cmpsl
out
lock
sbb
or
pop
cli
xor
mov
stc
or
pop
sbb
in
pop
push
mov
fmuls
lahf
xchg
and
enter
mov
in
daa
aas
ret
sbb
loop
jno
add
aad
cli
mov
inc
jp
pop
enter
push
cld
mov
shrl
push
adc
mov
pop
xor
xchg
ds
sbb
int3
out
sub
or
fidivl
rcrb
pop
stc
andl
push
mov
stos
mov
push
sti
mov
pop
into
test
clc
jl
loop
and
xchg
mov
mov
adc
std
push
xchg
inc
into
popf
dec
shll
inc
addr16
inc
mov
cmp
and
dec
rolb
aam
popa
shr
lahf
movsl
push
pusha
and
shr
push
cli
mov
into
cmp
pop
daa
xchg
add
sub
mov
lea
or
fcomi
mov
push
movsl
call
addr16
xchg
fstpl
jae
inc
lock
sbb
scas
fs
pushf
leave
fsts
fistps
and
lock
insb
fldl
imul
xor
and
mov
paddusb
mov
into
pop
cmp
add
mov
pop
fcmovne
stos
jbe
mov
cli
xor
add
inc
xchg
sub
in
je
pop
das
shll
dec
ss
adc
ss
mov
jmp
shlb
cli
push
and
decl
arpl
push
adcl
and
jp
mov
add
xchg
lods
xor
mov
repnz
add
loopne
pop
lret
outsl
int
icebp
add
repz
xor
jle
xchg
mov
in
dec
xchg
std
dec
jle
jne
sbb
or
cmp
mov
movsl
ljmp
loop
jb
push
pop
push
pushf
add
aaa
icebp
push
mov
push
inc
dec
mov
sbb
cmp
or
test
push
jecxz
mov
in
stos
inc
sbb
sub
dec
cmpsl
or
sub
dec
ud0
js
aaa
xchg
mov
stos
lock
or
test
pop
cmpsb
or
imul
sbb
filds
push
adc
sbbl
cmp
in
mov
add
and
cmpsb
push
mov
mov
in
test
out
cli
xchg
push
insl
dec
out
sbb
xchg
outsb
out
sub
xchg
push
imul
stc
scas
sub
arpl
fs
fidivl
jmp
mov
pop
mov
and
cmp
inc
adc
sub
sbb
inc
jge
add
add
aad
jl
shll
fdivrs
push
jne
xchg
sub
lret
jle
int
add
adcb
cmp
out
sub
dec
cltd
arpl
lret
pusha
sbb
in
andb
xchg
lea
sti
xor
inc
xchg
push
stos
jo
mov
inc
sarl
mov
fldt
std
dec
icebp
int
and
scas
fmuls
xchg
cmp
sbb
adc
popa
test
and
ja
and
loopne
jmp
and
cmpsl
sub
cmp
out
push
and
mov
cmp
jne
xor
sub
adc
addr16
xor
sbb
aas
and
rclb
jb
fdivl
shl
ss
imul
icebp
sbb
xchg
sub
sub
cmp
bound
jg
push
sub
mov
shlb
loope
movsb
push
and
fdivrl
popf
push
mov
cmp
pushf
test
lods
or
dec
pop
outsl
xbegin
lds
push
xchg
or
dec
mov
sti
xchg
pop
inc
pop
ror
mov
sbbb
int3
dec
fisttps
jb
pop
sarl
xchg
mov
inc
lods
mov
sahf
pop
sarb
dec
test
push
sbb
adc
test
xchg
sbb
pushf
mov
scas
movsb
pop
adc
pop
je
mov
inc
and
in
mov
leave
mov
stos
jae
mov
sbb
cmp
dec
jg
mov
sbb
inc
sub
shrb
dec
clc
xor
daa
sub
fdivrs
xchg
cmp
adc
sub
or
popa
xchg
cmc
adc
cmp
js
test
xchg
mov
pop
int
add
jae
mov
popf
fisttpll
cmp
dec
jb
cmp
stos
inc
mov
mov
imul
xorb
mov
xchg
or
sarl
push
mov
in
mov
adc
push
pusha
sbb
xchg
cmp
jnp
lods
in
loope
cltd
sbb
pop
insb
mov
mov
adc
sbb
test
xor
rcll
out
or
inc
xchg
fs
mov
lods
inc
test
pop
enter
dec
mov
int
icebp
lahf
push
popa
in
sbb
jecxz
ret
push
imul
push
push
fs
daa
sub
mov
nop
sub
scas
in
pop
xchg
adc
push
mov
pop
mov
lods
les
cmp
xchg
push
pop
sub
jp
imul
jnp
xor
cmp
or
and
iret
xorb
push
sbb
cmp
std
fxch
inc
aas
mov
sahf
sbb
jb
adc
adc
push
pushf
push
dec
or
int
add
loope
push
sub
pop
or
cmp
leave
fs
ss
push
imul
dec
mov
loope
add
in
mov
out
or
sub
mov
jns
push
mov
repz
ret
popa
xlat
ds
jo
ds
test
or
inc
inc
xchg
and
push
sub
stc
and
test
mov
mov
scas
dec
icebp
sub
scas
pop
ret
pop
mov
xor
adc
dec
sbb
faddl
jne
ss
fsubs
addr16
cmc
fcoml
fisubl
xchg
add
negb
xchg
mov
aam
bound
dec
imul
and
dec
ficoml
pushf
in
in
loope
adc
pop
int
ss
mov
mov
scas
push
mov
outsl
popf
cmp
and
in
mov
fisttpll
pop
dec
dec
mov
insb
stos
pop
lfs
mov
loop
ss
aam
nop
pop
sub
mov
sbb
adc
lea
out
jb
insb
stos
inc
xor
fwait
jb
and
mov
xchg
imull
fwait
js
cmp
subb
sub
sbb
call
bound
and
popf
nop
aaa
shrl
test
inc
lea
lods
notb
ljmp
jb
or
cmp
push
test
dec
jge
add
add
je
mov
mov
push
popf
aaa
adcb
jmp
fldcw
or
sbb
mov
decl
les
inc
fisttps
pop
bound
xor
mov
adc
xor
cmpsl
into
jl
adc
cmc
push
rcrb
addr16
inc
and
aas
gs
repnz
stos
in
dec
sbb
dec
bnd
jl
ret
add
adc
and
mov
jnp
mov
pop
mov
repnz
fldt
or
aas
and
insl
and
mov
sbb
push
xchg
pop
cmp
pop
notb
test
ret
lods
outsl
or
dec
xchg
sbb
test
cmpsl
inc
jae
xchg
push
shrl
iret
mull
dec
fisubs
sti
sub
push
pop
pop
jmp
xor
into
push
sbb
pop
or
mov
in
lods
pop
out
cld
stos
jae
or
pushf
popf
and
cmp
pushf
aad
jp
inc
push
fistpl
cltd
pop
inc
push
fwait
leave
iret
xor
stc
int
cmp
lea
and
lret
xchg
imul
in
pop
in
add
mov
mov
xchg
mov
sahf
jg
pop
in
rolb
mov
xor
inc
and
xchg
dec
or
outsb
popa
xchg
fxch
adc
rorl
and
mov
sbb
mov
stos
pop
xchg
xor
pop
adc
xor
cmpsl
in
mulb
jp
mov
sub
out
xchg
mov
mov
xor
test
push
fsubr
popf
in
cmc
addr16
push
sub
mov
cmp
add
int
inc
gs
mov
in
or
shrl
mov
xchg
or
mov
jge
xchg
adc
ja
xlat
cs
mov
lea
sbb
or
out
sbb
ret
cmpsl
sahf
icebp
mov
add
rorl
cmpsb
mov
cmp
sbb
add
test
ja
mov
in
mov
sarl
mov
or
jmp
fidivs
ljmp
inc
insl
inc
xchg
sub
sti
mov
incl
mov
xchg
movsb
mov
dec
dec
sbb
xor
in
cmpl
inc
out
pop
jae
fsubp
adc
xor
add
dec
and
mov
jb
imul
add
pushf
mov
ret
loop
jo
pop
iret
stc
cmpsb
jbe
cmp
jne
and
adc
mov
mov
out
outsl
jecxz
fcmove
sahf
movsl
and
rcrb
ljmp
sub
sub
and
gs
mov
inc
or
into
loope
cmp
cmpsb
push
pop
push
dec
cmpsb
xchg
jno
imul
mov
nop
mov
cmp
aam
movsb
jbe
cmpsl
cmp
xor
jno
cwtl
xlat
imul
stos
shll
push
dec
adc
jge
push
adc
mov
adc
insl
into
test
xlat
fcompl
xchg
adc
mull
jbe
sub
idivl
fstpl
jb
cli
xor
int3
ljmp
fnsave
insb
cmp
push
cmp
dec
mov
pop
sub
add
jo
xor
popf
and
outsl
mov
rcrb
xor
push
mov
jb
cmpb
fsubr
jb
aam
test
and
mov
cltd
pop
xchg
xor
inc
push
pushf
dec
push
lret
vmovss
cmc
or
subl
cmp
into
arpl
shrb
mov
xchg
fcoms
stos
mov
mov
outsl
pop
push
mov
push
rol
fidivrl
adc
in
xchg
sub
stos
es
mov
inc
in
mov
fwait
mov
adc
jo
aas
sti
insb
xchg
cmp
jecxz
inc
and
pop
pop
hlt
xor
mov
inc
lods
lock
mov
das
push
shll
cld
ffreep
fidivs
pop
pop
das
insl
lret
loopne
rolb
xor
adc
mov
add
cmp
fs
mov
test
imul
clc
sub
mov
mov
jle
xlat
dec
sti
push
sbb
rcrb
fstpl
sahf
add
jmp
dec
cmp
cmp
movsl
rorl
dec
outsl
shll
fsubl
enter
ret
les
sbb
out
dec
call
test
mov
jecxz
movsl
mov
jge
aam
jns
aam
mov
add
and
mov
or
push
cwtl
or
ljmp
ficompl
mov
ficoml
fiaddl
jg
je
add
std
sub
pusha
cmpsl
lods
movsb
dec
or
sub
cmp
xchg
pop
cltd
sub
les
push
fidivs
dec
je
lret
fisttpl
xor
xchg
les
decb
or
and
dec
loopne
and
data16
daa
jl
movsl
enter
mov
jbe
mov
inc
repnz
scas
mov
lahf
mov
mov
mov
jp
adc
sahf
iret
and
add
push
sbb
test
orl
mov
mov
inc
push
arpl
test
mov
nop
sar
je
xor
cmp
sbb
mov
add
aam
outsl
fucomp
xor
in
fidivl
xor
push
lods
push
fnstenv
in
pop
ror
pop
data16
add
nop
mov
lcall
jp
cmp
data16
sub
mov
pop
lahf
inc
lds
mov
and
inc
add
sbb
out
inc
inc
les
push
data16
or
and
mov
and
mov
into
dec
jle
lock
cmp
dec
cs
cmpsl
xchg
popf
jbe
sahf
mov
negb
mov
imul
dec
addb
imul
push
out
loope
pop
adc
push
mov
jmp
mov
fsts
ret
mov
mov
mov
clc
mov
mov
xchg
jnp
aam
xor
push
add
fstl
cmp
push
pop
cs
cmpsb
mov
dec
mov
insl
outsb
cmpsl
in
shlb
or
sti
dec
jb
cmpsb
repnz
pop
adc
pop
rcrl
pop
imul
cmc
xchg
sbb
stc
mov
xchg
cli
je
jb
push
pop
push
cld
aad
test
lahf
fwait
mov
mov
push
mov
mov
adc
push
leave
push
iret
je
lret
and
pop
xchg
push
subps
xchg
mov
cmp
xor
scas
dec
mov
cwtl
rcrl
or
adc
test
inc
cwtl
iret
mov
daa
pop
scas
sub
or
mov
pop
mov
and
push
fsts
jp
in
dec
sub
xchg
outsb
aaa
pop
xor
popa
xchg
inc
sub
xchg
in
call
dec
movsb
mov
scas
ret
inc
mov
mov
xor
aad
jecxz
pop
fldt
dec
aas
call
jae
test
jb
ret
int
pop
add
arpl
mov
push
test
ficomps
lahf
cld
pop
sahf
mov
test
xor
mov
movsl
inc
xchg
inc
xchg
pop
fwait
mov
jo
dec
fldcw
test
movsb
push
je
nop
insb
outsl
out
jns
jmp
cmp
mov
sbb
out
fnstsw
pop
add
adc
mov
push
stc
sbb
lret
sbb
sbb
jnp
ficoml
es
scas
sbb
test
aaa
loop
lods
xchg
pop
sub
jmp
or
stos
jg
mov
aam
stos
sbb
adc
scas
insb
cmp
cmp
enter
mov
mov
sbb
mov
pop
push
inc
aaa
andl
pop
and
shl
ds
faddl
aam
js
and
push
inc
jle
outsl
orb
repnz
lock
test
pusha
lea
adc
cmpsb
movsl
add
jb
jecxz
mov
push
mov
movsl
std
inc
xor
pop
dec
mov
sarb
ja
dec
in
jge
jae
mov
add
add
loopne
and
fs
enter
mov
cli
adc
imul
sub
pop
fists
adc
in
push
pop
pushf
dec
std
aaa
cmp
leave
cli
mov
outsb
movsb
xchg
hlt
xchg
jecxz
jl
inc
outsl
lods
ja
popf
xor
je
mov
and
jmp
jbe
test
and
testl
adc
jb
jp
rorl
mov
and
cli
jnp
lea
fstpl
and
cmc
rolb
push
pop
adc
jns
dec
out
lock
xchg
out
push
dec
cld
insl
mov
cs
daa
sti
mov
loop
les
pop
sub
in
mov
pop
aam
xlat
insb
xchg
movsl
inc
in
inc
adc
cmpsl
and
ret
cmp
cld
push
mov
dec
aad
adc
mov
xchg
rorl
mov
dec
adc
cmc
enter
addb
loopne
add
jno
rcrl
dec
jae
cmc
push
pusha
push
dec
pushf
dec
adc
sub
sahf
addr16
stc
loope
add
xor
pop
push
jp
loope
sub
xchg
pop
xor
loopne
cmp
call
or
mov
fists
jne
mov
mov
stc
cmpsb
jl
inc
or
add
aad
ss
leave
fildll
jno
ja
pop
mov
in
sti
popl
xor
pop
cmp
dec
repz
rolb
ss
test
and
sbb
les
push
sbbl
cmp
xchg
fld
iret
sbb
push
lods
xchg
pop
or
pop
icebp
fsub
dec
inc
filds
jmp
or
push
ret
jmp
mov
pop
jb
push
inc
clc
aad
das
loop
rorb
loop
xchg
jb
mov
xor
rolb
stos
jnp
loope
push
out
inc
mov
daa
sbb
sub
and
mov
insb
leave
dec
imul
adcb
xor
ss
test
pushl
xor
and
fs
pusha
mov
orl
xor
sbb
xor
xchg
cmp
dec
jle
push
sub
mov
aas
inc
push
leave
push
test
sbb
gs
sbb
pusha
fmuls
scas
jae
lret
mov
repz
sbb
and
negb
xor
dec
mov
push
movsl
push
sub
in
imulb
mov
movsb
fnstenv
test
xorb
dec
div
in
sti
inc
xor
mov
pusha
mov
aad
stos
lods
xchg
cwtl
dec
movsl
les
bound
daa
cmp
iret
testl
pop
pop
jo
pushf
lret
imul
mov
loopne
push
inc
stos
sbb
fwait
push
jmp
nop
fnsave
push
fistps
sarb
sti
fsts
mov
mov
outsl
mov
enter
lcall
jb
cli
mov
adc
add
fisubrs
ret
pop
dec
mov
adc
mov
xlat
orl
push
xchg
sub
xor
icebp
cltd
ret
jl
adc
arpl
mov
push
rcrb
cmpb
lock
or
xorb
lea
in
xlat
shll
dec
fcomp
orl
sbb
xchg
push
jne
and
in
or
daa
fnstenv
pusha
mov
inc
iret
movsb
les
push
in
and
dec
push
call
pop
in
incb
jge
rclb
lahf
ret
inc
movsl
aam
sbb
loopne
xchg
lods
push
push
or
jno
and
ds
fistpll
pushf
add
xor
in
mov
mov
cmp
pop
les
fwait
shl
dec
sub
fldcw
sbb
adc
jnp
jbe
into
repnz
adc
or
add
xchg
je
fisttps
add
lods
mov
loop
lock
inc
lock
cli
andb
sar
iret
push
cmpsb
or
push
data16
movsl
xor
enter
push
push
sbb
pop
mov
inc
jbe
jmp
xlat
adc
pop
mov
fcom
mov
ret
cld
rcrl
xchg
pushf
insl
xchg
pop
dec
adcl
dec
fisttpll
movsl
push
pop
bound
outsl
jnp
and
lcall
mov
jl
cmp
xchg
add
pop
pop
push
adc
mov
push
mov
cmp
ficoml
test
mov
cmc
inc
mov
cmp
jmp
push
cli
add
adc
jne
in
repz
test
pop
mov
rclb
mov
jl
xchg
mov
xchg
pop
hlt
add
rolb
pop
cmp
cld
rol
mov
repz
and
xchg
ljmp
and
mov
lret
push
jns
mov
dec
cwtl
hlt
fwait
cmp
jno
clc
imul
rorb
sbb
cmc
sbb
aas
sbb
cld
sbbl
subl
popa
fcoml
xor
lret
cltd
ret
sbbl
insl
and
lods
mov
mov
xchg
push
mov
and
insb
sti
dec
adc
mov
aas
push
fwait
stc
mov
xor
in
into
push
shrl
imul
jmp
push
add
in
clc
and
jae
inc
xchg
cli
fwait
ljmp
sub
in
cwtl
inc
dec
scas
cltd
daa
mov
jle
ss
dec
sbb
shlb
test
repz
in
cmp
jb
test
cmpsb
daa
jmp
stc
stos
jecxz
push
lret
fisttpl
sti
mov
add
cmp
cld
cwtl
out
jno
ja
in
push
pop
sub
loop
mov
lods
jno
lahf
sbb
fnstcw
and
or
xor
std
mov
cmpsl
mov
jbe
push
aad
jnp
mov
jae
pop
and
cs
hlt
or
sbb
fistpll
lds
mov
cmp
mov
mov
cmpsb
loop
push
cmp
mov
jno
arpl
dec
xor
outsl
mov
fists
cmp
iret
inc
lret
pop
loope
stos
in
inc
cmc
mov
fs
das
ret
dec
insb
je
xor
insl
repz
xchg
sar
fidivrs
sub
roll
mov
jbe
and
push
adc
sbb
push
xlat
ror
xor
jb
inc
das
xor
or
jmp
mov
ret
stos
jo
mov
cli
enter
pop
inc
out
loopne
inc
xchg
mov
jbe
enter
sub
sub
loopne
aas
dec
pop
je
push
outsl
fidivs
push
push
cwtl
enter
fnstcw
sbb
inc
out
and
xchg
pop
sbb
sbb
in
lcall
js
jl
mov
jl
mov
scas
mov
sub
fcom
mov
mov
lods
out
sub
push
jns
cmp
in
fstl
movsb
pop
push
xchg
nop
inc
cmp
sarb
pop
xchg
hlt
and
test
sahf
lcall
jno
jns
outsl
movsl
clc
xor
mov
outsb
movsb
xor
dec
push
fisubrs
lcall
sub
enter
xor
xchg
mov
xchg
in
inc
sbb
cmpsl
pop
outsb
test
loope
imul
push
cmp
cmpsb
jp
enter
push
cmp
stc
loop
xor
xorb
mov
cmp
mov
push
sub
push
dec
mov
ljmp
out
and
les
or
inc
and
aam
pop
and
xlat
jmp
mov
cmc
and
adc
jns
xchg
xor
jmp
mov
fistps
std
rcrb
jg
xchg
jnp
cmp
popa
jmp
mov
outsb
jecxz
into
in
ret
aad
mov
add
mov
xlat
and
xchg
and
pop
arpl
ja
push
and
dec
push
enter
sarl
push
mov
sub
xor
jecxz
pusha
adc
fiadds
xor
mov
inc
push
sahf
lods
pop
roll
mov
aam
ljmp
fstpt
pop
pusha
push
push
lods
int3
ret
dec
je
mov
ja
ret
push
jecxz
mov
dec
scas
imul
xor
cltd
or
sub
je
mov
cmp
cmc
sub
lahf
push
fdivr
xchg
fisubs
lret
imul
sbb
loopne
cmp
inc
mov
jl
popa
cmp
mov
lcall
test
jge
sbb
cmpb
lret
jno
fs
popa
bound
jle
popf
mov
test
jmp
mov
sbb
push
push
ljmp
loop
sub
sti
sti
push
dec
cmp
divps
test
imul
in
pop
shll
sub
mov
lods
cmp
fldcw
and
stos
aas
inc
fcomip
iret
dec
adc
bound
pop
mov
xor
pop
andl
dec
incb
add
popf
xchg
mov
ss
mov
stc
std
cmp
mov
into
fnstenv
pop
test
fs
mov
mov
je
add
sti
les
mov
rcrl
xor
aas
int
adc
adc
or
pmuludq
inc
sbb
jge
inc
mov
in
clc
addl
mov
add
dec
inc
pop
adc
ret
and
inc
jp
pusha
dec
cmp
lods
xchg
pop
jle
jns
dec
cmpl
repz
adc
and
cld
jp
inc
adc
xorb
je
test
ret
sti
cltd
adc
lahf
stos
adc
lods
std
cwtl
aas
addr16
ljmp
sarb
cmp
fdivl
cltd
scas
xor
sub
lods
out
xchg
cltd
and
dec
jno
cmp
cwtl
mov
aam
cmp
adc
xlat
mov
pop
dec
cmpsl
adc
mov
int3
rcrb
dec
xor
mov
loop
dec
pop
mov
popa
add
insb
popa
aam
push
test
call
imul
inc
inc
out
into
push
lahf
mov
cmp
sub
fidivs
ret
inc
push
sub
mov
inc
jp
enter
push
jne,pt
push
jo
push
ja
lret
ds
cwtl
pop
inc
adcl
lock
fcmovnb
bound
push
pop
dec
repz
rorl
fisubl
adc
mov
mov
jne
mov
imul
loope
shl
ss
mov
pop
adcl
arpl
sbb
sbb
pop
in
nop
icebp
pop
inc
je
lret
jbe
sub
aam
hlt
inc
out
aas
shlb
cli
ds
mov
ret
clc
sti
mov
and
jg
pop
cwtl
sub
push
mov
bound
pop
scas
fisttpl
mov
shl
lahf
cmp
mov
sti
mov
add
fcomip
sti
lret
xchg
pop
mov
pop
jnp
cmp
jns
out
out
xchg
or
dec
jmp
mov
jne
mov
in
sarb
scas
out
lock
jne
hlt
imul
in
stos
subb
lds
adc
outsb
jecxz
test
std
xor
scas
cld
xchg
jmp
ret
aad
clc
push
negl
daa
mov
push
pop
dec
test
fldl
or
xchg
mov
push
sbb
pushf
inc
mov
mov
call
pop
cs
stos
mov
pop
int3
outsb
loop
aaa
sahf
adc
dec
nop
lret
pop
negl
sbb
das
nop
daa
sbb
and
jp
cli
jns
xchg
sbb
cmpsb
push
out
and
test
push
jmp
pop
ja
cld
mov
movsb
test
iret
mov
xor
ljmp
sub
cmp
cmp
subb
push
inc
aas
subl
stc
cltd
lds
les
pop
xorl
mov
inc
pop
push
cwtl
mov
jge
imulb
int
or
pusha
outsl
xor
jo
imul
scas
dec
je
inc
leave
jmp
xlat
daa
mov
icebp
test
cld
stos
outsb
adc
in
sbb
sarb
loop
stc
lcall
fs
fmuls
ret
aaa
mov
pushf
or
loopne
dec
bound
addr16
loope
inc
dec
push
movlps
push
mov
stc
mov
daa
std
pop
aam
jl
inc
pop
and
sub
jmp
bound
gs
push
mov
cmp
ds
je
jmp
lahf
cmp
ja
mov
movsl
data16
inc
and
addr16
cmp
aam
lea
push
ds
sbb
cmp
mov
pop
mov
mov
xor
or
mov
mov
sbb
fidivrl
cmp
or
sbb
loopne
pushf
inc
add
or
jb
les
sub
shrb
mov
loop
sbb
jno,pn
in
mov
pop
ret
or
ret
sbb
sub
fcmovnu
pusha
xor
push
xchg
xchg
popf
or
lret
mov
adc
out
sub
add
xor
mov
fcmovnb
movsb
sti
loope
mov
pusha
cmp
cs
int
stos
push
sub
pop
mov
xlat
imul
nop
cwtl
inc
loop
lds
imul
jl
ds
out
xchg
in
add
pop
fbstp
lds
xchg
rolb
or
jge
test
cmp
sub
pushf
and
stos
jne
jmp
aas
and
push
inc
test
aaa
sbb
push
ljmp
lods
adc
cmp
inc
cld
js
xlat
fstl
push
inc
stos
xor
inc
out
cmp
enter
pop
inc
rcrb
pusha
ja
push
popa
ret
insb
iret
sub
jp
data16
mov
dec
sarb
les
jecxz
outsb
sbb
jl
lods
nop
push
int
add
mov
push
call
xor
xor
mov
xor
dec
mov
into
mov
hlt
adc
aam
mov
dec
mov
std
jg
rcr
jl
mov
test
lcall
inc
fisttpl
popa
cmpsb
adc
enter
sub
xchg
xchg
pextrw
mov
mov
icebp
sub
sub
cwtl
dec
jmp
inc
and
mov
popa
jbe
pop
dec
idiv
in
pop
insb
mov
lods
sbb
mov
jno
outsb
or
xchg
pop
ret
and
xchg
pop
fstl
lret
icebp
clc
mov
into
mov
nop
popa
mov
int3
add
sti
sarb
add
dec
aam
dec
lret
ret
adc
leave
sub
or
shlb
push
cli
movsb
dec
pop
testb
push
int
push
orl
xlat
subl
jae
scas
notl
cmp
inc
out
mov
bound
cmpb
sbb
mov
std
and
test
jle
in
mov
fs
jp
adc
test
xchg
jl
ds
adc
in
ss
test
dec
fidivs
int3
dec
mov
xor
xchg
clc
jae
mov
movsl
shlb
dec
cmp
pop
clc
rol
mov
insb
sbb
add
stc
es
pop
jbe
in
clc
mov
jle
rcrb
jmp
jmp
popf
daa
sbb
mov
lahf
xor
lahf
jnp
xchg
mov
fdivl
inc
cwtl
xor
das
imul
stc
add
les
mov
frstor
imul
and
xchg
fdivrl
push
iret
xchg
inc
ret
or
nop
pop
je
xor
inc
jb
stos
int
shll
jl
mov
lock
fisubl
arpl
loope
call
int
ljmp
adc
dec
sbb
xchg
xor
or
mov
adc
mov
test
add
popa
fwait
cmpsb
adcl
ss
nop
add
pminsw
gs
daa
mov
cmpsb
mov
sahf
jo
xchg
or
sahf
dec
push
or
gs
mov
xlat
fistpl
push
clc
stos
inc
insl
pusha
and
or
out
jne
push
in
or
clc
stc
out
push
add
adc
push
cmpsb
stos
xor
lcall
dec
add
int
jnp
sub
pop
jbe
dec
adcl
mov
ret
outsl
je
push
pusha
mov
or
push
iret
shll
outsb
mov
push
adc
movsl
mov
or
es
notl
repz
sub
push
icebp
mov
hlt
nop
or
and
push
mov
leave
xchg
adc
xor
mov
xor
sub
addl
pop
or
push
push
out
iret
mov
xlat
leave
dec
imull
cmp
fdivl
add
es
push
cmp
add
les
pusha
orl
jl
icebp
jne
sub
fmulp
add
xchg
sub
sub
cmp
cmp
andl
loopne
rorl
mov
jl
inc
inc
pusha
push
and
mov
imul
das
dec
xchg
xor
in
test
mov
mov
cmp
push
lods
cld
jb
add
movsl
idiv
push
xchg
mov
sbb
out
and
jo
fstpl
and
cmp
sub
xlat
dec
outsl
insl
mov
pop
inc
push
test
shl
imul
fidivs
rcrl
movsl
jns
xchg
gs
repnz
sub
push
push
sbb
shll
mov
fcoms
sahf
jbe
inc
sub
jo
popfw
inc
xchg
scas
jecxz
inc
test
notl
ja
js
mov
insl
or
xchg
lock
mov
mov
nop
stos
push
sub
xor
popa
ret
inc
jns
mov
in
and
in
ja
dec
pop
add
xchg
cld
in
cmpsb
cli
push
imul
mov
rorl
push
mov
movsb
jge
cmp
push
fsubl
cmp
push
imul
xlat
mov
imulb
pushf
ja
xlat
push
ljmp
rcrb
cs
xchg
or
jl
pop
outsb
cli
push
das
cmpsb
xchg
sub
inc
xchg
lea
popa
out
lret
pusha
lods
in
mov
jb
js
cmpsb
aaa
mov
mov
aas
push
ljmp
adc
mov
sbb
sbb
ja
jnp
movsl
hlt
pushf
sub
sbb
mov
pop
jecxz
xchg
xor
push
push
sti
mov
fists
aad
leave
xchg
push
and
test
or
sbb
les
in
pop
pusha
into
jae
inc
lea
shrb
add
add
rcrl
xchg
xorb
out
test
loopne
iret
minps
ss
xchg
sub
xchg
enter
push
adc
mov
sub
push
jge
cmp
add
pop
jmp
jb
rcl
inc
sub
shrb
mulb
adc
push
jb
pop
or
pusha
dec
fucomi
add
push
pop
mov
cmp
sbb
mov
mov
jg
in
js
pop
add
inc
xchg
sub
popw
stc
xor
sahf
xor
mov
fcmovne
int3
clc
mov
in
ljmp
mov
cmc
mov
sbb
jno
add
stos
jg
jge
jmp
sbb
and
test
pop
lcall
hlt
aam
fcomip
push
or
sub
loope
mov
jmp
stc
push
jecxz
push
testb
lcall
mov
sahf
loope
lock
into
add
cmp
mov
or
jmp
ss
negl
and
movsl
pop
mov
out
and
es
adc
in
repnz
xchg
xor
jns
movsl
loopne
in
dec
jnp
jnp
cmp
lds
push
jl
sbb
jp
filds
push
or
pusha
xorl
roll
jns
cwtl
push
xorb
pop
jl
aad
jae
mov
loope
pop
mov
daa
mov
sbb
jp
lds
dec
mov
jmp
lods
outsb
shll
aad
adc
cwtl
inc
out
js
sub
and
or
cmp
test
aad
mov
pusha
daa
pushf
lds
mov
inc
rcrb
push
inc
sti
pop
pop
into
mov
xor
xchg
inc
cmp
movb
lret
sbb
lds
lcall
or
movsb
jge
std
out
lds
pop
int
test
aaa
xor
lret
sub
pop
push
sub
in
xchg
gs
imul
mov
icebp
nop
mov
dec
addr16
jge
xchg
das
outsb
outsb
jne
xlat
js
out
mov
ret
stos
lods
jg
jl
das
imul
cmc
push
js
loop
loope
xchg
fmul
ret
dec
loop
sbb
dec
xor
nop
arpl
lret
fistl
fnstsw
cmp
and
add
push
mov
mull
shrb
inc
outsb
call
mov
xlat
rcr
ja
jno
mov
jnp
cmpsl
dec
out
dec
inc
pop
sbb
imul
push
lret
lcall
push
push
imul
cmp
cwtl
data16
push
movl
add
xor
or
pop
call
lea
test
inc
pushf
mov
cmp
push
aad
dec
xchg
cld
test
repz
in
rclb
adc
imul
inc
and
leave
ljmp
mov
clc
adc
and
adc
push
std
push
cli
lahf
inc
jg
call
cmp
adc
push
mov
mov
mov
mov
add
push
xchg
movsl
mov
ret
stc
xchg
std
mov
add
dec
mov
stc
push
clc
adc
xchg
lahf
cmp
cld
enter
jp
rclb
mov
inc
imul
lods
pop
sbb
sti
adc
fldt
cmp
lcall
pop
out
cmp
das
std
or
out
mov
std
mov
fldcw
scas
xchg
mov
xchg
or
or
mov
or
sti
loopne
xor
ficoms
test
adc
imul
test
test
sbb
sub
repz
pop
mov
mov
daa
cmp
pushf
loop
mov
nop
out
mov
push
dec
popa
ret
repnz
cltd
out
sbb
xchg
inc
adc
cmp
shll
clc
daa
mov
mov
add
jo
movsl
and
or
push
pop
pop
mov
xor
mov
push
cmp
enter
mov
rcrl
clc
cli
jp
loopne
adc
mov
jnp
inc
inc
mov
mov
lcall
mov
addb
cmp
push
adc
mov
imul
pushf
movsb
lds
add
pop
pop
adc
dec
add
lea
jb
jmp
push
out
loope
and
inc
cmp
jl
fsubr
mov
lock
cwtl
mov
inc
push
subl
push
insb
dec
or
ffree
add
negb
sbb
mov
cmp
pop
add
pop
icebp
fisubs
cmpsl
rol
nop
inc
fistl
sahf
pop
ret
mov
mov
test
sbb
lds
cli
stc
mov
out
mov
je
stos
outsl
push
mov
dec
xchg
adc
jge
and
push
out
das
inc
add
push
lds
pusha
outsb
sbb
ret
push
mov
js
imul
jb
push
xchg
mov
xchg
nop
xor
icebp
mov
std
ds
pop
dec
xchg
dec
jne
pop
cld
lea
mov
and
sbb
sbb
mov
dec
jecxz
loopne
mov
inc
ljmp
mov
lods
cmpsb
mov
jns
mov
gs
mov
movsl
mov
arpl
mov
hlt
sub
data16
sbb
loopne
fwait
rcrl
flds
inc
loope
notb
adc
jb
stc
inc
cmc
je
clc
sub
shl
jecxz
xchg
inc
sbb
and
xor
mov
mov
sub
push
jo
sarl
jns
mov
mov
fadds
mov
in
mov
cmp
add
add
sarl
pop
mov
aas
cmp
mov
mov
insl
in
imul
fs
sub
in
dec
cmp
mov
pushf
pop
pop
adc
adc
aad
addr16
test
mov
imul
stos
cltd
adc
test
pop
into
jbe
or
cwtl
stos
loope
dec
lret
pop
jnp
cmpsb
push
gs
adc
mov
and
mov
jae
pop
test
cli
push
je
push
mov
ret
lret
sahf
add
and
adc
add
loope
push
jae
inc
lea
inc
nop
push
fistps
pop
or
xchg
cmp
pop
mov
in
int3
inc
aas
sub
inc
movsb
insb
in
cmp
test
and
arpl
jge
pop
stos
repnz
shrb
mov
jmp
or
sti
leave
xchg
nop
xor
imul
std
fiaddl
dec
cltd
movsb
sub
or
testb
xchg
shll
mov
ret
mov
jo
test
push
pusha
jle
add
cmpl
or
cmp
in
cwtl
sbb
pusha
jmp
or
inc
inc
adc
cmc
lret
pop
xchg
add
pop
push
test
rorl
not
jae
mov
xchg
lcall
mov
fcmovbe
mov
int
xchg
rcrl
adc
mov
jae
cmp
and
push
add
mov
xchg
lods
and
fisubrs
jl
fisttps
sbb
push
pop
inc
lods
pop
cli
pop
cmp
fs
lret
cmpsb
mov
movl
cmp
xor
pop
test
mov
inc
cmp
rorl
fwait
mov
cmp
das
and
push
ds
sarb
and
xchg
sub
push
cmp
add
lea
jbe
hlt
pusha
or
call
jno
jae
lret
dec
push
mov
jne
testl
mov
ljmp
lods
adcb
mov
sbb
sar
test
loopne
cmpsl
jae
dec
sub
dec
roll
and
fs
dec
ds
mov
mov
insl
shl
sbbb
aas
bound
es
mov
jo
fistl
cs
mov
pop
test
popa
pusha
fnsave
fwait
insl
push
incb
mov
mov
jecxz
cli
in
cmpsl
popa
std
sbb
jg
mov
shll
rol
mov
push
add
enter
rclb
fadds
adc
imul
mov
or
loope
daa
test
bnd
lea
shl
adc
dec
dec
dec
imul
push
fldcw
xlat
jle
push
cwtl
mov
out
fiadds
inc
bound
insb
pop
loope
jl
mov
sbb
mov
inc
push
inc
mov
cld
push
xchg
mov
add
mov
test
lock
dec
sbbb
dec
inc
stc
aad
hlt
cld
push
xor
mov
push
shr
notb
punpckhwd
ljmp
adc
sbb
pop
dec
xchg
lret
popf
push
mov
xchg
lds
lcall
push
inc
sub
add
cmpsb
cmp
push
shrb
dec
out
inc
out
aaa
jmp
loope
add
add
or
shll
adc
es
xchg
scas
ja
int3
cwtl
and
insl
lock
pop
divb
pushf
push
testl
cltd
pusha
mov
add
sub
add
es
sahf
outsb
push
cltd
ret
cld
jno
xor
int3
aas
push
call
int3
lret
add
add
xor
xchg
outsl
add
or
test
xchg
sbb
or
mov
pop
repnz
addb
jecxz
ret
mov
ds
dec
dec
sbb
inc
int3
mov
push
cmp
sbb
inc
ds
mov
jp
pushf
mov
enter
aad
adc
into
jns
push
lock
dec
lret
leave
sbbl
lods
pop
sub
ror
aad
testb
sub
or
add
es
subl
shl
adc
push
fs
mov
cltd
fwait
lods
into
shll
test
lret
js
pop
xor
fnstenv
xchg
insl
imull
test
mov
std
shr
jns
ffree
xchg
mov
cwtl
outsl
in
pusha
sbb
mov
das
sbb
leave
imul
jb
xchg
ljmp
jne
mov
sbb
push
cmpsb
hlt
cmp
cmp
jnp
xor
sbb
push
aam
stc
adc
xorl
int3
movsl
and
sub
xchg
adc
jp
xor
rol
icebp
cli
cltd
xor
fwait
int
cwtl
jne
cmpsl
lret
hlt
test
mov
shll
hlt
add
xchg
leave
jb
rcrl
push
test
arpl
lods
add
decl
mov
cmp
rol
push
sub
shr
fmuls
adc
cmp
cmpl
loop
mov
fistps
orb
outsl
or
lret
push
nop
xor
sbb
push
icebp
inc
mov
jg
lods
lds
jl
sbb
adc
jl
stos
xchg
sbbb
stc
clc
mov
scas
jle
popf
dec
and
ret
lret
hlt
inc
movsb
pop
and
movsb
jmp
cmp
jne
add
pop
push
jg
sti
pop
xor
ret
jae
lret
mov
aam
cmc
pop
inc
push
out
dec
scas
cld
insb
mov
movsb
add
int3
mov
dec
insb
adc
fcmovne
les
arpl
jle
les
shl
xlat
add
ja
sbb
xor
push
adc
xor
cld
test
push
sub
adc
inc
jmp
adc
xor
cltd
cmpb
das
xchg
add
shr
test
cmp
movsb
int
imul
test
stos
or
loope
mov
fsubs
dec
sahf
or
xchg
stc
jb
rorb
sub
xor
or
xchg
xor
cmp
mov
xlat
leave
rorl
roll
lahf
pop
push
mov
push
sub
mov
pop
pop
mov
mov
inc
filds
and
imul
xchg
mov
xchg
int
mov
add
in
xchg
inc
lret
cmpsl
mov
cmc
stc
mov
adc
sbb
aad
jns
sti
repnz
fmuls
mov
dec
sbb
ds
add
sbb
inc
or
cmp
bnd
inc
stos
sbb
pop
mov
xchg
nop
and
mov
push
sbb
mov
add
sbb
cltd
sbb
popa
xchg
mov
mov
aam
mov
mov
in
mov
mov
fnstcw
cltd
add
ss
test
fwait
movl
in
ror
mov
mov
out
jno
jbe
bound
leave
adc
test
filds
movsl
sbb
push
in
shll
push
jg
leave
lahf
ljmp
cwtl
and
enter
mov
sub
shl
dec
cmpsb
dec
pop
std
push
stos
adc
pop
jl
mov
push
pop
pop
cltd
iret
lcall
rcl
movsl
dec
adc
mov
jge
pop
daa
sbb
mov
sahf
lahf
aas
lcallw
sub
cli
pop
xchg
int3
dec
fs
dec
test
shll
push
ds
jge
ret
mov
jge
gs
sarb
lret
cmp
stc
rorl
push
inc
clc
insb
sahf
frstor
sbb
repnz
in
enter
push
repnz
xlat
fwait
pusha
divl
inc
jmp
loop
adc
lods
sub
push
jg
push
out
lret
lcall
xchg
cld
loop
mov
test
xor
jg
jle
inc
movsb
mov
out
or
xorl
mov
fcompl
mov
push
push
push
cmp
push
prefetch
push
dec
pop
mov
sarb
daa
cmp
xchg
add
or
mov
into
jno
xchg
xor
add
cmp
out
insb
cmpsb
cwtl
xchg
and
push
jl
outsl
mov
popf
outsb
ja
in
jmp
jb
push
cmpsl
or
cmpsb
push
xor
negl
sbb
mov
testb
cmpsb
jbe
cmp
outsb
imul
popa
test
and
shrl
popl
ret
xchg
or
xor
xchg
jo
and
pop
jmp
mov
xchg
push
jecxz
pop
and
mov
cmpsl
adc
mov
adc
call
mov
or
or
lea
lret
notl
dec
cmp
add
iret
and
loopne
mov
push
jp
adc
mov
jecxz
sbb
int3
pusha
sar
push
imull
jl
or
dec
pusha
mov
in
lret
divb
sti
jns
xor
mov
andl
fisubrs
rorl
divl
cs
pop
xor
pop
dec
cltd
xchg
dec
add
rol
jns
je
sub
mov
in
cmpsb
dec
mov
xor
inc
push
xchg
jae
mov
adc
mov
or
aam
lock
mov
pop
push
lcall
das
in
sub
scas
cltd
subl
loope
or
adc
sbb
sbb
div
inc
add
lods
pop
cmp
jnp
adc
bound
int
or
inc
xor
sti
and
in
mov
outsl
aas
jmp
out
je
dec
dec
mov
push
repz
rcr
xchg
pop
add
mov
xor
out
lods
sahf
les
lods
aaa
faddl
inc
dec
les
cs
sub
mov
add
inc
inc
sub
sub
pop
or
xchg
pop
hlt
mov
cmp
add
xchg
les
into
inc
mov
iret
push
inc
xor
xor
or
inc
call
std
mov
data16
jbe
fsts
inc
sub
andl
gs
xorl
sub
jno
add
pop
jbe
test
mov
clc
les
inc
add
test
xchg
test
in
and
and
rorl
repnz
insl
cmp
mov
cmpsl
jmp
lods
pop
andl
inc
xor
or
sahf
pop
xor
mov
jno
fmuls
inc
rcrl
inc
mov
mov
inc
cmp
adc
fs
sbb
mov
sub
js
fbstp
jb
push
gs
and
in
adc
sbb
loop
adc
out
stc
int
pop
jg
inc
scas
add
and
idivl
cmp
push
mov
pusha
in
subb
ret
inc
iret
xchg
mov
lcall
push
jmp
fisttpl
jbe
jns
pop
sbb
sahf
movsb
fcomp
xlat
jle
add
cmp
sbb
adc
ficoml
lods
mov
and
enter
mov
and
push
or
clc
push
add
imul
or
fnstenv
add
xor
push
test
shlb
popf
rcrb
lcall
out
xchg
shl
sarb
push
into
arpl
pop
lods
mov
and
xchg
jbe
xchg
cmp
ret
cmp
je
cmp
roll
adc
out
sub
adc
faddl
scas
fstpt
ret
mov
mov
loop
sbb
push
imull
xor
inc
adc
push
pop
aas
add
cmp
push
sub
test
mov
imul
push
mov
imul
mov
lods
lahf
pop
jp
stos
push
cld
mov
sbb
je
mov
shlb
pop
mov
bound
mov
cli
cmc
js
mov
cmpsl
adc
test
aad
fdivs
movsl
gs
or
bound
xor
aad
push
ss
pop
test
or
out
mov
inc
adc
outsl
inc
leave
in
inc
shl
add
insb
mov
adc
push
ss
mov
fisubl
push
in
jnp
xchg
sti
mov
loopne
in
ja
pop
dec
lret
xchg
adc
fsubrl
lcall
xlat
mov
mov
pop
push
or
dec
cmp
push
sarb
mov
xchg
dec
in
xor
sbb
lods
mov
mov
xor
cmp
and
push
sbb
mov
mov
add
hlt
pop
pop
push
outsl
ret
lds
orl
jge
sbb
mov
lds
pusha
inc
push
jmp
pusha
fmuls
jbe
or
lea
stc
push
jmp
rcrb
aaa
lds
xor
sub
sti
fiaddl
test
data16
mov
add
pop
push
clc
sbbb
pop
lcall
in
in
testl
sbb
mov
rolb
pushf
and
jecxz
inc
xor
push
push
test
mov
es
adc
popf
out
fistps
dec
js
sub
push
popf
ds
sbb
ljmp
mov
shrl
xor
dec
imul
xor
sbb
aas
out
cltd
dec
dec
imul
xchg
push
ret
loope
jg
or
xor
jle
sbb
fldt
mov
or
orb
sub
jg
sbb
sbb
scas
mov
push
xchg
or
xchg
divb
and
sahf
bound
ret
and
mov
mov
lret
data16
ror
pop
out
xchg
mov
cwtl
punpckldq
scas
cmpsl
add
scas
fistpl
out
xor
fnsave
mov
jp
cli
jl
pop
inc
pop
jle
pop
lock
inc
fwait
nop
in
sbb
test
mov
mov
fstps
mov
sarb
das
xchg
fadds
push
xchg
or
sub
bound
or
iret
loop
inc
lods
adc
adc
cmc
loopne
fldcw
sbb
cmp
jg
mov
aam
mov
call
xchg
mov
sbb
ror
stos
mov
mov
jp
mov
mov
push
enter
out
mov
push
movb
jnp
adc
sub
ret
leave
inc
mov
jns
nop
repz
adc
push
cmc
mov
sbb
sub
test
pop
cltd
and
pushf
mov
sub
sbb
xlat
inc
mov
push
mov
pusha
push
cltd
cmp
xor
push
lahf
push
mov
jmp
xlat
mov
xor
sub
sbb
shll
testb
lea
les
dec
mov
mov
iret
test
or
sbb
div
movlps
dec
inc
add
mov
subl
ficoml
push
add
adc
mov
and
popa
mov
inc
jg
in
mov
lret
stc
dec
aas
loop
lret
jmp
fiadds
mov
sbb
adcb
sub
mov
add
push
cs
loope
add
jno
sarl
jns
lret
jg
mov
loopne
scas
pop
dec
icebp
xchg
sbb
dec
int3
loopne
add
dec
sbb
xchg
mov
dec
mov
mov
subl
inc
mov
addr16
cmp
dec
popa
fisttpll
xchg
test
jl
scas
leave
out
mov
inc
pop
loopne
and
imul
test
jle
popa
cmp
pop
or
out
push
scas
add
loopne
sbb
pop
or
mov
jmp
mov
adc
adc
scas
or
divl
xor
ljmp
push
jmp
shl
call
out
inc
pop
lret
dec
sub
lods
ljmp
jg
xlat
push
dec
popa
adc
test
cmpsl
sub
push
sbb
jns
int3
jne
jno
adc
push
cmp
rcrb
cmp
or
mov
add
loope
rorb
leave
sub
or
jo
push
jo
test
stos
lea
adc
jl
fisttpl
mov
shlb
pop
sti
and
cmp
testl
mov
push
loop
cmpsl
aad
cmp
outsb
movzwl
test
cmp
pop
orb
lods
jbe
adc
pop
or
fs
test
sarl
and
lds
jecxz
out
add
rcrl
incl
dec
and
push
sub
pop
xchg
xor
mov
adc
data16
int3
outsb
mov
ret
lds
mov
and
jb
cli
dec
push
popa
sarb
pop
and
pushl
xchg
push
mov
test
dec
mov
inc
pop
in
inc
pop
and
inc
pop
in
cmpsl
sub
test
xchg
pop
xchg
idivl
mov
pushf
arpl
jmp
dec
in
add
ja
and
sbb
fbld
aas
movsb
aaa
stos
aad
push
in
push
push
fcmovu
fdiv
mov
dec
push
int3
outsb
sbb
out
sbb
adc
cmp
push
cmc
push
ds
outsb
pop
ds
adc
inc
add
mov
mov
xchg
imul
sub
shll
addr16
es
rclb
cs
loopne
mov
out
loop
inc
push
adc
or
scas
mov
ret
fdivs
pop
xlat
sub
int3
xchg
enter
in
mov
roll
std
ffree
out
dec
sbb
and
mov
xor
insb
js
sahf
pop
leave
pop
push
pop
rcl
roll
or
dec
popf
add
inc
aas
fs
das
or
pushl
imul
dec
es
bound
andl
mov
aad
jae
cmc
adc
rorl
push
sub
lahf
xor
dec
sahf
std
orl
in
mov
js
add
mov
xchg
dec
loop
mov
inc
rcl
jno
dec
adc
and
fsubrs
cmovo
aam
lahf
mov
cld
push
leave
pop
aam
cmp
test
subl
xchg
dec
sub
inc
pop
sub
jg
cmc
sbb
jmp
test
pusha
push
pushf
call
xchg
fcmovnbe
lock
fwait
std
popf
sub
adc
jp
jb
adc
mov
mov
sbb
push
cmp
pop
add
lds
sbb
xor
lret
sub
adc
mov
scas
inc
adc
aam
je
out
cmp
jb
into
aam
cmp
add
sbb
outsb
mov
adc
inc
cli
fdivs
shll
lock
nop
inc
rorb
lret
xchg
pop
jmp
sub
inc
mov
pop
fcoms
cld
mov
into
cltd
roll
adc
or
idiv
lret
pop
leave
mov
scas
lcall
inc
inc
jp
sbbl
or
repz
fmull
arpl
sub
ret
jbe
imul
adc
pushf
mov
mulb
fs
sub
or
jg
sbb
xlat
lret
cld
mov
sbb
rcr
cmp
jmp
push
dec
jb
fsubrs
imull
fld
and
sarb
lret
jmp
mov
mov
in
cmp
rclb
adc
sub
push
add
es
pusha
jno
or
mov
icebp
sub
imul
je
xor
mov
je
push
push
dec
arpl
xchg
mov
xchg
inc
daa
cs
jno
add
pusha
or
jp
mov
mov
nop
mov
jmp
not
cmp
std
ss
idivb
or
pop
mov
filds
mov
xchg
in
iret
mov
cmp
fs
sbb
fsubs
adc
sub
scas
jnp
les
movsb
inc
dec
addr16
push
test
jns
mov
xchg
jne
pop
push
fildl
stc
cmpl
mov
push
dec
lods
add
das
mov
dec
mov
add
jns
sbb
and
jl
jae
cmp
sahf
ret
dec
sbb
or
fs
movsl
xchg
mov
imul
pop
clc
push
jno
cli
jmp
and
in
mov
hlt
cs
xchg
ss
sub
push
mov
xor
push
jg
jo
and
mov
test
andb
push
lret
outsl
and
mov
sub
cmp
mov
adc
clc
add
adc
ss
pop
outsl
popa
xor
int
std
lret
inc
xlat
ss
mov
call
xchg
aas
out
and
popf
adc
pop
dec
outsl
lods
cmpl
cmp
mov
pop
loop
ret
out
sub
add
cmp
mov
ss
fisubrs
fnstenv
cmp
es
dec
sub
pushf
lods
add
xor
sarb
xlat
inc
inc
adc
mov
xor
mov
mov
addl
call
in
mov
mov
xchg
xchg
jecxz
out
xchg
xor
jne
test
xor
and
loope,pt
fst
mov
lret
and
add
outsl
js
mov
out
fcmovnbe
or
mov
lea
dec
pusha
imul
sub
adc
icebp
mulb
clc
aas
sarl
das
fists
xchg
push
xor
enter
mov
out
cmp
mulb
icebp
or
in
push
mov
popa
or
cs
and
int3
loop
psubusw
dec
jl
ret
pop
pop
es
in
out
fucomp
fucomp
cmp
aaa
xchg
les
mov
imul
or
loope
rclb
ret
push
aaa
idivb
into
jmp
and
cmpsl
push
cli
mov
mov
test
divl
xchg
inc
cmp
adc
es
xchg
lds
jmp
scas
or
notb
adc
mov
lea
mov
sub
popf
jns
enter
nop
cmp
sbb
cmc
push
mov
daa
push
mov
xor
sahf
xor
out
push
add
push
fwait
bound
sub
aas
xchg
add
cs
int3
dec
cltd
mov
mov
push
imul
hlt
lods
cmc
pop
mov
add
jge
dec
ja
adc
jae
out
into
call
test
repnz
js
push
cmp
fisttpl
ljmp
aad
repnz
jb
mov
pop
in
sbb
sub
push
out
sbb
or
and
sbb
sub
inc
imul
mov
lea
mov
das
aam
jb
fiaddl
cmp
dec
xor
adc
xor
testl
pushf
fildll
dec
cmp
ret
lods
push
iret
sub
push
std
dec
mov
xor
test
mov
sbb
push
jae
and
ljmp
test
test
aad
pop
cmc
add
dec
cmp
cltd
adc
mov
xor
dec
mov
xchg
xlat
pop
adc
outsl
adc
sub
aas
xor
adc
clc
inc
ret
and
mov
test
test
in
pushf
cs
push
adc
in
cmovae
or
arpl
out
or
pop
loopne
dec
stos
fidivrl
les
xchg
popa
sarb
outsb
pop
out
ror
adcl
repz
jno
xor
inc
mov
pushl
push
enter
pop
in
cmc
and
pop
xchg
das
addb
aas
aam
xlat
aaa
dec
lea
data16
push
mov
fstps
subl
sbb
adcb
jnp
inc
mov
or
mov
dec
and
xchg
in
jmp
dec
shl
pop
push
sbb
or
adc
addb
dec
outsl
push
ja
call
shrb
add
or
and
adc
cmpsl
push
cmp
push
inc
fisttpl
sub
inc
inc
push
push
leave
sub
lds
inc
aas
and
negb
fs
sub
shl
sbb
push
add
sub
daa
mov
xchg
nop
push
dec
push
mov
sbb
jns
lret
and
fldenv
iret
mov
xchg
pop
cltd
add
jge
es
push
ljmp
mov
push
mov
stc
fucomp
jno
adc
es
mov
ds
ret
lods
inc
xlat
sbb
aad
cmp
stos
jnp
mov
loopne
aad
aam
mov
cmpsb
mov
flds
push
adc
ds
push
and
xor
push
pop
mov
cmp
leave
add
cmpsb
sub
sub
testl
insb
or
mov
inc
push
enter
mov
inc
jg
inc
mov
insb
jle
imul
loopne
jle
nop
ret
cli
mov
pop
ret
mov
jb
ja
mov
add
lret
mov
or
les
pop
sbb
cld
push
push
sbb
xchg
int3
xor
mov
jp
mov
pusha
stos
rol
push
xchg
and
jne
gs
enter
ret
cmp
ficoml
cmp
cmp
mov
leave
das
rcr
cmpsl
sbb
cli
insb
scas
stos
adc
fidivrs
xchg
data16
dec
mov
cmp
pop
fbstp
pop
repnz
rorl
into
add
dec
in
into
add
movl
out
mov
iret
ret
pop
imul
ljmp
jp
imul
and
out
aam
xor
rolb
xchg
mov
ret
jb
add
mov
out
mov
sub
cmp
inc
and
pop
int3
xchg
scas
adc
fisttps
stos
incl
cmp
jbe
add
clc
shrl
mov
mov
or
adc
xchg
daa
pop
or
xor
inc
cld
xchg
xor
inc
inc
test
lcall
xor
and
incb
xchg
leave
addr16
cmp
inc
mov
dec
js
dec
sub
popa
xchg
sti
icebp
mov
push
in
jno
jb
xlat
pop
xor
adc
pop
mov
jns
xchg
idivl
or
add
into
jge
cwtl
stc
in
dec
or
and
mov
pop
jbe
add
xor
aam
xchg
mov
inc
fldcw
jge
loope
sbb
adc
bound
xor
mov
add
pop
rol
test
xor
push
sbb
cli
push
lods
rol
arpl
shll
mov
xor
pushl
adc
andl
das
jle
ja
pop
pop
test
hlt
mov
push
popf
pop
je
xlat
or
insb
push
arpl
sbb
add
mov
jno
lcall
sub
andb
das
and
push
xchg
push
insl
sbb
cld
cmp
push
sti
add
sub
inc
icebp
jae
in
xchg
into
test
dec
repz
pop
rcrb
mov
xchg
push
jo
test
dec
sbb
mov
dec
into
xchg
cld
pop
outsl
test
pop
into
pop
mov
cmpsl
sbb
gs
xchg
push
pop
pop
inc
xchg
and
insl
fldenv
inc
sub
push
xor
mov
cmp
pop
sbb
add
push
and
dec
mov
jb
push
sti
mov
adcl
sbb
pop
dec
push
rorl
mov
and
xchg
enter
adc
sbb
pop
jecxz
stc
popa
shlb
rorb
icebp
pop
imul
pop
xor
arpl
xlat
fists
data16
mov
fstpt
shll
add
stc
mov
cltd
or
mov
jnp
lahf
and
adc
dec
divb
fildll
inc
sbb
rolb
inc
shr
scas
jmp
mov
xor
cmpsb
cli
cmc
and
icebp
mov
inc
std
push
push
push
aas
push
mov
mov
jnp
mov
push
imul
mov
lret
xor
xor
test
dec
ljmp
leave
clc
fstps
mov
addb
popa
jecxz
cld
mov
rcrl
mov
adc
push
xor
push
xchg
ljmp
inc
jae
test
sub
and
cwtl
push
cmpsl
jb
cwtl
xchg
cmpb
jno
mov
mov
add
mov
xchg
ficomps
mov
xchg
jg
test
outsb
dec
repnz
cmp
mov
in
pushl
jl
inc
lret
js
dec
insb
int
xor
and
lret
mov
pop
ljmp
inc
ds
sbb
into
fwait
jne
xchg
sub
push
cmp
scas
loope
cmpsb
ljmp
cmc
mov
lret
jmp
arpl
sbb
int3
xchg
adc
mov
sbb
data16
aad
dec
jl
lcall
push
fnsave
xchg
mov
aam
xchg
push
pop
xor
dec
adc
fcomps
mov
jno
push
push
cmpsb
outsl
leave
and
dec
decb
clc
mov
jle
sub
in
fiadds
fists
mov
pusha
sti
fnsave
adc
fdivrs
add
dec
pop
sarl
adc
movsl
cltd
mov
mov
das
test
sbb
scas
and
movsl
andb
sbb
es
xchg
dec
inc
out
jo,pt
sbb
sub
sub
arpl
mov
inc
daa
xor
adc
xchg
xchg
inc
jg
js
adc
cmpsl
fidivrl
imul
je
data16
int
stos
rolb
mov
xor
mov
inc
mov
dec
dec
jp
nop
test
nop
lret
dec
mov
pop
nop
aaa
dec
scas
in
mov
mov
mov
pop
add
mov
jge
cltd
insl
cli
sub
enter
and
push
bound
xor
lods
dec
cmc
push
push
cmp
xchg
push
sar
es
call
orb
mov
push
sbb
rcrl
sub
dec
shlb
incb
cmp
scas
sbb
insl
add
xchg
test
pop
mov
fsubrs
xor
xlat
mov
int
mov
adc
mov
cmp
jne
shr
jae
push
cmp
pop
mov
push
repz
in
test
lods
push
testl
shll
jae
ret
pop
or
push
adc
lea
add
or
jp
jns
inc
lret
push
mov
fiaddl
adcb
js
push
call
mov
xchg
and
mov
neg
insb
arpl
xchg
dec
ja
mov
movsb
pop
dec
pop
data16
xchg
mov
stc
test
sub
sub
mov
pop
clc
xor
es
cmp
add
or
daa
test
mov
movsb
lods
das
and
push
cmp
or
inc
inc
repnz
or
pusha
insl
nop
mov
aas
and
in
scas
inc
xor
mov
add
fs
or
xor
test
xchg
bound
movsb
xor
aaa
enter
imul
cmpb
ret
hlt
add
lea
iret
xor
dec
cmp
les
call
sub
addb
sti
mov
cmc
xchg
push
and
inc
fimuls
mov
cli
push
or
xor
roll
dec
sbb
mov
call
xchg
test
jbe
mov
push
dec
inc
inc
mov
dec
push
pop
and
outsl
sahf
out
push
rolb
push
nop
sti
lock
sbb
sar
push
pop
loopne
mov
shr
pop
cmpl
xchg
xchg
add
lds
xchg
mov
adc
into
testb
iret
pop
sub
aaa
adc
into
sbb
scas
cltd
pop
lret
jmp
cld
adc
cmpb
xchg
push
pop
mov
push
push
jns
jns
adc
inc
mov
movb
push
jo
cmp
xchg
or
inc
push
repnz
seta
ss
lods
xchg
push
daa
inc
mov
movsb
js
ds
outsl
jae
sbb
aam
sub
xor
mov
adc
push
scas
loop
jmp
negb
mov
fcoml
adc
mov
xorb
xchg
cmpsl
push
pop
stos
adc
enter
push
aas
add
je
add
mov
cmp
outsb
mov
sub
ret
ljmp
add
push
rorl
shlb
rcr
fldt
xor
fwait
outsl
outsb
movsb
jl
mov
cmp
outsb
inc
in
adc
jbe
in
imul
mov
pop
ds
add
test
mov
dec
xchg
iret
fimull
scas
sbb
mov
cmp
sub
jnp
std
xchg
or
add
sti
imulb
fsubrs
and
and
xlat
arpl
xor
dec
adc
js
pop
outsl
roll
xchg
jb
insl
cmp
lods
jle
ljmp
inc
les
mov
push
fstcw
repnz
stc
and
repz
addb
cmp
jg
pop
add
test
sarl
mov
push
into
scas
fwait
lret
out
mov
sub
sti
mov
push
out
aam
mov
call
pop
lahf
sbb
pop
inc
mov
pop
iret
xchg
xor
mov
jle
pop
or
push
gs
cmc
jg
test
mov
dec
jmp
ficomps
xor
lret
lock
popa
cmovb
adc
leave
std
pop
cmovge
js
mov
stos
inc
fisubrs
adc
js
cmpsl
push
loop
xor
push
xchg
loope
cmp
movb
int3
jb
pop
dec
imul
shrl
jg
test
cs
xchg
idivl
xchg
in
lahf
lock
mov
movsb
and
jg
xor
lock
repnz
popf
jo
mov
mov
xchg
shl
test
sbb
aad
popf
mov
mov
fldl
mov
xchg
cmp
pop
dec
int
das
xchg
jecxz
mov
sbb
and
out
mov
call
aam
xchg
fcoml
mov
mov
aaa
jbe
in
add
stos
mov
dec
cmp
jg
mov
dec
ret
mov
call
scas
sub
or
icebp
dec
clc
add
rcll
pop
out
in
mov
cmp
pushf
loopne
mov
cs
lea
pop
xor
mov
cmc
repz
into
xchg
xor
xor
push
mov
cmp
daa
inc
sbb
jb
popa
cmp
dec
out
out
inc
cmp
cmp
sbb
bound
push
aad
in
mov
cltd
mov
adc
out
or
sbb
test
jo
dec
pushf
enter
cmpsl
mov
and
sahf
fs
add
and
cmp
lea
or
cmp
inc
pop
and
out
jge
outsb
jle
addr16
push
fiaddl
mov
sbb
and
cmc
cmp
nop
sbb
popl
add
mov
mov
icebp
mov
mov
or
inc
cmp
add
dec
sbb
mov
push
dec
lret
mov
mov
adc
fnsave
mov
pop
inc
shrl
add
out
std
dec
lock
stos
cli
jae
lock
xchg
push
dec
xor
pop
test
sub
fldt
fdiv
test
mov
mov
mov
stc
xchg
cmpsl
mov
ret
fdivs
not
ror
bndstx
std
xchg
cmp
jge
xlat
or
pop
fcomi
inc
mov
adc
das
dec
pushf
cld
mov
pop
inc
adc
insl
fldenv
mov
pop
das
mov
dec
cmp
std
adc
or
jnp
xor
mov
addr16
push
xor
or
mov
addr16
std
repnz
push
aaa
ret
leave
xchg
mov
shlb
add
inc
popf
mov
pop
test
pushf
mov
jmp
inc
iret
repz
dec
fisubrs
test
mov
rcrb
jmp
mov
inc
fistpll
shrl
imul
lcall
and
test
scas
lcall
sarl
jne
push
mov
mov
dec
aam
in
mov
js
sub
fs
mov
mov
notl
fbstp
in
xchg
divb
in
shlb
sbb
fbstp
xchg
lods
fwait
cmp
sbb
out
movsb
dec
push
sahf
aas
scas
jl
adc
sub
jg
or
xlat
pop
mov
jns
mov
lds
jmp
fsubs
and
fistl
movsb
sub
xchg
bound
rorb
movsb
add
incl
inc
pop
or
ja
pop
inc
out
shlb
fucom
push
aaa
addb
shrl
pop
sahf
out
imulb
mov
fcmovb
hlt
bound
push
stos
mov
mov
mov
in
add
or
adc
mov
mov
pop
outsl
clc
hlt
xor
test
cmp
adc
mov
test
ljmp
sbb
sbb
and
lods
xor
mov
cmpsl
cmp
cs
aad
and
dec
and
cmp
mov
jmp
mov
sub
add
sub
movsb
sbb
ds
gs
mov
fsubrs
cmp
inc
and
or
enter
jne
mov
cwtl
ficompl
dec
mov
and
pop
mov
mov
inc
sbb
mov
lcall
rcr
cmpsb
mov
adc
mov
rorl
lret
xor
bnd
xchg
mov
leave
pushf
mov
adc
pop
dec
icebp
sbb
adc
fidivrl
outsb
xor
xor
push
push
add
fxch
pop
lock
int
repz
inc
pop
jae
repz
add
mov
jno
dec
dec
andb
repnz
ret
js
inc
xchg
out
shl
int3
cmp
lods
mov
jae
mov
test
or
xchg
hlt
xor
stos
fistps
dec
lcall
pusha
out
nop
jmp
mov
in
mov
shlb
inc
mov
mov
and
xchg
std
imul
sub
xlat
jo
pop
lea
stc
out
add
inc
lcall
stc
aas
fmuls
push
dec
adc
mov
add
xor
mov
es
push
imul
les
add
imul
out
inc
sbbb
sub
lock
loop
cmp
jno
stos
sbb
or
dec
jge
xor
xchg
cs
nop
jmp
cmpsl
inc
adcb
out
fdiv
add
into
inc
out
cld
lea
xor
adc
pop
popa
dec
adc
inc
pop
int
or
test
arpl
popf
cmc
mov
cmp
scas
push
adc
out
pop
and
cmpsb
jecxz
notl
pop
ja
cmpsb
idivb
add
fcomp
inc
jae
sti
lods
fs
sub
or
outsl
outsb
jecxz
sub
pushf
ffree
cld
and
popa
cmc
decb
test
fcompl
jnp
push
xchg
mov
loope
gs
negb
outsb
mov
sub
push
and
sub
jb
mov
cld
test
mov
add
add
mov
std
and
insb
and
out
adc
xor
xchg
sbbb
pop
iret
xchg
out
mov
or
sbb
mov
dec
push
ret
mov
lds
xor
jmp
pop
xor
arpl
bound
or
sti
adc
sub
or
test
cmp
push
mov
push
hlt
icebp
and
daa
clc
or
dec
mov
jle
les
shl
in
das
add
test
mov
outsl
enter
rorb
xchg
and
repz
fmull
les
imul
xchg
mov
xchg
cmp
lahf
dec
add
mov
xchg
xor
outsl
or
lret
scas
cwtl
xor
xor
jl
out
test
pop
dec
aam
out
mov
push
push
jae
aas
add
mov
pop
jp
jle
shll
sbb
dec
inc
mov
std
sti
jg
test
shrl
shlb
xchg
mov
in
mov
xchg
push
ds
lahf
xor
push
insb
add
sbb
push
insb
sbb
in
and
mov
icebp
loop
shrb
jp
push
mov
incb
pop
cld
jo
enter
push
mov
pop
adcl
jo
mov
sub
mov
push
xchg
loopne
cmp
jl
adc
jp
or
adc
mov
iret
repz
ja
lret
mov
loop
dec
mov
lock
shlb
insl
insb
pop
push
push
rorb
aaa
clc
in
fistl
push
jno
adc
add
mov
dec
cwtl
les
inc
xor
xor
outsl
jne
mov
cld
mov
mov
out
stos
fists
fs
add
or
add
js
leave
cmc
dec
das
and
and
push
sub
sub
pop
das
shlb
shrb
or
test
or
mov
push
fisttpl
inc
cltd
sbb
fildll
mov
sub
mov
in
push
and
sti
adc
and
dec
xchg
sbb
and
jl
add
popf
cltd
dec
imul
pop
std
xchg
sbb
movl
lds
imull
xchg
sahf
movsb
dec
pop
popa
mov
jmp
int
xchg
mov
shlb
xchg
in
bnd
icebp
dec
int
lret
xorb
pop
xor
adc
inc
or
hlt
gs
jo
cmc
mov
jmp
loop
cs
es
mov
cld
pop
jge
mov
and
dec
roll
loopne
lret
xor
out
ds
in
add
jg
cmpsb
adc
in
cs
sub
inc
filds
xchg
mov
push
mov
jge
jb
dec
int
aad
rorl
and
push
pusha
xchg
mov
rclb
add
pop
and
jl
xor
xor
cld
pop
fidivs
repz
push
jb
inc
dec
xchg
xor
js
xorb
int3
lds
icebp
fisttpll
mov
js
in
loopne
sbb
shrl
lea
test
iret
adc
pop
sub
mov
aaa
movsl
xchg
call
fs
xchg
std
sbb
xor
push
sub
sbb
mov
jb
scas
negl
div
jns
adc
ds
mov
sub
add
stos
arpl
jg
lock
mov
and
adc
dec
dec
sbbl
xchg
scas
outsb
jb
fs
outsl
cmp
or
xlat
dec
sbbl
out
or
movsb
test
fwait
xchg
cmp
mov
scas
inc
nop
mov
je
adc
mov
shrb
repz
cltd
cld
pop
dec
sbbl
js
jl
or
dec
cvtpi2ps
pop
pop
xchg
add
mov
and
insb
sub
data16
jae
mov
fwait
lret
adc
addl
dec
mov
mov
movsb
mov
sub
mov
pop
sub
dec
les
jg
add
or
xchg
jo
jbe
daa
ds
jno
adc
jp
jmp
mov
push
pop
jecxz
jecxz
add
dec
inc
ficoms
pushf
faddl
mov
mov
cli
jecxz
jecxz
cmp
stc
dec
mov
dec
pop
jnp
mov
addl
fadds
movsl
push
jae
jns
lahf
loope
cmp
shrb
sbbl
int
inc
hlt
cmp
aad
push
mov
mov
andb
sub
xchg
loop
mov
jge
icebp
in
mov
pop
or
add
pop
sub
cltd
in
xchg
lock
inc
test
xor
push
jmp
cltd
cmc
pop
lods
adc
lret
push
add
fldl2e
aaa
pop
arpl
dec
xlat
mov
lahf
xor
mov
scas
add
andl
xor
xor
aad
cmp
ljmp
push
repz
pop
sub
repz
clc
push
call
out
or
pop
addr16
imul
hlt
movsb
pop
jb
mov
jmp
mov
in
push
cmp
jle
aas
xchg
lret
mov
push
js
scas
lock
lods
lds
mov
out
cmp
dec
inc
imul
rcr
sahf
repz
push
sbb
cmp
push
imul
mov
inc
gs
and
cmp
cmc
sbb
and
call
or
loop
stos
aas
and
inc
subl
push
ljmp
push
dec
jno
jae
push
mov
lret
push
repz
icebp
cmp
cmpsl
out
hlt
add
push
cmc
loope
adc
ja
cmp
xor
icebp
and
js
jmp
loope
addr16
incb
and
xchg
adc
pop
ljmp
mov
mov
sbb
sbbl
ss
or
pop
xor
mov
int
mov
daa
adc
dec
bnd
fs
loope
cmp
andl
mov
jg
iret
lods
lock
out
and
sbb
lea
and
lea
mov
sahf
xchg
mov
dec
cmp
cmpsl
mov
jb
mov
into
inc
push
loop
es
ret
inc
in
push
push
mov
rclb
push
inc
fcmovbe
out
mov
inc
adc
xchg
bound
lea
data16
or
lock
add
adc
clc
out
ss
push
mov
std
inc
insb
dec
lods
mov
lcall
dec
leave
push
mov
fnstcw
fisubrl
nop
push
test
mov
jle
and
sub
idivb
loope
sbb
ljmp
dec
mov
sbb
mov
xchg
sbb
outsb
and
inc
adc
sti
push
pop
lds
inc
fldl
les
pusha
and
xor
int
sbb
push
out
out
and
orb
sub
lock
adc
cltd
or
xor
call
iret
add
stos
jnp
pop
xchg
clc
xor
out
sub
scas
daa
mov
lods
mov
cmp
arpl
sbb
loope
clc
cli
enter
in
cmp
test
nop
popf
in
ss
out
sbb
dec
popf
xor
mov
jg
pop
mov
adc
xor
cltd
and
lea
xor
or
xchg
jp
ret
push
and
fildl
add
xor
leave
jns
adc
and
loop
testl
adc
es
sub
pushf
jne
dec
data16
adc
add
xchg
inc
test
mov
jne
mov
pop
mov
jp
js
mov
dec
add
add
mov
sbb
enter
mov
dec
popf
mov
xchg
mov
cmc
dec
mov
jns
cmp
adc
popf
mov
push
mov
leave
push
mov
pop
movl
mov
test
cli
xchg
test
jmp
adc
xor
add
cmp
or
xchg
imul
jmp
mov
push
dec
pop
adc
xor
lods
test
xchg
aas
push
movsb
lret
out
mov
clc
sub
data16
jle
ret
push
push
pop
mov
fiaddl
xchg
and
or
push
push
push
testb
loop
jecxz
je
lret
inc
adc
push
cmpsb
jne
sarb
insb
lret
shrb
push
cmp
push
inc
push
sub
and
je
mov
mov
and
pop
outsb
xchg
jnp
fisttpll
xor
cmpsb
hlt
mov
das
jecxz
xlat
pop
rorl
dec
xchg
mov
jne
in
and
roll
mov
fcoml
dec
gs
pop
bound
cmp
aaa
out
add
scas
data16
mov
mov
xor
add
cld
repnz
jno
aad
and
dec
mov
stos
sub
pushf
inc
out
cli
in
mov
shll
scas
clc
lock
mov
sub
jno
pop
push
movsb
movsl
movsl
or
dec
fisubrl
push
mov
repnz
in
int
daa
cmpsb
rolb
mov
pop
jne
push
leave
je
test
dec
adc
gs
jl
mov
pop
decl
add
rorl
sub
push
mov
adc
mov
pop
orl
xchg
fldenv
xor
fst
or
xchg
mov
adc
adc
cmp
movsb
in
popf
xchg
xor
sahf
add
call
fdivr
cmpsl
mov
in
cli
pop
mov
xchg
outsl
pushf
add
stc
ja
ja
and
mov
and
jne
fwait
xor
inc
lcall
std
adc
sub
ljmp
pop
js
push
inc
jae
test
lcall
data16
sub
and
fsts
pop
and
out
lret
inc
lds
sbb
pop
push
mov
loop
stos
in
jo
sub
jg
iret
push
fcmovu
repnz
push
notb
ds
inc
daa
xchg
lds
pop
lret
sbb
mov
fisubrs
mov
fucomi
xor
push
leave
fnsave
jnp
xchg
inc
vandps
jne
sbb
sub
in
daa
mov
incl
jnp
stos
xorb
adc
add
bound
pop
xchg
jns
lahf
push
pusha
outsl
call
xchg
adc
ds
loop
jecxz
mov
inc
test
jb
xchg
or
and
sbb
orb
dec
and
imul
or
xchg
mov
ficomps
xor
in
xchg
sub
pop
lcall
pusha
inc
inc
icebp
enter
xor
jmp
xchg
test
jb
mov
sbb
sub
pop
cmp
adc
stos
xor
pop
sub
xlat
jo
inc
adc
sub
or
xor
lret
hlt
or
andb
insl
shll
mov
lret
jge
push
data16
rcll
cmp
stos
aas
jbe
and
jno
jbe
mov
movsl
jnp
int
arpl
je
inc
fstps
subb
cld
sbbb
cmp
in
enter
hlt
sbb
push
jl
les
js
data16
stos
dec
je
and
jnp
mov
mov
cmp
inc
cmp
icebp
repz
xor
ret
inc
pop
stc
sarl
pop
cwtl
mov
mov
mov
mov
lods
mov
sbb
push
push
iret
xor
and
push
pop
dec
push
loopne
push
pop
lret
leave
out
pop
cmp
add
jae
sbb
imul
or
and
cltd
out
jbe
in
sub
mov
cltd
out
add
or
test
or
addr16
loop
dec
push
test
nop
mov
in
cmp
cli
inc
mov
leave
mov
clc
leave
jnp
sahf
or
or
push
add
dec
adc
and
out
or
bound
mov
repz
bound
sbbl
push
mov
cld
shl
mov
andl
push
mov
dec
sub
cwtl
aam
cwtl
or
pop
pop
icebp
mov
mov
lahf
push
ds
push
inc
les
xchg
loope
fisubl
out
popa
js
scas
pop
fwait
sub
loope
outsb
xor
notb
push
dec
in
mov
sbb
movsb
adc
fs
xor
nop
inc
sub
push
nop
pop
js
mov
fiadds
call
loope
popf
aas
hlt
sarl
popf
push
jns
std
jl
repz
xchg
std
sub
fwait
loop
clc
aaa
cmp
inc
mov
sbb
sub
xor
cli
adc
xchg
scas
bound
stc
inc
inc
mov
adc
leave
add
lcall
aas
xor
sub
inc
fdivs
push
aas
jo
nop
add
fisubs
iret
mov
adc
mov
ja
xor
jp
scas
je
pop
mov
clc
sub
imul
repz
cli
paddb
es
iret
pop
mov
mov
add
test
add
popf
ja
test
lahf
test
test
test
dec
or
mov
mov
das
fld1
in
inc
fs
inc
or
lret
xchg
pushf
enter
loop
add
in
push
adc
mov
outsl
jecxz
adc
pop
cmpsb
mov
sub
fdivl
ret
push
cmp
pushf
sub
cwtl
mov
call
xor
pop
push
sub
fwait
xchg
push
adc
int
loope
or
dec
mov
mov
add
add
iret
dec
popl
cmpsl
insb
daa
repz
inc
popf
mov
mov
aad
sbb
lcall
in
fwait
add
iret
addb
xor
in
imulb
adc
data16
pop
ja
jmp
add
stc
cmp
xor
add
sarb
outsl
fwait
imul
in
fs
mov
xchg
in
pusha
mov
aas
lods
and
xchg
xor
mov
jae
ret
sub
jnp
in
das
int
aaa
test
repz
mov
je
pusha
sbb
mov
lret
inc
ja
mov
sbb
mov
mov
addr16
pop
je
pop
insl
lea
pop
imul
sub
sub
cmp
mov
inc
mov
mov
jmp
push
or
mov
sbb
outsb
mov
jle
jnp
xchg
nop
cmp
rcr
subl
mov
out
imul
pop
jo
cmpb
pusha
gs
loope
mov
rcrb
jecxz
std
or
push
insb
andb
inc
pusha
inc
addr16
stos
lret
mov
and
adc
and
bound
sub
inc
or
icebp
mov
mov
inc
cmp
lcall
jb
pop
ja
aad
mov
out
outsb
ljmp
dec
sahf
or
sub
adc
sub
arpl
and
xor
outsl
dec
repnz
fcompl
pop
rcrb
push
movsl
xlat
in
cmp
mov
lods
dec
gs
lcall
pop
mov
mov
lds
scas
loope
push
and
sbb
test
push
gs
jp
pop
cmpsl
adc
jle
mov
and
lret
xchg
mov
mov
stos
fcoms
cltd
sub
popf
jnp
sbb
in
xchg
pop
out
or
mov
clc
insl
or
sbb
lods
cmp
std
clc
xchg
sti
push
fildll
push
lds
pop
push
arpl
fs
ret
jno
cs
aad
aaa
dec
sbb
xor
jne
je
jno
jg
iret
cmc
sahf
clc
inc
shll
push
fsubp
and
mov
mov
push
or
cmp
pop
xchg
lret
sub
pop
std
stc
push
mov
scas
mov
push
sar
mov
arpl
or
psllw
fdivrs
mov
test
mov
loopne
lcall
out
push
sub
gs
sbb
or
mov
in
pop
aam
push
pop
push
lcall
subl
repnz
cmp
dec
add
fsts
mov
dec
sarb
ja
rol
cmc
popf
shrb
push
or
push
push
aaa
enter
filds
sub
dec
jmp
call
ror
insl
sub
fldcw
mov
iret
fsubrs
inc
arpl
leave
sbb
jge
pop
stc
lret
and
pop
adc
shlb
jae
ljmp
test
xchg
xor
adc
icebp
push
sub
mov
add
xchg
ret
mov
mov
mov
movsb
outsl
mov
arpl
cmp
add
aas
jne
pop
pmuludq
or
inc
inc
incl
int
xchg
and
stc
sbb
outsb
out
adc
xchg
mov
orb
xor
pop
arpl
lret
or
inc
jle
jno
lods
mov
push
push
out
sbb
addb
aas
icebp
push
cld
sarb
xor
subl
xor
cmp
lods
mov
call
add
xchg
fisttps
dec
enter
cmp
push
mov
je
sub
cmp
mov
inc
les
sub
mov
push
push
lods
iret
icebp
mov
cmpsb
adcl
cmp
add
push
inc
mov
ficoml
jl
shll
scas
test
cmp
aad
nop
loop
sub
ljmp
js
scas
popa
push
out
pop
jnp
fsub
add
xor
mov
andl
push
imul
mov
jl
out
mov
pop
xlat
and
mov
out
xchg
orl
loopne
rcll
lsl
dec
leave
iret
push
mov
mov
adc
sbb
int3
popf
mov
dec
mov
lret
sbb
cwtl
xchg
inc
add
xor
lahf
cmp
jg
pop
xor
bound
push
xor
ljmp
cmp
leave
push
rcrl
push
add
pusha
cli
into
out
adc
stos
iret
in
insb
mov
adc
dec
pop
inc
lock
hlt
stc
sbb
ret
repz
incl
push
sub
int3
dec
cmpsb
cmpsb
mov
pusha
or
cmpsl
scas
sub
sbb
hlt
dec
or
and
jl
jns
dec
hlt
inc
xchg
mov
dec
xchg
testl
rolb
sub
cltd
mov
subb
sar
xchg
int
lock
out
jne
or
mov
inc
adc
mov
mov
fsubs
ss
scas
pop
push
popf
cmp
mov
xchg
out
dec
shrl
stos
xchg
adc
js
movsb
std
insl
sahf
outsb
mov
dec
fwait
rorb
andl
dec
xchg
add
fiaddl
pop
data16
fcompl
test
das
stos
dec
dec
outsl
inc
jge
insb
xor
fisubrs
sbb
sub
adc
sahf
inc
or
xchg
mov
push
adc
insb
xchg
pop
xchg
cmc
push
sub
inc
insb
test
test
popf
je
sub
aad
cmp
cmp
xchg
hlt
pop
mov
mov
xor
out
bnd
scas
mov
jmp
xchg
sub
lods
test
mov
or
es
dec
imul
rcl
pushf
repnz
lahf
jo
xchg
xor
cmc
lds
insb
loop
pop
jb
test
dec
fstpl
fs
outsb
sarl
fidivrs
xchg
cmp
test
ss
and
mov
imul
rorl
aam
mov
repz
cmp
cmp
jp
pop
xchg
dec
push
enter
sub
leave
jbe
fidivs
in
fcoms
push
inc
cmp
nop
push
imul
pushf
filds
hlt
lret
outsb
mov
xchg
aas
int
dec
cmpsb
mov
insb
add
mov
push
mov
or
stos
add
daa
clc
out
mov
lcallw
shrb
insb
mov
cmp
pop
cwtl
jmp
mov
pop
nop
cltd
adc
ret
push
sbb
clc
xchg
gs
pop
pop
loopne
sbbl
cmp
subb
mov
push
sub
lods
mov
cmp
insb
sub
add
or
rorb
lcall
mov
dec
and
sbb
or
inc
pushf
mov
repz
mov
fcoms
test
xchg
mov
inc
push
inc
dec
add
adc
cmpsl
outsl
test
add
push
leave
xchg
ds
pop
stc
jp
mov
ss
xor
frstor
test
cltd
pop
cmpsb
mov
sbbl
xor
fimuls
repz
and
xor
pop
imul
mov
cmp
ret
inc
sbb
rcrb
cmp
pop
cld
cltd
pop
insb
mov
xchg
adc
add
jmp
or
nop
xor
je
cmp
or
out
jno
repz
hlt
mov
or
adc
xchg
xchg
faddp
mov
push
je
cli
addr16
mov
divb
mov
popf
mov
lcall
insl
fmul
adc
push
mov
sub
mov
movb
aas
jb
shll
or
jne
pop
mov
rolb
test
cmpsb
xchg
jne
cld
sbb
nop
sahf
je
push
jecxz
sub
push
jns
in
inc
mov
fisubl
arpl
sbb
ss
orl
inc
rcr
xchg
idiv
add
outsb
ljmp
test
mov
out
sub
cld
ss
repnz
sub
int
dec
sub
push
popa
jle
jne
pop
stc
test
jmp
das
adc
fldcw
mov
adc
mov
rcrb
loope
mov
jge
filds
xor
jecxz
sbb
bound
les
test
daa
imul
sahf
push
inc
dec
into
mov
imul
hlt
lock
test
pop
lock
inc
push
andb
sub
in
stos
mul
in
cmpsb
mov
xor
sbb
cmpb
mov
xchg
dec
rolb
movsl
lods
mov
mov
int
sbb
mov
clc
sub
jmp
stos
ja
lods
pop
xchg
aaa
mov
adc
lock
push
inc
lret
imul
mov
inc
rolb
outsb
es
cmpsl
push
js
arpl
aad
into
mov
pusha
mov
inc
inc
shrl
ljmp
dec
clc
jb
ret
in
add
cmp
cmp
mov
int
cld
cli
push
mov
sbb
xor
lahf
sbb
jl
adc
jge
jbe
into
test
dec
cld
and
sub
in
je
loop
dec
ja
mov
loop
and
int3
cwtl
lcall
cs
sbb
xchg
movsl
pop
inc
faddl
jmp
loop
imul
cmpsl
adc
push
jae
cltd
std
push
subb
cmp
ss
add
xchg
fistl
insl
mov
add
fistpl
repnz
stos
loope
popa
lret
or
in
push
test
imul
inc
jge
icebp
idivb
push
bound
int3
jmp
adc
mov
push
pop
cmp
inc
nop
xor
and
insl
xorb
cmp
sub
mov
rcrl
gs
insl
scas
jae
lahf
pop
sub
cwtl
fsub
sbb
dec
sub
pusha
pop
test
loopew
mov
lock
out
mov
push
sub
xor
ficomps
ss
test
jmp
jbe
dec
push
fs
xchg
sub
popa
loop
aad
jns
push
daa
dec
fsubs
sub
in
sbb
sbb
call
aas
or
adc
xchg
lcall
lret
les
sub
les
mov
cs
loopne
jb
inc
pushf
sahf
cmp
out
or
mov
das
dec
push
in
scas
in
jp
inc
jno
addr16
sub
dec
dec
sbb
jmp
pop
pop
add
inc
sbb
pop
aaa
push
testb
mov
scas
or
xchg
jbe
scas
push
and
push
leave
in
sbb
stc
jg
cmp
mov
adc
cwtl
xor
sub
in
lods
int
xor
test
rcrl
dec
bound
xchg
inc
pop
inc
out
cwtl
shr
dec
inc
shlb
jp
adc
pop
in
call
mov
div
aaa
outsl
xchg
out
cltd
mov
outsb
sbb
iret
pop
fiaddl
lret
ljmp
mov
or
jg
mov
lds
inc
popf
mov
jne
loopne
pop
cmp
bound
js
ja
cmp
addb
mov
mov
adc
mov
cltd
cmp
and
pusha
stos
push
mov
dec
loope
mov
dec
fnstenv
cmp
cbtw
adc
push
mov
cmp
xor
push
xchg
aam
cs
push
xlat
movsb
dec
xor
mov
icebp
stc
test
int
cli
and
stos
rcrb
pop
jo
lock
cmp
arpl
mov
fdivl
xchg
and
sub
inc
jo
jnp
sbb
mov
nop
stos
xchg
lods
lea
pop
mov
insb
test
fimuls
mov
orl
pushf
cmp
sbb
cmpsb
in
jne
aas
movsl
dec
mov
hlt
in
push
in
inc
cld
icebp
fcomi
adc
mov
lods
ficoml
xor
mov
sti
into
ficoml
inc
in
jae
xchg
xlat
add
popf
cli
lock
push
pushf
cmc
push
in
xchg
add
mov
repnz
in
mov
pop
sbb
cmp
adc
dec
add
mov
pop
push
and
mov
dec
xorb
test
xchg
lret
scas
cmc
cwtl
pop
stos
jno
aad
inc
pop
cmc
lret
xchg
repz
push
lods
test
jl
mov
jl
iret
ret
aaa
sahf
stos
ljmp
dec
adc
inc
aaa
jne
and
dec
mov
cmp
cmc
inc
arpl
sub
jecxz
xor
out
xchg
pop
lahf
push
les
cmp
sbb
repnz
mov
das
bound
xchg
es
lds
inc
ss
pop
xor
int3
pop
sbb
pop
push
or
mov
test
imul
ret
hlt
or
dec
xchg
pop
add
lgs
xor
clc
leave
clc
push
mov
xchg
sbb
jo
xchg
scas
shl
aas
test
and
mov
add
push
xor
jg
pop
lahf
inc
mov
movsb
xor
cmp
lret
jmp
fimull
xlat
inc
iret
mov
mov
mov
aaa
loopne
adc
sahf
jo
push
out
cli
popf
fwait
sbb
lods
pushf
insl
in
jmp
sub
int3
ds
inc
mov
xchg
sbb
jnp
ficoml
push
jbe
xchg
push
out
fwait
dec
out
movb
aaa
mov
xlat
add
popf
ljmp
push
mov
cmpsl
repnz
mov
bound
cmp
push
int3
jp
je
push
data16
fdivp
fcomip
fimull
mov
dec
imul
outsb
mov
stos
insl
jno
mov
xor
sub
dec
test
shll
popa
aad
pop
and
xor
lret
addl
mov
sbb
inc
xchg
sti
shrl
iret
push
movsl
in
repnz
xor
jle
cli
roll
dec
aas
inc
adc
xchg
syscall
leave
push
pop
add
mov
mov
in
sbb
inc
xlat
movsb
push
loop
push
add
xor
dec
shrb
fstp
pop
les
or
mov
or
cltd
pop
lahf
sbb
inc
movsl
jne
jo
push
aad
pop
in
jo
mov
mov
jle
js
rorb
orb
je
xlat
loope
test
or
mov
int
jns
push
xor
mov
lcall
mov
push
aad
scas
dec
in
lods
enter
ret
test
dec
mov
loop
bound
cmpsl
out
es
or
sub
fidivl
and
int3
and
movsb
and
mov
pushf
cli
in
out
std
adc
cmp
dec
movsb
inc
cmc
xchg
stc
xchg
mov
decb
add
xchg
fisttps
jecxz
inc
and
aaa
js
stc
and
add
pop
xor
pop
stos
jno
enter
push
stc
movsl
mov
mov
testb
outsl
cwtl
mov
lret
cmp
loop
call
cmp
xlat
cli
test
mov
or
dec
and
jmp
loopne
pop
inc
repnz
sahf
nop
mov
mov
test
and
lcall
pusha
push
and
sti
jo
mov
ss
or
fwait
es
cmp
cmp
fisubrl
sbb
mov
leave
jl
push
stc
ss
pop
or
jbe
adc
sbbl
es
fists
imul
out
cmpl
inc
fsubs
stc
inc
sbb
pushw
sub
xor
and
and
out
sarb
dec
cmc
imul
clc
and
xor
pop
xchg
pop
inc
add
jns
lret
in
outsl
mov
rorl
int
xor
stos
lcall
nop
leave
js
bound
push
nop
cwtl
int
rcr
xor
sbb
sbb
fcoml
adc
pop
mov
imulb
aad
insl
dec
add
cltd
pop
xlat
pop
outsb
fdivs
and
xchg
std
mov
sub
add
fiadds
and
stc
dec
or
rorl
jo
and
xchg
push
xchg
jecxz
andl
inc
outsl
mov
xor
movsb
fisubrl
daa
or
mov
or
in
lock
adc
in
adc
mov
test
sbb
stc
lcall
jle
add
and
in
cmpsb
sbb
and
lahf
jbe
test
pusha
sbb
pop
int
bound
iret
mov
or
jecxz
enter
icebp
and
les
loop
flds
pop
sub
or
enter
xchg
test
dec
push
je
in
push
fisubs
adc
mov
popf
out
aam
jns
pushf
cltd
rcrb
mov
pop
out
fbstp
and
add
inc
jns
fldenv
push
clc
ja
sbb
push
andb
in
test
pushf
sub
jbe
and
jne
or
jns
xchg
sbb
cmpsb
mov
fidivl
pop
fistps
repnz
cmp
mov
adc
call
aad
loope
movl
loop
cmp
clc
mov
mov
insb
aaa
and
add
sub
iret
out
add
neg
stos
ficompl
iret
cmp
jg
add
pushf
insl
mov
jae
test
nop
jmp
ja
shll
movsb
outsl
pop
inc
and
shll
dec
dec
cmpb
push
mov
xor
mov
or
ret
push
dec
and
sub
mov
fildll
and
pop
subb
jbe
jmp
xor
sar
out
movsl
insl
fstpt
cmp
sti
sbb
pop
arpl
popf
addl
pop
jl
fldt
pushf
dec
inc
lret
sub
ljmp
pop
imul
or
jne
int3
movsb
in
sub
dec
or
inc
shrl
sbb
in
cmp
pop
lret
mov
dec
xchg
add
hlt
nop
out
and
jp
sti
rcl
mov
add
adc
scas
mov
adc
arpl
dec
push
jb
in
daa
imul
in
and
hlt
adc
inc
xchg
xor
cmp
jge
outsl
xchg
mov
mov
or
outsl
push
and
pop
popf
jne
and
fnstsw
inc
in
add
mov
mov
dec
jb
push
add
jmp
cltd
loopne
xchg
xchg
sbb
rcrl
enter
pop
sbb
adc
loope
test
dec
xlat
pop
mov
orl
and
iret
ret
adc
aad
lods
ljmp
xchg
or
ret
adcl
and
mov
cmp
and
lock
mov
inc
lods
aam
sbb
push
mov
cmp
mov
fildll
mov
xchg
xchg
ss
imul
stos
sub
jnp
add
or
or
hlt
pop
push
andb
loopne
mov
test
add
aam
jge
mov
push
xchg
and
ret
je
cmp
movsl
mov
or
jb
out
repnz
sub
movsl
js
sar
and
aaa
adc
inc
fisubs
inc
mov
mov
loope
inc
sub
push
sub
xchg
dec
jg
iret
and
std
lock
addr16
xchg
cmpl
rcrl
incb
mov
cltd
push
out
cli
movsl
jnp
cltd
pop
movsl
mov
int
mov
stc
xchg
bound
xchg
pushf
cwtl
fdivs
xchg
ss
xor
jmp
xor
iret
pusha
in
cs
sub
ss
mov
xchg
mov
repnz
pop
scas
add
or
push
insl
ret
mov
or
rcll
repz
pop
cmp
sbb
shrl
adc
xchg
lahf
sub
push
shlb
test
fstl
dec
decl
in
and
lds
mov
xlat
fs
movsb
imul
jno
pop
aas
mov
out
stc
scas
xor
xor
icebp
cmpsb
mov
int
push
icebp
scas
clc
jl
cmp
mov
int3
loop
loop
jle
and
mov
setne
mov
sti
popf
je
js
pop
inc
sub
add
cmpsl
mov
jl
ds
xor
dec
stos
mov
or
enter
lret
sub
decb
icebp
repnz
lock
call
in
sar
popf
and
cmpsl
xor
andl
sub
adc
loop
and
jle
pushf
dec
mov
lret
mov
mov
push
lret
lahf
mov
push
cltd
int
mov
sub
imul
ret
outsb
gs
push
xor
call
dec
in
dec
addr16
in
cmp
xor
mov
dec
mov
loop
add
cmpsb
sub
xchg
stos
insl
and
into
cltd
loop
int3
xor
mov
test
insb
cmpl
cmpsb
fs
je
push
jg
xchg
mov
and
add
xor
cltd
or
lds
sub
xchg
loop
push
ret
aaa
mov
mov
sbb
xor
or
push
cltd
mov
push
mov
add
arpl
xchg
inc
and
enter
clc
dec
push
and
dec
inc
xchg
cmp
mov
jnp
test
add
cmp
pop
jl
xchg
cmp
dec
xchg
sub
outsl
out
imul
test
dec
enter
mov
push
cmp
dec
jns
dec
imul
sti
jno,pt
movsb
and
jnp
adc
cltd
addr16
xlat
push
addl
aad
call
mov
sbb
dec
add
lds
mov
fidivrs
shl
or
dec
popa
fdivrs
jge
push
push
jecxz
mov
sahf
sbb
inc
jo
push
lods
pop
push
jl
gs
sbb
xor
jno
sbb
xor
lret
pop
call
jle
shrb
xchg
call
push
push
movsl
inc
xor
test
dec
ss
sub
imul
popa
out
nop
and
neg
roll
ljmp
lahf
and
clc
sub
cmp
fcoms
mov
in
adc
pushf
outsl
test
mov
pop
flds
inc
andl
xorb
push
hlt
in
loop
cld
ss
loopne
es
add
sbb
pop
push
lods
insl
pop
mov
lock
or
ljmp
sub
push
or
mov
mov
arpl
push
adc
cmpsb
pop
dec
inc
fidivrs
and
sahf
pop
mov
cmp
push
add
dec
ffree
fistpll
sub
push
lahf
sbb
mov
mov
mov
pop
ret
cld
xor
iret
adc
ja
jno
lcall
jno
adc
shrb
ss
popf
add
jle
inc
mov
nop
sub
incb
add
mov
xchg
jae
out
aad
clc
xchg
and
cs
push
outsb
adc
stc
sbb
xor
es
jg
mov
loop
mov
sbb
lods
pop
xchg
lods
das
push
scas
cmc
jbe
sbb
jnp
sbb
stc
out
mov
sbb
fdivl
std
jmp
adc
mov
sbb
dec
mov
iret
mov
xchg
outsb
add
add
ljmp
les
mov
jl
dec
in
pop
stc
add
sub
sub
in
jbe
inc
push
xchg
daa
in
es
nop
movsl
cltd
jp
cmp
fcmovnb
jnp
das
lds
inc
mov
loopne
xchg
or
out
xchg
mov
test
pop
fsubl
shl
sbb
xor
data16
dec
testb
daa
lahf
and
adc
movsb
in
lahf
cmp
ljmp
lfs
sbb
fwait
scas
pop
aad
pushf
testl
popa
inc
test
notl
sbbl
lods
inc
shl
call
enter
adc
aad
out
sbb
jo
icebp
testl
rcrl
repz
sub
dec
mov
xchg
jg
in
mov
fwait
jl
adc
sahf
and
adc
sub
in
leave
xor
fstps
jbe
adc
mov
outsl
xor
cwtl
daa
xor
jo
aas
arpl
xchg
loope
mov
cs
add
fcom
inc
outsl
sub
sub
lds
inc
bound
jp,pn
mov
mov
outsl
cmp
hlt
insb
ret
stc
repz
jl
outsb
or
inc
enter
popf
mov
push
in
or
mov
and
jb
pop
outsl
mov
lock
mov
iret
mov
sbb
xlat
test
bound
jmp
adc
ficoml
mov
stos
pop
jmp
xchg
sbb
mov
jecxz
stc
xor
inc
add
dec
aaa
jns
and
inc
jnp
loope
das
negl
dec
movsl
push
dec
daa
aas
mov
cmc
out
int
and
icebp
inc
scas
nop
movsl
andb
rcl
xchg
xchg
mov
inc
inc
lea
out
jge
outsb
push
addl
loop
dec
jae
gs
push
in
jl
adc
cwtl
outsl
xor
sub
and
sbbb
jbe
clc
addr16
cmp
daa
imul
out
sub
or
cwtl
sub
and
xchg
fisubl
insb
fstps
xchg
xchg
dec
icebp
xorb
mov
test
cmp
push
aaa
dec
cmpsl
adc
mov
sub
jp
dec
fs
sub
iret
pop
leave
bound
jge
lahf
mov
std
ds
lar
ss
jg
stos
xor
ror
negb
outsb
dec
int
and
or
push
cmp
daa
dec
pushl
cmp
aas
outsb
mov
inc
std
and
mov
mov
or
and
stc
adc
shll
and
push
sbb
int
fdivrp
std
int
push
cld
push
sub
mov
nop
adc
into
pop
stc
cmp
mov
test
test
sbb
popf
shlb
out
das
jbe
fnstenv
cli
mov
jbe
icebp
mov
mov
and
cmpl
push
adc
ret
aaa
mov
and
inc
in
scas
mov
jle
loopne
insl
jnp
sub
push
in
repnz
rcll
clc
bound
mov
in
mov
test
ljmp
fxam
mov
stos
pop
sbb
sub
jp
movsb
cs
movsl
or
divb
rolb
add
xchg
jnp
mov
and
sbb
fdivr
ret
adc
xchg
pop
subl
fsts
insl
adc
out
jno
mov
sti
xchg
out
mov
jbe
lods
rol
sbb
mov
pop
push
int3
movb
fcmove
xor
jb
andl
ljmp
or
sub
mov
out
imul
into
and
sub
adc
shrl
adc
divb
dec
nop
enter
loop
sbb
mov
pop
and
add
push
jl
push
lret
push
fcmovnbe
sar
or
mov
jne
dec
inc
sbb
lret
push
and
cmpb
xor
adc
adc
repnz
push
movsl
sarb
add
bound
mov
mov
fnstcw
shrl
outsb
js
orl
cmp
stos
out
out
stos
dec
add
adc
in
xchg
lret
xor
sbb
dec
jae
or
jmp
imul
je
mov
outsl
lret
push
imul
and
addr16
stc
push
mov
sub
in
cltd
adc
cmp
xchg
pop
cmpsl
xor
loop
ds
xchg
or
sahf
ss
mov
bound
inc
inc
push
mov
inc
jmp
pop
sub
and
lock
shlb
inc
jns
pusha
or
loopne
mov
dec
lret
xchg
or
ds
lret
fsub
mov
les
lods
insb
adc
nop
and
es
adc
movsl
jmp
cld
mov
gs
das
movsb
cmpsl
js
lea
leave
xchg
add
jmp
sbb
pop
popa
lods
and
iret
mov
js
imul
pop
filds
push
es
mov
fsts
pop
subb
push
fs
push
push
dec
mov
movsb
or
adc
sti
cmpsb
les
or
shlb
fucomi
mov
inc
cmpsl
xchg
mov
lea
imul
sbb
xorl
andb
cmpsl
out
imul
fidivrl
into
addr16
pop
cs
mov
lret
pop
sub
push
je
xor
dec
repnz
mov
fwait
xchg
icebp
mov
popa
xor
imul
mov
jl
icebp
out
jl
sbb
fdiv
add
enter
out
sub
arpl
in
adc
adc
nop
push
pusha
movsl
hlt
cmp
mov
push
pop
cmpsb
fadds
jb
movsl
or
bound
scas
jne
pop
jge
jle
shlb
std
xor
mov
xchg
cld
and
and
call
dec
dec
pop
mov
testl
jnp
sub
out
xlat
push
mov
in
or
mov
aad
sub
add
pop
lods
movsl
jne
lods
imul
jmp
scas
stc
out
xchg
push
ds
bound
xor
movsb
xchg
shlb
cmp
mov
daa
jg
sub
ss
mov
sub
mov
mov
mov
aad
cmpsb
sarb
xchg
pop
imul
pop
mov
xor
es
ja
xabort
adc
std
movsl
idiv
jbe
popf
inc
aas
js
into
roll
out
push
mov
icebp
push
fldcw
mov
sub
shlb
pop
add
inc
and
xor
fbstp
sbb
divl
mov
inc
lods
lahf
jbe
fdivp
jbe
popa
mov
scas
xchg
sbb
hlt
in
push
xchg
divl
jae
cmp
popl
mov
fsubrp
cmpsl
push
scas
mov
xchg
add
lock
jle
cmp
adc
jmp
je
xor
popa
into
mov
mov
fcmovb
arpl
jo
insb
push
enter
dec
mov
ret
adc
cmc
push
push
mov
insl
sqrtps
pusha
hlt
mov
or
xchg
push
mov
pusha
xchg
sub
mov
push
mov
fstps
mov
dec
pop
sbb
fstp
ficompl
arpl
jnp
mov
cmp
inc
popf
adc
inc
outsb
jne
xor
add
inc
xchg
adc
mov
push
mov
jbe
adc
sub
sub
dec
sub
pusha
dec
rcll
xor
sbb
dec
pushf
inc
add
jno
sub
shl
outsb
mov
cli
cli
out
in
or
mov
inc
adc
mov
xchg
jl
aam
scas
je
pop
es
pop
andb
push
ss
fcmovne
out
sbbb
and
cmp
or
loope
mov
mov
dec
pusha
xor
stos
add
int
or
clts
nop
xorb
sub
sahf
cld
pop
ret
xchg
rolb
and
jno
xchg
xchg
jns
mov
add
add
cmp
mov
jno
mov
mov
dec
ljmp
mov
ss
xchg
test
sbb
fmuls
testb
xor
xor
xor
mov
push
mov
ret
xor
add
in
iret
pop
in
xchg
jno
pop
arpl
loop
arpl
add
add
mov
mov
pop
xchg
imul
roll
jbe
outsb
scas
inc
scas
sarl
sub
push
cwtl
shrb
pusha
test
out
aas
xorb
push
mov
test
or
jb
adc
mov
push
data16
iret
leave
imul
xor
xor
cmp
jg
jo
or
outsl
mov
cmp
adc
cltd
xchg
mov
mov
fnstcw
push
xchg
mov
xor
outsl
in
push
xchg
jbe
mov
push
rcrb
cmp
movsl
jecxz
lds
mov
notl
lcall
inc
push
pop
das
aas
mov
ljmp
dec
sbb
jnp
sub
push
jne
cs
push
into
orb
fidivrs
loop
pop
int3
mov
in
inc
inc
jp
lret
stos
jnp
into
imul
insb
xchg
and
or
rcll
and
xchg
mov
out
adc
xor
and
in
adc
push
je
daa
xor
mov
lret
js
and
jmp
lods
iret
or
push
and
add
out
les
aam
loope
pusha
cld
mulb
ret
and
cmpsl
jnp
sar
imul
xchg
aaa
sbb
push
fistl
and
add
sub
or
in
popf
inc
push
cli
mov
sbb
loope
and
push
testl
in
mov
jnp
xchg
cmp
mov
mov
and
nop
or
mov
xchg
fucomip
jmp
test
mov
loop
xlat
je
loopne
cmpl
mov
inc
push
pusha
mov
mov
and
inc
sub
cmp
scas
divb
addl
aaa
enter
aad
xchg
add
test
mov
sub
add
dec
jb
cltd
xor
xlat
hlt
cld
test
sub
xchg
cmp
inc
dec
pusha
out
pop
pushf
jae
js
pop
or
leave
xchg
or
mov
mov
stos
repz
xchg
cwtl
sub
addb
push
cmp
jb
or
mov
sbb
lahf
mul
mov
cmp
fsubrl
dec
lock
minps
aam
sbb
es
icebp
sub
and
shrl
imul
jns
sbb
and
xchg
int
xchg
jl
pop
das
sbb
aas
pop
jnp
sti
aam
aaa
in
push
cli
pop
sub
add
movsl
or
jns
mov
add
pop
cltd
adc
and
lcall
sub
dec
hlt
mov
xchg
sub
repz
mov
divb
test
cmp
push
lahf
into
inc
push
jge
mov
fistps
imul
push
insl
push
mov
scas
dec
fs
cmp
xor
cmp
lret
shlb
push
fstps
loop
inc
or
mov
movsb
rorb
mov
scas
int3
mov
adc
daa
insl
sub
fmul
adc
popl
fs
fiaddl
arpl
stos
adc
popl
cmp
cmp
mov
jp
or
xchg
pop
sub
pop
cs
jge
mov
xor
mov
out
imul
jge
pop
bound
popf
insl
mov
aaa
dec
lahf
pop
insb
pop
shr
lret
pop
xchg
and
icebp
mov
and
out
push
pop
jb
sub
in
push
inc
les
add
xlat
mov
in
push
push
xchg
fists
imul
add
nop
sub
cmp
cwtl
out
mov
xor
pushf
loope
es
sub
dec
call
scas
lret
push
push
mov
test
shrb
lds
pop
mov
adc
mov
popf
push
sbb
sar
iret
sub
dec
dec
xor
sub
pop
push
popa
jp
dec
jno
sub
lea
inc
pop
lret
clc
fidivrs
push
insl
mov
xchg
outsl
xchg
xchg
xchg
jno
dec
jo
daa
inc
aaa
cwtl
sub
ja
mov
les
xchg
shl
or
jno
push
add
out
or
dec
test
mov
insl
aam
or
fs
enter
fnstenv
lret
loope
mov
sub
jp
shlb
xchg
dec
push
push
es
mov
leave
cld
jle
push
cmp
dec
sarl
leave
mov
dec
test
scas
sub
or
call
movsb
pop
fmulp
call
xchg
lcall
push
popf
scas
jmp
rolb
cmpsl
pop
sub
and
pushf
jl
sbbl
and
push
ret
and
pop
mov
into
ret
sti
jnp
add
popa
arpl
xchg
cwtd
cld
sub
aam
jg
mov
ja
mov
iret
lret
shll
ret
lret
pop
push
js
cmp
dec
cs
stos
fwait
xor
sub
enter
hlt
shll
mov
popf
xor
lea
or
shlb
pop
loopne
pop
jne
jl
xchg
inc
jge
inc
insb
mov
mov
xor
pop
mov
pop
out
mov
ljmp
mov
push
arpl
call
dec
and
mov
cmp
dec
jb
inc
xchg
pop
out
pop
test
mov
sub
adc
mov
ret
xchg
jl
das
mov
loop
push
jmp
pushf
jecxz
pop
adc
and
rolb
gs
lcall
out
test
rorb
movaps
out
movsl
popf
cmpsl
icebp
adc
ds
sahf
dec
sahf
dec
dec
js
cmpsl
test
test
mov
push
shll
mov
call
cmpsl
ljmp
lcall
cmp
jae
or
cs
scas
push
cld
sti
fwait
or
dec
fwait
js
rcll
scas
test
outsb
cmpl
fucom
and
jae
sahf
dec
call
push
and
loopne
or
dec
dec
aaa
in
leave
cmpsb
add
jmp
push
mov
fisubrl
pop
test
fstps
jp
imul
sbb
test
mov
add
xchg
out
add
imul
inc
sbb
lahf
mov
rcrb
push
popa
ret
arpl
and
addr16
xchg
ficoms
lds
mov
imul
xchg
out
repz
xchg
stos
pop
ss
mov
ret
in
outsb
inc
cld
popf
testb
mov
dec
fidivl
mov
stos
test
mov
call
dec
cmp
push
mov
mov
cmpsb
lds
inc
daa
test
imull
or
iret
aaa
loopne
lret
mov
scas
gs
cli
int
xor
or
mov
inc
test
adc
outsl
jmp
xor
fstl
bound
mov
loop
jbe
in
xchg
lock
mov
mov
inc
enter
jno
or
aam
xchg
dec
insb
js
push
ja
aaa
jmp
pushf
add
xchg
test
push
mov
inc
xchg
cs
pop
aaa
sti
lock
loopne
imul
push
mov
ss
stos
mov
out
fcmove
sub
cmp
sub
xchg
dec
pushw
mov
nop
add
lahf
int
add
push
or
push
mov
xchg
insb
loope
jne
jmp
pusha
mov
or
dec
clc
popa
adc
xor
ljmp
mov
aad
andb
fisttpl
mov
jmp
add
stos
pop
inc
sbb
roll
clc
cmp
xor
lret
sub
jg
cli
repnz
jge
les
add
mov
cmc
or
xor
cli
movsb
push
rcr
outsb
iret
pop
fs
xchg
pop
mov
and
lock
cmp
or
sub
xchg
lock
xchg
popf
xchg
or
test
inc
test
int
in
sbb
mov
cs
sbb
aaa
and
cld
cmpsl
jne
shlb
xchg
mov
cmp
add
lcall
and
dec
gs
inc
mov
adc
in
pop
out
repz
mov
lock
xor
pop
loope
negl
sbb
jbe
inc
sub
shll
fmulp
or
popl
rorl
sbb
lds
mov
cmpsb
fwait
mov
cmp
sbb
pop
adc
out
test
dec
popa
or
or
pushf
out
pop
dec
arpl
dec
pop
call
inc
dec
sahf
inc
mov
adc
sbb
adc
adc
pop
adc
rcrb
lock
or
aam
lds
scas
add
inc
inc
in
push
xchg
xchg
xchg
into
mov
mulb
clc
test
jl
in
add
stos
or
faddl
inc
pop
jne,pn
add
test
add
push
lock
call
fmul
and
or
adc
das
jae
adc
test
cltd
in
pop
jae
jmp
sbb
or
xorb
sbb
divb
jne
dec
in
cli
enter
pop
and
adc
faddl
out
hlt
sub
jo
cmc
and
cmp
jno
or
jae
inc
push
or
jb
cmp
dec
xchg
push
in
or
xor
xor
dec
rcll
or
pushl
xor
lds
dec
bswap
out
stos
push
paddsb
cmc
xchg
and
add
xchg
loopne
aam
push
add
sbb
ja
in
sarl
push
mov
lea
xchg
pop
jne
aas
mov
aas
jns
mov
shr
pop
movsl
xchg
xchg
stc
pop
shl
imulb
arpl
or
push
jg
hlt
mov
add
lret
sbb
ror
sbb
mov
imul
test
cld
jp
mov
in
lret
mov
fcomi
sub
mov
jns
pop
fisubrl
dec
ret
adc
bound
or
test
sahf
inc
xor
in
stos
jns
sbb
js
xchg
jp
pop
xor
incb
xor
int
inc
daa
arpl
dec
inc
lcall
icebp
and
cltd
notb
stos
xchg
xchg
mov
cltd
and
int
sub
nop
sub
cs
push
mov
add
jne
lea
enter
xor
dec
pop
call
popa
sbb
xchg
mov
inc
cmp
arpl
cmc
popa
sbb
mov
call
add
pop
sti
mov
cmp
out
imul
ds
fwait
sub
stos
ss
call
nop
sbb
jae
scas
fldenv
sarb
bound
repz
cwtl
xor
pushf
addr16
hlt
dec
jl
jnp
imul
das
icebp
scas
outsb
stos
jbe
sbb
movsb
cltd
pop
in
std
jbe
scas
add
xchg
push
arpl
jp
jge
sbb
mov
mov
cmp
out
cmp
xor
push
divl
cmpsl
mov
mov
xchg
repnz
insl
xchg
xchg
xor
lret
ja
aam
mov
mov
adc
mov
and
out
mov
sub
addr16
xchg
in
je
mov
out
iret
sbb
pop
out
lods
inc
jle
jp
dec
out
leave
int
mov
xlat
test
mov
lods
or
mov
push
cmp
xchg
pop
movsl
in
inc
push
add
iret
or
leave
push
das
add
mov
xchg
add
push
mov
pusha
sbb
pop
sub
push
mov
xor
jbe
jmp
xlat
add
jmp
and
fdivs
int
and
mov
mov
imul
popa
dec
adc
test
sbb
push
in
push
popa
xor
shll
ja
repz
sahf
call
jmp
push
test
inc
xchg
mov
jns
xor
lret
out
mov
push
inc
cwtl
setbe
loopne
mov
shll
pop
loope
ljmp
dec
sub
es
rcl
pop
les
stos
sub
movsb
jno
xchg
cmp
aaa
mov
xchg
aas
push
es
push
mov
adc
pop
adc
cmp
std
adc
push
ret
movsl
jmp
aad
rcrb
mov
ret
fistpl
loope
add
jne
decl
test
cmp
dec
mov
notl
mov
dec
push
dec
clc
imul
push
arpl
mov
mov
or
lods
hlt
or
scas
mov
dec
fidivl
jne
into
dec
out
inc
test
lods
in
jns
stc
pop
push
testl
mov
movsb
add
into
add
outsb
adc
je
xchg
cmc
push
imul
jne
lea
xchg
or
scas
aad
add
enter
add
in
pop
insb
pop
sub
or
dec
mov
cltd
dec
sbb
leave
add
pop
insl
pop
ds
scas
add
out
pop
pop
sbbb
gs
js
ret
mov
jo
pop
je
pop
push
addl
jmp
das
fldl
xor
fadd
mov
and
push
pop
mov
ss
movsl
mov
addr16
movsl
dec
dec
flds
aam
adc
popl
sbb
insl
pop
shl
xchg
cmc
in
xor
inc
dec
or
std
jmp
adc
pop
pop
xchg
outsl
cwtl
test
adcb
pop
jle
insb
add
cwtl
mov
xchg
hlt
jge
mov
inc
into
sbb
popf
clc
popf
push
je
pop
or
stos
fmuls
pop
adc
daa
adc
ret
and
fsubl
lahf
xor
and
lods
lea
dec
imul
pop
dec
movl
cltd
into
mov
out
rclb
aad
pusha
jl,pt
loopne
pop
dec
sbb
adc
mov
adcl
test
sub
mov
adc
dec
fldt
sbb
rol
loopne
loope
push
in
push
dec
lds
mov
repz
xchg
dec
xchg
aas
mov
int3
dec
pop
sub
sbb
xchg
leave
xchg
incl
push
pop
fldt
dec
cmpsb
addr16
jecxz
xchg
cli
jp
sbb
int
fidivrl
imulb
sbb
dec
add
sub
cmc
out
cmp
cwtl
ret
dec
inc
pop
decb
pop
sbb
mov
insl
xchg
dec
ja
cmpsb
pop
movsl
push
stos
xchg
pop
pop
lods
pusha
xchg
jp
fwait
sahf
pop
pop
jne
stos
dec
push
mov
in
stos
adc
xchg
sbb
xchg
ljmp
xchg
notb
fisttpll
mov
dec
and
loope
xor
pop
lahf
es
mov
mov
cmc
or
sub
mov
jo
jge
push
pop
test
inc
mov
and
imul
in
out
inc
and
test
or
insl
adc
dec
stos
lods
mov
jne
pop
shlb
ja
ret
pushf
rcrl
inc
mov
mov
xlat
shl
insb
add
add
mov
and
in
icebp
orb
loopne
fadd
btl
aaa
out
cmpsl
iret
das
push
imul
repnz
xor
mov
xor
movsb
popa
sbbl
cmp
cli
and
xchg
aad
pop
jecxz
pop
pop
bound
inc
loop
daa
stos
imull
cmp
adc
jnp
leave
cmp
adc
pop
adc
mov
inc
mov
jo
add
mov
adc
pop
clc
icebp
cmp
adc
addr16
mov
cli
push
xor
inc
test
fildll
pop
dec
insl
mov
movsb
insl
adc
fmull
pop
xor
les
jmp
mov
lret
adc
in
push
fiadds
dec
repz
add
cltd
out
ret
cmp
cmp
icebp
mov
movsw
adc
leave
mov
mov
scas
ljmp
mov
ja
je
ss
stc
out
sub
repnz
jbe
jl
cs
daa
mov
and
xor
sarb
and
dec
push
movsl
jle
lock
xlat
adc
push
je
loop
mov
fcoml
imul
and
dec
das
inc
mov
sar
mov
push
mov
dec
push
shr
or
enter
mov
push
mov
push
mov
lret
mov
push
in
loopne
inc
mov
xor
mov
mov
jne
lods
in
adc
lock
icebp
jp
push
clc
sahf
les
xlat
mov
clc
stos
leave
cmp
ss
imul
es
mov
jae
clc
ds
ja
adc
fsubrl
push
pop
jmp
dec
and
nop
imul
pop
fcompl
testl
lret
in
or
cmp
addr16
in
or
or
shrl
sub
push
jne
adc
or
inc
dec
mov
sub
mov
jnp
cmp
decl
int
pop
inc
adc
adc
cmp
lret
cmc
or
xchg
fnstcw
or
js
je
scas
hlt
movsl
sub
ret
jae
and
or
adc
lahf
mov
orb
cld
push
dec
mov
sarl
in
loopne
test
negl
nop
add
push
test
dec
or
es
push
xor
and
dec
outsl
movsb
lock
sbb
sbb
push
fisubs
outsb
sub
mov
cmpsl
leave
push
cltd
pusha
sbb
jmp
sub
mov
fcomp
cli
idivl
adc
fistps
sbb
push
pop
cmp
push
cmp
pop
stos
es
decb
pushf
sbb
loop
cmp
pushf
rcl
sub
adc
dec
out
add
cmp
pop
mov
jp
das
inc
adc
cmpsb
push
jp
push
xor
int3
add
stos
mov
ficoms
fsubr
addb
jge
movsb
inc
and
sub
dec
addr16
mov
ljmp
sbbl
xor
insl
rcrl
or
lock
ret
dec
xchg
dec
sbb
jg
rcrb
jo
sub
or
dec
sbb
lcall
in
loope
pop
lods
sub
xor
push
sbbb
enter
jge
sbb
and
push
xchg
clc
sbb
mov
shll
test
push
inc
clc
push
and
add
push
add
sbb
mov
dec
mov
imul
add
cmp
adc
lods
cmc
mov
pop
mov
adc
pop
xchg
mov
mov
lahf
xor
cwtl
xchg
sub
xor
out
mov
ficompl
sbb
mov
and
push
pusha
adc
aam
pushf
push
dec
sahf
jmp
mov
or
sbb
mov
es
fildl
pop
std
push
pop
shll
or
aam
mov
cmpsb
fidivs
arpl
es
stos
fwait
pushf
out
jmp
shrb
xlat
mov
daa
inc
lret
cli
xor
stos
push
testl
jbe
insb
inc
sub
mov
xlat
adc
outsl
ss
jne
or
inc
sar
push
cmpsl
dec
dec
cmp
in
stos
call
xor
je
sbb
movsl
jne
test
dec
jl
pop
mov
gs
adcl
fldcw
lret
dec
mov
sub
test
jecxz
push
and
clc
mov
lods
jle
arpl
out
test
or
cltd
fadds
dec
repz
cmp
icebp
cltd
imul
aad
jp
lea
pop
inc
sub
or
jecxz
and
mov
xor
in
xchg
sub
push
fdivrs
cmpsb
fs
and
jg
arpl
in
ret
mov
cmp
lret
push
sub
mov
xchg
int
movsl
mov
adc
in
subb
lahf
scas
sti
cltd
push
cmp
subb
xchg
push
xlat
or
stos
jnp
jp
mov
xchg
sahf
repz
jge
or
jae
movsb
sbb
call
orl
push
sti
pop
vpcmpeqb
lods
mov
jne
adc
bound
sub
call
or
lret
insb
pop
xor
addb
mov
jae
push
jbe
es
test
call
nop
fsubrs
lods
mov
push
test
out
lods
gs
jne
lcall
mov
lret
jb
jl
ret
loop
mov
fsubrs
xlat
push
aam
imul
shll
push
out
xchg
pop
xor
sahf
xor
sbb
cmp
push
ret
dec
outsl
mov
jae
bound
jb
inc
stos
hlt
sahf
gs
inc
fidivs
idivb
dec
ljmp
das
inc
add
imul
pop
aas
rol
sbb
mov
inc
shlb
mov
pop
decb
daa
sbb
stos
jmp
mov
stos
inc
fwait
lahf
dec
push
cmc
ds
jmp
orl
lahf
outsb
jle
lea
mov
mov
or
pop
dec
es
daa
pop
mov
fstl
sub
pop
push
popf
sub
or
inc
movsb
test
pop
inc
test
push
jecxz
popa
add
pop
test
pop
jo,pn
jl
push
push
sbb
fdivrl
sbb
and
andl
inc
mov
adc
jnp
imul
sahf
dec
pop
mov
ficoms
mov
fdivp
cmc
popa
sub
call
cmpl
jnp
popa
xchg
push
mov
push
push
mov
mov
fimull
pop
popa
jmpw
in
mov
daa
cmp
jae
sbb
pop
aam
dec
lds
cs
icebp
or
andb
push
movsb
sbb
in
pop
sahf
mov
pushf
sahf
push
mov
int3
jo
cli
flds
cmp
sbb
lahf
cmc
mov
andb
rol
mov
sbb
out
jns
aam
pop
loope
nop
je
outsb
or
lds
sbb
jle
dec
test
lock
lret
in
lret
imul
xchg
fimull
or
lahf
inc
adc
add
add
enter
out
lret
stc
inc
cmpsb
lea
outsl
and
cltd
dec
cmpsl
popf
sbb
movsb
imulb
sbb
mov
repz
or
cmp
mov
push
or
push
jle
add
jnp
insl
push
and
sahf
test
popl
sub
sbb
add
movsl
push
fildll
pop
jae
into
pop
jae
iret
or
sub
push
push
add
pop
in
cmpsb
dec
into
mov
es
int3
clc
sahf
push
in
mov
pop
sbb
add
pop
adc
loope
sbb
icebp
cmp
inc
out
inc
mov
ficompl
inc
leave
mov
imul
push
inc
dec
sbb
andl
inc
add
jmp
sub
pushf
mov
mov
adc
loopne
cli
lods
cmp
iret
pushf
jns
mov
jge
sbb
incb
or
fdivrl
mov
sbb
mov
out
xor
mov
or
test
pushf
pusha
add
scas
sahf
push
rorb
sti
cmp
push
or
or
or
mov
lock
mov
pop
movsl
sub
lds
stos
test
xchg
cmp
jne
push
pop
and
cmpsb
mov
pop
jns
add
cmc
sahf
rcr
test
push
gs
mov
lret
mov
adc
or
frstor
and
loopne
mov
fimull
negb
movsb
cmpsb
xlat
inc
xor
jne
push
mov
in
call
mov
or
mov
add
ja
mov
sub
pop
movsb
push
nop
mov
fldl
xchg
loop
loopne
loope
jmp
movsl
xor
stc
jno
cli
mov
mov
cltd
addr16
mov
inc
sub
test
mov
push
adc
stc
incb
push
insl
pop
adc
fsubrl
jge
mov
inc
dec
out
mov
sub
add
mov
lgs
sbb
ja
scas
adc
jle
fildl
sbb
test
scas
in
mov
adc
mov
clc
add
xchg
shll
jl
call
pop
xchg
or
mov
cmpsl
or
out
fs
cmc
pushf
mov
sub
imul
dec
fisttpl
cli
push
mov
jecxz
mov
je
fcmovb
mov
hlt
nop
jb
shll
and
cmp
rcrb
das
jle
outsl
in
mov
pop
mov
mov
push
push
cs
mov
roll
xchg
sub
cmpsb
sbb
enter
roll
movsb
cmp
test
mov
clc
and
fwait
cli
loopne
loope
sub
rol
push
mov
in
dec
sub
cmpb
inc
outsl
sbb
jp
mov
mov
push
pop
mov
pop
inc
dec
sarb
jne
fs
arpl
leave
js
sbb
sub
pop
mov
mov
add
std
imul
push
jnp
insb
cmpsl
mov
and
lea
lcall
pop
xor
inc
iret
mov
andb
adc
hlt
iret
in
xorw
jbe
repnz
ds
scas
or
xor
xlat
dec
dec
clc
mov
test
fwait
loope
leave
aas
fwait
idivl
fistps
mov
call
dec
cmp
popf
int3
cmp
xchg
fildl
rolb
dec
cmp
out
jl
fdivrs
fldcw
xchg
fdivl
xchg
pop
sub
sub
sub
fiaddl
gs
add
push
add
or
jge
jno
mov
inc
rorb
enter
aaa
sbb
adc
push
fnstcw
or
push
rorl
sbb
xor
and
cmc
jmp
jp
adc
lock
dec
push
adcl
negl
mov
mov
addb
push
lea
mov
aaa
sbb
les
mov
addl
insb
sti
iret
out
popf
fistps
mov
xchg
mov
xchg
sarl
cmpl
lea
repz
dec
sti
in
mov
mov
adc
aaa
popf
testl
in
je
icebp
sbb
inc
adc
out
dec
add
mov
cmpsb
xor
inc
jg
or
out
int3
sbb
mov
stos
inc
sahf
sti
fdecstp
or
and
fldz
cmp
xchg
sub
dec
or
ja
adcl
sbb
inc
mov
incl
jnp
push
out
and
sub
cmpsl
insl
call
aaa
pop
dec
cld
je
dec
stc
adcb
cmc
out
jp
je
mov
and
inc
dec
xchg
adc
add
dec
not
out
mull
roll
pop
jno
push
cmpsb
iret
xchg
addb
fnsave
and
dec
loop
xchg
imul
mov
dec
test
rcrl
inc
xor
push
push
out
pop
out
lret
sti
cmc
pop
pop
loopne
inc
adc
pop
sahf
loop
data16
push
inc
rcl
adcb
jmp
pop
fsubl
cwtl
adc
xchg
dec
dec
aas
xlat
inc
xor
xchg
sub
ret
shlb
ja
inc
sbb
test
mov
mov
dec
pop
mov
push
mov
push
inc
ret
add
push
sarl
xchg
xchg
cmpsb
push
adc
clc
repnz
out
mov
sbbb
xchg
jl
mov
push
xor
clc
xor
mov
adc
adc
lcall
or
arpl
lcall
xor
dec
sbb
dec
cmp
mov
ret
sahf
sti
push
pushf
pop
jmp
cmc
je
out
es
sbb
fistl
jno
mov
cmp
test
lea
push
sahf
shrl
xchg
xor
mov
mov
dec
pop
ljmp
lea
sbb
jno
ss
pushl
sub
mov
push
aas
sub
ret
aam
pop
mov
shlb
lods
outsb
lods
fisubs
lds
mov
adc
cld
sub
xchg
sbbb
leave
or
jmp
call
andl
push
cs
jns
inc
fs
mov
pop
cmp
jae
aam
sub
jg
jle
adc
xchg
jp,pn
aas
jnp
mov
or
and
es
ja
lcall
insb
inc
imul
int3
test
mov
sub
loop
movsbl
clc
or
mov
aas
push
fwait
cmpsl
mov
pusha
sti
negb
lcall
les
jne
call
push
scas
jmp
inc
stc
push
mov
xchg
and
es
fidivl
lea
cmc
ds
and
out
inc
push
movsl
jle
fcomps
int
rcr
test
mov
aam
repz
movsb
fs
test
lcall
sahf
pop
mov
lret
stos
or
nop
movsb
insl
sahf
sbb
lcall
ja
jb
ss
sbb
popf
aaa
aad
nop
repz
push
leave
push
push
in
notb
jne
test
lock
cltd
lcall
jns
cs
mov
pop
pop
jg
cli
mov
and
cltd
jno
fcompl
subl
push
adc
push
and
aaa
popa
leave
cwtl
fstps
std
mov
inc
jo
int3
add
mov
lahf
push
xor
lock
vcmpss
jo
push
xchg
ds
pop
push
negl
gs
add
push
mov
adc
mov
mov
lahf
and
mov
js
lcall
xchg
mov
repnz
pop
ljmp
gs
arpl
nop
sub
inc
lret
lock
out
add
jmp
jnp
loope
sbb
je
scas
iret
and
scas
xor
or
lret
inc
or
cmp
sbbb
dec
sarb
hlt
xor
xor
push
movsb
sub
shl
imul
shr
fsubrs
add
pop
add
mov
loope
cld
lods
xor
out
sub
jmp
inc
pop
sbb
out
out
fwait
lcall
sbb
pop
jbe
sbb
mov
test
cmp
out
push
jle
dec
mov
inc
or
sub
or
ffreep
mov
cmp
hlt
insb
pop
gs
sbb
js
mov
add
addb
push
mov
mov
test
pusha
add
out
mov
jle
ficoml
movsb
push
mov
int3
test
xor
cmp
shlb
mov
jecxz
jecxz
xchg
xchg
pop
mov
je
pop
scas
push
adc
sbb
jge
es
mov
clc
pop
divl
lahf
pop
int
ds
push
fwait
xchg
stc
aad
adc
pop
in
pushf
ret
inc
xor
jle
aas
in
repz
ret
pop
std
push
mov
xchg
sbb
lret
in
loope
push
sub
sbb
sub
sbb
cld
sahf
inc
push
sbb
sub
and
sahf
test
sbb
mov
jp
mov
push
mov
mov
cwtl
pop
sbb
mov
mov
push
inc
movsb
xchg
and
xorl
sub
mulb
push
imul
jae
mov
rcr
sub
pusha
fcmovnu
outsl
sbb
push
leave
std
shld
es
cmpl
xor
cmpsl
out
inc
cs
repnz
inc
sbb
incl
push
push
test
cltd
in
dec
jmp
pusha
mov
repz
sub
xor
dec
jo
mov
out
pop
xchg
das
mov
fwait
in
or
sub
or
in
push
mov
rorb
cmpsl
int
adc
xor
jecxz
cmpsl
sbbl
cmp
sbb
xlat
xor
mov
or
leave
repz
outsb
loope
xchg
xchg
sub
sbb
mov
loop
lea
daa
loope
mov
fimull
stos
mov
ds
cli
lcall
xchg
addr16
movsl
outsb
pop
fsubl
hlt
arpl
xor
mov
gs
lcall
gs
add
push
xchg
out
stos
test
adc
inc
sub
je
cli
fprem
dec
out
push
movsl
cmp
icebp
sub
adc
stc
mov
push
mov
notl
jnp
leave
adc
cltd
mov
sub
pop
and
cmp
int3
push
stos
roll
mov
stos
aam
das
clc
mov
in
repnz
pushl
ret
push
jmp
adc
dec
scas
int
fxtract
mov
outsb
cld
and
jne
cmp
das
mov
lods
dec
adc
xchg
ror
movsl
lcall
imul
in
jnp
pop
add
xchg
xchg
jb
std
cwtl
stc
in
cmp
nop
jnp
mov
and
push
xchg
iret
mov
mov
mov
test
fists
out
xor
sub
aas
sbb
adc
lods
das
xchg
sub
enter
sarb
nop
push
arpl
sbb
repnz
mov
dec
loop
pop
das
loope
xor
or
push
bound
add
mov
jle
movsb
mov
ds
push
aam
mov
nop
insb
mov
pop
sbb
lret
pop
jecxz
pop
call
shl
nop
clc
sbb
loope
test
pusha
aad
popa
rcrb
hlt
rorb
push
pop
push
and
les
xor
jl
cli
jg
dec
or
loopne
clc
pop
xchg
mov
loope
cmp
sbb
stos
or
mov
mov
mov
jae
mov
mov
adc
xor
or
mov
pop
inc
mov
fsubrs
divl
cltd
and
popf
xor
push
pop
popw
popf
sub
sub
aas
repnz
and
mov
lahf
int3
or
icebp
fwait
shlb
roll
aas
cmpsl
push
jle
lcall
mov
mull
push
arpl
add
dec
js
aam
sbb
call
xchg
lds
or
in
add
xchg
ret
insb
or
dec
jmp
add
subb
mov
jb
xlat
jmp
call
xchg
insl
inc
jb
addr16
pop
mov
dec
pop
mov
fmul
mov
jg
dec
stos
aaa
push
xorl
mov
mov
stos
jae
mov
pushf
imul
negl
ljmp
sub
add
test
iret
out
in
mov
test
stos
dec
adc
add
loope
adc
sub
rclb
in
mov
push
clc
xchg
call
mov
insb
shlb
mov
mov
mov
dec
push
loopne
sarb
imul
sub
lock
pop
jmp
orb
inc
imul
add
mov
inc
lret
sub
xlat
mov
adc
mov
add
mov
sub
jg
cmp
enter
pushf
ficoml
pop
cmp
push
arpl
mov
xor
cmpsl
pushf
mov
sub
dec
or
sbb
jb
addr16
lea
pop
jnp
dec
in
push
push
push
imul
movsl
int3
scas
mov
dec
test
fbstp
gs
mov
nop
divl
pop
jge
adc
cmc
fisttpll
mov
test
dec
test
mov
int3
sbb
push
dec
imul
gs
leave
stos
mov
pusha
push
push
jne
stos
cs
jle
xor
sarb
in
push
cmp
mov
rep
mov
mov
add
pop
dec
aam
adc
sbb
jl
mov
pop
scas
pusha
xchg
cmpsb
adc
daa
pop
add
and
cmp
xlat
popf
loope
jns
and
imul
and
fsubs
add
dec
aaa
dec
bound
in
ss
push
int3
pushf
and
bound
jnp
dec
mov
outsl
shl
fbld
fpatan
call
movsb
push
pop
adc
repz
leave
lds
aam
mov
popa
xor
les
stos
push
inc
daa
xchg
cltd
pop
fmull
inc
push
lret
mov
lahf
js,pn
lcall
push
pop
or
xor
fs
push
scas
shlb
mov
enter
push
mov
cld
xchg
lret
flds
add
das
inc
sub
mov
sbb
test
jl
jbe
cmp
shrl
cmp
movsl
push
into
mov
in
xor
enter
xlat
or
push
add
aad
shl
xor
shl
sbb
inc
or
orb
and
inc
sub
mov
xlat
inc
push
mov
clc
out
divl
mov
add
aaa
inc
sbb
stos
push
fwait
xorb
cmp
jno
in
mov
xchg
lock
or
lret
lcall
lret
cwtl
mov
jns
jmp
jo
aaa
stos
js
add
aas
loopne
sub
stos
dec
cmp
div
inc
jge
call
cmp
mov
cld
pop
jle
push
pop
in
rcrb
insl
mov
cmpsl
pop
push
nop
test
pop
std
imul
out
mov
jmp
and
xlat
cltd
shll
or
xchg
xor
je
fimuls
jg
inc
in
and
push
jl
jno
jb
push
daa
or
cs
popf
jp
addl
lea
insb
subb
jmp
mov
aad
shr
xchg
nop
fdivs
push
cmp
sahf
lds
xor
xchg
cmp
adc
pop
test
mov
shl
adc
scas
stos
push
fdivrp
sbb
jmp
rclb
mov
lock
sbb
leave
je
xor
jae
sbb
lahf
sti
ret
pop
insb
movsl
cmp
mov
hlt
jno
lods
mov
xchg
cmp
stc
enter
pop
repz
dec
inc
les
cmpsl
popl
incl
jge
mov
nop
or
jmp
xchg
das
jmp
in
repz
stos
add
fnstenv
ljmp
inc
or
imul
add
mov
je
sub
mov
xchg
test
fucom
pusha
jmp
jle
push
ficomps
cmp
and
adc
cmp
out
pushl
push
iret
pushl
fbld
loop
jle
xchg
es
out
jmp
sbb
sar
in
dec
push
pop
sbb
sub
sub
dec
rclb
jecxz
les
iret
inc
int
sahf
mov
xchg
and
ret
mov
jl
mov
ficoms
sbb
test
nop
hlt
outsl
data16
and
mov
ljmp
dec
inc
out
push
jne
xchg
jl
sub
in
das
clc
mov
push
jnp
lods
mov
cli
add
lret
insb
xor
lock
inc
cmp
divl
addr16
and
mov
in
mov
divb
test
mov
hlt
idivl
mov
jne
and
add
push
mov
pop
lods
in
int3
mov
jecxz
mov
cmp
jmp
mov
or
call
xchg
push
inc
loopne
lret
test
cmp
add
xor
xchg
cmp
pop
jl
loop
cmp
divl
sub
insb
testl
jno
adc
push
sub
and
dec
sbb
pop
push
dec
aaa
js
std
dec
std
xchg
jae
repz
mov
push
cli
cmp
mov
das
stc
stc
or
cmc
outsb
xchg
addr16
test
sub
mov
push
add
add
inc
cmp
mov
loop
fcoml
xor
xchg
jne
outsl
mov
mov
icebp
lods
xor
aaa
jmp
or
adc
cmp
jmp
outsl
lods
test
mov
fcomip
aad
shrl
pop
inc
pop
bound
loope
scas
add
movsb
sbb
jbe
lds
js
xchg
out
cld
mov
dec
gs
cmp
lods
ljmp
pop
les
xchg
sub
and
std
scas
mov
mov
xor
jno
fcmovnb
mov
xchg
xor
inc
mov
adc
decb
xlat
out
aam
ret
mov
rcrl
dec
mov
call
pop
add
sub
jp
popa
mov
idivb
add
pop
popl
and
cmp
inc
push
aaa
stc
bnd
loope
je
and
call
test
das
and
jmp
push
mov
xor
dec
adc
mov
sbb
paddusw
inc
lods
dec
scas
das
xor
fidivs
shrl
push
push
xchg
mov
pop
inc
sub
and
and
aam
loop
mov
sbb
sahf
popf
movsb
loope
repnz
push
push
xchg
les
outsl
mov
mov
cmp
test
add
inc
in
mov
in
fs
repz
fwait
std
cmp
call
mov
in
fdivs
sbb
push
pushf
add
or
lcall
rcrb
jmp
inc
push
mov
int
jp
cmp
dec
je
jg
movsb
push
fcoms
add
and
push
sahf
push
mov
pop
xchg
lods
data16
cmp
fwait
fs
mov
arpl
fistpl
mov
mov
or
mov
or
push
push
and
shl
mov
dec
stos
cmp
pop
sub
cmp
and
dec
xchg
shll
push
dec
push
bound
cmp
into
ret
shrb
sti
add
mov
pop
adc
jns
cwtl
xchg
test
dec
cmp
inc
ljmp
push
dec
adcl
fisubl
fisubs
fdivs
aas
ss
loopne
int3
adc
subl
jnp
leave
push
xchg
pusha
adc
add
negl
sahf
mov
inc
int3
xor
in
mov
scas
mov
ja
sbb
dec
enter
cltd
shr
shlb
iret
push
mov
mov
cmpb
mov
cmp
inc
movsb
das
jnp
loope
adc
add
popf
arpl
js
jbe
cmp
je
call
pusha
jae
dec
mov
in
mov
sbb
push
ja
mov
les
test
in
popa
cmpsb
xchg
nop
loopne
add
jle
out
add
inc
clc
hlt
jno
push
dec
loop
lahf
mov
sahf
dec
add
lock
hlt
mov
cwtl
push
mov
or
mov
push
lods
jno
je
add
jo
and
mov
add
loopne
test
clc
es
leave
out
mov
test
test
popa
push
xchg
lods
mov
push
mov
notl
scas
add
pop
mov
lret
arpl
jp
lcall
jno
aad
jae
dec
lea
aad
sbb
cmc
ret
push
inc
adc
idivl
out
mov
cmp
mov
aaa
scas
in
fstpl
jg
cwtl
mov
xor
add
enter
xchg
in
add
jl
loopne
fdivp
or
icebp
and
dec
add
xor
pop
xchg
hlt
dec
sarl
mov
mov
dec
adc
mov
xchg
scas
sbb
cltd
jmp
xchg
mov
loope
adc
add
orb
scas
dec
adc
pop
mov
xor
js
in
jbe
inc
push
sub
and
cmp
add
outsb
shr
ljmp
mov
jle
sbb
cmp
push
jo
pop
jp
int3
les
mov
add
cmpb
je
dec
sahf
fprem1
outsb
or
fiaddl
dec
outsl
int
inc
mov
sbbl
mov
fidivs
xchg
xchg
mov
in
testb
cmp
stc
fs
xchg
lcall
clc
subl
pop
push
jmp
aas
stos
inc
fucomp
sahf
es
clc
or
imull
mov
out
xchg
mov
jo
test
xchg
lods
je
aaa
fistl
data16
jmp
jo
pop
in
leave
mov
pushf
out
shld
in
hlt
pop
orb
sbb
or
push
and
dec
adc
clc
add
inc
mov
insb
stos
sub
mov
pop
and
cmp
xorl
mov
test
inc
movsl
and
sysenter
jae
into
test
outsl
gs
adc
cld
add
push
insl
jo
out
pop
js
movsb
sti
cld
xchg
sub
data16
out
fmull
imul
or
adc
aad
shlb
inc
cltd
sbb
sbb
mov
cmp
pop
cs
add
sub
aas
pop
daa
frstor
popf
adc
sub
icebp
adc
mov
sub
bound
cltd
popa
jne
dec
es
dec
shlb
pop
pop
dec
or
sub
aas
orb
inc
lret
fcompl
or
pop
mov
fldt
pusha
icebp
test
data16
cmc
mov
jp
mov
fs
mov
das
in
dec
rcll
jmp
mov
test
aas
shll
jge
cli
mov
or
in
sub
call
out
dec
jnp
mov
xchg
repz
subb
outsb
mov
pop
adc
in
pop
sbb
push
xor
jg
or
or
movsl
mov
lret
lret
adc
mov
sub
and
push
nop
xor
shlb
pop
repz
mov
xlat
imul
dec
pop
les
cwtl
jle
pop
and
mull
or
adc
or
adcb
inc
adc
mov
pop
inc
adc
out
xchg
fcomps
adc
xor
mov
or
add
das
and
cwtl
insl
lret
sahf
test
cmp
aas
add
ret
sub
insl
cmp
popa
aam
jo
fwait
push
movsl
ds
adc
aad
xchg
mov
add
mull
xchg
adc
sub
rol
es
add
cli
xor
cmpb
repz
dec
sbb
adc
mov
push
cltd
aam
or
stos
aaa
sub
sti
sbb
lea
xchg
push
sti
test
xor
inc
mov
mov
fmul
and
xchg
pop
lret
leave
daa
sub
cs
cmpsl
aad
inc
fld
call
repz
xor
mov
pop
mov
stc
out
jae
adc
daa
jns
ss
push
or
add
repnz
fsubs
inc
push
jmp
lahf
pop
pop
subb
xchg
add
cmp
add
push
outsl
xlat
push
insb
test
add
clc
sbb
rorl
xorl
sti
test
jnp
adc
dec
xor
and
inc
pop
imul
inc
pop
insl
cltd
and
lea
pop
push
dec
cwtl
into
sbb
test
stc
xor
into
push
mov
adc
pop
mov
sub
lock
xchg
fistl
xchg
jno
call
jp
push
arpl
inc
in
dec
aad
adc
divb
loopne
add
push
es
loop
in
out
sub
cmc
sbb
jp
pop
outsb
push
js
push
jns
add
test
sub
dec
loop
pop
ss
dec
out
mov
ja
aas
jae
shr
mov
push
sbb
jb
xchg
ljmp
lahf
jns
sub
out
sub
call
adc
xchg
push
icebp
mov
scas
fldcw
sub
cli
ljmp
cmp
mov
test
xlat
mov
lcall
orl
push
jl
mov
rcll
imul
out
pop
cwtl
lods
lds
inc
or
loopne
sbb
pop
leave
xlat
adc
dec
imul
ljmp
adc
je
sbb
lahf
scas
insl
out
les
jno
xor
imul
cld
xchg
pusha
int
mov
mov
sub
jge
test
sub
mov
xor
dec
push
mov
lods
mov
ret
int
mov
jl
xchg
pop
mov
cmp
leave
sbb
adc
add
fcmovbe
fidivl
mov
cmpsl
xor
mov
stos
outsb
and
and
pop
push
scas
push
hlt
aas
add
jbe
test
sub
sbb
inc
jbe
stc
pop
adc
mov
jb
mov
movsb
test
dec
test
in
mov
pop
mov
lds
xchg
sbb
test
sbb
pushf
into
vlddqu
dec
and
daa
sbb
imul
outsb
pop
outsl
fstl
sub
cmpsl
scas
adc
xor
iret
dec
adc
push
xchg
inc
pop
jne
adc
stos
xchg
fidivl
push
dec
xchg
push
adc
loop
jno
jno
xor
inc
dec
bound
dec
fwait
jnp
push
jno
cmp
inc
daa
test
push
pop
inc
stos
mov
xchg
loop
cmp
test
test
repz
out
jnp
mov
cmp
or
sub
outsb
lret
add
pop
ljmp
cmpsb
pop
cltd
cmp
ret
push
notl
clc
fdivs
fnstsw
pushf
loop
or
cmpsl
cmp
inc
mov
mov
cwtl
fbstp
pop
xchg
das
loop
es
sub
cs
jp
cmp
pop
aad
aas
dec
jno
shll
loop
xchg
fdivrp
loopne
mov
fsts
xor
hlt
inc
sub
pop
div
adc
and
mov
dec
jmp
xchg
daa
sub
xchg
push
push
jno
or
mov
repnz
call
leave
outsb
mov
icebp
fadd
daa
cld
jmp
mov
mov
into
inc
insb
std
or
jnp
shrb
lea
mov
xchg
ljmp
lds
aad
ljmp
out
mulb
ljmp
dec
dec
xchg
sub
rcrl
test
sub
sbb
and
insb
inc
lret
dec
or
dec
scas
sarb
or
cmp
cmp
sarb
cltd
test
das
push
xchg
and
jge
dec
enter
xlat
jns
push
sbb
fldl
cmp
xor
in
dec
sub
mov
push
ss
decb
loop
popa
and
imul
int3
ja
push
mov
mov
jno
nop
or
jbe
pop
mov
out
mov
loopne
xor
cmp
cld
push
xor
ja
lds
rorl
lds
fs
sbbb
sahf
push
sub
test
popa
jge
mov
mov
sub
andl
cmpsl
mov
mov
adc
inc
int3
std
dec
popa
aas
int
mov
leave
fists
jp
fdivrl
gs
adc
ret
cmp
jp
aad
ljmp
sbb
and
lahf
ja
push
push
aaa
xchg
mov
mov
fiaddl
icebp
dec
add
xchg
popa
js
add
in
mov
cltd
xchg
sarl
int
xor
cmp
sbb
jns
sar
adc
inc
xchg
addr16
adc
and
out
pop
test
sub
dec
dec
jo
cmp
pop
fmuls
jns
add
inc
adc
mov
inc
mov
cwtl
sub
sbb
mov
dec
clc
repz
sub
and
dec
arpl
adc
sbb
sar
or
loop
ljmp
fdivrs
adc
test
cmc
cmp
insl
test
add
int3
loopne
sbb
xchg
stos
xor
or
and
jnp
push
repz
xchg
push
in
cmp
push
push
inc
rcll
add
jmp
div
push
dec
push
incb
inc
lods
lea
inc
ja
repnz
or
push
xchg
in
cltd
arpl
inc
jle
mulb
push
sbb
dec
or
ficomps
cli
int3
or
lret
fucomp
and
inc
push
mov
sbb
mov
pop
push
aas
xchg
add
or
pop
leave
push
adc
imul
addb
lret
inc
ret
sub
divl
cmpsb
mov
add
inc
sbb
sub
enter
out
lock
mov
jle
add
adc
cwtl
and
mov
call
push
jnp
je
xor
cs
adc
in
add
pop
mov
cmp
mov
mov
cmp
mov
inc
xor
outsl
add
sbb
push
jl
adc
hlt
xlat
and
lahf
lcall
push
repnz
inc
insl
rcrb
pop
mov
cmp
mov
mov
fldcw
pop
sbb
cmp
mov
addr16
mov
imul
pop
sub
inc
ret
pop
mov
cmpsb
cwtl
fisttpll
pop
add
testb
andl
stos
xchg
inc
jb
fwait
push
sahf
adc
fs
int3
fwait
push
in
sbb
into
sti
push
mov
jbe
push
icebp
and
push
xchg
int3
lock
orb
jno
cmp
insl
enter
addb
cmp
xchg
inc
xchg
mov
pop
sbb
sbb
xchg
add
jne
or
dec
lds
inc
imul
ljmp
dec
push
mov
xchg
dec
mov
sbb
fildl
jmp
pop
aad
mov
mov
mov
divl
fists
mov
adc
pushf
or
jl
xchg
pop
mov
into
adc
pop
fsub
jne
push
cmpsb
int3
push
loop
sub
cli
dec
or
pop
pop
shrb
mov
push
jb
int3
push
or
push
divl
sbb
sub
out
or
cli
and
in
xor
ficomps
rcrb
mov
es
aam
inc
add
inc
jo
push
push
push
mov
or
aam
cmpsb
sbb
insl
es
pop
pop
dec
xor
and
ljmp
out
jmp
cmp
pop
or
jg
cmp
push
in
sub
sarl
xor
mov
cmpsb
and
rol
mov
xchg
pop
scas
add
jg
inc
lock
int3
mov
fwait
xchg
mov
or
ss
test
mov
inc
xchg
jl
notl
add
dec
mov
cwtl
ja
sub
xor
cmp
sub
lahf
inc
or
out
fisubl
xchg
je
push
ja
fwait
pop
stc
dec
ds
mov
cltd
pop
call
repz
sub
push
pop
into
ror
sbb
cmpsl
add
push
or
outsb
fstpl
push
mov
pop
mov
popa
test
stos
insb
or
sbb
lret
add
add
and
mov
loopne
cld
scas
out
mov
push
int
stos
pop
mov
aas
sub
add
icebp
movsl
loop
and
adc
push
add
dec
inc
dec
add
add
mov
loop
inc
mov
mov
fs
jae
pop
repz
cmpsl
mov
inc
dec
test
outsl
jg
adc
test
xor
aaa
mov
test
fildl
mov
stc
int
sbb
push
mov
inc
lods
jge
mov
pop
pop
fbld
adc
cmpsl
cmpsb
xor
adc
pop
mov
insb
push
repnz
add
xlat
inc
in
in
in
push
jmp
sub
jae
into
imul
jb
movsl
fisubs
das
mull
dec
and
push
test
pop
packsswb
mov
cmp
jb
into
pop
div
pop
adc
and
int
dec
jg
cmpsb
pop
xor
mov
xlat
test
bound
pop
addr16
or
pop
fcom
push
inc
cmpsb
mov
gs
scas
jb
hlt
das
mov
jnp
imul
push
in
insl
or
mov
dec
das
out
inc
les
imul
or
push
aas
hlt
or
dec
aad
data16
push
push
aaa
ds
pushl
jl
push
push
loope
pushf
mov
pop
dec
mov
pop
pop
lods
mov
dec
jge
add
mov
fistpll
mov
mov
outsl
out
fxch
jge
out
jg
dec
inc
cmc
cmpsb
ret
cltd
xchg
test
or
mov
push
lcall
adc
pushf
mov
and
and
xor
orl
lret
out
lcall
adc
test
mov
adc
mov
sbb
cmpsl
rol
jl
lcall
repz
ss
xchg
imul
or
jb
ja
sbb
and
inc
imul
xor
or
sbb
xchg
jbe
in
push
insl
imul
into
mov
gs
sub
ss
pop
lcall
notb
sbb
jecxz
and
sub
pop
mov
sub
loop
mov
movsl
push
mov
imul
sub
gs
sbb
mov
inc
add
mov
mov
or
negb
scas
xorl
fsubs
jmp
bound
mov
push
mov
mov
mov
lret
out
sub
movsb
inc
adc
mov
push
jo
xor
das
scas
and
pusha
mov
pop
and
fwait
sub
lods
or
push
testl
cmp
repnz
xchg
icebp
loop
aam
cmp
cmp
adc
mov
int3
xchg
inc
cld
add
jns
inc
add
iret
lods
jae
in
pop
or
movsb
dec
fldl
push
cwtl
rcr
sub
mov
in
dec
into
dec
mov
outsl
pusha
mov
or
push
inc
mov
push
xor
mov
cmpsb
push
outsb
jecxz
sbbb
ljmp
mov
jle
mov
and
or
jns
repz
or
jl
aaa
negl
dec
hlt
mov
loop
insb
test
lock
sbb
sub
cmp
or
jmp
dec
xchg
mov
aad
mov
iret
shl
xchg
out
and
push
lock
mull
push
push
mov
cs
in
adc
sub
dec
push
aam
add
fildl
mov
js
sub
sub
mov
scas
push
call
xor
mov
scas
aaa
stc
fistl
sub
negl
pop
xor
push
test
ret
dec
scas
ss
jmp
sbb
fstpt
outsl
pop
inc
fnstsw
dec
mov
mov
sbb
mov
push
dec
dec
mov
roll
dec
sbb
and
fmull
or
jno
dec
pop
das
loop
subb
lods
dec
xchg
mov
icebp
in
loopne
std
cmp
mov
loop
jmp
sub
fwait
jge
repz
jb
push
adc
pop
loop
xchg
mov
push
pop
mov
cmp
cltd
ljmp
iret
sub
nop
nop
lods
xchg
cmp
mov
aad
es
cmpsb
and
mov
pop
pop
sbb
xchg
fiaddl
scas
jp
cmp
push
cwtl
outsl
mov
push
cwtl
mov
sahf
xor
mov
pop
scas
lret
ljmp
rclb
daa
fs
jmp
jo
fnstsw
jbe
das
or
dec
jno
movsb
inc
sub
xchg
rclb
icebp
push
sbb
jo
imul
pop
adc
adc
movsb
jl
cmp
xchg
mov
lods
in
sub
ss
inc
fldcw
sub
push
push
hlt
sub
lock
fnsave
inc
sub
dec
push
data16
add
xrelease
adc
push
js
jle
lret
stos
insl
popf
xchg
and
add
push
inc
mov
je
filds
lret
in
dec
stos
lret
xor
lods
pop
jecxz
stc
and
mov
ret
cmp
jg
ss
dec
cmpsl
movl
popa
xlat
sbb
mov
cmp
aam
pushf
pusha
mov
cmp
loop
ret
mov
xor
cmp
iret
add
cmpb
mov
push
push
jnp
ss
and
push
jo
mov
xchg
in
dec
fwait
aam
cmpsb
mov
cs
push
mov
test
aad
xchg
and
mov
xor
adcl
adc
jae
ret
mov
adc
testb
cmp
fcmovu
cmp
jecxz
test
inc
sbb
mov
xchg
shrb
sarl
aas
shrl
pop
loopne
add
js
dec
mov
mov
or
pop
xlat
aaa
dec
mov
insb
aam
lods
jecxz
xor
jnp
out
daa
cmp
nop
mov
jp
test
mov
sub
mov
jl
ret
mov
or
mov
cmpsl
add
lcall
lahf
sbb
mov
or
aaa
out
lods
enter
dec
cmp
sahf
in
out
cmp
add
das
mov
or
xor
push
mov
pop
sti
xor
sub
pushf
xchg
jge
cmp
pop
add
ss
scas
fcoml
outsb
clc
cli
cmpsl
push
ss
add
stc
cmpsl
loopne
cltd
movsb
vcvttss2si
and
les
pop
leave
das
ds
clc
arpl
sbb
inc
lret
xchg
das
jno
scas
or
sub
push
shll
push
divb
cmp
fwait
xor
stos
insl
jecxz
addr16
mov
int
psadbw
cmc
movsb
jp
and
pop
push
jge
lods
lods
in
int3
jnp
sahf
push
lds
divb
xor
imul
fdiv
mov
add
fsubs
pop
mov
sbb
and
mov
and
repz
adcl
icebp
jbe
mov
push
in
adc
cwtl
inc
loop
sbb
cli
or
adc
lcall
insl
xchg
or
inc
and
iret
std
mov
mov
and
adc
loope
add
fidivs
add
push
mov
jb
mov
mov
test
jmp
or
scas
call
int
and
dec
lea
and
out
inc
lds
pusha
ss
xor
push
inc
andb
in
pop
sub
test
inc
xchg
adc
mov
cmp
jmp
sbb
mov
sbb
fstpl
dec
imul
xor
jge
in
sbb
add
mov
dec
outsb
dec
xor
cltd
jne
int3
push
pop
popf
mov
sub
mov
int3
jle
lds
fsubl
sahf
push
inc
xchg
scas
inc
push
add
push
sub
push
mov
fadd
sbb
adc
mov
lcall
imul
addb
and
push
jo
sbb
xchg
in
dec
push
popa
ret
hlt
pop
xchg
push
enter
repz
insb
mov
cmp
mov
pusha
inc
enter
ja
xor
mov
addr16
push
lret
sti
cmp
pop
jno
push
shll
mov
sbb
mov
add
lret
xchg
cmp
add
shlb
mov
aad
jo
xor
out
sbb
pop
fbstp
jle
push
dec
shlb
jmp
gs
dec
adc
jmp
mov
or
push
ss
pushf
jb
dec
cwtl
sbb
pop
mov
add
loop
or
das
dec
orb
loop
stos
dec
arpl
les
stc
ja
daa
mov
adc
mov
xchg
add
jmp
mov
add
xchg
lret
cmp
mov
mov
sbb
call
sbb
js
lock
stc
addr16
mov
add
ds
jae
pusha
ss
sub
popf
xor
icebp
loopne
dec
out
cmp
incl
and
int
outsl
pop
mov
cli
addr16
mov
aaa
xchg
mov
add
shrl
or
bound
mov
lock
mov
pop
sbb
data16
daa
mov
xchg
add
jb
and
xchg
xchg
ljmp
jno
mov
and
jb
sbb
xchg
adc
adc
sub
sub
lods
stos
shr
inc
sti
dec
imulb
xchg
aaa
sub
js
jecxz
sub
and
in
outsb
add
iret
lods
nop
test
movsl
lahf
xchg
cmp
out
sbb
add
inc
adc
and
aad
lret
or
cmp
pop
cmpsl
push
mov
push
mov
jge
subb
pop
sbb
test
pop
and
mov
popf
fstps
pop
xchg
ror
out
push
mov
adc
xor
mov
adc
filds
or
cmp
fnsave
sbb
in
lods
dec
sub
sbb
in
jg
mov
pop
and
jbe
mov
in
xchg
xlat
sbb
call
or
cmp
popf
cmc
and
jge
and
sbb
cltd
imul
add
inc
jl
or
fnstenv
mov
mov
xchg
inc
loop
call
sbb
dec
xchg
jae
scas
jb
movsw
aaa
mov
aad
out
jl
shrb
stos
mov
and
leave
stos
add
lods
mov
mov
jmp
outsl
or
pushf
and
inc
cwtl
sti
fucom
cs
dec
out
out
loop
stc
insb
cmp
sbb
jb
cwtl
popa
stos
jp
sbb
movsl
jecxz
pop
sbb
mov
jl
fsub
jl
fiaddl
mov
aas
and
fsubrp
sub
cli
push
movsb
jns
cmp
int
mov
add
jmp
addl
xor
push
outsb
lds
xchg
gs
stos
push
leave
ja
add
mov
mov
icebp
es
pop
mov
sub
dec
dec
push
mov
aas
repnz
pushf
es
pop
aas
ja
push
inc
lcall
pop
cmp
sbb
cwtl
cmp
and
mov
pop
cmc
inc
xchg
fs
sahf
mov
push
jge
mov
dec
inc
mov
insb
test
test
decb
xchg
push
xchg
inc
mov
cmp
mov
jne
mov
fnstenv
sti
dec
lea
stc
mov
test
sbb
adc
jns
je
andb
rol
adc
fiaddl
pop
outsb
popa
push
adc
pop
push
popa
je
jp
scas
push
dec
enter
cmpsl
popf
xor
and
enter
in
cmpsl
inc
movsl
mov
cmp
push
adc
jbe
dec
dec
fistpll
in
test
jmp
pop
cmp
and
mov
bound
icebp
mov
out
xchg
push
cmp
xor
mulb
lcall
out
xor
pop
jb
cmp
adc
in
nopl
fwait
sub
cmp
shrb
push
idivb
jg
cmc
or
addr16
mov
push
scas
data16
jo
stos
mov
and
or
add
imul
pusha
lret
sbb
or
mov
int3
mov
dec
push
xchg
and
inc
mov
aaa
xchg
jnp
xor
rol
sti
lret
push
or
push
mov
dec
fists
fwait
loop
aaa
cmp
mov
bound
and
sub
or
dec
mov
sbb
outsb
mov
xchg
imul
mov
xlat
jo
dec
aad
lea
das
push
xor
jge
xor
xchg
sub
dec
jb
or
adc
maxps
and
enter
and
dec
icebp
insl
inc
repnz
sti
mov
cmc
movsb
les
adc
test
mov
loope
mov
pop
insl
das
mov
jl
and
fisttps
shr
adc
out
jmp
inc
xchg
pop
lods
inc
xor
jo
mov
mov
mov
daa
mov
pop
inc
inc
ss
xor
leave
sub
pop
adc
cmp
lods
mov
inc
cltd
out
arpl
stc
jne
ljmp
pop
shl
mov
pop
jg
lods
in
iret
mov
outsl
cli
insl
mov
mov
jb
and
fsubl
jl
or
mov
in
dec
jecxz
dec
fnstcw
call
push
cli
jle
jnp
shrl
aam
into
cltd
leave
pop
mov
xchg
mov
pop
pusha
add
push
adc
inc
ds
cmp
loop
or
dec
push
pushl
repz
das
dec
in
push
inc
mov
mov
sahf
scas
jmp
xchg
hlt
ret
out
jle
pop
cwtl
xor
push
lods
push
lret
call
xlat
xor
or
and
rclb
lcall
push
outsb
mov
push
lcall
cmp
call
adc
or
cld
inc
flds
push
das
les
push
aaa
loopne
sub
sbb
xor
in
jmp
mov
sub
addr16
lea
mov
jle
pop
xor
repz
ja
or
xor
dec
gs
popf
fwait
jae
push
and
mov
clc
int3
cli
mov
xor
out
lea
movsl
jns
push
add
jb
xchg
daa
jle
gs
ds
ds
imul
and
add
adc
gs
dec
loope
pop
popa
sbb
xchg
pop
cwtl
shll
add
out
in
push
pop
mov
rorb
add
icebp
dec
nop
lret
fildl
cmp
insb
inc
pop
mov
pusha
sbb
pushf
and
arpl
shr
loopne
dec
and
lods
fbld
addr16
xorb
sysret
idivb
push
dec
test
mov
insl
not
subb
sbb
cmp
dec
pop
in
lea
stos
lock
cmp
mov
and
test
jmp
pop
xchg
mov
mov
mov
jmp
sub
adc
lea
pop
mov
sahf
adc
adcl
fwait
std
pushf
push
pop
out
enter
outsl
pop
in
xchg
mov
dec
and
mov
mov
cmp
pop
repz
jge
push
test
aaa
pop
pop
sbb
cs
out
lret
inc
xchg
in
push
adc
pop
cmp
imul
test
stos
sbb
cmp
es
ljmpw
xor
cltd
cmpsl
lea
xor
loop
sbb
loopne
adc
dec
movsb
pop
and
inc
fs
mov
fists
adc
and
mov
rolb
add
sbb
fdivs
and
mov
fwait
push
mov
repz
xlat
sbb
cmc
fwait
push
fwait
lahf
jle
mov
sub
lock
cs
lcall
push
dec
lret
xor
out
pop
dec
in
sbb
rorb
mov
push
push
or
ret
adc
add
or
pop
dec
and
pop
rcr
mov
ja
call
mov
cld
stc
ljmp
sti
push
xchg
add
mul
test
les
fwait
cs
jge
mov
xchg
add
jns
in
int
cmpsl
std
and
push
dec
cmp
xchg
push
mov
and
fwait
xlat
jmp
mov
ficoms
and
sbb
fnstcw
test
jns
fs
dec
dec
mov
lds
add
cs
cmp
stc
iret
sahf
dec
aas
shll
in
sub
decl
or
lret
push
aaa
cmc
inc
push
std
das
xchg
divb
push
xchg
jp
add
arpl
push
mov
inc
lret
aam
xchg
and
mov
std
cmp
xlat
inc
mov
lret
pop
ss
or
mov
sbb
mov
xlat
adc
mov
dec
mov
ja
dec
xor
mov
ret
popf
mov
movsl
les
jl,pt
jbe
inc
ffreep
cmp
or
cmp
and
mov
cli
fldl2e
xor
jp
repnz
shll
xor
mov
fstps
scas
out
mov
nop
ret
sub
mov
lahf
ret
push
pop
in
push
jl
add
addr16
incb
and
insl
xlat
inc
and
mov
jmp
xor
or
lea
inc
add
dec
out
mov
aas
repz
repnz
xor
or
and
xchg
push
mov
inc
aam
mov
jmp
mov
scas
cmpsl
cmp
jae
mov
xor
imul
mov
add
aam
xor
xor
adc
add
icebp
push
xor
lods
fcompl
scas
xor
ret
sbb
shrb
mov
lea
jo
jmp
mov
sub
xchg
and
in
pop
ret
sti
int3
repz
add
lcall
scas
inc
push
sub
and
dec
add
leave
mov
xor
out
cmc
jmp
aas
cltd
cmp
in
insl
aas
loopne
push
test
push
dec
jg
fcmovnu
jnp
push
mov
rep
jle
sub
pop
fnstsw
xor
es
push
pop
or
xor
xor
std
jns
mov
sbb
sarl
bound
dec
mov
movsl
sub
xchg
fisttpl
push
add
pop
daa
pusha
arpl
xchg
mov
or
lcall
inc
hlt
fcompl
imul
jg
cwtl
and
std
ds
pop
jb
and
iret
popf
inc
mov
shll
ja
push
stos
lea
push
mov
xor
push
push
pop
push
xor
fnstcw
ret
mov
pop
adc
ret
inc
loopne
push
dec
dec
out
test
sbb
sub
testl
fidivrs
adc
pop
orb
inc
adc
inc
ret
in
cmc
xchg
sub
mov
addr16
add
or
sbb
pop
movsb
enter
outsb
js
jbe
mov
jg
test
add
mov
or
dec
mov
iret
xchg
scas
push
ret
loopne
and
int3
pmullw
push
xchg
ret
jno
es
push
out
mov
in
xlat
and
lock
daa
pop
add
les
pop
fwait
cmp
adc
test
int
lock
or
arpl
sbb
dec
and
test
jne
lods
je
cli
mov
jbe
lods
jae
mov
imul
or
inc
pusha
jecxz
or
cmpsb
pop
push
mov
mov
in
adc
in
pushf
xchg
push
je
cmp
adc
bnd
mov
clc
clc
mov
add
fdiv
hlt
sar
xlat
shrl
sbb
lods
shll
or
push
mov
cmpl
pop
out
cmpsl
mov
lods
bnd
xor
xor
in
pop
lcall
scas
xorl
ss
lock
leave
pusha
add
lods
ret
sbb
or
lods
shl
hlt
push
lods
sbb
pop
or
xor
cmp
jecxz
mov
jae
sub
inc
xor
out
rcrl
sub
xor
dec
cmp
seto
ds
mov
jnp
movsl
and
inc
xor
adc
mov
add
pop
stos
ss
call
and
maskmovq
divl
mov
cmpsl
loopne
iret
sahf
shlb
cmp
and
lea
or
add
adc
push
or
aas
xor
mov
pop
scas
push
in
fwait
cmp
jg
xchg
inc
mov
push
push
das
orb
and
mov
leave
xor
into
hlt
dec
lock
push
inc
fisttpl
dec
je
cwtl
cmp
in
rclb
pop
leave
pop
stc
aas
jne
jl,pt
cmp
in
push
jecxz
sbb
jne
fcoms
jge
push
in
scas
inc
and
mov
outsl
adc
add
imul
or
lds
sbb
pop
xchg
fldt
jno
add
dec
pop
or
xor
fisubrl
pop
das
dec
xor
pusha
loop
dec
push
lea
sub
push
sbbb
leave
jno
pop
sbb
mov
cmc
outsl
sbb
addr16
fcmovnu
cmp
jmp
mov
pop
insl
jmp
pop
sub
roll
cld
push
inc
cmpsl
xor
sub
adc
mov
pop
daa
idivl
sbb
lahf
scas
jmp
push
lcall
aam
or
add
mov
in
mov
and
shrb
pop
cmp
fbstp
xor
test
cmp
sbbl
xor
pop
inc
push
inc
loop
imul
sti
push
out
cmpl
cld
shrl
repz
or
shrl
lock
out
out
and
jns
lea
arpl
mov
jns
lcall
out
xor
mov
lods
inc
frstor
scas
dec
mov
cwtl
jg
sub
aam
pop
push
and
stc
sub
arpl
dec
mov
xor
ds
mov
mov
aaa
insb
cmp
inc
aad
add
dec
and
push
mov
sub
cmp
out
sub
mov
mov
jb
sbb
aam
int
fsubl
xor
push
inc
mov
push
jge
sub
push
adc
lods
test
sahf
shrb
xchg
sti
fwait
rcll
adc
shll
repz
mov
xor
push
xchg
xchg
jno
popf
test
jp
incl
push
sub
sub
cmpsl
movsl
mov
cmp
mov
inc
pop
jne
push
je
call
xchg
inc
mov
int
jbe
seto
mov
stos
loopne
add
fnstenv
test
rol
fcoml
xor
test
enter
xor
or
test
and
sbb
aaa
ret
mov
pop
int3
xchg
cmpsb
push
mov
std
push
sub
jns
loop
xchg
shlb
inc
test
xchg
xor
insl
pop
add
test
mov
pop
out
or
mov
add
sub
cmp
outsl
aaa
test
cli
cmpsb
add
jne
and
pop
dec
sbb
xchg
cli
xlat
or
inc
push
ret
push
bound
pop
mov
incb
and
push
outsl
std
icebp
jg
cmp
jo
mov
cmp
sbb
out
faddl
jg
fdivrs
dec
cmpsl
jb
fistpl
mov
mov
shrl
nop
rcrl
jb
or
pop
jle
or
inc
decb
jno
push
movsb
push
call
pushf
lods
mov
stc
ljmp
sbb
add
push
or
mov
jns
jg
mov
add
xor
pop
inc
xchg
pop
out
movsl
sbb
js
std
in
jp
mov
addr16
xlat
xor
call
jle
test
jbe
pop
adc
aaa
adc
pop
push
adc
and
fs
in
sbb
push
lret
jno
imul
stos
lret
stc
mov
fisubrs
jbe
mov
pop
pop
add
stos
mov
pushf
push
fists
fsubs
mov
enter
add
fs
xor
and
inc
das
lcall
push
mov
fisubrs
add
xchg
pop
lods
test
data16
je
mov
into
jbe
sub
push
test
in
sbb
movsb
inc
jp
stos
push
loope
add
add
insb
cwtl
or
test
mov
bound
movsl
stc
roll
mov
mov
xchg
cs
add
dec
sarb
gs
ja
adc
pop
aam
jl
push
in
es
outsb
pushf
pop
inc
imul
lret
stos
push
jp
lods
notl
ret
dec
inc
out
and
dec
mov
dec
fisttpl
pop
rclb
lods
popa
sbb
in
cmc
cmp
insb
or
data16
out
and
cwtl
mov
fisubl
push
rcrl
imul
inc
mov
imul
jnp
sbb
cmp
daa
ja
lods
cld
inc
fs
or
inc
and
neg
cs
dec
divb
test
sbb
pop
mov
dec
inc
loop
inc
fidivrs
cmovns
xchg
inc
not
sbb
loope
mov
push
inc
pop
shl
inc
stos
xchg
jge
rorl
movsl
shrb
decb
jne
push
mov
pop
shll
fbstp
repz
pop
xchg
cmp
dec
ds
dec
cld
fistl
fnstsw
push
nop
xlat
pushf
seta
hlt
ds
pusha
daa
shlb
push
pushf
imul
dec
pop
sti
sar
mov
mov
cli
dec
jecxz
hlt
fmull
dec
push
and
pop
cmp
je
jl
mov
sub
aaa
mov
push
jecxz
mov
fsubs
adc
daa
fsubrs
jp
lods
pop
mov
or
and
pushf
mov
imul
jnp
dec
shl
mov
mov
jle
outsl
push
scas
cmc
leave
lahf
mov
fistpll
movsl
push
xor
push
ret
and
xor
sbb
pop
mov
in
fisubs
xor
adcl
push
lahf
xchg
push
push
int3
outsb
mulb
push
pop
add
sbb
daa
bound
clc
rolb
pop
and
call
push
jp
mov
int
pop
jle
mov
mov
mov
sbb
and
xchg
jns
xchg
insb
inc
fiaddl
push
jecxz
cmovo
or
loope
mov
cltd
mov
xor
daa
pop
aam
jmp
pop
mov
inc
sub
pop
dec
sbb
fisubrl
adc
mov
out
das
out
aad
inc
stos
mov
repnz
and
stc
xor
jmp
pop
and
faddp
mov
dec
jecxz
fcomp
cmp
insl
gs
mov
sub
pop
int3
mov
ret
adc
sbb
ret
sub
mov
mov
sbb
mov
lods
add
fnstcw
mov
dec
call
stos
jno
mov
cmpsb
cmpsl
nop
xchg
stc
fcompl
imul
mov
adc
lea
mov
sbb
xor
and
sbbl
aam
push
ja
pop
loopne
rclb
and
or
mov
neg
pop
fistpll
inc
je
in
fisttpl
adc
cmp
popa
adc
pop
aam
mov
mov
jmp
jl
sbb
cmp
jmp
movsb
sub
mov
neg
lods
js
insb
fstpt
imul
pop
cmp
sbb
ljmp
addr16
pop
lods
aas
xchg
stc
es
pop
jp
add
out
mov
cmp
dec
jno
xor
addb
xchg
mov
in
jl
es
hlt
rcl
jne
mov
pusha
mov
jg
add
cmpsb
inc
fstl
movsb
cmpsl
out
xor
or
in
jmp
xchg
push
or
jecxz
ss
enter
fstpl
sbb
mov
push
sti
test
lea
cli
push
and
jle,pn
xlat
sbb
std
sti
sahf
inc
sub
push
mull
sub
jmp
add
cmpsb
mov
scas
int3
lret
mov
les
sub
sarl
xor
pop
sub
div
pop
xchg
inc
lea
sub
aad
pop
xor
push
aas
xchg
adc
shl
fmull
jg
loopne
add
xlat
cmc
fcmovnbe
aam
lds
adcl
dec
jno
jmp
cmc
into
adc
push
add
scas
sbb
or
scas
sbb
lret
and
das
inc
in
push
stos
xor
jecxz
push
sti
daa
jbe
fiadds
out
push
sbbl
mov
out
sbb
jns
jl
movsb
mov
mov
cli
aas
imul
ret
or
nop
mov
mov
jg
imul
sub
sbb
pop
jno
pop
test
and
fisubrl
and
inc
repz
inc
adc
xchg
mov
xchg
add
cmc
jg
pop
rorl
mov
mov
sub
jg
sbb
in
inc
push
cmpb
daa
jle
mov
cs
xchg
ret
fidivl
scas
shl
dec
lds
pop
fwait
push
sbb
or
or
fistps
fildl
adc
cltd
mov
imul
cmp
jmp
jbe
rclb
shlb
sarl
mov
out
idiv
xchg
jp
xchg
test
dec
xchg
rorb
push
adc
data16
jb
adc
jg
outsb
push
adc
mov
xlat
dec
outsb
xchg
dec
mov
sub
push
or
cltd
cmpsl
fildl
insb
test
inc
and
add
jge
inc
int3
inc
push
and
and
cmp
cs
dec
mov
cmp
and
andl
push
test
pop
cmp
leave
inc
or
adc
inc
sub
xchg
rclb
cmp
push
xchg
add
jae
movsl
jno
cwtl
jl
cltd
adc
push
jmp
and
fmuls
loope
push
sarl
mov
jp
iret
in
imul
push
fwait
push
inc
loopne
stos
or
popa
cmp
loop
outsb
dec
frstor
arpl
or
mov
movsl
fiaddl
jmp
jecxz
ss
hlt
pop
stos
xor
or
inc
repz
outsb
or
bound
mov
mov
outsl
adc
jae
lods
cs
sarl
pop
fstpt
inc
int
and
sbbb
dec
push
and
stos
sahf
negl
stc
add
ljmp
pop
sbb
sbb
dec
mov
mov
ret
mov
mul
mov
and
inc
test
mov
and
imul
xor
or
add
cli
pusha
stc
sti
lock
inc
push
sar
nop
dec
fisubrs
mov
stc
push
jl
gs
and
add
adc
xchg
sub
sbb
jo
movsb
test
call
mov
fmull
pop
jno
fsts
xchg
push
mov
inc
dec
pop
hlt
jno
ljmp
xor
xor
ds
rol
fbstp
sub
cmpb
hlt
outsb
sarl
insb
push
inc
mov
push
jns
lods
adc
pop
pop
pop
sbb
ss
xchg
push
iret
mov
ljmp
int3
jne
jnp
xchg
sbb
and
rorb
sub
cmc
xlat
dec
xor
xor
mov
enter
mov
cmp
xor
nop
dec
cmpsb
loop
out
daa
int3
mov
popa
insl
sti
hlt
jo
lock
ret
push
fdiv
sub
sub
jl
or
add
int
bound
ret
pop
mov
outsl
cmp
adc
hlt
xchg
popa
sbb
pop
in
jg
pop
jmp
pop
inc
sbb
ret
cmpsl
dec
adcb
dec
mov
push
cmp
mov
scas
cld
push
pop
jecxz
add
mov
cmp
into
adc
repz
push
mov
cmpxchg8b
enter
add
in
jne
add
andl
pop
xchg
insl
pop
pop
add
mov
sbb
jl
cmpsl
cmpsb
xor
divl
add
add
cmpsb
sbb
lds
aam
add
cmp
mov
cltd
outsb
cmp
sbbl
notb
inc
mov
xor
sti
fwait
int3
and
xlat
lea
mov
add
pop
pop
imul
push
ret
mov
adc
adc
ret
repnz
inc
jbe
lods
cmc
cmp
scas
loopne
cmpsb
mov
pop
jl
outsl
push
lret
inc
daa
jle
jo
nop
sub
adc
in
push
aaa
in
jno
xor
cli
addr16
dec
in
dec
scas
gs
adc
outsb
pop
dec
scas
add
ss
fisubrs
scas
sub
or
scas
pop
sub
int
filds
and
lea
xchg
pop
pop
mov
movsl
sbb
sub
mov
mov
addr16
rorb
lock
inc
imul
push
or
xor
imul
dec
mov
or
mov
inc
cld
push
nop
push
lods
int
std
imulb
push
xchg
mov
pop
and
fdivs
xchg
xchg
or
xor
sub
je
fwait
or
lret
push
idivb
pop
scas
adc
and
enter
or
pusha
push
loopne
test
addr16
xlat
mov
add
arpl
sahf
jno
cmpsb
mov
nop
mov
jne
jg
mov
lods
orl
inc
mov
sub
shrb
cmp
insl
push
jb
popf
lret
fnstsw
pop
add
sti
stos
and
jge
mov
mov
or
imul
dec
mov
push
push
fs
push
and
pusha
jno
inc
dec
sbb
pop
mov
std
push
cmp
jae
mov
xorb
out
xlat
xchg
pop
mov
addr16
lret
dec
pop
leave
imul
adcl
add
xor
jle
and
jae
es
mov
ret
mov
loop
xchg
dec
jmp
adc
cmc
test
insb
xchg
sbb
ljmp
rcl
and
adcl
or
xor
jo
pop
and
push
rolb
popf
mov
pop
sahf
hlt
add
sbb
push
popf
xchg
rcr
mov
push
or
repnz
popf
das
jb
pop
xchg
aad
jle
in
mov
ret
pop
adc
cmp
dec
adc
adc
addr16
sub
mov
into
ss
inc
xor
dec
mov
sahf
jo
and
fistl
in
cmp
cmpsl
sahf
xchg
mov
pop
outsl
sub
jbe
in
mov
ds
adc
movsl
shl
pop
xchg
pushf
into
movb
in
repz
mov
call
leave
pop
nop
jo
arpl
jecxz
in
je
xlat
mov
mov
or
mov
cmp
jns
mov
stos
jnp
pop
pusha
int3
sbb
and
adcb
mov
rolb
aas
cli
incb
sub
test
dec
cltd
imul
les
mov
leave
and
notl
adc
adc
arpl
pushf
cmp
jo
movsl
test
adc
xchg
jo
or
dec
or
cli
jge
and
cmp
sahf
cmp
push
popa
cmp
sti
lea
loopne
inc
add
mov
jb
sub
loop
cld
mov
out
or
and
sub
movsl
cli
inc
dec
iret
xor
sbb
data16
xchg
mov
push
inc
adc
add
mov
sub
pop
dec
inc
and
popa
add
test
pop
shlb
in
pusha
scas
call
inc
jmp
jne
sub
loop
add
pop
push
xor
insl
inc
cmp
or
lods
push
dec
push
dec
pop
nop
fisubs
sti
incl
test
mov
adc
and
test
loopne
xchg
mov
jae
nop
pop
test
aam
cmp
add
pop
sbb
rcr
add
mov
push
clc
adc
add
test
ds
add
push
jae
cld
dec
mov
xchg
adc
and
cwtl
dec
add
xchg
jg
mov
sub
xchg
ss
pop
sub
repnz
dec
je
mov
and
or
cmp
sbb
cmp
lret
popf
jno
mov
in
stos
push
cs
ds
cmc
outsb
in
mov
jns
mov
mov
fwait
popf
das
inc
stc
sub
pop
lret
mov
add
adc
jge
popa
mov
cwtl
stos
pop
sub
pop
jae
mov
mov
add
outsb
test
into
cwtl
or
pop
dec
mov
rorb
jp
xor
pop
lea
cmp
ret
clc
cld
ja
jecxz
sbb
clc
adc
push
jno
dec
add
ret
mov
mov
bound
pop
faddl
xchg
xchg
ja,pn
xchg
sub
push
xor
dec
sbb
imul
fs
or
ror
roll
and
repz
fwait
test
leave
out
and
push
out
adcl
enter
xor
in
jb
fnsave
jmp
loop
jae
scas
pop
or
ja
sahf
adc
push
push
mov
mov
mov
jae
scas
loopne
xchg
pop
movsb
mov
sbb
sahf
pusha
dec
in
or
lcall
addl
mov
stos
xchg
int
mov
les
in
or
push
cmp
xor
adc
mov
cmp
dec
sbb
rcr
mov
scas
dec
and
cmp
add
sub
push
fists
cmc
mov
cltd
and
dec
mov
inc
mov
push
mov
or
mov
jnp
push
or
jmp
bound
add
pop
pop
fwait
inc
test
pop
ret
lret
ds
pop
push
or
inc
add
stos
inc
mov
dec
call
jne
mov
addr16
ret
pop
xchg
push
faddl
mov
shl
pushfw
popa
in
repz
xor
xor
cmpsl
cmp
dec
test
sub
jg
pop
subl
jecxz
js
add
mov
cwtl
in
mov
rcl
inc
lret
jbe
cs
pusha
dec
ret
pop
mov
mov
cmp
and
xchg
dec
xchg
push
icebp
cmp
aaa
ljmp
enter
incl
push
les
fcoml
push
lahf
popf
call
push
xchg
fdivrl
shlb
pop
ja
inc
jb
mov
fld
scas
push
sbb
sbb
fistl
leave
sbb
or
pop
fists
into
in
push
in
aam
testl
je
aam
stos
and
sbb
lret
pop
insb
adcl
mov
xor
jp
rcr
movsb
cmc
cmp
jno
jae
add
mov
push
adc
xchg
add
mov
pusha
mov
cmc
insb
std
xchg
out
dec
xchg
lret
push
or
cmp
mov
adc
mov
ds
cmp
xlat
sbb
push
dec
mov
fistps
movsb
inc
in
push
inc
jne
bound
pop
xchg
pop
fldcw
mov
mov
jbe
lcall
cltd
mov
jl
in
push
sti
ss
cli
or
and
cli
das
pop
adc
pop
dec
aad
mov
aaa
arpl
dec
in
xor
aad
cmc
sub
in
mov
lahf
sub
mov
scas
ror
mov
and
xchg
dec
and
int
dec
sbb
jl
cmp
xchg
shrl
mov
insb
out
pop
out
mov
pusha
cmp
adc
fdivl
add
jns
lds
xor
repz
shrl
cmp
ret
aad
sub
negb
leave
test
and
dec
mul
bound
scas
out
or
jle
xchg
rcll
nop
jnp
pop
xchg
lods
ret
push
shl
movsl
test
cmp
mov
xor
data16
lods
mov
rcr
sbb
fisubs
iret
mov
cli
out
adc
push
std
bound
idiv
mov
push
sbb
cmc
movsb
sub
lahf
lods
push
sbb
lcall
pop
add
lea
repz
or
pusha
adc
add
fdivl
in
daa
idivl
movsb
cbtw
cltd
ja
push
shrb
and
add
notb
dec
ja
fisubrl
or
push
andb
sbb
xchg
arpl
pop
inc
sub
dec
inc
sub
xor
insl
lock
test
stc
test
push
icebp
repz
popf
dec
andb
bound
and
mov
pusha
pop
mov
out
lea
jb
jne
call
sbb
jne
inc
out
add
pushf
in
sbb
dec
clc
rcll
or
scas
pop
mov
dec
push
sbb
xorl
dec
cmp
enter
loope
call
dec
test
xlat
jae
push
cltd
push
test
ret
push
jecxz
icebp
loop
jae
or
mov
adc
dec
insl
sar
ror
or
sbb
ds
addr16
dec
pop
xchg
pop
add
push
es
add
jo
aad
add
sub
out
push
add
mov
ljmp
mov
outsb
ficomps
jecxz
mov
pop
sub
xchg
rcl
xchg
lret
pop
mov
mov
mov
sar
shrl
jle
hlt
test
xchg
xlat
sub
cwtl
mov
cmp
push
mov
push
test
out
xchg
sahf
fnstenv
test
sbb
outsb
mov
std
or
sbb
sbb
out
jecxz
inc
roll
sbb
int3
dec
adcl
jno
stos
mov
push
addb
mov
mov
sub
pop
int3
pop
test
fs
sti
out
leave
in
enter
ljmp
out
lods
push
daa
scas
xchg
aam
pop
movsb
icebp
in
cwtl
cmp
xchg
in
mov
cmp
stos
adc
neg
inc
scas
enter
sti
mov
push
xchg
jne
lods
cmp
lods
pop
movsl
mov
sub
mov
add
mov
mov
inc
push
in
aad
std
pop
dec
shr
ror
push
stos
clc
sub
jge
es
xchg
pop
xor
pop
dec
cli
aaa
dec
aas
jle
sti
push
mov
jge
sbb
lods
lret
mov
inc
jbe
dec
xor
xchg
mov
int3
test
daa
rcrl
xor
xchg
in
ja
lret
mov
push
cltd
cmpsl
fiadds
xor
dec
bound
xor
jle
imul
add
jb
inc
sbb
cmp
sub
pop
pop
cli
push
lods
push
xchg
mov
loope
cmp
xchg
outsl
out
nop
dec
lds
jbe
push
into
cmp
or
aaa
mov
mov
xchg
fdivs
mov
xor
cmp
jecxz
and
test
jp
sahf
jns
dec
insb
pop
insb
scas
call
jmp
std
daa
movsb
jg
sahf
pop
cwtl
aaa
imul
mov
and
idivl
roll
pushf
mov
inc
dec
push
sub
pop
cmp
shrb
mov
out
jne
in
shl
roll
sti
inc
mov
mov
ret
mov
xchg
push
divl
xchg
ljmp
lcall
stos
lret
std
das
adc
jbe
es
push
jns
imul
mov
stos
jno
or
rcrl
ds
cmp
sbb
js
sub
out
and
mov
xlat
xchg
mov
xchg
movsl
push
je
push
push
lahf
insl
imul
add
jp
lea
ja
movsl
aam
cs
out
ljmp
mov
gs
je
mov
fs
sbb
stos
scas
loope
imul
lods
sti
xchg
ja
sbb
sub
jmp
cs
mov
fsub
lahf
aam
popf
subl
and
or
stos
sar
pop
sub
sbb
pop
xor
es
or
lock
mov
ret
pop
cmp
mov
sub
js
push
jbe
jnp
das
imul
lahf
dec
add
xor
mov
mov
jno
inc
push
popf
pop
and
fsubp
pop
jl
pop
les
mov
int
lods
xor
mov
push
bound
and
or
in
cli
rcrl
xor
xchg
pop
and
popf
adc
cmp
or
test
mov
ds
test
or
repnz
pop
test
and
mov
repz
cltd
loop
push
rorl
inc
fnsave
pop
cmp
xchg
leave
add
dec
mov
cmp
aas
push
cmc
jbe
rolb
mov
fs
jae
cltd
mov
hlt
fsub
adc
push
movsb
or
cmp
add
mov
adc
movsl
aad
xchg
adc
cmp
inc
cmc
inc
pop
xor
add
adc
add
das
hlt
and
pop
xchg
icebp
sahf
xchg
push
sbb
aam
cmc
mov
das
dec
lock
or
add
dec
adc
outsl
test
inc
aad
mov
jae
mov
cmpsb
aad
iret
jnp
int3
mov
adc
mov
xor
into
loop
lock
lcall
jle
stc
mov
cmc
push
pop
ds
mov
sub
fwait
ds
test
and
sub
lcall
push
inc
jg
pop
in
add
push
cmp
and
push
pop
mov
lods
cli
cwtl
cmp
cld
test
nop
ja
or
xchg
dec
xor
cmp
scas
inc
push
adcb
cmpl
ret
add
mov
shr
nop
repz
and
popf
adc
aad
mov
popa
jbe
pusha
bound
repz
sbb
push
push
setle
shlb
call
cltd
pop
mov
cmp
lds
call
push
sarb
jp
ja
test
inc
sbb
inc
stos
xlat
bound
pusha
xor
push
add
cmp
sub
fwait
scas
mov
xchg
push
xor
ret
rorl
lods
stos
js
jb
dec
clc
addr16
push
jb
sbb
or
and
imul
loopne
cs
jns
or
push
push
hlt
jae
and
mov
dec
and
pop
sti
lds
cld
jecxz
mov
add
mov
pop
jb
lods
arpl
add
jns
ss
mov
pop
arpl
jns
mov
es
pop
pop
inc
cmpsl
xlat
adc
inc
out
lret
xchg
pop
cmc
imul
mov
mov
rorl
test
xor
mov
sahf
scas
fistpl
push
mov
out
xor
cmp
ds
adc
lcall
lods
lods
jp
in
stos
pop
repnz
imul
mov
inc
popl
aad
xchg
aaa
push
push
stc
mov
aas
cmc
cltd
mov
mov
push
jmp
xchg
jns
mov
mov
and
mov
js
jmp
mov
xor
jmp
daa
imul
pop
pop
inc
add
xlat
insb
lock
decb
stos
addr16
cwtl
mov
rcl
jbe
lods
sti
fsubs
push
inc
dec
test
mov
subb
test
out
inc
mov
aam
xchg
mov
movsb
mov
pop
mov
ss
movsl
xor
fs
mov
mov
repz
inc
or
fdivrs
add
lds
xor
mov
ficompl
popa
movsb
pop
jmp
adc
mov
stos
sub
jno
and
and
test
shl
bound
mov
jp
cmp
in
pop
daa
stc
out
xor
inc
movl
pop
stos
cmp
mov
subl
jbe
sub
test
jge
xor
push
add
in
lret
sub
push
imul
lods
add
popa
cli
mov
mov
jae
enter
sbb
mov
pop
pop
xchg
clc
jmp
push
shrl
jecxz
sarl
jo
inc
or
test
idivb
not
pop
mov
cwtl
in
loop
mov
push
in
stos
cmc
dec
fmull
xchg
push
mov
add
and
outsb
scas
call
mov
arpl
adc
cli
out
ret
pop
popf
fildll
loop
outsb
rorb
movsb
out
rorl
push
jno
inc
imul
ss
xor
push
ret
dec
xchg
jge
jecxz
cld
jl
in
mov
hlt
imul
xor
loope
xchg
pop
js
sbb
pop
sub
scas
inc
mov
cmp
push
rcll
push
inc
and
jb
and
xor
cltd
mov
lahf
pusha
clc
sbb
lods
stc
dec
xchg
shl
pop
sub
xchg
or
lods
mov
aad
out
or
clc
pop
stc
jns
mov
mov
mov
push
les
dec
arpl
push
mov
cmp
xor
pusha
lds
push
sbbl
fsubrs
or
sarl
push
and
mov
and
pop
cmpsl
mov
cmpsl
shrl
in
pop
daa
mov
ret
cwtl
xor
popf
adc
imul
mov
clc
lock
xlat
add
das
xchg
xchg
movsl
rolb
fidivl
int3
and
outsl
dec
test
inc
insl
and
xchg
sbb
adc
jp
test
pop
lahf
subl
add
mov
xor
mov
jo
stc
jnp
subb
push
push
movsl
inc
push
add
test
cmp
mov
leave
lods
aas
push
inc
inc
in
sbb
adc
sahf
mov
and
aam
or
mov
cmp
jecxz
clc
jo
push
sbb
mov
in
mov
shll
jnp
iret
int3
pop
loope
jns
cmp
or
xor
fwait
xchg
jno
xchg
cwtl
mov
fisubl
inc
sar
aam
out
daa
adcl
addl
push
jbe
daa
es
out
and
pop
and
and
daa
scas
int
jg
ret
mov
outsb
je
mov
repz
and
xchg
mov
mov
dec
popa
sub
mov
loopw
fcmovbe
or
mov
dec
movsb
pop
push
dec
adc
stos
xor
nop
jl
cmp
sub
xor
shll
fdivrl
sub
movsb
loop
and
adc
ror
dec
mov
cmp
jmp
fists
add
mov
fiadds
or
in
cltd
sbbl
dec
mov
imul
add
test
and
adc
sbb
test
clc
dec
mov
insl
push
mov
std
pop
fldl
mov
jnp
mov
add
or
fimuls
jle
lret
fnstenv
mov
dec
mov
xchg
pop
in
xchg
push
in
push
jle
pop
insl
push
cmp
mov
xor
jnp
mov
push
outsb
shr
pop
cltd
jge
cmpsl
outsb
sbb
inc
loopne
push
sbb
lods
roll
cltd
stos
sub
inc
out
sarl
pop
addl
loope
ds
aas
lods
adc
jg
cmpsl
dec
aaa
add
mov
xlat
je
flds
mov
inc
sub
xor
push
adc
push
insl
sbb
mov
loope
cmp
daa
test
adc
add
sbb
shlb
dec
daa
pop
xchg
sbb
leave
jae
adc
pop
cmc
dec
mov
mov
shl
icebp
mov
std
aam
insl
leave
push
push
push
test
ljmp
imul
fstps
popf
int3
pop
das
je
add
inc
adcl
stos
in
jg
in
push
mov
out
enter
and
bnd
adc
and
leave
and
or
mov
push
in
jnp
pop
cmpsl
lahf
mov
push
adc
jae
rcrl
or
add
inc
ficompl
test
aad
lcall
pop
push
out
mov
sbb
mov
insb
insb
fnstsw
add
pop
gs
xchg
into
dec
out
and
sub
lret
inc
fdivp
int3
lahf
xor
ret
jle
popa
xor
arpl
jb
or
cmp
fwait
mov
repnz
sahf
mov
lret
test
loope
inc
arpl
sub
dec
mov
and
cmp
cld
mov
adc
jbe
dec
cmp
mov
lret
ja
mov
adc
pop
cmp
push
mov
mov
stos
xchg
ret
xchg
adc
dec
xchg
mov
sbb
xor
andb
pop
test
adc
insl
test
cmpsl
popf
stc
mov
ja
test
push
inc
adcl
shrb
push
bound
mov
lcall
or
mov
into
fists
int
test
jmp
mov
es
scas
aad
adc
ds
enter
xchg
rcll
adc
cwtl
xchg
data16
fldl
or
pop
mov
fldt
lret
outsl
test
fcomp
pop
sbb
cmpsb
fdivr
je
sub
mov
cmp
mov
xlat
and
dec
xor
xchg
das
loopne
pushf
js
sub
divl
jns
out
jnp
imulb
push
cmp
popa
sub
or
push
add
or
rclb
out
inc
pop
push
fsts
xchg
inc
movsl
pop
or
sbb
jae
fistpll
or
pop
ja
sub
and
xor
fdivl
mov
inc
call
hlt
xor
sbb
add
dec
and
mov
push
stos
in
xchg
mov
xor
mov
adc
mov
mov
cmp
cmp
fldcw
mov
movsl
xchg
shll
pusha
mov
daa
test
sbb
je
out
fs
stos
mov
and
loopne
inc
cmpl
add
lods
pop
sub
xchg
into
inc
dec
icebp
cltd
dec
pop
gs
test
sub
xchg
mov
aam
push
mulb
sub
hlt
sahf
jmp
movsl
mov
stc
leave
cmpsl
mov
xchg
test
cli
mov
popf
add
jo
xchg
rcrb
cmp
movsb
mov
in
or
xchg
push
jne
xor
mov
shrd
or
shll
sahf
inc
pop
mov
enter
arpl
iret
cli
mov
jne
movsl
push
xor
push
out
in
pushf
fildl
sbb
xlat
xor
loopne
push
xor
and
std
jbe
ror
mov
cmovge
inc
cmp
pop
pop
xlat
pusha
ret
call
push
jle
pushf
ja
xchg
add
test
popa
mov
outsl
es
xlat
lahf
js
jmp
repnz
lock
pop
jne
push
cmp
mov
cmpsl
sub
sub
push
push
mov
pop
cmc
js
pop
add
pop
std
pop
test
cmpsb
outsl
testl
pop
or
pop
jle
mov
ja
mov
mov
or
pop
mov
mov
ds
jne
mov
inc
xor
jno
mov
leave
xorl
sub
push
lock
cmpb
cmp
sbb
daa
xchg
jp
mov
aad
int3
ret
xchg
xchg
sub
stos
adc
push
imul
cmp
in
push
aaa
pop
orb
test
sti
and
pop
add
mov
push
and
fwait
lret
and
xchg
jo
fnstcw
add
xchg
iret
mov
inc
ret
in
add
mov
pusha
les
dec
push
dec
nopl
nop
popf
xchg
pushf
sbbb
aad
imul
gs
incb
sub
pop
adc
dec
rolb
jnp
xor
testb
or
rcl
xchg
rclb
cltd
ficomps
mov
sub
loope
xor
add
or
arpl
mov
mov
lods
stos
pop
outsb
icebp
fdiv
push
pop
enter
add
out
mov
push
mov
loop
lcall
cmpsb
std
ficoml
ret
lock
shrl
movsl
les
imul
lahf
cmpsl
scas
fwait
xchg
movl
push
icebp
lea
adc
sbb
cwtl
test
pop
inc
outsl
bnd
cld
add
call
dec
daa
lret
cmp
lea
sbb
movsl
cli
ret
cmp
icebp
loopne
push
fsub
out
push
add
insb
fidivl
mov
and
shll
add
mov
ss
cltd
inc
dec
or
jp
cmp
ret
lods
sub
adc
mov
aaa
sbbb
xchg
sub
pusha
dec
mov
fs
mov
adc
xrelease
sub
test
mov
imul
shr
pop
pushl
gs
push
add
hlt
or
add
pusha
mov
pop
in
inc
cmp
lcall
jp
fistpl
es
cmp
or
sbb
push
lret
inc
sub
shll
daa
gs
cmc
icebp
pop
in
fwait
mov
mov
push
xchg
xlat
hlt
mov
addl
sbb
bound
mov
xor
dec
push
je
arpl
mov
push
xor
inc
sbb
mov
jg
push
outsb
inc
cmp
or
and
jb
pop
mov
rcll
or
jo
ficoml
mov
xor
pop
ret
mov
inc
aam
test
mov
enter
and
xlat
das
test
cwtl
add
xchg
pop
push
mov
data16
lcall
dec
and
loope
push
aam
xchg
mov
outsl
push
mov
push
mov
addr16
daa
push
int3
data16
hlt
out
std
xchg
push
xor
in
xchg
mov
xlat
roll
test
addr16
sbb
insb
int3
imul
cwtl
pop
cs
inc
inc
xchg
pop
aad
aaa
imul
sbb
cmp
ja
cmp
arpl
inc
fisubrl
or
xchg
sub
and
imul
lods
mov
movsb
insl
nop
jge
enter
push
mov
out
cld
test
sarb
dec
fdivrl
lods
jle
xor
add
lahf
jns
add
in
icebp
push
push
lahf
jl
mov
add
arpl
adc
aaa
cmp
adc
dec
lcall
adc
insl
sub
imul
and
mov
addb
lcall
xor
jo
das
fwait
push
mov
cs
mov
and
xchg
xlat
xchg
in
shl
sub
cmp
jae
jecxz
inc
fcmovbe
mov
inc
movsl
jge
xadd
aas
lahf
add
ror
and
enter
adcb
mov
cmp
lods
mov
sub
jne
movsl
add
xchg
dec
push
xor
scas
into
sub
jns
mov
jbe
test
aaa
sub
or
lea
jae
ljmp
aaa
push
pop
push
das
daa
dec
sub
in
lcall
in
jle
sbb
bound
rorl
sahf
push
lods
and
leave
push
push
pop
shlb
sbb
adc
test
sub
les
enter
mov
subl
int
pop
mov
iret
ret
dec
lcall
fiadds
pop
aaa
aam
add
pop
add
loope
daa
in
stos
int
repnz
cld
shll
sub
les
xchg
jmp
mov
outsl
imul
pushf
sbb
icebp
mov
outsb
repz
lods
roll
je
ljmp
jmp
and
mov
mov
aas
push
xchg
pushf
imul
daa
out
inc
xchg
cmpsb
aas
jl
mov
dec
jge
xchg
jge
add
push
pop
mov
mov
lock
dec
cli
jmp
pop
orl
dec
call
or
and
fldl
cmp
enter
popf
loope
mov
push
rcll
sbb
inc
test
lods
cmpsl
sbb
fiadds
repz
ljmp
into
scas
lret
push
jge
js
repz
imul
add
out
jae
ljmp
xor
mov
inc
dec
jecxz
pop
mov
rcrb
mov
pop
jbe
out
xchg
adc
stc
scas
inc
ja
mov
es
aad
ficomps
xor
or
ss
or
sbb
fidivrl
stos
sub
xchg
shl
mov
push
cmp
imul
mov
and
adc
and
pushf
adc
sbb
adc
lds
xlat
fists
and
adc
orl
sbb
adc
sub
clc
inc
pop
dec
xchg
cli
out
int
negl
sti
aad
aam
and
cltd
out
sub
sahf
xlat
loope
mov
psadbw
inc
loope
mov
adc
in
imul
adc
lahf
fsts
mov
loope
add
inc
out
rol
add
iret
movsb
jg
pop
out
xchg
popf
jo
lret
mov
sti
inc
lods
incb
aas
es
lods
dec
clc
xchg
add
jle
inc
pmulhuw
add
push
outsl
jp
sbbb
lock
adc
loope
aas
fidivrl
jno
cltd
outsl
xor
pop
jg
push
lahf
xlat
in
lods
xchg
jbe
sub
xchg
cmp
in
dec
mov
movsb
xor
jge
sub
mov
insb
adc
sub
xchg
out
stos
xchg
and
andb
push
sub
les
stos
cmp
shll
pop
sub
in
sbb
sub
mov
mov
cmp
xor
sbbl
fistpl
jg
adc
mov
pop
push
push
clc
gs
add
dec
insb
leave
and
fsubp
mov
outsl
mov
jge
stc
inc
mov
lods
pop
out
xchg
jne
cli
test
nop
mov
xchg
add
stc
xchg
mov
pop
push
or
cmpsl
jle
fsubrs
imul
stos
pop
dec
out
and
inc
loope
cmp
cwtl
ret
xchg
stos
adc
cmp
fisubl
or
out
jno
stos
std
inc
and
outsl
pop
inc
outsl
sbb
loopne
adc
outsl
ret
push
or
mov
pop
add
in
movsb
push
fsubl
pop
inc
leave
in
inc
inc
adc
popf
jns
fmul
and
lods
lods
push
sbb
inc
sub
test
pop
xchg
out
mov
jmp
lret
int
test
out
add
cmp
fistpll
inc
sti
dec
and
jge
xchg
fisttpl
ret
xlat
shll
mov
ds
add
mov
and
inc
xchg
sarb
mov
inc
mov
fsubp
int
or
cmp
inc
mov
loopne
push
jmp
fidivs
mov
and
xchg
or
sarl
ljmp
dec
add
movsl
lret
mov
rcrl
lds
sbb
icebp
cmp
popf
insb
push
add
rcrl
and
pop
mov
test
and
push
jnp
fsts
push
cmp
dec
test
push
jle
pop
and
xor
ss
push
mov
mov
movsb
aam
jg
adc
jno
jp
or
fbstp
cltd
negb
ljmp
test
fs
pop
push
lea
pusha
test
fcoml
js
cld
add
or
dec
cmp
xlat
mov
popf
xlat
rcr
and
xor
mov
inc
mov
loopne
inc
stc
lock
pushf
leave
out
mov
in
into
test
push
adc
sub
shll
xchg
out
push
dec
adc
fld
int3
xlat
and
jp
and
jl
jmp
mov
lods
mov
xchg
xlat
mov
push
cs
jge
mov
add
mov
lret
adc
pop
cwtl
mov
frstor
mov
jmp
test
adc
ret
and
xor
jmp
int
jbe
pop
movsl
mov
movsl
dec
mov
rcrb
xchg
out
neg
scas
sbb
adc
push
xchg
lretw
ret
lods
lods
sub
rcrb
jp
icebp
jne
mov
dec
sti
cmpsb
sbb
dec
fmulp
mov
frstor
pop
pop
push
testb
jae
jbe
adc
test
xor
adc
xlat
dec
insl
lcall
mov
jl
and
imul
jo
cmpl
jecxz
add
mov
xor
lock
push
test
inc
lea
in
fidivs
sub
rcrl
pushf
aas
arpl
lahf
and
rcr
aad
jge
pushf
mov
mov
daa
and
scas
test
sbb
out
mov
adc
cmpsl
test
cmp
pop
fdivs
loop
ret
sbb
imul
jp
mov
inc
lret
je
pop
mov
stos
fldenv
lods
adc
xor
inc
sahf
jb
loope
or
insb
add
shlb
xchg
push
and
xchg
xlat
lds
cmp
pop
cmp
je
int
and
in
pop
inc
jo
mov
shlb
push
loop
push
push
daa
in
inc
lock
call
xor
nop
mov
inc
xchg
insl
inc
rorl
and
sbbl
js
inc
repz
sbb
pop
add
repnz
es
ffreep
and
leave
lret
jo
call
and
imul
adc
insl
jp
mov
and
cli
ja
pop
jl
push
and
cmpsb
dec
xor
jnp
in
in
rclb
gs
dec
out
inc
jg
out
lahf
lcall
std
cmp
sarb
out
adcl
cmp
rcrl
imul
imul
popa
scas
popa
xor
inc
lds
xor
fstpt
sahf
sub
sbb
cmp
mov
pop
mov
xchg
inc
into
mov
cmpsb
inc
test
lea
cld
lret
mov
sarb
mov
jge
mov
pop
sub
fs
lret
lret
xchg
das
cmpb
ss
fadds
das
aam
inc
jmp
shl
jo
mov
sub
sub
sti
mov
sub
out
mov
and
in
jae
cmp
in
push
dec
pop
jno
movsb
daa
cld
pop
xchg
xor
in
mov
test
popf
and
stos
and
hlt
mov
pop
mov
pop
addr16
sbb
xchg
enter
sbb
fcoms
pop
or
cmpsl
fnstsw
jmp
addl
int
into
clc
mov
xchg
and
jnp
stos
shr
fwait
mov
xchg
int
cmp
sub
sbb
sub
rcrb
fwait
jae,pn
lea
int3
cmpsl
jp
out
push
vunpcklps
je
cltd
and
shrl
or
inc
mov
sub
ss
dec
repnz
fcomi
dec
mov
xorl
pop
stc
int
ror
das
test
push
mov
and
ja
lret
iret
mov
xchg
pop
mov
stos
add
fld
sub
mov
mov
clc
xchg
lock
cmp
outsl
pop
mov
xlat
or
add
aam
mov
iret
mov
mov
jg
cmp
mov
mov
jb
icebp
xchg
or
jg
adc
mov
test
jne
inc
les
pop
nop
xchg
sahf
jb
sub
es
mov
mov
add
adcl
pop
ret
xchg
cmp
mov
das
int3
ss
dec
push
movsb
rclb
add
pop
push
pushf
mov
popf
test
add
fstpt
sbb
sbb
mov
xchg
push
or
mov
pop
sub
ljmp
push
sbb
lock
pusha
or
adc
enter
sub
cli
cmp
sub
in
mov
xor
cmp
mov
lahf
push
mov
mov
iret
roll
loope
jl
pop
in
je
jne
movsl
pop
mov
aad
ljmp
push
jo
ret
mov
dec
dec
push
add
or
adc
movsl
xchg
sbb
aas
stos
fisubs
ret
jp
mov
orl
test
and
add
int
mov
aam
loope
and
icebp
mov
movsb
dec
pop
lock
jne
repz
test
popf
movsl
inc
or
sbb
js
push
cwtl
xchg
leave
xor
adc
sbb
push
pop
ret
jle
xchg
ret
ljmp
addb
inc
dec
iret
or
lea
stos
lret
repz
jne
xchg
es
and
sub
lret
icebp
scas
aam
repnz
xor
stos
and
daa
icebp
sub
iret
outsb
lahf
je
xchg
inc
imul
icebp
ja
shrb
jo
sti
sub
popa
sub
lods
ret
imul
mov
daa
int3
in
lretw
xchg
or
mov
mov
pop
mov
and
stos
dec
push
inc
jmp
loopne
fdivp
dec
sbb
push
mov
dec
xchg
mov
or
testl
pop
dec
cmp
sbbl
loop
jmp
pop
sbb
fiaddl
jge
mov
scas
outsl
cwtl
rolb
sbb
shlb
jecxz
js
jle
nop
fisubs
nop
cmp
ds
sarl
mov
das
enter
or
mov
pop
mov
fidivl
in
push
lea
jno
sub
out
fldt
jecxz
xchg
out
mov
adc
jnp
imul
fnsave
outsb
pusha
sub
inc
js
dec
push
adc
push
mov
mov
stos
xorl
int3
mov
loop
je
push
xor
in
in
jge
popf
or
rcrl
test
adc
cmp
lds
sub
push
and
cmp
dec
add
lock
imul
jb
cmp
cld
int3
mov
shl
ss
pop
push
mov
mov
test
rcr
mov
mulb
cmp
inc
pop
xor
pop
mov
xorb
ljmp
xchg
push
in
lea
inc
cli
cmp
xchg
mov
fisttpll
adc
adc
xchg
xor
jmp
cmp
jae
sahf
cmp
iret
jmp
inc
inc
insb
cmpsl
mov
cld
cwtl
insb
mov
adcb
cld
std
insb
pop
pop
pop
aam
mov
mov
jl
inc
int3
ret
loop
cmp
push
sahf
mov
ljmp
xor
mov
xchg
icebp
scas
cmp
ror
add
mov
popf
test
movsb
mov
mov
and
sub
jno
call
out
hlt
add
pop
push
push
cmp
and
sub
xor
xor
fadds
xchg
loop
mov
pop
push
repnz
and
gs
sub
mov
sub
scas
lret
insl
jmp
lahf
rcr
aam
sti
or
inc
dec
rcl
push
cmp
fcoms
xchg
cli
adc
aad
stos
movl
push
sbb
mov
movsl
neg
ljmp
pop
lods
cmp
xchg
fcompp
pop
stos
xchg
and
lret
add
or
sub
sbb
ret
mov
arpl
jae
fs
or
push
subl
shll
pop
shrl
dec
imul
bound
dec
inc
dec
sbb
fwait
aas
mov
shlb
jns
inc
pop
mov
sbb
ja
ret
adc
pop
sbb
out
sub
or
in
mov
xchg
jo
sbb
ret
xchg
add
fildll
jle
clc
push
push
inc
fiaddl
inc
xor
fsub
icebp
xor
lret
addb
jbe
xchg
mov
and
pop
aad
ds
jo,pn
aam
push
cltd
add
mov
push
cmpsb
fnstsw
mov
mov
repnz
pop
mov
or
ds
cmp
cmpb
push
adcl
ljmp
scas
jns
inc
add
lahf
and
inc
test
das
adc
cmpb
jle
jle,pt
mov
and
push
andl
adc
dec
jno
into
in
push
xchg
push
or
mov
filds
shrl
inc
xor
and
cmp
dec
fcmovnb
notrack
sub
andl
add
subb
xchg
repnz
test
mov
push
pop
jge
arpl
inc
in
in
cmp
daa
sbb
mov
xchg
adc
mov
dec
dec
inc
das
mov
push
push
dec
int3
adc
mov
dec
das
sub
pop
ud1
push
roll
cwtl
addl
das
mov
addr16
lods
fstpl
add
out
inc
sahf
bound
test
cmpsl
addr16
scas
mov
iret
lock
cmovg
mov
sub
das
pop
add
lcall
ds
mov
cmp
enter
mov
jb
pop
rdpmc
add
push
std
nop
mov
push
pop
cmc
push
lea
and
fidivs
sbb
cmp
mov
sub
and
stos
or
pop
xor
rclb
mov
xlat
insb
ljmp
outsl
push
cltd
xchg
cmp
rcrb
insb
mov
xchg
mov
xchg
inc
sbbb
xchg
lds
jnp
pop
cs
mov
lock
or
scas
mov
mov
scas
xchg
mov
jo,pt
add
sbb
pop
fstps
jecxz
adc
push
xchg
lret
fldenv
adc
or
push
xchg
fs
xor
push
stos
imul
cld
ja
adc
pushf
stc
adc
ja
or
pop
mov
ret
out
sbb
cs
jle
test
jbe
pop
jbe
rolb
divl
dec
xchg
outsb
icebp
push
sub
aad
inc
clc
faddl
pop
call
dec
adc
int
jns
int
out
mov
insb
sbb
in
jmp
sub
leave
pusha
divl
dec
xor
xlat
inc
cmpb
pop
out
cmp
push
mov
sbb
inc
lcall
je
repnz
pop
add
pop
movsl
imul
mov
cmpsb
adc
jecxz
xor
xor
inc
je
in
mov
insb
loopne
adc
or
out
bound
call
xchg
mov
adc
jecxz
lret
sub
add
out
pop
pop
xchg
in
lcall
jb
push
rcrb
sbb
mov
movsb
pop
dec
sti
cmp
shrb
adcl
pop
jno
sub
jno
xor
int3
aas
fmuls
neg
inc
icebp
cwtl
sahf
push
lret
inc
leave
sahf
adc
test
jno
lods
pop
pop
movsl
cmp
fcoml
xor
sbb
xchg
mov
xchg
push
mov
inc
cmpsl
add
int
or
arpl
sub
jb
pop
push
repnz
lret
adc
cmp
or
sahf
shrl
mov
add
outsl
les
data16
push
lods
push
sub
sti
lret
sub
stos
test
insl
sub
shlb
xchg
rclb
cli
xlat
out
pop
mov
in
lret
push
outsl
outsl
mov
out
jle
jno
xor
dec
inc
xor
adc
xchg
cwtl
dec
add
pop
add
xor
cli
data16
fmulp
int
sbb
sub
adc
add
lock
gs
pop
dec
out
mov
cmpsb
pop
lods
jne
inc
dec
loopne
cmp
in
mov
test
xlat
inc
mov
jecxz
das
push
out
divb
pop
mov
or
pop
push
sub
loop
outsb
mov
adc
add
push
inc
sub
fisubs
push
aam
les
loop
movsl
xchg
lds
incl
inc
cmp
pop
inc
lcall
lret
les
mov
sbb
mov
mov
cmp
lahf
xor
rorl
mov
pop
xlat
mov
lock
push
loop
xchg
jle
fisubl
rcrb
arpl
cmc
and
fldl
xor
popa
lcall
and
leave
inc
hlt
mov
addr16
rcrl
mov
mov
and
outsb
fsub
mov
adc
fiaddl
sahf
daa
adcl
and
xchg
rcl
int
imulb
outsl
inc
lea
lret
sub
jp
pop
imull
int
mov
imul
int
call
cmpl
inc
std
inc
adc
xor
push
test
sub
inc
cltd
xor
push
sub
jl
mov
lahf
pop
xchg
cvttps2pi
mov
clc
nop
iret
in
lret
aaa
pop
dec
negb
inc
fwait
test
mov
scas
mov
and
add
movl
hlt
mov
mov
clc
shr
nop
negl
jne
incl
ljmp
mov
daa
xor
jecxz
cmp
add
push
mov
inc
mov
add
cmc
add
mov
adc
pop
and
mul
push
out
stos
pop
addr16
cmp
push
jmp
push
inc
push
cmc
add
jp
pop
movsl
jge
daa
test
fsubl
jp
std
test
adc
pushf
sub
pop
push
sbb
out
mov
lret
mov
push
addr16
dec
mov
inc
imul
ss
inc
imul
or
cs
cmp
mov
clc
out
mov
stos
mov
pop
enter
adc
pusha
xchg
pop
add
sub
loop
lods
xlat
gs
xor
push
daa
mov
xor
mov
mov
ljmp
leave
lcall
cmpsl
repz
jecxz
dec
sti
lock
aam
sbb
jge
adc
popa
jp
add
cmp
fstpt
addr16
pop
dec
pop
shr
or
adc
sbb
bound
add
loope
inc
dec
pop
inc
xchg
imul
mov
mov
cltd
popf
out
bnd
ljmp
in
jo
adc
fsubrl
jno
pushf
jae
les
bound
outsl
push
ss
jo
mov
adc
repnz
push
add
fwait
add
sub
lret
push
roll
andl
cmp
mov
xchg
bound
mov
pop
dec
cmp
orl
popa
jecxz
push
jb
inc
jle
jmp
addr16
and
shlb
inc
ds
pop
dec
ficoml
push
popa
sahf
pushf
fcomps
jl
push
pop
mov
outsb
sub
sbb
ds
dec
leave
adc
sbb
sub
gs
insb
or
adc
add
mov
dec
adc
inc
mov
jp
dec
mov
add
and
mov
fbld
dec
dec
sub
sub
imul
dec
sub
lahf
mov
shll
jbe
in
scas
fcomps
and
pusha
push
jns
ret
sub
sbbl
arpl
push
jecxz
adc
out
adc
pusha
sbb
or
arpl
test
xchg
dec
xchg
mov
addr16
daa
inc
and
pushf
fnstcw
xchg
push
jg
call
je
rcrl
xchg
lock
add
push
or
sub
xchg
jne
ljmp
lret
into
mov
mov
and
fnstcw
aas
lret
xchg
pop
dec
jmp
sub
xchg
push
push
rorb
mov
dec
xorb
add
add
imul
sbb
mov
xchg
push
xor
out
repnz
shr
mov
push
iret
popa
push
lret
mov
sub
jge
js
pop
or
clc
out
mov
in
xchg
cmpb
clc
insb
xor
into
sub
imul
loope
mov
fcomps
cld
in
outsb
out
sbb
std
mov
mov
push
mov
mov
ror
inc
inc
pushf
lods
sub
sub
out
out
mov
in
mov
dec
je
dec
stos
dec
popf
hlt
xor
cltd
dec
aad
pusha
jnp
cmp
mov
xor
cmpsl
dec
push
stos
mov
fnsave
leave
sub
mov
pop
shrl
lret
aam
cwtl
jns
cmp
cmpsl
mov
jae
in
js
divb
aaa
test
mov
cltd
shlb
das
clc
mulb
and
xorl
xchg
sbb
mov
jo
jnp
scas
icebp
es
fisttpll
sub
insl
pusha
outsl
jbe
repnz
add
xor
test
sbb
jno
sti
xor
ljmp
mov
sahf
loope
lods
xor
loopne
mov
push
push
sbb
iret
xlat
inc
fs
fs
das
les
lods
cld
xchg
ljmp
aad
push
jmp
std
dec
sub
mov
lds
aam
adc
cmp
sbb
filds
cmp
add
jnp
cmp
xchg
hlt
sub
mov
dec
xchg
sbb
rcrb
hlt
xor
fistpll
push
mov
pop
popa
lea
data16
orb
imul
fstpt
push
ds
jns
lods
cmp
xchg
and
inc
mov
in
mov
pusha
mov
fsubrs
int3
mov
cmpl
jp
imul
add
sbb
cmpsl
int
mov
test
mov
sub
int
or
inc
cmp
dec
les
jp
xor
cmp
stos
xchg
jmp
add
loopne
mov
orl
push
sbb
outsb
xchg
jg
xor
jp
imul
ja
or
sbb
jbe
arpl
add
ret
sbb
xlat
pop
imul
leave
pop
cmpl
sbb
xchg
aam
ja
push
mov
shlb
xchg
pop
movsl
leave
inc
arpl
test
loopne
std
daa
mov
pop
ljmp
fwait
xchg
xchg
mov
dec
int
jae
pushf
or
int
lret
imul
das
sbb
jecxz
or
push
push
sub
in
movl
std
dec
xchg
icebp
push
pop
enter
inc
sub
inc
xchg
and
xchg
test
add
loope
sub
cmp
adc
push
push
aaa
inc
cmpsl
dec
dec
cmp
sub
jnp
bound
xchg
xchg
iret
movsl
pop
inc
mov
sarb
jae
ret
push
inc
and
ds
scas
fbstp
mov
mov
scas
push
adc
xor
lock
adc
push
lea
jnp
sub
mov
dec
fwait
aam
pop
lds
mov
lds
or
lret
mov
es
push
adc
add
push
and
pop
std
data16
jp
iret
int3
add
lsl
xchg
push
cmp
into
pop
or
rclb
sub
sub
and
and
push
inc
arpl
inc
xchg
call
mov
or
arpl
mov
aam
icebp
sub
jnp
sub
dec
imul
mov
das
outsl
sbb
mov
add
dec
mov
jae
pop
mov
ja
and
sahf
ds
pushf
fmuls
push
js
cmp
sub
inc
mov
push
cld
jne
test
xchg
mov
push
fdivl
inc
mov
mov
js
int
xchg
fists
aas
jns
mov
sarb
stos
mov
mov
xchg
mov
add
ljmp
call
shll
pop
lods
adc
popa
das
xchg
lret
loope
int
xor
pop
scas
push
aam
jnp
jl
add
mov
jecxz
scas
shr
js
add
mov
add
orl
aad
cmpsl
test
jge
mov
add
test
fnstsw
push
cmpsl
and
jns
jne
pop
lods
outsl
cmp
mov
mov
xchg
ret
int3
iret
cltd
cltd
pop
push
cmc
dec
cli
lahf
addr16
arpl
or
mov
test
jge
test
lods
cld
mov
dec
mov
mov
in
jbe
mov
jl
leave
aad
add
mov
inc
clc
cs
or
jecxz
cltd
sti
dec
rcrl
push
or
pop
cmc
cltd
push
push
jg
pop
rcrl
mov
arpl
adc
mov
sub
pop
adc
push
sub
insl
test
mov
sbb
adc
pusha
stc
int3
les
iret
call
xchg
ret
jne
popl
imul
sti
xor
mov
jo
or
sub
scas
cmpsl
mov
in
cli
pop
mov
incb
call
xor
jecxz
mov
xchg
loop
scas
test
jecxz
mov
and
and
xor
pushf
mov
sar
pop
or
xchg
movsl
sub
sub
out
popf
popa
sbb
inc
ljmp
std
jae
mov
loop
pop
in
out
and
out
test
cmpsl
jmp
sbb
scas
fldl
dec
lods
test
xchg
cmc
pop
adc
hlt
loop
sbb
or
cmp
repz
push
out
icebp
popf
nop
mov
outsl
push
push
cmp
lods
icebp
xor
out
shlb
jae
or
mov
cmp
movsl
pusha
orb
cs
das
frstor
int3
cwtl
cmp
inc
xchg
shll
push
xorl
sub
cli
fwait
jmp
jge
clc
std
pop
cmp
cwtl
add
cmpb
sbb
rol
fsubl
push
push
addr16
cmp
clc
and
xor
jmp
sub
mov
idivb
mov
adc
ret
xor
xlat
lahf
mov
mov
inc
sti
clc
lcall
out
add
ss
movl
mov
repnz
pop
mov
mov
cmp
jb
dec
add
add
push
sahf
int
inc
push
sub
push
or
into
add
fwait
add
fisttps
cwtl
jle
mulb
or
jb
inc
out
mov
mov
push
cmpsl
sbb
push
cld
in
mov
fcompp
stos
mov
stc
jno
test
test
divl
lret
cmc
mov
mov
rolb
fwait
mov
adc
jb
lods
ret
adc
push
sub
scas
fistl
ja
or
sub
add
pop
inc
add
lock
roll
scas
cwtl
pop
int
adc
inc
out
mov
clc
call
test
sbbl
loope
imul
movsb
popa
repnz
subl
push
lahf
adc
stos
adc
out
inc
add
clc
mov
pop
bound
movsb
loopne
jae
call
xor
gs
mov
pop
inc
sbb
fstpl
dec
jns
xchg
sub
sub
xchg
push
fisubl
xchg
dec
cmpsl
xchg
xor
adc
in
ret
mov
in
push
loopne
lods
xchg
shr
sbb
mov
sbb
inc
outsl
fs
xchg
inc
xchg
xor
xor
outsb
mov
push
pop
enter
push
ret
fsubl
dec
add
repnz
inc
mov
aad
jbe
icebp
jmp
sbb
sbb
mov
int
mov
pop
and
iret
and
rolb
cmp
push
adc
imul
into
jl
add
adc
jbe
pusha
sub
push
aam
sbb
dec
ret
jo
push
mov
iret
nop
xor
scas
dec
inc
push
cltd
imul
xor
xchg
dec
cmpsl
push
mov
cltd
sub
push
add
push
arpl
out
inc
cmp
cmp
and
mov
mov
jnp
inc
mov
mov
lahf
cs
mov
es
pop
ds
pop
daa
das
jns
xchg
divl
es
cmpb
sbb
lret
jno
push
ret
xchg
adc
add
mov
out
add
mov
and
fidivs
dec
imul
xor
xor
pop
cmp
es
push
icebp
jo
push
in
pop
mov
lret
movsb
lahf
mov
cltd
push
cltd
or
aas
sbb
fcmovnu
or
inc
mov
mov
xchg
ja
add
loopne
int3
dec
divb
jnp
lods
push
pusha
push
sub
frstor
add
dec
loop
pop
fiadds
jmp
popa
movntq
push
mov
add
shll
iret
je
ret
or
pop
push
ret
pop
in
pop
insl
dec
pop
jg
fmul
fmul
jge
dec
mov
xchg
stc
cmc
pop
dec
stos
ja
pop
outsl
mov
jne
fstpt
into
push
loopne
push
inc
cmovnp
mov
adc
dec
shl
xchg
sub
adc
leave
cmpsb
mov
leave
cmc
mov
jl
aas
rcrl
sub
fimull
fwait
push
daa
push
xor
mov
xor
jne
and
lock
popa
lret
cmp
mov
sbb
pop
aaa
and
pop
mov
es
stc
ret
sub
cld
mov
and
inc
push
dec
jno
cld
lret
movsb
in
push
je
jbe
sbb
repz
loop
fiaddl
cld
push
out
leave
insb
mov
mov
lcall
push
mov
dec
bound
popa
movsb
cmp
mov
shl
mov
adc
adc
dec
cli
iret
arpl
lahf
cmc
daa
jecxz
jbe
add
fwait
sbb
pop
loope
into
mov
lock
out
rolb
xchg
test
add
mov
lahf
push
or
outsb
push
pop
cmpsl
bswap
int3
mov
test
shr
je
ss
lahf
hlt
mov
xchg
adc
pop
test
aaa
xchg
xchg
dec
sbb
mov
add
stos
scas
jmp
sbb
inc
ss
jno
cmpsl
popf
jns
pop
aaa
xor
pusha
jnp
or
and
adc
sahf
sub
divl
or
sbb
dec
mov
mov
lret
mov
add
mov
fiaddl
in
and
xchg
push
mov
xchg
dec
sbb
lds
std
scas
es
xchg
jb
aad
fcmovne
mov
js,pn
sarb
or
pop
adc
pop
push
mov
sbb
stos
notb
fidivs
test
sbb
dec
and
lret
loope
je
adc
cmp
cs
lods
loope,pn
out
popa
dec
fisubs
ds
mov
cmp
andb
mov
int
cmpsl
pop
int3
xor
mov
xor
in
mov
iret
mov
mov
xchg
jo
ss
xchg
pop
aad
mov
divl
sbb
fsubrs
mov
leave
or
xchg
sbbl
xor
fcomps
jle
inc
enter
int
test
test
loope
fcomip
jo
xchg
insl
ss
cmp
ret
aam
push
repnz
adc
ss
icebp
addr16
push
xchg
aaa
push
inc
mov
cmpsl
dec
shlb
leave
cli
add
cld
mov
ljmp
icebp
inc
mov
test
sub
subl
add
inc
jbe
test
rcr
jns
negl
jl
pop
mov
add
in
mov
and
pop
adcb
sub
popa
lret
jb
stos
or
or
pop
xor
pushf
arpl
popf
sbb
lods
in
add
push
mov
jns
adc
fs
repnz
es
sbb
loop
movsb
lret
inc
xchg
js
add
or
aaa
cmp
test
outsl
mov
mov
jns
pop
push
ficomps
insb
clc
aas
and
cwtl
mov
aad
pop
jno
rcr
push
in
cmp
inc
inc
mov
insb
ret
jge,pt
in
sbb
jns
xor
ret
js
cmp
dec
ljmp
xchg
pop
pop
fmul
jle
and
ret
ret
mov
pop
dec
mov
shrb
loope
jge
into
xor
and
sbbb
orb
pop
jae
adc
sbbb
cmp
mov
mov
outsb
test
dec
mov
enter
ret
ret
out
ret
sbb
pushf
pop
shlb
mov
nop
pop
cmp
jl
mov
cs
outsb
insl
adc
ficomps
add
jecxz
ds
or
dec
jns
push
xchg
dec
adc
sub
test
mov
clc
mov
std
mov
adc
dec
mov
sbb
jmp
movsl
jle
out
mov
mov
hlt
pusha
pop
ljmp
jg
clc
fcomps
aaa
pop
divb
iret
add
push
popa
into
mov
pop
xchg
and
lods
mov
inc
jbe
dec
inc
jbe
sti
sub
ljmp
jb
js
inc
mov
imul
inc
cmp
jnp
lret
mov
sbb
out
mov
and
pop
sub
fsubrp
mov
mov
sub
xor
and
test
daa
aad
in
iret
dec
and
jnp
pop
sti
xchg
cmp
loop
mov
out
je
fidivs
rol
andl
dec
ja
data16
mov
dec
outsl
icebp
cs
incl
jae
test
pop
call
das
xor
mov
add
push
mov
pmaxsw
push
xor
inc
mov
jbe
adc
sbb
or
popa
pop
jnp
test
div
cmc
dec
mov
sbb
out
aad
jnp
push
pushf
xlat
dec
mov
push
sub
sub
sub
repnz
clc
push
push
clc
fisubrl
insl
xchg
pop
jbe
hlt
adc
movsb
dec
dec
push
lods
inc
roll
out
roll
fsubrs
shrb
movsl
sbb
and
lods
mull
mov
orb
adc
sub
sub
push
add
fnstenv
push
roll
sub
dec
or
mov
sub
scas
push
inc
aad
or
cltd
pop
movq
adc
jp
aas
cmpsl
add
or
jno
pop
fs
adc
lcall
sti
cmp
sti
inc
mov
loopne
cmp
mov
pop
iret
fildl
aam
sub
in
orb
xabort
adc
jbe
test
int3
aad
fstps
f2xm1
xchg
in
dec
xor
mov
jp
loope
mov
add
cld
mov
xor
call
inc
lods
lret
fnsave
xor
xchg
dec
ss
mov
pop
push
loop
mov
into
inc
nop
dec
rcrl
clc
cmpsb
cmc
lahf
sbb
push
and
jbe
sbb
cmp
adc
repz
imul
and
test
mov
pop
insb
or
dec
fimuls
add
adc
rclb
or
xchg
pop
loop
push
fdivrs
shlb
mov
mov
sub
call
or
in
insl
mov
xor
test
add
inc
cmp
imulb
pop
dec
adc
popa
addr16
bound
adcb
imul
mov
movsb
xchg
ljmp
mov
mov
insl
movsb
cli
push
movsl
gs
mov
test
dec
rorb
push
mov
cltd
xor
insl
sub
pop
hlt
sub
mov
or
aad
notl
jp
sahf
jp
xchg
mov
outsb
cwtl
mov
aaa
adcl
and
mov
lock
jp
repz
pop
mov
jns
xor
inc
xor
test
adc
push
jl
xor
lods
sbb
inc
cmp
pushf
int
jo
enter
addl
outsb
rcrb
ficompl
dec
sahf
bound
fiadds
or
cli
dec
mov
sahf
push
insl
push
jg
fwait
jecxz
mov
lcall
cld
push
jmp
enter
sarl
inc
notb
pushf
fnclex
sbb
leave
mov
inc
shll
or
xor
lahf
pop
xchg
jo
mov
imul
xchg
decl
mov
mov
mov
jp
in
fstp
sahf
out
out
aaa
mov
adc
xor
push
int
mov
mov
test
push
pop
pop
loope
or
rolb
lods
nop
fst
out
cli
sbb
mov
int
push
push
jmp
xchg
inc
in
push
jne
movb
mull
cmp
jp
jg
inc
notb
push
loopne
loope,pt
jle
cmp
mov
push
aam
mov
push
cmp
push
test
cmp
cs
fbstp
xchg
push
and
pop
es
lock
aaa
int
pushf
cmpsl
cltd
mov
mov
or
ret
jl
xor
pop
xchg
mov
xchg
pushf
fdivrs
fstl
mov
jb
imul
jge
out
sub
dec
out
cli
and
jmp
xchg
dec
mov
mov
push
stos
outsb
xchg
mov
enter
cmp
jbe
addb
adc
icebp
jp
inc
dec
das
xor
fisttpl
iret
dec
icebp
test
mov
inc
or
andl
leave
cltd
in
and
scas
dec
clc
loopne
xchg
roll
bound
sti
sbb
flds
dec
loopne
icebp
es
dec
subl
test
ret
cmp
cltd
mov
inc
sbb
shrb
pop
sub
jg
pop
in
jg
jge
call
mov
mov
sarl
inc
pop
dec
fs
push
pop
xchg
pop
icebp
daa
and
ja
fnstsw
mov
jg
clc
cld
push
pop
sbb
sub
sub
mov
scas
ss
shl
movsb
test
mov
jno
xor
pop
adc
lods
stos
out
and
enter
sahf
xchg
dec
ret
sahf
sbb
lds
cli
mov
add
fsubl
movsl
mov
aas
mov
popa
ret
shlb
pop
ja
dec
int3
add
mov
loopne
mov
orb
dec
into
adc
inc
les
dec
data16
and
inc
and
jecxz
and
insb
adc
in
xchg
and
xor
mov
loopne
push
mov
lret
mov
push
clc
dec
xor
rol
push
sbbb
lods
sbb
xlat
dec
gs
jmp
popf
mov
mov
jl
into
adc
jge
pop
mov
push
mov
push
scas
push
pop
mov
cmc
test
or
repnz
mov
rorb
test
xor
adc
test
or
push
sarb
cmp
out
push
cwtl
mov
lods
std
ret
loop
jns
jmp
fcoms
jle
mov
daa
adc
int
push
sub
lock
and
xchg
and
movsb
xchg
js
pushf
fisttpll
sbb
add
jno
cmp
push
xchg
popa
popa
cmpb
in
sub
outsb
jae
xor
ja
xchg
xor
dec
xor
loope
icebp
aad
lods
scas
aaa
inc
repnz
push
cmp
lret
pop
jp
shrb
xchg
pop
repnz
fiaddl
clc
ljmp
mov
or
cli
fsin
add
cmp
mov
adc
imulb
add
sbbl
or
popa
pop
push
lock
xchg
pushf
dec
pop
aad
jmp
pop
int3
ds
pop
and
xchg
enter
sbb
xor
adc
sub
xlat
in
pop
jnp
test
push
jecxz
daa
daa
xchg
loope
popa
enter
cwtl
call
aas
mov
inc
daa
test
out
and
lds
xor
xchg
pushf
xchg
push
cmpsb
push
cltd
fcompl
or
cld
xchg
rcrl
aad
mov
data16
jmp
das
xchg
std
inc
cmp
scas
shlb
lcall
das
adc
stos
lods
and
sbb
stos
out
mov
scas
fsubs
lds
mov
fldt
nopl
js
lds
mov
das
bound
cmc
rol
mov
fmull
jnp
dec
jnp
fcmovnb
xor
jns
mov
xor
xchg
scas
mov
sbbb
fildll
push
push
cmp
jecxz
es
sbb
jp
and
aas
xor
lds
daa
dec
xchg
push
outsl
fisttpll
mov
mov
xorl
js
or
sbb
sbb
inc
push
xchg
and
stos
stc
jo
fiaddl
inc
aas
in
jb
adc
mov
push
repz
imul
enter
into
cmp
je
mov
mov
in
mov
cmp
inc
repnz
jmp
std
sti
aam
jge
enter
mov
xlat
pop
push
jns
pushf
sub
rcrl
in
pop
push
jge
jg
cmpsb
mov
data16
jmp
call
push
lds
sbb
push
pop
xchg
and
repnz
inc
cmpsb
xchg
jmp
push
scas
push
sub
lcall
aas
xor
mov
stos
inc
sub
inc
and
jbe
idiv
in
arpl
add
xchg
or
jge
xchg
mov
ja
mov
inc
push
loop
les
jge
js
mov
lds
insl
test
imul
repnz
rolb
and
mov
enter
pop
sbb
add
fdivs
cmp
or
lea
and
jae
xor
or
cmp
in
popa
scas
mov
dec
and
das
mov
lds
fdivp
inc
gs
stc
inc
jg
xor
outsb
fs
push
sbb
cli
cmp
pop
and
scas
jne
pusha
dec
ret
xor
jno
fimuls
stos
mov
ret
cmp
test
pusha
add
and
movsb
das
mov
lods
in
pusha
data16
jge
je
mov
cmp
out
xorps
mov
inc
mov
cs
adc
repnz
popa
mov
pop
add
or
data16
imul
test
mov
push
hlt
push
pop
xchg
dec
mov
fsub
test
ficoms
hlt
adc
outsl
lahf
sbb
bound
shll
lods
enter
clc
into
xchg
lcall
or
sbb
jmp
mov
lds
rorl
loopne
dec
xorl
pop
in
inc
outsb
mov
inc
dec
push
pop
movsl
adc
stos
push
int3
popf
push
icebp
stc
xor
addr16
flds
aaa
xor
and
outsl
in
rcrl
inc
and
dec
jl
test
jno
in
cmpsl
shlb
sub
push
sbb
mov
fldenv
jnp
sar
push
gs
pmuludq
ret
sahf
cmc
cwtl
jbe
jne
push
or
add
cwtl
push
mov
fistpll
adc
or
dec
cs
add
mov
add
out
jge
mov
addr16
sub
out
ja
ljmp
jnp
idivb
cmpsb
mov
adc
scas
sahf
cmp
aas
popa
or
in
xchg
ss
mov
or
orl
and
xchg
repnz
jnp
mov
push
inc
xor
jmp
in
mov
inc
lds
pushf
pop
cmpsl
push
dec
ljmp
sub
mov
mov
jno
lret
cmp
into
loope
out
stos
cmp
inc
nop
pop
mov
dec
xor
xor
fwait
xchg
mov
lock
das
mov
mov
lcall
jmp
outsb
jmp
rcrl
adc
enter
push
je
enter
les
out
mov
add
and
addr16
fldl
xchg
or
mov
aas
dec
or
mov
push
inc
clc
lods
das
stos
mov
lods
clc
aad
aam
sub
sbbl
jb
ljmp
movsl
movsl
jp
nop
inc
stos
pusha
addr16
pop
shrl
movsb
pop
cmp
sti
mov
and
mov
loopne
iret
jg
cld
lds
fs
fmull
pop
or
jae
jp
std
xor
push
sub
push
imul
or
test
push
test
arpl
xchg
mov
mov
sub
sub
inc
xlat
xor
mov
out
sbb
pop
inc
sbb
cmp
scas
adc
in
sbb
jnp
sub
sar
lea
push
ficompl
inc
imul
inc
ret
inc
pop
mov
push
sbb
mov
fldenv
add
adc
push
cmp
cmp
and
jg
addr16
aas
hlt
and
jmp
cmp
negl
lods
aam
out
jb
inc
pop
sbb
andb
or
int3
insb
pop
adc
mov
movhps
out
inc
mov
dec
jmp
sbb
mov
mov
mov
inc
movsl
adc
add
jl
call
mov
jne
jne
ljmp
add
lods
ljmp
adc
jg
outsl
or
add
scas
movsb
pop
rol
xchg
or
shl
imul
sarb
cmp
mov
pop
out
mov
lea
rorl
adc
push
shrb
js
adc
lea
or
jb
outsl
sbbl
xchg
jp
adcl
mov
in
aam
cmc
ret
push
test
xchg
rcrb
icebp
leave
repnz
icebp
dec
pushf
addr16
shll
cmpsl
imul
pop
dec
out
mov
clc
lock
mov
roll
andb
sub
loop
sbb
pop
jp
mov
dec
cmc
push
mov
mov
data16
push
dec
mov
sahf
mov
fs
push
push
xor
push
in
push
xchg
jae
loopne
lret
inc
aam
and
jae
sbb
sarl
dec
nop
adc
mov
cmp
xchg
inc
jge
cmp
lretw
cmp
aam
or
xor
or
dec
arpl
les
dec
repz
xchg
inc
ror
fwait
enter
mov
outsl
call
fsts
xchg
pop
nop
popf
idiv
pop
stos
out
lret
and
data16
push
push
shr
pushf
cmc
ja
or
push
lock
shr
add
mov
pusha
mov
enter
ljmp
sbb
fisttpl
jno
add
pop
xchg
add
dec
adc
std
sbb
jecxz
ds
sub
push
mov
int
sbb
pop
into
jns
pop
sub
imul
pop
subl
xor
mov
dec
std
adc
fs
adc
sub
repz
jnp
or
test
mov
sti
movsb
in
addb
pushf
mov
loop
jo
pop
out
faddl
mov
sub
push
jbe
insl
imul
xlat
xlat
imul
or
inc
aas
jb
mov
fisttpll
in
pop
mov
insl
fidivl
loopne
ret
rolb
mov
stos
inc
xchg
leave
xchg
and
add
int3
xchg
ret
adc
add
mov
sbb
or
or
pusha
mov
mov
mov
jmp
sub
imul
pusha
inc
mov
test
sbb
fists
jle
cmp
mov
add
sub
mov
sub
mov
iret
lods
and
loope
sti
testl
out
dec
dec
or
aam
je
xor
mov
in
push
add
and
pop
sti
ret
jge
loop
shll
les
imul
sub
cmp
adc
sbb
adc
fs
xchg
mov
bound
sbb
mov
jg
inc
lahf
xor
or
cmpsb
call
out
mov
sub
and
es
or
pshufw
adc
fstpl
inc
sub
jb
mov
notl
ja
stos
mov
sbb
in
icebp
adc
fcmovu
pop
and
lahf
loope
pushw
xchg
loope
faddp
push
and
fistps
mov
cmp
or
adc
adc
pop
lahf
pop
dec
push
jbe
cld
jmp
shrb
ds
aad
xlat
cmp
vprotd
xor
sbb
jb
mov
push
es
aad
sub
inc
inc
aaa
repz
xchg
push
pop
inc
jmp
push
das
movsb
loop
fldenv
push
lret
dec
or
fs
mov
mov
cli
mov
sbb
sbb
movsb
scas
rcrb
test
lds
aaa
movsl
enter
jmp
mov
mov
or
test
jg
mov
sub
mov
in
mov
pop
cmc
xor
jnp
xchg
add
aaa
aad
add
jecxz
movb
cmp
js
fwait
pusha
sub
gs
mov
inc
icebp
push
cmp
mov
push
mov
outsl
pop
in
ds
out
adc
wbinvd
dec
mov
sti
sub
insb
pop
mov
push
cli
inc
cmpsl
aas
xchg
and
movsl
cmp
cmp
push
scas
iret
mov
nop
ss
mov
or
push
mov
push
shll
popf
push
arpl
sub
insb
aad
pop
pop
je
pop
incl
sbb
scas
fstps
jl
test
push
mov
stc
xchg
shl
sub
jns
mov
dec
int
sbb
or
and
inc
insl
test
aad
cmp
jecxz
stos
cmpsb
jb
jb
push
ja
aam
push
or
cmpsb
push
lcall
leave
scas
mov
mov
pop
pushf
pop
and
leave
and
and
fiaddl
push
les
mov
cmp
sub
pop
and
cld
rcrl
jo
aam
mov
xor
ja
ret
call
fisttpll
pop
or
mov
or
in
adc
inc
dec
pop
mov
jae
and
idiv
sbb
mov
jo
mov
divb
jmp
xor
and
lret
test
loopne
xor
dec
cmp
lret
xor
and
in
jne
add
mov
xchg
ret
sbb
inc
sbb
in
icebp
xor
jne
dec
in
outsb
loope
bnd
add
or
jg
out
outsl
data16
mov
je
pop
xor
in
rcll
int
sub
sub
lock
pop
loope
sbb
lret
dec
aad
pushf
outsl
rcll
xchg
jle
sahf
xchg
mov
repz
push
subl
push
rep
insl
bound
fdivrl
lret
cltd
cltd
out
lods
mov
adc
mov
sub
and
in
cmpb
andb
jecxz
or
sub
fucom
mov
out
pop
and
outsb
repz
jns
call
cmc
sub
in
lock
popa
fdivrl
adc
cli
cmpsl
ret
mov
sahf
sub
lret
cmp
mov
stos
sbb
fldenv
jne
movsb
lcall
jmp
push
cmp
aad
int
mov
nopl
imul
cltd
adc
xor
lods
dec
cmpsb
adc
in
lret
es
lds
xor
out
push
into
jl
pop
shlb
sub
lds
fwait
out
add
push
and
fwait
jle
andb
stos
jae
sub
mov
aas
push
push
fs
mov
push
push
mov
pop
jmp
cmp
cmp
sahf
add
jg
test
mov
sub
stos
jbe
std
arpl
mov
test
stos
gs
inc
adcb
scas
fiaddl
out
insl
mov
dec
sub
add
fsubr
push
test
pop
daa
rcrl
test
int
push
mov
loopne
dec
push
shll
add
sub
xchg
fdivs
stos
mov
jl
insl
dec
pxor
sub
xor
inc
mov
enter
sarl
mov
lret
push
mov
adc
mov
mov
xor
mov
popf
and
cmp
mov
gs
addr16
jno
sub
ret
int3
push
xchg
jne
pop
sar
mov
add
test
testl
jo
jns
jmp
das
lods
xor
sbb
test
sbb
lods
mov
inc
jne
lods
addl
mov
inc
push
adc
ret
ds
jae
jg
add
xorb
inc
call
cmpsb
shrb
and
loope
das
lock
adc
add
dec
mov
lods
sbb
pop
push
stos
xchg
iret
ret
push
imul
std
jno
enter
dec
xor
stos
iret
fistpll
fmuls
jnp
sub
sub
cli
out
shlb
mov
push
fimull
and
scas
iret
push
cmpsl
fistpl
outsl
push
xor
cmp
mov
xor
xchg
xchg
mov
mov
and
fcoms
inc
popa
fldl
test
mov
loop
mov
jle
cmp
les
gs
push
sub
jmp
push
je
stc
pop
pop
mov
or
mov
das
out
lods
sarl
pop
ror
xchg
in
lcall
mov
mov
dec
or
repnz
pop
dec
dec
or
lret
mull
lret
cmp
mov
dec
xchg
push
rclb
sahf
or
mov
imul
dec
loope
dec
icebp
icebp
fisubl
fcoms
mov
push
jae
and
js
or
xor
dec
loop
add
lds
pusha
or
je
repz
outsl
push
cld
test
and
movsl
repz
in
std
gs
jecxz
decb
xor
lcall
mov
ret
imul
push
jmp
iret
cmpsb
fwait
addr16
es
adc
sub
sub
sbb
out
dec
push
mov
and
or
mov
and
mov
outsb
lock
xchg
push
sbb
sahf
sarb
pop
jbe
fidivrs
add
fldlg2
jle
xor
shl
dec
test
inc
pop
dec
jo
movsb
adc
lret
mov
push
xor
push
push
enter
aas
jecxz
je
loopne
outsb
pop
xchg
fwait
shrb
push
and
out
sahf
int3
adc
sub
loope
repnz
rol
out
scas
int
call
push
pop
aas
repz
mov
mov
mov
mov
sti
outsb
rol
push
sub
xor
or
shlb
lods
jecxz
sbb
jnp
xlat
mov
aaa
sbb
pop
jns
negb
scas
mov
dec
and
pop
push
jl
jp
push
popf
inc
xchg
cwtl
xorb
insb
loop
push
xor
mov
cmc
adc
adc
enter
xor
pop
cli
lock
jle
xlat
cmpsb
sbb
and
ret
out
addr16
aaa
fabs
and
loope
cmp
ficoml
lahf
stos
aam
or
sub
movsl
add
pop
mov
or
xchg
fsubl
clc
add
pop
iret
mov
add
fdivrs
popa
dec
daa
cld
sub
lret
cmp
pop
and
into
mov
xchg
jnp
fildll
insl
mov
ja
mov
lds
repnz
ret
int
pop
stc
mov
jg
inc
pop
es
pop
push
fsts
and
and
push
push
popf
loop
mov
outsb
rcl
std
adc
cmp
cwtl
mov
jge
sar
mov
outsb
pop
sbb
lods
push
gs
arpl
mov
movl
roll
filds
pop
add
sub
xchg
dec
pop
mov
push
idiv
call
lahf
lock
jne
cmpsl
push
sbb
push
push
cmp
fdivs
mov
pop
aaa
test
or
or
fstps
js
ret
nop
rorl
aas
and
lcall
add
ffreep
jno
push
iret
pop
or
sarb
iret
imul
pop
ljmp
fbstp
mov
sub
ret
xchg
in
imul
fadd
pusha
push
mov
mov
sbb
mov
movsb
pushf
rclb
add
dec
popa
cli
jno
jbe
pop
sbb
in
fmull
inc
inc
mov
xchg
mov
mov
div
movsb
repnz
sub
dec
and
out
jge
fidivrl
out
mov
adc
enter
push
pop
lret
call
cmp
mov
testl
shlb
cld
les
movsb
lods
pop
pop
rol
jbe
mov
cmp
sbb
jp
and
xor
mov
mov
dec
xor
test
cwtl
sbbb
xchg
fwait
jmp
push
and
cli
aaa
out
add
xlat
jns
fmull
mov
sub
dec
or
into
mov
push
xchg
cmpsb
pop
lock
sahf
loopne
push
in
fs
filds
mov
or
int3
test
xchg
addl
shlb
lds
dec
mov
fistpll
mov
mov
hlt
cmc
sahf
gs
jbe
ljmp
inc
xor
mov
rcrl
cmpsb
xlat
repnz
pusha
mov
stc
subl
and
jge
cld
mov
mov
addr16
cmpl
popf
inc
xor
pop
mov
dec
mov
jnp
inc
std
lds
inc
add
push
jmp
and
mov
outsb
mov
mov
inc
icebp
add
incb
xchg
test
mov
sbb
jecxz
lods
xchg
jp,pt
sbbl
test
sti
xor
xchg
mov
fs
cmp
push
pop
adc
pop
aas
and
iret
cmc
bound
mov
jmp
arpl
popa
aam
inc
pusha
test
fdivrl
adc
fisubl
mov
or
cltd
adc
rcr
mov
fwait
movsb
in
dec
std
dec
dec
lea
push
adc
add
sub
lret
out
cmc
xchg
mov
jg
add
cmp
or
mov
mov
shrb
xchg
out
lods
push
sbb
inc
hlt
sbb
sbb
jae
ficomps
sbb
jmp
xchg
mov
xor
sub
sti
sbb
lret
dec
xorb
movsb
out
loop
push
push
loopne
cwtl
in
fwait
stc
mov
popf
sub
popf
lea
in
pop
add
shll
mov
iret
pop
mov
es
hlt
inc
jp
xchg
icebp
ret
cmpsb
in
repnz
das
pop
sub
xor
aam
mov
out
insb
fsubrl
ja
jecxz
jns
sarb
lcall
or
mov
divl
inc
dec
bound
and
hlt
pop
and
les
fwait
lret
mov
mov
test
add
xchg
xchg
orl
daa
and
nop
mov
test
imul
shrb
jmp
push
in
into
mov
sub
xlat
arpl
mov
nop
and
mov
data16
and
test
stc
es
inc
sbb
xor
push
xchg
push
pop
xchg
mov
add
js
mov
sub
icebp
sub
pop
cmp
cmp
jbe
add
mov
cltd
cmp
mov
mov
xor
ja
and
mov
sahf
or
dec
lahf
or
cmpsb
shrb
addr16
sahf
lret
les
jne
pop
pop
out
mov
xorl
xor
jbe
mov
mov
xchg
es
imul
fdivs
sub
push
mov
cltd
rcrb
and
push
sub
xchg
or
fidivrs
jmp
sbb
adc
jecxz
sub
iret
jno
sahf
push
leave
inc
test
std
adc
data16
dec
aad
jne
gs
cld
xchg
jo
inc
push
jg
pop
cmp
dec
pop
lea
dec
fwait
stos
repnz
or
fcomip
pusha
je
in
dec
jg
or
movsb
push
cs
fisubrl
xor
insl
inc
cmp
imul
inc
mov
cwtl
cltd
add
inc
sbb
mov
push
aad
loop
loopne
fstpl
sbb
negl
pop
push
fimull
cmpsb
jno
pushf
ljmp
lcall
xchg
xchg
imul
int
mov
pop
push
loope
mov
and
cmpsb
daa
push
xor
push
es
push
xor
in
xor
enter
push
cmp
add
sbb
outsl
cmpsb
scas
fwait
subb
xor
test
push
jne
cmpsb
or
mov
icebp
ds
mov
orl
ss
std
loop
outsl
xor
rcll
sahf
movsb
xor
mov
das
rcl
shll
xchg
jne
mov
scas
sbb
shlb
gs
repz
insb
fwait
mov
mov
fisttps
xor
cld
scas
aad
sub
adc
test
clc
xor
stos
push
add
outsl
cmpsb
push
rorb
lock
insb
xchg
ja
and
jl
incb
adcl
mov
jl,pt
ljmp
lock
jp
xchg
cltd
fcompl
pop
xor
nop
mov
cmpl
mulb
and
inc
in
sbb
push
int
pop
dec
xor
mov
and
push
sbb
ja
cs
pop
btr
mov
pop
cltd
repz
enter
arpl
push
dec
push
jecxz
mov
jae
or
pop
push
pop
stos
test
sbb
notl
insb
xor
and
call
scas
imul
inc
repz
or
enter
cmovne
insb
adc
in
pop
pop
fs
repz
filds
les
and
testl
sub
loopne
push
sub
sub
rcll
sbb
testl
sub
mov
or
inc
jo
cltd
mov
hlt
push
sti
jne
mov
cs
js,pt
dec
test
push
pop
aad
mov
xor
and
add
push
mov
mov
jmp
cmpl
leave
das
cld
pop
xor
out
out
lods
inc
iret
sbb
pop
or
scas
inc
xchg
cwtl
adcb
add
insl
sahf
and
dec
jecxz
mov
pop
clc
pop
mov
and
or
sti
cmp
mov
sub
in
out
cld
faddl
add
sti
sub
mov
xor
int
lret
mov
ss
in
mov
xchg
scas
inc
mov
sahf
rorl
popl
cwtl
insl
scas
fisubrs
imull
jecxz
push
scas
rcll
xor
push
sub
push
ss
cmc
jns
add
jno
xchg
xchg
lods
cmp
pop
imul
loop
adc
sti
push
test
stos
cld
xor
inc
icebp
push
dec
es
ret
push
stos
and
scas
push
cmpsb
mov
lcall
xchg
in
ljmp
rolb
jle
imul
imul
shrl
cmpsb
bound
cmp
cmpsl
lret
fwait
scas
popf
mov
hlt
add
jecxz
jl
mov
xor
decl
movsl
fwait
push
mov
push
movsb
or
mov
jecxz
dec
add
sub
in
xchg
push
dec
jle
aas
lea
sbb
int3
jb
mov
enter
and
adc
cmpsl
mov
js
insb
repnz
in
icebp
out
mov
fcompp
hlt
mov
or
xchg
cmp
dec
jl
stos
mov
sub
jp
das
cli
dec
cmpsb
in
in
js
pop
dec
ret
and
loop
rorb
add
fbld
dec
cmp
pop
sbb
jne
push
and
and
sahf
repz
es
push
push
pop
outsl
xchg
jb
xor
sarl
arpl
inc
push
rcll
xchg
rcrl
and
cmpsb
push
cwtl
inc
push
adcb
ret
lods
data16
cmpsb
and
mov
dec
adc
lods
push
hlt
fwait
gs
nop
daa
jns
inc
cmp
imul
hlt
push
mov
das
xchg
dec
push
mov
lcall
dec
cmp
adc
and
mov
push
je
dec
frstor
dec
inc
jl
add
sbb
insb
inc
mov
dec
mov
lds
pop
nop
shl
scas
inc
dec
dec
mov
xlat
aam
mov
movb
lds
sahf
lea
mov
and
lret
lret
xor
mov
dec
cltd
mov
mov
repz
adc
and
cmpl
adc
xor
outsl
mov
dec
repz
adc
insl
test
inc
inc
in
xchg
inc
sbb
enter
mov
add
sbb
aam
lods
xchg
add
push
mov
push
push
xchg
ret
pop
test
std
mov
push
jge
push
mov
mov
orl
pop
inc
clc
cmp
mov
loope
test
mov
cmp
xor
dec
push
ljmp
sub
cmpl
aad
lahf
call
les
jle
scas
lods
lds
pop
sub
lds
mov
dec
out
in
repnz
iret
adc
pop
ja
jno
sbb
arpl
mov
imul
push
xor
ret
pop
and
faddl
hlt
ret
cltd
icebp
hlt
dec
icebp
sub
pop
jns
cmp
ror
cmpsb
xchg
nop
scas
nop
push
jp
inc
cs
cmp
loop
jmp
dec
dec
int3
jmp
loopne
das
scas
lret
cmc
lahf
pop
xchg
add
xor
rcl
dec
ljmp
xlat
scas
sbb
mov
nop
push
adc
mov
cmp
shrl
mov
sbb
jno
js
sti
push
or
lret
jo
xlat
in
popf
lods
aam
rorb
pop
in
inc
pop
popa
inc
pop
mov
mov
sub
dec
cmp
out
int3
mov
jae
push
push
mov
dec
or
and
push
jae
mov
and
das
lods
movsb
mov
dec
lea
icebp
jl
cmp
in
mov
leave
or
sbb
mov
dec
sbb
lds
push
mov
rcl
and
fstl
mov
inc
in
cwtl
jg
mov
cltd
in
mov
cmp
push
std
push
lcall
or
push
inc
xchg
std
jbe
imul
iret
push
mov
cwtl
pop
icebp
es
push
lock
jo
cwtl
daa
clc
adc
loopne
dec
roll
aaa
faddl
sar
pushl
push
pop
or
or
orb
sbb
imul
dec
adc
mov
jp
xlat
jne
sahf
int3
adc
in
sbb
mov
scas
aad
sub
jmp
mov
lcall
sbb
push
sub
rcll
sub
int3
stc
pop
inc
mov
lcall
insb
pop
idivl
dec
xor
mov
dec
xchg
aam
addr16
cwtl
adc
out
std
or
push
push
push
mov
lahf
pop
ds
scas
arpl
jg
add
and
inc
scas
icebp
add
push
add
das
sbb
jns
mov
add
popa
inc
aaa
cltd
testb
adc
in
adc
push
jg
sub
cmp
ret
popf
and
mov
or
jnp
js
and
cmp
xchg
mov
sub
pop
xlat
test
ret
jae
leave
movsb
mov
pop
je
xor
jns
mov
mov
stos
fs
leave
out
out
mov
insl
aaa
cmp
pop
sbb
movsb
out
cmp
ljmp
fcmovbe
lods
push
and
mov
ret
mov
xor
ljmp
xchg
and
mov
xor
mov
test
cmpsl
mov
dec
and
xchg
cld
push
scas
lret
push
outsb
insb
in
mov
or
cld
xchg
mov
pop
or
lcall
xor
push
pop
sub
push
push
jb
test
mov
mov
test
sub
pop
push
adc
jne
rcr
xchg
dec
cmp
lcall
xor
mov
stc
jo
mov
or
out
lret
add
aam
cs
lcall
das
shlb
sahf
lods
pop
movsb
ljmp
movsl
popf
dec
inc
push
rorl
jp
int3
push
jmp
pop
jne
sub
push
out
cmp
aam
out
fs
jg
pop
sbb
push
sti
jle
idivl
inc
call
sub
or
add
pop
repz
sub
mov
inc
test
jmp
mov
arpl
mov
push
aaa
xchg
xor
outsb
jne
add
xor
leave
popl
sub
jecxz
sbb
stos
fwait
aas
dec
mov
mov
clc
iret
jne
xor
xchg
sahf
aas
pop
hlt
sti
sub
fistps
mov
mov
adc
leave
push
xor
dec
ds
cmpsl
mov
mov
test
ret
jns
or
lret
pop
lret
cltd
xor
push
push
popf
lods
inc
mov
data16
int3
sub
add
mov
pusha
fisubrs
push
repnz
loopne
das
cmp
lret
sub
lods
sbbl
cmp
pop
inc
hlt
jnp
out
pop
cmp
pop
das
pop
mov
xor
outsl
sub
imul
les
mov
xchg
data16
inc
adc
or
es
lods
sub
add
xchg
shr
das
mov
jb
loopne
roll
xchg
pop
mov
jns
and
movsb
push
jno
inc
arpl
jae
leave
sub
or
sub
jecxz
sbb
mov
rcrl
dec
sub
and
mov
xchg
mov
mov
subl
int
pop
xchg
dec
scas
test
mov
scas
stos
sbb
cmpsl
adc
xchg
inc
adc
fdivs
jge
push
stc
sbb
cmpsl
xor
xor
insl
cmp
sbb
and
insb
cmp
mov
mov
pop
add
xor
loop
cmp
xchg
lea
es
shl
cmp
data16
adc
repnz
mov
sub
mov
je
insl
cmpsb
pop
inc
jbe
mov
push
pop
xor
mov
stos
scas
into
and
or
scas
ret
or
push
outsb
mov
daa
inc
pop
out
aad
sub
sbb
push
mov
inc
push
sbb
and
or
bound
jmp
cmp
jno
int
or
ror
jns
xor
and
imull
mov
dec
aam
sbb
aas
jns
and
fsubrl
adc
mov
outsb
push
fdivp
ds
gs
loopne
sub
xchg
inc
xchg
js
jmpw
pop
dec
arpl
scas
push
mov
fadd
or
in
ret
xchg
jbe
dec
mov
aas
out
mov
xor
outsl
mov
in
pop
negb
add
add
or
ficomps
ss
movsl
xchg
mov
mov
jle
mov
pop
sbb
jns
stos
dec
ret
pop
int3
ret
or
gs
sbb
and
out
or
xchg
push
leave
mov
add
cli
mov
add
fistpll
fnstcw
jg
add
cmpsl
xlat
or
lea
push
pop
popf
xor
dec
and
inc
std
addr16
pushf
iret
xchg
addr16
add
push
push
mov
movsb
fists
lahf
lret
lods
and
jecxz
xchg
frstor
mov
pop
outsb
scas
cmp
pop
cmpsl
and
mov
shl
sbb
ja
sbb
pop
in
mulb
dec
stc
sbbl
jns
push
scas
out
cmpsl
lahf
mov
std
jl
repz
push
dec
mov
int
cli
daa
mov
cmp
mov
push
jmp
arpl
mov
icebp
push
shrb
mov
pushl
or
push
je
mov
cmpsl
jp
pusha
adc
push
mov
or
sbb
mov
pop
fbstp
nop
xchg
dec
int
dec
or
cmpsb
movups
aas
push
and
or
sub
add
sbb
cmpsl
adc
xor
sub
sub
dec
dec
xchg
xchg
cmp
icebp
sub
les
bnd
pop
insl
dec
aad
dec
xor
cmp
jb
jae
test
xor
fcom
test
out
dec
jmp
xor
mov
pop
es
stos
inc
xor
xlat
ret
mov
jg
mov
mov
jecxz
and
xor
ret
out
add
push
iret
lods
mov
mov
add
sub
add
arpl
push
push
dec
jge,pt
mov
js
pushf
pop
push
subb
out
xchg
dec
adc
nopl
popa
icebp
mov
loope
inc
push
and
aam
and
mov
sbb
adc
sti
ret
pop
mov
add
pusha
lahf
fnstcw
sahf
call
sbb
sbb
enter
test
pop
push
mov
daa
addr16
in
pop
adc
push
cli
je
xor
mov
mov
adc
hlt
xor
imul
mov
out
fs
rcll
cmpsl
and
jl
mov
pop
fimull
cmp
stc
addb
testl
int3
xchg
aad
popl
mov
stos
aad
pop
jmp
mov
mov
sbb
or
adc
mov
jbe
fstpl
clc
daa
out
xchg
ret
cmc
lret
sub
ss
jnp
das
mov
mov
movsb
push
sbb
pop
and
in
rcrl
mov
fistpl
mov
stos
add
inc
enter
mov
aam
push
inc
pop
push
ljmp
in
aam
sub
or
cld
lcall
cmp
and
imulb
and
dec
imul
add
xorl
and
and
data16
cmp
inc
decb
das
cmpsb
fisttps
repnz
cld
bound
cld
in
mov
xchg
lcall
cmp
aas
jne
lea
cwtl
mov
mov
jle
sahf
sahf
lcall
add
shll
stos
insl
pop
sbb
push
pop
sub
dec
adc
ljmp
dec
sahf
nop
stos
fisubs
lock
mov
dec
inc
scas
and
mov
rcr
cmpsb
out
rcrb
dec
sub
mov
fwait
push
lods
pusha
stos
jg
cmp
clc
push
push
lds
cmp
cmp
lods
xor
cmp
lret
jp
mov
pop
cld
lock
or
push
sbb
fisubs
sbb
jne
dec
bound
and
incl
rcll
pushf
sarl
call
test
lods
cmpb
and
xor
outsb
aam
pop
add
in
in
or
les
push
sbb
jl
test
jo
sbb
std
clc
xor
and
ret
rclb
ret
fwait
mov
imull
and
cmp
nop
ffreep
jb
jno
push
fidivrl
mov
imul
sahf
cli
nop
jecxz
jp
push
int
ja
sbb
xchg
cmp
es
repnz
in
cld
movsb
out
stc
jae
jle
insb
sbb
ret
outsb
js
mov
inc
xor
mov
outsl
rcrb
lods
mov
inc
jl
aaa
push
xchg
outsb
pop
add
or
fistps
stos
mov
push
xchg
sahf
imul
pop
xor
mov
gs
xchg
push
cmp
addl
push
clc
sbb
enter
mov
xor
movl
mov
lods
arpl
out
cmp
cltd
sbb
mov
add
xor
mov
or
xchg
sbb
add
fnstsw
in
mov
sti
mov
mov
sbb
push
mov
xor
xor
ret
fwait
jle
pusha
aam
fcompl
test
mov
jbe
in
push
push
mov
mov
fldenv
movsl
mov
movswl
jnp
insl
xchg
push
jle
cli
push
jo
rcll
lahf
add
fmuls
addr16
das
xchg
push
rol
adc
cmp
mov
push
inc
fisubl
or
jbe
int3
cmp
in
je
cmp
jge
mov
and
ja
pusha
popa
roll
cltd
jl
insw
icebp
and
pop
cs
push
cmp
jns
ret
lock
or
and
sub
fstpl
loope
fsubl
sub
div
rolb
rorl
les
les
icebp
sbb
or
add
add
xchg
test
outsl
dec
movsb
xchg
pop
leave
shll
into
xchg
inc
scas
test
dec
xchg
and
jge
mov
scas
out
xchg
movsb
fistpll
rcrl
rcl
or
inc
cmpsb
lods
fiadds
push
cmpsb
enter
daa
push
mov
nop
das
loopne
js
inc
out
xor
push
jbe
cmp
pop
roll
nop
jmp
in
dec
pop
cmp
add
xor
daa
xchg
sti
data16
xchg
cmp
add
adc
adc
imul
stc
sub
ret
add
push
push
mov
pop
or
xlat
aas
fldenv
aas
xchg
cwtl
test
into
or
dec
out
or
mov
rcr
ret
and
pop
lea
in
push
movsl
pop
and
movsb
or
push
push
sub
stc
mov
sub
mov
dec
sub
dec
and
lods
add
dec
adc
clc
lds
sub
dec
xor
pop
scas
pop
dec
std
adc
push
xchg
jo
cmp
jns
inc
test
loopne
cmc
add
mov
mov
jge
loopne
jl
imul
mov
mov
push
stos
add
push
or
stc
xlat
out
or
fimuls
xor
jns
adc
inc
or
bound
insl
lret
lret
mov
jb
cld
jmp
sbb
xor
out
push
insb
shl
sub
push
das
je
and
and
icebp
mov
ljmp
test
mov
adc
inc
mov
in
sub
insl
daa
sbb
hlt
shl
xchg
insl
bound
jae
or
fnstenv
test
sbb
jmp
out
cmp
int3
sub
aaa
sub
out
add
mov
add
scas
js
xchg
push
test
enter
insl
repz
mov
pop
shrl
sbb
cmp
add
push
mov
ja
sub
or
scas
push
mov
pushf
test
xchg
ficoml
jg
mov
aas
clc
imul
jne
cld
adc
pushf
insl
aad
jnp
sub
dec
mov
push
sbb
call
lret
daa
popa
push
pushf
pusha
ret
adc
dec
push
mov
jp
nop
fnsave
dec
jne
daa
sahf
js
add
nop
sar
fnstenv
jmp
xchg
mov
loope
push
cwtl
gs
cld
inc
inc
gs
aaa
lret
sub
xor
mov
sarl
loope
mov
add
push
or
shlb
lods
stos
sbb
out
insb
pusha
dec
mov
cli
test
mov
out
mov
test
test
lcall
fldl
in
jns
dec
iret
fwait
mov
pusha
mov
fiaddl
fs
shll
xchg
sarb
mov
lret
aam
push
dec
adc
lret
push
cmp
push
ret
mov
mov
stos
inc
pop
scas
pop
sub
fs
in
jo
fidivs
aad
js
addr16
mov
jp
add
jmp
cmp
andb
mov
hlt
arpl
fwait
and
add
cmp
gs
fisubs
sbb
xchg
cmp
jbe
jmp
out
out
loopne
nop
aas
sbb
push
cmp
ret
xor
xchg
out
xchg
iret
scas
je
mov
subb
xor
inc
mov
dec
or
push
int3
add
in
pop
xchg
cmp
mov
xor
fldenv
push
and
xchg
push
subl
stos
push
cmpsl
mov
popa
out
es
fildl
fwait
or
lds
add
sub
xor
dec
and
pop
sub
fs
mov
jnp
rorb
aam
xlat
or
mov
mov
pop
je
or
xchg
mov
lcall
sub
cwtl
fstpt
mov
sbb
lret
mov
jno
sar
les
and
mov
ljmp
sub
cmc
stos
and
sbb
sbb
sar
je
xor
addl
in
iret
xchg
int
cmpsb
ret
sahf
gs
xchg
lods
inc
loop
lock
in
test
test
sbb
test
jbe
and
xor
lods
cmpsl
sbb
dec
inc
mov
inc
mov
jl
idivl
xor
sahf
or
das
rclb
dec
stos
arpl
inc
fwait
sbb
fs
mov
adc
ljmp
repz
out
popl
ret
insb
dec
push
imul
inc
bnd
dec
vpunpckhwd
or
push
mov
sub
mov
pop
add
test
lcall
not
andb
int3
mov
insb
es
lcall
xchg
push
add
pop
or
and
xchg
out
pop
adc
jbe
pop
jge
dec
scas
divl
sar
aam
aam
dec
rorb
add
hlt
sti
adc
add
popa
fildl
push
dec
movsb
scas
in
daa
inc
sub
dec
jno
lods
and
into
sbb
jmp
push
out
movsb
mov
xchg
mov
mov
lret
addb
or
cli
jg
std
xchg
adc
nop
loop
leave
inc
mov
cmp
mov
andb
sbb
pop
mov
adc
pop
cltd
sahf
xchg
mov
andl
rcr
aad
add
idivb
jmp
pop
mov
or
test
add
aam
pop
add
or
lret
mov
mov
lds
rcrb
sbb
mov
inc
inc
push
dec
lcall
pop
mov
clc
pop
int3
and
jp
push
mov
jae
xchg
arpl
jle
sbb
pop
lods
xchg
mulb
mov
inc
pop
sub
jle
fldl
mov
call
jmp
xchg
ljmp
ja
fwait
daa
mov
mov
jp
xchg
and
fnstsw
mov
lret
cmp
shl
sbb
mov
or
int
pop
iret
inc
inc
add
inc
cmpsl
dec
outsb
movsb
stc
das
stc
dec
jb
cmp
ja
test
imul
inc
and
les
xlat
repz
sbb
pop
movb
sbb
xor
repnz
pop
lcall
mov
arpl
adc
stc
ss
mov
test
das
add
mov
in
rolb
adc
into
cwtl
aad
inc
sar
nop
mov
js
push
popa
pop
mov
cli
cmp
js
mov
jge
popa
xchg
scas
sub
lds
sub
dec
pop
imul
cmpsl
pop
add
mov
xchg
xor
inc
aaa
pushf
xchg
cmp
adc
lret
dec
insl
call
dec
lods
add
jl
shl
jo,pn
add
lock
mov
aad
push
dec
push
movsl
loopne
cmpsb
inc
pop
inc
xchg
outsl
and
stc
mov
dec
xor
dec
in
sub
dec
test
mov
or
push
pop
sbb
mov
and
dec
add
xchg
add
mov
lds
mov
mov
pushf
pop
pop
mov
repz
and
push
or
fs
push
mov
rcrl
aad
or
or
push
cmp
fisttps
jne
outsl
sbb
cld
outsl
add
addr16
sub
in
stos
hlt
or
push
dec
rcll
adc
enter
testb
fs
and
sbb
mov
repz
cltd
xor
rcll
aas
mov
xor
frstor
jbe
cmpsb
jl
lock
mov
fsubrs
js
xor
add
out
cld
daa
xchg
test
stos
stos
fbstp
xchg
dec
cmp
frstpm(287
sbb
cmpsb
cmp
sbbl
rorb
aad
inc
sahf
mov
test
jb
inc
ficompl
fwait
sub
stos
pop
mov
js
sti
neg
das
jge
push
stos
ljmp
cmp
dec
sbb
add
ds
adc
xchg
lret
fmuls
pusha
out
ljmp
orb
lcall
cmp
xchg
sub
add
xor
rcll
add
mov
cmp
jecxz
inc
inc
xor
jmp
out
add
xorl
cmpsb
ror
pop
je
or
fcmovnb
inc
mov
push
inc
out
mov
rorl
push
test
push
add
xor
mov
push
sbb
pop
inc
lcall
inc
cmp
das
addr16
jl
in
mov
sub
mov
push
inc
sti
xchg
sub
lock
mov
sub
mov
pop
adc
ret
sub
or
push
pop
aad
xchg
ds
shlb
push
test
sahf
adc
nop
in
std
pop
mov
data16
stos
daa
flds
mov
push
sbb
push
out
daa
fisttpl
addl
test
mov
ficomps
daa
sbb
mov
dec
test
and
mov
pop
push
inc
sar
into
sahf
push
fidivrs
mov
js
or
bnd
sahf
mov
sbb
lea
sti
sub
lcall
je
mov
inc
jl
jmp
inc
mov
xlat
out
into
inc
dec
sbb
rorl
stc
std
imul
add
sbb
ret
add
push
mov
mov
adc
fdivrl
dec
xor
or
inc
xchg
pop
sub
inc
mov
hlt
inc
nop
add
insl
ret
nop
test
pushf
jmp
xor
or
repnz
xlat
es
pop
outsl
pop
mov
push
mov
and
mov
mov
sarl
cld
sub
dec
jge
cmpsb
nop
pop
mov
adc
push
dec
loopne
mov
pop
fnstenv
add
fwait
hlt
inc
sti
stos
dec
xchg
cmpsl
int3
subl
dec
enter
outsl
fbld
fsubl
cs
lret
cmp
pop
in
fisubrl
fbstp
lock
sahf
popa
sti
push
mov
insl
cwtl
mov
fimull
sub
shlb
mov
xor
xorl
lods
lock
jb
jmp
cmpsb
cmp
mov
cmpsb
clc
insb
dec
pop
jl
cmpsl
enter
mov
inc
jns
and
repz
mov
mov
mov
mov
insb
pop
or
test
enter
xor
fimull
sub
cs
cwtl
ja
int
sbb
mov
mov
jge
lret
push
mov
int3
dec
les
mov
mov
jecxz
sahf
sub
sub
xlat
xchg
in
in
lock
fsubl
xor
aam
add
add
jbe
aas
push
push
cmp
sbb
call
shrb
or
mov
shll
imul
sub
lds
push
push
cmpsl
dec
shl
aas
lods
sbb
int
sub
ljmp
mov
cs
cmc
lods
dec
jg
pop
jb
movsl
and
sbb
inc
jg
fists
add
lock
jl
repnz
fs
mov
jmp
test
fisubl
sub
pop
jnp
pop
sub
clc
ds
or
add
das
loopne
inc
jle
shl
pop
mov
sub
das
or
cmp
movsb
movsb
lea
dec
and
and
dec
push
cli
fsub
mov
inc
pop
jmp
je
push
cld
int3
mov
mov
aas
sub
aad
add
imul
cli
fstl
mov
and
das
movl
mov
sahf
mov
add
sbb
frstor
sbb
inc
popf
fisttps
ds
cs
stos
xor
shld
test
repz
pop
dec
jnp
and
fsubrl
ficompl
lods
mov
inc
fisttps
and
in
fmuls
mov
outsl
lods
fisubl
pop
push
xorb
negb
lret
lcall
leave
das
int
xchg
pop
lods
cmp
arpl
mov
in
int
jae
out
jbe
inc
inc
icebp
js
dec
jmp
repz
inc
xchg
ss
clc
adc
sub
aaa
aas
mov
add
stos
jnp
fildll
sbb
dec
or
pusha
nop
and
mov
cs
dec
and
xor
mov
stc
les
loopne
incl
ret
jnp
xor
cltd
std
dec
adc
data16
lret
mov
cltd
inc
out
mov
pushf
pop
mov
loop
scas
sbb
idivl
loop
mov
cmp
and
rcll
dec
outsb
stc
mov
jl
mov
cs
mov
xchg
jle
mov
adc
sub
enter
in
insb
pop
adcb
sbb
enter
push
xchg
or
xchg
inc
inc
push
pop
add
or
lahf
mov
repz
test
push
xor
test
mov
repnz
ficompl
jecxz
dec
mov
ds
loope
push
add
lret
scas
imul
sub
insb
jae
ds
scas
xchg
imul
xor
stc
es
adc
cmp
shll
jecxz
sbb
inc
filds
jmp
add
test
push
test
xor
js
push
mov
jae
sub
push
xor
pop
cmp
cmpsb
xor
shr
add
cmp
add
test
add
sbb
cs
fists
mov
or
aas
nop
ds
or
pusha
hlt
cli
push
mov
in
sub
sbb
pop
sub
cvtps2pi
jecxz
mov
fstpt
popa
jp
rol
sbb
mov
push
sub
int
xchg
inc
add
out
push
rcll
pop
pop
mov
fisubrl
mov
mov
push
xchg
int3
shrl
mov
mov
repnz
push
negl
in
jle
mov
xorl
bound
add
cld
addr16
lods
xor
xor
mov
mov
aad
mov
outsl
pop
pop
addr16
push
ficoms
es
jp
je
test
inc
subl
rsm
fld
mov
rolb
cmp
ds
mov
push
std
std
outsl
xchg
mov
inc
test
mov
ret
ljmp
dec
shr
mov
and
sub
dec
xchg
js
add
dec
stc
das
xchg
daa
cwtl
sahf
mov
inc
mov
test
gs
mov
rorb
sarb
nop
xor
mov
jge
lretw
add
stos
jmp
mov
imull
lods
loopne
sarb
lods
xorl
pop
cld
mov
lahf
adc
xchg
repz
mov
sub
imul
mov
xchg
add
pop
xlat
les
mov
pop
gs
ss
pop
orl
add
xchg
jno
fsubrs
pop
insl
test
add
testb
cld
icebp
mov
xor
jae
pop
add
pop
ret
aad
into
adc
mov
hlt
dec
jb
je
sbb
pop
sbb
std
out
jno
and
clc
repz
mov
or
mov
aaa
cmpsb
mov
mov
jge
dec
mov
js
shr
dec
mov
push
jne
jge
stc
sub
xor
movsb
fcoms
lods
test
xor
adc
test
add
sbb
popf
lcall
and
lds
test
test
in
clc
sbb
sub
xchg
mov
sub
loop
aaa
stos
sbb
aam
icebp
pop
inc
test
fdivl
roll
rorb
aam
out
mov
fbstp
mov
or
dec
cli
inc
ss
pop
pop
pop
rcrb
fsubl
stc
shl
sti
dec
movsb
mov
add
mov
push
cmpsl
jecxz
adc
pusha
mov
dec
mov
sub
inc
ss
xor
sbb
cmc
ds
xchg
jge
shlb
aad
daa
sbb
mov
sbb
mov
leave
ret
jae
or
sub
jne
cwtl
mov
add
mov
movsl
cwtl
or
dec
jbe
pop
out
ljmp
push
ljmp
inc
es
sub
pop
jne
enter
jmp
mov
xlat
sub
fsubl
int
mov
mov
cli
gs
inc
sub
or
push
mov
mov
mov
fisubl
xorb
jno
ret
pop
push
movsb
jmp
adc
lret
mov
es
sub
sti
in
add
arpl
xchg
mov
bound
in
mov
pop
out
or
add
stc
fxam
or
adc
sub
pop
adc
fisubrs
mov
fdivr
lods
xor
jge
in
shll
pushf
push
xchg
or
loope
jle
inc
sti
dec
push
call
jg
ror
and
pop
subl
lods
outsb
lods
sub
cltd
flds
pop
xchg
inc
push
nop
jmp
mov
mov
xor
repnz
mov
jbe
js
add
pop
cmp
jns
mov
lret
push
movb
popf
divl
sub
sbb
pushf
out
xchg
xor
enter
dec
movsb
mov
cmovg
push
add
ja
mov
ljmp
pop
fdivrs
pop
mov
push
repnz
dec
dec
mov
fsub
aaa
dec
enter
negl
pop
xchg
icebp
push
les
outsb
sbb
pop
rep
das
pop
sbb
cltd
scas
xchg
daa
sar
jbe
rcrb
push
in
fildll
fistl
add
sbb
or
cmpsb
dec
mov
in
cmpsl
hlt
lock
sub
repz
mov
aaa
mov
adc
in
sbb
inc
and
xchg
scas
add
dec
mov
cs
insb
inc
int3
inc
arpl
jnp
in
int
lods
addr16
loop
out
test
jns
mov
cmp
lret
iret
xor
push
and
add
data16
je
mov
mov
push
push
addr16
jle
iret
in
inc
movsl
dec
insb
adc
mov
loop
pop
stos
add
add
xchg
dec
repnz
shl
mov
rcl
sbb
push
orl
push
sub
out
js
jno
orb
rol
iret
int
test
cli
int3
sarb
xchg
pop
push
jnp
jmp
or
sbb
mov
movsb
in
outsb
hlt
dec
lock
mov
adc
flds
lea
lcall
push
inc
lret
mov
pop
lahf
xchg
sbb
adc
fadds
gs
inc
and
cli
xchg
add
jg
xadd
xchg
pop
cmc
lahf
xchg
pop
inc
pop
mov
or
aam
jno
adc
jnp
das
jl
add
inc
inc
imul
dec
lcall
imul
jb
jb
movsl
in
cmp
adc
mov
rolb
shlb
mov
push
roll
test
push
adc
mov
xlat
je
les
mov
test
hlt
loope
adc
cwtl
adc
mov
inc
fnsave
pop
push
fmull
add
jb
pop
shlb
lcall
mov
mov
icebp
imul
xor
fidivl
inc
fmulp
adc
test
pop
scas
pop
jo
nop
shll
inc
push
out
insl
lds
or
inc
add
and
sarl
xor
jmp
jb
pop
sbb
inc
xchg
cltd
mov
sbb
cmp
movsb
adc
mov
mov
in
incl
xor
pop
add
mov
dec
jecxz
mov
enter
hlt
shlb
pop
int3
out
out
imul
pusha
pop
and
push
pop
das
adc
in
cmc
ljmp
pushf
test
rcrb
mov
popf
aad
xchg
pop
insb
adc
fsts
int3
ret
jb
cmp
push
aas
pop
icebp
xlat
fldl
jl
xchg
mov
mov
jb
add
adc
rcll
cmpb
outsl
div
mov
mov
pushf
jle
xor
cmp
les
xor
mov
repz
push
and
sub
or
and
jno
enter
xor
pop
xorl
sbb
mov
xor
fstl
dec
lret
sub
loop
ja
andb
ret
and
test
in
in
pop
mov
add
cmp
add
sub
add
mov
shlb
mov
andb
mov
jo
push
fstps
loop
das
adc
ljmp
xor
pusha
inc
adc
cltd
aaa
sarl
movsl
nop
subl
popf
mov
cmp
arpl
pop
dec
cmc
lcall
and
add
xchg
push
arpl
mov
sbb
gs
mov
lods
xor
imul
negl
outsb
sbbl
mov
fistps
sbb
mov
out
mov
sub
pxor
mov
add
stos
fs
mov
xchg
mov
xor
pop
ds
pop
mov
mov
jbe
sti
popl
inc
adc
add
insl
jno
test
shl
in
xor
and
in
popa
jmp
dec
mov
inc
inc
or
xchg
shlb
sahf
ret
pop
rorb
or
pop
xlat
fldl
xlat
lock
adc
dec
mov
gs
pop
aaa
mov
mov
out
mov
add
push
xchg
lret
cld
addr16
mov
femms
or
aas
imul
sub
fdivl
lret
xchg
insb
add
lds
pop
inc
xchg
dec
loope
jne
orl
and
push
sbb
test
cmc
push
push
jge
scas
or
and
sbb
loop
sub
lds
das
sahf
sbb
sub
sbbb
cmp
and
das
push
lret
xchg
sub
sub
add
mov
pop
pop
pop
mov
scas
push
sbb
shll
outsb
push
pop
mov
shrb
dec
dec
mov
out
xchg
dec
push
ds
icebp
jge
sub
push
cmp
shr
xor
or
or
mov
or
arpl
cmpsl
sub
mov
pusha
sub
nop
pusha
imul
fcompl
mov
imul
pop
jge
xor
lods
sub
js
dec
in
popf
cmp
loope
cwtl
sbb
stos
iret
inc
insb
pop
movsb
inc
imul
mov
mov
out
test
dec
cmp
aas
lcall
push
sub
cmp
push
push
outsb
fwait
lret
jecxz
repz
aam
pushf
cli
mov
pop
loop
push
jecxz
jo
pop
push
adc
inc
stos
lods
popa
dec
push
pop
and
sub
or
ret
and
repz
lea
jnp
inc
jle
mov
dec
movsb
push
xor
dec
popa
sti
mov
jge
mov
inc
add
pop
pusha
push
jmp
mov
inc
mov
imul
inc
push
jp
aad
inc
push
sub
fisttps
popa
jns
lahf
jl
xor
jg
pushf
addr16
and
call
xlat
popa
xor
push
fcoms
cmp
pop
dec
xorl
xchg
mov
sar
mov
jp
inc
jmp
jnp
mov
das
push
push
xchg
stc
mov
xchg
mov
xchg
xor
adc
in
mov
sbb
mov
and
sbb
sbb
push
pop
pop
inc
repnz
test
aas
lahf
call
mov
ret
subl
dec
dec
pop
xchg
icebp
idiv
adc
loopne
sub
mov
sahf
imul
scas
mov
lock
push
mov
jo
adc
aam
add
cltd
out
lcall
xor
repnz
repnz
mov
or
sbb
pusha
fstpl
add
fwait
adc
pop
pop
push
lods
xor
test
jle
fiadds
arpl
ss
mov
test
cwtl
adc
in
mov
sub
bound
or
lods
inc
mov
ret
push
ret
les
cmpb
aam
sub
ret
xchg
push
jge
into
mov
cmp
xchg
cmp
int3
imul
ret
adc
lret
movsl
dec
loop
and
jp
fwait
xlat
insl
nop
icebp
and
xlat
lret
hlt
mov
jae
fcomip
fs
adc
xorb
cmp
push
push
dec
into
pop
xchg
sbb
mov
in
xor
test
push
mov
push
sbbb
sbb
jg
cmp
jecxz
mov
jl
outsl
imul
adc
or
movsl
in
inc
jmp
jmp
dec
rclb
int
jbe
sub
jecxz
testb
jo
add
stos
xchg
adc
adc
bound
mov
sbb
sub
mov
xchg
mov
push
mov
adc
mov
pushf
and
lret
add
rcr
fucomi
jae
inc
in
cli
scas
xor
push
push
addr16
jbe
loop
cwtl
in
fisttpll
scas
imul
test
aad
push
sub
test
jnp
pop
pop
outsl
bound
push
push
loop
or
popf
sbb
push
or
jb
sarl
arpl
mov
fistpll
cmp
dec
jecxz
sbb
in
add
pop
push
jno
jp
add
in
sarb
cmpsl
dec
or
in
ja
sub
push
lds
out
jns
hlt
fldenv
push
and
dec
idiv
add
xchg
xchg
sbb
and
lea
loope
sbb
dec
mov
mov
push
add
cltd
pop
push
sbb
std
inc
inc
sub
out
mov
push
jle
insb
movsl
and
out
cmp
pop
loope
push
jno
add
mov
mov
sbb
and
outsb
jge
inc
ret
mov
add
stc
scas
xor
ljmp
inc
push
cmp
xor
out
insb
mov
fsubp
loope
pop
add
in
popf
sub
iret
mov
pop
inc
pop
dec
jge
mov
jl
loope
mov
xchg
mov
push
xorb
mov
xlat
or
adc
xor
sub
pop
insl
sbb
mov
leave
sub
fistps
mov
pop
mov
cmp
jbe
sub
loop
xchg
sarb
mov
push
ja
cmp
fwait
mov
push
aam
add
les
test
push
pop
or
lret
clc
mov
cmp
cld
fnstcw
es
adc
aas
xor
icebp
and
mull
inc
insb
sbb
ja
mov
pop
dec
sbb
pop
pop
testb
clc
ss
psubw
xor
add
push
xorl
and
add
clc
and
or
sbb
jmp
mov
or
sbb
in
and
aad
mov
pop
insl
and
mov
push
je
sbb
sbb
mov
xor
jle
cmp
repz
xchg
fbstp
jo
mov
adc
sbbb
or
call
inc
dec
rolb
mov
in
add
lcall
dec
jl
dec
pushf
popf
lds
sub
outsb
fs
cwtl
and
and
inc
and
xchg
jg
jbe
mov
sahf
je
fnstcw
push
xchg
pusha
xor
xor
test
hlt
rcrb
mov
subb
xor
inc
mov
jmp
sbb
xchg
popa
jnp
inc
popf
mov
dec
push
jmp
pop
and
or
mov
pop
cmpsl
push
out
ss
js
repnz
sarl
pusha
cmpsb
dec
sub
sbb
dec
aam
int3
aaa
jp
sarb
and
inc
add
sub
add
xchg
ds
mov
mov
jle
mov
xor
dec
nop
lahf
cli
mov
mov
daa
inc
inc
xlat
push
and
fcoms
lods
mov
mov
jb
aas
mov
jnp
in
xchg
sub
or
in
mov
pop
arpl
fwait
arpl
clc
jo
in
dec
dec
aas
mov
out
fs
xchg
adc
jecxz
xchg
inc
mov
addr16
mov
lea
popa
mov
cli
adc
cwtl
les
jle
pop
cmp
ret
mov
les
hlt
fucomi
adc
test
sbb
cmp
pop
jl
sahf
xchg
outsb
arpl
mov
ljmp
sbb
ja
or
loop
mov
outsl
adc
dec
sarl
xchg
cmp
ja
ja
pop
mov
imul
sbb
inc
loop
fcmovne
adc
pop
jb
mov
roll
and
es
cli
pusha
and
enter
mov
push
rcll
and
aam
lock
pop
jnp
inc
jl
or
jmp
sbb
pusha
sub
xchg
xor
pop
scas
jne
and
xlat
rcll
rcll
push
or
int3
shl
fs
lea
inc
jbe
sbb
out
dec
adc
fstpl
hlt
mov
mov
inc
cmp
in
daa
lock
dec
icebp
adc
and
jo
into
cld
push
mov
lret
add
stos
and
addr16
dec
cwtl
push
inc
inc
mov
dec
lahf
ret
addr16
aas
in
pusha
aad
xchg
test
sbb
ss
add
jns
outsb
dec
jbe
test
shlb
xor
xchg
out
xchg
xchg
jg
jge
shrl
push
das
test
sub
cli
jle
cmp
xor
sbb
bound
dec
mov
dec
xchg
mov
dec
scas
jg
nop
add
test
cmpsl
rcrl
and
in
or
or
xor
push
fstps
mov
push
xor
xchg
or
arpl
xchg
push
add
push
sub
adc
pop
xchg
lcall
mov
push
imul
and
jno
stos
sbb
adc
addl
xchg
inc
imul
insb
add
orl
cltd
push
push
out
test
loope
jnp
mov
lcall
icebp
data16
cmp
icebp
aam
xchg
sahf
pop
xchg
out
mov
scas
ret
outsl
pop
loopne
cmpsb
ds
add
sbb
push
add
add
push
and
xchg
jl
push
mov
jnp
test
out
insb
lcall
cmp
sahf
adc
xor
pusha
jns
int
jle
int3
pop
mov
adc
dec
sbb
cmp
lods
lds
cmp
or
sbb
ret
mov
gs
fidivrs
enter
mov
pop
hlt
mov
jge
mov
push
cmc
out
jno
fwait
push
jge
jnp
inc
xor
ja
push
in
cld
test
add
cli
sbb
ljmp
and
inc
out
xorb
jl
ds
nop
fidivl
add
loop
xchg
xchg
xchg
and
lods
and
call
push
mov
dec
add
cmpl
int3
aam
or
fwait
daa
repz
xchg
cli
add
pop
inc
push
xor
js
stos
cmpsb
jae
pop
sub
push
gs
inc
jnp
lods
xchg
test
xlat
mov
lea
jmp
int
sub
adc
cwtl
jge
mov
mov
dec
incb
push
mov
loopne
lods
iret
ss
sbb
filds
int3
mov
fwait
push
jbe
or
cmp
movsl
dec
xchg
mov
dec
getsec
inc
js
jno
dec
or
pop
mov
and
mov
shrl
push
mov
imul
lahf
fwait
xor
loope
inc
inc
cmp
adc
std
add
sub
imul
sub
push
cmp
aas
or
cmp
sbb
mov
sti
pusha
cmp
shlb
push
and
xchg
mov
jbe
mov
aam
imul
sub
cmp
push
aam
sarb
and
add
fdivrl
mov
xlat
sbbb
out
or
fistpl
roll
xor
sbb
into
dec
stos
scas
adc
lret
loope
xchg
and
loop
arpl
add
into
sub
incb
pop
inc
pop
pushf
pop
faddl
dec
jmp
push
jl
push
fucomp
xchg
aam
in
jle
or
in
mov
out
lods
jo
iret
inc
test
inc
cmp
lcall
adc
pushf
stos
sarl
into
jl
das
in
cld
mov
pop
cmp
or
push
pop
loopne
push
dec
dec
int
push
sbb
push
lds
xchg
dec
xor
mov
aas
mov
jle
push
jno
sbb
pop
test
lsl
cmpsb
or
leave
cs
push
jo
jbe
pop
mov
leave
inc
hlt
hlt
outsl
and
stos
aam
scas
movsb
sbb
and
mov
jno
aas
push
daa
lahf
rorl
dec
push
jnp
jle
leave
xchg
in
or
inc
loope
push
andl
ss
cwtl
or
fists
mov
sbb
pop
dec
and
pop
shrl
cmp
jle
mov
bound
pop
mov
cmp
lret
lcall
orl
sbb
jo
test
push
xor
lock
xor
push
scas
and
data16
mov
mov
mov
sahf
das
test
aam
popf
pusha
lcall
aad
cwtl
ret
cmc
cwtl
jl
jle
cmp
or
xor
ret
or
xchg
fdivrl
test
cmp
jne
push
mov
stos
cld
or
dec
scas
jne
addb
jne
xchg
push
sub
fldenv
jl
movsb
jl
sahf
xor
mov
mov
mov
sbb
lea
pushf
xchg
fisubl
pop
cli
jns
cmp
lcall
je
push
pop
jp
jg
dec
cltd
js
mov
movb
mov
adc
pop
xchg
into
outsl
test
pop
adc
sbb
popf
lahf
in
push
jle
adc
add
xchg
ror
int3
lds
jmp
mov
loope
nop
xchg
movsl
fs
ret
add
or
rol
out
xor
pop
xchg
sar
push
repz
jbe
pop
icebp
inc
scas
test
arpl
dec
repz
hlt
push
add
xor
dec
mov
mov
rclb
adc
mov
rorl
mov
je
push
sbb
inc
outsl
lods
enter
out
jl
or
or
cmpsl
xor
sub
push
mov
icebp
or
sbb
inc
sub
stos
mov
loope
dec
xor
lcall
aad
call
repnz
push
pop
mov
cmpsl
leave
stos
aam
loop
insl
add
adc
in
in
add
dec
mov
push
jle
xchg
jns
inc
mov
push
sahf
cmc
mov
shlb
xor
pop
mov
lock
add
cmpsb
test
outsl
and
mov
jl
lock
xchg
inc
mov
adcl
stos
inc
outsb
mov
mov
inc
inc
push
lock
shrl
jg
xor
test
loop
mov
sbb
iret
push
jl
cmc
fdivrp
pop
jl
mov
stos
cmp
sahf
loopne
test
jb
ds
or
jmp
inc
test
xor
add
rolb
pop
pop
repz
out
dec
clc
sub
nopl
leave
mov
add
mov
mov
mov
repz
nop
mov
jns
aas
add
jne
jmp
in
in
sub
fwait
or
pop
sbbl
push
movsb
cmc
pop
test
aad
or
ret
xchg
sbb
out
sbb
dec
testl
jnp
jno
xchg
adc
jge
add
jae
sbb
movsb
mov
or
sub
sub
mov
jne
and
in
xchg
sarb
cmp
xchg
lock
sahf
jae
xorl
and
nop
lret
repnz
mov
or
shrb
shl
addb
mov
aaa
pop
lods
call
outsl
sahf
pop
lock
jae
shrb
push
and
xchg
adc
lock
pop
push
sar
clc
adc
dec
sbb
data16
int
push
cmpsl
arpl
mov
jnp
pop
push
sub
add
add
add
cmp
das
pop
icebp
mov
les
lods
add
push
rcrb
or
jecxz
dec
lret
sbb
les
mov
jnp
inc
sarl
sbb
mov
mov
or
mov
icebp
fistl
mov
mov
mov
loope
cmpb
shrb
ds
jmp
decb
cmc
out
ja
mov
clc
sbb
and
mov
and
xlat
mov
pop
push
stos
adc
mov
call
fidivl
aad
clc
ret
dec
rorl
add
aas
pop
add
mov
repnz
clc
lea
loop
sub
pop
movsl
insb
fs
call
cmp
pop
mov
std
imul
aad
int3
mov
mov
mov
sub
cmp
xor
rcll
ret
fcomps
cmp
fisttps
mov
jb
push
adc
xlat
adc
add
xchg
mov
fisttpl
adc
push
dec
test
add
sbb
mov
pop
cmp
jne
dec
inc
sbb
mov
jns
xchg
xor
adc
ret
jmp
and
je
push
push
cmpsb
loopne
jle
out
repnz
jmp
pop
fstps
ret
bound
into
lret
pop
xchg
leave
cmp
xlat
imul
push
mov
mov
pop
ret
fldenv
xchg
rcrl
pop
dec
mov
dec
stc
arpl
inc
push
lds
add
scas
data16
shll
repnz
add
mov
imul
mov
push
fnstsw
cmp
enter
add
cmp
enter
adc
inc
mov
orb
cmc
out
sarb
inc
xor
arpl
test
push
sbb
jne
call
stos
xchg
lock
cmp
lock
sub
nop
scas
fs
repnz
lods
adc
jge
fcompl
push
jno
jle
mov
xchg
jecxz
rclb
test
jg
mov
out
sub
jnp
cmpsl
cs
pop
test
andb
push
push
inc
sarl
sub
loope
pop
xchg
xchg
ja
lret
dec
std
xchg
stc
sbb
mov
jge
cltd
push
mov
je
dec
xchg
sub
cmp
dec
into
ret
inc
add
insb
stos
push
jnp
jp
decl
jmp
and
not
jecxz
add
jmp
pop
andl
dec
add
int3
sub
addl
mov
fmull
mov
fs
push
insl
lret
cmp
or
inc
rolb
mov
add
mov
leave
mov
pop
xchg
divb
jns
clc
lret
and
xchg
rcrl
aad
mov
outsb
or
sbb
xchg
leave
mov
jae
mov
stos
scas
ja
cld
or
scas
pop
jl
nop
mov
push
lds
mov
out
pop
cmc
in
insl
or
cmpsb
or
icebp
mov
movsb
and
and
hlt
push
jb
push
push
and
mov
es
lahf
pop
cltd
and
sub
mov
lahf
xor
lret
arpl
fstpl
xchg
dec
insl
xchg
cmp
or
add
lds
mov
push
mov
icebp
lea
sbb
outsl
push
jb
cmp
pop
sub
push
push
sbb
inc
roll
ss
loopne
push
and
adc
test
bound
insl
cmp
xchg
mov
stc
movsl
push
int3
mov
or
xchg
or
rcrb
mov
mov
sub
pop
ss
loopne
dec
cmpsb
mov
xchg
orl
push
das
mov
xchg
negb
gs
xor
sbb
int
cmp
and
mov
out
xor
cmp
outsb
pop
in
andl
mov
mov
cmp
fisubrs
imul
push
xchg
imul
xchg
popa
dec
mov
loop
lods
les
mov
mov
ficompl
stos
mov
inc
adcl
fisubl
stc
add
sub
fildl
push
out
jecxz
sub
pop
jmp
ljmp
mov
pushf
jecxz
js
jb
cmc
add
test
lds
incl
sub
mov
pop
xor
push
xchg
loopne
pop
mov
jmp
sub
xchg
and
sti
jno
adc
xchg
and
pop
cli
push
cmpsl
xor
sub
and
xchg
ja
cld
sti
adc
inc
cmp
xchg
outsb
rclb
adc
arpl
in
mov
push
insb
sub
add
sub
repz
cmp
dec
loope
or
adc
fwait
and
xchg
jg
jge
adc
stos
mov
je
mov
or
popa
imul
mov
dec
adc
jo
pop
test
push
pop
jno
jecxz
mov
icebp
sub
cli
mov
jae
fs
or
jle
outsl
cmpsl
or
adcl
cmpsb
xlat
jg
andb
inc
jno
insl
jb
cs
dec
mov
insb
dec
call
xchg
or
lock
sbb
rcl
jne
cmpsl
sub
ljmp
ret
dec
sub
xor
push
in
repnz
ljmp
ja
repnz
in
clc
mov
in
aad
std
aam
xor
xlat
inc
imul
pop
negl
and
xlat
dec
lock
jne
xor
sbb
sub
adc
jmp
mov
in
sbb
jp
inc
jl
mov
push
sahf
loop
int3
shll
cmp
and
jg
dec
shld
sbb
in
push
mov
xor
movsl
sbb
gs
pusha
push
ds
inc
mov
leave
sub
sbb
jo
lahf
xchg
lock
or
jnp
addb
and
jo
test
jge
lcall
sbb
movsb
inc
push
loope
or
xor
addb
int3
jg
or
mov
push
jmp
mull
cmpl
inc
outsb
cli
fimull
out
mov
xlat
gs
mov
sbb
or
shrl
orl
outsl
aad
lods
dec
pop
jne
inc
jae
pop
out
popa
pop
xchg
push
loopne
cltd
sub
jle
idivb
mov
mov
jecxz
xor
sti
inc
ret
repz
ret
fmuls
pushw
pop
push
adc
sahf
aad
ficoml
test
jl
divb
les
or
jl
and
push
mov
repnz
mov
or
add
popf
inc
xlat
cmp
jnp
rol
sbb
cmp
xchg
adc
mov
sub
push
out
gs
add
xchg
mov
mov
jnp
pop
outsl
mov
fucomi
scas
dec
out
cwtl
call
ljmp
std
add
pop
lahf
ja
and
fcmovne
or
jecxz
push
jnp
data16
mov
adc
lahf
adc
xchg
es
adc
pusha
jle
mov
mov
and
int
dec
add
das
repz
lea
xchg
xchg
sbbb
repz
dec
mov
and
mov
xchg
cmp
jno
gs
xchg
mov
add
adc
rcll
mov
cmp
popa
fstl
push
loop
imul
jl
cld
mov
ror
inc
or
pop
test
je
and
dec
int3
popa
in
out
sub
and
fistps
jb
outsl
test
into
das
fidivrl
mov
into
gs
jne
adc
aaa
sub
addr16
ret
jmp
jl
push
sbb
jmp
movsl
xor
pop
mov
push
ror
adc
clc
dec
mov
shr
leave
add
push
test
sarb
fadd
xor
pop
dec
aam
repz
xchg
scas
inc
sbb
adc
cmp
adc
sub
push
into
push
add
dec
sub
sub
lds
lahf
push
sub
cmpsb
push
inc
xchg
adc
scas
or
stos
stc
dec
sti
loopne,pn
push
mov
aaa
sarl
mov
aam
je
les
std
push
enter
or
daa
mov
out
mov
and
lock
dec
xlat
mov
jns
aas
xchg
mov
sub
sub
or
test
pop
xchg
mov
push
lods
scas
mov
sbb
xchg
ret
cmp
xor
in
sub
popf
sbb
lods
push
mov
sbb
push
repnz
lea
push
inc
mov
cmpsl
out
xorl
sub
aas
and
repnz
and
push
imulb
and
pop
xor
fld1
mov
xlat
push
mov
sub
mov
jbe
sbb
xchg
inc
fdivs
andb
and
cltd
inc
push
jns
xchg
lods
movsl
add
aas
push
push
pop
add
jl
inc
dec
pusha
lock
lret
pop
xor
cmp
push
ljmp
dec
or
sub
mov
stos
pop
jmp
cmc
les
mov
xchg
inc
mov
inc
push
or
mov
daa
xchg
sbb
loopne
aad
lcall
ja
and
cmpsl
psrlw
repz
or
in
clc
xchg
sti
mov
test
mov
xchg
pusha
adc
insb
lret
mov
insb
cmp
mov
insb
stc
mov
jp
push
inc
es
cmpsb
mov
pusha
inc
sbb
aam
pop
jae
xchg
jae
or
jp
aaa
fimull
or
jnp
dec
lea
insl
and
pop
pushl
mov
aad
int3
filds
sub
mov
in
scas
roll
pushf
int
push
test
sahf
shll
push
mov
lret
xor
aas
das
test
mov
enter
or
mov
loop
jecxz
pop
scas
test
cmp
xchg
sub
pop
in
lock
lret
push
shrb
or
adc
lods
fcmovu
bnd
push
movsb
inc
jge
lahf
jb
dec
sub
sbb
ret
xchg
pop
inc
jg
push
call
mov
pop
shlb
jmp
int3
into
mov
repz
and
rclb
in
lock
clc
das
xor
lret
mov
sub
inc
inc
mov
jb
xchg
cmp
sbb
pop
lea
sbb
popf
sbb
leave
mov
xchg
push
ret
testl
or
cmp
std
inc
mov
mov
xchg
negl
sub
pop
cltd
out
cmc
cmp
or
shlb
fstpt
lret
mov
sub
fisttps
push
adc
imul
push
sbb
pop
pop
fistl
mov
pop
push
add
xchg
cmpsl
je
aad
cs
mov
fbld
xor
jge
popf
in
out
xchg
lds
xor
or
lret
shl
jno
xchg
jecxz
pop
movsb
inc
insb
dec
daa
js
clc
mov
xchg
cmpsl
jmp
nop
mov
pop
pop
pop
arpl
lods
jg
xchg
push
or
int3
cmpsb
out
pop
jmp
pop
je
jge
cmp
int3
icebp
sub
cmpsb
adc
pop
cmpsl
push
add
out
mov
inc
testb
shlb
adcb
adcl
and
loopne
lret
lret
xor
scas
jo
insl
mov
jecxz
call
sbb
push
fmull
loopne
add
cmp
ja
push
mov
xor
xchg
and
int
das
or
sub
in
ljmp
add
mov
aaa
xor
cltd
add
scas
mov
je
rcl
enter
cmp
xchg
repz
push
mov
jne
mov
jae
rcr
aaa
dec
mov
cmp
out
shrl
xchg
bound
ljmp
mov
jae
in
push
inc
add
dec
mov
mov
sbb
arpl
xor
aaa
mov
in
outsl
enter
das
data16
fprem
pop
mov
rcrl
xor
cmp
xor
orl
sbb
int3
pop
hlt
push
scas
out
and
mov
fwait
outsb
push
push
call
xor
cmp
inc
mov
addb
mov
mov
cmpb
out
xchg
jns
sbb
dec
lods
xchg
shll
outsl
iret
mov
sbb
ror
jb
mov
jo
cmp
sub
xchg
ss
scas
fdivs
jns
dec
mov
push
sub
in
call
adc
icebp
adc
xchg
push
dec
dec
gs
pop
mov
andb
fadd
out
call
mul
mov
pop
cli
adc
daa
rorl
enter
xor
cmpsl
inc
sub
loopne
inc
push
lods
hlt
push
sub
pop
mov
and
nop
mov
mov
iret
mov
dec
data16
scas
push
jbe
addr16
mov
push
push
pop
mov
mov
mov
loop
int
sahf
sub
outsb
xor
mov
test
outsb
add
out
mov
adc
push
cs
mov
scas
pushf
aam
jb
pusha
sbb
test
jo
inc
and
lcall
daa
push
leave
inc
add
je
inc
stos
mov
lcall
loopne
bound
or
sahf
in
and
mov
repnz
cmp
mov
arpl
add
xchg
cld
cltd
addb
cli
fdiv
sbb
cmovns
pop
repnz
adc
mov
sub
mov
loopne
adc
xchg
lods
shr
ret
xchg
mov
lods
stos
sub
sbb
mov
fcompl
xchg
cmp
jno
lods
pop
xor
insb
push
pop
jno
lret
jp
test
leave
push
mov
xor
xor
mov
add
aam
jno
test
loop
ret
in
imul
mov
enter
stc
xor
sbb
xchg
mov
mov
xchg
outsl
xchg
mov
inc
or
and
cmp
imul
cmp
pop
inc
mov
fidivs
mov
adc
call
out
mov
jns
xchg
inc
jae
xchg
popa
xor
mov
lods
sub
xor
push
push
mov
mov
jp
add
cmp
cltd
mov
push
test
in
in
jae
push
xchg
mov
xchg
xchg
test
ficoms
out
scas
xchg
pop
cmp
adc
xchg
mov
scas
pop
fbstp
pop
js
inc
jns
rorb
imul
imul
fidivrl
xlat
mov
sbb
mov
les
out
mov
lock
or
add
jbe
loope
std
sub
lods
jge
insl
aam
push
mov
mov
sub
xlat
or
daa
insl
inc
xor
out
test
jmp
add
cmp
xchg
sahf
clc
test
pop
and
les
inc
xchg
pop
and
mov
or
jle
call
icebp
inc
add
aas
fbstp
in
or
leave
xorl
les
mov
shl
inc
jne
xchg
mov
in
sar
fimuls
add
ret
inc
in
xor
sub
ds
push
add
xchg
ret
cmp
into
out
adc
mov
mov
pushf
stos
cmp
push
call
rol
int3
cmpsl
push
push
shl
and
pop
hlt
pop
sub
out
in
dec
push
aam
sbb
fistpl
insl
push
xor
rcll
es
xor
cltd
or
or
or
cmp
shrl
arpl
in
push
lds
sub
add
bound
scas
out
add
dec
popf
mov
pop
sahf
scas
rolb
jmp
add
dec
jge
pop
sbb
in
xchg
xor
inc
xor
sub
ds
daa
insl
lahf
xor
and
or
bound
nop
adcl
es
sbb
dec
xchg
bound
sbb
dec
icebp
cmpb
mov
jnp
int
xchg
pushf
or
and
mov
mov
cmp
xchg
cmp
test
lds
adc
shlb
mov
lock
int
xor
lds
jg
mov
repz
jle
mov
call
lods
aam
mov
push
add
xor
mov
addr16
loope
ret
sub
pop
dec
mov
movsb
xlat
lods
and
jg
adc
inc
xlat
mov
pop
movsl
add
mov
pusha
imul
mov
cli
mov
lcall
pop
sub
pop
lcall
fistpll
pop
mov
mov
int3
mov
sarl
mov
call
push
lret
mov
test
out
test
cs
xor
mov
jne
in
push
pop
dec
push
daa
push
pop
scas
mov
push
mov
xchg
xchg
dec
push
pop
and
inc
pushf
les
loopne
xchg
mov
fbld
fmull
mov
arpl
pop
and
or
mov
call
out
xor
out
add
test
ja
add
popw
filds
and
push
clc
lock
mov
and
stos
into
sbb
inc
sbb
jns
mov
frstor
int3
or
stos
adc
pop
movsb
hlt
mov
or
fistpl
fbld
sarl
clc
cld
repnz
mov
adc
icebp
dec
call
fldl
sahf
inc
sbb
mov
loope
repz
test
mov
mov
int
adc
pop
icebp
cmp
test
stc
dec
mul
xor
mov
out
shlb
arpl
repz
enter
ljmp
test
sbb
pop
mov
icebp
movsl
mov
movsl
repz
enter
cmpsl
push
les
mov
fdiv
jmp
jne
lods
loop
jle
xchg
insl
mov
and
lcall
std
iret
and
mov
scas
out
lods
aam
cli
int3
inc
pop
js
or
sub
movsb
inc
push
ror
mov
sub
push
int
mov
aad
out
sub
adc
mov
das
inc
insl
popa
std
mov
test
push
pop
add
fcoml
mov
inc
dec
sub
das
sbb
and
test
dec
mov
cmp
mov
adcl
dec
dec
xlat
or
add
cmp
and
outsl
dec
sbb
pop
testl
cwtl
daa
pop
shrl
sub
jo
jle
rcll
stos
lods
xchg
cmp
testl
lods
pop
mov
mov
xchg
push
ljmp
nop
push
push
adc
lds
mov
xchg
repnz
sarb
lods
fdivp
xchg
push
add
adc
ret
arpl
loopne
mov
mov
imul
push
popf
xchg
xchg
adc
pop
aam
push
mov
mov
sti
sbb
lahf
pop
push
in
lock
std
popf
ja
test
in
std
jle
repz
inc
cmp
adc
adc
in
into
adc
fwait
inc
fstpt
mov
sbbb
jo
cltd
push
subb
jo
add
jo
dec
leave
jl
mov
mov
inc
mov
push
insl
mov
lret
imul
jnp
sub
and
pop
jmp
rorl
fsubrs
and
mov
icebp
xor
inc
jp
call
leave
sbb
cmp
std
sub
push
imul
cmp
lcall
xchg
jmp
push
or
cmp
and
inc
or
inc
pop
pop
dec
movsl
jge
mov
mov
pop
stos
mov
in
sub
sbb
scas
pop
and
push
dec
push
sahf
std
cmp
stc
and
dec
xlat
pop
aaa
mov
aas
add
ret
stos
or
mov
jb
pop
pop
pop
adc
and
cmc
daa
and
pop
inc
xor
xchg
in
shll
mov
and
xor
je
jg
lret
cmc
pushf
push
fs
insl
rclb
lea
pushf
xlat
cmp
fistps
inc
jns
xchg
stos
rolb
cltd
data16
fcom
sarl
scas
movsl
push
or
mov
fbstp
mov
sbb
cmpsw
sub
and
testl
gs
mov
push
push
bound
scas
xchg
outsb
into
fldenv
dec
jbe
cmp
xor
mov
add
cmpsl
cmp
roll
xchg
mov
xor
push
incl
fmuls
cmp
scas
das
xchg
popf
mov
pop
arpl
mov
sub
adc
push
mov
mov
push
add
mov
out
imul
mov
cmp
xor
sahf
mov
xor
test
aad
dec
insb
dec
push
dec
jno
out
outsl
add
test
jmp
xchg
ja
popa
push
pop
cmpl
sub
jle
and
cltd
add
xorb
scas
popa
rorl
stos
pop
add
sti
push
adc
lret
cmpsb
fbld
sbb
out
adc
loopne
push
sub
stc
xchg
cwtl
sub
push
adc
ljmp
stc
or
add
mov
push
mov
mov
cmp
jbe
cltd
pmaxsw
sbb
inc
sahf
rcll
inc
cmc
into
mov
icebp
push
out
cmc
jns
gs
mov
jae
lock
jp
mov
cmp
in
xchg
or
cmp
insl
iret
push
dec
inc
fistpll
std
fadds
shrb
insl
jecxz
shl
pop
mov
mov
cmp
cmp
jno
or
stc
pop
jae
in
out
xor
ja
xor
jp
or
loope
xchg
xor
repz
cpuid
adc
inc
and
cmpsl
pop
data16
mov
clc
in
xchg
ljmp
or
mov
pop
jmp
int
jb
sub
push
shll
xchg
xor
int
inc
dec
xchg
jno
mov
outsl
das
cmp
aas
xor
lahf
pusha
rcrl
out
push
aad
xchg
lods
dec
adc
enter
jne
mov
outsl
leave
stos
fisttpll
cwtl
adc
dec
in
sbb
lret
sar
pushf
xchg
sti
dec
xchg
xchg
dec
push
je
test
sub
fs
pop
xor
call
aaa
jmp
repnz
out
jb
push
scas
xor
popa
xor
xchg
add
out
and
dec
push
xorl
adc
outsl
fadd
movhps
fists
sbb
inc
cmp
jns
je
insl
sbb
mov
lock
jb
movsb
mov
xor
inc
add
inc
push
call
int
std
dec
loope
nop
orl
cmp
adc
adc
mov
jo
fs
incl
sub
mov
pop
xchg
rorl
pop
cltd
cmp
dec
mov
xor
ljmp
adc
cmc
mov
add
pop
cmp
push
arpl
pushf
ret
add
and
in
loop
push
sbb
pushf
push
orl
cmp
loop
stos
movsb
inc
and
inc
cmpsb
push
cltd
pop
aam
sbb
js
inc
or
emms
push
out
arpl
mov
dec
cld
popl
outsb
popf
cmp
xchg
shlb
out
xchg
cmp
icebp
test
adc
out
shrb
outsl
in
xchg
ljmp
xchg
scas
js
or
cmp
or
xlat
mov
outsb
es
sbb
test
mov
mov
pop
mov
jns
xor
mov
pop
cmp
pop
adc
in
add
add
js
and
mov
adc
outsl
sub
nop
cltd
sbb
bound
outsl
and
push
mov
xor
les
xchg
imul
mov
mov
xchg
pop
dec
and
js
out
stc
lret
aam
adc
sti
dec
dec
enter
ljmp
mov
call
push
or
adc
pop
xor
jae
fnstcw
mov
jge
push
inc
fldl
pop
push
sub
xor
mov
inc
rorl
out
jbe
vfmsub213sd
loop
inc
cltd
stos
xchg
loope
and
cs
ficoms
jecxz
fs
call
adc
xor
int3
mov
pop
or
filds
push
cltd
int3
sti
nop
stos
lock
xchg
movsl
adc
cltd
jmp
jge
inc
mov
adc
xor
adc
and
loopne
icebp
mov
adc
add
cmpsl
adc
test
popf
adcl
pop
jecxz
push
jl
jecxz
mov
mov
test
sub
cltd
js
pop
roll
cmpl
dec
push
add
iret
ljmp
jg
jno
ret
lock
mov
mov
pop
vmread
push
movsl
and
and
dec
shlb
mov
push
ss
cwtl
jle
mov
repnz
mov
jae
mov
in
in
in
jbe
and
or
inc
imul
and
inc
push
bound
xlat
lods
jbe
adc
std
out
pop
xchg
in
dec
les
add
fstl
xchg
lcall
dec
xor
fsubr
ds
movsl
insl
test
push
cmp
pop
push
jmp
int3
mov
ret
add
loopne
scas
xchg
and
dec
test
jne
loop
aas
mov
das
jns
loope
mov
xchg
ds
cmc
jbe
sbb
or
mov
pop
insb
inc
es
push
das
jbe
mov
rclb
sbb
lods
mov
lods
fildl
sbb
push
insl
cmp
push
shlb
inc
test
aad
aas
dec
adc
and
das
jmp
shr
scas
inc
ljmp
xchg
repnz
flds
test
xorb
loop
add
pop
pushf
lret
xlat
jmp
jecxz
sbb
fnstsw
cld
scas
inc
xchg
mov
or
addr16
cld
sub
dec
xor
ja
pop
jecxz
lods
jmp
inc
jo
jecxz
and
stc
inc
xor
test
cwtl
iret
or
arpl
push
cmpsl
fisttps
add
pop
mov
outsl
mov
shrl
push
push
pop
push
mov
pop
sub
mov
bound
shl
jl
or
ljmp
adc
inc
push
jge
inc
lds
test
or
mov
xchg
in
loop
pmaxsw
mov
cmp
push
call
fsubrl
jne
inc
loope
cmp
lea
sbb
jge
pop
fimull
sbb
mov
loopne
lret
fldt
cmpsb
fsubl
rcll
das
adc
mov
pop
sbb
aaa
lods
and
in
sub
sbb
add
std
mov
popa
pop
add
std
add
adc
fisubrl
mov
test
insl
xorb
les
ds
ja
add
sti
adc
push
test
adc
adcl
iret
lods
adc
inc
add
js
mov
js
dec
mov
bound
mov
sbb
push
je
sbb
lods
push
sti
movb
idivb
out
cmpsl
les
push
outsl
loopne
mov
pop
cmpsb
cltd
fyl2xp1
mull
popf
add
cmp
ret
mov
jmp
dec
cmp
sti
and
cld
out
adc
jmp
inc
loopew
cwtl
pop
pop
xor
fwait
mov
and
shrl
cmpsb
cmc
dec
mov
incb
sbb
sti
fwait
pop
cmp
dec
mov
ljmp
mov
dec
pusha
and
rol
fs
or
shl
cmpsl
xchg
jge
add
jl
insb
mov
sbb
cmp
adc
add
or
call
push
repz
jnp
popf
aam
pop
cs
push
icebp
push
and
push
mov
push
movsb
mov
mov
imul
sub
dec
push
xchg
nop
cld
cmp
cmp
pop
aad
pusha
xchg
xchg
jbe
xor
push
jnp
filds
xchg
mov
cmp
out
mov
xor
ljmp
es
xor
xor
int
push
imul
arpl
into
lret
insl
push
repnz
enter
roll
pop
imul
mov
imul
and
pop
ljmp
fcoms
bnd
popa
inc
les
xor
test
dec
mov
pop
aad
pop
sahf
push
dec
sbb
test
data16
popf
ds
push
cmp
scas
lea
adc
pushf
dec
sbb
and
mov
data16
js
push
mov
xchg
mov
lahf
jmp
xlat
aas
imul
mov
or
stos
mov
outsl
lahf
adc
xor
inc
lret
sbb
enter
bound
in
mov
insb
mov
mov
push
adc
shl
insb
and
xchg
lods
cmp
cmp
pop
mov
scas
pop
mov
call
mov
fdivrs
repz
ljmp
call
dec
add
loopne
jno
sbb
in
or
movsl
les
or
repz
mov
jp
fldl
inc
xchg
mov
scas
gs
cmp
pop
xchg
jg
inc
cmpsl
ljmp
dec
insl
mov
popa
mov
jb
lret
sbb
xor
out
mov
les
jg
add
es
popa
ret
push
dec
sahf
aad
xchg
js
insb
or
dec
push
mov
xchg
into
push
jl
adc
dec
scas
cmp
aaa
arpl
mov
std
mov
mov
or
notl
mov
mov
fisubrs
lods
mov
xchg
push
sub
sbb
loopne
sub
pop
andl
mov
dec
xchg
movsb
and
jb
je
sbb
mov
fcmovne
jp
arpl
cld
shlb
mov
aas
sub
or
mov
daa
mov
mov
rorb
ljmp
or
les
jmp
mov
rcr
loopne
cmp
test
shlb
jnp
inc
fstl
mov
xor
stos
lds
lock
xchg
and
jmp
in
lods
adc
icebp
es
in
into
das
dec
push
xchg
rcl
aad
pop
inc
roll
and
mov
dec
stos
mov
insb
pop
inc
push
dec
add
sub
in
loope
jne
adc
scas
mov
cli
insl
and
sub
sbb
outsb
ss
out
pop
fisubrs
scas
sbb
test
test
push
xor
fbstp
mov
jge
call
gs
mulb
sahf
jl
and
call
and
cmp
data16
test
stos
push
push
cmp
or
jmp
mov
js
icebp
movsl
push
lret
ret
js
cld
out
aas
aaa
mov
orw
sbbb
nop
es
stos
pop
js
aas
fistl
xor
mov
xor
adc
jmp
ror
imul
sti
sbbl
mov
rorb
adc
push
sbb
popf
and
lret
iret
popa
shrb
sbb
in
push
pop
in
push
and
dec
cmp
in
push
push
adc
pop
adc
test
push
les
mov
lods
test
subb
dec
push
hlt
ret
and
icebp
jle
fwait
xlat
dec
adc
cmp
mov
mov
aam
aaa
and
imul
cmpsl
rcr
xchg
cmp
rol
lcall
push
jp
dec
xor
pop
xchg
gs
push
dec
adc
mov
lret
stos
lds
adc
cmp
pusha
xorb
jecxz
xchg
stos
mov
inc
pop
hlt
imul
pop
ds
icebp
cmp
test
insl
xorb
pop
ljmp
not
cwtl
adc
mov
cmp
js
outsb
inc
fldenv
and
stos
insb
jge
push
xor
aas
inc
enter
xchg
push
mov
divl
dec
fcmovne
jo
and
mov
adc
stos
and
rcll
sub
lret
lock
dec
notb
cli
adc
mov
aam
mov
mov
cmp
jo
rclb
pop
icebp
scas
mov
fadd
mov
xchg
cmp
push
scas
arpl
out
xchg
fistpll
mov
ret
push
push
jnp
arpl
sub
cmpsb
jecxz
in
pop
rorl
mov
leave
in
dec
adc
iret
sahf
xorl
fwait
out
pop
int3
and
ds
test
fwait
sar
adc
mov
in
je
jecxz
sbb
mov
das
dec
and
fiadds
cli
push
inc
sbb
inc
stos
or
lahf
aad
sbb
and
or
and
sub
jl
aaa
in
imul
pop
inc
jno
jle
pop
fistps
mov
adc
imul
push
push
mov
push
sub
lcall
mov
push
jnp
xor
int
adc
jb
jo
aaa
mov
dec
mov
stos
shl
add
xor
scas
lock
add
icebp
mov
or
out
inc
cli
div
push
cmp
xchg
mov
cmc
mov
sbbl
pop
mov
mov
aaa
or
push
mov
pop
sti
xchg
loop
shrd
xorb
push
adc
mov
inc
pop
mov
mov
add
sub
insl
flds
hlt
mov
xor
xchg
push
leave
test
pop
cmp
jecxz
js
lret
xor
mov
push
or
in
imul
addl
les
jp
or
mov
sbb
out
add
fistpll
jns
inc
addr16
fs
rcrb
pop
and
imul
insl
hlt
push
frstor
adc
nop
stos
js
cmp
cwtl
jae
insb
dec
sbb
mov
sub
pushf
xchg
lods
dec
xor
pop
js
mov
push
fcoml
dec
push
lret
mov
sub
scas
movsl
cmp
movb
push
jmp
fdivs
cmp
pop
mov
aam
insb
cmp
inc
cmp
fsubr
fdivl
dec
imul
in
sub
fcoml
pop
xor
fwait
add
or
push
cmp
cld
mov
xchg
ljmp
push
loop
push
shrl
sub
lret
enter
and
test
movl
pusha
pop
lds
mov
ror
pop
mov
fcmovnbe
mov
es
sub
adc
or
fldcw
or
ja
sbb
xchg
adc
shl
jmp
pop
mov
cli
scas
jmp
aam
in
repz
jecxz
cmpsb
pop
xlat
jl
jle
fwait
mov
imull
mov
aam
pop
or
cmp
sbb
push
pop
jmp
popa
mov
pop
lcall
push
sbb
jmp
xchg
dec
ja
mov
in
repz
ret
xchg
dec
pushf
xchg
cmp
jnp
fidivrl
cli
cmp
xchg
inc
int3
mov
lret
das
jbe
mov
cmp
pushf
and
jb
aam
add
and
shrl
lahf
mov
in
sub
lea
in
lahf
inc
mov
daa
dec
push
pop
sbb
int
pop
ds
pop
icebp
int3
lret
xchg
repnz
adc
fsts
out
or
scas
push
js
jg
es
dec
add
and
aas
lret
repz
jp
ret
push
imul
lods
out
jl
aas
fxch
mov
mov
mov
lret
daa
cmp
cmp
inc
mov
loop
pop
mov
cwtl
test
daa
inc
insl
sub
testl
inc
inc
aaa
in
ljmp
jbe
lcall
fsubrs
sahf
arpl
aad
sub
cmp
mov
push
dec
mov
cmc
mulb
popa
push
flds
fidivrs
inc
inc
imul
jne
xor
mov
js
int
xor
jecxz
jae
lods
pop
js
mov
int
jnp
or
aas
dec
jecxz
cmp
xor
xchg
xor
inc
pop
insb
shr
bound
ret
lret
cmp
pop
lock
outsl
cmp
lea
pop
cmpsb
mov
mov
dec
xchg
jle
dec
pop
dec
gs
inc
int
jmp
mov
ret
and
jecxz
cmpl
ds
in
int3
enter
push
xlat
fwait
shl
mov
xchg
xlat
push
or
mov
loope
in
mov
xor
cmpsb
into
mov
out
sub
adc
adc
mov
sbb
lret
xchg
dec
mov
xchg
lea
ljmp
push
aad
in
in
test
cmc
ss
sbbb
mov
cmp
popf
inc
popf
repz
andb
sbb
inc
pop
mov
or
sahf
clc
aaa
shr
insb
xchg
adc
sub
and
lret
test
fdivrl
xchg
pop
adc
push
sub
lds
loopne
push
fcmovnb
pusha
fwait
aam
push
xor
bnd
pop
es
icebp
xor
stc
and
cmpb
inc
clc
mov
dec
loopne
xchg
mov
pushf
cld
mov
mov
mov
lret
call
push
cld
insb
roll
adc
push
sbb
mov
and
repnz
cmp
out
aad
inc
mov
mov
dec
xor
dec
pusha
fiadds
psubusw
int
into
or
into
push
xchg
mov
ret
mov
cwtl
sbbb
icebp
push
inc
ljmp
pop
sub
lds
and
adc
roll
movsl
fisttpll
repnz
adcb
cli
mov
add
pop
xchg
pop
jno
cmp
mov
xchg
cmpsb
jle
xorb
add
and
jge
cmc
and
and
xor
repz
jae
jmp
push
filds
imul
jmp
and
push
mov
out
in
cltd
std
pop
insl
mov
test
popa
cmpsl
bound
and
and
mov
xchg
sub
in
mov
jmp
jmp
jns
scas
sbb
pop
mov
mov
pop
xlat
cli
add
push
push
jp
dec
mov
ja
addr16
mov
sub
pop
mov
in
pop
pusha
mov
cmp
int
mov
mov
lahf
and
add
int
cmc
push
aad
dec
stos
or
aam
xchg
push
jnp
cld
and
pop
cmp
cmpsl
incl
and
repnz
ljmp
repnz
mov
call
in
inc
outsb
xor
int3
push
out
mov
fwait
mov
xchg
push
pop
pop
xor
pop
pop
jbe
add
mov
mov
sub
je
aas
mov
sub
add
xchg
jnp
rorb
push
lahf
xchg
cmp
call
or
xor
sbb
orl
ret
sub
xchg
cmp
stos
les
mov
int3
xchg
into
mov
aas
shl
push
scas
movsb
and
in
xor
movb
mov
push
mov
mov
adc
xchg
mov
sub
xchg
add
sub
mov
jno
sub
bnd
mov
jno
push
sbb
sub
ljmp
sbb
in
movsl
add
nop
sub
stos
cli
push
sub
movsl
pop
dec
insb
std
push
and
push
aaa
jecxz
xchg
std
pop
mov
in
jg
sub
jl
push
outsb
pop
push
mov
lahf
lock
sub
lock
jg
rcl
mov
test
pusha
out
and
xchg
add
into
mov
dec
lds
mov
pop
out
shlb
or
xor
pop
rclb
pop
push
xchg
int
aaa
jl
mov
sub
popf
add
push
adc
ffreep
or
ret
and
cmp
scas
push
ret
adc
pop
lcall
pusha
dec
popf
das
ja
out
sahf
dec
in
lret
push
mov
js
mov
sub
arpl
or
pushl
jns
nop
addb
inc
les
stos
outsl
shll
loopne
das
roll
lcall
call
js
adc
push
inc
dec
push
ret
mov
jns
lock
test
push
sbb
xchg
sbb
sub
pusha
mov
jno,pt
in
outsl
sub
add
push
pusha
loope
das
insl
movsl
movsl
insl
mov
aad
mov
mov
in
test
mov
cmpsb
mov
lahf
adc
dec
or
movsl
xchg
adc
xlat
gs
lret
leave
cltd
in
jp
dec
stos
int3
std
mov
in
pmullw
sbb
mov
inc
cmpsb
push
movsl
push
in
sub
imul
scas
rclb
push
mov
outsl
add
push
pop
mov
sbb
mov
mov
dec
mov
cmc
std
push
pop
or
data16
ss
pop
pop
push
or
hlt
in
aam
notb
cmpb
jp
flds
aas
ret
test
jns
adc
push
ret
xlat
movl
test
mov
pop
jge
stos
addl
insl
insl
outsl
push
sub
pop
icebp
stc
mov
xchg
int3
push
fdivs
or
pop
xor
insl
addr16
loopne
cwtl
addr16
cmpb
sbb
adc
loopne
cmp
sahf
push
inc
repz
xor
cmp
ljmp
inc
inc
test
adc
rcl
scas
adc
pop
cli
ret
out
push
inc
pushf
mov
inc
pop
push
aam
movsl
inc
and
in
fisttps
sbb
pop
xchg
jecxz
jge
fwait
enter
mov
xchg
cmp
mov
sbb
pop
xchg
mov
fldt
test
roll
inc
sbb
sub
out
jns
mov
lret
mov
mov
jne
les
jle
js
xchg
daa
mov
cmp
pop
jmp
push
sub
jae
or
jbe
push
lahf
fsubs
int3
in
xchg
sub
ror
imul
popl
mov
cmp
jge
rol
lcall
and
loop
out
lahf
push
fistps
jecxz
roll
rcl
lock
push
cmp
popa
fimull
out
xchg
mov
sbb
sbb
mov
xlat
push
iret
xor
fisubrs
stos
pop
rolb
fwait
pop
pop
ljmp
xorl
xorb
xor
mov
xchg
das
icebp
and
insl
pop
jae
adc
out
sbb
out
cmp
movsb
add
test
addl
aam
loop
fs
stos
into
mov
cmp
test
lock
mov
xchg
jo
or
adcl
sub
inc
xchg
jbe
sti
lea
popf
gs
fistpl
lahf
in
pop
in
xor
loope
add
mov
jge
pusha
adc
xor
fsub
xchg
rep
sbb
scas
arpl
push
or
lahf
in
je
adc
and
lcall
mov
loope
inc
mov
adc
dec
pusha
rcll
clc
dec
push
popa
rcrl
adc
cmpsl
adc
negb
mov
push
mov
ja
iret
xor
xchg
int3
pop
add
movsl
loopne
cli
bound
leave
mov
xor
inc
pop
loope
inc
cmpsb
inc
push
in
mov
imul
das
sti
add
mov
sub
xor
jns
loope
stc
mov
sahf
bound
inc
out
cmp
insl
leave
scas
jge
mov
out
mov
add
dec
cwtl
cmc
push
enter
cmc
push
in
sub
in
hlt
xchg
loopne
push
sub
leave
lret
mov
mov
xchg
mov
hlt
cmp
xchg
add
out
adc
mov
or
stc
mov
dec
cmc
std
cwtl
mov
cmp
or
jg,pn
jecxz
mov
pop
dec
lods
ret
xchg
fwait
mov
mov
lret
lods
jae
imul
sbb
mov
sti
leave
lock
out
cltd
fcoms
negb
xorl
lahf
scas
push
loope
mov
pushf
repz
push
and
dec
jbe
pop
mov
push
jle
jp
bnd
cmp
clc
cmpsl
mov
xchg
ret
dec
enter
cmp
mov
cmp
dec
or
adc
rcrb
js
add
stos
jno
nop
mov
call
sti
pusha
cmpsl
cmp
cs
pop
icebp
nop
mov
push
ret
dec
xchg
xor
int
loopne
shl
cli
or
pop
adc
jo
pop
jmp
das
jge
sub
ja
and
test
icebp
scas
outsb
mov
pop
in
dec
out
mov
mov
rclb
daa
pop
mov
lahf
test
out
daa
dec
fists
nop
test
clc
add
aas
neg
outsl
je
out
imul
inc
push
stos
mov
dec
imul
cmp
cld
xchg
call
cmp
movsb
aas
test
xchg
sarl
mov
cmpsl
jmp
cmp
pop
popa
iret
xor
or
mov
test
inc
mov
dec
and
sub
push
add
loopne
sbbb
dec
stos
cmp
push
fwait
sub
loope
pusha
mov
jle
inc
cs
out
dec
cmc
jbe
popa
push
add
ror
cwtl
aad
imul
cmc
lcall
and
fnstcw
xchg
js
push
mov
jp
sbb
dec
sahf
incb
or
pop
rcll
fidivl
dec
cld
mov
incb
hlt
ret
mov
mov
es
js
jg
add
push
and
addr16
cmpsb
inc
lea
popl
sbb
cli
clc
mov
repnz
and
add
or
mov
cmc
mov
stos
cmp
out
mov
push
add
push
outsl
xchg
mov
and
xor
int3
or
jge
mov
inc
fcmovb
mov
shll
pop
aaa
fldcw
dec
imul
sti
mov
loop
in
lea
ret
testb
dec
jae
ret
jbe
stos
add
aas
and
cmp
adc
xchg
leave
test
aad
xchg
out
rcrl
inc
add
cmp
cmpsl
cmp
ss
dec
inc
je
mov
add
aam
cltd
inc
sbb
jns
imul
shll
pop
lods
ret
inc
out
inc
xor
lahf
pop
shlb
jmp
dec
xor
xchg
adc
sbb
xor
fs
mov
pop
addr16
lds
loop
sarl
or
nop
cli
xlat
fimuls
adc
cmp
rcrl
call
pop
daa
out
popf
sahf
fwait
int
out
mov
adc
in
loop
mov
dec
cmp
fiadds
pop
imul
dec
sbb
mov
dec
mov
fistl
into
jnp
pop
xor
dec
pusha
iret
cmpsl
cmp
out
pusha
push
pop
int
sahf
andb
mov
mov
mov
out
sub
dec
dec
push
js
vmovaps
xor
jl
cmovns
xchg
add
inc
cs
xchg
insl
out
mov
add
or
inc
sub
jp
outsb
cli
mov
xchg
adc
test
pop
daa
popf
adc
or
sbb
test
inc
scas
test
jp
push
inc
out
mov
push
or
pop
push
scas
dec
pop
inc
inc
and
lea
mov
std
fisubs
in
mov
lahf
clc
pop
int3
or
pop
aad
mov
xor
fstps
or
cld
faddl
adc
jae
dec
mov
inc
testl
pop
mov
sub
or
bswap
lret
in
lahf
ja
in
add
ljmp
decl
enter
fldenv
lcall
fists
in
sbb
cmpsb
bound
shlb
mov
imul
mov
dec
jno
mov
test
fidivs
push
jle
cmp
mov
xlat
leave
int3
sub
mov
mov
add
aam
and
ret
out
shlb
xor
bound
and
push
js
inc
sub
aam
mov
dec
dec
in
lahf
or
xchg
pop
iret
push
mov
mov
lds
les
jmp
pop
xor
mov
push
adc
xor
jbe
test
and
out
push
push
push
xchg
jb
mov
add
push
lret
fiadds
cmpsb
sub
sub
aaa
dec
dec
cli
popa
xchg
cmpsb
rcr
sbb
mov
jp
je
js
ljmp
xchg
inc
iret
xchg
cltd
nop
test
cmpsb
xor
cmp
jne
cmp
push
mov
xchg
out
test
fdivrp
mov
pop
xchg
xor
test
test
fs
leave
inc
jbe
call
outsl
push
popa
aad
or
adc
pop
mov
mov
mov
cmp
mov
jnp
repz
loope
pop
sub
and
jl
xor
add
arpl
xchg
test
add
inc
add
cmpsb
sarb
testl
daa
addr16
mov
lds
adc
mov
out
ljmp
pop
mov
or
cmp
xor
out
lds
mov
leave
jae
fsub
imul
mov
cmp
mov
sub
jmp
idiv
xchg
dec
shll
inc
int3
cld
ret
mov
ljmp
ror
sub
ljmp
dec
pop
push
pop
int3
rorb
loopne
nop
adc
push
int
sbb
mov
mov
push
add
shrl
sbb
into
cld
insl
insb
ret
je
mov
and
pop
repz
imul
movsb
inc
std
or
invd
pushf
icebp
out
mov
cmpb
out
or
and
jae
das
xchg
push
inc
mov
addb
mov
outsl
lods
push
push
fdivrp
ret
sub
dec
sub
xchg
adc
addr16
into
jae
pop
sub
sub
xchg
daa
push
sbb
test
lcall
outsl
ret
ret
adc
xor
xchg
push
add
add
pop
pop
das
dec
mov
adc
sbb
jnp
jg
inc
xchg
pop
hlt
lret
aam
add
aaa
mov
sbb
cltd
mov
mov
ds
lret
push
pop
sbb
and
ds
out
clc
jl
shll
xchg
pop
dec
mov
ret
pop
int3
pop
cltd
aam
ret
adc
push
and
xor
mov
ret
lock
and
pop
test
in
sar
dec
push
dec
fs
jle
divb
jnp
mov
movsb
inc
in
adc
mov
test
in
xor
out
and
dec
aas
mov
sub
je
es
or
aad
mov
shlb
xchg
and
cwtl
in
sub
cmp
cli
out
sahf
arpl
jl
test
pop
sti
jp
push
mov
adc
cs
jb
mov
mov
scas
xchg
icebp
adc
jp
or
push
adc
jmp
sets
cld
xchg
mov
push
daa
in
cs
mov
adc
dec
pop
sahf
enter
es
cmpb
icebp
pop
mov
iret
fists
dec
loop
insb
je
mov
out
adc
adc
adc
adc
add
xchg
stos
lret
gs
mov
sub
mov
movsl
mov
std
pop
sti
mov
fadd
call
sbb
cmpsl
pop
adcl
push
sbb
stos
jno
jmp
xchg
cmc
test
sub
and
inc
cltd
adc
test
rcll
mov
push
mov
mov
shlb
mov
insl
mov
rcrb
or
dec
sbb
dec
lds
push
je
scas
or
mov
push
sbb
pop
push
in
sub
mov
inc
rcll
test
jp
cld
aad
add
sbb
dec
insl
std
jns
add
cmc
xchg
mov
ret
xor
ret
cwtl
sub
push
dec
xor
inc
cld
dec
xorl
ret
idivb
idivl
cmp
mov
adc
jecxz
pop
or
pushw
jne
xor
jmp
jno
lret
std
xor
mov
mov
mov
pop
push
fs
push
fs
add
or
jae
xchg
ja
stos
xchg
pusha
lods
sbb
xlat
cwtl
int
arpl
cmc
adc
dec
sub
loopne
xor
xchg
dec
fldl
stos
repz
je
xchg
and
add
ss
leave
out
lods
stos
pop
add
insl
push
mov
xor
sub
sti
mov
dec
hlt
push
insl
fbstp
xorb
xchg
ja
fisubrl
repnz
subl
pop
pop
dec
sbb
or
lret
mov
fnstenv
adc
cwtl
cmp
js
shrb
dec
imul
icebp
xchg
sbb
or
jo
mov
sub
xor
mov
or
call
leave
pop
ret
mov
fucomip
jmp
xchg
push
mov
push
mov
push
xor
push
jp
lds
hlt
int3
mov
fistps
lds
repnz
mov
arpl
aaa
pusha
es
mov
insb
mov
mov
fimull
inc
andl
jbe
cmpsb
mov
sub
xchg
xchg
push
cwtl
cmc
xor
jmp
lahf
fdivs
mov
popf
xor
and
mov
jb
sbb
aaa
fcmovnbe
jecxz
jb
scas
loope
mov
inc
adc
add
gs
dec
xchg
cmpsl
cmc
aad
outsl
cmp
adc
lods
sbb
fisubrl
fdivl
mov
sti
clc
iret
mov
adc
ret
mov
cmpsb
cmpsb
mov
mov
inc
loop
cmpsb
mov
rorl
vmovups
fstpl
fnsave
ret
ss
mov
mov
xchg
fs
push
and
sbb
mov
repz
movsb
pop
les
sub
xor
cmpsb
lods
ds
loope
enter
jo
fucomp
aam
ret
ja
lret
icebp
mov
xchg
jae
mov
add
cmp
pop
ljmp
jb
lret
jmp
scas
add
loope
nop
jg
add
sbb
dec
xor
sbb
and
cmp
daa
mov
inc
jbe
test
sbb
sti
pushf
and
sbb
rorl
es
sub
dec
dec
filds
imul
add
xchg
imul
test
mov
mov
cmp
int3
pop
and
sub
ror
shll
xor
xor
stos
nop
jg
sub
fdivl
push
pushfw
pop
call
out
repz
nop
xchg
mov
cmp
ds
xchg
shrb
mov
das
sbb
cwtl
loope
and
push
push
add
outsl
repz
repz
or
iret
mov
sub
mov
push
sbb
pop
jl
outsl
sub
jg
lods
imul
leave
jnp
ret
sbb
repz
sbb
xchg
in
add
add
aaa
loope
hlt
repnz
adc
lock
push
fincstp
adc
idivb
add
test
or
ja
shrb
stos
sti
mov
cmc
or
jge
push
push
mov
and
xor
dec
rcrb
and
mov
lahf
in
cmc
ficomps
add
inc
in
test
cmp
mov
pop
insb
mov
dec
xor
pop
sbbb
pop
cltd
push
jecxz
inc
sub
aam
jns
mov
push
pushw
scas
jb
mov
fimuls
test
jg
pop
addr16
in
or
andl
bound
bswap
out
mov
lret
orb
and
sahf
sbb
dec
and
xor
jb
pushl
pop
jno
mov
jnp
rcrb
sbb
hlt
push
aad
aas
pop
jbe
jl
mov
push
push
je
insb
mov
xorb
push
cmpsl
imul
int3
mov
insb
mov
sahf
push
pop
pop
icebp
ficoms
adc
clc
jnp
sub
icebp
adc
mov
cmpsb
or
fcmove
stos
mov
sub
fisubrl
cmp
xchg
in
sbb
cmp
cmp
lcall
lea
xchg
cltd
sbb
or
addr16
jmp
or
cmp
sbb
xchg
je
and
loop
mov
stos
sub
pop
cmc
pop
out
in
ret
adc
gs
xchg
inc
dec
adc
mov
inc
out
sahf
jp
push
call
jbe
xor
inc
push
mov
cmpsl
jg
xorb
pop
int3
shrb
jle
out
adc
mov
mov
js
jns
ds
pusha
pop
std
or
cld
test
sub
mov
jbe
repz
jno
icebp
mov
shrb
imul
rclb
orl
jp
xor
mov
repnz
out
cmpsl
adc
fidivrl
sbb
push
ret
stc
in
decl
xchg
cmp
js
lret
daa
sub
les
into
xchg
mov
out
cld
push
sub
popf
test
cmpsb
test
xchg
xchg
mov
rcll
jae
leave
fisubrs
stos
sbbb
adc
add
gs
inc
add
icebp
mov
inc
jbe
mov
in
pop
inc
cmp
sbb
inc
xchg
jl
pushf
mov
mov
testb
push
adc
sbb
cmp
xchg
repnz
leave
lcall
push
stos
dec
inc
hlt
push
lods
adcb
mov
dec
mov
pop
out
cmp
cmp
addr16
and
and
or
in
or
testl
insb
std
xchg
in
jecxz
push
pop
pop
inc
iret
movsb
xchg
mov
sbb
cld
xchg
out
addb
test
sarb
dec
aaa
dec
fstpt
mov
in
lcall
icebp
pop
push
mov
xchg
jb
mov
mov
test
add
fstpl
ljmp
aam
ret
mov
clc
out
imulb
shrl
pop
in
mov
xchg
jmp
xchg
jecxz
push
sub
fadds
add
aas
and
jg
xchg
ja
into
stos
jmp
dec
mov
or
int
and
cli
dec
cmp
xchg
fstl
adc
lods
push
int
cmp
fisttpl
push
in
pop
test
adc
or
sub
jbe
dec
xor
repnz
pop
jmp
faddl
rolb
xlat
lret
out
push
mov
rcrb
push
dec
mov
jns
mov
outsb
sahf
cld
sti
test
cltd
rcrb
ljmp
fcoms
dec
cmc
insb
mov
pop
lret
gs
in
mov
push
pusha
repnz
lods
fistpl
ja
stc
cltd
jo
stc
jns
mov
xor
imul
push
out
roll
repz
in
test
xchg
xchg
out
ret
cmp
repz
cmpsl
mov
push
mov
aaa
aaa
iret
popf
ret
inc
dec
lock
aas
jns
hlt
iret
pop
sbb
outsl
mov
stos
cmp
insl
and
inc
lods
iret
call
xchg
xchg
xchg
aam
mov
mov
or
orl
and
xchg
test
les
call
ds
test
jle
dec
pop
or
outsb
cltd
xchg
mov
sbb
xchg
mov
mov
cmp
push
dec
pop
dec
js
ja
cld
mov
or
mov
pop
mov
dec
addb
nop
jae
inc
test
sub
sbb
sbb
mov
cmp
cwtl
loop
jecxz
jne
test
addr16
cld
loope
xor
test
mov
xchg
add
ljmp
dec
and
ja
mov
shl
dec
fnstsw
add
int3
or
jno
xor
adc
hlt
rcr
push
repz
ror
add
xchg
ja
sub
push
lock
data16
repz
jmp
mov
jno
loopne
sbb
mov
cli
data16
jge
lret
lcall
dec
repz
jl
out
jmp
int
insl
icebp
sbb
jno
cli
stc
das
cld
dec
pop
jl
pop
mov
add
mov
dec
pop
test
sbb
sti
adc
xchg
outsb
imul
or
push
jle
je
js
cmpsl
loop
adc
inc
sbb
int3
inc
jmp
cmc
cltd
mov
mov
shll
xchg
cmpsb
adc
or
insw
dec
inc
mov
sub
fsubrl
cmp
xchg
lcall
or
pop
cmp
es
test
les
jge
adc
inc
and
rclb
daa
test
pop
or
bound
dec
pop
cmp
pop
aad
adc
into
fstpt
push
mov
mov
dec
lds
xchg
fucom
test
or
stos
mov
repnz
cmpsb
inc
bound
pop
lea
or
xchg
mov
inc
clc
pop
dec
loopne
cld
pop
lahf
fmull
mov
mov
jmp
pop
adc
add
sub
jl
push
clc
xlat
js
cmp
jnp
cmc
int3
push
add
add
rolb
cmc
scas
in
mov
xchg
loopne
hlt
imul
pop
inc
loop
out
or
out
adc
dec
cmpsl
xchg
jg
mov
or
jne
stos
mov
test
dec
pop
ret
fwait
insb
mov
cwtl
adc
push
std
fimuls
fnstcw
sub
mov
int
adc
cmp
xchg
jnp
pop
mov
jmp
jbe
xchg
shld
fs
pop
inc
bound
pop
std
stos
and
inc
pop
divl
gs
loopne
pop
dec
sbb
fstp
gs
adc
and
push
mov
hlt
fdivl
std
data16
adc
push
lret
xchg
mov
jae
popa
ret
in
mov
sub
adc
and
int3
shr
adc
mov
jle
xor
xor
in
xchg
jl
pxor
mov
dec
lods
xlat
pop
pop
adc
test
sub
cli
push
shr
lea
scas
jl
ja
or
ljmp
dec
or
adc
xchg
cwtl
imul
mov
cld
ror
int3
dec
sbb
in
cmp
push
arpl
rolb
mov
jl
dec
fwait
and
shl
sti
dec
push
pop
push
mov
jns
mov
scas
or
fs
mov
lds
lretw
and
xor
int
jmp
les
inc
sub
es
imul
cmp
xchg
add
fsubrs
cltd
jmp
add
fwait
hlt
cmc
mov
in
dec
jmp
push
and
sbb
push
mov
or
mov
ret
loope
jl
jmp
lea
cwtl
test
out
lahf
pop
inc
and
aam
bound
lret
adc
enter
mov
mov
stc
cmp
bnd
jecxz
outsl
mov
rolb
stc
test
add
mov
call
and
fcoms
adcl
mov
daa
out
stos
jge
inc
stos
xchg
ljmp
adc
or
inc
movsb
push
dec
arpl
or
inc
cmp
std
insl
sub
sub
push
xor
sub
in
cli
push
jbe
sbb
cmc
xchg
enter
jnp
fstpl
pop
out
push
xor
imul
lcall
adc
xchg
or
int
inc
hlt
sub
adc
shr
xlat
cmp
in
push
cwtl
inc
loopne
arpl
in
mov
das
push
jmp
fstl
and
push
push
jge
scas
es
stos
or
mov
les
and
clc
arpl
sub
scas
inc
aaa
loope
cmpsb
mov
test
jae
lods
xor
hlt
sahf
fstp
fnstcw
adc
push
add
loop
daa
push
sar
sbb
mov
dec
or
out
xchg
loop
add
xor
bound
mov
data16
pop
jae
int3
mov
shlb
testb
adc
dec
add
into
xchg
jno
sbb
insb
nop
adc
pushl
mov
shrb
mov
popf
icebp
out
adc
add
mov
mov
mov
sbb
xchg
test
in
or
mov
in
adc
das
mov
sbb
std
xchg
out
ljmp
outsl
or
call
sbb
fsubl
pushf
jge
push
fistpll
mov
hlt
test
cli
add
cmp
jnp
ffree
inc
rcll
add
in
mov
testb
xchg
leave
mov
dec
sub
jae
dec
arpl
or
jl
in
sarl
push
adc
repz
es
test
xchg
add
popf
lods
lcall
pop
push
aam
mov
pop
mov
inc
inc
mov
jns
std
call
loopne
jmp
ret
pop
fsubl
cmc
dec
outsb
xchg
push
loop
ljmp
out
xchg
xor
int3
dec
lcall
cld
mov
xchg
pop
sti
lcall
es
sarl
mov
mov
andb
iret
xor
xor
push
out
aad
in
xchg
cmp
in
mov
push
insb
ret
inc
cmpsl
and
lcall
stos
mov
or
mov
push
push
add
icebp
idivl
loopne
sbb
popf
dec
mov
in
mov
and
data16
pop
into
or
gs
fdivr
andb
hlt
pop
clc
push
je
xchg
outsb
imul
lcall
ret
leave
jp
in
mov
jmp
jns
or
sub
rcr
aas
dec
std
pop
test
mov
push
xchg
add
fisttpl
andb
push
xchg
scas
xorb
fcmovne
mov
sub
lret
dec
jge
hlt
call
sbb
xor
xor
ljmp
jne
jge
sub
cwtl
push
out
and
mov
dec
pop
pop
jne
inc
xchg
call
push
fcmove
push
sarl
fs
stos
and
outsl
jp
dec
jle
xchg
iret
jge
imul
or
gs
testb
pop
pop
outsl
sbb
jg
xor
mov
push
cwtl
enter
pinsrw
xchg
scas
aaa
or
aas
sbb
and
loope
sbb
iret
int3
pop
outsb
nopl
pusha
fsubrp
sbb
hlt
invd
mov
out
push
push
push
push
xchg
sbb
sbb
test
mov
loope
fwait
mov
out
add
jo
adc
mov
jl
leave
addr16
inc
mov
adc
int
lds
sahf
xor
adcl
insl
pop
mov
out
mov
popa
mov
push
inc
sbb
enter
pop
lahf
cmp
push
mov
adc
inc
fwait
ss
push
mulb
cltd
cmp
xchg
gs
xchg
inc
xlat
movsl
js
scas
pop
push
xchg
mov
mov
idivl
sub
cmpb
aaa
push
icebp
jmp
xchg
in
lret
xor
cmp
hlt
nop
mov
popf
js
inc
sub
mov
ret
imul
and
jle
sub
pushf
dec
int
scas
and
bound
test
rcrl
in
mov
push
mul
std
rolb
mov
arpl
mov
jo
std
aad
jmp
pushf
inc
clc
mov
xorl
fnstcw
mov
fsubp
push
ja
xchg
mov
sbb
sbb
mov
dec
mov
test
stos
fmull
ret
int3
mov
cmp
cmp
push
jb
out
test
icebp
clc
lods
into
ret
mov
push
icebp
out
jg
call
sahf
aas
mov
pop
sti
and
jl
pop
test
lods
andl
xlat
fs
pop
lds
out
xlat
and
jo
andb
jns
sub
notb
testl
pop
pushf
sub
cwtl
arpl
dec
jae
adc
rol
push
xchg
dec
popa
xchg
pop
clc
cmp
fcmovnu
push
or
pop
les
std
add
sub
cltd
sahf
cmpl
sahf
stos
rorl
ljmp
dec
jl
jecxz
adc
lret
cmp
fdivs
mov
aas
push
stos
clc
or
leave
sti
dec
add
andb
inc
pop
out
in
dec
adc
addr16
cmp
mov
add
into
sub
scas
inc
adc
pusha
mov
push
push
inc
sbb
inc
pushf
subl
testb
ss
jp
je
mov
jns
push
xchg
jns
imul
jne
mov
add
sbb
mov
add
dec
mov
pop
mov
test
gs
int
cld
je
sbb
or
das
or
frstor
push
dec
adc
xchg
gs
das
int3
jo
fisubrl
loope
cld
out
aaa
stos
xor
inc
dec
pusha
int3
sub
mov
aam
or
mov
xchg
push
aaa
sarl
aas
push
rcrl
jle
mov
jmp
icebp
call
push
scas
andl
bound
rolb
add
inc
mov
test
and
jne
cmp
lret
xor
and
xchg
jno
pop
pushf
dec
insl
add
out
insb
test
ja
imul
insb
lret
int
add
xor
es
cmpsb
lea
mov
cli
cmp
loopne
movsb
jl
lret
scas
xchg
pop
and
mov
push
insl
dec
je
fbstp
inc
xchg
adc
push
pop
jne
cmp
sbb
cltd
cmp
loopne
test
jbe
aas
jmp
ja
in
inc
cmpsb
out
inc
rolb
jge
rcr
popa
ja
enter
cmpsb
sub
or
mov
lret
outsl
push
xchg
jmp
imul
scas
cmp
jae
add
sub
inc
sbb
pop
dec
add
out
sbbb
mov
push
outsl
add
ficoml
xor
sti
fnsave
xchg
add
push
or
sbb
lret
dec
jb,pt
sub
in
push
inc
jo
xchg
jecxz
jne
adc
lahf
and
out
push
mov
push
sti
das
lods
sub
sub
adc
lahf
cltd
out
inc
inc
mov
mov
mov
jne
add
repz
inc
int3
movsl
mov
jae
shl
addr16
int
aad
push
xor
xor
js
inc
sub
stos
lahf
bnd
scas
insb
in
fmull
dec
xchg
daa
cmp
xchg
pop
sbb
sub
xor
icebp
sub
push
in
dec
adc
adc
scas
scas
jecxz
inc
roll
cld
fstpl
pop
mov
add
stos
jle
jecxz
dec
mov
mov
filds
nop
xchg
outsb
sub
dec
push
fcoms
shrl
sub
pusha
pop
add
xchg
push
loope
iret
outsl
push
sub
xchg
fcomi
rcrl
fldcw
icebp
pop
inc
shlb
ds
mov
lret
adc
fldt
cmc
ljmp
aad
cmc
testb
bound
fcomip
ss
jo
jg
movb
mov
in
loop
mov
jecxz
mov
stc
mov
xchg
xchg
add
loopne
fisubrl
jmp
imul
add
out
xor
pusha
cli
rcrb
sbb
ja
inc
daa
std
push
loop
into
jnp
fstps
sahf
cli
dec
xchg
dec
xor
mov
cmpsb
jbe
fs
xchg
lock
push
cmpsl
in
loopne
or
nop
pop
out
bound
jmp
shrb
dec
fcomi
clc
out
or
mov
xlat
stc
or
cmp
sub
push
and
push
leave
jno
push
test
repz
inc
jl
mov
out
jecxz
mov
cli
xchg
loope
or
mov
push
or
movsl
xchg
inc
push
sub
and
pop
sbb
xchg
or
and
push
cmp
cmpsb
addr16
sub
fists
addr16
adc
in
cli
mov
clc
or
icebp
rorb
sarb
jecxz
mov
dec
cmp
std
hlt
sub
cwtl
ss
inc
mov
mov
incb
sbb
shlb
pop
dec
or
mov
jp
xor
mov
imul
jno
inc
push
push
add
push
xor
inc
inc
xchg
ficoml
in
ljmp
or
adc
test
cmp
adc
push
cmp
in
add
cmc
sub
ret
mov
nop
xchg
ljmp
xchg
inc
sbb
pop
sbb
mov
call
cmp
sbbl
pop
jns
adc
ret
mov
push
test
pop
add
repz
pop
fstps
mov
xchg
dec
jb
lods
xchg
or
das
imul
int3
aaa
mov
jl
clc
xor
loopne
stos
cmp
imul
xchg
fdiv
cmp
loopne
sbb
aaa
fsubr
cmp
imul
in
sub
arpl
push
cmpsl
push
or
repz
dec
sub
arpl
imul
or
jmp
call
pop
push
bound
jg
in
jns
xchg
int3
ret
cmpsl
rcr
cmpsl
cmc
mov
std
scas
xchg
mov
movsb
jae
fxsave
idivb
aad
fmull
mov
in
jmp
filds
xor
adc
add
mov
cltd
xchg
ljmp
rol
inc
xor
pop
cmpsb
faddl
out
shll
or
or
repnz
nop
pop
lods
inc
sbb
xchg
nop
in
mov
sbb
push
mov
andl
or
cmp
shll
in
add
inc
mov
add
jae
mov
in
or
fs
cmpsl
sub
xor
in
cmp
rcrl
loop
cmp
mov
dec
and
movsb
in
sub
cmp
xor
enter
jno
outsl
call
inc
into
test
leave
fwait
cmp
jbe
dec
mov
mov
and
pop
mov
mov
cmp
sbb
repz
test
repnz
jle
xchg
test
aad
loopne
and
out
loop
dec
les
das
lods
fsubl
repz
fcoml
mov
adc
rcr
mov
rcrb
aad
test
andl
cmp
or
std
stos
dec
push
movsb
hlt
dec
xchg
pop
pop
sub
push
rdpkru
dec
aaa
test
ret
sbb
nop
add
cmc
dec
fwait
cmp
repnz
fldt
adc
cs
das
test
mov
test
push
outsl
push
inc
push
ja
imul
inc
lahf
fldenv
sbb
mov
mov
inc
notl
jmp
xchg
outsb
adc
ret
loope
dec
sbb
lods
push
lret
lds
xchg
pop
add
imul
jge
xchg
in
push
lret
mov
xchg
das
loopne
jecxz
cmp
loope
inc
cltd
scas
mov
enter
lock
lret
or
scas
xchg
cltd
jo
jl
aad
mov
mov
sub
pop
insl
lret
add
in
test
pop
push
imul
mov
adc
mov
inc
roll
xchg
mov
data16
mov
gs
mov
pusha
push
test
ret
mov
mov
jne
es
test
das
mov
in
call
sbb
mov
mov
push
test
mov
xchg
shll
and
fs
inc
mov
mov
or
call
cli
jnp
or
neg
cld
mov
push
cmp
jmp
insb
lcall
or
out
scas
adc
pop
sub
imul
test
add
push
icebp
fldl
negl
add
sub
scas
mov
inc
inc
mov
lret
jge
mov
and
in
leave
xor
cmpsb
jnp
gs
pusha
in
mov
jl
dec
ret
std
xor
test
jmp
test
in
push
imul
xor
lret
xchg
mov
bound
stc
jbe
enter
cmpsb
pop
not
leave
inc
lods
xor
add
lods
inc
test
ds
insl
nop
in
mov
ss
dec
fisubrs
mov
sbb
push
add
dec
dec
pop
cs
lods
mov
in
sahf
jg
fwait
and
pop
mov
sub
jno
fdivr
xor
incl
sbb
leave
aas
xchg
jl
movsl
and
sbb
fldl
cld
jbe
xchg
mov
out
fs
or
inc
adc
xchg
sub
xchg
fidivrl
ret
in
hlt
roll
je
and
andb
outsl
movsl
mov
imul
push
mov
lret
mov
pop
stc
jp
cld
xchg
mov
and
cmc
lcall
sub
ret
mov
mov
ljmp
addl
xchg
pop
mov
xor
push
iret
dec
lock
sbb
dec
pop
mov
or
pop
push
stos
cmp
xor
push
mov
scas
push
mov
lods
nop
xchg
mov
push
ret
xor
nop
xor
push
fucomip
and
lret
negl
sbb
movl
mov
adc
data16
jp
lea
push
inc
pop
insb
mov
jl
xor
cwtl
cwtl
addr16
mov
rorb
mov
cmpsl
cmp
cmpsb
bound
js
dec
je
xor
gs
mov
jg
push
or
mov
fst
xchg
jo
out
out
xor
adc
dec
imul
ja
mov
dec
es
ret
pop
push
stos
inc
cs
stos
and
aas
inc
dec
ret
mov
shrl
sub
inc
lods
fcomip
leave
cmp
pop
sbb
adc
ljmp
pop
cs
dec
call
sarl
or
and
jno
jge
popf
or
mov
inc
sbb
fwait
subb
inc
mov
das
loope
cmp
pop
dec
inc
inc
push
test
push
inc
pop
js
mov
mov
pop
nop
inc
mov
ret
mov
cmc
inc
repnz
test
xchg
enter
andl
in
jo
xchg
into
lods
cmpsb
das
and
imul
out
adc
cli
or
dec
leave
inc
mov
pop
xor
inc
xor
imul
incl
movsb
pop
sub
adc
sarb
xor
je
push
pop
push
repz
sbb
lret
xor
lahf
mov
int3
fmuls
fwait
sbb
fs
inc
lods
out
sarb
mov
iret
fmulp
arpl
fs
jnp
sti
dec
xor
push
sub
imul
cmp
shlb
pop
xchg
int
fs
sbb
outsl
jp
ljmp
add
xchg
lret
fwait
popf
insl
fwait
adc
jmp
pop
jge
or
jecxz
fists
adc
pop
imul
imul
iret
sbb
mov
repz
mov
testl
xor
outsl
or
dec
inc
call
jbe
movsb
out
push
push
inc
add
pop
push
xchg
xlat
sub
sbb
sub
jo
pop
adc
or
adc
test
fmull
push
adc
outsb
fcmovnbe
aad
jb
sarb
dec
push
mov
bound
cli
mov
mov
jb
push
stc
push
adc
push
sti
xchg
jl
sbb
mov
lcall
ret
sub
push
fwait
inc
lret
xchg
adc
sub
imul
add
rorl
xlat
inc
int
cmpl
adc
mov
movsb
fcompl
dec
jmp
shlb
adc
nop
fdivr
gs
rcrb
xchg
fstpt
push
jl
stos
cwtl
push
cmp
sarl
dec
push
aas
leave
lea
adc
cs
push
xchg
faddp
adc
sub
inc
sub
lods
mov
in
mov
int3
ret
mov
insl
xor
jl
mov
in
pop
jg
add
mov
cmp
or
or
mov
cmpsb
mov
inc
lahf
pop
loope
and
imul
and
cmp
nop
gs
xchg
inc
xchg
jb
in
xchg
stos
mov
stos
push
cmp
int
inc
add
pusha
pop
test
fsts
sbb
imul
js
mov
push
loopne
cmpb
por
je
lahf
push
call
mov
js
pushf
icebp
in
xchg
jmp
cmp
push
cs
popf
push
addl
cs
push
cmpsb
lret
in
pop
jae
xchg
mov
adc
mov
insb
in
jmp
jmp
frstor
fiadds
push
and
mov
jle
shl
mov
add
mov
dec
or
mov
mov
lods
add
or
adc
popl
sbb
jp
xchg
mov
mul
add
and
fs
pop
cmp
xor
or
cltd
mov
fnsave
pop
pusha
add
pop
sbb
push
cmp
mov
pop
adc
cli
out
dec
decl
andps
notb
dec
xchg
sahf
xor
push
pop
pushf
and
in
leave
sbb
pop
adc
pop
and
daa
test
ljmp
and
mov
push
xor
xor
scas
xor
or
arpl
out
out
add
jg
iret
xchg
scas
cld
sbb
or
dec
jecxz
sub
mov
test
aad
leave
dec
and
mov
ja
push
mov
xor
adc
jl
jle
cli
pop
lea
ja
mov
xchg
dec
cmp
xchg
inc
lea
jl,pt
movhps
mov
dec
arpl
imul
sbbb
inc
mov
and
in
cmp
subb
addr16
ds
cmp
sahf
cltd
cmp
out
xor
xchg
packssdw
fstpt
je
push
hlt
lods
cmp
es
pop
rcll
repnz
loop
insb
addr16
clc
or
imul
mov
out
leave
inc
insb
cvtpi2ps
dec
subl
pop
jno
jp
xchg
cmp
icebp
mov
adc
pop
mov
test
js
sub
jno
push
mov
jle
sarl
