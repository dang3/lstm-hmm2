sbb
add
mov
xchg
mov
scas
call
xchg
xchg
and
test
or
js
xor
out
neg
adc
js
ror
dec
cmp
out
int3
add
fdivrl
and
lea
push
inc
mov
outsl
xor
popf
lcall
cmp
lds
add
aaa
mov
jne
in
jge
and
out
jle
inc
test
inc
bnd
jge
cmp
sbb
lret
lret
or
test
dec
gs
cmc
or
fistps
sarl
adc
cmp
xor
push
cmp
jbe
jl
adcb
stos
out
std
popf
lea
lds
or
arpl
inc
or
pushf
sub
add
arpl
fiaddl
mov
mov
mov
mov
jne
push
testb
xor
pop
cmpsb
cmc
add
cltd
or
adc
pop
lret
push
popf
jno
sub
xchg
fwait
push
pop
movsb
and
sbbl
jge
push
push
loope
ja
leave
andb
mov
jnp
jnp
jmp
sub
sbb
mov
fiaddl
pop
mov
das
xchg
pop
jo
inc
mov
shl
inc
jb
ret
mov
xchg
dec
mull
mov
mov
xchg
stos
lock
sti
jo
dec
leave
iret
sarb
mov
dec
pop
dec
cwtl
pop
je
mov
jb
xlat
mov
xor
cmp
mov
ret
adc
test
or
push
or
rorl
pusha
lods
pop
xor
push
mov
push
pop
mov
ja
lods
test
or
rclb
adc
inc
jae
xor
jb
jne
sti
out
in
mov
mov
ret
dec
repnz
sbb
adc
pusha
push
dec
sub
adc
hlt
sub
push
sti
rolb
inc
in
sbb
sub
enter
fildll
popf
outsb
dec
jo
icebp
adc
or
inc
sbb
xor
pop
jg
aad
dec
mov
cwtl
mov
mov
stc
jge
push
adc
outsb
lds
int
inc
xor
enter
and
mov
imul
inc
mov
andb
xor
loope
dec
pop
sub
sahf
or
adc
cmp
jge
data16
xor
sbb
aam
cli
jae
xchg
insl
cmp
out
and
inc
and
pop
jns
or
sahf
sbb
hlt
dec
sbb
inc
inc
mov
ret
mov
sbb
push
je
fs
xlat
jnp
fidivrs
in
push
inc
xchg
cmp
jmp
pop
nop
insb
add
dec
in
fsubrs
mov
xchg
adc
icebp
lds
cmpl
shrl
imul
out
push
roll
inc
rorb
xchg
sub
xchg
sbbl
sub
test
push
lock
adc
leave
lahf
test
and
inc
add
add
push
add
sbb
fadd
int3
inc
mov
jne
push
in
fs
sub
xchg
jae
mov
aaa
push
cmpsb
jg
leave
mov
mov
mov
mov
fyl2xp1
pop
test
and
rcl
das
ljmp
idivb
movb
push
fistpl
push
xchg
mov
cmp
mov
aam
insl
mov
jbe
or
pop
jnp
cmpb
add
sbb
mov
int3
mov
xchg
mov
test
jnp
aaa
push
mov
and
stc
xor
dec
push
inc
mov
clc
add
aam
clc
arpl
mov
sbb
aas
lret
and
imul
imul
dec
push
dec
mov
and
out
into
into
ja
adc
es
imul
fwait
and
aas
mov
imul
cmc
xchg
sbb
mov
ss
sbb
push
cwtl
fsts
jnp
test
loope
scas
mov
inc
adc
jp
es
pop
movsb
dec
xrelease
pop
add
xchg
out
mov
inc
mov
sbb
ret
or
imul
or
cmc
addl
arpl
lea
das
dec
xchg
xor
push
jp
adc
je
cli
iret
inc
push
cli
cmpb
push
cmpb
cmp
sub
mov
or
adc
dec
pop
testl
inc
pop
xlat
or
js
in
iret
je
stc
call
mov
lahf
jns
insl
iret
mov
aam
repz
data16
sub
push
cwtl
cmp
out
add
or
rorb
aaa
ret
push
insb
push
jge
loopne
mov
cltd
icebp
jl
pop
repnz
imul
lea
leave
mov
dec
mov
cltd
push
mov
pop
pop
ds
inc
aas
and
inc
pop
sbb
jmp
into
out
mov
mov
pop
add
movsb
int
lahf
mov
lret
jmp
mov
sarl
aad
imul
jae
mov
push
xor
ja
in
stos
inc
xchg
xchg
sbb
mov
or
jns
jbe
pop
mov
cmc
xchg
sub
xor
sbb
mov
and
mov
mov
arpl
addl
sub
addr16
xchg
inc
inc
push
mov
push
sbb
out
push
xor
lcall
and
js
popa
or
mov
push
mov
inc
sub
frstor
es
call
inc
push
sbb
push
push
les
cmp
jne
cmp
add
jae
xor
cli
sub
neg
int
pop
dec
mov
jmp
jbe
mov
dec
cwtl
ret
sahf
sub
mov
pop
popa
std
aaa
xchg
nop
inc
test
push
punpcklwd
adc
pop
pop
sbb
cmp
sbb
inc
pop
hlt
pop
push
or
mov
sarb
mov
jmp
loope
call
xor
cli
jb
xor
sbb
sbbl
aam
or
xor
push
inc
iret
jne
mov
shlb
ret
xchg
adc
int3
xor
push
push
lcall
notl
mov
neg
sub
aad
test
mov
xor
xchg
jns
inc
cmpsb
inc
insb
dec
repz
mov
out
out
dec
cmp
ret
mov
add
sbb
cmpsl
ja
cs
cmp
or
mov
and
iret
dec
in
xchg
shl
sbb
jecxz
xor
jbe
adcl
jl
pop
lahf
repz
cmovb
push
scas
out
hlt
xchg
mov
lods
pushl
leave
fsqrt
or
xor
xor
mov
mov
enter
fmul
test
in
mov
cmp
mov
sub
push
add
shlb
sbb
push
out
outsl
cmp
lret
arpl
lock
push
in
enter
xchg
push
jmp
roll
out
sub
fdivl
sbb
cmp
dec
and
dec
call
jmp
pop
cwtl
push
dec
addl
sahf
dec
rorb
dec
mov
push
enter
cmpsl
shrb
out
lods
xchg
gs
mov
out
mov
stc
sbb
lods
rclb
mov
pop
mov
sarl
mov
repz
movsb
jl
jae
push
xchg
mov
stos
cmp
lods
sub
sbb
pop
repnz
sbb
ficomps
fnstsw
push
fdivs
mov
lahf
popa
add
dec
mov
adc
dec
adcb
aam
hlt
lds
hlt
pop
cwtl
mov
mov
jb
xorl
add
ret
fiaddl
rcll
push
imul
fidivl
fs
ret
xchg
out
pushf
sbb
lahf
and
sub
testb
pusha
xchg
inc
push
int3
movsl
pop
mov
push
repnz
ja
cli
jmp
mov
xor
ds
call
jo
shll
sbb
push
cli
jae
movsl
mov
lret
repnz
stc
shlb
or
repz
imul
fwait
ja
inc
cmpsl
insb
mov
jb
in
jns
fcompl
inc
insb
aam
daa
cmp
stos
mov
test
jle
mul
push
inc
inc
jmp
imull
cwtl
jb
cmpsb
lods
mov
adcl
aam
das
insl
lock
add
sbb
dec
dec
icebp
jmp
data16
inc
loop
add
call
xor
push
push
adc
cltd
dec
dec
or
push
and
ds
jge
push
sbb
and
or
rolb
inc
adc
mov
sahf
lods
andl
js
sbb
into
loope
inc
stos
fcomi
inc
cmpsl
adc
jo
jne
sub
cmpb
std
or
out
mov
dec
jno
adc
xor
cs
in
fsubl
es
clc
xchg
mov
mov
lret
pop
cs
jmp
push
mov
lds
inc
mov
lock
mov
insl
xchg
pop
stos
xchg
jbe
dec
pusha
test
jb
cld
repz
pop
insb
sbb
push
pop
out
insl
pop
mov
mov
inc
push
mov
mov
mov
insl
inc
je
mov
sti
rolb
sbb
imull
jge
adc
jb
les
rolb
int3
sub
inc
cmp
adc
jecxz
sqrtps
push
das
cwtl
mov
and
adc
mov
fcmovnu
adc
stos
mov
sub
sbb
fwait
xor
or
loopne
or
ret
xorl
jb
and
mov
push
mov
jl
outsl
push
repnz
fwait
sbb
cli
lret
loop
cwtl
hlt
stos
shrl
into
nop
in
push
mov
pop
pop
mov
jp
inc
in
pushl
xor
and
and
jmp
cmp
push
popa
ret
dec
fnstenv
shl
or
inc
loopne
or
xchg
dec
xor
and
inc
push
movsl
pop
cmp
repz
mov
and
or
pop
lea
pop
lahf
pop
iret
shrb
cwtl
aaa
inc
mov
gs
test
or
push
std
ret
out
in
mov
xchg
jl
das
lcall
adc
push
insb
lret
sub
xchg
inc
cmpsb
lcall
out
push
sbb
xor
xchg
and
jmp
inc
add
or
mov
sbb
jbe
push
add
movsl
ret
lods
rorl
cmp
and
adc
xchg
xchg
push
jl
sbb
subb
jb
jmp
leave
ror
inc
cltd
mov
pop
sarb
inc
cmp
rcll
cmp
das
cmpsb
xor
aaa
adc
jb
and
mov
popf
fsubrl
adc
repz
lret
push
rcrb
int3
pop
sbb
das
dec
movsl
enter
jae
cmp
add
xor
fwait
jge
lock
clc
cmp
sar
shlb
add
mov
test
ret
sub
orl
cld
xor
adc
dec
pop
lods
into
test
xchg
jo
mov
jge,pt
xchg
in
flds
mov
jg
test
bound
imul
loope
fs
cmp
add
cmp
push
pop
imul
push
xchg
stc
and
js
hlt
orl
cwtl
jmp
movsb
es
cwtl
jnp
and
dec
imul
mov
push
cmp
push
sub
stc
ret
ret
push
iret
jmp
jae
jne
fnsave
push
adc
xchg
inc
loope
xor
or
out
push
call
jp
fs
inc
hlt
adc
cmp
subl
loope
filds
dec
data16
mov
cmpsb
xorb
mov
jmp
sbb
and
cld
jg
clc
jmp
les
dec
dec
hlt
and
mov
out
gs
mov
stc
mov
decl
sbb
push
add
xor
push
mov
push
js
out
popf
cmp
mov
and
loop
shll
and
scas
cmpsb
cmp
daa
mov
sbb
mov
sub
or
jns
cmp
out
or
pop
adc
call
in
shlb
inc
mov
sbb
jae
pusha
imul
sbb
pusha
sar
jg
pop
pusha
sbb
xor
loop
jbe
and
call
test
gs
push
pop
dec
std
std
cmp
rcrl
jb
out
xlat
fs
cmc
pop
jbe
cmp
push
sti
jnp
aad
jp
lods
mov
jns
inc
pop
or
icebp
dec
mov
sti
adc
nop
leave
test
addr16
pop
mov
pop
cvttps2pi
cmp
push
xor
push
test
inc
push
mov
mov
int
ret
mov
lret
push
pop
jecxz
mov
cwtl
popa
jnp
mov
jmp
out
adc
iret
sub
pop
rclb
mov
adc
leave
loope
xchg
mov
cmc
movsb
jmp
lock
xor
test
mov
in
xor
insl
or
and
std
imul
sbb
lret
jb
aas
sub
mov
sub
in
mov
test
xchg
in
lahf
mov
xlat
lock
sarb
in
mov
sub
xchg
lds
push
fcmove
test
icebp
cmpsb
aam
dec
push
imul
fimuls
insl
jmp
sbb
dec
and
mov
hlt
sbbb
pop
sub
xchg
lcall
jne
and
inc
mov
ds
lahf
push
iret
adc
fsubl
jl
jno
ret
ljmp
mov
inc
pop
jle
lea
xlat
xchg
sbb
icebp
out
loop
sahf
cmp
lret
rorl
in
lret
and
push
je
lcall
add
jbe
xor
sbb
pop
icebp
adc
jnp
stos
fldt
subl
ljmp
sbb
mov
sbb
mov
jp
and
cld
nop
into
lcall
paddsb
ret
add
mov
insb
inc
inc
inc
jnp
dec
andl
or
pop
inc
fs
xor
inc
adc
ja
fwait
push
mov
lret
in
sub
gs
ret
pop
dec
and
idivb
fcoms
mov
adc
jbe
repnz
dec
ljmp
mov
test
lds
movsl
leave
dec
int
int3
jb
xor
test
and
pop
cmp
je
add
sbb
sbb
pop
sbbl
pop
jle
inc
cmp
int
in
jne
test
pop
push
sahf
repnz
or
pop
xchg
xor
add
aam
pusha
pop
cmp
iret
jae
mov
scas
push
insb
pop
sbb
sbb
and
popf
inc
loop
push
ljmp
orb
add
popaw
enter
xchg
pop
xchg
pushf
or
add
and
adc
imul
leave
ret
mov
xchg
out
pop
sub
fadds
fimull
int
inc
cmp
push
aaa
sbb
cltd
sbb
or
jns
xchg
addr16
cmp
jae
jo
rclb
cmc
fsubl
adc
int
or
mov
or
mov
in
jl
pop
imul
cmp
sbb
mov
das
insb
shll
xor
das
hlt
lods
xchg
jecxz
ja
xor
sub
or
jle
add
repz
cmpsb
sbb
bnd
sub
mov
into
dec
cmp
mov
sti
cmp
out
inc
jae
sbb
cmp
std
adc
and
cwtl
notb
or
fstpt
gs
mov
pop
cmp
nop
dec
ja
and
mov
and
int3
add
inc
lret
add
mov
and
je
xlat
stc
jae
dec
rcr
sub
mov
std
push
mov
adc
hlt
or
mov
in
mov
inc
lods
sub
mov
jns
sbb
popa
or
jle
clc
sbb
ret
sbb
cmp
pop
mov
dec
mov
fwait
in
dec
mov
mov
inc
stc
movntq
int3
mov
movsl
sbb
cmc
loope
jno
lea
sbb
imul
sti
cs
mov
shrl
dec
or
inc
lahf
movsl
cld
test
sub
bound
lcall
mov
and
lods
xor
adcl
aam
xlat
sbb
call
test
adc
int3
adc
and
ret
jg
xor
xchg
sub
xchg
or
jp
mov
jb
jl
jle
out
cmc
aas
mov
xchg
mov
add
add
jg
lret
fbld
adc
cmovl
ds
cmp
repz
jl
add
fldl
mov
push
sti
rorb
push
test
arpl
push
and
adc
mov
dec
add
outsb
sub
xchg
jge
loope
cmp
pop
push
mov
xchg
adc
jp
mov
and
sbb
sahf
lods
in
pop
adc
jb
pop
mov
enter
pop
mov
sub
add
popa
dec
outsl
jnp
push
push
push
jg
test
pop
push
pop
shlb
movsl
test
mov
in
xchg
rcrb
xchg
cmpsb
jmp
lret
call
adc
inc
xor
xchg
and
jbe
in
xchg
mov
cmp
rol
mov
int
sbb
jg
xchg
xchg
and
pop
add
jmp
stos
xchg
cmp
mov
mov
rcrb
daa
mov
pop
jecxz
aad
pop
les
into
inc
pop
in
sub
cmpb
cmp
leave
sub
fwait
mov
jno
jl
push
lock
rorl
xchg
imul
add
jbe
outsl
mov
scas
mov
loope
sarl
fimuls
mov
mov
add
ljmp
and
rol
push
mov
sbb
fmuls
jb
mov
into
pop
jns
stos
mov
in
lds
pop
rcr
jge
pop
add
repz
int
adc
xchg
mov
mov
sbb
iret
call
outsl
xor
ja
fnsave
inc
xchg
xlat
and
outsb
es
out
pushf
cmp
dec
je
test
dec
and
mov
or
fildll
aam
jp
xchg
es
sbb
xchg
call
jbe
adc
test
mov
dec
subl
es
inc
in
mov
sbb
in
sarb
and
push
sub
mov
or
popa
mov
push
cmpsl
mov
stos
jnp
mov
push
pop
lods
jp
adc
pop
mov
push
cs
push
scas
mov
cmp
sbb
dec
bts
sarb
jb
xchg
rolb
stos
xor
cmp
dec
sar
in
fst
inc
stc
dec
lock
fcompl
sbb
fnsave
scas
jae
lods
sbbb
das
mov
dec
in
fisubs
mov
xchg
repnz
mov
sarb
adc
mov
lret
mov
shll
and
orl
xchg
mov
mov
nop
enter
xchg
mov
mov
iret
mov
ror
xor
jl
xchg
into
sbb
aaa
movsb
bound
pop
cmp
xchg
aad
mov
cmp
inc
mov
sbb
jne
inc
sbb
enter
daa
sbbl
adc
in
xchg
cmp
add
mov
jmp
xchg
outsl
fstps
ljmp
push
popf
outsb
add
cmpsb
popl
mov
pop
ret
mov
loopne
das
ja
inc
pop
push
mov
inc
cmp
or
push
jne
xor
fldcw
adc
jl
mov
jle
xor
push
fildl
lcall
pop
pop
pusha
daa
xor
or
in
push
notl
hlt
add
shll
xchg
bound
inc
test
lods
mov
push
in
imul
adc
mov
aam
inc
add
fcoms
cmpsb
xchg
and
ds
scas
movsb
int3
hlt
ja
in
jge
scas
in
or
or
and
sub
pop
inc
add
mov
and
out
mov
pop
lret
int
repnz
fsubl
cmp
mov
movsl
test
jge
cvtdq2ps
lcall
pop
xchg
jp
in
mov
or
shlb
es
lea
std
xor
sbb
fwait
popf
test
test
add
sub
push
sbb
notl
adc
cli
je
cltd
inc
dec
dec
pop
and
rolb
push
sub
pop
cmc
jmp
ja
cmp
insb
fs
rcrl
test
out
adc
add
std
xchg
mov
push
enter
les
mov
cmp
add
and
mov
leave
mov
out
mov
jbe
movaps
lock
inc
pop
mov
stc
or
scas
in
jecxz
rclb
push
and
pop
jnp
pushf
cmp
imul
jp
sub
pop
mov
jno
jmp
inc
lahf
mov
movsb
or
or
adc
outsb
aam
pushf
add
pop
leave
xor
lahf
movsl
adc
insl
mov
mov
fmull
inc
in
cltd
xorl
sub
leave
lret
imul
add
push
testl
insb
jns
push
sub
or
or
out
mov
and
lock
mov
jnp
rol
pop
leave
push
loop
add
mov
jb
xchg
ds
fiaddl
mov
cmp
cmp
push
sub
cwtl
mov
jle
adc
cmp
xchg
and
jns
add
movsl
test
cmp
inc
sbb
test
xor
mov
adc
pop
icebp
mov
push
fbstp
sbb
xlat
data16
pop
push
cmp
mov
mov
jl
pop
in
inc
xor
in
popa
stos
xchg
js
add
mov
cli
sub
enter
mov
mov
popa
mov
xchg
loope
fs
add
jae
push
adcl
push
adcb
sahf
ret
jle
cmp
mov
dec
imulb
fisubrs
jl
mov
lret
mov
mov
aas
nop
xor
ret
and
lea
push
mov
mov
flds
std
mov
std
cmpsb
pop
out
cmpl
mov
lock
pop
add
fistps
xor
mov
pop
fildl
dec
mov
mov
rorb
insl
dec
mov
leave
idiv
mov
and
push
into
addb
stc
xchg
or
cmpsl
sbb
sahf
push
push
inc
sbb
enter
cmp
jae
data16
sahf
push
dec
xchg
je
jno
lcall
and
ja
push
mov
fstps
loope
jae
jecxz
ret
in
mov
cmp
test
call
es
pop
pop
adc
xor
lock
ljmp
sbb
sub
push
push
data16
sbb
adc
popa
xor
divl
and
and
enter
pop
push
jae
fs
lcall
sbb
push
sbb
imul
or
outsl
and
sbb
pop
in
adc
pop
rorb
push
negb
outsl
fsubs
ret
or
rcr
sahf
push
rcll
ds
xchg
je
add
inc
jo
jns
or
sbb
stc
dec
mov
adc
pop
mov
popa
jg
mov
orb
or
push
inc
and
pop
lea
inc
cs
out
adc
cmp
mov
xchg
rcll
ret
cltd
les
repnz
push
addb
cmpsb
inc
xchg
rcr
les
jg
mov
add
mov
clc
sub
jb
imul
xchg
mov
dec
stc
insl
pop
loope
xlat
cmpsb
ret
jo
sbbb
cmp
xchg
xchg
jmp
xor
dec
jp
or
sahf
cmpsl
data16
push
cmc
or
cmp
pop
pushf
and
push
pop
cltd
dec
cmp
or
mov
out
fimull
sahf
stos
and
cwtl
dec
pop
mov
nop
testl
dec
movsl
imul
mov
test
sahf
mov
movsb
cld
subl
xchg
sub
jne
cmc
xor
test
mov
imul
rorl
push
cmpl
stc
inc
mov
or
jb
xchg
shlb
mov
fisttps
fildl
push
mov
push
lret
mov
mov
sub
nop
sub
call
mov
cmp
jb
add
mov
xlat
in
lods
mov
dec
in
sti
out
xor
cmpsb
subl
mov
in
fs
hlt
fs
jmp
and
pop
out
mov
xor
dec
push
cmp
arpl
xchg
fdivl
pop
mov
call
int3
adc
mov
sub
pop
pop
scas
inc
add
mov
adc
or
loopne
pop
enter
scas
and
mov
repnz
pop
rol
iret
pop
out
fstpl
push
and
adc
mov
jne
and
clc
or
inc
cmp
scas
testb
jmp
and
in
fisubrl
mov
aam
xor
jbe
mov
popf
sbb
xor
rcl
inc
iret
dec
adc
mov
gs
inc
ffreep
dec
lods
sti
pop
adc
push
mov
cld
imul
push
lock
andl
fucomp
inc
ljmp
add
sbb
add
push
lret
test
in
arpl
inc
xchg
movsl
out
mov
push
add
sub
ret
dec
in
jb
sub
ret
or
xorl
movsb
cli
jmp
arpl
test
enter
mov
out
sub
cmpsb
enter
sbb
stos
clc
pop
fdiv
mov
movaps
xor
add
mov
or
mov
addr16
insl
popa
rorb
sarl
inc
enter
lahf
dec
inc
movb
out
js
je
add
test
lds
in
sbb
clc
or
xor
cmpsb
and
sti
aam
outsb
lret
out
and
mov
jle
rcr
push
dec
add
out
xor
add
dec
jno
rcll
fcoms
aam
inc
mov
aad
lea
scas
cld
or
pop
pusha
xchg
pusha
rorl
or
xchg
lds
es
sarb
push
stos
cli
sub
adc
and
or
dec
scas
lods
jo
pop
lock
jg
loopne
add
mov
jge
subb
inc
dec
xlat
dec
sbb
retw
and
lea
push
jp
subl
add
xor
cmpsb
test
into
addb
inc
jmp
ret
das
mov
sub
mov
push
icebp
adc
ret
cmpl
sbb
das
insl
mov
push
xchg
mov
jns
add
out
push
int3
cmp
imul
js
ljmp
popa
mov
mov
std
xchg
jbe
rcrl
jecxz
lds
sub
xor
push
adc
add
add
lods
inc
pop
mov
mov
das
cwtl
ja
push
cli
rcr
out
popf
xchg
xor
into
and
loope
lea
inc
fwait
dec
cmp
cmp
lea
xchg
or
add
push
push
ds
stos
outsb
adc
cmpsl
mov
lea
mov
fnstenv
rcrl
dec
pop
jbe
sbbb
sub
adc
ret
ljmp
mov
adc
shlb
loopne
cli
sub
mov
adc
lods
ja
mov
fiaddl
push
ret
nop
punpcklwd
pop
mov
imull
mov
or
stos
jae
pop
pusha
xor
sbb
jns
ja
push
dec
or
jle
jl
shlb
mov
popa
test
test
mov
in
xchg
xchg
sbb
xchg
sbb
cmc
out
xlat
aaa
shlb
jmp
mov
dec
jle
and
and
fs
add
jl
add
ret
xor
add
in
sahf
jnp
das
and
or
mov
lods
or
and
mov
imulb
inc
push
sbb
sahf
xchg
mov
lock
fs
pop
mov
xchg
and
scas
mov
xchg
dec
inc
xor
ficoml
pop
xor
scas
negl
jb
jnp
cmpsl
inc
dec
js
add
lahf
xor
fisttpl
ja
insb
add
mov
mov
mov
inc
mov
mov
icebp
push
call
outsb
and
inc
ss
push
sbb
pop
test
cwtl
pop
dec
fxam
movsl
mov
cmp
loopne
aas
jae
in
je
into
add
andb
sub
push
sub
mov
xchg
out
cld
movsl
lcall
push
sbb
adc
push
sub
xor
pushf
mov
add
aam
mov
lret
mov
shll
jmp
cs
cmp
sti
mov
insb
popa
dec
inc
and
jne
rorb
jbe
adc
sbb
pop
sub
mov
lcall
rcl
test
and
mulb
test
and
dec
or
pop
js
call
scas
lret
sbb
jb
jno
cli
fwait
pusha
jnp
push
fidivrs
inc
insl
leave
int3
cltd
add
bound
push
mov
ficoms
test
jl
pushf
push
into
enter
add
mov
out
aaa
pop
cmp
mov
xor
and
es
sbb
jbe
dec
cwtl
aam
sbb
xor
or
mov
test
mov
or
test
jmp
scas
fnstenv
test
test
sbb
pusha
add
cmpsl
xor
lahf
jbe
mov
or
sub
fldenv
ret
jno
xchg
mul
stos
lahf
movsl
xchg
jmp
xchg
clc
repz
ret
mov
pop
xchg
jns
mov
xchg
inc
jp
jl
movsb
movsl
aaa
cmp
out
inc
shlb
pop
aaa
sbb
jg
mov
out
andb
push
mov
dec
lret
js
fsubs
dec
pop
xlat
or
test
sbb
stos
pop
xor
xchg
mov
dec
repz
dec
pop
jg
dec
mov
ss
inc
pop
mov
out
inc
mov
fstl
call
daa
mov
in
xchg
lock
test
push
frstor
push
and
mov
add
mov
and
and
bswap
xchg
arpl
int
xor
adc
mov
and
xor
dec
in
mov
mov
rolb
push
jbe
fwait
gs
test
repnz
jmp
jmp
xor
mov
pop
outsl
out
cmp
or
test
mov
pushf
cmp
test
addr16
jnp
movsb
and
xorl
in
mov
push
ret
dec
xor
mov
js
aad
sub
or
jp
pop
mov
in
add
test
xchg
sbb
shll
jne
jae
mov
sbb
adc
int
repnz
repnz
mov
push
jp
inc
insb
es
inc
fmulp
pop
dec
xor
and
pop
popf
jmp
test
or
ss
loopne
or
cmpb
mov
lea
mov
adc
dec
pop
mov
push
gs
xor
test
test
fisubrl
pop
adc
fimull
ljmp
pop
mov
sbb
rcr
pop
mov
xor
gs
mov
add
std
sbb
inc
mov
xor
fists
mov
pop
jbe
cmpb
outsl
loop
mov
stos
cmp
jae
fisttpl
stos
jmp
and
bound
loope
mov
loop
xlat
rorl
jmp
mov
out
pop
repnz
adc
repz
ffreep
mov
push
mov
inc
pusha
jmp
call
mov
dec
jle
mov
adc
push
jmp
pop
jo
dec
mov
in
into
mov
push
cmp
sub
lock
jae
dec
std
push
fldl2t
or
xor
in
lods
sub
xchg
mov
das
mov
sbb
xchg
dec
mov
inc
or
dec
flds
mov
and
clc
hlt
and
push
lret
movl
ficomps
das
jns
cmp
cld
mov
inc
and
pop
push
sub
scas
inc
push
shl
daa
pop
frstor
inc
push
in
cld
pextrw
xor
mov
mov
fisttpl
shl
leave
out
ficoml
lret
imul
lcall
mov
jne
or
fsubl
inc
sarl
inc
into
daa
and
push
loop
movsl
jb
sub
sbb
ja
test
mov
in
iret
stos
add
mov
inc
mov
inc
divl
lcall
cmp
mov
or
add
fs
je
push
movups
and
test
fnstsw
pop
fmulp
sbb
std
push
dec
cld
jbe
mov
nop
cli
mov
cmp
xchg
or
out
and
mov
int3
fcompl
pop
jle
add
imul
push
cmpsl
jecxz
lahf
dec
int3
push
shl
hlt
fadds
cmpsl
sbb
mov
pop
xor
push
or
into
mov
js
adcb
pop
mov
mov
pop
push
sti
iret
mov
cli
push
sub
test
leave
inc
scas
jl
repz
inc
mov
in
push
outsb
jno
xchg
or
or
sbb
test
out
push
mov
enter
and
xorl
insb
mov
mov
fwait
dec
pop
pop
mov
inc
sbb
repz
mov
insb
or
jo
pop
stos
outsb
idivb
iret
and
cmp
adc
js
inc
int3
or
out
outsl
jecxz
mov
xchg
loopne
mov
mov
pop
push
roll
jle
xchg
push
jne
cmc
fsubp
xchg
pop
sti
adc
lret
xchg
in
mov
js
sbb
lea
pusha
inc
mov
cmpl
or
test
negl
inc
xor
pop
rol
add
dec
popa
test
push
sub
aaa
xor
cmpsb
rorl
setns
lods
pop
js
repnz
scas
hlt
gs
or
ret
mov
daa
enter
pop
add
mov
push
and
test
ljmp
popf
das
xchg
popf
mov
in
push
test
cmp
mov
fiadds
jnp
cltd
cmpsb
dec
hlt
mov
addb
mov
popf
push
jecxz
int
mov
insl
push
imul
das
push
out
add
insl
pushf
jge
cld
sub
int3
sti
add
lretw
nop
sbb
sub
call
inc
push
mov
xchg
dec
and
mov
cltd
adc
clc
je
xchg
mov
and
pusha
mov
cmp
ljmp
jbe
jnp
xor
pop
xor
in
clc
nop
sub
push
ss
out
inc
push
mov
enter
mov
cmp
or
pop
or
stos
insl
sbb
cwtl
push
dec
xchg
and
sbb
inc
rclb
inc
jae
aad
int3
sub
lock
mov
or
push
push
mov
imul
out
dec
mov
in
sub
jns
sbb
or
adc
mov
ret
jg
aam
inc
sbb
in
movl
push
lret
clc
stc
jnp
mov
outsl
jne
daa
jmp
push
bsr
xchg
xchg
fcomps
int3
push
shlb
sub
adc
lret
sbb
pop
mov
je
or
xor
int
push
mov
jne
pop
inc
je
jae
mov
xor
aas
xchg
jle
mov
fs
add
lods
or
testb
call
push
test
or
cmp
mov
adc
nop
lahf
sub
inc
outsb
daa
divb
repz
xor
loopne
adc
popa
push
std
mov
loop
lret
repnz
inc
cmpsb
push
loop
xor
sbb
in
or
jb
lock
out
fidivl
imul
jae
in
shlb
dec
push
pop
out
dec
lret
xchg
dec
xchg
es
add
shrb
mov
adc
pop
dec
stc
cmp
mov
mov
mov
stos
jl
pusha
leave
add
in
cld
and
xchg
mov
out
dec
aad
cli
push
push
xor
xchg
push
xchg
lods
hlt
push
inc
sub
and
jne
mov
jno
jne
cwtl
test
roll
jge
mov
cs
faddp
sbb
sub
das
movsb
cmp
mov
xchg
fidivs
sub
das
pushf
xor
iret
and
out
add
sub
adc
jle
int
int
push
loopne
ret
nop
add
test
mov
jo
in
mov
sbb
ljmp
icebp
pop
xlat
inc
push
mov
mov
sub
sub
imull
push
inc
and
sub
xchg
mov
rorb
and
jne
inc
repnz
jl
ds
in
arpl
adc
fdivs
insb
mov
jle
fwait
xchg
inc
cltd
mov
mov
outsl
inc
insl
cmp
sub
add
test
inc
pop
jg
sbb
lds
add
sbb
ss
pop
dec
rol
scas
sub
aam
mov
out
int
in
adc
in
xchg
jge
add
and
pop
mov
sub
das
xor
inc
iret
xchg
je
jne
cld
and
mov
mov
stc
jo
stos
shll
and
mov
lock
add
fs
andb
divb
push
pop
xor
out
xchg
dec
dec
movsl
xorb
je
sbb
arpl
lods
pusha
mov
mov
in
inc
pop
xchg
mov
cmp
jp
cld
and
stos
push
sbb
mov
adc
in
imul
jge
data16
lcall
nop
mov
outsl
pop
lret
xchg
and
mov
insl
fsubrl
repz
sarl
inc
ds
sub
fldenv
inc
fwait
scas
nop
or
cmp
movsl
test
inc
shlb
mov
push
lret
mov
int
rorl
arpl
xchg
and
jle
mov
ret
jg
pop
push
jmp
pop
adc
mov
push
shrl
das
fidivrl
jg
ret
or
iret
popa
cmp
fldcw
cmp
inc
push
movsl
mov
andb
fsts
sbb
lret
or
lret
ljmp
sbb
in
and
iret
aad
mov
sbb
andb
pop
sub
mov
xor
push
test
jne
and
dec
jbe
aam
aad
dec
lods
and
adc
in
mov
xor
setl
inc
or
jno
stos
mov
in
mov
jge
sbb
cmp
shl
add
popf
push
shlb
mov
dec
pop
cli
leave
xor
or
sub
cmp
enter
mov
aad
inc
mov
movsb
xlat
test
push
fisttpl
iret
jecxz
cwtl
pusha
sbbl
int3
xchg
int
jno
dec
pop
mov
lahf
xor
ss
ret
inc
sub
mov
pop
cmp
xchg
test
mov
shlb
pop
mov
lock
cmp
pop
fistpl
mov
loop
rol
push
rcrb
xlat
adc
adc
add
enter
sub
xor
lods
repz
adcl
mov
inc
sub
push
lahf
push
into
sub
imul
test
push
mov
hlt
jnp
lret
push
outsl
adc
pop
sbb
jne
mov
popa
mov
xchg
jg
call
add
imul
hlt
repnz
pusha
push
fstpl
xchg
mov
ret
ret
fimull
cmc
lods
add
mov
stos
inc
jmp
sbb
cmc
cmc
cmpsl
jne
sbbl
push
sbb
imul
adc
cmp
sarb
fisttpll
sbb
add
cmp
imul
inc
push
addps
add
and
sub
cmp
mov
xchg
fdivs
imul
pcmpgtw
sbb
mov
int
and
sub
clc
cmpsl
out
lahf
pop
xchg
jge
cmp
mov
enter
faddp
insl
xchg
xchg
jg
inc
mov
popa
bound
mov
push
fidivl
jp
mov
cmpsl
data16
enter
loopne
pop
lea
and
xchg
mov
push
mov
mov
lret
lahf
mov
cmp
inc
push
or
add
cmpsl
cs
or
mov
and
inc
mov
call
sub
add
or
das
pop
add
mov
dec
xchg
push
icebp
or
fidivrs
push
fmuls
mov
and
pop
adc
pop
lret
sbb
addr16
xchg
outsb
iret
es
sub
xor
cmp
imull
sbb
push
call
mov
inc
xchg
repnz
dec
push
push
sbb
test
mov
sahf
pop
push
jo
xchg
rcrl
out
sbb
pop
scas
add
jle
stos
jg
shll
mov
push
fwait
xchg
mov
clc
iret
lret
dec
sub
jp
pop
xor
std
pop
ss
cltd
inc
test
adc
aas
push
inc
std
cmp
xor
push
out
inc
mov
sub
jecxz
mov
sbb
cmc
sahf
or
in
adc
ficompl
sbb
movb
push
into
loopne
in
sahf
mov
mov
lahf
ljmp
pop
jp
xchg
pop
and
push
pop
lea
insb
mov
xchg
inc
imul
aaa
cmpsl
fmuls
push
add
out
leave
lods
loop
jne
das
inc
cld
pop
movsb
mov
imul
adc
mov
fdiv
je
jle
repz
cmp
pop
out
mov
into
pop
movsl
adc
std
dec
xor
lahf
push
fcompl
xor
cmp
ja
xchg
xor
into
sahf
push
aad
das
sti
cmp
stos
popf
adc
cmp
inc
popa
retw
cmpsl
push
aam
or
push
xor
cmpsl
ret
push
shlb
jns
jge
scas
fistpl
or
fidivrl
into
iret
fldt
cmpsl
push
or
test
jp
add
push
dec
cmpsb
jno
stc
cli
dec
aad
data16
cmpb
push
push
pop
mov
into
rcrb
mov
test
pop
push
repz
sbb
inc
in
mov
in
sub
dec
cld
mov
orb
scas
shrl
dec
popa
pop
mov
cmp
les
fcmovbe
pop
and
cmp
mov
xchg
dec
xchg
mov
repz
aad
inc
les
lret
fdivrl
shrb
mov
test
rclb
lds
pop
push
cs
nop
dec
mov
dec
pop
dec
adc
jecxz
or
shlb
mov
sub
dec
pop
fwait
mov
lahf
fcompl
fucom
daa
in
mov
lcall
push
sti
iret
sub
jmp
mov
jp
stc
lahf
pop
push
stos
packuswb
adc
sbb
xor
fistl
test
int
sub
cltd
pop
imul
adc
and
ss
lahf
push
pop
xchg
cs
pop
add
imul
mov
repz
outsl
mov
pop
or
mov
lock
nop
js
jg
mov
mov
or
xchg
loop
mov
ret
cli
in
pop
test
adc
outsb
jl
iret
jecxz
xchg
push
mov
insb
pop
sub
in
sbb
pop
and
inc
outsl
fmul
aas
sbb
pop
fistps
loopne
dec
in
stos
sub
in
inc
out
sbb
pop
push
push
sbb
jmp
push
testl
mov
dec
loop
ss
push
cmp
mov
inc
cltd
leave
test
repz
xchg
mov
and
daa
fs
fs
pop
mov
add
cmpsb
sub
and
sbb
stos
insl
pop
pop
lea
sarl
cld
or
clc
xchg
stos
jp
push
sbbl
lods
aad
call
jne
in
push
nop
push
xor
cmp
test
in
rclb
jp
fdivl
add
mov
add
and
and
mov
cwtl
into
out
aad
mov
outsb
setnp
fwait
mov
push
and
xchg
dec
push
out
int3
sbb
aam
pop
jmp
aas
iret
ret
hlt
mov
xlat
ss
add
and
add
out
mov
daa
sbb
data16
mov
xor
xor
mov
fcomi
mov
test
js
pop
add
push
jecxz
push
xchg
rorl
into
push
pop
stc
fisttpl
pop
negl
movsl
xchg
cmc
out
dec
sub
mov
push
stc
std
imul
push
bound
sub
add
sbb
pusha
pop
mov
mov
pop
cwtl
and
mov
push
sub
fwait
lods
and
jp
outsb
popf
les
jae
push
in
lock
xor
add
mov
jb
loopne
inc
and
bound
sub
das
jp
loop
sti
fdivs
jmp
cwtl
dec
sbb
test
arpl
lods
pop
adc
cmpsl
lock
pop
gs
jle
jp
cltd
xchg
xor
shl
sub
outsb
scas
cmpb
add
leave
mov
mov
or
daa
adc
lahf
repz
lock
dec
ss
or
dec
test
loope
sbb
in
aas
ss
cmpsb
cltd
sbb
push
mov
aam
mov
movl
mov
and
push
push
lods
loop
pop
cld
scas
inc
sti
jbe
jo
or
cmp
mov
or
gs
xor
out
sub
jae
stc
xor
xchg
stos
cmc
out
loopne
sub
out
inc
je
xchg
ret
movsb
jbe
inc
js
pop
imul
fadds
adc
outsb
movsl
es
sub
stc
cwtl
mov
add
mov
imul
les
shrl
mov
inc
fs
in
out
jle
dec
ja
dec
push
js
gs
mov
inc
lods
pop
lret
out
adcb
pop
push
pop
mov
mov
arpl
pop
xor
ds
hlt
in
pop
push
dec
push
je
jo
rorl
xchg
push
repz
or
mov
cmc
jg
jmp
pop
jnp
sbb
mov
xlat
adc
popf
fcomi
xor
stos
lock
mov
filds
and
inc
jmp
lods
pop
cmp
out
jae
lods
ljmp
jb
dec
ficoml
jge
mov
mov
scas
dec
and
and
sub
addr16
lods
xor
inc
sub
and
mov
insb
shll
cltd
mov
cmpsl
add
inc
test
jne
out
popl
in
sub
js
dec
in
cwtl
inc
sub
pop
xor
xchg
clc
adc
mov
pop
add
or
loope
adc
dec
pop
sbbb
or
inc
sbb
lea
ljmp
stc
in
test
lock
jne
cs
jg
rorl
jecxz
xchg
and
inc
dec
aad
jo
stos
xor
loopne
js
mov
inc
adc
xacquire
loop
add
add
iret
mov
push
sub
ds
adc
mov
std
inc
or
and
clc
add
fildl
dec
stos
sbb
ret
hlt
or
pop
insb
add
ret
xor
xor
in
cmp
or
jne
cmc
jae
mov
gs
pop
adc
adc
adcl
and
shll
xor
shlb
dec
dec
sbb
push
or
ret
xlat
jle
lahf
xchg
lahf
addr16
int3
sti
sub
add
fdivs
push
jmp
movsl
imul
sbb
mov
xchg
adc
clc
lds
fidivs
in
out
mov
subb
inc
popa
rorl
dec
adc
fcoms
test
jns
insb
dec
xor
js
sti
adc
scas
stos
push
jp
test
push
das
push
cs
lret
cs
stos
push
rorl
out
push
test
loop
push
push
ljmp
in
inc
and
lds
cmc
ljmp
pusha
pop
mov
fists
loope
jno
insl
das
addl
mov
push
push
cmpsb
repnz
popa
cmpsb
cmp
cmp
mov
xor
add
mov
lcall
cmp
dec
jle
shlb
movsb
jnp
inc
ret
or
or
push
pop
push
adc
fldl
shll
jnp
fadd
data16
mov
fisubrl
adc
fisubs
jmp
mov
mov
xor
jl
fistpl
loop
jle
cwtl
stos
mov
sub
push
movsb
cmp
jmp
shlb
scas
cmp
js
mov
imul
out
cmp
pop
cmc
scas
in
xchg
fmull
mov
inc
add
fmul
lods
push
or
loop
addl
xor
mov
jnp
adc
roll
bound
test
jno
xchg
outsl
in
fildll
push
jae,pt
sub
dec
lods
add
addr16
lds
insl
add
scas
imul
dec
push
lahf
andl
addb
mov
push
dec
add
int
sarb
ljmp
jnp
stc
out
popf
jno
add
adc
loope
bnd
jns
shll
in
lods
push
outsl
pop
xchg
or
add
int
fisttpll
jg
out
sbbb
xchg
pop
rolb
je
aad
adc
cmpsl
fistps
sbb
fmull
mov
dec
lret
mov
or
mov
out
push
cmpsl
daa
mov
pop
pop
mov
and
icebp
cmpsb
fstps
jnp
pop
cmp
daa
sahf
adc
insb
mov
cmpsb
jg
jo
lods
loopne
nop
popf
subps
xor
jmp
mov
cmp
and
adc
ljmp
add
cmp
jl
xchg
jno
and
jle
lcall
push
cmp
mov
loop
cmp
jecxz
mov
mov
scas
movsb
mov
mov
ret
sbb
clc
push
add
fucom
lock
pop
push
adc
sbb
cmp
and
aam
fisubrl
cmp
sbb
shll
mov
sbb
stos
fadds
test
aad
test
mov
rol
gs
nop
test
fbstp
cli
xchg
in
sub
mov
rcll
sbb
mov
scas
cmp
insl
jmp
call
or
mov
test
iret
repnz
int
add
mov
hlt
mov
push
sti
pop
cmp
push
addb
ffree
dec
lahf
sbb
mov
sti
loop
into
push
frstor
add
cld
xchg
pop
mov
adc
push
add
and
add
test
mov
enter
ds
repz
sub
lret
je
xor
add
pop
andl
popf
xchg
inc
addr16
cmpb
sbb
sahf
aad
lcall
mov
divb
data16
xchg
and
mull
jbe
pop
mov
xchg
ljmp
jb
out
inc
rorb
std
pcmpgtw
icebp
add
push
ficoms
jno
in
ret
lea
xor
inc
xchg
push
gs
fimuls
push
aaa
aaa
sub
pop
rorl
or
sbb
cld
adc
loope
and
fwait
nop
mov
mov
xchg
sti
xchg
push
mov
stos
arpl
and
shrl
push
scas
fidivrl
imul
inc
xor
xchg
fs
rclb
stc
push
mov
inc
sub
popf
add
ret
mov
std
and
inc
insb
mov
xchg
adc
or
popf
jb
outsb
mov
jle
stos
xor
cmp
test
ficomps
or
insb
add
dec
in
fcoml
js
lcall
jae
mov
outsb
sbb
int
xor
mov
mull
jbe
push
test
ret
sbb
inc
cli
cltd
push
int
xor
push
iret
mov
push
insl
into
pop
imul
in
inc
sbb
mov
or
mov
insb
mov
xor
jb
adc
aad
fidivrl
lahf
pop
rcrb
mov
pop
jns
in
ret
add
popa
add
or
push
dec
pop
jne
mov
dec
test
inc
sti
push
jbe
fsubr
or
dec
ja
bound
xor
inc
cmp
xor
xor
add
movsl
mov
inc
out
fdivs
or
xlat
or
ret
out
sarb
pand
add
push
sbb
xor
lret
std
iret
shll
mov
mov
adc
inc
sub
into
rolb
xor
jno
insl
xchg
or
mov
mov
mov
and
pusha
xchg
push
in
fiaddl
mov
adc
mov
mov
inc
push
clc
loope
lcall
iret
inc
and
repz
xchg
popf
jmp
push
mov
mov
lods
fisttpl
xor
in
lcall
xchg
sub
dec
cmpsl
je
xchg
nop
xor
pop
adc
leave
test
fxch
xchg
cmp
dec
adc
clc
lahf
fstps
jecxz
fsubr
dec
xor
xor
fdivrs
jns
push
or
mov
js
out
enter
fdivp
notl
push
pop
andl
push
lea
shll
push
and
mov
xchg
movsl
push
cmpsl
dec
shr
dec
fsubrl
mov
cmpxchg
add
pop
arpl
dec
aam
ret
stc
inc
sbb
cmp
cs
dec
cmpsb
pop
xchg
test
in
add
call
add
mov
lock
push
push
cmpsl
das
in
xlat
push
add
adc
inc
jl
jae
stos
gs
adc
push
cmp
jle
movsl
xchg
test
test
sub
call
sub
test
mov
in
aam
fimuls
mov
outsl
or
lret
dec
xlat
call
jecxz
pop
test
or
lahf
ret
dec
or
int
bound
xchg
aad
cmp
cwtl
lcall
rol
out
sub
jne
aad
fistl
jmp
pop
xchg
jg
fsub
xchg
cwtl
pop
push
cmp
xor
add
lcall
sub
inc
addl
cwtl
xor
shll
rorl
lock
or
xchg
sti
xchg
movsb
in
fisttpl
ljmp
ss
or
loop
out
shrb
or
cltd
push
imul
push
cmp
sbb
pop
fldl
or
and
inc
dec
ljmp
iret
mov
pop
sbb
outsl
jg
loop
pop
xchg
or
out
sti
fsts
call
cmc
arpl
outsl
notb
lds
hlt
adc
cpuid
jl
in
and
sbb
arpl
fprem1
pop
lock
inc
inc
jmp
pop
push
pop
cmp
pop
pop
or
xchg
jg
adc
orl
nop
inc
lcall
decb
jo
pop
add
mov
lgs
adc
xchg
pop
dec
push
xor
jb
mov
lea
inc
sbb
cmp
imul
sbb
or
stos
fsubr
mov
xchg
insl
sub
adc
or
or
clc
mov
sub
and
in
inc
jecxz
push
ret
lea
add
push
add
lret
inc
movsl
or
inc
xchg
dec
imul
push
sahf
out
xchg
addr16
clc
lds
cmp
inc
dec
test
inc
xor
jae
in
jmp
jne
sub
jne
jns
xor
lahf
adcb
rorl
dec
xchg
pop
mov
enter
push
ja
or
mov
arpl
or
js
ficoml
adc
leave
aas
xor
js
sub
int3
add
rorl
inc
pop
movsb
dec
jo
adc
fcompl
test
cwtl
mov
sti
cwtl
adc
stos
bound
mov
jo
cmpsb
rcll
inc
hlt
loope
pushf
fisttpll
pusha
outsl
popf
ds
jge
les
jbe
add
bound
mov
adc
adc
jl
inc
cmpb
lret
rcl
leave
ja
out
mov
or
ret
arpl
xchg
jle
xchg
push
xor
sahf
dec
insb
adc
xor
mov
cmp
cmp
scas
jo
or
or
cmp
mov
jle
xchg
inc
hlt
pop
push
cmp
sbb
add
mov
fidivs
ds
sub
repz
push
dec
cli
inc
jg
scas
sti
stc
stc
and
sub
sub
mov
cmp
adcb
fs
push
push
ljmp
dec
stos
sbb
xchg
repz
imull
insb
testl
adcb
int
mov
sub
popf
sub
push
aad
inc
jp
popa
ja
fwait
sti
in
mul
mov
jno
ds
mov
movsb
mov
insb
lret
pop
imul
lret
cmp
push
sbb
mov
push
mov
inc
jecxz
arpl
xor
pop
inc
cltd
mov
pavgw
lcall
jno
pop
xchg
nop
ficompl
xchg
ja
int
pop
push
push
in
aas
orb
cmp
aad
ljmp
xchg
sbb
mov
imul
fcmovnbe
and
movsb
mov
sub
mov
je
mov
pop
mov
mov
inc
add
sahf
push
pop
enter
push
sbb
fs
sub
xor
stos
orl
out
mov
outsb
aam
push
call
mov
sbb
fimull
enter
dec
pop
and
inc
dec
aas
and
test
jo
xor
nop
lods
push
enter
popa
adc
push
mov
mov
mov
out
ds
test
out
pop
test
push
jae
inc
jno
rcrb
add
sbb
jecxz
pop
fcomip
inc
pop
pop
sbb
and
mov
xchg
mov
ret
enter
subl
mov
mov
push
scas
mov
adc
jbe
pop
jns
sbb
sarb
pop
mov
mov
mov
into
stos
cs
xchg
mov
pop
rol
mov
pushf
jecxz
adc
xchg
mov
jbe
das
or
sub
es
xchg
sti
xchg
cmc
pop
adc
fistps
in
in
sub
cmovbe
ljmp
sbb
mov
push
cmp
cld
dec
ljmp
or
rcll
ds
bound
adc
aaa
jecxz
es
push
cs
fbstp
out
pop
pop
loope
pushf
hlt
add
mov
gs
test
idivb
mov
jl
add
cwtl
cmp
inc
push
imul
subl
std
js
outsb
xchg
icebp
fists
imul
sbb
inc
into
idivb
inc
rolb
rol
in
pop
into
mov
cld
mov
lret
inc
or
into
es
loopne
adc
mov
mov
repnz
paddd
xchg
cmp
js
ret
dec
das
adc
stos
icebp
xchg
lock
adc
pop
cmp
or
ds
push
shlb
leave
js
add
stos
sub
mov
push
jl
cwtl
push
jne
nop
scas
fs
push
mov
pop
adc
in
mov
jle
push
dec
cmp
into
ss
mov
movl
out
mov
je
fmul
inc
out
mov
pop
adc
mov
inc
ss
cmp
add
aad
dec
iret
jb
xchg
rolb
rorl
mov
push
sbb
cmp
mov
sub
jmp
mov
jbe
cs
inc
xor
add
mov
jno
jmp
jnp
adc
mov
lcall
dec
mov
das
icebp
inc
cmpsb
scas
imul
push
sti
push
mov
inc
fwait
std
call
sti
je
int3
fcmovnu
test
movsb
ss
bound
ja
cmp
shll
aam
out
jae
arpl
xchg
mov
imul
in
cmc
sub
addr16
sub
xchg
loop
mov
inc
xchg
add
inc
lods
lret
push
sbb
mov
or
dec
sub
xchg
das
lea
dec
mov
mov
xor
jmp
mov
les
adc
xor
pop
inc
popa
enter
stos
push
ret
enter
out
in
aam
mov
push
insl
outsb
lock
pop
dec
in
jmp
call
lods
xor
sub
movsl
cltd
xor
inc
lods
mov
rcrb
push
mov
cmp
add
in
nop
rorl
push
sub
mov
sbb
inc
jg
cld
jp
push
sbb
mov
scas
add
mov
inc
mov
or
in
mov
lds
je
fisttpl
push
ja
or
int3
rcll
push
shlb
or
lretw
or
adc
xor
pop
outsl
adc
adc
jo
hlt
jmp
sbb
push
sarb
jl
push
mov
xchg
lock
repz
aaa
push
adc
pop
repz
sti
pop
repz
cli
inc
mov
jecxz
outsl
inc
adc
and
cs
bound
xchg
cmp
adc
pop
sarl
push
js
int3
sbb
mov
cwtl
lea
dec
xchg
out
and
inc
adc
xchg
pextrw
nop
mov
sub
mov
and
insb
jo
imul
fsubr
std
cmp
shll
jmp
jmp
mov
movsb
xchg
mov
adc
jnp
gs
negb
inc
and
cmp
stos
push
stos
mov
jbe
imul
pushf
push
push
ljmp
ret
rorb
push
cld
popa
mov
div
jbe
lcall
mov
fs
sar
movsl
shll
fistpl
aaa
outsb
mov
dec
cli
enter
sbbl
in
fstl
fldt
xor
adc
push
inc
cli
sti
mov
aaa
jl
pushf
xor
dec
push
lea
ss
push
push
jns
aad
jl
xor
sub
inc
repnz
pop
sbb
mov
mov
or
lahf
mov
adc
adc
fidivrl
scas
adc
scas
mov
cli
fdivs
inc
loopne
dec
insl
pop
aaa
add
out
orl
flds
out
adc
movsb
cmp
dec
mov
es
les
imulb
hlt
fs
in
stos
outsb
rol
xchg
imul
iret
movsb
mov
sub
add
andb
cmpb
pop
enter
xor
jo
jmp
in
or
mov
mov
xor
xchg
sub
xchg
loop
pop
mov
jl
add
jecxz
les
pop
ja
imul
adc
mov
jmp
inc
movsl
mov
data16
cld
or
aas
out
rcrb
loop
mov
nop
adc
lds
sbb
jbe
out
mov
mov
xchg
mov
pop
adc
icebp
xorl
ss
std
sbb
shr
lods
popa
xchg
push
je
fildll
arpl
mov
pop
sbb
ja
push
addr16
jo
mov
enter
inc
ret
sbb
es
adc
gs
pop
loop
fdivrl
dec
sahf
jae
mull
mov
mov
sub
sbb
ret
aaa
xchg
sti
mov
sub
inc
pop
rorb
rorl
and
loop
mov
adc
scas
inc
xchg
mov
rolb
pop
adc
cmp
hlt
pop
sbb
or
dec
aas
shll
pop
test
sti
imul
jo
out
shrb
dec
icebp
xchg
xchg
hlt
lods
sub
fstpl
pop
idivb
mov
out
arpl
repnz
pop
xlat
rol
sbb
xor
outsb
mov
popf
lret
pop
ret
dec
xchg
scas
hlt
dec
inc
cmp
cmpsl
xor
adc
add
js
fmuls
xorl
lret
cld
les
fcmovnbe
fdivrs
lret
xchg
mov
adc
sbb
fistpll
push
pusha
add
call
and
lea
inc
xchg
scas
cmp
fadds
fistl
add
add
and
jno
or
repz
imul
inc
push
jl
mov
insb
rorl
lret
outsl
inc
jb
push
xchg
and
sub
stos
mov
dec
cld
cmp
push
jp
fs
add
js
jno
rol
cli
movsb
push
je
pop
lret
fildl
mov
ds
lahf
mov
ljmp
xchg
scas
orl
jge
scas
inc
loopne
je
andb
mov
in
lret
mov
cmp
fdivrs
xor
shll
mov
ja
sbb
loope
mov
test
and
cmp
pop
mov
or
in
xor
imul
pop
push
mov
bound
fwait
inc
and
inc
jle
lea
mov
jns
out
inc
ret
cmpsl
xchg
push
dec
mov
xchg
lock
jg
clc
push
dec
test
pop
push
or
inc
and
pop
pop
adc
enter
lods
cmpsl
add
mov
hlt
out
lret
leave
xor
test
mov
mov
std
adc
adc
dec
outsl
mov
jle
sub
mov
push
loopne
sub
push
sub
stos
lret
aas
into
je
inc
mov
pop
sahf
inc
out
data16
xchg
adc
cmp
and
std
xchg
sbb
jmp
pop
cltd
loope
lods
mov
test
out
cmp
push
repnz
jg
addr16
cmp
scas
rcl
arpl
push
pushf
ds
shr
xchg
sbb
loope
xchg
push
mov
shl
pop
out
or
jl
or
ds
mov
leave
test
cmp
jp
ljmp
jmp
adc
add
sub
idivb
dec
fistl
dec
lret
aaa
xor
insb
enter
out
test
lret
xorb
and
stos
aaa
jmp
pop
ds
test
jmp
movsl
push
dec
arpl
adc
cmpsl
fidivrl
sahf
sub
adc
fildll
icebp
mov
add
adc
std
out
cmp
jns
shl
xlat
je
dec
std
in
dec
jns
jle
pushf
mov
xchg
ljmp
movsl
fdivr
sub
inc
xchg
mov
stos
xor
xor
push
shll
pop
sub
push
mov
dec
or
push
mov
dec
divb
rol
out
jg
repz
test
push
jecxz
cld
pop
jno
fldenv
jno
sarl
jecxz
add
and
pop
outsb
cmpl
sub
or
lret
insl
sub
inc
or
leave
in
mov
lods
inc
mov
cli
in
mov
imul
push
push
stc
cmp
inc
cli
sbb
cmp
lret
inc
push
sbb
movb
inc
ret
popf
push
pop
xchg
call
or
ljmp
fs
jmp
jae
outsl
scas
shrb
shl
adc
popa
ja,pt
ss
push
jmp
xorb
aas
mov
loopne
jecxz
repz
jge
enter
inc
sub
and
aas
adc
cmp
stos
fnstenv
and
jle
popf
shlb
aaa
jne
cld
ja
shl
aas
pushf
adc
mov
mov
shlb
std
jp
addb
push
sar
xor
les
cmp
ljmp
std
cwtl
scas
cmp
nop
or
je
push
iret
push
rorb
mov
or
out
jge
adc
dec
loope
pushf
shrl
orb
mov
cltd
and
insb
and
sbb
adc
lea
imul
lret
add
and
sub
dec
jo
and
lret
daa
cmp
lcall
imul
out
hlt
mov
movsb
and
push
jmp
lods
rorl
std
icebp
fldl
add
jno,pn
nop
sub
jno
lods
mov
add
cmp
fcomps
stc
sbb
jnp
xor
out
movsl
mov
lahf
add
mulb
xor
dec
xorb
data16
cli
aas
ss
filds
je
sarb
push
mov
push
xchg
popl
cmp
xor
idiv
sahf
notl
adc
imul
push
popf
adc
and
push
out
scas
or
jae
roll
scas
popf
bound
xor
lahf
xorb
xchg
sub
push
jge
adc
jns
fmul
xor
stos
sub
ds
xchg
xchg
mov
mov
lret
pushf
and
out
test
cmp
mov
add
adc
xchg
adc
cmp
aas
repnz
cmp
stc
addl
xor
movups
sub
cli
inc
jl
jns
and
mull
inc
inc
sti
xchg
imul
in
cmc
in
daa
addr16
jnp
lods
mov
stos
cli
xor
push
mov
or
push
sub
mov
push
inc
ss
hlt
mov
jns
outsl
movsl
sti
pop
push
pop
adc
movsb
es
lock
xor
in
xor
aas
add
sub
xor
sbb
addb
popa
stos
cmp
pop
adc
out
adc
bnd
or
xor
push
xchg
mov
and
sub
dec
addr16
test
mov
cmpsl
push
and
repnz
pop
out
pop
dec
rorl
cmpsl
out
iret
and
inc
ljmp
imul
adc
jmp
mull
lea
or
mov
enter
add
jg
stos
fwait
pushf
jp
popa
mov
enter
test
mov
push
popf
iret
inc
fmull
jp
repnz
clc
mov
movsl
ret
inc
ja
cmp
push
loop
and
shrb
mov
arpl
adc
insl
adc
scas
mov
shll
push
test
enter
testb
out
pop
rorl
jge
inc
dec
sub
jecxz
jno
fsub
push
pop
sti
cmp
dec
bound
mov
popf
loopne
pop
shll
and
xchg
pusha
out
dec
filds
cmp
push
jne
call
imul
xchg
ja
test
sub
testl
pop
adcb
sub
addr16
push
mov
loopne
addl
addr16
mov
dec
inc
nop
jmp
or
js
cmpsb
stos
imul
push
incl
cmc
mov
enter
outsb
cli
mov
push
mov
pusha
les
in
pop
test
mov
xor
cmpsl
call
inc
xchg
xchg
mov
sub
aad
in
mov
test
das
gs
lret
test
pushf
mov
popf
and
mov
pop
pop
sub
and
push
xor
cmp
jae
int3
iret
jno
jnp
addr16
jge
hlt
dec
cmpsl
arpl
cmpsl
or
into
insl
dec
and
mov
jmp
jne
and
pop
stc
lock
mov
shrb
rorb
aad
mov
out
popf
insb
ds
jne
xor
sub
test
cmp
cmpsb
jg
jp
add
sbb
or
cmpsl
inc
pop
out
scas
std
dec
das
movsb
aad
mov
filds
js
xchg
movsl
inc
inc
push
cs
push
packsswb
cmp
push
pushf
popf
sbb
popa
xor
jmp
sub
xchg
jl
std
mov
int
fisttps
lret
mov
cmp
aam
add
mov
mov
pop
addr16
push
data16
sbb
test
dec
lock
inc
lods
sub
sub
jo
sar
mov
stc
mov
mov
inc
jmp
jge
mov
js
and
addl
sbb
outsl
mov
xor
hlt
and
and
lret
mov
jecxz
sbb
movb
imul
loopne
and
imul
jl
jmp
mov
pop
sub
xchg
scas
stc
dec
popa
jmp
mov
sbbl
js
push
outsb
sti
inc
push
rolb
add
mov
adc
inc
inc
mov
bound
sub
sbb
mov
bound
jl
sub
loopne
mov
sub
rcrb
orb
scas
xchg
hlt
les
fstl
sub
aas
vmwrite
test
cld
or
pop
ret
frstor
scas
out
mov
xchg
push
out
mulb
testl
cmp
sbb
dec
cmpsb
shlb
popf
mov
jnp
xor
insb
xchg
ds
insb
cmp
lcall
mov
scas
scas
mov
push
nop
lds
lahf
aaa
dec
pop
sub
movsb
test
aad
dec
or
xchg
inc
xchg
and
and
push
or
mov
mov
mov
imul
and
pop
outsl
mov
scas
test
les
adc
imul
sub
sub
pop
mov
ficompl
mov
mov
inc
xchg
mov
sahf
sub
pop
xchg
int3
rol
inc
inc
out
ja
inc
jno
pop
lds
sub
out
clc
icebp
sar
lahf
lcall
lds
jg
sub
loop
movsl
shlb
sarb
adc
fidivs
jp
mov
in
rolb
adc
lock
fdivrl
jmp
mov
imul
sbb
std
insl
xlat
mov
mov
rclb
cwtl
push
sti
sti
jecxz
xor
int3
xor
sub
xor
test
add
xor
mov
scas
lods
xchg
in
cld
into
sahf
sub
mov
or
lock
xchg
xchg
div
data16
loope
repnz
jecxz
push
mov
pushf
inc
loop
outsl
stos
rolb
jle
mov
mov
mov
sbb
jo
dec
insb
andl
lcall
xchg
popf
movsb
pusha
outsl
xchg
inc
aad
leave
pop
in
popf
divl
test
scas
andb
mov
push
jl
movsb
outsb
inc
adc
lcall
mov
hlt
cld
pop
clc
cmpsl
loopne
push
pusha
inc
shrl
push
call
lock
mov
lret
or
push
mov
mov
xchg
stc
push
push
xchg
and
push
cmp
add
jmp
sbb
push
xor
cli
dec
test
mov
sbb
xorl
test
adc
movsb
pop
sahf
scas
mov
fdivrl
mov
add
inc
xor
pop
imul
imulb
jae
pop
nop
inc
sbb
cmp
xchg
mov
outsb
cld
pop
pminub
insb
add
cmp
push
mov
xor
xlat
sub
sbb
xor
xor
inc
jmp
fisubl
jg
std
sub
xchg
iret
pop
leave
xlat
fnstcw
pop
daa
jecxz
in
mov
mov
push
mov
add
xchg
dec
int3
mov
repnz
mov
aaa
lods
xchg
cmc
dec
cli
pop
mov
mov
fucomi
mov
in
jg
lods
int3
sub
stos
sub
xor
sub
sbb
stos
or
push
das
cmpsb
inc
fdivr
add
pushf
scas
mov
loopne
inc
jnp
nop
adc
cmc
bound
mov
sar
add
sbb
dec
shrl
les
out
mov
icebp
pop
mov
dec
lret
out
jl
dec
cmp
aad
das
sbbb
stos
lret
dec
sub
test
pop
adc
in
bound
out
jmp
mov
push
sti
xlat
je
fcomps
xor
dec
xor
ja
pop
sbb
mov
push
push
pop
and
les
dec
dec
in
mov
sbb
xchg
cld
mov
cmp
pop
xchg
or
sbb
fs
pop
dec
outsb
xchg
xchg
xchg
out
or
jno,pt
mov
lret
lret
and
loopne
mov
pop
lock
add
icebp
push
push
loop
cwtl
int3
mov
xchg
push
sub
lcall
loopne
imul
aad
adc
cld
mov
outsl
aas
out
test
test
or
or
push
and
or
xor
jno
jg
add
mov
and
adc
add
sub
mov
packuswb
inc
scas
cmp
add
mov
sbb
lds
push
lcall
scas
xor
adc
dec
cmp
adc
lret
mov
xor
xchg
das
fs
test
scas
pop
clc
mov
cmp
popl
push
push
mov
in
cmp
mov
fwait
mov
je
stos
xor
aas
xchg
cmp
add
add
icebp
pushl
rorb
or
push
sub
ret
add
stos
and
mov
pop
dec
lods
jne
nop
sahf
dec
pop
call
sbb
sub
int
xor
and
mov
out
ficoml
jbe
ret
js
push
lea
insl
test
mov
loopne
insl
jo
sub
and
mov
dec
cmp
xchg
data16
imul
and
cmp
das
inc
inc
and
mov
pop
mov
mov
mov
pop
add
or
popa
adc
arpl
cmp
rcll
cmp
pop
jmp
jnp
mov
ss
or
nop
inc
outsb
loope
xor
lahf
lock
or
sub
adc
mov
in
mov
cmc
push
lods
cltd
and
pop
aas
add
add
mov
bound
sub
lcall
pop
lods
jae
idivb
pop
out
mov
and
iret
mov
shll
pop
ds
daa
xchg
jle
cli
imul
mov
fmulp
repz
ds
ds
xchg
ja
xchg
scas
jmp
addl
add
dec
mov
insl
sub
aam
or
inc
xor
sub
repnz
jne
lods
dec
sbb
push
pop
pop
cmpsl
mov
mov
sbb
xor
or
dec
add
aad
das
add
or
clc
mov
sub
int
negl
sub
out
xchg
mov
mov
lahf
adc
adc
inc
out
mov
pop
xor
sarb
imul
xchg
insl
pop
cmpb
sbbl
and
dec
xchg
add
pusha
add
cmp
xchg
pop
mov
jo
outsb
mov
stos
std
lret
outsb
sbb
lcall
or
imull
scas
inc
adc
lahf
sub
out
mov
movsl
fbld
fwait
scas
outsb
xor
aas
mov
jecxz
mov
mov
gs
adcb
jge
sbb
push
pop
dec
imul
ret
cwtl
inc
or
jne
sbb
mov
adc
int3
dec
sub
cli
out
mov
cmp
mov
cwtl
xchg
fwait
cmp
test
mov
adcl
lret
xchg
xchg
xor
cmpsl
int3
imul
pop
sub
sub
dec
or
cwtl
mov
stos
mov
or
rcrb
push
aaa
lods
sti
int
inc
addr16
jo
int
pop
call
scas
mov
lcall
push
ret
xor
xor
pop
loope
aaa
xor
mov
test
sub
jnp
jl
mov
sbb
lds
mov
ror
out
pop
push
mov
movsl
xor
jbe
xchg
push
popf
gs
fucom
ja
std
call
xchg
in
push
ljmp
lea
into
mov
lret
icebp
xor
mov
push
test
mov
or
fdivrp
scas
ja
mov
xor
mov
xchg
sub
dec
inc
fucom
cmpsb
jns
cwtl
xchg
mov
test
sub
orl
push
fdivl
outsl
push
cmp
rclb
cmpsb
mov
sbbl
fwait
and
les
pop
inc
bound
mov
pop
imul
test
inc
in
jne
ficoms
fildl
rclb
mov
jnp
arpl
lods
les
adc
sub
rorl
mov
mov
loope
add
push
jne
sahf
add
push
divb
lret
out
and
and
xor
test
out
imul
adc
push
push
out
and
and
hlt
push
cwtl
pop
add
xchg
pop
add
fstpl
pop
es
sbb
jne
les
xor
lods
mov
rorl
dec
cltd
jl
hlt
filds
pop
ret
mov
outsb
adc
push
fmul
xor
xor
popf
cli
add
in
cmp
testb
addr16
enter
into
mov
fbld
aam
adc
mov
out
ljmp
or
jae
add
cli
imul
mov
cld
jnp
or
or
out
push
mov
movsb
mov
pop
fsubrl
sub
fistl
das
sub
jp
fstps
nop
lret
adc
push
pop
pop
lret
movsl
ja
ficoml
icebp
cs
mov
loope
or
sbbl
fcomps
xchg
push
cmc
cmpb
stc
repnz
jnp
cld
outsb
popf
pop
les
adc
jecxz
es
cmp
insb
or
sbb
cmp
stos
cmpsl
inc
stc
mov
push
aam
gs
inc
popa
and
and
hlt
mov
jae
or
push
test
scas
int
dec
mov
ja
dec
insb
and
sarl
in
jge
adc
mov
int
ror
icebp
pcmpgtd
adc
sarl
mov
pop
and
sbb
out
es
lea
jae
add
cmpsl
jmp
aas
ds
add
or
cld
add
add
push
outsb
pop
sbb
jns
lcall
dec
movsb
inc
pop
test
push
mov
push
push
xor
icebp
jbe
cmpsl
mov
jo
cld
arpl
sub
outsl
jno
sbb
xor
mov
cmp
pop
sbb
xchg
gs
in
gs
inc
push
movsl
sbb
add
mov
or
sub
adc
stos
ss
out
shl
pusha
jnp
leave
sbb
mov
rorl
cmp
inc
mov
xchg
sbb
mov
test
or
sub
movsl
inc
xor
ds
pop
jg
dec
clc
cmp
in
or
xlat
mov
fs
mov
and
cmp
popf
push
loope
jnp
pop
pop
or
push
push
aaa
fistl
jo
and
mov
notl
mov
out
fidivs
test
faddl
and
js
je
in
lds
xlat
and
clc
fwait
rorl
hlt
insb
lcall
enter
mov
in
inc
test
test
sub
and
mov
leave
sbb
pop
ja
xchg
xor
xchg
les
aaa
fucomi
imul
mov
iret
inc
cmp
sub
in
mov
in
and
pop
insb
xor
iret
xor
fs
xor
mov
push
bound
adc
lods
xor
mov
push
push
add
push
shrb
arpl
adc
dec
shll
and
xchg
nop
and
mov
mov
ss
mov
jle
pop
cmp
fwait
mov
cmpl
scas
sbb
sub
fldl
jl
mov
sbb
mov
cwtl
icebp
pop
in
adc
xchg
jne
ljmp
popa
mov
mov
inc
pop
adc
in
pop
sub
lret
xchg
jne
jmp
sub
imul
lods
cwtl
push
push
cmp
in
add
mov
sbb
fwait
lods
mov
test
insb
xor
icebp
jl
dec
adc
insl
mov
lds
out
xchg
dec
scas
sti
daa
sub
movsb
pop
add
pusha
cltd
test
clc
xchg
fs
popf
xor
dec
pop
pop
jg
les
add
clc
js
mov
pop
jmp
and
sbb
iret
sub
mov
dec
jb
scas
in
jmp
lahf
clc
rorb
hlt
xchg
out
cmp
test
stc
imul
std
je
mov
xchg
in
dec
sbb
lahf
dec
sub
and
pop
fimull
call
stc
push
lret
adc
mov
mov
in
jmp
mov
add
dec
stos
sbb
cwtl
sub
sbb
les
cmp
iret
and
mov
and
dec
xor
sbb
outsb
iret
adc
add
cmpl
popf
cmp
es
lods
lods
mov
pusha
adc
jne
loope
pop
pop
test
jne
sub
nop
test
inc
xor
mov
fldenv
in
int
out
pop
pop
icebp
out
push
jle
lock
cmpsl
sahf
in
nop
and
jg
jae
fnsave
ljmp
mov
dec
pop
push
jb
into
adc
cmp
xor
or
out
xor
mov
test
sub
push
pop
rclb
push
jae
lock
pusha
adc
fs
lods
add
int3
pop
sbb
add
sub
test
mov
outsb
or
movsb
shl
in
mov
sub
xchg
add
mov
pop
ds
push
jge
lret
mov
cmp
fst
sbb
inc
ds
push
mov
sbb
shr
fsub
aam
sub
sbb
lahf
leave
mov
sbb
pop
adc
and
repz
jl
cmp
leave
mov
out
or
or
sub
xor
xor
insb
test
or
push
lds
mov
xorl
testb
sub
enter
cmp
mov
dec
jns
mov
popa
xor
jb
push
test
out
out
cld
cmp
sbb
lods
out
jl
cld
lret
inc
mov
rclb
daa
gs
mov
adc
jns
adc
pop
test
or
lcall
stos
les
bswap
pop
stc
mov
lret
fldl
mov
testb
jb
fdivl
bound
mov
inc
ret
ror
push
cltd
dec
test
xor
ss
or
lret
stos
mov
out
sub
xor
cld
ljmp
outsl
in
and
inc
xor
dec
scas
sub
pop
ss
call
cmp
nop
cmp
inc
leave
mov
test
data16
mov
sbb
jl
arpl
pop
ret
icebp
jecxz
insb
test
addb
stos
push
cmp
fcomps
mov
lock
fcmove
jo
dec
mull
iret
aam
lods
icebp
jmp
fwait
stos
loopne
cltd
mov
and
clc
in
pop
mov
jmp
inc
cmp
fidivl
roll
sub
add
cmp
scas
test
sbb
xor
and
adc
mov
cmpsl
cmpsb
inc
adc
mov
jae
xor
stos
into
insl
adc
sbb
lret
add
testl
int3
cmp
pusha
sbb
mov
xor
and
daa
cld
sub
adc
jns
pop
das
loopne
mov
stc
shll
rclb
icebp
lock
out
push
cs
aad
jno
xor
push
or
push
xchg
pop
jecxz
outsl
cmp
pop
jnp
fldl
ror
cmp
push
negb
adc
out
mov
jmp
and
insl
fwait
sbb
js
sub
fadds
fisttps
mov
sbb
fbld
test
mov
ja
shlb
xchg
pop
mov
adcb
cmpsb
test
out
mov
pop
sti
arpl
mov
cmpsb
xor
jbe
and
dec
cmp
add
xchg
mov
mov
dec
fiadds
ljmp
arpl
mov
pop
in
arpl
sub
fnsave
leave
icebp
shrb
adcb
pop
mov
mov
arpl
aaa
iret
and
in
outsb
adc
test
add
add
add
lcall
int3
mov
cmp
mov
cmpl
cmp
adc
sbb
repnz
sbb
dec
clc
gs
lcall
jno
into
orl
push
adc
enter
add
push
fidivl
sub
int
xor
adc
sub
mov
fidivrl
xor
das
movsl
pop
push
lea
jmp
loop
in
xor
bound
cs
movsl
pop
aas
outsb
sbb
iret
mov
inc
push
vmovupd
out
and
nop
push
adc
stc
out
push
and
jno
lods
cmp
addl
add
xor
xor
es
sbb
push
pop
dec
inc
pop
jge
xor
pop
pushf
mov
sub
loopne
fwait
pop
out
xchg
push
pop
inc
jge
repnz
cmp
lahf
push
aam
inc
inc
movsb
hlt
sbb
in
or
and
loop
ret
rcrl
push
and
lods
mov
and
and
cwtl
inc
add
sbb
xchg
push
add
hlt
orl
cld
jl
jb
cli
pop
subb
pop
pop
pcmpgtw
or
shl
lahf
shlb
test
push
icebp
outsl
repnz
sub
xchg
pop
adc
addr16
push
sub
xchg
adc
lock
push
inc
xchg
push
jl
and
mov
xchg
push
xor
aaa
cmp
mov
into
mov
pop
xchg
push
inc
jmp
or
loopne
jne
shrl
insb
out
pop
neg
inc
sbb
push
cmp
pop
or
xlat
icebp
in
push
jbe
push
adc
sbb
lret
sbb
fidivl
adc
mov
in
xchg
outsl
mov
lahf
scas
stc
jae
out
sbb
scas
mov
and
scas
jno
and
aas
mov
jl
mulb
mov
push
or
int3
cmovs
mov
dec
sbb
inc
mov
xchg
outsb
fwait
imul
das
or
ss
mov
hlt
push
xchg
cmp
mov
dec
scas
leave
and
xchg
mull
xor
and
scas
mov
push
xchg
movsl
add
or
lods
dec
push
jb
xor
push
not
mov
jle
pop
test
sbbb
cmp
and
out
in
addr16
mov
enter
in
mov
rclb
jae
pushf
adc
cltd
mov
in
xor
mov
push
mov
add
add
push
mov
sbb
sbb
cmc
xchg
jne
enter
loope
jo
test
or
lret
dec
xchg
jae
push
or
mov
repnz
into
movsl
js
jg
push
fdivl
pop
add
insb
mov
cmpsl
sahf
dec
std
lahf
pop
lds
test
adc
fstpt
imulb
sub
jmp
into
jae
les
lret
jle
addb
cmp
adc
mov
fnsave
rorl
push
inc
loope
pop
xchg
mov
push
in
sbb
ss
jecxz
cld
shlb
mov
in
les
ss
jp
push
in
ja
ret
aas
filds
out
mov
lret
or
das
stos
push
pop
dec
sbb
inc
es
mov
mov
sbb
loopne,pt
sub
add
xor
adc
cmp
pop
mov
mov
dec
inc
cmp
dec
mov
xchg
enter
push
dec
imul
jp
inc
mov
mov
lods
push
xchg
sti
and
dec
shlb
ds
in
leave
lret
in
xorb
add
cli
and
xchg
push
xchg
fistps
cmp
decl
inc
sub
xchg
imul
or
lea
mov
shrb
outsb
mov
mov
cmc
popa
out
rcl
mov
xchg
cmc
mov
mov
into
inc
adc
jle
lret
add
cmp
ljmp
xchg
fwait
dec
cltd
inc
in
test
aaa
test
and
sar
pusha
sahf
mov
sub
mov
mov
add
xchg
sbb
clc
addb
jle
dec
cli
add
adc
jb
insl
xlat
mov
mov
adc
and
mov
push
lea
push
nop
gs
pop
sbb
adc
xchg
sbb
push
test
ds
loope
je
pushf
sbbb
jg
test
add
push
jnp
dec
sbb
daa
cmc
mov
rcll
mov
mov
xor
ljmp
add
mov
jecxz
fistps
into
sbb
mov
mov
daa
xor
leave
bound
push
in
aam
adc
sbb
sub
mov
adc
sti
scas
cmpsb
dec
fwait
movsb
in
xchg
leave
in
push
mov
mov
inc
push
cmp
inc
scas
pop
mov
dec
mov
lret
js
ja
mov
sbb
sti
and
pop
push
gs
push
lret
mov
dec
push
jns
inc
fwait
imul
dec
jno
push
fisttpl
lret
popl
mov
dec
mulb
jmp
inc
ficomps
mov
cmp
mov
xchg
jge
add
xchg
lea
popf
jo
mov
and
dec
mov
inc
mov
push
pop
pop
stc
jmp
je
inc
mov
cmpsb
in
nop
sbb
sbb
in
insl
mov
loopne
shl
cld
cmp
ret
mov
dec
arpl
mov
adc
mov
push
cwtl
jecxz
dec
stc
lret
sub
insl
mov
mov
les
js
aad
dec
iret
jne
push
mov
push
add
push
dec
nop
sub
xlat
jl
jns
jb
int3
sub
das
stos
pop
cmp
lret
mov
or
mov
adc
jno
cmp
in
xchg
add
nop
and
pop
mov
xor
jo
loope
cmc
in
adc
push
mov
mov
adc
imul
push
pop
mov
aad
pop
test
lret
cltd
stc
xor
jo
fisubrl
lock
jg
orl
bound
mov
jmp
fisubrl
inc
cmpsb
or
enter
test
jo
out
daa
hlt
lds
ja
fidivl
dec
ljmp
out
mov
xchg
aam
sbb
jne
sub
les
loopne
movsl
dec
pop
dec
cmp
push
cli
cld
cmpb
test
xchg
mov
ficompl
fnstsw
push
xchg
xor
outsb
cmovo
sub
push
in
push
cmpb
sub
pop
sahf
stc
js
mov
icebp
rolb
filds
dec
sub
dec
fistpll
xor
push
dec
push
dec
test
push
lret
loope
jp
mov
repz
xor
xor
cmpb
push
jb
add
cmp
mov
sbb
bound
xor
jae
cmpsb
push
fwait
add
sbbb
push
scas
jne
jo
inc
sahf
jp
cmp
push
xor
outsl
cmp
and
mov
xor
lret
jge
mov
sub
popf
xchg
or
out
fstpl
pop
fcoms
ds
mov
and
cmp
arpl
hlt
jne
fwait
xor
inc
cmp
mov
xchg
enter
es
icebp
in
rcrl
fiadds
and
cmp
aas
insl
in
jecxz
movb
cmpl
lahf
enter
xor
pusha
sub
or
xchg
push
das
fs
sub
scas
ret
push
fwait
dec
test
pop
iret
adc
pop
loope
jns
sub
xor
lcall
adc
js
rolb
aas
je
inc
xchg
gs
push
out
pop
mov
add
and
popf
jge
cmp
mov
jae
cli
insb
btr
inc
and
adc
inc
fstpl
xchg
add
jecxz
jno
dec
stc
push
cli
ds
jp
pop
insl
pop
dec
pop
adc
cld
mov
xchg
aaa
insb
xor
lret
cmp
flds
addb
sbb
loopne
sbb
and
fdiv
js
sbb
out
adc
stc
push
xchg
lret
cltd
dec
out
js
scas
mov
leave
and
ds
adc
mov
arpl
leave
in
mov
fstpl
inc
shrb
fisttpll
out
jne
push
iret
loopne
out
jb
popa
cs
enter
adc
rcll
add
xchg
aam
push
mov
fidivl
fwait
push
outsl
stos
mov
dec
call
jne
sarb
inc
adc
push
or
ret
or
cli
cmp
loope
cmp
sahf
mov
scas
out
sub
ja
rcrb
int
out
push
sub
jmp
adc
xor
push
lahf
es
ss
addb
xorb
jno
or
insb
leave
push
sahf
dec
adc
xlat
adc
mov
dec
aas
pop
out
or
sar
out
test
out
jbe
sub
mov
or
mov
adc
adc
push
out
inc
jb
or
xor
lahf
dec
jl
mov
jg
cltd
xchg
jno
xchg
jnp
lahf
cwtl
in
sbb
loopne
data16
lcall
lahf
inc
fdivs
push
pop
jns
dec
ljmp
xor
push
or
data16
lds
push
xchg
mov
and
aaa
sahf
jns
jnp
xor
mov
addr16
mov
cmp
pusha
add
sbb
inc
stos
xchg
pop
test
and
inc
ds
sbb
pop
xchg
repnz
jge
dec
test
fsubrp
scas
call
inc
es
or
cmp
push
popa
xor
in
xor
or
fsubrl
mov
mov
sub
push
fisubrs
push
in
int
mov
sbb
in
dec
mov
or
movsb
in
pusha
sbb
mov
icebp
sub
mov
push
aad
mov
out
xchg
mov
push
inc
xchg
sub
andb
out
push
jo
push
jmp
lahf
pop
out
xchg
rorb
std
xor
outsb
lret
mov
shll
jecxz
push
rcr
jge
and
xchg
fcomps
hlt
lock
mov
stc
push
jns
idivl
xor
decb
xor
jnp
pop
negl
dec
add
std
idivb
xor
jp
push
sub
or
cmp
and
sub
cmpsl
jl
xchg
jo
push
xor
adc
lret
dec
push
aad
js
inc
popa
arpl
call
jecxz
das
push
and
arpl
dec
fwait
in
fisubrs
adc
sbb
or
jmp
mov
jmp
outsl
out
das
cmp
repz
ljmp
subb
insb
fidivl
add
push
pop
cmp
xor
add
mov
jecxz
xlat
out
nop
sub
inc
fwait
cwtl
fsubrp
mov
aam
adc
xchg
push
pop
shll
scas
mov
cmpsb
lods
movsb
sahf
push
lahf
jmp
and
mov
negb
sbb
jle
in
aad
lahf
jno
xchg
mov
les
push
and
loope
inc
push
jle
sbb
stc
xchg
and
pop
adc
loopne
lods
sub
mov
cmp
mov
mov
jb
in
out
int
nop
push
inc
stos
pavgb
sbb
push
insb
fimuls
into
stos
loop
js
cmc
sub
test
orb
movsl
adc
inc
loop
aad
or
outsb
fiadds
out
sbb
pop
movsl
mov
cmp
test
jbe
cmp
jo
aas
dec
shrb
cwtl
out
fs
lds
jmp
mov
lds
xchg
jle
mov
aas
ds
int
in
fsts
movsb
test
fucomip
pop
jecxz
dec
and
jmp
lea
push
xchg
gs
xchg
add
mov
xchg
fisubrl
std
mov
or
loop
cmc
push
xchg
sub
cmc
insb
push
or
sbb
xor
loope
xlat
mov
aad
or
fmul
dec
lods
js
lret
inc
mov
xor
pop
pop
js
or
xlat
repnz
fidivs
cmpsb
push
cmc
daa
mull
xchg
lods
repz
rcrb
clc
xchg
fincstp
or
mov
cmp
out
sbb
xchg
mov
xor
sbb
shrl
xlat
cmp
xchg
clc
aas
mov
hlt
push
lret
mov
xor
cmp
push
push
jle
arpl
cmpsb
rcl
dec
inc
mov
xchg
nop
jl
or
aaa
jae
mov
jmp
mov
ret
test
cmp
or
pop
pop
mov
sub
or
pop
mov
lret
inc
rcl
mov
loop
bound
arpl
jg
dec
and
mov
repz
in
xchg
in
sti
int3
mov
cld
lcall
fstpl
push
sub
xchg
pop
filds
es
std
pop
mov
enter
mov
clc
mov
in
sub
sub
lods
add
std
loope
jne
inc
in
or
jo
pop
and
push
mov
mov
ja
in
movsb
out
int
or
pop
daa
sub
shrb
dec
sub
cmpsb
loop
xchg
mov
loop
and
sub
mov
sbb
mov
add
pop
loopne
adc
cmpsl
jae
popf
test
inc
sub
mov
inc
fsts
push
std
mov
jne
stc
nop
mov
or
mov
fildll
or
add
shll
jb
out
pop
pop
jo
xor
jno
loopne
inc
sbb
or
ds
and
fsubl
dec
push
nop
add
mov
and
add
inc
inc
xchg
mov
dec
inc
or
pop
scas
fmulp
ret
or
int3
rclb
or
cmpsb
in
cmpsl
push
dec
mov
call
mov
jge
lahf
jmp
cmp
test
sbb
mov
adc
adc
decl
shlb
pop
sbb
lds
addr16
cmp
test
jmp
lcall
sbb
fstps
and
repnz
movsl
or
shlb
scas
xor
mov
xchg
ror
xchg
and
stc
insb
enter
sub
cwtl
into
cmp
xchg
xchg
jno
jecxz
js
in
out
cli
dec
outsb
cltd
mov
nop
gs
and
andl
xor
dec
sahf
push
hlt
shrb
mov
mov
aam
mov
xor
adc
imul
loop
add
pop
stos
int
lock
sti
sar
cli
sti
sbb
mov
or
clc
mov
lds
adc
and
clc
mov
sahf
lds
adc
gs
or
imul
add
sahf
stos
sub
mov
sub
inc
xchg
jnp
hlt
fsubrl
idiv
sub
fildll
andl
inc
std
lahf
hlt
rorl
jbe
mov
and
and
sbb
xor
lret
in
fisubrs
cmp
in
out
cs
pushf
push
add
fimuls
xchg
inc
add
scas
mov
xchg
aad
cmp
roll
jle
aaa
inc
push
aam
sbb
into
fs
xchg
in
dec
add
pop
cmc
pop
cmp
push
add
and
jmp
cmpsl
int3
in
mov
cmpsl
inc
dec
push
movsl
dec
iret
clc
cmp
pushf
sub
inc
lahf
xchg
push
loope
xchg
xchg
sub
pop
xchg
or
sub
movsb
pop
movsl
fcmovu
push
jge
or
cmp
in
pop
into
lahf
mov
in
inc
push
sub
scas
pop
mov
and
outsb
int3
lahf
incl
jmp
mov
shll
insl
add
ljmp
sahf
out
adc
dec
inc
adc
pop
decl
mov
mov
xchg
das
ja
addl
xchg
pop
invd
dec
arpl
and
cld
lcall
adc
add
dec
negb
sbb
shrl
xchg
lret
inc
xor
push
xchg
test
movsb
mov
xchg
adc
push
loop
adc
jl
rolb
sbb
inc
test
ds
stos
test
ja
sbb
or
sbbl
adc
or
add
xor
test
inc
cwtl
stos
xor
jb
clc
jmp
ficompl
dec
lods
cmc
inc
ja
test
lods
pop
or
xlat
push
pop
sbb
push
rcrl
cmpsb
sub
inc
scas
ja
dec
adc
test
push
mov
inc
pop
test
call
les
mov
clc
scas
mov
repz
sub
aam
mov
pop
pop
in
xor
jp
jne
pop
js
push
mov
fdivl
cmp
pop
cld
mov
mov
fsubp
jnp
and
negl
lret
sub
adc
fs
lds
les
jp
mov
lret
fsubrs
lds
push
pop
sub
in
gs
cmpsb
or
mov
fsubrs
cltd
push
cli
pop
xor
xlat
xchg
stos
mov
dec
int3
sbb
fwait
mov
jbe
loop
push
sbb
pop
cmp
clc
mov
mov
stos
pop
std
xchg
xlat
pop
cwtl
adc
outsb
adc
push
popa
mov
or
in
imul
aas
dec
or
push
dec
repnz
rorl
clc
dec
test
cmp
or
ret
jp
incl
and
mov
shr
and
push
cmpb
jns
adc
inc
push
daa
pushf
jp
addr16
movsl
add
in
addb
ret
or
testl
dec
daa
dec
dec
or
movsb
jo
fsubrl
jmp
lods
out
mov
mov
cltd
lret
sbb
ja
mov
push
mov
fucomi
lds
jo
sbb
jge
dec
mov
js
jecxz
shll
adc
xor
pop
mov
repnz
test
mov
test
xchg
mov
jae
and
nop
and
sbb
cmc
adc
push
mov
insb
in
sti
fistl
sub
jecxz
stos
in
mov
push
lds
jmp
mov
mov
in
negb
mov
jmp
inc
add
mov
sub
xor
dec
push
xor
adc
lods
pop
cmp
std
inc
push
adc
inc
xor
dec
out
dec
mov
ret
or
jg
js
mov
les
sub
out
jmp
lret
mov
push
xor
ret
mov
fwait
jmp
xor
sub
mov
cmpsl
orb
arpl
movsl
xor
mov
cmp
test
add
cmp
add
stos
cmp
lds
das
nop
int3
int3
add
sbb
in
jge
in
mov
outsb
pop
or
mov
int3
jns
or
cmp
xchg
lds
sub
fstl
xchg
insl
cmp
push
push
in
sub
repnz
pop
enter
xchg
lret
jle
dec
test
xchg
jg
pop
mov
mov
pop
xlat
popl
shr
loopne
iret
pop
mov
cmp
cmp
jle
mov
adc
mov
lock
sbb
jae
or
lahf
mov
outsb
lea
mov
mov
repz
sbb
adc
addr16
or
sbb
inc
aas
add
daa
std
mov
dec
inc
cltd
cmpsl
push
stos
cld
xchg
xor
xchg
mov
sub
inc
push
sbb
hlt
jl
lcall
push
or
test
or
pusha
dec
pop
add
fisttpll
sbb
js
xchg
jnp
in
mov
inc
mov
dec
inc
es
fisttpll
cmc
pop
push
std
xor
sub
sti
sub
and
into
push
cmpsl
out
ja
in
lcall
daa
sbb
mov
jge
push
mov
ds
add
and
adc
stos
inc
dec
xchg
pushf
xor
call
in
ret
inc
xor
fsubr
mov
pop
lea
or
lock
stos
dec
jno
add
pop
fnstsw
or
sub
test
lods
mov
adc
cltd
pop
pop
clc
movsl
jmp
lods
aam
in
daa
sub
mov
jmp
data16
push
xor
jge
add
sub
xchg
hlt
mov
and
shll
outsl
mov
mov
xchg
stos
lret
xchg
adc
jle
adc
pop
les
push
xchg
xchg
pop
push
push
inc
cmp
cmp
shrl
push
popa
sub
adc
dec
xchg
inc
xor
aad
push
jmp
xor
mov
lods
push
push
in
sbb
rcrb
lret
repnz
sbb
add
cmp
mov
and
and
cmp
xor
pop
sti
jns
inc
pop
out
and
and
xchg
xchg
es
pop
out
sbb
pop
sub
push
fnsave
daa
sub
in
std
arpl
cwtl
jbe
mov
out
push
jbe
lahf
mov
call
jl
shl
pop
sti
lods
sub
xor
test
push
sbb
fdivl
xor
jns
pop
bound
jmp
dec
and
rcrl
mov
je
mov
jle
shrl
dec
repnz
pop
in
stos
xchg
pop
bound
mov
test
mov
xlat
ds
xchg
sub
sbb
ret
adc
jge
xchg
jle
aam
push
lods
mov
orl
jmp
test
gs
pop
lret
das
rorl
xchg
das
psadbw
cmp
pushf
xchg
xchg
jbe
sarl
pusha
pop
cmpsb
jge
cmp
jnp
push
arpl
testl
jae
sub
adc
jae
loope
inc
adc
jmp
xchg
lods
daa
mov
pop
in
lret
and
popf
sub
pop
or
gs
xor
rcll
popf
nop
sub
mov
les
sbb
ficoms
mov
xchg
add
fdivrs
pushf
nop
aad
inc
scas
imul
imul
daa
sbb
orb
sub
cmpsl
sahf
jg
jae
fyl2x
ds
pop
aad
fnstenv
addb
inc
push
subl
sub
push
xchg
dec
xchg
insb
fwait
xor
add
sbb
pop
js
rorl
fwait
push
xor
and
or
je
push
inc
out
test
lret
ds
push
fcmovnbe
mov
mov
push
and
sbb
jl
sub
inc
aaa
clc
fwait
enter
xchg
cld
xor
mov
or
popf
fstl
pop
cmc
mov
aad
pop
cmpl
fistps
cmpsl
push
insb
mov
adc
add
aaa
outsb
pop
cmp
inc
xor
and
shr
in
jecxz,pt
dec
hlt
test
repz
inc
adcb
cmp
mov
int3
in
mov
inc
sbb
sub
jo
xlat
mov
out
add
out
and
loopne
mov
xchg
push
xor
sbb
mov
mov
mov
in
push
stc
rep
aaa
xlat
das
cltd
sahf
mov
cmp
cmpl
pushf
aaa
clc
aad
adc
pushw
jmp
jb
std
or
mov
out
ja
repnz
dec
xchg
sbb
fistpll
pusha
int
pop
push
sbb
fcoml
addl
imull
inc
outsl
jbe
subb
mov
jp
sahf
mov
je
dec
ja
mov
push
inc
mov
aad
jno
test
push
imul
rorl
jle
ret
push
push
subl
pop
les
fadds
hlt
push
or
pop
or
addb
jmp
add
xchg
mov
inc
outsb
sbb
cmpsl
icebp
daa
xchg
mov
ljmp
ficompl
pop
fdiv
jns
lods
xor
push
inc
push
add
jns
in
and
jo
movsl
xchg
and
cmp
test
ja
jns
andl
mov
cwtl
xchg
push
sub
push
ds
enter
aam
ret
adc
inc
push
test
cmp
or
dec
push
or
push
out
cmp
push
aam
orl
cli
or
in
int
push
adcb
lcall
xor
hlt
aam
test
insb
cltd
jge
popf
or
adc
xchg
pop
cmp
fnsave
outsb
mov
insb
push
pop
or
push
jns
es
flds
mov
dec
dec
into
loope
pop
imul
call
xchg
fmuls
jo
das
jno
pop
add
sub
xchg
fidivl
push
xchg
mov
adc
test
xchg
adc
push
xor
loop
in
dec
mov
data16
ljmp
mov
in
xchg
xchg
jns
ret
mov
sbb
fwait
in
lea
cmp
sub
repz
pushf
xor
les
arpl
aam
scas
add
ret
outsl
lcall
xor
and
gs
mov
dec
cs
and
mov
xchg
pop
mov
jo
mov
fstp
ljmp
add
std
mov
pop
inc
xchg
lahf
mov
or
lcall
fbld
scas
dec
adc
shlb
lea
fimuls
repz
aad
mov
jnp
mov
out
pop
adc
lret
jo
daa
push
cmp
add
push
std
ret
sbb
push
aam
cld
bnd
cltd
shr
test
inc
sub
and
jmp
ljmp
jns
cltd
test
xor
inc
sub
adc
push
in
push
fwait
shl
xlat
cs
mov
cld
or
cmp
adc
or
and
ret
mov
or
xchg
fnstsw
push
idivl
mov
addr16
adc
cmp
stc
jmp
jle
push
into
mov
push
cltd
lret
mov
xchg
and
fisubrl
sub
in
cmpb
clc
pushf
stos
xor
mov
cmpsl
sub
cmp
cmp
stos
bnd
inc
push
mov
inc
cmp
fwait
xor
sbb
inc
outsb
scas
and
call
int
into
iret
jo
jns
jge
movsl
fmuls
addr16
jg
sub
fadd
cli
loop
sbb
sub
xchg
fcmovu
inc
mov
shrb
add
pusha
xchg
mov
pusha
enter
mov
divb
or
inc
repz
fs
out
das
loopne
jne
gs
or
mov
pop
stos
ret
inc
outsb
js
inc
pop
or
loop
icebp
outsb
sarb
arpl
enter
inc
mov
sbb
nop
inc
add
or
pop
xor
in
or
xchg
lahf
inc
adc
dec
pusha
sbb
loopne,pt
xlat
lock
mov
lret
sub
movsb
add
dec
inc
inc
push
pop
push
pop
add
popf
add
adc
mov
xlat
call
cmpsl
jns
sbb
add
es
into
icebp
jb
in
push
sar
shr
stos
pop
cmc
mov
cld
sub
shlb
mov
hlt
mov
inc
or
pop
cmp
sti
into
nop
iret
and
ja
xchg
pushf
popf
sahf
sbbb
cmc
add
add
or
and
cld
ret
stos
addr16
push
es
hlt
dec
sarl
sbb
sti
pop
dec
fucom
xchg
arpl
mov
mov
bound
mov
cs
inc
movsb
aaa
call
lret
fmuls
fcmovbe
imul
mov
lock
xchg
das
cmp
jmp
arpl
popfw
dec
inc
cmp
arpl
jbe
push
xor
pop
daa
mov
add
cs
stos
jb
aaa
push
stos
and
push
icebp
push
push
popa
call
xor
inc
stos
push
loope
aas
imul
xorb
and
cmp
jl
dec
movb
jne
ljmp
cmp
test
repz
dec
xchg
cmpsb
outsb
pop
sbb
aaa
xchg
push
data16
xchg
cli
push
and
test
mov
add
sbb
inc
xchg
push
imul
sub
outsl
cltd
mov
and
mov
xor
xor
mov
enter
sbb
out
dec
outsb
std
add
mov
loopne
pop
js
nop
dec
push
mov
pop
rorb
fildl
cwtl
cmp
test
cmpsl
aam
shlb
addb
into
test
js
add
js
ret
fimuls
xchg
stos
sub
xor
jp
mov
xlat
xor
pop
and
cmp
inc
sub
shll
test
mulb
lahf
insl
mov
sbb
sub
xor
sti
das
notb
das
xor
aad
dec
mov
pop
mov
mov
adc
cmpsl
cmp
int
pop
lods
mov
mov
jmp
and
je
scas
mov
mov
gs
mov
nop
xchg
dec
leave
mov
mov
lock
inc
imul
addr16
cmp
push
push
outsl
lea
add
push
jne
dec
pop
das
je
add
push
lods
out
test
pop
xchg
rclb
xchg
cmp
and
hlt
ja
sbb
jnp
mov
or
push
lods
out
punpckhdq
loope
push
std
xchg
movsl
add
cld
mov
pop
xor
test
out
mov
mov
out
xor
inc
data16
inc
dec
pop
out
repnz
push
gs
adc
in
xor
fwait
cltd
xchg
cmp
mov
dec
stos
push
inc
push
mov
add
push
sub
mov
mov
pop
dec
mov
inc
xchg
dec
les
iret
rcll
xchg
xchg
add
insl
aas
icebp
and
shll
add
jg
lods
pushf
jle
mov
hlt
pop
dec
adc
mov
arpl
ss
jnp
loopne
cmc
lcall
push
scas
inc
xchg
cs
and
sarb
ret
pop
mov
xor
mov
push
testb
and
jmp
pushf
mov
jnp
jp
pop
add
jbe
cmp
push
or
nop
pop
data16
addr16
mov
test
fnstsw
mov
negl
mov
push
int
pop
aam
mov
xor
push
rclb
jne
dec
mov
or
xchg
mov
cs
pop
sbb
push
adc
ljmp
push
outsl
jnp
rorb
repnz
push
push
test
sarb
popa
push
dec
dec
and
aaa
push
or
dec
out
push
jp
xchg
mov
repz
gs
movsl
clc
push
shl
xchg
icebp
mov
cmp
jbe
adc
push
loope
je
ja
xlat
sahf
mov
cmpsb
xor
sbb
mov
ja
mov
mov
subl
jmp
mov
adc
sub
adc
adc
mov
dec
mov
repnz
adc
push
movl
or
push
add
call
push
cld
popa
sub
adcl
out
test
mov
mov
icebp
leave
dec
cltd
and
dec
xor
sub
fisubs
jecxz
mov
rcl
and
push
add
cmc
sub
pop
sub
sub
scas
fsubrs
or
jp
dec
lods
or
add
rcll
hlt
nop
lcall
and
mov
pop
dec
inc
popa
fisubrs
sbb
xor
movsb
pushf
scas
pop
mov
or
add
and
into
adc
sbb
jle
adc
sbb
sbb
mov
jp
pop
out
mov
insl
les
movsl
imul
add
push
insb
lods
and
or
add
mov
lock
out
push
pushf
shlb
iret
dec
xchg
shrb
xchg
xor
mov
pop
xchg
jg
jp
adc
into
push
add
lret
and
aas
pop
adc
mov
mov
fwait
lret
sub
mov
pop
xchg
jg
scas
adc
push
pop
cld
scas
test
jle
pop
or
or
fnstsw
pop
mov
sbb
ret
mov
push
lea
icebp
in
sarl
mov
push
leave
cs
inc
fildll
movsb
out
adc
xchg
insl
pusha
xor
pop
sbb
or
dec
mov
sbb
push
testb
or
into
add
dec
adc
cltd
sub
in
pusha
pop
add
fnsave
scas
cwtl
fsubs
mov
call
jg
or
leave
mov
push
into
pop
inc
sbb
ret
ret
cmp
outsl
cli
add
push
imul
mov
and
decb
stos
dec
nop
dec
mov
sbbb
push
pop
xchg
adc
xor
aaa
shlb
cmc
pop
add
cmp
fists
inc
jmp
xchg
inc
out
fndisi(8087
mov
les
sbb
pop
icebp
movsl
add
xor
and
lds
pop
flds
dec
sbb
inc
push
popa
mov
cmp
movsl
cmpsb
pop
mov
clc
cmpsl
ja
scas
out
sbb
mov
rcl
push
xchg
rcll
das
test
push
pop
xor
dec
pop
push
or
lea
xlat
out
xchg
out
movsl
addr16
pusha
sbb
jle
inc
sub
and
shrb
cmc
nop
test
ljmp
or
push
mov
hlt
inc
mov
sub
pop
push
pop
pop
arpl
push
add
sub
jecxz
xlat
in
jo
fidivs
outsb
jge
sahf
lret
mov
or
fisubrs
sbb
test
sub
fs
loope
mov
lds
movsl
loop
pop
xchg
cmpsl
sub
pop
pop
add
sbb
repnz
adc
push
cltd
imulb
inc
sqrtps
jl
xor
cmp
sub
jne
and
pop
cmp
xchg
mov
subl
sbb
mull
cmp
fstps
popa
mov
test
sarb
xchg
cmp
pop
adc
nop
sub
je
test
mov
and
push
push
mov
push
neg
xchg
dec
into
and
xor
pop
and
lods
leave
pop
jmp
loop
ss
mov
push
xchg
je
movsb
mov
xchg
jmp
iret
inc
mov
adc
mov
or
sub
sarb
push
ret
shrl
pop
je
mov
and
sbb
jo
pushf
mov
pop
stc
test
stos
mov
popf
lcall
fiadds
pop
out
cmp
adc
sti
sub
mov
cld
push
inc
xlat
xchg
mov
lcall
add
adc
into
push
pop
inc
std
mov
shrl
daa
mov
insb
inc
fisubl
fiadds
js
mov
scas
pop
dec
test
aad
push
mov
sbb
outsl
pop
or
xchg
loopne
push
xchg
pavgb
cltd
xchg
cmp
push
fisubs
test
icebp
sub
xchg
stc
jbe
mov
repz
aaa
stos
adc
loop
push
notl
in
pusha
and
push
mov
or
mov
decl
jge
shrb
push
fisubs
lods
jecxz
je
mov
fcomp
mov
lock
cmc
mov
inc
xor
push
add
arpl
out
out
jbe
sbb
mov
and
pop
xchg
mov
es
aad
fimuls
lret
mov
adc
test
bswap
sbbl
fcomps
dec
enter
cmp
aas
mov
sub
inc
mov
pop
xchg
fmulp
inc
test
xor
jae
jnp
jbe
xchg
repz
jl
cmpsl
push
or
call
lock
pop
pushf
pop
pushf
roll
ss
nop
cmp
scas
push
mov
push
int
add
add
fs
push
out
outsb
inc
or
xchg
popf
mov
sub
and
lcall
sbb
xchg
mov
jbe
mov
jns
inc
push
jns
add
iret
in
mov
cltd
push
add
int
pop
adc
fwait
sti
sub
dec
test
and
cmp
sbb
hlt
or
rorl
sbb
out
inc
inc
sub
in
mov
les
xchg
inc
test
adc
mov
adc
dec
insl
mov
mov
xchg
cmc
and
mov
pop
mov
sub
mov
gs
rep
mov
loop
ftst
into
sbb
push
das
ret
imul
dec
mov
push
cmp
pop
ret
repnz
jno
push
je
add
mov
rcll
mov
daa
aas
in
dec
test
sub
jmp
in
ffreep
dec
lea
nop
inc
arpl
mov
add
add
cmp
repz
dec
ss
sub
sbb
mov
xor
cmp
fistpll
xchg
clc
adc
lret
shr
or
xchg
and
xor
jne
xchg
mov
or
dec
xor
add
sbb
mov
pop
enter
pop
push
xchg
xor
dec
enter
mov
popf
lret
lret
dec
fidivl
imul
xchg
and
xchg
push
jge
xchg
push
loope
xchg
mov
cmp
xor
imul
mov
jge
popf
lods
scas
movb
and
push
mov
pop
jne
dec
xchg
negb
cmp
daa
xchg
inc
pop
pop
mov
popa
out
sbb
outsb
sbb
lahf
ds
sarl
insb
inc
xchg
xchg
aad
mov
mov
fiadds
inc
mov
xchg
pop
mov
jbe
leave
dec
mov
je
pop
cmp
or
ds
sub
xchg
lret
dec
fsubrl
mov
xchg
add
dec
jecxz
stos
stos
push
fcoml
loopne
loopne
stos
xchg
daa
cmpsl
xor
pop
jl
negb
pusha
cmp
pop
xadd
ret
ret
mov
dec
andb
imul
dec
push
imul
jl
ja
add
fdivr
adc
sub
out
or
mov
fistpll
out
add
test
sub
lods
add
jne
inc
mov
daa
or
sub
stos
cmp
xor
hlt
les
les
orb
scas
mov
dec
fwait
movsl
push
dec
lods
mov
xor
inc
push
cld
imul
mov
adc
lcall
pop
dec
cli
cmc
jb
cmpsl
les
std
push
repz
adc
mov
ja
jnp
mov
packsswb
xlat
daa
mov
cld
in
test
xor
into
push
add
cmpsb
pop
scas
rorl
add
adc
jp
xor
xchg
add
inc
cli
mov
mov
imul
pushf
in
add
and
fildll
sbb
mov
movsl
mov
lret
push
cli
cmp
pop
out
das
mov
shrb
mov
loop
sbb
scas
les
xchg
movsl
popf
sti
icebp
xchg
out
mov
repz
adc
lret
or
mov
push
xchg
test
data16
and
cltd
inc
ret
out
or
ret
xor
mov
mov
pop
incl
movl
mov
popf
sub
daa
pop
dec
sub
inc
call
mov
xchg
dec
pop
mov
cmpb
push
and
scas
or
pop
add
add
addr16
loopne
or
bound
push
enter
cmc
push
repz
jne
outsl
cmpsb
in
arpl
rcll
push
or
push
mov
jle
scas
arpl
je
pop
aas
push
or
add
jne
mov
scas
outsl
dec
imul
push
inc
iret
mov
cwtl
mov
std
pop
ror
sti
movsb
ss
cmpsl
iret
sbb
pop
and
adc
cmc
push
loop
sbb
adc
xor
into
xchg
xchg
testl
hlt
stos
and
rolb
fs
mov
xchg
sbb
mov
xchg
and
or
out
into
and
call
das
test
iret
hlt
dec
outsl
or
pop
mov
test
mov
inc
aaa
fwait
or
sbb
cli
in
cmp
jle
dec
inc
push
cmp
std
rcl
das
dec
out
data16
pusha
jo
lahf
dec
or
movsb
pop
mov
or
lods
lahf
insl
test
and
push
test
jecxz
pop
stos
xchg
cld
or
fnstsw
movsb
jmp
mov
sbb
or
clc
cmp
inc
movsl
rorb
test
mov
cmpsl
mov
and
imul
out
dec
inc
or
dec
mov
mov
fbld
jmp
nop
jno
and
jmp
mov
jo
lret
fcmovbe
orl
scas
inc
add
mov
iret
pop
mov
and
fisttpl
mov
adc
cmp
inc
into
ss
adc
mov
dec
adc
push
push
mov
xor
lds
jb
push
dec
push
pop
or
ja
rcl
div
xchg
int
movsb
mov
xor
mov
les
popf
pop
mov
mov
ja
loop
inc
dec
cmc
xchg
popa
cmpsl
dec
in
pop
mov
data16
es
jp
or
cwtl
int
call
jmp
repnz
test
sbb
sub
adc
ret
mov
jmp
and
insb
jle
shll
mov
and
inc
ss
aam
sub
mov
pushf
push
or
inc
push
inc
int
repz
xchg
cmc
cmovp
or
fldcw
sbb
aad
loop
loope
mov
jb
dec
stos
in
ss
in
inc
out
or
mov
sti
test
cmc
stos
insl
call
and
ss
cmpsb
icebp
in
mov
icebp
add
je
daa
aas
fwait
cmp
xor
mov
pusha
mov
mov
loopne
outsb
jp
out
sub
lahf
enter
dec
adc
inc
pop
cmp
adc
or
xor
je
push
jo
xchg
lock
dec
jge
xchg
lods
popf
dec
adc
lcall
mov
call
mov
out
pop
inc
lods
pop
add
jecxz
lcall
aas
or
imulb
mov
imul
xchg
cmpsl
movl
aaa
addr16
sub
mov
jmp
push
icebp
cmpsb
js
inc
gs
pop
sbb
cmc
addr16
jmp
fsub
mov
lods
roll
loope
ss
std
cmp
fimuls
jb
push
sbb
loopne
adc
lds
enter
mov
jb
mov
inc
in
jnp
dec
xchg
push
push
lret
sbb
jle
mov
inc
lcall
aam
push
fs
outsb
rclb
jecxz
out
adc
cmp
push
aaa
or
xchg
mov
enter
mov
mov
out
scas
repnz
adc
push
cmpsl
rolb
add
cmp
lahf
in
mov
lcall
stos
fisttps
lcall
xchg
mov
pop
fldl2e
inc
lods
or
mov
and
jno
in
lcall
jecxz
mov
shrl
lock
js
and
add
rcrb
cwtl
mov
loope
xchg
addr16
test
testb
testb
xlat
push
in
or
mov
dec
push
inc
std
cmpsl
dec
repnz
insb
mov
out
dec
adc
pop
jle
dec
adc
push
outsl
mov
dec
in
jmp
rclb
rcll
xor
data16
pop
outsb
ret
pop
js
cli
cli
ja
pop
pushf
shll
xchg
movsl
daa
push
adc
adc
fadd
pop
xchg
push
mov
add
xchg
test
rolb
jns
std
dec
jno
cmc
mov
or
stc
jecxz
push
ss
and
fldt
aas
sub
mov
pop
rcll
and
leave
shl
jne
pop
mov
cmp
je
imul
rolb
jecxz
mov
in
push
les
gs
repnz
pop
sub
test
dec
xchg
je
insl
aas
mov
test
femms
into
or
xor
in
ja
and
popa
lods
sbb
add
pop
xchg
mov
pop
push
filds
pop
daa
aas
sub
jbe
stc
mov
movsb
fpatan
inc
adc
or
popa
dec
aam
cwtl
mov
jl
mov
mov
stos
and
int3
das
adc
aaa
add
lods
sub
mov
repz
cwtl
xorb
mov
jecxz
stos
add
mov
mov
adc
shrl
pop
jns
js
cltd
inc
sub
xor
fwait
mov
mov
xchg
outsl
mov
cmp
mov
loope
mov
jne
xchg
xchg
dec
lahf
inc
dec
sbb
addr16
pushf
shl
int
inc
loop
movsb
popf
add
rcl
pushf
and
push
pop
and
stos
es
insb
mov
push
ja
xorb
repnz
xor
call
jns
popa
mov
rclb
jp
adc
sahf
mov
cmpsb
notl
xor
pop
sti
aaa
sub
xchg
and
mov
mov
mov
jecxz
mov
dec
mov
inc
mov
push
decb
add
xor
jns
adc
aaa
jg
push
add
imul
jmp
and
sub
sbb
mov
jnp
std
scas
jns
sbb
mov
jnp
pop
and
mov
jle
jns
test
or
lret
jno
fiadds
mov
cmp
ret
out
imul
sub
call
int
movsb
pop
add
out
imul
lret
mov
pushf
aad
dec
in
push
inc
xchg
and
fstpl
pusha
adc
jbe
stc
xchg
sahf
and
xchg
jp
popa
inc
or
push
pop
bnd
fiadds
clc
inc
enter
sub
push
shlb
add
ret
pop
xchg
pop
imul
push
push
out
rcl
push
lods
and
or
xchg
imul
aad
arpl
push
xor
addb
scas
lcall
dec
push
xchg
jbe
dec
dec
push
jbe
mov
adc
out
push
pop
enter
push
push
jno
xchg
fs
cmp
xchg
inc
aam
jge
xchg
xchg
out
mov
push
loopne
dec
loopne
mov
mov
push
jmp
nop
out
push
out
cltd
icebp
out
dec
jecxz
out
fisttpl
jmp
mov
or
jp
push
bound
cmp
gs
inc
push
into
jb
movsb
out
dec
xchg
sbb
in
or
fisttps
ljmp
jnp
rorb
inc
outsl
dec
aaa
mov
pusha
push
outsl
test
push
adc
stc
test
lea
and
std
adc
jbe
imul
cmpsl
cmp
lea
es
out
cld
dec
inc
adc
mov
lahf
testl
imul
mov
cs
test
sarl
jo
js
aad
paddusw
add
dec
jecxz
js
push
orl
std
rorl
lret
ljmp
inc
fimuls
pop
dec
xchg
mov
mov
pop
xchg
cmp
sbb
imul
adc
test
std
outsl
dec
rorl
fdivl
movsl
jmp
in
and
shl
and
push
dec
dec
or
outsb
jb
mov
out
push
jecxz
cwtl
gs
fisubs
adc
jbe
jae
negb
popa
pop
nop
enter
pop
movsl
pop
xor
cld
popf
xchg
pop
sub
pop
sub
or
gs
call
cmp
inc
mov
cs
popa
jb
testl
in
stc
jb
frstor
orl
rorb
pop
mov
cmpsb
fisubs
sub
xchg
sub
dec
imul
or
push
xor
or
xchg
pop
mov
rol
stc
nop
mov
pop
call
xchg
lods
or
lahf
jns
cmpl
xchg
push
jne
enter
cli
ret
inc
xor
cmp
pop
std
insb
jle
jae
adc
hlt
fnstenv
sub
xor
sbbl
bound
lods
adc
js
or
inc
subl
lods
sub
es
jno
xchg
scas
xchg
push
jg
lock
sbb
xchg
insb
xor
ret
int3
int3
add
repz
popl
movups
xor
mov
jle
clc
insb
push
scas
add
ror
test
mov
xchg
movsb
ret
cmc
sbb
add
push
rcl
pop
outsb
sub
or
cmc
xchg
in
xchg
inc
push
and
das
enter
out
arpl
andb
jae
push
mov
xor
cld
mov
test
and
inc
sarb
jb
lret
push
sahf
mov
push
jo
xlat
outsb
jns
jp,pt
pusha
repnz
add
stc
pusha
pmaddwd
flds
mov
xchg
aad
mov
xchg
arpl
inc
aad
push
pop
xchg
cmc
insl
mov
inc
add
and
adc
mov
ffreep
loopne
xchg
jecxz
xor
jl
insl
imul
add
cli
adc
add
cmpsl
jb
dec
ret
mov
or
mov
cmp
dec
mov
call
mov
adc
mov
push
test
sub
in
sbb
mov
jno
mov
jne
scas
jb
test
outsl
test
lock
dec
stos
xchg
nop
pop
sarl
and
mov
loop
into
call
inc
or
dec
flds
pop
adc
daa
pop
into
mov
mov
outsb
jo
pop
pusha
and
xor
mov
leave
push
icebp
adc
decb
add
sbb
dec
lea
in
pop
lea
mov
loopne
jo
jbe
sbb
cmp
push
and
pop
mov
adcb
int
push
xor
test
push
dec
pop
xchg
insl
cmp
mov
js
sbb
out
cmp
jmp
cmp
loop
dec
rclb
lods
inc
daa
push
fldenv
dec
popf
jmp
push
movsb
arpl
in
xchg
dec
loopne
loope
sahf
fsts
imul
inc
loope
dec
enter
jmp
push
xor
out
stos
mov
xchg
push
ss
xchg
dec
add
repnz
popf
imul
and
negl
cs
push
out
repz
je
sub
test
rcll
or
test
outsb
inc
inc
jns
std
leave
mov
pop
lret
xor
rorb
fsubrl
stc
dec
push
into
adc
call
cmp
jbe
or
sarb
out
out
jp
int
push
leave
notb
pushf
pop
sub
iret
and
xchg
cmpsb
mov
aam
lcall
jb
mov
cmp
das
bound
pop
dec
aaa
lock
mov
insl
inc
ja
mov
sub
adc
pop
pop
fwait
and
inc
sub
mov
out
bound
jbe
and
sub
mov
jl
inc
or
inc
jecxz
outsl
stos
sbb
jmp
fadds
xchg
and
pop
lcall
fyl2xp1
out
lods
fwait
xlat
and
add
xchg
push
loopne
and
lods
adc
xor
ret
cmc
cmpsl
xchg
jbe
push
cwtl
nop
sub
dec
jne
jo
adc
repz
jge
insb
adc
push
push
pop
mov
xlat
ret
sub
xchg
in
add
mov
call
jne
inc
sbb
push
mov
dec
xor
imul
lret
fldenv
mov
adc
or
in
outsl
lea
lds
shll
ret
outsl
mov
loope
rcll
xor
ljmp
lret
xor
das
sub
pop
and
adc
xor
dec
fisttpl
cmc
and
sbb
and
jns
pop
jns
xor
xor
and
scas
mov
pop
add
or
cmp
mov
xchg
sub
jmp
xor
mov
aam
cmc
in
andl
daa
lods
xlat
push
mov
gs
xchg
lret
ret
dec
push
loope
call
adc
int
inc
notb
inc
mov
int3
scas
fsubl
add
hlt
cmp
cmp
shrb
push
and
pop
xchg
pop
mov
mov
js
leave
xor
stc
and
test
xor
xor
repnz
dec
and
xchg
add
jbe
pop
popa
xchg
xor
jae
inc
xchg
pop
ss
and
loopne
cmc
jle
and
mov
xchg
cmp
es
mov
loope
lret
rcrb
cltd
sbb
or
outsb
lahf
mov
jmp
mov
jb
movsl
or
cwtl
or
mov
and
sub
sbb
push
xor
imul
cmpsb
inc
stc
and
loopne
sbb
cmp
faddl
jbe
or
ss
or
inc
sahf
sbb
pop
mov
shrb
mov
sub
mov
movsl
sub
les
or
lret
fdivr
mov
mov
xlat
cwtl
insl
cmpsl
push
leave
std
or
int3
jmp
add
jb
pop
inc
testb
or
or
xor
or
addl
cmpsl
lret
dec
and
rclb
xchg
pop
cmc
xchg
pop
xor
cmc
mov
jmp
outsb
push
mov
inc
inc
and
mov
stc
mov
add
mov
test
bound
sbb
cmp
rcr
and
mov
mov
test
and
dec
je
faddl
sbb
lods
mov
or
xor
and
xor
mov
dec
subb
xorb
in
push
dec
popf
xor
xchg
sbb
jbe
stos
rclb
lret
shl
xorb
mov
jg
leave
je
not
aaa
add
pushf
das
int
mov
pop
rcll
pop
aad
iret
xchg
scas
dec
or
sub
icebp
inc
or
and
and
xchg
sub
into
or
sahf
out
or
dec
out
hlt
fs
mov
popf
bound
inc
test
jo
dec
jo
iret
push
push
dec
lcall
out
cwtl
xor
ss
mov
xor
xchg
divl
push
insb
outsb
sub
or
shll
mov
dec
sbb
dec
pop
sbb
fcmovne
mov
test
jo
mov
push
cmp
pop
bound
cmp
add
pop
cmc
inc
inc
icebp
imul
pusha
movsb
leave
xchg
pushw
jnp
std
mov
xchg
dec
pushf
mov
in
cmp
shl
stos
ret
js
popa
mov
dec
pop
imul
imul
mov
stc
dec
repz
loop
jg
sub
pop
aam
add
or
scas
jg
push
sbb
test
aam
shl
leave
sti
mov
int
jl
stos
pusha
dec
push
or
mov
push
and
inc
mov
mov
lcall
inc
inc
xchg
aam
xor
sub
pop
jno
mov
fmuls
cmp
in
mov
mov
sub
inc
stos
add
fwait
setg
inc
dec
enter
cmp
pop
push
aam
jp
mov
xchg
and
and
mov
jp
pop
clc
or
cwtl
push
jge
dec
or
pop
xor
lods
aad
lcall
jns
lret
rcrb
scas
ljmp
push
pop
dec
xchg
or
aas
add
xchg
movsl
cmp
stos
jae
sbb
lret
inc
mov
in
in
lahf
sub
push
ds
and
pop
popa
mov
mov
sbb
add
push
push
das
push
xor
and
mov
and
xchg
push
lds
and
xchg
sub
mov
out
aam
cli
push
sbb
int
loope
add
data16
cmp
or
out
adc
subl
push
jge
cwtl
ret
test
and
push
jecxz
mov
out
push
pushf
push
aas
shr
inc
jle
pop
movsl
push
and
clc
xor
cmpl
mov
xchg
inc
movsl
outsb
xchg
dec
bnd
push
pop
adc
sbb
insl
adc
add
mov
pusha
iret
push
push
inc
cltd
push
out
dec
mov
ret
sub
and
faddl
or
cwtl
push
mov
and
loope
xor
nop
xor
cmp
pop
loopne
repnz
inc
add
cwtl
test
data16
aad
stos
xchg
enter
data16
sub
push
out
or
fisttpl
inc
mov
and
push
ss
cmp
inc
daa
sbb
sbb
xchg
scas
mov
xor
pop
les
lods
insb
pop
jg
ret
mov
fimuls
add
cmp
scas
lret
std
mov
popf
add
fcomps
pop
das
bound
out
lahf
outsb
aaa
inc
outsl
lds
sub
inc
les
xor
sti
call
mov
jp
imul
sarb
loopne
ror
dec
ss
aas
mov
cmpsb
addr16
pop
push
push
mov
stos
js
mov
pop
sub
lahf
loop
cmpsl
and
mov
mov
xorl
cltd
sub
insb
negb
mov
xlat
ljmp
inc
sbb
mov
outsb
cmpsl
enter
lods
mov
cmp
jnp
test
pusha
shrl
push
mov
pop
pop
cmc
in
adc
cld
pop
sbb
int
das
push
lret
aam
add
frstor
add
shlb
adc
push
lods
in
dec
sbbl
shlb
dec
loop
sbb
idivb
outsb
mov
xchg
fsts
pop
or
mov
negl
stos
xchg
xchg
and
or
dec
out
mov
cld
jecxz
insl
cmp
mov
jne
adc
xor
pop
js
push
sub
aad
inc
dec
jge
call
xchg
mov
ds
mov
mov
mov
movsl
lock
cmp
add
ret
inc
mov
cld
jo
stc
test
mov
jae
pop
or
nop
adc
std
test
adc
pop
shl
xlat
push
dec
lods
int3
mov
in
push
ret
mov
pop
cmpsl
scas
push
inc
sub
jp
cmp
clc
add
add
mov
dec
sahf
das
mov
adc
adc
gs
sub
nop
push
xchg
js
pop
xor
jo
into
imul
es
loop
outsl
adc
loope
loopne
sub
dec
mov
and
sub
test
inc
and
inc
mov
js
add
jl
lds
aad
lock
xlat
mov
jg
cmp
loope
dec
movsl
mov
xor
shll
fistpll
in
bound
or
icebp
orl
negb
xchg
orl
jns
loope
push
xchg
es
insl
ss
scas
sbb
lods
pop
loop
aad
mov
std
sub
mov
or
adc
pop
scas
inc
cmp
add
sbb
adc
sbb
dec
popa
mov
sub
inc
pop
or
pop
movsl
es
aad
ss
cmpsl
pop
xchg
pop
lret
stos
and
mov
nop
ljmp
and
arpl
notb
mov
inc
sbbl
push
fcmovnu
stc
dec
cmpsl
mov
cmpl
mov
adc
mov
cwtl
pop
je
rcrb
lods
aam
push
sub
loop
xor
pusha
xlat
jne
adc
subl
mov
inc
aas
sbb
or
and
dec
xchg
enter
lahf
mov
cmp
xchg
adc
movsl
jg
xchg
pusha
scas
push
lahf
jecxz
and
mov
movsl
iret
and
in
sbb
lods
push
jmp
inc
mov
out
repnz
repnz
test
test
sbb
out
and
or
dec
sub
jg
repz
call
push
mov
shlb
jbe
cwtl
push
xchg
or
aad
push
imul
and
xchg
out
out
stos
push
xor
adc
sub
lret
adc
xchg
and
iret
ret
push
xor
movsb
adc
shrb
lds
fnstenv
repnz
dec
xchg
lret
mov
inc
in
test
loop
push
and
mov
or
mov
and
mov
mov
outsl
lret
addl
dec
lret
insl
and
add
add
mov
pop
fwait
call
out
stos
ret
mov
mov
xor
in
test
outsb
push
bound
imul
dec
inc
or
dec
jnp
lret
es
push
pop
adc
mov
rcr
fnstenv
stos
and
inc
out
jbe
xor
pop
inc
xor
push
mulb
xchg
loop
pushf
cmp
jae
inc
add
and
push
and
outsl
lret
pusha
ret
ja
cmpsb
xor
fs
fldl
sub
xorb
cmp
imul
sarb
cltd
scas
mov
pop
imul
inc
cltd
jnp
xor
mov
add
mov
iret
inc
imul
push
ficompl
arpl
out
and
fisttps
mov
les
sbb
jnp
pop
rorb
std
cli
or
and
sub
scas
pop
mov
call
ja
push
jo
and
xor
sub
ret
add
cs
stos
xor
rcrb
cld
sbb
stos
stc
jmp
pop
push
movsl
jle
inc
sti
out
mov
jne
push
lods
sub
test
movsl
pop
in
mov
lret
dec
ficomps
repnz
sar
cli
jp
fimuls
shrb
cmpsb
aam
clc
xchg
push
cmpl
clc
cli
icebp
les
push
sub
push
hlt
jecxz
icebp
andb
mov
dec
push
add
push
lret
cmpsb
pslld
mov
lret
and
pop
test
sahf
inc
test
or
mov
scas
loopne
adc
data16
shr
inc
out
sub
mov
cli
insl
cmpsb
fisubs
jae
and
lret
loop
cmp
mov
ja
mov
sbb
fucomp
push
dec
clc
mov
sbb
or
icebp
sub
adc
xchg
dec
cmp
sub
addb
jg
and
adc
add
sub
mov
out
mov
in
push
call
cmp
shr
das
push
loop
inc
in
lahf
out
lds
push
sbb
inc
inc
pop
dec
dec
jmp
inc
lea
mov
mov
js
pop
ret
jo
pop
movsb
ja
ljmp
pop
addb
push
fmuls
outsl
jae
sub
and
jno
mov
ss
fwait
xlat
fidivrl
icebp
fs
outsl
xchg
adcl
adc
dec
adc
fidivs
test
push
dec
leave
and
inc
stc
xor
and
or
add
jbe
mov
pushf
mov
shll
das
lahf
push
lds
push
cltd
mov
jg
fcomp
mov
pop
inc
flds
cmp
xor
lds
pop
test
movsl
add
adc
add
insb
shl
mov
mov
and
lret
adc
movsl
stc
fdivs
inc
jae
pop
sub
jmp
mov
jo
xchg
adc
add
xorl
dec
jne
pop
xor
xor
out
cmp
push
pop
push
push
mov
xorl
mov
add
mov
jecxz
jb
xchg
xor
lods
aaa
mov
scas
dec
inc
repz
rorb
and
cmpsb
pop
stos
in
push
push
aaa
aam
aaa
xlat
mov
lahf
push
clc
push
xor
ficompl
test
mov
ja
push
xor
movl
fisubl
daa
push
xchg
insl
mov
das
sub
add
mov
xchg
push
sbb
adc
jmp
xor
cmp
add
out
aad
cmpsl
xchg
into
repz
jbe
dec
ret
add
scas
popa
loop
mov
sbb
push
test
outsb
cwtl
ss
test
test
xor
ror
jecxz
cmpsb
pop
lret
test
in
dec
icebp
imul
fmull
mov
sub
sbb
mov
add
cmp
mov
cmp
cmp
sbb
xchg
xorb
add
ficompl
cwtl
xor
shlb
iret
test
xchg
mov
pop
adc
jle
dec
mov
mov
pusha
lcall
cli
dec
jg
fldt
xor
and
push
scas
jne
ds
mov
addr16
xor
loope
jmp
xchg
iret
test
mov
cltd
add
aaa
adc
or
repz
xchg
jnp
mov
aam
rcrb
gs
out
out
pop
adc
ss
add
cltd
xor
cmpsb
adc
fnstenv
test
les
mov
addl
xor
in
lret
pop
ss
sbb
sarl
mov
enter
push
mov
stos
rcrl
loopne
lcall
stos
fdecstp
push
adc
dec
cmp
lret
mov
fs
and
lds
pop
cli
add
mov
hlt
in
aam
xchg
mov
sub
shll
stc
sarb
andb
push
lcall
and
out
or
inc
pusha
leave
cmc
test
adc
popa
test
cmp
mov
mov
sub
nop
or
pop
jns
out
mov
push
dec
mov
pop
stc
jmp
cmp
inc
mov
push
out
cmc
sub
and
imul
scas
cli
and
pop
dec
xchg
xchg
je
shlb
fstl
push
pop
and
call
jne
and
hlt
setg
incl
jmp
mov
test
test
and
mov
test
data16
xchg
jecxz
or
insb
call
push
mov
rol
leave
cli
sbb
fs
out
shr
jl
nop
int
push
sarb
popa
scas
push
mov
and
bswap
adc
lock
fistpll
xor
mov
adcl
sar
pop
pop
xor
pop
push
dec
pop
dec
movsb
mov
cmp
xlat
push
loope
pop
test
push
pop
and
ljmp
jp
mov
cmpsl
or
cmp
fimull
mov
std
clc
roll
fildl
adcb
test
out
or
pop
adc
test
adc
out
adc
dec
add
movsl
aam
sub
loopne
nop
add
setg
jmp
and
pop
sahf
mov
gs
jae
faddp
lret
mov
adc
mov
jmp
sbb
int3
pop
pushf
in
push
std
xor
dec
pop
addb
mov
xchg
mov
pop
lds
inc
sarb
xor
jno
subl
int
jecxz
cwtl
fdivrp
loope
or
mov
sti
ret
add
push
mov
aas
cmp
daa
sbb
cmp
sub
das
frstor
push
and
adc
xchg
fisttpl
in
sub
repnz
push
shrb
xchg
cmp
adc
dec
mov
xchg
movsb
cmp
xor
cmp
iret
mov
pop
outsb
or
popa
xchg
inc
cltd
dec
in
jne
mov
push
xor
mov
fs
jg
mov
pop
ss
or
fidivrl
fdivrs
xchg
int3
lods
push
and
push
and
ret
imul
xor
mov
ds
xchg
nop
or
scas
sbb
cmp
arpl
mov
or
add
push
test
pop
scas
mov
adc
pop
scas
and
jb
xor
fstpl
xchg
test
lret
outsl
mov
aas
adc
mov
int3
jl
mov
mov
xor
test
mov
xchg
icebp
fldcw
jmp
pop
jns
outsb
loop
fisubs
lods
and
or
aaa
inc
leave
add
mov
dec
iret
lcall
stc
jno
jle
mov
cli
mov
inc
pop
push
add
je
adc
lods
in
pop
mov
jbe
jnp
jnp
cltd
jp
add
flds
icebp
imul
adc
call
push
outsl
int3
mov
test
mov
leave
in
daa
shl
jnp
sahf
push
push
out
mov
out
push
pop
mov
pop
les
inc
inc
in
jnp
loope
and
dec
in
out
dec
add
outsl
int
xchg
xchg
aas
mov
pop
and
in
xor
adc
in
mov
incl
sbb
cmp
or
mov
out
sahf
rorl
inc
fiadds
dec
ljmp
mov
mov
mov
push
adcl
ljmp
lea
iret
test
mov
sbb
adc
in
xchg
or
out
pop
bound
rolb
in
and
mov
mov
or
sti
and
mov
push
mov
inc
outsb
inc
aad
mov
pop
movsl
outsb
xor
and
add
mov
rorb
lods
pop
inc
mov
sub
sub
pop
sti
test
and
xchg
shlb
xabort
push
mov
add
shlb
push
push
fwait
pop
rcl
cwtl
dec
aaa
or
roll
imul
xchg
cld
leave
jno
xchg
das
jns
mov
xchg
mov
adc
push
out
mov
or
rcll
data16
in
rcl
mov
in
gs
pop
mov
rcrl
icebp
xchg
mov
add
in
jb
cli
mov
sbbb
cmp
add
popf
movsl
push
loop
rcrb
push
ret
cmpl
mov
sbb
mov
cltd
pop
das
jne
cmp
sbb
cmpl
adc
rol
sub
mov
lret
aam
sbbb
cmp
movsb
fs
leave
sbb
or
jge
sub
add
gs
lahf
or
sub
outsl
iret
and
or
jp
rcrb
mov
outsb
or
aas
data16
push
cmp
cmp
adc
and
roll
les
pop
xchg
sub
xabort
push
out
cmp
mov
jp
loop
pop
and
and
repnz
adc
test
das
sub
fidivs
aas
and
xchg
fnsave
sbb
aas
das
add
imul
enter
std
sub
jnp
add
mov
jmp
and
xchg
js,pt
sub
push
add
xchg
jne
mov
jecxz
adc
jne
add
push
roll
cs
mov
fldenv
dec
leave
push
pop
loop
outsl
cmpsl
repnz
test
xlat
xor
leave
sti
test
pop
or
adc
and
fwait
jge
test
push
mov
cltd
int
nop
jmp
sar
add
cmp
add
adc
rol
adc
icebp
in
pusha
mov
inc
std
lods
pushl
scas
insl
xor
mov
push
lds
andl
das
fwait
inc
inc
cmpsb
push
adc
jns
fs
jmp
xlat
cmp
cmc
adc
movsb
in
pop
mov
ret
cltd
mov
xchg
lahf
push
cmp
repz
mov
negl
jno
adc
std
jecxz
xchg
out
lret
push
icebp
adc
aam
stos
pop
mov
leave
xor
xchg
out
divb
imull
cltd
mov
fwait
cmp
or
jmp
shrl
xchg
ljmp
mov
fbstp
sbb
push
pop
mov
loope
fsubs
cwtl
adc
mov
repz
dec
and
or
call
lahf
ds
adc
dec
jle
mov
pushf
mov
xchg
push
movsl
fadds
push
lahf
pop
scas
add
fistps
daa
ja
push
das
movsb
inc
add
sub
pop
test
dec
jp
in
fcomip
xchg
lea
jae
in
ds
imul
fimull
inc
push
scas
stos
lds
and
lods
fadds
fstl
dec
sub
add
mov
mov
ja,pt
inc
mov
outsl
mov
lcall
iret
jmp
arpl
in
mov
into
adc
inc
fs
clc
pop
push
pop
shr
fmul
xchg
dec
xor
pushf
or
pop
sub
loopne
pop
dec
or
arpl
pushf
pop
cmpsl
ljmp
ljmp
lcall
and
inc
pusha
adc
push
jge
mov
sub
fdiv
imul
sub
add
ret
push
out
fwait
movsl
xchg
gs
pop
addl
ss
dec
jno
incl
into
aad
ljmp
nop
bound
add
pop
loopne
add
fwait
adc
inc
daa
cmc
or
out
push
sub
es
mov
negb
xchg
shlb
jno
enter
sbb
cmp
rcrb
jb
dec
ficoms
adc
hlt
mov
sub
sbb
xchg
xchg
pop
dec
mov
inc
das
clc
xchg
cmp
fldl
mov
fs
mov
add
adc
sub
sub
adc
mov
cmc
bound
inc
mov
pop
or
shlb
hlt
outsb
pop
jge
loope
push
or
pop
xchg
fwait
stos
out
lods
insb
inc
rcl
add
notb
jg
je
ja
cmp
pop
push
sahf
xor
add
outsl
pop
into
adcl
mov
jne
pop
sub
jbe
mov
pusha
jmp
mov
dec
negb
cwtl
mov
loope
negb
cmc
pop
xor
pop
mov
cmpsl
iret
mov
cwtl
pop
jg
sbb
mov
jmp
push
shr
mov
decl
dec
push
mov
dec
int
cmpsl
push
loope
mov
pusha
mov
hlt
cltd
insb
jne
stc
rorb
mov
popa
lods
cs
mov
pop
out
pop
pop
push
inc
sub
adc
stos
xchg
add
jae
icebp
pop
fdivs
popf
lds
mov
mov
aad
int3
dec
js
mov
test
clc
les
mov
arpl
es
je
or
sub
leave
fistpll
sbb
lcall
cmp
adc
cmpsb
hlt
add
dec
into
lods
pop
pop
mov
push
fwait
pop
inc
mov
fwait
dec
test
lock
test
fdivr
out
sbb
ja
pop
nop
fsubrl
dec
pop
into
sbb
shrl
dec
jle
orl
xor
stc
ret
xlat
pop
sbb
ljmp
es
jb
pop
push
mov
sbb
push
hlt
mov
push
pop
loop
inc
lock
into
sub
xor
fsubrs
insb
idivb
mov
repnz
outsl
mov
cmpsl
sub
cli
push
lcall
or
ret
mov
push
in
fs
lods
mov
mov
adc
or
sti
push
pop
and
push
dec
lea
sbb
sbbb
mov
push
push
sbb
sbb
dec
push
shrb
imul
sbb
sbb
dec
pop
stc
aas
jbe
shll
inc
inc
sahf
js
lds
sub
hlt
fwait
dec
addr16
mov
mov
push
cs
sbb
in
out
shr
fld1
cltd
in
insb
xchg
ds
shrl
ja
jecxz
je
sbb
push
aad
call
cmp
cld
add
or
jae
or
test
cwtl
push
cli
or
out
push
lret
faddl
push
sbbb
inc
fsubl
mov
mov
lahf
mov
shl
mov
cmpsb
pop
fcoms
test
rcrl
int
out
dec
mov
fstpl
sbb
bound
punpckhdq
or
add
in
inc
lock
js
inc
or
cmp
jne
push
orb
in
pop
test
fnstcw
push
lret
cmp
add
popa
fmulp
hlt
lret
pop
inc
das
nop
shll
into
hlt
push
ds
aad
sbb
mov
out
xchg
rcll
sbb
xor
push
mov
out
mov
mov
insl
stc
je
fisttpl
sub
cmp
mov
in
lret
je
iret
mov
jb
pop
or
movsb
dec
pushf
dec
sub
lock
mov
out
aaa
lret
push
xchg
stc
fs
aam
cmpsb
lret
cmpsb
fdivl
xchg
push
dec
sahf
pusha
xlat
inc
cmp
loope
mov
push
add
fwait
push
mov
inc
test
fdiv
mov
mulb
jle
scas
jge
cmpsl
cmpsb
sti
arpl
pop
fisttps
fs
push
shlb
add
cmp
std
fdivrp
dec
jp
enter
ljmp
and
pusha
push
repnz
out
rorl
in
lret
mov
outsl
mov
push
inc
dec
mov
movsl
dec
into
sbb
loopne
ljmp
jns
dec
xor
add
ds
mov
lock
sahf
pop
push
adc
popa
scas
arpl
dec
iret
je
xlat
sbb
inc
fs
sub
mov
pop
test
mov
out
add
adc
and
out
push
sub
fistpl
push
ret
rcrl
in
jbe
fdivrs
or
pop
ja
bound
shlb
cmc
stos
test
out
mov
lret
mov
int3
xor
and
out
scas
pusha
push
aad
push
jne
push
enter
sub
out
in
cmp
cmp
rcrl
ljmp
adc
inc
pop
call
mov
xchg
xor
sub
fdivrp
mov
ljmp
push
inc
push
adc
or
cli
xor
mov
lock
mov
cmp
xabort
mov
es
loope
jno
dec
out
into
jnp
mov
sub
icebp
mov
pushf
or
adc
outsb
dec
aam
pop
ja
mov
pop
mov
cmp
sub
loope
mov
fisubrs
mov
aas
inc
outsl
ja
push
sti
sbb
jb
and
mov
pop
xchg
nop
arpl
rcr
ret
sub
jae
and
dec
test
sahf
cmc
push
movsb
sub
int
enter
jg
pop
cmp
inc
xchg
out
and
dec
mov
xor
inc
xor
fsubs
ja
cli
imul
mulb
dec
hlt
sub
leave
int3
sbb
jp
lock
push
mov
xchg
mov
popf
push
sti
std
in
and
stos
mov
jmp
and
popf
push
roll
cltd
loop
jne
jae
mov
adcb
xchg
cmp
push
add
and
pop
leave
lea
sbb
inc
icebp
scas
into
pusha
cvtpi2ps
mov
enter
adc
int3
mov
in
jecxz
repz
mov
inc
add
mov
mov
adc
int
push
xchg
mov
icebp
push
lds
add
fldt
mov
inc
out
das
sub
neg
arpl
push
fdivr
add
add
cwtl
sub
lret
ja
lea
mov
fsubs
add
iret
aam
sbb
in
mov
insb
xor
pop
gs
sti
cli
js
xchg
push
sub
mov
js
adc
mov
inc
nop
sub
and
xchg
push
jg
aam
add
sbb
inc
insl
push
mov
cltd
adc
frstor
scas
andl
pop
fdivrs
mov
inc
and
lea
push
push
mov
outsl
stos
sti
jb
out
cmpsl
jb
dec
push
mov
jb
adcl
hlt
mov
mov
cmp
mov
ror
add
aam
loopne
mov
cltd
mov
xchg
sbb
movsb
jns
mov
cwtl
push
cmp
scas
ret
adc
add
iret
xchg
jl
popf
sub
inc
cmpsb
adcl
sub
mov
sbb
xchg
cs
lret
out
out
jecxz
cmpsb
mov
and
push
and
cld
sahf
popf
flds
push
mov
inc
loopne
cmpsl
sbb
sub
adc
lret
xchg
sti
in
jg
push
and
cmpsb
mov
mov
or
jno
cmpsb
dec
and
jl
mov
fstpl
mov
or
outsl
inc
xor
mov
mov
xchg
mov
ds
pop
fdivl
or
sbb
aam
in
enter
lds
test
aam
pusha
jg
cld
mov
mov
mov
stos
jge
mov
inc
mov
or
rcll
stc
cmp
in
sub
xlat
out
dec
and
jno
ljmp
cwtl
xchg
test
sbb
lsl
pop
dec
jl
jae
sub
cwtl
stos
repnz
ud0
sub
inc
ret
pusha
outsb
rorl
jmp
add
repnz
cs
cmp
aas
mov
adc
sahf
dec
cmp
sbb
dec
xchg
lods
cltd
cmpb
lret
sbb
sub
inc
sbb
or
int
shl
rcrl
push
push
fsubr
jne
inc
mov
aad
pop
insb
jae
mov
mov
insb
iret
jbe
lret
adc
pop
out
mov
clc
ret
xor
jns
xor
std
into
outsb
push
test
adcb
subl
adcl
cmp
lcall
push
or
mov
push
popf
xchg
cmp
xor
jg
push
rcll
ficompl
mov
aas
insl
pop
fucomi
and
fs
pop
andl
and
aas
xor
movsb
lds
incb
jae
movsl
add
clc
xlat
cmp
mov
dec
adc
mov
in
add
aaa
or
jae
xor
push
inc
gs
or
push
or
mov
std
mov
inc
dec
sub
push
mov
out
adc
mov
inc
stos
cmp
lss
out
jnp
ret
outsl
dec
mov
sbb
in
adc
and
sbb
imul
pop
jl
pop
std
jbe
dec
fwait
xchg
out
andb
xor
cmp
jmp
scas
push
jecxz
sub
repz
cli
shll
push
dec
insb
and
push
sbb
jg
sahf
and
mov
inc
stos
dec
into
int3
mov
mov
dec
aad
sub
mov
mov
std
add
movsl
sbb
mov
into
dec
mov
sti
lret
pop
inc
in
add
sbb
repnz
sub
in
xchg
clc
xchg
loope
inc
push
ret
push
daa
in
push
adc
cmp
or
aad
ffreep
insb
ljmp
popf
sub
inc
mov
imul
scas
mov
sbb
mov
lea
jg
hlt
push
add
scas
bound
je
js
xor
dec
cltd
rcrl
cmp
or
int3
mov
in
mov
ror
fidivs
sbb
shr
les
movsl
enter
sbb
jnp
pop
push
push
push
add
scas
dec
mov
fs
push
test
loope,pt
pusha
push
dec
fldl
lock
or
pop
push
fcmovbe
repnz
es
mov
xlat
sub
int3
enter
in
mov
popf
pop
dec
cmpb
pop
out
stos
cmpb
fwait
shr
sub
add
test
xchg
bound
mov
clc
or
xor
cld
mov
icebp
loopne
push
pop
or
and
inc
shll
cmc
stos
sub
push
cmp
add
cmp
jle
loopne
ret
sti
dec
dec
lret
aad
or
push
popf
repnz
mov
out
insb
les
pop
mulb
out
test
cwtl
cmc
stc
dec
pop
xor
dec
dec
incl
mov
insb
aas
mov
shlb
je
cmp
out
adc
pop
sub
xor
insl
jmp
lret
or
dec
fs
cli
dec
bound
mov
inc
dec
push
and
cmc
xchg
or
fidivrl
imul
inc
cmp
mov
pop
icebp
rcrb
iret
push
lods
xchg
or
ret
xor
or
cli
sub
lock
fstp
dec
push
dec
mov
dec
mov
das
jg
mov
fnsetpm(287
ljmp
sbb
and
shlb
adc
sub
lea
jae
in
and
imul
mov
add
adc
mov
in
inc
ja
lods
gs
pop
sbbb
xorl
aaa
push
gs
ljmp
loope
mov
mov
outsb
pop
arpl
xor
inc
sar
mov
popf
xchg
xor
andb
idivb
sub
jbe
lret
in
sbb
test
movsb
jne
mov
xor
loopne
jbe
in
jns
pop
fistps
test
pop
stc
push
mov
xor
cltd
dec
adc
dec
jl
or
and
imull
mov
jl
dec
or
mov
andnps
and
int
sub
inc
jne
xchg
or
shrl
cmp
xor
xchg
fisttpl
pop
jnp
and
fistps
pop
test
add
adc
dec
pop
data16
xchg
mov
sbb
adc
push
pop
cmp
ljmp
add
mov
sahf
adc
imul
enter
shrb
and
fdivl
xor
stos
dec
and
pop
xchg
out
rol
sbb
fbld
in
sbb
push
or
add
insb
cmp
test
out
and
movsb
pop
repnz
jg
add
rcr
mov
bound
dec
arpl
ficompl
scas
sbb
xor
cmp
mov
lods
cmc
jl
jne
imul
dec
or
in
fimull
cmp
adc
stos
xor
add
sbb
in
incl
popf
inc
out
in
push
cmpl
es
xchg
imul
fst
cmp
jmp
add
mov
sbb
sbb
mov
out
sbb
fs
xor
pop
pop
jp
push
or
xchg
dec
jmp
in
pop
mov
adc
iret
subb
in
inc
push
outsb
pop
in
int
and
movsl
cmp
and
leave
sub
sbb
lahf
sub
jo
sub
mov
daa
js
pusha
and
lcall
or
pop
popa
sbb
hlt
in
sub
mov
aad
test
lods
setle
mov
dec
xor
jp
mov
adc
cmc
mov
filds
inc
cmpb
sub
jbe
inc
sub
fdiv
jmp
mov
add
adc
xor
add
or
pop
push
out
lahf
xor
adc
push
pop
or
sbb
orb
lret
in
jae
adc
dec
dec
xlat
or
xchg
inc
mov
arpl
adc
adc
ds
jbe
pop
mov
or
xor
jne
push
and
cmp
fcmovnbe
push
scas
dec
cmpsb
xlat
insb
push
add
lds
loope
pop
test
mov
sarl
in
cmpsl
xor
dec
mov
pop
cmpsb
jg
jo
addr16
ret
jns
xor
scas
stos
mov
ja
jbe
push
mov
aad
shll
pop
fbstp
lods
pop
iret
in
imul
xor
and
pop
jmp
inc
cmp
jge
pusha
xchg
jae
cmp
xor
out
xor
jge
jecxz
xchg
push
pop
pop
or
std
xchg
adc
xchg
xchg
sub
xchg
pop
inc
or
leave
pop
push
popa
fnstsw
jmp
nop
rolb
or
fnstsw
sub
gs
add
mov
fsts
pushf
push
fnstcw
mov
pop
xor
mov
push
dec
dec
xchg
arpl
pop
pop
xchg
or
les
enter
ret
jge
push
lret
mov
leave
mov
inc
bound
xor
fnsetpm(287
addr16
pop
pushl
dec
or
dec
cmp
out
inc
cwtl
cld
dec
and
adc
mov
adc
lcall
mov
inc
mov
cwtl
pop
add
dec
mov
xchg
loopne
in
sub
addr16
mov
mov
lret
add
sbb
cmp
inc
repz
out
nop
inc
xor
xchg
push
ret
repz
cmp
test
in
jae
push
icebp
sbb
test
enter
pop
pop
dec
sbb
add
adc
sub
push
xor
out
cmp
nop
je
xchg
xchg
adc
xor
sub
cs
lea
or
cltd
sbb
xchg
mov
add
loope
push
call
sbb
ja
push
add
aaa
scas
mov
rorl
iret
je
xchg
ret
ret
popf
inc
cmp
rcrb
jmp
jbe
enter
jbe
mov
inc
pop
out
jl
in
sub
js
dec
jl
inc
jg
push
xchg
cltd
add
jl
into
pop
jl
or
inc
sub
cmpsl
inc
pop
not
lret
jl
pop
sub
data16
jne
jne
mov
lcall
cmp
jb
imul
pusha
jo
cltd
pop
movsb
sub
fcomps
adc
xor
fs
or
dec
mov
fwait
or
xor
jne
pop
mov
mov
je
sbb
mov
and
daa
cmp
in
iret
add
sub
fldl
in
daa
imul
mov
push
mulps
ljmp
imul
xor
pop
jnp
dec
insb
add
pop
jle
movsb
aaa
cmp
mov
insl
push
fdivrs
pop
adc
mov
push
mov
xor
xchg
movsb
dec
xchg
add
or
xor
and
test
jno
das
ss
lcall
pushw
adc
leave
dec
int3
in
and
std
or
shl
imul
aam
rclb
sbb
sbbl
dec
push
mov
pop
cmpsl
fldcw
cmp
and
dec
in
ljmp
push
test
shll
adc
out
mov
add
lea
stos
xchg
adc
jae
out
lret
mov
jle
ja
rcll
cwtl
sub
insb
push
lock
inc
adc
insl
mov
mov
iret
decl
sbb
cld
xchg
lods
inc
push
in
mulb
adc
repz
pop
mov
or
test
das
insb
test
push
pusha
mov
pushf
push
dec
rolb
or
inc
xor
rorb
mov
mov
xor
lods
inc
mov
sub
pop
add
nop
dec
xlat
scas
push
lret
addb
insb
cmp
inc
js
mov
mov
shrb
cmp
push
ja
stos
addb
pop
adc
lock
rcll
cs
xor
jle
jnp
test
push
repz
or
push
and
xchg
outsb
add
and
testb
call
std
cmp
iret
outsb
mov
cli
dec
enter
clc
ret
sbb
mov
adc
faddp
jnp
jne
jmp
mov
xchg
les
outsl
add
fdivrs
xor
or
adc
popa
pop
jbe
adc
or
movsl
or
inc
and
cmc
aaa
inc
inc
aaa
loop
cwtl
outsl
sbb
xchg
dec
jns
test
jb
lcall
ficoms
ret
loopne
xor
adc
mov
mov
addl
pop
outsb
ret
mov
popf
push
bound
xchg
insl
cmp
xchg
jb
and
outsb
out
cmp
cli
cmc
test
push
lock
jge
pushf
cmp
stos
pop
lock
enter
mov
xlat
inc
sbb
jmp
imul
dec
xchg
mov
fisubs
push
mov
jnp
sbb
mov
dec
pop
aam
cmp
lcall
in
mov
mov
pusha
pop
outsb
jne
dec
mov
loop
jge
add
xlat
subb
or
daa
push
cmp
fists
mov
mov
mov
mov
lret
bound
aam
and
dec
outsb
add
mov
call
aaa
xchg
lds
inc
les
sub
xchg
test
adc
loope
fisubrs
push
pop
mov
fsubr
shll
mov
lock
cmpsb
cmp
fs
and
push
jns
icebp
lods
or
mov
add
cmpsb
xor
and
dec
movsl
loopne
xor
fistps
inc
jnp
daa
mov
repnz
cld
popa
pop
push
notb
je
add
js
mov
shrl
push
push
scas
push
mov
fadds
jns
jb
adcb
fsubl
or
mov
xchg
dec
jg
fistps
fsin
mov
les
dec
mov
jae
mov
pop
ds
or
adc
out
mov
out
adc
pop
data16
jge
idivl
lret
inc
sbb
adc
out
and
mov
inc
cmc
jmp
sbb
andb
scas
push
jp
pusha
jp
and
lcall
daa
and
adc
in
pop
push
inc
inc
stos
ljmp
fsubr
shll
and
or
dec
pop
mov
mov
adc
out
pushf
pop
push
lcall
js
in
jbe
push
lods
dec
push
enter
jno
test
push
and
je
lds
cmp
rcll
mov
cli
popf
lret
push
shll
lods
call
icebp
icebp
fisubrs
lahf
xchg
not
into
notb
mov
pop
xlat
push
mov
bound
arpl
add
call
cmp
xchg
call
jbe
mov
sbb
fidivl
xchg
stos
stos
outsl
add
hlt
sbb
hlt
adc
iret
imul
sub
subb
gs
inc
bound
subl
or
jae
in
aad
jmp
sbb
push
int
imul
pop
mov
outsl
xchg
mov
in
js,pt
mov
in
pop
xchg
cmc
fwait
mov
outsl
xor
mov
enter
inc
push
jl
mov
bound
cmpsb
or
mov
xchg
add
cld
mov
cmpsb
mov
divl
cmp
loop
outsl
push
popa
iret
xor
inc
xchg
sbb
jne
inc
addr16
mov
clc
mov
sti
mov
jl
mov
pushl
xor
lea
mov
daa
cmc
cli
sbb
xchg
push
and
call
jge
xor
mov
and
jge
outsb
aas
push
mov
into
not
jle
ret
push
sbb
xor
push
xchg
sub
rorl
lahf
mov
int
lahf
in
sarl
mov
sahf
add
add
test
xorl
in
test
in
jl
ljmp
mov
data16
scas
js
into
jnp
adc
stos
es
call
adc
das
imul
cmp
mov
xchg
adc
inc
mov
jle
ds
loope
push
insl
mov
pop
addr16
fldenv
inc
pop
xor
adc
repz
shl
ljmp
mov
sbb
mov
shrl
adc
shll
mov
mov
out
jl,pn
xlat
or
je
jbe
ret
sub
adc
es
jns
outsl
test
ret
adc
mov
insb
cmpb
push
mov
jnp
jnp
inc
cli
inc
out
jns
cs
movsl
mov
jb
or
fst
jg
je
xor
or
aaa
out
mov
cmp
or
sbb
sbb
lcall
nop
lods
ret
xchg
mov
mov
mov
and
inc
dec
scas
xchg
mov
divl
jecxz
cmp
stc
mov
fildl
ret
cmpsb
movsb
jb
xor
push
add
fstl
inc
cmp
and
lret
pop
pusha
mov
mov
rclb
ret
fcmovnu
aaa
int
jmp
aaa
push
or
jl
add
inc
stc
jbe
push
in
imul
cmp
push
outsb
mov
sbbl
pusha
and
das
loop
mov
out
cmp
sub
out
jnp
cltd
mov
and
mov
leave
mov
gs
adc
dec
xor
test
mov
or
inc
push
jne
jns
inc
shll
into
jecxz
movsb
pop
mov
lods
mov
push
and
adc
sbb
cmpsl
lahf
mov
pusha
push
stos
push
pop
nop
in
fs
sbb
xchg
or
jmp
jle
int
jecxz
or
pop
jnp
flds
cmpsl
pop
bound
je
addr16
sub
jno
data16
aam
std
in
rolb
shlb
stos
cmc
hlt
xchg
add
jmp
cmp
in
jp
das
lock
cmpsl
mov
inc
mov
cli
xchg
inc
jae
pop
adc
and
cld
inc
ret
sbb
or
cmp
lock
call
enter
int3
addr16
add
push
movsl
adcb
loop
mov
add
ljmp
cmpsb
pusha
loop
adc
into
fcoml
in
inc
xor
rcll
inc
cli
ret
adc
mov
xor
pop
shlb
subb
sub
jnp
pop
xchg
inc
repnz
adc
stos
fs
inc
mov
add
rcll
mov
and
cmp
sub
out
pop
aad
mov
push
hlt
cmp
inc
adc
hlt
mov
add
adc
aam
push
call
aaa
pop
xor
int
sbb
or
cwtl
shll
sbb
adc
mull
cmp
sti
pop
ret
mov
scas
ljmp
lock
xchg
mov
aas
imul
stos
insb
fsubl
cmpb
daa
xor
lods
jo
ja
sbb
iret
fs
push
in
mov
push
push
shrb
adc
mov
popa
aaa
sarb
or
add
xchg
rorl
adc
sbb
fs
dec
ds
pop
enter
and
movups
shr
cmp
data16
fdivs
rcrb
sbb
jo
push
xor
adc
sub
xor
adc
cmp
mov
add
xchg
repz
in
xor
or
xlat
inc
push
mov
add
fimull
and
shl
pop
pop
push
andl
inc
movsb
cli
aam
test
jmp
jp
push
rclb
in
mov
inc
divb
mov
imul
adc
out
enter
pop
jae
test
inc
push
push
cmpsb
arpl
mov
dec
inc
push
popf
xchg
outsl
add
mov
sbb
loope
dec
out
repz
xchg
ds
dec
cld
in
decb
cld
hlt
xor
fsubl
ljmp
jp
or
add
cmp
jae
outsl
sub
repz
leave
mov
in
inc
test
xchg
sbb
fidivrs
xchg
or
mov
dec
sbb
sti
and
cmp
jl
xchg
inc
mov
xchg
shrl
imul
pushf
cmp
out
mov
xorl
rcrl
xchg
jp
push
lods
lds
shlb
xor
sub
cwtl
jl
mov
mov
movsb
fbld
adc
adc
mov
push
in
add
lret
or
mov
pop
add
adc
and
inc
jmp
jl
leave
and
add
mov
sub
stos
dec
daa
cs
add
lea
pop
mov
jge
cltd
das
fldt
xor
stos
push
sti
jae
std
xchg
pop
div
jle
sub
xchg
fsubp
ror
fsubs
xchg
sbb
cli
sbb
lret
sti
mov
orl
outsl
fiadds
je
pop
lock
cwtl
xchg
aad
pop
icebp
sbb
add
xchg
lods
push
dec
lret
cwtl
xchg
add
aas
arpl
aaa
jl
cmp
lods
repz
test
and
jge
data16
mov
jae
arpl
outsl
jmp
lret
fsubrl
and
mov
leave
xor
jp
aaa
cmp
cs
insb
enter
xor
or
cmpsl
xor
fucomp
mov
sahf
stos
cli
cmp
divb
push
cmp
mov
cmp
cmp
xchg
push
xchg
or
pop
movsb
adc
cmp
les
loopne
push
aaa
std
pop
pop
cs
pop
add
fcos
inc
inc
in
xlat
jne
inc
test
sahf
out
lcall
leave
and
aad
jne
push
test
cmp
sub
xor
movsb
pop
fimull
inc
push
add
xchg
inc
lahf
jp
lea
adc
inc
mov
and
push
adc
xlat
stos
aad
test
inc
jbe
emms
fs
adc
leave
pushf
fimuls
pop
fcoml
addr16
sub
arpl
in
jb
sti
es
insb
xchg
xchg
pop
daa
repnz
fwait
jp
xchg
test
push
out
inc
xor
sbb
hlt
sub
scas
sub
sti
dec
lahf
shlb
xor
incl
pop
rol
jecxz
movsb
lret
popa
icebp
lret
jb
lret
jnp
sub
insl
clc
jmp
cmp
into
loope
mov
and
sarl
js
adc
push
ret
mov
hlt
shrb
push
mov
push
ljmp
mov
inc
insl
sti
push
sbb
movq
movsl
cmp
lea
adcl
inc
adc
fistpll
movsl
fisttpll
imul
or
arpl
cmp
mov
cmp
pop
xor
hlt
xor
xchg
push
sbb
inc
sti
cmp
aad
aad
cwtl
arpl
mov
push
pop
movsl
push
and
loop
xchg
clc
push
das
sbb
imull
rol
sub
or
dec
mov
call
or
pop
pushf
fsubrp
aaa
inc
cwtl
out
cmp
sbb
sub
stos
loop
push
test
mov
lea
int
in
push
popf
and
or
cli
mov
fs
gs
push
mov
mov
cmp
test
in
dec
jg
dec
add
iret
mov
aad
and
mov
movsb
sti
add
xor
fisubl
mov
push
nop
adc
das
cmp
push
shlb
sub
arpl
pop
loop
xchg
outsl
adc
or
push
repz
inc
mov
jb
mov
in
fdivrl
cs
pop
scas
sahf
mov
in
outsl
sub
adc
imul
cli
lea
fildll
loopne
jg
or
mov
popa
dec
insb
xchg
xchg
enter
shr
adc
test
movsl
and
mov
pop
mov
out
adc
mov
fs
enter
sbb
mov
xchg
lods
or
shll
sub
xchg
jl
out
outsb
lods
sub
dec
scas
mov
les
pop
fnstsw
pop
sub
lahf
test
imul
add
mov
push
add
push
out
rcll
mov
shll
aam
lcall
push
imul
adc
push
inc
xorl
jnp
fldcw
sub
cwtl
out
test
adc
adc
sbb
xchg
jg
test
imul
and
xor
xchg
setbe
push
ret
xchg
mov
int
pop
mov
addr16
fistl
cmc
cmp
stos
adcb
in
push
in
pusha
jle
out
mov
lds
sbb
pop
enter
mov
jns
push
mov
push
add
jb
jmp
nop
cmp
or
pop
movsb
jmp
add
jbe
sub
nop
dec
test
arpl
cmpsl
movl
loope
repz
scas
lret
jne
jne
adc
sahf
xor
bound
and
pop
adc
mov
dec
sbb
push
fldcw
jge
sub
jecxz
test
xchg
cltd
inc
mov
pop
pop
fdivl
xor
repz
shrb
pop
push
aas
adc
push
inc
iret
loop
roll
adc
jmp
inc
and
sbb
jnp
or
and
das
lret
test
mov
and
sub
addr16
jge
stc
insb
es
in
xchg
or
in
xlat
bound
aaa
adc
fdivrs
shrl
mov
hlt
add
aaa
mov
lods
and
pop
aas
sbb
mov
jecxz
into
inc
lds
xor
mov
add
mov
idiv
sbb
ret
mov
mov
pop
mov
jnp
ficoml
dec
rcl
lcall
mov
sbb
rcl
arpl
push
dec
fstps
fwait
jno
cltd
jl
jo
dec
sahf
mov
or
mov
fstpl
loop
sbb
and
xor
cs
test
inc
loop
les
addr16
das
mov
jo
pop
fildl
mov
mov
stos
loop
imul
js
push
lds
cmpsl
xchg
dec
jae
rol
fstl
xchg
lock
out
lret
mov
divb
dec
addr16
xor
lret
cmp
inc
push
mov
pushf
das
inc
loopne
adc
inc
aas
or
sub
bound
mov
aam
dec
popa
xor
push
daa
cwtl
orb
dec
xor
inc
mov
es
sbb
sbb
or
notl
and
shlb
int3
popf
mov
and
test
xor
mov
pop
push
std
loope
adc
imul
into
gs
movsl
xor
xor
cmp
lods
mov
jg
cmp
jmp
sub
aam
mov
scas
subb
ja
xor
or
cmc
lahf
mov
pop
cld
test
scas
arpl
mov
xor
jg
and
jb
es
xor
add
pop
nop
stos
cmp
mov
arpl
xor
xor
jecxz
andl
mov
ja
dec
icebp
fisubrs
xchg
xlat
jnp
jnp
stos
mov
mov
mul
dec
pusha
cltd
push
mov
pop
cmc
out
inc
and
sahf
cmp
xor
inc
sub
jg
mov
nop
shll
fs
jo
hlt
cmp
sar
popf
js
push
xor
adc
fidivs
repz
sub
addr16
out
lods
xchg
cltd
shll
scas
push
int
xor
xchg
popa
test
jecxz
xor
imul
fistpll
jnp
daa
sub
enter
and
cli
dec
add
stc
int3
inc
push
imul
or
dec
outsb
or
push
scas
fidivs
sbb
lret
push
loope
mov
or
and
push
push
cmpsl
jl
insl
popa
inc
test
push
mov
je
push
sbb
out
sahf
dec
cmp
adc
sub
push
inc
sbb
mov
lods
adc
and
das
imul
jle
xchg
xchg
mov
lea
out
fldcw
int3
rcll
lods
popa
fwait
leave
insl
add
imul
xor
sub
adc
mov
xchg
xchg
mov
into
push
sub
mov
cmp
clc
adcl
adcb
xchg
int3
xor
add
enter
gs
js
ja
or
sbb
add
lods
lods
cmpsb
dec
jns
scas
out
add
nop
pop
or
cltd
adc
in
pop
pop
jmp
insb
lret
push
xchg
push
dec
jnp
mov
lock
adcl
sti
mov
mov
cmpsb
orl
and
enter
jl
popf
cmp
loopne
pop
insb
adc
cmp
andb
and
sub
loopne
mov
cmp
leave
repz
ret
add
cwtl
jne
xor
bswap
shr
loop
jnp
lods
sbb
fcompl
pop
jae
mov
dec
loop
ja
sbb
addr16
fidivs
test
je
mov
mov
dec
mov
sarb
popa
dec
pushf
aas
pop
loope
rclb
test
cmp
xor
in
dec
in
mov
fwait
mov
sbb
in
das
fs
insl
sahf
xor
mov
fwait
xchg
sti
scas
mov
adc
xchg
call
in
pop
inc
push
cmpsb
iret
xchg
jbe
push
inc
jle
mov
push
and
test
xchg
xchg
adc
pop
or
push
lods
push
pusha
adc
cmp
sbb
pop
mov
push
push
in
mov
mov
inc
push
cmc
and
xchg
pop
not
lea
mov
iret
inc
outsl
loop
subb
adc
and
push
push
dec
inc
add
or
out
mov
push
jno
dec
rclb
jae
mov
mov
movsb
out
sbb
enter
hlt
xor
repz
jmp
or
xchg
jno
jns
out
inc
jmp
push
pop
push
cmp
mov
adc
pop
pop
jmp
jbe
clc
es
ret
mov
shlb
mov
mov
adc
lret
mov
lock
stos
sbb
fisttps
rclb
mov
push
clc
and
mov
out
mov
mov
pop
pop
cs
fists
inc
clc
push
and
lret
repz
insb
mov
jbe
add
mov
lods
cmc
or
dec
push
mov
or
lret
nop
loope
push
ret
xchg
cmpsb
pop
add
and
outsl
shr
inc
test
hlt
cmp
test
dec
call
div
mov
push
fisubrl
and
mov
adc
nop
xchg
dec
mov
gs
jecxz
adc
fidivs
pop
outsl
shll
inc
adc
stos
loopne
hlt
pusha
jle
js
sbb
cltd
dec
stos
add
not
jg
mov
jo
cmp
popa
or
lahf
push
insl
pop
loop
cmp
hlt
or
fistps
int3
outsb
mov
push
mov
mov
std
adc
imul
pop
mov
inc
lea
xor
mov
lds
stc
cmp
mov
xor
mov
mov
or
outsb
clc
cli
arpl
adc
mov
test
xchg
lea
and
sub
neg
mov
adc
stc
dec
adc
pop
data16
inc
insb
cwtl
xchg
jecxz
jns
pop
gs
mov
ja
addl
shrl
jno
and
xchg
mov
add
and
dec
xor
in
or
xchg
and
je
sub
pop
out
push
in
jmp
and
and
xchg
and
aad
cwtl
aaa
xor
sub
aas
imull
cs
sub
rorb
sbb
xor
cwtl
ds
adc
call
das
stos
and
orb
out
push
xor
aad
jge
imul
ds
insb
ret
enter
outsl
mov
add
out
jns
arpl
sub
mov
les
sbb
mov
fiadds
icebp
insl
mov
pop
in
cmp
dec
rcll
in
cmpsl
sbb
sbbb
jp
add
mov
adc
xor
inc
xchg
jbe
xor
shll
add
mov
flds
sbb
int
rclb
das
aam
shrl
xor
xchg
shrb
iret
jno
test
sar
push
imul
lcall
stos
cmpl
mov
bound
push
mov
pop
pop
icebp
ss
jo
mov
mov
int
push
mov
jg
add
sbb
sbb
dec
fdivrp
push
cmp
or
outsb
push
xchg
dec
adc
and
lods
jmp
mov
push
cwtl
jnp
mov
enter
mov
add
nop
testb
mov
push
in
cltd
mov
andb
or
loop
pop
dec
pushl
clc
lock
ret
xchg
pushf
lret
xor
imul
jae
push
fincstp
stc
sub
lea
enter
pop
aam
jl
or
xchg
adc
lret
xchg
in
pop
scas
add
mov
mov
ret
mov
pop
roll
mov
ds
test
js
rcrl
jno
xchg
mov
sub
sub
stc
movsl
out
idivl
std
lret
fwait
dec
js
clc
xor
xor
mov
mov
data16
adc
pop
mov
xchg
pop
pushf
pop
inc
add
pusha
xor
popa
jge
add
mov
xor
int
push
jl
shlb
lea
mov
rcrb
xor
push
seta
jb
push
push
je
sbb
and
xor
outsl
sub
cmp
xchg
test
scas
ror
cwtl
shll
xchg
add
mov
xor
mov
jb
jle
cwtl
pop
pop
pop
lea
cmp
add
mov
scas
aam
cmpsb
jecxz
sbb
xor
and
int3
je
xor
lds
inc
test
into
mov
ds
and
lcall
jg
mov
rclb
in
mov
and
in
popa
lcall
negb
pop
cmp
sub
or
lret
adc
ret
test
addr16
movsb
mov
or
sar
pop
fdivs
inc
mov
cmpsl
sbb
inc
cld
loopne
test
enter
pop
add
mov
dec
sub
adc
inc
fcoml
cmp
xchg
pushf
jnp
mov
rolb
lods
test
repnz
pusha
mov
loop
daa
jo
mov
fabs
cmp
mov
loop
sub
jns
out
cmp
test
sbb
mov
jns
xchg
std
sbb
sbb
rcl
lock
or
enter
iret
and
cmp
fs
lea
ret
sbb
cli
and
sbb
mov
aaa
xor
dec
stos
fidivl
data16
mov
mov
sti
add
leave
lret
sbb
stos
call
inc
push
sbb
lahf
push
lds
xchg
les
jno
pop
sub
push
sbb
jl
nop
dec
and
sti
push
fstp
lods
aad
ficoml
mov
test
cmp
mov
mov
dec
xchg
add
xchg
loopne
mov
and
dec
xor
lock
pop
sub
mov
loope
inc
fldl
mov
cmp
lahf
or
sub
mov
test
jbe
and
loope
jl
ds
inc
sbb
xchg
testl
xor
cmpsb
arpl
dec
std
xchg
or
mov
push
mov
aad
imul
imul
cltd
clc
iret
push
dec
mov
stc
xchg
stos
sbb
test
sbb
cmp
inc
cmp
mov
test
sbb
ret
add
pop
adc
daa
inc
das
sbb
cmp
xchg
cmp
sbb
mov
lock
xchg
xor
fistps
decl
rclb
sarl
cmpsb
stos
mov
xchg
out
fldenv
and
mov
mov
adc
popf
xchg
insb
js
in
jb
movsl
jp
popf
gs
sahf
inc
inc
jmp
mov
mov
adcb
test
cmp
repnz
gs
bound
push
jmp
jno
mov
and
sbb
cltd
push
cmp
sti
aad
js
mov
or
mov
cltd
cld
xor
xchg
xlat
int
jge
xor
or
sbb
jmp
and
dec
pushl
push
dec
int
les
inc
cwtl
or
jp
rclb
lahf
mov
cs
mov
cmp
outsl
push
stos
or
and
or
xor
push
jge
mov
mov
adc
or
insl
xchg
je
fs
aas
and
sub
add
or
mov
pop
repz
mov
bnd
xor
into
and
xor
jle
or
sub
dec
xor
mov
clc
adc
mov
out
sbb
sub
inc
pop
in
mov
mov
jb
lret
push
adc
ss
adc
inc
adc
ljmp
andl
and
test
push
mov
int
scas
pop
xchg
popa
in
and
arpl
jnp
repz
out
mov
clc
aas
mov
pop
push
test
data16
add
xor
mov
ret
movsl
sub
outsb
add
scas
dec
outsl
add
push
add
jne
xor
mov
sahf
push
xchg
xchg
xor
movsl
aam
and
xchg
rolb
ret
sub
mov
popf
scas
adc
aas
outsb
add
pushf
sub
lea
adc
xor
pop
and
lock
push
lcall
imul
outsl
mov
xlat
or
fcomps
inc
iret
xlat
fnstenv
movsb
sub
ss
mov
in
lret
nop
xchg
rorb
cs
jmp
mov
outsl
pushf
cltd
leave
cmp
in
sub
xlat
clc
mov
pusha
mov
nop
movsl
mov
sahf
sahf
lcall
pop
call
jg
mov
movsl
ljmp
std
mov
outsl
and
cmc
jmp
fcmovne
mov
call
jno
fwait
mov
shr
pop
js
sarb
pop
sbb
enter
cltd
push
sbb
cmp
jo
fidivl
or
scas
dec
dec
fnstcw
or
int3
push
outsb
lods
stos
scas
fisttpl
sbb
push
inc
ss
sub
sti
les
xlat
lods
add
sbb
sbb
jne
push
dec
imul
insl
mov
jge
jge
jne
ljmp
mov
std
cs
sbb
pop
cmpsb
fstl
fwait
jmp
test
push
movsl
std
mov
imul
or
xchg
mov
jmp
icebp
cmc
mov
mov
pop
mov
fdivrs
cmp
arpl
es
sbb
jns
fwait
shlb
movsb
daa
ljmp
sub
test
inc
adc
scas
nop
int
fistpll
jo
xchg
pop
dec
jb
push
cmp
data16
cmp
int
in
inc
das
loopne
arpl
lea
sub
mov
mull
adc
ret
cmpsb
nop
adc
pusha
pop
aam
repz
out
pop
pop
or
push
mov
and
cli
frstor
sahf
addr16
add
jae
std
sbb
enter
mov
mov
pop
nop
xchg
jl
pusha
jae
out
loope
int3
movsbl
xchg
lea
aas
xchg
mov
fucomip
addb
stos
xchg
pop
add
or
dec
in
jo
add
sub
xchg
test
shlb
jecxz
xchg
jmp
cmp
ret
jl
out
push
pushf
add
ffreep
sbb
mov
sub
sahf
push
mov
pop
adc
fdivs
mov
leave
sbb
push
xor
pop
decl
roll
lods
shrb
xor
mov
cmp
cmp
sbb
lret
or
xchg
push
mov
pop
in
inc
pop
adc
inc
mov
call
imul
cwtl
mov
inc
xlat
loop
and
ljmp
in
mov
sub
cmc
leave
or
jecxz
mov
cmpl
ret
cwtl
jnp
les
push
xor
mov
mov
xor
leave
iret
cld
into
int
adc
enter
mov
jno
lods
dec
xchg
push
mov
loope
outsb
in
pop
adc
xchg
dec
and
clc
scas
sti
push
and
aas
pop
adc
push
xchg
xor
jp
insl
pop
dec
and
imull
lods
dec
scas
jo
sub
xchg
fstl
mov
push
inc
out
lret
mov
mov
stos
rcrb
inc
into
mov
sub
in
push
repz
scas
cmp
fdivrl
pop
ret
lret
or
cmpsl
daa
mov
in
test
lods
push
xchg
mov
repnz
jns
pop
subl
and
pop
dec
push
in
mov
cmp
pop
out
sti
shll
call
cmpsb
sub
push
cmp
jbe
mulb
arpl
dec
call
and
xor
push
int
cs
ret
adc
lcall
jbe
jns
fadd
out
sbb
lcall
lahf
stos
lret
push
mov
add
shrl
dec
fdivs
jnp
clc
and
mov
sub
int
scas
add
popf
xor
cs
repz
inc
mov
push
push
push
ljmp
loope
pusha
jno
sub
scas
pushf
call
js
jmp
int
call
ror
lcall
adc
mov
das
imul
or
xor
inc
nop
mov
movsb
into
and
mov
aad
scas
mov
das
xchg
cmp
nop
imul
jno
mov
dec
das
pop
mulb
push
into
xor
xchg
mov
das
jmp
and
cmp
push
jbe
into
and
fcoml
es
and
popa
inc
out
xlat
xchg
cmp
cltd
out
lret
mov
sbb
mov
pop
clc
int3
adc
mov
add
rep
cltd
clc
cmpsl
loop
or
and
xlat
sbb
jge
incl
cmp
data16
dec
out
lds
push
ficomps
stos
add
xchg
add
jno
cmpsl
mov
js
out
outsb
mov
ror
mov
sub
jns
arpl
pusha
jecxz
movsb
sub
in
outsb
data16
repz
lahf
or
xor
movsb
cmp
lods
push
mov
sub
fstps
push
ja
inc
dec
pushl
int3
orps
loope
mov
pop
push
pusha
pop
jecxz
mov
sub
cmp
mov
jle
arpl
mov
push
movsl
out
insl
imul
mov
imulb
dec
es
out
cmp
pop
sbb
inc
jg
inc
ljmp
lcall
pop
nop
adc
mov
push
ret
aas
dec
stos
push
mov
push
dec
xor
dec
adc
out
sbb
stc
inc
out
sbb
mov
inc
jg
jg
pushf
push
clc
cmp
mov
cmp
adc
loop
stc
add
mov
es
sub
mov
cwtl
mov
or
je
pop
shl
sub
push
jle
adc
cli
dec
sub
dec
pop
in
pusha
push
add
jp
jb
lea
or
je
lret
dec
lret
jecxz
or
loope
fxch
ja
jae
out
or
push
shll
aam
inc
cld
mov
jns
or
xchg
mov
icebp
jmp
jecxz
dec
cmp
cld
xchg
outsb
je
sahf
or
fs
xor
outsb
mov
ja
or
push
add
lcall
mov
push
pop
adcl
push
scas
pop
mov
dec
and
hlt
decb
lds
insl
pop
add
sti
sbb
jnp
enter
or
shrl
jno
pop
lds
clc
or
bound
xchg
xor
mov
fcompl
push
pop
ds
repnz
aas
xor
cmpsl
mov
movsl
shl
mov
insb
imul
pop
test
fs
dec
shrl
fcomps
jecxz
hlt
cmp
ja
out
ret
lods
push
jns
sbbb
pop
scas
popa
in
pshufw
mov
push
in
lahf
mov
push
or
jbe
cmp
test
andb
cmp
mov
sbb
sbb
inc
mov
repnz
and
or
sub
or
sub
adc
or
out
in
or
or
lock
or
adc
cmp
mov
jl
xor
lods
outsb
jb
jecxz
or
pusha
xchg
clc
and
stos
xor
inc
adc
mov
mov
jecxz
pop
lock
xchg
das
nop
aas
pop
adc
mov
xchg
rcll
ret
dec
adc
mov
idivl
fwait
cmpl
int
dec
fcompp
imul
hlt
or
mov
cld
jne
test
mov
dec
jl
jnp
out
xchg
push
mov
data16
lods
xchg
test
and
bound
mov
adc
out
cli
inc
inc
xchg
movsb
rcl
or
jno
mov
icebp
dec
out
pop
dec
xor
pop
mov
test
mov
hlt
mov
out
fwait
or
cmpsl
aam
dec
sub
cmp
pop
es
cmp
xor
stos
leave
test
sub
xchg
xchg
add
pop
in
and
push
out
fcoml
adc
lahf
sbb
cmc
mov
jbe
mov
cli
mov
xchg
jg
adc
rcrb
mov
push
inc
xor
or
jge
mov
mov
and
stos
mov
inc
mov
push
inc
stc
mov
mov
stos
int3
scas
aad
push
insl
mov
repz
out
pop
add
les
lds
in
inc
inc
sbb
sub
jmp
xchg
push
mov
test
sub
es
mov
lds
cmp
ret
std
adc
pop
cmc
inc
jp
fstl
fdivrl
adc
rcl
loopne
pusha
mov
popf
add
int
gs
call
inc
mov
cmp
lea
outsl
popf
outsb
pop
lods
add
push
sub
push
mov
mov
test
rcrl
mov
cmp
mov
popf
add
loop
ja
jno
out
push
es
mov
jle
inc
out
clc
int3
fcmovu
jbe
nop
adc
jns
in
jge
pop
xchg
arpl
cmp
outsl
and
aam
rol
movd
lcall
mov
dec
push
and
insl
lret
std
mov
out
mov
mov
jmp
shl
mov
sti
jge
cmp
jne
sbb
inc
xor
imul
nop
mov
movsl
gs
dec
add
fcmovbe
std
sahf
fdivl
test
clc
aas
jmp
int3
ja
pushf
rclb
sub
cwtl
push
in
xlat
pop
add
xchg
xor
or
mov
imul
pop
lret
push
mov
push
and
out
cmc
xchg
ror
nop
adc
out
loop
mov
mov
fldenv
lret
push
loop
pop
sbb
repz
test
leave
clc
adc
dec
pushf
push
ret
testl
stos
inc
push
cmpsb
je
jb
out
pop
xor
xlat
test
ret
scas
push
fstps
aad
sarl
xchg
negl
fidivrl
test
inc
fstps
jo
fsts
pop
and
cmp
clc
loope
mov
stc
loopne
loopne
add
fwait
nop
xchg
xchg
push
cmp
test
adc
aam
rorb
cmp
mov
sbb
and
mov
jg
scas
pop
neg
jnp
hlt
arpl
out
test
cmc
push
mov
imul
cmpsb
or
jge
and
sub
into
dec
jbe
push
and
dec
and
xchg
das
cmpsb
mov
pop
repz
sbb
add
add
push
push
inc
std
aam
test
jecxz
addr16
adc
ja
push
dec
or
cmc
mov
sbb
cmpsl
adc
or
push
xchg
ret
jl
cmp
mov
pop
push
pop
int3
jae
negl
push
in
xchg
pop
jle
mov
mov
dec
movsl
jne
jo
jbe
fiadds
pop
push
rol
rol
xchg
mov
loopne
int3
dec
cmp
hlt
out
mov
movsl
or
ss
aad
enter
xor
jb
mov
push
push
daa
insl
fwait
sahf
dec
aam
fwait
push
jg
or
adc
test
daa
xchg
xchg
sbb
cmova
daa
jbe
push
jg
xor
addr16
adc
mov
jno
in
mov
sbb
in
dec
std
pop
in
arpl
jnp
sub
sub
inc
cs
rcrl
cmp
pop
inc
inc
sarl
pop
lods
enter
stos
pushf
mov
pop
mov
ljmp
ret
addr16
xchg
jle
shrl
push
push
pop
jae
aas
sbb
sbb
rcr
jns
pop
into
xchg
sub
pop
mov
outsb
adc
xor
popf
fdivl
push
out
fldt
mov
mov
sub
push
pop
call
mov
repnz
pop
or
mov
push
push
cli
xchg
movsl
dec
movsb
sbb
xchg
dec
and
pop
dec
outsb
je
ficompl
and
sbb
mov
mov
hlt
and
sub
dec
cmc
shr
add
in
out
lahf
filds
lds
push
adc
lret
loopne
xor
sbb
jbe
push
dec
sar
lret
pop
pushf
out
lret
cli
jmp
jmp
jmp
movsl
insl
hlt
repnz
and
or
sbb
xchg
jl
add
xchg
stos
push
cmc
and
test
ja
pushf
fmulp
arpl
pop
xlat
imulb
inc
daa
icebp
jg
sbb
out
mul
fwait
les
cmc
fdivs
push
xlat
jno
jo
pop
push
std
add
mov
mov
sarb
inc
cmp
sub
adc
sbb
or
leave
arpl
in
or
bswap
xlat
adc
adc
mov
mov
cmp
and
stos
jbe
dec
insb
loope
sub
inc
fstps
lret
jno
or
lods
test
dec
sub
push
sbb
ljmp
or
lret
sub
xor
sti
sub
imul
out
insl
mov
test
jno
inc
mov
insl
dec
jne
mov
mov
push
lcall
out
jp
inc
insl
inc
push
push
pusha
pop
jnp
adc
movsb
fildl
and
ffreep
adc
cs
pushf
addr16
ljmp
ficoms
ja
and
sbb
mov
daa
sahf
jmp
dec
lret
jns
push
push
pop
in
cmp
loopne
xchg
inc
pop
lods
pop
inc
jge
cmc
std
push
inc
ret
fildll
movsl
scas
aas
jnp
stc
out
out
mov
cs
push
orb
icebp
mov
in
popf
hlt
or
mov
lods
xchg
rcrl
fs
jmp
mov
cmp
into
aam
ds
fstl
rorl
mov
xchg
mov
cmpsb
ret
mov
pop
xlat
jae
mov
gs
or
repnz
push
add
add
arpl
imul
int
pop
push
cli
pop
sbb
cs
adcb
push
aam
bound
dec
fistpl
out
inc
inc
dec
xchg
dec
loop
lock
adc
gs
aad
loop
sbb
push
int3
sahf
sbb
test
or
fists
out
xorl
xchg
sbb
pop
or
idivb
in
fcompl
xchg
pop
test
xor
mov
lcall
or
inc
jo
mov
popf
mov
outsl
test
sbb
xchg
add
mov
ret
cmp
sbb
push
push
mov
lcall
inc
lahf
insb
xchg
or
jne
xchg
popa
outsl
out
dec
pop
jl
xor
lds
xchg
and
aam
scas
and
or
test
push
jmp
jmp
push
pop
out
add
pop
scas
push
mov
fidivrl
xlat
cs
xchg
sbb
clc
add
sbb
add
and
aaa
packuswb
leave
xor
in
ret
js
lahf
std
mov
nop
ja
xlat
fstpl
pushw
pusha
dec
jne
mov
nop
cld
push
arpl
cmc
mov
pop
shlb
sahf
mov
ljmp
gs
aaa
ja
stc
jo
fldcw
pop
jge
and
out
inc
ret
repz
pop
xchg
cld
in
clc
push
repz
inc
add
stos
pop
xchg
cmpsl
xor
imul
inc
ret
ret
adc
and
mov
cmpsb
ror
mov
or
mov
cltd
fadd
pop
sub
xor
stc
xchg
mov
aas
in
jecxz
outsl
ds
fbld
sbb
out
arpl
aas
mov
jae
sub
sbb
or
jne
mov
pop
push
jo
push
movl
hlt
sarb
inc
pop
or
mov
fnsave
mov
pop
pop
cmp
repz
loop
pop
loop
clc
mov
cmpb
popa
in
loope
jns
mov
jg
and
cwtl
jp
mov
mov
ja
and
inc
push
movsb
lods
add
xchg
or
cmc
dec
stc
xor
xchg
xchg
shlb
push
lcall
dec
adc
adc
lods
jl
inc
jno
sbb
mov
scas
sub
stos
dec
subb
mov
xor
cmp
loop
push
cli
dec
cmp
xorb
inc
jbe
dec
jbe
imul
mov
aam
sub
addl
cld
cmp
adc
mov
mov
jb
cmp
bound
cmp
pushf
test
les
dec
push
fstpl
fistl
pusha
jns
aam
pop
daa
out
stc
adc
imul
mov
jns
xlat
push
jnp
and
fs
leave
dec
cli
aaa
mov
out
in
lret
sbb
popa
jecxz
les
cmpl
mov
mov
in
icebp
jno
sbb
in
pop
adc
in
lret
insb
test
cmpsl
add
push
in
add
cmp
xchg
in
push
or
test
lods
cmp
das
cmpsb
and
lock
mov
xor
inc
pop
outsb
push
mov
clc
cmp
loope
fldenv
movsl
pop
mov
scas
arpl
into
push
push
sbb
hlt
testl
popa
or
inc
push
jmp
fsubl
jg
fsubrp
mov
lcall
les
pop
sbb
loop
xchg
aaa
dec
push
adc
das
and
push
dec
popf
cmc
cli
or
adc
popf
sti
dec
jp
mov
cmp
es
not
mov
aad
mov
or
aam
push
es
loop
bound
push
push
push
data16
mov
and
imul
mov
adc
jbe
xchg
adc
leave
dec
cmp
mov
add
xor
cmpsl
icebp
sar
int3
dec
pop
inc
push
mov
out
lock
popf
subb
shll
inc
out
and
mov
pop
xor
cmc
loop
add
pushf
cld
pop
scas
push
rcrb
sub
jmp
cmp
aad
pop
nop
cmp
inc
dec
xor
int
xchg
sahf
xchg
jp
orb
and
sbb
test
enter
dec
push
sub
out
dec
cmp
into
cmp
cmpsb
fwait
jle
xor
mov
sahf
popa
stos
push
sbbl
out
cmpsb
shll
insl
xor
mov
push
stc
fstl
je
and
cs
pop
xor
pop
ja
rcrb
mov
xchg
cmp
addr16
jp
dec
in
cmp
jnp
into
inc
mov
clc
lcall
push
shll
dec
mov
sbb
push
inc
jo
and
sub
stc
fcompl
popf
rclb
rcrb
lea
pop
in
push
jg
sub
aaa
neg
adc
xchg
aam
cmp
popf
push
dec
mov
test
sbb
mov
or
jle
push
cmp
mov
je
dec
enter
sbb
and
sar
loope
sarb
out
add
fisubrs
out
aaa
inc
mov
scas
adc
or
std
xchg
pop
xchg
enter
fidivrl
mov
adc
gs
pop
test
ss
mov
iret
adc
call
mov
cmpsb
pop
orl
dec
arpl
xchg
das
and
jge
movsb
xor
add
outsb
lret
xchg
cmpl
bound
pop
push
and
test
iret
pop
sbb
nop
loopne
test
nop
out
fisttpl
jp
sub
mov
cmc
arpl
scas
add
addl
mov
mov
outsl
shl
cli
fwait
jmp
nop
mov
cmpsb
sti
mov
push
adc
ret
add
jmp
push
das
mov
xchg
add
imul
pop
jbe
sbb
jno
shr
into
push
dec
divb
loopne
aaa
push
stos
subb
lds
xor
xchg
orb
push
outsl
push
inc
or
stos
pop
mov
addb
loop
ds
icebp
and
insl
mov
lea
jecxz
inc
or
mov
stos
dec
fwait
push
mov
not
loope
rcrb
test
lock
push
jbe
rclb
jge
ja
cmc
and
divps
flds
stos
in
cld
inc
incb
in
and
mov
jnp
mov
aad
inc
into
shll
jp
sbbl
int3
cld
mov
xor
mov
fisubrl
pop
cli
sub
leave
pop
mov
dec
aam
inc
and
lock
dec
cmp
mov
adc
inc
loopne
add
mov
in
push
or
adc
lock
push
es
jle
repz
mov
prefetch
or
jp
jbe
mov
cmp
or
adc
stos
xchg
and
imul
mov
cmp
dec
stos
in
pop
inc
pop
jg
scas
ljmp
jo
pop
mov
pop
lret
inc
sahf
xchg
cs
add
addr16
xlat
addr16
mov
fs
sbb
ret
inc
loop
xchg
pop
jno
lds
aaa
jnp
cli
pop
push
cmpsl
xchg
mov
mov
ret
cltd
mov
jmp
dec
sbb
xchg
xor
sbb
cmp
insl
xchg
push
or
insl
dec
mov
arpl
in
push
and
cmp
mov
movsb
mov
into
and
fs
outsb
es
lret
addl
push
push
inc
das
stc
imul
cmp
sub
inc
jo
int
int
nop
es
jno
in
bound
das
sbb
sbb
push
mov
insl
addr16
add
scas
pop
pop
mov
push
mov
mov
in
aaa
jge
loop
inc
or
xchg
mov
lcall
lods
push
sub
cmp
call
xchg
push
mov
sub
pop
sbb
and
popf
add
push
inc
lahf
sub
push
inc
adc
pop
mov
jmp
popf
lds
pop
add
insl
cltd
insb
dec
mov
xor
pop
or
aam
push
cmp
jl
sub
andb
push
sar
stc
fcomp
cmpsb
mov
daa
fwait
dec
add
push
adc
jg
cmp
pop
outsb
pop
cmovne
cld
es
adc
mov
loopne
xor
mov
cld
xor
pop
jb
outsb
xlat
pop
inc
outsb
lahf
mov
repnz
mov
fiaddl
mov
inc
ret
mov
ja
sub
popa
std
push
and
or
rolb
or
push
add
imulb
mov
inc
pop
jne
and
inc
mov
jge
dec
mov
mov
mov
jns
aam
adc
mov
iret
call
lock
pop
std
sub
stos
les
or
add
cmpsb
adc
test
jne
xchg
sub
xchg
dec
in
fcomip
and
or
sub
or
test
or
ficomps
mov
mov
jg
adc
les
xchg
sub
repnz
cmpsl
sub
mov
xchg
cmpsb
sbb
sub
push
je
mov
out
pop
outsl
ret
nop
sti
xchg
int3
mov
jmp
inc
pop
mov
mov
xchg
lds
scas
cmc
pop
ss
sub
xchg
pop
or
mov
notl
insl
js
xchg
dec
pop
aam
lock
rclb
xchg
bound
pop
inc
add
cltd
adc
adc
dec
pop
lods
add
inc
sbb
push
add
insb
dec
jb
cltd
push
push
and
cltd
sub
adc
stos
rcrl
in
cmpsb
fnstenv
add
out
fxch
jbe
into
inc
sub
jmp
addl
imul
sub
jbe
fistl
jmp
mov
cmp
fimull
repz
inc
mov
imul
hlt
sub
mov
das
cmp
and
sbb
mov
jle
jmp
push
imul
dec
pop
jbe
jb
mov
cmp
push
jle
push
ret
out
sub
mov
out
push
mov
or
pop
outsl
rcrl
mov
loope
sbb
out
adc
aaa
or
into
pop
pop
dec
outsb
lret
stos
ja
mov
int
mov
shlb
add
ds
inc
int
fmul
mov
aas
push
pop
cmp
jno
mov
mov
movsb
mov
lods
mov
sbb
xchg
insb
xlat
mov
xchg
or
sub
imul
mov
enter
mov
filds
nop
pushf
pop
xor
mov
push
sahf
jl
fsubs
xchg
cmp
or
push
roll
sbb
iret
aam
aad
jo
or
push
cwtl
enter
sub
xchg
inc
mov
lods
ficomps
xor
mov
xchg
in
push
in
inc
out
or
sbb
cmp
enter
jl
data16
iret
cld
push
negl
notb
add
push
push
cmp
jmp
push
test
fcomi
add
call
adc
dec
inc
push
es
xchg
stc
jecxz
or
cmp
push
rcrl
loope
lods
mov
add
mov
stc
sbb
add
in
dec
mov
loop
mov
outsl
gs
jbe
add
push
iret
inc
add
jne
outsl
aam
shrb
dec
testl
push
fdivl
push
in
pop
mov
mov
in
pop
mov
xchg
mov
icebp
test
jle
dec
jge
cmpl
push
jmp
jo
out
sbb
sub
aad
test
fwait
push
inc
or
add
jmp
int
jmp
sub
pusha
subb
inc
into
les
xor
js
mov
push
cmp
out
adc
sub
push
xor
lcall
iret
cs
mov
fisubl
les
sub
xchg
stos
testb
in
adc
mov
lret
xor
mov
add
xor
cld
pusha
xchg
lret
icebp
xchg
scas
sbb
pop
or
mov
sti
insb
cmpb
shrl
test
dec
push
jle
sub
sbb
or
iret
imul
push
dec
dec
ljmp
pop
in
test
cwtl
xor
cmp
loop
es
std
clc
shrb
xchg
mov
push
xor
or
push
leave
popa
cmp
pop
loope
fsubrl
hlt
mov
mov
scas
dec
test
out
xchg
inc
ret
out
or
dec
pop
test
dec
in
inc
cli
fisubrs
add
pop
xorb
jge
mov
sub
fimull
stos
pop
clc
ljmp
mov
addb
jl
pop
xchg
adc
adc
cld
mov
lock
xchg
push
into
inc
mov
into
xchg
pop
adc
pop
push
dec
lods
int3
xchg
pushf
add
arpl
or
cmc
mov
stos
es
daa
or
push
dec
movsb
adc
ljmp
inc
aam
and
leave
or
lret
mov
mov
mov
jl
cld
pushf
ja
push
mov
ja
dec
pop
out
out
inc
jne
pop
sub
jno
lds
jnp
dec
push
iret
stos
push
or
test
int3
lods
push
scas
sub
insb
xor
jno
mov
sbb
fdivs
xchg
xor
or
repz
sarb
xor
popw
jecxz
les
enter
movsb
lods
clc
sahf
mov
mov
mov
dec
jge
dec
dec
fdivrl
pop
leave
loop
fsubs
rcl
jge
or
mov
xor
lea
jg
xlat
or
fisttps
out
add
adc
fsts
jl
jmp
mov
out
mov
test
cltd
mov
lcall
dec
dec
push
pop
add
mov
inc
cmp
and
gs
push
out
mov
sbb
jp
in
or
jnp
mov
push
inc
test
sbb
and
dec
push
inc
ret
or
xor
ficoml
xchg
test
sbb
rclb
pushf
mov
repnz
ljmp
push
pop
push
cmp
pop
xorl
xchg
hlt
jge
test
aas
fs
mov
ss
test
dec
std
xor
cld
sub
fs
out
sbb
jb
repnz
sub
jbe
pop
mov
lock
mov
jge
or
xor
push
add
adc
or
or
push
mov
stos
or
pop
ret
fnsave
idivb
dec
into
mov
xor
or
adc
sbb
lock
movsl
daa
clc
push
loope
fwait
inc
and
dec
sti
mov
or
sbb
add
in
aaa
jns
popa
and
jl
bound
inc
dec
aam
data16
mov
arpl
inc
or
and
cld
pop
call
stc
pushf
push
mov
out
addr16
mov
inc
movsb
cld
lahf
pop
pop
dec
adc
pop
loope
sbb
mov
int3
pop
sub
mov
iret
in
dec
out
loopne
jae
stc
xchg
fbld
xor
pushf
cld
dec
push
out
icebp
fldcw
lods
inc
fdivrs
dec
jnp
in
js
inc
mov
inc
shlb
test
push
fdivrl
repnz
out
xchg
or
add
push
or
xor
sub
iret
popf
iret
test
insl
jns
add
adc
mov
mov
int3
sbb
sbb
clc
mov
lods
push
test
jp
lahf
nop
xlat
outsb
lret
mov
push
mov
daa
inc
and
inc
aas
mov
dec
push
cmp
xor
add
mov
xor
pop
rorb
add
out
fdivrl
pop
subl
xchg
jmp
fdivrs
mov
dec
gs
sbb
pop
xor
scas
ja
lret
and
into
xchg
xor
subb
push
stc
and
mov
pop
add
out
popa
pop
fsubl
lahf
dec
lahf
scas
dec
cmp
loope
mov
pop
pop
xchg
ss
int
or
push
pusha
shl
test
mov
jge
jl
inc
arpl
inc
and
sub
mov
dec
and
adc
mov
pop
dec
mov
mov
lret
cmp
test
clc
lahf
mov
clc
jmp
fs
leave
add
inc
xor
and
hlt
add
mov
aam
push
out
hlt
lcall
fistps
mov
les
jbe
push
test
adcl
das
scas
mov
inc
push
pop
pop
jnp
or
mov
stc
shl
inc
inc
scas
mov
pop
sbb
mov
and
leave
ljmp
mov
jmp
push
cmp
cld
push
nop
cli
sbb
dec
loopne
xchg
or
jge
sub
ljmp
sub
sub
jns
test
test
or
sbb
pop
shrl
and
jb
mov
or
pop
idivl
mov
movb
push
pop
enter
stos
lock
xchg
test
call
data16
jle
add
mov
mov
outsl
arpl
idivb
loope
pop
rcl
xchg
cs
adc
add
cmpsb
and
or
loop
repnz
mov
pop
add
andnps
xor
sti
js
scas
add
std
cmp
daa
jmp
inc
stos
pop
and
cmpsb
dec
inc
insb
rolb
icebp
xchg
ds
ret
add
pop
out
sbb
push
das
std
arpl
sub
xor
pop
jae
push
pop
fimuls
xchg
cmpsl
in
enter
movb
xchg
and
pop
outsl
lcall
inc
mov
pop
test
sbb
xchg
aam
ss
xor
pop
movsb
cmpsl
shrb
pop
sbb
sub
lcall
aaa
xor
imul
cli
pop
popf
xchg
ljmp
sbb
sbb
push
push
mov
sub
aas
add
movsl
push
and
mov
fcomip
pushf
loope
sbb
pop
sbb
push
xchg
mov
cmpb
int3
shrb
stos
loopne
xor
je
in
dec
lea
mov
cli
cmpsb
adc
sarl
and
loopne
jle
lea
xchg
xchg
outsl
fcompl
mov
push
mov
or
pop
mov
mov
stos
fidivrs
mull
sbb
sub
movsb
and
fstpt
hlt
cmpsb
sbb
test
lock
sti
push
loope
bound
int
out
lret
ja
adc
out
push
imul
xchg
dec
jo
inc
push
pop
mov
push
push
int
scas
test
lahf
mov
xor
pop
std
jmp
stos
cmp
push
push
sbb
push
xor
pusha
fdivp
xchg
popf
cmp
mov
iret
pop
mov
fists
test
lret
stos
nop
outsb
andl
jbe
aas
lds
jbe
xchg
sub
lahf
xchg
adc
pusha
pop
jle
addl
sti
out
sbb
in
push
lret
rcrl
cmc
stc
dec
jnp
jle
dec
adc
loope
popf
dec
lds
xor
in
and
mov
sbb
and
ds
sub
fldcw
out
popa
jl
call
jno
jbe
imul
rorb
mov
xor
xlat
shll
insb
sub
add
aam
rcl
mov
jb
imul
and
mov
add
mov
imul
sbb
add
mov
inc
js
movsb
push
scas
inc
add
dec
cmpl
std
les
inc
xor
popf
int
jno
and
mov
lret
dec
and
adc
sub
pop
cmp
mov
cmpsl
sbb
not
sbb
xchg
rcrl
cli
lds
or
stc
cmc
and
popf
or
testb
xchg
ret
jbe
mov
pop
lret
mov
lcall
scas
pushf
shrb
dec
icebp
mov
rclb
dec
cmp
dec
xor
jne
sbb
out
test
pusha
and
jl
movsb
xor
pop
notb
jo
sub
push
cmp
call
xchg
jg
enter
rolb
test
je
dec
ljmp
add
repz
xor
dec
out
xor
push
int
lds
inc
aaa
xor
jecxz
jne
scas
ret
push
jmp
lret
inc
add
cmpb
or
loop
jne
inc
pop
mov
cmp
xchg
or
insb
cmp
aam
test
fidivrs
xorb
lcall
ret
movb
out
mov
xchg
cmp
pop
jo
jno
popf
xchg
dec
cmp
push
test
dec
xor
test
mov
insl
mov
scas
sub
xchg
outsw
pop
sahf
jle
decl
inc
test
int3
or
fdivs
and
fidivrs
out
idiv
sbb
das
mov
adc
loopne
cmc
xor
adc
enter
mov
sahf
sahf
std
divb
adc
pop
stos
inc
fistl
ds
pop
xor
not
mov
sbb
and
std
dec
fbstp
push
repnz
pop
mov
sbb
fwait
mov
loopne
shlb
pop
dec
stc
push
aam
mov
lods
xrelease
hlt
aaa
jnp
and
mov
xchg
iret
sub
jl
in
xor
leave
scas
pop
clc
pop
pop
jmp
xchg
push
insl
fstps
ljmp
sahf
fcmovbe
mov
cmpsb
jle
mov
enter
test
or
xchg
aaa
lret
sar
psrad
cmp
daa
cltd
xchg
mov
push
movsl
repz
fwait
out
xor
lds
and
aam
stos
mov
or
xchg
cmp
das
lds
iret
xor
xchg
add
popf
sahf
mov
loope
movsb
and
insb
mov
addb
imul
cmp
adc
inc
icebp
cltd
fsub
sarl
scas
jne
andb
popa
and
mov
mov
fcoml
lock
out
dec
shl
jg
mov
popa
adc
and
repnz
in
cwtl
pop
pop
mov
cmp
xor
repnz
fnsave
sub
test
repz
jnp
popf
xchg
ljmp
cli
jmp
fnstcw
es
dec
mov
add
mov
mov
adc
pop
mov
stc
int
cld
test
cmc
push
lret
xchg
pushf
pusha
inc
test
push
lret
mov
data16
jo
test
ficoml
int3
nop
mov
jmp
fidivrs
push
test
je
aaa
cmp
cs
lret
pop
in
fiadds
push
push
insb
push
and
or
movsl
cmp
ficoml
pop
test
push
sbb
push
adc
xor
mov
pop
mov
jnp
lahf
pop
jne
out
scas
jge
push
mov
enter
push
add
jmp
scas
scas
jno
jp
or
ljmp
pop
or
dec
aaa
add
hlt
xor
ret
fdivl
xlat
fwait
push
out
gs
xchg
pop
pavgb
insl
fistpl
stc
jl
cmp
pushf
xchg
sub
mov
jne
hlt
push
rclb
in
fld
mov
lret
sub
mov
or
mov
sbb
add
jmp
scas
and
mov
lret
pop
pop
out
sbb
shrl
bound
xor
jnp
or
clc
push
fdivl
cmp
push
jae
dec
inc
xor
push
sbb
shr
dec
sub
outsl
test
sub
add
cmp
xchg
adc
shlb
push
lods
lret
call
mov
test
inc
imul
scas
mov
push
lock
aam
add
lret
or
hlt
xor
cld
outsb
test
lock
mov
icebp
fisttps
insb
insb
and
es
rcll
js
jmp
pop
xchg
pop
leave
sub
sub
lahf
lahf
lods
jns
lods
in
sub
gs
sbb
xor
pop
lret
lock
ret
fdivrs
sbbl
and
jge
int
push
adc
mov
push
or
loope
mov
jl
imul
mov
imul
inc
jle
std
or
xor
xchg
dec
js
xchg
cmp
call
mov
int3
or
pushf
stos
test
xor
pop
sahf
popf
add
pusha
js
lods
xchg
or
xchg
and
std
and
cmp
sbb
dec
xchg
jne
or
dec
shl
jg
mov
int3
sub
in
cmp
dec
and
test
adc
aaa
test
mov
sti
pop
mov
dec
mov
add
int
ret
dec
dec
fdivl
push
cmpsb
cmp
insl
push
pusha
jecxz
mov
push
and
mov
aas
fists
stos
stc
popf
xor
into
xchg
jae
loope
ljmp
data16
jb
push
clc
xor
mov
pop
in
dec
loopne
shl
into
and
gs
lods
sahf
cmp
inc
cmp
push
adc
imul
sbb
les
cmp
arpl
jnp
jg
pop
push
movl
xchg
lds
insl
add
sbbb
aam
xor
mov
ret
push
xchg
daa
push
pop
jge
fwait
insb
aas
xchg
mov
fmuls
push
inc
mov
cmp
mov
xchg
adc
cmpl
pop
out
jp
loope
cs
lods
push
icebp
shrb
js
outsl
jge
sbb
or
xor
mov
adc
or
nop
dec
xchg
jnp
das
mov
sbb
push
stos
sub
sti
sub
mov
cmp
aas
mov
jbe
sahf
pop
adc
icebp
stos
lods
clc
and
test
xchg
bound
hlt
xlat
add
ret
dec
hlt
incl
jns
aam
pop
cmpsl
jl
mov
out
mov
iret
movsb
call
dec
push
shrl
in
dec
pop
cmpsl
and
dec
pop
mov
outsb
pop
or
sbb
mov
mov
sub
cmp
sub
insb
lock
add
inc
fdivl
js
xchg
jo
xchg
jle,pt
test
imul
iret
and
shrb
and
outsl
aaa
enter
in
adc
inc
ljmp
int3
inc
push
and
jge
sbb
xor
int3
xor
test
paddusw
xor
outsl
cmp
mov
scas
xchg
adc
pop
pop
xor
pop
jno
scas
add
sbb
push
xchg
xchg
mov
inc
mov
or
adc
adc
push
and
or
cli
mov
loopne
jecxz
ss
mov
lock
scas
shlb
fnstcw
shrl
mov
sub
pop
xor
inc
mov
sbb
adc
mov
int3
dec
and
adc
scas
mov
adc
cmpsb
inc
dec
sti
or
rcll
jmp
cwtl
or
loope
movsl
outsl
jmp
mov
xor
push
jne
push
std
nop
pushf
movsb
std
push
xor
cmpsl
mov
push
stos
inc
leave
fwait
or
test
jge
sahf
stos
inc
jo
movsb
cmp
add
jp
xor
addr16
pop
jns
lods
xchg
add
sbb
fnstsw
imul
hlt
sbbb
mov
sti
mov
mov
or
pop
inc
mov
inc
mov
xor
loop
mov
imul
imul
inc
push
sub
and
orl
in
js
mov
sub
scas
add
add
push
test
iret
xchg
ret
sbb
mov
mov
jp
ja
cmp
mov
ljmp
or
mov
mov
les
sti
mov
push
mov
mov
add
mov
lcall
es
addr16
add
lret
xor
out
xor
mov
scas
in
outsl
stos
add
aam
push
cmpsb
cmp
pop
in
hlt
add
xchg
jb
mov
loop
and
sarl
je
push
cs
or
lds
add
dec
dec
dec
sahf
cmpl
sbb
out
push
xchg
push
jmp
and
pop
fldl
push
jmp
in
stos
xchg
sub
into
insl
mov
shl
cmc
fcos
push
cmpb
lods
mov
inc
jb
jno
fs
xchg
ret
dec
inc
and
lock
int3
push
inc
add
xchg
cmp
adc
stos
ja
jbe
loope
mov
mov
mov
inc
xchg
sbb
sub
lock
sbb
mov
lcall
pop
adc
add
cltd
mov
inc
ljmp
push
mov
xchg
cltd
xor
adc
dec
mov
mov
test
in
out
arpl
sar
loope
adc
push
or
xchg
mov
das
mov
mov
pop
scas
mov
scas
and
push
rorl
xor
fidivrl
or
mov
dec
hlt
mov
push
sub
dec
sti
add
jmp
jecxz
cld
jbe
dec
sub
lret
jp
mov
ret
xchg
in
dec
cmp
push
rolb
xchg
or
sbb
fldcw
jmp
jg
sar
xlat
loop
fdivs
sbb
mov
je
push
push
add
out
dec
sbb
sub
push
xor
sub
sbb
adc
js
pop
test
adc
sti
push
or
aaa
loop
mov
pop
inc
mov
jmp
sub
stos
inc
jo
hlt
aaa
fwait
lods
pop
enter
std
aam
dec
test
xorb
mov
cmc
aad
flds
mov
dec
repz
mov
inc
pop
push
pop
or
cs
clc
loop
lods
xchg
scas
xor
or
pop
cmp
loopne
daa
and
jecxz
mov
and
add
std
loopne
hlt
sbb
pop
cmc
jo
rorb
mov
repnz
aaa
jns
push
aas
pop
sub
add
dec
jno
sbb
xlat
mov
mov
and
dec
test
pop
in
push
mov
rcrl
repnz
jecxz
mov
arpl
inc
push
or
push
pop
sub
nop
cltd
mov
xchg
pushf
mov
ret
pop
adc
lahf
cwtl
cmpsb
dec
fucompp
lods
stos
repz
daa
sbb
jmp
lret
lock
leave
repz
cli
adc
add
dec
lods
jg
lods
or
xchg
mov
adc
cwtl
lret
jge
jl
mov
push
aad
mov
sbb
leave
mov
or
gs
insb
sub
in
test
bound
jns
pop
xor
push
sub
out
jmp
int3
jp
fbstp
pop
and
push
adc
and
adcb
popf
lods
fldenv
aam
stc
mov
inc
push
xor
xchg
movsl
test
lret
cmc
in
lcall
add
mov
mov
mov
pop
add
out
mov
idivl
mov
loopne
leave
dec
cli
push
inc
in
testl
outsl
jp
pop
cmp
sbb
rcll
out
jp
xchg
or
arpl
pop
jecxz
mov
shlb
call
out
mov
mov
testb
mov
lret
sub
jbe
data16
int
lock
mov
lret
dec
imul
push
jle
sbb
pop
pusha
inc
sub
stos
xchg
mov
stc
cs
cs
outsb
dec
mov
pop
xchg
enter
and
stos
mov
fstpl
sahf
xor
push
jle
sbb
inc
and
fimuls
pop
adcl
pop
pop
adc
mov
aad
dec
mov
arpl
adc
jge
addr16
push
pop
push
sarl
pop
add
stos
cmp
pop
in
mov
cwtl
pop
jecxz
push
fisttpl
xor
xor
pop
dec
incb
shrb
arpl
clc
inc
rolb
sarb
ret
out
popf
leave
xchg
sub
ret
pop
lock
mov
aas
lret
rcr
cmpsl
or
jnp
dec
lds
sub
in
mov
jg
push
dec
mov
aad
movsb
fwait
inc
jmp
mov
dec
xor
and
lods
jne
test
cli
push
and
push
js
push
mov
bound
shrb
in
mov
or
les
sbbb
mov
adc
xchg
pushl
daa
adc
data16
and
in
stc
inc
mov
inc
out
xchg
xlat
add
aaa
ret
mov
push
jo
lea
mov
pop
out
mov
hlt
jecxz
jbe
imul
push
std
add
pop
fldenv
dec
cli
js
lds
incl
fsubrp
mov
int
mov
mov
push
popa
xchg
dec
dec
sbb
test
add
xchg
sti
aam
test
adc
stc
ficomps
pop
lret
and
or
adc
pop
xor
mov
xor
xchg
mov
hlt
mov
pop
adc
sbb
adc
add
mov
es
pushf
outsl
cmp
add
out
clc
das
jo
cmp
std
sti
dec
mov
sbb
mov
outsb
add
int3
jae
in
stc
lcall
sbb
or
hlt
cmp
lret
mov
lock
into
jecxz
pop
push
mov
xchg
add
fs
add
mov
cmp
andl
mov
cmp
or
jge
leave
mov
subl
sbbl
fsubs
int
mov
int3
daa
mov
xor
ja
scas
sbb
cmc
and
mov
pop
lods
push
in
test
xchg
hlt
mov
xchg
pop
pusha
dec
and
mov
cli
andb
sbb
test
or
adc
mov
cmp
ds
jl
sahf
pusha
ja
notb
mov
xchg
dec
pop
es
sbb
mov
fs
xor
add
xchg
in
mov
fdiv
push
sbb
xor
cmp
pop
mov
dec
fstl
push
add
clc
mov
push
popa
pop
and
into
sbb
lcall
mov
mov
fs
push
and
pop
jbe
pop
rcrb
loop
lock
xor
int3
push
cmp
inc
gs
and
cltd
scas
and
ficomps
mov
xchg
xor
push
aaa
sbb
pop
xchg
and
or
ficoml
int
in
cmp
mov
lret
sub
lahf
lock
push
mov
pop
imul
cld
fists
adc
pushf
mov
sti
or
xor
jle
or
ret
ret
mov
push
push
popf
jae
aad
dec
pop
mov
mov
inc
ljmp
shlb
adc
dec
push
sbb
cmp
mul
fdivl
jbe
movsb
push
popf
lcall
fs
cli
inc
push
xchg
pop
mov
int3
sbb
flds
pop
or
jo
mov
push
in
test
jl
in
lock
and
mov
pushf
xchg
fldenv
or
pop
mov
jge
and
jge
call
xchg
xchg
shll
ficomps
and
outsl
mov
lods
mov
in
adc
or
popf
jge
sub
and
stos
aam
sub
lcall
and
lds
xor
add
mov
mov
arpl
lea
js
pop
add
push
and
std
sub
rolb
imul
fwait
das
popa
outsb
xchg
dec
outsl
les
je
scas
std
lods
clc
mov
aad
fwait
outsb
and
mov
iret
dec
test
int
test
adcl
sbb
sahf
data16
test
adcl
inc
xor
or
dec
lcall
mov
sub
inc
hlt
and
sbb
jne
inc
ficompl
sbb
or
iret
outsl
xchg
sub
mov
mov
gs
sahf
idivb
cld
mulb
pop
pop
shrl
arpl
mov
push
dec
movsl
out
loopne
nop
sbb
mov
or
xor
push
fcomip
sahf
inc
and
cs
push
frstor
rorb
pusha
jnp
inc
in
xorl
dec
fildll
xchg
xor
sbb
nop
movsl
fs
call
jecxz
push
cltd
outsl
adc
pop
jecxz
push
repz
sbb
test
and
in
ja
roll
mov
shlb
pop
and
cmp
lret
push
or
out
sbb
aas
mov
jo
sub
repz
pusha
test
lds
mov
jns
movsl
mov
mov
mov
xor
add
cltd
jge
enter
pop
mov
pop
cltd
scas
iret
je
fidivl
mov
stc
scas
adc
mov
outsl
daa
inc
mov
or
sub
fdivrl
push
mov
sub
sbb
es
pop
cmc
inc
jns
lock
or
jl
sub
les
out
hlt
push
ret
call
out
cltd
cwtl
and
push
or
fstpl
mov
repnz
mov
dec
lds
cmp
jle
sarb
mov
xor
leave
cmp
das
cmp
and
mov
lret
ja
and
js
sub
rcrl
test
subb
push
scas
add
xchg
shrl
mov
inc
inc
jle
xchg
mov
cmp
scas
inc
mov
loop
sahf
mov
lahf
or
cwtl
ljmp
cmc
add
stc
xchg
out
sub
xchg
adc
sub
jge
enter
mov
sti
loopne
cmc
shlb
sbb
dec
sbb
fidivs
mov
insl
or
or
sbb
or
pusha
and
daa
or
push
push
pop
out
mov
xchg
or
popf
testb
or
notb
jge
fadds
gs
or
lret
jbe
sbb
sti
mov
scas
add
decl
stos
cmpsl
enter
scas
xchg
push
and
adc
pop
mov
add
test
stos
xor
jno
scas
dec
ss
pusha
lret
dec
out
push
sbb
dec
nop
push
popf
add
mov
or
sub
out
xchg
push
shl
mov
adc
add
adc
xor
adc
arpl
or
and
mov
stos
sub
mov
xchg
add
or
push
and
cmp
jnp
dec
aaa
dec
ljmp
ljmp
movsb
rcl
out
jo
fcomps
hlt
es
daa
jbe
lret
andb
pushf
js
adcl
jecxz
and
adc
pop
out
js
cmp
fnstenv
mov
adc
xor
movsl
test
outsl
inc
push
sbb
push
test
call
push
mov
inc
les
lret
mov
push
inc
test
push
fwait
mov
popl
ret
cmp
cmp
sti
imul
ret
sub
test
lahf
inc
ret
xor
icebp
adc
add
out
rcrl
xchg
and
mov
outsb
xor
jb
ret
mov
or
ret
add
nop
ljmp
or
pop
popf
pop
fdivrl
aad
jo
jmp
ss
lock
in
cmp
jne
mov
cld
mov
fnstcw
stos
ret
cmpsl
pop
jnp
jns
cmc
mov
inc
add
add
adcb
popa
sub
inc
test
push
add
push
notb
cmp
xor
movb
outsl
adc
push
iret
push
icebp
jmp
andl
cwtl
sti
jo
fwait
mov
and
or
mov
cmpsb
xchg
aad
xchg
adc
call
leave
aaa
into
sbb
sub
cmp
stos
push
std
sti
shl
jge
xchg
je
test
or
lcall
xor
or
dec
lret
movsl
add
movsb
adc
pop
and
xor
push
jnp
pop
adc
mov
or
int
lcall
fucomip
loopne
mov
mov
rolb
xchg
stc
test
fs
cli
pusha
xchg
ljmp
jne
add
jnp
xchg
pop
out
mov
inc
jae
push
fcomps
popf
mov
sub
pop
call
pusha
lret
dec
and
es
js
sbbl
aas
fsub
mov
in
pop
mov
push
xchg
sbb
out
and
not
movsb
popa
mov
loop
imul
in
pop
or
sbb
mov
mov
jo
or
pushf
or
pop
push
mov
xor
lods
mov
dec
xor
xchg
jo
test
adc
dec
fimuls
mov
inc
inc
in
push
test
movsl
mov
push
xchg
jns
dec
jmp
imul
pop
mov
jecxz
lea
fstpt
dec
jle
jb
ss
vpcmov
enter
adc
inc
sbbb
push
das
into
jmp
sbb
mov
mov
int3
mov
mov
hlt
inc
insl
cmp
das
jecxz
in
cwtl
subl
pop
dec
adcl
adcb
lahf
mov
fdivl
call
cmpsb
and
fstpt
aaa
push
xchg
push
add
jecxz
jns
jg
or
sub
ret
mov
bnd
mov
decl
in
push
fcmovnb
jl
insl
insl
adc
jo
cmpsl
pop
inc
cmp
ja
sbb
pop
add
shlb
and
dec
iret
ret
sti
insl
sbb
mov
and
es
or
adc
outsl
or
mov
mov
fwait
lods
cmp
pop
adc
scas
inc
in
pushf
or
pushf
mov
lcall
fadd
test
imulb
and
xor
sbb
push
dec
cmp
add
push
test
shrb
mov
cmpb
dec
mov
das
inc
push
inc
scas
shl
aaa
jmp
mov
mov
mov
lret
outsb
or
int
and
lods
xchg
inc
sbb
data16
pop
out
std
mov
and
xchg
pushf
pop
adc
loope
add
outsl
or
les
sub
sub
aas
jnp
mov
outsb
jmp
dec
outsb
or
popa
sbb
jmp
xchg
pop
adc
and
ficoms
ret
pop
ja
ljmp
inc
add
notl
push
sub
adc
pushf
sbb
fmuls
out
cli
popf
xor
jb
xor
aam
lock
mov
adc
enter
out
outsb
aad
xchg
pop
lea
fsubrl
mov
mov
fdivrs
repnz
jo
mov
and
cmpsl
adc
and
jb
xor
or
or
and
jge
jg
cmp
test
add
inc
mov
push
xchg
std
pop
test
pop
dec
test
mov
add
inc
in
sub
pop
mov
out
mov
mov
mov
dec
add
sbb
inc
or
mov
outsl
adc
adc
mov
push
xor
loop
loop
push
popa
add
data16
rorl
inc
test
sub
std
adc
xchg
push
lret
mov
cmpsl
push
in
adc
xor
lret
lcall
sar
jns
lods
mov
push
and
xchg
mov
ds
aaa
leave
and
test
adc
or
mov
inc
push
dec
jne
push
dec
sarl
call
jno
in
js
mov
pop
out
in
xor
xchg
into
in
cwtl
jl
scas
scas
sbb
push
and
std
mov
and
ret
jno
cwtl
lea
movsl
out
adc
sub
mov
push
cld
sbb
xor
pusha
popf
lret
or
sbb
rcr
loop
in
or
stos
cli
push
xchg
mov
inc
fbld
push
call
or
xor
aaa
sbb
loop,pn
and
inc
es
lea
and
addr16
insl
xchg
fcmovu
mov
mov
enter
push
dec
cli
outsl
cmc
inc
jae
xor
xchg
pop
aad
sub
push
mov
fdivl
fcmovnbe
add
mov
shrl
or
jp
ror
cmp
fs
xchg
ret
andl
push
in
dec
fnstenv
hlt
jo
je
dec
xchg
dec
ret
mov
int3
xor
call
rcl
sub
mov
mov
into
lret
push
or
xchg
inc
shrl
add
mov
cmp
shlb
aaa
imul
sbb
push
jno
push
dec
pop
inc
jmp
xchg
movsb
pop
push
mov
add
lcall
cmp
mov
int3
es
mov
in
mov
lahf
xchg
xlat
out
fisttps
mov
loop
imul
jo
mov
add
jbe
lret
je
mov
xor
sbb
sub
add
bound
popa
cmpsl
shlb
mov
into
bound
leave
sub
not
insb
cld
add
rclb
mov
pop
std
fsubrs
cmp
cmp
mov
ds
in
xor
and
jno
bound
lret
sub
or
push
xchg
iret
jno
clc
in
test
es
jg
cmp
pop
adc
mov
imul
push
decl
jl
xor
repz
sbb
sti
sbb
nop
mov
mov
ss
cmpsl
push
inc
inc
and
push
mov
repz
dec
ss
cld
repz
xchg
sti
aas
gs
mov
mov
out
add
xlat
cmp
cli
mov
les
sub
les
xchg
enter
insl
and
cmp
or
mov
cmp
loop
mov
jns
mov
xor
lret
and
xor
pop
xorb
inc
and
iret
adc
xchg
shlb
decl
sbb
mov
lock
sbb
xchg
mov
pop
inc
insb
sub
and
addb
cld
push
dec
or
dec
shlb
mov
addb
loopne
ficoml
mov
or
out
pop
add
fldt
mov
clc
xchg
mov
aaa
cmp
jno
test
lods
into
dec
mov
fcmovbe
push
inc
xchg
xchg
jno
ljmp
fucomi
sbb
cmp
xor
or
cmp
pop
inc
mov
nop
inc
mov
mov
mov
xacquire
xchg
in
addr16
adc
or
movl
sub
ret
jmp
mov
cs
rorb
jno
aas
scas
shrl
es
push
jp,pt
mov
add
loopne
repz
int3
call
loopne
inc
mov
mov
cmpsl
sbb
loope
lahf
and
shlb
loope
out
push
lods
dec
xchg
aaa
rcrb
jnp
loop
bswap
sbb
xor
mov
or
fnsave
cmp
test
mov
adc
faddl
mov
add
sbb
push
int
or
cmp
test
out
inc
sbb
jmp
aam
xchg
jg
iret
lea
clc
adcb
pop
fistps
mov
dec
and
das
push
adc
pop
cwtl
xchg
pop
inc
jle
nop
daa
jo
lahf
inc
dec
xchg
je
mov
cmp
fadd
bound
cmp
adc
inc
mov
push
push
sbb
in
mov
pop
nop
ds
sub
add
adc
sbb
das
add
sub
bound
dec
fdivl
fisubl
stos
ljmp
into
mov
lock
push
jnp
xor
rclb
xchg
adc
imul
xor
mov
aam
fdivrs
mov
or
inc
int
inc
dec
movsb
pop
pushl
data16
sub
cld
out
push
mov
mov
add
mov
cmp
stos
mov
add
dec
in
dec
sub
notb
lea
add
dec
in
fs
notl
add
aas
lahf
pop
loop
loopne
dec
sahf
push
movb
adc
call
xor
mov
scas
out
enter
mov
sahf
in
bswap
aaa
pop
adc
cmpl
jnp
pop
jg
cmpsb
xor
stc
pop
shrb
mulps
xchg
inc
es
sub
incb
lcall
xchg
sarl
xchg
and
enter
and
xchg
js
cli
mov
jecxz
addr16
lods
loop
mov
mov
scas
sub
or
dec
cmc
push
or
sbb
mov
fcmovnbe
jae
int3
dec
mov
mov
testb
test
jp
or
or
add
mov
dec
add
pop
ja
add
frstor
faddp
leave
mov
outsb
pop
dec
jl
data16
pop
xor
out
jge
fmull
sbbb
cwtl
inc
scas
add
jl
sbb
fadd
in
mov
and
pop
jge
fnstcw
shll
sub
sbb
pop
mov
jne
mov
imul
aas
dec
pop
in
in
push
cmp
cmp
ds
and
sub
xchg
mov
les
js
push
cmpsb
dec
push
aas
mov
loope
call
popa
cmp
push
jp
js
aam
mov
pop
lock
pop
testb
mov
push
or
dec
nop
mov
ss
mov
mov
fidivl
inc
testl
pop
jns
mov
inc
ja
inc
jg
sub
jg
mov
fwait
dec
adc
or
mov
daa
fistps
mov
leave
jmp
xor
sub
dec
xchg
addr16
mov
in
leave
gs
cmpsl
inc
mov
call
inc
adc
xchg
in
imul
push
inc
imul
sub
stos
andl
xchg
in
in
outsb
daa
sbbb
test
pop
adc
cmp
inc
gs
gs
mov
sub
adc
mov
pop
mov
in
test
push
mov
loope
or
xchg
hlt
movsb
hlt
inc
mov
scas
fiadds
sub
add
jmp
jo
cmc
inc
inc
cmc
ljmp
movsl
mul
pop
pop
xchg
cmp
push
push
mov
push
lahf
out
push
xchg
shlb
nop
orb
jle
mov
aaa
adc
shlb
xor
sub
add
out
xchg
mov
aaa
pop
xchg
cmpsb
iret
push
shlb
ljmp
mov
jno
push
inc
shrb
fcomps
mov
pop
mov
jbe
into
addr16
or
pop
pop
add
flds
test
insl
stos
jl
mov
xor
cld
int
adc
mov
mov
mov
push
push
imul
daa
mov
inc
inc
push
int
aaa
mov
push
pusha
xlat
in
outsb
popa
or
rorl
inc
xor
loope
mov
stos
loopne
and
into
rclb
adc
xchg
adc
mov
mov
add
stos
xor
cmc
jnp
mov
mov
inc
pop
inc
imul
clc
pushf
notb
pop
nop
sub
xor
fucomp
mov
mov
loope
aam
or
and
cmpsb
pop
cmp
adcl
adc
xor
lret
cltd
dec
cmp
push
int
cmpsb
jmp
inc
stos
cmp
mov
push
icebp
lret
sub
or
mov
das
clc
add
dec
pop
or
pop
or
scas
mov
das
jge
and
push
cmp
xor
dec
lret
inc
xor
stc
out
pushf
cld
into
push
iret
mov
jns
pop
cmc
orb
stos
push
fidivrl
jo
hlt
mov
insl
cmp
cli
push
mov
sub
ds
xchg
fimuls
and
dec
inc
push
idiv
les
sbb
xor
adc
xor
push
dec
cld
ret
mov
pop
jl
ret
in
into
fstpt
adc
ja
or
or
push
xchg
imul
test
leave
push
pop
ret
mov
in
sbb
cmp
mov
mov
xor
popf
adc
jne
mov
xor
lret
in
movsb
cs
cmp
std
fwait
mov
inc
jne
sbb
idivl
push
xor
jmp
mov
mov
and
imul
add
xor
test
jno
inc
inc
ds
loopne
cmp
add
mov
pop
test
dec
in
mov
pop
fwait
add
push
cwtl
mov
js
pusha
lret
out
mov
and
mov
enter
es
adc
mov
scas
mov
sbb
ja
pop
fcoms
dec
subb
xchg
popf
xor
pop
jle
pop
aaa
dec
mov
sbb
mov
push
adc
lock
in
inc
shll
cmp
or
xlat
fdivrl
shr
push
rol
pop
jl
rcll
lahf
bound
jmp
mov
mul
jp
je
cmp
jbe
inc
mov
shll
insb
mov
ljmp
mov
push
jnp
lds
jb
jb
psllq
push
pushf
adc
div
nop
bnd
mov
mov
fwait
ja
fimuls
jns
int3
cltd
dec
inc
mov
adc
xchg
sbb
std
fs
sahf
jl
xchg
mov
hlt
sbb
adc
adc
ds
test
adc
pop
mov
aaa
into
std
sbb
mov
xchg
dec
ljmp
out
imul
dec
add
arpl
sbb
mov
cwtl
outsb
pop
xchg
dec
stos
shlb
into
repnz
cmp
cld
xchg
and
jmp
xor
mov
push
lret
ljmp
repnz
lods
xor
mov
shr
cli
ja
not
push
inc
add
push
jae
sbb
jmp
push
push
push
sbb
mov
bound
fildl
es
negb
xchg
push
aam
jp
imul
fildl
test
xchg
ja
addr16
orb
add
daa
sub
vmovaps
sarb
ret
fcoms
mov
iret
sbb
add
jnp
jp
inc
push
push
and
mov
outsb
nop
rorl
xchg
mov
icebp
mov
jge
sub
jecxz
sahf
out
mov
inc
stos
adc
sbb
pop
aad
out
outsl
mov
cli
mov
pop
icebp
push
je
rcr
shrb
shll
inc
cmp
add
or
fwait
cmp
outsb
mov
div
sbb
cmp
stc
rcrl
xor
ljmp
fs
nop
xchg
and
cmpsl
mov
push
push
mov
cld
fnstcw
out
pusha
xor
pop
outsl
cld
xor
push
cmpsl
pop
lods
cli
mov
sbb
lods
je
in
mov
dec
jnp
sti
fisubrs
into
leave
inc
test
outsb
jge
cs
jg
sarb
data16
daa
sbb
mov
push
js
jmp
inc
rep
loope
arpl
mov
sahf
pop
daa
arpl
jl
push
xchg
adc
xchg
fisubs
cmp
pop
adc
cwtl
sti
out
sub
push
dec
add
inc
jle
icebp
lret
cmpsb
in
stos
ljmp
push
jp
sahf
shrl
mov
insb
mov
pushf
stos
adc
fstpt
fidivs
add
lods
inc
push
insl
push
dec
sub
xor
xchg
xor
ljmp
mov
es
rorb
pop
or
xchg
scas
cmp
popf
or
jle
cmpsl
push
xor
shr
xchg
inc
sbb
enter
dec
pop
cmp
push
push
outsb
sahf
aam
jg
jge
xchg
cmpsl
xchg
jge
arpl
push
sub
in
aad
inc
out
insl
add
and
inc
mov
roll
cli
rcrb
imul
pushf
xchg
inc
shlb
das
and
test
rcl
ror
push
daa
lret
and
add
mov
ja
sbbl
scas
jp
push
jne
fs
outsl
jno
test
movb
adc
push
add
mov
pop
pop
mov
push
rcll
ret
and
lahf
int3
sbb
mov
stc
xchg
jl
adc
lcall
mov
pushf
sub
lock
or
mov
rcll
ret
insl
or
jge
ss
repnz
out
pop
pop
mull
mov
out
jle
arpl
cmp
enter
pop
int3
lock
and
sbb
call
and
stc
je
push
iret
push
push
sti
or
shll
testb
cmc
cwtl
sub
sbb
inc
pop
add
or
mov
dec
jns
mov
dec
pop
and
and
dec
add
clc
cmpsl
repnz
xchg
jmp
sub
mov
psubsw
lods
add
in
mov
loop
dec
cltd
mov
push
or
es
popa
mov
push
fldl
pop
sbb
pop
ljmp
lock
adc
loop
xor
mov
test
fs
add
into
sbb
shrl
xchg
inc
mov
push
xchg
es
dec
pop
ret
outsb
adc
shlb
repnz
mov
rcrl
cmpsl
mov
dec
cmc
into
lret
repz
or
loope
lea
icebp
test
xchg
xor
outsb
cld
add
lods
insl
call
rcrb
mov
pop
jmp
sbb
pop
imul
ret
xor
int
adc
lret
aam
nop
iret
mov
mov
mov
inc
inc
in
ret
stc
add
adc
lret
outsl
lea
or
out
adc
ja
mov
push
adc
add
mov
fistps
pop
fldcw
int3
cmp
inc
fnstsw
pop
cltd
es
adc
lock
mov
mov
cmc
lods
dec
sub
rol
loopne
nop
inc
jmp
and
loope
jg
call
stos
adc
push
mov
cmc
sub
pushl
out
pop
ret
cli
push
lret
bndldx
pop
xlat
mov
data16
idiv
xchg
ret
clc
repz
jge
sahf
dec
jb
je
lods
mov
dec
add
cmp
outsb
sbb
movsl
cwtl
sbb
inc
imul
imul
or
pop
stc
dec
pushf
dec
sahf
nop
add
push
mov
xchg
mov
cmp
xor
cwtl
popa
xchg
xlat
add
int
lock
xlat
mov
push
jl
std
sub
fs
imul
push
push
pushf
inc
pop
data16
outsl
int
jns
maxps
clc
notl
xchg
sbb
xor
cmp
mov
xor
test
dec
ds
fldenv
or
repz
push
and
fnstsw
jb
adcl
scas
arpl
push
xchg
aaa
mov
xchg
inc
sti
xor
fidivs
test
xorb
xchg
data16
push
imull
fisubrs
insl
pop
inc
movsb
pop
xorl
in
cld
sub
and
adc
add
int
xchg
mov
or
and
fsubrl
dec
pop
scas
push
jmp
dec
leave
jge
add
lods
fisubrs
mov
icebp
mov
fmull
divb
cmp
adc
insl
inc
jnp
cs
sub
popf
insb
ret
cmp
clc
out
push
and
stos
lea
sbb
mov
leave
sbb
in
ficoms
js
xor
jae
inc
flds
sbb
xor
stos
loop
subl
mov
test
test
dec
sub
lods
and
dec
sbb
push
in
rcr
jge
stos
inc
push
aas
adc
cmp
orps
mov
add
rolb
ret
pop
adc
std
int
mov
movsb
ja
rclb
idivl
mov
mov
mov
pop
sub
inc
mov
adc
aam
adc
xchg
and
sub
dec
inc
sahf
mov
je
fldcw
push
fistpll
into
outsb
mov
adc
nop
or
aad
and
push
pop
and
push
ffree
mov
ret
inc
loop
add
fnstenv
push
fwait
cmc
mov
movsb
fmuls
mov
pop
jmp
out
jp
xchg
sub
fdivl
test
bnd
fcoms
cmp
test
mov
xchg
inc
je
paddusw
sbb
or
stos
cmp
xor
stc
bound
lea
addr16
mov
add
insb
sahf
sub
test
rcrl
clc
adcb
xor
scas
aas
pop
out
jl
jo
inc
leave
dec
pusha
and
das
cmpl
sub
data16
fidivs
adc
dec
lods
leave
movsb
lret
hlt
popf
js
mov
and
std
jb
insl
fld
mov
xor
aad
fstl
mov
into
fcomip
ljmp
add
mov
dec
mov
jnp
jno
or
test
xchg
inc
in
inc
push
adc
fdiv
iret
lds
xchg
ss
stos
cltd
xor
cmc
fbstp
sub
cpuid
lea
jmp
jecxz
sub
mov
int
lcall
adc
jno
jp
shrl
inc
jmp
and
inc
in
lret
int
icebp
jle
stos
cmp
sub
imul
inc
sub
push
sub
dec
loop
sbb
and
ja
lret
mov
mov
lret
aam
adc
jecxz
mov
mov
ficoms
sub
inc
jl
rorl
mov
jg
test
xor
jmp
fstps
mov
cmpsl
aad
out
pop
leave
fisttps
sbb
pushf
jb
hlt
je
sub
shlb
sub
xor
repnz
push
into
lahf
loope
xchg
push
inc
out
jno
pop
cmp
das
int3
dec
testl
cwtl
in
sbb
xchg
push
jmp
rorl
add
jns
jno
fisttpll
mov
mov
pop
xor
adc
pop
subb
les
lods
bound
addr16
pop
outsl
fwait
loop
cmp
int
leave
mov
xchg
dec
push
mov
inc
adc
mov
xorb
cmp
xor
or
out
scas
stc
int
call
push
insb
pusha
leave
cs
ror
add
pop
addl
fisubrs
push
sub
jle
jl
adc
jb
fs
mov
scas
mov
cmp
cmp
pop
cmp
add
or
cmpsb
fidivs
xchg
mov
mov
xor
push
cltd
jge
xor
repz
sub
mov
sbb
movsb
mov
lds
fisttpll
mov
sub
jne
push
mov
mov
stc
add
ljmp
pop
cmp
mov
addr16
cltd
cs
loop
cmp
scas
std
arpl
loopne
add
cmp
dec
adc
shlb
ficompl
in
insb
jno
test
sahf
and
lahf
xor
incb
shll
lcall
mov
inc
roll
in
inc
xchg
test
in
aaa
aad
jp
stos
movsb
cmp
daa
and
xor
movsb
xchg
in
in
push
mov
inc
test
adc
out
lahf
daa
pop
rcrl
imul
daa
fcoms
jg
pushf
jnp
lret
pusha
cmp
jb
and
lods
arpl
mov
and
inc
in
or
addr16
jns
outsl
and
ds
fists
mov
mov
mov
xorb
xor
negb
cmp
sub
add
xchg
stc
xchg
adc
out
mov
or
sbb
xchg
jns
test
mov
sbb
mov
shl
dec
cmpsb
add
dec
push
inc
or
out
and
sbb
jb
jnp
sbb
push
scas
ja
sub
sub
push
inc
loop
push
adc
pop
fsubrl
lret
mov
mov
cmp
dec
addr16
pusha
mov
fsts
adc
push
mov
cmpsb
dec
xchg
test
lods
neg
pop
shll
mov
pop
jne
xchg
rclb
jmp
jae
xchg
js
aaa
and
aas
inc
xchg
mov
lock
mov
sub
push
add
push
popf
xchg
pop
movsb
lret
dec
inc
cmp
and
rorb
lods
notb
lods
pop
aad
jo
movsl
and
out
jbe
adc
add
in
mov
int
push
movsb
sarl
leave
rorb
packuswb
or
pusha
dec
sbb
xchg
shll
mov
jo
mov
jmp
add
mov
hlt
xchg
mov
sbb
gs
push
gs
mov
insl
jg
in
pop
sub
jo
jbe
lcall
inc
add
outsl
js
stc
test
mov
xor
dec
lods
sub
xchg
popa
sbb
xor
sbb
xor
jp
jle
push
dec
lods
dec
adc
dec
cmpsb
lds
gs
dec
inc
mov
clc
roll
push
ret
mov
stos
sahf
stos
mov
adc
and
push
fists
jo
cmp
dec
jmp
dec
pushf
and
mov
inc
sbb
mov
mov
inc
cmp
in
cmp
inc
in
mov
andb
mov
xchg
push
jmp
mov
push
push
lret
mov
mov
jg
pop
mov
xchg
inc
sub
mov
cmc
int
out
mov
mov
xor
fcmovu
pop
loop
call
aad
dec
movb
mov
mov
inc
lcall
repnz
lret
fisubl
inc
out
stos
push
xchg
xor
shl
stos
and
popf
push
adc
fwait
hlt
jecxz
mov
sahf
scas
bound
stos
mov
push
out
add
cld
daa
test
mov
xchg
pop
movsl
add
int3
loop
out
or
incb
aaa
or
xor
push
out
ret
imul
clc
add
popf
sbb
sub
or
mov
add
aam
inc
xor
pop
lea
xchg
xor
not
fsubrs
or
clc
dec
loope
into
xor
repnz
rcrl
repz
mov
inc
sub
xchg
inc
push
dec
inc
jnp
sbb
fldt
bound
repz
ret
and
test
mov
pop
cmpsb
and
ds
in
and
lret
push
xchg
fwait
mov
inc
push
scas
mov
cmpsl
mov
shll
fistpll
jg
bound
add
mov
test
daa
jnp
popf
xlat
add
stc
ds
stos
imul
jbe
jne
stos
jg
dec
test
add
fcoml
pop
cmpsb
jae
mov
sbb
cmp
insb
stos
popa
in
in
ss
in
mov
jecxz
sti
jmp
inc
adc
or
xchg
cltd
popa
push
sub
push
test
fwait
dec
les
subb
imul
xchg
and
faddp
or
mov
les
and
iret
push
outsl
mov
xor
jae
and
inc
faddl
imul
pusha
cmp
mov
fs
fs
in
mov
jmp
mov
mov
fisubrs
or
adc
xchg
clc
mov
xor
roll
dec
jp
lock
call
lock
fnstsw
dec
outsl
call
mov
inc
sti
dec
lods
call
iret
and
push
rorb
or
xor
adc
cmp
pop
sbb
pop
loopne
push
cmpsb
aad
push
insb
ja
nop
push
mov
sub
xor
sahf
mov
lods
xchg
mov
lcall
lds
mov
es
xchg
mov
mov
ja
mov
lods
mov
repz
and
pushf
sbb
cmpsb
xchg
aam
popa
pop
rcll
mov
movsb
bound
or
jge
inc
adc
xorb
pop
lahf
adc
cmc
mov
lcall
lret
jnp
lods
xchg
jp
pop
into
iret
outsl
mov
adc
or
cmc
test
push
in
shrb
out
scas
lret
out
fildl
mov
in
gs
jno
rorb
cmp
xchg
ret
jbe
out
mov
jmp
mov
shll
xchg
jge
mov
insb
sub
xchg
push
fs
and
stos
and
ror
outsl
addr16
jmp
adc
or
pop
pop
cmp
sbb
dec
sub
push
shrl
inc
addr16
mov
in
icebp
dec
jae
or
icebp
inc
cwtl
scas
mov
and
mov
neg
cmpb
gs
cmp
nop
adc
jne
xor
cmc
xchg
sub
push
fst
sub
repz
push
push
sbb
pop
icebp
dec
ljmp
outsb
loope
fisubrs
fiaddl
cmpsl
adc
cmp
mov
mov
add
shlb
jo
sarl
dec
fs
jnp
pop
cwtl
mov
ficomps
jg
es
es
pop
mov
icebp
or
xchg
jns
mov
jnp
push
mov
ljmp
adc
data16
xorl
pop
call
fistpll
add
outsb
imul
cmp
in
popf
xchg
pop
sub
nop
mov
outsl
pop
pop
mov
dec
adc
ret
sbb
mov
imul
fidivl
dec
testl
lock
add
popa
clc
aas
pop
aas
mov
push
xchg
add
mov
inc
aad
ror
mov
push
scas
aas
mov
xchg
or
stos
aaa
loopne
sub
pusha
lahf
mov
into
jmp
gs
sarl
or
rclb
mov
pop
adc
mov
or
dec
je
mov
pop
and
lods
mov
iret
push
sbb
adc
mov
in
out
sub
and
add
or
out
mov
xchg
cmpsl
outsb
in
pop
mov
add
pop
sar
sbb
jae
fmull
imul
jle
insl
sub
ja
pop
lcall
push
sbb
aam
mov
ffreep
das
push
dec
rcrb
fwait
and
mov
xor
pop
sar
inc
mov
fdivrl
mov
add
fcmove
loope
adc
lahf
sbb
push
adc
push
inc
fisubs
iret
jg
xor
add
into
push
subl
pop
push
add
les
cli
sbb
pop
dec
lahf
clc
hlt
jno
or
dec
mov
and
pop
clc
xor
dec
sbb
adc
dec
sahf
lock
aaa
sbbl
shrb
scas
mov
jo
lcall
lret
push
ret
mov
mov
ljmp
repz
add
imul
add
lods
outsb
mov
push
mov
mov
addr16
andb
xchg
sbb
loope
jnp
rol
mov
and
xchg
sub
mov
adc
lcall
ljmp
push
mov
sub
xchg
inc
fs
jmp
jg
cmc
mov
insl
jo
aam
inc
inc
out
sti
lret
aam
cmpsl
add
mov
cmp
iret
int3
test
sbb
xchg
push
push
add
inc
imul
jp
into
mov
rcll
xor
lods
push
enter
pushf
xlat
fisubl
loop
cltd
shrb
mov
mov
xchg
out
jns
sbb
aaa
and
pop
in
xchg
repz
iret
js
jbe
cmpsl
adc
mov
fcoms
xchg
cwtl
jo
sub
jge
imul
sbb
jmp
fdivs
and
push
fimuls
or
or
and
das
dec
aas
push
jl
inc
movsl
aaa
mov
jae
mov
ljmp
jle
rcll
lock
ror
pop
lcall
mov
sbb
aam
out
lods
enter
jns
cmovg
xchg
push
pop
hlt
mov
stos
hlt
in
lcall
adc
mov
es
mov
jmp
into
int3
arpl
mov
sub
scas
add
jecxz
jmp
arpl
idivl
push
aas
insb
mov
rcrl
aad
pop
mov
cs
mov
xor
lock
out
jne
fwait
rcrb
cmp
das
cmpl
in
pop
insb
rcl
scas
test
mov
or
dec
fs
push
pop
add
cwtl
add
fistl
cmpsl
cmp
rcrl
mov
push
fildll
inc
lods
aaa
rorl
mov
pop
pop
scas
lret
sbb
mov
movsl
cs
pop
je
inc
stos
scas
sti
popf
xlat
pop
aas
sbb
sbb
repnz
insb
fldz
jo
jbe
mov
outsb
ja
pop
enter
pop
insb
lods
adc
fldcw
jp
orb
and
fwait
stos
clc
cmp
lret
ja
pop
int
xchg
mov
and
lock
popf
push
stos
dec
or
adc
xor
inc
mov
jbe
or
sbb
jge
mov
xchg
push
sub
cmp
cmpl
std
lahf
mov
je
cmpsl
inc
aad
iret
adc
lods
adc
pop
lret
add
xor
xchg
sti
sbb
mov
add
lods
or
adc
cmp
inc
xor
test
xchg
repnz
shlb
leave
jl
les
xchg
jg
mov
cmp
jecxz
xchg
add
dec
fwait
sarb
mov
adc
aad
adc
xchg
or
arpl
outsb
jnp
iret
xchg
nop
pop
dec
push
aad
push
and
pop
xchg
loop
ja
sbb
xor
and
xchg
orl
inc
and
test
jb
ret
xchg
lea
bound
clc
in
pop
and
pusha
je
xchg
mov
pop
hlt
addr16
xchg
mov
mov
push
mov
xor
out
add
out
mov
sub
aam
and
sbb
mov
movsl
dec
rcrb
addr16
in
sahf
adc
lods
add
ss
sub
xlat
xor
sti
fsubrs
adc
mov
dec
popa
fidivrl
pop
lods
add
idivl
out
cmpsl
out
sbb
mov
sub
mov
adc
mov
stos
out
loope
pop
jg
repz
jo
iret
sub
lahf
iret
ret
lcall
fists
push
push
cmp
call
lcall
sahf
out
dec
sti
pop
add
add
adc
mov
icebp
push
lret
leave
cld
pusha
out
call
outsl
or
xchg
xor
mov
fnstsw
mov
into
push
rcll
mov
call
stc
scas
and
xor
aad
scas
sarb
mov
pop
scas
mov
scas
push
mov
aaa
mov
and
pop
iret
ror
push
bound
loop
subb
es
iret
out
stc
je
insl
jp
or
mov
sbb
inc
outsb
test
and
or
pusha
addb
daa
cmpsb
lret
and
xlat
cmp
xor
dec
mov
jne
ljmp
cmp
xor
aad
rcll
into
and
pop
cmc
sub
jns
andb
movsl
popl
sub
dec
push
sub
add
push
push
xchg
push
push
mov
sub
pop
sti
fisubl
lods
xchg
jle
dec
imul
fwait
aad
nop
in
call
test
cltd
enter
sti
xlat
test
pop
pop
jns
fisttps
scas
and
imul
je
mov
and
jl,pt
adc
jge
jle
sti
pop
mov
jns
xor
fmuls
stos
and
imul
daa
jbe
or
movsl
add
hlt
sar
pop
xchg
movsl
addr16
pop
sub
outsb
jg
int
imull
inc
mov
cli
mov
push
repz
push
aad
jg
add
std
testl
jl
cmpsb
pop
push
enter
bound
mov
fwait
jb
clc
out
jb
les
mul
push
jae
dec
scas
pushf
mov
mov
adcl
incl
mov
inc
loopne
inc
loope
sub
pop
lods
xlat
sbb
loop
stc
adc
pop
add
loope
mov
rdmsr
outsl
ds
js
pop
pusha
mov
out
sti
js
xor
repnz
ss
out
bound
shrb
cwtl
fwait
pushf
xchg
xor
inc
and
movsb
shll
mov
clc
scas
pushf
fcoml
xchg
sub
test
mov
popa
cmp
cld
xchg
arpl
movsb
sbb
xor
mov
mov
cmc
clc
push
add
hlt
cmp
das
and
jecxz
loope
mov
loop
fs
mov
shlb
jp
sbb
sbb
xchg
pushf
mov
adc
push
lods
jno
mov
out
imul
loope
push
rorl
imul
lea
pop
xlat
adc
jb
jae
or
mov
push
sub
js
in
mov
xor
pop
das
imul
sub
test
pop
mov
aam
fstps
sub
fwait
cmc
insl
jg
push
or
mov
jae
xor
xchg
repz
lahf
in
das
and
adc
or
jne
ljmp
jne
cmp
hlt
into
mov
adc
and
movq
xchg
aas
jne
or
inc
push
das
pop
mov
mov
lds
xchg
pushf
or
stos
or
xlat
bound
inc
xor
cs
imul
fldpi
mov
pop
mov
jno
sti
sar
stos
stos
dec
lea
pop
shl
sbb
push
inc
jecxz
xor
jne
enter
mov
stc
mov
mov
mov
subl
cli
sbb
test
lds
inc
pop
stos
dec
cmc
nop
dec
push
cltd
incl
inc
outsb
jp
sti
xchg
push
int3
jno
push
lahf
push
mov
addl
fldcw
addr16
push
popf
fdivs
push
test
dec
cmp
cltd
and
fists
sbb
popa
test
and
jno
cltd
lret
sarl
sub
jae
push
add
scas
in
mov
int3
loopne
fcmovnu
xchg
lret
or
mov
pop
jge
lret
lods
inc
lcall
mov
negb
aaa
arpl
xchg
ror
hlt
sbb
gs
out
jne
sbb
popf
mov
fbld
stos
mov
inc
cmp
mov
imul
add
add
adc
jno
pop
adc
cmp
sub
andl
call
adcl
sbb
push
mov
push
add
lock
shl
or
mov
lsl
mov
in
outsl
testb
pop
sub
or
iret
xchg
or
insb
push
dec
mov
je
pop
pop
dec
pop
enter
ret
jmp
loop
pop
mov
and
inc
aaa
dec
pop
ror
push
xchg
cmpsl
adc
leave
inc
cmp
inc
dec
xor
outsb
mov
bound
pop
pop
mov
push
pusha
icebp
fstpt
and
fistpll
xchg
call
fstenv
lock
mov
iret
scas
jge
xchg
popa
fisubl
add
cmc
push
into
lock
ljmp
sbb
in
or
sbb
popf
sub
stos
sub
mov
dec
mov
in
push
and
pop
pop
or
pop
dec
and
push
nop
add
sub
adc
out
into
rcr
cmp
dec
sub
xor
cmc
les
and
sbb
xor
ljmp
push
jle
stos
cltd
mov
ret
xor
loop
movsl
cmp
jbe
dec
rcl
aaa
lcall
and
mov
aam
in
fidivrl
cmpsl
pop
sub
int
pusha
dec
dec
mov
xlat
js
mov
hlt
push
rclb
cmp
es
jmp
movsb
js
push
dec
inc
inc
inc
push
push
xor
pop
lea
add
lret
shll
mov
insb
dec
mov
inc
outsl
sarl
push
and
inc
dec
inc
adc
or
test
mov
add
mov
sub
movsb
sti
js
pushf
iret
leave
push
adc
imul
jbe
clc
pop
sbb
add
xchg
mov
or
jl
add
pusha
mov
not
mov
cmpb
jbe
jb
rorl
add
cmpsb
shll
xchg
adc
jg
sbb
push
sub
imull
je
aaa
and
clc
in
sub
fstpt
loope
ss
cmc
inc
inc
je
fistl
cs
shll
push
pop
sbb
mov
pushf
rep
jg
loopne
pop
data16
sub
fdivrs
test
dec
adc
scas
cld
jno
repz
pop
scas
adc
jg
fsubrp
popf
xor
sub
call
sub
lcall
inc
scas
inc
dec
pop
hlt
pop
icebp
dec
rcrb
subl
jecxz
mov
sbb
int
imul
pop
repz
and
daa
xchg
push
push
pusha
or
jmp
insl
pop
xchg
jp
and
mov
into
pop
mov
rclb
and
popa
xor
push
sub
into
inc
sbb
xchg
sub
cmc
adc
jmp
or
pop
decb
andl
notl
fidivl
xchg
adc
xor
mov
adc
cmp
in
add
das
shlb
lods
call
lea
cmpsb
arpl
cmovae
push
in
cmp
push
in
aad
test
and
loop
into
cmc
andl
sub
cmp
fwait
movsl
aaa
jl
lret
add
xchg
add
iret
mov
fidivrl
jecxz
xorb
out
sub
jge
pop
mov
pop
sub
mov
lods
arpl
sub
xor
lods
xchg
punpckhbw
stos
cmp
data16
pop
mov
sbb
imul
cmp
push
dec
pop
shll
repz
sbb
and
out
sbb
insb
outsb
in
adc
pop
sbb
cmp
ret
jmp
rcl
dec
push
or
and
inc
or
mulb
daa
mov
iret
fnclex
popf
into
nop
ret
add
lea
push
adc
or
add
sub
mov
outsl
or
fdivrs
sbb
cmp
div
sub
mov
jmp
push
nop
xor
ficoml
loopne
leave
and
push
pop
inc
ret
jge
fistpl
sar
shll
inc
xlat
mov
xchg
mov
cltd
into
and
je
mov
mov
lcall
pop
push
mov
ret
pop
in
shll
and
mov
sub
push
scas
test
and
inc
adc
push
out
fwait
popa
pushf
pop
sbbl
push
xchg
outsl
sarb
jge
cmp
pusha
in
xor
dec
mov
jns
dec
enter
mov
sti
cmp
xlat
loope
or
jl
inc
lds
adc
jecxz
out
repz
inc
sub
mulb
sti
outsl
mov
mov
out
mov
ret
adc
movsb
adc
jl
push
sub
daa
lods
cwtl
or
xor
lods
inc
mov
fwait
mov
cmp
cmp
push
lods
cs
cmp
sbb
leave
in
xchg
int
pop
in
add
fcomps
add
cltd
mov
pop
scas
mov
or
pop
addb
daa
in
jb
out
std
outsl
mov
dec
push
sbb
add
bound
dec
cmp
in
push
daa
push
inc
nop
sub
mov
pop
jo
fdivrl
pop
xchg
adc
xchg
std
addr16
sub
ja
inc
mov
es
cmpsl
clc
fst
ss
mov
enter
add
lods
fists
clc
inc
lahf
cmp
sub
flds
loope
out
imul
xchg
mov
fst
or
xchg
mov
sbb
fwait
xchg
stc
aaa
jnp
add
cmp
leave
sub
inc
pop
jl
test
push
imul
ds
dec
inc
pop
adcb
bound
jnp
cmp
ja
mov
mov
adc
adc
and
imul
scas
push
lret
and
mov
sbb
xor
sub
mov
xor
jnp
push
cmp
cmpsb
lds
int
dec
aad
mov
das
push
ljmp
jns
aas
or
jnp
movsb
cmpsl
in
add
pop
adc
ss
movsl
movsb
mov
scas
fcmove
and
xchg
pop
sub
pop
nop
clc
push
jno
in
ljmp
lcall
ljmp
scas
lods
dec
subl
ljmp
jp
scas
xor
in
insb
repnz
push
shll
jae
sti
sahf
aas
in
dec
jle
in
mov
adcl
dec
xor
xor
xchg
stos
frstor
scas
ret
cmpsl
pop
push
and
mov
lcall
sti
rcr
les
pop
loope
lret
dec
insl
pop
sub
cmc
jmp
lret
sbb
cld
jb
loop
imul
aaa
lret
xor
jp
lret
fidivl
jnp
and
int3
cld
sbb
dec
scas
repnz
popa
es
orb
aam
adc
lcall
les
subl
add
sbbl
bound
outsl
inc
in
mov
adc
fwait
jmp
mov
sub
pushw
movzbl
jbe
push
jmp
pop
pop
cmpb
loop
xor
cmc
or
push
jl
xor
cltd
test
adc
ret
fldlg2
inc
jp
stc
push
jo
mov
cld
sub
xchg
pop
pop
or
mov
jbe
cltd
push
xchg
pushf
mov
cmpsl
xchg
jnp
jo
icebp
mov
inc
pop
es
push
xor
out
pop
fnstenv
stos
xorl
inc
test
jecxz
xchg
xchg
int3
mov
push
jo
push
cli
or
and
inc
pusha
cld
adcl
mov
pusha
or
adc
je
xchg
inc
inc
pop
jle
dec
ret
jae
data16
mov
cmp
sub
daa
aad
das
cltd
lret
push
xor
mov
inc
cmc
rclb
sub
in
mov
leave
int3
ret
mov
ja
adc
arpl
lods
pop
pop
xor
inc
inc
jp
xor
fs
fbstp
sub
andl
imul
aad
cwtl
test
cmp
insb
mov
dec
pushf
mov
inc
jecxz
sbb
cwtl
hlt
or
xlat
in
sub
jecxz
pop
mov
mov
mov
sbb
inc
out
adc
out
sbb
insl
dec
repnz
out
mov
jl
cmp
or
push
push
shrl
jl
mov
aas
test
sub
incl
mov
stos
test
stos
icebp
shrd
sub
lods
and
add
sbbl
push
cli
sub
xchg
and
hlt
repnz
scas
pop
movsb
pop
movsl
xchg
cmc
and
inc
bswap
sbb
pusha
scas
mov
xlat
xchg
sub
das
or
scas
lods
and
inc
mov
lods
jae
jne
sub
pushf
adc
or
or
sub
dec
xchg
push
xor
outsl
cmp
sti
xchg
cmp
je
push
sarl
sub
or
pushf
inc
dec
mov
in
jmp
and
jg
outsl
inc
in
sbb
sbb
les
add
push
xchg
in
sbb
es
add
sub
mulb
insb
xlat
add
mov
es
dec
cmp
es
xor
lods
mov
daa
jns
lcall
mov
push
cmp
outsb
lret
daa
out
addr16
test
pop
mov
sub
or
pop
stc
jae
fdivrs
inc
pop
outsb
addl
movsb
nop
pop
mov
sahf
pop
mov
add
xor
cld
jo
push
popa
pop
sub
lds
sub
out
mov
fstl
hlt
lock
dec
mov
mov
out
mov
outsb
push
sbb
dec
fisubs
add
mulb
lods
and
mov
xorb
ja
fs
dec
add
bound
cmp
test
mov
jns
repnz
pop
dec
pop
pushf
adc
test
es
xchg
sbb
add
scas
js
cmp
xlat
scas
out
pop
mov
and
add
dec
mov
jl
arpl
mov
and
jp
push
xor
fdivs
dec
cmp
push
mov
arpl
pop
adcl
xor
add
cmp
mov
jle
ds
mov
sbb
or
lret
clc
jb
in
bound
add
xor
lock
ljmp
call
jp
out
test
xor
loope
mov
xchg
mov
pop
shll
ja
cmpsl
xlat
xor
xor
aaa
fwait
aad
mov
or
dec
shl
pusha
in
and
mov
jne
lods
jne
xchg
pop
pop
sub
xchg
or
xchg
rorl
in
push
add
sub
mov
dec
into
sbb
lret
lock
mov
push
mov
mov
add
adc
les
leave
jae
push
test
dec
fimuls
andb
fs
sahf
jle
je
insl
xchg
jne
scas
mov
fcom
cmpsb
jge
fisttpl
push
sbb
push
push
push
mov
insl
add
mov
mov
xorb
or
pop
sbb
xchg
fwait
xor
rcr
push
cmpsb
inc
fcompl
cmp
mov
push
xlat
jns
addr16
adc
mov
popa
add
outsl
btr
sub
sub
test
iret
pushf
xor
adc
adc
jae
xor
push
jle
leave
or
psrld
in
sub
call
mov
insb
in
fcomps
adc
pop
in
push
push
fisubl
adc
jno
rorl
adc
add
into
pop
movsb
mov
mov
inc
sub
stos
adc
imul
stos
cltd
sub
jno
sbb
push
fldcw
stc
xor
fwait
pop
mov
jle
mov
dec
xor
pop
fists
mov
stc
push
insb
lea
sti
arpl
and
daa
hlt
movsb
sub
leave
jg
mov
xchg
inc
add
mov
insl
jns
inc
or
mov
lret
imul
psllw
lret
outsb
les
mov
xchg
and
pop
inc
jg
xchg
adc
hlt
fistps
cs
cmp
or
xchg
jg
xor
and
mov
xor
imul
xchg
add
lods
inc
adc
into
cmpsb
or
fcmovbe
sbb
movsb
test
push
clc
repnz
testl
pusha
add
sub
xchg
mov
sti
xor
add
out
icebp
imul
insl
xchg
push
sub
js
fisttps
mov
dec
jg
sahf
in
lock
enter
das
pop
test
in
cmpsl
adc
inc
fcomps
lds
not
ret
mov
cli
loope
lods
cmpsb
dec
movsl
or
out
push
enter
jmp
and
rcl
add
stos
mov
out
mov
sbb
adc
loope
ljmp
enter
dec
xlat
iret
jo
mov
test
cmp
outsl
push
add
js
icebp
jp
xor
rcrb
cmovae
mov
hlt
daa
inc
aam
pop
aas
scas
sub
out
inc
aad
cld
out
icebp
jo
mov
into
ret
pusha
cmp
pop
mov
fisubl
in
push
mov
hlt
dec
inc
jae
ljmp
mov
push
fcoml
jle
inc
bnd
add
jbe
test
pushf
cwtl
cmp
jge
decl
jg
adc
mov
inc
cmp
pop
popa
dec
fsub
mov
mov
mov
out
sub
sbb
mov
aam
ds
mov
test
push
inc
clc
inc
das
std
xor
fsubp
mov
pop
inc
ds
cmp
pushf
pop
cld
xchg
adc
sbb
cmpsl
push
das
sbb
mov
or
adc
dec
shrb
xor
aad
pop
cs
loop
pop
xor
xchg
inc
scas
jbe
xchg
or
ficompl
mov
sbb
jb
mov
xchg
roll
inc
xor
rcrb
femms
sbb
shl
adc
fistpl
imul
adc
or
jmp
dec
xor
cmp
out
xchg
fldl
subb
ljmp
shrl
add
aad
sub
mov
rorl
popf
and
arpl
cltd
daa
adc
mov
xor
sbb
mov
in
dec
test
jne
or
push
cmp
xchg
inc
out
lret
fdivrp
lock
push
sub
mov
adcb
sub
xorb
out
pop
push
insl
push
cwtl
les
stc
ljmp
pop
dec
adcb
dec
jb
aam
mull
sahf
imul
sbb
int
in
gs
adc
adc
notrack
clc
cmc
pop
std
shrb
xor
inc
xchg
aad
fcompl
dec
jo
jl
jno
xchg
pop
das
pop
test
inc
mov
repz
pop
mov
mov
rcrb
push
mov
outsb
and
fwait
lahf
add
jp
mov
pop
mov
inc
mov
popa
js
jl
adc
fbld
fimull
hlt
pop
or
dec
mov
sarb
fldenv
inc
push
lar
jnp
ja
test
outsb
pop
lock
push
aad
add
js
pop
jo
scas
jecxz
adc
out
or
xchg
push
adc
add
lret
ljmp
xchg
mov
dec
lret
inc
daa
sbb
adc
mov
adc
out
loop
jp
fnstsw
cmp
jecxz
xlat
dec
test
outsb
dec
sub
or
ljmp
lret
dec
jge
jl
ffree
je
or
popa
hlt
aad
movsb
adc
xchg
mov
les
mov
jp
sub
dec
repnz
mov
xor
js
mov
adc
sbb
ficomps
mov
xchg
xchg
lret
nop
add
cltd
inc
mov
mov
push
leave
push
mov
loop
inc
mov
movsl
loope
in
lea
imull
or
cs
fidivs
xor
test
xor
ret
sub
dec
test
sub
and
or
jmp
pop
add
push
push
fdivrs
add
add
cwtl
mov
mov
stos
sbb
hlt
or
fbstp
mov
sbb
jmp
ss
stc
mov
loop
insl
sbb
sbb
dec
jmp
std
test
je
ret
movb
sub
addr16
loope
in
js
and
mov
test
mov
std
mov
sbb
cmp
jg
lcall
cmc
mov
inc
xchg
js
lret
push
cltd
adc
lods
mov
fisttps
imull
mov
fucomp
mov
mov
jae
sbb
jecxz
cmp
rcrb
xor
cmp
test
pop
jge
xor
dec
aam
dec
push
push
lds
iret
cmc
fwait
mov
mov
into
aam
repz
sarl
jg
and
call
inc
push
xchg
mov
mov
and
scas
jecxz
movsb
sub
lds
decb
and
cwtl
je
jb
cmp
popf
icebp
add
std
dec
or
adc
shr
ljmp
ljmp
xchg
jl
test
xor
jg
push
fistpll
mov
adc
jo
or
mov
cltd
std
push
jg
mov
scas
out
sti
dec
mov
je
pop
pushw
add
scas
nop
sbb
imul
mov
push
fwait
popf
mov
in
push
xchg
movsl
dec
mov
js
xor
fists
jb
mov
adc
or
mov
add
inc
enter
fstps
pop
aam
into
rolb
and
cmp
push
fmull
in
stos
mov
stos
add
add
mov
jmp
cltd
shll
testl
xor
sbb
enter
repz
mov
and
loopne
add
mov
popf
and
xchg
jbe
pop
inc
jecxz
je
sahf
cmc
leave
inc
js,pt
or
rcll
ja
sbb
rcll
adc
add
cmc
repnz
scas
lahf
pop
mov
adc
cmp
xchg
jb
jae
xor
daa
loopne
or
cmpsb
or
sbbb
and
mov
test
call
insl
neg
mov
push
jecxz
add
sub
or
mov
adc
push
inc
mov
shr
pop
push
fisttpl
xor
arpl
ljmp
mov
in
push
mov
and
ljmp
arpl
and
xor
sub
cmc
cmpsb
test
popa
fldt
cmp
loop
and
movsl
push
outsl
insl
xor
popf
push
mov
xchg
mov
movsl
and
js
sahf
push
test
pop
lea
jb
rorl
mov
pusha
mov
cld
sbbl
pop
incl
loop
mov
push
pop
inc
jnp
fnsave
daa
sub
xchg
push
sarb
loope
cmp
lods
cmpsl
lds
xor
jl
mov
andb
pop
xor
or
sbb
and
or
cld
pop
or
lods
sbb
jl
xchg
push
in
out
adc
int3
enter
mov
cld
inc
mov
xor
pop
mov
mov
pushf
cli
and
dec
clc
bound
push
ss
push
ja
aad
movsb
or
mov
fwait
inc
sub
jmp
or
push
inc
lds
jbe
jns
lcall
sbb
mov
fldl2t
aaa
jle
inc
mov
cs
jecxz
cmp
jb
sub
cmp
jnp
push
and
xor
or
cmpb
mov
inc
test
fidivs
popa
in
sbbl
xchg
push
push
fldenv
mov
pusha
push
or
add
xlat
ret
icebp
push
and
shlb
pop
and
xor
and
cmc
xchg
lret
inc
push
jmp
test
pop
mov
hlt
push
mov
or
mov
jno
jbe
push
sbb
xchg
ljmp
out
dec
push
stc
mov
xor
insl
push
repz
test
xor
sti
sbb
nop
mov
jb
jbe
adc
addb
out
add
jmp
xchg
jmp
and
out
mov
xor
std
adc
or
cli
dec
sub
dec
sbb
call
cltd
cmc
cmp
add
loopne
mov
fsubr
fcompl
addr16
loop
jecxz
mov
fcmove
jnp
nop
jnp
les
push
jge
int3
fimull
pop
pop
sub
fstpt
adc
stos
push
stos
ja
mov
sbb
add
hlt
or
subl
rcrb
dec
pop
filds
loope
daa
jge
xchg
jno
je
jne
dec
push
push
push
jns
push
cmc
cmp
movsb
xchg
icebp
daa
rcrb
xor
push
iret
dec
cltd
sub
popa
xor
jecxz
int3
fwait
sub
loope
xchg
addr16
sbb
mov
and
cmpsb
in
jp
shrl
in
push
jecxz
popaw
in
lock
add
call
scas
adc
repz
mov
jle
inc
fnsave
sbb
repz
sbb
push
mov
lcall
dec
adc
push
sub
xor
das
stc
ret
insl
xor
rorl
sbb
ret
fisttpll
shll
scas
sub
hlt
and
ret
cmp
mov
xor
lds
sub
cmp
insl
scas
ss
jne
mov
dec
and
or
repnz
inc
rcl
lret
add
cltd
out
lcall
mov
xchg
sbb
hlt
ja
inc
mov
cmpsl
test
leave
mov
and
scas
cmp
je
inc
xor
pop
jg
pusha
adc
adc
aad
in
sbb
add
lods
adc
pop
push
pushf
out
stos
xchg
inc
push
and
lods
sbb
in
adc
xor
add
imull
leave
push
inc
lret
push
cmp
jns
mov
push
gs
std
dec
jnp
adc
rcrl
pop
push
lea
cmc
je
xchg
fs
sbb
adc
cld
pop
repnz
insb
cltd
inc
xor
xor
inc
int3
mov
sbb
inc
xor
jmp
lret
sub
das
loop
fnsave
xor
fmull
stos
loop
movsb
ret
sti
mov
loope
mov
addr16
je
push
dec
loop
lods
dec
mov
ja
fisttpl
ficomps
js
dec
loop
xchg
cmpsb
xchg
and
mov
add
dec
mov
add
inc
movsb
int3
fdivs
pusha
gs
mov
outsb
mov
lcall
cmp
push
push
mov
pop
jns
mov
push
jge
adcl
loopne
add
cltd
pop
mov
mov
push
mov
addr16
cmp
shll
cli
adc
cs
mov
inc
dec
adc
pop
cmp
fiaddl
mov
lret
sahf
sub
dec
push
ds
add
sub
and
sqrtps
jae
leave
pop
fbld
out
add
pop
cltd
xchg
and
iret
call
inc
xor
jae
rorb
in
mov
psllw
xorb
rcrb
stos
jmp
call
dec
pop
mov
xchg
jnp
cmc
inc
fdivrs
and
dec
mov
imul
xchg
and
aam
pop
lods
or
iret
sub
in
jmp
cli
movsl
sub
dec
pop
add
add
push
cs
xchg
add
mov
mov
sbb
pop
aad
push
dec
push
add
aad
push
and
dec
mov
or
push
mul
pop
push
xorl
xchg
jno
and
insl
mull
incb
or
adc
daa
stos
stc
das
arpl
or
inc
push
xchg
call
push
adc
int
mov
loopne
js
sbb
and
clc
scas
mov
lock
cmp
lcall
popa
nop
dec
subps
sbb
or
cmp
push
test
aas
outsb
popf
adc
pop
push
das
push
sub
stos
mov
notb
adc
jmp
and
icebp
mov
pop
adc
jge
push
mov
mov
xchg
outsl
mov
mov
sarb
stos
stc
push
pop
and
and
cli
mov
mov
out
add
push
cs
cmp
mov
loopne
sbb
xor
xor
js,pt
sbb
inc
and
or
test
xor
addb
dec
loopne
cmp
fyl2x
ret
push
mov
adc
ljmp
in
jns
loopne
mov
les
mov
sbb
loopne
dec
mov
push
or
cmpsb
sbb
pop
adc
push
lret
aam
cmp
add
pusha
cmp
and
inc
lahf
and
ret
cmp
mov
dec
out
dec
rep
push
mov
roll
ja
inc
test
in
inc
ljmp
fdivr
push
pop
out
pop
sub
out
cs
in
dec
imul
in
mov
jno
cmp
mov
jecxz
push
lahf
or
and
lahf
popl
xlat
adc
cmpb
fdivl
sub
sbb
mov
add
insb
xor
xor
mov
ljmp
xchg
js
add
pop
xchg
jno
mov
fisubrl
xor
mov
xchg
pusha
rcrl
cmp
nop
fcoms
ljmp
inc
fnstsw
push
int
cmp
pop
xchg
daa
or
mov
push
mov
leave
popa
lret
inc
push
popf
lret
outsl
sbb
je
or
in
cmpsl
scas
ret
inc
push
and
js
bound
mov
push
pop
test
dec
jecxz
fwait
and
xlat
insb
pop
aas
sub
in
push
sbb
pop
or
xchg
mov
dec
orb
cmpsl
shrb
xor
mov
pushf
test
leave
mov
insb
int
xlat
adc
lea
xchg
lods
push
xchg
pop
int3
imul
mov
dec
rclb
aad
or
std
idivl
mov
cli
pop
push
orl
out
or
fsts
jne
adcl
adc
cmpsb
outsb
or
jp
pop
inc
push
inc
iret
add
cmp
sub
ror
xchg
or
mov
fildll
outsb
out
sbb
dec
in
jnp
mov
sub
inc
add
or
mov
pop
mov
mov
and
inc
mov
popa
into
sbb
xchg
mov
inc
cli
mov
fnstsw
dec
mov
lahf
or
xchg
test
shrb
leave
mov
fidivrs
mov
lea
xchg
jl
rolb
dec
js
sub
sub
xchg
xor
xchg
adc
pop
cmp
inc
movsb
pop
xchg
shrb
pop
int
inc
loope
scas
mov
vmovups
mov
or
push
shrb
addr16
dec
aad
or
dec
mov
add
ret
cmp
cli
xchg
inc
out
cmc
out
inc
stos
icebp
inc
pop
mov
mov
sub
lcall
dec
scas
call
dec
loopne
loop
pop
dec
lcall
ss
sbb
jge
and
add
and
movsl
arpl
inc
repz
sub
mov
outsl
jno
inc
pcmpeqd
out
repnz
lret
movl
jb
and
test
jno
sti
jmp
mov
fildl
xchg
cmc
dec
loop
add
adc
dec
out
es
fistpll
jne
insb
movsb
push
loope
cmp
xor
in
lods
pop
in
testb
or
add
or
test
loope
out
mov
loop
pop
shlb
mov
lods
aad
adc
fwait
insl
push
mov
hlt
xor
test
dec
and
xor
insl
test
push
cmpb
sbb
jbe
xchg
mov
stos
mov
ljmp
jbe
xchg
adc
mov
and
orb
imul
and
rcll
fsub
adc
mov
imul
fistl
or
sbb
or
mov
push
push
fbld
repnz
hlt
shl
add
sub
test
mov
fprem
mov
addb
sbb
push
cmpsb
sub
scas
mov
inc
pop
fisubs
enter
cmpsl
fdiv
mov
cmp
and
bound
cs
gs
add
sbb
imul
imul
cs
cld
mov
push
pop
sub
dec
outsb
push
jns
adc
inc
je
movsl
data16
mov
lock
xor
cmp
sbb
repz
test
mov
push
scas
out
std
jl
mov
insb
xorb
mov
pop
outsl
push
mov
fdivr
mov
test
arpl
and
or
test
push
fidivrs
mov
or
jmp
dec
push
rclb
push
mov
pop
lds
jnp
sub
sbb
push
push
cltd
out
cltd
sub
rcrl
sub
movsb
xor
xlat
hlt
jle
fisubrl
xor
mov
push
in
loop
mov
pop
mov
fisttpl
mov
jp
xchg
je
cmpb
xor
fimuls
xor
scas
outsb
inc
lret
unpcklps
push
popf
scas
sarb
es
jge
lds
inc
jg
add
sbbl
je
add
sub
sbb
or
aaa
shrl
pop
enter
xor
leave
test
mov
lret
fidivrs
mov
sub
or
xor
mov
sti
inc
dec
sbb
sub
pop
jg
cmp
xor
or
mov
ja
xlat
pop
iret
mov
stc
add
cmpsl
jo
and
push
push
int3
adc
xorl
jbe
loope
je
es
pop
dec
dec
mov
clc
in
sahf
inc
jg
in
dec
mov
sub
lret
mov
jns
cmp
dec
outsl
xlat
pop
enter
sbb
pop
push
pop
xchg
rclb
subb
pop
clc
push
and
rclb
and
cmp
jl
cmc
adc
in
jns
out
jg
or
popf
loopne
pop
gs
pop
mov
pop
and
and
sahf
mov
repnz
popa
fucomip
push
and
push
mov
ds
push
lods
in
lds
pop
sub
sbb
mov
mov
outsl
inc
mov
sub
xchg
jmp
sub
iret
rclb
jp
test
movsb
in
jge
lret
out
test
cmpsb
sbb
test
pop
jge
cmp
nop
inc
stc
jmp
jnp
push
mov
dec
push
cmc
inc
fmull
loopne
sbb
imul
push
mov
adc
mov
sub
mov
dec
ja
push
push
cmp
add
mov
mov
popa
xchg
jbe
push
fiaddl
out
jl
shll
inc
mov
cltd
push
popf
jge
inc
xchg
pop
sub
rolb
and
ret
sub
fldcw
ret
aad
pop
aam
popf
add
push
hlt
xchg
cmpsb
scas
pop
bound
push
jp
test
jl
jl
pop
jle
lret
dec
inc
scas
xchg
in
dec
loope
lret
mov
jge
or
xor
rol
lret
cmp
adc
cmc
out
shll
call
xor
mov
push
shrl
push
in
fsubrl
mov
inc
add
pushf
and
addr16
jg
in
and
xchg
fwait
repnz
enter
cltd
adc
ljmp
daa
xchg
jp
pusha
lods
mov
xor
mov
mov
roll
or
test
jmp
or
xor
or
push
cld
iret
sub
popf
sahf
adc
push
xor
andl
cli
jo
mov
fldt
iret
test
dec
pop
insl
push
mov
mov
aad
fidivrs
push
jne
xor
pop
pop
cltd
sbb
sub
cwtl
test
mov
inc
fwait
jo
or
das
inc
xor
flds
enter
xor
jne
fwait
lahf
xchg
arpl
cmp
jle
inc
jle
dec
fdivl
pop
repz
or
ret
clc
xor
or
enter
inc
out
or
or
push
push
in
mov
sub
mov
es
dec
xchg
mov
cmp
pushw
out
sbb
faddl
in
fdiv
std
push
cmp
shl
push
xchg
loopne
cmp
je
inc
mov
mov
push
loope
lods
or
xor
jb
mov
mov
bsr
loop
mov
insl
xor
jnp
xor
cmc
xchg
ljmp
bound
cmpsb
bound
pusha
outsb
stos
in
and
addr16
sti
sbb
jns
inc
xor
jnp
out
pop
mov
jb
jo
pop
sbb
cmp
add
mov
ljmp
push
pop
cmpsl
sbb
int
mov
mov
xchg
dec
fnstsw
leave
pop
or
xor
add
jmp
arpl
adc
loop
inc
int3
in
inc
xchg
pop
std
pop
cs
pop
dec
xchg
adc
imul
out
jno
sbb
pop
mov
inc
mov
or
or
pop
ss
push
cld
and
mov
push
inc
pop
hlt
call
pushf
xor
flds
cli
das
xor
enter
loop
outsl
addr16
mov
sub
jbe
xor
frstor
sub
mov
xor
sub
jmp
sahf
and
mov
iret
xor
jmp
cmp
pop
and
rcll
stc
mov
aas
testl
mov
mov
or
push
mov
pusha
xor
mov
inc
cmc
mov
xor
sarb
fidivl
out
pop
xchg
pop
sbbb
lcall
pop
sub
scas
das
sbb
lea
fcmovbe
xchg
mov
arpl
les
jne
cmp
pop
xor
insb
pop
adc
popa
lods
lret
pusha
mov
push
push
test
movsb
out
inc
adc
pop
test
push
cwtl
ljmp
divb
lds
mov
pushf
mov
outsl
xor
inc
push
lret
dec
faddl
add
ret
lahf
inc
imulb
add
lods
lea
sbb
pop
int3
js
out
add
dec
cmpsb
nop
mov
mov
ljmp
sub
cmpsl
inc
pop
shll
mov
lcall
lock
add
dec
xor
repnz
xchg
je
push
xchg
inc
xchg
movsl
sti
pop
xchg
loopne
cmpsl
cli
xchg
mov
divl
or
dec
inc
lock
mov
movsb
jb
test
mov
sbb
or
inc
or
es
fnstcw
push
pop
scas
shrb
imul
ljmp
cwtl
push
daa
xor
addr16
shrl
pop
mov
xchg
sub
movsl
rorl
jno
cld
xorl
jg
adc
hlt
jmp
test
pop
pop
lods
jg
popa
in
push
js
subb
ret
xlat
xor
nop
xor
add
sti
push
dec
sbb
mov
xchg
jl
lahf
movb
or
jne
cmpsb
lahf
fisubrl
push
imul
icebp
mov
out
adc
fistpll
lret
out
inc
lret
out
shrl
test
fwait
shlb
jne
leave
jmp
dec
or
dec
movsb
xor
adc
inc
add
cmp
inc
xor
test
fildll
mov
pop
comiss
and
clc
cli
fstpt
cmp
xchg
pop
jne
js
push
cmp
jp
xor
icebp
xchg
aaa
push
xor
pusha
es
inc
imul
xor
xlat
sub
daa
data16
fs
push
push
test
popf
xchg
hlt
inc
jmp
mov
test
ret
shl
sti
imul
aam
test
call
or
fsub
lcall
dec
cmp
xchg
insb
mov
xor
mov
pop
jne
or
mov
outsl
sbb
pop
sub
jne
popa
mov
inc
mov
mov
push
popa
mov
push
stc
mov
or
pop
xchg
mov
jmp
loop
lds
clc
adc
sbb
popf
ret
dec
fwait
mov
bound
sub
jae
push
push
gs
cmp
xchg
cwtl
test
and
cmp
mov
sarl
imul
add
mov
mov
adc
and
es
pop
and
add
lret
mov
mov
insb
push
movsb
lret
mov
divl
mov
push
and
dec
aam
jns
imul
inc
pop
loop
aad
repz
pop
mov
xor
xor
int3
dec
test
jmp
imul
inc
jmp
xchg
or
pusha
push
rcrl
pop
scas
test
xchg
sahf
sbb
jbe
adc
mov
pop
rcll
xor
and
jnp
cmp
je
stos
mov
mov
cmp
stos
jg
stos
int
cmp
pop
negb
and
lods
jo
push
mov
fwait
add
cmpsl
add
loope
mov
insl
test
sub
int3
call
rclb
or
cs
jnp
push
xchg
xchg
call
out
loop
jnp
cld
sahf
repnz
clc
sub
xchg
sbbb
icebp
sub
xor
sub
testl
mov
xor
mov
leave
add
inc
out
xchg
fwait
cld
dec
js
xchg
cmp
and
push
inc
arpl
adc
hlt
or
cld
out
sbb
jl
lret
xor
lds
or
jg
dec
mov
test
cwtl
adc
sbb
xor
lods
mov
cwtl
dec
lret
cwtl
not
dec
icebp
jbe
out
push
test
pop
mov
push
mov
dec
fmull
loope
arpl
mull
int
jnp
mov
loope
in
mov
sub
or
jecxz
push
push
pusha
fsts
push
mov
test
into
cmp
dec
cld
xor
pop
adc
popa
dec
cmc
mov
mov
fsubl
sub
daa
push
mov
xchg
int
add
and
insb
add
pop
push
push
test
stos
cmp
inc
add
mov
in
nop
hlt
adc
mov
adc
out
adc
shl
mov
cs
sarl
fcoml
adc
push
bound
add
mov
fs
pop
std
push
xchg
shlb
ljmp
aam
shl
pop
ret
stos
in
int3
pop
loop
iret
ret
inc
sbb
scas
das
jle
fcoms
insl
push
out
dec
pop
les
stos
lods
test
cld
jmp
rcrl
and
xchg
jo
sub
repz
sti
pop
dec
clc
sub
sbb
icebp
lcall
lock
iret
cmpsb
jb
fidivs
dec
mov
mov
sub
pop
mov
add
inc
std
or
daa
out
loope
cmp
movsb
and
and
lret
adc
nop
mov
push
rcrl
lds
pop
hlt
mov
fildl
scas
sahf
mov
fdivl
lds
pop
and
cltd
sbb
pusha
push
stos
cltd
xor
add
stos
fdivl
sub
cwtl
cs
or
xchg
push
pushf
jmp
xchg
fucomip
sub
mov
enter
dec
xchg
shlb
xor
push
jmp
xchg
dec
mov
arpl
orb
jb
addl
cltd
in
call
push
mov
lcall
loopne
aas
fsubr
pop
aad
sub
or
adc
lods
sbb
inc
sarl
popa
iret
inc
decb
pop
pop
ja
call
xchg
xorb
pop
add
pop
dec
pop
aas
sahf
or
and
scas
decb
movsl
lock
adc
mov
jle
loope
and
sub
cmp
mov
movsl
push
shl
push
out
push
xorb
mov
cld
jp
call
gs
push
xor
add
js
push
lods
mov
or
xor
ljmp
out
sub
sub
push
lds
fisubrl
lods
iret
xlat
xchg
add
roll
popl
inc
push
jns
cli
test
mov
and
loop
pop
adc
iret
lcall
lahf
fidivrs
pop
sbb
repnz
mov
call
cs
mov
mov
out
cltd
jl
cmp
xlat
xchg
orl
or
or
fucom
jmp
in
rorl
enter
xor
sbbb
push
mov
je
fsubrl
addb
stos
ljmp
push
mov
ljmp
inc
or
pop
flds
sub
dec
movsb
add
dec
dec
lods
and
inc
inc
imul
jge
shll
adc
psubsb
dec
mov
or
cmp
cmp
mov
sbb
shll
jno
push
pop
push
and
sbb
and
jmp
sahf
insl
cli
sub
lods
mov
sub
mov
pop
scas
jp
bound
sbb
ss
repnz
push
cmp
lret
sti
xor
jbe
push
mov
mov
mov
cmovbe
xchg
adcb
xchg
andb
mov
cmp
aaa
insl
lods
loope
leave
ret
xchg
mov
or
sub
loope,pn
sub
loope
in
fdivr
mov
sti
jnp
repnz
pushf
push
and
dec
cli
sbb
add
lret
cli
icebp
loope
pop
mov
repz
ljmp
fiaddl
cmp
or
sti
xor
call
pop
aam
jecxz
mov
and
or
test
dec
mov
inc
jno
xchg
mov
dec
mov
inc
insl
push
dec
sbb
std
mov
bound
inc
inc
sbb
mov
sub
lds
pop
shll
mov
call
sahf
leave
push
add
sbb
sbb
lahf
out
int3
sahf
mov
pop
mov
and
insl
sbb
sbb
adc
ss
movd
mov
mov
in
pop
xchg
lcall
es
or
and
ror
xchg
inc
pop
xor
ja
lock
mov
sub
push
js
neg
push
inc
test
jle
cmp
leave
sbb
jo
lea
mov
and
shll
add
ret
jbe
in
mov
push
in
inc
div
mov
add
adc
push
push
mov
divb
xor
aam
lods
or
scas
mov
xor
xor
stc
push
sbb
in
push
shrl
inc
jo
jnp
cmp
repz
test
aas
and
cmp
sbb
or
pushl
and
mov
mov
aam
filds
push
mov
int
jbe
sub
fisttps
in
mov
imul
cmp
or
sarl
pop
cmp
shrl
push
add
in
iret
lret
out
jecxz
popa
scas
imul
fs
fidivs
pushf
lret
mov
jg
inc
fcmovnu
xor
orl
mov
stc
ds
pop
jmp
loopne
mov
fsubl
lock
test
insl
out
jo
or
filds
js
jne
gs
xchg
mov
mov
mov
add
mov
jecxz
dec
pusha
pushfw
and
fs
xor
out
pop
daa
imul
je
outsb
rcrb
jo
jnp
xchg
pop
xor
movsb
xchg
dec
decb
pop
jecxz
aam
xchg
push
adc
inc
lahf
add
and
xor
sbb
aad
jns
mov
fwait
lods
ror
dec
jo
sti
add
sub
dec
mov
xorb
bound
push
hlt
pop
mov
and
sub
fsts
mov
jbe
icebp
ret
cld
outsb
hlt
in
jns
adc
cmp
jl
dec
repz
mov
and
push
xlat
mov
pop
cmp
and
outsb
jge
mov
dec
jle
aam
fldt
enter
ret
ljmp
iret
insb
xchg
dec
bound
xchg
lock
jecxz
out
ss
mov
lret
cld
dec
xor
shrl
sub
cmpsb
int3
imul
call
sub
arpl
addl
ret
notb
mov
cmc
mov
and
sbb
cltd
and
dec
arpl
and
sahf
outsl
xchg
push
add
inc
aas
out
jle
mov
mov
gs
sbb
sbb
aad
enter
cli
xchg
bnd
lock
mov
ret
divl
sahf
and
std
pop
sbb
test
sbb
je
clc
scas
imul
adc
cmp
lret
out
scas
xchg
lret
jecxz
add
mov
jb
jne
pushf
outsl
js
pop
je
gs
jle
rcr
jecxz
test
xor
addr16
sti
ret
mov
rcrl
pop
push
mov
mov
add
mov
hlt
pop
jle
call
addr16
add
jmp
inc
lret
lods
push
add
xor
xor
push
loop
pop
enter
push
call
nop
fildl
push
sarl
fidivrl
xor
xor
xor
dec
lahf
jl
push
cwtl
clc
adc
mov
stc
lahf
xchg
std
jp
gs
xchg
out
movsb
pop
sbb
or
sub
sbbl
iret
dec
les
push
jecxz
mov
pop
les
or
xchg
pop
dec
add
fwait
dec
jecxz
xchg
xchg
xchg
pop
sti
pushf
out
lods
pusha
mov
int3
or
xor
sub
sbb
jne
stc
imul
add
ret
inc
add
stc
or
push
or
sti
testl
fbstp
scas
repz
ret
sub
dec
mov
jmp
test
popf
sti
push
cli
lods
add
leave
sub
ja
mov
lods
movsb
inc
lahf
mov
adc
ss
cltd
lds
xor
stos
sete
inc
or
and
sti
stos
add
test
and
sub
sbb
test
jecxz
cmpsb
jnp
push
mov
fsubrl
stos
xchg
sub
dec
sub
ret
mov
inc
cmc
xchg
cmp
mov
int3
loope
xchg
insl
repnz
dec
inc
jb
and
cmp
insb
push
push
add
dec
and
add
inc
inc
jge
mov
or
jno
addr16
aam
add
lcall
insb
gs
insb
popf
mov
aad
push
mov
int
xor
cmp
into
mov
pushf
pushf
mov
jno
std
mov
xor
shll
mov
add
dec
les
mov
dec
jb
iret
jno
ja
pop
repz
adc
nop
mov
push
jbe
bound
test
movsb
call
test
or
aaa
aas
clc
mov
mov
in
popf
sbb
pop
mov
pop
push
cmpsb
inc
mov
or
bnd
lret
dec
lahf
mov
test
mov
stos
push
notl
iret
jno
dec
repz
mov
daa
lods
mov
js
int
push
ds
lcall
std
and
test
lds
adc
shr
jmp
imul
cmp
testl
cmp
rcrb
ret
lret
push
nop
std
shlb
or
mov
mov
xchg
pop
cmp
push
jns
enter
jnp
inc
xchg
aaa
mov
int
sbb
leave
inc
pop
lcall
repnz
jne
loop
mov
lods
insl
mov
rorl
mov
loopne
ret
dec
xchg
push
adc
lea
fidivl
sub
mov
dec
jecxz
testl
out
pop
or
sti
inc
and
sarl
xchg
cld
jnp
inc
sahf
push
add
push
add
fwait
bound
fwait
jae
dec
lods
xchg
call
xor
and
push
adc
xor
adc
and
mov
xor
cwtl
jo
bound
or
xchg
mov
cmp
out
xchg
xchg
data16
fwait
push
push
push
mov
jae
sub
push
push
inc
cltd
call
jle
add
push
sti
push
pop
mov
xlat
stos
out
inc
aam
inc
pop
xchg
cmp
xor
mov
jle
pop
lret
jb
mov
ficomps
sub
pop
insb
btc
mov
inc
mov
adc
adc
jl
adc
loop
xchg
out
sub
scas
in
cld
push
sub
inc
xor
pusha
cmp
xor
sub
lock
jne
mov
mov
cmp
mov
sbb
pop
fildll
mov
mov
sti
lcall
cmp
mov
out
in
movsl
pop
sbb
jnp
pop
xchg
cmp
std
inc
mov
call
movsb
inc
inc
pop
pop
outsl
insl
dec
mov
leave
popa
push
cmp
sti
pop
stos
push
xchg
add
pushl
inc
hlt
icebp
pusha
push
adc
dec
ret
cmp
mov
pop
out
in
fisubs
cmp
adc
bnd
push
mov
dec
cmp
outsl
fisttps
mov
xchg
stos
inc
pop
repz
insb
call
push
and
negl
sti
inc
inc
shlb
shl
shrb
cld
shrl
stc
xor
lret
pushf
shll
cmc
push
sarb
js
jge
les
xchg
js
subl
arpl
sbb
cmc
enter
loope
dec
or
decb
fcmovbe
and
outsl
sub
pusha
addl
inc
push
fisttpll
xor
xchg
adc
in
shrl
xchg
std
lret
push
cmc
shll
repz
out
les
es
push
bound
ja
and
adcb
jg
xchg
lods
or
ret
fdivrp
fildl
adc
dec
cld
pop
into
push
xor
inc
sahf
lcall
xchg
jbe
scas
inc
lods
in
pop
iret
add
mov
cli
leave
insb
sar
pop
sbb
mov
je
inc
xchg
sub
loope
aad
jl
push
mov
mov
mov
and
data16
jmp
fldenv
call
sbb
cmove
lds
pop
jae
or
add
popa
inc
lret
pop
repnz
call
xchg
xor
mov
sarb
filds
lock
movsb
mov
lret
sarl
pop
fsts
mov
jg
pushf
lret
xchg
cmp
cltd
cmp
sbb
into
sub
ja
movsb
inc
sbb
cmpsb
push
pop
cmpsl
std
ror
jle
leave
lods
xor
fiadds
xor
fbld
cmpl
xor
rclb
lea
adc
mov
test
mov
lret
cmc
daa
lret
mov
cli
mov
testl
dec
daa
lcall
data16
iret
pop
push
lds
movb
mov
mov
xchg
shrb
jae
xchg
push
addb
repnz
fsubrs
jl
out
xchg
push
xor
mov
cmp
cmp
xchg
adc
fwait
xchg
insl
xchg
jecxz
push
jecxz
pushf
fbld
std
aas
pusha
xorl
popa
or
jo,pt
scas
ss
mov
adc
mov
int
adc
jo
cmpsl
ljmp
adc
adc
push
mov
cs
adc
pop
out
data16
xchg
cmpsb
repz
pop
cmp
sub
hlt
mov
stos
jge
pop
add
adc
stc
repnz
pop
aad
or
add
dec
dec
adc
sbb
and
xchg
cltd
sub
and
pop
insb
mov
out
push
out
xchg
fists
insb
mov
incl
test
xchg
cmp
rcll
loopne
fmul
lahf
and
mov
push
cmp
in
cmp
mov
dec
cmp
int3
pop
pop
mov
shll
adc
push
out
pop
mov
rcrb
push
das
adc
lret
lcall
cmp
subb
lods
sahf
jle
mov
mov
xchg
movsb
jbe
mov
mov
pop
iret
orl
pop
popa
dec
out
stos
imul
and
xor
imul
insb
shr
mov
jl
cmpsb
inc
in
mov
fs
loope
push
xchg
setae
pop
or
fmull
cmpsl
fs
mov
fisttpll
sub
bnd
cmp
addl
push
push
ljmp
add
sub
cltd
sbb
jno
xchg
je
fs
outsb
test
movsb
xchg
in
pop
enter
dec
xchg
mov
mov
or
arpl
popa
fcoml
add
mov
inc
sub
ss
xorl
cli
dec
pop
xor
ret
std
adc
xchg
xor
cwtl
sarl
repnz
imul
rol
shlb
mov
and
sub
idivl
inc
pop
lds
rclb
cs
sub
add
inc
pusha
cmp
mov
mov
nop
jge
push
fstl
lret
dec
xor
mov
lds
leave
cmpsb
fiaddl
xor
mov
scas
sahf
pop
push
sarb
in
fsubr
jle
dec
int
xchg
add
xlat
xchg
sbb
aad
daa
cs
mov
cs
dec
add
ljmp
sub
push
call
ljmp
adc
cld
scas
xor
bound
push
pop
xchg
std
jl
xchg
mov
ret
ja
in
mov
adc
fldt
mov
cmpsb
je
fistl
repz
out
cmpsl
push
push
cwtl
shrl
mov
icebp
mov
testl
fsts
adc
insb
or
mov
stos
loopne
mov
aam
or
add
or
test
mov
ljmp
push
xchg
mov
push
ss
in
sub
push
cmc
sarl
fwait
pop
mov
insb
cmp
inc
jnp
push
clc
movsb
mov
test
push
rcll
sub
repz
mov
clc
cmp
jl
xor
sbb
add
lea
rcr
push
xchg
jne
loopne
cwtl
loopne
call
das
xor
mov
in
cmp
mov
test
bound
out
sbb
mov
sub
cwtl
scas
mov
mov
testl
std
sti
push
push
and
dec
dec
mov
xorb
iret
inc
xchg
jg
dec
je
imul
repnz
mov
xchg
outsb
call
or
rol
jge
out
mov
or
adc
cmc
or
pusha
fwait
lret
mov
lcall
or
adc
cltd
sbb
out
xchg
sbb
inc
jecxz
push
mov
xchg
xchg
inc
icebp
loope
jp
sbb
out
or
inc
aad
adc
ljmp
arpl
jl
fcmovnb
std
inc
inc
mov
xchg
das
fsts
pusha
ds
ljmp
push
mov
fstp
fnstcw
jbe
xor
mov
mov
inc
xor
outsb
mov
jns
cmpl
notb
fs
xor
incb
mov
mov
fnstenv
lret
sub
insb
sbb
xor
xchg
mov
add
and
cmp
in
fincstp
xchg
std
lea
jmp
add
in
enter
cmp
fcoml
scas
push
mov
inc
aas
inc
test
mul
mov
xor
cmpsb
iret
das
ret
std
stos
popl
cmpsl
jno
pop
test
jge
xchg
jle
movsb
in
jmp
arpl
sbb
jne
adc
ficomps
jne
adc
insb
xchg
jge
lock
fs
in
test
ja
jne
jge
lcall
ret
push
aad
and
arpl
add
mov
push
sti
xor
aam
or
dec
and
sub
inc
mov
push
add
sub
jne
add
aad
or
addr16
add
mov
fidivs
push
scas
subb
aaa
jle
mov
pushf
mov
and
fnstenv
bound
lea
jg
push
mov
stos
sbb
enter
push
xor
into
sbb
test
inc
cmc
pop
adc
and
push
repz
or
mov
cmp
js
cmp
in
ds
push
out
daa
js
aas
mov
repnz
adc
nop
bound
inc
dec
loope
pop
sahf
mov
pushf
adc
loope
mov
xor
inc
push
or
fsubr
jbe
pop
addl
lea
sbb
stos
mov
add
xor
int3
std
mov
ljmp
rcrb
mov
pop
cmp
mov
pop
fildl
ds
sub
mov
outsb
inc
or
movsl
mov
popa
dec
dec
jo
jbe
dec
push
jge
pop
jp
in
out
pop
test
inc
dec
inc
fildll
cmpsl
roll
arpl
hlt
jae
fiaddl
out
cmp
adc
xchg
orl
notl
inc
dec
imul
jae
clc
or
into
fistpl
fidivs
std
xchg
cli
test
icebp
sti
jg
sbb
jg
aam
dec
mov
pop
jle
icebp
jmp
xchg
cmp
add
push
ljmp
mov
shr
mov
aam
sub
dec
jno
lret
push
cmp
inc
dec
fldcw
xchg
pusha
and
repz
push
and
adc
adc
lods
imul
sub
inc
daa
cmp
lret
subb
pop
loopne
leave
add
shll
mov
insl
icebp
xchg
xorl
aaa
mov
jge
daa
scas
or
mov
jg
adc
test
push
movsb
or
rcr
push
adcb
mov
and
movb
or
xorl
and
das
es
cmp
pop
and
shrl
call
lret
pop
cmp
data16
push
adc
xchg
jns
pop
fdivs
inc
pop
sbb
push
lea
sbb
jb
or
xor
cld
xchg
jg
and
sarl
scas
or
inc
cmp
fsubr
push
mov
fwait
mov
push
and
popf
mov
or
in
sbb
rclb
xchg
xor
xlat
mov
test
fsubrp
mov
adc
or
mov
decl
lock
xor
sbb
inc
sahf
rsqrtps
fistpl
rorb
imul
test
mov
sbb
dec
pop
js
jmp
sub
dec
iret
dec
testl
ficomps
movsb
add
xchg
addr16
stos
loop
xor
mov
dec
daa
les
cmp
xor
xchg
std
xor
mov
popf
mov
mov
jmp
jnp
fstl
xor
mov
mov
out
pop
cmpsb
and
test
mov
mov
les
xor
popa
in
cmp
repnz
push
inc
sbb
aaa
xchg
xor
push
jecxz
mov
jecxz
popa
pop
movsb
xor
stos
xor
pushf
test
scas
mov
xchg
jns
or
mov
cmpsb
cmp
pushf
xchg
nop
xchg
xchg
aas
fidivs
mov
cmpsl
dec
adc
push
pusha
xchg
jns
adc
jge
mov
leave
clc
push
icebp
push
inc
dec
insb
loopne
jns
adc
outsl
or
out
filds
cmp
clc
fmulp
sbb
sub
mov
mov
addl
rcrl
aaa
cmpsl
xchg
dec
mov
xor
aam
aad
xchg
dec
or
mov
out
adc
test
int3
movsl
shll
xor
call
movsl
iret
pushf
lock
es
les
pop
xor
in
in
mov
xchg
ficoms
data16
and
jmp
clc
jmp
jo
xchg
fsubrl
push
div
and
push
xchg
or
adc
fwait
mov
ss
notl
cwtl
and
push
je
jle
add
push
cwtl
insb
cmp
call
int3
aad
cmp
in
add
push
adc
adc
mov
aad
cld
cmpsb
mov
fmul
test
loop
enter
xchg
decb
inc
cmp
pop
stos
cli
ss
xorb
in
add
mov
mov
mov
shll
sti
adcb
lods
and
orl
sub
mov
in
leave
test
push
outsl
push
xchg
xor
xor
test
bswap
pushf
sbb
scas
mov
enter
xchg
and
sti
and
adc
mov
push
aad
push
neg
cmpl
fbstp
repnz
mov
sbb
and
inc
adc
out
xchg
add
insl
add
mov
cmpb
xor
xlat
lock
or
loop
bound
ljmp
push
enter
lock
dec
cli
push
aaa
outsl
cmp
mov
sbb
je
jne
cmp
xchg
imul
addr16
mov
sti
adc
pop
hlt
and
push
mov
pop
inc
nop
xchg
jmp
in
jb
xchg
test
imul
clc
jge
iret
adc
cmp
inc
js
mov
and
es
fdivrp
add
mov
push
pop
loopne
cmp
mov
into
aaa
jle
call
add
aaa
and
cmp
pushf
mov
nop
xor
ja
xchg
mov
mov
or
adc
mov
ja
inc
xlat
ss
push
fsubrl
mov
jns
xchg
adc
xor
jp
mov
adc
pusha
add
cli
andl
ljmp
push
sahf
and
add
std
pop
movsb
pop
popf
outsl
add
cmp
shll
add
pop
and
lds
pop
mov
lret
add
dec
stos
es
repnz
add
push
loopne
aaa
jo
out
and
movl
jecxz
xchg
ds
inc
mov
inc
mov
xor
cmpsl
ss
popf
xor
fcmovbe
push
sbb
imul
loope
or
aas
faddp
insb
mov
or
cmp
rolb
add
mov
cmpl
push
sbb
fdivs
cmp
fistpll
int
stos
lods
mov
fsubl
jbe
nop
jb
test
pop
xor
push
jmp
mov
jge
jge
dec
in
push
mov
loopne
shlb
arpl
imul
jbe
mov
add
fdivrl
jb
push
test
xor
sub
inc
jbe
mov
mov
das
daa
mov
and
sbb
mov
add
imul
lcall
pop
inc
imul
stos
pop
mov
jp
or
jns
xchg
enter
xor
pop
inc
adc
lock
sti
repz
insl
sub
cld
push
js
sahf
lcall
addr16
ja
sbb
fidivrs
cli
movsl
cmp
std
jle
mov
cmpsb
mov
test
lods
cmp
outsl
cmp
in
xchg
xlat
adc
popf
push
dec
cmp
loopne,pt
add
jb
std
jge
push
lret
orl
stos
sbb
cmp
sbb
jecxz
xor
cld
inc
cmp
int3
fistl
aas
push
cmc
repz
or
fwait
test
dec
xor
rcll
cmc
arpl
pop
pushf
pop
inc
in
adc
or
push
mov
jo
and
or
jbe
shlb
dec
sub
or
adcl
dec
lods
loopne
mov
mov
xor
jge
popf
and
push
xchg
pop
jecxz
dec
mov
or
arpl
or
sub
into
stc
es
std
inc
and
ficoml
rcl
rcl
fidivrl
jmp
dec
imull
loop
out
popf
jmp
sub
sti
les
add
out
lods
pop
insb
nop
mov
lods
daa
sub
lea
ret
dec
mov
nop
arpl
ljmp
adc
mov
xlat
pop
push
subl
aaa
rcrl
jecxz
xor
xchg
sbb
ds
xorps
lahf
mov
arpl
inc
out
sub
and
clc
mov
loopne
cli
jb
in
mov
sub
push
mov
jb
repz
mov
movsb
and
mov
or
push
xor
pop
push
roll
jp
cld
xor
cmc
arpl
dec
add
nop
cmc
stc
stc
adc
pop
fidivrs
xlat
loop
shrl
cmp
ja
js
cmp
cmp
inc
jo
nop
jae
cwtl
fisubrs
pop
xchg
daa
pop
pop
loop
sub
mov
mov
fsubrs
add
sub
push
aas
or
mov
xchg
lahf
shrb
push
mov
subb
push
aam
pop
adc
adc
pop
nop
loopne
push
cwtl
fimuls
add
xlat
add
shrb
iret
insl
cli
cmp
dec
sub
or
push
xchg
cli
mov
nop
xlat
inc
in
mov
xchg
xchg
or
push
cs
ret
popf
outsb
test
movsl
cld
fwait
jbe
sahf
adc
and
rorl
pop
fsubrs
xchg
and
mov
popf
cs
push
in
xchg
cltd
andl
out
sbb
add
es
fcmovne
and
scas
leave
int
gs
fs
cltd
mov
cmp
shr
popa
jp
fsubl
lret
js
mov
mov
mov
push
push
in
jmp
cmp
lret
mov
test
xchg
or
in
fcomp
inc
test
mov
xchg
push
inc
insb
stc
pop
mov
aad
xchg
xor
imul
mov
fadds
pop
push
or
js
inc
xchg
add
xchg
imul
xor
sub
into
pop
lock
in
mov
cmc
rcrl
cmpl
mov
fwait
andl
xchg
sub
sub
pop
mov
rcrb
inc
lret
or
mov
mov
push
mov
outsl
inc
mov
sbb
cwtl
ret
aam
xchg
xchg
ja
mov
sub
idiv
jmp
ret
aaa
cwtl
cmp
fidivs
fsubrs
pushf
xor
cmpb
xchg
mov
mov
xlat
adc
mov
fcmove
jns
mov
push
jle
xchg
inc
or
inc
sbb
mov
pushf
test
enter
pop
subb
movsl
daa
inc
bound
xor
test
ret
jge
fisubs
dec
mov
push
mov
and
push
xchg
pop
aam
in
cmp
fwait
rorb
pop
or
push
xor
testb
mulb
iret
sarl
pusha
fwait
and
cld
jb
das
das
push
cmpsb
icebp
mov
into
xchg
xchg
daa
jg
cmpsb
les
insl
mov
jge
movsb
cmc
jne
sub
outsb
mov
addl
out
pop
cmp
jno
repnz
mov
xchg
push
inc
cmp
inc
aad
orb
add
pop
daa
out
jmp
hlt
rorb
inc
inc
idivb
repnz
xchg
and
xchg
pop
pop
cmp
fisttpll
xchg
jnp
inc
lock
aaa
and
cmp
or
xchg
or
into
aaa
mov
dec
filds
pop
clc
lea
lods
mov
addr16
xchg
rorl
dec
decb
fadds
nop
and
add
mov
out
js
push
int
rorb
fs
cmp
pusha
hlt
in
ss
pushl
out
lods
icebp
sub
ret
xor
inc
jmp
ficomps
xchg
xor
aad
inc
in
xchg
fsts
mov
imul
in
add
ret
or
xor
dec
mov
icebp
or
orb
push
ja
lods
pop
lcall
sbb
lods
in
xor
mov
into
int3
fbstp
xor
popf
lea
adc
pop
push
fs
repz
sbb
jle
fs
add
or
pushf
push
push
not
test
insl
sarb
scas
lahf
inc
sub
sub
jae
scas
and
mov
add
movsb
mov
movsb
or
xchg
or
push
or
sbb
push
adc
sarl
pop
cmp
push
mov
outsb
out
pop
fsubs
cltd
sub
aas
jle
aaa
xchg
ficoms
in
lea
shl
in
lret
dec
sub
shl
sbb
mov
push
jbe
xor
mov
cltd
out
dec
mov
dec
xor
xchg
xor
mov
out
cmc
xor
mov
std
in
and
dec
sarl
dec
push
rcrl
scas
sbb
enter
xchg
or
mov
sub
aas
mov
iret
mov
push
pop
fs
add
jne
adc
inc
repz
insb
mov
cmpsl
lret
jg
xchg
sub
fisubrs
sarb
test
pop
insl
das
scas
shrl
movsl
iret
jns
push
mov
mov
and
push
pop
scas
clc
cmp
incb
cmp
or
push
scas
bswap
cltd
inc
jae
mov
call
ss
xor
mov
mov
stos
mov
inc
cmpb
icebp
movsl
jbe
mov
inc
inc
or
sub
sbb
insb
xor
xchg
es
test
mov
dec
or
or
mov
sysret
push
shrl
jle
subb
or
lahf
inc
mov
mov
and
pop
out
out
inc
jne
mov
jno
mov
outsl
outsl
int3
les
push
cmp
mov
sbb
or
lods
popf
pop
fst
push
mulb
xor
add
sub
bnd
or
test
rolb
xchg
push
jle
sbb
cmpsb
pop
pop
in
cli
cmpsl
and
aaa
push
pop
jge
jmp
mov
hlt
adc
movl
repz
daa
imul
jnp
repz
cld
aaa
in
inc
lea
xor
mov
mov
out
mov
sti
mov
sub
fsubs
cmp
lret
sub
xor
mov
outsl
jo
sahf
push
or
xchg
push
rcll
cld
stc
cmc
movsl
sbb
out
test
cmpsl
xorl
cmp
aad
das
and
stos
in
outsb
jg
test
dec
out
imul
leave
xor
jge
enter
loopne
jmp
jbe
leave
sbb
fildll
pusha
sbbb
jbe
je
cmc
and
push
repnz
outsl
xor
subb
pop
cmp
stos
das
lock
mov
mov
xor
inc
xor
popa
inc
lcall
es
lods
adc
aad
scas
jge
jno
sub
jne
js
hlt
mov
ret
sbb
jmp
lcall
lret
scas
imul
sti
cmp
sbb
dec
cmp
pop
xchg
dec
test
out
je
add
cmp
or
adc
mov
sub
ficoml
test
add
push
and
dec
test
pop
lea
push
test
sbb
lahf
lahf
cld
lcall
fdivs
inc
fsubl
xor
out
out
das
sbb
int
pop
stos
cmpl
bswap
mov
ret
add
data16
out
repnz
adc
arpl
or
mov
push
fisubrs
xchg
fs
jne
inc
popf
bound
adcb
jns
adc
insb
shll
mov
pop
daa
repz
inc
mov
fbstp
and
xchg
sub
pusha
cmc
sbb
imul
xchg
or
test
push
rolb
int
sub
cld
push
cmp
xlat
rcr
clc
negl
pop
adc
lock
fnsave
mov
pop
lods
push
cmovnp
ss
xchg
sbb
clc
scas
mov
je
mov
xchg
sub
popf
decb
push
rcll
in
cld
mov
lret
insl
aaa
jnp
dec
jne
xor
mov
out
push
mov
sti
out
pop
fcmovnbe
inc
cmp
push
or
ffreep
cmc
insl
sbb
jns
push
in
lods
cmc
dec
loop
repz
push
and
orl
pusha
mov
pop
push
xchg
fldenv
cmpl
imull
out
push
cmp
lahf
pop
xchg
jae
and
arpl
jg
mov
xor
test
cmp
cmp
scas
insb
andb
sti
outsl
push
jge
cmp
pop
jne
sub
test
pop
fldl
imul
mov
add
cmc
repz
and
add
cwtl
and
aas
lret
sti
cltd
add
dec
lret
mov
pop
iret
jle
jmp
iret
sub
sbb
pushf
das
add
inc
cltd
in
mov
xor
adc
pushf
js
or
jnp
repnz
push
xor
sbb
mov
sbb
lea
pop
adc
aad
in
sbb
decb
je
mov
ret
fwait
and
xchg
dec
or
lods
pop
or
and
js
push
imul
push
stos
inc
mov
sub
je
stos
xchg
cli
daa
mov
movsb
add
mov
lret
dec
ret
jbe
into
call
sub
dec
lahf
add
pop
in
gs
xchg
icebp
insb
sub
in
inc
jp
pop
mov
in
inc
das
mov
dec
ret
or
ja
sub
cmp
mov
fadds
stos
popa
js
dec
pop
pop
jnp
sub
out
lods
jns
les
add
jl
mov
clc
js
popf
adc
mov
popf
adc
stos
pop
movsl
or
mov
sub
testl
cmp
je
inc
push
push
mov
cmp
aam
aaa
push
out
test
push
jp
and
xchg
pop
mov
es
mov
das
mov
push
mov
leave
scas
std
mov
mov
mov
jno
push
or
rorb
push
pop
cli
mov
jmp
push
lock
jg
hlt
mov
aad
bsf
hlt
jns
mov
daa
rclb
test
jl
cli
xsha256
cmpsb
xlat
adc
cltd
out
outsb
in
mov
mov
jbe
loope
cmp
dec
inc
loope
mov
pop
aam
jns
imul
test
inc
and
aas
lock
push
outsl
sub
leave
pusha
stos
sbbb
sub
adc
arpl
dec
and
push
pop
mov
lea
or
pop
testl
pop
mov
mov
xchg
pop
xlat
push
cmp
mov
por
into
and
jns
les
enter
fstpt
rorb
test
fildl
out
popa
jg
lods
dec
xlat
sbb
aas
inc
ret
pushf
push
fwait
cs
ret
das
lret
dec
or
popf
imul
sbb
xor
push
outsl
pop
sbb
lret
aad
sbb
cwtl
cmp
jno
xor
cli
sub
clc
or
clc
cmpsb
scas
iret
js
cld
cmp
mov
xchg
xor
mov
jbe
dec
add
cmp
in
repz
fmull
data16
mov
int
lods
and
movsb
pop
pop
setnp
lods
mov
adc
mov
fs
dec
mov
pusha
pop
push
insl
aad
mov
or
xchg
sbb
jo
mov
es
inc
dec
cltd
mov
repz
aaa
inc
mov
shl
push
dec
cs
xorl
sub
cmp
cwtl
and
outsb
mov
mov
mov
jl
in
mov
jl
jecxz
lock
icebp
mov
dec
fisttpl
mov
lret
jge
in
dec
push
jg
cmp
or
sahf
je
and
dec
sbb
and
inc
dec
push
jns
pop
and
mov
push
lods
mov
loopne
pop
loop
mov
fldl2e
push
outsb
lcall
in
mov
cmpsb
add
push
mov
jecxz
mov
xor
sub
mov
dec
test
cmp
scas
pop
mov
xchg
out
xchg
imul
jbe
jo
mov
js
push
fidivrs
jecxz
in
ret
idivb
jmp
dec
cltd
add
and
outsb
mov
xlat
and
inc
test
cld
mov
jecxz
inc
jne
jno
js
ljmp
xchg
scas
xchg
inc
out
add
xchg
sub
mov
inc
int
mov
add
test
out
jle
xchg
lahf
lods
lods
jmp
bts
pop
inc
fwait
adc
xchg
pop
push
jno
xlat
jmp
mov
popf
movsb
jmp
mov
mov
adc
add
sbb
popa
mov
popa
les
push
lea
jno
nop
addr16
stc
in
dec
or
xor
ljmp
repnz
lahf
dec
jbe
test
je
jns
mov
sub
insb
into
cmpsl
push
sbb
cwtl
imul
leave
push
push
cmc
pop
xlat
dec
jmp
inc
out
loopne
add
inc
fwait
dec
push
add
dec
jae
xor
mov
mov
cmpsb
fcmovnu
sbb
mov
imul
push
mov
push
xchg
mov
mov
aaa
roll
push
jg
sub
push
addr16
xchg
push
or
cmp
fsubs
inc
push
xchg
dec
popa
add
daa
mov
repz
clc
push
sarl
lods
shlb
clc
ds
fwait
rorl
xor
bound
ret
push
dec
mov
outsl
pop
int
or
jo
rcrb
lret
cmp
add
es
lahf
jge
movb
pop
cmp
leave
sbb
jmp
in
repnz
pop
xor
scas
sahf
fwait
aaa
jge
leave
xor
and
cmp
rorl
int3
das
push
add
mov
and
mov
or
stos
mov
dec
addr16
stos
in
movsl
dec
push
and
ret
pusha
mov
insb
js
and
jg
pop
mov
adc
xor
xor
lock
pop
push
cmp
mov
dec
aas
icebp
cli
mov
pop
sbb
xchg
pusha
movsb
inc
mov
mov
jns
test
cmc
out
icebp
push
roll
jo
aam
andps
call
out
outsl
push
scas
imul
jge
bound
sbb
push
add
cmp
fstl
cmp
lret
dec
add
xchg
mulb
addr16
mov
rorb
divl
lods
pop
push
sbb
ljmp
pop
or
dec
sub
inc
fidivs
mov
bound
out
sbbl
jnp
sbb
mov
mov
mov
sbbl
out
js
aas
roll
cmp
add
addl
jns
inc
inc
out
mov
stc
lcall
nop
inc
sub
stos
in
insb
addr16
jmp
lret
ja
and
lds
cs
xchg
imul
jp
aaa
jecxz
cmp
lods
inc
repnz
insl
sahf
mov
cmp
sbb
icebp
and
sub
cmpsl
inc
cmpsb
pushl
xor
pop
imul
aad
adc
es
jge
repnz
xor
lea
mov
ret
aaa
and
std
mov
xor
fcmovne
mov
leave
jmp
test
inc
jl
mov
sbbl
orb
cmp
in
aaa
cmp
lock
sub
push
mov
push
ss
add
mov
out
dec
loop
jmp
ret
clc
hlt
pop
enter
jno
inc
cmp
lahf
add
lods
mov
lods
popf
vpmadcswd
pop
sbb
pop
and
daa
push
xor
push
xchg
push
pop
aad
or
jp
pop
xchg
aaa
cmpsl
sbb
mov
or
cmovp
jno
add
bound
stos
pop
into
pop
push
das
sbb
cmp
out
inc
mov
in
les
xor
ds
cmp
clc
mov
ret
inc
ja
test
addl
push
jp
sbb
ret
add
pop
lahf
fistps
leave
inc
dec
les
cmpl
sbb
scas
imul
aaa
aam
sti
adc
addl
cmp
int
xchg
push
movsl
sub
pop
dec
mov
dec
or
dec
jne
or
push
xor
and
mov
addr16
rcll
xor
out
inc
pusha
inc
and
push
add
aas
sbb
mov
loopne
sub
mov
movb
xchg
fisttpl
sub
inc
loopne
cmpsl
mov
cmp
xor
mov
hlt
std
and
sub
xchg
fdivp
ja
xchg
sbb
pop
adcl
iret
mov
push
outsl
clc
arpl
iret
out
repnz
or
mov
pop
push
fisubl
sub
loop
mov
scas
mov
sub
cmp
or
mov
js
xchg
aaa
cli
jns
xor
loop
orl
aad
cmpsl
xchg
push
filds
pop
pusha
pop
divl
push
pushf
imul
xchg
xchg
push
ja
sub
ja
adc
lret
hlt
ficoml
icebp
aas
xlat
lods
outsl
push
xchg
jae
fsubrl
adc
int3
nop
int
ljmp
sub
cs
push
sub
lods
cmp
mov
cwtl
int
jg
mov
add
push
add
adc
lea
add
icebp
nop
das
dec
hlt
add
cmp
pop
out
das
fistpll
scas
jns
rol
xchg
cli
mov
inc
adc
sbb
outsl
sahf
lret
adc
add
daa
add
pop
add
push
or
inc
mov
fcoms
daa
xchg
push
and
arpl
add
call
sbb
mov
std
xchg
cmp
stos
push
std
mov
inc
mov
push
cmc
xor
sbb
xchg
insb
jo
mov
xchg
mov
bound
xor
cli
js
xor
and
dec
add
daa
iret
outsl
dec
filds
mov
pop
and
pushf
mov
xor
sbbl
adc
push
fwait
pop
dec
mov
mov
cmp
popa
cmp
mov
push
je
enter
stos
enter
and
insb
mov
dec
in
dec
push
rol
iret
and
sub
out
mov
push
xorb
movsl
xor
outsl
pop
xchg
leave
dec
or
loop
sbb
or
dec
dec
push
adc
sbb
mov
addb
sub
or
sbb
jb
jne
or
daa
fstps
das
cmc
pop
jge
fdivrs
cltd
fiaddl
mov
cld
and
mov
xchg
imulb
cmp
pop
inc
push
xchg
pop
push
add
jecxz
lock
call
and
insb
fbld
xchg
sub
xchg
scas
sbb
das
cmpl
inc
mov
add
movsb
mov
add
mov
std
sbb
popf
shll
dec
js
mov
scas
pop
cwtl
cmp
fildl
add
inc
xchg
xor
dec
mov
les
mov
inc
stos
jo
mov
adc
in
mov
inc
sti
jecxz
cmp
mov
mov
add
sub
dec
inc
cmc
test
scas
mov
sar
popf
xchg
adc
fistpll
das
add
xor
imul
pop
mov
scas
sbb
sub
test
lret
push
enter
jmp
loop
cmpsl
clc
iret
gs
mov
mov
pop
mov
sub
sub
jbe
inc
stc
dec
inc
adc
arpl
testb
fildll
push
or
mov
inc
sub
push
jne
xor
xor
inc
mov
out
sbb
and
pop
cmp
test
test
ficoml
in
imul
das
sbbl
outsl
add
mov
in
loope
cli
mov
outsb
je
out
jnp
insl
and
jmp
out
test
push
fiaddl
push
pop
mov
cld
add
popa
jle
in
jecxz
sub
jecxz
fistl
pop
imul
pop
es
mov
daa
or
out
in
repz
inc
push
mov
in
lds
addr16
push
mov
faddl
out
iret
mov
shl
lret
mov
jp
loop
in
jbe
mov
xor
call
lods
nop
sbbl
push
xchg
pop
add
loop
mov
mov
cmc
push
mov
lret
pop
mov
jno
cmpl
pop
lods
mov
sub
push
daa
fucompp
loope
and
adc
mov
mov
push
cld
aas
sub
inc
and
loop
jmp
fidivl
cmovp
sbb
stos
jecxz
out
test
test
jnp
mov
inc
sub
xor
je
lock
add
mov
sbb
mov
movsb
add
popf
xchg
test
in
in
sub
aam
or
cmp
icebp
inc
push
outsb
fmuls
sub
les
aad
inc
insb
cwtl
xchg
and
and
jae
in
push
and
xrelease
dec
or
pop
aad
push
inc
lods
or
xchg
lret
mov
enter
xchg
inc
in
fmuls
inc
ret
fs
xchg
adcb
fisubrl
lock
xor
xor
ss
movsb
mov
es
popa
add
inc
add
adc
ficoml
jecxz
sub
outsb
hlt
mov
xor
and
into
int3
lea
sbb
inc
cltd
or
aad
arpl
dec
std
add
pop
test
sub
int
cmp
loopne
mov
int
inc
daa
xlat
bound
fiaddl
ja
loope
push
jp
and
push
fldcw
lret
ljmp
pop
andb
lret
mov
adc
ss
cwtl
cmpsb
xchg
pushl
xlat
js
cli
xor
pop
add
pop
cmp
popa
nop
pusha
cmp
fs
push
test
sbb
sub
jne
outsl
mov
je
mov
or
ds
push
pop
inc
sub
int
testl
mov
imulb
mov
and
nop
xorl
xchg
pusha
inc
pop
cld
mov
push
ret
ret
xchg
in
movsl
dec
stos
ja
dec
push
jmp
loope
push
lock
sbb
cmp
mov
mov
jp
mov
and
testb
mov
icebp
aam
dec
stc
sub
fs
fistpl
jo
je
fimull
cmp
mov
push
mov
jge
out
js
mov
test
jg
frstor
jae
icebp
mov
and
push
adc
push
sbb
lret
xchg
jl
sub
push
mov
or
inc
mov
mov
xor
mov
xchg
out
lock
aaa
pop
inc
dec
xor
adc
shlb
dec
std
add
sbb
or
es
lock
push
sub
mov
fistps
push
adc
sbb
cmp
inc
xor
jbe
hlt
bound
aad
data16
subl
and
out
mov
sbb
mov
out
push
xchg
push
jae
mov
fbld
inc
sbb
lock
and
mov
inc
xchg
imul
es
push
fistl
and
xlat
stc
fdivrl
pop
cmc
sub
push
lcall
pop
mov
pop
or
daa
dec
outsb
rclb
in
mov
cld
xor
insl
jmp
lods
lds
shll
sbb
clc
leave
sbb
movsl
add
cmpsl
arpl
lods
imul
pop
stos
sahf
and
and
mov
fistps
adc
mov
outsl
arpl
dec
lods
mov
and
xchg
fwait
cld
mov
leave
jo
imul
idivb
adc
bound
dec
jbe
arpl
incl
cs
xor
addr16
push
out
xor
ljmp
inc
stc
les
loopne
insl
lahf
sub
mov
mov
les
add
cmp
ret
imulb
lods
ret
push
out
arpl
xor
add
dec
inc
icebp
pop
push
pusha
sbb
stc
aam
dec
jecxz
inc
pop
sub
fnstsw
xor
inc
add
pop
das
push
mov
cmp
mov
orps
in
out
aaa
aas
pop
das
out
sbb
adc
fcmovnu
dec
mov
mov
and
sub
dec
shl
jns
sub
mov
outsl
cmpsl
fcom
push
je
incl
ljmp
adc
cmp
pop
or
inc
int3
sahf
or
push
into
leave
xor
push
stos
sbb
mov
cmp
sub
dec
jbe
in
mov
loopne
int3
out
insb
mov
aaa
pop
sub
pusha
test
jl
xor
add
mov
xlat
scas
inc
sbb
iret
cmp
mov
lcall
xor
xlat
mov
arpl
movsl
add
nop
jno
add
cltd
xor
stos
nop
inc
xchg
jnp
int3
test
andb
mov
aas
adc
mov
pop
test
ret
sbb
popf
jno
mov
jnp
in
scas
cmp
mov
addr16
out
add
pop
and
rol
pusha
cmp
hlt
jmp
addb
jno
mov
mov
pop
pop
cs
lock
jo
dec
dec
call
adc
cli
cmp
mov
testb
sub
imul
loop
cmp
dec
pop
push
icebp
stc
cmpb
das
adc
test
imul
lock
sbb
push
pop
out
mov
in
orl
push
mov
push
or
pop
sub
push
mov
jns
xchg
addl
divl
stos
cmp
call
inc
pop
scas
lahf
nop
aas
stc
aam
movsb
test
mov
dec
lahf
sti
out
jb
xchg
sub
jo
cs
adc
iret
es
orb
xor
adc
bound
push
mov
repnz
fwait
mov
pop
mov
int3
or
xchg
pop
out
sub
mov
push
outsb
cmc
lahf
js
fdivrl
push
jmp
lea
sahf
add
test
andl
hlt
or
xchg
mov
data16
push
daa
dec
shll
bnd
push
daa
inc
dec
inc
fwait
jmp
stos
xlat
sarb
into
dec
sub
mov
cltd
mov
xchg
testb
lcall
xorb
movsl
mov
icebp
clc
mov
popa
out
and
sub
jb
jl
mov
pop
mov
fldcw
sbb
loopne
cmp
imulb
lock
mov
and
xor
push
dec
jl
in
sub
sbb
jmp
out
jb
int
mov
and
add
test
out
outsb
test
mov
sbb
pushf
rcrl
je
nop
bound
nop
dec
add
or
fdivrl
imul
cmpsb
xchg
shll
adc
sbb
mov
push
or
sbb
cmp
lcall
push
mov
in
mov
jnp
jnp
scas
pop
ds
mov
inc
jge
xor
out
outsl
imul
aaa
xorl
sub
mov
add
mov
cmp
out
aad
ret
in
jns
sti
loope
cmpsb
adc
ds
cs
sbb
xor
mov
pop
mov
adc
inc
jecxz
jo
iret
in
pop
out
enter
ficoms
and
or
jbe
jecxz
dec
jno
adc
inc
fadd
pop
jno
jecxz
lods
aad
xchg
gs
cwtl
add
call
sbb
cmp
cltd
or
test
mov
dec
sti
cmp
push
and
mov
lret
cmp
movsb
mov
add
inc
dec
and
sbb
fmuls
xlat
mov
cs
mov
cmp
out
sbb
jno
cmp
push
negl
inc
shrb
mov
and
sbb
cmp
mov
loopne
dec
xor
fnstcw
mov
dec
sbb
test
or
scas
insb
mov
push
bound
mull
ret
jno
insb
imul
lcall
dec
sbb
and
repnz
out
mov
mov
xchg
adc
xchg
pushf
out
and
out
pop
ja
pop
pop
jecxz
fldt
xchg
movl
sbb
test
fs
incb
cli
mov
pop
in
pop
fdivl
addb
xor
add
jmp
mov
sbb
sub
insl
outsb
push
push
pop
call
icebp
dec
scas
inc
out
xor
hlt
sub
push
jno
push
jmp
test
daa
add
aas
mov
add
outsl
cwtl
sub
enter
fdivrs
jo
insb
lods
daa
ret
pop
pop
stos
mov
lahf
and
add
mov
out
repz
shrb
sub
push
sbb
or
mov
jae
outsb
and
or
dec
popa
fstpl
adc
sub
out
or
ljmp
sub
mov
inc
jecxz
sub
movsl
outsb
arpl
xchg
aad
lock
test
and
nop/reserved
and
jno
dec
jo
xchg
cld
cld
jl
jecxz
pop
lret
insb
mov
daa
inc
push
jecxz
and
xor
mov
xchg
test
repnz
int
or
add
push
cmp
mov
rorb
daa
daa
adc
push
push
jmp
movsb
lret
xchg
popa
xchg
dec
insb
dec
inc
pop
das
mov
add
subl
jbe
sub
cmc
mov
xorl
and
sahf
bswap
ss
daa
aas
or
in
lods
cltd
push
and
insb
in
in
xchg
gs
sbb
jae
sti
inc
cmp
es
jb
push
jo
cli
jmp
inc
or
xor
dec
sbb
cmp
push
pop
dec
in
pop
and
dec
cwtl
cmpsl
into
jecxz
fmuls
push
mov
sub
out
test
push
mov
add
cs
add
adc
jnp
inc
fcmovu
jmp
insl
repz
ret
ss
or
lods
inc
jecxz
dec
dec
adc
inc
sarl
dec
add
mov
out
arpl
ss
ljmp
mov
push
push
jne
jnp
call
arpl
int3
out
inc
les
adc
xchg
ret
push
push
adc
js
cmp
cmc
vmovd
cmc
xor
pushf
shrb
sbb
pop
sahf
pop
inc
loopne
hlt
lods
inc
xchg
mulb
daa
leave
ljmp
ljmp
sti
dec
adc
or
jle
movsl
je
inc
xchg
std
out
pop
jbe
stos
repnz
jno
jmp
iret
test
dec
cmpsl
test
sub
and
jg
dec
cmp
mov
pop
xlat
fs
out
jmp
ret
test
fwait
add
inc
pop
sub
das
movsb
xchg
or
pop
stos
jo
icebp
cmp
adc
sbb
sub
unpcklps
popa
call
sub
mov
mov
jmp
outsl
out
stos
or
add
pushf
fistpll
and
pushf
out
adc
cmpsl
jo
mov
cli
xchg
stc
inc
loope
test
icebp
push
fdivrs
pop
pop
push
push
lret
sbb
hlt
xor
sbb
mov
rolb
pop
lahf
mov
and
push
mov
js
push
add
push
dec
pop
sub
pop
lock
ds
dec
xrelease
push
mov
jmp
incl
jmp
data16
or
loop
outsb
jl
add
out
xchg
scas
imul
inc
mov
lds
add
dec
flds
std
mov
orb
iret
mov
clc
xor
cmc
aam
dec
fbld
das
jp
dec
xor
mov
shll
xchg
and
vfrczsd
fldenv
mov
push
dec
mov
call
aad
stc
xchg
adc
jns
mov
mov
adc
mov
scas
imul
fsubl
loop
xchg
lret
ficomps
pop
mov
sbb
inc
leave
push
jmp
int3
add
insb
test
iret
rep
pop
ss
push
call
nop
pusha
xchg
xor
jne
arpl
and
cltd
ret
inc
call
xor
mov
sbb
fs
ret
mov
imul
xor
push
loope
mov
inc
dec
push
sub
push
adc
sarb
int3
mov
jo
leave
fists
inc
shlb
and
mov
sub
xchg
cmp
pop
jae
sub
fmuls
pmaddwd
pop
dec
mov
jmp
scas
push
dec
sarl
push
lea
pop
pusha
jg
fadd
adc
adc
bound
mov
jnp
sbb
in
mov
and
aas
add
or
mov
xchg
loop
dec
fisubs
fwait
out
xchg
add
dec
dec
add
sbb
mov
dec
pop
jnp
inc
inc
sub
in
or
cmc
into
mov
add
lods
xchg
mov
jns,pt
pop
ret
push
pop
lret
inc
pop
push
dec
mov
rcrb
jmp
mov
push
mov
popl
fisubl
movsb
sub
pop
movsb
popa
xchg
js
into
add
fcmove
shrl
out
jno
test
sbb
enter
xchg
dec
sbb
adc
xor
loope
aam
inc
into
repz
xchg
xchg
arpl
pop
fcmovu
bound
fmull
imul
cmp
add
jo
fisttpl
jbe
sub
mov
sbb
xchg
repnz
in
and
enter
or
stos
data16
xchg
ret
jo
nop
lret
pop
lcall
lret
sarl
pop
daa
pop
shll
push
inc
mov
push
mov
scas
in
push
push
xor
mov
cltd
aaa
pop
push
ljmp
insb
outsb
sbb
xor
mov
roll
das
test
insb
nop
sbb
push
lcall
fsubl
mov
xor
add
repz
jo
jnp
mov
and
ret
call
dec
adcb
cs
xchg
ja
dec
imul
dec
leave
pop
ss
cmp
pushf
jle
adc
mov
inc
add
lds
mov
lock
sub
leave
cmpsl
andb
mov
aam
jo
pop
subb
push
jl
push
mov
aad
out
fnstcw
jae
imul
insb
push
xor
ja
xchg
mov
iret
aas
popf
inc
lds
mov
adc
pop
dec
outsb
addr16
mov
xchg
mov
cmp
or
outsl
fwait
dec
jnp
dec
add
lahf
imulb
scas
adc
lret
add
mov
popf
jp
cmpsl
fucomi
icebp
fisubs
or
mov
mov
push
cli
push
xor
insl
call
imul
insb
xchg
stos
insl
test
cld
push
dec
js
cltd
ret
jbe
in
push
or
cmpl
or
cmp
inc
stc
sbb
scas
jmp
cmpsl
dec
xchg
sbb
cld
cmpsb
sbb
data16
cmpsl
je
inc
inc
and
lret
inc
leave
fcmovne
mov
sub
and
stc
dec
sti
icebp
xchg
lock
sbb
sti
jmp
rorb
jg
sbb
jns
mov
xlat
sarl
scas
xor
xor
xchg
mov
lret
mov
cmc
jl
sbb
mov
adc
mov
lcall
ljmp
cmp
shll
sbb
mov
sbb
loopne
xor
lods
call
cs
sti
mov
cld
add
jge
cmp
xor
ffreep
decl
push
add
stc
xchg
sub
fucomp
out
jae
into
scas
test
rcrl
imul
and
dec
mov
scas
push
arpl
or
sbb
add
je
sub
and
xchg
dec
inc
iret
jb
mov
mov
xor
rorl
das
mov
sbb
dec
push
inc
mov
fimuls
daa
sub
or
dec
fnstenv
mov
popa
lahf
xor
mov
test
call
jno
enter
stos
xchg
iret
das
cmp
dec
cmp
or
mov
jecxz
mov
test
pop
ret
js
mov
fistpll
mov
andl
fstps
cmp
or
sub
cmp
fistpl
or
lcall
push
cmp
fs
jle
daa
push
cmp
xchg
arpl
imul
popf
inc
xor
ss
xacquire
push
add
xor
cmpsl
in
jp
bound
mov
sub
loope
push
in
mov
int3
pop
movsb
mov
xchg
ret
adc
add
iret
xchg
cmpsb
das
jle
fs
add
repnz
or
and
test
gs
dec
inc
dec
adcl
add
mov
fdivs
shrb
cmp
mov
int
sahf
fdivrl
xor
dec
es
lods
mov
push
ss
and
notl
pop
lds
dec
xchg
and
xchg
xorl
ds
and
punpckldq
push
aad
dec
mov
jl
das
xorl
mov
and
aam
test
mov
popf
aam
mov
daa
ja
xchg
sub
add
aas
cwtl
jb
sub
cmpsl
sbb
xor
imul
xorb
lods
push
or
cmpl
cmpb
inc
add
lods
fdivr
pop
repnz
fidivrs
pop
pusha
sbb
ficomps
pop
xchg
clc
xchg
push
cmc
and
aam
xor
mov
enter
rorb
mov
jecxz
mov
scas
mov
test
add
jnp
pop
sahf
int3
dec
xor
pop
test
and
xlat
xor
test
movl
mov
sub
insl
inc
pushf
jnp
xor
mov
mov
mov
and
out
test
scas
es
out
dec
mov
push
inc
mov
outsb
decl
repnz
js
mov
jg
cmp
push
sbb
pushf
nop
xchg
cld
ds
repz
dec
cmpb
sub
push
or
mov
xor
loopne
pop
jl
push
incb
int
and
and
daa
aad
cmc
inc
addr16
fcmovnbe
xchg
mov
or
pop
dec
test
cwtl
add
mov
jg
sbb
addb
loopne
mov
xchg
push
das
ljmp
pop
leave
aaa
repz
dec
aam
sub
fs
sbb
leave
aam
scas
sub
mov
std
dec
pop
fmuls
pop
mov
xchg
jmp
or
and
mov
xchg
aaa
in
stos
pop
push
pop
sub
gs
stos
adc
out
and
ret
inc
mov
dec
push
or
xlat
xchg
shrb
xchg
stc
mov
add
scas
cmp
adc
sar
jbe
jae
inc
mov
pop
out
call
mov
popa
in
mov
jle
mov
into
mov
cwtl
push
nop
pop
das
sub
scas
pop
add
jo
mov
nop
test
sbb
cmp
dec
push
outsb
outsb
cmp
cwtl
adc
cmp
enter
loope,pt
loope
in
and
ficoms
aaa
rcrl
ljmp
inc
inc
jns
mov
or
mov
mov
sbb
call
lcall
adc
jle
bound
cmp
mov
mov
aad
and
push
lret
mov
enter
mov
test
arpl
xchg
mov
mov
repnz
mov
ficomps
mov
mov
out
rcrl
mov
and
fcmovu
or
jmp
dec
sti
in
movl
sub
inc
push
push
add
je
into
xor
bound
mov
cmp
out
bound
sbb
out
int
int3
mov
xor
mov
cmp
mov
imul
addl
mov
cmp
sub
ss
sub
test
cwtl
mov
cld
xchg
movsb
mov
xor
pop
xchg
mov
and
mov
and
ljmp
clc
shll
hlt
mov
enter
dec
pushf
add
lahf
ret
sub
cmp
mulb
addr16
std
out
xchg
shll
sub
sahf
mov
and
mov
nop
mov
pop
mov
jmp
stos
aaa
push
aad
inc
adc
shll
cmp
bound
ficompl
fsubrl
xchg
jle
mov
or
movsl
das
adc
imul
orb
dec
jecxz
bswap
lcall
mov
pop
arpl
fimuls
rclb
mov
and
adc
jecxz
pop
sbb
dec
push
pop
inc
mov
cmpsb
push
sbb
sbb
xorb
hlt
pop
ss
xchg
out
add
frstor
out
decb
test
pop
jg
sbb
mov
jg
in
lret
xor
mov
packssdw
jno
dec
sub
mov
fimuls
xorl
mov
in
out
jmp
cwtl
std
in
mov
jnp
push
mov
sbb
scas
or
and
xchg
test
pop
cwtl
clc
xchg
jae
xlat
or
dec
popf
fistpll
xacquire
mov
stos
test
sub
push
arpl
push
popa
scas
jle
test
or
sbb
xchg
adc
and
mov
repnz
mov
js
xor
das
cltd
mov
cmp
out
les
out
dec
adc
adc
adc
clc
outsl
insl
mov
push
xchg
sarb
mov
jb
insl
add
mov
adc
sub
je
mov
jp
test
push
les
rolb
dec
xchg
les
xor
mov
sti
push
mov
sub
pop
push
cld
xchg
jmp
push
into
test
leave
jl
push
jbe
inc
ljmp
fs
and
push
fwait
lods
sbb
pop
mov
or
sahf
inc
leave
test
les
pop
movsb
ja
mov
mov
pusha
cmp
pop
dec
dec
push
push
mov
add
pop
mov
dec
out
les
dec
lahf
mov
call
imul
dec
cld
cmpsl
fwait
es
lock
mov
fdivs
sub
xor
jl
into
imul
les
idiv
in
or
iret
push
rorb
jmp
xor
in
pusha
loope
popl
sub
aas
cmp
lds
jns
mov
inc
pushf
mov
mov
jnp
insb
jle
out
mov
addr16
pop
mov
movsl
lods
jbe
loope
xor
in
inc
sbb
rcll
sahf
mov
leave
xchg
cmpsb
fwait
jne
lock
xchg
or
push
sarl
in
jb
xchg
xorl
stos
sub
js
push
roll
xchg
cmc
sub
jmp
and
cmpsl
mov
loop
lea
lock
cwtl
ss
insb
scas
and
dec
add
addb
xor
ss
dec
leave
rcl
call
mov
lret
or
arpl
jp
push
sbb
mov
sarl
push
mov
add
mov
and
sub
pushf
pop
outsl
jmp
xchg
push
lods
jmp
pop
loopne
jecxz
mov
dec
insb
pop
push
mov
lods
cmp
push
mov
sub
in
les
shll
mov
cltd
cs
inc
adc
enter
shr
aas
movsb
or
push
fidivs
mov
sahf
push
fs
es
xlat
sarl
jno
imul
mov
ficomps
xor
lret
aas
je
test
jl
and
inc
aam
jo
sbbb
lret
insl
lods
mov
or
mov
in
and
mov
int3
add
mov
nop
test
cmp
or
xchg
lahf
pushf
fstpt
roll
dec
mov
pop
pusha
and
fmull
imul
dec
lea
aad
jae
test
enter
int
shr
dec
lahf
pop
sarl
stos
dec
mov
sub
mov
mov
out
cwtl
les
mov
sahf
cmp
and
xchg
push
jecxz
cli
lahf
mov
ja
dec
cmp
movsl
inc
mov
in
loope
popf
push
and
adc
mov
inc
push
or
loop
jns
jmp
mov
in
mov
mov
loop
bound
sbb
lret
clc
dec
rolb
imul
xor
lea
loope
sbb
in
xchg
sbb
or
jg
fisttps
sti
inc
dec
psubd
push
rolb
daa
mov
cmpsb
stos
xchg
in
mov
add
out
cmp
inc
or
mov
xchg
loope
sarl
insb
dec
addl
neg
mov
outsb
xor
jecxz
push
sub
jae
sub
mov
add
add
jl
inc
test
faddl
stos
test
divb
in
or
stos
mov
pop
jbe
js
hlt
ss
sub
xchg
mov
inc
mov
and
lods
cli
gs
mov
xor
mov
aaa
xchg
cmp
loop
xor
mov
xchg
push
sbb
pop
adc
ret
push
pop
imul
mov
lods
stos
cmp
cmp
add
daa
push
pusha
cmp
add
lahf
dec
pop
fstpt
mov
add
popa
out
and
mov
sub
push
inc
add
push
cli
and
jno
enterw
inc
fidivrs
mov
xor
sub
or
js
mov
mov
fdivs
scas
cmc
test
out
mov
push
shlb
loop
sti
push
out
aas
push
ret
push
sahf
mov
mov
add
fs
sbb
test
adc
mov
add
test
sub
mov
in
push
dec
sub
int
movsb
jne
cmpsl
movsl
and
in
sub
in
icebp
popf
dec
out
xchg
or
loop
fwait
repz
cmp
outsl
hlt
xchg
xchg
add
inc
jle
in
das
test
rorb
in
dec
bswap
inc
out
hlt
jmp
inc
pop
inc
sbb
mov
dec
lods
mov
or
outsb
inc
jg
outsb
cli
cmpsl
cmpsb
cltd
stc
sahf
aad
jns
mov
popa
jmp
cmp
stos
mov
pop
xor
and
pop
cwtl
mov
dec
out
pusha
or
loop
sbb
rol
flds
pop
push
xor
sub
cmpl
ret
sbb
mov
es
lods
sbb
sub
into
push
jg
aaa
push
lock
icebp
stc
icebp
outsl
mov
test
add
inc
pop
outsb
and
mov
rcl
and
daa
pop
inc
mov
jae
call
dec
out
js
jp
mov
leave
pop
and
dec
adc
mov
outsl
gs
in
cmp
lcall
jg
stc
rorb
add
cmp
out
xor
outsb
in
arpl
cs
jae
aas
lcall
mov
lcall
sahf
mov
or
scas
xor
xor
mov
hlt
mov
cmpb
out
dec
add
inc
imul
add
add
rcrl
add
js
inc
fwait
mov
movsl
test
sbbb
popa
daa
es
sub
dec
mov
mov
pop
int
add
mov
or
fimuls
loop
add
test
push
sbb
sarb
fisubrl
data16
sbb
es
jno
mov
jo
pop
mov
insl
cmc
test
sbb
jp
jb
popa
or
mov
icebp
mov
rcl
outsb
jecxz
sahf
test
sub
inc
idivl
loopne
cmp
push
cli
jmp
adc
loopne
cmpsb
and
mov
add
icebp
repz
loopne
loop
xlat
xlat
popa
mov
adc
pop
jmp
pusha
or
stos
mov
mov
fiaddl
stc
add
in
fisubrl
cmp
fs
cmp
nop
or
mov
mov
js
add
incb
test
mov
mov
jl
mov
fsubrs
mov
push
aaa
insl
bound
ret
jl
int
into
jp
lcall
mov
lret
mov
je
sbb
test
mov
cmp
xor
loop
xchg
mov
testb
jne
lahf
ret
inc
scas
inc
clc
pusha
std
adc
xchg
pop
stos
pop
mov
out
inc
cwtl
and
add
xlat
xlat
inc
js
nop
dec
call
and
cli
sbb
out
xchg
fwait
aam
call
mov
xlat
fcoml
outsb
push
adcb
pop
mov
scas
fidivs
inc
adc
pop
inc
and
mov
test
push
jo
mov
lds
xor
lahf
fists
fcmovnu
mov
add
push
cli
shll
jae
ret
outsb
daa
lahf
lret
iret
dec
mov
lahf
mov
clc
mov
shll
cmpsl
lahf
hlt
inc
push
and
ss
popf
dec
dec
rol
dec
imul
pop
jne
mov
mov
test
repnz
cmp
and
movsb
call
cmp
popa
and
inc
call
push
pop
fdivl
test
repz
rorb
cmpsl
test
int3
mov
fisubs
lds
js
rolb
mov
push
adc
sub
in
das
mov
in
cmp
mov
lret
mov
dec
xor
daa
adc
aam
bswap
stos
xcrypt-cfb
cmpsl
and
popf
dec
cld
xchg
das
inc
cwtl
pop
fbstp
sbb
pop
add
dec
xchg
cmp
sahf
mov
and
es
sub
mov
lret
data16
mov
popa
test
mov
xchg
xor
call
fsub
push
adc
dec
sbb
push
std
mov
daa
das
je
mov
push
arpl
mov
test
insl
insl
jle
dec
bound
iret
mov
or
js
add
or
cmpl
das
mov
movsb
and
jge
addr16
push
push
jg
cmp
js
inc
jnp
pop
dec
aaa
mov
mov
jg
mov
loope
jae
addr16
popa
add
lret
fwait
dec
mov
add
adc
dec
aaa
mov
jmp
and
int
popf
mov
lods
inc
mov
add
adc
jb
cmp
outsb
lea
or
sub
ret
mov
lods
and
adc
sbb
sarb
xor
xorb
add
jno
mov
insl
jmp
push
ja
inc
push
sub
movsl
add
loop
sbb
loope
gs
movsb
inc
xor
and
mov
test
mov
push
aas
add
mov
hlt
inc
mov
sbb
daa
jecxz
fidivs
in
dec
inc
mov
push
not
mov
jl
mov
mov
or
rcrb
fst
sarl
xor
jnp
lret
je
xor
lods
inc
dec
xor
pop
xor
dec
mov
pop
leave
mov
in
push
ss
mov
jae
xor
xchg
or
pushf
ret
pop
or
add
pop
jae
subb
or
and
cmc
not
mov
mov
pop
cmp
adc
insl
xchg
jo
mov
cmp
and
sbb
sbb
or
testb
xor
add
das
cmp
pushf
push
dec
pushf
ja
mov
cmpl
repnz
xchg
je
scas
lock
loop
mov
fnstsw
add
sbbl
leave
mov
xchg
jae
mov
xchg
ret
or
cmp
inc
hlt
dec
fsubrs
pop
aad
test
jge
mov
imul
mov
out
mov
xchg
in
mov
dec
loop
test
stos
adc
rcll
fsts
adc
mov
js
adcl
xor
frstor
cmpsl
dec
cmp
iret
cmp
jge
jge
mov
repz
push
pop
jno
inc
xchg
lock
add
xchg
pushf
mov
push
negl
push
and
sub
nop
cmp
xorl
stos
inc
mov
int
outsb
ret
jg
jg
int
dec
mov
rorl
sub
sbb
sub
aaa
mov
adc
xchg
mov
pushf
iret
in
es
test
iret
in
aad
mov
xor
jne
popf
insb
aam
jno
imull
sbb
mov
fildll
xchg
dec
xchg
jo
sub
jecxz
or
pop
sub
int3
out
sbb
inc
mov
stc
rclb
popf
mov
add
test
pusha
push
fldt
sbb
xchg
icebp
push
sub
jae
jno
fwait
in
mov
fdivs
jb
mov
xorl
adc
xchg
roll
scas
insl
xchg
mov
fwait
hlt
inc
adc
sub
push
mov
mov
xor
enter
fisttps
enter
and
or
cmpsb
lahf
add
leave
lods
lds
mov
sub
adc
dec
jns
scas
test
clc
mov
sarl
cmp
push
xchg
pop
dec
lret
sbb
sbb
shrb
push
inc
ja
subb
rorl
jno
push
movsl
or
mov
mov
mov
mov
int
add
mov
test
test
cmpsl
out
bound
test
je
add
add
mov
pop
mov
sub
insl
mov
and
sbb
push
sub
jp
pusha
add
jp
dec
repz
icebp
fwait
cmp
sbbb
push
xor
xlat
cmp
cltd
inc
jl
dec
aaa
sbb
test
ret
icebp
or
jl
add
push
cmp
pop
clc
call
pusha
push
fucomp
fldcw
mov
mov
sub
xchg
loopne
xchg
pop
add
jl
jl
mov
rol
jecxz
jle
in
pop
sarb
push
dec
jnp
int
roll
mov
mov
jno
xchg
sahf
adc
cmp
inc
rol
ficoms
inc
test
repz
ss
or
xor
mov
daa
push
mov
push
xor
jnp
data16
insb
add
stos
divl
fistpl
cli
mov
lds
sbb
dec
pop
data16
stos
xor
or
out
js
out
xor
dec
cmpsb
repz
mov
pushf
xor
cmpsb
xchg
je
mov
out
aad
popa
fsubs
leave
movsb
sbb
out
dec
or
fcoms
les
jg
adc
sub
stos
xchg
in
out
ds
and
inc
stos
push
push
std
hlt
jnp
adc
sbb
ss
mov
sbbl
call
pop
jne
in
sbb
push
icebp
inc
dec
mov
cmc
loop
jmp
mov
sub
ds
insb
mov
xor
pop
xchg
faddl
push
mov
add
aas
subb
sub
mov
inc
push
int3
or
es
sub
hlt
add
xor
xor
or
xor
rcll
clc
xor
jmp
divl
cmp
pop
sub
adc
popa
sbb
sbb
mov
das
mov
xchg
orb
je
sub
mov
cmpsl
mov
or
lret
cmp
in
data16
xchg
jns
dec
arpl
nop
push
cmc
loopne
mov
imul
push
mov
jl
into
subl
xor
jnp
mov
push
adcl
fisubrl
loopne
cli
rcll
or
and
into
cmpsb
push
add
pusha
mov
adc
cltd
test
jmp
xchg
and
cli
lock
sar
dec
mov
add
std
xor
jne
mov
sbb
sub
or
add
test
mull
push
pusha
lods
bound
adc
pusha
lock
movsb
pop
cmp
aam
cld
popa
aad
add
sbb
jp
pop
inc
outsl
cltd
test
jmp
sub
pushf
pop
xchg
inc
sub
mov
jno
cmpsl
dec
fsubrs
inc
stc
loope
push
insb
mov
mov
or
mov
pop
xor
xlat
jl
add
add
out
or
jns
jne
popl
mov
jb
dec
sub
insb
inc
pop
pop
jo
cmp
scas
sahf
lret
stos
jge
sub
test
sbb
jmp
mov
or
xchg
loopne
data16
sub
push
push
dec
dec
js
sub
and
icebp
dec
jae
fidivs
popf
cld
xchg
leave
sbb
iret
pop
mov
movsl
das
out
and
xchg
inc
xchg
xchg
ds
and
daa
push
jp
insl
cmpsb
arpl
test
xchg
fnstenv
sub
std
mov
jp
in
aaa
inc
inc
or
cld
cmp
mov
or
sahf
pop
ret
xchg
jne
lcall
add
inc
adc
stc
push
xor
test
add
sbb
mov
int
scas
jns
sti
addr16
lcall
movsb
stc
std
jo
adc
fdivs
cmpsb
loop
out
ds
inc
nop
mov
cmp
setg
cmc
les
pop
hlt
fisttpl
lock
adc
push
sub
xlat
cmpsl
xor
inc
mov
pop
test
lds
inc
push
cmp
xchg
mov
shr
inc
outsb
stos
ficoml
add
jp
pop
cmp
mov
es
push
outsl
add
mov
mov
push
add
pop
bound
mov
out
loop
mov
outsl
cmp
sar
jl
push
sbb
jb
mov
movsl
scas
push
mov
mov
pop
sahf
fxam
repz
pop
push
fwait
stos
push
or
rorb
cld
ljmp
push
lea
mov
sbb
mov
out
int
ret
sub
and
repz
ret
into
push
scas
mov
inc
aam
inc
jbe
js
orl
lcall
fcoml
pop
mov
rol
add
int3
jno
dec
and
lea
fcmove
mov
hlt
mov
decb
dec
xchg
ret
int3
inc
sbb
hlt
add
inc
scas
pop
cmpsb
scas
push
mov
jle
lods
sbb
and
xor
test
fiaddl
jb
sub
stos
sbb
mov
stos
cmp
inc
dec
dec
mov
fimuls
notl
jp
sbb
repnz
dec
clc
out
in
and
inc
push
leave
cli
sub
push
in
lahf
adc
stc
icebp
test
lcall
mov
xor
je
xchg
mov
add
out
cmc
xchg
fnstcw
dec
aam
cli
sbb
xor
adc
or
stos
and
dec
ss
subps
hlt
je
sbb
inc
je
xchg
outsb
mov
dec
sbb
iret
enter
addr16
stc
or
or
jge
jae
mov
jae
popf
mov
imul
mov
cld
xor
das
mov
cltd
fisubrs
dec
in
daa
fidivrl
mov
imul
fsubl
and
and
adc
in
pop
popa
cmpsb
cmp
xlat
xchg
cmpsl
in
mov
jne
mov
push
mov
jns
jecxz
pop
shll
mov
inc
or
test
sbb
insb
cmpsl
inc
or
pop
adc
push
lock
dec
out
cld
call
cmp
cmpsb
shl
lea
pop
sub
cmp
xor
jl
and
out
mov
pop
xchg
shlb
push
testl
or
cs
push
xor
daa
lock
jmp
pop
pushf
push
out
or
mov
pop
mov
into
fisttpll
scas
and
push
inc
ret
push
int
imul
xchg
jbe
shlb
xor
insl
fisubrl
push
mov
jmp
sbb
mov
arpl
lea
xor
inc
pop
adc
leave
pop
cs
sub
or
mov
ds
outsl
gs
imul
fsubs
pop
rorl
xor
popa
xchg
test
stos
mov
lret
cmp
test
jmp
inc
and
out
push
cmc
filds
jmp
push
lods
pop
sub
lcall
dec
sub
sahf
popl
mov
dec
test
bound
outsb
inc
movb
inc
roll
dec
xlat
hlt
in
cmp
nop
addr16
test
pop
pop
pop
dec
movnti
jno
cli
jno
cmp
xor
inc
iret
rcrl
adc
fcmovu
faddl
inc
fistpll
addr16
jns
adc
pushf
out
cmp
mov
je
pop
mov
and
int3
pop
mov
and
jmp
jecxz
jl
faddl
jp
mov
inc
push
cmp
mov
pop
test
lods
arpl
mov
inc
ficoml
les
daa
and
cmp
lret
mov
out
in
lods
iret
std
adc
add
mov
stos
loope
pop
cmp
mov
sbb
cmp
mov
stos
dec
shl
push
rcll
dec
xor
js
jl
xchg
xor
xor
or
or
cmp
jb
cmc
pop
imul
sub
xlat
cmpsl
ja
das
or
or
push
dec
pushf
or
mov
jae
xchg
idivb
inc
negb
stc
mov
fwait
push
pushf
mov
adc
jns
xchg
nop
jmp
mov
xor
or
mov
add
pop
mov
into
in
jmp
mov
xor
mov
sbb
inc
cmc
push
mov
lods
mov
mov
icebp
mov
rcr
fcompl
sti
push
xchg
js
out
pop
aad
lods
jne
loope
jp
in
mov
dec
gs
lods
adc
pop
scas
rcll
test
adcl
cmp
and
in
cld
popf
js
or
or
loop
xchg
add
int3
sbb
insb
adc
sahf
pop
add
std
outsl
sti
or
push
inc
sub
cmp
add
imul
and
cmp
cmc
sbb
or
imul
pop
jecxz
mov
jb
cwtl
mov
lahf
pusha
out
mov
jmp
pop
inc
outsl
iret
jnp
pushf
adc
push
ljmp
fdivrl
cwtl
dec
add
fsubr
je
je
arpl
xchg
dec
jle
and
or
loop
pop
mul
adc
aaa
cltd
xchg
lock
ret
pop
shrl
pusha
jge
mov
adc
sub
push
mov
mov
sub
shl
xlat
aad
sti
inc
jne
loop
cli
pop
jl
lods
mov
lret
scas
add
adc
mov
xor
pop
dec
dec
mov
and
inc
cld
lcall
cmp
pop
scas
mov
push
sbb
dec
call
lea
outsb
push
adc
insl
gs
popa
out
ficoms
inc
ror
and
arpl
dec
iret
and
and
jae
jecxz
bound
aaa
ret
dec
xchg
mov
jg
adcb
add
push
push
dec
sub
das
fcmovb
fnstenv
test
stos
icebp
in
adc
cmp
popf
xchg
arpl
inc
or
lahf
sti
inc
xchg
lods
jmp
dec
inc
movsb
lcall
xorb
xchg
popf
stc
and
insb
ja
mov
mov
lds
insl
das
lret
sbbl
xor
in
gs
pop
loopne
cli
outsl
jecxz
mov
mov
in
jg
mov
push
clc
imul
inc
push
jmp
and
jle
ss
push
jno
cmpsl
pop
inc
and
pusha
hlt
in
lea
dec
sub
sahf
mov
pop
xchg
pop
adc
mov
mov
inc
jnp
mov
mov
sbb
push
mov
std
xchg
lret
mov
jb
sarb
pusha
std
in
subb
push
push
mov
lds
hlt
mov
sbb
mov
es
lods
cmp
shl
dec
pop
cmp
cmc
xor
fldcw
cmp
bnd
clc
xor
daa
arpl
sti
stos
negl
sti
pop
jl
jae
xor
jmp
movsl
xchg
or
outsl
jo
sahf
cmp
cltd
pushf
sub
pop
or
fs
std
and
xchg
sbb
push
adc
mov
sub
and
add
out
xor
adcb
out
or
shll
jo
adc
sub
pop
js
jne
mov
lss
jns
notrack
je
xor
push
or
dec
in
push
add
outsb
add
xor
xor
push
fcoms
pop
cmc
in
push
mov
fiadds
into
inc
pop
test
mov
out
dec
lods
sbb
push
pop
add
lods
js
inc
enter
shll
fcomps
mov
or
adc
imul
add
push
add
outsb
jp
scas
or
mov
lret
fwait
arpl
adc
and
int
xor
popf
inc
loope
xor
push
rcrb
and
jne
xchg
jmp
push
outsb
mov
sbb
jmp
and
addr16
push
cmpsb
push
sbb
push
or
xchg
addl
mov
pop
mov
inc
in
aas
dec
push
cmp
mov
add
clc
cmp
push
mov
sbb
lret
dec
popf
inc
jb
and
or
dec
in
shr
aam
lock
lcall
orb
push
out
cmp
sbb
into
mov
xor
enter
ds
inc
push
sarl
pop
lods
mov
out
sbb
mov
inc
xchg
lds
add
idivb
mov
mov
cmp
push
sbb
push
adc
fdivrs
arpl
jbe
js
push
add
loope
cmp
pop
cld
sbb
pop
xchg
and
mov
addb
into
iret
shl
jne
xorl
or
insl
adc
mov
dec
les
bound
sahf
clc
inc
mov
sbb
gs
cmp
jb
push
scas
jg
sarl
pop
popf
adc
inc
dec
lds
repz
fidivs
mov
cwtl
mov
cmp
xchg
mov
push
jb
jne
loop
stc
jno
mov
mov
dec
adc
inc
into
cwtl
arpl
xor
lds
jp
stc
and
inc
mov
dec
loop
pop
dec
hlt
ret
sahf
nop
add
cmp
push
pop
xchg
test
mov
sub
aas
insl
adc
fnstcw
add
xchg
pop
xor
bound
in
stos
inc
scas
mov
out
lods
and
push
mov
stos
and
or
rclb
insl
test
popa
push
pop
fwait
jl
sbb
sbb
inc
shr
mov
ds
mov
cmp
push
jae
dec
and
jne
push
lock
mov
jp
lea
imul
divl
inc
push
push
aam
sahf
jp
jnp
adc
scas
lds
loop
push
add
pop
add
testb
mov
lea
add
pushf
insb
aam
repz
les
cmp
les
out
jno
jno
arpl
loop
adc
jecxz
popl
pop
mov
dec
or
loop
push
jne
notl
das
aas
sti
sub
xchg
sub
pop
mov
cmp
subl
ret
adc
loop
cld
loopne
sbbb
out
xchg
int
sbb
testb
fildl
sbb
test
pop
mov
jns
and
sti
pop
push
and
inc
pop
push
push
add
add
and
and
outsl
popa
in
out
xor
in
ds
bound
test
mov
imul
mov
sbb
mov
cmpsl
lock
out
cmp
jb
dec
jbe
or
hlt
pop
leave
inc
icebp
lahf
mov
mov
push
rcr
dec
cmp
xchg
dec
fcom
mov
push
cltd
xchg
push
adc
std
jnp
inc
inc
lods
ljmp
cmc
mov
insl
adc
xchg
loop
pop
push
into
pop
push
sub
adc
dec
ficompl
xor
lods
mov
stos
bnd
outsl
enter
push
adc
enter
adc
dec
inc
movsl
mov
jb
adc
fadd
push
ret
movsb
dec
mov
in
adc
dec
xorl
jle
jo
adc
mov
roll
ret
scas
cmpl
sbb
ror
pop
push
out
push
outsl
adcb
aad
sbb
xor
push
in
cmpsl
cmp
push
scas
sub
cmpsl
dec
cvtdq2ps
sub
addr16
jae
pop
imul
ret
push
xchg
aam
int3
cmp
rol
lret
testb
pusha
pop
cld
scas
dec
dec
push
xchg
or
push
in
gs
inc
out
dec
mov
decl
push
adc
fwait
shll
cs
jmp
lock
pop
inc
or
stc
mov
mov
mov
add
mov
daa
xor
xchg
lcall
test
cmp
rclb
mov
mov
les
out
and
repz
jge
repnz
xchg
dec
pop
add
int
popf
jae
jne
es
mov
pusha
jge
jmp
mov
fidivl
xchg
leave
addr16
and
jno
mov
or
push
xchg
out
cmp
push
push
cli
cmp
sahf
fidivrs
push
out
jg
fsubl
mov
scas
es
call
and
push
imul
sbb
push
icebp
adc
xor
aam
sub
fiaddl
mov
std
xor
aas
fldenv
sbb
pusha
dec
out
dec
cmpb
les
outsb
mov
lods
cmpl
subl
iret
push
push
ja
xor
sbb
mov
scas
rcrb
arpl
inc
xorl
xor
push
jle
test
jmp
inc
lock
rorl
lahf
push
mov
and
fdivrl
mov
push
je
divb
mov
movsb
add
push
push
push
call
push
imul
and
mov
fimuls
pop
popa
and
sti
mov
dec
inc
fs
push
into
mov
ds
xchg
inc
out
arpl
insb
inc
jnp
scas
jp
sbb
cmp
mov
jnp
mov
cs
std
pop
mov
jne
stc
cli
mov
add
loopne
pop
out
cmp
ds
popf
xor
mov
fldt
sub
addb
es
xlat
int
push
sub
pop
pop
sub
xor
sub
stc
sti
and
lea
dec
lods
adcb
scas
rclb
cmp
sbb
daa
adc
push
and
pop
push
push
jne
scas
pop
outsl
jnp
add
jg
push
jmp
imul
and
add
xor
jns
cmc
notrack
mov
lods
dec
test
pop
lret
pop
aam
leave
xlat
sbb
dec
pushl
adc
pop
test
dec
mov
push
ja
jno
pop
dec
ja
and
lods
sahf
jnp
adc
sar
dec
subb
test
jmp
sbb
push
mov
dec
fisubrs
lcall
ljmp
pop
pop
jmp
es
les
xlat
in
stc
push
sbb
stos
xchg
xor
xchg
in
or
movsl
and
xchg
cmp
leave
enter
push
and
and
pop
mov
loopne
sbb
jbe
jg,pn
mov
mov
sbb
in
sub
and
loop
mov
or
add
xchg
mov
inc
lahf
dec
adc
sbb
sbb
icebp
mov
faddl
test
inc
mov
ret
subl
mov
iret
js
mov
mov
push
movsl
notb
lock
xor
cmp
insl
lahf
inc
out
ss
jbe
push
inc
push
cmpsb
int3
pusha
push
cmp
rorl
loopne
sarb
xchg
fcoms
imul
test
sarb
mov
sbb
cmp
outsl
fs
jle
and
aas
xlat
repnz
mov
inc
arpl
pusha
shll
lock
insb
lahf
push
in
loopne
cld
jle
push
or
aas
cmp
add
xchg
xchg
pop
imul
sbb
adc
js
in
pop
jmp
mov
out
into
popf
test
iret
mov
ficompl
add
cmp
arpl
or
int
sub
cmp
push
adc
mov
or
jge
inc
ds
iret
push
xchg
imul
and
shl
pop
cmp
arpl
rolb
mov
push
pop
hlt
jecxz
lahf
push
into
jno
mov
push
test
xor
or
test
cmp
std
outsl
xchg
add
int
mov
stos
je
into
loop
add
punpcklwd
inc
fisubrl
adc
xlat
imul
insb
mov
mov
or
fidivrl
es
aad
adc
jge
cmp
clc
xchg
sub
dec
fidivrl
xor
cmp
inc
insl
addr16
and
aas
out
or
test
ds
adc
sahf
sub
lods
push
push
popf
or
dec
in
mov
cld
testb
aas
jb
lods
push
cwtl
and
push
xchg
adc
push
dec
les
jno
xor
fstps
out
sbb
and
std
pop
lods
jb
data16
sbb
out
sub
pop
dec
mov
into
jp
fwait
repnz
adc
inc
push
inc
xchg
cmpsb
jle
ljmp
sub
pop
cwtl
cltd
test
mov
adc
call
pop
mov
or
sbb
jl
cmpsl
xchg
test
into
out
jno
xchg
cwtl
mov
test
jae
addl
stc
jle
push
aad
shll
insl
out
enter
into
out
ja,pt
sub
push
lret
sub
call
jmp
sub
dec
mov
pusha
mov
pop
push
pop
rcr
loop
mov
sti
cmc
jno
nop
and
add
dec
test
mov
ss
and
lret
push
mov
cmp
cmp
jg
jmp
test
xchg
popa
out
inc
decl
cmpsl
sub
cmp
imul
rcll
or
pop
lret
mov
cwtl
das
dec
shll
imul
add
xchg
mov
cmpsl
push
mov
arpl
inc
fucom
sub
add
jp
fs
sub
ss
loopne
icebp
pusha
loopne
clc
int
aam
sub
iret
or
and
loope
rol
sub
popa
movsl
ja
popa
dec
inc
mov
ret
cmp
add
xor
or
pop
pop
lret
sub
addr16
rcll
daa
imul
jecxz
fisttpll
andl
dec
imul
mov
xchg
pop
sahf
fiadds
jl
and
push
mov
push
cmpsb
and
dec
ret
leave
pushw
xor
sbb
push
pop
pop
mov
nop
xlat
jns
adc
shrb
mov
add
push
adc
and
rolb
jp
add
mov
scas
jecxz
pop
pushf
push
in
and
sub
loop
or
xchg
popf
lret
mov
pop
arpl
js
and
inc
mov
pop
mov
js
fmul
mov
hlt
popf
or
mov
clc
lcall
cmp
hlt
jno
inc
mov
xor
inc
and
lret
xor
iret
fistl
cmpb
into
test
dec
mov
push
test
ja
insl
in
xor
cmpsl
push
outsl
sti
pop
xchg
push
and
das
dec
pop
pop
fsubl
sbb
mov
sarl
jnp
loope
call
movsb
sarb
pop
repz
sbb
fwait
add
adc
pop
mov
cmpsb
mov
popa
filds
ljmp
adcl
adc
xchg
xor
xor
dec
ja,pn
inc
add
push
xchg
and
add
insb
loopne
lahf
adc
sub
lods
test
push
fwait
jecxz
jl
jb
insl
jnp
movsb
pop
adc
inc
xchg
mov
pop
inc
out
jo
icebp
movsl
jbe
xchg
call
test
xchg
aaa
out
pusha
adc
pop
cmp
push
outsl
mov
cld
or
mov
lds
jne
xchg
add
ficoml
add
or
dec
ljmp
cmpsb
sahf
inc
push
movsl
in
or
mov
arpl
fiaddl
dec
dec
mov
ret
sub
push
sbb
fwait
cmp
daa
int3
imul
fldl
mov
ds
adc
sub
xor
xchg
mov
and
rcrl
mov
test
cmp
cs
dec
xor
mov
ret
imul
jne
mov
movsl
xchg
or
aas
cli
jne
cmp
mov
xchg
call
mov
movsb
or
xchg
sbb
mov
fwait
in
xchg
cltd
xor
dec
int
ret
cmpsb
into
in
aas
ja
fwait
jge
xchg
mov
mov
in
faddl
jmp
xor
js
lea
rol
cmc
mov
pop
jne
cmp
test
inc
aas
in
and
push
negl
sbb
inc
inc
and
dec
outsb
cld
in
loopne
mov
out
leave
lods
cmp
or
xor
add
cmp
mov
icebp
test
jo
mov
ds
in
cwtl
mov
adc
lods
dec
outsb
push
mov
cld
xor
addr16
jo
mov
movb
fs
jbe
jns
jg
push
movsl
or
aas
lea
dec
pop
daa
iret
xchg
and
in
pop
cmp
in
cmp
addr16
sub
sbb
popf
push
shrb
ret
lret
sub
cmpsb
cli
fadds
mov
mov
out
mov
fmul
jno
adc
adcl
mov
hlt
outsb
xor
pop
cmp
jecxz
pop
lcall
pushf
and
jo
mov
pop
adc
fildl
add
in
inc
divl
dec
stc
xchg
rolb
mov
push
pop
arpl
in
clc
ret
rorl
push
xor
lea
ja
outsl
mov
pop
cmp
repz
xor
fstps
push
jne
arpl
jne
rcrl
xor
adc
aaa
das
cmp
pop
mov
push
push
cmp
dec
leave
jns
cmc
ja
outsl
inc
imul
dec
lea
push
out
fcomps
and
test
xor
test
int
mov
jo
pushf
stos
aad
xor
sarl
mov
cs
or
xor
mov
mov
jne
jecxz
iret
lcall
gs
mov
inc
sub
sbb
jmp
pop
stos
pop
mov
mov
daa
sub
mov
mov
jae
pop
xchg
int
imul
push
adcl
nop
dec
fwait
dec
push
nop
sub
test
xchg
dec
or
imull
stos
push
adc
mov
mov
inc
mov
and
pop
maskmovq
idivl
loopne
jl
test
and
pop
and
adc
pop
in
outsl
cmp
out
stc
insb
clc
aam
mov
jns
roll
imul
out
pop
and
xor
mov
stc
pop
out
das
sbb
xor
xchg
repnz
pop
loop
cmp
sub
and
add
dec
dec
sub
cmp
xor
lret
das
xchg
mov
enter
imul
and
cmp
sub
fnstenv
test
mov
adc
pop
jb
and
out
int
push
add
lea
mov
in
out
and
sbb
sub
in
sbb
in
jecxz
jp
cmp
das
sbb
sarb
push
jge
imul
pusha
pop
imulb
xor
mov
add
stc
std
mov
out
push
and
insb
dec
filds
insb
sbbb
fistps
mov
cmpsl
cltd
mov
out
cmp
xchg
pop
maskmovq
testl
in
or
inc
ja
lahf
lcall
xchg
popa
out
aaa
and
cmpsl
adc
movsl
pop
inc
push
rolb
movsb
gs
or
add
stos
adc
push
sbb
pop
add
mov
lret
scas
fucom
jne
les
adc
xchg
sahf
stc
jmp
gs
fnstsw
cmpsl
stos
inc
adc
mov
jnp
add
xor
mov
dec
xor
mov
xchg
das
lods
idiv
push
out
sub
pop
addr16
mov
xor
mov
movhps
dec
fs
pop
pop
addl
rorl
jbe
mov
push
fs
mov
xor
movsl
xchg
sbb
ljmp
cmp
dec
cmp
jo
pop
out
insb
sbb
mov
xchg
loope
test
cmp
push
rorb
fcom
or
xor
iret
pop
test
pop
and
sahf
in
sub
adc
push
xor
mov
adc
pop
loop
inc
sti
adc
in
orb
mov
inc
ror
fists
mov
cmpsb
loopne
in
sbb
lods
jmp
jne
dec
pusha
leave
inc
adc
ficoml
shrb
int
ja
adc
popa
inc
clc
inc
fstl
inc
push
das
scas
mov
and
dec
pop
pop
lahf
push
stc
jge
xchg
dec
rcrb
mov
test
push
addr16
dec
stos
fisttps
inc
push
dec
inc
dec
pusha
jecxz
loope
mov
push
jb
mov
rolb
add
pusha
gs
jns
popa
xchg
cs
jo
loope
inc
cld
or
xor
inc
pop
fisubrs
jl
out
adc
jnp
xchg
clc
jecxz
mov
scas
insl
lea
sub
cmp
xlat
push
pop
fdivr
loope
jmp
lahf
mov
movsb
out
mov
cmp
movsl
pop
lcall
inc
sahf
cltd
inc
mov
and
lahf
scas
enter
test
lahf
mov
icebp
nop
leave
insl
cld
sub
cmp
pop
cmp
adc
cmp
push
fsts
aas
iret
push
add
dec
in
leave
xchg
jle
or
xchg
lock
sbb
and
ret
fs
adc
test
xchg
pop
mov
adcl
imul
sbb
data16
daa
cmpsb
inc
inc
sbb
popf
dec
dec
jle
dec
inc
notb
cmpsb
aad
testl
dec
push
sub
push
ss
mov
adc
repnz
xchg
and
xchg
les
sbb
fadds
shlb
loopne
hlt
cmp
mov
sti
cmp
jmp
inc
sbb
xor
sahf
mov
dec
xchg
mov
pop
xor
outsl
adc
scas
fwait
ss
sub
mov
dec
inc
pop
and
cmpl
lea
sub
and
lock
imul
lret
nop
mov
cmp
dec
pusha
dec
mov
push
and
dec
dec
add
dec
push
mov
ss
mov
inc
xchg
rcrl
lds
lahf
sub
jo
pop
ret
out
lea
cld
jmp
cltd
ret
or
lock
add
jbe
lds
jmp
outsl
mov
push
jnp
cmp
mov
mov
js
lahf
inc
or
mov
adc
or
dec
or
mov
jecxz
int
mov
cwtl
in
xchg
into
xchg
push
xchg
or
mov
adc
jb
mov
cmp
jle
pusha
mov
out
xlat
in
lods
div
fs
test
xor
add
push
in
decl
push
cmpsl
add
notb
mov
pop
and
insb
dec
sbb
mov
fidivs
dec
lea
movsb
stc
pop
mov
push
je
jg
push
orl
mov
jl
mov
jg
call
in
pushf
xchg
cmpsb
cmp
adc
dec
rcrl
test
or
and
pop
pushf
out
dec
dec
cmpb
ret
out
lret
mov
fwait
adc
cld
jg
shrl
das
insl
test
rcl
ljmp
xchg
xor
mov
pop
test
scas
sti
and
xlat
and
int3
or
test
insl
push
mov
outsl
outsl
adc
iret
dec
sub
cmpsl
jnp
aad
inc
dec
fnstsw
jb
shlb
jmp
ds
pop
das
repnz
das
dec
imul
jl
aad
adc
push
cs
out
mov
xchg
cwtl
stos
push
jns
lds
push
jno
add
sub
sub
lock
mov
inc
pop
cmp
rolb
dec
xchg
sbb
loope
pusha
sbb
incb
pop
jb
int
jmp
push
xchg
cmp
mov
test
into
add
into
mov
mov
rcrb
clc
aam
stos
and
pushf
mov
stos
or
in
pop
inc
xor
aam
or
xchg
push
mov
or
ljmp
fs
jns
pusha
pushf
cmp
icebp
xchg
inc
or
arpl
icebp
imul
lods
xor
pop
mov
mov
movsl
js
jns
in
mov
push
mov
popf
enter
cmpb
inc
sbb
loope
ret
mov
loop
arpl
adc
xchg
fwait
adc
lcall
mov
xchg
lret
scas
jnp
mov
pop
outsl
adc
gs
adc
aas
sbb
and
sarb
dec
test
push
pop
xor
dec
sub
incl
aaa
and
call
mov
out
enter
call
push
jb
ljmp
les
pusha
fisubrl
push
and
sbb
hlt
mov
mov
arpl
cld
or
mov
inc
jbe
rdmsr
sahf
ret
cwtl
jecxz
mov
xchg
mov
hlt
xor
bound
cwtl
mov
dec
cmp
inc
mov
lret
xlat
fnstsw
std
int3
clc
mov
jae
inc
xchg
adc
inc
or
sub
enter
mov
repz
or
fnstcw
or
add
shl
aam
jecxz
pop
push
xchg
adc
js
stc
pop
cmp
pop
mov
push
addb
cmpsl
roll
icebp
mov
add
lret
rcrb
xchg
mov
push
adc
push
loope
or
das
push
lock
stos
test
bound
jmp
sbbb
xchg
sub
pop
jmp
test
pop
and
fdivs
sbb
lods
xchg
pop
lret
int
cmpsl
sub
ja
out
mov
hlt
in
cld
cltd
sbb
cmp
cmp
mov
xor
lea
imul
sub
sbb
mov
lcall
scas
sub
jns
cmp
mov
cmc
addl
pop
or
dec
pop
adc
movsb
sbb
mov
push
fwait
mov
dec
adc
dec
or
sub
shl
inc
cmp
pop
jnp
mov
imul
in
enter
jo
or
lds
sti
movsb
xchg
xchg
mov
cmp
loopne
sbb
out
mov
mov
mov
and
mov
add
enter
sbb
xchg
and
js
cld
lea
push
mov
or
divl
pop
lea
push
xchg
stos
test
lock
into
imul
mov
mov
mov
je
jno
mov
push
jo
jp
push
adc
es
sub
stos
divl
repz
sbb
sub
jo
scas
add
or
sbb
lds
in
add
imul
imul
sbb
ja
pusha
adc
pop
mov
nop
mov
imul
jge
push
pop
or
rolb
sub
scas
sbb
in
mov
test
sarb
cmc
stos
jo
out
les
dec
add
mov
jecxz
adc
xchg
inc
cmp
push
mov
notb
mov
push
and
sti
or
mov
orb
push
add
subl
fiadds
sysret
jecxz
adc
add
daa
jns
scas
inc
adc
pop
sub
cmp
je
inc
popf
adc
pop
scas
mov
lahf
fnstsw
jns
loop
jl
push
or
mov
pop
mov
add
pop
lods
loopne
sub
adc
jo
push
or
cmp
insl
jle
std
cltd
mov
mov
cld
int3
hlt
stc
fwait
ss
sti
sub
xlat
xor
daa
jl
sub
inc
aam
dec
inc
fadds
push
test
inc
loopne
dec
lods
dec
fisubl
int3
jle
adc
call
mov
movsl
mov
fwait
loope
mov
sub
shll
jmp
xor
stc
out
push
mov
mov
scas
adc
repz
mov
or
cmp
gs
push
push
lock
fs
in
lea
out
pop
sub
lods
add
dec
dec
cld
sub
push
adc
aas
push
jge
in
jno
xor
pusha
nop
lcall
jae
cmpsb
ret
bnd
enter
jmp
jmp
inc
mov
incl
es
filds
imul
rep
inc
insl
mov
adc
jnp
fisttpl
sbb
adc
mov
lcall
aaa
enter
mov
sub
add
dec
xchg
and
inc
and
repnz
out
jmp
adc
cwtl
dec
stc
cli
les
push
es
xchg
mov
mov
icebp
adc
scas
cli
mov
add
push
mov
inc
cld
jmp
cmp
add
mov
dec
push
pop
add
jno
out
mov
pop
dec
popf
int3
ficomps
mov
sub
inc
push
push
push
out
adc
stos
sub
or
les
adc
inc
xor
fdivs
movsl
jl
stos
fists
add
jecxz
ds
cmp
repnz
inc
push
mov
cltd
jmp
rorb
pusha
push
jb
cmp
outsl
ljmp
mov
stc
jl
lcall
fwait
nop
in
inc
adc
ret
add
sub
lret
dec
aad
sbb
and
add
loopne
arpl
das
jbe
lods
add
bound
jp
insl
dec
mov
or
rclb
fnstcw
mov
outsl
jno
inc
xor
add
int
outsl
idivl
pop
lods
imul
cmp
dec
lret
pushf
jae
test
test
addl
push
nop
std
mov
rcrl
jmp
pushf
inc
scas
xor
ficompl
test
in
inc
ja
sub
sysenter
add
add
mov
cltd
test
es
outsl
fdiv
data16
jne
push
pusha
lods
negb
sub
sub
test
cmpsl
les
iret
jmp
adc
mov
insb
add
cmp
pop
pop
rcrl
ja
mov
cmp
movsb
in
mov
dec
js
int
cmpsl
add
ja
mov
ret
mov
or
xchg
pop
fldenv
cs
psubsw
addb
pop
stos
push
out
data16
xor
push
jnp
mov
xchg
loope
outsl
or
movsb
adc
loope
add
mov
aad
repz
scas
popf
inc
sub
xor
fldt
xchg
sub
mov
sbb
sub
pop
push
adc
pop
xor
test
mov
mov
jg
ss
pop
popw
shll
sbb
sub
popa
mov
mov
add
cs
push
enter
add
pushf
gs
call
pop
loop
cmpsb
mov
adc
xor
jl
dec
stos
push
sti
xor
mov
dec
icebp
xchg
and
push
mov
push
pushf
mov
cmp
mov
les
sti
rcr
add
xchg
sub
inc
push
mov
iret
popa
push
out
cmp
and
mov
pop
mov
dec
in
adc
inc
das
inc
sbb
sbb
fistl
mov
inc
sub
scas
xchg
gs
inc
inc
imul
or
aaa
das
nop
cli
xlat
mov
sti
or
call
pop
push
cmp
xchg
mov
leave
sti
sti
scas
cltd
pop
jp
fs
imull
divl
shlb
pop
pushf
sbb
stc
jns
sbb
xor
xchg
pushw
pop
dec
int3
mov
sbb
bound
imul
dec
or
mov
scas
sbb
add
inc
int
xchg
je
mov
cmp
test
inc
mov
fcoml
movsl
mov
loopne
divb
lea
icebp
mov
fisubrl
adcb
jmp
pop
fwait
xchg
fistl
fisubrl
or
lret
pop
int3
mov
out
test
loope
inc
daa
ljmp
js
jmp
and
mov
xchg
pop
scas
popa
ret
ret
mov
repnz
pusha
add
es
insl
sarb
cmp
inc
sub
into
lea
mov
je
mov
xchg
or
mov
push
add
clc
mulb
push
sbbl
mov
adc
out
adc
jg
icebp
add
pop
sub
xor
pop
mov
adc
and
rcll
mov
pop
addb
int3
sbb
add
lcall
pop
hlt
js
push
push
pop
push
les
jmp
push
pop
add
insb
inc
lock
mov
jmp
movsl
cld
xchg
and
and
movsl
adc
push
clc
xor
cli
pop
aaa
pop
cs
sbb
xor
fnsave
push
shr
sti
add
mov
ret
inc
mov
loope
xchg
cmc
loope
ds
sub
jmp
sti
out
dec
jae
pusha
mov
shll
push
arpl
push
and
xor
not
sub
inc
dec
std
imul
mov
mov
daa
repnz
aas
xlat
mov
sub
sub
sbb
cmp
js
dec
mov
fidivs
incb
xor
dec
xor
push
push
cmp
add
sti
add
mov
out
cltd
or
lods
mov
mov
test
rclb
nop
in
fnstcw
sub
and
orb
mov
mov
cmp
in
dec
enter
jb
inc
jge
fcmovnbe
in
movsb
xchg
sbb
jne
dec
pop
jae
decl
mov
mov
mov
fcoms
mov
pop
out
fsts
jmp
test
mov
fdivs
mov
aam
out
addr16
fistpll
bnd
sbb
mov
mov
push
out
lcall
jne
clc
and
insb
call
jns
jae
gs
movsb
adc
lret
sub
dec
pop
push
outsl
mov
out
add
jmp
cwtl
aaa
push
pop
adc
aas
stos
inc
lods
dec
out
adc
or
in
aaa
jae
lret
cmp
iret
lret
test
mov
movsb
xor
popa
cmc
test
push
pop
repnz
shll
sub
mov
int3
mov
mov
add
xchg
push
in
add
bound
push
add
xor
inc
subl
jmp
dec
and
cmp
dec
scas
push
lea
push
sub
mov
jnp
arpl
xor
mov
hlt
add
xchg
into
xor
aad
cmp
das
outsl
pop
or
in
pop
sub
popf
adc
nop
xchg
leave
pop
jae
add
or
scas
fidivs
jns
mov
sbb
jns
cmp
pop
cs
add
mov
sub
mov
mov
mov
mov
mov
pop
test
mov
int
adc
in
mov
stc
push
mov
into
xlat
push
rorb
mov
mov
or
or
bound
jmp
in
ret
adc
fs
cmp
data16
repnz
mov
mov
mov
and
dec
inc
ret
out
and
test
pop
xor
sub
push
add
sub
pop
out
lahf
mov
push
pop
cli
xchg
fistl
or
rorl
insl
jne
ss
jg
adc
std
pushf
jl
call
push
in
pusha
movsl
inc
mov
push
or
sub
push
jle
cmp
xchg
fists
mov
stc
push
test
int
imul
xchg
cmp
inc
pop
mull
mov
and
pop
cmpsb
ja
xchg
iret
push
xor
push
pop
dec
pop
add
in
pop
in
cmp
xchg
orb
inc
jmp
dec
push
out
and
stos
mov
sub
xor
add
and
call
mov
sub
push
and
sub
std
rorb
xor
imul
or
add
sbb
dec
mov
pop
shl
movsb
pushf
and
ss
mov
jmp
aam
and
js
xchg
test
call
push
shrl
cld
cmp
add
lcall
pop
lock
push
mov
sbb
mov
sti
cmpsb
repnz
mov
out
daa
inc
stos
imul
lret
or
mov
dec
insl
test
cmpsb
adc
popf
ficompl
push
pop
sub
add
mov
jne
adc
inc
ljmp
popa
push
or
adc
fnstsw
ljmp
stos
fcmovnu
negb
mov
hlt
mov
inc
pop
hlt
dec
sub
cmpsb
sub
mov
repnz
loop
push
hlt
add
scas
push
mov
sub
addr16
lock
adcb
cli
jb
add
out
pop
mov
jnp
xor
je
ss
arpl
push
stos
setge
adc
dec
mov
loope
push
bound
fsts
ret
mov
and
clc
push
ror
pop
push
js
push
pop
pop
xchg
addb
jns
movsl
imul
mov
cmp
adc
pusha
sarb
cs
mov
and
dec
loopne
adc
stos
cmp
in
imul
xchg
jb
insl
add
sub
inc
mov
je
lea
lret
fisubrs
ja
xor
mov
jg
push
std
lds
or
and
xchg
out
mov
xor
pop
test
mov
shll
and
inc
loop
out
sti
xor
or
or
cmpsl
xlat
dec
add
adc
in
mov
pop
push
sarb
add
add
dec
push
cmp
xor
mov
jge
in
mov
pop
xor
xchg
iret
xchg
cmp
in
insl
test
mov
repz
xchg
stos
jl
inc
and
jae
inc
cmp
mov
enter
sbbl
cs
in
jns
fs
mov
mov
cmp
mov
pop
cmp
stc
pushf
out
jmp
in
mov
sub
xchg
sbb
mov
jnp
icebp
call
or
mov
mov
in
mov
and
addb
scas
mov
cld
and
pop
xchg
fwait
pop
aam
jnp
idivb
jmp
jo
add
mov
xor
sti
add
inc
movsl
dec
xor
das
test
dec
mov
cmp
bound
jge
loope
std
repnz
pop
icebp
sub
xor
scas
xchg
mov
ljmp
mov
addr16
xor
into
stc
out
push
xor
iret
fimull
ljmp
sub
cmp
jbe
push
out
cld
sbb
ds
xor
cs
push
ljmp
mov
lcall
mov
dec
xor
add
jecxz
jecxz
sbb
sahf
mov
jg
mov
pushf
lret
inc
idivb
in
mov
xchg
insb
arpl
addr16
mov
push
in
int3
push
jno
push
xchg
pushl
push
xlat
mov
pop
fcomps
jns
xchg
cmp
ret
inc
repnz
mov
and
negb
cmp
out
dec
test
xchg
shlb
mov
repnz
xchg
or
lcall
lea
pop
loop
int
call
sar
inc
push
lods
sbb
adc
das
fwait
das
cwtl
sbb
and
jno
popf
adcb
add
mov
lock
xchg
sbb
out
sub
fcoms
lock
xor
lret
jne
das
mov
rep
rcrb
dec
jo
jb
push
push
in
pop
cmc
lahf
jne
push
jp
jecxz
jl
and
xor
jmp
mov
xchg
cli
ficoml
out
push
push
repnz
mov
xor
lcall
aaa
xchg
sarb
das
jo
aam
xchg
dec
xor
popf
and
jmp
icebp
into
jmp
popa
xchg
pop
js
fisubrl
adcl
push
cmp
jb
les
rcll
ret
cmp
scas
leave
clc
test
jae
pop
jo
dec
dec
jae
lods
mov
inc
push
inc
adc
or
ud1
ja
sbb
xchg
fs
xor
out
and
sbb
lea
mov
das
xchg
push
sub
stc
add
sarb
aaa
adc
cmpsb
ja
jmp
cmp
or
jge
lret
data16
dec
xor
lds
lret
into
push
enter
loop
xor
xchg
data16
mov
pushf
push
mov
mov
mov
shrb
xor
adc
call
rorb
dec
hlt
insl
and
adc
and
inc
sub
and
daa
pusha
dec
xchg
xchg
std
pop
fiadds
cmp
jnp
iret
inc
test
scas
mov
std
pop
push
or
int
mov
pop
das
into
pusha
pop
add
cwtl
fwait
popa
jl
flds
leave
test
aas
lea
inc
push
mov
lods
pop
mov
dec
out
and
xchg
sbb
mov
mov
xor
adc
imul
push
or
jp
scas
ljmp
loopne
test
iret
insb
mov
mov
data16
movsl
push
mov
dec
xchg
push
loop
add
call
dec
jb
nopl
fs
mov
pop
outsb
or
sub
rorb
or
js
bound
lock
aaa
jge
dec
scas
not
or
xchg
xchg
bound
scas
test
mov
bound
adc
test
negl
fld
jo
outsb
aas
push
stc
mov
sbb
bound
dec
push
or
fs
aas
push
jge
sbb
aam
sarb
rorl
movsb
mov
or
push
sbb
popa
cmp
adc
bound
mov
mov
inc
inc
and
in
mov
jbe
imul
nop
out
aaa
xor
lret
test
or
dec
jbe
les
mov
repz
stos
dec
mov
ret
out
mov
loopne
out
sbb
sub
ret
dec
xchg
leave
push
push
jbe
jl
cmp
fs
rclb
lret
adc
es
jne
lahf
es
je
std
leave
or
cmpsl
mov
xor
hlt
fsubrs
ss
cmp
add
icebp
and
push
cwtl
iret
sbb
insl
adc
jns
sub
and
stc
in
ss
faddl
sarl
adc
lods
inc
jecxz
or
out
xor
ss
dec
and
pop
xor
aam
pushf
mov
mov
pop
nop
in
repz
jbe
and
hlt
ficompl
cmpsb
jmp
out
ss
or
addl
gs
sarb
lods
xchg
inc
cmovno
mov
lret
mov
sub
adc
push
mov
mov
ds
or
inc
cld
aaa
cmc
inc
or
fnstsw
dec
push
add
mov
jge
jne
mov
cmp
push
xchg
aaa
jmp
push
stos
dec
xchg
repnz
add
stos
cmp
insl
push
jnp
test
ljmp
gs
mov
stos
xor
daa
lret
add
dec
or
push
cmp
sbb
sbb
adc
imul
sarl
sbbl
push
pop
sbb
pop
inc
xchg
sti
mov
jle
and
dec
int
or
jnp,pn
dec
jns
sub
stos
int3
add
subl
adcl
out
ror
aad
std
or
cltd
jle
jo
lods
hlt
sbb
push
jnp
jo
movsb
cwtl
push
mov
call
daa
lret
sti
and
cmp
pop
and
sbb
je
ja
insl
cmp
mov
dec
add
in
sub
loope
mov
add
adc
ss
mov
bound
adc
movsl
and
les
xchg
mov
in
sub
push
inc
xor
sbb
call
cld
gs
and
js
stc
mov
addb
mov
lret
test
cld
cmpsb
mov
cmp
jns
add
fldenv
arpl
pusha
imul
subl
inc
movsb
faddp
addl
fs
mov
testl
mull
ds
jns
mov
sub
sub
and
adc
push
mov
add
mov
out
inc
hlt
xorb
add
outsb
mov
pusha
xchg
out
add
loop
and
outsl
aam
outsb
icebp
inc
clc
outsb
pop
fstpt
mov
mov
mov
dec
fcoml
stos
dec
add
mov
lods
ds
test
sbb
add
popf
xor
lods
mov
pop
mov
decl
pop
add
repz
jns
mov
dec
pop
dec
mov
dec
mov
test
mov
xchg
test
xchg
scas
lock
jo
ret
loopne
insl
adc
jle
xor
out
jbe
mov
das
std
int
inc
mov
pop
ds
jb
pusha
stos
mov
adc
cmp
adc
xor
cmpsb
test
lods
push
ficompl
mov
sahf
nop
je
cltd
push
mov
scas
pop
movups
and
sbb
shrb
lret
push
jno
jnp
hlt
mov
repnz
and
idivl
stos
push
subl
lret
les
sub
outsl
push
pop
andl
xor
mov
sbb
xchg
int
les
jecxz
mov
inc
xor
jge
call
popf
addr16
mov
pusha
jp
aas
ljmp
xor
fyl2xp1
out
push
dec
jne
insb
mov
shr
aam
cmovne
sbb
inc
pop
inc
dec
mov
xchg
sbb
jbe
fdivrs
xor
repz
aaa
leave
js
shr
xor
cmp
or
dec
push
and
or
xchg
push
or
mov
sahf
stos
and
loopne
or
xchg
xor
aas
test
adc
aas
repz
ret
cmp
jle
cmp
adc
rcl
mov
add
xor
divb
xchg
fs
loope
stc
xchg
jmp
jbe
pop
mov
inc
mov
xchg
sub
test
inc
outsb
icebp
fsubrs
push
jge
pop
and
repnz
ret
xchg
out
in
not
inc
gs
dec
push
cmpsl
jg
stos
dec
push
fsubr
test
mov
inc
stos
push
movsl
subb
fsts
dec
mov
mov
jne
sti
bound
push
mov
out
testb
push
mov
aad
daa
lods
cs
push
pop
call
xor
test
std
add
fdiv
fsubrs
loop
inc
inc
mov
insb
push
xor
das
inc
jo
iret
cmc
xlat
jae
push
dec
cmp
mov
mov
add
add
jg
pop
imul
mov
movsb
inc
xchg
into
in
ret
dec
and
out
xor
sub
aam
fucomip
andl
je
push
je
jae
cltd
xchg
loopne
or
xor
mov
cmp
or
cli
and
pop
push
cmp
pop
int
jae
stos
cmp
lret
pop
mov
jl
cmp
xchg
pop
mov
xchg
aad
push
mov
jne
mov
push
je
cmpsl
les
cmpsl
cltd
mov
cwtl
js
cmp
dec
insb
inc
pop
in
daa
iret
enter
in
xchg
dec
dec
incl
add
inc
mov
inc
in
lret
dec
sahf
dec
mov
leave
mov
int
jp
sarb
cmp
mov
lahf
outsl
ds
push
push
nop
or
pop
scas
pop
clc
mov
or
inc
xorl
imul
fidivrl
repz
sub
jl
sbb
dec
inc
inc
outsl
lods
mov
sahf
xor
int
ds
mov
push
sub
sbb
sub
push
loope
iret
cmpsl
shll
stos
jmp
cs
push
or
lcall
ret
clc
iret
jns
jbe
push
mov
jae
movsl
pop
cmp
imul
pop
sub
fucomp
es
cli
sbb
ja
jp
push
xor
pop
jb
mov
add
pop
clc
jg
mov
inc
out
fs
push
xor
xor
and
out
jg
pop
push
push
dec
pop
and
cmp
adc
test
fbld
jl
sahf
cmpsb
test
int
and
jns
mov
imull
cmp
jne
inc
movsl
cmp
movsl
shlb
xor
mov
sub
lock
pop
ss
xor
push
fninit
push
cmp
in
in
adc
xchg
mov
mov
rolb
fwait
dec
add
iret
ja
iret
imul
jo
adc
or
xor
pop
repz
push
adc
daa
inc
mov
xchg
into
cmp
xor
mov
mov
dec
fmul
lret
xchg
imul
xor
sbb
pop
pop
mov
es
pop
insb
and
cmc
gs
mov
xor
mov
test
mov
nop
loopne
aam
cmp
inc
mov
aas
adc
inc
popa
mov
pop
loopne
dec
cmp
jns
push
sub
adc
inc
outsl
cmp
xor
inc
shrl
mov
xlat
lret
loop
inc
xchg
push
ficoml
cltd
mov
in
call
mov
leave
scas
sub
jbe
cmp
sbb
push
dec
cmpl
test
dec
dec
or
es
jg
cmp
popl
xor
int3
dec
scas
test
sub
cmp
mov
xor
mov
popa
in
jl
enter
sbb
pop
dec
cmp
stos
mov
xor
jp
addb
xchg
lcall
dec
cs
add
cwtl
fwait
cmp
shll
dec
ljmp
xor
fnstcw
ds
hlt
lods
lods
aad
push
inc
pop
push
mov
test
sti
lahf
xchg
cmp
sub
outsl
dec
rorl
pop
scas
stos
jo
mov
insb
scas
dec
ficompl
dec
call
fst
push
adc
lcall
jecxz
cs
jb
jns
dec
dec
iret
and
sahf
je
outsl
mov
inc
xchg
jbe
cwtl
aaa
push
lods
cmp
test
lods
andb
push
or
ficomps
mov
addr16
testl
mov
adc
inc
add
xlat
daa
cmc
ret
cmc
ds
imul
push
fsubl
fnsave
adc
stos
jg
scas
jns
aaa
mov
cltd
inc
mov
xchg
lock
push
mov
mov
cmp
add
aam
mov
inc
xchg
add
je
into
xchg
call
sub
call
mov
bound
push
popa
sbb
leave
into
xlat
add
xchg
popa
ret
push
dec
into
push
aaa
lds
mov
cmpsb
mov
mov
insb
sbbl
and
stc
nop
loopne
push
lret
dec
xlat
xchg
or
pop
jmp
jnp
cmpl
out
add
add
ret
lods
jecxz
adc
or
inc
jae
sbb
jg
mov
ret
cmp
xchg
sub
sub
jnp
hlt
add
scas
or
daa
push
punpckhwd
jae
inc
pop
arpl
push
jl
lods
lret
std
pop
dec
insl
movsb
lds
idivb
inc
pop
push
negb
pop
js,pn
ja
or
sub
fidivl
fidivrs
push
cmp
xchg
dec
or
ljmp
mov
cmp
stos
repz
mov
aad
mov
inc
sti
xchg
xchg
in
ret
pop
dec
insl
mov
je
sahf
adc
js
adc
xor
out
lea
popf
xor
xor
bound
mov
hlt
mov
inc
popa
xlat
insb
fdivrl
pop
out
dec
fstl
into
xlat
getsec
ds
xchg
dec
push
adc
test
test
loope
test
call
sbb
or
dec
xor
add
mov
push
cwtl
stos
sub
push
lods
notb
addr16
repnz
punpckhdq
lods
vgf2p8mulb
stos
and
xchg
dec
pop
test
add
mov
and
adc
call
cmpsl
add
lods
lds
scas
add
out
jge
in
clc
das
add
xor
scas
sbb
and
add
inc
push
bound
xor
pop
cld
pop
subl
lahf
or
pop
ret
and
jg
xchg
js
lds
inc
in
add
add
mov
pop
sbb
mov
sbb
int3
add
sbb
jge
inc
hlt
pop
mov
cld
ss
out
push
mov
jecxz
aas
or
mov
inc
mov
cltd
cmp
ret
shll
pop
mov
mov
pop
int3
loope
mov
stos
sbb
pusha
arpl
int
push
sarl
sbb
push
and
iret
loope
xchg
orl
mov
push
lret
ret
aam
jbe
call
push
push
pop
test
xchg
data16
push
jno
lret
pop
dec
fs
xchg
iret
xchg
cmp
sbb
inc
call
cmp
mov
dec
rolb
and
xor
xor
or
mov
mov
int
mov
and
dec
clc
push
xchg
push
int
xchg
scas
and
xchg
and
mov
rcrl
leave
addr16
frstor
mov
jp
loope
test
imul
ss
adc
sub
pop
xchg
jmp
lea
dec
mov
call
sbb
pop
xchg
test
jle
xchg
arpl
mov
adc
shll
cltd
adc
push
gs
out
jg
dec
sarl
out
and
dec
lret
lds
inc
aad
iret
rcrl
and
sbb
sbb
cmc
xchg
add
push
sub
mov
pop
cmp
in
lcall
pop
push
add
xchg
pop
out
push
icebp
mov
mov
ds
test
movsb
mov
dec
clc
cmp
inc
sub
mov
jne
dec
sub
jle
xchg
pop
push
jns
in
mov
pop
sbb
push
adc
dec
mov
and
cmc
mov
jge
out
popa
rol
dec
test
inc
mov
push
mov
or
iret
push
xlat
ljmp
pushl
mov
mov
mov
rclb
leave
fxch
lcall
mov
pop
scas
xlat
stos
xchg
jne
dec
pop
push
and
scas
stc
mov
inc
pop
jecxz
ds
fwait
out
xor
test
and
lods
inc
je
mov
vmread
fs
das
mov
loope
inc
cmp
imul
mov
and
dec
arpl
sub
xchg
es
out
mov
jo
out
in
jns
repnz
push
xchg
out
xor
sbb
int
push
xchg
dec
push
sub
jecxz
pop
cmpb
xchg
jne
aaa
sub
popa
lcall
sbb
scas
inc
shrb
jns
lods
jns
dec
into
xchg
sbbb
and
cmp
test
sbb
out
push
popf
dec
xorl
sbb
test
sub
insb
loop
xchg
mov
mov
push
adc
mov
imul
scas
test
lock
mov
cltd
dec
mov
mov
mov
mov
dec
xchg
ds
jg
lds
ffree
pop
push
aas
add
inc
insl
mov
divb
jle,pn
jb
fiaddl
enter
sbb
stc
in
lret
sarl
jle
dec
jae
lret
lahf
scas
cld
stos
ja
js
iret
movsl
nop
mov
cli
push
jne
in
lock
nop
cs
and
push
cmp
mov
mov
fs
icebp
mov
test
xchg
pushf
xchg
inc
mov
jae
out
mov
addr16
fcoml
ja
xor
inc
arpl
push
adc
in
rcr
leave
cmpsl
lea
pop
sub
adc
cmpsb
cmc
repz
xchg
jnp
hlt
out
push
fcmovne
and
add
and
outsb
sti
popf
adc
xchg
aad
inc
arpl
stos
or
icebp
sub
repz
jl
cmp
call
sbb
add
xchg
fildl
mov
sbb
xchg
fxch
push
and
dec
cmpsl
jbe
imul
lock
xchg
or
aam
divb
jg
cmpsl
pshufw
fucomip
jne
and
add
out
and
shrl
or
hlt
lock
xchg
mov
inc
xchg
pusha
inc
orb
in
ret
add
and
test
mov
xor
fldcw
xchg
adcl
jl
and
xor
fldl2t
and
icebp
arpl
cmp
mov
movsl
pop
in
cli
popa
mov
into
int3
add
jge
mov
add
int
outsb
aam
inc
imul
jno
int
js
and
arpl
sub
or
fwait
testb
fcmovbe
cmpsb
sahf
add
or
xor
push
into
test
push
stc
adc
out
dec
rcll
jge
call
fbld
dec
scas
ss
in
out
pop
sub
xor
pusha
cmp
mov
xlat
call
movsl
jle
xchg
rorb
jb
iret
xor
xchg
jnp
xchg
movsb
cwtl
js
xor
mov
loopne
mov
xchg
mov
pushf
mov
jle,pt
leave
andb
popa
das
cltd
ds
test
lea
mov
incb
mov
hlt
fiaddl
jb
xor
mov
cmpsl
add
cld
pop
mov
inc
rolb
push
into
or
push
jg
pop
add
adc
cmp
fidivs
jnp
pop
aam
fbstp
jg
leave
cld
dec
iret
adc
jno
fdiv
xor
rorb
ljmp
orb
sbb
dec
popf
fsubp
stos
adc
push
pushf
js
cmp
arpl
jnp
and
mov
outsl
and
add
nop
cmp
adc
add
pop
jne,pt
cmp
xchg
out
inc
je
jge
push
lahf
rorl
fdivs
or
sub
xchg
repz
pop
pop
cmpsb
lcall
or
jne
pop
mov
in
xchg
stc
arpl
das
fs
xchg
push
push
or
inc
pop
pop
mov
cmp
jmp
mov
arpl
gs
cmp
test
fists
mov
and
stc
inc
pop
pop
dec
xchg
xchg
sub
jae
sbb
mov
sahf
out
push
sahf
jae
aaa
decl
lea
dec
jmp
aad
xchg
push
stos
sub
scas
nop
addr16
fs
or
dec
into
xchg
sub
lret
movsb
das
movsl
cld
dec
mov
pop
adc
popf
cmp
jmp
cmp
add
pushf
scas
inc
or
test
test
push
inc
jns
pop
push
lcall
js
jge
fnstsw
pop
xchg
xchg
dec
ret
mov
mov
mov
mov
lods
mov
imul
sub
cmc
call
insb
test
ds
push
stos
jp
sahf
in
int3
shll
sarb
jbe
xchg
xlat
xchg
addl
divl
xchg
jne
jo
push
adc
mov
inc
adc
movsb
jae
sbb
cmc
mov
xchg
pop
lahf
imul
adc
lret
cmp
sub
movsl
into
inc
fs
push
fdivrs
mov
pop
subl
pop
cltd
xchg
xor
and
cli
aaa
adc
push
sahf
and
aam
movsb
lret
xchg
jno
cmp
or
and
in
loop
movsl
clc
pop
ret
adc
and
lret
add
mov
test
mov
out
jo
jmp
pop
or
shl
aam
fwait
jnp
notl
in
das
addr16
push
jg
imulb
push
and
je
shrb
les
outsb
jb
ficompl
mov
clc
es
dec
icebp
xchg
rcl
cmpsl
je
push
movsb
cs
xor
push
cld
xchg
mov
xor
dec
mov
and
sub
jno
mov
sbbl
sbb
sub
or
xlat
cmpsb
jo
fstl
push
notb
aas
mov
dec
mov
push
mov
and
jne
js
and
shll
stos
add
stc
adc
jg
int
test
dec
and
icebp
xor
cltd
pusha
pop
loop
sbb
gs
dec
lods
or
aad
xor
push
mov
out
jno
lret
je
add
inc
rorl
sbb
insb
sub
or
add
jns
jo
ja
daa
xorl
and
leave
dec
push
roll
jb
movsl
sub
loopne
inc
dec
fistpl
inc
fstp
fisubrl
ds
push
hlt
xor
sub
test
stos
jle
fldt
andl
and
out
insb
xchg
icebp
pop
les
icebp
arpl
jnp
js
push
ret
loop
mov
icebp
std
stos
cld
jecxz
sbb
nop
xor
or
mov
repz
pop
sbb
mov
ljmp
jo
xor
jb
ljmp
xlat
or
xlat
insb
adc
pop
jae
arpl
cs
push
push
pop
fistpll
cwtl
repnz
and
movsl
lock
sbb
cmp
pop
aaa
inc
orl
lahf
and
sbb
cmc
lea
rolb
mov
sub
sti
hlt
cmp
xor
xchg
arpl
arpl
rcr
int
mov
mov
fwait
dec
aam
imul
into
fisttpl
mov
mov
mov
cld
rcl
mov
push
push
dec
aas
mov
pop
int
sub
test
imul
or
dec
mov
push
shrb
mov
popa
push
rolb
test
test
jecxz
push
jg
fs
sbb
fwait
inc
or
out
xchg
ror
mov
mov
or
dec
mov
adc
cli
aas
mov
mov
test
stos
push
mov
stc
pusha
dec
cmp
sbbl
stos
int3
aam
add
push
ja
cltd
push
sbb
dec
lea
cmpsl
cmpsb
jl
jne
inc
pop
adc
test
sub
lcall
test
inc
aam
xor
test
in
dec
dec
das
movsl
adc
scas
test
ljmp
pop
decb
in
or
jb
ret
imul
xchg
arpl
mov
push
push
pop
lea
stos
rep
mov
xor
les
dec
jnp
dec
or
push
mov
xlat
cli
or
adc
push
cmp
jp
ss
repz
popa
lret
fisttpl
test
in
xchg
dec
rol
dec
aad
dec
ljmp
push
cmc
jnp,pt
scas
ret
mov
cld
cli
push
insl
dec
jp
lahf
sub
mov
repz
pop
stos
pop
xchg
pop
das
es
sahf
insb
and
push
les
notb
ja
and
fcompl
leave
inc
push
inc
inc
movsl
push
fwait
adcb
clc
fstpt
enter
or
loope
into
or
in
lea
std
aad
rcr
das
popa
jne
jg
jp
into
shrb
scas
fs
mov
mov
xchg
sub
lock
sbb
mov
or
mov
or
xchg
inc
sbb
push
push
popf
lds
mov
xor
mov
or
adc
xchg
push
out
mov
ds
or
fwait
add
outsl
mov
in
bound
jne
xchg
mov
dec
mov
mov
xchg
fildll
movsl
push
push
pop
sbb
ret
adc
cwtl
sbb
stc
scas
cmc
and
adc
shlb
xor
stc
movsl
arpl
mov
ds
add
fsubr
ficoml
pop
adc
inc
shrl
aam
in
mov
xor
dec
sub
inc
cld
and
mov
inc
jmp
xor
shlb
rolb
dec
mov
mov
fdiv
jg
push
add
cmp
sti
mov
sub
lret
icebp
push
xor
out
sbb
std
rcll
aas
out
jle
pop
mov
ds
lods
add
dec
or
inc
jno
lds
xor
xor
fdivl
xchg
lahf
inc
fs
orb
push
push
add
mov
test
cmc
popa
sub
jbe
mov
cli
stc
js
push
dec
add
pop
or
adc
iret
stos
ret
clc
faddp
ds
es
bnd
loopne
test
or
jmp
mov
cmc
xchg
inc
je
xor
adc
add
mov
aas
jns
stc
mov
sti
cmp
xor
jg
loope
stos
dec
iret
jle
addr16
in
push
adc
jbe
fistpl
inc
jmp
out
iret
lds
pop
ds
cmp
repz
rol
xchg
dec
mov
arpl
lcall
movsb
test
pop
add
mov
and
or
out
aaa
loopne
in
js
dec
pop
mov
inc
xchg
jo
adc
mov
cmp
jle
push
enter
cltd
sub
cmp
test
xchg
sbb
imull
pop
nop
jle
movsb
push
inc
ret
push
imul
lea
ret
cltd
xor
rcll
or
sbb
jno
inc
sbbl
popf
call
roll
testb
mov
mov
test
pop
ljmp
shll
div
mov
jae
insl
loopne
sub
std
jecxz
int3
mov
test
mov
cmp
mov
sub
mov
mov
fwait
mov
pop
push
mov
jge
xchg
and
stc
and
sub
xor
sar
rol
sub
ficoms
mov
jb
stos
addr16
daa
ret
ret
fisttps
mov
bound
aas
pop
cmpsb
xor
sub
dec
mov
ds
sub
lret
leave
mov
pop
ficomps
mov
lret
dec
repnz
jge
stc
push
test
fildl
inc
or
push
mov
push
cmpsl
add
mov
test
cwtl
push
mulb
in
pop
adcb
xchg
mul
test
in
dec
scas
xchg
dec
jp
pop
bound
dec
bound
out
push
push
dec
add
cmp
int
pop
cmp
lret
sbb
in
ret
je
add
jae
push
iret
fcmove
data16
sti
mov
fwait
mov
lock
mov
gs
push
push
ret
pop
mov
fdiv
outsw
pop
xchg
loopne
inc
and
sahf
ficompl
jmp
aam
test
adc
sbb
jo
push
ret
xchg
xchg
xchg
loope
adc
xchg
in
and
inc
cmp
inc
fucomp
fbld
add
mov
aas
pushf
sbbl
adc
icebp
pop
in
sbb
mov
jmp
in
mov
movsb
fldt
pop
mov
fildll
addb
mov
bound
inc
xchg
mov
xchg
aam
cli
dec
pusha
xor
fsts
inc
ja
ds
sbbb
sbb
xchg
arpl
clc
xchg
loopne
int
fadd
cmp
sbb
xor
nop
dec
rcr
mov
mov
push
and
jne
mov
lods
cmp
loop
je
pop
mov
ds
cmp
pop
mov
mov
add
sub
out
inc
sub
pop
divb
rcrl
mov
pop
ss
jnp
push
ljmp
pop
imul
icebp
fsubs
dec
ja
test
jl
xchg
or
rclb
xchg
dec
pop
lret
push
pushf
pop
sarb
out
xchg
dec
pop
mov
sahf
jg
addb
jecxz
adc
add
xor
fidivs
jb
sbb
jo
xchg
rolb
ror
sbbl
js
les
jnp
jne
div
xchg
das
mov
loop
dec
cli
xor
pop
test
shl
fadds
movsl
fldcw
cmc
sahf
outsl
push
lcall
ret
in
ret
and
stos
push
test
lret
hlt
test
mov
inc
mov
push
mov
test
cmc
addr16
and
sub
in
pusha
mov
mov
jb
lcall
call
push
pop
lock
jno
ja
jecxz
xlat
ja
xor
inc
faddl
push
inc
sahf
add
int3
xchg
sbb
bound
mov
push
push
dec
out
hlt
outsl
and
xlat
in
mov
rcll
sahf
sbbl
insb
lea
jne
adc
inc
and
inc
push
xchg
xchg
mov
push
jg
jae
fwait
xchg
int3
lods
nop
or
jp
xor
insl
pop
addr16
mov
scas
mov
dec
mov
sub
mov
inc
jb
mov
add
xor
sbb
clc
push
stos
pop
mov
dec
xor
lcall
or
jo
andb
pop
push
lods
pushf
loopne
in
je
in
nop
and
fs
fwait
cmp
sub
outsb
add
inc
adc
arpl
pop
sbb
or
negl
mov
mov
sbb
push
adc
and
sbb
out
cmp
in
sub
ficoml
loope
xchg
push
scas
cli
mov
sbb
inc
adc
int3
ds
xchg
pop
dec
xor
ret
shll
test
cwtl
push
xchg
add
insl
sbb
dec
push
pop
fisubl
push
sub
jne
inc
cld
xor
mov
sahf
lock
cmp
dec
popf
fwait
jge
fwait
mov
sbb
fcoml
jle
sbb
int
addr16
mov
daa
sub
and
add
subb
xchg
mov
enter
push
mov
rcl
or
adc
jmp
das
arpl
adc
inc
sbb
sub
cltd
shll
imul
ljmp
sub
push
imul
arpl
popf
sbb
mov
or
shlb
bound
jp
sbb
aaa
fcmovnu
pop
mov
sub
insb
in
mov
mov
xchg
ret
mov
test
movsb
pop
in
push
cmp
out
test
scas
data16
shrb
or
scas
xor
cmp
ljmp
mov
xchg
inc
int3
in
out
fdivrp
fnstsw
mov
sub
test
xchg
addr16
cmpsb
jmp
addr16
cltd
xchg
shlb
sub
out
add
sub
ret
add
sbb
push
lret
mov
xchg
jb
jmp
aaa
xchg
sub
or
std
mov
and
aas
add
loopne
jae
add
xchg
sbb
rcrl
inc
subl
pop
cmp
mov
xlat
cmc
cs
lahf
rclb
insb
dec
loopne
inc
call
xchg
movsb
push
dec
pop
rcl
popf
inc
es
push
nop
test
inc
or
lret
popf
mov
jo
ss
loope
pop
push
roll
jo
fisttpl
shrl
aaa
fdivrl
add
fildl
jl
adc
lods
movsl
push
jge
fwait
js
sti
shlb
inc
int
jmp
mov
insl
popa
nop
lods
jl
daa
or
pop
sub
loop
movb
dec
lret
aaa
xchg
arpl
out
mov
test
and
add
cld
xchg
add
arpl
pop
mov
mov
push
aaa
lcall
adc
mov
lods
sbb
fisubl
push
lret
int
out
nop
in
sbb
in
push
shr
mov
fidivrs
or
mov
inc
dec
add
cmp
mov
mov
mov
in
jl
fwait
hlt
mov
neg
cmp
repz
stc
daa
clc
lods
pop
fs
pushfw
in
mov
xchg
mov
mov
jbe
adc
in
lds
cwtl
ds
lahf
leave
ffreep
or
or
inc
popa
xor
xor
hlt
fidivrs
push
fists
sub
sub
pop
jne
roll
into
dec
cmpsl
and
mov
ret
push
push
xor
scas
dec
es
xorb
ljmp
xchg
mov
adc
jg
andw
sub
roll
jno
add
xchg
out
or
int
mov
mov
iret
mov
push
push
pop
fmull
inc
arpl
add
ficoms
sub
mov
push
mov
lcall
jae
cmp
cltd
gs
or
bound
add
mov
clc
push
xchg
bound
sub
sub
addr16
lods
jg
iret
jge
adc
xor
iret
mov
xor
cmp
adc
inc
dec
cmc
mov
pop
inc
daa
or
jne
mov
inc
out
xor
jmp
fldt
inc
push
out
sbb
sub
push
pop
loope
sbb
jne
or
jo
jecxz
out
fisttpl
jb
cs
popa
loopne
ret
sbb
mov
mov
xor
fstpt
lret
pop
test
insb
inc
frstor
mov
jle
nop
jb
mov
and
fadds
stc
inc
cwtl
mov
scas
mov
lea
dec
and
push
add
add
cmc
xchg
pop
add
test
cwtl
sbb
vaddps
outsl
jno
adc
jge
xchg
les
pop
pop
dec
mov
imul
lahf
cmp
and
rclb
xor
insb
dec
stc
fisttps
pop
sbb
dec
cld
lock
dec
cmpb
sub
push
stc
scas
xchg
fwait
or
and
push
mov
adc
inc
addr16
push
sbb
jnp
ret
gs
adc
dec
fisubrl
cmpsb
xor
jmp
cltd
fisubl
mov
dec
ss
jmp
xchg
xor
mov
push
and
cli
xor
aam
jb
push
ds
add
scas
icebp
orl
adc
out
and
shrl
adc
inc
mov
jnp
cmp
sbb
inc
das
push
mov
sbb
js
pushf
pusha
inc
nop
xlat
loop
pop
pop
inc
mov
inc
or
pop
loope
push
cwtl
test
sub
popf
jl
icebp
push
aas
jbe
lea
movsb
push
xchg
mov
lds
mov
lods
in
cwtl
xor
lret
mov
mov
dec
mov
imull
cltd
fsubl
rcl
js
jbe
aad
das
nop
pop
out
jp
in
add
xor
iret
das
cmp
testl
test
clc
mov
fldcw
sti
ja
xor
push
adc
and
inc
sub
inc
fsubl
jno
repnz
inc
add
pop
cwtl
add
inc
jg
scas
add
fdivp
lock
sbb
push
push
imul
daa
push
mov
sub
adc
jmp
enter
xchg
mov
xchg
aad
push
inc
into
ljmp
into
dec
nop
dec
cmpsl
jo
shl
cmp
lods
outsl
xchg
rcrb
mov
jo
xchg
xchg
dec
pop
jbe
xchg
or
mul
scas
insb
shlb
push
inc
sti
enter
out
mov
insb
test
leave
mov
call
adc
roll
sbb
movsl
pop
xchg
fs
dec
in
xlat
aad
imul
inc
mov
testb
add
inc
mov
pop
cmp
clc
and
jo
sub
mov
jle
sub
sub
dec
cmpsl
into
cmp
or
mov
pop
push
mov
ret
sub
inc
enter
packuswb
cltd
and
rcr
mov
iret
or
movsb
cmc
scas
fildl
push
xchg
mov
xchg
lgs
xchg
jp
int
in
sbb
popa
xchg
sbb
push
mov
sahf
or
jmp
loop
and
push
xor
push
and
xor
adc
ja
mov
mov
jge
sub
ret
xor
mov
mov
xchg
dec
cmpsl
xchg
push
iret
mov
insl
cld
hlt
shl
ja
pop
test
lcall
sub
or
sub
sbb
inc
cmp
xor
mov
mov
add
in
jg
mov
out
lock
lret
test
lret
rolb
loop
mov
je
pushl
jmp
lods
sub
subl
sbb
test
ja
int3
mov
sub
jo
sub
in
adc
out
aaa
mov
ret
cmpsl
loop
mov
cmp
popf
out
lods
jne
sbb
fidivl
xchg
mov
mov
int
jecxz
jb
mov
sarl
dec
sbbl
xor
movb
adcb
icebp
ror
cli
xchg
test
mov
pop
or
jl
inc
lods
int
jmp
sbb
out
xor
push
push
mov
jp
adc
mov
cwtl
imul
loope
sub
cmp
xor
mov
fidivrs
xor
enter
mov
dec
lahf
dec
mov
mov
jnp
push
sub
rorl
mov
andl
jbe
and
or
xchg
ror
pushf
loope
mov
mov
xchg
aaa
add
repnz
push
les
mov
nop
cmc
daa
mov
test
push
mov
fcomip
jg
fnstenv
push
sbb
add
lret
jp
jmp
repz
jge
xchg
sub
xor
fs
adc
out
pop
cmc
enter
pusha
repnz
ljmp
mov
stos
mov
sub
pop
nop
pop
jbe
sub
sbb
aas
sarl
shrb
mov
dec
movsl
lds
mov
aam
pop
shrb
cmpsb
inc
daa
jge
stos
mov
mov
test
fcompl
sub
fsubl
mov
test
push
test
pop
jno
test
pop
sahf
ret
imul
mov
pusha
loop
and
cmpsl
dec
xchg
movhps
and
add
dec
out
cs
scas
lret
adc
mov
sbb
fnsave
ds
iret
cltd
or
dec
push
out
jnp
or
xchg
loop
and
inc
cmp
js
mov
mov
sbb
xor
jb
xchg
inc
add
jns
cltd
scas
into
out
xor
add
fidivrl
pop
mov
mov
sar
jl
fldenv
outsl
test
jnp
into
jns
test
sub
ficoml
mov
jno
stos
mov
pop
lret
pop
dec
test
test
sbb
test
clc
xchg
fcmovne
into
shr
clc
mov
pushf
xchg
cmp
pop
clc
add
test
add
jnp
push
cmp
cltd
pop
enter
call
lret
push
push
test
adc
lock
add
xchg
aaa
addl
loopne
xor
sub
mov
xchg
xchg
mov
jnp
cmc
xchg
fdivrl
cmp
fidivl
push
xchg
push
jo
push
xchg
inc
cmp
cmp
sti
les
adc
fistps
adc
bound
adcb
dec
notl
cmpsl
ljmp
add
and
dec
mov
nop
sbb
out
and
mov
xchg
mov
adc
adc
jp
stos
mov
and
push
adc
js
insl
ret
outsb
sti
inc
pop
shll
fidivs
cmpsl
inc
stos
or
dec
gs
or
daa
les
inc
cltd
in
popa
inc
adc
xor
mov
pop
pusha
push
mov
pop
ja
je
jmp
mov
sub
or
negb
adc
in
push
negl
mov
notl
mov
fdivs
dec
jp
inc
dec
sbb
xchg
cli
adc
mov
and
dec
and
push
jnp
pop
sbb
mov
mov
mov
aad
xchg
rorb
fidivrl
jmp
mov
mov
out
enter
popf
xor
xlat
int
or
cmp
scas
outsb
pop
fs
xchg
ret
stc
mov
xor
pop
stos
dec
xchg
adc
jge
out
jp
and
loope
in
sbb
push
lret
jge
imul
adc
in
idivl
aaa
xor
jmp
inc
xchg
stc
dec
sub
fdivrs
xor
hlt
hlt
cmp
stc
shll
lcall
jo
pusha
xchg
mov
or
loope
stos
adc
cmpsb
shr
in
imull
fiadds
mov
push
mov
enter
mov
roll
and
je
fs
gs
out
jl
lret
fcomip
sbb
mov
stc
js
test
lret
frstor
push
mov
push
sbb
in
aad
cs
dec
mov
xchg
pusha
sbb
gs
add
mov
xchg
or
cmc
stc
jno
dec
add
vsubps
jge
test
outsb
xchg
mov
pop
sub
pop
or
dec
inc
push
mov
lods
scas
mov
jo
cmpsb
push
cltd
mov
popa
es
mov
mov
fsubs
sbb
out
lahf
cmp
dec
cmpl
mov
in
push
stos
mov
insl
les
insl
sbb
out
movsl
xorb
dec
lahf
int
adc
mov
and
les
sbb
sti
push
lea
pop
mov
xor
aam
ss
jl
mov
insl
xor
push
scas
xorl
sbb
adc
mov
mov
mov
ror
call
andb
leave
jmp
pop
mov
pop
mov
sarl
fwait
mov
ljmp
fdivs
in
and
cmp
jge
imul
cmp
xor
mov
scas
adcb
inc
push
scas
roll
int3
in
inc
push
out
mov
xor
pop
fld
adc
xor
fistl
jmp
outsl
shrb
insb
icebp
sub
test
xchg
mov
or
bound
sub
jle
xor
mov
jbe
and
mov
dec
scas
pushf
out
sahf
lds
loopne
lods
loop
jmp
les
pop
dec
call
cmp
mov
cmp
aaa
adcb
es
scas
pop
sub
cmpsl
popf
jge
inc
popf
enter
sbb
repz
add
pushf
stc
fnstenv
inc
lahf
cmpsl
cmpsl
jmp
dec
aad
mov
orb
sub
pop
cmp
loop
jl
ss
loopne
sbb
adc
push
pop
inc
cltd
and
mov
adc
xchg
out
aas
cld
mov
jp
or
idiv
inc
out
aaa
nop
inc
dec
xchg
insb
fists
dec
or
into
adc
push
mov
jle
push
jbe
imul
aad
pushf
cwtl
das
or
dec
jmp
je
cmp
pop
repnz
movsb
addl
enter
xor
out
pop
pushf
xlat
in
and
sti
sbb
mov
repz
sub
lahf
jl
mov
add
lock
add
mov
fstpl
add
test
out
mov
int3
repnz
loopne
add
inc
out
dec
out
add
jo
xor
push
dec
pop
scas
mov
js
fnstsw
movsl
mov
movsb
jne
push
popf
cmp
xor
or
xor
jo
pusha
inc
and
jo
pushf
addr16
enter
dec
xchg
fadds
into
push
imul
iret
in
pop
test
xchg
push
mov
pusha
cmp
lods
push
popf
jns
stos
mov
pop
lret
in
daa
stos
xchg
in
inc
xchg
add
inc
mov
adc
out
out
add
mov
jo
add
rcr
addr16
xor
sbb
ljmp
mov
fs
sbb
repz
inc
andl
rorl
xchg
inc
sub
add
ss
push
adc
stos
outsb
popf
insb
xor
push
push
lea
push
push
push
les
and
mov
push
aad
orb
and
inc
dec
jo
cmp
pop
js
fcoms
sub
int3
pop
mov
push
out
loop
dec
in
inc
jge
out
popf
insb
xchg
stos
in
jp
jmp
mov
cmp
scas
cli
mulps
mov
stc
sub
divb
lods
out
sub
sahf
sarl
test
xchg
mov
faddl
xor
pushf
fistps
pop
add
fldenv
mov
cltd
or
jl
jge
mov
jno
xchg
and
mov
mov
outsb
mov
jl
imul
or
adc
ret
les
jae
pop
mov
mov
popf
push
xchg
mov
push
cmp
decl
in
int3
enter
bound
data16
push
push
sti
repnz
aam
push
vmaxps
data16
or
add
pop
insl
test
jge
test
lods
les
sub
movsb
xor
scas
clc
push
ret
pusha
sub
shrl
cli
mov
cwtl
in
mov
xchg
out
outsb
pushf
iret
int
cltd
lods
mov
ret
mov
roll
leave
into
mov
pop
xchg
mov
mov
mov
insl
or
and
js
jb
stos
pop
fsts
xlat
out
mov
int3
pop
push
movsl
fisubs
ss
lret
xor
cli
add
cltd
push
jbe
scas
xchg
int3
lret
fwait
xlat
sarl
nop
mov
lock
into
adc
mov
mov
cwtl
ret
mov
imul
outsl
ret
dec
repz
jns
popa
popl
mov
ffreep
xchg
aad
sbbl
movl
fidivl
add
out
mov
xchg
scas
jl
pop
or
jp
repnz
jl
fsubrl
insl
pop
sbb
adc
loopne
jbe
loopne
ds
sbb
andb
xor
push
movq
inc
test
in
test
jne
jb
jmp
xchg
sbb
and
rcrl
lret
movsb
mov
mov
xor
cmpsb
imul
adc
fadd
les
ljmp
in
sahf
lahf
xor
pop
outsl
idivl
scas
repz
mov
adcb
popf
addb
add
adc
jnp
jb
sbb
xchg
imul
pop
dec
and
cmc
shll
fsubs
shll
dec
sub
icebp
stos
les
cmp
leave
or
cld
xor
cmp
ja
cmp
mov
mov
xchg
sahf
aam
repz
enter
rcrb
push
fucomi
cmp
push
loopne
add
xchg
std
or
data16
jecxz
inc
sbb
and
push
shrb
cmp
decl
push
jge
ficomps
cmp
mov
hlt
loop
imul
add
cmpsl
or
pusha
adc
sub
mov
sub
fnstcw
dec
jne
cwtl
call
adcb
dec
fdivrs
ds
mov
les
lock
enterw
arpl
sbb
std
mov
mov
jg
popf
jmp
aaa
rol
ret
pop
pop
cmp
lahf
or
fiadds
addr16
xor
mov
xor
mov
aas
jo
into
xchg
imul
mov
push
mov
push
xor
mov
cli
mov
cmc
mov
daa
jp
lods
mov
push
shrl
stc
xor
dec
pop
fs
jg
or
movsl
daa
pop
gs
dec
push
out
notb
and
and
pushl
sar
js
cmc
cmp
imul
into
aad
clc
adc
inc
jmp
pop
in
mov
mov
mov
jl
xor
lret
shrb
scas
outsl
inc
inc
mov
inc
fstl
or
add
into
les
iret
pop
push
and
sbb
ret
mov
outsl
dec
rcrl
push
or
add
add
push
mov
gs
out
sbb
mov
sub
xor
popf
cli
mov
notl
jns
and
ja
xor
push
sub
push
cltd
ljmp
cmp
lods
cmpsl
rcrb
add
and
xor
pop
fiaddl
pop
adc
pop
stos
dec
pop
cmp
sbb
push
mov
xor
dec
or
xor
test
sbb
mov
ds
sahf
inc
lret
xor
cmpsb
incl
in
dec
test
adc
adc
mov
sub
jecxz
test
stc
adc
sbb
ret
arpl
mov
xor
add
in
enter
fnstenv
add
outsl
pop
xchg
inc
lret
sbb
call
jae
xchg
or
mov
adc
xchg
xchg
test
idivl
push
shll
mov
jnp
mov
rcll
sbb
push
push
sub
dec
call
mov
iret
jecxz
cmp
push
out
jo
adc
inc
push
xchg
cli
mov
mov
jne
dec
add
in
daa
in
aad
test
iret
popf
loopne
jbe
scas
mov
popa
or
add
add
cli
jmp
rclb
enter
dec
test
insb
mov
mov
pop
mov
stos
add
mov
in
leave
arpl
sti
cmp
cmpb
mov
jb
inc
mov
inc
xor
cwtl
xor
pop
lock
mov
cmp
dec
mov
xchg
fidivs
xor
lcall
sbb
inc
stc
cli
lret
cmpsb
mov
loopne
in
mov
cmpsb
aaa
ffreep
pushf
cld
loop
push
cmp
mov
scas
shrl
mov
stc
fstp
call
add
push
test
lods
jecxz
jmp
scas
xchg
jecxz
fwait
imul
shll
pop
mov
pop
inc
std
cmp
aaa
jecxz
cmp
jmp
sbbb
loopne
mov
aaa
add
push
shll
iret
inc
cmp
add
mov
jbe
in
adc
cmp
inc
push
xchg
jb
aas
pop
fdivl
mov
hlt
mov
movsb
lret
jb
fs
arpl
push
inc
dec
movups
lods
repnz
cmc
lds
stos
adc
mov
gs
sahf
ret
pop
push
inc
leave
and
insl
lcall
sbb
decb
push
mov
sub
cli
addl
popf
pushf
mov
push
lret
nop
sbb
movsb
sbb
mov
push
xchg
pop
imul
xchg
fildll
mov
pop
xor
inc
loop
cmp
sub
mov
adc
fisubs
inc
mov
or
xchg
out
lret
or
xor
cmovnp
inc
iret
scas
jnp
mov
mov
add
fcmovb
dec
fildl
es
mov
mov
jbe
sbb
bound
and
dec
cmpsl
jo
iret
dec
rcr
sbb
ss
inc
adc
pop
or
add
xor
mov
pop
jne
movsb
fwait
movsl
xor
mov
sbb
add
or
aam
cld
mov
pop
in
enter
sub
pop
fwait
mov
lods
cmp
push
mov
or
jb
sub
push
sbb
dec
mov
jl
fsubrl
dec
push
fisubl
jbe
lea
cmp
gs
std
shlb
stc
dec
ja
ss
pop
adc
std
movsl
mov
xchg
jns
mov
xchg
lock
inc
jle
test
orb
dec
roll
hlt
movsl
sub
or
loope
ds
jns
subl
xor
andb
in
adc
push
mov
or
push
mov
add
fsubl
lods
xchg
lods
sub
daa
mov
push
inc
pop
inc
or
test
add
fwait
in
stc
lea
sarb
push
movb
movsb
xchg
pop
mov
idivl
xchg
push
loope
inc
mov
sub
sbb
cltd
rcr
or
fdivrp
push
mov
jecxz
adc
mov
dec
jl
sbbb
dec
sbb
ret
mov
nop
adc
mov
or
xor
lahf
sbb
push
pop
mov
cld
or
or
jae
mov
int3
inc
xchg
sbb
popf
lock
popa
fwait
stos
dec
or
mov
imul
aaa
loop
icebp
nop
rolb
push
xchg
inc
mov
sub
jg
aas
push
cmp
push
cmc
xor
ror
xchg
push
out
and
bound
test
fisttpl
ljmp
add
ljmp
pop
call
and
push
inc
adcl
fsqrt
pop
out
cmp
jns
lea
cmp
sub
pusha
inc
test
aad
sbb
std
in
sub
js
and
and
js
mov
jl
cs
mov
in
and
push
jge
cmpsl
scas
cmc
data16
popa
jecxz
scas
idivl
and
sbb
iret
add
pop
inc
inc
cli
pop
cli
push
jae
lahf
shrb
xor
jbe
cmp
jge
dec
add
adc
sub
fisubrl
dec
or
pop
stc
and
pop
fnstcw
leave
adc
push
test
mov
pop
in
and
adcl
pop
cld
loope
xchg
and
rcl
or
adc
bnd
push
jp
xor
cmc
jne
pop
pop
mov
cmp
or
mov
out
jnp
ja
or
xor
addl
cmp
repz
mov
imul
or
inc
lcall
fmuls
sbb
inc
sub
pop
popa
sub
add
pop
fwait
dec
flds
mov
jg
or
lahf
nop
je
push
dec
aam
xor
iret
or
test
adc
aas
mov
addl
jg
pop
cmp
pop
cmp
push
adcb
pop
insl
outsl
andl
cmpl
pop
push
les
pushf
sub
jg
mov
test
or
movsb
push
out
repz
jnp
sti
dec
pusha
in
shll
pop
mov
hlt
js
pushf
jp
add
test
adc
mov
pop
inc
xchg
push
dec
mov
xlat
and
add
ljmp
lret
call
sti
mov
int3
sub
icebp
test
int
push
add
mov
repnz
adc
pop
xor
adc
adc
sti
sub
std
xchg
inc
mov
mov
push
sub
jnp
mov
add
dec
mov
add
hlt
movsb
lea
cmp
xchg
xor
pop
popf
xchg
mov
imul
aas
test
ret
jbe
pop
cwtl
mov
xchg
rcll
imul
int
lea
sbb
fs
mov
add
les
mov
xchg
pop
mov
je
pop
insb
pop
insb
jge
or
dec
jns
into
pop
jecxz
jo
rolb
insb
push
xlat
pusha
rorb
xchg
xor
pop
popa
std
mov
add
mov
aad
in
dec
add
jae
mov
bound
test
lods
sti
out
fisttps
pop
xchg
push
cmp
dec
sub
xchg
ds
pop
fistps
lret
pop
and
mov
mov
mov
dec
out
sub
insb
mov
pop
bound
imul
notb
cmp
popa
dec
in
fldl2t
cmp
mull
inc
xchg
xor
fdivs
aaa
sbb
leave
insl
sub
inc
sbb
push
mov
scas
loope
in
sub
add
dec
repz
daa
in
cmp
mov
sub
jae
int
mov
mov
or
out
pop
cli
dec
ljmp
cmpsb
mov
mov
push
sbbl
and
pop
test
add
repnz
cmpsl
jle
push
leave
sbb
sbb
pop
dec
daa
cmp
add
or
pop
scas
mov
push
sub
arpl
cmp
xchg
es
or
jbe
adc
mov
outsl
sbb
pusha
push
inc
pop
jnp
mov
shlb
add
jne
scas
xchg
loopne
in
inc
mov
push
mov
cmp
xchg
inc
push
push
jbe
jp
ljmp
xor
mov
ret
aas
cmpsb
dec
mov
push
dec
hlt
shrb
ljmp
lea
fmuls
mov
inc
xor
push
mov
adc
testb
gs
sub
test
inc
inc
jecxz
or
rep
pop
negb
aaa
mov
pop
sub
insl
sub
cs
stos
leave
dec
cltd
jecxz
inc
out
and
out
xchg
fnstcw
dec
nop
jp
pop
js
inc
add
hlt
xchg
ret
adc
push
mov
sbbb
out
scas
mov
popf
cmc
in
movl
pop
aad
int3
insb
jne
jg
lret
fistl
lea
lds
loope
shlb
mov
pop
sub
rol
sarb
loope
pop
ljmp
xchg
xchg
mov
iret
sbb
xor
cmpsl
adc
add
imul
jle
pop
inc
ret
stc
and
insl
shll
mov
mov
cs
lret
cld
test
sbb
mov
or
loop
sahf
jae
push
xor
push
lret
cwtl
adc
cmp
inc
xor
lea
out
flds
sbb
add
xchg
mov
sbbl
inc
fldl2e
xchg
icebp
ja
fstl
add
add
ret
push
dec
lods
test
fmulp
aad
push
ljmp
lods
sbb
sti
mov
ficomps
mov
ss
lock
rol
outsl
jae
mov
jo
jecxz
iret
insl
xchg
je
lea
aad
imul
pop
sbb
int
inc
les
cmp
aad
push
fs
dec
and
sbb
pop
inc
sub
cmp
and
xchg
ret
test
sub
popf
loopne
jo
btr
adc
mov
xchg
or
out
in
push
mov
js
cmova
adc
xchg
std
and
movsl
jg
nop
mov
pop
pop
out
jecxz
lds
test
fstpt
ss
ss
sub
bound
jnp
jl
fisttps
mov
stos
adc
push
cli
inc
in
pop
dec
cld
out
fcom
adc
icebp
fsubl
or
lods
leave
mov
pop
lcall
fnstenv
hlt
decb
inc
pop
std
rolb
clc
out
lret
lea
lods
push
rclb
jmp
es
and
push
mov
sbb
ss
icebp
push
popa
ja
adc
or
inc
in
dec
daa
cmp
stos
enter
ret
fcomps
jecxz
pushf
int
sahf
push
pop
or
loopne
bound
jae
add
outsl
cltd
rcl
xchg
jnp
mov
mov
push
lods
pop
pop
xchg
int
lcall
call
lds
xor
cmp
xchg
inc
inc
push
push
in
pop
sub
in
pusha
je
hlt
add
or
xchg
sub
jb
sar
fadds
and
out
mov
and
insb
fnclex
mov
cmp
mov
and
hlt
lds
and
inc
push
jecxz,pt
scas
js
pusha
hlt
aad
iret
jns
fcmovb
ror
test
outsl
sahf
and
xchg
add
popf
shrd
dec
mov
addr16
fisubl
push
add
or
or
or
dec
shll
pop
sub
inc
jl
pushf
ja
enter
push
test
or
insb
rolb
je
cmp
fstpt
fisubs
jg
nop
shrl
cmpsl
cli
or
or
pop
ljmp
dec
cmpsb
bswap
imul
or
arpl
fwait
cmpsb
aam
insb
vmread
pop
mov
cmc
cmp
test
or
clc
mov
shlb
repz
loopne
add
and
jp
setle
inc
push
daa
std
add
xchg
out
push
xor
nop
jns
repnz
push
inc
lods
mov
sbb
mov
and
xchg
popa
mov
insb
mov
xor
adc
stos
dec
test
mov
cli
imul
mov
and
dec
and
cmp
jg
and
push
in
rcrl
inc
arpl
int3
aad
rolb
cmp
jg
popa
mov
clc
lock
xor
inc
push
push
addl
add
rolb
outsl
icebp
js
mov
jmp
or
or
push
jae
sub
jle
stc
out
xlat
and
loope
push
ja
cli
adc
xchg
out
sub
popa
scas
data16
fiaddl
sbb
push
clc
stc
ret
cmp
inc
sbb
mov
jns
mov
and
out
andl
mov
sbb
inc
push
jge
xor
push
test
test
iret
push
lea
in
cltd
imul
push
fs
adc
enter
in
mov
ret
clc
mov
mov
lods
xorb
xchg
arpl
fwait
sub
add
pop
add
repz
inc
push
sahf
inc
sbb
jns
cmp
aam
cmp
xor
inc
and
jo
es
es
leave
sbb
push
insl
add
and
inc
mov
dec
xchg
sbb
push
xchg
insb
mov
ret
xchg
shll
in
push
mov
mov
xchg
adc
sahf
lret
sub
or
pushf
lods
inc
pop
xchg
movsl
pop
std
pop
ja
push
mov
sub
and
insb
pop
cltd
orl
jp
cmc
movsb
inc
jnp
or
sub
add
daa
push
push
lahf
pop
sbb
ret
cmpsb
out
arpl
pop
push
xchg
sub
sti
mov
and
fwait
les
cmp
cmp
xor
jmp
ja
idiv
mov
imul
call
sub
cli
jns
xchg
dec
jmp
xchg
pop
not
dec
cli
inc
mov
xchg
idivl
imull
aaa
or
inc
lock
pop
les
sub
add
dec
pop
in
mov
or
cmp
jns
mov
xor
and
nop
push
scas
push
mov
adc
add
loop
test
cmp
sbb
shl
mov
cmp
xor
mov
or
out
jg
pop
push
gs
jmp
mov
cmp
test
fisubrs
outsb
std
cmc
dec
js
jns
push
ds
cmp
mov
idivb
cmp
mov
stc
bound
add
movsl
roll
cmp
loope
jecxz
push
pop
push
push
xor
mov
pop
fists
jbe
xor
rcl
jmp
xor
addr16
in
insb
test
jge
push
shlb
stos
xchg
mov
mov
test
dec
push
or
ret
adc
leave
xchg
es
jne
std
pop
mov
lods
jns
xor
inc
mov
in
pop
pop
in
dec
and
push
hlt
push
popa
orb
mov
inc
aaa
jl
push
or
xchg
insl
into
add
jmp
es
pushf
or
test
test
fwait
jmp
fisttps
jno
test
jle
sbb
cltd
adc
push
jb
xchg
inc
push
inc
or
out
clc
push
or
gs
mov
and
mov
iret
cmp
mov
jne
inc
mov
lret
lods
gs
orb
mov
and
mov
rclb
test
push
mov
movsb
insb
bound
and
nop
push
mov
int3
mov
jge,pn
adc
fmuls
dec
int
cmp
mov
xor
sub
or
inc
cmpb
and
sub
repz
xlat
or
pop
mov
sti
mov
dec
xchg
pop
lods
xchg
pop
loopne
aaa
mov
out
pop
push
enter
in
insl
jmp
cs
decl
or
sbb
in
inc
sbb
jmp
sub
jbe
xor
lahf
shr
incb
mov
outsl
js
addr16
arpl
push
or
aaa
xchg
xchg
leave
jge
jp
loopne
mov
cmpsb
jne
test
lcall
jns
lahf
cmp
in
sti
mov
xchg
aas
push
jnp
xor
mov
clc
pop
subb
xchg
and
push
push
icebp
in
andl
add
sbb
fcoms
adc
into
pop
or
pop
lea
or
into
sar
jbe
in
stc
add
pop
push
test
test
imul
rcr
mov
sub
sub
or
add
cmc
xchg
cmp
xchg
mov
popf
ljmp
movsb
pop
push
out
adc
jnp
dec
sbb
mov
clc
repnz
mov
mov
data16
jg
add
int3
repz
dec
rcrl
mov
lret
ret
out
jge
gs
fistpl
dec
fistpll
mov
jge
fstpt
fldenv
xchg
int
push
mov
jno
roll
pop
mov
cmp
pop
pop
gs
lret
nop
dec
push
xchg
sbb
test
mov
ret
pop
pusha
pop
lcall
push
mov
shll
stos
dec
jne
push
pusha
add
imul
fcom
or
add
sbbl
inc
jle
cmp
mov
inc
xor
or
fiadds
xchg
dec
cld
cld
out
mov
and
cmc
lret
scas
fidivl
icebp
mov
mov
or
dec
mov
inc
or
clc
loopne
imul
sub
fnsave
cltd
rcrl
pop
cmp
loope
push
and
push
or
push
or
xchg
pushf
pop
xchg
in
lahf
push
jno
stos
lock
mov
pop
xchg
sub
adc
and
inc
sbbb
bound
dec
in
sub
inc
pop
pop
fcompl
psrld
lea
jmp
mov
adc
mov
je
fsub
push
fwait
or
xor
lds
inc
push
arpl
jmp
iret
movsb
lcall
imul
icebp
mov
cmp
xchg
xchg
pop
xor
xchg
xchg
adc
insb
loop
dec
data16
sbb
in
adc
test
aam
fdivl
in
cltd
pusha
dec
jne
lret
mov
fdivp
mov
int3
pop
adc
sub
push
js
jno
xchg
int
mov
push
stos
xchg
mov
int
jo
cmpsb
dec
shrl
cmpl
cmp
jge
test
push
call
outsb
push
inc
inc
pop
stos
stos
lcall
incb
testl
es
cld
outsl
pop
inc
cmp
icebp
cmp
or
int3
insl
inc
add
lahf
xchg
add
iret
pop
mov
mov
adc
fcoml
inc
push
movsl
adc
mov
das
add
repnz
jns
mov
ljmp
sbb
in
outsb
movb
inc
push
sub
ljmp
ret
js
or
cli
sbb
and
mov
iret
pop
das
arpl
pop
add
or
jg
clc
sbb
dec
push
bound
outsl
in
adc
pop
lea
mov
stos
movb
into
xchg
das
lds
pop
pop
xchg
clc
inc
fnstenv
enter
mov
mov
inc
ja
mov
sarb
aam
lret
push
cmpsb
lock
mov
or
mov
mulb
add
xchg
mov
cwtl
cmpl
or
sbb
add
push
repz
or
aam
push
push
fildll
daa
and
insl
and
xchg
dec
inc
fistps
jno
scas
jnp
dec
ss
rorl
adcb
int3
add
add
pop
int
push
jmp
sub
dec
sti
in
cld
adc
dec
adc
rolb
les
scas
dec
and
leave
out
xchg
add
mull
add
inc
fsts
aad
add
jmp
decb
bound
jmp
and
mov
xor
dec
push
lcall
test
lcall
add
add
push
sbb
lahf
mov
mov
add
imul
std
cmp
push
xchg
movsb
pop
jecxz
jo
aam
sbb
stc
dec
xchg
push
shll
mov
mov
xor
aam
rcrl
insb
add
lock
xor
je
adcb
sti
xor
xor
inc
and
test
or
jo
xchg
sarl
testb
iret
fisttps
adc
cmpsb
jae
cmp
xchg
test
jne
fsubrp
jmp
shrl
jl
cmc
or
stos
mov
incb
fsubrl
xchg
or
xchg
jge
sbb
xchg
imul
jecxz
inc
fisubrl
sbb
nop
jne
mov
cmpl
jg
jae
js
and
in
sbb
cmp
mov
push
lods
nop
jae
or
imul
push
fwait
outsl
dec
ljmp
xchg
lret
cmp
mov
ret
lock
or
and
lret
jo
lock
add
xor
cmp
add
mov
pop
mov
fidivrs
jmp
out
icebp
clc
addr16
xchg
mov
and
iret
xchg
inc
add
das
js
or
xchg
and
roll
fwait
push
or
loop
inc
pop
ss
xchg
inc
mov
inc
dec
daa
popa
adc
cltd
addr16
xchg
sbb
movsl
mov
popf
ljmp
outsl
rclb
mov
xchg
dec
ja
ja
test
dec
mov
fwait
into
mov
test
jge
xchg
divb
ss
or
jae
jge
stc
xlat
loop
cmpsl
lret
dec
out
and
mov
test
xor
mov
dec
popf
in
pop
add
imul
inc
jne
inc
xor
les
jo
or
sarb
in
fwait
sub
outsb
adc
es
fbstp
cmp
dec
inc
jo
xlat
pop
inc
ss
push
and
out
out
rorb
mov
mov
sahf
arpl
cmpsb
dec
repnz
repnz
xor
pop
push
xchg
clc
pop
rorb
cmp
mov
dec
out
aam
lods
or
jp
push
stos
and
mov
jae
out
add
stos
xchg
stc
mov
push
sahf
in
xor
cli
push
stos
faddp
sub
rolb
lock
bound
push
fisubrl
xlat
out
add
mov
cmpsb
push
sbb
sub
movsl
pushf
add
jl
lds
jbe
mov
and
ss
in
stc
roll
mov
mov
mov
scas
cmc
sahf
inc
cli
std
mov
push
push
sbb
cmp
loopne
push
stc
jnp
negl
or
or
inc
push
add
inc
inc
push
dec
jge
add
int
inc
aas
into
or
ret
pop
and
cmpsb
mov
int
sub
lret
cld
adc
cmp
ds
pushf
mov
xor
inc
mov
and
pop
mov
push
imul
dec
push
add
mov
inc
or
lret
mov
inc
pop
push
popf
fisttpll
imul
fnstcw
push
inc
pop
or
adc
mov
enter
call
popa
push
fdivp
cmp
stos
fldcw
cmc
mov
mov
mov
sub
xor
adc
cltd
mov
mov
push
push
decb
daa
xor
adc
add
push
scas
push
std
push
aas
addr16
xchg
aas
jg
mov
xchg
and
pop
mov
aam
cltd
setnp
xchg
mov
fmuls
pop
fwait
xchg
cmp
les
popa
mul
movsb
bound
mov
mov
in
and
and
cmpsl
fldcw
pop
inc
add
js
fistps
push
stc
cmpsl
mov
lret
aam
mov
xchg
xchg
ja
cmc
jb
enter
jle
mov
mov
push
jne
cmp
jg
ss
push
js
ud2
push
xor
fwait
adc
adc
jbe
jne
cmp
mov
lea
sar
outsl
add
push
in
sub
cmpsl
fcomps
jbe
add
icebp
add
add
xchg
jae
shrl
push
test
sbb
cmp
loop
bound
add
xor
add
lods
daa
aad
pushf
dec
repnz
iret
lock
test
xor
sub
subb
hlt
push
push
adc
gs
fmuls
pushf
adcb
arpl
xchg
push
stc
ds
movb
lret
fistpll
mov
lret
pop
sbb
enter
testb
mov
cmp
cld
mov
xchg
pusha
cmp
dec
das
add
jge
les
iret
xchg
adc
inc
inc
mov
jbe
add
pop
jmp
shll
sbb
and
xchg
pop
cmpb
push
pop
gs
xchg
into
int
jl
xorb
cmpl
loop
iret
lea
and
das
cmp
movsb
imul
add
xor
mov
ficoml
mov
test
jecxz
arpl
mov
mov
adc
add
cmp
sub
sub
adc
testb
clc
pop
mov
sbb
pusha
sbb
shlb
dec
out
fsubr
iret
fsubl
dec
cmp
and
rorb
and
cmp
aaa
sub
stc
xchg
fisttpl
in
pop
cwtl
jg
mov
add
int3
ljmp
mov
lods
addb
mov
add
xlat
imul
cltd
bound
ljmp
add
mov
outsb
aas
add
addr16
cs
fs
adcb
cmp
xchg
leave
nop
andb
aaa
xchg
pmulhw
cmp
pusha
in
pop
jg
mov
cmp
push
data16
lret
insl
mov
popa
fldl
sbb
inc
fdivs
inc
xor
rol
jb
push
repz
and
aad
jo
aam
test
mov
push
stos
mov
push
dec
and
jo
jae
mov
imul
xor
xchg
jg
mov
jo
inc
xor
cmp
mov
jp
jecxz
scas
push
bound
pop
orb
imul
xchg
ret
dec
test
jne
dec
clc
cmp
outsl
out
dec
jg
orb
pushf
xchg
pop
mov
fists
mov
int
call
pop
mov
xchg
inc
mov
add
les
mov
cmp
test
fisubrs
rcrb
dec
pop
jnp
mov
rdtsc
cmc
icebp
add
pop
adc
scas
outsl
inc
push
stos
in
vcvtsi2sdl
test
je
and
sarb
mov
cmp
xor
punpckhwd
sbb
andl
aaa
in
pop
lods
ss
dec
cmp
push
or
cmp
push
pop
shlb
lods
xchg
mov
out
mov
lcall
es
xor
popl
rclb
pop
jne
sub
lods
pop
pop
repz
lret
add
cmp
push
add
and
adc
scas
mov
sarl
sbb
fstpl
xor
adc
adc
std
mov
mov
cmp
mov
xchg
popf
cltd
orl
or
xchg
xchg
pop
ds
cmp
in
pop
ret
sub
xchg
imul
push
loop
jns
scas
ds
mov
loope
clc
sub
fstpt
xchg
xchg
shr
mov
fsub
arpl
scas
mov
pop
arpl
and
stos
scas
fisttpll
push
pushf
xchg
push
sbb
pop
in
sbb
mov
sub
mov
ret
mov
orl
icebp
call
mov
das
or
scas
mov
fsts
xchg
and
fdiv
xchg
aam
mov
push
sub
push
sbb
mov
cmp
or
jecxz
mov
insb
xchg
adc
ja
les
inc
adc
cmpsl
xor
xchg
xchg
add
jo
jns
loope
push
or
stc
ljmp
lock
jecxz
cld
and
xchg
mov
and
jl
lahf
mov
imul
pop
lahf
daa
xchg
cltd
in
aam
xor
icebp
and
data16
pop
rol
and
xchg
jecxz
sar
ss
pop
je
sub
or
mov
out
cltd
sbb
inc
in
popa
out
jne
enter
sub
xor
orl
out
call
mov
mov
dec
cltd
xchg
pop
leave
outsl
jns
cmp
fnsave
cmpsb
xchg
js
lret
les
mov
jne
andl
inc
out
loopne
out
push
push
inc
hlt
ds
jle
mov
insl
jne
and
sbb
mov
xchg
mov
pop
nop
xchg
in
jno
xchg
cmp
rcrl
fdivl
mov
xchg
jo
outsb
push
pop
sub
in
pop
in
sbbl
or
mov
adc
xchg
mov
cmc
stos
pop
out
imul
ret
test
lret
mov
ja
dec
xor
fmuls
stos
test
jb
rclb
xor
add
mov
mov
in
add
leave
ret
mov
lret
sub
sbb
pushf
mov
mov
lock
icebp
jb
adc
cmp
mov
imul
lret
lea
icebp
icebp
rolb
jmp
jae
movsl
ret
clc
int3
call
loop
jecxz
mov
fnstcw
adc
push
ret
pop
lods
cmovo
xor
xchg
cwtl
ds
inc
mov
mov
loope
out
pop
sbb
test
and
es
mov
xchg
loope
dec
test
xchg
sub
push
mov
and
jae
aaa
sti
rcrb
adc
popa
fstpt
mov
stos
arpl
out
outsl
or
pop
loop
pop
nop
mov
cmp
or
data16
or
push
loop
cs
insl
sub
adc
mov
inc
clc
rcl
lods
scas
pop
lret
addr16
adc
dec
mov
sarb
fildll
lea
iret
dec
stos
sub
lret
adc
and
inc
jno
sub
cld
xchg
sbb
mov
inc
dec
enter
je
leave
insl
jno
push
cld
push
ror
int
subb
pop
into
or
mov
enter
fwait
ljmp
mov
test
cmp
pop
icebp
inc
mov
clc
push
dec
add
jo
xchg
jae
sti
push
push
inc
and
push
bound
movsb
sub
cmpsl
xor
mov
in
add
icebp
and
inc
add
dec
xchg
aas
leave
add
lods
adc
ret
sub
pop
mov
popf
fadd
push
mov
loopne
ficoms
outsb
xor
xor
mov
fistl
sbb
adc
push
rcrl
lret
enter
add
inc
int
push
xor
push
loop
movb
clc
inc
pop
repnz
adc
mov
fidivrs
dec
out
dec
mov
stos
push
push
pop
xchg
push
sub
ret
mov
dec
mov
cmp
adc
sub
loopne
mov
mov
test
fnstcw
fidivrs
sahf
cmpsb
mov
dec
addb
rorw
inc
jno
call
das
arpl
add
stc
dec
imulb
dec
push
int3
sub
inc
push
sub
xchg
sbb
adc
pop
fsubrs
mov
out
mov
rorb
xchg
pop
xchg
orb
mov
test
inc
call
mov
aam
xchg
mov
sbb
es
out
mov
push
ffree
inc
adc
out
dec
add
inc
xchg
leave
negb
cmp
mov
cmp
hlt
and
popf
jle
fs
jmp
push
jle
stos
xchg
ljmp
sub
cld
push
shll
repz
imul
sbb
xor
ret
adc
dec
sbb
xchg
aas
incl
aam
xchg
jecxz
pop
sahf
fildll
xor
arpl
call
inc
pop
inc
rclb
cmp
jne
rcll
jmp
sub
outsb
mov
pop
cmp
mov
add
int
lods
or
xor
or
stos
mov
sbb
movsb
data16
stos
jns
loop
xor
inc
cld
cmp
stos
adc
rcrb
mov
arpl
push
jp
ret
mov
jo
jbe
jge
cmp
aam
test
jae
movsl
pop
arpl
mov
xchg
lret
dec
add
int
outsl
xlat
loope
clc
das
sub
popf
aad
xor
mov
mov
test
xor
fsts
dec
add
cs
les
les
roll
cmp
loopew
pop
push
leave
xchg
int
shrb
mov
jno
add
sbbb
push
dec
inc
test
xor
lock
mov
ficoml
aas
jae
test
cmp
gs
jl
push
adc
scas
insl
scas
bound
pop
xchg
or
add
outsb
gs
mov
sbb
stc
and
insb
imul
mov
xchg
sub
and
xchg
mov
sbb
stos
aam
pusha
ds
add
xchg
out
add
scas
sbb
push
insb
or
xor
test
xchg
pop
fstpl
pushf
or
and
mov
addr16
icebp
cltd
and
pusha
sbbl
iret
enter
outsb
in
cmc
sar
rcrb
and
icebp
in
pop
popf
hlt
xor
dec
hlt
movsl
aad
mov
xchg
dec
leave
mov
addr16
pop
lcall
dec
inc
insb
adc
pop
clc
int
dec
loop
icebp
xchg
loope
lcall
mov
cltd
mov
roll
add
xchg
out
jle
xchg
xchg
std
dec
sbb
popf
sbb
jg
outsl
jmp
push
loop
cmp
sbb
nop
in
gs
sub
icebp
ds
jmp
outsl
dec
shll
push
mov
cltd
ret
call
mov
js
cmp
test
mov
in
outsb
sub
out
sbb
push
test
cmovno
lds
fisubl
cmp
bound
rcl
stc
cmp
shl
xor
stos
adc
stos
mov
pop
sub
test
cld
mov
test
mov
xchg
jecxz
test
ret
lret
loopne
imul
arpl
add
data16
dec
cmp
icebp
pop
out
inc
test
in
aad
in
push
cld
mov
and
mov
and
in
imul
test
nop
xchg
inc
jns
in
stos
std
int
dec
outsb
test
xor
daa
iret
pop
sub
out
jnp
dec
rol
add
fistps
outsb
outsb
loope
pop
xor
adc
cmp
mov
sti
cmpsl
inc
aad
je
jns
cmp
pop
out
sbb
jnp
sub
fsin
sub
xlat
and
test
cmc
pop
mov
stc
jbe
arpl
ret
into
enter
cmp
sub
in
xchg
int3
and
js
add
adc
popf
andb
fadd
cwtl
inc
inc
and
inc
inc
mov
push
lds
xchg
hlt
adc
adcl
mov
cwtl
subb
outsb
push
shll
jl
mov
mov
fwait
in
rol
inc
inc
jbe
loop
jae
push
bound
inc
mov
movsl
cmp
aas
cmp
mov
push
jl
adc
rcll
je
sbbb
in
jno
dec
rcl
daa
add
cs
mov
inc
in
out
or
cmpsb
pop
arpl
out
sahf
jo
xor
aaa
push
into
mov
xchg
xor
push
out
adc
jge
or
subps
pushf
addb
sbb
pusha
xchg
cli
lcall
mov
adc
sbb
mov
push
mov
push
outsb
popf
outsb
cmp
in
inc
cli
shl
dec
cmp
xchg
ljmp
mov
jnp
pop
and
daa
notl
dec
xchg
fildll
pushw
popa
or
lds
pop
mov
and
inc
push
xchg
ljmp
and
sti
sbb
mov
cli
xor
int
mov
je
or
cs
add
lret
inc
imulb
pop
cmp
je
fiaddl
js
out
jp
in
out
jne
xchg
sbb
lea
push
iret
int
fst
mov
shl
sar
dec
or
jnp
icebp
mov
inc
mov
adc
out
addl
rcrb
mov
cmpsl
ret
cmp
add
fdivr
negl
sbb
and
addr16
jae
add
mov
in
jl
adc
mov
arpl
jecxz
sbb
movsb
mov
sbb
lods
add
iret
xchg
xchg
imul
jg
pop
ret
shlb
dec
xor
add
add
aaa
sar
sub
xor
lcall
adc
insb
and
xchg
cmc
inc
popa
jns
lcall
add
mov
clc
push
xor
rolb
rcl
cmp
lods
and
xchg
int
je
imul
stos
xor
in
jnp
bound
or
mov
scas
aaa
fwait
cmovl
xor
jns
push
fisttpl
push
mov
pusha
cld
inc
mov
daa
adc
push
or
loope
mov
adc
clc
pop
adc
cld
pop
out
sub
test
scas
in
shrl
outsb
stc
mov
int3
aas
inc
jl
xchg
dec
cli
lods
mov
cmpsl
pop
push
or
jle
add
inc
iret
mov
xor
lds
push
arpl
je
scas
push
clc
in
cs
dec
pop
jb
inc
push
int
out
mov
rcrl
jb
ret
es
into
dec
lret
aad
stos
push
pop
shl
cmp
push
iret
mov
and
xchg
cs
lods
mov
ret
scas
cmpsb
clc
mov
insb
pop
fsubr
lret
xchg
jmp
iret
cmp
mov
push
push
call
mov
sub
cmp
xchg
divl
icebp
mov
xchg
dec
lcall
cltd
cs
or
addb
fs
lods
dec
fiaddl
data16
fwait
out
push
add
inc
xchg
roll
dec
pop
je
dec
aad
adc
push
icebp
les
int3
ds
das
test
cmpsl
iret
xor
jg
js
xchg
inc
jge
jno
in
add
or
xchg
or
or
repnz
lock
in
in
rolb
rcll
pop
jne
cs
scas
and
inc
cmp
mov
shlb
icebp
insl
push
mov
test
xor
jecxz
rcr
jmp
sbbb
fs
cmp
fstpl
jb
sub
iret
sub
enter
push
loop
pop
or
cmp
jne
dec
scas
fcmovnb
xor
movsb
push
pop
add
adc
inc
jmp
popf
sub
stos
hlt
call
lret
gs
enter
lea
ret
ret
lods
iret
pushf
push
xchg
imul
test
sub
inc
xchg
in
and
in
in
jnp
push
xor
cli
push
cmp
nop
pushf
aas
dec
dec
mov
nop
loopne
inc
xor
push
mov
imul
or
pop
sub
lods
int3
jge
push
fsubrs
popa
je
popf
fxch
test
mov
pop
stos
sbbb
sub
push
mov
movsl
cmpsb
dec
push
les
sub
leave
xor
call
popa
int
imul
dec
mov
pop
cld
inc
xchg
xchg
push
imul
sub
xor
mov
imulb
dec
pop
sbb
lods
es
int3
mov
push
jae
sub
mov
std
xchg
jmp
cwtl
fsubl
rorb
push
jl
jge
cmp
outsb
dec
jp
mov
or
scas
adc
repnz
mov
jne
inc
pop
cli
mov
outsb
ds
popa
hlt
push
xchg
dec
and
jae
movsl
incb
mov
adc
loop
mov
lret
and
lea
out
std
push
sub
push
insb
lock
shll
inc
jl
cmp
in
pusha
stc
jae
into
std
sbb
cmp
std
xchg
mov
pop
sar
push
mov
xchg
sub
outsl
shl
push
sbbb
mov
in
repz
shrl
imul
jne
mov
push
push
sub
xchg
test
daa
les
mov
inc
fadd
insb
std
jnp
or
mov
aas
or
movsl
inc
xor
dec
ljmp
scas
loopne
popa
rcrl
loop
jbe
testl
lea
pop
dec
inc
xchg
sbb
loopne
clc
sub
gs
mov
adc
xor
push
loopne
bound
mov
push
xor
inc
test
or
and
fcoml
das
push
mov
add
jl
cmp
jmp
loop
adc
test
and
inc
jecxz
mov
aam
push
dec
out
aad
mov
inc
int3
cmp
and
mov
adc
and
fucom
add
cltd
inc
test
add
adc
jp
push
jmp
mov
jns
pop
xor
cwtl
test
jle
jle
out
cld
repnz
sbb
lret
add
adc
push
pop
loopne
xor
cs
sahf
push
sub
rsm
fbld
out
call
cmpsl
stos
in
sub
inc
inc
fwait
subl
lock
sbb
jmp
lock
mov
out
push
jno
arpl
loope
push
mov
push
imul
pop
sbb
and
aaa
rcl
ljmp
sbb
jmp
shlb
dec
dec
pop
and
fbstp
sub
mov
or
add
pushf
test
jbe
lods
stos
pop
cmc
enter
mov
mov
pop
sbb
popa
aam
and
scas
mov
and
jle
sbb
dec
cmpsb
stc
fs
add
int
daa
jae
pop
pop
push
or
test
loopne
lret
jno
cmp
cmpsb
jge
bound
cld
ret
mov
dec
push
ret
cmpsl
in
sbb
orb
out
mov
lahf
xor
popa
repnz
add
lret
cmp
xchg
cmp
mov
stos
xor
ja
mov
adc
icebp
rol
mov
sbb
frstor
aad
outsl
adc
adc
add
xor
pop
shlb
cs
sub
dec
das
push
mov
dec
pop
dec
pushf
arpl
adc
push
dec
movsb
push
movsl
insb
ljmp
ss
fs
iret
sub
aaa
and
push
rcrl
mov
jb
popf
sub
stos
push
rorb
xchg
xchg
pop
xor
push
test
decl
out
jo
fsub
pop
ret
jecxz
les
lret
jbe
inc
fs
subl
stc
mov
dec
mov
or
js
pop
mov
in
jg
xchg
lods
dec
mov
addl
lahf
pop
push
push
pop
mov
jecxz
or
data16
mov
movsl
das
mov
cmp
call
xor
mov
or
into
ds
add
push
xchg
fimuls
cmpsl
sbb
inc
add
dec
jne
loope
pop
mov
xchg
and
lret
xchg
jp
das
bound
and
cld
movsb
push
push
mov
aas
mov
mov
loopne
lcall
inc
test
rcrb
pop
std
hlt
dec
add
sub
sbb
mov
xor
pusha
jno
adc
movsl
sbb
pop
mov
push
aad
add
repz
or
dec
adc
ss
jle
sub
and
sbb
mov
xchg
shll
in
fimull
pop
jecxz
adc
in
or
cltd
mov
cmp
mov
cmp
sbb
stos
repz
leave
test
repnz
cltd
les
mov
push
and
int3
aad
xor
sbb
add
jmp
mov
or
ja
out
xor
loopne
test
mov
cld
sti
pop
sbbl
jge
pop
dec
push
add
nop
out
lods
ficoms
or
imul
cmp
xor
fwait
mov
sbb
jecxz
jno
hlt
fisubrl
daa
sbb
add
mov
cs
mov
sub
cwtl
inc
adc
jo
lcall
adc
je
jp
mov
repz
imull
test
shl
sbb
and
mov
rcr
nop
push
jmp
cmc
ja
fildl
mov
jo
in
outsb
or
mov
pop
loopne
jmp
ja
shrl
in
push
stos
sub
mov
shld
test
xchg
decb
cmc
or
mov
int
sarl
mov
cmp
in
sbb
jge
loop
icebp
imul
xor
mov
dec
dec
std
jnp
push
and
loopne
aaa
insb
shr
sbb
stos
hlt
daa
ja
mov
xor
rclb
mov
call
imul
add
mov
iret
inc
movsb
ror
jp
inc
fwait
jo
jg
es
mov
push
jle
mov
lcall
repnz
lahf
out
aas
mov
jo
mov
inc
jmp
pop
sub
sbb
sbb
cs
jp
jp
lods
dec
scas
lods
xchg
or
insb
push
jbe
aas
adc
mov
mov
push
loop
sbb
push
xor
jno
adc
je
mov
jns
mov
push
outsl
mov
dec
ret
lock
rcr
add
sub
inc
cmc
pop
int
js
push
adc
mov
jbe
push
arpl
mov
pop
add
xor
push
ret
mov
lret
test
fsts
lret
cli
icebp
and
ret
add
pop
pop
js
cltd
scas
dec
pop
punpckhbw
lahf
ljmp
ja
cmovo
je
mov
xor
popa
adc
mov
sbb
cltd
push
mov
and
repnz
adc
dec
cmp
fdivs
cmp
sarl
imulb
fs
push
jp
sti
xor
mov
test
imul
ffreep
inc
stos
fwait
lock
fcmove
mov
popl
cmp
lahf
inc
cs
jge
aaa
pop
lcall
ficoms
and
shll
mov
or
shl
or
sbb
xchg
je
loope
inc
ss
repz
into
outsl
and
cmp
cmc
into
mov
xor
cltd
movsl
adc
push
mov
jno
lret
adc
xchg
dec
dec
mov
push
clc
lret
cwtl
cmpsl
cs
jmp
cwtl
pushf
mov
add
push
ja
inc
faddl
out
iret
and
loope
sbb
dec
lods
jge
dec
popa
fiaddl
stos
or
lcall
dec
mov
into
dec
stc
mov
xor
cmp
fstpt
ss
pop
xchg
pop
xchg
lods
setle
inc
cltd
jmp
cmpsl
inc
div
and
xor
inc
mov
jbe
inc
cmp
in
nop
out
push
and
outsb
dec
std
jno
addr16
movl
dec
xchg
mov
cmpsb
or
xchg
jecxz
dec
aas
sarl
jle
jnp
es
or
scas
jp
mov
scas
popa
add
mov
sub
cwtl
and
daa
inc
xchg
jg
cmp
imul
rcrl
cmp
sub
push
stos
fldt
inc
cltd
push
pop
cld
les
dec
sahf
inc
leave
mov
mov
popf
xor
in
clc
std
es
adc
inc
cmp
roll
sbb
std
and
cmpl
mov
std
jecxz
add
iret
add
sarl
or
sbb
rcl
loope
pop
xchg
xor
pop
out
scas
mov
scas
js
dec
data16
cli
inc
scas
fadd
mov
pop
and
fucomip
rcrb
aad
loop
and
mov
sbb
ret
insl
aad
and
dec
aaa
push
inc
lret
cmpsl
pop
jbe
jb
and
xchg
push
movsb
inc
dec
or
fstpt
decb
jns
repnz
sbb
mov
shll
out
jbe
mov
xchg
add
pusha
lret
hlt
leave
sub
adc
cld
imul
lds
jae
nopl
test
rclb
hlt
or
sub
pop
adc
cmpsl
sub
fistl
cmpsl
adc
jns
movsb
mov
sbb
cmp
push
mov
mov
mov
xor
cmp
ja
cmp
pop
imul
and
lahf
js
ds
negl
pop
xor
jne
stos
or
mov
mov
cld
stc
push
ret
int3
into
jge
test
ja
sti
mov
faddl
push
sbb
inc
or
inc
aaa
lcall
cmp
inc
sbb
lahf
icebp
add
out
add
and
je
inc
sbb
mov
mov
mov
xor
add
insb
ljmp
rcrl
fidivrs
xchg
mov
pop
adc
mov
sbb
adc
mov
mov
sbb
not
fs
adc
les
hlt
jmp
add
out
int3
sub
mov
out
jl
repz
aas
jecxz
dec
pop
jns
clc
stc
loop
adc
into
mov
out
cs
push
adc
xchg
sub
xor
orb
sub
call
xchg
xchg
xlat
call
movzwl
pop
dec
loopne
cmp
cmc
setl
sahf
add
jge
mov
lea
cmp
xchg
push
addr16
fwait
rcrl
xor
sub
mov
out
xor
push
inc
sbb
lods
movsb
lods
xor
mov
out
xchg
xor
xor
sbb
cmp
cld
dec
push
sar
jbe
shlb
jl
push
imul
addr16
push
adcl
and
mov
aam
shlb
or
in
repz
movb
inc
lahf
out
lahf
sub
jl
ret
dec
imul
add
and
ret
jbe
sub
and
jmp
sub
mov
push
pop
cmpsl
inc
jecxz
test
aad
xchg
xchg
addl
sahf
mov
mov
icebp
out
jmp
sub
inc
out
incb
fs
mov
push
aam
bound
das
cmc
dec
gs
xor
ja
call
jns
dec
dec
jne
push
jno
ja
add
mov
dec
sahf
shufps
jmp
fcoms
pop
mov
inc
out
inc
pop
or
sub
adc
xor
or
stos
sahf
mul
inc
out
sahf
movsb
jp
out
mov
mov
inc
enter
adc
pushf
pop
daa
mov
vmovdqa
repnz
xchg
adc
inc
cmpsb
or
out
sub
popf
and
sbb
mov
aas
mov
xchg
pop
sbb
push
mov
push
bnd
dec
inc
push
and
mov
daa
inc
insb
leave
ja
rorb
sahf
dec
std
xchg
cmp
subl
lods
and
call
sub
in
sub
inc
dec
rcll
xchg
sub
jp
mov
mov
inc
push
shlb
push
ret
mov
popa
inc
xor
mov
push
int
aas
gs
push
out
mov
out
addr16
mov
fs
sbb
dec
adc
xor
add
shlb
and
mov
movsb
pusha
in
add
mov
cmp
outsl
or
loop
fwait
and
push
subb
dec
mov
pop
enter
les
sbb
jl
daa
and
jp
outsb
nop
sar
dec
xor
addr16
pop
loope
clc
xchg
paddw
repnz
and
jmp
sub
pop
push
bound
aaa
xchg
dec
push
xchg
mov
sub
pop
mov
xor
jge
les
jne
pushl
jno
xor
js
xor
ja
jno
popf
subl
jnp
nop
cmp
iret
add
dec
inc
rol
mov
jae
lcall
test
dec
jae
pop
fisttpl
fcmove
shlb
and
insb
mov
mov
call
shlb
sbb
clc
add
add
loop
xorl
fwait
scas
icebp
xadd
push
imul
lret
or
sbb
lea
dec
mov
icebp
adc
push
gs
data16
icebp
or
ret
jns
sbb
inc
fwait
loopne
cmp
data16
aam
insb
pop
sbb
and
mov
and
shll
push
out
fidivrl
or
xorb
andb
aad
jno
arpl
mov
xlat
inc
dec
sbb
xor
lods
sub
pop
in
add
mov
test
dec
test
push
inc
rcl
outsb
cmp
jne
sub
mov
mov
fiaddl
xor
xchg
push
scas
pusha
pop
push
or
and
lcall
xor
outsb
inc
outsl
push
hlt
jo
movsb
pusha
jae
scas
enter
inc
out
pop
pop
lret
mov
pop
add
ljmp
mov
ret
mov
xchg
cmpsb
repz
out
outsl
popf
xchg
je
adcl
scas
ss
add
adcl
and
add
call
sarl
idivb
dec
cli
jno
xchg
enter
push
cmp
mov
or
mov
sub
jb
rclb
sub
push
sbb
push
ds
and
mov
xor
lret
and
lods
jno
mov
scas
dec
test
xor
out
daa
icebp
xor
fwait
cmpl
outsl
mov
push
stos
cmp
movsb
fists
data16
jecxz
fdivrs
pop
idiv
mov
loop
out
xor
xchg
inc
adcb
or
js
and
sti
and
jmp
jne
inc
in
je
pop
divb
mov
xor
in
mov
fstpl
jle
inc
mov
mov
pop
scas
push
mov
les
sub
mov
push
ret
or
sub
int3
into
in
jp
sub
dec
in
icebp
xor
and
push
mov
aas
xchg
push
inc
sbb
out
push
nop
xor
jae
bswap
mov
pop
loopne
dec
mov
lea
dec
cli
in
or
clc
mov
and
mov
or
test
pop
mov
adc
jp
cmp
dec
mov
jns
les
int
insl
push
xor
adc
sbb
jbe
fs
or
scas
loopne
mov
pop
mov
or
out
jmp
sbbl
imul
and
iret
adc
pop
and
and
sbb
movsb
mov
and
imul
pop
push
jnp
ljmp
loop
jmp
mov
xor
xchg
pop
ror
xor
push
adc
fistpll
jnp
nop
dec
sbb
daa
sub
je
dec
jl
in
mov
mov
movzbl
adc
cmp
fcomps
and
int3
cmp
mov
and
dec
xor
test
popa
inc
xor
xchg
cli
aad
enter
jno
pop
pop
shll
inc
pop
clc
gs
adc
xchg
xor
out
xor
test
adcl
cmpsb
mov
sar
push
arpl
sub
xor
fsub
or
and
adc
shrl
adc
push
push
or
push
subb
dec
dec
push
or
das
out
adc
mov
test
gs
mov
fldenv
cmc
pop
insb
in
jb
mov
cmp
out
ds
mov
jns
sbb
inc
or
push
cmc
pushl
fcom
lret
or
call
or
sbb
pop
out
push
test
outsb
sub
enter
lret
mov
fdivrs
mov
add
pop
push
roll
rcl
cmc
ret
nop
xor
and
lahf
xchg
repz
cmpsb
test
frstor
xchg
jno
popf
mov
js
bound
mov
push
imul
scas
repz
mov
cld
jnp
push
push
shrb
adc
mov
loope
lods
push
test
aaa
lea
bound
push
call
cmp
adc
out
jge
mov
mov
enter
jns
lcall
push
divb
in
or
dec
ja
notb
mov
xor
xchg
ds
inc
push
mov
les
notb
cmp
add
dec
push
pop
fiaddl
adc
dec
pushl
mov
clc
inc
xchg
sub
mov
repz
dec
xchg
sbb
aam
popa
xchg
push
jns
pop
cmp
add
dec
aas
and
test
push
xor
pop
sbb
mov
out
xchg
sbb
addb
jmp
jns
aad
lods
lret
cmpsb
push
imul
jecxz
stc
inc
dec
dec
mov
cltd
add
in
xchg
in
inc
mov
insl
lcall
fadd
inc
adc
push
iret
dec
mov
bound
mov
cmpsl
inc
aad
push
sub
push
adc
lds
sbb
es
mov
mov
xor
xchg
push
sbb
sbb
jle
test
lahf
cld
jecxz
or
lret
bound
cmpsb
dec
jne
cmc
adc
add
xor
jne
hlt
stos
push
add
aas
and
sub
je
dec
cmpsb
push
cmp
mov
inc
mov
movsl
loopne
sbb
test
dec
cmp
push
cs
outsl
call
inc
add
insl
enter
xchg
adc
adc
mov
stos
and
mov
mov
es
sbb
push
adc
cmp
dec
je
loopne
scas
je
xchg
sarl
outsl
insl
jl
dec
pusha
in
repz
test
popf
loope
lods
icebp
fsts
cli
nop
in
ja
inc
jae
and
adc
jp
icebp
cli
mov
scas
pop
push
xchg
js
mov
mov
mov
arpl
push
mov
adcl
cmpsl
arpl
xchg
aas
sbb
idivb
xchg
adc
mov
stos
dec
adc
mov
push
rcrl
add
pop
pop
daa
filds
mov
fcmovne
push
out
lret
into
les
mov
test
in
cmc
sbb
jmp
fcomps
jbe
xor
test
dec
stos
mov
pop
arpl
loopne
out
dec
xchg
adc
adc
clc
inc
jns
inc
out
fcmovnbe
pop
lcall
insb
inc
hlt
pop
and
faddl
xor
cmpsb
cli
int
or
ss
sbb
push
cmp
mov
inc
std
out
fcmovne
mov
gs
das
jb
or
cmpsl
jne
dec
xchg
adc
jecxz
insb
push
pushl
scas
aam
dec
out
in
add
test
stos
nop
pushf
cmp
pop
mov
xor
stos
sub
repnz
mov
sub
outsb
scas
xchg
or
mov
xchg
lret
add
in
shll
push
fldt
mov
mov
fbstp
push
mov
add
adc
sbbb
adc
gs
jge
dec
jecxz
xor
xor
data16
fnstsw
pop
cmpsb
dec
scas
jmp
xlat
and
add
mov
test
adc
add
xchg
ror
fimuls
and
mov
cmp
pushf
push
mov
or
das
fstps
test
test
sbb
pusha
mov
fnstsw
jae
or
push
lahf
mov
and
mov
jno
test
es
inc
pop
xchg
nop
int
add
sub
repz
ret
xchg
cwtl
sbb
outsl
dec
in
jno
pusha
mov
dec
push
arpl
or
mov
sbb
gs
xchg
js
xchg
jno
or
sbb
push
push
movsb
pusha
into
mov
data16
jmp
punpckhbw
mov
cmp
add
sub
adc
sbb
xorl
pop
xor
mov
test
insl
pop
addl
pop
test
iret
sahf
lea
test
fisttpll
dec
push
push
inc
pop
mov
imul
pop
fwait
shl
adcb
ds
bswap
in
adc
leave
pop
dec
roll
adcl
mov
sbb
jp
icebp
lea
ret
mov
sub
mov
xchg
fs
push
sar
std
or
lahf
aam
movsl
sub
xor
jg
mov
cltd
mov
scas
or
push
mov
pop
mov
cmpsl
add
pop
aad
and
inc
in
jp
pop
rol
loop
insl
fistps
mov
pop
mov
cmp
mov
push
inc
addr16
jns
inc
lods
mov
dec
pop
cmp
jb
and
in
sbb
stc
aas
addr16
fdivrl
cld
xlat
xchg
sbb
mov
inc
lret
jae
and
or
jecxz
xchg
leave
xchg
orb
dec
adc
repnz
sbb
test
je
mov
int
xor
cmp
int3
jb
lcall
jnp
test
pop
lahf
mov
adc
add
dec
and
cmc
mov
icebp
sub
jbe
repz
xchg
notb
inc
lds
mov
ret
subb
ss
imul
lods
cld
movsl
in
aam
cltd
inc
insb
jmp
das
jge
or
inc
mov
xchg
push
pusha
out
das
jns
int3
mov
sbb
mov
xor
inc
inc
pop
jmp
scas
test
xor
xor
cmpsl
lahf
rcrl
and
mov
popa
bound
mov
xor
fdivl
ret
lahf
ljmp
bswap
xchg
fimull
cmp
mov
add
js
pop
fwait
sbb
fistpll
push
stos
cmpsl
sbb
aad
frstor
loopne
jl
into
cmp
xor
xor
xchg
aaa
cmpsb
bound
loop
xchg
in
rolb
xchg
mov
sub
imull
sub
xor
jne
fldt
add
mov
cmp
mov
dec
jb
adc
xchg
aaa
js
imul
test
mov
in
gs
or
dec
mov
mov
jne
jb
ret
inc
pop
mov
fcomip
test
pop
pop
and
sbb
pop
out
add
pop
xor
fsub
lret
cwtl
je
mov
imul
cmp
push
pop
aas
pop
je
and
sub
xor
sbb
jne
cli
fdivp
popf
inc
xorb
or
nop
add
pop
xchg
inc
cmp
paddd
xor
in
mov
mov
orb
xchg
xchg
loop
push
pop
or
and
add
shll
cmp
add
cmp
les
icebp
je
jmp
jecxz
fwait
jnp
fwait
cmp
lock
lock
mov
enter
adc
xlat
arpl
pop
loop
and
mov
loop
mov
sub
movsl
fcmovne
aad
aad
daa
cmp
cmp
mov
add
ret
gs
xchg
aad
inc
aam
xlat
mov
adc
dec
mov
clc
pop
mov
sti
dec
lods
sub
pop
test
dec
push
xchg
pushf
xchg
push
mov
adcb
and
into
mov
pinsrw
push
dec
mov
rcr
add
ljmp
scas
lret
test
test
xor
mov
or
add
jno
dec
fs
jnp
inc
sub
call
mov
sar
fmull
test
jecxz
lods
xchg
std
loop
pop
lea
jge
movsb
mov
mov
ja
icebp
lds
push
mov
adc
scas
mov
sbb
xchg
cmp
adc
shrb
fimuls
mov
stos
xchg
rorl
cmp
xchg
inc
fwait
and
psubw
popf
lods
imul
movsb
sbb
push
jno
cmc
and
scas
inc
dec
xchg
cmc
int
pushf
pop
not
jb
jge
pushf
test
pop
cmc
sub
leave
push
jle
mov
xor
in
ret
in
and
rolb
xor
jnp
hlt
dec
and
and
les
cmp
mov
pop
daa
mov
pop
inc
mov
test
lret
pop
pop
mov
pop
sub
pop
stos
add
leave
jns
or
lock
repnz
repz
pusha
stos
cmp
cld
pop
mov
fldenv
xor
adc
or
push
mov
arpl
xchg
fildl
rcll
into
aas
enter
add
test
fmull
mov
lea
ret
mov
xor
and
sbb
loop
std
in
loopne
pshufw
loope
xchg
fdivs
popf
outsb
rcll
outsl
dec
data16
cmp
decl
sub
jg
in
in
cmpsl
xor
fwait
push
dec
subl
sbb
jno
pop
jae
push
into
lock
xor
lods
movb
cmp
xlat
xor
jns
lds
push
push
shr
jo
das
and
mov
xor
loop
mov
mov
lds
push
mov
imul
sahf
adc
imul
imul
jecxz
mov
sti
mov
outsb
and
nop
jp
lret
jle
sub
xor
leave
jg
outsb
and
imul
cmpsl
decb
xor
in
push
cmpsb
inc
sub
imul
push
into
jnp
push
mov
or
cmp
adc
dec
out
sbb
xor
cwtl
cmpsb
push
mov
rol
lret
repnz
pop
ss
sarb
inc
sub
ja
mov
push
jne
mov
xchg
pop
cwtl
inc
ds
loope
and
fs
inc
and
dec
jg
push
cmc
pusha
fcoml
fincstp
cmp
push
fsts
jb
addr16
xchg
pcmpgtb
movsb
ret
fsts
std
adc
lret
shrb
jle
scas
mov
pushl
dec
add
out
pop
cmp
mov
push
mov
shrb
mov
pandn
or
adc
fsubs
sbb
fidivl
pop
std
cli
pop
shlb
ret
inc
fcoml
and
mov
call
jbe
hlt
jge
mov
ljmp
fmuls
call
or
xchg
int
pop
adc
pop
jl
jns
jbe
pop
xchg
sub
push
lret
xchg
pop
insl
xchg
out
add
es
mov
xchg
out
dec
negb
mov
popa
mov
fldenv
lock
mov
pop
mov
mov
xor
and
insl
mov
jnp
out
clc
setbe
sbb
sbb
out
mov
cmpsl
shrb
rcr
add
pop
xor
mov
mov
pop
sub
outsl
test
ss
in
xor
sahf
scas
cmp
imul
cli
push
adc
insl
push
adc
lcall
jns
shlb
pop
jae
iret
subb
mov
mov
addr16
fwait
xchg
mov
iret
nop
mov
daa
mov
jle
fisttpl
pop
push
jno
frstor
sub
add
ret
and
push
and
lcall
jbe
sbb
pop
repnz
mov
xchg
mov
cmp
mov
mov
call
movsb
into
xchg
xor
sub
cmp
xor
shlb
jmp
pop
dec
pop
cmp
imul
push
add
stos
insb
fnstenv
arpl
into
mov
adc
lock
jl
scas
test
cmpsb
and
inc
inc
dec
push
shlb
mov
lret
mov
aaa
sub
mov
imul
test
sub
pop
mov
pop
adc
dec
and
push
lahf
xchg
inc
cmp
ss
out
mov
filds
movsb
dec
mov
ss
fldenv
imul
push
movb
pop
xor
push
int3
mov
jmp
xchg
pop
push
es
jecxz,pt
add
fsin
ljmp
out
pop
ret
adc
lods
inc
das
jne
outsl
loop
sahf
xchg
mov
scas
xor
fbld
out
pusha
jbe
inc
add
fsubs
mov
jle
pop
mov
stc
lret
loopne
frstor
xchg
cmpsb
mov
cmp
lahf
outsl
mov
addr16
jp
lret
sti
and
leave
jnp
jns
mov
stos
sub
pushf
insb
imul
test
mov
or
pop
inc
dec
enter
lock
dec
repnz
jne
lahf
test
std
mov
cmp
sub
iret
lea
in
xor
jo
iret
pop
cmp
or
int
sub
lret
or
in
decb
cmp
mov
insb
cmp
adc
mov
adc
add
test
mov
push
inc
sub
in
pushf
int
mov
jno
mov
pop
stos
out
iret
sbb
enter
jecxz
aaa
les
outsl
iret
cmp
imul
ror
psubw
cwtl
mov
in
popa
jne
rep
aam
inc
jne
push
xchg
sbb
adc
popf
sub
push
xchg
lock
sub
adc
or
or
sar
dec
test
or
dec
in
xchg
in
jo,pt
shrb
fsincos
popa
stc
mov
scas
xor
daa
nop
ss
push
mov
dec
lods
roll
std
clc
hlt
pop
and
xor
into
dec
cmp
lcall
aaa
jle
or
push
mov
mov
lds
mov
ss
loopne
rorl
jo
mov
movsl
push
xchg
mov
dec
cmc
fsubrp
sti
xchg
mov
in
or
rcrl
dec
imul
xor
leave
ss
push
rcrb
int
lea
or
dec
fdivrl
cmp
aaa
jne
cmp
stc
sti
and
aad
das
js
stos
pop
dec
jno
pop
out
add
cmp
insb
lret
or
lahf
push
sub
pop
inc
pop
movsb
xor
je
xor
hlt
mov
rolb
push
sbb
xor
push
repnz
js
sbb
test
mov
xchg
sbb
or
push
lret
push
movsb
aam
insb
shll
adc
int
jae
enter
inc
mov
das
fmul
xlat
repnz
sub
dec
xchg
mov
mov
cltd
repnz
lea
loopne
mov
mov
xchg
mov
repnz
mov
lods
mov
push
adc
sbb
xor
pop
dec
jnp
fwait
aas
lods
pop
dec
jne
cmp
mov
imul
stos
jmp
inc
rorl
adc
cmpsl
dec
inc
cmc
int3
push
gs
fsubrl
call
and
out
sub
jo
testb
adc
arpl
int
or
xchg
outsl
and
out
mov
xchg
test
repz
dec
jmp
dec
mov
pusha
in
lods
mov
add
mov
sti
or
dec
jns
dec
adcl
add
loop
vpshuflw
lret
add
xorb
mov
ja
inc
dec
cmpl
dec
stos
dec
pop
loop
push
or
cmc
fiaddl
notb
push
xchg
lcall
push
xor
mov
cmovl
loope
lea
ret
sbb
adc
mov
xor
jg
orb
fistl
andl
fimuls
cs
arpl
lret
inc
js
pop
mov
aam
jmp
inc
or
iret
jne
jns
loopne
in
add
stos
xchg
jbe
pop
lds
xchg
cmpsl
jl
jmp
je
inc
test
and
xlat
sbb
lock
sti
mov
outsb
xlat
mov
jo
pop
mov
loope
in
sub
ret
das
xor
pop
sbb
decb
sbb
fwait
inc
sahf
jae
lret
and
xorb
xor
fidivrs
push
xor
imul
mov
cmc
ss
push
jge
mov
jne
sbb
imul
ja
xor
rorl
into
jle
clc
call
jno
inc
cs
icebp
lcall
push
stc
mov
inc
mov
mov
adc
mov
mov
arpl
je
pop
pop
fstl
adc
fisubs
sbb
sbb
dec
fistl
mov
lcall
in
not
test
add
test
xchg
and
xor
call
mov
popa
rcrl
pop
pop
dec
jbe
aaa
enter
movsl
shr
imul
rorb
fchs
pushf
aaa
mov
jbe
pop
mov
shll
es
test
es
and
fisubrl
aam
idivb
lahf
cli
or
add
jmp
pop
int
outsb
ficompl
inc
icebp
mov
pop
cmp
cmpsl
stc
dec
mov
pop
and
sbb
push
je
jmp
lds
add
jl
decl
call
fwait
push
mov
adc
sub
or
jb
and
es
in
cmp
aad
mov
sub
mov
or
push
dec
xor
stos
mov
xor
cwtl
xor
dec
push
xchg
scas
fnstsw
jmp
std
cmp
movsl
outsl
mov
push
popa
rcll
das
push
sub
lret
ljmp
jo
sub
mov
sbb
xchg
pop
stc
bound
into
sub
mulb
loope
negb
pop
pop
call
scas
lret
xchg
pop
mov
ss
xchg
pushf
push
orb
pop
in
lcall
mov
pop
xchg
push
rorl
inc
mov
jp
mov
les
dec
gs
inc
nop
subl
or
mov
mov
mov
inc
stc
aam
cmp
movsl
push
xlat
mov
lock
std
sysenter
movsb
mov
and
jne
lods
outsl
imul
andb
cmp
dec
fwait
lods
out
mov
ja
adc
rcrb
nop
xchg
lods
es
mov
add
lret
ficomps
lret
sbb
sbb
sub
and
in
out
lea
add
mov
dec
xchg
xchg
jns
icebp
out
push
scas
mov
clc
sub
adc
loop
pop
mov
movsb
mov
insl
sub
or
std
mov
dec
les
out
bound
dec
scas
popa
push
jle
xor
or
xchg
test
mov
cmc
fsubr
enter
sub
xor
ja
pop
add
sub
test
lds
jmp
jns
shrl
cmp
pop
ljmp
xchg
jae
daa
xchg
ja
ficompl
mov
sbb
je
fistpll
pop
jo
dec
jmp
dec
inc
push
inc
inc
popa
sub
xchg
sub
mov
xor
insl
test
loopne
rclb
test
cld
pop
push
pop
cli
mov
sbb
pop
jbe
and
sbb
lret
in
lcall
sbb
pusha
in
int
mov
mov
xor
xchg
mov
je
fwait
push
fisttpl
pop
jae
push
pop
mov
adc
leave
scas
clc
and
sbb
loopne
fdivs
adc
pop
add
or
mov
aas
dec
lret
sub
outsb
shll
inc
dec
add
fstpl
sbb
and
fs
decb
leave
cmpsb
das
and
mov
jp
lods
jl
cmp
push
cli
push
jns
stc
and
lret
xor
aam
outsb
stos
mov
xor
aam
xlat
add
pop
mov
mov
cwtl
mov
and
ljmp
loopne
jno
fs
jno
mov
xor
ljmp
jecxz
testl
lret
mov
ja
movsl
mov
add
aam
imul
jno
loop
xchg
es
ds
xchg
add
lods
xor
scas
mov
sbb
mov
enterw
mov
cld
sbbb
push
sub
sbb
xchg
jne
xor
in
cwtl
push
popa
in
out
mov
adc
jno
xchg
xlat
jge
add
or
dec
and
std
fs
aas
sub
popf
jge
in
sbb
insb
in
sbb
sub
cmpsb
pop
inc
inc
xchg
hlt
lods
rclb
mov
scas
push
sub
pop
mov
movsb
mov
add
leave
insb
out
pop
and
dec
nop
cmp
mov
mov
fdivr
call
js
mov
in
dec
and
cli
push
add
sbb
icebp
xor
jne
pop
push
bound
mov
arpl
test
outsl
mov
push
and
dec
out
sub
ds
dec
or
mov
xchg
sub
dec
adc
lds
xor
add
mov
mov
pop
xchg
js
popa
xchg
mov
xchg
dec
or
mov
push
pop
das
jae
pop
push
outsl
dec
pop
mov
xor
add
in
nop
mov
aam
pop
push
fnsave
dec
or
aaa
sbb
inc
pop
nop
jl
mov
sbb
ret
das
daa
add
xor
jg
nop
test
imul
stos
aad
pop
sub
mov
jno
adc
push
jb
sbb
es
setg
sbb
scas
xchg
mov
icebp
jno
loop
cmc
aas
addr16
dec
push
fwait
fwait
ret
scas
fcmovnbe
das
jle
test
adc
dec
pop
push
adc
pop
out
imul
lods
rorl
out
mov
loop
imulb
sti
out
sbb
fistpl
cmc
lods
pop
mov
test
test
gs
or
in
sub
jmp
xor
repz
stc
lcall
dec
movsl
inc
xor
ret
mov
dec
mov
aaa
roll
sahf
rorl
nop
test
pop
lcall
xor
mov
xchg
sbb
ja
cmp
pop
rclb
sub
sti
movl
sub
repnz
popa
xor
scas
data16
aas
mov
push
push
pop
imul
cmp
mov
scas
pushf
jns
cwtl
addr16
dec
inc
and
add
pop
jmp
add
or
mov
jae
jne
aad
pop
adc
xorl
pop
mov
stos
jo
pop
icebp
xor
lahf
mov
mov
or
out
cld
lods
repnz
repz
push
aaa
jle
mov
xchg
mov
sti
pusha
enter
mov
cld
jnp
adc
and
lock
ds
and
xor
inc
lea
sbb
movaps
cmp
xor
dec
outsb
fisubrl
cmp
and
testb
loopne
daa
mov
cmpsb
fdivl
iret
add
push
aam
decl
out
and
lods
push
xlat
push
ss
add
inc
jl
and
lret
jecxz
fildll
addl
push
fwait
dec
ss
rcrl
or
add
xor
shlb
idivb
push
sub
dec
jecxz
in
pop
lahf
sbb
in
and
aam
fisubs
xorl
or
sbb
div
dec
or
add
fcoml
call
mov
jle
jmp
push
mov
add
adc
jne
stos
add
push
and
sub
push
sti
bound
divl
inc
push
push
and
xorl
push
adc
fisttpll
cli
push
int3
lahf
int3
xor
cmpsb
add
mov
fwait
pusha
lcall
adcb
popa
dec
mov
adc
or
mov
push
sub
pusha
mov
mov
gs
mov
mov
sub
loopne
pop
popf
jle
cld
mov
adc
adc
or
aam
or
popa
cmp
loope
iret
dec
jg
cmp
add
in
aas
repz
in
pop
dec
jno
jno
stos
clc
lret
pop
jno
dec
fsubl
lds
push
cmp
pop
mov
cmp
jp
in
xor
loope
int3
jmp
out
pop
mov
inc
lret
adc
xor
dec
sub
mov
imul
push
pushl
and
clc
inc
jnp
js
lahf
jbe
in
test
lcall
and
shr
leave
or
pop
aas
loopne
sbb
mov
outsb
add
jmp
les
sbb
int
aam
mov
mov
aaa
sahf
xchg
out
arpl
mov
fxam
popf
jns
sub
cld
shrb
dec
adc
aam
cli
mov
adc
popf
outsl
ss
shlb
shll
pop
mov
into
mov
rcll
and
popa
cmpl
xor
ja
mov
cmp
cmp
mov
pop
xlat
dec
je
mov
cwtl
xor
inc
in
push
inc
jge
inc
mov
mov
mov
aam
in
nop
mov
cmp
int
cltd
sbb
push
in
mul
push
adc
shrb
mov
cmpsb
sub
and
ljmp
je
popf
inc
or
pop
mov
or
xor
lret
jp
mov
pop
dec
mov
xor
call
push
shrl
dec
stc
cmp
mov
xor
add
enter
add
out
dec
sbb
mov
repz
in
outsl
mov
mov
hlt
sar
mov
xchg
sarb
cmp
mov
jle
out
outsb
loope
filds
in
sbb
int3
js
or
mov
push
mov
stos
scas
sub
push
push
out
push
dec
xor
ret
pop
mov
sti
jmp
add
shlb
loop
test
mov
adc
pop
mov
pop
or
add
jle
jne
lods
ret
lock
xchg
pop
mov
popa
lea
jle
mov
shl
mov
pushf
cmp
or
out
lods
lret
mov
js
xchg
es
int3
mov
mov
and
mov
lcall
repz
loope
loopne
dec
jecxz
push
mov
mov
sbb
jno
icebp
sbb
rolb
je
in
out
cwtl
std
or
in
in
cmp
outsb
dec
cmp
sbb
xchg
push
inc
push
bnd
repz
jbe
dec
ficoml
imul
jae
dec
push
popa
incl
pop
cmp
js
shll
pop
lods
cmp
lods
mov
xchg
dec
sar
jmp
lret
insl
loop
call
lret
pop
fistps
jl
add
xchg
pop
sub
mov
add
sbb
adc
into
inc
aam
aad
out
enter
fwait
sbb
mov
insl
adc
pop
dec
aam
cmp
into
push
mov
pop
jmp
cmpsl
sbb
push
lds
sub
loopne
inc
in
sub
xchg
xchg
pop
into
imul
aad
test
mov
xchg
les
add
std
gs
adc
mov
mov
adc
loope
test
sub
insl
xchg
jge,pt
pop
cld
push
add
mov
fs
pop
add
leave
xlat
inc
mov
loop
mov
lea
jecxz
daa
cld
pop
aad
pop
jae
arpl
cmpb
sub
psadbw
sub
xchg
lcall
roll
push
inc
sub
fs
adc
mov
pop
movsl
sbb
push
in
inc
pop
popa
cmp
xchg
fists
aaa
mov
cmp
sub
addb
mov
fs
lret
fldl2e
mov
pushf
in
adc
pop
mov
cwtl
fistpl
arpl
mov
cmc
adc
push
or
adc
call
pop
push
loope
inc
cmp
sub
rcr
cmp
fcompl
out
in
dec
das
stos
into
out
int3
jle
mov
outsl
bound
or
int
cmp
sub
fdiv
xchg
je
jg
out
lcall
ds
mov
mov
pop
xchg
adc
pop
and
pop
jecxz
adc
aas
mov
rcr
int3
bound
arpl
and
and
mov
mov
shlb
push
xor
fimuls
std
scas
insl
add
pusha
loopne
inc
fwait
out
mov
outsb
mov
out
adc
ds
enter
xchg
mov
ja
negl
xlat
xchg
ret
cmp
outsl
xchg
mov
lods
sub
cs
push
xchg
ret
scas
frstor
cld
movsl
dec
movsb
in
add
mov
fisubrl
mov
loop
sbb
mov
jne
and
jp
jno
pop
pop
call
mov
ja
cmpsl
ds
ds
xchg
xchg
push
addr16
xchg
lret
push
push
shr
pop
mov
clc
ja
push
dec
or
movsl
mov
mov
sbb
xor
js
fnsave
cltd
dec
sbb
das
mov
js
jns
dec
in
add
scas
inc
add
push
in
in
xor
fcoms
adc
and
dec
sbb
scas
mov
sahf
mov
inc
fs
mov
mov
test
lea
das
mov
das
adc
pop
insb
shr
adc
ficoml
out
add
leave
dec
push
icebp
and
xchg
mov
aas
popa
cmp
test
inc
inc
mov
mov
ja
clc
mov
cmp
jmp
mov
enter
mov
cmc
fdiv
add
adc
cli
fs
sub
mov
std
push
mov
push
sbb
jg
or
mov
hlt
add
inc
adc
loop
rcr
mov
int3
pop
add
sbb
lods
cltd
aas
mov
insl
rorl
pushf
ret
std
xchg
pop
and
and
pushf
push
hlt
dec
mov
mov
adc
or
and
divb
stc
mov
lods
xchg
xor
lods
dec
pop
es
and
inc
mov
sbb
insb
or
rorl
mov
insb
pop
test
inc
pop
add
sbb
mov
jmp
sub
adc
dec
leave
pushf
pushf
out
dec
or
int3
push
sti
pop
enter
iret
adc
push
jmp
or
cwtl
sub
loop
loope
jl
subl
sub
inc
repz
das
outsl
iret
loopne
js
inc
pop
outsb
cmp
cmp
pop
movsl
repz
shll
mov
push
jg
icebp
adc
test
data16
fmulp
clc
sub
cmpsl
repz
ljmp
cwtl
sahf
inc
pop
xchg
sbb
stc
aad
xchg
lods
cmp
mov
js
jo
pop
icebp
mov
ret
pop
ss
mov
imul
jae
rep
jmp
lsl
mov
rcrb
fsubl
mov
fninit
pop
push
outsb
ljmp
xchg
xchg
xor
outsl
iret
mov
push
loop
rcrb
leave
imul
dec
movd
pop
xor
push
sub
mov
scas
imul
aam
mov
xchg
pop
cld
xchg
mov
xchg
arpl
addr16
xchg
mov
push
jp
inc
and
addr16
leave
push
outsl
inc
lock
negb
pusha
inc
adc
and
pushf
test
or
ljmp
cmp
sbb
mov
fidivl
movsb
or
clc
out
push
sub
das
fidivl
fcomp
dec
ret
cmp
out
pushf
insl
je
sub
add
and
sub
pop
jnp
pop
xchg
adc
push
icebp
mov
jae
lds
jae
in
arpl
cmc
xchg
mov
xchg
jne
in
xchg
pop
push
or
sbb
mov
inc
in
fucom
fsubr
adc
ds
add
sahf
mov
lock
clc
mov
mov
mov
test
jns
sbb
mov
mov
dec
inc
xchg
test
sbb
daa
xchg
nop
stos
fwait
pop
test
xor
adc
sti
out
lds
mul
pop
cmpsl
dec
inc
out
mov
mov
mov
rcl
movsb
mov
sarl
lcall
aas
add
test
in
pusha
lods
stc
fwait
addr16
imul
ds
stos
loop
sbb
adc
xor
adc
cmp
dec
dec
jbe
imul
aas
jp
popf
cmp
movsb
mov
outsb
sub
mov
addr16
push
push
mov
mov
mov
mov
add
mov
jnp
sub
adc
sub
mov
test
and
push
sar
sub
and
repz
pop
cwtl
jb
std
add
aas
pop
test
sbb
lock
shrb
and
int
dec
cmpsl
fmul
xor
xor
aam
mov
jge
sbb
and
jno
inc
orb
inc
jecxz
xchg
loope
sbb
addr16
add
pusha
inc
jae
outsl
or
cmp
push
ja
andl
add
inc
popf
int3
les
mov
mov
push
sbb
sbb
sbb
mov
icebp
inc
adc
or
js
mov
and
adc
and
ret
nop
adc
mov
sbb
sahf
sbb
xchg
fiaddl
ret
cli
and
mov
dec
pop
repnz
xchg
cmpsb
add
mov
bound
push
test
rclb
repnz
scas
test
adc
lret
cwtl
outsb
in
pop
sti
gs
packsswb
mov
inc
sub
sbb
mov
and
mov
popf
cmp
loopne
mov
int3
dec
std
add
cmpsb
popf
pop
daa
into
mov
jl
jmp
hlt
pusha
test
adc
cmp
adc
sbb
aad
popf
push
or
mov
push
mov
jb
popl
sbb
adc
popl
push
mov
jle
in
fstps
xlat
dec
xor
sbb
sbb
loopne
rcrb
cmpsl
mov
popa
mov
ds
ja
inc
in
adcl
bound
jmp
leave
xchg
pop
repz
je
push
and
pop
hlt
negl
js
cs
xor
insb
shll
xchg
inc
cmpsl
add
inc
mull
scas
inc
xchg
scas
dec
mov
rolb
mov
das
aam
or
ss
jp
jbe
lret
dec
xchg
push
sub
cmc
push
pop
or
cmc
je
in
jbe
fbstp
aad
icebp
leave
decl
jae
cltd
cwtl
adc
mov
mov
mov
push
push
lods
aas
inc
addr16
lods
mov
out
sbb
and
gs
mov
leave
nop
rorb
ljmp
push
jno
lahf
ret
sbb
fadds
inc
hlt
int
call
test
xchg
or
lret
rcrl
ds
jae
inc
shll
inc
xchg
aam
xchg
enter
xor
sub
jbe
pop
out
mov
xchg
das
into
add
or
cmpsb
in
pop
hlt
sub
mov
rclb
mov
add
loop
and
pop
movl
inc
mov
data16
test
fdivrs
sub
push
jnp
adc
insl
out
in
mov
insl
xchg
mov
in
aad
jg
jmp
stos
mov
dec
push
pop
push
xor
xlat
cld
scas
push
fwait
mov
jns
rcrl
cs
lret
stc
imul
imull
push
push
out
push
mov
pop
imul
pop
sub
push
pop
movsl
ja
add
or
dec
jne
mov
mov
jo
stos
mov
mov
push
sahf
cltd
push
jg
inc
mov
cld
push
dec
xor
sbb
ret
add
add
sub
pop
test
roll
fmuls
pop
loop
jae
add
xacquire
test
mov
inc
mov
test
mov
pop
push
mov
out
add
xor
aas
sti
lcall
push
dec
jo
xchg
mov
sbb
jb
push
jno
and
jl
rcrl
mov
mov
movb
mov
pop
aam
lret
mov
cmpsl
push
adc
arpl
insb
mov
adc
jb
dec
pop
sbb
ljmp
dec
pop
xchg
das
cmpsb
or
lds
pop
add
mov
xchg
adc
popa
icebp
add
mov
es
scas
push
jp
xchg
xchg
jmp
dec
add
inc
call
fiadds
mov
frstor
lea
fdivl
movsb
stos
pop
push
inc
out
add
mov
fsubrl
xor
adc
and
arpl
iret
jne
lcall
and
ds
push
push
xchg
pop
inc
inc
jns
mov
hlt
pop
and
xor
les
jno
adc
adcl
imul
popf
iret
fwait
add
mov
jge
xor
push
incl
lock
fildl
popf
push
repnz
imul
jnp
mov
rcrl
divl
jno
mov
jge
pop
dec
jl
rolb
aam
clc
inc
popf
add
lcall
jne
sub
ja
test
movsb
cld
adcl
xchg
mov
pop
xor
jl
xchg
imul
push
inc
ja
fsqrt
cmp
andl
and
mov
xchg
les
jge
in
arpl
daa
fimuls
dec
lock
fisubrs
pop
mov
dec
daa
push
jecxz
addb
mov
fcomip
cmp
dec
jnp
std
mov
dec
leave
sbb
or
sub
sub
int
cs
jmp
add
add
add
xor
sbb
add
lea
pop
mov
push
jmp
nop
rorl
test
xchg
add
adc
and
mov
mov
lea
lret
popa
sarb
mov
mov
repnz
imul
ret
cs
xchg
and
cmc
or
insb
jmp
shrl
dec
int3
mov
adc
div
jns
pop
nop
roll
push
dec
aad
sbb
rcll
mov
sub
lods
rolb
sbb
cmp
mov
xchg
out
out
aaa
cmp
jbe
mov
outsb
push
sbb
adc
outsl
scas
loop
out
out
sbb
add
mov
insb
pop
cmp
sub
inc
push
in
lds
push
adc
outsl
outsb
add
jne
call
mov
repz
jl
scas
ret
not
out
dec
popa
pop
or
gs
and
popa
inc
lea
daa
hlt
fdivrl
shrl
stos
dec
jbe
or
add
icebp
lods
jle
pop
fcmovnu
pop
sbb
cmp
mov
mov
and
in
popf
push
push
outsb
gs
mov
call
ja
push
jg
add
mov
jmp
insb
out
pop
addl
mov
stos
push
lcall
push
push
fdivrs
xchg
rcll
cmp
inc
mov
push
sarl
or
clc
call
xchg
dec
sbb
icebp
lret
insl
jbe
repnz
imul
mov
dec
mov
mov
mov
cld
jecxz
jns
in
pop
arpl
sub
lods
outsl
popf
dec
std
sbb
call
std
pop
sub
inc
jge
int
dec
cmp
mov
inc
sbb
adc
lcall
lea
lods
mov
cmp
jne
in
jmp
cmp
mov
ja
jle
sbb
push
ret
pop
fldcw
adc
in
repz
les
daa
and
dec
int
inc
xchg
pop
fstps
jl
mov
cwtl
inc
jbe
in
xchg
cltd
push
stc
popf
inc
shrl
push
adc
and
pop
rsm
xlat
test
mov
jle
sbb
fadds
ss
repz
xchg
out
jnp
mov
cmp
hlt
push
out
xchg
hlt
repz
mov
adc
lods
or
jnp
jns
arpl
pop
popf
mov
mov
xchg
xor
ficoms
mov
push
add
push
sbb
push
dec
sbb
push
addb
sti
push
sub
sub
jne
test
rcll
dec
fwait
adc
jno
pop
cmp
icebp
cwtl
sub
sub
push
adc
sbb
dec
fwait
sbb
pop
pushl
xchg
cltd
ja
pop
stc
xchg
int
into
push
jnp
or
push
sub
add
add
sbb
mov
out
inc
pop
mov
nop
repnz
mov
and
mov
into
push
push
js
insl
shl
mov
or
in
mov
jl
je
or
push
call
add
ret
push
mov
lahf
out
jmp
pop
insb
js
jg
hlt
push
push
std
sub
ret
jle
iret
lea
in
inc
mov
cmpsl
xchg
imul
and
sub
lahf
push
daa
cwtl
fcoms
out
int3
inc
pop
fildl
pop
ret
mov
pop
xchg
xor
leave
div
add
cmp
dec
stos
mov
jno
lret
mov
push
enter
ret
mov
pop
sbb
repnz
dec
jle
lods
mov
sbb
inc
dec
mov
andl
adc
inc
cmp
xor
test
mov
ficoml
repz
es
push
add
arpl
je
add
cmpl
std
add
je
xchg
fs
and
cmpsb
pop
jl
into
dec
pusha
fs
push
shl
push
inc
sub
dec
hlt
iret
repz
and
insl
pop
orl
aam
fisubl
movzwl
adc
in
lea
rorb
xor
inc
dec
push
es
ror
out
mov
pop
add
cmp
lock
push
dec
sbb
sub
scas
add
add
call
pop
push
loopne
fldt
jecxz
shl
lret
es
jns
mov
mov
or
dec
sti
test
jbe
je
cmp
out
sub
cld
sbb
lock
sub
adc
dec
add
idivl
push
inc
bswap
cmc
xor
shlb
xlat
and
dec
out
movsb
jmp
sub
pushf
das
jne
push
lods
imul
cmp
jnp
adc
push
push
sub
test
pushl
mov
cmpsb
push
xchg
mov
rcrl
mov
push
in
inc
call
dec
mov
lcall
scas
dec
int
jne
xchg
movsb
popaw
fsubr
and
sysexit
pop
cmp
xchg
mov
dec
jae
hlt
push
lret
stc
in
fcomps
js
in
imull
dec
mov
mov
mov
js
inc
cmc
fistpl
jp
lods
out
xor
mov
insb
jmp
stos
pop
jb
inc
sbbb
mov
cmp
fists
sti
stos
cmp
cld
data16
or
insl
or
jmp
jb
test
add
jnp
add
popa
js
cmp
mov
shlb
pop
jb
xor
cld
xchg
gs
mov
xchg
out
and
add
inc
je
jge
cmpsl
ds
mov
lods
push
fwait
cld
lods
adc
ss
adc
addb
inc
and
pop
sar
jmp
xchg
xchg
add
movsl
lcall
notl
mov
and
lods
push
aad
and
test
ficompl
outsb
pop
sub
mov
adc
sbb
sahf
sub
mov
lods
cwtl
add
shlb
rcrl
ds
test
or
fcmovb
mov
jge
cmp
aas
jo
push
cmp
pop
and
xchg
pushf
xlat
push
adcl
push
out
mov
stos
push
mov
xor
ds
rcrl
sub
lds
lret
push
pop
loop
mov
enter
and
xchg
add
jb
into
xchg
jne
and
mov
mov
add
push
xchg
and
xchg
mov
in
mov
sub
sub
mov
xor
sbb
mov
jmp
cmp
push
sbb
fadds
inc
mov
mov
stos
aaa
push
xchg
dec
xchg
fists
add
shlb
xchg
xor
mov
aaa
js
push
dec
fmull
shll
cmp
push
imul
lock
cmp
xchg
cli
xchg
ret
add
push
sahf
lret
xor
inc
adc
enter
pop
ror
popa
cwtl
hlt
add
xchg
movsl
xchg
data16
adc
xchg
fcoms
xchg
add
sbbb
push
cmpsb
dec
sub
inc
pop
or
sub
or
rclb
and
cmp
int
add
cmpsb
js
xorl
mov
push
lea
enter
cmp
cmpsb
movsl
pop
rcrb
mov
jge
and
push
subb
js
push
or
std
sub
push
xchg
adc
sbb
jp
jl
sbb
jb
sub
iret
dec
daa
dec
pushf
mov
div
sbb
push
dec
push
push
xchg
jg
mov
jge,pn
inc
iret
jecxz
jl
add
ds
mov
popa
mov
das
mov
shlb
add
movsl
sahf
jns
popa
movsb
xor
xor
jne
scas
add
fisttpll
stos
shll
cmpsb
cmc
cmpsl
adcb
sahf
inc
loope
sub
bound
mov
aaa
mov
pop
stc
push
sub
flds
clc
pop
lret
mov
icebp
lahf
gs
xor
adc
punpcklwd
mov
std
xchg
mov
int
movsl
mov
cli
lret
scas
pop
mov
loope
inc
jbe
sub
movsb
imul
add
rdmsr
popa
test
jecxz
aas
test
jb
cmp
imulb
mov
dec
mov
insl
aam
sbb
ret
xor
sbb
mov
and
jle
cmp
fstps
test
mov
mov
aam
flds
ds
pushf
mov
cmpsl
add
xchg
cmp
out
fcomps
push
adc
outsl
jp
jge
and
sub
inc
outsb
not
movsb
imul
xlat
xor
insb
rcrb
or
pop
jmp
lret
stos
and
sbb
mov
xor
into
and
aad
adc
cli
test
mov
mul
and
dec
cs
ljmp
cmp
sub
adc
and
pop
mov
mov
cmp
push
or
xchg
aaa
out
scas
test
push
mov
adc
mov
push
xchg
and
test
mov
jl
pop
xor
jns
enter
mov
mov
stc
nop
add
lock
and
xor
push
mov
lahf
push
addr16
or
lock
sbb
pop
xchg
outsb
sub
push
xchg
and
repz
xchg
aas
leave
fldenv
int3
push
pop
xchg
adc
dec
push
pop
int
roll
mov
cmp
xchg
std
dec
add
hlt
push
sarl
cmpsb
std
incl
enter
movsl
jg
pop
outsl
fsubl
cmp
test
fwait
sbb
iret
xchg
xor
leave
and
and
adc
mov
enter
mov
and
mov
xchg
xlat
cmpsb
fwait
lds
pop
mov
jns
jnp
std
xor
fsubr
lods
push
pop
or
sbb
or
test
mov
dec
out
or
jae
inc
adc
inc
fdivl
xchg
insb
sub
notl
sub
div
mov
jg
lahf
xor
jae
aas
mov
mov
dec
mov
cs
sti
sti
adc
mov
add
adc
pop
mov
mov
xchg
fidivl
push
or
pop
add
insb
pop
pop
call
pop
dec
lcall
xchg
fs
outsl
daa
call
sub
inc
test
mov
pop
or
fsubrl
ret
lods
jo
sub
sbb
adc
push
and
shrl
test
cmp
sbb
incl
cmp
pop
int3
loopne
mov
xor
mov
aas
mov
mov
jl
filds
jne
mov
mov
es
aas
je
outsl
movsb
jbe
inc
adc
aaa
mov
data16
ret
rcrl
mov
ljmp
cli
inc
jae
mov
aaa
je
in
pop
pop
xchg
bound
mov
inc
push
mov
adc
push
xor
add
pop
lods
pop
mov
jl
add
sarl
imul
inc
mov
adc
aaa
push
jns
lods
push
shll
lret
push
cmp
and
cmpsb
adc
fiadds
iret
sbb
dec
or
loope
dec
cwtl
or
lods
divb
sub
stos
inc
daa
add
mov
cmpsl
jno
cmp
fdivs
mov
cmp
jno
ds
ss
pop
cmp
subl
xor
cltd
repnz
pop
cmpsb
insb
popa
xor
in
loope
int
pushf
and
dec
push
negb
pop
xchg
pusha
cmc
xchg
jecxz
push
mov
lock
lods
leave
mov
push
int
mov
push
mov
xchg
mov
add
mov
cmpb
sahf
dec
cmc
test
dec
xor
push
jo
je,pn
fcmovu
xchg
insb
xchg
addb
cltd
fnstsw
aas
or
aas
ljmp
cmp
cs
and
aam
test
popa
mov
sub
bound
gs
inc
mov
test
stc
lret
mov
push
dec
jmp
dec
pop
pop
std
inc
sub
sbb
cmc
jl
int
xchg
shr
fs
push
sti
xchg
cmp
jno
push
pop
sahf
imul
jo
ja
lods
insb
clc
iret
lret
xor
sarb
lret
sbb
mov
pop
xchg
inc
adc
cwtl
xchg
call
jno
add
outsl
sti
stos
stc
lods
add
sbb
jo
mov
mov
dec
in
xor
daa
push
shlb
dec
cmpsl
js
or
daa
sbb
rol
mov
and
loop
lcall
outsb
int3
fmuls
repz
iret
fucom
mov
addr16
lahf
lods
dec
xchg
ret
movsb
sub
out
push
pop
aad
fadd
sbb
sub
sub
pop
jno
in
xor
cmc
fsub
pop
shl
cmp
jp
popf
adc
jg
dec
pop
je
ret
cs
daa
lods
mov
sub
push
xchg
popf
loope
mov
aad
or
lahf
insl
imull
or
jno
mov
scas
jnp
dec
inc
mov
jns
or
test
jmp
xchg
dec
lcall
push
je
pop
xchg
lea
cmp
imul
xchg
repz
mov
lds
pop
outsl
scas
lret
cmpsb
fisubl
and
push
xchg
add
sub
sbb
fsubrs
and
loopne
fnstenv
enter
cmp
or
jecxz
dec
test
faddl
test
adc
push
std
fisubrs
sub
ret
repz
imul
cli
gs
add
popf
mov
lahf
movl
inc
sbb
cltd
addr16
and
into
dec
shlb
dec
push
or
inc
dec
arpl
ret
mov
push
insb
pop
outsl
push
sahf
pop
push
les
inc
add
xchg
iret
sub
push
popa
mov
and
xor
pop
pop
mov
push
fbld
lea
jns,pn
lods
xor
in
popf
jae
fadd
mov
mov
sub
lcall
xor
cli
mov
mov
jp
push
fimull
out
pop
adc
xchg
xchg
adc
push
push
and
shrl
inc
divb
fisubl
xor
xlat
dec
mov
cmp
lret
sub
fldcw
jge
xorb
in
das
ds
addr16
dec
adcl
push
loope
mov
adc
xchg
lret
leave
aas
mov
push
in
es
push
mov
push
adc
pusha
out
inc
jmp
and
dec
mov
xchg
fcoml
das
or
sbb
popa
mov
push
push
sub
cli
dec
sahf
or
pop
inc
adc
push
arpl
push
xchg
je
sbb
jae
ds
nop
pop
in
sbb
fcomip
loopne
inc
dec
sub
lahf
pop
cmp
repz
jne
pop
out
pop
xchg
jecxz
pop
fbld
fcomps
roll
xlat
jg
sbb
xor
mov
fnstenv
jmp
daa
inc
ret
mov
rorb
cmc
cmp
add
dec
dec
repnz
or
push
testb
aaa
in
lahf
cmovne
rcrb
mov
jae
aaa
mov
dec
sub
inc
lcall
push
sub
xchg
ret
adc
fs
out
xchg
inc
pop
roll
push
movsb
pop
in
in
adc
and
cmpsl
jecxz
jge
sub
imul
sbb
sahf
shlb
dec
movsb
mov
xchg
mov
cmp
stos
into
push
xchg
or
inc
fdivrs
xchg
int3
mov
and
pop
jp
mov
pop
fidivl
sbb
shll
call
lret
mov
iret
push
aas
dec
push
cli
sub
orl
mov
xchg
cmp
je
jl
cld
xor
pop
pop
iret
jbe
clc
pusha
leave
cmc
scas
jae
adc
cmpl
cmp
imul
enter
pop
je
sub
mov
sub
jo
xor
inc
bound
and
cmc
or
pop
mov
roll
sub
mov
fnsave
sbb
push
cmc
outsb
mov
enter
mov
popa
lods
pop
inc
adc
incb
je
notl
pop
sub
pop
movsl
in
fidivs
into
fs
shrl
fwait
cmp
js
int
test
lds
xlat
loop
sub
pop
add
addr16
rorl
jmp
out
out
cltd
push
in
out
and
or
mov
mov
add
pusha
mov
push
push
fbld
add
aas
orl
sbb
cmc
mov
out
mov
fwait
stos
sbbb
clc
push
mov
dec
dec
jne
sbb
mov
rorl
mov
sub
fs
leave
out
lret
push
lods
test
imul
xchg
cmc
pop
cs
gs
inc
cld
lahf
subb
icebp
es
fucom
jl
sub
mov
pop
inc
jmp
dec
and
les
adc
scas
and
xor
push
les
test
enter
out
dec
in
in
test
pextrw
movsb
js
jle
fwait
and
jb,pt
dec
movsl
xor
adc
aam
fmulp
inc
xchg
pop
in
das
adc
jmp
push
negb
inc
ja
fs
outsl
aaa
inc
add
dec
xorl
sub
jno
test
jno
loop
dec
addb
and
ret
rolb
icebp
and
arpl
mov
dec
mov
jmp
sbbl
dec
loopne
outsl
mov
xchg
scas
jmp
sbb
or
xchg
pop
jp
nop
aad
adc
mov
mov
jns
push
ja
iret
jns
and
cmp
jns
std
insb
aad
cmp
xchg
out
pop
and
add
push
xor
fcomps
les
loope
sbb
sub
fwait
ds
inc
loopne
daa
stc
pushf
sbb
outsl
xchg
sbb
inc
jae
mov
gs
notb
xchg
sbb
ja
gs
bound
popf
loopne
shlb
pop
push
and
add
cmpb
loop
not
xchg
cmpsb
mov
dec
push
dec
adcl
lods
mov
or
movsb
lahf
divb
jecxz
jecxz
mov
notb
sbb
jns
push
out
cltd
into
test
mov
xor
lret
aaa
aad
cmc
into
fnstcw
mov
sub
xchg
mov
jne
push
fldl
mov
adc
addr16
jo
dec
or
xor
lock
mov
jns
sbb
cs
ss
dec
loope
sbb
cmp
icebp
inc
xchg
mov
ret
pop
ja
shlb
popa
stc
int
insl
and
ds
daa
inc
lods
imul
in
das
popf
movsl
in
and
sbb
sbb
adc
sarl
cld
or
mov
ss
nop
cmp
mov
inc
mov
pop
mov
pop
call
adc
lea
mov
out
xor
pop
or
repz
call
sbb
dec
jo
sub
xchg
push
xor
pop
add
mov
std
mov
jmp
and
dec
xlat
adc
mov
mov
add
call
pop
xchg
stos
cs
inc
pop
ret
inc
jbe
cmp
dec
jb
jb
xlat
in
loop
int3
add
fistpl
fwait
inc
mov
lods
mov
scas
lcall
and
xchg
sti
test
xorl
jle
push
jl
jl
adc
addr16
xchg
test
pop
push
in
decb
sbb
push
xor
lret
enter
xor
pop
add
cs
aam
pop
mov
xchg
ficoml
sub
jne
xor
and
lea
push
repnz
or
aas
add
mov
enter
int
loope
nop
dec
mov
es
ret
fcoml
hlt
into
mov
out
jae
jb
and
arpl
mov
xor
cmp
dec
inc
cmp
nop
in
out
std
cmc
loopne
pop
push
mov
and
add
mov
or
ret
inc
push
inc
stos
ret
test
sahf
les
xchg
sub
pop
aam
loop
loopne
repz
js
push
pop
dec
and
test
ds
rcrb
push
sbbb
scas
cld
jne
outsb
cmp
jae
popa
mov
cmp
dec
orb
jmp
or
cmp
in
stos
xor
sub
mov
imul
sbb
repnz
mov
lods
popa
subl
in
lods
dec
in
lcall
std
xchg
out
push
pop
sbb
lods
jne
jb
loopne
mov
xchg
inc
xchg
shlb
cltd
arpl
xor
jne
cmp
dec
cmp
fsts
sub
repz
adc
clc
pop
xchg
out
stos
jmp
push
pop
jg
repz
sbb
add
sub
fidivl
mov
pop
sub
aad
adc
movsl
stos
sbb
imul
xor
fsubrl
sbb
mov
dec
sub
jae
pop
subl
sti
dec
and
icebp
jns
mov
les
clc
jnp
mov
rcll
jb
fmul
stos
xchg
pop
test
lods
repnz
or
xor
pop
add
sbbb
mov
je
in
inc
xor
jo
sbb
insb
cmp
cmp
push
add
mov
inc
xor
mov
bound
cwtl
mov
cld
push
adc
jns
pop
mov
adc
sub
pop
das
jmp
jmp
push
int3
mov
test
dec
lahf
adc
or
push
xchg
addl
xchg
xchg
inc
jge
dec
xchg
movsb
les
sub
sub
call
inc
ds
addl
push
call
xchg
cmp
js
xor
pop
mov
popf
adc
mov
push
dec
cmpb
enter
inc
inc
push
fldl
xchg
xchg
cmp
in
and
xchg
lock
or
nop
jge
cmp
arpl
inc
add
out
rorl
jns
inc
fimull
lods
clc
cwtl
jne
mov
insl
out
fld
sub
sub
xor
loop
adc
out
dec
pop
shll
mov
dec
icebp
ja
gs
or
fimuls
cmp
jg
push
aad
xchg
fwait
in
jns
scas
movsb
xor
subl
mov
or
xchg
repnz
fs
jl
dec
hlt
into
bound
in
lcall
xchg
imul
mov
push
jns
leave
repz
es
popl
fldl2t
or
aam
sbb
inc
sbb
enter
sar
pushf
sub
xchg
or
lcall
lcall
fdivrs
pop
fldenv
repnz
xchg
daa
clc
pop
cmp
iret
fidivs
lea
and
pop
clc
lock
std
ss
sub
inc
and
inc
sub
adc
dec
add
pop
sbb
call
call
call
sahf
push
fnstenv
jo
int3
xchg
dec
xchg
outsb
mov
mov
das
pop
scas
add
ret
sbb
jo
lret
je
cmpsb
fsubrp
movsl
int
out
subb
ror
lea
xor
out
push
and
jl
mov
dec
lods
xor
add
xchg
push
inc
add
loop
xchg
out
or
inc
sti
or
shlb
xor
dec
sub
test
pop
mov
push
fcmovnb
xchg
or
sub
cmp
dec
pop
aad
scas
lds
fsubl
test
test
es
mov
jl
cli
or
xchg
loope
push
inc
jns
xchg
adc
int3
imul
data16
mov
pop
inc
popf
and
ds
in
push
sbb
test
cltd
pop
or
xor
enter
pop
mov
aam
jg
sbb
out
add
enter
out
pop
xchg
mov
fdivl
aam
test
cmp
add
adc
in
add
loope
jmp
sbb
cli
xor
cmp
outsb
add
sahf
pop
fdiv
popf
add
inc
cli
lahf
call
mov
test
xor
and
add
and
iret
daa
cmpsl
rorl
cmp
les
lds
dec
movsb
mov
aaa
sbb
cs
xlat
xorb
mov
flds
xor
cmp
mov
iret
sbb
dec
scas
push
or
mov
int
inc
inc
aam
repz
push
ljmp
mov
push
mov
imul
sub
mov
xor
cmpsl
cmp
pop
stos
xor
mov
or
cmp
inc
out
enter
shll
and
cmpb
xchg
mov
movsb
cwtl
push
lock
sahf
mov
mov
mov
das
fmull
fstps
add
and
jb
addb
and
aas
or
xchg
int3
xor
jae
or
jb
add
dec
lahf
cmp
xchg
cwtl
stos
cmpsl
pop
push
dec
cmpsb
push
xchg
adc
adc
push
lea
push
scas
or
xor
divl
mov
add
aas
cltd
or
data16
pop
fnstenv
sub
and
inc
into
mov
push
add
mov
jge
xchg
sub
insb
jg
pop
in
mov
jb
movsl
sbb
pop
test
aam
jnp
js
pop
jae
mov
stos
mov
insb
xor
hlt
add
mov
jg
mov
mov
mov
jns
scas
mov
mov
decb
call
sbb
and
mov
movsb
shrl
nop
jle
dec
std
div
inc
cmp
pop
and
xor
cli
sbb
dec
inc
sbb
adc
mov
fsubrs
and
sbb
and
mov
sub
sti
sub
es
jno
or
lret
jl
mov
sub
or
sbb
jp
and
adc
cmp
cmpl
or
inc
shll
stos
popf
mov
sub
or
gs
xchg
jle
or
ficoms
mov
mov
andb
popf
movb
lahf
add
or
push
movsl
hlt
jp
pop
popa
jle
sti
mov
push
jns
cmp
and
ficompl
push
sbb
mov
insb
push
adc
add
sbb
cld
lods
mov
xchg
testb
inc
fchs
fistps
es
cmp
in
inc
pop
or
cmc
pushf
pop
sbb
shrb
add
sti
jae
mov
popl
inc
gs
sub
into
adc
pusha
xlat
addr16
jnp
fstl
test
jo
addl
xchg
shrl
pusha
dec
jp
lea
dec
pop
outsl
stc
adc
leave
icebp
push
and
into
out
mov
pushf
mov
iret
rclb
loop
pop
cmpsl
jle
jg
cs
dec
subl
pop
adc
cli
scas
jnp
addr16
add
rcrl
jbe
mov
push
sub
cmp
mov
sbb
ja
jno
pop
inc
lea
push
in
dec
icebp
mov
ret
sbb
push
mov
adc
repnz
filds
jne
or
pop
mov
jl
xchg
mov
pop
xor
and
xchg
inc
cmc
aad
sbb
pusha
cmc
jbe
test
xchg
mov
dec
or
mov
cs
jecxz
stc
data16
inc
pop
lret
fcomps
xchg
push
push
scas
sub
jp
xchg
mov
sbb
stos
outsb
fmuls
adc
cltd
cwtl
xor
pop
fcoms
cmp
cmpb
lcall
mov
loopne
int
xor
or
or
je
ret
or
pusha
stc
arpl
pop
push
dec
xchg
testl
add
dec
push
mov
enter
out
mov
pop
xor
jp
ljmp
sahf
jnp
cmc
jns
je
adc
dec
mov
or
xorb
lret
rclb
or
dec
sbb
jae
mov
out
adc
sbb
dec
mov
mov
add
or
and
inc
jb
push
inc
stc
insb
jb
pop
xor
inc
mov
cmp
mov
out
xlat
push
dec
jo
push
imul
cwtl
pop
and
pop
lock
xchg
pop
dec
sub
out
sbb
lret
fwait
aas
clc
mov
inc
in
xchg
movsb
cwtl
or
mov
jns
sahf
pop
cmp
and
rolb
filds
adc
push
or
gs
jnp
cmp
lds
adc
repz
into
fwait
mov
mov
stc
outsl
jno
inc
pop
sbb
call
mov
dec
sbb
sub
cmp
mov
add
jns
pop
mov
jmp
and
dec
mov
push
xchg
mov
shl
push
outsl
cmp
fiaddl
cmp
push
popf
imul
nop
cmpl
mov
jl
scas
cli
repnz
movl
cmpsb
mov
out
shll
call
fiaddl
inc
cltd
out
lret
icebp
push
push
push
ds
adc
sub
jp
sbb
add
es
pushf
mov
pop
mov
pop
in
pushf
xchg
mov
sbb
int3
dec
daa
cmp
sub
stos
pop
mov
sbb
lock
cmpsl
lods
aaa
sbbl
xchg
xor
int
sahf
test
into
or
jle
mov
test
sahf
inc
push
inc
in
insl
adc
and
mov
iret
in
jns
les
cs
or
pop
je
and
in
inc
enter
mov
jle
iret
or
sbb
dec
pop
and
adcl
ja
mov
std
inc
pop
popa
lds
test
pop
fsubrl
fdivrl
sbb
fiadds
and
xor
pop
loopne
or
movsl
push
aas
sub
imull
rclb
or
sbb
enter
aad
inc
jbe
pop
sbb
loope
lods
xor
mov
call
aam
ss
pop
push
xor
mov
outsb
inc
push
xor
jl
dec
inc
test
imul
das
shll
in
rcrl
adc
lcall
bound
aad
lret
mov
mov
pop
and
or
mov
adc
cld
add
addb
cmp
call
imul
dec
or
dec
jnp
aas
sbb
mov
mov
and
mov
jb
adc
adc
sub
lcall
shlb
push
test
test
sub
data16
cmpsb
and
orl
test
cmp
cli
jge
sbb
mov
add
cmc
xchg
adc
dec
lret
dec
rcrl
push
cmp
cltd
add
xlat
aas
xchg
inc
add
jbe
mov
jecxz
jecxz
xchg
inc
jae
outsl
gs
lahf
mov
test
out
push
lock
gs
pop
mull
push
popa
repnz
mov
lret
push
add
ljmp
mov
nop
pop
and
enter
cmp
gs
ds
xchg
call
sub
pop
inc
or
cwtl
testb
fbstp
and
xchg
aad
insl
cwtl
cwtl
out
fld
jns
or
adc
cli
aas
jle
lret
and
ja
sub
mov
rclb
inc
sub
aam
mov
add
popa
cmp
or
xlat
cmpb
push
stc
and
mov
lcall
jne
imul
xchg
inc
pop
dec
mov
shrl
jbe
sarl
mov
test
mov
ret
fdivrs
cmp
ljmp
movsl
subb
mov
call
lods
inc
sar
and
int
adc
push
into
mov
adc
push
cmpsl
mov
xchg
cltd
outsb
ljmp
scas
dec
push
push
sub
fisubrl
int3
pop
cld
fnstsw
out
mov
inc
ficoml
das
aas
xor
push
xchg
push
cmpsb
cmp
pushf
sub
adcl
cmp
sub
and
xorb
bnd
mov
jbe
loope
add
ret
push
sub
push
push
aaa
lods
pusha
sarb
add
into
jnp
mov
cli
xchg
and
or
testl
mov
mov
xor
push
pop
mov
lods
mov
sbb
clc
loope
movsl
inc
add
pop
sub
mov
push
inc
rorb
fdiv
insb
adc
pop
out
xchg
sub
mov
addr16
pop
dec
dec
cmpb
xchg
hlt
jno
xor
rclb
sbb
fdiv
aad
xchg
lahf
cltd
repnz
shrl
mov
mov
push
mov
lea
stos
mov
pop
xchg
fsqrt
xor
push
bound
push
idivl
fs
adc
fsubrl
dec
ret
insb
cmpl
mov
into
cmp
inc
and
and
jp
inc
rcr
mov
add
lea
mov
mov
push
pop
mov
or
daa
inc
scas
je
add
pushf
and
lods
je
mov
int3
pop
repnz
movsl
adc
jp
sti
xchg
cmpsl
adcl
mov
push
movsb
mov
mov
out
mov
call
jnp
dec
stc
push
and
in
outsb
cmp
xchg
mov
pusha
mov
enter
fdivrs
push
xchg
push
lods
xor
jo
seta
out
mov
ret
fldenv
adc
out
out
arpl
push
add
je
add
in
or
insb
sti
icebp
add
frstor
jns
ficoms
movsl
xor
pop
lret
jne
mov
adc
and
cmp
xchg
mov
pop
push
jae
fdivs
inc
pop
lret
dec
roll
xchg
shll
jne
lcall
cmp
jg
aas
loope
jmp
loop
enter
stos
ss
cmp
and
sahf
adc
inc
adc
inc
mov
lock
movsl
popf
sti
pusha
jmp
dec
fistl
insb
mov
inc
mov
dec
sbb
jne
mov
push
xor
or
xchg
adc
imul
add
les
add
in
fs
pushf
jbe
push
fisttps
push
repnz
jb
mov
sbb
add
ds
sub
xor
add
xchg
xchg
pop
into
pop
mov
jne
mov
les
gs
mov
ret
out
inc
shlb
inc
popf
bnd
or
imul
sub
fprem
jne
push
sti
ret
pop
aas
filds
mov
pusha
fwait
push
cmp
cmpsb
push
dec
adc
mov
fidivrl
into
jno
inc
push
aad
call
fwait
inc
or
cmp
dec
fists
jl
pop
push
pop
lret
addb
push
dec
push
shlb
cmpsb
repnz
inc
andb
fldl
or
inc
out
inc
xchg
scas
cmp
sub
js
imull
dec
loope
xorb
adc
mov
or
xor
mov
setp
arpl
add
jbe
xor
aam
ja
mov
loope
sub
pusha
push
dec
add
nop
mov
sarl
sbbb
cmpsl
aad
repnz
dec
push
fsubl
out
or
push
insl
enter
mov
lods
cmp
push
bound
adc
inc
mov
ret
gs
xchg
cld
lahf
mov
cmp
movsl
adc
jnp
xchg
data16
inc
lods
push
shl
rcll
pop
sti
push
pushf
sbb
loope
inc
imul
dec
ljmp
fdivrp
clc
jb
ljmp
lods
mov
push
adcb
out
aas
aas
mov
int
repz
ror
inc
int3
subb
ss
gs
pop
js
clc
in
or
sub
push
push
adc
les
pop
cmp
in
push
mov
pop
pushw
mov
and
sbb
sub
aaa
js
inc
cs
and
movsb
repnz
cmp
sub
push
sbb
mov
std
pop
cmpsl
mov
sub
dec
inc
adc
and
sbb
sub
out
and
test
adc
mov
fimuls
or
jae
cmp
enter
shlb
test
fdivr
lcall
mov
lcall
scas
loop
aas
mov
pop
inc
xor
add
cmp
insl
cmpl
in
ret
mov
imul
or
jne
outsl
gs
push
pop
movsl
stos
pop
pop
cmp
fsubrs
stc
xor
and
xchg
out
popa
inc
adc
hlt
insl
mov
push
clc
sbb
stos
popa
add
jle
xor
push
in
outsb
and
sti
jno
fldcw
and
add
or
cmpl
sbb
lods
idivl
push
push
add
add
mov
jg
mov
jp
sti
or
stos
sbb
xor
jae
push
in
dec
ret
jbe
lret
stc
popf
inc
add
lods
sub
sub
rorb
out
fcompp
dec
arpl
pop
mov
adc
cmc
or
jge
scas
cmp
sub
sub
xor
and
imul
sahf
add
mov
and
adc
lock
inc
in
sbbb
mov
rcrl
sti
into
or
enter
xor
mov
cwtl
sarl
add
out
cmp
sub
dec
out
push
mov
inc
in
popf
pop
inc
stc
popf
sub
lods
ja
ds
mov
rolb
aam
in
pop
shlb
repz
mov
pop
mov
push
inc
sbb
lock
lods
and
xorb
dec
gs
mov
add
out
xor
faddl
push
push
jg
jle
push
mov
test
iret
lea
sub
adc
push
lds
lea
clc
sbb
into
push
sub
pop
iret
shll
int
shlb
pop
mov
out
cmp
roll
sbb
lods
mov
mov
dec
cmp
inc
push
ss
leave
cld
int3
rcl
cltd
mov
sub
addr16
mov
lea
xchg
out
xchg
insl
stc
mov
adc
push
insb
xor
loopne
ret
jecxz
sbb
icebp
cltd
fcoml
cmpsl
in
jg
xchg
mov
push
mov
inc
daa
mov
or
sub
rclb
lret
push
lods
xor
fists
aaa
rcl
dec
inc
push
sub
inc
xor
pusha
mov
xchg
repnz
dec
dec
in
std
dec
or
jo
xor
ja
jo
sti
jnp
sbb
xchg
cmpsb
xchg
ret
inc
enter
pushf
push
lret
loop
push
dec
or
mov
jmp
mov
push
mov
sub
hlt
jl
mov
fstp
mov
incl
addb
lods
into
loop
push
add
pop
cmp
pop
movsl
clc
push
or
dec
insb
mov
mov
pop
xchg
or
mov
js
push
or
lods
or
push
adc
ss
shl
add
cmp
rcll
fsubl
dec
icebp
fidivl
cmp
inc
sbb
push
stc
into
and
xchg
cmp
dec
sti
icebp
test
push
pop
mov
fisttps
gs
cmp
sub
sbb
xchg
xchg
mov
movsl
movsl
fsubrl
adc
cs
dec
cmpsl
js
pop
cltd
movsl
mov
xlat
inc
jbe
ss
jge
cmpsb
and
cmp
add
mov
rcrb
and
lahf
outsl
push
imul
push
jno
mov
gs
adc
sbb
xchg
push
jo
push
mov
fldl
into
jle
push
add
in
shll
jns
ret
cld
loopne
in
push
add
inc
or
insl
call
ljmp
repz
aam
push
loope
cmpb
mov
adc
add
je
imulb
int3
dec
pop
inc
jne
xor
dec
mov
mov
jne
push
loopne
daa
cmc
mov
sti
inc
push
or
scas
mov
push
push
sbb
mov
mov
pop
retw
rcrl
push
cltd
or
pop
xchg
add
test
add
lock
not
xor
imul
ret
push
and
pop
xchg
in
mov
mov
jbe
sub
cmp
xchg
mov
xchg
mov
mov
ljmp
jb
xor
lock
inc
sbbl
outsl
outsb
lcall
fs
imul
or
mov
stc
pop
repz
pop
in
mov
push
mov
lret
or
mov
jb
movl
in
addb
inc
jno
adc
push
fisubrs
lahf
out
sti
xchg
push
sbb
or
cmp
cmc
sub
fisubrl
inc
mov
mov
mov
imul
in
push
mov
in
dec
sbb
xorb
imul
pop
shrb
and
sahf
stos
cli
lcall
in
xor
pop
pop
test
and
test
lret
nop
push
call
mov
sahf
cltd
test
and
iret
push
nop
outsb
jno
inc
imul
mov
lcall
inc
outsb
imul
cmpsl
cwtl
aas
dec
arpl
movsl
repz
pop
push
lods
add
xor
pop
inc
xor
cli
add
mov
mov
jg
fdivl
andl
loop
out
inc
icebp
in
mov
hlt
dec
mov
dec
ret
jb
gs
rcrb
rclb
adc
push
xchg
pop
repnz
jmp
pop
icebp
sbb
test
and
shl
or
shl
pop
das
call
cmc
push
call
mov
les
inc
dec
and
addr16
scas
negl
add
push
mov
push
pop
sbb
ljmp
mov
sbb
push
xchg
repz
mov
inc
cmp
sub
pop
dec
add
insl
xor
mov
mov
adc
ljmp
int3
inc
or
add
mov
std
sbb
inc
sub
repz
mov
testb
or
scas
test
into
mov
xor
add
subl
jno
sti
and
mov
push
cltd
mov
adc
lock
mov
xchg
mov
push
mov
movsb
mov
mov
sub
mov
xor
jmp
dec
inc
dec
mov
jmp
arpl
mov
mov
nop
fcomp
popl
cmp
push
or
sbb
out
bound
mov
ret
sti
inc
test
pop
cmpsb
data16
adc
daa
inc
xchg
add
lahf
icebp
sbb
adcl
mov
sub
testb
repnz
imul
lahf
enter
jmp
mov
dec
pop
call
sbb
fcoms
jl
jp
or
out
mov
mov
xor
or
enter
mov
mov
aam
flds
inc
mov
inc
lds
inc
xchg
jg
jg
repz
fnsave
fnstsw
push
lret
iret
ds
pusha
jp
xlat
iret
rclb
out
fidivs
xchg
movsl
mov
imul
out
pop
loope
mov
hlt
sbb
mov
xor
ds
dec
js
adc
test
xor
icebp
das
mov
repz
ret
lock
rolb
arpl
adc
jbe
jne
mov
or
mov
or
nop
jl
sub
xorb
ljmp
shll
jb
in
and
out
mov
cmp
sbbl
iret
adc
adc
stos
fists
aaa
mov
dec
out
jg
add
inc
push
pop
movsb
cwtd
call
lods
push
push
out
mov
das
movb
ret
fcomp
shlb
aam
ret
push
scas
fcoml
mov
and
outsb
xchg
arpl
xor
es
call
lds
mov
adcl
mov
addr16
mov
mov
dec
cs
int3
push
pop
cmp
in
add
test
cmpsl
sub
sbb
cmpsb
xchg
lcall
jnp
inc
mov
std
xchg
mov
mov
cmp
test
andl
lret
sbb
pop
cmp
jno
add
lods
lret
out
je
inc
and
aas
jo
in
xchg
loope
stc
pop
mov
fsub
mov
test
push
xor
inc
jbe
mov
and
and
fcmovne
pop
cmp
movsb
in
lds
xor
cmp
cmovo
es
bound
cmpsl
xor
jge
andb
enter
add
int
xor
mov
cmp
dec
xchg
mov
repnz
in
ja
nop
inc
mov
icebp
mov
mov
mov
pop
addl
mov
or
in
daa
xchg
pop
ss
dec
addr16
dec
cs
xlat
shr
iret
scas
xor
push
ret
mov
push
inc
lcall
mov
int
out
js
mov
repnz
cmpsb
int
dec
insb
hlt
lret
cmp
adc
in
clc
insb
push
test
pop
test
mov
popl
lock
mov
ficoms
pop
mov
jmp
inc
jmp
xor
das
mov
bnd
cmpb
or
inc
insl
add
stc
js
jl
xchg
pop
or
and
adc
or
mov
repnz
in
or
jnp,pn
sti
stos
mov
cli
sarb
push
xchg
or
sub
jecxz
fnstcw
insb
jle
subb
fwait
adc
sbb
pop
cld
cmpsb
ljmp
push
xor
insl
hlt
xor
gs
fs
data16
and
rorb
dec
loop
lock
xchg
pop
int
test
sbbl
rcrb
das
cmc
test
iret
imull
xchg
aas
jne
aad
loopne
cmpsb
inc
adc
pusha
cmp
mov
and
jp
and
out
xchg
xorl
adc
sub
cwtl
dec
sbb
imul
lcall
push
fcomp
xchg
adc
ficoml
in
pop
mov
lret
xchg
fsubrl
ljmp
or
cmp
add
clc
dec
dec
xlat
adc
das
cmp
xor
lea
jb
push
ds
mov
xlat
fiadds
inc
and
add
dec
push
bound
dec
pop
or
jae
dec
in
pop
mov
loop
pop
mov
ds
pop
aaa
add
fcmovnb
pop
aam
ds
sbb
dec
sahf
icebp
jno
test
fs
popf
test
mov
aas
adc
inc
dec
bound
cmp
jl
xor
pop
jg
in
sbb
adc
mov
mov
imul
inc
ljmp
ss
and
mov
imul
push
or
lock
movsl
xor
in
jl
andl
js
mov
push
aam
dec
sti
lret
inc
xor
mov
iret
push
cmp
daa
int
hlt
ljmp
mov
mov
scas
mov
pop
adc
dec
ja
jae
fsubrl
aaa
mov
adc
jl
aam
aam
hlt
pop
cld
leave
mov
stc
pushl
mov
shrl
mov
pop
or
cld
push
dec
fbstp
arpl
outsl
pop
push
shll
sbb
fisttpll
pop
leave
loope
out
pop
xorl
inc
mov
and
push
sbb
faddp
mov
lret
mov
int3
stos
jb
or
adc
mov
insb
jne
aaa
and
inc
data16
out
mov
cltd
sub
pop
sbb
pop
daa
jecxz
mov
and
aad
inc
push
imul
pusha
fildll
lret
popf
sbb
mov
fisttps
fstl
outsl
cmc
loope
adc
vmovlps
shlb
out
call
repz
xchg
xor
dec
js
pop
push
jb
mov
pop
mov
in
pop
pop
add
js
das
or
mov
mov
inc
or
call
addr16
ret
adc
mov
pushf
test
jae
test
pop
fidivs
rorl
aam
dec
fnstcw
dec
clc
jb
orps
inc
shlb
xchg
push
int
arpl
lret
sub
mov
lock
sub
lods
mov
mov
in
cmp
xchg
sar
xchg
or
imul
jg
inc
inc
call
ja
push
roll
mov
push
or
mov
pop
jbe
mov
jmp
enter
sbb
scas
push
fcompl
mov
adc
xchg
testl
popf
subl
jb
fsubs
xor
test
push
fistpl
pushf
data16
shlb
int
fstl
int
fcoml
dec
mov
aad
dec
out
xor
sub
shlb
ds
cmp
aad
test
push
push
cwtl
fwait
pop
cli
xchg
je
mov
iret
jp
xchg
scas
cld
inc
pop
push
pop
dec
out
jle
testb
mov
xchg
mov
sbb
or
insb
test
mov
std
sahf
and
std
lcall
ljmp
mov
jno
cs
sub
adc
mov
testb
decb
dec
xchg
or
xchg
cwtl
jle
mov
into
subb
ds
jo
xor
mov
adc
andl
mov
sahf
dec
mov
cmp
in
gs
lret
in
dec
xor
sub
pop
cwtl
into
stos
add
je
aam
fldenv
test
std
xchg
cmp
sub
sub
loop
gs
sub
shlb
shlb
scas
jnp
clc
es
and
loop
enter
pop
jb
test
jbe
loopne
sahf
pop
je
repz
push
jae
outsb
imull
arpl
mov
add
xchg
inc
xlat
jno
pop
dec
out
ss
clc
jge
fiaddl
andb
je
pop
pop
mov
movsl
cmpsb
fistps
lock
sbb
mov
popf
cmpsb
mov
mov
jae
not
sbb
push
cmp
xor
jle
cmpsl
dec
fstp
dec
or
cmp
sarl
push
mov
cwtl
stos
es
adcl
mov
inc
insb
pop
sub
lock
xchg
and
in
push
or
pop
call
lret
icebp
sti
dec
pop
insb
xchg
add
lods
push
sbb
and
clc
push
out
sub
mov
jmp
in
repnz
nop
ljmp
inc
test
leave
aaa
test
ret
popa
outsl
sahf
sub
lea
lds
sarl
fistpll
adc
add
sbb
jae
cmp
fistpl
pop
xchg
adc
xor
mov
cmc
mov
sub
cwtl
mov
jg
mov
arpl
daa
call
fldt
sbb
add
xchg
xchg
into
pop
and
lcall
in
fimuls
pop
scas
fnstenv
sbb
mov
and
pop
movsb
push
dec
int
out
aam
jb
rolb
fidivs
push
scas
and
aas
adc
cmp
adcb
rol
test
push
jns
mov
cmc
jns
pop
lret
pop
pop
add
out
xchg
push
lds
shlb
jno
js
inc
pusha
mov
add
mov
ja
fwait
push
pushf
repnz
add
adc
std
cli
call
inc
fs
outsb
lahf
dec
jns
xchg
pop
xchg
dec
in
or
clc
dec
xchg
inc
push
push
pop
sub
scas
add
aaa
push
push
jb
jle
jp
and
cmp
dec
adc
push
lret
repz
jge
sahf
cmp
lock
mov
mov
js
xchg
inc
xchg
xchg
inc
add
inc
push
mov
loope
sbb
insb
push
mov
jns
cmp
add
sbb
fadd
or
pop
imul
pusha
out
pop
lcall
mov
scas
adc
mov
jne
fimuls
jp
adcb
sbb
ss
gs
sbb
ret
or
cmc
neg
shlb
xor
arpl
cmp
pushf
mov
adc
rorl
or
mov
aas
xchg
and
mov
or
cmp
fstps
sub
popf
test
xorl
sub
popf
and
push
cmp
adc
imul
push
and
jb
push
icebp
pushf
iret
cwtl
mov
sbb
adc
sub
ret
fxam
jbe
add
jae
xchg
sub
jmp
cmpsb
and
fs
call
flds
sbb
int3
pushf
ret
sub
xor
es
into
outsl
cmp
int
push
mull
faddl
int
add
inc
aas
hlt
lcall
sub
mov
movsl
imul
jle
push
imul
in
cmp
push
out
out
add
out
cmp
fs
lahf
pop
mov
inc
add
xchg
imul
mov
inc
xchg
push
pop
xor
xor
jns
and
loop
pop
push
mov
and
aad
push
push
and
xor
xor
inc
jmp
subb
jne
push
jae
cmp
ja
dec
jle
mov
ds
in
fwait
lods
xor
cmc
and
loope
sbb
lea
loopne
roll
or
inc
int3
jns
imul
js
js
enter
jle
shll
rcll
mov
and
dec
sbb
aaa
jge
je
cmpsb
sub
mov
les
add
push
push
dec
adcl
add
mov
inc
inc
cmp
cmc
push
mov
xchg
iret
mov
sbb
pop
arpl
xor
xchg
xchg
adc
lahf
add
and
sbb
dec
cmpl
pcmpeqd
out
adc
push
push
fcom
push
mov
rcr
sbb
je
mov
inc
movb
dec
inc
jmp
jo
adcb
push
mov
cmp
in
push
mov
add
sbb
movhlps
inc
push
shlb
dec
adc
addl
ror
push
adc
idivb
adc
sub
lods
fstl
insb
xchg
fs
and
pop
int
sbb
out
lock
out
hlt
fistps
movsb
jl
mov
outsb
jp
movsl
adc
dec
jae
cmp
pop
leave
lods
popa
xchg
popf
les
icebp
imul
jmp
ds
adc
adcb
leave
cmp
jbe
jle
xor
fcomp
aam
shl
or
ja
jg
test
or
sub
bound
push
mov
dec
in
lds
and
out
pop
sub
lret
icebp
xchg
daa
insl
push
push
repnz
pusha
lods
sti
out
mov
cmpsl
in
lcall
iret
xor
nop
mov
cmp
push
mov
data16
lcall
enter
push
sbb
cli
jns
push
push
sub
sbb
lds
cmc
mov
fdivr
and
movsl
addr16
add
insl
ss
scas
jmp
inc
or
cmp
sub
or
loope
add
dec
pop
ja
sbb
jae
repnz
xchg
dec
pop
movsl
inc
and
or
xchg
arpl
loopne
repz
jnp
mov
je
fldt
push
pop
mov
std
ljmp
pusha
int3
inc
xchg
or
cmp
ret
filds
xchg
jnp
mov
lcall
movsl
or
jo
xor
sub
add
xchg
xor
push
cmp
mov
or
dec
push
imul
jg
jmp
pop
dec
fstpt
dec
jmp
icebp
in
xchg
int3
hlt
aam
xor
xchg
pop
mov
mov
sbb
dec
in
test
dec
xor
mov
test
mov
in
mov
jp
repnz
mov
incl
testb
into
aaa
mov
ret
cmp
inc
add
sbb
inc
mov
mov
dec
inc
add
jne
or
xchg
pop
sub
cmpb
mov
addr16
cmpsl
pop
das
fldcw
ficoml
cmp
in
test
rorl
pop
testb
andps
sub
mov
mov
xchg
mov
arpl
push
add
mov
hlt
push
sbb
jle
adc
rol
xor
mov
mov
and
sarl
push
push
xchg
insb
jnp
or
inc
cmpsl
fisubs
hlt
fidivs
mov
adc
ret
mov
xlat
popf
jmp
add
mov
mov
and
or
leave
int
pop
cmpsb
out
fcmove
and
scas
lahf
xchg
or
cmp
inc
into
outsb
dec
dec
out
test
dec
pop
ss
aas
dec
xchg
jae
subl
fxch
mov
cmp
iret
push
ficoms
xorl
or
mov
jle
scas
std
into
pushf
dec
mov
dec
test
inc
mov
rol
data16
js
test
aas
adc
jge
cmpxchg
mov
mov
mov
cld
sub
or
sub
lahf
andl
mov
jge
mov
xchg
xchg
xor
ss
out
in
repnz
lret
popf
shrl
pop
fists
out
sbb
cwtl
sub
lds
adc
data16
je
outsb
test
pop
adc
mov
hlt
mov
mov
mov
cmp
cmp
lahf
jns
push
pusha
adcb
jnp
pop
arpl
sbb
fcoms
ret
loop
test
js
mov
fs
out
jo
inc
xor
pop
mov
xchg
pop
lods
jno
inc
jno
ret
lret
cmp
jo
push
push
popf
or
nop
or
mov
fdivrl
jl
push
sahf
repnz
fisubrl
lahf
iret
add
cmp
adcl
xor
dec
repnz
daa
cmc
mov
stos
je
and
jne
jo
mov
pushf
maskmovq
and
cwtl
mov
xchg
jecxz
pop
int
sub
jo
sbb
xor
mov
pop
jno
test
std
pop
mov
rolb
cmpsl
jno
push
jle
cmp
test
cmp
jae
test
loopne
dec
std
jbe
popf
scas
push
loopne
push
enter
xchg
stc
xchg
jle
call
sbb
loop
xchg
and
inc
mov
mov
and
insl
sub
pop
push
inc
adc
loopne
aas
adc
shll
inc
hlt
dec
mov
jmp
push
fistpl
cli
xor
mov
pop
fdivs
dec
imul
fwait
pop
dec
in
jmp
fcos
sbb
repz
mov
add
xchg
or
pop
cmp
mov
push
call
inc
xor
in
or
cmp
dec
xor
xbegin
cmpb
in
mov
lods
das
sbb
mov
sbb
adc
mov
sub
pop
inc
sub
xorb
into
pop
push
adc
clc
cli
fs
pop
pusha
push
pop
mov
add
cmp
je
mov
mov
xchg
outsb
fucomp
fsubs
pop
xchg
or
jns
les
mov
xor
mov
mov
lods
mov
rorl
adc
pusha
cmc
xchg
xor
fisubl
insb
inc
push
lcall
addr16
out
and
xor
cmp
xchg
rcr
das
jae
test
or
mov
fisubl
and
cmp
or
jne
fwait
outsb
imul
sbb
pop
jle
jno
adcl
xor
arpl
push
movsl
repnz
dec
mov
popf
jle
push
scas
push
and
imul
xchg
test
xchg
mov
dec
aaa
pushl
jmp
sar
mov
inc
test
enter
stos
cmp
add
mov
mov
es
in
xor
mov
lods
push
and
jne
jp
popa
mov
sti
and
ret
lret
movl
jg
pop
ss
fwait
call
push
popa
inc
add
pushf
add
mov
sbb
inc
je
adc
les
fsub
and
sub
movsl
fildl
or
pop
mov
lods
mov
push
push
cmp
dec
and
mov
inc
test
mov
dec
pop
push
sub
rclb
mov
jle
pop
jg
fnstsw
dec
pop
pop
inc
push
lock
fwait
mull
fcmovnb
int
and
leave
xchg
lea
mov
xchg
addb
test
addr16
les
pushf
repnz
push
sti
mov
jnp
pop
inc
adc
sti
adc
add
addr16
xchg
sub
add
fsubrs
adc
sub
pushl
dec
negb
pop
mov
insl
loopne
rorb
pop
jnp
or
ret
lret
mov
jno
aaa
iretw
xchg
lea
add
and
and
outsl
stos
and
fsubrs
mov
fwait
xor
sbb
inc
jae
enter
test
daa
std
sub
adc
out
fprem
scas
pop
loop
xlat
cmc
adc
test
dec
js
ljmp
or
sbb
insb
xor
cmp
mov
mov
mov
sbb
iret
and
daa
mov
mov
lea
sahf
pop
add
inc
adc
data16
mov
fldcw
pop
aam
fistpll
stos
jl
mov
fwait
cmp
ss
sti
loopne
or
adc
call
dec
repnz
es
sbb
or
sbbl
pop
imull
fsubrs
mov
xchg
or
sbb
sub
inc
sti
popa
fs
pop
sbb
adc
jbe
push
sbb
cs
jle
jbe
and
rolb
mov
imulb
push
inc
sbb
int
repnz
jge
int
or
repz
sbb
cmp
popa
push
push
lret
ret
fildll
je
xor
repz
fcomp
mov
or
jp
push
mov
in
gs
in
scas
call
xlat
sub
sub
xchg
adc
push
aaa
rclb
or
xchg
pop
mov
icebp
or
orb
cld
and
push
shll
sub
lcall
and
arpl
stc
js
andb
pop
repz
mov
cmpsb
mov
mov
jae
shlb
mov
inc
xchg
push
daa
xor
mov
push
xchg
mov
ffree
xlat
sbb
push
mov
icebp
jmp
aas
mov
add
lret
js
and
ret
mov
mov
xchg
nop
fstl
mov
cli
dec
out
cli
sub
movsb
mov
jmp
stos
ljmp
ret
inc
movsb
mov
pop
cmp
jnp
ret
add
push
inc
lock
jp
daa
fisubrl
add
or
std
inc
addl
cmpsb
gs
fistpl
mov
ret
and
sbb
and
xchg
insl
lock
stos
jae
adc
ss
add
cmp
fisubrs
pop
mov
jmp
and
dec
dec
push
pop
mov
dec
sbb
lret
dec
add
sub
mov
iret
pushf
mov
adc
mov
dec
add
insl
mov
adc
divb
mov
pushf
pop
adc
fdivrl
push
cmp
aas
cmpsl
lods
pop
fstps
js
lds
sbb
mov
and
in
dec
or
adc
pop
mov
adc
mov
loope
dec
inc
mov
inc
pop
dec
out
aad
aas
cli
add
mov
dec
data16
orb
stos
lret
ljmp
fistpll
xor
fnsave
je
shlb
xorl
inc
xchg
out
adcl
ljmp
int3
sub
inc
insb
fbstp
outsl
rclb
xor
lods
jno
loopne
insl
and
xor
clc
iret
testb
sarl
pushl
or
mov
mov
inc
sub
push
faddl
leave
mov
sbb
xor
sub
and
add
pop
sahf
jl
outsb
xchg
sub
cmp
call
sbb
mov
aaa
lahf
stc
divb
orb
movsl
mov
mov
adc
jo
mov
test
test
add
cmp
scas
icebp
cmp
divb
jmp
fcmovnbe
xor
and
cmpsl
rcll
iret
fdivp
arpl
jo
adc
adc
sbb
xchg
push
in
sbb
dec
mov
pop
push
push
cmp
xor
sahf
lods
aam
aam
adc
xchg
push
in
cmp
mov
jae,pt
and
mov
in
push
pop
push
mov
mov
arpl
repz
mov
outsb
or
dec
push
sysexit
aam
aaa
cmp
pushf
shll
test
jecxz
pop
fldt
sbb
adc
mov
xchg
pop
rcr
test
repz
lret
inc
das
push
and
pop
xor
lar
adc
add
mov
cmpsl
xor
test
or
xor
pop
mov
rorl
orl
fcmovnu
lock
div
xchg
test
in
ja
js
out
sbb
outsl
push
mov
xor
sub
dec
jle
or
bound
sub
push
leave
lods
fidivs
push
and
xchg
pop
addr16
outsb
mov
cli
jmp
cld
jo
in
push
clc
cmp
jl
cmpsl
pop
ret
mov
xchg
stc
mov
iret
sub
in
pop
out
mov
pop
mov
xlat
jns
push
stos
fdivrs
in
lods
aam
cmpsb
outsl
movsb
pop
cmp
dec
repz
jb
mov
sahf
pusha
insl
std
pop
scas
es
ficoml
mov
mov
out
push
push
loop
mov
loop
les
sarl
pop
jne
add
cltd
dec
cmp
inc
loope
dec
sub
sti
fcoml
sub
dec
mov
scas
in
cmp
sbbl
pop
fwait
cmpb
sub
xchg
lret
inc
push
sbb
fs
repz
lcall
pop
movsb
push
call
adc
pop
insl
cltd
sub
lcall
xor
neg
or
pop
xchg
faddl
mov
mov
negb
mov
idivl
cmp
push
push
fistps
xor
fisubl
sahf
mov
inc
or
mov
adc
sub
test
popa
dec
aas
out
cli
imul
or
test
mov
daa
xchg
add
icebp
mov
movsl
rorl
sahf
and
mov
in
test
cmc
pop
ret
xchg
fcomi
xor
push
clc
shrl
dec
int3
jmp
cwtl
xlat
sbb
mov
push
cwtl
pop
jne
sbb
scas
lock
push
mov
cmpsl
cmc
push
cmp
adc
sbb
adc
fsubrs
sbb
pop
cmp
daa
jnp
cmp
in
fisubs
ja
ret
mov
jl
dec
dec
sub
adc
stos
cmp
cmp
cmp
icebp
scas
push
lods
mov
leave
add
cwtl
into
dec
inc
rclb
sahf
adc
fistpll
push
pop
sti
fnstcw
in
addr16
rorl
out
jle
sub
pop
jg
testb
cli
and
mov
cmpsb
inc
fwait
jne
mov
cli
push
pop
push
and
mov
dec
aam
outsl
adc
cmp
add
loope
scas
ss
pop
mov
sub
cmpsl
popf
jl
sbb
repnz
mov
ret
fs
jge
xor
icebp
sbb
mov
outsl
imull
pop
push
xchg
cmp
iret
inc
jns
add
push
outsb
iret
sbbb
orb
dec
jns
jp
call
inc
sub
fldenv
xchg
pop
in
dec
es
ljmp
fidivrl
add
iret
or
push
test
or
test
shl
iret
in
sbb
adc
cmc
dec
in
mov
add
imul
clc
jl
sbb
pop
push
sub
aas
pop
jp
cmp
icebp
jmp
out
pop
adcb
and
out
ja
fs
mov
add
ja
xor
jecxz
fisttpl
or
inc
cmp
mov
mov
test
out
mov
add
ret
jge
rorb
mov
iret
cli
lods
shlb
cld
dec
std
adc
inc
out
inc
pop
ror
push
pop
mov
jnp
sbb
les
lods
mov
pop
pop
popf
mov
outsl
movsb
je
jns
scas
cmp
or
andl
clc
insb
lea
xchg
pop
inc
cmp
push
das
cmp
pop
out
out
xor
fildl
xchg
adc
mov
rolb
iret
sub
test
add
push
jnp
data16
mov
cmp
xchg
mov
cmpsb
sbb
or
pop
mov
fnstenv
dec
jp
inc
jmp
testl
dec
push
push
sbb
ss
mov
mov
push
call
xchg
cmp
mov
mov
pop
pop
stos
sub
aaa
push
xor
xchg
xchg
std
xchg
es
jae
lods
push
fmulp
icebp
cmp
xchg
xchg
dec
pop
popa
mov
and
mov
pop
or
cmp
shlb
push
pop
or
cmp
sub
dec
lds
shlb
jecxz
outsl
add
xchg
inc
js
xor
or
adc
mov
and
or
scas
stos
mov
pop
xlat
push
lea
sbb
aad
push
daa
sti
push
imul
fcoms
iret
repz
insl
mov
mov
in
es
cmp
pop
add
inc
test
inc
int
aam
inc
cmp
and
cmc
pop
andb
ds
cmp
notl
push
and
adc
insb
mov
mov
fs
dec
adc
mov
jmp
out
pop
js
inc
test
mov
xor
mov
arpl
pop
mov
or
add
das
and
and
dec
push
lret
imulb
jns
movl
xchg
je
mov
and
dec
add
jae
in
push
fwait
mov
adc
loop
dec
movsb
push
loop
rcr
repz
pop
pushf
out
imul
aas
mov
mov
fs
dec
div
sbb
loop
sbb
or
mov
cmp
js
leave
sub
in
xchg
rorb
stos
gs
popa
loope
daa
or
cld
rol
aad
inc
pop
int3
inc
pop
mov
mov
mov
popa
out
pusha
out
lods
jb
ret
push
pop
lods
dec
push
xor
jmp
js
jp
loopne
push
icebp
push
into
dec
xor
mov
cltd
pop
in
jp
cmc
lea
scas
mov
pop
sbb
popa
jecxz
and
push
sbb
sub
mov
pop
clc
ret
mov
mov
or
mov
jl
outsl
push
ret
scas
stos
and
push
inc
stos
cli
insl
sub
push
out
lret
cmc
cltd
lock
sub
xchg
movsl
mov
les
sub
fwait
roll
stos
pop
push
push
addb
sbb
sub
mov
addr16
sbb
imull
iret
lods
sub
jbe
mov
xor
jecxz
push
xchg
add
mov
les
jmp
fcomps
inc
xchg
addr16
insl
cmpsb
or
jp
repz
pusha
adc
in
add
mov
xorb
jno
cwtl
or
lahf
xor
xchg
repnz
cmc
jno
push
sahf
imul
mov
xor
sahf
dec
and
addr16
push
xor
push
jle
lods
fmuls
mov
rcll
test
fsts
xchg
jbe
push
cmpsb
pushf
int
jae
lock
mulb
mov
push
and
ret
mov
sbb
jno
clc
xchg
sbb
adc
stc
mov
dec
xchg
xchg
xor
push
mov
jge
in
outsb
mov
inc
enter
pop
outsl
aas
and
xor
push
iret
iret
outsb
dec
stc
sub
or
or
add
dec
cld
cmp
adc
adc
mov
into
pushw
adc
scas
repnz
mov
xchg
push
popl
into
xor
pop
int
cmp
adc
xlat
cmp
xchg
dec
inc
mov
movsb
movsb
mov
mov
inc
outsb
or
aam
jbe
aaa
lret
mov
xor
inc
cs
outsb
cli
mov
insb
or
out
pushf
inc
loop
mov
sbb
pop
pop
push
jecxz
mov
push
jp
mov
adc
lcall
push
imul
ljmp
push
fcom
or
mov
ds
call
pushl
cs
sub
fs
inc
sub
mov
xor
lds
mov
out
jns
mov
sbb
mov
cmp
cmp
jnp
lods
cld
xor
sub
sti
cltd
repnz
cmp
mov
mov
stos
cmp
xor
icebp
popf
xor
mov
push
adc
adc
lcall
mov
mov
fwait
xor
xchg
notb
or
stos
inc
std
dec
out
jb
lret
lods
loopne,pt
inc
adc
js
push
jne
mov
imul
test
aam
and
mov
xor
std
jno
sub
jns
add
jnp
dec
jle
sbb
or
mov
mov
mov
insb
xchg
mov
mov
sub
movsl
pushf
addr16
adc
lahf
push
mov
dec
fisttpll
pop
cwtl
mov
lcall
js
and
sbb
cmp
and
mov
cmp
adc
add
and
xchg
inc
cmc
mov
lahf
inc
xchg
inc
pop
sbb
pusha
cltd
xor
ljmp
jno
int
daa
mov
pop
dec
es
js
or
lret
adc
lods
leave
test
mov
sub
pop
dec
insl
lods
and
repz
mov
sbb
scas
sub
add
inc
or
add
add
mov
cmp
mov
mov
cltd
and
mov
leave
xchg
mov
push
test
leave
popa
dec
loopne
jne
scas
jl
jnp
push
aas
dec
clc
and
test
je
pop
xor
insl
out
pusha
mov
ds
rolb
punpckhwd
cmc
push
and
push
push
jb
ja
test
jno
testb
das
dec
leave
sub
dec
mov
lcall
jne
cmp
stos
push
fsubrl
cmp
into
sub
test
into
xor
int3
sbb
lcall
fistpll
rcll
jbe
inc
in
lock
ljmp
jb
in
xor
mov
mov
rcl
sbb
jge
or
scas
into
imul
lock
push
ret
loopne
sbb
pop
loop
les
xor
jge
fisubrl
jo
inc
insb
test
cmp
lret
jbe
lahf
js
sub
aas
sarb
add
jp
or
mov
sbb
jae
cltd
add
cwtl
cmp
inc
gs
movsb
mov
jecxz
movsl
cmp
push
push
or
nop
mov
push
sub
in
call
std
psrld
nop
mov
push
mov
dec
stos
nop
repz
in
arpl
jg
ret
and
inc
ja
pop
mov
leave
pop
pop
inc
push
adc
sbb
bound
lcall
int3
aaa
scas
mov
lock
pop
jg
push
aas
dec
inc
pop
and
mov
andl
adc
jae
xor
and
cltd
out
sbb
xor
mov
out
cmpsb
pop
dec
gs
inc
fidivl
shl
inc
add
inc
cmp
inc
sub
push
idivl
add
cmpsl
mov
inc
jecxz
cmp
ret
pop
push
lcall
rcr
cmp
js
outsb
push
fsubl
and
push
mov
rolb
mov
movsl
pop
fwait
stos
fcmove
pop
xchg
cmpsl
test
pushf
ret
pop
fnsave
pop
mov
aaa
clc
dec
scas
xchg
push
rcrb
insb
lcall
inc
inc
fwait
mov
push
cmp
test
mov
std
xor
push
push
mov
inc
dec
inc
sbb
loop
mov
pop
cmp
dec
ljmp
push
lds
mov
outsb
mov
fimull
xor
inc
in
shrb
xchg
and
test
fimull
pop
dec
stc
aaa
sbb
imul
rcrl
repz
xchg
or
cmp
mov
add
cmc
sarb
fs
lret
pop
xchg
inc
mov
insb
mov
xchg
push
or
xchg
sbb
adc
push
pop
leave
sub
jbe
sti
mov
sub
push
aaa
mov
jecxz
xor
xor
and
out
pop
add
pop
jmp
icebp
ds
cmp
mov
dec
dec
cmpsl
mov
xchg
cwtl
fisttps
mov
jae
into
leave
mov
mov
push
lods
mov
imul
cltd
outsl
jbe
mov
dec
imul
fbstp
rol
add
call
xchg
js
xor
mov
cs
push
dec
sar
xor
or
sbb
cmp
aaa
mov
mov
sti
stos
out
cli
ficompl
inc
out
aad
popa
jecxz
mov
jae
outsl
outsl
fidivl
jb
stos
or
aaa
cmp
int3
xlat
shll
notb
pop
loop
adc
cmp
jp
xor
add
inc
lods
push
and
out
sub
xor
push
or
add
cmpsl
outsl
gs
enter
je
sbb
out
cmp
xor
icebp
xchg
outsb
sbb
aas
cmp
fisubrs
mov
pop
xor
scas
pop
pop
testb
jge
pop
loop
fs
sbb
adc
les
cmp
mov
and
inc
jg
mov
mov
or
jp
xchg
std
lods
test
dec
adc
mov
leave
aam
push
pop
dec
lret
aaa
cmp
in
mov
dec
dec
sbb
push
add
rcrb
scas
xchg
cmc
cmpsb
or
sub
call
push
push
out
inc
popa
lock
jno
mov
pushf
pop
jg
ja
lods
dec
lods
jmp
mov
jmp
pop
xchg
jge
scas
mov
sub
dec
clc
xchg
xchg
int3
fcomp
imul
push
adc
jbe
rcrb
add
dec
enter
dec
lods
pop
shrl
or
loope
mov
add
pusha
xor
jmp
scas
sbb
add
sbb
nop
shl
push
js
mov
mov
pop
push
les
ljmp
push
in
ljmp
in
pop
cmp
add
or
fsubrs
leave
cmc
in
pop
or
icebp
push
mov
adc
clc
jecxz
mov
mov
jae
fwait
mov
pop
mov
mov
jo
in
sub
cmp
xchg
add
mov
mov
das
cmp
lret
cmp
test
cli
sub
loopne
in
stc
mov
push
nop
dec
cmpsb
nop
imul
xchg
xchg
push
and
imul
rcrb
shlb
outsl
adc
mov
mov
sbb
xchg
cmc
div
cmpsl
aaa
jns
sarb
mov
pop
sub
and
pop
jb
adc
arpl
add
insl
xchg
add
mov
adc
cwtl
and
mov
mov
in
outsb
xlat
stos
mov
popa
mov
pop
or
adc
out
scas
pop
cltd
mov
pop
js
faddl
xchg
inc
repnz
fwait
pop
or
jmp
mov
mov
sub
mov
xor
lret
sbb
push
ret
daa
loop
mov
shrl
in
daa
push
div
adc
cmp
leave
mov
push
lea
sub
cwtl
xchg
xor
push
mov
xor
push
cltd
rcll
push
clc
subb
and
hlt
mov
or
inc
test
outsb
jmp
xchg
test
sbb
cmp
jo
xor
aas
mov
callw
jge
rcrl
in
cmp
dec
js
cmpsb
and
ja
pop
mov
jne
adc
popa
mov
fidivrs
icebp
xchg
dec
inc
cmp
popf
dec
add
jae
sbb
xchg
ret
faddp
icebp
andb
pop
or
fdivrl
cmp
into
cmp
sub
and
icebp
outsl
lods
mov
pop
pop
pop
xchg
add
cmp
jl
jg
push
test
data16
xchg
int3
insl
stos
mov
loop
mov
rorl
pusha
jns
or
pop
xor
enter
lods
push
cmpsl
repnz
sbb
imul
push
movsb
cmp
push
add
push
aam
mov
std
insb
or
jge
and
xor
scas
cmpsl
jle
mov
psubq
movb
enter
popa
or
data16
mov
xchg
test
jno
xor
insb
pop
repnz
sti
addr16
or
jbe
cmpsb
cmc
xchg
movaps
cmc
jno
fld
xlat
dec
fwait
icebp
lds
jnp
mov
pop
stc
int
xor
xor
insl
jg
mov
add
xchg
mov
loop
sub
mov
in
xor
cmp
out
test
lret
cwtl
std
rcl
mov
adc
fiaddl
push
mov
dec
iret
cmp
push
xor
jp
scas
cmpsb
fsubrs
mov
movsb
cmp
or
push
rcl
aaa
push
in
jp
push
jne
mov
aaa
jne
test
pop
andl
shrb
in
sbb
arpl
imul
xor
imul
movsb
lcall
addr16
mov
test
pop
mov
inc
pop
jp
add
pop
or
sbb
cmpsl
pop
mov
xchg
das
xchg
adc
pop
sbb
test
in
inc
test
cmp
imul
aad
dec
mov
push
stos
sbb
push
fadd
bound
adc
push
int3
aaa
add
test
gs
sub
dec
dec
aas
pop
mov
or
sub
pop
outsl
mov
xchg
es
mov
or
fdivr
daa
sub
inc
cmpb
int3
rolb
mov
les
ret
mov
enter
pop
mov
daa
mov
jmp
outsb
stc
fisubl
mov
sahf
loop
lods
mov
aas
add
rcrl
inc
pushf
fnstsw
jge
mov
or
dec
mov
stos
mov
ss
jecxz
cwtl
xor
xchg
push
scas
enter
mov
mov
dec
lods
pusha
adc
pop
cmp
js
and
das
leave
stc
pop
push
lret
mov
xor
sbb
xchg
dec
pop
sub
xchg
xor
shlb
add
jbe
data16
bnd
outsl
fistpll
dec
rcll
mov
fdiv
cmp
popf
out
lcall
push
loopne
push
lahf
dec
jmp
mov
xchg
jle
mull
cmp
xor
xor
jb
xchg
xor
and
add
mov
mov
xchg
orb
or
hlt
cmpsb
std
clc
insl
mov
add
cmp
xor
cmp
adc
jmp
movsb
lret
orb
lods
sub
dec
data16
mov
sub
mov
mov
cmp
daa
cltd
icebp
xchg
mov
push
ja
push
in
mov
jg
popf
fwait
jmp
jb
xor
incb
inc
scas
xor
xorl
scas
lods
sbb
pop
pop
sbb
imul
dec
arpl
xchg
inc
loope
cmp
jnp
int3
lcall
inc
or
mov
add
mov
xchg
inc
pusha
jg
mov
dec
xorl
xchg
and
mov
adc
push
mov
and
mov
in
push
inc
dec
mov
mov
out
cmp
out
mov
iret
negw
std
pop
cmpsl
or
pop
sub
xchg
std
hlt
jmp
mov
add
xchg
xlat
mov
mov
mov
fldt
stos
pushf
dec
jns
aaa
or
or
xchg
movsb
aaa
jns
shr
aad
aas
pop
and
add
xchg
sbb
adc
mov
jb
lds
aas
lret
mov
adc
adc
out
stos
test
jbe
adc
jnp
adc
dec
and
dec
bound
mov
int
add
xchg
cmp
aam
cmp
pop
dec
inc
iret
icebp
lock
popa
into
negl
mov
mov
add
push
pop
incl
stos
in
aam
add
dec
jb
xor
xor
mov
lods
mov
mov
adc
push
mov
adc
cld
cmp
xor
push
test
ds
dec
es
or
add
sti
stos
bound
sbbl
stc
pushf
cmpsb
int3
scas
inc
lock
add
sbb
aam
orl
cld
cmpsl
push
ja
das
sbb
mov
test
insb
fimuls
movsl
ja
fisttpll
sub
in
cmp
and
or
mov
sbb
out
in
insb
out
jecxz
push
inc
jo
xchg
ud2
jmp
or
inc
jmp
dec
data16
fistpll
rclb
inc
fsubs
insl
jp
jbe
jo
push
xchg
push
inc
jge
and
les
andl
pop
mov
mov
stos
jmp
mov
cwtl
dec
bound
fistpll
mov
ljmp
jns
das
cmp
stos
inc
add
xor
repz
xor
call
insl
ret
sti
push
int3
or
jae
dec
cwtl
stos
mov
jnp
inc
rorl
push
icebp
mov
subb
clc
push
out
dec
cs
lods
mov
mov
aas
test
insl
icebp
lea
insb
call
loopne
shlw
mov
rclb
mov
dec
fildll
ds
lcall
jecxz
popf
add
pop
call
xchg
jae
mov
outsl
fwait
push
out
mov
or
cmpsl
or
sahf
sub
gs
adc
pop
dec
xor
mov
xor
sub
sub
std
lds
sub
xchg
dec
gs
mov
data16
dec
push
sbbl
popf
aad
lods
cli
pop
push
fldenv
in
fmull
jge
ljmp
dec
in
jecxz
out
and
in
mov
jbe
inc
jmp
out
aad
xchg
adc
out
mov
cmpsb
scas
push
in
push
movsl
shlb
pop
adc
ljmp
fld
jecxz
scas
jno
mov
icebp
icebp
popa
mov
push
xchg
pop
xchg
mov
je
cmpsb
clc
mov
jmp
fs
popa
mov
sbb
call
inc
outsl
scas
orb
adc
ja
repz
xor
xchg
mov
xchg
cmp
adc
ja
lods
jmp
cwtl
in
test
adc
pop
lods
inc
or
rcrl
and
or
movsb
scas
sub
movntps
arpl
and
fidivl
es
dec
rolb
jns
in
adcb
fisttpl
fwait
loope
gs
shll
mov
fldl
dec
fadd
add
imul
jmp
pushf
rorb
adc
xor
push
out
sbb
cmpsb
xchg
mov
push
or
xor
jecxz
out
sub
jmp
mov
int
fwait
dec
pop
dec
xchg
xor
and
mov
pop
and
int
dec
and
mov
and
push
test
jns
push
dec
xchg
repz
push
jb
std
ret
push
lret
jmp
loope
and
adc
aas
outsl
loopne
daa
xchg
xchg
dec
dec
sub
repz
lods
inc
andl
add
imul
mov
rorl
fwait
cwtl
divb
push
inc
xchg
adc
and
ret
out
mov
inc
fistpll
jecxz
or
iret
or
movsl
jmp
popa
and
fmuls
xchg
lret
mov
jle
jge
sahf
addr16
jge
mov
adc
fisubrl
sbb
mov
or
nop
add
xor
loopne
cmp
jns
pop
fisubrl
sbb
inc
ret
dec
in
pop
aaa
cwtl
cs
outsb
imul
mov
lds
imul
scas
stos
scas
add
cmpsl
ficoms
cs
jl
out
dec
jmp
ret
clc
mov
jmp
cmp
hlt
cmp
pop
bound
or
sbb
lods
jae,pt
pusha
pop
cmpsl
add
das
lret
xor
outsb
jl
sbb
sub
add
fs
xchg
adc
sub
in
ja
cltd
nop
or
cmpsl
mov
inc
mov
roll
push
or
sbb
fistl
sbbb
or
fcom
lret
adc
xchg
dec
inc
das
leave
ret
sahf
adc
cmp
repz
xchg
lea
in
hlt
xor
jmp
xchg
or
mov
pop
push
adc
lret
pop
je
inc
js
fbld
lret
jecxz
push
sbb
arpl
lcall
pushf
add
out
sub
mov
push
ret
jns
pop
add
stos
arpl
adc
int
popf
clc
cmc
enter
pop
into
xor
sbb
and
add
test
es
pop
loop
mov
in
xor
out
adc
arpl
mov
mov
pop
out
jb
inc
mov
xor
call
aaa
and
jo
out
mov
or
and
mov
pusha
fimull
fmul
dec
data16
sbb
test
or
xsavec
loop
ficompl
pop
and
out
lahf
das
inc
inc
jp
jecxz
cli
imul
dec
push
cltd
ficomps
xchg
push
cmpsl
mov
sub
stc
mov
xchg
out
setns
mov
popf
arpl
xor
xor
xchg
clc
and
andb
jo
mov
movsl
jecxz
sub
cmp
icebp
add
inc
xchg
cmpsl
jb
push
add
push
sub
stos
jae
aam
sub
push
push
pop
cs
sub
adcl
je
addr16
insl
push
lock
sub
cmc
jno
aaa
cs
hlt
fnstsw
lret
sub
push
cli
mov
out
inc
loope
pop
adc
sub
lods
dec
and
mov
pop
leave
je
jp
sbb
cmc
mov
sbb
ja
jmp
rcrl
sbb
es
adc
aad
cli
lods
ja
cmc
ret
dec
inc
jns
sbb
adc
test
clc
into
sub
and
lret
daa
cmp
jg
mov
push
mov
hlt
cmp
push
push
pusha
lods
jo
fdivrl
cmp
clc
and
and
shll
imul
pop
popf
fwait
mov
aas
fldenv
subl
fdivrl
sub
dec
es
jnp,pn
inc
xchg
adc
iret
xchg
adc
inc
mov
ss
push
cltd
lea
jne
daa
enter
fs
xchg
dec
mov
jns
fmuls
jp
call
aam
mov
push
jbe
jmp
or
ja
iret
call
inc
adc
cmp
xchg
mov
fidivrl
sbb
jae
xchg
lcall
lock
ss
xor
push
repnz
stc
xor
test
cmp
inc
xchg
mov
sbb
fstp
push
sub
dec
test
sbb
inc
xchg
pop
stos
loopne
sarb
mov
sub
push
shlb
cld
mov
jno
lock
dec
xchg
imul
pop
iret
jmp
adc
mov
mov
pop
imul
stc
sub
jne
add
cmovne
shll
xchg
pop
pop
inc
mov
fs
jp
xchg
push
jecxz
fcmovb
rcrb
les
imul
or
je
scas
adc
daa
pop
test
jb
ss
ss
cmpsb
and
inc
jns
or
mov
mov
dec
movsb
mov
or
sarb
cltd
jo
add
cs
aaa
mov
mull
jnp
lcall
in
int3
sub
outsl
adc
fst
sub
icebp
mov
fstp
rcrb
dec
sbb
pop
daa
sbb
inc
jo
push
dec
and
lds
call
inc
pop
push
stos
test
outsl
sbb
push
mov
adc
ljmp
movsl
sub
push
push
stos
scas
dec
xlat
nop
fsts
inc
xchg
sarb
test
fildll
ret
mov
popa
or
clc
cld
sbb
mov
mov
js
adc
push
cmpsb
xchg
idivl
shl
push
cmp
pop
pop
and
scas
call
out
scas
xchg
adc
fnstcw
add
mov
add
movsb
and
stos
xor
sbb
inc
imul
mov
clc
les
xlat
jmp
in
pop
cmp
sbb
movsb
xchg
mov
sub
movl
loope
mov
leave
push
bound
mov
outsl
inc
adc
ret
cmpsl
mov
popf
xor
jne
pushf
scas
in
pop
cmp
mov
xchg
cmp
mov
adc
sub
sbb
fcmovne
test
jmp
push
jo
icebp
mov
movsb
cmp
enter
or
mov
andl
cmovnp
mov
xchg
mov
xor
push
cmp
pop
xchg
les
loope
inc
aaa
xlat
xor
lock
mov
and
movsl
xchg
push
sub
fcompl
je
inc
push
xor
or
idiv
std
xchg
cld
and
or
inc
cmp
add
shll
mov
bound
mov
xchg
stc
ss
xor
pop
stos
inc
xor
mov
hlt
xchg
aam
push
cmpb
shrb
cs
xlat
in
js
aad
sbb
sahf
call
inc
insl
ret
pusha
or
add
fistps
add
xchg
pop
jo
call
push
adcl
sbb
mov
jl
pop
js
inc
xchg
mov
sub
xor
addb
pop
dec
pop
sbb
icebp
pop
jge
loopne
cmp
inc
outsb
mov
jle
push
sbb
pop
inc
xchg
ljmp
inc
ljmp
leave
int3
mov
jne
jg
cmp
test
mov
ss
push
insb
popa
fimuls
jno
sbb
xor
loope
jl
mov
andl
xor
mov
jae
pop
jnp
add
pop
xor
ret
sub
cs
clc
je
xchg
mov
dec
rcl
mov
popf
mov
stos
bound
adc
xor
lock
fdivrl
sbb
sub
popa
mov
jl
out
aas
fildll
mov
add
dec
test
inc
test
push
and
inc
dec
sbb
mov
es
dec
add
fstpl
xchg
mov
out
or
mov
movsb
pop
xor
inc
xor
mov
out
jle
or
shrb
push
inc
or
out
jmp
es
addl
out
inc
mov
bound
or
das
cmc
mov
ja
push
dec
xor
loope
repz
adc
jbe
jge
mov
jno
adcb
xchg
les
xchg
push
insb
pop
push
push
in
dec
cmp
push
aam
mov
out
cmp
cmpsl
sbb
sti
loopne
add
inc
ret
pop
imul
or
aam
push
sbb
dec
fdiv
ds
push
jb
xor
lock
pushf
loope
sub
es
je
je
fisttps
aaa
out
push
test
rcrl
lret
insl
sbb
lahf
adc
sarb
loop
fstpl
lcall
jbe
data16
xor
pop
jle
stos
imul
or
jecxz
sbb
adc
adc
fimuls
push
outsb
xlat
xchg
into
and
dec
ss
js
out
bound
or
push
sbb
xchg
mov
in
frstor
xor
mov
js
lock
pop
pop
pop
shl
cmp
adc
lds
mov
dec
or
jns
in
jp
mov
jle
mov
test
sub
jo
pop
adcb
dec
or
stos
dec
push
adc
fwait
push
mov
in
test
fstps
sbb
or
add
inc
mov
jecxz
sbbb
insl
aas
dec
test
and
into
adc
sub
scas
or
nop
push
add
in
and
cmc
fstl
jle
sbb
daa
inc
rcll
test
jmp
gs
dec
mov
xor
arpl
jb
add
subl
insb
or
cltd
add
bound
insl
sbb
clc
pop
and
jmp
test
mov
add
sub
clc
add
insl
rcrb
dec
lcall
outsb
rcrb
aad
lret
popa
push
aam
mov
ljmp
pand
pop
mov
movsl
pop
push
mov
push
sbb
and
cld
aam
jne
lock
rorb
shlb
cmp
dec
xchg
aam
inc
shrl
push
push
shrl
stc
inc
jge
mov
sbb
push
fdivrs
mov
fnstcw
or
cmp
mov
mov
pusha
dec
push
insb
movsl
sbb
add
add
xchg
jo
ss
mov
dec
popa
pushl
fistl
in
sub
imulb
jle,pn
xchg
mov
imul
enter
xchg
fadds
xchg
add
shrl
ret
pop
and
add
aas
lods
cltd
test
dec
mov
dec
and
test
aam
inc
xchg
lret
js
movsl
fmuls
lds
push
mov
xchg
mov
pop
add
mov
cmpsb
lods
pushf
scas
call
add
xor
push
jg
repnz
lods
aad
add
lock
subb
adc
outsl
jo
out
sub
pusha
push
or
aaa
dec
loopne
mov
cmp
cmpsl
xor
pop
xchg
inc
in
xchg
adc
lds
mov
sbb
scas
cmp
ja
adc
jnp
jge
xchg
loope
jmp
inc
add
dec
push
scas
out
sbbl
inc
shl
aad
pusha
jae
dec
xor
pop
mov
pushf
mov
sbb
jle
rcr
pop
jo
rcrb
incb
pop
test
dec
jmp
adc
nop
adc
push
sbb
insl
xor
pop
mov
shlb
mov
cmpsb
mov
pop
xchg
mov
xchg
sub
pusha
pop
repnz
and
pop
enter
adc
adc
movsl
int3
push
cltd
fcomps
mov
sahf
testb
movsl
and
push
test
xchg
adc
testb
push
scas
push
ret
push
jl
and
jl
lea
je
jns
lods
jo
int3
add
popa
cli
jb
lods
mov
ror
inc
and
je
leave
push
push
loope
pop
mov
push
mov
out
mov
adc
out
push
sub
jo
rcrb
mov
std
testl
mov
push
arpl
pop
push
mov
lcall
xchg
xor
mov
sbb
test
lahf
jno
add
outsl
xchg
adc
iret
push
inc
jo
popf
cli
adc
test
loope
in
sub
cmp
testl
daa
xchg
pop
mov
add
adc
xchg
mov
sub
and
jle
jmp
ficompl
dec
sti
push
add
xor
int3
mov
sti
cmp
aaa
ds
fiaddl
inc
sahf
pop
out
pop
lods
call
lods
pop
adc
stos
popf
mov
in
pop
lea
jbe
jae
das
imul
jmp
sub
dec
rorl
mov
outsb
push
aam
pop
dec
nop
jbe
dec
xchg
shll
sbb
mov
push
in
jae
fptan
insl
add
cli
add
or
xchg
xchg
xor
mov
sahf
add
insb
test
pop
dec
daa
icebp
pop
inc
mov
and
and
or
jo
das
mov
fldcw
mov
mov
dec
jne
jno
mov
mov
cmp
ja
mov
add
push
es
adc
xor
out
fldenv
repz
adc
out
cmp
fsubs
ret
rorb
sahf
outsb
les
xchg
and
movq
jmp
xchg
idivl
ljmp
dec
das
xchg
sbb
sub
fwait
cwtl
xor
popa
cmp
or
xchg
add
cmc
cmpsb
or
jle
push
xor
jno
ljmp
add
sub
push
fmull
gs
add
imulb
or
arpl
outsb
push
mov
add
jno
adc
ret
dec
push
jae
js
lea
loope
out
dec
jnp
inc
mov
mov
pop
dec
and
cmpsl
jmp
clc
test
sbb
add
add
sub
hlt
mov
or
jbe
xorb
je
adc
mov
outsl
jb
sbb
push
adc
out
insb
notl
sahf
insb
push
arpl
xor
mov
pop
push
jbe
in
repz
and
imul
enter
ret
imul
cmp
insl
test
outsl
xor
stos
dec
ds
cmp
in
mov
aad
mov
cli
clc
mov
shlb
pop
lds
cmc
iret
clc
sub
xor
add
pusha
and
dec
sahf
cmc
mov
popf
shlb
and
cwtl
ds
lock
jmp
pop
jnp
test
xchg
mov
incb
popf
stos
lcall
out
push
jno
mov
bound
lret
jae
jge
pop
fildl
mov
scas
fnstenv
sub
rcrb
push
dec
cld
ljmp
inc
mov
add
lret
sbb
loope
adc
aam
fstl
and
fcmovb
std
mov
lea
jle
sahf
mov
daa
test
xor
fsubrl
mov
or
pop
jns
addr16
loop
dec
test
data16
pop
jle
fwait
das
push
push
push
dec
inc
pushf
mov
out
mov
ss
pop
mov
hlt
mov
add
mul
hlt
test
dec
imul
add
jns
cmp
and
imul
xchg
xor
stos
in
pop
mov
sub
test
out
mov
xor
je
or
sbb
sub
jecxz
sbb
lret
dec
fisubrs
jbe
fwait
test
repnz
dec
or
and
mov
and
std
push
fstpt
adc
or
dec
push
lods
test
cmpsl
lret
jb
pop
idivb
aam
ret
push
jl
mov
aam
cmpsb
add
or
mov
andb
sbb
test
icebp
xchg
mov
notb
mov
pop
iret
ror
aas
ds
mov
and
sub
and
jecxz
adc
xchg
shll
arpl
shl
xchg
sbbb
inc
xchg
mov
fadds
pop
sub
and
sbb
and
cmp
inc
or
sub
repnz
fisubl
push
pop
mov
call
sub
mov
pop
sub
rcl
pop
push
sti
fwait
test
call
push
inc
insl
sbb
sub
mov
pop
cmp
ljmp
pop
inc
movsb
incl
add
mov
mov
outsl
xchg
push
adc
cld
mov
push
push
mov
iret
test
repnz
test
stc
test
sub
movsl
std
andl
add
inc
mov
mov
int
cli
fisubl
push
pop
add
mov
xchg
arpl
cmp
divl
test
repz
mov
sar
sub
out
pushf
addl
xchg
cmpsl
js
in
loopne
fbld
test
sbb
cli
notb
dec
rorb
cmp
jmp
mov
add
pop
jecxz
or
jl
xchg
push
dec
movsl
cmp
fs
mov
xor
fstps
filds
dec
je
mov
fiadds
inc
mov
inc
addr16
arpl
ljmp
pop
push
std
push
jb
dec
sbb
xchg
das
jg
dec
das
fdivs
cmpsb
outsb
shr
inc
shll
sar
daa
sub
out
mov
lret
mov
aad
jg
mov
fldenv
in
cmpsl
mulb
lret
lret
add
dec
lcall
bound
inc
or
addr16
rcrb
test
scas
inc
push
xor
sbb
je
call
add
mov
js
adc
dec
adc
inc
jno
mov
add
jl
mov
jl
push
repz
repnz
imul
es
cld
lods
push
add
and
push
or
out
addb
das
sub
andb
or
fidivrs
rcrl
ja
push
outsl
mov
lea
mov
sub
or
or
or
adc
adc
das
add
and
adc
cmp
idivl
add
mov
lcall
and
or
and
push
out
sti
pop
out
mov
or
lock
push
add
sar
data16
jb
inc
adc
mov
popf
lds
std
cmp
mov
inc
sbb
rcrl
dec
clc
add
mov
adc
add
addl
shl
cld
je
inc
lock
iret
fadds
sbb
imul
adc
movsb
enter
push
in
push
jmp
inc
xor
jle
pop
dec
fcmovnu
adc
dec
sbb
fistl
adc
lahf
and
enter
das
or
test
or
jge
xchg
pusha
push
add
es
xchg
xor
push
mov
ljmp
add
icebp
mov
mov
loopne
fsubs
popa
add
lret
ret
add
mov
jno
mov
or
loope
gs
cmp
mov
es
nop
mov
hlt
out
mov
dec
mov
or
inc
xor
outsb
or
out
gs
cmp
ds
lock
dec
jne
add
adc
jmp
jmp
std
cmp
mov
insb
enter
jnp
sbb
in
test
pop
xchg
mov
mulb
push
dec
in
aaa
adc
subb
dec
cmpsb
adc
adc
add
inc
dec
cmpsb
inc
adc
xchg
jbe
push
sub
or
inc
fwait
ret
mov
movsl
mov
add
xchg
adc
dec
out
out
aas
jmp
push
mov
push
mov
mov
ret
mov
fisubl
data16
sbb
push
scas
xor
cli
je
pop
insb
pop
stos
or
push
data16
sbb
jl
or
rol
mov
lea
mov
mov
daa
dec
fucomip
xchg
jnp
or
jl
add
jg
cli
cld
inc
mov
popa
mov
ja
ficomps
pop
mov
push
in
pop
adc
outsl
lret
inc
xor
pushf
loopne
pop
mov
cmpsb
mov
sbb
pop
mov
xor
inc
roll
xchg
mov
pop
scas
mov
pop
nop
dec
push
dec
or
sub
jge
dec
aas
pop
pop
int3
negl
bound
repnz
and
movsl
cmpsb
hlt
and
push
pop
jecxz
insb
and
xor
cmp
add
pop
jecxz
push
test
push
inc
xchg
jge
inc
test
or
cli
nop
adc
jns
out
jmp
lret
pop
movsl
in
loopne
push
mov
add
sbb
mov
arpl
popf
and
xor
in
lcall
dec
add
pop
and
int
adc
je
outsb
imul
inc
and
mov
jl
add
mov
iret
ret
mov
fdivr
in
dec
rorl
ds
and
mov
ret
ds
mov
push
jecxz
out
ja
adc
ds
mov
aad
jb
rcrb
cmp
inc
mov
add
sbb
xchg
scas
ret
nop
add
xchg
cmpsl
jno
inc
jae
mov
xchg
push
imul
inc
stos
outsl
pop
inc
xor
inc
mov
mov
adc
xchg
pop
loopne
push
add
repnz
pop
cltd
cmp
out
jecxz
int
jb
mov
nop
ret
in
or
jno
out
shlb
cmpsb
lea
dec
ret
inc
cmpsl
les
fs
pop
test
dec
mov
add
xor
jnp
out
repz
sub
cmpb
push
rolb
js
mov
es
pop
rcr
lds
add
jmp
movsb
cmp
roll
and
jle
dec
int3
sub
jp
in
mov
jne
adc
fcompl
fnstsw
mov
fmul
cwtl
xor
cld
aaa
mov
je
inc
mov
test
outsb
aaa
call
mov
ret
repnz
xor
adc
pop
scas
dec
dec
xchg
and
fpatan
push
imul
cmp
inc
bound
xchg
imul
or
shr
arpl
sti
cld
xchg
or
imul
movl
sbb
sbb
sti
and
into
aad
adc
ret
enter
and
mov
pop
movsb
mov
add
enter
lcall
lods
or
out
mov
int
fwait
and
sub
mov
mov
stc
sub
xchg
push
sti
ret
add
ret
aaa
pop
add
lret
xlat
sbb
inc
insl
mov
cmp
mov
popf
ret
pop
incb
sbb
push
test
and
xlat
jo
cmp
or
adc
clc
adc
dec
arpl
jg
in
jl
pusha
inc
push
mov
mov
lret
add
loope
fldl
pushf
jne
sub
cmp
mul
xchg
test
mov
jle
loopne
adc
rcrl
or
cmp
mov
popf
data16
enter
and
lcall
pop
pushf
out
jnp
inc
cmc
jae
popf
imul
jne
and
test
scas
icebp
push
push
int3
repz
add
popf
aad
shr
jne
ljmp
pusha
test
repnz
in
sbb
ror
lcall
outsb
mov
xchg
nop
aad
popf
mov
pop
push
andl
pop
inc
mov
arpl
cmpsl
jb
and
jecxz
ss
xchg
dec
mov
jmp
sbb
pop
cld
mov
not
sub
call
loopne
and
or
mov
jo
dec
sarl
jl
inc
sub
dec
mov
in
mov
sarb
xchg
bound
icebp
mov
fs
or
mov
iret
mov
jns
pop
sbb
jl
fistpll
cs
xor
mov
push
and
dec
inc
sub
nop
cld
adc
sub
mov
fmuls
xchg
mov
pop
sub
push
and
pop
out
jmp
mov
push
xchg
rorl
add
sub
dec
lea
in
je
and
mov
jg
mov
pop
shlb
mov
jp
fidivl
je
test
cwtl
pop
mov
addr16
jne
xor
mov
sti
push
leave
xchg
jge
ja
xchg
mov
dec
mov
loop
inc
mov
fcomps
lods
mov
mov
iret
pusha
adc
popf
inc
das
sarb
std
and
pop
sbb
je
lock
adc
sub
xchg
test
dec
fxch
movl
sbb
sub
mov
mov
mov
sti
mov
inc
jg
add
jno
dec
popa
fcomps
aam
xchg
repnz
cmp
inc
aas
leave
mov
in
enter
loopne
loop
jns
jb
xchg
dec
pop
or
push
xchg
or
push
add
pop
in
sti
fsubl
ss
cs
mov
pop
xor
inc
loopne
xchg
pop
push
mov
insb
add
push
or
subb
cmp
idiv
fwait
adc
cli
sub
mov
add
daa
pushw
jg
ja
cmp
jl
or
mov
sub
loop
das
inc
out
pop
mov
cmp
stos
pushf
jp
sbb
fdivrs
movsl
push
mov
sub
rolb
or
inc
fdivl
xor
jne
repnz
aas
dec
cmp
divl
lds
jle
mov
dec
xchg
mov
stos
mov
in
imul
and
out
das
test
ficomps
mov
ficoml
in
mov
mov
fdivl
add
shll
add
sbb
test
ja
dec
out
mov
jg
jecxz
sahf
mov
aam
adc
cmpps
daa
jmp
and
shll
frstor
pop
imul
pop
mov
loopne
ss
xor
or
add
popf
jne
call
push
adc
dec
gs
cmpsb
sbb
into
cwtl
test
ret
mov
cltd
xchg
outsl
and
imul
stos
cmpsb
lcall
push
lods
dec
lahf
dec
pop
in
arpl
and
jbe
outsb
or
cmp
int
das
mov
mov
jae
dec
je
inc
inc
or
ds
dec
out
cld
xor
mov
or
outsb
mov
ljmp
gs
pop
xchg
push
les
dec
pop
jbe
jp
pop
dec
sbb
into
dec
arpl
sub
loopne
xchg
cs
leave
outsb
mov
icebp
xor
xchg
pop
stos
test
pop
ret
jns
push
aas
inc
mov
jno
cmp
ds
inc
xlat
dec
inc
out
mov
lds
sub
dec
jno
std
and
jae
push
xchg
pop
int3
popf
dec
pop
mov
sub
mov
mov
cmp
cmp
mov
mov
adc
and
sbb
call
js
bound
push
lods
js
movsl
int
pop
test
mov
lret
imul
cwtl
imul
dec
insl
pop
sbb
lahf
jb
in
ret
ret
sbb
mov
mov
in
cmp
sub
add
mov
mov
mov
std
dec
dec
xchg
mov
push
push
ds
je
jl
dec
jnp
and
push
mov
ret
fildl
pop
xor
mov
fnstcw
mull
cmpsb
mov
std
mov
xchg
stos
and
aaa
faddl
or
mov
aam
clc
shrl
xor
dec
push
mov
pop
jle
sub
sub
cmp
sbb
sbb
mov
out
inc
adc
mov
jb
mov
xchg
enter
ror
push
out
int
cmpsl
scas
mov
and
dec
jns
sbbb
pop
aas
xchg
and
xlat
out
arpl
push
or
mov
pushf
sub
lock
in
pop
push
inc
mov
mov
adc
gs
in
std
jmp
call
imulb
push
sub
xor
dec
mov
mov
mov
ror
adc
mov
cmp
addr16
dec
xchg
xchg
inc
ret
aad
psubsw
scas
cmpl
dec
inc
jecxz
mov
hlt
ljmp
stos
adc
mov
or
ja
std
mov
pushf
scas
jecxz
pop
aaa
rcrl
dec
bound
adc
fbld
cmp
out
sub
and
mov
nop
mov
xor
addb
xlat
inc
pusha
add
xchg
mov
sahf
sub
mov
sti
fs
mov
mov
and
mov
mov
sbbb
xchg
mov
push
pushf
shlb
lods
arpl
mov
dec
add
sub
cmpsb
cmpsl
jno
leave
cli
pushf
or
xor
sarb
aam
xchg
outsl
std
int3
jno
dec
aas
pop
je
inc
mov
cmp
cmp
push
cmc
data16
shrl
add
rcr
adc
icebp
mov
dec
testl
insb
loop
add
mov
mov
sbb
cwtl
push
pusha
popf
xor
fcmovnu
mov
sti
inc
stc
jg
and
or
repz
bound
rorb
xchg
sbb
cmc
addr16
adc
outsl
roll
mov
sti
clc
aad
jmp
dec
dec
xorb
es
sarb
add
loop
push
or
xchg
jnp
imul
call
lods
adc
cs
stos
push
ljmp
mov
add
cmp
add
movsb
mov
sub
iret
jbe
cwtl
out
testb
jle
mov
cmp
imul
pop
stos
movsb
inc
incl
or
pop
decb
sbb
sarb
xor
pushf
rcll
xor
ds
push
mov
sarb
test
fisttps
mov
dec
add
out
mov
dec
jg
xchg
inc
inc
cmp
lea
lods
dec
leave
scas
in
cmc
or
lods
inc
sbb
sarl
iret
sub
sqrtps
popa
push
scas
pop
jl
cli
xlat
or
pushf
pushf
test
scas
add
add
int
sahf
mov
into
rcrl
das
lcall
hlt
orl
cmp
and
sti
lea
xchg
in
jge
rcll
mov
adc
sbb
adc
fs
push
aad
jne
mov
pop
fsubs
xchg
or
pop
aaa
adc
pop
sbb
pop
adcb
sahf
subb
out
shrl
pusha
mov
pusha
inc
js
mov
mov
fwait
pusha
mov
push
sub
sti
mov
jmp
fdivl
repnz
hlt
push
fcompl
movsl
add
and
loop
int3
mov
push
cmp
mov
sub
or
lods
mov
adc
inc
cmc
pushl
test
jmp
or
in
cmp
fsubrl
dec
cmp
dec
inc
fildl
mov
and
icebp
fyl2x
rcll
xchg
outsb
mov
movsl
sbb
push
mov
mov
ss
push
cmp
insb
xchg
jecxz
xor
inc
dec
repz
xchg
iret
jbe
xchg
or
sti
sub
xchg
xor
or
jle
or
dec
lods
mov
lock
mov
dec
and
clc
cmp
pop
mov
insb
mov
push
cmpsb
and
leave
or
pop
fcmovnbe
idivb
adc
mov
testb
cld
sbb
ds
xchg
arpl
jecxz
xchg
dec
daa
xchg
decb
jecxz
xchg
jbe
in
mov
cs
insb
cmpsl
movsl
xchg
je
sub
xor
out
filds
pop
stos
imul
pop
or
add
jge
and
fstps
fs
mov
mov
ss
sub
call
aad
mov
lods
dec
int
shrb
daa
ret
mov
and
xchg
fisttpl
lods
add
stos
divb
sub
ret
daa
push
pop
out
fcmovnu
ret
or
sub
push
dec
sub
mov
test
sub
cld
adc
pop
sbb
leave
outsb
add
rcl
ss
adc
adc
sbb
popa
mov
add
jno
or
jmp
ds
repnz
xchg
lods
fistpl
ds
subb
jmp
pop
loopne
ret
clc
int
dec
sub
outsb
push
mov
test
aam
test
add
shr
adc
sbb
arpl
ja
test
adc
dec
pop
lods
fisttpll
out
dec
repz
push
daa
mov
outsb
adc
enter
call
inc
lea
int3
cld
sub
mov
xor
push
js
imul
adc
cmp
jbe
lock
jle
mov
jg
add
pop
rorb
adc
cmp
and
insb
outsb
jb
sub
int
cmc
cmp
mov
outsb
cmp
out
shrl
xchg
xchg
sub
leave
inc
xchg
xchg
pop
pop
gs
test
adc
scas
push
push
inc
iret
in
mov
xor
test
rorb
add
sbb
test
cltd
pop
xchg
cmp
push
pop
adcb
add
lret
in
jns
dec
loopne
and
jnp
sbbl
ds
lock
repz
xchg
adc
dec
scas
push
ja
pop
lock
xchg
and
fwait
into
sub
scas
cld
inc
fnstcw
jb
mov
rclb
dec
lds
popa
cmc
fldt
sbb
dec
data16
nop
or
jnp
lahf
aad
mov
jg
xchg
fwait
stc
test
lods
mov
shrb
fnstcw
pop
jnp
xchg
dec
pop
into
adc
and
std
jns
jo
xor
mov
stos
pop
cmp
jb
shr
sbb
dec
hlt
hlt
sbb
lret
push
add
mov
jecxz
jnp
fcmove
aaa
push
fisubs
das
sbb
jge
jne
pop
ja
fiaddl
and
test
xor
je
pop
dec
jbe
lea
lahf
mov
bound
inc
ljmp
pop
mov
addr16
jg
push
movsb
and
sbb
sti
add
fsubrl
sub
ficomps
inc
lret
and
stos
push
test
xor
jmp
hlt
mov
ret
pop
arpl
stc
cmc
imul
pop
push
test
mov
xchg
xchg
dec
sub
cld
and
pop
in
cmp
push
push
or
jb
mov
mov
xlat
xchg
cmp
adc
xor
sti
push
arpl
cmovae
fstpl
jne
mov
add
pop
mov
pusha
pop
leave
movsb
cmp
xor
xchg
jecxz
pop
jne
lcall
jns
add
adc
inc
sub
fst
loope
call
jns
cmc
fldl
pop
mov
pop
outsl
in
mov
cld
and
stos
xor
scas
mov
clc
push
adcl
inc
lcall
addr16
orb
ds
sbb
cmpsb
imul
std
je
dec
int
repnz
mov
hlt
add
adc
xlat
data16
adc
outsl
insb
stos
shll
pop
jnp
bound
push
cs
pop
pop
in
dec
mov
dec
mov
jo
aaa
out
pop
subl
xchg
fisubs
sbbl
and
dec
adc
clc
push
jge
push
cmp
jge
ja
cmpsb
loop
out
and
xchg
push
push
cld
loopne
frstor
sti
into
mov
jle
add
inc
sti
je
lods
cld
stos
cmp
dec
cmp
adcl
imul
mov
xchg
sar
icebp
daa
cmp
icebp
dec
push
xor
push
inc
daa
out
mov
fs
out
jge
jo
and
fwait
adc
out
addb
adc
mov
pop
xchg
test
mov
push
in
fs
stos
push
jae
sub
push
mov
pop
cmpb
xor
xor
loopne
rolb
sbb
sub
mov
push
dec
add
mov
int
xor
cmpsl
push
cld
int3
rolb
xor
aad
xchg
pop
or
inc
fists
imul
or
dec
pop
jno
subps
push
cltd
sub
jns
push
push
std
repz
sbb
xchg
ds
jle
sub
mov
lods
fdivrs
pop
lret
scas
int3
cmc
cmp
mov
xor
jo
push
and
inc
inc
sub
and
loope
ss
test
cs
xchg
jae
sbb
out
mov
mov
push
pusha
bound
imul
and
shll
jae
push
inc
inc
adc
dec
js
sbbl
and
fisttpl
scas
in
dec
test
shlb
cmp
cli
mov
aaa
cs
cwtl
add
outsb
jecxz
add
call
sbb
pop
mov
incb
inc
cmp
fdivl
cltd
outsb
ret
mov
cmpsb
jmp
pop
rcrl
pop
jmp
dec
sbbl
xor
xor
loope
ret
push
xchg
dec
inc
cmc
inc
je
jg
push
ss
cmp
xor
jmp
call
rclb
ret
ret
inc
gs
push
sti
push
sbb
cmp
adc
jp
push
icebp
xlat
lahf
lods
jmp
mov
jge
mov
pop
outsb
addr16
sub
cltd
lods
xchg
sbb
push
xchg
sbb
fnsave
daa
and
lods
rclb
jo
xor
fsubl
jecxz
xor
jo
fs
mov
nop
lds
pop
sub
mov
add
aaa
dec
cmp
sbb
gs
mul
xchg
xchg
adc
test
insb
inc
bound
ljmp
or
mov
dec
movsl
mov
dec
scas
gs
cmp
ja
shlb
lret
jmp
bnd
adc
mov
and
ljmp
dec
out
stc
sub
loopne
rorl
lds
sub
std
inc
in
or
sbb
lock
dec
call
arpl
push
pop
lcall
iret
call
mov
push
addr16
jmp
jnp
dec
lock
add
cmc
out
cmp
notb
pop
imul
jmp
orb
jnp
cwtl
lock
xor
adc
cmp
and
push
sub
dec
xchg
and
push
cld
subb
loop
scas
mov
lods
pop
sbb
es
xchg
addr16
jbe
jbe
outsl
in
mov
inc
mov
lods
iret
in
or
and
mov
cmp
jae
outsl
cmp
das
xchg
cld
ret
cmp
mov
call
sub
mov
cmpsb
xor
lahf
xor
dec
mov
inc
fildl
or
mov
lds
push
int3
adc
dec
shl
xor
push
icebp
mulb
dec
mov
xchg
jp
hlt
nop
faddl
xchg
sub
ret
mov
cwtl
iret
add
push
inc
adc
cmp
add
xchg
das
adc
gs
cmp
mov
fwait
push
mov
sub
xchg
mov
sub
rorl
in
stos
ret
mov
adc
rclb
imul
imul
ja
out
arpl
add
xchg
xchg
shl
sar
shl
xor
mov
fstpl
push
mov
sub
and
les
scas
dec
arpl
adc
pop
inc
jmp
pop
pop
sti
leave
mov
mov
cmp
mov
jb
or
inc
dec
xor
sbb
xchg
out
xchg
xchg
mov
dec
dec
sub
mov
test
fldenv
call
mov
mov
pop
xchg
adc
add
push
mov
cs
bound
dec
loop
adc
jle
push
cld
shlb
or
loopne
ret
int
aas
fbld
daa
in
add
cmp
jg
xlat
addr16
mov
pop
inc
fidivrs
push
aam
lcall
movsb
in
pop
ja
movsl
mov
daa
sub
xor
inc
cltd
std
xor
mov
dec
xor
call
push
cltd
lret
sbb
fnsave
and
dec
lods
jne
dec
addr16
rol
push
in
xchg
xchg
push
into
mov
or
jle
out
and
js
pop
mov
sbb
lcall
in
ret
pop
arpl
shll
or
mov
xor
dec
pop
adc
mov
or
xchg
sub
dec
mov
pop
sarb
jmp
mov
int
mov
cmp
or
jns
jmp
jecxz
lahf
add
mov
pop
xchg
popf
cld
pop
push
pushf
pop
lcall
jo
loop
and
mov
adc
std
dec
or
fildll
xor
fucom
xchg
xor
adc
out
mov
cmp
jl
lret
pop
pop
sub
xor
dec
mov
xchg
mov
mov
add
xchg
in
pop
add
fistps
out
imul
mov
jbe
addr16
or
rcrl
pop
inc
mov
mov
adc
mov
xchg
cmp
ljmp
mov
fwait
or
jmp
arpl
nop
fimuls
shrb
dec
jo
loop
inc
inc
cmpb
push
inc
addr16
fwait
addr16
sub
rclb
sub
fisttpl
cli
adcb
jae
cli
fwait
pop
mov
add
inc
bound
swapgs
xchg
push
test
dec
mov
leave
iret
mov
mov
es
cmp
cmp
lcall
pop
jo
cmp
data16
add
push
fisubl
pop
cmp
cmp
movsb
insl
lods
xor
or
je
xchg
jbe
out
mov
inc
ljmp
cltd
pop
mov
lock
jecxz
loope
sub
sbb
rcll
lock
mov
mov
enter
mov
push
xchg
lock
sub
mov
jg
into
jmp
dec
dec
in
mov
test
mov
lcall
aad
xlat
xchg
inc
cmp
push
mov
push
test
movsl
mov
daa
dec
lahf
dec
sub
xor
aas
outsb
mov
fmull
sub
ficoml
or
or
out
lret
lea
imul
fildl
sbb
adc
js
push
push
movsl
sbb
sub
popf
mov
enter
sub
bound
imul
mov
dec
pop
add
pop
jmp
cmp
jg
adc
ror
push
in
and
mov
popf
loope
lcall
jno
testb
dec
insb
mov
and
add
fldt
sar
shrl
aas
dec
push
inc
sbb
lret
inc
jle
adc
mov
jmp
in
pop
mov
lea
mov
ljmp
aam
test
dec
inc
mov
test
shrl
pop
cmp
jno
jne
pusha
or
mov
push
rclb
hlt
pop
dec
lock
out
sub
cmp
lahf
cmp
fsts
inc
icebp
aaa
loopne
scas
aas
aam
cwtl
pop
shll
jo
and
popf
push
xorb
fistpl
xor
inc
ljmp
add
sub
xchg
jg
cmp
in
jb
jle
or
in
test
mov
outsb
mov
stos
pop
test
aad
out
push
movsb
xchg
pusha
push
sbb
fistps
outsl
pop
jl
xchg
imul
jge
sarl
and
lock
jae
push
mov
test
outsl
jno
cmp
or
ret
mov
dec
dec
arpl
loop
icebp
inc
jle
sbb
jle
and
mov
pushf
sahf
cmc
jp
testl
push
lea
loope
and
fucomi
stos
movsb
enter
sbb
ret
out
fimull
add
addb
mov
rol
out
dec
push
je
mov
or
fiadds
je
int3
cwtl
outsl
or
adc
push
imul
aas
xor
loop
fisubs
dec
aad
push
mov
inc
aam
fsub
ret
scas
jnp
adc
xchg
jge
lea
mov
jmp
jmp
popa
shll
dec
stc
fimull
jb
mov
out
jl
gs
dec
mov
repnz
dec
add
pop
fildll
jmp
das
push
lods
push
roll
jmp
stos
out
xor
fcompl
cltd
and
lds
mov
sbb
mov
lahf
pusha
mov
sbb
cs
sub
lea
pop
int3
pusha
movsb
test
jle
sahf
js
jl
adc
loope
dec
mov
test
mov
cltd
icebp
sub
inc
rolb
xor
fmulp
pop
pop
ja
pop
push
inc
movsb
sbb
sub
and
mov
sub
lods
sbb
xchg
imul
jae
sub
jbe
arpl
push
decb
lret
stos
ret
mov
out
jae
xchg
stos
imul
popl
mov
cmp
ret
push
inc
xor
push
into
jns
push
adc
pop
push
add
das
lea
mov
push
inc
xchg
pushf
dec
dec
loope
sub
jp
xchg
push
nop
jno
jmp
mov
sbb
jb
dec
push
jns
into
sti
push
lods
adc
sbb
add
aam
mov
mov
stc
sbb
dec
mov
inc
or
inc
add
fsubs
or
mov
adc
int
pop
scas
mov
mov
sub
mov
shr
inc
stos
mov
inc
push
push
je
sarl
pop
xlat
pop
test
aad
inc
outsb
in
add
les
inc
out
rcrb
cmp
cmpsb
daa
cli
mov
insb
int
mov
ds
gs
push
cs
dec
jo
lock
cmp
sub
lret
lcall
xchg
addl
lret
dec
mov
cwtl
push
imul
icebp
fldcw
fcompl
inc
push
adcl
jle
repnz
pop
or
pop
loope
aad
mov
mov
andnps
adc
dec
incl
pop
xchg
icebp
rorl
stos
add
lods
jno
leave
in
pushf
or
sub
ret
in
jmp
jae
shll
dec
push
cmpsb
add
sahf
roll
mov
push
adc
gs
aam
dec
in
add
xchg
test
jecxz
dec
outsb
xchg
popf
or
es
icebp
fs
lret
out
rcr
mov
outsb
fidivrs
addr16
mov
clc
repnz
int
xchg
out
xor
fs
push
ret
adc
mov
data16
add
int
jb
xor
mov
pop
arpl
dec
stos
inc
shl
lcall
xor
test
fs
pop
call
lods
mov
mov
sahf
lock
out
cli
jbe
mov
mov
sti
loopne
push
pop
das
cli
cmp
adc
push
rcrl
mov
sub
insl
repnz
mov
rcrl
push
inc
ds
cmc
sbb
in
call
jecxz
lret
inc
fisttpl
inc
nop
test
mov
push
jge
inc
push
push
mov
lahf
dec
push
and
lods
pop
inc
sub
pop
adc
jl
inc
aas
and
xchg
xorb
push
push
mov
mov
inc
das
pop
andl
je
push
sub
cld
fadd
mov
mov
mov
xchg
iret
fwait
sub
in
cmp
icebp
mov
xchg
test
add
das
push
sbb
int3
ret
pop
ss
jl
cmp
cmc
mov
lds
lods
daa
das
outsl
sahf
pusha
push
fistpl
xor
sub
cmc
xor
xchg
pop
out
ret
std
push
pop
xor
dec
scas
add
push
hlt
lret
aam
stc
or
negb
dec
sbb
mov
pop
pop
push
mov
lret
in
jmp
inc
and
repz
mov
dec
cmpsb
inc
insb
or
push
mov
adc
in
negl
mov
inc
mov
mov
ficompl
mov
jge
call
ss
cwtl
adc
outsb
cmp
ja
shlb
or
sub
pop
fmulp
int
dec
pop
cltd
rclb
mov
sbb
push
fwait
mov
or
mov
sbbl
push
lods
sbb
sbb
or
mov
xorb
dec
push
test
push
jbe
jbe
mov
push
xor
cld
push
push
mov
cmp
movsb
dec
or
pop
xchg
ljmp
mov
stos
add
sbb
push
push
test
lret
ljmp
cmp
stos
cmpsb
fbstp
bswap
arpl
scas
mov
push
mov
lcall
or
dec
cmp
sub
in
mov
addl
inc
movsb
mov
mov
sbb
xchg
push
xchg
mov
mov
inc
imul
stos
ja
out
jo
repnz
lahf
bound
xor
push
inc
xchg
shll
mov
outsl
jge
lock
ja
cwtl
pop
andl
push
add
jne
popf
loope
pusha
iret
xorl
add
push
jae
xlat
push
xchg
inc
push
xchg
adc
popf
lea
and
fcoml
mov
or
mov
add
outsb
cmp
and
scas
int3
adc
pop
sbb
mov
mov
imul
cmp
inc
lock
cwtl
test
and
push
addb
or
ds
mov
and
mov
xchg
xchg
fs
xlat
imul
scas
dec
test
jae
adc
mov
dec
jns
mov
cmpsl
movsl
in
movsb
sub
repz
xor
pop
loopne
sti
xchg
cltd
jge
stos
std
insb
sbb
int
mov
add
aam
and
add
jge
repnz
sub
mov
sahf
mov
add
xchg
in
jae
incb
ss
sbb
and
xchg
jae
add
pop
aaa
daa
out
push
add
add
mov
pop
push
mov
pop
je
or
cmp
mov
xchg
movsb
sbb
call
cs
jo
repnz
in
pushl
mov
jae
xor
sbbl
dec
ds
enter
scas
pop
rclb
dec
or
les
outsb
add
nop
test
pop
sbb
flds
iret
pop
ss
or
cmp
xor
xchg
in
xchg
int3
mov
or
lahf
push
add
cmc
mov
aad
ret
mov
cmp
in
sub
mov
push
xor
jnp
adc
fldcw
mov
push
movsb
insl
in
sub
jno
jl
int3
and
push
fdecstp
add
cld
jne
repnz
imul
dec
lcall
and
pop
jnp
and
sbbl
pop
cmp
jno
pop
and
mov
cmpsb
adc
add
in
out
or
cmc
mov
or
out
cs
je
add
pop
mulb
or
mov
divb
push
pop
jp
ljmp
lahf
std
push
js
cmp
mov
adcb
repnz
and
mov
jb
push
xor
sbb
sub
and
mov
cmp
daa
jmp
loope
pusha
loope
ret
sub
push
dec
jle
lcall
shr
gs
push
les
sub
mov
hlt
cmpsl
andl
stc
pop
mov
xchg
xchg
ss
inc
dec
ja
lret
stos
pop
cmp
jl
icebp
fistpll
adc
jbe
xchg
sbb
lock
mov
inc
push
jecxz
inc
std
push
loop
adc
sarl
jmp
pop
mov
cmpsl
mov
insl
mov
cmc
addr16
xchg
push
adc
lahf
fsts
dec
mov
fnsave
leave
loope
in
lcall
sbb
jb
pop
and
sti
inc
imul
ljmp
outsb
lea
lret
pop
adc
and
iret
add
pop
daa
cmp
push
adc
movsl
mov
stos
push
lcall
jmp
push
push
mov
lcall
inc
add
and
test
jge
scas
pop
xor
fwait
aas
test
aam
fisubl
mov
mov
add
add
jae
bound
call
std
and
adc
add
fldenv
or
cmp
push
mov
add
jp
sbb
inc
xchg
ds
enter
xor
cwtl
movsl
sub
lahf
loopne
cmp
or
xchg
and
sub
test
sahf
fcmovb
rcrb
bound
mov
imul
cmp
and
mov
pop
int3
ljmp
jo
sti
or
mov
jge
adc
ret
mov
cmpsl
and
iret
sbb
jmp
inc
adc
cmpsl
or
test
out
mov
das
rorl
lods
mov
xchg
sub
or
test
xor
enter
sbb
xchg
mov
xchg
shll
jno
xor
pusha
push
ljmp
cli
daa
push
add
lods
and
pop
mov
loop
jge
mov
mov
or
mov
add
xor
int
jnp
adc
fdivp
inc
mov
movsb
cs
adc
loopne
jne
mov
add
outsb
pop
inc
scas
xchg
popa
clc
push
jge
jecxz
add
xchg
add
dec
sti
jne
les
jmp
stos
jp
outsb
add
imul
ror
jo
int3
cwtl
rcrl
in
ss
pop
or
mov
cs
sti
inc
mov
adc
and
and
lret
ror
insl
mov
je
insb
mov
dec
jg
scas
hlt
gs
mov
mov
jns
cmc
dec
mov
and
mov
stos
movsl
scas
cs
addb
insb
xchg
or
dec
aas
in
xor
push
insl
flds
cmpsl
jb
out
in
add
cmp
and
fcoms
pop
int3
push
std
fldl
inc
cmp
jle
jecxz
pop
movsb
or
push
push
xchg
jecxz
mov
ret
jbe
jne
xor
int3
dec
out
icebp
push
inc
fnstcw
test
and
jmp
je
mov
out
add
fwait
pop
addr16
or
shll
push
gs
in
movsb
divps
mov
jg
bnd
daa
vmread
imul
lods
and
sbbl
sti
int3
push
loop
dec
scas
cmp
dec
and
or
rcl
setge
cwtl
xor
or
repz
jo
shl
push
out
mov
sub
fwait
lds
stc
or
sub
imul
pop
sbb
movsb
fidivs
sub
fldenv
push
and
fiadds
pop
pop
dec
shrb
test
mov
push
jo
into
aas
mov
and
cltd
mov
add
adc
out
push
mov
ficomps
jmp
arpl
loopne
adc
jp
and
popl
loop
pop
cmp
xor
sarb
or
jb
mov
call
push
inc
lods
inc
add
mov
xchg
rcl
mov
xor
out
cmpsl
bound
cli
or
pop
and
push
ljmp
test
in
add
inc
jmp
fsub
je
push
adc
scas
sbb
and
sarl
or
ret
xor
push
add
mov
jmp
adc
and
adc
inc
hlt
andl
xchg
insl
push
adcl
mov
into
adc
or
out
push
popf
cmp
push
cmp
mov
movsb
or
sahf
jno
add
ficoms
cmovnp
aad
push
imul
ret
fstpt
sub
push
dec
and
aaa
and
dec
pop
pop
repz
push
or
jb
push
lret
inc
stc
xchg
add
cmpsl
das
ss
xor
and
jmp
sub
and
jns
in
mov
mov
into
xchg
fwait
jo
pop
int
sahf
xor
shrb
loopne
jae
repz
aad
mov
arpl
push
mov
pop
jge
cld
pop
pop
mov
ljmp
dec
xchg
mov
mov
test
mov
adc
shrb
out
jns
adc
mov
sbb
xchg
mov
cmp
inc
sbb
adc
ljmp
ds
jp
jnp
xor
icebp
lret
sti
cmp
popf
cmp
imul
xor
in
lret
push
in
xchg
std
mov
mov
xorl
mov
sbb
sbb
shlb
mov
ret
dec
lret
fnsave
cmp
loope
cmp
inc
jne
subl
stos
mov
aaa
jns
jmp
mov
ret
negb
leave
add
test
out
shll
mov
push
cmc
fisttpl
mov
movsl
insb
das
sub
cs
cli
inc
jbe
inc
mov
shll
sbb
pop
or
stc
es
fmuls
fiaddl
insb
lcall
mov
dec
hlt
aas
adc
in
subb
mov
adc
mov
stc
test
neg
ret
test
pop
jns,pn
adc
cltd
dec
mov
jl
pusha
imul
mov
sub
outsb
inc
in
popf
loope
jge
push
repz
mov
xchg
jge
jne
movsl
dec
jecxz
inc
sbbl
push
inc
xchg
imul
arpl
mov
push
jbe
neg
jno
repnz
pop
sub
cmc
std
nop
jecxz
fwait
sti
arpl
and
and
and
mov
adc
jl
lock
push
push
cmp
mov
adc
movsb
inc
std
out
daa
int3
cmc
jmp
xorb
lds
cmpps
add
and
outsl
rcrl
loopne
enter
cmp
fcoms
mov
repz
push
adc
addr16
fisttpll
mov
adc
mov
and
rcll
adc
jl
jge
jmp
bound
mov
lock
adc
jmp
scas
mov
mov
sub
enter
repz
in
std
clc
mov
xlat
in
pusha
into
or
adc
jns
sbb
push
mov
jo
mov
and
push
add
fdivrl
test
or
into
inc
mov
xchg
lret
gs
or
mov
add
test
hlt
cltd
mov
daa
into
mov
adc
or
faddp
or
mov
pop
mov
aam
xor
sub
stos
xor
cmp
inc
int3
xor
cmp
loope
inc
jbe
ljmp
popa
lret
or
movsl
jns
mov
ret
xchg
push
mulb
mov
test
aas
movsb
xor
js
push
inc
out
aas
pop
sahf
hlt
lods
pop
add
or
lcall
adc
xchg
insl
and
push
stos
stc
int3
mov
std
pop
dec
adc
mov
in
aad
mov
add
inc
test
int
jl
mov
stos
jbe
push
inc
mov
xor
arpl
or
addr16
inc
dec
sub
loop
aaa
hlt
push
push
push
pop
xchg
push
xchg
sub
rcrl
imull
pop
ljmp
adc
ret
cmp
and
and
sbb
shll
loopne
lock
and
xchg
arpl
xor
loopne,pt
xor
inc
mov
push
cmpsl
add
sbb
cmpsl
imul
xchg
mov
sbb
add
jne,pt
mov
sub
mov
loopne
popf
test
stos
mov
enter
xchg
xchg
push
aaa
cmp
and
push
pop
dec
popa
fists
fs
data16
int3
data16
mov
dec
insb
fwait
jp
push
push
filds
jbe
test
mov
sbb
cli
repz
sbb
and
pop
pop
shlb
or
jmp
lea
adc
lret
inc
addb
cmp
lods
mov
cmp
dec
daa
lret
sub
or
in
nop
sbb
movsb
test
push
fisttpl
pop
or
pop
mov
mov
mov
pop
js
push
jge
imul
inc
jae
xchg
mov
arpl
push
push
inc
je
xor
jno
shrl
xor
inc
pop
inc
aam
pop
jecxz
xor
scas
ss
mov
mov
push
cmp
rorl
rcll
and
rcll
and
pop
inc
sub
insl
lsl
mov
pop
in
fidivs
out
xchg
or
cmpsl
loopne
mov
insb
stos
sub
xor
dec
mov
sub
pushl
scas
push
stc
push
je
adc
sub
inc
push
jns
fmulp
or
insl
mov
pop
push
lahf
test
aas
sbb
xchg
xchg
pushf
cltd
addr16
sbb
and
jg
mov
fisubrl
dec
jmp
mov
faddp
add
inc
outsl
push
lea
jne
pop
sahf
add
mov
pop
arpl
lods
and
jbe
fiaddl
sub
wrmsr
test
imul
mov
orl
pop
test
xchg
mov
std
sub
jle
inc
jne
jmp
stos
mov
mov
cwtl
adcl
cmp
sub
incb
std
in
arpl
cli
pusha
jno
das
sub
enter
repnz
jle,pn
in
arpl
stc
repnz
jp
lods
and
ficomps
cmp
outsb
ljmp
mov
jle
or
dec
xor
pop
fcoms
sbb
stos
inc
fmulp
xchg
add
outsb
mov
rcrl
test
jl
pop
ja
sub
push
ljmp
cmp
jbe
lea
arpl
mov
scas
test
jae
sbb
xchg
hlt
mov
es
ss
lret
push
mov
mov
aam
jne
nop
test
add
repnz
movsb
lret
xchg
clc
lea
pop
jns
mov
lds
pop
in
jo
xchg
sbb
in
ror
rcl
outsl
in
or
arpl
enter
push
loop
or
movsl
mov
or
mov
mov
in
call
or
cmp
sub
sub
mov
jmp
cmp
mov
leave
jo
ret
loope
jg
lea
adc
lods
popa
imul
push
data16
add
mov
mov
mov
std
cmp
shlb
xchg
inc
pop
push
cmp
clc
sub
aaa
mov
cs
shll
adc
call
pop
loope
ss
into
or
or
je
adc
fcomps
ljmp
test
and
sbb
cmp
sahf
into
add
mull
add
inc
lret
sbb
add
xor
xchg
subl
fstl
and
dec
sbb
or
add
xchg
jg
add
lods
cmp
ss
push
sbb
mov
or
ja
mov
or
push
imul
mov
aaa
jnp
fwait
sub
push
mov
jb
inc
imul
xchg
pop
fwait
sbb
movsl
in
add
inc
inc
out
xor
test
adc
adc
js
fwait
ss
add
fstl
add
test
divl
cmp
fistps
ret
jne
cli
ret
cmc
pop
push
je
pop
divb
mov
push
testb
mov
fcomps
test
popa
scas
add
test
outsl
mov
pop
aad
fsubl
popa
in
imul
mov
jne
int
subb
les
add
jo
fnstenv
or
call
idivb
jae
inc
sbb
mov
sbb
sub
das
js
jnp
add
fiadds
movsl
dec
daa
sbb
dec
and
push
pop
inc
fwait
pusha
mov
sahf
push
pop
jp
das
leave
testb
aaa
in
imul
clc
ret
xor
cmp
push
loopne
xchg
js
xchg
add
scas
pop
sub
mov
xchg
xchg
andl
lret
in
daa
xchg
mov
stc
test
sti
jns
or
lea
mov
jo
outsb
lcall
cmp
enter
sahf
sbb
stos
push
push
cmp
aam
pop
dec
sbb
pop
add
cmp
outsl
ljmp
pop
mov
cmpsb
loopne
ret
data16
fidivrs
push
xorl
jnp
adc
xor
push
sbb
int
mov
lcall
mov
push
push
push
jg
xchg
fimuls
in
mov
stos
je
test
pop
lahf
push
loopne
inc
sub
sub
mov
and
in
mov
ljmp
popa
fimuls
push
leave
inc
ja
sbb
aas
lods
and
scas
cli
add
jo
and
nop
push
out
dec
xchg
pop
es
jb
and
mull
imul
repnz
sahf
mov
push
mov
lcall
cmp
insl
rcll
cmp
sbb
ljmp
jno
xor
or
sub
jbe
jmp
jle
subb
das
and
mov
sub
sbb
cli
mov
mov
testb
cmp
push
inc
inc
imul
sub
lock
movsb
push
push
lret
mov
sbb
jecxz
test
and
insb
in
add
jmp
sbb
into
and
mov
js
jnp
mov
fcomip
mov
fwait
rcll
pop
test
or
ret
jmp
add
add
das
subb
jl
std
jne
es
jo
mov
ficoml
cwtl
jbe
rcrl
movzwl
sbb
xor
dec
cli
scas
cmpsb
mov
addr16
incb
jae
pushf
int
je
mov
mov
push
cld
sbb
adc
popa
sub
mov
fistps
dec
inc
mov
xchg
dec
sub
out
popa
add
xchg
test
sarb
and
fidivrl
sbb
push
mov
cld
sbb
xchg
xchg
pop
fisttps
int3
push
push
mov
sub
outsb
jp
sub
push
sbb
add
ja
adc
sti
cmp
cs
sahf
dec
stc
mov
jnp
mov
mov
and
dec
dec
sarb
add
insb
mov
xor
xor
push
fwait
pop
xchg
fnsave
aam
mov
filds
adc
movsl
mov
sbb
xor
les
adc
fcompl
jl
imul
pop
icebp
ret
push
enter
subb
mov
lret
inc
dec
cwtl
cli
movsb
fwait
insl
mov
push
or
mov
mov
push
dec
js
cmp
repz
aad
aam
popf
push
push
loop
and
popf
lock
in
pop
scas
fnstenv
lahf
lcall
sti
pop
enter
repz
sbb
fnstsw
pop
clc
jmp
call
mov
lods
jge
inc
inc
in
dec
add
mov
lret
iret
and
jno
insl
ds
arpl
pushf
imul
pop
scas
dec
add
testl
inc
insb
xlat
or
mov
jge
fs
rorl
xchg
arpl
insb
sbb
jae
and
sbb
push
jno
cmp
jge
xor
sbb
jg
cmp
mov
inc
mov
mov
sbb
sub
cmp
jo
bound
out
clc
scas
insl
jmp
push
fstpt
loop
fildll
push
mov
lock
jo
in
movsl
sub
jae
sbb
jle
xchg
jns
insl
add
testl
add
icebp
push
dec
dec
daa
subb
in
jo
outsb
lcall
jnp
stc
cld
mov
popf
push
jle
lcall
sbb
cmp
stos
mov
cmpsb
mov
mov
sub
insl
dec
inc
mov
lcall
sub
xor
mov
mov
pop
pop
sbb
sbb
xchg
and
stos
xchg
stc
dec
cmpsl
lret
fmull
mov
std
sbbl
mov
sub
push
dec
or
mov
daa
out
negb
call
mov
xchg
sarb
pushf
add
cmp
lods
push
mov
int
mov
xchg
repz
divl
out
cmp
pop
inc
xchg
pop
inc
cld
pushf
inc
addb
xchg
jns
call
fstps
jno
popa
mov
cs
inc
outsb
cmp
add
adcl
fisubrl
cld
inc
pop
aas
loop
xor
leave
subl
insl
aaa
sets
addr16
mov
test
adc
inc
inc
imul
cld
cmpsb
aas
scas
and
int
loopne
jl
and
addr16
cmpsl
mov
out
bound
push
or
add
imul
negb
xchg
sti
iret
xlat
mov
push
push
test
cltd
xorl
dec
sub
mov
ja
lock
dec
dec
xlat
ljmp
or
pop
ror
mov
jp
into
scas
adc
mov
xor
js
mov
cmpl
xor
jecxz
xlat
mov
xchg
cld
lcall
hlt
push
sbb
std
jecxz
roll
movb
imul
and
mov
inc
sbb
push
mov
out
dec
rclb
mov
lods
inc
sbb
bound
ret
sti
xchg
jnp
sbb
jne
pushf
cmp
jns
mov
jle
fimull
push
sbb
xchg
loopne
adc
psubsb
outsl
call
js
sti
adc
push
test
outsb
xlat
stos
mov
inc
push
dec
nop
mov
movsl
sub
and
sbb
int
hlt
pushf
fstps
adc
scas
lahf
and
xlat
lahf
pop
dec
dec
pop
out
xchg
mov
mov
mov
pop
mov
dec
fisttpl
add
fstp
stc
xor
mov
adc
dec
sub
inc
mov
fs
jg
pop
out
fistpll
push
jnp
adc
mov
mov
clc
dec
pop
sbb
mov
jecxz
in
shrl
xor
sbb
adc
mov
out
aad
fstl
or
mov
add
das
test
jle
enter
outsb
jbe
mov
fiadds
mov
mov
add
ja
fsubrl
or
or
pop
cld
ja
dec
daa
clc
outsl
xor
rolb
jl
ja
adc
cmpb
cmp
call
push
or
dec
in
addr16
scas
jns
lods
fdiv
sti
outsb
lods
pop
xlat
in
jecxz
sub
jecxz
xchg
cli
or
lods
stos
mov
push
pop
jne
and
xchg
dec
ret
aas
pop
xchg
loopew
popf
sbb
dec
ss
dec
adc
std
sub
jo
imul
pushl
pop
jbe
xchg
mov
push
dec
rcrb
ret
aaa
cli
sahf
add
or
int
std
pop
test
xor
ss
jo
pusha
sub
int3
add
jae
mov
iret
cs
cwtl
leave
xchg
arpl
cmp
mov
jno
and
ds
or
sbb
mov
iret
cmp
stc
inc
js
out
and
mov
jp
daa
jne
sub
call
repz
push
sarl
mov
fmull
ds
cmpsb
aaa
ljmp
popf
mov
imul
imul
push
xor
mov
xor
stos
hlt
push
call
lahf
sbb
jg
mov
xchg
xchg
mulb
mov
mov
outsb
movsb
cltd
out
mov
mov
mov
add
je
into
aas
sahf
jl
out
loopne
xor
ds
fsub
sti
or
subb
outsl
pop
imul
enter
push
stos
dec
jecxz
in
mov
pop
in
fidivs
adc
adc
mov
lahf
mov
fwait
cmpsb
sbb
fdivl
cmp
pusha
imul
add
xchg
orb
mov
pop
push
insl
mov
mov
push
and
mov
fdivrl
sub
icebp
in
add
lahf
cli
pop
cmpsl
pop
test
inc
in
cmpsb
add
or
push
push
or
data16
mov
test
add
xchg
or
push
jbe
jb
sti
aaa
arpl
and
jbe
mov
xor
add
pcmpeqb
fwait
jno
mov
push
sti
mov
push
add
cmp
ret
lahf
into
mov
jl
xchg
or
xor
rcrb
hlt
push
xchg
add
mov
xor
or
in
test
andl
or
addl
dec
loop
lods
add
ljmp
ret
mov
mov
int3
scas
scas
in
xchg
in
jno
popf
xchg
cld
lret
imul
inc
jbe
or
sub
mov
sub
xor
popf
mov
sbb
xchg
movsb
fidivs
daa
aad
dec
pop
outsb
or
adc
out
push
cwtl
xchg
inc
push
sub
jnp
cmp
imul
sub
push
jnp
dec
cld
pop
fistps
adc
mov
ja
push
stc
data16
dec
adc
mov
test
mov
jp
scas
xlat
test
nop
out
jmp
jno
sbb
pusha
adc
push
ss
leave
jge
pusha
popa
shll
addps
out
rorl
iret
and
out
push
fildl
and
dec
xchg
pop
pop
xchg
pop
cmpsb
inc
xchg
push
jecxz
std
xchg
xor
or
test
sbb
inc
pop
pop
test
add
pop
rcr
jmp
jnp
mov
das
fmulp
daa
sbb
ja
adc
push
and
mov
and
inc
mov
popf
fs
inc
xlat
mov
sarb
adc
pop
fcomps
icebp
das
push
out
jb
sbb
adc
jb
or
xlat
cmp
xor
add
sbbl
sbb
je
aad
push
lock
icebp
leave
mov
jo
notb
sti
shrb
cmp
pusha
adcb
push
jmp
mov
mov
hlt
mov
jge
cmpb
inc
jbe
xlat
mov
shl
adc
push
sub
and
cld
imul
hlt
imul
insb
dec
test
pop
pop
hlt
ret
pop
in
mov
cmp
lods
mov
sbb
xchg
xorl
dec
mov
shl
add
iret
fs
loope
cmp
xchg
imull
push
lcall
and
xor
mov
inc
push
mov
rolb
jnp
jne
mov
idiv
lret
fsubrs
movsl
loop
pop
xchg
jbe
pushf
or
cmp
sbb
in
cwtl
and
in
shll
cltd
lds
sbb
dec
dec
into
jmp
jge
fildll
inc
rcrb
jno
cmpsl
fnstenv
cmp
cmp
push
repz
mov
jno
mov
mov
adc
lods
xchg
push
mov
lret
lock
in
jno
push
pusha
adc
mov
insb
mov
jbe
or
stos
mov
rep
in
mov
mov
call
pop
push
jae
jo
xor
push
and
cmc
and
out
mov
out
push
lods
nop
mov
rcl
and
dec
mov
or
fxch
cltd
adc
xor
pop
sbb
dec
insb
mov
sub
push
sahf
jmp
mov
mov
imul
or
xor
lea
xor
xor
cmp
test
popa
outsb
xor
fadds
enter
aam
xor
jbe
cmpl
add
xor
mov
jl
data16
pop
inc
inc
shrb
stos
idivb
or
push
jecxz
inc
pop
cwtl
ficoms
and
sub
scas
icebp
cmpsl
sub
push
sbb
lcall
cli
cmpsl
push
les
sbb
sti
test
inc
stc
inc
out
xor
push
cmp
in
mov
mov
pop
push
aad
out
xor
out
movsl
xchg
adc
jg
or
mov
jge
cmp
inc
dec
dec
arpl
xor
in
push
pop
pop
test
sbb
jbe
and
clc
sub
push
lahf
lahf
xor
xchg
das
je
and
adc
stos
fldl
mov
loope
pop
dec
imul
pop
add
cmp
push
shrb
dec
push
cmp
and
sahf
pop
jae
xor
out
lock
in
jae
jp
outsb
lock
scas
jb
pop
shll
loope
enter
sbb
cmp
xchg
shrl
pop
repz
ret
int
bound
mov
jmp
movsl
ret
insl
jae
cmp
mov
lahf
push
add
mov
adc
test
mov
nop
lock
arpl
stos
into
mov
mov
imul
and
dec
add
in
xor
aas
sbb
mov
hlt
std
jne
insl
fstpt
mov
loopne
push
test
mov
add
or
or
xlat
xchg
pop
mov
fsubrs
xchg
inc
les
je
or
fiadds
and
and
test
push
pop
mov
mov
mov
mov
test
sub
inc
pop
cmp
cmp
test
cli
jae
jbe
sysenter
dec
mulb
xor
ljmp
or
ljmp
js
push
sbb
jne
jbe
mov
push
mov
mov
imul
je
insl
mov
pushf
jecxz
int
mov
or
or
pop
adcl
sbb
pop
mov
call
movsl
pop
pusha
in
mov
pop
bswap
test
mov
and
xor
xchg
sub
fldt
jge
popa
ljmp
adc
and
jg
push
mov
loopne
xor
adc
stc
ret
pop
and
sub
push
sbb
dec
xchg
daa
xchg
dec
dec
mov
jo
sub
xor
gs
sub
cli
pop
mov
ds
ficoms
jge
mov
xor
inc
out
pop
cmp
mov
add
add
xorb
dec
mov
or
mov
jo
jl
mov
pop
lahf
jp
out
outsl
test
out
mov
rclb
unpckhps
and
cmp
jle
sub
stc
pusha
pop
test
insl
fwait
sbb
cmp
inc
add
add
lcall
scas
movsb
mov
and
fists
add
pop
push
movsb
movl
and
roll
xchg
std
arpl
das
push
ja
aam
hlt
das
mov
jle
pusha
imulb
arpl
inc
aaa
jno
out
sbb
cmp
jecxz
in
ret
dec
xchg
imull
xor
mov
jns
imul
inc
inc
xchg
or
out
outsb
pop
pop
xchg
pop
sarb
xchg
inc
fwait
adc
mov
cmp
jnp
fwait
int
xor
push
subl
mov
pop
stc
fisttps
add
outsl
cmp
nop
mov
addr16
rcll
inc
lcall
rcll
sbb
dec
lret
test
push
cmp
out
cmp
jecxz
sbb
fnstcw
sub
sti
jno
mov
jo
jmp
out
gs
fistps
jmp
cmp
aam
fldcw
and
or
cmp
cmp
cmpsl
ljmp
fidivl
add
sub
addr16
or
cld
push
sub
jo
push
les
mov
adcb
testb
out
cmp
push
inc
lret
rcrb
insb
das
inc
inc
lea
cmpsb
mov
add
or
fstpt
mov
icebp
xchg
pop
test
adc
pop
call
imul
mov
xchg
sar
xchg
xchg
mov
mov
cmp
pop
loopne
jae
pop
inc
lcall
mov
push
mov
add
lret
sbbl
jno
iret
into
dec
das
mov
lods
shll
movntq
xor
cmp
repz
lds
sub
bound
pop
repnz
pushf
cmp
les
pop
iret
movsl
jecxz
inc
iret
xor
pop
jnp
and
mov
xchg
pop
xchg
out
sti
mov
js
sbb
pusha
adc
sahf
data16
ds
mov
sub
addl
divb
cmc
rcrb
mov
cmpsb
out
adc
test
out
add
fidivs
in
push
jb
sub
arpl
inc
mov
mov
adc
ret
xchg
pop
fcmovnbe
nop
cmovge
or
outsb
xchg
xor
aam
adc
inc
jge
push
sub
loope
pop
int3
outsb
cs
push
adc
adc
cltd
cmc
push
mov
jp
das
pop
fcoms
aam
jnp
lock
mov
xor
or
idiv
cmc
clc
mov
xchg
lods
add
mov
and
out
sub
es
fcmovne
pand
dec
pop
mov
pop
dec
and
int3
lret
lcallw
rol
jge
and
stos
add
loope
inc
not
jbe
fcmove
cmp
outsl
mov
or
jbe
mov
cmp
pusha
push
cmp
sti
hlt
push
jb
cmp
stos
out
mov
mov
insb
and
lock
mov
shll
cli
cs
jae
push
dec
mov
jl
inc
or
xor
rcrl
in
mov
cmp
xor
adc
insl
and
dec
int3
push
xchg
outsl
or
push
mov
mov
or
mov
mov
rclb
adc
js
les
cld
nop
enter
and
sbb
add
jg,pt
test
pop
out
mov
les
xchg
jo
test
push
inc
rcrl
test
mov
xor
int
sub
stos
data16
mov
cmpps
rolb
es
adc
sahf
pop
push
jle
sub
sub
cmp
aam
sbb
rcll
pop
stos
stc
dec
xor
stos
iret
mov
mov
bound
xor
xlat
std
rol
and
jecxz
add
sbb
xor
pusha
add
inc
push
popa
stc
xchg
inc
adc
and
fbstp
jae
insb
pop
int3
aad
or
add
inc
dec
add
data16
xor
and
cmp
mov
fsubrs
mul
jp
and
push
and
test
add
mov
out
mov
nop
fcmovb
sar
mov
scas
dec
dec
test
arpl
insb
cmc
jae
sbb
or
movsb
in
jmp
out
loopne
fstl
in
xchg
scas
lock
int
xchg
rep
frstor
mov
add
pop
xchg
sbb
push
or
jbe
xchg
or
pop
popl
shl
or
adc
testl
addr16
mulb
ja
and
mov
outsb
push
lods
jmp
mov
add
dec
pop
fwait
dec
push
sbb
int
cltd
mov
or
pop
xchg
dec
mov
pop
sbb
push
or
dec
rcll
add
mov
jne
pop
xchg
mov
cmc
pusha
pop
enter
lds
into
jae
lret
rcll
xchg
fs
subl
adc
out
pop
inc
lcall
je
jle
cmpsl
xor
inc
dec
sub
sbbb
xlat
mov
jb
mov
mov
js
cli
test
adc
test
bound
popf
inc
out
mov
cmp
shlb
int
jb
push
push
mov
xor
mov
mov
ret
arpl
xor
jmp
mov
jmp
lret
xchg
xchg
out
lea
pop
sub
movsl
inc
mov
or
call
sub
scas
ss
out
inc
int3
push
jecxz
add
or
jne
pop
cmp
lock
subl
sub
mov
sbb
test
fbld
imul
jecxz
mov
std
ljmp
dec
jecxz
mov
fcoms
movsb
push
sarl
imul
std
adc
or
mov
lock
push
leave
add
ret
js
push
jno
das
ret
out
enter
pop
pop
dec
cmpsl
int
jmp
push
popa
mov
sahf
cwtl
mov
dec
mov
ret
or
and
enter
repz
add
jg
jno
mov
mov
cmp
dec
jl
add
xchg
or
js
out
lcall
dec
mov
dec
pop
or
daa
repnz
cs
mov
and
mov
lsl
je
inc
xor
pop
sub
pop
bound
mov
mov
test
cmp
rorl
sbb
adc
mov
adc
rcrl
stos
cmpsb
andl
cmp
add
sbb
or
inc
not
xor
lret
clc
das
dec
std
jb
scas
mov
jge
lcall
xchg
out
mov
ret
hlt
pop
and
lea
jne
cmp
ret
ror
mov
push
add
lret
mov
or
movsb
xchg
pop
bound
outsl
mov
adc
repnz
cwtl
out
jb
push
mov
aad
fwait
push
mov
inc
movsb
cmpl
addr16
les
mov
cmpsb
pop
cmp
andl
and
sbb
in
add
pop
push
dec
xchg
pop
mov
xchg
shl
jle
sahf
je
lret
push
imul
adc
mov
std
pop
repz
int3
dec
xor
xor
iret
jecxz
jle
pusha
icebp
pop
mov
fbstp
repz
into
clc
test
pop
daa
mov
fs
rcll
jge
movsl
adc
test
pop
and
cmp
cwtl
xchg
mov
fnstcw
int3
sahf
dec
sub
inc
push
stc
mov
adc
sbb
add
fadds
lods
push
xlat
sub
jecxz
ret
nop
out
cmp
push
xor
add
mov
xchg
dec
aad
scas
cmp
je
jecxz
jo
dec
mov
cmp
pop
out
pusha
push
push
adcl
and
shrb
test
push
jno
xor
sub
jns
sbb
sbb
cmp
add
xchg
jmp
push
mov
outsb
mov
or
cmc
shl
cltd
cli
pop
idivb
lcall
daa
cwtl
loope
push
aad
cld
xchg
cs
and
mov
xchg
push
mov
into
add
fsubs
mov
cmp
out
in
and
cwtl
movsl
mov
mov
bound
ljmp
lock
stos
add
repz
lahf
mov
or
incb
mov
dec
mov
dec
xor
jmp
or
arpl
mov
repz
mov
push
mov
scas
lahf
lods
dec
daa
bound
in
pushf
jbe
sti
dec
add
fs
cmp
out
ds
inc
mov
test
jo
lret
in
bound
mov
sbb
stc
mov
icebp
mov
les
scas
pop
and
jp
add
dec
pop
sahf
push
mov
mov
cli
adc
dec
repnz
in
xchg
dec
push
int3
outsl
insl
push
test
cltd
sbb
push
push
pushf
sbbl
repz
mov
mov
push
cmp
inc
stc
cli
aam
and
insb
enter
rcl
xchg
mov
xor
xchg
enter
arpl
pushf
xchg
aam
mov
adc
jnp
arpl
inc
inc
sahf
cli
movsb
xchg
fisubrs
mov
rolb
xchg
ret
cltd
gs
push
subb
cmp
test
fsubl
push
jge
inc
inc
and
pop
add
frstor
sub
cmp
adc
cli
mov
inc
xchg
ss
lods
cmp
paddb
cmp
pop
add
adc
imul
xor
aaa
loopne
popa
push
mov
bound
repnz
int3
xchg
scas
or
and
mov
xlat
mov
jae
and
lahf
jle
pop
inc
sub
or
shlb
outsb
sarb
push
cmp
inc
pop
out
mov
fcoms
test
cmpsb
add
mov
xchg
ret
loopne
xor
daa
jle
and
sub
jb
addr16
xchg
mov
sahf
adc
sub
iret
sub
jmp
mov
jmp
push
outsl
les
or
dec
adc
jnp
fmul
mov
or
mov
shrl
mov
test
out
sbb
sbb
jl
cs
push
mov
mov
adc
ljmp
mov
rcll
jne
and
sub
pop
jmp
pop
pop
addr16
leave
out
pop
push
sbb
dec
and
notl
jge
and
and
jg
mov
cmpsl
repz
outsb
dec
cmpsl
mov
dec
and
mov
mov
mov
sarb
pop
aas
xchg
cmp
pop
add
out
xchg
int
insl
xlat
dec
mov
pop
push
lods
add
adc
adc
les
inc
pushf
clc
inc
aaa
sub
orb
jne
movsl
leave
test
mov
mov
mov
movsb
jae
add
and
inc
lahf
mov
ffree
lea
loopne
sub
mov
subb
pop
addb
nop
xchg
cmpsb
seto
scas
mov
sub
test
cmp
xchg
andl
xlat
add
imul
mov
jb
scas
loop
adc
fs
or
xchg
dec
in
cmp
imul
xchg
xchg
scas
lret
push
pushf
xchg
push
clc
add
or
sub
cmp
cmp
rol
mov
and
xor
mov
pusha
imul
loop
pop
xor
xor
cmc
xlat
scas
push
es
mov
loopne
lods
adcb
stos
mov
js
sub
push
popf
insb
rolb
xor
cmpsb
imul
jne
ret
popf
push
idivl
outsb
inc
test
loop
cld
sub
js
pop
or
push
mov
dec
cld
pop
test
jecxz
icebp
mov
repnz
mov
frstor
cltd
mov
test
fstpl
sub
and
mov
lahf
clc
jo
jo
movsb
cmp
mov
mov
pop
jne
add
push
or
arpl
scas
out
inc
insl
pop
sub
jbe
sbb
xor
inc
mov
fcomi
loope
scas
xchg
gs
pop
ret
pusha
add
je
stos
xor
js
mov
mov
xchg
ja
mov
ds
pop
out
xor
jae
inc
shlb
mov
sub
ds
sbb
das
pop
outsb
daa
and
and
or
sub
pop
pop
test
or
fildll
clc
inc
cmp
and
call
sub
jg
pop
inc
fidivrs
sahf
inc
push
push
sub
cmpl
sub
or
inc
pop
bound
or
and
ret
mov
jo
repz
pop
imul
push
std
lcall
push
repnz
ljmp
data16
incl
pop
mov
insb
jp
pop
push
js
leave
in
dec
push
cmp
or
sub
inc
test
and
sub
aaa
imul
push
cwtl
jae
or
out
mov
adc
cmpsb
in
inc
push
scas
dec
jns
adc
pushf
js
mov
sbb
push
add
adc
sti
fs
ret
lcall
ja
xchg
push
jns
insb
repnz
xor
or
imul
mov
adc
sub
mov
stos
mov
jae
es
and
mov
jmp
cmc
dec
aam
cmp
mov
idivb
mov
pusha
lea
push
std
jge
data16
sbb
stos
cmp
out
sbb
pop
and
cs
popa
out
insb
push
push
sub
jae
ficoml
fwait
addr16
jmp
add
pop
push
cmpsl
imul
out
cmp
add
sub
adcl
fwait
insl
das
jnp
mov
xchg
or
mov
push
in
pop
push
add
clc
and
lds
repnz
pusha
cmp
inc
and
push
arpl
and
add
push
adc
nop
xchg
scas
call
cmp
fistps
cld
aam
cwtl
inc
sbb
jmp
add
mov
scas
es
and
jns
mov
push
fldenv
mov
adc
push
hlt
adc
nop
ret
jo
xchg
in
shlb
inc
stos
test
mov
jge
jg
jecxz
jge
loop
push
xchg
xor
push
lahf
mov
call
jmp
filds
mov
fisttpll
repnz
cld
orl
mov
movsl
test
cwtl
xchg
fimull
stc
jbe
scas
pop
mov
mov
xchg
in
adc
xor
xchg
cmp
addl
ret
cmp
pop
cwtl
jecxz
jns
cmp
aam
test
dec
jno
cli
iret
enter
lods
enter
jo
push
or
sbb
ret
cmp
jmp
clc
jmp
xor
sbb
dec
add
das
inc
icebp
pop
je
inc
daa
mov
push
jmp
pop
fwait
push
fsts
rcll
call
sub
scas
or
xchg
dec
add
or
inc
fsubl
bound
ds
out
rolb
or
scas
xchg
jb
jbe
dec
es
add
insb
cmp
dec
loopne
cld
shlb
mov
push
roll
cmp
mov
add
sbb
push
movsb
out
fiadds
mov
lret
mulb
in
mov
leave
imul
xor
mov
popa
sbb
cmpsl
testb
inc
data16
icebp
push
push
fsts
insl
dec
sbb
sub
adc
popf
jecxz
fsubrl
mov
imul
out
lret
xor
mov
jle
out
mov
pop
jno
outsl
fisttpll
pop
cmpsl
shll
mov
repnz
cwtl
sbb
dec
dec
ja
push
mov
out
mov
ret
int3
iret
mov
or
push
xor
jmp
call
xchg
xchg
inc
jg
aad
cmp
ficompl
pop
cmp
adc
popa
jl
rol
pop
sbb
push
loope
popf
aam
leave
sub
mov
or
dec
fdivrl
negl
fcmovbe
xchg
js
pop
inc
aaa
outsb
popl
fsubl
mov
jo
popa
shl
push
lea
pop
add
sub
mov
lea
sub
repz
and
mov
cmp
mov
or
sbb
shl
ret
das
pop
icebp
mov
sub
ljmp
pop
pushf
shl
pop
enter
xchg
adc
ja
icebp
inc
jo
aad
add
xchg
loopw
roll
test
ja
popl
cli
movsl
pop
push
sub
pop
into
and
mov
cmc
inc
mov
pop
adc
xchg
mov
jmp
and
mov
das
aaa
int3
call
add
cmc
std
psubusb
cmp
in
sbb
lods
mov
mov
je
aam
push
inc
clc
mov
dec
adc
dec
inc
cmp
bound
loopne
lock
cltd
mov
push
daa
push
sub
cmp
xchg
rolb
daa
push
mov
sbb
les
sbb
ss
test
push
adc
jg
jbe
dec
leave
and
cmpb
or
xchg
cmp
sub
cltd
shr
push
dec
xor
jle
pop
out
sbb
dec
mov
loopne
loope
jb
clc
lret
ljmp
jnp
or
rol
mov
or
repz
or
add
inc
lods
mov
mov
jbe
pop
ja
pop
fdivs
pop
js
loop
mov
sti
jge
sbb
cmp
push
js
incb
mov
mov
add
sbb
hlt
test
es
loop
cmc
mov
pop
xor
xor
je
mov
shll
cld
cmc
sbb
sbb
icebp
int3
aam
sbb
enter
cmp
jbe
faddl
mov
mov
cmpl
icebp
adc
push
pop
imul
outsl
pop
loopne
cwtl
js
aas
push
cltd
loopne
incl
fiaddl
and
stc
sub
push
div
les
lods
jge
fucomp
mov
rcrl
xchg
pop
ja
test
scas
sahf
sarl
jne
mov
xchg
mov
sub
add
aaa
insl
loope
add
push
adc
cmp
or
adc
pushf
je
popa
lds
push
adc
lret
or
nop
test
jae
mov
cmp
subb
jns
scas
or
divl
test
xor
fsts
mov
ret
cltd
test
sbb
addb
and
add
cmpsl
rcr
cs
pop
cli
pmulhuw
pop
push
call
js
inc
testl
dec
mov
es
inc
cltd
lods
xor
mov
ret
mov
hlt
adc
pop
mov
fmulp
push
pop
addr16
cmc
cmp
pop
and
or
sbb
les
mov
in
jge
inc
mov
jmp
inc
mov
adc
dec
movsl
bound
dec
outsb
pop
cltd
dec
pop
fs
jbe
nop
push
popa
or
sbb
out
dec
or
mov
sarb
outsl
mov
inc
mov
bound
push
andb
in
aas
cmp
fiaddl
stos
cmp
pop
out
push
hlt
xchg
mov
cmc
arpl
sti
stos
inc
adc
popfw
lock
mov
stc
test
sahf
push
mov
cmp
enter
mov
push
or
int
add
aaa
out
mov
pop
cmpsb
mov
mov
das
push
cs
or
push
cs
or
jmp
fmul
lods
out
push
mov
inc
mov
or
jb
fwait
xor
mov
imul
cmp
cli
sti
add
adc
in
lahf
mov
sti
movsl
test
pop
cmp
mov
or
rcr
xchg
outsb
ror
pop
test
popf
cmp
jmp
cs
fisttpl
subl
dec
xlat
mull
dec
inc
or
sbb
imul
pop
pop
arpl
lods
inc
mov
sbb
sub
aas
les
test
loope
xor
add
add
push
leave
stc
std
xor
lret
scas
ret
push
push
daa
mov
pop
adc
sub
and
ds
aaa
add
adc
arpl
sbb
into
and
cmc
dec
js
stos
cmp
sbb
mov
mov
rolb
shll
imul
jp
and
jmp
and
mov
push
jmp
ret
stos
push
int3
mov
inc
xchg
mov
call
add
and
fwait
dec
or
inc
sbb
sbb
pop
pop
xchg
mov
imul
dec
fs
sahf
xchg
out
test
incb
dec
fwait
sub
ds
sbb
ds
sub
sub
pop
nop
jb
insb
fisttpll
lcall
orl
xchg
sub
mov
sub
push
push
pop
not
pop
pushf
pop
call
scas
faddl
mov
or
add
xchg
dec
loopne
fistpl
cltd
and
adc
out
stc
mov
jg
mov
pop
push
cmp
stos
lret
out
shrl
in
mov
in
jmp
dec
sbb
xchg
add
cmp
psubsb
test
adc
jmp
pusha
xor
sahf
daa
jae
js
xor
out
xchg
aas
push
xorl
push
clc
mov
add
xchg
pop
es
adc
sbb
jecxz
pop
bound
or
mov
mov
pop
add
and
divl
push
push
cld
outsb
mov
mov
bound
cmp
mov
sub
mov
lret
pop
lcall
push
xchg
into
cltd
adc
mov
cmp
clc
jae
lea
pop
mov
pop
sti
sbb
adc
rcll
inc
cmp
sub
shlb
outsl
sbb
sbb
aam
jne
scas
mov
fcomps
orl
aad
out
dec
lods
test
dec
fwait
inc
imull
fnstcw
repz
push
pop
xorl
loope
out
bound
cld
xchg
and
inc
ljmp
out
mov
inc
cmpsl
ret
test
ss
nop
xchg
xchg
pop
push
stos
arpl
movsl
in
enter
mov
sti
ds
push
pop
pop
jbe
pop
or
cmp
test
test
adc
inc
scas
cmpl
push
mov
or
outsb
adc
jo
in
mov
cli
popf
movsl
pop
sub
and
out
xchg
or
outsb
push
ds
pop
pop
cwtl
aas
mov
mov
jne
and
push
inc
lahf
pop
ficompl
iret
sbb
pop
in
cld
sbb
pop
jp
aad
rclb
pop
out
mov
xchg
cmp
out
push
aad
cmp
xchg
adc
jp
or
push
dec
cltd
sub
in
lock
pop
ljmp
or
sub
aad
adc
pop
out
mov
mov
sbb
js
repz
cli
and
push
adc
adc
pop
test
fdivr
sbb
repz
xor
in
out
subb
push
arpl
push
inc
and
pop
call
nop
daa
mov
or
dec
inc
out
pop
mov
pop
xlat
lret
add
bound
add
cli
pop
push
dec
testb
or
nop
imul
mov
inc
xor
int3
cli
movq
adc
in
mov
or
test
imul
cmp
cwtl
je
imull
adcl
cmpsl
xor
outsl
out
xchg
adc
test
das
push
push
in
xchg
cltd
cmp
jae
popa
loopne
iret
into
sub
pusha
xchg
jl
adc
mov
and
inc
pop
fs
xchg
enter
out
push
and
repnz
sar
cmpsl
inc
pushf
jmp
les
in
sub
nop
insb
shll
lock
cltd
repnz
call
rcrl
jbe
sub
cli
pop
punpcklbw
xchg
jns
inc
cltd
xchg
pop
pop
and
movsb
push
in
lds
push
sar
inc
dec
insb
mov
adc
mov
dec
les
scas
dec
jp
jae
decl
xchg
xor
ret
popa
mov
inc
test
adc
test
jb
push
imul
push
pop
inc
test
call
xor
fbstp
adc
test
jmp
sub
push
push
sbb
pushf
add
xor
sbb
dec
out
les
scas
mov
into
in
out
repz
test
mov
xchg
mov
mov
sti
sub
pop
jno
pop
enter
push
insb
ds
int
cmpsl
das
pop
std
pop
gs
sbb
int3
and
xchg
cwtl
rorb
xchg
jg
data16
test
sbb
adc
dec
stc
mov
notl
push
xor
jecxz
imul
pusha
pop
out
insl
inc
aas
outsl
mov
push
rep
fsubs
stc
sahf
es
sbb
dec
test
bswap
insl
push
sbb
cmp
inc
cmpl
fstpl
cmp
mov
xchg
lret
imul
ror
inc
mov
jmp
lahf
dec
adc
lret
out
jns
clc
or
xor
ss
decl
and
mov
mov
dec
sbb
test
adc
mov
cwtl
or
leave
into
loopne
pop
punpckldq
jge
jl
insl
and
pop
xor
sub
mov
dec
shlb
and
push
add
cwtl
inc
movsb
js
cld
xor
cmc
js
lcall
jmp
push
daa
inc
imul
adc
inc
or
push
ja
dec
jmp
nop
jp
jae
pop
mov
lret
mov
ja
mov
mov
jmp
mov
mov
push
mov
xlat
lods
pop
pop
mov
cmp
rcrb
movsl
or
aas
pop
adc
push
pop
subb
fcomp
xchg
pop
mov
jl
lret
mov
jmp
int
inc
and
mov
inc
or
push
in
int
scas
aaa
jg
fidivs
int3
dec
dec
daa
cs
rcll
shlb
lahf
outsb
mov
jge
push
and
nopl
push
popf
aas
inc
call
fs
movsl
rolb
mov
sbb
inc
cmpsb
pushf
xchg
int
add
and
push
jne
add
xchg
int
rcrb
rcll
sub
mov
mov
add
sbb
jg
or
rolb
mov
pop
xchg
lret
jmp
inc
jg
iret
push
and
and
shll
mov
shl
aam
jle
and
or
pop
pminub
dec
push
les
cli
inc
jo
sub
inc
sarb
fwait
cli
pop
in
fstpt
cmpsl
bnd
leave
add
pop
jl
leave
sahf
cli
inc
std
out
push
xor
roll
mov
push
fs
push
jbe
daa
xchg
add
aas
jb
test
pmullw
xlat
lret
lea
adc
ret
imul
sub
xor
push
es
pop
test
popa
sbb
je
xlat
scas
rorl
test
and
cmp
popf
iret
jo
and
das
rcrb
and
xor
jle
and
inc
out
adcb
cs
xor
sub
in
cli
jl
ret
cli
dec
fisubs
loopne
sar
into
in
aas
ret
add
sub
test
mov
jle
inc
insb
mov
dec
ds
sbb
rorl
ficoml
popf
mov
inc
xchg
adc
int3
pop
push
xlat
fbstp
ja
movsb
jae
hlt
jae
lds
pop
jne
mov
stos
mov
adcl
popf
add
cltd
sbb
pop
repnz
stos
mov
pop
xchg
xor
cs
inc
lods
xor
cmp
dec
mov
and
repz
aaa
call
pop
jle
test
icebp
test
mov
cmp
lahf
jmp
scas
pop
bound
add
outsl
dec
xor
add
shll
cmp
push
inc
pop
or
mov
loope
ds
inc
jmp
test
outsb
sub
pop
jns
cmp
push
es
movsb
cs
pop
xor
jae
jl
adc
cld
push
pop
lock
push
pop
xchg
adc
xor
adc
mov
xor
push
les
das
or
lret
std
cwtl
xor
xchg
cld
xor
adc
cwtl
pushl
out
xlat
in
test
loopne
or
adc
lds
mov
daa
dec
nop
mov
pop
pop
int
lahf
pop
movsl
lret
lret
and
rorl
dec
fistpll
adc
dec
xor
push
push
push
fcom
dec
sbb
cmc
nop
fsub
aaa
fdiv
push
xchg
push
imul
adc
cmp
mov
jo
xchg
xchg
dec
adc
pusha
sub
inc
push
cmp
out
push
sub
and
outsb
mov
daa
stc
fldl
jno
mov
and
xor
xor
dec
outsl
add
jb
dec
jg
cld
fcmove
int
cli
jns
repnz
xchg
ret
sub
iret
sbb
add
cmpsl
xor
adc
out
cmpsb
scas
cmp
test
stc
arpl
xor
xor
push
lock
mov
add
xchg
les
in
lcall
xor
dec
mov
fsubs
sbb
pop
outsb
mov
inc
dec
shrl
xchg
adc
jbe
shlb
mov
aaa
pushw
imul
hlt
push
and
adc
pop
int
nop
adc
sahf
jbe
pop
mov
inc
pop
sti
addr16
nop
mov
outsb
aaa
mov
lcall
or
subl
add
or
adc
mov
out
fcom
sub
sbb
in
pop
into
aas
pop
mov
outsb
adc
dec
xchg
cld
scas
xlat
add
cmc
xchg
lcall
in
xchg
aas
and
add
jo
sub
das
mov
mov
jmp
ret
rclb
fildll
jl
je
int3
ret
repnz
nop
pusha
fidivl
jo
cmpsl
jmp
hlt
xor
sub
or
cmp
xchg
push
popf
jl
jb
outsl
fdivrl
mov
dec
xlat
push
pop
fisubs
sbbl
mov
inc
cs
negl
imul
cmp
std
xlat
gs
push
xchg
pop
loopne
jmp
loopne
pop
xchg
loopne
push
sti
push
mov
stos
ljmp
clc
in
jp
movsl
push
imull
add
cmp
pop
mov
adc
dec
mov
jecxz
shlb
dec
mov
test
xorl
sbb
pop
sbb
ret
dec
push
mov
push
mov
and
dec
mov
sub
arpl
mov
lods
addb
pop
xor
stc
dec
cmpsb
mov
sahf
insb
inc
push
call
lret
cmp
dec
nop
fs
cmpsb
cmpsb
push
and
sbb
or
in
sahf
in
fistpl
inc
inc
xor
mov
divl
call
stc
shl
mov
fcom
mulb
jp
rcll
rorl
push
mov
test
cld
lahf
sbb
push
repz
fdivrp
imul
outsl
je
js
cli
dec
mov
add
mov
adc
insl
mov
cmpsl
fcompl
in
icebp
jns
popf
xor
push
cmp
popa
out
sub
sbb
loop
lret
dec
mov
jno
sbb
gs
pushf
je
test
mov
cmp
sbb
mov
xchg
dec
jno
mov
das
aam
xchg
mov
jb
inc
out
xchg
pop
out
repz
ficomps
js
dec
pop
push
sub
add
cmp
mov
cmp
jbe
pop
inc
mov
arpl
lods
add
insl
lock
decl
iret
jae
jne
ljmp
lea
in
cmpsl
or
into
jo
divl
addr16
xchg
push
test
outsb
adc
nop
ret
and
sub
add
lret
adc
addr16
fists
lea
aam
add
mov
xchg
loope
pop
sbb
pop
roll
push
jnp
clc
inc
mov
test
or
adc
and
dec
popl
sbb
mov
aad
stos
mov
in
dec
jnp
inc
pop
or
mov
or
cmc
fisttpll
rcrb
shlb
push
setp
enter
and
je
jae
add
push
adc
jne
fcoml
call
hlt
out
imul
outsb
mov
imul
test
call
xor
pop
jno
pop
aad
lock
cmc
rep
aas
ret
scas
add
mov
fucomip
and
xor
inc
cmp
and
pushf
inc
lcall
xor
fsubrl
in
push
or
stos
xor
in
repnz
pushf
sbb
sbb
mov
rolb
jae
sub
outsb
dec
loope
imull
add
clc
pop
xlat
jae
fdivl
shll
add
stc
jbe
sbb
cmp
push
xor
mov
ret
pop
stos
pop
adc
push
pushl
fwait
cmovg
inc
and
cmp
adc
out
scas
mov
add
dec
outsb
dec
mov
test
cwtl
int
and
add
jbe
out
adc
sahf
out
sbb
daa
dec
lret
lret
adc
pop
les
div
mov
lahf
out
nop
movsl
cmp
sbb
push
inc
inc
outsb
cs
xlat
ss
ja
enter
push
clc
mov
rorb
ljmp
jg
push
out
mov
fistps
push
bound
xlat
inc
decb
pop
or
inc
inc
aaa
cltd
aad
xchg
xchg
and
dec
pop
inc
jne
pop
into
std
inc
imul
sub
jae
loopne
mov
int
outsb
mov
mov
mov
insb
sub
push
jp
out
daa
xchg
add
mov
int3
jbe
fwait
push
cmp
aad
sbb
pushf
int
push
dec
xlat
lea
out
lea
pop
loopne
roll
xchg
mov
pop
or
out
cltd
add
sbb
icebp
jle
mov
aaa
sub
popf
cmp
sbb
lock
lret
inc
cmp
fs
bswap
mov
lret
and
sbb
or
xchg
mov
gs
aaa
xor
dec
push
cld
fsubr
mov
push
aad
loop
mov
cwtl
add
shl
push
mov
mov
or
adc
xor
mov
xor
inc
scas
pop
enter
outsl
sbb
jle
xor
into
hlt
or
push
outsl
pop
cmp
jae
es
push
and
dec
fimuls
in
add
aas
inc
rclb
pop
pushf
fstpl
mov
jns
jle
and
movsb
cmp
pop
or
in
jbe
push
out
sbb
cmp
push
add
movsl
shll
jge
inc
fnstcw
pop
aas
add
daa
push
cs
ret
clc
mov
mov
out
outsb
dec
ret
adc
stos
mov
mov
or
popa
clc
xlat
mov
lret
repnz
cwtl
icebp
mov
ja
je
pusha
jmp
ds
mov
dec
jno
ds
inc
xchg
stos
xor
inc
movsl
dec
mov
in
xchg
inc
outsl
pop
sub
push
jne
push
loop
jnp
push
cmp
into
pop
jnp
hlt
mov
faddl
lahf
lea
int
sbb
sub
ficoml
pusha
cmp
std
cs
sub
sub
or
scas
inc
call
adc
jecxz
nop
mov
mov
jmp
push
scas
orl
xor
ljmp
insl
lods
dec
sub
scas
dec
pop
in
in
dec
and
out
ds
pop
movsl
dec
sub
mov
aam
lods
daa
mov
cs
daa
out
mov
aaa
out
test
push
mov
mov
insb
lock
sub
adc
int3
sbb
arpl
inc
es
notl
popf
fnstcw
add
jmp
pop
loope
add
and
vcvtsi2sdl
mov
sub
adc
cmp
test
jmp
rcrl
dec
mov
sahf
push
ljmp
jmp
insb
push
rorl
das
and
gs
mov
icebp
lret
mov
shr
mov
decb
inc
push
cmp
das
pop
repz
into
rclb
scas
or
cwtl
les
sub
es
sti
jmp
pop
in
xchg
cmp
push
aaa
xchg
fwait
inc
jp
aam
aas
rorb
out
in
sub
cmp
xchg
dec
cmpb
js
and
add
sub
add
punpckldq
movsl
pop
mov
pop
cmp
stos
push
mov
cmpsb
scas
xor
pop
into
mov
dec
dec
push
push
cwtl
xchg
or
xchg
pop
mov
mov
jae
cs
es
cmpsb
or
dec
adc
mov
push
sbb
je
pop
aas
dec
pop
xlat
dec
call
dec
add
adcb
ret
call
leave
sub
fwait
dec
subb
lret
dec
adc
and
clc
jmp
adc
out
xchg
lahf
jecxz
and
scas
and
dec
fdivr
ds
and
jns
loope
dec
lret
xor
pop
jnp
jle
out
icebp
jl
add
xchg
push
lods
test
adc
cmp
pushf
lea
push
inc
in
mov
inc
cli
mov
out
mov
shlb
cmpsl
or
addl
lret
add
mov
cmp
push
mov
cmc
dec
and
and
sub
jmp
sub
jno
dec
push
cli
add
into
xchg
in
fwait
jb
push
adc
push
mov
jg
xor
xor
mov
mov
ja
pop
mov
cmp
xchg
jno
mov
push
lock
push
shlb
inc
sbbb
and
sarb
outsl
shrl
dec
jo
nop
mov
xchg
sub
mov
xor
cmp
ficoms
movsl
push
or
enter
icebp
jmp
outsb
xor
push
xor
inc
jmp
cltd
dec
das
sbb
cmp
or
mov
clc
push
push
sub
cltd
and
test
dec
xchg
sbb
fcompl
bound
ret
aas
ds
fwait
enter
inc
cmp
pusha
lcall
mov
push
jb
pusha
arpl
mov
xor
into
jnp
stos
jmp
pop
sub
and
mov
push
pushf
stc
repnz
mov
outsb
jge
mov
negb
movsl
jno
add
mov
out
adc
push
xlat
stos
hlt
js
mov
cmp
mov
xchg
and
ljmp
test
int
jae
cmpsl
imul
or
imul
jle
subl
leave
js
adc
int3
dec
lods
test
push
in
jne
jae
jae
dec
jae
leave
mov
inc
adc
cmp
fdivr
pop
dec
xchg
push
mov
pop
push
arpl
sbb
add
lahf
mov
adc
loop
push
lods
insl
pop
bound
and
inc
pop
xor
daa
and
mov
mov
mov
mov
xchg
dec
ss
sarl
repz
faddl
fcoml
lea
testb
pop
push
fcomps
jecxz
adc
gs
std
mov
fisubl
cli
dec
rcrl
and
imul
aas
pop
dec
xchg
fsubrs
adc
sbb
sahf
push
mov
xor
mov
icebp
jmp
jns
imul
test
and
test
jb
mov
out
outsl
jb
jl
pop
bound
sarb
inc
xchg
xchg
not
aas
pop
mov
fcomps
out
fs
push
in
sbb
test
sub
sbb
mov
lret
rcl
jns
mov
mov
fdivrp
stos
std
pop
mov
leave
cmp
mov
daa
pusha
out
and
cmp
sarb
test
repnz
and
inc
stos
les
subl
jno
or
pushf
mov
lds
inc
jo
shrl
cmp
dec
notb
and
bound
jg
mov
cs
jle
mov
andl
decl
cmp
pop
mov
and
or
loopne
std
or
std
sahf
xchg
sbb
inc
jp
inc
bnd
dec
mov
lret
rorb
out
sbb
push
mov
nop
int
sbb
mov
xchg
test
in
insl
fcmovu
popf
or
insb
add
xchg
xor
setbe
daa
and
xchg
mov
mov
xchg
or
subl
gs
mov
dec
loop
inc
mov
lds
test
pop
fcmove
out
cmp
dec
js
mov
incl
ljmp
fs
clc
mov
or
ds
imul
sub
sbb
jo
mov
inc
cmp
jae
sbb
movsl
dec
fsubr
orb
push
pop
or
mov
push
arpl
push
or
outsl
jecxz
inc
push
movsb
mov
rcl
fadds
adcb
sbb
push
sub
jl
adc
int3
in
cmp
mov
insb
cmc
fsubrl
fmul
xor
xlat
mov
xor
addr16
fincstp
or
sbb
movsb
pop
add
call
adc
scas
arpl
ja
popf
into
sub
fnstenv
sbb
cmp
scas
imul
dec
xor
xor
xor
aaa
rclb
clc
int
jecxz
loop
adc
mov
xchg
mov
pop
sub
pop
and
mov
test
xchg
andb
enter
dec
outsl
push
in
aas
adc
fsts
inc
mov
cwtl
jmp
loop
xor
jp
mov
or
push
add
sbb
xchg
dec
popf
aas
mov
add
push
dec
arpl
pop
jp
push
outsl
inc
stc
jns
push
mov
mov
inc
pop
pop
mov
jb
cmpsb
lret
in
jbe
jmp
mov
or
jnp
mov
stos
loope
lahf
push
mov
fnsave
sbb
std
add
lock
aad
mov
rcll
mov
or
or
ljmp
cmp
iret
ret
aad
loopne
cmpsl
or
es
add
adc
mov
lock
mov
adcb
add
dec
cwtl
les
mov
adc
jg
test
outsb
hlt
pusha
jne
outsl
loopne
in
mov
add
adc
popa
jae
idiv
test
lcall
leave
inc
sbb
dec
dec
pop
shll
imulb
or
scas
test
mov
ljmp
xchg
jne
sub
or
lods
pop
push
mov
and
and
or
cmp
mov
nop
lea
lret
cmpsl
adc
push
pusha
jge
mov
repz
mov
cld
lock
insb
mov
and
mov
rol
mov
je
push
rclb
repz
jne
mov
dec
jb
mov
cld
pop
scas
outsl
jo
xor
das
xor
inc
mov
lahf
popa
sbb
fimuls
mov
jp
fwait
jno
and
psubsb
scas
in
mov
inc
push
in
clc
inc
cmp
ljmp
mov
mulb
push
cwtl
mov
jns
stc
out
js
shlb
out
inc
cmpb
fisttps
out
nop
in
sub
cmpsb
pop
in
jp
mov
jnp
leave
pop
ss
sbb
xor
ja
fbstp
xor
fucomip
or
fidivrl
jbe
xchg
lahf
mov
add
popa
es
jae
div
scas
cmc
jae
idivb
cltd
jp
ljmp
jno
enter
cmp
dec
pushf
inc
dec
insb
and
fidivrl
cmp
and
lahf
test
out
cmp
fisubrs
mov
rcll
add
test
daa
pop
andl
push
mov
pop
mov
jb
mov
sub
xlat
test
push
cmpsl
sub
out
scas
addr16
jle
mov
test
and
sbb
adc
out
and
dec
fisubrs
dec
pushf
jno
mov
adc
ficoml
mov
test
jo
testb
cmc
mov
jnp
clc
adc
xchg
lret
jp
and
pop
sbb
push
std
cmp
movsb
loope
fsts
cmp
mov
adc
mov
mov
out
lcall
je
sub
mov
or
aam
mov
xchg
jo
add
or
jmp
push
out
mov
fwait
pop
ret
lcall
ss
xchg
sti
pop
cld
mov
mov
mov
mov
into
add
enter
std
xlat
es
out
loop
and
push
std
mov
pop
sbb
mov
fwait
xor
in
sub
gs
sub
jecxz
lods
loopne
inc
ficoms
nop
js
gs
imul
adc
and
popa
hlt
test
popf
mov
cld
insl
mov
add
jle
pop
repz
xorl
addr16
popa
cltd
jecxz
add
xchg
bound
mov
stc
jmp
and
jecxz
jp
jmp
or
mov
shr
mov
shr
repnz
out
mov
leave
sub
or
inc
psrlw
out
test
inc
pushw
adc
sbb
mov
popa
hlt
jo
daa
stos
cmp
pop
push
cmpsl
adc
stc
push
addr16
pop
push
and
add
dec
test
stos
std
aam
mov
es
nop
add
mov
xchg
repnz
mov
xchg
pusha
addr16
dec
stos
aad
dec
pusha
cmp
mov
add
cs
enter
push
aaa
daa
cmpsb
xchg
outsb
sarb
in
inc
add
mov
pusha
scas
ja
iret
negb
pop
test
cmpsb
and
and
mov
adc
out
aaa
jo
and
xor
jne
scas
nop
cmc
mov
daa
insb
movsb
sub
inc
aad
cmp
dec
cmpsl
pop
fisttpl
mov
loop
in
loope
mov
and
ljmp
cltd
inc
int3
cmp
and
push
push
fcompl
inc
ss
hlt
inc
mov
pop
pop
inc
cld
ja
stos
xor
mov
cmp
jmp
aad
xor
mov
mov
sbb
insb
xchg
lods
test
loop
bound
jb
jno
aad
cmc
cwtl
loope
scas
dec
push
hlt
sti
pop
lret
cmp
and
push
pop
in
jb,pt
sbb
pushf
lcall
xchg
xlat
mov
xchg
push
jg
stos
push
leave
dec
or
cmpsl
test
std
lahf
sbb
xchg
mov
inc
mov
fnstenv
xorl
rol
mov
nop
mov
inc
mov
cwtl
inc
cmp
data16
push
mov
pop
lret
and
mov
stos
bound
pop
into
and
lock
mov
loopne
inc
fistpll
cmp
inc
dec
js
pop
aam
jle
jno
push
idiv
push
ja
loop
test
xchg
scas
das
push
xchg
shl
jecxz
and
mov
hlt
jo
jo
and
hlt
outsl
pushf
mov
stos
into
xor
and
and
scas
and
ljmp
js
xchg
in
paddsb
and
cld
shrb
jmp
pop
scas
fnsave
cmpb
inc
shll
cmp
aas
or
movsb
pusha
fistps
and
or
mov
icebp
mov
ficomps
mov
test
mov
pop
or
dec
pop
in
fisttpll
dec
lds
mov
xchg
dec
mov
mov
mov
push
sub
dec
into
loope
out
cmp
in
push
loop
pop
daa
mov
pop
xor
js
lret
idivl
push
cmp
ret
cmp
scas
pop
icebp
cmpsl
jle
jbe
jnp
sbb
xor
pop
fcoms
jl
mov
adc
adc
pop
in
in
lods
add
aam
sbb
and
mov
and
pop
dec
xchg
mov
inc
out
fucomip
push
adc
fwait
mov
pop
sarl
js
in
test
xor
push
roll
cmpsb
repz
arpl
cmpsb
lock
aam
inc
inc
int
cmp
dec
xor
add
adc
sahf
add
stc
mov
int
and
xchg
pop
icebp
dec
mov
loope
xchg
out
jbe
jae
dec
rcl
enter
push
mov
in
lock
mov
jno
xchg
cmc
and
ret
sbb
imul
mov
mov
xor
xchg
sbb
insb
pop
shlb
pop
lret
xlat
imul
pop
xchg
pop
aad
in
repz
lock
sti
adc
xchg
dec
mov
ret
sbb
vmovddup
push
dec
mov
mov
inc
cmc
test
cmp
add
lret
xchg
out
sub
sub
das
ret
xchg
jp
pop
test
movsb
rcrl
jp
mov
sub
sub
sbb
inc
shr
mov
mov
cmp
push
sahf
jmp
add
pop
fidivl
cmp
lock
sub
mov
mov
sub
mov
mov
leave
jecxz
adc
ljmp
lea
pop
push
cmp
and
dec
mov
scas
inc
dec
testl
inc
into
or
add
adc
inc
fisubrl
dec
adc
std
mulb
test
or
gs
std
fwait
pop
fcomp
add
cmp
fistpll
xorl
and
mov
js
imul
mov
mov
pop
push
std
ja
ljmp
mov
loopne
mov
ds
stos
dec
fidivs
cwtl
ds
insb
and
or
loop
cmp
ja
ss
loopne
and
cmp
or
jp
and
hlt
das
xchg
inc
xor
insb
dec
ljmp
xor
mov
push
stc
lahf
or
xchg
or
adc
jmp
push
insl
sbb
jb
xor
xor
and
sub
mov
push
iret
jg
jge
jmp
sub
sub
mov
popa
inc
imul
and
mov
mov
cmpsb
int3
inc
lea
sahf
out
mov
mov
into
shrb
ljmp
subb
sub
cltd
addr16
sub
mov
in
add
mov
mov
push
mov
jno
xor
aaa
mov
inc
sbb
in
test
stc
outsb
cwtl
jmp
pusha
aas
popf
les
fadd
xor
lret
xor
mov
rol
jmp
arpl
dec
aas
lock
push
and
mov
imul
cmpb
mov
sbb
outsl
lock
popa
in
or
mov
pop
dec
dec
cmp
dec
fsubrs
loope
fwait
scas
add
push
adc
xor
jne
scas
push
lds
xlat
pop
mov
clc
dec
inc
hlt
lods
int
shr
fs
mov
dec
xchg
popl
pop
inc
cmp
mov
push
jne
sub
popa
decb
sbb
push
out
scas
aam
dec
in
stos
push
into
loope
mov
xchg
xchg
scas
inc
xchg
mov
pop
push
lods
xor
push
dec
fildll
jg
inc
negb
pop
cltd
leave
dec
mov
sub
test
cmc
int3
gs
ljmp
push
jle
sbb
icebp
dec
jbe
push
sub
test
xchg
sub
jns
push
jmp
xor
jnp
stos
xchg
mov
cli
imul
outsb
sarl
and
je
and
xor
mov
notb
jge
mov
xchg
push
xor
jb
sbb
sbb
push
mov
cli
sub
add
xchg
pcmpeqb
es
and
test
jmp
orl
arpl
push
fcmovnbe
xlat
jno
xchg
pop
ja
ret
cmp
out
jge
mov
or
cmp
sbb
lea
ljmp
imul
loope
sbb
xor
push
mov
mov
inc
imul
mov
and
cmp
adc
xor
cli
jecxz
push
sbb
jmp
ficompl
imul
jecxz
jmp
sbb
loop
add
pop
jp
leave
dec
or
cmp
and
xor
popf
mov
sbb
cmp
sbb
jae
loop
add
loop
push
xchg
and
ljmp
dec
push
cmpsb
int3
stos
in
lea
call
aaa
shll
jne
imul
xor
outsl
xchg
in
dec
aam
roll
inc
dec
sub
in
or
lods
adcl
icebp
cmp
aad
jbe
cmp
mov
sahf
pushf
pop
loopne
cwtl
iret
push
xchg
mov
scas
bound
jp
push
loope
push
and
inc
add
jne
push
or
fnstsw
andb
daa
jno
xor
je
and
dec
mov
lret
mov
mov
pop
je
idivl
popa
test
fnsaves
dec
or
jbe
cmpsb
jle
pop
mov
lcall
mov
mov
pop
mov
jmp
push
xorb
xor
adc
in
cmpsl
es
mov
stos
popa
xor
arpl
popa
movsb
ud0
adc
xor
mov
adc
std
out
push
fsub
sub
test
mov
negl
pop
xlat
mov
jnp
ret
sub
sahf
ds
sub
xor
mov
cltd
testb
xchg
cld
inc
xor
xor
dec
cld
loopne
mov
mov
xor
lcall
pop
lea
imul
xchg
addb
sbb
in
adc
jecxz
adc
xchg
lret
aam
dec
mov
ss
pop
inc
enter
or
xorl
push
lret
lods
pop
lahf
ss
mov
cmp
inc
inc
inc
fstpl
adcl
push
xlat
cmp
clc
xchg
lods
rcrl
test
or
push
mov
sbb
inc
mov
in
lcall
filds
sbb
pop
mov
fwait
mov
xchg
pop
adc
movsl
bound
in
popa
std
add
ret
push
or
add
cmp
repz
test
test
rol
jle
jmp
and
jp
cs
cmpsl
cs
in
mov
daa
mov
sbb
jnp
addr16
scas
sub
stc
btr
loop
inc
pop
mov
in
inc
dec
cmp
mov
pusha
nop
fmuls
es
cmp
or
push
outsb
sbb
insb
js
pop
sarl
ja
data16
jae
scas
test
cltd
int
add
and
mov
sub
push
mov
mov
ret
rcll
enter
pop
or
inc
fsts
les
lahf
or
pop
test
push
jnp
push
and
scas
jnp
jb
test
pusha
in
push
lret
jecxz
test
sbb
mov
fwait
scas
out
pop
loopne
stos
mov
dec
stos
insb
stos
inc
xchg
gs
xchg
cwtl
xchg
cli
cmp
cmp
push
test
or
push
push
dec
loope
push
push
into
inc
mov
jg
test
add
and
push
sbb
scas
xor
test
sahf
cltd
xlat
jns
pop
pminsw
mov
popa
sbb
push
mov
sub
adc
test
ljmp
xor
sbb
push
aas
scas
inc
and
sub
mov
adc
sub
xlat
ret
and
sbb
sub
dec
scas
lods
xor
shrl
and
cld
cmp
pusha
cltd
imul
xchg
cmp
inc
fisttpll
pop
imul
jno
cmpsb
inc
les
and
push
lock
inc
repz
cmpsb
inc
xor
test
xor
ds
or
movsb
sub
inc
mov
mov
pop
jge
cmp
jo
cmp
ja
shll
sbb
lahf
mov
mov
in
dec
in
and
out
jmp
sbb
jp
xlat
lret
sar
jge
jmp
jecxz
cmpsb
dec
test
insb
lock
dec
std
jmp
fnstsw
insl
dec
fidivs
adc
pusha
push
mov
mov
das
cltd
lret
xchg
cmpsb
inc
sbb
and
repnz
jle
cmp
fwait
addr16
pop
mov
push
or
push
xchg
ljmp
push
sbb
dec
andl
xchg
sbbw
push
arpl
rcr
or
push
xor
push
add
int3
sbb
call
pop
test
iret
ja
negl
cli
test
int3
mov
push
popl
test
push
fstpt
xchg
jae
repnz
mov
sbb
adc
lods
xchg
pop
cmp
in
mov
dec
test
pusha
dec
jae
in
icebp
add
push
xlat
dec
and
loop
xor
push
or
adc
inc
cmpsb
or
mov
or
pop
sub
or
xchg
stc
jl
jge
hlt
lcall
inc
push
xchg
sbb
fwait
outsb
pop
xor
or
pop
mov
pop
pusha
dec
sbb
jp
xchg
cs
fstpl
in
sub
adc
hlt
ja
sub
ljmp
stc
jg
fcomip
loope
repnz
fs
dec
xchg
pop
and
popf
aas
fists
pop
push
mov
mov
ds
push
dec
aam
ja
mov
jo
imul
xchg
test
lods
es
mov
stc
fwait
xchg
int
pop
ret
pop
adc
cs
push
repz
push
dec
xor
insl
adc
add
sahf
fyl2xp1
dec
push
shr
bound
fs
jno
fdivrs
xor
out
pop
fidivl
cmp
ja
push
repz
mov
lea
or
lods
insl
xchg
loope
lods
ja
mov
das
xor
mov
cmp
add
pop
xchg
pop
and
andl
xor
add
cld
sbb
inc
push
xchg
leave
lock
ss
sbb
sbbb
lret
out
lds
dec
leave
pusha
push
cmp
int3
xchg
into
enter
roll
mov
cmp
xchg
iret
inc
add
jl
and
sub
cmpsb
mov
lds
repz
and
jp
addr16
cmpsl
cmpsb
cmp
lods
xchg
stc
stos
insl
bnd
lods
scas
add
mov
aam
mov
fstps
daa
push
pop
dec
add
mov
adc
imul
sbb
mov
xor
stc
stos
cmp
loop
movsb
ret
pop
cmp
jp
sub
mov
jno
es
cs
pop
dec
bound
mov
xor
lds
cmp
mov
call
mov
inc
and
movsl
in
xchg
stc
test
and
jne
enter
js
xchg
mov
sti
cltd
mov
jle
ja
pop
shrl
lds
mov
enter
repz
jo
shrl
cmc
push
add
cmpsl
push
in
mov
sbb
cwtl
dec
cld
xchg
xor
repnz
sbb
push
loopne
hlt
out
subl
repnz
push
daa
push
js
repnz
mov
pop
call
shll
shlb
xorl
loope
in
mov
mov
adc
movsb
aas
outsb
add
scas
out
ljmp
xor
int3
cmp
lret
mov
or
in
pusha
int3
xlat
fistl
xor
fmull
adc
iret
jg
ret
ljmp
cmp
in
pop
les
xlat
sahf
push
movsl
xchg
cmp
and
dec
out
add
xor
lods
aam
mov
ret
out
jp
xchg
enter
jge
scas
push
sti
xor
xlat
cmp
mov
insl
xchg
xchg
call
add
mov
sub
inc
popf
jae
aad
int3
cmp
fs
xchg
call
push
jg
lcall
incb
xchg
mov
push
orl
cli
scas
jno
dec
mov
sbb
jecxz
cmp
mov
xchg
rcl
test
mov
push
fcomps
jb
and
mov
jmp
jno
mov
testb
andl
pop
cmpsl
fnstsw
fnstcw
mov
pusha
lret
add
lret
jge
iret
pop
or
popf
and
fstl
in
dec
pushf
negl
push
sbb
sbb
stos
fsubrp
cld
scas
pop
cmpsl
or
adc
cmp
fdivs
lret
nop
lcall
loop
daa
push
mov
pusha
inc
addr16
pop
or
dec
jp
scas
dec
testb
iret
into
loope
into
arpl
push
inc
inc
fdivr
sbb
adc
loope
iret
inc
xchg
sbb
mov
adcb
push
lcall
ds
lea
ret
lcall
or
es
test
jo
std
xor
xor
aas
sbb
out
mov
in
add
in
sub
in
popa
cmp
push
xchg
sar
sub
push
fnsave
sub
cmpsb
hlt
mov
mov
cmpsb
into
aam
mov
add
inc
inc
mov
jo
pop
sbb
mov
insl
mov
nop
ret
or
mov
dec
pusha
pop
dec
or
cmp
mov
das
jp
fcompl
cmp
nop
fidivrl
dec
fincstp
mov
hlt
push
jo
adc
mov
lcall
adc
pop
dec
cmc
and
xchg
aad
es
testl
mov
sbb
ret
dec
pop
lds
jo
lods
or
lods
mov
or
das
iret
push
sbb
xor
jecxz
adcb
adc
aas
jle
add
lea
sub
xlat
fnstenv
cmpsl
lahf
sti
cwtl
xor
adc
xchg
pop
aaa
decl
mov
or
mov
pop
mov
sbb
imul
and
out
sahf
loopne
test
push
mov
mov
sbb
clc
fwait
test
jbe
adc
bound
pop
cli
incb
or
lahf
sbb
aaa
scas
push
sub
mov
dec
sahf
ja
add
sti
sub
insb
pop
aad
test
push
lods
faddp
and
in
loope
aam
int
mov
out
icebp
sub
jg
popf
pop
aam
dec
test
xchg
xchg
mov
jg
insb
orb
add
pushf
jo
push
repz
jge
lret
mov
jae
mov
aaa
je
scas
cld
jb
insl
sbb
stc
jl
leave
lcall
out
cmpsl
push
pop
mov
push
dec
lock
inc
mov
mov
rcrl
pop
lcall
mov
xchg
mov
xchg
add
and
movsb
sub
rcrl
jae
pop
js
cmpsb
jle
push
shlb
gs
mov
pop
fsts
push
cmc
aas
sbb
scas
cli
movsb
arpl
xchg
lret
orl
imul
adc
dec
int3
sbb
sbb
movsb
push
aad
mov
jmp
lods
dec
out
mov
jg
aaa
cmp
cmpsl
xor
xchg
mov
mov
mov
ror
out
mov
rorl
push
lods
je
lret
cmp
xchg
adc
add
xchg
inc
fmul
cmpsl
jae
das
mov
xor
lret
inc
aad
fsubrs
adc
cmc
xchg
test
out
sub
or
mov
mov
mov
in
xchg
in
push
xor
adc
cmp
stc
in
xor
and
add
addr16
dec
or
fsts
nop
inc
hlt
mov
scas
dec
sbb
push
jne
push
shl
jnp
mov
out
or
and
xor
iret
addr16
cmp
movsl
xlat
push
dec
sub
scas
sbb
mov
fs
pop
in
jle
les
mov
icebp
xchg
xor
test
les
out
scas
and
sub
sbb
add
dec
cmp
jae
sub
add
test
inc
jno
mov
cmpsl
lods
mov
lahf
push
mov
test
push
fcomps
std
xchg
andb
mov
shll
mov
xlat
fldl
push
into
lods
inc
jnp
filds
sbb
push
cmp
sbb
mov
dec
sbb
popa
repz
add
pop
repnz
sbb
ds
or
testb
mov
xor
call
adc
iret
fnsave
clc
test
inc
push
and
and
popf
sti
pop
fs
xor
outsb
arpl
sub
sbb
pop
fstl
jle
cli
pop
ud2
insl
fnstsw
push
jae
push
mov
cmp
inc
rcll
fmull
fnsave
sar
push
dec
jb
outsb
and
insb
push
sub
sub
push
jmp
xchg
adc
xchg
es
test
gs
int
mov
pop
xchg
rcll
int3
pop
out
cmc
fwait
mov
pop
mov
imul
cmp
loop
aad
xchg
icebp
mov
cmp
jg
aad
mov
mov
scas
inc
iret
into
adc
cmp
fldt
shl
jae
dec
aad
push
bound
mov
arpl
adc
cmp
mov
stos
push
add
xchg
mov
loopne
adc
sbbl
jmp
mov
insb
pop
fs
lahf
cmp
and
icebp
cmc
adc
imul
aad
daa
ljmp
inc
jne
or
jl
pop
and
pusha
xchg
mov
ret
test
inc
dec
ds
in
jnp
movsb
mov
jnp
mov
out
dec
inc
mov
daa
test
sub
mul
dec
call
and
adcb
inc
orb
or
pop
imulb
insb
pop
popa
pop
out
iret
mov
sbb
in
subl
out
adc
enter
aam
nop
negb
mov
pop
hlt
sarl
push
mov
xchg
sub
stos
rol
ja
sub
fs
fwait
mov
cmpsl
rorl
sub
jmp
inc
xchg
lds
mov
js
mov
lahf
popf
movsb
mov
aam
sbb
sbb
add
mov
lahf
add
lret
js
jnp
inc
mov
insl
jbe
stos
imul
mov
ljmp
mov
loopne
int
dec
data16
call
or
shll
lcall
mov
lcall
mov
div
mov
and
test
xor
dec
xor
jnp
pop
push
test
lods
rcr
rcrb
ds
shll
ret
fnstsw
cs
ljmp
hlt
loope
loop
mov
aaa
call
testl
xchg
sub
jne
test
xor
push
imul
les
stos
rol
mov
stos
inc
scas
fwait
popa
outsb
sahf
cli
cmp
xor
imul
inc
aam
out
out
cwtl
mov
fcmovnbe
lods
push
sub
insb
pop
shrb
aas
jle
lcall
push
xor
inc
nop
imull
dec
sahf
pop
xor
ja
mov
xchg
orb
push
adc
push
mov
out
cli
in
sbbl
cmpsb
push
or
popf
lock
mov
leave
daa
jl
repnz
cmp
push
fsubrl
dec
aam
mov
jmp
sbb
mov
or
or
mov
jmp
les
fiaddl
into
sbb
pushf
dec
cwtl
test
or
leave
sbb
push
sbb
mov
mov
sub
fisubrl
loopne
jbe
xchg
jb
sti
push
pop
iret
add
aam
push
push
loopne
push
mov
cmpsb
pop
cmp
fildll
clc
push
xchg
ljmp
push
inc
pop
icebp
in
dec
fnsave
cmp
cltd
dec
ja
lahf
jbe
pop
inc
jnp
sub
icebp
movsl
adc
test
sub
inc
dec
xchg
lea
enter
std
faddl
push
push
dec
xchg
sub
push
xlat
jno
push
lods
les
xchg
xchg
jne
pop
testb
mov
js
and
mov
rcr
incb
jl
push
inc
cld
cwtl
push
jne
sub
cmp
sbb
std
xchg
sub
dec
out
rclb
cmp
mov
rclb
int
adc
popa
fimuls
adc
int3
adc
pop
mov
outsl
add
jmp
mov
adcl
xchg
shlb
mov
pushf
jns
mov
sbb
pop
mov
adcl
fistpll
push
divl
mov
fstpl
push
sbb
cmpsl
mov
cmp
fbstp
add
fisttpl
movsl
and
sarl
cmp
or
stos
push
add
push
push
mov
cmpl
pop
dec
sbb
out
dec
xchg
mov
pop
sub
int
xchg
cmp
imul
mov
pop
aam
je
inc
jno
xor
lea
addb
mov
repnz
and
mov
push
cld
pop
dec
leave
and
es
pop
xchg
jmp
mov
mov
mov
insb
and
and
mov
icebp
enter
mov
cmp
and
pop
pop
adc
fidivrs
pop
add
shl
inc
pop
fistpll
pop
lahf
orps
rep
hlt
loope
ja
arpl
sbb
fmuls
das
dec
xchg
mov
clc
jae
jge
popf
fwait
scas
adc
nop
imul
xor
and
jbe
iret
outsl
fisubrs
mov
out
orb
push
sbb
cs
or
aam
mov
fcmovne
jge
inc
lahf
mov
add
or
sahf
adc
push
data16
xchg
sahf
inc
enter
ds
rcrl
repz
pop
out
arpl
push
in
call
dec
inc
mull
push
std
xchg
das
push
cmp
js
dec
aas
pop
xor
cmp
jmp
xchg
adc
data16
cmp
fmull
mov
cmp
test
mov
sub
dec
lret
mov
dec
aam
popf
in
push
cmpsb
inc
je
icebp
adc
xchg
cmp
xor
mov
push
das
nop
outsb
outsl
mov
sar
test
cld
push
xor
movsl
sbb
ret
sub
cmp
pushf
insb
sub
xor
xlat
xchg
dec
mov
inc
pop
xor
imul
mov
rclb
mov
icebp
and
sahf
fidivrs
mov
add
pop
pop
sub
aad
scas
mov
ret
mov
push
fwait
pushf
mov
fisttps
push
into
int3
mov
lds
sbb
stos
das
loope
inc
add
jmp
dec
movsl
test
cmpb
mov
mov
pop
sbb
adc
mov
fcmovbe
gs
fwait
and
in
repnz
scas
lods
movsb
mov
jns
dec
dec
dec
dec
mov
cltd
sub
mov
out
xchg
jo
push
push
ljmp
std
pop
test
lea
int
or
in
testl
pop
inc
xchg
out
pop
popa
jp
mov
mov
fs
cmpsb
popf
dec
xor
push
outsb
or
stos
fucom
cld
sbb
jne
pushf
adc
or
xchg
std
mov
fwait
dec
out
add
outsl
xchg
mov
andl
stc
xchg
jo
mov
xchg
adc
hlt
xor
adc
xchg
inc
add
lret
popa
imul
shlb
adcl
pop
movsl
or
pop
xchg
rcr
adc
jo
repz
pop
imul
jo
inc
data16
jo
ret
xchg
enter
jge
push
jns
popf
push
xlat
xchg
inc
out
and
gs
out
jmp
arpl
push
data16
in
jbe
xor
fiaddl
jns
iret
jno
repz
adc
je
arpl
and
in
adc
sub
inc
sti
adc
jmp
mov
ss
inc
inc
data16
mov
cmp
push
imull
xor
sub
insb
pushf
push
xor
mov
sbb
jnp
mov
cmp
mov
insb
jl
dec
adc
dec
adc
int
fstpl
adc
loop
bswap
popa
and
dec
fdivs
movsl
mov
loopne
insl
pop
sbb
sti
push
and
pop
sub
or
in
mov
sub
rorb
test
adc
repnz
pop
adc
and
ret
xchg
sar
adc
sarl
popa
lea
push
in
mov
sub
xorl
lret
push
aas
sub
jb
sbb
lods
adc
lds
push
cmpl
pusha
dec
jl
jae
sbb
notl
xchg
mov
sub
mov
mov
xchg
inc
sahf
mov
repnz
dec
aas
int3
dec
rorl
cmp
mov
sahf
jae
jmp
ss
cmc
pop
lods
test
dec
mov
lahf
jb
mov
data16
sub
insl
or
mov
adc
rol
mov
fwait
adc
add
outsb
inc
inc
sub
xor
xchg
sbb
fistps
loope
scas
add
jns
jl
pop
adc
fists
jae
test
out
pusha
std
shrb
das
xor
in
test
pop
mov
xchg
add
dec
cmpsl
jp
call
mov
test
call
insb
fnstenv
push
push
ror
mov
xor
jne
test
sub
xor
mov
push
cwtl
or
es
aaa
mov
push
pop
and
sub
testb
shlb
sub
arpl
push
mov
mov
dec
lods
popf
jno
sbb
xchg
or
jae
loopne
fsubs
test
adc
outsb
xchg
mov
inc
mov
mov
sub
xor
dec
or
sub
push
xor
movsb
cmp
jnp
sub
add
lods
and
pop
outsl
shll
dec
sub
push
cmpl
sub
popf
xor
test
std
mov
loope
and
push
jae
and
sahf
jl
xchg
imul
mov
mov
cmp
ret
daa
push
movsl
ljmp
cmp
pusha
test
bnd
cltd
test
pop
jg
adc
lea
dec
sub
fldl
push
ficomps
adc
jecxz
mov
and
mov
pop
insb
scas
fildl
lret
pop
and
sbb
pop
push
les
in
pop
add
pop
and
cmpsb
mov
test
adc
aam
movsl
cmp
jb
mov
xchg
ljmp
imul
daa
xchg
cmp
cwtl
xchg
fsubs
dec
cmp
jns
lea
xchg
mov
cltd
jae
clc
insl
xchg
fstl
dec
movsb
inc
js
das
jae
out
xor
pop
mov
xchg
or
jae
stos
bound
or
push
adc
push
repz
mov
mov
mov
movsl
cmp
lock
imul
dec
inc
mov
stos
in
cmp
fiaddl
iret
into
lds
jl
iret
fs
insl
push
int3
dec
sbbl
arpl
sar
mov
ret
out
mov
and
data16
pop
pop
dec
es
or
jl
mov
pop
mov
or
pop
enter
adc
push
incl
mov
jbe
outsb
loop
sbb
add
push
cmp
roll
imul
xor
inc
mov
add
push
mov
ret
jbe
dec
test
lcall
push
xchg
lcall
jg
pop
and
lahf
sub
fmuls
fidivrl
clc
add
in
ja
cmpsb
inc
push
ljmp
pop
jmp
sbb
jle
test
push
dec
sbb
arpl
mov
jmp
sbb
int
mov
fbstp
mov
adc
or
or
fiadds
mov
add
sub
xchg
les
fisttpl
cli
fistps
cli
xor
xchg
cs
sub
inc
cmpsl
mov
jmp
nop
and
push
out
insl
mov
sahf
xor
dec
fdivrs
or
push
je
dec
cmp
mov
cmp
pop
push
mov
cmc
and
adc
or
arpl
jae
movsb
frstors
pop
add
sub
push
ss
xor
sub
pop
movsb
jb
mov
rcrb
or
jge
xchg
repz
cltd
rolb
jae
leave
rcrb
outsb
out
mov
in
push
movsb
push
cmp
jecxz
rolb
int
sub
dec
xchg
das
xchg
jo
cmp
lock
mov
mov
icebp
movsb
push
aaa
leave
xchg
js
cmpsl
cmp
pop
mov
ljmp
mov
and
xchg
push
dec
clc
popa
jl
fistps
dec
xchg
mov
inc
inc
push
icebp
xor
or
ret
adc
cltd
das
dec
or
ret
shlb
push
mov
dec
test
rcr
fadds
inc
hlt
add
sbb
rcrl
imulb
lock
dec
xor
dec
xor
test
jp
fsubrl
test
jge
adc
ljmp
mov
pop
inc
sub
ret
sub
mov
in
addr16
stos
mov
movsb
ljmp
rclb
adc
push
cli
mov
ret
xor
sti
adc
jge
dec
xchg
add
or
jo
lock
mov
xchg
dec
jl
dec
gs
pop
push
xor
rcrb
pop
addr16
cmpsb
mulb
jl
test
mov
add
sbb
or
je
inc
cmc
outsl
or
mov
mov
jo
cwtl
add
arpl
shl
movsb
xchg
aas
cmpsb
add
xor
loopw
pop
inc
hlt
jae
xabort
cmp
fwait
inc
into
repnz
cmp
sbb
in
xor
lods
sub
or
add
sub
in
pop
pop
sbb
sbb
inc
dec
dec
in
xchg
adcl
scas
cmpsl
arpl
fs
pop
adc
loop
jecxz
xchg
iret
andb
lods
xor
pusha
ret
jbe
mov
push
xchg
ret
mov
outsl
daa
dec
fs
dec
mov
push
in
dec
xor
outsb
mov
out
pusha
addr16
gs
adc
ret
and
pop
jp
inc
btr
lods
arpl
popf
rcll
xor
addr16
popa
or
sub
rcrb
cmp
add
mov
cmpsl
pop
rcrl
movsl
adc
sub
arpl
dec
loopne
std
jo
dec
jo
inc
xchg
movsl
push
daa
jno
sbb
nop
ffree
sub
dec
insb
inc
cmpsb
jae
xchg
fst
roll
movsl
dec
aam
pop
in
dec
testl
mov
dec
shll
sub
xchg
cmp
jae
movb
mov
cmpsl
push
in
pop
lahf
mov
fbstp
repz
xchg
arpl
adc
mov
shl
push
and
xor
dec
shlb
test
push
add
fsubrl
mov
lahf
mov
xchg
jbe
sbb
mov
pop
testb
repz
dec
mov
push
fmul
push
push
jo
lcall
je
add
ss
push
dec
jmp
push
mov
scas
inc
lret
or
mov
xchg
sub
ja
pop
lret
pop
shr
and
fwait
out
insb
movsl
or
clc
lods
incl
movsb
stos
dec
mov
adc
mov
and
xchg
inc
dec
std
and
imul
iret
push
cmc
data16
mov
fs
sbb
lea
sbb
sub
fdivs
adc
dec
out
repz
mov
add
stos
mov
sub
cld
mov
fwait
jle
dec
pop
cld
jbe
cmpl
lock
and
fstpt
pop
jp,pt
mov
shll
push
nopl
mov
push
ror
mov
lock
shll
and
push
sbb
add
aaa
sub
adc
nop
cwtl
jl
pushf
ret
fstps
sbb
mov
fstpl
xchg
shlb
mov
pop
ljmp
mov
cmp
and
fimull
jb
or
cs
das
sti
icebp
inc
out
push
sbb
add
pop
int3
in
pop
arpl
and
js
fdivrp
js
push
xor
mov
aaa
out
insl
xor
inc
mov
stos
je
jecxz
xor
push
icebp
shr
fsubs
lret
push
or
ret
sbb
xchg
sub
mov
jbe
ficompl
add
push
jp
lods
out
pop
add
inc
xchg
dec
inc
xor
cld
and
divl
xchg
mov
rorb
les
lods
jno
lret
and
stos
in
rcl
mov
jno
pop
push
add
xlat
addb
pop
fnstenv
inc
sbb
ds
push
lcall
xorl
and
cltd
movsl
nop
shrl
in
sbb
cli
mov
push
xchg
imul
xchg
mov
xchg
jns
lcall
sub
sub
add
imul
or
jno
stos
stos
mov
cmp
lcall
es
xchg
inc
insb
addr16
lcall
or
aaa
dec
loop
outsl
mov
stc
nop
add
sub
mov
cmc
jl
jbe
stos
in
js
loopne
mov
push
loop
jle
lods
cmp
dec
aad
lret
mov
mov
sub
stos
shll
test
daa
ds
jbe
int3
cmp
pop
insl
push
adc
pop
mov
xchg
jge
push
mov
and
into
mov
repz
cmp
adc
push
jns
mov
shlb
cmpsb
jl
sbb
orl
int3
xlat
xchg
addl
es
push
dec
jg
inc
sbb
divb
dec
push
xor
pop
popf
add
dec
push
cmpb
jp
mov
mov
mov
fwait
pop
in
mov
mov
notl
stos
and
popf
xchg
pop
jno
mov
dec
pop
sub
outsl
cwtl
adc
pop
mov
imul
jns
jge
pop
movsl
inc
fucom
fs
cld
rol
xchg
xchg
scas
adc
pop
and
insl
rcl
push
and
push
jbe
jbe
and
bound
add
sbb
or
xchg
sti
push
inc
loop
and
mov
mov
jnp
dec
cmp
insl
dec
mov
xlat
in
leave
adc
xor
pop
push
arpl
dec
push
mov
mov
push
mov
sbbb
push
je
jne
xchg
pop
decl
cwtl
pop
xor
hlt
rcrl
and
stos
or
pusha
xor
into
hlt
mov
mov
dec
insb
movntq
ret
pop
add
insl
mov
mov
push
scas
cld
pop
shlb
jmp
dec
jno
fbstp
ss
xlat
xor
out
xchg
pop
push
mov
int
ljmp
inc
sub
add
adc
xlat
jno
enter
ljmp
scas
js
push
pop
int
xor
fstl
insl
add
clc
stos
xor
jl
xchg
push
add
xor
dec
js
inc
mov
or
push
out
dec
lods
mov
cmp
out
test
fisubrl
cs
adc
and
fsubl
lret
fcmovb
ljmp
das
mov
stos
jle
dec
fstps
xlat
sub
mov
lods
and
ja
lahf
mov
rcrb
push
shlb
negl
sbb
pop
jbe
pop
inc
ljmp
mov
jg
sbb
mov
outsb
sbb
dec
jge
shll
ja
call
push
dec
xchg
mov
sbb
jnp
xor
outsl
sub
jne
not
call
ss
pop
jecxz
add
nop
push
dec
repz
iret
sbb
mov
or
mov
adc
mov
imul
pop
cld
loop
adc
in
decl
lds
cmpps
pop
adc
sar
xor
outsl
adc
cwtl
out
shll
cmovle
fwait
scas
mov
inc
std
xchg
xor
xchg
dec
mov
stos
pop
lret
or
iret
mov
pushf
int3
in
fs
and
cmp
ljmp
lret
cld
or
inc
mov
mov
add
mov
ficompl
loop
lea
and
cmc
ja
cmp
or
adc
fisttpll
mov
cltd
pushf
push
sbb
xor
out
fisubl
cmp
test
in
dec
inc
mov
scas
mov
mov
popf
insl
out
pop
lret
add
push
call
inc
cmpsb
and
cmp
push
dec
jbe
data16
and
ror
or
inc
fstpt
lds
push
rcr
adc
and
loopne
push
xchg
pop
shl
sbb
in
push
scas
jmp
scas
or
lret
leave
fsubl
clc
shrb
inc
lahf
inc
jg
or
add
push
shlb
testl
pop
jb
and
in
cs
cs
push
imul
or
pop
pop
or
pop
ret
ss
push
movb
imul
cltd
fisttpll
mov
aas
popa
cmpsl
fsubs
mov
and
sarl
loopne
mov
inc
mov
ds
rorl
lret
sub
ljmp
pop
sub
test
push
mov
push
dec
lret
sbbl
aad
jecxz
mov
pop
mov
iret
and
push
out
xchg
dec
and
cmc
insl
les
jle
sbb
dec
lea
rolb
loope
inc
int
aad
jo
clc
or
add
add
scas
psrld
dec
push
xchg
xor
call
mov
dec
and
ret
pop
jno
outsb
push
inc
add
jno
std
inc
outsl
test
cs
jae
mov
xchg
dec
popl
inc
sbb
adc
pop
ljmp
cmp
or
test
jo
xlat
lret
sub
fwait
mov
xor
inc
jecxz
shlb
outsl
addr16
adc
incl
test
mov
pusha
orl
mov
ljmp
mov
daa
loop
push
es
inc
inc
push
adc
xchg
in
sub
push
in
adcl
cmpsl
push
les
mov
lret
lret
rcrb
sbb
jbe
inc
negb
clc
int3
mov
cli
lahf
sbb
cmp
ds
lds
jg
sarl
pushf
out
or
movsl
popf
add
sbb
ljmp
popf
jecxz
in
icebp
pop
cmp
fwait
scas
out
xchg
pushf
sti
out
or
mov
inc
xor
mov
ljmp
xor
and
sarb
xor
repnz
sbb
es
aad
cmp
push
aad
aad
dec
fdivrp
aad
bnd
movsb
add
mov
sbb
inc
mov
mov
loopne
orl
je
adc
pushl
jnp
fcmovnbe
aam
movsl
scas
sub
pop
stc
cmpl
test
mov
xorb
movsb
push
jg
nop
inc
rcrl
xchg
lock
seta
cmp
sub
out
movl
sub
jnp
in
lret
pop
adc
cmp
mov
sbb
jmp
and
sub
mov
cld
rcll
cmp
lahf
or
out
or
and
mov
push
cmpsl
sub
cwtl
mov
rclb
mov
sbb
pusha
mov
outsb
jb
xchg
cmpsb
inc
sub
or
loope
pop
jp
daa
mov
mov
xlat
insl
pop
fstps
adcb
outsl
xlat
adc
mov
inc
imul
cmp
stos
nop
test
sub
cs
lods
mov
shrb
jg
repnz
enter
pop
shl
fs
adc
fiaddl
sub
stc
pop
add
std
sahf
in
mov
popf
xchg
sub
mov
insl
jge
mov
aaa
outsl
cmpl
xchg
pop
out
sub
add
xlat
sbb
mov
repz
sub
cmpsb
fsub
and
mov
ffreep
and
and
test
dec
cmp
mov
lcall
add
dec
sub
jp
shll
nop
movsl
ret
push
jle
mov
sub
dec
out
pop
xlat
fsubs
aas
fidivrs
push
fdivrs
dec
dec
cmpsl
mov
mov
out
lahf
clc
cmp
mov
nop
popa
or
loope
add
cmp
xchg
shll
inc
xor
pop
mov
cmp
out
scas
repz
mov
xor
dec
pop
sub
mov
adc
and
enter
xor
mov
sub
fmuls
mov
lea
fstpt
cwtl
inc
xchg
out
mov
cmp
cmp
adc
nop
ljmp
shrl
fistpl
ror
sub
xchg
mov
xor
test
in
xor
push
adc
sbb
push
subb
lods
or
lods
push
and
mov
push
push
js
mov
movsl
adc
scas
xchg
movsl
sahf
pop
or
mov
fildl
int
mov
int3
pop
push
push
xor
inc
mov
popf
cmp
pop
jl
ret
out
es
out
rol
out
lcall
call
dec
push
add
cltd
mov
cltd
outsb
xor
js
or
mov
mov
push
mov
adc
hlt
into
lea
push
sub
fcomps
push
sahf
xchg
out
out
outsb
pop
add
or
popf
cmpsl
and
mul
ret
add
popa
cltd
jae
aaa
inc
mov
add
jp
xchg
mov
jecxz
or
inc
fsubrs
sub
mov
out
or
sub
je
sub
nop
adc
push
cli
jno
mov
int
or
cmp
and
movsb
dec
sub
test
xor
mov
std
iret
jb
pop
dec
fnsave
sbb
push
fldl
mov
mov
mov
test
xchg
jnp
rolb
xor
xchg
mov
ret
loop
mov
xchg
adc
scas
pop
mov
jl
push
lret
add
std
xor
pusha
mov
inc
jge,pn
inc
sbb
mov
arpl
subl
xor
mov
mov
iret
shrb
insb
sbb
ljmp
lds
mov
loope
popa
push
lods
pop
jnp
mov
and
xor
cltd
arpl
insl
out
popa
push
les
es
add
out
jmp
popa
add
pop
loop
jnp
in
adc
pusha
jbe
xor
aam
shl
cmp
ret
shrb
mov
int
jbe
inc
cmp
mov
arpl
ja
imul
mov
incl
icebp
ja
into
adc
add
and
mov
sbb
or
xchg
mov
jp
mov
mov
mov
pop
mov
int
sub
add
mov
jecxz
push
ss
cmp
sahf
dec
or
sti
mov
mov
std
xlat
or
xchg
jmp
test
mov
test
sub
out
sub
mov
add
fdivrs
js
stos
leave
mov
mov
xor
jo
dec
mov
or
iret
cmp
mov
loop
pushf
popf
enter
mov
sbb
inc
icebp
repz
mov
aad
stos
in
in
mov
mov
and
jmp
shll
cld
xchg
mov
pop
sarb
aam
jnp
dec
xchg
inc
cld
add
and
push
rcrb
les
test
pushf
dec
mov
cmp
fadd
fimull
or
ret
leave
inc
insl
int
pop
jno
adcb
or
movb
pop
mov
ret
addr16
int
in
xor
arpl
xor
lods
and
movsl
scas
pop
daa
pop
pop
xchg
mov
mov
sbb
inc
addl
clc
xor
addb
mov
ret
mov
aaa
fnsave
lods
inc
add
fidivrs
mov
push
pop
xchg
lahf
push
push
ficomps
jg
mov
xchg
mov
scas
jo
push
push
and
pop
loope
dec
push
fwait
gs
repz
cltd
xchg
jns
push
mov
mov
std
jo
repnz
push
movsl
loop
dec
jae
aaa
pop
lret
jg
faddp
mov
das
xchg
fldl
repz
cmpsl
xchg
xor
mov
insb
add
xchg
rcrb
sub
push
sub
jmp
into
xchg
insl
jns
cmp
enter
stos
movsl
out
ret
jo
cmovae
or
lock
insb
inc
dec
pushf
cs
pop
mov
push
or
jo
jno
hlt
fisttps
mov
gs
popa
shl
add
cwtl
push
jmp
add
inc
daa
cmp
pop
fdivrl
cmp
stc
jecxz
mov
sub
mov
or
cmp
pop
mov
dec
in
push
mov
fwait
arpl
adc
outsl
int3
and
mov
add
cmp
stc
jbe
rsqrtps
mov
das
dec
push
in
in
sbb
pushf
test
cmpl
aad
les
mov
or
addb
sub
sbb
hlt
sub
sub
mov
sub
iret
and
mov
and
rorl
je
dec
inc
movsb
jp
pop
out
mov
lock
mov
mov
xor
in
lods
xor
leave
jmp
lock
adc
push
js
add
mov
lahf
dec
xlat
sub
xchg
lods
enter
std
jbe
dec
popf
imulb
lret
cwtl
andb
in
adc
mov
jae
cmp
in
push
int3
fcmovb
sarb
cmp
cmp
hlt
lcall
jnp
mov
shl
mov
je
sub
jle
push
sub
cld
imul
cmp
mov
mov
js
orb
rorl
outsb
in
add
stos
clc
fs
scas
mov
xchg
inc
leave
aad
add
inc
lret
das
xor
cmpsb
int3
ffreep
cwtl
inc
fcompl
nop
loope
jbe
push
das
sub
add
push
jge
stc
cmpsl
dec
jle
mov
mov
xchg
adc
nop
dec
movsl
jp
addl
add
cmpsl
dec
jns
push
inc
push
mov
or
sbb
pop
test
pop
les
jnp
sti
mov
lahf
ret
mov
push
mov
jbe
inc
or
dec
in
inc
mov
ds
dec
ret
ret
adc
cmpl
pop
push
mov
lahf
fcoml
or
ds
jmp
mov
iret
inc
adc
decb
enter
hlt
mov
or
jb
cltd
xchg
out
lret
lea
loop
or
stos
mov
sarl
cwtl
out
movsb
imul
inc
push
pop
sti
je
inc
jne
jl
pop
mov
cltd
push
mov
inc
inc
imul
mov
mov
lods
sub
imul
mov
cmc
in
int
sub
mov
stos
push
adc
aaa
cmpsl
in
enter
inc
mov
sbb
fsubr
adc
sbb
stos
sbbb
test
mov
cmp
pusha
fimuls
je
pop
xchg
adc
fcompl
dec
int
dec
push
push
outsl
cmpsl
and
gs
cmp
add
push
in
inc
ja
imul
pop
lcall
xor
lret
mov
outsl
mov
std
sbb
and
test
cld
push
jae
add
es
dec
jg
or
dec
loopne
ds
stos
inc
mov
test
jo
or
mov
inc
repnz
xchg
mov
sbb
outsb
daa
cmpsl
dec
add
lock
xchg
sti
mov
push
in
ror
ficoms
pop
inc
push
jg
mov
aas
ret
call
mov
dec
out
fwait
inc
xor
and
or
jnp
dec
mov
sub
scas
sub
xor
dec
sub
mov
lret
or
pushf
or
pop
sbb
daa
add
sub
xchg
scas
sahf
jp
jl
int
or
outsl
lods
pop
out
in
jnp
mov
fldt
xor
imul
fdivs
push
cwtl
shl
fisubrs
or
pusha
ja
mov
adc
inc
jle
mov
pop
pandn
ds
ja
sub
rcll
add
inc
sbb
nop
pop
and
mov
imul
sub
push
cmp
sahf
mov
jne
inc
inc
test
fwait
mov
inc
daa
test
shrb
jo
gs
adcl
mov
scas
lock
pop
pop
dec
mov
psubb
inc
sahf
lret
es
clc
fisubl
pop
and
pushf
fisubrl
out
inc
xor
das
cwtl
insb
jo
pop
mov
int3
inc
sub
sub
mov
pop
mov
mov
jb
movsl
aad
cmp
fistps
sti
enter
add
cmpsl
inc
pop
inc
lds
popa
cli
inc
es
je
mov
out
iret
push
ss
outsb
mov
pop
push
pop
pop
stc
sar
push
sbb
pop
ror
add
dec
mov
frstor
leave
and
and
xchg
daa
and
mov
movsb
inc
out
jb
push
cmp
cmp
add
cmpsl
sbbb
lret
pop
add
sub
sahf
xor
imul
mov
rol
lcall
sti
fbld
stos
mov
push
addr16
fsubs
outsb
sbb
addr16
test
cltd
into
lds
imul
mov
faddl
jno
mov
mov
fwait
js
mov
pop
test
and
pop
lods
adc
movsb
mov
sub
xor
stos
mov
dec
lods
add
ja
sarl
sbb
cmp
scas
aaa
pop
jno
js
int3
cmp
scas
sahf
sbb
and
lods
pusha
xchg
lahf
jge
xor
jmp
data16
mov
testl
cmp
mov
enter
and
mov
sbb
stos
cmp
sbb
fildl
dec
or
ja
sti
jnp
std
lcall
and
mov
xadd
rorl
dec
jle
int
cmpsb
jle
dec
mov
enter
das
add
pop
shrb
fmul
mov
cltd
cli
mov
movsb
aaa
mov
decl
pop
xlat
adc
pop
and
and
xor
mov
sbb
add
rorl
inc
mulb
sub
mov
int3
leave
sbbl
and
pop
inc
add
andb
cmp
cmp
or
jmp
pop
jb
aaa
cwtl
outsb
and
pop
out
outsb
popf
pop
xchg
jne
dec
shl
push
jmp
xor
sub
push
mov
push
jo
dec
and
jae
dec
push
xchg
fmull
repz
push
in
sub
in
mov
shrb
push
mov
add
jl
leave
addr16
cltd
movsbl
add
push
lock
lcall
sbb
insl
inc
push
inc
sbb
sub
cltd
test
cmc
jb
callw
loope
in
cmp
pop
pop
in
push
jno
pop
outsb
cmpb
mov
pop
movsb
lret
add
iret
test
push
mov
fbld
pushf
pop
jg
jae
inc
ss
jmp
mov
int3
pop
mov
or
movl
adcb
in
stc
add
mov
adc
gs
mov
out
aaa
lds
pusha
and
pop
dec
pop
cmp
insl
xchg
sbb
repz
cmp
add
jne
ja
pop
dec
xlat
sbbb
icebp
jge
sub
mov
and
rsm
jae
dec
loop
in
jbe
push
cs
movsl
pop
pop
mov
mov
push
and
mov
sbb
and
mov
push
xchg
aam
in
movsb
or
rcrl
cmp
es
sub
sbb
jge
call
add
cltd
test
jae
push
mov
cmpsl
cmp
test
xlat
lock
mov
lss
ret
mov
push
mov
outsl
ss
pop
lock
fsubrp
ljmp
xor
insb
adc
clc
xchg
push
lahf
mov
lods
insb
stos
ret
mov
lods
or
push
lahf
pop
daa
xchg
in
adc
stos
fstl
lret
sub
mov
daa
ds
sub
push
cli
fscale
inc
or
push
ja
mulb
cwtl
in
cs
pop
bound
xchg
cli
sub
pop
and
call
repnz
in
and
cmp
push
mov
inc
lds
xchg
repnz
mov
jno
cmp
jb
movsl
hlt
xor
cld
or
sarb
inc
movsb
inc
jae
int
mov
sbb
movsb
mov
push
mov
lods
or
adc
call
mov
sarb
mov
pop
or
mov
mov
xlat
cmp
add
enter
inc
fdivrl
sti
push
lock
lea
mov
pushf
movsb
scas
or
mov
push
ret
and
mov
mov
hlt
cmpsb
out
fadds
rclb
stos
add
mov
test
sub
mov
cmp
test
iret
pop
lds
push
es
push
add
jg
in
loopne
sub
ss
pop
push
xor
or
testb
shrb
popf
outsl
adc
push
adc
pop
mov
lret
fwait
out
into
shrl
fwait
jmp
stc
movsb
int
cmp
call
test
stos
mov
loopne
push
add
pop
xlat
in
xor
cmpsb
lret
lahf
adc
shll
mov
cmp
imul
ret
in
fsubrs
or
sub
call
in
pop
sbb
push
leave
sub
add
cmp
enter
int3
add
imul
and
icebp
sub
jmpw
mov
cmp
pop
fsubl
lods
shrb
lock
js
das
mov
and
jo
loop
fwait
jno
sub
je
mov
stos
jno
xor
sub
xchg
pop
mov
mov
mov
insb
cmc
jbe
mov
hlt
mov
push
fistps
scas
lods
ljmp
inc
inc
loope
icebp
and
out
pop
mov
pop
cmp
cmc
scas
mov
repz
sbb
lret
jl
lds
xor
pop
lret
add
movsl
pusha
pop
jbe
mov
call
mov
pop
xchg
cmp
mov
mov
sub
push
pop
jne
pushf
cmp
test
lds
sahf
lods
pcmpeqb
pusha
mov
mov
mov
sbb
mov
clc
pop
cmpsb
out
and
inc
dec
arpl
mov
push
or
sbbl
pop
mov
insl
pusha
lahf
dec
lds
sbb
leave
push
gs
jg
icebp
lahf
aad
xchg
mov
inc
mov
xchg
xor
sub
fisttpll
sbb
repnz
test
sbb
rorl
test
push
jns
jnp
ret
xchg
mov
lret
push
stc
jno
mov
inc
cmpsb
fcomps
mov
xor
add
mov
dec
lea
pushf
aad
pushf
adc
fwait
int
lahf
jle
popa
rcrl
or
mov
inc
pop
adc
aas
int
dec
cld
stc
or
xchg
push
xor
in
icebp
jp
xchg
sub
xor
cmp
scas
in
cmpsb
sbb
insl
sub
roll
gs
lods
sbb
gs
and
xchg
fistpll
mov
push
movsl
xchg
cwtl
sub
push
aad
pop
push
adc
loopne
cmpsb
fisttps
mov
aas
inc
mov
lcall
dec
in
lods
fsts
pop
jno
sub
movsl
scas
out
cli
jbe
gs
mov
pop
mov
xor
dec
pusha
sub
inc
xor
dec
test
fwait
ja
mov
mov
test
xor
testb
adc
test
pop
and
and
sub
cmpsb
leave
inc
in
les
dec
push
push
sbb
lods
cld
out
and
int3
imul
fs
push
sbb
imul
lret
inc
and
outsb
push
cmp
movsl
xor
stc
movsl
or
jmp
bound
scas
fisubs
push
xor
popw
roll
adc
ja
add
push
jl
xchg
bound
repnz
loope
adc
jmp
out
adc
jmp
sub
outsl
push
sbb
ret
aam
idivl
mov
loopne
outsb
out
aam
cmp
mov
icebp
ss
js
ret
sar
dec
inc
mov
mov
sub
call
push
inc
loop
mov
scas
mov
xchg
jg
gs
mov
nop
cltd
mov
and
inc
cs
stos
add
xchg
mov
adc
mov
pushf
movsb
cltd
es
aaa
inc
cmp
outsl
or
sahf
std
frstor
lock
pop
xor
cmp
aam
mov
bound
or
cmp
lds
into
jnp
std
inc
mov
push
adc
adc
jae
bound
sbb
stos
xchg
push
mov
xchg
pop
dec
fnstcw
xlat
imul
xor
stc
push
add
and
or
imul
inc
dec
js
rcrl
adc
cmp
inc
stos
cli
mov
sbb
mov
out
mov
imul
cmc
cmp
sbb
jbe
jno
aad
jmp
push
pop
data16
and
orl
xchg
psllq
mov
or
mov
in
push
mov
add
loope
in
mov
inc
insl
das
and
hlt
rcrb
jle
xchg
stos
js
ret
xchg
imul
test
out
aas
outsl
sahf
push
adc
stc
lock
cmp
adc
mov
ret
ret
jo
pusha
jge
cmpsl
and
leave
popf
xchg
mov
into
in
ret
push
cwtl
add
add
stos
mov
test
cltd
push
jg
shlb
arpl
mov
sahf
dec
loopne
xchg
mov
mov
repz
lock
jp
es
flds
lds
stc
xchg
cmp
aad
out
mov
mov
inc
sbb
push
jns
cwtl
jo
sti
jle
in
cmp
insl
pushf
sub
mov
cmpsl
push
sbb
fstpl
dec
lods
mov
adc
stc
and
xchg
sbb
or
and
sbb
jle
aad
out
dec
vpsubd
mov
pop
xchg
in
mov
aas
out
int
sbb
rorb
fwait
dec
xchg
in
add
sub
insl
fildl
lods
out
js
movsl
mov
fcompl
mov
lret
out
aam
dec
xchg
inc
repnz
jne
and
push
mov
mov
hlt
inc
es
aad
icebp
push
sbb
jge
or
fwait
stc
pusha
xor
ficoms
shrb
push
adc
and
push
mov
mov
xchg
in
icebp
arpl
mov
mov
pop
add
pop
je
pushf
pusha
loopne
enter
fldt
in
inc
bound
xchg
fcoms
and
xchg
gs
xlat
push
and
ja
stc
bound
push
mov
fs
xlat
repz
aad
inc
add
xchg
mov
repnz
mov
shlb
inc
sub
jo
addr16
adc
stos
fs
push
jle
fidivrs
jecxz
inc
xor
imul
pop
shl
out
jmp
cwtl
sbb
dec
push
mov
leave
dec
xchg
rol
mov
xor
out
mov
or
insb
into
jmp
int
mov
push
lret
pop
call
or
push
out
mov
sub
in
jg
mov
cld
popa
clc
out
mov
daa
cmpsl
mov
push
inc
sub
repnz
cmpsl
cmpsl
cltd
repnz
insl
and
xchg
pop
outsl
dec
pop
popa
cli
loope
ds
addr16
cmpsb
jo
out
xchg
ret
fwait
out
inc
sbb
mov
jns
or
sarb
pop
std
ja
mov
sbb
dec
inc
jb
jbe
cmpsb
iret
xor
dec
pop
out
call
cmc
jl
mov
mov
pop
iret
xchg
dec
pop
repnz
in
les
fsub
es
mov
jnp
mov
es
mov
cmp
outsb
jo
add
inc
arpl
cs
adc
in
mov
cmp
xor
je
pop
sub
dec
dec
push
xor
jae
leave
insb
clc
jl
rcl
clc
mov
xchg
pop
sbb
lea
push
bound
sbb
outsb
pop
outsb
out
xchg
pop
test
stos
fldcw
ja
idivb
and
lods
fmull
orb
inc
add
push
insl
fcompl
jbe
inc
out
push
cmp
sub
inc
fsubrl
jo
mov
jae
jno
xchg
popa
cmp
mov
ror
jo
or
outsb
xlat
push
cmp
lar
and
out
repnz
pop
and
out
add
lcall
dec
sbb
lea
xor
out
es
lods
adc
xchg
xor
or
and
xor
sbb
pop
jb
enter
bound
dec
vpminub
fs
xchg
jbe
ret
cmp
xlat
arpl
fcompl
push
jno
push
lds
xchg
or
cltd
pop
out
mov
xor
dec
xchg
lea
imul
mov
mov
pop
data16
clc
or
sbb
das
in
adc
mov
sbb
iret
xchg
ret
mov
sbb
or
sbb
sti
mov
iret
repnz
mov
mov
inc
pop
mov
movsb
jmp
pop
ss
imul
xchg
test
fs
dec
mov
pop
enter
fwait
leave
dec
pop
aad
xchg
mov
adc
pushl
enter
aaa
out
add
popf
mov
cmc
push
insb
and
cmpsl
popf
ret
dec
push
sub
mov
xchg
leave
mov
jp
mov
in
fstl
idivb
jle
repnz
cli
int
push
xchg
andl
ss
fistpl
mov
sub
jle
jmp
fs
arpl
movsl
lock
or
mov
gs
sub
xlat
sti
mov
daa
cmp
inc
sbbb
push
hlt
mov
cmp
or
push
or
scas
hlt
cld
cmp
pop
inc
and
arpl
aam
pop
pop
xor
mov
mov
add
fstl
in
loope
std
pop
or
xchg
sub
gs
jnp
xor
mov
fdivrl
cmp
cli
push
push
ja
test
mov
inc
popf
lock
mov
xchg
or
sbb
test
pop
arpl
jle
pusha
xchg
scas
push
inc
cmp
adc
fldcw
or
rcl
in
lock
cmp
gs
dec
out
std
es
cmc
dec
sbb
mov
pop
fcom
rcl
add
lea
jb
es
imul
mov
iret
adc
not
add
mov
xchg
sub
mov
jmp
in
cmp
push
iret
imul
mov
jle
loope
mov
idivb
scas
shll
cltd
inc
lea
cmp
pop
andb
adc
mov
gs
cld
leave
sti
cwtl
sub
fdivp
out
push
jle
ss
push
fcompl
orl
adc
lods
test
jle
jmp
popf
pop
je
xor
cmp
fidivrs
mov
into
imul
add
pop
xor
gs
inc
add
in
ds
jbe
gs
testl
rclb
les
jne
iret
pushf
and
push
or
aaa
shlb
addb
or
mov
and
fdivl
jae
shlb
out
pop
mov
das
mov
fidivrl
mov
mov
cmp
popf
adc
mov
arpl
addr16
push
jecxz
cmpsb
ljmp
fisubl
into
stc
shl
adc
mov
arpl
sub
adc
cs
nop
imul
shll
lahf
cmp
lds
dec
inc
test
mov
cmp
dec
pop
sti
mov
lds
adc
sahf
push
fiadds
imul
mov
or
push
gs
dec
enter
push
out
sbb
fimuls
adc
outsl
std
popa
inc
imul
inc
repnz
in
cmc
jnp
popa
push
push
into
pop
lret
fidivrs
sbb
mov
fisubrs
dec
inc
cli
inc
fstl
adc
push
push
and
push
adc
and
mov
and
aas
push
aam
push
icebp
mov
fsubrs
xor
push
mov
int
inc
fsubrs
sub
xor
xor
fbstp
mov
cwtl
adc
and
rclb
mov
pusha
add
mulb
sbb
push
mov
jae
call
rcrl
xor
repnz
mov
imulb
push
int3
pop
mov
movl
pop
and
lea
insl
sub
inc
fcomp
xchg
gs
jl
jp
fmul
cs
sbb
cwtl
cmpsl
sub
enter
jmp
dec
dec
data16
ret
pop
mov
aad
lret
push
push
lock
inc
xlat
xor
cmp
pusha
mov
jns
pcmpeqw
gs
scas
cmp
sub
mov
repz
mov
aas
mov
mov
stos
xlat
dec
data16
and
outsb
lret
mov
dec
xchg
repz
filds
add
cli
jbe
pop
shrb
xor
mov
aad
pop
incb
std
out
xor
movsb
loopne
jo
push
lods
movsl
mul
jle
fnstenv
imul
add
aaa
sar
mov
aam
leave
popa
mov
or
sub
fdivr
aam
hlt
cli
js
fdivr
rcrb
test
cmp
ficomps
movsl
pop
cmp
mov
jb
cmp
mov
bound
rcll
jo
mov
in
mov
test
enter
lea
lea
sahf
mov
into
cmp
pop
mov
pcmpeqw
cltd
loopne
pop
mov
dec
and
loope
bound
call
cwtl
lods
push
ret
ja
mov
sahf
cmp
or
sbb
imul
das
ret
loopne
js
divl
fadds
jno
lcall
fdiv
fs
movsl
daa
or
mov
lods
and
add
jmp
xchg
loop
push
std
cmp
xor
cs
xlat
adc
add
mov
ja
dec
testb
sarb
jnp
iret
jne
mov
and
je
push
cmpsl
or
adc
leave
outsl
lret
mov
and
cmpsb
sub
mov
test
and
or
mov
xlat
push
fldt
insb
mov
insb
ss
lret
xchg
pop
adc
mov
cli
ja
jb
mov
pusha
push
aaa
mov
xchg
cwtl
shl
mov
test
jp
sub
mov
scas
test
push
fisubrs
ss
std
loop
xor
pop
sub
dec
jp
inc
cmpb
shll
mov
pusha
daa
inc
fistps
daa
hlt
pop
leave
inc
push
xchg
xchg
pop
fbstp
jb
xchg
adc
and
lahf
imul
mov
and
pop
fstps
push
mov
test
adcb
mov
enter
out
arpl
lds
in
pop
cs
andl
xchg
int3
sub
std
test
repz
and
jmp
mov
outsb
mov
leave
lret
pop
stos
addr16
dec
aad
or
or
cli
mov
dec
out
aas
notb
push
inc
sub
jb
jb
and
push
fistl
xor
cwtl
lret
xchg
ss
dec
ds
sbb
xchg
jae
cmc
sub
ss
idivl
and
jno
fsubr
mov
sub
stos
sbb
and
lcall
scas
xchg
or
fs
xchg
jo
aaa
bnd
out
adc
or
adc
inc
cmpb
dec
push
mov
cli
js
add
in
inc
subl
fwait
pop
mov
jbe
fcmovnb
call
and
mov
mov
fs
out
jmp
out
and
cmp
push
test
insb
jns
loop
ret
xchg
sbb
cltd
inc
insl
addr16
fisubrs
ja
inc
or
test
adcl
add
xchg
in
nop
call
lods
repz
pop
xor
xor
push
loope
lret
jecxz
out
cmc
int3
int
or
jge
inc
mov
dec
pusha
out
mov
aam
flds
sti
and
xor
mov
mov
sub
xchg
xor
and
in
pop
mov
mov
inc
icebp
cmpsb
repnz
dec
fsubrs
jns
repnz
cmp
dec
insb
dec
les
xchg
pop
mov
test
notb
pop
lahf
rclb
jl
jle
sub
aas
push
jecxz
and
sbb
flds
push
je
dec
fucomi
enter
iret
jae
fisubl
shlb
jge
je
and
inc
sub
cmp
cltd
movlps
iret
or
pushf
lds
shrb
das
dec
sbb
test
and
aas
mov
fs
cmp
andl
mov
leave
movsb
sbb
jecxz
iret
mov
repz
insl
or
push
inc
sbb
pop
lock
sub
push
aaa
cmc
popf
jmp
daa
xor
ret
cmpb
das
sub
adc
xor
jnp
lods
dec
fistpl
add
iret
sub
icebp
ficompl
cwtl
pop
into
jmp
ret
lahf
xor
jp
stos
adc
xchg
mov
mov
push
xchg
add
mov
out
lcall
push
fisttpl
imul
jno
fcoms
lea
xchg
add
adc
adc
sti
clc
out
jns
rcrb
jnp
mov
mov
es
ret
sahf
mov
mov
shl
dec
dec
adc
fdivp
cmpsb
push
test
cmpsl
xchg
inc
movsl
jns
sbb
movsl
or
and
pop
and
pusha
xchg
icebp
test
in
mov
test
outsl
xchg
ja
push
mov
lahf
es
and
cwtl
jb
mov
in
and
stos
mov
sbb
lock
sub
sbb
jo
and
fildl
test
pop
stc
inc
xchg
pusha
sbb
lahf
mov
mov
or
push
lods
cmp
mov
pop
xchg
je
push
pop
jbe
cmp
leave
test
test
mov
popa
sub
mov
lods
jecxz
mov
das
sbb
popa
movsl
sbb
cli
popa
out
add
cmpsb
dec
mov
into
lods
fistpl
aas
dec
dec
pop
xchg
add
xor
dec
arpl
ud0
outsl
inc
mov
std
pushf
enter
sti
jg
mov
adc
mov
cmpsl
clc
xor
mov
mov
pop
dec
mov
shll
aam
pop
inc
out
rclb
inc
int
mov
fcomip
mov
fidivl
adc
pop
imul
fisttpl
popf
mov
jo
loopne
repz
cmp
ret
andl
inc
test
jb,pn
je
test
xor
mov
repz
jle
push
xor
pop
lar
dec
inc
jge
faddl
fstpl
dec
pop
test
xchg
out
cmp
cld
pop
push
jb
xor
testl
shlb
adcb
shlb
add
popf
enter
sbb
data16
sub
lret
stc
test
test
xor
aaa
in
std
cs
mov
shlb
pop
into
add
mov
into
int3
andb
or
xchg
ljmp
jle
out
mov
and
les
in
inc
jb
in
adc
adcl
cli
stos
add
ret
xchg
fsubs
lea
into
sub
mov
movsb
mov
push
add
gs
aaa
loope
mov
insl
jecxz
pushf
movb
lods
int
scas
jb
mov
fmuls
and
icebp
and
repnz
xor
scas
adc
add
cli
outsb
dec
or
and
jp
xlat
sti
dec
stc
std
adc
cmp
movsb
in
and
in
xor
int3
inc
mov
adc
jbe
mov
xchg
into
push
movsb
mov
mov
xchg
push
xor
shll
jae
jbe
cmpsb
add
test
mov
loopne
xor
es
addr16
xor
push
fldt
cmp
cmp
fisubrl
mov
adc
cld
or
bound
outsb
sbb
and
cli
das
inc
xor
imul
insl
or
into
xchg
lock
lods
push
mov
mov
xchg
mov
mov
inc
ss
stc
adc
xchg
adc
test
jae
std
add
xchg
popf
mov
movb
int
sbb
pop
mov
dec
sti
fstps
dec
cli
data16
lods
xor
addr16
pop
mov
push
in
jecxz
jecxz
or
sbb
in
pop
out
outsl
int3
int
lret
push
loop
data16
sub
push
push
adc
dec
add
popa
sbbl
push
insb
and
out
xchg
sar
call
in
sbb
lahf
xor
cmpsl
scas
out
dec
rcl
add
repz
cmpsb
adc
lock
mov
scas
push
add
sub
push
inc
cld
mov
mov
inc
stos
xor
int
mov
cmp
sbb
pop
ret
mov
shl
out
adc
or
push
loope
repnz
movsb
sub
sahf
xor
int3
jp
iret
and
rorl
xchg
loopne
fsubs
xor
xchg
lret
pop
mov
jb
jmp
push
dec
subl
adc
jmp
cmp
aas
fwait
pop
iret
and
rorl
jecxz
cmp
mov
push
sub
cmpsl
enter
mov
shlb
inc
addr16
mov
in
sub
lods
mov
jb
in
sbb
rcrl
pushf
stos
add
sahf
loope
jge
xchg
dec
adc
jnp
mov
pop
sbb
jle
popa
addr16
bound
int
test
stc
addb
push
mov
mov
dec
add
dec
mov
mov
lock
xor
fwait
and
repnz
pop
mov
xchg
imul
mov
sbb
fs
jg
or
ss
and
push
ficoml
xor
push
xchg
in
daa
cmp
inc
jae
lds
mov
xchg
js
xor
mov
call
mov
push
mov
pop
popf
test
daa
inc
cmp
xor
lret
push
or
cmp
das
jbe,pt
mov
jb
sti
sarb
movb
xchg
push
and
xor
or
stos
adc
sahf
mov
dec
popf
out
sub
popa
push
jl
outsl
icebp
daa
mov
movl
or
xchg
xchg
pop
mov
and
mov
aam
xchg
stos
mov
push
mov
lahf
mov
std
mov
mov
adc
mov
in
lods
mov
int
rorl
adc
sarb
mov
add
push
adc
dec
imul
pop
cmp
outsb
popa
xchg
aaa
icebp
sbb
push
loopne
xchg
xchg
lock
xchg
or
push
rol
mov
jg
ds
scas
rcrl
lods
aaa
cli
ljmp
adc
xchg
out
pop
pop
fwait
cltd
popf
insb
call
cmp
pusha
sbb
cld
dec
arpl
cli
test
xor
jmp
sahf
cwtl
into
xchg
add
mov
out
cs
ss
popa
test
jns
nop
das
lret
shl
xchg
xchg
imul
sbb
cmp
mov
mov
je
fldl
out
push
subl
cmpsb
shlb
dec
aas
fildll
int3
ret
cltd
cmp
mov
inc
xchg
lea
int3
and
movsl
sbb
jge
jo
aas
loop
in
mov
mov
fsubp
dec
mov
das
pusha
filds
rcrb
repnz
rcrl
pop
outsl
xorb
sub
ret
jp
pop
or
cmc
das
inc
sub
push
pop
and
out
pop
aad
out
and
stos
out
sub
xchg
mov
mov
imul
inc
sub
mov
mov
dec
jae
daa
mov
rclb
mov
pop
mov
mov
lods
xchg
loopne
mov
fldenv
out
fpatan
pop
xchg
das
jo
repnz
aas
inc
and
mov
bound
sub
loopne
sahf
clc
dec
mov
pop
cwtl
sbb
test
jne
cmp
pop
adc
stos
jnp
and
push
sbb
sub
in
loop
dec
jb
add
scas
rclb
sub
xor
clc
cmp
scas
pop
pop
lock
mov
ret
cwtl
dec
pop
test
outsb
or
push
push
xchg
xchg
pushf
lds
jecxz
cmpsl
adc
push
fucomip
and
inc
jnp
xchg
or
cmp
dec
addr16
sub
pop
jno
aas
and
mov
sbb
push
push
out
dec
cmp
jge
sahf
adc
xor
stos
roll
pop
push
add
dec
bound
jno
xchg
dec
movb
out
or
shr
pop
mov
stos
pop
in
imul
pop
mov
push
adc
repnz
jl
aas
add
dec
jne
movsl
je
xchg
push
int3
xchg
xor
mov
xchg
mov
sbbb
pop
adc
push
sti
jno
push
mov
sbb
push
and
ds
dec
pop
sbb
push
popa
push
push
call
shl
or
mov
pop
scas
aad
xchg
sub
out
inc
shl
xor
cmp
mov
xor
dec
addr16
jbe
cmp
pop
aad
jg
xchg
inc
je
pusha
adc
inc
test
pop
sub
xchg
jbe
fisttpll
inc
ret
push
scas
xchg
inc
xchg
sub
repz
nop
dec
out
xor
hlt
mov
mov
test
rorb
push
jno
push
popf
push
loop
in
cmp
xchg
mov
cmp
cmc
pop
pop
movsb
imul
xchg
inc
and
jbe
and
bound
inc
pop
aam
mov
inc
add
and
cmpsb
test
fisubl
pushw
mov
add
pop
in
pushf
lds
inc
jb
cmp
lcall
stos
push
out
cmpsl
mov
push
adc
in
sub
push
clc
dec
lock
sub
jmp
xchg
or
push
adc
push
cmp
inc
repz
mov
loop
rol
sbb
sub
mov
aas
pop
jb
sub
mov
sbb
shll
data16
popl
inc
cli
scas
das
shll
cmp
xchg
aaa
pop
call
xchg
jo
and
push
imul
stc
push
cmp
loopne
into
mov
out
add
jle
lock
std
mov
test
ret
add
mov
out
ja
jb
xor
mov
jg
mov
add
inc
xchg
ret
or
jae
arpl
adc
pushf
and
std
cmp
mov
and
lret
mov
xchg
jle
fiadds
push
mov
push
pop
push
into
lods
xchg
jbe
jmp
lods
xor
icebp
iret
mov
jmp
or
fmuls
adc
sub
rorl
nop
sbbl
fcomip
in
sub
mov
add
jnp
sti
sbb
dec
dec
mov
jmp
inc
xchg
pop
add
in
iret
jae
jae
mov
jl
ja
mov
dec
sti
mov
arpl
mov
fs
push
add
sub
xor
adc
std
push
and
sub
sub
jle
enter
inc
push
mov
xchg
hlt
hlt
mov
push
push
adc
fst
sbbb
adc
shll
aaa
xor
cld
sub
jg
popf
push
clc
sti
jns
xchg
stc
fdivl
in
cmp
ret
jp
aad
adc
xorb
movsb
cmp
incb
cwtl
dec
or
loopne
pushf
rorb
cmp
xchg
push
xchg
push
cmp
aaa
xor
enter
cmp
or
scas
data16
xor
in
inc
xchg
mov
cmp
jle
xlat
sub
mov
orl
pop
fistl
lods
inc
lock
push
sarl
adc
add
lret
imul
xlat
mov
and
mov
sbb
loopne
inc
fistl
or
and
xor
mov
gs
pop
int3
sahf
movsl
popf
push
pop
test
inc
pop
sysexit
js
or
mov
shr
adc
pop
imul
popa
xor
daa
pop
ror
mov
inc
jecxz
xor
xlat
push
outsb
in
sbb
and
or
dec
shrb
mov
sub
lds
add
je
sub
popf
jecxz
popa
fwait
xorb
adcb
aaa
movsb
xchg
les
frstor
cmpsb
xchg
xchg
and
lods
and
call
pop
jmp
and
xchg
insb
mov
mov
sbb
jmp
pushw
js
cmpsb
or
xor
pushf
push
test
xchg
sbb
inc
shl
inc
js
dec
shll
push
ret
leave
adc
ret
pusha
mov
inc
pop
push
push
inc
and
pop
jmp
or
pop
ret
mov
imul
rol
fdivrs
pushf
add
inc
or
dec
iret
jne
test
sahf
ss
sbb
iret
nop
movsl
sub
outsb
test
dec
jmp
hlt
fwait
xchg
jno
pop
sti
cmpsb
gs
xchg
dec
push
daa
jge
xchg
aad
cmpsb
cmc
rorl
and
cld
mov
cmc
ljmp
adcb
in
into
cmpsb
sbb
add
sub
or
jne
call
push
loop,pt
sti
cli
shll
push
xchg
hlt
sub
lods
push
sbb
mov
mov
push
stos
mov
cmp
popf
lahf
cmp
dec
dec
lds
fidivs
adc
test
sub
add
cwtl
stos
loop
addr16
xor
js
aas
gs
lret
loope
lcall
adc
arpl
clc
push
stos
mov
ds
test
popa
mov
or
cmp
xchg
icebp
adc
xchg
and
fs
pop
xchg
mov
inc
adc
mov
enter
sub
xor
xchg
cmp
or
cltd
add
xchg
sbbb
mov
cli
and
out
jbe
lcall
dec
test
cmc
mov
sbb
and
loope
out
dec
and
and
int
mov
add
fsubrp
sub
sub
mov
mov
mov
mov
shll
pop
fidivrs
sbb
push
pcmpgtd
sub
cmp
pop
pop
je
push
repnz
aaa
cmp
lods
dec
rorb
aaa
pop
push
adc
jmp
test
push
sub
sub
fbstp
jp
dec
js
xor
out
mov
aaa
and
popa
outsl
or
ss
das
dec
int3
sub
popa
mov
mov
pop
das
sbb
fnstsw
lods
rcl
add
add
pusha
mull
test
pop
pop
add
mov
imul
fmul
or
cmp
test
lahf
sub
imul
adc
jge
push
cli
scas
popa
fisubrl
cs
stos
clc
xor
stos
out
pop
dec
divl
fwait
pop
out
push
add
jmp
cmp
push
test
lock
arpl
fcomip
push
dec
sbb
adc
sub
inc
or
mov
out
mov
sub
adc
lea
inc
aam
jno
add
jne
push
iret
addl
rolb
dec
sarl
pop
xchg
sarb
or
popa
pop
rolb
sti
loopne
push
inc
mov
adc
push
stos
loope
loop
jle,pt
xchg
cmpsl
inc
lock
out
ljmp
sub
push
pop
jbe
nop
jle
mov
inc
cwtl
mov
shlb
bound
bound
pop
push
or
pusha
popa
mov
xor
leave
push
enter
jno
cwtl
or
shrb
ds
iret
fstpt
dec
push
ret
leave
cltd
xor
fadd
xor
ja
push
outsb
mov
mov
mov
addr16
and
push
fwait
mov
repz
pop
sbbb
and
je
rol
cwtl
mov
mov
stc
ret
jmp
add
rclb
mov
sahf
in
xchg
mov
faddp
popf
push
or
movsl
xor
jmp
pop
and
lods
pop
and
divb
xchg
push
fcoms
sti
mov
adc
add
pop
test
jae
push
iret
repz
int
jge
loop
movsb
hlt
and
add
scas
mov
cmp
add
lahf
cld
ja
xor
push
imul
sahf
pop
pop
sbb
lahf
xchg
mov
ljmp
stc
ljmp
aas
and
sub
and
in
add
into
sbb
lods
mov
fimull
sub
pushl
adc
mov
je
inc
xor
mov
and
cmpsb
add
stc
or
push
shlb
push
xchg
movsl
sbb
cmp
rcll
add
aad
in
sbb
push
out
les
sarb
mov
or
or
jle
add
push
repz
and
push
push
mov
mov
jbe
adcb
fs
daa
add
rorb
int
arpl
sbb
lret
and
aad
xor
xchg
mov
cltd
push
in
pop
lea
sub
xor
pop
scas
jno
test
ds
push
fidivl
decb
sub
mov
stos
pop
adc
nop
stos
orb
jnp
and
or
imul
fmuls
inc
shll
cmp
loope
cld
inc
ja
push
int
push
pop
hlt
daa
insb
leave
add
inc
xchg
sbb
rolb
adc
mov
jle
mov
aam
mov
ret
push
lods
jne
adc
mov
jge
daa
mov
and
push
mov
hlt
test
shlb
mov
icebp
stos
sbb
cwtl
or
test
and
lret
aas
or
and
and
lds
sub
cmp
loopne
nop
cltd
mov
sbb
dec
push
clc
in
mov
push
cwtl
ds
int3
dec
cmpsb
sbb
sub
dec
mov
cmp
and
mov
pushw
pop
subl
inc
push
insb
push
pop
mov
ret
sub
jno
mov
pop
fimull
inc
pop
pop
push
int3
and
mov
sbb
mov
and
aas
lods
loope
aam
or
mov
icebp
mov
cmp
icebp
imul
mov
sahf
rorl
fisttpl
add
aas
dec
data16
sub
jno
nop
aam
jne
int3
fwait
pop
pop
aam
dec
or
sahf
and
xor
out
les
ss
clc
and
mov
lret
xorb
mov
push
lods
sbb
push
ljmp
and
mov
jno
movsb
adc
movsb
dec
fwait
and
mov
cld
mov
out
out
aas
adc
pop
std
pop
test
add
movsl
inc
test
pop
xor
out
test
mov
dec
cmpb
decl
fcomps
mov
pop
mov
push
push
in
shrb
xchg
cltd
mov
out
cld
inc
and
mov
inc
cmpsl
ljmp
aas
push
xchg
dec
mov
jns
jmp
mov
mov
in
scas
jne
ds
dec
push
jo
pusha
push
push
push
stos
lea
sbb
sbb
jo
xlat
mov
cld
inc
and
loop
xchg
mov
mov
sub
int
and
mov
add
adc
jnp
mov
mov
enter
inc
bnd
add
pop
sbb
xchg
and
xchg
xor
mov
pop
mov
jge
add
outsl
outsb
fsts
mov
jmp
mov
cmpsb
insl
aas
xchg
push
ja
pop
repnz
pusha
out
jp
imul
rorb
pusha
xchg
jb
in
add
test
ss
add
lock
ret
add
dec
xchg
call
inc
in
imul
rolb
scas
inc
outsb
cmpsb
ds
inc
test
jp
inc
and
int
scas
sub
push
out
adc
or
jge
mov
mov
pop
mov
clc
sub
mov
bound
pop
and
in
rcl
dec
nop
scas
and
dec
push
sbb
pop
out
daa
stc
mov
xchg
xchg
subl
les
pop
inc
aam
xor
negl
cmp
inc
xor
mov
scas
mov
mov
xchg
jmp
fs
cmp
push
imul
sar
sbb
cmp
hlt
in
jnp
mov
bound
sbbb
xchg
repz
aas
add
out
add
adc
in
rcrb
push
inc
fldl
jmp
decb
inc
xlat
cmp
loopne
sbb
jecxz
lods
fnstcw
es
dec
lcall
dec
cmc
xchg
mov
test
sub
sbb
pop
gs
pop
daa
sbb
jnp
repnz
inc
test
jg
push
or
xchg
ds
mov
pop
or
ss
mov
mov
inc
jmp
xchg
dec
inc
dec
fisubl
jle
dec
xor
cmp
addr16
test
movsb
mov
orb
dec
sub
push
xchg
mov
mov
lods
sub
ret
in
pop
hlt
cld
cwtl
lods
data16
or
test
mov
lea
pop
popa
jns
or
xorb
nop
mov
adc
dec
inc
add
nop
and
aas
mov
cmp
mov
lret
dec
es
dec
cli
cltd
jle
adc
sub
push
adc
flds
cld
fimull
sahf
shll
add
push
push
or
mov
daa
lea
mov
mov
jge
sbb
popf
mov
insb
jb
pop
push
popa
pop
pop
and
jmp
decb
loopne
push
add
sbb
cmpsl
out
ja
sbb
inc
pusha
adc
notl
inc
sbb
xchg
ucomiss
mov
rdtsc
lcall
mov
add
inc
outsl
mov
pop
xor
pop
add
and
push
jb
js
pop
out
xchg
pushf
sub
jle
jl
sbbb
push
mov
neg
pusha
jnp
xchg
adc
push
add
jns
sbb
add
stos
mov
mov
push
les
xor
push
lret
inc
mov
mov
xor
jne
inc
cltd
lret
inc
out
xchg
inc
xor
sbb
js
not
inc
and
push
nop
push
xchg
xorb
pop
out
stc
jp
xchg
test
out
push
push
sub
cmp
sub
jl
fucomip
cmp
cmpsb
and
xor
xor
test
push
rorb
lds
or
xchg
and
xor
add
clc
loop
fsubs
icebp
jmp
jecxz
je
xchg
push
ss
cmpsb
fiaddl
xchg
aam
adc
aad
imul
dec
inc
jl
pushl
and
bound
lret
fadd
mov
cltd
loopne
xor
xor
loopne
mov
cli
idivl
push
addps
int3
mov
mov
mov
enter
fistl
push
sub
ret
push
call
ret
mov
fwait
pop
dec
mov
loope
shll
jmp
xor
xlat
add
pop
pop
jmp
or
or
or
pop
mov
mov
in
test
cmpsl
cmc
fidivs
sub
xor
dec
add
mov
mov
inc
xor
and
incb
xchg
xchg
dec
mov
inc
and
cmpb
dec
test
add
sub
es
adc
mov
xchg
jp
lret
faddl
push
xor
adc
mov
xor
repz
and
and
out
out
push
aaa
shlb
push
es
dec
pop
cmp
cmc
outsl
dec
cmp
movsl
scas
in
push
mov
sbb
mov
xchg
pushf
adc
mov
frstor
scas
mov
push
repz
das
add
adc
inc
or
test
xor
ficoml
push
jbe
stos
add
push
jae
push
ror
shrl
fcoml
loope
pop
scas
inc
cli
adc
les
in
cmp
inc
rcll
daa
mov
cmp
push
mov
out
fucom
pusha
popf
sub
icebp
push
mov
or
pop
lods
or
shr
cmp
test
push
fstpl
pop
das
and
sub
pushf
stos
or
pop
clc
cld
es
xor
orb
movsl
inc
mov
mov
cmc
jae
enter
test
lods
sarl
sub
mov
imul
shlb
xchg
test
xor
add
mov
pop
jbe
push
push
push
pop
out
in
lea
aam
ds
or
sbb
xor
push
enter
lods
and
or
add
inc
push
sahf
mov
popa
mov
aam
ja
test
mov
mov
inc
xchg
push
mov
sbb
divb
mov
mov
int
fildll
push
mov
fnsave
xor
into
cltd
and
adc
push
push
icebp
das
fidivs
pop
mov
mov
inc
lods
xor
daa
int
or
lcall
loopne
jae
rcrb
mov
mov
pop
sahf
xor
sub
ss
or
inc
mov
sub
rorl
in
mov
mov
in
rcl
sbb
ja
xchg
int
rolb
jg
mov
mov
mov
out
inc
cmp
aaa
aam
movsb
ss
das
stos
cld
scas
jl
inc
push
and
mov
cltd
add
lret
xchg
push
shr
fnstsw
lahf
adc
push
or
shlb
push
imul
and
dec
ret
daa
mov
test
cmpsl
in
into
push
shrb
push
shlb
pop
push
mov
and
cmp
mov
cmp
outsl
push
mov
sarl
jno
stc
mov
jp
dec
andl
mov
lods
bt
add
or
stc
scas
add
mov
js
repnz
push
inc
cmc
push
adcl
addr16
dec
pop
dec
insb
cmc
mov
fbld
dec
and
mov
mov
or
push
stos
or
xchg
push
jecxz
hlt
mov
xchg
mov
loope
add
jno
lahf
push
or
outsl
mov
add
push
rolb
int3
sbb
test
pop
push
loopne
andb
mov
cmp
lahf
das
lea
fucom
pop
cmp
vpmulhuw
lock
insb
shr
pop
dec
dec
mov
rcll
xchg
mull
insb
and
adc
mov
cmp
dec
sub
and
cmpsl
outsb
out
sub
in
movsl
xor
mov
sub
lods
push
push
adc
ss
mov
jne
dec
mov
push
mov
pop
pop
rolb
enter
mov
lea
sbb
mov
xor
push
pop
pop
imull
pop
out
rorl
daa
cwtl
sub
lahf
dec
xchg
psubsw
arpl
imul
mov
fnstsw
mov
push
jnp
and
add
pusha
sbb
loope
cmp
cld
pop
fsubrs
jbe
jb
xchg
jae
or
sbbb
ljmp
shrl
stos
rolb
test
xor
lods
dec
dec
nop
lods
xlat
inc
cmc
xchg
xchg
sbb
and
or
sbb
jns
ss
fstpl
xor
dec
jmp
cmp
jg
xor
aas
xlat
lahf
inc
inc
call
loopne
insl
dec
jbe
mov
mov
jns
ficomps
bound
cmc
add
ljmp
add
xchg
sahf
push
loopne
push
inc
mov
dec
inc
ret
shll
push
insl
jae
inc
jmp
push
pop
or
xor
xchg
loopne
arpl
and
divl
or
push
xchg
lods
lods
xor
std
imul
hlt
push
push
cmp
dec
sub
lahf
sbb
mov
push
insl
incl
call
mov
xlat
cwtl
daa
xchg
inc
sti
sbb
inc
stos
sub
dec
mov
cmpsl
pop
int3
fwait
pop
fdivrp
mov
stos
mov
mov
repz
rorb
sbb
fwait
adc
mov
test
push
mov
je
lds
sbb
xchg
loop
pop
call
ficoms
mov
in
addr16
add
sub
push
mov
and
mov
xchg
pop
xlat
ljmp
imul
xor
and
mov
mov
test
jae
roll
add
mov
nop
adc
daa
pop
adc
pop
inc
xor
push
sub
inc
jne
movb
leave
sbb
pop
data16
lods
add
pop
push
add
and
mov
and
dec
adc
popa
in
and
pop
mov
rcll
jle
dec
bound
xor
xor
xor
cmp
sub
sub
andl
les
repz
nop
cmp
xor
test
lret
jmp
fdivrl
xor
hlt
add
lahf
jle
pop
stos
cli
or
jae
fcoml
loop
push
sbb
cmpsl
sti
mov
lds
xor
lcall
mov
loop
aaa
nop
xor
outsl
push
fcom
xchg
ss
sbb
popa
pop
cltd
int3
push
loopne
mov
sub
nop
mov
mov
inc
pop
xchg
lods
sub
rcll
fdivrl
xchg
iret
out
pop
scas
movsb
pop
mov
inc
mov
sbb
pop
jl
repnz
flds
and
add
xor
mov
clc
add
movsl
pop
shlb
fistpll
pop
out
imulb
push
dec
ds
adc
mov
sub
cltd
push
mov
in
or
mov
mov
and
jmp
mov
cmp
outsl
daa
and
push
adc
xchg
stc
movsl
inc
mov
or
rorb
push
cmp
mov
gs
repnz
mov
mov
adc
test
jge
mov
xor
cmp
cmpsl
aaa
cmp
mov
xor
xor
push
cmpsb
gs
es
mov
popa
push
xchg
fisttps
and
aas
mov
sbb
cs
sbb
add
in
inc
add
jmp
testb
xchg
popa
pop
out
imul
fcmove
dec
shr
pop
mov
aad
stos
shl
rcl
pop
mov
pop
xor
lods
sbb
xor
fiadds
xchg
add
out
jg
sub
push
pop
into
jl
lock
xor
mov
mov
rclb
rcl
mov
pop
fs
pushf
sarb
ja
sub
jp
inc
push
xchg
xlat
jae
adc
push
sahf
jge
testl
das
fcompl
xchg
out
gs
xor
fstpt
lea
push
adc
pop
mov
mov
and
dec
inc
add
sbb
roll
pop
sub
cmpsb
lods
shrb
sbb
sub
imul
lret
mov
push
clc
fabs
jb
cmpl
xchg
psubsb
adc
and
dec
rcl
ljmp
int3
jns
mov
fnstenv
test
fldcw
aaa
js
outsl
push
or
cmp
pop
add
pop
out
movsl
jae
out
pop
test
ds
cld
js
pop
jecxz
out
test
mov
inc
leave
xchg
pop
test
mov
loope
fisttpl
rcll
mov
aad
gs
dec
outsl
in
and
or
cmp
in
call
int3
push
xchg
and
sbb
xlat
flds
enter
or
mov
out
shll
xor
adcl
jl
adc
enter
cmpsl
jno
dec
outsb
xchg
xchg
loopne
jne
test
jmp
cmp
cmpsb
or
pop
std
pop
push
xchg
roll
mov
mov
mulb
in
push
cmpsl
rcll
mov
cmp
jge
incl
push
lret
push
mov
std
hlt
dec
repz
in
jge
and
cmp
cmp
add
out
jle
xor
test
mov
mov
push
notl
or
loope
stos
mov
in
mov
dec
pop
insb
lock
addr16
in
shrb
mov
movsb
adc
adc
mov
icebp
mov
rorb
sbb
mov
nop
xchg
lods
in
mov
in
ja
push
inc
jge,pn
cli
por
dec
push
in
inc
stc
adc
ret
sbb
imul
pusha
add
scas
in
sub
cltd
pop
mov
cmpl
push
lahf
hlt
stos
imul
nop
lcall
xorb
ss
sub
mov
movsb
sti
cld
add
ja
lea
fstpt
add
sub
add
jnp
outsb
cwtl
cmpsl
mov
jp
mov
bound
jp
fdivrl
cs
mov
insb
mov
les
fildll
xor
fidivs
in
inc
fs
jecxz
out
push
jg
int
sub
imul
out
xchg
ds
or
push
push
mov
int
jg
fsubrs
sbb
mov
imul
psubsw
lcall
jp
loop
inc
lods
pop
js
movsl
sub
rorb
jmp
push
cmp
aam
or
sbb
icebp
xor
movsb
sti
mov
sub
pop
and
push
jns
cmpsl
movsb
mov
jb
loop
aam
scas
push
fdivr
icebp
mov
pusha
arpl
mov
xor
outsl
in
cs
repz
jns
imul
push
repnz
lods
cli
pop
push
cmc
mov
scas
pop
xlat
add
lods
repz
pop
fs
fistpl
ljmp
stos
mov
rcrb
inc
icebp
dec
dec
inc
stc
in
fiaddl
push
dec
movsb
out
jmp
pop
adcb
lea
movsl
out
mov
fimull
adc
mov
dec
int
dec
mov
dec
or
cmp
inc
or
push
data16
fwait
mov
loopne
inc
loop
fmul
aaa
lds
aam
push
xor
mov
or
rcl
xchg
dec
push
mov
sbb
lods
dec
adc
lret
mov
bound
jp
dec
lock
loop
test
sbb
lds
inc
inc
cwtl
daa
adc
daa
and
xchg
outsb
jge
dec
push
sub
nop
outsl
ficoms
mov
xor
mov
sub
std
mov
xchg
pop
aam
jge
test
inc
sub
ljmp
jb
pop
std
outsl
loopne
bound
cld
js
mov
push
out
int3
inc
jnp
push
add
pop
fwait
in
out
mov
call
push
mov
inc
popf
and
stc
xchg
push
lea
pop
adc
mov
or
push
iret
pop
fcmovnbe
scas
sti
pop
ss
xchg
or
inc
mov
loope
xor
mov
or
mov
cmp
and
mov
or
pop
scas
jbe
sub
pusha
mov
or
adc
adc
push
mov
outsb
icebp
add
idiv
sbb
jb
repz
mov
outsl
cmp
cmp
xchg
mov
push
mov
mov
cmc
das
inc
out
arpl
fsubrl
sbb
sahf
lret
lods
xor
pop
ljmp
jno
and
out
jge
cmp
ret
jb
cld
push
mov
loop
mov
in
movsl
repnz
roll
mov
dec
fildll
push
aad
scas
jp
xchg
xor
inc
cmp
fdivs
test
hlt
jmp
jp
adc
mov
divb
cmpsl
xor
inc
subb
loopne
out
and
mov
xchg
fidivs
jae
daa
mov
js
jge
push
popa
scas
xchg
in
mov
push
mov
adc
popf
dec
aad
mov
scas
xchg
cld
xchg
cmpsl
insb
mov
jp
clts
je
pop
push
add
inc
adc
clc
fs
iret
sub
push
xor
fnstenv
lds
into
sub
dec
popf
lods
add
or
add
hlt
xchg
test
stos
sahf
cmc
dec
inc
mov
aaa
ss
pop
loopne
aam
cmc
jbe
xchg
out
and
imul
pop
xchg
stos
sti
jmp
imul
fs
mov
pop
imul
test
add
cmp
aam
push
outsl
fs
dec
mov
arpl
xor
add
dec
int3
push
xchg
fxch
ja
pop
pop
jns
sbb
shr
into
btl
lds
lock
jle
sbb
and
mov
scas
iret
ds
popa
and
pop
xchg
out
stc
pop
scas
jle
xchg
cmp
mov
rcll
cmovs
jb
jle
jp
sbb
bound
push
pop
push
xchg
jae
mov
add
into
mov
adc
sbbb
mov
mov
iret
cmp
bound
xchg
dec
fisttpl
fidivl
push
push
loope
into
jb
les
es
das
and
sbb
mov
insb
and
adc
das
mov
push
mov
cmp
mov
mov
add
jl
mov
fadds
xchg
inc
sub
mov
bnd
sub
test
xchg
mov
bound
stos
and
xchg
pusha
mov
lcall
push
sbb
fwait
jp
mov
push
hlt
imul
daa
mov
fxch
imull
pop
scas
mov
push
xchg
arpl
add
and
pop
inc
sbb
stos
scas
lock
push
leave
xchg
cmp
lahf
push
mov
stos
rcrl
adc
sbb
and
and
aam
push
adc
dec
mov
push
push
fsubrl
adc
cmp
jb
stc
cmp
sbb
xchg
mov
or
xchg
sbbb
lock
mov
sbb
inc
pusha
loopne
loopne
lret
inc
mov
push
out
dec
int
push
and
sbb
add
push
add
inc
dec
ficomps
jp
add
adc
loopne
xchg
mov
into
add
or
mov
js
push
insl
stos
mov
lcall
xor
push
ret
xchg
lahf
mov
daa
dec
cmp
xor
and
xchg
ja
fwait
enter
test
dec
popf
mov
popa
jne
xchg
stos
sub
jo
pop
out
jns
jmp
cld
jecxz
xchg
push
ss
stos
sbb
push
in
or
enter
out
sti
pcmpgtb
xchg
cmp
outsb
test
jmp
call
pop
sbb
arpl
cs
fsubrl
imul
xchg
movsl
out
out
test
stc
mov
cld
pop
cmp
cmpb
mov
jmp
inc
sbb
add
mov
xor
xchg
outsb
in
sbb
or
xlat
inc
jl
push
xor
into
data16
add
push
add
pop
pop
pop
mov
add
pop
jb
icebp
imul
std
add
popa
fists
pop
mov
fmuls
inc
dec
xlat
pop
xchg
aas
mov
std
inc
and
and
xor
shll
out
clc
add
rcl
mov
out
pop
fwait
popf
cmp
cs
mov
mov
xor
sti
cmp
mov
pop
xchg
xchg
xchg
cmc
imul
testl
js
dec
notb
sbb
fisubrs
in
push
fldcw
inc
ljmp
mov
push
mov
scas
aas
dec
dec
and
mov
nop
in
repnz
add
pop
fcmovu
mov
daa
adc
call
inc
cld
cwtl
or
roll
mov
mov
xor
nop
dec
xchg
insb
pop
push
leave
add
jle
dec
jae
or
cwtl
sub
jp
jp
lret
jg
xor
dec
pop
jne
xlat
fisubrs
icebp
outsb
mov
mov
xor
pop
lock
out
fadds
andl
outsl
loop
cmp
xchg
mov
sti
and
pop
push
push
or
or
loopne
xchg
out
arpl
and
scas
dec
in
lret
aam
hlt
add
and
shll
mov
add
jg
add
dec
mov
idivl
pop
and
mov
add
out
out
push
in
mov
gs
ror
in
or
xchg
xor
test
arpl
add
and
mov
scas
int
add
stos
sub
cmp
js
adc
pop
test
shll
loope
xor
cmpsb
jb
pusha
pop
int3
push
pushf
popa
sqrtps
xor
xchg
adc
xchg
sti
mov
mov
inc
out
sahf
mov
ficoml
aaa
test
mov
xchg
mov
imul
jnp
imul
shll
maxsd
mov
inc
outsl
dec
mov
cmp
outsl
and
gs
mov
dec
dec
repz
sub
hlt
sbb
lcall
jg
dec
or
jp
push
aam
cmp
ret
icebp
inc
or
stos
es
xchg
repnz
repz
push
ja
out
pop
sub
pusha
jle
imul
xchg
push
movsl
movsb
cmp
push
mov
xchg
jp
fidivs
xchg
mov
test
test
dec
das
ja
pop
repz
or
fimull
sbb
shufps
mov
pop
sbb
pop
mov
xchg
add
imul
cmp
mov
add
cmpsl
shlb
pop
or
roll
mov
inc
nop
aas
icebp
jne
jecxz
gs
ficomps
mull
fldln2
test
xchg
dec
icebp
mov
sbb
cmp
dec
mov
outsb
cmpsl
add
adcb
add
mov
sbb
insb
arpl
mov
pslld
adc
into
adc
lret
test
cmp
test
insb
xchg
mov
or
hlt
cmpsb
aad
mov
jle
mov
jne
ss
mov
lret
or
add
mov
jb
and
sbb
ret
xchg
aad
jne
cwtl
jl
and
mov
mov
cltd
cmp
std
adc
cmp
mov
test
test
test
sti
adc
shll
push
ja
dec
mov
push
stos
mov
jnp
sbbb
pop
cmpsb
les
insl
and
xlat
in
rorb
jno
rcrl
and
xor
push
nop
add
sub
pop
hlt
mov
insb
clc
inc
cli
adcb
add
iret
dec
inc
ret
sarl
dec
jecxz
inc
movsb
mull
inc
test
jbe
mov
insb
cmp
in
xor
dec
add
test
adc
add
dec
js
adc
ljmp
xor
xor
mov
dec
mov
inc
out
push
adc
push
stos
or
sahf
std
aad
cmp
andl
lea
mov
xor
pop
fs
jp
test
push
push
rcl
iret
jp
cs
sbb
iret
mov
adc
and
pop
sbb
cmc
xlat
pop
mov
inc
mov
mov
sub
jmp
push
xor
dec
xor
jns
cltd
and
fimuls
jl
mov
out
fsubl
repnz
xchg
nop
std
clc
inc
mov
pop
rcl
rcl
repnz
ljmp
push
dec
pop
jl
push
leave
push
dec
mov
sub
or
mov
jne
xchg
dec
xor
or
xchg
mov
filds
popl
and
ds
mov
movsb
rcrb
xchg
and
dec
cmp
or
aaa
or
inc
iret
pop
xor
jno
testb
stos
xor
lcall
inc
lcall
lds
or
in
jno
cmp
push
sbb
push
sub
neg
sbb
pop
sbb
lea
sti
sbb
stos
cltd
hlt
aam
lds
xor
add
in
shlb
lods
xchg
sbbl
or
rcll
aas
push
sub
das
sahf
sub
xor
sbb
out
es
pushf
in
cmp
ja
loope
insb
mov
insb
sbb
insl
cwtl
adc
in
pushl
addr16
pop
fucom
add
jle
add
inc
addb
aad
pusha
js
dec
jl
movsl
decb
mov
mov
aam
xlat
add
xor
sbb
cmp
or
das
push
loop
aaa
in
mov
xor
shll
outsl
mov
cs
jle
mov
push
cwtl
dec
sub
cmpsb
dec
inc
dec
dec
mov
mov
icebp
cld
call
inc
jmp
pop
lock
stos
data16
test
lcall
jecxz
sub
add
sub
xchg
push
cmp
jnp
iret
cli
leave
es
test
test
mov
xchg
cwtl
test
push
xor
mov
out
xchg
ret
iret
push
sbb
xor
ficomps
jge
mov
adc
mov
test
jns
mov
pushf
jno
je
push
pop
ret
jae
dec
popa
xor
test
out
mov
push
and
xchg
or
fidivrs
mov
fnsave
and
std
out
and
pop
mov
inc
mov
xchg
xchg
stc
mov
xor
out
mov
jmp
mov
jmp
adc
shrb
aam
jns
je
and
and
scas
fnstcw
loope
sub
push
adc
and
push
sbb
and
insb
inc
jb
lock
int
orl
cmpl
push
cmp
jmp
fs
lahf
push
dec
dec
lret
xor
mov
pop
pushl
sbb
int
scas
xchg
jb
xor
xor
shll
gs
dec
ja,pn
scas
xor
pop
jae
js
lcall
jp
xchg
andl
cmp
jo
repnz
popl
adc
xor
push
xchg
pushf
rol
xchg
jge
xor
xchg
jae
inc
jbe
in
icebp
in
mov
shlb
mov
mov
mov
jg
and
mov
jmp
jl
popa
es
std
jno
dec
lret
mov
fidivs
je
aas
incl
sbb
add
cwtl
adc
mov
cmpsl
and
in
push
and
and
test
pop
in
dec
fnstenv
int
leave
inc
lods
stc
xor
dec
mov
stos
push
dec
popa
pop
in
mov
aas
insl
xor
faddp
dec
dec
ja
mov
ss
push
push
mov
dec
push
popf
addr16
or
or
cmp
jmp
sahf
in
enter
ds
add
or
inc
sahf
pop
push
cmp
push
adc
in
mov
dec
lret
pusha
adc
cmp
cmp
xor
add
insb
pop
lods
add
mov
decb
xchg
cmc
xchg
lea
mov
fprem1
mov
out
shll
filds
push
xchg
jmp
test
adc
mov
insb
int
mov
lds
lods
into
and
fnstenv
int3
loope
lret
fwait
ds
shrb
movsb
inc
ror
rcl
mov
adc
out
sbb
mov
cli
push
stos
dec
fcmovu
xor
and
call
dec
mov
or
in
lcall
out
xorl
mov
aad
and
mov
dec
fsubr
ja
adc
sub
dec
adcl
xchg
push
push
and
lcall
iret
pop
roll
jb
pop
lcall
lret
daa
pushf
xor
sbbb
stos
scas
inc
pop
adc
mov
or
sub
sahf
aam
sbb
cld
bound
call
add
bound
gs
xchg
pop
xchg
gs
addb
and
lds
dec
xor
pop
and
or
push
ljmp
and
lods
scas
lods
es
add
push
aad
ja
rcl
cmpsl
sbb
pushf
addr16
sarb
push
jg
in
jmp
jp
adc
push
aas
mov
fidivs
dec
out
adc
jmp
in
dec
subl
mov
mov
pop
out
lods
movsb
sub
fiadds
push
xchg
pop
adc
jl
adc
repnz
dec
cltd
xor
lea
jb
cmp
pop
jmp
sub
out
rolb
xchg
push
in
pop
sbb
cwtl
pusha
imul
lds
add
out
mov
hlt
jl
test
mov
lret
iret
test
stc
lahf
out
jl
lock
nop
xchg
cli
fucomi
mov
out
jns
dec
sub
insb
outsb
outsb
mov
sub
add
out
cmp
pushf
in
fstps
nop
cmp
jg
mov
jno
int
mov
bound
insb
nop
in
test
popf
outsb
scas
icebp
push
ja
inc
cmp
jo
arpl
mov
and
daa
mov
mov
sahf
sbb
or
insb
rclb
std
pop
jl
sarl
int3
pop
jns
push
ror
mov
hlt
or
pop
dec
sub
test
sbb
jg
push
daa
xchg
in
mov
mov
in
add
mov
pop
or
pop
sub
jg
dec
mov
mov
xor
fnsave
mov
lret
dec
jae
out
and
push
mov
push
xchg
sbbb
and
sbb
xchg
imull
int3
xor
jbe
mov
adc
aas
nop
jecxz
push
push
mov
sub
insb
test
rolb
std
orl
jl
mov
pop
cmp
pusha
ljmp
movsb
adcl
cmp
cmpsl
cwtl
mov
xchg
outsl
pusha
pop
aam
jne
xchg
bound
mov
dec
mov
push
call
inc
jae
fcoml
ss
mov
popa
sbb
int
jb
xor
lahf
jnp
cmpsl
jb
and
adc
popf
cmp
adc
xor
pop
inc
push
jge
je
pushf
add
cmpsl
cs
sbb
adc
ljmp
and
xor
lret
add
popf
iret
mov
movsb
pop
das
xor
and
sbb
xor
add
and
sub
mov
pop
cmpsl
dec
and
sub
je
shlb
jge
movsb
gs
into
push
ja
rcr
push
add
cmc
mov
xchg
idivb
mov
ljmp
ret
jbe
into
in
fwait
dec
and
aaa
lea
inc
outsb
ja
add
add
adc
in
push
out
push
addr16
cmp
sti
je
mov
in
sti
mov
push
fisubrl
cmp
int
and
mov
dec
add
jno
mov
mov
jns
inc
into
imul
cmp
loop
inc
jo
je
jmp
call
lods
pusha
inc
jnp
cmp
add
gs
call
shll
lea
ljmp
rclb
cmpsl
add
popa
lret
cmpsl
dec
test
xlat
cld
pop
daa
int
shr
loop
cli
stc
stos
out
xchg
add
cmp
loop
sbb
dec
aas
cmp
jns
lock
fists
cld
push
mov
adc
sbb
push
lods
push
xchg
rcrb
fisubs
fmulp
out
std
cs
add
lcall
jne
add
fwait
xor
dec
insl
jno
xor
fmul
out
aas
push
aad
jo
sbb
shr
add
jge
push
fists
fsubrs
mov
sbb
mov
addr16
push
pop
and
shrb
lods
cmpsb
adc
es
xchg
imul
fmul
mov
sbb
dec
subl
inc
addb
push
add
sbb
imul
add
mov
mov
xlat
negb
xchg
mov
cmpsb
data16
loope
mov
sbb
mov
loop
loope
outsb
adc
aad
mov
cmp
lret
fcom
or
inc
push
sarb
sub
inc
sub
ss
inc
xchg
xchg
int
fmull
mov
jp
adc
and
rol
ret
inc
lds
inc
pop
lock
sbb
mov
pop
add
mov
shrl
jl
es
mov
add
jno
pop
mov
dec
into
sbb
jl
rorl
sub
dec
jmp
int
and
sbb
out
inc
cmp
adc
andl
mov
push
xor
int3
pop
mov
mov
pop
loop
inc
pop
enter
pop
out
nop
jg
stos
les
enter
mov
push
cs
xchg
sub
sti
jno
or
cmpl
fadds
sub
test
pop
or
nop
or
jmp
jg
imul
cltd
xlat
adc
pop
pop
and
cli
mov
push
loopne
arpl
pop
into
std
imul
addb
or
movsl
xchg
daa
pop
rolw
pop
and
aaa
xchg
jle
adc
mov
inc
enter
sub
cmp
mov
push
sub
or
mov
lea
sahf
repz
jle
fs
push
jg
subb
imul
addr16
mov
ja
negl
in
fcmovnb
insl
adc
cmpb
jl
xchg
mov
movsl
and
jbe
xor
imul
insb
incb
out
cmp
dec
fisubrs
push
subl
negb
dec
fcoms
sarb
pop
and
mov
bound
add
and
jecxz
stc
sub
push
mov
movsl
xor
inc
jp
cmp
stos
cmc
es
xor
dec
out
xchg
adc
cld
mov
out
mov
cmp
stc
fs
sbb
ds
adc
jp
and
inc
mov
fildll
cs
outsb
sbb
push
lret
adc
cmp
jmp
rcrl
stos
fdivs
mov
icebp
inc
in
ret
push
cli
add
sbb
int3
ss
arpl
xor
mov
pushf
or
mov
inc
sbb
jns
xor
imulb
dec
fwait
sub
inc
xor
frstor
addr16
mov
test
fists
stc
cmpb
pop
call
push
mov
cmp
jae
mov
push
fisttps
inc
fnstsw
aad
or
cmpsl
cmpsb
loop
pop
push
lds
std
divl
pop
lea
dec
mov
sarl
push
sub
mov
mov
test
gs
cwtl
mov
mov
arpl
lds
cs
push
sbb
out
clc
mov
sti
fisttpl
mov
or
or
inc
xor
xor
sbb
popf
stos
and
ds
add
adc
mov
lods
scas
sbb
fmul
cmp
xor
add
lahf
pop
jbe
dec
insl
into
dec
leave
jp
jmp
ror
xchg
fwait
shlb
sbbb
rolb
adc
jnp
add
repz
xchg
fisubs
leave
sbb
jae
dec
out
sti
pusha
stc
icebp
addr16
mov
dec
mov
sbb
pop
cmpsl
cs
lret
popa
shrl
xchg
sub
cmp
fisubrs
clc
cmp
clc
aaa
sbb
sbb
push
fsubl
insb
pop
es
jb
in
lret
js
out
out
sub
mov
adc
add
mov
mov
imul
jns
sbb
ss
jl
call
adc
cmp
xor
daa
xor
cld
or
jns
inc
inc
mov
mov
push
dec
push
cmpsl
pop
movsl
push
mov
xchg
insl
sti
lds
jmp
movsl
xchg
popf
or
stc
xor
mov
sbbb
lahf
ret
aaa
aaa
sahf
inc
mov
xor
mov
fstpt
xchg
iret
out
dec
xor
and
cld
push
jne
femms
xchg
jo
dec
cmp
cli
xchg
add
movsb
pop
repnz
clc
cmp
stos
adc
or
test
sub
fbstp
pop
add
lea
adc
out
fs
xchg
aam
mov
or
call
mov
mov
xor
fs
dec
in
mul
dec
loop
jge
lret
jg
ret
jle
dec
xchg
lahf
fistpl
out
aaa
in
enter
cmp
pop
loop
jo
out
xchg
inc
cmp
push
unpckhps
push
incl
xchg
or
pusha
sbb
adc
mov
sti
test
inc
ret
jbe
mov
mov
sbb
dec
insb
jnp
dec
in
int
mov
push
sub
repz
add
sahf
xor
sbb
jmp
mov
mov
insl
lea
xchg
lods
mov
cwtl
jns
arpl
pushf
jmp
fwait
sbbl
jl
sub
mov
cld
aam
out
push
adc
lahf
ss
jmp
push
dec
das
xor
aaa
pop
popf
and
cltd
clc
popa
insb
cmovbe
test
outsl
into
jo
pop
in
lahf
or
jno
js
or
and
ja
or
inc
jno
adc
push
addr16
xlat
and
fwait
cmp
sub
cmp
cmpsl
lret
push
push
push
jmp
cmp
add
mov
pop
fcompl
mov
mov
adc
fdiv
repnz
imul
inc
cmpsl
out
mov
test
or
cld
sub
and
adc
adc
and
not
and
sub
and
scas
pop
and
fs
lock
jno
pop
fs
mov
ss
jmp
pop
push
movsb
int3
jge
mov
shll
xor
shlb
mov
adc
push
data16
dec
stos
lret
lods
fnsave
test
fbstp
int
jns
mov
sbb
xor
push
dec
inc
mov
out
scas
xor
pusha
lret
add
pop
mov
repz
sahf
cmc
mov
jge
mov
jbe
pop
imul
mov
jno
mov
js
add
gs
push
push
repz
and
inc
pop
leave
push
aam
sti
in
or
int3
out
jl
test
arpl
dec
ljmp
sbb
lret
push
roll
in
mov
dec
add
xor
mov
xor
inc
je
xchg
lahf
es
ss
push
pop
aam
aaa
and
addb
in
inc
enter
xor
mov
xchg
into
cmp
xchg
pop
insl
movsl
int3
and
sbb
push
shll
sbb
push
fisttps
xchg
lods
mov
pushf
cmp
aas
push
jp
mov
inc
outsb
test
out
nop
call
push
lods
test
mov
jp
pop
xor
or
out
and
mov
push
push
out
imul
cli
scas
insb
outsb
mov
in
dec
dec
in
cld
mov
dec
outsl
sbb
das
add
nop
shll
add
out
sub
lcall
inc
cmp
mulb
inc
decl
push
cli
cmp
push
push
cwtl
pop
fidivl
in
xor
dec
loope
rorl
in
pop
ret
fmulp
mov
ret
pop
push
test
push
sub
cmp
lahf
push
sarb
rcll
bound
add
jns
and
sub
lret
push
push
divb
cld
and
inc
fs
leave
push
outsl
mov
cmp
pop
mov
xchg
shr
inc
idiv
fadds
and
insl
mov
outsb
jno
divb
xor
in
add
push
leave
adc
mov
pop
sbb
fldl
popa
mov
stos
sub
push
mov
and
sbb
andl
sar
mov
cmp
pop
push
es
int3
pop
jl
mov
popa
in
sbb
xchg
mov
sarl
aaa
shl
gs
and
xchg
cmp
xor
push
leave
sti
or
icebp
xchg
inc
in
jp
dec
icebp
mov
roll
daa
dec
sti
les
call
cmp
sahf
mov
shr
mov
cs
lock
xlat
jbe
push
push
cmpl
jbe
dec
mov
push
dec
out
dec
inc
jle
rorb
orb
cmp
movsb
lds
loope
adc
push
fsubrp
lods
fiaddl
mov
xchg
lock
add
dec
and
cmp
nop
dec
dec
test
mov
mov
or
test
lret
xlat
fcomi
push
pop
jle
jb
or
jg
xchg
in
out
push
in
ret
in
jne
fiadds
in
jnp
aaa
int3
inc
cmc
mov
pop
rclb
fadd
cmp
js
fsubs
jl
sub
xor
adcl
popa
dec
imul
push
add
sub
loop
mov
sub
loopne
xor
push
imul
test
lcall
jl
cmp
cs
aas
lock
and
cmp
popa
dec
jecxz
les
movsl
inc
push
jo
in
fimuls
inc
cwtl
loopne
inc
jnp
xor
mov
insl
adc
adcl
pop
add
inc
cltd
dec
xlat
add
mov
ss
or
xor
and
leave
movsl
push
nop
cs
mov
stos
mov
xchg
mov
xchg
add
xchg
out
nop
pushl
sti
int
push
pushf
jbe
cmp
mov
xchg
imul
mov
mov
inc
fsubl
iret
aam
xor
jp
ds
in
sbb
js
push
xchg
add
into
lds
popa
test
dec
or
inc
sub
and
dec
cmp
mov
dec
mov
fdivrl
push
sbb
lds
xchg
or
sbb
shr
roll
incb
cmc
and
dec
pop
or
pop
sahf
ret
ljmp
testl
outsl
xor
inc
mov
outsl
inc
dec
xlat
mov
inc
call
imul
jno
cmp
scas
icebp
jl
in
in
or
cwtl
pop
dec
ret
cmpsb
cwtl
push
mov
cmpsb
xchg
adc
mov
sbb
xchg
jle
mov
xlat
inc
xchg
or
ja
add
adc
sub
or
loop
sub
arpl
mov
sbb
popf
add
jge
inc
jecxz
gs
jge
xor
ret
js
sbb
inc
pushf
jle
shll
mov
mov
xchg
fwait
lea
sbb
pop
out
push
add
sbb
or
sub
cmp
lods
fwait
cmp
jns
mov
nop
pusha
sbb
mov
adcb
push
ficoms
adcb
fbstp
pop
mov
mov
rcll
cli
shl
ret
loop
das
mov
mov
xor
jne
roll
cmp
push
jecxz
rcll
or
or
jmp
adc
dec
push
and
ljmp
jnp
or
dec
jb
pop
push
lods
jg
scas
jo
mov
jno
aad
xchg
or
jge
mov
jae
data16
mov
std
cltd
test
or
sbb
popa
push
mov
pushf
and
ds
add
cld
adc
js
lahf
out
inc
out
cmc
and
andb
rorl
adc
dec
rcrl
adc
jmp
sbb
popf
cvtps2pi
dec
lock
les
mov
sub
aad
jmp
pusha
lods
xchg
or
dec
xchg
gs
mov
cltd
xor
and
js
mov
xchg
stos
push
xor
xchg
icebp
neg
andl
xchg
xchg
sbb
push
mov
push
and
mov
mov
adc
lret
pop
inc
push
popa
test
decb
movsl
pop
pop
adc
mov
jg
adc
push
rorb
lods
jo
lds
and
outsl
sbb
push
cmp
pop
les
or
ja
jne
cmp
in
nop
lock
xorl
push
gs
cmp
mov
xor
movsb
out
mov
jo
jp
jbe
mov
lock
inc
push
ja
lcall
outsb
pop
sbb
or
inc
cltd
xchg
and
int3
adcb
mov
mov
movsb
pop
les
std
into
ljmp
shrl
sub
xchg
jo
mov
arpl
mov
cmp
push
lds
orl
cmpsb
pop
jl
sbb
pushf
add
popa
fiaddl
jbe
or
xor
jo
cmp
enter
mov
dec
daa
fidivrl
dec
cwtl
and
xor
cmp
sub
lret
mov
cltd
cmp
mov
sbb
ss
and
dec
cvttps2pi
test
sub
cmpsb
sbb
pop
cltd
aas
push
or
lret
inc
inc
jb
mov
jae
add
leave
lret
xchg
aam
lret
jp
cmpsb
sbb
jmp
sub
lcall
push
rcrl
lock
push
int
adc
hlt
mov
jno
mov
cmpsb
cmpsl
mov
dec
test
mov
sahf
mov
lods
scas
push
mov
lahf
fimuls
loop
lcall
pop
ficompl
loope
in
neg
inc
dec
mov
ss
xor
cmpsb
cwtl
lock
loopne
jl
xchg
loop
cmp
jns
shlb
dec
ss
in
mov
and
xchg
aad
xlat
jmp
ficoml
xchg
std
cli
push
push
dec
icebp
cmp
add
fsub
pop
jbe
ss
in
jp
adc
stc
orl
clc
dec
push
cs
aaa
ss
mov
out
rorb
loopne
sbb
add
jbe
lea
sbb
je
cltd
add
jmp
mov
dec
sbb
sti
stos
setae
and
jnp
pop
xlat
pusha
pop
mov
mov
insb
cmpsb
fwait
or
push
es
out
cld
cmp
add
or
or
cwtl
push
jmp
lods
int3
loopne
ficomps
movsl
inc
imul
sbb
fdivp
cmp
scas
xchg
repz
and
icebp
popf
les
cld
mov
mov
lds
mov
pop
loopne
movsl
lods
or
sub
pop
pop
jle
out
add
mov
cmp
fists
sbb
push
xor
cld
xchg
aam
mov
arpl
mov
dec
xchg
fistl
test
sbb
pop
and
mov
popf
ljmp
add
mov
cwtl
dec
leave
push
imul
mov
sbb
pop
test
jnp
push
bnd
xorb
sub
mov
push
test
pop
mov
addr16
cmp
inc
push
sbb
bound
xchg
lods
dec
int3
xor
popa
mov
adc
mov
int3
das
daa
dec
jp
sbb
stos
push
into
fimull
xchg
repnz
sbb
outsb
stos
dec
ror
mov
loope
pop
faddp
andl
push
movl
and
inc
imul
aaa
clc
in
jnp
cwtl
pushf
push
cmp
inc
push
shll
mov
sub
in
daa
and
inc
add
and
arpl
xchg
cmp
pusha
jp
fucomi
mov
inc
pop
insl
cmpsl
xchg
sbb
mull
mov
sub
cmp
je
mov
movsl
mov
fcmovne
mov
dec
insl
push
js
mov
dec
xchg
adc
movsl
rcll
je
inc
xchg
loope
xor
jne
lds
sbb
pop
or
imul
sub
push
add
lds
inc
dec
movsl
inc
sbb
sbb
jb
adc
sbb
les
addl
mov
mov
xchg
test
pop
or
xor
inc
xchg
inc
loop
dec
jge
arpl
push
aad
std
dec
adc
dec
mov
adcl
pop
mov
stc
hlt
scas
mov
adc
inc
inc
fwait
lcall
popa
mov
mov
adcl
xor
pop
xor
hlt
sbb
adc
mov
sbb
sbb
mov
stc
xor
ss
sahf
adc
arpl
into
pop
xorb
orb
cs
push
fcmovne
test
int3
repz
add
mov
mov
dec
incb
popa
lret
or
imul
out
mov
cmp
in
scas
cmp
push
or
push
mov
fs
jo
mov
jle
lret
stc
cld
sti
sub
dec
lea
and
ret
push
mov
shrl
scas
jne
les
fildl
cltd
sbb
inc
cmp
pop
dec
push
in
and
jg
rol
sahf
out
mov
aad
sub
mov
mov
dec
neg
repz
testb
cmp
popa
push
mov
fiaddl
jge
jg
out
xchg
daa
add
mov
into
pop
and
mov
mov
mov
jg
daa
xchg
xchg
jmp
mov
or
mov
jmp
inc
insb
fdivrl
addr16
out
insl
add
aad
push
pushf
in
pushf
sbb
cmpb
aam
ds
lods
push
mov
daa
xchg
cmp
js
fwait
scas
iret
pop
mov
push
test
je
jnp
cltd
in
lret
adc
or
lock
jge
dec
aaa
stos
mov
idivl
add
pop
mov
cmpsl
int3
dec
mov
jae
cld
loop
mov
repz
jns
pop
dec
jp
jecxz
sbb
mov
lret
movsb
xor
mov
pop
adcl
inc
in
cld
dec
pop
ret
stos
mov
sub
adc
out
ljmp
mov
in
cmpsl
or
test
sub
mov
lret
and
add
icebp
push
push
stc
cmc
rol
dec
rcrl
loope
dec
insb
inc
iret
xchg
aam
jb
into
pushf
sbb
loope
sbb
pop
mov
jl
xor
push
out
jl
ljmp
dec
fsts
push
ret
ds
mov
or
sbb
and
lea
es
push
pop
jmp
stos
adc
jg
scas
pop
rol
popf
jnp
or
sub
mov
and
jae
xchg
sub
mov
pop
jmp
mov
jae
lock
dec
pop
inc
inc
ja
aaa
bound
and
ss
pop
sbb
stos
cmc
sti
repz
movsl
or
mov
adc
lret
sub
xor
add
icebp
aas
loopne
cmovb
pop
push
push
adc
or
outsb
cmpsb
in
sarb
push
cmp
enter
out
lods
cmp
mov
sub
sub
and
jns
outsl
add
ret
roll
icebp
inc
push
movsl
pop
dec
std
and
mov
cli
sbb
sbb
and
adc
push
lods
lcall
jbe
cmp
and
and
and
pop
mov
out
gs
xchg
xchg
dec
int
jno
sti
and
aam
cmp
test
int
js
mov
mov
rcll
xor
xchg
fs
imul
push
mov
sub
jae
mov
add
sbb
lds
push
sti
int3
or
xlat
pop
jno
xchg
mov
lock
xchg
mov
leave
xchg
pop
push
pop
sub
mov
jo
scas
ss
test
outsl
shll
mov
scas
adc
mov
jns
sbb
xchg
cmc
lock
or
not
popa
cmp
xor
push
mov
dec
mov
dec
mov
push
or
mov
es
cmpsb
jle
fwait
jg
cmp
ds
mov
sbb
mov
or
outsb
cltd
ja
es
jmp
mov
mov
inc
mov
ret
mov
push
xchg
inc
adc
push
sahf
add
fwait
test
ja
pop
mov
mov
mov
add
pushf
stc
fld1
jb
pop
xorl
push
andl
inc
push
out
jg
add
in
pusha
inc
sub
pop
int3
loop
testb
pushf
mov
mov
mov
mov
ljmp
ljmp
sbb
cmp
mov
aad
sub
mov
and
bound
mov
jbe
inc
cli
jle
mov
mov
jo
jo
push
bound
sbb
push
xchg
inc
test
push
shrl
add
mov
add
push
mov
inc
in
rol
loop
aam
rolb
enter
adc
push
pop
in
rcrl
bound
lea
cmp
push
fcmovu
notb
int3
cmpl
fld
pop
rcll
mov
xchg
jnp
pop
xchg
sub
and
in
bnd
fdivl
xchg
shlb
int
adc
imul
lock
sub
or
or
sbb
inc
pop
nop
pop
mov
scas
or
mov
xlat
mov
fcomps
les
jno
mov
sbb
cmp
xchg
jge
imul
sahf
lret
gs
xchg
xor
dec
xchg
out
stc
pop
add
or
addl
or
jmp
data16
push
in
test
test
arpl
mov
test
es
or
push
xor
stos
test
adc
sub
stc
add
imul
sub
jmp
sbb
cs
test
fwait
stos
dec
movsb
xchg
repnz
pop
test
data16
pop
push
loope
das
iret
add
add
cld
mov
adc
ds
and
mov
sub
inc
movsb
mov
mov
jecxz
cmpsb
sbb
sub
movsl
xchg
push
jnp
aad
arpl
test
jl
xor
iret
inc
cmp
inc
popf
mov
dec
push
mov
mov
sub
mov
inc
jo
sbb
pop
add
pop
mov
mov
push
xor
mov
fsubl
mov
add
pop
aaa
sub
push
aaa
xchg
aaa
sub
nop
bound
jne
test
sbb
ret
add
pop
mov
jmp
cmpsb
add
js
rcll
cmp
shrb
cmp
rcr
xchg
dec
call
daa
jae
int3
cmpsb
cmpsl
call
jmp
xchg
dec
pop
ss
and
mov
pop
int3
xchg
adc
imul
xor
icebp
ret
fbld
add
ret
insl
insl
sar
inc
and
das
subl
dec
loopne
inc
out
cmpsl
adc
xchg
dec
add
adc
inc
pushf
jecxz
mov
outsb
cmp
fimull
push
pop
inc
in
shlb
cmp
test
pop
pop
adc
call
vcvttps2dq
pop
aam
int3
xchg
push
out
or
add
pop
xor
loop
xor
in
cmp
mov
pop
mov
pusha
scas
push
iret
loope
stc
jmp
cli
jge
mov
jno
in
cmpsl
icebp
cmc
push
call
sbb
daa
xchg
pusha
mov
test
dec
sbbb
jl
jmp
movsl
push
je
xchg
jno
cmpsl
jae
jp
mov
fnstcw
mov
or
jmp
loope
rcl
out
out
insl
xchg
loopne
ljmp
test
cmp
movb
scas
aad
mov
jp
fisttpll
fwait
orl
nop
or
push
fcom
mov
in
jb
or
cwtl
and
sub
int3
outsl
lcall
rclb
cmp
push
xchg
mov
jne
loopne
mov
test
mov
xor
mov
pop
mov
add
cmc
pop
sbb
sub
mov
lret
jb
pushf
xchg
mov
test
push
in
lahf
test
mov
cmp
push
sub
xchg
jo
sbb
mov
jno
int
int3
jecxz
xchg
cmp
add
inc
enter
das
and
ljmp
lods
push
test
int3
in
pop
pop
outsw
lcall
int
or
out
lret
mov
xchg
into
ss
lahf
pop
push
loope
cs
test
push
ja
aas
mov
sub
ds
shll
and
sbb
clc
dec
push
xor
adc
pop
push
push
push
cmp
repz
or
movsb
inc
push
inc
insb
mov
mov
cltd
mov
and
push
jnp
inc
mov
repnz
fdivrs
mov
in
xor
test
lret
and
cmpsl
rorl
insb
call
popf
mov
lods
and
jecxz
dec
movsl
add
pop
xchg
inc
and
add
mov
dec
subl
test
mov
je
clc
stos
fnclex
or
lock
mov
adc
int
out
mov
fs
xchg
fstpt
jmp
push
pop
movsb
sub
inc
idivb
decl
addr16
out
xor
mov
rep
fistpll
addr16
xcrypt-cbc
cmpsl
xchg
lods
add
pusha
jne
jmp
data16
cmpsb
pop
leave
in
cmp
out
lcall
push
dec
pushf
dec
fdivrp
adc
enter
mov
fstpl
pop
pop
mov
mov
scas
std
sbb
outsb
adcl
inc
adc
bound
jb
sbb
mov
mov
cmp
and
lcall
and
push
dec
sub
cmpsb
rorb
dec
loop
dec
scas
dec
shrb
pop
push
stos
mov
adc
cmp
aaa
movsl
push
xor
and
mov
xor
in
add
mov
cmpsb
push
xchg
mov
rorl
lock
inc
test
rclb
xor
push
add
mov
out
js
faddl
xor
fldenv
add
mov
push
fwait
pusha
mov
sbb
mov
pop
fldl
xor
xor
sti
or
inc
ljmp
xor
push
out
jns
cmp
out
insl
pop
add
cmp
in
scas
mov
mov
cmp
rcll
xor
mov
adc
adc
add
sbb
cmpsl
iret
xor
inc
test
or
sub
xchg
jo
nop
lods
add
popa
mov
xor
mov
dec
test
sub
xchg
cltd
subb
fidivrs
inc
into
or
sahf
pop
iret
push
mov
fadd
gs
mov
cmp
stos
sbb
jmp
dec
sbbl
mov
les
push
in
cmc
fidivl
ret
xchg
pop
add
push
sbb
inc
jg
jb
test
les
xor
lock
imul
bound
xlat
rolb
cmp
jns
bound
pop
ds
bound
sbb
fcompl
sbb
adc
inc
inc
test
xchg
jmp
mov
movl
mov
push
incb
push
cmpsl
lods
add
push
cltd
pop
cmpsl
mov
jp
sarb
stc
ret
xor
daa
pand
inc
fistl
jnp
mov
or
ljmp
and
outsb
movsl
and
mov
subl
xchg
mov
sub
add
add
pop
jae
mov
sub
incl
xchg
mov
call
js
imul
jo
shlb
mov
dec
icebp
std
loope
cmp
ja
inc
out
mov
sbb
sbb
outsb
jle
lods
insb
pushf
out
sub
or
pop
pop
xchg
pushf
sbb
pop
out
jb
push
and
mov
cli
lcall
fwait
mov
pop
mov
mov
fildll
mov
xchg
fidivs
ljmp
inc
cmp
jmp
cmp
sub
lcall
stc
adc
cmp
and
and
repz
jle
jnp
neg
lods
push
lcall
lcall
repnz
fstpl
ret
add
sbb
xchg
or
push
fcomps
movsb
lods
pop
mov
cmp
xor
pop
xchg
fcoml
test
hlt
push
jae
adc
cld
sbb
insl
stos
sub
lret
shlb
fldlg2
xchg
sub
stos
aas
lcall
daa
cmpsl
jl
cmp
ffree
lret
inc
sub
icebp
aam
sar
cmp
addr16
stos
xor
lds
mov
test
lret
loop
sub
xor
and
jno
inc
and
pop
sub
mov
or
or
loope
clc
mov
mov
dec
adc
rep
fiaddl
dec
adc
lahf
int
and
fcomp
fildll
add
cmp
sbb
stos
or
aad
addr16
mov
neg
lock
mov
aad
push
ja
xchg
in
int
mov
inc
or
mov
sub
shrl
out
cmp
jnp
mov
cwtl
xor
jno
addb
cmpsb
add
arpl
out
push
ds
scas
lds
mov
cltd
out
adc
mov
adc
outsb
mov
mov
leave
nop
das
mov
int3
js
sti
sbb
adc
fcomps
js
cli
int
data16
out
dec
iret
push
mov
in
xchg
sbb
mov
mov
imul
mov
adc
shlb
or
lahf
sahf
pop
sti
dec
jb
out
adc
dec
cmpsl
inc
test
mov
cli
loopne
mov
mov
dec
popa
add
movsb
in
xorb
xor
dec
lds
sbb
test
pop
enter
mov
adc
or
clc
dec
out
pop
cwtl
pushf
jae
cmp
lahf
je
push
mov
mov
loopne
out
dec
or
jge
add
insl
mov
inc
pop
jmp
fisttps
sarb
sbb
mov
pop
scas
xchg
int
xchg
jns
test
lcall
jne,pt
pop
les
pop
sbbb
adc
shll
out
sub
jecxz
pop
sbb
pop
mov
adc
ret
jns
mov
cmpsl
movsl
mov
lahf
sbb
mov
adc
xchg
cmp
ljmp
scas
rol
add
jnp
popf
mov
sub
aad
out
out
push
push
mov
loopne
mov
and
insb
xchg
mov
lods
xchg
mov
sub
roll
int
pop
inc
adc
fadds
sti
nop
dec
jle
aad
scas
jb
xor
sti
fiaddl
mov
jmp
pusha
mov
ficompl
es
xchg
or
int
and
pop
adc
sbb
dec
aaa
xchg
or
jp
push
push
mov
or
negb
in
or
mov
mov
and
push
mov
jle
aas
ret
adc
fs
or
cltd
shl
iret
out
jp,pn
ljmp
fisubrs
adcl
xchg
cwtl
and
je
inc
jg
rol
lahf
push
pop
mov
push
or
arpl
divl
and
jp
push
mov
stc
fmuls
packssdw
xchg
add
ret
sahf
pop
xchg
aas
rorb
popf
cmc
push
mov
pop
pop
lret
lock
jbe
sub
repnz
sub
xor
aaa
mov
icebp
enter
xor
or
fimull
jns
ss
sbb
addr16
aaa
push
push
sbb
cmp
pop
sarl
jno
push
xlat
mov
mov
push
adc
pusha
aas
lahf
push
mov
das
call
into
leave
out
add
popf
mov
and
insl
cmp
or
aas
ret
push
sbb
jp
cs
lods
movsl
push
inc
and
cmp
xlat
fisubs
xor
lret
mov
mov
mov
cmp
cmp
add
dec
dec
mov
jg
mov
mov
sbb
popf
push
icebp
cmp
aad
dec
dec
mov
ficompl
sti
test
fidivrs
pusha
xor
test
test
dec
sarb
es
iret
pop
aad
xor
jecxz
ds
in
int
je
jae
dec
js
loope
daa
cmc
sbb
imul
sub
xchg
lock
mov
mov
mov
xchg
dec
es
mov
dec
sbb
test
lret
xchg
insb
movsl
fwait
and
pop
fbstp
jecxz
mov
xchg
mov
fidivrs
push
xchg
mov
and
daa
xchg
push
mov
fmull
addb
mov
pop
mov
cmp
inc
pop
xor
and
xor
pop
int3
xchg
jne
jg
cmp
popf
lahf
in
mov
fadds
out
cmp
add
and
jmp
in
pop
add
jecxz
leave
in
cmp
push
pusha
jl
mov
or
outsl
hlt
in
jg
stc
aaa
adc
adc
pop
pop
add
orb
repz
xchg
xlat
andl
or
sti
test
mov
mov
fwait
nop
add
es
and
aad
data16
sti
and
movsb
pushf
movl
fcomi
arpl
and
arpl
push
hlt
test
lcall
les
icebp
push
divl
mov
mov
xchg
or
dec
pushf
lea
in
mov
adc
sub
mov
jmp
jmp
insb
jp
cmp
jno
clc
and
push
ret
cmp
push
jae
xchg
adc
mov
or
out
adc
xor
jne
icebp
test
sub
fwait
xor
frstor
mov
dec
mov
test
xor
jmp
mov
lea
icebp
or
nop
out
sbb
mov
lret
fiaddl
ds
inc
or
stc
sbb
in
leave
scas
sbb
mov
xor
xchg
pushf
or
mov
shlb
push
inc
sarb
jge
fsqrt
out
les
inc
js
xor
mov
adcl
and
cmp
cmpb
dec
into
inc
fistl
xchg
xor
sar
insl
fwait
and
ud1
pop
jno
sub
inc
test
adc
test
into
mov
out
fidivrs
fistps
mov
insb
jbe
loop
daa
jne
push
sbb
out
sahf
mov
das
jl
xor
or
jae
js
pop
sti
enter
sub
add
subl
jbe
mov
shll
imul
cmp
popa
jae
mov
insb
or
ret
dec
test
pop
xchg
jne
pop
lds
scas
jae
and
sub
loopne
imul
sub
pusha
nop
adc
adc
lock
mov
jle
data16
lock
cmp
lret
out
repz
fdivr
sarb
xchg
cmp
cltd
loopne
mov
xchg
call
sub
jecxz
daa
rclb
or
push
inc
xor
shll
lods
sub
dec
sahf
gs
test
loop
faddl
mov
xor
adc
mov
in
into
stc
and
loope
leave
xchg
xchg
jmp
mov
stos
inc
add
sub
sbb
lea
xchg
out
pop
fwait
out
nop
scas
fistpl
mov
mov
xor
sub
sub
xchg
add
cmpsb
jle
jecxz
scas
xchg
push
push
lret
jecxz
gs
fmull
and
lods
negl
sti
outsl
rclb
mov
icebp
jne
add
pop
out
push
sub
cs
popf
mov
pop
sbb
adc
lods
bound
mov
inc
bnd
cmp
lock
sti
pop
test
sbb
out
repnz
icebp
cmpsb
icebp
into
sbb
rclb
pop
xchg
lds
push
sub
sti
loopne
and
add
mov
push
in
pushl
outsb
scas
cmp
mov
rolb
test
bound
imul
xchg
adcb
and
lods
jl
and
dec
jno
sbb
pushf
push
pop
test
push
push
repnz
setne
adc
push
out
jecxz
enter
jp
jl
mov
pop
xchg
pop
mov
lods
sub
and
loope
mov
and
sbb
xor
sub
mov
lea
je,pt
lret
jmp
or
iret
test
stos
sbb
or
sub
cld
js
xchg
stos
push
test
jecxz
pop
cmp
sarl
cld
rolb
shl
insl
push
hlt
mov
jl
xchg
mov
fs
je
cld
je
fdivl
sbb
jl
jno
addr16
jg
and
cmp
lods
pusha
mov
mov
mov
dec
cmp
jmp
call
lcall
dec
jp
xchg
or
sub
bound
cmp
xchg
arpl
pop
rclb
cmp
negl
and
mov
aaa
les
mov
loope
adc
shll
pop
orb
cmp
and
mov
push
cmp
out
sub
das
andl
dec
mov
or
nop
aam
mov
xchg
int
or
dec
push
mov
xchg
mov
push
mov
aaa
mov
add
faddp
jae
or
cmp
xchg
and
pop
ret
scas
scas
js
lahf
aas
leave
lds
xor
mov
movsl
es
sti
xchg
test
xchg
inc
out
rcrl
fidivs
out
lea
outsb
dec
or
mov
pop
aam
or
push
sub
dec
fsts
jl
pop
push
pop
rorl
cmpsb
icebp
add
aaa
dec
xor
shrb
push
cld
sbb
push
aam
xor
mov
sbb
shrb
add
adc
lcall
stc
cld
popa
data16
sarb
inc
shll
bound
xor
das
push
insl
pop
sbb
repnz
or
test
aaa
push
das
fld1
adc
xchg
inc
popf
push
dec
call
shlb
sub
mov
xlat
ds
sub
in
scas
xlat
in
inc
incb
and
xchg
fildll
or
jno
or
mov
pop
xor
ds
and
push
xor
dec
imul
inc
add
xlat
roll
stos
cmpsl
imul
pop
shl
xchg
pop
outsb
ret
dec
aam
mov
mov
sbb
lea
push
mov
mov
daa
adc
repz
pop
xor
mov
push
repz
out
loop
lahf
push
or
push
popa
mov
cs
mov
pop
mov
js
bound
mov
push
lea
js
lret
pushf
pushf
dec
sub
lock
and
cmp
fcmovb
out
dec
push
push
stos
mov
push
add
push
sbb
pop
clc
xor
mov
pop
cmpsb
movsl
cli
test
push
pop
imul
stc
ja
les
icebp
ja
ss
in
ret
enter
push
mov
lds
sbb
inc
lods
mov
mov
fwait
std
pop
iret
xor
stc
cmp
inc
rolb
leave
mov
cmpsl
push
push
mov
or
add
and
push
xor
mov
jmp
mov
popa
mov
lret
mov
stos
lcall
test
inc
adcb
rorl
jne
enter
jne
jp
scas
imul
mov
push
lcall
std
jae
shrb
xor
fstl
jo
hlt
adc
ret
push
jecxz
lds
cltd
loope
xchg
out
jp
pop
jbe
jge
jge
inc
in
xchg
or
popf
xchg
jle
stc
imul
mov
mulb
jp
jns
js
mov
or
lods
mov
mov
aam
cld
repz
pusha
sub
incb
push
cmp
xor
pop
or
outsb
sbb
adc
je
jb
or
pop
fsub
lret
dec
mov
xorb
and
xchg
sub
and
add
add
jns
in
xchg
inc
sub
jne
sub
jmp
mov
sub
sub
imul
lahf
loopne
into
push
arpl
inc
cmp
pop
inc
mov
push
movsb
xchg
cs
adc
loope
or
mov
mov
hlt
inc
push
and
xchg
out
call
sub
mov
ret
push
add
adc
mov
repz
pop
fs
sahf
scas
in
inc
lock
or
mov
or
add
xchg
das
mov
and
inc
xchg
adc
pop
in
mov
scas
fidivs
pop
xchg
test
sbb
jle
xor
dec
mov
and
pop
repz
inc
fdiv
push
xor
cmp
in
mov
in
sbb
lcall
mov
sbb
loopne
xchg
jle
loope
pop
xchg
fimull
nop
pop
add
push
in
sbb
movsl
pop
or
aas
insb
into
cmp
call
lods
icebp
cltd
test
jp
and
aad
fcos
lahf
lods
or
inc
test
mov
or
adc
xchg
and
add
xor
sbb
mov
insb
fiaddl
pop
push
stos
mov
fucomp
cwtl
adc
in
push
mov
std
andl
icebp
xor
loope
inc
in
sbb
push
or
fildll
addl
ja
clc
push
lret
adcl
xor
in
pop
mov
pop
in
insl
xchg
aad
dec
sbb
hlt
xor
pop
pop
push
ja
xor
xchg
pop
pop
leave
xchg
jns
out
stos
lcall
mov
sbb
adc
jle
adc
testb
pop
inc
pop
inc
mov
insb
icebp
sbb
rclb
test
cmp
mov
or
push
in
cld
hlt
xor
movsl
stos
lea
ficoml
xchg
xchg
into
jno
jno
jae
mov
mov
fimull
ds
icebp
test
or
dec
ljmp
in
sbb
sub
inc
pop
push
pushf
pop
dec
add
pop
mov
shlb
mov
push
ds
mov
jge
movsb
inc
ljmp
mov
je
call
aam
aam
in
add
cmpl
jg
in
jb
clc
push
ljmp
jmp
pop
cltd
test
inc
sbb
cmpl
sub
ljmp
nop
imul
fldenv
jb
fs
mov
jg
mov
xorl
cmp
pop
or
rolb
hlt
xor
dec
cwtl
add
imul
jge
push
xchg
imul
add
addl
jnp
ss
pop
pushf
ss
mov
lock
outsb
out
add
mov
and
repnz
je
iret
or
mov
test
jns
stc
out
cld
adc
inc
sahf
adc
leave
imul
cmc
out
sarl
rep
mov
jecxz
repz
sbb
aaa
xchg
xchg
push
das
test
dec
mov
add
std
scas
es
cmpsl
adc
pop
lods
scas
or
add
jb
das
jmp
aaa
outsb
mov
jo
jbe
sbb
pop
cmpsl
add
loopne
mov
addb
sub
int
push
aas
ss
mov
inc
mov
mov
addr16
xor
idivb
xchg
mov
insb
ret
lock
mov
jmp
xlat
adc
and
imul
ss
lret
xor
push
fwait
jo
cmp
sarl
pop
cmc
adc
mov
pop
in
add
scas
or
pop
outsb
andl
sub
popf
notb
stos
imul
xchg
outsb
orb
inc
cmp
push
and
add
xor
movsl
lods
js
jmp
xchg
dec
stos
push
out
sub
mov
sti
jnp
xor
test
sub
adc
and
mov
dec
mov
pushf
inc
jo
mov
push
in
sub
xchg
mov
sub
cmp
mov
inc
jmp
dec
cmc
inc
pop
mov
push
inc
sub
mov
test
or
pop
inc
stos
sub
push
mov
jo
in
aaa
jp
mov
push
push
movsl
movsl
or
cld
out
aas
daa
call
pop
sbb
popa
movsl
loopne
outsl
stc
push
sub
shlb
inc
mov
jmp
out
pop
mov
test
das
outsl
sbb
in
mov
js
or
enter
dec
outsb
sbb
cli
xor
xchg
cmpsb
shrb
insl
mov
mov
mov
pop
mov
js
add
cltd
jbe
gs
xchg
dec
pop
xchg
clc
and
push
cli
jmp
lahf
addr16
aam
mov
mov
loope
push
leave
aaa
inc
pop
mov
sub
jmp
jae
push
mov
mov
pop
cmp
adc
incb
icebp
jo
mov
repnz
mov
int
nop
aad
add
dec
dec
xchg
das
int3
mov
repz
push
push
clc
dec
mov
loope
cmp
cwtl
and
jle
push
clc
sbb
popf
mov
push
xchg
cmp
sbb
inc
cmc
mov
cli
in
sub
xor
lds
les
add
lahf
mov
stos
mov
or
mov
or
jecxz
jl
adc
cmp
jb
jae
outsb
leave
lcall
popf
jecxz
push
aam
pop
imull
cmp
fcoml
outsb
mov
in
shlb
and
out
or
sub
jmp
popa
fsubs
int3
and
jne
push
sub
outsl
clc
das
mov
xchg
sbb
arpl
faddp
std
cmp
cwtl
cmpsl
inc
cmp
pop
cmp
lods
addb
xchg
and
dec
push
xor
popa
adc
mov
hlt
scas
jl
and
loop
das
lods
mov
scas
jae
cli
inc
mov
sarb
pusha
fisttpl
lods
push
xlat
mov
pop
sbb
inc
incl
lods
sbb
cld
insl
push
in
jle
outsl
and
gs
jo
adc
je
inc
clc
jns
inc
cmp
mov
xor
push
scas
and
es
mov
xor
xchg
inc
lret
or
xor
and
pop
or
ret
lahf
stos
push
xchg
dec
adc
pop
jo
mov
popa
call
push
inc
fldenv
enter
loopne
cmp
sbb
cmc
dec
sub
lea
ret
mov
cwtl
enter
xchg
popa
or
mov
outsl
push
out
jne
or
sub
mov
xchg
dec
jp
or
xchg
jl
pop
sbb
notb
cmc
xchg
adc
adcl
ja
xor
sarb
mov
mov
or
gs
pop
in
lcall
or
aas
mov
xor
sub
icebp
or
cmpsl
push
mov
test
pop
cmp
inc
fisubs
jg
dec
push
iret
or
pop
mov
js
mov
adc
mov
cmp
sub
popf
pop
addr16
dec
pop
xchg
shl
adc
mov
mov
mov
int3
mov
push
mov
test
mov
dec
cmp
dec
dec
mov
mov
xor
mov
aad
rolb
xchg
out
fmull
std
jecxz
push
mov
repnz
mov
mov
push
stos
lahf
js
in
xlat
flds
scas
dec
sbb
jecxz
pop
mov
sub
cmp
adc
xor
push
loop
out
sti
push
sbb
mov
mov
dec
push
xor
cld
dec
add
inc
mov
neg
sub
push
hlt
imul
dec
cmp
inc
xor
lods
mov
add
outsb
inc
popf
cs
leave
xor
xor
imul
cmp
imull
push
stos
cld
dec
movsl
gs
addb
adcb
test
xchg
loopne
lds
xchg
cmpsb
cmp
mov
push
sbb
ret
or
ret
or
push
pop
scas
dec
addl
or
xchg
cwtl
cli
aaa
rolb
stc
sbb
notb
jo
adcl
and
aas
ret
xchg
loop
outsl
and
jnp
test
test
call
pop
in
mov
shl
loop
fs
notb
pop
adc
sbb
ret
mov
fs
shl
jno
daa
cld
xchg
push
mov
cmp
icebp
aas
mov
add
cwtl
or
iret
in
fs
cmp
inc
in
sbb
xor
push
rcrl
fsts
push
or
jb
loope
cmc
xchg
xchg
lock
mov
add
inc
push
jns
fwait
inc
or
outsl
push
push
inc
outsl
fcmove
rorb
xor
xchg
adc
adc
scas
rcl
push
sti
sbb
out
in
or
icebp
in
pusha
cs
cmpsl
sub
sarl
fistps
mov
fs
add
pusha
lcall
mov
jb
leave
fnstcw
cli
pop
sbb
stos
jae
addr16
push
and
inc
and
loopne
xchg
mov
loope
pop
sti
cwtl
flds
hlt
int3
mov
stos
xchg
jp
xchg
mov
data16
push
mov
ja
mov
mov
push
rolb
adc
xchg
cmc
mov
hlt
into
imul
add
and
xchg
sub
xor
or
cmova
movsl
aas
mov
push
nop
add
outsb
nop
cld
pushf
leave
or
inc
scas
sbb
or
cs
int3
xchg
cltd
push
cmc
sub
push
hlt
ds
out
sbb
sub
je
xchg
imul
push
dec
sti
mov
arpl
lods
jae
xor
lods
stos
mul
insl
mov
lds
out
add
lcall
out
cltd
mov
andb
cmpsl
ljmp
in
filds
and
lods
mov
scas
cmp
xchg
incl
icebp
cmpsl
pop
icebp
inc
stos
ds
xor
cmp
repnz
and
and
pop
push
test
jge
mov
or
shrb
xor
push
push
icebp
repz
inc
cmp
cli
xor
mov
ss
in
jg
ret
ds
aad
sahf
cmp
mov
insl
es
mov
aaa
dec
mov
dec
bound
das
insl
sbb
out
lock
dec
adc
sub
mov
xchg
pop
cmp
or
nop
mov
fsubl
pop
pop
mov
mov
adc
xor
jae
repnz
lods
dec
ss
hlt
dec
xchg
xchg
mov
outsl
push
shll
and
jmp
fs
xchg
xchg
aas
fnstcw
push
imul
leave
aam
cmp
test
aaa
ficoms
mov
aam
lret
adc
clc
adc
ret
sbb
adc
test
xchg
in
mov
jmp
jae
inc
pop
push
mov
xor
jo
inc
mov
cs
aas
and
jge
and
mov
pop
add
pop
xor
sub
dec
cld
arpl
xor
repnz
jbe
dec
mov
sti
in
outsb
dec
inc
mov
cwtl
stos
and
jbe
cmp
movlps
fstpt
dec
lcall
mov
arpl
xor
adc
inc
inc
repz
shll
sbb
pop
mov
dec
outsl
addr16
xorl
fbld
jmp
out
sub
sbb
pop
add
xchg
dec
int
mov
clc
cmpsb
sbb
adc
shlb
mov
imul
adcl
push
int3
push
mov
pop
lds
xor
fadds
dec
sbb
inc
fstl
fildl
xor
adc
repnz
fldenv
fisttpll
pop
and
sbb
pop
mov
xchg
cld
jle
shl
mov
imul
jno
add
or
push
mov
hlt
sqrtps
cmpsb
pop
dec
or
sbb
xor
inc
push
xor
out
mov
mov
mov
or
cwtl
pop
or
inc
aad
pop
mov
mov
sbb
inc
dec
popf
xor
ret
adc
pop
pop
adc
mov
and
inc
lds
lcall
push
int3
jbe
fstl
inc
in
jne
push
sbb
inc
xchg
pop
jecxz
sub
inc
int3
lea
xor
push
loopne
sub
cmp
add
imul
push
test
push
gs
js
lret
xor
iret
jp
sub
icebp
adc
mov
repnz
and
cwtl
adc
shlb
dec
mov
xor
push
outsb
xor
cli
pusha
js
cmpsl
scas
movsl
bound
push
and
stos
pop
loope
cmpl
hlt
adc
fdivp
lret
icebp
sub
jo
or
aaa
addl
iret
add
lea
dec
pushf
jg
fwait
and
sbb
push
lea
and
mov
cmpsb
inc
mov
and
lcall
gs
stc
insb
jb
lock
pop
pop
cmp
leave
sub
mov
bound
loop
mov
push
xchg
movb
daa
out
cli
idivl
fisttps
scas
pop
add
aad
inc
sbb
inc
loopne
pop
xor
addr16
test
push
cmp
hlt
pop
xchg
fstl
mov
cmp
xabort
mov
or
add
lret
loopne
inc
push
fs
cld
daa
sub
jbe
fildl
cmp
shlb
pop
pusha
inc
in
dec
push
lcall
lods
loope
lods
push
fwait
mov
imul
sub
loop
ds
mov
into
fdiv
mov
adc
loope
clc
xchg
sbb
outsb
call
es
out
iret
les
jecxz
jg
in
fwait
xor
fiadds
jle
dec
push
jo
into
fistpll
dec
sahf
fmull
pop
notb
push
loop
inc
mov
sbb
xlat
mov
xchg
push
sub
lock
jmp
shlb
lea
aaa
fsubrs
mov
inc
xor
fs
fiaddl
add
enter
xorl
add
sbb
cmp
push
imul
test
sub
mov
pop
mov
rorl
cmp
adc
lds
cmpsb
xchg
pop
xchg
sub
dec
fwait
scas
into
fcmovu
fsubrs
or
pop
mov
test
vprotw
cmpsb
pushf
test
xchg
sub
aad
out
aad
jecxz
jne
fs
iret
xchg
std
inc
pop
clc
mov
int
cld
imul
out
inc
loope
test
in
sahf
int3
fdivr
fbstp
adc
or
push
sbb
push
addl
jg
inc
or
es
or
int
das
jle
and
lret
imul
sub
or
lock
jmp
jbe
fstpl
inc
mov
int3
xor
dec
push
fstpt
lahf
dec
jmp
adc
lock
cwtl
fsubrl
add
das
les
xor
push
loop
fbld
es
fdivrl
insl
sti
fs
cs
daa
sub
push
sbb
pop
mov
sub
cli
popf
movsl
mov
inc
lret
bound
mov
lahf
pop
mov
int3
fldenv
xor
cmp
mov
ds
ljmp
popf
push
mov
popa
int
add
sarl
inc
fbld
or
mov
cwtl
pop
shlb
pop
hlt
dec
push
mov
cmp
jmp
lcall
daa
cld
mov
adc
mov
jno
sub
sub
mov
fcmovnbe
pop
xor
pusha
insb
sub
pop
insb
aam
lcall
ja
xchg
mov
cmp
and
mov
xchg
mov
adc
dec
mov
dec
aad
cli
mov
sub
insl
cmp
jmp
xchg
mov
stos
out
es
jg
mov
and
mov
push
fstpl
sub
loope
dec
dec
gs
fidivs
es
scas
jmp
push
lea
arpl
add
je
push
jmp
test
fisubrs
xor
icebp
mov
xchg
jl
pop
pop
sarb
xor
je
fimull
frstor
in
or
insb
or
and
fs
mov
leave
clc
insb
inc
dec
jl
js
shll
stos
fucom
jg
pop
mov
xor
daa
xor
aas
aaa
sub
sahf
xor
std
icebp
jae
fidivrl
dec
iret
add
xor
outsl
enter
mov
int
stos
jbe
mov
sbb
lock
or
das
xchg
insb
inc
mov
outsb
ss
int
or
jae
mov
ljmp
and
jb
jmp
dec
dec
mov
xchg
scas
cltd
cmpsb
or
sub
scas
sub
mov
mov
dec
sbb
cmpsl
mov
enter
movsb
jge
fwait
mov
xchg
or
pop
shll
mov
dec
xchg
mov
lret
adc
cmc
pop
popf
mov
inc
push
scas
js
xor
jg
inc
or
mov
popf
pusha
lret
daa
in
loopne
leave
hlt
sub
mov
xlat
out
mov
lods
rorb
push
lcall
sbb
out
adc
insb
fmuls
popa
sub
jecxz
dec
test
or
cs
ret
mov
push
aas
into
ret
fcomp
sti
or
adc
aam
repnz
xorl
or
mov
nop
icebp
imull
and
data16
sub
fcmovnbe
scas
pop
xchg
adc
cwtl
add
cmp
inc
ret
sub
fucomi
or
sub
mov
sbbl
call
pop
popf
dec
cmp
jle
leave
sarl
data16
fisubl
notl
pop
enter
xor
sub
int3
in
xchg
test
jp
adc
push
fwait
add
imul
cwtl
push
mov
push
fwait
add
mov
data16
cmpsl
fwait
or
imul
int
sub
cmpsl
pop
movsb
call
mov
or
lahf
mov
mov
data16
xchg
rcll
lods
push
sbb
pop
sbb
insl
xor
dec
shlb
in
fldcw
mov
rorb
push
adc
and
mov
jb
les
sub
out
je
xchg
insl
inc
aam
mov
int3
add
std
lds
push
push
andb
push
jmp
shlb
or
jno
cmp
sbb
ds
or
sbb
pop
testl
bound
mov
lds
sbb
neg
loop
fcompl
xchg
push
add
fisttpll
sbb
mov
and
fldcw
fsts
fistps
jns
xor
sbb
add
xor
sub
mov
testl
les
ljmp
lahf
dec
push
sbb
xlat
shlb
inc
cmpsl
call
xorb
pusha
jmp
in
mov
sbb
pop
dec
push
sub
or
outsb
pusha
lret
fcmove
icebp
sub
jle
xchg
add
test
js
addr16
test
xchg
sub
movsl
into
addr16
jo
ret
jmp
mov
testb
or
and
pop
push
js
inc
xor
mov
lods
mov
cmp
mov
movb
xchg
cmpsb
inc
xchg
push
or
call
jns,pt
jns
call
insb
adc
xchg
in
rclb
sti
int
and
aaa
inc
jo
xlat
xchg
pop
inc
or
sahf
xlat
jae
fsubrl
cmp
fwait
int
scas
jb
pusha
fidivl
add
outsl
popf
xor
aad
mov
push
clc
push
jmp
cmp
xchg
stos
std
pop
call
std
jle
pop
filds
adc
jle
pop
xchg
or
lods
xchg
decl
fcoms
cmp
test
mov
sbb
sub
mov
aas
loop
test
arpl
mov
fs
jge
pop
fbld
sbbl
mov
adc
sbb
lock
push
cmovge
pop
call
adc
iret
cli
insb
inc
sub
xlat
xor
stos
aad
fistl
enter
test
cmpsl
out
xor
fdiv
outsb
outsb
xor
sub
pop
add
jmp
xchg
fistpll
aam
cmc
pop
pop
cli
jnp
out
lcall
jp
data16
iret
call
add
lret
adc
mov
test
stc
hlt
push
inc
lods
inc
add
lods
repnz
fwait
mov
insb
sbb
push
adc
cmp
addr16
pop
adc
psraw
xchg
lret
jle
jecxz
add
pusha
cltd
dec
jne
xchg
and
xorl
sbb
loope
mov
cmpsb
scas
out
in
jno
repz
data16
mov
mov
and
inc
dec
ljmp
pusha
cmp
shl
sub
add
dec
add
dec
cmpsl
adc
mov
jo
push
push
adc
andl
mov
sbb
add
mov
adcb
xchg
jns
lea
push
add
adc
lahf
mov
mov
fstpt
xchg
or
push
mov
sahf
aaa
adc
cmp
movl
popa
insl
in
leave
jg
inc
pop
sbb
loope
out
mov
dec
fbstp
lods
jo
aam
mov
insb
push
imul
sti
cmpsl
mov
ljmp
cmpsb
mov
sub
mov
cmc
sub
pop
mov
ja
in
xlat
dec
adc
in
dec
mov
in
in
or
test
dec
mov
or
lds
pop
stc
les
add
add
lret
addr16
dec
les
movsl
adc
mov
mov
xor
sbb
cwtl
pop
and
cmpsb
imul
dec
lds
cmp
ja
int3
mov
notl
aam
inc
scas
inc
andl
lods
inc
popl
cmp
sbb
add
cmpsl
shld
xchg
jle
fisubl
inc
pop
arpl
mov
mov
int3
pop
popa
fstpt
cmp
jmp
daa
int3
jae
adc
or
jbe
mov
jmp
push
fimuls
jb
inc
pop
scas
outsb
sbb
or
cmp
jg
cmpsb
clc
inc
mov
lods
xlat
das
push
dec
inc
add
cmp
ret
fsubs
loop
aas
jp
pushf
push
jle
mov
lea
and
enter
push
les
add
mov
inc
mov
cltd
dec
adc
int
add
int3
xchg
popf
shrl
inc
rorb
cmp
dec
xor
inc
decb
clc
in
xchg
iret
divb
mov
jno
jo
jb
and
stos
andl
lret
call
mov
adc
decl
ljmp
andb
cmpsb
and
into
sub
imul
or
push
mov
dec
mov
insb
or
sub
sarb
lods
and
icebp
leave
repnz
jmp
xchg
xor
decl
xchg
scas
les
test
push
jp
jo
xchg
dec
push
jge
lods
add
xchg
jmp
popf
lea
movsb
push
inc
cmp
call
cli
xchg
push
sub
lret
insl
pop
adc
adc
idivl
arpl
mov
pop
fsubrl
push
lds
adc
mov
cmp
xor
inc
sub
cmp
xchg
pushf
mov
in
mov
push
push
sbb
lods
add
jp
jne
push
outsb
inc
push
and
push
mov
mov
frstor
imul
mov
mov
mov
sbb
or
std
fidivl
sbb
xlat
sub
mov
or
hlt
mov
pop
insl
testl
stos
or
es
inc
jl
push
lods
jne
lods
frstor
int3
mov
cmp
movsb
cmpsb
lds
push
dec
cld
mull
xlat
mov
imul
sub
pop
imul
ret
mov
insl
je
push
mov
cli
loopne
adc
das
loopne
fidivrl
out
stos
adc
mov
and
pushf
inc
lret
sbb
imul
mov
inc
ljmp
mov
and
mov
scas
or
pusha
xchg
cmp
test
addr16
push
jns
pop
adcl
xchg
inc
mov
aam
dec
sti
xchg
jge
shll
sbb
fsubl
xor
fs
and
push
mov
rcll
xchg
push
jbe
movsl
xlat
and
xchg
xchg
or
dec
movsb
mov
scas
cmp
pop
roll
call
mov
call
sahf
add
lea
daa
xor
scas
enter
or
hlt
ljmp
testl
fdivp
pop
xchg
sub
mov
inc
aas
sub
cmp
shl
push
mov
lock
scas
movsb
fwait
je
add
xor
push
test
sub
test
loopne
jb
pop
and
mov
fbld
jg
add
and
loopne
jo
add
push
and
lods
xor
fcomps
movsl
xor
lods
pop
sub
insl
notb
ret
mov
or
xchg
mov
add
mov
sub
ret
cmp
sarb
ja
pop
adc
mov
pop
inc
cmp
mov
insl
sbb
adc
push
xor
nop
lcall
mov
mov
mov
repnz
add
fidivs
movsb
shll
sbb
sub
icebp
mov
xchg
fstpl
sub
test
rcll
ss
and
insb
add
sbb
pop
mov
jmp
pop
aam
aas
imul
sbb
stc
rcll
push
mov
ds
js
mov
dec
pmaxub
bound
adc
jp
push
add
dec
xchg
xchg
adc
orl
imul
pushf
cld
dec
divl
mov
fildl
fadds
pop
cli
inc
mov
int3
add
addr16
rcr
push
pushf
imul
cltd
or
ret
js
outsl
test
adc
push
fabs
or
jbe
lock
adc
sbb
out
stos
les
in
stc
xor
cmpb
pop
inc
mov
outsl
sar
dec
push
jno
xchg
js
icebp
movsl
ret
mov
add
sti
lods
mov
push
adc
rcrl
arpl
dec
mov
add
rcl
xchg
sbb
int
add
sub
xchg
push
div
mov
pop
ds
andb
cmpsb
mov
in
xchg
mov
mov
push
mov
mov
stos
push
inc
mov
lods
fildl
mov
icebp
inc
adc
bound
pop
sub
jl
or
fcmovnu
mov
lock
test
or
cmp
int
adc
dec
int3
loop
sub
insb
nop
add
iret
add
ljmp
lret
or
stos
call
push
das
xchg
cld
test
popf
repz
shl
sarl
add
mov
pop
mov
fucomi
mov
xor
shlb
jo
sarb
mov
pop
sub
pop
rep
xchg
or
mov
cmc
lret
push
inc
sub
add
add
repnz
imul
cmp
ret
dec
stos
pop
lock
mov
adc
mov
cmpsb
push
sub
pusha
movsb
cmp
jns
test
pop
ret
lds
decl
or
inc
inc
xor
dec
ja
repz
fstpl
add
jns
mov
insb
adc
std
aaa
rdseed
sub
lret
fistpll
lods
cli
sbb
pushf
push
xchg
jns
mov
add
movsl
jnp
mov
push
push
lahf
sbb
adc
dec
enter
pop
ljmp
or
jmp
popa
sbb
outsb
mov
jb
fstps
decb
sbb
ret
movsl
xchg
inc
adc
loopne
cli
lret
and
and
jno
cmp
out
cmc
dec
add
movsb
in
insl
mov
cmp
push
jne
enter
jp
call
adc
out
jne
gs
lret
jnp
sbb
in
cmpsl
lret
cmpsl
popa
out
jns
pop
or
mov
pop
push
cmp
mov
inc
out
xchg
xor
pop
sub
mov
add
cwtl
mov
rcl
xor
or
mov
add
dec
sub
inc
orb
xchg
cmp
jno
hlt
push
jmp
mov
or
jl
fstpt
pop
adc
mov
pop
movsl
cmp
les
clc
repnz
mov
out
loope
test
inc
aas
and
stc
sub
fdivl
sar
mov
push
icebp
icebp
pop
movsb
add
daa
hlt
jo
cmp
hlt
jmp
inc
mov
hlt
adcb
and
sub
in
aam
std
and
mov
pop
out
sbb
jne
movsl
xchg
fsubl
xor
push
jmp
les
sub
xor
push
pminub
add
fcoml
inc
repnz
add
xchg
sbb
test
push
shll
lea
jbe
sub
mov
mov
cs
shll
in
mov
repz
push
cmp
sbb
sti
cmc
or
inc
mov
mov
mov
add
cli
clc
add
test
popa
pop
push
sbb
sub
mov
lds
inc
aad
mov
jg
add
enter
fcomps
das
xchg
and
mov
mov
shll
and
mov
in
sbbb
and
adc
jmp
popf
jecxz
jg
sbb
and
repz
sbb
add
xchg
mov
sbb
ja
xchg
sub
popl
sub
or
in
test
push
xchg
jbe
aad
push
ficoml
adc
xor
or
mov
gs
stos
cli
aas
lods
push
dec
jns
xor
jbe
leave
pop
out
push
mov
xor
mov
int
inc
int3
pop
xchg
push
pop
push
xchg
xlat
in
cwtl
add
ss
stos
adc
lret
add
movsb
mov
mov
test
lcall
jle
enter
xchg
and
test
cmp
mov
pop
mov
xchg
imul
lcall
push
inc
push
or
aam
or
ja
sbb
jg
mov
lret
push
js
fists
or
aam
mov
or
aaa
cmp
jns
sbb
lods
mov
jbe
jp
cmc
mov
lahf
lahf
fstpl
or
xchg
jb
inc
stos
pop
lock
hlt
shlb
pop
dec
sbb
xchg
out
pushf
fisubl
xor
add
mov
mov
dec
fwait
in
shlb
mov
sbb
xor
js
sti
mov
add
flds
out
xor
dec
movsb
adc
in
fwait
pop
sahf
cwtl
jecxz
fbstp
les
repnz
jo
xchg
ret
sbb
sbb
test
push
test
rcrb
pop
inc
adc
push
and
gs
je
lock
cmp
sub
xchg
orl
std
clc
dec
cmpsb
dec
sbb
insb
and
adc
into
imul
sti
loope
jmp
popa
add
or
in
adc
ljmp
push
leave
clc
call
and
and
shrl
pop
cmp
or
sti
lahf
out
rcll
push
loope
xchg
dec
dec
stos
xor
in
or
mov
jb
fwait
repnz
cmp
mov
inc
cmp
inc
add
cmp
daa
outsl
fmull
cmp
jo
cmp
fisubl
xor
aaa
pop
icebp
inc
arpl
repnz
cmp
or
xlat
stos
enter
add
fsubr
xchg
mov
inc
xor
mov
jge
push
xchg
lods
jno
jno
xchg
sarl
test
adc
add
add
push
nop
mov
mov
ror
pop
fs
in
ret
inc
xor
std
les
ss
gs
add
inc
pop
add
aas
lcall
mov
sbb
es
add
cli
pop
or
jg
fidivl
mov
xchg
in
and
mov
pop
imul
cmpsl
imul
jg
imul
add
mov
test
popf
jl
cwtl
mov
rcll
aam
dec
rorb
test
jecxz
clc
leave
cmpsl
mov
or
mov
dec
stc
mov
int3
dec
std
dec
cli
repz
or
insl
mov
pusha
dec
stos
cmp
adc
cmp
ficompl
or
pushf
adc
in
movsl
cmp
push
push
xchg
and
jns
xchg
mov
mov
lcall
outsb
rcrl
insl
xor
and
or
outsl
mov
jo
mov
jg
mov
jo
jp
mov
cmp
push
cmc
adc
aam
add
sbb
jg
jmp
ss
xchg
into
out
pop
out
jbe
and
pop
adc
ja
xchg
push
clc
lret
mov
lock
les
aam
push
sbb
pop
gs
mov
mov
hlt
sbb
mov
fsubs
aam
fidivl
mov
xor
ss
add
mov
ljmp
jae
clc
mov
or
pop
sub
js
repz
cmp
les
xchg
lock
pushf
mov
adc
int
mov
ret
sbb
inc
ds
leave
ds
adc
arpl
mov
jno
mov
stos
imul
xor
icebp
xchg
in
cwtl
dec
jl
sub
jmp
cmp
add
out
mov
and
mov
dec
enter
add
xrstor
mov
cmc
mov
sbb
jo
push
loop
sbb
daa
mov
clc
sub
pusha
mov
or
xchg
addr16
mov
mov
pop
jge
fbstp
stc
fdivrs
lods
aad
sbb
mov
adc
or
sbb
cmpl
loopne
lea
shll
jg
jnp
mov
sbb
sar
pop
mov
push
and
addr16
xchg
sti
sar
dec
cwtl
sub
mov
insl
mov
and
xorl
xchg
in
mov
fldenv
imul
xchg
fxch
inc
jge
dec
addr16
movsb
clc
ja
pop
push
and
shr
push
mov
jns
fs
jg
mov
sbb
fimull
mov
imul
push
out
push
push
cmp
ljmp
movsb
xor
mov
clc
pop
aad
pop
aaa
sub
push
arpl
lret
mov
push
cwtl
les
ret
mov
lret
rclb
scas
xchg
popf
xor
in
add
jge
arpl
fldcw
loop
push
outsb
mov
mov
adc
roll
or
test
pop
pop
cmp
sbb
xchg
bound
push
xor
adc
clc
cmp
call
in
int3
push
mov
sub
pop
mov
ret
clc
xchg
lods
add
iret
inc
fcmovne
out
pushf
jmp
jbe
dec
int
dec
movl
push
notb
or
imul
fcomps
fs
push
cli
sub
push
or
lcall
xchg
mov
or
sbb
lahf
xor
jne
fucomp
and
pop
dec
dec
addr16
lds
fwait
jge
jmp
das
je
adc
call
jecxz
sbb
mov
mov
into
aaa
test
fldl
pop
mov
pop
xchg
sbb
fistps
ds
test
std
sub
mov
out
int
dec
xchg
stc
xor
dec
hlt
adc
iret
xor
pop
mov
jmp
dec
out
jnp
xchg
push
lds
pushf
fldcw
lret
dec
cmc
daa
jmp
call
lret
sahf
mov
sbb
sub
jp
int3
push
mov
pop
mov
sar
or
jg
sbb
rol
add
push
test
mov
adc
int3
fwait
lods
xor
test
int
in
add
ja
mov
loope
insb
push
push
mov
add
jmp
cmp
stos
pop
ljmp
lods
inc
pop
push
movsb
rcr
sti
mov
fadds
fnclex
inc
repnz
sahf
fs
mov
xchg
loop
imul
add
sysenter
or
inc
fwait
fs
inc
push
mov
pop
cli
cmpsb
sbb
adcl
scas
sar
in
in
lret
shlb
iret
daa
cld
push
jle
mov
xchg
dec
stos
std
xor
or
or
inc
push
adc
aam
ja
jo
sub
cmp
mov
mov
jecxz
test
add
jne
or
in
arpl
xchg
mov
cmp
pop
xchg
andb
cmpsl
les
and
int
cmp
or
fiaddl
mov
repnz
sbb
addb
sub
daa
sub
movsb
cmpsb
push
push
rcrb
shr
xchg
xor
dec
cmp
cmc
jle
add
mov
repz
pop
mov
fiadds
fistl
add
mov
jno
or
xorb
cmp
es
je
cmp
pop
or
push
mov
fsubp
out
add
subl
fldcw
pop
add
stos
adc
inc
add
insb
xchg
push
insl
push
mov
mov
lret
fidivs
addr16
push
aad
pop
dec
pop
loop
hlt
js
rcrb
jno
xor
cmpsl
add
jo
cmp
add
inc
mov
or
std
mov
imul
xchg
pop
sub
inc
jne
rcrb
cmp
jnp
cmp
dec
sar
or
mov
pusha
aaa
lcall
inc
sub
repnz
sub
pop
outsl
and
xor
jle
pop
das
stos
outsl
outsl
mov
adc
xor
and
pop
ljmp
in
movsl
scas
imul
lock
jmp
push
adc
out
xchg
sub
jge
sub
and
gs
xor
sub
out
test
clc
stos
inc
dec
sub
test
pushf
mov
pop
lcall
fwait
out
mov
mov
xor
adc
cmp
jp
pop
cmc
or
gs
add
sahf
stos
mov
xchg
test
lds
add
pop
lods
daa
out
mov
mov
lea
cmp
xorb
lcall
ret
cmp
lods
lcall
bound
cmpsb
shlb
js
insl
in
fstps
stc
mov
and
push
sahf
pop
cmp
lea
popf
mov
mov
fdivr
mov
add
cmpsl
in
cwtl
mov
iret
dec
out
mov
push
es
into
cmp
roll
jns
xor
xchg
add
je
movsb
loop
sbb
adc
push
es
shll
iret
push
fst
addr16
jae
and
mov
dec
stc
inc
or
in
mov
lods
mov
pushf
repz
bound
xchg
ja
fs
inc
adcl
inc
loop
repnz
ret
xor
adc
idiv
stc
daa
loopne
mov
xor
testb
fstps
repnz
inc
fsts
mov
popf
pusha
mov
fs
scas
sti
jno
cmp
cmpl
addr16
dec
notl
lock
xchg
fisttps
push
jmp
mov
lods
xchg
std
adc
sbb
into
jmp
daa
jp
cld
aam
mov
add
shlb
das
aad
stos
test
adcb
ljmp
ret
sahf
ficoml
add
jno
out
mov
lret
mov
xor
cli
outsb
idivb
inc
dec
mov
insl
pop
lock
dec
lods
or
daa
out
adc
mov
add
call
jp
frstor
mov
sub
and
pop
mov
jae
mov
pop
dec
in
arpl
xchg
cmp
add
pop
andb
lea
mov
or
sub
inc
jne
lea
in
sub
xchg
jmp
cmpsb
adc
xchg
and
cmp
aam
jbe
adc
mov
pop
mulb
inc
jmp
add
sub
sbb
mov
shr
push
xchg
mov
xor
or
ret
mov
fisubs
lock
inc
aas
test
xchg
inc
inc
cmp
aam
aad
les
mov
faddp
xor
enter
dec
push
mov
popa
sub
or
movsl
imul
aas
cli
nop
push
mov
enter
pushf
ficompl
loope
sti
sbb
dec
fwait
or
sub
sbb
fs
dec
mov
ret
and
jno
ds
mov
or
mov
ja
aad
sbb
and
sub
ret
ret
int
arpl
jle
pop
lock
int
pop
test
divl
cmp
sbb
aas
movsl
imul
jmp
cmp
add
or
pop
xor
inc
pop
mov
jp
js
xlat
add
push
int
mov
mov
sub
ror
test
ljmp
pop
cmp
stos
addr16
mov
lods
jle
cmp
mov
xchg
mov
testb
mov
lret
call
sub
push
imul
sub
cmpl
mov
xor
not
hlt
xor
fldl
fsts
daa
daa
push
pop
push
and
mov
mov
xor
and
imul
call
sbb
xchg
cltd
inc
pop
mov
xchg
xor
jb
jecxz
and
push
sbb
dec
cmpsl
jmp
icebp
jne
outsb
aam
pop
add
jge
lret
xor
jne
mov
rclb
aas
lds
lret
imul
js
and
mov
orb
in
and
dec
push
scas
and
mov
pop
out
sti
bswap
aaa
mov
les
shlb
cltd
cmp
insb
jns
push
testl
scas
push
lods
xor
mov
pop
fsubrs
lods
pop
pushf
mov
inc
fs
mov
orl
ss
push
fidivl
sub
jo
or
sub
aaa
ret
xor
push
mov
or
adc
xchg
inc
add
mov
sbbl
movsb
cld
test
jae
out
push
addr16
lret
fnstsw
jecxz
lods
mov
sbb
pop
xor
rcrb
out
mull
arpl
dec
push
sbb
popa
sub
add
sahf
test
xlat
cmpl
jnp
sahf
shlb
pop
cmp
in
xor
repnz
jl
jg
aam
sarl
int
movsl
lcall
test
jle
ds
cmp
adc
ss
or
lret
das
add
das
pusha
xlat
mov
imul
sbb
lret
mov
sub
int3
repnz
xchg
xchg
cltd
lahf
fnstenv
bound
and
add
pop
push
sub
movsb
xlat
pop
gs
or
jmp
inc
jg
cltd
ja
int3
aad
mov
ljmp
jne
in
out
addr16
dec
movsb
and
or
pop
in
sbbb
sub
shrb
pop
pop
mov
mov
call
cmp
cmp
push
stc
dec
xor
cld
jno
pop
lcall
mov
sbb
cmp
fwait
jae
int
incb
aad
xor
pop
sub
pop
mov
mov
lret
jecxz
jno
xor
add
push
adc
jbe
and
add
xlat
fsts
repnz
lea
sbb
ds
mov
push
lods
xorb
sub
fadds
sbb
fisubrs
popf
fnsave
aam
jae
pop
fistl
sti
testb
jmp
mov
cmc
xor
pop
adc
pop
mov
add
push
mov
hlt
fcomi
or
jle
rcrb
inc
inc
mov
add
lea
inc
mov
pusha
inc
mov
das
loop
in
hlt
sbb
int3
pop
cmp
push
push
sar
out
pop
pop
push
pop
and
ljmp
hlt
movsb
cwtl
push
pop
or
sub
pusha
cmp
das
lss
cmpsb
enter
cmpsl
lahf
dec
push
test
sub
aam
int3
in
in
imul
and
cld
xchg
addb
push
jl
xorl
push
fsubl
dec
pop
das
or
xlat
sbb
and
int
fsubrl
arpl
cld
mov
sti
xchg
sbb
push
ds
jle
mov
jge
imul
sbb
lock
or
aaa
push
out
sub
xor
fldt
scas
les
jnp
mov
mov
mov
add
mov
sbb
xchg
pop
jge
fcompl
mov
push
and
xchg
loop
push
dec
xor
jge
or
mov
push
cld
mov
out
inc
inc
mov
daa
orb
ja
dec
adc
outsb
scas
cmp
arpl
jle
in
dec
pop
or
aam
and
emms
jecxz
push
addr16
aad
jbe
adc
inc
sbbl
insb
xor
or
push
jg
jae
fsubr
mov
test
mov
mov
mov
hlt
outsb
frstor
fisubrl
adc
inc
cli
icebp
inc
cli
andl
jb
data16
mov
mov
push
sbb
out
inc
jnp
aam
mov
mov
fdivl
xchg
add
loop
cmp
cmp
lock
sbb
push
sbb
idivl
insl
cltd
fldcw
mov
fucomp
std
outsb
and
cmp
loopne
jno
cltd
xchg
je
orl
inc
ret
sbb
dec
xchg
push
dec
inc
das
and
arpl
jle
inc
rclb
inc
inc
scas
lods
sti
add
or
jecxz
add
imul
mov
sub
mov
dec
nop
mov
mov
roll
jle
aas
insl
stc
shl
pop
fsubl
push
out
sub
lcall
frstpm(287
test
call
adc
mov
push
gs
ret
sub
sub
push
shll
adc
xchg
adc
mov
test
pop
outsb
outsb
mov
and
clc
jmp
fidivl
paddd
jecxz
addr16
repz
out
leave
jmp
std
ja
lock
cmp
lds
lock
jne
enter
jbe
aam
jo
into
add
mov
in
insl
xchg
jge
mov
test
sbb
movsl
add
out
or
jmp
pop
xchg
imul
cmp
sub
mov
aad
int3
mov
faddl
cmp
imul
sub
sbb
aas
fildl
ror
fs
int
cmpsb
rolb
fstl
in
imul
mov
jg
and
push
adc
adc
push
push
mov
add
pop
fstpl
lcall
mov
enter
scas
ret
movl
push
orl
push
or
push
mov
fwait
clc
cmc
jmp
in
lds
push
cwtl
and
xor
sti
cmc
pop
pop
mov
gs
insl
lods
xchg
add
jge
insl
arpl
jmp
inc
leave
fwait
mov
dec
cmp
notl
mov
jae
loop
dec
mov
dec
fldl2e
outsl
imul
cmc
pushf
js
or
mov
in
cmp
ret
adc
push
imul
jmp
mov
lods
movsl
daa
push
xchg
push
ficompl
push
cmp
pop
repnz
cmp
or
subl
fwait
cmp
jecxz
xor
ficomps
scas
jle
sti
dec
xchg
adc
outsb
xchg
adc
outsl
pusha
or
mov
pop
and
loopne
sbb
push
insb
sbbl
mov
sbb
enter
jp
aam
xlat
add
fimuls
pop
mov
cmc
jmp
adc
mov
or
movsb
enter
in
xor
iret
movsb
outsb
pop
repnz
and
cmp
out
subb
paddusw
arpl
mov
es
jbe
cmpsb
test
mov
xchg
jp
sbb
lcall
fstp
cmpxchg
mov
mov
jae
adc
mov
dec
outsb
xchg
mov
xchg
xchg
ss
xchg
dec
or
add
daa
cmp
mov
hlt
stos
xor
mov
test
rolb
cmc
cmp
sbb
popl
andl
and
xorl
inc
insl
adc
xchg
ds
mov
ret
xor
jmp
movsb
fbld
mov
mov
push
lahf
xchg
in
xor
mov
push
jnp
shll
push
xrelease
xchg
lret
pop
scas
fisttpl
movsl
push
not
jl
push
inc
push
or
aaa
in
cmp
or
inc
sbb
adc
das
sti
cmp
fldt
add
jb
nop
xor
cmp
fs
fdivrl
mov
jecxz
cwtl
or
subps
push
int
js
sub
idivb
mov
scas
jp
jg
lods
hlt
mov
cmc
mov
ds
popa
add
mov
ret
pop
movsb
and
pop
inc
aad
cwtl
addr16
dec
ficompl
fsts
mov
mov
xlat
test
sbb
insb
mov
hlt
fmuls
imul
sub
aam
pop
std
add
push
inc
pushf
or
imul
sub
xor
cld
fisubrl
xlat
xor
sbb
jb
jne
bound
xchg
out
pusha
jmp
movsl
negb
in
and
add
cmp
gs
test
fbstp
mov
daa
inc
addr16
lock
jp
call
je
adc
stos
out
mov
enter
popa
push
movsb
ret
push
sbb
stos
mov
iret
insl
test
adc
fdivl
jns
mov
pop
jne
jno
sbb
mov
std
ret
push
dec
arpl
popa
data16
inc
add
xlat
std
stos
or
int3
jge
sarb
inc
loopne
daa
sbb
xchg
dec
decl
mov
jbe
fadds
aad
xchg
xlat
xor
hlt
cmp
cwtl
stc
xor
test
lds
pushf
jnp
and
mov
leave
pop
xchg
cs
cmpsl
mov
mov
mov
dec
push
pop
data16
mov
jne
mov
mov
mov
mov
inc
arpl
rorb
xor
dec
lcall
add
inc
stos
adc
sub
bound
fs
xor
push
push
xor
jmp
clc
jnp
sub
dec
mov
pop
adc
les
adc
xchg
fisttpl
cld
mov
cmc
out
add
pop
in
pop
data16
popf
popf
leave
cmc
add
pop
and
dec
mov
or
mov
shll
fnstsw
imul
mov
mov
out
dec
push
or
fidivl
mov
sbb
mov
or
loop
daa
pop
popf
insl
enter
mov
mov
test
loopne
mov
jp
dec
mov
push
adc
loop,pn
or
fidivs
mov
inc
adc
cmp
ss
or
jo
mov
mov
mov
push
daa
sub
pusha
push
fwait
nop
mov
lods
jle
fmul
jnp
mov
sub
aaa
mov
pop
mov
lret
adc
xor
inc
imul
iret
out
mov
dec
sbb
mov
dec
test
pusha
add
hlt
push
fcompl
leave
leave
subl
mulb
pop
insl
test
sbb
push
call
mov
stc
shrb
andb
inc
jae
add
mov
lea
ret
into
push
scas
test
adcl
std
cld
cli
xorl
test
fnstsw
imul
popf
fwait
pop
dec
dec
gs
hlt
mov
js
and
pop
pop
jo
in
inc
mov
aaa
addl
popf
test
dec
push
sahf
xchg
iret
shll
push
mov
popa
jp
cmpsb
nop
push
and
daa
add
shll
cmp
jns
mov
add
cs
ss
xchg
int3
adc
leave
push
lcall
sbb
push
dec
out
or
pop
addb
jae
loop
push
cltd
push
sub
adc
jl
jge
cmc
or
shl
gs
xchg
test
adc
imul
mov
les
or
jae
movsb
sbb
je
mov
mov
mov
push
lea
lods
mov
jge
lock
xchg
clc
mov
aaa
dec
dec
jge
pop
cmpsb
adc
jg
test
mov
sub
mov
fistps
and
xchg
adc
mov
cmp
jp
dec
ret
insb
inc
jp
cmpsl
pop
xor
ja
jo
or
mov
dec
adc
bound
or
cmpsl
jnp
loope
std
xchg
sub
mov
js
iret
lret
or
xchg
mov
inc
mov
fcmovnbe
pop
and
movsb
pop
push
sbb
inc
sbb
gs
push
or
mov
subl
pop
jle
jp
mov
mov
sub
adc
inc
add
xor
adc
xchg
out
xchg
push
fdivrs
and
dec
mov
mov
sahf
rcll
mov
push
mov
or
mov
test
dec
jp
roll
int3
arpl
dec
int
jle
sub
pushl
xchg
sub
mov
int
es
inc
push
fsub
fs
daa
pop
shrb
push
stos
loop
inc
fldt
xchg
cmp
fucompp
inc
xlat
insb
sub
leave
loop
fimull
mov
test
xlat
add
mov
shll
cmpsl
inc
cmp
imul
mov
pop
loopne
lcall
ljmp
dec
jbe
imul
aam
outsb
pop
adc
add
xor
out
mov
pop
push
rcl
imul
push
ret
into
mov
stos
lods
shlb
sbb
mov
les
pushf
ja
sbbl
ja
test
dec
dec
insl
repnz
lock
jle
data16
sbb
cmp
loope
inc
fiaddl
jecxz
cwtl
call
cwtl
or
xchg
outsb
mov
loop
in
pop
sarl
jg
popf
xchg
jg
mov
push
add
add
add
ret
mov
cmp
popa
jmp
shr
lods
push
lret
lcall
ljmp
out
mov
sub
push
cmp
push
push
xlat
rorb
and
mov
and
mov
push
xchg
or
push
jb
xchg
loope
push
pop
xor
pop
xchg
movsb
jo
ss
mov
testl
mov
dec
dec
xor
lea
xchg
jbe
mov
push
jbe
xorl
jno
daa
and
xchg
add
stos
adc
scas
xor
pop
insl
mov
jbe
test
pop
scas
and
stos
jno
and
addr16
mov
xor
cli
cwtl
out
iret
js
cmp
sub
imul
test
fnstcw
jle
mov
rep
outsb
ret
adc
jns
xor
mov
pop
dec
lret
sub
test
or
lret
aaa
mov
sahf
clc
jge,pn
sbb
pop
or
stos
es
xchg
xchg
cmp
clc
add
lock
notb
and
xchg
icebp
xchg
das
jno
add
enter
movsl
push
add
imul
rcrb
shrl
pushf
lods
iret
add
mov
mov
arpl
xor
or
mov
inc
jge
or
lahf
cmc
xchg
pop
add
xor
popf
in
xor
xchg
cld
ljmp
nop
in
push
sbb
cmp
mov
fldt
pop
cltd
je
fdivrl
rcrb
out
push
das
xchg
mov
testb
pop
mov
add
mov
andl
jae
and
ss
mov
lods
icebp
fabs
sbb
out
orb
lock
cmc
cmp
call
cmp
xor
jo
push
daa
sub
test
shrl
repz
xor
cmc
pop
xor
out
pop
inc
inc
clc
jl
lea
enter
int
fnstcw
mov
or
lcall
ficoms
pushf
sub
cmp
mov
bound
fs
push
dec
in
pushf
adc
in
push
cmp
dec
jns
es
and
out
xchg
push
add
push
sbb
adc
test
dec
xchg
and
decb
mov
mov
imul
mov
cwtl
cwtl
adc
jo
movl
jno
imul
test
clc
or
push
fsubrl
es
or
mov
jle
outsb
xor
loope
cmp
pop
push
pop
adc
mov
or
dec
sbbb
cmp
mov
shl
aaa
clc
int
ret
lret
in
inc
sbb
sahf
leave
repz
pushf
mov
lcall
xchg
cmp
jae
sbb
inc
lods
mov
mov
cwtl
lcall
sub
int3
aaa
mov
push
mov
adcb
cmpsb
mov
xchg
cmp
pop
sub
aaa
push
and
cli
cli
sbb
imul
jp
xchg
popf
popf
subl
int3
push
cwtl
fisubs
cmp
cli
dec
ljmp
aad
jno
xor
mov
pop
je
or
cli
mov
pop
lea
lods
enter
pop
inc
lea
sbb
jne
insb
xorb
addl
xchg
jl
xchg
and
xchg
mov
mov
pop
std
aad
test
out
xor
push
stos
cmp
mov
mov
mov
xlat
add
inc
ret
arpl
pushf
mov
jl
jle
jb
or
aam
push
pushf
mov
inc
inc
mov
mov
pandn
mov
mov
xor
mov
outsl
enter
mov
in
mov
daa
mov
push
outsl
out
out
mov
movsl
adc
es
test
xor
push
addr16
pusha
push
inc
stc
cmp
sbbb
sub
fcomi
aas
lea
mov
std
pop
or
fwait
and
negl
out
pop
pop
push
cs
mov
sbb
lock
push
sub
cmp
orl
rolb
pop
pop
push
outsb
dec
cli
jmp
insl
shl
adc
pop
roll
es
jl
xor
test
xchg
pop
or
push
movaps
mov
xchg
push
shrl
adc
pop
xor
adc
pop
add
xchg
fwait
mov
mov
sbb
and
sub
popf
push
insb
mov
xchg
and
lret
cltd
out
mov
inc
jns
icebp
out
mov
push
ja
ret
pop
and
movsl
lret
jecxz
stc
sbb
jne
adc
and
test
std
add
shll
add
lea
movsb
pushf
iret
lcall
ss
sub
gs
rclb
add
xorps
jecxz
mov
and
xlat
popa
movsb
popf
addr16
jmp
iret
test
push
mov
push
leave
xchg
cmpb
push
ds
dec
mov
cmp
push
mov
rorl
xor
pop
sbb
lock
and
or
push
cmp
sub
sbbb
ljmp
daa
lcall
lds
inc
xlat
fldt
divl
jno
sub
mov
leave
jae
fwait
cmc
rorb
movsb
jnp
mov
int3
jmp
inc
outsl
lds
cmc
dec
jne
add
repnz
or
lock
insb
imul
push
std
jnp
mov
xchg
xchg
std
dec
add
ret
sbb
inc
adc
pop
outsb
out
adcl
lcall
push
aaa
sub
xor
cld
arpl
js
xchg
and
sub
call
mov
sub
fwait
lock
js
das
icebp
cli
push
std
or
mov
mov
cmp
sub
outsl
fnstsw
push
mov
push
adc
cmp
push
mov
push
ss
mov
test
ss
fisubl
popf
je
and
xchg
addb
inc
sti
push
push
xchg
cmp
inc
ljmp
fldl
cli
cli
and
sub
cmp
lods
or
xor
lret
insl
stos
and
mov
xchg
gs
stos
out
sub
cmpb
push
je
inc
les
loope
pop
in
ret
mov
pushf
jb
dec
int
sarb
cs
shlb
ret
in
loop
out
daa
in
jno
add
int
xchg
loope
ret
fstl
icebp
cmc
into
cltd
fiadds
inc
stos
pop
mov
aam
pop
jns
rorb
or
inc
insb
lods
dec
mov
pop
dec
jne
mov
imul
dec
mov
fldl
repz
rcrl
cmp
pop
sahf
cmp
mov
mov
xchg
pop
sub
mov
int
sub
mov
addb
jg
cmc
daa
jl
mov
sbb
iret
fs
adc
aad
icebp
inc
loopne
sub
push
pop
bnd
or
out
stc
cmpsb
mov
cmpsw
ss
and
hlt
pop
jb
rcrl
jmp
andb
fstps
pop
cmp
movsl
ficompl
mov
in
cltd
mov
das
dec
add
cmpsb
les
mov
xchg
cs
cltd
popf
push
arpl
mov
int
xchg
jo
arpl
lret
sbb
ror
test
ds
jg
adc
and
mov
push
push
xor
mov
push
mov
in
imull
sbb
jecxz
inc
into
push
insl
inc
test
pop
mov
xor
mov
fsubl
and
gs
dec
mov
add
decl
notb
stos
repnz
or
out
in
push
inc
lea
flds
sub
ljmp
add
lods
sub
mov
xchg
addb
ret
add
jo
sub
mov
xchg
arpl
icebp
mov
mov
jle
or
lock
lods
adcl
push
test
xor
jno
jb
jne
clc
in
cmp
add
rcrb
sbb
movsl
inc
jne
mov
lahf
mov
and
and
jmp
stos
fwait
lds
stc
mov
xchg
incb
dec
lahf
fxch
mov
dec
fdivp
dec
mov
add
daa
jns
lods
lret
inc
hlt
mov
and
dec
out
push
ret
pop
cmp
cmp
adc
inc
int3
pushf
fcoml
loope
push
andl
movsb
xor
pusha
push
cltd
aam
mov
push
mov
jge
jle
shll
ret
xchg
inc
jo
push
js
addr16
mov
xchg
stc
sahf
int
and
inc
lret
xor
add
cmpsl
out
xchg
roll
pop
nop
cli
mov
clc
pop
ficoml
pop
adc
scas
ficoms
rol
lea
lods
xchg
rorb
pop
sbb
call
sbb
call
mov
ficomps
bound
stos
lods
insb
jo
mov
mov
xor
xchg
mov
in
lods
movsl
rcl
mov
sub
mov
jno
pop
cmpsb
xlat
mov
mov
xchg
aas
add
jns
jge
std
jmp
inc
dec
lahf
adc
daa
repnz
ss
mov
add
push
cltd
aaa
push
sbb
sahf
dec
aaa
add
nop
mov
mov
das
jnp
inc
cmp
out
adc
cmpsb
dec
xchg
neg
hlt
mov
jg
cmpsl
movsl
dec
and
pop
or
mov
add
iret
jae
mov
subl
les
mov
movsb
mov
lds
pop
xchg
xchg
mov
mov
push
bound
mov
pop
fidivrs
dec
sarb
adc
sub
jp
adc
and
jmp
faddl
mov
lock
jne
cmpb
pop
xor
test
fcomps
shll
mov
scas
xor
dec
push
pop
lods
sti
ja
iret
sar
mov
mov
icebp
jbe
xchg
mov
lret
xchg
test
mov
daa
popa
jae
imul
push
rcrb
andl
and
inc
mov
leave
push
add
push
lret
adc
push
int
jg
add
sbb
mov
gs
outsb
lock
shrb
push
addl
shrb
aam
sub
cwtl
xchg
mov
pop
push
cli
adc
enter
sub
jno
dec
xchg
cmp
inc
push
mov
push
sub
gs
mov
out
dec
enter
insb
pop
sbb
sub
jge
ret
cld
daa
mov
or
js
test
daa
inc
bound
movsl
insl
pop
jbe
testb
lock
inc
outsl
pushf
or
mov
inc
inc
popf
sbb
cli
aaa
imul
add
vdivpd
xor
subb
jno
push
add
mov
cmpsb
mov
adc
jecxz
xchg
adc
or
sbb
adc
inc
lret
sub
bound
divb
stc
addr16
dec
addl
or
fabs
rolb
push
pop
adc
sub
sbb
fimuls
mov
dec
add
fisubrl
add
lds
push
lock
jne
out
and
fucomi
adc
lcall
adc
data16
adc
mov
mov
pop
cltd
push
dec
fcomps
or
ret
cld
lret
push
outsl
outsb
mov
test
xchg
or
and
push
scas
insb
pop
jo
jno
mov
test
fnstenv
cmpsl
sub
fsubrs
pop
mov
and
in
loopne
jnp
sbb
adc
push
jecxz
lret
sbb
scas
test
jbe
cmpsb
mov
popa
fsts
fdivrs
add
pop
ds
fs
ja
lret
mov
mov
mov
stos
adc
out
call
sar
pop
cmpsl
testl
mov
inc
lahf
adc
in
or
repz
out
xlat
xchg
push
and
and
fmull
sbb
call
in
push
inc
xor
xor
or
orb
icebp
push
sub
leave
stos
and
cli
rorb
rcll
lcall
mov
js
jne
test
xor
loop
std
gs
outsl
insb
xor
ljmp
sbb
pushf
cmp
sub
int
or
adc
mov
les
xor
add
fldenv
test
and
dec
cli
mov
or
and
test
adc
jecxz
sarb
mov
inc
cmc
ljmp
shll
addb
cmp
sub
push
iret
inc
cmpsl
clc
fidivrs
xchg
jbe
cmp
arpl
dec
mov
js
sub
jae
or
mov
or
and
outsb
mov
ds
pop
add
add
jge,pn
in
les
and
pop
adc
hlt
loop
iret
fnstenv
fs
mov
in
dec
movsl
inc
pushl
fistl
inc
jnp
es
loope
pop
mov
enter
xlat
xchg
dec
adc
add
sbb
jno
push
pop
add
jo
or
fldcw
xor
jecxz
pop
sub
and
lock
les
jmp
pushf
pop
in
jmp
std
ja
js
in
aam
mov
daa
dec
push
sub
sbb
sbb
sub
je
adc
sub
pusha
je
repnz
out
dec
sbb
add
add
testl
sbb
mov
xchg
push
push
push
test
mov
sub
add
dec
in
ja
push
jbe
mov
push
es
mov
inc
jmp
add
dec
or
ret
loop
aas
imul
popf
add
or
cmp
push
sarb
popf
leave
fcomps
xchg
fisubl
push
xchg
aaa
mov
sbb
sub
jp
into
mov
out
mov
xchg
jmp
pop
es
and
pop
andb
pop
or
mov
dec
dec
fistl
add
fstl
mov
push
mov
sarb
lods
repnz
sti
je
insb
loope
cs
subb
mov
xchg
xchg
adc
movsl
pushf
ret
lods
dec
mov
cmpsb
clc
fiaddl
mov
mov
outsl
pop
mov
mov
mov
mov
pusha
sub
xchg
xlat
mov
mov
sub
sub
aas
pop
repz
jecxz
rcll
mov
push
adc
and
xor
pushf
push
out
or
push
pop
std
arpl
pop
mov
push
dec
imul
jae
imul
movsl
dec
repnz
and
shll
fldt
dec
mov
jle
and
ja
mov
pop
lahf
mov
pop
inc
idiv
cmp
loope
mov
add
push
test
jo
roll
adc
pop
loope
inc
stos
lods
pop
je
adc
dec
rcll
adc
out
mov
aas
daa
ror
pop
hlt
cmp
pop
pusha
loope
inc
ja
xchg
lahf
add
push
add
sub
sbb
mov
dec
sbb
adc
mov
fcmove
sbb
mov
jnp
push
mov
dec
jae
mov
sub
out
rclb
and
or
adc
dec
jnp
es
xor
add
ljmp
cmp
scas
inc
mov
dec
in
jl
ja
inc
mov
outsl
xlat
test
fs
lods
or
inc
or
mov
in
jl
cmp
sbb
cmpsl
mov
inc
pop
dec
jae
xchg
scas
pop
fldl
mov
mov
mov
and
out
and
pop
pop
jp
lcall
jns
add
or
mov
adc
inc
and
or
out
or
and
movsl
adcl
pop
je
xchg
pop
pop
jns
les
jns
xchg
add
jo
stos
mov
addr16
out
pop
repnz
movsl
cmp
test
std
loopne
adc
xchg
pop
xor
cli
icebp
shll
pop
adc
and
aad
out
inc
xlat
jmp
cmp
fidivrs
divps
or
sbb
mov
addr16
adc
xchg
jmp
inc
xchg
dec
sub
mov
hlt
popa
gs
fsubs
sub
shrb
mov
fistl
cmc
xlat
mov
and
out
std
add
jmp
cmpl
fildll
push
ja
movsb
lahf
push
and
push
inc
mov
push
sub
in
sbb
out
push
or
xor
push
mov
cmpsl
fwait
jo
lret
dec
inc
mov
and
adc
xorl
pop
lcall
or
or
lret
fs
xor
in
divl
mov
rcl
mov
add
ficoms
std
sbb
and
cmp
sahf
out
repnz
shll
mov
xchg
cmova
push
adc
data16
add
pop
dec
mov
inc
push
adc
and
das
popf
loopne
into
and
in
add
adc
fcoml
push
cmpsb
test
mov
mov
enter
sub
pop
pop
push
ret
fwait
jge
mov
mov
subl
cmpb
test
pusha
mov
loope
mov
pop
inc
icebp
ret
xor
mov
pusha
pop
imull
and
xor
stos
add
enter
pop
mov
adcl
cmpsb
fidivl
xchg
cmp
in
pop
dec
cld
push
test
jge
into
mov
mov
xchg
or
adc
pop
cmc
add
stc
cmp
mov
in
inc
cmpsb
xor
push
adc
and
imul
pop
repnz
sbb
push
jno
fidivs
adc
xchg
xchg
and
xchg
rep
repz
imul
xchg
pop
mov
mov
arpl
stos
adc
fsubrl
pop
xchg
jne
mov
and
insb
je
ficoml
jae
insl
or
cmc
jl
outsl
cmp
mov
repnz
xlat
jp
sbb
das
cli
in
fisubrs
xchg
int3
push
mov
das
jns
je
stos
xor
push
sbb
or
std
push
and
or
sbbb
xchg
lods
mov
jbe
js
adcb
push
xor
adc
jp
sub
pushf
mov
in
dec
inc
push
aas
fisubrl
mov
bound
mov
xor
lods
inc
xchg
jno
adc
inc
fcmovbe
xor
addr16
sub
adc
dec
jae
scas
push
mov
xlat
push
fld
add
add
fcomps
pop
or
inc
mov
repnz
push
loop,pn
gs
pop
cmc
mov
pmaddwd
pop
xchg
jg
sbb
test
sahf
cmp
and
lea
and
adc
sub
push
inc
scas
mov
jb
popa
and
pop
pusha
ljmp
push
fwait
sub
hlt
jae
lods
cs
daa
cld
scas
pushf
fwait
and
cltd
sar
fldcw
data16
into
imul
jo
mov
imul
adcb
je
jmp
call
iret
xchg
pusha
inc
sub
stos
sbb
sbb
sub
xor
lahf
push
hlt
arpl
cmpsb
pusha
repz
cmp
push
jne
pop
pop
mov
adc
imul
nop
mov
pop
pop
shrl
lahf
pop
in
jne
push
out
push
adc
sarl
push
cmp
pop
xchg
adc
cmp
xchg
rcrl
adc
test
sti
out
inc
fadds
cmp
mov
iret
test
pushw
mov
add
jle
jl
outsl
xchg
jle
pop
sahf
cmp
dec
add
jp
dec
jle
test
icebp
stc
jae
xor
divl
mov
stos
and
add
dec
mov
addr16
push
pop
mov
out
ds
je,pt
les
or
ret
sub
add
dec
rcrl
scas
mov
push
int
fs
stos
icebp
sbb
jg
and
xor
push
add
or
ret
test
mov
fwait
mov
std
enter
inc
je
adc
jg
jmp
and
jg
js
pop
enter
scas
xchg
orb
jae
pop
subb
jle
lds
mov
aad
sub
sbb
hlt
add
or
adc
jle
and
mov
mov
xchg
mov
pop
xchg
das
xchg
cmp
leave
mov
pop
sbb
cvtdq2ps
int
jmp
push
pushf
and
lock
pop
push
and
lods
hlt
ret
xor
and
mov
sarl
push
xchg
xor
lret
push
outsl
fistl
pop
les
push
daa
int3
jns
mov
clc
fstl
push
fwait
inc
in
cs
jmp
cmpsb
ror
cmc
call
rcr
pop
inc
mov
lods
xchg
jmp
movlps
jg
iret
sub
pushf
nopl
xor
pop
std
sbb
jmp
cmp
in
int3
js
cmp
repnz
fwait
jle
xchg
add
jmp
adc
shrl
sbb
icebp
adc
adc
into
and
xchg
or
push
pop
inc
mov
hlt
jg
adc
in
pop
xchg
je
pop
andl
pop
jmp
dec
xchg
push
les
push
pop
or
cmp
mov
xchg
push
pop
inc
setle
pop
jmp
cltd
mov
daa
inc
outsb
aaa
clc
fldenv
and
xchg
xchg
add
push
mov
jmp
adc
jmp
scas
popf
cmpsl
mov
clc
sbb
sbb
pop
sbb
sarl
dec
lock
popf
cltd
loopne
jl
add
pushf
test
xor
cmp
mov
imul
insb
jecxz
xchg
inc
dec
or
mov
icebp
xchg
push
iret
inc
xchg
cltd
dec
cmp
pushf
shlb
jp
mov
outsl
popf
ftst
push
lea
sarl
cmp
cs
push
push
je
popa
lret
jo
xor
lock
lcall
incb
sbb
xor
fsubrl
outsb
fidivs
mov
push
pop
dec
inc
mov
int
fimuls
and
sub
cmpsb
mov
outsb
daa
ror
movsl
pushf
lods
mov
inc
fcoms
pop
loope
mov
daa
shl
fdivs
xor
dec
notb
or
ja
es
outsl
in
sbb
int3
lret
fsubp
sahf
cs
into
and
out
jno
aam
int3
fistpll
xor
and
ret
or
pushf
and
ss
ret
das
mov
mov
mov
cmp
mov
mov
stc
div
scas
cmp
fisttps
xchg
adc
jae
dec
adc
cli
xchg
push
xorb
leave
sub
outsb
mov
enter
jne
scas
jecxz
aad
sub
push
mov
pop
sbb
cmp
sub
es
adc
jecxz
dec
iret
fcomi
outsl
enter
mov
stos
repnz
cmpsl
dec
inc
dec
imul
pop
xlat
xor
popa
dec
in
adc
je
or
inc
push
mov
xor
push
aam
in
in
mov
inc
pop
mov
mov
ljmpw
loop
leave
push
loop
scas
mov
das
mov
rolb
shll
push
jge
call
stos
or
mov
cmpsl
sar
lgs
addb
pop
or
in
dec
std
sub
das
mov
fs
cmp
pop
jle
movsb
cmp
xchg
or
imul
jno
mov
adc
sar
stos
xchg
pop
jno
gs
or
cmp
enter
cld
add
and
ret
mov
cmpl
out
add
inc
imulb
aas
push
in
loope
dec
in
push
out
into
std
scas
and
xor
nop
movsb
mov
mov
mov
push
ret
and
sahf
icebp
pop
roll
push
push
mov
pushf
pop
sbb
push
mov
fimuls
shlb
cmp
fnsave
ljmp
push
cld
mov
pushl
jns
fldl
cmp
imulb
sub
pushw
inc
push
adc
jae
test
sub
add
loop
in
out
xor
dec
mov
xchg
fwait
sbb
mov
cmp
xchg
decl
add
nop
inc
ret
push
push
lret
mov
stos
inc
mov
mov
xchg
imul
or
push
push
scas
jbe
and
xor
jbe
push
mov
pop
outsb
and
and
sarb
cmpb
lcall
cmp
insl
stos
sub
mov
cmc
insb
imul
test
adc
cmp
sub
mov
inc
jo
lret
xchg
leave
icebp
test
add
and
pop
fnsave
stc
cltd
mov
push
adc
jl
je
cwtl
lds
arpl
dec
xlat
sub
cmp
jle
arpl
xor
shl
sbb
jbe
jno
pop
mov
xchg
pop
dec
mov
dec
push
fiadds
sbb
fadds
scas
jb
mov
add
fsub
cmpsl
call
imul
fidivs
sub
in
ret
inc
lret
cli
dec
es
mov
jo
sti
xlat
mov
dec
adc
ds
push
hlt
mov
sub
pop
loop
jmp
jg
inc
add
movsb
jge
jle
out
dec
icebp
movsl
clc
xchg
pop
mov
repz
in
rcll
fnstcw
lods
fs
aad
lcall
fistl
clc
rcrl
fistpl
mov
dec
pusha
sahf
lahf
cmpsl
mov
jle
std
jno
out
xorb
rorb
dec
decl
xor
ret
sahf
aas
sbb
pusha
movsb
rclb
adc
jo
out
lahf
cli
cwtl
jmp
inc
or
lods
jb
pop
xchg
mov
cmp
dec
xor
enter
xchg
lods
inc
adc
sub
sub
subps
push
xchg
stos
xor
mov
dec
daa
pop
lods
loopne
push
sbb
cmpsb
inc
inc
sahf
mov
imul
es
xor
cmpsl
int3
inc
jle
cmc
icebp
xchg
mov
mov
pop
push
sbb
inc
add
sub
cmpsl
push
arpl
dec
or
fbstp
pop
sub
push
subb
pop
flds
mov
ja
call
stc
add
les
xor
bound
cmp
inc
sub
cmc
xchg
mov
loop
lahf
mov
xchg
sub
mov
dec
addl
inc
aam
pusha
xor
jne
cltd
aas
jp
xchg
imul
xor
sarl
cltd
icebp
ret
mov
mov
cwtl
mov
bound
jns
call
xchg
movsb
mov
adc
test
jg
pusha
xor
xor
repz
pop
mov
fldcw
xor
in
xrstors
outsb
xchg
pusha
mov
pop
les
iret
inc
frstor
fsts
dec
mov
cld
push
negb
movsb
mov
test
daa
cld
pop
sti
dec
roll
popf
std
mov
mov
fxch
dec
addr16
jbe
int
xchg
ljmp
sub
aad
adc
and
and
mov
lods
inc
stc
sahf
nop
lock
insl
insl
adc
xlat
add
andl
cmc
scas
mov
loope
mov
add
jae
decb
dec
cmp
mov
mov
xchg
jp
in
movsl
add
lcall
dec
dec
cld
scas
inc
jbe
sahf
addr16
stos
sahf
adc
cli
cmp
ss
stos
inc
mov
inc
fsts
jge
push
ja
dec
xchg
callw
xchg
push
lret
adc
mov
test
inc
bnd
push
jns
push
push
mov
mov
shll
adc
xor
mov
inc
cmp
or
dec
jno
lods
mov
mulb
mov
jmp
loope
inc
rclb
adc
cmc
das
jg
cmp
daa
push
imul
mov
mov
push
adc
cli
addb
sub
arpl
mov
add
addr16
push
jle
outsb
xlat
enter
mov
adc
or
mov
js
push
sbb
lret
std
test
pop
xchg
push
repnz
in
mov
pop
xchg
cmp
movsb
mov
xor
int
dec
xchg
test
adc
sbb
jne
jb
cwtl
inc
cwtl
enter
sub
hlt
add
xchg
dec
xchg
adc
insl
mov
push
push
xchg
sbb
mov
mov
int3
lods
cvtps2pd
addl
scas
in
sbb
into
in
xchg
sbb
xor
dec
dec
in
add
cltd
xor
mov
addb
in
jns
sbb
push
pushf
nop
pop
push
sub
pop
ds
in
inc
mov
fwait
repnz
sahf
push
mov
mov
pop
cmc
ret
ss
jno
mov
sbb
bound
jns
xorb
jae
xchg
popf
into
push
ss
push
inc
cmp
xchg
cmp
ja
in
and
mov
arpl
xor
jmp
xor
das
loopne
lret
movl
lds
outsb
xchg
dec
icebp
aam
dec
hlt
push
movsl
shll
lret
mov
repz
lahf
pop
mov
jae
dec
clc
aaa
jg
ret
xchg
mov
mov
pop
mov
stos
fdivrs
ret
or
inc
sbb
orl
cmp
push
mov
dec
lahf
lods
loopne
add
mov
out
pop
mov
fdivs
xchg
test
rcr
inc
shlb
mov
xchg
sarb
inc
push
jg
fwait
imul
rcll
pop
std
or
imull
xchg
cmp
in
ret
cli
rcr
je
filds
xor
div
or
xchg
inc
sahf
jb
loope
jecxz
or
or
add
jo
popf
test
pop
mov
and
lods
and
xor
cld
dec
aas
sub
cmp
lcall
sbb
dec
mov
outsl
dec
pop
mov
jl
pusha
cmpsb
dec
out
mov
mov
lods
out
sub
punpckldq
icebp
imul
jle
popa
lea
sub
adc
hlt
cmpsl
inc
sub
test
addr16
ror
inc
aas
sub
ret
fistpl
mov
mov
mov
push
imul
adc
xor
fidivrs
ret
out
add
shr
inc
mov
cmp
mov
pop
cmc
xchg
pop
pop
lea
jle
repz
jge
mov
xlat
jne
lahf
int3
out
jg
jns
lcall
sub
sub
sbb
testl
ljmp
jmp
ret
adc
push
jo
mov
push
mov
jnp
pop
int
mov
xchg
pop
loopne
push
gs
inc
sub
dec
and
xchg
cmp
or
mov
aaa
xchg
imul
in
scas
out
pop
jl
cli
lea
jl
fidivs
outsl
xchg
mov
cmp
test
arpl
sub
inc
fsubl
popf
and
sub
cmp
pop
and
adc
addr16
cmp
xor
pop
mov
negb
push
inc
sub
cmp
inc
dec
fwait
pop
pop
push
ss
loop
imul
in
push
pop
ficoml
xchg
repnz
ret
mov
xchg
sbb
popf
lret
das
loopne
frstor
ja
sub
aas
xchg
insl
xor
divl
aas
inc
xchg
mov
bound
jmp
mov
jge
sbb
in
fstps
insb
test
add
sub
xchg
push
sbb
pop
inc
add
mov
sub
js
lock
es
and
mov
push
xlat
sbb
scas
mov
roll
repnz
sbb
and
imul
jb
push
dec
cwtl
in
sub
out
out
sbb
shl
xor
popf
ficoml
pop
sahf
fcoml
mov
cmp
pop
mov
push
mov
into
and
xchg
arpl
adc
lea
push
pop
or
add
scas
js
xor
push
or
into
sbb
test
pusha
movsb
jmp
xchg
inc
fisttpl
lods
ss
lods
aad
sbb
push
lods
push
out
cmp
dec
std
cwtl
add
addb
dec
xor
gs
gs
mov
inc
pop
pop
testb
addr16
jo
test
out
fisttpl
adc
push
icebp
inc
mull
pop
pop
cmpsl
cltd
cltd
or
pop
push
sahf
stos
clc
nop
sbb
adc
enter
mov
sbb
mov
in
popf
jge
sti
cs
pop
pop
xchg
sub
mov
test
and
fisubl
test
mov
jg
fimull
jbe
test
mov
sbb
adc
test
mov
or
pmullw
call
jae
bound
fisubrl
cmp
fdivs
aaa
xchg
mov
insb
sti
xchg
or
jns
idiv
rol
mov
or
lods
inc
out
mov
pop
addr16
push
lods
adc
dec
dec
xchg
push
decb
sahf
sub
repnz
in
sub
daa
lea
jae
pop
cmp
lea
mov
pushf
pop
jbe
cs
pop
test
ss
es
adc
dec
imul
js
into
ja
or
mulb
ja
cwtl
fwait
arpl
sbb
in
add
push
or
std
dec
mov
or
mov
fcoml
cmpsl
pushf
mov
jl
out
pop
add
sub
sti
test
mov
dec
imul
pop
fdivs
adc
cmp
push
pusha
mov
or
fadd
adc
cmp
sahf
std
jle
and
icebp
sub
mov
cmp
mov
adc
mov
and
in
imul
int
and
insl
mov
call
dec
push
jl
jb
cmp
cmc
loop
dec
mov
fucomip
es
mov
dec
aam
in
add
fwait
leave
daa
cltd
fucomi
sub
push
sub
sub
ficompl
scas
dec
ljmp
and
sbb
dec
out
push
or
dec
push
sub
mov
jno
sahf
mov
dec
icebp
cmpsb
mov
fwait
es
push
sbb
dec
lods
xchg
int
and
mov
fdivr
jne
mov
push
push
lods
movsb
cmp
scas
cs
xor
fisttps
aam
adc
pop
add
popf
sti
mov
adc
pop
les
xor
fcoms
seta
icebp
mov
add
or
push
mov
aas
push
imul
insb
cs
int
and
fnstcw
xchg
dec
mov
lret
stos
mov
roll
stc
sub
sahf
mov
pop
aaa
mov
mov
aad
fnstsw
add
out
fisttpl
ret
fcmovu
aad
xor
ret
cmc
push
test
push
in
das
push
addr16
and
dec
das
and
in
pop
fwait
dec
dec
test
add
adc
clc
add
loopne
sbb
bound
shr
mov
jg
mov
dec
mov
adc
loope
pusha
jb
out
xchg
cltd
jnp
or
pushf
xchg
insb
mov
mov
xchg
stc
cmpsl
outsb
xor
fs
push
jg
pop
xchg
insl
mov
addr16
gs
test
dec
or
xor
mov
sub
inc
add
mov
loop
push
stos
lock
loop
xchg
insw
xchg
sub
ljmp
xlat
test
notl
call
sub
notb
lds
lahf
ret
loope
add
jecxz
enter
jl
xchg
xchg
jp
cmpsl
inc
popf
pop
jge
lods
push
cld
cmp
inc
pushf
dec
inc
clts
jge
xchg
jb
rorl
and
repz
adc
inc
repnz
je
test
divb
lock
ss
sub
movsl
jae
fdiv
xor
cwtl
jecxz
insl
push
jb
sub
inc
movsl
out
adc
push
test
sbb
sbb
cmpsl
xor
das
in
xchg
jae
mov
dec
addr16
cmp
enter
inc
xchg
jbe
loopne
aaa
inc
or
ret
mov
or
addb
mov
add
cltd
push
fdivr
inc
out
sbb
fmuls
xlat
aad
push
mov
xchg
js
push
inc
mov
cmp
push
cmp
mov
xor
sub
test
fs
mov
sub
popf
movsb
sbb
repz
les
es
fwait
insb
cwtl
fnstcw
pop
loop
mov
outsb
jae
xadd
call
inc
aad
xchg
mov
mov
push
stos
leave
dec
test
inc
jge
pop
dec
mov
cmpsb
cmp
pop
stos
or
imul
sbb
stc
movsl
orb
test
xor
mov
jne
dec
push
adc
mov
ds
stos
cltd
pop
fnstsw
pop
xchg
pop
cmpsb
fadds
nop
das
or
mov
lret
testl
scas
in
cmc
es
in
or
mov
push
jnp
icebp
jg
call
imul
and
js
cmp
test
aad
adc
inc
int3
in
les
jnp
cmp
insb
fists
add
pop
xlat
add
int3
outsl
mov
or
adc
lods
sbbb
pop
adc
mov
add
in
mov
inc
popa
push
and
xchg
inc
xchg
loope
js
mov
stos
push
mov
or
ret
or
ljmp
fs
xor
mov
mov
xchg
add
xlat
jno
jle
dec
xor
mov
outsb
test
roll
into
and
mov
jg
hlt
cltd
mov
cli
xchg
mov
in
pop
test
or
mov
aad
sub
adc
in
add
mov
lods
adc
sti
jo
sbb
mov
lret
mov
cmp
adc
mov
aaa
mov
shll
cmp
jb
add
cmp
sti
rsqrtps
fisttpl
push
jg
repnz
jnp
push
insl
pop
pusha
push
ds
mov
outsl
lods
push
frstor
retw
shr
shlb
jl
loop
ja
fdivr
lods
stc
into
fildll
sub
jo
dec
fs
mov
enter
and
shll
pop
rcll
mov
sbb
mov
je
stos
sub
and
jno
pop
xor
jle
ljmp
cwtl
es
xor
mov
scas
mov
int3
rcrb
xchg
add
and
pop
jl
xchg
into
dec
pusha
mov
xchg
mov
movsl
mov
and
call
pop
je
or
std
jg
mov
nop
sbb
js
sub
lds
cmp
popf
mov
xlat
sahf
dec
aaa
fldenv
xchg
jg
movhlps
adc
ret
and
repz
lcall
or
into
fucomi
mov
xor
jg
leave
sub
cmp
ss
out
lods
cwtl
mull
push
or
jmp
mov
xor
mov
push
mov
call
xchg
aaa
or
pop
xor
pop
and
mov
lods
cmpsb
ds
mov
clc
pop
cmp
cmp
mov
adc
or
cmp
xchg
mov
xchg
mov
mov
push
sbb
int3
jns
das
and
cmp
ds
andl
ficomps
add
stos
mov
and
pop
push
mov
loop
jo
inc
sbb
jae
and
roll
aad
pop
data16
push
pop
inc
jp
xchg
pop
outsl
jl
cmpl
fnsave
fs
in
or
sbb
pushw
fisttps
add
xlat
sti
lahf
out
xor
pop
jle
pop
cwtl
arpl
fnsave
xchg
jae
sbb
push
jle
cmp
adc
push
jle
lods
jecxz
addr16
mov
xchg
push
inc
xchg
hlt
popf
mov
dec
dec
add
jnp
and
cmc
mov
mov
fwait
xor
and
lcall
cld
aam
iret
adc
out
xlat
shrb
popa
pop
insb
cs
repnz
dec
cmp
leave
cmp
sub
insb
sbb
push
add
fwait
sbb
push
xchg
repz
push
or
stos
push
jmp
ds
call
js
add
mov
push
imul
loop
push
push
xor
inc
fs
or
cmp
inc
xor
jmp
movsl
xor
add
scas
or
int3
inc
arpl
arpl
mov
dec
adc
inc
clc
mov
popf
popa
push
jno
xchg
mov
fiadds
jg
int3
sti
sahf
pop
negl
or
imul
xchg
lods
pop
push
mov
fs
lret
nop
das
jecxz
xchg
movsl
xchg
and
loope
xchg
jg
in
mov
dec
xchg
sti
scas
stc
adc
and
add
mov
cmpsb
dec
push
cmp
xor
cmp
stos
or
or
adc
outsl
mov
fnsave
add
mov
push
xor
int
stc
sti
scas
loopne
int3
sti
dec
outsl
repnz
icebp
call
xchg
je
inc
js
ret
arpl
or
sub
push
dec
in
lock
sub
into
pop
fidivrl
mov
adc
insl
mov
stc
xor
aaa
sbb
lret
xchg
xor
cltd
mov
and
out
rorb
iret
dec
xor
into
aad
cwtl
mov
cld
xchg
push
and
shrl
push
mov
jbe
or
push
cmp
pop
adc
cmp
or
cmp
loope
push
push
cmc
fs
cvttps2pi
xchg
jecxz
leave
scas
xlat
test
mov
aam
fwait
aad
lret
jp
and
out
sub
andl
cmpb
and
cli
and
sub
mov
in
popf
and
mov
ljmp
cli
call
mov
and
jmp
inc
mov
mov
cltd
test
add
add
jns
and
xor
push
leave
pop
add
mov
push
lock
addr16
xchg
enter
mov
add
push
adc
scas
fwait
cmp
cmc
jmp
popf
add
cmpsb
rcrb
jbe
sbb
push
aaa
adc
popa
or
scas
add
inc
ja
std
movsl
jecxz
add
add
inc
and
inc
loope
adc
ds
fmul
mov
sbb
fnstenv
xor
jns
out
orb
rorb
std
aad
xchg
cmp
mov
mull
mov
sub
mov
dec
pop
popf
pop
pop
dec
ss
andb
xchg
lahf
in
je
xchg
xchg
inc
sbb
pop
mov
enter
mov
leave
xchg
call
pop
rdmsr
rorl
jnp
mov
mov
mov
cmp
addr16
data16
insb
xor
inc
dec
popf
adc
push
cli
xchg
jns
notl
push
fimull
or
lods
imul
lods
test
mov
push
mov
adc
jb
adc
jecxz
mov
xchg
cmpsl
adc
inc
sbb
xor
sub
and
jbe
and
es
lahf
xor
xchg
insl
adc
jle
bound
ret
xor
cltd
stos
addb
add
adc
jmp
sub
fistps
gs
pop
cmp
iret
or
sbb
xchg
mov
pusha
push
and
rcr
ljmp
jmp
ficomps
jbe
pop
dec
in
popf
leave
fdivrs
lock
jmp
test
nop
dec
or
dec
into
imul
sahf
sbb
test
je
xor
pushf
xor
rdtsc
xchg
divb
lahf
cld
lods
and
js
das
add
js
xchg
adc
pop
aas
nop
gs
add
out
and
sbb
jnp
cltd
lods
addr16
lcall
jge
hlt
add
jb
adc
sbb
push
jnp
sbb
pop
cmp
adc
fnstcw
cmpsl
in
xor
pop
cmp
ret
bound
or
addr16
push
dec
ret
mov
clc
add
lods
xlat
and
ret
xchg
pusha
dec
or
test
test
insb
lds
fs
into
xor
sub
int3
or
push
lock
inc
pop
push
bound
mov
push
or
lods
shr
jae
sub
lret
mov
dec
out
jnp
ljmp
mov
xor
inc
xchg
sbb
stos
xchg
add
leave
scas
or
xchg
bound
mov
mov
cmp
adc
xchg
sti
mov
jno
push
mov
imul
shl
push
jo
ja
pushf
jo
insl
mov
int
outsb
and
mov
shrb
or
inc
repnz
fdivs
mov
cmc
out
xchg
imul
and
lds
test
xchg
out
pop
dec
sub
iret
sarl
in
push
fildll
lahf
adc
xor
out
sub
jp
fwait
jge
add
adc
leave
fs
fisttps
inc
jmp
outsl
sbb
add
dec
jmp
mov
jbe
add
adc
rorb
add
in
sub
clc
xor
scas
push
xor
cmp
movsb
push
pop
adc
ss
cmc
and
test
shrl
xchg
enter
fnstenv
aam
lock
dec
sbb
in
mov
xor
pop
andl
lock
repnz
push
sbb
andl
xchg
sbb
sbb
fimuls
sbb
pop
mov
xlat
dec
or
cltd
dec
jo
lock
push
int
leave
pop
imul
adc
add
cmp
xor
or
sub
sub
xor
jmp
xor
pop
sahf
add
push
push
lret
jp
cmpsl
mov
inc
daa
push
nop
out
push
push
xor
or
sub
pushl
mov
mov
test
aam
xchg
push
imul
jp
popa
ret
movl
push
or
in
sbb
data16
push
mov
sbbb
push
nop
mov
mov
fwait
xchg
cs
cltd
pushf
daa
mov
inc
stc
xchg
jecxz
push
pop
insl
push
xchg
mov
push
mov
hlt
nop
or
lea
adc
jbe
hlt
push
mov
fisubs
cmp
push
hlt
int
in
ljmp
push
mov
add
add
out
jl
or
push
push
rolb
push
mov
icebp
out
sub
cmp
mov
adc
push
fdivrl
or
repnz
adc
divb
mov
jecxz
adc
es
xor
push
pop
inc
xchg
xchg
pop
fistps
sub
inc
ds
mov
lahf
mov
and
sub
lcall
or
loop
mov
mov
or
testb
push
mov
scas
mov
cmp
pop
xor
mov
lret
sub
mov
daa
repz
jecxz
inc
lock
mov
push
stc
add
jnp
aaa
and
push
data16
jl
add
mov
dec
insb
cld
sub
jo
sbbb
xlat
and
push
xlat
and
nopl
or
mov
sti
mov
fwait
mov
ret
and
jle
inc
out
adc
mov
pop
pop
add
cs
jnp
outsl
jo
adc
scas
loopne
jp
adc
inc
cmc
clc
loopne
fdivs
ja
into
cmp
sub
adc
sbb
inc
ljmp
aas
imul
stos
mov
hlt
scas
sub
add
adc
mov
adc
push
xchg
dec
cltd
hlt
popa
outsl
add
xchg
push
jne
jmp
push
mov
mov
inc
pop
cmp
imul
xor
cld
shlb
add
shlb
xchg
out
jl
fwait
movsb
push
jl
jle
jnp,pt
stos
ja
mov
and
loop
xchg
xor
daa
push
aas
or
add
pop
stos
pop
loope
lods
jnp
testl
pusha
lock
fnsave
shrb
outsb
xchg
sti
testl
test
mov
mov
xor
scas
fisttps
and
xchg
sbb
mov
xchg
in
mov
and
pop
jle
sub
adcl
mov
inc
scas
mov
iret
rcrl
pop
push
mov
and
iret
lods
imul
sbb
add
dec
rclb
out
jns
or
jmp
fwait
jb
loopne
mov
enter
cmp
sub
js
xchg
push
and
cmp
sub
cmpsb
lret
xor
mov
sbb
jo
mov
xchg
mov
mov
sbb
jne
dec
out
stc
xchg
or
repnz
cmp
std
or
mov
dec
dec
loop
push
dec
inc
in
adc
push
jge
adc
out
pop
xchg
cli
push
jmp
in
mov
adc
add
and
scas
loopne
and
lahf
pop
jle
xchg
daa
lcall
and
push
fwait
and
fwait
sbb
or
stos
sti
inc
aaa
adc
test
clc
and
or
mov
cmpb
je
rcr
push
xor
xchg
shr
insb
hlt
ljmp
mov
iret
cmp
subb
xchg
inc
jp
cltd
std
sub
cmp
js
dec
adc
dec
mov
xor
data16
jmp
mov
push
fdiv
push
testl
cwtl
add
lods
mov
xchg
call
fwait
lahf
cmc
cwtl
push
scas
push
pushf
movsb
dec
inc
iret
mov
jge
jmp
ret
jmp
hlt
test
mov
ljmp
lahf
int3
call
jge
dec
pop
stc
cli
dec
pushf
add
mov
ja
shrl
mov
stos
sub
mov
jne
inc
jae
lcall
pop
sub
and
enter
call
inc
fdivs
jp
mov
int
push
lods
dec
inc
je
sbb
std
jne
cmp
jno
mov
negl
sub
sub
adc
and
nopl
out
fs
pushf
lods
je
pop
cmp
stos
dec
inc
mov
push
pop
mov
push
fidivrs
aam
inc
lea
sbb
rcrl
pop
stc
lahf
push
paddd
mov
pop
sub
mov
fs
xchg
lods
mov
cld
xchg
int3
ficoml
divb
mov
cmp
jge
jl
ja
jnp
pusha
enter
pushf
test
decl
test
mov
gs
and
data16
in
xor
daa
clc
dec
int
lret
scas
mov
int3
push
xor
or
dec
lahf
cmpsb
push
xor
push
adc
mov
scas
push
mov
ret
mov
add
movsl
shll
mov
and
cmp
ljmp
xor
jg
ret
push
pop
push
dec
jecxz
jns
int
inc
lods
dec
and
dec
aaa
jns
mov
inc
mov
or
stc
stos
rcll
mov
mov
adc
stos
mov
fisubs
test
push
pop
popf
mov
dec
movsb
and
mov
data16
jmpw
push
adc
gs
test
xchg
testb
and
or
repz
insb
int3
cwtl
fsubs
mov
push
add
sbb
adc
shll
dec
cli
xor
nop
int3
jo
repz
xchg
aad
sahf
lock
lcall
lea
add
jo
mov
das
mov
loopne
andl
mov
daa
adc
push
inc
sub
pop
mov
push
lods
mov
mov
mov
mov
jmp
xchg
pop
loope
data16
adc
icebp
and
cmp
and
insl
movsl
lods
sbb
mov
dec
fsubs
das
fidivrl
rcrl
inc
push
jns
in
xor
inc
fstpl
data16
js
lcall
jne
pop
mov
push
iret
xchg
pop
mov
jmp
xchg
je
insb
addr16
cwtl
fwait
xor
vpunpcklqdq
enter
pop
and
sbb
int3
in
add
repz
mov
rcrl
sub
aas
pop
in
loop
inc
sub
dec
mov
addr16
push
les
imul
dec
out
mov
jp
push
mov
lds
popa
lock
pusha
mov
gs
cld
or
add
fwait
cld
adc
aas
insb
and
sub
insl
js
mov
out
fnsave
lcall
add
fstps
stc
lds
fidivl
or
push
fucomp
sti
aaa
aas
jle
push
movsl
ret
sbbl
sub
lods
mov
sub
out
and
test
lds
mov
aam
inc
fs
cmp
sub
hlt
mov
mov
dec
notb
lcall
sub
icebp
cmp
xchg
lods
mov
mov
out
frstor
lcall
push
jecxz
and
or
adc
fprem1
mov
or
xchg
push
dec
xor
dec
push
dec
loope
fldcw
ficomps
jle
jns
push
pop
test
inc
xchg
xor
popf
jnp
lcall
shrb
aas
cltd
popf
xor
dec
or
dec
mov
test
sbb
std
sbb
add
or
sarb
cmpsl
stc
cmp
div
xor
lret
sti
je
aaa
cwtl
fstps
mov
out
in
inc
jmp
or
insb
jge
repnz
add
mov
inc
cmp
mov
and
test
mov
jbe
adc
xchg
mov
xor
icebp
std
and
cmp
divb
fldenv
adc
adc
cltd
pinsrw
jbe
cmp
sub
ljmp
mov
insb
pushf
xchg
mov
adcl
cmp
cmpl
sub
insb
sbb
and
xchg
insb
and
out
shrb
adc
or
movsl
xchg
mov
daa
dec
xchg
loope
mov
jecxz
sub
fnstcw
cmp
std
cmpb
mov
xlat
fcomps
mov
std
movsb
pop
scas
xchg
xchg
jge
repz
or
lods
sbb
mov
aam
jp
inc
lock
xchg
mov
inc
stc
push
andb
sti
pop
cmp
jb
adc
test
inc
dec
loop
pop
sbb
or
sbb
clc
out
mov
pop
mov
cmpb
shll
adcb
int3
fsubrs
push
pop
xchg
mov
inc
mov
xor
mov
fwait
ds
test
xchg
andl
bound
movzwl
fnsave
leave
push
cmp
daa
push
cmc
xor
jnp
mov
jmp
fbstp
dec
add
jae
pop
jns
mov
mov
add
xor
das
adc
sub
int3
push
add
fwait
xor
out
pop
xchg
push
jo
inc
mov
scas
shlb
inc
movsl
fwait
adc
jp
sbb
popf
out
cmc
or
mov
dec
mov
push
dec
out
pop
push
pop
jp
pop
stos
push
and
pop
xor
movaps
push
cs
mov
arpl
fists
pop
shlb
inc
imul
or
pop
jbe
out
xor
xor
lahf
pop
lret
add
cs
aas
popa
or
test
ss
les
and
cmp
jnp
xor
pop
push
push
sub
mov
fwait
sub
mov
cwtl
lods
mov
insb
enter
mov
mov
or
test
pushf
cmpsl
sub
stos
aam
scas
add
mov
std
hlt
fdivs
jbe
scas
xchg
push
adc
push
cmc
xchg
jnp
and
or
gs
xor
jb
fisubl
fnstcw
test
pop
fstl
insl
and
jns
or
std
decb
vdivss
dec
mov
pop
lret
add
adc
jg
imul
push
out
and
push
ret
mov
idiv
call
dec
imul
adc
cmp
out
ljmp
int3
repnz
push
sti
imul
mov
pusha
xchg
cli
hlt
cmpsl
and
or
or
inc
push
cmpl
jge
pop
lods
call
jl
js
sbb
jae
insl
mov
sbb
sub
scas
lock
lahf
mov
pop
sub
and
shrb
lahf
and
jl
pop
arpl
inc
imul
lds
mov
addb
ret
push
cmpl
and
cmp
inc
aam
ds
repnz
push
jns
out
lahf
mov
mov
jle
ja
sub
jle
push
pusha
xorl
mov
sub
cld
inc
cmp
jecxz
push
mov
test
aaa
ds
lds
dec
popa
sahf
push
add
scas
nop
mov
xor
outsb
jae
push
cmp
jb
mov
das
cmp
push
fisttps
jl
inc
mov
das
jns
cmp
push
ja
mov
aas
mov
sbb
or
imul
adc
movsb
scas
mov
xor
insl
mov
mov
xor
inc
push
popf
xlat
sbb
jecxz
and
cwtl
mov
pop
aas
jp
sbb
addl
lret
or
lods
and
addl
into
and
rcll
jb
lds
adc
leave
mov
pop
jmp
adc
mov
lret
out
add
test
dec
sarb
sub
jmp
and
inc
xor
push
add
mov
loop
xor
scas
bts
clc
test
or
pop
pop
rclb
ss
pop
or
sbb
mov
pusha
lods
andb
icebp
adcb
ljmp
imul
lods
sahf
divb
arpl
push
sbb
jmp
inc
cmp
inc
movsb
gs
cmp
inc
add
enter
cmpsl
add
fmuls
inc
test
lret
stos
std
fisubrs
testb
subl
sbb
xor
popa
subl
adc
stos
jo
es
xor
repnz
mov
subl
or
inc
in
or
mov
movsl
xchg
mov
leave
shl
add
cs
dec
iret
xor
fwait
icebp
inc
inc
leave
push
enter
or
inc
sbb
xchg
jp
movsl
divl
sti
sahf
in
pusha
loop
das
out
dec
xor
clc
inc
xlat
in
jge
fisttpl
add
xchg
scas
ret
shl
nop
and
hlt
jno
xchg
cli
or
cs
add
sub
or
mov
negl
imulb
sti
push
jns
sbb
movsl
enter
and
and
xor
xchg
jo
mov
pop
xor
fmull
xchg
mov
inc
jae
ficompl
pusha
xchg
scas
jno
fldl
stos
mov
cld
cmp
adc
sbb
int3
sbb
imul
pop
mov
jnp
bound
xchg
setno
and
ffree
pop
sub
call
in
push
adc
mov
data16
xchg
xchg
imul
mov
xchg
outsl
push
adc
mov
dec
mov
mov
xchg
sbb
jae
fdivrp
mov
mov
shlb
lds
jne
addb
imul
mov
out
cmc
push
mov
pop
xchg
fisubs
ja
mov
push
cmp
xor
jbe
pop
hlt
jb
loopne
repz
inc
test
enter
test
cli
fs
pop
mov
mov
pop
mov
inc
cmpsl
mov
add
arpl
aam
xchg
divps
out
sbb
stos
cmp
movsb
inc
sbb
rcll
pusha
push
rcrl
movsb
lock
xor
aam
shrb
rcll
xor
sbb
fisubl
jmp
add
out
add
inc
push
movsb
sbb
pop
pop
stos
sti
mov
mov
out
pop
enter
scas
popa
push
outsb
test
sbb
test
jb
out
sub
clc
lret
inc
mov
inc
pop
jno
mov
inc
testb
mov
mov
hlt
int3
push
arpl
test
lret
jp
in
xchg
je
push
out
jge
data16
je
mov
mov
aaa
jb
insb
clc
movsl
popf
adc
pop
sahf
scas
pop
out
leave
fldl
xor
repz
pextrw
ja
xor
sbb
jp
and
jae
inc
imul
push
sub
mov
or
mov
testl
add
cmp
pop
xor
mov
jp
icebp
js
bound
scas
add
fcos
icebp
push
lea
xlat
jnp
mov
imul
jbe
ds
daa
ja
sub
jge
pop
mov
xorb
cs
pushf
fldt
scas
es
in
or
sub
and
add
out
lret
imul
out
das
gs
cmp
into
and
mov
rcrl
add
inc
paddusw
test
out
pop
jne
adc
hlt
cmp
mov
aad
inc
pop
xchg
xchg
mov
lock
pop
in
aaa
jp
mov
xchg
xchg
lea
cld
outsb
inc
mov
cwtl
in
loop
call
addl
sbb
fs
lret
pop
ret
out
inc
xor
mov
in
icebp
xchg
inc
and
fsubrs
insl
push
pusha
ret
sahf
imul
dec
jns
sub
lret
js
xchg
icebp
mov
fsubs
ljmp
movsl
sub
pop
pusha
adc
jno
ljmp
pop
add
adc
cmp
mov
daa
dec
call
fsubrp
add
xchg
and
and
xchg
cmp
popa
pop
dec
iret
xlat
out
cli
fbld
mov
jmp
lods
sbb
pop
add
mov
mov
or
add
push
pop
inc
push
stc
sub
mov
cmp
test
pop
insl
fsubrl
or
sbb
sub
pop
cmpsb
shlb
insb
ss
jno
shrl
or
imul
xlat
adc
xorb
adc
adc
pop
insb
out
js
scas
dec
loop
mov
jbe
sub
out
cli
pop
into
sbb
scas
and
sub
push
push
jmp
mov
lea
aas
bound
fwait
loope
cmp
in
pop
outsl
dec
jl
ss
add
insb
sahf
jge
cmp
out
or
ret
cwtl
test
outsl
sbb
shll
xchg
and
orl
adc
sub
lahf
push
dec
hlt
jge
xor
jmp
in
fmulp
mov
sub
in
fcomp
pop
pop
pop
fidivl
jecxz
fidivs
jl
aam
mov
mov
in
cmpsb
or
xlat
dec
in
cmpsl
mov
scas
xor
in
std
xor
mov
push
jbe
subl
stos
xorb
insl
xchg
cli
gs
inc
lods
push
sub
mov
adc
xchg
in
and
dec
jae
xchg
stc
enter
lea
inc
loope
jae
inc
and
into
scas
loopne
jbe
or
mov
lods
inc
arpl
cs
inc
pop
shll
mov
inc
dec
lcall
lret
pop
fidivl
data16
mov
aad
in
mov
push
xchg
xor
lcall
sbbb
idiv
test
call
popa
enter
inc
rcl
jmp
mov
mov
decb
dec
cmp
add
sbbl
gs
scas
dec
lods
jmp
mov
fcmovu
mov
push
jb
inc
lahf
inc
mov
mulb
leave
dec
scas
and
dec
fnstcw
fidivs
fildl
and
add
push
pop
xor
stc
mov
inc
in
inc
imul
and
xchg
shr
ds
mov
fstl
adc
in
fnsave
data16
lods
inc
inc
loopne
fldenv
mov
popa
loopne
cld
mov
mov
lcall
jmp
incb
adc
cmp
cmp
fwait
mov
cmp
inc
xchg
adc
dec
xlat
mov
pushf
roll
jb
cli
rcrb
roll
or
cmp
ja
lahf
inc
dec
xor
je
push
dec
mov
adc
mov
xchg
xor
mov
cmc
sub
bound
ret
test
jmp
push
lahf
and
push
shll
ds
repz
das
out
int
push
ficomps
lock
outsb
testl
clc
push
aam
mov
lods
adc
fs
mov
jp
out
lock
xlat
mov
insb
gs
jno
and
fstp
or
xchg
fwait
dec
aad
xchg
in
lret
lcall
fdiv
xchg
std
push
xchg
mov
dec
mov
ja
adc
mov
xchg
inc
add
cmpsb
rcll
adc
loope
movsb
aam
pop
imulb
jge
mov
out
jle
cmp
test
das
pusha
add
lods
rorl
mov
sti
push
in
push
sub
or
test
cli
insb
cmp
mov
clc
rorl
test
ja
std
mov
aas
ror
xchg
adc
hlt
mov
xchg
mov
sub
mov
test
insl
mov
lea
mov
mov
cld
pop
out
fimull
mov
neg
or
fidivl
lods
loopne
or
fstpl
xchg
out
push
add
cld
arpl
jb
out
inc
out
xor
bnd
test
cmp
aaa
loop
in
xlat
mov
xchg
lcall
notb
mov
paddw
push
pop
inc
lods
mov
int
imull
cmpb
popa
nop
push
adc
cld
imul
xchg
mov
rcrb
inc
pop
xor
sub
adc
out
and
mov
cmp
dec
mov
sub
jae
pop
dec
negb
mov
cwtl
jne
in
das
jle
pop
or
sub
mov
dec
out
dec
mov
xor
fsubs
movsl
mov
push
fisubl
out
loopne
xchg
in
shrb
sub
xor
sti
ret
outsb
mov
in
arpl
mov
outsl
psubd
mov
sub
or
std
outsb
mov
mov
movsb
lret
sub
data16
loopne
and
inc
and
test
dec
ja
jns
fwait
xor
push
or
sarl
and
add
sbb
xor
mov
xor
mov
mov
loopne
xor
mov
add
push
andb
sub
push
pop
shrl
es
add
leave
lret
sti
pop
jp
je
and
pop
pop
ljmp
test
and
idivl
jne
cmp
sub
dec
xchg
stos
mull
lods
in
jb
cwtl
push
lahf
rcr
in
gs
cmpsb
sub
mov
xchg
jbe
ss
cmp
push
popa
outsl
ret
ror
cmp
or
out
push
cld
repnz
pop
fidivs
ss
in
scas
cmp
inc
lret
fstl
sahf
enter
fisttpl
xchg
xor
xlat
shlb
and
mov
pop
rep
mov
lock
xor
std
imul
adc
rclb
and
fs
pushf
mov
pusha
aad
lahf
shll
clc
jbe
loope
popl
xor
mov
in
movsb
orl
leave
cmp
loopne
xor
sub
xchg
mov
adc
xor
lds
shlb
push
sbb
ss
pop
addr16
mov
out
xchg
pop
sbb
pop
dec
jae
pop
icebp
pop
shrl
mov
dec
dec
scas
ljmp
or
fldt
out
rorb
jp
xor
fildl
aaa
and
or
stos
cld
xor
cmp
jnp
pop
outsl
mov
rol
mov
imul
cmp
jl
xchg
movsb
jbe
stos
loope
call
jg
dec
jl
popf
push
jle
movsb
push
insl
ret
call
mov
ja
iret
and
push
or
xchg
jb
insl
jne
mov
fsubrl
adc
imul
stos
enter
nop
pop
mov
inc
int3
test
pop
adc
dec
fwait
inc
sub
mov
push
ficompl
js
stc
sbb
cmpsb
dec
xor
shrb
sbb
push
std
dec
insl
jnp
daa
dec
leave
jo
push
ficoms
movl
xchg
insl
cmp
push
jns
or
cmp
jae
cmp
je
jae
xor
mov
mov
push
and
inc
sbb
jl
and
aad
sbb
das
movsl
cmp
xor
mov
arpl
rolb
fnstsw
cmc
inc
in
out
insb
xchg
test
adc
push
lea
sub
sahf
add
jp
mov
xor
push
xchg
outsb
mov
call
popf
insb
jnp
repnz
jecxz
jge
xchg
mov
clc
cmpsl
out
pop
push
or
hlt
fimull
pop
scas
ret
mov
roll
xchg
inc
pop
adc
mov
lods
sub
jno
sub
and
mov
test
adc
jno
adc
sahf
es
push
dec
pop
aam
lock
out
out
mulb
icebp
xchg
cmc
daa
pop
and
inc
sbbb
jle
shll
fcoml
xchg
sbb
xchg
out
pusha
mov
inc
shll
fsubrs
xlat
xor
and
roll
fs
mov
push
testl
aaa
aaa
sub
aam
in
jne
push
inc
cmp
test
jecxz
movsl
nop
xchg
sbb
cmp
cld
sbb
push
insl
in
and
mov
jecxz
into
pushf
pusha
fisubrl
sbb
xchg
stc
fcomps
fcomip
out
test
push
out
mov
and
xor
stc
ljmp
mov
inc
data16
mov
rorb
adc
aam
push
imul
fwait
insl
adc
bound
movsb
nop
xor
decl
inc
sub
add
mov
jmp
setge
jecxz
and
sahf
mov
sub
inc
int
push
mov
push
sbb
inc
jp
jne
xor
mov
in
push
xchg
push
flds
sbb
jbe
mov
enter
and
aad
or
andb
es
cmc
and
inc
or
mov
into
sbb
xlat
cmpsb
cs
or
shlb
int
in
ret
xchg
pusha
test
dec
push
xor
movb
mov
jle
in
push
hlt
in
jl
mov
jmp
mov
dec
jo
sub
jl
popf
xor
andl
add
test
jmp
sahf
addr16
inc
dec
pop
stos
rcl
decb
push
test
loop
sub
bound
les
stos
lods
cmp
decb
mov
inc
mov
cli
dec
lahf
insb
popa
and
sti
jne
mov
xor
lods
lret
sbb
js
test
adc
jo
in
ret
lahf
out
dec
add
mov
aaa
mov
xchg
xchg
pop
aad
enter
fstps
iret
cmp
stos
push
lea
cmp
cld
das
sahf
and
test
nop
cmc
mov
ret
mov
adc
mov
jmp
inc
push
xorl
push
sbb
cmp
adc
lods
dec
cmp
in
jo
roll
or
not
sub
pushf
sahf
popa
mov
iret
add
push
jge
vandps
stos
or
jns
mov
mov
xlat
leave
adc
add
push
rcll
stos
insb
and
xchg
xchg
xor
repz
mov
push
lds
cmc
scas
pop
jae
xchg
xchg
or
loop
cmp
lods
inc
mov
xlat
loope
and
xlat
xchg
sbb
call
std
leave
adc
mov
addr16
inc
pop
dec
jns
fcmovb
lock
jns
repz
inc
jo
or
enter
xchg
loop
inc
xchg
or
lahf
dec
gs
sub
imul
and
xor
mov
inc
es
mov
mov
add
mov
flds
adc
push
or
pushf
sarl
inc
cmpsl
adc
push
cld
xor
loop
ret
loopne
inc
aas
push
out
call
fdecstp
adc
pushf
aam
jbe
sub
jle
aas
loopne
loop
fmull
push
fwait
in
cmp
adc
add
loope
pusha
fldenv
jnp
mov
in
imul
int
add
xchg
hlt
adc
mov
cld
lods
jb
cwtl
loop
in
hlt
adc
jmp
mov
orl
nop
pop
stc
xor
insb
les
inc
push
pop
cmp
testl
repz
out
xor
pop
adc
sbb
lahf
jno
adc
pop
xchg
inc
fisubrl
sbb
out
enter
aad
cmc
add
push
adc
cltd
cs
mov
in
lods
fsubrl
sbb
test
lods
cli
stos
pushf
and
sbb
mov
clc
ss
inc
lock
push
adc
jecxz
dec
cld
sub
mov
jmp
lahf
adc
adc
mov
movsb
and
lods
fnstcw
and
scas
jp
daa
movl
das
cmc
push
out
xchg
in
loope
mov
lea
sbb
inc
ror
cltd
call
cmp
or
xchg
pop
and
mov
pop
jo
cmp
in
and
imul
cmpsb
imulb
addr16
data16
test
cmpsl
ss
icebp
sbb
cs
nop
or
inc
jecxz
lret
push
std
jmp
jl
ret
sbb
ret
lcall
and
inc
cmp
lock
addr16
sub
sbbl
loope
dec
xchg
adc
mov
cld
in
xor
push
add
sub
mov
movsl
push
sahf
dec
xchg
lret
popf
int3
pusha
nop
push
aam
sar
lea
dec
pop
mov
shl
clc
sub
pop
popa
mov
lea
mov
lret
movb
dec
aaa
rorl
fwait
rolb
int
rcll
jne
test
ja
orl
and
int
jg
cmp
call
push
mov
xchg
cmp
mov
mov
stos
mov
hlt
mov
pop
scas
cmp
aaa
movsl
add
push
ljmp
insb
xchg
test
fdivp
ret
fwait
decb
or
lods
shl
sub
pop
pop
push
add
clc
ret
jnp
jle
mov
cmc
inc
jo
jmp
sbb
inc
xor
hlt
incb
subl
out
pop
mov
xchg
mov
add
dec
mov
xchg
mov
mov
xorb
jge
sahf
int3
popf
jno
rcll
aam
sub
cmp
data16
pushf
outsl
lods
lcall
mov
dec
mov
in
lcall
mov
or
mov
xor
jae
or
push
adc
fsubrs
jle
jmp
and
adc
leave
test
fidivrs
inc
pop
mov
add
push
xchg
hlt
jne
movsl
stos
or
pushf
enter
xchg
jb
jl
jns
mov
imul
inc
divb
mov
pmullw
mov
out
jnp
dec
fcompl
dec
fisubrl
cmp
hlt
jnp
out
loop
sbb
mov
aaa
mov
scas
mov
add
insb
jg
int
mov
enter
cmp
movsb
ret
push
aad
out
test
pop
movsb
cmp
roll
sbb
mov
seta
movsl
or
out
out
rorb
dec
xchg
pop
shrb
lds
pushf
jns
mov
test
mov
pop
sbb
jnp
shrl
push
mov
push
jl
out
xchg
pop
shl
pop
sbb
fs
dec
fldenv
pop
dec
mov
stos
test
pop
and
xor
or
mov
lock
out
popa
es
xchg
xorb
mov
push
mov
jae
adc
in
mov
and
sub
loop
inc
fisttps
fistl
shlb
or
in
test
movsb
pusha
xchg
out
cli
dec
cltd
sub
loop
xchg
jnp
ja
movsb
xchg
push
and
fs
adc
pop
mov
mov
adc
inc
cmpl
inc
xchg
das
xchg
idiv
cmpsl
adc
in
sbb
ret
pop
inc
cmp
lods
fistpll
lcall
insb
xor
push
shlb
sub
popf
fwait
scas
inc
mov
mov
add
repnz
lret
mov
mov
mov
mov
jbe
test
or
ds
jecxz
cmpsl
test
in
aam
stos
fs
jne
ljmp
jl
jnp
jl
adc
fwait
push
scas
cmc
dec
inc
outsl
mov
fildl
outsl
mov
mov
dec
sbb
pop
shll
je
cmpsb
push
rcr
pop
cmc
adc
mov
cmova
sub
add
jns
outsl
ljmp
mov
or
daa
mov
or
insl
shlb
xchg
inc
mov
lcall
pop
sbb
mov
sbb
jp
cmp
jns
lea
mov
mov
mov
xor
xchg
dec
cltd
pop
fisubrs
iret
mov
mov
adc
mov
into
idivl
js
xor
subb
pop
sti
or
pop
jnp
repz
stos
lds
adc
or
pop
rorl
or
jg
jl
xchg
mov
int
ret
imul
cmp
push
and
fisubl
lahf
fsubr
ljmp
mov
push
mov
fs
dec
sbb
mov
mov
stc
clc
mov
push
enter
pop
es
mov
enter
push
inc
cli
fs
push
cmpsl
cwtl
cmp
mov
out
adc
cmp
dec
pusha
stos
mov
push
sub
popf
add
sbb
cmp
xchg
mov
sbb
cmp
sbb
push
mov
bound
add
and
push
xor
jmp
mov
out
inc
push
jmp
iret
add
aaa
int
cmp
and
jle
ret
xchg
fwait
inc
outsb
mov
je
mov
jge
pop
push
stos
mov
cmp
movsl
inc
out
or
repnz
pop
mov
rolb
ljmp
sub
mov
push
cld
pop
inc
dec
ss
sub
out
xchg
lret
cwtl
add
push
push
lods
fs
paddb
jp
dec
ficompl
ja
or
mov
jb
sub
and
cmpsb
scas
sub
fs
dec
orb
pop
sub
pop
adc
pusha
scas
lock
or
jo
ret
imul
lret
outsb
and
sbb
inc
test
jmp
flds
pop
push
scas
fwait
jmp
adcb
je
shr
xchg
cltd
mov
sbb
fidivrl
mov
stos
lds
sub
jmp
rcrb
fiadds
pop
adc
popa
ret
xchg
sar
and
stc
and
lods
pop
dec
loop
xchg
pop
inc
cmp
shrb
sbb
imul
xor
mov
cld
out
imul
xchg
div
mov
mull
fiaddl
and
stc
mov
inc
inc
scas
stos
mov
push
inc
lea
into
add
mov
ljmp
sbb
cmpsb
aam
repz
inc
adc
xchg
int
push
push
sub
jns
jecxz
mov
sti
insl
loopne
imul
mov
or
lods
imul
es
jp
push
insb
jns
pushf
push
imul
repz
jmp
mov
leave
call
nop
push
cmp
sarl
inc
push
movsl
xlat
shll
xchg
ja
out
fnstcw
sub
lret
mov
in
xchg
push
loop
cld
addr16
sarl
inc
mov
inc
jle
xor
dec
xchg
aam
lock
fsubr
iret
mov
push
jl
in
jmp
out
pushf
dec
imul
test
push
pop
shrl
loop
mov
mov
sub
mov
push
or
popa
shrl
adc
sarl
fisubrl
clc
pop
popa
jle
fstp
push
lds
and
inc
arpl
cmpsb
or
push
inc
movsb
sahf
std
mov
pop
repz
mov
xchg
movsb
xchg
insl
mov
iret
xchg
pextrw
je
jg
adc
xor
and
xchg
and
adc
fdivrs
lods
fdivr
inc
xchg
jo
and
call
mov
int3
adc
sbb
jp
sub
std
popa
jbe
cwtl
sbbl
cmpl
jecxz
xchg
and
aaa
pop
pop
in
dec
imul
jl
xlat
adc
ret
movsb
dec
ja
push
mov
lods
shll
xchg
rcll
shll
xorps
jae
aam
sahf
jno
test
imul
int3
fcmovne
jne
inc
add
cmc
mulb
fdivrs
enter
outsl
lock
js
ret
jp
jns
stos
scas
int
aad
xchg
movsb
aam
push
scas
out
pop
or
mov
jne
ljmp
cltd
and
and
mov
adc
dec
imul
dec
push
mov
pop
sbb
lea
in
push
jnp
outsb
jmp
insl
into
cltd
dec
dec
push
add
and
mov
std
pop
addl
xchg
pusha
sbb
dec
insl
adc
push
dec
cltd
fistl
loopne
cmp
mov
nop
add
ljmp
lahf
adc
daa
adc
sbb
hlt
lock
cmpsl
or
rcl
push
xchg
mov
fwait
cmp
inc
das
pusha
mov
hlt
test
stos
fidivrs
shl
cmp
loop
dec
adc
ret
outsb
adc
ljmp
loop
mov
std
push
pop
mov
add
cmp
test
add
mov
pop
sbbb
repnz
insb
daa
je
jne
or
stos
cmp
fidivs
sti
pop
pop
mov
sub
in
loope
pop
int3
pop
sub
stc
hlt
and
lcall
fwait
pop
popa
std
inc
popf
pusha
adc
lock
mov
push
sub
adc
outsb
jecxz
rolb
mov
enter
aam
testl
pop
adc
push
es
fisubs
loopne
push
lgs
lods
test
xabort
enter
jbe
add
pop
test
adcl
xchg
clc
inc
lea
xchg
jle
dec
jo
jecxz
mov
mov
lds
push
sbb
jle
aad
loop
imul
repnz
push
stos
mov
sub
clc
mov
cmc
sti
sub
lods
mov
add
push
pop
mov
push
mov
push
or
lcall
cmp
invd
pop
jge
ljmp
cmp
dec
or
and
and
or
mov
imul
push
mov
sbb
sahf
xchg
fcom
fs
stc
adc
cmp
sbb
addl
popf
stos
clc
xchg
aas
xchg
or
xor
out
push
mov
mov
mov
and
pop
in
inc
mov
and
fnsave
stc
or
cmc
sbb
sbb
mov
sub
pop
jle
mov
sub
aaa
dec
pop
mov
or
clc
inc
lds
dec
gs
ss
rcr
add
out
out
jo
mov
add
jmp
popf
jg
je
inc
lret
pop
repz
adc
push
int3
mov
pusha
xor
cmp
jge
dec
pop
repnz
sub
stos
pop
cld
imul
fmull
pop
clc
insb
sbb
xchg
push
repnz
arpl
movsl
mov
pop
push
mov
cmp
jb
sub
push
xchg
dec
and
mov
inc
out
fwait
mov
mov
jae
not
sbb
rorl
imul
push
adc
fucomi
out
cmp
fidivs
sbb
add
ret
repnz
out
push
cmp
outsl
lods
xchg
add
fbld
mov
or
cmpb
inc
insl
das
rorb
sub
inc
pop
rcr
loopne
jle
faddp
mov
aam
pop
repz
dec
xchg
pushf
testb
aad
and
adc
dec
ljmp
lahf
pop
lods
xchg
pop
in
mov
dec
outsb
xchg
jb
pushf
je
jns
ljmp
jnp
push
pop
movsb
xchg
scas
xchg
mov
pop
stos
and
js
js
int3
mov
gs
pusha
int
sahf
fs
loop
cltd
in
loope
sbb
cmc
and
mov
mov
mov
out
inc
fistl
call
addr16
mov
adc
test
xor
outsl
call
dec
mov
decl
mov
adc
inc
popa
mov
sub
enter
outsl
jp
jnp
lahf
imull
fstpl
cmpsb
adc
mov
mov
iret
mov
stos
mov
inc
cmp
movsl
shrl
jbe
and
mov
inc
or
pushf
push
sbb
jbe
rclb
xchg
inc
andb
es
inc
push
push
out
sub
xor
jp
loopne
mov
xchg
pop
mov
pop
adc
cmp
mov
xchg
xchg
adc
lods
add
jge
fsubrs
xor
pop
insb
jne
jnp
mov
add
gs
test
jmp
adc
imulb
jg,pt
push
push
xchg
in
popf
call
mov
mov
and
jp
adc
call
mov
xchg
pop
scas
xchg
push
out
addl
pop
lock
sti
sbb
aad
mov
xor
xchg
sbb
flds
movsb
dec
cs
fs
jecxz
lods
push
insl
xor
push
inc
sub
mov
rolb
je
decb
xchg
cli
fs
fbstp
jge
sub
cmpsl
mov
or
inc
dec
jbe
ret
aam
mov
insl
fcompp
xor
loopne
mov
lock
xchg
xchg
in
ljmp
mov
ret
fs
outsl
xchg
lock
scas
cmp
fwait
sbb
inc
out
sub
adc
push
add
pusha
cmp
in
sbb
push
or
pop
enter
in
mov
pop
ds
pmaxsw
aam
pop
mov
adcl
imul
sbb
shll
xchg
mul
imul
sbb
mov
mov
scas
mov
stos
push
ss
xor
dec
jae
or
arpl
in
leave
cltd
sub
and
and
roll
ret
test
cmp
jo
mov
add
fsubs
mov
pop
xchg
ret
dec
loope
cmpsb
clc
out
test
ja
cmp
sti
xor
xchg
lret
in
std
lret
mov
inc
add
fcmovnb
ficompl
pop
ds
bound
xor
popa
add
ret
lcall
cmp
cmc
inc
jl
js
cmc
and
push
movb
fucomip
push
pop
imul
dec
xchg
sbb
jo,pt
dec
xor
test
fwait
push
shlb
stos
xchg
dec
je
pushf
aaa
jbe
push
test
add
push
outsb
mov
shlb
popf
shlb
test
fldcw
fmulp
dec
dec
xor
jnp
push
cld
dec
imul
push
push
rcl
or
sbb
mov
inc
outsl
ret
add
dec
lret
inc
ljmp
push
xchg
movsl
sub
mov
loop
mov
mov
call
ret
xchg
cmp
xlat
popa
cmp
mov
mov
sti
adc
sub
lret
cltd
dec
adc
cmpsb
mov
out
popf
test
jecxz
and
pop
call
mov
testl
fldt
and
add
mul
jae
adc
pop
ds
lods
inc
push
jecxz
arpl
sub
mov
out
aas
sbb
cmc
jno
jns
or
mov
ret
pop
call
jnp
dec
fwait
sub
inc
xchg
jo
and
pusha
enter
or
and
jno
cmpsb
mov
xchg
xor
gs
mov
mov
xchg
fs
shrb
cmp
sub
inc
aam
jns
inc
or
rolb
adc
andb
daa
push
push
cmp
daa
cltd
jne
or
sbb
pop
jns
out
pop
or
ret
and
or
scas
sbb
xchg
int
push
cmpsb
sbb
push
mov
clc
lds
imul
iret
add
out
jno
cmpsb
in
imul
adc
mov
out
cmpsb
hlt
scas
cmp
fstl
sahf
mov
ja
cmp
inc
mov
aas
fwait
or
jg
arpl
ss
and
jno
aaa
sbb
mov
pushf
pop
lret
pop
mov
shll
imul
xchg
clc
inc
cli
jo
ljmp
mov
or
inc
imul
jno
les
add
repnz
jle
mov
pop
jmp
pop
out
mov
or
inc
jge
cmp
jo
aas
xor
std
cwtl
inc
push
mov
mov
or
jg
mov
out
inc
addr16
hlt
jmp
sub
xor
cmpsb
cmp
inc
pop
dec
rol
fdivrl
or
iret
dec
ljmp
in
shr
dec
and
pop
rorl
outsb
cmpsb
mov
cmp
xchg
sub
pop
lock
lods
mov
xchg
mov
icebp
lret
mov
push
sbb
push
adc
push
add
stos
mov
xchg
mov
fcompl
jns
jns
aam
out
push
sahf
lret
dec
imul
repnz
xor
jl
popf
sub
out
xor
sti
sar
std
inc
jl
mov
or
jb
bound
add
xchg
int
mov
sub
lahf
fnstcw
mov
sub
jne
mov
fcmove
xlat
orl
cltd
sub
loopne
out
inc
dec
out
cs
adc
dec
lods
or
int3
dec
add
jno
or
xchg
test
mov
jge
and
push
add
movb
mov
and
and
sub
mov
push
andl
aam
push
in
rorl
xor
rorb
push
shlb
inc
mov
jae
xchg
stos
push
mov
xchg
outsb
pop
mov
test
in
add
es
mov
pop
cli
sub
sbb
mov
dec
mov
lock
mov
data16
daa
jecxz
push
and
test
or
xor
xor
gs
jnp
in
jmp
cltd
xor
cmp
andl
in
xor
mov
dec
and
xchg
push
sbb
xchg
sub
dec
test
xchg
mov
addb
popf
push
jns
pop
mov
cmp
inc
stos
imul
dec
mov
test
jle
or
xor
sbb
movsl
cmp
shrl
outsl
int
sti
push
sarb
rcrb
cmp
cmp
cmc
cltd
clc
adc
sbb
xor
lock
mov
push
mov
icebp
push
sub
xchg
jmp
out
xor
sub
cs
jge
xchg
xor
inc
adc
arpl
movsl
mov
or
outsl
cmp
dec
test
out
out
loope
or
hlt
fmull
std
cmp
mov
rorb
xor
out
or
cmpsb
fwait
shll
fsubr
sub
hlt
mov
jp
jno
popa
or
cmp
inc
inc
sub
mov
je
jecxz
aad
daa
out
enter
mov
xor
mov
cmc
push
out
into
notb
add
popf
inc
icebp
aas
sahf
imul
pop
fsts
cmp
insb
and
std
nop
mov
popf
ss
jbe
shrl
push
sub
pop
sahf
pop
xor
pop
lds
arpl
and
and
add
cmp
scas
push
rcl
sbb
sub
ja
sahf
loop
and
inc
jecxz
cmpsb
lds
popa
lsl
ret
rclb
dec
mov
mov
int3
shll
dec
test
add
cs
ljmp
mov
scas
cltd
insb
jb
shrl
das
ficomps
outsb
cld
es
pusha
cmp
stos
pop
lret
jle
adc
outsl
ret
subb
aam
sarl
clc
stos
notl
insb
sbbl
int
sub
pop
mov
enter
imul
xor
or
imul
mov
and
out
inc
int
xor
iret
jecxz
loope
mov
pop
outsb
scas
ucomiss
mov
add
pop
sarl
pop
pop
jb
icebp
test
test
aam
shrl
add
sahf
or
mov
cmp
push
sti
lahf
jo
loop
addr16
xor
int3
cmp
and
pop
hlt
jb
icebp
mov
pop
xchg
aam
add
push
push
imul
out
add
jns
xlat
mov
addr16
nop
pop
sub
les
fcmovne
mov
testb
sbb
mulb
adc
out
adc
push
or
sti
mov
rcrb
in
aam
pushf
mov
shrb
popf
push
mov
xchg
mov
test
sub
sbb
movsl
arpl
ljmp
pop
gs
lret
inc
push
inc
lods
enter
xchg
adc
cmp
stos
push
out
adc
loop
and
adc
or
outsb
outsl
jne
push
outsl
jno
inc
stos
xchg
and
sbb
sbb
xor
sbb
leave
movsl
pop
movsb
lcall
jno
scas
xchg
test
adc
outsl
les
pop
push
in
fmull
call
mov
popa
shll
stos
inc
push
aas
cmp
cmp
push
jns
cmpsb
enter
int3
xor
or
mov
fstpt
shrb
cmpl
mov
cmp
xor
jnp
test
sti
mov
movsl
scas
movsl
bound
mov
inc
add
mov
into
mov
sub
out
mov
cltd
cmp
pop
push
pop
test
and
xchg
dec
pop
pop
mov
mov
lahf
ljmp
outsb
jmp
ljmp
stos
lods
pop
jns
lahf
hlt
rolb
fmuls
pop
push
xchg
adc
lods
sub
inc
iret
daa
mov
int3
out
jle
call
mov
jecxz
repz
sub
scas
mov
mov
or
lods
or
xchg
jnp
shl
mov
fmuls
xchg
xor
mov
dec
push
iret
push
imul
popf
out
or
aas
sbb
pop
mov
cmp
popa
adc
mov
lock
mov
or
jl
xchg
xchg
lds
inc
mov
xor
test
fidivrl
int
sub
popf
mov
ret
xchg
adc
mov
stos
and
mov
xchg
inc
xchg
sti
movsl
repnz
clc
or
push
sbb
cmp
fcoml
into
sub
aaa
mov
mov
xor
xchg
nop
xchg
jecxz
fldt
xchg
add
outsb
sahf
adc
sub
add
cmc
xor
aam
or
mov
push
jge
popf
mov
pusha
jle
rcrb
pop
addr16
sub
cmp
mov
and
bound
mov
xchg
into
mov
pop
xor
in
jae
inc
negl
movsl
xorl
push
pop
cld
dec
rcll
cmpsb
push
gs
mov
xchg
aas
ss
xor
lock
das
inc
pop
lods
fwait
pop
xchg
rol
es
out
jne
test
repz
xor
mov
in
mov
shl
out
mov
in
jno
dec
sbb
je
dec
pop
adc
inc
lods
out
fisubs
jle
add
mov
fsts
ret
jmp
sub
scas
arpl
outsl
cmp
sbb
aam
out
data16
rolb
inc
xor
sbb
outsl
fstl
or
mov
pop
loopne
orl
jecxz
pusha
loop
test
dec
mov
mov
pop
add
xlat
xchg
scas
repz
sub
and
jo
jl
adc
mov
sahf
leave
aas
in
daa
xor
xchg
jb
je
add
mov
out
xlat
out
inc
pop
sbb
addr16
aas
cmp
int3
outsl
mov
cmp
inc
sbbb
mov
lcall
repz
test
daa
mov
mov
pop
jno
incl
mov
ljmp
cmpsb
xor
fimull
sti
test
push
lcall
push
int
iret
les
push
cmp
neg
or
pop
sub
mov
or
adc
jb
aad
nop
fs
jo
add
and
sub
and
or
addr16
cmc
xchg
dec
sti
ds
in
fcomps
lahf
divb
pop
fistps
lcall
push
pop
repnz
sub
mov
xchg
stos
scas
movsb
pop
cmpsb
jb
ret
in
mov
gs
pop
mov
popa
adc
push
push
or
or
leave
outsb
mov
jno
test
call
adc
js
into
mov
xor
cs
xchg
popa
push
and
ljmp
scas
sysenter
pop
cmp
cmp
pop
arpl
sarb
loope
push
lods
stos
into
xorb
inc
pop
or
jbe
gs
jle
popf
aam
adc
mov
sahf
lcall
mov
adc
pop
cltd
or
les
mov
into
xchg
and
fisubrl
popf
es
lds
sub
sbb
gs
xchg
pop
les
sub
mov
xchg
xor
pop
mov
movsb
popf
cld
dec
test
jl
cmp
arpl
jns
or
push
mov
add
data16
xchg
aas
pop
ret
shll
fwait
pop
aad
pop
test
xor
mov
sbb
sbb
mov
add
push
or
mov
add
jae
loope
rcl
inc
iret
add
idivb
pop
inc
push
rcrl
jp
push
mov
or
cli
xchg
mov
rclb
shrb
call
add
insl
testb
pop
xor
pop
cmp
jne
in
or
pop
pusha
xor
and
pop
inc
test
push
fsubrs
cli
gs
ret
xchg
jle
push
xchg
pop
sub
test
jle
ffreep
stc
ss
nop
mov
xchg
sub
sbb
fwait
or
faddl
and
mov
xlat
test
call
xor
add
std
inc
xor
out
bound
lcall
add
stc
adc
sub
or
dec
xor
sbb
call
mov
out
nop
in
dec
pop
xchg
sub
add
popf
and
bound
xchg
push
add
pop
adc
cs
xchg
xor
xor
pop
shll
mov
addb
jne
push
inc
xor
add
sahf
sub
mov
pop
cmp
ret
das
dec
movsl
sbb
ja
ja
cmpsl
clc
fwait
sub
loopne
jecxz
cli
push
out
xchg
xor
inc
mov
enter
ljmp
ror
lret
setne
repnz
adc
and
push
fwait
or
out
push
push
cwtl
add
add
aas
push
dec
xchg
scas
mov
mov
test
loop
addb
aad
dec
stos
in
bound
pop
leave
dec
sub
ret
lret
aas
xchg
fcompl
sbb
add
xchg
mov
mov
nop
inc
test
imul
add
stc
leave
stos
mov
mov
movsb
inc
pop
xlat
xchg
pop
mov
int3
jecxz
sbb
mull
sbb
shrb
jno
mov
push
dec
pushf
mov
mov
push
dec
fdivs
sti
pop
mov
or
je
test
and
pop
inc
ror
pop
clc
aas
fistpl
jg
lea
xor
adc
lea
cmp
pop
in
adc
inc
mov
loope
inc
imul
frstor
adc
mov
jns
in
call
sub
sbb
sbb
clc
mov
out
mov
out
pop
mov
ja
pushf
lret
inc
add
push
std
sbbb
jecxz
xchg
pop
ds
jnp
mov
les
loop
push
out
stos
cwtl
adc
jle
pop
or
ljmp
or
std
lods
fsubrl
push
cwtl
out
scas
cmpsb
sub
lods
lea
jae
xor
fnstsw
out
dec
lock
adc
ficompl
lret
sbb
icebp
mov
into
ret
ror
pusha
mov
adc
fistps
fsubl
add
cmc
jl
scas
jp
sbb
inc
push
mov
push
stos
inc
adc
loop
test
aaa
iret
jno
cs
jns
setae
adc
dec
ret
jp
xor
jmp
push
shll
sub
and
xchg
fsub
inc
mov
lret
ja
push
xor
xchg
test
or
mov
push
adc
and
das
insb
dec
or
sub
test
push
mov
iret
arpl
subl
lods
addr16
shrl
les
xchg
sub
sub
mov
je
jmp
lea
ret
and
std
inc
cmp
and
cmpb
jb
mov
inc
lock
adc
sbb
jmp
push
popf
test
pop
div
outsb
stc
adc
lret
inc
mov
inc
push
jo
test
gs
sbb
add
out
frstor
and
jns
fldt
jmp
ljmp
int
fsubrp
out
sahf
call
fnstcw
mov
mov
push
je
sbb
mov
callw
mov
gs
nop
mov
cmp
lods
xchg
add
nop
inc
out
mov
mov
adc
jns
int
push
cmp
inc
dec
mov
xchg
jmp
and
push
test
inc
cmpsl
mov
cmpxchg
dec
insl
mov
jecxz
leave
mov
mov
cltd
fsubs
adc
jbe
aam
pop
loopne
inc
aam
enter
adcl
jae
push
xchg
adc
xor
scas
lods
push
xlat
sahf
outsl
out
lea
mov
mov
sub
psubusb
sub
xchg
in
add
sbb
jo
mov
inc
sbb
aaa
shlb
iret
push
inc
loop
pop
adc
jg
push
fiadds
out
ret
xor
add
cwtl
test
adc
ret
insl
jl
and
dec
xor
rorl
movsl
xchg
xchg
movb
fdivl
int
mov
cltd
cld
shrb
lret
add
pop
inc
testb
jns
ljmp
hlt
lock
mov
in
adc
loop
mov
mov
in
sahf
cmp
sbb
pmaxsw
ja
jge
call
jno
and
mov
imul
xchg
cmc
dec
xor
dec
mov
mov
scas
pusha
ret
or
jo
and
inc
js
out
sbbl
mov
lods
pop
sbb
mov
sub
or
mov
lods
loope
mov
pop
aas
jo
imulb
js
jl
add
ficompl
jge
and
mov
add
mov
leave
sbbb
div
lret
pop
imul
push
dec
pop
cmp
mov
clc
jnp
inc
out
fdivrs
call
or
in
or
inc
or
sbb
std
fistpl
push
push
mov
and
xorl
xchg
popa
faddl
add
scas
gs
xchg
mov
sub
outsb
xlat
orb
iret
mov
inc
dec
fiaddl
jae
xchg
xchg
pop
inc
jl
ret
xor
mov
jg
push
add
enter
pop
cmp
dec
aam
aaa
xchg
dec
or
push
outsl
sub
cmp
cmp
popf
mov
dec
cmp
test
or
pop
imull
sbb
std
popf
pusha
sub
push
dec
pop
sbb
add
scas
in
pop
dec
inc
push
mov
sbb
movsb
or
insb
pop
cmc
jmp
out
incl
out
daa
loopne
lcall
dec
sbb
mov
push
cltd
test
cmp
les
jmp
add
mov
jne
ret
pop
or
fcmovbe
fisttps
mov
cli
outsl
push
mov
xor
lar
sarl
rcl
dec
pop
and
xchg
push
lahf
icebp
cmpsl
sarl
test
fimull
dec
out
test
rcll
scas
dec
sar
add
cmpsb
mov
cmp
fimull
add
jecxz
xchg
lahf
incb
addl
jns
jge
cltd
xchg
add
repnz
inc
xor
push
shlb
jns
movsb
cmp
adc
and
cmp
test
mov
sub
sub
push
cmp
lock
std
adc
outsb
sub
iret
mov
and
add
xor
lret
fs
rorb
fucomi
jb
inc
mov
xchg
cmp
mov
lds
stos
ficompl
inc
push
prefetch
int3
lods
jg
jb
dec
pop
stc
mov
in
push
xchg
sahf
call
aaa
lods
push
mov
inc
leave
cs
sbb
insb
jge
sbb
and
testb
push
js
pop
mov
push
mov
clc
add
sbb
je
adc
cmp
inc
or
add
pop
jae
dec
xor
jns
and
sahf
mov
push
enter
jge
test
fcoms
mov
sub
sti
cmc
lret
lea
loop
test
pop
popf
add
in
test
dec
movsl
enter
push
nop
inc
fxch
or
lret
lret
outsl
fs
push
mov
mov
repnz
neg
add
and
mov
pop
mov
sbb
lcall
push
push
in
ljmp
sti
jmp
in
jmp
mov
std
and
in
js
mov
lock
movsb
mov
aas
shrl
and
mov
in
push
rcrl
clc
mov
adc
cmp
call
loopne
inc
je
aaa
decl
enter
push
mov
jns
mov
push
mov
cltd
mov
xchg
and
lods
in
xlat
jns
mov
ja
std
add
mov
scas
repz
inc
xchg
push
in
in
push
ss
mull
mov
xchg
cltd
and
cwtl
add
ret
mov
cwtl
inc
push
test
arpl
fdivl
orb
xlat
fbstp
popf
out
in
ror
cmp
mov
insl
out
add
mov
lret
sbb
xlat
mov
push
cmpsb
inc
mov
stos
iret
pusha
push
arpl
out
mov
pop
mov
mov
sahf
adc
sbb
mov
loopne
dec
ucomiss
lcall
clc
ja
mov
pop
or
aaa
cmp
hlt
xchg
push
sti
outsl
cmc
rcr
xchg
cli
pop
insl
push
and
sub
mov
fisubs
inc
jbe
ret
fwait
adc
mov
sub
lret
insb
repz
scas
push
outsl
ret
xor
cwtl
stos
fcompl
mov
or
mov
gs
seta
lds
push
sub
cmc
sub
mov
push
shr
pop
mov
into
enter
pop
pop
mov
mov
xchg
dec
rcll
lods
gs
shr
add
cs
push
adc
stc
pop
aaa
test
outsb
dec
mov
jp
inc
sub
and
ret
mov
fs
iret
jb
aas
sbb
cld
jae
pop
loop
sbb
and
mov
fxch
js
or
mov
inc
out
stos
dec
insl
outsl
lcall
leave
int3
mov
cmp
ret
pushf
mov
mov
jno
stos
adc
sbb
scas
clc
add
mov
call
in
mov
movsl
orb
fs
incb
jge
mov
xchg
push
pop
insl
inc
into
jmp
jno
cmpsl
add
cmpsl
daa
mov
divb
xor
stos
das
orl
cs
cmp
lahf
ja
test
pusha
dec
fsubl
test
mov
test
mov
mov
xchg
dec
jle
imul
movsl
xor
or
in
dec
jo
and
cmp
xor
mov
js
mov
dec
imul
jbe,pt
sub
cmpsl
pop
mov
icebp
loope
ds
dec
sbb
mov
ret
in
inc
pop
test
mov
fbstp
cltd
lods
add
stos
jmp
xchg
xor
std
xchg
jae
mov
es
shr
jo
iret
sub
sti
fsubrl
jns
dec
cwtl
mov
leave
mov
call
xchg
sub
dec
mov
std
sub
dec
sbb
insl
pop
inc
jg
mov
dec
sub
inc
ja
dec
push
enter
and
out
int
jecxz
xchg
mov
sub
or
arpl
cmp
sbb
pop
add
push
cltd
push
lods
xchg
push
push
int
repnz
mov
ds
imul
mov
xchg
push
xor
mov
icebp
mov
mov
and
mov
pop
mov
adc
and
lock
imul
je
inc
dec
aam
out
pushl
ss
dec
add
rcrb
cs
aam
mov
pusha
ret
insl
inc
jo
test
mov
scas
lods
lcall
xor
shrb
and
adc
jecxz
iret
insl
sarl
pop
push
add
clc
test
bound
lahf
and
arpl
or
icebp
cmp
jmp
mov
sbb
mov
adc
mov
iret
scas
dec
jb
ja
iret
dec
lahf
or
lods
das
mov
jb
out
cmp
pusha
add
sbb
lahf
lcall
pop
test
inc
aaa
negl
xor
fisubl
mov
adc
lcall
pop
ret
fsubrs
sub
mov
sahf
cmpsb
nop
mov
dec
nop
cmp
in
sbb
stc
inc
pop
andl
icebp
sbb
mov
inc
test
mov
sub
jne
inc
mov
aas
inc
sub
mov
arpl
sbb
in
addr16
add
mov
fildl
js
test
lahf
aas
and
clc
lret
pop
xor
insb
cmp
bound
movsl
das
and
pushf
sub
stos
adc
jb
ss
mov
in
ss
jle
fidivrs
fst
icebp
stos
jno
mov
mov
sbb
nop
pushaw
cmp
stc
xchg
shrl
and
adc
sub
mov
filds
lret
shlb
out
rsm
xchg
dec
xor
cmc
subl
es
adc
pop
fldenv
xorb
sbb
cmovno
and
in
fsubrs
call
mov
iret
inc
cmp
or
icebp
outsl
aam
outsl
pop
loopne
lahf
mov
cmp
dec
ficoml
je
movsl
push
cltd
push
jnp
fidivrs
pop
mov
inc
and
jge
arpl
xchg
fmuls
imul
xchg
in
in
jno
mov
hlt
dec
loope
sub
sub
xor
stc
push
jp
jno
leave
or
aaa
jp
out
out
not
sbb
push
pushf
cmp
inc
xchg
push
mov
dec
cmpsb
push
adc
push
mov
and
adc
lock
in
jecxz
xchg
lods
icebp
test
adc
stos
or
mov
cmp
lcall
xchg
je
insl
and
aam
call
mov
push
stos
and
cs
movsl
push
and
bound
mov
push
mov
iret
ljmp
push
arpl
dec
sbb
sbb
negl
into
inc
cld
cmpsb
cmp
movsl
out
sbb
cmp
es
rclb
jne
cmp
mov
jle
push
lods
xlat
iret
xchg
cwtl
shrl
sub
stos
mov
push
lret
loopne
adc
lcall
lret
enter
cmpsl
add
jmp
pop
enter
fists
mov
clc
and
movsb
xchg
and
lret
xchg
imul
mov
cld
adc
dec
mov
xchg
daa
sub
adc
or
cmp
jnp
sbbb
mov
mov
pushf
mov
inc
adc
or
mov
inc
cmp
sub
add
mov
push
mov
dec
push
jl
mov
sti
mov
test
xlat
mov
daa
pop
xor
in
repz
je
cmp
jge
xchg
nop
adc
fcoms
dec
test
jne
pop
xchg
cmp
repnz
mov
mov
mov
andl
imul
clc
rclb
jbe
mov
icebp
inc
and
pop
shl
js
fmul
int
cwtl
xor
mov
jnp
movsl
lret
push
jb
adc
aad
bndldx
inc
inc
jb
int3
movsl
cmp
imul
sub
bound
leave
push
test
loope
mov
or
mov
pop
jmp
xor
insb
dec
xor
les
xchg
jge
xchg
mov
mov
mov
jge
int3
push
add
inc
and
mov
popf
stc
mov
insl
dec
pop
cmp
stos
in
mov
es
loop
mov
call
pusha
lahf
or
movsb
jbe
roll
cli
scas
jmp
or
mov
leave
and
add
mov
fsts
sahf
cwtl
mov
ja
add
cli
fildl
lds
add
sbb
sarl
cmc
or
enter
lret
sub
pushf
jle
dec
xor
les
sahf
mov
lods
mov
jno
pop
and
sbb
mov
repnz
jp
rcll
ljmp
cmp
popf
or
ljmp
cld
sub
cmpsb
inc
pop
add
pop
scas
pop
negl
adc
out
aaa
push
mov
add
lcall
int3
or
mov
sar
mov
push
push
xchg
push
daa
fs
push
into
cmpsb
mov
push
and
rolb
fisttpl
sti
jmp
scas
mov
aaa
in
adc
xchg
popa
mov
bound
cmp
std
outsl
call
lods
mov
cmpsb
fmul
inc
ljmp
adc
fcmovne
dec
push
hlt
fisttps
cmpsb
test
push
shrl
insb
xor
inc
out
loop
and
subb
out
push
sub
and
or
into
sub
ficompl
fs
cmp
clc
daa
push
push
std
std
andb
movb
sbb
popf
adcb
adc
in
sub
pop
pop
lret
arpl
jb
push
cmp
jle
jnp
addl
nop
xor
add
ficomps
xor
jecxz
cs
inc
test
stos
jo
sub
pop
aad
jle
jne
sub
jmp
sub
dec
pop
cli
out
fwait
mov
and
movsb
test
rolb
pop
dec
pop
xchg
mov
repz
jp
aad
xchg
mov
outsb
imul
mov
mov
add
pop
and
fs
add
inc
add
pusha
push
pop
push
fimull
bound
ficompl
jge
pop
adc
adc
jecxz
adc
inc
stos
jbe
in
sub
scas
inc
imul
mov
mov
cmpsb
pop
aad
cli
fstpt
mov
or
sti
push
and
sub
adc
pop
mov
or
sbb
inc
imul
or
orl
test
xor
adcl
cld
and
mov
shlb
call
daa
dec
repz
mov
aas
cmc
or
and
cmp
xchg
jne
stos
dec
dec
push
popf
aam
pop
pop
or
push
lret
cmp
fsub
mov
popf
jp
filds
js
inc
popf
fbld
daa
in
outsl
std
fadds
adc
outsl
dec
xor
stos
sbb
or
mov
fisubrs
out
cmc
rcrl
lock
inc
mov
jo
out
xlat
push
imul
jbe
insb
pushf
lret
jmp
leave
in
pop
xchg
imul
insl
add
cmp
mov
pop
arpl
fwait
insb
aad
mov
es
ds
arpl
pop
adc
cld
inc
movsl
out
andl
mov
mov
mov
testb
ljmp
mov
cmp
aam
ror
add
xor
xchg
xor
xor
aas
in
fnsave
and
pop
add
les
out
mov
dec
mov
adc
jne
ljmp
les
xorl
scas
fwait
sbb
icebp
popw
jmp
cwtl
cmc
lds
mov
lahf
and
mov
lret
jno
cltd
push
sbb
mov
fisttpll
fwait
pop
jg
mov
xor
shlb
cmc
fadds
xor
test
sti
sti
sbb
inc
adc
shll
sarb
pop
cmp
pop
sahf
fidivl
out
lds
and
inc
push
push
cmpsb
mov
jge
fstpl
xor
imul
mov
test
pushf
xor
loope
inc
cmp
popf
jae
mov
mov
mov
xlat
stos
sub
xor
pop
xor
lea
mov
inc
xor
and
mov
rcrl
andl
ljmp
cld
ss
imul
loopne
es
nop
dec
test
fisttps
pushf
lods
or
inc
pop
movsb
addr16
xor
add
mov
mov
sbb
stos
and
sub
inc
cmp
and
xchg
and
andl
xchg
mov
or
test
mov
mov
mov
jbe
and
inc
push
das
push
and
lahf
repnz
xchg
outsb
sub
adc
pop
lret
shlb
stos
jle
add
sti
fxch
sti
insb
inc
out
dec
cli
jp
fidivrs
mov
shlb
sahf
popf
fcomps
pop
mov
or
mov
enter
scas
fldt
mov
or
sbb
pop
fs
dec
idivl
movl
js
cmp
call
sbb
dec
sub
jo
fs
jo
adc
sub
inc
call
incb
push
mov
xor
es
mov
or
rorl
cmp
mov
push
repz
and
lods
sub
jbe
fwait
and
adc
sbb
ljmp
or
out
out
lods
and
sub
xchg
mov
sub
pop
in
test
fbld
add
out
xchg
mov
mov
scas
and
jle
loop
cmp
pop
fisubs
lock
pop
inc
adcb
xchg
jmp
inc
scas
adc
sbb
loope
push
jge
mov
push
dec
sub
xor
jmp
mov
xchg
lret
dec
xchg
pop
insb
add
fisttpll
or
dec
outsb
das
dec
insl
scas
dec
shll
cmp
shl
push
mov
jle
lds
jno,pt
add
andnps
addr16
imull
or
lret
shrb
pop
xchg
mov
addr16
add
push
xchg
jl
adc
out
jmp
and
mov
loopne
nop
add
mov
dec
sbb
mov
stos
pushf
add
ficompl
aas
mov
mov
rcrb
sub
pop
int3
fdivr
xchg
arpl
xor
aam
or
loop
insb
push
mov
mov
popf
insb
sbb
mov
or
enter
into
ljmp
jno
mov
imul
inc
hlt
shlb
or
xchg
xchg
arpl
pop
jbe
and
jge
mov
cmp
xor
sbb
cld
sar
clc
pop
aas
mov
sub
aam
jecxz
pop
push
adc
dec
sbb
in
idivl
sbb
inc
adc
shrb
push
idivb
scas
in
mov
rcrb
inc
popf
insb
divl
jg
int
imul
lahf
inc
fmuls
mov
test
test
and
push
mov
leave
push
inc
cmp
subl
fwait
cmp
lds
pop
adc
std
addb
ds
lods
mov
hlt
inc
adc
or
movsl
sbb
jae
loopne
bnd
mov
shrb
and
test
push
cmpsb
mov
jne
repnz
jae
mov
arpl
or
aam
loopne
pop
out
enter
leave
imul
xchg
inc
and
lods
je
pop
cmp
js
xlat
pop
mov
lds
mov
fidivl
aas
jno
cltd
pop
fmull
xor
dec
lcall
fnsave
push
icebp
and
and
in
push
mov
sub
loop
outsl
push
push
stos
cmp
lods
ss
scas
es
shr
daa
jnp
sbb
lock
inc
andb
notl
ret
ljmp
push
stos
mov
fsubrl
fadds
out
mov
jmp
pop
sbb
xchg
sarl
or
add
dec
push
mov
mov
cmp
sbb
lret
dec
shr
cli
mov
push
pop
cli
jo
not
xor
pushf
xchg
xchg
and
jecxz
push
ljmp
mov
or
movsl
cmc
movsl
push
jl
dec
fistpll
mov
jae
aaa
jmp
mov
mov
adc
dec
call
sahf
mov
shr
movsb
nop
or
or
int3
lret
idivl
gs
cmp
cmpsl
mov
dec
aad
divb
xor
hlt
sub
fstpt
insb
repnz
repnz
and
cs
stos
addr16
mov
aas
xor
sti
mov
xchg
cltd
jg
inc
push
jno
popa
mov
test
or
shrb
jns
test
fiaddl
dec
adc
cmp
sub
sbb
xor
jg
ljmp
jno
add
xchg
out
dec
jecxz
xor
add
add
push
or
xor
bound
repnz
and
fildll
jg
bound
daa
fadds
fimull
in
adc
fs
cwtl
pop
push
sbb
nop
jg
adc
fbld
cmp
outsl
subl
cmc
xchg
jmp
sub
aam
sub
mov
pop
imul
jnp
jl
and
shll
ret
out
ds
es
dec
lods
mov
and
xor
fcompl
jnp
cmp
mov
mov
mulb
out
add
mov
inc
cli
cmp
xor
pop
adc
in
sub
pusha
fstpl
xor
and
out
add
or
rcr
pop
imul
xchg
xchg
mov
test
push
into
inc
cwtl
and
aaa
adc
add
in
pop
mov
add
sub
xor
dec
lcall
popf
xor
xchg
sar
and
fwait
inc
and
ret
daa
shll
xchg
or
daa
iret
in
insl
adc
sbb
sbb
pop
enter
rcrb
sahf
pop
xor
mov
js
and
rolb
sbb
inc
push
push
mov
mov
xchg
xor
pop
aaa
arpl
cmp
jb
mov
daa
mov
popf
pop
xchg
jb
fildll
mov
js
xor
divl
in
rcll
xlat
or
or
jb
loope
mov
cs
push
mov
insb
les
inc
int3
call
mov
inc
leave
dec
pop
dec
idivb
mov
popa
jl
mov
sub
aas
imull
cmpsb
push
jmp
enter
shlb
push
cmp
lock
or
test
outsl
xor
mov
lock
mov
lock
mov
xchg
add
outsl
sbb
xor
lds
aam
test
popa
dec
push
xor
dec
mov
lea
sbb
push
sub
jne
push
fdivrs
das
add
into
add
xchg
bound
fadds
out
lret
adc
jmp
out
xor
mov
je
sub
int3
sbb
fs
or
push
stos
jp
xor
out
inc
mov
sub
add
jmp
dec
xor
ret
push
lds
add
movsl
into
mov
and
jb
jns
ret
dec
sub
mov
dec
xor
xchg
enter
xor
dec
fistpl
fs
inc
jbe
push
lods
daa
push
psubusw
jmp
xlat
mov
pusha
or
test
lods
pop
add
add
jnp
sbb
sbb
xor
mov
frstor
shll
fstl
lret
pop
mov
aam
sarl
dec
aad
nop
ret
xor
je
movsl
adc
jle
jbe
stc
icebp
imul
jl
mov
fwait
in
lcall
mov
cmp
mov
cmpsl
xorb
dec
pop
mov
cli
scas
jmp
add
pop
mov
js
mov
data16
pusha
aas
jg
cmpsb
jbe
jmp
mov
add
stc
loop
adc
scas
fsubrp
xchg
shrl
mov
jns
xlat
scas
ljmp
adc
and
cmpsl
popa
mov
shlb
push
js
sub
test
in
arpl
rorb
fbld
nop
idiv
testl
lods
int
fsubrl
sub
jnp
mov
popa
cmpsl
xor
das
push
bound
jle
mov
sbb
fs
in
or
push
push
jle
lea
aaa
adc
cli
dec
jmp
stc
data16
sub
stos
sbb
aam
jne
jge
sub
push
push
push
pushf
mov
push
in
loopne
das
cmpsb
mul
and
in
jl,pn
pop
ja
insl
add
lahf
hlt
sub
icebp
pop
jp
ljmp
jmp
fildl
js
shll
push
rclb
push
cmp
xor
or
inc
mov
sti
cmp
pop
jecxz
jne
popf
pop
call
and
inc
mov
popa
xchg
es
punpckhbw
shl
sub
mov
jnp
pusha
or
lret
mov
hlt
pop
test
cmp
es
mov
rol
aam
insl
mov
sti
cmp
xor
int3
leave
aad
out
notl
shrl
adc
bound
mov
jmp
lods
aam
add
mov
inc
cmc
mov
xchg
or
loope
or
xor
xor
mov
pop
mov
aad
cmp
lret
push
cltd
mov
leave
adc
inc
daa
inc
push
xchg
pop
adc
dec
jg
push
in
negl
add
aas
mov
mov
cmp
int3
mov
std
in
mov
cmpsb
dec
lods
cmp
pop
in
push
cmpb
fistps
sbb
inc
pop
jno
sbb
push
testl
inc
repnz
cmp
xchg
popf
pop
out
xlat
fnstsw
cmpsl
mov
cmp
sbb
movb
and
repnz
jae
push
add
adc
movsl
imul
xlat
inc
add
test
daa
repz
addr16
lahf
sarl
mov
cmp
adc
ljmp
loop
and
fsubl
adc
es
cli
fdiv
mov
enter
mov
adc
xchg
mov
shrd
cmp
es
call
popa
pop
dec
xchg
mov
aad
pushf
shrl
mov
cmp
iret
adc
jb
inc
sbb
push
sub
pop
dec
pop
out
push
stos
jge
sub
mov
je
and
sbb
pop
out
lret
cmp
jmp
int
cmp
testl
fcompl
mov
mov
mov
test
lret
cmp
cwtl
dec
mov
loopne
imull
sbb
sbb
push
mov
out
pop
adcb
mov
mov
jecxz
fsubrl
lcall
enterw
and
xor
xor
out
mov
aas
mov
call
sbb
scas
mov
adc
dec
push
stc
jne
jns
or
push
pop
imul
xchg
out
mov
pop
mov
out
add
jbe
in
push
dec
sbb
xchg
mov
dec
inc
inc
sbb
fwait
and
fst
loope
push
push
sbb
lods
add
ret
orps
call
jl
sbbb
or
ja
imul
jg
mov
lret
sub
roll
lcall
jp
sbb
fbstp
push
fwait
dec
gs
push
sub
xchg
scas
sbb
pusha
xchg
out
mov
movsb
lods
push
dec
rclb
out
dec
fsubrs
out
sbbl
adc
adc
cmp
add
inc
insb
xchg
cmp
movsl
and
xlat
enter
xchg
icebp
int
lods
pop
pop
out
arpl
mov
leave
mov
shll
fdiv
stos
xlat
test
jne
dec
inc
add
and
mov
popfw
insl
jg
data16
xlat
jb
jmp
stc
add
aad
mov
sbb
push
mov
lock
rcr
xor
mov
out
loopne
xor
mov
ljmp
leave
filds
mov
adc
mov
or
push
add
clc
cmp
cwtl
fldcw
inc
mov
fwait
push
pop
add
jns
xor
pop
insl
sub
jp
ror
leave
dec
data16
push
pop
mov
cmpsl
sbb
outsl
jae
pop
stos
sbb
enter
loopne
movsl
pop
pop
test
fmul
pop
cmp
rorl
ret
cmp
sar
roll
aam
mov
pop
mov
pop
sub
les
xchg
arpl
mov
jb
test
decb
mov
mov
daa
mov
lea
or
js
push
in
xlat
lcall
ret
cmc
add
inc
test
push
jae
mov
add
and
mov
or
dec
dec
sbb
movsb
and
dec
pushf
adcb
fsubrp
jo
cltd
jg
or
pop
faddl
int3
and
cmpsl
fisttpll
sarl
inc
mov
sbb
and
popf
jae
imul
xor
bound
inc
out
insl
arpl
bnd
iret
loopne
mov
mov
pop
stos
call
pushf
dec
jp
loope
insl
out
js
xor
xor
jne
xor
pop
mov
inc
xchg
adc
push
lea
adc
sbb
lahf
scas
add
popa
xchg
fnop
pop
jne
lcall
add
inc
lcall
js
or
xor
ret
mov
daa
xchg
mov
out
dec
xorl
fdivl
into
sub
and
inc
fimull
into
or
scas
bound
ffreep
andb
lahf
aas
mov
inc
dec
sub
ret
enter
and
fisubrs
dec
mov
popaw
loop
leave
addr16
lcall
pop
lods
adc
and
mov
xchg
adc
xor
js
jmp
fs
sarl
sarb
hlt
xchg
int
repz
adc
mov
fs
push
and
arpl
xor
cld
pop
arpl
mov
add
sub
nop
mov
popf
es
shrl
add
mov
incb
push
xor
adc
dec
lcall
popf
pop
aaa
add
je
call
add
jmp
jecxz
cmpsl
popa
adc
movsb
imul
shll
mov
aam
mov
psubq
in
inc
leave
frstpm(287
or
mov
imull
cmp
daa
mov
popa
jecxz
mov
lret
pop
pop
adc
and
sbb
or
jge
mov
and
in
jmp
loopne
inc
rorl
sub
fcomip
js
data16
mov
lret
movsb
or
fimuls
aas
iret
mov
stos
lcall
jg
outsl
jbe
jl
fs
jge
or
jbe
dec
sti
jmp
cmpsl
jg
out
sbb
pop
cli
clc
pop
xchg
mov
push
pushf
add
inc
enter
ret
enter
jge
jno
push
fdivp
adc
subb
bound
jle
inc
pop
in
sbb
sbb
repz
sbbb
mov
push
push
adc
xor
mov
mov
movsb
movb
sub
add
mov
lea
or
xchg
les
push
xchg
add
sti
mov
insl
cs
aas
lret
jg
mov
mov
call
mov
data16
mov
adc
add
jae
jo
add
pop
popl
mov
jle
push
or
int
lahf
ja
dec
sub
jecxz
das
sbb
subb
roll
adc
jle
xor
add
xchg
dec
test
mov
shr
add
pushf
dec
addr16
dec
out
out
cld
pop
sbb
mov
jne
jmp
jne
mov
push
pop
pop
jge
aas
and
scas
lret
std
push
jmp
fisubs
adc
pop
dec
iret
aam
out
xor
ret
jno
jno
push
mov
outsb
dec
pusha
mov
imul
in
aam
pop
mov
out
xchg
adc
cmpsb
hlt
scas
push
sub
dec
mov
ja
test
lods
xor
hlt
sbb
xor
faddl
mov
xlat
mov
ret
fdivrl
push
mov
pop
cmpsb
push
movsl
and
fwait
jle
inc
cmc
jno
dec
sub
lds
aam
add
mov
cli
cltd
sbb
call
mov
jb
and
mov
shrb
lret
mov
movsl
out
mov
cmp
inc
rorl
adc
xor
pop
mov
call
je
cld
or
and
xchg
adc
push
jb
std
call
add
dec
jg
ja
xor
jns
cltd
scas
mov
xchg
xor
lahf
xchg
and
cmc
pusha
cmp
outsl
in
dec
mov
and
jo
or
pop
lcall
push
sbb
andl
dec
inc
xor
aaa
cmpb
sbb
mov
push
mov
enter
loope
int3
xchg
adc
lds
push
jno
inc
shld
push
out
xchg
inc
xor
add
test
adc
add
insb
lock
std
add
sbb
call
mov
xlat
xchg
and
jle
push
fiadds
mov
imul
imul
int
cmp
jmp
outsb
pop
xchg
sub
push
vpmaddwd
jns
dec
ret
daa
mov
cli
rcll
lock
pop
xor
jae
adc
test
push
jae
xor
xchg
stc
lock
into
in
aad
xor
popf
fnstcw
sub
ja
cld
std
sbb
mov
push
or
jae
and
mov
cmpsl
int3
mov
inc
or
in
xor
insl
adc
push
rolb
loope
fisubrl
xchg
lcall
mov
ror
bound
dec
push
mov
dec
or
out
lods
mov
outsl
js
push
sub
insb
sarb
pmullw
push
pop
outsl
stc
pop
scas
xchg
dec
and
push
mulb
inc
sub
push
sbb
add
or
sbb
pop
jo
sahf
fbld
sub
shll
push
push
push
xchg
mov
cmp
push
loope
popa
push
data16
mov
and
shr
lock
scas
xchg
iret
pop
out
push
sub
or
sbb
ret
jno
not
stos
push
fstpt
fisubrl
xchg
push
push
sti
ss
xor
cmpsl
pop
leave
in
sti
lods
outsb
dec
inc
testb
cmp
xchg
mov
mov
and
cmpsb
jno
cmp
in
lea
sbb
xchg
xchg
push
popl
jp
dec
stos
movsl
ljmp
xor
ret
jns
push
xor
push
mov
cmp
clc
dec
and
lods
sub
mov
lret
add
cmpsb
out
pop
lahf
movsl
shll
sub
mov
cs
ljmp
sbb
dec
push
inc
out
sub
mov
dec
sbb
fcoml
jb
sub
xchg
movsb
mov
ret
movsb
mov
popf
mov
xor
jmp
outsl
mov
shlb
ficoml
jno
pop
out
mov
bound
enter
lret
cwtl
aam
and
or
mov
lods
push
xor
or
dec
dec
rorl
jno
lods
fldl
adc
aam
arpl
jle
leave
jmp
test
je
gs
dec
xlat
lcall
mov
shrb
pushf
sbb
jno
jo
jno
cmp
stos
sbb
jno
mov
push
js
scas
pop
popf
jmp
loopne
push
xchg
add
or
mov
mov
popl
das
ss
sarb
test
seto
and
pop
rclb
rclb
icebp
rorl
int
cltd
fcmovne
lcall
pushl
rorl
pop
jb
dec
xor
pushf
adcl
outsl
dec
mov
dec
or
dec
mov
aam
js
imul
lock
in
sbb
aad
sub
inc
push
stc
push
lock
xlat
jnp
push
leave
inc
xchg
insl
fnstenv
cmpsl
mov
les
arpl
mov
hlt
dec
pop
sbb
adc
or
xchg
adc
into
fcmovbe
fwait
dec
inc
in
into
jbe
scas
fists
and
push
stos
fsts
lcall
sbb
xor
mov
fnstsw
jo
xor
out
push
mul
push
cmpsl
dec
frstor
lods
je
jecxz
xchg
mov
fwait
inc
xchg
js
daa
pop
daa
push
loope
shll
addr16
jmp
enter
sbb
repnz
cmpb
pop
lcall
movsb
sbb
jns
pop
cltd
das
std
notb
xchg
idivl
insl
pop
movsl
xchg
stc
sahf
fsubrl
or
divl
and
ret
icebp
jno
data16
leave
outsl
jae
cmp
das
jb
jb
adc
arpl
lret
xchg
lcall
push
add
cli
fwait
mov
jecxz
pop
xor
inc
jbe
inc
icebp
data16
enter
xor
push
subb
mov
enter
nopl
imul
hlt
mov
mov
cmp
rclb
sbb
and
sub
bound
xor
sbb
and
lahf
sbb
rorb
in
cmp
iret
push
js
aad
inc
ss
push
arpl
mov
jne
adc
push
sub
and
dec
xor
push
jmp
addr16
add
cmpsl
mov
cmp
popa
jno
adc
lahf
sub
int
ret
arpl
cmp
pop
inc
lods
stc
rcrl
stos
stos
xor
shrb
inc
clc
scas
rorb
push
jae
xchg
and
and
pop
dec
decl
sahf
fsubrp
fsubl
out
dec
inc
or
sub
outsl
clc
rcrl
mov
cli
fs
cld
dec
fstl
sub
sahf
sub
xchg
pop
insb
or
sub
mov
nop
fistpll
pusha
mov
and
lret
cmc
cmp
ljmp
ret
les
add
jmp
dec
jne
mov
inc
dec
cmpsb
xchg
call
jmp
add
dec
add
xchg
push
add
jecxz
inc
pop
jnp
pop
push
pop
ret
mov
and
adc
scas
lea
jmp
das
pushf
cmc
mov
inc
push
inc
mov
je
cmc
jge
pusha
adc
insb
lea
xchg
es
in
data16
insl
aad
mov
mov
add
into
iret
divb
xor
outsb
xor
test
in
fnstsw
mov
push
cmpl
sub
sub
aad
or
mov
js
fdivrl
movsb
insl
test
subb
mov
into
xchg
clc
jge
and
shl
sti
cmp
cmp
testb
jno
aaa
mov
ret
leave
add
or
sbb
imul
sub
mov
mov
test
sub
enter
aas
roll
insl
sbb
push
rclw
scas
int3
jo
subb
fdivs
or
jecxz
negl
outsb
push
lret
jne
inc
loop
das
loope
sub
loop
stos
addr16
cs
fs
dec
dec
and
in
dec
out
ja
pushf
mov
dec
test
push
stc
ds
sbb
stos
or
inc
add
std
xchg
jg
add
rcll
mov
mov
dec
ljmp
out
repz
popl
mov
out
mov
lret
pop
or
push
cli
mov
jl
mov
mov
inc
inc
clc
xchg
xor
jmp
bound
es
jle
scas
lods
out
or
negb
sahf
shrb
aam
and
add
dec
stos
cmc
lods
push
mov
or
loopne
lods
loop
jnp
mov
xor
push
loope
dec
sbb
rcrb
xor
xchg
inc
movsb
movsb
add
adc
mov
xchg
insl
xchg
test
mov
or
mov
xor
mov
std
cmp
dec
pop
sahf
lods
cmc
mov
jecxz
data16
pop
mov
lds
cli
inc
mov
cmpsb
add
mov
mov
repz
icebp
iret
adc
push
dec
ficomps
jne
cmc
leave
sbb
jns
xchg
fcomi
or
pop
rcrl
mov
dec
std
jns
cmp
iret
push
in
inc
cmp
jne
repz
lcall
mov
dec
fmulp
lods
jl
sub
std
stc
jle
jle
xor
pop
jno
jecxz
mov
push
movsl
scas
ja
in
pop
jp
mull
sbb
sbb
jge
adc
out
xchg
xor
cmc
sbb
lock
test
cmp
aaa
divl
dec
inc
aad
sbb
fstps
add
rcrl
jns
mov
out
inc
adc
mov
and
daa
mov
xchg
add
or
aas
lock
xor
lret
dec
lds
adc
or
push
jbe
or
aaa
add
or
out
mov
mov
and
pop
ret
cld
out
jo
scas
lds
sub
push
xor
out
cld
mov
inc
jmp
jne
pop
inc
lahf
xor
cld
mov
xor
icebp
xlat
mov
dec
out
mov
or
loop
sti
sbb
mov
cmc
cs
cs
cmpsb
add
repz
clc
sbb
jmp
dec
pop
enter
mov
cs
lods
xlat
mov
shl
mov
cltd
hlt
and
push
cmpsb
shlb
mov
pop
fildl
or
add
inc
bound
je
mov
mov
sbb
xchg
lock
enter
rcrb
dec
aas
lahf
test
mov
out
jmp
add
sub
jae
inc
loop
mov
adc
test
or
sub
inc
rol
push
icebp
xchg
adc
les
or
lds
push
test
das
jge
nop
in
mov
out
dec
mov
out
sahf
cmc
sarb
xchg
dec
pop
push
xor
dec
pop
repnz
mov
or
dec
inc
add
mov
mov
or
cmp
and
ror
mov
arpl
cmc
rolb
and
test
jae
es
add
mov
xor
leave
mov
movsl
sub
jl
sbb
mov
adc
leave
ss
loop
add
mov
bound
test
lods
cli
push
xchg
xchg
outsl
bound
jnp
in
xor
sub
dec
mov
add
inc
aas
mov
ljmp
add
ficoml
sub
sub
js
mov
pop
or
cmp
add
mov
xchg
imul
fnstenv
or
and
adc
fistps
aaa
sahf
sub
adc
arpl
in
popf
pop
shlb
out
mov
sub
hlt
xorb
cmpsb
xor
fcompl
pusha
lods
jecxz
pop
inc
movsl
jnp
adc
int
mov
jo
mov
testl
clc
jne
es
andb
mov
test
sbb
xchg
idiv
push
pushl
testl
fwait
and
cmp
xchg
xchg
repnz
setns
mov
pop
cmc
xchg
inc
loop
fmuls
mov
sbb
xchg
bound
inc
mov
dec
inc
lods
and
pop
sub
leave
mov
push
add
das
adc
clc
dec
frstor
sbb
mov
pop
mov
aas
mov
lods
pop
in
mov
push
out
push
iret
pop
inc
or
mov
jno
push
cmpsl
ret
inc
fisubrl
add
in
cmp
xchg
sar
frstor
adc
and
and
into
mov
sbbb
pop
xor
nop
into
enter
push
mov
xchg
sub
mov
xchg
loop
rolb
nop
jae
jno
push
imul
mov
insl
jns
sbbl
dec
lock
inc
push
and
push
jb
push
mov
cld
rcll
adc
add
add
outsl
adc
fdivrl
out
movsb
cmpsb
mov
mov
stos
sub
jmp
jl
sub
out
mov
popa
outsb
in
enter
shl
fs
cltd
jmp
dec
imul
pop
fdivrs
add
jns
arpl
fsubs
cs
std
mov
out
daa
fcomp
ljmp
hlt
ret
mov
shl
adc
gs
aad
dec
adc
cmpsb
fsin
aaa
mov
es
xchg
xchg
or
push
mov
jp
out
stos
mov
pop
jno
fs
push
test
jb
mov
mov
shll
cmp
jp
or
pop
or
sti
shl
push
add
xchg
loopne
adcb
imul
lds
outsb
mov
rorb
sub
scas
push
test
fstpt
ret
jnp
pop
and
jno
in
xchg
jbe
es
pop
push
xchg
ret
inc
push
pop
and
ja
out
lret
adc
xor
clc
addr16
mov
loope
out
fs
jp
mov
or
mov
cs
fcomip
loop
cltd
or
call
push
test
test
or
ficomps
xchg
jo
inc
inc
mov
push
jmp
inc
jecxz
outsl
mov
jle
mov
jmp
std
sti
bound
dec
adc
mov
cmp
and
sahf
ret
xorb
push
arpl
aad
popa
fwait
call
jmp
adc
punpcklbw
and
negb
dec
mov
pop
cs
and
shlb
lret
cwtl
fwait
adc
sub
mov
pushf
and
xor
push
in
sub
inc
lods
push
icebp
test
or
sahf
ret
xor
insb
inc
loopne
call
test
or
sbb
sub
cltd
dec
pushf
and
in
shlb
adc
cwtl
int3
lods
shlb
or
push
pop
jns
sti
mov
xchg
push
stos
jae
mov
cmp
jne
stos
xor
jne
dec
fldt
rcrb
adc
xor
inc
mov
adc
out
mov
stos
pop
sbb
and
sub
adc
adc
insb
and
jae
xlat
xor
ret
jecxz
das
iret
and
je
sbb
and
movsl
rcrb
ds
dec
testl
or
addr16
inc
repnz
sub
mov
jo
or
movsb
vmulpd
lds
icebp
repz
mov
and
js
loope
xchg
or
movsb
pop
ss
pop
aas
cwtl
add
inc
loop
mov
fs
imul
mov
bound
xor
and
shl
push
xchg
subl
pop
push
popa
sub
ss
bound
test
out
shrb
inc
sub
cmpsl
mov
mov
cli
mov
incb
iret
xor
ds
push
push
adc
notl
shr
int
mov
pop
loop
cld
or
mov
mov
sbb
in
das
add
mov
jae
mov
xlat
push
push
cmp
dec
xchg
inc
dec
add
pushf
bound
ja
ret
xchg
lret
mov
cmp
sbb
push
mov
shll
xor
mov
sbb
pop
btc
inc
pop
push
xchg
shl
push
lds
enter
pusha
adc
mov
rolb
or
jle
fisttpll
and
into
std
clc
cmp
mov
fbstp
mov
push
mov
roll
sbbb
inc
sub
push
dec
pop
dec
mov
fcoml
mov
stc
into
lea
cmp
loope
jae
cltd
das
cmp
adc
js
mulb
inc
pop
sub
push
mov
add
decl
cs
out
jb
or
fstpt
mov
rsm
aas
into
jmp
shll
cmp
cwtl
pop
rorl
enter
dec
stos
dec
out
inc
cmp
or
ret
les
aas
iret
ja
rclb
fbstp
push
dec
cmp
ret
aam
jp
cmp
dec
aaa
int3
jp
inc
loopne
clc
pop
mov
ja
test
mov
jne
pop
mov
fstl
push
mov
daa
dec
inc
repnz
cmp
fs
repnz
jns
add
arpl
daa
sti
cli
shlb
insb
scas
shlb
adc
verr
test
adc
push
rclb
jb
and
mov
jp
data16
test
das
push
pusha
and
daa
scas
mov
mov
pop
inc
lds
pop
data16
das
hlt
lea
inc
sbb
imul
and
jne
jb
mov
icebp
sti
mov
insl
jmp
call
pusha
scas
mov
jo
cld
out
aad
test
cmc
popf
cwtl
jl
lods
cmp
inc
mov
inc
and
inc
aaa
ret
dec
pop
xchg
mov
pop
sarl
add
pop
and
jbe
stc
mov
shlb
jecxz
pop
loopne
insb
lods
jns
outsl
fbstp
jno
scas
or
mov
fisubrl
xchg
or
cmp
sub
and
jl
jge
inc
xor
mov
push
comiss
or
stos
sbb
imul
push
sbb
ret
dec
push
xchg
lods
push
lods
leave
scas
popa
sub
ret
xchg
cld
sub
mov
push
fisttpl
mov
stos
aad
in
mov
enter
int3
xchg
mov
out
cli
or
pop
sub
or
cmp
dec
mov
fsubrs
lea
jg
or
push
es
adc
mov
mov
rol
shr
popa
jne
dec
mov
outsl
lock
fidivs
sub
scas
mov
imull
cmpsb
shl
stos
xlat
mov
lcall
pop
in
test
jecxz
fs
dec
faddl
mov
ret
xchg
test
jb
sbb
mov
lods
push
xchg
jnp
xorps
mov
arpl
cmpsl
push
out
jge
pop
cwtl
add
ljmp
pop
mov
insl
jnp
sub
pop
cmp
fucom
sti
xor
data16
mov
xchg
mov
xor
xchg
sbb
dec
pop
mov
mov
rcll
mov
ljmp
cli
int3
push
nop
sub
ret
mov
or
dec
stc
inc
frstor
mov
scas
xor
out
fisttpll
cmp
fistl
out
dec
mov
cmp
mov
ret
push
hlt
std
fwait
jno
push
mov
arpl
jmp
fiaddl
cld
hlt
xor
aam
daa
sbb
adc
inc
xor
fwait
adc
jmp
xor
das
xor
mov
int3
sub
jae
cmp
push
sub
ret
std
xchg
ud0
std
add
jmp
jl
daa
pop
mov
jp
rorb
xchg
mov
push
scas
rclb
mov
cmp
out
out
sub
sbb
sbb
jmp
mov
rolb
xchg
lods
or
adc
cld
out
sbb
imul
sub
pop
inc
das
fs
imul
pop
mov
jns
xor
lock
sub
push
mov
dec
jecxz
sub
pop
xor
mov
lea
dec
daa
pop
xor
lock
loope
push
or
add
fiadds
call
insl
lcall
push
pop
push
inc
push
sbb
dec
shll
xchg
rolb
adc
add
or
movsl
mov
and
lcall
sub
inc
adc
pop
jmp
imul
cs
fcoml
in
cmp
cmp
stos
xchg
int3
cmpsl
lret
and
loop,pt
add
xchg
repnz
sbb
mov
adc
loopne
xor
push
push
adc
data16
pop
in
bound
int3
test
in
push
or
jmp
sar
sarl
fadds
sbb
dec
into
push
mov
loopne
mov
jno
dec
movsb
cmp
aaa
ud2
inc
or
xor
jb
xor
gs
ljmp
out
or
mov
sub
ss
mov
ficoml
popf
es
mov
inc
sub
roll
sbb
adc
sub
mov
shrb
jo
push
jno
repnz
in
lods
or
ret
xchg
ret
test
pop
cmpsl
sub
add
das
ret
jb
fisubl
ljmp
and
fisttpll
cmp
mov
mov
fisubs
mov
jns
and
pop
mov
add
mov
fsubl
jne
mov
and
fmull
enter
mov
jmp
dec
mov
pop
insb
and
pop
dec
enter
xor
int
mov
repnz
out
in
cmp
pushf
test
lret
mov
cld
int3
adc
mov
pusha
int
jp
pusha
lea
fidivrs
test
mov
cs
and
movsb
jge
loope
lret
int3
dec
push
pop
inc
out
push
addr16
jnp
test
mov
movsl
fsubr
leave
add
movsb
add
loopne
lods
fst
mov
add
xchg
shl
sbb
out
sar
xor
add
std
sbb
cmp
int3
int3
leave
negb
iret
stc
sub
in
or
push
add
rorb
sub
xchg
mov
or
sbb
fdivrs
and
mov
mov
outsb
shll
fwait
inc
jecxz
lods
push
and
scas
mov
mov
cmpsl
or
in
call
push
cmp
cltd
fs
mov
or
aam
fbld
popl
cmpsb
sahf
mov
sub
mov
mov
jle
sbb
jb
test
mov
stos
pop
cld
in
popf
mov
pop
sti
xor
loop
mov
push
push
es
jge
rorl
scas
scas
push
push
pushf
jle
inc
jmp
inc
jmp
aad
loop
add
loope
mov
mov
call
int
call
scas
adc
mov
push
push
sub
sbb
sbb
imul
adc
jmp
jle
push
mov
sahf
insb
dec
adc
jo
pop
out
jle
jle
and
push
out
push
jo
int3
sub
gs
pop
push
fwait
mov
stos
xchg
jge
cmp
shl
rorl
cs
iret
pop
adc
xor
into
pop
adc
jp
fsubs
cmp
adcb
popf
xor
adc
jge
pop
popa
push
fsubrl
xor
les
xchg
xor
mov
das
push
mov
leave
lea
mov
push
mov
aas
sbb
jbe
clc
mov
frstor
push
aaa
shrl
lods
xor
fucomi
mov
mov
mov
mov
pop
dec
lret
lock
popf
icebp
rcll
sahf
pop
mov
mov
cmpsb
xchg
adc
inc
fcmovb
loop
lahf
lods
adc
shrl
je
mov
jp
xlat
sub
insl
inc
stos
and
test
jne
sbb
leave
push
push
xchg
and
ds
mov
bound
inc
movsb
pop
xchg
cld
push
push
inc
inc
or
jge
aam
dec
imul
inc
insl
negl
and
aam
adcb
xchg
jnp
mov
dec
sti
jecxz
mov
cmpb
xchg
js
bound
sub
mov
pushf
je
repz
sub
pop
fildl
test
xchg
and
push
dec
mov
cltd
mov
mov
stos
mov
xor
mov
daa
dec
cmp
inc
xor
inc
sub
pop
pop
push
sub
pop
push
pop
aam
imul
rcrl
xchg
insl
ret
jb
decb
mov
aaa
sbb
inc
pushf
mov
lock
roll
add
inc
or
fisubrl
out
mov
jo
xor
test
sub
ljmp
jge
arpl
lcall
nop
sahf
loope
ljmp
sbb
mov
sbb
push
sub
out
loop
stc
add
sbb
and
inc
or
xchg
cmp
arpl
sar
mov
sub
fisttps
push
sbb
mov
mov
hlt
dec
xor
mov
cmp
cwtl
sbb
ljmp
jmp
jns
int3
icebp
outsb
mov
push
push
pop
icebp
push
and
inc
jmp
cld
mov
xchg
adc
push
mov
scas
adc
and
sbb
mov
ds
jmp
push
sbb
sub
clc
roll
xchg
mov
mov
push
sbb
ror
jle
fwait
mov
leave
lods
movsl
inc
es
sahf
call
insl
daa
adc
xor
cmp
in
cs
mov
mov
and
cmpsb
aas
shll
add
push
and
dec
and
cli
orb
in
sahf
hlt
fistl
ficoms
xchg
int
cmp
add
mov
loop
adc
pop
mov
gs
or
add
jbe
adc
push
sub
inc
jmp
hlt
fwait
arpl
jae
call
xchg
loopne
ljmp
mov
sub
mov
data16
lea
cmp
js
adc
xchg
in
xchg
insb
inc
add
sbb
or
push
pop
test
int
fisttpl
mov
or
mov
jge
movsl
xchg
pop
mov
fwait
mov
scas
ucomiss
ja
and
iret
aad
imul
imul
mov
and
scas
stos
ja
add
int
dec
pop
out
dec
fs
cmpsl
inc
fdiv
movsl
and
pop
icebp
inc
push
push
cmp
dec
push
adc
js
arpl
sub
movsb
jae
push
repnz
mov
adc
loopne
pusha
inc
pop
cmp
nop
js
stos
dec
clc
mov
mov
fcomi
out
inc
dec
add
mov
sarb
adc
xor
or
mov
movsl
dec
gs
mov
jb
out
pop
push
out
pop
loope
into
mov
jp
or
dec
jl
into
lcall
into
ret
jle
xorl
cmp
dec
and
aam
cmp
mov
mov
popf
out
sarl
sbb
repnz
call
repz
xchg
pop
mov
sub
cmc
shlb
hlt
out
cmp
jle
jle
stos
mov
xchg
cld
jg
jno
add
dec
cmpsb
sbb
cmp
or
test
sti
cmp
lock
aas
pop
bound
push
idivb
inc
push
insl
and
out
adc
fwait
loope
xor
inc
in
push
insb
push
sbb
pcmpgtb
scas
mov
test
mov
jb
fnstenv
pop
mov
xlat
lds
push
dec
push
cmp
xchg
das
xchg
jo
dec
xchg
jle
sub
cmpb
pop
adc
fdiv
scas
out
add
imull
mov
icebp
call
sbb
push
es
adc
pop
cmp
push
jg
mov
pusha
sbb
rclb
xchg
mov
push
test
jge
add
or
sti
popa
lahf
inc
enter
movl
mov
jle
mov
test
jle
mov
les
cli
loop
aad
aaa
daa
sub
pusha
ja
rol
push
adc
xor
pop
negl
bound
inc
pop
movsb
adc
shlb
movsl
jge
mov
arpl
mov
xchg
mov
fsts
sub
and
aad
outsb
mov
xor
ds
xchg
jecxz
icebp
arpl
out
xchg
inc
ss
jnp
bound
inc
xor
xor
call
mov
stc
ja
addr16
adc
imulb
arpl
mov
cmp
adc
pop
ret
stc
lret
jle
jecxz
adc
sahf
addr16
pop
jmp
dec
sub
sub
add
insb
data16
pop
pop
xor
arpl
aad
xor
pop
adc
stos
mov
out
push
aas
es
rorb
mov
inc
repnz
xchg
push
pop
jae
pop
inc
push
das
jae
adc
push
fcmovu
scas
dec
inc
mov
mov
pushf
adc
pushf
daa
shlb
sub
inc
xor
call
inc
push
add
sti
stos
cwtl
push
rcr
mov
inc
das
in
pop
daa
lock
out
xchg
xchg
pop
or
es
in
and
sbbb
jl
pop
jns
xchg
scas
orl
stc
rclb
repz
sbb
mov
fisubs
pop
lods
popf
jl
lcall
test
push
sbb
repz
adc
inc
ja
mov
sti
outsb
test
sbb
fimull
mov
shrb
mov
inc
hlt
in
xlat
lea
jl
add
rolb
pop
lret
xchg
pop
mov
insb
mov
arpl
mov
cli
inc
and
push
mov
mov
cmp
aam
sub
mov
loopne
jmp
dec
jge
sub
push
add
and
movsl
push
lock
pop
jns
jp
cld
pop
js
sub
call
mov
arpl
mov
dec
sub
les
inc
push
lahf
shlb
mov
adc
pop
fmuls
mov
daa
leave
dec
arpl
mov
ja
jae
add
jns
jo
mov
mov
int
psrld
in
xor
sub
test
sbb
arpl
jb
js
adc
inc
xlat
cmp
clc
and
pop
add
pop
xor
sbb
repz
inc
jecxz
mov
pop
js
sub
xchg
mov
int3
test
aam
ljmp
adc
jae
in
orb
push
divb
bound
punpcklwd
mov
and
cmpsb
mov
push
subl
ror
cmpsb
cmp
xchg
std
jnp
lea
inc
adc
and
mov
xor
and
rorb
adc
xor
mov
leave
fidivrs
mov
push
call
faddl
xor
pushf
and
lock
sbb
cli
lahf
mov
sahf
in
cs
mov
inc
in
mov
iret
mov
movsb
xchg
adc
mov
les
mov
test
imul
jecxz
xrelease
jnp
inc
jl
lea
repnz
fyl2x
cs
dec
lock
pop
mov
je
xchg
scas
leave
test
cmpsl
andb
push
mov
les
inc
scas
inc
call
inc
push
adc
test
scas
push
jbe
add
sbb
jl
jecxz
loope,pn
inc
pop
mov
addr16
pop
xlat
xchg
aas
les
pop
sub
adc
sbbl
inc
aas
test
stos
sub
stos
inc
adcb
nop
loopne
mov
cmp
pop
mov
jg
sub
fisubs
fisttps
decb
jle
or
fisubrl
push
loopne
add
mov
xchg
ret
mov
dec
aas
mov
push
push
roll
test
push
in
adc
adc
cli
or
into
loope
mov
mov
fwait
rolb
fiadds
push
adc
loope
cmp
jmp
and
mov
movl
adc
das
fisttpll
xlat
aad
or
insb
mov
rcll
and
ret
mov
das
fidivrs
mov
xor
push
pop
or
cs
mov
inc
jb
daa
dec
push
push
inc
out
cld
sbb
sbb
icebp
and
roll
stos
sbb
push
sub
xchg
mov
or
or
lret
or
lret
into
shr
mov
das
lret
orl
xchg
and
cmp
cmpl
dec
jb
cmp
jb
jge
and
adc
mov
dec
push
adc
jne,pt
fdivs
push
fwait
fisttpll
cmp
push
inc
sub
popa
push
xchg
mov
and
push
add
in
data16
add
sbbl
rorb
cld
int3
fwait
sbb
in
fmull
inc
sub
inc
inc
pop
int
scas
push
mov
es
fnstenv
mov
scas
aam
sub
in
cmc
pop
mov
addr16
push
icebp
mov
xor
outsl
xor
jo
out
sub
pop
scas
fs
push
notb
dec
push
xor
inc
pushf
lcall
xor
cmp
lahf
pop
adc
stc
push
jge
mov
mov
sub
fmuls
xchg
jl
fiaddl
mov
ss
fcom
loope
mov
push
jbe
mov
xlat
mov
xor
in
ja
loope
imul
ja
or
sub
jb
jmp
jmp
mov
cmpsb
push
xchg
mov
popa
test
hlt
loop
sub
xor
add
mov
pmaddwd
add
sbbb
xor
loop
popf
mov
inc
dec
jnp
in
xor
jle
pop
inc
lcall
inc
shrb
loopne
pop
ret
sub
ss
jle
dec
pop
out
jecxz
aad
mov
pop
or
mov
imull
mov
mov
imul
dec
push
xchg
stc
out
xlat
pusha
inc
ss
mov
sbb
mov
aaa
cli
push
dec
into
loope
shl
xor
mov
adc
out
cli
loop
xorps
stc
pop
lahf
ret
mov
mov
sub
fnstsw
pop
out
aas
cs
call
lods
cld
shrl
and
shll
xor
bound
mov
push
and
shl
in
dec
negb
movsl
adc
out
insl
test
movsl
adc
lret
xor
lea
pushf
bound
mov
iret
jne
jge
shlb
or
lds
fnstcw
ret
pusha
sbb
or
out
sub
jne
and
mov
lea
push
jl
inc
sub
mov
xor
jle
push
ss
cmp
mov
int3
mov
push
daa
mov
js
mov
mov
mov
adc
arpl
jcxz
mov
adc
arpl
sub
jae
push
les
pushf
sub
rorl
inc
je
in
test
pop
repz
cmp
push
sbb
push
and
out
imul
in
int
loop
rorb
scas
sub
xchg
mov
lods
and
mov
lea
outsl
and
cmpsb
cltd
scas
sti
dec
sahf
loopne
loopne
test
out
and
out
ljmp
dec
fmul
cmp
or
scas
stos
adc
ss
ret
mov
push
lods
jge
adc
loope
pushf
je
add
cwtl
stos
cltd
sbb
iret
repz
xchg
stos
stc
jge
pop
test
repz
xor
sar
stc
xchg
push
cmp
mov
push
xor
sti
test
xor
rolb
shrl
pop
imul
mov
mov
shlb
xchg
gs
cltd
in
sbbl
mov
mov
pop
sub
or
clc
ja
mov
jcxz
sub
pop
test
add
loop
or
rep
movl
stos
add
sub
shll
mov
subb
repnz
mov
loopne
andl
and
or
imul
in
addr16
je
fcmovnb
leave
imull
ljmp
lret
adc
mov
aas
cli
pand
or
leave
loop
mov
in
or
inc
cmpl
in
xor
pop
pop
fnstsw
xor
int3
dec
sub
xchg
fisttpll
stc
inc
or
cmp
mov
sti
adc
aaa
dec
xchg
cs
test
jno
jle
mov
jg
and
mov
cmp
into
aas
mov
stos
mov
aad
rorl
std
or
loopne
and
es
call
ret
and
scas
xchg
mov
repnz
or
stos
jg
lahf
incb
pop
fldenv
sti
out
arpl
xor
mov
push
fcomps
into
xchg
fwait
nop
adc
enter
dec
cltd
xorps
cmpsb
leave
stos
push
xor
hlt
pushf
sub
cmpxchg
push
jne
inc
cmpsl
jns
mov
xor
iret
mov
cmp
repz
mov
call
cmpsb
pop
jmp
sbb
add
mov
shl
inc
mov
inc
push
add
lds
outsl
sbb
cmp
or
cwtl
push
orb
dec
add
sbb
xchg
lock
ja
stc
mul
jnp
ja
sub
pop
xchg
jg
xor
push
mov
mov
push
add
ret
xor
test
sbb
push
test
dec
push
inc
adc
test
test
icebp
dec
int3
jp
add
shrl
push
shrl
in
addr16
sub
xchg
push
fdivrp
dec
xlat
push
lock
xchg
dec
inc
lahf
adc
or
dec
mov
mov
inc
adc
pop
aaa
cltd
cmp
jl
push
mov
pop
jo
inc
pop
push
bound
pop
shl
pop
cli
xchg
mov
cmp
inc
or
bound
aaa
and
sbbb
movsl
sbbb
popa
and
clc
and
mov
cmc
je
sub
in
cltd
push
addl
cltd
sbbl
xchg
xor
daa
int3
push
ljmp
or
sti
xor
rcl
lret
inc
mov
adc
sub
in
cmc
xchg
pop
pusha
cld
outsl
popf
ficoms
ret
cmpsb
jnp
hlt
stos
das
dec
cli
inc
and
or
hlt
jle
pusha
or
pushf
movsb
clc
mov
outsb
fcomi
lret
fimull
mov
stc
add
mov
leave
jae
mov
cmp
pop
sub
inc
or
jl
ss
mov
push
jmp
mov
mov
hlt
int3
jbe
mov
ret
mov
dec
push
or
push
out
dec
jno
arpl
jge
dec
loopne
sub
iret
cmp
push
out
mov
mov
popf
cmp
mov
cs
gs
mov
and
inc
ret
scas
inc
push
mov
inc
les
imul
pop
daa
andb
out
push
dec
push
sbb
mov
xor
lahf
push
sub
das
in
mov
lock
dec
dec
cmc
cld
inc
pop
ja
clc
int
int3
in
or
fs
xlat
jg,pt
pusha
cs
mov
add
inc
pop
xor
and
ret
jecxz
mov
das
xchg
cmpsb
stos
and
mov
fcoms
test
xor
nop
lds
dec
ret
shl
cwtl
lcall
std
pop
sbb
xchg
iret
xchg
fadds
int3
dec
push
jp
jnp
push
push
xchg
insl
mov
loope
sub
jo
repz
insb
sarb
and
das
mov
sbb
sahf
clc
cmp
add
fcomps
cs
mov
fmull
imul
lret
and
or
rcr
or
dec
into
repz
loop
add
pop
and
sub
cmp
out
pop
int
test
sarl
push
mov
and
enter
lods
lahf
shlb
test
mov
push
xor
cmp
mov
int3
or
dec
sbb
in
jg
or
imul
lea
sub
pusha
cmp
jecxz
ss
or
jp
and
in
insl
or
mov
sahf
jmp
es
fmull
nop
inc
iret
rolb
cmp
das
dec
sarl
negl
cli
popa
ja
in
mov
xor
mov
repnz
lea
jp
mov
cmp
jmp
fwait
pop
pop
xchg
dec
sarb
cmp
insl
add
lock
dec
shr
dec
icebp
push
mov
xor
and
cli
mov
jmp
pop
fidivl
mov
sti
inc
xchg
cmpsl
popa
pop
pop
xchg
repnz
and
scas
mov
fwait
jno
call
and
add
pop
test
ret
int
mov
ljmp
testl
test
sbb
jno
mov
mov
and
jmp
insl
cli
mov
iret
stos
test
in
rcr
int
or
inc
popa
sub
xor
mov
jmp
add
xchg
pop
xchg
clc
bound
and
in
imul
lds
push
jbe
xchg
movsb
std
sbb
dec
mov
xchg
mov
xor
jnp,pt
xchg
lret
stc
mov
repnz
cltd
mov
mov
xchg
out
pop
lcall
cmp
xor
sbb
and
pop
sti
negl
loope
sub
cwtl
int
cmp
shl
pop
inc
or
mov
rcrl
jb
adc
sti
xlat
and
push
jnp
push
imulb
js
adc
dec
in
cs
cmp
in
les
pusha
cmpsb
mov
jbe
lods
push
push
xor
inc
mov
gs
xchg
loope
int
push
add
loop
outsb
and
push
sub
jo
in
test
in
inc
daa
insl
notb
xlat
mov
inc
dec
sti
xlat
test
int
pop
xorl
adc
jecxz
hlt
call
xchg
add
test
ret
out
pop
push
jnp
or
lahf
test
jge
js
int3
fiadds
pop
int
shr
mov
pushf
movsl
adc
icebp
aaa
inc
and
xchg
test
mov
daa
fimull
mov
fwait
jo
sub
pusha
ss
pushf
sub
xchg
cmp
dec
test
cmpb
mov
insl
test
dec
mov
push
adc
sbb
rorb
icebp
shll
orb
sbb
je
dec
rclb
push
lcall
shl
cmp
add
daa
fistpll
mov
bnd
cmp
popl
insl
xlat
inc
into
dec
dec
xchg
add
imul
test
xchg
lret
push
add
js
cmovnp
mov
xchg
icebp
and
xor
mov
and
inc
mov
inc
pushl
insl
in
pop
cli
stos
adc
mov
xor
xchg
rolb
push
mov
pop
clc
les
shrd
lods
pop
xor
xchg
adcb
xor
pop
xchg
out
adc
or
xchg
fstpt
fidivrs
ss
mov
add
xchg
pushf
pop
mov
out
jp
cwtl
jnp
fisttps
gs
ret
xchg
or
stos
lret
ficoms
xchg
xchg
nop
jo
cli
test
out
add
push
or
fwait
mov
shl
mov
pop
in
hlt
xlat
xor
into
movsl
push
lret
scas
jbe
or
stos
jmp
xchg
sbb
add
push
mov
xchg
sbb
hlt
inc
jmp
adc
add
sbb
mov
ficoms
mov
repnz
bound
jno
cld
pop
sbb
mov
gs
and
sbbl
fnstenv
push
bound
and
jns
dec
adc
or
iret
and
xlat
lret
dec
scas
or
xor
mov
sarb
push
lcall
ljmp
or
or
push
lods
iret
and
add
pushf
sbb
and
add
xor
mov
les
div
xor
out
or
mov
sbbl
mov
test
or
test
in
jbe
add
adc
jle
add
add
pop
adc
jbe
inc
inc
jle
fs
jp
int3
sbb
nop
pop
sarl
jae
push
loopne
adc
push
mov
enter
inc
inc
test
jb
cmpsl
mov
cmpsl
mov
call
mov
mov
mov
adc
movsb
xchg
mov
jp
loop,pt
mov
je
fcomps
in
stc
push
sbb
stos
xor
mov
dec
popa
pop
or
js
inc
ret
xchg
cmp
ss
xchg
xchg
inc
or
adc
lahf
push
xor
ja
lock
cmp
ja
push
leave
inc
pusha
movsl
cltd
sbb
inc
mov
pop
xchg
sub
fst
das
testb
sbb
adc
dec
add
jl
pop
or
enter
dec
gs
or
fistps
inc
inc
cmpsb
xor
cmp
push
in
push
dec
add
mov
mov
inc
inc
xchg
enter
mov
in
orb
and
scas
xor
loope
pushf
adc
call
cmpsb
fistpl
ret
adc
fldt
xchg
inc
or
pushf
pop
aaa
jb
fisttpl
fstl
add
bound
dec
mov
rclb
mov
inc
xchg
insl
dec
sbb
mov
repnz
sbb
iret
mov
pop
push
mov
mov
adc
in
inc
je
popa
sbb
cmp
push
addr16
xchg
mov
aam
enter
nop
pop
mov
pop
push
dec
cmp
inc
pushf
jle
mov
pop
popf
pop
sub
push
xchg
cmpsl
add
pushf
frstor
roll
test
insb
add
cmp
shlb
nop
jb
insb
xchg
or
jae
fmul
das
and
xchg
jl
xchg
xchg
lods
fdivl
pop
push
sbb
inc
fwait
cld
mov
lods
sbb
aam
mov
cmpsb
mov
divl
push
lods
add
insl
sub
push
repnz
popa
subl
inc
icebp
push
ret
sub
into
adc
mov
mov
fmuls
xchg
loop
inc
movaps
faddl
shl
arpl
xor
fsubs
push
adc
repz
aad
jle
fadds
iret
test
cmpsb
or
cmpxchg
push
sub
dec
ss
cli
jle
pop
fstpl
add
push
pop
sub
fcomps
xchg
idivb
data16
movsl
mov
sbb
addl
data16
sub
roll
test
push
push
sahf
or
rclb
loop
shlb
dec
pop
xor
mov
lahf
mov
mov
push
subb
pop
test
cmp
mov
dec
ret
jbe
inc
imul
aam
stos
pusha
adc
adc
inc
xor
sub
dec
nop
test
fistl
cld
frstpm(287
or
mov
dec
jae
pusha
mov
mov
in
sbb
mov
jge
mov
pop
or
or
mov
push
enter
lret
inc
inc
sbb
jle
sti
sti
pop
mov
sbb
int
push
mov
fcmovu
aam
ss
imul
loopne
push
adc
sub
add
push
cmp
pop
insb
adc
insb
mov
adc
inc
cwtl
mov
sub
pop
or
pop
lcall
jb
ss
xchg
lock
jne
mov
pop
in
sub
in
mov
cmp
sub
fistpl
cmp
inc
and
in
dec
into
push
jnp
sbb
cmp
fcmovb
es
hlt
cli
and
pop
lods
inc
arpl
mov
aam
mov
jge
out
mov
test
pop
pop
imul
int3
outsl
aad
inc
ror
cwtl
mov
xchg
shl
arpl
aas
pop
push
cmp
dec
add
cmp
mov
add
sub
scas
sbb
sbb
jle
rcrb
decl
xchg
imul
popf
jmp
adc
inc
je
clc
repnz
fcmove
add
shll
pop
pop
lock
or
dec
jno
push
pop
fadd
ret
or
or
jg
in
jne
or
xlat
push
cmp
xor
mov
imul
test
pop
add
lret
pop
push
pop
fisubrs
dec
ret
das
and
stc
test
mov
jae
cmp
jle
mov
jp
es
sub
cmpsl
repz
mov
inc
and
imul
int3
sub
sbb
sbb
cmp
imul
test
mov
lret
sbb
filds
cltd
dec
shrl
push
sbb
and
inc
push
mov
jo
add
mov
or
add
xchg
sarl
in
ss
daa
fstp
nop
out
sbb
scas
cmp
cmp
jecxz
pop
xchg
ror
in
jl
bound
lcall
xchg
fs
mov
xchg
rcl
jno
repz
and
or
fstl
in
jo
loopne
mov
stos
mov
cltd
xor
xchg
push
mov
cmp
push
test
iret
and
pop
mov
aaa
inc
cmp
fcompl
jl
mov
sbb
je
aaa
lahf
iret
imul
into
sbbl
pop
inc
or
jb
cwtl
xor
inc
dec
xor
mov
repnz
movb
testl
jno
xchg
int3
jle
sbb
pop
pop
aaa
scas
ljmp
mov
aas
sbb
fnsave
sti
lea
sbb
push
rcpps
out
mov
roll
jp
and
sub
imul
int3
jg
fucomi
mov
sub
movsb
aad
and
popl
cmp
daa
mov
dec
shlb
and
repz
mov
mov
arpl
mov
mov
dec
push
loopne
shlb
movsl
imull
xchg
mov
stos
clc
add
jle
xchg
in
inc
hlt
add
stc
fs
test
jb
push
adc
test
repnz
sub
cmpsb
or
jne
inc
sbb
adc
iret
jle
xor
or
imul
fildl
lods
cmp
push
mov
negl
and
out
fwait
sub
lea
mov
lcall
jge
sbb
es
sub
adc
fnstsw
insb
cmp
cmp
add
lret
jecxz
ret
imul
xchg
loope
jb
mov
push
push
mov
imul
mov
ljmp
outsl
mov
test
daa
jge
ljmp
jbe,pn
xchg
and
scas
dec
lods
pop
hlt
enter
pop
rep
inc
push
in
jge,pt
jg,pn
add
mov
mov
push
jns
pop
push
cmp
xor
and
push
mov
mov
sbb
aam
mov
push
mov
or
inc
mov
fstpt
add
gs
jp
push
adc
repz
mov
fiadds
fsubrl
or
mov
mov
inc
push
dec
inc
or
xchg
fcoms
adc
daa
pop
leave
fwait
shrb
nop
mov
rorl
mov
sbb
or
xlat
push
or
xor
xor
dec
mov
ljmp
jo
out
in
push
repz
mov
sbb
or
leave
in
hlt
mov
rcr
xor
leave
jmp
shlb
pop
jge
cmp
std
aam
cmp
movsl
sarb
das
sub
out
xor
jge
cmc
sbb
out
cltd
imul
ss
jbe
pop
mov
jl
daa
pop
mov
dec
mov
les
std
pop
or
movsb
imul
mov
or
cld
pop
pusha
mov
push
sub
jecxz
inc
adc
mov
mov
fwait
cld
outsb
add
sahf
push
adc
ds
ret
arpl
jb
gs
orb
test
xlat
int
imul
ret
mov
ret
xor
sbb
or
cs
sarb
inc
xor
js
inc
andb
xchg
cs
xchg
sahf
sbb
push
in
pusha
inc
popf
and
ljmp
fsubrp
sbbb
mov
cmp
mov
ljmp
fwait
push
add
out
loopne
imul
imul
and
fs
sbb
sub
repz
mov
arpl
mov
push
mov
jno
idivb
aad
sub
jl
mov
aaa
dec
xchg
stc
xor
stos
mov
int
cmp
jl
sub
movb
push
xchg
js
inc
cmp
mov
xchg
cmp
mov
scas
mov
aam
mov
pop
sbb
jae
xchg
cmp
push
dec
call
fsub
ds
dec
rorl
jp
decl
add
daa
push
in
in
gs
xor
in
rorl
push
bound
mov
les
hlt
rcrl
xor
sbb
add
and
hlt
mov
add
or
js
mov
lret
stos
stos
cld
push
push
fcmovu
outsl
mov
mov
imul
rcll
push
arpl
ret
mov
in
clc
jecxz
pop
out
or
xor
call
xchg
jmp
icebp
mov
cs
hlt
add
fcoms
mov
das
shlb
lcall
popa
mov
icebp
shrb
stos
test
add
sbb
xchg
lahf
clc
xor
mov
xchg
mov
cmp
into
mov
add
fdivp
cmc
jge
add
jnp
lock
pop
fsubrl
jecxz
pushf
movsb
dec
jb
xor
mov
daa
pop
dec
lods
fnsave
jns
mov
inc
cmp
xlat
pop
pop
dec
cli
mov
rorl
push
subl
cs
pop
add
mov
and
mov
stos
lods
jecxz
mov
arpl
repnz
jo
rcl
rcrb
mov
stc
pop
adc
data16
mov
enter
lods
mov
cmp
cmpsl
enter
or
jae
scas
lret
in
aas
subb
push
cmp
dec
in
imul
mov
jg
in
les
push
cwtl
xor
lods
test
jae
int3
lcall
add
and
je
les
inc
xchg
scas
adc
ficoms
nop
inc
test
outsb
cmp
add
pop
mov
test
out
fwait
lods
aad
call
lcall
fmuls
sub
push
fimuls
icebp
push
icebp
div
fidivl
cwtl
out
clc
dec
inc
aaa
push
imul
cli
mov
push
addr16
test
sti
fsubrs
sbb
mov
fbld
push
orb
adc
xchg
sahf
leave
mov
repnz
in
sub
pop
jp
sbb
std
fstpl
aaa
pop
in
insl
lret
and
xchg
inc
jecxz
outsl
jae
in
bound
push
in
fsubrl
imul
negl
imul
test
inc
add
adc
leave
sti
cwtl
jge
push
data16
sbb
aaa
fprem1
sahf
shr
cmpsb
jge
xor
lods
sbb
and
jns
fcmovnu
jmp
jne
mov
out
in
sub
cmp
ret
inc
stc
fwait
mov
adc
int3
xchg
mov
jno
xor
cld
roll
fiadds
or
aas
loop
das
movsb
pop
adc
jbe
sarb
lret
aaa
out
mov
mov
out
inc
jno
mov
sbb
sub
and
mov
push
push
int
outsl
or
jnp
inc
xor
mov
mov
push
aam
ret
jmp
adc
iret
xchg
jl
sub
scas
mov
mov
xor
and
sub
add
or
sar
into
adc
pushl
bound
xchg
rcrb
shrl
repnz
jmp
mov
jge
adc
dec
fcmove
jle
stc
stos
mull
aad
inc
push
repz
fwait
jp
pop
sbb
jl
stos
sbb
pop
stos
lcall
out
aaa
lcall
jge
adcl
jecxz
sub
shll
stc
lds
es
adc
mov
mov
neg
lret
aad
jns
sub
pop
lods
jns
pushw
xchg
mov
xorb
push
or
xor
mov
daa
inc
orb
pop
jp
inc
stos
sbb
test
push
je
push
icebp
mov
jae
cmp
sub
cwtl
lds
adc
pop
push
aaa
in
shll
add
adc
call
jle
fisttpll
repnz
mov
pop
push
xchg
cmp
scas
and
out
clc
loopne
push
push
pushl
sti
clc
sub
cmp
push
fsts
cltd
add
cli
adc
xor
push
mov
cmp
int3
enter
sub
movsl
cwtl
jl
cmp
adc
test
xchg
jl
jge
lea
pop
and
or
test
dec
call
shrb
dec
jmp
and
jne
and
sbb
dec
mov
pop
jns
jg
dec
lods
ljmp
sti
and
stos
jmp
pop
or
into
aas
je
icebp
das
js
add
shrl
inc
sub
fwait
les
cmc
loopne
cmp
fisubrs
mov
pushf
ret
ss
repz
cmpl
shl
xorl
scas
dec
ret
jnp,pt
test
cmp
mov
mov
push
mov
jp
popa
or
and
imul
dec
sub
dec
jno
movsb
cmp
mov
xchg
inc
lret
inc
cmp
xor
stc
adc
pop
gs
cmpsl
sbb
push
add
mov
pop
andb
call
cli
test
inc
push
mov
sub
outsb
xlat
pop
inc
aam
jnp
and
aam
mov
adc
sahf
test
test
dec
push
or
stos
mov
push
jb
adc
shlb
imul
xor
or
ds
adc
fcmovu
and
adc
je
xlat
xchg
cwtl
push
push
data16
cmp
idivl
inc
ja
lahf
mov
add
pop
and
scas
aam
sbb
je
mov
adc
es
mov
fstl
push
dec
out
movb
sbb
ret
and
test
and
iret
mov
pushf
nop
xchg
dec
inc
lods
add
cmp
sti
add
and
ret
rclb
xchg
push
arpl
outsb
icebp
dec
jb
mov
lds
or
push
pop
mov
fidivrs
adc
sub
push
push
dec
cltd
lret
call
push
or
addr16
adc
mov
ret
mov
or
jo
lds
arpl
xchg
cmp
loop
or
pop
shll
push
sti
jno
test
cmp
cli
push
mov
loope
or
cltd
idivl
or
lcall
or
pop
xchg
or
stc
push
adc
xchg
adc
add
fucomp
push
popa
imul
sub
cmp
or
pop
popl
sub
jnp
xchg
nop
pushf
hlt
stc
xchg
mov
jmp
push
xor
adc
xor
addr16
pop
add
dec
or
dec
fmulp
mov
clc
push
das
push
ja
push
mov
outsl
ljmp
cmp
jge
ss
mov
shll
outsb
imul
cmpsl
fstpt
xor
push
sbb
repnz
adc
fsubrs
dec
clc
dec
int3
cmpl
icebp
and
sub
push
mov
cwtl
test
fidivrl
fwait
jmp
setge
ljmp
in
pop
lret
dec
js
dec
xor
aam
xchg
dec
jns
es
dec
pop
daa
mov
pushf
loopne
sub
loopne
fstpt
pop
je
xchg
jge
repnz
ss
in
sbb
into
mov
and
sub
fisubrl
mov
shlb
and
push
sub
shr
pop
imul
lret
jecxz
aam
mov
xor
fcoms
sub
dec
adc
into
shll
pop
ds
jno
or
pop
sbb
jo
gs
test
mov
mov
movsl
pop
mov
push
push
pop
cld
iret
jle
mov
and
inc
push
push
sbbl
xchg
scas
adc
cwtl
push
int
mov
adc
jb
fiaddl
orl
sbb
popa
movsb
jmp
xor
pushf
mov
push
shl
adc
clc
mov
xor
es
add
inc
stos
flds
enter
pushf
cmp
lock
jns
fstpl
mov
cli
lret
sub
neg
mov
push
jnp
cwtl
jae
ljmp
adc
push
in
lret
jle
in
jmp
xor
pop
push
cmp
imul
jae
sub
or
popf
test
jnp
xchg
jl
leave
xor
dec
js
lahf
push
or
add
stos
pop
movsl
mov
leave
and
in
sbb
pop
aad
jmp
adc
add
ret
int3
cmp
fs
adc
mov
out
pusha
adc
jmp
sti
rorb
cmp
mov
andl
jbe
rcrb
xchg
shrl
jae
ret
cs
cmp
jp
sub
aaa
add
ja
pop
sbb
repz
sbb
cld
outsb
cmp
cmpsl
out
loop
sub
push
sarl
setg
rcll
xor
xor
sub
jno
decl
cmpsl
jbe
scas
lds
sbb
movsb
cltd
jns
fadd
out
sbb
sarl
pusha
lret
push
imul
or
push
and
adc
pop
dec
cmp
clc
loop
pop
movsb
test
repz
rorl
or
stc
push
cli
xchg
and
sbb
xor
xchg
sbb
xor
fs
mov
les
mov
sbbb
push
mov
mov
pop
xor
test
shll
sbb
dec
pop
mov
mov
outsl
pop
scas
cmp
adc
dec
jmp
sbb
lds
lcall
out
mov
jmp
icebp
adc
inc
sub
cmp
adc
data16
cs
fyl2x
jmp
push
jo
lods
popf
and
add
dec
xchg
pop
xor
jnp
inc
adc
popf
and
dec
out
lcall
adc
aaa
loope
push
into
ficoms
adc
mov
fisttps
jle
lret
dec
jns
push
sbb
mov
xlat
dec
cmc
mov
pop
shll
mov
mov
add
push
movsb
xchg
jns
int
sbb
divb
fdivr
test
int3
data16
push
cmp
pop
push
lea
mov
mov
repnz
or
xchg
dec
inc
xor
pop
xchg
sbb
xlat
shll
jecxz
dec
xor
es
inc
mov
cwtl
sub
fmull
cmpsl
icebp
push
ds
pop
sub
push
mov
mov
jb
dec
jne
mov
sbb
addl
dec
lahf
cmpsl
mov
rcll
call
mov
sbb
dec
test
jno
jb
sahf
lcall
nop
pushf
push
add
mov
mov
sub
outsl
cmp
sub
lods
jl
xchg
sti
lea
lods
lds
movsb
in
mov
clc
cmp
push
pop
data16
add
sahf
cmp
lret
or
daa
xchg
add
mov
push
adc
dec
stc
dec
xchg
xor
test
in
fsubs
scas
popa
mov
sahf
or
movsb
das
movsl
out
orl
cmp
ret
jno
push
imul
in
jp
pop
push
push
xchg
adc
xor
push
cmp
add
dec
scas
pushf
cld
repnz
fldt
sbb
iret
in
and
insb
mov
in
or
aaa
cli
std
inc
or
jp
dec
and
pusha
test
cli
inc
or
lret
sti
sahf
js
cli
dec
clc
in
sub
rolb
and
dec
mov
xchg
jge
dec
in
mov
mov
xor
stos
cmpsl
push
cs
sbb
imul
scas
push
stos
lret
pop
push
aad
test
dec
leave
cmp
imul
addb
xor
in
xchg
arpl
xchg
rol
jle
out
cltd
fs
jl
mov
jnp
and
xor
jno
or
cmp
scas
xchg
push
dec
es
xor
jbe
dec
pop
sbb
data16
loopne
pop
and
or
pop
add
pop
jb
push
dec
mov
push
loopne
cmpsb
cmc
push
add
cs
mov
ds
sbb
cmpsl
and
xchg
test
outsl
xchg
sbb
dec
test
movsb
call
jmp
mov
stos
test
jae
mov
imulb
mov
lcall
push
push
shll
imul
cmp
push
mov
lahf
jecxz
fsubr
jne
adc
gs
lock
arpl
mov
cmc
mov
xchg
aam
test
outsb
sbb
xor
cwtl
jo
and
fistps
ljmp
data16
aad
inc
popa
inc
decb
and
inc
outsl
std
orl
cmpsb
ret
mov
fisubl
push
mov
frstpm(287
subb
push
nopl
xchg
iret
push
xor
lret
roll
or
jb
int3
addr16
xchg
inc
fsubrl
mov
jge
sbb
adc
popf
inc
scas
xor
std
sub
pop
insl
push
xor
sub
lods
inc
lods
sub
jbe
divb
int3
mov
dec
mov
and
mov
out
hlt
xor
mov
fucomi
scas
cmp
hlt
push
cmp
scas
sbb
mov
jb
lea
stos
push
jbe
jo
fsubs
jmp
adc
lcall
ficompl
add
xchg
imul
or
aam
pop
cs
je
jl
pop
pop
test
cmp
lahf
sbb
push
mov
mov
insl
ds
aam
ja
hlt
movsb
mov
lock
adc
inc
sub
adc
xor
adc
repnz
mov
pop
mov
cmpl
icebp
inc
sbb
mov
test
fsub
in
insb
dec
jnp
cli
test
lahf
adc
fsubrs
insl
pop
or
int3
stos
adcb
push
pop
dec
adc
lods
push
scas
xor
inc
fwait
fadds
ret
or
inc
pop
inc
and
pop
pop
rcll
and
jns
sahf
push
out
push
std
jne
addb
mov
cmp
ret
test
xchg
arpl
ljmp
or
mov
xchg
je
mov
jl
jnp
sbb
sub
aaa
out
cmp
mov
in
jae
imul
in
fs
scas
mov
sub
notl
pop
mov
test
out
mov
or
into
insb
loopne
jb
jg
or
jne
pop
xor
pop
xchg
shll
xchg
pop
das
cli
outsb
mov
sbb
ds
push
loope
pop
xchg
dec
in
pop
and
dec
fwait
popa
sub
mov
cli
jl
push
mov
jns
cmp
in
sbb
jecxz
imul
jecxz
icebp
dec
mov
adc
push
jnp
xchg
movsl
sub
icebp
rolb
inc
xchg
cmp
or
ljmp
xchg
jns
pushf
pop
std
jecxz
aaa
out
jbe
test
cld
loop
dec
mov
dec
insb
dec
mov
test
ss
in
test
push
inc
in
jb
imul
jl
lds
sbb
mov
rcrb
sub
sub
loopne
sarl
adc
cmp
lds
repz
or
leave
mov
test
ret
mov
push
xchg
jne
mov
int3
cmc
cwtl
lods
jmp
pop
mov
and
loope
daa
rorl
in
xor
int3
fistps
repnz
add
cwtl
pop
movsl
mov
dec
test
dec
aaa
cli
cmp
fiadds
mov
sahf
ret
xor
negb
push
iret
dec
mov
loope
ret
sbb
popa
mov
insb
cmpsb
scas
inc
jns
and
adc
nop
pop
pop
aaa
aaa
jmp
dec
fs
jbe
cli
push
pop
jne
pop
inc
sbb
es
fwait
jmp
iret
mov
cli
cli
vdivps
cld
ja
jl
add
scas
cmpsb
sahf
int3
jge
or
hlt
add
add
cmp
fldt
jno
cltd
in
cld
in
rcr
mov
push
mov
ficoms
jecxz
mov
out
shlb
jnp
pop
shrb
scas
mov
jbe
pop
pop
aaa
mov
jecxz
out
jnp
sbb
xor
pop
movsl
testb
std
into
sbb
mov
dec
push
and
sbb
mov
mov
mov
stc
jbe
out
fcomps
insl
sub
jl
lret
cmp
aam
jmp
cwtl
sbb
mov
jp
test
mov
cmc
inc
push
or
es
mov
dec
repz
dec
push
and
push
mov
jecxz
jg
cli
hlt
mov
das
dec
ja
std
lods
insl
sbb
jno
ss
jno
stos
sbb
push
jle
sbb
pop
les
xchg
pop
jnp
repnz
sahf
add
jns
imul
push
imul
stc
xchg
call
sbb
xlat
sahf
cs
mov
dec
and
test
add
outsb
mov
stos
push
iret
jmp
mov
lahf
loope
nop
mov
jle
xlat
out
sbb
mov
jb
dec
jmp
mov
mov
loopne
adc
clc
test
jb
or
test
adc
roll
cmp
push
push
or
sarb
repz
das
mov
xor
jb
ret
daa
mov
out
sar
leave
and
cs
and
mov
jecxz
and
out
adc
sbb
cmc
addl
dec
inc
outsl
jmp
add
test
mov
mov
cmp
lret
push
add
xchg
adc
add
xor
push
das
psubsw
pushf
mov
pop
mov
push
enter
push
pop
cmp
addl
inc
inc
adc
mov
fsubrl
xor
mov
mov
dec
cli
jns
popa
enter
mov
jp
mov
jg
jle
or
stc
and
dec
fiadds
out
leave
inc
push
inc
scas
gs
rcr
lcall
lret
mov
and
fs
pop
cli
dec
cmp
jnp
stc
mov
movsb
popa
test
pusha
ret
scas
cwtl
jne
icebp
push
fdivs
ljmp
fxch
aam
nop
jne
jns
xlat
sbb
rcrl
adc
cmp
sub
or
nop
mov
lods
loope
fsub
inc
sub
mov
sbb
jno
jmp
jae
jp
sbb
jae
fs
mov
mov
xchg
or
push
data16
pushf
shl
pop
jg
shll
cs
cltd
popf
push
jb
shl
or
ja
jl
push
ljmp
sbb
popf
sti
mov
jmp
cmp
rcll
popf
in
int3
xor
loope
mov
cmp
or
or
ss
cld
mov
inc
ljmp
add
mov
fildll
lock
je
push
in
imul
and
fldl
jns
add
ror
mov
out
mov
jp
mov
pop
das
inc
pop
push
cli
xchg
push
ret
and
sub
dec
testl
xchg
fsubs
mov
into
push
test
jl
pop
in
jmp
add
sbb
dec
push
and
lahf
mov
adc
mov
ret
mov
sub
push
clc
mov
add
movsb
sahf
mov
rolb
jmp
roll
mov
iret
cmpsl
add
push
add
stos
dec
popf
sbb
pop
push
leave
mov
mov
and
outsl
pop
sub
rcl
lret
lahf
into
cmp
fnstsw
dec
out
idivl
jecxz
jne
mov
mov
sub
popa
subb
inc
xchg
daa
pop
pop
test
xchg
jecxz
les
mov
rolb
push
jbe
add
pusha
push
push
jmp
filds
pop
lock
inc
xchg
jbe
mov
aam
lock
and
pop
lods
xchg
cmp
outsl
sbb
dec
ja
mov
daa
icebp
clc
insb
mov
inc
push
and
in
sbb
incl
add
stc
push
xchg
cmp
insl
lock
data16
xchg
into
cmp
mov
ss
push
adc
int3
cmp
shl
sub
subb
push
sbb
or
sub
or
cwtl
push
pop
lock
push
clc
sbb
or
mov
jp
push
mov
pop
lea
sub
scas
add
repnz
push
sub
xchg
test
add
mov
outsl
push
adc
dec
mov
pop
jecxz
pop
xchg
push
aam
ret
mov
push
outsl
daa
ljmp
sbb
mov
xadd
add
sub
test
nop
lods
ja
sbb
lahf
icebp
jno
xor
fstpl
pushf
push
sub
or
enter
or
jb
scas
adc
pop
popf
or
imul
outsb
adc
inc
lcall
fdivrl
inc
fwait
pop
add
repz
and
jecxz
mov
sbb
neg
jg
inc
nop
sub
leave
fcomip
dec
daa
out
or
jno
pop
dec
xchg
pop
lds
ret
sarl
sub
shl
mov
cmp
adc
xor
sub
or
sbb
in
inc
or
jecxz
and
add
sbb
aas
lret
ret
bound
cmpsb
xor
mov
stc
aas
push
lods
out
adc
clc
fdivs
or
xor
inc
enter
cmp
xor
dec
inc
sti
addl
xor
into
out
es
into
add
add
fistps
inc
sbb
imul
add
dec
sti
pop
insl
sbb
jne
imul
loope
lret
test
sbb
adc
add
sbb
dec
adc
or
dec
cli
ss
sarb
mov
push
divl
test
jg
lahf
subl
fidivl
imul
and
rcrl
mov
lcall
pop
inc
repz
mov
or
subl
adc
ret
sbb
inc
aad
out
mov
add
xchg
cltd
xor
sbb
adcb
xchg
xor
cmp
sub
cmc
push
push
mov
lods
hlt
stos
push
repnz
pop
hlt
add
pop
inc
or
out
sti
pop
movsb
cmpsl
xor
test
imul
sub
jo
imul
mov
dec
pop
mov
bound
cmpsl
imul
jmp
in
push
in
mov
jl
cmc
push
xlat
mov
fcompp
mov
repnz
pushf
pop
inc
std
pushf
sub
sbb
es
lcall
mov
stos
jns
dec
fsubs
movsb
cmp
inc
cmp
stos
jg
push
mov
imul
rcrl
ljmp
inc
ds
repz
mov
mov
mov
pop
fwait
mov
sbb
popf
mov
add
je
mov
jmp
mov
mov
lcall
jp
ljmp
cs
pop
push
push
cmp
dec
push
arpl
adc
pop
aad
std
jmp
loope
xchg
nop
and
testl
lea
inc
scas
cmpsl
jp
and
sub
cmp
add
jl
subl
jno
negl
in
and
cs
out
push
les
push
lods
mov
dec
int
int
aas
fistpll
outsb
inc
dec
and
outsl
sub
add
push
ljmp
inc
lcall
mov
outsb
ja,pt
mov
insl
mov
insb
inc
jp
imulb
mov
cmp
or
pop
aad
movzbl
jmp
popf
fdivr
push
loopne
inc
lods
cmp
mov
mov
push
flds
mov
mov
jno
lahf
sub
loope
loop
mov
fwait
jns
aas
sub
mov
cmp
bound
mov
or
xor
outsl
loope
dec
imul
filds
out
es
les
or
pop
dec
cltd
dec
leave
or
pop
call
sub
in
rcrb
sbb
jmp
repz
mov
fcompl
sbb
dec
jns
je
dec
pushf
dec
lods
pop
fmuls
cmpsb
das
mov
xchg
mov
cmp
xor
xchg
dec
cs
mov
scas
cs
out
mov
mov
repz
sub
jno
sti
add
sub
sub
test
ss
or
inc
and
shrb
sbb
dec
add
imul
test
stc
dec
mov
or
jp
xor
cwtl
test
cs
cld
lahf
sub
mov
out
aad
hlt
imul
pop
pop
xor
xor
dec
jnp
inc
or
pop
jle
pop
xor
inc
jle
dec
outsl
push
mov
jl
inc
xchg
mov
mov
cmp
repz
std
or
inc
arpl
mov
popf
and
rorb
adc
jne
outsl
and
jns
mov
or
mov
adc
mov
stos
int
repz
pop
dec
into
xor
popa
xor
cld
xorb
ja
mov
inc
in
push
sbb
imul
cmp
jae
cmpsl
out
insb
mov
mov
es
add
testl
and
dec
xor
test
adc
aaa
stos
mov
cwtl
pop
mov
mov
arpl
xorb
xlat
jbe
pmullw
fdiv
sub
pusha
dec
and
jmp
pop
ljmp
lods
fisubl
pop
jg
adc
lods
arpl
ret
sub
mov
inc
inc
arpl
cmpsl
jecxz
xchg
cmp
mull
lea
repnz
dec
jbe
fists
cmc
ja
test
add
lods
add
jbe
addb
mov
ret
cmp
cwtl
pop
into
adc
test
testb
fnstsw
shrl
pop
mov
in
push
lods
enter
sub
les
mov
jp
stos
daa
shll
jp
cmpb
pusha
insb
loope
cli
cmp
lcall
std
pop
lock
and
sti
daa
lahf
imul
or
mov
addr16
in
fisubrl
stc
sub
xlat
or
sub
call
jl
sti
sub
mov
xchg
pop
pop
sti
scas
int3
or
movsl
mov
dec
dec
jns
cmc
cwtl
pop
jmp
in
mov
loopne
jge
xor
or
cmp
leave
icebp
dec
popa
sahf
das
ret
sti
cltd
out
and
sarb
pop
shll
sbb
inc
lock
inc
sbb
lock
jo
xlat
inc
jp
cmp
mov
enter
lods
adc
iret
cmp
fstp
pop
push
sti
repz
xchg
cmp
in
test
and
aam
mov
pop
sub
adc
push
sbb
jmp
icebp
add
fiaddl
pop
jge
xchg
dec
push
xor
fistpl
arpl
cld
icebp
sbb
push
inc
movsb
imul
inc
push
cmpsb
lea
sbb
jno
cli
inc
dec
mov
clc
dec
imul
mov
cli
ja
stos
insb
pop
repz
ds
cmpsl
es
leave
rclb
ret
pop
test
push
fwait
or
shr
shl
imull
test
xor
or
xchg
gs
rcrb
lea
outsb
ja
xor
lods
dec
dec
repz
cltd
pop
xchg
inc
xchg
xlat
dec
aam
out
inc
cmc
add
loope
inc
fwait
and
rorl
aad
dec
push
scas
std
lea
fwait
xchg
sub
hlt
insb
lds
and
push
stc
jg
or
push
outsb
ja
aam
mov
in
imul
stos
inc
push
lahf
sbb
popa
roll
mov
sub
js
pop
iret
mov
dec
jge
push
jne
faddl
pop
xchg
imul
rclb
dec
sbb
dec
mov
mov
imul
cmp
pop
cmc
mov
pop
jge
cmp
sbb
sbb
fcoms
pop
jae
cs
xor
xor
jl
loope
dec
das
inc
scas
push
jl
mov
mov
adc
push
xchg
mov
cmpsl
ds
mov
sub
mov
xlat
sarl
sbb
ret
dec
out
bound
lahf
out
repnz
sti
jne
imul
fisttpl
popa
and
cmp
cmp
sub
data16
movsl
ds
test
xlat
sbb
dec
in
dec
lret
aam
roll
ror
aad
jns
out
in
mov
stc
and
mov
adc
adc
rcll
aas
call
or
outsb
push
add
es
mov
pop
push
ljmp
add
xchg
sarb
in
jecxz
jle
repnz
adc
test
mov
add
movb
fucomip
sbb
sbbl
lret
adc
cmp
push
nop
insl
and
lds
icebp
std
jg
repnz
test
jmp
cmc
pop
rep
dec
mov
dec
scas
xor
or
jmp
fildl
dec
cmp
lret
mov
loop
shrb
push
jmp
enter
cmp
jecxz
push
pop
mov
movsl
ds
imul
cmpsl
divb
imul
jnp
nop
movsl
es
mov
fsubrp
adc
sub
out
movsl
xchg
orl
jb
lods
shlb
xchg
push
mov
push
pop
cli
inc
iret
sarb
cmp
push
xor
sbbb
outsl
addr16
dec
or
xchg
bound
xchg
repz
jmp
or
daa
shlb
mov
cs
js
leave
mov
testl
add
shl
pop
iret
rorl
jno
sub
lods
out
into
fbld
jle
out
or
inc
out
mov
aad
add
ljmp
sub
scas
adc
in
out
sti
mov
rolb
pop
popf
mov
xor
je
pusha
rcl
mov
xchg
fstpt
test
mov
mov
clc
push
pop
loopne
xlat
lret
out
loope
mov
test
das
hlt
out
xchg
out
xchg
hlt
jno
jnp
bnd
into
pop
ss
in
push
cmc
testb
roll
filds
lret
sub
inc
mov
or
in
fdivl
cmpsb
sub
xchg
push
cmp
and
std
mov
cmp
xchg
cmp
test
xchg
icebp
xchg
xor
ljmp
adc
mov
imul
jne
mov
xchg
in
dec
cmp
jnp
imul
mov
mov
shll
shl
insl
mov
fisubrs
adc
jmp
mov
mov
popf
repnz
pushf
cmpl
jmp
arpl
inc
aad
out
enter
roll
insl
dec
jbe
mov
dec
pop
shr
jo
rclb
or
pop
dec
fcmovnb
mov
xchg
push
repz
inc
jmp
sbb
lods
mov
pop
mov
sbb
test
fwait
pop
std
aad
subb
xlat
mov
ret
out
add
dec
inc
lock
sbb
push
push
lock
fwait
mov
shll
roll
cld
lcall
loop
lret
movsb
icebp
sbb
pop
les
pop
mov
out
xchg
rclb
pop
sub
cmp
dec
std
clc
add
lcall
pop
insb
add
sub
push
movsb
mov
inc
and
pushf
cmp
outsl
popa
push
push
daa
push
sub
test
out
push
scas
fidivs
shll
shl
push
jns
xor
sbb
loop
test
stc
incb
cmp
data16
xchg
and
adc
or
ljmp
sbb
mov
jle
or
sar
dec
imul
pusha
sarb
inc
out
data16
bswap
fldt
push
add
pop
ret
sbb
out
inc
call
sahf
xchg
xor
cmpl
outsl
fcmovu
cmp
dec
adcl
add
mov
xchg
jbe
dec
mov
xchg
jmp
out
cmpsb
sub
push
sbb
push
out
push
test
out
repnz
pushf
movsl
fstpl
loope
dec
loopne
push
push
inc
adc
int
lods
divl
pop
hlt
rolb
incl
inc
stc
inc
lds
daa
popa
fsubrp
loopne
loopne
stos
and
jnp
push
out
jle
and
loope
lea
jg
xlat
jbe
pop
test
mov
and
aam
xchg
xchg
push
test
cmp
stos
jne
adc
push
out
cmpsb
mov
repnz
push
or
sub
mov
or
aas
mov
push
or
insl
and
jno
test
add
ds
lods
mov
inc
cmp
aad
lea
add
dec
rep
cmpsb
sub
xchg
outsl
sub
pop
jp
inc
sub
mov
sbb
imul
aaa
inc
cmp
aaa
mov
sbb
mov
repnz
mulb
dec
push
push
ljmp
aad
aas
adc
mov
fstl
ret
sbbb
xchg
dec
mov
adc
or
xchg
das
dec
out
and
mov
sub
xor
xchg
inc
sub
push
jg
mov
sub
inc
cmp
mov
mov
std
push
and
sbb
rcll
movsl
hlt
lods
mov
addr16
or
or
cli
lret
jns
loope
jns
dec
sbb
sahf
adc
sarb
fisubs
das
outsb
add
mov
fisttpl
imul
inc
lock
and
adc
in
and
sub
aad
mov
loope
out
rcr
insb
nop
pop
hlt
arpl
dec
imul
add
xchg
pop
and
in
add
mov
and
out
adc
mov
and
mov
inc
test
sbb
lock
aas
in
mov
stos
cmpl
lret
push
jle
outsl
mov
sub
rcr
repz
push
stc
dec
out
cld
rcll
jbe
sbb
repnz
loopne
mov
imul
rcrb
mov
popa
jle
inc
xchg
push
push
pop
mov
pop
test
les
fcmovb
imul
es
leave
inc
imulb
jle
or
insl
rcll
xchg
xchg
add
push
xor
jp
loope
mov
mov
xchg
cmpsb
xchg
out
mov
out
lret
dec
data16
or
fsubrp
cmpsb
mov
jb
jp
es
ja
adc
xchg
inc
fsubrl
jb
adc
dec
int3
dec
pushf
jae
dec
mov
in
dec
mov
pop
lea
cmc
in
into
repz
lea
cwtl
xchg
dec
ja
out
lods
repz
loopne
cmp
mov
addb
xchg
int3
shrb
fistps
add
mov
loop
enter
cltd
mov
scas
jns
mov
arpl
es
imul
cli
mov
dec
addl
adc
or
jne
push
insb
lea
in
es
or
loope
xor
pop
xchg
add
adc
xor
bound
jp
in
test
adc
jp
mov
scas
add
movsb
xchg
xor
push
fs
lcall
xchg
push
fidivrs
xchg
mov
mov
mov
pop
mov
sbb
xchg
adc
loope
repz
filds
in
dec
jo
imul
pop
mov
mov
hlt
xchg
jmp
jle
and
inc
pop
popa
jbe
push
xchg
mov
sbb
movsb
mov
enter
imulb
push
roll
repnz
shr
enter
cld
stos
pusha
cli
inc
mov
mov
int3
push
adc
adcb
bound
or
xchg
scas
jmp
pop
dec
fsubrs
mov
lods
rcl
mov
into
dec
adc
cmp
dec
and
shrb
cmp
notl
cmpsb
fdivl
or
mov
or
ljmp
xor
pop
sbb
mov
adc
sbb
lods
scas
fdivl
mov
dec
mov
inc
mov
jle
scas
add
in
push
insl
and
scas
repz
adc
mov
hlt
xor
cmc
xchg
pop
scas
mov
incb
push
jno
das
icebp
cmovne
fincstp
shrb
clc
in
pop
pop
pop
inc
loop
mov
mov
sti
scas
scas
dec
adc
pop
inc
add
sbb
mov
pop
and
sarl
add
imul
jnp
sub
ljmp
push
mov
insl
cmpsl
adc
enter
lcall
xor
outsl
fisubs
jnp
cmp
stc
mov
shr
mov
jp
stos
sbb
ja
jge
ret
in
cs
cld
scas
aam
inc
sbb
mov
bound
xchg
loopne
popf
mov
cmpsb
outsl
push
cs
shr
xlat
mov
inc
dec
dec
aad
cmp
sti
inc
jge
and
or
shlb
pop
push
jae
xchg
inc
mov
xchg
xchg
cmpsl
and
subb
sbb
jae
jmp
sub
pop
pop
jecxz
pop
jns
push
mov
cmpsl
enter
dec
popa
sbbl
mov
or
enter
mov
mov
and
mov
loop
lret
xor
dec
repnz
scas
cmc
dec
sbbb
lods
sub
jno
rol
sahf
int
inc
or
add
xchg
mov
loopne
dec
cmp
mov
jb
inc
dec
or
fsubrs
add
or
and
add
cmp
fs
inc
notl
test
lock
int
imul
pop
mov
sbb
jo
ljmp
arpl
outsl
pop
or
popf
out
test
insb
idivl
jns
mov
mov
cli
sub
push
mov
pushf
sar
popa
adc
iret
sbb
jae
addr16
adc
or
js
movsb
cmpsl
inc
inc
movb
leave
rcrb
push
insl
loopne
movsl
scas
mov
mov
cmp
inc
lods
pop
mov
xor
sbb
je
sbb
mov
mov
cld
inc
jbe
aam
addr16
xor
jl
add
xchg
sbb
inc
das
mov
dec
xor
jecxz
mov
stos
mov
setb
fs
jno
adc
lahf
push
pop
out
shll
or
dec
sub
add
hlt
cld
notl
and
scas
mov
lock
dec
cmp
rcrl
pushf
shll
mov
sub
mov
xor
addb
dec
or
push
inc
pushf
loope
cltd
repz
dec
jle
adc
fldcw
jno
mov
popf
imul
pushf
das
icebp
sbb
in
ja
mov
push
cli
aam
pop
imul
addr16
clc
rcll
push
push
lods
jns
movsb
call
in
mov
mov
xor
cmc
pop
cmpsb
pop
fs
jmp
add
lea
pop
outsl
sti
pusha
sarl
mov
loop
push
inc
roll
std
ret
dec
fistps
mov
daa
inc
es
out
sub
jae
inc
xchg
stos
in
sub
adc
xchg
int3
lret
cltd
adc
inc
sbb
xchg
pop
shlb
leave
lds
in
fisubrs
push
mov
pushf
jecxz
mov
cmp
addl
xchg
and
sarb
inc
gs
iret
div
add
out
fcompl
cltd
test
stos
xchg
dec
sbb
js
ds
into
rolb
xchg
or
adc
pusha
cli
push
insl
push
inc
movsl
inc
cmp
cmpsl
test
sub
enter
xchg
jns
or
pop
and
jmp
cmpsb
into
mov
adc
push
mov
mov
cmpb
test
daa
mov
sbb
pop
rorl
dec
xor
add
loopne
jl
icebp
sahf
dec
push
pop
inc
lds
sahf
cwtl
out
xchg
cs
jg
jle
lods
sarb
mov
push
ror
sub
or
add
push
jge
xchg
sub
pop
int3
push
repnz
lahf
inc
inc
push
sti
leave
outsb
mov
xchg
ss
ffree
pusha
inc
or
idivb
insl
lret
mov
cld
jae
push
rorb
mov
cli
or
sbb
sub
push
mov
xchg
sub
xor
cli
mov
popa
or
dec
xchg
cmp
pop
xchg
outsb
push
js
jecxz
xchg
fdivrp
outsb
jae
jmp
or
sbb
aam
pop
pop
push
mov
push
dec
adc
push
ljmp
or
call
lea
jge
mov
out
std
and
lods
popa
sbb
and
xor
stos
aaa
push
aam
iret
mov
add
insb
dec
mov
arpl
mov
lock
loope
and
ficoms
outsl
adcb
scas
imul
push
shlb
popa
push
and
lock
sub
sub
inc
mov
shrl
xchg
or
inc
test
je
mov
jp
pop
cmpsl
sti
add
hlt
cltd
fdivrs
and
adc
out
sub
jge
lods
shll
xchg
filds
pop
outsb
cltd
jae
pusha
fiaddl
inc
pop
loop
pop
sbb
push
loop
jns
bound
xor
jbe
or
or
inc
lods
scas
and
lods
and
insb
bound
mov
inc
cmp
jnp
pusha
jge
imul
sar
scas
sub
mov
push
xchg
xor
fmull
mov
or
adc
ror
push
mov
jns
pop
loope
sub
filds
shrl
cmp
ja
aaa
shlb
loop
mov
sub
imul
xor
aam
or
push
xchg
jae
mov
jnp
movsb
mov
fidivrs
mov
in
inc
push
sub
outsl
sub
push
sbbb
pop
jecxz
outsb
pushf
xchg
aaa
out
push
outsl
movb
lahf
xchg
ss
lret
pop
cltd
xlat
push
pop
xchg
sub
call
inc
or
jecxz
pop
insb
in
adc
xchg
lea
popa
lods
push
mov
adc
xor
add
jbe
and
xchg
aam
jp
scas
shrb
ret
add
shll
mov
scas
inc
insb
addb
pop
xchg
std
int3
sbb
jno
call
jns
inc
test
ja
inc
ficomps
pop
iret
and
mov
inc
out
cli
jge
xchg
adc
xor
rcrl
push
lahf
aad
popf
fisubl
out
adc
in
pop
data16
les
add
pop
mov
call
xchg
je
push
and
outsl
cmc
adc
lock
popf
mov
cwtl
push
cwtl
insb
outsb
push
and
lahf
pushf
jb
add
scas
sub
lods
pop
cmp
shlb
pop
add
mov
inc
sbbl
incb
xor
jle
addr16
sbb
mov
jp
repz
push
ret
leave
je
sbb
inc
fwait
jmp
dec
repnz
cmp
mov
jmp
lret
pop
sahf
scas
fchs
jb
and
ljmp
jo,pn
imul
test
push
push
insl
add
xor
icebp
jge
push
test
lods
xor
nop
bound
inc
dec
aam
in
push
je
mov
into
clc
lret
sarl
sbb
push
xlat
ret
pop
dec
rcrl
mov
pusha
fmull
test
sbb
and
sti
fs
insb
xchg
or
unpckhps
lods
mov
pushf
es
hlt
fisttpll
leave
stos
mov
xor
in
mov
mov
cmp
jge
js
pop
repz
stc
imul
cmpl
push
xchg
sbb
push
and
inc
pushf
mov
loopne
push
aam
and
push
mov
cltd
add
add
push
dec
js
scas
cmp
add
sbb
adc
xchg
mov
dec
lahf
stos
sub
mov
outsb
loope
addb
and
and
mov
pop
and
cmc
repz
repz
ret
xchg
xchg
je
pop
sub
fs
cmpb
dec
das
outsb
dec
xchg
jle
jnp
add
jne
nop
push
jb
cmp
jle
pop
cmp
mov
jl
push
insb
fstpt
cmp
or
imulb
pop
mov
out
nop
sbb
sbb
sub
ljmp
and
in
and
aad
push
jl
adc
dec
jle
push
data16
call
add
loopne
hlt
popf
fnstenv
scas
mov
jg
and
mov
sub
pop
js
inc
cli
out
fucom
rorb
cmp
fidivl
sbb
test
in
xchg
shlb
mov
out
shlb
lods
mov
xor
adc
mov
notl
mulb
arpl
mov
ja
test
fxch
shl
mov
xor
ja
inc
loop
push
mov
cmpsl
data16
lds
aas
push
mov
xor
pop
sti
xchg
sbb
cmp
insl
xlat
imul
pop
cmp
pop
mov
and
jnp
dec
ds
mov
fidivl
push
lods
in
and
adc
mov
mov
daa
jg
fdivrl
xchg
out
xchg
rcrl
hlt
and
cs
je
das
pop
scas
in
rorl
mov
inc
mov
mov
cmpsl
inc
cltd
xchg
and
outsl
push
and
jg
xchg
mov
push
pop
sub
je
mov
mov
ljmp
test
pop
push
les
frstor
jmp
pusha
pusha
rolb
jno
fistpll
mov
dec
dec
pop
dec
mov
fnstcw
stos
dec
sbb
jge
clc
or
sti
sbb
cs
adc
icebp
test
cmp
outsl
pop
pop
mov
cld
scas
pop
jg
adc
inc
sub
pop
sbb
fistl
test
insl
fsub
xchg
insl
mov
push
clc
push
pop
xorl
xchg
jne
or
xchg
fcmovbe
aas
clc
fadds
in
lea
dec
in
push
xchg
iret
dec
mov
mov
cwtl
icebp
mov
insb
pusha
jbe
or
out
mov
mov
out
jp
inc
fwait
adc
push
adc
sub
cmp
fisttpl
add
lcall
not
fstps
and
sarb
pop
jge
jns
shlb
mov
push
cltd
push
mov
jg
aaa
push
sub
fldenv
rclb
push
sub
inc
hlt
dec
push
mov
or
orb
xchg
mov
and
cmpl
fmuls
lret
repz
lods
cli
dec
sub
jmp
rclb
jb
jbe
js
cmp
cmp
addr16
in
es
xchg
mov
pop
mov
bound
outsl
cmpsb
outsb
jp
ja
cltd
test
mov
int
mov
or
sahf
sbbl
ficoml
dec
jo
sbb
movsb
in
inc
inc
xchg
adc
lahf
inc
mov
sub
inc
lock
or
addl
es
in
xor
stc
sub
cmpsl
test
imul
popf
adc
insl
mov
dec
in
subl
fisttpl
rcr
push
in
mov
push
xor
sti
cs
mov
mov
fcoms
enter
iret
push
je
xor
pop
sbb
adcl
pop
pop
rcrl
push
in
dec
dec
setge
sub
xchg
jbe
push
inc
call
mov
jmp
jmp
adcb
int3
xor
pop
push
xchg
int
mov
push
pop
pop
loop
adc
in
insb
xor
fiaddl
fadd
xor
xor
cmc
lods
add
mov
aam
xor
pop
mov
adc
aad
pop
repz
lret
mov
mov
cmpl
enter
xor
adc
xchg
xor
dec
push
pop
shr
mov
lret
sbb
and
or
inc
mov
aas
pop
mov
aas
lret
xor
mov
mov
mov
imul
lods
mov
add
lcall
mov
lret
mov
aam
add
jg
jns
pushf
push
dec
lret
adc
mov
gs
in
add
call
das
hlt
lds
in
mov
jmp
out
pop
into
xchg
call
inc
jp
fdivs
mov
loop
push
ret
fwait
ljmp
arpl
das
stos
lods
stos
shlb
iret
mov
lock
addb
mov
mov
push
push
in
and
leave
ucomiss
mov
inc
sub
sbb
lret
mov
sub
repnz
mov
das
cmp
dec
data16
adc
cmpl
or
fsubs
mov
in
mov
lods
test
adc
mov
shlb
add
push
push
daa
xor
xchg
ds
lret
mov
in
aad
inc
je
sub
ret
jbe
and
sub
scas
std
inc
test
sbb
fdivs
inc
dec
insb
jnp
sub
pop
jnp
fbld
out
ja
lods
dec
inc
sbb
cmc
or
mov
xor
faddl
inc
fsubl
lret
negb
mov
xchg
xchg
fnstsw
dec
popa
clc
jl
jno
mov
mov
mov
jne
lds
aaa
psubq
xor
fldenv
mov
enter
add
dec
enter
pop
cmc
xchg
xorl
or
mov
in
aam
roll
cmp
push
adc
das
in
adc
jle
fidivl
mov
fs
pop
hlt
imul
xchg
or
sub
enter
dec
fcmovu
data16
cltd
and
fldt
inc
adc
mov
mov
ja
push
xchg
jge
fsubs
fcmovb
out
shlb
mov
out
mov
pop
cmp
sub
xor
cmc
sub
lods
inc
jmp
fs
cld
push
xor
das
out
imul
jl
ss
mov
add
lea
hlt
xchg
loop
je
or
dec
add
rorl
out
lods
push
mov
dec
test
adc
int3
sub
jge
or
push
push
clc
lret
enter
enter
xchg
shrb
dec
or
test
sbbb
inc
pop
mov
jo
loope
jne
mov
or
add
inc
cmpl
in
dec
adc
adc
pop
arpl
mov
out
out
test
ret
adc
insb
fs
mov
or
xchg
adc
jg
jp
add
xchg
dec
and
cmp
ja
mov
inc
mov
into
iret
xchg
mov
std
test
pop
outsl
mov
xchg
or
movsl
push
in
mov
and
jmp
cmc
rcl
jbe
cmc
leave
pop
fldenv
cmp
imul
push
xchg
es
negb
mov
sub
pop
testb
pop
mov
add
xchg
sub
mov
dec
repz
jg
xor
int3
inc
into
mov
mov
cmc
and
ljmp
enter
inc
mov
jg
mov
pop
pop
adcb
imull
and
rorb
movsb
je
mov
mov
push
add
jp
mov
test
push
mov
hlt
test
pop
dec
mov
int3
cmp
daa
dec
sub
fistl
add
sub
outsb
rcrl
jle
in
jecxz
mov
std
xchg
jnp
ficompl
insb
mov
xchg
out
cmc
ja
cmpsb
mov
int
lock
leave
notl
mov
mov
mov
out
jge
push
jmp
pop
push
adc
add
cltd
mov
pop
ja
pop
push
xor
pop
or
daa
and
fisubrs
fisubl
xchg
cmp
and
ficompl
pop
xchg
stc
or
adc
mov
lcall
or
mov
mov
pusha
sbb
aam
in
int3
and
push
lds
fimull
push
xchg
fdivrl
es
leave
in
clc
pop
inc
mov
cld
loopne
pop
mov
pop
scas
pop
cmp
sub
sbb
stos
into
dec
sub
push
cmc
jecxz
out
jne
aaa
mov
aad
dec
jns
add
rcr
call
mov
ljmp
cmp
cs
cmpb
out
or
add
test
cmp
cld
in
in
mov
sti
jns
cmp
dec
dec
or
push
orb
and
lgs
scas
sahf
mov
adc
sbb
lods
gs
cmp
dec
push
nop
jb
adc
push
mov
arpl
mov
loopne
sub
add
cmp
xchg
adc
loope
push
add
cli
enter
test
mov
in
jbe
cmp
fs
rorb
test
les
sub
lcall
adc
sbb
rcrl
mov
jle
stc
test
mov
xor
adc
dec
fwait
mov
out
dec
pop
and
arpl
and
sbb
leave
mov
inc
xchg
aaa
test
test
sub
ret
jne
cmp
mov
pop
xchg
sbb
stos
paddusw
je
jo
cmp
in
imull
pop
fs
adc
in
inc
mov
dec
aas
cmp
dec
adc
in
in
jbe
mov
or
push
test
push
leave
push
push
adc
roll
mov
mov
jmp
ret
fiaddl
add
dec
and
repnz
mov
popf
or
push
cmp
rcrl
jb
ljmp
mov
pop
fwait
movsl
jae
in
test
leave
mov
andl
cmp
enter
cs
xlat
aas
dec
xchg
pop
cli
xor
and
mov
fcompl
ret
clc
in
sub
mov
ds
or
mov
cmp
pop
xchg
out
lock
rcr
sub
cmc
lret
cmp
cmp
pop
imul
adc
ds
cli
stos
nop
aaa
aad
push
mov
je
xchg
add
cwtl
ss
inc
add
cmpsl
mov
gs
lds
sahf
int
and
jne
aad
imulb
das
call
pushf
bnd
ret
jnp
out
popa
mov
mov
adc
mov
addl
and
or
lea
in
cmp
jne
and
insb
std
out
xor
or
sbb
and
mov
sti
sub
negb
lret
fisubrs
adc
mov
xchg
movsb
push
test
loope
int
sbb
inc
mov
mov
aaa
into
ds
cmpsl
in
dec
cli
packssdw
xor
shlb
loopne
jmp
pushf
lock
test
xor
icebp
xor
xorb
push
and
repz
inc
inc
in
add
and
mov
jne
xlat
int3
push
fdivr
push
jle
push
shlb
mov
ss
stos
lret
xchg
add
cmp
lcall
jns
shrl
xor
aas
sbb
fnsaves
pushf
int3
mov
jnp
add
xchg
repnz
push
xchg
out
dec
call
fs
adc
ffree
insb
or
or
fsubl
mov
in
mov
dec
and
insl
dec
pusha
lret
mov
sub
mov
aaa
and
lahf
mov
or
xchg
shll
aam
es
or
inc
fmull
adc
outsb
test
cmpsl
imul
mov
dec
in
fisttps
inc
lods
shlb
mov
dec
push
je
inc
scas
cmp
cmp
or
decl
and
xchg
and
data16
pop
mov
add
pop
push
cltd
pop
xchg
sub
fisubs
mov
jb
stos
sub
frstor
fsubrl
lcallw
pop
jecxz
out
aaa
inc
out
xchg
xor
add
pop
lret
mov
daa
test
lods
mov
jmp
pop
push
jbe
jb,pn
mov
mov
loope
clc
inc
imul
aaa
push
jbe
pop
clc
inc
lahf
arpl
aad
cltd
inc
loop
inc
fdivrs
mov
add
xchg
xchg
cmpsb
aam
jno
mov
clc
inc
or
mov
sbb
mov
stc
inc
daa
sahf
adc
das
out
pop
adc
push
adc
inc
xchg
movsb
jbe
cmp
in
pop
pop
dec
das
cmp
cmp
or
inc
xor
cmp
push
push
pop
popf
push
pop
dec
outsb
das
mov
or
push
out
ficomps
jle
jg
cmpsl
lcall
add
int3
cmp
loop
lods
data16
faddl
andb
xchg
inc
iret
sahf
xchg
sub
stc
and
cmp
ror
in
xorb
sub
xchg
and
pop
xlat
mov
ds
stc
data16
mov
hlt
in
lock
xor
fcomi
in
pusha
dec
scas
jno
cmpl
pop
ficomps
shr
enter
inc
ret
xchg
add
xorl
and
mov
andl
shr
xchg
bound
aas
in
shl
hlt
xor
mov
push
jecxz
lock
shl
mov
ja
in
mov
xor
cwtl
dec
add
or
into
ret
dec
aam
sub
xchg
mov
stc
adc
fcompl
fsubrs
dec
sbb
jae
pop
fisubs
data16
movsl
inc
add
out
mov
insb
jecxz
ret
mov
fs
push
outsb
cmp
nop
mov
dec
xchg
cld
jl
dec
jns
jo
adc
pop
cmpb
pop
sub
cmp
jo
stos
arpl
cmpsl
hlt
mov
add
sbb
fnstenv
loop
mov
dec
clc
dec
push
ljmp
inc
sahf
jl
je
dec
sbb
arpl
shrl
pop
scas
xchg
lods
cmp
dec
push
out
xor
lea
lret
xor
inc
jle
mov
dec
jmp
in
fcmove
lret
adc
mov
adc
push
push
sbb
scas
dec
in
ret
inc
out
daa
push
dec
stos
inc
shl
mov
jle
cli
push
popa
int
cwtl
mov
repz
fildll
and
push
dec
bound
cmpl
sub
aad
push
sbb
sbb
inc
aas
mov
xor
adc
mov
cmovle
push
mov
cmpl
in
arpl
add
into
xor
and
test
int3
ss
lods
mov
ss
negl
sahf
inc
gs
add
xchg
mov
clc
icebp
cltd
or
in
movsl
xor
je
mov
sbb
jp
xchg
jno
xchg
neg
jge
in
dec
rcl
in
lea
add
in
bound
cmp
stos
int
fcmovb
mov
stos
or
movsl
hlt
in
ret
pop
pop
out
mov
out
dec
movsb
jle
sub
or
ja
sub
in
out
mov
stos
cmpsl
dec
gs
xchg
sahf
test
cmp
scas
jge
mov
jns
insb
jl
mov
mov
je
cmp
pop
push
or
add
frstor
sti
add
mov
adc
loop
adc
dec
fsubrp
ret
ljmp
inc
aad
lcall
std
rclb
add
aaa
lods
sbb
scas
mov
push
movsb
ds
mov
push
mov
pusha
insl
popf
pop
stos
test
mov
xchg
int3
inc
and
out
aam
xchg
gs
xor
decb
lock
xor
dec
add
jno
cmpsl
repz
xlat
pushf
cli
mov
cltd
out
sarb
add
xchg
outsl
push
push
imul
and
ljmp
dec
xlat
popa
sbb
jbe
push
push
ja
cmp
repz
repnz
leave
xor
jns
cld
cmp
dec
xor
mov
and
fcomps
jae
lret
imul
int
sub
sbb
hlt
ljmp
cli
mov
xor
xor
loope
push
mov
lret
adc
inc
mov
ja
and
lock
sub
std
add
cmp
lcall
adc
gs
xchg
fildl
sti
idiv
fwait
out
dec
out
or
xor
inc
jecxz
adc
adc
and
cmp
cmp
adc
push
outsl
cmp
jno
aad
cmp
mov
xor
call
dec
dec
leave
test
ret
jno
xchg
inc
or
mov
xorb
jno
adc
test
das
mov
in
fs
fldcw
jbe
push
andl
movsl
mov
push
push
aaa
and
les
dec
mov
in
cmp
scas
mov
sbb
or
or
pop
call
addb
rorb
dec
mov
lcall
sbb
and
pop
fsubp
es
push
xchg
mov
inc
fs
pop
fstps
shll
inc
aaa
jmp
je
sub
insl
pop
push
ss
push
sub
movsb
std
xor
stos
sti
pop
inc
fdivs
out
jmp
dec
pop
xor
and
mov
xchg
mov
push
xchg
dec
jb
imulb
inc
lahf
into
aaa
jae
js
fucom
arpl
insl
sbb
cmpsl
subb
sub
cs
push
cld
xor
or
jb
je
dec
xlat
dec
cwtl
mov
xchg
and
push
sub
out
dec
jno
or
mov
iret
cmc
jne
push
xchg
outsl
ds
fnstcw
xor
push
shrl
or
add
sahf
stc
insl
and
push
fcompl
sbb
sbb
fwait
inc
jmp
adc
mov
cli
or
jl
fcmovnbe
leave
and
adc
mov
fiaddl
popf
movsb
sbb
cmpsb
sub
aad
jb
xor
sub
jle
loopne
fcompl
out
add
add
sbb
pop
out
cmp
sbb
faddl
lret
push
loop
mov
dec
cmp
lods
dec
sbb
sub
int
add
movsb
bound
add
cli
outsb
cmpsb
incl
mov
shrb
insb
dec
repnz
enter
lahf
push
fcmovne
inc
leave
and
xchg
cmp
lea
jo
dec
out
imul
xor
or
cld
das
dec
arpl
mov
shl
fistl
lret
in
bound
cmpsb
mov
mov
dec
jp
push
pop
push
mov
loopne
dec
pop
inc
ret
popa
jg
rolb
mov
mov
test
add
test
out
inc
xchg
not
bound
lock
cmp
push
and
sub
mov
mov
push
lods
sbb
testl
and
negl
mov
mov
mov
or
add
mov
pusha
in
pop
imul
add
fstpl
sub
push
ret
popa
lcall
add
mov
push
test
mov
xor
push
out
jae,pt
ja
ret
pop
lea
arpl
mov
sub
clc
push
push
and
lahf
and
sub
bound
ficomps
inc
pmuludq
mov
pop
jo
mov
xchg
sub
push
or
cmp
leave
inc
jns
push
mov
sbb
or
es
andb
int3
inc
test
ret
adc
mov
mov
dec
push
inc
add
fwait
aas
ret
arpl
ficoms
std
mov
jecxz
and
dec
lret
inc
add
cmp
lcall
cwtl
insb
movzbl
sbb
dec
push
cmc
loope
lock
cmp
xchg
lcall
fisttpl
sub
jae
out
add
jno
sbb
pop
adc
jecxz
or
sti
lea
sbb
mov
mov
or
mov
dec
mov
fs
insb
ret
cltd
mov
dec
push
jno
lcall
repnz
add
and
icebp
and
pop
push
ja
inc
bound
aam
add
into
test
mov
push
in
cwtl
and
sbb
stos
cwtl
cmp
pavgb
cmp
sbb
ret
push
and
push
xor
imul
xchg
loop
jl
jle
push
jae
outsl
mov
outsl
inc
mov
cmp
enter
push
ss
jmp
bound
jb
stos
testl
ljmp
xlat
pop
or
mov
btc
sub
jno
aam
leave
mov
jns
or
clc
xor
adcl
inc
mov
mov
sbb
ret
lods
data16
xor
lods
add
jp
add
repnz
cli
mov
fnclex
jne
sarb
pop
mov
std
mov
lea
inc
mov
xor
mov
xchg
sbb
inc
pop
mov
stos
add
lcall
mov
xor
adc
gs
xchg
sub
stc
sbb
aad
push
xor
xor
arpl
lods
cmc
inc
les
test
mov
jge
add
rorl
push
sub
add
jl
cmp
das
adc
rcl
jno
leave
jb
je
sarl
or
mov
sbb
shll
mov
fwait
inc
adcl
add
insb
fsts
into
outsl
mov
xchg
push
out
sarl
loope
ss
and
mov
mov
mov
or
pusha
mov
js
xchg
jae
dec
lods
pminub
popa
movsb
fwait
pop
adc
leave
loope
inc
mov
mov
enter
dec
ds
outsb
inc
data16
rcrb
cmp
cld
cmp
dec
arpl
fscale
push
lcall
cltd
mov
push
roll
sub
div
adc
arpl
sub
adc
pop
cs
int
dec
addr16
mov
hlt
add
push
scas
mov
pop
inc
in
jg
dec
sbb
adc
rcll
in
cmp
fstl
divb
cmp
pop
jae
ss
mov
and
mov
dec
xchg
jp
scas
scas
mov
mov
fistl
dec
inc
idivl
mov
aaa
rorl
and
inc
xchg
adc
ljmp
daa
mov
mov
push
or
faddp
adc
lea
mov
lret
inc
in
xchg
add
popa
inc
jp
add
inc
ljmp
shrl
and
fldenv
cld
aaa
ret
imull
or
ds
adc
mov
add
mov
mov
push
mov
adcb
xor
in
bound
add
sahf
rcrl
test
add
and
add
insb
imulb
mov
mov
cltd
insl
and
mov
lds
jnp
push
or
dec
jne
xor
movsb
cmpsl
leave
xor
and
pop
pop
loopne
es
lods
arpl
pusha
xchg
or
test
insl
dec
in
dec
test
mov
addr16
sub
icebp
xchg
ror
adc
jge
fadds
mov
xor
popa
iret
fs
push
mov
or
int3
aam
xchg
fadd
shll
inc
rcrl
mov
outsl
outsl
mov
pushf
push
mov
rclb
lahf
sbb
sbb
fcmovne
fs
int
and
pushf
cwtl
cwtl
push
mov
dec
pushf
dec
test
das
scas
loopne
push
mov
mov
in
loop
push
orb
arpl
xchg
jae
dec
popf
lea
adcb
mov
fwait
sbb
xor
mov
jb
dec
add
setae
sub
daa
rolb
loop
sarl
outsl
jo
mov
stos
dec
push
mov
add
mov
or
bound
aas
iret
dec
push
in
jne
addr16
mov
arpl
in
jb
xchg
mov
mov
xor
clc
xor
push
lods
addr16
push
mov
rol
sub
inc
dec
pop
hlt
sub
jne
or
jne
and
fidivrl
push
push
mov
fmul
push
mov
testb
sbb
push
jnp
bound
push
rcrb
js
sbb
jae
aad
and
mov
and
fwait
xlat
mov
adcl
cmp
scas
mov
xor
lret
call
xor
int3
lock
pop
pushf
sbb
sub
addr16
rcr
jne
push
cmp
hlt
jg
fsubl
and
inc
into
in
and
add
inc
xchg
add
pop
out
sbb
dec
xchg
inc
fmuls
test
rclb
mov
lods
mov
data16
notl
and
fimull
rorb
shll
adc
xchg
and
ljmp
or
pushf
gs
loope
rclb
pop
push
adc
in
pop
mov
das
push
add
mov
ljmp
arpl
push
arpl
fadd
loopne
push
mov
inc
push
mov
scas
ds
movsl
or
dec
push
mov
and
in
pop
into
lock
fldenv
mulb
push
jg
pop
push
xor
out
fstpt
clc
fbld
clc
xchg
cmc
icebp
push
or
fcoml
inc
sub
cmpsb
shrw
sub
shl
das
dec
adc
push
mov
push
mov
xchg
rcl
pop
lds
and
lcall
mov
jg
pop
sbb
std
mov
fisubl
jg
movsb
inc
lock
cmpsb
sbb
sbb
xchg
int
or
in
ja
or
mov
lret
pusha
data16
or
and
push
test
and
mov
lret
sub
xchg
int3
cmpb
sub
jmp
xor
andb
cld
mov
je
mov
cmpsl
mov
inc
inc
into
mov
adc
lcall
ret
xlat
gs
pop
jno
push
mov
mov
lcall
sub
jnp
cmc
mov
xorb
dec
stos
push
push
mov
scas
adc
adc
fs
popa
sbb
adc
sbb
insl
adc
ja
imul
mov
dec
adc
leave
daa
jge
mov
out
dec
push
adc
mov
enter
mov
aam
imul
popa
cmp
pop
jecxz
pop
pop
loopne
arpl
mov
inc
push
lret
in
jmp
sbb
adc
aam
mov
push
cmp
adc
mov
cmp
hlt
jp
mov
iret
mov
in
loope
jns
insb
lcall
int3
jno
mov
add
jge
push
fisttpl
into
xor
and
xchg
mov
test
pop
sub
xor
inc
xchg
ret
mov
aaa
mov
cltd
inc
pop
xor
les
jle,pn
and
add
lds
into
es
lcall
fdivs
push
test
adc
xchg
xchg
jne
pop
inc
ret
xchg
sarl
xchg
mov
jl
sub
jo
in
inc
imul
or
sub
orb
mov
mov
pushf
mov
outsl
pop
shlb
arpl
pushf
xchg
sbb
jo
gs
and
sub
cltd
xor
sti
mov
xlat
cmp
xor
mov
js
inc
ds
xor
out
scas
jle
cli
scas
add
push
jne
pop
inc
fildl
ficoms
mov
and
mov
push
mov
cmp
pop
mov
out
jb
push
lahf
in
sub
inc
test
dec
mov
movsl
and
ret
imul
cld
pop
lds
xchg
inc
or
subl
pusha
inc
fcoml
movsl
rorb
out
lcall
test
and
std
scas
decl
fs
mov
push
push
loope
add
or
pop
lds
pop
adc
fcomps
and
insb
mov
mov
mov
jnp
dec
gs
cmp
sbb
cmp
sahf
dec
inc
inc
inc
xchg
mov
cmpsb
mov
arpl
push
xlat
out
test
rolb
fisubl
les
jp
enter
jp
or
je
testb
out
popf
js
cmpsl
xchg
adc
stos
sub
cmp
dec
and
shlb
mov
daa
mov
dec
pop
lods
lea
cmc
mov
leave
scas
cmc
dec
mov
inc
ret
stos
les
adc
dec
pop
jecxz
inc
mov
cmp
mov
loope
gs
loopne
gs
xor
sub
adc
sti
lods
inc
push
jl
je
std
push
or
xchg
mov
in
cmp
js
das
in
and
stos
mov
sub
inc
lods
jl
cltd
and
push
lods
js
cli
inc
inc
jnp
rolb
pushl
loope
sti
sub
dec
jg
mov
fldenv
jns
push
in
add
mov
outsb
cmp
fisubrl
bound
std
cmp
mov
mov
dec
pop
push
fisubs
pop
add
cmp
mov
mov
leave
out
repnz
mov
rcrb
mov
clc
mov
sub
dec
dec
test
loop
lock
sti
cmc
and
imull
xchg
xchg
sub
pushf
mov
mov
pop
jno
inc
mov
cwtl
sbb
les
stc
nop
jp
xor
and
into
rcll
or
add
xchg
sbb
and
jecxz
out
xchg
int3
andl
hlt
cmp
and
adc
lcall
jmp
std
push
add
std
stos
xor
mov
lcall
test
call
xor
pop
outsb
mov
fs
cwtl
xchg
adc
nop
inc
jmp
call
fists
stc
jne
sbb
mov
mov
and
mov
push
mov
int
or
imul
test
xchg
sar
jecxz
aam
add
pop
or
lds
sbb
cwtl
mov
neg
jbe
iret
bound
inc
call
lahf
pop
repz
cwtl
mov
ja
js
add
lret
or
test
imul
fwait
imul
enter
sbb
xchg
daa
mov
lods
xchg
add
inc
push
rcl
or
xchg
mov
scas
cmp
dec
jp
and
sbb
jecxz
pop
xor
jno
in
jle
adc
sbb
inc
xchg
pop
dec
push
sub
add
subl
dec
pop
fwait
mov
ret
ss
mov
aad
hlt
iret
nop
scas
shl
lods
mov
jecxz
jno
lret
sti
pop
ffreep
dec
pop
clc
xchg
out
outsb
inc
imul
mov
mov
in
ja
jge
jmp
loop
popf
and
push
cld
daa
jno
mov
addr16
or
leave
push
and
lods
jp
iret
scas
fwait
repnz
stc
mov
out
jae
and
aam
mov
loop
push
rorb
adc
dec
adc
movsb
pop
xlat
movsl
xchg
adc
sarl
add
cli
in
pushf
mov
cmp
cmp
stos
sub
loop
mov
and
lock
xchg
xchg
adc
leave
mov
xchg
fsubrl
repnz
sbb
mov
faddl
fnstsw
dec
push
mov
ja
and
test
nop
xrelease
inc
lahf
nop
xorl
lret
xchg
adc
jae
fwait
or
add
xor
mov
pop
push
lahf
dec
adc
loopne
mov
bound
sbb
imul
add
loop
xlat
scas
repz
pop
xor
jne
cmpsb
and
fs
jge
aad
pop
cltd
clc
test
shrb
xor
ret
mov
divl
loope
hlt
cmpsb
and
bound
insl
movsb
sub
fistl
inc
repnz
aaa
xor
inc
ja
loope
out
mov
pop
cli
punpcklwd
sbb
xor
js
lds
aaa
adc
fnstcw
xchg
mov
pop
sbb
jo
dec
jge
jle
jge
scas
fisttpll
out
sub
xchg
lods
pop
sti
fwait
imul
ficoms
stos
scas
insb
mov
fstpt
nop
and
shll
dec
inc
fcomi
jp
add
dec
and
sub
fmuls
ja
inc
ret
test
jne
test
subb
clc
loopne
lret
push
mov
lods
repz
sub
push
push
cld
push
pop
std
ret
xchg
outsl
pop
filds
fcomip
inc
lcall
mov
add
aas
sub
cltd
sbb
mov
in
jge
push
and
xchg
jne
dec
arpl
jmp
nop
xchg
pop
insb
imul
push
outsb
push
push
or
cltd
dec
addr16
sub
sub
xchg
jle
pop
xor
fistpl
mov
icebp
pop
mov
sbb
dec
mov
pushf
insl
adc
mov
aas
test
jg
push
adc
jnp
or
inc
mulb
jmp
inc
cmpsl
mov
ficompl
imul
jb
rclb
jg
movsl
inc
daa
dec
lds
mov
sub
jno
popa
dec
mov
adc
push
fdiv
and
mov
fdivrs
iret
aam
xchg
orb
lods
ljmp
inc
sub
xchg
or
stc
adc
dec
mov
push
cmp
dec
xchg
sub
sub
fidivs
xor
sbb
and
push
popa
adc
push
das
jbe
mov
mov
ret
daa
mov
lods
dec
add
mov
or
sub
lods
imul
jo
gs
mov
jne
scas
add
cmpb
rcrb
cmp
jmp
ja
and
or
or
imul
cmp
mov
xchg
jle
out
inc
lods
xchg
or
imul
outsl
orl
ret
xor
sahf
pop
dec
insl
imul
movsl
mov
aad
mov
jecxz
xchg
call
mov
sbb
outsl
out
hlt
mov
and
lahf
mov
scas
and
movsl
pop
add
inc
sahf
test
lea
sbb
mov
jnp
mov
loop
stos
jp
and
insl
das
add
or
shrl
and
sub
mov
out
ret
movsl
dec
stc
mov
cmovb
es
pop
ret
insl
sti
push
popa
sub
push
inc
call
pop
mov
adc
test
ljmp
pusha
inc
pop
idivl
cld
xchg
sub
push
js
adc
adc
pop
test
lods
or
loope
jae
xchg
cmpsl
stos
pop
push
aam
pop
or
dec
scas
cmp
mov
xchg
popa
mov
pusha
cli
jge
add
mov
and
jb
push
mov
pusha
pop
mov
sub
mov
cmpsl
aas
je
xchg
and
add
pop
dec
xchg
dec
add
sbb
adc
push
add
clc
add
xorb
lods
das
pop
fidivl
subl
xor
je
cmp
rolb
inc
dec
lea
ds
mov
in
pop
mov
mov
stc
ret
sbb
jp
je
ret
pushf
fidivrl
add
popf
ficompl
stc
inc
push
push
adc
xchg
fsubr
in
in
dec
cld
cld
or
into
or
xor
push
inc
and
mov
mov
mov
dec
icebp
or
dec
adc
pop
repnz
xor
lock
ret
jp
int3
test
cmc
outsb
nop
movsb
dec
xor
loopne
pop
mov
addr16
ds
sar
clc
jl
and
inc
inc
outsb
jno
cmp
jo
sahf
test
insb
sub
push
inc
jbe
into
cmp
cmp
cmp
add
xor
shll
pop
mov
mov
repz
cmp
mov
rolb
lret
or
or
loope
ja
dec
lds
sub
mov
cmp
mov
aas
pop
cmp
push
cs
aas
sub
daa
xor
adc
sbbb
push
dec
sbb
stc
and
out
imulb
lods
cld
mov
add
lods
push
rclb
add
call
push
mov
loope
rol
dec
movsl
in
adc
mov
dec
jno
insl
enter
shl
gs
adc
test
xor
bound
in
adc
dec
into
fucomip
loop
ljmp
xchg
pop
cmp
loope
mov
sub
repz
pop
add
stc
inc
push
cmp
cmp
in
ret
add
xlat
mov
mov
mov
dec
gs
in
lret
sub
test
rcll
push
push
fldl
cs
lods
mov
movsl
jno
cli
rolb
add
mov
insl
arpl
fs
aaa
pop
fistpl
lods
inc
das
in
xchg
leave
mov
mov
int3
xor
in
push
lret
push
add
pop
scas
cmpsl
popa
dec
mov
xor
fadds
call
shlb
jle
or
jecxz
push
prefetch
or
add
mov
loope
xor
aaa
pop
mov
imul
rep
xlat
xchg
jmp
out
inc
xchg
cmp
jle
and
mov
jmp
int3
dec
pop
hlt
imul
mov
scas
inc
test
xchg
jnp
es
jmp
and
inc
jnp
fsubrs
push
and
movsl
add
dec
icebp
jb
es
nop
pushf
mov
inc
sub
mov
push
les
xchg
jns
je
xchg
mov
je
cmp
aad
mov
jg
cmp
mov
scas
mov
popf
jns
fnstenv
in
jecxz
mov
addb
xor
or
jnp
stos
test
dec
mov
test
cmp
movsl
push
repz
push
sahf
mulb
aaa
cmp
jp
push
or
jnp
imul
sbb
and
push
jmp
std
rcll
mov
mov
push
mov
fdivl
das
imul
dec
mov
mov
push
and
or
daa
cmp
xor
push
divl
mov
out
push
cmpsb
mov
mov
into
lahf
iret
mov
ss
mov
pop
out
call
shll
cmc
cli
inc
adcb
imul
jnp
ror
lods
popf
fwait
cmpsl
mov
in
ja
cmpsb
or
pushf
xchg
lcall
sub
in
addr16
adc
mov
ds
js
lret
cmp
insl
filds
and
jge
jns
rcrb
mov
dec
out
dec
push
sbb
inc
cmp
xor
xchg
cs
jl
mov
andb
xchg
outsb
fdivrl
leave
mov
sbb
cmp
cmp
jns
icebp
adcl
call
cmp
pusha
pop
fsubl
inc
cltd
inc
repz
add
js
lahf
out
lret
mov
fnstenv
movsb
enter
push
jns
xlat
xchg
xlat
ret
dec
jecxz
pop
xchg
pop
mov
ret
mov
addr16
jnp
sbb
xchg
cs
mov
loope
ljmp
pop
pusha
dec
jmp
xor
xor
pop
push
shrl
xchg
xchg
iret
js
jle,pt
jno
mov
roll
cld
sbb
fcomp
add
sbb
or
cli
cmp
movsb
loop
testb
adc
data16
call
xchg
xor
lret
std
jno
jnp
lcall
pushl
xchg
xor
movsl
test
mov
inc
push
bound
xchg
ficoml
cmpl
aad
jns
pop
negl
xor
lahf
aam
mov
mov
inc
sub
js
in
jo
and
jmp
inc
int3
push
mov
lods
dec
push
mov
ret
push
inc
clc
mov
mov
or
mov
leave
xchg
xchg
test
inc
push
add
addr16
mov
jno
mov
mov
out
hlt
xchg
xchg
in
xchg
out
adc
push
push
mov
pop
fisttps
shl
mov
sub
sbb
cltd
fwait
cs
testb
fisubrs
sub
in
aas
pop
in
push
aaa
ret
daa
xchg
jns
arpl
push
jle
fcmovbe
cltd
test
xor
or
aam
pop
jl
adc
testl
jg
cmp
push
test
out
add
fidivrs
cwtl
or
add
rcll
sarb
jo
ja
leave
adc
add
cmp
icebp
cs
jp
inc
mov
aam
dec
xor
lods
and
mov
out
pop
lahf
pusha
adc
je
add
leave
ret
sahf
roll
ja
jo
inc
out
popa
jl
dec
add
or
into
add
pop
fstps
or
xor
mov
stc
lds
idivb
inc
int3
loope
lcall
pop
ficoml
mov
ds
stos
xchg
pop
rcrb
mov
loope
aaa
fucom
mov
sub
inc
ret
add
aam
inc
inc
add
pop
lods
ja
aad
movsl
mov
push
inc
mov
cmpsl
adc
cmc
inc
out
push
mov
xchg
pop
aas
popa
fstps
sbb
jnp
ja
add
mov
js
lds
jne
shrl
loopne
je
ss
popf
cmp
stos
push
or
rcrb
js
add
inc
xchg
mov
loope
cs
out
inc
movsb
lcall
popf
fisttpll
pushf
sbb
lret
repz
outsb
adc
daa
push
adc
fsin
in
or
xchg
cltd
jnp
dec
and
pushf
sub
pop
jecxz
imul
fwait
adc
dec
push
lcall
fmull
adc
cmp
icebp
xor
xchg
and
cli
mov
jl
lret
cmp
adc
sbb
mov
int3
aaa
aaa
gs
outsb
dec
fdivs
pop
cmpsb
lcall
pop
push
es
dec
inc
push
mov
in
out
mov
mov
shrb
into
pop
sbb
mov
xor
mov
mov
sbb
icebp
push
push
nop
scas
mov
sarl
inc
dec
xor
cmp
pop
push
mov
xchg
mov
mov
shr
add
pop
loope
les
fsubrl
mov
xor
ffreep
jle
sbb
inc
movsl
lret
ds
repnz
dec
lret
dec
adc
jmp
mov
mov
or
in
mov
test
repnz
mov
data16
jne
scas
femms
fmulp
adc
call
xor
insl
pop
outsb
fstps
arpl
push
jg
pushf
add
ret
data16
shl
xor
xchg
mov
xchg
ret
shl
fdivr
mov
rorb
in
xor
push
mov
xchg
add
and
insl
aam
jl
push
out
pushf
dec
sub
mov
daa
insb
cmp
inc
mov
xchg
mov
or
sbb
mov
mov
mov
jecxz
xor
cmpl
aad
lea
in
in
cld
fstps
ret
mov
push
in
mov
xchg
nop
fwait
sub
outsb
and
dec
mov
add
or
pop
icebp
sub
adc
mov
popf
sub
repnz
mov
xor
sbb
lcall
xchg
inc
int
stos
and
and
inc
fidivrl
aaa
xor
iret
jge
pop
imul
xchg
mov
adc
aaa
and
call
js
inc
hlt
jl
push
fistpl
in
subb
push
xchg
adc
pop
notb
clc
mov
sbb
push
jecxz
mov
xor
mov
jbe
mov
mov
sbb
cltd
inc
mov
into
jp
xor
add
shrl
scas
cmc
xor
cld
and
scas
mov
ss
lea
and
sub
mov
xchg
push
icebp
mov
hlt
adc
push
mov
mov
dec
cmp
or
shr
ja
fldl
push
xor
in
adc
inc
sub
inc
xchg
jbe
lods
or
xor
movq
cmp
dec
out
mov
push
stos
shrl
xchg
ss
mov
jae
pop
pop
cmc
insl
sub
imul
lds
xchg
in
je
xchg
mov
mov
loopne
int
cmp
or
mov
lea
push
mov
mov
imul
adc
mov
xchg
adc
shlb
sbb
inc
jg
mov
sbb
sbb
ss
popa
mov
or
dec
pusha
fists
subb
push
sbb
scas
sbb
pop
pop
xor
add
ret
push
inc
add
ljmp
inc
leave
inc
dec
dec
push
jno
mov
inc
sub
dec
mov
push
loopne
or
dec
daa
mov
jecxz
sbb
cwtl
outsb
in
pop
repz
icebp
push
fldln2
xchg
aas
repnz
test
leave
add
mov
add
std
daa
add
fdivs
rcl
xchg
xor
jb
dec
pop
or
icebp
sub
inc
jae
das
adc
xchg
fdivrs
pop
shlb
aas
leave
test
jnp
repz
pop
add
push
out
aas
jnp
adc
or
lret
cwtl
xchg
into
test
mov
xchg
cs
out
push
push
and
ja
repnz
dec
push
jbe
pop
xchg
ss
cmpsl
sbb
icebp
xor
ret
clc
xchg
cmp
dec
jno
adc
imul
fcomps
in
add
pop
std
pop
fwait
jge
rep
jmp
stos
outsl
pushf
stos
ficoms
lcall
test
mov
dec
xchg
and
inc
xor
popa
pop
mov
fimull
push
or
xchg
adc
lods
sub
jecxz
dec
ret
adc
addl
lds
dec
mov
jg
add
insb
xor
push
mov
loopne
cmovg
aad
test
mul
mov
adc
ss
and
mov
addl
mov
pop
xchg
mov
mov
js
dec
clc
push
pop
insl
jno
or
je
mov
fwait
scas
cltd
aas
cld
add
xor
popa
popf
xor
loopne
jmp
js
lret
dec
and
jmp
roll
mov
testl
repz
xor
dec
sbb
adc
loop
test
push
sbb
lret
mov
pop
ds
xor
into
pop
hlt
fisttpll
inc
cmp
daa
in
iret
mov
out
nop
ret
jmp
sahf
mov
sbb
lret
in
xor
lret
cld
lcall
mov
lods
in
leave
jmp
insl
jg
jp
sti
inc
push
inc
push
sub
ret
adc
mov
cmp
inc
int
pop
test
xor
add
lds
scas
add
loop
mov
push
pop
and
dec
mov
enter
pop
cld
iret
fdivrp
add
sbb
loopne
xchg
or
push
xor
gs
aas
cmpl
int3
jns
lods
sub
xchg
sub
push
and
cmpsb
iret
jg
fcoms
movsl
mov
mov
js
xor
mov
lcall
pushf
push
xlat
mov
repnz
mov
sbb
or
fimuls
sub
imull
mov
gs
fisubrl
leave
or
jbe
ds
pop
orl
in
popf
xor
aam
pop
xor
arpl
adc
sbb
xchg
outsb
lds
sbb
repz
sub
leave
enter
scas
pop
or
pushf
jne
subl
jmp
cwtl
push
xor
adc
jae
push
in
data16
pop
xchg
test
mov
jns
pop
lods
inc
js
xchg
xchg
lret
dec
jp
xchg
inc
movsb
loope
movsl
dec
cmp
mov
and
and
jbe
psubb
je
pushf
ljmp
call
out
cld
dec
adc
fwait
iret
out
fisubl
shrb
jmp
sahf
ds
lods
addr16
fcomps
aad
outsb
clc
lock
xor
icebp
mov
push
movsl
adc
jge
cltd
sbb
dec
xor
ljmp
movsl
ret
adc
mov
call
sbb
push
out
fyl2xp1
in
insl
dec
test
pop
pusha
test
jb
cld
pop
loopne
loope
sbb
inc
mov
jno
pop
in
repz
cmpsb
imul
cmp
dec
jae
fistpll
fsubs
je
cmp
fcoml
loopne
call
xor
cltd
les
loop
ljmp
xchg
xchg
addr16
or
repz
xor
clc
xchg
stc
or
lea
daa
popa
mov
jmp
stos
test
mov
mov
cmp
sbb
xchg
popa
push
ja
int3
fwait
imul
jmp
and
sub
cmp
push
inc
add
ljmp
mov
xchg
dec
pop
mov
ljmp
shrl
rclb
push
xor
clc
repz
incb
dec
fiadds
ljmp
call
lock
inc
mov
dec
pop
adcl
cmp
jae
mov
dec
inc
inc
sbb
xor
or
pop
pop
loope
sub
incb
test
lods
push
and
imul
mov
cmp
sub
adc
adcl
aas
sub
adc
sbb
aas
pop
jge
out
aas
movsl
fadds
mov
mov
mov
shll
fiaddl
cs
inc
andl
popa
xchg
push
fldt
loope
insb
jbe
fdivr
sbbl
mov
adc
sbb
out
or
mov
cltd
fwait
dec
add
dec
das
popf
dec
pusha
and
repnz
push
addr16
lock
xchg
addr16
fucomp
jne
dec
dec
fucomp
jae
int3
mov
inc
jnp
pop
xchg
js
pop
pushf
lds
aam
fldl
sub
cmp
cmp
jnp
xor
or
or
or
xchg
cmpl
jb
lcall
lds
jecxz
insb
loope
mov
leave
pop
pop
scas
dec
cli
push
pop
in
dec
sbb
pushf
mov
or
cs
incb
cmp
pop
jge
outsl
xor
cld
daa
pop
xchg
jns
pusha
adc
adc
ret
sub
sub
add
inc
ljmp
fimull
xchg
outsl
mov
add
xchg
sbb
sbb
jo
mov
fdivs
adc
repz
cmp
xchg
in
mov
push
addr16
repnz
mov
sbb
dec
pop
jae
ljmp
negl
mov
mov
lcall
ret
mov
in
ret
fninit
out
addr16
shrb
mov
push
popa
cli
pop
xor
scas
ljmp
andb
int
or
lret
cmp
jnp
inc
inc
lret
imul
imul
or
loope
push
cmp
jge
push
inc
inc
mov
mov
push
mov
sbb
repnz
inc
mov
and
sbb
cltd
mov
in
nop
jp
fcmovbe
pop
inc
ja
inc
xchg
leave
push
and
xchg
xor
mov
cli
push
je
mov
adc
stc
ss
popa
push
test
xor
pop
jl
inc
lret
je
into
mov
loope
cmpsb
xor
cmp
xchg
adc
cwtl
aam
popa
jle
mov
out
jo
movsb
xchg
daa
cmp
int
mov
mov
jns
dec
dec
jo
cmp
mov
mov
cmp
dec
push
test
mov
xor
mov
push
dec
scas
insb
cmp
leave
jmp
xchg
mov
xlat
add
mov
mov
cmp
add
das
repnz
or
sbbb
xchg
sahf
loop
fdivl
scas
daa
iret
movsb
inc
inc
or
xorb
pushf
push
adc
es
je
repz
adc
sti
and
jne
pushf
or
mov
dec
sub
jle
or
mov
addb
dec
shl
and
sub
push
jp
push
xchg
ds
jle
mov
cld
ja
aas
pusha
out
and
enter
aaa
jecxz
mov
lods
aas
inc
push
sahf
jg
repz
inc
xchg
lea
push
test
std
cltd
scas
add
in
xchg
sbb
dec
mov
mov
add
add
dec
push
xchg
cmp
jle
push
in
mov
aaa
les
xchg
es
movsl
push
xchg
mov
mov
sub
insl
stc
enter
mov
cmp
cmp
out
sub
inc
push
outsl
jle
popf
adc
or
ja
jno
add
pop
add
shlb
lods
dec
add
mov
push
mov
scas
cmpsl
inc
icebp
mov
shrb
aaa
xchg
inc
mov
mov
sahf
les
or
pop
or
jge
mov
insb
fistl
inc
jp
lods
daa
fcomps
movsb
add
outsb
cwtl
repnz
cmc
sbb
cmp
mov
cmpsl
add
movsb
push
rcl
and
adc
imul
iret
mov
lods
pop
ljmp
lods
fs
or
fwait
xchg
xchg
inc
jge
mov
inc
and
les
out
jg
pop
sub
mov
push
fs
xchg
lahf
nop
and
add
in
cltd
mov
loope
cmp
xor
in
out
sbb
rclb
jb
mov
daa
incb
sbb
jmp
cmpl
mov
js
sub
mov
test
notl
lds
xlat
sub
mov
fnstsw
cmpsl
sarl
sarb
push
add
sbb
push
lret
insl
rclb
sub
das
push
rcll
in
mov
jge
jmp
popf
enter
sbb
iret
ja
push
inc
mov
in
jge
dec
scas
pop
movsl
out
repz
xor
fdivr
dec
lds
inc
add
testb
incl
push
jecxz
xchg
pushf
movsl
adc
pop
and
outsb
adc
or
add
mov
xchg
in
sti
push
sbb
test
ss
lcall
ds
or
mov
cmp
or
shll
fs
arpl
int
das
add
and
pop
jns
sti
ret
jb
or
add
adc
loop
mov
pop
mov
nop
fs
fidivrl
adc
dec
movsl
fwait
test
dec
mov
insl
daa
pop
mov
enter
mov
dec
xor
out
dec
inc
insb
dec
test
ret
insl
mov
aaa
mov
pop
pop
cmp
popa
push
pop
mov
lret
lock
mov
push
cmp
and
nopl
ret
cmp
mov
hlt
or
sbb
inc
push
clc
jno
fcmovnu
stos
clc
pop
in
out
ja
xor
scas
ja
inc
dec
or
jmp
sbb
call
lods
ljmp
sbb
sbb
imul
repz
pop
insb
das
sbb
adc
xchg
xchg
mov
cmpsl
in
and
or
mov
scas
pop
and
inc
fcom
cmp
mov
outsb
push
je
lock
and
and
outsl
fldcw
sbb
pop
test
sub
scas
mov
dec
pop
mov
popf
negl
cmp
jbe
inc
dec
mov
add
mov
pop
dec
mov
dec
dec
lea
out
adc
xor
sahf
or
push
mov
and
sub
jp
mov
out
inc
mov
dec
gs
jno
sbb
sbb
add
adc
js
mov
pusha
push
fs
and
fs
pop
sbb
daa
jmp
xor
xor
push
add
xorb
jo
iret
insl
sub
xchg
rcr
aam
dec
test
dec
cmp
stc
insb
std
in
sub
mov
std
loop
xchg
sub
pop
fimuls
test
cmpsl
dec
cmp
sbb
mov
mov
leave
bound
jge
ret
push
aam
pop
lahf
inc
push
jnp
mov
pop
ds
push
data16
pop
jp
pop
fadds
lahf
jecxz
mov
xchg
dec
add
addr16
xor
pop
gs
inc
pop
pusha
cli
add
dec
mov
out
sahf
dec
sub
xchg
fxch
imul
mov
loope
mov
mov
lock
and
sbb
mov
daa
js
arpl
arpl
xchg
xchg
pop
rclb
push
into
sbb
sbb
adc
sbb
sub
fwait
push
dec
cltd
xchg
jle
mov
cmp
mov
je
pop
cmpsb
test
stos
scas
movsb
xchg
jge
sarb
mov
xchg
aam
inc
idivb
push
jecxz
xchg
jno
jae
leave
sub
dec
adc
xchg
add
xchg
popf
adc
loopne
xchg
cs
cmp
xor
icebp
pop
ljmp
in
push
inc
xchg
inc
mov
popa
push
addr16
jmp
les
and
in
sti
enter
std
inc
adcl
test
test
pop
ja
cmpsb
orps
ret
mov
fnstenv
insl
orb
or
mov
test
add
imul
dec
icebp
inc
call
stc
inc
outsb
repz
cwtl
add
add
shlb
in
xor
in
in
or
xchg
add
mov
es
fcompl
ljmp
mov
push
shl
enter
xchg
jo
js
mov
and
in
andl
js
push
clc
imull
fdiv
lds
mov
clc
outsl
or
out
push
xchg
je
int
stc
js
sbb
lods
psubusb
test
inc
adcb
pop
and
push
mov
xchg
jno
lcall
popl
insl
mov
loope
fwait
mov
imul
insb
sub
dec
mov
mov
fdivs
push
scas
mov
xor
mov
ja
cmp
push
lret
cmp
mov
add
data16
cmpsb
push
sub
rolb
pop
les
das
adc
cmp
mov
mov
and
stos
loopne
in
data16
dec
mov
xor
or
jns
jae
stos
and
in
stos
mov
not
mov
arpl
mov
aaa
mov
inc
orb
dec
je
aas
pop
and
sub
jne
push
and
and
ljmp
pop
jmp
loop
xchg
inc
inc
cmpl
xchg
lret
hlt
push
pop
and
nop
loope
loope
rolb
aad
and
iret
popl
jle
dec
into
mov
jle
js
add
sbb
dec
or
adc
insl
imul
stos
push
mov
mov
push
clc
jno
add
aad
adc
dec
push
add
cmp
add
int3
fisubrs
das
pop
add
in
xchg
lds
hlt
scas
jp
rclb
loop
inc
mov
fstpl
rolb
icebp
arpl
or
mov
pop
test
fmull
test
jne
dec
jb
pop
loope
ja
mov
push
popf
pop
std
cmc
sbb
pop
cltd
jbe
fistps
in
mov
cmp
cmpsl
in
out
test
inc
scas
inc
ret
int
and
sahf
mov
inc
dec
cli
inc
into
movsb
stos
daa
cli
lcall
sub
pushf
push
xchg
mov
std
cmp
mov
dec
jmp
or
inc
cmpsl
sbb
push
lret
pop
js
inc
mov
fcomip
push
and
mov
adc
es
ljmp
lods
cmpsl
test
mov
scas
xor
clc
nop
cmp
pop
nop
and
adc
cli
xchg
jmp
cli
push
roll
push
mov
insl
inc
aad
mov
mov
xchg
sbb
jle
clc
pop
ret
outsl
mov
repnz
shll
jmp
pop
das
shrb
inc
sub
sub
outsl
scas
pop
lods
adc
js
outsb
xor
sub
test
dec
and
movsb
mov
jge
mov
mov
sub
cmpsl
je
repnz
jge
inc
dec
jns
add
sub
lcall
out
inc
xchg
orb
cmpsb
imulb
pop
fisttpll
mov
sbb
pushf
adc
sarl
popf
jge
jns
loope
cs
pop
ficoms
or
sub
stos
outsb
xchg
cmpb
gs
inc
sub
pop
out
testb
lock
lods
jl
jns
outsl
enter
test
cmp
push
mov
lcall
in
mov
push
add
shrl
das
sbb
xchg
out
loope
pop
inc
mov
movsb
dec
movsb
shrl
sub
scas
in
cmp
mov
pusha
mov
loop
mov
sbb
xor
dec
mov
sbb
or
cmp
cmp
jo
pop
daa
jle
inc
inc
sub
pop
sub
repz
inc
and
imul
ret
mov
mov
ret
sbb
rol
stos
mov
mov
cwtl
adc
add
pop
xchg
sbb
es
int
movsl
call
sub
cmpsl
imul
jo
xor
and
mov
sar
and
orb
adc
repnz
fwait
scas
enter
and
sti
push
lret
adc
or
rorl
adc
pop
std
mov
insb
cltd
in
xor
mov
or
xchg
pop
ss
addr16
ret
jge
jp
push
adc
lahf
stos
les
stos
into
jae
or
cmp
movsl
cmp
dec
sub
jno,pn
bnd
test
mov
xor
mov
inc
imul
lcall
aas
xchg
call
sahf
addr16
mov
out
addr16
mov
inc
jnp
sub
cmp
ss
iret
pop
aas
in
in
ss
idiv
sbbb
sahf
ljmp
or
ss
scas
push
jo
lea
push
shld
nop
sbb
mov
adc
pop
outsb
xchg
bound
add
hlt
mov
loope
pop
mov
inc
or
dec
imul
sbb
ja
mov
jg
les
sarb
cld
add
adc
lds
into
insl
pusha
into
fwait
jle
jbe
push
push
insb
pop
dec
sub
cmpsl
popa
mov
sub
push
and
pop
sbb
shll
das
jge
pop
pushf
cmpsb
dec
movd
push
add
test
add
jne
mov
cmp
rcrl
pop
adc
jbe
cmp
inc
xlat
mov
adc
ja
mov
adc
xor
dec
push
xchg
xchg
sub
lea
adc
das
cs
mov
hlt
xchg
cs
cmp
out
xor
out
or
adc
xor
lock
testb
lock
jg
dec
nop
stos
or
sar
mov
cwtl
jnp
and
push
cmpsl
mov
stc
adc
gs
xchg
or
bound
cmc
mov
sahf
or
add
es
mov
inc
push
adc
cmp
xor
loope
in
jnp
gs
outsb
aaa
arpl
outsb
cmp
xor
aaa
es
je
push
mov
push
mov
pop
stc
mov
iret
jg
test
push
xchg
popf
push
jge
jo
test
push
sti
pushf
xlat
mov
shrl
ja
iret
cmp
das
xchg
and
repnz
or
aad
out
dec
aas
jg
rolb
push
pop
ret
rcl
cmp
scas
mov
mov
pop
jbe
cli
iret
xor
ret
cmpsl
jbe
jb
jo
xchg
iret
push
fsubr
lahf
fidivrl
or
stos
cmpsb
inc
imul
inc
mov
xchg
sub
jo
insl
fildl
cmp
es
in
fistpl
scas
bound
xchg
sub
mov
cld
lcall
jp
jecxz
pop
sub
int3
jo
movl
addb
daa
push
inc
xchg
push
cmpl
imul
jecxz
pop
sub
in
sub
jns
sbb
or
daa
mov
add
ljmp
sbb
mov
or
mov
popa
rolb
arpl
adc
inc
jnp
dec
dec
lret
fcmovu
xchg
push
jbe
and
addl
or
xchg
mov
aaa
inc
dec
cld
lods
lret
cmpsl
mov
test
cmpsb
lods
and
aam
pop
mov
mov
or
cli
sub
add
mov
repz
iret
mov
in
inc
fildll
mov
mov
xchg
ja
andl
ljmp
cmpsb
lea
xchg
aaa
sub
adc
daa
xchg
sbbl
pop
fsubs
inc
sbb
xor
xlat
mov
ret
or
lcall
and
in
push
xchg
cmp
je
out
imul
xorl
xchg
mov
rorb
push
addr16
outsl
xor
outsl
cwtl
sbb
jo
in
sub
mov
in
jns
ss
xchg
inc
inc
repnz
in
clc
pop
mov
js
das
movsl
xor
and
jno
xlat
jae
imul
sub
ja
sub
aad
jp
dec
test
cld
loope
cmp
jge
jb
xchg
pushl
je
mov
inc
ja
or
out
inc
xchg
fsubp
mov
into
loopne
sub
insl
mov
aad
xchg
dec
je
lahf
aaa
rcrb
mov
orl
and
cmpsb
jge
shlb
sub
mov
sbb
dec
jbe
scas
cmp
push
cmpsb
loopne
cmp
faddl
push
add
add
pop
jmp
jecxz
jo
xchg
aad
mov
je
cmp
push
loope
jg
inc
fisttps
dec
mov
int
sarb
cs
add
fsts
or
or
mov
loopne
inc
and
mov
or
xor
inc
mov
pop
jle
imul
mov
sub
jg
lock
jbe
sub
sbbb
in
movsl
sub
test
mov
ds
dec
inc
cld
cs
shlb
adc
mov
sbb
cmc
jmp
sbb
sahf
in
inc
jbe
cmp
pop
scas
jl
dec
mov
out
sbb
mov
push
out
rcrb
or
movsl
sbb
out
push
and
pop
and
xchg
cmp
xlat
mov
adc
and
mov
fs
pop
inc
or
daa
out
ds
jle
in
add
push
inc
repz
or
bound
mov
out
mov
xor
aad
fistps
pop
rol
addb
rcrl
xor
repz
dec
leave
cltd
es
adc
aad
out
in
xchg
sub
inc
push
xchg
gs
mov
pop
sub
mov
cmpsl
pavgw
stos
mov
xor
aad
js
mov
push
mov
out
xchg
jp
nop
cmp
pop
add
jg
enter
jnp
cmp
jg
mov
inc
mov
mov
mov
push
or
jnp
in
jmp
add
jae
pop
mull
fs
ret
lret
mov
pusha
arpl
and
mov
and
cmc
xor
mov
sar
pop
cmp
call
jbe
add
cwtl
or
pop
daa
ret
add
mov
cmc
mov
cmpsb
mov
dec
test
mov
test
hlt
in
test
mov
les
jae
cmp
ljmp
jp
push
out
fsubrs
test
out
mov
shr
add
push
fldl
fistpll
add
andb
sahf
mov
mov
sub
xlat
pop
cld
lcall
sbb
mov
push
xchg
in
mov
mov
xor
inc
dec
cltd
and
or
es
push
cld
pop
and
sbb
cmp
lcall
push
scas
sahf
cwtl
and
dec
jmp
pop
test
mov
retw
mov
sub
xor
lea
or
mov
cltd
fldl
je
adc
mov
sar
popa
adc
out
lea
imul
xchg
je
xor
inc
mov
mov
or
in
insb
cmp
or
out
sbb
sub
pop
cmp
push
and
jmp
lret
dec
out
icebp
bound
test
dec
ljmp
or
repz
xchg
jnp
fidivrl
ja
xor
dec
cli
jno
insb
xchg
in
fwait
or
aad
frstor
dec
mov
pushf
jle
push
dec
jge
mov
mov
enter
lock
mov
mov
dec
pop
scas
lods
add
push
out
jb
loop
mov
sub
fs
fcom
xorl
mov
fiadds
pop
mov
push
lret
rcrb
int
pop
ja
mov
cli
push
in
sti
fidivrl
dec
mov
scas
inc
sahf
mov
adc
test
imul
jae
mov
inc
fstp
pop
mov
rol
subl
testb
outsl
shrl
sub
cmp
aaa
sbbb
dec
pop
sub
dec
aas
dec
or
fadd
dec
pop
xchg
pop
and
xchg
imul
push
fidivrs
lahf
into
cmpb
cmc
inc
imul
push
repnz
pushf
sub
fidivrs
cs
xchg
mov
inc
adc
cs
push
or
das
jo
or
mov
cmp
pop
cmp
incl
add
mov
push
add
fwait
andb
push
dec
or
daa
mov
les
add
mov
inc
mov
push
xchg
rcrb
sar
cld
add
dec
mov
xor
sbb
dec
push
int3
es
xchg
flds
push
sarb
cld
or
decb
jmp
or
lcall
loope
push
dec
in
and
dec
data16
aam
stos
inc
fwait
aad
movsl
mov
stc
mov
jb
jns
lods
xor
jl
adc
imul
jbe
outsl
rorb
sbb
das
int
and
fiadds
divl
inc
sub
test
or
fsubrl
xor
mov
in
adc
add
clc
arpl
repnz
push
aad
jmp
roll
popf
xor
sub
add
lahf
in
notb
psrlw
dec
adc
adc
data16
pusha
stc
cmp
cli
mov
jmp
jnp
xchg
inc
jo
jb
xchg
push
daa
pop
mov
sub
aas
imul
movsb
dec
inc
ja
xorl
adc
std
jg
jnp
aaa
add
in
insb
or
scas
pop
add
push
jcxz
sub
lahf
or
mov
call
adc
lea
and
dec
xlat
mov
and
call
mov
inc
xchg
xor
dec
push
pop
cs
pop
dec
and
mov
pop
sbb
mov
pop
add
jae
pusha
subl
lea
push
dec
push
inc
test
mov
insb
int3
int3
xor
push
jl
out
mov
pop
fsts
add
daa
adc
popf
adc
test
ret
fwait
mov
dec
push
dec
fistl
xchg
add
push
inc
shlb
jl
imul
pop
push
outsl
xor
orl
fdivrs
xor
pop
jmp
inc
pop
xchg
rclb
or
dec
ficompl
xchg
xchg
out
es
jo
mov
and
push
daa
xchg
and
jg
sbb
adc
ljmp
sub
imul
movsb
push
ds
popl
jg
cmp
call
or
popa
mov
notb
xchg
inc
mov
xchg
icebp
sub
xchg
mov
fiaddl
jecxz
mov
push
adc
push
dec
subb
inc
sti
sarl
sub
xor
paddd
mov
icebp
xchg
mov
sbb
xor
movsb
adc
icebp
xchg
lret
fisubrs
test
pop
add
fsubr
rcr
popf
xlat
xchg
jmp
movsb
jbe
sbb
mov
fucomip
add
or
fsubrs
adc
xchg
je
mov
sub
add
stos
xchg
fstps
push
inc
shll
sub
push
push
adc
dec
mov
popa
fimull
mov
test
in
and
mov
and
jae
add
out
pop
xlat
icebp
shlb
add
inc
ja
push
cli
add
push
mov
xor
js
bound
xchg
mov
arpl
xor
xor
push
rolb
mov
es
dec
pop
fdivrl
into
aad
fistps
mov
mov
ficompl
xchg
or
shlb
movsb
fucomip
and
outsb
sub
mov
pop
stos
addr16
jmp
fucomip
pop
dec
xchg
inc
and
pop
outsb
and
shr
jbe
lods
dec
jl
sahf
in
adc
je
test
dec
nop
mov
popa
imul
push
insb
arpl
and
mov
sub
aam
mov
rcll
aaa
dec
push
push
call
sarl
mov
lret
les
mov
mov
or
xor
xchg
mov
push
pushf
pop
cltd
mov
int
movsl
mov
push
mov
push
into
and
mov
dec
cmpsb
or
mov
mov
test
sbb
testb
jne
and
dec
or
aam
addr16
dec
jae
add
sub
cmpsb
and
inc
aas
mov
dec
out
lea
or
adc
sti
push
icebp
add
fs
mov
ret
icebp
popa
mov
inc
movsl
add
scas
sarb
cli
fsub
inc
stos
scas
mov
mov
mov
repz
add
clc
sbb
jbe
pop
mov
cmp
out
adc
cli
add
movsb
sub
mov
push
out
dec
sbb
out
dec
adc
lds
out
xor
sti
aad
xchg
push
xchg
mov
jmp
aas
sahf
sbb
fs
stos
add
sbb
or
loope
les
inc
lcall
mov
sub
and
test
mov
jmp
shrb
adc
sbb
mov
das
xlat
adc
cwtl
push
lods
cli
mov
out
out
xor
int3
notl
xchg
push
add
push
scas
es
pop
test
xchg
mov
fcmovne
repnz
sub
xor
fwait
jno
mov
lds
push
mov
outsb
test
outsb
dec
sub
loop
dec
jge
dec
aaa
sahf
leave
fisttps
shl
test
repz
mov
stos
inc
loope
cmp
xor
xchg
cs
testl
jp
mov
push
call
mov
es
jae
int3
int3
or
sub
jno
sahf
pop
mov
cltd
leave
adc
iret
scas
test
mov
inc
xchg
xchg
testb
mov
loope
out
pop
sbb
xor
xor
cmpsl
cmc
test
ficomps
jne
jl
and
cmp
mov
shl
jle
sahf
int3
add
inc
dec
lods
in
mov
and
sub
cmp
test
mov
pop
in
jg
mov
out
xchg
mov
nop
test
add
jecxz,pn
repnz
dec
jne
out
in
xchg
test
out
enter
movsl
dec
mov
xor
shrl
sub
ja
inc
int3
lret
mov
inc
sub
and
mov
xlat
out
mov
push
push
nop
das
outsl
push
out
mov
sbb
mov
decb
mov
int3
jbe
pushf
inc
lods
adc
iret
jns
pop
xor
repnz
xchg
lret
xchg
das
adc
aaa
cltd
xchg
cmp
jle
push
mov
mov
fcmove
or
mov
jp
js
mov
shl
or
test
call
sub
lock
cmpsl
pop
push
pop
inc
adcl
mov
xchg
jecxz
jbe
stos
inc
inc
in
adc
fisubrs
mov
subb
mov
adcb
in
cmp
clc
les
jge
mov
sub
pop
sbb
stos
dec
adc
mov
and
je
ret
adc
orl
mov
lahf
or
jnp
aaa
push
fnstsw
adcb
fildll
adc
inc
icebp
jae
mov
out
aam
and
pop
lods
mov
mov
lds
xor
push
inc
cmp
test
data16
iret
push
cmpsb
xor
addr16
pop
sbb
shr
scas
pop
int
push
imul
cli
pop
or
int3
fstl
nop
movsl
mov
or
xchg
dec
mov
jnp
add
jb
pop
mov
inc
inc
lahf
adcl
push
outsb
cmp
rcr
dec
mov
imul
push
ret
flds
pop
jb
sarl
cltd
adc
cs
fnsave
add
and
push
dec
mov
call
out
add
in
addb
mov
mov
aam
iret
mov
inc
pop
rolb
push
dec
fsubr
pop
cld
repz
pop
adc
idivl
inc
jmp
xor
popa
mov
jns
int
lea
pop
stos
fildl
push
rorl
pushf
jno
add
mov
std
add
pop
mov
out
pop
jg
xor
ret
sub
inc
add
sbb
mov
xchg
and
or
push
dec
lea
fs
push
xchg
push
js
push
int3
push
loop
int
cmp
sar
mov
xor
cli
pop
ss
jmp
adc
and
jecxz
pop
xor
mov
and
push
test
mov
push
cli
in
je
xor
sub
mov
lods
push
clc
imul
ljmp
call
inc
dec
test
sbb
pop
aaa
lret
xchg
and
daa
lret
aaa
in
movsb
sbb
fldcw
imul
sub
scas
loop
sbb
scas
add
push
and
jne
sbb
repz
xchg
mov
add
mov
loope
fistl
outsb
xchg
cld
mov
outsl
popa
adc
out
ss
xor
movsl
cmp
jae
dec
push
jle
mov
xchg
and
mov
inc
std
fsts
js
pop
outsl
addr16
cmp
adc
testl
insb
or
imull
jmp
fisubrl
cmp
mov
pushf
inc
cmp
sti
pushf
scas
out
bnd
ds
and
in
jecxz
mov
je
mov
test
into
pop
popa
pop
pop
pop
mov
dec
pop
gs
pop
add
popa
inc
adc
cmp
push
adc
ret
outsb
push
jmp
jnp
outsb
xchg
inc
push
and
jecxz
mov
mov
xor
cmp
roll
mov
pusha
cmc
mov
fnstcw
xchg
mov
sub
adc
iret
pop
xor
push
mov
pop
sahf
popl
mov
sub
fincstp
js
jnp
sbb
movsb
xor
sub
cltd
loop
sbb
and
adc
pusha
xor
push
movsb
ljmp
aam
fidivrs
lahf
and
dec
test
je
test
and
mov
sub
arpl
pop
cmp
shrb
inc
sbb
xor
popf
dec
add
stos
sbb
popa
fildll
mov
in
lret
aam
jecxz
cli
mov
and
stos
lcall
cld
mov
shll
rcrl
add
stc
repnz
outsb
cmp
and
push
pop
ljmp
sbb
mov
std
ljmp
adc
xchg
in
mov
jnp
jl
pop
ficomps
das
fsubl
rclb
mov
clc
shrb
mov
lcall
es
ss
movsl
push
add
shll
movsb
icebp
test
sub
nop
add
loopne
jmp
sbb
cltd
repnz
cmp
xor
popf
mov
aad
or
xchg
cld
fistpll
cli
out
in
into
lds
add
mov
xlat
inc
push
mov
push
xor
xchg
jmp
push
aad
stc
in
cmpsl
lcall
scas
xchg
inc
jle
imul
adc
insl
cmpsb
push
inc
js
adc
movsb
xchg
repnz
inc
in
lods
repnz
lahf
fwait
or
fdivs
push
je
add
int
orl
das
jg
test
inc
cwtl
movl
push
int
adc
adc
imul
mov
mov
lea
mov
sub
sub
cmp
ret
push
fs
dec
adc
sahf
into
jl
aaa
cwtl
or
jnp
pop
ljmp
xchg
dec
sahf
mov
inc
ficoml
jo
jp
ljmp
mov
loope
addb
inc
stos
add
es
out
mov
sbbb
push
iret
adc
mov
lds
outsb
jno
pop
sti
jg
fwait
sub
dec
pop
mov
les
outsb
inc
mov
mov
add
mov
lcall
aaa
insl
mov
jae
pushf
movsb
pop
enter
mov
jge
xor
fisubl
jne
dec
cmpsb
sarl
sbb
inc
leave
cmpsb
jns
pop
sbb
jbe
nop
dec
rclb
aam
rcll
jb
cs
sti
dec
mov
mov
fwait
dec
jo
add
rorb
frstor
dec
xor
push
jb
add
jle
cmpb
addb
icebp
cmp
push
mov
out
mov
jge
cmp
jge
push
in
sti
xchg
int
fiaddl
in
mov
or
xor
pop
jnp
fldcw
cmp
inc
jo
push
xchg
dec
arpl
pop
mov
or
mov
dec
imul
shl
pusha
fnsetpm(287
xchg
loopne
sub
add
sarb
mov
xchg
leave
adc
adc
lcall
cmp
dec
dec
dec
daa
cmpb
mov
pop
adc
sbb
movsb
mov
cld
adc
sub
jecxz
in
les
stc
in
shl
mov
roll
cmc
xchg
pop
pop
pop
pop
decb
push
loop
in
inc
inc
xor
ja
jb
mov
jge
or
repnz
leave
insb
sbb
xchg
lret
sub
sarb
mov
sub
mov
xchg
jo
ficompl
rcll
jl
add
cmp
push
dec
mov
inc
sub
mov
mov
mov
inc
pop
cltd
outsl
sbb
pop
fucomp
jae
loopne
cld
pop
les
sbb
xor
and
sub
dec
lds
test
adc
jb
or
and
ror
jg
stc
sbb
cmp
push
in
fdivrs
mov
mov
sbb
jmp
dec
xchg
cs
or
push
dec
pusha
sub
pop
loopne
decl
inc
cmp
lds
push
iret
clc
mov
or
ret
inc
aad
jp
js
mov
rorl
mov
and
movsb
mov
and
and
xchg
push
mov
lods
movl
dec
in
stos
aam
xchg
xchg
enter
sub
jno
aam
bound
push
push
sbb
sbb
jb
xchg
mov
xchg
nop
jp
xchg
pop
jno
mov
mov
subb
dec
fs
push
jno
mov
sarl
xchg
cmp
cli
jo
inc
mov
mov
es
fsub
push
dec
or
dec
sbb
and
mov
xor
mov
arpl
daa
setns
scas
sbb
stc
stos
and
je
lcall
mov
scas
cld
dec
and
and
cmpsb
and
xchg
pusha
outsb
aad
push
adc
add
mov
xchg
movsb
loopne
mov
sbb
push
pusha
mov
jge
sbb
sbb
cltd
cs
mov
lret
fsubrs
push
add
cwtl
lods
push
mov
push
out
test
ficomps
test
clc
mov
mov
jb
jge
pop
mov
or
lods
movsl
iret
xchg
enter
popf
mov
stc
xchg
jecxz
aas
popa
test
jmp
pop
mov
sbb
adc
and
cmpsl
and
jnp
push
lods
and
fs
mov
push
xor
sbb
pop
cmc
out
mov
adc
mov
mov
ljmp
or
mov
mov
scas
cmp
push
jl
stos
sub
push
pop
push
movb
mov
jns
push
mov
cwtl
dec
pop
or
movsl
mov
es
andl
sbb
mov
jno
jnp
mov
test
std
lods
sbb
fninit
and
or
dec
mov
test
shrl
inc
xchg
push
cld
fs
xchg
sub
lahf
jle
or
push
sub
mov
dec
cmp
dec
push
lea
movsb
cmc
jmp
pop
pop
sub
ret
pushf
sti
lahf
fs
lds
push
ljmp
or
xchg
ret
popf
add
ljmp
dec
cltd
mov
jle
lds
adc
aad
dec
fcoms
jns
jg
nop
sbbb
ja
and
dec
pop
mov
mov
sbb
dec
xlat
or
mov
cmpsb
leave
ljmp
or
sbb
add
pop
ret
cmpsl
and
and
xchg
pop
push
push
xchg
sub
pop
dec
push
inc
lahf
cmpsb
cmpsb
lret
fwait
cmp
jmp
fcoms
ret
pop
pop
pop
pop
pop
rorb
xchg
loope
xorb
lahf
fistl
push
cmc
aam
cmp
cmp
lret
push
dec
arpl
inc
cwtl
gs
jae
adc
repnz
mov
push
iret
das
in
int
sub
ljmp
sbb
fcmovne
lock
inc
push
add
rol
xchg
xchg
das
cmpsl
fcompl
dec
xchg
inc
fdivrl
dec
adc
dec
sbb
test
ret
popf
mov
shrl
jmp
xchg
or
jl
cwtl
mov
mov
xchg
mov
lret
lea
push
pop
jae
cmp
xor
loopne
pop
repnz
movsl
mov
mov
aas
dec
int3
inc
inc
mov
cwtl
inc
or
daa
xchg
sbb
jl
adc
inc
repz
ror
xchg
push
sti
mov
mov
clc
addr16
enter
mov
in
pop
cld
sbb
cmc
and
xchg
nop/reserved
inc
cwtl
push
adc
pop
push
out
mov
or
and
lds
hlt
lods
sbb
test
sbb
lret
dec
mov
aam
xchg
aas
je
jge
add
xchg
pop
pop
insl
rclb
movsb
push
xor
adc
xor
pusha
jge
push
mov
push
cmp
clc
je
jp
cmc
sub
test
bound
xchg
sbb
fmuls
mov
dec
shl
push
cltd
jb
fs
xor
sub
cmp
lret
mov
repz
cmpsb
cmp
outsl
push
rorb
dec
lods
or
test
outsl
mov
mov
jle
and
jo
mov
dec
pop
mov
repnz
mov
ficomps
fwait
sahf
add
cltd
out
lock
push
adc
pusha
dec
dec
sub
arpl
das
push
mov
pop
mov
inc
paddd
mov
dec
hlt
jecxz
ljmp
or
and
shrb
fstpt
stc
xchg
xor
cmp
loopne
pop
imul
inc
rorl
jae
aad
inc
orb
pop
stos
and
mov
mov
imul
pop
push
out
adc
push
add
addr16
test
loop
sub
out
jge
test
mov
pop
push
mov
xchg
lahf
ljmp
int
sub
push
cmp
jle
or
inc
sub
popa
pop
push
pop
rorb
pusha
popa
pop
daa
lahf
mov
jp
sbb
add
std
test
rcrl
jmp
into
int3
fwait
lret
clc
inc
arpl
add
in
cs
jb
out
push
pop
outsl
jo
add
sub
and
xor
jne
int3
xchg
xorb
jecxz
xchg
mov
push
outsl
sub
xchg
dec
xchg
dec
icebp
aam
ret
aam
daa
jl
adc
adc
aas
xor
dec
in
out
outsl
aaa
or
test
adc
push
mov
sub
mov
movsb
cmpsl
dec
icebp
out
sahf
lock
ds
cld
cs
mov
cmp
mov
sar
xlat
popf
xor
push
popa
clc
mov
arpl
dec
xchg
xchg
and
jmp
movsb
mov
cli
sbb
outsb
adc
xor
or
lods
mov
movsl
rorb
lret
imul
out
dec
adc
sbb
test
jbe
push
inc
das
int
es
jb
pop
or
popf
in
icebp
int3
enter
push
ror
pusha
dec
mov
fcmovnu
dec
stos
xchg
ss
fidivs
scas
out
sub
hlt
pusha
std
adc
int3
adc
outsb
fsubl
jge
movsl
sub
inc
push
or
xor
jl
adc
daa
push
xchg
xchg
mov
pop
scas
mov
adc
cmp
and
fadd
dec
lods
pop
roll
or
xor
jecxz
cmp
cmpsb
fiadds
data16
aaa
jns
iret
adc
add
lahf
push
popl
jecxz
inc
call
loop
sti
aaa
and
push
out
ja
std
jl
rcl
jle
cmpsb
pop
cmp
ficomps
inc
pop
sbb
bound
js
stc
and
pop
mov
les
rorl
ret
lea
jle
mov
dec
repnz
lea
arpl
mov
cmp
jae
mov
fimuls
cmp
push
and
popf
cmpsb
xchg
lock
or
mov
fsubl
stos
jns
xor
inc
jbe
inc
jo
pushl
pop
xor
dec
push
jno
push
fs
hlt
lahf
mov
inc
push
lods
pop
nop
lret
das
imul
cld
xor
scas
jbe
jns
pop
jmp
in
lahf
xlat
push
outsl
mov
into
cmpsl
add
incb
lods
mov
out
fsub
or
push
mov
sbb
sub
test
arpl
jns
sbb
jge
sarb
push
pop
cmpsb
and
imul
pop
sbb
adc
fwait
test
xchg
in
aaa
jge
out
lcall
outsl
push
mov
mov
gs
cmovp
mov
or
lods
sbb
ffree
test
aas
mov
push
ss
scas
push
xor
les
cmp
xor
jp
xchg
pop
ror
mov
in
xor
frstor
rcrb
pop
cmp
push
jne
daa
or
and
sbb
dec
cmp
xor
xor
leave
sub
sbb
pusha
icebp
mov
pop
out
aam
in
icebp
adc
sbb
aaa
pop
pop
pop
addr16
mov
rcr
test
xlat
loopne
push
shll
orl
outsl
cs
pop
xchg
aam
lcall
loope
out
add
mov
mov
leave
dec
ds
push
mov
pusha
xchg
push
test
out
testl
pop
shrb
xor
cmp
xchg
je
test
stos
into
sub
sub
and
xor
test
js
dec
push
out
bound
sbb
cmp
or
les
xchg
fsubs
bound
movsl
sub
xchg
scas
repz
jns
or
xchg
adc
filds
addb
in
gs
dec
mov
enter
fildl
cmpb
jle
adcb
sub
fwait
pop
pop
mov
xchg
add
loopne
adc
inc
orl
imul
sub
pop
cwtl
add
xchg
cmp
loopne
aaa
dec
mov
pop
and
xchg
adc
imul
mov
add
gs
cli
adc
xchg
rclb
inc
lret
jecxz
scas
mov
out
test
fucom
mov
pop
out
into
pop
iret
jecxz
inc
push
subb
and
pop
cmc
ret
scas
pop
sti
test
mov
and
pop
out
daa
mov
sti
scas
jge
sbb
shrl
jo
stos
aam
ja
roll
lods
jecxz
mov
push
aad
or
out
xchg
mov
movl
inc
dec
sbb
dec
in
sub
pop
sub
lret
aas
sbb
fsubs
xor
sbb
test
dec
dec
lds
push
dec
inc
xchg
jmp
sbb
mov
icebp
mov
shr
test
movsb
jle
jb
push
mov
mov
xchg
dec
mov
mov
mov
mov
fidivrl
shll
ror
imull
outsl
mov
shrb
cld
push
push
pop
push
in
adc
and
loopne
pusha
and
repnz
mov
fdiv
mov
sub
jno
cli
push
xor
sbb
dec
addl
in
mov
or
add
jmp
mov
stc
loop
adc
lds
stos
sub
pop
mov
in
push
cmp
and
jge
dec
sbb
les
in
sub
add
lahf
pop
in
xor
lahf
repnz
mov
cld
pop
push
adc
clc
sub
fwait
inc
cs
idivl
scas
cmp
ss
mov
and
mov
movsb
cmpsl
mov
into
pop
xchg
das
les
push
cmpsb
insl
pop
push
mov
ss
pop
inc
and
and
addr16
mov
jo
mov
ljmp
aas
mov
add
ret
into
sbb
adc
pop
mov
imul
push
sti
sub
jae
xchg
addr16
rolb
sti
dec
mov
inc
out
push
fbld
lahf
jl
sti
int3
dec
testl
out
out
cmpsb
adc
and
iret
inc
xchg
or
dec
iret
cmp
adc
and
add
inc
pop
mov
aas
push
andb
mov
pop
xor
ds
out
aam
and
iret
jb
add
pop
pushf
adc
xchg
shlb
nop
movsb
push
push
push
adc
sub
call
mov
and
daa
cmp
mov
gs
out
hlt
sub
mov
lods
imul
outsl
inc
mov
sub
fisubrl
aaa
mov
inc
sarb
lret
and
mov
sub
add
jp
rcrb
push
loopne
sbb
add
icebp
jnp
cmpsl
sub
pop
ljmp
lahf
in
jae
mov
out
pop
xchg
int
push
cltd
ss
pushf
adc
pop
mov
cmp
out
xchg
in
ljmp
push
jge
add
pop
xor
push
push
push
fst
mov
pop
hlt
cmp
fildl
aad
das
sahf
test
ret
movsl
shrl
xor
into
mov
andl
daa
cmpsb
pop
inc
lahf
mov
jp
test
add
xor
cld
mov
xlat
icebp
xorl
cmp
push
mov
or
adc
bound
pop
ret
xor
pop
sbb
or
outsb
in
push
cmpsb
pop
scas
jge
ret
mov
leave
xchg
sbb
mov
int3
jecxz
fs
js
inc
call
push
mov
add
dec
imul
xchg
fs
xchg
loopne
jae
out
xchg
or
mov
cmp
inc
sbb
out
sub
adc
pop
push
shlb
mov
add
pusha
mov
mov
popf
mov
push
mov
cmp
fadds
push
dec
inc
scas
aam
pop
pop
sub
dec
xchg
cmp
inc
xchg
jge
in
dec
adcb
outsb
mov
dec
test
repnz
adc
test
test
or
cwtl
pushf
jecxz
test
mov
sahf
out
push
pop
inc
mov
sub
mov
jmp
jg
mov
sub
and
aaa
enter
mov
stc
cwtl
sbb
mov
push
bound
into
jge
push
lods
fdivp
mov
pop
jg
mov
push
and
int3
jg
push
pop
or
les
cs
in
mov
fwait
pop
mov
push
test
sbbb
push
rorl
repz
popf
adc
inc
inc
sub
or
out
adc
daa
out
insb
add
sbb
into
adc
pop
mov
test
mov
pushf
ffreep
js
out
shl
pop
sbb
push
mov
or
rolb
data16
ds
adc
push
lcall
insl
xor
jbe
mov
gs
add
fcmovb
mov
loop
test
repz
mov
xchg
pop
popf
pushl
inc
and
fstpt
out
lock
stos
pop
mov
or
jb
dec
push
rorl
dec
push
xor
or
cltd
sahf
add
aaa
into
xor
out
mov
mov
and
sub
xor
ds
outsb
insb
andl
scas
dec
lahf
jo
insb
pop
out
cmpsb
or
mov
push
loope
lret
push
mov
push
fs
test
pop
mov
cmpsb
ret
cli
inc
ret
out
nop
pop
comiss
f2xm1
dec
dec
movb
imul
out
xchg
outsb
cmp
mov
in
jle
jp
ffreep
xchg
scas
lcall
jmp
into
lods
adc
addr16
or
or
push
add
iret
mov
mov
mov
fnstenv
or
pushl
xchg
pop
jge
push
inc
dec
pop
cmp
mov
sbb
dec
xor
pop
sub
enter
cmpsb
sbb
loopne
std
jp
xchg
sbb
int3
adc
outsb
mov
loope
aaa
into
shll
mov
sbb
sub
push
aaa
cwtl
mov
add
addr16
xor
outsl
push
fstps
xchg
cmp
jp
cmc
or
gs
and
mov
roll
dec
sbb
lds
mov
fstl
sbb
popa
lahf
xor
sub
aas
int3
mov
push
mov
out
ljmp
jge
in
fmul
push
popa
jne
ficomps
cltd
inc
mov
insb
fnstenv
cltd
lods
daa
inc
je
mov
in
cmp
cltd
sbb
push
icebp
repz
jl
sbb
inc
lds
loop
jne
idivl
sbb
dec
repnz
jne
xchg
popa
jae
jmp
stos
add
push
mov
push
push
inc
ret
and
outsb
xor
inc
jnp
xchg
cld
sti
nop
jge
jmp
dec
or
jmp
jp
mov
xor
or
jnp
mov
adc
in
jle
sbb
inc
sbb
call
push
sbb
lods
mull
inc
mov
push
sub
xor
dec
cltd
in
inc
pop
jae
mov
jb
shlb
mov
out
ja
sub
pop
push
test
cmp
push
adc
cli
dec
loope
xor
decb
scas
les
push
aad
jl
mov
push
lahf
aas
cli
jns
mov
and
je
stos
xlat
jo
add
sbb
jp
mov
sbb
xchg
or
das
test
lahf
inc
jmp
or
add
adc
stos
fxch
lds
rep
cmpsl
repnz
rolb
jno
insl
ficomps
xor
stos
nop
in
push
push
mov
loopne
and
adc
xchg
int3
inc
lea
inc
mov
jecxz
ret
aaa
mov
testb
push
cwtl
mov
test
and
pop
or
cs
xchg
push
and
mov
and
mov
aaa
sub
cmpsb
xor
movsb
imul
inc
int3
ljmp
insl
lcall
pop
popl
clc
call
pop
inc
leave
cmpsl
movsb
and
jge
pop
or
xchg
es
stos
dec
pop
xchg
jecxz
lods
dec
aam
lret
xor
rolb
add
xor
insw
push
adc
xchg
out
cmpsb
mov
test
add
xchg
pop
frstor
loopne
js
sbbl
rcl
push
or
in
push
daa
inc
int3
enter
xor
lds
imul
push
insb
shll
push
or
ficompl
leave
adc
lret
les
addr16
and
in
mov
jne
dec
inc
xchg
xorb
stc
mov
add
scas
or
xchg
cltd
sub
mov
aad
push
into
popf
rorl
sti
lds
cmp
dec
inc
scas
and
adc
adc
inc
test
aaa
xchg
jl
stos
mov
jge
dec
jg
nop
push
mov
jb
shl
addr16
pop
pop
shl
fsubrs
mov
lret
jg
dec
dec
in
push
popf
icebp
dec
xlat
into
jnp
sti
shlb
cmp
or
or
push
out
in
fmulp
arpl
jno
insb
mov
shrb
mov
les
mov
dec
ljmp
pop
pop
cmp
jb
push
cmpsb
dec
and
in
mov
cli
aad
mov
cmp
dec
fisttpl
add
jl
sbb
iret
loopne
les
das
dec
or
test
fdivrs
adc
xchg
dec
or
imul
adc
fistps
mov
bound
movb
push
jb
add
sbb
adc
cmp
sbb
mov
pop
rcl
enter
mov
cmp
popa
xchg
push
pop
xchg
mov
add
xchg
dec
fcmovnu
inc
lds
inc
or
sub
out
das
jae
mov
mov
jne
aaa
icebp
adc
ds
jg
jne
mov
in
fmuls
andb
sbb
les
negb
fsts
xchg
outsl
pop
std
fsts
lcall
aaa
call
dec
out
in
data16
inc
jge
cmp
pop
push
imul
rorb
std
inc
mov
xchg
fsubs
mov
and
mov
repnz
aam
dec
testb
mov
cmp
hlt
in
imul
int
out
loop
dec
xor
pusha
mov
mov
cmp
arpl
dec
dec
dec
lcall
bound
icebp
push
push
mov
xlat
sbb
sti
mov
adc
or
outsb
add
mov
loopne
dec
push
test
jns
popf
popa
adc
in
xor
jle
jmp
jecxz
xchg
sarl
jne
jnp
cmpb
add
pop
repz
add
repz
negb
roll
cs
mov
cmp
inc
mov
insb
pusha
rorb
sti
cmp
mov
insb
or
je
cli
pop
sbb
out
cltd
in
jo
arpl
inc
cmc
jl
adcb
cmp
jl
cwtl
add
pop
cmp
adc
or
int
inc
adc
dec
pop
filds
pusha
or
gs
loopne
mov
lods
mov
push
pop
out
dec
addb
mov
sbb
pop
inc
rclb
fldl
push
sub
pop
push
ret
pop
jbe
scas
ror
aad
adc
aaa
or
xchg
dec
int
test
xchg
xchg
mov
add
mov
sbb
xor
fsubrl
rcrl
in
dec
xlat
orl
imul
sub
push
stos
lcall
leave
aam
jecxz
mov
sarb
mov
sub
push
cli
insl
outsl
pop
jae
ret
xor
pop
dec
mov
push
ljmp
call
dec
inc
aam
add
fidivl
shlb
pop
enter
popl
mov
cld
xchg
xor
ret
xor
xlat
push
sub
stos
out
jnp
dec
mov
ret
callw
shll
jmp
out
mov
subb
lds
out
push
inc
cmc
sahf
test
add
sub
adc
imul
xchg
les
jmp
std
and
ftst
mov
rorl
test
sub
aas
push
sti
jb
xor
pop
jae
sub
push
aaa
add
jbe
and
jno
leave
cmc
add
push
xchg
xor
sbb
cmp
push
cmp
mov
and
push
ret
cmp
out
xor
sub
pop
jmp
icebp
out
stos
xor
mov
int3
xchg
add
pop
ds
jnp
xchg
adc
pop
iret
add
push
sbb
enter
shrl
nop
movsl
inc
addr16
mov
or
scas
jmp
mov
hlt
mov
add
cmp
cmpsb
mov
pop
sbb
push
scas
out
cmp
sbb
sub
mov
test
or
hlt
pop
cwtl
movsl
movsb
inc
inc
sub
pop
inc
cmp
adc
mov
xchg
push
xchg
outsb
imul
ljmp
mov
shrl
xchg
dec
xchg
and
mov
pop
inc
push
sub
and
popa
movsb
shll
dec
xor
wrmsr
jmpw
jg
nop
ljmp
push
adc
xor
cmp
jns
movsb
cmp
cmp
ficoml
sarb
and
mov
arpl
dec
sahf
sub
int3
ret
xchg
dec
jmp
dec
ret
inc
and
rolb
or
sbbb
dec
mov
sub
pop
mov
fadds
mov
or
add
fsub
sub
inc
xchg
test
lods
out
jne
xchg
lcall
test
out
jbe
sbb
push
mov
adc
ljmp
and
sub
adc
into
lock
add
cmp
stos
lret
add
mov
scas
push
lock
lret
lock
mov
and
inc
das
fs
nop
push
popa
pop
clc
popa
shll
sub
mov
pusha
push
je
pop
cmp
cmp
add
dec
jne
push
adc
ljmp
ljmp
popf
insl
clc
lods
cmc
xor
inc
sti
mov
and
mov
mov
movsl
adcl
dec
fldl
sub
xor
dec
fadd
shrb
sbb
push
std
adc
xchg
int
or
jne
jnp
dec
stos
out
mov
into
ljmp
scas
jo
push
gs
ds
fst
xor
cmp
and
sbb
mov
mov
in
push
add
ss
test
pop
cmp
mov
pop
or
push
outsl
imul
mov
jmp
mov
scas
lds
pop
pop
out
sysret
push
shrb
mov
fsubs
and
push
and
test
jno
pop
outsl
xor
cmp
lds
mov
ss
inc
cmp
sub
mov
and
mov
and
sub
jp
orb
xchg
mov
inc
adc
in
retw
xor
xchg
movsl
shl
movsl
hlt
jno
push
fisubrs
jecxz
fmulp
lds
loop
and
adc
jns
not
adc
cmp
shlb
cmpsl
adc
ss
cmp
cltd
mov
fisttpll
jnp
aas
pop
jb
pusha
push
out
cmp
aam
ljmp
loop
mov
and
loop
xchg
or
xchg
mov
push
cmpsb
in
push
mov
jae
and
int3
mov
add
call
push
jmp
insb
sbb
xchg
cmpl
ror
dec
mov
icebp
add
add
test
data16
xor
dec
dec
sbb
aad
fwait
xor
jmp
lods
push
fistl
into
add
pop
js
rorl
mov
push
xor
adc
dec
or
subb
jp
stos
push
sub
bound
mov
push
and
out
cli
out
xchg
sub
popa
jnp
cmp
push
xchg
mov
jmp
ficompl
sbb
shll
ficoms
and
push
imul
sarb
in
jge
std
jp
jl
popa
mov
jp
jo
pop
push
xorl
mov
rcl
mov
in
mov
jmp
enter
mov
jno
mov
in
shl
bound
or
ljmp
push
jl
rcll
das
rcl
adc
push
fstpl
outsb
icebp
std
mov
xchg
rorl
mov
or
and
test
mov
fisubrl
cld
or
js
dec
pop
sbb
fistpll
adc
scas
repnz
pop
nopl
stos
inc
into
loop
sbb
push
arpl
mov
movsb
xor
adc
dec
test
lea
sub
or
shll
xlat
ret
cmp
movsl
add
inc
ds
pop
jle
iret
dec
roll
jo
push
outsl
dec
outsb
out
repz
jnp
cwtl
mov
mov
test
add
and
mov
pop
sbb
repz
gs
shl
jecxz
aam
or
fs
scas
jecxz
ret
jns
pop
arpl
mov
xchg
dec
cmp
repz
lret
movsb
add
lahf
pusha
xlat
inc
jle
aad
adc
jge
shr
cli
ret
out
add
aam
sbb
popa
pop
arpl
test
mov
cmp
lods
int3
icebp
mov
in
enter
pusha
inc
popf
pop
enter
arpl
repnz
pop
push
push
loopne
ret
dec
outsb
ljmp
add
pop
jecxz
pop
cwtl
in
pop
pop
or
mov
cmp
loop
fcmovnbe
adc
insb
sbb
adc
and
daa
dec
iret
add
movsl
bound
pop
mov
mov
dec
sbb
jg
ret
decl
mov
jb
popf
stos
sbb
sub
mov
addr16
out
inc
sti
inc
ss
shlb
adc
pop
add
ja
mull
fs
mov
nop
rclb
add
push
in
sbb
sbb
inc
cmpsl
jp
mov
not
fcoms
rcr
mov
pop
adc
pop
enter
clc
jo
roll
loope
repz
in
jnp
xchg
dec
cltd
popa
mov
jp
push
or
mov
sub
dec
fstps
push
icebp
pop
dec
pusha
outsl
jne
xorl
jp
insb
imul
in
mov
mov
ret
and
lahf
xorl
and
mov
fs
xor
lret
mov
lcall
fadds
cld
jo
fcmovbe
jno
aas
and
add
es
sahf
dec
push
repz
mov
xor
cltd
movsb
pop
daa
and
inc
jecxz
pop
scas
mov
mov
cmp
inc
sub
sahf
out
addl
sub
out
ljmp
pop
fisubrs
mov
xchg
add
fiadds
mov
insl
sti
in
clc
cmp
mov
and
fwait
or
movsb
xchg
mov
mov
mov
jbe
icebp
sbb
outsl
js
adc
sahf
pop
adc
push
adc
lods
mov
cmc
push
int3
and
sahf
xchg
jne
lods
xchg
push
popf
push
hlt
xchg
loopne
xchg
add
call
mov
mov
rcll
or
mov
imul
sbb
dec
dec
xchg
nop
ret
and
stc
jl
mov
dec
daa
jge
mov
addb
pop
xchg
pop
das
fnstcw
mov
mov
pushf
push
stos
add
mov
lea
lahf
iret
mov
hlt
xchg
inc
inc
xor
xchg
sahf
sub
test
testl
sbb
sti
leave
pop
or
cmp
xor
xor
add
jnp
es
xchg
out
mul
add
jecxz
jbe
in
pop
add
mov
stos
jae
adc
or
dec
popa
mov
push
lods
scas
jmp
or
jmp
push
test
jle
xor
mov
push
int
jo
fninit
sbbl
mov
cltd
mov
xchg
mov
addr16
leave
outsb
addr16
ds
sub
sahf
repz
xchg
fadds
in
xchg
lcall
rcll
fxch
popf
pusha
mov
lods
xchg
and
push
pop
js
out
mov
xchg
mov
mov
cmc
sub
jno
jge
fdivs
add
mov
sbb
lock
in
jge
add
outsb
fwait
dec
mov
jno
imul
jle
push
mov
jge
jb
scas
push
mov
in
mov
sbb
scas
adc
bound
inc
in
stc
int3
pop
fsubl
mov
mov
addr16
push
cmpsl
mov
cmpsl
jbe
mov
pop
jno
xor
addb
push
leave
or
fs
jl
daa
push
add
rol
inc
push
es
jp
hlt
cli
push
int
inc
es
and
les
jno
es
pushf
jecxz
cmpsl
jp
das
shrb
in
rcrl
scas
into
in
jge
sbb
ret
lods
mov
mov
js
and
adc
mov
mov
repz
and
mov
ffree
adc
xor
and
mov
test
outsl
cmc
dec
leave
cmp
hlt
lods
inc
in
pop
data16
pop
or
mov
lock
add
push
cltd
lods
add
push
test
xchg
clc
dec
jge
mov
pop
sbb
clc
push
mov
xchg
sbb
or
push
roll
test
lahf
bndldx
push
xchg
xchg
out
add
cmpsl
jp
add
aam
faddl
mov
push
push
mov
pop
dec
bound
push
and
inc
loope
and
inc
mov
leave
xchg
sbb
and
mov
sub
sbb
cmp
incl
hlt
xorl
dec
out
push
lcall
int
xchg
lds
cmp
je
lods
dec
jae
fwait
inc
or
cmp
call
lret
imul
popa
or
lds
lahf
jg
mov
push
xor
push
push
xchg
add
pushf
mov
adc
push
dec
dec
outsl
adc
pop
xor
pusha
and
cmpsb
mov
push
call
pop
jp
jns
jne
xor
iret
cmpsb
arpl
sbb
inc
popa
sbb
pushf
sarl
xor
cmovs
test
jecxz
xor
mov
iret
insb
xchg
orl
add
mov
mov
ret
inc
mov
mov
mov
jnp
or
loope
js
and
dec
pop
cli
repnz
iret
mov
jl,pn
arpl
lret
sub
adc
mov
das
mov
dec
mov
pop
int
lcall
out
mov
in
les
push
cmp
call
in
mov
mov
adc
jnp
mov
sub
push
lea
jae
inc
jbe
je
outsb
sar
sub
sbb
dec
outsb
jge
psraw
push
ret
ds
ljmp
lock
sti
sub
dec
adc
xchg
push
adc
mov
stc
cltd
pop
push
faddl
stos
adc
xor
push
arpl
or
xor
int
rorb
pop
and
mov
enter
lods
pop
daa
mov
mov
add
fidivrs
imul
xor
neg
rcrb
adcl
pop
lea
jnp
dec
push
jae
fcmovb
insb
pop
popa
js
mov
and
mov
jmp
cld
repz
xor
das
scas
mov
sbb
or
iret
mov
mov
and
mov
sbb
xchg
sub
neg
sub
imull
xchg
inc
dec
es
cmp
movsl
sub
out
aaa
or
and
sub
cmp
add
pop
inc
sbb
mov
dec
sarl
in
jno
mov
scas
push
roll
xor
out
lods
push
jb
inc
pushf
and
xor
or
dec
jne
jo
and
fldenv
js
imulb
sub
inc
je
pop
ret
test
mov
ficompl
stos
test
test
daa
add
sub
cmp
in
xor
inc
lea
pop
orl
sbb
fisubrl
mov
arpl
lret
push
enter
mov
xchg
adc
xor
push
jl
mov
dec
add
hlt
jg
lcall
fsub
jb
mov
pop
jle
sub
scas
pop
jne
mov
outsb
mov
shlb
mov
fs
fwait
xor
shll
pop
pop
loop
xor
xchg
pop
sub
imul
pushf
mov
push
pop
mov
xchg
jg
cs
sbb
test
test
cwtl
mov
std
cmp
cltd
pop
or
fs
scas
jmp
enter
addb
fimuls
cmp
sub
pushf
lods
call
or
loope
or
or
out
loop
xchg
jg
add
mov
push
add
mov
sub
daa
adc
sub
loop
jl
lods
test
push
stos
repz
pop
dec
test
dec
enter
pop
inc
mov
xchg
push
cmpsb
pop
xchg
dec
adcl
shrl
xchg
insb
enter
ret
shll
jl
lcall
xor
mov
rorb
sub
dec
mov
mulb
pop
sbb
and
stc
add
mov
dec
xchg
leave
jbe,pt
push
mov
cld
aad
lods
int
cmc
rolb
stos
sbb
lock
fs
sub
jp
mov
cmc
cmpsl
lret
iret
je
xchg
pop
jecxz
jbe
ja
mov
popf
repnz
mov
dec
xchg
out
loopne
jne
fldl
aas
and
add
movb
adcl
push
call
fwait
cmp
lods
jb
jle
dec
fistpll
add
movsb
mov
cmpsl
outsb
mov
add
inc
sbb
push
loope
mov
adc
jp
mov
adc
je
inc
adc
xlat
cmp
ret
mov
sub
mov
dec
imulb
hlt
test
fs
push
inc
mov
fimuls
pop
shrl
mov
xor
lret
out
icebp
orl
xchg
fcomip
cmp
jbe
scas
inc
in
xchg
test
adc
imulb
leave
mov
mov
adc
stos
imul
sub
mov
add
mov
aam
iret
ret
push
insb
cmp
mov
xor
cmpb
sub
aad
test
js
jl
aas
faddl
arpl
jnp
dec
xchg
jecxz
push
add
insb
fdivrl
dec
aaa
ret
jge
xchg
jno
jbe
add
jge
mov
adc
jge
mov
outsb
addr16
popa
js
jne
lods
je
loope
add
test
jb
cwtl
cmp
cwtl
loope
mov
outsl
icebp
push
outsl
in
cmp
mov
push
push
dec
stos
fiaddl
jo
nop
and
into
pop
dec
dec
pop
push
in
pop
mov
mov
popf
xchg
mov
xor
fsts
sahf
mov
scas
sti
xchg
iret
icebp
bound
cmp
cmc
push
pop
fwait
aaa
pop
cmp
adc
add
fwait
ret
outsb
jno
jl
into
and
xor
into
push
push
mov
shrl
movsb
inc
pop
imul
insb
and
outsl
shlb
sub
mov
out
call
lret
add
cmp
addr16
pop
jo
gs
fadd
cmp
lods
lods
icebp
mov
pop
pop
jl
sbb
je
aaa
repnz
std
movb
inc
fistps
pusha
xor
xor
mov
aas
fldenv
out
push
call
push
fmuls
call
mov
cmp
mov
and
adc
adc
pop
outsl
pop
xor
lret
lret
inc
mov
sti
sbb
les
and
adc
add
mov
repz
push
or
jae
dec
xlat
in
pusha
js
test
frstor
testb
call
xchg
jne
sub
pop
shll
and
stc
fsubl
cltd
popf
in
lahf
pop
in
pop
jnp
jo
push
dec
loopne
cwtl
mov
repnz
das
shl
sub
inc
jne
lea
icebp
xor
jle
mov
mov
daa
or
cltd
stc
add
incl
test
or
imul
psubsw
or
xlat
mov
mov
xchg
jmp
mov
mov
jge
out
dec
push
and
bound
lret
std
adc
sbb
cmp
int
mov
lret
jno
inc
or
pop
ss
ja
push
icebp
jmp
xchg
xor
repnz
lret
xor
out
jg
repz
dec
rcll
and
fs
mov
push
cli
into
pop
gs
int
mov
inc
addr16
sub
push
std
lods
mov
and
push
lods
adc
pop
jecxz
mov
insl
xchg
add
je
jo
push
add
icebp
mov
fdivrs
lods
mov
inc
movsb
mov
mov
jle
mov
xlat
cmpb
add
test
mov
mov
jb
add
fnsave
popf
aas
sub
and
jo
jne
mov
or
js
in
pop
in
jns
je
xor
lds
cmp
xchg
add
cmp
cmp
adc
mov
sub
enter
lds
add
or
push
sub
scas
ja
dec
out
mov
fwait
mov
sub
ja,pn
xor
loop
das
push
and
loopne
sub
nop
test
pop
push
sub
pop
lahf
divl
inc
cmp
fstps
xor
daa
lods
xor
push
mov
push
mov
sbb
int
repnz
ja
in
hlt
mov
sbbl
sarl
fbld
pop
pop
add
rcr
aas
xchg
and
mov
aam
mov
std
dec
inc
pop
pop
mov
push
lahf
push
fsubp
push
sub
push
xchg
lret
pushf
js
cmp
jg
sbb
loopne
popa
sti
mov
add
les
scas
xlat
pushf
cli
int3
dec
cli
into
add
mov
and
sbb
jl
das
in
ds
xchg
mov
lds
xorl
lea
pop
lahf
dec
or
push
jp
adc
add
sub
cmp
sub
mov
and
lahf
jno
fidivrl
mov
data16
loop
scas
repnz
mov
mov
test
inc
xchg
lret
sub
ljmp
dec
inc
mov
sahf
inc
mov
mov
lahf
jmp
mov
or
bound
add
mov
pop
add
je
lahf
sub
movsl
dec
cmp
fwait
movsl
jo
hlt
xchg
push
outsb
mov
movsb
enter
adc
mov
nop
ret
mov
nop
pop
push
out
lahf
adc
push
sbb
jmp
adc
jbe
call
lret
fcoml
add
jmp
mull
pushf
jns
adc
lret
pop
pop
adc
bound
push
into
test
push
push
enter
jmp
ljmp
cmp
sub
loope
inc
cmpsl
fisttpl
dec
pop
rolb
stos
xor
pop
sti
cld
test
into
inc
sbb
mov
mov
inc
in
add
mov
rcrl
mov
sbb
mov
push
daa
arpl
add
lods
insl
inc
or
repz
pop
out
inc
ret
inc
lods
icebp
inc
or
dec
shll
cmp
pop
xor
adc
or
cmp
or
jp
fisttpl
mov
arpl
mov
mov
mov
das
xchg
pop
mov
outsb
xor
js
push
inc
out
or
mov
test
add
js
sti
inc
fisubrs
and
bound
cmpsb
xlat
or
mov
lret
sub
mov
cmp
rcrb
int3
cmp
repnz
les
test
cmp
out
inc
pop
cmpsl
inc
mov
mov
fwait
jo
dec
out
sbb
mov
insl
and
and
and
inc
push
adc
movsl
jecxz
push
pop
hlt
mov
or
jl
xlat
adc
inc
add
mov
lods
int3
dec
rcrb
xchg
xor
push
sbb
adc
pop
mov
mov
add
outsl
popa
dec
dec
dec
scas
mov
jg
jno
xchg
push
and
leave
clc
pop
cmp
cwtl
add
jae,pn
xchg
insl
pop
test
fcompl
inc
roll
out
mov
daa
mov
sti
int3
mov
or
imul
mov
xchg
subb
es
jae
les
pop
aad
shrl
cld
pop
jnp
sub
mov
fistl
sub
or
out
fldl
sub
dec
cltd
cs
sbb
xchg
movsl
jo
cmpsl
test
sub
in
jbe
enter
mov
movsl
ja
jno
push
sbb
mov
xlat
imulb
and
cmp
inc
or
fmul
aaa
gs
scas
mov
pop
push
pop
pop
int3
jecxz
and
call
cmpsb
fcmovnbe
int
stc
adc
aas
xchg
out
xchg
push
outsl
shlb
mov
sbb
iret
mov
rorl
mov
dec
jns
and
cmpsl
jge
out
push
inc
das
into
cmc
cld
or
inc
fcomp
int3
push
jl
inc
adc
sub
mov
enter
push
xor
cmc
pop
lods
jbe
imul
adc
inc
mov
notb
sbb
mov
cmc
cmc
in
push
fiaddl
loop
mov
bnd
fstps
imul
loope
or
lahf
pusha
inc
scas
adc
fcomps
mov
pop
push
adc
mov
pop
subl
movsb
sbb
cmp
test
jge
xor
roll
jle
loope
xor
adc
fstl
dec
js
push
pop
ret
inc
inc
dec
and
cs
outsl
imul
sub
addr16
sbb
jg
dec
jno
fcoms
push
inc
push
lods
out
adc
arpl
lahf
sbb
data16
test
mov
jns
mov
inc
lods
pop
sbb
push
pop
inc
mov
fsub
out
mov
adcb
decb
and
imul
ja
pusha
xchg
inc
mov
adc
inc
and
dec
xchg
and
xor
cld
pop
mov
aam
and
scas
rolb
cmp
leave
sub
mov
arpl
lods
xor
cli
arpl
popa
inc
inc
sub
test
scas
xor
lea
xor
mov
popa
lods
push
orb
frstor
pushf
sbb
pop
push
je
cmpsb
dec
imul
leave
out
push
fidivrl
adc
push
push
mov
out
insl
sbb
stos
and
cmp
enter
fs
xchg
add
outsb
fidivrl
push
arpl
dec
int3
inc
mov
rorb
into
int3
cmpsl
loopne
push
mov
mov
mov
mov
dec
movsl
push
or
push
sbb
addr16
rcrl
stos
mov
int3
int
sbb
push
outsl
cmp
stos
decl
xchg
mov
movsl
push
and
ja
shl
and
aas
dec
pusha
adc
adc
inc
shll
cmp
push
sub
adc
and
hlt
jg
dec
xchg
mov
pushf
sub
pop
in
aad
dec
push
add
lods
add
pop
cvtps2pi
insl
mov
mov
jl
mov
addr16
pop
mov
jge
mov
out
ljmp
push
pop
mov
sub
daa
outsl
sbb
mov
xlat
inc
sub
enter
xchg
xchg
stc
test
push
pop
push
sub
mov
ljmp
lahf
mov
cmp
push
lods
inc
aas
mov
sbb
sbb
test
scas
scas
pop
mov
push
push
sbb
adc
fs
imul
mov
mov
insb
xchg
mov
inc
movsl
adc
lock
lock
insb
aaa
adc
stos
pop
fsubrp
push
daa
aas
icebp
jbe
jle
jmp
cvtps2pd
pop
insb
add
cld
cmpsl
jbe
pop
cmpsl
cwtl
aaa
gs
jp
shll
jg
push
pusha
mov
rorl
mov
testb
add
fistpll
inc
pop
dec
mov
cmp
out
add
pop
cmp
std
xor
jo
pop
popf
pop
pusha
xorb
or
sbb
addr16
mov
je
and
adc
in
arpl
rcll
pop
aas
outsl
mov
mov
xchg
mov
dec
mov
popa
adc
enter
mov
fistpl
adc
add
cmp
scas
test
push
jp
xchg
jnp
mov
xchg
daa
jecxz
jmp
pop
and
adc
ljmp
inc
and
repnz
push
stos
ljmp
insb
mov
or
mov
wbinvd
push
sbb
inc
pusha
enter
rcl
out
inc
lods
adcb
mov
mov
outsl
movb
and
sub
into
cmpsb
mov
cmp
mov
inc
dec
mov
fbld
mov
aad
cli
xor
fadds
or
gs
out
js
aam
imul
xorl
sbbb
mov
out
xor
div
jecxz
sbb
and
stc
cmp
ficoml
sub
jle
lock
jge
fcomp
or
sbb
add
mov
daa
add
xchg
or
fildl
lods
mov
mov
and
push
xchg
add
pusha
xor
mov
xchg
mov
stos
pop
inc
cmp
adc
pop
repz
sub
lods
bound
fyl2x
or
ja
fimuls
loopne
push
orb
mov
ja
cmp
andl
imul
cmp
out
jg
je
adc
fsts
and
nop
cs
pop
jne
out
insb
sub
inc
mov
jns
mov
push
outsb
rcrb
or
loopne
pop
in
jnp
lret
mov
out
sub
scas
lret
mov
xchg
cld
je
movsl
sub
cltd
sbb
sbb
cltd
sbbb
push
inc
lock
xchg
fucomp
outsb
and
mov
mov
mov
mov
xor
and
mov
cltd
mov
sbb
ds
mov
sahf
sbb
push
rep
mov
outsl
jl
mov
push
xor
or
xor
add
inc
push
outsb
in
xor
push
jmp
adc
inc
mov
movsb
adc
and
jb
loop
mov
in
imul
enter
pop
rolb
inc
popa
pusha
cmp
sbbb
outsl
out
adc
sub
aas
xchg
sbb
inc
pop
movsb
sub
icebp
mov
push
fistl
rcl
xchg
mov
out
ret
mov
cmp
cmp
pop
ror
mov
push
mov
bound
inc
rcr
jbe
adc
dec
ret
jp
lcall
daa
ret
xchg
add
jl
pushf
cli
sbb
cltd
mov
shll
adc
into
pop
in
ljmp
loop
fcmovnb
ficoml
scas
popa
jg
xchg
cmpl
daa
inc
push
pop
lods
or
and
je
xchg
push
and
insl
loop
imul
dec
fwait
dec
adc
iret
adc
rcll
and
and
push
jmp
mov
dec
jne
out
data16
pop
pusha
fs
lahf
push
mov
ja
adcl
pop
imul
pop
shlb
mov
fcmovnu
jp
into
jns
sbb
fsts
and
push
mov
jno
inc
dec
xchg
cmp
cmpsb
push
xor
mov
int3
fdivp
das
cmp
fdivs
cmp
nop
pop
push
dec
pop
nop
test
cwtl
int
mov
das
stos
pushl
push
sbb
repnz
sbb
fucomip
adc
aaa
jmp
xor
pop
and
shl
imul
loopne
int
cld
inc
cs
hlt
lods
sbb
mov
push
xchg
xor
push
add
mov
jb
mov
jno
mov
and
out
xor
pop
jbe
je
rol
insl
imul
arpl
out
mov
imulb
jecxz
cmc
xor
ljmp
in
adc
das
pop
add
stos
add
cld
mov
rclb
fbstp
and
out
fists
mov
cmp
fstl
and
icebp
push
push
jmp
or
or
loop
mov
inc
and
icebp
cmpsl
inc
jmp
mov
aas
insb
mov
outsl
mov
int3
push
pop
jmp
xlat
loopne
mov
dec
test
add
enter
punpcklbw
fs
mov
int3
jns
dec
mov
mov
push
adc
arpl
leave
xor
xchg
mov
cli
lahf
or
xchg
jle
out
int3
inc
lods
add
out
fisubs
dec
mov
mov
xchg
inc
xor
stos
in
mov
xchg
cmpsb
mov
imul
pushf
mov
mov
push
lods
cltd
jne
aad
fucomip
pop
dec
cmc
pop
push
sbb
cmovp
push
insw
fldl
cwtl
jg
xor
xchg
iret
push
les
mov
push
aam
lret
dec
pop
ds
in
stc
cmp
ficomps
out
notb
mov
or
jns
subb
sub
repz
jl
in
enter
push
inc
subl
gs
cltd
cmp
cli
sub
mov
arpl
mov
out
pop
subl
dec
jo
ret
repz
mov
xchg
or
je
cli
push
aas
mov
fildll
into
std
inc
jnp
loopne
lret
cmpsl
insb
mov
stos
pop
loope
or
iret
inc
std
sahf
inc
xchg
push
enter
out
out
adc
dec
or
lds
mov
cmp
fsts
shrb
fsts
fldl
xchg
stc
adc
xchg
push
in
jp
lock
arpl
or
out
add
in
stos
dec
cmp
dec
sub
inc
ljmp
pop
sub
inc
and
aam
and
faddl
ljmp
aaa
adc
add
inc
push
fcmovne
pop
lahf
pop
push
jb
fsts
mov
fdivrs
sub
movsb
repz
xchg
or
sbb
arpl
cmp
xor
mov
js
xor
sbb
jmp
jb
mov
cmp
push
sti
leave
add
push
jp
sub
push
stos
bnd
aas
adc
pop
xor
and
aaa
adc
imul
or
sahf
or
outsb
loop
mov
xchg
xchg
mov
pop
pop
sub
lds
shlb
stos
test
xorl
mov
pop
mov
push
inc
mov
push
pushf
adc
aaa
fnstcw
sar
mov
addr16
adc
mov
aas
xor
dec
xchg
push
gs
lcall
ljmp
mov
clc
ret
lahf
int
cmpsb
movsb
mov
dec
mov
or
jno
jno
adc
add
lock
xor
sti
sbb
sbb
jp
push
cmove
sti
or
in
cmp
sbb
cmpb
xchg
xchg
sbb
push
out
lea
je
xchg
icebp
ja
scas
lret
pop
dec
int
mov
jg
orb
test
dec
sbb
call
sbb
sarb
adc
lcall
outsl
imul
or
ja
fdivrs
imul
scas
inc
or
mov
cmc
cmp
mov
iret
xor
cmp
jno
lret
inc
jo
jnp
lods
push
fs
mov
mov
test
lock
pop
inc
mov
and
scas
enter
mov
and
mov
jmp
and
pop
sub
xor
dec
pop
loop
cmp
pusha
insb
hlt
lock
movsb
cwtl
sub
sahf
push
repnz
in
mov
jecxz
inc
sub
cmpsb
imul
leave
push
in
push
adc
jae
dec
repz
dec
enter
xor
test
jnp
int3
popf
fldt
icebp
and
push
push
sub
test
pop
xor
xchg
pop
cltd
nop
in
clc
xor
les
arpl
xchg
lcall
and
dec
add
test
pusha
es
jecxz
out
xor
loop
cmp
or
sbb
mov
lea
jle
or
pop
out
fmul
pusha
in
dec
loope
xchg
push
push
jge
pop
jge
add
sbb
dec
pop
xor
in
int
cmp
xchg
xor
clc
lea
inc
shrl
lods
insb
fldt
call
xchg
inc
xor
into
fdiv
outsl
mov
xchg
add
or
add
sahf
out
cmp
into
mov
fidivl
rolb
cs
int
and
mov
pop
mov
outsb
or
pop
ss
pop
or
mov
fucomip
mov
push
mov
std
cmpsl
or
jecxz
faddl
mov
jmp
cmp
mov
inc
cli
pop
mov
dec
scas
jge
cmp
mov
and
mov
add
inc
mov
cmc
push
loop
jo
cltd
adc
and
add
inc
fidivrs
pop
add
adc
clc
addr16
sahf
es
adc
mov
and
inc
mov
popa
pushf
push
mov
int3
mov
roll
in
inc
cmp
icebp
sbb
pushf
dec
sub
push
cwtl
insb
or
sbb
imul
add
jne,pt
mov
sub
icebp
aas
xorb
mov
xchg
test
xchg
test
jbe
xchg
roll
cmc
ret
ds
mov
xor
psubsw
add
mov
pop
repz
or
push
cld
xchg
fdivs
test
push
out
aad
sbbb
adc
dec
push
ja
daa
addl
pop
cmp
add
enter
jbe
mov
dec
movsb
sbb
sbb
inc
jle
jo
sub
lahf
pop
clc
jmp
out
dec
inc
or
sbb
adcl
xor
inc
inc
das
data16
jg
stos
iret
jne
sahf
sub
push
das
jp
and
sub
cvttps2pi
jbe
gs
mov
pop
mov
inc
in
sbbb
adc
jecxz
loop
push
push
leave
lret
ss
scas
notl
bound
or
adc
insb
add
pop
inc
push
aad
sti
mov
sbb
add
ficomps
push
aam
arpl
in
ss
clc
mov
enter
push
imul
sub
mov
push
repnz
mov
sarb
out
push
stc
ret
imul
xchg
xchg
and
pop
sbb
lods
or
pop
cmpsb
cmpsl
das
pop
arpl
push
and
mov
sub
xor
jle
inc
cmp
jo
nop
jmp
pop
sbb
cmpsl
es
frstor
cmp
push
jae
mov
das
adc
hlt
out
mov
ret
sbbb
pop
scas
sub
sti
dec
adc
xchg
aam
setg
sahf
mov
mov
sub
jns
sbb
xchg
in
inc
in
mov
ret
mov
in
push
mov
sahf
daa
jo
ja
jnp
imul
aaa
mov
cmp
mov
inc
mov
out
jecxz
cmpsl
sahf
push
mov
mov
xchg
fsubs
or
adc
mov
imul
rorl
pop
imul
loop
jno
rorb
xchg
mov
sahf
or
sar
in
pushf
pop
cltd
push
fstpt
out
loopne
xchg
and
js
add
aas
insl
jae
nop
push
enter
sbb
cmp
push
out
loop
in
cli
fcmovnb
lods
sbb
mov
cmp
mov
dec
gs
sbb
xor
ret
cmp
or
add
push
repnz
sub
mov
shlb
popf
jno
out
mov
imul
aad
xchg
mov
roll
push
fdivs
xor
xchg
lret
or
mov
loope
mov
sbb
mov
dec
xchg
xor
movsb
mov
fists
ja
shll
in
pop
push
mov
xchg
in
inc
bnd
or
sti
outsl
adc
sbb
outsl
cmc
bnd
incb
mov
mov
in
mov
movsl
mov
xchg
outsb
adc
dec
mov
incb
movsl
mov
inc
cmp
cmpsb
pop
mov
test
in
push
adcb
movsb
mov
ljmp
mov
mov
repz
and
and
sub
jp
mov
sbb
and
mov
pop
add
lret
jl
cltd
out
dec
jne
jle
lea
ljmp
mov
push
jge
pop
sub
push
jl
push
push
fisubrl
loope
cmp
jnp
je
dec
cmp
imull
mov
mov
shr
lret
jno
and
test
shl
addl
cmpsb
divb
push
jne
adc
addl
mov
push
lretw
hlt
sahf
adc
jb
inc
or
enter
mov
movsb
push
inc
and
pcmpeqd
ficoms
push
out
xchg
inc
lods
in
out
fldt
sbb
cwtl
sub
dec
push
movsb
std
data16
imul
iret
sub
pop
add
pop
je
pop
sub
jge
cli
add
push
xor
outsb
lret
cmp
mov
call
dec
mov
xor
pushf
movsb
xor
mov
xor
jecxz
in
sbb
lock
popa
dec
xor
push
std
sbb
adc
dec
out
cmc
dec
cmc
jne
dec
cmp
lods
sarl
sbb
xchg
inc
or
pop
inc
sub
clc
sbb
jmp
insl
loopne
iret
mov
dec
add
jle
inc
push
cwtl
cmp
inc
add
jg
rcl
fidivrs
pop
dec
adc
xor
xchg
mov
or
push
push
shll
dec
mov
enter
xchg
adc
test
pop
xchg
mov
jo
lds
inc
xor
mov
stos
scas
adc
push
sub
pop
mov
cltd
loopne
addr16
lret
ss
sbb
xor
lods
stc
test
popf
add
jo
aas
inc
lods
mov
int3
xlat
add
add
pop
popf
inc
icebp
out
pop
loope
mov
push
mov
adc
and
push
mov
lea
add
jmp
dec
mov
xor
pop
int3
and
mov
xchg
mov
push
push
inc
lret
pusha
inc
cmp
hlt
push
pop
out
push
push
es
popf
jb
inc
push
leave
gs
clc
jo
xchg
imul
es
inc
cltd
or
adc
es
rol
pop
pushf
or
and
fistl
clc
push
jbe
test
cmp
ret
xor
mov
sbb
inc
lea
movsl
ret
fstp
inc
pusha
scas
push
enter
adc
cli
add
inc
leave
lock
hlt
sbb
popa
xchg
jns
notb
out
out
aaa
call
pushf
sub
in
mov
lock
mov
jmp
inc
pop
adc
loope
insl
adc
dec
mov
mov
aam
in
cs
lods
bound
pop
mov
pusha
hlt
test
fmulp
outsb
hlt
ret
fiadds
inc
nop
pop
js
dec
out
mov
and
add
and
movswl
out
incl
outsl
enter
stc
mov
xor
sbb
out
jae
push
mov
popf
cmpsl
lds
fs
inc
or
leave
mov
cli
or
scas
mov
push
mov
hlt
insb
add
es
das
test
pop
movsb
or
cmpb
dec
int
mov
out
dec
mov
inc
inc
rorb
push
int
imul
mov
sarl
lods
aam
push
cmp
mov
std
daa
lods
and
cmp
insl
pop
dec
into
stc
inc
out
cmpsb
inc
outsl
fisttps
fstl
das
inc
xchg
pop
fwait
popa
inc
xchg
pop
ret
lods
out
mov
mov
dec
fldcw
pop
mov
test
pextrw
xor
mov
mov
sub
xchg
fsubl
mov
shl
test
cmp
loope
stos
add
xor
hlt
repnz
ljmp
dec
je
xchg
adc
lcall
xor
pop
es
bound
mov
gs
mov
cld
cld
dec
call
mov
pop
push
lcall
dec
fs
mov
subb
cmc
ss
lods
sbb
stos
mov
pushf
xor
xor
adc
pop
insl
jbe
hlt
jp
push
mov
jne
sbbb
push
out
sub
clc
push
xchg
push
int
cld
or
cmp
lcall
dec
pop
dec
stos
and
inc
psadbw
or
jnp
adc
iret
sbb
iret
add
imul
test
xchg
pop
inc
enter
push
nop
gs
rclb
fldl
add
mov
sarl
and
inc
or
xor
cs
cmc
mov
fwait
rcrb
shll
jo
shrl
clc
stc
scas
xchg
push
in
add
faddl
dec
push
pop
xor
aam
pop
xchg
xchg
jo
ds
or
xchg
syscall
dec
insb
cmp
lea
add
test
mov
in
sbb
inc
sub
popf
or
push
inc
xchg
xchg
es
sbb
test
mov
mov
pop
xchg
test
mov
cld
scas
stos
mov
lahf
pusha
lahf
push
mov
add
jae
mov
mov
or
xor
loop
add
mov
test
and
jle
xchg
int3
lret
bound
dec
mov
add
push
adc
dec
loopne
in
or
scas
cmovp
sub
pop
rcrl
mov
pop
or
lods
nop
cwtl
push
mov
aas
xchg
push
popa
je
inc
pushf
dec
in
aam
pop
push
or
jge
cwtl
xchg
xsha256
cmpsb
xchg
mov
lods
jl
xchg
fsubl
and
mov
xchg
in
ds
mov
pop
out
cli
aam
enter
cwtl
movsl
mov
out
mov
xor
push
lcall
mov
cmpsb
test
xchg
out
push
xchg
out
sbb
mov
aad
jno
cltd
dec
scas
xchg
daa
push
mov
xchg
mov
into
ds
imul
mov
xor
sbb
insb
shl
das
sub
std
cltd
mov
xor
lret
xchg
mov
rolb
inc
xchg
sbb
cmp
daa
lds
xchg
cmp
outsl
xchg
cmpsl
in
test
sub
adc
mov
sbb
adc
in
fistl
pushf
cmpsb
sbb
ljmp
cmp
dec
jmp
xchg
scas
es
add
inc
jo
adc
xchg
inc
lahf
mov
sbb
loope
rorb
es
push
push
movsb
mov
push
or
and
out
sbb
ss
gs
xor
jo
fldt
sub
into
add
dec
jbe
pop
jbe
pop
icebp
cmpsl
cltd
testb
bound
mov
sub
in
mov
push
inc
je
xor
js
mov
inc
ficoms
sub
cmp
jne
xor
ja
fbstp
add
or
fistps
sub
xchg
cmpsl
xchg
lret
or
cld
jmp
push
lcall
ds
test
pop
adc
add
mov
mov
xor
pop
imul
cmp
sbb
pop
mov
cmp
sbb
dec
movsl
iret
inc
test
into
inc
xor
dec
leave
adc
inc
xchg
gs
xor
sub
bswap
or
xor
rcrl
cltd
cltd
adc
xor
mov
dec
dec
push
jns
cli
jb
dec
and
mov
ljmp
in
repz
xlat
mov
and
lret
xchg
lret
cmc
cmp
test
in
cmpl
insl
add
addr16
push
push
in
fldcw
es
pop
fcomps
xor
sub
int
out
jg
mulb
loope
cli
lock
dec
push
mov
mov
nop
push
adc
leave
sbb
rcl
shrl
in
stos
cmp
gs
hlt
sub
sahf
insb
or
cld
adc
xor
xor
jae
add
imulb
stos
and
pop
gs
cmpsl
in
cmpsb
jne
out
fwait
xchg
test
mov
jmp
xor
stc
in
xchg
lods
cmp
repz
test
or
xlat
jmp
pop
push
fwait
dec
mov
mov
ret
cld
das
dec
test
mull
xchg
gs
jno
arpl
pop
int3
addb
lcall
dec
idivl
imul
sub
aad
inc
mov
push
push
cmp
mov
push
mov
mov
xchg
pop
inc
jo
ror
add
inc
sti
adc
pop
test
pushf
adc
or
adcb
push
push
daa
add
roll
mov
pushf
es
xchg
pop
loop
fs
mov
mov
inc
rorl
lods
dec
out
mov
scas
xor
add
xchg
sbb
aad
inc
out
jmp
mov
sahf
addb
aas
sbb
into
mov
add
jl
pop
ja
popf
je
mov
shr
cmp
andb
mov
scas
fldt
jno
mov
test
mov
pop
mov
ret
jno
pop
test
add
and
xor
cwtl
into
push
jbe
popl
push
lret
xor
stos
and
insb
pop
in
dec
lea
dec
push
fcmovnbe
cmp
sbbb
outsl
push
add
mov
das
lret
aam
orb
enter
mov
xor
rolb
mov
adc
xlat
xchg
stos
pushf
loope
in
adc
pop
fstps
xor
les
imul
pop
mov
adc
pop
aam
rcl
mov
mov
gs
push
inc
or
mov
cltd
and
inc
jbe
pushf
push
pop
pop
in
in
lahf
mov
mov
mov
ficoml
mov
fndisi(8087
out
mov
rolb
shl
dec
push
mov
adc
mov
fistpl
mov
xchg
lret
mov
fucom
add
mov
lea
mov
lret
cld
mov
xor
call
cli
lcall
jmp
xchg
mov
stos
and
daa
adc
mov
fistl
mov
test
repnz
test
popl
mov
jns
sub
test
fiaddl
or
sbb
push
mov
pop
jecxz
cmp
jg
imul
cwtl
loop
mov
mov
pop
mov
mov
rcrb
aas
or
sub
in
fcomp
int
xchg
mov
push
popf
je
hlt
add
push
pushf
dec
jnp
jle
push
ja
xchg
into
add
or
mov
in
sahf
dec
lods
cmc
xchg
and
lods
adc
sbb
ss
or
add
cmp
in
jno
sbb
push
out
repz
aad
hlt
and
jo
push
xlat
add
push
adc
outsb
mov
std
mov
pop
push
sti
ljmp
roll
dec
jecxz
hlt
cmp
shrb
in
in
clc
sub
scas
ss
push
mov
shlb
jno
pusha
aam
mov
ljmp
push
xchg
push
mov
pop
ficoml
ret
xor
rcl
adc
xor
mov
stos
or
in
ret
insl
cmpb
xor
dec
add
xchg
in
push
mov
lods
push
cs
and
out
and
push
rcl
or
mov
dec
fwait
or
lahf
xor
inc
sarl
cwtl
js
mov
iret
push
cmpsb
dec
inc
sahf
inc
mov
ss
out
jmp
cltd
rcrb
scas
sti
gs
pop
out
xchg
out
jle
ja
into
cmp
stos
lret
push
cmc
lods
adc
push
popa
cmpsl
xor
fsubs
cmc
sbb
cwtl
jno
push
enter
and
pop
jno
sarl
add
repnz
popa
inc
or
es
mov
pop
jae
push
xor
je
rcll
in
sbb
aas
and
add
fbld
mov
test
andl
rorl
mov
sar
stos
jmp
loope
pop
int3
pop
lea
dec
scas
pop
mov
dec
pop
cmc
mov
roll
sbb
test
dec
push
sar
mov
mov
repnz
jle
adc
inc
int
out
mov
inc
cld
cmp
mov
cltd
pushl
push
xor
addl
or
mov
fiadds
icebp
xor
sbb
cmpsl
das
mov
mov
movsb
popf
test
sbb
sbb
insl
or
adc
test
mov
sbb
stos
jmp
test
xchg
pop
out
dec
les
sub
ljmp
pop
ljmp
sub
adc
jg
enter
std
out
xor
cld
or
or
ja
test
dec
test
sahf
pop
or
jne
inc
cmpsl
mov
lret
cmp
int
mov
adc
xchg
mov
mov
xchg
rcrb
mov
pop
pop
add
scas
ret
sub
das
aad
fisttps
mov
scas
out
arpl
daa
lock
daa
in
mov
loope
jae
int
xchg
movsl
ljmp
lods
xor
or
loope
mov
xor
test
inc
mov
push
inc
xchg
xor
push
lret
jmp
xchg
pop
jmp
sub
dec
shlb
aad
ja
into
movsl
dec
repnz
popa
idivl
inc
sub
js
cld
rcrb
sbb
sbb
iret
popa
and
add
cmp
rep
gs
pop
dec
lods
js
cmp
fcoms
cmp
cmp
xchg
cmp
xorb
pop
test
pusha
xchg
inc
inc
push
rclb
inc
pop
enter
inc
loopne
mov
sub
xchg
sahf
adc
fstp
dec
xchg
sub
or
pop
inc
cmpsb
add
inc
fdivs
and
or
push
ljmp
mov
add
xchg
outsl
movsl
adc
clc
add
cmp
xor
xchg
ret
movsl
dec
cltd
push
out
outsb
test
stos
shlb
popa
cmp
pushf
fbld
sbb
ja
imul
outsl
adc
mov
cld
sub
mov
adc
sbb
incl
in
aad
xor
xchg
leave
mov
pushf
xchg
mov
mov
sar
cmpsb
push
xchg
outsb
push
pop
mov
mov
xchg
stos
mov
jae
cmpsb
icebp
and
fs
push
fmull
cltd
jbe
push
xchg
inc
mov
dec
push
dec
and
dec
rcrl
rolb
jmp
lods
sbb
mov
dec
or
pop
nop
mov
cmp
loope
nop
mov
add
loope
inc
sbb
inc
inc
pushf
clc
scas
or
xor
xor
arpl
negl
jp
loop
mov
sbb
imul
add
cltd
mov
pop
stos
loope
lahf
xchg
cmc
lds
dec
scas
divl
je
roll
in
sar
stc
in
or
mov
inc
in
jg
push
stos
push
add
sbb
mov
or
rclb
pusha
or
ret
xchg
jbe
cmp
pop
sbb
or
leave
jo
mov
cld
in
adc
sbb
imulb
lea
pushf
or
je
in
repnz
xchg
pusha
pop
cmp
clc
inc
mov
cmp
fisttps
pop
inc
imul
sub
mov
out
lcall
add
mov
xchg
cwtl
jle
lods
adc
mov
rcll
and
jne
int
xor
xchg
jmp
jecxz
add
pop
and
lea
sub
sbb
pop
lods
cmp
and
dec
std
adc
sub
jl
and
and
xchg
jl
xchg
jl
iret
bound
aas
loope
loopne
or
push
fistps
and
in
stc
jle
inc
test
daa
outsb
ljmp
pop
xchg
push
int
cltd
dec
in
scas
mov
inc
psubd
test
cmp
insb
into
cmc
lods
out
fidivs
ret
jge
pop
pop
or
jae
or
scas
ds
push
adc
call
iret
dec
lods
cld
mov
dec
mov
xor
pop
mov
fidivrl
add
cmpsl
call
pusha
jge
inc
fdivrs
loop
adc
ljmp
popa
sub
sbb
int3
xchg
push
mov
ss
sbb
insb
jne
cmp
stc
inc
test
dec
adc
int3
mov
loop
sarl
sbb
mov
lcall
xchg
mov
lret
jae
xchg
or
test
jne
in
dec
out
push
fwait
xor
das
lahf
loop
push
subl
out
mov
add
xlat
sbb
loop
scas
sti
leave
xor
in
testb
popf
ret
dec
jmp
xchg
cmpsl
add
jg
iret
out
cltd
in
inc
outsb
in
jmp
hlt
mov
cmpsb
cmpsl
jne
out
lock
push
and
and
fcomp
adc
and
repz
sub
insb
cmpsl
sbb
jbe
scas
mov
xchg
test
ss
xor
icebp
inc
sbbb
test
add
dec
ret
and
pop
dec
jb
gs
test
push
xor
ss
cltd
xor
sbb
es
hlt
sbb
push
pop
mov
sub
int3
pop
insl
rcl
xor
scas
lahf
cwtl
std
dec
mov
lock
jb
push
dec
jp
call
jle
in
sbb
aaa
imul
and
and
lcall
lock
mov
imul
inc
and
into
sub
cmc
cmc
movsb
sbb
add
mov
sub
jne
popf
adc
int3
fadd
sub
mov
ret
xor
mov
adc
push
or
sub
dec
rol
rorb
fildll
aam
inc
roll
es
std
mov
push
fnstcw
out
push
mov
ja
nop
pop
fsts
rclb
lods
dec
int3
add
js
in
pop
negb
fnstenv
fists
loope
leave
inc
fs
xor
or
cwtl
mov
test
adc
xorl
movb
xlat
enter
adc
mov
clc
fcompl
scas
int3
mov
mov
sti
hlt
mov
popa
cmp
push
aam
ja
jg
hlt
sbb
xorl
xlat
ds
daa
mov
aaa
fistps
in
jnp
popf
in
cmovge
jp
bound
push
negb
dec
scas
sbb
ret
push
setb
bound
sub
fs
stos
fisttpl
pusha
adc
dec
outsl
aaa
mov
xchg
jp
stc
ljmp
or
mov
mov
sub
mov
pop
fwait
jl
fs
imul
add
jae
push
imul
sub
mov
repnz
lcall
negl
lds
sarb
dec
and
or
add
or
mov
subb
rcrb
adc
rolb
rcrb
ljmp
mov
mov
ficomps
adcl
lret
and
imul
scas
dec
cmp
ss
insl
cmpsl
sub
push
leave
aas
add
add
outsb
sbb
les
xchg
ljmp
sub
xchg
push
ljmp
sub
sub
lahf
je
mov
js
lods
cmp
push
push
lcall
popa
push
inc
clc
xor
jcxz
fdivl
daa
test
divb
xchg
xor
and
dec
dec
ror
fdiv
push
jecxz
jge
jbe
cld
bnd
or
rol
arpl
cld
subb
pusha
enter
loopne
jb
inc
outsl
mov
push
push
push
cmc
mov
xchg
dec
movsl
jmp
outsb
pop
je
pop
test
cwtl
scas
dec
mov
and
in
test
movsl
push
mov
in
scas
or
inc
xchg
push
in
inc
shll
cmpsb
dec
rcrb
push
jg
cltd
pop
mov
test
addl
sti
mov
push
popa
fxam
aas
sarw
xchg
xor
popf
cmp
dec
xchg
dec
or
xchg
xchg
xor
sahf
mov
cld
test
pop
jecxz
lret
and
fs
push
cmp
add
add
aas
pop
xorl
jo
adc
lea
imulb
push
lahf
loope
and
hlt
sub
jmp
repz
sti
add
add
daa
jp
pop
in
fld
pop
jae
nop
push
xchg
mov
push
jo
popl
jmp
xchg
in
push
dec
icebp
loop
push
jnp
mov
repz
test
fsubp
xor
ret
imul
imul
sti
aaa
sub
les
xchg
hlt
cmp
mov
insb
shlb
mov
outsb
idivl
pop
adc
push
dec
xchg
mov
pop
jl
mov
cmp
loop
test
sbb
lret
lea
ret
ret
cmp
pushf
popf
lret
and
or
mov
fsts
fsub
xchg
and
movsb
push
cli
mov
sbb
sub
outsb
push
inc
scas
xor
mov
lahf
in
imul
sahf
shlb
pop
add
outsl
pop
sub
pop
rol
and
or
mov
mov
sbb
testb
mov
in
les
das
xor
loopne
cmp
cmp
cmp
test
test
mov
adc
leave
mov
jno
cmp
and
das
in
mov
popf
out
add
or
icebp
mov
les
shrb
push
stos
add
test
lahf
fs
fmuls
iret
xlat
dec
in
icebp
dec
or
aam
lahf
or
adc
call
into
inc
lcall
movsb
cmpsb
ss
adc
test
rcll
adc
jecxz
jbe
push
inc
jmp
mov
lods
lods
fstps
ds
pop
sbb
or
cmp
inc
jge
es
and
lds
push
lahf
call
pop
scas
aas
leave
adc
xchg
xchg
iret
ljmp
push
inc
cmp
bound
imull
lea
sbb
xchg
mov
test
adc
sub
mov
gs
test
pop
ret
sbbb
inc
mov
test
test
sub
gs
std
dec
inc
or
stos
loop
cmp
push
sub
sub
push
adc
sub
cmpsb
pushf
dec
scas
lcall
rolb
enter
insl
pop
call
mov
out
cmp
sub
jo
rorl
and
out
cmp
mov
stc
sbb
adc
shlb
sbb
mov
sbb
add
cwtl
xchg
inc
inc
mov
or
cvtps2pi
sbb
pop
sub
cmp
mov
push
insb
dec
stos
adc
mov
test
xchg
jl
fcoms
mov
pushf
adc
icebp
out
sbbb
addr16
shll
mov
mov
mulb
ficomps
in
push
mov
sub
push
sbb
pushf
cli
orl
mov
gs
data16
mov
fnstcw
fnsave
push
sbb
pop
rcrl
add
inc
cmp
scas
or
test
ret
dec
out
mov
jb
movsb
pop
idivb
add
inc
les
cmpsl
inc
inc
es
movsl
dec
and
jge
adcl
push
lods
cltd
jne
aas
lret
sub
into
sbb
xchg
mov
imul
add
adc
pushf
jmp
imul
in
fwait
jne
in
insl
adc
pop
enter
mov
scas
clc
dec
js
les
and
dec
test
mov
jecxz
mov
fbld
pop
fcom
icebp
sub
sbb
and
lods
mov
ss
notb
ror
xchg
dec
sahf
jae
jge
and
int
cmp
stos
scas
stc
bswap
pop
xchg
int
lock
stos
pop
xor
jp
mov
ss
xchg
and
and
inc
xchg
in
dec
sub
mov
cmp
mov
push
xor
sbb
scas
gs
aam
push
in
ret
and
xor
xchg
or
sahf
adc
mov
rolb
and
mov
or
inc
or
and
mov
sti
sbb
cwtl
mov
sub
cmpsl
scas
push
push
fisttpl
in
addr16
cmc
and
scas
mov
sub
lods
pop
fdiv
std
popa
fcmovnb
fdivr
adc
jne
cmpsl
fwait
dec
push
scas
lahf
stos
lcall
dec
call
test
xchg
scas
lods
lods
push
mov
es
mov
xlat
push
rorl
scas
push
jmp
mov
mov
int
hlt
jnp
lods
xchg
sarb
push
outsl
in
movb
push
sub
aas
pop
or
add
inc
push
data16
push
call
scas
out
out
pop
push
loop
leave
call
mov
in
btcl
mov
outsb
mov
xchg
shl
or
dec
mov
jo
scas
jmp
es
push
cmp
iret
add
fisubrl
mov
mov
cmp
xchg
hlt
loope
jecxz
adc
outsb
sar
imul
mov
mov
jo
xchg
fidivrs
jp
les
popa
out
pop
lods
jmp
and
xlat
je
aam
lret
mov
test
js
lcall
jl
sbb
sub
mov
leave
fildll
mov
mov
xchg
js
mov
fidivrs
out
xor
and
or
test
sarl
loopne
loopne
cltd
scas
sub
test
in
mov
mov
cmpb
mov
jmp
push
daa
outsb
inc
pop
in
pop
push
imul
imul
or
gs
and
dec
inc
cmp
cld
or
lds
stos
add
inc
pop
push
xchg
jmp
or
or
aad
add
test
or
and
add
hlt
push
imul
mov
stos
mov
adc
rcrb
repnz
mov
or
insl
addr16
adc
divb
orl
and
sti
dec
les
and
daa
cmp
jmp
xchg
cmc
xor
push
mov
push
push
adc
push
mov
les
in
int
cmp
mov
jmp
pop
mov
cmpsb
fwait
stc
out
or
mov
stos
jo
mov
pcmpeqb
or
mov
mov
or
dec
lret
adc
add
testl
adc
es
mov
and
mov
inc
rcrb
xorb
push
ret
cmp
xor
incl
aas
inc
aad
or
mov
aam
or
fidivl
xlat
idivb
push
int3
pusha
sbb
out
mov
adc
xchg
pop
daa
insb
add
ret
aas
push
cmp
int
add
adc
or
test
xchg
std
imul
dec
add
loope
into
sti
aaa
test
outsl
mov
int
xor
dec
cmp
ss
ds
jmp
mov
movsb
push
pop
adc
mov
cmpsb
test
mov
xchg
outsl
out
dec
pop
lcall
dec
adc
push
push
sbb
sbb
popf
add
cmp
or
out
lock
and
or
mov
in
mov
enter
pushf
inc
dec
icebp
hlt
dec
lret
dec
push
mov
lahf
push
sti
mov
ficomps
loopne
lods
jne
mov
test
mov
lock
and
mov
lods
fnsave
sbb
jo
es
cmc
cli
test
stc
shrb
push
and
rcll
pop
fnstcw
in
dec
add
insl
cmp
jmp
ret
cli
jnp
lock
xchg
mov
and
pop
outsb
pop
mov
push
leave
push
jnp
inc
cmp
push
lods
popa
clc
test
xor
mov
cmc
fs
dec
hlt
and
inc
loop
psubw
jne
ja
jnp
mov
data16
xchg
idivl
movsb
inc
pop
lock
das
pop
mov
dec
mov
adc
adc
out
pop
mov
cmp
inc
sbb
inc
cltd
and
ds
flds
jo
movsb
pop
dec
mov
jnp
cli
sbb
cli
repz
jg
mov
test
sub
or
jne
pop
inc
xor
test
xorb
fsubrl
and
pop
sti
daa
inc
lds
popa
aas
mov
orl
jnp
and
xor
push
fwait
pushf
test
cmpsb
gs
enter
in
sbb
aam
es
insb
sbb
dec
adc
xchg
xchg
cwtl
js
push
pusha
xor
or
daa
mov
lcall
and
and
mov
out
lods
cs
lret
push
mov
rcrl
shl
xchg
fmull
in
jae
icebp
outsl
xor
pop
stc
push
cmpsb
mov
and
pop
sbb
pop
leave
xor
xor
cmp
inc
pop
pop
inc
out
fsts
mov
sub
fisubl
mov
leave
inc
and
arpl
dec
dec
iret
or
adc
ror
sub
stc
inc
jns
rolb
mov
push
pop
dec
cmp
pop
mov
or
sub
cmpsl
push
stos
jp
mov
scas
scas
shrb
es
rep
nop
mov
pop
cmp
pushf
daa
jmp
and
stos
sbb
xchg
out
cmp
add
xchg
sbb
push
push
cli
cmc
xchg
out
sub
test
sub
das
add
xor
inc
cmpb
cmc
jbe
mov
mov
mov
lea
push
pusha
bound
add
cmp
mov
and
sbb
xchg
movsl
mov
inc
cltd
push
sub
cmc
and
and
jg
test
lahf
mov
test
mov
out
mov
and
jae
cmp
push
out
gs
int
pop
cmp
inc
adc
adc
das
sahf
jmp
hlt
int
xor
dec
sti
loopne
pop
fistl
jne
icebp
icebp
mov
popa
stos
jno
push
jl
aad
sbb
mov
xchg
sbb
fmuls
cmp
call
cmp
jecxz
popf
jno
arpl
mov
sbb
insl
pop
dec
pop
data16
dec
sub
and
ret
lahf
int
adc
mov
add
sahf
cmp
cs
mov
mov
and
sti
fisubrl
pop
mov
pop
cli
pop
mov
mov
scas
xor
inc
add
sub
loopne
push
jp
or
or
ss
mov
add
loop
ja
xchg
adcl
cmp
int3
push
add
cmp
xor
or
sti
mov
xlat
mov
jbe
adc
push
loopne
lret
incb
into
or
cmp
push
repz
adc
add
cmp
add
cmp
out
aaa
or
jns
repnz
test
mov
pop
cmp
dec
es
xchg
sbb
arpl
std
push
out
mov
jl
ljmp
xchg
scas
outsl
inc
mov
push
and
push
hlt
jne
cs
popf
mov
xor
ficoml
or
mov
pop
or
cltd
jp
scas
mov
dec
inc
inc
pop
xchg
fcoml
mov
lea
lods
cwtl
jne
in
xor
cwtl
or
xchg
dec
cld
clc
fdivrl
jmp
scas
repnz
cmp
rcrb
sub
jmp
sbb
daa
in
adc
jbe
xchg
mov
pop
mov
and
xor
cmp
dec
scas
jo
js
pop
fxch
sbb
ds
cmp
test
dec
stc
mov
pop
jns
pop
shlb
les
icebp
adc
ret
cwtl
cmpsb
inc
mov
jbe
push
xchg
psubsb
and
cld
push
lock
mov
sub
add
lods
inc
mov
loopne
adc
mov
mov
inc
lahf
movsl
lret
xchg
nop
pop
bound
nop
out
or
xor
leave
xor
outsb
cwtl
sbb
ret
xchg
jle
fstps
inc
jg
imul
jo
lret
movb
cmp
addr16
xor
mov
mov
sti
jp
dec
dec
mov
test
notb
push
pushf
mov
fmul
stc
jnp
adc
imul
imul
rcrb
mov
int
mov
je
lret
gs
adc
nop
or
inc
inc
or
mov
call
mov
dec
push
pop
jmp
test
pop
aaa
sbb
mov
aad
xchg
cmpl
mov
adc
sbb
mov
mov
xchg
add
or
cmp
je
push
in
sbb
cmp
or
in
rorl
mov
jge
imul
cmp
cmc
pop
xchg
jecxz
pop
ret
mov
pop
push
mov
hlt
fcomi
pop
xor
enter
sub
mov
add
das
sub
pop
arpl
rorb
mov
jno
jmp
test
adc
jmp
cmpsb
inc
mov
imul
xlat
mov
fisttpll
gs
stc
ljmp
lock
jl
divl
ds
or
mov
movsl
sub
imulb
ljmp
enter
pop
test
push
aad
jo
cmpsb
sub
push
xchg
lcall
popa
stos
roll
lods
mov
mov
ljmp
cld
lods
xchg
mov
inc
imul
lds
xchg
jb
lock
or
sub
lcall
std
aas
lods
push
adc
xchg
mov
dec
sbb
fdivl
cmp
cmp
push
add
add
mov
dec
add
and
adc
sarb
mov
test
fcoml
and
dec
fmul
adc
hlt
push
aaa
jmp
into
inc
fwait
push
xor
test
loop
addb
xchg
jecxz
repnz
adc
cld
mov
mov
mov
fisttpl
fistl
hlt
jb
mov
clc
testb
mov
add
inc
js
jmp
mov
and
cs
ret
loope
sahf
cmpsb
mov
leave
cli
loopne
sub
xor
rcr
repz
or
pop
and
out
dec
pop
push
stos
test
scas
adc
and
mov
lret
cmc
pop
mov
cs
dec
sahf
sbb
adc
or
jno
fisttpll
pop
imul
jp
arpl
jg
ja
and
clc
jo
pop
les
push
jle
jl
int3
jecxz
jp
mov
jp
cmp
insl
mov
cmp
cmpsl
movl
mov
dec
lcall
loopne
pop
sbb
push
push
lret
subl
pop
andl
mov
mov
outsl
xor
sub
jg
clc
repnz
call
push
nop
idivl
sub
cmp
inc
xchg
mov
mov
aaa
out
or
insl
mov
sti
push
sbb
xlat
inc
loopne
int
or
negl
imul
sub
xchg
add
repnz
loop
xor
ret
cltd
std
mov
mov
xor
ret
movsl
jbe
int3
popf
xor
mov
xchg
pop
sub
or
xlat
mov
aam
cmpsb
aaa
mov
in
push
sti
aam
and
dec
mov
lret
sbb
mov
push
xor
pslld
add
xchg
jp,pt
jmp
dec
jle
mov
pop
test
fldcw
pop
pop
jge
cmp
outsb
icebp
lret
dec
rcrl
pop
lcall
adc
dec
lods
cmpb
enter
mull
adc
test
mov
mov
in
cwtl
es
scas
and
mov
das
push
add
scas
in
dec
test
sub
stc
push
lahf
adc
add
xchg
mov
pop
cmpsb
or
xor
or
in
push
mov
sti
xchg
mov
sbb
mov
lds
dec
mov
sub
mov
push
jb
mov
push
fmul
fistl
mov
mov
fsubs
lret
mov
fidivrl
and
daa
jb
cld
aad
hlt
xor
and
push
aaa
xchg
mov
outsl
scas
mov
xchg
loope
stc
mov
test
aas
mov
push
add
test
pop
dec
das
lahf
mov
xor
ljmp
fadds
xchg
lahf
xchg
inc
and
dec
pop
lods
and
aam
add
or
ret
xor
sbb
fbld
fimull
and
sbb
adcb
inc
and
and
inc
pop
orb
aaa
adc
push
jbe
push
mov
adc
sbb
xor
shrb
insl
mov
lds
leave
sbb
cmp
mov
repz
lods
or
pop
into
mov
arpl
mov
loope
push
push
js
sub
pusha
popf
push
sbb
repz
jg
add
mov
ret
mov
in
dec
sub
jp
out
aaa
and
xor
popf
mov
mov
lcall
pushf
dec
lods
or
das
cmp
pusha
xor
xchg
jae
xor
scas
cmpsb
mov
arpl
pop
dec
mov
mov
cs
and
lods
ss
fsubr
add
mov
popf
or
mov
mov
inc
and
adc
stc
jl
mov
pop
loopne
cmp
mov
xchg
jbe
fnstcw
out
fildll
leave
and
mov
pop
scas
dec
jnp
adc
pop
movb
insl
pop
fadds
inc
test
mov
movsb
or
lahf
xchg
sti
push
pop
mov
push
outsl
jno
negb
sub
repz
mov
add
test
cwtl
xor
add
push
push
mov
push
fldln2
lods
inc
sbb
adc
int3
mov
push
lcall
ret
fwait
and
repnz
push
hlt
movsb
lret
aas
scas
or
push
mov
pusha
or
sub
add
pop
pop
mov
bound
outsb
sbb
subb
int3
sarb
mov
xor
cmp
movsl
lahf
dec
pop
cmpb
lret
pushf
mov
mov
neg
out
aad
loop
gs
jns
sti
add
aad
cwtl
test
pop
loope
addr16
cmp
daa
push
mull
jl
inc
mov
cmpsb
in
ljmp
mov
clc
and
int
sbbb
and
and
xchg
shl
xor
push
mov
aam
xchg
cli
rorl
rclb
test
jo
sbb
loope
stos
js
aas
mov
gs
push
neg
orb
repnz
clc
jnp
loope
arpl
pushf
push
in
adc
mov
mov
mov
fxch
gs
push
loopne
push
push
push
out
imul
dec
test
jmp
shll
xchg
mov
jmp
fstps
and
fildll
push
adc
xor
pop
imul
ja
cli
and
jmp
jne
je
test
mov
cld
mov
adc
mov
mov
cwtl
leave
jae
xchg
sbb
sbb
ret
out
ret
pop
xchg
cwtl
mov
cld
xchg
into
movl
dec
push
bswap
jne
insl
pop
scas
leave
sbb
leave
mov
test
testl
bound
cmp
lcall
jae
mov
push
jne
icebp
test
mull
push
cmpsb
mov
cmp
jb
push
mov
mov
and
xchg
fdivs
scas
jl
jecxz
insb
scas
insl
ret
adc
mov
cld
xchg
mov
in
push
nop
xor
rorl
push
lock
int
iret
les
incl
out
loope
mov
popf
push
lahf
in
outsl
in
and
nop
mov
nop
pop
sub
dec
ds
stc
stos
dec
into
stos
jb
inc
jecxz
mov
sarb
xchg
or
bound
movsb
add
or
je
out
mov
dec
mov
xchg
lret
jecxz
shll
das
roll
insb
sub
sbb
ret
icebp
push
aad
push
leave
cmp
pop
subl
movsl
es
mov
dec
jbe
sarl
dec
or
cmpb
popf
test
stos
aam
sbb
lods
push
and
jne
dec
or
jecxz
ljmp
je
lea
daa
xor
loopne
call
lcall
sub
xor
xor
and
das
cli
loop
arpl
std
xor
xchg
or
and
push
outsb
popf
and
mov
rol
stos
jae
addr16
scas
dec
in
shll
fwait
add
ss
pusha
cmpsl
stos
aam
pop
divl
mov
push
inc
and
or
pop
add
icebp
loopne
dec
pop
xchg
xor
cld
sub
sub
clc
push
loopne
popa
push
pop
fsubl
push
loope
xlat
movsb
test
out
adc
ss
pop
in
sbbl
imul
cmp
pushf
push
jp
and
in
gs
data16
mov
jle
mov
cmpsb
push
mov
lods
in
sbb
jnp
dec
and
mov
adc
adc
mov
add
xchg
clc
jmp
jnp
inc
adc
sub
test
imul
loop
daa
xor
jns
mov
add
cmpb
xchg
dec
ljmp
aas
aad
sub
test
fldenv
jp
mov
jl
mov
jns
rcrl
shrl
sub
mov
in
mov
ja
add
jp
lods
fmuls
or
lea
dec
mov
ret
jmp
call
xor
dec
mov
and
fnstenv
inc
push
popf
jnp
ss
loopne
mov
mov
adc
jl
mov
mov
mov
popf
xchg
jecxz
mov
push
push
pushf
lretw
cmpsl
jecxz
inc
shl
lea
pop
xor
or
in
dec
sti
test
inc
mov
mov
sub
pop
fnstsw
mov
les
fwait
and
mov
ret
dec
fisttps
jb
xor
mov
mov
push
push
fucomip
imul
es
arpl
inc
jnp
test
add
fadd
inc
aaa
mov
jmp
ss
loopne
fcoms
outsb
push
sub
dec
das
push
mov
fisubs
out
aam
mov
pop
sub
in
jno
inc
mov
dec
jl
push
mov
repnz
and
pop
sub
shr
movsb
xor
sbb
popa
das
fucomi
xchg
adc
aad
mov
inc
cld
loopne
and
push
int3
cmp
sub
xorb
cmp
xchg
inc
sbb
jbe
dec
mov
sbb
jns
adcb
cmp
mov
sbb
subb
mov
outsb
sub
adc
je
adc
imul
and
jge
push
pop
call
test
mov
jns
fiadds
test
ljmp
call
mov
loope
or
jno
aaa
inc
icebp
es
out
pop
pop
iret
xor
pop
sub
mov
or
test
inc
imul
ds
mov
stos
or
mov
data16
mov
cs
pop
and
jbe
and
arpl
dec
stos
xchg
xor
mov
fildl
cli
and
imul
mov
pop
aaa
in
xor
pop
aas
jecxz
insl
imul
jo
addr16
outsl
xchg
mov
lea
cmp
mov
and
mov
hlt
sahf
cltd
outsl
sub
popa
inc
mov
filds
add
sbb
stc
dec
jp
daa
pushf
jns
jl
dec
xor
insl
dec
cmp
enter
push
ret
test
aaa
in
and
mov
lock
int
cltd
mov
inc
xorl
pop
js
nop
pop
push
sub
or
mov
pushf
xchg
xor
test
dec
sti
push
pop
jns
cmc
stc
dec
inc
int
cli
fnstsw
lods
or
loop
xor
pusha
enter
neg
or
mov
mov
test
xor
decb
or
pop
addr16
add
mov
mov
decb
mov
dec
adc
scas
mov
cmpsb
jb
xor
outsb
xchg
jge
data16
adc
push
mov
pop
cmp
testb
fiaddl
int
mov
lods
sub
je
insb
mov
fsts
lahf
lret
mov
push
ficompl
adc
jae
push
xchg
push
jbe
push
fsts
xchg
cmp
jp
jmp
push
out
jge
inc
rclb
je
or
fnstsw
gs
sti
mov
shrb
into
pop
clc
pushf
add
es
jb
lret
sbb
jne
arpl
dec
push
pop
mov
add
mov
outsb
mov
adc
sub
adcb
dec
fsubrs
dec
clc
outsb
addb
idivl
jbe
add
mov
push
push
jle
leave
shrl
pop
pusha
pop
sarb
mov
mov
xor
push
inc
adc
xor
or
rcrl
stos
rep
les
or
mov
cmp
lea
push
popf
cmp
and
lcall
inc
cmp
xor
pop
xor
outsb
mov
dec
cld
aas
inc
cmp
fistpll
inc
xchg
xlat
sub
mov
mov
sub
push
sbb
sub
pop
mov
sub
inc
or
mov
jge
or
xor
hlt
push
mov
add
xor
adc
icebp
inc
ret
rcl
xchg
mov
test
xlat
jp
clc
mov
test
adc
into
lods
jbe
cwtl
ljmp
mov
arpl
incl
push
dec
xchg
cmpl
pop
xor
sarl
call
or
pusha
add
ljmp
mov
add
lcall
rol
packuswb
movsl
cmpl
es
insl
scas
les
adc
jp
adc
push
jle
cmp
adc
ret
inc
mov
fdivrp
mov
mov
sub
jae
repz
mov
ficoml
jns
jae
pop
ret
fimull
je
xchg
fstpt
and
or
outsb
fdivrs
sarb
movsb
inc
or
push
push
pop
xchg
or
call
shlb
push
stos
jge
popa
insl
enter
sbb
aad
jbe
or
jecxz
lcall
xor
mov
lds
dec
addr16
xor
mov
es
ss
inc
push
sbb
pop
dec
add
dec
mov
mov
mov
iret
inc
lods
lret
pop
mov
mov
stos
es
bnd
dec
pusha
shll
incl
push
aam
mov
sbb
add
lock
je
push
aam
mov
pushf
das
mov
ljmp
leave
mov
mov
sbb
mov
jne
or
jbe
and
sti
sbb
mov
or
inc
gs
jecxz
dec
jno
jecxz
adc
xor
out
andl
and
mov
jecxz
pop
aas
ss
pushf
cltd
insl
jbe
jle
mov
push
les
jnp
ss
sub
push
xlat
inc
inc
in
imul
or
adc
mov
dec
stc
xor
fisubl
in
inc
push
nop
outsb
pop
cld
xor
in
and
insl
cmpsl
add
scas
push
lea
fxch
or
stos
xor
mov
lcall
jecxz
sbb
fdivrl
jo
sub
lret
mov
shl
imul
mov
test
pop
xor
mov
inc
inc
xchg
out
cmp
xchg
test
or
mov
pop
cmp
loope
push
es
fstpt
xor
ficoml
cmp
xlat
cwtl
aaa
daa
pop
pop
orl
push
lea
je
imul
jae
xorb
jne
add
mov
inc
out
faddl
lret
out
shlb
add
mov
jle
adc
or
sub
mov
dec
mov
mov
mov
lret
sbb
and
lahf
jp
add
nop
mov
xchg
insb
lea
sarl
cmpsl
es
stc
and
loope
test
cmpsb
aas
adc
aas
xchg
incl
in
nop
xor
add
daa
lea
mov
mov
lahf
aad
scas
bswap
divps
add
sbb
xor
outsb
lods
out
movsb
pop
sbb
inc
xchg
mov
fcomps
pop
scas
insb
add
call
sub
hlt
in
xchg
xchg
rcll
pop
aaa
lods
or
lret
mov
dec
mov
ror
lods
dec
cmpsb
push
jb
pushf
jg
xor
inc
aad
repnz
gs
loopne
xchg
jne
sbb
xchg
xchg
outsl
ret
adc
dec
mov
clc
loop
xchg
dec
sub
mov
cmp
lcall
scas
loopne
xchg
lret
sub
sub
fldt
cmc
dec
adc
loop
mov
pop
dec
xlat
test
pop
cltd
sbb
pushf
shl
jo
fstpt
adc
and
lcall
xor
flds
mov
mov
mov
push
in
pop
adc
adc
out
xchg
adc
aaa
jb
mov
inc
dec
mov
cmp
cltd
jbe
add
addr16
out
lods
addl
cmpsl
mov
adc
rcrb
or
mov
mov
push
adc
fdivl
add
js
int3
test
mov
xor
cmpsb
cwtl
fs
cmp
mov
enter
mov
add
jnp
cmpsb
out
scas
mov
divl
mov
jae
popa
xor
mov
mov
pop
stos
xor
lock
addb
xor
popa
popa
addr16
mov
ja
popa
cmp
push
movsl
popf
mov
lods
push
mov
inc
fdivrl
sbbb
cmpsb
xchg
int3
mov
daa
mov
arpl
mov
jmp
push
les
jle
pop
cli
ret
add
sahf
inc
jo
dec
shll
mov
dec
imul
adcl
fwait
test
sbb
out
lea
dec
es
mov
add
mov
test
and
leave
jg
fistpll
lret
add
inc
cmp
je
pusha
test
inc
push
movsl
jmp
xlat
out
imul
lret
add
dec
out
test
xchg
bound
aas
sub
stos
mov
in
cs
sub
daa
sub
and
sub
pmaddwd
ljmp
jg
fsubr
jnp
push
mov
cmp
mov
cmpsl
pop
fwait
inc
xchg
dec
mov
cld
sbb
or
sub
inc
mov
pmulhuw
xor
mov
inc
faddl
push
lret
stos
mov
mov
leave
in
ja
data16
fstl
bound
xchg
jo
sub
add
fbstp
mov
mov
rcrl
mov
lods
sar
pop
sub
repz
pop
bnd
aam
test
out
aam
imul
mov
lret
pop
rol
test
sbb
add
push
sbb
xchg
loop
stos
fstpl
mov
mov
push
pop
inc
data16
mov
push
cld
add
call
std
test
stos
xor
mov
insl
dec
or
jae
ds
fistpll
daa
jne
or
imul
insl
in
cmc
mov
sbb
ja
mov
out
rolb
iret
adc
ljmp
and
mov
jbe
ljmp
mov
cmp
push
dec
movsl
and
nop
xchg
addr16
and
cld
jnp
into
pop
insb
gs
mov
call
jbe
dec
cld
sti
fwait
addb
inc
cltd
daa
icebp
push
sbb
xchg
mov
scas
pop
mov
aam
sub
mov
push
aaa
pop
mov
cltd
mov
lret
xchg
push
arpl
adc
pusha
nop
insl
push
imul
jo
dec
mov
cmp
jno
or
dec
mov
sub
cmp
mov
pop
cmp
sub
xchg
pop
sub
lods
testb
ret
test
sub
pop
sub
arpl
xor
mov
adc
fdivr
inc
xor
inc
movsb
mov
and
push
cmp
and
inc
icebp
shll
jge
adc
dec
cmc
out
or
sbb
sbb
add
cmp
jle
sub
xchg
push
mov
leave
aaa
push
lret
mov
ficoms
cli
cmpsl
mov
sahf
mov
aad
shrb
push
sbb
cmp
loopne
sbbl
outsb
test
add
lahf
repz
jns
or
or
cmp
shll
in
mov
addr16
push
std
mov
sarb
call
inc
or
add
add
cmp
pop
sbb
sar
mov
sub
mov
pause
pop
hlt
and
invd
xor
out
in
sahf
jmp
dec
adc
hlt
test
out
loope
jg
mov
push
mov
out
loopnew
fldenv
xchg
das
pop
push
xchg
in
lea
inc
sbb
insb
jbe
ja
inc
test
outsb
push
fildl
jg
lods
cmp
mul
in
sub
or
nop
fwait
ds
push
loope
pop
mov
std
cmp
add
and
subb
fwait
adc
sbb
lret
pop
inc
sub
pop
xchg
movsl
jnp
fwait
jno
icebp
cmpsb
and
cmp
cmp
dec
push
repnz
stos
cwtl
xchg
pop
add
push
out
test
enter
adc
ss
add
sahf
add
into
shll
test
mov
imul
fidivs
cli
sub
xor
jge
lret
pop
xor
jg
cmp
ds
loope
cmc
ds
adc
lcall
push
enter
cmpsb
pop
scas
push
xchg
adc
vpperm
ss
in
movsb
leave
sbb
inc
orl
mov
cmp
clc
sub
dec
sub
add
mov
sbb
inc
adc
mov
stos
xor
and
mov
rorl
pop
xor
jle
push
rolb
rorb
iret
call
std
jl
fs
rolb
mov
jne
dec
adc
or
or
sub
mov
pop
fbstp
jo
adc
cmc
push
outsb
adc
pop
sub
dec
cmp
fstpl
imull
and
adc
cwtl
add
js
pop
int
mov
insb
aam
pop
jnp
mov
or
mov
fistl
cli
cs
cld
sbb
push
negb
test
xchg
rorl
adc
das
mov
dec
push
mov
jne
inc
add
cmp
jae
adc
inc
mov
sahf
int
mov
call
mov
mov
sbb
mov
scas
lret
jp
shrb
sub
or
inc
jnp
in
es
dec
js
mov
cs
or
testb
and
fadds
pushw
inc
les
xorl
insb
daa
scas
jne
sbb
mov
adc
icebp
aaa
jbe
xor
test
dec
outsb
cmp
sub
sbb
test
jg
xor
sbb
sbb
adc
add
mov
adc
adc
jle
int3
and
dec
cmpsl
dec
out
mov
data16
fwait
jnp
cwtl
std
jg
mov
fadd
arpl
xlat
sub
fcoml
mov
inc
add
xorb
cwtl
sbb
mov
nop
inc
adc
orb
scas
ds
mov
inc
imul
pushf
mov
sarl
mov
jne
lcall
out
loope
xlat
out
adc
sbbl
clc
mov
fst
in
inc
cmp
js
push
adc
mov
inc
mov
mov
rcll
popf
or
jge
sub
fcompl
jmp
push
xchg
push
or
push
or
pushf
or
add
out
xor
subb
mov
push
jecxz
shr
pop
xor
ret
fdivs
cmp
push
sarl
cld
cmp
insl
pop
inc
xor
sbb
scas
push
mov
xlat
int
fisubrl
sti
sub
adc
dec
push
cld
mov
sbb
jb
sarl
mov
iret
js
sub
adc
dec
xor
aaa
push
xchg
in
cmp
sub
fs
packuswb
fsubrl
std
and
dec
lock
add
je
xor
jb
jns
in
push
leave
sbbl
testl
lea
fstl
js
jl
fucomp
adc
push
dec
int
std
daa
enter
in
inc
xor
in
push
push
mov
push
mov
pop
push
jae
jae
dec
iret
addr16
cmp
push
test
mov
fldenv
into
cld
ds
cmc
sbb
mov
jle
sbb
js
inc
cmpsb
shlb
mov
adc
aam
gs
push
or
outsb
jge
aad
aad
push
shrb
dec
dec
push
jecxz
arpl
cmp
and
rolb
rcl
cmc
pop
inc
sbb
dec
mov
xchg
jecxz
add
jbe
lret
out
xor
pop
mov
pop
and
xlat
mov
sub
sub
cmp
sbb
clc
fisttps
mov
pop
nopl
mov
pop
adc
add
fldt
into
mov
ret
nop
into
hlt
adc
pop
or
adc
imul
and
mov
out
in
push
ret
pop
loop
xchg
xor
lock
add
int
mov
jno
popf
insb
adc
adc
mov
push
mov
dec
hlt
sub
inc
inc
andb
or
jns
dec
rcll
sub
xchg
or
cwtl
sbbb
jg
xor
xchg
in
es
cmc
mov
jg
mov
mov
and
and
jne
mov
in
sti
sub
test
add
ret
ss
lds
pop
push
lods
imul
js,pn
iret
adc
jne
pushf
pusha
pop
insb
loope
xchg
sub
arpl
testb
test
negl
fcmovb
cs
cmp
daa
lcall
insl
pop
rclb
movsl
cli
and
sahf
in
sub
loop
sbb
mov
mov
add
sti
jno
lret
inc
aaa
pushf
arpl
cmp
and
cmp
dec
jmp
rcl
pushf
enter
and
fdivrs
cmp
js
fcmove
sbb
nop
or
xchg
and
rcll
jne
lret
shl
cwtl
sbbb
iret
in
mov
pusha
sub
pop
nop
mov
and
cmp
in
int
daa
popf
sub
jno
clc
cltd
xor
out
fcomps
inc
call
and
imul
adc
adc
jnp
daa
insl
pop
insb
cmp
mov
loop
xlat
enter
insb
sahf
adc
xchg
dec
mov
fisubrl
mov
repnz
fwait
push
add
xor
lcall
inc
pop
in
aas
loopne
jmp
add
push
adc
sahf
push
jae
test
inc
sbb
gs
insb
xchg
lock
aas
dec
stos
icebp
das
xchg
adc
lock
push
jns
rorl
sbb
test
ds
sti
addr16
sbb
xor
insb
jg
dec
in
mov
cmp
pop
lcall
jl
orl
push
inc
mov
std
sub
pop
and
inc
or
dec
or
or
xor
insl
dec
adc
iret
jbe
mov
ss
sbb
or
jne
in
cmp
aaa
and
pop
mov
inc
adc
inc
aad
xor
mov
or
jecxz
idivb
pop
mov
shrb
les
rorl
or
xor
dec
xchg
lods
dec
cmp
or
fistpl
xor
mulb
lock
lcall
push
sub
pop
and
jle
andb
lods
fcompl
and
lret
mov
xchg
mov
pop
cmp
pop
pop
pop
dec
cmc
jns
aam
xchg
fstpl
imul
lods
aad
out
scas
pushf
dec
lcall
or
inc
push
hlt
dec
xor
adc
cmp
mov
xor
ret
pop
daa
clc
pop
and
jne
enter
adc
xchg
mov
jb
inc
jbe
daa
out
push
or
lret
jb
fisttps
mov
aaa
fldenv
push
xchg
ljmp
nop
mov
xor
cmp
push
xor
xchg
shlb
add
out
arpl
or
scas
loop
xchg
or
lret
push
movsb
dec
cwtl
lret
or
push
sub
cmp
xchg
jg
pushf
or
inc
mov
push
subb
mov
and
pop
push
fimuls
fstps
mov
hlt
mov
in
lret
dec
test
adc
jnp
xor
hlt
cli
movsb
mov
mov
xor
into
sbb
add
loop
xor
mov
jle
in
and
into
in
int3
sarl
filds
sahf
popa
fisubrl
shr
or
ret
mov
jb
inc
aas
hlt
pop
adc
les
push
mov
jb
xchg
mov
fcomps
fld
repnz
mov
rcrb
je
ds
xor
pop
sar
add
mov
out
rcrl
mov
pop
sub
xchg
pop
cwtl
cmp
test
cmp
mov
mov
and
lret
bswap
pop
lods
cmp
cwtl
in
sub
jmp
scas
aaa
push
nop
and
andb
das
repnz
push
jno
shll
sub
xor
stos
jno
ja
lahf
rorb
xchg
mov
rclb
push
add
clc
mov
inc
sub
mov
stos
rcrl
lock
push
lock
test
inc
xlat
mov
and
bound
loope
sarb
cmp
fildl
lds
jg
in
push
prefetch
or
sub
nop
xchg
mov
push
xlat
in
ret
mov
pop
fidivs
cmp
xor
ja
sbb
add
xor
lcall
mov
insb
rorl
or
add
dec
xor
xorb
mov
aam
add
add
push
cld
dec
mov
mov
ret
inc
lea
and
roll
stos
inc
ret
es
rorl
jecxz
mov
fimull
cmpsb
ja
mov
xor
or
andl
add
aas
lock
cmc
push
push
jl
shl
js
dec
stc
push
cltd
movsl
bound
fisttpl
cmc
jno
lahf
out
dec
test
inc
pop
xchg
addr16
pushf
mov
mov
or
push
mov
and
dec
imul
inc
movsl
push
xchg
push
and
std
mov
dec
pop
rorl
out
dec
add
fildll
leave
imul
clc
leave
leave
mov
dec
jle
add
mov
sbb
adc
add
or
cmpb
xchg
mov
pand
stc
in
and
bound
outsb
inc
cmpsl
jecxz
jp
test
movsb
popa
push
shrl
push
xor
push
aam
inc
cmp
fsincos
sub
mov
ss
dec
add
sub
push
mov
dec
fdivrs
daa
xor
sub
mull
repz
cld
pop
adc
mov
xchg
arpl
sub
or
jae
xor
xor
fcompl
sub
enter
xchg
adc
push
jl
movsl
sub
mov
mov
cmpsb
mov
sahf
nop
addr16
mov
call
lods
rol
or
dec
xlat
pop
cli
push
inc
or
or
out
stos
sub
movsl
jl
repz
loopne
inc
arpl
inc
inc
jbe
cmp
ret
mov
jbe
fs
rcrl
pop
inc
jae
add
jge
lret
std
fstps
cmp
idivl
push
into
pusha
push
sub
sbb
xor
push
repz
jecxz
into
mov
xchg
sti
add
loop
imul
push
and
gs
xchg
xchg
xor
jmp
xchg
dec
repnz
xchg
mov
add
mov
adc
lahf
shlb
insl
dec
jbe,pn
js
jle
push
out
pop
out
jmp
dec
lock
shlb
mov
inc
mov
insb
loopne
shll
rcrb
mov
mov
cs
add
dec
and
mov
cmp
mov
rorb
and
push
mov
push
xor
cmp
or
mov
mov
fnstcw
out
leave
lock
sbb
xor
in
loop
loopne
mov
xchg
xchg
sbb
inc
aam
jnp
or
adc
jl
cmp
nop
xchg
imul
dec
jno
sub
mov
test
mov
pop
mov
loopne
mov
xlat
pop
pop
sbb
loop
repz
orl
rclb
xor
out
shll
popa
call
movsl
daa
add
loop
cld
pop
jecxz
nopl
movsb
lret
andb
repnz
icebp
aas
xor
xor
outsb
mov
outsl
das
cmpl
mov
add
sbb
cmpl
imul
jae
fwait
icebp
insl
jp
xor
mov
scas
push
lea
mov
xchg
out
dec
loop
xchg
repz
sub
inc
cld
sbb
dec
pop
sbb
sub
pop
loop
aaa
mov
std
cld
push
mov
adc
nop
mov
shlb
out
ja
lock
fists
jmp
out
mov
faddl
scas
rorb
xchg
dec
jo
jmp
mov
aas
xor
scas
xor
test
vandps
add
pusha
jle
or
fs
ror
int3
inc
adc
dec
sbb
popa
aad
inc
jbe
shll
cmp
mov
and
pop
sub
inc
sbb
fsubs
cmp
int3
cld
or
cmp
jb
adc
jne
lock
mov
in
pop
leave
cmp
push
les
add
into
mov
sbb
repz
mov
inc
push
xchg
mov
call
or
bound
or
dec
xchg
data16
fiadds
cwtl
xchg
sbb
sbb
jg
hlt
and
inc
dec
cltd
loop
pop
mov
pusha
repnz
call
xor
jae
jno
setbe
xchg
xchg
inc
push
aaa
gs
leave
inc
ret
lahf
shlb
mov
cmpb
hlt
push
dec
dec
cli
mov
lock
ficoml
jo
jmp
in
inc
loop
xchg
in
lcall
arpl
xor
popf
data16
push
sub
pop
fucomp
push
out
push
aam
xor
sub
push
in
mov
adc
xor
jns
mov
pop
aas
dec
adc
pop
add
dec
je
sbb
jg
sbb
hlt
cmp
mov
sbb
jg
std
inc
fcmovbe
nop
cmpsl
in
test
and
lock
mov
push
fucomi
push
adc
mov
cwtl
jg
cmp
or
xchg
jmp
lods
inc
fisttps
lods
mov
pop
stos
sbb
rcll
jno
sbb
pop
and
mov
test
rorb
mov
mov
ljmp
sbb
ds
fiaddl
js
imul
or
jb
idivl
scas
jne
jb
daa
mov
cmp
pop
insb
icebp
les
cmpsl
inc
xchg
aam
dec
int
cmp
out
add
inc
stos
or
fstl
add
call
xchg
dec
js
mov
les
pop
dec
decl
sahf
sub
scas
aad
xor
or
pop
fs
aad
and
dec
lret
fstl
inc
js
or
xchg
sbb
test
jne
mov
nop
incl
jg
mov
adc
xor
mov
ja
outsb
lock
in
sbb
add
ljmp
or
sub
mov
into
movsb
adc
mov
fwait
xchg
xchg
pop
ds
iret
rclb
cltd
jecxz
pop
jl
ss
lods
mov
dec
jo
mov
adc
aaa
xchg
or
mov
inc
push
sbb
adc
mov
sti
pop
pop
ljmp
dec
sar
jmp
nop
push
and
jb
jb
mov
lret
pop
jns
loop
arpl
lock
addl
movsl
dec
flds
test
and
pop
cmp
jns
sahf
push
pop
or
or
iret
inc
jl
pop
lods
stos
jne
sbb
arpl
xchg
dec
seto
dec
aam
fnsave
inc
gs
pop
mov
cmpsl
ja
push
pop
jmp
test
mov
ret
jbe
and
mov
cmp
xchg
xor
fwait
rcr
gs
adc
dec
in
push
add
imul
testb
outsb
stos
mov
jl
xchg
add
dec
pop
push
sub
cwtl
inc
mov
lea
les
mov
dec
pop
imul
sbbb
sbb
fnstcw
inc
data16
stos
in
dec
cmpl
int3
sarb
fbld
xor
mov
pop
int3
adc
or
dec
ds
inc
inc
lock
repnz
lcall
xchg
xor
push
call
ret
lahf
sbb
cmp
jae
xor
jle
lods
loop
dec
jns
das
negl
ljmp
in
xchg
dec
xchg
mov
push
ja
frstor
mov
or
scas
jbe
mov
inc
mov
incl
push
insb
daa
leave
xchg
mov
jns
sub
lahf
mov
pop
push
fmuls
popa
outsb
sahf
or
xchg
sbb
hlt
int
movsb
je
jle
mov
jmp
outsb
mov
lcall
jns
sarb
cmp
cmpsl
iret
les
out
sahf
pop
aas
xor
mov
mov
fdivrl
sbb
test
into
jb
clc
and
xor
cmc
jg
test
adc
push
cli
scas
jno
cmp
pop
test
cmpsl
pusha
mov
add
mov
xchg
outsl
mov
mov
in
jecxz
or
sbb
shlb
mov
adc
sub
mov
or
mov
and
pop
jno
mov
pop
add
sbb
or
or
fstpt
xor
inc
add
ss
ret
shrb
or
mov
pop
inc
lret
imul
jge
xor
loope
aas
iret
aaa
jp
mov
fnsave
xchg
xor
push
sbb
cmc
mov
imul
mov
jmp
movsb
adc
loope
pop
call
jge
es
sbb
into
ret
icebp
mov
scas
push
pop
rol
push
mov
pop
aam
iret
out
and
cmp
into
jmp
or
not
cmp
fldenv
add
inc
ss
mov
jecxz
or
xchg
inc
testl
jp
sbb
mov
and
jns
xchg
or
repz
arpl
jns
pusha
arpl
ja
sbb
xor
ror
jmp
imul
jae
jno
xchg
cltd
pushf
fldcw
sahf
push
mov
rorb
fistps
jge
jmp
xchg
or
pop
imul
mov
adc
adc
pop
gs
cmp
push
in
adc
pop
jmp
rorb
xor
jnp
mov
in
jle
mov
cmp
or
mov
ljmp
scas
dec
int
call
out
dec
arpl
jns
int3
dec
inc
out
mov
mov
cmp
outsl
and
xchg
dec
push
push
xchg
ljmp
jmp
xor
dec
int3
push
cmp
push
enter
adc
ds
in
push
daa
cmc
sub
clc
stos
mov
cmp
sbb
sub
in
pop
lret
jle
insl
push
mov
jno
fisubl
or
into
std
inc
or
jle
pop
jnp
int3
mov
ljmp
pop
outsb
cmp
pop
mov
movsl
bound
cld
cmp
loop
mov
fcoml
mov
lds
cmp
push
dec
xchg
repz
fadds
mov
xchg
out
loopne
movsb
mov
mov
push
mov
inc
or
inc
ret
cmc
jmp
xor
jg
pop
or
pop
mov
scas
rclb
fisubs
lock
or
ljmp
dec
testl
mov
and
sub
pop
rclb
inc
nop
lahf
dec
nop
nop
lret
cmp
pop
jnp
sub
push
nop
test
jge
mov
ror
pop
mov
jb
push
lods
xor
cmp
mov
out
test
xor
sbb
js
repz
pop
mov
push
jle
call
inc
hlt
push
push
outsl
sbb
push
mov
out
jmp
arpl
jmp
lods
data16
clc
fnstcw
out
out
popf
push
fcmove
call
push
sahf
xchg
or
pop
fldl
gs
pop
jno
out
fnstsw
jg
pop
roll
gs
and
fistpll
pop
cvtps2pi
mov
je
mov
mov
jns
shrb
ret
int3
xchg
aaa
mov
js
in
ret
clc
mov
loopne
in
push
mov
data16
push
insb
push
pushf
mov
aaa
sub
jae
pop
sti
ja
mov
outsb
cli
jae
sub
push
adc
xchg
jle
lods
mov
sbb
jnp
ret
fdivl
add
xchg
sub
sbb
xbegin
jecxz
lret
mov
shrb
xlat
adcb
enter
push
adc
mov
xlat
sub
nop
cmpsl
stos
mov
mov
jo
lcall
jecxz
pop
add
outsl
cmpsb
fisttps
push
pop
xor
pop
mov
or
push
mov
out
mov
out
jns
pop
push
lods
call
addr16
int
mov
xor
repnz
cmp
xor
pushf
dec
mov
es
fstpt
cmp
iret
push
dec
cmpsl
shl
imul
pushf
lret
fcompl
ja
or
leave
in
in
shlb
add
mov
dec
jne
mov
fwait
mov
insl
fldenv
data16
lods
addr16
inc
repnz
ljmp
xchg
xor
push
leave
mov
pop
rolb
jle
xchg
inc
in
std
fwait
push
fnstenv
push
arpl
out
or
xchg
daa
xlat
push
jecxz
dec
dec
insb
iret
aas
call
fistpll
adc
roll
ds
push
rcrb
mov
dec
js
pusha
es
popf
inc
sbb
aas
cltd
mov
js
adc
icebp
pusha
inc
mov
adc
sahf
push
mov
cli
jge
dec
lahf
xchg
movsb
mov
and
inc
pop
es
and
das
outsb
jl
inc
fnstenv
xchg
jb
xchg
jecxz
sub
leave
xchg
enter
fbstp
push
adc
ja
push
xchg
ficomps
jbe
daa
adc
jo
and
cmp
pop
cwtl
icebp
in
pop
xor
xchg
scas
shll
inc
leave
sbbl
enter
rclb
xchg
cmpl
dec
outsb
cld
in
adc
xor
addr16
imul
or
cli
push
mov
sbb
mov
cmpsl
sub
dec
push
std
sub
cmc
and
out
ret
dec
pop
lock
aaa
jb
jno
out
pop
sbb
jp
push
hlt
sub
loope
das
dec
ret
cmp
or
das
cmc
mov
cmpsl
mov
sbb
add
imul
push
repz
sub
mov
push
leave
insb
push
cmp
rcrl
lds
sbb
clc
add
push
mov
adc
or
cli
repnz
jb
inc
insb
push
jmp
test
jae
fs
mov
addb
lret
ret
loope
lock
fisttpll
mov
pop
mov
jge
divl
cmp
xlat
adc
sbb
rcll
rolb
pop
xor
or
push
addr16
cwtl
rolb
mov
lcall
jb
or
inc
lods
jbe
mov
jns
jmp
jno
dec
mov
ror
daa
and
and
dec
mov
xor
imul
sbb
sub
rcrb
sarl
jmp
and
idivl
lret
sub
fistps
cltd
popf
outsl
push
out
out
imul
jmp
notl
cltd
frstpm(287
xor
repz
in
and
sbb
xor
push
cwtl
mov
mov
data16
jge
jbe
loopew
push
push
stos
out
pushf
lds
mov
add
jnp
mov
fcompl
repz
mov
pop
lret
arpl
clc
lahf
fiaddl
xchg
dec
loope
negb
loopne
inc
mov
adc
mov
int3
mov
cmp
dec
push
nop
jae
in
pop
xchg
dec
add
add
aam
leave
cmp
es
rorb
aam
dec
pop
mov
int3
jb
push
idivl
sub
pop
push
fst
jbe
addr16
test
inc
xchg
rclb
pusha
test
addb
push
icebp
inc
xchg
mov
xchg
loop
faddp
adc
cmp
fiaddl
test
push
dec
rcpps
imul
mov
addr16
cmp
fdivrs
mov
sar
out
and
insb
jp
fnstsw
push
les
lods
imul
loop
shl
dec
inc
mov
stc
aas
int
sbb
daa
popf
pop
add
inc
leave
jp
lock
mov
adc
jle
pushf
add
mov
dec
xchg
frstor
push
pop
sub
adc
ret
pop
sub
lcall
jne
mov
test
push
lahf
scas
les
inc
push
lock
out
xchg
lret
ja
sbb
dec
add
adc
inc
shrb
cmpsl
xor
insb
je
add
jp
and
mov
sbb
sub
sub
movsb
lret
nop
andb
rorl
mov
data16
adc
mov
sti
pop
test
fstps
cld
jmp
jb
push
inc
pop
jge
outsl
cmp
push
sbb
add
mov
xor
pop
sbb
ja
push
popf
out
sti
jmp
dec
std
inc
pop
push
add
mov
xchg
ds
lahf
or
push
xchg
fnstsw
fildll
mov
pop
notb
ret
and
dec
fdivrl
call
loop
sti
or
stos
mov
aad
pop
inc
mov
mov
in
lds
cmp
dec
sub
mov
mov
popf
sarb
cmp
addr16
jbe
imul
xchg
arpl
pop
int3
inc
pop
sbb
cmp
fidivrl
andl
jns
cmp
dec
add
cltd
aad
dec
aam
inc
lcall
test
hlt
mov
loopne
xchg
mov
dec
add
popa
mov
xchg
mov
jae
push
fs
mov
jmp
out
nop
jmp
lods
push
push
scas
movsb
stos
ja
cmp
and
or
fisubrl
jg
stos
sub
fs
xchg
fiadds
mov
jmp
imul
aad
ret
bound
das
add
test
inc
fwait
aad
test
mov
jnp
adc
rclb
outsl
xchg
jbe
mov
or
clc
adc
cltd
add
jle
jae
mov
mov
jne
dec
andl
mov
or
sbbl
fwait
rclb
add
rcr
cmp
sbb
inc
out
enter
pop
jmp
add
pop
mov
xchg
mov
adc
pop
cld
inc
dec
clc
lret
sub
xchg
fimuls
cmp
das
test
push
sbb
ret
or
rcll
arpl
sub
insb
bound
aam
stos
add
data16
mov
or
sub
repz
test
imul
mov
andl
jmp
cltd
iret
stc
loopne
jmp
xchg
in
faddl
push
sahf
mov
cmp
push
fldenv
mov
cmp
popf
sarb
out
xchg
xchg
pushl
ds
pop
xor
cwtl
incl
pop
mov
pop
dec
imulb
iret
sarl
inc
pushf
sub
mov
je
mov
cmpsl
mov
rcr
hlt
int
xchg
movsl
cltd
push
stos
jne
loop
mov
add
shlb
mov
roll
adc
addr16
lods
jg
and
mov
out
pushf
xchg
aaa
xchg
mov
xchg
and
nop
jno
aaa
jae
enter
jne
loop
push
int3
and
xor
push
inc
adc
adc
lods
imul
ja
mov
mov
aas
aad
jg
add
gs
xor
add
lahf
pop
les
mov
push
mov
xchg
xchg
sub
jnp
inc
movsl
push
in
pop
hlt
and
fisubl
out
push
pop
mov
rcll
jnp
popa
ss
pop
cmp
or
in
jnp
out
out
push
popf
dec
cmc
ss
fistpl
mov
mov
pushfw
int
sarl
imul
xor
or
je
push
jmp
pop
push
mov
pop
sub
clc
xchg
js
out
subl
stos
in
mov
shll
dec
inc
xor
inc
sub
push
fadd
jns
push
imul
adc
xchg
shlb
leave
pop
inc
negl
mov
jnp
aas
outsb
sub
jecxz
fstl
mov
mov
fld
push
ljmp
js
bound
add
repz
mov
cmp
push
push
ja
push
or
in
mov
addl
push
mov
sbb
jl
cmp
ds
sbb
ds
jbe
out
mov
push
call
pop
dec
loopne
cmp
inc
stc
mov
lret
push
insl
sbb
in
mov
in
lods
mov
incb
mov
jmp
loop,pn
ds
pop
sbb
int
stc
xchg
ret
pop
mov
sub
xchg
outsl
xchg
movsl
mov
and
rolb
push
add
mov
inc
xor
push
clc
lahf
mov
jnp
subb
jo
push
cmp
lcall
jecxz
push
adc
jmp
mov
js
add
lret
jl
into
test
mov
mov
mov
add
inc
repnz
outsl
iret
cmp
pop
push
cmp
repz
movsl
cmp
pop
pinsrw
xchg
dec
jecxz
dec
into
pop
adc
sub
xchg
lret
insl
push
xchg
jo
mov
mov
push
in
fisubrs
mov
add
rdtsc
rol
addb
imul
fwait
ljmp
stos
push
enter
or
stos
mov
cmpsl
lods
loopne
pop
mov
js
adc
add
fsubl
iret
mov
sar
adc
fcompl
jnp
mov
jbe
add
loope
pop
jno
add
xor
xchg
mov
outsl
jb
xchg
into
pop
mov
xor
sbbl
arpl
or
adc
mov
mov
jno
dec
fdivrp
jge
and
hlt
pusha
xchg
xchg
xchg
mov
push
xchg
lods
andl
dec
and
out
mov
outsb
jle
jmp
outsl
popa
push
cmpsb
push
mov
test
sub
clc
insb
sbb
pop
loop
rolb
cmpsb
in
xor
pop
xchg
outsl
test
pop
mov
mov
xchg
dec
lret
out
cmp
pusha
add
fcomi
cs
mov
pop
ss
xchg
fcompl
movsl
inc
aas
mov
imull
push
xchg
jno
stc
popf
pop
js
pop
jecxz
pop
xchg
scas
fists
insl
mov
xor
arpl
flds
imul
insb
aaa
in
sti
xchg
jo
test
pop
mov
dec
lret
add
sbb
loopne
inc
jns
icebp
mov
xchg
jg
cltd
int3
xchg
out
icebp
jo
loopne
push
fsubs
push
cmpsl
in
je
jo
icebp
xchg
inc
test
jb
es
dec
test
es
std
pop
jo
dec
arpl
sarl
mov
mov
lret
xchg
cmpsl
xchg
addr16
sub
fsts
aad
fmuls
pop
sbb
in
add
sbb
ret
ja
ja
push
sahf
inc
outsl
jo
fadds
outsl
shr
lret
xchg
inc
lahf
push
fwait
js
aam
sub
aaa
mov
pop
jp
ret
pop
push
push
repz
xor
clc
loop
xchg
mov
xor
cs
xchg
fnsaves
push
lock
pop
ret
int
sub
dec
mov
sbb
and
push
scas
mov
dec
stc
push
sbb
loopne
ret
repnz
dec
xchg
mov
sub
lea
aaa
mov
gs
js
scas
daa
add
cli
xchg
xchg
jmp
cwtl
mov
and
out
pop
xchg
mov
scas
pop
jae
dec
mov
jmp
in
xor
loop
xlat
daa
pop
dec
aas
hlt
ret
jnp
sbb
mov
test
cmpsb
out
loope
popa
shll
mov
xacquire
test
add
fcompl
pop
mov
xor
mov
fadds
push
lods
sub
jp
jge
push
ss
sub
scas
sub
and
lea
pushl
xor
or
push
jbe
xchg
adc
mov
out
orl
rorl
mov
xchg
cs
lods
out
add
jge
push
xchg
jo,pt
or
mov
mov
xorl
dec
cmp
mov
add
cmc
mov
mov
ds
std
arpl
paddd
in
pop
test
gs
jmp
into
xor
mov
mov
inc
push
push
mov
dec
cli
ja
adc
fstpt
xchg
mov
out
je
repz
xor
inc
xchg
jae
movb
clc
call
adc
pop
mov
ror
xor
adc
dec
inc
into
inc
push
sub
cltd
hlt
in
adc
shll
xchg
inc
int3
repz
xchg
push
pop
cmp
lea
stos
mov
call
mov
sbb
xchg
adcb
jb
fmull
hlt
bound
je
ret
jmp
push
jp
dec
imul
in
sub
inc
xchg
movsb
dec
stc
arpl
inc
les
xchg
inc
mov
sub
inc
mov
xchg
push
out
into
mov
insb
pop
in
in
sti
gs
daa
fadds
add
ss
test
jecxz
sub
xor
stos
scas
cmp
mov
adc
mov
cmp
mov
cs
jp
lods
loope
addr16
idivl
outsw
popa
imul
andl
push
popa
inc
bound
hlt
aaa
int
add
aad
or
xchg
mov
pop
aaa
jno
sub
jge
or
xor
les
sbbl
lods
int
test
mov
push
mov
int
push
cli
mov
in
push
dec
stos
out
std
aad
push
cmp
adc
in
add
xchg
mov
mov
or
xlat
cmp
pop
icebp
int
repz
shr
cmp
rcll
add
stc
mov
push
xchg
inc
je
mov
outsl
push
add
imul
sbb
and
pop
sub
out
pop
mov
mov
aam
lods
xchg
dec
push
add
fwait
jne
push
out
xchg
loop
jnp
daa
sarb
dec
mov
mov
sti
int3
push
mov
fcomps
jle
push
mov
or
fs
cld
and
lret
rcrb
inc
scas
push
and
fwait
hlt
push
add
aam
lret
in
aad
cmp
stos
popf
mov
mov
lds
inc
std
sbb
jmp
push
dec
popf
mov
rorl
jo
push
adc
ja
int
scas
cmp
jg
xchg
gs
test
fnstenv
jnp
ljmp
ret
bnd
and
dec
je
push
and
or
cwtl
punpcklbw
pop
xlat
push
shl
jmp
sbb
dec
cli
mov
orl
out
mov
aad
les
xor
jl
mov
in
aaa
cmpsb
mov
ja
xor
arpl
inc
movsl
lds
lods
add
and
xor
pop
xor
leave
fists
fidivrs
hlt
add
jne
and
mov
mov
daa
arpl
push
mov
dec
fcmovb
cmp
mov
loope
cld
and
cwtl
and
sahf
jne
inc
sbb
and
or
inc
fst
movsl
push
jae
in
cmp
xor
mov
loopne
jo
data16
mov
mov
arpl
cmpsl
xor
fucomi
pop
xchg
cmp
inc
mov
emms
sbb
outsl
add
cmp
push
xchg
arpl
fcompl
pusha
call
inc
jl
aaa
lods
cmp
mov
orb
cmp
lea
ds
das
idiv
or
rcr
sbb
frstor
sarb
or
sub
sub
stc
dec
and
mov
aas
div
push
les
fwait
rcll
ret
xchg
xchg
adc
imull
mov
pop
sub
sub
mov
sub
push
fcoml
jae
iret
sub
push
iret
ljmp
aam
push
mov
xchg
orl
push
mov
sbb
ja
dec
pop
or
sbb
jns
xchg
pushf
jmp
xchg
pop
push
ds
fsubr
bound
xor
jno
es
inc
in
sbb
cmc
mov
push
lret
add
popa
and
pop
add
dec
and
int
das
jns
jnp
test
ljmp
add
stos
mov
popa
lock
hlt
inc
cmp
mov
nop
imul
adc
push
addr16
mov
mov
rcll
inc
xor
fwait
dec
addb
xor
xchg
push
loopne
out
xchg
imul
fimull
add
out
adc
or
hlt
pop
add
mul
aaa
push
mov
inc
jmp
jle
adc
clc
out
in
sbb
inc
add
int3
dec
ljmp
add
fstpt
xchg
out
popf
mov
pop
and
icebp
cmp
outsl
push
test
add
stos
aad
jb
aas
jae
cmpsl
vcmpss
pop
rol
or
add
and
push
mov
clc
lods
lret
imul
mov
sarl
pop
or
or
in
xchg
pop
xor
sbbb
ljmp
sub
cmp
dec
in
lea
push
jg
push
test
js
shlb
mov
roll
push
pop
popf
andl
and
inc
imulb
ficoml
mov
mov
add
or
fnstsw
xchg
add
inc
shlb
jne
scas
into
sahf
es
sti
inc
pop
xchg
fdivrp
xor
leave
cmp
pop
cwtl
cmp
fbld
inc
mov
cmpsl
dec
inc
push
push
sti
cmpsb
fwait
scas
cmpsl
cltd
and
add
icebp
scas
jbe
insb
sbb
jbe
sbb
int3
mov
or
sti
push
adc
int3
sarl
cltd
int
sub
and
cs
addr16
jnp
movsl
sbb
lods
add
test
mull
jl
lods
sbb
outsl
repnz
jge
in
add
mov
aad
movsb
loopne
cmc
sub
loopne
xor
addr16
or
cli
xchg
dec
mov
add
mov
inc
cmp
jb
lock
cld
loope
add
leave
xchg
sbb
lea
add
aas
adc
dec
cmp
movsl
sub
sbb
jmp
xchg
in
sub
insb
pushf
lods
out
adc
jb
inc
int3
inc
or
xchg
inc
imul
outsb
popf
mov
push
fidivrl
std
gs
xrelease
leave
add
adc
fimuls
ret
faddl
sub
adcl
jecxz
sarl
dec
pop
sub
add
sahf
add
jge
mov
in
and
or
rcl
or
pushf
jecxz
xchg
addr16
inc
pop
nop
jp
rcrl
and
lds
jns
push
icebp
inc
mov
shlb
mov
mov
add
pusha
into
sub
sarl
adc
jne
imul
idiv
jmp
push
std
mov
cmp
mov
or
insl
fdiv
inc
sub
pushf
push
mov
popa
lock
mov
pop
adc
sbb
nop
dec
fs
mov
fstl
pusha
xor
out
mov
pop
loop
data16
mov
nop
sbb
mov
dec
test
mov
adc
add
adc
sub
loop
mov
cli
cli
test
test
xchg
fstpl
push
movb
loope
sub
xor
lret
ljmp
ss
fidivrs
fisttpll
out
rorl
jns
adc
int3
xchg
sbb
roll
mov
jb
adc
add
outsl
loope
aas
or
cmp
xchg
mov
insb
jae
insl
sti
jl
addr16
lods
outsl
jns
stos
ss
in
mov
push
shrl
mov
xlat
push
xchg
add
xchg
sbb
sbb
add
xchg
jl
roll
fcmovnu
xchg
shll
dec
push
cmp
pop
lds
jecxz
movsl
arpl
cmpsl
xchg
orl
mov
sahf
negb
andb
adc
rcll
lret
iret
loop,pn
mov
push
xchg
ss
sub
jl
mov
nop
adcb
xchg
les
out
loop
ds
outsb
cmp
xor
call
pushf
and
adc
dec
sub
iret
jb
sbb
pop
mov
in
int3
xor
jmp
xor
push
cmp
jbe
add
add
test
or
dec
in
mov
sahf
pop
pop
shrl
pop
cli
das
pushf
add
jl
addr16
pop
pop
imul
aaa
mov
or
mov
sbb
imull
repz
cmp
sub
bound
push
arpl
xlat
stc
hlt
popf
push
push
imul
xchg
in
into
neg
jbe
out
jae
jp
xchg
jnp
ljmp
dec
cmp
rolb
lret
loopne
mov
mov
cwtl
inc
mov
mov
pop
movsl
cmpsl
in
cmp
fdivrl
mov
push
jl
pop
push
sbb
mov
pop
sbbb
xchg
add
mov
pop
iret
adc
pop
mov
cld
hlt
pop
in
rol
int
cld
rclb
repnz
cmpsb
inc
xor
sti
gs
imul
push
sarl
int3
imul
inc
cmc
leave
ret
ret
and
pop
jmp
fwait
arpl
mov
inc
and
xor
xchg
adc
mov
ret
das
push
dec
xlat
mov
mov
and
hlt
cmp
mov
sti
ret
add
adc
call
jbe
cli
fistpl
sti
dec
test
stos
mov
int3
or
rcl
push
bound
stos
cmp
sub
or
fs
or
add
sbb
mov
sbb
lds
rcll
push
xchg
fstpl
sbb
cmp
out
pop
and
xchg
fpatan
sub
lea
inc
xchg
pop
mov
pop
add
movsb
mov
mov
inc
push
movsb
lahf
in
lods
cmpsb
ftst
jo
in
jb
mov
movsl
sbb
mov
aad
icebp
add
int3
stc
lahf
bound
repnz
xchg
movsl
lret
iret
imul
ret
and
or
and
idivb
mov
pop
cmpsl
dec
xorl
fadd
xchg
dec
mov
sub
lret
mov
ret
mov
pop
mov
scas
mov
aas
rolb
in
les
scas
pop
pop
sahf
push
xchg
cltd
addr16
int
adc
shlb
or
mov
pop
inc
pop
popf
call
popa
jg
cmp
fs
movsl
int3
mov
addl
les
in
jno
fidivrl
cld
jge
or
test
sti
inc
ret
jne
xchg
dec
push
mov
push
xor
inc
push
lods
inc
push
or
mov
push
and
jmp
inc
pusha
jle
lcall
mov
or
add
scas
es
jo
lods
mov
push
or
and
mov
mov
sub
je
inc
test
mov
mov
out
sahf
out
jmp
sbb
mov
mov
dec
dec
and
repnz
cs
mov
js
dec
sbb
cmpsl
dec
or
ljmp
xor
dec
ja
out
fwait
out
pop
pop
mov
dec
addb
stc
iret
ja
fdiv
push
test
imul
mov
mov
cmp
sbb
sahf
dec
das
push
cli
je
iret
ja
incl
loopne
aad
rorl
adc
hlt
xor
push
push
pop
mov
pop
or
pop
decb
jp
xor
es
mov
push
inc
roll
out
or
dec
dec
imul
sbb
and
xor
dec
sti
and
xchg
inc
inc
addr16
imulb
add
and
aas
sub
in
sti
jl
lds
adc
inc
and
mov
repnz
cmp
add
inc
or
mov
mov
mov
ds
mov
jp
repz
pop
lcall
adc
int3
sbb
adc
mov
cltd
lock
fisttpl
roll
sub
mov
insb
das
mov
jle
daa
jbe
and
mov
dec
jns
and
rcll
mov
inc
rcr
mov
push
jecxz
push
into
cli
jecxz
pop
sub
sahf
cld
test
dec
push
pop
jnp
jge
adc
sub
cmpsb
fildll
fadd
sub
sub
jns
inc
inc
mov
repnz
add
mov
xor
repnz
aas
pop
mov
frstor
sub
mov
xchg
shrb
mov
pop
repnz
inc
or
dec
or
lds
dec
mov
push
and
mov
mov
sbb
xor
je,pt
divb
pop
cmpsb
flds
ds
xchg
adc
cmp
mov
imulb
lea
into
push
leave
jle
add
xchg
add
pop
popf
inc
fucomip
arpl
sbb
fwait
ret
adc
pop
inc
jl
mov
movsb
jno
popa
arpl
repnz
cltd
mov
idivl
cli
xlat
cmp
loopne
aad
or
ficompl
mov
je
sbb
jbe
push
test
pop
int3
lea
mulb
js
frstor
push
mov
aam
sbb
inc
inc
popf
mov
mov
fimull
push
int
pop
adc
adc
cld
jmp
icebp
in
cmp
outsb
lods
mov
stos
sbb
jnp
popf
xor
xchg
cmc
mov
xchg
out
and
pop
sub
adc
pop
faddl
pop
in
jbe
cld
mov
and
lret
es
push
ss
and
imul
vpaddb
cmpsl
push
cmpsl
loop
jnp
out
cld
cmp
inc
rorb
call
out
xor
call
adcl
in
and
xchg
add
mov
jns
nop
in
jl
or
push
call
les
add
push
ret
mov
mov
leave
lods
or
adc
divl
dec
fwait
int
jo
imul
fbstp
out
mov
lret
jo
testb
leave
xchg
je
sysret
inc
inc
bound
jecxz
xchg
pop
out
cli
loope
cld
dec
into
in
push
and
stos
aaa
or
mov
and
lret
adc
or
fwait
iret
shlb
cmp
leave
jge
mov
mov
inc
pop
movsb
lret
mov
js
aas
sbb
push
mov
sti
inc
cld
sub
pop
lea
movsl
enter
jns
add
mov
cmpsl
xchg
pop
push
adc
pushf
mov
cltd
outsl
pop
into
mov
sbb
movsb
mov
adc
daa
in
sbb
popw
sbb
xor
or
add
gs
mov
rolb
jbe,pn
bound
repnz
lahf
icebp
mov
outsl
push
dec
inc
sbb
xchg
mov
stos
stos
sub
sbb
dec
sbb
mov
xchg
fistl
add
js
fcoml
fs
push
push
popf
aaa
cld
mov
and
fiadds
fimull
push
jl
call
test
pop
cmp
cmc
push
pop
or
lsl
and
inc
add
daa
xchg
jne
mov
xchg
and
mov
jle
or
and
out
cwtl
push
dec
or
jle
movd
lahf
and
sub
popf
cmpsb
dec
fisubrl
cld
cli
in
and
jmp
push
adc
mov
dec
dec
lret
fstl
push
push
add
mov
cli
xor
pusha
pop
jae
icebp
mov
mov
in
pop
stos
adc
sub
lret
adc
jmp
xchg
xor
imull
shl
push
cmc
jp
xlat
fdivrs
and
dec
adc
movsl
arpl
movsb
scas
rcl
aad
sbb
xchg
mov
dec
jle
dec
hlt
or
pop
inc
repz
mov
pushf
add
in
movsl
mov
rorb
pop
loope
insl
repnz
loope
lret
mov
rorl
xchg
ljmp
cmp
loopne
arpl
xor
sub
jbe
or
xchg
jge
ss
mov
inc
jmp
fistpll
xchg
in
out
adc
imul
cwtl
adc
pop
iret
jp
pop
xchg
scas
or
mov
std
aas
in
stos
sbb
iret
lahf
xor
push
add
mov
or
sbb
sub
mov
pop
aaa
push
test
xchg
roll
testb
movsb
and
mov
dec
loop
testb
leave
pop
inc
movsb
test
push
jne
rcrb
popf
dec
cmp
call
and
ret
sbb
cmp
adc
popf
inc
push
leave
pop
neg
mov
stc
push
arpl
fcomps
movsl
cmpsl
filds
adc
push
push
hlt
dec
sub
and
hlt
cmp
ret
jne
mov
bound
shrl
in
sbb
sbb
mov
mov
ds
adc
push
cmpsl
es
lret
loop
mov
test
pop
jns
xchg
sub
cld
sub
push
je
imul
push
aad
stc
xlat
repnz
test
ffree
ja
ljmp
adc
cmpsl
cs
cwtl
inc
test
cmp
and
inc
movsb
dec
call
push
or
jmp
mov
inc
inc
and
push
stos
mov
xchg
adc
jge
cmp
ja
xor
mov
add
add
bound
inc
jle
into
push
jnp,pn
cmpsb
test
and
shll
cmc
push
call
cmpsl
pop
cmp
inc
xchg
fucomp
adc
xor
mov
insb
test
repz
jnp
ds
mov
imul
fnclex
mov
push
push
not
fisubrs
jmp
adc
fsubs
lret
adc
int3
sub
jno
rorb
cmp
xor
rorl
lret
out
mov
mov
pop
xlat
xor
mov
popl
sub
sub
push
xor
sbb
lds
pop
dec
ficomps
mov
cltd
or
ds
mov
mov
icebp
and
jnp
fs
and
push
movb
cmp
jl
add
push
in
adcb
xor
pop
sub
pop
cld
jp
sub
inc
iret
push
lret
cmp
and
pop
push
je
in
add
and
aas
cli
sahf
jne
xchg
scas
xchg
pop
lds
add
or
aad
sbb
fsubrs
daa
fwait
mov
inc
out
sarl
jle
push
push
jb
inc
xor
sub
mov
cmp
cltd
mov
into
xchg
andb
push
mov
dec
out
xchg
xchg
mov
ror
push
popl
lcall
imul
pop
jbe
test
iret
mov
test
xlat
mov
inc
sahf
jecxz
sbb
les
rcll
push
adc
std
addr16
cmp
cld
mov
mov
and
push
iret
inc
mov
add
orl
jmp
cli
loope
scas
cltd
mov
xchg
jns
push
pop
lods
shrl
cmc
jae
jo
xchg
adc
push
testb
lahf
lret
mov
cmc
jnp
dec
fstps
xchg
out
and
jns
mov
pop
movsl
xchg
xchg
sub
ror
add
bound
push
insb
fnstenv
mov
nop
or
pop
cltd
pop
fwait
mov
jne
bound
cmc
incl
ret
stc
imul
daa
inc
cmp
jo
movsb
xchg
pop
adc
cmpsl
jge
lods
arpl
ret
scas
pusha
daa
daa
clc
fcoml
jl
mov
loopne
fcmovb
stos
addr16
sub
pop
sub
test
cltd
sbb
sbb
jg
test
or
fs
addl
mov
pop
ljmp
sub
enter
cltd
sub
xchg
mov
dec
shrb
add
cli
sbb
dec
pusha
mov
push
aad
sbb
nop
sub
in
ss
mov
xor
test
mov
xchg
lods
test
or
movsb
mov
fs
push
fsub
mov
movsb
sub
xor
in
or
jo
fldln2
testb
nop
insl
roll
cltd
push
testb
mov
inc
xor
fdivr
imul
out
in
mov
mov
cli
push
pop
jns
add
int3
sbb
mov
fisubs
mov
push
mov
mov
cmp
jg
in
add
mov
push
xchg
add
gs
inc
xor
fistps
sub
mov
inc
insb
cmp
movb
mulb
mov
add
movsl
pusha
jl
mov
mov
aad
mov
add
popf
mov
jbe
push
pop
ds
enter
ficoml
xchg
dec
mov
andb
inc
cld
movsl
repz
ret
mov
movsl
and
bound
cmp
fs
xchg
inc
scas
mov
xlat
mov
sarl
cmp
lret
les
lea
or
push
push
jb
enter
nop
push
pusha
popf
inc
push
out
notl
push
gs
dec
push
andb
push
mov
sti
dec
mov
insl
inc
add
add
mov
mov
jl
fldt
jne
push
mov
xchg
jecxz
pop
push
sub
xor
ret
aam
xor
sub
popl
xchg
push
xor
testb
jo
sub
sub
adc
mov
loopne
mov
shr
cmc
sbb
xchg
mov
mov
mov
enter
xor
jmp
mov
js
test
sub
adc
addl
loope
hlt
xchg
movsl
and
fdivr
push
stc
xchg
pop
mov
jo
in
mov
loope
ret
ja
sub
mov
adc
pushf
repz
leave
jmp
or
lret
test
loope
jmp
add
jmp
sub
mov
test
and
test
lock
imul
in
js
inc
and
add
hlt
xchg
mov
les
mov
clc
insl
xorl
mov
das
and
xchg
test
or
xchg
xchg
ljmp
stos
stos
stc
jg
rclb
push
cli
dec
test
ja
lret
inc
jp
stc
inc
jmp
inc
push
aam
hlt
loope
cmp
fstps
lret
push
inc
repz
fistl
xor
adc
pop
faddl
lahf
fldl
in
adc
push
cmp
adc
scas
scas
mov
xlat
xlat
popa
movsl
aas
sub
sbb
xor
push
int
jo
les
jnp
int3
mov
sbb
cs
iret
cltd
dec
in
test
jecxz
sbb
imul
adc
pop
xchg
push
push
pop
mov
lds
stos
lret
lods
and
mov
ret
in
fimull
add
roll
aam
pop
test
aaa
bound
mov
push
insl
cmp
fistl
xlat
sbb
xchg
sbb
jnp
bswap
frstor
icebp
addl
mov
pop
scas
cmp
sub
sbb
mov
out
pop
push
dec
outsb
inc
test
or
or
outsl
movsl
movl
in
pop
pushf
ss
int
mov
add
mov
movsb
adc
sbb
cmpsl
jmp
jecxz
pop
dec
mov
bound
sbb
mov
or
mov
push
mov
push
popa
xchg
cs
sbb
decb
sbb
insl
fs
gs
ret
ljmp
dec
adc
cltd
adc
negl
testb
leave
loop
pop
sub
fsubs
xchg
adc
add
jp
dec
inc
fmul
xlat
lock
add
mov
or
dec
xchg
dec
mov
mov
mul
cs
negl
pop
push
aaa
xchg
jnp
xchg
push
add
cmp
cmp
pop
inc
mov
mov
xlat
nop
scas
fmul
pop
inc
sub
inc
mov
cwtl
and
outsl
push
push
jns,pn
subl
dec
pop
add
cli
xchg
cmovbe
xor
sub
mov
mov
popa
cmpsb
dec
scas
xchg
add
aam
mov
mov
aaa
lret
cld
scas
in
jns
sti
cltd
shlb
cli
lcall
testl
js
stc
je
outsl
add
sbb
mov
add
cli
pusha
jge
pop
mov
dec
jo
push
cmp
push
in
pop
xor
jg
popa
jmp
adc
sti
push
jmp
icebp
loop
jge
pop
inc
add
ds
mov
nop
adc
mov
lcall
nop
imul
test
mov
add
stos
icebp
pop
in
cmp
scas
aas
enter
ror
repz
mov
scas
ja
lods
fwait
add
sbb
xchg
aad
sti
shr
stos
pop
or
mov
pop
cli
int3
scas
ss
aad
sub
cltd
inc
pop
xrelease
xchg
or
imul
jbe
jbe
out
xchg
lea
lcall
and
mov
pop
popa
or
dec
jl
les
or
arpl
xlat
bound
xor
mov
in
mov
bts
shrl
jge
mov
rolb
leave
pop
sbb
fisubs
je
imul
fwait
addr16
jo
xor
vmovaps
or
lcall
dec
mov
incb
sub
dec
addl
xor
pushf
or
ret
or
into
pop
movsb
imul
movsb
arpl
or
jb
sarl
fcmovbe
push
xlat
lcall
mov
cmp
mov
mov
mov
ja
flds
xlat
bound
jne
je
mov
mov
in
pop
push
push
mov
daa
adc
lods
jne
outsl
aad
inc
and
xchg
cmpsb
jo
test
xchg
jnp
js
hlt
lret
mov
ret
sub
and
mov
bound
mov
lret
mov
scas
fiaddl
test
sarl
sbb
jne
pop
orl
mov
lods
xchg
dec
mov
aaa
mov
mov
daa
outsb
fsub
dec
bound
jne
out
sbb
inc
orl
mov
mov
xor
mov
nop
cmp
mov
lods
aas
out
fisttpll
aad
jno
std
xor
dec
stos
sbb
je
or
xor
and
jns
std
and
sub
push
in
dec
addb
mov
mov
jno
cltd
or
movsb
stos
cmp
daa
inc
cmp
and
rol
jae
orb
adc
lret
stos
sbb
pushf
xor
jnp
mov
les
mov
adc
pushf
xor
cmp
bound
enter
xor
push
cltd
lret
and
push
aaa
sbb
sbbb
sbb
or
xchg
inc
daa
stc
or
sbb
pop
jmp
lods
jae
xchg
push
call
pop
lea
js
aas
movsb
jl
mov
aad
sarb
cmpsb
call
xchg
jbe
xorl
dec
inc
pop
cmpsl
mov
inc
mov
out
push
jae
test
add
pop
jns
bound
mov
add
incl
lret
loop
outsb
jo
mov
pusha
dec
lock
xchg
xor
jbe
mov
push
cmp
mov
je
jb
mov
dec
push
loopne
mov
mov
xchg
into
in
stc
aad
pop
outsb
aas
and
insb
jp
mov
push
jl
movsb
cmp
inc
cmp
xchg
xchg
jle
cmpsb
mov
popf
cltd
ret
jge
inc
in
mov
sti
fbstp
ljmp
pop
pop
mov
loopne
jge
aaa
pusha
fcomp
jno
aam
jbe
inc
andl
icebp
jp
jp
loopne
dec
adc
pop
pop
push
and
out
inc
bound
jmp
cmpsb
clc
jecxz
sbb
subb
and
xchg
sub
movsl
mov
jae
icebp
insl
jns
xor
jno
hlt
sbb
fldt
daa
add
fs
or
add
rclb
push
jecxz
inc
jl
xor
push
jmp
or
leave
daa
and
movsl
add
push
xchg
repnz
lock
jmp
clc
sarl
and
xor
dec
rcrb
or
add
xor
testb
mov
sub
mov
xor
pop
not
cmc
sti
scas
cli
stos
mov
mov
cwtl
arpl
jge
fnstcw
subb
mov
lcall
push
and
ja
and
clc
xchg
xchg
in
mov
fnsave
and
fcmovne
push
pop
daa
stos
push
shrl
iret
push
add
dec
out
xchg
imul
jbe
fwait
enter
bound
pusha
and
fs
xor
adc
lea
inc
loopne
pop
mov
and
scas
push
bound
mov
iret
ja
pop
dec
dec
mov
popf
mov
notl
out
loope
xor
xchg
push
mov
pop
mov
cltd
mov
xchg
push
mov
rcll
sbb
or
push
aaa
xchg
icebp
mov
mov
mov
into
push
jne
inc
lcall
outsb
not
mov
js
and
push
inc
pushf
xchg
mov
sbb
or
mov
dec
aaa
fwait
std
rcr
fcoml
ljmp
push
enter
lock
fistps
jge
xor
lcall
or
pushf
jbe
shrb
inc
shl
popa
xchg
cwtl
jae
add
inc
or
mov
fstpt
jg,pn
add
dec
int3
sbb
mov
pop
mov
clc
movsl
out
sahf
sub
pop
push
rcrl
call
adc
push
fbld
or
mov
or
in
lret
notb
enter
push
pop
push
pop
lcall
mov
cltd
adc
lods
push
sbb
clc
inc
in
fsub
sarb
into
adc
loopne
imul
bound
out
dec
scas
jns
inc
sarb
aam
stos
inc
pop
cwtl
icebp
cltd
int3
shll
mov
sbb
rorb
xor
insl
subb
sbb
or
dec
int3
mov
mov
sarb
lods
lret
jmp
mov
push
sbb
gs
cmp
out
test
mov
imul
and
jle
pop
push
inc
rol
sti
adc
mov
lret
jb
mov
adc
outsl
jbe
stos
pop
lods
scas
and
pushf
sbb
data16
pop
int
dec
xchg
cmp
cmpsb
mov
or
sbb
enter
inc
pop
xor
ja
dec
mov
or
fwait
ret
fdiv
xor
imul
aad
jp
outsl
cmp
stc
out
divb
mov
mov
repnz
scas
das
pop
inc
inc
jmp
cmpsb
cmc
mov
cli
sub
jbe
pop
int
lock
inc
mov
rcrb
outsb
fbstp
jne
fisttpl
xchg
xor
sbb
or
into
inc
fildl
decb
repnz
sub
movsb
loope
inc
adc
out
xchg
sub
lds
mov
aam
xchg
or
mov
popf
data16
mov
subb
jb
xchg
mov
and
mov
dec
sbb
push
push
push
cmpsb
ds
pop
iret
xchg
rorl
int3
pushf
lcall
push
inc
ret
frndint
nop
aad
add
mov
ret
das
aad
jecxz
scas
mov
int3
sti
pop
adc
jmp
repnz
xchg
loope
jb
rorl
test
frstor
addr16
stos
adc
js
repnz
or
ret
movsl
jecxz
mov
imul
add
cmp
mov
test
pop
jecxz
outsl
push
mov
andb
jbe
roll
icebp
add
or
mov
or
fs
imulb
mov
mov
push
loop
cmc
lods
popa
shrb
xchg
add
xchg
mov
das
rcll
dec
cmp
or
in
fmuls
xor
jnp
rcl
cltd
adc
ss
cmp
stos
xchg
test
jno
mov
lret
push
scas
push
cwtl
cmp
dec
loopne
subb
xrelease
or
in
mov
mov
lret
test
pushf
cmp
ss
cli
pop
sbb
lea
lret
or
mov
addr16
push
adc
mov
mov
in
jno
int3
jns
mov
out
cltd
sbb
push
fnstcw
mov
adc
dec
fnstenv
push
dec
add
pusha
fstpl
pushf
pusha
mov
cmp
adcb
xchg
cmp
or
cld
cmp
mov
sti
sbb
push
mov
mov
mov
pop
adc
xchg
mov
sub
mov
test
cld
dec
iret
mov
lret
or
dec
and
imul
mov
adc
sub
or
mov
pop
call
xor
iret
pop
push
xor
jl
lock
xor
jns
push
or
mov
or
movsb
ss
daa
inc
lahf
jne
out
add
das
clc
shll
addr16
mov
aad
cmp
aad
add
push
pop
cmp
xchg
push
out
inc
cld
lcall
push
mov
sti
add
inc
daa
add
cmp
adc
push
xor
push
xor
inc
xchg
inc
mov
aas
inc
lea
insl
push
push
or
das
montmul
cmpsb
push
addr16
cwtl
std
jp
std
xchg
sbb
jmp
push
add
rcll
lahf
cmp
cmp
stos
stc
lds
out
lret
or
or
mov
orl
out
outsl
dec
iret
loop
xchg
leave
jmp
dec
dec
push
mov
mov
pusha
xor
inc
and
adc
popf
pop
mov
mov
sti
out
mov
enter
imul
add
adc
adc
stos
xchg
cmp
cmp
or
leave
ret
rclb
and
inc
cmp
out
xchg
xor
mov
xor
movsl
outsb
pusha
gs
sub
sahf
jl
ja
xchg
lcall
sbb
or
cmp
ret
movsl
push
enter
loope
jae
cmp
push
movsl
arpl
pop
fucomp
repz
out
rcll
arpl
xor
mov
roll
jl
xchg
dec
cmp
call
in
and
pop
mov
pop
sbb
and
pushf
fldl
sub
lcall
inc
sub
fnsave
int
sbbb
inc
cmp
cli
daa
push
inc
repz
outsl
xor
add
mov
aad
jg
mov
mov
stos
sahf
dec
dec
lods
fsubs
xor
dec
fcompl
inc
fidivrs
push
xchg
mov
xchg
push
mov
xchg
rcrl
fsubs
fdivr
sarb
push
out
add
fisubrs
mov
fldt
xchg
xchg
stos
mov
sub
out
inc
repz
scas
lret
jecxz
pop
xchg
imull
aad
mov
cmp
sbb
sub
test
or
std
sbb
mov
loopne
cmp
or
insl
shrl
mov
mov
lahf
xor
adc
ds
lret
icebp
stos
dec
lods
lods
xchg
popa
adcl
xchg
fs
fisubl
inc
lods
pop
jmp
cld
leave
in
jmp
jecxz
inc
movsl
push
int3
dec
mov
mov
jl
addr16
testb
movsb
lock
push
in
aaa
add
dec
nop
pop
xor
adc
cmp
rcrb
in
dec
cmpsb
mov
xchg
hlt
je
out
pushf
mov
or
mov
and
or
mov
dec
push
push
mov
aaa
stos
lea
mov
shl
aas
sbb
jp
iret
add
or
sbb
sbb
lcall
aam
push
sub
lcall
jb
std
fidivl
test
jle
sbb
jge
cmp
ljmp
iret
shll
dec
fiaddl
scas
jecxz
sbb
outsb
xor
sahf
inc
cltd
lods
mov
inc
addr16
test
inc
mull
jecxz
xlat
rolb
mov
xchg
int3
mov
pop
scas
sti
out
lret
iret
mov
cs
ret
and
movsb
add
ret
adc
sbb
push
mov
xlat
mov
push
adc
mov
sbb
push
inc
fisubrs
lds
fwait
and
fildl
push
pusha
fadds
fidivs
fstl
fbld
inc
outsl
ds
xchg
std
bound
or
xchg
cmp
js
dec
pop
adc
xor
sub
and
xchg
out
and
mov
mov
or
cltd
popf
adc
pushf
jp
ja
sub
and
mov
sbb
push
add
jle
cmpb
fidivrs
cmp
aas
rorl
adc
out
or
mov
scas
push
test
or
mov
jl
mov
shl
insb
roll
test
test
pusha
je
sub
daa
xchg
pop
sub
pop
leave
jmp
aad
add
sbbb
dec
xor
outsl
ja
push
cmc
push
mov
and
mov
into
pop
pop
pop
dec
pop
dec
jbe
mov
cwtl
cmpsb
adc
sub
ud0
mov
iret
dec
popf
push
popf
popf
and
adc
fists
hlt
ljmp
or
mov
push
push
xchg
xor
dec
and
mov
inc
mov
sbb
test
dec
push
es
fldt
xor
cli
orl
sub
push
imul
sub
test
mov
sbb
inc
xlat
jae
mov
push
push
ljmp
gs
test
push
out
cmp
lds
mov
dec
shll
push
fimull
shrl
jle
jmp
fwait
mov
sahf
pop
addl
imul
and
push
or
pushf
jmp
int
push
sub
jg
leave
shr
in
ficompl
std
jb
jg
iret
in
ss
xchg
pusha
ror
sub
inc
jne
enter
test
or
dec
testl
loop
push
pusha
add
rorl
lcall
orl
dec
sub
add
mov
xor
xor
cmp
xchg
jecxz
hlt
mov
aad
xor
inc
xchg
dec
push
js
data16
pusha
cmp
pop
pop
ss
movsb
aas
push
pop
mov
leave
adc
lea
push
ret
xchg
mov
push
mov
mov
test
in
and
sub
sbb
fstl
mov
or
pushf
sub
jb
jb
add
fistpl
adc
cmpsb
mov
into
cmp
xchg
adc
add
sbbb
lea
scas
lock
clc
or
sbb
dec
xchg
cli
cmp
or
daa
push
adc
mov
aaa
loope
je
adc
iret
test
dec
in
loope
iret
arpl
into
in
and
or
xor
xchg
add
mov
adc
mov
dec
adc
xor
arpl
sbb
mov
jbe,pt
enter
cmpsb
decl
sbb
jne
push
popa
and
mov
daa
inc
jns
and
mov
lea
jne
ds
mov
test
test
test
fldenv
sub
ss
add
adc
outsb
add
sarl
es
xlat
push
push
sahf
mov
lret
pop
push
stos
nop
iret
pop
in
out
cmp
xchg
add
push
or
jmp
mov
mov
cmpsl
rclb
mov
imul
ljmp
push
out
enter
les
test
sub
jne,pt
push
icebp
shl
jns
xor
pop
repnz
push
sub
sub
fsubrp
and
fldenv
xorl
mov
sbb
inc
mov
testl
adc
stos
call
xchg
cwtl
sub
cmp
movsl
sbb
xchg
jmp
push
repnz
or
adc
pop
fs
fdivs
mov
into
call
mov
mov
adcb
jne
mov
loope
cld
sub
fdivrp
push
xchg
rolb
mov
int3
scas
jbe
out
jbe
sti
push
cmp
stc
inc
cmp
out
out
gs
shrb
imul
xchg
adc
shrb
imul
dec
and
testb
testl
push
fstl
les
shl
mov
cmpsb
cmpsl
pop
popf
sub
ret
or
pop
loope
xchg
and
or
sbb
push
iret
xor
movsl
imull
scas
dec
pusha
xorl
cwtl
dec
mov
cwtl
lods
push
out
xor
sahf
sub
dec
out
xchg
sub
rol
cmp
aad
mov
fst
pop
subb
mov
insl
inc
add
mov
push
inc
jns
or
cld
iret
mov
dec
lds
mov
movsb
in
scas
mov
jno
leave
popf
cli
xchg
dec
lea
mov
add
mov
cmpb
xor
fisubrs
push
lock
mov
ret
insl
pop
fcomp
fcoms
ret
in
pop
nop
js
and
and
cmp
inc
loope
ds
mov
lea
inc
inc
push
insl
cmp
inc
fistl
loope
cmp
jne
outsb
lds
lahf
jbe
push
cmc
icebp
in
lahf
cmp
pop
scas
mov
add
lret
or
das
and
pop
fimuls
je
xchg
push
xchg
xchg
mov
add
or
mov
mov
jp
int3
or
pop
in
jp
jns
in
enter
sub
std
ret
out
mov
adc
mov
dec
mov
or
or
mov
xor
pop
bound
psubusw
scas
jge
jns
push
jmp
mov
arpl
rcr
sub
pop
fnsave
bound
dec
test
addr16
daa
mov
jl
cmpsb
test
jo
xor
or
loop
push
imul
xor
jle
out
stc
imul
hlt
jno
lods
dec
pop
cs
cmpsb
lds
mov
fwait
jl
fmul
fistl
and
fs
daa
insl
pop
test
xchg
xchg
hlt
icebp
bnd
mov
inc
lret
icebp
ljmp
pop
push
fisttps
int3
subb
pop
mov
pop
push
rcll
sbb
scas
jae
or
or
mov
inc
mov
add
sub
jecxz
mov
xchg
mov
mov
mov
cli
js
fidivl
xchg
ljmp
shrl
push
mov
mov
popa
jbe
movsb
dec
cmp
sbb
xor
dec
mov
sub
sar
movsl
aam
pop
add
xchg
orl
cmp
shl
mov
pop
and
push
daa
add
call
sbb
out
cwtl
ljmp
pop
rorb
or
fimuls
jl
cmp
mov
ficoml
rclb
roll
out
xor
jl
and
fld
ljmp
leave
xchg
fwait
jnp
mov
lcall
mov
fcomi
mov
cmp
or
shl
lea
push
pop
lcall
popa
dec
xor
imul
sbb
pop
cmp
mov
sub
add
lea
pop
mov
cmp
in
clc
jg
es
in
mov
std
std
rcr
ds
lods
pop
shlb
sbb
mov
sub
mov
aaa
jmp
das
sub
push
lcall
lea
mov
in
dec
or
scas
je
and
jae
outsl
and
push
neg
test
leave
repz
cmp
ja
push
inc
cmc
inc
adc
fdivs
add
jo
loopne
jns
jle
mov
mov
pop
or
push
jns
movsl
cmpsb
dec
cwtl
shlb
sbb
cltd
enter
dec
mov
or
xor
shrb
dec
or
mov
mov
ss
adc
stos
sub
enter
mov
testl
sub
push
xchg
stos
testb
mov
nop
push
mov
imul
sub
mov
in
sub
in
jns
inc
pop
aam
mov
imul
add
push
or
pop
sbb
iret
ds
addr16
lcall
and
adc
xchg
xlat
test
pop
mov
jo
add
cmp
add
aas
je
jmp
test
stos
sbb
jne
push
ret
mov
ret
int
sahf
rcll
sub
in
jne
add
push
das
lea
push
sahf
mov
mov
popl
pushf
gs
push
adc
cld
loopne
pushf
xchg
shlb
js
stos
dec
add
mov
mov
mov
popf
cmpl
mov
popa
cmp
xor
or
aaa
gs
icebp
mov
into
stos
movsb
sbb
cmpsb
cld
push
cmc
in
lcall
neg
cmpsb
orb
pushf
les
sub
mov
push
addr16
xchg
hlt
icebp
jge
dec
or
mov
std
mov
movsb
in
pushf
inc
fs
xchg
xchg
clc
pop
cltd
dec
insl
push
movsl
push
mov
push
mov
xchg
mov
mov
fs
and
push
pusha
cmp
mov
mov
and
repnz
mov
test
aad
pop
push
and
push
enter
pop
out
cs
enter
rclb
daa
xchg
adc
add
adc
loopne
mov
xor
mov
es
movsl
repnz
push
cmp
in
icebp
inc
xchg
fsubrs
leave
das
jae
and
mov
pusha
ffreep
stos
jne
adc
lcall
sbb
cwtl
adc
jo
push
data16
jecxz
dec
mov
pushf
pop
and
lods
push
or
pop
cs
ret
les
pop
sti
sub
fistpll
insb
js
inc
mov
negb
mov
cwtl
dec
and
xchg
cltd
mov
inc
sub
and
pop
sub
add
je
ja
movsb
shll
xlat
enter
xor
loop
addl
mov
faddp
rcll
int
sub
push
scas
cwtl
mov
aad
and
jae
and
or
dec
jae
xor
imul
popf
xchg
es
orb
inc
mov
int3
loopne
mov
stc
pop
add
add
pop
arpl
lock
stos
push
outsl
push
repz
and
jle
scas
rcll
imull
cmp
pop
ficoms
mov
ljmp
stos
or
ja
or
dec
data16
xor
test
mov
sub
jge
jb
add
icebp
pop
and
mov
leave
jb
jbe
dec
mov
test
bound
adc
xchg
jae
add
sbb
out
push
xlat
data16
ret
cwtl
dec
sub
mov
sub
push
ljmp
push
test
daa
and
jmp
cmp
sub
ja
daa
int
push
lcall
push
pop
xor
popa
inc
or
xor
push
orl
fistpl
jbe
xchg
inc
scas
shl
inc
movsb
xchg
loop
jecxz
aas
xor
hlt
mov
dec
xchg
dec
mov
shll
mov
pop
bound
push
js
ss
sub
arpl
sbb
aad
inc
adc
xor
test
shll
xchg
scas
cmp
sub
cmp
mov
sahf
mov
push
lret
add
dec
test
sbb
loop
test
xor
mov
aam
adc
movq
daa
dec
pop
inc
imul
cmp
pusha
sbb
xor
push
scas
stos
ss
jg
movsl
mov
rorl
push
sbb
adc
xlat
push
fcompl
lret
lahf
jb
pop
mov
jae
pop
imul
mov
jne
popf
cli
mov
scas
xor
out
scas
push
jns
sti
stos
mov
fisttps
stos
fwait
lea
push
ficoms
sarb
arpl
es
mov
sbb
mov
call
fldl
mov
jne
clc
aam
mov
sbb
outsl
mov
into
mov
sub
cs
add
aaa
mov
sahf
dec
mov
push
sbb
data16
fstpl
pop
xchg
sbbl
int
cli
insl
sbb
por
xadd
das
sub
jmp
out
pop
out
sbb
and
sbb
inc
lock
jl
out
fiaddl
std
or
inc
jb
and
xor
incb
pmaxsw
loop
adc
prefetch
mov
push
xchg
dec
sub
mov
and
inc
or
jo
in
imul
or
fldcw
lahf
ret
out
stos
jge
dec
cmpl
iret
sti
adc
mov
aam
mov
and
add
test
adc
enter
push
js
jb
mov
int
nop
stos
aaa
int3
jge
les
push
fbstp
mov
pop
sbb
xor
ficomps
mov
in
lahf
jo
outsl
cmpsl
lret
xchg
sbb
mov
dec
pop
mov
mov
aam
or
mov
lods
and
add
mov
sbb
adc
lods
int3
and
fmul
pop
loop
ficoml
in
or
cmp
jge
cmp
je
jg
pop
mov
test
outsl
icebp
mov
enter
push
cmp
pop
pop
sbb
mov
cltd
xor
sub
les
mov
add
pop
dec
push
stos
xchg
push
xchg
fidivrl
inc
sahf
mulb
mov
inc
dec
mov
jb
js
pop
dec
xchg
mov
popa
push
andl
mov
scas
inc
lock
cli
jns
pop
xlat
sahf
adc
pop
lods
in
aas
leave
mov
jecxz
nop
xchg
jge
movsb
sub
sub
stc
push
mov
mov
push
lds
push
sub
addr16
hlt
iret
ja
int3
subl
loopne
push
xor
xchg
add
notl
xor
inc
andb
jle
or
pop
jbe
sti
jecxz
mov
les
or
fdivr
clc
add
or
mov
cmpsl
js
mov
pushf
or
push
test
jae
pop
in
jle
dec
fcom
sbbb
push
jl
inc
pop
shr
cld
jns
lcall
mov
cmp
jecxz
jl
mov
or
loopne
adc
sti
push
or
lds
sahf
inc
cmp
lahf
out
aad
rcrl
and
sbb
xchg
mov
ljmp
scas
jbe
jmp
insb
xchg
arpl
sbb
mov
inc
mov
push
cwtl
imul
inc
push
cs
add
mov
testl
out
push
and
frstor
xchg
cmp
ss
clc
fwait
dec
jg
jg
mov
int
mov
jno
jmp
scas
xor
ret
in
fbstp
mov
push
push
int3
ljmp
in
hlt
xchg
mov
js
mov
sbbl
lods
sub
mov
sub
sub
outsl
mov
call
ds
jl
mov
lods
push
push
fcmovne
pop
test
dec
dec
add
push
test
sarb
test
test
push
push
ds
mov
inc
pusha
int
cwtl
cmp
aad
xchg
pushf
lds
lcall
mov
jae
mov
inc
sub
push
push
and
aas
jno
cmovb
fdivr
push
sbb
into
cmp
sub
fstps
test
dec
pop
mov
push
xor
test
dec
iret
jns
nop
je
mov
aaa
dec
fidivrl
and
out
push
add
nop
les
sub
imul
sub
or
xor
mov
xor
jl
lcall
push
xorl
mov
adc
fcmovb
xchg
or
aam
ret
mov
enter
in
jge
subl
push
inc
or
ja
out
insb
xor
insb
jne
leave
jmp
or
or
push
aaa
test
mov
fildll
add
mul
shlb
inc
mov
imul
jo
cmp
pop
int
push
sbb
ja
cli
jl
mov
mov
mov
icebp
lret
jecxz
jmp
lea
inc
lea
roll
mov
lods
in
mov
adc
xchg
push
xlat
jnp
enter
mov
or
or
dec
jo
fs
pusha
in
mov
sub
or
pusha
xor
adc
mov
mov
xor
pop
lds
or
add
cltd
mov
hlt
jns
mov
xor
movsb
pop
push
inc
cmp
lret
out
sbb
xchg
pop
orb
in
insl
push
mov
mov
mov
ror
xor
mov
jb
aaa
iret
das
pop
fmulp
mov
xor
adc
aam
mov
add
in
and
sbb
xor
inc
out
out
not
cmp
clc
mov
jecxz
inc
mov
mov
xchg
fimuls
push
cmp
jmp
xor
hlt
mov
xchg
adc
ret
xchg
mov
inc
jo
fmulp
push
jbe
repnz
stos
loop
scas
ljmp
out
frstor
stos
ret
jbe
into
test
push
push
mov
and
mov
outsl
mov
push
lock
and
in
shlb
addl
mov
ja
rcll
sbb
jecxz
adc
push
jno
lods
popf
sbbb
add
jnp
popf
add
dec
adc
pop
outsb
inc
mov
xchg
iret
lcall
imull
cwtl
mov
hlt
sub
mov
bound
mov
dec
cmp
addr16
andb
xor
pop
mov
cmp
or
fcomip
and
dec
push
lods
mull
cli
js
sti
out
xor
nop
rorb
inc
negb
xchg
subl
mov
loopne
dec
cmp
jns
out
sub
cs
rcrl
pop
pop
mov
cmc
jle
mov
cmp
call
lahf
pop
aam
outsb
mov
cmp
dec
sti
inc
sahf
inc
gs
and
insl
repz
push
xchg
insb
push
out
fbld
jle
push
cmp
and
push
push
xorb
movsb
sbb
xchg
sub
repnz
movsl
ret
xchg
inc
pop
xor
mov
xor
notl
and
mov
cmpsb
insl
cmp
jns
movsb
cwtl
xor
jne
dec
inc
mov
lock
push
lods
xorl
pop
jmp
pusha
inc
xchg
xchg
dec
pop
jno
mov
inc
or
lods
repnz
loop
or
xchg
mov
xor
sub
in
ret
and
mov
jne
pop
lods
out
adc
fistpll
inc
popa
outsl
insl
ss
lds
and
jbe
pop
fs
inc
mov
test
inc
xchg
gs
and
mov
rorl
push
notl
jge
sub
cs
adc
lock
mov
jbe
xchg
daa
loopne
pop
scas
or
and
mov
push
mov
loopne
mov
sbb
mov
pop
int3
adc
dec
enter
std
ret
xchg
jge
mov
out
push
push
dec
mov
inc
pop
xchg
push
fs
add
pushf
enter
or
sub
call
movsb
seto
add
pop
inc
jae
push
iret
dec
mov
dec
jno
push
lds
mov
xchg
cmp
jge
pop
frstor
mov
insl
int
jmp
cwtl
iret
outsb
sbb
inc
fwait
mov
pop
cwtl
xor
insl
cmpsl
pop
scas
sbb
inc
in
pop
xor
dec
xchg
mov
test
sub
sbb
mov
inc
pop
adcb
mov
sub
dec
fcomip
stos
dec
jl
shll
lcall
xchg
cltd
repz
enter
aad
movsb
mov
aam
js
push
xor
test
inc
ret
addb
in
out
lahf
inc
mov
jne
aaa
push
ds
cmp
testb
lods
orl
cld
frstor
add
dec
push
mov
aas
cmp
mov
add
dec
into
inc
push
or
jecxz
test
dec
xchg
fstp
lgs
xchg
or
leave
push
subl
xchg
cld
sbb
lock
dec
aaa
cmp
orb
pop
rcrb
out
ret
mov
out
pusha
and
loopne
jl
or
mov
jae
inc
lods
rcrl
fs
push
pop
enter
test
xchg
pop
fdivrs
sbb
add
inc
test
mov
addr16
mov
js
nop
mov
mov
stos
shrl
dec
je
xor
outsl
push
jmp
jno
test
xchg
and
sbb
sarb
scas
enter
loope
mov
inc
insl
fists
in
outsb
sub
sub
push
imul
mov
shll
jno
sub
adc
cld
into
xor
add
xchg
nop
inc
add
fwait
dec
out
mov
mov
pop
imul
test
aam
stc
push
orl
int3
mov
and
mov
pop
dec
and
sbb
std
into
sbb
lret
stc
cs
into
sbb
lock
jno
add
pop
jle
fisttpll
scas
fdiv
adc
pop
lods
mov
mov
fbld
lret
cmp
call
pop
inc
insl
lret
jecxz
nop
push
sahf
aaa
out
cmc
push
test
and
push
mov
pop
fldl
scas
add
shll
push
cmpxchg
or
jecxz
sub
fs
or
inc
xor
mov
adc
clc
add
dec
je
test
xchg
call
cs
jge
mov
fsubs
xchg
ja
ss
sub
mov
add
push
cmc
repnz
in
in
xorb
arpl
out
pop
jge
aas
jb
arpl
pusha
out
mov
test
or
push
jl
shlb
and
bound
shll
or
push
jne
outsb
mov
jb
arpl
push
cli
jge
xor
and
in
xchg
mov
dec
les
inc
test
outsl
mov
mov
push
stos
mov
dec
push
gs
pop
jg
push
pop
push
rclb
sbb
gs
in
jmp
mov
and
clc
pop
test
or
ror
clc
push
sub
ds
mov
cmp
int3
enter
sub
push
imul
dec
xchg
call
xchg
sbb
stc
pusha
mov
lods
data16
scas
je
mov
insl
repz
ret
mov
jecxz
test
or
clc
dec
ljmp
repnz
data16
dec
inc
mov
stc
xor
xchg
lock
mov
sarl
xchg
cmp
leave
sub
test
mov
and
lock
outsb
ret
inc
pop
ja
mov
xchg
loope
fwait
sbb
cmp
inc
or
add
or
rol
cmpsl
or
icebp
add
repz
daa
adc
mov
push
mov
xor
pcmpgtb
fbld
adc
or
out
pop
std
dec
mov
mov
cmpsb
xorb
push
mov
jl
adc
xor
int
sub
fistl
scas
jae
sbb
push
cltd
sbb
pop
xlat
mov
push
inc
push
das
lock
cs
jno
lea
mov
rolb
adc
and
imul
inc
insl
ret
pop
outsl
inc
xchg
pop
mov
or
test
sbb
popa
fildl
mov
xchg
jmp
mov
adc
push
dec
mov
into
jmp
mov
arpl
cmp
nop
mov
mov
xor
xor
in
je
stos
scas
adc
aam
pusha
cmp
jne
sbb
roll
mov
out
fldcw
inc
jle
add
xchg
push
cmpsl
adc
push
in
rcll
movsl
icebp
in
pop
ss
incb
roll
data16
sbb
les
ficomps
icebp
mov
xchg
or
out
fstl
cmp
outsb
scas
xor
mov
mov
adc
push
jmp
or
addr16
lods
dec
je
xor
js
and
xchg
int
loope
add
jle
pushf
and
adc
test
das
adc
add
adc
add
ja
popa
sbb
and
cmp
jl
xlat
aaa
insb
mov
rclb
and
pop
and
cmc
test
daa
lret
into
outsl
mov
aad
mov
jecxz
call
adcl
push
in
jl
icebp
icebp
xchg
inc
pop
mov
and
and
mov
push
dec
xchg
cmp
pop
add
mov
scas
add
and
xchg
push
div
pop
sarl
mov
insl
lfs
out
rcrl
push
ret
fdivl
and
mov
jl,pn
jge
outsl
arpl
ret
mov
adc
xor
mov
fwait
mov
xchg
jo
and
dec
push
popf
or
loop
jnp
inc
inc
xchg
and
jge
xor
mov
lret
imul
ljmp
mov
sbb
mov
xchg
xlat
imul
clc
rolb
sub
add
jge
out
pop
repnz
icebp
adc
sbb
cmp
pusha
outsl
nop
addr16
xchg
jae
push
and
stos
xor
or
mov
ret
cmpsb
and
xchg
dec
adc
xor
andb
sbb
movsb
or
iret
push
and
shrb
mov
pop
and
and
adc
lea
xor
jp
mov
cmpsl
ds
cmp
test
sbb
loopne
pop
xchg
sbb
xor
sbb
roll
sub
mov
and
iret
mov
lock
popa
cmp
test
push
pop
jecxz
scas
in
or
mov
sti
jl
pop
outsb
mov
push
loopne
sbb
push
sub
pop
sbb
movsl
stos
nop
cld
int
sbb
in
subb
movsb
push
or
mov
push
mov
andl
mov
pop
clc
inc
sbb
jb
sar
adc
xor
rclb
cmpsl
jb
lds
je
push
fcos
jge
fcoms
pop
je
sub
ret
cltd
xor
mov
lahf
ja
mov
ret
sahf
sbb
icebp
jge
loopne
mov
jno
jmp
out
inc
pop
les
mov
pop
shlb
imul
clc
jb
or
cs
xor
cmp
std
and
pop
adc
mov
lods
push
ror
add
xlat
insb
dec
aas
adc
popf
dec
das
xchg
fwait
sar
push
pop
cmpsl
sbb
or
pop
and
lock
jl
cs
cmpsl
repnz
jo
inc
in
call
dec
adc
inc
cs
fmul
scas
std
out
sub
pop
inc
popf
dec
and
loope
daa
jp
int3
jl
es
popf
cmp
jg
inc
les
push
or
and
ljmp
imull
pushl
lahf
fisttpl
or
push
bound
mov
xchg
out
dec
jns
leave
lods
sahf
or
in
test
xor
clc
cmp
pop
jne
insb
and
movsb
adc
popa
mov
or
jne
lods
mov
push
cmpsl
mov
dec
inc
vunpckhps
pop
sti
jp
adc
popa
outsl
mov
fdiv
imul
stos
in
popf
test
loop
pop
cmpsb
xor
inc
shlb
dec
andb
push
cwtl
cltd
jle
add
stos
fs
jl
sub
adc
loopne
pushf
or
mov
scas
cli
and
fsub
lret
test
stos
sub
out
sar
cmpsb
fwait
inc
cli
ds
loopne
xchg
sub
or
adc
fcompl
test
test
icebp
out
push
or
dec
lock
fsub
incl
add
xchg
iret
sarl
mov
jmp
fisttpl
cmp
lret
imul
xor
andl
adc
aad
ljmp
and
mov
inc
insb
and
ret
mov
adc
movsl
mov
jecxz
jne
xchg
jge
inc
movsb
pushf
movsb
pop
xor
adc
js
push
nop
pop
cs
cwtl
hlt
lea
notb
cld
inc
mov
lcall
mov
mov
movsl
and
insb
sub
mov
fs
sub
adc
addr16
insb
jae
clc
daa
clc
mov
cli
mov
adc
popa
ljmp
icebp
fcmovne
fadd
lret
mov
sub
mov
arpl
aad
movsb
idivb
mov
es
not
fnstcw
in
call
jns
dec
xor
push
js
or
jae
cmp
inc
mov
push
dec
sahf
push
push
and
push
dec
neg
movsb
xor
and
stc
jns
ss
and
and
xchg
add
sbb
int3
addr16
jo
dec
mov
mov
cmc
in
arpl
rcrl
mov
imul
gs
lods
and
jg
add
in
mov
outsb
mov
jp
pop
loopne
or
and
test
aas
popa
out
les
dec
pop
xor
and
jl
int
mov
dec
mov
popa
cmp
popf
aam
sbb
dec
fincstp
xorl
cmpsl
lret
jg
lcall
test
shrl
inc
loopne
repnz
int
cmc
sti
jmp
es
inc
push
popf
jmp
mov
in
mov
inc
xlat
fstpt
inc
mov
mov
call
scas
aam
pminsw
mov
and
sub
out
sti
mov
mov
flds
fimuls
add
into
adc
movsl
aas
in
adc
dec
mov
dec
cmp
add
orb
mov
std
out
std
pop
jo
int
adc
push
cmpsl
in
in
mov
sub
mov
movsb
dec
adc
mov
stos
push
outsb
arpl
push
jmp
jae
jg
movsl
sti
lea
mov
pop
ss
cmp
mov
cmp
push
cmp
adc
shll
and
lret
cmc
push
xor
cmpsl
sub
add
adc
add
pop
jne
rcll
loop
or
mov
ljmp
mov
rcrb
inc
mov
sub
mov
ss
xor
mov
pop
push
and
sbb
lret
adc
loopne
ficomps
sti
pusha
mov
popa
xor
mov
repz
pop
mov
gs
mov
pusha
repz
in
jmp
hlt
pop
shlb
daa
int3
dec
mov
lcall
push
out
idivb
sbb
bound
sub
sbb
out
push
adc
push
jecxz
jns
daa
bnd
movsb
pop
ds
mov
cli
aam
adc
aas
adc
pop
out
aad
push
aad
mov
fildll
mov
mov
into
test
notb
inc
js
pop
lahf
dec
lcall
cmpsl
jo
out
dec
dec
cmc
push
add
dec
out
rcll
movsl
push
push
test
dec
or
mov
pop
lret
sbb
cli
shrb
mov
cmp
add
mov
nop
loop
sti
or
out
inc
out
mov
mov
movsl
lret
je
sub
stc
test
cmpl
test
sbb
out
into
mov
ret
and
add
loop
or
int
out
sub
fxch
pop
inc
sbb
xchg
xchg
mov
jb
dec
xchg
outsb
xor
dec
fistpl
clc
scas
sbb
and
iret
or
sub
pushf
dec
adc
and
lds
out
fnstcw
hlt
add
pop
fisttpll
cmc
imul
add
int
lea
jmp
lcall
jo
inc
xchg
repnz
mov
in
pop
jno
push
cmp
or
cltd
arpl
js
inc
test
lock
xchg
xor
mov
lret
ret
pop
std
out
aam
inc
push
cli
movsl
fisttpll
xlat
mov
cmp
jno
inc
movsl
jbe
popf
movsl
xorl
mov
or
inc
pop
jae
int3
loope
pushf
imul
jg
in
pop
std
stos
lcall
cmp
in
mov
pop
fdivs
repnz
int3
mov
and
pop
mov
fisttpl
push
es
rcrl
mov
and
add
cmpsl
mov
adc
pop
cli
jns
or
push
jbe
dec
test
lret
dec
pop
shl
push
in
shll
std
xchg
jecxz
push
repnz
lahf
inc
daa
xchg
imul
and
fistps
adc
cmp
mov
addr16
test
lock
mov
push
cmp
sbb
ss
dec
cltd
mov
loope
insl
xchg
sti
ror
lcall
ficoms
stos
mov
xor
pop
mov
fwait
loop
dec
mov
daa
sbb
jg
and
mov
cmp
xchg
sub
xor
loopne
xor
xchg
or
cmc
cmp
xchg
mov
inc
xor
imul
lret
cmp
sbb
xor
mov
pop
dec
adc
jmp
movsb
mov
imul
jbe
push
scas
or
pop
mov
imull
out
pop
pop
aas
addr16
jecxz
push
rep
test
testl
lret
pop
fnstsw
ret
xchg
pop
adc
pop
imul
daa
fistpl
adc
or
call
pop
push
lcall
cmpsl
je
loopne
cltd
cltd
xchg
cwtl
lret
scas
dec
mov
lds
adc
xchg
imull
dec
mov
inc
fsubr
shlb
mov
push
mov
mov
shrb
popf
push
mov
arpl
test
les
mov
ljmp
pop
aas
jnp
in
popa
sbb
push
test
aaa
pop
cltd
xor
inc
jl
adc
rolb
cmpsb
fstpt
dec
or
lret
fs
xlat
sub
fisttps
sahf
sub
mov
pop
mov
jnp
jne
sub
mov
jle
outsb
cmp
cmp
mov
mov
outsb
sahf
cwtl
jge
and
or
outsl
dec
aad
pushf
add
pop
push
std
mov
push
roll
insb
jge
bound
iret
inc
ljmp
jge
inc
jbe
adc
and
jnp
movb
movsl
and
jge
mov
push
xor
add
sbbl
dec
test
push
jg
dec
int
sub
stos
sbb
jge
jge
mov
int
mov
xor
xchg
imul
pop
lret
mov
sahf
adc
lea
or
imul
sarl
add
mov
testb
pop
adc
jno
nop
xchg
pop
stos
or
pop
push
dec
dec
daa
push
push
and
mov
inc
mov
loopne
cmp
inc
ret
add
ss
jno
add
aas
fidivrl
sbb
stos
iret
push
pushf
clc
dec
sbb
jmp
push
mov
mov
push
orl
ss
adc
aas
insl
stc
dec
into
and
in
xchg
push
addb
dec
push
pop
in
sub
sub
loopne
xchg
subl
cwtl
ror
cltd
imul
out
js
dec
mov
fstpt
lods
test
jmp
or
or
inc
frstor
cmp
mov
push
repnz
xchg
lods
lods
xchg
cmc
out
ret
inc
mov
or
scas
add
lcall
push
notl
daa
lods
insb
mov
lret
sbb
pop
rorl
fimull
loopne
sub
push
insl
fists
mov
scas
mov
movsb
ficompl
sbb
lock
pop
sub
push
into
pusha
mov
cli
mov
mov
push
fbld
add
jle
mov
jo
nop
mov
pop
xor
sub
dec
push
jb
shlb
in
pop
ret
ljmp
sub
inc
push
imul
cmp
movsb
fcoms
adc
xchg
sarl
xchg
inc
xchg
mov
push
scas
add
mov
pop
arpl
push
fwait
ret
xchg
cmc
pop
pop
test
jno
cltd
stos
lods
test
mov
and
push
arpl
cmp
pusha
or
dec
imul
xchg
incb
nop
mov
movsb
mov
scas
aam
outsl
out
mov
add
cli
push
sbb
test
pusha
jmp
negl
or
jle
scas
repnz
and
flds
shll
pusha
ret
orl
icebp
pop
cmp
mov
and
mov
jnp
add
aad
ja
push
mulb
aaa
cmp
cltd
push
call
lods
mov
loop
push
or
cmc
adc
repz
pop
shrl
cld
ret
repz
iret
cmpsl
in
cmp
jne
in
xchg
js
aaa
jle
je
cmp
sahf
sub
jne
cmc
xor
sub
jle
sbb
and
les
cmp
dec
aaa
imul
pop
mov
fsubs
insl
loopne
imul
mov
inc
cmp
or
lock
test
xchg
enter
sub
lock
jnp
negb
add
imul
mov
mov
outsl
insl
jle
pop
cli
mov
mov
mov
jle
cmc
and
leave
in
and
in
in
loopne
cld
jmp
adc
icebp
ljmp
sti
jecxz
sbb
jb
movsb
pop
ret
lahf
jecxz
and
js
mov
lods
inc
pop
jp
sbbb
pop
xor
add
inc
jmp
sbb
xor
fs
mov
ds
pop
negl
lock
adc
lods
into
mov
xor
sub
lds
mov
and
aam
nop
lahf
push
cli
xlat
push
mov
cmc
fldenv
jl
jecxz
mov
jle
stos
sahf
cmpsl
push
add
xchg
enter
cs
cmp
lea
pop
movsl
icebp
sbbb
mov
pop
xorb
shr
jb
fcmovne
pop
std
cmp
fisubs
jg
cltd
fldt
add
test
hlt
sbb
icebp
pop
and
ja
pop
stc
sub
or
fwait
imull
mov
xchg
sub
and
clc
mov
imul
mov
cmp
jo
mov
push
loopne
inc
fdivr
mov
popf
cmpsl
dec
and
insb
xchg
subl
cmpsb
and
std
sarl
addl
iret
jp
xchg
xchg
add
pop
outsl
iret
dec
mov
dec
int
scas
pop
cs
arpl
aad
shr
mov
ds
sub
mov
fldl
test
adc
icebp
divb
and
or
pop
stos
iret
insl
sbb
mov
xor
out
ret
lea
mov
mov
stc
test
test
dec
imull
cmc
inc
push
fdivrs
movsb
lcall
push
push
fnstcw
mov
fdivrl
mov
mov
movsl
les
and
arpl
mov
lret
xorl
mov
cld
inc
sub
movsb
inc
mov
adc
scas
aad
test
mov
lods
cmp
or
lcall
fimull
lahf
inc
and
dec
push
push
imull
xor
xor
inc
jmp
mov
or
xor
outsl
mov
aam
out
jae
push
xlat
ds
fwait
insl
push
pop
aaa
xchg
or
cli
aam
test
xchg
out
adc
rclb
in
loop
jmp
jl
push
dec
imul
mov
sbb
lds
jmp
sbb
ror
mov
jnp
inc
test
mov
std
dec
rorl
nop
cmp
push
sbb
lock
sahf
push
inc
jne
sbb
rorb
rcll
dec
xlat
add
xchg
mov
test
add
icebp
jmp
push
fisubrl
sub
fs
lods
and
mov
scas
lcall
arpl
inc
fdivrl
mov
xchg
or
pusha
jle
neg
sub
mov
mov
std
xor
insl
add
loopne
and
pop
dec
shll
repz
and
imul
lea
sbb
cmp
testb
int3
lods
out
xor
movsl
sub
pop
arpl
rcl
adc
jmp
push
pop
xchg
pushf
adc
aaa
xor
push
int
push
mov
js
jns
inc
outsl
sub
or
lcall
push
sub
xor
in
rcrl
popa
rcll
xchg
inc
push
lods
clc
sti
mov
sahf
and
pushf
lret
dec
dec
fistpl
mov
aam
ss
aas
scas
lea
mov
in
jp
add
stos
outsb
sub
push
ja
or
outsb
fs
push
or
addr16
inc
mov
aam
fidivs
mov
in
sub
sbb
outsl
push
pop
imul
js
movsl
cmp
adc
outsl
not
add
mov
out
aas
cli
push
lods
cltd
cld
fcomi
int3
jae
jmp
loopne
xchg
and
add
cltd
imull
je
cld
pusha
cltd
in
sub
jmp
ljmp
dec
inc
imul
or
outsb
jg
sbb
dec
push
push
xor
ds
add
andl
add
sub
adc
repnz
hlt
decl
aas
test
adc
daa
push
and
mov
pop
sub
lds
sbb
jp
aaa
push
sub
add
repnz
mov
pop
aam
or
xchg
ficoml
sub
push
inc
incb
jbe
dec
add
dec
inc
jne
pop
stos
scas
xlat
loope
push
adc
sti
call
test
pop
sbb
jns
outsl
movb
or
cmpsl
push
mov
mov
push
push
mov
sahf
loope
cmp
inc
add
cld
fwait
test
xor
filds
dec
aas
gs
lret
les
outsb
jg
push
xor
and
jl
xor
jmp
lret
jne
jp
push
jp
add
inc
mov
out
inc
xor
mov
shlb
nop
xchg
outsl
repnz
mov
jno
jp
xor
into
in
push
inc
ljmp
or
fwait
and
arpl
mov
and
pop
sub
lds
mov
mov
add
insl
mov
arpl
pop
hlt
mov
xchg
adc
mov
jmp
inc
mov
or
dec
mov
inc
repz
rcrl
mov
push
movsb
aad
out
push
xchg
xchg
in
fildll
lret
inc
inc
inc
decb
ja
stos
shrl
shlb
sub
out
and
lods
cmpl
shr
test
in
test
cmp
ljmp
xchg
mov
mov
jmp
add
idiv
rolb
xchg
aad
and
shl
scas
jo
dec
rclb
test
xor
fcoms
adc
shlb
add
pushf
iret
mov
push
mov
int
pop
jecxz
and
scas
mov
insl
push
pop
out
aad
lods
inc
icebp
movsl
inc
inc
mov
fs
and
jbe
fldcw
in
fwait
jb
arpl
xor
and
jbe
or
pop
subb
sbb
sub
sarl
xor
xor
inc
push
mov
xchg
ret
in
jmp
dec
stc
xlat
adc
sbb
add
mov
adc
jecxz
cmp
divl
hlt
push
mov
push
pop
mov
or
and
andl
mov
popf
aas
sbb
push
mov
or
in
pop
sbb
push
add
fisubl
arpl
inc
add
inc
xchg
push
adc
push
push
mov
adc
mov
fwait
cwtl
enter
jne
test
fmuls
push
leave
and
jge
xchg
sub
mov
sub
add
pop
inc
roll
jae
stos
shrl
inc
es
lods
adc
dec
dec
arpl
test
pop
and
mov
out
dec
and
mov
cltd
repnz
dec
repnz
cmpsb
sbb
mov
lods
jp
or
dec
insl
xchg
pop
scas
addr16
dec
xchg
inc
dec
scas
ret
mov
or
shrl
or
pop
mov
push
repnz
mov
dec
add
xor
imul
pop
scas
or
ret
mov
mov
and
push
in
xchg
les
add
cld
sbb
out
xchg
push
mov
adc
jmp
leave
xchg
test
hlt
and
sub
out
fistl
test
mov
mov
andb
sbb
xlat
xor
mov
in
aad
into
sbb
xor
aaa
pop
mov
jmp
ss
mov
popa
decl
xor
lods
sbb
mov
aad
and
dec
sbb
stos
jp
cwtl
xor
pop
sub
ds
imul
out
inc
xorb
or
cld
aam
mov
and
or
mov
push
into
jl
aad
cmp
lcall
ds
in
ss
push
daa
orb
cld
shll
adc
daa
mov
stc
shl
mov
outsb
add
xchg
jmp
pushf
outsb
insb
mov
mov
xchg
mov
jecxz
mov
fmull
push
xchg
mov
sub
mov
cld
inc
imul
mov
mov
add
jmp
inc
dec
pop
into
cmp
xchg
inc
adc
cmp
lods
daa
aam
insb
dec
out
mov
jns
arpl
mov
lret
and
call
and
inc
mov
xor
ss
adc
mov
inc
sub
mov
xor
push
mov
mov
push
outsb
add
pop
push
mov
pop
inc
inc
or
pushf
dec
add
popf
sarb
inc
add
lds
xor
adc
jp
cmp
in
lds
jnp
pop
jnp
pop
xchg
mov
enter
push
je
test
inc
test
leave
adc
hlt
popa
sti
and
jne
cmp
add
mov
dec
jge
or
jb
and
mov
aaa
scas
jnp
push
inc
inc
jp
jg
push
lret
mov
push
outsl
lcall
cmp
popf
sub
mov
xchg
in
hlt
leave
mov
xchg
out
ret
loope
xchg
stc
jecxz
push
test
or
mov
inc
inc
stc
or
bound
lods
mov
pop
nop
inc
nop
cmp
incl
repz
ja
adcl
jle
aas
aam
push
xchg
test
leave
add
adc
in
pop
icebp
daa
test
roll
lret
cmp
ret
pop
sub
mov
or
js
sti
enter
jl
imul
lret
cmpb
js
lret
subl
mov
pop
pop
mov
outsb
sbb
pop
ds
sti
xor
ficoml
ds
mov
jmp
xor
scas
sti
lods
adc
mov
inc
or
sbb
aad
jns
cmpsl
push
std
dec
cmp
cmp
dec
sub
in
pop
xor
mov
and
lret
inc
loopne
lods
aaa
sti
mov
add
out
popa
jl
jne
hlt
aaa
add
pop
mov
mov
movsb
nop
fstps
test
pop
cld
repz
in
cltd
adc
jg
enter
gs
jecxz
lcall
aas
in
inc
cmpsb
mov
clc
jmp
dec
out
out
push
sbb
pushf
sub
rcll
insb
push
clc
cmp
test
mov
mov
arpl
insb
aaa
mov
test
jmp
sbb
adc
sub
inc
stos
xchg
mov
pop
sbb
aad
push
sub
pop
movsb
sub
je
jge
mov
enter
mov
add
pop
jge
scas
lods
loopne
iret
stos
dec
and
push
mov
and
int
test
and
or
nop
dec
addr16
xchg
inc
dec
mov
jne
fcoms
xchg
leave
and
repnz
sub
lea
in
icebp
mov
jnp
mov
pushf
jbe
and
xchg
test
popa
jns
pop
inc
sub
cs
inc
mov
fstps
bound
out
sub
js
push
int3
or
fdivl
gs
mov
fildl
inc
aas
addr16
jle
aad
dec
std
pusha
add
das
pusha
fcoml
pop
sbb
adc
sbb
and
mov
in
frstor
incb
mov
movsb
lret
int3
push
jb
pusha
aas
test
mov
iret
dec
mov
xor
sbb
sub
bound
pop
cmp
imul
inc
icebp
das
inc
push
mov
call
jb
int
out
mov
xchg
push
mov
xchg
ljmp
dec
or
sub
test
ret
je
fnsetpm(287
in
aad
push
push
adc
or
jle
and
xchg
push
mov
jbe
repnz
into
cmp
push
dec
negl
call
dec
nop
fsubp
xor
push
inc
das
out
inc
inc
or
mov
push
adc
or
jge
stc
jne
bound
mov
jnp
or
mov
cmp
push
mov
in
jg
xchg
cmc
out
pop
jg
repz
ss
pushf
insb
mov
adc
pop
es
push
and
sbb
push
xor
fldl
mov
jnp
cld
mov
or
js
fmuls
and
cltd
push
cmp
dec
fstpl
add
or
ficomps
jl,pn
popa
and
subb
les
insl
and
rep
or
pop
jg
mov
or
add
ljmp
cmpsl
mov
inc
lods
push
dec
xor
mov
out
mov
push
add
xchg
cmp
or
and
jae
and
out
xchg
mov
sbb
pop
int3
push
inc
dec
xchg
xchg
fwait
movsb
sti
sbb
rcrl
dec
mov
ja
inc
sar
hlt
sarl
cs
hlt
sub
ljmp
in
mov
jbe
sub
outsb
js
cs
cmp
lods
add
sub
mov
xor
cmp
pop
inc
test
cmp
dec
and
mov
fistl
pop
push
ja
push
push
dec
push
inc
and
push
dec
pop
push
push
push
dec
cs
sub
and
pop
lock
sub
adc
mov
shrb
or
loopne
jne
int
lret
jae
sbb
or
stos
adc
dec
rolb
cmpsl
jbe
cmp
ljmp
sar
mov
popf
fwait
or
xchg
add
pop
or
leave
mov
pop
add
dec
add
jae
scas
shll
les
int3
sub
pop
cmp
movsl
dec
xchg
push
dec
ret
inc
dec
cmp
addr16
int3
clc
and
and
lock
mov
sub
cmpsb
mov
or
push
out
jp
xchg
vminpd
fwait
dec
mov
stos
xchg
jne
sub
ss
test
out
aad
gs
inc
xlat
arpl
inc
iret
repnz
sahf
dec
inc
aad
mov
fiadds
ss
cmp
rcrb
jg
push
call
jp
mov
aam
jb
mov
fwait
adc
repz
inc
jmp
push
leave
dec
fucomi
not
lret
test
sarl
shlb
adc
je
fstpt
or
stc
mov
imul
test
ffreep
push
xchg
push
mov
sbb
or
ret
dec
enter
dec
pop
sarb
mov
fstpl
jo
mov
ret
mov
mov
fiaddl
add
je
stos
dec
jno
jns
cld
pop
cmp
push
fisubrs
aam
neg
pop
xchg
jl
rcrb
hlt
adc
mov
cmp
imul
xor
sbb
inc
pop
cmp
loop
shlb
ljmp
sbb
popa
mov
jmp
jmp
mov
add
cmpb
push
addb
stc
mov
jns
lahf
xor
and
dec
nop
pop
ss
out
adc
das
mov
xor
and
pop
shrl
jmp
pop
into
push
call
jne
icebp
and
push
adc
test
addr16
scas
cmp
adc
les
jnp
dec
call
pop
inc
ja
rcr
add
or
inc
sub
test
dec
fucom
xchg
adc
int3
push
or
test
call
cmpsl
call
fcmovne
inc
in
push
mov
mov
adc
xchg
mov
dec
pop
and
mov
push
outsb
dec
jnp
or
and
push
cmpsb
ror
adc
ret
push
repnz
iret
ja
pop
jo
repz
js
jp
fidivs
dec
cltd
std
jbe
in
imul
stos
filds
mov
sti
push
cmp
jnp
out
pop
mov
movsb
jo
jns
inc
arpl
mov
arpl
pop
lock
fsubs
xchg
mov
sti
repnz
xor
mov
dec
insl
pop
sub
push
xchg
xor
and
xchg
mov
imul
mov
sti
push
xor
mov
aas
inc
data16
or
test
popa
ret
mov
jae
pushf
pop
dec
adc
in
out
es
stos
mov
fisubrs
dec
cmp
cwtl
out
in
mov
add
stos
in
or
repnz
ret
xor
movsl
mov
mov
adc
cmpsb
sub
jne
pop
loopne
pop
dec
lods
fdivl
cld
jg
sub
fbld
fbstp
and
pop
scas
xor
cmp
adc
adc
adc
cmp
popf
cmp
jb
mov
daa
lret
clc
jns
ud0
inc
jae
pop
pop
pop
cmp
dec
shrl
sub
jno
fnstcw
and
dec
xchg
cmpsl
int
xchg
cltd
dec
lret
into
add
rolb
pop
push
cli
mov
dec
aaa
mov
fidivl
test
pop
dec
scas
shl
ret
call
sti
add
sbb
pushf
popa
sbb
mov
or
hlt
cmpsb
ficomps
subb
sub
cli
and
andb
adc
ss
xchg
jns
ljmp
andb
xor
adcl
push
add
or
sub
sti
shrb
pusha
lret
sbb
xorb
adc
cmp
scas
stc
xor
push
aam
mov
repz
pop
push
fsts
pop
jbe
xor
xor
mov
sbb
sti
push
imul
std
mov
xor
sub
mov
lret
push
mov
outsl
jmp
add
mov
ret
jbe
cmp
pop
ljmp
jl
sub
xchg
lods
inc
popa
in
aam
pmullw
xlat
push
std
jmp
push
arpl
dec
inc
mov
mov
lock
jns
jmp
sbb
mov
clc
and
jp
jecxz
testb
mov
dec
flds
xor
stos
out
or
int
push
clc
mov
jns
mov
push
loop
pop
mov
mov
sub
mov
leave
pop
mov
cmp
pop
and
in
xchg
or
mov
cmc
jl
ret
ds
mov
xchg
jecxz
or
or
add
inc
push
int
jle
sub
test
das
mov
sub
push
pop
lods
sub
aad
xor
xor
push
mov
movsl
scas
stc
xchg
pop
hlt
or
and
push
aas
mov
sbb
aad
icebp
roll
into
mov
jne
aas
fnstenv
adc
rcl
xchg
aam
test
xchg
mov
or
test
inc
cwtl
cmpsb
js
xchg
xor
add
addb
cmp
mov
push
mov
into
jmp
addb
mov
fwait
loop
jg
and
divb
sti
out
pop
out
clc
ret
das
mov
rcrl
mov
jne
and
int
fs
jb
push
jecxz
sub
nop
cli
test
mov
mov
test
dec
das
sub
jp
adc
and
shld
shrb
std
xchg
aaa
xchg
pop
sbb
in
movsb
pop
repnz
fiadds
xchg
jb
scas
popa
leave
add
xchg
je
fidivs
andb
or
pusha
sbb
insb
or
xorb
push
xorb
and
rcl
lock
leave
mov
insb
add
in
xchg
push
outsl
rcll
inc
ret
aaa
mov
lock
adc
cmpsl
sbb
aaa
or
pop
sbb
fwait
pop
sbb
xor
sub
aam
sbb
sbb
pop
jo
out
mov
xchg
inc
and
or
ret
lret
call
or
aad
rorl
sti
lahf
cmc
inc
xor
loop
in
fwait
int3
stos
jg
cmp
mov
and
adc
lods
or
mov
sahf
mov
ja
mov
inc
dec
lock
mov
mov
adc
xchg
je
lahf
jmp
movsb
bound
repnz
add
add
ljmp
lcall
sbb
out
sbb
or
aas
jp
pop
xor
add
iret
ss
mov
mov
sub
orl
xor
pop
add
mov
dec
imul
xor
rclb
std
push
pop
and
inc
sub
or
rol
ficomps
push
out
out
pop
hlt
in
je
adc
inc
lahf
fsubl
ja
jae
or
insl
inc
cmp
into
cmp
xor
scas
les
xchg
pushf
sub
mov
sub
ss
adc
ljmp
das
cltd
adc
push
or
mov
flds
lock
es
mov
cltd
into
loopne
push
jno
jb
loop
jne
jecxz
push
repz
shlb
out
arpl
inc
xor
mov
add
jne
pop
xor
xchg
aaa
mov
xchg
test
gs
lret
scas
jbe
push
cltd
inc
loop
lea
xchg
jne
xchg
inc
mov
stc
adc
pop
fwait
test
adc
icebp
jmp
lret
inc
cmp
cs
mov
push
insb
ret
and
jae
out
pop
mov
pushf
dec
push
insb
cld
aad
cld
hlt
arpl
mov
testb
lods
mov
sub
ljmp
pop
lock
lods
xor
ret
xor
cld
xchg
sub
and
cmpsl
cmp
fld
lcall
popf
mov
jae
ss
xchg
mov
cld
cmp
push
pop
sar
mov
mov
lods
pop
jns
pop
shll
dec
pop
loopne
mov
nop
test
jno
mov
cmova
cmpsl
cmpsl
cmpsl
loope
fdivrs
sub
movsl
icebp
push
std
movsb
mov
decb
push
mov
xor
mov
test
gs
mov
std
or
popa
sub
out
or
xchg
outsb
jno
add
addr16
pop
add
pop
mov
outsb
insb
rcrb
mov
iret
push
cmp
mov
int3
stc
push
pop
addb
mov
jl
pusha
xlat
cmp
in
add
cli
ss
pop
xlat
adc
inc
xchg
out
js
loopne
dec
add
sub
cmp
jg
call
rolb
mov
cmp
filds
out
mov
xor
je
stos
and
lret
out
pop
xor
insb
mov
out
sub
stc
jbe
imul
jl
and
or
adc
and
mov
stos
mov
bswap
pop
js
mov
mov
lods
aam
push
aad
mov
mov
sub
addr16
and
sub
mov
lock
loopne
cmp
xchg
addb
sbb
mov
mov
lahf
outsb
je
rclb
sub
xchg
xchg
fisttpll
movsb
inc
faddl
lret
xchg
out
aaa
sarl
or
add
and
inc
xor
cli
inc
cltd
adc
lahf
js
inc
mov
cld
sub
mov
loope
sbb
daa
or
dec
add
ljmp
xchg
dec
rcr
pop
mov
or
les
and
xchg
mov
aaa
jg
data16
icebp
pop
lret
add
lock
mov
sbb
mov
loop
push
loopne
xor
cmpsb
jecxz
insl
push
pop
clc
pusha
mov
lret
xchg
dec
test
hlt
jnp
add
orb
lock
sbb
xchg
nop
xlat
jb
inc
jge
push
xor
xor
call
push
popf
mov
int
sub
imul
and
jae
stc
arpl
adc
mov
pop
mov
icebp
or
xchg
xor
sub
adc
cltd
mov
jo
push
scas
insb
mov
or
fbld
fisttpl
push
mov
push
rcrb
push
mov
movsl
push
push
mov
ds
mov
xor
xchg
pushf
jb
cmp
add
jp
push
sbb
and
leave
mov
sbb
rcll
out
adc
into
rcrb
rolb
stos
repnz
xchg
ja
and
add
mov
xchg
cmpsb
test
cmp
inc
mov
std
sbbl
ret
adc
scas
inc
cs
adc
mull
xchg
scas
cltd
fcoms
sbb
test
in
lret
and
ret
js
or
mov
test
ret
sbb
in
insl
inc
dec
pop
pushf
or
mov
push
mov
fildl
stc
cs
popa
test
mov
lea
pop
ljmp
negl
scas
sbb
rcr
insl
fnstenv
add
ds
xchg
imul
mov
or
xchg
pop
mov
mov
lods
xchg
mov
inc
mov
inc
cmpsl
mov
fs
call
mov
mov
or
xchg
hlt
dec
das
fidivrs
and
cwtl
xor
adc
cmp
jb
xchg
outsb
sahf
bnd
sub
test
dec
leave
add
xorl
pop
jnp
ret
std
pushl
pusha
pusha
ja
and
jne
loopne
js
pop
aam
pop
add
pop
aam
loopw
loop
leave
in
mov
mov
shll
stos
push
movsb
mov
fildll
loope
int3
out
lods
rolb
xchg
cmpsb
mov
mov
stc
loopne
rcll
push
subb
push
icebp
sbb
fstp
inc
add
cmpsb
int3
ret
jno
add
mov
adc
add
add
mov
sbb
mov
popf
sbb
xchg
push
in
jo
cltd
popf
cmp
aam
dec
in
xor
pmuludq
add
mov
cld
ror
dec
and
int3
xchg
cs
in
movb
cmp
push
add
stc
in
mov
lret
cld
push
and
xor
dec
jb
les
xor
or
sti
xor
xor
shll
pop
fldl
scas
lret
mov
sub
notb
xor
or
inc
mov
push
movsl
mov
stos
int3
and
pop
add
into
call
jge
orb
jae
cmp
push
cld
sbb
pop
dec
mov
outsl
bound
mov
lret
xchg
jle
xor
test
sub
mov
fists
xchg
ret
in
sub
pop
xchg
out
lahf
roll
mov
inc
insb
in
cmovl
int3
xor
xor
xchg
or
push
lods
pop
mov
sub
sbb
jmp
fwait
pop
add
and
and
lret
imul
in
fstps
cmp
int
lahf
aas
jmp
pop
rclb
dec
fdivrs
sarl
scas
fsts
pop
sbb
sub
add
sbb
xchg
xchg
jge
sub
imul
in
xor
adc
xchg
push
movsb
ret
mov
mov
jb
mov
fcmovb
mov
cmp
xchg
fidivrs
inc
lock
ja
cli
mov
mov
scas
ja
in
cmpsb
stos
jnp
outsl
aaa
sub
imul
lds
int
inc
xor
das
shrb
mov
or
pushf
push
lahf
push
subl
sbb
clc
pushf
pop
movsb
sub
or
and
cmp
popf
fisttpl
and
sub
negl
jae
aad
cmpb
arpl
es
out
rcll
dec
sub
pushf
sub
inc
xor
movsb
mov
jo
push
xor
out
sub
test
cltd
daa
shrl
loope
jge
inc
inc
cmp
call
push
mov
xchg
lret
fsubrl
cs
inc
orb
insb
js
icebp
mov
repnz
xchg
shrl
fwait
or
push
mov
inc
icebp
cmp
and
ret
mov
imul
push
out
and
stos
mov
push
roll
xor
int
and
cmp
call
or
sahf
dec
cs
clc
mov
xchg
insl
test
inc
shlb
push
out
out
arpl
bound
mov
es
sub
pop
out
bound
inc
loope
dec
hlt
mov
fdivr
or
sbb
fwait
dec
cli
dec
or
jge
dec
xor
xchg
out
mov
cmpsl
lahf
pop
xor
pop
dec
pop
call
mov
arpl
in
dec
sbb
in
jbe
call
inc
inc
decl
adc
addb
out
inc
das
cmp
dec
icebp
in
push
sbb
fcoml
adc
xor
subl
push
imul
cs
loopne
mov
mov
out
adc
data16
fsubrl
adc
dec
in
lret
arpl
in
popl
data16
popa
into
mov
push
mov
daa
aad
pop
cmp
test
adc
push
mov
lea
adc
movsb
dec
inc
cmp
xor
xchg
add
mov
in
inc
and
mov
mov
adc
xchg
lahf
lret
add
aaa
mov
cmpsb
sub
jne
push
push
pop
iret
scas
int3
stc
shll
sbb
and
out
stos
popa
push
addb
cs
ficoms
mov
push
sbb
pop
xchg
shll
sahf
mov
dec
clc
jns
mov
lret
adcl
rol
in
idivb
sbb
loop
addb
xchg
ja
mov
jg
aas
xchg
add
jnp
sbb
dec
add
cmp
lgs
fldcw
sbb
mov
sub
inc
cmp
aam
dec
shl
addr16
fsubrs
push
dec
jg
push
vpunpckldq
daa
aad
das
repnz
addb
aam
aam
adc
adc
mov
pop
popf
dec
adc
fildl
in
call
in
pop
dec
pop
js
mov
int
pusha
mov
and
add
repnz
movsl
call
gs
aaa
inc
notl
xlat
or
flds
inc
lea
adc
aad
sub
in
out
push
imul
knotb
pop
imulb
jg
call
aad
mov
clc
cli
std
movl
or
ficoml
cmp
cli
add
mov
mov
push
insl
test
xchg
sbb
das
dec
fisubl
scas
test
push
mov
cmp
push
add
aaa
mov
aas
xchg
inc
ds
out
sahf
in
sub
outsb
pop
adc
pop
push
pop
icebp
dec
dec
xchg
lahf
stos
testl
repz
out
mov
lahf
out
push
sti
sbb
fadds
cmp
cmpsb
push
inc
clc
rcll
cmp
subl
and
leave
daa
push
mov
sub
or
test
sub
jecxz
mov
int
adc
xor
jmp
push
or
pop
outsl
les
lock
aad
cmpxchg
insb
or
push
or
sbb
push
and
sbb
pop
dec
mov
xchg
and
sarb
mov
fildl
jg
pop
push
jle
cmpsb
xchg
cmp
sub
aas
xor
and
scas
ret
idivb
hlt
lods
pop
dec
imul
lahf
iret
gs
or
xchg
xorb
pop
ficompl
inc
rcll
mov
cld
adc
push
subb
mov
sarl
out
repnz
xchg
sbb
xchg
lea
mov
jge
sbb
jp
jnp
int3
push
lcall
aam
sbb
jmp
das
pop
cld
inc
jmp
insb
and
cmpsb
and
adc
dec
cmpsl
jnp
mov
cs
aam
mov
fbld
jo
test
push
jge
mov
inc
aas
xchg
mov
mov
sub
in
mov
scas
dec
mov
inc
mov
dec
jp
sub
test
mov
pop
cmp
jne
fnstenv
das
adc
mov
fs
mov
adc
dec
sbb
in
sub
jg
ret
mov
test
jle
clc
dec
popa
sbb
lret
loop
jmp
in
fwait
mov
mov
shl
push
subl
mov
daa
cld
pusha
dec
aas
nop
cmp
outsb
repnz
inc
fisttpll
cli
jnp
daa
pop
xchg
mov
popa
push
std
bound
xlat
push
cmc
sub
aad
test
push
js
xchg
cmp
bswap
loope
pop
fdivrp
leave
call
inc
subl
push
std
pop
adc
adc
ficoml
ret
pop
mov
xchg
xchg
pop
pop
aaa
int3
add
sbb
ss
add
loope
lahf
xchg
jp
addr16
mov
jb
mov
js
mov
xchg
sub
add
xor
jae
out
mov
dec
test
push
push
xor
test
xor
lahf
jg
jle
sbb
mov
jl
outsb
jb
lahf
nop
dec
push
lret
jns
loop
adc
fs
jmp
cmp
int3
mov
push
fnop
cwtl
lods
pop
mov
cmp
mov
ljmp
aaa
mov
fistpl
data16
jnp
xchg
xor
test
sbb
lret
adcl
jmp
adc
pop
int3
dec
mov
movsl
cmpsb
imul
jge
out
dec
cmp
es
test
cld
out
popa
xchg
pop
lock
pop
out
pop
dec
pusha
lcall
fildl
lea
push
cld
sub
or
jg
pusha
adc
or
rcl
ror
inc
inc
or
loopne
dec
mov
xor
ret
push
mov
sub
jbe
shlb
push
roll
cmp
push
popf
lahf
out
or
or
dec
addr16
sbb
popa
pop
cmp
jne
xchg
out
repz
xor
sbbb
or
dec
popf
lds
clc
cmp
fdivrl
jmp
mov
hlt
pop
xchg
push
mov
ss
mov
fldt
lods
dec
in
lods
leave
mov
adc
in
mov
scas
pushf
ret
mov
dec
jle
cmp
stos
and
jecxz
les
imul
or
in
cmp
add
and
gs
insl
das
cmp
jns
in
cli
sahf
add
dec
push
push
dec
jmp
mov
sbb
dec
and
popa
pusha
loope
push
pop
aaa
mov
lahf
and
nop
inc
fs
xchg
sub
mov
jecxz
je
mov
add
into
inc
add
mov
test
jp
jb
or
xchg
mov
rdmsr
jnp
pushf
data16
inc
stos
js
cltd
xor
bound
push
fwait
and
fcoml
pop
leave
test
arpl
mov
aaa
ret
daa
dec
jecxz
lcall
lahf
in
jp
js
std
xor
or
bound
mov
in
push
ja
into
sub
aas
dec
xchg
mov
pushf
int
mov
mov
daa
insb
stos
lods
pop
dec
int3
push
and
add
xchg
jecxz
dec
cmpsl
loope
ja
jmp
inc
out
xchg
xor
sbb
movsb
daa
pop
or
add
sti
stc
rorb
or
fisubs
dec
xor
mov
push
decb
adc
sahf
cli
xchg
add
adc
lcall
negl
mov
mov
repz
mov
in
mov
dec
ljmp
xor
iret
mov
cmpl
adc
gs
dec
scas
iret
xchg
sahf
or
ret
rol
fiadds
aad
dec
popf
and
push
or
mov
sbb
jns
add
jecxz
incb
aam
adc
cmc
imull
mov
shrl
je
or
cmpsl
es
sub
incl
test
sub
mov
push
sub
dec
jg
jo
out
cmc
add
into
fs
xchg
lods
add
adc
or
stc
mov
jg
xchg
outsb
sbb
int
cmp
inc
sarl
or
test
jo
insl
addr16
aad
cld
jae
push
bound
cmpsb
or
fwait
psubw
arpl
aaa
mov
fsincos
daa
aaa
xlat
lcall
sbb
sub
mov
shlb
nop
enter
and
inc
mov
mov
inc
lcall
js
js
sbb
sbb
lar
repnz
jecxz
repz
jle
fwait
xchg
inc
repz
cmp
dec
cwtl
mov
xor
xchg
or
repz
insl
call
pop
ret
cltd
add
or
pop
fxch
test
rol
xchg
push
sbb
xor
insb
cmp
pop
sahf
jns
addr16
call
xor
movsl
popf
lods
inc
loopne
push
das
dec
dec
fwait
pop
and
stos
sub
mov
mov
push
int
cmp
repnz
jns
lcall
add
lret
or
cmc
xchg
mov
or
xchg
lret
jae
push
xor
push
lret
and
clc
pusha
xlat
inc
ret
daa
or
loopne
xor
sub
scas
jbe
data16
sbb
call
les
or
inc
mov
sahf
dec
and
cmp
mov
lret
jb
movhps
jns
jo
popa
dec
insb
clc
mov
jle
mov
std
sti
and
push
lea
add
das
xchg
pop
mov
testl
negl
in
lds
daa
add
in
lods
adcb
and
mov
xor
loop
je
sbb
aas
mov
pop
xor
adc
jnp
cmp
insb
outsb
mov
cmc
ss
sub
push
shl
xchg
mov
pop
fimull
ds
mov
addb
cmpb
sbb
adc
fs
jnp
mov
add
push
jnp
pushf
test
fsubrs
add
xchg
or
jg
jp
cmp
scas
repz
in
jbe
and
std
shrl
pop
lods
mov
sub
lods
rclb
add
inc
adc
lcall
mov
mov
dec
aam
xor
dec
test
shrb
sub
test
sub
mov
hlt
pop
rorb
subb
adc
push
jns
pushf
jnp
fsub
cmpsb
push
xchg
lods
out
sbb
cmp
mov
xlat
sbbl
outsl
xchg
cmpsb
cltd
gs
mov
shrb
mov
inc
push
push
dec
in
adc
mov
mov
push
fucomi
roll
pop
jle
cmp
ljmp
mov
jae
mov
mov
jecxz
cmp
mov
sbb
cld
adc
cmp
lcall
inc
insl
les
push
fisttps
xchg
inc
push
es
adc
dec
mov
in
jp
mov
adc
mov
push
jnp
enter
imul
lea
mov
cmp
mov
mov
push
lods
cmpsl
in
pop
sub
or
jl
add
ret
xchg
addr16
mov
add
insb
mov
test
lea
scas
adc
add
sub
stc
movb
enter
sahf
add
adc
mov
cmc
adc
ljmp
cli
leave
pop
mov
test
jnp
mov
xchg
je
leave
loop
and
lods
call
mov
cwtl
dec
rcll
fs
inc
fsubrp
jg
xchg
sbb
xchg
jecxz
out
add
jo
push
sahf
cmp
xchg
adc
xchg
cmp
fs
jp
mov
mov
rolb
xchg
fsubs
dec
cmp
mov
fimuls
mov
lods
xchg
gs
pushl
roll
rolb
xor
and
jo
xor
push
loop
mov
cmpl
mov
xor
mov
xchg
adc
clc
faddl
push
negb
imull
xlat
jo
test
mov
sub
repnz
daa
cltd
ja
sbb
bound
pop
sbb
or
and
xchg
mov
lret
mov
pop
mov
inc
cmp
jge
jbe
pop
cwtl
loop
mov
xchg
xor
pop
out
into
fidivrs
pop
xchg
xor
push
xchg
jp
mov
sub
es
mov
fmuls
mov
test
stos
iret
sub
xchg
xchg
cwtl
arpl
jb
out
sti
stos
imul
xchg
pop
stc
sbb
xchg
pop
pop
fwait
arpl
lock
test
pop
pop
mov
adc
mov
adc
sbb
lcall
cmc
lods
stos
lea
fiadds
popw
bound
mov
out
mov
xchg
jns
dec
in
sbb
mov
mov
aaa
and
jne
pop
mov
cld
push
mov
test
jge
push
mov
sbb
or
or
sahf
xchg
inc
pcmpgtd
sbb
fcmovnb
jne
fstpt
movsbl
pop
push
sarb
mov
push
rolb
rolb
and
out
add
test
sbb
xor
lods
ret
sub
into
dec
pop
jl
pop
addb
pop
jl
mov
in
sbb
cmc
jg
and
jmp
lds
cli
in
and
inc
mov
adc
xchg
pop
cld
daa
loopne
addr16
inc
and
repz
cmp
push
test
sub
data16
movsl
cmp
or
xchg
jnp
lock
and
pop
jecxz
dec
hlt
push
mov
scas
addr16
mov
int3
mov
mov
mov
imulb
jecxz
sub
std
jge
mov
lahf
inc
es
lds
jne
push
sarb
aas
push
inc
pop
jbe
mov
mov
mov
fwait
negb
gs
call
add
loopne
pop
inc
cmp
aaa
bnd
jno
and
sets
adc
mov
sbbb
jge
hlt
pusha
push
inc
push
mulb
icebp
imul
jmp
nop
repnz
jne
pop
subl
jg
js,pt
inc
or
or
sbb
xor
andb
inc
mov
repz
and
dec
cmp
dec
ja
pop
mov
jne
js
fs
lahf
pop
sbb
loope
clc
mov
lea
ret
adc
sahf
frstor
pop
adc
jl
addr16
iret
cmp
fdivl
cmp
pop
dec
or
inc
jne
push
mov
jg
in
sub
lret
fsubs
and
dec
mov
dec
incb
repnz
add
xchg
or
mov
fs
icebp
pop
fwait
shlb
into
daa
gs
std
xchg
movsb
loope
add
cmpsb
fcmovbe
negl
inc
sbb
in
sub
stos
ficomps
mov
mov
push
dec
sbbb
out
xor
lods
sbb
push
movsl
mov
sub
add
rol
push
mov
mov
std
rclb
cltd
cmc
sbb
popl
scas
xchg
cld
stos
sbb
sti
inc
mov
jbe
pop
popa
mov
in
aad
ljmp
jg
mov
fidivrs
sbb
sub
sub
test
lods
mov
sbb
outsl
inc
cmp
arpl
adc
scas
cmpsb
jae
pop
call
cmp
shrb
mov
dec
outsb
mov
and
xor
scas
test
test
mov
flds
adcb
jecxz
dec
psubsw
cli
xor
and
ret
fld
pushf
pop
orb
xchg
mov
pop
scas
loopne
cmp
sub
sbb
jnp
stos
out
ret
xor
adc
adc
mov
jns
and
fisubrs
xchg
add
xchg
call
les
sub
mov
jae
pop
adc
sub
adc
fdivl
int3
shrb
cmc
rclb
loop
addr16
imul
test
xlat
sahf
pushf
aas
rorl
jmp
add
jg
jge
lret
jb
sahf
clc
lahf
les
push
test
in
xlat
push
outsl
sbb
hlt
push
or
mov
lock
push
push
mov
sbb
sub
jg
mov
jne
in
out
push
inc
dec
and
insl
sub
sub
sahf
popf
jnp
aas
aad
xchg
inc
sti
lea
in
pxor
sub
ret
out
pushf
mov
mov
clc
in
lds
lcall
or
pop
nop
xlat
jno
xor
lock
push
std
addr16
push
dec
sbb
dec
loopne
add
loopne
push
mov
xchg
popw
mov
data16
stc
xchg
negl
push
pop
pop
dec
fsubs
cmp
es
cmpsb
subl
mov
adc
or
sub
hlt
test
mov
ret
pop
add
pop
and
jbe
jb
sti
add
fdivrs
dec
test
lret
insb
xchg
push
cwtl
les
stos
mov
sbbl
ret
push
insl
mov
mov
mov
and
pop
cmp
dec
jbe
imul
shl
clc
fs
movsl
sbb
push
pop
and
xchg
sbb
pop
inc
inc
insb
ret
lahf
xchg
dec
sub
test
pusha
sub
rcrl
fnstsw
push
jns
arpl
iret
and
dec
in
inc
pinsrw
movb
mov
add
test
jp
jmp
xchg
xor
push
pop
jno
mov
dec
or
cmp
fs
push
inc
push
and
xchg
push
lahf
or
repz
out
sub
jge
addl
sbb
repz
enter
pop
enter
pusha
xchg
arpl
mov
adc
in
mov
push
loop
mov
adc
xchg
ss
movsl
sub
sub
out
or
in
sub
fidivl
movsb
jmp
mov
jg
jecxz
add
sub
cmp
out
push
ret
testl
mov
jg
insb
fstp
fisubrl
add
movsl
mov
dec
std
jge
enter
sbb
sti
mov
fnstsw
mov
icebp
pop
cmove
stos
je
test
into
aas
jno
or
or
sub
imul
rclb
adcb
mov
div
xor
cmpsb
inc
aam
cs
xchg
out
lret
push
pop
jmp
add
add
inc
jno
lcall
xor
fsubl
pushf
mov
repnz
call
pushl
imul
gs
cmc
stos
bound
sbb
mov
mov
jb
or
nop
js
pop
mov
or
adc
mov
insb
mov
gs
mov
popa
mov
insl
sbb
lods
pop
loope
scas
imul
clc
daa
test
leave
mov
dec
daa
pmaxsw
mov
rorl
jecxz
jp
sub
sti
xchg
enter
mov
xor
cwtl
imul
fdivrl
imul
out
sahf
fidivrl
add
dec
sub
inc
clc
mov
push
addr16
cltd
stos
imul
rcr
ds
pop
test
ret
mov
add
in
mov
sub
loope
addl
inc
sub
mov
inc
push
movl
int
insb
mov
push
shll
or
insb
rcrb
xor
pop
sbb
jle
cmp
mov
test
cmp
add
adc
sti
outsb
mov
fwait
ss
and
adc
out
or
and
add
bound
mov
fwait
sbb
mov
push
fldl
jb
popf
icebp
out
mov
push
adc
mov
call
mov
cmpsl
push
jmp
push
add
scas
sbb
ret
aam
test
xchg
fadd
xchg
int
pop
lock
psrad
sti
pusha
insb
ficomps
and
ja
sbb
pop
lods
cltd
xor
in
mov
mov
xchg
xchg
jnp
sub
sbb
insb
outsl
in
sbb
xchg
lcall
shll
mov
test
fnstsw
push
mov
ficomps
movsl
movsl
imulb
or
sbb
xor
dec
aam
xor
sub
push
mov
pop
in
call
rcrb
enter
jmp
dec
mov
lret
add
pop
les
inc
dec
xchg
cs
inc
into
lcall
notb
fidivrs
jnp
pop
jecxz
adc
popa
sbbb
dec
inc
outsb
rclb
stos
daa
movb
dec
sub
testl
leave
nop
push
mov
adcb
inc
js
cli
add
add
fildl
or
int3
lahf
xchg
mov
lods
sbb
push
dec
out
cmpsl
int
inc
pop
repnz
scas
jae,pn
jns
mov
jmp
jg
ja
nop
lods
fnstsw
outsl
cs
jo
adc
fwait
out
fldl2e
jmp
or
jnp
das
pop
xchg
mov
mov
loop
jge
mov
jnp
pop
mulb
inc
or
jno
or
insb
mov
int3
test
or
xchg
adc
pop
push
jne
jne
lds
push
outsl
stos
shlb
mov
xchg
dec
mov
mov
in
fiaddl
push
mov
scas
xchg
or
jnp
mov
nop
mov
push
pusha
dec
aaa
mov
push
hlt
imulb
sub
out
call
adc
mov
bound
xchg
lea
and
add
jae
inc
or
mov
in
enter
fildl
aad
push
cmpsl
insl
add
inc
add
in
in
sbb
sbb
mov
cmc
xchg
iret
sbb
out
or
dec
inc
stc
scas
insb
js
mov
xchg
shlb
dec
out
xor
or
icebp
fbld
pop
mov
cmp
popa
jo
or
pop
mov
xor
outsl
pop
or
es
ljmp
pop
test
ja
movsl
mov
arpl
xlat
repnz
push
pop
jb
loopne
mov
outsb
push
and
inc
inc
push
xor
subl
xchg
insb
push
movsl
cli
out
neg
xchg
stos
mov
xor
lcall
adc
js
aam
sahf
test
popa
lods
cmc
mov
loopne
das
inc
or
test
push
or
push
jnp
imul
xor
push
das
sub
loopne,pn
mov
sub
jo
mov
and
ficoms
shrb
popf
cmpl
jno
and
mov
or
adc
sub
fldl
add
lods
xor
jle
mov
fldenv
testl
dec
les
scas
xchg
push
add
pop
sub
ret
mov
inc
jecxz
sbb
mov
je
aad
rolb
push
push
mov
jne
dec
insb
inc
mov
out
add
xlat
mov
shlb
or
xchg
xchg
sahf
fstl
lock
push
sub
fldl
fdiv
dec
lret
fbstp
loope
repz
adc
jns
aaa
cmc
xor
mov
les
into
xor
aaa
add
jp
xlat
sbb
xchg
jae
out
add
xor
outsl
ficoml
dec
adc
fldcw
dec
rorb
xchg
dec
xorl
dec
loope
out
ss
push
je
mov
repz
sbb
xor
push
push
jecxz
lcall
mov
loopne
xchg
test
xor
sahf
shll
orl
movsl
and
dec
push
shlb
mov
push
pop
and
stos
popf
mov
xchg
xlat
imul
bound
sub
xchg
sbb
or
or
sbb
in
mov
divl
imul
imul
cmp
pop
ja
test
pop
jo
arpl
cmp
ss
pop
dec
adc
dec
rcr
mov
dec
js
and
dec
or
test
stos
adc
ds
pusha
xor
insl
jl
mov
and
nop
push
dec
adc
js
repnz
insb
mov
fdivl
leave
int3
cs
and
mov
inc
aaa
jge
stos
test
add
add
adc
hlt
xor
addr16
push
or
adc
pushf
cld
fdivs
int3
mov
movsb
jae
mov
or
shrl
or
mov
fistl
add
cmp
add
outsb
repnz
push
inc
cmc
adc
in
roll
or
mov
insl
sbb
inc
ror
sub
mov
aam
xor
ljmp
jecxz
out
push
stc
xchg
fisubrs
push
fisttpll
mov
es
popa
stos
insl
mov
mov
mov
fisttps
icebp
jmp
sbb
xchg
movsl
mov
fs
mov
in
rcr
insb
int
fstl
xor
enter
push
call
rorb
je
cli
push
sbb
in
into
in
pop
cmp
mov
cmp
inc
int
lods
les
or
bound
add
mov
lcall
cmpsb
outsl
sub
lcall
data16
stos
call
divb
mov
fdivr
dec
ds
movsl
shlb
push
sub
xor
cld
mov
cmpsb
andl
in
cwtl
pop
fucomp
and
lock
push
ret
mov
shlb
out
nop
jge
test
mov
lds
mov
or
cmp
add
loop
or
or
mov
fwait
stos
sub
and
bound
shll
int3
in
add
jg
iret
inc
inc
push
in
movsb
sbb
or
scas
mov
in
mov
movsb
out
jnp
sbb
stos
mov
mov
xchg
lret
jge
out
xor
ds
jne
mov
add
bound
add
mov
dec
cmpsl
or
xchg
jle
adc
jne
cmp
shl
xchg
sub
push
ret
sub
movsb
aaa
and
into
outsb
and
cmp
xchg
fnclex
mov
xchg
mov
mov
stos
jl
push
and
cmp
adc
popaw
dec
stos
sbb
fdivrs
jl
sub
mov
pusha
sub
xchg
lock
das
test
sbb
outsl
test
out
mov
into
jbe
andl
mov
mov
pop
pop
bswap
push
mov
add
xor
negb
in
or
add
sti
dec
sub
repnz
icebp
dec
out
shlb
xchg
lcall
cmc
adc
hlt
in
sarl
adc
cmp
xchg
jecxz
cmp
xchg
or
push
adc
scas
xor
mov
loopne
lcall
push
fildl
loope
adc
xchg
js
pop
xchg
movb
test
dec
pop
or
inc
and
inc
or
clc
pop
test
nop
push
or
fwait
ss
push
push
dec
mov
cmp
lcall
shrl
popa
xchg
mov
rcrl
push
jge
mov
jne
pop
push
loopne
mov
xor
dec
mov
movsb
jnp
sbb
cmp
push
or
mov
scas
out
scas
ja
pop
aas
sbb
sbb
leave
pop
into
rcr
ljmp
lods
or
data16
imul
push
daa
xchg
popa
and
mov
in
jbe
add
in
fcomp
iret
test
jmp
test
cmpsl
and
ds
rol
mov
pop
loopne
leave
inc
data16
push
adc
cltd
fmuls
lret
or
mov
ret
aam
ret
jbe
int
pop
adc
pop
in
push
movsl
dec
xchg
lock
sub
lcall
or
out
call
popa
fldcw
or
sahf
push
push
add
lods
add
cmp
sbb
insl
aas
cmp
jo
jp
fisttpl
or
sub
lret
roll
int3
lods
stos
mov
push
push
push
pop
mov
in
push
aas
pop
inc
test
jg
mov
xchg
mov
insl
arpl
jnp
lret
addr16
sbbl
outsl
scas
and
mov
push
loopne
push
dec
iret
xor
in
xchg
xchg
pop
incb
mov
lds
rcr
lods
mov
cmpb
mov
dec
sub
xchg
loope
jl
faddp
int
cmpsb
mov
in
push
inc
push
clc
push
jge
push
inc
flds
inc
enter
jno
and
mov
js
popf
mov
push
cmp
inc
adc
and
gs
aam
inc
jge
subb
cli
rcrb
dec
cwtl
inc
mov
push
fldt
nop
outsl
sbb
adc
cli
and
int3
and
dec
stos
xchg
jecxz
aaa
jle
cmpsl
addl
insb
movsl
outsb
jno
mov
cmp
pusha
cltd
jge
ret
sbb
popf
je
jno
pushf
xor
push
pusha
push
movsl
push
pop
jns
dec
adc
fstl
ss
pushf
das
dec
push
imul
and
arpl
arpl
imul
iret
mov
adc
jo
shr
mov
mov
clc
fbld
xor
push
pop
xchg
clc
dec
scas
aas
add
scas
and
scas
mov
lods
out
mov
dec
xchg
movb
sbb
insl
sti
shl
mov
adc
mov
subl
pusha
stc
dec
and
pusha
test
outsl
ljmp
jecxz
hlt
push
das
adc
push
leave
mov
cld
loope
mov
pop
loop
int
leave
sbb
test
lea
or
mov
repz
jo
pop
jecxz
dec
insb
jnp
test
bound
pop
mov
fstpl
movl
push
add
dec
rorb
int
int
out
xchg
and
js
xor
arpl
fnstsw
test
ljmp
fwait
mov
xchg
imul
jbe
es
push
inc
fnstenv
ja
xchg
xchg
adc
jmp
ret
sub
inc
add
jle
xor
sub
popa
inc
popa
pop
dec
out
sbb
fwait
imul
dec
xor
mov
out
xor
push
call
das
bound
sarb
push
mov
mov
cmp
outsl
subl
sub
cld
fcompl
cmc
icebp
mov
and
pop
cld
dec
cltd
das
sti
sarb
daa
jae
push
gs
mov
clc
outsl
nop
inc
sub
sarl
idivb
cmp
cltd
imul
mov
xchg
outsl
sub
inc
insb
pop
inc
or
sbb
mov
inc
xchg
pop
mov
push
mov
scas
lds
lock
ds
add
test
out
sub
xchg
xchg
in
ror
or
xor
lds
xlat
mov
pop
xor
das
clc
loop
push
adc
aad
addr16
dec
cli
push
cmp
pop
out
mov
mov
sbb
sbb
mov
add
push
or
push
cwtl
movsl
mov
test
pop
jb
enter
pop
stc
popf
dec
xor
pop
outsb
xchg
sub
imul
push
das
sub
sub
xchg
mov
out
pop
xor
pop
jno
jae
push
adc
cmp
mov
in
andl
jmp
addr16
jmp
lcall
mov
mov
lahf
add
cmp
sub
repnz
ja
decb
leave
mov
popa
jge
cmp
sub
pop
or
lock
jg
pop
ror
xor
repnz
jge
or
mov
lock
sarb
iret
punpcklwd
and
xor
in
testl
cmp
mov
fsubr
pusha
or
push
fisttpl
push
sub
out
push
mov
scas
fiadds
popf
icebp
rcl
pushf
call
les
test
lret
add
and
outsb
pop
insb
in
jnp
dec
and
push
pusha
test
out
sbb
popa
nop
out
sahf
outsb
adc
roll
rclb
sub
pushf
stos
js
popf
push
dec
js
fcompl
lret
int
cmp
pop
cld
iret
jmp
js
scas
push
dec
popf
sbb
and
sub
lock
or
jb
mov
and
and
scas
ss
adc
popa
xor
mov
mov
aaa
lock
push
push
frstor
inc
pop
xchg
dec
sub
xor
cmp
or
mov
xor
or
das
sub
adc
xchg
or
dec
xor
cmp
fs
mov
fdivrs
sbb
dec
pop
ds
jae
adc
sub
jb
mov
adc
sub
mov
pop
jb
cltd
xabort
xor
push
loope
jae
jge
ret
jp
mov
pop
outsb
ss
jl
addr16
mov
jno
popa
rclb
mov
push
mov
mov
pop
cld
xchg
int
or
mov
mov
ret
dec
fisubl
add
sbb
inc
add
rolb
iret
sbb
dec
dec
cltd
pop
push
arpl
cmp
inc
push
and
cmp
fdivs
notl
lea
xor
dec
pop
sub
sub
cmp
and
mov
cmc
dec
test
push
fistpll
or
stos
push
fildl
nop
add
mov
int3
stos
ljmp
jae
stc
dec
insl
push
jmp
lods
mov
inc
inc
insb
pop
inc
stos
icebp
clc
test
iret
dec
arpl
out
ljmpw
fwait
xor
sbb
icebp
stc
or
adc
jnp
jno
mov
mov
inc
sub
inc
in
aas
adc
js
add
fs
lock
shl
daa
xchg
xlat
aam
fdivrs
aas
or
pop
in
mov
xor
mov
icebp
aam
jbe
xorl
in
lahf
dec
pop
nop
jns
scas
ss
mov
xchg
cmpsb
add
insl
fdivl
jbe
fadds
arpl
cmp
mov
push
stos
cmp
fnsave
mov
ljmp
lock
hlt
dec
or
hlt
mov
add
jle
and
jbe
lods
cmpsl
inc
dec
lock
testb
pop
mov
lea
dec
in
icebp
test
or
cmp
inc
mov
movsl
testb
sub
add
lcall
int
jb
into
les
stc
jmp
fidivrs
in
dec
int3
test
mov
add
jmp
push
pop
push
cmp
pop
imul
sub
cmc
stos
pop
cli
xor
outsl
push
popa
cltd
std
mov
sbb
push
and
nop
jbe
setne
mov
hlt
push
inc
loopne
push
mov
push
int3
inc
inc
hlt
dec
mov
pop
fldenv
loop
sbb
cltd
stos
pop
repnz
xor
es
push
movsb
pop
xor
aad
sbb
sub
cmpsl
cwtl
pop
adc
mov
or
stc
dec
mov
cld
fstpt
imul
inc
sub
xor
gs
cwtl
js
mov
sbb
fistps
lcall
push
mov
or
jno
jecxz
adc
push
pusha
repz
jne
bound
mov
sbb
pop
lahf
inc
ficoml
xchg
pop
insl
pop
cmp
pop
cltd
jmp
adcl
dec
mov
lcall
mov
mov
add
push
jecxz
out
rcll
fistps
adc
icebp
mov
pusha
dec
add
lods
mov
xor
jg
push
cmpsb
inc
mov
push
rcll
push
push
pop
push
xor
leave
mov
xor
pushf
aaa
push
adc
outsl
stc
pop
dec
mov
cmp
xlat
sub
push
shll
mov
mov
pop
rcll
jl
sti
jmp
popa
scas
lcall
in
xchg
mov
cmp
mov
ret
add
cmp
aas
mov
mov
jecxz
xor
mov
cmp
jbe
or
push
xor
test
dec
fwait
lahf
fwait
adc
addr16
hlt
negb
test
gs
movsl
lods
pop
push
jmp
shll
mov
aas
pop
sub
jecxz
data16
mull
sarb
adc
mov
push
test
add
pop
fidivs
andnps
push
out
xchg
enter
pop
and
aam
loope
jne
imul
jmp
lahf
sbb
flds
dec
or
dec
xchg
test
aas
jns
xor
adc
ficoms
daa
pop
cmp
inc
push
jecxz
arpl
sti
inc
cmp
stos
sahf
ret
repz
sbb
mov
imul
and
or
xor
mov
lret
sub
push
call
xor
inc
xor
pop
cwtl
pop
jae
mov
rcl
push
or
jl
in
or
clc
stos
push
test
inc
dec
test
dec
push
or
test
mov
ds
mov
lret
repnz
rcrb
jge
mov
xor
loop
push
ss
adc
push
insb
xchg
push
sbb
cmp
pop
imul
ret
mov
pop
in
scas
js
jle
cld
js
stos
mov
addl
shll
sahf
nop
fs
or
cmc
jecxz
push
pop
test
aas
cmp
call
mov
xchg
pop
jo
inc
sahf
inc
adc
xlat
das
dec
add
or
stc
cmpl
mov
pop
jge
pop
or
sbb
repz
fnstcw
cltd
bound
in
cli
or
mov
ds
xchg
mov
cmp
lretw
loope
mov
push
pop
scas
sbb
sub
push
das
sub
sti
test
pop
cmp
in
adc
push
stos
inc
movsl
mov
jo
dec
lods
mov
shl
shlb
repz
xchg
sbb
jp
mov
mov
lret
add
scas
je
ljmp
outsl
add
jmp
cmp
sbb
ret
insb
repz
push
lds
mov
addl
mov
and
push
cmp
dec
test
fdivrp
lcall
dec
mov
xchg
inc
repz
xor
fucomi
or
adc
lods
mov
or
cmpsl
mov
and
xor
fwait
inc
rcrb
leave
mulps
inc
int
inc
mov
hlt
mov
pop
push
xor
xor
cli
xchg
daa
xchg
mov
rep
dec
mov
and
in
subl
cld
inc
pop
add
adc
sti
xchg
jecxz
in
movsb
dec
jno
orl
pcmpeqb
lret
push
pop
xorb
ret
daa
test
repnz
inc
push
insb
xchg
and
sbb
aas
or
jb
adcb
push
mov
mov
xchg
push
std
insl
std
loope
or
mov
mov
sub
mov
dec
int
stc
outsb
add
movsl
jge
mov
pop
movsl
jp
push
out
loop
pop
xor
cmp
mov
pop
js
fcos
mov
mov
imul
pop
jmp
daa
jns
popf
in
jl
data16
inc
icebp
popa
jne
insb
sbb
cmp
dec
faddl
fcomps
cs
cmp
enter
cmpsb
or
jg
dec
inc
fdivrl
aam
jb
addl
xor
xor
icebp
fnstcw
xlat
xchg
xchg
jmp
sub
lods
sbb
jmp
cmp
sarb
ljmp
dec
xlat
adc
pop
dec
sbb
orl
adc
or
cmp
out
fildll
xorb
jno
jp
pop
jne
mov
jb
sub
jo
ret
mov
jne
inc
xor
push
dec
leave
cmp
or
dec
jp
jmp
inc
adc
rcrb
push
orb
add
xchg
cmp
rcll
xchg
adc
pusha
mov
push
cltd
stc
hlt
fwait
pop
shrb
fidivrs
jbe
mov
rorb
test
iret
pop
fs
mov
sbb
jb
mov
arpl
imul
sti
dec
inc
cli
jg
not
in
xchg
xor
jae
jne
mov
jecxz
insb
push
flds
int3
or
dec
cmp
or
jecxz
and
xor
cmpsl
pop
cmpsb
mov
outsb
icebp
in
mov
movsb
push
adc
sbb
cmpsl
push
inc
mov
lret
or
test
mov
pop
and
inc
lea
xchg
movsb
mov
stos
pop
dec
in
lcall
hlt
sarb
and
adc
aam
jle
lock
lcall
insl
inc
lods
adc
xchg
mov
fld
xchg
loopne
dec
mov
push
push
test
cmpsb
mov
clc
jbe
scas
loopne
jns
add
dec
addr16
aas
push
xor
inc
mov
sub
jae
or
test
push
std
jecxz
pop
push
jg
loopne
lcall
or
jne
xor
adc
push
fidivs
lret
inc
out
loop
aaa
mov
inc
in
sbb
dec
shr
dec
in
xchg
les
xchg
or
mov
scas
punpcklbw
mov
jns
push
and
add
aad
mov
xchg
dec
mov
cmp
out
or
lahf
lock
and
xor
les
add
cmc
mov
add
sbb
imul
shrb
cwtl
leave
aam
fdiv
dec
add
test
sbb
mov
mov
sub
jle
cmpsb
xor
push
icebp
insb
mov
sub
lods
into
mov
iret
mov
jns
cmp
and
mov
ret
fnstenv
jb
pushf
sub
movsb
cmp
sub
mov
in
xor
or
cmp
mov
aam
or
in
xchg
push
xor
leave
or
mov
addr16
xchg
fbstp
mov
fwait
aas
sarl
mov
gs
pop
stc
push
dec
mov
dec
mov
insb
inc
int
xchg
jge
lcall
inc
sbb
inc
jb
cltd
lods
mov
inc
faddl
sti
pop
repnz
sarl
or
fidivl
test
pop
xchg
jg
mov
nop
cmc
shr
sub
adc
loop
ret
push
fcompl
dec
sbbb
std
jmp
nopl
int
insb
shrl
inc
adc
inc
sub
inc
daa
and
outsl
mov
adc
push
cwtl
outsb
push
and
add
lea
nop
movsl
mov
jge
ret
pop
in
pusha
mov
push
in
mov
push
hlt
jo
push
ss
movsl
in
cmp
push
lock
scas
out
sub
add
xchg
mov
jp
mov
les
mov
inc
and
notl
mov
aad
mov
out
sbb
pushf
xor
and
and
sub
inc
mov
call
out
movsl
inc
movsl
in
test
scas
adc
inc
lds
outsl
cmpl
fdivrp
pop
shlb
fmuls
jns
mov
enter
add
mov
mov
mov
lds
aas
and
in
sub
mov
lret
cmp
push
jg
dec
or
rep
push
cmovno
lret
jno
sub
fwait
push
sbb
mov
fstpt
or
inc
fwait
insb
lahf
addr16
mov
cs
iret
push
les
jle
add
je
and
out
sbb
fldenv
pop
stos
jle
dec
les
push
add
pushf
out
jo
dec
lret
into
push
jae
lret
xlat
adc
pusha
sbb
mov
adc
jge
sbb
push
mov
add
pusha
add
add
mov
mov
and
rcll
ret
movsb
mov
inc
dec
test
mov
xor
push
out
sub
outsb
sbb
xchg
fs
xchg
insb
cmp
and
enter
sbb
or
dec
iret
enter
std
cld
push
lea
xchg
inc
mov
test
loope
mov
dec
sbb
cwtl
pop
cmp
dec
pushf
pop
cmpsl
lcall
mov
xchg
and
in
mov
stos
pop
fstps
test
xor
mov
pop
add
fwait
bound
sbb
scas
pop
cmc
subl
popa
dec
ds
sub
inc
cmp
dec
fists
fucomip
in
cli
and
stos
flds
jns
or
mov
sub
movsl
mov
dec
imul
cld
icebp
stos
pusha
shll
imul
xchg
lods
adc
pop
mov
mov
insl
insb
push
xor
lcall
mov
lret
scas
aam
jo
cmpl
jb
push
popf
cmp
inc
sbb
pop
not
in
sbb
add
jno
mov
lods
inc
lret
push
lret
out
add
mov
cmp
pop
dec
call
fidivl
rcll
out
movsb
dec
mov
icebp
arpl
clc
jns
les
ret
adc
fmuls
dec
add
decl
mov
out
sahf
adc
mov
xchg
add
mov
mov
push
dec
xchg
int3
xorb
xchg
hlt
or
stc
ja
pusha
scas
cmpsl
and
loopne
fsubl
mov
dec
push
ret
pusha
stos
cld
add
daa
push
je
cmp
xchg
mov
jno
fdivr
sbb
mov
adc
xchg
in
cmp
jae
inc
mov
jns
jns
mov
daa
lret
aas
in
xchg
push
repz
sub
es
sub
and
jmp
imul
ss
stc
test
int3
fsubs
push
arpl
lods
mov
ss
cmp
xlat
and
pop
or
out
mov
and
xor
bound
xor
sbb
ljmp
mov
stos
sbb
jmp
pop
mov
xchg
stc
xor
outsb
sub
mov
cmp
pop
or
mov
cmp
or
and
stos
adc
out
pop
fdivrl
xor
xchg
filds
pop
fisubl
mov
inc
mov
dec
popf
sub
pop
lret
adc
nop
faddl
or
mov
rorb
push
cmp
andb
push
xchg
pop
into
inc
lret
insb
xchg
lahf
popa
out
ficoml
je
outsl
xchg
out
pushf
cs
loopne
xchg
pop
fwait
jb
sbb
dec
sbb
mov
sti
mov
fcomp
jmp
cmp
xchg
jb
pop
pop
js
xchg
data16
popf
xchg
in
jo
inc
jae
loope
pop
loop
and
insl
jb
jp
xchg
aas
jne
pop
insb
pop
dec
push
mov
mov
dec
pop
fadds
mov
or
in
add
jp
mov
pop
dec
sub
pop
inc
loop
sub
shlb
outsb
and
loop
jg
fcmovnbe
aaa
or
dec
stos
and
sub
add
and
stos
setge
push
imul
add
test
es
and
dec
sbbl
gs
add
mov
pop
lods
in
mov
daa
push
mov
push
mov
loop
negb
cli
add
shl
xlat
push
insb
dec
stos
sub
jne
ja
sbb
mov
mov
or
fdivl
jno
fidivrs
lahf
jle
mov
iret
lcall
mov
inc
xchg
or
lock
jecxz
not
push
mov
xor
subl
pop
pextrw
push
adc
mov
xlat
jg
mov
test
pop
push
imul
mov
adc
lahf
push
cld
lock
lods
fbstp
ds
cltd
mov
lahf
cltd
cmp
jb
xor
mov
cs
icebp
in
push
jmp
pop
outsl
sbb
pop
mov
inc
jg
mov
inc
and
or
out
pop
out
lds
inc
daa
rorl
dec
add
insl
dec
cmpsb
icebp
lea
sub
test
movsl
and
jno
mov
xchg
xchg
insl
enter
sub
mov
fists
sarl
mov
xchg
jecxz
mov
xchg
out
adc
xor
mov
outsl
stos
inc
sbbb
into
or
mov
jno
fidivrs
dec
das
jle
bound
ret
adc
outsb
and
shlb
xor
jmp
sbb
xchg
jg
arpl
insl
mov
xor
push
arpl
dec
fildll
stos
mov
push
data16
daa
xor
popf
fstl
pop
push
xlat
xor
test
inc
xorb
mov
pop
jae
dec
loop
mov
aad
jns
cmp
add
and
sub
inc
leave
inc
mov
psllw
xor
in
andl
daa
or
cmp
shlb
outsb
fisubl
inc
shll
add
cmpsb
mov
mov
cld
mov
lret
sti
inc
sub
int3
inc
testl
fldl
mov
sahf
dec
or
inc
pop
psllq
stc
jnp
movsb
inc
cmpsl
iret
dec
xchg
cld
dec
aam
push
out
in
adc
pop
popa
loopne
fstpl
imul
inc
lds
lret
int3
outsl
jmp
not
add
mov
jecxz
xor
clc
push
div
mov
pusha
jnp
jbe
adcb
imul
mov
add
ret
mov
sbb
into
sub
jne
fwait
iret
sub
in
add
push
mov
adc
loop
mov
push
sbb
adcb
outsb
ds
loop
jmp
sub
sub
jg
test
out
inc
push
and
mov
out
sub
pusha
and
outsl
xchg
pop
negl
ret
xchg
sar
mov
sarl
push
ficoms
lea
push
xchg
dec
rcll
push
adc
subb
rcl
xor
add
cmp
jecxz
hlt
push
addr16
enter
mov
xor
xchg
dec
cmp
dec
dec
movsl
scas
mov
push
leave
pop
jnp
pop
cmc
xchg
imul
into
mov
fsubrl
push
mov
jg
mov
xor
daa
sbb
push
notl
out
push
pop
in
cli
mull
or
mov
outsb
lahf
or
dec
cmp
cmovae
sahf
daa
mov
lahf
mov
and
push
fs
fsubrl
lea
enter
jmpw
cmpsb
jle
mov
push
inc
loop
mov
pop
xor
and
mov
push
xor
in
hlt
stos
adc
cmpsb
aad
daa
mov
enter
out
mov
mov
pop
push
dec
xor
test
jle
xchg
sbb
and
shlb
push
cld
cld
ret
fs
xchg
sbb
loopne
adc
insb
add
ljmp
jg
lahf
andb
dec
inc
clc
out
aaa
jae
add
jl
pop
lock
push
jne
fsubl
shll
outsb
mov
mov
adc
jbe
xor
sub
das
dec
in
ds
incb
mov
aad
andl
xchg
imul
xor
xlat
xor
and
repz
in
or
aaa
fwait
stc
movsl
push
jnp
out
or
jne
jb
mov
out
mov
and
out
inc
fisubrs
inc
sub
mov
nop
seta
mov
mov
lahf
and
je
mov
add
clc
loop
push
adc
into
int
push
jno
outsl
pop
lahf
mov
jp
ficomps
sub
insb
fdivl
xor
jo
pop
fmuls
add
jb
mov
rcrb
dec
xchg
shlb
test
addl
test
mov
lea
add
pop
adc
pop
pop
dec
daa
and
lahf
addl
mov
in
mov
int
sti
sbb
mov
sbb
test
jge
mov
fsts
shll
lea
cmp
mov
aas
inc
out
int
add
mov
add
xchg
xor
cmc
outsb
addr16
bound
das
cs
imul
cmpsb
imul
mov
mov
or
out
push
push
out
rdpmc
ret
outsb
std
mov
into
pop
push
lods
jb
mov
add
rcrb
divb
dec
xor
sbbb
or
out
iret
cmp
subb
aam
mov
push
fidivs
sub
add
es
adc
mov
popa
repnz
xchg
outsl
sarl
push
sahf
xchg
xchg
lcall
aas
sub
sub
add
mov
xor
in
mov
mov
hlt
aas
cmp
in
repz
scas
mov
rclb
adc
pop
cs
or
push
push
cwtl
cs
pop
jno
pop
movsb
cwtl
xorb
cmpl
dec
push
iret
mov
sub
rcll
mov
inc
push
add
fistpll
cmc
mov
jbe
pop
sub
sbb
cld
leave
inc
sbb
add
loop
out
out
xchg
and
out
mov
and
mov
jl
sbb
pop
ret
mov
fiaddl
andl
push
ret
pop
push
xor
xor
jecxz
pop
push
sub
xor
adc
mov
test
aam
push
sub
in
mov
iret
clc
insb
sub
je
decb
adc
mov
cs
decl
ret
jo
dec
lahf
sub
mov
xchg
mov
daa
shrl
jecxz
push
shll
jns
test
les
lahf
xor
std
sub
pop
call
mov
cld
orl
xchg
mov
pop
pop
pushf
dec
out
ljmp
rorb
push
mov
mov
and
and
mov
or
mov
add
in
mov
cltd
ljmp
aam
imul
out
cld
sub
cmp
mov
int3
pop
sub
andps
sbb
xchg
sbb
xchg
cmpsb
call
push
cld
ret
mov
mov
mov
lea
mov
jbe
pop
stc
add
mov
cmc
fistps
mov
inc
je
sahf
jno
cmp
inc
repnz
mov
aaa
int
insb
jns
test
mov
push
pop
test
cld
popf
inc
inc
imul
repz
xor
lcall
mov
movsb
jp
popf
lock
or
outsl
push
mov
add
outsb
add
fadd
xor
xchg
mov
mov
sub
lcall
push
mov
in
test
jns
xor
insl
dec
add
lods
fldl
or
xchg
push
xlat
add
scas
rclb
enter
inc
ss
daa
inc
or
fisubrl
and
push
mov
mov
mov
mov
xchg
sub
dec
adc
lds
loope
pushf
push
jmp
mov
int3
jbe
and
dec
cmp
push
mov
aas
ret
int
push
cli
std
add
sbb
xchg
outsl
dec
dec
inc
scas
jp
insb
mov
pushf
loopne
jae
sub
or
movsb
xchg
imul
push
push
int3
jp
aaa
fmuls
mov
movsl
adc
mov
xor
ret
push
xchg
ret
add
push
inc
ret
dec
dec
inc
xor
mov
inc
adc
jnp
xor
sub
popa
test
xchg
pop
sub
popf
jbe
dec
sbb
sbbl
test
lea
fcmovbe
pop
xchg
mov
pop
pop
or
rorb
cmpsl
aaa
and
and
in
push
in
sub
inc
test
mov
add
shlb
jg
rorb
push
in
mov
adc
dec
xor
lods
sub
dec
out
dec
pushf
sub
popa
pop
mov
sbb
je
shrl
mov
jmp
mov
mov
and
incl
jmp
push
push
cmp
int
mov
aaa
popf
xchg
sahf
jo
lahf
or
pop
dec
inc
out
jg
imul
xchg
lahf
test
rclb
add
adc
or
call
mov
xor
dec
in
mov
dec
js
jecxz
sbb
or
mov
mov
inc
jne
push
sub
or
or
test
mov
fwait
movl
add
lret
inc
or
sub
push
jbe
std
loopne
and
xorl
and
xchg
sbb
pusha
inc
mov
mov
and
mov
rolb
test
dec
cmp
cs
cld
cwtl
adc
aas
push
dec
push
xchg
jnp
jns
cmp
das
ret
stos
push
arpl
bound
pop
mov
shr
sbb
mov
sbb
lock
mov
xor
montmul
cmpsb
test
pop
leave
in
dec
pop
je
inc
out
jae
test
popf
in
xchg
clc
sar
mov
cmp
pop
push
dec
mov
repnz
xlat
xchg
jmp
inc
xlat
mov
add
xor
je
cwtl
jns
shlb
je
mov
xlat
imul
cmp
inc
sbb
mov
sbb
test
fwait
adc
pop
ds
push
pop
nop
cmp
dec
shrb
ljmp
call
xchg
jns
inc
pop
cmp
ds
pop
enter
daa
cmp
xor
jo
push
loopne
ljmp
add
leave
shlb
loope
lods
js
jge
test
test
jo
pop
dec
movsb
out
imul
jae
movsl
cmpsb
pop
cmp
sub
fldl
movsb
and
jmp
jl
sub
xchg
xor
rorb
and
cmp
lods
mov
aam
ds
repnz
add
mov
inc
fsubl
xchg
mov
pushf
outsb
mov
daa
pop
dec
jnp
lahf
bound
repz
add
inc
inc
jne
aam
movsl
xchg
repz
shll
adc
pop
sub
faddl
dec
pop
popf
jnp
sbb
mov
rcrb
aad
ret
fidivrl
in
lret
jge
in
push
push
sbb
shrl
repnz
adc
iret
movsl
and
out
notb
jg
push
mov
add
and
test
xchg
push
mov
loope
cmc
cs
int
cmp
int3
pop
jns
adc
adcb
lock
xchg
xor
negl
push
fbld
out
je
and
mov
xor
push
and
mov
pusha
xchg
mov
jg
mov
mov
add
adc
mov
popl
mov
jns
sbb
or
inc
cmp
cmp
and
sub
cmp
push
movd
push
dec
mov
adc
ret
movsb
xor
mov
aam
into
inc
jmp
repz
jg
in
lods
mov
mov
xchg
es
push
ja
test
mov
cld
push
mov
add
leave
imul
adc
push
ljmp
in
je
mov
inc
fcmovnb
dec
mov
pop
call
clc
stos
sub
stos
popf
sbb
aaa
pcmpgtb
xor
movsl
add
orl
aam
jmp
loop
sbb
pushf
pop
mov
in
mov
icebp
ret
xchg
inc
xor
mov
xchg
in
lods
pop
ret
and
fisubrs
pop
mov
outsb
popf
addr16
push
mov
out
addl
test
dec
adc
subl
adc
fwait
imulb
pop
mov
subl
pushf
mov
jno
aas
pop
out
pushf
push
stos
dec
inc
or
mov
cld
popa
add
hlt
scas
or
mov
dec
cmovbe
inc
xor
inc
idivl
pop
into
icebp
inc
cmc
sar
dec
icebp
inc
outsl
jne
out
dec
ret
std
add
cmp
loope
mov
push
pushf
dec
cs
jno
mov
imul
daa
xchg
xchg
mov
cmc
mov
lods
sbb
or
test
insb
repnz
insl
mov
cmp
rcll
in
mov
cld
xchg
or
xchg
insb
lds
cmpsb
jge
cli
xchg
shr
pop
stos
loop
jbe
pushf
lods
testl
cmpsl
inc
pushf
pop
push
add
add
stc
jb
mov
ss
jmp
jno
call
mov
jecxz
insb
fbstp
icebp
mov
jns
mov
cmpsb
pop
popf
movsl
xchg
ss
jns
inc
xchg
in
mov
xlat
shll
cs
test
mov
jp
ret
lds
push
cltd
pusha
arpl
adc
mov
dec
add
rol
cmc
insl
sahf
cmp
loopne
aad
and
stos
xchg
cli
pop
popf
push
adc
mov
sub
ja
mov
gs
xor
ss
dec
rcrl
movsl
jo
ja
jecxz
mov
adc
test
in
imul
push
test
sub
aas
aas
jne
ss
test
int
cmpsb
movsl
inc
or
mov
je
xor
jbe
lcall
cld
mov
cltd
out
xor
sbb
xchg
jmp
mov
pop
mov
inc
daa
mov
adc
jmp
mov
xchg
aam
dec
push
outsl
pop
shl
ja
pop
pushf
and
clc
int3
inc
cs
imul
test
les
mov
mov
das
mov
push
xchg
rcrl
mov
and
addr16
dec
fs
lahf
xor
decb
mov
push
outsl
jmp
xchg
sahf
je
inc
test
out
imul
sbb
movsb
decb
rol
xchg
sarb
sti
sarb
dec
cld
lcall
mov
or
add
cmc
test
test
lcall
lock
cli
aas
adc
aas
sub
in
ds
outsb
sbb
pop
mov
mov
inc
and
lods
popf
mov
data16
inc
scas
popf
adc
mov
or
jg
out
aad
jns
aam
pushw
pusha
jp
hlt
inc
push
int3
in
stc
cmp
mov
leave
lret
shrb
iret
clc
inc
inc
pushf
cmp
mov
pop
mov
pop
insb
jne
and
loop
sbb
jne
mov
ja
or
push
dec
mov
mov
orl
push
rclb
and
jg
pushl
cmp
div
jbe
ret
dec
jmp
cmp
or
add
and
insl
xor
rcrb
mov
icebp
mov
push
lea
jo
xchg
and
dec
fidivl
stc
xchg
call
lret
mov
fisttpll
outsl
fcoml
mulb
and
mov
jmp
adc
lcall
into
fmuls
repnz
gs
faddl
jl
xchg
jae
or
inc
scas
daa
xor
adc
adc
mov
or
cmp
notl
lcall
mov
sub
pop
aad
sbb
sub
std
xchg
or
hlt
cmp
dec
inc
sbb
mov
add
cmp
rorl
mov
inc
mov
icebp
cmp
xchg
jg
out
cmpsb
jecxz
xor
mov
push
into
lahf
scas
out
test
mov
popa
cmpsb
sub
xchg
mov
adc
cmpsl
aas
mov
and
adc
fstpl
pop
pop
dec
int
xchg
push
xchg
shll
fwait
dec
fmuls
pop
push
and
sbb
nop
test
scas
out
sub
mov
enter
add
jp
add
pop
dec
pop
push
flds
mov
push
cli
rcll
std
jo
fs
stos
lock
or
rcr
lods
out
daa
mov
adc
mov
add
pusha
add
aad
in
loop
pop
lret
pop
stos
cld
repz
pop
in
sbb
push
jle
paddw
and
test
push
pop
aad
lds
mov
inc
jmp
xchg
test
fnstcw
test
mov
adc
inc
xor
and
sbb
addr16
or
in
cld
repnz
ds
loop
dec
dec
adc
adc
adcb
jp
cld
and
scas
ja
jmp
insl
insb
jecxz
or
pop
xchg
lret
add
sbb
mov
push
mov
fstpl
jmp
sub
adc
mov
aad
in
leave
inc
rolb
pop
sub
out
arpl
add
or
mov
clc
push
sbb
and
faddl
inc
sub
or
dec
scas
xchg
into
cmp
push
mov
xchg
leave
in
ja
out
cmp
and
mov
xor
xchg
sub
aas
sbb
pop
mov
jecxz
orb
loopne
add
lods
adc
out
jmp
ss
push
push
lcall
insb
test
mov
cmc
sbb
enter
push
imul
jecxz
ja
mov
rolb
rcrl
dec
pop
imul
orb
cmp
insb
sti
das
into
pushf
mov
sbb
iret
shrb
fmulp
cwtl
jbe
push
inc
in
dec
adc
xor
push
int3
mov
sbbl
fsubs
xchg
lahf
fs
pop
js
dec
sti
xor
std
pusha
lock
pop
lret
push
leave
not
dec
es
add
and
subb
nop
sub
pop
jmp
leave
inc
sahf
mov
ss
sbb
xor
outsl
xor
jle
repz
xchg
lcall
jge
dec
popa
test
out
mov
mov
stc
pop
mov
enter
mov
cld
push
xchg
int3
add
nop
mov
pop
inc
and
adc
out
test
add
jbe
mov
insb
xchg
lods
xchg
arpl
xor
lods
lahf
or
cmp
mov
cs
ret
mov
push
mov
popa
add
cmp
fistl
pop
repz
lret
adc
lret
or
fbstp
sbb
fsubrs
pop
cwtl
in
sbb
push
xor
push
dec
mov
cwtl
lods
mov
rorl
dec
jae
adc
mov
cld
xchg
jmp
pop
cmp
push
pop
mov
sub
adc
rcrl
in
rol
cmc
sub
dec
cmp
sub
or
jg
icebp
sbb
pop
pop
or
jp
xchg
xor
pop
or
adc
or
repnz
outsb
ret
xchg
push
aad
xchg
lahf
xchg
cmp
pushl
jmp
fistpl
arpl
pop
das
out
loope
cli
push
jp
iret
repz
cmp
or
push
add
mov
lret
popa
enter
cli
add
sub
inc
pop
cmpsl
ds
mov
addb
popa
in
add
lods
push
sbbb
jp
cmp
imul
lcall
sub
es
stos
adc
xor
sarb
movsl
lea
cmc
mov
or
ret
or
or
cmpsl
jb
inc
mov
push
inc
xor
shlb
test
adc
andb
or
adc
or
mov
cmp
jae
outsl
mov
test
decl
ja
aaa
adc
pop
xchg
and
imul
stc
jbe
iret
jle
adc
and
shl
frstor
pop
aam
je
imull
sub
shr
aad
sub
popa
addb
leave
lock
lahf
mov
inc
mov
repz
lods
xchg
mov
in
inc
in
cmc
call
pusha
rolb
mov
push
shlb
jecxz
dec
adc
and
or
addr16
xchg
je
andl
bound
sbb
jecxz
pop
jns
cwtl
push
sbb
sub
ja
cmp
inc
leave
gs
jne
mov
arpl
push
or
shrl
sub
hlt
sbb
pusha
adc
lock
or
test
mov
fdivrl
mov
pop
mov
jnp,pt
adc
inc
mov
mov
pop
push
pop
call
mov
lds
xor
mov
out
nop
enter
gs
dec
inc
mov
jmp
jb
enter
insl
jmp
pop
outsl
pop
push
xor
cmc
adc
adc
dec
xor
scas
jo
xor
mov
pop
mov
jle
ret
icebp
out
mov
push
adc
rcr
jmp
or
mov
mov
add
or
mov
dec
lret
and
sbb
xchg
std
sub
lret
cwtl
add
repz
and
cmp
stc
inc
loopne
pop
inc
dec
xor
or
mov
mov
stc
jmp
stos
push
cwtl
test
sbb
xchg
xor
sarl
and
cmp
push
rcr
jle
mov
andl
pop
push
mov
psubb
shll
lret
cli
jne
dec
lahf
sub
push
bound
jne
imul
inc
xchg
and
or
mov
xor
jne
dec
bound
pop
pop
add
xlat
xchg
xor
mov
cli
rclb
dec
jne
adcb
cmp
dec
lahf
bound
adc
lods
in
pop
je
or
cmpsb
sub
cmc
bound
push
ds
outsb
rcl
cmp
stos
pop
iret
scas
out
clc
mov
push
pushf
xchg
movsb
pop
adc
or
nop
ffreep
ficompl
aas
jb
mov
testl
sbb
imul
stos
in
inc
pop
inc
jnp
stos
cwtl
cwtl
sti
rorb
scas
fs
jg
pop
push
rcrl
inc
mov
loope
fisttps
adc
arpl
pop
dec
into
pop
aam
pop
dec
cwtl
push
xor
or
pop
pop
imul
int
iret
push
inc
mov
pop
adc
mov
lds
loop
int
jl
sbb
sbb
and
mov
cmpsb
out
or
loop
inc
imul
push
dec
mov
or
sbb
cld
sub
xchg
push
mov
and
invd
cmc
std
push
arpl
ljmp
ljmp
pop
lds
or
addr16
arpl
stos
int
jb
insb
das
lret
fnsave
cwtl
mov
in
in
push
pop
cmp
push
ds
sbb
mov
outsl
pop
mov
jnp
jno
nop
pavgw
lcall
filds
int
and
add
or
mov
dec
imulb
jg
and
cmp
jg
int3
pop
xor
inc
push
or
add
lock
jb
orb
push
dec
xor
dec
aaa
leave
rorl
shlb
cltd
mov
sahf
mov
inc
push
dec
cmpsb
xor
cwtl
sbb
mov
scas
pop
and
jg
cli
mov
pop
scas
jb
lods
fistpl
jge
and
push
pop
inc
out
adc
add
or
jb
adc
pop
xchg
mov
popf
inc
sub
push
jne
cmp
leave
mov
jmp
dec
adc
jns
jmp
cmp
mov
xchg
and
bts
dec
pop
push
mov
jne
sbb
fs
scas
and
test
fmull
sbb
adc
mov
lret
adc
lds
mov
jno
mov
cmp
or
mov
call
or
call
inc
div
pusha
sbb
dec
test
outsl
loopne
in
or
movsb
push
rcrl
push
jns
mov
leavew
inc
flds
lods
gs
int3
lea
inc
or
gs
and
or
out
mov
sbb
or
in
xor
fidivrl
dec
test
in
inc
xor
icebp
test
gs
add
mov
mov
cltd
jp
fs
stc
sarl
andb
pop
std
mov
push
aam
xor
pop
or
ret
out
in
or
add
push
enter
movsl
add
shlb
shr
je
jnp
push
or
loop
scas
clc
jbe
daa
xchg
lock
test
addr16
adc
icebp
cs
inc
cli
lahf
mov
je
push
fnstenv
jl
mov
xchg
and
pop
pop
sbb
sbb
push
jb
test
out
add
pop
out
pop
aad
imulb
repnz
sahf
sbb
xchg
loope
fisubl
xchg
push
sbb
ftst
test
or
sbb
sbb
jge
addr16
divw
repz
lret
mov
cld
xor
xchg
xchg
mov
mov
mov
std
lock
mov
adc
mov
roll
xor
int3
in
add
jg
push
inc
cmpsb
mov
cmp
sbb
mov
mov
sub
pop
pusha
push
int3
addl
clc
add
cmpsb
jmp
xor
and
fsubrp
pop
jae
mov
mov
scas
xchg
icebp
push
movsb
addl
xchg
xor
ret
stc
adc
jb
xor
sbb
dec
xor
mov
sbb
mov
das
adcb
fstpt
push
xlat
cmp
cmp
inc
std
pop
fisttpll
notb
xor
cmp
into
sbb
lock
add
mov
lret
push
fisubs
mov
inc
xchg
sbbl
movsl
jmp
xchg
pushf
bswap
sti
sbb
scas
jge
push
push
hlt
outsl
jns
in
aas
pushl
add
fistl
jl
dec
bound
or
in
popf
flds
pop
xchg
imul
test
aaa
sqrtps
cli
xchg
gs
mov
sub
inc
in
dec
aaa
scas
std
pop
gs
fsubrs
aad
bound
xchg
jg
cmp
cmpsb
into
inc
xor
cmp
lock
jp
test
mov
lods
jecxz
inc
fldcw
ficompl
mov
mulb
rol
sub
adc
jbe
pop
xchg
add
push
push
pusha
fcompl
in
movsl
dec
xlat
cwtl
adc
and
mov
jo
jmp
mov
scas
popf
rcll
sbb
pop
sbb
lock
ja
cltd
ds
imul
enter
xchg
out
fwait
inc
addr16
sub
call
data16
mov
jge
incb
add
ror
enter
adc
rorl
push
pop
dec
out
dec
popf
mov
cld
loop
mov
mov
sbb
cmp
mov
sbbl
fisubl
inc
cmp
out
push
add
mov
pushf
dec
mov
adc
std
lret
add
or
jl
andb
add
jge
adc
pop
in
pop
push
jne
push
inc
lcall
pop
cmp
or
test
in
dec
sub
and
add
frstor
pop
push
in
add
sub
mov
pop
movsb
shrl
or
jns
enter
sbb
pop
out
ficoml
mov
icebp
arpl
jns
cli
add
popf
cltd
push
lods
call
mov
rolb
ja,pt
push
in
clc
dec
ror
dec
movsb
popf
enter
cmp
das
loopne
jge
mov
pop
aas
xor
mov
cmp
sbb
jns
or
pop
jmp
lods
ss
mov
push
jmp
loope
icebp
xor
and
negl
and
scas
jb
jns
daa
in
test
pop
mov
push
adc
mov
mov
inc
sbb
stos
jne
sahf
adc
in
daa
ror
xchg
add
rorb
cltd
inc
mov
mov
lahf
mov
jne
sub
js
scas
sbb
lods
adc
mull
dec
in
subb
lahf
mov
mov
fsubr
test
xor
clc
stos
push
testl
ds
jno
cmp
daa
addr16
mov
push
xchg
pop
inc
mov
inc
pop
ljmp
cltd
rolb
jnp
xchg
rcrl
imul
mov
iret
add
cmp
sub
lods
xchg
lods
xor
xor
popf
shrb
sbbb
add
jbe
popf
pop
out
movsl
inc
les
inc
or
jmp
dec
and
in
jbe
fwait
pusha
repnz
mov
add
test
and
xchg
xchg
inc
jg
imul
mov
pop
dec
sub
sbb
lods
jmp
add
out
in
adc
mov
add
or
push
dec
push
jecxz
mov
cmpsb
enter
or
fsubl
xchg
mov
mov
sbb
xchg
adc
pushf
stos
jecxz
and
sub
test
jns
xchg
leave
dec
add
push
adc
and
fs
stos
jne
outsl
gs
jne
cltd
mov
pop
sub
ljmp
xchg
mov
push
xor
jl
xor
jg
jnp
sbb
cmp
sub
push
aad
or
jnp
fcoml
adc
aad
dec
mov
std
lock
xchg
inc
sbb
sbb
pop
int3
fldl
inc
andl
jp
sbb
jae
movsl
adc
xchg
pushf
cwtl
sub
pop
fistpll
cwtl
xor
mov
and
mov
mov
or
xchg
xchg
sub
xchg
outsl
jl
push
jmp
cs
lods
mov
pop
jb
sbb
mov
inc
sub
push
notb
mov
or
imul
in
sub
sar
imul
xchg
push
sarl
aad
push
mov
jp
jo
push
push
inc
out
lahf
aam
push
add
ja
pusha
push
add
push
pop
clc
inc
jno
jnp
pushf
sti
sub
and
jo
fstpl
and
inc
sub
dec
jnp
mov
jnp
adc
call
enter
stc
repz
add
insl
scas
cmpsb
rcll
push
int3
sub
jno
sbb
std
add
push
dec
add
inc
push
push
jb
dec
push
cmp
mov
loope
hlt
xchg
outsl
mov
hlt
fsub
xor
mov
test
inc
movsb
push
dec
rorl
mov
inc
rorb
aam
hlt
cld
cltd
sahf
adc
fs
rorb
cmp
xor
pusha
out
clc
scas
imulb
shll
pusha
inc
dec
inc
push
sub
mov
xchg
repnz
lahf
or
mov
loopne
idivl
out
xor
mov
inc
or
sbb
sub
dec
ja
and
xor
es
test
cld
hlt
xchg
cmpsb
mov
cmp
push
movsb
jb
or
jl
add
idiv
pushf
or
push
sbb
push
movsb
add
mov
add
out
incl
dec
xor
mov
test
mov
in
inc
mov
repz
repnz
mov
bound
push
mov
jecxz
jecxz
aam
pop
mov
les
lock
xchg
cltd
int3
lcall
mov
je
cwtl
pop
push
out
mov
cmp
sahf
mov
inc
mov
sub
lds
scas
cld
test
lahf
int3
shrb
fmull
cwtl
push
xchg
adc
sub
jp
fadds
xlat
fstpl
pop
js
insl
ja
ljmp
mulb
push
fprem1
and
lahf
cmp
pcmpgtb
push
out
mov
and
dec
andl
xchg
pop
movsb
icebp
mov
push
js
mov
pop
in
jbe
jp
fwait
or
loopne
add
jg
cltd
adc
cltd
mov
xor
into
test
xchg
xchg
out
in
xchg
outsl
mov
push
cs
adc
enter
jnp
cmpsb
cltd
cld
adc
dec
xchg
xchg
jmp
test
dec
mov
inc
mov
inc
stc
out
arpl
call
inc
mov
lods
stos
mov
shl
das
ds
adc
das
mov
shlb
out
icebp
leave
cmc
int3
and
lea
or
ret
xor
cmp
inc
fisttpl
inc
xchg
dec
jae
jmp
inc
inc
sub
jne
jo
jae
popf
pop
mov
jg
mov
movsb
loopne
xchg
fs
call
pusha
or
in
stos
sbb
out
addb
addr16
aas
imul
imull
mov
movsl
mov
sarl
in
fwait
jno
fadds
test
dec
push
scas
fidivrl
lret
or
pushf
xlat
dec
dec
mov
pop
aad
into
cs
stos
aad
mov
in
cli
repnz
ds
dec
adc
xchg
rcll
ret
jp
mov
cmp
je
or
aas
ds
lcall
rcr
pusha
cli
outsb
ret
or
ljmp
xlat
add
inc
dec
pop
xchg
pushf
bswap
lock
mov
or
rorl
sbb
mov
jno
mov
xchg
cmpsb
xchg
aad
std
outsl
lret
lods
or
pop
imul
mul
stos
inc
dec
push
aas
or
popa
xchg
fdivrl
jmp
mov
xlat
into
cmp
ss
mov
clc
loop
fnstsw
pop
and
jno
jno
pop
jb
sub
ficompl
jg
mov
jl
cmpsb
scas
xchg
pop
mov
xchg
pop
xorb
lret
mov
add
pop
das
jb
add
pop
and
aam
pop
add
pop
sub
jl
xorl
lret
xor
jae
cmp
loop
cs
frstor
lcall
jae
xor
shll
in
stc
jae
jecxz
fisttpl
das
lods
adc
xorl
push
fistpl
push
stc
fld
jp
sub
lahf
mov
mov
push
and
add
in
mov
lea
call
adc
scas
int
ss
mov
dec
xchg
pop
add
mov
add
ret
addr16
push
hlt
iret
jns
aaa
inc
arpl
push
cmp
mov
add
sub
jmp
jns
jnp
fisubrl
and
sub
push
faddl
jl
or
and
ss
test
adcb
mov
cli
add
shlb
cmc
add
cmc
xchg
push
jb
adc
add
or
cmpsb
out
and
xchg
push
les
dec
adc
in
mov
xchg
and
cmp
nop
insl
sbb
sub
mov
lds
mov
push
mov
inc
orb
jecxz
fwait
out
or
pop
vorps
add
xchg
or
or
leave
jae
cld
lods
cmp
popf
lcall
adc
loope
aaa
hlt
outsl
push
lock
pop
in
mov
mov
adc
addr16
push
stc
adc
movsb
jae
loope
loopne
rcr
sub
addr16
sbb
rolb
or
mov
mov
rorb
movsb
push
std
fucomip
orb
mov
popf
sbb
dec
popl
push
clc
clc
stos
movsb
test
ret
xor
dec
cmp
outsb
xlat
adc
push
dec
lea
outsl
std
stos
mov
push
mov
add
dec
jns
iret
jle
inc
aam
cmp
jl
or
mov
sub
enter
adc
fldenv
stos
cmp
push
mov
jnp
cmp
ds
sbb
fs
pop
das
jmp
es
cmp
dec
dec
into
push
xchg
lea
fdiv
pop
cwtl
jns
cmp
add
ficoml
imul
sti
bound
jp
sub
push
fs
ret
frstor
pop
test
push
int3
cld
jb
inc
sti
mov
dec
push
dec
ret
mov
pop
aam
setae
fwait
cmp
mov
push
ja
int
pop
jnp
in
cwtl
mov
sbbl
xchg
iret
mov
xchg
jae
sbb
mov
lods
push
stos
insb
sbb
pop
movsb
test
push
adc
xchg
loope
add
xchg
sub
out
ljmp
js
inc
sub
cmp
cmp
fisubs
sbb
inc
jg
pushf
sahf
mov
shll
mov
xchg
adc
xchg
dec
test
fs
mov
push
xor
dec
jns
js
imul
popa
fxch
sub
mov
push
push
jg
mov
dec
mov
pusha
insb
mov
js
push
push
and
lods
jns
pusha
mov
sub
lret
mov
fildl
xchg
lock
ret
pop
pop
leave
inc
fidivrl
cmp
xchg
subb
mov
push
imul
sbb
lods
and
imul
sub
enter
mov
mov
jmp
jne
inc
out
adc
sbbl
inc
push
xchg
dec
ja
add
mov
push
int3
mov
adc
rcrl
or
std
mov
shll
pop
inc
add
mov
aas
xor
mov
add
cmpsb
mov
decl
jmp
sbb
push
xor
sbb
push
fwait
cmp
repnz
pop
gs
out
insb
or
test
xchg
or
repnz
push
stos
xor
xchg
ror
fistpl
mov
test
xchg
cmp
xchg
int3
pop
mov
aad
unpckhps
xchg
rcrb
loope
pop
ucomiss
in
push
push
pop
frstor
mov
lods
stos
mov
dec
jno
out
lret
inc
cmp
repnz
fcoml
sbb
repnz
xor
xchg
ficoml
add
arpl
cmpsb
imul
sbb
imul
sti
scas
jnp
popf
out
xchg
mov
sub
mov
sbb
fstps
fsubr
pop
sahf
jecxz
in
cmp
mov
sub
push
sub
pop
inc
ret
sbb
cmp
enter
sbb
pop
cld
rsqrtps
fucomi
sbb
pop
les
xlat
nop
lock
into
rclb
popa
movsl
imul
xor
call
xchg
pop
pop
enter
pop
push
push
js
push
pushf
stos
mov
shlb
fsts
mov
insw
sub
xchg
sub
pop
cmc
out
mov
in
test
and
mov
data16
jecxz
das
sahf
mov
push
push
adcl
testb
adc
rorl
jp
jmp
or
into
or
testb
sets
imul
outsl
adc
mov
cmp
xlat
stos
or
jl
imul
test
mov
add
notl
popa
pop
cmc
lcall
pop
cwtl
and
out
fisubrs
push
test
lock
cs
cmp
int3
add
les
pushf
in
ss
mov
rol
iret
mov
arpl
xor
shlb
mov
call
mov
mov
cmp
testl
cmp
cmp
scas
cmpsl
sbb
jmp
loope
jno
adc
incl
adc
in
addr16
sti
int
ja
rolb
mov
sbb
aad
jb
out
nop
int
mov
adc
or
imul
mov
lock
jbe
je
inc
scas
andl
es
cmp
xchg
mov
icebp
pushf
daa
into
divl
or
cmp
cmp
jne
cmp
incb
call
adc
loope
inc
push
out
test
ret
pop
ret
fldl
pop
aad
xchg
push
mov
pop
leave
shll
push
mov
ss
jg
adc
icebp
das
mov
adc
adc
cmp
and
int3
inc
sbb
push
nop
xchg
cmp
pop
testl
pop
dec
dec
push
xchg
cwtl
and
loopne
or
addr16
outsb
push
sub
aas
repz
popa
cmp
int3
inc
rclb
add
shr
and
dec
outsb
repz
mov
jns
dec
adc
stos
lahf
xchg
inc
les
cmp
ror
sub
sub
dec
bound
cmp
mov
mov
sbbl
and
mov
repz
daa
fcmovb
xorl
xor
xchg
jge
push
ljmp
xor
lret
in
cltd
int
test
pusha
shlb
dec
mov
jmp
mov
popl
aaa
int3
cmp
cwtl
sti
shll
cmp
rcrb
ds
lock
sub
pushfw
jbe
adc
aas
push
insl
or
fimull
test
inc
jle
pop
xor
dec
out
js
dec
mov
lret
aas
jnp
pop
xor
and
and
dec
cli
dec
push
push
xchg
add
push
icebp
cli
pop
outsw
cmc
into
jp
sub
aad
xchg
xor
lret
xchg
loop
mov
gs
cmc
mov
inc
out
push
or
jae
or
mov
lods
add
testl
cli
enter
mov
repnz
dec
dec
add
lds
adc
mov
mov
mov
les
add
dec
fbld
or
outsl
xor
mov
sbb
or
mov
sbb
in
and
cmp
data16
inc
adc
icebp
iret
addr16
adc
mov
int3
dec
stos
jo
xchg
loopne
popf
popf
push
cli
mov
cmpsb
rcrl
pop
inc
cmc
dec
shll
push
cmpsb
cmp
pop
mov
andb
and
push
lret
cli
dec
mov
in
mov
push
inc
and
out
arpl
cmpl
cltd
not
jnp
insl
mov
pushf
sub
sahf
push
aas
dec
pop
jno
mov
inc
inc
ja
scas
mov
nop
push
cli
push
lods
out
andl
insl
repnz
dec
mov
test
push
or
jbe
lds
loopne
cmc
ss
out
cmc
push
fistl
adc
sbb
aaa
mov
pop
sbb
test
fucomip
fidivs
rol
cmp
inc
jg
xor
imul
xorl
push
lea
add
push
aad
loope
pop
shlb
js
pop
and
mov
jbe
roll
shrb
inc
xchg
movsl
jecxz
test
test
in
jns
data16
int3
dec
rorb
adc
xlat
fdivrp
inc
sbb
shrl
sti
div
cmpsl
jb
add
or
jp
inc
push
lods
sti
mov
pcmpeqb
sbb
icebp
idivb
idivb
jb
cmc
aad
mov
shrl
xor
movsb
mov
std
aas
pop
pop
dec
mov
mov
fs
es
cld
mov
sub
jnp
mov
arpl
les
inc
fldt
or
fucom
and
imul
xorb
xchg
pusha
adc
push
cmpsb
mov
scas
js
fisttpl
pop
popf
pushf
flds
mov
or
test
lods
ss
add
loop
sbb
scas
xchg
lock
bound
paddb
and
cmp
or
into
add
pop
jno
inc
push
and
mov
mov
cli
addl
lock
sahf
out
in
jbe
stc
ficompl
cltd
sub
sub
ror
adc
test
mov
movups
lahf
shl
xchg
jecxz
dec
roll
loope
or
mov
sub
in
jo
xor
popf
or
fwait
sti
lods
push
inc
aaa
out
iret
push
aam
jmp
aas
inc
pusha
dec
push
ljmp
shl
icebp
jne
lock
out
outsb
xor
jmp
push
jle
dec
ret
stos
sbb
ss
pop
ss
push
mov
fists
ret
lcall
mov
xchg
bound
test
sub
lret
and
jb
cmpsb
aaa
pop
lock
xchg
mov
mov
test
in
pop
mov
cmc
in
push
sub
push
adc
adc
jbe
pop
sbb
gs
mov
pop
sub
cmove
js
data16
push
shll
inc
pop
adc
jne
sti
inc
in
push
push
sub
and
pop
inc
jmp
pop
adc
outsb
mov
mov
cli
jge
pop
lods
dec
adc
es
dec
int3
xchg
xchg
int
scas
nop
filds
aas
pop
sbb
pusha
andb
add
mov
lock
inc
push
dec
mov
mov
in
pop
fstpt
dec
dec
lahf
ret
add
push
push
lds
ficompl
jg
pop
mov
cmpsl
aam
adcb
int
or
movsb
pop
frstor
cs
xor
fidivl
mov
pop
rcrl
sarl
pop
push
push
cmpsb
adc
fildll
cld
mov
xchg
pop
and
sbb
mov
jbe
and
iret
jmp
sub
out
rcl
xchg
xchg
dec
call
add
lods
add
das
xchg
mov
adc
jne
jecxz
add
xchg
sbb
cmpb
outsl
sbb
fmuls
data16
std
ds
repz
dec
out
sbb
vmovss
jns
and
push
or
xor
push
aaa
outsb
mov
jno
das
sti
xor
or
adc
std
push
loop
hlt
rcl
dec
pop
add
or
jle
mov
leave
xor
lds
or
jo
or
insb
and
loop
sbb
popa
fldt
jl
insb
movsb
sbb
dec
repz
aam
iret
mov
idivb
lea
sbb
call
inc
push
cwtl
mov
imull
cli
scas
push
scas
stos
fcomps
adc
sbb
aam
subl
test
int3
ret
fwait
mov
jb
fsubl
add
fmuls
pop
out
movsb
jg
in
aam
push
ds
pop
pop
pop
jbe
jno
clc
cltd
movsb
test
inc
push
les
sti
cwtl
icebp
ja
sbb
lods
lea
fadds
add
and
out
das
cmp
mov
fnstenv
xor
jns
enter
fiaddl
inc
mov
jo
xchg
out
jns
repnz
sbb
mov
fsubrs
loop
pop
sti
ss
movsl
inc
adc
mov
mov
aad
ja
cld
jmp
inc
ja
xchg
cli
xor
mov
popf
pop
movb
aad
sub
push
lcall
dec
jns
cmp
push
sahf
outsb
add
mov
stc
bound
xor
push
dec
test
add
enter
adc
int
jge
pop
ja
push
xchg
rcr
add
pop
loopne
std
jb
out
mov
adc
pminub
pop
insl
int3
dec
jmp
cmpsb
mov
mov
sti
pop
xor
arpl
push
ss
pop
cmc
insb
mov
push
hlt
ss
in
lret
lds
popa
test
std
scas
push
push
pop
jbe
scas
movsb
pop
ljmp
add
mov
mov
cmp
mov
mov
nop
fidivs
addr16
das
jns
mov
lds
ficomps
pop
enter
or
out
lods
sahf
and
in
sti
xchg
inc
jle
adc
in
ja
xchg
call
cmp
out
jg
out
enter
adc
and
pop
sub
sbb
mov
mov
xchg
mov
push
sub
mov
mov
inc
insb
or
popa
pop
int3
icebp
hlt
mov
mov
int3
xchg
test
loope
pop
loope
nop
iret
jo
scas
adc
sar
incl
push
add
out
gs
dec
in
cmp
jnp
xchg
push
cmp
movsl
or
insb
mov
adc
in
sub
cmp
ljmp
out
in
pop
and
pop
notb
jge
sbb
mov
push
mov
pusha
mov
adc
jmp
push
pop
dec
aam
mov
repz
andl
and
add
xchg
ret
movsl
test
push
or
fcomps
popa
addl
sbb
mov
jge
fwait
cmp
sub
push
daa
je
mov
fmuls
xchg
jp
test
repnz
orb
sbb
dec
adc
movsb
outsb
or
mov
push
or
mov
and
cmpsl
jmp
sti
jp
insb
sbbb
cs
mov
mov
pusha
int
lock
lock
jo
mov
pop
movsl
or
pop
cld
pop
adc
daa
sub
mov
xlat
test
fistpl
repz
cmp
cmpsl
push
aam
mov
shr
add
je,pt
mov
out
sbbl
mov
stos
arpl
or
push
stc
and
cmp
push
out
push
mov
cwtl
rol
and
insl
addr16
mov
xchg
sbb
repz
dec
fstl
popa
lcall
push
je
adc
fcomi
fstp
xchg
mov
lds
jb
cli
das
insl
push
jnp
push
mov
adc
ret
fwait
dec
mov
jno
push
push
adc
push
xchg
mov
sbb
ret
adc
or
cmc
aam
shr
mov
les
rcll
loopne
lret
push
enter
mov
sarb
dec
mov
ret
arpl
testl
js
mov
push
jmp
pop
add
test
imul
add
mov
lods
cli
dec
repz
pop
mov
ss
nop
sub
inc
push
mov
push
mov
mov
jnp
testl
shlb
vpaddsb
lret
adc
bound
stos
je
lea
xor
decb
fmull
daa
outsl
and
lods
sub
das
into
push
and
cmc
or
cmp
insl
js
mov
or
fistl
ss
sti
lgs
push
adc
mov
cld
sti
ja
lds
cmpsb
xchg
hlt
pop
dec
fisubl
push
imul
mov
inc
jg
shll
xor
out
jp
xor
xchg
ret
xchg
rclb
adc
and
add
pop
sub
sub
jmp
cmp
out
mov
sbb
js
mov
push
xor
cmpsl
xor
push
lds
leave
dec
lret
pop
cmp
push
cmp
cmpl
lock
lcall
sbb
fmulp
mov
push
ja
sbb
iret
pop
push
aas
xor
lea
int3
mov
dec
mov
and
and
test
mov
cmp
movsb
cmpsb
add
in
enter
mov
dec
dec
fcmovne
cmp
mov
xchg
shlb
jnp
stc
pusha
pop
imull
bound
sbb
dec
mov
cmpsl
jb
lret
and
popa
cwtl
jnp
push
ffreep
imul
test
int
inc
sti
rsm
inc
cmc
sbb
inc
in
and
adc
dec
jmp
jl
inc
pop
test
or
ficomps
jbe
fbld
lea
inc
or
lahf
sub
sbb
sub
fcomp
insl
mov
adc
es
push
mov
loop
lahf
arpl
mov
push
fcoms
push
scas
das
adc
int3
and
mov
stc
pop
xchg
lahf
das
outsl
jg
mov
sti
push
test
fwait
adc
adc
jp
dec
add
mov
xor
xchg
adc
fxch
int
nop
jge
bound
ds
call
repnz
xchg
cmp
mov
mov
loope
imul
mov
mov
mov
neg
sti
out
std
sbb
dec
pop
jbe
ja
out
mov
and
sbb
pop
fwait
in
subb
enter
stos
xchg
test
and
cmp
out
xchg
sub
flds
cmpl
pop
pop
insl
into
insl
push
pop
and
mov
sti
imul
jl
mov
loop
loop
gs
dec
js
dec
addl
pusha
repnz
jno
fnstenv
in
pop
lods
add
cmpb
jecxz
in
cmp
lret
push
imul
push
test
sub
loopne
xchg
cmc
and
and
pushl
xchg
js
notl
jg
xchg
call
xchg
stc
cmp
jmp
xor
orb
jns
repz
mov
outsb
test
xchg
pop
mov
stc
popa
adc
mov
cli
sbb
out
sub
jl
ljmp
sbb
mov
addr16
sahf
and
or
scas
shl
aas
ret
jo
mov
mov
in
mov
dec
add
xchg
mov
lret
push
push
sub
nop
outsb
xorl
aas
jecxz
repz
sub
or
adc
xchg
scas
cmp
sub
sbb
xor
or
pusha
cmp
clc
js
es
push
jne
lret
enter
decb
int3
lods
popf
loope
nop
sub
test
mov
int
ret
cmp
test
sahf
and
xchg
lea
scas
jne
pusha
out
jmp
lods
pop
test
sarl
inc
push
cmp
rcr
or
pushl
cmp
aaa
fdivl
movsl
jmp
rorb
insb
mul
mov
xchg
jae
adc
inc
fs
aaa
mov
insb
cvttps2pi
in
mov
pop
add
lret
arpl
lea
push
pop
mov
shll
movl
shrb
in
sub
xchg
pusha
loopne
leave
loopne
adc
movsl
movsl
mov
in
xchg
or
data16
repnz
inc
shrl
xlat
mov
outsb
mov
dec
mov
mov
dec
sarl
loope
mov
mov
jmp
test
inc
daa
sahf
add
gs
loopne
push
mov
xlat
mov
mov
das
adc
or
lods
cmp
aaa
sti
pop
in
stc
and
dec
push
lods
and
xchg
push
rolb
test
mov
jae
xchg
loop
sti
fsub
test
fwait
xchg
mov
pop
xor
js
cmp
sar
movsl
xchg
or
lret
imul
jns
dec
rcll
lcall
add
lar
neg
pop
mov
icebp
popa
dec
push
stos
cmp
out
ja
fcoms
jns
cmpsb
pop
popf
ret
in
mov
mov
push
push
xor
sub
jns
imul
arpl
js
repnz
out
dec
mov
and
addr16
mov
xchg
repnz
test
pushf
lods
repnz
aam
cli
pop
ljmp
rcr
mull
jg
mov
test
cli
aam
or
lods
dec
fisttps
hlt
scas
test
mov
dec
punpckldq
pop
mov
ljmp
sub
cwtl
in
cmpsb
jnp
fdivp
callw
push
mov
lcall
xchg
xchg
bound
je
xor
adc
lea
xchg
fldt
mov
in
add
cmc
jbe
lock
jb
and
shrb
int3
addl
cwtl
and
jne
xchg
mov
lret
cmpsb
in
sbb
inc
inc
outsl
fsubrs
xchg
xchg
jecxz
ds
adc
push
sbb
mov
imul
or
subb
lahf
fnsave
fnsave
aam
jle
addl
lcall
inc
xor
and
and
ss
cmp
test
hlt
inc
in
pop
mov
xor
push
movsl
inc
xchg
mov
or
mov
push
dec
xor
mov
cmp
int
pusha
sub
adc
les
xchg
je
loopne
sub
sbb
xchg
mov
or
mov
and
pop
clc
imul
adc
fxch
js
adc
loopne
lcall
mov
scas
std
mov
xor
push
aaa
pop
addr16
add
loop
ds
in
int3
xchg
mov
add
lea
dec
stc
test
mov
popa
xchg
cmpl
sub
push
xchg
out
push
sub
or
jge
outsl
pop
mov
repnz
pop
aas
std
cmp
in
pop
test
ja
bound
fbld
xor
and
and
pusha
push
outsb
pusha
mov
xor
jge
rcr
mov
inc
and
call
jo
jne
cmp
fcoml
loop
push
into
ljmp
or
mov
aad
mov
mov
jno
pop
cmpsl
lods
rcll
jg
fsubs
lahf
inc
push
cwtl
outsb
sahf
mov
bswap
stos
adc
sbb
mov
mov
fwait
xchg
jb
mov
add
sahf
cmp
das
movsl
mov
inc
or
add
hlt
jb
cmpsl
cmp
inc
sahf
sbb
lea
pop
mov
std
dec
lock
jns
mov
aam
cmp
lcall
xchg
mov
roll
or
pop
mov
or
fiadds
push
or
mov
adc
xchg
jecxz
push
out
jne
dec
notb
and
les
inc
mov
cli
mov
xor
push
mov
insl
inc
cltd
pop
inc
fs
dec
popa
je
mov
lods
lds
sub
pop
call
xor
xor
movsb
fiadds
in
push
push
mov
xchg
cmp
xchg
or
adc
mov
cmp
ret
cmp
or
mov
out
mov
mov
mov
pop
aam
push
iret
rolb
or
sbb
ret
xor
scas
stc
imul
notw
xchg
sub
pop
jo
ret
jno
pop
cltd
mov
or
and
cmpsb
ja
jbe
shrl
mov
mov
inc
mov
leave
xchg
int
sub
out
lods
mov
xchg
push
push
cmc
outsl
cs
pop
jae
mov
cmp
repz
or
lret
or
sbb
or
ljmp
fs
and
aam
cmp
fucomi
lcall
lds
or
pop
clc
jecxz
test
cmpl
std
shlb
mov
popa
lcall
ror
cli
or
mov
pop
pop
mov
adc
insb
or
orl
mov
push
inc
adc
push
mov
add
mov
mov
sti
loope
adc
aas
aas
movlps
sbb
sbb
add
out
sbb
stc
mov
fldt
push
test
cmp
mov
and
mov
das
pop
sub
mov
cmp
loope
lods
sbb
loopne
xchg
push
xchg
sub
ja
inc
jb
cmc
gs
mov
ret
fs
aam
sti
imul
fs
jp
inc
mov
cmc
sub
xchg
add
in
in
insl
mov
adc
insl
adc
enter
cli
fwait
movsb
or
mov
xchg
push
sbb
cld
xchg
ret
and
xchg
adc
push
fs
pop
repnz
mov
jne
jne
das
in
pop
mov
push
dec
and
jb
ret
push
or
mov
movsl
mov
push
add
sub
xchg
xorl
stos
inc
xchg
stos
sbb
daa
xor
insb
das
pop
repz
pop
jp
inc
xchg
sbb
leave
ficoms
js
sahf
leave
shl
pop
or
dec
push
xchg
sahf
aad
subb
inc
imul
adc
rcll
dec
xchg
shrl
or
mov
mov
leave
test
push
lods
call
fldl
fcmove
xor
mov
repz
cmp
jp
or
pop
lock
mov
ret
cwtl
ds
mov
pop
imul
aas
xor
ds
xchg
xor
popf
mov
loope
pushf
mov
andb
loop
test
mov
pop
inc
cmp
lret
inc
pop
and
clc
popa
push
or
inc
cmp
rep
dec
movsl
stos
lahf
repz
lock
xchg
sub
mov
jge
enter
add
rcrb
xchg
sbbl
inc
inc
fmul
sar
push
adc
outsb
mov
add
dec
ja
dec
sbb
and
adc
scas
fucomip
fmull
jb
sbb
xor
jl
jmp
cmovnp
inc
mov
dec
outsb
movsb
adc
mov
inc
xchg
push
lcall
mov
mov
fs
push
lcall
loopne
mov
pop
xchg
or
cmp
and
and
arpl
insb
jno
pop
xchg
xchg
nop
pop
bound
and
dec
imulb
xorb
scas
xchg
cmp
sbb
mov
pop
pop
test
or
daa
loop
scas
pop
mov
pop
cli
jg
insl
popa
pop
push
inc
mov
imul
lcall
pushf
sub
and
inc
jno
add
xor
test
fstpt
jns
inc
movsl
insl
lret
or
mov
add
xor
std
ja
dec
or
or
xchg
ja
ss
mov
push
push
jns
test
xchg
dec
stos
mov
adc
adc
cmp
stos
xlat
filds
add
aas
bound
std
add
jge
jg
mov
call
dec
les
aad
or
shl
shlb
out
loopne
sub
inc
pushf
scas
daa
xchg
add
pop
ret
ja
sub
inc
mov
pop
lcall
icebp
sbb
movsb
imul
sbb
in
rcrb
adc
pusha
scas
jo
cmp
add
movsb
push
flds
xor
push
ja
ret
es
fildl
dec
push
out
sbb
dec
fiaddl
loope
jmp
jno
add
add
popa
cmpsl
push
aad
or
scas
adc
jp
xor
mov
das
bound
call
jb
cld
cmp
fdivrs
popf
cmp
testl
pop
xlat
adc
mov
out
imul
xor
jge
lods
sub
jns
out
insb
imul
mov
data16
inc
out
dec
shlb
push
xor
jnp
xlat
add
test
fmul
lret
das
mov
adc
xchg
movsl
cwtl
mov
cmp
sahf
js
jno
adc
scas
subl
inc
fsubrs
sub
xor
orl
shlb
shlb
std
mov
cmpl
in
loop
xor
jnp
jecxz
pop
mov
into
push
js
xchg
jbe
repz
in
movhps
cmc
adc
rcrl
popf
mov
sbb
pusha
push
mov
jns
jmp
shll
sub
loopne
scas
sbb
mov
fdivr
ds
add
and
jo
pop
fsubs
adc
outsl
fdivs
xchg
pop
imul
out
cmpsb
sbb
lea
mov
lcall
cli
cld
test
jnp
adc
inc
jnp
cmp
leave
nop
lret
je
mov
adc
cli
fcmovu
adc
jb
loope
pop
dec
ret
sar
scas
add
int
xor
pop
push
jmp
aas
jb
sti
pop
dec
add
push
das
pop
xchg
sbb
mov
fs
repz
xchg
push
sbb
or
loop
mov
adcb
inc
add
pop
sub
sub
xchg
xor
jle
lds
and
rcll
push
dec
out
or
leave
mov
lea
stc
adcb
rorb
mov
mov
add
add
push
push
push
pop
adc
fisttps
mov
int3
aad
pop
mov
stos
jno
mov
test
or
xor
int3
add
adc
dec
jae
mov
dec
ja
lcall
vmsave
cmc
inc
sub
negl
out
xor
test
dec
daa
jmp
jl
test
mov
and
and
je
ja
stos
ss
repz
jb
pusha
imul
das
or
test
sub
add
subl
xchg
aaa
jecxz
popa
add
divl
rorl
notrack
rclb
dec
insb
call
and
fldcw
jp
sahf
bound
mov
jecxz
and
pop
pop
cmp
rclb
cmp
mov
fldl
test
jo
mov
inc
or
adc
push
jl
jle
out
mov
push
lods
adc
xchg
fiaddl
gs
push
stos
scas
out
cmp
insl
loopne
ja
jno
sahf
aaa
or
mulb
pop
sub
pop
jg
cwtl
das
mov
movsb
mov
lret
out
dec
jno
lea
sbb
add
sti
cmp
push
mov
cmpsb
scas
flds
je
outsl
dec
and
xchg
addr16
mov
out
mov
mov
test
cmc
jmp
cmc
fstpl
stos
pop
test
mov
mov
mov
jb
adc
ficoms
das
or
adc
fmull
cmp
cli
mov
push
push
das
popa
lahf
shl
out
push
mov
or
les
popf
dec
mov
bound
cmp
push
lret
ds
imul
cmpsb
jp
push
cwtl
or
stc
mov
pushf
ss
popf
mov
jns
rclb
cmp
sub
jbe
and
je
leave
test
push
dec
inc
test
fildl
pushf
xchg
scas
dec
rcrl
or
sbb
nop
xchg
scas
mov
repz
lret
mov
push
jmp
sbb
shll
pushf
test
stc
pop
mov
xchg
push
push
push
out
or
lods
add
movsb
aam
je
sbb
scas
adc
stos
cs
pop
cmpsb
es
enter
ja
dec
mov
jns
imul
dec
push
push
das
lret
scas
xor
add
mov
mov
cltd
dec
lret
repz
sahf
mov
adc
sbb
rcrl
cmp
fnstsw
mov
pop
in
popa
outsb
psllw
add
dec
push
in
pop
mov
adc
mov
pop
mov
push
mov
lock
xor
repz
fstps
hlt
mov
mov
shlb
or
xchg
jle
fmull
xor
fiaddl
fisubrs
and
jne
mov
lret
ljmp
shll
out
push
pop
lret
cli
ljmp
fisttpll
lods
or
adc
mov
xchg
shr
push
adc
fldcw
pop
jmp
popf
or
enter
cmp
push
jne
xor
xchg
mov
bnd
push
xor
and
lahf
inc
sbb
xor
mov
sbb
dec
mov
jbe
mov
push
cmp
mov
jno
push
jb
xchg
lahf
jae
movsb
insl
sub
daa
inc
cld
aaa
mov
xchg
scas
data16
jno
dec
repnz
fldcw
mov
enter
out
nop
call
xchg
gs
clc
xor
jge
lret
int
jbe
add
mov
insl
pushf
sub
in
push
fildll
push
and
xor
enter
bound
jp
mov
add
or
jae
inc
xchg
test
jns
je
or
cmpsl
bound
cli
or
dec
or
loope
sub
cmp
jbe
mov
cmp
orl
inc
dec
sbb
test
xor
in
shll
mov
and
scas
and
hlt
xor
popa
loope
sbb
push
push
shlb
push
mov
dec
cmpsb
cltd
clc
cmp
cmpsb
dec
push
daa
setp
add
cmpsl
inc
loope
nop
sahf
mov
inc
pop
scas
cmp
sar
cmp
jnp
sbb
sbb
rcr
push
sti
stos
fldt
dec
in
loop
shrb
pop
inc
mov
pop
adc
loop
jle
ds
mov
addr16
xchg
jnp
dec
mov
movsl
stc
xchg
jae
loop
jne
mov
mov
cmc
pop
scas
push
fcompl
mov
inc
sbb
adcl
and
sub
repnz
rcrl
enter
and
shrb
mov
jge
pop
pushf
lods
inc
aam
roll
xchg
rorl
dec
and
cltd
dec
testb
mov
sbb
cmp
mov
loop
divb
push
cmp
or
push
mov
fsts
enter
ret
add
scas
pop
push
das
inc
xor
xor
push
stc
xchg
adc
iret
pop
scas
in
loop
das
push
push
xor
push
xchg
push
cld
inc
lea
mov
inc
incb
das
fnsave
adcb
notl
add
pop
outsl
call
das
in
and
test
sub
sbb
add
enter
hlt
dec
cli
aad
dec
fisubl
pushf
push
push
scas
and
dec
mov
jns
pop
push
je
jp
mov
out
jo
or
out
fisubs
idiv
rcrl
icebp
nop
in
sti
inc
sbb
mov
xchg
out
fwait
dec
test
in
xor
push
pop
sahf
xor
out
and
push
std
shrb
xchg
sub
mov
cs
movsl
scas
sbb
andl
fildll
and
mov
inc
out
nop
cmp
cltd
push
in
cld
in
jae
push
sbb
not
sarl
jmp
xchg
repnz
fwait
push
ret
loopne
pop
pop
add
fistpl
out
push
cld
xchg
in
out
and
cmpsl
push
push
ss
in
ljmp
jno
int
out
push
sbb
cwtl
sbb
pop
insb
and
jne
stc
gs
add
adc
loopne
shll
sbb
xor
jle
inc
jmp
push
jge
ss
fld
mov
mov
jg
decb
dec
cltd
pop
inc
movsw
mov
rcrb
psllw
mov
jg
scas
mov
lock
xor
or
sbb
xchg
dec
popf
lods
push
xorb
sub
adc
insb
ss
mov
push
push
unpckhps
adc
imul
fisttpll
sub
stc
enter
cmc
pop
mov
outsb
sti
scas
push
pop
imul
jb
stos
sahf
sub
sub
int
pushf
fisubl
cmp
mov
jbe
push
in
mov
cld
and
xchg
in
xchg
xchg
dec
flds
loope
ja
fsubrs
cmp
out
push
fcompl
xchg
fdivs
pop
clc
hlt
adc
xor
jne
jp
int
xor
mov
mov
xchg
sbb
xor
inc
sub
inc
fs
aaa
imul
lea
test
or
adc
mov
or
mov
xor
pop
dec
cmp
xchg
jae
sub
jmp
in
sbbl
out
ret
popf
xor
dec
jg
call
fwait
xchg
jmp
idivb
gs
mov
loop
add
sub
jl
mov
loop
ret
xchg
addl
iret
jmp
mov
mov
arpl
sbb
hlt
faddl
jg
repz
xchg
lret
fcomps
sub
sub
push
add
idivb
cli
ror
inc
mov
or
cmp
add
and
mov
gs
xchg
mov
outsl
das
cmp
int
das
mov
add
stc
pop
xor
mov
outsb
test
add
lret
test
push
or
mov
xchg
outsb
xor
and
sub
sub
mov
jo
mov
jl
repnz
cs
cmpsl
mov
andl
sbb
lods
les
dec
push
cmpsb
mov
jae
rorl
into
imul
icebp
sbbl
mov
sbb
into
xchg
fsub
jb
sub
and
xor
lcall
cwtl
mov
xchg
pop
sbb
leave
inc
cltd
add
pop
push
or
leave
sub
mov
xchg
or
xchg
push
dec
rcll
sbb
loope
gs
out
imul
test
mov
fisttps
push
push
jo
cltd
pop
movsl
clc
lea
test
repnz
ds
insb
add
pop
out
push
movsb
pushf
push
std
adc
inc
enter
loope
jae
imul
inc
pop
mov
lea
jp
test
jl
scas
rorl
arpl
cmpsl
push
loope
sub
push
aad
popa
jp
cmc
shlb
int3
push
sti
xor
les
outsl
int
imul
mov
mov
popa
jecxz
mov
fdivl
sbb
xor
sub
xchg
and
dec
sbb
ds
dec
in
xor
arpl
mov
into
mov
jp
cmp
sbb
ret
xor
gs
cli
adcl
das
xchg
cmp
xchg
cmp
add
ljmp
repnz
cltd
jo
ds
popf
mov
dec
jbe
loope
jp
dec
pop
fwait
push
mov
pop
and
sub
loope
xchg
popa
test
out
lock
scas
jl
fdivl
inc
add
mov
jge
jo
out
js
jp
test
call
pop
xchg
pop
ja
mov
ds
data16
adc
cmc
mov
xchg
loopne
mov
test
add
xchg
xchg
mov
das
ljmp
jmp
sbb
mov
inc
and
int
xor
orb
push
add
cmpsl
call
dec
cmpsl
aaa
xlat
inc
pop
pop
aam
pop
xor
aam
bound
sub
aam
repnz
pop
bound
dec
scas
xor
jp
lds
jnp
cmpb
inc
inc
sub
gs
mov
aaa
clc
xchg
sbb
cmp
test
mov
aam
cmpsb
rcl
fdivrs
push
jne
lahf
cltd
mov
aad
mov
push
ss
in
add
es
fwait
dec
lods
flds
cmpl
dec
out
xor
add
push
dec
push
push
ret
sub
push
jb
cmp
push
mov
or
mov
cmp
xor
add
loopne
mov
sbb
cmc
bound
sub
mov
mov
popf
add
cltd
test
jbe
sub
dec
xor
push
mov
sbb
call
repnz
jbe
test
mov
mov
xchg
push
cmp
add
in
popa
jmp
stos
sbb
jae
mov
sahf
jp
lods
insl
std
movsb
add
inc
add
imul
test
pop
shll
jmp
jge
jle
push
jg
cmp
mov
popf
pop
insb
mov
in
cmc
adc
sbb
out
lds
dec
adc
loopne
fwait
ljmp
popa
cmpsb
fs
in
sub
adc
xchg
jnp
and
cmp
push
push
inc
mov
jbe
xchg
lret
ljmp
jne
adcb
int
and
scas
repnz
stos
aas
or
dec
adc
lds
jmp
pop
inc
clc
jbe
xor
cmp
xor
enter
mov
mov
push
out
ret
es
pop
add
fprem
cmpsl
push
push
inc
pop
hlt
jns
iret
jl
or
mov
pop
out
xchg
pop
mov
out
lds
mov
cmc
gs
clc
repz
aaa
ljmp
mov
movsb
scas
jl
xor
out
shl
imul
or
loope
lret
push
pop
mov
testb
and
aad
frstor
pop
fs
or
popf
mov
sti
push
jbe
das
sahf
add
shl
cmp
test
repz
loope
jle
out
and
push
jns
adc
pop
mov
lea
pop
mov
ss
push
cmp
repnz
lea
push
mov
nop
and
xchg
fldt
hlt
and
testb
xchg
cmp
dec
dec
xchg
loop
add
mov
lea
jne
cmpsl
cmp
inc
lret
test
repnz
jns
movsl
lods
mov
ds
outsb
popa
pop
repnz
add
out
es
mov
cmpsl
ret
xor
rol
mov
xor
or
mov
shlb
ljmp
insb
jecxz
rcll
dec
push
pop
adc
sti
or
loope
mov
iret
stc
lcall
sub
loopne
repz
mov
test
stos
xor
int
test
gs
dec
cmc
mov
dec
sbb
xacquire
sbb
lret
scas
sub
shrl
sbb
test
insl
adc
mov
lahf
ss
sub
dec
mov
jp
xchg
lods
jnp
xor
xor
cld
or
testb
jg
inc
insb
and
scas
add
mov
icebp
jae
ror
mov
mov
mov
push
lahf
movsl
push
xchg
pushf
and
inc
mov
mov
mov
xchg
out
stos
mov
loopne
jg
ja
xor
fstl
scas
cmp
xor
jmp
mov
in
repnz
cld
fsubp
loopne
lret
push
pop
inc
xchg
inc
lods
pop
ljmp
dec
inc
inc
adc
sub
dec
push
pop
sbb
dec
mov
aam
stc
rcrb
sbb
lds
mov
add
in
test
repnz
mov
pop
test
das
push
js
test
lock
mov
pushf
iret
int
repnz
aas
out
push
aas
pop
cmp
jecxz
push
sti
cmp
and
pop
xor
mov
loopne
andl
xchg
pop
shrb
jb
pop
push
call
push
leave
aaa
roll
pop
pop
mov
rcr
jge
out
fwait
sti
std
sbb
aad
adc
notb
stc
repnz
sbb
imul
ss
in
adc
clc
arpl
js
sbbb
pop
sub
jg
sub
in
xchg
add
fadd
lret
mov
je
push
inc
pop
cs
mov
push
pop
xor
mov
lea
in
popa
icebp
jnp
movsl
pusha
popf
js
cmp
or
repnz
icebp
add
imul
mov
lock
and
push
xchg
xor
sbb
lahf
faddl
push
mov
pop
js
xchg
sahf
popf
mov
jmp
jp
xor
aas
pop
fs
sti
and
icebp
sub
jns
rorl
jbe
shrl
sahf
push
xchg
mov
jns
xchg
ljmp
cmpsb
sub
or
jecxz
movsl
cmp
push
pop
xor
adc
jo
mov
mov
jbe
pop
cli
lcall
lcall
dec
add
cltd
jle
and
push
pop
sbb
ret
mov
inc
sbb
out
sbb
in
inc
in
ja
xor
pop
pop
mov
push
dec
and
leave
test
sbb
mov
pop
cmpsb
into
sarl
fadd
les
pop
jmp
pop
or
jmp
sub
add
jl
add
push
xor
dec
cwtl
inc
sbb
mov
test
bound
sbb
dec
xchg
orl
rol
addr16
fcmovu
xorl
in
hlt
pop
cmp
jo
je
xor
call
lock
aam
fxch
push
sub
or
inc
lcall
or
pop
lods
and
inc
fstps
pop
test
mov
in
iret
arpl
int
push
ds
or
icebp
shll
shl
cmpsl
imul
xchg
jae
outsl
sub
xchg
push
inc
inc
dec
pop
mov
mulb
sti
lret
pop
add
fwait
cmp
pop
aad
jg
pop
mov
jo
fbstp
lods
pusha
sbb
inc
adc
adc
movsb
sub
push
pop
jg
das
pop
lock
add
shrb
jle
pop
mov
and
jecxz
xchg
ja
jnp
mov
push
mov
jb
scas
mov
xchg
std
inc
add
mov
and
je
xor
mov
sbb
cmc
jns
fmull
mov
lahf
push
cmc
or
and
xchg
jmp
push
pop
insl
lret
xor
in
push
sbb
rcl
jp
mov
xchg
lcall
fimull
shrb
test
xchg
push
les
rclb
xor
pop
sti
mov
inc
sub
sbb
or
push
dec
and
stos
cwtl
loop
push
mov
and
in
and
cltd
outsb
pop
xchg
std
in
aam
push
cs
pop
mov
push
or
xor
sub
mov
cld
std
scas
pop
insb
jb
push
mov
dec
fsubp
lods
mov
cmpsb
sbb
pop
stos
xchg
ss
dec
mov
int3
pop
and
sub
pop
mov
mulb
in
adc
lods
clc
jnp
js
mov
mov
push
addl
fidivl
ss
mov
pop
adc
push
jmp
dec
test
mov
pop
sbb
sbb
enter
lods
mov
cmp
inc
popa
push
cltd
push
push
pop
mov
mull
mov
xchg
pop
fwait
decl
fldenv
stc
je
mov
rcr
mov
push
imul
mov
scas
xchg
je
bound
pop
ja
dec
mov
movsb
addr16
iret
sub
mov
adc
sub
addl
subb
inc
sbb
aam
jmp
mov
pop
pushf
jbe
ss
lcall
int3
enter
lret
and
repnz
and
ja
or
inc
div
xchg
cmpsb
push
push
in
call
jae
adc
and
cwtl
cmp
mov
add
hlt
ljmp
iret
nop
fistl
push
shrl
and
jbe
popf
inc
cmpsb
out
scas
scas
lock
cmp
sub
daa
mov
es
enter
stc
call
pop
out
or
loop
mov
lods
je
push
jmp
mov
mov
mov
cld
cwtl
mov
mov
popf
lret
sub
mov
mov
or
jmp
std
pop
fadds
enter
dec
inc
insl
test
pop
cli
push
xchg
sbb
fildl
dec
cmp
fstps
loope
cmc
gs
cmp
jae
sti
arpl
xchg
fisttpll
or
ss
push
out
in
inc
mov
testl
test
cltd
rorb
stos
fdiv
ja
movl
mov
mov
sub
ss
inc
js
and
ja
pop
hlt
ret
cli
es
jo
add
repnz
fcmove
jp
neg
jae
aaa
jb
pop
lock
in
cmp
pop
or
mov
dec
scas
imul
mov
nop
mov
push
mov
pop
iret
or
xor
loope
jge
jle
das
test
mov
fcoml
stos
int
adcb
movsb
mov
push
scas
cmpsb
scas
sahf
mov
shlb
pop
mov
lahf
neg
pusha
sbb
adc
enter
jmp
push
daa
mov
cwtl
les
sub
dec
in
lcall
mov
lcall
aam
in
pop
xor
aaa
rcll
enter
jo
aam
dec
jno
xchg
sbb
lahf
test
jg
into
xchg
and
push
ds
jae
movsl
fistps
mov
out
nop
in
outsl
mov
xchg
mov
pop
mov
mov
insb
push
pop
sahf
daa
or
testl
sub
ja
stos
jne
mov
imul
in
iret
push
mov
or
mov
lock
xlat
nop
jl
aas
pop
jno
loopne
mov
push
jnp
mov
mov
adc
insl
mov
loopne
mov
lret
cmp
pop
mov
in
jg
call
int3
mov
cmp
js
sub
pop
movsl
push
sub
xor
and
push
jmp
dec
sbb
scas
jg
cmpsb
sbb
xchg
scas
leave
int
push
ret
mov
out
push
roll
imul
pop
lods
mov
pop
and
cs
mov
sbb
inc
js
jge
cltd
dec
lcall
fsubl
mov
add
lcall
xor
scas
dec
and
loopne
jp
popa
test
jge
popa
xchg
cltd
nop
cmp
mov
movd
in
pop
pop
repnz
xor
lock
and
adc
out
and
mov
sub
cmpsl
je
inc
mov
jmp
jo
clc
stc
jno
das
hlt
pop
nop
mov
adc
mov
mov
xchg
testl
mov
scas
fmuls
or
mov
sub
popa
jne
xchg
sarb
aas
adc
in
and
pusha
sti
icebp
adc
lahf
or
andl
sub
sub
out
cmc
repz
lods
test
shrl
leave
fwait
addb
dec
xchg
stc
push
sbb
and
pop
jmp
repz
sub
clc
aaa
loop
gs
adc
in
dec
jecxz
sarl
cli
adc
mov
jb
inc
call
lret
add
mov
mov
inc
jo
mov
xchg
or
imul
loop
and
js
dec
mov
div
xor
movsb
xchg
sbb
jmp
loop
shl
je
cmpsb
mov
xor
or
lods
lret
xchg
cmp
fstpt
rorl
dec
je
sbb
icebp
movsb
ss
pop
pushl
cwtl
xor
jmp
sbb
cmp
inc
loopne
push
adc
pop
push
mov
popa
jg
and
sarl
out
mov
dec
popa
enter
adc
and
movsl
mov
stc
sbb
mov
ret
repz
rdmsr
mov
xchg
sbbb
jge
js
repz
sarb
pop
rcl
scas
jmp
jns
xchg
mov
push
inc
adc
bound
repz
ljmp
pop
pusha
icebp
fs
lods
xor
repnz
xorl
pop
xchg
pusha
or
mov
out
push
loop
arpl
sbb
cmp
lret
stos
push
mov
hlt
add
out
or
adc
sbb
fwait
jo
sti
shrl
arpl
cld
mov
lods
inc
mov
xor
xchg
sbb
js
jo
pop
pop
insl
pop
adc
orl
dec
sbb
loopne
pop
ret
dec
cmovo
push
and
cmp
hlt
enter
lods
and
gs
inc
pop
out
nop
or
push
push
and
faddp
gs
cmp
and
nop
xchg
andb
pop
movsb
jae
pop
enter
dec
inc
mov
mov
mov
jb
jle
gs
outsb
sub
repnz
and
paddusb
xchg
pop
jb
sbb
inc
dec
sub
hlt
mov
lods
jge
nop
pop
push
inc
sub
inc
adc
out
push
inc
or
dec
lret
arpl
jecxz
ljmp
dec
xchg
dec
sbb
lods
push
pusha
pushf
push
shll
sub
flds
mov
int
scas
incb
xor
gs
insl
dec
inc
xchg
mov
xorl
sub
pop
push
int
xor
sbb
dec
jle
je
mov
roll
and
shll
movsb
jp
jp
js
cmp
xchg
or
pop
das
pop
int3
mov
jle
mov
mov
adc
jg
mov
arpl
pop
ljmp
popa
sub
dec
and
fistps
jno
rcrl
std
jge
stos
mov
loopne
lahf
sub
nop
push
fwait
lahf
jno,pn
mov
or
push
xor
and
leave
sti
or
mov
pop
and
bound
outsl
and
fsubrl
lahf
sub
adc
movsb
pop
movsb
adc
enter
mov
adc
nop
insl
sbb
mov
adc
aas
inc
inc
or
clc
adc
and
cli
xchg
repz
lods
jb
out
cmp
mov
jg,pn
das
push
cs
mov
jp
cmp
out
daa
sbbl
fildll
mov
ret
fisubrl
mov
mov
in
and
push
icebp
popa
les
xor
stos
nop
cmp
ja
outsb
cld
out
dec
cmp
outsl
mov
jae
fimull
mov
xor
jb
cmpsb
data16
pop
add
xor
push
mov
fcom
jl
xchg
imul
push
mov
sbb
fdivs
push
sub
addb
mov
or
xor
sub
jnp
mov
and
scas
add
orl
inc
cmp
repnz
add
sti
adc
jnp
mov
mov
fsubr
cmpsb
xchg
aad
frstor
enter
daa
inc
in
dec
test
push
dec
xor
bound
and
test
lods
int
and
clc
sub
xor
mov
cmp
pop
and
xor
rorb
mov
outsb
xlat
rclb
or
test
jl
in
out
xor
and
mov
xor
aas
mov
nop
nop
iret
mov
dec
or
mov
popa
xor
push
xor
subl
shl
sarl
pop
cmp
jbe
sub
mov
xlat
mov
fisttpl
fmull
adc
cmc
cmp
aas
dec
inc
adc
test
in
cmp
lret
xchg
mov
int
stos
lret
jno
fsubr
pop
outsl
push
adc
push
inc
loope
or
mov
inc
mov
les
cld
pushf
mov
sub
xchg
xor
ja
cmp
sar
int3
bound
mov
inc
add
push
inc
popa
jge
or
cmp
loope
lock
and
jb
popa
test
lcall
adc
cmpsl
dec
dec
in
xor
and
test
stos
dec
and
push
adcb
clc
mov
push
mov
loope
outsl
fistpl
negb
repz
outsb
and
mov
ljmp
jbe
mov
mov
mull
lret
sbb
in
test
mov
or
popa
sbb
and
mov
sub
mov
cmpsl
xchg
mov
movsl
loop
popa
jne
lods
lcall
lret
mov
pop
js
sahf
repnz
mov
xchg
fildl
mov
mov
movsb
sbb
rolb
xor
out
fcomi
and
daa
push
sub
ja
shl
cmp
stos
mov
add
jno
stos
aam
mov
repz
push
scas
fstl
leave
xchg
hlt
inc
ss
xlat
into
fistpl
mov
rorl
push
mov
sbb
ss
test
fdivrp
in
and
or
orl
xor
int3
xchg
cs
into
adc
push
imul
and
adc
xor
decl
lcall
cmpsl
stos
outsl
sbb
js
mov
lcall
leave
cmp
aas
inc
jb
les
xchg
fbstp
mov
fwait
leave
mov
outsl
cmc
mov
leave
aas
test
pop
pop
in
or
adc
jp
mov
ret
jmp
push
xchg
cltd
fdivrs
sub
loop
mov
pop
mov
out
shrl
dec
and
sub
lret
rcrb
scas
in
pop
std
sub
ss
adcb
test
mov
movsb
push
pop
mov
inc
xchg
cli
xchg
fxch
xchg
sub
ljmp
sbb
xchg
xchg
mov
and
fwait
cld
dec
imul
adc
scas
lds
push
sbb
addb
sub
mov
xor
popf
mov
add
ret
fmull
int
cmp
mov
xchg
sbb
dec
cmp
cltd
jecxz
inc
repz
mov
cmpsb
xor
sub
mov
lret
lods
cld
inc
stos
mov
mov
stos
push
cs
pop
loopne,pt
fcmove
test
popa
sahf
popa
or
or
adc
ss
pop
xchg
push
les
sub
addr16
outsl
or
das
xchg
xchg
push
orl
adc
stos
jb
fiadds
test
dec
lds
fwait
test
and
lret
popf
dec
leave
sub
push
mov
mov
adc
push
sti
addr16
pop
mov
and
add
cmp
movsb
lea
cmp
fcmovbe
sub
inc
sub
pop
dec
push
push
mov
xchg
lahf
ss
jne
jb
mov
pop
mov
xchg
fcoml
pop
add
in
add
test
psubsb
in
int3
lcall
xchg
popa
enter
fbld
popf
mov
call
xchg
sub
ret
and
jno
sub
idivl
cld
cmp
jecxz
ds
repnz
or
inc
adc
data16
xor
outsb
fwait
sbb
mov
shll
stc
cmp
int
mov
scas
rcrb
in
and
aad
mov
mov
sbb
insb
divb
icebp
out
mov
pop
jecxz
cmp
xchg
mov
xor
push
gs
pshufw
pop
insb
push
mov
popf
jg
adcl
add
lret
jl
cld
js
mov
push
xchg
or
imul
inc
clc
and
or
or
hlt
or
iret
scas
sub
mov
add
imul
sub
rolb
in
sbb
andb
inc
sbbl
fs
ja
ljmp
js
and
lahf
cli
sbb
iret
jb
shll
jno
out
and
push
jno
mov
mov
stos
cltd
and
xchg
lock
mov
movsl
hlt
std
jo
ljmp
cmp
daa
mov
jl
or
add
fiaddl
dec
ss
cld
in
mov
inc
test
sti
cmp
insl
lea
sbb
jmp
xor
cmp
xchg
mov
and
enter
push
xchg
dec
dec
xor
orl
insb
dec
int
ja
dec
mov
lahf
and
dec
int3
jmp
fcmove
push
sbb
or
mov
pop
mov
add
push
cmp
or
aaa
stos
loop
mov
imul
dec
mov
dec
sub
xor
insb
jne
test
xlat
jg
testb
cmp
pop
push
adc
daa
jg,pt
add
stc
cmc
pop
jge
out
scas
and
sub
or
ret
mov
sar
jo
xchg
push
cmp
and
rcl
pop
xor
cmpsl
adc
inc
push
dec
push
sub
ret
inc
loope
mov
jmp
push
push
sbb
jg
in
inc
cltd
adc
pop
jmp
pop
mov
leave
inc
mov
mov
push
dec
sti
movsl
inc
sti
sbb
xor
mov
je
cli
mov
cwtl
lret
mov
push
xor
dec
and
inc
ljmp
lcall
outsb
pop
adcl
xlat
clc
jmp
adc
xchg
mov
add
out
mov
in
je
dec
div
push
outsb
and
data16
mov
pop
push
mov
popf
lock
lock
movsb
push
fsubrs
and
dec
jae
jb
pusha
push
mov
sarl
adc
test
fdivs
shlb
stos
push
sub
mov
mov
repnz
repnz
fiaddl
shrb
pop
aaa
fsubl
or
dec
aam
mov
mov
push
mov
sbb
stos
sbb
jns
adc
xor
pop
repnz
pop
push
mov
in
ss
xchg
dec
mov
pop
inc
aaa
jmp
sub
cltd
inc
push
cmp
adc
out
in
iret
int
jecxz
aam
or
loop
rclb
lahf
add
popa
test
shl
ss
cmp
and
adc
cld
int
ljmp
scas
call
clc
mov
ret
hlt
aas
lret
imul
icebp
jnp
mov
cld
test
daa
pop
stc
mov
andb
leave
hlt
test
push
movsb
repz
jns
movsl
in
loopne
int3
mov
nop
stc
sub
fnsave
push
sti
aad
in
imull
mov
enter
leave
int
rcrl
push
cld
jge
dec
movsl
add
out
data16
mov
inc
cs
mov
ss
xchg
or
adc
cs
add
inc
lock
test
inc
dec
in
jecxz
sbb
lock
adc
xor
daa
mov
mov
ljmp
jle
mov
inc
pop
cmc
cmpsl
iret
sub
and
leave
mov
hlt
xchg
arpl
mov
add
push
inc
stos
lret
addb
add
ss
movsl
cmpl
mov
loop
mov
lcall
insl
adc
inc
jl
jb
es
cmc
decb
cmp
ja
loope
clc
mov
dec
aam
test
xchg
mov
ret
imul
imul
jmp
push
dec
mov
cli
popa
mov
mov
cmp
push
insl
xchg
dec
subl
sub
insl
pop
push
sbb
jge
or
jmp
jle
adc
aaa
aad
test
das
cmp
pushf
subl
sbb
xchg
shlb
mov
call
mov
rcrb
xchg
mulb
cli
rcr
lahf
frstor
sbb
test
stc
lahf
lcall
jle
jl
dec
aaa
push
std
out
push
xor
popa
xlat
and
aad
push
outsl
addr16
mov
mov
adcl
push
pop
cmpsb
cmpsl
enter
pop
push
adc
in
cltd
je
push
pop
daa
scas
ficompl
or
ljmp
pop
subl
xor
or
les
xlat
push
adc
jmp
ss
add
inc
jae
enter
jnp
stc
adc
das
add
xchg
xchg
mov
bound
push
add
icebp
inc
enter
arpl
nop
cltd
adc
lret
lahf
jbe
pop
mov
fcompl
xchg
test
popf
xor
add
lds
jge
sub
pop
sbb
aaa
mov
xchg
cmpsl
mov
stos
xor
jne
cmp
xchg
adc
pop
gs
mov
xchg
mov
les
in
xchg
aad
xor
push
and
fwait
adc
pop
push
pop
aam
aaa
aad
mov
xchg
sbb
push
in
fwait
test
sbb
pop
hlt
dec
lods
test
mov
xchg
aaa
pop
pop
cmp
movsl
insl
dec
inc
gs
push
stos
sub
jp
hlt
push
ss
jp
test
mov
daa
push
xor
insl
mov
jl
rclw
mov
jge
add
inc
mov
and
jno
jae
cmpsb
ret
push
arpl
iret
mov
adc
mov
clc
mov
xor
stos
jo
pop
mov
call
addr16
call
push
setp
pushf
mov
lret
jl
imul
shlb
insl
test
xor
loop
inc
xlat
sbb
or
jbe
mov
into
fcoms
js
jbe
imul
loope
dec
fidivrs
jb
inc
fsubp
sahf
add
loopne
in
pushf
xchg
jge
jg
arpl
push
sbb
pop
or
jge
out
inc
sbbl
add
aas
mov
mov
in
adc
xorl
mov
lea
ja
enter
jne
add
out
jo
mov
dec
idiv
push
loope
push
xchg
andb
dec
cmc
cmpsl
cld
cli
in
jno
sub
cmp
lods
jbe
ss
inc
bound
andb
jne
ficompl
or
ror
ds
cmp
out
sub
lock
jno
sub
pop
cmp
test
in
std
insb
popl
sub
mov
fwait
aaa
andl
andl
sarb
pop
add
mov
jecxz
push
add
or
loop
inc
shlb
jo
mov
lods
xor
push
sub
push
cmp
lods
jmp
fists
jle
push
int3
mov
cmpsl
clc
aas
repnz
in
popa
cmpsl
sbb
dec
dec
jno
add
ds
cmc
out
or
or
rcrl
adc
mov
rcrl
dec
int
int3
jmp
fiaddl
mov
out
cmp
inc
jecxz
sub
aas
cmp
scas
mov
decb
mov
dec
ret
jne
jge
shrb
or
out
pusha
inc
add
adc
inc
mov
test
sbb
or
jmp
repnz
pusha
ret
das
pop
jmp
xchg
mov
cs
test
lods
aad
cmp
scas
or
sbb
jae
dec
xchg
fsub
test
das
jp
push
cmpsl
adc
insl
push
mov
out
nop
daa
lahf
test
mov
inc
add
dec
inc
jg
scas
pop
xor
and
flds
or
popf
in
cmp
cli
shl
loopne
xor
cld
in
inc
xlat
sub
xchg
aam
push
sub
hlt
or
dec
or
pop
lds
adc
sbb
push
and
add
popa
lock
repz
jne
jns
int3
cltd
xchg
outsb
js
adc
xorl
sbb
add
mov
lock
popf
lods
dec
iret
mov
xchg
inc
mov
insl
xchg
and
cmpsl
jle
and
cmp
xlat
sarb
data16
pop
aaa
movl
mov
push
mov
loop
add
sub
add
in
adc
testl
loop
inc
pusha
arpl
and
mov
or
dec
lds
stc
cmp
mov
push
leave
mov
mov
fcompl
jb
lods
fcmovu
sub
pusha
jb
jmp
scas
sbb
je
scas
into
pop
cmpsl
inc
ror
imul
pop
shrb
xchg
cmpsl
out
clc
inc
sub
ficoms
mov
fists
xor
loop
sti
cmc
es
push
cli
rcrl
jg
in
mov
pop
dec
push
std
lea
dec
add
xchg
jae
dec
jge
dec
mov
add
shl
mov
rclb
jge
fwait
cwtl
cmp
mov
pusha
jo
jg
cmpsb
adc
sbb
jae
jge
sub
jns
fs
dec
fwait
cltd
movsb
daa
lret
xchg
dec
aam
or
dec
rclb
xchg
fwait
rorl
in
add
cmp
call
mov
jecxz
pop
lret
push
dec
add
rol
add
lret
push
movsl
bound
pop
iret
pop
mov
stos
push
dec
cmc
ret
mov
dec
xor
mov
inc
aas
repnz
mov
enter
daa
adc
dec
subl
xchg
insl
sub
jle
add
pop
sub
dec
mov
mov
mov
cmpsb
mull
daa
sub
out
pusha
repz
movsb
inc
adc
lcall
outsl
mov
out
ja
ljmp
xchg
inc
push
and
push
jge
xacquire
pop
std
xchg
inc
mov
or
dec
repnz
and
subl
fistpll
mov
mov
jle
mov
loop
leave
cmc
mov
dec
xchg
das
mov
out
adc
xchg
cmp
pmullw
xor
gs
xchg
mov
stc
movsl
subl
jb
or
inc
jmp
sarl
mov
cli
hlt
mov
inc
mov
mov
add
gs
nop
inc
sbbl
mov
pop
mov
imul
shr
sub
sub
sti
iret
into
sti
dec
xchg
and
xchg
push
pop
mov
xlat
jno
xchg
jge
enter
and
ss
or
cltd
mov
mov
idivl
pop
or
pop
movsb
inc
jns
data16
add
sbb
fwait
out
cli
mov
mov
mov
pushf
out
imul
sbb
je
push
lahf
cwtl
stos
sbb
add
out
push
pushf
inc
xchg
loop
les
sbb
scas
pop
and
stos
mov
dec
add
cmp
in
outsl
mov
lcall
fisubl
ljmp
sarl
push
fwait
pop
aam
ss
xchg
das
push
pop
and
push
loop
adc
and
jle
mov
imul
cbtw
mov
push
cwtl
xor
cmpsb
mov
sbb
mov
dec
cmp
jnp
rorl
push
in
dec
sub
repz
fxch
adc
out
push
loopne
movsl
test
pop
ds
add
mov
inc
pop
push
fisubs
fisubs
mov
cmp
das
data16
aaa
mov
ret
adc
add
dec
out
and
cltd
cmpsb
mov
jg
mov
jecxz
es
jne
int3
xor
sub
in
loop
add
push
imul
jg
aas
addr16
jecxz
mov
fdivrs
test
xchg
mov
lock
dec
sub
adc
cld
pop
out
aad
xor
mov
pop
int3
or
add
jmp
cmpsl
mov
push
sub
dec
nop
cmp
mov
enter
loopne
aam
jno
cmp
jo
movsb
xor
mov
clc
lds
xor
mov
jae
rcl
pop
mov
outsb
push
pop
fwait
lds
dec
cmp
fbld
ja
mov
fbstp
dec
jnp
jmp
push
pop
jb
xchg
outsl
push
add
add
movb
in
xchg
jmp
xchg
loopne
sbb
adc
xor
xchg
pop
mov
inc
int
sbb
push
mov
pushf
cmp
loop
jmp
lret
push
pop
xor
inc
aaa
mov
pop
push
add
sub
sbb
push
fisttpl
mov
hlt
dec
pop
dec
mov
in
xchg
test
scas
push
mov
out
add
mov
lods
dec
pop
jne
shrb
rcrb
ds
call
pop
shll
mov
clc
leave
mov
test
imul
pop
jns
test
dec
out
outsl
cmp
nop
dec
shr
xor
imul
mov
enter
inc
pop
repz
xor
lods
out
pop
cli
and
adc
or
jnp
sarl
sub
je
pop
dec
lea
in
jmp
xor
push
fstpl
loop
and
or
jbe
stos
fwait
jl
rcll
lcall
adc
sub
int
daa
pop
sub
add
add
mov
loopne
or
je
lea
sbb
cmp
sbb
incl
xor
mov
push
xchg
sub
sbbb
sbb
sub
mov
fcompl
std
nop
addl
imul
repnz
aas
std
mov
leave
fwait
push
stc
cmc
jns
push
push
shlb
bound
in
shrl
test
ficoms
mov
mov
cmp
dec
push
and
in
cltd
sub
out
jg
cmp
mov
stos
fnstcw
call
cmc
adc
cmp
mov
iret
push
inc
int
xchg
insb
ret
into
loopne
movsb
shl
fdivl
pop
add
stos
push
leave
sti
lret
test
lods
ret
test
daa
int
and
std
inc
and
sbb
addb
dec
mov
les
push
mov
movsb
out
adc
adc
sub
fcomps
mov
lock
inc
pop
loope
and
in
fcoml
pusha
movsb
inc
cltd
mov
lea
fcoms
and
or
push
xchg
stc
xor
aas
xlat
shlb
pop
shlb
mov
cld
stos
rcll
xor
sbb
outsb
stos
add
divb
dec
ss
insb
je
ljmp
push
add
mov
testb
int3
adc
mov
andb
jecxz
outsl
xorl
movsl
call
sub
test
sti
lock
mov
fsubrl
dec
into
cmp
or
mov
cmp
lahf
sbb
iret
int3
jnp
lea
int
js
lahf
mov
jp
roll
cmp
sbb
icebp
fmulp
push
xchg
xchg
nop
sbb
jmp
xor
add
imul
lret
out
sti
bound
push
les
cmc
mov
aaa
int
lahf
sbb
cmp
cli
cmpsb
fdivrs
inc
mov
jp
mov
jge
mov
mov
adc
test
mov
xchg
pop
sbb
adcl
push
leave
cmp
jae
sbb
jbe
cmc
push
aam
arpl
mov
push
lods
push
pop
sub
ljmp
enter
inc
xor
mov
pusha
mov
or
jae
jne
mov
inc
pusha
sub
hlt
stc
push
testl
xchg
lea
outsb
rcll
int
dec
dec
mov
ss
mov
sbb
icebp
adc
adc
lock
stc
cmpb
adc
andb
and
ret
das
or
push
shll
inc
jae
les
xchg
out
mov
test
mov
sub
sbb
and
inc
in
xchg
pushf
or
sbb
sbb
push
jmp
inc
loope
outsl
stos
daa
enter
inc
addr16
or
shr
xchg
or
dec
ret
and
mov
adc
xor
xchg
ficompl
fidivrl
inc
fcoml
push
xor
jo
push
cmpsb
push
shl
push
mov
nop
sbb
xchg
mov
test
clc
jmp
push
push
adc
int
inc
shll
fsubr
mov
test
adc
cmp
aad
cmp
cmc
adc
stc
out
mov
pop
or
ljmp
and
pop
mov
inc
and
sub
push
stos
ss
jnp
roll
add
divb
dec
bound
inc
bound
imul
repnz
and
jecxz
daa
cmp
cmp
out
inc
das
xchg
cmc
data16
cmpsb
pop
adc
loope
outsb
or
or
or
mov
sub
cs
rcll
mov
jmp
sahf
loop
inc
inc
in
loopne
push
inc
push
sarl
icebp
popf
push
jp
sti
outsb
mov
dec
scas
jne
insl
add
inc
ss
xchg
dec
test
bound
push
fiadds
mov
pop
mov
or
in
xchg
add
shrb
data16
ss
push
pop
cmpb
ficoms
sub
and
mov
notb
pop
dec
lods
jp
adc
mov
js
jecxz
mov
cmp
jb
mov
cmp
inc
mov
pop
push
push
lcall
push
in
into
or
sti
push
xorb
mov
ja
sti
adc
gs
xchg
mov
sub
rcll
add
cld
mov
mov
mov
inc
dec
jb
test
stos
icebp
dec
sbb
dec
xchg
lods
jl
sbb
jmp
mov
into
sbb
cmp
lahf
je
aas
ret
addl
pop
mov
lahf
es
xor
mov
mov
xchg
mov
enter
inc
inc
popa
mov
daa
test
cmpsb
mov
and
es
mov
and
loope
and
ljmp
ds
xor
adc
xchg
mov
jle
pop
sub
and
xor
dec
test
add
lea
push
pop
sub
or
mull
dec
dec
sub
pop
pop
dec
movsb
imul
adc
pusha
movsl
das
inc
push
and
mov
shl
and
adc
lock
xor
or
xchg
in
mov
mov
jo
insl
push
xor
inc
repnz
push
cmpsb
sbb
ret
and
pop
cmpsb
and
inc
inc
sub
push
fmuls
out
mov
dec
xchg
or
negl
iret
ja
cmp
aam
movsb
cmp
and
out
sbbb
xor
je
aad
ficoms
mov
mov
rcrl
popf
imul
cld
xorl
loop
or
mov
jnp
xor
hlt
jb
mov
movsb
repnz
push
stc
subb
dec
data16
or
dec
arpl
adc
mov
shr
inc
fnstcw
sub
mov
xchg
inc
sub
rcr
sub
ds
pop
jle
nop
xchg
jb
adc
adc
adc
sbbl
push
dec
or
int
pop
movsb
popf
test
jne
sti
sub
popf
inc
imul
jmp
mov
mov
or
add
fs
xchg
add
pop
xchg
jl
adc
arpl
insl
adc
and
dec
fimull
mov
sarl
jp
test
cmc
push
gs
enter
xchg
and
dec
push
cmp
mov
mov
push
ret
mov
mov
pusha
outsb
xor
and
js
or
adc
outsb
bound
inc
cmp
pop
push
xchg
lock
mov
push
sbb
pop
mov
data16
je
mov
scas
mov
xchg
inc
jmp
cmp
pop
mov
cli
popa
mov
push
mov
xor
add
inc
mov
jb
out
mov
sbb
jno
dec
pop
daa
or
mov
call
mov
hlt
or
outsl
mov
fidivrl
ret
pusha
mov
xchg
add
sbb
int3
ret
dec
idivb
clc
add
mov
rcll
clc
sbb
add
jne
daa
or
cwtl
fdivrs
daa
mov
mov
cmp
inc
dec
and
stos
and
inc
std
cmpsl
cmc
imul
jp
jnp
sbb
test
std
sarb
int
sub
or
loopne
ret
imulb
rolb
add
repnz
movups
cmp
cmp
xchg
and
and
pop
ja
cld
in
rclb
dec
adc
inc
fsub
jbe
lahf
cmp
sub
cmp
stos
lret
inc
adc
xlat
int
jb
neg
out
dec
push
sbb
aaa
push
divl
xor
into
in
cli
or
inc
adc
loopne
dec
mov
in
out
dec
daa
in
mov
xchg
aad
mov
insb
inc
pop
call
jl
hlt
and
mov
mov
sbb
adcl
das
push
jnp
fdivs
imul
add
ret
sbb
bound
and
imul
out
push
icebp
jmp
cmc
ljmp
jns
cld
mov
add
jb
out
cmp
push
lods
outsb
bound
pop
cltd
mov
mov
mov
cmc
fisttpl
pop
aas
std
fdiv
or
std
data16
push
js
mov
mov
mov
pop
loop
sub
add
or
dec
icebp
xchg
jbe
fidivs
mov
in
mov
lcall
sti
push
fwait
in
xchg
sbbb
jb
or
cmp
inc
pop
outsl
mov
sahf
fcoms
incb
popa
xchg
fs
jg
jae
outsl
mov
stc
mov
add
aaa
cmp
mov
loopne
mov
jae
mov
add
cli
bound
xlat
and
and
outsl
iret
hlt
loope
ja
xchg
mov
aaa
dec
call
push
jp
dec
es
clc
imul
out
cltd
in
jl
push
push
icebp
lds
lret
insl
xchg
testl
xchg
jb
ret
jl
shll
inc
add
adc
xchg
int3
and
roll
shl
mov
scas
lahf
dec
mov
js
bound
jae
mov
cs
and
test
vpshlq
and
adc
xchg
mov
dec
add
dec
mov
adc
add
aas
out
xor
lds
add
ljmp
iret
push
mov
je
fldcw
sete
jb
mov
iret
add
add
stos
push
push
xchg
dec
dec
mov
cwtl
xchg
das
and
imul
sbb
leave
xchg
fisttps
rolb
pop
sbb
pop
dec
pop
xchg
and
inc
repz
es
xor
jnp
imull
test
fidivs
mov
xor
jecxz
cmpsb
xor
adc
pushf
or
repnz
dec
in
test
xorb
or
inc
mov
add
out
dec
jae
int3
cmp
cmc
sarl
mov
push
test
loope
or
lods
xchg
clc
push
fdivrp
div
mov
mov
add
imul
rcrl
je
jg
jecxz
or
pop
add
lea
stc
dec
out
es
ljmp
fcmovb
aas
xor
mov
sub
mov
push
pop
mov
add
nop
mov
cmp
movsb
sahf
mov
mov
mov
in
xorb
aas
addr16
push
inc
sarb
mov
xor
gs
sbb
in
lcall
add
cli
jo
mov
out
mov
sarl
jl
lock
pop
notl
imul
fcmovbe
addr16
dec
clc
imul
push
push
fs
cs
add
dec
sbbl
and
dec
hlt
push
adc
repz
inc
aas
or
daa
js
push
sub
mov
lock
in
shrl
mov
dec
mov
mov
out
insl
sbb
jmp
push
divl
fmul
inc
mov
ss
or
rcrb
out
nop
mov
addr16
mov
mov
addb
addr16
adc
ret
jae
push
cmp
xor
movsl
pop
mov
fxtract
and
xor
movl
je
add
imul
cmpsb
ret
mov
mov
test
mov
push
inc
in
push
in
mov
cmp
arpl
js
lret
lea
iret
pop
fidivrl
jo
dec
inc
in
sub
ret
test
int3
add
sub
sub
pop
fbld
call
enter
add
xor
mov
sbb
dec
arpl
ret
add
sub
fisubrl
adc
mov
scas
push
ret
pop
incl
push
test
cmp
in
cmpsl
clc
or
adc
sahf
fstpl
sti
inc
negb
das
dec
adcl
sti
add
cli
xchg
mov
aas
sub
inc
pushf
cs
push
jmp
add
mov
adc
lret
cli
mov
mov
fsubr
ja
jge
out
or
pop
outsb
xchg
es
cmp
outsl
scas
arpl
push
jno
stc
mov
sbbl
imul
or
cmp
jno
ljmp
fwait
xchg
cli
icebp
dec
cmp
xor
fsubrp
jg
xor
ljmp
adc
movl
repnz
xlat
xchg
flds
ret
inc
fsubs
dec
lret
push
cmp
subl
sub
stc
int
sbb
sbb
inc
pushf
lock
push
fsubr
arpl
fcompl
push
fnstsw
sbb
addr16
add
fsubrl
ljmp
jmp
jmp
aaa
mov
jne
mov
ljmp
imul
inc
sub
dec
arpl
aam
sub
cmp
add
pop
sub
mov
rorb
outsl
lcall
inc
mov
pop
popa
sub
push
sbb
add
add
fcmovnu
cltd
clc
repz
jnp
adc
loope
xor
stos
stos
pop
test
mov
push
mov
jbe
fs
jge
inc
cld
lods
pushf
ror
inc
pop
daa
jmp
rcr
imul
ja
repnz
or
inc
ja
mov
jge
and
loop
inc
mov
movsb
cmp
or
inc
inc
int3
lcall
dec
fdivl
ja
push
mov
ret
je
mov
cs
stos
enter
cmc
aas
sbb
jl
out
mov
inc
mov
mov
or
mov
inc
nop
adc
pushf
test
ljmp
mov
inc
inc
fcoml
mov
out
jecxz
cli
push
andb
fldt
mov
movsl
or
push
ljmp
repz
sbb
adc
mov
xor
loop
enter
inc
pop
sub
stc
adc
pop
push
ja
mov
cmp
jae
xor
mov
adc
shlb
mov
mov
js
stc
push
mov
dec
mov
aam
inc
ja
pop
test
out
movsl
loope
loop
jge
mov
adc
dec
sahf
xchg
mov
and
pop
xchg
iret
sub
mov
arpl
cmp
cmpb
gs
into
mov
xchg
mov
loope
test
shll
pop
fnsave
push
lods
arpl
and
xor
jg
jo
je
xor
push
mov
push
adc
lds
cmpsl
sahf
cmp
pop
pop
in
sbb
cmp
cmp
xor
outsb
subb
or
lea
js
sub
adc
loope
leave
pop
jmp
xchg
or
and
sbb
cmpsl
fmuls
lcall
pushf
cld
fnstenv
js
adc
out
pop
xchg
pop
adc
loop
adc
or
push
out
mov
jnp
aas
jmp
sarb
cltd
mov
popl
lret
int
pop
mov
imul
inc
or
jle
xor
add
xchg
aad
jp
sbb
lahf
push
repnz
andb
push
sbb
js
out
dec
jne
add
xchg
testl
int
daa
loop
fdivrp
jmp
das
lock
clc
shr
jns
cmpsl
cmp
xchg
jle
cmp
mov
add
lods
lret
ret
aad
push
cli
pop
sub
sbb
shl
inc
cmpb
les
inc
dec
push
lret
imul
dec
xchg
mov
insl
in
outsb
xchg
popa
mulb
dec
clc
xor
mov
push
xor
divb
ficoms
mov
pusha
xchg
movsb
call
cwtl
xchg
mov
icebp
arpl
in
imul
mov
mov
gs
mov
out
dec
mov
xlat
mov
cmpsb
idiv
jl
test
test
jmp
push
adc
mov
lret
add
mov
add
lahf
es
repnz
and
sar
fistps
call
fdivp
xchg
mov
out
jge
xchg
je
xchg
dec
movsb
fdivs
fidivl
mov
mulb
push
and
or
cmc
pop
adc
mov
loope
pop
test
nop
push
in
adc
and
lock
adc
sub
lret
insb
jae
mov
ds
nop
std
fisubs
fxch
jne
cmp
or
mov
cmpsl
lahf
dec
jl
sub
xchg
sbb
mov
or
sub
pop
cwtl
xlat
jo
scas
data16
iret
mov
jne
xchg
xor
lret
cld
enter
int
inc
xchg
movsl
jge
mov
mov
jp
mov
lahf
sbb
out
xor
aas
lcall
es
fndisi(8087
rolb
mov
sbb
jecxz
shrb
inc
ret
sbb
xchg
push
cli
idiv
into
pop
xor
xchg
dec
add
dec
clc
and
and
cmpsb
jb
int3
adc
push
inc
xchg
sbb
andb
ds
fists
mov
pop
ret
repz
push
mov
xchg
daa
adc
xor
lock
cmp
sub
cmp
icebp
adc
or
pop
mov
add
into
fstpl
xchg
aas
repz
stos
leave
dec
adc
popf
lods
push
in
inc
cmp
jne
jno
leave
xor
add
mov
leave
push
mov
xor
andb
pop
jb
nop
sbb
sbb
mov
jp
jb
gs
jle
xor
push
pop
aad
jbe
out
je
outsb
es
push
aaa
stos
push
scas
pop
call
clc
mov
test
add
inc
arpl
push
lods
pop
in
mov
xchg
jle
div
adc
push
lret
xchg
pop
and
add
in
cmp
jl
and
or
popf
int
jmp
fistps
inc
es
jns
shll
aaa
adc
adc
pop
inc
sub
xlat
cmp
mov
xlat
scas
push
or
outsl
imul
arpl
push
mov
xor
pop
test
in
mov
inc
enter
int
shlb
fistpl
cwtl
in
push
notrack
pop
adc
fs
jo
ljmp
mov
movsl
rorb
adc
mov
push
push
loope
into
jo
add
add
mov
movsb
stos
mov
es
dec
lahf
mov
pop
push
sbb
or
nop
stos
addr16
pop
push
adc
sub
mov
ret
lea
icebp
and
lret
pop
lods
scas
icebp
and
into
xor
pop
shlb
inc
mov
push
mov
xchg
enter
jp
push
pop
or
loopne
lods
xchg
in
aaa
lods
push
cmp
jge
in
jmp
pop
mov
pop
pop
pusha
lea
mov
pusha
cmpsb
loopne
mov
sub
sti
insb
sub
cmpsb
inc
nop
aaa
mov
js,pn
aaa
rorl
aad
or
pop
es
ror
fwait
addr16
mov
pop
xchg
cmpsb
movl
loop
xor
bound
pop
cmp
or
aam
dec
fwait
sub
jns
pop
cmc
add
and
pop
pop
or
pop
sarl
xor
imul
dec
cltd
inc
ja
ret
sbb
inc
lret
cmp
and
or
push
fiaddl
adc
les
mov
aas
addr16
cmc
pusha
and
xor
xor
clc
inc
icebp
sbb
xchg
shrl
stos
xor
add
xchg
jbe
test
sbb
or
decl
inc
pop
pop
lret
mov
lods
dec
je
loope
movsl
and
lcall
pushaw
push
xchg
mov
and
or
sbb
xchg
add
sub
popa
out
bnd
outsl
mov
mov
int
pop
inc
sub
fsubr
inc
or
sbb
aad
adc
adc
dec
and
cli
push
dec
jne
loopne
daa
and
fldcw
cmp
out
pushf
push
ret
std
cmp
adc
fcompl
scas
push
cmpsl
sbb
or
inc
sbb
lds
fdivs
xchg
sbb
jg
jmp
inc
jns
in
xchg
cmp
add
pusha
add
sub
loop
dec
lods
repz
in
xor
push
pop
mov
repnz
jmp
sub
sbb
jno
mov
push
pop
cwtl
mov
lret
sub
push
repz
jo
push
lahf
push
dec
or
fsubl
add
sub
fs
dec
dec
mov
mov
jg
ficompl
or
cmp
adc
jb
je
into
xchg
mov
and
aas
xchg
mov
mov
xor
loope
jae
mov
jmp
movsl
mov
lods
mov
lock
sub
cmpsl
test
mov
push
dec
mov
jmp
dec
inc
cmp
inc
mov
mov
scas
jne
pop
sub
ljmp
jne
jmp
rol
add
es
cld
outsl
cli
push
push
dec
or
push
insl
lret
negl
push
ficoml
xchg
xor
jle
cmp
inc
fnsave
inc
in
xchg
xchg
pop
add
jmp
daa
add
xchg
sbb
pop
or
insl
or
adc
add
icebp
sbb
push
and
aad
test
jmp
mov
pop
dec
mov
xorl
outsl
lea
call
jbe
cld
cli
sub
ret
xchg
jge
mov
sar
call
sbb
push
mov
int
jne
lcall
cmp
loope
jl
arpl
loop
mov
lret
push
push
jnp
xlat
push
jp
sbbb
test
push
sbb
dec
dec
cmpsl
mov
stc
xor
outsl
addr16
sub
add
mov
adc
lea
adc
mov
add
xchg
sbb
xchg
adc
fists
cmpb
adc
mov
pop
notl
xor
push
jge
mov
dec
gs
fwait
xchg
xor
ficompl
ficomps
jnp
cmp
sbb
and
pop
stc
pop
enter
xchg
pop
bound
xchg
cli
imul
sub
pop
xlat
and
lea
leave
push
movsb
imul
nopl
or
xor
xlat
sbb
mov
lcall
popa
adc
pop
repz
add
into
clc
stc
xchg
mov
xchg
insb
lods
inc
jge
movsl
dec
push
sub
fwait
sub
mov
repnz
test
je
jbe
and
dec
sti
fdivrs
movsb
stc
stos
mov
add
lahf
bound
jp
mov
in
jae
cmpl
xor
fucomp
in
sub
jno
test
and
sub
xchg
push
aaa
sub
gs
push
jae
lods
jl
mov
testl
add
int
cmp
int
jg
sbb
out
cli
popa
outsl
ret
xchg
outsb
push
cmp
test
mov
outsl
inc
popf
push
outsb
push
es
or
xor
lods
cmc
aaa
xor
add
sbb
dec
xchg
cltd
sbb
add
shl
orb
add
sbb
dec
sub
mov
fidivl
aaa
mov
inc
pop
out
push
cmp
add
dec
or
sti
sub
repz
jl
insb
rcll
nop
jbe
out
xchg
jmp
popa
or
adc
mov
sub
fwait
testb
or
stc
push
in
outsb
cmp
popf
stos
lret
mul
mov
ds
pushf
cmpsl
loopne
addr16
imul
pop
and
jae
mov
xchg
cs
add
leave
or
rorl
pushf
les
cs
iret
inc
and
insl
fisttpl
inc
fdivl
push
jae
sbb
dec
inc
mov
pop
jle
and
dec
sbb
mov
fbld
js
arpl
mov
xchg
call
sbb
ficoml
dec
data16
jl
xchg
mov
movsb
ret
shr
and
mov
mov
jmp
cmp
ret
daa
mov
pop
mov
loopne
out
jo
loopne
or
pop
das
negb
in
loop
enter
aas
inc
xor
sbb
inc
mov
mov
push
hlt
cmpsb
out
out
xlat
xchg
sahf
clc
gs
adc
push
movsb
or
vunpcklpd
push
dec
jmp
test
cmp
mov
ss
pop
imul
jp
out
imul
pop
leave
aas
fimull
stos
out
jb
ror
inc
aaa
push
aam
xchg
std
aam
popa
dec
sub
mov
mov
push
and
test
cwtl
in
lahf
into
dec
hlt
movsl
mov
hlt
popf
ret
and
ret
mov
add
out
rcr
jg
pop
or
and
or
shrl
repnz
gs
ret
pop
mov
cmp
xor
hlt
push
pushf
push
mov
ljmp
sub
jmp
adc
pop
cmp
dec
jbe
mov
orl
pop
add
mov
push
sbb
xchg
gs
or
adc
in
gs
shll
xchg
call
and
enter
mov
and
mov
pop
fstps
test
outsl
aas
lret
cmp
xchg
mov
mov
jne
test
rcll
adc
jb
std
stc
arpl
add
popf
jmp
adcl
push
int3
push
sub
dec
cltd
xchg
xor
data16
lds
imul
call
pop
and
xor
pop
rcl
ljmp
fcompl
push
add
push
incb
rcr
ret
mov
sbb
fxch
or
push
inc
jmp
inc
data16
sbb
ss
cs
cltd
sahf
adc
pop
call
xor
popf
lret
jp
in
out
ljmp
loopne
add
jb
add
test
test
rcrb
fwait
ss
insb
pop
insl
lods
insb
mov
jge
sbbl
pushf
xor
cmpsl
aaa
jmp
ss
out
mov
lcall
mov
dec
sti
xchg
pop
sub
or
ds
sub
fucom
adc
add
cld
int3
mov
xchg
outsl
ds
cmovno
push
mov
call
out
movsl
mov
les
cmp
das
push
enter
iret
ss
mov
mov
or
dec
cmpsl
mov
movb
fcmovnu
mov
mov
mov
and
popf
sti
popa
cmc
dec
xchg
dec
jmp
xchg
jp
loop
jp
sub
repz
rcr
loop
stos
push
lock
orb
sub
loop
ret
cmp
aaa
push
sbb
add
icebp
negl
sub
sti
sub
inc
imul
lock
rclb
push
ret
push
mov
ljmp
stos
xchg
arpl
or
rclb
shlb
je
stos
dec
mov
jecxz
push
sbb
divps
cmp
mov
mov
inc
mov
dec
int
dec
dec
mov
jmp
idiv
dec
push
or
ret
and
dec
rcll
push
xlat
xor
imul
push
jecxz,pn
and
adc
pusha
sbb
jno
sbb
xchg
cwtl
inc
pop
mov
idiv
stos
dec
test
dec
add
leave
mov
cs
shrb
dec
testl
inc
hlt
pop
fldl
out
imul
movsl
movsl
xchg
mov
or
jp
jl
push
sbb
add
divb
popa
or
ja
fstpl
dec
lds
imul
pusha
add
push
outsl
cmp
negl
dec
push
push
lahf
mov
aaa
dec
or
mov
and
or
cmpsl
sbb
pop
or
xor
jb
dec
mov
push
push
adc
int3
xor
pusha
stos
mov
pushf
sub
rolb
subl
movsb
jae
ja
fnstcw
and
arpl
xor
fdivl
in
mov
insb
jae
jo
push
cmp
mov
xchg
sub
cmc
cmp
gs
sarb
fstl
cmp
fists
movsb
mov
mov
or
scas
les
add
lods
cmpsl
clc
xchg
pop
or
push
mov
out
call
mov
es
mov
add
and
pop
push
pop
dec
jge
pop
mov
rcrb
sahf
jne
call
fdivl
lahf
sub
jmp
imul
cmp
sub
es
mov
aam
mov
into
pushf
ret
sbb
mov
inc
inc
mov
dec
inc
pop
mov
pop
lahf
shlb
fidivrs
dec
sub
incl
dec
mov
mov
xor
shlb
adc
enter
or
mov
clc
movsl
xchg
or
push
cmp
add
adc
repz
scas
lahf
movsl
jmp
push
mov
mov
leave
xchg
stos
mov
adcl
xlat
int
sti
inc
lea
cmc
jmp
test
adc
push
and
pop
jg
push
pop
push
les
cld
rolb
mov
scas
dec
sub
aas
add
aas
push
push
cmp
push
fsubp
sar
and
andl
inc
mov
mov
mov
imul
cmpl
sbbb
or
pop
test
xchg
mov
loop
xor
sbb
js
loopne
call
xlat
mov
xlat
sbb
adc
les
test
cltd
jno
jns
pop
lahf
dec
lahf
loope
mov
out
mov
repz
sub
inc
push
int3
test
sub
jmp
lcall
inc
add
pop
ficoms
inc
xor
lahf
loop
push
add
xlat
int
das
mov
test
mov
rorb
mov
cmp
add
subl
pop
sbb
pop
jle
xchg
leave
mov
pop
add
adc
or
outsl
xchg
arpl
lret
inc
jmp
icebp
mov
outsl
push
jae
mov
adc
jmp
xor
gs
repz
mov
daa
incl
imul
dec
mov
std
ret
push
aad
imull
mov
cmpsl
cwtl
bound
adc
enter
push
movsl
test
lock
mov
jmp
in
rcrb
je
rorb
sbb
sub
mov
test
jl
ljmp
mov
icebp
imul
mov
je
push
lock
push
out
push
push
push
sbb
pop
enter
and
repnz
xchg
mov
pushf
dec
xchg
inc
stos
push
xchg
aaa
pop
arpl
cli
fldenv
mov
push
cmp
cld
lret
pop
jns
enter
sub
xlat
jnp
xchg
mov
lcall
adc
jns
pop
pop
push
or
je
ja
push
push
jp
adc
int3
dec
pop
pop
pop
jae
arpl
fistps
push
add
int
push
stos
mov
adc
mov
xchg
pusha
push
inc
inc
andb
mov
mov
dec
mov
call
cmp
idivl
das
pop
int
xchg
xor
lock
fisttpll
dec
test
int3
xchg
fldcw
ficoms
dec
add
fcmovnu
shll
sub
ja
scas
dec
stos
pusha
dec
scas
fildll
jl
fstl
and
in
mov
push
push
repz
adc
pop
and
add
scas
or
pop
and
stos
in
mov
fcmovb
add
jp
fimuls
or
inc
shrb
mov
jge
and
subb
iret
sub
movsl
adc
jns
or
addr16
xlat
popa
add
sub
fcompl
testl
sbb
add
mov
ficoms
aam
adc
and
dec
pop
rclb
cli
popfw
add
shlb
mov
into
loop
lret
in
inc
pushf
xor
jp
andb
stc
ljmp
push
xchg
cmp
into
addr16
jl
je
leave
test
jmp
adc
dec
xlat
mov
sub
mov
sbb
popf
mov
pushf
xchg
pop
mov
outsl
in
sbb
cmp
movsb
cmc
xchg
mov
sub
imul
leave
or
pop
aad
lods
dec
cmpsb
out
imul
aam
dec
push
inc
mov
mov
cmp
jnp
popf
test
ja
inc
or
xor
bound
pop
ret
mov
push
push
adc
pop
jmp
shlb
jg
ja
pop
sbb
les
data16
daa
loop
jg
mov
dec
xor
mov
or
mov
test
repnz
stos
sub
repz
std
movsl
insb
mov
fabs
lock
pop
push
sub
scas
push
mov
pop
pop
adc
test
sarl
js
out
pop
lcall
ficoms
test
mov
es
sbb
popf
imul
test
xchg
mov
stc
mov
clc
push
lds
adc
pop
jp
ret
mov
gs
pop
dec
out
jbe
stos
repz
sbb
mov
xor
fadds
sti
inc
test
mov
push
pusha
jp
dec
das
sub
ds
insl
test
or
gs
cmp
xchg
dec
sbb
mov
pop
add
mov
ret
stos
dec
out
es
addr16
pop
das
rcl
jns
les
mov
add
push
rorl
or
inc
pusha
add
fdivrs
xchg
add
sub
mov
lock
jno
int
cmpsl
cmpsb
fs
mov
loopne
mov
mov
call
ja
and
call
daa
mov
es
sbb
cltd
movsl
push
das
outsb
pop
nop
call
inc
mov
addb
cld
xor
xlat
faddl
inc
lret
jge
into
and
scas
addr16
into
frstor
push
xchg
add
push
pushf
mov
cmpsb
add
rclb
jno
push
jmp
in
mov
and
inc
lea
jae
dec
frstor
inc
push
daa
call
mov
mov
pop
ret
lcall
mov
adc
mov
pop
in
add
mov
bsr
cmp
jo
push
or
out
cmp
mov
dec
cmp
mov
lret
or
cmc
sub
and
cmpsl
popf
mov
pop
sti
mov
int3
nop
ss
jp
mov
sub
xchg
xchg
int3
bound
xchg
mov
clc
aad
dec
and
int3
xor
pop
sbb
nop
mull
lret
sahf
lock
mov
xor
clc
and
sahf
and
add
mov
push
mov
pop
sbb
xor
sbb
adc
sbb
mov
add
and
sbb
pop
xchg
xchg
sar
or
mov
stos
inc
movsb
xchg
out
imul
xchg
int
lods
jmp
pushf
icebp
pop
repz
xchg
fidivl
mov
xlat
push
aaa
jbe
jle
jne
mov
stc
and
xor
and
arpl
aad
lret
dec
push
push
int3
ret
loop
or
mov
into
subb
lds
jnp
sub
out
repz
inc
mov
mov
xchg
es
add
fmul
jge
jg
test
in
push
bound
mov
ds
pop
aas
movb
dec
xchg
xorb
call
dec
adc
mov
xchg
cli
push
sbb
mov
push
ds
or
dec
jbe
xchg
popa
push
pop
rol
imul
pop
dec
pop
outsb
out
push
adc
dec
pop
lods
sbb
lea
mov
and
pop
insl
movsb
sahf
ret
jge
jg
test
lods
in
and
faddp
in
push
int3
les
in
jne
jp
adc
call
aam
add
mov
sub
add
inc
scas
sbb
sbb
dec
loopne
movsb
cwtl
scas
enter
cmpb
dec
cmp
pop
stc
in
mov
jnp
mov
arpl
pop
shl
push
insb
and
out
pop
xor
loopne
pop
ja
mov
inc
push
out
mov
sub
fsubl
lahf
call
push
gs
das
in
jbe
jge
iret
pop
jno
mov
stos
ret
stos
sarb
jo
cmp
fdivs
clc
aad
es
gs
lcall
imul
cmpsb
test
lcall
mov
sub
xor
xchg
popa
loope
adc
lret
fwait
mov
das
aaa
inc
sub
out
push
push
push
insb
fwait
das
imul
sub
cwtl
test
inc
jmp
ds
js
divb
outsl
jmp
jmp
lret
push
in
push
lock
push
cmpsl
jne
mov
in
add
ror
stos
lret
fucom
lcall
popa
jno,pt
and
pop
in
inc
cld
or
ss
shrl
and
jg
repnz
jb
es
xchg
or
or
xchg
aad
inc
inc
icebp
cmpsl
adc
adc
imul
icebp
xchg
roll
cltd
dec
sub
sarb
in
xor
pop
cmc
or
mov
mul
test
js
pop
int
or
out
ds
sbb
inc
xchg
out
lock
jmp
sbb
arpl
test
push
lret
add
push
outsl
sub
cmc
nopl
cld
jne
cs
outsb
fisttpll
xchg
mov
lea
and
dec
dec
cmp
ret
shrb
xchg
cwtl
out
jno
and
movsl
push
pop
add
add
fstps
jno
aad
pop
testl
mov
cmc
add
repz
sbb
int
arpl
addr16
mov
aad
add
shl
mov
jmp
hlt
loope
sbb
inc
leave
adc
ror
ja
fbld
cltd
insl
testl
xchg
xchg
dec
pop
jnp
inc
outsl
cs
jecxz
je
xor
repz
std
mov
outsl
and
test
shlb
add
test
push
ja
adc
and
repz
mov
lds
addr16
out
add
add
scas
and
adcb
std
in
pop
and
sbb
or
jno
xor
dec
cltd
mov
andb
mov
shll
fdivl
shl
mov
jns
mov
popf
data16
pop
dec
add
in
or
mov
out
dec
mov
arpl
mov
test
cmp
adc
cmp
and
mov
mov
lock
movb
outsb
adc
add
out
es
jns
call
fadds
test
in
sbb
pop
pop
or
xchg
pushf
in
pop
fnstenv
data16
imul
or
in
xchg
push
lods
or
jmp
faddp
imul
insl
lret
sarb
cmp
and
jns
ds
dec
lods
lock
push
test
arpl
pushf
in
or
loopne
adc
mov
lock
sub
loope
call
iret
fcoml
dec
mov
pop
adc
add
in
dec
sub
les
pop
pusha
pop
sub
dec
sub
dec
cmp
clc
sbb
negl
push
xor
fisttps
clc
or
sahf
mov
jg
cmp
mov
lcall
mov
push
sub
pop
mov
xchg
shll
sub
inc
lods
ss
mulb
or
mov
sbb
div
movl
ljmp
mov
lods
js
mov
sbbb
inc
push
fstps
icebp
es
repnz
pushf
fwait
adc
das
outsb
lds
notb
fldcw
jns
fmull
shll
inc
bnd
pop
stc
shrb
arpl
mov
sub
jbe
xlat
or
xchg
adc
sub
push
pop
inc
cmp
xchg
sbb
icebp
test
xchg
fwait
mov
inc
cltd
iret
mov
jg
pushf
add
xor
xchg
movsl
sbb
dec
lret
pop
jecxz
sub
test
lods
cwtl
push
jo
ret
fidivrl
cmpsb
mov
outsb
jg
or
jmp
mov
arpl
and
mov
fnstenv
cmc
data16
lock
bound
orl
xlat
les
add
xor
and
jne
rcl
fnstsw
jge
ret
inc
pop
fdivrl
add
push
pop
test
mov
sub
dec
adc
sahf
cmp
adcb
rolb
add
daa
lods
sti
in
jp
imul
cmp
shl
arpl
roll
int
or
data16
aaa
sbb
out
dec
nop
mov
jno
data16
iret
and
test
add
std
aaa
dec
jle
lahf
mov
adc
addr16
adc
jnp
add
cmpsb
mov
inc
mov
in
mov
jne
pop
add
pushf
pusha
out
mov
dec
inc
scas
andb
out
fstpl
int
cld
cmpb
xchg
cmpsl
ret
mov
je
and
xchg
pop
aaa
jnp
adc
xchg
cmp
je
daa
push
lcall
fbstp
dec
fildll
es
mov
stc
or
lds
dec
aas
outsb
jbe
mov
leave
adc
pop
rcrb
imul
in
enter
dec
mov
int3
xor
jno
mov
cmp
inc
cwtl
pushf
test
xor
inc
fiadds
pop
push
pop
xchg
xor
push
sbb
shlb
mov
mov
pop
add
xor
std
test
das
ds
ja
sti
ja
loopne
dec
addl
adc
mov
push
js
xchg
xchg
push
sub
frndint
dec
addr16
jl
sarb
data16
jle
mov
push
inc
sub
sbb
pop
jno
ret
or
sbb
out
dec
je
cmc
loop
push
jl
fwait
inc
jge
int
and
cmp
mov
mov
test
fnsetpm(287
adc
jge
rcrl
dec
sub
lds
add
or
fadds
imul
fs
movl
sti
outsb
lock
xorb
in
xchg
adc
pop
xchg
imul
xor
xor
adc
or
enter
adc
push
inc
aaa
lock
mov
repnz
and
cmp
enter
pop
mov
xchg
push
sahf
pop
mov
mov
and
mov
fistpl
and
xchg
lods
pusha
mov
mov
loop
dec
add
ficomps
jecxz
xchg
ret
mov
mov
mov
shl
and
push
inc
mov
xchg
int
dec
push
mov
in
dec
jl
fsubr
fwait
xor
mov
dec
inc
adc
sub
inc
ja
adc
dec
rcrl
push
rcrb
add
mov
sahf
mov
dec
enter
adc
fnstenv
outsl
mov
movsb
mov
ljmp
inc
xchg
mov
in
movsb
inc
mov
adc
mov
loop
push
pusha
inc
mov
insl
xor
lret
add
push
pop
mov
test
loop
iret
pop
xchg
mov
lahf
rorb
jb,pt
sahf
pop
lcall
and
sahf
dec
icebp
xor
pop
xchg
pop
lret
sub
mov
cli
in
mov
xor
mov
in
cltd
pop
outsb
lret
push
das
jmp
mov
pop
mov
cld
icebp
ficomps
mov
lret
inc
in
cmpsl
out
aas
xor
les
sbb
cwtl
or
ret
pop
ds
cmp
dec
das
and
cltd
test
jle
xchg
inc
insl
jnp
inc
clc
xor
shrl
push
std
mov
push
andl
lds
imull
stos
adc
and
xchg
in
cmp
mov
and
insb
enter
push
cmp
and
jae
stos
cmc
aas
data16
addr16
dec
mov
xlat
cmp
xchg
or
push
xchg
sahf
jl
jg
jge
sahf
inc
mov
push
fmulp
loop
mov
mov
lea
in
loopne
imul
inc
in
test
fsubs
fnstenv
xchg
lock
jb
loope
push
gs
icebp
inc
or
inc
pop
push
or
jne
fcompl
ficoms
xchg
arpl
cmpsb
mov
mov
std
jae
mov
movsl
stos
test
loop
inc
and
jmp
nop
mov
mov
stos
out
mov
ffreep
cmpsb
loope
sub
stc
pop
add
jge
dec
and
sub
mov
das
xchg
adc
popa
dec
jge
mov
xchg
lea
aam
xchg
std
or
push
gs
mov
inc
out
push
adc
pop
fs
rclw
jl
jl
jl
ficoms
sub
adc
aas
je
enter
cmp
push
roll
int3
mov
gs
dec
push
icebp
fmull
sbb
in
push
lcall
xor
imul
cmc
insb
fstpl
fisubrs
bound
mov
dec
and
mov
test
in
icebp
ja
xchg
or
add
sti
sbb
sbb
pushf
xor
jmp
lahf
popf
mov
push
dec
mov
cmpsb
pop
mov
sub
mov
fcmovnbe
bound
inc
dec
add
cmp
mov
cli
loope
fcmovnu
fxch
mov
pop
int
push
mov
cs
xchg
hlt
repz
in
std
jg
xchg
add
stos
inc
cmovnp
add
divb
sub
cmp
jl
sbb
mov
je
jbe
cli
stos
xor
repnz
scas
push
lods
orl
inc
ljmp
dec
xchg
mov
inc
daa
cmpb
lods
jp
in
xchg
inc
ljmp
add
add
notl
mov
shlb
dec
and
cld
cmp
mov
test
repnz
aad
push
loope
int3
ds
lock
mov
adc
stc
sbb
sti
jno
jl
inc
jnp
push
inc
in
push
jg
push
push
loope
mov
out
test
and
ja
push
sub
insl
mov
or
aaa
lods
mov
fcomps
jle
sub
in
mov
shl
lea
push
push
cmp
inc
xor
test
inc
ja
add
stc
jl
jge
aas
xchg
das
push
outsb
outsb
or
fcoml
out
cwtl
inc
cmp
mov
push
sub
daa
loopne
jl
fcoms
inc
sbbb
aas
idivb
shlb
push
cmc
loop
movsb
cwtl
bound
adc
lds
jnp
dec
out
dec
jno
jecxz
stc
cmp
loop
jecxz
mov
lcall
and
lret
dec
stc
or
aad
mov
add
sbb
jnp
fdivrl
hlt
xor
sbb
or
pop
and
stos
repz
xor
hlt
jbe
jne
dec
mov
into
rcl
ds
arpl
push
adc
inc
clc
fs
jecxz
jl
push
xchg
jp
scas
mov
loopne
outsb
into
mov
or
inc
repnz
fwait
xor
ret
mov
push
repz
pop
adc
lcall
movsb
jb
mov
fwait
or
mov
add
push
push
into
aas
push
loope
cs
lods
mov
shr
cmc
js
or
mov
mov
aam
cli
cltd
sbb
push
mov
pop
inc
imul
mov
pusha
iret
inc
and
mov
imul
mov
push
cmp
cmpsl
and
add
and
test
push
mov
fistps
clc
cltd
adc
scas
mov
fldcw
ret
sub
and
bound
mov
divb
adc
addr16
not
scas
cmpsb
sub
push
iret
xchg
shlb
push
in
daa
cmc
shl
test
add
movsb
push
incl
mov
sbb
xlat
inc
inc
jnp
push
ja
pop
or
push
pop
lock
xlat
negl
clc
push
adc
es
rcrb
add
pop
dec
cmc
or
or
jge
rcl
dec
push
popf
rorl
in
insb
mov
push
test
fidivs
add
or
push
outsb
xor
xchg
pop
fmul
daa
push
cmpsb
jp
js
mov
jmp
cmp
add
cmp
popf
xchg
loopne
ss
sti
out
out
sbb
flds
adc
and
fwait
mov
scas
das
lods
jo
push
insl
fs
pusha
ret
cmp
les
in
dec
cs
mov
andl
sub
les
sbb
ds
aas
nop
jns
orb
movsb
test
stc
mov
icebp
mov
ja
jne
cmp
popl
jns
stos
pop
or
out
cwtl
lds
mov
pop
or
mov
jg
jnp
in
or
inc
xor
push
enter
add
in
xchg
cmp
sbb
xchg
bound
or
xchg
lods
sub
shlb
stos
int3
andl
cli
push
mov
dec
popf
inc
or
popa
enter
or
popf
loop
and
and
test
ljmp
xchg
lods
jbe
ljmp
lret
mov
mov
repz
cs
sub
lds
sub
addr16
outsl
or
das
push
cmp
movsl
lods
mov
int
lods
pop
pop
add
sbb
mov
lock
hlt
aad
stos
jmp
rorb
fbstp
fucomp
mov
and
dec
pop
push
shll
jmp
mov
dec
dec
push
sub
fstpl
and
mov
addr16
flds
xchg
rclb
sub
fistl
dec
pushf
mov
aas
dec
aaa
and
jp
clc
ffree
cmp
push
cs
xor
das
inc
sti
lcall
test
push
daa
push
leave
dec
repnz
add
inc
cmpsb
and
out
lret
push
push
jnp
ja
roll
cmp
xor
out
or
sahf
ret
jne
outsl
xor
and
pop
add
or
shrl
add
fistps
xchg
out
inc
je
fmul
push
jae
cmpsb
cmpsl
sub
mov
fimuls
dec
xlat
rcl
pop
ja
movsb
push
mov
iret
leave
hlt
ret
in
push
push
les
dec
loopne
rol
test
cwtl
add
rcrb
push
pushf
sbb
push
jnp
jae
adc
sub
fwait
das
mov
cld
and
imul
fdivrs
aaa
push
mov
inc
sub
or
lret
incb
call
push
xlat
push
ljmp
scas
mov
out
imul
pop
ret
andb
das
mov
lcall
fldcw
mov
stos
xchg
jne
pop
mov
adc
les
mov
stos
pop
sbb
dec
outsl
aad
xor
adc
inc
clc
test
inc
pop
aas
mov
sub
test
pop
adc
popa
stos
fsubrl
dec
pop
jecxz
scas
inc
call
inc
pop
loopne
js
jp
movsb
xchg
pop
mov
mov
cmp
inc
cmpb
or
test
mov
push
xchg
dec
xchg
adc
xchg
ljmpw
in
inc
es
fisttpl
mov
insb
xchg
dec
inc
dec
fucomi
jp
out
inc
stc
enter
jae
xor
mov
inc
pop
pop
insb
sub
inc
pop
stc
loope
fstps
ficoml
fidivrs
mov
add
iret
jo
dec
push
dec
xor
testl
dec
bound
pop
es
xor
jge
aas
loope
xor
mov
aam
push
push
mov
adc
fstl
stos
push
sbb
jg
mov
aas
outsl
nop
ret
xchg
mov
add
mov
lcall
mov
add
test
stc
aas
test
jbe
inc
sbb
mov
repz
mov
xor
ljmp
aaa
and
lea
je
push
ds
mov
loope
xor
and
and
andl
mov
out
sbb
xchg
into
adc
adc
adc
enter
enter
push
dec
mov
and
or
ret
adc
xlat
jo
pop
xchg
jns
mov
lahf
das
add
adc
ret
push
jl
sbb
pop
nopl
loop
fsubr
fimuls
add
test
insb
mov
and
pop
das
sbb
mov
or
fsubrl
loop
jb
pusha
insb
jno
test
enter
xchg
addr16
clc
popf
sbb
mov
iret
mov
test
inc
icebp
jae
pop
int
arpl
pop
jle
out
xor
add
mull
cmp
test
inc
pop
xor
fs
fisttpl
mov
pop
notrack
fmuls
cltd
xchg
pushf
pusha
es
test
int
xor
sti
inc
pop
lahf
pop
ja
xor
cmp
adc
adc
ret
add
cli
repnz
xchg
loopne
mov
mov
mov
sbb
push
insb
mov
mov
xlat
pusha
xor
inc
mov
pop
jmp
mov
cmp
xor
in
fldenv
rclb
sub
push
iret
mov
int
lcall
dec
push
xor
mov
fadds
or
aaa
rcrl
xchg
pushf
int
rorl
push
inc
insl
cltd
jg
movsl
pop
dec
shlb
mov
out
test
or
sub
or
lods
push
out
xor
push
jnp
sub
and
les
aam
cs
shll
int
mov
and
dec
cwtl
leave
mov
xchg
inc
dec
je
adc
ss
cli
xor
insl
gs
dec
sub
mov
dec
int3
mov
arpl
not
xchg
scas
cmp
mull
sti
leave
pop
and
mov
pusha
or
fldenv
add
or
push
cld
imul
and
add
jbe
fnsave
cmp
lds
fisttps
mov
xchg
cmc
lahf
sbb
in
jg
ret
dec
jbe
lods
addb
add
cld
jl
gs
xchg
mov
jmp
cmpsb
push
inc
mov
ret
xchg
and
icebp
adc
pop
insl
or
clc
pop
or
ret
mov
jno
mov
mov
neg
inc
in
sub
jbe
jge
loopne
pusha
adc
je
imul
jns
push
mov
adc
xor
pop
xchg
in
out
mov
pop
pop
mov
dec
inc
cmp
test
or
cmc
lds
or
adcl
ds
cmp
mov
adc
clc
pop
repnz
or
lcall
sti
negb
xchg
dec
or
rol
and
jbe
leave
stos
push
sub
fldl
repnz
insb
jb
mov
sarb
mov
cmp
and
dec
jl
test
adc
cltd
push
rorl
negb
call
mov
mov
mov
popf
inc
movb
mov
lret
je
and
aas
rol
push
xchg
arpl
int
call
jecxz
pop
aam
in
or
xchg
aad
loope
fstps
add
mov
dec
imul
jge
icebp
jb
pop
lahf
vmread
mov
sbb
xchg
jmp
outsl
enter
pop
sbb
iret
sti
out
or
shrl
jmp
ret
sti
inc
or
sub
and
xchg
push
push
cmp
mov
sbb
mov
dec
add
movsb
dec
jbe
bound
pop
nop
imul
das
sbb
dec
shrl
daa
das
mov
pop
adcl
jge
sbb
push
iret
rorb
xor
mov
sub
popf
test
stc
xchg
fiaddl
movq
push
mov
xor
adc
jg
cmp
lret
fistpl
leave
movsl
inc
or
lods
add
repnz
xchg
jp
cmp
pop
mov
fistpl
inc
mov
rcr
and
xrelease
mov
xchg
fwait
cwtl
pop
insb
enter
mov
mov
cmc
sbb
fnstenv
jmp
test
or
cmpsb
cwtl
mov
push
sbb
push
ds
lret
xor
pop
cmpb
popa
rorb
push
dec
adc
fnstcw
xlat
fnstcw
sbb
pusha
xor
pop
adc
mov
cmp
je
jp
lds
push
pop
sahf
dec
mov
stos
add
cmp
std
jae
pop
adc
jno
ja
jecxz
cmp
cld
add
js
jno
xor
pop
pop
lret
lds
jo
inc
xor
call
add
out
cltd
bound
dec
pop
push
ljmp
jmp
mov
mov
add
pop
lret
inc
mov
pop
cmpl
cli
fwait
inc
cmp
mov
adc
dec
aad
int3
push
mov
push
and
and
xchg
scas
lret
jne
out
pop
ret
outsl
xchg
lds
sbb
push
lods
movsl
in
faddl
and
cmp
mov
push
in
inc
pop
adc
inc
lods
jp
rcrb
leave
ss
mov
dec
je
adc
int
jns
dec
loopne
pop
loopne
inc
mov
mov
mov
out
lret
cmp
xorb
jge
scas
pop
retw
inc
lret
xor
push
xchg
jecxz
popa
stc
ficompl
icebp
add
pop
cs
jmp
jle
jo
pusha
dec
or
add
loop
icebp
mov
pop
or
icebp
aaa
loope
and
scas
jecxz
mov
addr16
shlb
test
push
cmp
addr16
mov
not
ljmp
adc
ss
inc
cmp
out
pushf
push
push
add
repnz
sub
sti
cli
call
mov
xchg
pusha
daa
mov
and
jmp
dec
push
jge
icebp
and
loope
icebp
and
test
movsb
sbb
jo
add
mov
stos
les
mov
mov
rcr
xor
xlat
test
lcall
test
sub
mov
scas
sub
jbe
inc
and
mov
loopne
aaa
cmp
sub
in
push
mov
push
mov
xchg
xchg
fadds
add
sub
lcall
test
ds
sahf
mov
out
or
lret
and
enter
scas
lret
imul
cltd
or
cmpl
or
dec
and
jl
lcall
cmp
pop
outsl
cs
test
jbe
jae
inc
pop
out
jp
cmp
das
scas
or
mov
sbb
xor
mov
lret
fcompl
mov
fdivrl
dec
roll
cmp
addr16
push
dec
mov
negb
inc
es
icebp
adc
mov
pop
jns
ret
sbb
and
mov
clc
mov
cmpsl
ja
xchg
lods
mov
in
add
outsb
jns
push
out
cmp
lret
fidivrl
sub
jp
fldenv
leave
push
rcll
jge
mov
and
mov
popa
push
aas
fcompl
out
add
jecxz
sbb
mov
jge
inc
addr16
and
mov
out
clc
sahf
rol
jge
push
or
cmp
jne
jbe
cld
dec
sbb
xchg
shlb
inc
or
in
fsubl
fwait
lock
jae
sti
cmpl
push
mov
jo
rol
xchg
sub
sbbb
lea
sbb
sub
sub
das
aad
arpl
adc
mov
rcll
aaa
mov
outsb
imull
leave
jp
dec
cmp
je
pop
and
jae
popa
pop
cmp
jb
pop
insl
mov
inc
xchg
pop
dec
insb
push
dec
ret
dec
into
push
mov
jne
fucom
pushf
mov
push
lods
cmpl
inc
dec
push
notl
mov
js
cmp
mov
sbb
xor
repnz
jbe
push
aam
mov
pop
cmpsb
insb
pusha
sbb
lods
mov
sbb
filds
iret
scas
mov
pop
test
adc
dec
sbb
bound
sarb
imul
jecxz
mov
adc
push
jmp
addr16
push
outsb
js
sti
push
add
and
xor
loopne
scas
and
xchg
rcll
mov
xchg
inc
sbb
jb
fisttpll
scas
push
lock
xchg
repz
idivb
dec
mov
int
cs
ficoml
lds
xlat
sbb
imul
pop
in
push
fs
int3
inc
add
sub
fldt
jecxz
shll
mov
cmp
inc
outsb
xor
daa
pop
adc
negb
sbb
jge
push
cmp
and
scas
mov
in
jae
dec
je
repz
fldcw
jno
dec
aad
loop
or
ds
je
jbe
push
xlat
pop
adc
ds
dec
xchg
push
or
push
jae
xchg
mov
cmp
mov
mov
insl
repz
inc
mov
and
jmp
mov
subl
xor
aas
xor
push
mov
js
inc
inc
loopne
shlb
sub
test
jo
push
pop
not
sub
in
cld
dec
push
pop
roll
pop
sub
cld
out
jno
popf
fisttpll
cmpsl
jle
sub
mov
pop
scas
adc
pusha
and
xor
outsb
je
mov
pop
mov
jb
scas
cwtl
and
aas
sbb
inc
out
daa
shl
sti
cmp
jmp
xchg
fs
sti
add
add
mov
sbb
aas
pop
in
out
xlat
mulb
cmp
xor
out
sbb
outsl
loope
sub
push
cmp
inc
mov
sub
and
jno
add
sub
mov
test
and
shr
pop
jb
adc
jge
pop
push
nop
lahf
dec
popa
notb
ret
and
test
xchg
mov
mov
dec
mov
je
xor
pop
jecxz
push
jo
lret
adc
cwtl
cs
mov
sarl
push
popa
push
dec
and
nop
sub
pop
jl
cwtl
pusha
out
imul
adc
adc
dec
push
or
shr
loope
inc
mov
andb
pop
push
jnp
jb
sbb
shrb
repnz
pop
lods
out
push
push
mov
fwait
push
mov
dec
nop
mov
pop
jae
xchg
das
and
mov
xchg
ret
lods
movswl
fdivl
outsl
repz
int3
in
jno
fsubr
cmpsl
sub
push
pop
sti
jge
es
add
shlb
pop
pop
xor
push
mov
fwait
and
dec
ds
fdivrs
lahf
mov
mov
shll
daa
lcall
xchg
mov
mov
gs
int
fucomip
cmp
outsl
lock
mov
mov
sbb
cmpsl
mov
clc
adc
aas
add
insb
jo
stos
cmp
rcr
mov
loope
adcb
push
divl
jmp
pop
int3
xor
popf
scas
mov
inc
jg
xchg
sahf
inc
imul
pushf
dec
jne
add
loopne
mov
inc
out
ret
or
xor
aaa
out
fstpl
in
inc
aas
dec
push
xor
out
imul
mov
xor
pop
inc
aad
fisttpll
pop
jb
or
jge
dec
xchg
je
jno
or
sahf
pop
push
and
fwait
into
jecxz
or
push
adc
addb
add
test
dec
sub
fwait
mov
sub
aam
imul
cwtl
in
push
cmp
xchg
int3
fmull
pushf
or
js
mov
stos
push
sbb
jmp
cwtl
mov
inc
mov
loop
lret
iret
adc
cltd
push
ficompl
pushf
aas
xchg
sbb
add
push
sbb
fsubrs
scas
cld
ja
outsb
add
mov
lds
cmpsb
mov
dec
aam
ret
mov
leave
push
pop
ds
cmp
mov
sbb
in
repnz
ret
rcrl
xchg
ljmp
push
xchg
ret
movb
loopne
or
xchg
cmpl
hlt
cwtl
adc
push
hlt
cwtl
mov
inc
into
push
mov
scas
int3
aaa
fwait
sub
scas
rorl
jge
xor
mov
pop
inc
mov
dec
scas
jmp
mov
aas
inc
mov
fsubs
fsubl
call
daa
imulb
aad
scas
sub
call
add
rolb
xor
pop
daa
adc
rcrl
sub
ficomps
dec
push
sub
mov
ja
rolb
roll
mov
and
mov
cli
aad
jo
lods
pop
leave
mov
iret
jmp
jne
push
bound
and
xchg
dec
dec
sti
inc
insl
insl
insl
cmp
imul
aaa
shlb
addl
add
cltd
pop
into
scas
or
out
xor
inc
mov
nop
pushf
shrb
mov
aam
call
test
push
fs
jp
dec
clc
push
mov
xchg
inc
adc
xchg
pusha
ja
shr
sub
xor
out
mov
scas
and
enter
dec
mov
mov
adcb
daa
mov
mov
pop
pusha
mov
cmpsl
adc
rol
fs
mov
push
imul
icebp
pop
ja
push
data16
daa
ffree
test
push
pushf
jle
push
push
loopne
pop
add
repnz
mov
and
sbb
out
push
pusha
sub
xorl
or
and
in
outsl
cli
dec
mov
xlat
fstpt
mov
adc
jmp
push
stc
xchg
out
inc
dec
or
inc
lods
lock
cmp
or
fists
lods
jbe
loopne
daa
push
push
dec
into
mov
test
xor
add
lods
pusha
in
pop
sbb
bound
cmp
adc
sbb
xor
push
xor
test
xchg
fisubs
in
nop
pop
out
adc
outsl
dec
repnz
scas
popa
mov
pop
lret
or
cmp
xor
inc
mov
sbb
xchg
sub
xchg
hlt
inc
in
adc
cmp
or
icebp
jo
repnz
rcrl
inc
pushf
xchg
mov
jmp
aad
or
out
and
clc
shr
out
sub
jb
fdivs
cmp
cmp
mov
pop
mov
std
jb
cmpsl
add
adc
sub
je
lods
sub
mov
int3
int
out
mov
jmp
test
jns
add
lods
das
iret
in
fistpll
in
adc
mov
sbb
mov
dec
in
bound
in
sbbl
xchg
inc
ljmp
mov
hlt
test
jnp
ja,pt
xchg
dec
cmp
pushf
fisttpl
outsb
mov
jno
mov
or
dec
dec
sub
loop
add
mov
lcall
ds
inc
cmp
jno
sub
mov
fs
mov
aam
inc
loop
test
cmp
lods
test
sub
nop
xchg
sbb
pop
icebp
shrb
cmp
cmpb
stos
insl
dec
inc
mov
imul
mov
mov
pop
jbe
add
xchg
int
decl
sbb
movsb
sub
ja
fs
pop
mov
fisttpll
mov
or
rolb
stos
mov
arpl
shll
adc
dec
aam
arpl
jbe
and
xchg
xchg
or
sub
add
adc
and
jg
incl
add
int3
jae
jbe
xor
lahf
inc
lret
pop
lret
and
test
add
loopne
fidivs
aaa
push
jb
pop
orl
cld
outsb
outsl
and
enter
mov
and
les
dec
mov
subl
aas
inc
stc
jp
cmp
stos
sub
jl
and
push
jle
jo
fnstcw
cs
int3
in
sbb
mov
push
xchg
into
mov
mov
sub
push
out
lret
and
inc
adc
popf
mov
mov
lods
sub
ds
lods
imul
rol
inc
in
or
add
inc
testb
jmp
outsl
popf
mov
or
lcall
mov
cmp
call
dec
or
movsb
push
pusha
and
sbb
mov
sub
sti
xchg
sbb
inc
lea
push
popa
rcrb
pop
imul
mov
push
hlt
pop
jae
mov
aam
pop
popf
pusha
filds
pop
dec
addb
cmp
mul
cmp
inc
test
mov
jo
stos
aas
imul
jns
sti
inc
jecxz
pop
test
cmp
lcall
jle
mov
mov
cmc
pusha
gs
outsl
adc
jbe
fidivl
fmull
pop
pop
inc
bound
lahf
push
gs
int
xchg
sub
or
push
inc
cmpsb
fildl
xchg
mov
pop
jbe
dec
inc
push
or
aam
push
jnp
jl
pop
adc
sbb
push
pop
xor
adc
inc
stos
testl
xor
pop
bound
xor
pop
adc
ret
repnz
push
imul
cs
imul
inc
inc
out
inc
push
fsubl
lret
and
nop
nop
popf
xchg
in
pop
ret
sub
and
pop
mov
std
pop
mov
ljmp
addl
sbb
hlt
mov
sbb
dec
insl
mov
lock
movsb
movsl
ds
adc
outsl
xchg
leave
ljmp
cmp
push
push
jns
mov
clc
scas
ficoms
in
sbb
mov
mov
stos
xorl
shl
push
jge
push
ret
sbb
loope
mov
in
sbb
xor
les
adc
xchg
shr
add
pop
hlt
adc
mov
mov
cmpsb
add
pushl
mov
cmpb
and
mov
cli
dec
pop
je
repnz
mov
jle
pop
test
sti
jg
sbb
fdivrs
shll
cmp
repnz
xchg
dec
adc
stos
dec
pushf
les
icebp
ds
rcl
adc
fstps
push
push
lret
and
add
jae
insb
push
mov
add
sub
inc
mov
or
jns
jp
mov
xchg
lahf
sbb
dec
cli
mov
sub
mov
imul
and
adc
aad
daa
mov
imul
cmp
aam
adc
push
ret
push
sub
jl
add
push
mov
imull
outsl
in
leave
sbb
jne
outsl
shlb
mov
gs
mov
in
mov
sub
flds
subps
scas
xchg
mov
mov
sub
push
xorb
pop
inc
ret
fisttpl
decb
push
adc
jle
sub
cmpsl
jmp
cs
ds
repz
push
int3
ret
cmpsb
je
lea
mov
jge
lods
sbb
push
ror
jl
adc
scas
lods
nop
inc
xor
push
add
sub
push
mov
push
jne
mov
sar
mov
dec
scas
pop
fs
mov
xchg
lret
out
pop
and
repz
lods
sbbb
sbb
shll
push
and
jne
clc
cmpsb
sub
shr
mov
jo
stc
lea
cmp
pavgb
sub
push
mov
lds
les
pushf
add
xchg
andl
sahf
popa
sub
jmp
aas
rolb
jle
imul
shrl
cs
jno
imul
adc
sub
pop
mov
xchg
cmc
push
in
xor
cmpb
and
enter
cmc
mov
icebp
mov
xchg
xor
rorb
push
shll
lea
inc
sti
cli
test
neg
mov
xor
outsb
lods
jl
rorl
cs
xlat
in
mov
les
cmp
ret
call
test
cmp
and
mov
push
into
call
test
mov
outsl
mov
and
add
pextrw
push
push
mov
inc
outsb
fidivs
sub
inc
jne
xor
mov
testb
fstpt
and
jb
bswap
out
jmp
arpl
mov
and
std
mov
jecxz
xchg
pop
icebp
or
sbb
mov
aam
pop
jo
mov
sub
xchg
imul
or
mov
push
or
push
fsubrp
adc
cli
push
imul
pusha
hlt
mov
mov
aad
dec
stos
mov
fists
data16
push
push
add
scas
push
psubd
inc
shl
mov
ss
xorb
cmp
stc
cld
addr16
je
into
xchg
inc
mov
dec
repnz
push
or
stc
mull
pop
jb
das
xchg
mov
lret
push
jns
icebp
pop
sbb
pop
imul
xchg
inc
mov
add
les
adc
mov
push
mov
out
std
in
lret
div
adc
js
lret
pop
push
pop
pop
sub
ds
push
bound
fs
dec
int3
loop
sbb
add
jg
lods
ds
mov
je
lcall
mov
mov
data16
and
inc
outsl
shrl
test
inc
rcrb
xchg
popa
call
pop
dec
stos
sub
push
jecxz
fstl
fnstcw
cltd
add
xchg
xchg
cmp
lret
fstpt
lret
push
pop
sbb
pcmpeqb
rol
shl
into
xchg
aam
into
mov
or
mov
adc
ficomps
cs
add
jno
sbb
inc
mov
mov
sub
std
stos
shl
fldenv
out
push
stos
xlat
mov
int
mov
cltd
lds
cmc
or
es
pop
pop
mov
stc
jecxz
aaa
roll
or
push
cwtl
fwait
pop
add
pop
add
mov
xchg
in
popl
sbb
jnp
addr16
xlat
lods
pop
sub
fnstcw
and
rcll
addr16
data16
jg,pt
mov
adc
aad
dec
andb
push
leave
fs
push
mov
mov
fdivr
cmp
imul
adc
jbe
cmc
cmpsl
repz
das
jo
ret
pop
sti
mov
or
sbb
xor
pop
sub
mov
sahf
fidivrs
dec
or
add
loop
cltd
pop
lods
push
idiv
sub
pop
jo
mov
das
and
jno
jg
addl
pop
jl
or
xchg
je
jae
fists
out
adc
lahf
repnz
pop
ds
jo
sarb
sarb
inc
hlt
or
das
mov
lret
adc
shlb
rorb
adc
sbb
je
jno
add
pop
popa
adc
sbb
mov
push
xchg
je
xchg
mov
sarb
and
cmp
subl
pop
out
adc
pop
push
loop
mov
or
fnstenv
mov
lret
xchg
lcall
in
xlat
lea
xor
test
popa
pop
jge
and
xchg
es
xchg
jo
nop
fs
cmpsb
mov
enter
mov
xchg
repz
dec
movsl
mov
ficompl
pop
inc
sar
push
mov
incl
fptan
int3
push
sbb
ret
push
imul
push
add
xchg
lcall
inc
mov
lcall
fucomp
aaa
dec
test
mov
pop
out
mov
mov
rclb
shrl
xor
xor
sub
sarl
xor
sbb
inc
popa
sbb
sub
pop
jl
inc
or
or
sub
jg
adc
cmpl
push
daa
mov
jo
popf
cmp
and
pop
popf
fsts
shl
and
movsb
sti
stos
aam
iret
imul
mov
test
inc
push
iret
sub
lods
xchg
aam
fmuls
mov
cli
cmpsl
mov
cwtl
jmp
shrl
rorb
icebp
xchg
xchg
mov
or
mov
rol
dec
pop
mov
lcall
rcrl
int
xor
mov
repnz
fstpt
push
dec
out
in
xchg
fisubrs
movsb
gs
xchg
mov
push
mov
insl
lods
xlat
add
xchg
jns
aaa
aaa
ret
insl
or
or
pop
adc
nop
cmp
inc
inc
pop
mov
imul
enter
xor
jmp
xchg
enter
or
imul
les
into
cli
dec
lret
pop
cmp
push
mov
pop
stc
mov
cli
int
dec
outsb
inc
into
ret
push
mov
ret
xor
call
idivb
and
xlat
lock
sub
popa
sti
movsb
sub
call
xchg
mov
test
dec
test
mov
jae
jb
pop
cmpsw
stc
mov
adc
sbb
sahf
cmp
cmpsl
or
lret
adc
fidivl
lret
mov
inc
or
scas
ds
aad
inc
push
daa
loop
mov
out
xchg
test
aad
adc
cli
xchg
lods
jnp
xchg
push
lock
pop
fs
dec
pusha
pop
mov
arpl
mov
push
jmp
lds
rcl
mov
andl
imul
loope
jle
mov
push
imulb
mov
stc
out
xor
scas
sub
and
sahf
pop
pushf
icebp
rcrb
ret
xchg
cmpsl
enter
call
sbb
rcrl
insb
test
cmpsl
sub
push
sub
mov
mov
aaa
mov
je
clc
loop
jns
jno
in
stos
xchg
sbb
pop
mov
int
mov
gs
popa
push
or
lcall
or
push
test
cmp
xchg
inc
ds
jge
pop
jns
jae
lds
nop
sbb
movsb
push
mov
fdivs
jno
xchg
fcomip
mov
pop
add
xchg
sbb
pusha
test
fidivrs
lods
enter
fs
sub
add
push
pusha
mov
js
jnp
cmp
push
cltd
ljmp
jns
outsl
js
pop
xchg
es
ss
cmp
mov
pusha
xchg
stos
mov
dec
and
cld
or
pop
lods
sbb
dec
cmp
push
sbbb
sub
dec
mov
cmp
fs
rorl
cmp
dec
scas
mov
add
or
add
cli
push
adc
mov
adc
popf
inc
cs
inc
jg
mov
xchg
push
stos
es
shll
jbe
mov
scas
rcl
add
and
push
rolb
adc
bound
push
jbe
xchg
leave
adc
int3
mov
sub
mov
insl
adc
mov
jo
outsb
push
or
jb
cmp
mov
cmpsb
clc
addr16
or
mov
adc
mov
pop
push
push
mov
or
imul
mov
out
scas
movsbl
mov
in
xchg
lea
inc
and
jmp
pop
fidivrs
cmpsb
jge
sub
push
or
cld
popf
push
loope
js
fistps
es
out
pop
loop
js
rorl
out
pop
lahf
cltd
dec
loop
cld
adc
scas
popa
sbb
test
xor
sub
mov
test
add
hlt
push
adc
repz
inc
aas
mov
add
iret
clc
cwtl
in
mov
and
add
mov
xor
mov
out
stos
mov
xlat
mov
enter
add
inc
or
test
cld
mov
cmp
ret
dec
popf
loope
int
push
ror
sbbb
xchg
std
mov
cmp
addr16
cmp
aam
gs
cwtl
and
popa
jnp
stos
add
and
popa
lods
sbb
and
enter
and
aad
dec
pop
push
in
inc
push
xor
xor
push
add
es
repz
pop
aas
jmp
xor
les
mov
jge
add
push
ja,pt
mov
pop
idivl
repnz
sbb
addr16
lret
leave
inc
arpl
ret
sub
pushf
xlat
jg
push
xchg
inc
ret
mov
shl
lea
out
push
pop
arpl
jge
repnz
push
ss
push
push
cs
insl
das
jecxz
fildll
mov
jno
mov
ss
xchg
pop
sub
addr16
sbb
jp
push
jnp
test
dec
mov
je
jecxz
mov
pop
enter
test
xchg
push
push
sbb
mov
sbb
mov
or
loope
inc
cmp
pop
loope
outsb
mov
test
cld
cmc
push
popf
xor
sarb
loope
lret
fnstenv
mov
adc
mov
add
rolb
rcrl
stc
dec
and
pusha
int3
out
mov
lret
int
jmp
adc
mov
js
out
mov
sbb
lret
inc
cmpsl
push
sbb
outsb
cmp
mov
dec
sti
hlt
jb
aas
insb
pop
mov
cmp
mov
enter
aam
scas
sub
clc
push
stos
stc
xchg
mov
push
jne
stc
into
cmp
pop
jmp
stc
mov
jmp
outsl
lret
add
movsb
adc
mulb
mov
push
cs
jns
loop
adc
or
adc
out
push
add
mov
pop
lret
data16
out
xor
add
xchg
pop
xor
push
push
adc
popf
or
in
lcall
and
andb
out
push
mov
sub
push
andb
sub
xchg
sub
sub
ja
aad
nop
inc
jae
sahf
cmpsl
mov
sahf
int3
xchg
jg
flds
test
xchg
loope
cmp
enter
and
add
lea
xor
mov
lahf
loopne
pop
int3
movb
inc
jno
push
nop
mov
add
dec
add
mov
pop
inc
mov
addr16
mov
xchg
inc
insb
jno
dec
jge
mov
ret
fwait
mov
pop
sbb
sub
or
mov
push
fsts
and
push
push
popa
out
inc
in
out
fbstp
or
sub
ret
adc
lods
es
call
ret
es
adc
ret
scas
pop
lcall
pop
pusha
dec
out
test
call
ljmp
mov
or
pop
aad
lret
leave
pop
cmpsl
xchg
push
mov
iret
cs
cli
pop
cs
lods
ficoml
xchg
sub
dec
stos
or
out
sbb
daa
pop
add
fisttpll
popa
arpl
pop
mov
cmp
jle
pop
xlat
or
xor
ss
fidivs
cwtl
aaa
sbb
or
cmp
bound
pop
sbb
insl
into
sub
out
cld
xchg
pop
dec
push
mov
test
iret
inc
adc
fsubrp
xchg
addr16
ret
or
mov
mov
jge
mov
add
leave
or
bnd
push
fcom
pop
lret
cmpsl
mov
jbe
jp
sahf
inc
cli
inc
sub
cmp
icebp
push
icebp
addb
pop
dec
outsb
sbb
movsl
in
sub
push
gs
lods
daa
pop
shll
xor
add
fcoml
inc
rcr
dec
cmp
pop
fsubs
mov
sbb
jae
fistpll
or
rclb
add
xchg
cmpsl
imul
and
cmp
mov
cmpl
xchg
rcll
dec
fsubr
idivl
aas
iret
sahf
lods
lds
xor
push
lods
call
xorl
outsb
imul
and
xchg
rolb
aas
aam
adc
xor
dec
test
jecxz
cmp
adc
cli
sbb
xlat
and
pusha
into
stos
mov
fxch
pop
scas
inc
mov
js
sub
int3
or
int3
sub
jp
repnz
enter
roll
jl
mov
pop
pushf
test
and
test
aas
inc
sarb
adc
shll
js
repnz
mov
adc
cld
xor
pop
jb
jp
ja
sti
inc
jb
out
xor
fimuls
mov
shlb
cli
jle
or
pop
mov
jne
in
inc
inc
sub
sbb
nop
into
lahf
sbb
adc
mov
pushf
push
mov
jne
xchg
mov
add
out
daa
pop
pusha
lds
into
leave
fsubl
roll
insb
mov
cs
arpl
add
clc
cmp
icebp
fs
inc
xlat
into
dec
add
inc
cs
movsl
mov
push
lds
or
mov
pop
push
jbe
fsubs
cmp
inc
ficomps
hlt
sub
sete
insb
push
fstl
stos
mov
mov
ss
movsl
movsb
loopne
sbb
inc
ret
sbb
xor
xchg
jae
xlat
shr
or
or
pusha
sbbb
icebp
sub
jge
mov
je
in
stos
ss
mov
sbb
and
aad
jo
fs
adc
pop
pushf
add
cwtl
je,pt
sub
adc
xor
xchg
je
push
outsl
in
xor
lock
jae
jns
out
cmpb
roll
loop
xchg
outsb
xchg
mov
mov
ja
inc
mov
jle
add
scas
xlat
cmpsb
push
mov
xchg
mov
enter
push
sub
pop
or
mov
or
ss
sbb
mov
mov
icebp
negl
xchg
out
jmp
ds
push
xchg
std
fisubs
in
mov
mov
roll
and
insb
push
mov
sub
mov
test
stc
data16
xor
jle
sarb
xor
push
call
dec
arpl
dec
add
adc
add
pop
inc
push
xchg
jnp
sub
imul
add
dec
sbb
push
mov
push
and
adc
js
push
negl
sub
rcl
cmp
shrb
shrb
jnp
loope
jmp
das
or
mov
mov
inc
xchg
stos
lods
add
dec
mov
sub
mov
pop
jmp
rep
fdivrl
inc
pop
sub
out
sub
bound
in
movsb
insb
andl
fidivrl
sahf
sbb
and
jb
adc
pop
mov
fidivrl
cmpsl
jns
add
test
stos
pop
data16
pop
test
jae
push
cmc
clc
scas
lcall
lods
lds
test
in
mov
mov
jnp
pop
cmp
fcomi
lods
or
mov
push
dec
shrl
adc
inc
push
adc
inc
and
jbe
test
das
jb
loopne
add
xor
ljmp
mov
shlb
fwait
decl
stos
mov
out
ficoml
out
mov
nop
xor
adc
adc
test
adc
inc
out
cmp
cmp
icebp
push
cwtl
and
and
add
ss
sbb
fistps
cld
shlb
sbb
xchg
test
xchg
sahf
int
ja
mov
imul
or
hlt
and
sbb
imul
sub
divb
xor
mov
sbb
mov
pop
inc
xlat
out
adc
ds
lods
jg
xchg
cmc
popa
lcall
hlt
inc
fcoml
push
outsl
lea
push
push
lods
mov
lods
arpl
push
loop
or
fbld
ret
adc
fiaddl
xchg
mov
jb
shl
cmp
cmpsb
mov
imul
push
sahf
aaa
popf
xor
and
stos
rcrl
ds
gs
call
mov
scas
lds
pusha
sbb
pop
fucomi
cmc
popf
out
mov
jne
and
subl
lahf
fnstenv
push
ja
jmp
or
lock
mov
into
fstp
pushf
ljmp
sbb
fidivl
pop
je
cmpsl
popf
mov
cld
out
and
mov
fs
xlat
xchg
lods
jb
in
fwait
xchg
mov
lods
rcll
jecxz
mov
daa
fdivs
push
movsl
out
and
sbb
inc
mov
xor
xor
in
mov
inc
xlat
rorb
mov
lret
mov
testb
lock
cli
movsl
push
adc
sbb
jle
inc
adc
out
mov
add
jo
stos
and
in
sub
out
hlt
push
mov
adc
jbe
cmpsl
push
out
aaa
pop
iret
lcall
cld
je
lds
inc
pushf
pop
mov
mov
cmpsl
test
lock
imul
xchg
jle
lret
xchg
adc
sbb
test
jge
inc
in
or
jp
xchg
das
cmp
mov
outsb
pop
pop
lahf
callw
ds
gs
push
pop
mov
fwait
ret
mov
and
mov
icebp
mov
in
js
imul
in
imul
out
mov
add
je
test
fimull
sarl
call
fisubl
or
and
rcr
mov
add
push
jbe
mov
scas
sbb
xchg
movl
add
push
int
popa
sbb
and
or
lea
test
sti
push
push
or
test
mov
jmp
add
xchg
outsb
pop
pushf
add
lret
cmc
lret
test
pop
data16
in
sahf
push
push
and
mov
push
and
shlb
cmp
ret
movb
fisttpll
shr
jmp
je
lds
in
pop
icebp
mov
xor
into
push
icebp
sbb
in
or
inc
and
pop
jae
push
movsl
sbb
ret
sbb
xor
or
cltd
mov
and
jg
std
push
cmp
mov
xchg
inc
lcall
mov
pop
mov
out
dec
and
js
sar
out
inc
stos
and
cmpb
add
sbb
adc
scas
in
aaa
xor
insl
hlt
jecxz
sub
jbe
call
aaa
xor
roll
jecxz
inc
call
pop
pushf
dec
sti
xorb
test
repz
inc
popa
jns
and
rcll
jo
push
inc
ds
enter
xlat
adc
mov
rcrl
lock
popa
pop
pop
lea
jno
cmp
xchg
into
mov
pop
sub
mov
push
lahf
dec
ds
fwait
fs
test
aaa
mov
mov
arpl
je
or
mov
fimuls
test
and
push
sub
test
adc
sub
aad
ds
xor
icebp
lods
jle
sbb
inc
push
jl
push
lret
shll
cmp
jns
sbb
mov
inc
lahf
pop
aaa
ja
and
push
sti
sub
add
pop
push
sub
cs
sub
mov
inc
jecxz
push
mov
and
gs
popa
clc
push
stos
out
jo
xchg
add
xchg
push
ror
data16
leave
jmp
push
lcall
adcl
shrb
and
push
jae
push
movsl
loop
xchg
mov
add
lret
add
xor
addl
leave
movsl
xchg
jle
cli
cmp
xor
flds
jle
sub
addl
or
mov
dec
std
mov
pushf
leave
mov
push
pop
adc
mov
push
rorb
and
lods
or
add
add
dec
dec
negl
cltd
or
mov
mov
dec
popa
addb
or
dec
mov
mov
pop
iret
mov
jp
dec
mov
or
mov
inc
outsb
mov
xchg
xchg
add
push
mov
xchg
arpl
ss
lods
or
aaa
ds
mov
mov
scas
dec
and
mulps
pop
push
xor
inc
xchg
xor
ret
repz
test
add
popf
and
and
mov
sti
adc
mov
push
aam
xchg
sub
cmp
es
xlat
cmp
sahf
aaa
pop
lock
leave
lods
insl
cmc
imul
rcl
outsb
cmp
sbbb
fs
fs
add
sub
mov
cmc
ljmp
push
cmp
js
xchg
mov
or
loopne
sub
mov
xchg
and
xlat
xor
mov
add
jnp
dec
pop
pop
adc
arpl
outsb
mov
lods
outsl
dec
jecxz
push
xchg
pop
mov
lea
fsub
inc
imul
testl
stos
xor
pop
sahf
add
dec
and
dec
fisttpll
out
sbb
xor
and
cld
fcom
rorl
es
add
addl
cltd
icebp
sbb
lods
jne
adc
dec
cmp
jmp
stc
push
dec
adc
aam
sbb
aas
ret
andl
sub
mov
adc
sub
orb
mov
adc
jg
aaa
sub
dec
icebp
ljmp
xlat
shlb
lcall
dec
lret
add
push
rorb
inc
movsb
xchg
pushf
jbe
test
jbe
imul
repnz
xor
rcrb
push
sub
mov
movsb
sub
add
stos
int3
push
gs
add
scas
iret
insb
imul
stos
pushf
popa
mov
fwait
jmp
sub
xchg
sar
loop
dec
mov
lods
jmp
ret
adc
in
xor
inc
mov
dec
inc
call
daa
das
dec
inc
push
lds
je
push
dec
dec
xor
or
bound
push
dec
mov
xchg
push
enter
ret
cmpsb
cld
pop
sub
imul
sub
loop
pushf
lahf
xchg
add
mov
dec
mov
sahf
push
push
jo
icebp
mov
mov
cmc
xchg
pop
push
popf
outsl
jae
dec
adc
lods
mov
sbb
mov
or
add
xchg
int3
int
cmp
push
dec
jle
xchg
pop
add
test
inc
xor
pop
adc
xchg
ljmp
push
sar
add
dec
pop
add
loopne
addr16
and
push
mov
mov
dec
sahf
jo
ljmp
push
cmpsl
out
sbb
sub
mov
cmp
arpl
bound
bound
loopne
inc
pushf
ss
xchg
lahf
cmp
js
sub
fmull
mov
jl
mov
addr16
call
xor
shlb
inc
cs
mov
fsubrl
lcall
jmp
inc
jmp
add
fsubrs
ret
xchg
and
rcll
jge
ficompl
lret
jge
jl
mov
test
and
bound
pop
jmp
out
xchg
aam
xchg
in
jbe
fwait
stos
dec
and
ret
adc
cltd
xchg
jmp
or
filds
leave
xchg
adc
std
cmc
leave
cmp
adc
xchg
adc
pop
movsb
or
scas
icebp
lret
dec
aam
xchg
test
jmp
iret
mov
shr
repz
dec
in
xchg
in
cmc
dec
fstpl
pop
fcomp
pop
push
xchg
iret
imulb
xor
repnz
xor
ds
divb
ret
enter
jge
outsb
imull
sti
insl
dec
fsubs
hlt
jb
leave
cltd
jo
xlat
mov
out
sti
or
divb
add
add
pop
movsl
sahf
or
bound
rcl
cmpsl
xchg
and
cmpsb
ret
fisttpl
mov
adc
and
imul
icebp
lock
xchg
push
or
jo
sub
cmc
push
inc
repnz
aad
loopne
lods
or
sti
int
push
inc
mov
es
jbe
dec
dec
dec
or
sarl
or
call
pushf
sub
fwait
jge
pop
loop
lea
fwait
pop
mov
push
mov
mov
movsb
add
inc
lds
mov
cs
fwait
xchg
inc
and
dec
popf
cmpsb
mov
jae
loope
arpl
dec
jne
mov
stos
xor
fisubrl
in
aaa
rol
sub
pop
sub
int3
mov
cmp
cmp
jmp
push
and
out
icebp
jle
pushl
mov
jmp
sub
dec
add
aam
inc
mov
mov
xchg
stc
sbb
mull
iret
dec
hlt
push
pop
dec
sub
push
xchg
or
js
fld
cltd
mov
mov
dec
loop
or
repnz
repz
mov
test
inc
push
scas
test
or
pop
nop
mov
pop
leave
ljmp
popf
rolb
divb
sub
rsm
push
add
fwait
nop
adc
cwtl
sbb
fs
out
nop
sub
jl
xchg
sbb
xchg
inc
sub
sub
addr16
push
in
out
push
jb
outsl
xchg
mov
test
mov
jnp
and
jecxz
hlt
mov
jne
into
mov
fnop
loopne
cmp
out
ds
sub
mov
shrl
por
pop
push
adc
jge
lcall
sub
pushf
clc
das
mov
das
pop
ja
in
lods
adc
mov
cmp
ret
cmp
pop
or
mov
insb
stos
movl
test
jp
push
frstpm(287
lret
test
cmpb
fstl
pusha
add
adc
sub
xlat
cs
subb
jb
pop
mov
ja
ss
js
outsb
arpl
mov
scas
xor
cmc
mov
mov
jno
mov
mov
pop
in
daa
xchg
lods
xorb
sbb
and
push
xor
pop
inc
jle
jbe
hlt
lret
loopne
sub
mov
adc
xchg
movb
jle
in
jne
jns
cli
lea
cmp
dec
inc
mov
pop
jmp
int
inc
jnp
and
das
stc
cmpsb
loop
test
sarl
cs
jno
xor
in
mov
pushf
adc
icebp
fcomps
inc
imul
shrl
cmpsl
sbb
adc
loop
jns
fldl
jbe
ja
sbb
push
inc
adc
int3
inc
xchg
push
out
add
test
ret
fwait
insl
shrl
jg
out
cmpsl
sbb
jb
fcmovne
dec
xchg
cld
xor
cmp
mov
push
dec
cmp
fdiv
inc
mov
cmpb
cltd
scas
iret
lcall
and
rolb
lahf
adc
popa
daa
imul
dec
push
cwtl
jmp
fidivrl
addl
cmp
mov
insl
jmp
cmp
push
sbb
pop
adc
iret
mov
gs
push
push
ret
repz
and
add
fcoml
xlat
popa
cmp
wbinvd
mov
arpl
add
dec
dec
lcall
mov
movsl
or
dec
pop
das
cmp
imul
fildl
push
ret
stos
negb
loope
frstor
mov
stos
push
loopne
nop
stc
shlb
rorl
pop
rcr
inc
push
lahf
pop
xor
jmp
adc
adc
decb
adcb
sbbl
mov
mov
or
push
sbb
sub
jle
lea
add
cmp
push
adc
and
lahf
or
push
cmp
add
lcall
xlat
insl
popa
sar
cmp
dec
pop
and
or
push
sub
psrad
mov
shlb
sbb
lahf
int
shrl
pop
pushf
xchg
jno
push
mov
pop
dec
add
add
rclb
push
loop
add
in
jecxz
fs
popf
cmc
pop
or
cmp
sbb
sbb
jno
push
push
inc
in
mov
jbe
push
add
cmpsl
lea
cld
outsl
sub
pop
inc
cmpsl
imul
cmc
ja
gs
cmpb
mov
jecxz
cld
jno
jmp
xchg
cld
add
inc
fs
imul
mov
sarl
cmp
ret
pop
fidivrs
ret
add
out
lcall
enter
cmp
into
stos
sbb
shrb
imul
or
inc
mov
lods
call
loopne
les
lods
pop
jp
inc
out
loopne
loope
shrb
push
shrb
testl
or
cmc
dec
push
iret
dec
or
sar
lahf
jl,pt
nopl
xchg
mov
sub
movsl
add
add
jne
nop
xor
push
fucomi
pop
in
loop
cmp
cmc
bound
pop
imul
inc
out
jg
xchg
pop
jno
dec
cmp
mov
fisttpll
pop
movsb
inc
setle
addr16
inc
les
sbb
loop
nop
jbe
dec
adc
and
ret
inc
call
enter
xor
movsb
iret
sub
inc
adc
jo
mov
lret
leave
js
mov
or
sbb
ja
and
ja
and
lret
xchg
ss
call
pop
pop
jl
ret
cs
lea
adc
cmp
add
cld
xchg
xchg
jne
xor
xor
dec
dec
fwait
in
out
sbb
js
cltd
movsl
sub
ds
iret
pop
and
adc
sub
mov
mov
or
fcmovb
sbb
insb
mov
push
icebp
push
mov
scas
xor
jge
push
imul
dec
push
xchg
mov
in
lock
push
mov
cld
push
out
in
pop
test
mov
aas
cmp
and
and
adc
mov
aas
adc
es
xchg
pop
mov
gs
push
or
push
sbb
mov
or
push
leave
das
fldl
xorl
push
sahf
out
cmpsl
sub
cmp
cmpsl
fisttpll
mov
ds
jae
loop
jo
shl
inc
add
cmpsl
arpl
xor
outsl
mov
out
cmp
sub
push
mov
xchg
inc
mov
jb
fstp
dec
mov
inc
push
arpl
mov
mov
les
cs
xor
ljmp
jns
pop
mov
or
mov
cmp
add
push
stos
int
lret
cld
pop
hlt
out
fidivrl
cmpsl
dec
mov
jb
jmp
push
pushf
sahf
imul
xchg
sarb
pop
add
hlt
lds
mov
and
sbb
in
lret
push
mov
sub
cmp
fs
adc
mov
sarl
cmp
cwtl
testl
mov
inc
mov
push
std
jle
lret
lods
lret
jg,pt
sahf
out
lock
insl
sub
sub
jge
jnp
scas
inc
sub
dec
lret
lea
xchg
lods
mov
xchg
fisttpll
inc
mov
jmp
sbb
ret
imul
arpl
es
or
mov
ret
xchg
adc
gs
jge
push
pop
jp
mov
fnsave
pop
pushf
int3
in
test
push
jb
jmp
push
add
repz
out
loop
cmp
fcom
dec
out
pop
pop
adc
xchg
mov
lock
outsl
ret
inc
push
pusha
mov
pop
xchg
or
jo
sahf
jnp
and
lock
sti
js
add
or
mov
ret
push
sub
inc
int
add
or
mov
pusha
cmp
pop
sbbl
xchg
xchg
int3
cmc
sbb
aad
add
pop
sti
xchg
nop
dec
sbb
push
push
es
lcall
push
out
jne
and
mov
xchg
sbb
sar
pop
add
dec
mov
sub
sub
out
dec
or
aam
inc
add
pop
and
mov
das
xor
out
or
repz
mov
jnp
shlb
push
test
pop
fidivl
cltd
xor
rorl
rcr
mov
orb
adcb
push
repnz
push
push
mov
cltd
mov
jge
test
pop
das
test
mov
rclb
mov
aaa
movsb
sti
pusha
push
bound
dec
dec
ss
data16
hlt
ret
fisubl
ret
sub
fbstp
es
mov
mov
pop
or
dec
cmpsl
sbb
mov
mov
mov
das
pop
addr16
mov
jae
lods
or
out
shlb
and
leavew
cwtl
repnz
sbb
shlb
lock
push
or
sbbb
xlat
dec
sub
inc
jl
repnz
mov
and
fcmovne
fldl
and
inc
mov
andb
gs
mov
mov
lahf
test
pop
push
mov
inc
xchg
fisttps
mov
dec
jmp
pmulhw
inc
and
push
insb
ss
loope
ror
scas
ficoms
inc
lds
out
lds
fsubrs
dec
sub
mov
or
out
arpl
sub
or
cmpsl
add
dec
in
dec
shr
dec
jle
mov
xchg
add
xchg
push
mov
adc
cmc
sub
enter
jb
lods
sbb
xchg
loopne
mov
push
icebp
mov
lret
xlat
cli
loopne
mov
hlt
out
nop
mov
aam
mov
or
pop
xor
adc
mov
fwait
ss
and
add
iret
stos
push
ss
mov
rcll
loopne
push
test
sti
xlat
cmp
xchg
jle
movsl
and
fisttps
daa
jno
adc
out
inc
push
lret
outsb
xchg
ljmp
jnp
ret
rclb
xchg
push
outsl
repnz
sbb
push
add
faddp
xor
push
aam
inc
mov
pop
inc
and
add
mov
dec
mov
dec
out
stos
cltd
jns
testl
cs
sub
xchg
addr16
sbb
mov
shl
mov
or
push
adc
stos
sbb
xor
mov
add
cmp
push
not
call
mov
fwait
xchg
push
push
sahf
sbb
dec
xchg
cmpsb
xor
fcmovb
mov
mov
fstpt
pop
mov
mov
adc
or
pop
lods
out
sbb
sti
loopne
and
scas
adc
cmp
fldl
loopne
fsubrl
rol
test
jp
out
pop
sbb
or
pop
aam
push
cmp
pop
lods
pop
inc
push
data16
xchg
cmp
pop
jae
or
cmpsb
shr
add
ret
mov
ljmp
or
add
movsl
jo
lods
sub
pop
pop
fwait
and
adc
push
sub
clc
pop
lea
sub
out
push
or
or
xor
xchg
inc
xchg
test
inc
inc
or
into
adc
ficompl
scas
sbb
lock
push
mov
mov
icebp
adc
jae
test
fldenv
inc
push
pop
adc
fwait
cmp
rclb
out
xlat
ss
fildl
pop
in
ss
cltd
inc
mov
mov
hlt
ficoml
push
stos
cmp
sbb
xor
pop
int
fidivs
dec
lock
pusha
test
in
mov
cmpsb
daa
stos
dec
jp
int
and
and
lret
cltd
jmp
dec
mov
add
in
dec
or
aam
divl
push
inc
test
shll
inc
arpl
popl
scas
cmpsl
lea
iret
shrb
xlat
mov
cmpsl
cmc
add
mov
adc
sti
inc
movsb
lcall
pop
das
ficoms
les
jl
out
xchg
add
in
add
lock
xor
lahf
sub
jmp
mov
xchg
add
aam
cmp
dec
stos
call
dec
das
in
pop
insl
addr16
outsb
or
inc
les
lods
push
out
outsl
cmp
jns
sub
imul
test
xchg
mov
lcall
inc
insl
and
cmp
inc
test
fwait
sbb
mov
push
xchg
lret
aam
outsb
push
mov
dec
out
fbld
cmpl
ret
addr16
pop
out
data16
ds
dec
pushf
arpl
mov
leave
iret
pop
faddl
gs
js,pn
or
jge
testb
dec
add
jecxz
add
repnz
movsl
push
cmp
imul
stos
fldl
hlt
lods
orl
faddl
push
xor
arpl
lock
cld
xor
clc
imul
out
xor
mov
test
jmp
mov
mov
icebp
out
and
shr
adc
jg
add
dec
cmp
push
sub
lods
pop
bound
and
push
out
movsb
inc
fs
lds
jg
xor
jo
push
sbb
and
mov
repnz
and
loopne
sub
or
jecxz
sub
or
pop
aam
push
leave
clc
push
dec
mov
stos
mov
xor
mov
jecxz
adc
mov
xor
xchg
jbe
or
pop
mov
cmpb
mov
xchg
sub
out
test
cmp
jecxz
xor
inc
shl
pop
mov
rcr
rorb
xchg
xor
in
xor
inc
nop
cmpsl
data16
mov
sbb
fmull
imul
sbb
jne
or
jecxz
adc
and
mov
les
inc
and
jmp
mov
lret
cmp
lcall
in
pushf
int3
fadd
imul
fs
aam
cld
mov
jnp
icebp
adc
popa
pop
aam
sbb
inc
popa
dec
insl
pop
ret
adc
xor
mov
test
out
add
sar
mov
mov
mov
xchg
mov
sbb
mov
push
adc
ja
jecxz
lds
dec
outsl
pop
dec
dec
test
int3
cmc
pop
daa
je
or
popa
jl
imul
loope
rcr
movsl
popf
pushl
pop
cmp
into
aaa
mov
pop
or
addl
lods
pop
sub
in
imul
jecxz
test
mov
mov
insl
shlb
mov
pop
and
mov
cwtl
mov
popa
inc
xchg
pop
sub
arpl
roll
adc
lret
jae
nop
mov
add
loope
cmp
sub
push
sbb
lock
or
arpl
jae
mov
jmp
mov
mov
xor
mov
mov
fidivrl
xorl
and
test
insb
cmp
jl
jmp
or
mov
mov
mov
mov
or
repnz
jmp
cs
call
aam
sbb
js
test
xchg
cmp
jecxz
and
roll
test
mov
movsb
lods
arpl
or
fadds
movl
inc
stc
aas
loopne
xchg
push
cli
popf
push
pop
lahf
sbb
mov
push
cmp
loopne
adc
add
push
addr16
sub
mov
sub
ret
rol
sub
inc
aad
or
outsb
int3
mov
dec
cmp
lds
lret
pushf
aad
or
jnp
in
or
dec
loop
lock
pop
fistl
in
outsb
lea
fwait
decl
scas
and
adc
and
mov
jnp
movsl
mov
loopne
lods
jmp
adc
inc
xor
and
xor
adc
or
ljmp
scas
sub
jne
mov
movsb
mov
push
sbb
out
xchg
sar
xchg
lcall
or
cs
sub
sarb
lods
std
adc
sbb
jecxz
pop
test
popa
jae
fnstcw
lahf
cld
and
jmp
mov
push
lds
enter
js
and
jo
jnp
or
pop
loope
add
dec
decb
adc
ljmp
add
push
arpl
dec
ret
lahf
pop
dec
jb
in
cmpsl
mov
adc
in
fistps
push
out
mov
and
inc
or
ljmp
inc
aad
xlat
pop
lds
xchg
adcb
lcall
sbb
and
mov
stos
jo
cmc
rcrb
shll
pop
mov
inc
dec
jl
lods
sbb
shrb
dec
and
push
mov
inc
out
jge
and
outsb
jg
push
xor
xchg
fwait
fs
and
pusha
insl
out
test
sbb
test
negl
lcall
dec
movsb
shlb
es
push
int3
fnstcw
ret
jmp
adc
loope
testb
sub
paddsw
cmpsb
outsl
lcall
cmpl
sub
movsb
sub
imul
sbb
xchg
mov
test
mov
aaa
imul
rclb
arpl
js
icebp
pop
je
and
sbb
pop
push
loop
shl
into
add
push
aad
mov
lea
loope
insb
mov
imul
or
filds
pop
loope
aas
icebp
imul
aas
ret
nop
and
jmp
pop
arpl
pushf
mov
jmp
jae
adc
adc
mov
cli
pop
jb
lret
movsb
xchg
sub
std
xorl
lea
js
and
adc
sahf
mov
mov
sub
cmp
stos
imul
push
xor
cmpsb
adc
lret
lcall
pop
hlt
lock
in
inc
ljmp
xor
adc
xlat
pop
cltd
ljmp
pushf
sti
lods
test
add
cmpsb
jge
cmp
pop
es
in
ror
daa
dec
loopne
pop
pop
sub
int3
outsl
lcall
pop
aaa
nop
pop
test
mov
mov
push
pop
lret
out
rcrw
push
cmp
in
sti
adcl
stos
stc
sub
push
mov
jp
dec
xchg
mov
in
xor
notl
inc
lret
out
push
push
das
lds
cli
les
lcall
push
jp
mov
shr
out
aam
cmp
lret
ret
test
fucom
add
cli
jns
mov
int3
sub
adc
rorl
dec
lret
rcl
or
jb
mov
jb
jecxz
dec
adc
pop
xor
shll
notl
push
movsl
mov
sub
jl
out
ret
loope
mov
and
push
xchg
and
jnp
nop
mov
xor
ret
and
mov
pop
dec
dec
adc
xor
sbb
in
mov
orl
xor
add
mov
nop
sbb
bound
negb
inc
enter
mov
imul
xor
iret
adc
or
and
int3
or
push
fwait
xor
loope
sbb
call
cli
push
imul
call
pop
lret
mov
scas
xchg
adc
out
aad
dec
adc
cmc
inc
repz
lret
xchg
out
jp
adc
pop
and
lcall
bnd
push
and
out
movsb
pushf
out
push
sahf
xor
push
adc
insb
cmp
mov
shll
outsb
lock
pop
out
test
or
xchg
lret
aam
decl
push
xchg
callw
jge
add
mov
insl
or
adc
sub
dec
adc
fidivrl
add
clc
sbb
fistpl
mov
fs
or
imul
call
aas
push
cmc
xor
rolb
mov
cmp
pop
sbb
dec
out
daa
and
in
mov
pop
or
in
jmp
lods
and
adc
jmp
dec
xor
pop
frstor
test
jg
test
fistpll
shlb
push
add
push
push
adc
adc
rcr
or
jp
cmp
dec
mov
inc
mov
adc
mov
out
lahf
out
shrb
and
std
mov
jb
sub
cs
xchg
inc
adc
movsl
dec
xor
add
pop
jge
cmp
push
lret
cli
sub
lcall
pusha
mov
lods
adc
aaa
mov
dec
in
sbb
cmp
push
xchg
jg
shl
es
inc
icebp
lea
mov
out
pusha
sub
and
ror
pop
mov
xchg
sarb
pop
fistpll
pusha
add
jbe
hlt
push
xchg
xchg
push
bound
xchg
jmp
dec
imul
cmp
cli
inc
and
ds
mov
push
mov
mov
mov
addb
cld
fs
outsb
cli
rorb
iret
fwait
mov
cmpsb
adc
dec
shr
jp
cmpsb
adc
pop
dec
sbb
insb
int3
mov
dec
imul
add
sbb
test
shl
lcall
fsubr
lods
xor
push
sti
mov
int
vpcmpeqd
test
ljmp
xchg
sti
pusha
dec
xchg
mov
xchg
outsl
cmp
push
push
add
jle
sbb
sub
jp
out
rol
adc
les
cmpsl
ljmp
popf
cltd
and
incl
out
js
fildl
jae,pn
call
inc
in
lahf
jecxz
lods
jmp
sti
pop
push
int
push
sub
mov
fnstenv
ret
pop
mov
xchg
data16
aaa
mov
lds
lds
inc
inc
daa
outsl
xor
fadds
add
or
out
jg
cs
xchg
insl
xor
and
mov
clc
lock
mov
shlb
hlt
and
es
outsb
cltd
or
ss
pop
jp
mov
xor
mov
fwait
pop
ja
lds
push
daa
jne
or
inc
outsl
fcmove
shlb
lds
daa
mov
fbld
mov
jns
das
add
stos
xlat
adc
aam
xlat
loopew
mov
movsl
stos
mov
repnz
shl
xchg
loopne
push
add
imul
jp
xchg
fs
mov
push
dec
add
fnstenv
int
mov
dec
fadds
sbb
fwait
popl
into
dec
cmp
add
fs
sahf
mov
xchg
loopne
fcmovb
mov
cs
rcl
cs
in
or
sbb
outsl
mov
push
test
sub
dec
leave
jno
dec
in
arpl
out
in
fldenv
adc
bnd
iret
push
sti
nop
sbb
ret
xchg
ljmp
push
mov
xchg
push
jae
mov
sti
in
mov
cwtl
mov
js
or
outsl
inc
sbb
lahf
fxch
pop
jmp
cmpl
lods
shl
or
pop
scas
sti
sub
movsb
mov
jp
call
adc
daa
add
cltd
mov
nopl
jae
fdivs
push
jno
inc
cli
cmpsl
pop
cs
push
loop
xchg
pop
movsb
call
pop
repnz
mov
mov
call
jp
push
bound
les
fstl
push
or
cmp
cmp
and
mov
sbb
bound
fsts
jle
iret
das
int3
dec
les
imul
imul
cld
xchg
pop
push
fwait
cmp
movsb
leave
out
int
repnz
jns
pop
jle
lret
inc
sub
sub
shll
call
out
dec
test
mov
sbb
out
jno
push
sub
mov
dec
mov
mov
cld
stos
mov
insl
pop
dec
push
jnp
xchg
cltd
or
lock
in
out
or
push
call
ret
xlat
jo
sub
pop
dec
add
hlt
inc
lret
rcll
insb
and
mov
fs
dec
push
xchg
out
stos
dec
nop
xchg
xchg
mov
jnp
sbb
add
ds
lea
cmp
loopne
cmp
out
imul
xchg
add
xchg
lds
fwait
push
inc
sbb
movsl
cmp
adc
pop
cmp
mov
movsb
dec
repnz
add
xchg
jno
sbb
mov
pop
jg
lods
jp
lahf
je
jbe
mov
ljmp
subb
aad
ds
iret
mov
add
mov
sti
stc
and
sbb
adc
loope
xchg
imul
mov
ss
clc
add
int3
and
cmp
fcompl
aas
test
mov
cmc
sub
addr16
jnp
cld
xor
insb
lret
mov
seto
pop
bound
cli
mov
repz
enter
in
jbe
or
mov
jecxz
adc
dec
sub
ret
icebp
cs
or
push
mov
js
mov
and
jne
inc
mov
ficoml
xorl
pop
adc
push
cmp
xor
cmp
jg
dec
adc
ja
add
and
fsubr
cmp
mov
or
aas
lds
inc
cmp
inc
adc
pop
int3
enter
repz
xorl
push
sbb
movsl
in
imulb
mov
sbb
aam
loopne
push
out
fnstcw
test
inc
cmc
xor
mov
dec
les
fcomps
mov
enter
mov
jne
sahf
mov
mov
mov
shrb
movsb
jbe
gs
push
fwait
jnp
aam
jmp
repz
sti
fiadds
jns
push
push
sbbb
jmp
stos
je
cltd
cmc
cli
sub
jo
fisttps
pop
test
jne
jns
shl
lcall
cwtl
ret
adc
pop
int3
sbb
xchg
gs
pushf
and
lret
in
or
inc
shll
jae
mov
in
xchg
ljmp
pop
daa
mov
inc
add
pushf
add
add
mov
mov
scas
shr
mull
cltd
das
xchg
in
pop
cmp
mov
sbb
es
inc
inc
fisttpl
andl
dec
pop
mov
push
es
test
adc
and
das
mov
icebp
push
jmp
pushf
mov
in
mov
imul
push
dec
jnp
ret
cltd
mov
push
xlat
sbb
adc
mov
xor
and
std
nop
pop
outsb
mov
add
or
xor
add
pusha
push
sub
fwait
in
push
icebp
insb
popa
ja
lock
dec
jne
mov
shlb
pusha
push
pop
xchg
or
lock
cmp
out
insl
inc
sub
sub
icebp
negb
scas
jmp
dec
xchg
movsb
scas
ja
jno
or
mov
nop
pop
out
loop
ds
push
fwait
sbb
pop
mov
cmp
xor
leave
sub
js
xor
mov
push
jae
mov
sbb
adc
mov
sti
fsubr
dec
dec
push
test
and
lea
or
jmp
icebp
and
push
xlat
push
inc
addr16
jp
mov
xchg
cmpsl
cmp
and
inc
jns
lret
outsl
fwait
out
out
es
xor
lods
mov
jbe
in
ja
mov
xor
add
cmp
fldl2e
pop
push
pop
dec
jo
adc
inc
jmp
add
sarb
je
xchg
insb
push
and
sahf
xor
fisubrs
scas
shl
jne
xchg
and
xorl
mov
lds
jg
pop
shrb
lds
jle
cmp
iret
or
dec
das
cmc
cmpsl
inc
sbb
mov
inc
push
loop
mov
aas
aam
jge
lods
inc
and
sbb
pop
stc
jo
insl
jp
addl
or
xor
cmp
mov
push
sbb
dec
add
or
or
mov
ja
test
cld
in
fs
xchg
adc
or
les
lods
cltd
push
rorl
xchg
and
insl
add
shrl
and
mov
orb
fnstsw
cli
inc
test
fnstsw
add
pop
fcoml
xchg
pop
mov
adc
push
loopne
push
fbld
imul
daa
pop
aas
xor
leave
test
cmp
lods
fldcw
aad
test
and
subb
sti
cltd
stos
xchg
sar
xchg
mov
mov
lds
cmp
mov
and
fstpt
mov
imul
scas
add
lret
bound
or
mov
nop
inc
lods
push
or
int
jo
ds
sti
inc
cmp
mov
rcrl
imul
out
dec
lahf
pop
rorb
mov
adc
mov
adc
out
sub
aam
lods
mov
outsb
sub
outsl
dec
and
pop
inc
pop
in
add
test
cmpsl
fdivrp
push
xchg
pop
rol
dec
jo
jecxz
adc
pop
xchg
sub
xchg
adc
cmp
loop
scas
jnp
shll
fadds
imul
dec
inc
sbbb
push
pop
and
mov
lea
push
movsl
or
fcoml
rcrb
sbb
adc
xchg
ljmp
daa
push
clc
adc
repz
bound
push
inc
pop
cmp
loope
enter
pop
out
fwait
mov
xor
dec
mov
or
cli
push
sub
iret
loop
imul
xor
out
dec
pop
sbb
pop
mov
sti
call
push
lret
xor
loopne
sub
in
dec
ss
fisttpl
gs
dec
or
lcall
sbbl
adc
inc
push
add
mov
inc
stos
out
pop
inc
lea
inc
pop
xchg
out
in
pop
out
pop
out
cmp
xor
mov
and
or
jb
std
inc
adc
and
xchg
xchg
incb
mov
inc
lods
movsb
clc
rolb
cld
aas
rcrb
mov
int3
jmp
pop
loopne
bound
and
push
xchg
xchg
ret
ljmp
cmp
fwait
xchg
or
and
out
ds
insl
dec
aaa
xchg
lfs
xchg
andb
pop
fscale
cs
int
outsb
xchg
daa
rorb
jmp
mov
adc
iret
pop
dec
lds
shlb
adc
and
cmp
in
shlb
or
imul
popf
pop
dec
cmpsl
push
push
sbb
cmpsl
sbb
mulb
movsb
cmp
rol
test
pop
roll
and
sbb
popa
push
xchg
mov
lret
or
cmp
out
jg
es
jnp
aad
cmp
mov
add
cmp
jmp
cmpsb
and
cltd
aas
stos
hlt
stos
sub
mov
add
pop
aas
jge
push
jbe
mov
testl
icebp
mov
jnp
in
test
push
push
adc
inc
or
cmpsb
mulb
dec
mov
inc
fcoml
pop
pop
dec
mov
jno
xchg
push
mov
test
adc
stos
aaa
cmp
pop
js
add
sbb
out
rcr
cwtl
ljmp
cmp
sub
icebp
pushf
je
aad
mov
fmuls
clc
idiv
mov
cs
jecxz
or
popl
inc
add
fwait
leave
adc
push
out
dec
out
and
or
xor
insl
out
loope
hlt
lahf
pop
testl
mov
push
mov
mov
out
lock
mov
ret
add
rclb
rol
sub
or
loop
add
xor
ds
in
cmp
fimuls
and
mov
and
push
out
out
and
nop
or
xor
mov
lahf
inc
cmc
in
stos
test
cmp
arpl
xor
sti
sar
scas
mov
cmp
push
subl
or
mov
jo
fxch
outsl
or
rcrl
icebp
shl
mov
pop
repz
sub
jbe
stc
inc
mov
mov
pop
sbb
fwait
and
lods
lcall
pop
adc
jnp
sti
mov
gs
push
mov
std
scas
sub
ficomps
dec
mov
push
jb
fwait
dec
leave
scas
inc
pop
mov
ss
push
test
fadd
imul
popf
ljmp
jle
movsb
mov
icebp
sarl
daa
fdivr
push
mov
cmp
sub
scas
mov
cltd
mov
cmp
mov
xchg
inc
sti
sti
mov
add
pop
faddp
jl
ss
cmp
sbb
and
loope
out
mov
cli
popa
stc
mov
jbe
adc
mov
dec
enter
daa
mov
dec
call
das
mov
jp
push
ljmp
adc
xchg
dec
xchg
push
aas
fimuls
ss
xchg
mov
ficoml
lock
scas
pushf
mov
das
xorl
adc
out
pop
je
aad
and
int
inc
xchg
fdivrl
fildll
shll
inc
adcl
sti
sub
fs
je
ss
imul
aas
negl
dec
js
lret
std
push
ret
fldl
push
push
enter
in
jg
sub
inc
fcmovnb
stc
out
adcb
cli
xor
imul
xchg
movsb
dec
ret
arpl
inc
xchg
pop
je
mov
je
cmc
xor
cmp
insb
xor
in
and
mov
sub
sub
mov
mov
int
mov
filds
loopne
pop
rorl
popf
arpl
mov
dec
lea
push
add
sub
push
cmc
rorw
fidivs
pop
mov
xchg
outsl
xor
sbb
popf
inc
add
and
xchg
push
lea
loope
loope
dec
rorb
sarl
mov
cmp
shlb
jno
clc
js
or
daa
sbb
jg
nop
xor
aas
xor
xchg
lret
pushf
adc
incl
sahf
adcl
lds
imul
out
push
jmp
jp
addr16
jge
hlt
cmp
cmp
out
in
xor
push
pop
insl
sub
push
negb
scas
insb
popf
sbb
call
jl
cmp
xor
fnstsw
or
cmp
cltd
xor
add
push
push
lcall
mov
xor
xor
stos
lods
imul
cmp
dec
out
fists
testb
out
mov
out
pop
shrb
jp
push
stos
sbb
push
lcall
inc
pop
fistl
mov
arpl
jge
pop
cld
lock
jge
cmpsl
sbb
and
out
orb
es
cmp
cmp
xchg
ss
cli
pop
aas
cli
jnp
dec
mov
call
or
xchg
inc
and
push
mov
jns
xchg
dec
enter
jbe
mov
inc
int3
cmp
cmp
out
sbbl
pop
pushf
test
lea
pop
adc
xchg
mov
lock
adc
xacquire
adc
ss
cld
dec
stos
xchg
sub
adc
jmp
test
jg
push
stos
in
adc
repnz
repnz
adc
push
sub
pusha
nop
int3
cmp
jl
das
in
push
leave
ja
mov
test
pmulhw
pusha
fisttps
mov
adc
and
sbb
xchg
fwait
push
xchg
lods
lcall
repnz
jecxz
xor
mov
xchg
in
call
mov
xor
mov
fsubs
shrb
hlt
sub
mov
popa
in
cli
and
out
pop
jle
mulb
mov
lahf
enter
and
inc
xchg
insl
and
mov
out
mov
sub
outsb
inc
fildl
inc
cmpsl
adc
repz
sbbl
stc
mov
sub
les
cwtl
xchg
cli
xchg
jp
call
and
repz
loope
nop
jbe
and
jle
nop
add
ret
pushf
mov
adc
pop
movsb
dec
cmp
and
push
dec
sub
stos
mov
jg
mov
lock
xchg
adc
cmc
jmp
add
ret
mov
xor
leave
push
pop
add
ret
inc
loop
mov
enter
out
bound
sbb
cltd
xor
and
push
rcll
mov
das
sahf
sub
scas
xchg
or
or
loopne
or
outsb
xchg
inc
in
sti
addr16
ds
jmp
adc
call
jmp
pop
imul
push
in
dec
mov
in
mov
clc
xchg
mov
inc
cmc
jno
dec
mov
xchg
xlat
aas
adc
dec
dec
in
fsubs
xchg
scas
test
mov
sbb
stos
mov
push
insb
or
adc
pop
enter
xor
jle
movsb
cmp
aas
add
adc
jmp
and
mov
jecxz
mov
das
imul
mov
lods
pop
and
or
or
outsl
adc
mov
aaa
orl
shlb
int
cmpl
mov
pop
mov
push
pop
pop
ljmp
dec
mov
cmp
push
loopne
inc
inc
or
scas
enter
xor
push
js
rolb
sbb
cmpsl
push
sub
pop
bound
adc
fisubs
cld
push
shlb
jbe
mov
ret
push
lahf
lahf
loopne
inc
mov
rcl
lea
loope
pop
or
push
add
add
add
cmp
inc
sub
imul
in
imul
inc
pop
cli
or
ds
stc
int3
push
xchg
mov
ds
shll
div
push
pusha
xchg
add
mov
into
mov
dec
cmp
imul
adc
lret
xchg
push
adc
inc
mov
mov
pop
lods
in
sar
inc
pop
aad
enter
mov
xchg
cld
out
out
inc
push
gs
push
cld
push
push
hlt
xchg
cltd
rorl
or
into
push
cmp
imul
sub
mov
addb
repnz
lods
shlb
subl
jmp
add
mov
cmp
push
aad
and
pop
sub
fdivs
js
xor
int
out
push
xchg
movsl
adc
mov
mov
sbb
loop
out
fidivl
jge
xor
enter
jl
jae
shl
insb
xchg
adc
std
push
or
pop
sub
bound
jecxz
and
push
inc
test
out
xchg
lret
lods
ret
xor
and
stos
dec
dec
pushf
mov
fisubl
dec
aam
lds
mov
std
bnd
sbb
clc
jmp
inc
scas
stos
sbbl
mov
outsl
loopne
stos
add
xorb
jno
adcb
cwtl
push
mov
cmp
pop
or
jb
mov
out
sahf
cld
xchg
xchg
sbb
or
and
pop
out
test
rcll
mov
sbb
imul
sub
subl
or
add
or
sbb
push
add
push
xlat
sbb
stos
in
adc
jns
daa
adc
sbb
ror
push
movsb
in
mov
mov
jmp
roll
repnz
pop
xchg
mov
arpl
addb
push
xor
mov
push
mov
or
cmpsb
xchg
out
jbe
negl
ljmp
mov
aaa
scas
mov
aaa
inc
in
and
shrb
aam
push
adc
inc
adc
jmp
pop
cmpsb
sahf
stos
jmp
outsl
pushl
xchg
pop
daa
sti
cmc
xor
dec
rolb
hlt
push
sbb
outsb
stos
mov
push
jbe
dec
ljmp
xchg
and
mov
fstps
es
int3
outsl
je
push
mov
pop
inc
inc
shl
enter
testb
subb
mov
push
jp
jge
add
vmovntps
sub
jnp
pop
pop
sub
add
dec
inc
jecxz
lods
xlat
nop
mov
mov
and
adc
shr
mov
push
jbe
push
psllw
js
lock
es
mov
outsb
cmp
mov
cmp
push
int3
pop
icebp
dec
dec
idivb
ss
loop
movsl
mov
mulb
jge
xchg
hlt
rol
shlb
pop
mov
cmpsb
adcl
cwtl
cmc
int3
sbb
aad
mov
in
enter
rolb
inc
inc
rsqrtps
jne
loop
je
mov
xor
rclb
daa
xor
dec
test
or
repz
pop
arpl
pusha
dec
movsl
shll
leave
and
xor
xchg
jmp
jne
xlat
insl
into
sbb
lds
xlat
out
icebp
xlat
lods
jecxz
call
sahf
sarl
xor
sbb
cli
mov
fxtract
test
lret
jp
jmp
push
sahf
lahf
cmpsb
adc
mov
cmp
lea
xchg
jl
cmp
lods
pop
mov
icebp
hlt
mov
loopne
shll
fs
outsl
stos
jg
dec
sbb
mov
cwtl
xor
outsl
rolb
stos
lret
and
ret
inc
mov
les
aas
push
jmp
loopne
adc
cmp
cwtl
jns
lods
push
sub
jo
movsb
idiv
mov
cltd
ds
adc
xor
cmpsb
movsl
pop
fsubrp
adcl
push
outsl
movsb
jo
cmpsb
mov
xchg
fnstcw
inc
fbstp
xlat
mov
or
cmp
outsb
mov
push
lcall
sbb
ljmp
out
les
xchg
inc
xor
fwait
pop
jg
push
enter
adc
adc
push
scas
xchg
fdivl
xchg
outsb
mov
lods
loope
cmpl
addr16
push
fstp
fwait
jg
pop
lahf
imul
push
adc
fidivrl
sahf
enter
jns
add
jl
push
ret
or
pop
arpl
jns
sub
int
lcall
push
push
repnz
push
loopne
lock
int3
inc
xor
insb
outsl
and
orl
ljmp
and
add
test
or
or
dec
pop
mov
add
cmp
sti
mov
sub
leave
popf
cld
cli
xchg
arpl
or
inc
inc
adc
test
imul
in
mov
pop
xchg
jb
jecxz
push
shr
fimuls
rolb
fistl
sub
inc
lahf
fwait
add
xchg
shl
inc
outsb
xchg
or
mov
pop
int
mov
add
inc
mov
xchg
ljmp
sti
dec
sub
mov
xchg
cmpsl
popa
fbstp
incb
pop
ret
loop
jmp
into
int3
out
sub
mov
enter
test
daa
mov
and
sub
sbb
ret
or
outsl
mov
sahf
jmp
xor
push
push
dec
addb
in
push
push
orb
lods
ret
lods
fnstenv
out
repz
or
rolb
jg
sub
insb
mov
lahf
or
push
or
inc
lods
cmp
fdivrp
lods
cs
orb
sbb
jae
rcrl
jne
or
inc
xor
sbbb
xchg
jmp
mov
ss
jp
pop
push
jg
movsb
pop
lcall
nop
das
stos
scas
fbld
fwait
pop
lret
mov
inc
imul
jl
mov
pop
loope
js
add
adc
lds
cmp
jp,pt
push
pop
jl
stc
hlt
pushf
cwtl
lods
lds
subb
setl
or
jnp
loope
iret
xor
cmp
xor
loopne
cwtl
repz
mov
fldenv
sbb
push
pop
jo
lret
insb
add
imul
or
loope
stos
out
jo
stos
ss
inc
int3
test
cmp
jo
jb
loop
sub
jge
ja
out
shrl
xchg
cmp
out
and
icebp
arpl
shl
fnstcw
cmp
xor
pop
or
cs
mov
in
mov
sbb
xor
nop
mov
insb
push
mov
inc
pushf
mov
adc
xchg
and
pusha
or
push
fdivrl
lods
jae
arpl
lds
cmpsb
movsl
dec
lcall
xor
dec
xor
dec
jb
leave
movsl
fcomps
adc
aas
flds
inc
je
in
xorb
mov
dec
cmp
std
sbb
sbb
adc
mov
call
sahf
jnp
dec
loop
ret
ljmp
and
out
outsl
push
out
xchg
popf
ret
fstps
ljmp
mov
loop
movsl
mov
call
inc
test
xor
add
xor
mov
jb
bound
jo
aam
ja
leave
icebp
sbb
mov
addr16
imul
fisubrl
mov
fimuls
push
pop
mov
jecxz
movsl
xchg
push
sbb
inc
sti
fidivl
push
fs
jns
sbb
jo
outsl
cmc
inc
bswap
xor
and
xchg
dec
mov
cs
ret
add
rorb
mov
xchg
push
ret
in
shr
cltd
add
andl
into
test
push
mov
mov
out
enter
shrl
add
push
cli
jno
sub
inc
lcall
sub
aas
adc
dec
lret
movsl
out
cmp
test
pop
loop
xor
lock
gs
xchg
jl
in
jne
lds
adc
inc
sahf
mov
mov
fimull
pop
cwtl
je
cs
andb
dec
sbb
xor
sbb
mov
adc
inc
lahf
xlat
cmp
cmp
and
cmp
mov
out
data16
int
clc
mov
xchg
dec
push
in
imul
mov
repnz
push
ds
inc
cmp
cmp
and
out
lea
push
jmp
jbe
ds
leave
jo
stos
sbb
mov
outsl
inc
xlat
push
jp
gs
mov
in
cmpsl
cmpsl
xor
stos
into
sbb
or
mov
sub
das
mov
and
jmp
xor
cmp
mov
and
dec
and
add
mov
daa
fs
mov
add
and
sub
xchg
mov
fdivr
fsubl
sub
pop
mov
or
cmp
scas
sahf
push
push
or
and
je
pop
shl
sub
dec
aad
pushf
sub
popf
je,pn
xchg
insl
repz
cmc
addb
mov
jno
fld1
movsl
comiss
xchg
sti
fld
or
xchg
scas
loope
inc
pop
jmp
sub
into
pop
ja
rorb
adc
in
cmc
or
xlat
xor
jns
mov
lahf
mov
mov
sahf
add
cmpsl
pushf
dec
jae
fcmovbe
adc
mov
shrb
sbb
sub
sbb
dec
lcall
ret
sub
test
pusha
xlat
rcr
movsl
mov
fnstenv
adc
ret
xchg
mov
adc
dec
xchg
adcl
pop
dec
inc
dec
mov
xchg
in
xchg
test
pop
and
sub
test
jp
fidivl
cmp
popa
push
movsb
cwtl
clc
push
xchg
mov
mov
clc
sti
xchg
mov
cmp
stc
lret
cmpsb
xchg
mov
frstor
mov
push
or
inc
mov
loope
cs
cmpsl
add
repz
sub
and
mov
or
inc
push
test
stc
pop
pushf
insl
rcrb
bound
jmp
jmp
xchg
cltd
pop
fcoms
sbb
enter
sbb
aaa
test
pop
rolb
pop
or
mov
cmpsl
push
movsb
and
lods
push
jno
stos
popa
cwtl
push
pop
sahf
pop
ss
mov
sbb
sub
scas
shll
pop
lock
arpl
pop
sbb
aaa
lcall
insl
bound
mov
popf
push
aaa
xlat
push
cwtl
sbb
xchg
dec
jge
xchg
inc
cmc
or
xchg
bound
fcomp
ljmp
push
xchg
push
and
jae
sti
mov
jge
xor
cld
xchg
fisttpl
into
inc
cmc
imul
or
xor
xchg
adc
stc
add
insl
and
hlt
inc
mov
xor
sbbb
push
aas
adc
xchg
lock
and
jp
mov
daa
xor
xchg
mov
jbe
insb
das
addl
xchg
out
push
jmp
sbbb
or
cmp
or
and
xchg
jb
clc
mov
jmp
les
out
dec
iret
lds
xchg
mov
sub
loopne
mov
jg
test
push
gs
mov
adc
sub
aaa
iret
sbb
gs
mov
jle
call
mov
dec
mov
push
outsb
outsb
or
inc
js
bnd
sahf
xor
push
ja
bound
inc
sub
loopne
mov
test
int
mov
or
cli
sbb
add
loopne
fbld
xchg
testl
mov
fidivrl
xchg
cmp
ret
ret
pop
push
pop
data16
xorl
clc
mov
push
pushf
data16
adc
clc
out
and
mov
inc
jg
pop
filds
stos
shl
dec
push
ss
inc
push
and
cmpl
mov
ljmp
test
xor
and
push
add
dec
lock
xor
jns
repnz
cmp
mov
into
push
mov
mov
outsb
lcall
rcrl
dec
rcrl
cmp
xchg
inc
sub
sub
addb
out
dec
inc
lods
jg
sub
cmpsl
in
loopne
std
fdivrl
pop
mov
mov
ljmp
stos
mull
adc
out
sub
adc
mov
lcall
mov
loopne
scas
adc
pop
mov
das
scas
lret
hlt
test
mov
xor
std
dec
sbb
mov
jns
std
xchg
loope
adcl
ljmp
addr16
and
or
cmpb
scas
jne
mov
leave
or
fcomp
fmuls
jbe
mov
jp
push
sbb
add
pop
sti
or
iret
dec
sbb
jae
inc
maxps
stos
es
jge
add
lods
lds
xor
addb
inc
xchg
in
sarl
aas
cmp
mov
jl
fldz
push
cmp
negl
jae
sbb
jg
and
jo
pushf
xor
dec
cli
and
jne
mov
xchg
cmp
cli
cld
xchg
dec
or
dec
movsl
or
std
jbe
inc
out
in
push
inc
pop
push
xchg
lods
aas
mov
xor
and
cmp
negb
push
mov
sub
das
das
inc
test
mov
stos
xchg
mov
mov
jp
mov
and
adc
sub
sbb
gs
popa
fmul
clc
dec
dec
mov
punpcklwd
pop
dec
jnp
aas
dec
mov
mov
gs
pop
idivb
insl
sub
pop
mov
jnp
push
sub
and
xchg
or
push
clc
xlat
mov
xchg
add
sub
lods
mov
push
imul
jbe
mov
enter
adc
xchg
js
cli
mov
lea
pop
cltd
push
xchg
out
and
fidivrs
fbld
loopne
sbb
cltd
add
lods
xor
adc
jle
mov
icebp
test
and
in
push
lahf
pop
sub
pop
in
jae
ja
pop
xor
negl
sbb
ret
pop
mov
jnp
mov
adc
sbb
repnz
mov
adc
pushf
push
lods
jns
pop
sahf
jns
ja
mov
call
and
and
mov
jne
sbb
adcb
jle
xchg
scas
insb
inc
push
in
outsl
inc
pop
xor
jnp
bound
in
lea
jno
mov
pop
mov
or
scas
call
pop
sbb
test
mov
xor
or
testl
loopne
dec
sub
cmpsl
pop
rcrl
lds
mov
xchg
test
imul
pop
jo
pop
pop
xor
add
sub
ja
lds
sbb
xlat
out
imul
cli
in
sub
push
mov
and
adc
lods
fmull
inc
insl
xor
or
cmpsb
outsb
jo
and
sarb
out
fistpll
jne
sbb
and
fidivl
jns
sbb
loope
inc
and
enter
lcall
popf
push
push
fcomps
cwtl
aam
push
inc
jmp
or
pusha
or
bound
stos
das
stos
cltd
lods
and
hlt
push
mov
pop
andb
jp
dec
jnp
jmp
adc
adc
mov
andb
sbb
xchg
pop
mov
dec
or
fnstenv
in
push
ret
pop
inc
insb
add
xor
stc
loopne
and
push
rolb
sbb
inc
push
hlt
dec
or
daa
imul
shlb
loopne
dec
repz
mov
test
mov
inc
mov
xor
jl
loopne
xorl
jns
ficompl
aaa
lret
jns
pop
jmp
push
pusha
scas
adc
fcomip
and
mov
mov
jb
jne
out
pop
adc
insl
pop
xor
shlb
sub
sub
push
dec
mov
mov
std
lcall
loop
outsb
repz
filds
or
inc
scas
arpl
addb
push
shrl
bound
xlat
cld
cmp
lcall
fs
jne
mov
xor
mov
push
sub
jb
shrb
dec
ja
int
notl
lea
imul
add
jg
out
aam
pop
movsl
dec
jns
or
pop
cmpsb
jne
subb
cmp
repz
mov
sub
cmp
aaa
loopne
call
negl
lods
in
insl
sub
add
iret
push
shll
loope
jo
mov
add
add
lcall
mov
repnz
pop
xchg
xlat
push
shll
popa
mov
loopne
mov
int3
jle
sub
cmp
insb
pop
jb
fistps
cmp
test
adc
cmp
xchg
test
das
out
xchg
bound
out
lea
fbld
xchg
cmpsl
enter
push
push
add
ja
dec
mov
fimull
and
or
outsl
xchg
push
dec
stos
movsb
lret
pop
icebp
mov
int3
stos
scas
adc
and
pop
inc
cmp
adc
subl
imul
sahf
xchg
dec
inc
loop
mov
pop
xor
rolb
mov
nop
enter
add
jg
jo
xchg
cld
push
mov
push
stos
aad
out
xchg
xor
out
repz
xchg
xor
stos
xor
mov
js
xor
lods
in
adc
jecxz
das
mov
push
int3
adc
pop
mov
leave
mov
inc
sub
adc
cmp
xor
cmp
push
xchg
das
push
rcll
es
push
in
push
or
push
xor
push
stos
clc
xchg
push
jno
lcall
sub
mov
sarb
cld
or
insb
dec
push
jg
inc
cli
xchg
mov
push
jbe
fbstp
push
xor
push
ds
fildl
lea
mov
lret
push
inc
mov
add
push
int3
and
cld
dec
mov
in
pop
push
push
aam
into
clc
xchg
icebp
inc
notl
jne
xchg
lcall
mov
add
mov
inc
and
sbb
loope
cli
or
bound
jns
fcomp
xchg
movl
lret
jge
enter
mov
sub
fildl
mov
arpl
push
inc
pop
mov
mov
imul
push
movsl
ffreep
es
jnp
mov
adc
jae
js
sbb
mov
push
pop
clc
imulb
xlat
xchg
dec
xor
inc
incl
lret
fwait
imul
push
dec
int
and
scas
les
sub
dec
sub
pop
ljmp
and
xchg
out
or
adc
xor
sahf
lret
pop
and
gs
fsubl
mov
shlb
stos
jl
adc
xchg
fdivl
mov
fidivs
ds
jmp
push
test
lea
test
xchg
mov
dec
sub
sub
and
out
sub
stos
or
add
stos
mov
out
bound
lahf
lret
mov
adc
add
sub
sbb
lods
shr
loop
push
add
lods
mov
movsb
fwait
stos
sbbl
dec
ds
mov
bound
sub
fcoml
cmp
lods
rcll
xchg
rol
jg
push
pop
imul
inc
stos
xchg
xchg
xchg
push
and
mov
mov
fcomps
xchg
gs
sbb
jecxz
ficomps
mov
mov
aas
pop
rorb
out
daa
sub
stos
addb
rcrb
jo
out
adcl
cmpsb
jbe
sub
jo
xor
jmp
imul
popf
push
cmpsb
lcall
sub
push
or
push
ret
daa
popa
int
jnp
daa
add
repz
jge
xor
cwtl
js
jge
aaa
mov
fstl
lods
rcr
adc
mov
in
jp
sub
sbb
xchg
outsb
mov
out
lds
inc
out
xlat
mov
xor
jns
mov
jmp
mov
jne
addr16
jp
icebp
shr
dec
dec
or
stc
fdivp
pop
test
mov
push
inc
sbb
testl
int3
mov
ds
lock
loopne
je
inc
aas
stc
test
into
aaa
dec
aaa
cmp
ja
cwtl
xchg
inc
xor
cs
and
ds
lahf
mov
aas
xchg
jne
push
ds
push
and
test
and
leave
call
int
xlat
les
mov
js
jp
mov
loop
mov
popa
inc
dec
mov
ret
jne
sbb
mov
lret
jl
mov
in
pop
mov
pop
shlb
pop
notb
or
xchg
test
loopne
fdivs
leave
xor
jle
fistpll
push
ds
imulb
cmp
cwtl
js
and
mov
cmp
int
push
push
xchg
add
imul
movsl
movsl
je
jmp
add
jmp
rcll
and
cs
xchg
daa
stos
cwtl
sub
cwtl
xchg
in
push
pop
mov
insl
fcomps
pop
mov
imul
imul
loop
push
lock
out
jge
popa
jmp
mov
test
test
mov
jp
ja
es
sahf
scas
aam
push
in
stos
push
adc
scas
pop
xchg
xchg
aam
daa
data16
ds
imul
adc
andb
push
mov
and
and
push
sbb
mov
inc
sub
hlt
sub
xchg
scas
adcl
push
iret
insl
cmp
lock
xor
mov
and
call
scas
das
dec
aam
and
mov
test
pop
cli
jo
mov
or
sub
adc
repz
popa
pop
mov
out
cmpsl
or
mov
outsl
pop
sti
lret
mov
pop
cwtl
mov
scas
pop
pop
addr16
mov
repnz
ljmp
pop
mov
into
inc
and
dec
popf
xchg
cwtl
pop
dec
out
jl
pushf
test
gs
xor
sbb
nop
adc
test
pop
and
push
popa
daa
mov
xchg
outsl
cmc
mov
push
sbb
adc
out
xor
repz
sub
cmp
enter
sbb
jno
pop
jo
ss
inc
enter
test
repnz
pop
sahf
divl
ds
or
cld
pop
inc
push
rcrl
clc
add
push
out
adc
cmp
mov
out
in
push
dec
adc
jne
lret
dec
push
lea
xchg
inc
fwait
xchg
popf
adc
cmp
ljmp
nop
movsl
xchg
std
in
sti
lea
sbb
xor
sub
sbb
jnp
ljmp
cmp
cwtl
cmp
adc
dec
adc
jnp
daa
dec
push
push
xchg
rcrb
ljmp
cltd
stos
inc
mov
ljmp
test
pop
inc
movb
ret
sbb
pusha
lock
imul
inc
repz
mov
aas
in
push
jnp
in
pop
mov
je
and
adc
pop
xor
icebp
test
fsubrl
jle
pop
shrl
cmc
jp
or
sbb
cld
mov
lret
add
xchg
jns
cmp
sub
mov
rclb
cs
into
repnz
imul
aad
aad
mov
jge
inc
call
arpl
movsl
xor
and
enter
pushf
dec
mov
mov
sbbl
dec
or
fucomi
add
clc
cltd
inc
das
jp
dec
test
mov
mov
jge
xchg
add
es
outsl
and
mov
adc
js
inc
leave
std
mov
xlat
pushf
cmp
stc
roll
dec
lahf
or
pop
aad
filds
pop
repnz
mov
ss
add
xchg
push
nop
lds
sti
mov
mov
mov
cmpsb
aas
mov
push
dec
mov
jmp
xor
push
xor
nop
ret
jmp
dec
or
lahf
sbb
mov
movsb
push
sti
fs
mov
cld
inc
sbb
push
les
mov
or
lods
inc
out
mov
out
dec
pushl
cltd
daa
test
lods
adc
pop
jo
pushf
jae
mov
mov
in
nop
mov
cmpsl
adc
scas
sti
hlt
jge
testb
sbb
dec
fsubr
push
dec
cld
repz
inc
add
xor
aad
fwait
adc
icebp
mov
in
jns
sub
or
mov
dec
push
rcr
add
andl
dec
pushf
lcall
or
add
or
lahf
xchg
add
pop
mov
fs
and
jne
mov
push
outsl
pop
fistpl
scas
jle
cmp
mov
add
and
jge
gs
inc
and
dec
test
loop
dec
scas
xchg
nop
loopne
scas
loopne
xor
jle
pop
daa
lds
shll
fiaddl
mov
loope
push
fnstsw
adcb
ljmp
push
jnp
cmpl
insl
jl
rcrb
mov
clc
jb
scas
cmpsl
adc
jbe
in
movsl
popf
cwtl
and
xchg
jle
xchg
pop
cmp
std
ja
adc
or
jmp
in
shr
aad
jp
pop
movsb
je
pop
xor
into
jae
mov
push
cmp
es
or
daa
fmuls
fisubs
jmp
sub
fcomip
lret
fwait
subl
cs
push
push
adc
xchg
mov
mov
add
nop
sub
or
push
dec
xor
or
add
adc
cmp
adc
mov
movsl
arpl
xchg
mov
push
xor
inc
xlat
aas
push
mov
pusha
lret
mov
or
and
in
jg
mov
cmp
push
sub
daa
test
push
cmp
call
pushf
mov
sub
out
test
pop
and
xor
mov
pop
jmp
xchg
xchg
mov
cmp
in
xor
sub
loop
rol
mov
jns
es
sti
xor
jmp
in
fsubl
fldcw
pop
cmp
jle
cmpsb
cmc
js
ljmp
xchg
cmpl
jbe
scas
ljmp
aam
add
mov
cmp
mov
inc
rcrb
xchg
xchg
push
jecxz
cmpsb
adc
in
rclb
dec
mov
call
cld
js
insl
imul
push
ja
js
mov
mov
aaa
pusha
dec
out
sbb
shrl
xchg
in
out
xchg
hlt
pop
dec
pushf
sub
or
and
xchg
xchg
aas
fwait
mov
mov
and
push
pop
mov
jbe
push
fdivrp
add
test
js
fstpl
pusha
ficomps
sub
jns
iret
insb
sub
jl
inc
jmp
adc
xor
mov
fcompl
add
loopne
loopne
xchg
xchg
jle
incl
cmp
jae
stc
push
rolb
sub
outsb
test
mov
sbb
cmpsl
push
into
mov
bound
push
lods
pop
test
subb
jg
cmc
inc
ja
cli
stos
adc
loop
push
sarl
jo
add
imul
dec
jmp
push
mul
pop
mov
scas
aam
sub
jge
mov
mov
outsl
pop
mov
rcll
ficompl
mov
fsubrp
in
sbb
lea
mov
test
add
enter
and
out
pop
pop
loop
jmp
xchg
mov
inc
aaa
mov
and
pop
inc
fwait
cwtl
and
cmp
arpl
jmp
pop
push
xchg
add
rcrl
stos
xchg
stc
fdivl
aam
cmp
insb
imul
mov
call
add
jmp
sub
pop
sbb
push
in
add
inc
xchg
pop
push
xchg
scas
pop
push
jmp
insl
mov
fmull
fstps
and
imul
jns
nop
xor
push
mov
clc
idiv
jne
loopne
nop
cmp
inc
adc
xor
push
cmp
fs
aad
xchg
mov
stos
sub
push
das
or
clc
or
xor
clc
jnp
sub
inc
hlt
xor
xchg
fidivl
xchg
dec
push
lods
addb
push
mov
sbb
loope
filds
cmp
mov
lea
adc
sub
push
aas
xchg
shll
ljmp
sti
push
push
es
jno
lcall
int
adc
or
fwait
clc
fistl
sbb
push
sub
jb
mov
ret
lea
mov
in
xor
mov
jo
sub
mov
mov
or
push
xchg
sub
sub
inc
and
jp
ja
pop
jo
sbb
data16
sub
pop
inc
push
aas
cmp
cwtl
lds
cwtl
adc
jns
or
dec
lretw
xor
testl
mov
or
decl
rcrb
mov
xchg
cwtl
mov
sbb
sub
pop
jp
jle
enter
test
out
into
jb
mov
mov
xchg
adc
xchg
xor
push
js
jbe
dec
sbb
or
rcrl
cs
rorb
iret
xchg
loope
adc
vmread
lock
out
jno
sub
movsb
int3
outsl
mov
inc
ja
fucomi
lea
and
sub
xchg
mov
inc
jge
rolb
push
xchg
insb
fisubs
int3
sti
sbb
sbb
fs
dec
add
sahf
enter
loopne
mov
loope
push
sahf
push
test
jns
sbb
pop
and
mov
cmp
out
mov
repz
ret
cmp
ret
mov
or
push
imulb
enter
mov
gs
jp
mov
es
lock
jl
xor
roll
push
movsl
jno
inc
scas
scas
pop
jp
pusha
cmp
fcmovbe
icebp
cmpsb
add
das
xor
cmp
aam
adc
pop
ja
je
rol
dec
or
xor
loopne
fisubrl
xchg
scas
cmpsb
sbb
xchg
xor
test
lods
cs
push
add
dec
cmc
sub
cwtl
push
push
xchg
jns
push
dec
fsubl
mov
inc
out
mov
push
push
ret
jo
jbe
pop
stos
jo
fwait
push
mov
inc
into
out
cmpl
xor
add
push
cmp
push
fldl
jg
add
pop
lods
aaa
dec
pop
adc
or
ljmp
jb
mov
dec
lods
fistpll
stos
arpl
or
jae
jbe
js
xchg
push
mov
xor
and
xor
shll
xor
jo
add
movsl
popaw
xor
fildl
push
or
mov
adc
dec
lcall
xchg
add
cli
sti
repnz
in
std
movsb
shrb
dec
mov
outsb
sub
bound
outsl
push
pushf
ficompl
faddl
lcall
test
cmp
xor
or
gs
out
pop
js
pop
xor
in
mov
xchg
cltd
mov
mov
mov
int3
notb
dec
cld
fidivl
in
xchg
int
ds
fucom
std
add
pusha
push
adc
shr
lret
cmp
jle
mov
mov
push
sub
add
shll
pop
adc
xchg
outsl
out
sub
xchg
add
lahf
pop
sub
or
or
pushf
cmp
sub
fstl
push
cmp
add
mov
fcompl
cmp
lcall
jle
mov
and
lds
pop
mov
sub
jbe
fsubr
mov
adc
test
stc
gs
xor
int3
std
inc
popf
mov
les
test
imul
push
xchg
sbb
aam
int
mov
xchg
jge
flds
ret
out
add
sbb
outsb
data16
mov
sarb
stc
int
shll
sub
and
add
scas
and
mov
or
and
in
mov
insb
and
mov
sbb
mov
jge
repnz
ljmp
lret
sti
xchg
or
pop
fnsave
ds
inc
jecxz
pop
ret
dec
fdiv
or
inc
or
aad
cmp
nop
iret
js
jne
in
cmp
test
shr
and
add
push
in
jp
mov
enter
mov
pop
out
dec
add
mov
ret
out
push
push
fisubrs
pop
sub
sbb
push
and
in
adc
enter
adc
je
rcrl
iret
leave
lcall
xorb
and
or
dec
jmp
pop
and
cmp
xchg
push
jae
mov
add
insb
mov
cld
je
stos
sbb
jg
push
mov
mov
stos
cmp
or
pop
cmpsl
dec
frstor
stc
movsl
je
pop
pop
into
rorl
push
mov
mov
sti
sbb
and
inc
xor
push
and
lea
inc
cld
mov
cmp
cmp
push
xor
cld
aam
jnp
mov
imul
xchg
test
in
xchg
in
test
pusha
stos
add
dec
subl
lahf
dec
ja
fisubrl
and
pop
sub
push
scas
cmp
push
lret
inc
mov
cmp
adc
pop
outsb
xor
inc
inc
xchg
mov
fldl
pusha
and
pop
jb
popa
imul
out
sbb
mov
clc
xchg
cmp
mov
mov
lahf
jl
jmp
and
jb
xchg
nop
or
inc
or
cmp
push
ret
pop
mov
xchg
jne
and
test
loope
out
pop
push
jo
dec
out
push
mov
push
mov
pusha
stos
int
das
mov
ret
inc
or
inc
lcall
stc
pop
mov
add
adc
jg
jno
push
bound
pop
pushf
add
cmp
movd
loope
push
pop
or
stc
cmp
sbb
cmp
dec
and
sub
shlb
cmp
push
std
xlat
lds
mov
mov
mov
inc
sub
daa
movsl
inc
jecxz
js
inc
sub
xor
sbb
cwtl
stos
sbb
gs
xor
gs
mov
loope
repnz
pop
xor
js
fsubl
repnz
and
cmp
mov
cwtl
je
add
dec
loop
mov
mov
xorl
fidivrl
pop
leave
cld
or
fbld
xchg
sti
mov
scas
std
mov
pop
leave
push
dec
nop
dec
aam
push
dec
shlb
or
mov
pop
leave
inc
adc
mov
movsb
fs
cmp
push
push
mov
xor
jle
mov
adc
mov
bound
pusha
sub
jecxz
mov
sbb
add
xor
push
idivb
jecxz
mov
push
fstpt
push
stos
repnz
dec
in
push
incl
sbb
stos
xchg
pop
test
jp
jns
jl
sub
sahf
cli
leave
cmp
popa
mov
push
addl
mov
insl
jl
fcoml
mov
jmp
mov
mov
call
out
mov
xchg
cltd
data16
mov
arpl
push
jne
fs
adc
or
xor
mov
adc
pop
add
pop
das
pusha
cmp
and
outsl
loope
data16
hlt
orb
jecxz
pop
xor
loop
inc
xchg
push
nop
fnsave
movsb
sub
lock
aas
cmpsl
lret
push
sbb
movsl
pop
fdivp
jb
stc
sahf
movsl
inc
mov
test
mov
cmpsb
sbb
bound
dec
mov
inc
sub
sbb
and
sbbl
outsb
ljmp
cmc
pop
mov
mov
mov
cltd
lahf
mov
inc
jmp
fdiv
dec
outsl
cmp
out
mov
push
int3
mov
inc
loopne
sbb
add
ljmp
fcomps
std
cmpb
mov
mov
shrb
push
aas
cwtl
mov
add
pop
out
dec
cmp
sarl
mov
add
outsl
xchg
mov
loop
push
insb
pop
sub
rcll
mov
movsb
outsl
xor
pushf
iret
aaa
add
xchg
out
scas
mov
outsb
push
repnz
addr16
mov
and
xor
xchg
xchg
jb
dec
mov
nop
mov
mov
cmpsb
mov
int
test
mov
adc
in
iret
inc
iret
aaa
lret
rcrb
repz
adc
insb
clc
fnsave
jbe
mov
mov
movsb
out
xchg
aad
outsb
sahf
loop
jno
fs
insl
int3
scas
xchg
rcrb
stc
xchg
inc
jecxz
lock
fimuls
adc
mov
sub
push
or
lret
scas
arpl
mov
rcll
or
cmp
lods
xchg
ret
xor
cmp
mov
inc
push
fbstp
sub
push
xor
add
cmp
push
pop
andb
addl
pop
pop
mov
push
adc
inc
lcall
inc
sub
popa
in
inc
xlat
es
pop
sar
aaa
mov
inc
inc
lret
pop
xchg
push
sbb
xchg
in
insb
jp
repnz
xor
jp
dec
in
ss
ret
clc
outsl
cltd
lds
lods
hlt
into
inc
sub
cmpsl
xorb
imul
iret
xchg
dec
jb
popa
or
scas
sti
jecxz
shlb
push
inc
ja
jmp
mov
and
cmp
sbb
xchg
ret
xchg
pop
and
leave
mov
pop
jl
inc
add
roll
fs
test
pop
lods
jge
popf
pop
aas
aaa
popa
adc
aas
sbb
inc
add
andb
cli
mov
jbe
lds
mov
sub
outsl
es
ret
add
shrb
popl
imul
add
ret
sbb
rorb
xchg
mov
out
dec
fnstenv
dec
xlat
xchg
and
nop
mov
lods
loop
mov
mov
adc
mulb
sub
arpl
pushf
fisubl
inc
fdiv
pop
or
sub
or
test
dec
ret
test
and
fwait
add
mov
fucomi
and
adc
xchg
adc
enter
mov
sbb
dec
push
jno
xchg
push
cs
and
add
push
fiaddl
add
lods
push
xchg
les
fldt
mov
mov
stos
jmp
mov
test
sub
dec
pop
cmp
rorb
pop
and
lret
xor
test
int
lea
xor
fldt
and
pop
push
sbb
fwait
jae
mov
stc
inc
movzwl
dec
nop
sbb
ds
mov
sbb
mov
outsl
lds
das
dec
les
lcall
fisttpl
jl
xchg
mov
cmp
sbb
out
imul
dec
icebp
jmp
outsl
lret
aaa
scas
cwtl
push
sub
jno
loopne
cltd
das
daa
push
or
in
mov
dec
inc
int3
mov
lret
cwtl
xor
test
dec
lods
in
jbe
das
cmp
pop
push
shl
sub
add
mov
xchg
mov
xorb
cmp
ret
mov
int3
sub
mov
rolb
pushf
mov
push
sub
push
cmc
jno
fidivl
test
scas
xlat
mov
and
xlat
jle
lock
jl
mov
mov
xor
mov
fcoms
rcr
mov
xchg
rcrb
out
pop
pop
test
mov
into
xorb
das
xor
sub
xorb
xchg
mov
xor
les
in
je
stc
jo
jmp
div
test
pusha
push
adc
inc
mov
ret
sub
lret
mov
aam
xchg
cmp
repnz
cwtl
jb
test
rcll
or
pop
jmp
pop
or
mov
add
xchg
add
dec
push
je
sub
fmuls
or
pop
movsl
inc
xchg
fmulp
popa
test
int3
xchg
adcl
mov
pop
adc
mov
inc
aaa
fsts
xor
clc
dec
jbe
xor
fisttps
fcmovnbe
pop
outsl
out
out
je
or
lret
idivl
push
mov
pop
hlt
pop
sarl
dec
xor
xchg
pop
or
insl
adc
push
mov
mov
orl
icebp
stc
sbb
jle
adc
push
iret
lea
cli
repnz
mov
loope
push
pop
cmp
and
xlat
push
sub
clc
jg
mov
pop
dec
mov
xor
mov
loope
dec
data16
push
addb
jbe
mov
mov
loope
outsb
pusha
push
out
or
in
or
pop
or
pushf
adc
xchg
add
outsb
cld
xorb
test
lcall
movsb
push
inc
jo
gs
stos
sub
outsb
dec
xchg
sbb
cmp
adc
push
sub
nop
inc
loop
mov
add
sub
cmpsb
sbb
cwtl
cmp
cmpsl
scas
repz
mov
push
sub
push
and
push
inc
out
test
cld
lcall
push
arpl
inc
dec
jno
imul
mov
popf
adc
insl
cmp
jp
push
pop
cli
mov
hlt
loopne
cmpsb
aad
or
repnz
xchg
out
sbb
adc
mov
add
inc
xor
incb
or
cmp
repz
std
lret
pop
jno
xchg
repnz
inc
aam
imull
pusha
imul
aam
xor
xchg
or
lods
fcmovnb
int3
jo
dec
lcall
loop
dec
mov
jae
inc
fisubl
adc
flds
mov
sti
xchg
jecxz
mov
push
flds
mov
mov
icebp
incb
pop
dec
push
das
cmovnp
rcrl
jne
cmpsb
inc
sub
jo
addr16
clc
sub
push
iret
lods
cmpsl
lock
lods
das
into
dec
or
inc
inc
jae
adc
jl
int
gs
jae
dec
push
add
imul
lret
or
fs
add
out
mov
mov
add
das
popa
negl
jbe
sbb
aad
mov
xor
gs
repz
cmp
mov
mov
add
arpl
fwait
sbb
fisubl
cmp
dec
pusha
imul
loope
xchg
divps
ret
lods
cmp
push
test
inc
in
lret
mov
imul
icebp
push
clc
mov
pop
insl
int3
and
sbb
clc
out
pop
enter
pop
sbb
addr16
out
popa
jae
lcall
andb
push
xchg
out
popa
sub
sub
cmp
add
cwtl
outsb
cs
idiv
cmp
add
in
sub
push
cmp
outsl
push
pusha
and
sub
xchg
xor
cmp
mov
and
test
or
push
mov
adc
push
mov
bound
sub
in
mov
pop
dec
sbb
hlt
or
ret
cld
cmp
sub
ds
cmp
dec
cmp
nop
pop
inc
fcompl
dec
push
dec
inc
pop
orl
inc
mov
ja
xor
push
cmp
in
fidivrs
inc
jp
imul
inc
sub
out
push
pop
lcall
mov
sub
push
jo
push
enter
js
addr16
mov
std
dec
sub
sub
pop
xor
aam
mov
inc
and
movsl
sbb
in
mov
aam
mov
scas
xor
popl
sbb
fiaddl
mov
fcmovb
je
fdivrs
daa
mov
push
iret
es
cltd
jno
dec
push
mov
aaa
xor
je
or
inc
xchg
popf
out
lahf
frstor
hlt
in
sub
movsl
mov
pop
push
inc
pusha
push
sarb
iret
fidivs
adc
insl
lods
mov
stos
mov
enter
test
ret
mov
xlat
lahf
call
sub
fmull
rorl
repnz
pop
jle
lret
je
mov
addl
dec
inc
outsb
cli
dec
dec
enter
hlt
out
arpl
js
pop
loopne
jns
mov
pop
push
dec
push
push
adc
daa
xlat
pop
andl
push
je
xor
ss
xor
sti
sub
fidivrs
je
das
xchg
ret
cmpl
dec
and
in
pop
imul
mov
call
push
or
outsl
xchg
mov
es
push
inc
mov
repz
mov
pop
iret
clc
sub
dec
sbb
jecxz
xor
das
xor
push
jo
lahf
or
sbb
mov
add
cmp
pop
xchg
inc
mov
mov
mov
dec
iret
pop
sbb
outsl
add
mov
cltd
cmp
xchg
and
aam
rorl
ss
mov
push
les
enter
sbb
jno
cmp
xlat
mov
adc
loope
rcrb
loope
sbb
fadds
push
pop
fimuls
sti
xor
lea
push
mov
sbb
jmp
test
loopw
sub
loopne
lds
xor
mov
test
xor
cwtl
test
sti
lret
cwtl
stos
xchg
or
imul
push
mov
xchg
pop
in
icebp
imul
xor
and
orb
shl
fsubs
dec
jmp
and
int
jnp
mov
xor
sbb
fsubrs
clc
addr16
mov
es
cs
xor
mov
cmp
push
testl
push
cmp
pop
lret
mov
leave
mov
fdivrp
or
jnp
add
jno
inc
cmpb
hlt
xchg
movsb
fcompl
mov
pop
ret
fldlg2
inc
jns
incb
dec
out
pop
mov
cmp
movsb
std
cld
dec
mov
mov
xchg
lock
push
enter
or
pop
out
stc
cmp
lods
and
leave
mov
pop
xorb
out
mov
and
mov
adc
lahf
inc
mov
insl
cmpl
cmp
nop
sti
scas
lcall
add
lret
inc
scas
repnz
push
rcrl
ja
jg
push
dec
sub
sbbb
dec
add
adc
jg
ja
or
fcompl
movsb
imul
cmp
int3
add
lret
insb
add
stos
rol
std
dec
or
dec
xchg
repz
adc
and
out
dec
adc
in
cmpsl
mov
adc
popf
mov
lret
xor
leave
xchg
or
adc
pop
jns
xchg
sbb
xchg
dec
xchg
mov
mov
cmc
mov
scas
clc
push
xor
jge
jle
dec
stc
lds
cmc
lahf
mov
sub
jp
lret
lods
pop
scas
rolb
loop
xor
inc
in
fidivs
dec
rolb
sub
jge
ficomps
clc
dec
nop
lret
aaa
cmc
jmp
aaa
imul
inc
push
push
xchg
insl
and
mov
sbb
push
cmp
sub
ljmp
cli
outsl
call
imul
stos
adc
test
stc
adc
ljmp
xchg
sub
jno
movsl
mov
int
sub
and
je
test
ljmp
out
mov
inc
dec
adc
pop
jne
test
inc
in
push
popf
test
or
pop
xchg
or
xor
mov
sahf
lret
dec
push
pop
shlb
sub
xchg
mov
rcrb
xor
mov
push
outsb
pushf
jge
fwait
inc
loopne
push
push
pop
adc
stos
mov
push
cmc
or
inc
push
xchg
mov
add
fisttpl
jo
lret
and
mov
sbb
mov
psubusw
lahf
xor
out
ja
ret
lods
adc
ss
stos
mov
xor
rcr
push
sub
dec
jl
pop
shr
xor
mov
inc
aam
xor
mov
cmp
sbb
sub
jo
cmpsl
mov
mov
fwait
mov
rcrb
stc
lea
jo
lods
movsl
mov
ret
lahf
xor
imul
andb
ljmp
stos
push
mov
mov
fldl
lret
mov
mov
sti
in
jp
enter
cmc
cmpsb
adc
call
jb
jno
adc
cmp
sub
xor
or
iret
lods
es
mov
or
push
pop
mov
fstps
xorl
sub
add
jbe
lcall
lods
inc
push
mov
shrb
push
add
int
scas
orl
arpl
mov
movsb
daa
fdiv
and
fs
push
je
shll
imul
jecxz
fwait
stos
pop
shlb
push
sbb
push
jo
cmp
or
mov
pop
iret
lret
push
out
out
jp
andb
in
mov
mov
dec
push
ljmp
pop
sarb
aas
or
rcr
loopne
gs
sub
mov
stos
aas
jle
push
mov
mov
xchg
xor
mov
in
or
ret
push
mov
add
sub
or
mov
gs
pop
and
int3
and
lret
push
dec
or
and
lock
jmp
retw
loop
int3
enter
push
adc
inc
adc
push
cmp
ret
mov
fcomp
push
icebp
jb
loop
or
jg
ficomps
sbb
lret
mov
sub
insl
repz
iret
pop
sbb
sti
call
pop
push
push
lret
ds
aad
push
push
scas
addr16
cmp
cli
stc
fdivl
aam
push
xor
mov
sub
inc
push
sub
subl
or
lret
xchg
rcrb
ds
dec
dec
mov
add
in
push
dec
push
imul
insl
addl
sub
inc
loop
cld
mov
xor
cld
pop
dec
jnp
jecxz
movsl
add
adc
lahf
mov
bound
add
loop
test
and
xchg
int3
mov
xchg
pop
mov
hlt
insb
lods
pusha
push
lods
adc
out
jo
inc
jns
hlt
dec
call
adc
repnz
out
out
xchg
adc
ss
adc
xchg
xor
or
cli
mov
orb
and
adc
pop
cmpsb
lahf
jmp
inc
jg
rcll
mov
cs
xor
jns
push
jb
aam
adc
sbb
fcompl
fstl
adc
mov
pop
push
and
cltd
dec
jp
movsb
shl
sahf
and
adc
mov
int
dec
rol
out
mov
push
mov
push
adc
mov
dec
shl
cs
pop
test
lret
aam
stc
mov
pushf
mov
call
je
sbb
repnz
jmp
fs
movsb
js
jge
push
movsl
mov
sbb
das
loopne
cmp
addr16
in
fldcw
xchg
sub
mov
push
iret
cld
shl
cmp
push
xorl
push
fsubrs
shrl
mov
pop
pop
adc
sarl
lret
movsl
push
test
mov
in
in
xchg
decb
cmc
sahf
and
fwait
out
pop
push
sti
inc
in
shrl
cmp
xchg
and
mov
or
mov
pop
hlt
dec
sbb
jg
sub
dec
mov
pop
jmp
sti
popa
and
push
mov
pusha
mov
xor
mov
movsb
icebp
jbe
popf
icebp
fstpl
jnp
cmp
push
cmp
adc
mov
cmp
in
xor
add
aam
out
fpatan
xor
dec
sar
orl
mov
lcall
es
mov
ret
lock
mov
inc
cmpsb
lods
int3
xor
int
inc
lods
test
pop
not
xchg
mov
dec
adc
loopne
shrl
ret
xor
xor
add
jnp
ljmp
scas
rcr
jb
push
out
into
hlt
test
jg
pusha
ljmp
out
imulb
push
loope
jp
xchg
popl
push
sub
push
pop
or
dec
ret
sub
cli
xchg
xor
add
sahf
xor
sub
jmp
mov
add
push
imul
xchg
inc
mov
add
jl
sub
rcl
test
test
pop
lcall
pop
mov
jb
cmp
mov
mov
xchg
cmp
test
inc
in
push
mov
fsubr
fbld
or
aas
inc
mov
ljmp
inc
mov
divb
mov
xlat
push
xor
test
adc
cmp
cmpsb
insl
lret
adc
xor
push
lahf
mov
inc
lahf
in
aas
xchg
data16
test
movsl
fwait
jbe
cmpsl
add
dec
and
mov
fs
les
test
and
adc
mov
mov
or
outsl
cmp
xor
ret
movsl
in
jbe
sbb
push
rep
lods
and
lds
xchg
dec
dec
pop
push
add
lods
das
inc
out
les
inc
adc
or
scas
into
imul
mov
sub
pop
inc
jne
out
je
jbe
xchg
add
sub
sub
pop
mov
jnp
adc
push
xorb
add
mov
mov
les
mov
lods
call
mov
dec
and
out
mov
out
mov
dec
sbb
imul
fisubrs
call
sbbl
dec
sub
mov
fucomp
push
and
shl
aaa
mov
nop
xor
popf
imul
outsb
popa
jle
pop
pop
sub
inc
inc
imul
das
imull
enter
pop
filds
dec
dec
lcall
xchg
sti
fiadds
cmp
pop
scas
lret
sbb
imul
test
sbb
sbb
pop
add
add
xchg
in
push
je
test
imul
std
mov
fucom
fdivr
push
pop
cld
or
filds
push
sbb
push
xor
jne
ret
aam
dec
and
dec
inc
adc
jp
pop
pop
movntps
aam
movsl
addr16
dec
out
in
add
inc
in
sub
cmp
hlt
mov
mov
test
in
mov
fsubrs
int3
xchg
lcall
and
repz
sub
mov
icebp
jl
cld
cwtl
push
dec
adc
push
inc
cmpsl
dec
test
mov
std
and
xor
das
fwait
add
out
jo
sbb
pop
and
or
movsb
cmpl
icebp
dec
or
jge
int3
lds
add
cwtl
adcl
mov
sbb
in
push
pop
push
xchg
cmp
repz
imul
sbb
add
iret
push
dec
sub
xchg
sbb
test
pop
xchg
out
in
mov
push
jmp
inc
fdivrp
adc
pop
xor
xchg
add
jno
xchg
int
ficoml
movsb
out
inc
adc
sub
lret
push
and
cmp
out
pop
leave
cmpsl
pop
mov
sub
xor
sub
inc
test
movsl
sub
mov
fidivrs
es
hlt
pop
mov
iret
ss
mov
out
lds
subl
in
mov
icebp
xor
mov
into
xchg
fldenv
jecxz
int3
aas
adc
mov
cld
push
scas
pushl
jle
and
cmpsb
sti
movsl
shrl
cmp
jg
outsl
imul
and
mov
dec
mov
mov
int3
jno
push
in
jae
push
jl
add
mov
lcall
jo
into
test
and
lret
mov
or
outsb
or
popa
lcall
or
in
sub
aaa
pop
jb
sub
xchg
pop
insl
mov
jl
jmp
lea
push
int3
rcll
jnp
dec
inc
jge
loopne
sbb
out
bound
add
pop
and
adc
repnz
sub
push
fs
rclb
aad
pop
ret
sub
out
sti
fwait
mov
adc
test
lods
test
insl
cli
fildll
popf
add
sti
push
leave
jecxz
scas
aaa
mov
cld
and
sbb
out
mov
mov
ljmp
xchg
mov
sub
int
loopne
inc
inc
aaa
fimuls
dec
or
loope
xchg
mov
aad
lds
push
xchg
xor
fcoml
in
ss
push
dec
lret
xchg
push
push
push
xor
pusha
int3
mov
jp
sub
xor
arpl
jns
and
aas
ret
sbb
stos
sub
pop
mov
push
testb
mov
in
mov
iret
push
popa
and
add
jle
sbb
sub
cs
jmp
hlt
adc
push
decb
push
push
sbb
cmp
push
dec
aaa
sahf
cmp
push
lods
rolb
mov
dec
sub
fdivrl
adc
dec
jne
mov
xor
mov
mov
je
push
imul
mov
inc
push
xchg
sbb
mov
sbbb
sti
outsb
adc
sbb
sbb
ja
sub
iret
stc
out
lods
xchg
int3
jbe
adc
test
out
int3
jecxz
push
pop
fcomps
jae
push
pushf
push
nop
jp
cmp
push
xchg
jp
test
mov
popf
dec
jae
fidivrs
push
xorb
incl
mov
lcall
add
mov
and
sti
rorl
add
shlb
add
dec
decl
mov
inc
pop
xchg
hlt
mov
mov
or
stos
sbb
pop
addb
insl
cmp
cmp
fwait
inc
jbe
mov
push
stc
sbb
scas
push
push
mov
sbb
fnstsw
aad
pusha
push
dec
iret
test
enter
movsl
cmp
icebp
xchg
jns
push
ja
cmpsl
mov
mov
mov
outsb
test
xlat
jnp
dec
insb
and
stc
mov
mov
or
mov
mov
and
mov
ret
stc
call
mov
lret
lret
mov
and
xchg
mov
shrb
or
pop
xor
out
inc
inc
bound
je
jmp
js
stos
jg
stos
jnp
fldl
or
mov
lods
stc
adc
cmp
cld
lock
pop
dec
dec
push
ss
stos
cmp
ss
push
or
gs
or
int
inc
cmp
mov
imul
inc
icebp
and
iret
or
xchg
lds
add
or
xchg
dec
xor
adc
loopne
sub
inc
cwtl
rcrb
jns
pop
decb
pop
sbb
mov
dec
cmp
cmp
fldt
jg
in
test
aas
pop
cmc
dec
sub
int3
lret
lret
mov
xchg
mov
enter
mov
mov
jg
pop
push
add
popf
aad
sub
sbb
inc
add
ljmp
stc
lret
popf
stos
test
pop
loop
add
jno
int
and
je
icebp
cmp
lea
hlt
mov
sub
call
clc
push
add
lds
mov
jecxz
dec
shlb
aam
imul
test
in
push
imull
cld
lods
push
sub
mov
pop
gs
int
fbstp
insl
jbe
adc
xor
sbb
mov
hlt
jo
addl
cmp
incl
cmpsl
mov
sti
adc
rclb
push
shrl
pusha
jno
insl
fildl
aas
ficoms
xchg
mov
shl
mov
cmp
xchg
fwait
std
cmp
inc
fprem1
addl
ja
fbld
shr
adc
add
push
ljmp
sub
pop
insb
std
pop
xor
inc
movsl
xchg
pop
mov
push
push
jge
sbb
pop
mov
sbbb
shr
dec
add
and
insb
sbb
jbe
leave
push
adc
sbb
inc
outsl
in
inc
and
jg
in
mov
pop
inc
filds
enter
pusha
in
fists
fsubl
pop
xchg
mov
lcall
xor
mov
lret
aaa
fcompl
mov
daa
rolb
outsl
lea
mov
daa
cmpsb
and
push
iret
fsts
pop
stc
dec
push
pop
loop
dec
push
cmpsb
dec
cmp
das
shll
test
out
mov
insb
sbb
call
mov
push
mov
pop
int
xchg
sbb
and
sbb
sbb
ret
or
into
test
xchg
pop
sti
test
repnz
stc
jg
push
pusha
jno
mov
ror
and
frstor
and
into
mov
inc
dec
pop
push
shlb
push
jmp
mov
mov
les
pop
hlt
jle
jnp
push
xchg
test
stos
popf
jg
test
sub
and
mov
in
jg
sub
jle
pushf
jl
fwait
jb
out
fisttpl
xor
and
addl
movsb
scas
jno
arpl
cmp
or
stos
pushf
repz
sbb
cmpsb
dec
pop
mov
pop
dec
out
mov
clc
pusha
xchg
ss
inc
push
int3
jmp
sub
insl
and
sbb
fildll
jl
inc
js
fisttpll
aam
pop
push
test
pusha
jo
mov
sbb
fwait
sti
je
inc
sub
int
mov
sub
enter
scas
jecxz
stos
pop
js
in
repz
adc
into
cmpsb
add
xchg
inc
fcomps
insb
mov
lock
lcall
adc
inc
in
pop
sar
outsl
dec
lret
lock
fwait
cmpxchg
mov
popa
cs
cmpsb
jg
mov
js
fwait
andb
xor
mov
subl
or
sahf
dec
xchg
out
mov
xor
pop
lahf
mov
hlt
sub
mov
dec
arpl
jmp
pop
mov
popf
or
push
shrb
jmp
aam
push
fs
outsl
mov
loope
mov
push
fcomps
inc
scas
jge
lock
fiaddl
adcl
sub
sbb
gs
lret
test
into
push
xor
pop
test
stos
je
stos
ret
xor
pusha
mov
pop
iret
test
jne
mov
mov
or
xchg
xchg
repnz
dec
xlat
xlat
mov
or
mov
dec
sti
addr16
xchg
push
inc
and
and
ja
push
rolb
cld
and
sbb
push
mov
push
insl
mov
lret
outsb
pop
fwait
xor
dec
dec
hlt
cltd
inc
sbb
mov
dec
dec
xchg
jmp
lods
or
adc
scas
ret
arpl
mov
ret
out
sbb
jne
mov
cmp
cmp
loop
std
cwtl
xor
cld
pusha
outsl
lock
stc
lods
rorl
push
mov
dec
imul
adc
cmp
or
popa
in
out
mov
push
dec
sbb
in
or
pushl
sub
nop
dec
mov
nop
lret
ja
pop
mov
repnz
cmp
in
xchg
cmc
push
mov
inc
mov
jno
ss
or
insl
mov
aad
out
dec
xchg
lock
jl
mov
pop
sbb
jg
popa
daa
push
pop
push
cltd
xchg
adc
and
daa
cld
push
aam
test
leave
shlb
fldt
shl
mov
adcl
xchg
cmp
cli
mov
or
push
mov
inc
dec
dec
and
mov
nop
adcb
mov
fidivl
ljmp
insb
or
test
xchg
cmp
push
lahf
imul
sub
jbe
jp
lds
sub
je
lea
pop
hlt
aaa
xlat
mov
lods
movl
std
ror
jne,pn
das
fnstenv
xchg
in
filds
dec
add
das
jmp
int3
inc
cs
clc
inc
cs
or
dec
rorb
jge
repnz
lods
add
adc
cmpsl
push
jo
test
mov
inc
sbb
mov
out
cmp
stc
add
sbb
mov
push
mov
movsb
inc
test
pusha
jns
stc
stos
mov
cmp
and
popf
adc
clc
ja
and
bound
aad
cmpsb
je
cmp
and
fists
jns
pushf
cmpsb
cmc
xchg
fists
jg
pop
pop
jge
mov
pop
cmc
inc
aad
test
sub
and
or
lret
movsb
adc
jmp
dec
xchg
mov
push
xor
das
xchg
dec
pop
lds
pushf
add
setbe
aad
push
pop
lea
lock
je
les
jo
fsubrl
dec
lods
rcrl
sbb
push
dec
popf
mov
pop
xchg
push
mov
mov
clc
jb
out
fs
mov
mov
xchg
fsubs
pop
adcl
xor
aas
test
xchg
add
mov
les
mov
rcrb
mov
sub
gs
push
push
cli
mov
push
adc
xor
add
and
je
mov
mov
xor
into
clc
mov
xlat
mov
push
repz
lock
sub
xchg
add
inc
cld
mov
push
mov
std
adc
and
out
pop
orb
mov
test
and
ss
push
cmp
stos
sub
mov
and
insb
mov
pop
xor
insb
rorl
inc
sahf
dec
jb
daa
fucomi
sbb
roll
loop
scas
mov
push
mov
jnp
fdivrl
add
test
fistl
pop
sahf
push
push
dec
les
xchg
and
xchg
pop
lds
cmpsl
cmp
lods
dec
gs
or
push
inc
arpl
stos
jne
adc
dec
and
add
out
push
fiaddl
dec
fisttpll
push
ja
test
push
adc
out
jb
xor
cmp
mov
subl
jmp
and
xchg
mov
in
jbe
idivl
mov
sbb
push
lahf
popa
mov
in
cmpsb
movsb
fstpt
push
xchg
mov
test
sti
add
mov
ret
in
ret
aas
scas
add
out
push
mov
pop
ret
movsl
test
movb
cmp
jae
pop
dec
scas
daa
add
cmpsl
cmp
jb
xchg
ja
shll
je
loop
roll
cs
add
push
mov
jae
leave
xor
inc
pusha
jp
js
mov
push
mov
mov
outsb
enter
mov
dec
jbe
in
loop
push
jb
rcrb
or
xor
loopne
dec
sti
shlb
shll
mov
add
rcl
or
adc
pop
xchg
sbb
mov
xor
repz
sbb
pop
js
push
ljmp
xchg
fimuls
jecxz
jnp
mov
pop
lcall
sub
fcomps
push
cs
xor
mov
out
cmp
ja
out
mov
ja
sbb
adc
push
cmp
cmp
sub
clc
jnp
addr16
inc
jp
pushf
test
or
cmp
mov
rorb
cmp
cmpsl
xor
aad
inc
sbb
or
aas
imul
dec
fs
fists
sub
out
xchg
jp
mov
inc
mov
mov
xor
popf
dec
roll
mov
repz
jbe
clc
mov
roll
iret
xchg
lcall
aad
je
and
cld
js
inc
test
fdivr
test
test
adc
test
in
mov
cs
aam
pop
lret
ds
or
or
cli
cli
int3
xchg
push
lahf
push
repz
gs
sbb
xchg
ljmp
pop
mov
gs
stos
ljmp
fcomps
cmp
dec
jg
jecxz
out
leave
fcoml
inc
jb
pop
jae
divl
xchg
enter
xor
imul
test
sub
imul
xor
imul
sbb
cltd
sub
fxch
and
flds
mov
test
test
sbb
cwtl
dec
aad
sbb
shld
xchg
jne
jbe
cmp
pusha
gs
cld
push
xor
mov
lods
cwtl
or
mov
shl
cwtl
pop
push
jmp
lock
dec
data16
psrlq
sub
push
mov
call
rol
mov
xchg
sarl
sub
inc
sub
lcall
movsl
mov
jb
mov
fsubrp
fimull
cwtl
outsb
sbb
mov
vmulps
pop
xor
push
mov
cltd
or
ret
dec
pop
ret
stc
int
popa
push
or
lea
sub
and
iret
repnz
data16
and
push
lods
fstps
ret
daa
lock
push
inc
outsb
mov
lea
in
ljmp
mov
fwait
sbb
pusha
pop
imul
in
sarl
and
add
xor
insb
and
mov
cmp
stc
push
ljmp
adc
movsb
xchg
mov
cmp
scas
add
inc
enter
shlb
ss
sarb
inc
sbb
das
add
daa
push
push
mov
pop
ficomps
hlt
popf
test
sub
lahf
pop
aaa
repz
jno
pop
push
call
inc
sub
scas
pop
cld
iret
sub
fdivl
scas
inc
xchg
inc
jmp
mov
jne
cmc
mov
rclb
mov
adc
std
loope
cmpsl
les
ss
test
mov
loop
add
xor
in
sarl
pop
les
rolb
lea
pop
rcl
bound
idiv
mov
and
jge
pop
sarb
xorl
mov
or
mov
jl
lret
int
aad
adc
imul
sahf
decb
fdivrl
add
mov
xlat
dec
fldcw
out
faddl
fildll
xchg
inc
ss
cld
adc
push
or
xor
enter
shrl
lods
into
lcall
rol
and
enterw
jns
dec
or
cmp
pop
jl
pop
sbb
pop
xchg
lods
mov
repnz
push
cmp
jbe
jae
ljmp
cmc
add
movsb
cmp
sahf
mov
push
adc
lret
lcall
xor
out
pop
or
fisttpll
cmp
mov
insb
test
stos
pushf
mov
cli
xchg
jae
xchg
std
fsub
push
inc
in
inc
addr16
mov
andb
loopne
push
stos
and
or
iret
aad
add
test
scas
mov
xchg
xchg
mov
cwtl
or
fstpl
mov
pop
scas
test
mov
mov
jo
and
and
sbb
lahf
dec
cld
xchg
pop
cmp
out
xlat
fwait
std
jns
adc
lret
adcb
push
xchg
test
lock
pop
test
push
dec
icebp
inc
bound
adc
jno
sti
lret
test
ljmp
aad
lods
adc
and
movsl
mov
mov
lods
push
sbb
sahf
lret
jmp
mov
sbb
lret
and
xchg
daa
adc
enter
rol
xchg
notb
jl
loopne
add
pop
mov
mov
sbb
lds
call
xadd
jno
or
xchg
jne
popa
lock
mov
pop
mov
mov
push
lret
cmp
mov
dec
movsb
loopne
fcmovnu
test
mov
pop
sub
sbb
rclb
pop
test
stos
das
mov
test
xor
mov
jbe
xor
push
sub
xchg
xchg
das
jnp
lea
push
push
stos
fisubs
loope
fsubp
les
lcall
cld
ja
fiaddl
loop
push
inc
loope
jne
inc
push
dec
lods
out
fisttps
pmulhw
aam
scas
xchg
adc
or
ja
sub
gs
xor
dec
fwait
clc
mov
mov
das
mov
xchg
js
sub
ds
rclb
pop
jo
fwait
rolb
lds
mov
arpl
mov
add
into
aad
or
aam
cltd
outsb
mov
adc
mov
out
xor
push
cmp
outsb
mov
les
lds
adcb
sub
ret
mov
lds
arpl
xorb
lods
bound
cmp
jmp
pusha
and
aad
pop
out
loop
loopne
idivb
out
xchg
negl
xchg
push
dec
mov
fwait
pop
inc
subb
mov
cld
sub
sub
jecxz
add
jns
mov
add
mov
out
out
imul
sub
jmp
nop
add
mov
test
test
jb
nop
or
pop
in
movsl
inc
dec
jle
shr
je
pop
cmp
jp
fsts
insl
xchg
mov
sub
hlt
rorb
and
ljmp
and
aam
jnp
or
push
and
dec
repz
pop
jge
stos
jb
and
loope
jbe
pop
push
xor
mov
lea
mov
fnstenv
jmp
jp
fcmovbe
enter
pusha
lds
dec
push
shrl
js
divl
or
xchg
mov
jb
cmp
lahf
lock
scas
sbb
das
les
insl
ret
cmp
jns
out
jecxz
notl
sub
scas
mov
and
out
aam
out
mov
dec
ret
sbb
sub
mov
adc
loope
xchg
lock
fldenv
fistl
dec
inc
fcoml
addr16
sbb
ss
pop
and
add
add
out
stos
xor
aam
cmp
xchg
cld
push
movsb
push
popa
aad
mov
lret
pop
rcrl
mov
push
inc
mov
adc
je
ljmp
push
adc
sub
or
push
mov
jmp
xor
in
mov
insb
ds
adc
jg
jbe
or
jno
lret
sbb
or
inc
dec
das
cmp
sub
cmp
stc
mov
scas
test
mov
in
popa
test
insl
and
xor
mov
or
je
scas
test
pop
divl
or
xlat
add
fistpll
aam
sbb
sub
add
mov
mov
mov
pusha
pop
pop
cmp
idiv
mov
add
fxch
inc
sbb
inc
cli
or
mov
xchg
stc
mov
xlat
mov
call
sti
iret
xor
add
aam
aad
lcall
adc
loopne
sub
lcall
cmp
push
ret
std
xor
adc
pop
sbb
mov
loop
mov
test
sbb
cs
je
cwtl
sti
lahf
lods
xor
add
sub
or
pop
bound
xchg
into
mov
dec
xchg
dec
std
into
mov
and
add
dec
sub
loope
aas
outsb
cmpl
dec
jne
sarb
sub
mov
cmpsl
or
pop
cmp
xchg
mov
ja
pop
clc
repnz
sbb
lea
sbb
push
sub
xchg
mov
push
push
push
xchg
sub
lcall
and
push
fdivl
lea
into
insb
lock
xor
es
jmp
aaa
test
jno
xor
jp
stos
std
sub
jmp
adc
sbb
cmp
push
das
cmc
outsl
inc
cld
subb
xor
inc
sbb
je
clc
pushf
jecxz
dec
sahf
push
mov
cmp
push
call
mov
mov
scas
ret
dec
insb
xor
dec
mov
mov
mov
fwait
mov
pop
pop
dec
cmp
outsl
shlb
sub
andl
push
push
mov
mov
stc
push
mov
sbb
and
add
shrb
lahf
enter
push
out
testl
jmp
in
inc
inc
popa
xor
push
insl
cmp
sub
ljmp
jl
das
call
pusha
insb
jp
adc
inc
push
rolb
pop
cld
xchg
shr
jmp
xor
test
test
cmc
cli
adc
xor
inc
inc
add
insl
pop
or
ja
sbb
xchg
data16
and
imulb
es
xor
divl
cmc
push
jge
je
loope
mov
xchg
lcall
ljmp
mov
adc
dec
pop
adc
lahf
ss
pop
push
mov
pushf
insl
add
adc
aas
out
fwait
outsb
mov
cmpsl
lcall
xchg
out
andl
mov
cmp
mov
mov
mov
and
sbb
jle
mov
cmp
test
in
inc
gs
cld
mov
icebp
addr16
adc
stos
fldcw
ficoms
jecxz
mov
xchg
aam
xchg
vmwrite
inc
mov
pushw
mov
popl
pop
mov
inc
or
outsb
rcrl
pop
test
packuswb
adc
repnz
sbb
adc
loope
shll
fsubrs
cmpb
adc
mov
mov
lods
pop
pop
pop
inc
dec
sub
into
dec
mov
fwait
push
or
out
push
fwait
sub
lods
xor
hlt
aam
mov
fimuls
fidivrs
loope
imul
mov
sahf
into
rcl
mov
cmp
das
popa
shrl
int3
cmp
cwtl
data16
loopne
fdivr
lods
outsl
jo
cmp
icebp
pushl
xchg
in
xchg
out
mov
out
mov
mov
mov
imul
pop
mov
sar
insl
cli
push
mov
ss
iret
outsb
lock
sbb
push
int3
les
push
cltd
fnstcw
imul
mov
xchg
jo
pop
iret
in
sbb
clc
lahf
fwait
ret
les
fmul
imul
lea
push
xchg
out
outsb
or
cwtl
cmc
scas
pop
mov
sub
pop
lret
jecxz
mov
loope
je
xchg
add
xchg
outsb
stos
pop
leave
xchg
mov
pop
adc
xchg
mov
sbbb
ror
inc
mov
push
mov
adc
xor
push
xchg
jp
or
add
push
loop
add
negl
mov
adc
cmp
mov
pop
pusha
hlt
shl
es
and
loop
aam
lods
repnz
xchg
inc
mov
outsb
xchg
mov
rcrl
dec
push
mov
not
dec
int
loope
popa
stos
std
stos
adc
ds
mov
dec
pop
or
adc
gs
out
enter
movd
mov
aam
enter
jbe
mov
cmc
lcall
jle
mov
insl
mov
pusha
mov
add
jmp
mov
jp
xchg
repnz
mov
jb
inc
pop
xchg
inc
xor
sub
sti
cmp
lret
inc
xchg
mov
mov
xchg
enter
jle
adc
cmp
shrl
inc
mov
sbb
pop
ss
or
lret
or
inc
inc
shl
fists
adc
add
addr16
pushf
mov
add
xchg
pop
bound
aam
lcall
mov
xchg
aad
push
cli
add
mov
pop
or
fs
and
shll
outsb
jns
mov
mov
or
xchg
ficomps
lea
lret
xchg
cmpb
pusha
jmp
cmpsb
adc
fldenv
in
inc
call
pop
das
push
ficoms
daa
inc
lds
inc
loop
out
fwait
bound
jns
xor
dec
repnz
fs
incl
arpl
rcr
movsl
dec
xor
inc
fcom
push
xchg
mov
and
fdivl
inc
push
lea
or
inc
pop
scas
ret
jg
repz
add
xlat
sahf
pusha
stc
int3
sbb
pop
cs
sahf
cmp
sbb
jno
mov
frstor
cmp
mov
add
std
pop
push
ret
scas
xchg
movsl
dec
adc
push
xchg
mov
push
das
mov
cmp
pop
push
test
dec
aas
adc
inc
push
mov
gs
loop
cli
cmp
pop
es
stos
mov
jno
and
clc
icebp
pop
pop
out
adc
aas
pop
sbb
test
dec
and
repz
jl
outsb
cli
outsb
pusha
xlat
repz
mov
adc
mov
pop
aam
lea
pop
push
cmp
inc
in
mov
push
insl
in
fdiv
adc
adc
xchg
mov
popa
sbb
adc
jb
xchg
dec
dec
or
cmc
mov
out
lock
mov
stos
rcrb
pop
inc
push
iret
add
gs
gs
stos
jns
cmp
push
jnp
addr16
clc
cmpsl
jmp
aam
in
sub
test
dec
jne
dec
xchg
test
push
jno
jno
idivl
aaa
and
add
out
and
jl
shrb
pusha
lahf
dec
cmp
push
push
adc
cmp
cmp
inc
sbb
push
push
jne
rorl
iret
shll
cld
stc
das
mov
or
lea
adc
jae
xchg
aam
pop
fsubr
call
and
and
push
stos
int3
scas
leave
cmpsb
inc
lods
pop
outsl
jo
adc
adc
sbb
dec
jp
jo
push
jge
iret
jge
lock
dec
mov
lahf
inc
dec
stos
popf
mov
movsl
dec
aaa
cmp
mov
mov
mov
dec
loop
fwait
iret
out
ljmp
pop
dec
pop
adc
loope
pop
aaa
mov
xor
insb
test
stos
mov
popf
movsl
arpl
cmpsb
fs
mov
or
mov
inc
pop
and
repz
push
inc
pop
jb
test
scas
xor
pop
cmp
xchg
das
mov
test
dec
mov
sbb
add
pop
mov
gs
lock
inc
cmp
fcoml
mov
pushf
mov
xchg
cmpsb
mov
xchg
sub
pop
xchg
ficoml
and
popf
or
sbb
cwtl
add
mov
and
mov
jle
dec
iret
addr16
jle
dec
bound
insw
sbb
test
dec
stos
ja
insl
out
sub
test
and
in
gs
jmp
ja
jnp
sub
dec
push
or
dec
int
add
in
mov
mov
flds
inc
jmp
dec
fildll
cltd
xchg
es
pop
pushl
pop
xlat
fcmovne
fs
mov
dec
adc
dec
mov
repnz
shll
push
jp
mov
call
pushf
xchg
and
xor
cwtl
push
sbb
xor
je
xchg
jns
std
cmp
jecxz
add
xor
xchg
mov
loopne
pop
stos
jp
sub
sbb
hlt
xor
add
repnz
test
pop
mov
sbb
dec
and
pop
lcall
pop
push
scas
fcmove
stos
aaa
push
outsl
pop
dec
dec
or
cmc
xchg
sahf
ljmp
cmp
dec
push
cwtl
sub
mov
push
inc
adc
cmp
mov
sub
lcall
fwait
xor
stc
mov
pushf
aam
xor
movsb
mov
add
loope
lret
xchg
jge
repnz
sar
mov
fsub
ret
xchg
sub
push
clc
push
push
inc
jmp
sub
jp
push
inc
xchg
movsb
mov
mov
repnz
mov
push
mov
jb
sbb
jp
adcb
in
popf
out
lahf
xchg
push
mov
cmpsb
mov
in
stos
pop
push
mov
dec
mov
orl
fisttpl
push
inc
fwait
jbe
push
sbb
incb
movsb
jne
fcoml
mov
movsb
sti
mov
dec
sub
push
jb
imul
ret
dec
jbe
push
cmc
fnstenv
movsl
cld
call
mov
xchg
push
pop
call
sub
ss
push
fisubrl
push
inc
cmp
or
scas
nop
movsb
loope
les
inc
cwtl
mov
loope
sub
xor
mov
or
sbb
idivb
adc
pop
mov
imul
mov
adc
call
in
or
mov
jae
stos
pop
adc
adc
pop
xchg
js
loopne
push
cmp
cmp
out
out
dec
subb
cld
cmc
jo
popa
incb
repz
or
sbb
mov
dec
mov
push
movsb
cmpsl
xchg
xchg
adc
int
outsb
arpl
xchg
add
xchg
mov
popa
jp
out
arpl
or
inc
mov
sbb
call
jp
xorl
jge
popa
popa
pop
int3
push
popa
xor
jae
jg
mov
loope
dec
xor
sub
popa
aam
add
push
jp
adc
stos
wbinvd
mov
test
dec
bound
inc
mov
out
mov
or
push
inc
and
lods
fwait
inc
outsl
mov
jns
dec
mov
into
call
pop
es
aas
out
aam
sbb
test
push
and
pop
xchg
sub
lret
ds
add
sahf
cmpb
test
push
leave
rcll
mov
mov
mov
sub
sub
sub
test
or
pop
dec
fwait
nop
adc
jmp
into
test
clc
test
mov
and
or
mov
enter
sbb
mov
cld
jle
mov
xor
cmp
aad
jo
mov
adc
std
ljmp
sbb
sbb
and
dec
jbe
push
adc
sar
pop
inc
cmc
subl
nop
xorb
lods
js
fnstsw
pop
ret
rcrb
pop
or
js
lahf
lds
add
pop
orb
xchg
and
inc
adcl
push
jno
mov
xchg
mov
add
add
mov
push
stc
inc
jge
inc
scas
adc
pop
rdtsc
sub
in
jne
inc
add
ss
dec
sbb
cmpl
xchg
mov
xchg
fistpll
push
mov
loopne
xor
pop
ss
lods
mov
dec
push
add
aam
mov
mov
jp
jl
cmp
cmpsl
lcall
xchg
cmp
filds
jo
cmp
or
jl
lahf
push
js
push
and
pop
inc
hlt
out
pop
adc
cld
movsl
cmp
loopne
push
mov
sbb
xchg
aaa
push
cmc
jno
idivl
dec
dec
into
js
inc
mov
push
xchg
ljmp
or
mov
es
in
sbb
mov
or
sarb
fwait
aas
push
pop
pop
aad
fbld
fmull
sti
mov
ror
fcompl
cmpsl
repnz
and
mov
and
fdivp
cs
and
lahf
psadbw
mov
lds
insw
mov
lcall
jmp
adc
and
popf
push
clc
fsubp
cli
push
mov
movsb
lock
pusha
jge
pusha
popa
fistpll
adc
arpl
loop
les
andl
icebp
mov
mov
shrd
enter
scas
popa
add
add
add
repz
cmp
sbb
push
dec
lock
push
push
mov
push
mov
push
ficomps
push
test
in
cmp
mov
push
cmpsl
fcmove
outsl
movsl
mov
mov
sahf
inc
add
insb
je
js
shr
in
hlt
jnp
inc
es
sti
int3
mov
sbb
mov
sbb
les
aas
pusha
inc
jmp
shlb
sub
add
push
mov
pop
xor
imul
ljmp
sahf
cmpsb
arpl
mov
jns
aam
add
add
push
adc
pop
ljmp
aad
std
push
mov
pop
bound
out
std
out
ret
in
or
adc
js
jmp
mov
repz
cmp
psadbw
jbe
pop
ret
lods
inc
pop
pushf
aam
fmul
mov
pop
xchg
popa
dec
repz
and
enter
jle
ss
jno
sub
jnp
or
mov
mov
stc
adc
cmpl
or
arpl
cmp
jle
gs
xor
in
bound
sbb
shr
push
or
jne
adc
push
loop
push
mov
fldt
push
ds
ljmp
stc
xchg
pop
fldt
xor
sbb
rorb
xor
mov
jl
adc
cmpsl
mov
pop
adc
dec
pop
sub
jmp
in
cli
xchg
sub
leave
jle
bound
push
ja
push
xchg
mov
sarb
inc
fistps
add
push
xor
add
inc
test
jo
lcall
mov
fwait
add
pusha
jb
xor
jle
rclb
mov
jp
and
lret
dec
mov
stc
pop
or
sbb
xor
sahf
or
mov
jnp
xor
push
dec
aas
lods
inc
std
and
push
cmp
xchg
into
pop
das
fnstenv
jbe
adc
mov
lods
repz
out
pop
lcall
das
pop
jae
add
sub
mov
stc
push
lods
jnp
movl
xor
mov
cmc
fldenv
cltd
dec
or
shlb
cli
mov
mov
mov
mov
fdivrs
lods
lahf
jge
sbb
fdivrl
cmp
scas
jns
inc
sub
roll
out
adc
orb
xchg
loop
jo
lea
adc
int
pop
lods
in
insb
addr16
call
sahf
loopne
loopne
mov
aaa
rcll
icebp
jg
in
cmp
imul
mov
test
add
rcrl
out
inc
fsts
fwait
inc
push
clc
dec
pop
jg
cltd
pop
jle
sbb
in
scas
mov
ret
cmp
jne
xor
fiaddl
xchg
jne
inc
sbb
mov
das
or
ret
ret
and
lods
xchg
dec
dec
and
dec
test
cld
aaa
pop
mov
repz
cmc
mov
mov
xchg
ja
test
adc
cltd
cmp
xchg
xor
movsl
mov
sbb
movsb
jnp
loop
je
les
arpl
push
clc
jge
aad
push
jbe
jns
pop
daa
push
in
stos
imul
aas
mov
inc
xor
or
jecxz
lods
aad
sbb
and
add
pop
or
into
pusha
xchg
and
test
jg
test
clc
cmp
movsl
inc
cltd
in
pop
imul
ljmp
inc
fidivl
movsb
daa
loop
pop
cmc
xlat
imul
stc
and
jbe
add
sahf
lcall
xchg
and
pop
mov
scas
or
or
imul
lahf
xorps
sub
iret
loope
das
push
jbe
je
mov
int3
sub
pop
cmp
inc
cmp
add
xchg
out
fldt
mov
xchg
cmp
xchg
mov
jle
push
push
loopne
fimuls
nop
fdivrs
sub
gs
mov
popl
adc
data16
xlat
mov
div
mov
pop
jbe
or
xchg
test
scas
das
sub
mov
fistl
cld
ret
daa
adc
jge
dec
into
push
cmpsb
pushf
mov
test
rclb
add
gs
nop
je
push
or
xchg
nop
xchg
bound
sti
negl
mov
xor
xor
pop
xor
shlb
dec
sub
xor
lret
in
mov
push
xchg
je
inc
and
call
mov
cmp
stos
or
lret
lcall
movsl
sbb
sbb
mov
imul
shll
psadbw
push
sbb
xchg
or
pop
rcll
sub
dec
dec
xor
mov
js
mov
lock
hlt
mov
ret
adc
sub
mov
inc
mov
mov
loopne
or
xchg
outsl
cmp
xchg
pop
inc
add
sub
sbb
loope
test
cmc
or
push
out
rclb
inc
iret
loop
dec
dec
adc
cltd
rcrb
leave
fs
lcall
or
jnp
addl
adc
lahf
push
pop
lret
int3
scas
test
mov
push
pop
mov
cltd
push
shr
cmp
in
pop
leave
mov
jg
leave
imul
push
lods
scas
mov
cmpsl
addr16
aas
fiadds
gs
fwait
pop
cmp
lds
test
daa
or
mov
mov
pop
imul
loope
dec
mov
fldcw
sub
dec
jns
push
push
mov
mov
or
push
or
loop
mov
push
cwtl
xor
pop
xor
adc
jge
mov
movsl
sub
cmpsb
ret
sarb
fimull
fiaddl
pop
xchg
push
dec
aam
sbb
push
mov
dec
roll
inc
lret
dec
xor
cmp
ja
jle
push
fsubrl
out
subb
scas
stos
push
repz
push
push
and
push
cltd
pop
sub
xor
insl
call
sub
inc
shr
xchg
nop
dec
mov
add
cmpsl
ss
pusha
movl
insb
mov
xchg
insb
test
jnp
mov
mov
cli
inc
mov
pop
mov
int3
aam
and
sbb
inc
out
xor
push
addr16
mov
cmpsl
push
ret
stos
aaa
movsl
in
sub
lahf
test
dec
jbe
or
mov
out
xchg
sbb
sub
mov
sahf
out
mov
jo
repz
mov
mov
push
rcrl
inc
pop
or
mov
js
hlt
mov
shlb
jno
push
dec
lret
add
negl
xchg
cmp
nop
mov
shlb
mov
lahf
mov
dec
insb
add
sub
dec
push
jecxz
add
jbe
jo
fwait
mov
jecxz
or
mov
lock
stc
sbb
icebp
jnp
xchg
out
cld
xlat
jge
test
andl
sub
dec
lea
ljmp
movsb
cmp
jno
jge
fstps
or
lds
jge
sbb
xchg
shlb
mov
je
leave
lret
out
and
mov
outsb
mov
and
jne
inc
lock
incl
and
add
lock
pop
outsl
inc
jnp
divl
andb
das
or
jns
leave
xchg
push
pop
xor
ljmp
mov
sbb
loopne
jmp
pop
adcb
out
pop
pop
jae
arpl
push
mov
inc
popf
xlat
mov
ss
inc
jne
xor
xchg
out
lcall
push
pop
nop
aam
rcrb
xorl
int
out
and
pop
lret
imul
jne
cwtl
add
sar
dec
sub
aas
and
fcmove
decl
inc
mov
movsb
push
enter
in
in
ret
shl
leave
xchg
push
inc
jp
ss
dec
sbb
pop
leave
cli
lock
xor
xor
dec
repz
adc
mov
roll
mov
movsl
sbb
test
hlt
and
mov
mov
or
sbb
sub
bound
xor
lret
and
push
ficompl
xor
js
push
jb
xchg
in
and
stos
int3
dec
dec
xchg
inc
xchg
popf
cmpsb
xor
enter
ret
ret
xchg
lret
stos
push
sub
push
pop
mov
jg
xor
cmpsb
into
in
jno
loop
fcom
dec
in
mov
mov
xchg
outsb
xchg
add
xor
mulb
xor
test
mov
pusha
xchg
scas
push
insl
mov
ret
rcll
lcall
movsb
mov
lea
or
mov
daa
pushf
mov
mov
loop
cltd
sti
pop
cmpsb
setno
cmp
xor
out
sti
mov
jne
adc
jno
cmp
inc
sub
xor
cmp
seta
pop
clc
xlat
mov
repnz
mov
mov
loopne
adc
sub
stos
add
nop
dec
pusha
mov
and
aas
cltd
pop
fimull
jmp
or
sti
inc
jp
rcrl
cmpb
jp
ja
movsb
mov
movsb
cmp
out
push
jae
lcall
jae
cmp
arpl
aas
jg
dec
pop
sub
ret
xor
sbbl
mov
mov
adc
or
sub
xor
fistps
outsb
int3
icebp
frstor
pusha
in
out
push
cltd
in
cmp
call
push
xchg
dec
out
test
jg
pop
dec
mov
or
push
ja
pop
xor
inc
or
rorb
inc
outsl
jae
xchg
dec
cmp
pusha
rorb
rol
sub
cmp
cmp
in
in
fs
jg
adc
pop
movsb
rcrb
pop
pop
jne
xlat
jle
and
adc
sarb
xchg
jle
addr16
jns
and
in
xor
or
loopne
xchg
aad
jae
and
jne
mov
sahf
xor
mov
bound
dec
xchg
aas
pop
stos
cs
scas
mov
adc
pushw
sbb
stc
ss
out
js
imulb
jne
or
or
in
imul
mov
push
pop
sar
hlt
lahf
inc
jb
lock
stos
sub
fwait
scas
fcomi
popl
ret
jecxz
rorl
or
stc
sbb
imul
enter
aaa
roll
jle
and
fs
pop
mov
fnsave
repz
ret
test
lahf
pop
push
mov
lcall
jle
mov
mov
inc
mov
mov
push
xorb
pop
dec
scas
nop
lea
adcb
aad
daa
mov
sar
jmp
fsubr
jmp
popf
adc
xchg
icebp
pop
xor
fwait
data16
push
icebp
add
or
lret
xchg
loope
jns
xchg
stos
out
add
jp
mov
cmp
and
add
fcoml
or
rorl
mov
add
xor
sahf
push
movsl
out
loop
sbb
pop
pop
loopne
mov
out
or
lahf
mov
out
cmp
ja
and
fistps
push
sub
out
jne
mov
lahf
sub
lcall
ror
out
shl
mov
arpl
cmp
mov
mov
int3
clc
hlt
popa
push
ds
push
cmc
data16
shrb
inc
aas
inc
repz
adc
loop
push
mov
leave
icebp
lods
and
adc
inc
inc
in
lea
hlt
push
mov
mov
mov
add
fmull
negl
dec
mov
les
std
aam
inc
sbb
leave
dec
dec
cmp
call
call
pop
push
stc
mov
or
jnp
movsb
inc
add
jnp
push
xor
data16
xchg
movl
jg
add
test
int
push
jbe
repz
out
add
div
xchg
and
pop
xchg
inc
fstps
mov
stos
clc
mov
mov
jle
iret
outsb
lock
inc
movsb
leave
add
call
scas
aas
lahf
lods
data16
lods
jmp
mov
jae
inc
ja
push
xorb
int3
je
jp
inc
push
jb
and
mov
mov
xor
xor
ret
inc
test
mov
mov
xchg
in
mov
in
loope
or
cmp
in
or
sbbb
nop
adc
mov
daa
fadds
dec
enter
bound
jae
add
icebp
outsb
andb
add
sbb
orb
dec
dec
add
sbb
inc
sub
mov
mov
ljmp
dec
sbb
ret
inc
cmp
jns
mov
movsb
inc
mov
inc
xor
fcomps
jbe
pop
sub
and
sbbl
and
jns
pop
jns
jo
fistps
popf
jl
outsb
xchg
outsl
aad
push
mov
lods
adc
les
fwait
xor
mov
mov
mov
js
and
adc
pop
or
lret
xchg
inc
dec
adc
loope
pushf
inc
addl
ds
scas
pop
sub
cmpb
subl
dec
sbb
call
or
call
mov
or
mov
mov
mov
pop
mov
jge
in
mov
jae
jne
es
and
ljmp
mov
or
add
icebp
cmp
je
in
jne
das
cmc
repz
arpl
dec
pop
stos
push
scas
jmp
stc
scas
gs
xlat
push
cli
push
push
adcb
fdivl
fcoml
mov
or
gs
sbb
jecxz
ret
adc
jo
sbb
repnz
push
aad
push
leave
daa
jnp
xchg
dec
shrl
daa
xchg
gs
jmp
in
cwtl
pop
rcrb
mov
fcomip
jo
adc
pusha
loop
xchg
aam
pop
dec
lods
push
rclb
xchg
inc
cmpsb
inc
cmp
inc
xchg
call
fimuls
inc
ret
movsb
cltd
pushf
mov
cld
or
mov
rclb
std
lret
mov
lds
lea
adc
fstpt
adc
and
sbb
push
mov
inc
out
and
sarb
call
imull
out
push
pop
jg
stos
xchg
stos
adc
xor
cmp
sbb
out
jp
cmp
stc
out
xchg
or
clc
sbb
lret
inc
add
ljmp
inc
add
out
add
scas
add
test
outsb
test
movsl
jbe
dec
adc
shrb
call
imul
cmpsb
cmp
mov
mov
inc
bound
sbb
cmp
jbe
bound
pop
push
sub
mov
sub
mov
fmuls
nop
cmpsl
ret
rolb
xor
sub
sub
xchg
inc
int
pop
jmp
hlt
into
in
gs
out
and
jl
fucom
js
push
insl
fcoml
stos
cld
add
mov
rcr
jno
xchg
add
notb
adc
push
ret
arpl
or
sub
mov
jno
cvtpi2ps
aad
sbb
pop
or
pop
int
xchg
shlb
fs
xor
std
adc
loop
incl
pushf
xlat
dec
add
insl
lea
jge
mov
mov
pusha
mov
mov
jg
orl
leave
cmpl
xor
add
pop
push
es
cmpsl
xlat
rcl
movsl
bound
lds
fwait
xor
pop
mov
cwtl
xor
das
imul
loop
das
adc
sti
in
jae,pn
nop
inc
pop
cli
inc
push
stc
stc
dec
jmp
sti
pop
push
cld
mov
movsb
push
xor
add
mov
xchg
sbb
push
mov
adc
imul
pusha
fisubrs
int3
dec
push
cs
jg
je
adc
lods
repz
testl
mov
add
mov
cld
icebp
ret
jns
test
aas
and
pop
cmpsb
push
out
pop
inc
ljmp
pop
ja
loope
cmpsb
jecxz
mov
mov
dec
gs
add
mov
xor
in
mov
and
test
dec
push
xlat
aaa
jmp
lds
or
cmp
dec
and
imul
mov
lea
dec
pop
push
inc
sbb
lods
rol
cmp
into
jne
mov
and
dec
push
inc
cmp
in
sbb
dec
das
sub
hlt
push
mov
sbb
pop
scas
and
or
jb
es
mov
mov
jns
jp
fwait
mov
mov
mov
dec
mov
icebp
and
or
int
sub
jp
inc
ss
out
dec
out
xorl
xor
inc
inc
stos
fs
or
es
or
into
movsl
sub
xchg
jns
aam
push
mov
mov
cltd
ficomps
xchg
arpl
lret
in
sbb
sahf
xchg
sbb
xchg
lahf
cmp
frstor
xorl
stos
sbb
xchg
bnd
xor
aam
pushf
dec
test
les
sahf
pop
nop
mov
cli
or
clc
mov
sbb
cld
jo
mov
inc
jb
xchg
sbb
out
movsl
xchg
subb
add
dec
adc
cmp
inc
mov
int
flds
mov
repz
push
xor
pusha
pop
loope
push
mov
nop
movsb
mov
pop
std
dec
cmc
rclb
loop
repnz
movsl
inc
mov
out
ss
scas
cmovnp
fcmovne
cmpsb
push
fstpl
imull
iret
pop
xchg
mov
or
loopne
dec
dec
cmp
xchg
jo
mov
adc
or
ss
jl
adc
dec
adc
push
mov
clc
outsb
jecxz
pop
je
mov
adc
lret
mov
pop
sub
fsts
inc
iret
rcl
mov
inc
rorb
xor
xor
push
push
or
push
fxch
lea
push
cmp
stc
test
aas
sbb
dec
mov
and
pop
and
lcall
fisubrl
xchg
and
nop
stos
mov
mov
lock
dec
xchg
scas
clc
inc
sbb
add
stos
mov
add
cmc
pop
addl
cmc
jmp
std
push
xor
lcall
rolb
lods
adc
hlt
mov
fisttps
mov
xchg
cld
fsubrl
dec
mov
out
adc
mov
inc
iret
add
shr
xchg
imul
repnz
or
scas
pop
inc
cs
stos
inc
shrb
test
push
cwtl
pop
jecxz
mov
mov
xchg
xchg
push
pop
mov
push
cmp
aad
dec
mov
or
jg
loope
and
pop
mov
pushf
push
insl
mov
ja
add
cmp
fsubrs
sbb
fnstcw
in
xor
and
icebp
mov
nop
loopne
add
sub
insb
pop
add
sti
xchg
mov
decl
sub
dec
push
divb
insl
daa
cs
sti
incb
mov
cmp
sub
jecxz
mov
jecxz
sub
mov
push
call
push
xchg
xchg
or
lar
outsl
xchg
lock
shlb
popa
xchg
adc
int3
lock
xor
sub
out
push
mov
movsb
inc
test
or
insb
push
jp
dec
gs
and
sahf
sub
dec
adc
sub
lods
inc
inc
jl
adc
xchg
and
ljmp
fstpl
stos
jns
iret
clc
jmp
add
jmp
xor
movsb
ljmp
movsb
rcl
int
in
sahf
dec
push
mov
movsb
lahf
aas
popl
push
lds
je
cmp
or
cmpsb
xor
adc
cld
jb
mul
xchg
fimull
paddw
push
add
out
imul
fucomip
push
or
xor
mov
int3
imul
ljmp
add
push
int3
les
mov
insl
movsb
mov
cmpsl
jo
daa
repnz
push
sbb
pop
mov
iret
mov
xchg
icebp
aaa
mov
js
pop
inc
cwtl
sub
stos
out
dec
pop
outsb
or
popf
ret
push
lahf
ret
iret
ja
bound
cmpsb
sbb
leave
lods
ljmp
sbb
test
cmp
xor
cli
testb
loopne
fcmovnbe
mov
sub
lods
adc
daa
dec
addr16
cmp
sub
dec
or
or
pop
xor
scas
cmp
or
xchg
xor
cmc
cmpsb
jae
movsl
mov
xor
xchg
imul
pop
aad
rol
lahf
aad
popa
push
mov
test
pop
shll
or
dec
inc
mov
cli
in
cli
lcall
push
pop
mov
sub
bound
fwait
xchg
adc
xor
xor
out
jle
cli
mov
pop
inc
lret
repz
xchg
enter
arpl
or
fisubl
xchg
fmul
mov
iret
jo
ljmp
pop
repnz
stos
jg
add
ss
sbb
dec
ret
mov
dec
mov
add
popa
cmp
incb
adcb
dec
and
push
in
mull
mov
push
cmp
add
push
push
test
jnp
je
xchg
das
inc
testb
fcomip
in
scas
cmp
xchg
cmp
out
pop
ret
insb
inc
popf
popa
mov
push
dec
add
cmp
or
mov
jno
lcall
xchg
cli
mov
sub
iret
lods
push
and
in
xchg
stc
cmp
jbe
mov
fsts
adc
mov
in
sub
aas
lcall
inc
daa
dec
div
xor
inc
popa
pop
xchg
and
out
iret
lret
imul
test
mov
into
mov
jo
xor
popa
mov
outsb
cmpsl
test
jge
cltd
pop
push
testb
pop
arpl
jp
mov
jl
jecxz
mov
sub
sbb
push
and
mov
je
inc
ret
imul
cmpb
test
rcr
add
push
stc
push
clc
das
lcall
add
jg
mov
call
mov
and
jl
fisttps
xor
fsubs
flds
lahf
icebp
pushf
xlat
cs
jne
xchg
orl
cmc
mov
aad
jbe
cmpsl
lds
jno
clc
mov
lds
bound
out
or
mov
test
cmpsl
push
mov
icebp
outsl
fnstcw
dec
pusha
lods
in
inc
mov
push
lret
mov
lahf
inc
cmp
add
sbb
mov
cmp
sbb
mulb
adc
adc
imul
test
mov
inc
add
mov
pop
iret
cltd
out
add
loope
push
dec
and
fisubl
outsb
in
int
es
outsl
inc
fadds
xchg
cmp
enter
insl
xlat
ret
ret
ljmp
loopne
outsb
add
decl
fdivrs
inc
lret
jl
or
and
cmp
push
insl
out
ret
add
in
and
pop
test
in
sahf
adc
rcrb
imul
dec
outsl
mov
cmp
xor
xchg
mov
add
xchg
jae
loop
sub
jbe
roll
inc
and
add
lea
sub
adc
jb
mov
sub
std
ret
insl
push
pop
jbe
dec
fcoms
cmp
or
cmp
mov
shll
dec
lock
push
lea
cmpsb
cmp
or
jns
andl
mov
dec
xchg
mov
jp
sar
add
jmp
lods
shrb
cmp
jle,pn
roll
mov
jno
xlat
push
sbb
into
xor
push
stos
push
pop
stos
cmpl
nop
test
mov
mov
sbb
jle
jg
push
push
xchg
mov
mov
inc
into
in
mulb
mov
or
or
stos
pop
test
mov
jecxz
jnp
mov
ret
adc
push
out
pop
xor
sahf
leave
lcall
rcrb
leave
loopne
cmpl
rep
jg
xchg
fadds
cli
and
sbb
or
dec
icebp
mov
pop
repnz
sbb
dec
std
sbb
mov
imul
rclb
push
and
outsb
addl
sub
imul
adcb
jge
fwait
scas
frstor
imul
or
jmp
inc
push
jg
test
lcall
out
inc
sub
loop
pop
insl
pop
jle
aaa
cmp
lcall
cwtl
cmpsb
addr16
repnz
xchg
aaa
mov
jbe
jecxz
imul
jp
pop
pushf
jp
daa
mov
cmp
push
mov
mov
and
test
cvttps2pi
cmpsb
fdivp
xor
mov
fsubs
xchg
and
xchg
fistpll
push
clc
ds
xor
arpl
loope
pushw
or
cmp
int
inc
mov
gs
loop
mov
ljmp
jbe
dec
or
and
out
mov
ss
sub
mov
ret
fiadds
push
shrb
mov
cmc
xchg
mov
mov
mov
sub
push
xchg
shll
jnp
add
jecxz
pop
xchg
xor
and
cs
push
sub
or
xchg
fildl
lds
push
mov
test
popf
mov
cmp
xchg
dec
movsl
test
aas
mov
cltd
push
hlt
fisubl
int3
pop
ret
jo
in
insl
cmc
ljmp
push
rcrl
add
cmp
sub
cmp
push
pop
loopne
push
fimull
xor
jns
pop
pop
sahf
rolb
insl
xorl
jns
call
add
xchg
dec
cltd
xchg
aaa
and
cli
jmp
ret
mov
push
addb
and
xor
out
lret
mov
mov
xchg
mov
jmp
xor
sarb
pop
sbb
or
loopne
enter
mov
hlt
inc
pop
mov
pop
mov
push
mov
add
repnz
in
std
out
jnp
mov
dec
outsl
mov
negb
mov
cmp
jmp
test
xchg
push
mov
lds
sbb
sahf
scas
outsb
clc
xchg
inc
xor
sbb
push
and
push
jnp
mov
sub
pusha
push
fstl
dec
pop
int
ret
leave
add
mov
and
enter
call
in
xchg
shl
jne
xor
mov
jne
int
imul
movsl
mov
bound
lods
test
pop
lea
mov
lret
fldl
pusha
cmp
scas
fadds
dec
cmpsl
xor
bound
xchg
push
push
push
in
and
dec
lret
adc
loope
adc
ljmp
ret
mov
in
xchg
lods
mov
ja
push
push
xor
outsb
cmpsb
mov
jmp
xchg
sub
add
pop
dec
les
aam
add
cmp
loope
push
mov
insl
movsl
jp
pusha
add
adc
inc
sar
xchg
and
mov
cwtl
je
lea
faddp
cmp
mov
jb
popa
sbb
mov
loopne
jo
enter
xorl
jo
mov
int3
fiadds
xor
mov
int3
jp
ret
stc
in
mov
pop
sbb
inc
xor
call
out
mov
sbb
fstps
jbe
popl
lock
into
jb
sub
cli
lods
xchg
lahf
ret
jo,pt
out
cmp
ja
mov
xor
es
movsl
push
inc
sub
scas
push
adc
dec
test
jbe
subl
cmpb
dec
aas
pop
jno
dec
push
insl
push
clc
xor
mov
mov
shll
and
inc
push
adc
faddl
adc
push
push
mov
daa
or
cs
xlat
adc
icebp
int3
test
and
push
adc
jl
daa
jo
repz
cmpl
jns
push
stc
jo
je
into
pop
xchg
inc
ret
call
mov
lcall
adc
fnstsw
les
shr
adcl
inc
jmp
cmpsb
arpl
dec
jbe
sub
ja
jb
mov
mull
xchg
add
outsb
shl
push
sub
lret
iret
fwait
push
imul
push
mov
mov
jnp
cmp
repnz
pop
dec
scas
cmp
sub
test
pop
repnz
mov
jnp
push
mov
add
sar
ret
aam
cmp
mov
add
out
adc
jp
cmc
pop
mov
icebp
jge
xchg
pushf
inc
movsl
pushf
xor
mov
jno
mov
mov
imul
into
push
aad
push
in
sub
into
into
mov
mov
shlb
mov
push
ficoml
jp
jnp
mov
negl
fistl
sub
xor
cltd
xchg
ret
sub
lea
test
sbb
pop
mov
ud1
pop
les
inc
and
test
sub
fmull
xor
mov
mov
icebp
fsts
add
pop
xchg
fs
xor
add
out
mov
inc
sub
add
bound
fdivrl
xchg
idiv
jbe
lret
call
mov
sub
das
mov
mov
xor
mov
cmc
dec
movsb
xor
push
pop
add
nop
push
in
icebp
xchg
test
sbb
das
clc
pusha
insb
mov
inc
mov
pop
lods
jbe
pop
stos
outsl
outsb
and
inc
push
add
mov
fldt
pop
and
loop
pop
lods
cmp
leave
out
push
icebp
fsubs
xor
ljmp
rolb
and
sti
popf
out
or
and
cmp
subl
aam
movsl
test
and
pop
inc
mov
jecxz
cmpsb
mov
stc
inc
jo
scas
pop
sahf
out
mov
xchg
rcll
ljmp
lock
cmp
negb
jbe
or
adc
sbbb
add
mov
mov
xchg
inc
clc
in
or
inc
rcr
pop
out
inc
scas
push
jl
filds
push
shlb
mov
xchg
push
nop
ljmp
push
lods
stc
xor
decb
das
cmpsb
mov
cmp
scas
and
daa
adc
and
mov
jo
pop
insb
data16
xchg
xor
fucomip
pop
sbb
xor
mov
dec
xchg
xlat
sub
jg
xor
aas
push
pop
push
pop
outsl
int3
loop
movsl
xchg
dec
push
pop
and
scas
mov
lret
mull
je
sub
jl
adc
int3
or
mov
add
lods
cmp
jne
mov
push
cwtl
or
ljmp
sub
scas
jge
mov
lahf
add
stc
ret
daa
dec
lods
sbb
data16
xchg
mov
cmp
out
ljmp
xor
lcall
add
push
ror
shlb
mov
and
mov
outsb
jl
jb
sbb
shll
ss
xchg
push
loope
aas
jge
mov
and
mov
push
dec
aaa
xor
rcll
and
das
xchg
jmp
popa
ret
addr16
fs
xchg
sub
xor
aad
mov
cwtl
js
lcall
cs
adc
into
sbb
into
inc
pop
test
or
shlb
sbbl
push
or
in
inc
push
push
jg
test
rcrb
push
sub
in
or
or
inc
and
mov
inc
add
cwtl
push
pop
adc
adc
shrb
test
push
mov
xor
out
aad
mov
mov
lcall
sub
and
xor
std
jecxz
pop
inc
aad
imul
and
add
shrl
stc
adcb
push
bound
xchg
ret
aad
movsb
pop
push
sub
std
push
sub
enter
sbb
cmp
xor
xchg
inc
pushf
xchg
mov
push
sti
roll
jnp
mov
add
inc
cwtl
dec
inc
add
mov
inc
rcr
push
leave
xor
mov
dec
pusha
jg
cld
aaa
mov
xchg
inc
inc
cmp
mov
mov
loopne
mov
mov
cs
xor
sub
jne
inc
pop
sbb
xchg
mov
out
xchg
imul
les
call
xchg
inc
sahf
call
or
lahf
lds
mov
data16
loopne
mov
aad
test
sbb
mov
js
cmp
or
jecxz
icebp
inc
mov
fwait
inc
mov
push
fadds
test
cmp
pop
push
shlb
fldcw
mov
bound
or
xchg
mov
loopne
adc
jnp
mov
ds
mov
mov
mov
push
fsts
and
adc
cmp
ds
fdivl
jmp
outsb
mov
pop
cmp
ret
inc
dec
dec
xlat
mov
add
jge
mov
jecxz
inc
ud1
insb
roll
fs
cltd
xor
fdivrs
bound
movsl
arpl
sbb
push
jmp
lcall
xlat
xor
xchg
jle
or
cs
subb
jecxz
mov
aaa
sub
mov
outsl
mov
xor
in
adc
xor
inc
and
mov
iret
pop
fsub
cmpsl
mov
cmp
lahf
aad
jo
inc
bound
sub
cmp
or
xor
add
repnz
inc
mov
mov
cmp
mov
mov
adc
cmc
mov
push
aas
push
or
lods
xchg
jle
mov
adc
movsl
mov
insb
jecxz
mov
icebp
add
rorl
pop
jne
cwtl
pop
imul
lcall
and
pop
mov
or
scas
lock
xor
mov
jl
fisubs
xchg
leave
sbb
sub
or
pop
inc
push
mov
cmp
jns
jo
ja
stos
out
sbb
aas
jg
sbb
sub
clc
and
ljmp
xor
mov
testb
add
imul
jns
mov
shrb
es
pushl
ds
in
xorl
lds
mov
ja
idiv
repz
sbb
fnsave
jno
out
pop
push
test
add
inc
test
pop
das
pop
lods
xor
xchg
inc
stos
and
out
sbb
jmp
popf
dec
mov
jle
mov
mov
add
mov
cmp
and
shr
sub
mov
mov
inc
lcall
dec
push
xchg
dec
pop
sub
mov
stos
ja
iret
aam
fnstsw
cwtl
and
test
roll
test
or
in
mov
sbb
or
pop
orl
mov
lock
xchg
fwait
sub
aad
jbe
or
aam
adc
out
sbb
aas
out
lock
enter
fistps
shl
repz
mov
aad
inc
and
rcl
out
movsb
jo
fnstcw
push
jmp
enter
aam
sbb
or
jle
push
or
and
mov
fisttps
bound
ret
fwait
push
mov
imul
mov
sbb
add
pop
push
pop
mov
xchg
inc
insb
jecxz
ret
insb
int
jno
andl
ljmp
dec
adc
mov
add
cmp
sbb
mov
or
lret
ret
cltd
and
push
add
push
nop
adc
sub
dec
jp
or
dec
cmp
xchg
cs
jge
xchg
push
das
xchg
mov
inc
sahf
push
push
lds
jp
mulb
push
in
jg
movsl
pop
imul
lcall
push
imul
es
call
leave
aaa
mov
inc
testb
nop
aam
popa
xchg
jmp
and
movb
popf
adc
jg
cld
sbb
xor
aas
stc
popa
cmpsl
xchg
rcll
imulb
adc
pop
cmp
pop
data16
nop
sub
data16
outsl
loopne
add
das
ss
and
adc
pop
gs
adc
sbbb
xlat
push
adcl
ret
inc
mov
jb
icebp
xchg
orb
mov
in
sbb
leave
lahf
xchg
xorb
mov
pop
mov
or
inc
not
cmp
jne
test
insl
shlb
cld
js
nop
xchg
sbb
scas
arpl
jnp
pop
in
stos
or
push
popa
xchg
pop
xor
stc
outsl
mov
xchg
fisubs
pop
lcall
lahf
test
outsl
push
dec
xor
mov
int3
adc
jno
sub
sbb
inc
add
sub
push
add
xchg
or
imul
jno
sub
lock
out
jmp
push
roll
sbb
movsb
xorb
aad
repz
or
dec
cmp
mov
jecxz
mov
mov
ret
repz
hlt
in
jne
inc
aas
ret
ja
into
pop
sbb
sub
pusha
outsl
fsubr
leave
dec
and
sti
sbb
sbb
scas
jl
dec
mov
pop
xor
ds
mov
jmp
insb
sti
dec
mov
out
cmp
sbb
into
cmp
push
stc
fmuls
pop
mov
lret
outsl
mov
cli
xor
ret
inc
movsb
mov
jle
cmp
inc
dec
les
xchg
test
shlb
mov
int
cmp
and
inc
adc
dec
pop
push
mov
push
fidivs
nop
mov
push
pop
sarb
jmp
cmp
push
ds
loope
or
cmp
xchg
mov
loopne
mov
push
inc
mov
xor
xchg
insl
inc
and
mov
mov
xchg
sti
mov
arpl
jmp
and
sbbb
and
adc
hlt
ja
inc
fs
imul
jns
adc
fisubs
dec
push
sbb
mov
jb
jne
ficomps
popf
sahf
xchg
mov
inc
jae
scas
cmp
lods
xchg
sbbb
inc
fwait
or
xor
adc
orl
mov
xchg
vpcmpgtb
add
orl
repnz
cwtl
incb
xchg
loope
and
lret
push
xchg
lds
fs
lods
pop
icebp
mov
mov
fisubs
mov
repz
cs
mov
push
mov
jg
xor
sbb
mov
mov
jle
mov
sarb
call
adc
mov
mov
mov
xchg
or
dec
shlb
fistps
pop
mov
adc
xchg
push
fwait
arpl
xchg
add
out
scas
sbb
shlb
or
or
movsl
xchg
pop
xchg
or
jo
adc
fwait
xchg
xchg
lcall
repz
sahf
sub
retw
mov
sbb
mov
and
fcoms
cmp
xchg
dec
ficoml
xor
and
js
lret
loop
mov
adcl
mov
movsb
jno
pop
mov
xchg
mov
xchg
loop
mov
xor
push
xchg
mov
mov
or
fimull
imul
cmc
cmpsl
mov
pop
call
movsl
mov
bound
pop
icebp
xor
das
cld
pushf
mov
in
mov
pop
mov
push
inc
mov
call
dec
aaa
sub
dec
hlt
sbb
jne
xchg
mov
cmpb
shll
movsl
pop
push
iret
pop
pop
push
adc
and
mov
adc
push
jg
jle
stos
iret
gs
clc
push
push
std
cmp
movsl
xorl
pushf
sbb
jo
std
scas
xor
pop
mov
test
test
dec
sarb
fld
insb
stc
int3
pusha
inc
mov
inc
insl
out
lods
inc
cltd
aam
and
fildl
jle
or
cwtl
push
mov
mov
jg
cld
push
push
cld
insl
xchg
xor
pop
adc
xchg
sti
xchg
jo
adc
loopne
push
and
dec
mov
scas
cmp
aad
xchg
cmpb
pusha
loop
out
pop
mov
mov
aas
push
pop
enter
pop
xchg
pop
or
xor
es
out
int3
pop
fs
mov
dec
imul
cmp
and
xchg
sub
es
cmp
lods
out
push
mov
xchg
inc
inc
mov
std
inc
jbe
xor
jns
pop
mov
adc
fimuls
aas
dec
xacquire
insb
sbb
mov
mov
pushf
cmp
mov
jecxz
out
add
clc
jmp
mov
ljmp
xchg
repz
out
cmp
lods
adc
add
or
xchg
ret
cmpsl
inc
cltd
xchg
test
movsb
jo
add
je
jl
pop
pushf
inc
cmp
pusha
mov
xchg
adc
mov
and
roll
popa
jmp
out
add
mov
ja
dec
push
inc
push
movsl
jmp
sahf
sub
xchg
add
insl
adc
sbb
popf
xor
std
pushf
cld
adc
cmp
add
shll
es
ja
or
pop
iret
xchg
sbb
mov
rolb
test
or
and
or
test
xchg
movsl
inc
addb
loop
cltd
add
ljmp
lods
jb
fistpll
mov
aam
nop
sbb
or
and
jb
in
sub
ja
sbb
enter
fadds
push
cmp
mov
sub
popa
xor
outsb
fsubl
inc
out
sub
mov
call
mov
in
lret
add
inc
push
in
fldt
jge
pop
or
popw
and
adc
inc
lret
jo
or
shl
arpl
arpl
dec
fs
sbb
lea
cmc
add
pop
fstl
push
lahf
mov
ss
inc
xchg
push
enter
mov
insb
gs
icebp
push
mov
mov
cltd
dec
xchg
lgs
in
sbb
mov
jo
ds
dec
jns
call
xor
andl
fwait
cmp
cmpsl
mov
and
test
add
add
sub
jle
sti
imul
add
repz
leave
mov
jo
inc
xchg
lret
sti
les
sbbl
movsb
sahf
push
fadd
sbb
out
rcll
mov
add
mov
popa
or
test
xor
jmp
xchg
jnp
push
cli
jle
mov
pop
stc
mov
cmpsl
mov
mov
movl
fmuls
xlat
jmp
push
dec
cmp
les
sub
fwait
mov
int3
push
dec
out
or
clc
push
test
fidivl
in
or
dec
loopne
lock
fidivl
frstor
les
dec
daa
in
scas
cmp
fdiv
push
movsl
sub
ds
cwtl
fdivrl
stc
cltd
pushf
push
aad
aad
xor
fisubrl
inc
cmp
sub
jno
rcrb
xchg
mov
jno
movsl
aam
jae
insl
add
movsb
test
sub
jl
add
lcall
dec
sarl
and
jl
mov
adc
ret
push
jg
pop
xchg
repnz
iret
jno
jbe
or
inc
test
ror
loopne
data16
lods
pop
push
mov
xor
in
sub
sbb
cld
lds
test
ss
push
sbb
insb
xchg
hlt
pop
xorb
jl
sub
mov
adc
es
ret
and
pushf
lds
mov
jnp
xchg
or
fildll
cmp
nop
sub
pop
pop
das
cmp
fwait
pop
xchg
push
icebp
out
out
mov
outsl
mov
cli
pop
rolb
pop
xor
dec
icebp
test
xor
sbb
adc
mov
cmp
push
xchg
cmp
cmp
scas
push
xchg
les
sbbl
popf
sub
fs
ja
mov
clc
and
cmpb
push
lods
dec
ds
mov
pop
cmp
cmp
sbb
aaa
pushl
aam
pop
lcall
in
into
pusha
sti
sahf
and
insb
out
xchg
inc
jle
fidivrl
lods
jae
pop
mov
rol
sti
xchg
lods
clc
cltd
call
test
ljmp
rcrl
ja
sarl
jo
sbb
cli
jb
jb
in
into
add
sub
lds
xchg
mov
pop
mov
mov
out
push
inc
bound
pusha
xorb
xchg
cmpb
or
and
sub
lea
jmp
lret
in
jecxz
loope
int
push
lock
push
imul
dec
popa
ret
mov
adc
out
test
es
ret
scas
xor
loopne
mov
push
mov
mov
adc
xor
xchg
ja
subb
mov
leave
insl
push
lahf
mov
mov
mov
xor
repz
or
pop
insl
out
loop
imul
cmp
and
xlat
jns
jmp
vmovaps
mov
loope
in
lcall
into
mov
gs
jle
add
int
lea
fs
out
mov
xchg
xchg
mov
dec
or
lcall
jns
mov
imul
inc
sbbb
ret
fdiv
push
push
enter
mov
int3
dec
xchg
cs
pop
mov
sbb
dec
push
jmp
push
or
push
or
xchg
xchg
cmp
or
xchg
frndint
fistl
jle
arpl
adc
testb
sbb
icebp
ljmp
icebp
pop
imul
adc
scas
lock
inc
pop
std
sub
cmp
push
outsb
lahf
bound
enter
dec
shlb
mov
ret
rorl
mov
aad
mov
cmp
decl
aas
mov
negl
sub
pop
js
inc
sahf
adc
push
xchg
les
dec
cs
aas
movsw
xchg
cwtl
bound
pop
mov
stos
lret
adc
fists
jp
add
mov
test
arpl
pop
fs
mov
jne
out
aaa
pop
jbe
push
jle
adc
mov
mov
addr16
adc
push
push
insb
mov
in
pop
adc
in
in
call
mov
cwtl
xor
subl
cwtl
mov
mov
sub
mov
jecxz
xchg
mov
sbb
dec
mov
cmp
imul
outsl
push
pop
dec
aas
sbb
mov
insl
adc
and
mulb
lods
or
xchg
push
mov
or
stc
mov
adc
jmp
dec
pop
dec
inc
push
das
mov
add
pop
xor
or
jmp
mov
dec
lods
or
int
insl
add
adc
or
pop
jb
mov
imul
jbe
jns
mov
fdivrl
add
out
mov
sub
inc
scas
inc
add
mov
mov
and
inc
popf
fwait
jl
xor
pop
push
icebp
sbb
push
xor
jb
pushf
dec
sub
mov
mov
fs
push
push
inc
ja
outsb
fs
ficomps
add
and
cmpsb
sarb
std
push
icebp
shll
inc
add
movsl
ret
sahf
jns
int
xlat
scas
dec
jns
inc
jle
xchg
sub
cmpsb
jo
xorb
adc
mov
mov
mov
aad
sahf
shlb
adc
sub
mov
aaa
push
xchg
hlt
mov
mov
scas
sahf
cltd
testl
xchg
out
stc
lcall
aas
mov
imul
negl
sbb
dec
loop
ret
adcl
clc
aas
test
fimull
inc
add
dec
cld
loop
movsl
cs
mov
cmc
inc
lret
sbb
push
test
ficomps
and
mov
push
insl
aad
daa
scas
insl
mov
inc
cmpsl
outsb
pop
xor
scas
xor
clts
and
xor
hlt
fwait
add
das
xchg
sub
arpl
and
sahf
dec
mov
mov
xchg
scas
xchg
jmp
jno
xchg
push
sub
mov
mov
inc
xchg
decl
ds
pop
rol
hlt
cmp
pop
push
jge
pushf
stos
cmp
jne
push
fs
ja
sub
in
outsl
inc
fsubr
adc
dec
add
out
shlb
mov
leave
mov
push
xchg
jnp
pop
sub
push
iret
add
push
notb
adc
popa
cmp
jne
adc
inc
dec
xchg
dec
stos
mov
arpl
push
int
movsb
out
sarl
jg
mov
push
pop
mov
xor
pop
les
jb
out
orb
ret
decl
sahf
fisubrs
ss
or
mov
sub
and
adc
out
adc
xchg
push
outsb
xor
in
out
sbb
daa
scas
push
cmpsb
pop
add
mov
xchg
std
lcall
sbbl
mov
in
xchg
in
inc
clc
mov
mov
icebp
push
mov
pop
mov
lods
xchg
in
mov
daa
mov
pop
imul
xchg
es
sbb
std
mov
icebp
jae
scas
out
es
push
cmp
cmp
jnp
or
sbb
mov
and
neg
mov
rcrb
mov
mov
idivl
or
inc
ret
jl
add
imul
mov
mov
jmp
xchg
cmp
sub
dec
cmp
adc
inc
mul
mov
push
jl
imul
fldt
push
push
cltd
sbb
lods
pop
jno
cwtl
push
jge
xchg
mov
mov
xor
xchg
pop
dec
add
dec
seta
pushf
es
mov
add
xor
aad
bound
dec
pop
xchg
sbb
xchg
ds
pop
les
xor
shll
lcall
jno
loopne
test
push
ss
lds
fstpt
xchg
sub
mov
xor
push
push
aas
mov
orl
and
mov
or
js
lcall
or
ret
xchg
sbb
push
gs
movsb
jb
pop
xchg
mov
and
pop
add
dec
xor
lea
pop
cmp
test
pop
dec
inc
imul
cmp
xor
int3
adc
dec
push
jns
roll
lret
mov
sahf
loopne
or
gs
icebp
mov
imul
jecxz
out
or
cmp
or
outsb
mov
xchg
sti
cwtl
and
mov
and
dec
adc
cmpsl
es
mov
mov
negb
aad
std
sub
repz
pop
add
mov
cmp
cld
inc
addl
sub
sti
in
bound
addb
xchg
or
mov
sub
dec
pushf
mov
shl
jne
fs
sbb
pop
ret
pushf
bound
in
ljmp
stc
rcr
negl
jbe
add
lahf
out
imul
pop
mov
push
dec
lods
aad
and
pop
pop
bound
insl
and
mov
bound
cwtl
jecxz
sarb
pop
test
xlat
imul
pop
add
and
outsb
std
fidivs
xor
mov
aam
sub
jns
cltd
pop
int
xor
cmp
pop
int
mov
std
mov
xchg
mov
scas
cs
inc
push
jge
frstor
xchg
lock
fwait
int
mov
jbe
in
push
ret
popf
in
mov
mov
xchg
jbe
cmpsl
pop
xor
mov
adc
xchg
in
or
les
test
test
inc
push
push
ret
stc
push
sti
cmp
out
lock
idivl
js
out
pop
pop
push
lock
insl
jnp
mov
das
sbb
mov
sub
mov
pushf
aas
jne
mov
lahf
xchg
push
loop
mov
imul
xchg
and
and
imul
imul
dec
mov
inc
scas
push
jp
pop
push
and
sbb
adc
pop
lret
adc
or
sti
cmp
sub
cld
sbb
lret
dec
or
test
push
push
sahf
aas
in
jp
frstor
sub
test
into
sti
adc
insl
jae
divb
inc
dec
fyl2x
mov
cmpsl
movsl
mov
leave
pop
mov
mov
addr16
or
jmp
cmp
out
movsl
adc
stos
ss
pop
sbb
int
and
das
mov
push
int3
jbe
daa
int
mov
cmp
ss
daa
mov
jmp
es
outsb
rolb
jne
outsb
out
stc
ret
int
leave
fidivl
mov
mov
pop
push
lahf
sbb
scas
or
or
jg
stos
loope
in
movl
int3
and
jl
mov
es
popa
hlt
push
pop
xor
push
addr16
mov
push
je
aas
rcrb
fwait
cmc
pop
es
rolb
pop
rorb
pop
outsb
pop
cmp
add
fbld
sbbb
decl
std
mov
rcrb
jg
fdivrs
pop
les
lahf
ret
sahf
dec
push
ret
in
stos
adc
dec
cmp
les
push
and
loop
xchg
inc
in
gs
mov
je
in
pop
fsubrp
or
negb
pop
inc
and
adc
incb
pop
sbb
fsubl
push
mov
andb
adc
inc
lock
fs
push
jo
mov
sbb
cwtl
sahf
lods
cmp
xor
orl
cld
addr16
cmp
imul
jno
mov
cmp
push
lds
lods
add
pushf
movsb
jmp
pop
cmp
sti
pop
cld
xor
or
shrb
iret
or
fidivs
cmp
movsl
jns
mov
stos
cmpsb
mov
bound
pop
adc
xor
pop
popa
dec
jne
jnp
dec
push
and
test
jo
sub
loopne
popf
sbb
xchg
jo
mov
js
js
dec
and
les
pop
lods
in
shrl
icebp
pop
pop
outsl
inc
dec
data16
or
jnp
cmc
int3
rcrl
rcrl
cld
mulb
ja
push
das
repnz
adc
loopne
cmp
jbe
jge
int
xchg
mov
cwtl
rol
jecxz
and
sub
adc
stos
cmc
adc
mov
push
cmp
es
push
xlat
repnz
jg
icebp
test
inc
call
xor
inc
jno
sbb
xchg
dec
add
mov
xchg
sbb
mov
mov
dec
dec
repnz
adc
ror
or
mov
cmp
jmp
xchg
jns
sub
mov
cmpsb
xor
data16
pusha
push
int
sub
mov
leave
addr16
and
rclb
icebp
sti
movsl
loope
adc
and
aas
pop
scas
lods
and
sub
xor
lret
and
arpl
shl
aas
and
insl
xchg
xchg
and
popf
cmc
ljmp
stos
inc
pop
outsb
fs
inc
ret
mov
jl
out
xor
ficoml
lds
mov
cmpsl
push
rep
ret
add
aad
add
pop
fwait
sbb
or
inc
shll
adc
addr16
mov
dec
pop
out
mov
ja
pop
inc
int
push
sub
inc
jg
or
cmp
inc
and
enter
sti
fstps
cltd
jb
push
push
mov
dec
mov
rcrl
movsl
cld
das
cmc
dec
cmp
mov
xchg
adc
cli
pop
jbe
int
lods
dec
in
or
xor
cmp
xor
or
dec
movsb
push
subl
add
out
mov
repz
mov
cltd
pop
scas
dec
je
repz
xchg
shr
and
pop
test
sbb
insb
fmulp
inc
insl
sub
xor
jbe
ds
std
push
je
mov
pop
lret
mov
sbb
out
es
scas
cmp
jg
outsb
roll
daa
ljmp
ljmp
or
ret
dec
sbb
aas
loope
mov
mov
movsb
and
dec
popaw
cld
jmp
lcall
sub
pop
sub
leave
es
xor
fidivrl
cmp
adcb
inc
cmp
outsb
bound
dec
pop
push
cmp
fdivrl
into
xor
pop
push
inc
push
and
in
fstps
mov
fwait
shll
jnp
cmp
cltd
jle
xchg
mov
pop
cmpb
jp
rolb
scas
sub
push
out
and
rolb
cmp
imul
pop
shl
jg
push
inc
mov
pushl
inc
aaa
xor
icebp
dec
mov
xor
imul
mov
push
and
lock
popl
gs
sti
pushf
test
fisubl
stos
sbb
or
fimull
jl
push
xlat
incl
fiadds
loopne
jae
lret
xchg
adc
push
mov
subb
imul
ja
fcmovbe
sub
daa
insl
mov
mov
add
mov
dec
or
jno
int
movsb
or
arpl
sbb
jnp
ljmp
add
mov
fstpl
sub
movsl
int
pop
movsl
out
cmpsb
pop
jno
or
jnp
mov
lret
imul
sub
std
cmp
shlb
jmp
std
popf
test
ret
add
cmp
add
xchg
ss
push
repz
pop
mov
les
dec
and
sbb
test
std
mov
sbb
mov
cltd
inc
fcmovnu
scas
xchg
pop
push
fstpl
clc
aad
sub
imul
ss
pop
push
or
cmp
push
sbbl
js
jno
adc
mov
into
and
pop
ficomps
out
push
das
mov
pop
push
cmpsb
repz
jp
popa
les
cmp
les
jg
pop
ljmp
icebp
xchg
jle
arpl
mov
mov
sbb
xchg
sbb
xor
test
xchg
adc
loopne
sbbb
mov
inc
addr16
data16
cwtl
adc
stc
xor
aad
mov
stc
inc
push
dec
sub
orb
dec
popf
mov
outsb
sti
repnz
iret
mov
push
mov
mov
pushf
scas
shr
fsub
mov
popa
adcb
and
std
add
pop
js
cmp
cmp
adc
mov
inc
lret
sti
pop
das
adc
cmp
xor
loope
or
icebp
cld
ret
int
test
and
jae
push
lods
ljmp
fmuls
in
jl
ror
into
mov
or
lret
ffree
scas
std
inc
cmpsb
movb
daa
test
not
xor
arpl
jo
xor
ds
movsb
jno
pop
cmp
or
mov
insb
sbb
or
cs
mov
cltd
test
inc
inc
cli
dec
in
lods
scas
movsb
mov
lret
lock
jp
cltd
test
sub
popf
xchg
es
mov
and
mov
mov
inc
sbbb
clc
lods
xchg
xchg
outsl
loope
and
jns
insl
mov
les
test
inc
in
mov
aam
sarb
mov
addr16
dec
sbb
inc
push
jne
mov
mov
xor
insl
adc
ret
or
jae
cmp
jb
xor
adc
mov
jne
pop
rolb
push
add
aad
dec
sbb
inc
mov
mov
jge
adc
inc
add
js
jmp
push
mov
sti
pop
outsl
ja
sbb
mov
lds
jmp
std
mov
fsts
xchg
push
lods
cmc
int3
and
fnstsw
fdiv
loopne
andb
inc
push
mov
mov
in
mov
dec
lds
mov
in
int3
inc
inc
shr
sbb
dec
xor
dec
loop
push
or
aaa
add
cltd
sti
repnz
cmpsl
and
fnstenvs
mov
ljmp
fistps
call
sbb
sbb
lret
sub
xlat
mov
or
push
mov
ljmp
dec
push
push
adc
dec
adc
add
stc
xor
mov
clc
push
jp
fldt
push
adc
mov
popa
stos
adc
in
mov
and
xchg
stos
daa
imul
filds
adc
insb
fnstsw
les
xlat
inc
pop
push
push
insb
push
repz
out
push
jnp
js
sub
dec
mov
add
sbb
test
mov
cs
pop
jns
cwtl
xor
lods
mov
inc
mov
stos
das
push
mov
sbbl
xchg
push
cld
int3
sar
and
inc
sbb
test
pushf
loope
dec
orb
inc
jle
cmp
cld
mov
out
and
call
shrb
out
xchg
rclb
mov
repz
popa
sub
sti
in
xor
mov
adc
fcmovnu
repnz
mov
sbb
sbb
lock
add
popf
insl
sub
cmc
mov
mov
lods
mov
loope
in
ds
jbe
inc
adc
leave
sbb
push
xchg
pop
xchg
rcrb
cltd
xor
decl
sbb
add
add
sub
xchg
jle
test
jne
icebp
dec
fwait
push
jo
sub
adc
mov
cmp
xor
adc
inc
adc
shll
xor
mov
shll
jno
repz
jl
sahf
aaa
lds
sbb
sub
xchg
shlb
fldt
repz
jl
loopne
fdivrp
jle
scas
jle
popa
inc
ljmp
or
in
std
sbb
mulb
mov
loop
xor
call
sub
or
faddl
push
mov
ljmp
incl
dec
pop
jnp
push
sub
loopne
or
movsl
fildl
call
adc
dec
mov
loop
ror
testb
pushf
imul
std
bound
mov
jmp
cmp
lods
lods
mov
sub
rcl
fcmovnbe
add
insb
sbb
xlat
loop
fdivrs
rcrb
cwtl
int
aas
sub
dec
inc
dec
and
scas
xor
test
cli
hlt
das
mov
lock
jae
repz
in
in
mov
loope
cmp
sbb
mov
cmp
sti
cltd
mov
ret
adc
xor
ja
inc
xlat
cld
jge
and
fidivrs
lods
arpl
cmp
or
push
pop
push
jecxz
ret
jo
cs
out
mov
addr16
xchg
testl
xchg
iret
and
addr16
jmp
std
mov
das
pop
loopne
jne
cwtl
shrb
in
pop
outsb
or
popf
movsb
insb
dec
adc
sbbb
mov
mov
ss
push
mov
lcall
pop
std
xor
push
movsb
pop
dec
lock
cmp
xchg
fcmove
cmp
dec
mov
adc
xor
dec
loope
ja
aad
call
dec
ror
cmp
cmp
mov
push
push
testb
or
jle
xchg
adc
test
sbb
cld
pop
inc
lret
out
lret
loopne
cmpsb
xchg
in
aam
xchg
cmp
sub
ljmp
pop
jns
add
sub
dec
xchg
popa
fisttpll
pop
cli
add
push
es
add
test
sbb
rcll
cld
and
repz
pushf
popf
jl
enter
push
xchg
xchg
lods
jge
jne
loopne
add
mov
jl
pop
lret
xchg
lcall
jl
jg
movsl
movsl
cmc
ljmp
test
imull
movsl
mov
mov
lea
cmp
add
fcmovnbe
sbb
mov
xchg
imul
jl
gs
inc
test
pop
mov
push
adc
loopne
out
xor
popa
aaa
xor
mov
jae
dec
enter
cmp
sbb
fs
push
std
jmp
and
and
pop
jg
sbb
fincstp
mov
jb
orl
xor
mov
sbb
sub
nop
inc
into
inc
arpl
into
sahf
repnz
pop
push
cwtl
rcrb
or
xor
ret
pop
xor
fistl
push
lock
add
jne
cld
mov
addr16
icebp
pop
add
xchg
mov
pop
neg
pop
loop
in
je
ss
aaa
and
ficompl
and
mov
push
xlat
inc
pop
scas
scas
cmp
xorb
sub
xchg
xchg
mov
test
subb
mov
push
cmp
push
and
loop
lock
loopne
fsts
mov
out
cmpsl
mov
aad
jno
iret
mov
sti
fcomip
mov
sbb
xor
ja
mov
fsubrl
mov
jle
fs
iret
aas
fwait
outsl
mov
into
xor
or
or
lock
cmp
lret
add
bound
xchg
or
movsl
xchg
sbb
fwait
xlat
adc
or
adc
cmpsl
cmp
in
inc
imul
xchg
inc
repnz
mov
sub
jmp
lock
lock
xor
adc
loope
cmc
pop
push
push
push
mov
adc
mov
sbb
cmc
sub
test
ss
sub
mov
xchg
notl
jo
fstpt
mov
ss
sbb
pop
mov
pop
scas
shrb
dec
sbb
ret
adc
ficoms
add
sbb
testb
mov
inc
shr
sub
sub
std
lods
sub
popa
cmc
mov
mov
imul
push
mov
imul
popa
mov
mov
mov
jbe
pop
push
push
mov
es
push
fistpll
lea
mov
xor
mov
cwtl
dec
jp
mov
mov
xchg
cmp
pop
adc
push
and
lds
cmp
jno
imul
iret
popa
bound
jbe
or
mov
fldl
xor
mov
inc
lds
xorb
jae
mov
jae
pop
cwtl
push
push
cmp
sbb
dec
mov
push
iret
dec
rorb
icebp
push
enter
stos
repz
pop
outsl
dec
pop
mov
mov
repz
fnstenv
nop
insl
data16
add
adc
imulb
aas
push
sti
sbbb
xor
dec
fs
rorb
cmp
mov
fistps
push
or
aad
mov
arpl
mov
xor
jl
mov
cmp
or
shlb
cmpsl
in
cmpsl
dec
loope
in
inc
lret
dec
sub
lret
clc
mov
in
jbe
orl
ret
stc
dec
xorb
dec
cmp
cwtl
or
inc
hlt
add
das
jg
loope
les
daa
jns
leave
ret
inc
pop
mov
test
mov
add
push
and
cmp
aam
fwait
push
add
or
js
imul
fcomi
jae
cmp
adc
data16
cmp
add
pop
adc
dec
je
cwtl
cmp
loope
scas
data16
mov
jmp
outsl
xor
mov
int
negb
les
andb
pop
add
xchg
sbb
test
jmp
movsl
sbb
sub
test
test
and
or
ret
int
add
fs
enter
mov
mov
pop
push
mov
ja
pushf
push
std
xchg
push
outsb
les
xlat
mov
loopne
sbb
test
push
jmp
jne
xor
out
lret
and
adc
push
adc
lret
lock
repnz
adc
sbb
test
mov
dec
mov
call
cld
arpl
push
mov
push
push
adc
fnstsw
mov
ret
sub
das
bound
movsl
sbb
dec
xchg
cltd
nop
pop
jno
rcr
shrb
sti
notb
mov
adc
push
inc
sbbl
cmp
jle
jnp
xor
mov
lcall
jne
lea
mov
fisttps
push
sbb
push
dec
push
jns
add
cli
es
ja
jo
mov
dec
mov
popf
mov
sub
mov
add
call
cs
stos
ja
gs
repz
adc
sub
mov
xchg
adcl
ss
dec
repz
xchg
cmp
dec
adc
push
gs
xor
inc
add
call
into
loopne
lahf
movsl
lahf
pop
xchg
mov
push
xlat
push
inc
outsb
inc
or
adcb
or
iret
sub
cmp
add
cmp
lods
jg
orl
adc
in
pop
cmp
push
push
ret
mov
mov
inc
xor
inc
sbb
jb
jae
and
enter
std
or
imul
cs
sub
fildll
sub
dec
mov
in
cld
xchg
and
xchg
ret
jb
js
daa
test
xchg
push
push
inc
xor
imul
scas
jmp
icebp
orb
lret
test
out
jns
jp
aam
shrl
fcomps
mov
hlt
js
push
push
dec
imul
and
ss
out
pusha
mov
movsb
push
int
or
and
fisubs
adcl
mov
rcrb
ljmp
adc
fcmovnu
icebp
jecxz
mov
pop
in
lea
ss
leave
pop
int
pop
sub
seta
loopne
mov
outsb
mov
loope
lea
jae
rcrl
mov
fwait
mov
std
push
cmp
jae
imul
rcrb
fwait
lods
lods
mov
mov
sbb
push
ja
xor
push
out
divl
insb
jb
pop
push
sub
mov
cmc
je
or
ds
in
faddl
mov
xchg
jecxz,pn
ret
cmpl
lcall
lds
rcrb
cmp
add
jno
pop
mov
add
testl
xor
cmc
mov
insb
insb
imul
mov
ss
mov
mov
jp
push
jo
fcmovne
mov
inc
pusha
aaa
mov
es
push
cmpb
or
cltd
or
mov
adcl
inc
adc
inc
xchg
cmpb
and
in
idivb
jae
rclb
cmpb
push
jg
imul
arpl
adc
out
inc
cs
jmp
cmpsb
cmpsb
sahf
cld
jns
aaa
mov
mov
mov
sub
adc
cwtl
add
cmpsb
push
movb
mov
loope
icebp
inc
sbb
daa
bound
mov
lods
and
addl
fiadds
scas
in
shld
stc
jecxz
or
in
cmp
xor
adc
jbe
scas
push
insl
jb
mov
mov
dec
cmpsb
in
mov
outsb
mov
push
jno
jns
cmp
out
dec
fistpll
int
cmp
bnd
dec
and
lds
xchg
outsb
push
push
cmp
mov
xchg
fnstsw
xchg
leave
jo
sar
aaa
std
jp
lds
lock
jns
leave
xor
jp
cld
xor
sbb
iret
mov
lods
xchg
movsb
negb
or
jp
mov
add
out
or
sub
int
fwait
push
cmpsb
jns
movsl
cli
jo
pop
outsl
sarl
aam
xchg
mov
icebp
or
or
fsub
mov
sar
mov
aaa
cmp
pop
in
jecxz
clc
adc
arpl
jno
cmpsl
and
cli
std
in
mov
lret
loop
xchg
lret
xchg
loope
push
repz
dec
rcll
push
cmp
jl
call
jno
xor
int
xor
inc
adc
call
lret
sbb
ja
xchg
in
mov
sbb
js
mov
enter
pop
leave
in
dec
mov
icebp
push
mov
flds
jne
stos
mov
mov
les
sar
cli
cwtl
cs
or
push
cmp
ret
js
jl
inc
sub
mov
pcmpeqw
dec
sbb
add
adc
dec
out
cmp
pusha
jmp
jge
jb
push
xor
enter
jg
gs
xor
xchg
cmp
movsb
test
dec
push
test
rorb
cmp
jne
andl
loop
mov
fnstenv
stos
mov
mov
lret
cmp
scas
add
inc
std
sub
rcrl
xlat
or
pop
loop
pop
pop
popa
outsl
mov
lds
sbb
mov
or
lret
lods
jg
lahf
lods
push
xorl
inc
sbb
dec
xchg
in
mov
sbb
ja
jb
les
imul
push
cmc
jae
dec
inc
mov
sbb
sbb
aam
aas
cmc
into
add
popa
sbb
test
ljmp
jae
dec
cmp
push
stc
imul
aaa
sub
xchg
test
adc
jmp
popf
xor
sub
sbb
jne
sub
push
cmp
xchg
divl
adc
xor
sbb
inc
and
stos
fildll
xor
imul
sbb
push
push
jl
repnz
mov
or
pop
cmp
and
pop
jecxz
rorb
cmc
pop
mov
sub
rclb
hlt
rclb
enter
jp
leave
mov
icebp
xchg
les
dec
out
add
shrl
mov
jnp
push
adc
pushl
out
mov
jmp
cmpsb
fdivl
xchg
and
lahf
dec
fisubl
bound
mov
dec
pop
test
lea
or
push
cwtl
mov
jae
sub
mov
push
jmp
mov
loop
pusha
jns
sub
pop
ss
xor
cltd
insb
call
outsb
mov
mov
xor
push
lock
jecxz
dec
push
lods
dec
dec
addr16
pop
bnd
xchg
pusha
rcr
addl
mov
mov
jge
jmp
add
fdivrs
insb
mov
add
pop
sahf
mov
data16
fsubs
xchg
fwait
std
mov
and
xchg
popa
inc
xchg
pusha
xor
in
lret
inc
cmpb
pop
adc
lods
scas
pop
push
movsl
out
adc
cmpb
fstps
and
cltd
shlb
cwtl
and
ret
dec
dec
inc
pop
push
shll
js
dec
sbb
xchg
adcl
lcall
lcall
les
js
mov
cmp
adc
stc
sbb
add
stc
in
jns
cmc
mov
push
int
pop
push
mov
jmp
push
nop
shlb
adc
xchg
stos
mov
xor
or
jno
vpmacsswd
imul
aaa
dec
inc
inc
and
push
out
das
mov
dec
leave
cli
outsl
push
mov
jne
mov
xor
subl
fisubrs
cmp
push
lods
lret
add
scas
lcall
pop
inc
loop
les
test
dec
dec
cs
dec
test
and
cmpl
enter
xchg
scas
lock
fisttpl
jp
push
flds
push
rcrb
jle
int3
lock
clc
cmc
push
inc
xchg
js
xor
loopne
movsl
mov
cmpsb
mov
xor
and
xor
fdiv
xchg
mov
xor
lret
push
js
mov
loopne
and
jg
sub
insl
nop
lea
push
dec
js
sbb
stos
sub
scas
or
sub
inc
pushw
sbb
inc
adc
outsb
push
daa
out
inc
leave
push
dec
xor
lds
adc
cmp
loopne
xor
js
xchg
add
andb
jne
mov
clc
aas
mov
jo
ja
adc
xchg
shrb
cmp
adc
dec
jl
arpl
movsl
repnz
sbb
jp
ja
popf
mov
or
xchg
bound
gs
mov
push
push
and
jb
lods
aad
xchg
jp
nop
inc
repz
fwait
mov
xchg
sub
popf
in
mov
jl
adc
xchg
sti
cmp
loopne
scas
xor
or
xor
call
int3
pusha
data16
pop
sahf
adc
xorl
mov
or
add
push
andl
dec
pop
adc
ds
std
push
insl
xor
pop
stc
push
addr16
ja
adcb
mov
cltd
ret
test
rcrl
mov
aaa
imul
inc
sti
popa
ficoml
xor
fmull
fstpt
nop
jae
aad
dec
sbb
ret
movntq
negl
sub
outsb
adc
subl
mov
jp
in
cmp
ret
pushf
ljmp
xchg
inc
push
das
pop
lea
fwait
cwtl
cltd
or
scas
nop
xchg
or
int3
jae
xor
inc
xor
roll
jmp
shl
and
mov
leave
cltd
cmp
aas
cwtl
inc
sbb
lahf
jmp
sahf
ds
adc
jo
mov
mov
pop
jl
mov
pop
mov
inc
push
sub
mov
and
xor
je
jbe
jge
xchg
inc
xor
dec
add
ret
or
sbbb
movsb
aam
dec
push
js
cli
enter
sub
xor
les
leave
movsb
sub
add
fcmovu
push
push
jo
xchg
shr
and
sti
sbb
push
inc
enter
pusha
cmc
push
mov
jmp
fdiv
pop
loopne
pop
cmp
rorb
mov
adc
dec
dec
jg
shrl
test
jle
rorl
mov
loopne
add
ret
mov
pop
jbe
or
inc
hlt
outsb
scas
mov
lahf
repnz
sbb
aam
and
out
or
inc
lods
or
push
and
pop
push
out
xchg
bound
mov
add
rolb
and
pushf
sub
jl
outsb
xor
pop
sbb
subl
pop
les
test
cmp
in
push
ja
cmc
pop
cld
and
push
js
sbb
dec
sbb
push
jp
stos
pop
gs
push
sarl
dec
icebp
jae
cmp
ljmp
in
add
ljmp
cmp
push
mov
push
hlt
shll
shll
or
add
xor
mov
sub
dec
std
imul
fnstenv
mov
dec
dec
pop
in
ds
jmp
jb
lret
xchg
dec
scas
in
faddl
lods
mov
sub
push
pop
daa
and
lret
adc
adc
dec
adc
lcall
mov
mov
adc
icebp
nop
nop
adc
lods
pop
push
pusha
mov
arpl
mov
jae
outsb
jmp
ljmp
add
out
push
hlt
pop
mov
out
cmp
loop
sub
xlat
inc
mov
jb
rcl
int3
popa
push
int
stos
adc
stos
xchg
or
in
gs
push
cmp
subl
ljmp
pop
mov
arpl
add
mov
push
inc
imul
sti
repz
fidivs
mov
roll
aam
sbb
xchg
insb
mov
xor
hlt
fsubr
js
cmp
stos
pop
cmp
in
and
std
sbb
sarb
mov
fmull
lcall
and
je
movsb
mov
test
fldl2t
insl
cmp
mov
cmp
imull
les
cmp
into
int
test
push
insb
js
mov
jge
mov
jl
test
pusha
dec
add
mov
nop
out
repnz
push
sbb
lods
add
inc
mov
inc
sbb
ret
insl
cwtl
adc
out
mov
in
test
popa
xchg
scas
loope
arpl
ds
mov
out
lahf
in
test
fcmovnu
sub
stos
sahf
dec
inc
les
add
cmp
add
fistpl
jmp
dec
mov
add
call
pop
push
sbb
pop
push
push
leave
lcall
out
mov
dec
daa
pop
lock
test
mov
fldcw
fsubl
shll
mov
jbe
mov
test
push
aam
lcall
adc
into
in
stos
stos
shll
sbb
dec
cmc
cmp
lahf
fsubl
add
cwtl
sti
jle
jbe
jmp
fnstcw
xor
mov
cmp
xchg
cmp
ja
lcall
adc
pop
xchg
stc
insl
pop
cmp
stos
scas
addl
addr16
mov
sbb
cmp
xorb
add
mov
xorl
imul
dec
in
cmp
fucomip
loope
or
sbb
dec
mov
xor
mov
dec
out
std
xor
mov
mov
bound
adc
and
stos
mov
sub
xchg
jle
scas
adc
mov
mov
imul
in
jbe
cmp
insl
sbb
xchg
shrl
xchg
inc
jno
or
aas
mov
xor
sub
or
cltd
pop
and
ret
hlt
cmp
out
pop
or
xor
pop
xchg
notb
mov
aam
jecxz
lock
adc
sub
mov
aam
mov
rorb
or
fidivrl
fneni(8087
pop
mov
mov
fmulp
ret
insb
call
aaa
leave
xchg
pop
cmc
and
loopne
xor
pop
mov
jbe
jmp
lds
push
pop
fs
fnstsw
sub
popa
inc
sub
push
mov
sbb
in
repz
addr16
mov
add
xchg
rolb
hlt
test
scas
scas
cmpsb
sbb
aaa
push
jo
icebp
or
push
mov
fsubs
mov
and
pusha
imul
shlb
shll
push
dec
dec
mov
jl
inc
mov
movsb
lret
aad
add
pop
out
fmull
jnp
idiv
cs
mov
repz
mulb
push
inc
sbb
lds
pop
inc
mov
jl
dec
and
sbb
dec
mov
into
mov
inc
dec
sbb
mov
test
ss
inc
xor
das
cmp
fsubrp
cld
iret
dec
push
fs
rorb
xor
insl
mov
pop
fiaddl
stc
mov
cmp
pop
add
fdivl
rclb
stc
popa
lahf
dec
mov
imul
pop
std
pop
add
jnp
mov
dec
lret
popf
jecxz
mov
mov
sbb
cmp
mov
sbb
and
sbb
lcall
jle
xchg
cwtl
ss
pop
imul
test
std
add
test
cmpsb
and
je
movsb
xchg
add
push
add
push
add
loop
adc
push
lcall
sar
push
jo
dec
in
test
sub
mov
scas
xor
jle
push
out
repnz
mov
or
fnstcw
sub
into
mov
pop
mov
and
int3
icebp
sub
xchg
xor
ret
mov
loope
loope
js
push
sbb
jne
mov
mov
xor
mov
xchg
mov
mov
add
xchg
jge
inc
lret
push
outsb
push
pop
les
lahf
xor
sub
les
sub
adc
xor
sub
mov
stos
js
and
add
inc
scas
mov
stos
aad
sub
arpl
mov
sbb
stos
mov
add
add
pushf
push
out
add
add
pop
jne
jmp
imul
sub
dec
stc
push
jo
adc
data16
sahf
arpl
sbb
dec
adc
arpl
mov
fs
sti
jns
jp
popa
sbb
fnstcw
xor
pop
movsl
lock
adc
testl
add
cmp
jmp
out
call
inc
ja
dec
sarb
inc
pop
ret
pop
cmp
popa
fsubrl
scas
fnstsw
push
mov
mov
adc
or
mov
pop
decl
or
sub
add
sbb
xchg
movsb
jl
pop
adc
mul
pop
mov
imul
pop
fsubrl
jmp
cwtl
scas
pop
pushl
lcall
icebp
mov
hlt
aam
mov
push
adc
pop
cmp
jecxz
jecxz
xor
test
cmp
leave
cmp
cmpsb
sub
imul
push
mov
fmull
bound
enter
out
loop
rol
adc
xchg
popf
jmp
and
je
or
xchg
push
push
sub
or
sub
into
mov
sub
mov
xor
jns,pt
jl
addr16
stos
dec
cmp
lahf
pop
xchg
and
xor
jp
xor
xor
cmp
insb
fxch
adc
adc
faddl
sti
aaa
pop
pop
rcrb
sbbl
outsb
pop
and
outsl
pop
push
mov
xlat
cmp
insl
mov
and
and
negl
push
sub
mov
test
fucom
stc
andl
mov
jl
out
cmp
mov
in
cmp
clc
mov
pop
mov
ja
lds
push
xor
pop
add
add
lods
into
dec
mov
jne
aad
mov
ret
rcrb
cmp
repz
mov
dec
pop
pusha
dec
rcr
stos
idivb
enter
lods
jne
jmp
shrb
idivl
scas
mov
cwtl
movl
jae
push
test
and
adc
pop
je
dec
sbb
icebp
imul
fwait
push
and
mov
dec
sbb
icebp
aam
push
std
inc
jae
jo
in
aas
bound
loop
pop
xchg
lret
jb
outsl
arpl
stos
ja
xchg
jmp
add
int3
or
inc
pop
add
inc
push
xor
xchg
icebp
outsb
mov
push
loopne
icebp
push
fimuls
mov
xchg
pop
add
clc
add
test
inc
test
inc
in
add
or
pusha
inc
lds
jbe
or
fwait
es
push
push
lods
int
sbb
mov
idivb
nop
push
into
mov
dec
lods
inc
mov
ss
cmc
mov
push
sbb
cwtl
orl
jae
scas
orps
out
int
into
stos
insb
orl
ds
jle
mov
sub
mov
pop
fwait
jmp
popf
ret
aaa
pop
insb
pushf
aam
das
xor
repz
or
into
dec
out
gs
mov
test
xlat
dec
fcoms
xor
aam
xchg
ljmp
lcall
mov
xchg
sahf
flds
fisubrs
cmp
inc
lahf
or
out
cmc
aam
das
fwait
xorl
mov
rorl
pop
push
addr16
sbb
sbb
cld
inc
pop
pop
push
pop
fcmovu
insl
sbb
xor
pushf
ja
push
dec
xchg
mov
stos
lods
orb
mov
cmpsl
xor
add
cld
das
xchg
lock
pop
push
cmp
insl
jns
pop
das
xor
pop
dec
sub
dec
mov
je
fsubr
dec
jae
sub
lock
and
mov
inc
dec
xor
fincstp
out
adc
xor
fistl
cmp
jp
aaa
mov
ljmp
fisubrs
mov
sub
xchg
insb
sbb
pop
inc
sarb
addr16
push
jb
lea
les
cs
lds
es
das
mov
jno
mov
sbb
outsl
out
cmp
inc
mov
dec
fstpl
pop
pop
imul
jo
xchg
les
lock
jbe
inc
pop
dec
outsl
test
jmp
outsl
adc
in
xor
jg
in
pop
sbb
aas
sub
iret
fmull
push
addr16
adcl
adc
push
int
and
add
test
lods
sub
andl
test
jae
pop
xchg
clc
xor
cmpb
movsl
or
mov
pop
sub
mov
pop
lods
sbb
int
jnp
imul
jecxz
aaa
push
xchg
or
adc
pushf
fisubrl
scas
mov
xchg
jge
or
imul
mov
mov
subb
jns
jp
inc
mov
cwtl
roll
inc
cmpsl
mov
add
sahf
aam
lea
inc
sbb
pop
les
push
sti
mov
mov
dec
gs
sbb
lret
ret
arpl
mov
rcrb
icebp
je
jle
aaa
mov
rcrl
xchg
es
mov
outsb
pop
add
data16
xchg
mov
enter
lods
pop
in
andb
or
sbb
in
stos
inc
into
push
mov
mov
in
mov
test
mov
mov
xchg
mov
mov
cli
scas
cmp
xchg
inc
popf
daa
add
test
pop
push
push
xchg
std
pop
fldt
ficoms
lods
insb
lods
push
cltd
cmc
sbb
idivl
popl
jae
lea
sub
test
std
std
test
pop
call
ret
mov
sub
pop
cmp
jg
ret
sahf
lods
mov
adc
mov
shll
insl
ds
ret
imul
add
aad
xlat
pop
iret
fcoml
adc
fwait
mov
aaa
dec
push
mov
dec
inc
ffreep
ret
mov
insl
inc
das
cmp
mov
xchg
out
outsb
cmpsl
int
rcl
cmp
jmp
jnp
xchg
sbb
xlat
jp
push
pop
lret
aas
cmpsb
xchg
dec
sbb
add
cmp
cmp
into
lds
dec
pop
mov
push
loop
adc
jl
sbb
jo
adc
jmp
test
xor
and
repz
mov
scas
lret
fcompl
cmp
and
popf
in
shll
mov
push
sub
sbb
repnz
js
es
xchg
or
adc
xor
lcall
jp
addr16
mov
xchg
sahf
out
mov
in
fadds
push
xor
jmp
or
or
push
dec
dec
xor
nop
push
jb
rcll
or
ds
cwtl
add
and
mov
add
adc
xlat
call
sbb
fs
jecxz
adc
rcrl
shld
in
push
pop
adc
scas
cmp
mov
inc
stc
addr16
hlt
mov
push
pusha
add
jnp
xorl
push
div
dec
push
add
test
mov
xchg
mov
add
jmp
and
push
and
adc
shrb
xorl
enter
negb
adc
test
scas
fcomps
arpl
sub
jle
sub
fdivrl
test
shr
jmp
dec
sbb
xchg
jmp
mov
addb
fiadds
push
and
cwtl
jle
push
pop
fsubs
lods
lds
adcb
or
ss
daa
sub
outsb
mov
fwait
into
mov
scas
xchg
adc
pop
jge
mov
add
inc
or
pop
popa
wbinvd
pop
ljmp
add
sbb
pop
icebp
push
aam
xor
xor
andl
mov
xchg
and
test
sbb
scas
mov
gs
xor
aad
pop
cmc
push
mov
lret
data16
rcll
rolb
ret
ds
add
addr16
mov
dec
adc
push
push
dec
dec
in
es
aaa
lods
xchg
popf
pop
add
pop
aaa
pusha
sub
xor
push
out
je
fs
sar
stos
xchg
in
jb
fldcw
scas
add
xchg
cmp
fsubrl
lea
into
leave
jecxz
jo
pop
mov
xchg
and
mov
and
insl
pop
fwait
inc
jne
adc
test
testb
sbb
and
fdivrl
add
cmp
out
cwtl
jnp
stos
repnz
pop
jbe
fistl
nop
mov
sbb
xor
jl
dec
icebp
push
mov
arpl
mov
jae
lahf
dec
cmc
or
in
je
out
pop
dec
mov
enter
inc
push
out
lods
or
pop
mov
insl
or
or
mov
pop
out
and
stos
sbb
dec
dec
aam
imul
pop
cmp
in
incb
fistpl
add
int
add
dec
push
idivl
std
popf
out
add
test
jg
and
cmpsb
push
clc
icebp
and
pop
sbbl
pop
in
jb
lock
je
xchg
jns
std
fiaddl
push
dec
cmp
jno
andl
ret
xor
push
pop
jmp
ss
cli
mov
jle
ror
aad
sbb
movsb
lcall
jl
push
rorl
cmp
repz
jecxz
es
rclb
fs
pushf
int3
out
mov
pop
sbb
int3
ret
pop
jmp
push
add
es
sbb
clc
addr16
aad
jns
loop
mov
lea
stc
jge
cmpsl
cwtl
mov
jnp
mov
push
leave
cltd
cmp
or
xchg
mov
add
adc
int3
sbb
cmpb
add
push
inc
imul
or
enter
cs
enter
push
shll
out
jbe
rcrb
cmp
jecxz
jae
ret
push
jle
pop
pop
repz
push
inc
adc
psrld
cmp
xchg
mov
shl
outsb
jno
sbb
repnz
cmp
leave
aam
fnstsw
bound
daa
test
or
mov
ret
fldenv
push
inc
pop
inc
sub
jmp
sub
adc
pop
push
push
movsl
dec
stc
sbb
or
popa
sub
jae
adc
and
ss
xor
sbbl
xchg
es
push
push
or
add
pop
movsb
xor
nop
mov
inc
leave
pop
sub
jo
mov
jle
jmp
dec
ds
push
in
dec
test
cmp
add
add
rolb
in
outsb
fs
push
push
lock
sub
sbb
mov
cmc
negb
sbb
scas
xor
stos
xchg
and
jae
lahf
jns
mov
ror
mov
pop
imulb
shlb
je
repnz
sahf
cmp
lds
dec
and
mov
rclb
add
jae
ret
cli
cmp
jge
jle
mov
sahf
je
fs
mov
xchg
xor
test
jae
push
sub
pushf
mov
push
cwtl
or
test
mov
mov
es
mov
sub
mov
cli
lahf
imul
out
jmp
mov
cwtl
sbb
fs
mov
lods
and
in
push
lret
mov
sub
and
pop
lahf
cmpsb
into
add
jb
out
pushl
div
inc
out
movsl
fcoms
xor
dec
fistps
mov
and
cli
pop
mov
pop
sub
popa
call
lods
lea
push
push
mov
das
and
fidivl
jg
xor
popf
and
cmpsb
je
jns
das
cmp
pop
xchg
repnz
sbb
jl
aaa
arpl
xor
and
inc
push
cmc
jae
sbb
jg
add
xor
pop
sarb
add
cmp
out
fldl
sbb
ret
leave
out
mov
movsb
aas
in
mov
clc
stc
cmp
imul
call
cmp
xor
mov
loopne
mov
bound
cmp
std
rorb
push
inc
movsb
pop
jecxz
cmpsb
sbb
lahf
je
jbe
shll
xchg
add
xchg
pushf
xor
mov
jl
fmul
pop
sar
bound
ret
push
nop
add
outsb
pop
or
jp
adcl
and
insb
test
xchg
inc
cmp
rorl
jno
add
xchg
in
adc
push
mov
inc
pushf
mov
xchg
inc
cmp
sub
aam
jne
ja
mov
lret
cmp
stc
movsl
push
dec
dec
sbb
jge
loope
push
lret
pop
xchg
pop
fucomp
ret
and
add
cmpsl
inc
pop
aam
xor
inc
fucomi
mov
adc
sub
in
adc
adc
inc
or
iret
mov
fbstp
and
sbb
cwtl
orb
push
popf
ds
fstpl
xor
lods
lea
out
xlat
aam
mov
pop
bound
ficomps
and
or
lods
cltd
test
iret
pop
push
stos
push
out
addl
gs
inc
pop
ss
shrb
jmp
inc
pop
lahf
inc
push
ljmp
cs
add
jno
xchg
dec
pop
mov
push
int
mov
mov
inc
daa
sub
push
aam
gs
jne
lds
jb
div
xchg
dec
xchg
mov
mov
pmulhw
std
adc
enter
pop
leave
in
mov
dec
lods
aam
fwait
jns
cmpsb
icebp
movsb
sarl
ss
xor
jmp
dec
ret
sub
push
lds
pop
mov
lahf
push
xchg
lea
shrl
rcr
lret
scas
jbe
cmp
rep
push
inc
sbb
push
cmp
movsb
test
mov
dec
or
inc
outsl
mov
ds
sub
lahf
pop
stc
adc
fs
mov
outsl
or
sub
cltd
sub
cmp
rcrb
mov
jne,pt
std
scas
decl
or
lock
xchg
add
jo
ret
mov
scas
dec
test
fwait
lds
jo
cmpsb
scas
test
pop
ficoms
xorl
ljmp
mov
cltd
das
cmp
fcmovu
aas
mov
mov
ds
lock
fwait
test
push
xchg
xor
mov
sbb
add
inc
inc
lock
shl
or
stc
prefetch
cli
shrb
mov
lods
push
cltd
lock
inc
cmpsl
test
cmp
jle
stos
std
ljmp
ljmp
mov
add
or
sbb
xchg
mov
stos
mov
ror
jmp
push
les
jnp
mov
inc
jge
js
xor
das
xchg
mov
mov
push
adc
cmp
push
orl
mov
pop
inc
push
sbb
cmp
lret
imul
sub
andb
pop
in
pop
push
xchg
xchg
cmp
mov
imul
push
into
inc
mov
mov
loop
cmp
mov
pushf
imul
xor
cwtl
aam
decl
cmp
cltd
int3
test
repz
dec
out
scas
mov
gs
clc
not
addl
rep
dec
arpl
fildl
add
scas
rclb
mov
arpl
mov
scas
xchg
out
xor
inc
lret
xchg
js
sub
arpl
fcomi
inc
dec
adc
cmp
mov
outsb
jb
inc
roll
pop
enter
mov
pop
subl
vpmulhw
jecxz
arpl
iret
mov
inc
lcall
inc
xor
xchg
push
xor
fxch
jns
mov
or
mov
mov
or
and
cltd
daa
clc
nop
dec
pop
cwtl
aaa
lods
jns
into
push
or
sbb
adc
js
orl
test
adc
cli
inc
jb
lods
jl
mov
sbb
cmp
inc
pop
mov
ss
inc
jp
hlt
lea
js
add
xor
sub
out
aad
push
lods
mov
in
sub
xor
mov
push
js
out
leave
ds
loopne
sbb
inc
lods
mov
pop
add
adcb
xchg
outsb
add
mov
jmp
mov
shll
jne
pop
adc
sub
pop
xor
ret
pop
dec
pop
scas
lret
lcall
loope
cli
imul
lods
dec
add
gs
imul
push
lods
cmp
inc
push
push
cmp
push
pusha
fcmovnb
call
icebp
or
enter
jg
sti
mov
and
out
cmc
mov
ret
sub
out
pop
clc
fwait
pop
fwait
mov
cmp
enter
mov
cmpsb
mov
jbe
push
dec
scas
adc
addl
rcrb
ret
dec
mov
aas
test
into
outsb
adc
ljmp
inc
push
pop
mov
fwait
cmp
fcomps
adc
sbb
popa
dec
inc
ror
imul
jne
inc
mov
mov
mov
aad
or
add
sub
into
add
mov
cmpsl
jmp
stc
cld
lods
shrb
dec
mov
shll
jle
leave
adc
sbb
arpl
pop
sub
mov
out
fcompl
or
cmp
adc
dec
pop
sub
ja
push
add
or
dec
lds
push
hlt
out
iret
loopne
insl
pushf
sub
push
mov
sub
jl
inc
pop
jo
arpl
mov
outsl
cltd
ret
mov
sti
inc
outsl
cmp
mov
bound
mov
es
aad
ds
xchg
xor
cmp
in
xor
lahf
stos
iret
fiaddl
sbb
mov
out
inc
jle
xor
jno
sub
pop
jbe
mov
push
mov
out
jp
es
xor
jnp
xchg
mov
push
mov
pop
and
imul
dec
mov
lods
jp
pusha
scas
jmp
dec
xor
jae
push
sbb
xchg
jb
imul
dec
jb
jnp
es
ss
pushf
aam
jg
test
jmp
int3
lcall
inc
push
xchg
scas
jl
pop
jo
xor
and
push
js
or
sbb
xor
mov
stos
cmp
inc
sbb
mov
fdivl
dec
cpuid
cmp
xchg
adc
pop
int
dec
dec
push
je
inc
cmp
stos
or
xor
int3
lods
jmp
sarl
dec
mov
call
aam
sub
dec
lea
fwait
outsl
add
aam
sub
push
lret
push
cmc
dec
add
jne
pop
data16
dec
test
and
sub
inc
ds
ret
ret
dec
cmp
push
rcll
push
jno
or
hlt
cmpsb
cmpsl
in
test
mov
rcr
dec
mov
push
dec
xchg
jb
scas
aaa
push
pop
lret
movsb
loope
cmpsl
decl
jp
fidivl
xlat
dec
sar
inc
sbb
xchg
push
mov
sub
clc
icebp
mov
sub
ret
test
in
jo
or
inc
icebp
in
xchg
and
xor
das
leave
xchg
pop
nop
orl
std
int3
xchg
adc
pop
lock
out
rcll
mov
adcl
sbb
inc
mov
insb
pop
inc
xchg
or
pop
mov
cmp
call
dec
stc
cmp
jmp
loope
dec
inc
jne
popf
movlps
mov
int3
sub
jb
adc
int3
outsl
mov
andl
push
ret
mov
mov
test
xorl
shlb
pop
push
dec
gs
push
inc
je
fsubr
les
cmp
sub
xor
out
dec
xchg
mov
cmp
arpl
xchg
pushf
imul
fcompl
ret
cltd
xor
mov
sub
aas
sub
lods
and
ds
ja
lds
mov
add
inc
inc
and
scas
dec
pop
popf
push
es
fxch
repz
loope
inc
lret
push
mov
pop
mov
jl
stos
dec
and
push
add
mov
cmp
xlat
fsubrs
cs
adc
iret
xchg
cli
and
xchg
jae
jg
xor
mov
stc
inc
rcrl
sbb
dec
pop
adc
jmp
ja
and
ret
mov
cmp
xchg
js
push
rcll
lret
pop
xchg
sti
dec
ret
dec
push
fiaddl
in
dec
dec
insb
inc
pop
cs
in
jns
inc
and
sub
mov
out
pushf
or
sbb
mov
loop
mov
inc
lahf
add
int
mov
pop
and
cmp
scas
inc
xchg
fwait
popf
mov
int3
pop
imul
jge
pushf
xor
jle
push
lcall
andl
cltd
jbe
inc
in
pop
addr16
test
cmp
call
cmc
test
cmpsl
mov
sub
dec
negb
mov
dec
sub
and
cld
cwtl
mov
mov
push
dec
push
cmp
das
dec
aas
xor
jbe,pn
add
lcall
andb
icebp
dec
jg
mov
dec
push
adc
mov
push
cmp
sbb
push
xchg
add
mov
xchg
add
test
insl
sahf
sbb
mov
imul
shlb
aaa
pop
fcmovne
xor
xchg
dec
scas
clc
mov
mov
cld
xchg
stos
sub
add
push
icebp
lods
nop
jp
pop
jae
das
xor
in
inc
fs
mov
lahf
cmp
ljmp
negl
test
negb
dec
xchg
jmp
sub
add
dec
shl
rep
inc
or
xor
stos
sbb
adc
in
push
jns
notb
lea
pop
add
pop
aaa
add
daa
cwtl
xchg
cmpsb
je
ds
loopne
enter
mov
les
in
js
or
xchg
out
rcll
jge
lods
add
lcall
fs
add
or
xchg
ret
iret
fs
mov
add
out
stos
mov
mov
adc
mov
inc
jae
stos
scas
sub
out
xorl
jno
outsb
sub
or
ja
shl
cmp
sub
jmp
mov
add
ljmp
clc
iret
push
imul
cmp
arpl
mov
aad
in
imul
mov
test
out
mov
inc
es
push
fsubp
leave
cli
push
and
movsl
jle
shlb
lds
mov
xchg
dec
das
call
push
fnstsw
test
dec
popa
jns
mov
repz
mov
mov
pusha
push
dec
inc
and
xchg
pop
jb
adc
sbb
imulb
jge
cmp
enter
jle
jae
lods
in
sub
adc
pop
mov
pop
icebp
roll
push
push
dec
mov
out
mov
fcompl
test
test
add
movsb
out
pop
sbb
jae
mov
je
jno
rcrb
xlat
pusha
lahf
pop
pop
or
test
sahf
jp
je
cmp
arpl
push
stos
into
xor
mov
dec
sub
push
mov
enter
pop
or
add
clc
in
adc
mov
inc
in
daa
movsl
and
mov
mov
les
cmp
in
ret
mov
into
add
in
mov
mov
push
jecxz
xor
adc
adc
clc
mov
push
mov
mov
mov
out
and
cmp
cmpsl
inc
rcll
shll
out
jecxz
aam
mov
jl
scas
inc
divb
push
movsl
lea
insl
insw
push
aas
adc
dec
add
xchg
ret
cmpb
sbb
out
mov
cmp
clc
out
data16
fidivs
and
jp
orb
insb
loope
aas
bswap
or
loopne
rcrl
orb
xchg
out
xor
es
pushf
outsb
test
xchg
movsl
je
or
test
mov
sub
and
pop
push
rorl
popf
push
stos
or
mov
addr16
cmp
jne
aad
cmp
popa
bound
call
enter
push
mov
lods
jmp
push
out
pop
es
ja
cld
mov
push
nop
ror
or
cmp
mov
lea
inc
dec
jmp
test
pop
add
push
mov
pop
imul
out
adc
and
fldt
je
popa
movsl
ficoms
in
sbb
shrb
pop
adc
popa
sti
aaa
push
pusha
test
clc
or
mov
dec
jp
mov
call
sub
and
into
dec
adc
push
mov
push
movsl
mov
int
and
shrl
test
arpl
jmp
ror
add
adc
add
pop
dec
pop
mov
jp
sbb
insl
or
adc
pop
sub
pop
xor
push
loop
mov
xchg
push
sarl
sbb
and
mov
pop
mov
in
jp
xor
jp
xor
adc
mov
das
adc
add
pop
mov
out
xchg
inc
adc
fistpl
push
fsubl
jle
add
setb
sbbl
push
dec
mov
cltd
mov
incb
js
mulb
jnp
push
dec
pushf
lds
movsl
add
out
aad
pop
cmpsl
push
jl
fwait
insl
fwait
push
fisubrl
imul
lahf
out
inc
or
ljmp
rcrl
mov
sbb
je
push
and
and
mov
loop
sub
sub
mov
xchg
aad
ljmp
xchg
mov
push
lods
cs
es
mov
lcall
pusha
xchg
mov
jl
out
xchg
repz
jne
ds
enter
dec
ret
dec
push
daa
adc
daa
cld
lods
bound
mov
imul
lret
inc
mov
dec
pushf
ret
or
sub
sbb
stc
or
outsl
int
insb
cmp
rcrb
adc
lahf
clc
call
out
shll
hlt
aaa
jp
decl
aad
mov
push
adc
fdivp
cltd
mov
dec
shlb
int
test
xor
fmull
add
push
or
test
out
mov
xor
and
add
sub
adc
sub
fcomp
jbe
out
sbb
das
adc
insl
pop
movsl
movsl
gs
divb
rolb
les
sub
pop
sahf
leave
pop
push
and
lock
cmc
loope
inc
arpl
inc
xlat
jmp
or
or
movsl
xchg
arpl
or
mov
adc
xchg
pop
loop
adc
icebp
push
enter
jno
iret
fidivrl
add
sbb
daa
aas
stc
sbb
push
dec
sbb
out
idiv
inc
jl
mov
jl
test
mov
call
push
mov
test
or
add
in
imul
mov
xor
cmp
dec
or
xchg
cs
pop
fstpl
sti
ss
lahf
xchg
pop
cld
adc
jbe
or
and
and
inc
dec
jmp
into
mov
cmp
dec
adc
pop
movsl
in
das
dec
insl
lahf
sbb
ja
inc
inc
inc
movb
push
enter
loop
out
mov
lods
push
inc
sbb
push
jge
jmp
pop
test
pop
xchg
stc
push
push
sti
or
pop
out
xchg
jmp
call
stos
mov
sti
or
mov
xchg
in
hlt
sahf
jbe
sub
xorb
xor
loop
lcall
mov
jg
iret
jp
fwait
out
cltd
push
adc
loop
out
les
cs
add
stc
rorl
adc
xchg
pushf
lret
and
inc
jb
jmp
jns
loop
out
fldenv
imul
sub
xchg
mov
mov
inc
inc
cmc
mov
ds
test
sbb
cmp
ds
push
push
mov
aam
inc
and
stc
jmp
sahf
jge
fs
jecxz
rcrb
mov
xchg
mov
jmp
pushf
push
in
xor
invlpg
imul
fmulp
subl
xchg
jl
pop
push
mov
mov
std
mov
sub
hlt
dec
ja
and
sti
jmp
rcl
xchg
pop
mov
sub
xor
push
mov
aam
dec
jmp
xor
lods
out
jno
lret
stos
xor
imul
pop
out
pop
push
in
or
push
repz
dec
mov
and
pop
fsub
stos
into
sub
push
loopne
mov
aas
daa
xor
adc
out
cmc
cwtl
add
xor
rcrb
aad
push
and
pop
in
xchg
repnz
loopne
cs
add
bound
jb
mov
in
icebp
xchg
jp
mov
mov
dec
or
lgs
jp
push
mov
pop
and
add
leave
aas
sub
aas
in
jmp
cli
inc
jns
pop
sbb
jns
fs
std
xchg
xchg
sbb
movsl
in
int3
xor
mov
xor
mov
mov
sub
xor
xchg
aam
jg
dec
addr16
mov
dec
cmp
dec
sbb
sub
xchg
and
jbe
jno
pop
movsl
xor
cld
dec
jp
mov
iret
push
pop
dec
jg
push
rcl
sbbb
cmpsb
add
adcb
iret
mov
insb
fadd
scas
push
cmp
push
outsb
ret
aas
adc
jl
clc
dec
jns
xchg
stos
inc
inc
mov
adc
fstpt
push
cmp
sahf
mov
gs
sarb
inc
push
daa
out
mov
mov
mov
ja
dec
pop
mov
test
lahf
dec
mov
pop
ss
enter
adc
daa
es
loopne
pusha
mov
sub
stos
mov
fsubrs
cmpsb
mov
add
shl
insl
orb
adc
ret
pmullw
xchg
cmp
stos
int3
mov
imul
cwtl
aad
pop
js
out
stc
das
sbb
cmp
or
out
movsb
ret
bound
inc
mov
and
pop
ds
enter
or
mov
and
dec
and
add
pop
pop
mov
cwtl
mov
xor
push
mov
adc
pop
mov
vpmadcsswd
sbb
test
mov
lock
ds
enter
inc
js
scas
xchg
filds
test
imull
out
jg
push
in
mov
lret
bound
push
push
inc
push
lea
hlt
add
fdivrs
pop
int
jns
pushf
inc
xorl
push
inc
and
daa
jl
mov
sets
fldl
aam
cmp
jnp
fucomp
ret
push
pushl
testl
jo
lret
test
aam
repz
lds
lock
lods
pop
push
pop
ljmp
fsubs
insb
push
mov
sbb
aam
rcrl
xchg
push
test
fildll
inc
lea
in
lods
pop
hlt
adc
sub
stos
pop
xor
dec
mov
jno
lods
scas
inc
incb
cmpl
fs
popa
scas
jae
inc
cli
hlt
sub
pop
mov
dec
cs
xchg
push
jne
push
sbb
mov
pushf
push
das
adc
pop
gs
xor
or
das
in
inc
ds
mov
push
test
or
sbb
repnz
out
arpl
fsubl
mov
pop
xor
pop
jno
popf
mov
mov
aad
scas
add
sbb
aaa
mov
dec
mov
shl
xlat
iret
js
or
or
mov
sbb
jecxz
xchg
inc
testl
add
mov
out
sub
and
sarb
sub
or
push
mov
xchg
mov
xchg
sbb
jbe
insb
sub
rcrl
push
sti
loope
rorl
pop
lock
jl
lret
and
sbb
in
add
stos
lock
add
jbe
dec
adc
push
out
fwait
idiv
sbb
fdivrp
inc
and
and
std
push
push
xchg
daa
pushf
push
jo
pop
int3
cmp
xchg
mov
adc
cmp
loop
scas
push
sarl
xchg
push
ja
cmpsl
bound
jmp
mov
rolb
push
push
aam
or
addb
adc
flds
jmp
nop
outsb
lcall
mov
inc
popf
dec
inc
adc
adc
adcb
xchg
xchg
and
es
cwtl
push
mov
adc
dec
fisttps
test
ljmp
cmp
mov
mov
subb
jns
lock
xor
mulb
push
sub
or
jg
clc
adc
mov
mov
outsl
fwait
jl
lret
xor
jae
add
aaa
mov
in
mov
mov
test
mov
mov
out
inc
jmp
fs
pop
roll
in
mov
imul
das
adc
sub
pop
push
jp
jne
xchg
mov
push
cwtl
shr
out
xchg
push
ficoms
hlt
inc
fmuls
add
pop
or
mov
pop
xor
cmp
xchg
mov
loop
roll
push
sbb
ja
dec
mov
popw
mov
clc
fnsave
mov
scas
loopne
fisubrl
mov
ljmpw
push
pop
in
or
negl
imul
xlat
xor
mov
out
xchg
and
in
sti
rolb
incb
flds
push
jae
aad
mov
mov
cwtl
or
jge
lea
sbb
xchg
pop
mov
fldt
sahf
hlt
push
ds
rolb
jne
ljmp
or
cmpsl
dec
lods
mov
mov
repz
je
dec
cmp
push
pop
pop
loop
jbe
pop
js
cli
stos
ret
mov
daa
jecxz
movsb
mov
xchg
cmc
lea
xor
scas
das
sub
mov
jo
inc
mov
jl
inc
mov
pop
addr16
jne
loopne
inc
rorl
stc
call
fcom
adc
jne
lods
push
cld
ja
or
testl
or
dec
push
pop
fidivrl
leave
jo
xlat
adc
ja
in
mov
or
xchg
icebp
repnz
and
mov
movl
mov
xchg
lahf
jmp
hlt
popf
in
push
fsts
xchg
sar
mov
pop
js
dec
mov
test
sti
aas
iret
in
xchg
inc
jbe
lods
jo
int3
jb
xchg
xor
sti
sbb
loop
into
adc
roll
sub
stc
xchg
add
jns
pop
xchg
into
mov
jg
dec
or
jmp
mov
aaa
ljmp
cld
cmp
or
dec
cmc
les
loop
or
cmp
adc
in
xlat
mov
sub
test
push
loope
cld
test
dec
shll
jle
cmp
jns
les
push
daa
push
jecxz
add
cwtl
data16
pusha
adc
and
push
xor
mov
jno
lret
xchg
cld
in
std
pop
rcl
ret
adc
cmp
or
push
xchg
inc
clc
push
fiaddl
dec
jg
jae
inc
dec
xchg
push
fwait
mov
int3
sub
mov
xchg
mov
sti
xchg
pusha
int3
adcb
lret
mov
rcrb
adc
imul
xchg
ljmp
jge
icebp
daa
fcomps
cmp
nop
sub
fmull
mov
test
fsubrs
sbb
sub
jno
cmp
test
lret
popf
pop
pop
mov
mov
xor
out
je
cmovp
add
outsb
mov
cwtl
xchg
insb
mov
mov
and
fldt
adc
cmp
cmp
mov
cld
jbe
xchg
mov
shrb
stc
out
cmp
lret
leave
pushf
jns
and
adc
mov
push
mull
lock
cmp
iret
adc
mov
mov
jmp
andl
mov
pop
add
add
pop
int
mov
std
adc
out
and
push
fstl
movsb
stc
aas
dec
fldcw
mov
fcomps
loop
out
sbb
inc
sub
mov
aas
mov
cmp
lret
xorl
add
out
dec
dec
mov
imul
arpl
stos
mov
aas
out
adc
add
lds
cmp
add
pop
je
pop
in
inc
sbb
notb
jge
dec
mov
ret
arpl
mov
inc
xchg
leave
add
mov
lret
sbb
dec
icebp
jo
pusha
scas
jge
out
mov
inc
call
jmp
xchg
ja
iret
fisubs
fsubs
push
pusha
lahf
push
ret
mov
outsl
scas
nop
fs
jl
push
mov
leave
dec
mov
lods
add
push
add
push
pop
sbb
mov
push
sub
or
xlat
sti
addb
inc
xchg
jp
mov
loopne
push
push
mov
adc
hlt
inc
adc
leave
add
mov
pusha
cmp
and
loopne
lock
cmp
rcrb
cli
daa
or
push
mov
lret
lret
pop
cli
jb
mov
mov
popa
adc
xor
in
xor
sbb
jne
jmp
dec
sbb
pop
rorb
rorl
pop
pop
aas
add
adc
addb
aam
and
lret
push
iret
mov
adc
xchg
jnp
jno
lahf
test
jae
jle
cmp
insl
aaa
jg
fisubrl
and
jne
pop
pop
lcall
xor
popf
jp
jnp
xor
or
test
movsl
push
in
cmp
mov
jmp
mov
fimuls
clc
xchg
jnp
jns
clc
ret
jp
fs
mov
ja
or
shll
sub
mov
es
daa
pop
mov
adc
sub
dec
add
push
add
stos
lods
fsubrp
vfmadd231ps
push
addb
dec
push
pop
lods
fsubrl
fildl
adc
addr16
clc
stc
cld
mov
cmp
and
mov
push
imul
adc
mov
in
jg
mov
pop
fbld
ret
mov
or
xchg
inc
jge
cld
roll
es
push
div
fsub
xlat
sahf
ja
add
stos
imul
mov
aam
mov
js
fcmovne
dec
mov
xchg
clc
loopne
dec
cwtl
pop
pop
iret
xor
xchg
cmc
ret
test
dec
mov
jns
ficoml
push
seta
ja
jns
notl
xor
or
test
imul
idivl
out
dec
test
xchg
in
dec
dec
mov
inc
sub
mov
pslld
pushf
mov
and
std
data16
mov
and
fadd
cmp
inc
clc
test
xchg
ljmp
int3
lahf
inc
jge
loop
fbld
inc
sub
jb
cmp
sbb
imul
cmp
fs
ret
aad
or
jo
xor
cltd
cltd
test
movb
scas
mov
add
pop
out
push
jns
xchg
aad
loopne
lea
sub
ret
push
js
stc
pop
scas
int
xchg
fcompl
in
pop
dec
xchg
hlt
sbb
mov
inc
cmp
mov
stos
xor
ret
sahf
loopne
dec
or
jl
adc
into
pop
lret
sbb
mov
stc
inc
sahf
int
adc
push
iret
ss
fildll
mov
das
hlt
sub
nop
cmp
sub
and
test
into
in
movsb
sbbb
cli
nop
dec
lret
scas
movsb
xchg
push
inc
rcrb
mov
ret
inc
cld
out
cmp
xor
fldenv
les
lea
arpl
mov
xchg
pop
lds
test
mov
inc
push
pop
sub
imulb
push
jns
sub
call
rep
out
pop
xchg
jmp
sahf
loop
outsl
int3
cmpsl
or
fs
sub
and
jecxz
mov
jno
jo
xor
mov
xor
mov
pop
mov
inc
rcll
insb
sub
push
fsts
vmovddup
ss
pop
dec
pop
fucom
pop
mov
insb
lret
or
shll
jg
data16
pop
pushw
das
sbb
mov
push
mov
pop
sbb
dec
loop
std
xor
out
pop
loopne
dec
test
movsb
std
or
inc
imul
stc
mov
cmc
enter
lret
mov
pmulhuw
fnstcw
xchg
jo
and
push
xor
fdiv
movb
in
adc
negb
mov
gs
scas
xor
out
sarl
outsb
sub
adc
xor
adc
xchg
mov
dec
lods
test
push
fmuls
inc
jb
push
jecxz
imul
clc
dec
in
imul
add
mov
loopne
fs
fmul
sbb
stc
pop
xchg
insb
sahf
ja
cmpsb
lret
js
inc
fadds
test
lahf
movsb
mov
and
popa
sbb
mov
data16
inc
xlat
mov
fstpt
outsl
add
stc
cmp
cmp
sti
notb
jb
movsl
or
iret
push
jno
or
dec
or
rcll
imul
loope
lahf
out
test
xor
pop
adc
mov
pop
push
pop
or
push
jge
stc
jbe
mov
lds
mov
cmp
sbb
loope
cmp
inc
lock
push
test
adc
cmp
xchg
jg
cmp
cmp
outsl
cmpsl
scas
icebp
test
jnp
mov
dec
pop
ss
xor
add
push
test
loopne
dec
scas
cmp
adc
jo
ss
test
testl
insl
int
arpl
das
sub
js
bound
and
mov
shll
test
adc
mov
xchg
fucomp
nop
popa
notb
nop
outsl
pop
lods
push
cli
and
pop
mov
add
ret
test
fbld
stos
push
ret
adc
std
loopne
push
in
aas
sbb
xchg
arpl
adc
dec
add
dec
or
add
ret
jns
jg
sbb
cmp
and
je
mov
pop
std
data16
add
out
outsb
clc
or
sub
inc
icebp
cli
xor
xorl
cmc
cld
rcl
ss
iret
jae
dec
ss
or
sahf
xchg
lock
iret
sub
fldl
mov
aad
in
and
or
arpl
insb
jo
test
add
push
clc
xlat
mov
dec
std
fcoms
xchg
add
ss
push
pusha
aad
inc
and
icebp
dec
inc
push
int
int3
je
inc
adc
xor
stos
push
dec
ljmp
cmpsl
xor
pop
shlb
push
into
iret
cmpsb
sbb
inc
pop
adc
rolb
cld
pop
mov
pop
cmp
mov
bound
mov
addl
xor
loope
push
cmpsb
leave
leave
mov
xor
das
dec
add
cmpsl
mov
cmp
cmp
neg
into
pop
into
movsl
aad
jp
mov
push
into
inc
roll
inc
mov
ja
mov
dec
cmpsb
mov
push
and
repz
dec
cmp
lret
shl
add
sub
xor
ss
push
imul
xchg
sub
or
pop
in
jmp
fimuls
movsb
xor
sbb
lods
lods
xor
xchg
sbb
mov
ror
mov
push
xchg
addl
xchg
sub
inc
dec
adc
mov
jae
insl
stos
mov
int
jnp
xchg
push
cmp
mov
or
and
push
loop
fstl
cmp
and
lahf
aad
adc
sbb
xchg
xor
mov
sub
adc
cmpsl
jl
pop
push
inc
arpl
jne
fxch
inc
cli
ds
scas
xor
roll
insb
jmp
xchg
out
inc
out
mov
cmp
sbb
jbe
and
popa
loope
mov
sbb
jne
dec
mov
loopne
sub
or
rol
in
jbe
push
faddp
cmp
mov
adcl
xchg
dec
outsl
pop
mov
sub
paddsw
das
idivb
xchg
and
hlt
out
or
sbb
cmpl
je
or
mov
pop
sub
cmpsb
sbb
shlb
idivl
lods
nop
aam
imull
push
and
pop
pop
sub
ljmp
xchg
mov
dec
mov
mov
pop
mov
lods
inc
jo
into
int
imul
ss
stc
xchg
xor
sub
cmp
inc
sub
mov
std
or
xor
ficoml
push
in
push
clc
mov
push
pusha
and
inc
jae
je
scas
inc
xor
sti
icebp
pop
lahf
popa
and
xchg
inc
cmp
dec
add
out
movsb
xchg
leave
jb
and
xor
inc
je
fdivl
jb
scas
test
cmp
xchg
dec
mov
jmp
jle
into
popa
cmpsl
push
push
cmc
sbb
pop
mov
add
lcall
std
inc
mov
ja
xlat
adc
mov
aaa
inc
fs
mov
mov
movsl
cmp
dec
sbb
lods
mov
add
lret
sbb
outsl
adc
xchg
inc
in
fwait
cmc
lahf
add
xchg
mov
sbb
add
std
outsl
bnd
push
inc
xchg
add
lahf
jle
adc
xor
fwait
inc
push
cmp
cmp
push
mov
mov
ret
mov
lock
shrl
cmp
mov
sbb
xlat
js,pt
shl
sbb
and
cmp
ljmp
jmp
int3
je
les
mov
insb
lahf
lret
fnstcw
lods
jge
sub
int3
clc
shrl
rorb
lock
jmp
mov
add
cmpl
pop
stos
mov
add
sbb
int
push
cmc
cmp
mov
push
pop
mov
sub
mov
aas
lods
int
xchg
aam
push
sub
pop
das
and
mov
pop
std
mov
or
insl
leave
jle
ror
mov
mov
or
adc
fsubrp
sub
pop
inc
into
jns
pusha
jmp
das
ret
xor
sbb
test
fsub
mov
cmp
pop
jno
daa
mov
subl
xor
mov
adc
xorb
dec
in
and
jle
repnz
push
cld
inc
shlb
cmp
mov
sub
movsb
mov
push
lods
ja
cmpl
xlat
xchg
mov
mov
rolb
adc
pop
mov
push
and
adc
mov
rol
mov
lods
das
movsb
out
in
add
dec
cmp
dec
cmp
cmp
xrelease
scas
repnz
iret
or
jne
test
repnz
lahf
mov
shlb
int3
adc
cltd
or
cmp
scas
xor
mov
int3
sbb
out
fdivs
inc
mov
or
or
lods
inc
xor
sbb
and
lahf
push
pop
ljmp
inc
sbb
sbb
xchg
sbb
test
sub
inc
ds
xchg
mov
push
sbb
mov
cmp
fildl
jbe
mov
shrl
fstps
xor
pop
ljmp
inc
aad
mov
adc
mov
ds
mov
iret
cmp
ret
inc
movsl
sub
mov
mov
inc
fistpll
mov
mov
daa
loope
jle
clc
push
into
xor
jl
cltd
ja
xor
repz
push
les
sbb
xor
icebp
std
mov
xchg
xor
loop
int
popa
pop
push
xor
movsl
add
scas
pop
add
pushf
xchg
xchg
lods
fisubrs
mov
jno
mov
scas
movsl
adc
stc
xor
mov
int3
push
fwait
jl
pop
int
shrb
xchg
imul
std
aad
out
leave
dec
fdivl
jmp
std
pop
or
sbb
xchg
mov
int3
stos
icebp
daa
cli
push
data16
sbbb
fwait
mov
cmp
fidivrs
inc
push
xor
sar
mov
loopne
xlat
lcall
pusha
mov
pop
ficomps
int3
push
rol
xchg
mov
mov
xchg
xor
push
hlt
jbe
dec
add
inc
shl
or
or
pop
or
cmp
and
outsb
dec
arpl
stos
pop
push
sub
ret
std
scas
int
mov
cmp
rcrb
loop
fimull
pop
mov
leavew
fisubl
pop
lods
and
dec
cmp
adc
inc
xchg
mov
lret
mov
cmp
test
sbb
arpl
or
xchg
aad
call
sbbl
jae
mov
or
fucomp
fidivrs
int
jno
loope
in
mov
call
fdivs
loop
adc
popf
je
repnz
ficompl
jmp
scas
nop
stc
scas
push
or
adc
hlt
adc
mov
mov
cmp
jns
push
call
or
js
jne
or
into
ficoml
int
sbb
mov
fisubs
nop
fsubrl
in
push
jl
aaa
push
cld
nop
sarb
jl
mov
adc
mov
fsubrl
mov
jno
pop
enter
inc
out
pop
push
mov
mov
pop
dec
sub
sub
push
mov
mov
out
cmp
adc
add
sti
mov
in
dec
pushf
push
push
test
lret
add
imul
mov
xchg
cmpsb
leave
xchg
push
or
lods
or
loop
mov
dec
cmp
xor
imul
and
push
push
nop
frstor
loop
ret
pop
push
mov
pushf
mov
mov
lea
sub
dec
aas
inc
lea
outsb
xchg
add
dec
idivb
test
in
shll
pushf
sbbb
pusha
xor
stos
add
jnp,pt
xchg
sbb
push
cmc
in
cwtl
icebp
push
shlb
in
xchg
int
xchg
xchg
lret
ret
rorb
test
xchg
and
pop
push
loop
sbb
or
in
loopne
popf
les
xor
rcl
push
mov
jecxz
dec
xor
into
nop
dec
lret
xlat
in
into
adc
fisttps
addr16
pop
mov
ja
orb
mov
into
les
push
jg
xor
sub
sub
inc
data16
jecxz
into
in
sbb
call
andb
adc
xor
mov
negb
jl
add
mov
adc
out
pop
int3
fnstsw
leave
in
sahf
faddp
or
mov
iret
das
dec
outsb
sub
ds
push
daa
mov
cmc
ds
in
clc
ds
ljmp
ljmp
mov
leave
loopne
xor
xchg
xorl
lock
cmp
les
lods
push
jne
jmp
faddl
notl
xchg
lods
lods
cltd
push
in
mov
xchg
aaa
lea
xchg
cltd
les
pop
sub
adc
ljmp
cltd
push
cmp
xchg
stos
mov
cmc
inc
push
or
scas
sbb
adc
test
and
mov
stos
jecxz
pop
cmp
fadds
push
sub
clc
inc
xrelease
and
loop
das
xlat
ljmp
out
mov
inc
fdivrl
stc
iret
addl
pop
dec
movsl
mov
push
fmul
push
imul
adc
lea
mov
pop
negl
xlat
das
insl
rorb
js
ljmp
mov
mov
push
into
cmp
test
lods
jge
adc
lret
fcomps
add
push
mov
ljmp
pushf
fwait
cli
inc
out
lret
fidivrs
add
negl
jns
mov
cltd
repz
icebp
lea
dec
inc
cld
sti
push
sub
sbb
out
xchg
cmc
mov
jp
incl
rclb
add
cmp
xchg
js
sbb
dec
sbb
fwait
inc
mov
sbb
lret
xor
xchg
jbe
jnp
mov
jnp
cmpsl
xchg
lret
push
ds
push
push
xor
xchg
repnz
rclb
test
orl
jge
call
cld
mov
mov
sbb
sbb
sub
dec
and
aaa
daa
pop
test
popa
shl
adc
jl
inc
push
sub
push
inc
clc
mov
out
xlat
ds
decl
jne
cld
ds
icebp
pop
ficompl
aas
in
xchg
sbbb
jne
pop
inc
adc
jbe
aaa
clc
inc
pop
std
dec
popf
sbb
icebp
dec
cs
or
dec
and
sbb
cmpsl
fcomi
lret
or
sbb
clc
mov
out
mov
stos
inc
adc
xchg
std
adc
sub
mov
xchg
pusha
repnz
sub
lock
dec
imul
aas
pop
pushf
je
sub
push
push
fldenv
add
test
cmp
cmp
push
pop
les
sbbb
xchg
mov
inc
add
popl
dec
fstpt
call
dec
int3
lods
mov
popf
or
lds
mov
movsl
and
push
sub
sub
jae
mov
jmp
cmp
xchg
add
mov
jmp
dec
ficoml
mov
lods
dec
test
jp
cld
mov
dec
aam
or
int3
jnp
and
clc
xchg
xor
addr16
aaa
ljmp
or
jge
aad
icebp
pushf
mov
inc
jge
push
lret
ljmp
cwtl
mov
push
pop
inc
test
pop
idiv
outsb
sar
fwait
cmp
mov
mov
sbb
enter
xchg
xchg
xchg
xor
ljmp
add
cmc
mov
popf
pop
push
mov
clc
mov
repnz
in
daa
mov
ret
rolb
xchg
push
lret
cltd
dec
test
adc
out
mov
test
xchg
sbb
cli
adc
add
or
sub
fmuls
fdivl
test
xor
out
pushf
jae
xchg
aad
out
cmc
or
push
loope
push
push
add
into
arpl
movl
not
cmp
jnp
lcall
xchg
ljmp
repnz
enter
aam
xchg
sbb
add
jmp
xorb
test
loope
sbb
sbb
in
subl
inc
cmp
nop
aas
lods
mulb
into
sub
sahf
jmp
pushl
push
push
sar
lods
inc
mov
sbb
loope
nop
push
pop
imul
mov
or
movsb
or
imul
nop
mov
xor
push
and
inc
scas
nop
in
cmc
popa
lds
jecxz
pop
push
aam
sbbb
push
js
aas
mov
jg
jg
sbb
adc
icebp
pop
push
pop
lock
int3
jecxz
bound
insb
stc
mov
lds
jbe
pop
and
and
popa
sbb
clc
inc
or
add
pushf
push
pushf
sbb
sbb
loopnew
nop
fisubs
pop
pop
mov
cmpsl
pop
scas
repnz
rorl
iret
xor
lods
add
les
movhps
mov
std
and
out
push
insl
xor
sbb
mov
add
ss
add
push
jle
mov
enter
sub
in
cmp
sahf
jecxz
in
jecxz
test
mov
cltd
cmp
nop
push
jecxz
sub
xchg
cli
xor
xor
shl
test
and
sub
data16
add
adc
cmp
push
push
fisubl
push
push
adc
cmp
mov
lock
lret
jne,pt
fists
inc
inc
pop
stc
es
dec
frstor
jbe
repz
sub
sub
data16
inc
mov
ret
mov
adc
inc
sub
mov
notb
lods
mov
setle
mov
push
dec
add
xchg
sub
outsl
aam
out
rclb
xchg
das
and
mov
cmpsb
fs
mov
das
sbb
sbb
out
add
inc
rcr
repnz
sub
sub
adc
imul
in
dec
mov
xlat
call
cmp
push
inc
bswap
jecxz
gs
add
rcrb
fcoms
es
lcall
shll
mov
lock
icebp
dec
aam
out
mov
dec
scas
jno
xor
sbb
icebp
lcall
xchg
add
add
dec
mov
fs
jns
mov
push
in
test
stos
mov
and
popa
mov
push
sbbb
int3
addr16
push
jp
mov
in
mov
orl
shll
test
inc
in
loopne
addr16
popf
dec
xor
addb
sub
idivb
and
subl
cmp
leave
out
mov
testb
pop
push
mov
outsb
add
fcoml
cmp
and
add
push
mov
jne
repz
movsb
das
scas
cld
outsb
clc
cmp
mov
pusha
mov
insl
rorl
inc
cmp
sub
xchg
out
pushf
into
and
aad
outsb
dec
sub
ret
jae
pop
lcall
leave
addr16
xchg
add
push
out
mov
add
mov
aaa
push
movsb
lods
xchg
or
clc
test
adc
int
push
xor
and
xor
popa
pop
add
sub
xorl
inc
arpl
aam
test
mov
jb
cmp
add
cld
sub
fstps
dec
sub
jecxz
inc
fwait
mov
leave
adc
inc
cmp
xor
xchg
mov
sub
jo
dec
popa
adc
pop
repz
inc
sar
mov
mov
lds
test
in
xor
xor
sbb
mov
adc
xor
xchg
xchg
repz
push
notl
sbb
lds
dec
stos
popa
pop
fcomps
fisubrs
ss
daa
cmp
jp
loopne
mov
adc
jmp
xor
ret
mov
pop
xchg
inc
push
fdivl
ficoml
movsb
jbe
sbb
jbe
cmpsl
xchg
je
push
dec
test
push
push
jge
fiadds
push
push
adc
inc
enter
stc
xor
sub
insl
and
cmc
sbb
or
push
cmp
xor
sbb
dec
inc
ficomps
and
inc
das
mov
mov
mov
filds
pop
ret
out
push
lock
roll
mov
subb
cmp
cmp
adc
xchg
xchg
stos
arpl
daa
scas
mov
push
movsb
into
inc
sub
cmpsl
arpl
pop
repz
cmp
dec
mov
outsb
cltd
adc
fnstcw
jg
xor
xchg
sti
xchg
imul
push
lock
pop
or
pop
pop
cmp
cld
add
mov
or
pop
sub
mov
es
lods
lds
das
jle
xchg
pop
imul
pop
lfs
xchg
pushf
mov
cmpl
push
out
insb
sub
sub
cli
mov
clc
adc
out
int3
pop
adc
fs
jecxz
faddl
ja
sbbl
int3
icebp
dec
pop
int3
in
adc
sub
in
or
andl
jmp
out
sub
lahf
adc
xchg
jno
sti
movsb
sub
pop
sub
pop
or
sarl
addr16
and
sub
xchg
cmpl
rclb
xlat
sbb
push
imul
out
or
stc
pop
int
pop
pop
in
adc
mov
ret
mov
xchg
adc
call
cmp
ror
in
fsubrl
xchg
push
iret
and
mov
ja
xor
test
test
rclb
hlt
ficomps
ret
aad
insl
pop
push
mov
out
add
in
or
push
decb
out
mov
into
or
outsl
pop
int
movsl
mov
jle
mov
and
in
sbb
shlb
push
jle
inc
test
sub
or
mov
xchg
insl
sahf
clc
popa
adc
lea
xor
push
pop
xor
cmp
bound
gs
divb
xchg
adc
movsb
push
pop
cmp
dec
in
mov
xchg
out
or
aad
adc
cwtl
mov
leave
inc
xchg
hlt
mov
scas
push
pop
and
lods
pop
and
fisubrl
push
xchg
bound
fcoms
sub
test
jmp
push
pop
add
xchg
repnz
ret
and
je
test
inc
jb
pop
outsl
mov
or
mov
jge
pusha
or
dec
lret
xchg
shlb
mov
cli
cwtl
jp
push
adc
dec
mov
cltd
sub
je
iret
int3
dec
sub
cltd
repz
and
push
addr16
divl
ja
out
xchg
call
inc
fmuls
add
loope
cld
cmpsb
aas
into
out
into
pop
cs
fstps
sti
mov
xlat
cmpsl
or
fwait
scas
notl
test
lahf
lods
cmp
jmp
xchg
pop
pop
mov
lcall
in
mov
cmp
test
dec
xor
shll
movsl
jg
lock
rcrb
sub
out
sub
adc
ret
sub
xchg
lahf
mov
mov
xchg
ror
mov
repz
cmpsb
mov
int
and
gs
mov
jb
push
pop
mov
ss
ss
xor
fsubl
outsb
xchg
push
ljmp
fs
jl
inc
sub
insb
loope
xlat
in
and
in
ss
xchg
call
adc
lods
or
popf
or
pop
push
mov
imul
leave
xor
scas
in
pop
test
ret
push
aas
push
lcall
hlt
dec
pop
das
fsubl
divl
mov
adc
mov
out
test
add
das
cmp
mov
mov
ror
or
aad
fdivs
xchg
xor
jo
push
cmpsl
push
sub
lcall
sub
pushf
cmp
arpl
sar
shlb
outsb
insb
fsts
mov
adc
dec
cs
pop
pop
stos
adc
fldlg2
sub
pushf
add
loope
fsub
popf
cltd
mov
xorl
jo
inc
jae
insb
or
out
sbb
inc
shll
xchg
push
pop
pop
xchg
lahf
xchg
mov
sti
test
icebp
mov
push
movl
leave
dec
fists
xor
add
lahf
ja
inc
loop
loopne
xchg
mov
add
xchg
imul
addl
loope
pop
aad
add
scas
sahf
fdivs
fcmove
sahf
jae
aas
sub
aaa
andps
fstps
fidivrs
xchg
sbb
add
xor
ss
adc
mov
cltd
push
inc
pusha
mov
stos
pop
push
fstpt
or
push
push
dec
repz
dec
mov
xchg
or
jnp
scas
ljmp
lods
adc
nop
jle
in
ret
lock
xchg
cmp
push
push
adc
xchg
sbbb
cmc
mov
cmc
xchg
jne
ret
sbb
sbb
sub
push
pop
fs
test
addr16
and
pop
xchg
std
stos
xorb
ja
adc
xor
aad
shr
ja
fucomp
sbb
push
dec
jmp
xchg
sub
in
fadds
push
ds
mov
movsb
int3
fldl
je
imul
shl
je
clc
and
stc
adc
hlt
into
fs
bound
icebp
xorb
lds
inc
test
pop
andl
pushf
sbbl
fnsave
sub
pop
dec
call
dec
xchg
in
in
dec
cmpsb
and
sbb
out
xchg
xor
in
mov
and
mulb
jae
jnp
cmpsb
in
in
adc
sti
ror
dec
rcl
adc
add
outsl
clc
or
add
mov
inc
sub
xchg
rcrb
cmp
mov
xchg
sbb
push
and
dec
xchg
lock
xchg
cmp
xchg
hlt
orl
jg
fcoms
fstpt
mov
pop
jns
test
rcrl
inc
xchg
lret
jo
cmp
lods
lret
leave
icebp
pop
push
adc
push
add
pop
into
sbb
xchg
fisttpll
or
sbb
addr16
movsl
mov
sarl
les
ja
push
jns
push
fildll
lock
xor
mov
bound
testl
je
stc
adc
cmp
fisubrl
sbb
fsubrs
cmp
fcompl
mov
jno
sahf
sahf
aam
les
shlb
mov
jmp
add
and
fwait
mov
push
sti
repnz
cmp
in
pop
cmpsb
xchg
sub
add
sbb
out
iret
mov
xor
enter
sbb
outsl
xor
shrb
imul
xchg
cwtl
mov
ror
into
cmp
dec
shll
stos
sbb
scas
sahf
xor
test
xchg
add
out
adc
mov
outsb
adc
adc
ja
aas
aaa
std
pop
call
cltd
cmp
xchg
mov
out
mov
ret
and
shl
imul
sbb
insb
push
das
test
push
mov
jmp
and
test
push
rolb
nop
cld
fsubl
lahf
adcb
test
xchg
jae
rcrl
jne
ss
andl
inc
xor
and
xchg
xor
enter
into
sub
into
xor
test
and
cltd
rcl
dec
movsb
ss
cmp
lods
push
sti
xor
and
mov
test
loope
fcoml
fdivrs
sub
pop
adc
out
add
mov
dec
lret
les
xor
push
call
cs
or
mov
or
daa
add
mov
das
ficoms
repz
mov
imul
les
or
xorb
or
arpl
movsb
in
jecxz
out
push
xlat
push
sbb
aaa
mov
or
push
fwait
dec
pusha
mov
stos
cmp
mov
fimuls
xor
jle
daa
out
pop
imul
add
cmp
enter
int
push
jb
sub
stos
mov
sbb
pop
add
cld
test
mov
loopne
nop
or
loopne
or
push
loope
mov
push
pop
repz
jno
popa
popf
xor
jb
ds
scas
jo
inc
xor
cltd
pop
lea
push
mov
test
mov
xchg
lods
ljmp
pop
jno
scas
gs
push
mov
xchg
push
dec
cmpsl
addr16
andb
xchg
lret
add
sbb
dec
pop
aas
add
add
lcall
push
inc
inc
in
mov
stos
repz
and
enter
sub
outsb
aam
sbb
jle
ljmp
pop
jne
pop
jns
xor
mov
push
inc
sahf
icebp
outsl
ja
cmp
fcomip
testl
jo
aad
jge
jle
inc
add
mov
std
push
pop
daa
enter
add
vmread
or
or
xor
sub
mov
rolb
push
inc
cmp
jbe
imul
lock
jecxz
imul
ja
or
scas
and
out
iret
ret
adc
mov
jbe
mov
shl
dec
shlb
jle
sub
push
xor
xchg
adc
ret
dec
sti
adcb
into
inc
jo
push
ret
pop
fsubrl
cmp
addr16
mov
jnp
push
add
pop
jle
mov
adc
add
int3
lcall
adc
and
lret
or
test
fistps
stc
mov
cli
mov
sub
xor
adc
bnd
jge
jno
popa
or
pop
pop
mov
mov
cmpsl
and
adcb
mov
pop
xlat
xor
movsl
or
jp
inc
test
or
es
dec
push
negb
pop
xchg
inc
push
xacquire
imulb
stos
dec
xchg
mov
and
test
lods
das
fiadds
les
fisubrl
xchg
mov
nop
mov
pop
mov
sbb
test
es
pusha
xchg
lea
jl
fiadds
cs
movsb
cmp
or
shrb
xchg
adc
pusha
jmp
incl
das
imul
ret
add
fisubrs
pushf
bndldx
add
xor
mov
sub
inc
push
cmp
aad
shr
jge
xor
dec
orl
scas
addr16
imul
sbb
xchg
sbb
mulb
or
scas
pop
sbb
lea
jmp
out
lcall
lods
cmpsl
xchg
ret
and
inc
outsl
and
fdivr
pop
jae
cmp
inc
subl
pop
xchg
arpl
pop
cmp
stc
pop
cmp
cmp
xor
or
sbb
push
ja
mov
sub
and
xchg
and
das
scas
push
xchg
test
test
adc
xor
in
out
adcb
adcb
and
cmp
mov
push
js
frstor
insb
in
lcall
scas
iret
xchg
push
mov
mov
sub
adc
mov
inc
sarl
fdivrl
jp
jle
or
and
icebp
in
hlt
inc
or
lock
lcall
aam
out
cltd
sbb
stos
movsb
sbb
sub
jbe
xchg
push
xchg
movsb
add
add
leave
jmp
adc
cmpsl
mov
push
lret
mov
mov
pop
aaa
sbb
xchg
adc
and
add
jge
mov
jbe
dec
adc
pop
xchg
add
or
mov
inc
popa
lcall
int3
jp
add
fistpll
adc
add
xor
scas
adc
popf
test
xchg
sbb
iret
divl
pop
jo
stos
dec
popa
or
mov
icebp
pop
dec
sbb
hlt
pop
xchg
mov
ficompl
and
stos
test
int3
pusha
int3
pusha
push
mov
mov
adcb
push
pop
push
inc
je
mov
popa
movsl
xlat
iret
adc
je
pop
cmp
andl
pop
pushf
push
push
pop
add
xchg
arpl
leave
xor
xor
aad
out
pop
jge
lock
test
mov
adc
testb
aas
push
clc
mov
pop
es
into
push
icebp
mov
lcall
push
mov
in
xchg
rcrb
scas
nop
inc
or
dec
imul
xor
cmp
dec
sub
ss
shlb
leave
arpl
cs
push
imul
push
mov
adc
xorb
adc
scas
loopne
mov
jb
add
jecxz
nop
out
mov
les
fcomps
dec
movsl
jmp
xor
ret
fadds
mov
push
inc
scas
test
cmp
pusha
pop
inc
mov
xchg
popf
enter
cwtl
adc
inc
test
mov
cwtl
jp
push
aad
loop
icebp
pop
xchg
and
in
es
mov
movsl
pop
loope
or
add
js
bound
xor
enter
lea
jecxz
mov
jae
lret
add
pop
in
out
fcmovnb
adc
mov
sub
add
movsb
push
test
out
sti
xchg
xchg
xchg
pop
inc
ja
and
and
sub
andl
jnp
push
jnp
cmp
fnstcw
repz
push
sbb
inc
mov
jg
adc
xchg
dec
hlt
test
dec
inc
jmp
cmp
xor
sbb
popa
xor
sarl
dec
fistl
es
repz
sahf
aas
push
add
negb
gs
sarl
test
outsb
movsl
jb
pop
fwait
test
dec
inc
push
adc
mov
or
sbb
call
inc
add
cmpsl
mov
add
sbb
nop
andb
std
popa
movsb
inc
int3
sub
mov
call
xchg
cld
mov
out
jbe
int
mov
in
mov
add
aam
notb
jo
inc
lds
dec
aaa
dec
bound
les
push
cs
repz
mov
sbb
jp
or
and
enter
int3
sahf
xchg
mov
in
dec
sub
xor
push
and
aad
aam
mov
stc
mov
call
mov
pop
fwait
push
jae
mov
sub
pushf
and
lea
jb
out
pop
andl
mov
cmp
add
jp
jns
adc
xchg
inc
cmpb
lcall
inc
std
repz
sarl
fisubrl
mov
inc
mov
push
mov
nop
push
inc
jge
dec
popf
lahf
out
shrb
push
mov
mov
movsl
pop
inc
js
or
or
xorl
out
cld
xlat
mov
mov
cmc
rolb
xor
push
test
cmp
lods
add
pop
cmp
mov
xor
out
adc
aas
dec
mov
addr16
push
inc
fwait
push
rcl
or
xor
ds
xacquire
int
movlps
jns
inc
aad
jo
xor
mov
ss
outsb
xor
sbb
mov
push
ds
sub
shlb
sbb
dec
cmp
jne
clc
jno
iret
repz
pusha
mov
sub
addr16
and
and
mov
adc
adc
mov
pop
xchg
or
xchg
ret
inc
push
cltd
mov
cmp
inc
mov
mov
insl
stos
or
and
dec
mov
popa
sbbb
and
loop
jae
mov
leave
mov
cmp
les
popf
jg
sahf
sub
rcrb
cmp
and
push
mov
fldenv
add
push
imul
sbb
and
test
cltd
shll
add
and
and
lods
xor
cmp
and
clc
pop
pop
push
icebp
cltd
pop
lcall
push
test
pop
jecxz
mov
and
sbb
inc
mov
loop
or
lcall
xchg
ljmp
or
jmp
mov
and
js
mov
sbb
pop
pop
cmp
mov
int
xor
mov
mov
shrb
dec
in
mov
scas
push
fsub
pusha
mov
inc
gs
inc
iret
subl
ret
scas
and
add
ja
stos
mov
mov
push
or
ret
nop
fwait
fs
dec
decl
or
push
mov
push
sbb
sub
inc
adc
jg
out
push
imul
adc
and
xchg
jno
dec
js
cwtl
movsl
add
cmp
dec
cmp
sub
and
rep
pop
pop
leave
stos
cli
cmc
shr
add
pop
push
shl
ds
sub
test
rcr
aad
jns
mov
ss
mov
cmpsl
dec
leave
cld
fcom
push
dec
adc
add
ss
mov
jg
dec
popf
sarl
jecxz
mov
fsts
repnz
push
push
pop
sub
mov
mov
dec
jle
sub
push
fistl
push
jo
mov
pop
push
jge
out
push
outsb
repnz
jp
fwait
xchg
inc
push
hlt
movsb
add
inc
xor
scas
push
jnp
inc
lods
or
jmp
adc
dec
in
or
xchg
cli
mov
les
fbstp
shr
xchg
leave
mov
pop
cmp
pop
jb
jecxz
sahf
or
cmpsb
movsb
sub
stc
jge
aaa
mov
out
jb
testl
add
stos
xor
iret
xchg
out
add
cli
mov
xchg
fldt
decl
dec
lret
cmp
push
cltd
pop
cli
jae
dec
push
fs
jae
sub
aam
ds
js
fstl
xor
dec
jno
jmp
mov
lds
sti
fprem
inc
shrb
ret
mov
mov
add
fnstcw
dec
incl
test
xor
inc
and
inc
subb
out
outsl
mov
pop
xchg
insb
lock
sahf
sbb
adc
rorl
adc
rol
or
or
icebp
rorb
push
mov
mov
and
or
push
jns
rorl
sub
pusha
adc
push
pop
jns
sub
shrb
mov
loop
mov
loope
outsl
mov
mov
idivb
aaa
sub
popa
sbb
and
cmp
or
int3
sub
sbb
adc
xor
jp
xor
pusha
and
dec
mov
pop
leave
or
sti
add
stc
fidivrl
test
out
xor
xchg
push
xchg
xchg
jo
mov
pop
arpl
add
dec
sub
sub
mov
mov
inc
dec
ret
adc
or
cmp
push
add
shr
xchg
lds
and
out
sbb
pop
mov
shl
sub
test
ret
ja
cmpsb
ds
mov
inc
xlat
or
movsl
repnz
inc
cmp
add
loop
insb
out
inc
jno
add
push
sub
dec
sbb
xlat
hlt
and
adc
out
lret
add
or
scas
sub
pop
sahf
mov
lock
les
int3
loope
cmpsb
aaa
mov
movsl
xor
and
outsl
ss
push
mov
ret
mov
jns
mov
or
push
enter
pop
adc
repz
mov
mov
ret
inc
rorl
xor
es
repz
int
mov
scas
mov
mov
xlat
repz
rorl
pop
bound
and
aam
loopne
and
mov
ja
jnp
outsl
sbb
data16
sub
sub
add
stc
roll
in
cwtl
mov
or
xchg
arpl
gs
xchg
mov
imul
imul
lret
jo
mov
dec
or
push
pop
popa
xor
lock
jp
xchg
insb
bound
repnz
test
cmpsl
call
sbb
sarl
inc
mov
rorl
insl
test
push
cmp
and
out
pop
push
mov
in
inc
je
stos
int3
mov
pop
pop
xchg
xor
arpl
out
cmp
lcall
out
lods
jg
and
loope
push
popa
shrl
sbb
cmpsb
out
loope
rcrb
add
setne
inc
dec
stos
push
pusha
decl
mov
xchg
mov
imul
dec
mov
lret
out
stc
fcompl
movsb
mov
adc
lock
rcl
sahf
rcrl
adc
shrb
adc
in
nop
cmp
push
out
stos
mov
mov
adc
add
inc
test
jmp
test
xor
or
enter
cmp
jns
cmp
jmp
pop
xchg
dec
loopne
xchg
arpl
add
xor
jb
dec
jno
aad
xchg
pop
movsl
addl
adc
adc
mov
mov
test
mov
push
ret
loopne
or
repnz
test
dec
dec
mov
dec
fimull
iret
repz
push
pop
inc
wrmsr
mov
ficompl
cmpsb
fsubs
fdiv
push
xor
xchg
decb
pop
xchg
popf
in
inc
idivb
sub
movsb
or
lcall
pop
fwait
notl
insb
adc
cmp
pop
cmp
and
push
ret
out
aam
out
mov
out
mov
scas
pop
ja
movsb
negl
in
icebp
stc
xor
stos
xchg
aas
negb
adc
jl
jp
sbb
mov
xchg
add
push
sbb
add
xchg
sub
inc
lret
jnp
test
adc
jmp
sub
sbb
push
and
cwtl
ss
rol
mov
addl
fldl
or
lods
jmp
lods
xor
adc
cmpsb
pop
movsb
cmc
scas
mov
mov
test
scas
jg
ret
shll
mov
add
fists
jne
inc
jnp
fnsave
ss
and
jo
pop
les
test
mov
movsl
sti
in
pop
lret
push
lds
pusha
divb
aam
jns
xor
push
sbb
rolb
xor
pavgw
mov
or
jno
pushf
mov
jge
xchg
leave
xchg
int
jo
adc
sbb
ret
pop
jo
into
xor
xor
mov
push
push
mov
and
pop
mov
int
mov
outsb
js
sub
nop
in
pop
fldenv
xchg
scas
xor
sub
pushl
sub
adc
mov
bt
mov
call
jle
push
fldl
cli
frstor
jmp
cmpsb
sub
daa
sbb
xor
jb
lcall
ljmp
fwait
and
mov
lods
inc
adc
jae
sub
xchg
inc
or
cmpsb
cmpsl
sub
cmc
push
dec
lahf
insl
adc
in
dec
sti
mov
and
jecxz
nop
adc
in
call
mov
push
cmp
das
xor
mov
pop
mov
and
cmp
insl
push
cwtl
jnp
xchg
cmp
idivl
mov
int3
scas
mov
rcrl
cltd
add
nop
sahf
stos
je
push
cwtl
sbb
subb
xor
sbbb
jp
rcll
xchg
xchg
xor
fdiv
pop
jns
xchg
out
and
push
into
outsl
notb
insb
cs
stc
fmuls
or
lods
hlt
dec
or
cmc
xchg
jp
or
push
sub
test
xchg
push
add
imul
outsb
adc
mov
add
cmp
insl
xor
xchg
dec
sub
dec
jle
fsubl
out
in
sahf
add
sbbb
and
test
mov
fnstenv
pop
daa
push
inc
dec
pop
jge
outsl
js
or
jne
scas
rolb
adc
xchg
incb
or
outsb
leave
sbb
push
imul
xor
shrl
cmp
loope
repz
dec
gs
inc
cli
in
imul
mov
fadd
mov
shr
frstor
pop
movsl
jae
cli
rorl
push
stc
fwait
adc
jb
mov
stos
xor
cmpsl
cmc
and
dec
adc
loop
sbb
out
xor
sbb
mov
adc
cmp
dec
sub
xchg
mov
dec
mov
mov
and
or
out
cwtl
sub
xchg
inc
cwtl
arpl
movsl
pop
pop
jae
cmp
push
add
roll
mov
push
popa
outsb
imul
mov
arpl
and
ljmp
sub
xor
cmc
jge
inc
in
aad
imul
daa
in
mov
dec
gs
in
addr16
add
xchg
ret
add
cmp
xorb
das
add
call
mov
xor
add
push
pop
dec
push
data16
mov
addr16
lahf
lcall
push
movsl
mov
fisttps
mov
mov
aas
inc
or
push
push
movsl
inc
cmpsl
out
mov
call
pop
cli
mov
dec
call
pop
imul
sbb
enter
sbb
in
xchg
adc
adc
stos
dec
orb
addr16
test
mov
lahf
ret
xchg
data16
insl
movl
mov
cwtl
or
dec
test
ret
dec
out
testl
xchg
fwait
push
ss
aam
int
frstor
cmpsb
xchg
loope
pop
test
shr
imul
pop
mov
test
pop
enter
dec
pop
xlat
pop
push
cmp
pushf
xchg
or
or
sub
aaa
subb
inc
xor
repz
lahf
loopne
sub
in
adc
fs
xchg
jle
lds
pop
sub
pop
lret
xlat
jmp
mov
mov
scas
jp
cmpsl
xchg
scas
call
bound
xor
mov
mov
aam
push
hlt
lods
xor
sub
xchg
je
xor
pop
and
sbb
xlat
cmp
xchg
jo
cltd
inc
push
dec
popa
xchg
fwait
cmpsl
popf
xor
lock
jmp
xchg
std
loope
push
adc
add
ds
addr16
mov
stc
test
fisubs
add
push
add
aaa
bound
jb
adc
jb
mov
mov
xchg
daa
int
jmp
mov
sar
push
or
sbb
mov
adc
ja
int3
mov
adc
leave
lcall
pop
mov
neg
jnp
inc
fwait
pop
rcr
aas
push
into
out
les
incl
hlt
pushw
enter
lods
test
addl
adc
fwait
nop
pop
cmpsb
arpl
fcomip
std
jbe
or
sbb
jae
dec
int
mov
mov
sbb
cmpsl
sarb
es
rcrl
shr
jae
ja
sbb
fsubp
popa
dec
inc
xchg
or
sub
push
arpl
dec
push
cltd
sbb
pop
and
mov
adc
addr16
jge
int
rcll
scas
ret
inc
sbb
lcall
sbb
pop
loop
adc
out
mov
mov
sbb
jno
mov
cli
scas
aaa
test
mov
and
int3
fwait
sahf
out
or
add
loope
mov
inc
int3
divb
fstl
xchg
pop
and
rcrb
lahf
mov
and
sub
mov
xchg
cmpb
es
or
pop
sub
jo
roll
fucomi
data16
pop
mov
push
imul
fadd
pop
clc
mov
loope
shrb
mov
scas
mov
sbb
mov
or
adc
ljmp
movsl
fwait
lock
lret
mov
adc
mov
sbb
fwait
pop
jb
ja
fwait
adc
es
lcall
ret
mov
jg
mov
ret
jns
out
adc
mov
sub
nop
stos
cld
mov
cwtl
fists
sbb
push
xchg
out
jne
cmpsb
inc
mov
imul
mov
pop
jmp
clc
jp
fstpt
lock
or
lods
in
and
rclb
aas
andl
into
jae
cmp
fbstp
call
sub
jae
fstp
pop
mov
dec
lods
hlt
mov
in
negl
movsl
xor
daa
jle
leave
mov
jbe
jbe
int
inc
xchg
sub
loopne
push
scas
outsl
jae
sti
mov
js,pt
iret
sbb
or
dec
int3
push
incb
sbb
jle
cld
cmp
push
shlb
cmp
lods
push
data16
adc
mov
shl
mov
icebp
call
fisubrs
sbb
push
mov
xorl
fwait
jne
jb
mov
cwtl
jo
dec
or
pop
pop
fwait
dec
xor
push
outsb
test
movsl
mov
daa
in
dec
cmpsb
mov
stc
fwait
arpl
sbb
xor
mov
shrb
insb
xor
negb
jne
jle
aam
out
loop
adc
push
jnp
jne
mov
insl
lea
push
js
xlat
sbb
cmpsl
enter
repnz
cmpsb
cltd
test
cmp
or
fs
xlat
repnz
cmp
jno
fsubl
sti
cwtl
jnp
icebp
repz
loope
add
dec
fsubrs
mov
test
inc
dec
pop
push
sti
jge
dec
cmpsb
sbb
pop
dec
push
add
imull
jl
dec
inc
inc
and
push
rcrl
xchg
cld
pop
je
add
out
cmp
fists
or
mov
into
std
ret
fs
xlat
out
out
cmp
fistps
xchg
dec
stc
sbb
push
ljmp
xlat
dec
jp
popa
mov
lret
movb
and
mov
mov
icebp
mov
sbb
and
aas
jge
ficoml
aad
ljmp
or
stos
arpl
mov
pusha
and
push
mov
movsb
hlt
mov
or
andb
sub
mov
jno
in
rolb
adc
push
jp,pn
loope
add
sub
test
out
pop
or
dec
out
roll
pusha
int3
cmp
dec
xchg
mov
inc
push
aam
sub
cmp
xor
shll
push
imul
lcall
mov
aas
push
and
decl
mov
push
add
sbb
repnz
jecxz
mov
pop
mov
adc
out
mov
and
mov
cmpsl
sarb
jnp
test
and
mov
cmp
adc
xor
cmpsl
mov
andl
xlat
cmp
mov
pushl
scas
loope
int
sub
inc
cmp
out
fidivl
cmpsl
shl
je
cmc
or
adc
lret
sarb
pop
pushf
cli
pusha
xchg
mov
sub
cmpsl
bnd
lods
xchg
outsl
leave
push
ljmp
call
jl
add
frstor
inc
loopne
mov
fistpl
imul
mov
shlb
aam
push
and
gs
cld
outsl
add
inc
jno
dec
jno
cmp
call
lock
repz
add
clc
mov
fiaddl
add
les
jmp
cmp
std
push
inc
insb
sahf
dec
or
icebp
pop
mov
shrb
pop
adc
mov
adc
dec
repz
cwtl
push
pop
cli
loop
adc
mov
lahf
sbb
fnstcw
push
mov
cmpl
loopne
outsl
les
scas
filds
xorb
scas
movsb
aas
cmp
add
insl
pop
in
jbe
or
aaa
pop
mov
in
loop
add
nop
mov
jmp
stos
ret
ja
and
jecxz
int3
mov
insl
sub
push
adc
clc
push
mov
cmp
mov
enter
push
mov
test
inc
dec
cltd
nop
vorps
lods
sub
or
in
mov
jbe
mov
loope
movsl
cmpsl
into
push
add
in
add
out
push
xor
iret
sbbb
jmp
or
dec
inc
inc
cmp
test
cmp
mov
mov
sbb
pushf
pop
ja
dec
cmpsl
mov
movsb
push
pop
bnd
adc
mov
push
lods
movsb
jnp
adc
jae
and
ja
fstp
mov
ret
dec
add
imulb
icebp
imul
push
inc
fisubl
mov
ret
xchg
ret
cmp
sbb
std
push
sbb
pop
mov
ljmp
sbbl
pop
cmp
sbb
shll
das
pop
fisubrs
mov
and
shrb
into
push
cmp
into
imul
push
xor
rorb
sub
imul
in
push
jg
popf
pop
sub
fcmovu
xor
mov
jecxz
xchg
cltd
xlat
loopne
and
mov
jecxz
out
clc
add
das
shrl
cmpb
xchg
enter
pop
les
out
dec
jecxz
push
lret
or
adc
lahf
loop
inc
inc
outsl
mov
vmulsd
inc
push
mov
sub
addr16
jbe
idivw
in
push
mov
shrb
inc
scas
orl
fsts
or
push
cmp
xchg
ret
xor
sahf
and
test
mov
cli
mov
inc
adc
or
out
and
jle
add
shl
pop
scas
inc
mulb
mov
push
sbb
icebp
xor
jg
lods
xchg
loope
mov
lods
dec
cmp
imul
aam
and
jns
stos
and
daa
mov
inc
mov
sti
insb
lock
mov
mov
push
ret
cmp
shl
ljmp
sbb
adc
outsb
data16
pop
imul
out
ret
sbb
push
xchg
lret
cli
sbb
rcll
fsub
push
push
test
dec
ss
pop
popa
in
sub
add
jbe
aam
lahf
mov
out
jnp
inc
imul
js
pop
inc
sbb
into
xchg
faddl
push
sub
ret
jns
imul
and
bound
daa
dec
aam
xchg
pop
xchg
repnz
and
test
adc
mov
mov
jecxz
inc
pop
xor
xchg
sarl
insl
sar
dec
ret
mov
adc
push
mov
pcmpeqw
inc
je
in
movsl
mov
imul
in
jg
push
enter
stc
add
stc
add
mov
call
mov
mov
and
fs
xchg
shrl
and
test
pop
mov
sbb
inc
mov
ss
cmp
in
sarl
lods
jl
adc
pop
stos
push
fcompl
push
fnstsw
xor
pop
cmc
fldt
inc
sub
or
into
add
mov
push
movsb
and
jmp
enter
or
mov
mov
adc
out
dec
jne
scas
sub
inc
pushf
wbinvd
mov
xor
daa
test
adc
repz
andl
es
fs
jbe
adc
ljmp
jb
loope
mov
jb
xchg
dec
ret
sbb
aaa
dec
sub
pop
push
pusha
jae
je
daa
lret
repz
adc
icebp
mov
mov
imul
cmpl
inc
enter
sub
orb
inc
test
outsl
out
inc
lds
in
fs
lods
stc
sbb
cmpsl
push
adc
insl
mov
pop
push
mov
pop
loop
and
xchg
pop
sbb
adc
push
mov
js
mov
pop
clc
fcompl
xor
aas
inc
repz
mov
mov
mov
call
dec
in
pop
and
xor
imul
mov
and
insl
adc
inc
loopew
jo
lret
mov
adc
fdivr
fisttps
cmpsb
or
and
jns
aad
dec
fisubs
push
andl
cmpsl
and
and
cs
cwtl
cli
jo
push
sub
xchg
into
adc
es
adc
scas
loop
mov
lret
or
mov
and
dec
pop
mov
shl
fistpll
xor
mov
out
dec
inc
mov
jge
fcoml
jb
mov
xorb
insb
js
fcmovne
sahf
jp
sbb
outsl
or
out
fsubrl
pop
sub
cmp
sub
xor
movsb
and
add
xor
imul
jne
divl
in
adc
add
fs
cmp
or
repz
call
mov
sbb
daa
nop
cltd
pushf
mov
sub
xlat
sbb
into
iret
insb
cmc
adc
mov
or
les
cmp
fcompl
fs
jmp
pop
cmp
mov
lds
lcall
aaa
xor
pop
pop
inc
stos
bound
mov
xchg
scas
lcall
push
cmpsl
jmp
and
orl
pop
or
jb
mov
fldcw
mov
sbb
and
push
scas
data16
dec
loopne
and
sbb
cli
sub
cwtl
dec
dec
test
sarl
fs
pop
cld
stos
gs
in
mov
mov
mov
add
pop
jbe
jp
insb
out
mov
jbe,pt
repz
das
outsb
aam
or
cmp
xchg
int3
mov
idivb
adc
dec
inc
and
and
push
xor
inc
add
mov
mov
add
movsb
and
push
cmp
fnsetpm(287
sub
mov
imul
cmpsb
movsl
jbe
jecxz
sbb
xchg
in
aas
rclb
pop
push
ficompl
insb
xor
push
incl
rol
push
lret
test
inc
maskmovq
negl
push
and
mov
jle
fdivs
sub
outsb
jle
lcall
sbb
or
push
outsb
pop
pop
or
jae
or
xchg
mov
cmp
sbb
rolb
insl
sbb
notb
pop
mov
in
jns
sti
pop
js
add
and
push
lret
dec
aam
clc
dec
daa
cmc
pop
pop
push
rorb
rep
sbb
aad
pop
sbbb
xlat
mov
xchg
pop
jge
mov
adc
cmpsb
incb
jmp
xchg
pop
aaa
xor
mov
inc
mov
inc
andl
inc
or
pop
pop
dec
push
fucom
jl
pop
jb
pop
test
mov
ffreep
jg
mov
test
lock
out
add
pop
vmread
movb
pusha
sahf
mov
sbb
xchg
insl
jle
test
in
inc
mov
aas
into
sbb
aad
adc
jns
mov
sti
fs
bound
xor
xor
leave
inc
mov
ror
sbb
stc
movsl
insb
pushf
or
mov
mov
mov
xchg
out
stc
adc
push
jl
mov
push
xchg
fistpll
or
lret
mov
add
mov
add
cmpsb
bound
or
xchg
lods
gs
sti
jne
sbb
push
js
add
lods
lcall
pop
mov
sbb
dec
cmp
dec
mov
sbb
xchg
push
mov
inc
pop
cmp
movsb
ss
leave
call
and
addr16
outsl
ficoms
and
pshufw
cltd
jno
lea
out
and
div
sbb
mov
or
adc
push
call
jae
icebp
dec
mov
and
sbb
mov
mov
mov
hlt
cmp
or
and
loop
js
rclb
jle
lds
bound
popa
or
mov
xchg
mov
stos
mov
inc
mov
sbb
cmp
push
outsb
call
enter
cmp
loope
push
cmp
adc
and
and
dec
jns,pn
repnz
sub
out
pop
pop
xchg
dec
xor
dec
mov
movsb
in
call
mov
push
call
xor
mov
dec
out
or
int
lods
stos
jle
or
out
mov
outsl
dec
or
outsb
inc
xor
push
lods
mov
mov
scas
pop
sbb
es
dec
pavgb
movsb
in
adc
repz
sbb
mov
pop
sub
je
dec
test
pop
xchg
andb
in
xchg
jnp
fistpl
pop
and
cld
enter
repnz
cmp
hlt
leave
fistl
daa
dec
jecxz
mov
or
add
cld
into
mov
in
lcall
dec
out
mov
mov
push
and
push
xor
lret
adc
pop
loopne
mov
push
cli
addb
cmc
stos
mov
mov
cmp
gs
mov
push
in
mov
mov
pop
pop
jnp
pop
es
dec
mov
les
cs
test
aam
pop
cmpsl
cmpsb
push
icebp
adc
jae
mov
inc
aas
mov
sahf
cli
das
es
out
adc
and
sbb
xor
jl
lcall
call
insl
cmp
xchg
iret
in
cld
lret
sbb
or
pop
stc
mov
mov
scas
pop
pop
pop
sbb
adc
std
sbb
out
add
fisubrl
ljmp
sbb
or
pop
lret
fisubl
xchg
int3
xchg
lcall
int
mov
xor
test
sub
roll
dec
shrb
jo
push
xlat
jg
mov
mov
out
inc
movsb
js
les
pop
aad
aas
aas
aas
jl
jbe
jp
es
pop
adc
add
mov
or
mov
int
xlat
shll
adcl
jl
mov
faddl
ss
nop
mov
push
cltd
inc
pop
add
xchg
mov
jae
jb
add
xor
pop
add
aad
jae
mov
sub
pusha
adc
addb
imul
sbb
movsb
inc
dec
dec
dec
cmpsb
ret
jne
pop
lahf
aas
mov
pop
es
mov
sub
add
mov
scas
push
xor
or
xlat
ja
push
test
lahf
add
dec
jae
leave
cmp
lahf
push
lds
sub
js
or
ja
addr16
rclb
mov
xorb
or
imul
in
lods
test
xchg
mov
push
in
sub
in
dec
xor
mov
test
das
mov
mov
sub
movsb
loop
mov
daa
sub
jg
xchg
dec
mov
inc
adc
dec
fists
pop
pop
icebp
fisubl
push
cmp
xchg
push
ljmp
movsb
ds
cmp
rclb
and
sbb
jge
out
faddp
jno
add
outsl
cmp
xchg
sub
and
inc
icebp
jnp
cwtl
test
cwtl
mov
ja
fs
sbb
sub
push
push
inc
out
xchg
push
jge
mov
daa
inc
xchg
jl
mov
ficompl
andl
push
add
jecxz
push
push
pushf
popf
std
test
push
punpckhbw
dec
inc
addr16
lea
jmp
daa
cmp
orl
sti
jge
cmp
sbb
subb
flds
in
mov
shr
xchg
xchg
add
push
testb
addr16
mov
test
inc
sti
inc
je
aaa
addr16
lcall
roll
lock
mov
imulb
pop
xor
cmp
pop
inc
incb
icebp
test
cmp
addb
jle
mov
out
xor
es
mov
add
out
lods
dec
out
lahf
xor
out
dec
sub
rorb
push
xor
sub
pop
cmp
mov
mov
mov
loope
lcall
jmp
cmp
mov
nop
daa
fdivs
lret
inc
xor
lea
cs
pop
xchg
cmp
mov
lock
sub
popa
push
push
xchg
lods
jne
jecxz
pop
sub
repnz
pop
int
mov
sbb
std
dec
addr16
pop
xchg
sub
aas
stos
enter
mov
xchg
inc
jb
add
mov
xor
cltd
pop
dec
rcrl
mov
sbb
gs
cmpps
dec
push
inc
xchg
pop
rcr
mov
mov
arpl
addr16
fcoml
push
and
rcrb
and
icebp
shlb
leave
scas
lahf
fildl
sahf
pop
xor
outsl
xchg
into
movsb
push
mov
leave
mov
dec
shlb
testb
sbb
nop
arpl
lock
cmp
xor
jge
outsl
in
fsubrs
cmp
push
mov
or
mov
xchg
push
mov
cmc
outsb
xor
call
dec
add
out
dec
push
dec
movsb
mov
mov
rclb
or
ds
fs
dec
and
dec
iret
fsubr
pusha
mov
adc
in
imul
xor
push
btr
pop
sub
xchg
iret
jne
into
sub
std
mov
jg
cmp
in
sbb
lret
aaa
sbb
add
rcll
push
mov
repz
sti
sub
lock
jns
int3
or
adc
adc
cmp
pusha
mov
dec
aas
add
test
add
scas
fsts
add
mov
lods
mov
fs
dec
xchg
movsl
mov
xchg
scas
xor
xchg
xor
outsb
sub
add
pop
push
sbb
fisttpll
cmovne
in
fcmove
push
lcall
cmp
andb
and
xor
mov
jge
ficoml
pop
movsb
and
cmp
xchg
into
push
cltd
mov
mov
add
jb
jnp
jne
adc
sbb
test
les
dec
adc
fs
mov
inc
test
lcall
sbb
testl
hlt
dec
imul
out
data16
xor
mov
test
jp
inc
loop
jae
jns
cmp
push
adc
shrb
fistl
cld
push
and
lret
xlat
xor
rcl
sub
call
or
lret
fsubrl
mov
int
test
jns
dec
jnp
data16
insl
movsb
aaa
fsubrs
std
movsl
pcmpgtw
aad
and
movsb
mov
cli
mov
lods
iret
je
mov
roll
repz
leave
je
adc
pop
or
mov
loope
inc
icebp
dec
or
xchg
adc
push
or
sbb
jmp
sbb
jo
cmpsl
pop
inc
lcall
dec
fbld
popf
pop
xchg
cmp
or
fsts
lock
pop
push
sub
mov
ljmp
xchg
xlat
jo
push
add
jne
call
das
jo
adc
neg
lret
cmc
push
lds
xchg
pushl
and
aas
or
cli
or
aad
sbb
or
jne
fisubrl
in
inc
xchg
jle
xchg
out
jmp
leave
ljmp
adc
sarl
jp
repnz
sbb
in
and
dec
inc
push
pop
push
xchg
negl
clc
ds
mul
cwtl
fisubrs
pop
out
mov
imul
pop
js
sbbl
div
jbe
xchg
es
and
iret
fwait
ret
fidivl
loopne
fstpt
jne
mov
iret
cmp
sbb
add
jnp
mov
daa
arpl
ljmp
out
push
lea
dec
push
pop
outsb
push
lock
repnz
fs
dec
addr16
jle
test
mov
fsub
adc
pushf
nop
pop
je
mov
out
or
inc
cmp
xor
les
in
pop
mov
mov
jge
data16
cmp
inc
xor
roll
cwtl
xchg
fnstsw
add
mov
inc
sub
push
roll
decb
xor
mov
pop
rorb
pushf
push
fs
sbb
lds
jbe
mov
mov
mov
insl
and
mov
lahf
lods
loopne
push
xor
mov
inc
rcrb
inc
cmp
sub
push
das
xor
mov
sbb
sbb
ss
mov
add
adc
sbb
and
sub
pop
xchg
cli
test
not
in
lods
lret
rcl
mov
mov
sub
outsb
fcmovb
gs
fidivrs
ljmp
jb
mov
cmova
push
mov
sar
jo
repz
fnstcw
sub
xlat
fs
lock
pop
loopne
daa
shll
movsb
push
jb
pushf
rolb
std
inc
nop
dec
repz
test
mov
mov
out
imul
sub
jbe
idiv
dec
test
fldt
jl
or
adc
sbb
add
mov
arpl
int3
sbb
outsl
out
subl
pushf
and
mov
mov
je
add
xchg
dec
das
inc
mov
enter
cmpsl
jns
rcl
push
jns
adc
xor
fistpl
pop
int3
lcall
ret
sub
mov
and
mov
out
fcomps
shll
jbe
add
xor
sub
xchg
mov
mov
sub
and
xlat
mov
push
jmp
xchg
pop
jo
leave
shrb
cwtl
push
cld
stos
xchg
lods
sti
xor
int
push
pop
mov
adcb
pop
test
add
xchg
fmul
into
lods
and
inc
scas
adc
xchg
insb
out
popf
pop
xor
lcall
in
rclb
dec
push
sub
aad
gs
sub
movsl
add
mov
insb
lea
ja
and
in
movsb
jne
add
sbb
and
bound
repz
ret
sbb
mov
leave
mov
and
fnstcw
out
jnp
xchg
sbb
mov
sahf
dec
lods
das
leave
nop
in
pop
xchg
fildll
xchg
inc
mov
jg
jb
inc
or
mov
sarb
jl
mov
mov
pop
xor
inc
loopne
mov
lds
mov
fnstsw
pop
inc
adc
jl
jmp
xchg
int3
mov
bound
fisttpl
les
imul
cmp
sahf
jne
pusha
pushf
jo
aad
imul
jne
inc
mov
or
mov
inc
movsb
jns
pop
cld
mov
cwtl
adc
cmp
test
and
cld
dec
fisubs
mov
mov
pop
dec
fcmove
push
xor
jge
mov
push
pop
or
mov
pop
scas
gs
pop
dec
call
sti
sub
xor
in
cmpl
xorb
into
shlb
movsl
pop
mov
push
mov
or
mov
clc
mov
in
add
lahf
lahf
ret
test
inc
add
out
cld
push
mov
outsb
sbb
or
ja
ljmp
adc
pop
test
andb
leave
xorl
and
or
andb
fs
movsl
pop
pop
jge
das
adc
cmpsl
dec
adc
xchg
xchg
cmp
rorl
adc
xchg
out
jo
pushf
add
imul
sub
call
sahf
movsl
push
cmpsb
sub
push
jle
jl
leave
dec
sub
adc
outsl
out
fldt
inc
loopne
or
out
xchg
in
sbb
dec
or
imul
call
scas
fisttpll
movsl
call
arpl
lds
lock
scas
cmpsl
jo
adc
hlt
mov
cmpsl
imul
imul
dec
lds
insb
fs
xchg
cmpsl
sbb
jae
lahf
dec
cwtl
imulb
jmp
mov
add
push
or
xchg
sti
inc
cmp
dec
aas
ret
into
jecxz
lret
cmp
pop
test
xchg
sub
jle
int
jle
sbb
mov
xchg
mov
cmpsb
jo
and
mov
scas
and
out
and
dec
mov
mov
jge
mov
jp
adc
pop
add
rol
ret
mov
lods
outsb
mov
pop
js
lods
outsl
fldz
pop
movsl
mov
cmp
mov
aam
fmull
adc
sbb
dec
imul
xlat
xor
push
into
xlat
test
xor
fucom
fmuls
orb
mov
fstl
pusha
and
mov
into
lret
cmpsl
in
lock
in
mov
out
and
js
sub
xchg
and
orl
push
pop
and
or
sub
or
mov
enter
stos
sbb
ja
push
cld
ret
sub
enter
xchg
fs
ds
std
dec
sbb
inc
ret
inc
fsubs
loope
and
mov
mov
addl
and
repnz
mov
xor
and
and
sarb
fwait
decl
pop
fdivrl
push
fdivr
clc
and
in
mov
fwait
push
rol
jb
scas
dec
leave
add
mov
jecxz
push
sub
add
outsb
roll
mov
imul
js
cmp
out
lock
jge
xor
pop
push
movl
out
inc
xor
sbb
sub
mov
push
xor
nop
or
fnstsw
mov
inc
pop
out
mov
ds
push
pop
mov
pop
inc
faddp
or
ja
out
pop
sbb
pop
xchg
and
inc
push
in
and
rcr
ja
add
mov
pushf
cs
mov
mov
loop
daa
orb
cmpsl
repnz
data16
and
inc
adc
sbb
push
add
jb
pop
jo
aam
gs
jp
mov
xchg
lods
jp
xor
arpl
sarb
ja
mov
mov
adc
and
push
jbe
push
loop
dec
std
or
data16
imul
repnz
popa
mov
dec
and
pop
test
in
imul
orl
arpl
ret
jno
insl
js
lods
pop
test
cmp
dec
and
cmp
push
mov
stos
xorb
fisttpl
pop
bts
adc
cmp
and
dec
jnp
daa
aaa
push
stc
mov
inc
ja
fstpl
push
or
test
fildll
xchg
add
clc
ljmp
cmp
or
pop
push
adc
adc
xor
adc
mov
jg
xchg
mov
or
bound
or
jecxz
mov
scas
mov
jmp
xor
movsl
jmp
stos
pusha
jns
out
mov
ss
cs
out
out
sub
inc
lock
jg
in
xchg
out
cmp
add
jns
lock
push
fs
jge
xchg
jne
or
divb
in
popa
jg
dec
ret
xchg
xchg
lahf
lods
or
xchg
xchg
xchg
inc
mov
scas
lea
in
imul
dec
cld
add
xor
cld
stos
pop
bound
mov
lcall
jecxz
mov
lods
cltd
das
inc
jge
loopne
aaa
fldln2
inc
mov
iret
cmp
aas
icebp
aaa
dec
push
inc
mov
scas
jp
mov
fs
imul
xchg
test
cmp
xchg
ljmp
repz
ja
push
adc
xor
gs
inc
xchg
lret
inc
pop
push
and
ds
push
scas
dec
jbe
es
mov
mov
inc
lret
std
or
shl
jbe
adc
mov
cwtl
call
sub
push
jae
xchg
adc
pop
xchg
adc
adc
and
jb
stos
xchg
das
jns
mov
fsubs
jmp
mov
mov
arpl
jp
inc
jb
mov
push
jle
mov
mov
sub
stc
faddl
repz
adc
push
adc
clc
mov
pop
xchg
mov
pop
lods
ja
arpl
jmp
fcoms
cs
push
lahf
popa
push
dec
or
in
fisubrs
jae
xchg
pop
mov
das
pop
imul
dec
pop
xchg
mov
mov
out
in
push
enter
sub
fldenv
or
test
cmpsl
sub
pop
bound
sub
sub
imul
jmp
cmp
mov
mov
inc
fisttps
imul
dec
pop
sahf
mov
not
imul
mov
filds
outsb
cli
pop
std
and
lret
lcall
lods
cmpsw
lret
pop
leave
jmp
push
loope
imul
fisubrl
lods
jmp
cltd
insb
fidivs
xor
scas
ss
pop
inc
les
ljmp
sub
push
icebp
push
add
aad
add
mov
inc
fadds
repz
stos
aas
outsl
test
es
test
cmp
faddp
mov
xchg
mov
scas
lahf
sub
mov
ja
mov
loop
clc
pop
lock
imulb
jl
xor
loope
call
mov
jg
add
xchg
sub
or
jb
dec
adc
ds
lahf
rorl
inc
inc
jl
cwtl
int3
std
insb
js
stc
or
mov
cwtl
jmp
or
out
rcrl
xchg
neg
jge
std
add
xor
in
in
sub
and
pop
pushf
stos
sbb
movsl
ds
jb
cld
cmp
mov
mov
inc
add
push
mov
push
sarb
mov
mov
addr16
jo
in
jl
popl
mov
in
cmp
xchg
mov
gs
push
lret
mov
int
leave
dec
shlb
jb
cmpsb
fidivs
cmp
inc
jp
xor
int
and
push
loope
and
das
ret
cwtl
pop
adcb
xchg
xchg
test
push
in
scas
adc
inc
ret
add
cld
pop
jbe
lods
xchg
into
pop
movsb
mov
imul
orb
sub
push
hlt
fimuls
daa
test
repz
gs
push
jle
mulb
pop
out
ja
mov
sar
loopne
push
xchg
pop
lds
jae
cmpsl
roll
sbb
sbb
sarb
adc
fdivr
dec
subb
push
jb
ljmp
or
out
adc
imul
mov
es
cmp
aaa
sub
sahf
loope
mov
add
pop
cmp
ret
inc
bound
outsb
cmp
aad
cltd
mov
fwait
adc
sub
lcall
fistpll
xchg
sbb
scas
cmp
jg
mov
ss
mov
out
cmp
add
rcll
scas
cmp
add
movsl
mov
lahf
out
mov
aam
xor
pop
js
pop
sahf
shrb
dec
inc
push
or
sbb
mov
push
adc
insl
dec
out
jnp
cld
popf
adc
xlat
jge
cmp
mov
inc
sbb
sub
fidivl
fnstsw
pop
jl
or
pop
fldenv
popf
mov
out
push
stos
jmp
cltd
pop
xchg
xchg
xchg
insb
pop
fwait
int3
sbb
jg
aaa
sbb
bt
lock
sbb
test
mov
sub
fwait
arpl
or
loope
mov
out
add
rcl
outsb
cmpsl
xchg
or
jp
insb
je
inc
mov
incl
imul
dec
fistpl
lahf
inc
lods
shr
dec
int
mov
pop
jns
and
pusha
in
pushf
mov
cmc
pop
popf
fstpt
dec
notb
pop
mov
dec
mov
and
nop
mov
out
fldlg2
sahf
jo
push
cmp
pop
mov
cmc
mov
incb
mov
out
cmp
xlat
into
in
mov
sub
mov
in
and
in
add
mov
xor
stc
scas
mov
cmpsl
dec
test
insl
jecxz
jge
xor
outsb
or
cltd
aaa
outsb
sbb
push
add
imul
rcrb
pop
dec
push
ret
lret
enter
jle
mov
bound
push
in
xchg
sub
fildll
cwtl
ret
and
enter
xor
sbb
outsb
and
adc
cs
ret
cmp
pusha
nop
pop
pop
sbb
ret
xchg
xor
cs
aam
addr16
add
lret
or
push
jp
sbb
inc
out
mov
xchg
dec
test
icebp
ficomps
icebp
sub
mov
popa
lret
std
xor
into
add
data16
ja
stos
push
idivb
add
mov
inc
lods
adc
add
mov
stos
jecxz
pushf
xchg
gs
test
jae
dec
inc
dec
faddl
dec
es
pushl
cmpsb
loope
gs
loopne
in
jp
push
cs
repnz
and
or
sub
mov
bound
mov
xchg
push
lret
sbb
repz
in
loope
lods
aam
add
mov
pop
jecxz
or
and
jnp
mov
aad
scas
or
fcmovnb
stc
fwait
push
xchg
insb
mov
data16
testl
hlt
push
xor
mov
lea
jne
ja
std
out
mov
cmp
or
das
jno
pop
fmulp
fwait
lcall
stc
sub
cmpsl
jge
ja
xor
or
pavgw
sti
mov
outsb
sbb
and
mov
mov
dec
mov
cli
fisttpl
inc
cmp
xor
outsl
stos
push
xorl
mov
lahf
push
mov
jns
nop
and
loop
xchg
sbb
mov
out
into
aas
push
cli
pop
push
inc
sub
fwait
push
test
shlb
adc
test
negl
call
adc
adc
scas
jne
mov
insl
mov
test
shl
adc
cmc
inc
sbb
mov
fcoml
orl
xlat
push
inc
xor
int3
inc
movq
xor
out
jmp
ja
xor
out
add
mov
pop
push
insb
out
push
adc
loop
mov
cmp
jbe
jae
adc
xor
xor
scas
dec
push
mov
adc
push
xor
xor
hlt
pusha
cmp
inc
add
push
insl
push
xor
pop
out
fsubs
jbe
mov
pop
out
xchg
dec
out
pushf
push
fisubrl
sub
xor
in
repz
pusha
sbb
mov
mov
cwtl
pusha
lds
push
pop
pushf
adc
or
daa
add
sahf
shll
icebp
pop
pusha
push
es
mov
idiv
inc
rcr
and
sub
cmpsl
push
fwait
dec
adc
mov
pop
scas
push
pop
add
leave
out
or
pop
pop
xor
subb
mov
add
fwait
mov
dec
popa
and
add
add
mov
cmpb
xor
iret
mov
jmp
iret
xor
popa
es
add
push
bound
jns
ja
or
into
push
jmp
inc
fcoms
lret
cmpsb
fstps
jb
sub
mov
ret
dec
stos
pop
sahf
xchg
imull
push
scas
stos
push
mov
push
cmpsl
pop
outsl
loop
adc
rcll
mov
popf
loopne
pushf
mov
aaa
mov
xor
into
pusha
pop
xor
outsl
sub
out
mov
in
ret
sbb
rorb
dec
pop
loopne
lods
loop
inc
jae
cmpsb
mov
loope
addr16
cmc
stos
push
test
sti
addb
lcall
daa
jmp
and
arpl
int
outsl
push
scas
out
xor
negb
jns,pt
and
mov
sahf
xchg
inc
out
push
mov
mov
lock
cmc
ficompl
sub
and
ficompl
jae
cmp
rcll
ret
fldcw
mov
xorb
aaa
shlb
push
and
or
mov
pusha
xor
outsb
mov
or
and
std
push
xchg
mov
push
inc
push
repnz
mov
idiv
cli
imulb
push
add
cs
das
in
iret
xor
inc
out
lods
xorb
sbb
sahf
push
jne
fidivl
sbb
adc
pusha
push
mov
mov
jbe
xchg
lods
mov
mov
adc
push
jnp
or
scas
lret
push
es
cli
xor
xchg
pop
lea
pandn
mov
push
xor
adc
pushf
in
jb
shl
pusha
arpl
daa
pop
mov
pop
addl
and
mov
sub
outsb
inc
sub
pusha
sub
xchg
popa
mov
or
adc
hlt
cmp
ja
movsl
in
cwtl
dec
mov
pop
cmc
cmc
and
jnp
xchg
push
rorl
mov
pop
inc
mov
or
inc
sub
rcll
pop
mov
mov
mov
in
aas
cwtl
mov
mov
mov
shll
jp
mov
dec
fstpl
lret
and
clc
test
xor
cmp
adc
fucomip
cmpsb
mov
mov
fsubl
rcl
movsl
push
jbe
outsl
mov
scas
sbb
or
data16
xor
push
xor
mov
mov
adc
nop
mov
call
xor
adcb
jg
push
es
jne
xor
lods
and
in
aaa
dec
scas
dec
jne
iret
loope
cmpsl
fwait
jge
into
xchg
pop
cmp
lcall
cld
xchg
jmp
cmpl
out
cmpsl
dec
in
mov
movsb
mov
les
pop
pop
xchg
fstpl
sub
mov
fnstenv
mov
out
and
add
and
movsb
adc
dec
fcoml
pop
or
pop
jge
push
out
sbb
ficoml
jmp
lock
adc
fcmove
pop
stc
push
scas
push
add
cmc
mov
add
shll
aas
stos
mov
xor
adc
mov
les
repz
stc
cmp
push
jmp
push
scas
sbb
fdivl
das
dec
mov
cs
mov
sub
sahf
rorb
imull
jmp
mov
cmpl
hlt
out
sub
xchg
mov
shlb
xchg
jns
dec
ror
test
mov
in
xchg
xor
jmp
push
sbb
aas
ss
imul
rcrl
mov
xor
cld
fsubl
imul
xchg
mov
loop
adc
and
xor
ret
mov
push
fistl
movsl
idivl
bound
or
jmp
sbb
and
ret
jae
push
dec
aas
xchg
jbe
and
subb
push
mov
adc
sub
mov
xor
or
lcall
mov
jmp
jl
add
inc
ja
jae
pop
sti
inc
jmp
inc
pushf
cmpsl
mov
dec
pop
push
jns
mov
push
jnp,pt
cmp
mov
in
add
inc
test
pushf
popa
xor
inc
sbb
push
dec
imul
xor
shll
enter
cs
mov
inc
xchg
jge
cmp
push
jecxz
pop
pop
outsl
into
mov
enter
cmp
xchg
mov
andb
or
decb
cmpsl
xchg
inc
mov
test
jo
or
pusha
jbe
mov
sub
adc
cs
and
or
cwtl
leave
aas
jge
jl
xchg
int3
and
outsl
sbb
mov
inc
in
lods
out
into
je
jle
add
fnstsw
imul
repz
mov
mulb
stc
sbb
fs
add
movsl
mov
aas
jnp
or
xchg
lods
shrb
fwait
cmp
lcall
cltd
pop
aaa
lock
mov
mov
sub
dec
in
daa
sbb
bound
cmp
call
jmp
mov
lock
mov
sub
xor
push
adc
shl
ja
inc
inc
push
fidivrl
scas
adc
nop
mov
jb
nop
or
stos
notb
fwait
mov
loopne
loopne
adc
xchg
add
cmp
ja
shll
loop
push
push
push
rorb
mov
std
push
test
loopne
xor
or
or
int
out
cmc
bound
mov
jo
pop
andl
mov
stos
adc
mov
add
mov
add
add
sbb
xchg
jle
sub
andb
js
sub
mov
test
rcl
push
cwtl
ja
movsl
test
xor
jno
imul
pop
bound
mov
sub
push
fimuls
push
aad
add
inc
sub
pop
ficoms
pop
or
dec
xchg
mov
lcall
movsb
sub
imul
xor
mov
push
outsb
imul
mov
mov
pop
shrb
mov
inc
outsl
adc
dec
aaa
mov
cmp
jecxz
outsb
idiv
push
dec
daa
nop
ljmp
sub
sbb
dec
popf
cmp
xchg
jl
xor
pusha
xor
cmpsl
mov
movsb
cmpsb
mov
icebp
xor
lret
hlt
push
into
inc
push
out
sbb
push
mov
je
loop
nop
mov
jns
fstpt
hlt
or
mov
pop
push
mov
xor
ficoml
fistl
inc
imul
les
inc
outsb
je
notl
xor
cmp
add
shlb
mov
in
mov
inc
pushf
cmpsb
adcb
mov
add
insl
sbb
cmp
lods
ficompl
inc
jg
add
les
mov
lret
pop
les
lea
cltd
inc
mov
addb
xor
mov
ja
repnz
xor
enter
addr16
stos
inc
jne
sbb
xlat
orl
lods
shl
cmc
mov
rclb
repz
pop
push
jno
addr16
dec
adc
add
insb
mov
and
pushf
enter
shr
fistpl
cmp
and
jae
xchg
pop
icebp
test
xchg
in
loop
mov
out
inc
cmp
and
or
pop
push
add
dec
imul
and
lods
fwait
jle
jle
pop
sub
rorl
mov
adcl
add
bnd
pop
in
push
and
inc
mov
xorb
or
jl
mov
movsl
ljmp
leave
jbe
ljmp
mov
mov
or
int3
in
std
imul
push
pop
mov
jae
dec
repz
test
cmpsl
inc
addl
cli
jge
frstor
cli
add
cmp
out
sub
xlat
pusha
daa
dec
movsl
jns
xor
sbb
mov
movsb
pushf
je
pop
mov
push
sahf
or
int
xchg
push
out
push
jae
push
fstpt
push
lods
xor
scas
iret
jecxz
jg
je
aad
push
xlat
and
cmpsl
rcll
sub
lock
fucomp
add
fs
es
out
and
enter
inc
xor
push
mov
insl
iret
movsb
push
call
or
lret
or
ret
push
ss
jns
in
push
and
xchg
lcall
jae
sub
adc
mov
arpl
jge
mov
dec
pop
xchg
lods
pop
repz
popf
popf
das
pop
xor
push
fcomps
fst
mov
cmp
and
inc
cltd
xor
or
in
imul
repnz
mov
or
cltd
cwtl
xorl
stc
xchg
lods
orb
test
and
js
dec
ja
mov
xchg
lcall
inc
sub
inc
or
testl
out
pusha
sub
mov
sahf
push
stos
movsl
cld
repz
jge
arpl
inc
sbb
mov
mov
and
push
enter
ds
lds
adc
mov
push
into
jp
push
mov
cld
movsl
lods
fld
shlb
mov
setns
mov
dec
jns
psrad
stc
mov
pop
les
rcrl
loop
xchg
or
divl
das
lret
out
fwait
push
fisubrs
pop
or
fld
je
dec
movsb
test
lcall
dec
sub
push
lods
jbe
or
mov
out
add
sub
sub
test
jns
sub
sbb
cmp
pop
ss
scas
jg
jle
sbb
lret
pop
out
mov
shll
outsb
mov
and
mov
pop
pusha
jno
loope
je
cmp
sbb
cmp
hlt
xchg
mov
call
data16
pop
shr
inc
in
cltd
ret
jne
popf
push
testl
cwtl
jne
ret
popl
dec
pop
leave
test
call
lock
aaa
pop
jp
cmp
inc
rorl
cmp
adc
repz
jle
lock
ret
xor
hlt
cmovp
jl
xor
dec
mov
xchg
sbb
sub
popf
pusha
cltd
adc
in
mov
add
pop
dec
mov
push
jo
mov
into
cmc
dec
js
stc
mov
sub
cld
push
outsb
lret
pop
cmp
les
popa
jne,pn
add
mov
lahf
mov
sub
push
test
add
cmp
scas
cmpb
mov
pop
mov
mov
addr16
jno
jecxz
fcoms
stos
xchg
and
sbb
out
test
add
out
stos
sbb
adc
clc
test
pop
mov
mov
inc
mov
out
dec
mov
pushf
adc
jmp
cli
leave
mov
jg
add
dec
jbe
push
cmp
jecxz
cmp
popl
je
fldenvs
lods
add
lahf
std
das
inc
mov
xchg
mov
lcall
mov
mov
rorb
sbb
xchg
xchg
ficoms
jge
clc
pop
and
push
mov
pop
lock
je
lea
fldl
enter
and
in
jl
inc
mov
cmp
add
loop
pop
cmpb
xor
fcoml
imul
jg
in
mov
rorb
fwait
lods
xor
xchg
mov
mov
andl
mov
cmp
popa
iret
xlat
cmp
js
adc
dec
subl
fucomi
add
in
xchg
jle
loop
add
fiadds
aam
push
mov
push
aas
push
ljmp
inc
add
imul
xchg
pushf
jne
inc
mov
addb
ret
xchg
test
pop
push
adc
adcl
mov
sbb
mov
xor
and
icebp
xchg
sbbb
push
dec
pop
inc
scas
inc
in
pop
adc
fwait
mov
call
dec
insb
or
inc
inc
mov
mov
adc
inc
adc
push
sub
sub
data16
ds
pop
mov
mov
cmpsb
in
jae
push
adc
fsts
ss
stos
iret
in
dec
sbb
pusha
in
push
mov
cmp
jmp
and
jno
dec
insl
sbb
push
iret
sbb
addr16
arpl
leave
xor
sub
mov
xchg
and
pop
xor
mov
ret
mov
jae
pop
jbe
push
mov
add
xlat
lret
jo
mov
xor
mov
mov
hlt
mov
fbld
mov
push
xchg
stc
inc
ret
movsb
lret
imul
dec
jg
sbb
shll
cli
push
inc
int
inc
inc
fmul
pop
push
push
push
push
scas
sbb
leave
les
push
bound
dec
pop
cmp
aaa
lret
add
xor
jecxz
xchg
aas
testb
daa
hlt
mov
ret
add
jecxz
xchg
les
jae
sti
xchg
and
mov
mov
bound
or
clc
js
add
jno
xor
loopne
xlat
fistpl
into
and
push
rcrb
stc
aad
inc
inc
push
test
jbe
outsl
nop
jge
push
jg
adc
push
cld
test
loop
add
sub
leave
in
xor
fcomi
xor
jecxz
mov
stc
add
fbld
out
add
add
nop
pop
sub
push
push
andb
jmp
or
insb
xchg
lods
push
dec
and
fstpl
jmp
cmp
leave
cmp
jne
fldt
sti
mov
shll
add
insb
inc
mov
mov
lods
mov
ffree
adc
push
cltd
mov
cmpl
sbb
sbb
mov
push
push
push
cli
cmp
out
xor
into
imul
pop
lods
xor
mov
mov
dec
jge
lret
and
dec
jg
sub
stc
daa
sbb
insb
scas
test
mov
push
vpminsw
adc
cmp
into
loope
ficompl
mov
nop
aas
xlat
sbb
xchg
ficompl
inc
add
dec
jge
dec
fcompl
outsl
stos
sub
mov
idivl
pop
outsb
push
test
insl
bound
dec
cld
inc
jno
mov
lret
adcb
lods
xchg
jns
movsb
orl
inc
xchg
int
jmp
inc
push
add
inc
dec
sub
push
jl
xchg
sub
pop
cmp
inc
shrl
pop
dec
in
sbb
xchg
andb
or
stos
xchg
and
sub
jmp
mov
mov
lds
cs
cmp
and
sbb
mov
sub
stos
mov
lods
inc
sub
pusha
push
jo
push
cwtl
daa
lret
orl
lods
negl
arpl
loop
aaa
cmp
cwtl
xor
and
push
pusha
mov
ds
cltd
gs
js
or
shll
push
sub
pop
sub
mov
rclb
or
mov
inc
loope
mov
enter
xchg
mov
mov
insl
mov
push
xchg
ret
shl
fcomps
jno
fcoml
ja
sbb
shl
ror
ljmp
cmp
orl
or
std
and
cld
or
pop
rcll
or
xchg
repnz
jmp
jnp
push
push
test
mov
cmp
xor
mov
rolb
dec
pop
fidivrs
scas
pop
mov
and
or
outsb
mov
mov
xchg
add
fs
and
aad
out
and
jmp
mov
sbb
js
sarl
cmpsb
pop
fcoml
cmp
push
xor
sub
jnp
xchg
pop
mov
sbb
pop
sub
add
jns
xchg
orl
cmp
mov
push
push
iret
adc
or
movsl
dec
or
repz
jl
cmp
jb
or
push
jo
int
or
adc
fndisi(8087
mov
scas
nop
xchg
or
sahf
sub
inc
ljmp
pop
inc
in
frstor
xor
ja
cmc
sbb
enter
jae
xchg
xchg
sub
daa
mov
pop
lret
mov
inc
mov
insb
xor
mov
jo
subb
pop
insl
sbb
mov
gs
or
and
je
cmpb
sub
int
scas
repz
xchg
loope
adc
or
jmp
lods
scas
cmp
xor
jb
sub
push
mov
pop
mov
imul
add
shlb
adc
sbb
movb
push
mov
inc
push
into
lock
push
scas
fwait
mov
dec
mov
shrl
cltd
jno
lret
or
sbb
outsb
sub
mulb
inc
jo
loop
out
mov
mov
mov
enter
je
sub
les
loop
xchg
ss
mov
fsub
mov
jmp
dec
aam
aas
shll
test
mov
mov
std
pop
pop
imul
xorw
or
xchg
ja
hlt
push
daa
in
adc
cli
sbb
xchg
mov
ja
cmp
jmp
cli
pop
inc
fcoms
lret
mov
out
push
lock
out
lahf
inc
hlt
cmp
add
cmp
jl
mov
test
adc
xchg
jge
sbb
in
inc
fcoml
addr16
mov
cmp
xchg
icebp
xchg
in
cmpsb
iret
add
add
and
imul
dec
push
mov
jmp
aas
dec
hlt
fucomi
and
cmpsl
adc
pop
cmp
adc
pop
add
push
inc
shrl
push
mov
xchg
cmp
fisubs
jle
cmp
popa
aad
lret
add
cmpsl
add
mov
or
test
pop
js
loopne
mov
lret
mov
or
mov
push
daa
ret
repnz
mov
call
mov
mov
xchg
fcmovu
out
lahf
jne
rcr
sub
xor
xchg
shlb
imul
dec
jge
rcrl
push
icebp
xor
movsl
sub
roll
mov
adc
mov
cmp
mov
daa
gs
subb
pop
rcll
fadds
mov
dec
xchg
cmpsl
adc
mov
dec
inc
mov
fwait
aad
insb
push
sti
in
mov
gs
rorb
test
pop
insl
movsl
xchg
and
cmp
jmp
cli
arpl
pop
mov
pop
mov
out
ljmp
jnp
mov
nop
or
inc
lods
push
imul
loopne
fists
pop
iret
add
shlb
outsb
adc
cmp
aaa
mov
pusha
add
jecxz
adc
cmp
jecxz
jbe
cmp
lret
shl
and
test
aas
fcomps
fs
xor
cld
jecxz
inc
mov
mov
mov
mov
hlt
cmpl
and
mov
sbb
in
or
cmp
sbb
lods
add
mov
push
jae
jmp
loopne
mov
out
mov
inc
add
arpl
scas
stos
loop
pop
pop
adc
pusha
mov
je
out
cmp
inc
pop
lcall
das
inc
mov
dec
sub
push
ljmp
xor
ret
stos
adc
mov
orl
xchg
sub
jb
out
pop
lea
mov
ficoml
add
or
testl
out
push
into
mov
into
adc
pop
fcmovb
lahf
rol
ja
pop
mov
jg
fisubs
mov
pop
rorl
fwait
mov
xchg
sub
pop
loop
lret
pop
mov
sti
xchg
jo
xchg
sbb
xchg
leave
jmp
jge
cli
push
lret
push
loope
pop
xchg
inc
repnz
push
test
lret
dec
cmpsb
jmp
shll
fdivl
cwtl
sub
test
push
testb
fldenv
mov
dec
mov
pusha
imul
mov
mov
and
dec
add
or
pop
push
pop
aam
cmp
rcl
cmpb
push
cmc
fwait
mov
xor
cmp
add
lock
xor
jl
mov
sub
sbb
xor
aas
xor
adc
aas
mov
pop
into
movsl
dec
mov
rcll
adc
les
loopne
pop
outsl
push
mov
adc
mov
mov
inc
ret
cmpb
fisubl
cmp
sti
and
jecxz
ja
imul
daa
mov
subb
ss
adcl
xchg
aad
or
cmp
mov
fsubp
icebp
cmc
sbb
cmp
scas
and
jg
and
icebp
mov
fildl
fldcw
mov
mov
or
adc
stos
shrb
sub
ret
iret
jp
jbe
adc
ret
and
arpl
aam
mov
lret
xchg
pop
cmp
push
dec
int3
jp
mov
aaa
popa
call
cmpsl
jb
jo
push
adc
cli
inc
aam
jg
mov
cmpsb
xchg
cmpsb
shll
xchg
insl
std
mov
repz
mov
mov
es
xor
mov
push
dec
int
xor
test
outsl
in
test
stos
fistpl
cmpsl
jne
push
test
cmp
jecxz
rcl
mov
mov
test
lret
adc
push
outsb
xchg
out
sub
jge
dec
pop
repz
cmc
sbb
jle
lret
inc
jmp
dec
or
mov
int3
and
sub
mov
inc
lcall
aam
movsb
inc
mov
sub
mov
xchg
push
loopne
mov
cmc
shll
push
xchg
xchg
inc
test
adc
gs
mov
ret
lahf
jge
jle
push
cmc
xchg
or
push
clc
adc
jle
movsl
insl
lcall
ja
subb
mov
adc
sbb
push
mov
loope
dec
mov
scas
mov
push
adc
push
sbb
enter
push
insl
cltd
adc
jle
lds
push
or
inc
insb
cltd
jl
outsb
push
sbb
dec
adc
push
dec
in
jp
xchg
fimuls
pop
mov
mov
push
jns
out
jmp
push
int
stc
shrb
test
das
inc
rolb
adc
lret
pop
cmp
outsl
pop
adc
popa
daa
adc
or
mov
sbb
movsl
pop
sub
insb
insb
pop
loopne
cs
jmp
sbb
mov
or
in
orl
mov
sbb
test
mov
jno
mov
mov
out
mov
test
ds
rorl
pop
je
dec
sub
cmp
jb
dec
push
dec
xchg
jae
lea
int3
push
movsb
shll
test
jmp
dec
xchg
sbb
iret
jae
std
or
cwtl
pop
fcomps
mov
lahf
scas
ss
int
in
mov
aaa
push
pop
hlt
push
ret
push
mov
adc
sub
push
stos
ffree
sbb
push
sbb
jno
push
xlat
gs
jne
ss
jp
add
fcoml
xor
xchg
ljmp
sbb
push
fiadds
sub
dec
gs
push
sbb
sbb
or
pop
inc
les
dec
movsl
ljmp
cmc
nop
sbb
jae
inc
popf
lahf
push
insb
mov
mov
sahf
cmc
insb
rcrb
cmp
and
mov
mov
and
enter
lret
stc
or
jecxz
clc
push
push
or
push
lret
stc
fs
push
push
fdivl
inc
or
add
fidivl
sub
loopne
sbb
hlt
inc
loop
inc
push
cltd
or
imul
xchg
jns
lock
inc
jle
mov
mov
push
mov
cwtl
jnp
ret
mov
daa
in
mov
jbe
mov
mov
mov
cmp
movsl
test
inc
mov
ficoms
fisubs
mov
dec
movsb
das
dec
insb
bound
sub
stos
pop
mov
and
mov
adc
mov
pop
iret
clc
call
fwait
mov
lods
bound
mov
jae
jbe
sub
cmc
adc
push
mov
out
pop
lcall
mov
hlt
add
sbb
loope
cs
pop
jp
enter
mulb
pop
pop
ja
das
out
cli
xor
sub
pop
mov
les
imul
mov
jns
bound
xor
mov
int3
icebp
popa
xchg
xor
sbb
fisubl
xchg
in
or
inc
cs
add
fwait
into
scas
xchg
sarl
cmp
call
push
push
mov
lret
sub
ljmp
cmp
mov
mov
inc
int
dec
fcmovu
xchg
test
inc
cld
add
mov
pusha
push
or
sub
orl
bound
sti
sub
mov
imul
push
cmp
mov
mov
addr16
pop
fs
push
iret
adcl
xchg
add
in
sbb
and
mov
shll
data16
and
jno
addr16
push
mov
adc
lods
pop
loope
jmp
addr16
lahf
addl
mov
add
pop
xchg
fcoms
dec
je
xor
pop
mov
bound
push
les
mull
test
add
xlat
lret
mov
shr
scas
adc
out
inc
rcll
imul
sbb
lret
divl
mov
xchg
lret
cmp
call
fmuls
xor
out
push
lret
dec
in
or
xchg
cli
leave
stos
in
xchg
ja
push
hlt
xor
mov
outsl
movb
cld
sub
inc
xlat
sub
negb
jp
mov
push
dec
jle
mov
faddl
gs
xor
pusha
outsl
mov
inc
jl
mov
arpl
xor
test
sbb
jne
push
insl
fld
adc
sub
lods
dec
inc
ja
push
pop
test
fcmovnbe
sbb
sarb
jecxz
adc
test
xchg
retw
testb
cmp
aad
add
mov
mov
imul
sarl
mov
pop
aad
jg
adc
inc
adc
mov
xor
sbb
push
lods
jno
aam
lods
mov
das
lods
sbb
sub
cmc
xchg
push
bound
pop
and
push
mov
ja
xlat
in
sbb
enter
shll
imul
incl
sbb
rclb
std
popf
nop
pop
daa
test
adc
adc
dec
cwtl
popf
jg
xor
scas
xchg
and
leave
fstl
enter
jge
push
sbb
mov
xor
rcrl
in
pop
push
test
or
pusha
jae
mov
cmpsb
das
jae
push
inc
lcall
and
sbb
jbe
pop
les
fsubrs
mov
shl
xchg
movsl
push
pop
enter
leave
cmp
lds
cmp
imull
xor
outsb
test
mov
popf
jb
ret
ret
cmp
enter
addr16
pop
push
jb
inc
loop
xor
sub
or
xor
adc
scas
dec
inc
inc
das
xchg
std
ficoms
divb
out
jno
insb
imul
jnp
adc
dec
mov
fwait
fwait
jge
inc
pop
aad
adc
xor
push
add
or
push
mov
es
inc
inc
push
inc
mov
push
push
sbb
cmp
jmp
jle
adc
xchg
sarb
loopne
sub
cmp
ljmp
fldl
or
xor
dec
jne
das
jbe
les
pusha
sbb
out
xchg
lods
lret
mov
std
dec
xchg
jmp
aam
lods
or
ss
aaa
mov
movsb
mov
insl
adcl
repnz
mov
ja
pushf
xchg
arpl
and
in
sbb
mov
dec
pop
test
loopne
and
inc
or
nop
mov
sbb
xorl
in
push
inc
mov
in
jecxz
inc
jl
and
test
add
in
sbb
inc
sbbb
push
xor
inc
test
mov
pop
andl
adc
sbb
fstpl
sub
push
std
mov
mov
repnz
aaa
inc
fistps
dec
and
daa
fcomps
cmp
dec
push
mov
add
xchg
daa
fstps
add
sbb
cwtl
and
pop
pop
mov
ss
shl
jp
jge
das
dec
ficoms
cmp
int
lret
mov
jne
mov
and
stos
shlb
jbe
ret
mov
or
cmp
adc
mov
inc
push
xchg
fsubs
cmpsl
pop
cmp
jae
jle
cmp
mov
fbstp
sahf
push
pop
ja
push
inc
push
les
xorb
cli
mov
mov
push
sub
jp
inc
xchg
xchg
in
jl
mov
loope
stos
and
movsb
push
xlat
mov
mov
lods
dec
call
mov
add
lret
fstps
out
xchg
mov
js
fs
xor
in
pop
sahf
or
push
jg
cmp
rorl
in
test
jae
jb
das
or
subb
out
in
lock
push
sub
pop
lods
test
outsl
cmpsb
movb
pusha
jmp
sarb
xor
mov
hlt
push
xchg
cli
adc
dec
adc
and
mov
fld
lods
mov
cmc
out
xor
popf
xor
cmp
clc
pop
mov
fnstenv
pop
lahf
ret
rcrl
fnsave
inc
mov
test
fprem
js
pop
repnz
iret
adcl
and
mov
push
popa
lods
testb
or
jnp
inc
xchg
jo
mov
movsl
imulb
and
adc
outsb
fwait
sub
lods
sbb
sbb
sbb
sub
fs
ds
cmpl
sub
pop
mov
or
decl
shll
jle,pt
or
sub
and
scas
mov
cmpsl
jmp
and
shl
cli
push
jns
mov
cmp
not
adc
pop
jle
pop
adc
stos
or
xchg
xor
ret
sub
in
in
flds
data16
lcall
fnstcw
xor
lock
fldenv
icebp
mov
cli
bound
pop
dec
sub
movsb
sbb
int3
dec
pop
inc
ss
jns
mov
sub
cmc
adc
cmc
mov
psrlw
fsts
fnstcw
outsb
nop
movsl
clc
or
xor
shrl
jnp
addr16
dec
icebp
lods
icebp
ds
or
pusha
jmp
int3
pop
sub
cli
dec
and
outsl
mov
xchg
ficoms
cltd
inc
jmp
nop
xor
fadd
xchg
xchg
daa
xchg
cmp
repz
push
popa
adc
ljmp
push
js
mov
pop
lea
clc
sbb
dec
in
xchg
sub
nop
lea
sub
int
shl
xchg
mov
jb
imul
dec
inc
jae
adc
pop
imul
mov
jns
lret
or
cmpsb
xor
cmpsl
mov
addr16
lds
jns
sbb
sbb
dec
pop
pop
dec
dec
inc
mov
add
popf
pop
push
and
movsb
push
and
mov
mov
cmp
iret
shll
lea
add
ja
idiv
inc
std
or
sbbb
jo
int
loopne
lahf
fnstsw
fucomip
jo
out
jg
xlat
or
js
imul
mov
dec
sub
inc
lret
adc
fsubrp
mov
les
lock
scas
jb
stc
cmpsl
or
xchg
js
cmp
push
addps
lock
fsubs
add
jl
sbbb
inc
sub
pop
mov
push
pop
lds
movsl
xchg
pop
int
pop
cmp
rclb
or
or
mov
int
and
test
push
mov
push
fstps
lfs
mov
test
dec
push
sahf
test
jmp
test
int3
jp
jle
mov
jp
pop
add
xchg
xchg
stos
push
aad
adc
mov
mov
mov
data16
xor
data16
aad
je
jne
insl
mov
sbb
xor
push
or
shl
test
orb
movsl
js
fwait
adc
int3
popf
sub
into
add
xlat
dec
mov
pop
sub
lods
scas
shrb
inc
pop
jne
cmpsl
inc
sbb
pop
outsb
out
in
lret
scas
out
inc
add
inc
lods
lret
ret
or
xor
scas
lcall
or
mov
jae
rcll
insl
rorb
int
out
dec
ds
das
ljmp
add
push
mov
fidivrl
inc
out
xor
sbb
imul
es
xchg
mov
cmpsl
fcomps
or
push
movsb
xor
insb
aam
jbe
into
sti
inc
movsb
aaa
in
jecxz
jle
push
in
mov
stc
test
mov
outsb
mov
mov
gs
arpl
and
xor
jne
push
addr16
mul
push
or
divl
dec
xchg
fs
mov
mov
mov
xchg
lahf
add
mov
push
sarb
lret
jne
jno
xchg
inc
daa
cmp
xchg
mov
inc
push
push
inc
inc
in
inc
cs
test
std
das
mov
divl
add
pop
dec
pop
dec
add
test
and
or
mov
fdivrs
fcmovnb
les
and
shll
ss
mov
bound
mov
es
mov
adc
jb
ret
inc
xchg
leave
scas
lret
push
aam
cmp
push
or
push
sub
cwtl
es
or
mov
inc
pop
dec
xor
cmpsb
cmp
test
stc
mov
leave
lock
push
rcrl
insl
int3
jecxz
cli
dec
and
mov
mov
cmp
jo
and
subl
idivb
pop
popa
inc
add
fs
push
std
lret
pop
inc
push
fs
jg
mov
xor
sahf
mov
adc
mov
icebp
fstp
jle
pop
adc
cmpsl
xlat
stos
icebp
sarl
dec
sbb
xor
sub
cltd
std
xchg
popa
pop
mov
fdivl
loop
mov
mov
push
xor
fldt
fwait
or
jne
jae
xchg
adcb
xor
push
out
add
sbb
mov
aas
xchg
lock
or
aam
and
dec
out
fdivrp
fcmovnb
mov
mov
or
pop
mov
inc
sub
dec
inc
xchg
loopne
lea
push
cld
dec
arpl
sbb
out
cmp
cmp
ja
jmp
test
imul
cltd
and
adc
std
inc
xorl
mov
lret
cmp
xor
adcl
enter
jo
mov
movsl
insb
test
or
in
pop
sar
or
dec
and
add
sub
pop
montmul
cmpsb
inc
out
mov
xor
mov
aas
int3
pusha
pop
inc
xchg
addr16
push
dec
mov
pop
call
movsl
sbb
out
cs
outsl
pop
and
outsl
ret
xchg
cwtl
or
mov
and
mov
mov
inc
lcall
push
jae
negl
mov
cwtl
mov
mov
pop
pop
rcrb
je
or
sub
test
aas
dec
imul
and
pop
mov
sub
dec
rcll
fistl
jp
out
and
out
adc
push
sbb
push
mov
pop
loop
mov
xor
push
in
jae
mov
mov
ljmp
ret
shlb
stos
fmull
aad
push
push
dec
shlb
mov
loopne
pusha
hlt
mov
push
sbb
cwtl
mov
out
roll
push
inc
enter
jo
std
dec
inc
loop
jb
push
mov
mov
fwait
in
jae
lods
adc
lsl
push
icebp
in
add
pop
les
xor
dec
in
pop
mov
mov
test
push
and
xchg
data16
and
out
sti
in
pop
jbe
jg
sub
test
loop
mov
out
and
loopne
dec
adc
and
and
stos
pop
mov
xor
cmovge
pop
sbb
cmp
xor
pop
int
fstps
add
xchg
jmp
mov
fcomps
mov
loop
jns
das
inc
popa
pop
mov
push
sub
mov
imul
rclb
add
testb
sbb
lahf
daa
pusha
or
loopne
push
stos
sbb
jecxz
xor
int3
cmp
cmpsb
xchg
or
clc
push
push
imul
data16
popf
dec
je
incl
std
pop
adc
cmp
int3
sub
cmp
mov
fadd
push
loope
inc
mov
outsl
lods
pop
pop
jmp
orb
aaa
ljmp
jmp
mov
add
int
pop
leave
fiaddl
repz
ljmp
xlat
mov
std
int
test
add
xchg
gs
scas
or
data16
mov
jbe
repnz
scas
cmp
in
pop
arpl
andl
fildll
and
pop
pop
testb
ja
lahf
mov
into
subb
mov
inc
cmpsl
mov
jae
inc
leave
dec
mov
mov
pop
lods
cmp
sub
push
insb
cmpsl
bound
pop
hlt
adc
dec
add
sbb
mov
arpl
cmpsb
mov
in
add
and
das
mov
jae
inc
push
data16
xchg
shrl
imul
push
and
jmp
dec
sbb
dec
test
sbbb
lock
xor
pop
in
xchg
mov
jbe
sub
mov
xor
sub
inc
repnz
clc
xor
sbbl
fs
fs
and
add
lds
ljmp
fsubrs
cwtl
or
xchg
dec
sub
xchg
ss
test
push
aad
lods
push
imul
sub
jl
jecxz
mov
sbb
inc
push
push
push
cmpsl
nop
cmp
xor
insb
int3
in
sub
mov
push
dec
adcl
lret
adc
jge
lock
mov
ljmp
or
test
xor
or
inc
inc
subb
adc
inc
sub
cmpsl
rol
add
pop
pop
shl
mov
lds
outsb
push
mov
std
dec
xor
jmp
inc
bound
lahf
adcl
or
popf
movsl
inc
inc
mov
inc
shrb
test
mov
lahf
jno
cmp
sbb
test
cmp
popa
lea
and
in
inc
jno
shll
and
and
in
negl
sub
cmpsl
je
jp
sbb
fucomip
mov
int
push
xor
mov
sub
ret
inc
or
negb
xchg
or
and
adc
ja
add
icebp
lea
or
imul
mov
sub
sbb
fmull
add
jg
and
mov
cmp
icebp
mov
clc
aas
imul
je
inc
or
mov
sbb
sahf
or
fsubrl
mov
and
xchg
pop
sbb
fists
or
push
pop
xlat
in
jo
xchg
dec
sub
mov
adc
les
jp
adc
and
xor
fcoml
cltd
scas
out
pop
lcall
lcall
jo
in
scas
es
das
es
inc
ss
mov
lret
andb
mov
in
leave
pop
xor
shlb
or
sbb
dec
sbb
pop
ljmp
lods
movsb
jge
cli
out
or
ja
and
jle
shlb
push
sbb
movsl
xor
out
or
imul
xor
mov
add
add
jns
decb
push
and
or
or
mov
push
xchg
and
mov
incl
cwtl
jmp
inc
mov
xchg
pusha
inc
xor
add
pushw
test
ror
adc
and
es
sub
arpl
cwtl
rcrl
aas
test
dec
clc
sahf
mov
icebp
mov
lds
outsl
test
sbb
sbb
lret
dec
rdmsr
cld
and
cmp
movsl
gs
cmp
cmp
push
jne
pop
xchg
popa
mov
ret
fdivs
pop
cmp
stc
movsl
pop
jle
rcll
rcr
repz
fmuls
movsl
rcrl
repnz
push
push
enter
sbb
movsl
jecxz
mov
in
cwtl
in
add
sbb
in
xchg
add
dec
adc
arpl
in
xchg
imul
jp
jle
xor
mov
hlt
sub
jns
scas
mov
out
mov
mov
mov
mov
and
ficoms
fstps
out
push
insl
stc
jns
fisttpll
mov
push
mov
mov
outsb
xor
xchg
jne
gs
dec
sbb
gs
arpl
out
push
out
rcrb
xor
cmp
jecxz
jg
mov
and
xor
cmp
pop
add
mov
imul
mov
sub
xchg
pop
and
sbb
or
mov
fldenv
mov
lret
push
loope
call
icebp
sub
clc
dec
movsb
mov
ret
xchg
cmp
out
add
and
sahf
addr16
lods
pusha
sbb
jmp
jbe
pop
fcmove
xor
fstpl
loopne
mov
inc
jae
dec
pop
mov
pop
lds
sbb
mov
movsl
scas
pop
imul
ja
outsl
pop
push
fnstenv
xchg
pop
scas
and
enter
cld
mov
fs
arpl
inc
fldenv
mov
sbb
idivb
into
add
or
mov
sarl
sahf
shll
inc
add
add
and
jnp
data16
adc
adc
call
xchg
fwait
popa
jge
mov
imul
popa
adc
or
outsl
lret
fldenv
sahf
fiadds
leave
xchg
jg
not
cmpsl
cmpsl
sbb
cli
adc
movsl
inc
inc
sub
sahf
cs
outsl
pop
adc
sub
adc
arpl
push
sahf
and
ret
in
sbbl
push
jmp
dec
fwait
jb
cltd
pop
mov
sbb
inc
jle
mov
bound
mov
std
cmc
rcrb
cwtl
loope
lods
pop
mov
lods
test
lock
adc
dec
jle
test
fmulp
xorb
out
enter
inc
sbb
rcrb
adc
or
pop
cli
sbb
call
bound
fstpt
xchg
pop
sbbb
push
xchg
xchg
iret
cld
xorb
scas
jle
lahf
mov
sub
mov
outsb
and
push
jl
xchg
xchg
sbb
xlat
and
fisubs
and
pop
mov
out
xchg
dec
xchg
sbb
xchg
dec
cmp
xchg
xor
xchg
pusha
pop
fnstenv
ja
mov
cmp
pop
pop
pop
dec
dec
lock
stos
je
inc
cmp
shrb
xchg
stos
stc
ret
mov
mov
cli
in
popa
lcall
add
pushf
into
aas
das
int3
mov
xor
jns
mov
adc
dec
jp
pop
or
ret
mov
and
cltd
cmpsb
iret
mov
sbb
push
mov
mov
loopne
push
scas
mov
in
fsubs
or
sub
push
xor
test
mov
jae
cld
shlb
fisubs
pop
adc
pushf
out
out
inc
repnz
scas
out
push
sub
jnp
out
sahf
sbb
inc
scas
push
dec
adc
mov
incb
inc
scas
fsubs
aam
dec
or
nop
or
repz
arpl
cmp
jl
adc
dec
push
sub
in
ljmp
ja
aam
adc
cmp
xor
in
adcb
int3
shr
xorb
das
sub
mov
mov
pop
sub
std
pop
aad
in
and
insl
add
fildll
xor
lea
cli
fcoms
adc
lret
cmp
stos
insl
mov
and
dec
push
mov
jnp
fbstp
adc
adc
or
jmp
dec
je
xchg
movsb
and
jbe
push
dec
mov
and
das
cmpsl
mov
mov
stos
jecxz
fcompl
xchg
cltd
popf
js
shl
jl
dec
sbb
and
cld
mov
mov
xlat
dec
sbb
pop
mov
pop
je
xor
sub
jmp
test
add
out
pushf
and
in
loopne
aad
ja
push
mov
mov
and
movsl
sbb
mov
and
stos
add
fimuls
sub
hlt
mov
jbe
icebp
mov
insb
sbb
out
jno
jne
pop
pushf
mov
loopne
pop
jbe
sbb
xchg
mov
cmp
cli
pop
scas
dec
mov
push
jbe
jns
xor
imul
scas
xor
xor
push
ss
pusha
cwtl
imul
mov
mov
insl
nop
mov
mov
mov
jo
push
push
mov
mov
push
lahf
ret
mov
mov
in
inc
std
sub
dec
inc
sub
inc
les
add
adc
leave
lods
add
mov
push
cmp
stos
dec
js
sbb
and
int
push
loopne
or
pop
jb
filds
push
sub
call
push
jmp
cmp
xlat
popf
pop
ljmp
dec
cltd
push
sahf
push
add
js
movsb
call
stc
or
dec
rol
rcrl
int
sar
mov
outsb
ret
daa
cmc
les
popa
sub
imul
xor
repnz
sti
xlat
jl
lea
out
add
aas
cmp
inc
adc
enter
inc
inc
dec
cmpsl
xchg
xchg
mov
jnp
sbb
lcall
pop
mov
shlb
push
fwait
outsb
pushf
jns
aad
test
scas
imul
sbb
loop
fs
mov
lcall
xchg
mov
jp
push
xor
pop
mov
jmp
gs
sub
call
aaa
pop
stos
fisttps
add
fistps
xchg
sub
cld
xor
and
inc
les
jo
les
stos
into
mov
por
movsl
std
repnz
sarb
xor
cmp
mov
jb
push
fimull
insl
pop
cmpsb
mov
sbb
or
cld
and
pusha
sub
mov
sti
lods
jecxz
jo
pop
mov
xor
push
cltd
stos
js
and
jne
pop
outsl
shl
xchg
dec
jmp
jns
mov
push
imul
dec
or
out
shr
movsl
lahf
dec
test
xchg
jae
fdivrl
xchg
bnd
inc
outsl
fcomip
add
pusha
xchg
and
out
mov
notb
pop
mov
and
jecxz
push
fstpl
mov
hlt
dec
scas
jns
scas
shlb
outsl
scas
in
sahf
ja,pt
rcrl
sbb
sbb
stos
fwait
jecxz
aas
loope
cmp
push
add
test
pop
lret
imul
fdiv
mov
imul
jne
mov
sarl
cmp
xor
and
and
ljmp
inc
or
push
lret
je
into
bound
stc
xchg
add
pushf
add
cmp
sub
adc
push
xchg
mov
cmp
outsl
loop
mov
fst
xchg
fistpl
pop
dec
and
cmp
xor
cmpsb
mov
les
mov
ret
push
lcall
out
xchg
xchg
je
ficomps
sbb
aad
pop
imul
pusha
data16
and
sub
test
popf
fcomip
bound
xchg
xchg
subb
dec
cmp
popa
out
add
cmp
jno
js
lret
jmp
mov
test
jno
fsub
decl
or
lds
ret
or
test
or
mov
stc
cld
aam
in
ret
out
pop
xchg
add
mov
dec
bound
int3
push
jp
xchg
sub
mov
in
inc
push
sbb
test
nop
dec
pop
or
mov
dec
dec
mov
push
inc
popf
loopne
dec
and
adc
mov
test
pushf
hlt
repz
jnp
test
int
xor
iret
jae
in
aas
notl
mov
xchg
rcll
es
sub
shll
lds
ja
xor
ss
xchg
pop
sub
lret
mov
pushf
mov
xchg
xor
dec
fstps
popf
outsl
jecxz
adc
mov
sub
hlt
out
or
arpl
inc
cmp
inc
xchg
mov
xchg
inc
adc
xor
mov
or
out
mov
fildl
ja
push
adc
or
scas
pop
je
dec
enter
pop
imul
imul
repnz
jmp
lods
cmpsb
sub
sarl
or
or
sahf
jae
stos
sub
lock
push
aaa
pop
sbb
push
jmp
xchg
inc
in
jnp
jbe
and
cmp
imul
mov
sbb
lcall
fs
xor
pop
das
aaa
mov
loop
jnp
fcom
dec
jecxz
cmp
push
pop
cld
das
inc
adc
test
push
jp
pcmpeqb
nop
or
cmp
fs
mov
fwait
out
aas
cmp
push
lock
and
xchg
mov
jecxz
gs
pop
std
cli
jae
stos
mov
xorl
lcall
mov
pop
or
and
fistl
or
xchg
in
dec
sbb
push
add
inc
or
cmpsl
add
mov
push
xor
repz
cmc
daa
nop
popa
push
and
int3
inc
push
ja
cld
ja
jb
sbb
lea
iret
scas
jg
lret
push
rolb
sbb
or
sub
shl
mov
xor
push
mov
out
insl
adc
sbb
popa
dec
dec
out
push
add
push
mov
xchg
cld
cmpsb
add
repz
cld
loope
mov
test
mov
adc
or
or
sub
lret
scas
sbb
fdivs
mov
adc
out
aas
arpl
push
fs
stc
pop
in
shrb
aam
push
pop
dec
pop
sub
push
xchg
lock
test
cmp
insl
mov
mov
jp
aam
lds
dec
sub
ss
cld
pop
mov
call
jg
cmpsb
out
adc
mov
insl
insb
add
ja
push
pop
pop
aaa
add
xor
push
push
fbstp
cli
jo
jns,pt
das
repz
pop
subb
mov
jl
outsb
scas
mov
test
inc
in
rcr
lahf
int
cbtw
push
iret
inc
loope
pop
push
inc
inc
test
adc
add
fbld
lods
sbb
pop
jnp
mov
inc
push
ds
jmp
inc
mov
adc
ds
or
adc
ret
and
ljmp
mov
and
loopne
jp
cwtl
test
repz
int3
dec
mov
clc
fcoms
or
fs
pop
ljmp
pop
scas
inc
in
test
mov
mov
inc
cld
cmp
test
inc
cmp
call
sbb
in
sbb
and
add
xchg
sti
and
mov
adc
pusha
sub
sbb
in
and
fwait
loop
out
dec
stc
mov
lret
dec
pop
das
pop
cmp
push
add
sbb
pop
adc
inc
or
loopne
ds
push
add
sbb
insl
xlat
cmp
push
sub
cmc
push
enter
scas
inc
jns
dec
jnp
adc
and
or
lods
fmull
lods
mov
push
iret
sbb
les
fcomps
in
push
mov
testl
data16
fcmovbe
mov
mov
jl
jnp
aad
lock
jl
inc
roll
dec
push
jb
ret
loop
pop
stos
jp
dec
fists
inc
push
movsl
adc
adc
out
ds
movsb
sub
adc
js
nop
mov
jle
test
aam
push
repnz
adc
iret
addr16
stos
shr
xor
sub
push
dec
or
inc
sahf
xchg
mov
in
subb
fisttpll
aaa
add
or
mov
or
orb
or
lock
add
or
rclb
mov
shrl
out
push
pop
mov
fst
mov
pop
ret
dec
mulb
sbb
dec
subb
aas
inc
or
pop
xchg
sbb
push
rcll
add
or
adc
bound
in
adc
int
mov
dec
xchg
sub
mov
and
jle
adc
pop
mov
ret
lock
lea
leave
lret
nop
pop
outsb
cmp
jmp
rcrl
mov
lret
js
int
imul
cmpl
pusha
dec
sti
testl
out
into
loop
cmp
es
ret
mov
jbe
outsl
adcl
and
pop
mov
dec
xor
xchg
jno
rolb
mov
xor
xchg
dec
mov
mov
mov
push
ret
cmpsb
push
jno
jg
data16
mov
push
jne
aam
and
add
mov
sbb
mov
push
push
jle
int3
sub
stos
das
xchg
mov
xchg
adc
mov
jle
loop
dec
mov
cmp
scas
fdivs
add
push
test
jno
arpl
xchg
or
aaa
cld
arpl
int
sbb
or
mov
and
std
repz
sbb
dec
cwtl
cmp
mov
add
or
or
iret
outsl
mov
fwait
cmp
fsub
test
and
mov
icebp
out
xor
sbb
xchg
popa
jge
push
adc
lods
push
scas
mov
ja
sti
pop
adc
and
popf
out
int
stos
addr16
xchg
stos
ror
sbb
int3
sub
jl
jge
aad
out
sbb
mov
xor
dec
hlt
loopne
mov
fisubrs
aaa
lds
ljmp
xor
fsubrs
ja
lcall
push
add
gs
in
in
pop
ret
cs
inc
clc
iret
std
popa
or
xorb
in
inc
mov
lahf
ds
mov
mov
dec
lock
cmp
rcll
adc
sti
in
jge
adc
dec
cltd
movsb
shll
bound
fdivs
xchg
inc
xor
push
repz
je
mov
and
sub
push
icebp
mov
mov
mov
cli
jmp
imul
out
dec
jmp
stos
movl
fldl
adc
faddl
imul
lock
pop
inc
loop
lods
jb
mov
inc
ja
lret
pop
push
imul
jmp
add
out
bound
jb
or
and
adc
outsb
pop
or
sub
clc
sub
int
mov
into
mov
fiaddl
pop
push
or
mov
lcall
cwtl
xchg
xchg
inc
lret
adcl
mov
adc
mov
pusha
lods
ljmp
neg
push
mov
imul
mov
xchg
test
jp
mov
cmpsb
je
sbb
xchg
xchg
xchg
inc
dec
aam
lahf
add
adc
mov
adc
insl
loopne
mov
lret
fsubr
sbb
into
lret
or
pop
loope
enter
xor
cld
or
cltd
lds
push
lock
xor
gs
cmp
inc
pop
mov
mov
scas
nop
ja
push
jle
das
fsubrs
mov
shlb
xchg
xchg
jge
inc
scas
xor
leave
fistpl
aaa
or
cld
inc
mov
add
jg
stos
loopne
add
mov
fisubrl
xorl
push
fstpl
pop
roll
arpl
shlb
xchg
cmpsb
call
movsb
add
cmp
xorl
ret
pop
cmp
lock
xchg
pop
sub
mov
xchg
mov
dec
xchg
cmpsl
out
adc
cmp
adc
ds
ss
jmp
sbb
cmc
adcb
cld
inc
add
lret
mov
sti
pushf
mov
push
les
cmpsl
pop
call
aam
cmp
pop
inc
dec
push
adc
mov
in
xor
xor
idivb
ss
imul
mov
mov
out
clc
outsl
sbb
push
xchg
fadds
sub
adc
mov
add
or
xchg
pop
mov
es
mov
ljmp
inc
mov
aas
sub
int
sbb
fsubs
add
lret
inc
add
mov
push
fistl
jle
sbb
scas
outsb
xchg
ja
mov
mov
fldenv
add
push
lods
inc
sub
inc
cmp
mov
sti
adcl
sahf
outsl
jp
or
fwait
test
stos
cmp
jne
xor
fwait
ds
cmpsb
dec
mov
push
pushf
cltd
add
xor
mov
adc
sub
stos
sbb
in
in
xchg
fwait
test
mov
out
push
into
imul
or
dec
sbb
mov
rorb
movsb
and
sub
aas
and
into
xchg
mov
sbb
jae
add
pop
andb
sub
rol
sbb
fcomp
ret
and
iret
pop
mov
pop
xor
test
scas
inc
mov
adc
sub
clc
mov
insl
push
jae
leave
and
mov
mov
ficoml
mov
aam
in
scas
iret
sbb
jle
test
jnp
mov
adc
fwait
pop
repz
or
add
jae
inc
sahf
sbb
dec
into
mov
push
lcall
push
addr16
dec
push
addl
ficomps
push
mov
in
or
sbb
xchg
enter
inc
pop
and
dec
push
jbe
decl
ret
mov
pop
pushf
and
xchg
aaa
sahf
fwait
dec
enter
lahf
mov
stos
and
repnz
or
rclb
xchg
in
cmp
imul
adc
fists
pop
test
imul
loop
mov
iret
stos
lret
movsl
cwtl
sub
fbld
xchg
outsl
int
or
loop
mov
push
or
dec
cmp
push
xor
mov
lods
xor
aad
int
fistpl
inc
and
aam
in
xor
fldl
movl
pop
scas
jl
sbb
pop
mov
and
pop
adc
addl
xlat
dec
in
sahf
loopne
xchg
insl
push
inc
mov
clc
test
test
pop
cwtl
push
out
mov
movups
sbb
and
pushf
insl
stos
in
adc
repz
repnz
mov
adc
mov
fwait
jo
cmp
clc
and
pop
mov
xor
lods
fwait
jbe
add
negb
xchg
xor
cmp
enter
test
data16
sbbl
out
dec
jns
repz
fildll
loope
sub
dec
and
inc
mov
jmp
sub
mov
js
into
outsl
dec
das
push
mov
sbbb
lcall
mov
push
outsb
mov
push
jg
test
mov
icebp
mov
das
sbb
mov
inc
xor
jle
cmpsb
iret
dec
outsl
out
int3
fwait
pop
mov
rol
jge
adc
pop
leave
std
lea
int
xor
lods
mov
mov
xor
int
or
int3
ds
push
xor
lods
add
push
out
mov
and
and
icebp
cmp
mov
ret
dec
pop
loopne
pusha
out
outsl
jb
insl
push
jbe
test
lret
lcall
enter
push
in
add
icebp
dec
hlt
test
nop
push
xor
xchg
gs
xor
cmc
cmpsb
insl
fwait
ret
and
sbb
mov
ljmp
fwait
pushf
ds
inc
sarb
mov
sbb
sbb
dec
sub
jbe
out
lcall
cli
lock
loope
sti
rcrb
sbb
xor
js
aaa
xchg
and
add
jl
xchg
push
or
sub
sahf
out
mov
lret
xchg
dec
pushf
sbb
mov
popa
repz
test
iret
test
inc
pop
push
bnd
rcrl
fsubs
inc
xchg
out
mov
or
mov
push
sar
inc
popf
xor
mov
mov
jo
dec
sahf
in
jle
sub
mov
je
inc
dec
clc
ljmp
aas
xchg
push
or
adc
mov
add
adc
jnp
adc
pop
ja
xchg
cmp
movsb
fcoms
and
add
rorl
push
or
add
in
cli
adc
xor
dec
incb
cwtl
lock
add
and
cmp
or
cmc
and
les
lret
and
fbstp
add
loope
xchg
testb
aam
aad
jnp
lcall
fidivl
push
mov
mov
lahf
repnz
mov
push
ds
cs
mov
lea
xchg
ret
push
lahf
add
sub
mov
mov
jnp
sub
rorb
push
in
dec
dec
jl
mov
dec
mov
push
popf
jg
sti
adc
sub
xchg
lds
mov
lods
stc
ljmp
insb
stc
mov
shrb
cmp
xchg
adc
mov
movsb
cmp
adc
inc
test
add
les
fstl
dec
sbb
mov
lcall
fsts
mov
add
sub
add
loope
aas
andl
cmp
jg
adc
mov
mov
or
jb
sub
push
mov
insl
adc
mov
pop
test
cmp
cmp
cmpsb
pusha
jl
sub
lock
imul
in
sbb
mov
adc
ljmp
shl
mov
inc
cwtl
push
mov
adc
test
adc
pop
fisubl
ret
outsb
fidivl
aas
in
xorb
or
jns
movlps
push
cmpsl
dec
jg
pop
xchg
pop
cmp
xor
add
mov
shlb
or
xlat
aas
push
stos
sub
mov
daa
les
pusha
mov
xchg
cltd
es
xor
cmp
arpl
cmc
test
xor
mov
daa
dec
in
das
test
mov
loope
or
or
stos
lds
mov
inc
fsubrs
xchg
cs
nop
ss
int3
add
in
aas
push
sub
cld
pop
scas
dec
cmpsb
in
mov
jno
push
cmp
mov
pop
xchg
pop
push
cmp
les
mov
jbe
ret
xchg
imul
fisttpll
cmpl
ja
mov
bound
mov
nop
test
xor
xor
orl
and
cmp
mov
cmp
inc
inc
test
lcall
sub
lahf
mov
pusha
fdivrs
lahf
jbe
cld
ja
in
mov
mov
and
mov
bound
popa
inc
cld
sub
imul
adc
jbe
adc
push
lret
nop
fdivl
js
scas
daa
ss
fwait
sbb
push
loopne
scas
leave
cmpsb
shrb
pop
cmp
mov
ret
cli
fwait
add
inc
daa
stc
inc
jge
or
cmpsb
in
pop
mov
in
push
aam
in
jmp
imull
jmp
mov
hlt
push
push
sbb
sub
mov
or
arpl
aaa
sub
sub
das
gs
add
lret
shll
sub
dec
dec
test
sti
pop
dec
daa
cmp
cmp
pop
daa
xchg
vorps
add
adcb
dec
mov
aad
mov
mov
je
test
or
and
dec
stc
imull
fucomip
in
dec
cmc
int
ret
inc
rcll
push
add
and
sar
cmp
gs
jae
add
mov
and
jne
pop
loope
movb
mov
out
mov
jecxz
scas
add
inc
int
or
or
inc
fs
in
in
jl
jno
xlat
pop
outsb
sti
movsb
mov
pop
out
cmp
inc
and
movsb
mov
mov
cld
or
add
sub
cmpl
xor
sub
fcmovnu
lds
outsl
sub
imul
int
inc
lret
inc
mov
es
loop
sbb
faddp
test
daa
and
sub
inc
pop
in
jno
pop
aaa
push
mov
dec
add
sbb
rorl
cmp
mov
ljmp
and
fisubrl
jb
test
mov
adc
popa
and
fimull
bound
mov
iret
movsb
mov
jg
dec
mov
add
aam
lds
xchg
pop
pop
fistps
sahf
sbb
lods
cmp
adc
div
and
std
or
and
shrb
inc
aam
mov
jo
mov
xchg
or
cmp
xchg
leave
sub
mov
and
faddp
adc
mov
or
or
aam
dec
and
jbe
and
aaa
and
sbb
addr16
lods
adc
add
ret
outsb
push
push
iret
shrl
iret
or
sbb
jecxz
pop
push
mov
mov
jbe
push
idivl
or
loope
enter
popl
les
and
mov
arpl
fdivrl
mulb
loope
sub
pop
and
xchg
mov
and
inc
enter
pop
in
xchg
xor
push
das
jae
stc
movlps
mov
insl
push
nop
xchg
sbb
mov
xchg
add
sub
test
dec
pop
xchg
jo
push
int3
addb
into
inc
imul
or
add
xchg
jno
mov
sub
ljmp
sbb
xor
push
push
cmp
fstps
icebp
push
jnp
fmuls
and
push
add
mov
mov
int
test
xchg
jns
in
test
hlt
inc
sub
mov
cli
sub
flds
xor
adc
adc
test
stos
pop
fistpl
mov
cwtl
out
daa
rcl
push
idivb
xor
jbe
and
sti
mov
cltd
xlat
stos
mov
inc
pop
cmpl
aad
pop
and
call
scas
dec
pop
cmovbe
inc
stos
add
adc
lret
sbb
inc
pushf
xor
icebp
fldenv
pop
jb
clc
insb
addr16
inc
out
add
or
ret
mov
shll
hlt
mov
xchg
jb
push
xlat
cwtl
test
mov
lcall
out
add
mov
add
in
das
sub
dec
pop
repz
push
cmpsb
sahf
and
or
jp
jb
xor
cmp
sbb
mov
inc
ret
jns
jns
push
push
push
lods
cmc
out
ret
jns
in
sbbl
setno
insb
jo
mov
and
adc
cs
shll
pushl
insl
jg
addr16
mov
push
dec
outsb
sub
inc
std
fdivl
adc
mov
gs
jno
mov
and
dec
mov
test
out
inc
ja
fldl
cmc
popf
inc
insb
in
test
lcall
adc
stos
in
sbb
mov
add
or
lret
sbb
aad
jle
test
sbb
jle
stos
mov
fmuls
repz
inc
push
pusha
cmp
mov
andb
aad
cmp
pop
rorb
rcrl
in
lock
inc
sbb
xchg
outsl
mov
test
das
and
or
fisttpll
cmc
pusha
out
sub
push
scas
fistpll
xlat
pop
ret
ffree
sbb
xchg
push
pop
push
ret
xor
xor
push
lahf
lea
inc
add
xor
and
jno
mov
mov
mov
xor
mov
sbb
sbb
insl
test
cmc
je
lods
mov
and
inc
mov
xor
call
test
cli
mov
sub
lea
cmp
mov
pop
rorl
sub
pop
lock
ret
mov
xlat
fisttpll
ficompl
pop
fsts
rcll
pop
adcb
cmpsb
mov
xchg
add
pushf
int3
mov
push
sbb
mov
lret
fidivrs
jne
ret
xchg
inc
pop
sti
arpl
dec
int
and
mov
push
add
cmpb
mov
jbe
test
out
outsl
cmp
inc
or
adc
and
or
jno
mov
inc
or
adc
jae
xchg
mov
clc
mov
mov
sbb
inc
and
test
mov
add
xchg
push
imul
imull
push
clc
les
gs
into
out
outsl
bound
cmp
test
inc
aam
dec
popf
push
fwait
xlat
int3
scas
add
xor
fucomip
daa
xchg
xor
dec
stc
jbe
mov
xchg
or
lret
idivl
ljmp
call
sub
sbb
iret
mov
loope
add
xor
xchg
lcall
jmp
test
xor
test
sbb
imul
push
fcompl
jmp
and
xchg
adc
mov
adc
adc
cwtl
notl
outsl
push
jae
xchg
fiaddl
popf
push
cmp
shrb
lea
gs
ficomps
jnp
and
hlt
call
popf
mov
clc
jno
fsubl
push
adc
inc
push
mov
adc
hlt
add
ret
pop
cmpsl
imul
push
negb
push
mov
dec
xor
cli
adc
cmpsb
cmp
cmp
repz
lret
xchg
or
sbb
push
mov
sti
jb
ret
adc
cmp
jmp
pop
loope
dec
mov
adc
out
push
sbb
scas
or
inc
pop
push
loopne
insl
loop
mov
mov
popf
jecxz
sbb
cmp
jae
jnp
sbb
mov
mov
sbb
cmpsb
in
fistpl
sbb
dec
add
fisttpll
pop
push
mov
mov
sbb
mov
cmp
mov
xchg
jb
dec
shrb
sbb
fs
sbbb
inc
idiv
cs
jo
sub
pop
popa
dec
and
sbb
lods
xchg
xor
dec
cmc
push
fs
cmc
in
inc
lods
cmp
sub
pushf
sub
test
nop
inc
push
ljmp
push
or
add
into
aas
sbb
insl
sub
shll
xchg
mov
shrb
mov
adc
loopne
mov
push
mov
ss
push
xlat
mov
pop
cmp
mov
adc
cwtl
in
push
dec
dec
or
mov
push
addl
bt
ja
nop
cmp
mov
fwait
or
int3
mov
push
push
mov
push
cmp
cwtl
loop
lcall
dec
stc
imul
xor
cwtl
sub
or
xor
and
add
or
mov
data16
mov
sub
test
cmp
or
or
test
xor
mov
addr16
insb
js
sub
repz
sbb
inc
popa
imul
pop
cmp
jp
mov
adc
loopne
test
mov
mov
pop
push
fsub
mov
pop
jp
in
shll
mov
sti
sti
jns
out
cmpl
sub
add
pushl
decb
jbe
mov
sub
pop
and
jno
jns
movsb
sbb
xchg
sarb
xchg
lods
aam
xchg
loopne
xchg
jl
jg
arpl
mov
test
push
xchg
push
movsb
loope
insb
mov
or
sub
jnp
divl
mov
aad
push
repnz
pop
jmp
js
push
dec
add
loope
adc
rorl
shl
mov
pop
filds
xor
into
insb
loopne
loop
jnp
inc
fsubrl
mov
mov
mov
mov
sub
test
pushf
sbb
lahf
shrb
xor
push
call
sub
cmpsb
mov
lret
testl
push
jnp
add
xlat
jl
or
mov
shld
shll
out
jb
sar
loope
mov
pop
andl
test
and
je
fadd
movsb
fidivs
enter
pushf
and
push
add
and
inc
and
jle
je
xor
int3
daa
iret
scas
outsb
and
dec
movsb
jne
cmc
xchg
or
push
pop
pop
int3
fildl
jg
sub
cmp
mov
enter
popf
mov
jb
add
jo
movsb
sub
incb
mov
fdivrs
add
mov
xchg
or
and
adc
xchg
jecxz
pop
lret
adc
inc
imul
mov
test
xor
stc
sub
mov
data16
aam
sbb
out
bound
dec
mov
pop
sbb
int
les
cmp
ljmp
stc
jp
fistpl
push
or
stos
jae
dec
mov
jmp
cmp
je
sub
lret
popa
inc
test
xchg
or
cld
add
outsl
pop
push
mov
cmpl
sbb
xchg
xchg
add
test
sub
fwait
inc
scas
xchg
pop
xchg
pop
mov
divb
mov
jb
clc
testl
insl
lcall
in
test
addl
leave
stos
add
or
ret
dec
daa
jecxz
inc
mov
inc
push
xlat
mov
cs
std
push
push
mov
lds
cmp
cli
inc
or
scas
dec
pusha
and
pop
mov
mov
jl
push
mov
adc
xorl
add
repz
shlb
subb
push
insl
pop
cld
xor
call
dec
sbb
pushf
xchg
fstl
insl
inc
dec
sub
insb
push
lods
xor
mov
inc
insl
sahf
movsb
push
mov
push
xchg
mov
push
xor
in
inc
dec
insb
cmp
mov
out
pop
adc
orb
rorb
sbb
std
ds
mov
cmp
stos
sub
sbb
insb
shll
inc
rcrl
push
hlt
pop
ret
lret
xchg
shrl
push
push
icebp
pusha
fildll
andb
jo
test
into
out
flds
push
sub
lcall
test
cld
dec
cli
jge
push
pushf
push
in
sub
mov
add
and
dec
pusha
sbb
mov
jg
and
mov
sbb
or
out
lds
adc
sbb
push
lret
fmuls
test
in
xchg
mov
out
aad
out
jg
push
pop
subb
inc
push
add
lahf
dec
fiaddl
bndldx
sub
fcmovnbe
push
hlt
pop
adc
out
xor
in
lret
adcl
jno
fidivrs
nop
cmpxchg
pop
xchg
jo
lods
cli
fstpt
add
bound
scas
dec
dec
aad
das
movsl
call
out
iret
fnsave
adc
test
daa
rolb
push
cmc
mov
cmp
adc
jns
sbb
dec
add
das
repz
fwait
add
je
pusha
jle
push
jl
lahf
repz
xchg
xor
sbb
inc
add
and
add
adc
dec
or
jo
pop
push
sti
mov
pop
adcl
movsb
rorl
sub
cld
jg
push
test
push
mov
and
pop
jno
in
popa
lods
jg
jb
sbb
push
push
xor
popf
lret
lock
add
dec
add
fimull
lock
sarl
xchg
out
pusha
stos
cmc
popa
fld
sbb
rcrl
fadds
and
lret
lcall
sbb
sub
sbb
pop
sar
sub
js
sub
mov
push
and
push
outsl
out
jmp
jecxz
dec
fwait
rcrl
cmpsl
sbb
pop
mov
movsb
sbb
ss
aad
cmp
add
pop
imul
sub
addr16
scas
push
cmp
mov
and
push
sub
dec
mov
fcompl
add
or
iret
in
inc
insb
and
sarb
push
add
hlt
pop
sbbb
pop
imul
loopne
cs
in
push
xchg
es
mov
or
pop
stos
test
int
out
mov
mov
pusha
cmc
mov
in
inc
cmc
imul
lcall
lcall
jae
gs
push
jmp
cwtl
dec
enter
pushl
mov
lods
loop
mov
inc
mov
and
push
repz
sub
cltd
inc
mov
adc
scas
xchg
lahf
cwtl
loopne
jb
sbb
fldl
add
or
push
push
fnstsw
aam
shrl
call
filds
sbb
or
xor
fsub
pop
jmp
loope
loope
movsl
and
mov
fsubrs
push
sub
add
std
rcrb
mov
adc
adc
mov
mov
sbb
lds
outsl
xor
pop
mov
lds
xor
stos
cmp
int3
das
out
adc
test
das
mov
mov
add
pop
ficoml
push
out
out
stos
sbb
inc
mov
fmuls
cwtl
cmpb
push
scas
push
psubw
inc
push
sub
dec
cmp
pop
stos
or
fildll
push
out
jg
testl
sti
repnz
roll
inc
and
andb
inc
mov
lods
push
dec
xchg
cld
mov
xchg
mov
jne
or
imul
iret
add
inc
sub
cmpsb
fcmovnbe
inc
addb
or
sbb
test
fadds
hlt
iret
jg
jecxz
mov
in
and
cmc
cld
cld
lds
pop
in
push
cs
clc
stos
cltd
ficoml
xor
in
sarl
xor
mov
call
rclb
xor
stos
inc
adc
jb
sub
xlat
xchg
xor
xchg
cs
sbb
rclb
cmpb
inc
mov
sbb
push
bound
test
lahf
or
mov
xchg
jmp
jle
enter
push
dec
stos
push
shlb
dec
xor
in
frstor
je
add
fcoml
aas
loop
fisubrs
outsb
xchg
mov
jp
loope
pushf
in
sbb
js
jmp
aas
pop
subb
push
jl
push
push
les
mov
shlb
into
xor
into
pop
loop
mov
xchg
jae
cmpsb
adc
pop
inc
gs
mov
lahf
adc
loop
into
dec
push
or
jnp
bound
mov
push
and
push
lods
fisubl
add
fidivl
xor
mov
or
adc
rol
int3
out
adc
in
cmp
ret
rcll
fistpl
pop
ljmp
nop
sti
or
sahf
and
test
js
cmpsb
adc
lods
stos
nop
lcall
cltd
xlat
mov
push
sbb
popa
insl
dec
lahf
pop
repnz
push
xor
insb
in
pop
xchg
mov
mov
push
mov
in
bound
xor
test
aad
dec
mov
pushf
pop
and
push
andb
xlat
aad
dec
in
jp
xchg
fistl
lcall
stos
imul
outsl
mov
in
sub
fs
dec
pop
xor
fdivrs
cltd
xor
cmp
push
and
and
into
loopne
xchg
outsl
cmp
mov
test
jg
fadds
cs
jo
negl
jle
cmpsl
xor
pop
mov
and
cmp
scas
jns
dec
xor
sti
sahf
ret
and
int3
jp
in
les
movsl
js
sub
aad
cmpsb
enter
jp
es
lods
sub
out
cld
adc
mov
loopne
xchg
mov
and
sub
adc
lods
xor
cmpsl
dec
loopne
imul
fimuls
cs
mov
mov
fistl
jg
das
popa
jns
shl
inc
jmp
sub
jmp
icebp
mov
lea
sub
rcr
les
movsl
cli
std
adc
or
add
fwait
jp
orl
mov
lret
jle
adc
call
mov
push
repnz
cmp
enter
mov
outsl
pop
cs
ja
lret
pusha
pushf
mov
xor
mov
mov
and
inc
icebp
jns
pop
stos
aam
pop
push
fldenv
dec
lahf
mov
icebp
jecxz
and
pushf
adc
iret
bound
cmp
lods
adc
pop
inc
cmp
mov
addb
push
add
xor
iret
mov
dec
cmp
lock
lahf
adc
fst
rcl
mov
add
ljmp
push
aam
lcall
mov
mov
push
js
adc
mov
inc
jle
std
popf
test
ljmp
hlt
sbb
add
mov
jl
testl
scas
jae
mov
cmp
arpl
add
mov
stos
sbb
test
xchg
into
mov
in
lock
lret
fldenv
xchg
mov
fs
jne
xchg
xor
inc
rcr
sub
repz
add
lret
mov
add
das
add
dec
sub
jb
inc
bound
mov
stos
jbe
cmp
dec
or
cmp
out
or
pop
cmp
outsl
addr16
bound
adc
and
xlat
xchg
jne
pop
xchg
cmp
push
pushf
in
test
xchg
aad
daa
xlat
insb
std
out
arpl
mov
xchg
mov
out
ja
test
mov
xor
jp
lods
push
pop
pusha
push
jge
sub
cmp
popf
scas
cmp
xchg
and
xchg
xor
adc
xor
pop
mov
les
xchg
into
lret
or
insb
pop
cmpsl
lods
xlat
mov
mov
adc
out
push
stos
dec
and
jno
pop
sbbb
shlb
negl
jl
sub
inc
xor
pop
leave
cmc
xchg
adc
ds
xor
dec
mov
test
mov
mov
stc
add
mov
shl
stos
ja
sti
cltd
pop
negb
xchg
scas
in
and
mov
bts
or
ja
mov
pop
cmc
add
mov
test
push
inc
gs
popa
popf
movsl
and
jp
por
mov
mov
adc
stc
sub
lret
sub
sub
mov
pop
outsb
daa
mov
es
addl
nop
scas
sub
sbb
insl
adc
pop
xchg
out
adc
add
xlat
cmp
dec
xor
dec
push
imul
mov
pop
pop
xor
ret
aad
enter
cmc
xlat
shl
pop
repz
mov
enter
hlt
sbb
loop
mov
cmp
jb
and
xor
andb
cmp
adc
bound
xlat
pusha
mov
lock
add
xchg
mov
push
imul
jnp
filds
jle
cs
popf
sub
pop
and
add
add
repz
push
dec
xchg
mov
jg
lods
in
into
and
sbbb
pop
xchg
dec
push
push
mov
mov
push
mov
or
and
and
mov
out
mov
cs
xchg
scas
mov
xor
xchg
inc
mov
pop
mov
dec
mov
aas
ss
pop
std
das
test
inc
pop
testl
testb
shr
les
mov
movsl
sub
and
fmul
xor
sysenter
pop
xor
and
push
testb
into
or
mov
and
inc
imul
sbb
jp
out
and
int
repz
inc
cs
in
clc
mov
aad
xor
fwait
jle
in
jae
xchg
pop
and
mov
mov
xchg
sub
sub
fildl
scas
std
pop
mov
push
jnp
imul
jecxz
lret
insl
jmp
mov
add
jo
lret
test
push
jnp
js
pop
adc
push
dec
sahf
inc
mov
mov
into
in
inc
ficoms
pop
int3
icebp
cmp
add
sbb
mov
or
jne
mov
movsl
test
ret
out
and
cmp
add
int
xchg
icebp
and
push
mov
rcrl
aad
hlt
jecxz
inc
add
xchg
inc
mov
jg
in
std
sbb
lods
mov
dec
adc
adcl
fisttpl
shlb
js
lods
sub
aad
push
jo
ss
lret
mov
test
data16
out
imul
mov
sub
xor
jno
xchg
dec
cmc
arpl
imul
adc
mov
call
xchg
or
icebp
sub
es
xor
sub
outsl
xor
into
sbb
stc
xor
test
ds
enter
adc
adc
loop
loopne
dec
dec
jbe
fistpl
enter
enter
inc
and
sbb
jmp
xor
jo
pop
scas
push
outsb
add
pop
jp
test
js
stos
xorb
adc
cmp
and
adc
push
jp
cli
cmp
or
pop
xchg
iret
cmp
lret
pop
and
sbb
lock
inc
rorl
sbb
fldt
jae
jnp
and
and
sbb
jbe
sub
cmc
and
dec
xrelease
aaa
or
jge
dec
add
jge
lahf
sarb
loop
inc
jmp
mov
or
fucomp
mov
push
jp
push
cmp
or
stos
das
jle
aam
call
test
push
out
icebp
dec
fsub
fdivrs
add
ffree
sub
push
cmp
aas
loop
cwtl
int
push
jmp
shll
mov
mov
add
enter
lcall
repnz
and
xor
push
bound
mov
lea
mov
imul
mov
and
cltd
rcrl
xchg
loop
js
clc
xor
ljmp
rcrb
or
dec
mov
and
sarl
pop
iret
insb
repnz
movsl
pop
sbb
lods
jmp
xor
mov
out
sub
jbe
fildll
mov
shl
mov
or
test
jo
pop
mov
xchg
sbb
fbld
repz
xor
jb
mov
sbb
hlt
dec
dec
lcall
xchg
xorb
xchg
xor
notb
dec
push
das
mov
pop
shrb
mov
mov
xchg
cmp
andl
push
js
and
fcompl
std
cmc
mov
testb
repnz
popa
aam
adc
repz
out
and
mov
dec
fstl
mov
inc
sbb
call
lods
ljmp
cli
mov
inc
stos
xchg
sub
xor
std
pop
lahf
or
ret
lods
add
mov
in
pusha
push
rorb
or
les
ror
jns
jl
cmpsb
cmp
je
pushf
or
xchg
adc
push
int3
mov
mov
test
movsb
pop
jmp
jbe
mov
inc
inc
mov
outsb
gs
sub
cmpl
push
mov
pop
out
loope
jle
daa
in
lahf
imul
data16
mov
sub
test
loop
ja
or
adc
lds
iret
adc
pop
mov
and
movl
lret
mov
shrl
inc
jns
inc
push
xchg
pop
stc
lods
hlt
popf
dec
flds
ret
push
add
pop
pop
out
dec
or
sub
test
push
ds
mov
jbe
test
cmpb
and
shll
or
out
into
popa
test
call
add
push
fwait
push
dec
in
sub
pop
push
mov
dec
mov
jae
sbb
and
adc
add
xor
cmp
inc
aaa
add
sbb
js
cs
push
stos
aaa
add
inc
test
shlb
dec
push
adc
dec
sbb
into
xchg
fdivr
int3
fs
mov
shl
mov
adc
sar
cmp
fwait
aam
lcall
sti
push
mov
sbbb
dec
shlb
fcom
or
aad
push
movsb
sbb
jp
lods
out
sbb
and
ret
fs
sbb
or
adc
popf
dec
jl
out
xor
fldcw
mov
in
or
pop
outsl
mov
add
std
xor
scas
lock
mov
xlat
or
jns
daa
jecxz
add
dec
pusha
mov
lcall
inc
fwait
pop
rcrl
out
into
add
movsb
pop
decl
test
mov
rcll
movsb
in
dec
orl
test
cmp
xchg
push
sti
push
and
js
sbb
icebp
jecxz
fadds
test
push
mov
xor
jb
int3
sub
xchg
adc
sub
or
cmp
aas
test
lcall
mov
jp
imul
push
mov
aam
fmuls
mov
stos
push
mov
adc
pop
pop
and
cli
hlt
mov
popf
mov
jmp
mov
int3
mov
es
pop
out
jmp
pop
incl
pop
sub
mov
popa
add
cmp
sub
daa
es
jae
mov
jb
push
jne
lret
sub
push
call
inc
decl
aad
xchg
sbb
nop
icebp
push
mov
cs
jmp
inc
and
movsb
pop
and
jno
cmp
fiadds
jge
cmp
jg
inc
sbb
adcb
add
pop
and
cmc
push
les
mov
lea
dec
and
fldl2t
add
jge
test
fidivs
shll
es
mov
dec
mov
lea
fldt
add
mov
or
dec
or
push
sub
ljmp
cwtl
jb
fisttpll
dec
cli
stos
pop
movl
aaa
nop
ss
dec
cmp
mov
out
adc
fst
inc
and
push
adc
cmp
or
xchg
hlt
cmp
icebp
jle
dec
add
cli
sub
xor
mov
iret
xor
loop
pusha
sbb
in
out
inc
sbb
mov
dec
mov
out
flds
test
nop
jbe
pop
xor
push
cmp
test
andl
popf
or
xchg
lods
cmp
sbb
add
and
lods
inc
sahf
or
push
test
cmp
gs
fs
aaa
xlat
add
ret
xchg
imul
inc
cmpsl
cmpb
pusha
sbb
out
jge
mov
add
cmc
push
les
jae
and
mov
lret
sub
das
ficompl
lcall
xchg
xor
xchg
fcmovnbe
mov
inc
bound
int
js
mov
sub
rcl
ss
mov
and
fidivl
push
bound
add
lahf
xchg
lcall
out
jmp
sbb
mov
mov
jmp
pop
cld
inc
leave
or
test
and
in
lock
fmull
pusha
loop
sahf
or
loop
add
mov
cmc
mov
add
js
fimuls
mov
or
pop
push
pop
jmp
clc
ficomps
dec
sub
mov
dec
testl
imull
into
jb
jle
sbb
lret
loope
sub
xchg
ret
fists
leave
ljmp
test
inc
xor
sbb
mov
sbb
mov
cmp
repnz
lcall
data16
ja
mov
xchg
loop
dec
rcl
lock
daa
cmp
lret
imul
out
xchg
inc
adc
or
jnp
push
call
test
dec
cmp
pop
scas
sarb
add
call
lds
xchg
out
stc
lret
lcall
jae
jnp
popf
push
mov
dec
enter
leave
adc
push
sbb
or
push
jbe
push
xchg
mov
int
sbb
pop
lods
shrl
lea
fwait
push
iret
xor
shl
and
push
adc
test
jno
test
imul
sub
mov
xchg
or
fistpl
pushf
cwtl
mov
push
lock
pusha
lret
or
sbb
mov
cld
jp
and
gs
adc
ds
jnp
jnp
inc
je
lret
jbe
pop
addb
inc
dec
cltd
cld
lret
cmp
loopne
mov
mov
out
push
add
in
cmp
jb
jns
fs
dec
pop
dec
xor
push
pop
je
inc
jp
sub
mov
adc
inc
icebp
xor
mov
mov
test
movsb
mov
popa
bound
lcall
cwtl
pop
pop
call
mov
test
xchg
sbb
sub
cmp
jne
xchg
jno
inc
inc
mov
xor
fwait
cltd
fsub
dec
xchg
loopne
xchg
and
cmpsl
imul
xor
fsubs
push
xor
mov
adc
sarl
sbb
and
roll
bound
insl
movsl
sbb
repnz
sbb
xchg
xchg
lcall
cmp
sub
cmp
pop
dec
add
in
ljmp
or
pop
sub
pop
in
daa
dec
lahf
dec
mov
cs
cmp
cmc
jo
xor
and
adc
or
mov
out
add
out
aad
dec
leave
mov
sbb
dec
dec
xor
xchg
repz
push
addr16
mov
and
sbb
xchg
xchg
scas
gs
lret
cs
negl
das
push
addl
cmp
roll
movsl
ficoml
or
add
ljmp
push
dec
jmp
out
add
mov
jmp
pushf
pop
add
inc
add
inc
push
mov
sbb
pop
enter
jecxz
dec
mov
movsb
rcrb
ljmp
pop
cmp
mov
adc
cmpsb
sub
imul
cmpsl
jbe
xorl
sub
imul
fcmovb
and
push
bound
cmp
push
scas
out
xchg
aad
mov
lcall
lods
inc
data16
pop
cmp
imul
jo
cmp
mov
push
inc
lcall
lret
cmp
jb
jle
insl
clc
cmp
cld
xchg
sub
sbb
jg
inc
inc
cmp
sbb
out
xor
inc
gs
in
mov
dec
cmp
loope
int
push
jb
ret
push
mov
leave
xor
add
dec
push
repnz
mov
pop
add
fwait
fwait
lahf
lahf
daa
sbb
hlt
add
or
int3
fwait
dec
int
hlt
call
lret
clc
in
jnp
shr
ret
sarb
cltd
shlb
push
cwtl
inc
sbb
cmp
xor
add
test
test
inc
xor
sarl
mov
out
add
push
mov
push
push
push
aas
mov
cmp
dec
ja
pop
insb
stos
mov
pop
lcall
in
sbb
outsb
ja
cmp
and
loope
mov
cmp
inc
test
pop
cmp
lahf
iret
bound
inc
ret
sahf
pop
ja
je
aas
dec
add
leave
mov
inc
mov
call
pop
inc
arpl
adc
dec
enter
sbb
adc
push
pop
shl
sbb
sbb
or
aad
pusha
pop
icebp
mov
outsb
xor
push
dec
xchg
movsb
lods
subl
int
sahf
and
mov
dec
testb
rolb
inc
and
dec
icebp
in
outsb
mov
or
xchg
jns
bound
dec
cmp
pop
orb
add
mov
add
dec
sbb
sub
cwtl
mov
pop
push
cmp
cmpsb
inc
stos
mov
xchg
pop
jecxz
inc
jl
xchg
lods
push
ret
dec
addb
push
mov
jb
mov
jg
aad
cmp
pop
xor
xor
add
mov
or
imul
jno
scas
in
int
sbb
jno
jge
push
sbb
stos
and
popf
ja
inc
das
dec
jmp
aam
int3
lea
test
cs
leave
hlt
xor
movsb
cltd
mov
cmp
sbb
lds
sbb
lods
ljmp
je
clc
movb
sub
inc
inc
dec
cmp
xchg
out
push
xor
aas
data16
int3
mov
fists
ljmp
and
icebp
insl
and
add
dec
ja
push
pop
lcall
js
scas
mov
rorb
mov
or
imul
add
or
cmp
jmp
pop
insb
in
in
pop
lret
dec
mov
je
cld
mov
insl
cs
adc
es
sub
jle
or
jmp
lahf
fcompl
sbb
adc
lret
push
je
or
ret
pop
cmpsl
push
int3
cmpsl
in
jne
inc
add
lods
adc
adc
push
sbb
sahf
jl
je
or
shrb
mov
jle
test
mov
cld
pop
repnz
dec
dec
or
xchg
sbbb
ljmp
jae
mov
mov
inc
fwait
je
mov
out
adc
xchg
fidivs
and
xchg
bound
add
push
loopne
push
or
mov
and
push
mov
push
lcall
cmpb
outsl
lret
xchg
mov
outsl
rcrl
pop
lods
xchg
dec
out
or
sub
divl
xchg
adc
sbb
adc
lret
and
gs
add
adc
pop
inc
sti
push
xchg
data16
movsb
push
inc
adc
cs
xor
pop
les
jo
hlt
out
fsubrs
pop
mov
stos
dec
sbb
jo
push
not
js
mov
aam
lock
stos
in
popa
test
inc
add
cmpb
sti
push
sahf
mov
popa
cltd
hlt
mov
jecxz
daa
scas
push
lea
push
mov
daa
cmp
repnz
vpaddq
fwait
jnp
out
add
out
mov
xchg
ja
mov
testb
jns
xchg
fs
add
mov
or
std
mov
nop
ljmp
jl
ds
mov
out
mov
cmp
popf
dec
arpl
rcll
fcomp
mov
shll
jbe
mov
cwtl
lcall
mov
mov
jge
cmpsb
in
sub
jne
cld
sub
push
xor
aam
mov
fcompl
or
nop
fbstp
sarb
sub
xchg
fs
jae
mov
loope
mov
call
pop
sbb
cmpsb
xor
std
mov
or
sarl
xchg
pop
insb
shll
aad
cld
jnp
cmp
inc
cs
iret
sub
pusha
pop
movsl
pop
fwait
and
imul
jo
cmpl
and
mov
pop
xchg
jne
fildl
mov
push
and
lcall
cmp
pop
ja
sbb
sub
enter
jb
jnp
call
out
sahf
sbb
xor
mov
jns
inc
cmp
cs
mov
sbb
into
loop
cltd
jb
adc
jp
jp
lahf
mov
insl
shrb
xchg
dec
aaa
sahf
lock
mov
or
cld
fisubrl
movsb
aas
push
ljmp
shl
neg
xchg
cwtl
loope
xchg
and
sbb
lret
mov
rcl
outsl
push
test
mov
test
lret
jmp
int
jecxz
test
mul
clc
out
and
xchg
pop
push
fcomps
ret
nop
cmc
mov
cwtl
cmp
shr
xor
jg
inc
sub
hlt
add
out
rclb
sbb
or
imul
sti
mov
push
dec
jae
push
loope
lret
inc
mov
test
sub
fldt
dec
mov
dec
inc
sub
mov
push
and
xor
push
mov
das
mov
sub
mov
inc
icebp
xor
and
lds
minps
sbb
xchg
repz
fidivrs
cmp
stos
sti
jecxz
popf
daa
push
mov
pop
cmc
int
pmullw
xchg
test
xor
mov
out
add
nop
mov
popf
test
ja
inc
rcr
xor
push
sbbl
lahf
xchg
xchg
and
leave
icebp
sti
repnz
pop
pop
jge
fidivs
inc
rorb
and
in
in
imul
fstpt
repz
and
cwtl
push
call
in
inc
xchg
mov
mov
add
fiadds
pop
movsl
pop
push
mov
test
cmpsl
in
mov
into
jmp
inc
dec
call
fstps
mov
mov
hlt
insl
mov
fcompp
mov
ret
into
xor
iret
enter
push
push
xchg
add
cwtl
in
xchg
xlat
mov
mov
add
mov
rolb
push
mov
mov
gs
stos
mov
sbb
imul
xchg
daa
sub
sbb
mov
das
mov
pop
in
xchg
aad
out
iret
std
mov
ret
lods
ret
adc
push
sbb
inc
sbb
int
or
cmp
mov
mov
xor
lret
shlb
jb
jecxz
pop
insb
das
or
add
cmp
jp
mov
cmc
adc
adc
imull
or
pushf
xor
test
add
in
push
movsl
sahf
xor
cwtl
iret
jae
push
lcall
cmp
pop
add
mov
imul
jo
popf
shl
mov
loope
mov
mov
and
or
pushf
push
dec
adc
hlt
mov
jae
sahf
addl
cmpsl
inc
pop
xor
or
popa
push
push
lds
xor
cmp
in
inc
xlat
ds
dec
mov
cli
inc
cmc
mov
mov
and
dec
or
mov
push
mov
jo
mov
lea
cmp
sub
sbb
lods
mov
aaa
mov
enter
mov
lea
adc
push
adc
jnp
dec
xchg
push
mov
sbb
aas
loopne
clc
outsl
jecxz
jle
jns
mov
dec
adc
xchg
inc
ficompl
loope
into
inc
cs
idivl
mov
stos
jmp
mov
scas
shl
mov
dec
pop
test
push
shrb
pushf
sbb
cmp
xor
sub
push
lahf
sarb
push
lret
mov
cmp
cmp
xor
pop
enter
sub
fstl
inc
mov
adc
adc
or
dec
mov
outsb
rclb
dec
sbb
subb
jnp
test
lret
and
movb
es
clc
loopne
cmp
aad
or
ret
jae
mov
cld
out
cmp
xor
dec
or
insb
jmp
sbb
jo
mov
cmp
into
dec
xchg
ret
mov
cli
adc
jne
mov
test
dec
xor
push
shl
mov
or
mov
sub
pop
mov
ret
adc
int
imul
push
imul
and
dec
aas
inc
pusha
adc
push
xchg
imul
sub
xchg
mov
movsl
daa
call
pop
movsb
js
mov
xor
sub
cmp
test
das
cmpsb
mov
sbb
pop
sti
push
stos
lret
fisubrl
xchg
mov
mov
jmp
testb
xchg
lcall
push
sahf
jne
test
movsl
frstor
or
adcb
xchg
mov
cltd
pushf
mov
mov
mov
test
adc
out
in
jp
add
pop
jmp
mov
fisttpl
movsl
xchg
sub
mov
fs
dec
addb
push
mov
jae
icebp
fldenv
mov
nop
dec
dec
fistpl
mov
jmp
aad
or
lea
inc
adc
ljmp
sti
in
xchg
mov
mov
cs
xchg
call
add
adcb
dec
in
xor
enter
test
and
imul
cli
test
subl
mov
fwait
dec
sbb
fnstcw
inc
int
xor
adc
push
mov
ds
lock
ss
lret
cmp
lock
jecxz
xchg
sub
cmpb
imul
shll
and
add
int3
dec
divb
cmp
pop
loop
xchg
pop
sbb
loopne
imul
pushf
jecxz
adc
ds
dec
jl
ja
lahf
fwait
mov
add
inc
divb
xlat
xchg
and
scas
ds
or
mov
movsb
jae
inc
lock
cwtl
mov
mov
pushf
or
xor
push
sbb
xor
cli
cmc
test
xor
aas
and
test
jmp
mov
rorl
pop
jmp
lret
rclb
adc
push
mov
das
cwtl
aas
cmc
pop
jp,pn
arpl
jnp
push
jle
cmp
xor
or
fisubrl
arpl
je
stc
loope
fcomps
xor
popa
and
sub
iret
in
cmpsb
out
inc
fscale
mov
sahf
push
pop
fiaddl
repnz
roll
ret
xchg
inc
push
cs
mov
pop
nop
and
into
aad
xchg
sub
pushf
jge
cmpsb
outsl
or
and
sub
sub
cli
mov
pop
lods
xor
mov
push
inc
xchg
or
jbe
fidivrs
xchg
stc
ljmp
in
add
out
fstpl
cmc
push
or
aam
pop
arpl
fs
jne
aad
or
mov
cli
xor
int3
incl
loop
or
loop
pop
and
bound
mov
dec
xchg
add
into
dec
aaa
add
push
adc
xchg
lods
out
daa
lea
pop
or
leave
mov
sub
add
mov
das
popf
dec
ret
int3
loopne
mov
pop
dec
loop
sub
push
jmp
jmp
inc
adc
pop
sahf
dec
lret
mov
inc
lret
add
mov
imul
mov
mov
adc
inc
cmpsb
aad
mov
xchg
popa
xchg
pusha
ds
jge
cmp
insb
movsl
repnz
ss
pop
xchg
testl
jmp
popl
es
out
cld
add
fnstsw
dec
stos
lods
icebp
sub
jb
jns
rorl
inc
adc
mov
xchg
inc
xchg
imul
xchg
orb
loope
ficoms
mov
adc
and
and
mov
or
adc
mov
cmc
cmp
add
pop
xor
push
dec
ss
jbe
lds
xor
fnstenv
push
jno
pop
add
push
dec
addr16
jns
mulb
dec
arpl
cli
adc
xchg
or
daa
loope
fildll
clc
gs
xor
push
mov
stos
out
lcall
in
or
aas
out
ds
setne
dec
lods
sub
shrb
out
fwait
mov
orl
mov
xor
add
stc
inc
inc
fnstsw
inc
lcall
push
in
lcall
mov
sub
adc
cmpsb
push
scas
push
pusha
sti
add
push
movsl
sub
hlt
pushf
pop
test
or
dec
jle
loope
mov
add
lahf
add
js
mov
fsts
xor
mov
in
icebp
arpl
mov
inc
xchg
lea
pop
subl
das
lret
jns
xor
push
pusha
lahf
dec
inc
adc
inc
pop
jmp
sbb
mov
or
add
sub
xlat
mov
insl
test
dec
lret
das
fdivs
bndldx
push
pop
js
roll
pop
push
mov
shll
xchg
jae
push
inc
or
and
insb
loope
mov
mov
rorb
lcall
pop
pop
inc
arpl
nop
std
leave
rclb
adc
add
sbb
cmp
and
sub
xor
mov
sbb
mov
xchg
mov
inc
in
cld
gs
jae
mov
inc
in
mov
arpl
dec
outsl
mov
in
jg
in
das
jno
sarb
jb
in
sub
inc
pop
ljmp
mov
pushf
out
push
inc
fbld
cli
xchg
imul
mov
inc
lds
out
arpl
adc
outsl
in
push
mov
xchg
sbb
pop
lds
pop
pop
pop
mov
xor
insb
push
pusha
lret
js
xchg
arpl
inc
pop
xor
push
sub
cmp
cmp
mov
ja
cwtl
and
in
outsl
jg
xchg
cltd
insb
adc
sub
bound
cltd
test
in
cmpsb
scas
xchg
movzwl
pop
mov
loope
pop
sub
xchg
pop
mov
jo
repnz
ret
mov
sub
jnp
cmpb
mov
mov
mov
xor
dec
sub
pop
mov
dec
addl
enter
pop
xor
shrb
fcmovnbe
fcmovnbe
cmp
adc
dec
mov
sub
push
mov
ljmp
fucomp
in
pop
inc
and
out
mov
xchg
sbb
jle
jg
cmpb
cmc
pop
lods
push
test
ljmp
sbb
sub
jne
mov
and
je
push
lahf
outsb
push
roll
jne
ja
pop
and
cmp
aad
jb
roll
out
or
jae
mov
push
dec
mov
aaa
shlb
mov
mov
cwtl
mov
imulb
mov
imul
fldl
inc
ljmp
jecxz
cmp
lods
hlt
and
inc
mov
push
pop
mov
fwait
mov
loope
nop
adc
ljmp
inc
and
movsl
cmp
dec
push
popa
daa
das
rep
inc
xor
adc
test
int
sub
mov
jle
cmp
push
jae
adcb
pop
ret
or
stos
sub
scas
and
push
sbb
out
ror
testl
fdivl
mov
out
and
sbb
push
mov
sub
rorl
push
pop
test
enter
fists
sbb
adc
mov
rcl
inc
sub
imul
es
rcrb
popa
pop
inc
push
inc
xchg
enter
add
pop
add
nop
cmpsl
adc
cmc
call
sysenter
add
fs
nop
xchg
sbb
popa
mov
mov
mov
jno
out
cmp
cwtd
xor
cmp
into
out
daa
mov
mov
rcl
data16
dec
rcr
cmpsb
es
pop
out
imul
mov
ljmp
add
adc
scas
fnsave
mov
pusha
xor
test
andl
sti
inc
shrb
sub
cmp
stc
les
xcrypt-ctr
cmpsl
sbb
dec
jmp
das
dec
xor
push
add
lcall
insb
test
fisubl
xor
mov
ret
sub
adc
lock
imul
imul
push
and
jmp
lods
inc
scas
lods
and
popf
add
and
gs
or
push
inc
push
aaa
aam
xchg
jl
fidivrl
mov
aad
shrl
add
add
sub
dec
lahf
push
insl
sub
cmc
dec
ss
xchg
jmp
dec
sbb
shll
push
cmpsl
hlt
jmp
inc
sbb
cmpsl
xchg
cmpsl
sbb
addr16
shlb
and
dec
lahf
xchg
jl
dec
dec
mov
call
nop
push
movb
push
lods
ja
ss
cmp
dec
sub
sub
push
jb
dec
add
sbb
pop
adc
push
loopne,pt
fadds
iret
xorb
jb
test
sub
cmp
cli
in
orb
inc
mov
cli
aam
jnp
sbb
jno
pop
mov
pop
sub
in
cltd
push
mov
mov
lret
push
dec
pop
and
mov
or
rclb
jo
xor
and
cs
stos
movsb
out
or
or
inc
repnz
loopne
mov
sar
push
mov
push
mov
xchg
hlt
testb
mov
rcr
andl
movsl
cld
inc
xchg
xchg
mov
fisubl
int3
sub
jb
add
xchg
iret
jno
cmp
leave
mov
fidivs
pop
or
xchg
push
dec
dec
adc
jmp
push
sbb
fnsave
popf
or
dec
mov
jmp
daa
push
and
in
sbb
loopne
lret
xchg
cwtl
rolb
dec
add
movb
inc
lahf
xor
xchg
push
in
int
aad
jge
cmp
scas
iret
adc
dec
cmpsl
scas
jmp
popa
pop
pusha
pusha
adc
cmp
ret
arpl
fists
repz
cmp
mov
daa
cli
movb
mov
xchg
les
mov
cld
lods
popf
lcall
movsl
jbe
imul
jb
inc
mov
pop
add
adc
mov
popa
xor
repnz
ljmp
clc
xchg
push
xchg
xor
push
mov
push
sbb
bound
in
xchg
mov
mov
sahf
mov
sahf
sbb
pop
add
push
loop
xor
fnstenv
and
loop
je
jmp
lock
ret
jecxz
je
repnz
mov
mov
jb
xchg
push
rclb
test
adc
sub
je
lcall
arpl
mov
or
inc
jl
call
add
push
push
cmp
outsb
adc
in
cmp
cmpsl
inc
repz
cs
xor
outsb
shl
test
enter
int3
scas
add
out
add
repz
xchg
or
mov
out
test
cmp
fstps
pusha
insb
push
dec
cmp
sub
push
sub
int3
and
jle
subl
fs
int
inc
clc
loope
les
inc
dec
out
fdivrl
jno
push
fldl
sti
push
xor
sbb
addl
test
imul
mov
sub
arpl
or
sub
add
je
cmp
ficoml
push
and
les
mov
mov
xor
push
sub
mov
ljmp
push
push
cmp
cli
out
xor
mov
vpextrw
lds
cs
xor
jae
push
mov
repz
lret
pop
adc
xchg
mov
out
shll
movsb
dec
sahf
pop
inc
test
mov
sub
movl
sub
stos
or
in
sub
add
inc
jb
lea
scas
jns
pop
adc
andl
xchg
and
clc
mov
stc
fs
ja
aas
push
fwait
mov
and
out
shll
push
mov
jecxz
and
jns
pop
dec
cli
push
inc
adc
stos
mov
cs
adc
mov
mov
movsl
xchg
lret
or
cmp
dec
daa
sub
sub
sbbl
repz
or
fadds
imul
add
adc
cmpsb
push
inc
bound
aad
sbb
xor
fmuls
iret
inc
test
jl
mov
dec
out
pop
jno
adc
dec
std
adc
xchg
sub
std
adc
fs
mov
js
in
mov
ficompl
nop
in
aam
cmpsb
cmp
jo
dec
int3
mov
adcb
and
and
mov
fucomp
xor
push
sbb
add
shr
and
sub
nop
cmp
mov
mov
or
test
in
cmpsl
xchg
gs
and
mov
or
dec
in
push
pop
popa
shll
outsb
imul
xchg
mov
mov
and
aaa
cltd
adc
push
fs
dec
fcoml
mov
cmp
sub
jnp
nop
mov
test
pop
dec
pop
cmc
out
xor
fnstcw
add
je
outsl
pop
les
mov
rcr
popf
mov
mov
and
push
add
std
push
add
mov
mov
fwait
mov
test
enter
rclb
add
inc
push
dec
clc
dec
jno
sti
pop
rorl
cltd
aad
fldcw
stos
shlb
push
xchg
and
or
fbld
cmpsl
loopne
adc
adc
or
jle
fs
dec
loope
clc
mov
pop
inc
dec
mov
mov
ja
sub
push
jb
loope
dec
push
retw
sub
sub
das
test
lahf
xchg
dec
js
shlb
inc
sub
pop
loope
test
cs
mov
sbb
lret
xor
adc
xorb
mov
imul
cmc
icebp
gs
addr16
mov
lds
cmpsl
sub
sbb
leave
mov
dec
into
push
shlb
lds
ficompl
xor
dec
cmp
sub
push
mov
mov
xchg
cmp
push
pop
xor
je
popl
cmpsb
stos
add
pop
shlb
adc
dec
sbb
loopne
adc
push
dec
das
cld
arpl
mov
or
sbb
jnp
nop
fxch
xchg
in
push
xor
xchg
inc
ret
jne
mov
or
iret
jge
jl
shlb
mov
stos
cltd
ret
inc
pop
test
rcrb
hlt
ret
dec
dec
adc
jb
aaa
pop
and
mov
repz
imul
fcmovb
mov
sbb
outsl
adc
jmp
push
leave
fnstenv
out
nop
inc
lret
jmp
cli
sub
dec
loopne
mov
cmp
icebp
lods
inc
fwait
xchg
loop
cmp
sub
cmp
mov
arpl
dec
sbbb
testl
lcall
iret
push
pop
stc
outsb
test
pop
fs
mov
lahf
loop
mov
popf
cmovae
lds
jb
push
loop
pop
mov
mov
addr16
mov
push
imul
xor
loopne,pt
pushf
and
loop
rorl
fsubs
rcl
dec
lock
mov
rorl
mov
and
push
imul
jb
faddl
outsl
or
mov
xor
lahf
outsb
clc
xchg
xchg
test
mov
sub
sub
cwtl
jbe
mov
cli
ret
leave
ret
sub
loope
outsb
pusha
arpl
mov
inc
or
lods
test
add
adc
add
leave
mov
adc
mov
aaa
jno
add
cmp
scas
lods
cs
mov
std
and
or
mov
mov
inc
add
or
add
mov
fdivr
sub
and
push
push
or
rcll
push
jb
xor
inc
test
sahf
popa
push
and
mov
popf
movl
shrb
mov
je
xlat
int
push
shr
sbb
mov
sbbb
or
add
test
icebp
fstps
aaa
jmp
mov
daa
pop
arpl
lods
not
and
aad
stos
insl
mov
sbb
aad
out
adc
nop
stos
sarl
sbb
pusha
adc
stc
mov
add
jle
push
out
fucomi
add
jbe
inc
cld
xor
mov
sbb
xor
in
in
nop
fidivrl
pusha
mov
test
fs
mov
and
shll
in
aaa
daa
lods
scas
notb
ret
or
jmp
push
mov
adc
mov
std
jnp
jg
aam
filds
or
int3
or
push
outsl
sti
xchg
test
xchg
jns
mov
daa
mov
arpl
xchg
mov
and
mov
lods
test
pop
lods
fbstp
clc
inc
daa
pop
ret
cmp
sbb
daa
fcomi
ret
mov
mov
mov
sub
les
lock
cmp
and
and
adcb
dec
outsl
fsubrs
ret
pop
lods
sub
inc
cld
lahf
or
cmp
sbb
jl
inc
inc
imul
mov
clc
orb
sub
int3
push
adc
sub
fnstcw
xchg
and
and
mov
pop
iret
int3
and
mov
add
jecxz
sbb
xchg
pop
jmp
push
cmp
mov
push
mov
pop
push
and
imul
aaa
mov
cmc
roll
dec
fstpl
movsb
dec
push
push
into
sti
sub
dec
or
in
cmpsl
adc
fcomps
mov
fdivrl
fxch
jle
and
ret
gs
popa
fidivs
loopne
mov
push
iret
dec
xor
call
nop
imul
or
push
bound
imul
dec
les
sub
push
arpl
in
enter
cmpsb
mov
dec
loop
mov
in
rcll
or
cld
sti
pop
bound
aaa
jge
adc
or
pop
test
inc
popf
loope
popf
mov
xor
int
push
aam
stos
sbb
std
adc
cmp
lcall
and
mov
out
lret
aaa
mov
cmp
cs
repz
mov
pop
push
xor
mov
orb
push
inc
xor
mov
jbe
test
in
jno
jae
movswl
ret
jge
js
sbb
mov
push
out
cmp
imul
mov
mov
sbb
in
aas
stc
cmp
mov
sub
xchg
and
std
aam
or
sbb
fdivp
add
lahf
int3
pop
stc
push
xor
test
mov
pusha
inc
mov
repz
es
inc
addr16
inc
xorb
imul
pop
or
xchg
nop
push
dec
mov
mov
cmp
or
inc
in
or
jbe
fdivrp
jns
std
shll
dec
cmp
sti
push
daa
mov
sbb
pop
fnstcw
mov
insl
leave
mov
xor
mov
push
arpl
cli
jne
lods
push
out
loope
movsl
adc
mov
mov
leave
stos
sarb
sub
jae
jle
mov
or
xor
sbb
js
jecxz
add
sub
dec
fsts
mov
push
repz
int3
int3
pop
or
negl
loope
int
push
pop
shrl
int3
pop
mov
test
mov
cmp
movsb
rorl
outsb
pop
adc
addr16
push
cmpsl
out
and
inc
out
out
inc
mov
dec
pop
jb
xchg
or
inc
or
jmp
and
in
add
shlb
xlat
mov
xor
push
xchg
pop
mov
pop
jo
inc
cs
scas
push
dec
iret
and
ss
dec
out
insl
add
mov
mov
into
repz
xchg
ficomps
pop
or
cwtl
sub
repnz
clc
jge
jo
mov
mov
push
jg
mov
sbb
add
cmp
adc
call
push
in
ficomps
dec
inc
mov
or
cmpsb
popa
loope
popf
and
sbb
js
adc
mov
jecxz
test
inc
inc
int3
ret
scas
cld
xchg
jp
fimull
pop
stc
imul
ljmp
push
jecxz
xchg
jg
xchg
ffreep
dec
jmp
idiv
das
pop
mov
out
notb
jnp
xchg
inc
cmc
fstpl
cmpsb
insb
cltd
adc
mov
imul
shl
pop
hlt
outsl
inc
inc
ds
xor
test
and
test
sub
call
outsb
add
int
sbb
es
shrb
sub
cmpsl
mov
lods
lret
jnp
mov
sti
in
xchg
fdivrs
jp
xadd
jnp
jb
sahf
sub
inc
lret
aas
cmpsl
mov
mov
std
jno
mov
lret
dec
lds
out
mov
push
insb
add
test
jp
mov
add
add
inc
out
push
sub
sahf
pop
ret
or
push
cmp
into
clc
sbb
test
ret
sbb
repnz
shrl
cmp
sbb
xchg
cld
test
jne
pop
arpl
pop
lock
cmp
neg
xor
std
xor
xchg
inc
imul
dec
cs
pop
insl
push
scas
test
movsl
jmp
into
pop
or
lahf
scas
pop
fs
cld
inc
pushf
dec
adc
mov
mov
int3
xor
lcall
push
hlt
loope
pop
and
bound
lahf
mov
mov
addr16
popf
mov
sbb
mov
xchg
aam
jmp
mov
xchg
dec
in
xor
adc
test
pop
and
fs
mov
das
jle
jmp
xchg
sub
das
frstor
aam
xchg
stc
mov
inc
mov
fldl
pop
cmc
mov
and
test
leave
mov
push
fimull
cmpsb
inc
sahf
or
test
jp
jg,pn
es
inc
xchg
lea
lock
dec
push
push
int
sub
imul
lcall
and
cmp
sub
ljmp
or
pop
inc
pop
push
xor
xchg
inc
xchg
push
std
jle
test
jae
sub
popf
xorl
rclb
negl
push
jo
insl
add
xor
daa
dec
mov
adc
movsl
push
cmpsl
arpl
sub
cmp
ret
pop
mov
sahf
xchg
ret
sarl
in
mov
ret
mov
js
test
rorb
imul
bound
mov
mov
push
jns
xchg
sbbb
jbe
pusha
out
pusha
cmpsb
aaa
jge
lock
lcall
fmull
ret
daa
sbb
inc
xchg
adcl
test
daa
sarl
es
mov
mov
and
mov
mov
cli
or
push
rolb
sub
cltd
popf
inc
leave
jmp
and
fcoms
and
and
std
or
pop
std
aaa
cwtl
lods
add
add
lahf
leave
mov
jg
push
out
movsl
add
addr16
or
push
ficomps
pop
mov
imul
lcall
aas
aas
or
out
ljmp
out
cmp
enter
or
in
inc
sub
rclb
dec
and
sbb
add
repz
popf
sbb
repz
call
or
ret
movsl
fs
hlt
aam
loope
mov
in
int3
push
pop
les
fwait
nop
jbe
pop
daa
xchg
cs
mov
jecxz
and
shrl
mov
jo
popf
sbb
je
mov
ja
mov
mov
dec
add
sub
lret
sti
shl
jecxz
inc
mov
push
enter
insb
lods
mov
notl
in
into
out
movsl
mov
fisubs
popaw
push
mov
iret
insl
jns
movsb
add
dec
mov
out
mov
es
orb
les
mov
sub
mov
fidivrl
xor
lods
das
data16
adc
add
dec
cs
push
insb
jae
cmp
mov
pop
mov
iret
ds
in
iret
or
movsl
mov
lods
cmp
pushf
inc
aam
dec
insl
and
mov
adc
notb
jmp
cmp
pusha
mov
in
loop
mov
pop
mov
mov
lds
stos
stos
addr16
pop
sub
iret
out
push
cwtl
test
jle
jb
sbbb
popf
or
cmpsb
mov
xor
mov
lahf
mov
jmp
dec
into
subl
inc
repnz
jecxz
push
enter
xchg
xchg
rclb
dec
sub
mov
in
inc
sub
call
dec
push
ljmp
pusha
xchg
mov
pop
gs
repnz
fs
enter
push
lods
pop
ja
out
jecxz
pop
ja
xchg
lret
cmp
mov
insl
jg
rcrb
test
cld
popa
xchg
push
jns
lahf
out
cs
inc
and
shr
dec
fidivrl
cwtl
push
out
push
xor
mov
mov
out
pop
fstl
xor
add
cmpsl
mov
push
or
add
rcrb
test
inc
ret
mov
gs
rolb
cmp
jg
cltd
hlt
pop
pop
mov
push
popa
movsl
cwtl
or
das
in
pop
sbb
add
mov
jns
push
pushf
mov
in
jno
xor
pop
pop
pop
jecxz
ljmp
or
push
xlat
xchg
sbb
mov
ja
mov
mov
addb
mov
xor
lock
subb
mov
adc
adc
mov
dec
pop
inc
mov
sbb
jle
adc
jne
or
cld
and
mov
mov
sub
push
cmpsl
sub
mov
mov
sbb
movsb
out
in
push
cmpsl
icebp
nop
insb
and
add
mov
xlat
data16
sbb
ds
push
push
jno
sub
mov
mov
shll
xchg
or
or
lods
and
ret
sub
dec
adcb
pop
pushf
aad
aam
scas
std
scas
sahf
dec
iret
mov
jno
jl
or
mov
pop
aas
add
add
adc
pop
pop
les
out
ret
cltd
dec
bound
inc
fsubrs
add
lahf
out
push
lock
xor
aas
call
leave
or
xchg
pop
pop
popa
adc
adc
mov
mov
int3
out
aad
test
jl
fadds
push
lcall
sbb
mull
jg
scas
inc
push
cmp
shl
subb
push
and
pusha
jbe
dec
dec
js
mov
push
jae
cmc
call
int
ficoml
inc
xlat
add
dec
aas
jns
loope
lret
jbe
pop
mov
out
out
push
lea
cltd
test
push
insl
sub
sbb
pop
pop
mov
cmp
sub
cmp
and
out
test
and
inc
insb
in
mov
sti
bound
mov
addr16
out
push
std
jns
aam
push
push
iret
xchg
fistpl
repz
in
aas
movsl
and
mov
je
rclb
lds
popa
inc
jnp
bound
insl
cwtl
jp
sub
mov
enter
xchg
cwtl
test
fisubrs
enter
das
mulb
fiadds
sahf
mov
jl
daa
push
insl
insl
mov
test
jae
sub
pop
mov
jmp
sub
or
ficoms
fcmove
mov
push
dec
repnz
xchg
outsb
mov
sub
or
ds
cmpsb
mov
fiadds
add
ljmp
xchg
loop
into
push
or
pop
mov
cli
cmp
into
pop
xchg
inc
jp
inc
mov
adc
mov
mov
sub
jne
repz
int3
shlb
stc
mov
stos
fisttpl
movsl
xchg
mov
mov
iret
mov
mov
xor
cmp
cmp
jno
jle
sub
into
mov
adc
fs
js
je
popl
hlt
and
fldt
into
fmuls
repz
shl
shll
dec
pop
fcomps
nop
jae
lretw
mov
fistl
shll
xchg
pop
pop
push
adc
inc
push
push
clc
andl
xchg
sbb
sub
lock
ss
pop
adc
sub
into
outsb
mov
cmp
sbb
mov
fwait
xor
mov
inc
test
pop
and
xchg
cmp
loopne
popa
adc
fnstenv
es
sub
sbb
cmp
mov
sahf
xchg
les
aaa
jae
aam
mov
addr16
mov
sahf
jae,pt
icebp
rolb
ret
mov
add
jmp
shrb
sub
int
dec
pop
ljmp
aam
out
aam
sub
pop
fimull
scas
movsl
fst
or
scas
cmpsl
mov
push
arpl
push
stc
push
scas
cmp
jl
push
pop
aam
push
xor
hlt
or
push
ljmp
dec
addl
xchg
jbe
cmpsb
or
loop
lahf
js
inc
insb
mov
cmp
jnp
shl
jnp
std
arpl
mov
stos
test
pop
inc
dec
pop
cld
andb
push
call
inc
test
sbb
cmp
out
push
leave
push
stc
hlt
cwtl
fstp
and
jbe
add
adc
cmp
pop
jge
sarl
cmp
or
push
or
jno
movsl
xor
call
test
out
flds
mov
dec
mov
inc
pop
add
std
pop
pop
ret
test
and
jge
push
xcrypt-cbc
cmpsl
adc
jle
pushf
fwait
lahf
adc
adc
or
into
dec
pop
test
cmc
inc
addr16
and
sub
or
xorb
jecxz
lea
imul
das
mov
test
inc
ja
cmc
rorl
movsl
sub
push
xchg
and
adc
and
cmc
jo
cmpsb
icebp
xchg
adcb
aam
jae
push
sti
or
into
aam
fidivs
shll
ljmp
xchg
push
in
cmp
ja
xchg
icebp
sub
and
ss
or
dec
and
mov
aad
mov
test
cli
adc
mov
rcr
fnstcw
pop
dec
scas
es
xchg
jle
mov
fidivrs
or
or
inc
adc
icebp
adc
inc
adc
xchg
dec
inc
and
mov
sub
repz
mov
int
xchg
es
jp
mov
sbb
imulb
lods
addb
inc
ds
add
cli
neg
xchg
push
dec
enter
mov
popf
jge
lahf
push
rcrl
mov
jl
push
mov
mov
mov
xor
jg
jo
loopne
jmp
xchg
lahf
cli
shll
adc
mov
clc
dec
addl
mov
cmpsl
lds
inc
in
push
ja
mov
test
cmpl
lods
cmc
bound
jne
sub
sahf
fistps
jno
sahf
cmc
jns
push
in
test
sub
pop
das
cmp
decb
adc
cmc
lea
sbb
out
sbb
add
mov
nop
sub
repz
add
popf
push
push
pop
ljmp
xchg
add
mov
in
jno
add
mov
dec
test
int3
dec
pushf
push
lcall
mov
nop
cs
loop
push
lret
rorl
jge
dec
push
xchg
les
and
jl
daa
faddl
iret
js
adc
adc
mov
dec
stos
mov
xor
push
mov
dec
sbb
mov
jbe
out
out
shlb
push
test
into
mov
fdivl
aad
ret
aas
jns,pt
int3
cltd
jmp
cwtl
ficomps
js
mov
repnz
outsl
or
mov
repz
mov
out
mov
add
dec
aam
push
cmp
test
jns
hlt
sti
in
dec
cmp
imul
cmpsl
jle
js
xchg
xchg
lods
mov
jae
or
sbb
aam
scas
pop
inc
or
out
xor
imul
loopne
jno
cmpsl
popa
xor
in
mov
jl
or
sub
stos
fwait
add
cmc
inc
mov
pop
xor
das
fwait
cltd
sub
int3
mov
push
mov
movsl
xchg
jmp
mov
mov
cmc
movsb
shr
mov
les
sbb
mov
xor
std
xchg
push
pop
xchg
aaa
xchg
or
add
jl
push
ret
clc
mov
jno
roll
bound
scas
add
pop
cwtl
dec
ret
xchg
or
sub
cmp
dec
add
out
mov
shrl
pushf
xlat
sbb
or
icebp
outsl
mov
es
jecxz
aas
cld
fdivr
pushf
cmpsb
js
mov
ret
sbb
sub
mov
aaa
fistl
std
jecxz
loope
lea
test
xchg
aaa
or
imul
icebp
mov
jne
orl
push
nop
dec
aam
daa
dec
push
push
push
push
jae
mov
stos
fisttpll
das
gs
cmc
mov
adc
inc
lret
and
es
sti
mov
les
inc
shrl
mov
shll
je
inc
mov
sbb
jnp
push
inc
jae
lret
seta
lcall
jmp
fldenv
lea
loop
push
xor
xchg
imul
dec
push
pop
sub
xchg
ss
pop
sti
jns
pushf
iret
das
dec
adc
es
dec
push
cmpsl
subl
inc
popa
jmp
ret
pusha
mov
int
add
popa
adc
in
jl
add
hlt
adc
das
jmp
cmp
inc
mov
mov
sti
and
pusha
inc
das
cmp
lret
sbb
or
or
or
sahf
dec
push
fwait
mov
jbe
cltd
shlb
adc
adc
bound
enter
push
test
addr16
mov
cs
adc
and
sti
jl
add
xor
test
xchg
pop
push
xor
fnsave
xorl
and
dec
jg
sub
popf
xchg
iret
orl
hlt
sbbb
scas
jno
push
fimuls
fs
sbb
clc
in
das
xor
leave
sarb
mov
cmp
insl
sarl
scas
xchg
ds
adc
pushf
adc
cmp
aas
push
iret
xor
out
in
mov
push
or
movsb
popa
ficompl
fists
adc
popa
clc
pop
xchg
xor
aaa
and
ret
inc
jne
xchg
lods
ljmp
and
sub
jecxz
pop
cld
jmp
adc
lahf
cmp
frstor
movsb
ds
loopne
add
lahf
pop
lods
mov
orl
sahf
mov
add
xchg
adc
out
push
fsub
decl
sub
xor
mov
inc
pop
int
mov
adc
pop
js
dec
mov
push
imul
push
pop
or
add
hlt
outsl
or
jo
imul
imul
pop
cli
sbb
push
pop
cmp
xchg
lcall
fsubs
mov
sahf
adc
mov
sarl
insl
or
adc
inc
adc
mov
ljmp
movsl
xchg
shlb
fimull
jge
xchg
std
mov
fs
divl
lods
mov
out
mov
pop
stc
and
and
jg
pop
lret
adc
or
cwtl
or
clc
xchg
cli
test
fs
mov
pop
xlat
adc
mov
mov
xchg
lock
ljmp
dec
das
xchg
add
cmp
test
iret
mov
popa
fisttpl
imul
add
lcall
dec
insl
and
popa
repz
pop
cwtl
stc
push
cmc
mov
aas
push
nop
adc
xchg
sbb
aaa
les
inc
rorb
and
cltd
cmp
push
fwait
je
outsl
out
inc
in
pusha
sbb
dec
cmp
xchg
jp
jl
mov
lret
outsb
subl
cmp
jns
in
pop
hlt
xor
xchg
dec
lods
mov
stos
mov
jg
lds
mov
xchg
rcll
push
std
or
or
fistl
loopne
or
les
incb
rcll
sbb
cltd
test
sub
or
xchg
cmp
cmpsb
mov
dec
rol
repz
shrl
mov
sar
dec
inc
mov
stos
add
xchg
pmulhuw
push
inc
imul
push
pop
inc
test
jmp
mov
mull
leave
inc
jp
push
jnp
adc
or
shrl
sti
mov
mov
sbb
js
repnz
xor
jp
sbb
cltd
test
push
pop
ret
test
inc
xor
icebp
mov
rcrl
jle
es
lret
leave
adc
add
mov
adc
int
cmp
loop
xorl
jmp
rcrl
std
mov
xor
add
ror
push
outsb
ljmp
outsl
or
jne
negb
xchg
in
sbb
adc
fnstsw
cmp
subb
xchg
sbb
xchg
pop
ret
inc
jmp
or
mov
mov
addr16
icebp
imul
cmp
ret
and
ret
ds
jbe
sbb
mov
sbb
push
lret
repz
pop
movsb
dec
out
fyl2xp1
push
adc
scas
lock
test
sbb
adc
push
push
mov
js
and
mov
sbb
lret
pcmpeqd
mov
popf
xchg
or
mov
pop
push
pop
mov
jl
inc
ret
insl
mov
cld
and
testl
cmp
jne
xchg
fwait
and
pop
add
lret
incl
jle
popf
loope
inc
and
push
es
add
mov
mov
in
pop
das
sub
xor
popf
mov
ja
inc
loope
mov
test
ljmp
sub
pop
mov
jp
into
mov
xchg
movsb
jmp
dec
dec
dec
pop
in
adc
jle
ds
clc
mov
je
mov
sub
mov
mov
cld
dec
cmp
popf
js
cmc
pop
loop
dec
sub
cltd
loopne
sbb
adc
leave
cmc
mov
stos
xor
lret
mov
stc
lret
dec
mov
xchg
fistpll
ret
scas
mov
sbb
sub
and
int3
popa
adc
ljmp
xchg
aam
adc
adc
pushf
fcomps
lret
jbe
mov
cmp
iret
add
ret
mov
mov
out
mov
sbb
mov
push
push
push
or
je
mov
xor
mov
shrl
dec
sbb
test
test
jmp
loope
push
out
fwait
iret
pop
mov
push
mov
ja
mov
decl
pushf
inc
cmp
ss
xchg
mov
or
jge
xor
or
loopne
shlb
push
jmp
sub
jb
or
pop
sub
test
lcall
adc
loop
xor
push
and
in
lea
inc
ret
stos
push
inc
push
jnp
mov
leave
cwtl
or
test
outsl
daa
and
test
sub
in
sbb
clc
xor
gs
xlat
clc
inc
push
xchg
adc
negb
xor
pop
test
dec
sbb
pop
mov
int3
cmp
cmp
cmp
dec
fimuls
fimull
popa
and
mov
jno
das
pop
orb
outsb
sub
mov
mov
cmp
addr16
inc
je
fnstcw
xor
jb
in
mov
into
cmc
repnz
push
call
sbb
ljmp
fimuls
repz
mulb
shlb
aas
mov
test
movsl
out
adc
pop
dec
lods
inc
adcl
sbb
shlb
sub
push
lds
xor
add
scas
imul
rorb
adc
scas
mov
cmp
pusha
inc
lahf
stos
mov
loope
add
cltd
lahf
fucomi
mov
sub
sbb
mov
popa
movsl
into
pop
icebp
mov
dec
add
push
jo
and
inc
pop
test
movsl
mov
and
add
push
push
push
pop
daa
xlat
mov
dec
fisttps
sub
sub
insl
jne
adc
popf
push
inc
leave
push
fimull
cmp
outsb
ret
lret
shll
xlat
inc
cmp
xchg
xchg
imul
lret
aam
lds
dec
mov
pop
xor
mov
xor
or
mov
pop
in
fucomi
xchg
sbbl
pop
cld
out
dec
stos
hlt
cmpsl
lock
leave
add
fs
nop
jge
test
addb
into
xchg
xchg
iret
jp
std
addr16
les
call
cmp
rclb
out
ljmp
div
daa
insb
pop
add
xchg
pop
mov
scas
inc
sub
out
fisubrs
cmp
jl
lds
inc
sub
or
popa
scas
xor
mov
inc
je
lods
mov
jno
mov
inc
xor
inc
cmp
cmpb
dec
pop
jle
loopne
adcb
fidivrl
push
push
out
insl
jns
aad
sti
and
xor
leave
popf
out
mov
inc
inc
mov
xor
jl
sbb
insl
mov
or
xchg
adc
push
xchg
sub
test
xchg
cmp
repz
ja
lret
jg
and
daa
mov
out
dec
push
mov
inc
xchg
hlt
adcb
mov
push
jns
pushf
pop
mov
xchg
add
xchg
fsubl
fs
inc
lock
lds
xchg
adc
add
sbb
cmp
add
ljmp
and
leave
repz
aam
cmp
push
in
mov
rcl
pop
ljmp
outsb
dec
fwait
pop
adc
adc
rcrb
sbb
iret
or
lret
push
mov
stos
cli
fnstsw
pop
and
or
lret
es
lahf
aas
jno
sbb
mov
daa
pop
cmpl
pop
mov
cs
daa
inc
bound
out
inc
cwtl
sub
pop
aaa
jmp
dec
leave
xchg
rol
jecxz
mov
sar
sar
sbb
lods
push
in
push
mov
test
int3
push
mov
dec
sar
or
out
out
mov
fwait
call
mov
cld
cmp
rcll
adc
push
insb
mov
xchg
dec
test
cmpsl
xchg
mov
sub
add
adcb
sbb
imul
push
arpl
jbe
inc
and
test
ljmp
aas
enter
add
sti
pusha
mov
push
lea
cwtl
adc
jle
adc
xorb
test
sub
pop
push
icebp
cmp
decl
and
movsb
outsb
in
xchg
mov
sti
pop
fimuls
inc
xor
push
std
xchg
push
popf
jb
and
push
jbe
icebp
push
pop
pop
repnz
mov
cmpsb
sub
xchg
sbb
movsl
sub
insb
cld
cmpsl
repz
pushf
dec
and
jecxz
cwtl
fsubr
inc
mov
mov
imull
mov
cmp
mov
adc
sub
ds
rcr
sub
pop
inc
xchg
add
daa
ret
sub
jo
cltd
add
sbb
mov
popa
xchg
stos
test
mov
icebp
inc
and
int3
jge
insl
add
jl
es
popf
inc
mov
popa
dec
cmpsl
jno
add
je
dec
dec
bound
pusha
movsb
sbb
fidivs
adc
push
push
insb
shll
cmpsl
lock
clc
popa
push
orb
jns
outsl
mov
jns
dec
ljmp
add
cltd
scas
xchg
les
cmp
jns
add
push
in
sbb
mov
sbb
sub
xlat
pop
mov
sbbl
mov
mov
sbb
lods
jle
gs
fwait
shlb
mull
inc
movsb
jnp
sub
cmpsl
xor
loopne
sarl
les
call
sub
jg
shl
xchg
mov
out
aam
bswap
mov
rcrl
mov
call
xor
imull
mov
or
std
test
test
pop
push
xchg
pop
into
add
push
or
sub
movsb
bound
push
push
shlb
test
stos
test
leave
xchg
cmpsb
outsb
clc
int
ret
sahf
mov
les
iret
and
int3
push
aas
lcall
ja
fwait
sub
inc
out
andb
add
push
dec
fnstcw
cmp
dec
mov
jg
cmp
out
xor
and
push
fwait
loope
or
aas
mov
inc
test
loope
xor
enter
mov
sti
push
inc
hlt
sub
addb
xchg
sbb
sub
cmp
or
mov
xlat
out
ret
sub
add
jecxz
mov
mov
clc
loope
jb
adc
dec
xchg
fcomip
cmp
push
dec
outsb
pop
fsubs
mov
mov
fisubs
xchg
pop
and
es
std
jno
lods
jl
leave
mov
popf
xchg
and
dec
adc
nop
jl
cmpsl
xor
stc
imul
or
inc
in
adc
int
xor
jnp
dec
add
hlt
xor
mov
sub
push
xchg
arpl
pop
int3
data16
out
addr16
shl
mov
cwtl
movl
fbld
movsl
xor
movsb
sbb
mov
or
sbb
fiadds
pop
aad
popf
xchg
adc
int
cmpsb
out
and
js
test
mov
jl
pop
push
fs
clc
mov
cmp
mov
ret
xchg
enter
insb
mov
lcall
mov
push
stc
mov
out
fistps
je
pop
ja
sub
popa
ret
inc
cmp
or
and
sub
popf
inc
aaa
mov
icebp
jl
aas
repnz
mov
stc
pop
scas
dec
inc
hlt
and
jae
jbe
scas
cmpsl
mov
outsl
ja
in
dec
add
cmp
out
xor
mov
fistpll
inc
mov
and
loopne
push
mov
mov
cmpsb
xor
sub
mov
xor
in
mov
mov
adc
mov
sbb
push
scas
jle
cli
test
jb
shrb
jo
shll
sbb
mov
pop
pop
out
pop
dec
push
cwtl
mov
pusha
fsubs
pop
sarb
into
or
sbb
mov
leave
cld
shrl
xchg
sbb
mov
xchg
fadds
in
jg
lea
cmc
cld
mov
je
mov
mov
iret
adc
add
dec
int
pop
pop
pop
clc
sbb
sysexit
cmp
mov
cmpsb
mov
add
inc
rol
pop
pop
insl
or
push
faddl
mov
jo
rolb
sarb
dec
adc
stc
push
jp
pop
jl
pop
sub
mov
jle
data16
mov
push
popa
sbb
int3
fwait
xor
push
mov
ficompl
mov
mov
push
cmp
ffree
fdivr
call
rclb
lock
inc
cmp
mov
lcall
sub
adc
inc
push
jecxz
push
pop
js
mov
je
push
cltd
scas
mov
inc
lock
jnp
push
fidivs
adc
inc
arpl
movsb
push
adc
sarl
negl
scas
jmp
pop
mov
jecxz
cwtl
pop
mov
gs
dec
cli
pop
lahf
lret
jmp
sahf
lret
add
testb
out
cwtl
pusha
fisttpl
lds
sar
sar
dec
push
add
pop
inc
enter
or
cmc
adc
lcall
pop
pushf
shll
mov
je
out
dec
std
in
out
lods
add
push
jmp
add
push
mov
pushf
dec
fs
xchg
aad
idiv
in
jbe
add
sub
jl
cmp
pop
lret
sti
mov
daa
push
xor
iret
lcall
mov
xlat
addr16
add
insl
ret
aam
jno
cli
outsl
jns
es
mov
adc
subb
pop
mov
pop
inc
and
cmc
dec
imul
jmp
pusha
cmp
sarl
dec
dec
jno
cmpsl
repz
adc
ds
cmp
jl
in
jl
cli
jns
cs
std
ljmp
stos
hlt
gs
mov
enter
mov
ljmp
mov
lds
fcoml
out
or
cmp
add
push
or
cmp
jge
push
pop
push
or
repz
push
jg
fsts
mov
cs
das
mov
adc
imul
mov
lock
lds
ds
loop
mov
cmpsb
into
push
pop
cwtl
dec
mov
imul
out
push
fsubrl
and
icebp
mov
adc
fdivs
push
push
mov
lea
jno
in
pushf
lock
xor
cli
add
cwtl
xchg
pop
or
add
pop
mov
cwtl
das
fmul
popa
push
mov
sarb
dec
pop
pop
sub
pushf
jno
and
hlt
sub
popa
pop
lcall
mov
dec
pop
jbe
call
cmpsl
sbb
adc
inc
add
rcll
jge
xchg
jmp
push
ret
fs
out
jmp
xor
cs
aad
sahf
cmp
andl
or
push
cmpl
fldenv
inc
ss
addr16
lahf
or
xlat
arpl
mov
shl
or
dec
ja
push
lcall
push
jmp
out
addb
adc
sti
pop
inc
cmpsb
sahf
inc
mov
sahf
leave
or
aam
xlat
xchg
xchg
add
idiv
jge
pop
adc
jmp
cmpsb
add
xor
popa
mov
idivb
xchg
loop
rcrb
add
adc
pop
out
or
sbb
addl
pop
sahf
sub
and
test
fnsave
int
inc
jns
lds
and
add
int
xchg
or
dec
movsb
ret
stos
bound
jnp
das
mov
push
cs
inc
sbb
add
pop
nop
inc
in
xor
fsubrl
cmp
enterw
sbb
lods
mov
pop
inc
push
cmp
and
xchg
jae
inc
addr16
inc
sahf
int
mov
int3
fdivl
cltd
jmp
jg
inc
mov
lock
outsb
nop
xchg
push
push
test
and
jge
and
shrl
cmp
adcl
js
push
out
jge
mov
sahf
sbb
xlat
jecxz
add
outsb
inc
pop
or
flds
xchg
fistl
jns
leave
icebp
fsubl
jne
jae
loop
adc
xchg
andl
and
mov
lcall
imull
push
jbe
insl
rolb
mov
push
cmp
jp
push
xchg
xor
shl
sbb
add
cmp
enter
cmpsb
push
sub
xchg
and
add
push
push
gs
jmp
mov
es
and
in
sbb
out
pop
push
inc
push
cmc
into
cmp
repz
mov
ljmp
cmpsb
cltd
sub
jle
fcompp
add
xchg
jmp
xor
fnstsw
fimull
xor
dec
lea
idivl
xor
push
sbb
in
push
xchg
or
sahf
lcall
testl
cs
ds
push
cmpsb
sub
dec
adc
fs
jo
mov
mov
pop
dec
pop
dec
das
jge
xchg
insb
into
xchg
lock
or
mov
dec
push
pop
leave
mov
popa
mov
pop
push
jp
xor
popa
xchg
jno
cmpsl
adc
hlt
ret
je
sbb
sbb
pop
xchg
cmp
leave
adc
and
inc
add
gs
xor
fimuls
add
xor
pop
test
rclb
sbb
loope
add
subl
push
push
out
jbe
jl
fbld
in
cmp
movsb
mov
test
inc
cmp
mov
loop
mov
in
push
mov
jbe
sub
mov
outsb
cltd
push
sbb
dec
adc
rorl
mov
adcl
lcall
and
jns
fsubrs
dec
or
sbb
mov
testb
mov
stc
cmp
mov
mov
adc
add
cmp
ret
inc
fwait
mov
fistpll
sbb
mov
imul
into
dec
mov
outsl
hlt
addr16
call
push
pop
out
adc
adc
dec
xchg
insl
jecxz
mov
and
xorb
mov
ror
mov
sub
inc
pushl
mov
jge
loope
sbb
inc
inc
mov
and
out
lock
inc
in
pop
faddl
mov
push
pop
fidivl
bnd
jp
push
cwtl
pop
xchg
sub
out
in
add
and
mov
mov
mov
ja
outsb
loop
int
ret
movb
and
iret
rcrb
cmp
jmp
mov
adc
cs
pop
scas
gs
push
jb
and
imul
cmc
stc
lcall
cmpsl
adc
out
xor
and
xchg
adc
sbb
nop
sub
push
and
mov
test
testb
inc
xor
movsb
dec
inc
arpl
xor
adc
scas
in
lea
mov
push
inc
adc
mul
cmp
push
add
lcall
xor
inc
int3
push
and
repnz
sbb
std
push
daa
into
fbld
push
or
mov
push
rcl
cmc
movsl
jno
test
jne
xchg
outsb
jns
arpl
fidivrs
fdivrs
cmp
inc
mov
imul
jne
mov
ror
or
mov
push
dec
cmp
jle
cmp
aad
std
aam
sub
or
mov
push
cmp
adc
push
mov
lret
adc
int3
fildll
cmpsb
push
jmp
sbb
ja
or
inc
and
aaa
popf
pop
push
dec
movsb
sbb
mov
fst
loop
jns
mov
mov
les
cmp
mov
adc
pop
pop
stc
les
jbe
mov
dec
push
jns
insb
xchg
movb
test
and
fwait
sarl
sbb
call
sub
mov
cmpsb
jnp
ja
fnstenv
loop
inc
jecxz
adc
cmpsb
sub
cltd
push
daa
hlt
je
scas
aad
sbb
ret
add
cmp
and
sub
and
dec
int
mov
jecxz
push
scas
or
push
sub
add
mov
fistpl
mov
subb
adc
mov
pop
mov
jb
das
mov
sbb
sbb
lahf
test
mov
and
or
adc
call
sub
pushf
lahf
cld
int3
xchg
insl
cmpsl
fiadds
imul
jecxz
lcall
stos
mov
lods
in
dec
xchg
adc
lahf
arpl
push
cmp
out
jbe
hlt
imul
or
push
dec
push
push
xor
repz
inc
imul
fadds
mov
push
mov
add
jb
int3
mov
mov
push
cmp
pop
scas
mov
cld
pop
dec
and
mov
or
inc
adc
subb
fcmovb
sbb
daa
test
push
mov
jmp
and
sbbb
lods
aad
clc
sbb
push
xchg
pop
or
fisubs
and
loopne
and
mov
lds
fwait
ret
sahf
test
fsubr
scas
inc
jae
outsl
pop
test
jb
mov
add
enter
scas
xchg
aas
lods
jle
dec
div
es
ja
adc
rorl
adc
mov
rcl
pop
inc
cld
jbe
movsb
cmp
cld
test
adc
ret
mulb
sbb
insl
cli
jo
lds
mov
out
decl
cld
jp
lods
push
cmpsb
or
add
push
lods
and
xchg
fidivrl
enter
xlat
add
inc
push
add
subl
out
js
push
ja
call
roll
pop
inc
cmpsl
xor
inc
lock
adc
add
jnp
popa
out
ss
in
xchg
dec
fs
stos
jl
mov
xor
sub
sbb
filds
sbb
hlt
mov
loop
inc
inc
push
jbe
into
ret
and
insl
jg,pn
insl
adc
xchg
jp
pusha
lods
xchg
lret
in
into
pop
lods
jecxz
fwait
mov
sti
xor
mov
push
dec
mov
arpl
or
in
sbb
or
lods
sbbl
daa
loopnew
fwait
mov
mov
sbb
mov
xchg
dec
ret
inc
rcll
mov
popa
xchg
inc
dec
mov
faddl
push
cmp
stos
pop
testl
addl
fildll
fisubrl
subb
es
cld
xchg
cmpsl
cmpsl
daa
clc
out
adc
jmp
push
in
sti
sub
in
and
xchg
popl
aaa
cld
dec
sub
arpl
rcll
imul
cmp
xor
adc
inc
cmc
loope
je
sahf
insb
and
insl
out
push
lods
fucomip
inc
sti
push
shll
push
roll
sti
test
popa
stos
sbb
push
and
jge
add
jecxz
fistpll
daa
adc
xor
jle
cmpsb
sbb
cmp
out
inc
jg
sub
dec
xlat
mov
fcmovne
inc
xchg
jecxz
xchg
push
mov
adc
fcompl
jb
fstpt
mov
xorb
cmpsb
sbbb
ss
js
cmp
sub
jbe
add
ds
xchg
adc
stos
xchg
jnp
stc
or
mov
mov
or
fwait
add
or
cmpsl
add
shrb
xchg
lock
dec
xchg
jmp
cmp
sahf
sub
jge
pop
cs
fld
dec
cltd
or
xor
mov
adc
out
and
sbb
das
fimuls
scas
sub
jge
into
jmp
xor
in
mov
or
adc
inc
js
rol
jl
inc
cli
pop
mov
mov
xor
jnp
xchg
fisubs
jmp
imul
mov
out
mov
xchg
shrl
cmp
cmpsl
cmp
scas
xchg
aaa
repz
sub
adc
pop
lods
lret
push
sub
idivl
scas
pusha
int3
jae
jge
fs
aas
mov
sub
pop
and
scas
dec
xor
jle
jo
or
rcl
ret
mov
int
push
outsl
lcall
add
sub
outsb
xchg
dec
xor
ss
inc
xchg
fsubrp
and
jae
sub
cwtl
dec
pop
jecxz
lcall
divb
sub
cmp
out
stc
out
out
mov
xchg
or
in
sub
out
ljmp
pushf
loop
mov
iret
lret
lods
cwtl
test
cmp
je
into
insl
mov
mov
pop
xchg
sbb
xchg
sub
or
adc
mov
mov
cmc
inc
sar
push
iret
dec
lahf
mov
xchg
icebp
xchg
or
mov
popa
lods
in
inc
in
sub
cli
mov
dec
or
dec
out
je
dec
in
xor
shrl
aas
pop
test
xor
push
mov
or
lret
pop
and
sbb
cmp
inc
pushf
push
sbb
int3
jae
imul
sbb
push
cmpsb
lock
mov
lods
inc
sbbl
ret
pop
jmp
sub
outsb
insl
mov
js
add
fdivrp
push
cmp
movsl
je
repnz
jns
test
and
cli
and
jne
push
xchg
and
repz
mov
mov
scas
and
jo
insb
add
and
dec
ficoms
mov
push
stos
mov
data16
xchg
xchg
sbb
jbe
loope
iret
incb
dec
pop
out
mov
notb
in
mov
int3
inc
cmp
pop
inc
ficompl
mov
cmp
adc
cmc
pop
jge
aas
mov
lods
cmp
xchg
pop
jae
aad
fwait
int3
push
shl
adcl
dec
movsl
in
call
outsb
nop
pushf
pop
into
and
je
les
mov
mov
loopne
aam
into
sub
push
jno
iret
xchg
cmpsl
or
jne
stos
add
shrl
imul
addr16
shlb
xor
insl
cmc
dec
test
jne
jae
out
push
and
mov
pop
mov
mov
loope
sbb
sub
pop
and
and
ss
repz
add
jmp
aam
push
pop
xchg
sti
stc
bsr
lods
push
sub
xor
pusha
fs
lea
cwtl
movq
jb
adc
enter
loopne
aam
decb
aad
stc
popl
mov
repnz
sub
test
rorb
cwtl
cld
cltd
sar
loope
sti
mov
pop
stc
call
out
mov
mov
sbb
pop
sti
aad
int3
or
jecxz
pop
jbe
or
stos
and
pop
adc
jge
dec
mov
push
js
test
bound
call
stos
rolb
adc
repnz
xor
mov
out
mov
leave
jb
cmc
ss
comiss
in
xor
std
add
aad
cmc
sub
ret
in
fstl
rorb
mov
or
push
arpl
out
std
aad
mov
dec
adc
cmp
mov
stos
rcl
mov
mov
rorb
add
mov
dec
out
dec
ds
mov
cmp
inc
test
fdivr
fsts
push
pop
sub
fnstcw
shlb
fs
daa
sub
push
xor
mov
ss
dec
mov
mov
test
lret
xchg
movsb
add
icebp
push
dec
xchg
cltd
scas
ret
push
add
sub
dec
sbb
xor
xchg
in
xor
std
loop
mov
lret
icebp
lahf
cmp
add
inc
xchg
int3
insb
imul
cmpsl
std
and
cmp
xchg
push
add
inc
sub
mov
mov
out
call
push
lret
aaa
in
inc
mov
sbb
sbb
pop
xchg
cmp
jmp
cmpsl
cmp
and
inc
jl
xor
xlat
or
loop
or
push
cmpsb
fsubl
dec
mov
xchg
mov
js
dec
add
xor
dec
dec
in
sub
lds
mov
mov
scas
dec
out
mov
jle
xchg
scas
pop
cmp
sarl
fidivrl
sub
lret
insl
and
mov
jnp
inc
popa
cmp
inc
clc
lods
mov
mov
arpl
mov
mov
xchg
inc
lcall
mov
and
mov
mov
test
pusha
sub
jne
dec
fnstsw
push
mov
sahf
int3
fildl
pop
and
in
je
xor
pop
pop
inc
cmc
outsl
std
push
jp
sub
push
cmc
cs
push
insb
lds
out
adc
sub
sbbl
pop
incl
pop
mov
mov
xor
rorb
mov
adcb
lahf
and
xchg
popa
enter
in
sub
dec
lods
jb
pop
and
arpl
add
add
jnp
test
mov
sub
inc
add
dec
flds
fcmovne
mov
inc
and
lods
jmp
sar
adc
insl
mov
aad
sub
cld
sbb
cmp
sub
jecxz
add
shl
xchg
push
add
or
jmp
mov
std
inc
enter
push
ret
sub
and
leave
mov
fdivl
pop
mov
adc
mov
sbb
xchg
inc
test
mov
sbb
mov
fnstcw
popf
mov
mov
sbb
sub
lret
adc
pop
sbb
mov
repnz
cmp
add
popa
and
fildl
push
notb
cmp
cwtl
jb
mov
pop
jl
dec
pop
dec
xchg
xchg
push
lea
inc
mov
jae
cmpsl
xor
mov
test
or
aam
lock
mov
shll
outsl
xor
in
lea
push
add
fsubr
sbb
dec
ror
cs
jg
mov
imul
mov
mov
orb
inc
lret
xchg
cmp
cmc
popf
add
dec
pop
aad
sub
cltd
sbb
pop
dec
mov
aas
mov
lds
das
dec
pop
mov
sahf
pop
rorl
fsubl
xchg
and
cwtl
pop
cmc
push
xor
out
js
aas
rcrb
jp
arpl
pop
xlat
in
cwtl
push
and
or
hlt
mov
jne
push
lods
addr16
fidivrl
lret
sahf
inc
outsb
movsb
in
addb
std
pusha
rorb
cmp
cmp
or
inc
ficoml
mov
push
movsb
idivb
cmpsl
push
int3
dec
ja
and
cmp
sub
or
loopne
in
cli
sti
adc
pop
push
push
lods
fists
inc
fimull
std
push
shll
or
mov
pop
imul
dec
ja
sti
sub
loopne
outsb
mov
or
cmc
lea
xchg
loope
icebp
fnstenv
and
lret
fdivl
cli
ffreep
outsb
add
pop
inc
mov
mov
and
xor
xor
dec
mov
fcompl
adc
mov
xor
xchg
jne
scas
push
push
adc
xchg
out
mov
hlt
dec
lea
fsubrs
jge
fcompl
xchg
inc
xchg
push
mov
fistps
xor
inc
stc
sub
sub
incb
call
loope
push
lret
mov
lret
in
out
fstl
mov
popf
inc
sub
mov
into
icebp
sbb
out
iret
std
mov
push
push
push
scas
add
and
imul
rcll
inc
lea
ja
imul
sbbl
aad
out
jae
shl
cli
mov
sahf
inc
xchg
outsl
pop
in
cmp
mov
ret
lds
jmp
cmp
test
scas
imul
test
push
cli
jbe
imul
outsb
ljmp
push
pop
int3
cltd
mov
xchg
clc
push
out
add
mov
test
inc
roll
int
ljmp
cmp
pop
clc
dec
dec
mov
leave
sbb
sarl
or
mov
push
xorb
call
fcoms
jp
jle
loope
shrl
cmp
xchg
out
cld
hlt
lret
xchg
jmp
jne
leave
cmp
push
add
jns
js
mov
mov
roll
stos
jbe
mov
jo
fsubr
cs
sub
jns
dec
movsl
jns
fimull
into
out
ficomps
xor
mov
adc
insb
mov
aam
lret
stc
shlb
aam
pop
xor
add
data16
addb
imul
frstor
shll
std
add
cmp
sub
mov
sti
nop
add
sub
or
dec
test
jp
and
jno
xchg
xchg
add
ret
fwait
movsl
hlt
sub
loop
mov
dec
push
test
imul
sbb
lds
pop
cmp
jb
or
repz
push
mov
mov
pop
int3
inc
add
loopne
call
push
negb
imul
clc
lret
sbb
dec
xchg
push
sti
inc
fldt
int
mov
mov
and
cli
inc
lret
mov
and
aas
sub
adc
lahf
aas
outsl
sub
leave
lods
xlat
je
iret
lcall
inc
clc
jns
decl
push
and
sbb
mov
push
inc
psllw
sbb
iret
push
adc
sbb
gs
mov
push
adc
scas
shlb
cmp
or
js
cwtl
push
adc
pop
xor
cmpsl
orb
out
adc
mov
xchg
insb
ja
dec
test
push
test
insb
inc
movb
in
adc
mov
shl
scas
cmp
clc
mov
push
pop
loopne
push
outsb
mov
sbbb
push
sub
and
iret
mov
ret
sub
sub
test
xlat
mov
inc
mov
fistpl
ss
pushf
fs
aas
addb
je
rorb
jp
rep
mov
cmc
jmp
fs
je
stos
and
or
mov
lret
fdivs
xor
xor
mov
rcr
std
lock
pop
or
push
loopne
sub
xchg
pop
mov
fidivrs
and
leave
rcr
or
or
xor
out
daa
aad
lahf
loop
fucom
ss
rolb
pusha
sub
out
cld
repz
ja
iret
lret
dec
or
mov
ficompl
jp
xchg
dec
pop
loop
adc
pop
sub
fsts
test
jb
inc
cli
xchg
aas
fcmovb
aam
into
aad
mov
icebp
mov
call
pop
ror
push
sub
xchg
mov
arpl
test
inc
cmc
sti
cmp
stc
out
or
sbb
das
mov
int
rolb
jne
lock
dec
xlat
push
xchg
mov
xor
xlat
pop
outsl
sub
jne
mov
and
sub
ror
cmpl
jbe
xor
lds
push
shr
es
inc
gs
push
mov
shrl
jbe
enter
jb
fnstenv
sub
js
inc
and
sub
loope
dec
dec
cmpsl
ja
ss
jmp
rclb
jns
xor
lret
and
mov
arpl
pop
sbb
jb
mov
daa
lea
pop
cmpsb
out
mov
mov
adc
into
push
jno
xchg
jnp
outsl
xchg
cwtl
inc
push
or
pop
jecxz
inc
stos
in
lock
cld
mov
mov
fcompl
outsl
xor
orl
insw
sub
stos
mov
xchg
dec
jg
mov
adc
sbb
pop
frstor
leave
leave
mov
les
jb
hlt
and
jo
aad
adc
mov
mov
jnp
fsub
mov
in
dec
pop
iret
cmp
mov
sbbb
fldenv
std
dec
scas
mov
or
sbb
jmp
lock
inc
and
pop
mov
push
inc
gs
ljmp
push
test
xor
jp
pop
lret
lret
or
loopne
fidivrs
cmp
dec
psllw
cli
rorl
dec
stos
out
pop
test
inc
aad
loopne
das
loopne
aam
cmpsb
push
xor
mov
dec
clc
xor
or
cmpsb
push
repz
fmuls
scas
lock
jge
dec
daa
pop
cmp
inc
push
sub
lds
stos
lahf
or
dec
data16
inc
jo
xchg
fnstsw
aaa
inc
mov
aas
pop
mov
mov
or
mov
std
push
cmp
jae
ljmp
mov
andb
sbb
cwtl
insl
xadd
outsb
mov
test
repnz
lret
xor
xchg
fistpll
imul
aad
pop
test
inc
push
or
jg
lret
add
stos
inc
jne
movsl
lea
jg
mov
sub
push
mov
fcoml
cmp
jp
movsl
in
std
mov
out
mov
loopne
and
or
js
mov
inc
push
adc
xor
mov
fsub
ljmp
mov
mov
xor
arpl
hlt
out
test
negb
test
dec
bswap
outsb
sub
in
inc
xchg
subb
add
aad
and
out
adc
mov
insl
add
outsl
fmuls
cli
xchg
adc
mov
fildll
mov
loop
inc
daa
mov
push
fstps
sub
mov
jne
add
xor
dec
pop
data16
call
movsl
gs
and
lcall
cmpsl
cld
sbb
sbb
push
lahf
hlt
mov
dec
add
pop
imul
out
ljmp
aam
sbb
and
aad
push
das
test
sub
dec
rcl
mov
mov
pushf
scas
inc
hlt
in
jns
lahf
adc
cmp
xchg
scas
xchg
sbb
outsb
mov
les
sahf
clc
cmpsb
push
xor
mov
shr
mov
or
push
cmpl
mov
xor
ret
lock
stc
pop
mov
inc
cwtl
ss
adcl
insb
push
adc
or
loop
jecxz
inc
testl
cltd
mov
ds
nop
lea
cld
mov
in
dec
ret
cmpsl
add
xor
mov
add
push
push
mov
loope
aaa
or
push
cmp
cmp
leave
outsl
dec
into
jno
jae
or
or
sahf
cmc
test
cmpsb
and
rolb
or
push
mov
mov
pop
xor
popa
mov
mov
sbb
dec
imul
push
test
cmp
mov
notl
hlt
cli
mov
push
and
mov
orl
cmpsb
insl
aaa
xchg
or
addl
dec
insl
xor
push
pop
xchg
mov
dec
push
jo
out
leave
xor
aas
sti
repnz
mov
mull
xor
push
dec
jno
jnp
mov
iret
test
gs
daa
xchg
jle
leave
or
js
xor
cmp
mov
mov
and
sbb
cmc
and
xor
inc
fdivp
mov
std
movsb
sub
pusha
dec
dec
movsb
ss
scas
adc
xor
xchg
and
ja
cmp
sub
in
fidivs
and
sbb
popa
insl
addr16
jle
imul
out
push
dec
das
jb
aam
jne
rcl
bound
movsb
outsb
subb
enter
outsl
pushf
inc
sarl
pop
cld
rolb
xor
sbb
cli
scas
xor
pop
loopne
mov
mov
jno
outsb
push
push
jg
out
mov
daa
mov
xor
shrl
aad
loop
out
call
aaa
and
sbb
movsl
into
cld
push
mov
lea
fcompl
mov
test
jb
fsubl
inc
mov
cmp
popf
sub
insl
rcrl
mov
lcall
mov
sarb
jns
xchg
mov
fwait
xlat
les
lds
and
mov
lret
sbb
push
xchg
nop
lret
xchg
inc
fiadds
std
fiadds
scas
ret
lods
jl
xchg
scas
or
hlt
jbe
add
mov
es
pop
dec
out
xchg
ljmp
or
cmpsl
mov
loop
or
xor
cmp
lahf
in
mov
cmp
mulb
je
insb
lock
cmp
mov
mov
add
cmp
sahf
push
inc
outsb
jne
jg
in
int3
pushl
xchg
repz
sti
imul
xchg
fs
out
faddl
imul
push
das
roll
xor
cmc
adc
adc
xchg
bound
hlt
das
mov
in
lds
loopne
imul
ljmp
cmp
mov
or
cwtl
push
sub
xchg
rcl
jecxz
hlt
out
push
sbb
cli
pop
sbb
xor
aaa
pop
or
fstpl
enter
and
mov
bnd
dec
imul
pop
ljmp
scas
xchg
out
sbb
add
out
inc
adc
dec
in
mov
fcoms
jne
dec
pushf
push
xor
sbb
ret
push
mov
js
out
clc
orb
add
inc
mov
mov
aaa
call
movsb
lret
mov
adc
bswap
fimuls
jae
and
lock
fdivs
outsb
jno
ds
xor
inc
int
jecxz
sbb
std
test
outsb
pushf
fidivl
sbb
dec
mov
push
cwtl
push
mov
inc
incl
mov
fs
popa
cwtl
adc
mov
shll
insl
loop
fdivr
sbb
nop
jo
sbb
stos
mov
lock
jle
cmp
xchg
mov
jno
sahf
cs
dec
inc
jmp
test
lcall
adc
sbb
and
fcomp
movsl
ret
test
xor
out
xor
push
jp
sbb
pop
pop
inc
movsb
roll
and
xchg
inc
enter
xchg
mov
stos
aad
stc
or
xchg
ficomps
cmpsb
mov
push
jmp
stc
push
sub
shr
and
clc
clc
lahf
cmp
imul
test
jle
or
imulb
pop
call
cmc
fcom
pop
shlb
std
sbb
bound
jecxz
sub
int3
mov
fxch
fdivs
lahf
dec
adc
sub
xor
pop
cltd
xchg
mov
fidivs
fstpt
neg
out
cmp
xor
push
push
jmp
fsubrl
cld
mov
nop
test
xor
mov
scas
push
sbb
push
mov
adc
sub
shlb
repnz
push
fs
sub
inc
push
or
popa
and
daa
cmp
and
shr
adc
fcoml
fs
out
iret
in
cwtl
or
mov
pop
cmp
dec
mov
aaa
cltd
dec
or
mov
xchg
int3
shrl
adc
ja
cmpsb
jg
inc
fsubrl
or
add
test
sub
xor
sub
jae
sbb
stos
or
inc
ljmp
or
jns
imul
dec
pushf
fidivrs
add
out
mov
popf
popa
shrl
dec
pop
jmp
or
and
jnp
mov
and
aaa
pop
mov
testl
enter
call
jl
or
addr16
add
mov
and
adc
mov
push
add
negl
ret
loope
pushf
sub
ret
push
pop
enter
sbb
roll
aaa
mov
dec
push
mov
jno
adc
arpl
lret
and
iret
in
lds
jge
push
xor
sbb
or
xor
sub
rolb
sub
or
mov
dec
dec
loopne
mov
mov
loop
sbb
mov
orl
push
lea
mov
add
xor
dec
sub
dec
cmpsb
mov
es
sarb
sahf
jbe
insl
stos
test
and
hlt
dec
lds
jns
push
sub
lret
or
inc
test
jecxz
push
or
mov
ret
in
mov
mov
add
ja
sbb
mov
cmc
idiv
mov
aaa
subl
push
and
sar
adc
js
pop
pop
cld
fabs
sbb
cmpsl
cmpsb
xor
aad
cmp
int3
bound
arpl
decb
dec
mov
dec
js
and
xor
sti
fidivrl
dec
jnp
dec
or
loopne
dec
int3
shlb
movsl
push
cmp
imull
ss
popl
iret
inc
jae
fs
xchg
call
iret
in
jmp
mov
dec
imul
sub
movsb
sbb
dec
inc
insb
lea
pop
xchg
pusha
cli
xchg
xlat
leave
ja
sbb
mov
dec
ss
out
push
inc
pop
lock
jmp
dec
outsb
sbbl
pop
xchg
xorl
or
jl
fnclex
jg
jge
jg
das
clc
sbb
inc
push
mov
inc
sbb
mov
jbe
jmp
ret
sub
cs
inc
mov
psrlw
int3
pop
dec
sbb
lret
sbb
lea
pop
cltd
mov
lods
inc
sbb
mov
cltd
bound
mov
sbb
mov
jg
out
and
jle
jge
test
and
mov
cmpps
out
imul
stos
rcrb
or
or
push
dec
lea
push
sub
dec
pop
cmp
cli
inc
hlt
stos
push
rol
sub
push
push
pushf
push
adc
and
lahf
mull
lods
add
cmp
sbb
in
stos
and
pop
mov
or
int
orl
inc
pop
js
mov
xchg
fsts
ljmp
jae
mov
mov
adc
mov
and
push
jne
jp
and
call
adc
adc
lods
or
nop
cltd
push
xchg
dec
mov
ds
lahf
test
lahf
mov
dec
cltd
cwtl
inc
and
sti
icebp
add
mov
add
cwtl
xchg
push
xor
mov
add
xchg
lahf
cmp
dec
filds
pop
jecxz
inc
pop
dec
mov
scas
rolb
icebp
pop
jmp
lcall
adc
fsubrl
pop
das
jmp
out
xchg
adc
push
stos
dec
mov
orl
xchg
pop
mov
das
cmp
outsl
and
mov
insl
push
sub
jne
lcall
les
pop
xchg
clc
mov
pushf
leave
push
add
cs
mov
rcrb
push
cmpsb
push
call
outsb
shll
fsts
jecxz
insb
sti
or
insl
gs
out
xchg
aam
test
push
int3
adc
push
dec
sub
mov
dec
cmp
mov
je
leave
mov
or
nop
loope
rclb
and
add
pop
into
icebp
xor
push
and
sub
rorb
jecxz
arpl
mov
ficoml
jecxz
dec
js
jbe
lods
xchg
adc
mov
xchg
ret
push
sti
dec
dec
jno
or
push
or
pop
sar
inc
outsb
aam
push
pop
loop
gs
orb
out
dec
mov
xlat
lea
lahf
test
sub
nop
shrl
test
push
hlt
mov
dec
fidivrs
lock
repnz
stos
ja
mov
sti
cmc
addr16
sbb
ret
mov
jnp
imulb
in
cmpsb
sub
out
jl
sbb
add
jbe
fstpl
lahf
cmp
push
xchg
mov
ja
or
mov
arpl
popf
sahf
imul
and
into
leave
ljmp
xlat
scas
jl
or
or
push
ljmp
mov
mov
jbe
aad
xchg
xchg
push
cli
imul
addw
add
dec
mov
fsts
test
mov
in
mov
je
mov
or
test
mov
adc
hlt
in
push
dec
inc
insb
sbb
jae
mov
bound
mov
fldenv
call
pop
repz
shrl
repz
cli
aaa
call
enter
sub
sti
mov
jnp
pusha
pop
in
ret
mov
pop
xchg
lea
jae
mov
pop
pop
sbbb
xor
pop
adc
lds
lods
add
mov
scas
push
mov
and
xchg
daa
aaa
jl
push
jle
stc
cmp
lock
sbb
jb
or
add
fmull
lret
adcb
lea
push
sbb
stc
dec
or
dec
aaa
jbe
dec
loop
adc
loopne
icebp
cwtl
adc
lods
rorl
jp
lock
and
sub
jge
dec
jbe
outsl
ficomps
into
xlat
push
clc
inc
ficomps
popa
daa
popf
pop
jg
or
lods
push
dec
pop
or
adc
insl
hlt
ds
sbb
mov
and
adc
adc
jae
mov
lods
lods
dec
pop
notb
in
dec
call
and
adc
or
and
dec
sbb
dec
xchg
nop
pop
cmp
rcrb
xchg
sti
fwait
nop
inc
pop
outsl
inc
and
aad
addr16
clc
and
mov
and
mov
sub
push
testl
sbb
dec
or
out
int3
pop
cmc
insb
mov
sti
lock
lods
out
imul
xor
push
inc
mov
int3
in
cmp
mov
push
cmp
cmpsb
jnp
sbb
adcb
sub
cmpsl
add
dec
das
sbb
inc
add
lods
es
loope,pn
push
int3
in
inc
addl
inc
aam
push
imul
lods
hlt
sub
in
xchg
insl
push
test
pop
int3
ss
dec
mov
popf
and
js
leave
adc
lods
cli
in
push
sub
lahf
flds
aaa
jle
movsl
cmp
lods
aam
fisttps
sub
dec
jmp
and
sub
and
bound
xor
xchg
jno
aad
mov
fstpt
inc
sbb
inc
nop
or
pop
jl
out
pop
sub
mov
inc
repz
and
jp
and
scas
jmp
es
lods
pushf
popa
push
ret
add
cmp
push
pop
push
call
jb
aas
jno
xchg
test
ds
aas
sbb
ret
in
out
sarl
gs
and
pop
xlat
dec
inc
pushf
cmp
cmp
push
je
movsl
mov
testb
dec
adc
sbb
mov
pop
fistpll
push
jno
push
jge
sub
inc
dec
cli
xchg
xorl
mov
test
fsts
inc
and
repnz
inc
mov
out
cmp
outsl
dec
jge
dec
push
jge
pusha
loope
push
out
push
repnz
aad
sub
mov
lret
and
xchg
sub
pop
test
jecxz
test
cmp
ds
nop
loopne
dec
push
out
sub
mov
cmp
aam
loop
stos
push
lahf
jge
test
lods
aad
mov
sub
arpl
sbb
clc
mov
mov
xchg
mov
es
stc
mov
sarb
cmp
out
cmp
jp
mov
lock
mov
clc
aad
jecxz
test
stc
jmp
fdivrs
stos
lock
cmp
cmpsb
sarl
push
jb
sbb
lods
push
or
ja
ljmp
mov
xlat
inc
or
es
aas
mov
sub
mov
cld
cs
in
lods
cmp
ud0
and
xchg
aad
cmp
inc
addr16
andl
push
sub
and
xchg
jb
push
pushf
jne
jae
popf
mov
dec
mov
adc
push
push
mov
addr16
inc
xabort
push
dec
clc
movsl
mov
std
dec
test
sub
lods
insl
cmp
pop
repz
push
mov
mov
out
sbb
fwait
cltd
sbb
or
aad
adc
jno
xor
pop
mov
fisttpl
ret
out
push
sub
nop
sbb
and
pop
pop
imull
xchg
pop
push
sbbl
jl
mov
call
cmp
push
aam
fsubrs
ret
pop
mov
or
cwtl
test
out
mov
movsb
scas
cs
inc
lcall
pop
cli
iret
cmp
imul
xor
arpl
daa
adc
popa
and
dec
mov
push
mov
clc
sub
data16
repz
add
insb
test
and
mov
mov
sbb
lahf
sub
test
in
cld
rcrl
pop
push
mov
inc
and
xor
sub
mov
mov
push
add
pop
add
and
dec
sbb
and
push
dec
repnz
insl
pop
ret
adc
outsl
lret
add
add
mov
mov
test
shrb
cwtl
out
adcl
jne
das
lds
sti
xlat
rcll
scas
sub
mov
push
stos
cmp
push
pop
ret
or
out
pop
adc
add
add
cs
out
call
sub
mov
pop
das
aaa
mov
pop
rcll
jb
fadds
mov
sbb
imul
cltd
push
mov
repz
fisubs
mov
setge
mov
lahf
or
cld
sahf
push
cltd
lahf
push
pop
xor
mov
arpl
fadds
add
mov
cmp
inc
cld
jle
pop
popf
push
lcall
mov
mov
pop
cmp
aas
in
adc
or
scas
inc
test
mov
cmp
jbe
mov
xchg
rclb
sbb
sbb
and
pusha
sub
add
mov
adc
mov
dec
push
mov
imul
nop
insl
rcrb
push
mov
repnz
int
test
xor
test
lret
aaa
mov
sbbb
cltd
push
jnp
mov
cltd
in
or
cmp
test
jae
les
fists
out
mov
lcall
mov
cmc
jno
jbe
xlat
call
loop
nop
cld
out
pop
fstpt
stos
sbb
push
sahf
jl
mov
cmc
xchg
push
cld
gs
cmp
xchg
fadds
fstpt
aad
pop
sub
or
jmp
cmp
cmp
mov
cmpsb
or
adc
dec
inc
mov
push
adc
stos
jbe
aam
mov
loopne
into
mov
xor
out
jnp
sbb
jbe
xchg
xchg
xor
add
adcl
scas
leave
push
pop
mov
mov
call
push
icebp
scas
ret
sub
lock
adc
pop
push
inc
pop
fnsave
pop
mov
push
push
not
loop
mov
je
das
inc
mov
out
popa
sub
test
int3
add
or
sbb
mov
cmp
cs
out
aaa
jno
rorl
je
js
push
out
sub
and
call
adc
sub
cwtl
cmp
pop
pushf
shl
clc
jo
je
inc
les
sbb
add
mov
insb
xor
ljmp
test
cmpl
cmp
hlt
mov
cmp
jb
out
push
jnp
bound
mov
xchg
mov
scas
in
clc
cld
ljmp
or
loope
jecxz
cmp
test
sub
adc
mov
pop
scas
das
cmp
push
das
mov
das
inc
inc
xchg
dec
scas
and
mov
jl
das
out
pop
gs
sbb
shl
xlat
int3
mov
jno
mov
lret
or
jecxz
xor
aam
scas
jbe
jo,pt
fucomp
xor
jge
iret
in
shlb
lods
outsb
sbb
add
daa
out
jno
cli
adc
push
jl
adc
or
push
mov
sbb
adc
xor
and
cli
dec
cmp
rcrl
arpl
jl
mov
sbb
pop
dec
out
xchg
mov
push
xor
or
push
cmp
cli
movsb
leave
sub
mov
mov
stos
xchg
mov
out
mov
cltd
test
das
adc
xorb
aas
fidivrs
shr
or
lahf
popl
mov
inc
pop
push
fwait
mov
out
or
lods
les
xlat
fmuls
jge
cmpsb
mov
sub
lods
xchg
leave
cltd
add
adc
addr16
mov
ja
sbb
in
movsl
xor
out
jl
lea
add
in
mov
sbb
xchg
enter
vunpckhps
dec
mov
inc
pushl
sub
cmp
push
mov
insb
and
add
cmpl
popa
test
loope
sahf
aaa
jecxz
mov
pop
ret
ja
add
pop
mov
pop
sti
mov
test
pop
rcrl
xor
nop
dec
push
xor
pop
add
rcll
dec
andb
jmp
lods
rolb
das
lret
add
lea
dec
ficoml
add
add
and
popf
adc
jno
rcl
xchg
cltd
jg
stos
ja
sub
pop
push
jne
lret
adcb
ret
jb
add
movsl
stc
ficompl
push
xor
xor
shlb
pusha
lret
out
sahf
pop
mov
lret
in
xchg
add
push
jecxz
notl
xchg
loope
adc
sbb
popf
mov
clc
mov
mov
mov
cmp
mov
add
push
or
insl
adc
xchg
pop
mov
pop
aam
inc
pushf
xor
mov
or
push
out
flds
xor
mov
mov
in
lret
enter
xor
test
cmp
pop
and
mov
push
push
mov
xor
shl
sahf
jg
mov
daa
jge
jp
mov
in
mov
fadd
dec
cmp
ret
rcrb
adc
imul
fnsave
pop
les
dec
ss
mov
adc
cltd
aam
jmp
xchg
or
dec
and
data16
test
daa
test
fs
push
sbb
insb
out
dec
fdivrs
negb
push
push
in
pop
pop
lcall
dec
repnz
adc
xchg
xor
sub
fldcw
xchg
pop
loop
fiaddl
test
push
xor
outsl
mov
push
loop
mov
in
arpl
fs
mov
sub
scas
dec
fmuls
ja
lret
push
push
fisubrl
mov
push
sbb
mov
or
xor
mov
int3
push
xchg
and
dec
in
cmp
in
cmpsl
sbb
fisttpl
adc
ja
enter
pop
add
xor
xchg
imul
pop
jle
xlat
movb
int
stc
dec
in
mov
jle
xchg
mov
int
sbb
stc
jns
xchg
lret
imul
sbb
loop
loope
in
call
push
mov
scas
sub
xor
in
sub
lret
push
addr16
ds
add
or
xchg
call
das
sbb
cmpsl
mov
adc
mov
mov
mov
testb
loope
pop
je
push
test
cld
stos
sbb
xor
pop
data16
push
inc
jmp
xor
sub
inc
jp
or
sub
mov
adc
fwait
cld
jg
jge
mov
repz
mov
xchg
mov
push
pop
scas
add
pop
lods
jle,pn
mov
icebp
jle
xchg
dec
iret
shrb
ss
out
hlt
in
out
mov
imul
adc
andl
add
sub
mov
sbb
int3
push
jg
movsb
mov
adc
cmp
fsts
repz
sub
cmc
lret
adc
es
movb
std
movsl
cmpsb
add
push
lock
lock
insl
adc
je
movsb
test
xchg
aaa
cmpsb
pop
ret
jae
outsb
push
mov
out
pop
loope
fs
inc
add
xchg
movsb
sti
mov
sbb
cld
ljmp
jge
pop
pop
add
stc
xchg
cmp
dec
fistl
mov
ret
dec
push
loop
push
mov
push
mov
xchg
xchg
stc
outsl
enter
and
scas
daa
cld
andl
push
xchg
jns
sarl
add
sub
int
out
movsl
push
pop
sbb
mov
decl
int3
aas
and
js
lds
mov
jno
aaa
inc
lods
xor
mov
sub
aad
dec
and
aad
add
stos
flds
sub
inc
xor
punpcklbw
xchg
inc
test
loopne
cmp
and
pop
pop
jns
sbb
pop
iret
or
or
dec
addr16
sbb
adc
or
xchg
add
in
cmc
push
loop
cmp
mov
aam
test
mov
aas
push
imul
std
gs
jb
insb
adc
lahf
aas
push
out
adc
das
call
or
jns
mov
ficoml
call
pop
je
test
push
add
addr16
mov
aad
add
cltd
and
imul
loope
std
pop
push
fwait
mov
cltd
mov
adc
lods
test
cmp
rcrl
hlt
shlb
or
pop
jecxz
xor
mov
in
insb
mov
dec
mov
in
and
stc
push
push
test
int3
insl
inc
stos
test
sub
jne
pop
push
or
push
mov
cwtl
shll
les
jge
adc
mov
repnz
ljmp
outsb
mov
rcrl
ljmpw
repnz
xchg
repnz
push
xor
pop
std
and
pop
ret
cmpsb
sub
add
aas
popf
adc
sbb
pop
lock
xlat
xchg
and
sbb
xchg
jmp
clc
test
xchg
add
inc
and
in
out
jbe
out
ds
rcrb
mov
cli
inc
jns
in
bound
xlat
push
xchg
addr16
cmc
aas
push
addb
adc
mov
into
xchg
mov
pop
test
cmc
mov
mov
sub
jns
test
or
out
shlb
mov
push
cmpsl
aas
roll
mov
sub
cli
jmp
and
or
dec
fadds
scas
roll
repz
outsb
sahf
cltd
and
mov
fiaddl
imul
andl
inc
pop
push
mov
adcb
push
mov
mov
jnp
ror
aam
dec
xor
scas
inc
ljmp
bswap
xchg
jno
add
inc
jmp
test
and
push
push
cmp
adc
jo
push
les
movsb
daa
cmc
shll
xor
sbbb
bound
stos
pop
dec
je
mov
xor
cmc
lret
or
fisttpll
aaa
jl
lret
mov
lea
xchg
mov
xchg
sbb
in
jmp
jecxz
push
ljmp
imul
mov
sub
jne
sbb
mov
sub
push
mov
cmc
sub
mov
clc
in
jg
cli
shlb
sub
push
mov
cmp
dec
repnz
mov
fdivp
inc
scas
inc
sbb
cmpsl
sbb
or
mov
bound
stc
jge
and
xor
pop
adc
xchg
es
jne
andl
clc
push
push
jo
sahf
jb
pop
sbb
cmc
mov
inc
or
sub
cmc
loope
xchg
pop
fdivrl
lea
cmp
in
xchg
pop
pop
sub
cmp
mov
sbb
cmpsb
mov
xchg
jmp
cmp
push
xchg
int3
adc
enter
ss
push
icebp
fsubl
sbb
mov
fidivrl
push
clc
repnz
jnp
and
sub
cmp
jno
outsl
nop
mov
push
mov
sub
mov
jg
shll
scas
pop
xor
xor
xchg
and
pop
jmp
into
push
xchg
loopne
outsb
int3
push
pop
xchg
mov
dec
fidivs
cltd
sbb
mov
aad
mov
jo
mov
mov
lock
pop
int
push
fcomps
xchg
push
cmp
xchg
cmpsl
dec
cmp
dec
popf
dec
adc
pop
and
loop
int
int3
gs
push
inc
xchg
xchg
test
xchg
sahf
sbb
imul
push
xchg
cmp
dec
test
xchg
stos
ret
mov
inc
or
pushf
fwait
and
lods
jge
aas
out
cld
dec
push
aas
fldl
vmulps
add
cmpsb
xor
xlat
xor
ds
inc
popf
add
jo
cmp
sub
jecxz
xor
or
nop
es
xchg
jnp
fmul
add
imul
jg
stos
rcrb
push
cmp
xor
out
mov
sub
ljmp
pop
sbb
push
cmp
xchg
inc
pop
mov
decl
inc
fcoms
cmp
pop
pop
les
add
dec
movsl
fucomi
in
fs
or
and
icebp
push
popa
mov
sbbb
dec
mov
xchg
jle
daa
imul
and
loopne
loopne
cmp
enter
sbb
ret
lret
call
jmp
mov
arpl
fs
test
es
cmp
sub
push
adc
aam
mov
js
fsubrp
outsl
outsl
xchg
sub
inc
in
subl
addr16
push
les
inc
sbb
jo
imul
sbb
inc
mov
sub
aas
push
bound
or
hlt
ret
mov
xchg
sbb
mov
jbe
pusha
loop
inc
pop
pop
inc
xchg
push
shl
sti
add
xor
push
mov
bound
bound
lock
cli
ret
inc
cmp
jnp
jbe
mov
lods
mov
push
out
pop
jno
xchg
mov
outsb
subl
mov
jge
mov
insb
pop
ror
and
ret
mov
xor
dec
xchg
pop
daa
sub
pop
add
xchg
stos
xor
ror
sti
test
orl
repnz
testb
add
mov
xchg
loope
or
or
mov
push
scas
inc
pop
push
lea
add
stc
push
loop
mov
je
adc
push
push
stos
push
loop
cltd
mov
dec
pop
ficoms
xor
or
lahf
cmpsb
not
cltd
mov
or
repnz
lods
ds
mov
adc
inc
dec
test
popa
fs
inc
gs
xor
jae
roll
addr16
leave
stos
cmp
jo
push
or
mov
mov
xchg
clc
sbb
jno
sbb
xchg
sbb
leave
aad
mov
xor
fisttpll
dec
loop
push
pop
rcrl
or
mov
negb
test
iret
negb
imul
pop
pop
sbb
push
mov
add
fsubl
aam
pop
stc
lds
lds
push
inc
dec
scas
jo
xor
adc
pusha
outsb
xlat
jg
mov
imul
pop
popf
xchg
stos
aad
push
cmc
test
cwtl
addr16
jbe
mov
or
rorl
movsl
ja
sbb
mov
fiadds
jb
es
aam
aam
sbb
cmp
xor
cwtl
jp
jb
hlt
bsr
addb
cld
ffree
ja
mov
mov
iret
scas
push
rcl
incl
xor
push
sub
sbb
and
insb
loopne
cmpsl
or
out
lret
cli
fwait
inc
or
int3
cltd
in
pop
mov
div
xorl
ljmp
adc
mov
ficoml
dec
sub
iret
jge
pusha
in
lahf
or
ret
mov
add
ljmp
fcmovu
inc
mov
jmp
enter
in
dec
mov
adc
inc
mov
dec
adc
in
aad
das
push
sub
cmp
push
popa
sub
int
push
dec
data16
sarb
outsl
cli
ficoms
xchg
dec
sbb
mov
cmpsb
push
mov
loopne
or
insl
test
imul
xchg
dec
cltd
cmp
xchg
cmp
lret
xor
jns
loope
jns
pop
loop
inc
popf
scas
mov
mov
add
or
push
add
popf
sbb
aad
stos
or
arpl
bound
mov
rcl
mov
out
repnz
fisubl
ret
pushf
push
cmpsl
jne,pn
dec
out
popf
xor
lret
cmp
lret
mov
ljmp
call
ret
aam
in
sbb
adc
xchg
or
xor
cwtl
je
cltd
cmp
inc
cmp
sub
mov
mov
pop
test
nop
test
xor
mov
pop
push
add
inc
inc
inc
lods
lock
or
cmpsb
subl
loopne
cmpsl
movsl
mov
lods
sbb
add
or
shll
mov
mov
xchg
lret
clc
jno
dec
mov
lock
jmp
xchg
xor
outsb
pop
enter
jmp
fsubs
mov
mov
decl
jne
adc
inc
cmp
rcl
data16
sub
mov
push
cmp
add
shll
loop
dec
lret
aam
mov
jo
push
loope
mov
aad
pop
pop
pop
pop
mov
movsb
aas
jp
in
addb
xor
rclb
push
loope
sub
xchg
faddl
push
mov
cwtl
arpl
cmp
aaa
icebp
je
adc
jmp
lret
in
dec
test
jle
call
jecxz
adc
aad
xor
ret
ds
sbb
pop
mov
mov
dec
test
clc
loop
cmp
leave
push
push
or
sub
insb
add
hlt
jbe
mov
inc
cmp
sub
js,pn
pop
inc
push
or
xor
inc
sub
sarb
fisubrs
xchg
fmuls
mov
cmp
aam
pop
mov
push
sbb
mov
mov
push
mov
ja
or
aam
add
pop
dec
icebp
out
sub
or
pop
fimuls
std
imul
push
adc
ret
xorb
push
ljmp
pop
clc
aas
bound
push
lret
in
push
push
aam
push
mov
subb
inc
lds
add
mov
mov
int
pop
jge
cld
jbe
add
pop
enter
out
inc
lock
pop
loop
shrl
jno
xchg
pop
ljmp
and
loopne
les
mov
adc
mov
push
push
test
repz
fdivrl
push
cmpsl
xor
insl
scas
inc
inc
insl
pop
sbb
inc
leave
hlt
cltd
cmpsl
pop
shl
mov
unpcklps
lret
pop
jmp
or
ljmp
ss
add
test
push
sbb
add
fdivrl
mov
push
xor
cmp
push
andl
addb
fdivrs
cmp
sarb
in
aam
or
cld
mov
out
dec
xchg
andb
sbb
fldcw
fstp
jg
adc
lret
test
subb
enter
sarb
or
inc
aaa
and
lret
xchg
movsl
mov
scas
cmpsl
mull
cld
dec
pushf
mov
leavew
repz
xchg
jle
setae
sub
mov
mov
mov
stos
lock
mov
cld
sub
jo
rorl
sbb
cmp
and
xor
out
fstl
mov
adc
iret
dec
push
movsb
pop
loop
popf
mov
mov
pop
lahf
fcoml
jge
xor
add
arpl
adc
shlb
or
mov
stos
xor
out
fsubrl
push
sbb
sbb
pop
ds
mov
ja
mull
iret
outsl
bound
xor
push
jge
push
cmc
push
xlat
xchg
mov
add
xchg
and
mov
adc
xchg
dec
push
idivl
std
sti
pop
mov
js
xchg
out
push
inc
pop
cmpsl
pop
jbe
loopne
mov
sub
sub
xor
icebp
cli
add
sbb
inc
popf
sbb
push
hlt
pop
addl
mov
ret
dec
add
lods
testb
imul
out
in
inc
cmp
fidivl
js
mov
sub
inc
pop
pusha
push
ja
and
bound
and
hlt
int3
adcb
sbb
jbe
fiadds
popa
jnp
jmp
aad
dec
cmp
add
imul
xor
sarl
mov
cli
dec
movsb
ss
mov
cli
shlb
inc
mov
jb
push
lcall
cmp
mov
cwtl
xchg
test
sbb
mov
lock
jp
out
cmp
push
xchg
push
cld
pop
sub
xor
mov
fldt
sub
jle
cwtl
pop
xchg
pop
mov
dec
jg
add
outsl
lods
mov
movsb
psubsw
pusha
cmpsb
fsubs
psubsb
add
add
test
mov
sbb
les
imul
pushf
xchg
cltd
dec
add
mov
cltd
dec
adc
inc
push
mov
cltd
mov
sahf
adc
sub
dec
or
fwait
add
cmp
inc
jmp
ljmp
and
and
lods
mov
or
push
dec
ds
cmp
mov
sub
repz
iret
mov
movsb
out
mov
cmpsb
jmp
hlt
leave
jne
adc
nop
xor
jge
jns
loop
add
lods
nop
pop
mov
lock
aas
sub
push
dec
cmpsb
scas
dec
lods
clc
jnp
jb
mov
and
xor
pop
test
mov
inc
je
inc
sbb
pusha
sbb
xchg
adc
cld
inc
orl
out
push
ja,pn
mov
jnp
fcompl
jge
dec
add
stc
pop
inc
xor
lds
pop
fwait
jp
and
fcoml
and
push
sar
icebp
pop
mov
bound
xor
popf
mov
gs
jge
xchg
repz
cmp
xchg
das
ds
insl
frstor
push
mov
or
cs
pop
adc
daa
adc
dec
jo
inc
sub
test
add
popf
cld
sti
cs
or
push
jge
loopne
lods
pop
or
pop
sbb
xchg
add
hlt
out
cmovl
jmp
outsb
dec
mov
iret
clc
xchg
fisubs
cmp
mov
xor
test
and
test
add
add
dec
mov
addr16
dec
scas
cmp
push
dec
into
mov
xorl
adc
andb
pop
cld
push
fcompl
out
mov
cmpsb
sbb
loopne
lds
add
jl
adc
sbb
divb
xchg
cmp
loopne
aas
sbb
mov
pop
cmc
push
or
int
xchg
sti
sub
and
fs
add
adc
and
js
subb
jo
inc
or
pop
aam
add
into
std
mov
fwait
and
js
push
add
pusha
xchg
lods
rcll
mov
std
nop
scas
ror
shrb
mov
sbb
sbb
imul
push
dec
clc
enter
rcrb
sub
sbb
js
jecxz
inc
nop
or
push
ret
sar
out
mov
aam
fsubl
insl
dec
pop
jnp
out
jno
adc
inc
jb
arpl
call
add
add
pop
faddp
add
sub
mul
add
fstpt
add
cli
test
jmp
jle
fcomps
push
push
cltd
in
cmp
mov
rcll
clc
pop
mov
ret
mov
mov
push
adc
lret
jmp
jbe
mov
in
loope
pop
sar
sti
dec
aad
jae
cmp
pop
scas
mov
imul
mov
bound
dec
push
iret
push
and
add
mov
inc
xor
and
sub
dec
dec
pop
pop
and
xchg
aaa
inc
sbb
push
das
lds
dec
xchg
cmp
and
push
sbb
and
mov
dec
bound
ja
jb
imul
andb
fistpl
pop
bound
in
mov
les
pop
add
cwtl
pop
xchg
div
mov
mov
inc
outsb
shr
push
xchg
dec
or
std
and
lds
push
imul
mov
jne
sub
scas
and
mov
sahf
xor
and
icebp
cwtl
es
jb
cmp
cmpsl
repz
cmp
sub
push
nop
xor
jmp
jp
add
mov
sti
mov
add
shl
jle
xchg
pop
subb
push
sbb
mov
test
fs
lret
mov
cmp
cmp
cld
cli
lcall
xchg
in
repnz
sbb
pushf
lahf
or
xor
lock
inc
cwtl
cmp
frstor
mov
cld
inc
inc
add
mov
push
les
mov
or
push
push
adc
or
gs
mov
jnp
into
fmuls
xchg
adc
and
out
dec
mov
sub
popf
lock
aas
int3
cmp
fldt
ljmp
jnp
push
or
std
pop
mov
jns
add
mov
inc
xor
iret
inc
mov
nop
out
out
pop
or
insb
push
leave
fwait
rcrl
mov
icebp
pop
and
in
mov
stos
lods
jl
cli
push
in
cmp
hlt
ss
outsb
cwtl
mov
imul
out
test
test
and
adc
lock
fsubs
pop
mov
nop
repz
inc
mov
popf
pop
popf
and
mov
test
push
sar
add
enter
or
test
ss
outsl
fwait
rolb
repz
sti
add
xchg
test
pop
jp
outsl
push
lret
lock
pop
rorb
aam
fidivrl
ret
pop
pop
loope
and
mov
add
ret
imull
mov
jae
mov
sub
stos
rolb
out
or
in
xchg
xchg
jg
mov
and
pusha
pop
inc
imul
add
xorl
mov
dec
xchg
sbb
jns
mov
sbb
ret
fcomi
test
mov
inc
push
xchg
jne
daa
int3
xor
push
push
sub
clc
gs
ja
addr16
xchg
lret
jle
cmp
outsl
iret
inc
insl
xchg
mov
mov
lods
xor
test
dec
fs
je
and
xor
mov
pop
inc
pop
push
jp
add
movsl
mov
jmp
cs
sbbb
in
mov
push
das
push
jae
jb
imull
inc
inc
fwait
mov
data16
js
cwtl
jg
push
cld
sbb
lods
cmp
push
fstpt
xchg
popf
sub
jp
lret
push
push
sub
call
int3
jno
popa
nop
js
fldenv
sub
out
dec
pop
sub
or
mov
mov
mov
int
or
je
jg
xchg
outsl
and
daa
xchg
out
into
repz
inc
push
pop
push
push
into
add
mov
mov
adc
ficomps
jno
mov
adc
pop
test
faddl
cltd
cmpsb
or
in
pop
pop
scas
adc
jb
mov
loop
out
push
pop
xor
mov
clc
int
out
xor
pop
insl
aam
stc
dec
or
stc
dec
pop
add
pop
pcmpgtb
addl
scas
or
cmpsl
fmul
xor
ret
mov
mov
test
cmc
cwtl
xor
fwait
notb
jmp
cmp
int3
andl
xchg
sbb
push
lock
andb
xor
sbbl
loop
in
mov
pop
jbe
test
mov
popf
jae
and
repz
fildll
or
aas
sub
ljmp
dec
outsb
xor
push
mov
ss
movsl
iret
std
and
jle
outsl
xor
pop
popf
rcrl
fistpl
cmc
subb
bound
adc
xor
pavgw
jle
lret
popf
sbb
rcrb
test
int3
les
pop
inc
movb
test
adc
adc
xchg
test
push
xor
pop
ds
add
or
inc
and
sub
leave
add
mov
mov
loope
aas
or
or
mov
loope
mov
xchg
loope
sub
push
rol
imul
pop
mov
mov
mov
rcl
aaa
fbld
into
jnp
das
test
jns
jnp
and
mov
cmpsb
push
mov
js
xor
insl
or
call
mov
in
adc
or
daa
cltd
mov
in
insl
sub
push
jnp
fwait
push
mov
stos
and
cmc
rcll
push
xor
lcall
gs
pop
leave
xor
jne
cltd
repnz
cs
outsl
cmp
sbb
mov
pop
sahf
mov
mov
add
sub
and
and
lds
lods
test
pop
iret
push
mov
adc
mov
sahf
fs
mov
test
mov
pop
xchg
dec
test
adc
cmp
push
rcl
adc
mov
fisubrs
into
cwtl
je
push
add
mov
sub
inc
cltd
mov
loop
leave
mov
adc
sbb
dec
jns,pn
or
xchg
outsl
cs
rcrl
decb
cmp
dec
sub
mov
pop
scas
add
clc
andl
and
fcmovne
test
movsb
add
adc
ret
fstl
mov
das
add
les
mov
jecxz
mov
fdivrl
inc
add
pop
xchg
adc
xchg
sbb
shl
push
lahf
mov
mov
and
test
pop
jnp
mov
out
pop
aas
cmpsl
hlt
test
clc
out
dec
incb
mov
ja
fs
adcb
or
loopne
push
xor
add
insl
shll
or
jmp
movsl
sub
lret
adc
fisttpl
lock
test
jge
or
lcall
ficoms
mov
daa
out
mov
add
hlt
ja
nop
test
movsl
or
lods
jno
cmpsl
and
push
xchg
mov
xlat
add
popa
cmp
sti
xchg
cmpsb
and
loopne
xchg
mov
mov
adc
imul
add
add
iret
xor
iret
bound
xor
sbb
sbb
mov
push
mov
mov
pop
in
inc
inc
push
add
icebp
fisttpl
int3
pop
test
xchg
sub
popf
sti
jle
push
and
mov
push
sbb
push
push
lret
repz
xor
pop
xchg
enter
in
inc
test
dec
nop
mov
loopne
mov
mov
and
fimull
outsl
xchg
adc
mov
push
push
jb
int
cmp
inc
xorb
lret
sar
ret
clc
dec
mov
sub
int3
xchg
fnstsw
inc
iret
mov
fdivs
imul
std
pop
pushf
cmpsl
push
in
lcall
adc
ret
repnz
jl
out
loope
rcrl
jns
in
jmp
xor
lret
mov
std
fbld
push
inc
loopne
ret
add
aam
xor
jnp
xchg
mov
js
inc
dec
mov
sub
add
lds
out
inc
jecxz
pop
mov
and
fcoms
movsb
clc
push
cmpb
or
cmpsl
imul
leave
pop
and
movsl
iret
and
mov
mov
fwait
out
bound
inc
in
mov
ds
std
add
xorl
int
fiaddl
mov
and
jmp
adc
mov
mov
lahf
addl
pushf
fwait
xor
or
and
push
mov
popf
mov
aam
cltd
add
jge
jae
pop
fmull
fisubrl
cmp
add
push
aam
jp
not
jb
daa
jecxz
scas
lret
xor
mov
test
add
sti
sti
test
or
in
mov
ret
pop
rolb
es
lds
pushf
mov
inc
repz
or
xor
rcrl
into
add
dec
lods
dec
mov
inc
movsb
ret
outsb
push
popf
leave
movsb
bound
xchg
stos
sub
scas
jecxz
sbb
rorl
fwait
sbb
cltd
mov
insl
push
push
cmp
shr
push
loope
push
iret
test
inc
out
leave
call
ficoms
out
xchg
xor
fistpll
cmpsl
jae
dec
jge
dec
and
mov
outsl
out
shl
aam
xchg
mov
cli
mov
out
mov
xchg
movsl
mov
repz
push
mov
pop
fisttpl
idiv
pop
movsl
mov
fs
or
dec
sub
mov
cld
push
jbe
jecxz
ja
enter
das
aas
add
and
popf
add
jmp
es
inc
sbb
mov
xor
test
dec
jbe
aam
aam
insb
scas
cmp
idivl
insl
dec
mull
mov
and
fidivs
jmp
aaa
scas
arpl
mov
xor
lret
aas
rcll
insl
xorl
and
add
and
bound
scas
and
test
sbb
dec
lods
mov
and
enter
adc
push
sub
cmp
test
hlt
or
aas
mov
in
adc
inc
ds
js
in
jnp
imul
bnd
aad
add
cwtl
imul
inc
cmp
and
insl
cmpsl
mov
sub
sub
fdivr
mov
in
mov
jle
xchg
mov
enter
jmp
sub
and
xchg
dec
in
mov
nop
pusha
fcmovnu
dec
xor
and
inc
xchg
scas
ja
xor
insl
movsb
jns
shll
push
push
fwait
lahf
outsl
in
mov
aad
sarl
pop
test
pop
push
add
xchg
pop
xchg
push
inc
mov
and
fsubp
push
mov
ja
cmpsb
mov
cmp
out
sti
cmp
sarb
testl
decb
test
sahf
icebp
loop
gs
xlat
cmc
cmp
mov
dec
scas
sub
xchg
lods
or
mov
jle
cltd
xor
or
jmp
arpl
xor
cs
jae
push
push
mov
mov
test
insl
nop
lds
and
popf
jecxz
daa
sub
add
sub
sbb
xchg
test
rcrb
add
sbb
gs
sub
dec
jo
sbb
mov
arpl
daa
add
sub
enter
repz
imul
pop
ret
sarl
sub
push
arpl
inc
inc
or
sbb
dec
andb
mov
jae
adc
roll
push
mov
add
in
sbb
push
xor
cmp
gs
mov
ds
cmpsl
cmp
dec
or
fs
dec
aad
andl
fsubrl
scas
adc
add
xor
push
jnp
sbb
xor
mov
jmp
loop
sahf
mov
cmp
or
arpl
insl
push
out
jle
adc
fidivrs
ja
mov
lcall
mov
mov
pushf
mov
inc
lret
lahf
and
sub
jmp
dec
push
cwtl
ficomps
frstor
mov
sub
push
daa
aaa
mov
mov
ss
lods
push
xchg
push
mov
add
add
lock
jbe
or
push
sub
aad
stos
add
jle
test
xchg
mov
test
xlat
int3
ret
and
popa
push
xchg
mov
adc
repz
and
mov
jge
lret
mov
jns
cld
push
icebp
ret
mov
hlt
fsubs
outsl
mov
xor
mov
push
or
bound
lret
mov
pop
lea
xchg
arpl
push
pop
inc
dec
pop
pop
mov
ljmp
pop
test
rcrl
cmpsl
jno
inc
adc
jo
out
pop
jl
push
pop
pushf
loop
xchg
pop
enter
or
mov
pop
flds
add
add
repz
lret
cli
jmp
loop
sub
push
sub
dec
cs
setae
addr16
imul
enter
dec
pop
lret
inc
es
js
mov
or
mov
cmc
fisubrs
bound
stos
sub
mov
das
bound
inc
pushf
dec
mov
clc
pop
pop
ret
sub
popf
scas
outsl
iret
enter
sahf
xlat
mov
gs
push
mov
fwait
xchg
cmc
cmc
mov
fldt
mov
popf
fs
jno
or
pop
cmpsl
jmp
push
jge
mov
mov
jmp
jecxz
add
mov
in
outsl
dec
xor
push
pop
mov
and
pusha
repz
test
sbb
cmpsl
outsb
dec
inc
pop
shlb
icebp
cli
or
lods
push
push
pop
pop
scas
mov
cmpsl
jmp
cmp
jo
out
push
xchg
icebp
xchg
lea
aas
xor
ret
inc
mov
mov
adc
xchg
xlat
jns
cmp
stc
stc
mov
mov
mov
mov
inc
loope
dec
fidivrl
test
mov
xchg
stos
outsl
popw
sbb
push
mov
in
aad
sbb
shll
inc
sbb
sbb
lahf
les
fdiv
mov
push
adc
add
push
jns
stos
mov
lcall
sbb
daa
xchg
pop
out
pusha
mov
xchg
or
cmc
test
and
mov
mov
loop
add
mov
pop
push
repnz
pusha
dec
fisttpl
fcomps
push
dec
cmp
cmp
mov
push
rol
xorl
lcall
in
inc
jp
imul
lret
sbb
sti
fsts
or
in
push
and
test
inc
sarl
outsl
mov
out
arpl
fdivrp
jno
sbbl
mov
and
adc
push
jmp
jne
mov
int3
sarb
mov
mov
xchg
pop
test
dec
nop
pop
push
xor
testb
mov
mov
fs
fwait
xor
jae
gs
repz
xchg
add
xor
adc
lcall
dec
mov
jns
aad
scas
mov
ret
lahf
nop
push
shll
aad
push
les
add
cs
sbb
out
sub
push
sub
lcall
jnp
lea
fwait
pop
or
js
out
aas
or
scas
pop
mov
testb
jne
sbb
fwait
sbb
data16
data16
rorb
inc
dec
lret
addr16
sbb
aad
pop
push
in
loopne
aas
inc
or
out
pop
daa
movsl
dec
imul
jns
adc
inc
mov
pop
add
push
int3
mov
jmp
mov
mov
out
xchg
jno
scas
ja
add
pushf
mov
pop
mov
cmp
movsl
mov
cmp
cmp
mov
out
sbb
addr16
ret
cmp
jb
mov
sub
pop
or
outsb
movsl
mov
sbb
fildl
jno
xor
iret
imul
mov
cmpb
add
mov
lahf
sub
into
arpl
fisubl
inc
xchg
leave
mov
repz
adc
test
xchg
push
fidivrl
adc
sbbl
fs
fwait
xor
rcrb
dec
test
push
mov
daa
pop
aad
dec
or
pop
iret
testl
in
das
push
or
cwtl
popf
pop
add
sbb
add
sbbb
xchg
in
je
xor
je
test
loopne
lds
test
xlat
cmp
mov
call
loop
pop
ljmp
mov
mov
adc
insl
cmp
sub
add
pop
ja
cmc
aas
fnstenvs
inc
repz
or
pop
xchg
out
fisttpll
dec
xchg
sbb
xchg
push
push
ljmp
sbb
popa
or
aas
push
adc
mov
inc
sub
rorb
fcoms
push
fwait
dec
push
leave
loop
cs
js
mov
or
hlt
add
mov
into
scas
push
sbb
addb
data16
push
sbb
and
add
push
mov
ds
loop
loopne
outsb
inc
inc
adc
sarb
stc
aad
mov
mov
stos
cltd
outsb
push
cmpsl
stos
mov
jg
mov
xor
imull
jno
sub
int3
and
inc
and
mov
dec
out
push
mov
xor
jmp
cmp
push
xchg
call
add
add
ljmp
repz
mov
and
push
popf
adc
div
pop
popa
mov
xor
and
iret
jns
pop
int3
lock
ljmp
loop
adc
idivb
in
ds
cmpsb
or
in
pop
stos
mov
sbb
test
pop
icebp
leave
and
in
mov
in
mov
js
inc
shrl
and
fmul
jnp
cmpsl
and
daa
std
stos
and
ret
jle
mov
popa
mov
or
adc
aad
dec
leave
jb
dec
ror
add
cmp
mov
mov
daa
pop
inc
or
pop
jno
into
sti
shrl
testl
jge
or
xor
push
push
rcr
bound
cmp
loop
sbb
jbe
mov
push
cmp
loopne
stos
add
jp
repnz
inc
pop
mov
xchg
lds
movsl
int
cwtl
sub
sti
ss
outsb
sti
xchg
mov
and
push
cli
add
jl
out
xor
xlat
mov
data16
mov
test
ds
cwtl
and
popf
sub
mov
inc
fimull
adcl
stos
mov
sti
in
xor
mov
movl
pop
and
outsb
call
pop
mov
mov
jp
scas
stos
out
add
cmpsl
rorl
or
divl
fwait
rolb
mov
adc
jp
repnz
test
sub
adc
sub
mov
jmp
mov
std
fcmovnu
shll
stos
xor
mov
sub
jne
adc
push
ja
mov
fistpl
test
inc
pusha
pop
sub
aam
cmp
call
std
test
pop
sti
and
dec
push
lods
xlat
pop
out
jnp
clc
mov
adc
jl
sub
cmp
lods
fxch
sbb
xchg
cmp
into
inc
stos
adcb
pushl
jge
repnz
lahf
stos
addl
js
cltd
fdivrs
inc
orb
loop
aas
test
inc
test
movsl
aam
and
mov
jo
test
rclb
nop
xchg
mov
imul
push
pop
movsb
addr16
adc
in
add
sarb
and
out
dec
dec
inc
pop
mov
cld
mov
push
sub
adc
sti
sbb
hlt
cmp
lods
push
xor
xor
cmp
mov
push
negl
add
lock
push
pop
nop
rep
loopne
rcrl
ret
sub
push
jp
mov
stos
sub
push
push
xor
movsb
add
ja
repz
xchg
jne
add
mov
out
jns
cmp
jl
les
repz
repnz
mulb
sbb
test
pop
push
mov
call
inc
movsl
ja
jp
mov
xchg
push
pusha
rcrb
popf
or
xchg
push
stc
mov
scas
cmpsl
lea
adcb
ret
cmp
cs
xor
mov
xchg
pop
pop
fimuls
loopne
data16
scas
inc
push
shrl
aam
pop
cld
shlb
icebp
pop
xchg
xlat
dec
push
in
pop
les
aaa
jge
fstp
and
push
cmp
pop
insl
ss
push
push
gs
jne
lcall
jmp
lcall
testb
sub
inc
push
and
and
adc
sbb
mov
fmull
out
repz
mov
add
mov
jg
sub
jns
call
lea
xchg
lret
rclb
shll
dec
sub
inc
dec
or
sbb
and
xchg
xchg
clc
mov
inc
in
pop
sub
lcall
scas
fidivrs
pop
icebp
iret
out
inc
push
ret
aad
sbb
pop
xchg
iret
aas
jl
or
push
pop
in
cwtl
pop
push
leave
lds
fs
sbb
rcll
out
ret
aaa
arpl
xchg
and
sub
lea
rorb
add
in
sbb
popa
mov
jg
mov
jb
push
cmpsb
sti
or
pop
xchg
jg
stos
sbb
dec
jbe
roll
push
movsb
lock
scas
roll
sbb
lahf
adc
dec
stos
push
in
push
cli
inc
adc
shl
add
xor
push
mov
sbb
pushf
mov
ret
push
mov
fs
sqrtps
loope
pusha
jle
sbb
test
adc
fdivs
repz
mov
cmp
mov
xchg
shl
mov
shrl
or
mov
fnstenv
dec
sub
into
lret
xchg
and
fldl
clc
mov
jo
xor
loope
push
adc
jbe
add
fs
pop
adc
inc
loope
sub
outsl
std
orl
inc
out
cmpsb
in
loopne
mov
xor
xor
adc
lods
aaa
sti
inc
roll
leave
xchg
xchg
dec
sub
pop
adc
shll
outsl
insl
adc
inc
xor
cltd
ret
xlat
mov
xchg
pop
pop
lods
mov
int
adc
sahf
mov
inc
xchg
daa
lret
mov
or
and
and
adcb
pop
ret
sub
or
fsubs
shl
pop
dec
jmp
jae
jecxz
popa
fsub
dec
call
cld
xchg
xchg
adc
out
xchg
inc
xchg
and
int
cld
in
jle
sub
pop
pop
mov
fldt
or
lret
insb
insb
lret
scas
pop
cs
loopne
das
jnp
inc
sbb
into
aaa
nop
adcl
sbb
or
push
and
neg
dec
mov
and
js
negb
loop
fldl
mov
fisttps
or
ds
mov
sub
inc
mov
xor
pop
mov
sbb
clc
push
add
mov
jbe
hlt
inc
mov
xor
mov
repz
push
ljmp
icebp
dec
cmp
outsl
pop
cmpsb
push
into
rorl
roll
xor
ja
jp
iret
shr
or
xor
mov
in
in
sub
sbb
roll
push
in
je
les
or
scas
arpl
and
movsl
pop
popa
aaa
push
inc
cmp
iret
cmp
or
sbb
add
cld
test
cld
cli
ja
mov
sub
xor
je
ds
lds
mov
in
jle
mov
pop
dec
ja
fadds
push
addr16
loop
mov
mov
js
add
or
xchg
je
bound
sbb
enter
es
call
daa
push
into
and
dec
icebp
xor
popa
cltd
push
mov
mov
lahf
stos
lods
add
adc
lea
and
adc
es
fdivp
imul
xor
push
rcll
mov
xchg
jmp
sbb
shrl
loop
shll
gs
xchg
cmpsl
lea
sbb
xchg
sarl
lcall
es
or
shll
mov
pop
sbbl
int
sub
jecxz
pop
orb
push
xchg
push
aam
push
testl
or
fidivs
and
xchg
dec
les
hlt
jo
fs
cwtl
add
mov
ret
sbb
filds
test
sbb
mov
fdivp
in
adcl
push
lods
xor
loopne
repz
hlt
sahf
into
pop
push
stos
rcll
inc
or
pop
std
js
jp
cmpsb
inc
mov
in
pop
and
push
mov
sbb
sbb
fwait
mov
pop
stc
es
rolb
mov
cwtl
dec
dec
leave
dec
push
in
inc
insb
xlat
dec
mov
dec
or
fsubl
xchg
jg
or
imul
mov
imul
cmpb
fs
mov
dec
add
sub
fmul
outsb
sbb
dec
into
add
mov
mov
jno
dec
inc
lock
jbe
movsb
and
pop
cld
pop
pop
cmp
mov
outsl
fdivr
pop
icebp
scas
repnz
iret
xchg
jmp
mov
xor
cmp
xor
jnp
xchg
fdivl
jno
das
rcll
add
cwtl
testl
or
out
mov
dec
adc
loope
sbb
cmp
mov
xchg
inc
dec
jnp
arpl
dec
xor
or
insl
and
cmp
bnd
nop
pop
int
cld
dec
cld
cmc
xor
les
jo
mov
add
inc
cmp
aas
lock
mov
xlat
xchg
out
or
jbe
in
cld
test
lcall
push
push
loopne
or
cmpsb
dec
xor
test
cmp
cli
cmc
xor
adc
pop
in
ljmp
mov
mov
loopne
loope
mov
mov
sub
adc
jnp
jns
fwait
dec
jbe
jnp
int3
mov
mov
adc
mov
sub
and
push
adc
rcrl
ljmp
or
pop
mov
dec
in
in
ja
shll
in
je
mov
shll
push
inc
out
int
int
adc
cmp
cltd
int
lret
pop
call
push
push
push
and
jle
int
nop
push
jl
imul
sbb
inc
jecxz
push
es
dec
outsl
jne
negl
inc
inc
push
cmp
xor
xchg
push
int
or
jge
mov
out
mov
mov
mov
int
hlt
stos
stc
cld
mov
leave
popa
cmp
aam
dec
sub
aas
mov
lods
push
insb
pop
mov
aad
inc
fstpl
push
aas
ret
mov
inc
lds
pop
roll
pushf
xchg
add
clc
jmp
add
mov
call
js
iret
pop
inc
rorb
jne
jg
xchg
test
loope
fldcw
and
push
ljmp
inc
pop
sub
xor
or
xor
sete
inc
movsl
pop
xchg
cmp
xchg
or
mov
and
call
sub
jmp
xor
mov
shrl
loope
lret
xor
pop
mov
mov
nop
mov
jmp
fidivl
xchg
mov
push
xor
mov
push
sbb
lret
in
mov
sahf
jmp
es
sub
std
xchg
lods
divb
mov
mov
and
insl
repz
jne
push
adc
inc
js
fldenv
cmc
mov
pop
test
mov
and
daa
xchg
jle
rorl
jp
ljmp
in
enter
test
dec
xchg
add
inc
ret
or
inc
testl
pop
arpl
push
and
imul
lahf
mov
dec
in
xchg
pop
add
les
cwtl
aam
in
enter
movsl
out
pop
bound
xor
jne
inc
inc
hlt
out
sub
fs
cmp
out
jl
push
imul
lret
out
stos
aam
xchg
sbb
adc
adc
or
xor
stc
aas
inc
adc
xchg
add
xor
sub
pop
xchg
arpl
sbb
dec
hlt
loop
jae
in
sbb
adc
repnz
test
inc
adc
adc
sbbb
mov
daa
mov
push
pop
ljmp
jno
cmp
adc
and
fadds
addr16
sub
jns
repz
sub
inc
sub
cmp
add
mov
or
mov
and
xchg
imul
stos
push
push
cmp
push
dec
out
ret
xor
pop
stos
aam
pop
add
sbb
rclb
mov
nop
shll
add
ret
aaa
lea
ret
mov
xchg
insb
je
mov
mov
scas
into
jae
push
mov
adc
int3
fnstenv
fidivrs
cmp
pop
jmp
das
jb
pop
fwait
add
push
pop
jbe
sarl
scas
pop
mov
lock
stos
das
je
das
add
push
cmpsb
xchg
adc
iret
lret
aam
sub
and
dec
faddl
sub
jge
movsl
add
cmp
jmp
push
xor
push
pop
test
inc
and
ficomps
mov
das
gs
data16
sbb
dec
mulb
or
xor
pop
js
or
jnp
bound
pop
shl
jne
inc
aad
jmp
in
jmp
ficoms
out
adc
dec
outsb
mov
adc
sbb
xor
popw
xchg
push
pop
dec
inc
sbb
jb
fsubl
data16
ret
inc
inc
cmp
mov
das
aas
adc
add
mov
push
xchg
sub
ja
pop
inc
and
sub
mov
lock
inc
out
sbb
and
mov
add
pusha
aas
pop
mov
and
push
sahf
and
push
pop
push
xchg
mov
mov
stos
jge
andb
mov
mov
ss
sub
cmpsl
jl
push
fcmovbe
sbb
lds
fdiv
push
out
popf
flds
push
outsl
test
rolb
fwait
push
pop
aam
adc
push
scas
mov
lods
sbb
arpl
jnp
sbb
mov
shrl
sub
movsl
jge
outsl
pop
mov
pop
jl
clc
loopne
add
std
pop
sti
mov
xchg
stos
xchg
xchg
mov
rorl
shr
out
ss
icebp
out
repnz
lcall
mov
mov
es
mov
call
mov
movsl
pop
and
push
adc
int
or
sub
imul
cltd
mov
in
xlat
xor
pop
jecxz
mov
je
stos
call
icebp
push
fdivs
xchg
adc
out
pop
je
pushw
fldenv
xor
les
xchg
stos
sbb
push
pop
shlb
xchg
and
iret
mov
push
sbb
enter
rcr
inc
mov
xchg
mov
xchg
les
push
je
in
aad
push
jg
and
divb
jbe
push
fistpll
pop
idiv
lea
loop
sbb
pop
jbe
outsl
jb
mov
cmp
test
sbb
pop
dec
jno
add
inc
mov
bound
xchg
inc
loope
stos
fld
mov
popf
insb
jmp
mov
xchg
push
imul
insb
mov
jbe
inc
jo
enter
test
cs
cmpsl
add
or
sub
mov
mov
mov
lea
sub
stos
popa
dec
mov
jl
movsb
mov
mov
cmpsl
popa
fwait
jecxz
sub
fs
add
and
sbb
in
cmp
dec
sti
and
pop
mov
ss
scas
add
call
ljmp
push
mov
and
cli
ret
mov
jno
push
mov
push
fisttpl
xor
pop
add
nop
inc
jge
push
and
test
dec
es
std
sub
and
sub
push
fimull
add
out
es
lahf
mov
xchg
scas
mov
cli
arpl
sub
out
adc
test
pushf
mov
push
repnz
mov
aad
addr16
mov
testl
gs
xor
aas
cmp
cmp
test
jecxz
jbe
shrl
sbb
ja
push
je
ja
test
dec
in
cmp
mov
cmpsl
out
mov
test
jbe
call
inc
mov
lods
outsl
inc
mov
jns
dec
push
stc
mov
pop
sbb
sbbb
mov
add
loope
xchg
adc
jge
outsl
push
pop
xchg
mov
xchg
dec
cmpb
lea
mov
sub
in
adc
cwtl
sbb
stc
nop
sahf
cmp
pop
sub
mov
mov
push
sbb
out
pop
ja
arpl
mov
mov
fistps
outsl
out
mov
test
sbb
in
xchg
and
test
sub
int3
insl
xchg
cmp
cltd
pop
inc
outsl
into
push
jp
test
stos
mov
xchg
dec
dec
es
mov
incb
arpl
inc
and
icebp
int
push
adc
mov
pop
testb
and
gs
mov
sub
fwait
std
mov
xchg
pop
push
lcall
inc
push
punpcklbw
lret
pop
cmpb
lahf
inc
jge
xor
and
mov
mull
das
stc
repz
jne
loope
popa
imul
int3
dec
and
in
jg
cmp
test
xor
ret
mov
xchg
jle
and
repnz
xchg
add
mov
pusha
mov
jge
lcall
push
fisubl
repnz
aas
mov
dec
mov
xchg
lds
fs
jne
push
gs
test
and
push
enter
dec
jo
lds
inc
sub
sti
stc
dec
int3
push
sbb
fisubs
and
test
outsl
pop
test
adc
pop
leave
dec
mov
dec
scas
test
movb
andb
mov
sbb
dec
in
pop
push
xchg
js
xchg
rorl
adc
scas
clc
movsb
repz
popf
pop
xchg
mull
arpl
jmp
mov
dec
jae
push
xchg
push
into
insl
push
push
xor
data16
xor
sbb
and
js
sahf
loope
xchg
orl
fs
pop
inc
inc
mov
outsl
push
push
testb
aam
push
out
sub
xor
inc
xorl
outsb
cmpb
inc
scas
ljmp
iret
adc
mov
or
out
in
test
xchg
xchg
adc
adc
bswap
imul
cli
lods
xor
mov
pop
in
je
push
mov
scas
outsb
jg
lret
mov
clc
dec
push
outsb
mov
push
pop
ja
xorl
js
test
xchg
push
hlt
lahf
pop
add
movb
mov
test
scas
dec
cs
insb
in
mov
sub
or
cmc
gs
mov
stc
pop
mov
inc
jne
pop
and
pop
adc
sub
mov
fwait
push
xchg
push
sbb
imul
stc
cs
fstpl
dec
shrl
pop
mov
push
rcll
xor
sub
outsl
in
sub
dec
rol
pop
lcall
mov
and
adc
imulb
daa
mov
mov
sbb
orl
adc
je
outsl
cld
jl
lea
xchg
decl
and
mov
add
pop
stos
lcall
pop
and
dec
sub
xlat
cmp
movsb
pop
test
mov
clc
add
sub
dec
int
and
dec
outsl
out
lahf
jle
xlat
add
mov
call
adc
fstl
cs
dec
leave
pop
mov
mov
mov
sbb
adc
enter
mov
imul
out
in
and
loopne
jecxz
xchg
jge
xchg
cmp
or
sbb
add
xchg
inc
dec
xchg
jge
aas
lds
dec
pop
cmp
shl
pop
inc
rep
push
push
sahf
addl
add
flds
push
lcall
test
sub
ret
cmp
inc
fidivs
in
sarb
sbb
ds
jae
mov
icebp
loopne
lods
jns
push
push
cmp
add
xor
adc
jnp
cwtl
test
mov
cld
jmp
and
push
popa
das
leave
nop
or
sub
pop
pop
loopne
xor
dec
jno
jg
lock
lods
sub
xlat
jmp
lods
inc
xchg
sub
xchg
ds
jp
dec
xor
mov
add
movb
lret
cmp
sub
sbb
cltd
mov
xor
add
leave
lahf
loop
nop
scas
cmovl
cli
filds
and
data16
idivb
cwtl
push
cmp
xchg
test
enter
arpl
cmc
pusha
fcomi
iret
test
cli
sbbl
jns,pn
clc
mov
mov
int
cld
cmp
addr16
lcall
cwtl
fucomi
or
shlb
rcrl
fisubrs
pusha
rol
aas
cmpsb
cmp
addr16
inc
dec
stos
add
inc
fidivrs
sub
mov
stos
mov
mov
push
sarl
ret
shrb
lret
push
addr16
mov
mov
cmp
or
fincstp
dec
pop
and
jg
cwtl
dec
cltd
outsb
movsb
mov
dec
dec
mov
inc
inc
pop
mov
insb
shlb
mov
cmpsl
adc
cmp
jmp
scas
and
dec
ss
jnp
push
lret
inc
test
stc
daa
ljmp
inc
out
inc
std
incb
xor
mov
pushl
fwait
push
jb
xchg
adc
push
ja
addl
xchg
pop
insb
cld
loope
add
push
or
jnp
pop
sub
xor
and
xchg
jo
fs
out
in
clc
dec
adc
cmc
push
lahf
fsubs
xor
addr16
push
mov
xchg
add
add
dec
pop
jp
push
js
jmp
mov
xor
xor
loopne
dec
add
and
or
mov
fsts
pop
repz
sahf
decl
aad
mov
test
fldenv
into
xor
es
jmp
xor
rcrb
pusha
xchg
sbb
jno
dec
jnp
xchg
mov
mov
stc
cmp
xor
xchg
repnz
push
cmp
sub
sar
out
sub
sbb
shrb
cmpb
jl
xchg
xchg
push
xor
lret
mov
les
jae
mov
nop
scas
sub
push
mov
popf
jmp
sub
inc
fs
and
fdecstp
and
mulb
add
mov
xchg
mov
inc
btr
sub
repnz
push
pop
push
and
xor
pop
ret
jl
sub
push
fwait
xchg
mov
cmp
dec
cmp
sub
subb
mov
cld
addb
aad
rolb
inc
sbb
jb
xchg
mov
mov
movsl
mov
call
cmpsl
jae
cmpsl
inc
sub
and
cmp
and
mov
repz
out
push
adc
push
jns
aad
orb
xlat
loope
sub
ljmp
pop
ret
adc
mov
popf
call
lods
push
out
lea
lahf
cmp
add
mov
daa
or
or
bnd
ss
mov
jns
pushf
repnz
inc
mov
cli
xchg
dec
arpl
ret
repnz
daa
jno
int3
adc
stos
xchg
fsubrl
imul
lret
mov
and
lock
xor
jno
aad
push
inc
xchg
push
repnz
repz
xor
mov
ds
mov
cli
xlat
mov
cwtl
xor
mov
adc
in
popa
mov
cmp
inc
adc
cmpsb
setne
or
dec
inc
inc
sub
leave
mov
pop
mov
sahf
xor
or
lahf
add
rcll
jp
js
sahf
mov
into
leave
lods
xor
data16
jp
cs
shll
out
jo
xlat
cmpsl
mov
rcll
rcll
adc
hlt
das
andw
fwait
sbb
mov
add
test
adc
sahf
xchg
lock
push
push
dec
jecxz
inc
xor
cmp
test
in
or
repnz
out
cmp
or
inc
and
sbb
mov
inc
adc
scas
fdiv
mov
ds
dec
imul
les
jb
iret
test
es
dec
call
inc
cmp
sbb
dec
or
inc
pop
gs
je
cmp
push
loope
cmp
arpl
mov
xor
int3
decb
ror
xor
test
pop
mov
and
mov
push
cpuid
xor
adc
shrb
mov
adc
cs
xor
jns
out
xchg
pop
imul
movsl
adc
or
xor
mov
mov
or
mov
jle
add
jne
mov
mov
fcoms
or
cmp
jg
je
ret
xchg
inc
cli
leave
dec
dec
jecxz
mov
push
pop
fimull
or
push
movsl
mov
adc
inc
pop
test
imul
sahf
scas
xchg
adc
push
movsb
rclb
lods
and
ret
dec
arpl
lods
test
fidivrl
inc
inc
out
cmpsb
fstl
push
add
inc
shl
sbb
inc
out
jg
rcl
dec
jb
push
or
adc
push
jno
mov
mov
aad
and
hlt
out
xchg
xchg
cmc
fmull
rol
or
aas
pop
or
mov
lret
dec
xchg
popa
mov
mov
scas
push
jo
xor
add
out
and
dec
call
mov
ljmp
out
pop
mov
cmp
pop
adc
push
xor
movsl
fcomps
xchg
sbb
rclb
pop
aas
mov
out
mov
movups
mull
dec
int3
and
jbe
movsl
add
cmp
xor
in
inc
cli
call
mov
ja
push
fistl
inc
enter
test
mov
call
orb
or
mov
add
das
push
addr16
scas
test
xor
dec
pop
and
pop
sbb
loop
cmp
dec
jnp
mov
or
add
mov
cmp
and
jbe
add
sti
sub
sub
orb
icebp
jg
dec
subl
mov
mov
inc
xor
sub
inc
addl
test
xlat
jb
outsl
mov
outsb
aad
fsubr
icebp
lods
push
adcb
out
pop
jp
sub
scas
mov
mov
mov
mov
cld
xor
or
mov
mov
popa
icebp
sbb
or
xchg
into
mov
inc
outsl
ret
fbld
fst
or
sbb
xchg
jecxz
adc
cmp
xor
pop
sub
adc
pop
pop
insb
push
outsb
aaa
enter
shll
shl
call
xor
lret
mov
and
cmc
pushf
rcr
pop
std
mov
inc
mov
mov
mov
dec
or
cmp
jmp
jbe
adc
sub
dec
js
mov
xchg
sub
jno
lret
sbb
aam
mov
repnz
adcl
sbb
ret
cmpsl
in
add
test
mov
mov
daa
cmc
sarl
jecxz
cmp
pop
dec
or
sub
sub
push
mov
loopne
out
daa
setns
xchg
repnz
and
out
roll
xor
bnd
cli
mov
adc
icebp
jo
inc
cmp
pop
das
jp
mov
fnstsw
xchg
mov
movsb
js
adc
mov
mov
scas
pushf
xchg
shl
adc
sub
cmpl
mov
push
mov
mov
pop
inc
cld
popl
mov
xchg
add
pop
call
sbb
rolb
xchg
or
jae
inc
les
add
inc
inc
add
mov
sub
pop
fmull
mov
cli
into
cmp
pop
or
sbb
movsb
inc
push
es
subl
shrb
test
ror
xchg
nop
xchg
leave
mov
addl
jbe
out
sbb
sub
or
aam
enter
sbb
mov
xor
cmp
insl
sub
mov
aam
std
xlat
push
aaa
cmp
and
lds
orl
push
dec
in
dec
mov
mov
pop
int
stc
fnstcw
jne
repnz
or
cwtl
mov
fs
aad
loope
aas
sbb
arpl
jp
xor
sbb
add
jne
adc
cld
sbb
pop
sbb
bnd
shufps
jne
negl
mov
xor
sbbb
sbb
clc
xchg
popa
jge
mov
es
mov
push
and
jl
mov
jmp
jo
loop
mov
pop
out
push
push
dec
mov
lahf
xlat
adc
scas
xorb
and
xchg
cmpsb
push
aam
lret
in
test
mov
sub
dec
mov
clc
sbbl
add
sub
popf
add
loop,pn
and
adc
stos
push
xchg
mov
insb
rcll
fwait
mov
es
adc
jle
fwait
push
xchg
adc
ret
cs
xor
adc
sbb
nop
fs
jle
into
cld
xorl
lahf
cmp
sub
cli
mov
lods
xchg
ret
pop
test
dec
jb
cmpsb
int
or
mov
sub
add
pop
ficoml
xchg
mov
mov
ret
ret
out
jns
sub
fcompl
inc
arpl
xor
push
cwtl
ss
mov
ficoml
lahf
les
decb
mov
lods
xchg
mov
cmp
ja
or
xchg
inc
test
cwtl
les
iret
add
mov
and
cmp
dec
pop
xor
and
jbe
les
adc
imull
nop
adc
out
in
mov
xor
adc
mov
addb
jbe
or
xor
jo
or
pop
lea
fs
mov
stos
jecxz
mov
pop
test
lods
ja
mov
std
das
xchg
fidivrl
call
cld
inc
adc
jbe
adc
or
out
ret
jbe
mov
xchg
adc
fcom
pop
daa
arpl
call
xor
push
and
pop
push
addl
popa
enter
xchg
push
repnz
rol
ss
mov
adc
sub
xchg
cwtl
popa
cmp
loopne
stos
and
stos
dec
stos
arpl
cs
mov
in
inc
mov
call
sbb
pusha
xor
lds
popf
or
fisubl
movsb
dec
xor
sub
fsubl
or
adc
ds
add
push
in
fdivrs
or
loopne
adc
mov
push
mov
mov
test
ret
pop
add
xorl
popf
test
push
sub
cmp
lods
jbe
push
in
cmp
mov
fmull
stos
add
jp
lods
mov
adc
and
out
dec
shl
xor
and
es
cmp
xchg
jns
insl
sbbb
jge
out
repz
mov
adc
adc
xlat
in
cmc
data16
stos
outsb
jg
jle
pop
jecxz
sbb
inc
test
flds
movsl
pop
shll
sti
into
or
inc
popa
rclb
dec
sahf
cwtl
or
test
cld
iret
je
outsl
cmc
jbe
movsl
push
loop
mov
mov
mov
icebp
les
pop
into
jae
or
mov
test
scas
cmpsl
fcmovu
push
push
cld
in
sbb
lock
cmpb
scas
cs
insl
movsb
adc
popf
test
mov
faddl
lds
and
sbb
xchg
mov
pop
push
negb
jl
in
or
ja,pn
sarl
mov
cmovbe
xchg
hlt
sub
ja
inc
sahf
ret
shlb
les
std
jne
das
xchg
inc
in
notl
xchg
sbb
push
and
std
sbb
jle
lock
lods
jle
add
les
jp
inc
push
notb
pop
add
insb
jo
std
mov
arpl
or
xchg
popa
in
fcmovnbe
sti
sub
mov
lods
out
jno
adc
jb
lret
and
imul
add
popf
adc
arpl
pop
xchg
push
lahf
out
cmp
cwtl
pop
xor
push
mov
test
mov
xorb
mov
sbb
mov
mov
push
adc
mov
fldt
lret
ret
push
cmc
cmpsl
test
stos
xchg
adc
cli
loop
mov
loope
test
idivl
leave
inc
sbb
xchg
pop
jne
push
adc
mov
push
popa
mov
in
loope
lahf
shr
xor
scas
or
mov
dec
xchg
test
pusha
jae
lods
push
mov
cltd
ds
inc
lahf
clc
pop
pop
sub
jne
adc
daa
stc
cmp
das
mov
mov
lock
jle
out
add
jmp
out
mov
les
ret
ret
ljmpw
sub
push
dec
lods
jae
orl
ss
mov
inc
insl
lds
sub
jnp
and
xchg
push
mov
xor
add
mov
jne
out
pop
ljmp
rcr
in
xchg
mov
lret
dec
jbe
jbe
push
fistl
push
mov
subl
and
xchg
test
bound
in
scas
or
mov
mov
ljmp
insb
and
xchg
push
test
sbb
loop
mov
jno
cltd
fstps
testl
inc
adc
scas
xchg
repz
push
mov
jmp
fisttps
pop
enter
push
notb
jle
mov
or
sbb
mov
loop
stc
outsb
push
mov
or
mov
and
push
mov
subb
xchg
out
testb
or
xor
daa
rcrb
jecxz
or
movsl
in
mov
outsl
test
mov
sub
sbb
fistpll
mov
out
hlt
movsl
and
xchg
inc
out
xchg
insl
xor
jo
cmp
into
cld
xor
test
sti
cmp
mov
mov
repnz
jno
push
mov
or
je
lods
repz
dec
jmp
sbb
cmp
ficoml
jle
dec
aam
jbe
sbb
jecxz
loope
dec
add
add
pop
push
stc
cli
loopne
add
push
pop
fcmovnbe
std
lds
xchg
icebp
das
insb
jl
mov
stos
ret
js
movsl
lahf
xchg
adc
sub
inc
jbe
and
xor
pushf
mov
inc
rolb
pop
call
decl
xchg
sub
jp
dec
and
inc
in
lahf
jp
sbb
and
in
mov
insl
mov
jno
leave
ljmp
in
push
mov
out
xchg
lock
jp
repz
push
repnz
popl
sbb
mov
jno
xchg
dec
xor
mov
or
mov
int3
pop
jo
jns
xlat
out
sub
sarl
das
pop
std
adc
cld
stc
ret
inc
lret
xchg
call
xchg
pop
add
cmpsb
test
and
and
jle
mov
fwait
lret
daa
lcall
cmpl
orb
xchg
cld
dec
jg
ds
xor
add
adc
xlat
test
jae
and
or
pop
fdivs
test
add
shl
jp
cld
call
and
scas
dec
ja
xchg
in
mov
cwtl
pop
fincstp
stos
int
popf
inc
cltd
or
add
xchg
or
mov
aam
imulb
sbb
or
jo
es
jp
sbb
dec
testb
cmovns
pop
or
jno
mov
fmul
inc
xchg
lock
mov
pop
ret
dec
insb
loop
outsl
pushf
mov
xchg
cmpsl
sub
imul
in
cltd
lds
push
enter
arpl
push
mov
add
or
pop
lahf
cmpl
jbe
xor
jg
ret
add
mov
pushf
pop
push
mov
imul
test
into
mov
mov
stos
insl
out
insb
inc
push
jle
dec
ss
and
dec
out
insb
imul
xchg
popf
cmp
shll
cs
or
mov
xchg
xchg
fstps
rorb
mov
test
ja
sub
sar
jecxz
mov
adc
push
imul
inc
sbb
cmpsb
inc
jno
or
jne
hlt
sub
pop
cmp
int
jg
shrl
or
insl
int3
push
or
ret
scas
push
sbb
dec
inc
sub
pushf
fsts
daa
sub
xlat
shlb
mov
sbb
add
arpl
loopne
and
sub
xchg
xchg
xchg
inc
outsb
pop
in
or
adc
in
xchg
andl
add
inc
pop
add
push
hlt
mov
dec
inc
add
sub
push
or
stos
fnstcw
dec
in
inc
mov
fcmovb
int
mov
fisttps
adc
jl
fidivrl
dec
ljmp
cmp
and
and
std
scas
cmc
pop
xchg
imul
jns
dec
dec
push
jne
jle
mov
outsb
push
cmp
int
jl
mov
jg
jge
les
lret
xlat
fmuls
mov
add
inc
sub
cmp
xchg
js
lods
or
arpl
mov
cmp
lret
das
and
jns
fstl
lods
aad
pop
fdiv
jnp
imul
xchg
cmpsl
les
out
outsb
inc
scas
or
fstps
adc
imulb
dec
mov
loopne
sub
lcall
cmp
stos
jecxz
cmc
push
push
xchg
loopne
stos
sub
or
in
sub
jbe
jne
pop
dec
add
xor
push
jne
push
cmp
frstor
pop
mov
das
clc
sbb
jae
fcmovne
jle
cmpsl
outsb
or
inc
xchg
aaa
jno
sub
sti
push
test
pop
scas
adc
push
sub
add
adc
jge
dec
pop
cld
cmp
cld
pop
cmpsl
mov
dec
jge
jle
xor
push
xchg
dec
xchg
lock
push
pop
push
inc
mov
add
sbb
add
add
inc
pop
dec
ljmp
cli
mov
into
cmp
jge
in
mov
push
in
mov
outsl
xchg
lock
lret
push
iret
in
rorl
sub
mov
sbb
mov
jp
inc
adc
xchg
frstor
sub
xor
loop
sbb
aad
sub
jae
lret
cmpsl
cmp
mov
pop
push
enter
popf
xchg
and
loope
mov
jle
loopne
mov
jo
mov
dec
pop
or
leave
dec
inc
cmp
push
fsubrl
mov
data16
pop
or
or
js
into
mov
mov
mov
xchg
in
or
xchg
and
adc
fiaddl
mov
jl
and
std
sub
decb
pop
cld
add
cmc
and
in
cmpsl
scas
cmpsl
xor
and
sub
out
dec
imul
imul
roll
test
mov
shlb
sub
fwait
into
out
lret
mov
insl
xchg
push
inc
lahf
lds
in
sti
stos
cltd
lods
jge
insl
mov
sbb
ficompl
arpl
mov
shrb
rclb
mov
lret
mov
dec
jmp
mov
sub
ds
in
loope
aaa
fldl
fistpll
pop
iret
push
dec
xor
add
cmp
addr16
fwait
add
mov
mov
or
sub
jecxz
xchg
mov
dec
dec
in
fwait
sub
inc
cmp
cld
ss
sbb
xchg
pop
xchg
imul
or
xchg
lock
rcrl
shr
jno
xchg
xor
ficomps
xor
xchg
imul
fidivl
xchg
imul
xchg
sub
test
lods
dec
mov
and
push
aas
fildl
fists
and
push
jo
fmul
das
orl
inc
shl
and
push
ljmp
mov
sahf
cwtl
fs
outsl
imul
xchg
cs
pusha
dec
or
sbb
hlt
jbe
nop
mov
cmp
push
cmpsb
fsub
cmp
ret
mov
xor
movsb
adc
adc
lock
fwait
or
push
xchg
and
sbb
punpcklwd
push
sahf
dec
xchg
pop
jmp
sbb
outsl
stc
push
mov
addr16
lods
inc
mov
in
ret
in
xorb
push
adc
xchg
mov
das
and
xor
das
mov
rorb
xor
ss
jle
mov
sbb
imull
pop
cmp
dec
loopne
xlat
aaa
pop
adc
cmp
adc
mov
dec
mov
cmp
xorb
cmp
add
or
test
sub
leave
mov
rcll
mov
pusha
aam
mov
test
ror
cld
jbe
lret
into
aad
push
out
enter
xor
adc
mov
mov
scas
sahf
arpl
xor
sbb
cmp
shrb
jecxz
dec
push
xor
ja
rclb
or
mov
loope
fs
call
and
pop
dec
call
cli
test
loop
cmp
rolb
pop
mov
sub
xor
fsubl
pop
lret
mov
and
xchg
jo
sub
cmp
bound
cmpsl
mov
mov
pop
lock
scas
data16
pushf
sbb
addr16
cli
rcr
arpl
imul
lea
mov
aas
les
lea
loope
cld
lret
pop
out
imul
imul
nop
mov
and
hlt
and
ret
mov
insb
in
outsl
adc
out
and
es
stos
cwtl
lods
mov
jmp
aad
orb
push
xchg
out
xor
push
push
xor
xchg
push
jo
dec
sub
sbb
sub
into
inc
cmp
mov
lods
dec
xor
std
rorb
ds
pop
out
sbb
fnstenv
cs
jl
jbe
sub
cmp
and
lods
fucomi
outsl
xchg
repz
les
clc
loopne
adc
or
jbe
cmpl
sub
iret
xchg
or
fcoml
les
pushf
or
imulb
push
pop
mov
xor
push
jmp
sbb
in
mov
push
call
sbbb
and
loopne
addr16
test
add
orl
fildll
insl
mov
xchg
insb
mov
add
and
es
xchg
inc
outsb
pop
add
fwait
sbb
xor
das
or
mov
jl
cltd
aam
push
pop
outsb
adc
shlb
aam
loope
fistps
mov
xchg
inc
vpmacsdqh
mov
in
bound
stos
xchg
bound
mov
and
jb
mov
mov
jae
sub
pop
pop
fstps
data16
inc
add
cmp
test
jmp
jb
jmp
mov
mov
ss
add
and
sbb
sarb
xchg
push
mov
add
cmpsl
dec
push
dec
test
dec
and
lahf
pop
gs
xor
xchg
outsl
add
xchg
rclb
leave
add
iret
ja
ja
sbb
mov
cwtl
push
outsl
pop
mov
dec
out
inc
and
jle
cmp
jmp
clc
sub
sbb
mov
sbb
mov
or
xor
mov
xchg
mov
jecxz
movsl
iret
jge
jmp
mov
test
mov
add
lea
fldt
ljmp
mov
inc
sub
push
xchg
cwtl
xchg
cwtl
shr
xchg
cmpsl
lret
pop
outsl
stc
notl
out
lds
mov
mov
aas
or
push
cld
adc
dec
rclb
icebp
jnp
pop
ret
adc
add
outsl
xchg
insl
hlt
sub
sbb
mov
stc
cmpl
or
and
out
mov
and
je
push
xchg
and
inc
adc
mov
arpl
cmp
insb
out
adc
gs
loopne
and
outsb
sub
sub
jne
pop
lods
fnstsw
andb
out
xor
les
int3
stos
popf
cwtl
or
xor
pop
out
pop
aad
iret
inc
addr16
inc
sti
sbb
jne
int
jmp
sti
jno
iret
or
adc
pop
dec
repz
dec
call
mov
roll
jb
pop
pop
push
sbb
inc
dec
lea
stos
add
adc
dec
xchg
aam
mov
fdivrs
add
mov
shl
movhlps
mov
or
lea
add
movsl
mov
rcll
add
fs
popf
jle
or
lods
adc
ja
inc
lahf
adc
xchg
sub
add
push
repz
fiaddl
js
xchg
in
sbb
jo
push
pop
lret
dec
mov
adc
push
aam
sub
sub
xchg
mov
mov
mov
jp
push
pop
sub
jnp
adc
pop
xchg
inc
lcall
leave
push
jl
gs
cs
and
sti
aam
and
cmp
push
pop
xor
es
aaa
daa
test
jl
dec
dec
rcr
mov
pop
cld
mov
jl
es
mov
mov
xor
fldt
sbb
das
les
xlat
adc
and
xor
dec
mov
and
xchg
in
mov
ret
mov
mov
inc
dec
jge
aaa
das
scas
add
insb
dec
aad
shll
push
inc
fs
shll
outsb
xchg
out
xchg
cmp
out
inc
hlt
add
inc
in
addr16
add
adcl
xor
imul
popf
dec
mov
in
mov
cwtl
jne
push
stos
stos
jp
movsl
push
cwtl
adc
mov
sbbb
outsb
mov
sbb
lods
cld
push
add
lret
mov
mov
xor
jo
inc
clc
or
sbb
push
lds
pop
in
ljmp
frndint
jb
inc
fidivs
enter
jl
mov
sbb
cli
fstpl
stos
dec
push
mov
xchg
sub
cmp
pop
ljmp
sub
push
add
push
cmp
ja
inc
mov
icebp
scas
sbb
mov
inc
add
ret
jg
repnz
test
lret
std
mov
and
xor
shll
loope
xor
divl
and
and
xchg
adc
ss
nop
fwait
insl
or
mov
in
stc
ljmp
mov
and
jmp
and
repz
pop
ficoml
jbe
mov
cwtl
pop
je
inc
pop
inc
loope
jl
adc
push
pop
sub
add
push
xor
add
pop
in
inc
or
icebp
or
lret
inc
out
loop
test
sbb
mov
add
adc
inc
inc
fsubrs
stos
pop
mov
push
leave
test
cmpsb
xchg
pop
xlat
sub
loop
mov
inc
add
jb
mov
push
pop
gs
sbb
shrb
push
sahf
add
pop
ljmp
out
test
lea
in
addr16
mov
fwait
enter
add
movsl
push
sbbl
push
pop
cwtl
imul
jno
dec
rclb
rclb
mov
xchg
mov
push
pop
pop
std
dec
xchg
xor
add
lahf
popl
insl
loop
in
lods
xlat
sbb
dec
xlat
mov
enter
jmp
out
ss
std
mov
add
idiv
mov
or
ds
mov
pop
dec
out
fisubs
rcl
test
test
xchg
pop
cmp
jmp
std
and
add
testl
rcr
lret
xor
pop
test
jl
fsubl
mov
shr
loop
repnz
xor
mov
jge
aaa
add
jmp
sbb
mull
nop
and
add
pop
test
mov
outsl
scas
cld
aam
add
iret
mov
lea
jmp
and
popa
sbb
mov
jge
popf
lea
int3
test
cmc
dec
movsb
dec
add
pop
shlb
les
mov
repz
in
mov
cmpb
pop
je
nop
fstpt
movsb
ret
xchg
data16
push
cmpsl
mov
jno
mov
sub
jecxz
sub
in
cltd
out
and
stc
out
add
or
repnz
jno
ja
mov
loopne
insb
pop
sahf
repnz
jbe
mov
xchg
lods
and
xorb
divb
mov
loope
lahf
fnsave
lret
pop
xor
in
dec
and
xchg
push
cmp
scas
cmc
sbb
push
or
repz
movsb
and
push
sbb
pushl
cli
js
dec
xchg
scas
arpl
mov
cmpsb
cltd
jbe
ficomps
inc
movsl
cmpsl
pop
int
xor
pop
push
popa
jg
nop
arpl
fstpl
inc
fists
out
cmp
xor
mov
ret
jle
push
ljmp
xchg
sbb
loop
xlat
cmpb
outsl
sub
pop
outsb
aad
adc
push
jbe
dec
fs
xchg
mov
jp
invd
popf
mov
out
lock
mov
or
jle
xchg
shlb
popa
lret
mov
addl
inc
jg
push
sub
jge
in
pop
push
lods
cmovbe
mov
idivl
scas
movl
cmp
pop
sbb
loope
out
dec
test
pop
jne
push
movsb
stc
fnsave
in
scas
lock
cmp
mov
or
stc
dec
mov
int3
inc
xchg
ficomps
or
mov
insl
fsubr
mov
push
lds
xorb
sti
xor
add
aam
cli
fcmovnbe
cld
and
mov
fisubrs
aaa
xchg
inc
lds
stos
out
or
inc
push
loope
jo
mov
pusha
xor
sub
sbb
rcrl
sub
outsl
pop
pushf
scas
push
and
data16
fsubr
jb
fldcw
out
fwait
jbe
or
inc
mov
insl
lods
bound
out
lret
sub
cli
and
xchg
leave
cmc
inc
xchg
push
sahf
add
fs
sbb
les
mov
adc
mov
mov
mov
imul
cmp
and
hlt
xor
js
jg
fs
push
push
and
jnp
sbb
jle
cmp
sbb
pop
es
jne
lods
jg
jle
xchg
mov
add
std
mov
rcrl
pop
lcall
sahf
test
rcrl
out
mov
xchg
leave
and
cltd
or
out
out
pop
sub
fucomp
scas
jo
xchg
push
out
push
add
pop
add
push
add
adcl
cmp
or
push
insb
daa
add
les
enter
push
xor
divb
movsl
mov
mov
xchg
inc
sub
movsl
fsubrs
imul
sbb
mov
push
jo
dec
imul
and
es
sbb
jge
mov
or
dec
xor
andl
sbb
sbb
xor
dec
mov
jae
jb
xchg
aas
add
or
sbb
inc
xor
sbb
and
cmp
add
xlat
adc
cmp
loope
push
incl
add
sbb
mov
xor
pop
sbb
cmp
ffree
je
jl
jno
pop
repz
xchg
in
sbb
mov
test
test
adc
nop
sbb
dec
adc
pop
sbb
cmpsb
ret
sub
outsl
xchg
push
ficompl
cmp
push
mov
rep
in
nop
jbe
rolb
push
xchg
mov
mov
loopne
and
shlb
insb
nop
ret
push
mov
andl
jl
xchg
in
shll
mov
push
inc
add
push
pop
fisubl
push
lods
leave
mov
ret
dec
mov
xor
lods
cmp
add
andb
xor
push
lret
mov
push
xchg
and
push
cmp
out
pusha
push
cmp
sbb
ret
dec
cwtl
nop
jl
ljmp
lahf
outsl
and
jl
and
and
repnz
out
emms
repz
pop
sbb
stc
les
jb
into
sub
roll
cld
dec
xor
imul
call
enter
lods
push
cmpsb
xchg
jle
push
dec
out
mov
jbe
add
imul
and
mov
gs
sti
daa
push
fidivs
scas
clc
out
mov
pop
ret
xchg
test
xchg
xchg
mov
daa
sub
daa
push
mull
pop
mov
int3
pop
add
out
movsl
dec
jg
out
jecxz
cmc
mov
push
cmp
mov
jb
lret
lret
or
in
add
movsl
pop
in
mov
sub
pusha
push
xor
cld
test
inc
pop
mov
scas
xchg
fs
jmp
stos
cli
pmaddwd
stc
sbb
or
pop
stos
cmpl
orl
repz
sub
sbb
mov
mov
adc
jge
repz
imul
movsb
mov
dec
pop
inc
xchg
sahf
movsl
adc
lods
or
jmp
mov
ja
jecxz
dec
sub
lods
frstor
cmp
mov
cmp
push
das
movsb
cltd
cli
xchg
aas
mov
loop
aaa
or
xchg
add
jo
cs
cmp
pop
cmpsb
in
out
mov
jecxz
call
es
or
lea
mov
mov
std
xor
je
jmp
into
cmp
add
jg
ss
ss
xchg
mov
rclb
push
scas
xchg
xor
sahf
addr16
cmp
test
movsb
xchg
or
mov
test
mov
cmpsl
into
cmp
push
aam
fwait
push
rcr
subb
jns
jb
imul
sub
jmp
fistpll
mov
out
jg
fwait
repz
testb
xchg
xchg
cli
cltd
sbbl
mov
inc
jo
pushf
xchg
cmp
test
scas
mov
in
cmpsl
arpl
xor
pop
std
mov
dec
stc
out
pop
pop
cmp
jecxz
push
jbe
popa
mov
cmc
mov
push
dec
pushf
lock
mov
push
iret
jne
sarl
imul
xchg
push
imul
cmp
xlat
cltd
sbb
mov
sbb
and
pop
test
pop
adc
mull
mov
mov
sbb
mov
out
cmp
adc
repz
std
test
rcl
iret
das
mov
stos
ret
and
xchg
xchg
cld
pop
inc
shl
cmp
test
rcll
pop
es
or
mov
cli
clc
adc
ror
pushf
mov
and
aad
cmpsl
mov
or
sub
or
cmp
sbb
ja
ficoml
push
inc
sbbb
add
cmp
stos
jnp
int
test
out
xor
sbb
mov
rcrl
imul
add
repz
int
and
into
aam
aad
push
lea
outsb
inc
dec
xchg
aas
scas
cs
mov
stos
adcl
sbbb
insl
mov
rcrl
jp
test
pusha
sub
cltd
nop
push
jecxz
js
add
xor
inc
mov
in
sbb
sbb
je
aaa
insb
shl
inc
xchg
rol
dec
in
dec
push
dec
fisttps
cmc
icebp
and
out
mov
loopne
and
push
sub
in
pop
dec
repnz
mov
sbb
es
pop
cmp
and
jmp
xor
and
imul
fcmovb
or
mov
add
mov
movl
fdivr
adc
out
pop
fcoml
lret
pop
imul
and
sahf
mov
movsb
sbb
xchg
xchg
popa
gs
call
push
cmp
movsb
xor
aaa
test
lods
imul
movsl
lret
add
lds
cmc
outsb
push
loope
fidivs
lock
js
mov
aaa
scas
or
gs
xchg
in
xorb
push
xchg
push
repnz
bound
out
xchg
lods
mov
sub
call
inc
lea
loopne
mov
pop
or
cmp
repnz
in
mov
cmp
stc
or
push
xor
push
push
add
and
aad
shrl
rcrb
push
mov
mov
aaa
or
xchg
push
xor
push
and
les
andb
xchg
cltd
loope
mul
jp
adc
call
xchg
addb
xor
pushf
or
mov
push
cmp
bound
test
enter
iret
mov
push
inc
fldt
mov
punpckldq
lock
add
sub
xor
andl
ficoms
shll
nop
push
or
aam
cmc
fisubrs
fst
fdivl
mov
dec
jmp
pusha
mov
leave
xor
cmp
idivl
enter
push
mov
mov
mov
pop
pandn
insl
adc
jl
push
into
mov
aad
cmp
inc
imul
fisttpll
xorl
xchg
and
mov
mov
xor
mov
out
rcll
add
xchg
mov
mov
cltd
movsl
inc
inc
adc
xchg
inc
ret
icebp
mov
fwait
imul
mov
add
jae
xchg
sub
orb
into
jnp
pop
fs
sbb
aas
test
mov
out
outsb
mov
aad
jnp
aam
dec
bswap
nop
sahf
sub
xchg
test
jnp
jae
add
pop
insb
add
fs
test
stc
mov
lods
push
fidivl
ss
repz
cli
pop
dec
mov
cmp
or
jbe
loopne
adc
or
pushf
sub
in
addb
lahf
or
dec
jb
test
pop
sub
fnstenv
sbb
sarb
lahf
das
push
nop
test
std
and
inc
push
sbbb
xor
jecxz
cli
sarb
dec
add
sbb
mov
das
out
and
xchg
mov
imul
jno
push
mov
inc
es
cmpsb
fildll
fimull
cs
mov
sub
jmp
jno
pop
mov
in
cmpsb
add
adc
xchg
je
mov
xlat
int
inc
xlat
cmpsl
fcomps
sbb
jp
sub
push
and
fwait
jnp
push
add
mov
jl
mov
ljmp
pop
icebp
popf
adc
xchg
and
test
sub
mov
negl
jmp
loop
xchg
push
cmp
xchg
pop
mov
add
add
icebp
nop
in
inc
js
es
data16
stc
pop
fiaddl
mov
outsl
mov
inc
xor
mov
aam
xchg
push
es
rcl
stos
or
repnz
insb
sbb
mov
sbb
pushf
dec
fdivrs
stos
jg
lods
sub
fscale
pop
rcrb
push
cwtl
pop
out
push
or
sub
subl
xchg
mov
outsl
pop
divl
aas
xchg
fisttps
icebp
imul
rol
pop
mov
xor
mov
inc
cmp
in
lods
hlt
add
mov
fistl
cmp
cmp
loopne
rcrl
pop
imull
sbb
imul
ret
inc
jmp
add
in
lret
addr16
xor
mov
out
lods
mov
cmp
jmp
movsl
icebp
jae
ffree
fistpll
ds
out
loopne
int
lret
adc
jmp
rcll
cmp
push
bound
pop
subl
jns
fiaddl
dec
jecxz
sub
lea
add
lods
push
mov
push
lods
add
outsb
mov
jecxz
mov
dec
sbb
leave
add
mov
cmp
cwtl
add
inc
call
popa
sbb
cmp
mov
push
in
std
pusha
in
int3
adc
iret
or
xchg
addr16
xchg
xchg
sub
pusha
adc
mov
jmp
mov
jecxz
mov
out
popf
lea
enter
mov
dec
lret
add
mov
loopnew
movsb
dec
outsb
xchg
icebp
mov
arpl
mov
jmp
xchg
inc
xchg
int3
xchg
ret
imul
insl
add
out
stos
cs
aad
add
add
xor
mov
cmp
insb
mov
out
and
sbb
inc
and
aad
jo
sbb
ret
rcrb
fmuls
xor
pop
cld
das
jae
xor
mov
call
or
sbb
out
scas
repnz
xchg
arpl
imulb
scas
cmp
les
lret
mov
jle
push
pushf
mov
movsb
movsb
outsl
sbb
or
cli
cmp
mov
hlt
sarl
inc
leave
inc
cmpsl
insb
mov
jmp
inc
mov
in
cmpsl
out
lds
mov
loope
and
hlt
fdivs
push
punpckhbw
inc
ja
fimuls
fnstsw
das
les
dec
jl
out
stos
lcall
mov
jnp
mov
lcall
mov
or
add
sub
push
add
pop
push
mov
addr16
pushf
and
mov
fbstp
ljmp
sarl
push
push
jno
mov
cmpsl
insl
into
sub
push
jge
bound
adc
jno
stc
aas
call
mov
rolb
push
fs
xchg
das
and
inc
sub
cltd
xchg
add
insl
test
lahf
add
jo
mov
into
jns
int3
and
outsb
push
std
lahf
add
sbb
mov
adc
lcall
and
fs
inc
mov
and
adc
cmp
fstpt
xchg
dec
neg
lock
rcll
and
nop
push
mov
pop
or
push
inc
mov
add
mov
or
xor
add
cmp
pop
fldcw
jnp
out
repnz
fildll
pop
sbb
cmpsl
repnz
lret
inc
mov
fldl
test
mov
loope
lock
popf
cwtl
hlt
mov
ffree
or
or
or
mov
sbb
movsb
lret
stos
lea
sub
push
in
repnz
jns
push
mov
push
movsb
ds
xor
popa
int
outsb
pop
xchg
cmp
or
das
pop
lock
mov
rcll
push
pop
shlb
mov
call
push
sbb
and
popa
sarb
xor
pop
je
fiadds
les
movsl
nop
jl
es
jo
ror
fdivrl
add
inc
test
jmp
fistps
das
out
xchg
sub
mov
pop
in
adc
scas
cmpsl
test
int3
cmp
clc
dec
mov
xchg
cmp
lods
mov
or
test
add
call
mov
cmp
inc
mov
xchg
cwtl
or
or
sbb
mov
add
sub
dec
ss
cmpsl
fdivs
cmp
mov
xor
ljmp
shrb
out
sbb
call
mov
mov
dec
dec
and
int3
push
pop
inc
add
jns
dec
jbe
mov
xor
sahf
mov
test
lcall
cmpsb
int3
xlat
add
cmc
and
mov
fstpt
out
push
xor
xor
push
icebp
out
clc
sub
mov
pop
rorb
adc
test
fstps
mov
xor
out
adc
xor
scas
ja
pop
jns,pn
jno
pop
push
repnz
fiadds
movsl
or
and
leave
in
es
jnp
std
mov
stc
pushf
pop
mov
cmpl
outsl
daa
int3
or
loope
or
gs
aad
out
xor
imul
mov
push
mulb
popl
adcb
mov
add
std
push
out
mov
fsubrl
popf
cld
dec
adc
xor
push
or
test
lds
mov
hlt
pop
iret
outsl
lahf
or
jno
mov
mov
test
into
mov
es
in
cld
bound
sahf
and
push
sarl
mov
dec
and
negl
push
mov
mov
faddp
xor
aaa
sbb
mov
jle
fdivrs
jmp
sub
or
repz
sub
and
add
stos
jbe
adc
cmp
ds
jae
and
dec
mov
stos
mov
push
lret
pop
aam
adc
pop
cmp
sub
les
insl
stc
pop
test
mov
stos
inc
mov
adc
icebp
or
inc
ljmp
and
inc
mov
rclb
lcall
ja
je
inc
cmpsb
and
add
gs
mov
xor
jecxz
mov
pop
mov
add
push
sub
cltd
rcl
nop
or
movsl
sub
mov
mov
sbb
xchg
rolb
mov
fldt
movsb
adc
pushf
outsl
mov
push
inc
insb
mov
and
jo
pop
sarb
out
fwait
push
lock
outsl
pop
rol
call
push
addr16
lahf
jo
js
nop
inc
dec
xchg
add
jp
jmp
movsl
jmp
xchg
pop
ret
loopne
rcrl
icebp
sub
out
sub
jns
push
or
sub
fcomps
sti
dec
jbe
dec
mov
xchg
sub
sub
imul
test
mov
sbb
xor
jp
xchg
lcall
test
pop
jno
into
mov
sub
dec
pusha
jns
sahf
shl
sbb
gs
popa
enter
xchg
stc
sub
insl
jbe
xchg
or
jle
xchg
pop
aas
pop
fisubrl
mov
in
imul
das
xchg
inc
inc
fdivr
adc
rorl
rcll
imul
inc
sti
jle
jno
insl
into
ja
sub
jge
scas
jns
adc
int
sub
sbb
loope
test
push
shrl
les
jmp
xor
push
xor
out
incb
mov
and
lds
adc
sbb
div
test
pusha
adc
push
jae
ror
popf
icebp
jl
add
insl
pop
mov
dec
dec
punpckhbw
jae
mov
clc
das
dec
push
or
mov
cmp
subl
aas
aas
rorb
inc
iret
inc
jns
int
mov
pop
test
repnz
xchg
xchg
test
xchg
or
xor
push
loope
mov
filds
sarb
test
in
sub
cmp
jp
cld
inc
jb
dec
idivb
jns
je
dec
push
lcall
fnsave
jp
ja
push
dec
pop
stos
push
cmp
mov
pusha
sbb
int
push
dec
hlt
xchg
outsb
ja
in
test
pop
adcb
popf
mov
dec
aas
pop
roll
aaa
dec
sub
addb
pop
shrb
adc
aaa
push
loopne
aas
inc
lods
incl
or
nop
pop
dec
xchg
or
sti
cmc
outsb
jl
icebp
nop
dec
imul
dec
popa
cs
scas
pop
mov
pushw
mov
incb
xorl
bound
xchg
popa
mov
and
aam
movsl
enter
inc
clc
xchg
dec
mov
frstor
push
jmp
add
cli
movsb
mov
lcall
lret
inc
dec
fdivl
jnp
mov
inc
xchg
or
sub
mov
cmc
aam
and
stos
enter
lock
int
mov
imul
adc
lret
iret
xor
push
cmp
push
call
fdivrl
dec
cmc
es
insb
loope
pop
push
xchg
in
xchg
test
jns
addb
call
sarl
les
mov
jecxz
sub
cmpsl
lret
push
inc
push
mov
stos
out
or
test
insb
inc
push
inc
pushf
pop
in
push
and
out
insb
dec
pusha
xor
movsb
ja
and
jae
sbb
add
movsl
add
out
imul
xchg
mov
push
in
dec
cs
dec
imul
inc
mov
aas
xchg
dec
and
pop
pusha
cmpsb
subb
and
xor
push
mov
lahf
jl
js
popf
inc
adc
push
pop
mov
dec
add
mov
addr16
lods
ficomps
pop
dec
cli
scas
jae
dec
fld
mov
pop
inc
jo
cmp
mov
mov
imul
dec
rorb
mov
dec
jmp
inc
in
mov
xchg
ja
pop
stos
int3
adc
xlat
lcall
pop
push
xchg
iret
sub
popa
pop
mov
jmp
push
mov
mov
jg
lods
push
xor
add
fs
imul
sub
push
shll
shlb
cmc
lods
xor
das
cld
pop
loop
les
push
scas
mov
adc
push
xor
out
adc
insb
adc
rcll
cmc
cmpsb
jo
sbb
fdecstp
lods
dec
aaa
ljmp
sbb
mov
popf
pop
scas
sbbl
sub
out
pop
je
hlt
fimull
pop
add
andl
cmpl
call
inc
in
cmp
jo
push
out
cmp
inc
and
jmp
mov
rorl
ret
jle
mov
push
sub
sbb
les
inc
ss
insb
pop
cs
je
push
fiadds
sub
push
and
sub
shll
or
inc
jle
sti
stos
outsl
out
push
jmp
push
fldl
imul
xchg
push
fs
cmp
mov
push
decl
xchg
jl
pop
xor
mov
lahf
lds
daa
cmpsl
inc
cmpl
pop
iret
xchg
sar
jnp
jp
je
ficoml
mov
xchg
sub
inc
sub
sub
aaa
cs
sbb
cmp
les
or
in
fsubs
or
add
stc
pop
and
or
pop
arpl
add
ret
add
aam
pop
cwtl
mov
fcompl
mov
jle
or
jnp
pop
xor
movaps
sbb
mov
ret
mov
daa
and
fwait
inc
jnp
int3
stos
push
add
lcall
jecxz
xchg
jg
dec
divb
inc
pop
cmp
and
lret
clc
shl
cld
and
pop
cmp
ja
dec
adc
ss
sbb
ret
mov
repnz
dec
dec
lods
cmp
bound
xchg
stc
das
es
push
mov
roll
mov
add
mov
jecxz
mov
cmp
mov
and
xchg
mov
ljmp
push
clc
rolb
jge
int3
rcrl
stos
test
pop
aam
daa
filds
adc
dec
sub
fldt
test
pop
push
jne
mov
xchg
fstpl
loop
mov
je
jb
jl
push
shlb
cwtl
lcall
lcall
jns
fldt
adc
in
lods
clc
xor
and
lret
decl
inc
loopne
nop
popa
inc
add
test
mov
add
add
pop
mov
xchg
pop
addr16
stc
mov
decl
ror
mov
sbb
xor
ficompl
mov
imul
inc
dec
ja
aam
add
sbb
out
pop
in
repz
xchg
ja
add
sub
icebp
fdivrl
mov
iret
les
lock
mov
test
xor
shll
lock
pushf
inc
mov
jo
mov
lret
iret
xchg
mov
cs
push
mov
jns
sti
ficoml
pop
xchg
inc
cmp
sbb
jbe
mov
xor
push
push
pushf
lret
test
aaa
fs
jl
ds
xchg
aaa
cli
scas
out
jecxz
cmp
out
add
es
sbb
push
jle
pop
xchg
cmp
into
out
icebp
adc
xor
mov
dec
adc
push
movsl
roll
std
and
inc
or
repz
insl
mov
ret
push
mov
loope
ja
sub
sar
hlt
dec
mov
test
push
mov
insb
call
movsl
mov
xchg
imul
add
xor
aas
icebp
push
dec
lock
cmpsb
clc
dec
mov
hlt
data16
or
aas
inc
hlt
es
jle
stos
test
shll
pop
popf
pop
push
js
outsb
and
mov
movsl
sub
xor
cwtl
ss
inc
test
add
add
lcall
pop
int3
test
inc
sarl
and
and
shll
sub
pop
icebp
sti
dec
xchg
cmpsb
push
add
int3
jo
nop
imul
push
jmp
rorb
dec
in
mov
adc
xchg
and
pop
je
lods
popf
sbbl
xlat
testl
aam
loop
stos
xor
les
xchg
fcmovnbe
jae
adc
dec
xchg
call
popa
cmc
jmp
lret
xor
loopne
insb
or
in
sarb
push
scas
cmpsl
and
les
cmp
xchg
rorb
lods
daa
das
fdivrl
xor
xchg
pusha
jbe
stc
jp
pop
pop
out
test
push
aad
stos
fldt
leave
mov
pop
and
mov
out
jnp
push
leave
fcomip
jl
fldt
or
pop
into
sbb
jb
add
jb
lds
loope
inc
ficoms
lock
dec
lods
jo
inc
in
xchg
xchg
mov
push
pop
or
xchg
fs
mov
or
push
jns
pop
pop
pop
adc
and
test
xor
push
cmc
addr16
mov
cmpsl
and
add
mov
push
mov
sbb
fbld
jmp
mov
mov
sbb
outsl
mov
leave
cmp
imul
mov
mov
cmc
pop
mov
bound
jg
inc
int3
inc
fildl
repnz
push
add
cld
cld
dec
lahf
sub
xlat
ja
cmp
dec
add
insl
xchg
lods
lret
adc
in
push
das
enter
scas
mov
mov
mov
mov
dec
jg
test
sbb
and
jp
aaa
hlt
cltd
jg
test
fwait
lret
mov
call
scas
repnz
fistps
cmpsb
inc
mov
add
pop
sarl
and
shll
push
sbb
lret
xchg
imul
mov
push
imul
cltd
std
mov
fcmovb
sub
in
mov
stc
repz
sub
mov
decl
jmp
repz
pop
ret
and
cmp
fcomip
pop
insl
incl
cmp
push
call
add
das
mov
xor
outsb
dec
ffreep
adc
push
out
out
fmul
fisubrl
xorb
sbb
std
jg
popa
mov
dec
push
or
std
inc
outsl
ljmp
jecxz
cmpsb
add
gs
outsb
cmp
iret
imul
pop
push
rcrl
dec
pop
data16
xor
add
inc
rcll
push
add
mov
mov
jo
or
pop
gs
scas
sbb
push
gs
mov
jg
ficomps
leave
xchg
pushf
insl
inc
scas
mov
sarb
push
gs
scas
cltd
cmpsb
lods
movsl
mov
rcrl
mov
nop
mov
loopne
ss
inc
pop
es
in
mov
aad
popa
stos
mov
fbld
dec
mov
loope
cmp
cmpsl
sar
jp
shl
imul
lock
cmp
adc
cmp
sarl
mov
xchg
rorb
jne
shlb
mov
bound
in
add
push
psubusw
js
inc
out
stc
imul
xorl
adc
lahf
sbb
jo
test
aam
test
out
sti
movsb
loopne
dec
add
inc
adc
mov
fmul
insl
inc
dec
mov
movsl
das
add
mov
mov
push
pop
xchg
pushf
pop
sbb
mov
xor
inc
xorb
ljmp
in
pop
cmp
fidivrs
cmp
xchg
add
push
pop
jmp
ss
xchg
subb
cli
dec
fiadds
ss
subb
push
xchg
clc
mov
mov
lcall
stos
xor
sbb
pop
fnstsw
cmpsl
in
cmpsb
cmp
or
cmc
std
add
shlb
mov
unpcklps
sahf
sub
fiaddl
or
xchg
and
adc
pop
jecxz
lret
xchg
inc
aaa
movsb
inc
insb
mov
sbb
xchg
hlt
out
or
hlt
push
imul
push
jecxz
push
mov
cwtl
mov
mul
push
adcb
xchg
dec
nop
sub
call
cli
cmpsb
xor
push
inc
inc
shl
notl
pusha
lret
repnz
jge
xchg
pop
sub
mov
mov
sbb
dec
pop
fidivl
jo
hlt
add
fwait
cld
push
pushl
jae
movsb
jns
xchg
loop
in
dec
pop
xchg
int
xor
into
stos
mov
jmp
loop
push
in
cmpsl
in
dec
lods
or
loope
or
test
lret
rclb
fsubs
imul
xor
jno
sub
fwait
jmp
add
cli
inc
cmp
xor
and
cmpsl
das
mov
es
jnp
inc
fwait
std
lahf
dec
ret
pop
push
loope,pn
pop
fucomp
out
xor
mov
mov
mov
adc
lret
mov
loop
add
pop
stos
mov
imul
jbe
outsb
mov
repnz
in
aam
push
sub
scas
or
out
jmp
mov
dec
push
or
inc
repz
scas
push
jnp
xor
sub
dec
push
gs
fiaddl
stc
sbb
out
nop
js
in
xor
push
sbb
mov
loope
xchg
jg
lea
mov
or
outsb
jno
xchg
dec
sar
or
data16
repnz
mov
add
and
addr16
pop
jmp
cld
dec
sbb
sub
dec
sbb
push
or
adc
test
sbb
pop
xor
sbb
xchg
out
loop
fsubr
lods
add
andl
aam
pop
mov
xchg
push
fisubrs
xchg
shl
fisubrs
xor
iret
mov
adc
add
add
and
aad
sarl
test
sub
sti
imul
jno
jl
push
jecxz
call
pop
in
mov
fdivrs
pop
clc
lods
sbb
xchg
mov
aad
sahf
mov
arpl
xor
add
sub
jge
test
popw
mov
or
push
inc
xchg
push
adc
sbb
jecxz
pop
cmp
push
dec
iret
xor
test
push
scas
jne
shl
pop
sub
or
lret
fsts
scas
dec
fistpll
mov
ret
and
cmp
inc
sub
dec
sbb
mov
xchg
rclb
imul
sbb
cs
jle
test
xor
mov
sbb
fwait
aad
int3
xchg
stos
std
sub
mov
sub
mov
dec
out
mov
stos
mov
addr16
push
ror
cltd
fsubr
jb
cwtl
cmp
mov
adc
jp
and
mov
or
leave
mov
mov
adc
iret
jge
insb
inc
mov
sub
xor
test
int
jno
ss
mov
or
repnz
mov
push
and
outsl
cmp
sbb
movhps
lcall
xor
cmp
mov
xchg
adc
add
icebp
dec
mov
adcl
lods
add
out
out
inc
pusha
addb
cmpsb
mov
dec
inc
das
and
fsts
shll
outsb
in
push
test
pop
lock
ds
adc
push
leave
fiadds
pop
daa
sub
pop
mov
hlt
pushf
loope
lea
orb
pop
push
or
cmp
pop
xor
cli
cmp
jnp
lods
int3
xchg
xor
and
push
stc
add
cs
mov
or
shrl
fldcw
iret
fwait
push
fisttpl
cmp
ret
push
sarb
lods
shll
pop
ffree
cwtl
lcall
das
ljmp
maxps
into
push
in
pop
sahf
lea
mov
jnp
xchg
jae
push
adc
add
push
cld
test
jmp
out
pop
cmp
stc
insl
and
xor
cltd
lret
sar
in
push
leave
xchg
jmp
jae
arpl
pop
sti
pop
fldenv
xchg
inc
jge
jnp
sbb
cmc
pop
push
lret
in
mov
sti
xor
or
mov
add
pop
rcrl
addr16
xchg
mov
fsubl
ret
inc
test
mov
div
lods
pop
js
adcb
xchg
in
mov
mov
imul
cmc
shrb
pop
mov
stos
loop
xor
popf
push
add
jae
in
cmc
out
sub
sub
aaa
out
mov
fisttps
shll
cs
xor
sbb
sbb
ja
imul
pop
xor
mov
lock
mov
inc
and
andl
mov
lods
fildll
jne
pop
add
cmc
and
incl
loop
jnp
sbb
outsb
push
arpl
push
mov
aaa
jne
pop
xchg
adc
mov
add
mov
ret
add
mov
mov
add
mov
mov
popf
or
les
and
mov
scas
jo
out
mov
int
inc
or
xor
xor
xchg
push
mov
je
lds
inc
sbb
jns
nop
loope
jae
jecxz
fbld
mov
in
inc
cmp
imul
and
sub
jnp
xchg
mull
sub
xchg
les
mov
sub
xor
add
lods
cltd
push
jge
push
mov
push
cmp
xor
push
sbb
dec
loop
test
fdivs
cmp
push
mov
xor
adc
dec
inc
rorl
or
in
cmpb
mov
subl
lods
sbb
aaa
xchg
sub
insl
mov
mov
cmp
sub
addr16
lds
addr16
add
imul
aas
ret
sti
sbb
add
imul
ficoml
push
mov
in
cmp
les
xchg
and
cld
and
xor
or
cmpsl
cmp
jge
and
push
push
mov
lods
out
push
pushf
add
jae
pop
repz
jmp
aas
dec
xlat
clc
jmp
xor
xchg
mov
mov
das
pop
cltd
cmc
pminsw
mov
js
arpl
shlb
sub
add
mov
inc
dec
cmp
out
xchg
xchg
mov
aas
lret
orl
lock
cltd
je
cltd
int3
pusha
mov
sub
stos
sbb
call
pusha
cld
xor
xchg
jmp
cmp
add
mov
out
loopne
mov
adcl
movsb
out
push
adc
repnz
cmc
pusha
popf
mov
dec
cmc
mov
pop
pop
shlb
outsl
sbb
sahf
xor
orb
add
out
mov
cmpsl
stos
test
int
push
aad
sar
or
in
mov
sahf
mov
cmpsl
popa
jge
xchg
sbb
imul
daa
sub
mov
add
shll
rol
add
mov
mov
lock
pop
mov
xchg
fiadds
scas
stc
lret
pop
sub
in
es
and
xchg
ja
mov
imul
sahf
push
lods
inc
and
sub
jo
paddusb
repnz
push
pop
and
xlat
sub
sub
outsb
shll
pop
pusha
inc
mov
mov
inc
jp
inc
jmp
pushf
pop
push
push
pop
cs
xor
mov
sub
jle
outsb
call
xchg
dec
lods
adc
je
test
outsb
or
xor
dec
int
jnp
out
sub
pop
ljmp
mov
jno
dec
nopl
shrl
push
aaa
mov
add
ss
jmp
cltd
mov
ret
je
mov
imul
test
pop
movsl
and
out
sbb
mov
imul
push
lods
lds
andb
cmp
xor
and
pushf
xor
jo
jb
dec
arpl
cmp
into
mov
or
rclb
sub
insb
in
cmpsb
xchg
orl
outsl
test
scas
insl
jnp
stc
std
jae
jecxz
lahf
sarb
or
sarb
ja
sti
xchg
lea
mov
std
and
add
lods
cmc
inc
xor
in
mov
pop
sub
orl
dec
cli
fmul
adc
mov
fimuls
cltd
mov
pop
and
lods
pop
pop
push
insb
jne
sbb
and
cmp
sub
xor
push
fsts
inc
xchg
push
ljmp
repz
adc
out
ret
rol
xor
mov
in
dec
push
mov
sbb
push
add
aaa
pop
cld
dec
lret
leave
and
adc
out
aaa
xchg
aad
mov
imul
test
pusha
ss
jl
into
add
sub
jecxz
test
stos
mov
push
pop
sarb
es
push
fimuls
cmp
inc
adc
icebp
cmp
jbe
pop
and
aas
jp
jg
sub
sub
scas
mov
inc
mul
push
push
jecxz
test
xor
jns
fisubl
push
push
ljmp
stc
sarl
lret
push
adc
cs
imul
inc
cli
aad
mov
push
jo
loope
jbe
adc
dec
add
pop
cmpl
ss
mov
dec
inc
or
scas
sub
repz
xor
scas
sti
clc
push
jb
scas
push
sub
scas
mov
sbb
cmp
dec
fcoms
push
cmp
cmp
inc
inc
stos
int
out
notl
pop
pop
inc
xchg
mov
cmpsl
mov
cmp
push
insb
inc
cli
arpl
and
add
lods
popf
xchg
push
int3
xor
xchg
cli
lods
mov
xchg
fdivrl
sub
or
and
and
add
inc
sbb
cs
xchg
xchg
frstor
loop
dec
loope
movsb
push
mov
dec
sub
cmp
cltd
xor
sub
mov
popa
inc
lea
or
xchg
xchg
mov
mov
dec
jo
mov
rorb
pop
jle
fstpl
in
out
inc
cmp
jle
daa
movsb
add
lea
iret
jle
jae
jbe
mov
mov
shrl
ds
mov
push
push
mov
stos
mov
cwtl
test
add
in
das
iret
jg
cmp
mov
mov
push
ss
inc
adc
sub
or
mov
pop
cltd
mov
adc
push
sub
or
mov
xor
cmpsl
lds
fsubrp
jno
andl
xor
je
lcall
incb
pop
pop
imulb
pop
mov
fs
frstpm(287
nop
push
sbb
xchg
ret
fdivrp
dec
stos
cmp
fwait
lret
jbe
pop
das
inc
and
test
add
adc
sub
mov
xor
and
cmp
jnp
cmpsb
call
int3
insb
scas
sahf
cmp
add
sub
and
aad
in
nop
test
hlt
dec
mov
lcall
jge
jno
ljmp
shll
mov
jge
ss
addr16
mov
and
sahf
imul
inc
mov
xlat
mov
aad
or
mov
mov
addr16
movl
sbb
fmull
stos
sbb
mov
inc
aaa
push
subb
cmp
pop
popf
movsl
testl
mov
or
fs
fdivrl
xorb
xchg
dec
mov
push
and
sub
cld
xor
fcomps
mov
add
lcall
shr
jae
xor
shrb
jne
pusha
loopne
add
scas
nop
aad
mov
xor
inc
enter
outsb
inc
aaa
icebp
ret
cmp
push
sub
mov
or
pop
movsb
in
outsb
xchg
mov
imul
pushf
pop
leave
sahf
repnz
pop
data16
ds
add
and
pop
ja
leave
jbe
fidivrl
cwtl
xchg
inc
mov
dec
jl
add
jg
testl
xor
push
mov
mov
loopne
xchg
push
mov
mov
hlt
pop
call
arpl
adc
cmpsl
inc
sub
sbb
ds
push
or
in
sub
cmp
stos
imul
imul
cmpl
add
movsl
fdivr
sub
mov
sbb
push
lahf
fdivrs
je
in
in
aaa
dec
movsl
sar
jmp
roll
and
sub
aam
sbb
cltd
sbb
jp
icebp
stos
adc
xchg
sub
test
outsb
gs
mov
add
mov
or
cmp
cld
ljmp
xchg
fcompl
sbb
sbb
and
ljmp
cmp
cli
hlt
popf
imul
xorb
push
js
cmp
jae
mov
int3
jb
inc
pop
ret
scas
jecxz
pusha
ds
loopne
js
lds
adcl
icebp
lds
jmp
pop
ss
xchg
pop
ret
fs
jp
rcrb
pop
or
mov
movsl
add
movsl
add
insb
rcr
jae
mov
stos
cwtl
mov
pop
mov
sbb
add
ja
sbb
or
jecxz
sub
dec
sti
repnz
mov
inc
icebp
inc
shlb
push
xchg
ret
inc
sbb
clc
js
int
jmp
fs
icebp
cld
mov
mov
test
mov
xchg
dec
outsl
xchg
jno
sub
or
xor
aad
jge
int3
in
mov
stc
pop
fisttpl
pushf
dec
js,pn
addr16
xor
dec
nop
mov
jl
cltd
clc
pop
pop
loope
adc
gs
sbb
xchg
andl
add
enter
jp
and
into
pusha
push
cmp
out
sub
das
out
js
jne
lods
mov
push
sub
mov
and
adc
push
test
or
stos
pushfw
xor
psrld
and
push
adc
sub
inc
jge
sti
popf
in
or
mov
in
out
mov
jns
dec
std
bound
or
mov
mov
push
push
xchg
adc
sarl
mov
cld
push
cs
mov
out
or
sti
pop
outsl
dec
mov
push
or
and
pop
aad
dec
pop
pop
inc
mov
xchg
insl
xchg
js
inc
andl
scas
imul
mov
fucomip
xor
jns
lret
add
pop
cltd
subb
dec
add
cs
sub
push
mov
pop
cwtl
roll
in
icebp
mov
jg
jmp
inc
pop
add
arpl
movl
shr
cmp
xchg
test
jbe
sub
pop
jns
hlt
test
popf
lcall
ja
movsb
push
mov
and
xor
push
mov
lods
jb
jo
jge
call
sbb
pop
lock
cmc
lock
scas
jecxz
adc
mov
cwtl
jecxz
and
xchg
aam
sbb
ljmp
insl
lds
addr16
sti
and
push
xchg
fstl
pop
and
xchg
roll
insl
sbb
xor
xchg
test
adc
std
mov
into
cmp
aad
je
dec
mov
cmp
repnz
incl
xchg
inc
enter
hlt
scas
cmp
scas
out
sub
ds
cs
jl
es
ja
xor
mov
and
sbb
movsb
mov
fidivrl
sahf
andl
jl
or
cmp
lods
xchg
push
inc
dec
jae
in
mulps
ljmp
inc
into
jbe
xchg
stc
cmp
adc
or
cmp
daa
xor
arpl
in
fcoms
fwait
arpl
inc
sbb
mov
lock
lods
je
js
rcll
xor
sar
xor
jnp
dec
mov
jmp
inc
outsb
mov
fcomip
push
jp
daa
std
xor
sbb
pop
xchg
or
imul
pop
jne
aas
jno
rclb
jo
fcomp
lret
mov
mov
sarl
xchg
dec
add
jp
ljmp
xor
int3
fildll
ljmp
sub
jae
mov
pop
hlt
movsl
xchg
call
jo
aas
ljmp
notb
stc
sbb
and
dec
adc
dec
jl
inc
xchg
imul
or
cmp
ret
push
jmp
enter
xchg
fisttpll
roll
jp
mov
call
out
sbbl
cmp
fnclex
sahf
sti
adc
leave
dec
mov
jnp
mov
inc
shl
push
imul
das
nop
dec
das
dec
test
inc
mov
subb
push
movaps
mov
fdivl
test
cmp
mov
mov
jmp
pop
and
mov
mov
mov
jne
jnp
fnsave
cmp
xchg
mov
popf
mov
negl
ja
push
icebp
cwtl
xorb
lret
mov
cmp
ljmp
shll
dec
pop
adc
sub
mov
je
call
enter
pushf
jmp
das
sub
test
sbb
fsubrp
dec
sub
pop
ja
in
push
stc
jl
cmc
stc
pop
int
ud1
pop
scas
xor
cmc
enter
fimuls
stos
lret
pop
shlb
sbb
sub
add
cld
lret
xchg
dec
push
aas
xchg
xor
push
mov
aaa
sbb
push
push
push
leave
add
fisubrl
and
mov
adc
cmp
aam
int
sub
fwait
xlat
mov
mov
lcall
sub
dec
dec
jp
rcrl
hlt
sub
cmp
mov
cmpsb
cli
push
push
cmp
cmc
stc
jo
mov
jo
cs
aad
cmp
test
test
stc
in
pop
mov
popf
loopne
jns
cli
repnz
inc
push
inc
or
rol
jge
jp
repz
les
into
adc
arpl
imul
in
cmp
xchg
iret
inc
ret
std
jno
jbe
pop
sub
ficoml
sub
adc
push
mov
cli
scas
pop
cmp
notl
fistpll
imul
pop
negb
lret
pop
inc
sub
fs
enter
dec
hlt
mov
nop
mulb
popa
scas
filds
loope
ds
inc
sub
adc
ret
cwtl
sub
enter
jbe
cwtl
inc
mov
jb
jl
adc
or
mov
call
mov
jns
jb
pop
cli
in
jne
test
pop
sub
sahf
bound
dec
popa
cmp
mov
pop
hlt
jb
add
dec
mov
out
xor
sub
std
lahf
pusha
jmp
movsb
enter
sbb
scas
inc
ds
lods
cli
pop
hlt
sub
mov
stos
mov
shrb
pushf
add
push
sbb
cli
test
int
mov
negb
addr16
jne
and
scas
dec
lret
push
mov
ja
or
out
es
mov
xchg
out
jl
imul
flds
mov
popf
mov
shlb
mov
pop
outsl
cwtl
fcompl
and
inc
mov
fwait
cli
mov
sub
mov
dec
mov
and
shl
outsb
lahf
ss
cltd
pop
mov
inc
mov
pop
in
addps
popf
lahf
add
test
adc
cmpsb
scas
and
inc
jg
xor
movsb
fsincos
sbb
shll
aas
gs
sub
jnp
in
imul
rorl
mov
pop
sub
mov
lods
sbb
or
pop
or
xor
inc
inc
lock
in
jp
ds
xor
and
adc
sub
mov
fs
cmp
movsl
icebp
lea
dec
lahf
repz
shll
cmp
aas
sub
pop
xchg
mov
jg
inc
xorb
mov
and
xorb
cmp
or
shlb
aad
jg
pop
bound
cwtl
out
outsb
mov
jb
sub
mov
call
mov
pop
decb
cmp
jno
int3
inc
push
xchg
mov
nop
dec
in
lea
int3
xchg
enter
ss
jo
and
lea
sub
jge
adc
inc
out
int3
jecxz
mov
dec
xchg
shl
push
das
jg
add
sti
aas
outsb
mov
jecxz
inc
stos
lret
ficomps
test
and
jl
xchg
popa
push
lea
in
cmp
mov
push
dec
mov
bound
push
dec
stos
int3
in
cld
mov
pushf
jne
jns
push
test
fadd
adcl
jno
fsubl
sbb
rcll
pop
xor
popl
jp
mov
decl
sub
and
call
push
mov
mov
imul
jns
inc
int3
mov
and
movsb
icebp
andb
shrl
mov
fisubrs
sbb
pop
adc
mov
xor
inc
loopne
inc
jge
push
pop
gs
pop
mov
inc
cltd
xchg
lea
push
sub
jbe
sub
mov
cmp
dec
push
icebp
rcrb
xchg
sbb
xor
lds
cmp
into
popa
adc
aad
addr16
add
ljmp
cmpsb
xorl
dec
cmp
clc
inc
repz
imul
popa
inc
mov
push
mov
jecxz
dec
ret
fwait
xchg
pop
dec
push
das
sub
addr16
es
fchs
cmp
ss
mov
fsubs
int3
dec
mov
mov
and
scas
cmp
clc
cmpsb
or
sbbb
dec
rcrb
stos
pusha
push
imull
int3
test
push
add
sti
push
push
loopne
pop
sub
das
sub
or
scas
shll
sub
popf
jb
mov
mov
aaa
andb
js
jb
jle
mov
lock
xchg
cmp
add
push
pop
mov
lret
or
xor
out
mov
cmpsb
inc
push
pusha
inc
cmpl
inc
shrb
imul
cmp
insl
lods
jne
sbb
movsb
insl
and
shlb
insb
mov
push
jo
sbb
fdivrs
cwtl
movsb
or
or
jbe
iret
mov
mov
addr16
es
pop
jmp
xchg
lods
adc
sbb
cmp
xchg
fcomps
mov
or
dec
into
into
pop
shl
leave
ret
sub
jle
ss
ljmp
iret
les
mov
xor
lock
push
fcoml
inc
imul
ljmp
mov
jmp
jne
add
cmc
test
jg
xor
xchg
adc
movsl
jno
roll
mov
lods
bound
sbb
out
inc
shl
xor
shlb
sbb
adc
enter
mov
out
mov
outsl
xor
pop
outsb
jecxz
sub
or
push
out
lcall
daa
ljmp
stos
xor
adc
inc
sbb
leave
mov
mov
movsb
pushf
scas
xchg
inc
popa
xchg
push
adc
push
cmc
dec
jb
and
ret
sub
pop
lcall
ret
cltd
sahf
push
cli
jne
sub
sbb
add
aaa
mov
fldcw
pop
xor
into
sbb
xor
bound
mov
or
inc
and
fisubrs
add
test
jle
dec
push
pop
lcall
sbb
mov
or
mov
cmp
inc
and
shr
ret
dec
or
gs
mov
repz
orl
xor
cld
mov
mov
mov
jns
pop
jbe
scas
add
add
xor
push
push
aaa
jecxz
push
roll
mov
lock
xchg
jo
inc
dec
push
int
inc
add
popa
mov
and
bound
movsl
je
movsl
ss
sub
mov
adc
lahf
jnp
insl
pusha
clc
pop
test
into
out
mov
into
ljmp
outsl
jg
rorb
xchg
ljmp
incl
xchg
jne,pt
xchg
inc
lret
imul
es
sbb
stos
or
sbb
stos
sti
data16
adc
js
add
test
mov
popf
test
inc
mov
mov
push
out
sbb
icebp
mov
sahf
push
xchg
pop
mov
stos
int
loop
repnz
shl
jecxz
pop
mov
ljmp
cmpsl
adc
xchg
gs
fldl
icebp
mov
sbb
or
lret
sub
jnp
insb
inc
inc
iret
push
loope
xor
cmp
push
rorb
inc
push
jmp
mov
mov
ror
ret
ss
lcall
gs
rorb
push
or
test
add
add
cmp
push
sub
call
mov
stc
scas
sub
add
mov
cmpsl
aam
fimull
push
ret
adc
addr16
mov
fildll
jle
in
aad
sub
xorb
test
mov
push
sbb
fwait
sub
pop
loope
jbe
push
sub
pushf
aaa
inc
ret
and
jb
cmp
aaa
nop
js
push
in
std
or
test
xchg
jno
pop
popf
jbe
addl
dec
pop
hlt
xor
adc
mov
test
xchg
xor
jbe
cmp
fxch
jo
sub
mov
sbb
icebp
xchg
xchg
adc
or
inc
out
ficoms
testl
cli
mov
and
mov
cmp
mov
test
jl
mov
fs
sub
outsb
in
fcoms
lcall
jge
out
sub
jge
popa
int
cmp
inc
jp
push
fstps
ds
aam
mov
mov
addr16
je
rclb
jbe
insl
icebp
push
outsl
mov
addr16
sbb
pop
gs
mov
mov
sbb
cmc
je
xor
and
jge
push
fildll
std
dec
dec
add
dec
jge
sub
subl
jecxz
in
dec
fs
xorl
mov
aas
jo
dec
frstor
dec
dec
jecxz
and
push
cli
icebp
add
in
add
push
iret
imul
ljmp
jae
adc
vshufpd
mov
xchg
mov
inc
lret
jg
sub
push
mov
or
cmpsb
inc
or
push
ds
mov
mov
cmpb
sahf
xor
mov
sar
mov
and
imul
sbb
sahf
xor
cwtl
nop
mov
mov
xchg
push
xchg
push
jno
mov
ret
or
sbb
jg
jno
push
or
aaa
jne
inc
sti
pushf
imul
shll
push
out
xchg
dec
lea
pop
xchg
adcl
sbb
push
jmp
ror
cmpsb
les
cmc
mov
mov
mov
push
mov
scas
xor
xchg
data16
sub
test
inc
out
sbbl
ret
adc
das
mov
mov
incb
cmp
adc
sub
cmpsl
cmp
aad
jg
xchg
xor
jne
in
add
push
ret
add
mov
ss
out
pop
daa
sub
push
mov
jno
inc
and
popl
mov
aaa
jb
hlt
sti
aaa
mov
cmpsb
repnz
jg
in
adc
mov
test
rcr
pop
push
inc
jle
stc
jns
or
iret
and
mov
mov
mov
inc
jl
scas
mov
std
movsb
cmp
arpl
sub
mov
dec
sbb
mov
push
sarb
adc
lret
inc
jne
inc
jp
shll
lret
mov
into
add
jnp
push
mov
mov
xor
jns
sbb
xor
adc
mov
out
add
scas
or
es
add
sub
sti
jns
pop
test
xor
xchg
adc
pop
xorl
enter
cmc
cs
sub
jns
push
orl
lock
sbb
sub
repnz
shll
push
flds
push
cmp
pop
cltd
cmpsb
lret
mov
iret
ss
and
cbtw
cs
test
out
pop
cmpsb
adc
sahf
cmp
mov
enter
cmp
sub
adc
add
and
jmp
mov
test
xor
cmpsl
mov
data16
or
dec
inc
xor
outsl
xor
pop
cmp
loop
imull
pop
iret
cmp
pop
cmpsl
push
fisubrs
xor
push
pop
fdivs
sub
xlat
popa
inc
into
dec
xchg
sub
cld
dec
fnsave
push
add
fcoml
jo
xor
hlt
shl
popa
lds
lods
inc
push
push
push
mov
in
cltd
add
pop
scas
nop
sahf
or
in
sbb
lcall
pop
mov
dec
mov
or
and
bound
dec
es
fsubrs
sbb
aas
xchg
rclb
aas
int
push
inc
push
add
ret
es
pop
call
dec
mov
loopne
mov
xchg
roll
mov
rol
push
mov
loope
dec
xor
pusha
mov
mov
hlt
cmp
nop
push
add
pop
mov
mov
inc
cmp
and
scas
aaa
jmp
sub
push
adc
out
inc
sbb
in
push
jge
pop
add
xchg
add
xlat
shll
jb
cmc
lds
xchg
xor
inc
push
adc
rclb
xchg
stos
lcall
jmp
lds
repz
cmp
sub
xor
popa
das
repz
mov
push
stc
xchg
leave
bound
dec
shlb
mov
clc
sbb
idivl
stos
pusha
push
js
and
out
js
mov
sbb
mov
in
add
xchg
pop
push
lods
std
and
mov
and
jnp
xlat
xchg
aaa
dec
loope
fisttps
adc
jl
dec
dec
pusha
mov
aaa
imul
jne
es
mov
adc
adc
mov
xchg
xor
inc
cld
jne
aam
mov
shlb
loope
push
mov
push
imulb
hlt
xchg
sarl
iret
mov
mov
subb
mov
ret
cwtl
mov
jle
sbb
lock
xchg
sub
andl
cli
adcb
inc
and
filds
xor
mov
mov
xchg
adc
and
or
dec
sbbl
mov
cmp
stos
stos
add
loope
and
push
rcll
gs
ret
loopne
xor
pop
rcr
mov
push
cwtl
add
sub
sbb
sbb
adc
dec
mov
mull
imul
xchg
and
call
mov
in
gs
xor
dec
enter
inc
loopne
cli
pop
les
popf
jp
inc
movsl
sbb
gs
mov
push
int
fadds
je
xor
xor
leave
mov
adc
movsl
cmp
stos
sub
add
cmpsb
jb
mov
in
or
daa
aad
sahf
sub
or
sahf
movsb
pop
jle
dec
fs
pop
xchg
pop
cli
outsl
sub
sbb
dec
lahf
fcomps
inc
lock
mov
sub
fstl
adc
push
jg
andb
out
push
test
cmp
into
mov
push
and
jmp
pop
repz
and
mov
sbb
inc
push
les
mov
xor
jmp
push
and
scas
mov
popa
push
prefetchw
pop
cmpsb
lds
sbb
push
loopne
rcrb
pop
hlt
sbb
sbb
shlb
xchg
dec
pop
fstps
test
xchg
or
gs
js
imul
sub
inc
push
xchg
jnp
push
mov
out
lock
dec
ret
mov
add
jno
in
lea
andl
add
int3
or
and
fmuls
cmp
cmpsb
mov
popf
mov
loop
and
mov
inc
pop
out
sub
insb
loopne
in
push
jg
cmp
push
out
mov
mov
ljmp
mov
movsb
pop
cmp
stos
std
jbe
push
or
dec
mov
roll
cmp
cmpsb
mov
lret
mov
sbb
sub
push
out
add
xchg
sbb
mov
sti
leave
mov
bound
movsl
sub
je
test
sub
lods
movb
out
test
add
ja
jge
pusha
sub
lea
inc
int3
inc
mov
push
mov
insl
dec
sbb
jl
inc
fistl
mov
dec
fsubp
xchg
stos
leave
adc
dec
mov
and
inc
nop
das
arpl
xor
sbb
js
cli
mov
outsl
ljmp
add
sub
inc
adc
outsl
jne
lds
lods
dec
and
and
sahf
mov
jmp
cmc
test
scas
cmp
aad
adc
movb
fcmove
cmp
shrl
push
test
jnp
shr
loopne
or
add
shlb
fsubl
ficomps
add
xor
pop
iret
push
push
fisttps
mov
arpl
xor
sbb
dec
arpl
xor
mov
out
add
outsb
mov
shr
inc
subb
cmp
sbb
lret
int
loopne
or
push
mov
outsb
xor
dec
xchg
fsubs
data16
testl
fbstp
int3
add
sbb
rorb
mov
mov
push
gs
sbb
pop
jmp
gs
int
rcrb
adc
or
mov
es
cwtl
mov
ret
xor
xchg
mov
sbb
inc
push
call
outsl
adc
cmp
jnp
cmp
test
fsubr
ja
jg
mov
mov
sbb
out
faddl
adc
adc
mov
mov
stos
adc
decl
lods
or
mov
mov
lret
rolb
nop
js
sbb
cmp
xchg
cwtl
or
mov
fwait
xchg
fimull
mov
mov
insl
out
pop
mov
jno
mov
je
mov
or
mov
pop
out
in
adc
cmp
sbb
sbb
pop
adc
lahf
test
inc
mov
les
mov
add
jne
mov
cld
jle
out
shll
cs
aam
mov
ljmp
scas
add
lds
xchg
xchg
pop
mov
icebp
cmp
mov
or
and
clc
pop
cmp
add
sub
pop
pop
xchg
les
or
stos
or
mov
jl
xorb
movsl
xchg
fwait
inc
cmpsl
mov
pop
insl
jno
test
adc
fsubp
mov
rclb
add
push
jno
pop
mov
addr16
lahf
andl
aas
sub
es
mov
mov
add
in
xchg
ss
shrb
testl
mov
xchg
ja
cmpsb
ds
lret
lret
les
or
push
adc
pusha
inc
loop
int3
cltd
pop
sub
mov
push
pop
lds
push
jnp
xor
inc
pop
pop
cli
insl
nop
aad
xor
mov
stos
jne
popl
iret
loopne
inc
sub
fiaddl
mov
ss
popa
jns
sti
cld
add
dec
leave
adc
out
das
push
pop
inc
inc
js
xchg
push
stos
arpl
in
fstps
pop
jg
and
or
enter
sub
add
jnp
fstps
push
jl
dec
pushf
dec
inc
imul
loopne
mov
loopne
fsubrp
iret
std
mov
sti
arpl
or
and
jnp
vcmpsd
inc
xchg
push
sarb
fisubrl
inc
scas
inc
mov
mov
push
fistpll
movnti
cli
jecxz
shlb
fldt
pop
mov
loopne
pop
mov
sub
cmp
ret
dec
jge
jb
mov
into
ljmp
and
mov
rcrl
out
dec
xor
out
rclb
data16
int3
in
test
flds
stos
mov
popf
cltd
scas
cltd
mov
mov
or
jl
into
mov
cmp
pop
jmp
js
jns
aaa
fldenv
sbb
xchg
adc
pop
mov
sarl
out
enter
pop
adc
wbinvd
cwtl
mov
dec
sbbl
xchg
fildll
mov
jp
push
in
jle
jbe
inc
outsl
mov
push
sub
add
iret
negl
pop
aad
xor
pushl
bnd
mov
aam
mov
daa
jle
push
add
xchg
push
ss
ffreep
cld
xchg
cmpsl
mov
lea
mov
pop
xorb
popf
jecxz
or
push
sbb
je
jl
lahf
push
fildl
mov
add
inc
pushf
sbb
rclb
xor
aam
lock
aaa
mov
bound
cwtl
jbe
dec
repz
inc
cmp
in
or
lahf
fcomps
lds
jnp
lret
jno
sub
negb
xchg
push
icebp
jecxz
jae
mov
jl
imul
ja
xchg
mov
sbb
jl
cs
mov
mov
dec
xlat
inc
jg
and
sti
repnz
in
pop
xor
cmpsb
loop
sub
insb
dec
jno
lret
aas
hlt
out
jno
call
pop
pop
cld
insl
mov
gs
xchg
dec
jo
cs
push
call
sub
sub
push
or
lods
adc
add
pop
fwait
xorl
jg
push
jmp
jns
lock
cmp
ret
add
mov
pop
and
jl
add
repnz
dec
push
lock
push
pop
mov
jle
mov
cmpsb
das
sbb
scas
out
bnd
push
jecxz
mov
cmpsl
mov
cs
cmp
adc
push
js
inc
in
std
leave
in
jl
sbb
and
sbb
inc
jl
pop
dec
out
aas
push
inc
push
xchg
inc
add
orb
lds
addr16
mov
cs
loopne
dec
xorl
mov
loop
lcall
enter
add
imul
mov
add
mov
imul
movsb
sbb
fcmovbe
lea
fsts
adc
xchg
mov
imulb
jb
sbb
pop
test
fwait
inc
popa
add
mov
sub
insb
fidivl
fdivl
sub
clc
js
mov
push
mov
jmp
dec
ljmp
mov
fists
xor
sti
cs
out
xchg
jbe
mov
adc
mov
mov
xchg
int
inc
or
ja
cmp
cmpsb
fnstsw
orl
clc
cwtl
dec
inc
cmp
xchg
jg
inc
enter
sti
or
cmc
push
adc
xor
pusha
xchg
loop
shlb
popf
mov
lea
subl
test
mov
add
push
dec
xor
and
dec
mov
xor
sbb
or
mov
es
lods
repnz
arpl
stc
add
inc
dec
ret
xchg
mov
jle
cli
mov
imul
and
dec
loopne
enter
inc
cmp
xchg
jge
xlat
sti
lret
pop
push
nop
sbb
push
and
loopne
insb
int
lea
cmp
push
int3
fs
push
movsl
ficoms
das
mov
das
cmpb
jge
and
and
out
in
lods
cltd
shll
andl
sahf
and
pusha
add
inc
push
lret
in
incl
xor
xchg
push
and
imulb
dec
jp
or
adc
add
mov
jns
loopne
push
or
or
leave
es
lahf
mov
xlat
stc
add
ja
in
jns
outsl
mov
decl
adcb
testb
pop
or
movsb
jb
aam
add
into
inc
jecxz
stc
mov
jecxz
push
ljmp
push
jecxz
mov
sub
popa
sbb
out
adc
std
xor
aaa
sbb
into
movsb
push
sub
mov
push
ljmp
movsl
in
cltd
out
test
addr16
pop
jo
push
aaa
adc
jno
inc
enter
mov
jnp
movsl
xchg
push
mov
inc
push
add
lods
jl
out
ret
jno
dec
mov
sbb
cmc
int
pop
push
loope
push
cmpsl
sbb
pop
subl
mov
in
mov
outsl
sbb
iret
dec
and
jge
inc
push
bound
sbb
sub
xchg
xchg
adc
aad
push
and
das
mov
sbb
xor
jp
adc
xor
sub
and
call
test
and
xor
in
popa
shll
repnz
repnz
dec
fs
cld
bound
loop
outsl
out
cwtl
xor
cmp
hlt
ljmp
cmpl
push
dec
jnp
inc
sub
cs
out
frstor
and
cli
dec
pop
sbb
addr16
xor
and
push
mov
or
roll
stc
into
icebp
pop
inc
gs
adc
inc
cmp
movsb
pop
dec
ljmp
pop
jae
and
repz
add
push
pop
push
dec
imul
mov
sub
es
push
push
and
lret
inc
mov
insl
lret
mov
cmp
xchg
insl
lretw
jle
imul
mov
and
push
or
pop
ja
mov
sbb
xor
movsb
movsb
js
cmp
popa
cwtl
or
and
sbb
mov
jns
jno
cwtl
push
in
movsb
mov
rclb
mov
add
and
adc
fldcw
sbb
or
je
test
mov
add
or
sbb
outsl
aas
loopne
mov
adc
jecxz
iret
sahf
xchg
or
cmp
lds
daa
in
mov
jmp
and
imul
mov
imulb
cwtl
icebp
mov
decb
mov
mov
mov
cmovl
orl
leave
in
fnstsw
adc
sbbb
cmpsl
inc
mov
imul
cld
ror
or
xchg
dec
xchg
adc
or
ljmp
fists
cli
jecxz
out
inc
xchg
jmp
push
cwtl
push
nop
nop
mov
into
inc
movsl
pop
xchg
pop
in
mov
pop
mov
iret
mov
xor
mov
jl
push
mov
stos
or
push
aas
out
aaa
cmp
xor
mov
daa
add
and
out
fcompl
adc
and
push
outsb
mov
adc
loope
xor
call
rcrb
jge
and
mov
adc
pop
xchg
in
fs
xor
and
ljmp
pusha
add
mov
mov
shr
mov
jb
jns
jg,pt
lods
sbb
je
sti
xor
iret
dec
repnz
and
icebp
leave
popa
sbb
lcall
push
xor
xor
push
mov
dec
push
faddl
loopne
test
mov
aad
mov
pusha
adc
aad
xor
movsl
cwtl
jp
inc
mov
dec
mov
aas
add
je
dec
js
sti
sub
jle
push
pop
mov
test
xor
jo
lret
or
mov
aas
mov
es
nop
xor
mov
xchg
mov
mov
sbb
out
cmp
frstor
scas
stos
or
pop
mov
adc
scas
sbb
push
pop
dec
les
add
dec
lret
pushf
xor
sub
add
mov
and
lds
xor
movsl
int
aam
dec
cmpsl
xchg
adc
sti
sub
sub
imul
pop
pop
cmpsb
fiadds
or
xchg
xchg
or
xchg
es
sub
push
xlat
add
jg
push
mul
sub
lret
dec
push
clc
dec
jl
jp
mov
dec
cld
outsl
dec
mov
rcll
sbb
jge
testl
les
sbb
xor
aam
popf
jae
sub
repnz
iret
scas
cmpl
lock
push
xchg
lahf
enter
rclb
or
inc
jl
inc
imul
jg
xor
push
and
mov
add
int3
fs
inc
and
cmp
ret
mov
mov
pop
ja
shrl
pop
repz
arpl
cmc
test
hlt
loopne
hlt
inc
or
mov
cmp
shlb
mov
pop
rorb
pop
pop
inc
add
insl
push
mov
dec
and
xchg
adc
mov
lock
std
push
pop
fwait
std
mov
push
and
cmp
xor
sbb
jle
jl
xor
stos
and
xchg
dec
mov
std
outsl
jmp
lret
or
mov
push
sbb
push
or
lahf
notb
dec
test
sub
int
xchg
mov
rol
jae
aaa
dec
cmp
sti
xchg
cmp
leave
lahf
andb
and
in
xchg
cmp
inc
daa
dec
sbb
push
jne
xchg
out
push
icebp
pop
jbe
or
push
subl
fisubrs
push
scas
cmp
fwait
pop
shrb
aas
repnz
lea
loop
cmpl
and
xor
push
rcl
ds
jecxz
scas
add
in
mov
xor
dec
push
imul
sub
cmp
mov
test
or
or
xchg
icebp
shrb
mov
je
call
and
idivl
je
push
dec
xchg
adc
dec
or
sub
pop
mov
cmp
aam
xchg
lock
nop
loope
xchg
inc
test
test
pop
xor
pop
jnp
ror
lret
adc
jnp
push
outsl
dec
push
hlt
in
pushf
push
out
mov
clc
aam
jmp
xlat
cmc
xor
cmp
cmp
jnp
outsl
shl
xchg
cmpsl
add
cli
fs
pusha
lock
daa
adc
cmp
dec
mov
cmp
add
dec
ret
pop
mov
or
dec
and
rolb
pop
add
and
mov
in
jbe
pop
icebp
sbbl
jle
into
xchg
outsb
inc
arpl
pusha
or
and
jne
mov
adc
ljmp
test
les
pop
xor
sbb
in
out
mov
jno
in
rcr
adc
mov
cmp
rcrl
insb
push
xchg
jmp
jae
inc
cs
add
adc
pop
xchg
mov
hlt
inc
adc
mov
dec
aas
push
mov
inc
arpl
or
adc
mov
lret
mov
push
pop
and
fsubrl
lock
jne
push
add
push
std
mov
sbb
mov
xchg
fnstsw
sub
push
and
mov
lret
int
cmpsl
call
inc
lds
cwtl
push
test
subb
push
xor
sbb
sti
pop
pop
xor
andl
movsb
or
pusha
idiv
std
sbb
push
daa
inc
popf
or
inc
xorl
push
std
jmp
lods
or
arpl
cmp
ret
daa
loope
sub
int
testb
in
fisttps
aam
sub
adc
icebp
pushl
rcrl
mov
lods
inc
dec
out
xor
lock
scas
in
test
outsl
pop
ret
cli
scas
loop
fisubl
pushf
dec
pop
jns
out
pop
inc
push
mov
das
jmp
into
pop
sub
mov
stos
sub
enter
es
xlat
adc
nop
inc
addl
lahf
icebp
inc
insb
pop
xor
fnstenv
test
cmp
addr16
and
jl
ret
lret
pop
pop
inc
jmp
imul
lds
or
lret
rcll
xor
jb
ljmp
lock
jb
stc
or
subl
sbb
shl
dec
push
popa
movl
jno
dec
mov
sbb
mov
not
std
pushf
out
dec
syscall
xchg
xchg
pop
dec
mov
int
or
addr16
int3
out
sahf
testl
lret
or
mov
imul
and
stos
addr16
ret
ljmp
repz
out
jp
mov
mov
nop
in
jno
or
in
mov
ret
mov
or
pop
test
pop
xchg
pop
and
mov
test
xchg
stos
jae
push
and
mov
push
fsts
or
pop
mov
adc
mov
jmp
and
rolb
cmp
and
out
clc
mov
pop
push
cmpsl
imul
fistl
leave
insb
mov
dec
sub
inc
fisubrs
jle
cli
stc
mov
jecxz
dec
scas
jl
es
bound
mov
out
int
fwait
cs
or
ja
in
and
int
scas
shrb
dec
in
divps
aaa
rep
pop
jmp
mov
cmpsb
fidivl
ljmp
mov
aad
leave
push
and
jg
xchg
xchg
movsl
mov
inc
ljmp
adc
and
pop
sub
cld
push
mov
fldenv
dec
mov
lcall
bound
mov
roll
iret
jg
xchg
mov
xor
into
repz
aam
lods
movsb
subb
push
cs
mov
push
cmp
cmpsl
je
sub
ficomps
loop
xor
jmp
dec
call
inc
enter
or
loopne
or
insl
lea
insl
adc
cmp
xchg
or
ret
add
ja
stc
pop
stc
mov
imul
sbb
adc
pop
dec
andb
in
jno
pop
fsub
stc
mul
mov
aaa
ljmp
pop
sbb
adc
xor
dec
inc
inc
sbb
ret
sub
pop
lret
and
out
ficoml
aad
out
jmp
ss
mov
sbb
prefetchwt1
loope
lock
fldenv
movb
push
xor
js
adc
icebp
test
lret
or
inc
ficompl
or
or
lods
dec
xor
push
popf
arpl
pop
aad
pop
nop
pushf
stc
enter
loope
sub
and
daa
push
ret
rorb
popf
jg
fcoml
or
jle
jo
icebp
mov
testb
pushf
xor
pop
push
scas
xchg
push
add
dec
xchg
sbb
inc
clc
icebp
inc
gs
pop
sar
out
sahf
in
int3
ja
std
pop
cmp
dec
and
mov
cmp
ret
or
xlat
movsb
xor
pop
inc
call
nop
aas
adcl
inc
xor
stos
leave
jae
lods
lcall
sahf
xlat
and
xchg
push
pop
add
test
mov
jp
cltd
cmp
push
stc
jge
ljmp
and
pop
stos
adc
aam
dec
jns
popf
xor
movsl
loopne
mov
jle
mov
lods
and
jno
xor
scas
xor
fcmove
out
mov
or
adc
loop
xchg
mov
dec
shr
xlat
loop
sahf
mov
mov
push
jb
incl
jmp
dec
jb
pop
sbb
sub
mov
sub
mov
and
ret
shrl
mov
ficoml
jecxz
cmp
jl
repz
ljmp
xorb
imul
faddl
inc
in
xlat
mov
jg
mov
repz
add
xchg
mov
mov
cmp
mov
lcall
shrb
test
lahf
cmp
ss
shlb
and
call
mov
lods
mov
lods
adc
into
cmpsl
inc
adc
lret
scas
jb
add
sbb
ret
cltd
call
pushf
testl
repnz
std
test
push
cmp
adc
fcomi
shlb
and
inc
pop
loopne
cmpsb
nop
cmpsb
mov
jecxz
add
cltd
pop
cld
sub
xor
cmp
cmp
sbb
or
stos
inc
jg
call
mov
pusha
add
jg
cmpsl
or
or
mov
int3
loop,pn
mov
lods
xchg
inc
pop
add
xchg
xor
cmp
out
push
mov
xorl
test
lds
sub
xor
in
adc
dec
stc
mov
mov
and
in
repz
es
xchg
pop
test
icebp
aad
sar
or
sub
imul
fwait
cmc
or
xchg
insb
sub
push
and
mulb
mov
sub
roll
xlat
dec
lea
loopne
cli
dec
imul
daa
push
imul
sub
ror
sub
testl
mov
cmp
popa
data16
iret
out
push
scas
lods
mov
dec
repz
adc
pop
fcoml
sbb
scas
inc
push
dec
xor
out
inc
icebp
testb
push
jge
adc
jo
jo
dec
mov
hlt
insb
mov
lods
ds
inc
push
jns
cmp
cmp
cmp
pop
lods
arpl
loopne
pop
std
scas
sbb
fwait
cld
jle
sbb
sub
mov
mov
jb
test
out
and
xor
xchg
inc
fsubrl
or
lods
mov
fistps
mov
fldcw
in
sbb
mov
aam
pop
jno
cwtl
and
cmpb
lods
inc
xor
push
ss
or
in
imul
xor
jmp
push
rorb
cmpsb
sbb
imul
stos
and
or
xchg
jmp
mov
xchg
or
or
in
mov
orl
mov
cli
sti
xchg
hlt
mov
mov
dec
adc
clc
jo
aas
cmp
sar
sub
pusha
jmp
push
mov
clc
shrb
test
daa
push
aam
add
xor
xor
int
int
sub
ja
and
lcall
cs
fcompl
stos
imul
aam
and
pop
add
js
ret
fdivr
push
loopne
adcl
add
testl
xchg
push
pop
repnz
inc
pop
int
sbb
push
mov
xor
and
mov
cmpsb
scas
in
insb
sbb
test
add
xor
test
arpl
inc
xchg
test
in
push
iret
call
mov
sub
xchg
sbb
pop
popf
rcrl
fnstsw
dec
add
pop
pop
in
test
or
repz
loopne
and
xor
sub
mov
mov
lods
mov
jge
lods
cwtl
inc
adcb
inc
jo
and
mov
xchg
fldl
ret
mov
sahf
mov
iret
cli
mov
lds
pop
fstl
push
sub
pop
pop
mov
fisubrl
popf
lcall
push
daa
clc
cmpsb
sub
ss
xor
jno
lret
mulb
popa
insl
sub
pop
sub
adc
in
std
mov
or
jmp
or
imul
jo
jo
lea
stos
jbe
xor
lret
into
jns
lret
sbb
sbb
sbb
inc
lret
and
ja
stc
inc
or
xor
shll
mov
icebp
test
adc
iret
mov
shlb
dec
pop
movsb
jae
xchg
jle
cmp
sbbl
in
dec
ljmp
das
fwait
dec
inc
push
sub
mov
mov
push
cmc
je
xchg
out
xchg
mov
fsubrl
in
data16
ret
xchg
test
pop
dec
outsb
dec
xchg
mov
or
and
dec
insl
js
aas
pop
cmp
cmpsb
sub
fsubrl
dec
mov
mov
mov
add
cmc
pop
or
sbb
mov
loop
ficompl
stos
fwait
push
call
pop
sbbb
xchg
adc
pop
jecxz
cltd
push
les
inc
mov
inc
icebp
inc
or
orb
pop
sbb
cmp
xchg
adc
test
jge
pop
push
aam
mov
sbb
in
rolb
cmpsl
je,pn
test
orb
pop
add
xorl
dec
das
repnz
push
shlb
out
cmc
add
out
jle
mov
jl
test
outsb
sti
sub
test
adc
and
xor
std
jmp
ljmp
into
sbb
xorl
fadds
ss
aas
push
xchg
sub
jae
mov
ret
or
sti
fsubrs
push
xor
sub
mov
out
and
dec
icebp
test
popl
subl
fmull
push
push
fsubl
mov
add
call
scas
dec
pop
ret
out
or
cmp
rorb
rcr
popa
jo
jae
or
mov
subb
inc
test
fimull
mov
movsl
jle
mov
xorb
out
add
call
mov
mov
test
xchg
pop
imul
outsl
cmp
orl
mov
xchg
fidivl
dec
cli
je
aaa
or
pop
ja
repnz
inc
cmp
dec
cmp
loop
adc
hlt
lea
pop
dec
dec
lahf
mov
repnz
fsub
xchg
add
sar
in
test
test
rcll
xchg
mov
aad
mov
mov
jbe
call
pop
sub
cmpsb
sbb
jl
sbb
fs
lds
jne
aas
xchg
out
xchg
les
or
pusha
cmp
repz
add
popa
lahf
cmp
and
sar
jns
lret
fildl
sub
mov
lahf
lcall
cli
sub
jns
mov
cwtl
or
fidivrl
bound
jae
cwtl
pop
add
dec
push
cmpl
xor
stos
cmp
add
sbbl
rolb
dec
xchg
insl
cmpsl
jl
push
jo
xor
fsubs
cmp
clc
xchg
push
or
ljmp
xchg
push
lods
xchg
cmp
inc
ret
shrl
jg
int
xor
mov
mov
inc
rclb
push
testl
sub
and
cmp
adc
clc
and
pop
lret
mov
xchg
cltd
lret
popa
xorb
aas
push
add
scas
insl
pop
lock
mov
lret
push
inc
iret
adc
mov
xchg
push
mov
xchg
test
and
pop
xor
pushf
push
outsl
bound
and
mov
mov
cmp
nop
clc
cmp
xchg
and
call
jne
pop
movsb
sbb
decl
lret
dec
jge
stos
mov
pop
mov
adc
in
adc
pop
push
dec
jle
mov
mov
adc
rcll
add
ficoml
pop
mov
es
div
jg
sbbl
dec
mov
cmp
scas
scas
outsl
adc
cmc
push
idivl
mov
mov
adc
movb
cmpb
stos
stc
push
mov
xchg
std
inc
dec
jno
shll
loopne
mov
mov
repz
loope
shlb
dec
jp
pop
aam
add
mov
mov
test
bound
xchg
sub
fstl
insl
mov
aam
dec
mov
xchg
and
jne
push
lret
ret
mov
cli
bound
mov
ljmp
pop
jp
sbb
cmp
std
arpl
rorb
pop
jl
mov
neg
aam
pop
push
cmpsb
ja
ret
sbb
xchg
mov
cmp
xchg
pop
add
inc
inc
inc
ljmp
xchg
dec
frndint
test
sbb
cmpsb
imul
arpl
inc
cmp
xor
and
and
xchg
sbb
pop
and
fldz
dec
dec
stos
ljmp
sub
dec
mov
jecxz
jmp
add
mov
mov
xchg
aam
xchg
js
int3
xor
into
inc
fwait
icebp
sahf
test
dec
inc
xor
icebp
xor
inc
lcall
insb
add
push
in
or
test
xchg
in
or
lret
shll
dec
inc
xor
aaa
int
loopne
test
mov
xor
sarl
pop
inc
in
jle
xchg
outsb
adc
shrl
sub
or
in
js
out
out
push
and
dec
push
orb
sbb
jo
pushf
loope
negb
mov
fwait
dec
cmp
shl
repnz
adc
mov
sbb
jl
add
rol
xor
sub
adc
mov
inc
xchg
inc
leave
stos
pop
je
or
aaa
add
aas
stc
xor
movsb
mov
xor
add
cmpsb
popf
pop
jae
xlat
adc
insb
mov
clc
mov
push
in
mov
cltd
lahf
xchg
and
pop
xchg
pop
dec
and
add
fmuls
lcall
and
dec
cmp
xor
add
sub
pop
rcl
xor
add
test
and
scas
jbe
fcoml
cmc
add
ret
mov
fidivs
or
and
adc
mov
mov
cld
je
add
pusha
fildll
mov
arpl
dec
xchg
mov
cmp
push
push
fistpl
or
lret
std
scas
and
int3
adc
pop
gs
add
cld
or
stc
sti
and
jns
or
fwait
loopne
out
cli
cmp
shrl
sub
sub
iret
mov
inc
sub
or
add
cs
xchg
sahf
out
and
popf
ss
or
xchg
in
push
das
aam
sarb
dec
outsb
lret
insb
sub
fwait
inc
and
ret
sub
jb
es
jnp
outsl
movl
nop
mov
loop
push
mov
stc
push
ror
mov
sub
mov
xor
out
mov
cs
aaa
push
push
adc
std
dec
mov
xor
mov
push
pop
add
adc
icebp
mov
ljmp
lret
sbb
push
mov
sub
add
inc
fiaddl
loop
ficoms
dec
xor
test
or
int
ss
sub
mov
ljmp
ss
arpl
movsb
adc
loope
jge
or
cmpsl
addr16
jge
pop
sbb
test
and
add
inc
scas
dec
adc
cmpb
jge
xchg
jl
cli
shll
push
mov
lret
ret
rcll
jl
pop
idivb
mov
lret
call
jnp
dec
jno
jp
or
xor
xor
icebp
test
scas
cwtl
add
push
cmp
and
mov
fcomi
or
lods
lcall
loopne
out
dec
bswap
fwait
pop
mov
lcall
js
dec
aas
xchg
call
pusha
jge
out
xchg
cmp
push
cmp
jb
inc
xchg
push
sbb
cmpl
mov
push
mov
cmpsl
mov
mov
xor
lahf
jle
aad
fdivl
dec
lahf
cmp
inc
shl
subb
lea
out
popa
ds
cmp
dec
cld
mov
cli
xor
pop
testb
jbe
inc
fcmovb
push
fsub
push
sub
push
jnp
and
loope
adc
mov
xor
loopne
jmp
xor
sahf
jo
cmp
xlat
jo
imull
mov
jle
push
mov
lods
outsb
insb
adc
loopne
test
scas
add
inc
adc
jb
sar
mov
lock
fs
gs
jg
sub
sahf
lret
clc
in
add
lock
lea
das
lods
fcoms
cwtl
sub
and
xchg
mov
fiadds
dec
sbb
push
lcall
jge
xor
ja
andl
adc
dec
pop
bound
push
out
pop
test
lods
add
and
test
dec
ja
xlat
dec
mov
cmpsl
rolb
xchg
lcall
push
cmp
enter
jmp
mov
test
int3
sub
fildll
or
sbb
mov
or
pop
push
add
and
push
shrl
xchg
cltd
push
out
jo
or
movsb
sub
cmp
in
mov
push
int3
lods
sbb
cmp
mull
xlat
cli
out
dec
xor
add
in
movsb
jns
add
xchg
xor
or
sbb
into
adc
add
adc
adc
pop
shlb
xor
les
pshufw
imul
inc
popf
add
push
aas
sbb
pop
test
das
inc
sub
jecxz
xor
push
pop
aad
mov
pop
mov
fmulp
jae
iret
aas
cld
mov
jp
jnp
xor
add
jg
test
daa
shl
cmpsl
lea
cltd
mov
pop
cmc
mov
jp
inc
cs
js
mov
add
jb
xor
adc
or
in
mov
pop
xchg
test
aaa
push
xchg
test
sbb
jne
dec
mov
pop
test
cli
icebp
repz
hlt
mov
cwtl
and
ja
mov
test
cmp
fldt
sub
mov
es
insb
cld
push
mov
jbe
and
sub
jne
push
aad
mov
mov
mov
mov
pusha
xor
inc
inc
dec
int
lret
shlb
fisttpll
lods
into
pop
mov
sbb
jns
mov
xchg
fstps
xlat
shlb
data16
jge
jge
mov
aaa
insl
pop
inc
inc
xchg
push
push
and
and
fmuls
sahf
cli
popa
cltd
inc
and
loopne
jnp
and
lock
fidivrs
pop
loopne
pop
push
insl
push
inc
scas
cmpsb
xchg
lods
addr16
and
push
push
add
bound
add
and
cwtl
push
repz
ret
pop
jae
je
das
jne
or
in
stos
clc
jl
decb
inc
pushf
add
jle
icebp
push
sub
inc
sbb
and
icebp
movsl
ljmp
dec
jns
xchg
rorl
addr16
cmp
xor
dec
pop
mov
xor
shrl
arpl
arpl
rclb
ja
push
ljmp
out
aas
in
call
repnz
repnz
imul
outsl
cmp
fs
dec
xchg
stc
cmc
mov
sub
dec
and
das
jp
sub
test
das
xchg
mov
insl
in
or
cld
sbb
add
fdivp
icebp
sti
lds
repz
lock
push
mov
cltd
and
inc
rcll
in
pop
and
add
jmp
aam
ljmp
mov
les
dec
jnp
xchg
sbb
das
addr16
inc
lahf
mov
cmp
and
lock
or
sbb
imulb
push
mov
addr16
xchg
subb
push
xchg
icebp
lods
sbb
and
fisubl
imul
dec
leave
fildl
inc
je
aaa
push
out
movsl
arpl
xor
pop
mov
adc
enter
sub
mov
fucomp
mov
pop
inc
xchg
in
daa
pop
inc
push
pop
add
jbe
dec
xchg
dec
mov
pop
test
jmp
addl
pop
cmp
xchg
lock
lcall
xlat
mov
cmpsl
xor
cmpl
mov
inc
shll
cmp
adc
pop
xchg
adc
stc
and
nop
jmp
mov
loopne
or
lahf
xor
mov
test
sbb
jne
pop
push
clc
data16
xchg
mov
dec
scas
and
add
xor
out
bound
adc
inc
arpl
sbb
adc
pop
xchg
jnp
add
hlt
ljmp
mov
dec
idivl
cs
push
je
add
into
pop
sub
je
in
rclb
into
fcomps
les
dec
pop
dec
xchg
xchg
in
add
enter
daa
jne
popf
xchg
xor
and
lods
ja
rcr
je
scas
imul
add
cmp
andb
stc
imul
sar
and
add
lea
pop
push
cs
rcll
xor
sbb
je
in
adc
lea
push
clc
add
sar
test
popf
loop
ftst
mov
adc
lret
pushl
insl
push
and
addr16
imul
fs
fisttpll
xchg
lret
icebp
in
scas
mov
inc
mov
bound
ret
xchg
arpl
cld
push
insb
inc
adc
in
orb
jecxz
and
mov
adc
adc
xor
and
mov
lods
pop
sub
or
xor
jnp
int
push
iret
dec
push
mov
xchg
xchg
hlt
shlb
loopne
push
out
xchg
into
fldl2e
xchg
dec
sub
sub
sub
sub
mov
in
jmp
inc
push
stos
lds
in
pop
adc
xchg
xchg
mov
mov
sbb
sti
cwtl
mov
lods
xchg
ror
stos
inc
shr
sti
stos
add
pop
aas
test
inc
mov
orl
out
xchg
scas
mov
xchg
inc
dec
mov
fldenv
and
jge
sbb
and
jle
cmp
and
es
mov
sbb
movsb
xchg
xchg
shll
inc
xor
jge
adc
add
inc
sbb
or
idivl
stc
add
sbbb
jl
imul
mov
push
aam
js
int
cmp
repz
mull
sbb
adc
and
in
push
imul
push
mov
pop
hlt
add
or
inc
je
adc
jb
add
jno
xchg
xchg
sbb
scas
mov
movsb
adc
add
sti
dec
or
out
mov
ret
or
hlt
inc
nop
adc
xchg
xor
jns
sbb
aad
mov
pop
daa
cs
adcb
cmc
adcl
outsb
mov
popa
lds
jecxz
fs
push
jno
xor
sub
push
mov
mov
and
mov
xor
sub
ss
push
movsb
cs
out
jbe
sub
scas
inc
mov
iret
adc
push
xor
loop
cld
adc
mov
addr16
in
xor
xchg
cmp
ror
imul
aam
mov
imul
mov
in
mov
and
mov
rcrl
iret
es
inc
popl
lret
and
nop
dec
in
jnp
inc
mov
sbb
loope
push
fstl
push
bound
xchg
adc
clc
icebp
add
pushf
dec
repnz
repz
sub
jne
aaa
subb
fiaddl
push
lods
or
sub
push
testl
int3
xchg
adc
cld
sbb
mov
cmp
pop
lret
xchg
ret
jno
inc
xor
cwtl
js
jns
cs
pop
pop
sti
mov
push
xlat
mov
sbb
xor
pop
or
lahf
aaa
shlb
stc
fidivl
inc
jb
je
inc
jecxz
aam
push
fstpt
out
loopne
cmpsl
in
mov
add
movsb
ret
aad
pop
jmp
or
lea
js
push
imul
nop
leave
in
aas
bound
cltd
fcomps
cmp
dec
jl
insb
dec
cmp
adc
jnp
xchg
stos
mov
mov
add
jge
adc
movsb
mov
test
mov
xorl
rcrl
inc
scas
in
shlb
imul
add
add
js
rolb
les
test
add
mov
dec
cs
mov
test
cmpsl
leave
sbb
dec
sti
adc
dec
in
xchg
push
mov
pop
sub
iret
test
outsl
push
and
cmpsb
or
std
cwtl
rorb
daa
hlt
rcrl
test
mov
leave
data16
arpl
xor
rcrl
ret
out
jge
adc
addr16
addr16
in
stos
mov
ja
push
aaa
xchg
subb
es
dec
mov
aas
clc
roll
mov
imul
xchg
push
fiaddl
push
notl
nop
dec
lahf
js
jmp
xor
aad
testb
fildll
pop
jne
ljmp
push
pop
push
scas
cmp
out
jge
ret
push
or
testl
xchg
sbb
push
movl
xchg
cmpsl
mov
adc
and
mov
mov
push
ljmp
mov
les
jb
and
pop
and
ret
sub
or
push
cwtl
mov
add
cmpsl
mov
gs
mov
bnd
xor
scas
mov
dec
ja
mov
movsl
adc
aaa
cmp
not
mov
movsl
je
ret
nop
cwtl
fs
lock
or
mov
jno
mov
sbb
pop
gs
xchg
lods
call
shlb
lcall
sub
pop
mov
cmp
mov
jne
or
mov
ss
fildl
test
jg
inc
cmpsb
loopne
sub
push
loope
push
pop
nop
lods
sarb
or
xor
je
push
adc
xor
xlat
aam
aam
cmpsl
xor
pusha
pop
dec
mov
pop
jne
rclb
mov
lods
fistps
fdivr
dec
xor
xchg
or
bound
sahf
sbb
clc
out
in
sbb
or
sbb
and
push
mov
inc
add
cld
cmp
or
dec
and
or
push
jns
out
mov
add
lods
pop
cmp
jmp
pop
popa
or
push
nop
clc
adc
mov
data16
stos
imul
stc
mov
inc
lret
push
shl
cmp
pusha
mov
xchg
mov
jne
sbb
icebp
or
rcpps
push
inc
mov
cld
adc
fadd
push
rcl
mov
jns
inc
and
pop
sbb
int
negl
xor
add
cli
js
fsubrp
ljmp
data16
icebp
sub
iret
mull
jb
add
jne
push
or
xor
adc
mov
mov
repnz
ds
adc
clc
std
sub
pop
cmp
or
and
jno
mov
out
jmp
pushf
xor
nop
sti
cltd
mov
inc
clc
add
xchg
xchg
mov
ja
cli
inc
das
arpl
cmp
loop
jl
inc
lret
xor
xchg
and
sbb
push
repz
mov
pop
mov
mov
in
push
fimuls
xchg
xor
cmc
xor
stc
sub
mull
fnsave
jl
cmp
sub
stc
stc
out
xor
ss
imulb
pop
push
cmp
jo
test
dec
xchg
lock
les
mov
xorb
popf
ds
scas
pop
call
pusha
in
mov
mov
inc
dec
test
movsb
aam
in
or
mov
sbb
shll
lret
mov
push
push
call
popf
inc
or
std
int
and
xor
sti
and
jmp
mov
xchg
hlt
add
mov
adc
movsb
mov
push
popf
cmpsb
ss
add
adc
int
shll
mov
sbbb
adc
xor
imul
mov
mov
or
scas
jmp
jg
dec
adc
push
push
push
fs
stos
ret
cmp
fstl
sub
lds
dec
pop
rcll
sti
sbb
cmpsl
mov
call
imulb
mov
mov
sti
push
push
push
mov
ss
adc
cmpb
lahf
mov
mov
leave
push
jo
add
inc
xor
jo
stc
ret
loopne
push
pop
cmc
js
into
dec
insl
test
mov
mov
ss
sbb
dec
push
int3
aaa
cmpsb
out
mov
jecxz
sbb
mov
xchg
mov
and
xor
sub
into
les
sbbl
cmp
sbb
ss
leave
or
outsw
sub
mov
push
imul
sahf
das
mov
xchg
les
adc
adc
pop
ss
pop
jno
mov
cld
and
lds
jl
pop
cmp
push
imul
mov
imul
repnz
test
inc
iret
ffreep
sub
xchg
mov
fcomp
jecxz
xchg
sbb
ljmp
push
inc
and
and
push
andl
aaa
jbe
or
nop
jg
jnp
outsl
sub
mov
test
mov
pop
add
inc
jecxz
xor
xchg
nop
xchg
jmp
int
movb
scas
call
sbb
jg
dec
xor
jp
lret
sahf
lea
cmpsb
push
mov
outsb
and
or
jnp
mov
loope
lahf
dec
push
cmp
test
ficoml
jb
rcr
fs
xor
popa
sub
or
mov
aas
subb
add
pop
lea
gs
pop
je
iret
test
lret
shr
lret
scas
pop
or
xor
outsl
inc
mov
push
mov
and
sub
out
pop
sarb
scas
xor
fcmovb
dec
mov
ljmp
fidivrs
and
setns
enter
push
jp
sahf
adc
mov
lock
pop
push
cmp
clc
adc
rcrb
xchg
addr16
inc
xlat
loopne
les
out
sahf
cmp
mov
mov
or
test
push
xchg
or
fs
dec
rcrl
push
out
lods
add
xchg
sbb
mov
xor
mov
mov
cwtl
pop
daa
pop
push
clc
aaa
popa
pop
sti
mov
adc
mov
and
fsub
je
inc
xchg
dec
mov
jb
cld
add
cld
sbb
add
sbb
push
push
push
xchg
mov
pop
cmpsl
stos
dec
arpl
xor
jno
push
movsl
dec
cmp
add
push
mov
movb
test
dec
orb
lret
mov
and
fisttpl
xlat
shrl
lret
xorl
sub
int3
and
jmp
pop
enter
sbb
mov
mov
lock
bound
sub
adc
jbe
inc
push
popf
mov
ljmp
gs
mov
inc
sarl
sub
mov
in
adc
pop
sbb
imul
cmpsl
adcl
aam
ret
or
inc
xor
sub
cmp
inc
mov
push
fldcw
xorps
lock
push
pop
add
or
pop
sub
mov
js
dec
xchg
stos
testl
icebp
lret
mov
xchg
int
mov
mov
dec
xlat
aaa
push
subl
lods
loop
imul
pop
mov
ss
inc
inc
ja
push
cmp
fadds
xor
pop
int
out
add
dec
imul
mov
xchg
xchg
and
fwait
and
int
jae
test
mov
outsb
dec
lret
in
sbb
cmp
or
enter
jne
mov
adc
lret
xor
aaa
loope
xor
rcrl
outsl
and
mov
out
mov
in
sub
add
ljmp
xchg
in
lahf
cmp
dec
xor
mov
mov
out
aas
mov
fldt
mov
xchg
push
enter
inc
hlt
lds
mov
rcrl
jns
mov
fiaddl
loope
lret
in
cmp
faddl
sbb
lea
test
fwait
out
mov
aam
das
mov
addr16
enter
jp
inc
stos
inc
mov
in
jnp
mov
imul
jecxz
movsb
mov
inc
icebp
lods
in
sbb
or
cwtl
adc
into
adc
sub
add
mov
adc
aas
ljmp
into
addr16
pop
faddl
fsubl
dec
test
sbb
test
sbb
pop
jecxz
xchg
mov
mov
adcb
mov
push
popa
pop
and
cli
jge
adc
mov
mov
lcall
xor
test
xchg
ljmp
leave
jecxz
xchg
hlt
int3
and
mov
lods
or
xchg
sub
add
out
xchg
sahf
popl
out
jge
dec
movsb
mov
cmpsl
jne
pop
mov
loop
testl
pop
ljmp
and
cli
adc
add
adc
or
call
movsb
xchg
sbb
aad
mov
sbb
mov
xchg
es
or
mov
pop
cwtl
mov
call
mov
lea
mov
mov
pop
js
adc
mov
add
jge
repnz
mov
xchg
xchg
mov
imul
jl
inc
lret
sub
xchg
pop
sub
outsb
mov
dec
ret
jo
cld
ss
pushf
inc
pop
sub
and
jg
leave
cmp
mov
fstpt
push
fwait
or
mov
jnp
test
test
push
in
sbb
push
fcomps
inc
popa
int3
pusha
lcall
sub
scas
xor
cltd
andb
mov
insb
negl
add
pop
jno
push
loope
addr16
leave
popf
ljmp
pusha
rcr
jae
cmpsl
mov
sbb
cmc
jmp
xchg
fisubl
mov
inc
or
jbe
push
ffreep
dec
pop
ret
mov
xchg
gs
std
movsl
sbb
ret
lahf
mov
sub
push
repz
imul
jp
sub
adc
ret
mov
fcoms
icebp
aas
mov
and
insl
pop
ss
jmp
sub
or
pushf
jo
arpl
cmpsl
mov
or
mov
in
mov
scas
inc
clc
mov
es
sbb
stos
std
xchg
int
inc
cmp
std
jns
test
pop
imul
mov
mov
xlat
lcall
scas
outsb
add
fwait
jecxz
repz
add
repnz
push
pop
iret
and
and
push
mov
mov
ret
sarl
jp
mov
loope
les
xchg
xor
cmp
frstor
dec
jb
push
dec
fs
inc
test
jg
addl
lods
fcomps
dec
faddl
dec
lret
add
mov
mov
js
jb
outsl
inc
call
sbb
inc
xlat
inc
fwait
outsb
cs
xor
mov
iret
iret
mov
adc
mov
cwtl
rorl
and
and
int
stc
jl
pop
mov
inc
add
sub
sbb
imul
mov
jo
dec
lea
sbb
mov
push
sbb
or
push
mov
cmpsl
mov
jnp
bnd
push
lret
pop
adc
ljmp
rcrl
push
nop
or
lds
push
loop
dec
mov
ss
pop
mov
and
xor
xchg
dec
das
push
adc
addr16
and
inc
dec
adc
adc
out
arpl
jno
insl
push
jno
pushf
mov
data16
cmp
test
in
jne
into
sub
mov
pop
jbe
das
lock
mov
cmp
daa
xchg
dec
inc
jl
sub
or
lret
inc
jg
andl
cwtl
ret
pop
cli
ja
rol
inc
jns
psraw
adc
shll
mov
xchg
inc
sub
jno
inc
push
or
adc
and
pop
daa
xchg
and
jb
mov
dec
rolb
jb
pop
clc
aaa
in
lea
fmuls
pshufw
nop
jnp
jbe
xor
mov
fbld
les
mov
cmpsb
fsubs
pop
or
cmp
pusha
sbb
mov
test
mov
sbb
iret
ja
mov
cmc
and
cltd
cs
les
xchg
jne
mov
or
loopne
dec
cmp
leave
mov
inc
push
fistpl
xchg
gs
std
xor
inc
xchg
xchg
aaa
inc
inc
and
lcall
sbb
int3
jne
push
test
add
mov
sbb
loopne
lret
dec
mov
pop
jl
inc
lds
cmp
cld
push
addb
imul
or
lods
in
mov
lea
jl
out
sbb
dec
loope
lock
push
ds
sbb
inc
inc
lods
mov
mov
xor
loop
xor
fisttpl
xchg
dec
xor
sarl
popa
inc
or
lret
sub
jl
mov
adc
and
or
loopne
adc
loop
out
jae
popf
mov
icebp
or
jno
mov
fdivrl
loop
jb
cmp
inc
mov
scas
jge
jae
mov
ja
jle
xorb
mov
enter
call
in
test
add
fldcw
xor
sub
push
loop
push
cmpsl
xchg
popa
sbb
adc
aad
lock
add
adc
pop
jecxz
mov
inc
lods
add
fdivl
and
addl
sub
dec
fcoms
and
repz
sbb
sbb
dec
dec
inc
test
orl
divb
adcb
mov
loopne
mov
out
repz
pop
cmpsb
insb
and
es
stos
fcom
cs
stos
stos
lods
push
xor
hlt
sarl
sbb
popf
popf
pop
in
mov
pop
test
or
call
inc
adc
ds
jne
add
aam
sub
jge
mov
xorl
jmp
ljmp
std
push
xchg
in
add
push
push
mov
fadds
dec
cwtl
mov
dec
mov
fwait
pop
cmp
push
nop
cmc
fldenv
mov
pop
movsl
inc
imul
fiadds
lds
push
dec
dec
sub
iret
dec
mov
jmp
jp
icebp
inc
cld
and
pop
add
add
insb
cmp
test
aam
xor
push
fnsave
jbe
jle
movsb
mov
xor
mov
cmp
roll
and
scas
fsubl
and
stc
mov
add
loop
mov
cwtl
mov
mov
xchg
cltd
out
clc
pop
aas
inc
sbb
adc
sbb
cmp
adc
rcrb
roll
cltd
mov
mov
xor
loop
pop
adc
mov
incl
aaa
divb
mov
cmp
xor
mov
xor
pop
push
jb
rorb
insb
jge
int
cmovno
mov
adc
lahf
scas
and
pop
cmp
das
test
jbe
dec
xorl
adc
stc
mov
shlb
jae
cmp
inc
ficoml
pop
test
ja
not
bound
subb
pop
add
js
das
jecxz
pop
adc
rclb
sbb
xchg
into
repnz
xor
mov
and
cmpsb
mov
and
mov
or
or
scas
lds
lret
jecxz
mov
fists
lret
in
clc
jnp
pop
insb
fs
jae
mov
mov
decl
imul
arpl
into
mov
xor
out
int
lods
in
cmpsl
or
pop
push
sub
and
and
cmp
add
inc
jecxz
lea
mov
scas
push
rcr
mov
inc
add
test
sub
push
pop
cmp
mov
jne
iret
inc
xchg
push
mov
jecxz
test
lods
in
arpl
int3
dec
pop
push
push
pop
or
fdivr
int3
mov
and
dec
ret
mov
loope
fiaddl
pop
mov
hlt
mov
outsl
in
xchg
dec
cmp
icebp
xchg
test
lret
push
pop
and
sbb
xchg
outsl
mov
jne
xchg
jl
xchg
cmpsl
cli
xchg
out
call
outsb
push
sub
push
iret
aam
or
pop
sahf
lcall
pop
pop
add
inc
test
sub
loope
jns
jge
mov
pusha
in
add
dec
mov
mov
movsb
sbb
cmp
xchg
mov
mov
lret
jo
lret
sub
mov
mov
jno
loop
push
rcll
add
pop
push
sbb
cltd
notb
jle
je
mov
jae
mov
inc
jae
jo
add
int3
scas
mov
xchg
jp
enter
cmp
int
setp
fstl
ljmp
gs
fsubr
lods
mov
pushf
sub
xlat
dec
xchg
mov
mov
xor
mov
in
loope
fwait
mov
mov
inc
mov
imul
out
and
pop
into
cmp
dec
shl
mov
and
mov
stos
cmpsb
sahf
adc
fisubs
sub
add
adc
cld
bound
pusha
push
aam
in
loopne
dec
ret
lds
ja
adc
addr16
std
insb
or
lds
fwait
mov
push
jge
cltd
ss
jge
test
loope
scas
inc
sbb
iret
outsb
push
rcr
js
xchg
and
jo
lods
push
push
out
das
lods
jg
adcl
pushf
pop
xchg
es
pop
jmp
mov
fwait
xchg
jnp
cmp
mov
pop
rcll
bound
leave
fadd
arpl
push
mov
mov
cmp
mov
jne
repnz
xor
pop
in
cld
into
daa
pop
sub
push
mov
jbe
test
cmpsb
push
xlat
jne
fidivrs
mov
fsubs
fnstsw
mulb
pop
icebp
scas
pop
stos
les
nop
leave
aas
add
loop
sub
fadd
cwtl
sub
js
or
popa
xchg
mov
adc
xchg
inc
fsubr
jno
sti
mov
adc
rcrl
insl
lods
nop
out
xchg
arpl
mov
das
adc
shll
mov
cmp
mov
mov
imul
outsb
loopne
scas
jl
repnz
aas
rcrb
ja
in
mov
test
mov
jmp
sbb
jle
adc
pop
cmp
or
mov
mov
call
mov
aaa
ds
aad
into
mov
cwtl
adc
xchg
sbb
outsb
push
push
cmp
push
flds
fwait
push
les
pop
or
xor
pop
jo
ja
shll
pop
adc
mov
sub
inc
les
add
pushf
cmp
fisubrl
adc
mov
or
rclb
jb
sbb
popf
das
add
cli
mov
lea
mov
push
and
mov
add
shll
adc
outsl
mov
loop
or
mov
mov
jns
hlt
mov
shl
or
je
scas
jge
xor
jmp
jl
cmp
sub
lods
push
out
push
je
subb
mov
push
addl
cli
sbb
and
aam
inc
inc
aas
seta
imul
in
fisttpl
dec
std
xorl
test
pop
cmp
jl
inc
lret
iret
int3
popa
push
insl
fsubl
mov
mov
bound
int3
adc
outsb
movsl
loope
add
sarb
sub
shr
mov
dec
clc
addb
add
insb
cmp
pop
cmp
xchg
sub
addl
cmpb
movsl
std
mov
mov
iret
xor
iret
loope
ret
pop
addl
test
ds
lret
inc
mov
and
mov
pop
es
mov
inc
add
sub
mov
fisubs
popf
or
mov
dec
jnp
or
popa
call
xchg
push
out
stc
out
push
or
lahf
ss
mov
sub
dec
shrb
mov
jae
inc
leave
imul
push
xor
testl
out
xchg
and
lahf
test
out
pop
mov
arpl
xor
or
pop
mov
sbb
xchg
push
pop
mov
sbb
push
jmp
cmc
es
inc
movsl
loopne
scas
int3
cs
iret
jmp
sub
push
out
ljmp
icebp
add
mov
test
bound
push
lds
roll
sub
jbe
test
push
pop
cs
repz
lods
out
fst
mov
lret
not
gs
jbe
pop
dec
fdivl
push
or
mov
or
dec
xor
mov
jmp
lds
sbb
cmp
xor
popa
inc
cmp
xchg
pop
inc
int
das
lret
lret
out
pop
stos
lcall
ret
jle
cld
std
into
inc
fcoml
out
mov
incb
lcall
cmp
cli
adc
loop
int3
add
or
mov
jo
movsl
and
sbb
dec
pop
jnp
shll
daa
mov
enter
mov
mov
rcl
push
int3
ja
cmp
xchg
jmp
pop
cmp
add
adc
adc
xchg
pop
mov
sbb
addl
push
sahf
xchg
push
dec
fwait
adc
sbb
loope
sbb
adc
mov
mov
mov
popa
dec
repnz
mov
mov
xor
jnp
ret
cmp
mov
xchg
gs
or
outsb
psadbw
sub
cmc
or
sarb
pop
sub
cltd
adc
addr16
ja
push
mov
loope
jns
sbb
outsb
xchg
mov
and
cld
xchg
jecxz
xor
pop
ljmp
aam
add
cmp
shlb
out
dec
sahf
or
ds
inc
or
xor
mov
cld
jns
mov
pop
cmp
fxch
lret
mov
xorl
daa
iret
subb
adc
mov
lea
fdiv
aad
mov
push
inc
cmpsb
pop
sub
das
jae
imulb
test
adc
jle
jnp
clc
and
loop
pop
clc
cltd
mov
inc
insb
jns
sub
jge
mov
mov
xorl
fbld
mov
jnp
sub
loopne
lods
and
mov
in
or
xor
test
aaa
cmpsb
nopl
shll
inc
stos
sbb
dec
lock
fildl
pop
outsb
jns
fstpl
testl
jnp
add
add
adc
jl
xor
lret
jae
and
or
fcomps
and
cmp
adc
add
dec
sahf
sub
pushf
pminub
pop
mov
or
pop
lock
data16
enter
mull
dec
iret
fnstsw
push
mov
mov
mov
das
aaa
lods
xorb
and
dec
push
insl
xchg
sbb
rolb
sub
pop
jp
les
jp
mov
xchg
xchg
inc
push
aad
dec
cs
shrl
inc
inc
mov
sbb
daa
mov
xor
xchg
clc
cld
xchg
jbe
mov
mov
lcall
loope
jg
addr16
imul
mov
outsl
xorb
jmp
sbb
out
jmp
arpl
or
test
pop
mov
xor
repz
pop
int
insb
rclb
sbb
repz
cmp
hlt
rorb
sbb
in
push
xor
mov
cld
inc
or
inc
in
and
mov
mov
ds
cmp
jg
enter
mov
shlb
and
mov
ljmp
xchg
idivl
cmp
and
and
shll
cmpsl
cmp
sbb
sub
mov
sub
fsubs
fwait
inc
aad
xorb
mov
sub
mov
call
sub
int3
test
lds
adc
sarl
pop
dec
jno
xchg
enter
es
sbb
jmp
lea
fstpl
and
in
push
push
aas
cs
jae
jns
mov
sbb
mov
pop
movsl
test
mov
adc
push
mov
sbb
icebp
daa
mov
add
int3
and
or
loope
loop
dec
imul
mov
adc
clc
pop
fstpl
push
sub
fidivs
lods
sub
sbb
out
and
inc
jmp
pusha
test
jae
and
sbb
sbb
call
sahf
dec
orl
out
hlt
stc
out
jo
popf
push
xchg
pop
js
insl
je
jnp
xchg
mov
mov
sbb
icebp
push
mov
mov
out
mov
shlb
test
sbb
xor
call
ss
mov
andl
lret
mov
xor
out
xor
sbb
mov
xchg
pop
cmp
adc
mov
pop
cli
loop
pop
into
mov
jecxz
mov
fsub
rolb
or
aad
leave
mov
add
out
int3
and
gs
adc
out
push
mov
inc
push
daa
repz
dec
into
lea
mov
pop
std
push
out
sbbb
ss
dec
shrb
arpl
mov
pop
pminsw
xor
mov
cmp
push
rcll
adc
mov
push
inc
mov
insb
fstpl
popf
lods
add
pop
ljmp
popf
out
cltd
lahf
jecxz
pushf
cmp
cmc
pop
hlt
popf
pop
rcrb
dec
jg
addr16
pushf
mov
dec
scas
je
jl
mov
fwait
je
clc
hlt
fdivrl
cmc
mov
lea
sbb
mov
lret
gs
stos
and
pop
in
lds
mov
pop
loopne
and
nop
add
adc
pop
sbb
xchg
das
loop
lahf
nop
popa
outsl
mov
add
test
xchg
or
pop
lcall
dec
lahf
mov
outsb
inc
jbe
or
push
jg
push
scas
frstor
pop
movsb
and
inc
in
pushf
cmp
clc
dec
push
dec
and
mov
popf
in
stos
ror
jb
dec
in
out
push
cwtl
mov
repnz
loop
repz
xorl
jnp
popf
adc
repnz
xchg
pop
jb
adc
addl
cmpsb
gs
pop
pop
addr16
add
hlt
test
mov
stos
pop
mov
and
je
sub
lods
xor
dec
mov
push
ljmp
outsb
mov
mov
xor
out
pop
call
iret
mull
stos
aaa
add
not
rol
in
ret
xor
imul
jle
inc
rcll
imul
pop
xorps
sbb
cmp
rol
and
call
clc
in
lods
cmc
mov
aas
int
in
adc
clc
movsl
mov
roll
hlt
mov
or
fidivl
icebp
push
adc
lods
pop
sbb
dec
ret
sbb
test
decl
and
imul
push
stos
mov
stos
lahf
in
dec
sub
out
push
stos
sub
mov
mov
dec
pop
sbb
push
jp
test
jmp
jne
test
loope
in
lods
cmpl
and
inc
push
sub
out
lahf
cmp
in
mov
stc
pop
xchg
lods
imul
xor
ret
mov
out
pop
jl
mov
mov
mov
sub
popa
shll
sbb
push
sub
mov
cld
loopne
xchg
inc
add
and
shrl
add
or
jnp
ds
jb
out
pop
ret
jp
push
sub
pop
aam
mov
bound
fcmovnb
rcrb
sti
jae
cmp
nop
mov
xchg
jg
mov
dec
decl
inc
loop
xchg
pop
ja
push
sub
jne
pop
ss
movsl
mov
shl
aad
lret
add
repz
mov
imul
push
sub
aaa
jge
jmp
xchg
jae
dec
nop
pop
js
inc
add
addr16
add
mov
pusha
add
pushf
hlt
pop
push
xchg
sub
mull
pop
fwait
cmpsl
pop
sbb
push
mov
xchg
in
arpl
jl
aaa
jno
loop
lods
das
call
and
jb,pt
push
xchg
div
lock
dec
ret
fsubl
cmpsb
mov
fcomps
xor
jmp
lret
sbb
cs
and
mov
jle
cs
rcrb
ret
add
pop
pusha
push
xchg
or
inc
cmp
xor
or
jmp
mov
mov
inc
out
push
nop
into
lret
iret
lock
jno
out
mov
imul
push
push
dec
jns
mov
cwtl
jle
jge
stos
mov
and
adc
xchg
lret
inc
inc
and
lods
sub
fcomps
dec
into
push
and
sub
mov
push
cmc
push
nop
jne
repz
mov
pop
xchg
addr16
cmp
out
lock
mov
ljmp
fdivrs
ss
fwait
cli
mov
sub
mov
fildl
inc
popf
call
stc
sub
imul
inc
jge
shll
mov
scas
subl
push
nop
ret
push
and
lret
mov
out
add
fnstsw
dec
stc
mov
fsubrl
pop
rcrb
and
out
or
aaa
xor
sub
inc
xor
cmp
test
fnstsw
ret
loop
pop
dec
or
cmpsl
mov
push
sub
cmpsl
pop
loopne
arpl
bound
mov
xor
mov
bnd
outsl
mov
pop
dec
inc
cmpsl
pop
sub
cmp
fbstp
mov
mov
and
rcrl
jnp
das
fstps
mov
insl
pop
in
pop
push
push
xchg
dec
into
dec
sbb
or
xchg
sbb
pop
push
mov
rcrb
jbe
loop
pop
ss
push
xchg
outsl
push
loop
add
cmpsb
adc
mov
inc
push
jb
dec
sti
inc
fistl
fmulp
dec
sub
xor
jae
inc
or
das
or
not
mov
cmp
mov
out
or
lret
shl
rcr
sub
inc
push
lret
stos
sbbl
repz
xchg
jge
inc
int3
sub
sahf
and
into
ss
call
sbb
hlt
jnp
adc
mov
icebp
int3
pop
hlt
dec
pop
mov
and
cmpsb
mov
jl
fsubs
push
inc
sbb
add
mov
pop
xor
adc
jnp
or
scas
xchg
out
add
dec
ret
test
insb
mov
rcrl
test
cwtl
sbb
push
jle
shll
out
icebp
arpl
nop
jno
data16
aaa
pop
add
and
mov
adc
sub
push
or
mov
sub
mov
dec
lods
stc
scas
sub
push
fs
inc
sbb
mov
cmp
push
adc
stos
fwait
push
or
mov
xchg
pop
aas
jl
rcrl
jmp
or
or
jecxz
or
and
lret
push
xchg
das
std
ret
les
adc
xchg
mov
dec
addl
sbb
cmc
out
mov
adc
jge
add
sbb
and
dec
pop
jle
mov
out
jo
outsl
sarl
movsl
shl
jle
in
sbb
adc
mov
test
mov
cmp
loope
rcl
ljmp
imul
mov
push
shrb
stos
xchg
hlt
cmp
cmpsb
mov
ja
mov
adcl
aas
mov
mov
push
lods
push
dec
daa
je
jo
mov
mov
and
or
ljmp
push
push
popa
cwtl
add
std
push
mov
arpl
mov
out
mov
faddl
fs
cmp
in
cli
push
lock
int3
clc
push
add
cmp
ret
and
mov
lahf
xor
sbb
call
dec
movsl
sub
je
gs
fwait
test
into
jle
pusha
inc
push
sub
cmp
lea
int
lds
push
mov
lret
add
les
inc
mov
imul
xor
or
mov
xchg
out
scas
lods
push
push
xor
jo
lods
stos
aaa
jnp
sbb
and
xchg
fdivl
xor
xchg
jae
mov
repz
clc
mov
dec
enter
into
cli
icebp
cwtl
aaa
mov
imul
ja
mov
jno
jge
dec
mov
lods
pop
mov
jmp
popa
inc
dec
clc
push
addb
addr16
jle
std
bound
add
sbb
jnp
popa
push
sub
insl
mov
mov
or
inc
bound
adc
mov
cltd
loope
add
aaa
push
aad
in
or
cwtl
cmp
jbe
imul
xchg
fnstsw
popa
pop
stos
aad
daa
sub
loopne
les
fstl
movsl
sbb
outsb
mov
jg
ret
pop
arpl
push
call
shll
mov
cmpl
xchg
or
jmp
mov
rcr
ss
movsl
shrb
pop
fdivrl
movsb
push
out
pop
push
cltd
mov
pop
jge
mov
mov
pop
pushl
adc
hlt
call
mov
gs
je
push
ja
jg
lret
sti
test
mov
lea
add
aad
mov
and
inc
pusha
and
inc
mov
jle
rorb
dec
pop
pop
enter
or
call
mov
mov
call
aam
fs
and
mov
cltd
xchg
mov
jle
dec
mov
or
stos
jno
mov
mov
sbb
cmp
adc
mov
in
sbb
dec
push
and
sbb
outsb
inc
leave
in
clc
xor
dec
add
outsb
pop
jnp
aaa
repnz
jbe
pop
aad
gs
pop
test
dec
adc
mov
repz
aaa
cmpsl
xchg
dec
push
jmp
rclb
imul
cmpsb
lods
arpl
add
lds
mov
jno
hlt
mov
xor
or
cwtl
pop
icebp
jg
in
addb
fstp
divb
cmp
testl
mov
jg
test
repnz
mov
loopne
push
incl
mov
xchg
stc
loopne
lds
lods
jge
out
pushf
push
shrl
ljmp
repz
mov
sbb
cmp
cli
out
out
movsl
cs
sbb
mov
lods
fildl
leave
add
test
bound
je
rcrb
stos
mov
jbe
lea
sbb
push
aad
data16
mov
dec
fstl
je
xchg
mov
in
pop
push
cmpsb
xor
mov
xchg
jmp
adc
mov
sub
ljmp
stos
push
rol
mov
push
mov
inc
adc
add
loopne
wrmsr
cmp
cltd
enter
fcmovb
out
jae
lret
sbb
pop
in
mov
mov
insb
out
dec
cmpb
addr16
or
shrl
and
scas
sub
into
daa
mov
ds
sbb
js,pt
cld
mov
dec
push
ficompl
and
mov
rcll
mov
ja
cmpl
fistpl
xchg
mov
outsb
mov
mov
xor
stos
pop
sub
leave
dec
clc
and
add
cmc
jmp
int3
cmp
ljmp
jl
add
cltd
dec
clc
or
ja
xchg
ljmp
dec
scas
adc
hlt
add
cltd
loopne
pusha
xchg
and
ret
loopne
aaa
add
and
adc
xchg
in
or
and
bound
sub
sahf
adc
xchg
fsubs
cs
movsb
popa
aad
xor
ret
cmc
imul
clc
cmp
mov
pop
int3
or
mov
xchg
popf
mov
sub
add
mov
push
pop
xchg
stc
mov
inc
test
je
fiadds
cmp
push
sbb
pop
loop
orb
jge
mov
fwait
push
sub
mov
or
jo
lods
mov
mov
inc
aas
push
test
lods
or
and
inc
and
les
icebp
jbe
push
or
dec
shlb
js
and
xor
cmp
ljmp
jecxz
js
popf
push
push
stos
xchg
fsubl
add
mov
or
jge
fxch
sub
lcall
cmpsl
movsl
mov
inc
movsb
xor
sub
fwait
push
add
cmc
sbb
fs
xorb
mov
ret
or
and
pop
das
mov
mov
bnd
add
loop
movsl
push
push
nop
scas
clc
dec
pop
cmp
or
daa
xor
xchg
and
jmp
cltd
in
mov
shll
nop
adc
ljmp
clc
mov
sbb
jo
sub
xlat
sbb
aaa
pop
das
cmpsl
call
sbb
xor
mov
or
xor
ds
inc
push
aaa
push
and
pop
xchg
jg
arpl
insl
lret
cmp
loopne
aaa
int
adc
or
clc
pop
aas
cmp
add
addr16
xchg
and
insb
mov
adc
dec
mov
jbe
cmp
mov
mov
pushf
out
aas
or
lcall
gs
or
mov
pop
xchg
adc
adc
rcrl
lahf
popl
xchg
and
ret
cmpsb
push
push
shr
inc
scas
sub
imul
mov
sbb
jmp
ljmp
sub
stos
fwait
push
xchg
jbe
call
mov
inc
iret
aas
lods
cmp
push
mov
lret
fwait
inc
or
jmp
std
loopne
hlt
pop
fiadds
shlb
in
out
xchg
mov
lods
nop
inc
add
inc
pop
sub
adc
cmp
lret
mov
cmp
pop
jo
in
aas
pop
or
and
sarb
adc
dec
jg
push
leave
lods
mov
mov
xorl
fidivs
int
in
or
cmp
cmp
popf
les
push
mov
das
pop
inc
scas
les
push
mov
fs
and
std
sbb
jmp
adc
jmp
xchg
mov
insb
aad
pop
push
inc
push
insl
sbb
pop
mov
insb
jnp
cmpsl
mov
mov
push
push
dec
call
hlt
cmp
jecxz
pop
rorl
int3
jno
fildl
in
jl
popf
ret
pop
push
xor
loope
sub
cmpsl
jge
cmpsb
rcll
lcall
push
jae
xor
and
cmp
sbb
mulb
out
jno
in
inc
lods
stos
mov
das
aam
mov
mov
sub
xchg
aad
rcrb
adc
push
fnstsw
xor
jo
fistps
inc
out
mov
jp
repz
mov
shlb
jae
aad
addr16
mov
xchg
mov
addb
cmc
cmp
xor
sar
mov
mov
jmp
jg
nop
or
xchg
rcl
sarl
ret
pop
mov
and
insl
sub
fnstcw
mov
clc
stc
icebp
dec
stos
btsl
and
lea
shll
pop
push
jmp
push
mov
js
pop
lods
cmc
neg
popa
movsl
sarb
or
push
in
clc
das
mov
push
loopne
rclw
sbb
out
cmp
push
loop
add
and
call
adc
mov
push
scas
jp
or
ret
rclb
sbb
aam
xchg
ret
iret
fsub
mov
push
imul
test
xchg
dec
fisubl
sub
repnz
sub
lods
movsb
enter
cld
outsb
push
adc
in
push
cwtl
clc
add
roll
push
jmp
shll
insb
ljmp
xchg
ret
in
mov
inc
int
push
cmpsl
popf
or
jle
jg
mov
fsts
fwait
cld
sbb
lea
test
fsubrl
cmpsb
fwait
mov
lods
dec
lods
push
cmp
lahf
cltd
inc
bound
ret
mov
sub
xor
fwait
mov
inc
mov
adc
addr16
lock
fsubr
dec
jnp
idivb
outsb
rcrb
shr
mov
mov
sub
cmp
pop
aaa
test
lds
sbb
in
jg
add
lahf
mov
stos
jge
pop
jae
cli
push
push
and
add
mov
mov
cmp
mov
sarl
or
pop
lret
adc
ljmp
pop
inc
adcl
pop
add
loope
cmp
or
mov
xchg
jbe
cmp
inc
xchg
mov
iret
icebp
mov
repnz
aas
jo
gs
aaa
jno
inc
jns
lea
xchg
lock
test
in
cmp
cltd
call
inc
cmpsl
test
pop
scas
int3
pop
fisubrl
xor
and
fstl
add
jp
cs
xchg
test
jnp
cmpsl
adc
outsl
cmp
int
mov
mov
inc
add
or
push
jne
test
bound
mov
call
jecxz
lods
imull
ds
aaa
js
ljmp
inc
les
dec
lods
fwait
imul
in
mov
pop
es
inc
jmp
pop
imul
lcall
bound
lret
rolb
inc
sub
jb
repnz
into
loop
scas
jbe
inc
lret
add
pop
outsb
icebp
sahf
jle
fmulp
mov
and
mov
bound
out
or
xchg
clc
add
and
fmul
out
inc
add
inc
mov
lahf
aaa
insl
cld
fcompl
inc
mov
dec
mov
loope
push
fmull
fwait
push
mov
divl
dec
adc
out
aam
mov
dec
lret
push
sbb
jne
xchg
xchg
sub
in
mov
sbb
shll
fnstsw
test
roll
push
sub
repz
stc
push
call
xor
pop
cmpsb
ljmp
lods
int3
jnp
mov
mov
and
out
jmp
out
jno
dec
dec
ljmp
mov
xchg
imul
xchg
insl
out
test
leave
jmp
pusha
ret
sbb
jmp
push
test
sub
mov
mov
lock
pop
add
push
ljmp
in
mov
sbb
pop
push
push
xchg
xor
cmp
sbb
dec
jns
insl
sbb
lcall
stc
scas
mov
sahf
or
sahf
bound
aas
or
shl
sti
push
push
adcl
jg
loop
jle
mov
sub
or
mov
testb
jno
sbb
popa
xlat
fwait
mov
xchg
or
sub
pop
pop
les
jns
jno
stos
inc
jo
sub
mov
jecxz
cld
adc
outsb
or
inc
mov
cs
cmpsb
sti
cmp
jb
es
mov
lcall
add
inc
in
rcl
push
repnz
xchg
jmp
fldcw
mov
xchg
sbbl
icebp
pop
lret
in
mov
pop
aam
push
add
lret
jne
shrl
aam
dec
adc
loopne
adc
or
sti
es
mov
dec
jbe
out
imull
aas
insb
inc
dec
test
dec
mov
push
mov
hlt
call
inc
notl
sbb
push
xchg
dec
inc
pop
in
andb
xchg
jno
sub
sub
leave
test
cmp
ljmp
das
stos
jne
iret
fistpll
jnp
push
iret
aad
arpl
xchg
in
jne
imul
fcoml
bound
fwait
pop
imul
loopne
jns
or
add
pop
or
shll
push
in
nop
pop
in
scas
jb
flds
inc
fisttps
je
jbe
pop
clc
clc
mov
hlt
xchg
leave
xor
push
int
call
cmc
pop
xlat
add
cmp
xor
ljmp
jns
frstor
xbegin
sar
xchg
insb
adc
push
inc
xchg
add
dec
mov
mov
xchg
addb
test
inc
cwtd
push
imul
mov
jne
int
add
cmpl
mov
pop
ret
dec
or
fwait
xor
jb
pop
mov
lods
es
mov
dec
cmp
pop
imul
ljmp
repnz
push
push
and
faddl
and
inc
or
xor
mov
xor
xor
inc
jg
loope
xchg
data16
lcall
cmp
insb
inc
push
jnp
jmp
ret
cmp
and
jle
std
inc
push
xor
movsl
loope
adc
mov
sahf
sbb
push
rolb
dec
leave
sbbl
orb
add
int
sbb
mov
loopne
rclb
stos
sbb
outsl
add
inc
lock
push
bound
inc
les
int
test
fldcw
ret
imul
int3
push
fbld
cwtl
aas
xor
adc
pop
push
jo
lcall
mov
lcall
int
xchg
mov
mov
push
in
adc
xchg
lea
pop
lock
xor
rcrl
mov
push
aad
pop
cmp
sbb
push
add
add
mov
popf
inc
out
mov
push
andnps
std
inc
add
sub
pushf
xor
add
inc
scas
testb
icebp
cwtl
in
dec
cmp
nop
in
sub
dec
iret
js
lcall
into
popa
test
fisubrl
adc
xchg
aad
ljmp
sub
fimull
adc
std
fldenv
mov
jb
xor
sbbl
stos
lea
jle
cmp
dec
dec
mov
leave
cmp
cmpl
mov
pop
sbb
cmp
mov
fdivs
cwtl
sbb
mov
cmp
xor
cmc
dec
out
loope
lcall
pop
jne
out
push
js
in
xchg
and
push
aaa
movsb
lret
jnp
adc
mov
ljmp
stos
cs
jmp
outsl
adc
arpl
fbld
jle
aas
mov
stos
arpl
loopne
shrl
stos
or
sbb
sub
jge
inc
inc
push
addr16
les
in
jnp
ret
sbb
neg
mov
inc
push
pop
add
pop
or
xchg
pop
addl
pop
movsb
clc
or
inc
jns
ret
cmc
clc
icebp
ja
int3
test
mov
bound
shll
cltd
addr16
int
imul
and
inc
fwait
loopne
jle
inc
xchg
xchg
and
xchg
mov
lods
or
cltd
pop
movb
cmc
adc
outsb
adc
pop
dec
mov
sub
dec
pop
fwait
jns
jg
mov
aaa
fcmovnbe
aas
xor
imul
inc
inc
mov
and
mov
cmc
adc
cld
sar
push
movsl
mov
sub
outsl
repz
dec
xchg
loopne
test
mov
pop
je
cmp
cs
mov
cmp
jns
cmpsb
aam
lret
fidivl
and
pop
cmpl
push
pop
add
pop
inc
aas
pop
subb
roll
arpl
mov
test
leave
sti
rcl
sbbb
icebp
sub
mov
or
imul
mov
cmp
mov
mov
pop
cmp
rcll
pop
mov
ja
hlt
adc
and
xchg
xor
movsl
or
es
xchg
into
mov
xchg
push
sbb
pop
fldcw
sarl
adc
dec
aas
call
xor
pop
int
dec
pop
and
mov
push
push
stos
xchg
test
fisttpll
in
je
out
movsl
ds
add
and
jmp
pushf
lods
je
clc
cltd
mov
adc
mov
dec
loope
int3
mov
test
jge
mov
lret
xchg
xchg
mov
jl
icebp
jmp
push
sub
xor
fildll
sbb
bound
sub
pop
jge
pop
insb
stc
addb
insb
dec
fisubrl
xor
test
jns
jmp
icebp
add
dec
test
sti
ret
mov
mov
mov
shr
push
pop
sarb
stos
mov
cmp
mov
lahf
add
cmpsb
sbb
sbb
add
addb
push
icebp
add
or
loopne
mov
or
insb
push
or
or
jae
movsl
adc
aad
frstor
xchg
sbb
movsb
mov
aaa
fisttpll
cs
mov
fmull
mov
cmpsb
push
and
jb
inc
les
push
push
cwtl
test
sub
popf
in
lret
jns
cwtl
int3
loop
imul
inc
insl
sub
mov
dec
and
mov
lcall
movsb
jno
jnp
jae
jno
subl
add
in
ja
icebp
outsb
lret
and
mov
out
pop
mov
xchg
jnp
jo
testl
adc
push
sub
cmc
imul
popf
arpl
pop
fsubs
jno
mov
mov
pushf
imulb
cltd
jge
popa
cltd
jl
data16
or
xchg
lahf
xchg
pop
pop
cmc
mov
add
push
call
pushl
das
rcll
mov
push
repz
movsb
aas
xor
adc
and
jne
xchg
lcall
pop
push
fistl
jle
sti
sbb
mov
aaa
and
out
xor
insb
test
mov
out
adc
decl
cmp
insl
stos
in
fwait
es
cmp
mov
clc
sbb
sub
mov
adc
dec
mov
inc
and
ljmp
gs
test
lods
push
dec
outsb
popa
insb
and
and
daa
or
pusha
enter
ficompl
or
adc
iret
mov
mov
dec
lret
sti
jbe
orl
int
push
adc
inc
add
push
fsubp
xor
lods
push
in
imul
nop
xor
out
inc
sbb
and
outsl
pusha
push
mov
movsb
mov
std
jnp
and
inc
loop
push
inc
out
js
sbb
sbb
mov
cli
subl
inc
mov
lock
pop
xchg
xchg
sub
xor
pop
cmp
and
and
jne
adc
out
loope
loopne
push
faddl
rorl
pop
jl
out
mov
cmp
outsb
jmp
adc
or
leave
mov
jle
cmp
fidivs
cli
inc
stc
inc
push
das
cmp
pushf
xor
scas
fsubp
in
mov
adc
jmp
pop
dec
adc
int
sub
pop
andb
nop
pop
call
loop
in
pop
adc
in
iret
or
mov
sti
test
inc
imul
lcall
push
sbb
mov
cmpsb
mov
ja
pop
gs
push
pop
pop
mov
pop
fwait
roll
sub
popf
push
mov
pusha
cld
inc
adc
fwait
jbe
lahf
call
jmp
pop
adc
mov
xchg
sub
push
std
inc
testl
mov
xchg
insb
mov
aam
push
xor
sub
push
imul
xor
jb
mov
lock
es
inc
sbb
jl
jge
dec
subl
ss
aaa
out
cmp
sub
or
pop
and
hlt
xor
push
push
cwtl
cmp
add
idivl
mov
add
push
mov
mov
jb
mov
and
adc
xor
jne
test
pusha
imul
addr16
push
cmpsb
jecxz
inc
aam
mov
dec
xchg
inc
lds
and
imul
aam
cmpsl
ljmp
pop
sub
int
insb
xor
cmp
jne
movsb
out
push
jne
fisttps
add
dec
xor
fidivl
fnsave
and
icebp
cmpsl
push
jecxz
iret
dec
or
lods
push
gs
cld
and
jns
fisttps
loopne
inc
imul
mov
ljmp
popa
dec
daa
xchg
test
stc
orb
pop
fisttpl
dec
test
and
xchg
sbb
mov
add
test
stos
lods
jg
inc
daa
lcall
je
test
rclb
fisubs
inc
fs
mov
cmp
mov
dec
adc
sbb
fwait
or
dec
lea
bound
ret
dec
fwait
insb
push
mov
jmp
lods
adc
loopne
and
lret
jle
sahf
push
jo
mov
sub
jmp
aam
ljmp
movsl
test
scas
shr
mov
pushf
addr16
cld
fcomip
adc
adc
das
cmp
mov
xor
inc
dec
mov
cmp
jne
mov
inc
fisttps
pop
cmp
out
sarl
dec
ja
cmp
fstpl
pop
inc
mov
mov
stos
test
movsl
mov
inc
stos
lahf
sub
sarb
int3
in
jns
jno
push
dec
loope
aam
insb
push
push
sub
fs
adc
fsubl
xlat
sti
pushf
push
ss
cmpsb
sbb
xlat
mov
pop
shrl
inc
rolb
fsubl
and
dec
shrb
inc
test
in
and
mov
xor
daa
dec
stc
rcl
mov
imul
sub
movl
xor
or
roll
push
push
inc
sti
pop
imul
outsb
shrl
mov
mov
inc
stos
cmc
pop
sahf
je
fiadds
mov
cmp
xchg
xchg
xchg
aaa
cmp
push
roll
push
xchg
test
inc
gs
dec
mov
fwait
sti
fidivrs
aam
mov
ss
mov
sti
shrl
cmp
pmaddwd
xor
xchg
jbe
xchg
xor
sbb
jmp
mov
clc
and
cs
bound
mov
jl
xor
mov
notl
cmc
rcll
xlat
jmp
jno
lcall
mov
sub
sbb
aaa
shlb
icebp
or
push
adc
and
lcall
add
push
mov
test
div
sbb
and
xchg
dec
aam
push
and
leave
sbb
mov
mov
cmp
lock
movsb
fld
or
mov
jl
push
jecxz
cs
mov
fisubrs
stos
mov
dec
scas
fwait
loope
mov
sti
nop
dec
test
sarb
decl
push
pop
lret
cmpsb
mov
repz
jg
adcb
add
adc
shll
xchg
or
xor
lds
lcall
mov
mov
adc
into
or
addb
cmpsb
std
shlb
push
loop
sbb
adc
outsb
test
mov
jp
fmulp
es
data16
and
or
fisttps
outsl
jmp
lock
imul
ja
movsb
dec
lcall
cwtl
pop
imul
dec
add
adc
and
mov
das
ficomps
out
xchg
cltd
orl
adc
stc
or
mov
je
bound
or
xorl
push
mov
xchg
into
test
call
xor
add
das
cwtl
movsl
xor
cmp
jb
out
stc
pop
lahf
push
xor
arpl
push
pop
cmpsb
jae
dec
mov
jo
jne
rclb
jmp
insb
cld
inc
push
inc
xchg
int3
ja
hlt
pop
dec
mov
cmp
movsb
in
jmp
popf
sbb
inc
xchg
add
add
js
in
hlt
pushf
xor
jmp
mov
aaa
test
xchg
inc
or
add
or
dec
nop
int3
push
pandn
xor
and
dec
mov
out
jbe
jg
jb
lods
jo
vaddss
cmp
fadd
aam
rcll
push
loopne,pt
aaa
in
xchg
scas
outsb
xor
pop
movsl
ljmp
sub
lahf
or
js
call
bnd
es
jns
sub
mov
scas
lea
cli
xor
hlt
xor
dec
aas
fstpt
mov
dec
mov
xchg
iret
jbe
mov
or
add
outsb
pop
cmp
mov
dec
mov
addr16
outsb
in
add
fldenv
fbld
mov
movsb
dec
sbb
add
dec
mov
outsl
mov
pop
addr16
xlat
cld
pop
lods
cmp
into
insl
xor
pop
fmul
mov
enter
out
out
rorb
fcomip
sub
inc
sbb
pop
adc
notb
sbb
repz
xor
imulb
in
inc
adc
loopne
nop
ja
cmc
mov
lret
mov
gs
repz
jle
adc
xor
mov
sbb
in
mov
mov
data16
lret
lahf
fwait
sarb
repz
jge
imul
mov
pop
repz
pop
movl
xchg
lods
mov
aad
mov
lret
out
or
sahf
sbb
lea
mov
fnstsw
mov
mov
xor
data16
ljmp
cmpsl
sahf
jge
movsb
mov
sahf
or
lods
add
add
and
sub
and
ljmp
mov
or
mov
push
cmp
and
inc
scas
sbb
pop
pop
aas
std
mov
push
out
xchg
repz
inc
adc
jge
loopne
ss
or
icebp
inc
ja
mov
jle
xlat
popa
lock
testb
test
jnp
fstl
push
shlb
adc
js
lea
mov
adc
mov
arpl
lcall
les
dec
sub
imul
mov
js
aad
out
push
add
add
icebp
jae
mov
mov
popf
lret
insb
sub
sbb
jmp
test
pop
and
mov
pop
lret
in
stos
mov
scas
or
add
lea
mov
ja
xor
repnz
cwtl
test
mov
jno
adc
std
adc
xchg
or
jp
jae
xor
ja
and
adc
repnz
out
xchg
jmp
pop
je
test
and
push
jo
lock
sbb
and
fsubr
push
das
and
jmp
popa
aam
les
jg
sub
xchg
cmpsl
ja
mov
or
mov
dec
xor
jns
ficompl
adc
outsl
add
das
pushf
sub
mov
rcrl
adc
out
bound
dec
sets
xor
xor
outsl
lcall
aaa
mov
imul
outsb
ftst
xchg
adc
and
and
hlt
arpl
lods
je
fs
mov
cmp
rol
add
in
fidivl
outsl
dec
inc
or
in
or
leave
pop
scas
jp
pop
sbb
mul
pop
add
dec
cwtl
mov
mov
fs
cmp
jecxz
add
lcall
inc
rclb
or
mov
jl
out
jb
xlat
cmp
sub
pusha
xlat
xor
pushf
out
gs
xchg
or
lret
jno
add
xchg
inc
dec
mov
mov
and
xchg
pop
dec
addr16
add
test
data16
jbe
rcr
test
fcoms
stc
out
fwait
mov
adc
fwait
ret
xchg
inc
add
sbb
pusha
and
jne
insl
enter
pop
inc
cmp
sbb
sbbl
xchg
and
mov
adc
lea
insb
adc
sbb
inc
mov
nop
inc
sub
out
sub
mov
inc
adc
cmp
aad
cmp
into
and
cli
and
sub
sub
loop
lods
aaa
jns
loop
mov
inc
dec
sbb
stos
adc
pop
sti
std
mov
fcomps
mov
add
inc
scas
mov
jae
mov
sbbb
in
stos
sbb
sqrtps
push
or
and
gs
jp
jge
clc
imul
pop
cmpsb
insl
nop
ljmp
xor
fwait
int
mov
inc
cmpsl
push
decl
mov
cwtl
enter
insb
scas
mov
rolb
sbb
jo
sahf
push
dec
ret
out
adc
pop
out
xchg
lret
and
xchg
andb
xor
shlb
hlt
ja
cld
lods
in
mov
adc
inc
inc
ds
out
or
push
sub
popf
jl
ds
roll
lahf
popa
mov
xor
ja
mov
jno
and
jbe
mov
movsl
jnp
dec
cwtl
mov
push
mull
das
rcrb
loop
push
mov
out
mov
add
dec
xor
ret
scas
and
push
stos
jp
loope
sub
in
loop
ds
dec
test
out
sbb
jno
das
lea
insl
dec
outsl
add
insb
push
fistl
fs
xchg
add
pop
sbb
xchg
fldl
or
xor
xchg
adc
sbb
xor
cmp
out
subb
sbb
or
fld
lret
shll
dec
mov
std
sub
in
cmp
out
pushl
cli
scas
scas
adc
jae
ds
mov
dec
mov
jle
mov
sbb
xor
ret
fisubl
les
int
adc
cmpsl
jp
call
orl
dec
cmp
into
pop
sbb
outsl
dec
lea
pop
mov
stc
aad
in
lcall
xchg
cmp
cld
insb
and
mov
pop
insb
dec
pop
mov
cmp
xor
adc
ljmp
ret
out
pusha
sub
repz
int
and
xlat
cltd
imul
mov
gs
inc
jmp
push
leave
mov
int
mov
pop
xchg
jnp,pt
imul
pop
popf
nop
jp
push
and
call
test
shl
and
jno
vcvtss2si
mov
inc
out
jne
test
ja
iret
cmpsb
sbb
es
scas
insl
xor
pop
enter
mov
cli
mov
inc
jae
add
gs
sbbb
jnp
xchg
je
and
and
xchg
cmp
dec
xor
push
cmp
scas
das
mov
inc
nop
mov
js
cmp
pop
rclb
rcrl
push
push
fdivrs
ja
push
sbb
cwtl
ljmp
data16
jne
loopne
mov
cmc
sti
out
andb
sub
loopne
incb
scas
xchg
shll
push
inc
pop
fwait
mov
mov
mov
iret
aam
mov
lock
in
xor
loopne
sbb
sbb
dec
xor
loope
xor
mov
fcmovnb
or
mov
mov
rcl
add
push
data16
xor
xchg
jnp
sbb
jns
push
dec
shlb
ret
dec
ljmp
and
xor
jns
mov
push
xchg
and
mov
mov
pop
call
lock
adc
jg
mov
pop
inc
aas
dec
cmp
shll
xchg
lahf
int
xor
jmp
mov
aad
into
or
jno
ds
es
inc
shrb
sbb
adc
mov
mov
cmpsb
jbe
ret
pop
stc
fildll
cmp
testb
mov
stc
call
cmp
or
jbe
addr16
movsb
call
and
push
xor
mov
cmp
inc
pop
xchg
add
pushf
mov
xor
lock
imul
fisubrl
add
xchg
lahf
cli
stos
xor
adcl
pop
sub
pushf
je
ret
lcall
cmpsb
pusha
add
aaa
xor
fs
fldt
ss
fmuls
jns
push
inc
cli
add
sbb
fistps
adc
push
sub
sub
mov
mov
xchg
jmp
inc
sbb
pop
mov
inc
dec
xor
out
mov
pop
imul
and
dec
push
xor
ret
lahf
xchg
inc
adc
mov
inc
repnz
addr16
repnz
jmp
mov
push
dec
push
gs
pop
cmp
fdivs
out
test
pop
jb
or
js
push
ret
andb
inc
popf
sub
adc
out
dec
add
sbb
push
mov
inc
sub
cmp
cmpsl
mov
sbb
and
or
or
sahf
jbe
adc
testb
cmc
out
stos
pop
std
mov
stos
push
adc
sub
lock
out
in
xor
insl
push
insl
sbb
mov
push
aas
mov
mov
pop
add
xor
xchg
aas
inc
outsb
fstps
cli
fcmovbe
mov
lods
leave
das
inc
xchg
sub
cmc
inc
ja
cwtl
insl
xchg
in
test
outsb
mov
jmp
or
loopne
and
sbb
and
stos
add
mov
jle
imull
mov
pop
fimull
sbb
out
xchg
mov
cmpsl
insl
push
mov
bound
add
outsb
mov
jae
nop
cmp
das
sbb
lret
cmp
mov
pusha
dec
lock
cld
add
pop
repz
in
dec
jbe
orb
push
cmp
js
sahf
lods
sti
xchg
or
mov
mov
fisubrl
mov
ret
pop
aas
aad
add
push
into
mov
cltd
enter
std
in
cmpsl
or
push
leave
sbb
add
push
test
testl
cltd
out
inc
sar
jle
jg
rclb
push
adc
cltd
lock
adc
push
cmp
add
frstor
lods
je
cmp
loopne
js
push
lock
and
ja
or
ret
test
sub
xor
or
pop
add
aam
lret
adc
xchg
mov
ficoml
out
cmp
decb
inc
push
xchg
and
ss
fwait
add
popl
fildl
inc
xchg
cmp
gs
adc
or
or
hlt
ljmp
fdivr
stos
mov
andl
mov
mov
push
sbb
push
xchg
enter
out
ss
push
mov
mov
jge
cwtl
mov
xor
xchg
pop
mov
je
dec
repnz
insb
cmp
fnstenv
js
mov
push
sbb
adc
jmp
in
fimuls
inc
jg
rorl
repnz
popa
test
test
xchg
movsb
mov
paddw
imulb
or
pop
insl
mov
scas
ljmp
mov
cltd
mov
cmp
mov
sbb
push
add
negb
cwtl
xchg
dec
aaa
pop
lea
cmpsb
cmp
imul
pop
das
sub
call
sub
es
lods
out
js
popa
mov
arpl
imul
je
rorl
test
mov
insb
xchg
pusha
je
adc
ja
dec
xchg
leave
cmp
adc
stos
push
and
jno
testl
dec
pop
in
nop
into
ret
scas
add
sbb
loop
loopne
movsl
or
outsl
outsl
imul
mov
mov
push
jno
inc
dec
jmp
fnsave
insb
lods
cwtl
arpl
shll
mov
mov
adc
icebp
jbe
mov
pop
cmp
call
xchg
jmp
fmul
jmp
sub
cwtl
loop
jl
sbb
push
jbe
call
bound
and
mov
push
popa
int3
das
sti
add
stc
ljmp
ficompl
push
sahf
dec
pop
hlt
stos
std
push
mov
pop
test
inc
idiv
mov
mov
push
mov
xchg
imul
jns
mov
stos
mov
xchg
inc
jg
fsub
dec
push
cli
ja
xor
add
xor
mov
arpl
mov
ficoms
and
loope
add
imul
pop
pop
jmp
adc
push
mov
incl
cmpsb
mov
jbe
xchg
adc
add
mov
sub
xchg
aad
imul
jbe
leave
xchg
pop
mov
test
mov
pop
add
imul
pop
pop
dec
jmp
pusha
inc
and
cmc
inc
mov
push
inc
mov
insl
mov
lcall
jb
push
pop
and
lcall
cmp
mov
jge
dec
and
xchg
mov
sar
pop
mov
inc
sub
mov
inc
pop
cld
push
addr16
and
pop
outsl
ljmp
fisubl
pop
loopne
add
outsl
mov
scas
decl
sahf
idiv
les
mov
dec
xchg
insb
sub
dec
adcb
fcomp
add
sbb
mov
inc
leave
cmp
pop
in
or
leave
mov
jnp
dec
jl
cmp
push
stos
xchg
add
call
out
sar
xchg
add
stos
dec
mulb
insl
loopne
ret
stc
js
insl
data16
mov
int3
push
inc
xchg
test
ja
fwait
dec
out
jmp
xchg
sahf
inc
aaa
loope
movsl
popa
js
xor
cmpsb
adc
mov
pop
sub
push
or
push
or
or
sbb
jp
ds
inc
test
xchg
je
dec
repz
fld
mov
xor
ljmp
jo
push
pop
movsb
adc
adc
mov
aaa
ja
push
xchg
int
sbb
rcrb
sub
mov
stc
inc
and
test
in
push
xchg
inc
outsl
pop
sbb
push
adc
mov
fcmovnbe
or
int
fbld
fnstenv
adc
inc
insb
ja
and
dec
sub
lea
iret
outsb
jle
jo
and
mov
out
xlat
cltd
xor
pop
mov
cli
mov
roll
mov
rorl
pop
push
ja
sub
inc
out
iret
mov
daa
dec
pushf
lods
test
fisttpl
pushw
loope
jecxz
mov
xchg
mov
lods
push
int
inc
js
sbb
dec
lea
adc
mov
push
add
xor
rorl
iret
test
adc
inc
std
mov
inc
scas
out
test
fcmovnbe
rcll
sahf
sub
cld
add
sub
adc
or
insb
sar
sub
add
inc
xchg
popa
aam
test
add
pop
in
or
push
das
std
fcoml
mov
mov
xchg
ret
rcrl
push
aam
push
sub
mov
cltd
add
jl
push
xor
out
sbb
push
ret
int
cmc
push
add
mov
orl
add
scas
shrl
push
inc
jp
cmpsl
shl
and
cltd
in
repnz
fcomps
roll
outsl
xor
jle
xchg
hlt
out
pushf
or
pop
insl
dec
sbb
mov
data16
xchg
mov
aaa
stos
dec
aas
inc
pop
out
push
sahf
mov
push
mov
lea
cmpb
sub
xchg
mov
jno
mov
outsb
mov
leave
stc
dec
enter
mov
inc
call
push
movsb
pop
ret
fdivrs
aas
ja
fwait
insb
inc
ficompl
sbb
fnsave
or
pop
xchg
mov
lock
aad
adcl
loope
cmc
cmpsb
lahf
rcll
xor
xor
or
int3
push
add
ja
or
imul
call
push
mov
xor
sbb
addr16
cmp
jae
mov
pop
outsb
insl
loop
adc
std
orb
aad
mov
shlb
sbb
lcall
dec
in
sti
stos
add
je
mov
stos
fs
das
cwtl
adc
lcall
mov
xor
cmpsb
dec
push
sbbl
add
jnp
xchg
lret
fwait
cmp
je
push
loopne
xor
fsubrl
repnz
sub
sbb
in
xor
inc
leave
pop
cmpsb
hlt
xor
cs
mov
divl
fs
fdivs
dec
out
test
rcr
and
imul
adcl
dec
stos
dec
bound
sbb
repnz
add
and
sub
stos
mov
arpl
cltd
pop
and
jbe
mov
imul
into
cwtl
out
incl
decl
jno
subl
lret
faddl
inc
int
jmp
and
test
mov
xlat
test
fimull
and
aas
fisubrl
mov
or
shll
aam
aaa
jmp
mov
pop
lret
mov
sub
std
lahf
inc
mov
xchg
std
pop
data16
lahf
lds
negl
mov
pop
cmp
dec
adc
jge
jge,pt
bound
das
rorb
test
adc
test
mov
dec
adc
or
mov
mov
sbb
inc
jmp
jp
les
lods
aad
sbb
mov
out
sti
xor
repnz
in
xor
fs
ret
push
pop
jbe
es
jmp
cmpsl
data16
scas
stc
dec
daa
xchg
cli
aaa
push
mov
push
or
fmuls
outsb
cli
out
mov
das
push
dec
pop
push
cli
lock
add
loop
imul
repz
repz
fs
jns
je
test
mov
or
inc
or
je
ret
xchg
movsl
sbb
jo
jb
mov
ljmp
out
neg
sarl
jmp
outsb
loopne
add
in
in
push
call
fbld
xchg
xlat
outsl
jne
int3
scas
sbb
fdivs
push
mov
sub
outsb
or
daa
nop
mov
push
repnz
cmp
push
mov
addr16
jecxz
push
jmp
in
jae
sbbl
shll
xor
dec
inc
pop
add
fcmovu
mov
in
jge
dec
mov
popa
mov
push
mov
ss
loop
inc
xchg
jl
ror
cmpsb
cli
cld
fcmovnb
xchg
pop
ds
add
mov
daa
inc
mov
lahf
lahf
add
push
push
pop
jg
mov
jbe
lock
jle
daa
or
jb
and
lock
frstor
xor
xchg
shll
jecxz
mov
loopne
cmp
jecxz
insl
mov
jnp
jae
loop
sub
mov
jp
repz
fmulp
mov
shrb
out
cmp
es
int3
inc
addr16
and
dec
jb
sbb
push
jns
imull
jmp
mov
xchg
pop
dec
sbb
pcmpgtb
in
rcrl
dec
int3
dec
ret
fcmovnbe
or
pop
pop
into
cmpsl
xor
pop
ss
je
sarb
sarl
add
add
jbe
add
out
xchg
xchg
jmp
mov
jne,pt
lods
pop
ret
or
shl
adc
in
adc
and
inc
dec
loop
adc
mov
shrb
add
test
sub
shll
pop
push
sti
jecxz
in
or
dec
sbb
adc
inc
lods
push
cmp
lret
mov
and
dec
xchg
ja
sahf
xor
lcall
in
mov
pop
xchg
addr16
nop
dec
push
jg
sbb
cmc
leave
je
adc
xor
mov
sbbb
stos
inc
loopne
or
xchg
push
in
push
nop
pop
mov
pop
jne
jne
pushf
fs
les
insb
cmp
dec
rcll
movsl
jl
cmp
scas
sbb
pop
les
sbb
push
pusha
shld
pop
ljmp
call
pop
out
jecxz
sub
or
push
test
sub
movsb
inc
into
push
inc
xchg
dec
es
mov
dec
push
hlt
stos
test
std
push
imul
jb
addr16
aam
sub
shrb
jl
jecxz
lret
or
jmp
dec
fimull
xor
popa
cmp
cltd
in
ret
mov
mov
and
out
mov
mov
fimuls
xchg
pop
push
lret
pop
addr16
or
xor
mov
pushf
push
loop
lcall
test
dec
popf
sub
outsl
or
push
jecxz
adc
sub
leave
adc
add
lods
inc
jnp
xor
ss
sub
push
lahf
cltd
push
gs
shrb
cmpl
gs
imul
mov
push
jle
or
fsts
lcall
js
lret
imulb
jae
xor
fsubl
lcall
or
out
jl
test
xchg
bound
jl
cmp
push
pop
pop
insb
sub
sub
cli
jg
push
sbb
fisubrs
mov
lds
addr16
push
pop
inc
emms
dec
outsl
sahf
ds
js
dec
push
in
mov
sarb
stc
dec
ds
dec
mov
sbb
out
push
inc
jne
fstpt
lret
sub
data16
adc
add
into
rcrl
negb
bound
pop
fcompl
or
sahf
mov
jle
add
cmp
mov
std
dec
sub
icebp
lea
shll
push
push
incl
jns
imul
movd
xchg
sahf
adc
dec
jno,pn
sub
add
mov
mov
test
sti
ret
shl
imul
push
test
scas
aad
cmpsl
movsl
mov
test
pop
nop
adc
mov
lods
mov
stos
dec
out
aam
inc
xor
jne
jne
test
insl
arpl
mov
and
and
repz
lock
xor
das
cmp
and
fiaddl
pop
mov
or
jp
jo
xchg
aas
xor
addb
push
mov
push
in
pop
cmp
dec
shr
shlb
pop
push
es
test
int3
mov
or
test
lods
and
push
es
dec
jno
imul
jle
setp
testb
fisubl
call
mov
pusha
aaa
add
xchg
js
xor
adc
dec
or
jns
movsb
fnstenv
fs
int3
sub
ficoms
sbb
in
loope
pop
xchg
jae
or
inc
cmpsl
sahf
cmp
popf
enter
out
push
xchg
fdivs
imul
popa
shrl
mov
adc
hlt
cmp
xor
sub
lahf
imul
xchg
pop
dec
sbb
adc
mov
pop
pop
adc
repnz
sbb
nop
push
imul
ljmp
cs
push
pushf
hlt
std
sub
js
in
xor
ljmp
mov
or
pop
jp
sbb
cs
aaa
push
or
or
sahf
hlt
repz
dec
clc
xchg
xchg
dec
cli
cmpsb
adc
aam
dec
xor
cli
fisttpl
jge
rorl
sub
push
mov
mov
stos
or
add
and
sub
dec
addb
mov
add
loope
scas
and
cmpl
cltd
xchg
fisttpll
dec
inc
nop
cs
fidivl
mov
popf
sahf
push
lods
cmp
stos
adc
insl
pop
mov
xorl
pinsrw
stos
cld
pop
ljmp
loop
and
sahf
out
inc
movsl
jp
andl
out
loopne
jno
dec
aas
mov
mov
lods
and
xor
xlat
insb
dec
and
lods
lock
push
cmpsl
je
jo
test
mov
fadds
repz
inc
rolb
dec
enter
loop
xrelease
sbb
and
mov
jbe
mov
sbb
es
cmpsl
inc
out
sahf
sar
mov
scas
ja
jmp
sahf
xor
mov
cs
sub
aaa
inc
jns
jbe
inc
enter
cld
in
inc
imul
push
mov
mov
mov
incb
movsl
pop
lods
and
call
and
mov
ljmp
dec
int
pop
adc
pop
inc
xor
or
add
xor
stos
dec
or
popa
leave
mov
dec
testb
pop
hlt
pop
andb
dec
adc
dec
and
mov
cs
push
mov
lret
movsb
mov
test
jns
pop
push
int
adc
push
test
scas
lcall
stc
nop
mov
xlat
pop
sbb
out
mov
mov
stos
cmp
fs
es
imul
fwait
push
ljmp
xor
xor
imul
jmp
inc
jg
and
addr16
xchg
popf
ret
jb
and
xor
imul
sub
jb
stos
rol
loopne
icebp
mov
test
shlb
sbbl
cs
outsl
jl
ljmp
push
inc
push
repz
sbb
test
cmc
pop
test
das
push
scas
mov
dec
fnstsw
pop
loope
add
or
cmpsb
stos
rcrl
jg
call
pop
pushl
xor
enter
sub
jae
movsb
lret
rcr
int
push
mov
sbb
and
imul
dec
dec
icebp
and
test
cmp
and
or
scas
jge
adc
mov
dec
insl
roll
dec
jno
sub
loop
loopne
fldcw
pop
cltd
push
xchg
mov
mov
into
dec
pop
adcl
sahf
mov
mov
arpl
out
jns
cltd
into
adc
stos
ss
xor
xchg
and
cli
ds
push
in
test
add
ja
rorb
fwait
adc
add
fimuls
andb
inc
xchg
push
sti
enter
mov
dec
dec
and
pop
add
cmp
push
test
addb
lods
sbb
add
mov
lea
dec
push
popa
loopne
loope
lcall
subb
daa
mov
aad
xchg
scas
arpl
and
push
icebp
in
cltd
shlb
push
mov
mov
push
or
aaa
cmp
sbb
and
or
cmc
cmpl
mov
xor
sub
mov
mov
xchg
push
movsl
int3
imul
inc
cmpsl
cmpsl
push
mov
loope
das
shlb
jns
sbb
inc
mov
xchg
sar
jne
adc
xchg
inc
mov
mov
lahf
stc
or
fsubrl
xlat
jns
in
ja
inc
aad
movsb
ficoms
repnz
std
sahf
jns
icebp
mov
ds
mov
sahf
stos
clc
popf
cmp
lock
mov
xchg
cmc
push
stc
mov
push
xor
fcmovne
imul
in
jne
cli
das
fisubrs
jge
int3
or
addl
mov
jecxz
jecxz
popf
inc
clc
jo
mov
incl
leave
stos
call
adcb
gs
ss
pop
cwtl
xor
xchg
gs
enter
cmp
jge
jg
push
in
pop
mov
xchg
inc
mov
into
hlt
out
pop
lods
out
sbb
enter
mov
or
hlt
jecxz
icebp
call
cmp
scas
and
inc
xchg
mov
bound
mov
xor
aaa
test
inc
in
or
jle
cmpsl
addr16
imul
and
fimull
in
ja
mov
in
in
inc
fldt
sub
add
ret
or
call
jbe
dec
mov
xor
mov
pop
adc
hlt
rorl
dec
lea
push
das
sbb
lahf
je
push
mov
and
cmp
gs
es
xchg
loop
push
cld
scas
fstl
jge
shll
fwait
cmp
push
inc
add
xchg
push
sti
outsl
imul
dec
std
icebp
sbbl
dec
out
nop
test
or
mov
cmc
stos
pop
cld
out
or
and
sub
mov
inc
cmpsb
ret
adc
jmp
or
movntps
cmp
dec
ds
imul
jbe
sahf
lea
add
fldt
push
lret
aas
dec
jp
mov
mov
xchg
cmp
sub
pop
push
rclb
sub
and
insb
add
dec
rcll
movsl
mov
andb
cwtl
movsb
aam
xor
cltd
dec
dec
rcrb
popf
iret
sbb
jo
mov
add
mov
pop
out
arpl
idivl
sub
dec
std
xorl
cmpsb
push
outsl
sar
in
dec
push
sub
mov
sahf
lods
push
mov
and
add
icebp
mov
or
cmp
movsl
scas
scas
fisubl
mov
movsb
mov
jl
xor
lahf
add
lea
mov
sbbl
push
nop
stos
mov
movb
hlt
cltd
insl
sti
aam
pop
sbb
mov
cmpsl
fisubl
dec
jmp
ljmp
fnstenv
cli
jl
out
mov
push
xor
xchg
imul
daa
test
hlt
dec
xchg
in
xor
arpl
sahf
xor
xor
cmpsb
push
aaa
outsb
inc
xor
loope
pushf
push
pop
dec
addr16
or
aad
mov
imul
mov
cltd
mov
xchg
fwait
add
enter
ja
rcll
je
fwait
inc
inc
push
test
cmc
jp
es
add
jne
mov
out
sub
testb
cmp
cmpsb
movsb
sub
out
push
clc
in
into
scas
out
pop
and
mov
sbb
ror
arpl
jge
mov
jp
enter
ror
jp
jbe
das
mov
sub
jb
lods
js
or
mov
or
push
mov
loope
add
and
pusha
jl
cmpsb
mov
xchg
inc
arpl
cld
jecxz
mov
xor
cltd
enter
cli
sub
sbb
sub
add
ja
out
sbb
cltd
push
inc
stos
adc
aam
pop
jecxz
xchg
jo
test
xchg
nop
jg
adcb
loop
add
mov
xor
dec
pop
cld
ja
jns
inc
mov
sbb
orb
dec
dec
xor
popa
mov
adc
fsts
cmc
je
insb
jl
jnp
aaa
add
cs
xor
fmul
loopne
rcrb
testb
add
cmpsb
aaa
and
xchg
leave
ret
test
mov
mov
loopne
ljmp
lcall
mov
idivb
imul
aam
dec
ja
adc
jge
daa
adc
shrl
movsb
sbb
pop
sbb
movl
ret
ret
shl
test
insl
mov
xchg
testl
and
lock
mov
lods
shlb
jmp
lds
mov
popa
dec
or
adc
adc
clc
add
pop
dec
mov
sub
cwtl
es
or
and
stos
dec
je
push
mov
add
dec
jae
inc
cltd
orb
pop
inc
addr16
cmp
cwtl
dec
jno
aaa
addr16
push
lock
out
mov
xor
ja
xchg
xor
xchg
inc
stos
jo
cmc
mov
sbb
mov
adc
xor
outsl
orb
sahf
out
out
pop
mov
lcall
jl
sub
aad
push
mov
cmp
lret
xchg
add
jl
popf
adc
ja
jl
xchg
int3
je
xor
push
pop
and
jecxz
test
mov
pop
jge
std
mov
fs
xchg
cmp
lret
sti
push
test
inc
shl
fstpt
jb
mov
test
inc
xor
dec
in
nop
in
push
ud1
int
stos
sub
shlb
xorl
sarb
pop
sub
mov
outsb
fcmovu
xchg
push
rcll
push
adc
pop
mov
dec
ret
cld
in
repz
lret
sub
sbb
int3
out
inc
loop
push
fdivp
dec
test
out
aas
xorl
pusha
and
pop
push
xchg
and
enter
sub
out
cmpsl
dec
cmpsl
xchg
daa
das
mov
test
out
pop
in
mov
adc
iret
mov
xor
dec
lock
cmp
mov
adc
pop
inc
repnz
mov
rcll
cmpl
sbb
fisttps
loope
and
push
jo
ljmp
hlt
dec
divl
and
xor
movsl
jae
cli
cmp
adc
fstpl
add
xchg
cltd
jne
lds
int
subb
insb
mov
cltd
adc
dec
cmp
jge
add
push
ss
mov
lods
xchg
push
je
push
cmp
mov
pop
leave
in
es
mov
repz
mov
mov
gs
lods
inc
push
sbb
cmp
mov
add
add
push
rorl
cli
mov
push
push
call
jle
and
cli
inc
sub
mov
or
or
dec
xor
or
pop
and
add
shlb
add
imul
popa
wrmsr
jns
dec
cwtl
xchg
mov
adc
pop
inc
ljmp
or
and
subps
pop
aam
popa
mov
mov
sub
nop
push
stc
mov
cwtl
stos
sbb
jp
je
mov
mov
cmpsl
xor
int3
inc
outsl
in
inc
sub
pop
rorl
insl
mov
movsl
mov
test
arpl
andl
adc
cmp
sahf
ret
scas
add
mov
scas
inc
add
mov
shlb
sbb
cmpsl
jo
cli
pop
xor
rcrl
push
xchg
lcall
adc
aam
imul
mov
fcoms
sti
cmp
push
sub
repz
jg
pop
xlat
cmp
push
test
xchg
xchg
pop
pusha
pinsrw
cmp
clc
mov
lock
mov
jl
imul
or
pop
shlb
imul
out
push
xor
pop
push
dec
out
or
jmp
cmp
ss
int
divb
mov
mov
jecxz
int
xchg
pop
sbb
xchg
fdivrs
jg
fisubl
lcall
cmpsb
jl
das
xor
addb
pusha
inc
js
icebp
subb
adc
inc
dec
mov
shrl
push
addl
dec
aas
adc
fs
in
pop
and
add
and
ds
test
lods
cmp
add
ja
insl
adc
inc
outsb
jne
push
rcrb
push
repnz
fmulp
and
push
add
hlt
xor
popf
jg
push
jg
push
mov
sbb
jne
test
outsb
sub
lock
mov
scas
mov
jmp
imul
xor
pop
mov
jle
pop
lret
mov
std
scas
pop
sub
jbe
adc
mov
jb
bound
lret
jmp
sbb
jmp
xor
bound
jbe
or
movsb
shlb
lahf
pop
outsb
inc
jnp
rorl
inc
sbb
sbb
cwtl
push
imul
or
mov
sub
pushl
mov
inc
insl
add
or
pop
mov
cli
xor
in
push
xlat
mov
jae
shlb
cmpsb
xchg
xor
loope
arpl
pop
dec
inc
gs
xchg
pop
lea
cmpsl
fdivr
inc
pusha
adc
xchg
mov
out
jp
loope
mov
push
push
cli
cmpsl
daa
and
xchg
sub
cli
cmpsb
sbb
xchg
sbb
mov
je
repz
adc
pop
sub
mov
testl
out
jecxz
mov
and
cmp
negl
cltd
js
fcoml
pushf
fimull
rorb
fs
shrb
cwtl
notl
dec
mov
into
xchg
xor
push
sbb
out
pop
lcall
subb
xorl
imul
xor
fwait
mov
mov
cmpsl
mov
cld
inc
dec
dec
out
push
jae
mov
cwtl
adc
and
punpcklwd
adc
data16
cwtl
adc
xchg
mov
sbb
pop
xchg
mov
lock
fcoms
clc
nop
inc
mov
lret
iret
es
jae
jecxz
jno
out
jle
js
test
dec
lods
js
sbb
jns
jne
jo
mov
mov
jp
xchg
dec
and
jns
mov
push
or
bound
cmpsb
push
pop
stos
xlat
adc
decb
ja
xchg
jae
insl
and
jl
pop
ljmp
push
mov
ljmp
mov
sbb
inc
sub
push
xchg
and
cld
dec
test
sbb
jo
xchg
mov
add
dec
iret
push
lods
mov
xor
insl
repnz
pushf
enter
stc
adc
insb
xor
frstor
ss
iret
add
aam
sub
or
dec
in
mov
or
insl
ss
out
mov
jge
mov
adc
mov
shlb
dec
hlt
rcr
sub
les
bound
ror
sti
popf
leave
adc
lahf
and
xorb
lcall
mov
xchg
add
negb
mov
lock
or
sub
jg
rcrb
jno
and
fcoml
das
jg
sbb
pushf
xor
movsl
jno
daa
add
daa
shll
rep
stos
dec
negl
sarl
push
xchg
into
jns
jmp
loope
ret
mov
cmp
movsb
sbb
iret
dec
fidivrs
aas
cld
mov
jl
lods
mov
mov
jg
push
mov
mov
push
jle
and
inc
jl
imul
mov
add
enter
sub
inc
jmp
pusha
test
mov
dec
fucomp
pushl
mov
jmp
pop
mov
add
in
push
pop
inc
lds
sbbb
lds
push
and
jae
lods
and
ss
and
or
leave
es
jge
loope
fadds
cmpsl
push
mov
mov
push
sahf
fisubrs
enter
insb
cld
inc
insl
in
into
pop
push
data16
addb
sbbb
mov
lahf
dec
cmp
fidivl
dec
in
aam
addr16
sbb
adc
sbb
cmp
and
jnp
pop
pop
adc
sbb
dec
shll
notb
fiaddl
outsl
adc
jne
outsb
dec
ret
cld
mov
sbb
xchg
outsb
fs
ret
add
nop
or
jmp
lret
xchg
in
sar
scas
ror
push
xor
inc
push
sbb
test
movsb
aam
fnstsw
inc
jbe
jecxz
adc
cld
adc
ret
xchg
out
inc
sub
mov
out
jle
fwait
popa
out
testl
dec
dec
scas
and
mov
mov
pop
daa
mov
insb
outsl
cmc
iret
pusha
xlat
fdivs
pushl
cmp
sbb
es
ret
jno
adc
out
push
mov
adc
mov
loopne
mov
dec
loopne
in
push
sbb
stos
in
push
in
sub
xor
push
xchg
mov
aad
lods
mov
inc
std
xchg
jno
iret
and
icebp
sahf
cmp
jns
jno
mov
out
jmp
mov
icebp
adc
cwtl
test
sub
push
cmp
out
push
jno
lods
mov
xchg
js
in
xorl
jecxz
lahf
lds
hlt
lea
fmuls
and
pop
bound
jbe
adc
pop
imul
push
xorps
shlb
lock
ljmp
adc
xchg
jne
xchg
mov
int3
gs
push
loopne
lret
or
fstl
push
jnp
mov
pop
hlt
jno
sbb
push
mov
nop
les
fchs
cli
adcl
push
stc
dec
fwait
dec
and
repz
hlt
cld
mov
aaa
movsb
dec
test
xchg
pop
rclb
outsb
popf
cmpsl
cltd
lahf
mov
mov
lret
push
test
je
stos
sahf
xor
fadds
mov
push
adc
out
ljmp
gs
negl
or
ljmp
cltd
ret
and
dec
push
adc
sub
xchg
xor
sub
call
push
mov
xor
push
sub
in
xor
pop
dec
scas
aaa
or
xlat
out
pop
mov
mov
inc
jae
or
push
into
ja
push
loopne
jo
lahf
daa
movsl
jl
jge
jmp
xchg
lcall
mov
fsts
and
inc
cmpsl
pop
adc
inc
dec
insl
cmp
ret
in
mov
inc
sub
sub
out
outsl
fstpt
xchg
pop
push
lret
mov
mov
sbb
mov
outsl
push
lods
cmp
inc
frstor
sub
imul
stc
xor
push
push
in
pop
int3
mov
xchg
scas
les
insb
test
cmp
mov
mov
faddp
icebp
dec
int3
xor
incl
jecxz
add
gs
aas
jg
filds
mov
mov
mov
cmc
pop
les
cmc
push
xchg
aam
jb
es
dec
dec
daa
sbbl
lahf
in
push
lea
push
stos
and
cld
out
and
mov
mov
int3
mov
stc
idiv
xor
push
lcall
mov
mov
aam
fidivl
repnz
das
imul
fstpt
addr16
lods
roll
cmp
lock
inc
in
sub
xor
mov
pop
repnz
int
dec
jg
add
pusha
adc
gs
jecxz
dec
mov
int3
lcall
leave
sub
outsb
jle
cld
add
int
mov
nop
sbb
push
fstl
jbe
clc
addr16
or
cmp
jns
mov
je
pop
inc
pop
in
sbb
mov
adc
sbb
sub
cmpsl
aam
sub
loopne
sbbl
add
daa
aad
incl
in
dec
mov
cmpsb
xor
ljmp
pop
sbb
xchg
jmp
mov
sbb
and
dec
dec
lret
adc
ret
insb
pop
push
fisubrs
out
inc
add
pop
shll
leave
jo
jno
adc
movsb
imul
stc
addr16
add
sbb
daa
mov
add
xor
jge
pop
jbe
mov
lock
add
and
or
rclb
xor
in
jae
mov
or
mov
imul
cmp
cmp
dec
push
lods
xchg
icebp
adc
addr16
push
clc
aas
out
mov
aas
xor
outsb
cmp
xchg
push
jbe
adc
test
and
xchg
jne
xor
and
ret
daa
out
lea
popf
pop
je
leave
mov
lahf
dec
int
inc
mov
shll
shl
nop
shlb
cli
or
jbe
jp
lret
cmpsl
pop
or
outsl
fidivs
xchg
add
in
cmp
iret
sbb
test
in
cld
inc
ret
xor
pop
shlb
fiaddl
mov
movsl
push
jecxz
pusha
aas
roll
popf
add
pop
pop
push
loopne
adc
cli
sub
lahf
xlat
push
pop
xchg
mov
cmp
lock
push
scas
jmp
mov
push
popa
push
inc
add
repz
xchg
jle
sahf
xchg
nop
das
test
shl
adc
mov
add
int3
ret
fs
or
out
imul
jno
idivb
stos
or
dec
ss
mov
dec
imul
std
les
cmp
sub
jle
adc
std
loope
lret
out
inc
mov
pusha
arpl
sbb
or
cmp
aaa
jae
aas
sbbb
nop
xchg
aaa
ja
mov
cmpl
mov
mov
mov
sbb
gs
jecxz
lds
mov
push
ret
and
mov
cwtl
push
add
push
lret
lret
and
or
stc
jle
fdivs
sbb
pop
inc
push
movsb
mov
push
sti
dec
add
inc
push
cmc
inc
arpl
fs
rcrb
fnstenv
push
fcomi
add
out
js
xchg
jb
xchg
jae
pop
xchg
sbb
out
push
xor
jb
or
push
es
mov
fldt
sbb
outsb
push
jmp
xchg
push
mov
test
xor
add
push
jecxz
sub
cmpsb
outsb
inc
cmp
push
jg
lods
stc
lret
adc
push
pop
push
mov
mov
leave
fiaddl
inc
bound
push
pop
jmp
sbb
adc
data16
cmc
or
add
pop
popa
xchg
fwait
imul
notb
mov
cmp
dec
pop
lahf
jno
fisubl
adc
orb
push
adcl
push
rcll
je
mul
push
push
mov
mov
inc
pushf
mov
dec
or
ja
shl
jle
jge
jmp
fsubrl
in
xchg
sub
aas
xchg
add
rorb
sbb
mov
mov
fisubrs
vminss
pushf
ret
dec
push
jbe
jo
scas
jae
adc
sub
in
push
jb
cmp
cs
push
repnz
das
cmp
sub
insl
fldcw
popf
dec
lods
testb
test
or
pop
sub
pop
and
addl
mov
mov
jge
adc
in
pop
rcrb
sub
outsb
push
or
aam
inc
xchg
test
inc
dec
push
clc
je
dec
cs
pop
mov
cltd
scas
mov
cmpsl
mov
movsb
xchg
test
xor
inc
or
or
fidivs
stos
lock
push
fsubr
repnz
scas
xchg
lcall
mov
cmp
inc
push
mov
cli
jo
or
addr16
mov
imul
adc
and
push
int3
mov
leave
lock
jle
lods
mov
popf
cltd
xor
aas
xchg
cld
sbb
je
andb
and
loope
pop
dec
mulb
rcr
sub
fwait
jbe
sarl
xor
xchg
xchg
jnp
rclb
mov
cltd
stos
in
sti
push
and
dec
inc
xor
imul
outsb
enter
add
andb
pop
sub
push
in
notl
mov
daa
iret
divl
hlt
movsb
mov
mov
adc
pop
test
shrl
sub
cs
lock
scas
icebp
fdivrl
int
cmpsl
leave
idivb
pop
std
es
or
ror
into
add
loopne
out
adc
push
xchg
sbb
xor
mov
in
lcall
test
jp
test
in
and
xor
dec
xchg
pop
rcrl
add
imul
xchg
dec
test
into
mov
cli
xchg
dec
mov
ret
mov
and
mov
insb
mov
mov
incl
push
lea
aas
inc
cmpsl
pop
mov
dec
int
xlat
test
lods
push
jnp
push
add
add
or
popf
xchg
push
pop
or
fs
push
sbb
mov
push
das
push
stos
adc
rcrb
ja
sbb
push
loopne
ficompl
dec
mov
inc
scas
cmp
inc
sbb
inc
xchg
inc
sbb
inc
jp
clc
mov
iret
aad
ret
push
dec
or
inc
or
dec
lahf
mov
xor
and
push
pop
pop
xchg
adc
aam
aad
inc
inc
int
xlat
inc
andl
pop
pop
mov
and
ljmp
je
int
in
ret
ficoml
popa
xchg
mov
pop
sar
and
adc
rolb
orb
ret
dec
aam
jmp
push
stos
repz
les
fistpll
xchg
sbb
sahf
push
scas
or
mov
mov
mov
popf
push
adc
mov
bound
in
inc
out
in
cld
dec
mov
push
cmp
jae
jne
fimull
mov
inc
shrb
rolb
cmp
and
push
and
shll
je
lcall
fdivs
loop
xor
inc
movsb
icebp
sub
sub
flds
test
loop
push
cmpsl
pop
sub
add
or
sbb
enter
sub
sbb
push
movsb
mov
iret
jmp
inc
or
sub
jp
sbb
cld
xchg
dec
mov
call
adc
adc
es
and
push
enter
add
mov
sub
push
fiaddl
clc
call
out
dec
add
into
and
aam
add
cmp
inc
rcrl
sbb
xor
imul
lret
sbb
fsub
icebp
loop
pushf
rcl
fildl
pop
mov
push
sahf
inc
or
add
cmp
push
rcll
sub
push
inc
adc
mov
cli
pop
sbb
add
xor
lret
jo
mov
insb
ljmp
inc
insl
sub
in
xchg
jo
leave
mov
push
stos
jmp
mov
enter
mulb
push
iret
sub
sbb
lock
xchg
lea
push
pop
les
das
add
daa
or
sbb
jno
or
inc
enter
lea
inc
push
push
mov
mov
xchg
push
xchg
pop
loopne
fmuls
pop
mov
jge
fidivrs
sub
divb
fcmovu
mov
xchg
jne
sbb
jmp
mov
push
sub
lea
insb
jnp
cmp
es
sub
jb
xlat
fsubrp
xchg
rclb
pop
sti
xchg
push
mov
adc
aas
inc
xchg
sahf
jg
jecxz
mov
sub
sub
cmpsb
mov
xor
mov
or
shll
stc
sbb
sbb
inc
xchg
int
cmpsl
cmp
insl
mov
movsl
iret
enter
mov
and
imul
aad
sub
inc
in
lock
add
ret
movsb
sbb
mov
cld
pop
cmpsl
icebp
inc
mov
dec
scas
movsl
cmpsb
sub
not
leave
sti
repz
sarb
jae
push
dec
enter
stos
push
das
cmp
xchg
sbb
subb
mov
xchg
imul
and
jle
and
stos
fidivrl
movsb
lea
lret
sahf
int
jo
mov
fidivrs
xor
test
out
lds
cld
call
xor
stos
pop
adc
push
pop
jecxz
aam
addr16
and
lahf
popa
mov
gs
dec
pusha
xlat
jbe
test
jae
add
push
ljmp
sbb
xchg
out
call
daa
icebp
fisubl
mov
push
cmc
cmpsl
out
mov
rcrb
ret
pusha
push
sbb
inc
and
xchg
nop
xchg
repz
loop
aas
add
and
or
jle
push
pushf
pop
out
insb
movsl
adc
lret
lock
pop
test
call
rcrl
jl
out
push
cmpsl
not
or
cmp
push
clc
stc
aaa
pop
mov
int
mov
jo
jbe
stos
sbb
lahf
xor
mov
mov
jmp
cmp
testb
stos
sbb
in
mov
jo
inc
and
dec
inc
int
cld
xor
ret
push
dec
shl
mov
jmp
clc
js
int
inc
int3
xchg
adc
lcall
pop
inc
lahf
ficoms
jg
jnp
push
and
sahf
mov
push
push
pminsw
sub
add
and
xor
cmp
add
nop
scas
pop
sbb
gs
lods
xor
and
cli
mov
jecxz
imul
bound
xchg
aaa
cmp
ret
sub
loopne
inc
bound
sub
and
lods
sahf
sarl
test
addr16
add
jne
mov
fildl
push
inc
ja
jns
inc
sub
add
insl
setle
js
outsl
fists
lock
mov
sub
test
stos
cmp
outsl
jne
jo
lahf
insl
lret
cmp
jbe
test
aas
scas
or
mov
lret
mov
ret
or
pop
adc
add
and
add
pop
arpl
jle
adc
mov
popa
test
stos
movsl
jmp
inc
mov
fisubrs
xchg
cmp
imul
jmp
mov
adc
les
mov
push
int
leave
mov
xchg
ret
test
daa
jl
pop
sub
jl
out
addr16
lods
sub
outsl
stos
ds
out
xchg
dec
sub
lret
xchg
std
and
fsubrs
and
xchg
jge
pusha
imul
or
mov
jge
cmpsb
enter
repnz
xor
dec
cmp
into
jno
je
cli
andb
inc
imul
outsl
or
push
jmp
ds
pop
add
jecxz
cld
inc
fwait
inc
pusha
push
out
mov
mov
mov
loopne
push
ss
stos
nop
mov
pop
jbe
lret
xchg
outsl
lret
push
push
movsb
psubusw
call
xchg
fcoms
or
dec
repz
call
lock
sub
jnp
xor
mul
hlt
xlat
inc
push
mov
ljmp
xor
push
adc
sbb
mov
sbb
js
jg
ljmp
popa
data16
int
neg
bound
bound
shl
and
pop
test
gs
mov
and
std
xchg
sub
stos
sbbb
pop
sub
out
outsb
out
xchg
inc
push
rcrl
or
jmp
cld
mov
xor
pop
adc
mov
sbb
pusha
je
add
fucomip
int3
fcompl
test
insb
fisttps
sbb
xor
sub
jae
xchg
xor
adc
frstor
push
sti
ret
repnz
cs
loope
or
fldt
repnz
mov
pop
scas
leave
popf
xchg
and
add
out
stos
stc
mov
or
dec
movsb
int
adc
ljmp
sbb
jge
inc
lds
mov
xchg
jge
sahf
pushf
xor
scas
mov
push
subl
flds
std
mov
scas
aad
rcrb
inc
sub
xchg
or
addr16
iret
lret
dec
out
add
and
pop
addb
xchg
pslld
in
fadd
mov
push
mov
pop
call
and
and
cmc
aam
popf
dec
mov
jecxz
push
and
xor
lods
in
pushf
scas
lods
push
xchg
hlt
das
dec
and
sbb
jo
nop
sbb
and
pop
push
out
dec
mov
cmp
xor
pmaxub
das
inc
xor
mov
push
add
add
mov
mov
mov
out
pop
xor
dec
jae
adc
push
data16
mov
jmp
xchg
cmp
fwait
add
xor
mov
repz
imul
shlb
sub
js
pop
mov
insl
mov
scas
lahf
add
adc
jne
rcr
and
inc
addr16
xchg
add
daa
sub
jl
ja
lea
scas
cmpsl
inc
test
add
pop
fists
push
lret
pop
pop
loop
int
jge
movsl
cltd
xchg
sub
ret
xorl
mov
repnz
pop
mov
inc
mov
mov
fists
xchg
outsb
lds
jbe
sub
xlat
das
bound
xchg
outsl
add
mov
roll
hlt
scas
sbb
lods
arpl
sub
fbld
shll
add
call
cmp
xor
lds
cmp
faddl
and
inc
dec
mov
sbb
jl
dec
iret
popf
call
dec
jno
fcmovb
sahf
cmp
ret
insb
sbb
enter
subl
xchg
sti
mov
push
pop
add
pop
sub
xor
adc
movl
push
in
fildll
push
mov
pusha
add
out
addr16
cmpb
push
adc
out
pop
lret
cmpb
jno
push
pushf
pusha
inc
lret
insl
lea
leave
adc
cmp
adc
mov
in
mov
and
ret
xor
dec
lcall
jns
pop
inc
movsl
imul
int
cld
jle
imul
call
sub
pop
mov
mov
xchg
jmp
popf
dec
mov
cs
out
iret
sahf
push
data16
dec
rorb
jne
repnz
push
stos
jl
mov
jmp
mov
add
adc
test
push
add
cwtl
pop
movsl
rcrl
stos
movsl
jo
sbb
pop
popa
adc
sbb
fs
jae
scas
sbb
cltd
pop
sbb
jp
cmp
pop
sub
mov
clc
lods
mov
nop
daa
jae
adc
rcll
imul
dec
dec
sti
negb
inc
dec
js
lods
mov
pop
das
dec
adc
mov
adc
and
jns
cmp
imul
adc
pop
jne
sub
cmp
mov
inc
mov
jl
les
jge
pushf
add
cmp
xchg
push
cwtl
mov
mov
subl
cmp
inc
idivb
jg
and
sbb
mov
xchg
int3
fld
mov
mov
mov
out
jl
cmpsl
jle
sbb
mov
inc
jmp
sbb
cmp
sbb
popf
jl
popa
loop
nop
in
sbbb
cwtl
lret
stos
mov
cmpsb
int3
mov
lods
xchg
inc
mov
sub
mov
mov
xchg
aas
inc
sti
ljmp
dec
out
push
cs
int3
lret
adc
outsb
jmp
and
inc
push
inc
enter
fwait
push
paddw
arpl
or
xor
xorl
les
js
outsl
xchg
into
outsb
pop
mov
ja
rol
mov
das
out
outsb
xor
xchg
std
in
pop
icebp
xchg
enter
aam
jns,pn
mov
add
xchg
loop
xchg
inc
loop
inc
inc
out
adcl
xchg
fists
lcall
xor
clc
xchg
aad
mov
sub
rolb
ljmp
dec
cwtl
push
out
pop
or
mov
xchg
pop
enter
int
and
stc
call
shlb
mov
and
cmp
movsb
pop
xor
out
mov
stos
shlb
ret
imul
sub
mov
inc
loope
jge
loope
das
xchg
popf
xor
and
leave
lcall
sub
fprem
daa
mov
jb
mov
ficoml
xchg
leave
sub
std
and
xor
xor
xor
and
int3
cwtl
ret
mov
lahf
js
sbbl
test
testb
mov
lret
andb
out
inc
loope
push
ja
iret
and
cli
push
repnz
xchg
gs
mov
ss
pop
lods
mov
dec
jnp
jecxz
scas
pop
dec
cmp
pop
cmpsb
mov
sti
mov
cmp
iret
loope
add
xchg
or
push
pop
fldt
xlat
jle
jbe
push
insb
add
xchg
push
in
adc
mov
test
jne
js
cwtl
xchg
pop
mov
xchg
xchg
push
cmpsb
pop
lods
ficoml
minps
outsb
cltd
or
mov
sub
jno
test
les
xchg
loop
jle
or
add
or
jns
xor
or
sub
cmp
inc
mov
push
mov
adc
jnp
add
shrl
lcall
inc
rclb
enter
cld
mov
and
mov
xchg
adc
ret
lret
pop
inc
sbb
xor
out
inc
adc
scas
xchg
sahf
xlat
mov
aam
mov
repnz
call
and
add
outsl
das
sub
lods
mov
test
rcrb
lahf
cmp
and
inc
push
ret
leave
xchg
arpl
dec
cmp
enter
jnp
imul
cmp
movsb
lret
sbb
mov
push
cmp
mov
inc
in
cmp
adc
rorl
popf
lahf
sub
pop
dec
cmpsb
cmp
sub
adc
jle
jmp
mov
shl
stc
jp
repz
cld
push
addr16
sbb
sbb
shlb
out
out
dec
mov
les
jno
adc
cs
jno
hlt
std
and
mov
cmp
stos
push
xor
adc
jp
inc
test
fsincos
push
icebp
pop
xchg
scas
mov
je
cmpsb
adc
insl
push
mov
sbb
sub
sub
mov
rcll
dec
xor
dec
push
jmp
adc
push
test
xchg
iret
xchg
xchg
inc
sub
je
and
cld
mov
push
jnp
hlt
adc
in
pop
insb
mov
xor
lock
sbb
mov
popa
sub
mov
push
sub
outsl
int
scas
addb
mov
in
sti
icebp
sahf
cmp
adc
jl
sub
movsl
lahf
xorb
fisttpll
js
pop
std
in
or
fsubrl
dec
fwait
in
cmp
loope
pop
sub
sub
dec
hlt
inc
imul
add
cltd
jecxz
das
das
popf
loop
mov
pop
add
les
out
xchg
inc
dec
enter
push
mov
stos
push
pop
stc
push
xor
jl
mov
iret
push
xor
cmp
int3
std
pop
adc
sub
shlb
dec
adcb
sub
out
ret
add
mov
inc
pop
fmuls
xchg
sbb
pop
cltd
lret
dec
pushf
push
lahf
out
cld
pusha
loopne
es
or
mov
jg
ss
and
xlat
andb
jl
mov
pop
push
jecxz
sbb
dec
in
cmpsb
inc
test
inc
jge
stos
cmp
call
enter
dec
push
xchg
std
leave
pop
loop
jne
sbb
sub
or
jl
fnsave
iret
cli
push
lods
insb
mov
mov
xchg
arpl
clc
movsl
sub
mov
fs
xchg
lods
mov
pop
test
idivb
jne
das
lahf
mov
mov
enter
fs
add
call
scas
jmp
or
lods
push
add
lock
push
cmpsl
mov
inc
addl
add
or
jnp
or
jl
idiv
aaa
outsb
or
out
sub
es
sbb
and
out
popa
jp
or
lock
sbb
jne
nop
xchg
leave
int3
inc
and
cmpsl
insl
sbb
fwait
popa
mov
sbb
sub
fnstenv
lret
xchg
dec
ljmp
sub
mov
repz
push
fmuls
jbe
xlat
movsb
and
sbb
mov
xor
test
stos
pop
pop
adc
sub
mov
mov
jge
cwtl
add
outsb
mov
push
movsl
out
movsl
cld
test
or
pusha
lods
hlt
and
push
mov
mov
sar
mov
mov
sub
dec
lcall
inc
je
cli
xchg
xor
mov
cmc
ficoms
call
js
add
or
in
pop
and
out
mov
hlt
inc
out
ss
adc
fmull
or
lret
into
mov
pop
lods
test
mov
pop
mov
jae
hlt
pop
xor
aas
add
inc
jns
inc
test
jo
and
fbld
filds
jno
jl
sti
jno
and
pop
xor
mov
je
cmp
aam
inc
sti
jp
mov
xchg
mov
push
test
dec
xor
push
fmulp
aad
pop
push
dec
push
pop
in
jmp
xor
iret
loop
mov
dec
cmpsb
push
sub
pusha
sarl
cld
jecxz
sub
ljmp
jecxz
jb
adc
pop
fadds
into
xchg
lret
jl
ljmp
jo
jge
xor
mov
jns
sbb
cmp
pop
jmp
out
or
dec
adc
pop
pop
movsl
mov
scas
shl
ja
xlat
in
xchg
fwait
mov
jnp
mov
cwtl
sbb
into
outsb
pusha
in
inc
push
dec
mov
xor
aaa
icebp
mov
loop
add
stos
movsl
sub
pop
cmpsb
loope
inc
loopne,pn
addr16
cmpsb
mov
divl
push
in
cmp
pusha
das
ret
testb
adc
filds
bound
mov
adc
out
cmp
push
js
mov
inc
loope
and
aas
stos
add
cmp
clc
jo
xor
dec
pop
fisubrs
xchg
mov
stc
mov
popf
movsl
aam
jecxz
or
jbe
test
aam
into
adc
xchg
shll
pop
xor
nopl
int
cltd
lods
daa
xor
out
leave
lret
sbb
push
mov
insb
daa
lea
in
jl
or
or
push
push
sub
push
add
divl
and
mov
and
das
sahf
or
data16
aas
daa
int
movb
cli
jo
loopne
mov
jl
in
data16
cmp
cmp
xor
dec
dec
pop
push
jmp
movsl
scas
loope
and
mov
mov
out
and
dec
or
inc
das
fwait
xchg
xor
aad
sub
lods
shrl
add
or
ficoms
popf
shlb
lret
push
data16
pushf
cmp
loope
popf
pop
or
mov
xchg
fs
mov
jae
in
icebp
add
hlt
jmp
cld
sbbl
sbb
clc
out
cmp
in
add
lahf
in
xchg
fildl
jb
mov
or
aaa
int3
jl
jmp
rcrl
cli
mov
push
xor
add
mull
pop
data16
cmp
aam
in
push
test
jb
int3
mov
adc
into
mov
dec
mov
inc
loop
dec
inc
mov
pop
test
insl
cltd
mov
icebp
cmp
cli
push
stos
or
and
das
mov
into
jmp
hlt
jnp
cld
stos
pop
xchg
ss
aaa
add
dec
xchg
push
pop
int3
arpl
push
pop
sub
xchg
shll
push
imul
add
shrb
and
cmp
add
gs
in
pop
mov
adc
mov
push
jb
in
mov
dec
outsb
xchg
xchg
lea
xchg
gs
movsl
add
test
cmp
cmpsl
cmpsb
lods
add
mov
je
push
push
sbb
pop
jecxz
insl
jo
ss
push
dec
cli
cmp
add
fisttpll
icebp
dec
dec
call
mov
imul
enter
jp
adc
imul
jae
loop
mov
cmc
add
in
sub
add
mov
xor
and
ret
popa
push
and
push
mov
movsl
inc
mov
push
cmc
icebp
imul
stos
jmp
pop
repnz
xchg
cs
enter
mov
cmc
lock
sbb
lret
test
stc
mov
neg
cmp
aas
into
ja
mov
popf
fadd
fmull
fsts
or
test
rcrb
xchg
mov
push
mov
fwait
add
push
lods
insl
inc
jb
popf
stos
cmc
insl
enter
sti
mov
arpl
cld
push
push
sbb
imul
jecxz
mov
cmp
xchg
cmpb
insb
stc
call
jae
mov
aam
mov
or
je
in
mov
repz
movsb
fildll
or
repnz
into
bndldx
mov
popf
or
stc
ja
mov
or
cmp
imul
or
stc
fcomp
mov
mov
pushf
repnz
test
jp
shrb
or
roll
aas
push
inc
mov
push
ss
add
ffree
mov
xchg
mov
cld
xlat
loopne
ljmp
bound
inc
mov
add
mov
add
push
mov
out
scas
cmp
test
iret
iret
test
aaa
int
sbb
cwtl
xchg
jae
into
bound
cmp
push
push
test
lcall
pop
push
dec
mov
cmp
ds
xchg
adc
loope
push
mov
mov
lret
test
insb
pop
movsb
ljmp
faddl
aad
inc
cwtl
sub
xor
rcl
in
push
sub
scas
add
push
leave
filds
mov
and
sbb
ret
lcall
cmp
pusha
dec
subb
xor
out
xchg
adc
inc
mov
pop
arpl
test
hlt
inc
test
jl
jp
and
arpl
lds
mov
jge
dec
xchg
out
cmpsl
int
repz
lret
push
addb
or
sti
arpl
repz
mov
mov
inc
mov
inc
inc
push
sbb
sbb
mov
mov
inc
les
add
outsl
outsl
dec
stos
pop
cmpsb
movsb
pop
ror
inc
mov
mov
les
dec
mov
addb
mov
lahf
popa
add
ljmp
xchg
cmp
or
sub
in
jns
arpl
add
xchg
call
xchg
jp
xor
fnsave
pop
push
mov
xchg
js
push
dec
adc
dec
mov
outsl
mov
out
xor
push
adc
lahf
jle
push
pop
aaa
sarl
shl
das
mov
lds
mov
pop
mov
rol
xchg
and
mov
pop
xor
fadds
mov
add
jo
faddp
ja
into
dec
pop
ror
xor
xorl
cmpsb
dec
sub
pushl
sbb
sub
jne
jg
or
into
xor
or
adc
cltd
loope
lods
or
mov
inc
data16
in
outsb
repz
dec
sar
into
fidivrs
addr16
xchg
pop
dec
dec
inc
cwtl
xchg
mov
mov
mov
jle,pn
test
mov
jno
sbb
sbb
mov
cwtl
popf
jb
xor
jp
enter
aaa
jns
adc
out
fsubrl
pop
mov
adc
fiaddl
sbb
loopne
jge
mov
mov
inc
outsb
mov
mov
jp
lods
xor
fldenv
or
or
dec
lret
inc
pop
adc
and
nop
cmpl
push
insl
jmp
sahf
movsl
lds
mov
dec
bound
js
ja
mov
rcrb
cmp
push
lock
push
mov
xchg
cs
sti
scas
insb
or
aad
movsl
push
test
jg
repnz
ss
or
pushf
jno
add
enter
lret
push
mov
ror
rol
call
jmp
push
roll
andb
int3
outsb
cld
aas
pop
inc
jmp
cli
inc
ret
mov
inc
dec
test
sti
test
dec
inc
cmp
xor
mov
cmp
fs
cmc
xchg
in
repz
stos
inc
jmp
adc
stc
jg
es
iret
idivl
inc
mov
stos
add
push
test
pop
xchg
aad
in
pop
and
daa
daa
lods
add
sahf
pop
mov
cmpl
gs
dec
push
mov
nop
mov
sbb
cld
jecxz
dec
adc
jne
or
out
fnsave
clc
push
inc
xchg
mov
and
in
add
test
jne
fnstenv
inc
out
dec
into
mov
stos
imul
or
and
xchg
jbe
push
lahf
in
out
movsl
outsb
movq
xchg
rcll
iret
mov
icebp
pusha
dec
out
cmpb
daa
insb
scas
inc
loop
int3
and
jmp
sahf
stos
sub
lods
xchg
leave
mov
pop
cmp
jnp
cltd
fs
notb
scas
inc
pushf
sbb
imul
call
mov
jo
data16
pop
fsubs
push
aad
hlt
jg
inc
mov
jl
mov
fs
popa
mov
mull
gs
sub
movl
sub
mov
lret
out
xchg
scas
dec
ficoms
ret
push
push
lret
mov
mov
imul
sub
ror
call
xor
adc
clc
xorl
jns
andl
flds
push
xorl
mov
outsb
fldt
or
jl
sbb
push
stos
or
outsb
jbe
cltd
sbb
and
add
aam
or
sub
cmpsb
adc
out
nop
in
gs
sbbb
jmp
mov
pop
pop
outsb
adc
sbb
rcrb
jecxz
test
aam
in
aaa
out
loopne
rcll
jp
adc
test
out
sub
fadd
fnstenv
pop
ljmp
ret
add
push
rcll
addl
mov
imull
inc
adc
repz
xor
mov
dec
call
pop
loopne
dec
cmpsl
in
xchg
aas
xor
shl
out
add
mov
aad
sub
adcb
adcl
imul
aas
in
dec
sbb
imull
andl
sub
jae
shll
xchg
lea
lods
fs
push
int
fcoms
cmpsl
xor
or
xor
push
dec
imul
in
jae
add
aaa
jmp
mov
add
mov
lcall
out
push
gs
repnz
cmpsl
dec
pop
pushf
data16
xorb
sub
jbe
rorl
mov
xchg
ljmp
pusha
mov
jge
int
jmp
mov
neg
in
lea
dec
fwait
jmp
sti
sbb
aaa
mov
pop
outsl
lods
inc
dec
clc
push
pop
pop
jns
pusha
mov
ror
sbb
es
mov
daa
orl
mov
and
ja
les
mov
sub
mov
ljmp
adc
jo
mov
sub
xlat
mov
idivl
test
sbbb
mov
mov
mov
daa
mov
filds
jb
push
aam
shlb
nop
dec
arpl
inc
in
daa
das
orl
adc
mov
sbb
push
popf
jle
push
and
fisubl
negl
push
int
movsb
dec
pop
sub
outsl
sub
enter
popl
cmp
mov
and
sub
aam
xchg
sarb
adc
popa
xor
jmp
sub
inc
push
mov
imul
jecxz
xchg
out
ss
dec
mov
fsubr
mov
test
and
hlt
or
mov
jb
push
into
sbb
xchg
dec
sub
iret
test
mov
pusha
adc
dec
ja
mov
jmp
icebp
pop
aaa
push
sbb
enter
jg
mov
rcl
popa
push
stos
stc
iret
and
mov
xchg
sahf
sub
push
sbb
pop
cmpsl
jo
mov
xor
mov
hlt
into
jl
adc
add
popa
nop
add
mov
lock
push
jno
stc
pop
aaa
xchg
jp
inc
push
shrl
mov
cmp
inc
into
mov
cmp
or
and
pop
rol
add
gs
mov
mov
fmull
scas
in
lahf
pop
mov
push
dec
das
cwtl
jns
jo
cli
add
ljmp
mov
and
mov
xor
pop
imul
mov
inc
push
jns
es
or
rclb
add
mov
clc
xchg
int3
scas
arpl
inc
scas
cmp
cmp
push
jmp
mov
jo
fdivr
lock
stos
mov
sub
lods
insl
outsb
jo
jp
inc
mov
push
cmp
mov
fwait
roll
cmp
pop
dec
popf
das
int
sub
lret
xchg
js
popf
push
lret
xlat
mov
push
sub
lds
cmp
movsb
lock
lret
mov
or
imul
movsb
iret
fs
idivb
lods
mov
fsubr
movsl
pop
mov
sbb
aam
ss
cltd
clc
aad
pop
cmp
mov
sbb
out
loope
sti
add
mov
cmc
mov
pop
mov
xor
rcl
out
xor
loop
inc
and
push
pop
jge
add
fucomi
cltd
dec
mov
xor
pop
dec
call
jo
jmp
adc
xor
xchg
aaa
js
bound
insb
into
leave
icebp
stos
or
mov
fnstcw
stos
pop
cmp
stc
pop
sbb
push
and
adc
push
mov
dec
arpl
pop
sbb
jno
pop
xor
test
mov
int3
jecxz
mov
fisttpll
cld
dec
lods
adc
pop
xchg
xlat
cmp
pop
lret
mov
mov
add
cmp
adc
jno
repz
jno
dec
xor
lcall
inc
push
aam
test
outsb
lret
sbb
cmp
mov
adc
scas
rorb
sbb
stos
jecxz
adc
jp
xchg
pop
mov
outsb
mov
ret
add
jge
push
push
iret
sbb
mov
mov
inc
and
outsb
sbb
jl
es
add
out
fisttpl
aaa
push
test
std
cltd
add
fnsave
or
lret
xchg
cmpsl
push
push
lret
mov
sahf
xchg
in
test
insl
stos
sbb
ret
push
aad
fcoms
ljmp
das
xchg
fcomi
mov
mov
xchg
bound
cmpsl
mov
cmpsb
test
jg
inc
xchg
add
rorb
aam
test
lahf
xchg
in
lsl
push
push
test
iret
div
dec
mov
add
rcrb
jns
fldcw
push
mov
or
or
out
or
sub
in
testb
mov
sub
scas
daa
test
aad
cmp
fistpl
xor
call
sub
jp
pop
aaa
xrelease
add
adc
cwtl
jge
jb
push
cmovl
add
cld
add
in
jb
aad
mov
aad
ror
cltd
sub
test
sti
in
ljmp
inc
pop
jge
inc
cmpsb
das
mov
cmpsb
adc
sbbl
add
idivb
xchg
push
adc
in
stos
push
jecxz
lods
ljmp
pusha
sbb
cmpsl
shrl
sub
or
and
xlat
cld
push
mov
outsl
pusha
dec
dec
sub
pushf
cmp
adc
test
sbb
push
sbb
push
mov
fadd
sbb
inc
cmp
out
jns
or
or
enter
int3
pop
les
pop
aam
cmp
les
in
es
int3
pop
push
cwtl
or
sarl
jbe
or
mov
mov
fs
scas
xchg
in
jp
mov
sub
jbe
sub
loopne
ror
mov
and
adcb
imul
pop
inc
mov
mov
push
leave
xchg
pop
fwait
mov
ret
adc
jns
loopne
in
jo
inc
fs
insb
loop
out
pop
lret
lret
test
mov
rorl
mov
imul
leave
pop
adc
add
ret
popf
pushf
int
adc
stos
loop
lret
mov
ss
push
daa
fwait
cld
roll
data16
je
mov
push
lds
ja
lea
jecxz
jns
addb
loope
fld
sbb
rcll
jne
cmp
clc
xchg
jne
in
jle
lock
insb
inc
lret
mov
push
mov
pop
jb
inc
pop
mov
in
pusha
movsb
dec
mov
jecxz
pop
add
xor
cwtl
ds
loope
push
sbbb
push
dec
dec
je
into
addr16
nop
push
and
nop
xchg
lea
add
sbb
orl
clc
test
call
fists
movsl
and
push
or
pop
fsubrl
sub
mov
and
push
pushf
pop
push
adc
adc
aad
mov
fdivl
fsub
je
loop
nop
push
xchg
sysexit
rol
aaa
lret
lret
scas
sbb
shrb
mov
fbstp
inc
and
sub
dec
mov
addl
insb
push
insb
aam
outsl
lret
movntq
out
cmpsl
inc
in
mov
mov
mov
cli
xlat
pop
adc
insl
in
movsb
int
cmp
jg
mov
inc
lock
mov
stos
sahf
mov
push
ret
icebp
add
jle
repnz
xlat
outsb
sbb
push
mov
movsb
dec
rorl
stos
xchg
movsl
lret
lcall
pop
pop
push
cmp
inc
rcrl
les
ret
negl
cli
sahf
mov
jb
sub
stos
psllw
test
push
xlat
mov
lret
mov
adc
popa
sub
ss
fldt
inc
add
shlb
xchg
inc
mov
test
dec
adc
pop
je
mov
lods
and
sbb
std
push
xchg
mov
or
or
xchg
rcr
xchg
das
mov
sbb
hlt
outsl
call
dec
cmpb
fucom
adc
pushf
inc
push
xor
imul
and
cmp
stc
repnz
add
in
pop
fstl
pop
inc
push
push
mov
into
push
in
mov
movsl
test
mov
adc
in
dec
fists
nop
ds
mov
loop
shll
add
cmp
inc
std
dec
push
xchg
sub
stos
scas
push
adc
mov
pop
or
cmp
mov
and
xor
sbb
leave
jecxz
cmp
mov
data16
movsl
mov
mov
orb
dec
or
insl
xor
lcall
jecxz
lcall
inc
or
mov
dec
pop
inc
pop
adc
mov
push
call
shlb
xchg
inc
clc
mov
lcall
fldt
mov
shll
test
dec
inc
lock
jmp
mov
mov
popf
lock
mov
stos
sbb
call
nop
cmpsl
dec
scas
outsl
push
fidivl
pop
adc
sbb
jle
rclb
nop
insb
cmp
xlat
dec
insb
rorb
aad
push
cli
daa
cli
add
mov
lock
fstps
xor
test
adc
filds
or
and
jae
outsl
mov
mov
push
mov
pop
sbb
addl
pop
and
scas
sbb
and
in
cmp
fcos
sub
loopne
sub
inc
ds
mov
ds
cmpsl
in
lea
xor
ret
jmp
jnp
leave
mov
rclb
sbb
std
cmpsl
push
jb
jns
add
mov
inc
push
xor
push
fstpl
imul
pop
aam
push
adc
mov
int3
jb
inc
push
cmp
or
nop
jg
ror
push
pusha
jecxz,pt
dec
out
pop
jb
jge
inc
enter
rorl
push
add
inc
jbe
mov
add
pop
insb
fcomip
cli
jmp
iret
addr16
fs
xor
outsl
stos
out
ficomps
int
sahf
sbb
hlt
lret
mov
xor
sbb
fsubrs
scas
mov
std
add
ljmp
xchg
mov
ljmp
sub
jmp
iret
mov
pushf
loop
xchg
mov
shl
icebp
je
and
movsb
mov
sbb
aas
push
jge
fs
cmpsb
das
cltd
clc
jbe
outsl
push
dec
sahf
jbe
mov
sub
mov
mov
pop
ficoms
mov
xchg
rcll
jno
into
or
xchg
dec
pop
jmp
sub
and
cltd
xor
xchg
mov
fldl
jle
adc
xor
push
test
inc
jne
imul
jg
pop
jmp
inc
fptan
fnstsw
pop
cmp
clc
push
hlt
inc
mov
shrb
and
pop
xchg
mov
push
daa
insb
test
mov
ja
aad
push
outsb
mov
dec
in
jne
jmp
pop
cltd
mov
sub
pop
mov
sahf
add
fsubl
pop
mov
add
adcb
aaa
ds
push
es
xchg
imul
xor
mov
sub
sbb
hlt
cmp
jno
jb
std
and
jg
jno
enter
pushf
call
add
cli
imul
push
jecxz
aas
stos
push
sub
fildl
ret
sbb
sbb
adc
sub
test
hlt
fwait
jecxz
sub
in
push
mov
and
out
aaa
dec
mov
jns
push
pop
test
pop
add
pusha
scas
cmpsb
dec
inc
pusha
mov
cmp
popf
out
arpl
xchg
das
mov
pop
sub
mov
jne
or
push
push
xchg
out
add
sub
xchg
xchg
shrb
clc
loopne
iret
cmc
call
cmp
push
inc
adc
scas
xchg
mov
mov
push
insl
lret
mov
sahf
adc
mov
jecxz
mov
push
mov
sti
jecxz
ljmp
andb
xor
mov
mov
outsb
clc
pop
push
fstl
mov
pop
aad
add
fdivrs
fucomp
imul
fcoml
lret
loope,pt
sub
mov
push
pop
push
or
aad
jle
jno
cmp
adc
repnz
lds
pop
dec
mov
add
dec
lcall
and
mov
pop
jmp
push
pop
mov
xor
cs
xchg
inc
out
arpl
out
lret
pop
jnp
xor
shlb
add
sbb
out
cmp
cmp
sbb
sub
test
pop
dec
imul
pop
sahf
lcall
sbb
negw
push
inc
cmp
mov
push
xchg
call
xchg
mov
lcall
cmp
adc
push
mov
sbb
jmp
lods
aad
add
pop
js
sbb
xor
mov
imul
decb
inc
lock
adc
mov
add
and
enter
jne
cld
sbb
sbb
mov
pop
pusha
mov
mov
and
imul
add
stos
in
pop
aad
test
push
dec
xchg
test
es
pop
cwtl
cmp
push
inc
shr
sub
pop
dec
dec
sub
fisubs
std
stos
dec
mov
jl
or
daa
dec
push
xchg
call
jb
jg
jnp
in
mov
icebp
out
imull
mov
mov
mov
xchg
mov
push
stos
or
or
xor
pusha
cwtl
into
or
jbe
lock
cmpl
and
add
mov
cmp
or
push
adc
out
xchg
cli
mov
jp
pop
shrb
divb
fildl
jg
or
mov
xchg
loop
test
cmpb
repnz
mov
jb
pop
xchg
xchg
js
mov
addr16
sub
push
into
add
popa
cmpsl
cwtl
mov
mov
xchg
adc
mov
ljmp
ret
mov
lret
fisubrs
int3
fcomps
push
lea
fs
movsb
adc
je
call
xor
mov
cmp
mov
int
mov
lods
jb
inc
sbb
jnp
mov
ss
dec
xlat
lcall
rolb
jae
movsl
sub
cmp
div
test
jno
jmp
sbb
sub
xor
mov
imul
or
and
adc
lds
and
gs
sub
sub
out
jo
imul
cmp
xor
nop
fisubrs
cmp
adc
aaa
in
and
mov
test
push
sahf
adc
movsl
jg
lcall
jo
xlat
pop
imul
mov
jnp
jne
add
sbb
xchg
inc
adc
xor
inc
push
cmp
repnz
shl
pop
jnp
call
ds
es
cld
mov
xlat
test
and
pop
mov
jne
pop
mov
jns
adc
fs
jae
inc
and
add
ret
jmp
mov
sbb
dec
and
mov
in
mov
mov
lock
bnd
xor
mov
insl
pop
push
xchg
adc
push
hlt
daa
inc
push
or
cwtl
jno
pop
and
inc
mov
popf
inc
sbb
add
rcrl
fistpll
sbb
ficomps
xchg
mov
aad
jbe
stc
hlt
lret
cmp
cmp
dec
sarb
mov
leave
stos
add
pop
adc
fs
fisubrs
scas
sahf
jbe
call
pop
and
push
cmp
pop
mov
jge
outsl
add
sub
movsb
sub
pop
rorb
out
sbb
stc
xlat
push
or
pop
sub
imul
aad
subl
push
pop
jp
lcall
add
fcmovb
mov
push
fcoml
cs
pop
jo
jno
insl
lea
ja
push
or
cltd
xor
cmp
xlat
and
push
adc
mov
pop
xor
inc
and
mov
int3
iret
add
inc
insl
lret
xor
lret
outsl
add
mov
ja
mov
push
jns
mov
jns
sub
jae
pop
imul
add
and
pop
shlb
orb
xor
inc
mov
sub
xchg
pusha
jb
out
repz
add
es
mov
stos
mov
xchg
sub
push
sbb
jg
mov
cmpb
xor
jae
push
mov
hlt
aas
xchg
std
jp
pop
sub
andl
stos
pop
outsb
test
pop
dec
adcl
shr
aaa
stos
xchg
lods
adcb
and
xor
fdivrl
hlt
sub
pop
idivl
and
repnz
jae
iret
mov
mov
or
jl
xchg
jmp
imul
jg
or
xchg
sbb
cld
stos
mov
cwtl
xchg
mov
sbb
stos
xchg
cs
imul
clc
lret
sub
lahf
lock
cmp
sub
cmp
push
and
fsubr
adc
rorl
shlb
les
das
sbb
test
pop
and
xchg
frstor
cmp
ret
push
pop
fisubl
out
outsb
and
jns
cmc
pushf
in
and
mov
mulb
testl
add
inc
xor
xchg
or
lea
jl
sbb
mov
mov
mov
jo
repz
frstor
and
js
sbb
aad
jg
insl
out
rcl
dec
adc
inc
repz
mov
aas
or
jb
ror
jge
test
stos
cmpsb
cmpsl
jmp
xchg
pop
pop
movsl
and
test
mov
repz
add
dec
lret
add
jnp
jo
xchg
ja
xor
es
dec
test
push
loope
mov
or
push
test
out
or
sbb
xchg
ljmp
icebp
fsubrp
lret
mov
std
mov
rcll
sbb
cmp
jne
mov
jp
cmp
out
push
mov
outsl
adc
jle
mov
add
aaa
test
add
and
mov
enter
dec
ljmp
rcrb
sub
lahf
iret
cld
pop
push
pop
push
sub
andl
loopne
pushfw
cmp
xchg
push
pop
js
test
pop
add
jl
pop
ds
int3
rcrb
jmp
mov
in
adc
daa
test
or
aad
inc
enter
scas
into
ljmp
daa
and
not
inc
add
fisubs
movsb
dec
push
cmp
pop
push
push
aad
out
je
jnp
xor
lcall
xor
jo
outsb
jno
lcall
movsb
pop
fdivp
lcall
cmp
lcall
orl
jno
fs
in
pop
filds
add
pop
mov
push
ja
addl
cmpb
orl
das
shll
aad
mov
or
mov
pop
in
mov
inc
ds
cmp
dec
ffreep
jb
in
sub
scas
mov
xchg
push
int
or
and
pop
loop
js
insb
fisubrl
std
mov
arpl
aad
cmpsb
sbb
jno
add
inc
jbe
jge
push
dec
or
es
pop
ds
mov
stc
push
popf
mov
xchg
xor
jmp
xor
ret
cmp
rcrb
sub
fsts
dec
cld
mov
jo
loope
adc
cmp
jg
ss
jl
movsl
es
in
jmp
inc
pop
or
jg
pop
ret
sub
addr16
pusha
add
data16
pop
pop
jnp
mov
xchg
fwait
mov
xor
inc
cmp
movsb
jg
and
jge
fdiv
sub
imull
lods
aad
outsl
push
je
addr16
or
push
xor
adc
lods
push
movsl
lcall
stos
add
inc
icebp
std
in
aam
stc
movsb
icebp
clc
sub
cmpsb
mov
add
cmp
mov
cwtl
jg
mov
xlat
jge
jmp
fdivs
mov
cmp
ss
imul
jbe
stc
out
add
dec
daa
enter
adc
mov
push
inc
fldcw
jne
and
addr16
and
xor
mov
rcll
jmp
adc
fldenv
mov
imul
das
sub
sub
jae
add
sbb
fld
fiaddl
and
lret
add
or
adc
jmp
inc
mov
lock
jnp
adc
cmp
les
lods
add
cltd
cs
dec
pop
pop
mov
hlt
mov
xchg
mov
mov
insb
shrl
push
or
xchg
lock
sub
add
mov
das
pushl
dec
pop
fsubl
stc
into
std
std
xor
mov
das
mov
mov
inc
lcall
jle
mov
stos
mov
sbb
dec
xlat
add
inc
mov
jl
cltd
hlt
cs
push
jbe
mov
popf
pusha
add
int
mov
sahf
imul
inc
ljmp
mov
ret
sub
insb
test
aad
shlb
xchg
dec
pop
cmpsl
inc
in
mov
dec
cmpsb
inc
idivl
pop
jae
lods
ds
pop
inc
jg
int3
inc
lods
mov
mov
int3
ljmp
sub
pusha
ss
fmull
mov
add
movhps
fidivs
int3
xor
cltd
or
sub
lds
inc
lds
mov
mov
xor
xor
xchg
rcrl
jnp
fldcw
push
out
lret
push
pop
mov
xchg
mov
shll
cmp
ret
fstl
icebp
popa
xor
lds
mov
inc
fdivrl
xor
or
jge
sar
fidivl
sub
fsubl
or
popa
icebp
call
xchg
lcall
loop
out
leave
dec
add
mov
pop
cmc
aam
and
pop
pop
adc
mov
in
cs
aaa
cmp
aas
nop
loope
or
scas
fbld
sbbb
add
lcall
pop
icebp
bound
jge
push
movsl
push
cmpsl
and
jle
pushf
lods
repz
mov
or
iret
sbbb
jmp
in
repz
xor
lds
mov
jle
or
xchg
xchg
inc
lods
fs
insb
pop
xchg
lea
das
xchg
lret
sahf
lea
sub
dec
inc
inc
pop
mov
cmp
sub
push
inc
inc
data16
imul
pop
lcall
and
insl
shrb
pop
stos
ret
fucomi
or
push
xor
nop
add
sarl
pop
lret
div
mov
mov
cmp
ja
mov
inc
xor
jae
cli
mov
pop
sub
jl
adc
fisubrl
das
add
not
push
stos
push
icebp
xor
pause
fcomip
mov
inc
in
lret
stos
pushf
lea
stc
scas
int
cmp
orb
push
notb
push
adc
dec
lahf
aam
dec
lods
bound
push
and
and
gs
loopne
lahf
aam
mov
bound
push
bound
out
into
adc
aad
std
mov
bound
in
inc
aam
xor
or
push
mov
gs
lock
push
xor
lods
cmp
cltd
xlat
mov
in
ror
test
pop
mov
addb
pop
mov
pop
push
lret
mov
lods
xchg
stos
arpl
ljmp
xchg
dec
cmp
nop
dec
and
sub
push
pop
push
fmuls
push
ljmp
pcmpgtw
loop
leave
cld
lahf
loopne
shrl
jns
mov
out
mov
test
sti
xlat
fmuls
data16
fmull
sbb
stos
lods
fstl
xor
out
mov
inc
mov
sub
stos
add
push
shrb
xchg
and
cltd
out
and
pop
xor
mov
mov
sub
pop
or
aam
sub
mov
push
pusha
mov
sbb
in
fnstsw
pop
popf
mov
push
popa
sub
mov
lahf
daa
inc
cmp
pop
aam
xchg
or
rol
lds
push
fstpl
repnz
jnp
mov
dec
add
push
dec
pop
cmpsb
pusha
adc
xor
lcall
xor
mov
and
push
icebp
and
imul
out
popf
out
es
in
xorb
lds
inc
or
pop
mov
pop
adc
out
lods
popf
xchg
jecxz
movsl
mov
add
imul
inc
push
popa
out
inc
or
jg
lret
inc
sub
xchg
jnp
movsb
out
cmc
sbb
mov
mov
push
test
loop
and
sbbl
mov
iret
ss
mov
dec
imul
shlb
ret
mov
adc
cmp
outsb
sbb
int
cltd
jb
gs
out
decl
lahf
lock
ficompl
cs
lock
mov
ds
dec
scas
insb
lds
addr16
mov
mov
push
pop
or
and
movb
cmpsb
inc
push
xlat
xor
pop
mov
add
insb
loopne
outsb
mov
mov
imul
mov
roll
or
and
outsl
push
nop
fs
sub
lret
pusha
or
in
pop
lret
add
imulb
ljmp
pop
cmp
shrb
xchg
cwtl
push
mov
mov
sarl
clc
push
adc
adcl
int
jno
mov
push
cmpsb
popl
xor
sub
or
adc
fwait
mov
cmovp
add
mov
ret
sub
in
gs
push
fwait
int3
mov
sub
aam
notl
clc
xor
std
xor
sbb
int
std
sbb
out
sbb
aaa
shl
mov
mov
gs
xor
scas
int3
dec
jge
adc
fabs
fdivrp
pop
mov
lret
adc
hlt
out
push
sub
or
fsubs
xor
jb
cli
xchg
cli
js
xor
imul
loopne
cwtl
jnp
cmc
cmpsl
lods
jmp
clc
cli
rclb
idivl
add
in
push
xchg
or
cmc
pop
xchg
mov
push
push
sub
test
scas
ret
or
test
frstor
pop
xchg
jl
ss
xor
mov
es
rcrb
das
inc
add
adc
add
subl
imul
pop
dec
or
outsb
xchg
push
xlat
cld
sahf
mov
repnz
sub
pusha
mov
or
inc
push
xor
sub
mov
jge
mov
cmpl
das
jl
cld
cmc
mov
mov
mov
fcmovnu
es
adc
xor
push
push
mov
loopne
pop
insl
add
jmp
out
push
jnp
je
iret
test
sbb
pushf
inc
xor
fstpl
cmpsl
jnp
addr16
push
cwtl
adc
ss
pop
fs
and
out
xor
aaa
mov
sti
adc
cmp
sbb
add
wrmsr
rcl
jle
cmc
fsubr
mov
stc
test
addl
and
imul
bound
jb
add
out
mov
push
dec
cmp
mov
bound
and
rolb
int
ss
cmp
pop
dec
loop
and
sub
and
arpl
adc
dec
mov
add
sub
add
xchg
imul
jmp
fwait
outsl
in
mov
sub
mov
pop
ret
mov
sarb
and
add
dec
dec
push
pushf
pop
fists
insl
xchg
pop
clc
mov
gs
xor
out
insl
stos
cmpb
push
loope
fldenv
cmp
pop
dec
lret
or
je
pop
mov
mov
xchg
ror
and
sbb
xchg
jge
dec
cmp
or
jb
cmc
pusha
cmpsb
aam
les
jno
cmp
jge
jnp
ret
or
inc
pop
loopne
push
lea
pop
adc
cmpsb
mov
mov
fadds
add
mov
add
stos
mov
out
test
xchg
xor
and
ja
and
nop
add
inc
movsl
addb
lods
sbb
jns
mov
mov
loopne
mov
pop
add
enter
mov
push
jbe
ret
lea
push
cli
out
mov
lds
nop
xchg
dec
dec
popa
decl
lock
arpl
inc
pop
out
mov
xchg
mov
and
sti
imul
pop
xor
add
mov
xor
pop
into
pop
imul
xchg
lret
inc
push
cld
jle
push
push
mov
cmp
adc
cmc
pop
xchg
dec
loopne
sbb
lock
mov
test
xchg
icebp
push
pop
pop
repnz
ss
scas
leave
pop
sub
adc
cmpsl
lock
sub
hlt
fidivl
stos
and
xor
shrb
fcmove
push
mov
xchg
scas
cmp
dec
and
push
lods
fisubrs
fistl
sahf
jg
into
add
inc
popf
add
sub
mov
adc
mov
sbb
decl
and
es
inc
addr16
xchg
dec
cmpsb
add
inc
stos
push
sub
jle
cs
inc
xchg
jnp
lahf
cmp
lea
ss
lret
pop
lods
sbb
jbe
mov
outsb
push
cmpsb
daa
pop
fwait
push
xchg
in
cmp
out
adc
add
dec
pop
jmp
jno
mov
adc
mov
ret
adc
test
jp
sbb
in
dec
dec
mov
pushl
mov
inc
jae
bound
jmp
mov
leave
mov
shrb
xorl
sbb
enter
xor
pop
dec
out
sbb
dec
int3
or
pusha
adc
pop
add
sbb
dec
gs
lods
or
add
inc
mov
sub
or
aas
and
xchg
and
jecxz
add
sbb
push
imul
fistl
shlb
ja
cmp
aad
xor
jle
adc
push
sub
into
sub
cld
cwtl
and
xor
lock
dec
daa
mov
push
sub
je
pop
mov
pop
repnz
inc
stos
jo
jbe
movsl
adc
xor
mov
add
rep
dec
subb
push
out
int3
xlat
into
push
jb
mov
mov
in
std
jne
inc
pushf
sbb
lds
cmc
xchg
ret
sub
jno
shlb
sbb
les
popa
push
cld
and
fcmovnbe
stos
jmp
adc
in
xchg
stos
je
js
js
clc
imul
xchg
lahf
test
dec
lret
sbb
sub
cmpsl
and
mov
and
push
inc
cmp
lret
ficoms
cld
aad
nop
ret
in
mov
jae
stc
fisubrl
sarl
xchg
xor
pushl
sub
sub
in
mov
dec
sbb
mov
mov
push
outsb
shl
movsl
pop
call
shrb
enter
inc
fdivrp
pop
icebp
add
sbbb
cmp
sbb
shlb
add
jbe
test
sub
inc
mov
punpckhbw
mov
lahf
andb
mov
and
arpl
adc
rcl
enter
sub
pushf
fmuls
movsl
push
bound
add
jecxz
and
test
arpl
loop
fsts
push
mov
leave
and
cmp
add
pop
frstor
sbb
insb
leave
mov
mov
test
test
imul
and
call
scas
cmp
cmc
pop
nop
xchg
jo
jbe
ja
mov
fwait
pop
repz
and
fistpll
out
or
push
xchg
inc
enter
mov
mov
test
mov
mov
xchg
pop
out
cmc
push
mov
insl
aad
jns
sub
mov
xor
xor
addps
and
sub
pop
inc
push
gs
mov
adcl
mov
sub
pop
jmp
fsts
jl
mov
movsl
mov
cmpl
pop
nop
sub
jecxz
cld
outsl
push
mov
sbb
cmc
repnz
push
notb
in
fsubrl
faddl
arpl
xchg
xchg
mov
mov
adcl
inc
imul
stc
xchg
xor
mov
cld
cmpsb
aam
mov
add
hlt
inc
aad
lret
or
cmp
dec
outsl
in
out
mov
add
nop
and
xor
inc
push
imul
lds
xor
mov
cmpsl
dec
popa
stc
fwait
dec
pop
mov
jle
xchg
fistpl
mov
adc
sbb
fstps
lret
inc
mov
cmp
iret
lcall
insb
cmp
aas
int
mov
mov
outsl
rcrl
jnp
dec
lods
push
rcrl
out
mov
pop
add
adc
mov
cld
jecxz
pop
gs
ss
out
and
jge
imul
sbb
inc
outsl
fdivrl
adc
xchg
out
lret
and
xor
mov
or
mov
ret
loop
or
jmp
jecxz
lcall
push
fstpl
je
pop
inc
lods
jbe
incb
add
inc
imul
dec
add
sarb
lcall
nop
mov
loope
in
iret
sub
mov
mov
fstpl
andb
sub
push
scas
inc
cmp
or
test
adc
xor
fldt
sbb
push
xor
mov
outsl
and
push
decl
mov
mov
hlt
rorl
dec
clc
mov
adc
xchg
lcall
test
movb
mov
out
pop
push
out
pop
ljmp
stos
ljmp
fcoml
xchg
dec
mov
push
aaa
lret
test
pop
push
jo
xor
pushf
and
push
jl
jle
mov
jmp
jo
bound
mov
and
add
lcall
inc
andb
sub
xor
rolb
cs
cmpsl
mov
adc
push
out
dec
das
cmp
sbb
adc
sub
and
xorl
inc
mov
xchg
cmpl
lods
ret
mov
shld
jp
fldcw
jne
pop
jmp
mov
addr16
push
pop
in
out
sarb
sub
inc
xchg
pop
out
jo
adcb
out
cmp
lret
pop
rcrl
push
add
sub
gs
arpl
in
stos
fsts
sub
scas
mulb
daa
scas
jns
cmp
add
int3
out
sbb
push
pop
pusha
int
int
std
dec
mov
xor
jmp
jno
icebp
test
cs
rep
mov
mov
sarb
cmp
sbb
mov
les
xor
outsl
in
shrl
mov
clc
insb
dec
xor
jecxz
dec
ja
or
fdivr
sahf
mov
sub
call
adc
loope
and
jb
lods
dec
es
xorb
push
call
pop
into
or
std
jbe
sarb
das
adc
orb
fbstp
and
mov
jmp
stos
sbb
out
push
in
pop
cmpsl
out
imul
xchg
hlt
xchg
adcl
xchg
jl
test
loope
cmpl
cmp
lcall
loop
or
dec
add
or
fstl
fistl
inc
out
pushf
loopne
rorb
inc
sbb
jno
pop
dec
mov
and
rclb
xchg
mov
and
mov
stos
xchg
fs
and
test
sbb
pop
lea
mov
inc
and
jle
adc
or
sub
rcr
sub
xchg
call
outsb
aad
addr16
sbb
lret
mov
cmpsb
mov
lods
xor
cmpsb
adc
add
push
mov
cs
or
pop
mov
adc
pop
stos
std
jnp
pusha
push
inc
dec
imul
pop
jecxz
inc
mov
addr16
pusha
jne
cmp
into
mov
cli
les
jp
imul
mov
adc
imul
popf
loope
insl
or
inc
arpl
push
pop
gs
fnstsw
or
cmp
jl
xor
mov
mov
xlat
jbe
inc
push
fs
cmp
push
push
imul
jp
lcall
dec
pop
ds
push
mov
or
fsubp
cs
xchg
ljmp
adc
pop
lea
fimull
pusha
adc
rcrl
adc
andl
out
mov
repz
xorb
xchg
pop
mov
or
jns
data16
cmp
out
cmpsl
in
jl
adc
push
dec
out
mov
pop
sahf
outsb
mov
pop
mov
stos
sub
push
and
sub
out
and
adc
inc
lret
or
push
jns
popf
mov
ja
cmpb
pop
loopne
dec
xchg
xchg
stos
icebp
out
in
int3
lahf
sbb
loop
jb
sub
shll
pop
cmp
push
movsl
pushf
mov
mov
adc
push
pop
mov
dec
outsb
dec
lods
lods
inc
adc
push
pop
inc
inc
mov
inc
pop
into
cmp
jmp
rcr
fistpl
or
lcall
adc
mov
jp
inc
lcall
adcl
pop
jbe
lea
int
mulb
test
and
add
ficomps
stos
sbb
mov
stos
and
push
dec
js
test
cmp
xlat
lret
jge
push
mov
mov
mov
xor
insb
fiaddl
mov
jl
sbbb
test
xor
mov
pop
push
inc
fildl
pop
daa
ds
mov
leave
fldcw
sar
mov
shl
into
xlat
sbb
cmc
pop
adc
push
cmp
hlt
movsb
add
mov
daa
fistl
xor
pop
into
jbe
jmp
sub
jnp
iret
dec
dec
inc
data16
and
push
arpl
int3
mov
pop
aas
fcoms
icebp
sarl
pandn
aaa
movl
adc
fstpt
push
fdivrl
sbb
sarb
mov
mov
and
outsb
mov
cmp
sar
enter
int
fisubrl
stos
push
mov
test
lret
adc
jae
cmpsb
push
push
dec
outsl
jne
shrb
hlt
cld
sahf
xlat
adc
xchg
push
test
jmp
iret
pop
dec
loope
scas
cld
jae
or
jb
push
faddp
pop
sbb
cmp
pop
push
pop
or
xchg
movsl
mov
das
sbb
fisubrs
into
or
pop
add
push
icebp
mov
mov
in
aam
mov
fcmovne
popa
adc
orl
daa
xchg
cmp
fwait
sbb
inc
sbb
dec
mov
ror
inc
in
push
mov
fstl
lahf
push
into
dec
push
mov
ss
gs
mov
out
or
sub
lahf
cmp
pop
or
xor
add
xchg
insl
pop
mov
or
add
repz
lret
adc
xor
adc
idivl
inc
pop
jge,pn
ljmp
push
adc
cmp
mov
push
mov
test
testb
dec
inc
jmp
outsb
outsw
cmpsb
pop
sub
xor
sub
bound
mov
outsl
in
mov
cltd
xchg
mov
mov
sub
push
lods
pushf
mov
jo
cmp
jg
push
jecxz
notb
dec
outsl
mov
dec
and
cmp
outsl
std
into
push
jp
loope
outsl
xchg
mov
pop
add
jp
or
jmp
cmp
lods
pop
insb
movsb
xchg
pop
or
mov
lahf
xor
faddl
cmpsb
jbe
cmc
push
int3
fcomip
loope
mov
jo
rcrb
xchg
and
cli
jno
int3
scas
mov
arpl
outsl
pop
xor
mov
fs
ja
sahf
mov
lock
push
fs
sbb
loop
dec
movsl
sbbl
mov
cwtl
fsubrs
imul
cmpsl
add
mov
hlt
pop
test
lea
mov
outsb
cs
mov
sub
cmp
iret
mov
pop
xchg
inc
mov
sub
in
fcoms
push
mov
xchg
sbb
sbb
outsb
aad
jo
sbb
mov
sahf
mov
jle
sub
jo
and
xlat
adc
mov
imul
fimuls
dec
cmpl
fdivr
adc
flds
scas
and
fcomps
dec
cmp
jb
jbe
sbb
mov
movsl
dec
pop
leave
or
inc
sub
in
seta
ret
es
xchg
fcompl
in
push
sub
cmpb
mov
push
jg
cmpsl
dec
sti
sbb
mov
lds
ljmp
movsl
adc
mov
in
cli
popf
pop
lock
orb
mov
fiadds
mov
or
fsubrl
fiaddl
fcmovnb
out
out
mov
push
adc
or
lods
js
add
or
push
jg
mov
jecxz
jecxz
sahf
and
lds
cltd
sub
sti
aas
jns
pop
lea
push
mov
scas
je
jge
pop
xchg
rorl
pushf
cmp
ret
std
pop
pop
xchg
mov
mov
scas
rorl
je
xor
pusha
dec
or
add
jle
lods
jns
test
or
and
repnz
fldl
test
or
in
push
jnp
icebp
popa
lods
addl
fidivl
jecxz
and
sub
out
xchg
icebp
sbb
loop
xchg
push
in
and
nop
lahf
gs
mov
pop
mov
jb
pushf
repnz
or
stos
lods
mov
repnz
mov
leave
lret
fnstcw
mov
addb
shll
jg
int
outsb
jp
out
jbe
out
adc
sub
pop
test
stos
sahf
xlat
mov
stos
pushf
out
in
loopne
enter
sbb
lret
orb
and
jo
xor
shlb
lcallw
lret
js
cmp
mov
or
adc
aas
dec
push
jae
iret
imul
inc
rcrb
push
repnz
mov
int
test
xlat
jno
jmp
jbe
cwtl
fcompl
cwtl
pop
mov
xchg
scas
repz
pop
inc
lret
jne
pop
or
pop
iret
xchg
mov
xchg
loopne
in
xchg
and
xchg
dec
dec
dec
ss
jnp
mov
dec
push
dec
xor
aas
mov
es
and
lds
mov
bound
pop
icebp
cld
lods
aam
sub
lea
sbb
and
dec
mov
mov
push
pop
test
mov
mov
mov
cmp
rorb
jle
cmpsl
jne
seto
xor
and
xchg
inc
test
arpl
insl
cld
mov
int
stos
fistps
addb
das
xor
jecxz
mov
cs
js
mov
jp
sbbb
and
cmp
in
stos
pop
cmp
cltd
outsl
int
aas
adc
adc
into
popa
pop
aas
shrl
mov
pop
cmp
js
xchg
das
xchg
cwtl
and
repnz
lret
lods
scas
cmc
sti
out
jg
push
dec
fisubrs
dec
retw
lea
mov
jle
dec
pusha
lods
fdivrl
or
pop
loop
xchg
adc
ds
push
stos
repz
push
xchg
push
lds
jo
xchg
movsb
ds
xor
shll
lgs
jo
mov
and
pop
nop
test
lock
sbb
sbb
mov
xor
cs
bound
lods
lods
fisttpl
push
pop
cmpsb
cmc
lds
mov
inc
adc
sub
mov
push
sub
jg
pushf
int
jmp
push
inc
stos
fs
mov
xlat
pop
xchg
lret
hlt
dec
out
jp
outsl
pop
lock
out
out
outsl
mov
mov
pop
push
imul
clc
mov
xor
fwait
sbb
stos
in
push
out
sbb
out
test
fimull
std
insl
add
scas
je
es
jg
adc
mov
mov
xor
lret
pop
xchg
js
and
and
out
jo
xchg
mov
cmp
cmp
adc
cmp
jns
cmpsl
iret
sti
xchg
movsl
add
leave
stc
push
push
xor
stos
pushf
sti
jbe
roll
in
mov
mov
dec
cmp
jle
test
push
mov
pop
dec
jmp
push
jl
push
jg
pop
pop
mov
sub
mov
dec
nop
sbb
addr16
fcomps
cmpsb
pop
mov
or
push
cltd
in
ljmp
jae
mov
mov
loop
mov
test
outsl
dec
stos
leave
jno
pop
jnp
fisubs
dec
imul
push
pop
jl
jns
divb
push
les
pop
fbld
sarb
or
gs
xchg
lret
nop
add
jge
inc
lret
pop
xlat
imul
jl
xchg
fldt
sbb
and
loope
in
xchg
das
pop
movsl
pop
int
mov
lahf
je
xchg
into
push
loopne
jg
dec
leave
push
push
xchg
in
cs
dec
push
stos
jns
cwtl
mov
pop
js
imul
in
int
cli
daa
xor
jmp
mov
jns
cmc
sbb
xor
std
ret
cmp
pop
add
jo
dec
psrlq
js
rorl
cmp
fimuls
movsl
mov
push
int
fnstsw
adc
or
and
sub
fucom
and
rclb
fimuls
leave
xchg
jmp
pop
ss
cli
xchg
test
jnp
ljmp
sbb
xor
mov
popf
movsl
and
out
hlt
push
ss
mov
jb
arpl
popa
add
mov
stos
adc
or
fdivl
jmp
push
adcl
repnz
adc
je
pop
shll
insl
aam
into
pop
and
inc
out
mov
adc
push
int3
and
and
mov
xor
and
stc
mov
jg
xor
jle
test
pushf
popa
jns
add
dec
mov
shlb
xorb
push
push
cltd
ds
jmp
aas
mov
enter
aad
sbb
xchg
xor
orl
out
iret
add
movsl
decb
lahf
in
and
mov
mov
ret
fcoml
mov
dec
pop
and
cmp
push
push
and
mov
ds
ss
lcall
fildl
jno
pop
out
loopne
cmp
movsb
mov
pop
add
or
xor
ret
sbb
sub
adcb
aam
push
pop
movsb
ljmp
or
insl
dec
xlat
mov
aas
and
rolb
std
shrb
dec
mov
cmp
or
ja
inc
mov
dec
fcmovnb
popa
cmpsb
popf
push
push
xor
ja
xchg
mov
lahf
sub
push
mov
out
push
cwtl
mov
add
adc
or
add
out
rorl
rorb
lock
stos
cmc
cmp
jbe
test
sbb
push
xchg
dec
rep
sbb
mov
cmpb
push
pop
adc
cld
cmp
sub
test
pop
icebp
mov
jg
push
cmpsl
pop
test
pushf
sbb
sbb
inc
mov
mov
mov
mov
mov
mov
ja
lds
adc
das
mov
jbe
lret
ljmp
mov
xchg
mov
js
push
andl
push
lahf
andl
xchg
mov
sub
mov
add
int3
mov
pop
insb
enter
dec
lea
lock
jmp
loope
cltd
mov
mov
cli
or
ja
orb
push
adc
shll
jae
jno
jl
mov
inc
mov
cli
iret
das
add
rclb
inc
mov
dec
aas
sub
sar
in
rcl
repz
jb
cmc
leave
jne
lods
fnstsw
adc
jnp
and
inc
es
outsb
mov
aam
mov
sahf
inc
pop
jb
jne
aas
pushf
push
andl
mov
fnstsw
push
popf
push
cmpsb
mov
ljmp
repnz
jle
mov
mov
push
insl
jl
cmp
inc
inc
shlb
stc
mov
inc
cmpsl
std
and
stc
pop
aaa
lods
adcl
loop
iret
mov
movsl
jecxz
lahf
mov
pushf
adc
lea
scas
fwait
inc
orb
les
xor
je
push
adc
add
int3
sti
push
inc
xchg
inc
sahf
sarl
adc
mov
movsb
pop
push
out
mov
movsb
and
ret
and
imul
and
repnz
or
ret
jmp
adcb
arpl
dec
decl
inc
push
mov
outsl
mov
sahf
dec
and
dec
leave
in
out
push
xor
sub
cmp
or
mov
mov
dec
push
xchg
mov
push
mov
inc
adc
mov
cwtl
fisubl
and
xor
mov
sbb
inc
or
lods
es
movsb
test
sub
cli
push
xor
and
lods
outsl
sub
adc
or
dec
jo
cmp
lds
inc
add
ja
stc
in
sbb
dec
pusha
mov
mov
xchg
enter
add
mov
push
push
test
inc
push
add
shlb
jecxz
jns
adc
jnp
xor
notb
dec
adc
dec
mov
in
int
pop
iret
jecxz
jbe
dec
enter
loop
push
or
or
dec
rclb
pop
jnp
outsl
push
lcall
mov
lods
inc
int3
sbb
cmp
cmpsb
pop
lock
movsl
jg
sbb
mov
pushf
lret
inc
or
popl
add
fwait
enter
cmp
scas
iret
mov
arpl
psadbw
mov
xchg
movsb
mov
test
dec
out
dec
mov
adc
add
rol
pop
loopne
mov
imul
lea
push
mov
mov
xor
lods
mov
dec
pop
sub
cld
sti
dec
or
aas
jg
pop
cmp
cmp
std
add
movsb
faddl
jne
lret
out
dec
lret
jne
mov
sahf
add
push
fisubl
cwtl
pop
adc
sbb
decl
shl
mov
lahf
pop
mov
mov
pop
movsl
inc
out
fisubrl
pop
loop
xchg
add
cli
aas
xchg
sbb
pop
or
pop
inc
cltd
xchg
fcompl
xor
inc
xchg
jle
sub
in
popf
outsl
fadd
out
mov
jne
xchg
sbbl
sub
push
test
pop
mov
adc
lea
adc
mov
pop
ficoms
fs
subb
or
xchg
mov
lret
mov
out
lods
fldl
mov
aam
lahf
or
jb
ja
addl
scas
hlt
pop
jge
mov
movsb
sub
out
pop
mov
xlat
stos
test
sub
sub
push
nop
mov
ss
inc
arpl
loope
pop
lret
jle
cmp
in
sub
mov
dec
insl
rcr
inc
xchg
xchg
mov
out
adc
repz
addr16
fisubrl
lret
fcoms
cmp
adc
outsb
cld
nop
xchg
rep
ja
and
shll
cmc
fildl
pusha
sbb
fildl
inc
mov
repz
mov
push
lods
xchg
das
pop
xor
rorb
mov
mov
repz
dec
call
call
lock
cmpsl
and
je
imul
fldenv
fcoml
stos
cmp
sbb
push
fidivrs
adc
out
push
xchg
cltd
mov
dec
lahf
push
inc
push
popf
inc
mov
cmp
push
fistps
xchg
or
cmpsb
inc
dec
jecxz
push
xor
mov
mov
jae
scas
mov
inc
sti
cmp
imul
jae
fsubrl
das
mov
rep
add
pop
pop
out
xor
cmpsb
lock
push
mov
pop
push
sbb
xchg
mov
adc
mov
ja
adc
pop
inc
fisubrs
out
mov
adc
jno
cmp
and
lcall
mov
cltd
fucom
mov
popf
subb
rol
shr
in
lods
in
and
cli
stos
or
pop
lock
xchg
aam
or
or
or
jbe
pop
addr16
jle
mov
push
out
mov
dec
lahf
incl
sub
sbb
cmpsl
iret
jl
jmp
xchg
popa
loopne
xor
out
rcrl
es
mov
xchg
ja
testb
movsl
fstl
and
enter
into
jbe
hlt
xor
mov
push
call
scas
dec
pop
xor
aad
repz
insl
jl
push
adc
int
fists
mov
pop
xlat
push
fs
xchg
jno
in
and
push
cmc
popa
mov
cltd
mov
rorl
pop
out
cmp
mov
rclb
jnp
imul
outsl
adc
out
jno
dec
dec
mov
mov
cwtl
mov
add
and
pop
pop
dec
sbb
leave
addr16
ja
cwtl
adc
sub
add
lea
lea
jns
cmpsl
push
pop
lods
push
sub
test
lods
pop
bound
in
add
lock
loopne
add
push
xchg
rcrl
inc
push
cmp
xchg
mov
xor
mov
popf
insl
jae
jae
cwtl
adc
adc
mov
or
ficompl
mov
jmp
xchg
jge
lcall
aaa
dec
lahf
lods
mov
fnsave
repnz
hlt
sti
das
push
xchg
call
loop
push
add
mov
sub
movsb
int3
mov
add
dec
scas
adc
andb
adc
sub
dec
mov
fnsave
sahf
fwait
not
test
sub
jnp
in
inc
adc
jae
xor
ret
mov
cmpb
in
inc
inc
jl
push
push
push
cmpsb
sbb
mov
in
div
cwtl
push
movsl
mov
mov
scas
xor
lds
sbb
ss
aaa
jns
pop
inc
insl
dec
dec
xchg
jle
jl
xor
xchg
lods
adcl
xor
jp
xchg
daa
mov
aam
mov
add
daa
into
adc
mov
nopl
cld
fldenv
inc
cltd
shrb
in
pushf
lock
lock
dec
dec
sub
sar
icebp
imul
add
dec
pop
ficoml
call
mov
xor
hlt
lahf
outsl
sbb
mov
test
testb
add
xor
add
out
or
flds
divb
xchg
jmp
push
fstps
jecxz
xor
pop
xchg
jge
add
cmc
pop
dec
add
lock
cmpsb
outsl
mov
cs
dec
test
aam
lock
push
pop
mov
out
sub
ja
popf
mov
jns
lock
sub
add
outsl
repnz
rol
jl
roll
add
in
negb
shll
mov
stos
stos
hlt
sarb
lret
mov
cmovne
adcl
fcmovbe
mov
lods
cmp
aaa
and
inc
jb
push
hlt
and
ljmp
sub
fcompl
add
jnp
pop
data16
mov
cmp
dec
dec
cltd
int
out
rcrl
mov
xchg
mov
xor
add
mov
xchg
ja
or
push
lret
mov
fidivrl
pop
cmp
test
aam
mov
xor
inc
bound
test
iret
cmp
ja
iret
jp
jo
add
or
nop
or
jp
fldl2e
lods
mov
andb
and
pushf
inc
push
mov
sub
and
in
cmp
dec
sub
scas
fs
mov
xlat
push
jle
scas
xor
ret
in
mov
ss
push
mov
or
xchg
mov
faddl
hlt
int3
call
adc
xor
gs
mov
ds
in
push
rcrb
mov
cmp
and
mov
push
je
add
xor
inc
pushf
out
imul
lods
cltd
and
fcompl
sbbl
fisubl
and
cltd
call
dec
xchg
xor
and
lock
in
les
cmc
pop
les
in
sar
inc
in
ret
cmpsl
adc
inc
rcrw
mov
mov
jge
stc
dec
outsl
jge,pt
sub
cmpsl
sbb
lret
test
in
dec
xchg
xchg
out
loope
dec
sbb
mov
mov
mov
add
mov
test
imull
sbb
pop
ljmp
sahf
lods
addb
arpl
mov
imul
xor
ds
movsl
data16
ss
into
out
xchg
sub
inc
clc
aas
adc
lret
scas
int3
cmpsl
repz
flds
push
xor
mov
push
bound
xchg
lret
stos
sub
sub
arpl
pop
lods
or
cli
adc
test
jbe
gs
jecxz
notl
or
mov
mov
ret
xor
loopne
sub
pop
in
or
push
adc
ss
js
ret
or
push
pop
xor
push
pop
je
add
add
jb
orl
xchg
jle
js
lea
sbb
and
add
fs
mov
cmpsl
cmp
inc
gs
lcall
mov
das
repnz
rolb
into
outsl
notl
cmc
ds
pop
mov
pop
sbb
test
mov
adc
fwait
andl
push
aas
fwait
xchg
or
mov
adc
lret
pop
jno
rcll
rclb
xor
stos
pop
daa
ljmp
into
imul
nop
add
stos
jnp
cs
js
mov
test
adc
push
pop
sbb
clc
add
faddl
dec
jns
push
loope
out
pop
xchg
push
paddq
mov
testl
sbb
push
xchg
or
cmp
and
ljmp
dec
jno
push
xchg
aas
push
mov
jb
aas
inc
sbb
sbb
jns
sbb
daa
jge
arpl
inc
add
popa
fs
sbb
mov
pop
shll
or
mov
xchg
or
push
in
add
fwait
dec
xchg
clc
fnsave
outsl
addr16
sbbb
mov
test
dec
mov
xor
sbb
xchg
sbb
mov
scas
push
xchg
cmp
std
push
insb
addr16
test
jg
test
mov
lcall
cli
and
inc
arpl
and
cld
xlat
pusha
push
rcrb
es
aaa
fmuls
sbb
xor
push
push
ret
jo
loope
push
xchg
aam
arpl
data16
mov
or
pop
loope
hlt
divb
push
push
cmp
stos
xchg
and
dec
mov
pop
mov
lea
aas
fs
cli
out
push
out
ljmp
push
dec
adc
cld
jecxz
sub
mov
dec
les
mov
push
test
pushl
sbb
add
xchg
mov
push
add
xchg
cmp
out
sub
fcmovnb
sbb
sar
inc
lret
lods
scas
xor
out
jo
and
cmp
outsb
pop
dec
cwtl
inc
add
or
mov
fs
mov
and
lret
xchg
xchg
lret
stos
jns
pushf
sbb
and
mov
js
xchg
out
and
scas
subb
test
jp
dec
dec
jo
movsb
andb
repnz
out
lods
imul
shl
inc
jo
cmp
sub
std
into
stc
loopne
cmc
loopne
pop
mov
lahf
mov
jmp
cmp
je
stos
cmp
daa
dec
jg
dec
pusha
addr16
cmpsl
inc
mov
popf
dec
shlb
mov
in
popf
insb
data16
iret
mov
gs
xchg
jp
add
cwtl
popa
clc
loop
ljmp
xor
mov
sbb
loope
aaa
sub
rcll
jg,pn
cmp
jg
fwait
and
mull
mov
and
lods
lahf
xchg
shrl
stos
call
bound
leave
ja
pop
push
aaa
jns
mov
inc
sbb
sub
out
lods
mov
pop
jne
mov
sbb
sub
repnz
cmp
loop
ljmp
adc
inc
add
xchg
aas
push
adc
psubw
mov
inc
ss
dec
sbb
sti
or
sbb
mov
xchg
mov
cli
cmp
enter
cmp
sbb
sbb
pop
xchg
sbb
shll
fwait
out
clc
lcall
fs
in
sub
js
adc
and
mov
inc
mov
roll
mov
iretw
sbb
sbb
cmp
sbb
pop
dec
pop
sbb
push
test
lret
mov
xor
add
sbb
mov
sbb
shrb
scas
adc
or
repnz
test
andb
inc
lods
jae
enter
jg
mov
push
pop
pop
add
dec
pop
es
pop
mov
xor
add
mov
or
cld
xchg
xchg
aaa
or
pop
jmp
or
pop
add
xor
and
movsb
mov
mov
fidivs
stos
fwait
inc
mov
mov
and
pop
or
add
add
icebp
scas
xchg
pop
xchg
jns
ret
test
jmp
add
pop
and
aad
in
jmp
mov
fldt
repnz
xchg
test
cmp
negl
and
imul
push
adc
imul
pop
jle
add
jbe
ss
add
stc
fidivs
and
rcl
sbb
lret
mov
add
mov
ljmp
sub
sbb
in
testb
aad
leave
nop
add
pop
mov
adc
lds
xchg
pusha
xor
sub
adc
sbb
jle
push
jnp
adc
dec
jnp
clc
aaa
xchg
int3
push
xchg
jbe
pop
mov
ror
cmp
xor
mov
and
inc
and
sub
cltd
aaa
xor
jl
sub
idivb
aad
das
test
aam
rorl
sbb
inc
sbb
push
out
cmp
adc
or
fmul
mov
add
push
mov
dec
jmp
push
lods
repz
lret
imul
add
xlat
xor
movsb
insb
xor
inc
add
and
pushf
push
sbb
mov
clc
jg
into
outsb
xchg
jb
lahf
shlb
mov
or
lahf
lret
lods
leave
movsb
scas
rorl
shrb
cmc
fbld
test
roll
movsl
rcll
out
jmp
scas
in
test
xchg
jmp
add
or
addr16
popa
xchg
add
pusha
aam
cmp
aam
jecxz
mov
pop
nop
push
and
fldz
or
insb
sbb
xchg
cmp
fdiv
dec
push
adc
mov
dec
xor
lret
or
call
push
mov
cli
cld
sbb
stos
fsubr
popf
popa
inc
mov
xchg
rcr
loope
pop
cmp
ret
jb
iret
das
cltd
ds
in
rcrb
loope
push
cmp
shrl
push
or
inc
and
aas
or
cmp
sahf
cli
adc
dec
rorb
sub
orl
test
mov
xor
push
mov
jbe
cmp
cmp
out
mov
out
sub
sarl
pop
scas
iret
jl
mov
sub
rcr
pop
test
scas
sbb
mov
in
mov
adcb
pusha
data16
xlat
lods
mov
add
cltd
ret
scas
adc
repnz
jge
sbb
ret
orb
add
fmull
push
sbb
in
loope
or
jb
cmpsl
loop
icebp
xlat
in
fbld
cli
xor
cmp
pop
mov
bound
mov
aad
lret
add
cmp
xor
push
or
pop
in
sub
dec
jo
aam
jae
in
pavgb
les
inc
push
pop
cli
or
in
loopne
or
je
and
cmp
fisubl
sub
cmp
cs
into
ja
pop
cli
pop
int3
sub
jecxz
mov
rcll
pop
mov
clc
dec
pop
test
int
ficoms
out
jge
pop
iret
adc
frstor
clc
xor
or
out
lods
bswap
cmpl
mov
inc
call
inc
lods
lret
push
ret
test
and
xchg
test
jae
jae
mov
ja
add
dec
and
inc
outsl
xchg
insl
sbb
push
lret
push
subl
scas
movsl
fwait
insl
pop
xor
xor
jg
sbb
out
xor
inc
scas
outsl
add
sub
push
pop
movsl
insb
fistps
jmp
jmp
pop
mov
and
cltd
mov
gs
test
mov
cmp
add
cmp
scas
xlat
xchg
xchg
rcrl
add
xchg
add
jmp
mov
out
subb
mov
cmc
dec
or
and
jp
lea
rcl
dec
lods
and
and
addr16
mov
lcall
iret
jne
in
dec
movsl
sbb
movsl
lds
out
mov
mov
fistps
sti
inc
mov
repz
f2xm1
clc
outsb
in
mov
into
lods
gs
dec
xor
jns
int
mulb
inc
and
push
jmp
sbbb
cltd
and
bound
jge
sarb
push
jne
mov
imul
lret
pop
dec
xor
jbe
fs
mov
sub
rorl
je
inc
push
xor
sub
int
inc
mov
sbb
pop
and
pop
out
lods
sub
fistl
push
adc
jnp
outsl
cmpsl
mov
add
arpl
in
push
dec
lods
adc
lods
mov
ljmp
mov
cmpsb
sub
sub
inc
loop
push
pop
inc
lds
or
scas
add
fstpt
out
sbb
mov
xchg
ja
and
pop
rorl
dec
xchg
test
mov
mov
inc
mov
add
addr16
adc
je
adc
in
nop
mov
rorb
pop
jne
gs
lret
aad
push
es
push
sub
test
push
mov
loopne
add
sbb
adc
push
mov
je
in
test
xor
push
mull
xorl
repnz
in
pop
add
sub
cmp
shrl
sub
inc
scas
push
bound
pop
iret
sbbl
and
out
in
lock
push
sbb
imul
mov
add
adc
inc
imul
loopne
jb
adc
inc
in
ja
mov
outsb
add
push
cld
imul
aad
and
and
and
cmovge
negb
stos
sbb
xor
fmuls
jp
and
rorl
data16
dec
dec
and
mov
mov
xchg
push
std
subb
jae
mov
adc
es
dec
xchg
cmp
dec
inc
jae
jge
dec
adc
movsb
and
cs
dec
inc
inc
in
dec
sub
cli
and
in
in
in
pop
test
outsl
iret
out
mov
pop
xor
xchg
push
div
scas
fwait
xor
xor
cli
fmuls
repnz
or
inc
lea
inc
movsl
mov
xchg
mov
cmc
cld
jle
cli
mov
cli
lock
mov
pop
jecxz
mov
and
sahf
fs
mov
inc
sbb
fwait
or
adc
cmp
pop
inc
cmpsl
into
mov
xlat
out
cld
fwait
pop
insl
add
sub
xchg
iret
imul
add
in
imul
cmp
mov
les
sti
scas
push
pop
dec
out
pushf
imul
neg
xchg
dec
pop
call
or
and
pop
cmp
jo
sub
sar
out
movsl
fwait
pop
pop
lahf
je
push
test
push
mov
bound
test
in
outsl
xchg
shrl
and
add
add
gs
ja
xchg
or
loope
add
xchg
call
int
jmp
jmp
lcall
std
mov
xchg
lahf
fcmovne
lock
movsl
inc
xlat
dec
or
sub
nop
nop
mov
mov
cmp
xchg
sbb
icebp
rorl
lcall
adc
sarb
lret
jge
xchg
pop
mov
out
adc
dec
shrb
test
push
inc
movsb
jnp
pop
sub
push
dec
imul
cltd
cmpsl
jne
push
fsub
fnstsw
mov
clc
mov
shl
and
mov
cld
add
or
aas
les
pushf
fdivrs
testb
fldcw
ret
aas
incl
sub
cmpsb
jbe
test
dec
mov
push
xor
adc
jmp
mov
and
cmp
and
int
jne
movsb
daa
shll
push
mov
rorb
out
test
dec
in
cmpsl
mov
lods
js
and
mov
fdivs
clc
xlat
es
pop
inc
aam
jnp
jae
ret
orl
filds
int
rcr
jae
inc
push
pop
push
aaa
xor
jecxz
pop
add
cmp
std
stc
js
ffreep
push
xchg
rcrb
dec
fnstsw
push
cs
aam
xchg
push
imul
jle
enter
sub
insb
clc
mov
or
hlt
cmp
mov
mov
stos
cmc
dec
xor
xor
lea
test
test
fistpll
mov
sub
xlat
out
mov
xchg
xchg
bound
jno
jmp
pop
adc
mov
xor
daa
fstps
fistpll
and
shll
jno
push
cmp
test
jnp
push
jne
dec
sbb
jge
mov
lock
out
pop
outsb
push
sar
stc
push
andl
xchg
xchg
inc
xor
in
pop
sbb
mov
cmp
jnp
adc
pop
or
loopne
loopne
jge
jle
jno
push
fidivl
cltd
insl
mov
push
mov
sbb
jne
in
adc
xchg
or
sbb
pop
cmp
jno
fwait
jecxz
or
aas
xchg
pop
lret
ss
and
xchg
fldenv
sbb
or
sbb
and
sbb
aas
scas
mov
mov
jb
test
push
lret
xor
xor
push
push
out
and
inc
dec
xor
arpl
scas
inc
or
repz
or
ret
xorl
xchg
jnp
test
push
dec
mov
outsb
int3
into
cmc
out
lea
cwtl
test
mov
scas
mov
adc
sbb
push
pusha
xor
pop
dec
repnz
insb
dec
xchg
or
shl
sbb
xor
xor
jg
xchg
mov
loop
and
dec
cli
sbb
fldl
mov
sub
sarb
test
mov
inc
jb
sbb
add
jns
cld
ds
or
fildl
icebp
inc
xor
stos
in
lods
mov
lea
popa
cmpsb
xor
or
stos
sbb
add
adc
in
jb
arpl
sub
ss
shlb
or
lods
fldl
pop
cld
cmc
add
cmpl
adc
pop
sbb
movb
in
fs
roll
dec
pop
fisttpl
ret
jb
mov
add
shrl
push
in
push
push
lods
scas
out
int
stos
fxch
mov
adc
or
in
inc
xchg
in
pop
xchg
aas
mov
mov
jle
mov
and
in
scas
sub
xchg
add
je
mov
mov
mov
insl
movsl
lock
lret
sub
cmpsl
push
out
ds
fsts
test
jp
cmc
add
inc
lcall
push
jnp
movsl
pop
cli
push
lret
sbb
shll
mov
sbb
iret
or
aad
in
jmp
js
inc
outsl
loopne
shrl
jno
cmp
inc
dec
mov
sbb
mov
adc
aam
lahf
xchg
and
iret
lods
lock
lahf
and
inc
roll
cmp
jnp
lcall
lret
fs
loopne
xor
and
push
cmc
mov
add
jg
popf
int3
push
fcoml
enter
push
add
lods
push
mov
jmp
outsl
or
lret
mov
adc
add
cli
push
inc
cmc
loope
lret
jg
ljmp
aad
mov
loope
es
or
add
mov
and
je
insb
jns
call
cmp
mov
sti
jl
add
cmp
dec
xor
fcomp
jae
cmc
enter
xchg
jl
jns
arpl
test
sbb
sbb
clc
popa
rcr
push
stos
push
push
lcall
adc
insl
addr16
hlt
or
adc
add
notl
outsb
repnz
scas
jge
mov
jo
sbb
nop
mov
jl
dec
sub
stos
xor
lret
pop
mov
scas
stc
iret
sub
xchg
cs
xchg
cmp
cmp
add
push
dec
scas
cmc
mov
adc
jnp
fdivs
cli
sub
jecxz
push
pusha
icebp
mov
pop
mov
sbb
jecxz
mov
inc
loopne
adcl
out
jo
vpmacsdqh
mov
sbb
and
push
mov
add
mov
repnz
sub
push
cmpsl
icebp
rep
add
push
cwtl
mov
or
sti
jmp
inc
xor
fadds
xchg
mov
shlb
inc
sti
jno
push
aam
mov
dec
lcall
repz
xor
jmp
push
bound
cmp
out
push
jecxz
in
call
adc
add
mov
lods
mov
je
dec
mov
or
outsl
cmc
sahf
or
xchg
pusha
inc
dec
dec
rclb
js
jge
enter
pop
sti
sub
in
sarl
xchg
sahf
jecxz
push
push
xchg
movsl
in
arpl
int
mov
enter
mov
jnp
addr16
nop
jge
mov
xlat
pop
add
adc
push
mov
hlt
or
mov
or
test
inc
sti
and
pop
inc
jo
push
or
jno
mov
in
xchg
cmc
inc
cmp
pop
push
stos
stos
test
ss
shl
aaa
ret
fmul
and
sbb
mov
pop
enter
pop
repnz
insb
movsb
and
lods
stos
loope
push
xor
scas
xor
and
add
std
lods
dec
and
sub
das
pop
addr16
aam
jb
jle
sub
mov
xchg
mov
sbb
orl
sub
lret
mov
addr16
xchg
loopne
mov
xchg
int
sarl
mov
hlt
xor
xor
rclb
inc
addr16
mov
movl
stos
in
stos
faddl
xchg
loope
or
in
movsl
mov
out
cmpsb
xor
dec
xor
mov
jp
stos
adc
sbb
ds
movsl
and
and
into
sbb
xchg
sub
fidivs
gs
movsb
fucomip
incb
es
inc
push
mov
push
lds
xchg
clc
stos
mov
loopne,pn
sub
dec
adc
add
add
inc
ficoml
and
or
inc
cmp
pop
loop
mov
mov
mov
jmp
test
inc
or
sub
dec
xchg
repz
lods
aam
pop
out
pop
pop
xchg
pop
int3
cli
jg
xchg
xorl
sahf
lock
mov
sbbb
iret
xchg
mov
dec
xchg
mov
add
jb
pop
ret
mov
mov
pop
aas
cld
xor
ss
fdivl
sub
sbb
cs
and
and
orl
push
adc
icebp
push
mov
icebp
int
and
jbe
jmp
cli
movb
add
movsl
sti
js
inc
sub
cmpsl
adcl
movsl
jo
daa
sbb
add
cmpsb
mov
ret
jb
dec
dec
dec
popa
xchg
and
lret
add
push
sarb
xor
test
dec
pop
out
loope
std
push
frstor
jo
add
loope
leave
sub
and
mov
push
sbb
jb
sub
adc
sbb
sub
inc
push
dec
pop
add
aad
daa
aas
push
pop
into
mov
insl
shl
pop
jbe
ficomps
and
ss
into
lds
xchg
dec
jae
rolb
adc
pop
pusha
adc
out
outsl
add
int3
out
mov
jbe
lahf
repz
ret
cmc
xor
aam
sbb
mov
test
mov
cmpsb
leave
adc
aad
push
in
cmp
loope
rcrl
pop
xchg
lret
push
inc
cmp
jae
aad
mov
mov
ds
jg
mov
cli
imul
or
xlat
ja
push
int3
clc
sub
pop
rorl
jbe
clc
mov
ja
mov
mov
imul
or
orl
nop
sub
test
jnp
push
inc
xlat
cwtl
ss
cmp
dec
mov
repnz
xchg
out
xor
jnp
aad
fldcw
dec
mov
sahf
mov
sub
push
in
mov
not
mov
lea
xor
cli
inc
push
jecxz
add
mov
jmp
jnp
rcrb
push
test
ret
mov
out
mov
inc
stos
push
dec
repz
stos
add
sbbb
xchg
daa
mov
addb
ret
into
push
mov
orl
cmc
iret
mov
and
xor
or
push
dec
out
xor
pop
mov
adc
int3
insb
push
scas
xlat
clc
das
ret
loop
ss
dec
imul
dec
fs
and
inc
or
arpl
aaa
xchg
xchg
sbb
push
lods
cmp
out
xor
inc
cvtps2pd
in
or
sbb
jmp
sbb
imul
push
sbb
aad
xchg
mov
sub
gs
leave
jp
pop
fidivs
pop
cli
out
mov
je
call
das
hlt
aaa
imul
add
dec
mov
adc
enter
xchg
mov
dec
sahf
push
fs
dec
jno
jb
or
push
loope
mov
mov
outsl
push
aam
loop
inc
shrl
jmp
in
in
sbb
enter
push
repnz
mov
dec
mov
insl
adc
xor
ret
jns
out
adc
cmpsl
cltd
or
or
mov
mov
mov
pop
std
cmp
popf
bound
test
jge
push
mov
push
lock
insb
out
mov
mov
dec
dec
sub
xor
fdivrs
dec
inc
stos
lods
mov
cltd
out
insl
dec
hlt
sbb
aam
mov
jns
sbb
lahf
mov
lock
pushf
fdivs
iret
add
mov
sbb
xor
cmc
cmp
mov
into
or
mov
and
iret
mov
test
imul
cmc
jno
shlb
mov
shrb
ljmp
mov
lret
and
or
cmp
fdiv
pop
into
mov
jno
sbb
subb
pop
ljmp
pop
sub
sub
mov
aas
mov
jg
add
aad
push
jle
cmp
das
loopne
in
mov
icebp
in
and
pop
int3
js
push
inc
lods
sbb
sarl
pop
adc
xchg
fcmovne
mov
jne
sub
int3
test
xchg
jg
mov
addr16
push
xor
xor
xorl
pushf
push
mov
fidivl
aas
adc
sahf
push
popa
or
jae
inc
mov
and
pop
ret
push
ljmp
sbb
push
dec
mov
mov
adc
cmp
sbb
mov
mov
mov
xchg
enter
imul
outsl
fisttps
add
mov
push
xorb
outsb
lret
add
adc
xor
or
mov
in
xor
loop
xchg
adc
repnz
push
inc
push
cmpsb
jbe
cld
aaa
push
sub
pop
pop
call
mov
mov
sahf
sti
arpl
sub
filds
insb
adc
lret
mov
add
es
in
mov
mov
icebp
push
push
popf
cmpsl
push
sub
ficoml
mov
imul
or
popa
inc
inc
pop
enter
jns
sar
cmp
arpl
sub
stos
add
add
pop
stc
cld
jmp
jg
lds
dec
push
nop
imulb
dec
or
int3
add
leave
popf
pusha
xor
sub
std
pop
xor
dec
imul
leave
mov
mov
das
mov
scas
repnz
jle
cmp
jecxz
mov
bound
lods
xor
mov
fldl
sub
dec
je
and
imul
cmp
jmp
push
stc
bnd
pop
popf
aad
add
mov
loop
cmp
mov
mov
cmp
add
adc
sub
jl
mov
mov
and
inc
and
sub
pop
and
mov
sub
inc
xorb
push
aaa
test
fs
out
cmp
fsubl
andl
jmp
and
jns
jbe
inc
arpl
icebp
adc
and
es
and
pop
sbb
and
movsb
mov
int3
mov
test
dec
dec
mov
mov
and
mov
scas
pop
sbb
inc
inc
in
ret
xor
cmp
lods
out
inc
dec
push
mov
bnd
push
or
mov
xchg
push
inc
int
add
jle
scas
loopne
or
out
or
push
dec
test
mov
call
fdivs
push
iret
cmp
das
xchg
outsb
inc
mov
mov
and
iret
mul
mov
push
pop
sub
xchg
push
pop
jle
das
add
mov
pop
test
ror
filds
pop
maskmovq
mov
fisubrs
dec
xchg
sahf
into
cli
shlb
inc
or
xchg
sbb
test
sbb
repnz
push
test
push
in
sbb
jle
ss
mov
mov
fstps
sub
dec
pop
adcb
js
mov
jp
imul
into
neg
out
push
sbb
fidivrs
and
pop
rcrb
loop
mov
adc
mov
aaa
mov
cltd
mov
push
dec
add
lods
dec
loopne
stos
xlat
push
mov
pop
mov
mov
out
jne
xor
sbbl
and
sbb
aaa
xchg
rclb
cwtl
inc
mov
sbb
ss
add
sub
stos
or
addr16
movsl
enter
jns
sbb
cltd
shlb
push
sbb
lret
add
sbb
xchg
iret
pop
push
rcrl
xchg
popa
mov
dec
aad
ds
out
sbb
pop
lods
mov
or
add
push
mov
mov
or
mov
movsb
dec
rcll
aaa
rorl
mov
imul
fwait
xchg
pop
in
or
cwtl
and
mov
inc
das
dec
nopl
cmp
pop
xchg
pop
inc
adcl
inc
push
push
adc
add
mov
sub
or
jmp
add
lret
jmp
push
xchg
pop
aas
or
pop
xchg
or
xchg
inc
sub
outsl
push
movsl
mov
mov
sti
xchg
xchg
cld
add
imul
js
cli
inc
and
fidivs
mov
push
mov
pop
movsl
pop
test
cmpsl
insl
jno
aad
push
shrb
call
cmp
int3
out
mov
loop
int
push
mov
loope
mov
jae
shlb
adc
xchg
or
pop
sti
fcmovb
xor
pop
cltd
xchg
mov
mov
out
cs
sub
mov
lret
insb
xor
icebp
or
fwait
ret
mov
loope
pop
dec
pushf
mov
insl
inc
mov
rcll
fsts
jl
mov
add
push
jecxz
sbb
push
sub
jnp
in
clc
inc
dec
adc
add
ss
testb
sub
lea
mov
mov
adc
pop
rorl
mov
lahf
out
and
sub
jp
push
inc
inc
adc
cwtl
dec
mov
pop
ljmp
movsb
movsl
sbb
pop
movsb
out
jns
mov
xchg
jg
outsl
mov
aam
cmp
pushf
mov
dec
mov
inc
mov
mov
add
cmp
or
lods
jge
pop
push
cmp
mov
xor
mov
xchg
addr16
insl
repnz
popa
jo
push
lret
jo
push
sbb
sub
mov
cld
scas
ss
xor
mov
dec
cmp
cltd
fwait
ljmp
mov
je
sahf
pop
je
mov
call
cs
insb
inc
cmp
pusha
out
xlat
cmc
add
jno
xlat
loop
mov
cmp
add
cmp
imul
inc
loope
cltd
test
dec
shrb
pop
cmpsl
shll
sbb
mov
jp
scas
sarb
push
repz
dec
inc
jns
cmpsl
xor
pop
mov
or
dec
notl
push
push
iret
test
gs
sub
push
add
rolb
orl
out
xor
and
cmp
cltd
movsl
incb
add
add
mov
pop
lods
push
daa
pop
adcl
scas
xor
sbb
nop
inc
and
sbb
sub
dec
xchg
xchg
sbb
fcoml
cli
test
stc
push
mov
pop
jne
jae
push
shr
or
ljmp
push
jg
inc
xor
fiadds
inc
aam
movsb
jle
push
sbb
pop
cmpsb
aaa
sub
mov
mov
fsubs
or
lock
loopne
mov
jle
cmp
popf
pop
xor
xor
xorb
xchg
cmp
stos
data16
lods
jnp
scas
dec
fcomps
leave
divl
loope
mov
addr16
aas
jmp
test
dec
clc
movsb
cmp
sub
push
div
pop
in
mov
daa
outsb
mov
leave
jp
outsb
mov
cmp
mov
les
insb
stos
sbb
repz
sbb
scas
mov
lahf
out
lods
jp
testb
jns
fnstcw
imul
xor
int3
lea
add
pop
stos
mov
ret
and
stos
push
pusha
fists
pop
adc
lods
or
adc
jae
movsb
sbb
adc
add
cmpl
ficompl
cld
xor
pop
lret
aad
in
sbb
xchg
ret
jmp
sbb
in
push
pop
or
or
jb
iret
xor
into
negl
insb
mov
stos
test
or
lods
in
outsl
xlat
ret
jbe
popf
fistpll
or
mov
lahf
insl
mov
add
test
xchg
mov
movsl
add
loop
push
fmuls
outsl
dec
fs
mov
sbb
test
mov
das
pop
fistl
cmpsb
push
aam
jo
pop
jl
and
mov
cs
call
loop
xchg
push
mov
sub
mov
push
pushf
xchg
inc
fnstenv
pusha
shrl
xchg
cmp
dec
jp
sub
andl
sbb
clc
adc
lea
div
dec
idivl
subb
test
movsb
clc
orb
jae
lcall
xchg
rcr
add
push
ljmp
cmpb
neg
sbb
cli
add
loopne
mov
mov
inc
cmp
outsl
jnp
lcall
sub
in
iret
in
pop
orl
push
lock
cli
mov
icebp
xor
pop
mov
adc
inc
daa
mov
xchg
jg,pt
add
dec
fldenv
jo
pop
jp
nop
insl
adc
outsb
divb
insl
push
jl
xchg
pusha
mov
sbb
es
leave
dec
fwait
loope
add
pop
xchg
fbld
xchg
cmp
mov
shl
cmp
pop
or
sub
out
subb
test
xchg
mov
sahf
popl
mov
xchg
sub
leave
mov
into
add
lret
dec
ret
sbb
mov
pop
cmp
jne
jecxz
xchg
mov
int
cmp
pusha
cmp
fldt
add
icebp
jb
movsb
lahf
push
sub
scas
sbb
int3
mov
cwtl
adc
push
vsqrtsd
xchg
dec
mov
inc
jge
stc
in
popf
nop
and
push
imulb
lret
sbb
dec
mov
es
jge
mov
fstcw
scas
jl
push
jp
loope
mov
ljmp
pop
fcmovnu
repnz
pop
xlat
sub
ds
popfw
icebp
stc
cld
jno
pop
fwait
lret
cli
jne
lret
cmp
mov
test
movsb
jae
pop
or
push
dec
and
dec
mov
adc
scas
out
jbe
popa
pusha
cmp
aas
cli
adc
jne
push
mov
jae
mov
out
movsl
imul
pop
outsb
jmp
nop
shrl
jp
pop
pop
xor
mov
out
loope
mov
add
out
adc
test
mov
out
mov
pop
push
mov
movsl
repz
xchg
das
inc
cmc
ljmp
mov
cs
aad
ja
scas
aas
je
or
daa
xchg
cltd
out
jmp
nop
negl
sbb
dec
scas
shll
dec
lock
out
lds
jmp
dec
lret
mov
xchg
mull
repz
xor
mov
imul
iret
cs
les
hlt
rcll
shll
movsl
jmp
cmp
and
test
bound
mov
mov
and
loope
cli
push
aas
rcrb
dec
mov
pop
out
mov
call
hlt
bound
test
cmp
xchg
test
data16
dec
lods
fstpl
sbb
sub
add
dec
inc
dec
loop
adc
leave
vpsubq
mov
icebp
pop
imul
repz
shll
gs
push
mov
inc
xor
cmpsb
in
fildll
cmpsl
xchg
adc
fs
pop
xchg
fwait
in
fidivl
sub
stos
jmp
ud0
std
cmpsl
leave
xor
int3
ja
pop
jb
jmp
aas
mov
push
enter
and
jae
pop
push
fcoml
push
jge
push
int
add
test
mov
xor
xchg
dec
movsl
cld
repnz
lods
in
lea
sbb
push
mov
push
test
and
cmpsl
lea
jp
stc
cltd
mov
mov
data16
ja
xchg
dec
xchg
or
or
loopne
clc
pop
dec
mov
sahf
mov
push
pushl
test
fisubl
and
jo
fildll
sarl
xor
lcall
js
ljmp
notl
daa
sbb
inc
int
xlat
jle
sub
bound
outsb
mov
test
gs
mov
or
sbb
out
mov
int3
add
mov
pop
mov
cmpsl
lahf
pop
cli
push
xor
xor
ss
pop
cmpsl
imulb
add
repz
xor
push
or
add
ljmp
cmp
fidivl
dec
mov
mov
push
cs
push
aam
lods
in
jmp
mov
gs
arpl
into
lods
lds
rol
js
pusha
jge
call
jecxz
stos
fcompl
in
mov
cmpsb
outsl
push
faddl
and
frstor
mov
push
pop
adc
lods
jns
scas
cmpsb
jp
cwtl
adc
int
jb
mov
push
and
or
dec
test
jmp
sbb
or
push
mov
adc
repnz
aam
les
push
push
fwait
idiv
repz
stos
leave
cmc
inc
test
pop
pop
in
and
loopne
cwtl
xchg
dec
out
inc
lds
punpcklbw
adcb
imul
into
es
xchg
mov
das
sbb
cmp
mov
inc
xchg
das
lods
cmp
fisttpl
lods
push
ds
test
daa
mov
stc
imulb
aas
ss
out
add
add
jmp
mov
fadds
not
outsl
das
push
push
sbb
dec
nop
bound
dec
es
cmc
dec
into
ss
mov
fsubrl
inc
imul
and
lret
lods
pop
lahf
imul
push
incl
outsl
hlt
insb
sbb
sti
or
add
dec
inc
jg
mov
sbbl
mov
leave
sti
push
cmp
push
nop
push
or
adc
sub
and
pop
notl
add
sbb
stos
test
jl
jbe
sbb
and
mov
adc
insb
adc
xor
hlt
mov
call
adc
xor
int
adc
push
std
adc
add
inc
or
cmp
fimull
lret
negl
ds
icebp
jbe
shr
adc
mov
leave
add
cld
adc
xor
jne
aaa
pushf
in
test
addr16
and
xlat
fidivrl
jg
pop
dec
rcr
std
icebp
dec
sbb
call
pop
int3
jl
stos
cmp
test
jmp
iret
popa
mov
orb
fs
hlt
sub
push
add
mov
mov
sti
adcl
out
push
mov
xor
jno
xchg
ficoml
ss
std
stc
or
mov
sub
cli
pushl
cld
sub
cmpsl
std
sub
xlat
and
aaa
jl
push
popa
mov
jmp
xchg
sahf
add
jge
stos
testl
leave
cli
js
in
cmpsl
push
cmp
mov
push
jl
mov
pop
sub
xor
add
mov
enter
pop
std
fsubrl
outsl
mov
mov
loope
mov
cltd
inc
mov
xchg
das
mov
mov
fcoml
sbb
adc
popa
pusha
jg
pushl
mov
repz
push
es
out
push
bound
dec
push
les
xor
test
pop
movsl
stos
les
dec
shll
and
mov
push
xor
mov
push
mov
cwtl
inc
jge
ret
inc
shrb
or
xchg
mov
dec
dec
or
xchg
dec
add
call
mov
sub
jp
push
in
call
xlat
adc
pop
cmp
dec
xchg
or
mov
int3
cmpsl
inc
adc
mov
dec
dec
push
stc
xchg
fisubl
mov
xchg
sbb
dec
cwtl
mov
mov
cmp
popa
xor
fwait
aas
adc
jl
in
jo
lahf
out
xchg
push
inc
jnp
sbb
fidivrl
mov
push
outsb
xor
das
popf
in
out
negl
lcall
xor
dec
push
scas
inc
push
mov
fs
les
je
xor
ret
jne
into
stc
inc
jnp
inc
xlat
inc
mov
sbb
push
lret
push
pop
jge
and
repnz
adc
mov
xor
ret
mov
ret
cmp
scas
lods
mov
cmp
fcmovbe
dec
mov
push
jns
sbb
scas
dec
outsb
mov
xor
mov
cmp
repnz
stc
pop
push
lret
jnp
add
add
outsl
pop
ret
insb
mov
jno
mov
ficoms
enter
pop
movsl
jns
ljmp
xchg
mov
lods
ljmp
nop
fdivrl
mov
in
mov
adc
mov
aaa
mov
fcoms
and
add
inc
xchg
xchg
mov
inc
dec
mov
cmp
cmp
adc
mov
pop
dec
jle
lds
sbb
pop
mov
orb
pop
jmp
into
ficoml
xchg
xchg
xchg
push
pop
adc
xor
adc
cmp
aaa
mov
xor
data16
pushl
mov
inc
sarb
fsubrs
mov
mov
xchg
outsl
mov
aaa
rcl
jne
mov
fdivr
add
add
add
fucomip
jns
aad
mov
fstl
jmp
arpl
movsb
mov
orl
ret
shll
mov
add
les
jb
das
fwait
mov
in
fsubl
mov
mov
or
and
loope
je
fsubl
jge
xor
inc
nop
aam
fdivl
jbe
cs
jp
cmp
mov
inc
adcl
orb
js
pop
xor
test
stc
outsl
mov
out
jge
ret
repnz
repz
and
jmp
mov
sbb
jo
inc
mov
mov
xchg
movsl
xchg
pop
insb
and
adc
stos
adcb
mov
mov
pusha
dec
xchg
push
xchg
mov
jg
mov
xor
das
adc
insl
loope
notb
jns
imull
cld
outsb
stc
pop
sbb
xchg
adc
fucomip
xchg
popa
sub
rcl
stos
inc
and
aas
in
inc
fcmove
fs
or
push
jae
inc
jmp
pop
inc
scas
pop
adc
mov
dec
sbb
iret
cmc
xchg
loop
pop
insb
lahf
add
pop
add
pop
xchg
xchg
lret
mov
std
dec
roll
mov
lret
sub
out
add
dec
insl
popa
sub
loop
cmp
and
push
adc
add
fidivrl
push
into
in
icebp
jb
xchg
sti
sbb
pop
fcmovnbe
push
sub
cmp
movsb
push
aam
sub
jne
filds
outsl
in
das
popf
cmp
xchg
adc
sub
fcoms
test
cmp
sahf
setge
outsb
jle
dec
add
cmpsb
popf
ret
sti
add
imulb
dec
add
pushf
shrl
lods
bound
adc
lods
push
mov
in
and
scas
sub
test
mov
stos
dec
xchg
cmp
inc
lahf
fidivrs
sbb
out
fimuls
push
lock
sub
lahf
rcll
lcall
pop
shld
and
lcall
jecxz
orb
lss
pop
in
fwait
mov
cmp
sbb
das
gs
dec
xlat
invd
in
movb
aam
mov
fsubs
sbb
aaa
inc
sub
lods
jp
inc
pusha
dec
xchg
inc
roll
andb
jecxz
mov
mov
push
test
enter
sbb
xchg
cltd
out
bound
lcall
pop
cmp
sti
negb
pop
scas
cmp
push
aas
and
popf
lret
repz
dec
iret
outsb
iret
and
imul
xchg
ret
movsl
pop
push
push
fiaddl
loopne
cli
sbb
je
mov
dec
mov
adc
leave
add
push
or
pushf
xor
sbb
pushl
sub
rorb
pop
decb
inc
inc
adc
pop
mov
ret
mov
jne
nop
dec
add
pop
cld
adc
and
push
mov
mov
in
mov
or
in
movsl
mov
inc
push
pop
bound
popa
rorl
inc
repnz
clc
mov
out
mov
imul
sti
and
add
or
dec
adc
mov
adc
xlat
push
xchg
cmp
sti
dec
cld
jo
daa
push
jge
or
push
jl
mov
imul
sub
cwtl
ds
xchg
jae
iret
pushf
popf
testb
dec
fiadds
mov
push
fcompl
jo
sbb
loop
dec
mov
test
jp
das
jmp
icebp
fistpl
movsl
rcrl
mov
imul
mov
test
fmuls
movsb
ds
mov
jmp
cld
imul
mov
out
cmp
lods
adc
fucomp
test
outsb
xor
movsb
ret
push
jg
jecxz
pop
xor
pop
idivl
mov
dec
je
out
clc
fdivr
xor
push
lock
lock
or
push
jmp
xor
popf
ss
ja
dec
enter
stc
fdivrl
jnp
jecxz
std
iret
out
add
xchg
bt
xchg
test
and
cmp
imul
shl
repz
or
pop
fdiv
fnstcw
mov
add
enter
xlat
cmp
insl
popa
test
leave
xchg
icebp
add
popa
push
fsubrs
movsb
daa
xor
int
pop
jno
ss
dec
dec
call
mov
in
jo
sbb
aas
fbstp
mov
loope
fsts
mov
cltd
mov
jmp
add
decb
adc
mov
sbb
out
les
imul
divb
pop
adc
in
mov
mov
rcrl
or
fcomps
sbb
sub
in
cmp
sbb
push
adc
push
outsl
out
xor
call
or
push
popa
jns
or
sbb
pushf
orb
cltd
mov
mov
sub
addr16
mov
mov
cmp
xlat
add
adc
test
xchg
xchg
or
sub
mov
push
out
popf
cli
in
pop
and
lock
inc
ret
cmp
xchg
fistps
mov
add
push
mov
jmp
ret
std
loope
rcrl
hlt
dec
bound
leave
sub
sbb
push
mov
adc
leave
mov
mov
push
push
adc
jge
fcmovu
adc
jmp
sbb
sub
in
ret
jecxz
mov
jo
call
adc
scas
mov
adc
push
imul
shlb
xchg
pop
imul
push
lret
jno
jl
mov
pop
jl
imul
ljmp
mov
sbb
jle
cmp
lods
push
xchg
addr16
mov
xor
jp
push
xorps
xorb
jp
xchg
fs
xchg
test
inc
clc
pop
mov
fsubl
movsl
inc
filds
outsl
sahf
dec
push
cltd
mov
outsb
call
jb
mov
stos
sub
xchg
in
mov
lock
nop
mov
cmc
xorl
in
add
imul
jp
dec
push
xchg
aam
sub
dec
std
cmp
and
mov
fbld
xor
add
out
dec
push
pusha
outsl
push
pushf
sub
lret
adc
add
jmp
fabs
and
pop
fbstp
jp
mov
jbe
cmpsl
adc
mov
adc
adc
pop
jg
scas
inc
xchg
push
repnz
mov
aam
lock
add
adc
ja
cs
dec
push
jae
ret
loop
shrb
shll
cmp
and
scas
test
sub
stc
adc
in
in
in
icebp
mov
dec
xchg
add
push
jp
subb
cmp
sub
dec
jmp
jp
sbb
cmpl
jns
push
cwtl
cmp
xchg
cmpb
pop
mov
outsb
popa
sbb
pop
add
lea
mov
xlat
ret
lret
jb
push
es
xchg
movsb
test
mov
cli
movsb
cmp
xchg
sbb
push
mov
or
jne
repz
mov
outsb
inc
pop
shll
les
mov
mov
jnp
mov
or
push
sbb
icebp
enter
mov
jmp
cmc
mov
outsl
js
and
mov
push
jns
leave
out
lret
xchg
push
xor
in
and
test
je
sbb
icebp
loopne
sub
cmp
outsb
inc
add
mov
scas
mov
jnp
flds
xchg
ss
adc
aad
lock
or
sub
push
xor
psubusw
cld
pop
sbb
mov
jnp
orl
js
test
mov
push
sbb
xor
pop
mov
mov
sub
xor
iret
cmp
cmp
decl
pop
test
loopne
adc
ja
or
sub
int3
repnz
dec
mov
int
inc
pop
into
mov
jno
inc
mov
mov
jge
sbb
int3
dec
mov
test
lahf
aam
pop
out
out
cmp
cmp
xchg
jne
arpl
fcmovbe
data16
fstp
in
mov
or
add
cwtl
or
dec
scas
push
popf
ds
shlb
cld
push
xor
stos
mov
fadd
jle
movsl
inc
arpl
mov
pop
iret
pop
int3
test
out
adc
push
cs
out
and
inc
call
andl
jns
add
sub
lods
fmull
lcall
loope
push
sbbb
in
jecxz
pop
flds
mov
cmpsl
jnp
fcom
mov
dec
aaa
out
inc
add
dec
add
lahf
aas
xchg
or
into
push
ret
mov
mov
std
lods
ret
adc
jnp
and
pop
dec
sub
dec
dec
stc
push
xor
cmp
ljmp
imul
cli
and
xchg
xor
inc
mov
jb
mov
or
push
test
sarl
jmp
mov
lahf
pop
data16
shr
push
shll
lods
test
mov
inc
jae
add
sbb
xchg
xchg
mov
popf
and
ss
int3
jns
insb
lds
idiv
dec
adc
ror
sbb
mov
cs
rclb
test
ss
out
mov
push
loopne
sbb
testl
sti
and
cmpsb
jno
mov
int3
or
fs
push
cli
ja
adc
sbb
mov
sbb
push
mov
mov
out
push
jne
ljmp
and
int
pop
jle
lods
push
push
lds
mov
sbb
inc
movsl
pop
je
cmpsl
mov
shll
push
pop
mov
mov
lret
dec
xor
mov
push
inc
xchg
ret
dec
dec
and
shrb
insb
xchg
cmpsl
punpcklwd
mov
lret
sahf
push
mov
iret
xchg
inc
mov
sbb
push
cmp
add
sti
inc
xchg
call
push
imul
cld
iret
add
pop
mov
jp
clc
xlat
cld
in
push
outsl
in
das
mov
lock
jo
inc
std
pop
rorl
test
cmp
cmc
shl
mov
fcomp
or
and
add
add
mulps
cmc
mov
je
fwait
xlat
shll
fst
pop
notb
mov
add
bnd
and
mull
nop
repnz
and
inc
lods
aaa
jge
push
je
outsl
and
inc
sbb
sub
fcoml
sbb
call
in
call
dec
xchg
mov
or
cmpl
push
mov
stos
jo
test
repnz
add
lret
xchg
call
and
push
jb
xchg
inc
repz
or
cmp
jmp
xor
pop
out
dec
aad
jae
lods
xchg
mov
stos
mov
imul
ljmp
push
and
cli
sbb
cmpsl
jle
mov
sbb
aas
bnd
cmp
andl
cmp
cmp
jns
cwtl
xor
clc
mov
add
jno
cmpsl
lret
add
inc
and
sub
jae
jge
int3
jae
inc
mov
jb
out
jb
adc
test
adc
test
lods
test
sbb
lods
adc
adc
pop
sbb
and
arpl
cmp
subb
shrb
int
lret
lds
stos
push
rorb
cmp
pushf
pop
jae
cmpsl
iret
mov
pop
xchg
dec
out
jnp
sar
xor
enter
icebp
lods
outsb
mov
inc
push
aas
add
ds
popf
add
jl,pt
clc
je
mov
lahf
or
mov
jmp
xor
add
adc
clc
in
jns
jns
stc
std
gs
stos
lock
jge
scas
xchg
mov
and
test
adc
in
out
sbb
xlat
arpl
jnp
scas
push
mov
pop
add
in
cmpsb
cmpsb
inc
int3
or
cmp
cmp
mov
cmp
andl
stos
and
jmp
push
pop
mov
jecxz
mov
push
fs
xchg
inc
xchg
stos
aad
out
test
pop
test
ljmp
pop
mov
xchg
xchg
jb
pop
or
mov
rcrb
jb
gs
sti
test
ja
adc
push
sub
out
leave
sub
out
sub
sti
sbb
imulw
out
insb
ficoml
insl
hlt
mov
addr16
outsb
pop
popl
les
mov
xchg
test
std
inc
out
cmovne
outsb
outsl
adc
sub
xchg
mov
test
sub
movsl
sub
mov
adc
sub
cmc
pushf
aam
out
cld
mov
adc
cmp
xchg
adc
xor
hlt
mov
lock
add
mov
xchg
jmp
mov
inc
lret
jl
or
pop
cwtl
dec
shlb
pop
popf
push
xor
es
imul
gs
test
pushf
movsl
stc
scas
pop
js
mov
push
mov
cmpsl
lods
cmp
fs
test
xlat
and
and
out
rcl
pop
xchg
mov
dec
aaa
ret
or
xor
pop
lcall
xor
pop
fbstp
adc
decl
int
mov
jle
aam
cmp
cs
or
pop
cmc
pop
imul
call
push
aam
xor
push
xor
pop
fldenv
sbb
or
insl
pop
dec
lods
mov
sbb
mov
stos
jmp
add
jmp
test
jmp
int
ds
or
cmpsl
lods
push
push
insb
call
movsl
shlb
fdivrl
jmp
mull
jmp
fidivs
stos
mov
jb
jg
rcl
out
lret
cmp
pushf
sub
cwtl
std
sbb
inc
cmp
and
dec
test
fidivrs
add
and
es
mov
mov
inc
jno
jno
dec
hlt
push
popa
loop
iret
fldenv
or
popa
jg
pop
and
xchg
cmp
dec
jo
add
mov
cmp
push
stos
push
pop
xor
mov
add
mov
cmp
inc
in
adc
xchg
mov
lds
mov
sarb
xor
imul
std
clc
hlt
sbb
sbb
in
inc
xchg
push
mov
mov
sahf
iret
ja
scas
daa
jo
push
sbb
loope
cld
lahf
mov
sub
jmp
inc
das
sub
es
cmpsl
cmpsb
mov
xchg
mov
lahf
fsub
idivl
test
adc
jnp
mov
shl
ret
mov
leave
mov
pop
stos
scas
lret
insb
stc
nop
lcall
setbe
dec
jns
jae
push
mov
sub
fdivrs
ret
and
in
aam
fmull
jp
sahf
xchg
inc
divl
sub
mov
inc
imul
jp
pop
push
mov
xchg
mov
or
jecxz
sbbb
test
andl
lcall
mov
fwait
daa
sub
mov
sub
in
repnz
mov
outsl
lcall
lock
popa
stos
insb
cmpsl
sub
add
loopne
mov
aaa
mov
or
and
aam
fiaddl
cmc
cmp
xor
mov
stos
shl
repnz
jbe
sbb
push
dec
imul
mov
popa
andb
ja
ds
insb
adc
dec
xchg
arpl
call
inc
loope
dec
rcrl
jmp
sub
or
jg
xor
dec
xchg
fidivl
or
mov
popa
out
iret
out
outsb
push
xor
dec
out
es
sbb
cmc
ja
ret
dec
mov
push
stos
mov
cmc
incb
push
mov
adc
int3
in
lret
or
mov
pop
pop
inc
pop
mov
in
cmp
stos
adc
push
std
jno
push
lret
std
jge
in
pop
cs
mov
sbbb
sbb
arpl
mov
cmpsl
xchg
arpl
rclb
stc
pop
cmpsb
shl
jle
push
pop
push
sub
iret
popf
daa
bound
iret
int
sub
lret
clc
add
enter
cmpsb
xchg
push
xor
lcall
mov
filds
out
cmp
push
enter
xchg
aam
rcl
mov
repz
aad
mov
iret
mov
pushf
pop
rcll
cmc
lret
call
in
mov
mov
mov
bswap
iret
xchg
xchg
in
mov
and
inc
nop
mov
jae
sar
mov
mov
loope
sub
inc
mov
add
test
cmp
push
sub
add
imul
push
mov
or
fsub
push
dec
daa
lahf
cmp
xchg
aad
adc
scas
mov
dec
adc
out
mov
in
push
push
inc
pop
out
cmp
out
sahf
sbb
sarb
mov
fildll
shrb
xchg
in
push
lock
push
mov
shlb
test
sub
push
jecxz
shr
arpl
cmp
xor
cmpsl
mov
lock
sahf
arpl
lret
dec
stos
loope,pn
les
lock
inc
jae
enter
insb
cmp
in
cmp
imul
bound
dec
mov
jmp
stos
jne
fcomi
jbe
jl
addl
into
and
jmp
outsl
jb
ja
ja
in
lods
jp
mov
data16
pop
jp
cs
jnp
jg
enter
xor
fwait
xchg
iret
mov
out
rcl
and
add
jl
dec
inc
sub
xor
ja
insl
cmp
sarl
pop
imul
loop
rcrb
xor
int3
je
mov
loope
fs
stos
mov
stc
jecxz
sti
rcl
jp
push
cli
sub
lock
push
dec
in
lds
movsl
xor
mov
cmp
or
or
mov
mov
hlt
in
outsb
mov
outsl
rcll
rcrl
test
fiaddl
fs
ljmp
aad
fadds
mov
ja
dec
xchg
mov
and
inc
pop
jo
adc
and
sub
xor
mov
outsb
sub
lods
call
gs
loop
add
cmp
push
jl
int
and
push
mov
enter
std
stos
aaa
ja
mov
iret
cld
das
xlat
inc
lret
dec
in
adc
in
cld
xor
jge
movsl
adc
ret
add
lds
call
call
cmp
ss
imul
sub
or
shrl
jo
lcall
pop
fldt
mov
hlt
mov
mov
inc
push
push
inc
or
push
out
je
fwait
cld
movsl
addr16
push
dec
faddl
lods
pop
dec
lcall
or
rcr
push
and
leave
mov
mov
scas
inc
aad
ss
out
jecxz
cltd
fwait
jno
adc
xchg
mov
lret
loop
add
push
cmp
xchg
pusha
mov
lds
or
push
mov
adc
rcrl
popa
mov
lea
sbb
pop
mov
popf
push
push
jbe
jno
hlt
mov
and
sbb
mov
push
ljmp
xor
outsb
sbb
ficoml
add
aaa
jle
cmp
xor
or
lea
repz
push
cmpsl
sub
add
xchg
push
inc
out
mov
idivb
cwtl
mov
int3
das
in
rolb
mov
imul
loope
leave
dec
inc
or
xor
js
jbe
dec
iret
iret
inc
sti
mov
dec
out
cwtl
js
pushf
rorl
xchg
shlb
jo
movsb
xor
enter
push
jnp
jle
fwait
ret
call
mov
scas
or
sti
mov
xchg
ss
adc
jge
cmp
inc
daa
shl
push
or
push
cmovo
fwait
xchg
jbe
adc
repnz
xor
jbe
lar
pop
cli
out
test
dec
mov
sub
and
cli
adc
jnp
dec
jge
adc
or
les
sub
add
dec
sub
mov
fistpl
cmp
loop
push
cld
jl
jge
js
pop
mov
popf
das
jb
dec
and
imul
pushf
cwtl
lret
hlt
push
and
fdivs
add
clc
fmulp
dec
xor
int3
mov
xor
bswap
fidivs
dec
cmp
jb
xlat
inc
ror
in
xchg
add
xor
insl
sub
shrl
dec
cwtl
add
adc
fisttpl
push
mov
gs
and
movq
and
xchg
mov
stc
call
adc
inc
dec
cmpsl
cmp
and
sbb
outsb
cmp
fildll
mov
fs
push
adc
add
hlt
aam
xchg
cmp
add
rcr
push
fimuls
jg
fwait
insl
popa
fwait
xchg
test
push
adc
inc
dec
paddusb
inc
sbb
fcompl
out
inc
pop
push
add
outsl
cmpsl
test
xlat
add
mov
out
sbb
jle
add
sbb
subl
cmpsb
sbb
push
rcr
rcrb
cld
iret
outsl
or
mov
mov
test
or
push
imul
mov
xchg
loopne
hlt
test
push
add
xor
pop
push
insl
xchg
jno
rcll
add
dec
jg
mov
inc
push
push
mov
push
fs
xchg
adc
dec
pop
xchg
scas
xor
inc
test
xor
adc
cmp
popf
mov
dec
cmpsl
mov
dec
cmp
mov
orb
outsb
jns
or
mov
dec
xlat
jg
scas
xor
mov
mov
push
insb
insb
cmp
ficomps
mov
mov
xchg
lahf
lret
std
in
cmpsb
lods
movsb
popl
dec
xor
ja
mov
mov
mov
and
lock
aas
jnp
cltd
popa
cmp
in
lods
nop
add
push
dec
xlat
xchg
test
std
outsl
dec
cmc
lock
ja
sbb
ss
arpl
rcr
into
fdivr
dec
test
les
inc
nop
dec
add
repz
mov
out
mov
lcall
movsb
inc
mov
sti
std
sub
bound
xor
pop
lods
mov
fwait
adc
cld
popa
repz
lds
or
stos
and
push
pop
int
inc
dec
scas
lods
ja
xchg
and
inc
pop
pop
xor
loop
xor
jmp
inc
into
inc
adc
jp
pop
stos
filds
sahf
pop
dec
enter
arpl
cltd
adc
imul
mov
roll
mov
arpl
and
andl
mov
or
mov
mov
aad
ret
insb
xchg
pop
ret
fs
add
int3
pop
jb
dec
and
jno
xchg
push
sbbl
enter
aad
fs
push
mov
cmp
xlat
mov
xor
cli
fcmove
in
xchg
insb
loope
and
mov
dec
sbb
mov
add
jno
loope
mov
mov
inc
sub
cwtl
push
cld
mov
out
addr16
dec
jmp
pop
into
fsubs
push
out
lds
in
sbb
pop
fucomip
repnz
fcos
dec
leave
pop
mov
or
mov
mov
sbb
cmp
jo
pop
test
xchg
jns
jmp
les
jbe
aad
cmp
pop
pop
cld
xor
hlt
pop
dec
mov
xchg
or
fs
push
pop
jae
and
repz
mov
insb
inc
dec
clc
lret
jle
pop
jle
loopne
dec
shll
push
push
and
decl
cmp
outsb
in
cli
or
sub
inc
mov
movsl
inc
rclb
popf
and
cmp
pcmpeqd
or
dec
or
out
cli
or
insl
mov
lods
mov
aaa
dec
paddusb
adc
mov
jbe
cmp
xchg
xchg
sub
adc
aam
fs
int3
pop
or
cmpsb
pop
cmpsl
mov
mov
push
mov
mov
test
pop
inc
imul
mov
jmp
hlt
or
mov
insb
xor
out
push
or
mov
int
popf
lds
and
mov
push
jle
inc
jp
push
mov
and
xor
pushf
cmp
cmp
sub
cmpsl
lea
mov
mov
cmc
leave
push
jl
subb
lods
mov
push
push
jns
or
jno
cmpsb
and
out
xor
pop
test
insb
xchg
leave
mov
add
add
mov
call
rolb
fs
outsb
pop
jg
pusha
rolb
loopne
ror
mov
xor
add
xchg
mov
dec
fs
sarl
ss
inc
cmp
push
inc
test
or
xchg
in
mov
lahf
call
and
lcall
fnstcw
popa
or
leave
popl
xchg
imulb
in
or
rclb
sar
test
pop
add
test
shlb
loopne
popa
cli
xchg
sahf
loopne
sbb
sarl
or
incb
cmp
dec
cli
je
adc
pop
mov
xorl
jmp
xchg
int3
adc
ss
rorl
mov
insl
or
repnz
push
mov
push
test
filds
adc
out
cmpsb
fld
in
int3
xchg
in
xor
hlt
xor
cli
stos
hlt
or
xchg
fcom
bound
jns
dec
lret
mov
imul
fcomip
loope
cld
leave
jecxz
loope
fistps
ror
pop
sub
in
dec
stc
jle
mov
nop
into
pop
test
xchg
sbb
mov
xor
jecxz
repz
in
repz
dec
ljmp
lahf
and
data16
insl
pop
adc
xchg
sbbb
mov
fcoml
daa
ss
loopne
cld
je
test
or
jmp
stos
push
inc
push
pop
cmp
mov
popa
mov
xor
orl
push
js
sarb
pop
test
and
jmp
inc
insb
xor
sti
push
xchg
nop
inc
adc
xor
mov
adcl
cwtl
xor
mov
insl
popa
adc
cmp
fisubrs
dec
lods
das
and
xchg
cmpsl
pop
mov
xchg
mov
in
push
dec
inc
js
movsl
mov
enter
lea
adcl
push
push
sub
sbb
inc
ficoms
std
or
pushf
inc
icebp
lods
shll
add
addr16
mov
icebp
loopne
push
mov
adc
cmp
ljmp
call
repz
push
subb
adc
aaa
cltd
add
xor
iret
jbe
into
push
jb
into
sub
and
mov
pop
jle
lds
cmp
sbb
shl
rol
int
lret
xchg
pop
adc
jge
sub
lret
mov
ficoms
adc
cltd
in
arpl
xchg
ret
cmp
dec
sbb
scas
lock
sub
sbb
mov
loopne
subl
adc
repz
outsb
inc
push
fcmovne
pop
sarb
int3
fimull
fnsave
movsb
or
mov
mov
popa
clc
dec
lock
aas
sub
popa
outsl
daa
rcrl
xchg
dec
pop
xchg
mov
and
xchg
cmp
jns
cli
xchg
ret
push
cmp
cmp
dec
outsb
add
repz
push
and
push
mov
xor
jge
js
dec
mov
mov
push
shll
push
outsl
fcoms
add
mov
jns
andl
cmc
sbb
jl
inc
je
xor
push
in
add
cmp
push
push
test
jnp
bsr
mov
pop
push
xor
insl
mov
jle
hlt
adc
xchg
cmpsl
fdivrl
or
xchg
lods
dec
test
loop
das
cmp
pop
dec
insb
test
aad
lcall
cltd
addb
inc
mov
mov
or
push
mov
popa
inc
push
loop
lahf
es
gs
or
push
and
out
mov
push
imul
aas
out
int
sbb
mov
in
aaa
cmp
or
fdivrp
fdiv
inc
ljmp
mov
sbb
jns
adcb
push
sbb
sub
push
cmp
popf
out
imull
add
fldenv
mov
pop
mov
xchg
push
ljmp
repz
aaa
int
mov
pushf
pop
ljmp
loop
inc
lea
push
imul
jg
add
jecxz
iret
inc
inc
dec
sarb
and
lock
imul
sbb
mov
xorl
add
add
xor
data16
xor
add
lret
jecxz
enter
insl
mov
dec
adc
sub
out
mov
push
mov
les
jecxz
xchg
mov
andl
xchg
adc
ja
sbb
stos
in
addb
or
fldt
mov
xchg
inc
fistl
leave
repz
pushl
sbb
push
sti
inc
mov
pop
clc
test
mov
clc
stc
xchg
fwait
in
pmaddwd
mov
cmc
push
mov
unpckhps
or
movsl
xlat
push
xchg
and
std
push
add
repz
jp
sti
sbb
xchg
add
add
xlat
fcmovne
mov
ficoms
mov
int
imul
mov
in
loope
mov
mov
or
xchg
add
pop
jp
repz
xchg
xchg
or
cmp
adc
mov
inc
or
mov
mov
pop
out
iret
jnp
mov
xor
adc
stos
and
test
iret
hlt
mov
add
mov
dec
fs
cmp
mov
sub
push
fidivrl
cmp
imul
lahf
dec
cli
push
out
mov
fdivs
out
les
and
movsb
icebp
and
or
adc
cmp
sbb
inc
leave
push
push
xchg
iret
xlat
sbb
xor
cmpsb
lret
add
add
icebp
out
dec
xchg
pop
pop
movsb
and
into
mov
dec
mov
xchg
sbb
fmuls
rcrl
out
sub
dec
push
insl
das
ret
ds
jge
xor
mov
jno
repnz
daa
out
js
sub
jb
ret
xchg
sbb
iret
xor
pop
pop
fildl
mov
xchg
pop
lret
aam
dec
inc
loop
xlat
scas
sub
adc
xor
sub
insb
enter
mov
mov
mov
push
jmp
add
aam
mov
popa
sbb
aam
pusha
jg
fmuls
test
fists
push
or
xchg
fucom
fs
fcmovnu
jnp
pop
pop
xor
cmp
icebp
jp
iret
mov
and
jb
std
das
mov
jns
fisubrs
cltd
shr
jg
ret
sbbb
repz
loop
push
xchg
incl
faddl
push
sub
lahf
ds
mov
addr16
shrl
pandn
mov
pop
das
sarb
clc
lret
inc
loope
sbb
push
cmp
je
xor
mov
idivl
or
mov
add
cltd
pop
mov
jge
mulb
ds
sar
repz
or
mov
in
xchg
divb
mov
pop
jns
sahf
push
int3
clc
pop
push
cmp
mov
pop
enter
pop
pushf
pop
xchg
out
dec
push
sbb
js
aaa
addr16
add
shlb
fdivrl
sahf
adc
movsb
stos
ss
icebp
add
push
hlt
and
push
es
inc
divb
sbb
cmc
ljmp
repz
jp
and
daa
pop
in
mov
enter
sub
scas
lea
push
mov
push
adc
mov
cmpsl
iret
add
jl
shll
sbb
mov
jle
pop
or
addr16
sbb
les
push
orl
mov
sub
mov
and
cmp
mov
mov
ja
cli
out
subl
inc
xchg
in
int3
sbb
les
mov
hlt
outsl
push
rcr
mov
mov
mov
or
outsb
xchg
lods
jb
mov
pop
sub
lret
and
insb
clc
lods
mov
pop
inc
pop
pop
jecxz
ljmp
push
jmp
in
out
sbb
lock
fisubrs
sub
out
dec
insb
mov
fstpt
add
jg
mov
dec
insl
hlt
in
pop
mov
gs
test
push
mov
sbb
cmpsl
lea
xchg
lods
mov
mov
pop
sbb
fucompp
lock
addb
in
or
cli
andl
nop
rcll
xchg
stc
cmp
fldl
sub
or
push
cmp
rolb
popa
test
test
lcall
mov
jle
cmp
idivb
lret
jge
sub
aad
imul
fnstenv
push
cmp
out
lcall
popa
add
mov
cmp
xorb
jne
mov
fimull
mov
in
cltd
xor
loope
mov
or
mov
or
push
and
pop
inc
adc
andb
bound
mov
lds
and
or
repnz
leave
pop
cmpsl
mov
push
push
shll
les
inc
and
jmp
mov
cmp
push
cmp
mov
loop
jl
outsl
mov
sub
cwtl
fwait
ret
sub
push
out
dec
mov
addb
mov
loopne
jbe
fstpt
jp
mov
cmp
dec
out
push
das
mov
pop
or
je
repnz
jg
rorb
das
xor
mov
mov
es
es
imul
sbbl
cmpsl
push
or
mov
lret
pop
adc
inc
in
andb
stos
jmp
loopne
and
imul
insb
sub
mov
in
add
pop
cmp
pop
inc
xor
mov
daa
leave
cli
lods
jmp
xchg
adc
cmp
iret
lret
out
or
insb
mov
jmp
sbb
iret
mov
cmp
addr16
lcall
ja
outsb
dec
sbb
jne
dec
push
movsl
or
fyl2x
xor
cmpsl
mov
jb
cmpl
leave
add
lods
lods
jge
xchg
scas
inc
mov
je
push
pop
mov
dec
cwtl
out
das
adc
ss
xchg
pop
cmp
inc
mov
int
xlat
dec
sub
and
xchg
fisttpl
das
pop
aad
loope
in
sbb
aam
mov
sbbl
jno
test
inc
mov
xchg
movsb
lcall
xor
xor
out
jmp
cmp
sbbb
mov
and
std
mov
jl
mov
and
in
mov
imul
mov
andl
jmp
cli
cmpsb
mov
push
in
pop
and
test
lret
inc
cmpsl
lcall
or
pop
dec
mov
and
inc
subb
xchg
jmp
push
sbb
xchg
push
push
ret
jno
das
into
popf
aaa
jecxz
add
fildl
insl
in
push
fucomp
lea
add
icebp
jmp
imul
or
sbb
js
adc
cmp
xchg
stc
mov
std
faddl
outsl
and
outsl
js
inc
mov
cmp
xor
inc
xor
mov
dec
xchg
shl
jp
mov
lods
scas
mov
sub
mov
sahf
dec
hlt
scas
fsubs
or
cli
ss
clc
fists
xchg
adc
aad
nop
loop
iret
test
push
and
dec
cmp
xchg
es
lds
stos
sub
push
pop
bound
sub
pop
cmp
popf
out
sub
out
negl
inc
mov
xor
lret
xchg
subl
jne,pn
sti
mov
mov
mov
pop
stos
test
xor
sbb
popa
sti
pop
sbb
shll
xchg
pop
sub
pop
inc
jne
mov
scas
flds
arpl
jae
js
xor
mov
rcl
enter
repz
test
fildl
leave
lock
cld
sub
scas
cmp
inc
or
mov
jns
xor
cwtl
push
movsb
push
cs
dec
sub
adc
and
insl
ss
mov
jge
xor
into
daa
push
dec
lods
movsb
xchg
lods
mov
loope
mov
sub
mov
mov
sub
ret
repnz
mov
jp
std
lea
sbb
leave
xchg
in
mov
pop
cwtl
ret
shlb
xchg
dec
jg
loop
arpl
push
push
mov
int3
push
cwtl
fdivrl
dec
fwait
mov
fldl2e
mov
mov
mov
mov
out
ljmp
repz
out
dec
xor
nop
stos
xor
repz
push
mov
std
sbb
into
jg
lret
ds
push
inc
scas
nop
push
out
arpl
ja
mov
out
adcb
sub
cltd
repnz
cli
adc
mov
sub
fs
in
mov
jb
das
push
xor
fstpt
ss
test
sahf
int3
pushf
mov
or
fiadds
or
sbb
outsb
nop
and
stc
inc
aad
add
pop
mov
stos
pop
leave
jle
mov
sbb
into
fnstsw
xor
data16
mov
dec
aam
lds
or
cmpsb
pushf
xor
pop
dec
sbb
adc
inc
jle
mov
inc
imul
cmp
or
imul
cltd
cs
dec
xor
gs
xchg
fistl
test
xchg
jb
insb
ficoms
mov
inc
imul
push
cli
in
adc
sub
lret
das
sbb
mov
std
jge
pop
popf
insb
add
jge
add
or
add
mov
or
push
dec
inc
roll
movsl
ret
mov
insb
fidivrl
repnz
rcl
mov
add
int
aam
in
dec
iret
cmc
push
add
xor
fistpll
je
lret
jne
pop
adc
jecxz
xor
mov
lret
subb
es
or
pushf
mov
push
movsb
mov
mov
fdivrp
jbe
jp
xor
push
add
mov
rorl
test
push
push
dec
rclb
bound
mov
dec
sbb
mov
or
fdivl
mov
mov
scas
mov
ret
sarb
cltd
sahf
mov
lds
xchg
pop
testl
out
jne
xchg
cmp
arpl
pusha
mov
add
inc
sub
das
pop
or
inc
xor
into
lcall
sbb
scas
adc
and
mov
pop
cwtl
cmpsl
gs
xor
xchg
inc
into
xchg
push
xchg
pushf
push
lret
mov
jb
xor
xchg
mov
or
and
in
inc
mov
and
sub
or
dec
mov
xchg
std
sub
rcrb
xchg
cmpsb
stc
das
add
lret
cli
sub
push
mov
fcoml
push
push
cmp
mov
adc
push
push
push
cli
jmp
push
daa
lahf
aaa
bound
sbb
fdivrl
out
sbbl
fadds
ret
in
push
cld
mov
mov
and
ljmp
in
jae
ret
lahf
das
sub
sub
pop
nop
xor
in
cmp
fnstcw
push
mov
cmp
cmp
repnz
dec
cwtl
inc
mov
stos
jp
ljmp
in
insl
leave
add
push
testl
repnz
dec
clc
mov
add
inc
jl
jae
dec
xor
nop
inc
jb
xor
xlat
fdivs
pop
dec
aad
inc
mov
addb
insl
lods
dec
sbb
in
out
jle
addb
jno
rdseed
mov
cmp
adc
test
in
aas
push
push
in
nop
int
jge
je
sbb
adc
pop
sub
bound
daa
out
daa
cmpsb
idivb
adc
or
cltd
cmpl
sbb
mov
push
mov
push
lret
cmc
orl
pop
mov
push
xchg
lahf
addr16
ss
xor
in
xor
lea
dec
or
xchg
leave
and
xor
cmpsl
and
lock
leave
js
mov
jno
mov
sub
push
xor
mov
fnstcw
lcall
mov
movsb
popf
jge
xlat
cmp
lds
aam
push
jbe
xchg
rclb
shll
jnp
adc
cmp
testb
ret
mov
mov
test
and
dec
mov
loopne
popf
jnp
movsb
clc
adc
or
shlb
lahf
es
pop
lcall
out
push
jp
push
cmpsl
cmpsl
sbb
cmp
aaa
adc
jmp
pusha
pop
inc
ja
icebp
sti
inc
pushf
data16
add
mov
fwait
mov
lret
jge
roll
fdivrs
xchg
push
pop
scas
mov
or
cmp
pop
mov
insl
ffree
movsb
xorb
cmp
xchg
or
pop
bound
cmc
sbb
in
jg
cmovb
xlat
lret
into
movsb
sbb
dec
fistpll
mov
mov
sbb
jb
pop
ret
mov
dec
mov
lret
int
scas
mov
aad
push
jl
fiadds
xchg
lods
jp
adc
movsl
test
mov
pop
inc
push
fimuls
push
mov
jmp
adc
lcall
pop
test
mov
rolb
fidivl
in
inc
xchg
shl
cli
mov
mov
lea
mov
mov
shlb
iret
lret
ror
ret
dec
push
xchg
fimuls
out
mov
in
leave
sbb
or
out
adc
in
out
les
dec
adc
sub
pop
hlt
push
stos
pusha
aam
inc
and
push
xchg
jge
or
and
pop
pop
jno
adc
ss
add
iret
je
mov
push
push
pop
jns
sahf
jle
or
mov
repz
pop
inc
mulb
arpl
scas
mov
sarb
dec
popa
stc
xorw
rcrl
arpl
and
pop
jle
loop
bound
jecxz
std
push
mov
das
movsb
pop
aaa
cltd
in
xor
xchg
in
push
jg
lea
add
push
adc
neg
sbb
pusha
sbb
fs
sub
les
xchg
adc
sbb
aas
dec
daa
xchg
fsubrl
aas
movsb
and
and
addr16
cli
add
cmp
in
stos
add
out
jge
movsb
jo
xchg
ljmp
icebp
fisubrs
mov
dec
jmp
mov
push
push
push
in
xorb
add
jo
add
cli
mov
push
inc
addr16
ss
ret
cmc
mov
mov
pop
enter
xlat
nop
das
icebp
mov
inc
xor
push
add
push
adc
fwait
mov
push
movsl
sub
lahf
repz
xor
out
adc
push
dec
add
mov
sbbl
adc
shl
add
dec
lds
nop
jecxz
push
sbb
dec
sub
testb
mov
add
pop
xor
cmc
flds
or
mov
mov
add
fcomps
shlb
xor
xor
pop
mov
popa
test
xchg
mov
ds
xor
ja
jge
push
popa
test
arpl
in
cmp
cltd
push
jg
xor
inc
cld
lcall
jns
jb
sbb
fidivrl
subl
mov
std
jl
addl
repnz
das
push
fwait
jns
bound
xor
stc
push
out
sbb
cmp
inc
mov
js
mov
je
push
lret
imul
pop
enter
mov
std
push
nop
ret
push
add
mov
push
subw
mov
gs
test
adc
or
pushf
jb
ds
loop
inc
adc
inc
daa
jnp
sub
loope
addr16
addr16
ficompl
mov
mov
js
outsl
mov
sahf
mov
sti
rcrw
ficoms
pop
cld
sahf
xlat
lcall
popa
enter
mov
das
push
inc
xchg
test
fmul
and
mov
adc
adc
lea
aaa
mov
push
or
mov
inc
in
and
insl
pop
jl
scas
sub
jnp
inc
xor
cmp
pop
push
mov
iret
pop
push
jno
dec
nop
inc
lods
in
sub
mov
inc
popa
mov
jle
aaa
add
push
out
add
or
loope
xor
lahf
test
cmpsb
rcrl
sub
imul
movsl
cltd
jecxz
bnd
inc
lret
cmpsl
cmp
push
push
add
xchg
and
shll
ja
imul
call
aam
jae
jo
push
mov
sbb
xor
fstpt
hlt
lret
loope
sbb
mov
mov
push
stos
mov
jge
fsubl
pop
mov
outsl
pop
cmp
mov
hlt
sub
inc
pop
add
inc
outsb
push
xchg
xchg
jb
enter
push
arpl
leave
push
outsl
loop
adc
cli
loop
mov
mov
push
xor
outsl
pushf
xor
cwtl
loope
cmc
rcrb
cmp
pop
mov
roll
mov
int3
push
mov
jnp
or
xchg
ds
push
fcomip
mov
gs
pop
mov
xchg
xchg
xchg
fldt
jg
inc
push
jb
mov
xor
mov
mulb
sarl
stc
cmp
jo
cwtl
cmp
xchg
stc
jle
mov
sbbb
sbb
xchg
lret
pop
or
sahf
dec
call
sar
push
mov
xchg
or
mov
rcr
ss
and
and
xchg
push
repnz
fcomps
lock
lahf
mov
cwtl
mov
nop
sub
cs
sub
inc
aas
aas
and
lock
roll
push
inc
les
or
sahf
pop
or
adc
xlat
mov
fiadds
sub
jmp
xor
add
mov
clc
fidivrs
jl
pop
jbe
cmp
and
aam
aad
cmc
repnz
dec
sti
adc
insb
push
cli
pusha
push
lods
xor
icebp
dec
adc
outsl
or
inc
dec
icebp
rorb
push
psubd
or
mov
movsb
or
cmpsb
shlb
fildll
mov
les
inc
bound
repnz
lss
jbe
fwait
mov
or
fisubrs
adc
xchg
pop
and
add
in
dec
mov
pop
adc
inc
inc
pop
sbbb
movsl
xchg
cli
pop
push
pop
inc
jns
ss
xchg
cli
lods
push
pop
mov
ljmp
mov
lea
inc
or
bound
icebp
jne
push
loopne
xchg
mov
ds
pop
or
push
jl
je
inc
jo
mov
xor
jns
jl
mov
push
push
push
add
xchg
lret
aaa
sbb
inc
xchg
adc
sbb
imul
filds
xchg
fdivs
mov
je
je
dec
dec
popf
sahf
popa
xchg
pushf
aaa
not
sbb
pop
mov
nop
scas
mov
mov
adc
push
pop
xor
repnz
push
rol
sbb
mov
ds
xchg
add
add
popa
shll
adc
dec
loope
push
daa
jo
jecxz
jns
repz
out
mov
cli
push
daa
out
inc
mov
mov
push
sahf
mov
insl
stos
mov
in
movsl
and
insl
push
push
adc
std
lods
lock
cmp
fistpl
cmpsb
imul
mov
pop
sbb
dec
add
aad
fsubs
sahf
nopl
in
hlt
test
stc
add
stc
std
jp
mov
cmpsb
outsb
sbb
addr16
cmp
mov
jbe
sbb
test
inc
inc
jne
mov
or
sarb
out
inc
cmpsb
mov
add
sub
cld
loop
dec
xor
push
adc
lret
in
arpl
out
jae
cld
lret
ds
xor
dec
xor
es
ret
and
pop
ds
adc
or
lock
pop
mov
sub
lock
test
jbe
cs
in
lcall
lods
cs
fisubl
mov
aam
aad
enter
jo
add
arpl
jmp
add
popf
movsb
jno
inc
mov
leave
sbb
and
xor
inc
or
cwtl
and
repnz
call
out
jle
sub
or
stc
add
rcrl
cmpsl
js
push
imul
in
push
mov
xchg
nop
pusha
jne
movsb
lahf
mov
adc
dec
addr16
es
adc
jae
push
add
cmp
in
cs
inc
jmp
movsb
cli
test
fbld
ss
out
lret
iret
jbe
mov
push
leave
mov
sub
sub
andl
sahf
add
les
lods
sbb
sbb
xor
dec
push
lret
sbb
fldcw
add
and
jge
mov
pop
add
mull
mov
mov
sbb
add
pop
sub
lret
stos
xor
bound
in
sbb
lret
cld
cmc
or
mov
movsb
jge
fcomps
out
or
sbb
stos
xor
mov
pop
cmp
or
ljmp
mov
pop
pop
sbb
sub
popf
enter
or
inc
inc
cmc
js
sbb
cmp
push
jg
add
push
lret
je
pop
mov
mov
and
jle
mov
jb
sahf
hlt
xor
insb
push
imul
lea
ja
and
imul
pusha
or
in
jo
mov
addr16
sub
xchg
jp
jg
in
inc
jo
pop
mov
mov
std
sbb
push
mov
out
inc
sbb
adcb
rcl
jo
out
sbb
mov
aas
in
adc
xchg
rcrb
jg
pop
xor
mov
cmpsb
xchg
mov
adc
mov
aam
scas
xchg
call
xor
in
mov
cmp
ja
mov
and
xor
dec
jnp
push
or
les
cmp
pushf
add
mov
jle
pop
xor
rolb
xchg
faddl
add
pop
inc
inc
sub
cmp
repz
xor
xchg
std
jns
cld
negl
mov
cli
insb
nop
fistpll
idivl
test
pop
mov
clc
ret
shll
sbb
lods
sub
pop
inc
aaa
popf
xor
mov
les
fsub
ret
clc
mov
mov
pop
dec
loop
loope
addr16
pop
adc
jns
aam
cmpxchg8b
fdivl
mov
negb
fs
repz
jmp
lret
shll
fiaddl
fwait
lds
dec
pushf
pushf
xor
int3
jb
popa
push
sub
lods
clc
aaa
jle
mov
mov
addr16
into
or
add
aaa
in
cmp
mov
nop
mov
jp
in
xor
aas
jge
cltd
push
xchg
inc
xchg
and
mov
arpl
pop
push
loopne
xchg
xchg
jge
inc
jle
sbb
cmc
outsl
mov
subb
cs
fcomps
mov
repnz
ljmp
and
js
insl
call
push
hlt
jg
les
mov
jecxz
rorb
cmp
bound
push
aad
xchg
jmp
ficompl
xchg
repnz
inc
add
pop
mov
jnp
jae
inc
arpl
mov
out
shlb
sbb
xchg
sbb
mov
cmpsb
push
sbbb
into
bnd
icebp
loope
std
shlb
outsl
imul
cs
pop
test
xchg
pushf
xchg
mov
dec
lcall
movb
addr16
pop
aad
jge
sub
jmp
fildl
jmp
call
xchg
dec
sub
ds
stc
icebp
mov
and
sub
sub
pusha
in
int
fdivr
cmp
ljmp
pop
mov
inc
sub
inc
add
lcall
xchg
ja
jb
mov
push
or
and
shrl
push
outsl
mov
jp
cwtl
sbb
aaa
cmpsl
stc
sahf
adc
cmpsb
inc
dec
pop
jl
aad
loope
mov
mov
cmp
xor
inc
mov
ret
les
push
data16
jnp
shrb
rorb
and
loop
sub
mov
data16
cli
das
enter
outsb
jecxz
cmp
iret
movsb
sub
sbb
jo
je
cmpsb
push
pop
and
push
loopne
shll
cld
repnz
lods
dec
rcll
xlat
ficoms
xlat
leave
jmp
mov
xchg
je,pn
mov
xchg
xchg
mov
adc
fnstcw
cmpsb
imul
outsl
cmp
sub
xor
mov
lcall
fisttps
xor
mov
cmp
test
sub
sub
mov
mov
cmp
mov
push
sub
mov
cmp
je
cmp
adc
push
stc
mov
ljmp
incl
in
fdivs
jg
faddl
inc
imul
pop
fsub
lahf
pop
sbb
adc
icebp
push
divl
pop
add
add
mov
insl
xor
cmp
mov
pusha
test
xor
mov
movsl
add
call
out
lahf
jb
jnp
xlat
xchg
fistps
sbb
cmp
pop
push
cld
andl
cmp
adc
adc
subl
shll
mov
adc
pop
scas
loope
push
dec
aas
dec
outsl
das
int3
sub
insl
mov
fs
and
adc
inc
fiaddl
shlb
mov
in
push
loop
add
orb
out
jle
adc
add
out
sbb
cmp
insl
cwtl
jnp
dec
mov
add
adc
cmpsl
xchg
mov
xchg
repnz
add
cmc
mov
dec
push
lahf
pop
jle
lods
push
loop
pop
and
and
or
lods
jbe
and
or
push
aaa
enter
cmpsl
addr16
sbb
mov
pop
pop
lds
or
ljmp
mov
mov
add
lahf
xchg
xlat
pusha
notl
sub
fwait
adc
iret
mov
stos
fisttpll
stc
push
add
fsubrl
pop
sub
jl
test
fsubrp
add
insl
jge
inc
push
in
lods
mov
out
imulb
popa
scas
sub
test
lods
pop
push
cmp
adc
and
pop
ljmp
mov
or
adc
shr
scas
inc
call
mov
jl
pop
cs
mov
mov
or
xor
dec
and
mov
add
inc
and
std
aas
sbb
push
adc
stos
data16
jg
mov
push
mov
mov
into
fsts
jo
push
add
bound
scas
xor
out
test
fidivrl
mov
cmp
push
or
imul
insl
pop
inc
jl
nop
clc
getsec
mov
rorb
sar
inc
cld
mov
bound
push
cmp
adc
mov
add
shlb
push
push
pusha
ds
nop
ds
or
sub
into
lods
cltd
hlt
cmp
sub
mov
mov
sti
adc
cmp
xchg
and
xchg
cmp
and
sub
pop
mov
pop
movb
jbe
loop
add
mov
in
sub
imull
mov
pop
test
cmp
add
inc
lods
fcmovnu
in
inc
push
mov
stos
push
aad
lahf
insl
dec
dec
mov
cmp
scas
push
fcoms
jb
pop
jmp
mov
cltd
fs
and
adc
mov
mov
push
mov
xchg
idivb
lret
sbb
jmp
mov
std
push
loop
fidivrl
lods
jle
int3
stos
jne
xor
pop
repz
push
dec
sub
inc
ror
push
dec
jnp
cmp
add
jno
sbb
mov
movsb
sub
or
std
jmp
dec
cwtl
mov
adc
jns
xor
lcall
negb
notl
mov
xchg
xchg
xacquire
sub
js
mov
inc
rcrb
inc
sbb
test
imul
in
jnp
data16
arpl
dec
pop
xchg
rcrl
ljmp
lods
or
ja
movsl
dec
ret
sahf
icebp
sahf
mov
push
iret
jg
inc
ficompl
fcompl
test
ret
dec
xchg
inc
xchg
xchg
cld
jmp
cmpsb
push
stos
sti
das
mov
dec
or
mov
iret
mov
xchg
lcall
icebp
inc
mov
mov
inc
movups
shll
imul
push
lret
sti
jno
xor
enter
rol
jp
mov
mov
push
inc
jl
mov
or
inc
sti
sarb
mov
xor
mov
fcmovnu
pop
sbb
faddl
and
int
sub
push
and
aad
notb
mov
cmpsl
push
loop
mov
ffree
ret
aas
aad
xor
sbb
push
and
mov
lret
fdiv
xchg
add
mov
popl
stos
mov
mov
mov
lods
pushf
sub
pop
ds
dec
inc
fldl
inc
test
mov
cmp
add
cmc
add
cltd
pop
mov
test
pop
mov
iret
scas
mov
aam
inc
in
es
inc
dec
nop
cmp
sbb
inc
pushf
xchg
enter
movsl
roll
add
iret
mov
insb
jb
out
jno
lock
aam
setl
in
lcall
xchg
lds
xlat
jno
imul
xor
push
push
mov
xchg
and
sbb
cmp
scas
fiaddl
es
jo
sar
xchg
or
loop
or
rclb
outsl
and
out
shrb
movsb
cmp
xchg
cld
cli
ret
push
cs
lock
in
mov
insb
cmpsl
fisubl
or
les
scas
mov
dec
jbe
nop
or
imul
mov
repz
outsl
push
sbbl
and
in
outsl
es
jae
push
fcomps
jp
mov
push
push
jnp
mov
cmp
jl
aaa
mov
sbb
rcr
cmpsb
xor
pusha
sti
hlt
test
xor
mov
jbe
leave
icebp
scas
sbb
scas
jne
pop
mov
mov
shlb
loopne
add
xchg
test
ficoms
imul
or
hlt
mov
call
lret
inc
mov
sub
gs
sahf
imul
iret
xchg
outsb
sub
loopne
ja
adc
loope
pop
dec
add
aam
mov
js
push
cmovo
cmp
lods
add
jo
jle
fisubrl
repnz
push
xor
stc
fisttpll
jle
jo
inc
iret
and
sub
ret
into
pushf
cltd
mov
lret
gs
dec
cld
mov
mov
jecxz
stos
mov
outsl
xchg
fisttpl
pop
push
insb
push
or
jnp
daa
mov
dec
insl
insl
mov
jnp
imul
mov
mov
xor
pop
dec
xchg
dec
cwtl
loopne
scas
add
lahf
jle
jmp
rorb
push
sbb
in
pop
xchg
mov
adc
and
pusha
cmp
mov
pushf
hlt
cmp
outsl
push
pop
push
cmp
dec
mov
inc
ja
sbb
addr16
adc
mov
inc
arpl
xor
mov
stc
push
sti
mov
mov
mov
in
sub
push
movsb
and
out
movsl
xchg
mov
stos
dec
rcrb
popa
sahf
cmp
and
je
push
mov
mov
insl
out
stos
mov
push
nop
nop
jecxz
insb
pop
out
cmpsb
jo
sbb
jbe
cmpsb
imul
jle
mov
repnz
mov
mov
push
jecxz
rcrl
fldt
or
add
and
sbb
mov
bound
xor
jb
in
sub
test
and
xchg
adc
in
adc
push
mov
sub
mov
insb
cltd
or
jbe
addr16
push
dec
data16
pop
xor
icebp
dec
loop
jnp
mov
xorb
push
fsts
addr16
sub
jmp
mov
mov
cmpl
lock
sbb
sbb
and
repnz
cmp
mov
pop
or
push
jl
test
std
push
push
xchg
or
int
int
mov
inc
test
dec
std
imul
enter
icebp
ret
fcoml
or
xor
hlt
sub
data16
add
popf
and
mov
loopne
test
jge
jb
cld
lahf
adc
cmc
cmpb
fsubr
push
inc
cmpl
mov
aam
cmp
xor
mov
add
icebp
outsb
sbb
imul
lahf
icebp
mov
lods
sbb
cmp
shll
xchg
hlt
lock
adc
xor
loop
jnp
negl
in
stos
pushf
cmc
cmp
xlat
shlb
das
jge
or
mov
xchg
jo
adc
xor
mov
adc
xchg
aad
xchg
mov
mov
xchg
mov
sbb
ja
stc
mov
push
mov
or
test
add
arpl
pop
shlb
scas
cli
mov
sbbl
ljmp
std
out
adc
push
add
mov
xor
xor
xchg
and
mov
xor
xchg
push
sbbl
addb
mov
xchg
fs
pop
mov
pushf
mov
xor
lock
ficomps
add
sub
arpl
push
add
mov
sub
cmpsb
movsb
sub
push
sbb
pop
sbb
cwtl
lret
xor
aam
gs
loopne
jnp
out
xor
pop
movsl
enter
lds
out
mov
push
xor
xor
inc
cmc
sbb
fildl
rcll
es
xlat
dec
outsb
adc
sbb
aaa
mov
and
pop
mov
arpl
jnp
aaa
fwait
sahf
adc
dec
inc
or
dec
mov
shlb
mov
insl
jne
stc
inc
fs
inc
add
push
pushf
aaa
push
inc
pop
hlt
pop
mov
mov
add
add
lea
notl
sbb
sti
mov
jg
sbb
testl
test
mov
sub
aad
cli
ljmp
xor
and
fbstp
xchg
ljmp
lahf
cmpl
mov
rcpps
pop
fimull
cmpb
dec
ljmp
push
xlat
cmp
mov
pop
mov
popf
ret
gs
mov
xor
pop
rolb
mov
sub
jns
sub
or
and
daa
sub
xor
sbb
add
sbb
or
test
add
sbb
loope
insb
pop
cmp
push
shl
mov
inc
or
inc
rcl
in
sbb
cmpsl
lock
loop
mov
adc
cmp
pushl
dec
lock
decl
pushf
cli
sub
sbb
test
xorl
cli
lods
cmpsl
xor
cwtl
sub
mov
jnp
pop
lcall
cmpsl
inc
les
outsb
test
and
sub
push
mov
and
mov
or
adc
mov
dec
scas
int
test
sbb
mov
jnp
cmp
and
mov
xchg
addr16
push
das
gs
sbb
test
lods
dec
in
pop
jo
std
int
mov
leave
sahf
push
lods
mov
pop
or
call
or
xor
shlb
out
out
pop
jmp
jge
inc
mov
cmp
dec
sbb
xchg
cs
fbld
lea
xor
xor
xchg
std
cld
icebp
or
pop
fidivrs
inc
sbb
daa
jbe
or
lahf
cmpsb
fiaddl
test
jmp
fnstcw
inc
add
loop
sub
push
inc
jbe
rcll
hlt
sub
xchg
mov
pop
test
mov
mov
xchg
push
les
repnz
pusha
push
cld
ret
mov
loopne
jb
xchg
loop
inc
cmc
inc
cmp
rcl
mov
mov
hlt
mov
repz
loope
clc
dec
je
stc
pop
popl
adc
repnz
pushf
fadd
std
inc
in
lret
push
mov
ja
into
and
lret
add
mov
dec
lret
fs
jp
mov
adc
ficoml
or
in
xchg
lods
lods
fbld
sub
inc
push
pop
popf
xor
xchg
xor
xlat
mov
leave
mov
mov
mov
pop
test
dec
pop
dec
cmp
push
jl
add
mov
lret
or
test
shll
adc
jb
or
es
stos
cmp
jecxz
mov
xlat
imul
mov
ljmp
pop
in
outsb
pop
cltd
imul
popa
mov
adc
push
stos
imul
mov
jns
lods
imul
or
dec
and
adcb
mov
sbb
push
pop
int3
cmp
dec
loope
push
stc
mov
add
pushf
adc
or
dec
xorl
loope
dec
sub
les
sub
mov
inc
dec
sub
lock
add
in
aaa
pop
enter
mov
cmp
jbe
ja
mov
lcall
adc
dec
pop
nop
pop
sti
jns
mov
and
cmpl
adc
pop
sti
dec
sub
faddl
push
jge
mov
push
outsl
or
iret
mov
movsb
mov
repz
jge
int
pop
sahf
jnp
iret
mov
mov
push
ds
and
test
loope
divl
leave
jecxz
ret
or
pop
jp
cmp
out
mov
jp
mov
jbe
orl
sub
dec
jl
fwait
pop
clc
push
cs
cli
and
lcall
repz
movsb
pop
xchg
sub
xchg
xchg
add
movsb
pusha
inc
or
mov
arpl
xor
dec
pop
mov
shrl
test
jnp
test
mov
cwtl
mov
roll
push
fnstenv
mov
dec
add
dec
inc
pop
test
mov
add
mov
data16
mov
xchg
mov
outsb
push
or
jle
xchg
adc
mov
call
loop
out
inc
dec
mov
sub
outsb
sahf
mov
add
lret
dec
loop
sub
add
mov
into
imulb
add
push
clc
add
in
leave
sbbl
out
xchg
insb
xor
mov
ret
or
nop
adcb
pop
push
inc
je
les
ljmp
push
jg
mov
lods
mov
popa
mov
jle
push
cmovl
push
mov
mov
icebp
out
popf
pop
and
into
std
xchg
or
lds
cmp
inc
pop
push
add
push
push
movsb
xor
cmp
int
and
xchg
and
jnp
cmp
out
fwait
aad
filds
cmc
mov
fcoms
call
lea
xor
stos
shll
cmp
push
fisubs
jns
cwtl
imul
or
addr16
mov
xor
mov
inc
pop
mov
inc
xchg
imul
int
fwait
lock
cli
int3
mov
ret
mov
adc
dec
add
or
fs
ds
in
xor
xchg
nop
mov
mov
pop
and
and
cmp
add
ret
idivb
xor
imul
push
fwait
adc
sub
test
add
xchg
sub
pop
push
ja
icebp
loop
pop
hlt
mov
insb
mov
jle
cmc
lds
inc
push
sub
mov
fwait
and
es
out
mov
fimull
xchg
jns
jns
xor
xchg
cmpb
xor
and
into
fiadds
sti
cmp
push
fdivrp
cmp
mov
push
sub
cmp
add
cmp
cwtl
fmull
cmp
push
es
inc
inc
nop
mov
jbe
divl
dec
cli
shll
push
insl
xchg
jne
or
into
mov
dec
insb
outsl
push
xor
inc
inc
das
std
ror
ds
les
jle
pop
adc
pop
loope
mov
pop
enter
in
inc
adc
pop
jmp
enter
movsl
add
fiadds
jmp
or
jp
xor
add
pop
adc
push
jbe
xor
xor
mov
out
dec
lret
and
adcl
out
lds
mov
popa
mov
addr16
jne
xlat
les
into
jge
mov
ljmp
scas
push
aas
xchg
jl
xchg
sbb
mov
xor
cmpsl
mov
inc
inc
jecxz
leave
jl
mov
jne
cld
arpl
ja
jl
mov
pop
inc
cld
pop
repz
ret
jne
add
mov
pop
inc
ss
fwait
mov
imul
sub
push
jb
dec
popa
or
sub
jne
mov
or
cmpsb
inc
jle
pop
xchg
pop
jno
dec
mov
ja
xor
or
cwtl
arpl
pop
adc
dec
xlat
lock
icebp
sub
inc
inc
out
mov
add
dec
lods
int3
sarb
clc
mov
inc
pop
mov
test
mov
jmp
sbb
je
and
pop
mov
and
pop
jno
push
arpl
push
test
mov
jae
jo
mov
adc
and
push
mov
aas
in
bound
mov
ss
inc
mov
clc
in
rcl
inc
push
or
neg
cli
sub
push
dec
shll
jbe,pt
pop
push
out
jo
lods
int
mov
pop
dec
cmp
cs
lea
sahf
rclb
aam
xor
jmp
push
js
icebp
nop
sub
and
inc
mov
rol
xchg
mov
mov
sbb
mov
popa
pop
add
pop
xor
xlat
dec
aam
test
push
sub
loope
cmp
push
push
push
adc
ss
mov
add
shlb
andl
or
scas
notb
pop
cmpsb
insl
cmp
push
mov
xchg
adc
or
jle
cmp
sbbb
ja
push
shrb
hlt
loop
sbb
sub
jl
xchg
idivb
mov
cmc
subb
sub
pop
stc
sbb
lea
or
mov
pop
mov
or
lret
push
out
bswap
sub
leave
ljmp
hlt
cmpsb
cmpsl
cs
jae
dec
add
aam
lret
std
adc
arpl
shrl
cmp
imull
add
add
sub
fwait
adc
and
sub
xor
int3
stos
stos
add
sbbl
cli
push
or
sbb
cmp
repnz
push
jmp
push
jb
mov
add
add
push
fmuls
mov
dec
pop
imul
xchg
movsb
lret
mov
insl
add
jbe
push
loopne
jge
mov
sahf
jg
push
insl
gs
movsl
lret
add
out
push
xchg
es
mov
sarl
add
or
outsl
stc
cmp
mov
sbb
pusha
fs
nop
ficoms
jo
mov
sti
inc
insb
cld
xorb
add
movsb
popf
daa
mov
sbb
enter
bound
int
xor
and
movsb
scas
xchg
or
add
jae
add
pop
add
pop
rol
jg
rcll
cli
pusha
int3
arpl
cmp
mov
inc
pusha
ret
push
lock
bound
test
sub
sbb
imul
mov
jb
imul
sbbb
dec
gs
inc
inc
mov
add
fnop
andb
insb
sub
add
lcall
mov
inc
subl
ljmp
mov
mov
mov
call
les
jo
xor
inc
xchg
shrb
stos
js
movntps
xchg
mov
decl
push
sub
or
or
out
xchg
cmp
imul
pop
js
pop
sbb
rcll
xchg
and
mov
lods
aaa
pusha
jae
pop
gs
jae
xorb
fldcw
sahf
push
xlat
push
add
inc
pushf
add
mov
sbb
loop
jnp
ja
aas
mov
adc
mov
lcall
in
mov
inc
dec
cld
sbb
xchg
cmp
pop
xchg
lods
test
xchg
pusha
repz
inc
ss
mov
mov
addb
and
sub
sub
dec
dec
fs
outsl
cmpsl
lret
lret
lahf
imul
div
mov
sub
pop
sbb
sahf
jmp
test
push
xor
repz
inc
mov
mov
sbb
in
je
sbb
cwtl
scas
pop
mov
pop
out
pop
xchg
scas
sti
cld
outsl
mov
pop
xorb
mov
jg
pop
mov
in
lods
jnp
stos
xchg
or
or
sub
in
loopne
jecxz
or
icebp
sahf
notl
cwtl
xor
ja
dec
scas
loopne
mov
in
daa
sbb
ss
dec
cmp
inc
mov
loop
adc
into
inc
es
test
imul
inc
popf
dec
rorb
in
push
fwait
pop
addb
mov
sbb
out
ds
add
xor
adc
push
scas
sbb
lcall
mov
inc
xchg
lods
mov
xchg
out
cmp
fbstp
jle
add
addr16
std
mov
pop
cmpsb
bound
aas
jo
mov
jbe
and
inc
sti
in
mov
aam
jle
enter
mov
sub
xor
outsb
pusha
inc
pop
xor
jle
out
je
stc
roll
call
out
xlat
sub
sub
fidivl
sbb
scas
rcrb
pop
lods
push
xchg
pop
test
xor
imul
iret
mov
call
jmpw
push
movsl
adc
movsl
and
cmp
sub
or
loop
sub
push
shlb
rcrb
repnz
les
inc
sub
in
mov
push
or
aam
sbb
mov
sbb
test
in
xchg
sbb
lds
test
inc
insl
or
sbb
paddusw
rep
ljmp
fwait
js
mov
push
ffreep
mov
inc
cmp
adc
imul
mov
jne
xor
mov
ret
and
dec
cltd
xchg
sub
out
sub
clc
pop
movsl
push
mov
ret
fsubrs
leave
arpl
fstpl
and
push
xchg
das
loope
or
and
test
out
mov
sahf
mov
imul
or
dec
scas
scas
mov
and
push
sub
sbb
sbb
pop
mov
inc
add
fimuls
sbb
mov
or
push
stos
jp
rcrl
out
sbb
xchg
lahf
in
mov
out
imul
stc
je
mov
xchg
cmp
xchg
mov
daa
sub
enter
movsl
jae
adc
in
and
lret
sub
sub
dec
pop
fnsave
andb
mov
mov
popa
int
lret
jge
out
inc
mov
mov
inc
ret
or
adcb
gs
jnp
or
mov
pop
adc
bound
insl
mov
call
stc
xor
aas
push
ljmp
jge
mov
jmp
out
pop
shrb
mov
adc
daa
into
adc
mov
lret
out
cmp
xor
xchg
aas
push
push
pop
dec
test
lods
mov
mov
outsl
push
xor
cmp
xchg
movl
xchg
adc
jo
pusha
fstl
jo
jge
mov
mov
test
sub
inc
cld
jecxz
adc
arpl
cmp
imul
out
sti
adc
cmp
jmp
jae
push
lea
cmp
jnp
dec
loop
jns
jmp
into
mov
shlb
pop
stc
outsb
add
imul
mov
inc
pusha
lods
pop
addr16
mov
mov
or
sbbl
adc
lret
xor
int
cmc
fbld
enter
dec
jle
out
inc
mul
jb
mov
test
mov
in
cld
lahf
cmp
fwait
mov
movsl
mov
lea
xchg
nop
mov
lds
mov
cmpsl
mov
push
jp
jne
inc
push
std
lret
mov
insl
dec
cmpsb
testb
adc
js
inc
mov
aad
lds
dec
or
icebp
adc
fiadds
mov
ss
popa
call
xchg
sbb
cmp
mov
pop
cltd
jns
xchg
cmpsb
movsb
xorb
push
fsubr
pop
out
lea
enter
jb
mov
sbb
jecxz
xchg
pop
lods
fistl
or
jmp
lock
mov
xor
ds
scas
add
and
sbb
fsubp
push
mov
and
pop
movsb
push
or
lret
mov
or
jo
adc
sub
xchg
insl
push
lea
xchg
fucom
imul
xchg
or
mov
mov
sar
pop
rclb
sub
loope
pop
cwtl
lret
jl
into
loope
xor
insb
mov
cmovl
dec
fld
hlt
int3
das
sbb
jmp
ss
sub
adc
sbb
int3
pushf
or
jnp
or
mov
xchg
adc
cld
jecxz
shlb
inc
and
imul
add
push
mov
movsb
cmc
push
test
and
fs
mov
and
push
test
lock
dec
popf
out
negb
sub
mov
push
push
in
hlt
ds
xlat
imul
ss
aam
lock
push
push
jmp
dec
mov
xchg
std
popa
jns
push
stc
dec
or
hlt
jno
mov
jno
dec
mov
cld
mov
sarb
out
push
mov
lea
mov
fcompl
lods
cmpsb
mov
push
dec
sub
lret
mov
mov
ror
xchg
sub
or
inc
aaa
push
pop
pusha
loope
leave
loope
insl
pushaw
ret
aaa
inc
pop
inc
movsb
pop
add
in
out
cld
sub
clc
es
mov
addl
shr
hlt
mov
xchg
out
cmpsl
imul
push
loope
neg
loop
mov
xor
inc
sbb
mov
rolb
add
fdivs
hlt
or
pushf
sbbb
ds
fsubrl
push
dec
icebp
mov
mov
popa
out
into
lahf
outsb
mov
shr
push
int3
jecxz
cmp
push
adc
mov
out
mov
dec
jne
nop
sub
jmp
stos
leave
sti
int3
jmp
and
and
ret
mov
outsb
je
adc
pushf
jecxz
out
xchg
and
xchg
mov
in
dec
orb
mov
imul
pop
in
inc
in
lods
mov
mov
xchg
scas
xchg
xor
lahf
sub
repnz
mov
add
ss
jg
sbb
xchg
subl
aas
and
in
lahf
xchg
aaa
dec
mov
or
pop
int
scas
sub
mov
push
jmp
mov
sub
xchg
in
xchg
cmp
jp
bswap
cmp
add
dec
dec
cs
std
jns
mov
mov
mov
loopne
in
sbb
jp
pop
aam
xchg
in
cmpsb
and
les
outsb
iret
ds
insl
fnstcw
cltd
sub
push
jl
lods
mov
imul
test
aaa
add
call
jnp
sarb
stos
test
sub
out
mov
clc
scas
rolb
adc
repnz
mov
mov
insb
les
stos
xchg
xlat
test
push
sub
mov
ret
push
fdivrl
jecxz
scas
adc
mov
cli
or
cs
decl
mov
subb
in
test
jbe
cmpsl
ret
mov
lods
and
jb
ds
arpl
stos
cmp
fadds
sbbl
xchg
sarl
mov
push
cs
mov
lods
in
mov
cmpsb
mov
sub
add
popf
push
pop
or
mov
pop
insb
ret
fcoml
cmpb
hlt
cltd
das
addb
push
xchg
adc
mov
mov
ljmp
mov
or
lods
or
push
addb
ficompl
sarl
lea
push
mov
out
jecxz
inc
pop
xor
fs
hlt
movsl
cmp
add
int3
sbb
arpl
mov
lcall
mov
pop
lods
mov
mov
loope
cs
outsb
cmp
iret
pop
mov
addr16
jp
and
lods
pop
roll
push
cmp
hlt
aam
fcoml
inc
mov
mov
push
jno
pop
scas
and
popf
lcall
data16
mov
adc
lock
jmp
in
fs
cmc
inc
loope
js
imul
jecxz
outsb
pop
add
sti
cmpsl
xchg
xchg
mov
pop
inc
mov
xchg
sbb
in
frstor
mov
mov
adc
ret
in
push
sub
pop
xchg
mov
mov
pop
jnp
movsb
sub
stc
subl
add
jae
pop
outsb
sti
aas
mov
icebp
mov
and
xchg
adc
insb
inc
pushf
shrl
pusha
rolb
aad
add
cmpsl
mov
push
add
fadd
fisubl
cmp
fnstsw
mov
out
adc
cli
xchg
mov
or
fdivs
lret
out
clc
cld
add
std
hlt
mov
test
imul
mov
mov
push
ret
mov
js
cmp
adc
ret
hlt
icebp
inc
push
mov
push
das
out
adc
sub
xchg
xlat
pop
out
xor
clc
sbb
mov
pop
jmp
insl
nop
mov
fisubrl
xchg
fdivr
push
push
out
sbb
mov
cmpb
fmull
dec
fldt
loopne
cmp
inc
insl
jns
ljmp
lods
fildll
sub
pop
dec
sub
pusha
rcrl
cmpsl
jne
or
xchg
daa
or
mov
push
mov
push
dec
rclb
jecxz
cltd
lds
lahf
stos
je
notl
test
mov
aam
xchg
pop
sbb
mov
stos
or
imul
sbb
dec
into
out
loop
in
lea
xchg
aam
sbb
stc
sub
sbb
jnp
push
clc
sti
lock
add
mov
cs
jge
push
jbe
sbb
inc
nop
pop
jb
shll
mov
add
out
fidivrl
subb
shrl
push
iret
add
dec
jae
and
mov
add
notb
dec
movsb
cmp
rorl
mov
gs
jecxz
pop
push
nop
aam
jg
mov
pusha
cmp
in
xlat
inc
loope
and
xchg
sub
rolb
add
mov
mov
and
push
push
ljmp
mov
rcl
and
sbb
mov
inc
fsubs
jnp
fidivl
inc
fistl
lea
bound
cmpsb
hlt
xor
int
js
jle
xor
and
cmpsb
inc
inc
outsb
and
sub
test
inc
and
movsl
cli
push
and
icebp
sets
pop
mov
xchg
lret
leave
push
or
xlat
sbb
cltd
inc
dec
inc
adc
push
sub
xchg
fcompl
data16
dec
ret
push
cmc
int3
int
push
sub
adc
adc
out
mov
outsb
sbb
out
pop
fmulp
inc
test
push
push
sbb
inc
push
js
stc
cmc
in
push
insl
arpl
mov
add
jo
cmpsl
jl
jnp
inc
loope
es
xor
cmc
gs
pusha
mov
jns
int3
gs
lds
dec
or
xlat
adc
inc
sub
xor
imul
sqrtps
stc
sbb
xor
lret
adc
insb
mov
push
xlat
push
or
int3
stc
cmp
sbb
dec
mov
xor
movb
mov
adc
adc
inc
in
insb
cli
jmp
pusha
and
fildll
inc
xchg
test
out
les
into
and
mov
push
rcr
pop
pop
mov
ss
popf
icebp
lock
dec
sysret
faddl
movsl
test
out
aam
ja
push
aas
adcl
ss
and
and
filds
out
jbe
dec
lea
add
lea
sbb
dec
jo
mov
add
in
sbb
mov
push
mov
jns
ljmp
int
cmpsb
mov
daa
iret
clc
xchg
xchg
ljmp
xor
sbb
mov
std
leave
pop
dec
mov
lcall
push
xchg
pop
test
sub
sub
dec
out
mov
push
pop
add
and
xor
add
inc
and
call
aam
in
sbb
out
and
dec
jp
pusha
pop
xor
push
cwtl
sub
jae
or
mov
mov
imull
fdivr
outsb
mov
sarl
int
jne
inc
in
sub
lcall
loop
or
test
or
push
cli
xor
rcll
jmp
add
xchg
mov
dec
pop
cmpsb
jae
pop
sub
lret
mov
mov
or
shll
push
data16
imul
lods
sbb
add
pop
jne
imul
xor
mov
cmp
or
push
pushl
mov
and
or
inc
and
arpl
mov
jb
sub
push
subl
jmp
rcll
gs
lods
mov
lds
pushl
dec
aas
repz
test
jo
mov
and
pop
out
jb
and
mov
inc
lods
and
pop
out
cld
sbb
mov
xchg
lods
add
lret
sub
es
stos
fwait
mov
daa
stos
es
in
or
idivb
sbb
and
cmpsb
add
jno
lea
ret
push
cmp
sbb
lahf
fisubl
sbb
cli
cs
or
cmp
add
adc
inc
xor
test
int
shll
push
xchg
jmp
ss
cmp
mov
pop
mov
and
mov
or
out
je
movb
pop
jge
push
aas
push
scas
sbb
fsubp
push
and
mov
jne
pop
inc
inc
inc
int3
push
dec
pusha
das
lcall
fstpl
pop
xchg
pop
fdivl
inc
popl
inc
xor
lret
leave
test
ret
adc
imul
mov
push
mov
inc
out
outsb
test
std
adc
add
loop
stos
lea
cmp
cmp
mov
sbb
ds
rcrl
lds
jno
rcrl
shrb
ret
ret
mov
add
les
popf
xor
fisubrs
popa
cmpb
sbb
popa
or
push
jle
and
push
jbe
xor
std
adc
mov
repz
decl
sub
adc
cld
movsl
xchg
dec
mov
pop
les
sbb
cmp
dec
lock
outsb
lcall
iret
cmp
inc
adc
popf
inc
sbb
or
leave
mov
mov
idivl
lock
jbe
data16
sbb
pop
rorl
es
cmp
inc
inc
shll
mov
push
xchg
mov
mov
push
lcall
or
add
in
ja
lret
bound
xchg
sarb
pop
mov
rcll
fwait
lods
cltd
mov
int
mov
ret
mov
iret
jge
fisubrl
xchg
test
loope
sub
push
mov
xchg
jge
or
pop
mov
or
jmp
loope
xor
mov
pop
or
orl
pop
add
cmp
sbb
sbb
inc
cli
xchg
xchg
std
pusha
push
xlat
in
loope
call
inc
dec
push
add
fisubrs
ds
or
xor
adc
jns
cmp
adc
mov
jo
jge
add
mov
repnz
lcall
push
xor
ljmp
adc
into
cld
in
pop
sbb
xor
es
jno
xlat
filds
fisubrl
inc
jo
mov
xchg
add
xchg
adcb
jp
dec
ret
dec
fwait
out
xchg
and
add
pop
adc
and
xor
or
cld
push
fwait
ljmp
out
fcompl
cmp
sbb
mov
lcall
aas
push
bound
add
fiadds
stc
inc
bound
js
fwait
dec
or
je
cmc
push
jmp
xchg
insb
xchg
mov
xchg
mov
mov
and
fistps
jg
mov
mov
pop
rorb
cmpsl
sbb
xor
in
inc
imul
rorl
inc
je
pop
addb
push
imul
lcall
dec
sbb
add
mov
neg
xchg
xor
subl
jge
mov
xchg
imul
jmp
les
lcall
bound
pop
pop
adc
cmpb
and
sbb
stos
jl
mov
inc
int
pop
in
jge
xor
xor
xchg
dec
iret
inc
bswap
push
inc
or
mov
adc
jmp
jnp
adc
fildll
aad
lcall
lea
and
and
icebp
mov
pop
mov
fdivrp
xor
sarl
dec
lods
add
mov
pop
cwtl
rorb
mov
cs
jnp
mov
hlt
jnp
stc
mov
mov
ds
fs
and
pop
cs
rclb
int3
pop
mov
jg
aad
inc
lret
push
scas
es
gs
cmc
mov
shll
dec
mov
ret
cmp
jne
icebp
adc
adc
xchg
dec
lahf
xor
mov
push
and
aam
fistl
sbb
movsl
mov
adc
cmp
filds
and
xchg
dec
pop
movsb
jp
out
jo
sbb
into
mov
jno
test
out
in
test
lock
fsubrs
insb
fidivrl
test
stos
lds
cs
mov
je
mov
adc
mov
xor
repnz
cli
mov
sbb
cli
and
shll
in
jecxz
movsb
or
xchg
jb
or
pop
add
push
xchg
cld
mov
loopne
int3
or
out
cmp
cmp
aad
cmp
stc
inc
mov
mov
ret
lods
sbb
jmp
jns
adc
lcall
and
sbb
dec
mov
jne
or
push
test
imul
jb
rolb
cmp
mov
gs
mov
shl
mov
xor
sub
mov
add
and
xchg
pushf
lret
aam
stos
roll
sarb
cmp
lahf
cmp
lds
inc
in
xor
dec
jmp
dec
mov
inc
stos
lret
clc
std
mov
dec
in
jbe
push
pop
daa
or
dec
push
or
stos
inc
or
fstl
cmpsl
cs
pushf
or
popf
iret
bound
rcrb
mov
xor
test
fidivl
mov
push
sub
dec
fimuls
xor
pop
hlt
mov
ds
daa
roll
sbb
rcrb
js
iret
fistl
sbb
mov
push
push
add
movsl
movsb
movsl
aaa
fxch
into
mov
xchg
aad
inc
scas
scas
pop
xor
cwtl
inc
jo
lods
sub
ret
jns
or
jg
out
mov
pop
repz
mov
mov
flds
test
popf
sti
int3
fists
test
sbb
pop
insl
xchg
sub
fimull
xchg
lahf
push
pushf
bound
adc
xchg
inc
lea
mov
insl
fnsave
mov
push
lock
ja
lcall
sub
jecxz
adc
sub
and
mov
sbb
jg
fiadds
mov
js
ljmp
sub
jg
mov
mov
pop
mov
je
in
jb
repnz
sbbl
jns
leave
lods
xchg
sbb
push
loop
filds
sub
in
icebp
pop
jge
inc
jno
movsl
adc
xor
jb
hlt
sbb
decl
jb
pop
xorl
mov
mov
mov
ss
inc
mov
in
cmpsb
jo
dec
pop
ja
lcall
lret
pop
xor
enter
cmp
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
inc
inc
fisubrl
cwtl
lret
sar
xchg
test
pusha
or
dec
jl
jae
dec
cmp
repnz
out
imul
jb
mov
lea
mov
insb
mov
les
cli
hlt
int
dec
inc
addr16
mov
outsl
pop
sarl
icebp
daa
lahf
test
loopne
pop
scas
jbe
add
mov
out
insb
lock
pop
pop
jo
insb
inc
les
std
mov
fbstp
mov
mov
pushf
ret
add
and
and
les
inc
scas
aas
sub
jbe
insb
jbe
fisubrl
sub
jge
push
je
imul
xchg
sbb
stos
sbb
fsubl
cmp
inc
cmpsl
mov
mov
shl
cltd
mov
adc
xchg
addr16
orb
les
pop
adc
jge
mov
mov
js
pop
lods
and
cmpb
and
or
ds
imul
dec
imul
fcomps
outsl
jge
dec
lods
pop
jp
pop
sub
or
fdivr
xlat
dec
push
test
sub
fmulp
push
jmp
imul
mov
mov
out
arpl
das
lret
in
add
xchg
inc
inc
mov
int
out
sub
xchg
addr16
dec
jg
jne
dec
shlb
pop
out
mov
adc
into
mov
icebp
adc
lods
loop
push
push
cmp
xchg
cmc
fwait
sub
jmp
sub
shl
sbb
sub
xor
int
ljmp
inc
pop
cmp
mov
add
cmp
pushf
xor
stos
pop
sbb
mov
cld
in
mov
das
test
repz
pop
mov
pushf
or
idivl
outsb
jle
movsb
pop
call
jg
iret
mov
sbbb
mov
nop
jge
popf
test
mov
ds
push
aad
in
ja
lods
sub
addr16
push
push
xchg
test
outsb
ss
jp
fwait
sbbl
mov
out
nop
daa
imull
rorl
sti
lea
movsb
out
stc
loope
test
jnp
test
imul
xchg
mov
push
in
dec
sarb
inc
jmp
in
adc
repz
xchg
push
aaa
aad
mov
stos
mov
data16
roll
push
sub
push
adc
call
rorb
das
cwtl
xchg
inc
test
fldcw
in
or
idivb
icebp
outsl
fsts
xor
dec
xor
in
xchg
int3
test
popf
jbe
outsl
inc
jno
xchg
inc
mov
call
xlat
sub
xor
pop
adc
aad
jmp
mov
xor
inc
push
je
mov
cld
nop
movsb
mov
jne
jle
mov
fdivrl
stos
sbb
or
sti
arpl
sbb
sahf
lock
inc
jae
ret
pop
pop
stc
pop
cmp
xor
shl
dec
popa
mov
push
adc
sub
ljmp
pushf
loop
push
clc
sub
push
pop
add
xor
shlb
sub
and
mov
pusha
js
push
daa
push
fcoml
inc
fstp
sub
leave
adc
push
mov
mov
push
fstpl
imul
cmp
add
rolb
mov
enter
sub
cmpl
mov
jg
ret
les
stos
dec
das
jbe
mov
lret
dec
push
push
mov
and
adc
jmp
jmp
sbbl
dec
sub
les
scas
ret
or
jne
cltd
cmp
mov
cs
lea
mov
aaa
ret
je
in
xchg
aam
pop
adcb
cmc
mov
stos
push
leave
adc
mov
in
cwtl
js
inc
or
jno
insb
pop
inc
call
loop
aas
sarl
icebp
loope
sbb
xor
stos
push
sbb
mov
fwait
pop
in
icebp
mov
lods
sbb
push
sbb
insb
jb
arpl
mov
push
out
js
cmpsb
sbb
mov
mov
cmpsl
xchg
fdivrp
inc
mov
inc
adc
mov
sbb
stos
icebp
mov
push
cltd
lods
and
mov
mov
mov
scas
cmc
fildl
in
cwtl
clc
xchg
add
pop
and
jnp
xchg
mov
lds
shrd
out
push
xchg
nop
cmpsb
mov
pushf
adc
sbb
pusha
mov
inc
call
sbbl
rorb
mov
int
cmp
adc
test
pop
xor
push
pop
test
jns
and
sahf
xchg
sub
inc
test
fdivl
jb
push
xor
stos
dec
and
mov
scas
mov
clc
xchg
lea
in
ljmp
int3
in
inc
shl
out
aad
add
dec
movsl
adc
pop
mov
int3
add
lods
xchg
loope
push
dec
mov
out
es
add
repz
xor
xchg
dec
popf
pop
mov
ret
xlat
loop
ljmp
mov
dec
mov
sub
daa
pop
sahf
xchg
pop
loop
aam
pop
out
jne
sbb
ljmp
xor
leave
dec
fldl
push
jecxz
push
in
data16
lea
mov
add
mov
mov
test
cmc
inc
push
test
mov
or
jnp
sar
aaa
jo
jmp
jp
pusha
lods
xchg
jmp
lods
push
rolb
in
sub
popl
in
xor
and
mov
shl
push
mov
and
jo
popf
mov
mov
ret
filds
jp
insb
xor
lret
add
jecxz
xchg
push
sub
insl
loope
pop
pop
aad
push
outsb
fldenv
xchg
nop
and
ret
mov
or
jg
dec
psllq
sti
dec
adc
jecxz
or
push
jge
adc
cmp
push
roll
dec
clc
push
mov
push
or
stos
sub
adcb
xlat
cmp
cmc
and
repz
in
test
push
jns
mov
daa
add
push
pushf
ret
fcmovbe
movsl
adc
mov
lds
sub
and
movsb
jns
adcl
les
pop
por
or
movsb
data16
push
dec
xchg
add
mov
ret
inc
setbe
fnstsw
jnp
shll
lahf
addr16
xor
idivl
ret
idivl
or
hlt
or
cld
in
mov
or
loopne
inc
adc
int
out
test
push
mov
push
leave
xchg
nop
cs
and
jbe
and
push
adc
add
pop
inc
out
js
jo
in
mov
xchg
xor
fwait
mov
lret
mov
lock
jg
mov
lahf
lret
xchg
testl
jo
mov
cltd
sbb
jge
fsubs
into
addr16
jmp
xor
sti
lods
sbb
gs
fwait
cmp
push
and
ficomps
arpl
xor
mov
sub
pop
enter
cmp
movsb
add
js
fildll
xchg
out
inc
or
jne
cltd
dec
scas
stos
inc
add
std
jno
outsb
mov
xchg
inc
sub
outsb
mov
shlb
and
xchg
pop
dec
loopne
push
pop
les
dec
xchg
cwtl
sub
pop
xor
add
pop
xchg
and
jo
push
jns
shrb
xchg
insl
inc
xchg
mov
sarb
push
aas
lret
sbb
cwtl
ss
xlat
push
fdivs
icebp
cli
add
repnz
aas
in
xorl
fs
push
ljmp
mov
pushf
dec
ja
lahf
mov
sbb
ljmp
pop
jg
dec
push
aad
icebp
pabsw
mov
adc
dec
sub
push
movsl
mov
cmp
cld
xchg
pop
and
or
je
mov
push
test
aam
or
cmpsl
stos
mov
icebp
dec
mov
cmp
cs
add
fisubs
divb
add
mov
insl
jbe
stos
xor
lods
jae
stos
shrb
inc
sbb
or
push
xor
loop
mov
jbe
js
mov
jo
movsb
cmp
xchg
mov
mov
je
jne
xchg
in
xchg
nop
insl
ds
outsl
daa
sub
dec
push
repnz
stc
xchg
inc
in
jns
mov
add
dec
pushf
mov
add
mov
pusha
sub
sbb
add
ret
fmull
fwait
out
push
adc
js
pop
ja
mov
pop
ja
repz
es
fstl
aam
dec
push
inc
loope
cmpsl
jl
or
and
dec
std
xlat
outsl
lods
leave
nop
push
pop
cmp
mov
inc
xor
pop
xor
enter
xchg
loopne
scas
decl
popa
xlat
ret
pushf
insl
sub
ret
sbb
lea
fstp
xor
lahf
clc
xchg
jno
jae
lods
sbb
mov
xor
aaa
aam
popa
jmp
mov
mov
mov
push
cmp
add
das
xchg
lcall
fidivs
mov
jg
pop
or
cs
and
loope
stc
dec
add
iret
pop
aad
cli
fimull
sub
sti
pop
pop
adc
adc
inc
ret
pushf
pop
jmp
push
inc
sbb
mov
sub
jo
mov
and
and
sbb
mov
inc
cld
ret
addr16
mov
push
push
cmp
daa
push
xchg
repnz
popa
inc
in
adc
sbb
mov
mov
push
mov
add
movsb
lods
add
inc
cltd
shl
add
push
jbe
push
mov
dec
xor
xor
pushf
pop
sbb
jle
mov
sar
leave
jbe
and
movsl
cli
push
adcl
inc
loope
enter
add
add
mov
xor
out
cli
jp
push
out
and
fcomi
push
mov
xor
mov
sahf
insl
dec
lret
mov
mov
fstl
mov
pusha
add
jmp
xchg
cwtl
xor
add
int
mov
rcrl
add
pop
dec
and
cwtl
pop
shl
add
fdivrl
push
lcall
fcmove
cltd
jae
ja
popf
dec
mov
mov
mov
mov
pop
mov
mov
stos
orl
jmp
and
ljmp
movsb
enter
adc
sub
mov
aad
filds
push
outsl
lcall
xor
push
sbb
mov
test
and
mov
mov
lea
xchg
mov
pop
nop
sub
mov
lret
inc
jne
add
fstl
jge
stos
iret
movsl
lock
jecxz
mov
inc
fcmovnbe
adc
mov
mov
adc
adc
push
hlt
and
add
lods
sbb
pop
imul
jbe
xor
jl
shlb
lock
sub
lcall
pop
pop
xor
insb
mov
pop
xor
sub
cmc
inc
adc
ret
mov
inc
jmp
leave
or
pop
rcrl
jo
jp
shlb
jnp
aas
out
out
pop
aam
mov
mov
sub
cli
or
fld
sti
xor
mov
xor
and
mov
popa
call
in
push
loopne
loope
dec
pop
push
push
dec
sar
sbb
pop
lret
test
xor
insl
sub
sub
outsb
insl
out
mov
pop
out
es
das
push
xchg
loopne
push
rcrl
pushf
ljmp
push
adc
icebp
aad
imul
and
mov
mov
pop
mov
jle
inc
sbb
add
sbbb
pop
push
add
add
ss
jno
fisubrs
pop
pop
and
and
and
and
or
pop
mov
dec
lock
aas
gs
imul
and
dec
leave
fsubl
inc
stc
das
insl
repz
sbb
iret
in
fimuls
out
pusha
push
ds
cmpsb
sbb
cmp
inc
jo
adc
in
xor
shlb
push
movsb
mov
stc
sbb
sub
dec
mov
repnz
dec
fdivs
cltd
das
fst
icebp
mov
pop
mov
mov
ficoms
inc
push
inc
shl
test
xor
push
and
cld
adc
xor
int3
test
dec
addr16
push
movsl
pop
sarb
insb
scas
mov
stc
mov
call
add
das
sbb
loopne
pop
xor
mov
repz
div
pop
arpl
xchg
in
leave
mov
push
lret
cmc
sbb
movsl
lods
in
adc
mov
int3
mov
jno
sbb
leave
mov
test
cli
in
or
outsb
cmovb
lds
sub
jmp
adc
in
roll
imul
lods
dec
xchg
mov
out
mov
sub
lret
push
xacquire
shl
lods
loope
xor
cmc
shll
inc
imul
mov
subb
push
lret
mov
fisubrl
hlt
in
mov
stc
xchg
jae
repnz
lahf
adc
rcll
cltd
push
jne
sub
mov
sub
pop
pop
ds
bound
loopne
lret
scas
inc
fldl
push
jno
adc
push
push
and
inc
cmpsl
aad
jmp
mov
xchg
ljmp
add
shl
je
loope
pop
dec
adc
aaa
xor
ret
mov
sarb
dec
pusha
inc
sbb
and
mov
cmp
cld
cmc
xlat
mov
jnp
pop
mov
jnp
subl
pop
dec
mov
daa
xchg
mov
gs
movsb
loope
or
out
adc
les
cmp
dec
out
fisubrs
js
es
pop
xchg
in
orl
xchg
inc
sub
sbb
test
call
repz
pushf
shrl
loopne
jp
sub
emms
add
push
add
fs
jnp
inc
addr16
jg
fnclex
jns
adc
jmp
adc
mov
shrl
cld
adc
pop
rol
mov
jb
shr
sub
out
add
hlt
shl
outsb
cmp
std
mov
mov
js
mov
pop
mov
mov
inc
out
or
idivl
cld
gs
pusha
sub
gs
sub
push
test
fsubrl
push
fstl
pop
sbb
lods
xchg
pop
ret
and
in
insl
jge
popf
sub
xor
mov
gs
gs
mov
cli
imul
dec
xchg
iret
add
cmp
iret
adc
mov
cmp
cmp
sbb
hlt
and
movsb
cmp
lcall
jb
leave
leave
int
cmpsb
outsb
iret
xlat
jno
lret
es
jne
mov
movsl
jns
push
es
sub
xchg
bound
mov
je
mov
repnz
dec
repnz
sub
cmp
ret
mov
loop
sub
jmp
shlb
jecxz
mov
pushf
pop
inc
pop
imul
sbbl
mov
lret
cli
pop
push
push
sbbb
insl
nop
sar
nop
aad
ss
sbb
test
inc
das
lds
and
cmp
push
and
sti
push
ficoms
cmc
leave
scas
jge
hlt
and
jp
in
int3
jp
pop
xchg
sarb
test
cmpsb
mov
mov
addb
mov
mov
pop
notl
insb
mov
pop
xor
enter
hlt
jg
or
lcall
inc
in
out
and
popa
scas
aad
jmp
ret
jbe
jmp
sub
nop
scas
call
sub
out
xchg
rorl
insl
cld
dec
mov
out
cmp
xchg
or
ss
add
enter
jecxz
add
mov
xor
adc
mov
sbb
mov
sbb
and
push
subb
add
test
pop
xor
movsl
sub
dec
std
pop
sbbb
add
sub
js
jno
dec
jmp
sbb
subb
push
push
or
push
and
cli
jecxz
or
cmp
test
loop
adc
int
mov
xchg
xchg
adc
jbe
gs
jg
xchg
adc
and
pop
jmp
insl
imul
call
ret
sub
sub
es
jnp
cmp
in
js
pop
fstpl
icebp
sub
sub
cmp
stos
movsl
sub
add
testb
int
inc
xchg
orb
mov
lds
sub
rclb
xor
jp
test
rcl
aam
insb
icebp
mov
stc
cli
mov
push
insl
ret
not
cmc
cltd
mov
out
ret
out
in
push
jmp
int3
or
lret
cs
jnp
ret
stos
addr16
pushf
xchg
dec
insb
mov
cmpsl
mov
loope
clc
jno
fildll
mov
out
fs
xchg
ret
call
pop
cmc
rol
mov
bound
xchg
xor
and
pop
cmp
in
inc
and
or
or
adc
aam
jo
push
mov
push
aaa
cmpsl
lret
scas
and
pop
cmp
aas
dec
sbb
in
push
inc
xchg
je
cltd
mov
in
add
mov
mov
jne
dec
add
inc
imull
lds
jae
pop
test
mov
aad
js
and
mov
scas
dec
push
ljmp
xchg
lds
stc
cmp
cli
xchg
mov
adc
xorb
inc
es
jle
out
outsl
jge
les
mov
enter
jmp
inc
fs
ret
setge
cli
jne
mov
or
scas
mov
push
cmp
repz
push
xor
mov
filds
or
in
daa
sbb
lods
xor
arpl
pop
xchg
xor
add
scas
jmp
mov
adc
xchg
dec
movhps
jmp
clc
jno
mov
arpl
add
or
or
divl
hlt
lahf
adc
cwtl
xlat
xor
sbb
dec
imul
sbb
xor
dec
or
mov
jl
pop
mov
and
mov
or
push
out
outsl
and
dec
or
jbe
int3
ss
cmp
shll
add
adc
shll
mov
pop
mov
mov
les
inc
loopne
fmuls
add
in
adc
mov
add
movsb
push
pushf
sub
sub
popf
and
dec
add
and
pop
add
push
fwait
iret
repnz
ds
ja
or
push
test
lods
jno
test
add
and
and
pop
icebp
pusha
in
xchg
lods
rcrb
jg
test
mov
xor
es
lret
imul
enter
dec
dec
add
ja
lret
jge
cmp
in
filds
mov
outsl
sbb
push
pushf
insl
ds
or
xchg
pop
and
jmp
cmpl
adc
jge
mov
push
insb
mov
fwait
push
add
add
ss
mov
jns
push
jl
mov
cmp
dec
sbb
jnp
jne
test
sbb
ja
ret
or
push
stc
push
cmp
mulb
xor
jno
add
fwait
xchg
fimuls
out
dec
nop
mov
push
or
loop
mov
shl
hlt
test
add
stos
cmpsl
xor
std
fucomi
push
xrstor
outsb
or
cmp
cltd
pop
cmp
xor
mov
lret
stos
mov
jae
dec
sub
and
jle
cli
out
iret
pop
mov
in
test
dec
sub
xchg
jecxz
out
mov
dec
mov
and
xor
push
inc
sbb
pop
mov
cmp
inc
mov
movsl
mov
testl
push
xchg
sbbb
mov
adc
pop
jbe
inc
fmuls
loop
test
arpl
jae
add
loope
and
fmuls
aas
mov
cmp
xchg
jmp
add
fisubrl
jb
adc
push
or
loopne
scas
cwtl
pushf
in
jae
orb
dec
std
push
xor
mov
add
hlt
add
mov
stos
inc
pop
test
mov
int
adcl
repnz
mov
into
shll
pop
gs
icebp
nop
insb
cli
ds
mov
xchg
sbb
stc
dec
int3
pop
pop
push
cmp
divb
popf
shrb
clc
mov
add
jl
xor
jge
add
out
std
xchg
jl
mov
jp
fmul
ror
popf
rclb
add
inc
orl
pop
dec
inc
inc
pop
xchg
andl
retw
mov
and
adc
sub
adc
adc
out
mov
mov
push
jl
inc
cmc
test
data16
insb
jmp
or
pop
lock
mov
push
sbb
bound
fs
adc
xchg
dec
sub
insb
addl
cli
out
ret
enter
les
xchg
ljmp
add
loopne
inc
cmp
add
xchg
jle
dec
enter
push
addr16
add
addl
inc
and
icebp
sub
jmp
outsl
jb
fistl
fists
jnp
add
xor
rcr
pop
loope
cmp
push
das
or
cltd
push
add
pop
xchg
data16
data16
add
imul
add
out
loopne
out
pusha
mov
mov
mov
mov
lret
push
sbb
mov
pop
jmp
sbb
add
push
mov
mov
popf
adc
ja
test
ret
xchg
movsb
test
or
enter
cmpb
addr16
push
cmp
hlt
jl
jo
cmpl
test
pop
cmp
sbb
push
xchg
pop
xchg
orl
cwtl
mov
xchg
jb
enter
cld
scas
mov
sub
sti
dec
push
cmpsl
out
imul
jmp
sub
enter
pop
pop
mov
jae
or
jb
sbb
decb
cltd
push
pop
inc
imul
or
pop
jecxz
or
imul
lods
inc
cli
cmp
mov
push
mov
cmp
hlt
push
insb
stc
repnz
adc
outsl
lock
pop
js
je
repnz
orl
mov
cmp
sub
adc
mov
subb
into
cmp
clc
mov
add
dec
cmp
pop
pop
loopne
pop
aam
rcrl
mov
adc
and
pop
push
ret
pop
shl
mov
sub
sahf
cmp
cli
or
sub
repz
cmp
mov
lcall
addl
sbb
mov
jns
arpl
inc
or
pop
ss
outsl
std
stos
mov
pop
inc
jg
sbbl
push
jns
jns
and
mov
popf
enter
mov
in
mov
into
add
sbb
cmp
into
fisubrl
push
in
push
imul
lcall
xor
in
aam
pop
pop
add
xor
or
sub
push
daa
xchg
nop
xlat
push
dec
cmpsl
jo
stos
rcrb
jo
or
or
mov
out
push
movsb
movsl
ss
adc
es
or
fidivl
std
sbb
cmp
jecxz
xchg
cmp
xchg
icebp
push
loopne
push
cmp
adc
mov
jae
stos
jmp
into
mov
mov
mov
inc
push
pop
enter
scas
stos
pusha
ret
clc
xchg
jbe
push
iret
xchg
jmp
and
hlt
les
ljmp
mov
dec
call
cld
dec
inc
lcall
cmp
test
cs
xor
addl
mov
out
dec
or
icebp
mov
push
sahf
sbb
ss
mov
fadds
pop
and
sahf
orl
std
cwtl
adc
rcrl
inc
pusha
fildll
cmpsb
les
sbb
jae
jl
pop
rorb
pop
jne
fidivl
shlb
out
mov
int3
xchg
xlat
loope
xchg
cs
dec
repnz
or
es
xchg
and
sbbl
mov
mov
loope
rorl
and
gs
cwtl
add
std
add
inc
mov
sbb
repnz
es
rorb
sbb
and
xor
aam
sbb
dec
jo
xchg
push
cmp
jnp
add
cmp
xor
js
pop
mov
sbbl
xlat
call
mov
mov
add
out
jge
mov
jns
in
std
inc
inc
mov
push
mov
cwtl
movsb
ds
cmc
mov
outsb
cs
mov
jne
add
inc
in
mov
sbb
push
scas
adc
xchg
sub
mov
les
test
mov
outsb
sarl
pop
repz
stos
cld
mov
addr16
mov
pop
fmulp
hlt
leave
hlt
out
or
mov
sar
mov
je
mov
rcll
and
frstor
xchg
sti
cmpsl
cli
lea
bound
stos
adc
adc
push
dec
addr16
lahf
popa
lcall
lods
mov
mov
outsb
sti
mov
or
dec
push
cli
mov
xchg
xchg
adc
idiv
ja
roll
and
adc
cmp
out
inc
dec
pop
int3
movb
outsb
pop
nop
push
dec
lret
xorl
mov
mov
test
and
push
les
in
cmp
outsb
and
jmp
or
sub
add
in
cmp
pop
fisttpll
loope
mov
push
push
outsb
rolb
std
out
gs
cmpsl
jge
aas
lcall
shl
scas
xchg
or
push
inc
mov
repz
adc
jb
icebp
jg
adc
pop
xchg
xchg
cli
icebp
or
outsl
mov
pop
imul
repnz
mov
out
push
mov
call
mov
insb
mov
xchg
fs
add
in
adc
lock
lret
shrl
push
dec
mov
scas
jns
lods
rolb
insl
sub
jo
cmp
mov
xor
adc
adc
jge
cmp
dec
fwait
lods
mov
out
sub
loop
adc
add
icebp
mov
outsl
in
pop
std
fdivrl
sbb
test
and
std
push
movsl
cs
fdivl
push
xor
push
xchg
jb
rol
or
push
sbb
loope
les
inc
mov
scas
cmp
cmpsb
mov
xor
es
cli
xchg
out
into
xor
inc
popa
and
push
jp
clc
ds
and
mull
add
fisubrs
inc
mov
divl
sub
jb
cmp
repnz
mov
dec
int
mov
and
std
jae
arpl
inc
test
add
lods
rclb
mov
push
mov
stc
cmp
cmp
sbb
out
call
arpl
mov
out
jo
cltd
pop
shlb
loope
sarb
and
dec
fmull
cs
loop
mov
imul
lret
stos
fcmove
dec
test
sahf
jecxz
outsl
das
push
nop
mov
repnz
xor
xchg
xchg
cld
out
iret
adc
test
fwait
addl
outsl
scas
xchg
inc
sbb
arpl
jl
push
pop
mov
lds
xorb
pop
lods
jge
loopne
xor
mov
fdivrp
or
rcrl
pop
mul
push
push
push
cmp
mov
mov
sub
dec
cmp
xchg
ljmp
inc
insb
mov
int3
push
mov
mov
dec
lods
mov
adc
inc
sbb
lret
mov
sub
fcompl
data16
cmp
fisttps
pop
sbb
shlb
or
sub
call
std
jno
sbbl
pop
pusha
movsb
adc
jo
push
test
jle
es
dec
fiadds
shl
das
imul
hlt
mov
inc
fwait
pusha
pop
stc
jmp
add
ljmp
dec
stos
sub
js
fidivrs
mov
xchg
les
xor
xor
xchg
lds
mov
outsl
xchg
loop
in
ljmp
cltd
pop
push
mov
add
mov
add
xor
aaa
cs
or
shll
sarb
mov
mov
lret
pushf
sub
in
mov
lods
cmp
test
add
mov
add
sub
int3
stos
pop
arpl
fcmove
jmp
mov
adc
jle
xchg
jo
js
mov
pop
in
rclb
mov
sbb
in
sub
mov
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
push
mov
